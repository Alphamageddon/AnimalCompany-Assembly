Type: Nakama.Client/<ImportFacebookFriendsAsync>d__67

Method: System.Void MoveNext()

Disassembly:
	0x03456ED0 TBZ X0, 0x0, 0x3456F64
	0x03456ED4 LDR X8, [X19 + 0x48]
	0x03456ED8 CBZ X8, 0x34570E8
	0x03456EDC LDR X1, [X8 + 0x18]
	0x03456EE0 LDR X3, [X19 + 0x40]
	0x03456EE4 LDR X4, [X8 + 0x28]
	0x03456EE8 MOV X0, X20
	0x03456EEC MOV X2, X31
	0x03456EF0 MOV X5, X31
	0x03456EF4 BL 0x34440A8
	0x03456EF8 CBZ X0, 0x34570EC
	0x03456EFC ADRP X8, 0xC9E000
	0x03456F00 LDR X8, [X8 + 0x840]
	0x03456F04 LDR X1, [X8]
	0x03456F08 BL 0x269F5D0
	0x03456F0C ADRP X8, 0xC9E000
	0x03456F10 LDR X8, [X8 + 0x838]
	0x03456F14 STR X0, [X31 + 0x20]
	0x03456F18 LDR X1, [X8]
	0x03456F1C ADD X0, X31, 0x20
	0x03456F20 BL 0x2677430
	0x03456F24 TBNZ X0, 0x0, 0x3456D1C
	0x03456F28 STR W31, [X19]
	0x03456F2C LDR X8, [X31 + 0x20]
	0x03456F30 STR X8, [X19 + 0x50]
	0x03456F34 LDR X0, [X25]
	0x03456F38 LDR W8, [X0 + 0xE0]
	0x03456F3C CBNZ W8, 0x3456F44
	0x03456F40 BL 0x1C16DFC
	0x03456F44 ADRP X8, 0xCD9000
	0x03456F48 LDR X8, [X8 + 0xE18]
	0x03456F4C ADD X0, X19, 0x8
	0x03456F50 LDR X3, [X8]
	0x03456F54 ADD X1, X31, 0x20
	0x03456F58 MOV X2, X19
	0x03456F5C BL 0x2188650
	0x03456F60 B 0x34570A8
	0x03456F64 CBZ X20, 0x34570CC
	0x03456F68 ADRP X8, 0xCA5000
	0x03456F6C LDR X8, [X8 + 0x818]
	0x03456F70 LDR X21, [X20 + 0x58]
	0x03456F74 LDR X23, [X19 + 0x48]
	0x03456F78 LDR X0, [X8]
	0x03456F7C BL 0x1C16F10
	0x03456F80 ADRP X8, 0xCD9000
	0x03456F84 LDR X8, [X8 + 0xE28]
	0x03456F88 MOV X22, X0
	0x03456F8C LDR X2, [X8]
	0x03456F90 MOV X1, X23
	0x03456F94 MOV X3, X31
	0x03456F98 BL 0x2D27AA8
	0x03456F9C LDR X8, [X19 + 0x48]
	0x03456FA0 CBZ X8, 0x34570C0
	0x03456FA4 ADRP X9, 0xCD9000
	0x03456FA8 LDR X23, [X19 + 0x40]
	0x03456FAC LDR X9, [X9 + 0x7C8]
	0x03456FB0 CBNZ X23, 0x3456FB8
	0x03456FB4 LDR X23, [X20 + 0x18]
	0x03456FB8 LDR X20, [X8 + 0x18]
	0x03456FBC LDR X1, [X8 + 0x28]
	0x03456FC0 LDR X2, [X9]
	0x03456FC4 STP X31, X31, [X31 + 0x8]
	0x03456FC8 ADD X0, X31, 0x8
	0x03456FCC BL 0x242E368
	0x03456FD0 ADRP X8, 0xCD9000
	0x03456FD4 LDR X8, [X8 + 0x7D0]
	0x03456FD8 LDR X0, [X8]
	0x03456FDC BL 0x1C16F10
	0x03456FE0 LDP X3, X4, [X31 + 0x8]
	0x03456FE4 MOV X24, X0
	0x03456FE8 MOV X1, X20
	0x03456FEC MOV X2, X23
	0x03456FF0 MOV X5, X31
	0x03456FF4 BL 0x3465404
	0x03456FF8 CBZ X21, 0x34570C4
	0x03456FFC MOV X0, X21
	0x03457000 MOV X1, X22
	0x03457004 MOV X2, X24
	0x03457008 MOV X3, X31
	0x0345700C BL 0x3465B68
	0x03457010 CBZ X0, 0x34570C8
	0x03457014 MOV X1, X31
	0x03457018 BL 0x33ED394
	0x0345701C STR X0, [X31 + 0x18]
	0x03457020 ADD X0, X31, 0x18
	0x03457024 MOV X1, X31
	0x03457028 BL 0x32C3A80
	0x0345702C TBZ X0, 0x0, 0x345706C
	0x03457030 ADD X0, X31, 0x18
	0x03457034 MOV X1, X31
	0x03457038 BL 0x32C3B4C
	0x0345703C MOVN W8, 0x1
	0x03457040 STR W8, [X19]
	0x03457044 STR X31, [X19 + 0x48]
	0x03457048 LDR X0, [X25]
	0x0345704C ADD X19, X19, 0x8
	0x03457050 LDR W8, [X0 + 0xE0]
	0x03457054 CBNZ W8, 0x345705C
	0x03457058 BL 0x1C16DFC
	0x0345705C MOV X0, X19
	0x03457060 MOV X1, X31
	0x03457064 BL 0x32C4864
	0x03457068 B 0x34570A8
	0x0345706C MOVZ W8, 0x1
	0x03457070 STR W8, [X19]
	0x03457074 LDR X8, [X31 + 0x18]
	0x03457078 STR X8, [X19 + 0x58]
	0x0345707C LDR X0, [X25]
	0x03457080 LDR W8, [X0 + 0xE0]
	0x03457084 CBNZ W8, 0x345708C
	0x03457088 BL 0x1C16DFC
	0x0345708C ADRP X8, 0xCD8000
	0x03457090 LDR X8, [X8 + 0xE20]
	0x03457094 ADD X0, X19, 0x8
	0x03457098 LDR X3, [X8]
	0x0345709C ADD X1, X31, 0x18
	0x034570A0 MOV X2, X19
	0x034570A4 BL 0x2189D14
	0x034570A8 LDP X20, X19, [X31 + 0x60]
	0x034570AC LDP X22, X21, [X31 + 0x50]
	0x034570B0 LDP X24, X23, [X31 + 0x40]
	0x034570B4 LDP X30, X25, [X31 + 0x30]
	0x034570B8 ADD X31, X31, 0x70
	0x034570BC RET
	0x034570C0 BL 0x1C16F20
	0x034570C4 BL 0x1C16F20
	0x034570C8 BL 0x1C16F20
	0x034570CC BL 0x1C16F20
	0x034570D0 BL 0x1C16F20
	0x034570D4 BL 0x1C16F20
	0x034570D8 BL 0x1C16F20
	0x034570DC BL 0x1C16F20
	0x034570E0 BL 0x1C16F20
	0x034570E4 BL 0x1C16F20
	0x034570E8 BL 0x1C16F20
	0x034570EC BL 0x1C16F20
	0x034570F0 B 0x3457164
	0x034570F4 B 0x3457164
	0x034570F8 B 0x3457164
	0x034570FC B 0x3457164
	0x03457100 B 0x3457164
	0x03457104 B 0x3457164
	0x03457108 B 0x3457164
	0x0345710C B 0x3457164
	0x03457110 B 0x3457164
	0x03457114 B 0x3457164
	0x03457118 B 0x3457164
	0x0345711C B 0x3457164
	0x03457120 B 0x3457164
	0x03457124 B 0x3457164
	0x03457128 B 0x3457164
	0x0345712C B 0x3457164
	0x03457130 B 0x3457164
	0x03457134 B 0x3457164
	0x03457138 B 0x3457164
	0x0345713C B 0x3457164
	0x03457140 B 0x3457164
	0x03457144 B 0x3457164
	0x03457148 B 0x3457164
	0x0345714C B 0x3457164
	0x03457150 B 0x3457164
	0x03457154 B 0x3457164
	0x03457158 B 0x3457164
	0x0345715C B 0x3457164
	0x03457160 B 0x3457164
	0x03457164 MOV X20, X0
	0x03457168 CMP W1, 0x1
	0x0345716C B.NE 0x3457200
	0x03457170 MOV X0, X20
	0x03457174 BL 0x3EB1AD0
	0x03457178 MOV X20, X0
	0x0345717C ADRP X0, 0xC9C000
	0x03457180 LDR X0, [X0 + 0x7D0]
	0x03457184 BL 0x1C16D08
	0x03457188 LDR X8, [X20]
	0x0345718C LDR X1, [X8]
	0x03457190 BL 0x1C17270
	0x03457194 TBZ X0, 0x0, 0x34571D8
	0x03457198 LDR X20, [X20]
	0x0345719C BL 0x3EB1AE0
	0x034571A0 MOVN W8, 0x1
	0x034571A4 STR X31, [X19 + 0x48]
	0x034571A8 STR W8, [X19], #0x8
	0x034571AC ADRP X0, 0xC9F000
	0x034571B0 LDR X0, [X0 + 0x280]
	0x034571B4 BL 0x1C16D08
	0x034571B8 LDR W8, [X0 + 0xE0]
	0x034571BC CBNZ W8, 0x34571C4
	0x034571C0 BL 0x1C16DFC
	0x034571C4 MOV X0, X19
	0x034571C8 MOV X1, X20
	0x034571CC MOV X2, X31
	0x034571D0 BL 0x32C4908
	0x034571D4 B 0x34570A8
	0x034571D8 MOVZ W0, 0x8
	0x034571DC BL 0x3EB1AF0
	0x034571E0 LDR X8, [X20]
	0x034571E4 STR X8, [X0]
	0x034571E8 ADRP X1, 0xA5D000
	0x034571EC ADD X1, X1, 0xE58
	0x034571F0 MOV X2, X31
	0x034571F4 BL 0x3EB1B00
	0x034571F8 MOV X20, X0
	0x034571FC BL 0x3EB1AE0
	0x03457200 MOV X0, X20
	0x03457204 BL 0x1D2C690
	0x03457208 BL 0x1990590
	0x0345720C STR X30, [X31 - 0x30]!
	0x03457210 STP X22, X21, [X31 + 0x10]
	0x03457214 STP X20, X19, [X31 + 0x20]
	0x03457218 ADRP X21, 0xF86000
	0x0345721C ADRP X22, 0xC9F000
	0x03457220 LDRB W8, [X21 + 0x78A]
	0x03457224 LDR X22, [X22 + 0x280]
	0x03457228 MOV X19, X1
	0x0345722C MOV X20, X0
	0x03457230 TBNZ X8, 0x0, 0x3457248
	0x03457234 ADRP X0, 0xC9F000
	0x03457238 LDR X0, [X0 + 0x280]
	0x0345723C BL 0x1C16CF4
	0x03457240 MOVZ W8, 0x1
	0x03457244 STRB W8, [X21 + 0x78A]
	0x03457248 LDR X0, [X22]
	0x0345724C LDR W8, [X0 + 0xE0]
	0x03457250 CBNZ W8, 0x3457258
	0x03457254 BL 0x1C16DFC
	0x03457258 ADD X0, X20, 0x8
	0x0345725C MOV X1, X19
	0x03457260 LDP X20, X19, [X31 + 0x20]
	0x03457264 LDP X22, X21, [X31 + 0x10]
	0x03457268 MOV X2, X31
	0x0345726C LDR X30, [X31], #0x30
	0x03457270 B 0x32C477C
	0x03457274 SUB X31, X31, 0x70
	0x03457278 STP X30, X25, [X31 + 0x30]
	0x0345727C STP X24, X23, [X31 + 0x40]
	0x03457280 STP X22, X21, [X31 + 0x50]
	0x03457284 STP X20, X19, [X31 + 0x60]
	0x03457288 ADRP X20, 0xF86000
	0x0345728C LDRB W8, [X20 + 0x78B]
	0x03457290 MOV X19, X0
	0x03457294 TBNZ X8, 0x0, 0x3457348
	0x03457298 ADRP X0, 0xCD8000
	0x0345729C LDR X0, [X0 + 0xE38]
	0x034572A0 BL 0x1C16CF4
	0x034572A4 ADRP X0, 0xCD8000
	0x034572A8 LDR X0, [X0 + 0xE40]
	0x034572AC BL 0x1C16CF4
	0x034572B0 ADRP X0, 0xC9F000
	0x034572B4 LDR X0, [X0 + 0x280]
	0x034572B8 BL 0x1C16CF4
	0x034572BC ADRP X0, 0xC9E000
	0x034572C0 LDR X0, [X0 + 0xA10]
	0x034572C4 BL 0x1C16CF4
	0x034572C8 ADRP X0, 0xC9D000
	0x034572CC LDR X0, [X0 + 0x9F0]
	0x034572D0 BL 0x1C16CF4
	0x034572D4 ADRP X0, 0xCA4000
	0x034572D8 LDR X0, [X0 + 0x818]
	0x034572DC BL 0x1C16CF4
	0x034572E0 ADRP X0, 0xC9D000
	0x034572E4 LDR X0, [X0 + 0x818]
	0x034572E8 BL 0x1C16CF4
	0x034572EC ADRP X0, 0xCD8000
	0x034572F0 LDR X0, [X0 + 0x7C8]
	0x034572F4 BL 0x1C16CF4
	0x034572F8 ADRP X0, 0xCD8000
	0x034572FC LDR X0, [X0 + 0x7D0]
	0x03457300 BL 0x1C16CF4
	0x03457304 ADRP X0, 0xC9D000
	0x03457308 LDR X0, [X0 + 0x830]
	0x0345730C BL 0x1C16CF4
	0x03457310 ADRP X0, 0xC9D000
	0x03457314 LDR X0, [X0 + 0x838]
	0x03457318 BL 0x1C16CF4
	0x0345731C ADRP X0, 0xC9D000
	0x03457320 LDR X0, [X0 + 0x840]
	0x03457324 BL 0x1C16CF4
	0x03457328 ADRP X0, 0xCD8000
	0x0345732C LDR X0, [X0 + 0xE48]
	0x03457330 BL 0x1C16CF4
	0x03457334 ADRP X0, 0xCD8000
	0x03457338 LDR X0, [X0 + 0xE50]
	0x0345733C BL 0x1C16CF4
	0x03457340 MOVZ W8, 0x1
	0x03457344 STRB W8, [X20 + 0x78B]
	0x03457348 STP X31, X31, [X31 + 0x20]
	0x0345734C STR X31, [X31 + 0x18]
	0x03457350 ADRP X25, 0xC9F000
	0x03457354 LDR W8, [X19]
	0x03457358 LDR X20, [X19 + 0x20]
	0x0345735C LDR X25, [X25 + 0x280]
	0x03457360 CBZ W8, 0x3457384
	0x03457364 CMP W8, 0x1
	0x03457368 B.NE 0x34573B0
	0x0345736C LDR X8, [X19 + 0x58]
	0x03457370 MOVN W9, 0x0
	0x03457374 STR X8, [X31 + 0x18]
	0x03457378 STR X31, [X19 + 0x58]
	0x0345737C STR W9, [X19]
	0x03457380 B 0x34576AC
	0x03457384 LDR X8, [X19 + 0x50]
	0x03457388 MOVN W9, 0x0
	0x0345738C STR X8, [X31 + 0x20]
	0x03457390 STR X31, [X19 + 0x50]
	0x03457394 STR W9, [X19]
	0x03457398 ADRP X8, 0xC9D000
	0x0345739C LDR X8, [X8 + 0x830]
	0x034573A0 ADD X0, X31, 0x20
	0x034573A4 LDR X1, [X8]
	0x034573A8 BL 0x2677474
	0x034573AC B 0x34575E0
	0x034573B0 ADRP X8, 0xCD8000
	0x034573B4 LDR X8, [X8 + 0xE50]
	0x034573B8 LDR X0, [X8]
	0x034573BC BL 0x1C16F10
	0x034573C0 MOV X21, X0
	0x034573C4 MOV X1, X31
	0x034573C8 BL 0x34499F4
	0x034573CC STR X21, [X19 + 0x48]
	0x034573D0 CBZ X21, 0x345774C
	0x034573D4 LDR X8, [X19 + 0x20]
	0x034573D8 STR X8, [X21 + 0x10]
	0x034573DC LDR X8, [X19 + 0x28]
	0x034573E0 STR X8, [X21 + 0x18]
	0x034573E4 LDR X8, [X19 + 0x30]
	0x034573E8 STR X8, [X21 + 0x20]
	0x034573EC LDR X8, [X19 + 0x38]
	0x034573F0 STR X8, [X21 + 0x28]
	0x034573F4 CBZ X20, 0x3457750
	0x034573F8 LDRB W8, [X20 + 0x10]
	0x034573FC CBZ W8, 0x34575E4
	0x03457400 LDR X8, [X19 + 0x48]
	0x03457404 CBZ X8, 0x3457754
	0x03457408 LDR X21, [X8 + 0x18]
	0x0345740C CBZ X21, 0x3457758
	0x03457410 ADRP X23, 0xC9D000
	0x03457414 LDR X8, [X21]
	0x03457418 LDR X23, [X23 + 0x818]
	0x0345741C LDRH W9, [X8 + 0x12E]
	0x03457420 LDR X1, [X23]
	0x03457424 CBZ X9, 0x3457448
	0x03457428 LDR X10, [X8 + 0xB0]
	0x0345742C ADD X10, X10, 0x8
	0x03457430 LDUR X11, [X10 - 0x8]
	0x03457434 CMP X11, X1
	0x03457438 B.EQ 0x3457458
	0x0345743C SUBS X9, X9, 0x1
	0x03457440 ADD X10, X10, 0x10
	0x03457444 B.NE 0x3457430
	0x03457448 MOVZ W2, 0x7
	0x0345744C MOV X0, X21
	0x03457450 BL 0x1C5C788
	0x03457454 B 0x3457468
	0x03457458 LDR W9, [X10]
	0x0345745C ADD W9, W9, 0x7
	0x03457460 ADD X8, X8, W9, 0x4, SXTW
	0x03457464 ADD X0, X8, 0x138
	0x03457468 LDP X8, X1, [X0]
	0x0345746C MOV X0, X21
	0x03457470 BLR X8
	0x03457474 MOV X1, X31
	0x03457478 BL 0x32277A8
	0x0345747C TBNZ X0, 0x0, 0x34575E0
	0x03457480 LDR X8, [X19 + 0x48]
	0x03457484 CBZ X8, 0x345775C
	0x03457488 ADRP X9, 0xC9D000
	0x0345748C LDR X9, [X9 + 0x9F0]
	0x03457490 LDR X21, [X8 + 0x18]
	0x03457494 LDR X0, [X9]
	0x03457498 LDR W9, [X0 + 0xE0]
	0x0345749C CBNZ W9, 0x34574A4
	0x034574A0 BL 0x1C16DFC
	0x034574A4 MOV X0, X31
	0x034574A8 BL 0x33616A4
	0x034574AC ADRP X22, 0xC9E000
	0x034574B0 LDR X22, [X22 + 0xA10]
	0x034574B4 MOV X8, X0
	0x034574B8 STR X8, [X31 + 0x28]
	0x034574BC LDR X0, [X22]
	0x034574C0 LDR W8, [X0 + 0xE0]
	0x034574C4 CBNZ W8, 0x34574D0
	0x034574C8 BL 0x1C16DFC
	0x034574CC LDR X0, [X22]
	0x034574D0 LDR X8, [X0 + 0xB8]
	0x034574D4 LDR X1, [X8]
	0x034574D8 ADD X0, X31, 0x28
	0x034574DC MOV X2, X31
	0x034574E0 BL 0x335FC68
	0x034574E4 CBZ X21, 0x3457760
	0x034574E8 LDR X8, [X21]
	0x034574EC LDR X1, [X23]
	0x034574F0 MOV X22, X0
	0x034574F4 LDRH W9, [X8 + 0x12E]
	0x034574F8 CBZ X9, 0x345751C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF88000
	011 Move W8, [X20+1925]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDA000
	018 Move X0, [X0+3544]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDA000
	021 Move X0, [X0+3552]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA1000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA0000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9F000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA6000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9F000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDA000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDA000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9F000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9F000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9F000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDA000
	054 Move X0, [X0+3560]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDA000
	057 Move X0, [X0+3568]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1925], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA1000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xC9F000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD9000
	091 Move X8, [X8+3568]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass67_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {361}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 NotImplemented "Instruction STRH not yet implemented."
	108 Move X8, [X19+80]
	109 Compare X8, 0
	110 JumpIfEqual {362}
	111 Move X9, [X19+64]
	112 Move [X8+48], X9
	113 Compare X20, 0
	114 JumpIfEqual {363}
	115 Move W8, [X20+16]
	116 Compare W8, 0
	117 JumpIfEqual {255}
	118 Move X8, [X19+80]
	119 Compare X8, 0
	120 JumpIfEqual {364}
	121 Move X21, [X8+24]
	122 Compare X21, 0
	123 JumpIfEqual {365}
	124 Move X23, 0xC9E000
	125 Move X8, [X21]
	126 Move X23, [X23+2072]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move X1, [X23]
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 7
	138 Move X0, X21
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 7
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X21
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X1, X31
	149 Call String.IsNullOrEmpty, X0
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {253}
	154 Move X8, [X19+80]
	155 Compare X8, 0
	156 JumpIfEqual {366}
	157 Move X9, 0xC9E000
	158 Move X9, [X9+2544]
	159 Move X21, [X8+24]
	160 Move X0, [X9]
	161 Move W9, [X0+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X31
	166 Call DateTime.get_UtcNow
	167 Move X22, 0xC9F000
	168 Move X22, [X22+2576]
	169 Move X8, X0
	170 Move [X31+40], X8
	171 Move X0, [X22]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X22]
	177 Move X8, [X0+184]
	178 Move X1, [X8]
	179 Add X0, X31, 40
	180 Move X2, X31
	181 Call DateTime.Add, X0, X1
	182 Compare X21, 0
	183 JumpIfEqual {367}
	184 Move X8, [X21]
	185 Move X1, [X23]
	186 Move X22, X0
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 11
	197 Move X0, X21
	198 Call 0x1C5D788
	199 Move W9, [X10]
	200 Add W9, W9, 11
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X2, [X0+8]
	205 Move X0, X21
	206 Move X1, X22
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {253}
	212 Move X8, [X19+80]
	213 Compare X8, 0
	214 JumpIfEqual {368}
	215 Move X1, [X8+24]
	216 Move X3, [X19+72]
	217 Move X4, [X8+48]
	218 Move X0, X20
	219 Move X2, X31
	220 Move X5, X31
	221 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	222 Compare X0, 0
	223 JumpIfEqual {369}
	224 Move X8, 0xC9E000
	225 Move X8, [X8+2112]
	226 Move X1, [X8]
	227 Call Task`1<Object>.GetAwaiter, X0
	228 Move X8, 0xC9E000
	229 Move X8, [X8+2104]
	230 Move [X31+32], X0
	231 Move X1, [X8]
	232 Add X0, X31, 32
	233 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {85}
	238 Move [X19], W31
	239 Move X8, [X31+32]
	240 Move [X19+88], X8
	241 Move X0, [X25]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X8, 0xCD9000
	247 Move X8, [X8+3544]
	248 Add X0, X19, 8
	249 Move X3, [X8]
	250 Add X1, X31, 32
	251 Move X2, X19
	252 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	253 Compare X20, 0
	254 JumpIfEqual {360}
	255 Move X8, 0xCA5000
	256 Move X8, [X8+2072]
	257 Move X21, [X20+88]
	258 Move X23, [X19+80]
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X8, 0xCD9000
	262 Move X8, [X8+3560]
	263 Move X22, X0
	264 Move X2, [X8]
	265 Move X1, X23
	266 Move X3, X31
	267 Call Func`1<Object>..ctor, X0, X1, X2
	268 Move X8, [X19+80]
	269 Compare X8, 0
	270 JumpIfEqual {357}
	271 Move X9, 0xCD9000
	272 Move X23, [X19+72]
	273 Move X9, [X9+1992]
	274 Compare X23, 0
	275 JumpIfNotEqual {277}
	276 Move X23, [X20+24]
	277 Move X20, [X8+24]
	278 Move X1, [X8+48]
	279 Move X2, [X9]
	280 Move [X31+8], X31
	281 Move [X31+16], X31
	282 Add X0, X31, 8
	283 Call Nullable`1<CancellationToken>..ctor, X0, X1
	284 Move X8, 0xCD9000
	285 Move X8, [X8+2000]
	286 Move X0, [X8]
	287 Call 0x1C17F10
	288 Move X3, [X31+8]
	289 Move X4, [X31+16]
	290 Move X24, X0
	291 Move X1, X20
	292 Move X2, X23
	293 Move X5, X31
	294 Call RetryHistory..ctor, X0, X1, X2, X3
	295 Compare X21, 0
	296 JumpIfEqual {358}
	297 Move X0, X21
	298 Move X1, X22
	299 Move X2, X24
	300 Move X3, X31
	301 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	302 Compare X0, 0
	303 JumpIfEqual {359}
	304 Move X1, X31
	305 Call Task.GetAwaiter, X0
	306 Move [X31+24], X0
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.get_IsCompleted, X0
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {331}
	314 Add X0, X31, 24
	315 Move X1, X31
	316 Call TaskAwaiter.GetResult, X0
	317 Move TEMP, 1
	318 Not TEMP
	319 Move W8, TEMP
	320 Move [X19], W8
	321 Move [X19+80], X31
	322 Move X0, [X25]
	323 Add X19, X19, 8
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X0, X19
	329 Move X1, X31
	330 Call AsyncTaskMethodBuilder.SetResult, X0
	331 Move W8, 1
	332 Move [X19], W8
	333 Move X8, [X31+24]
	334 Move [X19+96], X8
	335 Move X0, [X25]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X8, 0xCD9000
	341 Move X8, [X8+3552]
	342 Add X0, X19, 8
	343 Move X3, [X8]
	344 Add X1, X31, 24
	345 Move X2, X19
	346 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	347 Move X20, [X31+96]
	348 Move X19, [X31+104]
	349 Move X22, [X31+80]
	350 Move X21, [X31+88]
	351 Move X24, [X31+64]
	352 Move X23, [X31+72]
	353 Move X30, [X31+48]
	354 Move X25, [X31+56]
	355 Add X31, X31, 112
	356 Return 
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Move X20, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X0, X20
	373 Call 0x3EB2AD0
	374 Move X20, X0
	375 Move X0, 0xC9D000
	376 Move X0, [X0+2000]
	377 Call 0x1C17D08
	378 Move X8, [X20]
	379 Move X1, [X8]
	380 Call 0x1C18270
	381 Move TEMP, X0
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfNotEqual {403}
	385 Move X20, [X20]
	386 Call 0x3EB2AE0
	387 Move TEMP, 1
	388 Not TEMP
	389 Move W8, TEMP
	390 Move [X19+80], X31
	391 Move [X19+8], W8
	392 Move X0, 0xCA0000
	393 Move X0, [X0+640]
	394 Call 0x1C17D08
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1C17DFC
	399 Move X0, X19
	400 Move X1, X20
	401 Move X2, X31
	402 Call AsyncTaskMethodBuilder.SetException, X0, X1
	403 Move W0, 8
	404 Call 0x3EB2AF0
	405 Move X8, [X20]
	406 Move [X0], X8
	407 Move X1, 0xA5E000
	408 Add X1, X1, 3672
	409 Move X2, X31
	410 Call 0x3EB2B00
	411 Move X20, X0
	412 Call 0x3EB2AE0
	413 Move X0, X20
	414 Call 0x1D2D690
	415 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034574FC LDR X10, [X8 + 0xB0]
	0x03457500 ADD X10, X10, 0x8
	0x03457504 LDUR X11, [X10 - 0x8]
	0x03457508 CMP X11, X1
	0x0345750C B.EQ 0x345752C
	0x03457510 SUBS X9, X9, 0x1
	0x03457514 ADD X10, X10, 0x10
	0x03457518 B.NE 0x3457504
	0x0345751C MOVZ W2, 0xB
	0x03457520 MOV X0, X21
	0x03457524 BL 0x1C5C788
	0x03457528 B 0x345753C
	0x0345752C LDR W9, [X10]
	0x03457530 ADD W9, W9, 0xB
	0x03457534 ADD X8, X8, W9, 0x4, SXTW
	0x03457538 ADD X0, X8, 0x138
	0x0345753C LDP X8, X2, [X0]
	0x03457540 MOV X0, X21
	0x03457544 MOV X1, X22
	0x03457548 BLR X8
	0x0345754C TBZ X0, 0x0, 0x34575E0
	0x03457550 LDR X8, [X19 + 0x48]
	0x03457554 CBZ X8, 0x3457764
	0x03457558 LDR X1, [X8 + 0x18]
	0x0345755C LDR X3, [X19 + 0x40]
	0x03457560 LDR X4, [X8 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF87000
	007 Move X22, 0xCA0000
	008 Move W8, [X21+1926]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA0000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1926], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

