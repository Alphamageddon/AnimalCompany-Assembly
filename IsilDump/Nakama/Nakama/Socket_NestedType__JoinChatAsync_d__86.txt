Type: Nakama.Socket/<JoinChatAsync>d__86

Method: System.Void MoveNext()

Disassembly:
	0x03482694 LDR X0, [X21]
	0x03482698 ADRP X21, 0xCAE000
	0x0348269C LDR W8, [X0 + 0xE0]
	0x034826A0 LDR X21, [X21 + 0xFB8]
	0x034826A4 CBNZ W8, 0x34826AC
	0x034826A8 BL 0x1C16DFC
	0x034826AC LDR X2, [X21]
	0x034826B0 ADD X0, X20, 0x8
	0x034826B4 MOV X1, X19
	0x034826B8 LDP X20, X19, [X31 + 0x20]
	0x034826BC LDP X22, X21, [X31 + 0x10]
	0x034826C0 LDR X30, [X31], #0x30
	0x034826C4 B 0x2632228
	0x034826C8 SUB X31, X31, 0x40
	0x034826CC STP X30, X23, [X31 + 0x10]
	0x034826D0 STP X22, X21, [X31 + 0x20]
	0x034826D4 STP X20, X19, [X31 + 0x30]
	0x034826D8 ADRP X20, 0xF5B000
	0x034826DC LDRB W8, [X20 + 0x8CA]
	0x034826E0 MOV X19, X0
	0x034826E4 TBNZ X8, 0x0, 0x3482768
	0x034826E8 ADRP X0, 0xCAE000
	0x034826EC LDR X0, [X0 + 0xFC0]
	0x034826F0 BL 0x1C16CF4
	0x034826F4 ADRP X0, 0xCAE000
	0x034826F8 LDR X0, [X0 + 0xFC8]
	0x034826FC BL 0x1C16CF4
	0x03482700 ADRP X0, 0xCAE000
	0x03482704 LDR X0, [X0 + 0xD40]
	0x03482708 BL 0x1C16CF4
	0x0348270C ADRP X0, 0xCAE000
	0x03482710 LDR X0, [X0 + 0xFD0]
	0x03482714 BL 0x1C16CF4
	0x03482718 ADRP X0, 0xC71000
	0x0348271C LDR X0, [X0 + 0x758]
	0x03482720 BL 0x1C16CF4
	0x03482724 ADRP X0, 0xCAE000
	0x03482728 LDR X0, [X0 + 0xE88]
	0x0348272C BL 0x1C16CF4
	0x03482730 ADRP X0, 0xCAE000
	0x03482734 LDR X0, [X0 + 0xE90]
	0x03482738 BL 0x1C16CF4
	0x0348273C ADRP X0, 0xCAE000
	0x03482740 LDR X0, [X0 + 0xE98]
	0x03482744 BL 0x1C16CF4
	0x03482748 ADRP X0, 0xCAE000
	0x0348274C LDR X0, [X0 + 0xBC8]
	0x03482750 BL 0x1C16CF4
	0x03482754 ADRP X0, 0xC75000
	0x03482758 LDR X0, [X0 + 0x110]
	0x0348275C BL 0x1C16CF4
	0x03482760 MOVZ W8, 0x1
	0x03482764 STRB W8, [X20 + 0x8CA]
	0x03482768 STR X31, [X31 + 0x8]
	0x0348276C ADRP X23, 0xCAE000
	0x03482770 LDR W8, [X19]
	0x03482774 LDR X23, [X23 + 0xD40]
	0x03482778 CBZ W8, 0x3482890
	0x0348277C LDR X20, [X19 + 0x20]
	0x03482780 CBZ X20, 0x3482908
	0x03482784 ADD X0, X20, 0x10
	0x03482788 MOV X1, X31
	0x0348278C BL 0x33EB14C
	0x03482790 ADRP X8, 0xCAE000
	0x03482794 LDR X8, [X8 + 0xBC8]
	0x03482798 MOV W22, W0
	0x0348279C LDR X0, [X8]
	0x034827A0 BL 0x1C16F10
	0x034827A4 MOV X21, X0
	0x034827A8 MOV X1, X31
	0x034827AC BL 0x33BDD8C
	0x034827B0 ADRP X8, 0xC71000
	0x034827B4 LDR X8, [X8 + 0x758]
	0x034827B8 STR W22, [X31 + 0x4]
	0x034827BC LDR X0, [X8]
	0x034827C0 ADD X1, X31, 0x4
	0x034827C4 BL 0x1C16E04
	0x034827C8 MOV X1, X0
	0x034827CC ADRP X8, 0xC75000
	0x034827D0 LDR X8, [X8 + 0x110]
	0x034827D4 LDR X0, [X8]
	0x034827D8 MOV X2, X31
	0x034827DC BL 0x321EFD0
	0x034827E0 CBZ X21, 0x348290C
	0x034827E4 ADRP X8, 0xCAE000
	0x034827E8 LDR X8, [X8 + 0xFD0]
	0x034827EC STR X0, [X21 + 0x10]
	0x034827F0 LDR X0, [X8]
	0x034827F4 BL 0x1C16F10
	0x034827F8 MOV X22, X0
	0x034827FC MOV X1, X31
	0x03482800 BL 0x343EE34
	0x03482804 CBZ X22, 0x3482910
	0x03482808 LDUR V0, [X19 + 0x28]
	0x0348280C STR V0, [X22 + 0x1]
	0x03482810 STR X22, [X21 + 0x40]
	0x03482814 MOV X0, X20
	0x03482818 MOV X1, X21
	0x0348281C MOV X2, X31
	0x03482820 BL 0x347BA8C
	0x03482824 CBZ X0, 0x3482914
	0x03482828 ADRP X8, 0xCAE000
	0x0348282C LDR X8, [X8 + 0xE98]
	0x03482830 LDR X1, [X8]
	0x03482834 BL 0x269F5D0
	0x03482838 ADRP X8, 0xCAE000
	0x0348283C LDR X8, [X8 + 0xE90]
	0x03482840 STR X0, [X31 + 0x8]
	0x03482844 LDR X1, [X8]
	0x03482848 ADD X0, X31, 0x8
	0x0348284C BL 0x2677430
	0x03482850 TBNZ X0, 0x0, 0x34828A4
	0x03482854 STR W31, [X19]
	0x03482858 LDR X8, [X31 + 0x8]
	0x0348285C STR X8, [X19 + 0x38]
	0x03482860 LDR X0, [X23]
	0x03482864 LDR W8, [X0 + 0xE0]
	0x03482868 CBNZ W8, 0x3482870
	0x0348286C BL 0x1C16DFC
	0x03482870 ADRP X8, 0xCAE000
	0x03482874 LDR X8, [X8 + 0xFC0]
	0x03482878 ADD X0, X19, 0x8
	0x0348287C LDR X3, [X8]
	0x03482880 ADD X1, X31, 0x8
	0x03482884 MOV X2, X19
	0x03482888 BL 0x1FC291C
	0x0348288C B 0x34828F0
	0x03482890 LDR X8, [X19 + 0x38]
	0x03482894 MOVN W9, 0x0
	0x03482898 STR X8, [X31 + 0x8]
	0x0348289C STR X31, [X19 + 0x38]
	0x034828A0 STR W9, [X19]
	0x034828A4 ADRP X8, 0xCAE000
	0x034828A8 LDR X8, [X8 + 0xE88]
	0x034828AC ADD X0, X31, 0x8
	0x034828B0 LDR X1, [X8]
	0x034828B4 BL 0x2677474
	0x034828B8 CBZ X0, 0x3482904
	0x034828BC MOVN W8, 0x1
	0x034828C0 LDR X20, [X0 + 0x38]
	0x034828C4 STR W8, [X19], #0x8
	0x034828C8 LDR X0, [X23]
	0x034828CC ADRP X21, 0xCAE000
	0x034828D0 LDR W8, [X0 + 0xE0]
	0x034828D4 LDR X21, [X21 + 0xFC8]
	0x034828D8 CBNZ W8, 0x34828E0
	0x034828DC BL 0x1C16DFC
	0x034828E0 LDR X2, [X21]
	0x034828E4 MOV X0, X19
	0x034828E8 MOV X1, X20
	0x034828EC BL 0x26322B0
	0x034828F0 LDP X20, X19, [X31 + 0x30]
	0x034828F4 LDP X22, X21, [X31 + 0x20]
	0x034828F8 LDP X30, X23, [X31 + 0x10]
	0x034828FC ADD X31, X31, 0x40
	0x03482900 RET
	0x03482904 BL 0x1C16F20
	0x03482908 BL 0x1C16F20
	0x0348290C BL 0x1C16F20
	0x03482910 BL 0x1C16F20
	0x03482914 BL 0x1C16F20
	0x03482918 B 0x3482944
	0x0348291C B 0x3482944
	0x03482920 B 0x3482944
	0x03482924 B 0x3482944
	0x03482928 B 0x3482944
	0x0348292C B 0x3482944
	0x03482930 B 0x3482944
	0x03482934 B 0x3482944
	0x03482938 B 0x3482944
	0x0348293C B 0x3482944
	0x03482940 B 0x3482944
	0x03482944 MOV X20, X0
	0x03482948 CMP W1, 0x1
	0x0348294C B.NE 0x34829E8
	0x03482950 MOV X0, X20
	0x03482954 BL 0x3EB1AD0
	0x03482958 MOV X20, X0
	0x0348295C ADRP X0, 0xC71000
	0x03482960 LDR X0, [X0 + 0x7D0]
	0x03482964 BL 0x1C16D08
	0x03482968 LDR X8, [X20]
	0x0348296C LDR X1, [X8]
	0x03482970 BL 0x1C17270
	0x03482974 TBZ X0, 0x0, 0x34829C0
	0x03482978 LDR X20, [X20]
	0x0348297C BL 0x3EB1AE0
	0x03482980 MOVN W8, 0x1
	0x03482984 STR W8, [X19], #0x8
	0x03482988 ADRP X0, 0xCAE000
	0x0348298C LDR X0, [X0 + 0xD40]
	0x03482990 BL 0x1C16D08
	0x03482994 LDR W8, [X0 + 0xE0]
	0x03482998 CBNZ W8, 0x34829A0
	0x0348299C BL 0x1C16DFC
	0x034829A0 ADRP X0, 0xCAE000
	0x034829A4 LDR X0, [X0 + 0xFD8]
	0x034829A8 BL 0x1C16D08
	0x034829AC MOV X2, X0
	0x034829B0 MOV X0, X19
	0x034829B4 MOV X1, X20
	0x034829B8 BL 0x26324C8
	0x034829BC B 0x34828F0
	0x034829C0 MOVZ W0, 0x8
	0x034829C4 BL 0x3EB1AF0
	0x034829C8 LDR X8, [X20]
	0x034829CC STR X8, [X0]
	0x034829D0 ADRP X1, 0xA32000
	0x034829D4 ADD X1, X1, 0xE58

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF5C000
	009 Move W8, [X20+2242]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCAF000
	016 Move X0, [X0+3920]
	017 Call 0x1C17CF4
	018 Move X0, 0xCAF000
	019 Move X0, [X0+3928]
	020 Call 0x1C17CF4
	021 Move X0, 0xCAF000
	022 Move X0, [X0+3264]
	023 Call 0x1C17CF4
	024 Move X0, 0xCAF000
	025 Move X0, [X0+3936]
	026 Call 0x1C17CF4
	027 Move X0, 0xC72000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xCAF000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCAF000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCAF000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCAF000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC76000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2242], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCAF000
	049 Move W8, [X19]
	050 Move X23, [X23+3264]
	051 Compare W8, 0
	052 JumpIfEqual {135}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {174}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCAF000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC72000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC76000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {175}
	081 Move X8, 0xCAF000
	082 Move X8, [X8+3936]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call ChannelJoinMessage..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {176}
	091 Move W8, [X19+40]
	092 Move [X22+16], W8
	093 Move W8, [X19+41]
	094 Move [X22+17], W8
	095 Move X8, [X19+48]
	096 Move [X22+24], X8
	097 Move W8, [X19+56]
	098 Move [X22+32], W8
	099 Move [X21+32], X22
	100 Move X0, X20
	101 Move X1, X21
	102 Move X2, X31
	103 Call Socket.SendAsync, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {177}
	106 Move X8, 0xCAF000
	107 Move X8, [X8+3736]
	108 Move X1, [X8]
	109 Call Task`1<Object>.GetAwaiter, X0
	110 Move X8, 0xCAF000
	111 Move X8, [X8+3728]
	112 Move [X31+8], X0
	113 Move X1, [X8]
	114 Add X0, X31, 8
	115 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {142}
	120 Move [X19], W31
	121 Move X8, [X31+8]
	122 Move [X19+64], X8
	123 Move X0, [X23]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X8, 0xCAF000
	129 Move X8, [X8+3920]
	130 Add X0, X19, 8
	131 Move X3, [X8]
	132 Add X1, X31, 8
	133 Move X2, X19
	134 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	135 Move X8, [X19+64]
	136 Move TEMP, 0
	137 Not TEMP
	138 Move W9, TEMP
	139 Move [X31+8], X8
	140 Move [X19+64], X31
	141 Move [X19], W9
	142 Move X8, 0xCAF000
	143 Move X8, [X8+3720]
	144 Add X0, X31, 8
	145 Move X1, [X8]
	146 Call TaskAwaiter`1<Object>.GetResult, X0
	147 Compare X0, 0
	148 JumpIfEqual {173}
	149 Move TEMP, 1
	150 Not TEMP
	151 Move W8, TEMP
	152 Move X20, [X0+24]
	153 Move [X19+8], W8
	154 Move X0, [X23]
	155 Move X21, 0xCAF000
	156 Move W8, [X0+224]
	157 Move X21, [X21+3928]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X2, [X21]
	162 Move X0, X19
	163 Move X1, X20
	164 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	165 Move X20, [X31+48]
	166 Move X19, [X31+56]
	167 Move X22, [X31+32]
	168 Move X21, [X31+40]
	169 Move X30, [X31+16]
	170 Move X23, [X31+24]
	171 Add X31, X31, 64
	172 Return 
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Move X20, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X20
	181 Call 0x3EB2AD0
	182 Move X20, X0
	183 Move X0, 0xC72000
	184 Move X0, [X0+2000]
	185 Call 0x1C17D08
	186 Move X8, [X20]
	187 Move X1, [X8]
	188 Call 0x1C18270
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {213}
	193 Move X20, [X20]
	194 Call 0x3EB2AE0
	195 Move TEMP, 1
	196 Not TEMP
	197 Move W8, TEMP
	198 Move [X19+8], W8
	199 Move X0, 0xCAF000
	200 Move X0, [X0+3264]
	201 Call 0x1C17D08
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move X0, 0xCAF000
	207 Move X0, [X0+3944]
	208 Call 0x1C17D08
	209 Move X2, X0
	210 Move X0, X19
	211 Move X1, X20
	212 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	213 Move W0, 8
	214 Call 0x3EB2AF0
	215 Move X8, [X20]
	216 Move [X0], X8
	217 Move X1, 0xA33000
	218 Add X1, X1, 3672
	219 Move X2, X31
	220 Call 0x3EB2B00
	221 Move X20, X0
	222 Call 0x3EB2AE0
	223 Move X0, X20
	224 Call 0x1D2D690
	225 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034829D8 MOV X2, X31
	0x034829DC BL 0x3EB1B00
	0x034829E0 MOV X20, X0
	0x034829E4 BL 0x3EB1AE0
	0x034829E8 MOV X0, X20
	0x034829EC BL 0x1D2C690
	0x034829F0 BL 0x1990590
	0x034829F4 STR X30, [X31 - 0x30]!
	0x034829F8 STP X22, X21, [X31 + 0x10]
	0x034829FC STP X20, X19, [X31 + 0x20]
	0x03482A00 ADRP X22, 0xF5B000
	0x03482A04 ADRP X21, 0xCAE000
	0x03482A08 LDRB W8, [X22 + 0x8CB]
	0x03482A0C LDR X21, [X21 + 0xD40]
	0x03482A10 MOV X19, X1
	0x03482A14 MOV X20, X0
	0x03482A18 TBNZ X8, 0x0, 0x3482A3C
	0x03482A1C ADRP X0, 0xCAE000
	0x03482A20 LDR X0, [X0 + 0xFE0]
	0x03482A24 BL 0x1C16CF4
	0x03482A28 ADRP X0, 0xCAE000
	0x03482A2C LDR X0, [X0 + 0xD40]
	0x03482A30 BL 0x1C16CF4
	0x03482A34 MOVZ W8, 0x1
	0x03482A38 STRB W8, [X22 + 0x8CB]
	0x03482A3C LDR X0, [X21]
	0x03482A40 ADRP X21, 0xCAE000
	0x03482A44 LDR W8, [X0 + 0xE0]
	0x03482A48 LDR X21, [X21 + 0xFE0]
	0x03482A4C CBNZ W8, 0x3482A54
	0x03482A50 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5C000
	007 Move X21, 0xCAF000
	008 Move W8, [X22+2243]
	009 Move X21, [X21+3264]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCAF000
	017 Move X0, [X0+3952]
	018 Call 0x1C17CF4
	019 Move X0, 0xCAF000
	020 Move X0, [X0+3264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2243], W8
	024 Move X0, [X21]
	025 Move X21, 0xCAF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3952]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

