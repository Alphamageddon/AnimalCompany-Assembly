Type: Nakama.ApiClient/<JoinGroupAsync>d__54

Method: System.Void MoveNext()

Disassembly:
	0x034267F8 LDP X8, X1, [X0]
	0x034267FC MOV X0, X22
	0x03426800 BLR X8
	0x03426804 CBNZ X23, 0x3426AE8
	0x03426808 CMP W20, 0x9
	0x0342680C B.EQ 0x3426814
	0x03426810 CBNZ W20, 0x3426A78
	0x03426814 CBZ X25, 0x3426AF0
	0x03426818 LDR X0, [X25 + 0x20]
	0x0342681C CBZ X0, 0x3426AF4
	0x03426820 MOV X1, X31
	0x03426824 BL 0x361B448
	0x03426828 ADRP X8, 0xCD6000
	0x0342682C LDR X8, [X8 + 0x8D8]
	0x03426830 MOV X22, X0
	0x03426834 LDR X0, [X8]
	0x03426838 MOVZ W1, 0x1
	0x0342683C BL 0x1C16D6C
	0x03426840 MOV X1, X0
	0x03426844 CBZ X1, 0x3426AF8
	0x03426848 LDR W8, [X1 + 0x18]
	0x0342684C CBZ W8, 0x3426AFC
	0x03426850 MOVZ W8, 0x2F
	0x03426854 STRH W8, [X1 + 0x20]
	0x03426858 CBZ X22, 0x3426B00
	0x0342685C MOV X0, X22
	0x03426860 MOV X2, X31
	0x03426864 BL 0x322BC58
	0x03426868 LDR X1, [X31 + 0x8]
	0x0342686C MOV X2, X31
	0x03426870 BL 0x321B938
	0x03426874 ADRP X8, 0xCD6000
	0x03426878 LDR X23, [X25 + 0x20]
	0x0342687C LDR X8, [X8 + 0x3A0]
	0x03426880 MOV X22, X0
	0x03426884 LDR X0, [X8]
	0x03426888 BL 0x1C16F10
	0x0342688C MOV X20, X0
	0x03426890 MOV X1, X23
	0x03426894 MOV X2, X31
	0x03426898 BL 0x36281F8
	0x0342689C CBZ X20, 0x3426B04
	0x034268A0 MOV X0, X20
	0x034268A4 MOV X1, X22
	0x034268A8 MOV X2, X31
	0x034268AC BL 0x36288CC
	0x034268B0 MOV X0, X20
	0x034268B4 MOV X1, X21
	0x034268B8 MOV X2, X31
	0x034268BC BL 0x3628980
	0x034268C0 MOV X0, X20
	0x034268C4 MOV X1, X31
	0x034268C8 BL 0x3628A38
	0x034268CC ADRP X8, 0xCF6000
	0x034268D0 ADRP X9, 0xCCE000
	0x034268D4 LDR X8, [X8 + 0x4D8]
	0x034268D8 LDR X9, [X9 + 0x6D0]
	0x034268DC MOV X20, X0
	0x034268E0 LDR X21, [X8]
	0x034268E4 LDR X0, [X9]
	0x034268E8 BL 0x1C16F10
	0x034268EC ADRP X8, 0xCCE000
	0x034268F0 LDR X8, [X8 + 0x6C0]
	0x034268F4 MOV X22, X0
	0x034268F8 LDR X1, [X8]
	0x034268FC BL 0x2AA4804
	0x03426900 ADRP X8, 0xD08000
	0x03426904 LDR X1, [X19 + 0x38]
	0x03426908 LDR X8, [X8 + 0x7D8]
	0x0342690C LDR X0, [X8]
	0x03426910 MOV X2, X31
	0x03426914 BL 0x321B938
	0x03426918 CBZ X22, 0x3426B08
	0x0342691C ADRP X8, 0xD08000
	0x03426920 LDR X8, [X8 + 0x7D0]
	0x03426924 ADRP X9, 0xCCE000
	0x03426928 LDR X9, [X9 + 0x810]
	0x0342692C MOV X2, X0
	0x03426930 LDR X1, [X8]
	0x03426934 LDR X3, [X9]
	0x03426938 MOV X0, X22
	0x0342693C BL 0x2AA5098
	0x03426940 LDR X24, [X25 + 0x10]
	0x03426944 CBZ X24, 0x3426B0C
	0x03426948 ADRP X10, 0xD08000
	0x0342694C LDR W23, [X25 + 0x18]
	0x03426950 LDR X8, [X24]
	0x03426954 LDP X26, X25, [X19 + 0x40]
	0x03426958 LDR X10, [X10 + 0x7B8]
	0x0342695C LDRH W9, [X8 + 0x12E]
	0x03426960 LDR X1, [X10]
	0x03426964 CBZ X9, 0x3426988
	0x03426968 LDR X10, [X8 + 0xB0]
	0x0342696C ADD X10, X10, 0x8
	0x03426970 LDUR X11, [X10 - 0x8]
	0x03426974 CMP X11, X1
	0x03426978 B.EQ 0x3426998
	0x0342697C SUBS X9, X9, 0x1
	0x03426980 ADD X10, X10, 0x10
	0x03426984 B.NE 0x3426970
	0x03426988 MOVZ W2, 0x3
	0x0342698C MOV X0, X24
	0x03426990 BL 0x1C5C788
	0x03426994 B 0x34269A8
	0x03426998 LDR W9, [X10]
	0x0342699C ADD W9, W9, 0x3
	0x034269A0 ADD X8, X8, W9, 0x4, SXTW
	0x034269A4 ADD X0, X8, 0x138
	0x034269A8 LDP X8, X9, [X0]
	0x034269AC MOV X0, X24
	0x034269B0 MOV X1, X21
	0x034269B4 MOV X2, X20
	0x034269B8 MOV X3, X22
	0x034269BC MOV X4, X31
	0x034269C0 MOV W5, W23
	0x034269C4 MOV X6, X26
	0x034269C8 MOV X7, X25
	0x034269CC STR X9, [X31]
	0x034269D0 BLR X8
	0x034269D4 CBZ X0, 0x3426B10
	0x034269D8 ADRP X8, 0xCD0000
	0x034269DC LDR X8, [X8 + 0x1F8]
	0x034269E0 LDR X1, [X8]
	0x034269E4 BL 0x269F5D0
	0x034269E8 ADRP X8, 0xCD0000
	0x034269EC LDR X8, [X8 + 0x1F0]
	0x034269F0 STR X0, [X31 + 0x18]
	0x034269F4 LDR X1, [X8]
	0x034269F8 ADD X0, X31, 0x18
	0x034269FC BL 0x2677430
	0x03426A00 TBZ X0, 0x0, 0x3426A40
	0x03426A04 ADRP X8, 0xCD0000
	0x03426A08 LDR X8, [X8 + 0x1E0]
	0x03426A0C ADD X0, X31, 0x18
	0x03426A10 LDR X1, [X8]
	0x03426A14 BL 0x2677474
	0x03426A18 MOVN W8, 0x1
	0x03426A1C STR W8, [X19], #0x8
	0x03426A20 LDR X0, [X27]
	0x03426A24 LDR W8, [X0 + 0xE0]
	0x03426A28 CBNZ W8, 0x3426A30
	0x03426A2C BL 0x1C16DFC
	0x03426A30 MOV X0, X19
	0x03426A34 MOV X1, X31
	0x03426A38 BL 0x32C4864
	0x03426A3C B 0x3426A78
	0x03426A40 STR W31, [X19]
	0x03426A44 LDR X8, [X31 + 0x18]
	0x03426A48 STR X8, [X19 + 0x50]
	0x03426A4C LDR X0, [X27]
	0x03426A50 LDR W8, [X0 + 0xE0]
	0x03426A54 CBNZ W8, 0x3426A5C
	0x03426A58 BL 0x1C16DFC
	0x03426A5C ADRP X8, 0xD08000
	0x03426A60 LDR X8, [X8 + 0xDE0]
	0x03426A64 ADD X0, X19, 0x8
	0x03426A68 LDR X3, [X8]
	0x03426A6C ADD X1, X31, 0x18
	0x03426A70 MOV X2, X19
	0x03426A74 BL 0x2186658
	0x03426A78 LDP X20, X19, [X31 + 0x70]
	0x03426A7C LDP X22, X21, [X31 + 0x60]
	0x03426A80 LDP X24, X23, [X31 + 0x50]
	0x03426A84 LDP X26, X25, [X31 + 0x40]
	0x03426A88 LDP X28, X27, [X31 + 0x30]
	0x03426A8C LDP X29, X30, [X31 + 0x20]
	0x03426A90 ADD X31, X31, 0x80
	0x03426A94 RET
	0x03426A98 BL 0x1C16F20
	0x03426A9C ADRP X0, 0xCD5000
	0x03426AA0 LDR X0, [X0 + 0x578]
	0x03426AA4 BL 0x1C16D08
	0x03426AA8 BL 0x1C16F10
	0x03426AAC MOV X20, X0
	0x03426AB0 ADRP X0, 0xD08000
	0x03426AB4 LDR X0, [X0 + 0x808]
	0x03426AB8 BL 0x1C16D08
	0x03426ABC MOV X1, X0
	0x03426AC0 MOV X0, X20
	0x03426AC4 MOV X2, X31
	0x03426AC8 BL 0x3314A68
	0x03426ACC ADRP X0, 0xD08000
	0x03426AD0 LDR X0, [X0 + 0xDF0]
	0x03426AD4 BL 0x1C16D08
	0x03426AD8 MOV X1, X0
	0x03426ADC MOV X0, X20
	0x03426AE0 BL 0x1C16DEC
	0x03426AE4 BL 0x1C16F20
	0x03426AE8 MOV X0, X23
	0x03426AEC BL 0x1C16F18
	0x03426AF0 BL 0x1C16F20
	0x03426AF4 BL 0x1C16F20
	0x03426AF8 BL 0x1C16F20
	0x03426AFC BL 0x1C16F28
	0x03426B00 BL 0x1C16F20
	0x03426B04 BL 0x1C16F20
	0x03426B08 BL 0x1C16F20
	0x03426B0C BL 0x1C16F20
	0x03426B10 BL 0x1C16F20
	0x03426B14 BL 0x1C16F20
	0x03426B18 B 0x3426B84
	0x03426B1C B 0x3426B84
	0x03426B20 B 0x3426B84
	0x03426B24 B 0x3426B84
	0x03426B28 B 0x3426B84
	0x03426B2C B 0x3426B84
	0x03426B30 B 0x3426B84
	0x03426B34 B 0x3426B84
	0x03426B38 B 0x3426B84
	0x03426B3C B 0x3426B84
	0x03426B40 B 0x3426B84
	0x03426B44 B 0x3426B84
	0x03426B48 B 0x3426B84
	0x03426B4C B 0x3426B84
	0x03426B50 B 0x3426B84
	0x03426B54 B 0x3426B84
	0x03426B58 B 0x3426B84
	0x03426B5C B 0x3426B84
	0x03426B60 B 0x3426B84
	0x03426B64 B 0x3426B84
	0x03426B68 B 0x3426B84
	0x03426B6C B 0x3426B84
	0x03426B70 B 0x3426B84
	0x03426B74 B 0x3426B84
	0x03426B78 B 0x3426B84
	0x03426B7C B 0x3426B84
	0x03426B80 B 0x3426B84
	0x03426B84 MOV X20, X1
	0x03426B88 MOV X21, X0
	0x03426B8C B 0x3426C3C
	0x03426B90 B 0x3426BA8
	0x03426B94 B 0x3426BA8
	0x03426B98 B 0x3426BA8
	0x03426B9C MOV X21, X28
	0x03426BA0 B 0x3426BA8
	0x03426BA4 B 0x3426BA8
	0x03426BA8 CMP W1, 0x1
	0x03426BAC B.NE 0x3426BC4
	0x03426BB0 BL 0x3EB1AD0
	0x03426BB4 LDR X23, [X0]
	0x03426BB8 BL 0x3EB1AE0
	0x03426BBC MOV W20, W31
	0x03426BC0 B 0x3426790
	0x03426BC4 MOV X21, X0
	0x03426BC8 MOV X20, X1
	0x03426BCC MOV X23, X31
	0x03426BD0 TBZ X24, 0x1F, 0x3426C38
	0x03426BD4 CBZ X22, 0x3426C38
	0x03426BD8 ADRP X10, 0xCCD000
	0x03426BDC LDR X8, [X22]
	0x03426BE0 LDR X10, [X10 + 0xE00]
	0x03426BE4 LDRH W9, [X8 + 0x12E]
	0x03426BE8 LDR X1, [X10]
	0x03426BEC CBZ X9, 0x3426C10
	0x03426BF0 LDR X10, [X8 + 0xB0]
	0x03426BF4 ADD X10, X10, 0x8
	0x03426BF8 LDUR X11, [X10 - 0x8]
	0x03426BFC CMP X11, X1
	0x03426C00 B.EQ 0x3426C20
	0x03426C04 SUBS X9, X9, 0x1
	0x03426C08 ADD X10, X10, 0x10
	0x03426C0C B.NE 0x3426BF8
	0x03426C10 MOV X0, X22
	0x03426C14 MOV W2, W31
	0x03426C18 BL 0x1C5C788
	0x03426C1C B 0x3426C2C
	0x03426C20 LDRSW X9, [X10]
	0x03426C24 ADD X8, X8, X9, 0x4, LSL
	0x03426C28 ADD X0, X8, 0x138
	0x03426C2C LDP X8, X1, [X0]
	0x03426C30 MOV X0, X22
	0x03426C34 BLR X8
	0x03426C38 CBNZ X23, 0x3426CC8
	0x03426C3C CMP W20, 0x1
	0x03426C40 B.NE 0x3426CE8
	0x03426C44 MOV X0, X21
	0x03426C48 BL 0x3EB1AD0
	0x03426C4C MOV X20, X0
	0x03426C50 ADRP X0, 0xCCD000
	0x03426C54 LDR X0, [X0 + 0x7D0]
	0x03426C58 BL 0x1C16D08
	0x03426C5C LDR X8, [X20]
	0x03426C60 LDR X1, [X8]
	0x03426C64 BL 0x1C17270
	0x03426C68 TBZ X0, 0x0, 0x3426CA8
	0x03426C6C LDR X20, [X20]
	0x03426C70 BL 0x3EB1AE0
	0x03426C74 MOVN W8, 0x1
	0x03426C78 STR W8, [X19], #0x8
	0x03426C7C ADRP X0, 0xCD0000
	0x03426C80 LDR X0, [X0 + 0x280]
	0x03426C84 BL 0x1C16D08
	0x03426C88 LDR W8, [X0 + 0xE0]
	0x03426C8C CBNZ W8, 0x3426C94
	0x03426C90 BL 0x1C16DFC
	0x03426C94 MOV X0, X19
	0x03426C98 MOV X1, X20
	0x03426C9C MOV X2, X31
	0x03426CA0 BL 0x32C4908
	0x03426CA4 B 0x3426A78
	0x03426CA8 MOVZ W0, 0x8
	0x03426CAC BL 0x3EB1AF0
	0x03426CB0 LDR X8, [X20]
	0x03426CB4 STR X8, [X0]
	0x03426CB8 ADRP X1, 0xA8E000
	0x03426CBC ADD X1, X1, 0xE58
	0x03426CC0 MOV X2, X31
	0x03426CC4 BL 0x3EB1B00
	0x03426CC8 MOV X0, X23
	0x03426CCC BL 0x1C16F18
	0x03426CD0 MOV X20, X1
	0x03426CD4 MOV X21, X0
	0x03426CD8 TBNZ X24, 0x1F, 0x3426BD4
	0x03426CDC B 0x3426C38
	0x03426CE0 MOV X21, X0
	0x03426CE4 BL 0x3EB1AE0
	0x03426CE8 MOV X0, X21
	0x03426CEC BL 0x1D2C690
	0x03426CF0 BL 0x1990590
	0x03426CF4 STR X30, [X31 - 0x30]!
	0x03426CF8 STP X22, X21, [X31 + 0x10]
	0x03426CFC STP X20, X19, [X31 + 0x20]
	0x03426D00 ADRP X21, 0xFB7000
	0x03426D04 ADRP X22, 0xCD0000
	0x03426D08 LDRB W8, [X21 + 0x636]
	0x03426D0C LDR X22, [X22 + 0x280]
	0x03426D10 MOV X19, X1
	0x03426D14 MOV X20, X0
	0x03426D18 TBNZ X8, 0x0, 0x3426D30
	0x03426D1C ADRP X0, 0xCD0000
	0x03426D20 LDR X0, [X0 + 0x280]
	0x03426D24 BL 0x1C16CF4
	0x03426D28 MOVZ W8, 0x1
	0x03426D2C STRB W8, [X21 + 0x636]
	0x03426D30 LDR X0, [X22]
	0x03426D34 LDR W8, [X0 + 0xE0]
	0x03426D38 CBNZ W8, 0x3426D40
	0x03426D3C BL 0x1C16DFC
	0x03426D40 ADD X0, X20, 0x8
	0x03426D44 MOV X1, X19
	0x03426D48 LDP X20, X19, [X31 + 0x20]
	0x03426D4C LDP X22, X21, [X31 + 0x10]
	0x03426D50 MOV X2, X31
	0x03426D54 LDR X30, [X31], #0x30
	0x03426D58 B 0x32C477C
	0x03426D5C SUB X31, X31, 0x60
	0x03426D60 STP X30, X27, [X31 + 0x10]
	0x03426D64 STP X26, X25, [X31 + 0x20]
	0x03426D68 STP X24, X23, [X31 + 0x30]
	0x03426D6C STP X22, X21, [X31 + 0x40]
	0x03426D70 STP X20, X19, [X31 + 0x50]
	0x03426D74 ADRP X20, 0xFB7000
	0x03426D78 LDRB W8, [X20 + 0x637]
	0x03426D7C MOV X19, X0
	0x03426D80 TBNZ X8, 0x0, 0x3426E64
	0x03426D84 ADRP X0, 0xD08000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFB8000
	013 Move W8, [X20+1585]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Move X0, 0xD09000
	020 Move X0, [X0+3504]
	021 Call 0x1C17CF4
	022 Move X0, 0xCD1000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCD7000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCF000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xCCF000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xCCF000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xD09000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xCD1000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xCD1000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD1000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xCD7000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xCD0000
	053 Move X0, [X0+2600]
	054 Call 0x1C17CF4
	055 Move X0, 0xCF7000
	056 Move X0, [X0+1240]
	057 Call 0x1C17CF4
	058 Move X0, 0xD09000
	059 Move X0, [X0+3512]
	060 Call 0x1C17CF4
	061 Move X0, 0xD09000
	062 Move X0, [X0+2048]
	063 Call 0x1C17CF4
	064 Move X0, 0xD09000
	065 Move X0, [X0+2000]
	066 Call 0x1C17CF4
	067 Move X0, 0xD09000
	068 Move X0, [X0+2008]
	069 Call 0x1C17CF4
	070 Move X0, 0xCCE000
	071 Move X0, [X0+2440]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+1585], W8
	075 Move [X31+8], X31
	076 Move X27, 0xCD1000
	077 Move W8, [X19]
	078 Move X27, [X27+640]
	079 Compare W8, 0
	080 JumpIfEqual {215}
	081 Move X21, [X19+32]
	082 Compare X21, 0
	083 JumpIfEqual {298}
	084 Move X8, 0xCD0000
	085 Move X8, [X8+2600]
	086 Move X0, [X8]
	087 Move X8, 0xD09000
	088 Move X8, [X8+3512]
	089 Move X24, [X19+40]
	090 Move W9, [X0+224]
	091 Move X20, [X8]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Call Uri.EscapeDataString, X0
	098 Compare X20, 0
	099 JumpIfEqual {316}
	100 Move X8, 0xD09000
	101 Move X8, [X8+2048]
	102 Move X2, X0
	103 Move X1, [X8]
	104 Move X0, X20
	105 Move X3, X31
	106 Call String.Replace, X0, X1, X2
	107 Compare X24, 0
	108 JumpIfEqual {317}
	109 Move X21, X0
	110 Move X0, [X24+32]
	111 Compare X0, 0
	112 JumpIfEqual {318}
	113 Move X8, 0xCCE000
	114 Move X8, [X8+2440]
	115 Move X20, [X8]
	116 Move X1, X31
	117 Call Uri.get_AbsolutePath, X0
	118 Move X8, 0xCD7000
	119 Move X8, [X8+2264]
	120 Move X22, X0
	121 Move X0, [X8]
	122 Move W1, 1
	123 Call 0x1C17D6C
	124 Move X1, X0
	125 Compare X1, 0
	126 JumpIfEqual {319}
	127 Move W8, [X1+24]
	128 Compare W8, 0
	129 JumpIfEqual {320}
	130 Move W8, 47
	131 NotImplemented "Instruction STRH not yet implemented."
	132 Compare X22, 0
	133 JumpIfEqual {321}
	134 Move X0, X22
	135 Move X2, X31
	136 Call String.TrimEnd, X0, X1
	137 Move X1, X21
	138 Move X2, X31
	139 Call String.Concat, X0, X1
	140 Move X8, 0xCD7000
	141 Move X8, [X8+928]
	142 Move X22, X0
	143 Move X23, [X24+32]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X21, X0
	147 Move X1, X23
	148 Move X2, X31
	149 Call UriBuilder..ctor, X0, X1
	150 Compare X21, 0
	151 JumpIfEqual {322}
	152 Move X0, X21
	153 Move X1, X22
	154 Move X2, X31
	155 Call UriBuilder.set_Path, X0, X1
	156 Move X0, X21
	157 Move X1, X20
	158 Move X2, X31
	159 Call UriBuilder.set_Query, X0, X1
	160 Move X0, X21
	161 Move X1, X31
	162 Call UriBuilder.get_Uri, X0
	163 Move X8, 0xCF7000
	164 Move X9, 0xCCF000
	165 Move X8, [X8+1240]
	166 Move X9, [X9+1744]
	167 Move X20, X0
	168 Move X21, [X8]
	169 Move X0, [X9]
	170 Call 0x1C17F10
	171 Move X8, 0xCCF000
	172 Move X8, [X8+1728]
	173 Move X22, X0
	174 Move X1, [X8]
	175 Call Dictionary`2<Object, Object>..ctor, X0
	176 Move X8, 0xD09000
	177 Move X8, [X8+2008]
	178 Move X1, [X19+48]
	179 Move X0, [X8]
	180 Move X2, X31
	181 Call String.Concat, X0, X1
	182 Compare X22, 0
	183 JumpIfEqual {323}
	184 Move X8, 0xD09000
	185 Move X8, [X8+2000]
	186 Move X9, 0xCCF000
	187 Move X9, [X9+2064]
	188 Move X2, X0
	189 Move X1, [X8]
	190 Move X3, [X9]
	191 Move X0, X22
	192 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	193 Move X23, [X24+16]
	194 Compare X23, 0
	195 JumpIfEqual {324}
	196 Move X10, 0xD09000
	197 Move X10, [X10+1976]
	198 Move X8, [X23]
	199 Move W25, [X24+24]
	200 Move X26, [X19+56]
	201 Move X24, [X19+64]
	202 Move X1, [X10]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 3
	213 Move X0, X23
	214 Call 0x1C5D788
	215 Move X8, [X19+72]
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W9, TEMP
	219 Move [X31+8], X8
	220 Move [X19+72], X31
	221 Move [X19], W9
	222 Move W9, [X10]
	223 Add W9, W9, 3
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X9, [X0+8]
	228 Move X0, X23
	229 Move X1, X21
	230 Move X2, X20
	231 Move X3, X22
	232 Move X4, X31
	233 Move W5, W25
	234 Move X6, X26
	235 Move X7, X24
	236 Move [X31], X9
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {325}
	240 Move X8, 0xCD1000
	241 Move X8, [X8+504]
	242 Move X1, [X8]
	243 Call Task`1<Object>.GetAwaiter, X0
	244 Move X8, 0xCD1000
	245 Move X8, [X8+496]
	246 Move [X31+8], X0
	247 Move X1, [X8]
	248 Add X0, X31, 8
	249 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {271}
	254 Move X8, 0xCD1000
	255 Move X8, [X8+480]
	256 Add X0, X31, 8
	257 Move X1, [X8]
	258 Call TaskAwaiter`1<Object>.GetResult, X0
	259 Move TEMP, 1
	260 Not TEMP
	261 Move W8, TEMP
	262 Move [X19+8], W8
	263 Move X0, [X27]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X19
	269 Move X1, X31
	270 Call AsyncTaskMethodBuilder.SetResult, X0
	271 Move [X19], W31
	272 Move X8, [X31+8]
	273 Move [X19+72], X8
	274 Move X0, [X27]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X8, 0xD09000
	280 Move X8, [X8+3504]
	281 Add X0, X19, 8
	282 Move X3, [X8]
	283 Add X1, X31, 8
	284 Move X2, X19
	285 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	286 Move X20, [X31+80]
	287 Move X19, [X31+88]
	288 Move X22, [X31+64]
	289 Move X21, [X31+72]
	290 Move X24, [X31+48]
	291 Move X23, [X31+56]
	292 Move X26, [X31+32]
	293 Move X25, [X31+40]
	294 Move X30, [X31+16]
	295 Move X27, [X31+24]
	296 Add X31, X31, 96
	297 Return 
	298 Move X0, 0xCD6000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xD09000
	304 Move X0, [X0+2056]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xD09000
	311 Move X0, [X0+3520]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X20, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X20
	329 Call 0x3EB2AD0
	330 Move X20, X0
	331 Move X0, 0xCCE000
	332 Move X0, [X0+2000]
	333 Call 0x1C17D08
	334 Move X8, [X20]
	335 Move X1, [X8]
	336 Call 0x1C18270
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {358}
	341 Move X20, [X20]
	342 Call 0x3EB2AE0
	343 Move TEMP, 1
	344 Not TEMP
	345 Move W8, TEMP
	346 Move [X19+8], W8
	347 Move X0, 0xCD1000
	348 Move X0, [X0+640]
	349 Call 0x1C17D08
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X19
	355 Move X1, X20
	356 Move X2, X31
	357 Call AsyncTaskMethodBuilder.SetException, X0, X1
	358 Move W0, 8
	359 Call 0x3EB2AF0
	360 Move X8, [X20]
	361 Move [X0], X8
	362 Move X1, 0xA8F000
	363 Add X1, X1, 3672
	364 Move X2, X31
	365 Call 0x3EB2B00
	366 Move X20, X0
	367 Call 0x3EB2AE0
	368 Move X0, X20
	369 Call 0x1D2D690
	370 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03426D88 LDR X0, [X0 + 0xDF8]
	0x03426D8C BL 0x1C16CF4
	0x03426D90 ADRP X0, 0xCD0000
	0x03426D94 LDR X0, [X0 + 0x280]
	0x03426D98 BL 0x1C16CF4
	0x03426D9C ADRP X0, 0xCD6000
	0x03426DA0 LDR X0, [X0 + 0x8D8]
	0x03426DA4 BL 0x1C16CF4
	0x03426DA8 ADRP X0, 0xCCE000
	0x03426DAC LDR X0, [X0 + 0x810]
	0x03426DB0 BL 0x1C16CF4
	0x03426DB4 ADRP X0, 0xCCE000
	0x03426DB8 LDR X0, [X0 + 0x6C0]
	0x03426DBC BL 0x1C16CF4
	0x03426DC0 ADRP X0, 0xCCE000
	0x03426DC4 LDR X0, [X0 + 0x6D0]
	0x03426DC8 BL 0x1C16CF4
	0x03426DCC ADRP X0, 0xD08000
	0x03426DD0 LDR X0, [X0 + 0x7B8]
	0x03426DD4 BL 0x1C16CF4
	0x03426DD8 ADRP X0, 0xCD0000
	0x03426DDC LDR X0, [X0 + 0x1E0]
	0x03426DE0 BL 0x1C16CF4
	0x03426DE4 ADRP X0, 0xCD0000
	0x03426DE8 LDR X0, [X0 + 0x1F0]
	0x03426DEC BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB8000
	007 Move X22, 0xCD1000
	008 Move W8, [X21+1586]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD1000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1586], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

