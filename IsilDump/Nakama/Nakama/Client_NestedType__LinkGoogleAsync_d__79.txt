Type: Nakama.Client/<LinkGoogleAsync>d__79

Method: System.Void MoveNext()

Disassembly:
	0x0345BD00 MOV X0, X21
	0x0345BD04 BL 0x1C5C788
	0x0345BD08 B 0x345BD1C
	0x0345BD0C LDR W9, [X10]
	0x0345BD10 ADD W9, W9, 0xB
	0x0345BD14 ADD X8, X8, W9, 0x4, SXTW
	0x0345BD18 ADD X0, X8, 0x138
	0x0345BD1C LDP X8, X2, [X0]
	0x0345BD20 MOV X0, X21
	0x0345BD24 MOV X1, X22
	0x0345BD28 BLR X8
	0x0345BD2C TBZ X0, 0x0, 0x345BDC0
	0x0345BD30 LDR X8, [X19 + 0x58]
	0x0345BD34 CBZ X8, 0x345BF74
	0x0345BD38 LDR X1, [X8 + 0x18]
	0x0345BD3C LDR X3, [X19 + 0x50]
	0x0345BD40 LDR X4, [X8 + 0x38]
	0x0345BD44 MOV X0, X20
	0x0345BD48 MOV X2, X31
	0x0345BD4C MOV X5, X31
	0x0345BD50 BL 0x34440A8
	0x0345BD54 CBZ X0, 0x345BF78
	0x0345BD58 ADRP X8, 0xC99000
	0x0345BD5C LDR X8, [X8 + 0x840]
	0x0345BD60 LDR X1, [X8]
	0x0345BD64 BL 0x269F5D0
	0x0345BD68 ADRP X8, 0xC99000
	0x0345BD6C LDR X8, [X8 + 0x838]
	0x0345BD70 STR X0, [X31 + 0x20]
	0x0345BD74 LDR X1, [X8]
	0x0345BD78 ADD X0, X31, 0x20
	0x0345BD7C BL 0x2677430
	0x0345BD80 TBNZ X0, 0x0, 0x345BB60
	0x0345BD84 STR W31, [X19]
	0x0345BD88 LDR X8, [X31 + 0x20]
	0x0345BD8C STR X8, [X19 + 0x60]
	0x0345BD90 LDR X0, [X25]
	0x0345BD94 LDR W8, [X0 + 0xE0]
	0x0345BD98 CBNZ W8, 0x345BDA0
	0x0345BD9C BL 0x1C16DFC
	0x0345BDA0 ADRP X8, 0xCD4000
	0x0345BDA4 LDR X8, [X8 + 0xFA0]
	0x0345BDA8 ADD X0, X19, 0x8
	0x0345BDAC LDR X3, [X8]
	0x0345BDB0 ADD X1, X31, 0x20
	0x0345BDB4 MOV X2, X19
	0x0345BDB8 BL 0x1FBB238
	0x0345BDBC B 0x345BF34
	0x0345BDC0 CBZ X20, 0x345BF58
	0x0345BDC4 ADRP X8, 0xCD4000
	0x0345BDC8 LDR X8, [X8 + 0xFA8]
	0x0345BDCC LDR X21, [X20 + 0x58]
	0x0345BDD0 LDR X23, [X19 + 0x58]
	0x0345BDD4 LDR X0, [X8]
	0x0345BDD8 BL 0x1C16F10
	0x0345BDDC ADRP X8, 0xCD4000
	0x0345BDE0 LDR X8, [X8 + 0xFD0]
	0x0345BDE4 MOV X22, X0
	0x0345BDE8 LDR X2, [X8]
	0x0345BDEC MOV X1, X23
	0x0345BDF0 MOV X3, X31
	0x0345BDF4 BL 0x2D27AA8
	0x0345BDF8 LDR X8, [X19 + 0x58]
	0x0345BDFC CBZ X8, 0x345BF4C
	0x0345BE00 ADRP X9, 0xCD4000
	0x0345BE04 LDR X23, [X19 + 0x50]
	0x0345BE08 LDR X9, [X9 + 0x7C8]
	0x0345BE0C CBNZ X23, 0x345BE14
	0x0345BE10 LDR X23, [X20 + 0x18]
	0x0345BE14 LDR X20, [X8 + 0x18]
	0x0345BE18 LDR X1, [X8 + 0x38]
	0x0345BE1C LDR X2, [X9]
	0x0345BE20 STP X31, X31, [X31 + 0x8]
	0x0345BE24 ADD X0, X31, 0x8
	0x0345BE28 BL 0x242E368
	0x0345BE2C ADRP X8, 0xCD4000
	0x0345BE30 LDR X8, [X8 + 0x7D0]
	0x0345BE34 LDR X0, [X8]
	0x0345BE38 BL 0x1C16F10
	0x0345BE3C LDP X3, X4, [X31 + 0x8]
	0x0345BE40 MOV X24, X0
	0x0345BE44 MOV X1, X20
	0x0345BE48 MOV X2, X23
	0x0345BE4C MOV X5, X31
	0x0345BE50 BL 0x3465404
	0x0345BE54 CBZ X21, 0x345BF50
	0x0345BE58 ADRP X8, 0xCD4000
	0x0345BE5C LDR X8, [X8 + 0xFB0]
	0x0345BE60 LDR X3, [X8]
	0x0345BE64 MOV X0, X21
	0x0345BE68 MOV X1, X22
	0x0345BE6C MOV X2, X24
	0x0345BE70 BL 0x2243230
	0x0345BE74 CBZ X0, 0x345BF54
	0x0345BE78 ADRP X8, 0xCD4000
	0x0345BE7C LDR X8, [X8 + 0xFC8]
	0x0345BE80 LDR X1, [X8]
	0x0345BE84 BL 0x269F5D0
	0x0345BE88 ADRP X8, 0xCD4000
	0x0345BE8C LDR X8, [X8 + 0xFC0]
	0x0345BE90 STR X0, [X31 + 0x18]
	0x0345BE94 LDR X1, [X8]
	0x0345BE98 ADD X0, X31, 0x18
	0x0345BE9C BL 0x2677430
	0x0345BEA0 TBZ X0, 0x0, 0x345BEF8
	0x0345BEA4 ADRP X8, 0xCD4000
	0x0345BEA8 LDR X8, [X8 + 0xFB8]
	0x0345BEAC ADD X0, X31, 0x18
	0x0345BEB0 LDR X1, [X8]
	0x0345BEB4 BL 0x2677474
	0x0345BEB8 MOVN W8, 0x1
	0x0345BEBC STR W8, [X19]
	0x0345BEC0 STR X31, [X19 + 0x58]
	0x0345BEC4 MOV X20, X0
	0x0345BEC8 LDR X0, [X25]
	0x0345BECC ADRP X21, 0xCD3000
	0x0345BED0 ADD X19, X19, 0x8
	0x0345BED4 LDR W8, [X0 + 0xE0]
	0x0345BED8 LDR X21, [X21 + 0xEF0]
	0x0345BEDC CBNZ W8, 0x345BEE4
	0x0345BEE0 BL 0x1C16DFC
	0x0345BEE4 LDR X2, [X21]
	0x0345BEE8 MOV X0, X19
	0x0345BEEC MOV X1, X20
	0x0345BEF0 BL 0x26322B0
	0x0345BEF4 B 0x345BF34
	0x0345BEF8 MOVZ W8, 0x1
	0x0345BEFC STR W8, [X19]
	0x0345BF00 LDR X8, [X31 + 0x18]
	0x0345BF04 STR X8, [X19 + 0x68]
	0x0345BF08 LDR X0, [X25]
	0x0345BF0C LDR W8, [X0 + 0xE0]
	0x0345BF10 CBNZ W8, 0x345BF18
	0x0345BF14 BL 0x1C16DFC
	0x0345BF18 ADRP X8, 0xCD4000
	0x0345BF1C LDR X8, [X8 + 0xF98]
	0x0345BF20 ADD X0, X19, 0x8
	0x0345BF24 LDR X3, [X8]
	0x0345BF28 ADD X1, X31, 0x18
	0x0345BF2C MOV X2, X19
	0x0345BF30 BL 0x1FBB238
	0x0345BF34 LDP X20, X19, [X31 + 0x60]
	0x0345BF38 LDP X22, X21, [X31 + 0x50]
	0x0345BF3C LDP X24, X23, [X31 + 0x40]
	0x0345BF40 LDP X30, X25, [X31 + 0x30]
	0x0345BF44 ADD X31, X31, 0x70
	0x0345BF48 RET
	0x0345BF4C BL 0x1C16F20
	0x0345BF50 BL 0x1C16F20
	0x0345BF54 BL 0x1C16F20
	0x0345BF58 BL 0x1C16F20
	0x0345BF5C BL 0x1C16F20
	0x0345BF60 BL 0x1C16F20
	0x0345BF64 BL 0x1C16F20
	0x0345BF68 BL 0x1C16F20
	0x0345BF6C BL 0x1C16F20
	0x0345BF70 BL 0x1C16F20
	0x0345BF74 BL 0x1C16F20
	0x0345BF78 BL 0x1C16F20
	0x0345BF7C B 0x345BFF0
	0x0345BF80 B 0x345BFF0
	0x0345BF84 B 0x345BFF0
	0x0345BF88 B 0x345BFF0
	0x0345BF8C B 0x345BFF0
	0x0345BF90 B 0x345BFF0
	0x0345BF94 B 0x345BFF0
	0x0345BF98 B 0x345BFF0
	0x0345BF9C B 0x345BFF0
	0x0345BFA0 B 0x345BFF0
	0x0345BFA4 B 0x345BFF0
	0x0345BFA8 B 0x345BFF0
	0x0345BFAC B 0x345BFF0
	0x0345BFB0 B 0x345BFF0
	0x0345BFB4 B 0x345BFF0
	0x0345BFB8 B 0x345BFF0
	0x0345BFBC B 0x345BFF0
	0x0345BFC0 B 0x345BFF0
	0x0345BFC4 B 0x345BFF0
	0x0345BFC8 B 0x345BFF0
	0x0345BFCC B 0x345BFF0
	0x0345BFD0 B 0x345BFF0
	0x0345BFD4 B 0x345BFF0
	0x0345BFD8 B 0x345BFF0
	0x0345BFDC B 0x345BFF0
	0x0345BFE0 B 0x345BFF0
	0x0345BFE4 B 0x345BFF0
	0x0345BFE8 B 0x345BFF0
	0x0345BFEC B 0x345BFF0
	0x0345BFF0 MOV X20, X0
	0x0345BFF4 CMP W1, 0x1
	0x0345BFF8 B.NE 0x345C098
	0x0345BFFC MOV X0, X20
	0x0345C000 BL 0x3EB1AD0
	0x0345C004 MOV X20, X0
	0x0345C008 ADRP X0, 0xC97000
	0x0345C00C LDR X0, [X0 + 0x7D0]
	0x0345C010 BL 0x1C16D08
	0x0345C014 LDR X8, [X20]
	0x0345C018 LDR X1, [X8]
	0x0345C01C BL 0x1C17270
	0x0345C020 TBZ X0, 0x0, 0x345C070
	0x0345C024 LDR X20, [X20]
	0x0345C028 BL 0x3EB1AE0
	0x0345C02C MOVN W8, 0x1
	0x0345C030 STR X31, [X19 + 0x58]
	0x0345C034 STR W8, [X19], #0x8
	0x0345C038 ADRP X0, 0xCD2000
	0x0345C03C LDR X0, [X0 + 0x418]
	0x0345C040 BL 0x1C16D08
	0x0345C044 LDR W8, [X0 + 0xE0]
	0x0345C048 CBNZ W8, 0x345C050
	0x0345C04C BL 0x1C16DFC
	0x0345C050 ADRP X0, 0xCD2000
	0x0345C054 LDR X0, [X0 + 0xF38]
	0x0345C058 BL 0x1C16D08
	0x0345C05C MOV X2, X0
	0x0345C060 MOV X0, X19
	0x0345C064 MOV X1, X20
	0x0345C068 BL 0x26324C8
	0x0345C06C B 0x345BF34
	0x0345C070 MOVZ W0, 0x8
	0x0345C074 BL 0x3EB1AF0
	0x0345C078 LDR X8, [X20]
	0x0345C07C STR X8, [X0]
	0x0345C080 ADRP X1, 0xA58000
	0x0345C084 ADD X1, X1, 0xE58
	0x0345C088 MOV X2, X31
	0x0345C08C BL 0x3EB1B00
	0x0345C090 MOV X20, X0
	0x0345C094 BL 0x3EB1AE0
	0x0345C098 MOV X0, X20
	0x0345C09C BL 0x1D2C690
	0x0345C0A0 BL 0x1990590
	0x0345C0A4 STR X30, [X31 - 0x30]!
	0x0345C0A8 STP X22, X21, [X31 + 0x10]
	0x0345C0AC STP X20, X19, [X31 + 0x20]
	0x0345C0B0 ADRP X22, 0xF81000
	0x0345C0B4 ADRP X21, 0xCD2000
	0x0345C0B8 LDRB W8, [X22 + 0x7A2]
	0x0345C0BC LDR X21, [X21 + 0x418]
	0x0345C0C0 MOV X19, X1
	0x0345C0C4 MOV X20, X0
	0x0345C0C8 TBNZ X8, 0x0, 0x345C0EC
	0x0345C0CC ADRP X0, 0xCD2000
	0x0345C0D0 LDR X0, [X0 + 0xF40]
	0x0345C0D4 BL 0x1C16CF4
	0x0345C0D8 ADRP X0, 0xCD2000
	0x0345C0DC LDR X0, [X0 + 0x418]
	0x0345C0E0 BL 0x1C16CF4
	0x0345C0E4 MOVZ W8, 0x1
	0x0345C0E8 STRB W8, [X22 + 0x7A2]
	0x0345C0EC LDR X0, [X21]
	0x0345C0F0 ADRP X21, 0xCD2000
	0x0345C0F4 LDR W8, [X0 + 0xE0]
	0x0345C0F8 LDR X21, [X21 + 0xF40]
	0x0345C0FC CBNZ W8, 0x345C104
	0x0345C100 BL 0x1C16DFC
	0x0345C104 LDR X2, [X21]
	0x0345C108 ADD X0, X20, 0x8
	0x0345C10C MOV X1, X19
	0x0345C110 LDP X20, X19, [X31 + 0x20]
	0x0345C114 LDP X22, X21, [X31 + 0x10]
	0x0345C118 LDR X30, [X31], #0x30
	0x0345C11C B 0x2632228
	0x0345C120 SUB X31, X31, 0x70
	0x0345C124 STP X30, X25, [X31 + 0x30]
	0x0345C128 STP X24, X23, [X31 + 0x40]
	0x0345C12C STP X22, X21, [X31 + 0x50]
	0x0345C130 STP X20, X19, [X31 + 0x60]
	0x0345C134 ADRP X20, 0xF81000
	0x0345C138 LDRB W8, [X20 + 0x7A3]
	0x0345C13C MOV X19, X0
	0x0345C140 TBNZ X8, 0x0, 0x345C230
	0x0345C144 ADRP X0, 0xCD3000
	0x0345C148 LDR X0, [X0 + 0xFE0]
	0x0345C14C BL 0x1C16CF4
	0x0345C150 ADRP X0, 0xCD3000
	0x0345C154 LDR X0, [X0 + 0xFE8]
	0x0345C158 BL 0x1C16CF4
	0x0345C15C ADRP X0, 0xCD2000
	0x0345C160 LDR X0, [X0 + 0xF50]
	0x0345C164 BL 0x1C16CF4
	0x0345C168 ADRP X0, 0xCD2000
	0x0345C16C LDR X0, [X0 + 0x448]
	0x0345C170 BL 0x1C16CF4
	0x0345C174 ADRP X0, 0xC99000
	0x0345C178 LDR X0, [X0 + 0xA10]
	0x0345C17C BL 0x1C16CF4
	0x0345C180 ADRP X0, 0xC98000
	0x0345C184 LDR X0, [X0 + 0x9F0]
	0x0345C188 BL 0x1C16CF4
	0x0345C18C ADRP X0, 0xCD3000
	0x0345C190 LDR X0, [X0 + 0xFF0]
	0x0345C194 BL 0x1C16CF4
	0x0345C198 ADRP X0, 0xC98000
	0x0345C19C LDR X0, [X0 + 0x818]
	0x0345C1A0 BL 0x1C16CF4
	0x0345C1A4 ADRP X0, 0xCD3000
	0x0345C1A8 LDR X0, [X0 + 0x7C8]
	0x0345C1AC BL 0x1C16CF4
	0x0345C1B0 ADRP X0, 0xCD3000
	0x0345C1B4 LDR X0, [X0 + 0x7D0]
	0x0345C1B8 BL 0x1C16CF4
	0x0345C1BC ADRP X0, 0xCD3000
	0x0345C1C0 LDR X0, [X0 + 0xFF8]
	0x0345C1C4 BL 0x1C16CF4
	0x0345C1C8 ADRP X0, 0xC98000
	0x0345C1CC LDR X0, [X0 + 0x830]
	0x0345C1D0 BL 0x1C16CF4
	0x0345C1D4 ADRP X0, 0xCD4000
	0x0345C1D8 LDR X0, [X0]
	0x0345C1DC BL 0x1C16CF4
	0x0345C1E0 ADRP X0, 0xC98000
	0x0345C1E4 LDR X0, [X0 + 0x838]
	0x0345C1E8 BL 0x1C16CF4
	0x0345C1EC ADRP X0, 0xCD4000
	0x0345C1F0 LDR X0, [X0 + 0x8]
	0x0345C1F4 BL 0x1C16CF4
	0x0345C1F8 ADRP X0, 0xC98000
	0x0345C1FC LDR X0, [X0 + 0x840]
	0x0345C200 BL 0x1C16CF4
	0x0345C204 ADRP X0, 0xCD4000
	0x0345C208 LDR X0, [X0 + 0x10]
	0x0345C20C BL 0x1C16CF4
	0x0345C210 ADRP X0, 0xCD4000
	0x0345C214 LDR X0, [X0 + 0x18]
	0x0345C218 BL 0x1C16CF4
	0x0345C21C ADRP X0, 0xCD4000
	0x0345C220 LDR X0, [X0 + 0x20]
	0x0345C224 BL 0x1C16CF4
	0x0345C228 MOVZ W8, 0x1
	0x0345C22C STRB W8, [X20 + 0x7A3]
	0x0345C230 STP X31, X31, [X31 + 0x20]
	0x0345C234 STR X31, [X31 + 0x18]
	0x0345C238 ADRP X25, 0xCD2000
	0x0345C23C LDR W8, [X19]
	0x0345C240 LDR X20, [X19 + 0x20]
	0x0345C244 LDR X25, [X25 + 0x448]
	0x0345C248 CBZ W8, 0x345C26C
	0x0345C24C CMP W8, 0x1
	0x0345C250 B.NE 0x345C298
	0x0345C254 LDR X8, [X19 + 0x68]
	0x0345C258 MOVN W9, 0x0
	0x0345C25C STR X8, [X31 + 0x18]
	0x0345C260 STR X31, [X19 + 0x68]
	0x0345C264 STR W9, [X19]
	0x0345C268 B 0x345C5C4
	0x0345C26C LDR X8, [X19 + 0x60]
	0x0345C270 MOVN W9, 0x0
	0x0345C274 STR X8, [X31 + 0x20]
	0x0345C278 STR X31, [X19 + 0x60]
	0x0345C27C STR W9, [X19]
	0x0345C280 ADRP X8, 0xC98000
	0x0345C284 LDR X8, [X8 + 0x830]
	0x0345C288 ADD X0, X31, 0x20
	0x0345C28C LDR X1, [X8]
	0x0345C290 BL 0x2677474
	0x0345C294 B 0x345C4E0
	0x0345C298 ADRP X8, 0xCD4000
	0x0345C29C LDR X8, [X8 + 0x20]
	0x0345C2A0 LDR X0, [X8]
	0x0345C2A4 BL 0x1C16F10
	0x0345C2A8 MOV X21, X0
	0x0345C2AC MOV X1, X31
	0x0345C2B0 BL 0x344A93C
	0x0345C2B4 STR X21, [X19 + 0x58]
	0x0345C2B8 CBZ X21, 0x345C67C
	0x0345C2BC LDR X8, [X19 + 0x20]
	0x0345C2C0 STR X8, [X21 + 0x10]
	0x0345C2C4 LDR X8, [X19 + 0x28]
	0x0345C2C8 STR X8, [X21 + 0x18]
	0x0345C2CC LDR W8, [X19 + 0x30]
	0x0345C2D0 STR W8, [X21 + 0x20]
	0x0345C2D4 LDUR X8, [X19 + 0x34]
	0x0345C2D8 STUR X8, [X21 + 0x24]
	0x0345C2DC LDR X8, [X19 + 0x58]
	0x0345C2E0 CBZ X8, 0x345C680
	0x0345C2E4 LDR X9, [X19 + 0x40]
	0x0345C2E8 STR X9, [X8 + 0x30]
	0x0345C2EC LDR X9, [X19 + 0x48]
	0x0345C2F0 STR X9, [X8 + 0x38]
	0x0345C2F4 CBZ X20, 0x345C684
	0x0345C2F8 LDRB W8, [X20 + 0x10]
	0x0345C2FC CBZ W8, 0x345C4E4
	0x0345C300 LDR X8, [X19 + 0x58]
	0x0345C304 CBZ X8, 0x345C688
	0x0345C308 LDR X21, [X8 + 0x18]
	0x0345C30C CBZ X21, 0x345C68C
	0x0345C310 ADRP X23, 0xC98000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF83000
	011 Move W8, [X20+1949]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD5000
	018 Move X0, [X0+3928]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD5000
	021 Move X0, [X0+3936]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9C000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9B000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9A000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA1000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9A000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD5000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD5000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9A000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9A000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9A000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD5000
	054 Move X0, [X0+3944]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD5000
	057 Move X0, [X0+3952]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1949], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9C000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC9A000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD5000
	091 Move X8, [X8+3952]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass79_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xC9A000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xC9A000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC9B000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xC99000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC99000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCD4000
	242 Move X8, [X8+3928]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA0000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCD4000
	257 Move X8, [X8+3944]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCD4000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCD4000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCD4000
	336 Move X8, [X8+3936]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC98000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC9B000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA59000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345C314 LDR X8, [X21]
	0x0345C318 LDR X23, [X23 + 0x818]
	0x0345C31C LDRH W9, [X8 + 0x12E]
	0x0345C320 LDR X1, [X23]
	0x0345C324 CBZ X9, 0x345C348
	0x0345C328 LDR X10, [X8 + 0xB0]
	0x0345C32C ADD X10, X10, 0x8
	0x0345C330 LDUR X11, [X10 - 0x8]
	0x0345C334 CMP X11, X1
	0x0345C338 B.EQ 0x345C358
	0x0345C33C SUBS X9, X9, 0x1
	0x0345C340 ADD X10, X10, 0x10
	0x0345C344 B.NE 0x345C330
	0x0345C348 MOVZ W2, 0x7
	0x0345C34C MOV X0, X21
	0x0345C350 BL 0x1C5C788
	0x0345C354 B 0x345C368
	0x0345C358 LDR W9, [X10]
	0x0345C35C ADD W9, W9, 0x7
	0x0345C360 ADD X8, X8, W9, 0x4, SXTW
	0x0345C364 ADD X0, X8, 0x138
	0x0345C368 LDP X8, X1, [X0]
	0x0345C36C MOV X0, X21
	0x0345C370 BLR X8
	0x0345C374 MOV X1, X31
	0x0345C378 BL 0x32277A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF82000
	007 Move X22, 0xC9B000
	008 Move W8, [X21+1950]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9B000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1950], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

