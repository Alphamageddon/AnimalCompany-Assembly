Type: Nakama.Client/<UnlinkFacebookAsync>d__113

Method: System.Void MoveNext()

Disassembly:
	0x0346B070 LDR X8, [X8 + 0x840]
	0x0346B074 LDR X1, [X8]
	0x0346B078 BL 0x269F5D0
	0x0346B07C ADRP X8, 0xC89000
	0x0346B080 LDR X8, [X8 + 0x838]
	0x0346B084 STR X0, [X31 + 0x20]
	0x0346B088 LDR X1, [X8]
	0x0346B08C ADD X0, X31, 0x20
	0x0346B090 BL 0x2677430
	0x0346B094 TBNZ X0, 0x0, 0x346AE8C
	0x0346B098 STR W31, [X19]
	0x0346B09C LDR X8, [X31 + 0x20]
	0x0346B0A0 STR X8, [X19 + 0x50]
	0x0346B0A4 LDR X0, [X25]
	0x0346B0A8 LDR W8, [X0 + 0xE0]
	0x0346B0AC CBNZ W8, 0x346B0B4
	0x0346B0B0 BL 0x1C16DFC
	0x0346B0B4 ADRP X8, 0xCC5000
	0x0346B0B8 LDR X8, [X8 + 0x560]
	0x0346B0BC ADD X0, X19, 0x8
	0x0346B0C0 LDR X3, [X8]
	0x0346B0C4 ADD X1, X31, 0x20
	0x0346B0C8 MOV X2, X19
	0x0346B0CC BL 0x2188F84
	0x0346B0D0 B 0x346B210
	0x0346B0D4 CBZ X20, 0x346B234
	0x0346B0D8 ADRP X8, 0xC90000
	0x0346B0DC LDR X8, [X8 + 0x818]
	0x0346B0E0 LDR X21, [X20 + 0x58]
	0x0346B0E4 LDR X23, [X19 + 0x48]
	0x0346B0E8 LDR X0, [X8]
	0x0346B0EC BL 0x1C16F10
	0x0346B0F0 ADRP X8, 0xCC5000
	0x0346B0F4 LDR X8, [X8 + 0x570]
	0x0346B0F8 MOV X22, X0
	0x0346B0FC LDR X2, [X8]
	0x0346B100 MOV X1, X23
	0x0346B104 MOV X3, X31
	0x0346B108 BL 0x2D27AA8
	0x0346B10C LDR X8, [X19 + 0x48]
	0x0346B110 CBZ X8, 0x346B228
	0x0346B114 ADRP X9, 0xCC4000
	0x0346B118 LDR X23, [X19 + 0x40]
	0x0346B11C LDR X9, [X9 + 0x7C8]
	0x0346B120 CBNZ X23, 0x346B128
	0x0346B124 LDR X23, [X20 + 0x18]
	0x0346B128 LDR X20, [X8 + 0x18]
	0x0346B12C LDR X1, [X8 + 0x28]
	0x0346B130 LDR X2, [X9]
	0x0346B134 STP X31, X31, [X31 + 0x8]
	0x0346B138 ADD X0, X31, 0x8
	0x0346B13C BL 0x242E368
	0x0346B140 ADRP X8, 0xCC4000
	0x0346B144 LDR X8, [X8 + 0x7D0]
	0x0346B148 LDR X0, [X8]
	0x0346B14C BL 0x1C16F10
	0x0346B150 LDP X3, X4, [X31 + 0x8]
	0x0346B154 MOV X24, X0
	0x0346B158 MOV X1, X20
	0x0346B15C MOV X2, X23
	0x0346B160 BL 0x3465404
	0x0346B164 CBZ X21, 0x346B22C
	0x0346B168 MOV X0, X21
	0x0346B16C MOV X1, X22
	0x0346B170 MOV X2, X24
	0x0346B174 BL 0x3465B68
	0x0346B178 CBZ X0, 0x346B230
	0x0346B17C MOV X1, X31
	0x0346B180 BL 0x33ED394
	0x0346B184 STR X0, [X31 + 0x18]
	0x0346B188 ADD X0, X31, 0x18
	0x0346B18C MOV X1, X31
	0x0346B190 BL 0x32C3A80
	0x0346B194 TBZ X0, 0x0, 0x346B1D4
	0x0346B198 ADD X0, X31, 0x18
	0x0346B19C MOV X1, X31
	0x0346B1A0 BL 0x32C3B4C
	0x0346B1A4 MOVN W8, 0x1
	0x0346B1A8 STR W8, [X19]
	0x0346B1AC STR X31, [X19 + 0x48]
	0x0346B1B0 LDR X0, [X25]
	0x0346B1B4 ADD X19, X19, 0x8
	0x0346B1B8 LDR W8, [X0 + 0xE0]
	0x0346B1BC CBNZ W8, 0x346B1C4
	0x0346B1C0 BL 0x1C16DFC
	0x0346B1C4 MOV X0, X19
	0x0346B1C8 MOV X1, X31
	0x0346B1CC BL 0x32C4864
	0x0346B1D0 B 0x346B210
	0x0346B1D4 MOVZ W8, 0x1
	0x0346B1D8 STR W8, [X19]
	0x0346B1DC LDR X8, [X31 + 0x18]
	0x0346B1E0 STR X8, [X19 + 0x58]
	0x0346B1E4 LDR X0, [X25]
	0x0346B1E8 LDR W8, [X0 + 0xE0]
	0x0346B1EC CBNZ W8, 0x346B1F4
	0x0346B1F0 BL 0x1C16DFC
	0x0346B1F4 ADRP X8, 0xCC5000
	0x0346B1F8 LDR X8, [X8 + 0x568]
	0x0346B1FC ADD X0, X19, 0x8
	0x0346B200 LDR X3, [X8]
	0x0346B204 ADD X1, X31, 0x18
	0x0346B208 MOV X2, X19
	0x0346B20C BL 0x218A648
	0x0346B210 LDP X20, X19, [X31 + 0x60]
	0x0346B214 LDP X22, X21, [X31 + 0x50]
	0x0346B218 LDP X24, X23, [X31 + 0x40]
	0x0346B21C LDP X30, X25, [X31 + 0x30]
	0x0346B220 ADD X31, X31, 0x70
	0x0346B224 RET
	0x0346B228 BL 0x1C16F20
	0x0346B22C BL 0x1C16F20
	0x0346B230 BL 0x1C16F20
	0x0346B234 BL 0x1C16F20
	0x0346B238 BL 0x1C16F20
	0x0346B23C BL 0x1C16F20
	0x0346B240 BL 0x1C16F20
	0x0346B244 BL 0x1C16F20
	0x0346B248 BL 0x1C16F20
	0x0346B24C BL 0x1C16F20
	0x0346B250 BL 0x1C16F20
	0x0346B254 BL 0x1C16F20
	0x0346B258 B 0x346B2CC
	0x0346B25C B 0x346B2CC
	0x0346B260 B 0x346B2CC
	0x0346B264 B 0x346B2CC
	0x0346B268 B 0x346B2CC
	0x0346B26C B 0x346B2CC
	0x0346B270 B 0x346B2CC
	0x0346B274 B 0x346B2CC
	0x0346B278 B 0x346B2CC
	0x0346B27C B 0x346B2CC
	0x0346B280 B 0x346B2CC
	0x0346B284 B 0x346B2CC
	0x0346B288 B 0x346B2CC
	0x0346B28C B 0x346B2CC
	0x0346B290 B 0x346B2CC
	0x0346B294 B 0x346B2CC
	0x0346B298 B 0x346B2CC
	0x0346B29C B 0x346B2CC
	0x0346B2A0 B 0x346B2CC
	0x0346B2A4 B 0x346B2CC
	0x0346B2A8 B 0x346B2CC
	0x0346B2AC B 0x346B2CC
	0x0346B2B0 B 0x346B2CC
	0x0346B2B4 B 0x346B2CC
	0x0346B2B8 B 0x346B2CC
	0x0346B2BC B 0x346B2CC
	0x0346B2C0 B 0x346B2CC
	0x0346B2C4 B 0x346B2CC
	0x0346B2C8 B 0x346B2CC
	0x0346B2CC MOV X20, X0
	0x0346B2D0 CMP W1, 0x1
	0x0346B2D4 B.NE 0x346B368
	0x0346B2D8 MOV X0, X20
	0x0346B2DC BL 0x3EB1AD0
	0x0346B2E0 MOV X20, X0
	0x0346B2E4 ADRP X0, 0xC88000
	0x0346B2E8 LDR X0, [X0 + 0x7D0]
	0x0346B2EC BL 0x1C16D08
	0x0346B2F0 LDR X8, [X20]
	0x0346B2F4 LDR X1, [X8]
	0x0346B2F8 BL 0x1C17270
	0x0346B2FC TBZ X0, 0x0, 0x346B340
	0x0346B300 LDR X20, [X20]
	0x0346B304 BL 0x3EB1AE0
	0x0346B308 MOVN W8, 0x1
	0x0346B30C STR X31, [X19 + 0x48]
	0x0346B310 STR W8, [X19], #0x8
	0x0346B314 ADRP X0, 0xC8B000
	0x0346B318 LDR X0, [X0 + 0x280]
	0x0346B31C BL 0x1C16D08
	0x0346B320 LDR W8, [X0 + 0xE0]
	0x0346B324 CBNZ W8, 0x346B32C
	0x0346B328 BL 0x1C16DFC
	0x0346B32C MOV X0, X19
	0x0346B330 MOV X1, X20
	0x0346B334 MOV X2, X31
	0x0346B338 BL 0x32C4908
	0x0346B33C B 0x346B210
	0x0346B340 MOVZ W0, 0x8
	0x0346B344 BL 0x3EB1AF0
	0x0346B348 LDR X8, [X20]
	0x0346B34C STR X8, [X0]
	0x0346B350 ADRP X1, 0xA49000
	0x0346B354 ADD X1, X1, 0xE58
	0x0346B358 MOV X2, X31
	0x0346B35C BL 0x3EB1B00
	0x0346B360 MOV X20, X0
	0x0346B364 BL 0x3EB1AE0
	0x0346B368 MOV X0, X20
	0x0346B36C BL 0x1D2C690
	0x0346B370 BL 0x1990590
	0x0346B374 STR X30, [X31 - 0x30]!
	0x0346B378 STP X22, X21, [X31 + 0x10]
	0x0346B37C STP X20, X19, [X31 + 0x20]
	0x0346B380 ADRP X21, 0xF72000
	0x0346B384 ADRP X22, 0xC8B000
	0x0346B388 LDRB W8, [X21 + 0x7D6]
	0x0346B38C LDR X22, [X22 + 0x280]
	0x0346B390 MOV X19, X1
	0x0346B394 MOV X20, X0
	0x0346B398 TBNZ X8, 0x0, 0x346B3B0
	0x0346B39C ADRP X0, 0xC8B000
	0x0346B3A0 LDR X0, [X0 + 0x280]
	0x0346B3A4 BL 0x1C16CF4
	0x0346B3A8 MOVZ W8, 0x1
	0x0346B3AC STRB W8, [X21 + 0x7D6]
	0x0346B3B0 LDR X0, [X22]
	0x0346B3B4 LDR W8, [X0 + 0xE0]
	0x0346B3B8 CBNZ W8, 0x346B3C0
	0x0346B3BC BL 0x1C16DFC
	0x0346B3C0 ADD X0, X20, 0x8
	0x0346B3C4 MOV X1, X19
	0x0346B3C8 LDP X20, X19, [X31 + 0x20]
	0x0346B3CC LDP X22, X21, [X31 + 0x10]
	0x0346B3D0 MOV X2, X31
	0x0346B3D4 LDR X30, [X31], #0x30
	0x0346B3D8 B 0x32C477C
	0x0346B3DC SUB X31, X31, 0x70
	0x0346B3E0 STP X30, X25, [X31 + 0x30]
	0x0346B3E4 STP X24, X23, [X31 + 0x40]
	0x0346B3E8 STP X22, X21, [X31 + 0x50]
	0x0346B3EC STP X20, X19, [X31 + 0x60]
	0x0346B3F0 ADRP X20, 0xF72000
	0x0346B3F4 LDRB W8, [X20 + 0x7D7]
	0x0346B3F8 MOV X19, X0
	0x0346B3FC TBNZ X8, 0x0, 0x346B4B0
	0x0346B400 ADRP X0, 0xCC5000
	0x0346B404 LDR X0, [X0 + 0x580]
	0x0346B408 BL 0x1C16CF4
	0x0346B40C ADRP X0, 0xCC5000
	0x0346B410 LDR X0, [X0 + 0x588]
	0x0346B414 BL 0x1C16CF4
	0x0346B418 ADRP X0, 0xC8B000
	0x0346B41C LDR X0, [X0 + 0x280]
	0x0346B420 BL 0x1C16CF4
	0x0346B424 ADRP X0, 0xC8A000
	0x0346B428 LDR X0, [X0 + 0xA10]
	0x0346B42C BL 0x1C16CF4
	0x0346B430 ADRP X0, 0xC89000
	0x0346B434 LDR X0, [X0 + 0x9F0]
	0x0346B438 BL 0x1C16CF4
	0x0346B43C ADRP X0, 0xC90000
	0x0346B440 LDR X0, [X0 + 0x818]
	0x0346B444 BL 0x1C16CF4
	0x0346B448 ADRP X0, 0xC89000
	0x0346B44C LDR X0, [X0 + 0x818]
	0x0346B450 BL 0x1C16CF4
	0x0346B454 ADRP X0, 0xCC4000
	0x0346B458 LDR X0, [X0 + 0x7C8]
	0x0346B45C BL 0x1C16CF4
	0x0346B460 ADRP X0, 0xCC4000
	0x0346B464 LDR X0, [X0 + 0x7D0]
	0x0346B468 BL 0x1C16CF4
	0x0346B46C ADRP X0, 0xC89000
	0x0346B470 LDR X0, [X0 + 0x830]
	0x0346B474 BL 0x1C16CF4
	0x0346B478 ADRP X0, 0xC89000
	0x0346B47C LDR X0, [X0 + 0x838]
	0x0346B480 BL 0x1C16CF4
	0x0346B484 ADRP X0, 0xC89000
	0x0346B488 LDR X0, [X0 + 0x840]
	0x0346B48C BL 0x1C16CF4
	0x0346B490 ADRP X0, 0xCC5000
	0x0346B494 LDR X0, [X0 + 0x590]
	0x0346B498 BL 0x1C16CF4
	0x0346B49C ADRP X0, 0xCC5000
	0x0346B4A0 LDR X0, [X0 + 0x598]
	0x0346B4A4 BL 0x1C16CF4
	0x0346B4A8 MOVZ W8, 0x1
	0x0346B4AC STRB W8, [X20 + 0x7D7]
	0x0346B4B0 STP X31, X31, [X31 + 0x20]
	0x0346B4B4 STR X31, [X31 + 0x18]
	0x0346B4B8 ADRP X25, 0xC8B000
	0x0346B4BC LDR W8, [X19]
	0x0346B4C0 LDR X20, [X19 + 0x20]
	0x0346B4C4 LDR X25, [X25 + 0x280]
	0x0346B4C8 CBZ W8, 0x346B4EC
	0x0346B4CC CMP W8, 0x1
	0x0346B4D0 B.NE 0x346B518
	0x0346B4D4 LDR X8, [X19 + 0x58]
	0x0346B4D8 MOVN W9, 0x0
	0x0346B4DC STR X8, [X31 + 0x18]
	0x0346B4E0 STR X31, [X19 + 0x58]
	0x0346B4E4 STR W9, [X19]
	0x0346B4E8 B 0x346B80C
	0x0346B4EC LDR X8, [X19 + 0x50]
	0x0346B4F0 MOVN W9, 0x0
	0x0346B4F4 STR X8, [X31 + 0x20]
	0x0346B4F8 STR X31, [X19 + 0x50]
	0x0346B4FC STR W9, [X19]
	0x0346B500 ADRP X8, 0xC89000
	0x0346B504 LDR X8, [X8 + 0x830]
	0x0346B508 ADD X0, X31, 0x20
	0x0346B50C LDR X1, [X8]
	0x0346B510 BL 0x2677474
	0x0346B514 B 0x346B748
	0x0346B518 ADRP X8, 0xCC5000
	0x0346B51C LDR X8, [X8 + 0x598]
	0x0346B520 LDR X0, [X8]
	0x0346B524 BL 0x1C16F10
	0x0346B528 MOV X21, X0
	0x0346B52C MOV X1, X31
	0x0346B530 BL 0x34468BC
	0x0346B534 STR X21, [X19 + 0x48]
	0x0346B538 CBZ X21, 0x346B8AC
	0x0346B53C LDR X8, [X19 + 0x20]
	0x0346B540 STR X8, [X21 + 0x10]
	0x0346B544 LDR X8, [X19 + 0x28]
	0x0346B548 STR X8, [X21 + 0x18]
	0x0346B54C LDR X8, [X19 + 0x30]
	0x0346B550 STR X8, [X21 + 0x20]
	0x0346B554 LDR X8, [X19 + 0x38]
	0x0346B558 STR X8, [X21 + 0x28]
	0x0346B55C CBZ X20, 0x346B8B0
	0x0346B560 LDRB W8, [X20 + 0x10]
	0x0346B564 CBZ W8, 0x346B74C
	0x0346B568 LDR X8, [X19 + 0x48]
	0x0346B56C CBZ X8, 0x346B8B4
	0x0346B570 LDR X21, [X8 + 0x18]
	0x0346B574 CBZ X21, 0x346B8B8
	0x0346B578 ADRP X23, 0xC89000
	0x0346B57C LDR X8, [X21]
	0x0346B580 LDR X23, [X23 + 0x818]
	0x0346B584 LDRH W9, [X8 + 0x12E]
	0x0346B588 LDR X1, [X23]
	0x0346B58C CBZ X9, 0x346B5B0
	0x0346B590 LDR X10, [X8 + 0xB0]
	0x0346B594 ADD X10, X10, 0x8
	0x0346B598 LDUR X11, [X10 - 0x8]
	0x0346B59C CMP X11, X1
	0x0346B5A0 B.EQ 0x346B5C0
	0x0346B5A4 SUBS X9, X9, 0x1
	0x0346B5A8 ADD X10, X10, 0x10
	0x0346B5AC B.NE 0x346B598
	0x0346B5B0 MOVZ W2, 0x7
	0x0346B5B4 MOV X0, X21
	0x0346B5B8 BL 0x1C5C788
	0x0346B5BC B 0x346B5D0
	0x0346B5C0 LDR W9, [X10]
	0x0346B5C4 ADD W9, W9, 0x7
	0x0346B5C8 ADD X8, X8, W9, 0x4, SXTW
	0x0346B5CC ADD X0, X8, 0x138
	0x0346B5D0 LDP X8, X1, [X0]
	0x0346B5D4 MOV X0, X21
	0x0346B5D8 BLR X8
	0x0346B5DC MOV X1, X31
	0x0346B5E0 BL 0x32277A8
	0x0346B5E4 TBNZ X0, 0x0, 0x346B748
	0x0346B5E8 LDR X8, [X19 + 0x48]
	0x0346B5EC CBZ X8, 0x346B8BC
	0x0346B5F0 ADRP X9, 0xC89000
	0x0346B5F4 LDR X9, [X9 + 0x9F0]
	0x0346B5F8 LDR X21, [X8 + 0x18]
	0x0346B5FC LDR X0, [X9]
	0x0346B600 LDR W9, [X0 + 0xE0]
	0x0346B604 CBNZ W9, 0x346B60C
	0x0346B608 BL 0x1C16DFC
	0x0346B60C MOV X0, X31
	0x0346B610 BL 0x33616A4
	0x0346B614 ADRP X22, 0xC8A000
	0x0346B618 LDR X22, [X22 + 0xA10]
	0x0346B61C MOV X8, X0
	0x0346B620 STR X8, [X31 + 0x28]
	0x0346B624 LDR X0, [X22]
	0x0346B628 LDR W8, [X0 + 0xE0]
	0x0346B62C CBNZ W8, 0x346B638
	0x0346B630 BL 0x1C16DFC
	0x0346B634 LDR X0, [X22]
	0x0346B638 LDR X8, [X0 + 0xB8]
	0x0346B63C LDR X1, [X8]
	0x0346B640 ADD X0, X31, 0x28
	0x0346B644 MOV X2, X31
	0x0346B648 BL 0x335FC68
	0x0346B64C CBZ X21, 0x346B8C0
	0x0346B650 LDR X8, [X21]
	0x0346B654 LDR X1, [X23]
	0x0346B658 MOV X22, X0
	0x0346B65C LDRH W9, [X8 + 0x12E]
	0x0346B660 CBZ X9, 0x346B684
	0x0346B664 LDR X10, [X8 + 0xB0]
	0x0346B668 ADD X10, X10, 0x8
	0x0346B66C LDUR X11, [X10 - 0x8]
	0x0346B670 CMP X11, X1
	0x0346B674 B.EQ 0x346B694
	0x0346B678 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF73000
	011 Move W8, [X20+2001]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCC6000
	018 Move X0, [X0+1312]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC6000
	021 Move X0, [X0+1320]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8C000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8B000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8A000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC91000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8A000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC5000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC5000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8A000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC8A000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8A000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC6000
	054 Move X0, [X0+1328]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC6000
	057 Move X0, [X0+1336]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2001], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC8C000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC8A000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCC6000
	091 Move X8, [X8+1336]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass113_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {354}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {355}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {356}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {357}
	119 Move X23, 0xC8A000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {358}
	152 Move X9, 0xC8A000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC8B000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {359}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {360}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {361}
	219 Move X8, 0xC8A000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC8A000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCC6000
	242 Move X8, [X8+1312]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {353}
	250 Move X8, 0xC91000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCC6000
	257 Move X8, [X8+1328]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {350}
	266 Move X9, 0xCC5000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCC5000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Call RetryHistory..ctor, X0, X1, X2, X3
	289 Compare X21, 0
	290 JumpIfEqual {351}
	291 Move X0, X21
	292 Move X1, X22
	293 Move X2, X24
	294 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	295 Compare X0, 0
	296 JumpIfEqual {352}
	297 Move X1, X31
	298 Call Task.GetAwaiter, X0
	299 Move [X31+24], X0
	300 Add X0, X31, 24
	301 Move X1, X31
	302 Call TaskAwaiter.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {324}
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.GetResult, X0
	310 Move TEMP, 1
	311 Not TEMP
	312 Move W8, TEMP
	313 Move [X19], W8
	314 Move [X19+72], X31
	315 Move X0, [X25]
	316 Add X19, X19, 8
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31+24]
	327 Move [X19+88], X8
	328 Move X0, [X25]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xCC6000
	334 Move X8, [X8+1320]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 24
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Add X31, X31, 112
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X20, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X20
	365 Call 0x3EB2AD0
	366 Move X20, X0
	367 Move X0, 0xC89000
	368 Move X0, [X0+2000]
	369 Call 0x1C17D08
	370 Move X8, [X20]
	371 Move X1, [X8]
	372 Call 0x1C18270
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move X20, [X20]
	378 Call 0x3EB2AE0
	379 Move TEMP, 1
	380 Not TEMP
	381 Move W8, TEMP
	382 Move [X19+72], X31
	383 Move [X19+8], W8
	384 Move X0, 0xC8C000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0xA4A000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346B67C ADD X10, X10, 0x10
	0x0346B680 B.NE 0x346B66C
	0x0346B684 MOVZ W2, 0xB
	0x0346B688 MOV X0, X21
	0x0346B68C BL 0x1C5C788
	0x0346B690 B 0x346B6A4
	0x0346B694 LDR W9, [X10]
	0x0346B698 ADD W9, W9, 0xB
	0x0346B69C ADD X8, X8, W9, 0x4, SXTW
	0x0346B6A0 ADD X0, X8, 0x138
	0x0346B6A4 LDP X8, X2, [X0]
	0x0346B6A8 MOV X0, X21
	0x0346B6AC MOV X1, X22
	0x0346B6B0 BLR X8
	0x0346B6B4 TBZ X0, 0x0, 0x346B748
	0x0346B6B8 LDR X8, [X19 + 0x48]
	0x0346B6BC CBZ X8, 0x346B8C4
	0x0346B6C0 LDR X1, [X8 + 0x18]
	0x0346B6C4 LDR X3, [X19 + 0x40]
	0x0346B6C8 LDR X4, [X8 + 0x28]
	0x0346B6CC MOV X0, X20
	0x0346B6D0 MOV X2, X31
	0x0346B6D4 MOV X5, X31
	0x0346B6D8 BL 0x34440A8
	0x0346B6DC CBZ X0, 0x346B8C8
	0x0346B6E0 ADRP X8, 0xC89000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF73000
	007 Move X22, 0xC8C000
	008 Move W8, [X21+2002]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8C000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2002], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

