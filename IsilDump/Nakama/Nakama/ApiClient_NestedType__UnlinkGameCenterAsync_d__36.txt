Type: Nakama.ApiClient/<UnlinkGameCenterAsync>d__36

Method: System.Void MoveNext()

Disassembly:
	0x03439C5C BL 0x1C16F28
	0x03439C60 BL 0x1C16F20
	0x03439C64 BL 0x1C16F20
	0x03439C68 BL 0x1C16F20
	0x03439C6C BL 0x1C16F20
	0x03439C70 BL 0x1C16F20
	0x03439C74 BL 0x1C16F20
	0x03439C78 B 0x3439CD8
	0x03439C7C B 0x3439CD8
	0x03439C80 B 0x3439CD8
	0x03439C84 B 0x3439CD8
	0x03439C88 B 0x3439CD8
	0x03439C8C B 0x3439CD8
	0x03439C90 B 0x3439CD8
	0x03439C94 B 0x3439CD8
	0x03439C98 B 0x3439CD8
	0x03439C9C B 0x3439CD8
	0x03439CA0 B 0x3439CD8
	0x03439CA4 B 0x3439CD8
	0x03439CA8 B 0x3439CD8
	0x03439CAC B 0x3439CD8
	0x03439CB0 B 0x3439CD8
	0x03439CB4 B 0x3439CD8
	0x03439CB8 B 0x3439CD8
	0x03439CBC B 0x3439CD8
	0x03439CC0 B 0x3439CD8
	0x03439CC4 B 0x3439CD8
	0x03439CC8 B 0x3439CD8
	0x03439CCC B 0x3439CD8
	0x03439CD0 B 0x3439CD8
	0x03439CD4 B 0x3439CD8
	0x03439CD8 MOV X20, X0
	0x03439CDC CMP W1, 0x1
	0x03439CE0 B.NE 0x3439D70
	0x03439CE4 MOV X0, X20
	0x03439CE8 BL 0x3EB1AD0
	0x03439CEC MOV X20, X0
	0x03439CF0 ADRP X0, 0xCBA000
	0x03439CF4 LDR X0, [X0 + 0x7D0]
	0x03439CF8 BL 0x1C16D08
	0x03439CFC LDR X8, [X20]
	0x03439D00 LDR X1, [X8]
	0x03439D04 BL 0x1C17270
	0x03439D08 TBZ X0, 0x0, 0x3439D48
	0x03439D0C LDR X20, [X20]
	0x03439D10 BL 0x3EB1AE0
	0x03439D14 MOVN W8, 0x1
	0x03439D18 STR W8, [X19], #0x8
	0x03439D1C ADRP X0, 0xCBD000
	0x03439D20 LDR X0, [X0 + 0x280]
	0x03439D24 BL 0x1C16D08
	0x03439D28 LDR W8, [X0 + 0xE0]
	0x03439D2C CBNZ W8, 0x3439D34
	0x03439D30 BL 0x1C16DFC
	0x03439D34 MOV X0, X19
	0x03439D38 MOV X1, X20
	0x03439D3C MOV X2, X31
	0x03439D40 BL 0x32C4908
	0x03439D44 B 0x3439BE8
	0x03439D48 MOVZ W0, 0x8
	0x03439D4C BL 0x3EB1AF0
	0x03439D50 LDR X8, [X20]
	0x03439D54 STR X8, [X0]
	0x03439D58 ADRP X1, 0xA7B000
	0x03439D5C ADD X1, X1, 0xE58
	0x03439D60 MOV X2, X31
	0x03439D64 BL 0x3EB1B00
	0x03439D68 MOV X20, X0
	0x03439D6C BL 0x3EB1AE0
	0x03439D70 MOV X0, X20
	0x03439D74 BL 0x1D2C690
	0x03439D78 BL 0x1990590
	0x03439D7C STR X30, [X31 - 0x30]!
	0x03439D80 STP X22, X21, [X31 + 0x10]
	0x03439D84 STP X20, X19, [X31 + 0x20]
	0x03439D88 ADRP X21, 0xFA4000
	0x03439D8C ADRP X22, 0xCBD000
	0x03439D90 LDRB W8, [X21 + 0x686]
	0x03439D94 LDR X22, [X22 + 0x280]
	0x03439D98 MOV X19, X1
	0x03439D9C MOV X20, X0
	0x03439DA0 TBNZ X8, 0x0, 0x3439DB8
	0x03439DA4 ADRP X0, 0xCBD000
	0x03439DA8 LDR X0, [X0 + 0x280]
	0x03439DAC BL 0x1C16CF4
	0x03439DB0 MOVZ W8, 0x1
	0x03439DB4 STRB W8, [X21 + 0x686]
	0x03439DB8 LDR X0, [X22]
	0x03439DBC LDR W8, [X0 + 0xE0]
	0x03439DC0 CBNZ W8, 0x3439DC8
	0x03439DC4 BL 0x1C16DFC
	0x03439DC8 ADD X0, X20, 0x8
	0x03439DCC MOV X1, X19
	0x03439DD0 LDP X20, X19, [X31 + 0x20]
	0x03439DD4 LDP X22, X21, [X31 + 0x10]
	0x03439DD8 MOV X2, X31
	0x03439DDC LDR X30, [X31], #0x30
	0x03439DE0 B 0x32C477C
	0x03439DE4 SUB X31, X31, 0x70
	0x03439DE8 STR X30, [X31 + 0x10]
	0x03439DEC STP X28, X27, [X31 + 0x20]
	0x03439DF0 STP X26, X25, [X31 + 0x30]
	0x03439DF4 STP X24, X23, [X31 + 0x40]
	0x03439DF8 STP X22, X21, [X31 + 0x50]
	0x03439DFC STP X20, X19, [X31 + 0x60]
	0x03439E00 ADRP X20, 0xFA4000
	0x03439E04 LDRB W8, [X20 + 0x687]
	0x03439E08 MOV X19, X0
	0x03439E0C TBNZ X8, 0x0, 0x3439ED8
	0x03439E10 ADRP X0, 0xCF6000
	0x03439E14 LDR X0, [X0 + 0x430]
	0x03439E18 BL 0x1C16CF4
	0x03439E1C ADRP X0, 0xCBD000
	0x03439E20 LDR X0, [X0 + 0x280]
	0x03439E24 BL 0x1C16CF4
	0x03439E28 ADRP X0, 0xCC3000
	0x03439E2C LDR X0, [X0 + 0x8D8]
	0x03439E30 BL 0x1C16CF4
	0x03439E34 ADRP X0, 0xCBB000
	0x03439E38 LDR X0, [X0 + 0x810]
	0x03439E3C BL 0x1C16CF4
	0x03439E40 ADRP X0, 0xCBB000
	0x03439E44 LDR X0, [X0 + 0x6C0]
	0x03439E48 BL 0x1C16CF4
	0x03439E4C ADRP X0, 0xCBB000
	0x03439E50 LDR X0, [X0 + 0x6D0]
	0x03439E54 BL 0x1C16CF4
	0x03439E58 ADRP X0, 0xCF5000
	0x03439E5C LDR X0, [X0 + 0x7B8]
	0x03439E60 BL 0x1C16CF4
	0x03439E64 ADRP X0, 0xCBD000
	0x03439E68 LDR X0, [X0 + 0x1E0]
	0x03439E6C BL 0x1C16CF4
	0x03439E70 ADRP X0, 0xCBD000
	0x03439E74 LDR X0, [X0 + 0x1F0]
	0x03439E78 BL 0x1C16CF4
	0x03439E7C ADRP X0, 0xCBD000
	0x03439E80 LDR X0, [X0 + 0x1F8]
	0x03439E84 BL 0x1C16CF4
	0x03439E88 ADRP X0, 0xCC3000
	0x03439E8C LDR X0, [X0 + 0x3A0]
	0x03439E90 BL 0x1C16CF4
	0x03439E94 ADRP X0, 0xCE3000
	0x03439E98 LDR X0, [X0 + 0x4E0]
	0x03439E9C BL 0x1C16CF4
	0x03439EA0 ADRP X0, 0xCF5000
	0x03439EA4 LDR X0, [X0 + 0x7D0]
	0x03439EA8 BL 0x1C16CF4
	0x03439EAC ADRP X0, 0xCF5000
	0x03439EB0 LDR X0, [X0 + 0x7D8]
	0x03439EB4 BL 0x1C16CF4
	0x03439EB8 ADRP X0, 0xCF5000
	0x03439EBC LDR X0, [X0 + 0xBF0]
	0x03439EC0 BL 0x1C16CF4
	0x03439EC4 ADRP X0, 0xCBA000
	0x03439EC8 LDR X0, [X0 + 0x988]
	0x03439ECC BL 0x1C16CF4
	0x03439ED0 MOVZ W8, 0x1
	0x03439ED4 STRB W8, [X20 + 0x687]
	0x03439ED8 STR X31, [X31 + 0x18]
	0x03439EDC ADRP X28, 0xCBD000
	0x03439EE0 LDR W8, [X19]
	0x03439EE4 LDR X28, [X28 + 0x280]
	0x03439EE8 CBZ W8, 0x343A0C8
	0x03439EEC LDR X8, [X19 + 0x20]
	0x03439EF0 CBZ X8, 0x343A1E0
	0x03439EF4 LDR X25, [X19 + 0x28]
	0x03439EF8 CBZ X25, 0x343A228
	0x03439EFC LDR X0, [X25 + 0x20]
	0x03439F00 CBZ X0, 0x343A22C
	0x03439F04 ADRP X8, 0xCF5000
	0x03439F08 ADRP X9, 0xCBA000
	0x03439F0C LDR X8, [X8 + 0xBF0]
	0x03439F10 LDR X9, [X9 + 0x988]
	0x03439F14 LDR X21, [X8]
	0x03439F18 LDR X20, [X9]
	0x03439F1C MOV X1, X31
	0x03439F20 BL 0x361B448
	0x03439F24 ADRP X8, 0xCC3000
	0x03439F28 LDR X8, [X8 + 0x8D8]
	0x03439F2C MOV X22, X0
	0x03439F30 LDR X0, [X8]
	0x03439F34 MOVZ W1, 0x1
	0x03439F38 BL 0x1C16D6C
	0x03439F3C MOV X1, X0
	0x03439F40 CBZ X1, 0x343A230
	0x03439F44 LDR W8, [X1 + 0x18]
	0x03439F48 CBZ W8, 0x343A234
	0x03439F4C MOVZ W8, 0x2F
	0x03439F50 STRH W8, [X1 + 0x20]
	0x03439F54 CBZ X22, 0x343A238
	0x03439F58 MOV X0, X22
	0x03439F5C MOV X2, X31
	0x03439F60 BL 0x322BC58
	0x03439F64 MOV X1, X21
	0x03439F68 MOV X2, X31
	0x03439F6C BL 0x321B938
	0x03439F70 ADRP X8, 0xCC3000
	0x03439F74 LDR X8, [X8 + 0x3A0]
	0x03439F78 MOV X22, X0
	0x03439F7C LDR X23, [X25 + 0x20]
	0x03439F80 LDR X0, [X8]
	0x03439F84 BL 0x1C16F10
	0x03439F88 MOV X21, X0
	0x03439F8C MOV X1, X23
	0x03439F90 MOV X2, X31
	0x03439F94 BL 0x36281F8
	0x03439F98 CBZ X21, 0x343A23C
	0x03439F9C MOV X0, X21
	0x03439FA0 MOV X1, X22
	0x03439FA4 MOV X2, X31
	0x03439FA8 BL 0x36288CC
	0x03439FAC MOV X0, X21
	0x03439FB0 MOV X1, X20
	0x03439FB4 MOV X2, X31
	0x03439FB8 BL 0x3628980
	0x03439FBC MOV X0, X21
	0x03439FC0 MOV X1, X31
	0x03439FC4 BL 0x3628A38
	0x03439FC8 ADRP X8, 0xCE3000
	0x03439FCC ADRP X9, 0xCBB000
	0x03439FD0 LDR X8, [X8 + 0x4E0]
	0x03439FD4 LDR X9, [X9 + 0x6D0]
	0x03439FD8 MOV X20, X0
	0x03439FDC LDR X21, [X8]
	0x03439FE0 LDR X0, [X9]
	0x03439FE4 BL 0x1C16F10
	0x03439FE8 ADRP X8, 0xCBB000
	0x03439FEC LDR X8, [X8 + 0x6C0]
	0x03439FF0 MOV X22, X0
	0x03439FF4 LDR X1, [X8]
	0x03439FF8 BL 0x2AA4804
	0x03439FFC ADRP X8, 0xCF5000
	0x0343A000 LDR X8, [X8 + 0x7D8]
	0x0343A004 LDR X1, [X19 + 0x30]
	0x0343A008 LDR X0, [X8]
	0x0343A00C MOV X2, X31
	0x0343A010 BL 0x321B938
	0x0343A014 CBZ X22, 0x343A240
	0x0343A018 ADRP X8, 0xCF4000
	0x0343A01C LDR X8, [X8 + 0x7D0]
	0x0343A020 ADRP X9, 0xCBA000
	0x0343A024 LDR X9, [X9 + 0x810]
	0x0343A028 MOV X2, X0
	0x0343A02C LDR X1, [X8]
	0x0343A030 LDR X3, [X9]
	0x0343A034 MOV X0, X22
	0x0343A038 BL 0x2AA5098
	0x0343A03C LDR X0, [X19 + 0x20]
	0x0343A040 MOV X1, X31
	0x0343A044 BL 0x3483BE4
	0x0343A048 MOV X23, X0
	0x0343A04C MOV X0, X31
	0x0343A050 BL 0x3241948
	0x0343A054 CBZ X0, 0x343A244
	0x0343A058 LDR X8, [X0]
	0x0343A05C LDR X9, [X8 + 0x268]
	0x0343A060 LDR X2, [X8 + 0x270]
	0x0343A064 MOV X1, X23
	0x0343A068 BLR X9
	0x0343A06C LDR X24, [X25 + 0x10]
	0x0343A070 CBZ X24, 0x343A248
	0x0343A074 ADRP X10, 0xCF4000
	0x0343A078 LDR X10, [X10 + 0x7B8]
	0x0343A07C LDR X8, [X24]
	0x0343A080 LDR W26, [X25 + 0x18]
	0x0343A084 LDP X27, X25, [X19 + 0x38]
	0x0343A088 LDR X1, [X10]
	0x0343A08C LDRH W9, [X8 + 0x12E]
	0x0343A090 MOV X23, X0
	0x0343A094 CBZ X9, 0x343A0B8
	0x0343A098 LDR X10, [X8 + 0xB0]
	0x0343A09C ADD X10, X10, 0x8
	0x0343A0A0 LDUR X11, [X10 - 0x8]
	0x0343A0A4 CMP X11, X1
	0x0343A0A8 B.EQ 0x343A0E0
	0x0343A0AC SUBS X9, X9, 0x1
	0x0343A0B0 ADD X10, X10, 0x10
	0x0343A0B4 B.NE 0x343A0A0
	0x0343A0B8 MOVZ W2, 0x3
	0x0343A0BC MOV X0, X24
	0x0343A0C0 BL 0x1C5C788
	0x0343A0C4 B 0x343A0F0
	0x0343A0C8 LDR X8, [X19 + 0x48]
	0x0343A0CC MOVN W9, 0x0
	0x0343A0D0 STR X8, [X31 + 0x18]
	0x0343A0D4 STR X31, [X19 + 0x48]
	0x0343A0D8 STR W9, [X19]
	0x0343A0DC B 0x343A14C
	0x0343A0E0 LDR W9, [X10]
	0x0343A0E4 ADD W9, W9, 0x3
	0x0343A0E8 ADD X8, X8, W9, 0x4, SXTW
	0x0343A0EC ADD X0, X8, 0x138
	0x0343A0F0 LDP X8, X9, [X0]
	0x0343A0F4 MOV X0, X24
	0x0343A0F8 MOV X1, X21
	0x0343A0FC MOV X2, X20
	0x0343A100 MOV X3, X22
	0x0343A104 MOV X4, X23
	0x0343A108 MOV W5, W26
	0x0343A10C MOV X6, X27
	0x0343A110 MOV X7, X25
	0x0343A114 STR X9, [X31]
	0x0343A118 BLR X8
	0x0343A11C CBZ X0, 0x343A24C
	0x0343A120 ADRP X8, 0xCBC000
	0x0343A124 LDR X8, [X8 + 0x1F8]
	0x0343A128 LDR X1, [X8]
	0x0343A12C BL 0x269F5D0
	0x0343A130 ADRP X8, 0xCBC000
	0x0343A134 LDR X8, [X8 + 0x1F0]
	0x0343A138 STR X0, [X31 + 0x18]
	0x0343A13C LDR X1, [X8]
	0x0343A140 ADD X0, X31, 0x18
	0x0343A144 BL 0x2677430
	0x0343A148 TBZ X0, 0x0, 0x343A188
	0x0343A14C ADRP X8, 0xCBC000
	0x0343A150 LDR X8, [X8 + 0x1E0]
	0x0343A154 ADD X0, X31, 0x18
	0x0343A158 LDR X1, [X8]
	0x0343A15C BL 0x2677474
	0x0343A160 MOVN W8, 0x1
	0x0343A164 STR W8, [X19], #0x8
	0x0343A168 LDR X0, [X28]
	0x0343A16C LDR W8, [X0 + 0xE0]
	0x0343A170 CBNZ W8, 0x343A178
	0x0343A174 BL 0x1C16DFC
	0x0343A178 MOV X0, X19
	0x0343A17C MOV X1, X31
	0x0343A180 BL 0x32C4864
	0x0343A184 B 0x343A1C0
	0x0343A188 STR W31, [X19]
	0x0343A18C LDR X8, [X31 + 0x18]
	0x0343A190 STR X8, [X19 + 0x48]
	0x0343A194 LDR X0, [X28]
	0x0343A198 LDR W8, [X0 + 0xE0]
	0x0343A19C CBNZ W8, 0x343A1A4
	0x0343A1A0 BL 0x1C16DFC
	0x0343A1A4 ADRP X8, 0xCF5000
	0x0343A1A8 LDR X8, [X8 + 0x430]
	0x0343A1AC ADD X0, X19, 0x8
	0x0343A1B0 LDR X3, [X8]
	0x0343A1B4 ADD X1, X31, 0x18
	0x0343A1B8 MOV X2, X19
	0x0343A1BC BL 0x2187100
	0x0343A1C0 LDP X20, X19, [X31 + 0x60]
	0x0343A1C4 LDP X22, X21, [X31 + 0x50]
	0x0343A1C8 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA5000
	014 Move W8, [X20+1665]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF7000
	021 Move X0, [X0+1000]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBE000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC4000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBC000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBC000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBC000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF6000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBE000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBE000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBE000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC4000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF7000
	054 Move X0, [X0+1008]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE4000
	057 Move X0, [X0+1240]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF6000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF6000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBB000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1665], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCBE000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF7000
	086 Move X9, 0xCBB000
	087 Move X8, [X8+1008]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC4000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC4000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE4000
	139 Move X9, 0xCBC000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBC000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF6000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF6000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBC000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF6000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCBE000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCBE000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCBE000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF6000
	269 Move X8, [X8+1000]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC2000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF5000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF6000
	301 Move X0, [X0+1016]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBA000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCBD000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7B000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343A1CC LDP X26, X25, [X31 + 0x30]
	0x0343A1D0 LDP X28, X27, [X31 + 0x20]
	0x0343A1D4 LDR X30, [X31 + 0x10]
	0x0343A1D8 ADD X31, X31, 0x70
	0x0343A1DC RET
	0x0343A1E0 ADRP X0, 0xCC1000
	0x0343A1E4 LDR X0, [X0 + 0x578]
	0x0343A1E8 BL 0x1C16D08
	0x0343A1EC BL 0x1C16F10
	0x0343A1F0 MOV X20, X0
	0x0343A1F4 ADRP X0, 0xCF4000
	0x0343A1F8 LDR X0, [X0 + 0xBC8]
	0x0343A1FC BL 0x1C16D08
	0x0343A200 MOV X1, X0
	0x0343A204 MOV X0, X20
	0x0343A208 MOV X2, X31
	0x0343A20C BL 0x3314A68
	0x0343A210 ADRP X0, 0xCF5000
	0x0343A214 LDR X0, [X0 + 0x438]
	0x0343A218 BL 0x1C16D08
	0x0343A21C MOV X1, X0
	0x0343A220 MOV X0, X20
	0x0343A224 BL 0x1C16DEC
	0x0343A228 BL 0x1C16F20
	0x0343A22C BL 0x1C16F20
	0x0343A230 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA4000
	007 Move X22, 0xCBD000
	008 Move W8, [X21+1666]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBD000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1666], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

