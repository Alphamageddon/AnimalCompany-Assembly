Type: Nakama.Socket/<AddMatchmakerAsync>d__77

Method: System.Void MoveNext()

Disassembly:
	0x0348133C LDR X0, [X8]
	0x03481340 BL 0x1C16F10
	0x03481344 MOV X21, X0
	0x03481348 MOV X1, X31
	0x0348134C BL 0x33BDD8C
	0x03481350 ADRP X8, 0xC72000
	0x03481354 LDR X8, [X8 + 0x758]
	0x03481358 STR W22, [X31 + 0x4]
	0x0348135C LDR X0, [X8]
	0x03481360 ADD X1, X31, 0x4
	0x03481364 BL 0x1C16E04
	0x03481368 MOV X1, X0
	0x0348136C ADRP X8, 0xC76000
	0x03481370 LDR X8, [X8 + 0x110]
	0x03481374 LDR X0, [X8]
	0x03481378 MOV X2, X31
	0x0348137C BL 0x321EFD0
	0x03481380 CBZ X21, 0x3481520
	0x03481384 ADRP X8, 0xCAF000
	0x03481388 LDR X8, [X8 + 0xF38]
	0x0348138C STR X0, [X21 + 0x10]
	0x03481390 LDR X0, [X8]
	0x03481394 BL 0x1C16F10
	0x03481398 MOV X22, X0
	0x0348139C MOV X1, X31
	0x034813A0 BL 0x33BDD8C
	0x034813A4 ADRP X27, 0xC73000
	0x034813A8 LDR X27, [X27 + 0x1D0]
	0x034813AC LDR X24, [X19 + 0x28]
	0x034813B0 LDR X0, [X27]
	0x034813B4 BL 0x1C16F10
	0x034813B8 ADRP X26, 0xC7A000
	0x034813BC LDR X26, [X26 + 0xDD8]
	0x034813C0 MOV X23, X0
	0x034813C4 LDR X2, [X26]
	0x034813C8 MOV X1, X24
	0x034813CC BL 0x301B8E0
	0x034813D0 CBZ X22, 0x3481524
	0x034813D4 STR X23, [X22 + 0x10]
	0x034813D8 LDR X24, [X19 + 0x30]
	0x034813DC LDR X0, [X27]
	0x034813E0 CBZ X24, 0x3481414
	0x034813E4 BL 0x1C16F10
	0x034813E8 LDR X2, [X26]
	0x034813EC MOV X23, X0
	0x034813F0 MOV X1, X24
	0x034813F4 BL 0x301B8E0
	0x034813F8 B 0x348142C
	0x034813FC LDR X8, [X19 + 0x38]
	0x03481400 MOVN W9, 0x0
	0x03481404 STR X8, [X31 + 0x8]
	0x03481408 STR X31, [X19 + 0x38]
	0x0348140C STR W9, [X19]
	0x03481410 B 0x3481474
	0x03481414 BL 0x1C16F10
	0x03481418 ADRP X8, 0xC73000
	0x0348141C LDR X8, [X8 + 0x1C0]
	0x03481420 MOV X23, X0
	0x03481424 LDR X1, [X8]
	0x03481428 BL 0x301B7C4
	0x0348142C STR X23, [X22 + 0x18]
	0x03481430 STR X22, [X21 + 0xD8]
	0x03481434 MOV X0, X20
	0x03481438 MOV X1, X21
	0x0348143C MOV X2, X31
	0x03481440 BL 0x347BA8C
	0x03481444 CBZ X0, 0x3481528
	0x03481448 ADRP X8, 0xCAF000
	0x0348144C LDR X8, [X8 + 0xE98]
	0x03481450 LDR X1, [X8]
	0x03481454 BL 0x269F5D0
	0x03481458 ADRP X8, 0xCAF000
	0x0348145C LDR X8, [X8 + 0xE90]
	0x03481460 STR X0, [X31 + 0x8]
	0x03481464 LDR X1, [X8]
	0x03481468 ADD X0, X31, 0x8
	0x0348146C BL 0x2677430
	0x03481470 TBZ X0, 0x0, 0x34814C4
	0x03481474 ADRP X8, 0xCAF000
	0x03481478 LDR X8, [X8 + 0xE88]
	0x0348147C ADD X0, X31, 0x8
	0x03481480 LDR X1, [X8]
	0x03481484 BL 0x2677474
	0x03481488 CBZ X0, 0x3481518
	0x0348148C MOVN W8, 0x1
	0x03481490 LDR X20, [X0 + 0xD0]
	0x03481494 STR W8, [X19], #0x8
	0x03481498 LDR X0, [X25]
	0x0348149C ADRP X21, 0xCAF000
	0x034814A0 LDR W8, [X0 + 0xE0]
	0x034814A4 LDR X21, [X21 + 0xF30]
	0x034814A8 CBNZ W8, 0x34814B0
	0x034814AC BL 0x1C16DFC
	0x034814B0 LDR X2, [X21]
	0x034814B4 MOV X0, X19
	0x034814B8 MOV X1, X20
	0x034814BC BL 0x26322B0
	0x034814C0 B 0x34814FC
	0x034814C4 STR W31, [X19]
	0x034814C8 LDR X8, [X31 + 0x8]
	0x034814CC STR X8, [X19 + 0x38]
	0x034814D0 LDR X0, [X25]
	0x034814D4 LDR W8, [X0 + 0xE0]
	0x034814D8 CBNZ W8, 0x34814E0
	0x034814DC BL 0x1C16DFC
	0x034814E0 ADRP X8, 0xCAF000
	0x034814E4 LDR X8, [X8 + 0xF28]
	0x034814E8 ADD X0, X19, 0x8
	0x034814EC LDR X3, [X8]
	0x034814F0 ADD X1, X31, 0x8
	0x034814F4 MOV X2, X19
	0x034814F8 BL 0x1FC1EA8
	0x034814FC LDP X20, X19, [X31 + 0x50]
	0x03481500 LDP X22, X21, [X31 + 0x40]
	0x03481504 LDP X24, X23, [X31 + 0x30]
	0x03481508 LDP X26, X25, [X31 + 0x20]
	0x0348150C LDP X30, X27, [X31 + 0x10]
	0x03481510 ADD X31, X31, 0x60
	0x03481514 RET
	0x03481518 BL 0x1C16F20
	0x0348151C BL 0x1C16F20
	0x03481520 BL 0x1C16F20
	0x03481524 BL 0x1C16F20
	0x03481528 BL 0x1C16F20
	0x0348152C B 0x3481560
	0x03481530 B 0x3481560
	0x03481534 B 0x3481560
	0x03481538 B 0x3481560
	0x0348153C B 0x3481560
	0x03481540 B 0x3481560
	0x03481544 B 0x3481560
	0x03481548 B 0x3481560
	0x0348154C B 0x3481560
	0x03481550 B 0x3481560
	0x03481554 B 0x3481560
	0x03481558 B 0x3481560
	0x0348155C B 0x3481560
	0x03481560 MOV X20, X0
	0x03481564 CMP W1, 0x1
	0x03481568 B.NE 0x3481604
	0x0348156C MOV X0, X20
	0x03481570 BL 0x3EB1AD0
	0x03481574 MOV X20, X0
	0x03481578 ADRP X0, 0xC72000
	0x0348157C LDR X0, [X0 + 0x7D0]
	0x03481580 BL 0x1C16D08
	0x03481584 LDR X8, [X20]
	0x03481588 LDR X1, [X8]
	0x0348158C BL 0x1C17270
	0x03481590 TBZ X0, 0x0, 0x34815DC
	0x03481594 LDR X20, [X20]
	0x03481598 BL 0x3EB1AE0
	0x0348159C MOVN W8, 0x1
	0x034815A0 STR W8, [X19], #0x8
	0x034815A4 ADRP X0, 0xCAF000
	0x034815A8 LDR X0, [X0 + 0xCA0]
	0x034815AC BL 0x1C16D08
	0x034815B0 LDR W8, [X0 + 0xE0]
	0x034815B4 CBNZ W8, 0x34815BC
	0x034815B8 BL 0x1C16DFC
	0x034815BC ADRP X0, 0xCAF000
	0x034815C0 LDR X0, [X0 + 0xF40]
	0x034815C4 BL 0x1C16D08
	0x034815C8 MOV X2, X0
	0x034815CC MOV X0, X19
	0x034815D0 MOV X1, X20
	0x034815D4 BL 0x26324C8
	0x034815D8 B 0x34814FC
	0x034815DC MOVZ W0, 0x8
	0x034815E0 BL 0x3EB1AF0
	0x034815E4 LDR X8, [X20]
	0x034815E8 STR X8, [X0]
	0x034815EC ADRP X1, 0xA33000
	0x034815F0 ADD X1, X1, 0xE58
	0x034815F4 MOV X2, X31
	0x034815F8 BL 0x3EB1B00
	0x034815FC MOV X20, X0
	0x03481600 BL 0x3EB1AE0
	0x03481604 MOV X0, X20
	0x03481608 BL 0x1D2C690
	0x0348160C BL 0x1990590
	0x03481610 MOV X1, X31
	0x03481614 B 0x33BDD8C
	0x03481618 STR X30, [X31 - 0x30]!
	0x0348161C STP X22, X21, [X31 + 0x10]
	0x03481620 STP X20, X19, [X31 + 0x20]
	0x03481624 ADRP X22, 0xF5C000
	0x03481628 ADRP X21, 0xCAF000
	0x0348162C LDRB W8, [X22 + 0x8C1]
	0x03481630 LDR X21, [X21 + 0xCA0]
	0x03481634 MOV X19, X1
	0x03481638 MOV X20, X0
	0x0348163C TBNZ X8, 0x0, 0x3481660
	0x03481640 ADRP X0, 0xCAF000
	0x03481644 LDR X0, [X0 + 0xF48]
	0x03481648 BL 0x1C16CF4
	0x0348164C ADRP X0, 0xCAF000
	0x03481650 LDR X0, [X0 + 0xCA0]
	0x03481654 BL 0x1C16CF4
	0x03481658 MOVZ W8, 0x1
	0x0348165C STRB W8, [X22 + 0x8C1]
	0x03481660 LDR X0, [X21]
	0x03481664 ADRP X21, 0xCAF000
	0x03481668 LDR W8, [X0 + 0xE0]
	0x0348166C LDR X21, [X21 + 0xF48]
	0x03481670 CBNZ W8, 0x3481678
	0x03481674 BL 0x1C16DFC
	0x03481678 LDR X2, [X21]
	0x0348167C ADD X0, X20, 0x8
	0x03481680 MOV X1, X19
	0x03481684 LDP X20, X19, [X31 + 0x20]
	0x03481688 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF5D000
	009 Move W8, [X20+2232]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCB0000
	016 Move X0, [X0+3696]
	017 Call 0x1C17CF4
	018 Move X0, 0xCB0000
	019 Move X0, [X0+3704]
	020 Call 0x1C17CF4
	021 Move X0, 0xCB0000
	022 Move X0, [X0+3064]
	023 Call 0x1C17CF4
	024 Move X0, 0xC73000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB0000
	028 Move X0, [X0+3712]
	029 Call 0x1C17CF4
	030 Move X0, 0xCB0000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCB0000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCB0000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCB0000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC77000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2232], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCB0000
	049 Move W8, [X19]
	050 Move X23, [X23+3064]
	051 Compare W8, 0
	052 JumpIfEqual {138}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {177}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCB0000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC73000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC77000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {178}
	081 Move X8, 0xCB0000
	082 Move X8, [X8+3712]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call MatchmakerAddMessage..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {179}
	091 Move X8, [X19+40]
	092 Move [X22+32], X8
	093 Move V0, [X19+48]
	094 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	095 Move [X22+16], D0
	096 Move X8, [X19+56]
	097 Move [X22+40], X8
	098 Move X8, [X19+64]
	099 Move [X22+24], X8
	100 Move X8, [X19+72]
	101 Move [X22+48], X8
	102 Move [X21+104], X22
	103 Move X0, X20
	104 Move X1, X21
	105 Move X2, X31
	106 Call Socket.SendAsync, X0, X1
	107 Compare X0, 0
	108 JumpIfEqual {180}
	109 Move X8, 0xCB0000
	110 Move X8, [X8+3736]
	111 Move X1, [X8]
	112 Call Task`1<Object>.GetAwaiter, X0
	113 Move X8, 0xCB0000
	114 Move X8, [X8+3728]
	115 Move [X31+8], X0
	116 Move X1, [X8]
	117 Add X0, X31, 8
	118 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {145}
	123 Move [X19], W31
	124 Move X8, [X31+8]
	125 Move [X19+80], X8
	126 Move X0, [X23]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X8, 0xCB0000
	132 Move X8, [X8+3696]
	133 Add X0, X19, 8
	134 Move X3, [X8]
	135 Add X1, X31, 8
	136 Move X2, X19
	137 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	138 Move X8, [X19+80]
	139 Move TEMP, 0
	140 Not TEMP
	141 Move W9, TEMP
	142 Move [X31+8], X8
	143 Move [X19+80], X31
	144 Move [X19], W9
	145 Move X8, 0xCB0000
	146 Move X8, [X8+3720]
	147 Add X0, X31, 8
	148 Move X1, [X8]
	149 Call TaskAwaiter`1<Object>.GetResult, X0
	150 Compare X0, 0
	151 JumpIfEqual {176}
	152 Move TEMP, 1
	153 Not TEMP
	154 Move W8, TEMP
	155 Move X20, [X0+128]
	156 Move [X19+8], W8
	157 Move X0, [X23]
	158 Move X21, 0xCB0000
	159 Move W8, [X0+224]
	160 Move X21, [X21+3704]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X2, [X21]
	165 Move X0, X19
	166 Move X1, X20
	167 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X30, [X31+16]
	173 Move X23, [X31+24]
	174 Add X31, X31, 64
	175 Return 
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Call 0x1C17F20
	179 Call 0x1C17F20
	180 Call 0x1C17F20
	181 Move X20, X0
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X0, X20
	184 Call 0x3EB2AD0
	185 Move X20, X0
	186 Move X0, 0xC73000
	187 Move X0, [X0+2000]
	188 Call 0x1C17D08
	189 Move X8, [X20]
	190 Move X1, [X8]
	191 Call 0x1C18270
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {216}
	196 Move X20, [X20]
	197 Call 0x3EB2AE0
	198 Move TEMP, 1
	199 Not TEMP
	200 Move W8, TEMP
	201 Move [X19+8], W8
	202 Move X0, 0xCB0000
	203 Move X0, [X0+3064]
	204 Call 0x1C17D08
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, 0xCB0000
	210 Move X0, [X0+3744]
	211 Call 0x1C17D08
	212 Move X2, X0
	213 Move X0, X19
	214 Move X1, X20
	215 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	216 Move W0, 8
	217 Call 0x3EB2AF0
	218 Move X8, [X20]
	219 Move [X0], X8
	220 Move X1, 0xA34000
	221 Add X1, X1, 3672
	222 Move X2, X31
	223 Call 0x3EB2B00
	224 Move X20, X0
	225 Call 0x3EB2AE0
	226 Move X0, X20
	227 Call 0x1D2D690
	228 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03481694 SUB X31, X31, 0x40
	0x03481698 STP X30, X23, [X31 + 0x10]
	0x0348169C STP X22, X21, [X31 + 0x20]
	0x034816A0 STP X20, X19, [X31 + 0x30]
	0x034816A4 ADRP X20, 0xF5C000
	0x034816A8 LDRB W8, [X20 + 0x8C2]
	0x034816AC MOV X19, X0
	0x034816B0 TBNZ X8, 0x0, 0x3481734
	0x034816B4 ADRP X0, 0xCAF000
	0x034816B8 LDR X0, [X0 + 0xF50]
	0x034816BC BL 0x1C16CF4
	0x034816C0 ADRP X0, 0xCAF000
	0x034816C4 LDR X0, [X0 + 0xF58]
	0x034816C8 BL 0x1C16CF4
	0x034816CC ADRP X0, 0xCAF000
	0x034816D0 LDR X0, [X0 + 0xCC0]
	0x034816D4 BL 0x1C16CF4
	0x034816D8 ADRP X0, 0xCAF000
	0x034816DC LDR X0, [X0 + 0xF60]
	0x034816E0 BL 0x1C16CF4
	0x034816E4 ADRP X0, 0xC72000
	0x034816E8 LDR X0, [X0 + 0x758]
	0x034816EC BL 0x1C16CF4
	0x034816F0 ADRP X0, 0xCAF000
	0x034816F4 LDR X0, [X0 + 0xE88]
	0x034816F8 BL 0x1C16CF4
	0x034816FC ADRP X0, 0xCAF000
	0x03481700 LDR X0, [X0 + 0xE90]
	0x03481704 BL 0x1C16CF4
	0x03481708 ADRP X0, 0xCAF000
	0x0348170C LDR X0, [X0 + 0xE98]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5D000
	007 Move X21, 0xCB0000
	008 Move W8, [X22+2233]
	009 Move X21, [X21+3064]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCB0000
	017 Move X0, [X0+3752]
	018 Call 0x1C17CF4
	019 Move X0, 0xCB0000
	020 Move X0, [X0+3064]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2233], W8
	024 Move X0, [X21]
	025 Move X21, 0xCB0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3752]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

