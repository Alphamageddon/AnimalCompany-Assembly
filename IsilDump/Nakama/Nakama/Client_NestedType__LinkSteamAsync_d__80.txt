Type: Nakama.Client/<LinkSteamAsync>d__80

Method: System.Void MoveNext()

Disassembly:
	0x0345C37C TBNZ X0, 0x0, 0x345C4E0
	0x0345C380 LDR X8, [X19 + 0x58]
	0x0345C384 CBZ X8, 0x345C690
	0x0345C388 ADRP X9, 0xC98000
	0x0345C38C LDR X9, [X9 + 0x9F0]
	0x0345C390 LDR X21, [X8 + 0x18]
	0x0345C394 LDR X0, [X9]
	0x0345C398 LDR W9, [X0 + 0xE0]
	0x0345C39C CBNZ W9, 0x345C3A4
	0x0345C3A0 BL 0x1C16DFC
	0x0345C3A4 MOV X0, X31
	0x0345C3A8 BL 0x33616A4
	0x0345C3AC ADRP X22, 0xC99000
	0x0345C3B0 LDR X22, [X22 + 0xA10]
	0x0345C3B4 MOV X8, X0
	0x0345C3B8 STR X8, [X31 + 0x28]
	0x0345C3BC LDR X0, [X22]
	0x0345C3C0 LDR W8, [X0 + 0xE0]
	0x0345C3C4 CBNZ W8, 0x345C3D0
	0x0345C3C8 BL 0x1C16DFC
	0x0345C3CC LDR X0, [X22]
	0x0345C3D0 LDR X8, [X0 + 0xB8]
	0x0345C3D4 LDR X1, [X8]
	0x0345C3D8 ADD X0, X31, 0x28
	0x0345C3DC MOV X2, X31
	0x0345C3E0 BL 0x335FC68
	0x0345C3E4 CBZ X21, 0x345C694
	0x0345C3E8 LDR X8, [X21]
	0x0345C3EC LDR X1, [X23]
	0x0345C3F0 MOV X22, X0
	0x0345C3F4 LDRH W9, [X8 + 0x12E]
	0x0345C3F8 CBZ X9, 0x345C41C
	0x0345C3FC LDR X10, [X8 + 0xB0]
	0x0345C400 ADD X10, X10, 0x8
	0x0345C404 LDUR X11, [X10 - 0x8]
	0x0345C408 CMP X11, X1
	0x0345C40C B.EQ 0x345C42C
	0x0345C410 SUBS X9, X9, 0x1
	0x0345C414 ADD X10, X10, 0x10
	0x0345C418 B.NE 0x345C404
	0x0345C41C MOVZ W2, 0xB
	0x0345C420 MOV X0, X21
	0x0345C424 BL 0x1C5C788
	0x0345C428 B 0x345C43C
	0x0345C42C LDR W9, [X10]
	0x0345C430 ADD W9, W9, 0xB
	0x0345C434 ADD X8, X8, W9, 0x4, SXTW
	0x0345C438 ADD X0, X8, 0x138
	0x0345C43C LDP X8, X2, [X0]
	0x0345C440 MOV X0, X21
	0x0345C444 MOV X1, X22
	0x0345C448 BLR X8
	0x0345C44C TBZ X0, 0x0, 0x345C4E0
	0x0345C450 LDR X8, [X19 + 0x58]
	0x0345C454 CBZ X8, 0x345C698
	0x0345C458 LDR X1, [X8 + 0x18]
	0x0345C45C LDR X3, [X19 + 0x50]
	0x0345C460 LDR X4, [X8 + 0x38]
	0x0345C464 MOV X0, X20
	0x0345C468 MOV X2, X31
	0x0345C46C MOV X5, X31
	0x0345C470 BL 0x34440A8
	0x0345C474 CBZ X0, 0x345C69C
	0x0345C478 ADRP X8, 0xC98000
	0x0345C47C LDR X8, [X8 + 0x840]
	0x0345C480 LDR X1, [X8]
	0x0345C484 BL 0x269F5D0
	0x0345C488 ADRP X8, 0xC98000
	0x0345C48C LDR X8, [X8 + 0x838]
	0x0345C490 STR X0, [X31 + 0x20]
	0x0345C494 LDR X1, [X8]
	0x0345C498 ADD X0, X31, 0x20
	0x0345C49C BL 0x2677430
	0x0345C4A0 TBNZ X0, 0x0, 0x345C280
	0x0345C4A4 STR W31, [X19]
	0x0345C4A8 LDR X8, [X31 + 0x20]
	0x0345C4AC STR X8, [X19 + 0x60]
	0x0345C4B0 LDR X0, [X25]
	0x0345C4B4 LDR W8, [X0 + 0xE0]
	0x0345C4B8 CBNZ W8, 0x345C4C0
	0x0345C4BC BL 0x1C16DFC
	0x0345C4C0 ADRP X8, 0xCD3000
	0x0345C4C4 LDR X8, [X8 + 0xFE8]
	0x0345C4C8 ADD X0, X19, 0x8
	0x0345C4CC LDR X3, [X8]
	0x0345C4D0 ADD X1, X31, 0x20
	0x0345C4D4 MOV X2, X19
	0x0345C4D8 BL 0x1FBB44C
	0x0345C4DC B 0x345C654
	0x0345C4E0 CBZ X20, 0x345C678
	0x0345C4E4 ADRP X8, 0xCD3000
	0x0345C4E8 LDR X8, [X8 + 0xFF0]
	0x0345C4EC LDR X21, [X20 + 0x58]
	0x0345C4F0 LDR X23, [X19 + 0x58]
	0x0345C4F4 LDR X0, [X8]
	0x0345C4F8 BL 0x1C16F10
	0x0345C4FC ADRP X8, 0xCD4000
	0x0345C500 LDR X8, [X8 + 0x18]
	0x0345C504 MOV X22, X0
	0x0345C508 LDR X2, [X8]
	0x0345C50C MOV X1, X23
	0x0345C510 MOV X3, X31
	0x0345C514 BL 0x2D27AA8
	0x0345C518 LDR X8, [X19 + 0x58]
	0x0345C51C CBZ X8, 0x345C66C
	0x0345C520 ADRP X9, 0xCD3000
	0x0345C524 LDR X23, [X19 + 0x50]
	0x0345C528 LDR X9, [X9 + 0x7C8]
	0x0345C52C CBNZ X23, 0x345C534
	0x0345C530 LDR X23, [X20 + 0x18]
	0x0345C534 LDR X20, [X8 + 0x18]
	0x0345C538 LDR X1, [X8 + 0x38]
	0x0345C53C LDR X2, [X9]
	0x0345C540 STP X31, X31, [X31 + 0x8]
	0x0345C544 ADD X0, X31, 0x8
	0x0345C548 BL 0x242E368
	0x0345C54C ADRP X8, 0xCD3000
	0x0345C550 LDR X8, [X8 + 0x7D0]
	0x0345C554 LDR X0, [X8]
	0x0345C558 BL 0x1C16F10
	0x0345C55C LDP X3, X4, [X31 + 0x8]
	0x0345C560 MOV X24, X0
	0x0345C564 MOV X1, X20
	0x0345C568 MOV X2, X23
	0x0345C56C MOV X5, X31
	0x0345C570 BL 0x3465404
	0x0345C574 CBZ X21, 0x345C670
	0x0345C578 ADRP X8, 0xCD3000
	0x0345C57C LDR X8, [X8 + 0xFF8]
	0x0345C580 LDR X3, [X8]
	0x0345C584 MOV X0, X21
	0x0345C588 MOV X1, X22
	0x0345C58C MOV X2, X24
	0x0345C590 BL 0x2243230
	0x0345C594 CBZ X0, 0x345C674
	0x0345C598 ADRP X8, 0xCD4000
	0x0345C59C LDR X8, [X8 + 0x10]
	0x0345C5A0 LDR X1, [X8]
	0x0345C5A4 BL 0x269F5D0
	0x0345C5A8 ADRP X8, 0xCD4000
	0x0345C5AC LDR X8, [X8 + 0x8]
	0x0345C5B0 STR X0, [X31 + 0x18]
	0x0345C5B4 LDR X1, [X8]
	0x0345C5B8 ADD X0, X31, 0x18
	0x0345C5BC BL 0x2677430
	0x0345C5C0 TBZ X0, 0x0, 0x345C618
	0x0345C5C4 ADRP X8, 0xCD4000
	0x0345C5C8 LDR X8, [X8]
	0x0345C5CC ADD X0, X31, 0x18
	0x0345C5D0 LDR X1, [X8]
	0x0345C5D4 BL 0x2677474
	0x0345C5D8 MOVN W8, 0x1
	0x0345C5DC STR W8, [X19]
	0x0345C5E0 STR X31, [X19 + 0x58]
	0x0345C5E4 MOV X20, X0
	0x0345C5E8 LDR X0, [X25]
	0x0345C5EC ADRP X21, 0xCD2000
	0x0345C5F0 ADD X19, X19, 0x8
	0x0345C5F4 LDR W8, [X0 + 0xE0]
	0x0345C5F8 LDR X21, [X21 + 0xF50]
	0x0345C5FC CBNZ W8, 0x345C604
	0x0345C600 BL 0x1C16DFC
	0x0345C604 LDR X2, [X21]
	0x0345C608 MOV X0, X19
	0x0345C60C MOV X1, X20
	0x0345C610 BL 0x26322B0
	0x0345C614 B 0x345C654
	0x0345C618 MOVZ W8, 0x1
	0x0345C61C STR W8, [X19]
	0x0345C620 LDR X8, [X31 + 0x18]
	0x0345C624 STR X8, [X19 + 0x68]
	0x0345C628 LDR X0, [X25]
	0x0345C62C LDR W8, [X0 + 0xE0]
	0x0345C630 CBNZ W8, 0x345C638
	0x0345C634 BL 0x1C16DFC
	0x0345C638 ADRP X8, 0xCD3000
	0x0345C63C LDR X8, [X8 + 0xFE0]
	0x0345C640 ADD X0, X19, 0x8
	0x0345C644 LDR X3, [X8]
	0x0345C648 ADD X1, X31, 0x18
	0x0345C64C MOV X2, X19
	0x0345C650 BL 0x1FBB44C
	0x0345C654 LDP X20, X19, [X31 + 0x60]
	0x0345C658 LDP X22, X21, [X31 + 0x50]
	0x0345C65C LDP X24, X23, [X31 + 0x40]
	0x0345C660 LDP X30, X25, [X31 + 0x30]
	0x0345C664 ADD X31, X31, 0x70
	0x0345C668 RET
	0x0345C66C BL 0x1C16F20
	0x0345C670 BL 0x1C16F20
	0x0345C674 BL 0x1C16F20
	0x0345C678 BL 0x1C16F20
	0x0345C67C BL 0x1C16F20
	0x0345C680 BL 0x1C16F20
	0x0345C684 BL 0x1C16F20
	0x0345C688 BL 0x1C16F20
	0x0345C68C BL 0x1C16F20
	0x0345C690 BL 0x1C16F20
	0x0345C694 BL 0x1C16F20
	0x0345C698 BL 0x1C16F20
	0x0345C69C BL 0x1C16F20
	0x0345C6A0 B 0x345C718
	0x0345C6A4 B 0x345C718
	0x0345C6A8 B 0x345C718
	0x0345C6AC B 0x345C718
	0x0345C6B0 B 0x345C718
	0x0345C6B4 B 0x345C718
	0x0345C6B8 B 0x345C718
	0x0345C6BC B 0x345C718
	0x0345C6C0 B 0x345C718
	0x0345C6C4 B 0x345C718
	0x0345C6C8 B 0x345C718
	0x0345C6CC B 0x345C718
	0x0345C6D0 B 0x345C718
	0x0345C6D4 B 0x345C718
	0x0345C6D8 B 0x345C718
	0x0345C6DC B 0x345C718
	0x0345C6E0 B 0x345C718
	0x0345C6E4 B 0x345C718
	0x0345C6E8 B 0x345C718
	0x0345C6EC B 0x345C718
	0x0345C6F0 B 0x345C718
	0x0345C6F4 B 0x345C718
	0x0345C6F8 B 0x345C718
	0x0345C6FC B 0x345C718
	0x0345C700 B 0x345C718
	0x0345C704 B 0x345C718
	0x0345C708 B 0x345C718
	0x0345C70C B 0x345C718
	0x0345C710 B 0x345C718
	0x0345C714 B 0x345C718
	0x0345C718 MOV X20, X0
	0x0345C71C CMP W1, 0x1
	0x0345C720 B.NE 0x345C7C0
	0x0345C724 MOV X0, X20
	0x0345C728 BL 0x3EB1AD0
	0x0345C72C MOV X20, X0
	0x0345C730 ADRP X0, 0xC97000
	0x0345C734 LDR X0, [X0 + 0x7D0]
	0x0345C738 BL 0x1C16D08
	0x0345C73C LDR X8, [X20]
	0x0345C740 LDR X1, [X8]
	0x0345C744 BL 0x1C17270
	0x0345C748 TBZ X0, 0x0, 0x345C798
	0x0345C74C LDR X20, [X20]
	0x0345C750 BL 0x3EB1AE0
	0x0345C754 MOVN W8, 0x1
	0x0345C758 STR X31, [X19 + 0x58]
	0x0345C75C STR W8, [X19], #0x8
	0x0345C760 ADRP X0, 0xCD2000
	0x0345C764 LDR X0, [X0 + 0x448]
	0x0345C768 BL 0x1C16D08
	0x0345C76C LDR W8, [X0 + 0xE0]
	0x0345C770 CBNZ W8, 0x345C778
	0x0345C774 BL 0x1C16DFC
	0x0345C778 ADRP X0, 0xCD2000
	0x0345C77C LDR X0, [X0 + 0xF68]
	0x0345C780 BL 0x1C16D08
	0x0345C784 MOV X2, X0
	0x0345C788 MOV X0, X19
	0x0345C78C MOV X1, X20
	0x0345C790 BL 0x26324C8
	0x0345C794 B 0x345C654
	0x0345C798 MOVZ W0, 0x8
	0x0345C79C BL 0x3EB1AF0
	0x0345C7A0 LDR X8, [X20]
	0x0345C7A4 STR X8, [X0]
	0x0345C7A8 ADRP X1, 0xA58000
	0x0345C7AC ADD X1, X1, 0xE58
	0x0345C7B0 MOV X2, X31
	0x0345C7B4 BL 0x3EB1B00
	0x0345C7B8 MOV X20, X0
	0x0345C7BC BL 0x3EB1AE0
	0x0345C7C0 MOV X0, X20
	0x0345C7C4 BL 0x1D2C690
	0x0345C7C8 BL 0x1990590
	0x0345C7CC STR X30, [X31 - 0x30]!
	0x0345C7D0 STP X22, X21, [X31 + 0x10]
	0x0345C7D4 STP X20, X19, [X31 + 0x20]
	0x0345C7D8 ADRP X22, 0xF81000
	0x0345C7DC ADRP X21, 0xCD2000
	0x0345C7E0 LDRB W8, [X22 + 0x7A4]
	0x0345C7E4 LDR X21, [X21 + 0x448]
	0x0345C7E8 MOV X19, X1
	0x0345C7EC MOV X20, X0
	0x0345C7F0 TBNZ X8, 0x0, 0x345C814
	0x0345C7F4 ADRP X0, 0xCD2000
	0x0345C7F8 LDR X0, [X0 + 0xF70]
	0x0345C7FC BL 0x1C16CF4
	0x0345C800 ADRP X0, 0xCD2000
	0x0345C804 LDR X0, [X0 + 0x448]
	0x0345C808 BL 0x1C16CF4
	0x0345C80C MOVZ W8, 0x1
	0x0345C810 STRB W8, [X22 + 0x7A4]
	0x0345C814 LDR X0, [X21]
	0x0345C818 ADRP X21, 0xCD2000
	0x0345C81C LDR W8, [X0 + 0xE0]
	0x0345C820 LDR X21, [X21 + 0xF70]
	0x0345C824 CBNZ W8, 0x345C82C
	0x0345C828 BL 0x1C16DFC
	0x0345C82C LDR X2, [X21]
	0x0345C830 ADD X0, X20, 0x8
	0x0345C834 MOV X1, X19
	0x0345C838 LDP X20, X19, [X31 + 0x20]
	0x0345C83C LDP X22, X21, [X31 + 0x10]
	0x0345C840 LDR X30, [X31], #0x30
	0x0345C844 B 0x2632228
	0x0345C848 SUB X31, X31, 0xA0
	0x0345C84C STP X29, X30, [X31 + 0x40]
	0x0345C850 STP X28, X27, [X31 + 0x50]
	0x0345C854 STP X26, X25, [X31 + 0x60]
	0x0345C858 STP X24, X23, [X31 + 0x70]
	0x0345C85C STP X22, X21, [X31 + 0x80]
	0x0345C860 STP X20, X19, [X31 + 0x90]
	0x0345C864 ADRP X20, 0xF81000
	0x0345C868 LDRB W8, [X20 + 0x7A5]
	0x0345C86C MOV X19, X0
	0x0345C870 TBNZ X8, 0x0, 0x345C9C0
	0x0345C874 ADRP X0, 0xCD4000
	0x0345C878 LDR X0, [X0 + 0x28]
	0x0345C87C BL 0x1C16CF4
	0x0345C880 ADRP X0, 0xCD4000
	0x0345C884 LDR X0, [X0 + 0x30]
	0x0345C888 BL 0x1C16CF4
	0x0345C88C ADRP X0, 0xCD4000
	0x0345C890 LDR X0, [X0 + 0x38]
	0x0345C894 BL 0x1C16CF4
	0x0345C898 ADRP X0, 0xCD2000
	0x0345C89C LDR X0, [X0 + 0xF80]
	0x0345C8A0 BL 0x1C16CF4
	0x0345C8A4 ADRP X0, 0xCD2000
	0x0345C8A8 LDR X0, [X0 + 0x510]
	0x0345C8AC BL 0x1C16CF4
	0x0345C8B0 ADRP X0, 0xC99000
	0x0345C8B4 LDR X0, [X0 + 0xA10]
	0x0345C8B8 BL 0x1C16CF4
	0x0345C8BC ADRP X0, 0xC98000
	0x0345C8C0 LDR X0, [X0 + 0x9F0]
	0x0345C8C4 BL 0x1C16CF4
	0x0345C8C8 ADRP X0, 0xCD4000
	0x0345C8CC LDR X0, [X0 + 0x40]
	0x0345C8D0 BL 0x1C16CF4
	0x0345C8D4 ADRP X0, 0xCD4000
	0x0345C8D8 LDR X0, [X0 + 0x48]
	0x0345C8DC BL 0x1C16CF4
	0x0345C8E0 ADRP X0, 0xC97000
	0x0345C8E4 LDR X0, [X0 + 0xF28]
	0x0345C8E8 BL 0x1C16CF4
	0x0345C8EC ADRP X0, 0xC97000
	0x0345C8F0 LDR X0, [X0 + 0xE00]
	0x0345C8F4 BL 0x1C16CF4
	0x0345C8F8 ADRP X0, 0xCD4000
	0x0345C8FC LDR X0, [X0 + 0x50]
	0x0345C900 BL 0x1C16CF4
	0x0345C904 ADRP X0, 0xCD4000
	0x0345C908 LDR X0, [X0 + 0x58]
	0x0345C90C BL 0x1C16CF4
	0x0345C910 ADRP X0, 0xC97000
	0x0345C914 LDR X0, [X0 + 0xE18]
	0x0345C918 BL 0x1C16CF4
	0x0345C91C ADRP X0, 0xCD4000
	0x0345C920 LDR X0, [X0 + 0x60]
	0x0345C924 BL 0x1C16CF4
	0x0345C928 ADRP X0, 0xC98000
	0x0345C92C LDR X0, [X0 + 0x818]
	0x0345C930 BL 0x1C16CF4
	0x0345C934 ADRP X0, 0xCD3000
	0x0345C938 LDR X0, [X0 + 0x7C8]
	0x0345C93C BL 0x1C16CF4
	0x0345C940 ADRP X0, 0xCD3000
	0x0345C944 LDR X0, [X0 + 0x7D0]
	0x0345C948 BL 0x1C16CF4
	0x0345C94C ADRP X0, 0xCD4000
	0x0345C950 LDR X0, [X0 + 0x68]
	0x0345C954 BL 0x1C16CF4
	0x0345C958 ADRP X0, 0xCD4000
	0x0345C95C LDR X0, [X0 + 0x70]
	0x0345C960 BL 0x1C16CF4
	0x0345C964 ADRP X0, 0xC98000
	0x0345C968 LDR X0, [X0 + 0x830]
	0x0345C96C BL 0x1C16CF4
	0x0345C970 ADRP X0, 0xC98000
	0x0345C974 LDR X0, [X0 + 0x838]
	0x0345C978 BL 0x1C16CF4
	0x0345C97C ADRP X0, 0xCD4000
	0x0345C980 LDR X0, [X0 + 0x78]
	0x0345C984 BL 0x1C16CF4
	0x0345C988 ADRP X0, 0xC98000
	0x0345C98C LDR X0, [X0 + 0x840]
	0x0345C990 BL 0x1C16CF4
	0x0345C994 ADRP X0, 0xCD4000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF82000
	011 Move W8, [X20+1951]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD4000
	018 Move X0, [X0+3960]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD4000
	021 Move X0, [X0+3968]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9B000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9A000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC99000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA0000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC99000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD4000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD4000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC99000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC99000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC99000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD4000
	054 Move X0, [X0+3976]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD4000
	057 Move X0, [X0+3984]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1951], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9B000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xC99000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD4000
	091 Move X8, [X8+3984]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass80_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {358}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move W8, [X19+48]
	105 Move [X21+32], W8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Move X8, [X19+64]
	109 Move [X21+48], X8
	110 Compare X20, 0
	111 JumpIfEqual {359}
	112 Move W8, [X20+16]
	113 Compare W8, 0
	114 JumpIfEqual {252}
	115 Move X8, [X19+80]
	116 Compare X8, 0
	117 JumpIfEqual {360}
	118 Move X21, [X8+24]
	119 Compare X21, 0
	120 JumpIfEqual {361}
	121 Move X23, 0xC99000
	122 Move X8, [X21]
	123 Move X23, [X23+2072]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X23]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 7
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 7
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X31
	146 Call String.IsNullOrEmpty, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {250}
	151 Move X8, [X19+80]
	152 Compare X8, 0
	153 JumpIfEqual {362}
	154 Move X9, 0xC99000
	155 Move X9, [X9+2544]
	156 Move X21, [X8+24]
	157 Move X0, [X9]
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X31
	163 Call DateTime.get_UtcNow
	164 Move X22, 0xC9A000
	165 Move X22, [X22+2576]
	166 Move X8, X0
	167 Move [X31+40], X8
	168 Move X0, [X22]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X22]
	174 Move X8, [X0+184]
	175 Move X1, [X8]
	176 Add X0, X31, 40
	177 Move X2, X31
	178 Call DateTime.Add, X0, X1
	179 Compare X21, 0
	180 JumpIfEqual {363}
	181 Move X8, [X21]
	182 Move X1, [X23]
	183 Move X22, X0
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 11
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 11
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X2, [X0+8]
	202 Move X0, X21
	203 Move X1, X22
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {250}
	209 Move X8, [X19+80]
	210 Compare X8, 0
	211 JumpIfEqual {364}
	212 Move X1, [X8+24]
	213 Move X3, [X19+72]
	214 Move X4, [X8+48]
	215 Move X0, X20
	216 Move X2, X31
	217 Move X5, X31
	218 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	219 Compare X0, 0
	220 JumpIfEqual {365}
	221 Move X8, 0xC99000
	222 Move X8, [X8+2112]
	223 Move X1, [X8]
	224 Call Task`1<Object>.GetAwaiter, X0
	225 Move X8, 0xC99000
	226 Move X8, [X8+2104]
	227 Move [X31+32], X0
	228 Move X1, [X8]
	229 Add X0, X31, 32
	230 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {85}
	235 Move [X19], W31
	236 Move X8, [X31+32]
	237 Move [X19+88], X8
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0xCD4000
	244 Move X8, [X8+3960]
	245 Add X0, X19, 8
	246 Move X3, [X8]
	247 Add X1, X31, 32
	248 Move X2, X19
	249 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	250 Compare X20, 0
	251 JumpIfEqual {357}
	252 Move X8, 0xCA0000
	253 Move X8, [X8+2072]
	254 Move X21, [X20+88]
	255 Move X23, [X19+80]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X8, 0xCD4000
	259 Move X8, [X8+3976]
	260 Move X22, X0
	261 Move X2, [X8]
	262 Move X1, X23
	263 Move X3, X31
	264 Call Func`1<Object>..ctor, X0, X1, X2
	265 Move X8, [X19+80]
	266 Compare X8, 0
	267 JumpIfEqual {354}
	268 Move X9, 0xCD4000
	269 Move X23, [X19+72]
	270 Move X9, [X9+1992]
	271 Compare X23, 0
	272 JumpIfNotEqual {274}
	273 Move X23, [X20+24]
	274 Move X20, [X8+24]
	275 Move X1, [X8+48]
	276 Move X2, [X9]
	277 Move [X31+8], X31
	278 Move [X31+16], X31
	279 Add X0, X31, 8
	280 Call Nullable`1<CancellationToken>..ctor, X0, X1
	281 Move X8, 0xCD4000
	282 Move X8, [X8+2000]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X3, [X31+8]
	286 Move X4, [X31+16]
	287 Move X24, X0
	288 Move X1, X20
	289 Move X2, X23
	290 Move X5, X31
	291 Call RetryHistory..ctor, X0, X1, X2, X3
	292 Compare X21, 0
	293 JumpIfEqual {355}
	294 Move X0, X21
	295 Move X1, X22
	296 Move X2, X24
	297 Move X3, X31
	298 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	299 Compare X0, 0
	300 JumpIfEqual {356}
	301 Move X1, X31
	302 Call Task.GetAwaiter, X0
	303 Move [X31+24], X0
	304 Add X0, X31, 24
	305 Move X1, X31
	306 Call TaskAwaiter.get_IsCompleted, X0
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {328}
	311 Add X0, X31, 24
	312 Move X1, X31
	313 Call TaskAwaiter.GetResult, X0
	314 Move TEMP, 1
	315 Not TEMP
	316 Move W8, TEMP
	317 Move [X19], W8
	318 Move [X19+80], X31
	319 Move X0, [X25]
	320 Add X19, X19, 8
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X19
	326 Move X1, X31
	327 Call AsyncTaskMethodBuilder.SetResult, X0
	328 Move W8, 1
	329 Move [X19], W8
	330 Move X8, [X31+24]
	331 Move [X19+96], X8
	332 Move X0, [X25]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X8, 0xCD4000
	338 Move X8, [X8+3968]
	339 Add X0, X19, 8
	340 Move X3, [X8]
	341 Add X1, X31, 24
	342 Move X2, X19
	343 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	344 Move X20, [X31+96]
	345 Move X19, [X31+104]
	346 Move X22, [X31+80]
	347 Move X21, [X31+88]
	348 Move X24, [X31+64]
	349 Move X23, [X31+72]
	350 Move X30, [X31+48]
	351 Move X25, [X31+56]
	352 Add X31, X31, 112
	353 Return 
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X20, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X20
	369 Call 0x3EB2AD0
	370 Move X20, X0
	371 Move X0, 0xC98000
	372 Move X0, [X0+2000]
	373 Call 0x1C17D08
	374 Move X8, [X20]
	375 Move X1, [X8]
	376 Call 0x1C18270
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {399}
	381 Move X20, [X20]
	382 Call 0x3EB2AE0
	383 Move TEMP, 1
	384 Not TEMP
	385 Move W8, TEMP
	386 Move [X19+80], X31
	387 Move [X19+8], W8
	388 Move X0, 0xC9B000
	389 Move X0, [X0+640]
	390 Call 0x1C17D08
	391 Move W8, [X0+224]
	392 Compare W8, 0
	393 JumpIfNotEqual {395}
	394 Call 0x1C17DFC
	395 Move X0, X19
	396 Move X1, X20
	397 Move X2, X31
	398 Call AsyncTaskMethodBuilder.SetException, X0, X1
	399 Move W0, 8
	400 Call 0x3EB2AF0
	401 Move X8, [X20]
	402 Move [X0], X8
	403 Move X1, 0xA59000
	404 Add X1, X1, 3672
	405 Move X2, X31
	406 Call 0x3EB2B00
	407 Move X20, X0
	408 Call 0x3EB2AE0
	409 Move X0, X20
	410 Call 0x1D2D690
	411 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345C998 LDR X0, [X0 + 0x80]
	0x0345C99C BL 0x1C16CF4
	0x0345C9A0 ADRP X0, 0xCD4000
	0x0345C9A4 LDR X0, [X0 + 0x88]
	0x0345C9A8 BL 0x1C16CF4
	0x0345C9AC ADRP X0, 0xCD4000
	0x0345C9B0 LDR X0, [X0 + 0x90]
	0x0345C9B4 BL 0x1C16CF4
	0x0345C9B8 MOVZ W8, 0x1
	0x0345C9BC STRB W8, [X20 + 0x7A5]
	0x0345C9C0 STP X31, X31, [X31 + 0x30]
	0x0345C9C4 STR X31, [X31 + 0x28]
	0x0345C9C8 LDR W25, [X19]
	0x0345C9CC LDR X20, [X19 + 0x20]
	0x0345C9D0 CBZ W25, 0x345C9F4
	0x0345C9D4 CMP W25, 0x1
	0x0345C9D8 B.NE 0x345CA20
	0x0345C9DC LDR X8, [X19 + 0x70]
	0x0345C9E0 MOVN W25, 0x0
	0x0345C9E4 STR X8, [X31 + 0x28]
	0x0345C9E8 STR X31, [X19 + 0x70]
	0x0345C9EC STR W25, [X19]
	0x0345C9F0 B 0x345CD5C
	0x0345C9F4 LDR X8, [X19 + 0x68]
	0x0345C9F8 MOVN W25, 0x0
	0x0345C9FC STR X8, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF82000
	007 Move X22, 0xC9B000
	008 Move W8, [X21+1952]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9B000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1952], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

