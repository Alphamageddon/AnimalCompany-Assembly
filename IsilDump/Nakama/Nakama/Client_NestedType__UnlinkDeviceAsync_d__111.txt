Type: Nakama.Client/<UnlinkDeviceAsync>d__111

Method: System.Void MoveNext()

Disassembly:
	0x0346A388 LDR X8, [X8 + 0x838]
	0x0346A38C STR X0, [X31 + 0x20]
	0x0346A390 LDR X1, [X8]
	0x0346A394 ADD X0, X31, 0x20
	0x0346A398 BL 0x2677430
	0x0346A39C TBNZ X0, 0x0, 0x346A194
	0x0346A3A0 STR W31, [X19]
	0x0346A3A4 LDR X8, [X31 + 0x20]
	0x0346A3A8 STR X8, [X19 + 0x50]
	0x0346A3AC LDR X0, [X25]
	0x0346A3B0 LDR W8, [X0 + 0xE0]
	0x0346A3B4 CBNZ W8, 0x346A3BC
	0x0346A3B8 BL 0x1C16DFC
	0x0346A3BC ADRP X8, 0xCC6000
	0x0346A3C0 LDR X8, [X8 + 0x520]
	0x0346A3C4 ADD X0, X19, 0x8
	0x0346A3C8 LDR X3, [X8]
	0x0346A3CC ADD X1, X31, 0x20
	0x0346A3D0 MOV X2, X19
	0x0346A3D4 BL 0x2188E8C
	0x0346A3D8 B 0x346A518
	0x0346A3DC CBZ X20, 0x346A53C
	0x0346A3E0 ADRP X8, 0xC91000
	0x0346A3E4 LDR X8, [X8 + 0x818]
	0x0346A3E8 LDR X21, [X20 + 0x58]
	0x0346A3EC LDR X23, [X19 + 0x48]
	0x0346A3F0 LDR X0, [X8]
	0x0346A3F4 BL 0x1C16F10
	0x0346A3F8 ADRP X8, 0xCC6000
	0x0346A3FC LDR X8, [X8 + 0x530]
	0x0346A400 MOV X22, X0
	0x0346A404 LDR X2, [X8]
	0x0346A408 MOV X1, X23
	0x0346A40C MOV X3, X31
	0x0346A410 BL 0x2D27AA8
	0x0346A414 LDR X8, [X19 + 0x48]
	0x0346A418 CBZ X8, 0x346A530
	0x0346A41C ADRP X9, 0xCC5000
	0x0346A420 LDR X23, [X19 + 0x40]
	0x0346A424 LDR X9, [X9 + 0x7C8]
	0x0346A428 CBNZ X23, 0x346A430
	0x0346A42C LDR X23, [X20 + 0x18]
	0x0346A430 LDR X20, [X8 + 0x18]
	0x0346A434 LDR X1, [X8 + 0x28]
	0x0346A438 LDR X2, [X9]
	0x0346A43C STP X31, X31, [X31 + 0x8]
	0x0346A440 ADD X0, X31, 0x8
	0x0346A444 BL 0x242E368
	0x0346A448 ADRP X8, 0xCC5000
	0x0346A44C LDR X8, [X8 + 0x7D0]
	0x0346A450 LDR X0, [X8]
	0x0346A454 BL 0x1C16F10
	0x0346A458 LDP X3, X4, [X31 + 0x8]
	0x0346A45C MOV X24, X0
	0x0346A460 MOV X1, X20
	0x0346A464 MOV X2, X23
	0x0346A468 BL 0x3465404
	0x0346A46C CBZ X21, 0x346A534
	0x0346A470 MOV X0, X21
	0x0346A474 MOV X1, X22
	0x0346A478 MOV X2, X24
	0x0346A47C BL 0x3465B68
	0x0346A480 CBZ X0, 0x346A538
	0x0346A484 MOV X1, X31
	0x0346A488 BL 0x33ED394
	0x0346A48C STR X0, [X31 + 0x18]
	0x0346A490 ADD X0, X31, 0x18
	0x0346A494 MOV X1, X31
	0x0346A498 BL 0x32C3A80
	0x0346A49C TBZ X0, 0x0, 0x346A4DC
	0x0346A4A0 ADD X0, X31, 0x18
	0x0346A4A4 MOV X1, X31
	0x0346A4A8 BL 0x32C3B4C
	0x0346A4AC MOVN W8, 0x1
	0x0346A4B0 STR W8, [X19]
	0x0346A4B4 STR X31, [X19 + 0x48]
	0x0346A4B8 LDR X0, [X25]
	0x0346A4BC ADD X19, X19, 0x8
	0x0346A4C0 LDR W8, [X0 + 0xE0]
	0x0346A4C4 CBNZ W8, 0x346A4CC
	0x0346A4C8 BL 0x1C16DFC
	0x0346A4CC MOV X0, X19
	0x0346A4D0 MOV X1, X31
	0x0346A4D4 BL 0x32C4864
	0x0346A4D8 B 0x346A518
	0x0346A4DC MOVZ W8, 0x1
	0x0346A4E0 STR W8, [X19]
	0x0346A4E4 LDR X8, [X31 + 0x18]
	0x0346A4E8 STR X8, [X19 + 0x58]
	0x0346A4EC LDR X0, [X25]
	0x0346A4F0 LDR W8, [X0 + 0xE0]
	0x0346A4F4 CBNZ W8, 0x346A4FC
	0x0346A4F8 BL 0x1C16DFC
	0x0346A4FC ADRP X8, 0xCC6000
	0x0346A500 LDR X8, [X8 + 0x528]
	0x0346A504 ADD X0, X19, 0x8
	0x0346A508 LDR X3, [X8]
	0x0346A50C ADD X1, X31, 0x18
	0x0346A510 MOV X2, X19
	0x0346A514 BL 0x218A550
	0x0346A518 LDP X20, X19, [X31 + 0x60]
	0x0346A51C LDP X22, X21, [X31 + 0x50]
	0x0346A520 LDP X24, X23, [X31 + 0x40]
	0x0346A524 LDP X30, X25, [X31 + 0x30]
	0x0346A528 ADD X31, X31, 0x70
	0x0346A52C RET
	0x0346A530 BL 0x1C16F20
	0x0346A534 BL 0x1C16F20
	0x0346A538 BL 0x1C16F20
	0x0346A53C BL 0x1C16F20
	0x0346A540 BL 0x1C16F20
	0x0346A544 BL 0x1C16F20
	0x0346A548 BL 0x1C16F20
	0x0346A54C BL 0x1C16F20
	0x0346A550 BL 0x1C16F20
	0x0346A554 BL 0x1C16F20
	0x0346A558 BL 0x1C16F20
	0x0346A55C BL 0x1C16F20
	0x0346A560 B 0x346A5D4
	0x0346A564 B 0x346A5D4
	0x0346A568 B 0x346A5D4
	0x0346A56C B 0x346A5D4
	0x0346A570 B 0x346A5D4
	0x0346A574 B 0x346A5D4
	0x0346A578 B 0x346A5D4
	0x0346A57C B 0x346A5D4
	0x0346A580 B 0x346A5D4
	0x0346A584 B 0x346A5D4
	0x0346A588 B 0x346A5D4
	0x0346A58C B 0x346A5D4
	0x0346A590 B 0x346A5D4
	0x0346A594 B 0x346A5D4
	0x0346A598 B 0x346A5D4
	0x0346A59C B 0x346A5D4
	0x0346A5A0 B 0x346A5D4
	0x0346A5A4 B 0x346A5D4
	0x0346A5A8 B 0x346A5D4
	0x0346A5AC B 0x346A5D4
	0x0346A5B0 B 0x346A5D4
	0x0346A5B4 B 0x346A5D4
	0x0346A5B8 B 0x346A5D4
	0x0346A5BC B 0x346A5D4
	0x0346A5C0 B 0x346A5D4
	0x0346A5C4 B 0x346A5D4
	0x0346A5C8 B 0x346A5D4
	0x0346A5CC B 0x346A5D4
	0x0346A5D0 B 0x346A5D4
	0x0346A5D4 MOV X20, X0
	0x0346A5D8 CMP W1, 0x1
	0x0346A5DC B.NE 0x346A670
	0x0346A5E0 MOV X0, X20
	0x0346A5E4 BL 0x3EB1AD0
	0x0346A5E8 MOV X20, X0
	0x0346A5EC ADRP X0, 0xC89000
	0x0346A5F0 LDR X0, [X0 + 0x7D0]
	0x0346A5F4 BL 0x1C16D08
	0x0346A5F8 LDR X8, [X20]
	0x0346A5FC LDR X1, [X8]
	0x0346A600 BL 0x1C17270
	0x0346A604 TBZ X0, 0x0, 0x346A648
	0x0346A608 LDR X20, [X20]
	0x0346A60C BL 0x3EB1AE0
	0x0346A610 MOVN W8, 0x1
	0x0346A614 STR X31, [X19 + 0x48]
	0x0346A618 STR W8, [X19], #0x8
	0x0346A61C ADRP X0, 0xC8C000
	0x0346A620 LDR X0, [X0 + 0x280]
	0x0346A624 BL 0x1C16D08
	0x0346A628 LDR W8, [X0 + 0xE0]
	0x0346A62C CBNZ W8, 0x346A634
	0x0346A630 BL 0x1C16DFC
	0x0346A634 MOV X0, X19
	0x0346A638 MOV X1, X20
	0x0346A63C MOV X2, X31
	0x0346A640 BL 0x32C4908
	0x0346A644 B 0x346A518
	0x0346A648 MOVZ W0, 0x8
	0x0346A64C BL 0x3EB1AF0
	0x0346A650 LDR X8, [X20]
	0x0346A654 STR X8, [X0]
	0x0346A658 ADRP X1, 0xA4A000
	0x0346A65C ADD X1, X1, 0xE58
	0x0346A660 MOV X2, X31
	0x0346A664 BL 0x3EB1B00
	0x0346A668 MOV X20, X0
	0x0346A66C BL 0x3EB1AE0
	0x0346A670 MOV X0, X20
	0x0346A674 BL 0x1D2C690
	0x0346A678 BL 0x1990590
	0x0346A67C STR X30, [X31 - 0x30]!
	0x0346A680 STP X22, X21, [X31 + 0x10]
	0x0346A684 STP X20, X19, [X31 + 0x20]
	0x0346A688 ADRP X21, 0xF73000
	0x0346A68C ADRP X22, 0xC8C000
	0x0346A690 LDRB W8, [X21 + 0x7D2]
	0x0346A694 LDR X22, [X22 + 0x280]
	0x0346A698 MOV X19, X1
	0x0346A69C MOV X20, X0
	0x0346A6A0 TBNZ X8, 0x0, 0x346A6B8
	0x0346A6A4 ADRP X0, 0xC8C000
	0x0346A6A8 LDR X0, [X0 + 0x280]
	0x0346A6AC BL 0x1C16CF4
	0x0346A6B0 MOVZ W8, 0x1
	0x0346A6B4 STRB W8, [X21 + 0x7D2]
	0x0346A6B8 LDR X0, [X22]
	0x0346A6BC LDR W8, [X0 + 0xE0]
	0x0346A6C0 CBNZ W8, 0x346A6C8
	0x0346A6C4 BL 0x1C16DFC
	0x0346A6C8 ADD X0, X20, 0x8
	0x0346A6CC MOV X1, X19
	0x0346A6D0 LDP X20, X19, [X31 + 0x20]
	0x0346A6D4 LDP X22, X21, [X31 + 0x10]
	0x0346A6D8 MOV X2, X31
	0x0346A6DC LDR X30, [X31], #0x30
	0x0346A6E0 B 0x32C477C
	0x0346A6E4 SUB X31, X31, 0x70
	0x0346A6E8 STP X30, X25, [X31 + 0x30]
	0x0346A6EC STP X24, X23, [X31 + 0x40]
	0x0346A6F0 STP X22, X21, [X31 + 0x50]
	0x0346A6F4 STP X20, X19, [X31 + 0x60]
	0x0346A6F8 ADRP X20, 0xF73000
	0x0346A6FC LDRB W8, [X20 + 0x7D3]
	0x0346A700 MOV X19, X0
	0x0346A704 TBNZ X8, 0x0, 0x346A7B8
	0x0346A708 ADRP X0, 0xCC6000
	0x0346A70C LDR X0, [X0 + 0x540]
	0x0346A710 BL 0x1C16CF4
	0x0346A714 ADRP X0, 0xCC6000
	0x0346A718 LDR X0, [X0 + 0x548]
	0x0346A71C BL 0x1C16CF4
	0x0346A720 ADRP X0, 0xC8C000
	0x0346A724 LDR X0, [X0 + 0x280]
	0x0346A728 BL 0x1C16CF4
	0x0346A72C ADRP X0, 0xC8B000
	0x0346A730 LDR X0, [X0 + 0xA10]
	0x0346A734 BL 0x1C16CF4
	0x0346A738 ADRP X0, 0xC8A000
	0x0346A73C LDR X0, [X0 + 0x9F0]
	0x0346A740 BL 0x1C16CF4
	0x0346A744 ADRP X0, 0xC91000
	0x0346A748 LDR X0, [X0 + 0x818]
	0x0346A74C BL 0x1C16CF4
	0x0346A750 ADRP X0, 0xC8A000
	0x0346A754 LDR X0, [X0 + 0x818]
	0x0346A758 BL 0x1C16CF4
	0x0346A75C ADRP X0, 0xCC5000
	0x0346A760 LDR X0, [X0 + 0x7C8]
	0x0346A764 BL 0x1C16CF4
	0x0346A768 ADRP X0, 0xCC5000
	0x0346A76C LDR X0, [X0 + 0x7D0]
	0x0346A770 BL 0x1C16CF4
	0x0346A774 ADRP X0, 0xC8A000
	0x0346A778 LDR X0, [X0 + 0x830]
	0x0346A77C BL 0x1C16CF4
	0x0346A780 ADRP X0, 0xC8A000
	0x0346A784 LDR X0, [X0 + 0x838]
	0x0346A788 BL 0x1C16CF4
	0x0346A78C ADRP X0, 0xC8A000
	0x0346A790 LDR X0, [X0 + 0x840]
	0x0346A794 BL 0x1C16CF4
	0x0346A798 ADRP X0, 0xCC6000
	0x0346A79C LDR X0, [X0 + 0x550]
	0x0346A7A0 BL 0x1C16CF4
	0x0346A7A4 ADRP X0, 0xCC6000
	0x0346A7A8 LDR X0, [X0 + 0x558]
	0x0346A7AC BL 0x1C16CF4
	0x0346A7B0 MOVZ W8, 0x1
	0x0346A7B4 STRB W8, [X20 + 0x7D3]
	0x0346A7B8 STP X31, X31, [X31 + 0x20]
	0x0346A7BC STR X31, [X31 + 0x18]
	0x0346A7C0 ADRP X25, 0xC8C000
	0x0346A7C4 LDR W8, [X19]
	0x0346A7C8 LDR X20, [X19 + 0x20]
	0x0346A7CC LDR X25, [X25 + 0x280]
	0x0346A7D0 CBZ W8, 0x346A7F4
	0x0346A7D4 CMP W8, 0x1
	0x0346A7D8 B.NE 0x346A820
	0x0346A7DC LDR X8, [X19 + 0x80]
	0x0346A7E0 MOVN W9, 0x0
	0x0346A7E4 STR X8, [X31 + 0x18]
	0x0346A7E8 STR X31, [X19 + 0x80]
	0x0346A7EC STR W9, [X19]
	0x0346A7F0 B 0x346AB24
	0x0346A7F4 LDR X8, [X19 + 0x78]
	0x0346A7F8 MOVN W9, 0x0
	0x0346A7FC STR X8, [X31 + 0x20]
	0x0346A800 STR X31, [X19 + 0x78]
	0x0346A804 STR W9, [X19]
	0x0346A808 ADRP X8, 0xC8A000
	0x0346A80C LDR X8, [X8 + 0x830]
	0x0346A810 ADD X0, X31, 0x20
	0x0346A814 LDR X1, [X8]
	0x0346A818 BL 0x2677474
	0x0346A81C B 0x346AA60
	0x0346A820 ADRP X8, 0xCC6000
	0x0346A824 LDR X8, [X8 + 0x558]
	0x0346A828 LDR X0, [X8]
	0x0346A82C BL 0x1C16F10
	0x0346A830 MOV X21, X0
	0x0346A834 MOV X1, X31
	0x0346A838 BL 0x344661C
	0x0346A83C STR X21, [X19 + 0x70]
	0x0346A840 CBZ X21, 0x346ABC4
	0x0346A844 LDR X8, [X19 + 0x20]
	0x0346A848 STR X8, [X21 + 0x10]
	0x0346A84C LDR X8, [X19 + 0x28]
	0x0346A850 STR X8, [X21 + 0x18]
	0x0346A854 LDR V0, [X19 + 0x3]
	0x0346A858 STR V0, [X21 + 0x2]
	0x0346A85C LDR V0, [X19 + 0x4]
	0x0346A860 STR V0, [X21 + 0x3]
	0x0346A864 LDR V0, [X19 + 0x5]
	0x0346A868 STR V0, [X21 + 0x4]
	0x0346A86C LDR X8, [X19 + 0x60]
	0x0346A870 STR X8, [X21 + 0x50]
	0x0346A874 CBZ X20, 0x346ABC8
	0x0346A878 LDRB W8, [X20 + 0x10]
	0x0346A87C CBZ W8, 0x346AA64
	0x0346A880 LDR X8, [X19 + 0x70]
	0x0346A884 CBZ X8, 0x346ABCC
	0x0346A888 LDR X21, [X8 + 0x18]
	0x0346A88C CBZ X21, 0x346ABD0
	0x0346A890 ADRP X23, 0xC8A000
	0x0346A894 LDR X8, [X21]
	0x0346A898 LDR X23, [X23 + 0x818]
	0x0346A89C LDRH W9, [X8 + 0x12E]
	0x0346A8A0 LDR X1, [X23]
	0x0346A8A4 CBZ X9, 0x346A8C8
	0x0346A8A8 LDR X10, [X8 + 0xB0]
	0x0346A8AC ADD X10, X10, 0x8
	0x0346A8B0 LDUR X11, [X10 - 0x8]
	0x0346A8B4 CMP X11, X1
	0x0346A8B8 B.EQ 0x346A8D8
	0x0346A8BC SUBS X9, X9, 0x1
	0x0346A8C0 ADD X10, X10, 0x10
	0x0346A8C4 B.NE 0x346A8B0
	0x0346A8C8 MOVZ W2, 0x7
	0x0346A8CC MOV X0, X21
	0x0346A8D0 BL 0x1C5C788
	0x0346A8D4 B 0x346A8E8
	0x0346A8D8 LDR W9, [X10]
	0x0346A8DC ADD W9, W9, 0x7
	0x0346A8E0 ADD X8, X8, W9, 0x4, SXTW
	0x0346A8E4 ADD X0, X8, 0x138
	0x0346A8E8 LDP X8, X1, [X0]
	0x0346A8EC MOV X0, X21
	0x0346A8F0 BLR X8
	0x0346A8F4 MOV X1, X31
	0x0346A8F8 BL 0x32277A8
	0x0346A8FC TBNZ X0, 0x0, 0x346AA60
	0x0346A900 LDR X8, [X19 + 0x70]
	0x0346A904 CBZ X8, 0x346ABD4
	0x0346A908 ADRP X9, 0xC8A000
	0x0346A90C LDR X9, [X9 + 0x9F0]
	0x0346A910 LDR X21, [X8 + 0x18]
	0x0346A914 LDR X0, [X9]
	0x0346A918 LDR W9, [X0 + 0xE0]
	0x0346A91C CBNZ W9, 0x346A924
	0x0346A920 BL 0x1C16DFC
	0x0346A924 MOV X0, X31
	0x0346A928 BL 0x33616A4
	0x0346A92C ADRP X22, 0xC8B000
	0x0346A930 LDR X22, [X22 + 0xA10]
	0x0346A934 MOV X8, X0
	0x0346A938 STR X8, [X31 + 0x28]
	0x0346A93C LDR X0, [X22]
	0x0346A940 LDR W8, [X0 + 0xE0]
	0x0346A944 CBNZ W8, 0x346A950
	0x0346A948 BL 0x1C16DFC
	0x0346A94C LDR X0, [X22]
	0x0346A950 LDR X8, [X0 + 0xB8]
	0x0346A954 LDR X1, [X8]
	0x0346A958 ADD X0, X31, 0x28
	0x0346A95C MOV X2, X31
	0x0346A960 BL 0x335FC68
	0x0346A964 CBZ X21, 0x346ABD8
	0x0346A968 LDR X8, [X21]
	0x0346A96C LDR X1, [X23]
	0x0346A970 MOV X22, X0
	0x0346A974 LDRH W9, [X8 + 0x12E]
	0x0346A978 CBZ X9, 0x346A99C
	0x0346A97C LDR X10, [X8 + 0xB0]
	0x0346A980 ADD X10, X10, 0x8
	0x0346A984 LDUR X11, [X10 - 0x8]
	0x0346A988 CMP X11, X1
	0x0346A98C B.EQ 0x346A9AC
	0x0346A990 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF74000
	011 Move W8, [X20+1997]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCC7000
	018 Move X0, [X0+1248]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC7000
	021 Move X0, [X0+1256]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8D000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8C000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8B000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC92000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8B000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC6000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC6000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8B000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC8B000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8B000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC7000
	054 Move X0, [X0+1264]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC7000
	057 Move X0, [X0+1272]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1997], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC8D000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC8B000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCC7000
	091 Move X8, [X8+1272]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass111_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {354}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {355}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {356}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {357}
	119 Move X23, 0xC8B000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {358}
	152 Move X9, 0xC8B000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC8C000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {359}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {360}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {361}
	219 Move X8, 0xC8B000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC8B000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCC7000
	242 Move X8, [X8+1248]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {353}
	250 Move X8, 0xC92000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCC7000
	257 Move X8, [X8+1264]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {350}
	266 Move X9, 0xCC6000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCC6000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Call RetryHistory..ctor, X0, X1, X2, X3
	289 Compare X21, 0
	290 JumpIfEqual {351}
	291 Move X0, X21
	292 Move X1, X22
	293 Move X2, X24
	294 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	295 Compare X0, 0
	296 JumpIfEqual {352}
	297 Move X1, X31
	298 Call Task.GetAwaiter, X0
	299 Move [X31+24], X0
	300 Add X0, X31, 24
	301 Move X1, X31
	302 Call TaskAwaiter.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {324}
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.GetResult, X0
	310 Move TEMP, 1
	311 Not TEMP
	312 Move W8, TEMP
	313 Move [X19], W8
	314 Move [X19+72], X31
	315 Move X0, [X25]
	316 Add X19, X19, 8
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31+24]
	327 Move [X19+88], X8
	328 Move X0, [X25]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xCC7000
	334 Move X8, [X8+1256]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 24
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Add X31, X31, 112
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X20, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X20
	365 Call 0x3EB2AD0
	366 Move X20, X0
	367 Move X0, 0xC8A000
	368 Move X0, [X0+2000]
	369 Call 0x1C17D08
	370 Move X8, [X20]
	371 Move X1, [X8]
	372 Call 0x1C18270
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move X20, [X20]
	378 Call 0x3EB2AE0
	379 Move TEMP, 1
	380 Not TEMP
	381 Move W8, TEMP
	382 Move [X19+72], X31
	383 Move [X19+8], W8
	384 Move X0, 0xC8D000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0xA4B000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346A994 ADD X10, X10, 0x10
	0x0346A998 B.NE 0x346A984
	0x0346A99C MOVZ W2, 0xB
	0x0346A9A0 MOV X0, X21
	0x0346A9A4 BL 0x1C5C788
	0x0346A9A8 B 0x346A9BC
	0x0346A9AC LDR W9, [X10]
	0x0346A9B0 ADD W9, W9, 0xB
	0x0346A9B4 ADD X8, X8, W9, 0x4, SXTW
	0x0346A9B8 ADD X0, X8, 0x138
	0x0346A9BC LDP X8, X2, [X0]
	0x0346A9C0 MOV X0, X21
	0x0346A9C4 MOV X1, X22
	0x0346A9C8 BLR X8
	0x0346A9CC TBZ X0, 0x0, 0x346AA60
	0x0346A9D0 LDR X8, [X19 + 0x70]
	0x0346A9D4 CBZ X8, 0x346ABDC
	0x0346A9D8 LDR X1, [X8 + 0x18]
	0x0346A9DC LDR X3, [X19 + 0x68]
	0x0346A9E0 LDR X4, [X8 + 0x50]
	0x0346A9E4 MOV X0, X20
	0x0346A9E8 MOV X2, X31
	0x0346A9EC MOV X5, X31
	0x0346A9F0 BL 0x34440A8
	0x0346A9F4 CBZ X0, 0x346ABE0
	0x0346A9F8 ADRP X8, 0xC8A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF74000
	007 Move X22, 0xC8D000
	008 Move W8, [X21+1998]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8D000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1998], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

