Type: Nakama.Client/<>c__DisplayClass104_0

Method: System.Void .ctor()

Disassembly:
	0x03444E14 BL 0x263221C
	0x03444E18 LDR X2, [X26]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> <RpcAsync>b__0()

Disassembly:
	0x03446CA8 BL 0x3410730
	0x03446CAC LDP X20, X19, [X31 + 0x30]
	0x03446CB0 LDP X22, X21, [X31 + 0x20]
	0x03446CB4 LDP X30, X23, [X31 + 0x10]
	0x03446CB8 ADD X31, X31, 0x40
	0x03446CBC RET
	0x03446CC0 BL 0x1C16F20
	0x03446CC4 MOV X1, X31
	0x03446CC8 B 0x33BDD8C
	0x03446CCC SUB X31, X31, 0x40
	0x03446CD0 STR X30, [X31 + 0x10]
	0x03446CD4 STP X22, X21, [X31 + 0x20]
	0x03446CD8 STP X20, X19, [X31 + 0x30]
	0x03446CDC ADRP X20, 0xF97000
	0x03446CE0 LDRB W8, [X20 + 0x712]
	0x03446CE4 MOV X19, X0
	0x03446CE8 TBNZ X8, 0x0, 0x3446D18
	0x03446CEC ADRP X0, 0xCE9000
	0x03446CF0 LDR X0, [X0 + 0x990]
	0x03446CF4 BL 0x1C16CF4
	0x03446CF8 ADRP X0, 0xCAE000
	0x03446CFC LDR X0, [X0 + 0x818]
	0x03446D00 BL 0x1C16CF4
	0x03446D04 ADRP X0, 0xCE9000
	0x03446D08 LDR X0, [X0 + 0x7C8]
	0x03446D0C BL 0x1C16CF4
	0x03446D10 MOVZ W8, 0x1
	0x03446D14 STRB W8, [X20 + 0x712]
	0x03446D18 LDR X9, [X19 + 0x10]
	0x03446D1C CBZ X9, 0x3446E10
	0x03446D20 LDR X21, [X19 + 0x18]
	0x03446D24 CBZ X21, 0x3446E10
	0x03446D28 ADRP X10, 0xCAE000
	0x03446D2C LDR X8, [X21]
	0x03446D30 LDR X10, [X10 + 0x818]
	0x03446D34 ADRP X22, 0xCE9000
	0x03446D38 LDR X20, [X9 + 0x48]
	0x03446D3C LDRH W9, [X8 + 0x12E]
	0x03446D40 LDR X1, [X10]
	0x03446D44 LDR X22, [X22 + 0x990]
	0x03446D48 CBZ X9, 0x3446D6C
	0x03446D4C LDR X10, [X8 + 0xB0]
	0x03446D50 ADD X10, X10, 0x8
	0x03446D54 LDUR X11, [X10 - 0x8]
	0x03446D58 CMP X11, X1
	0x03446D5C B.EQ 0x3446D7C
	0x03446D60 SUBS X9, X9, 0x1
	0x03446D64 ADD X10, X10, 0x10
	0x03446D68 B.NE 0x3446D54
	0x03446D6C MOV X0, X21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X19, 0xF98000
	008 Move W8, [X19+1797]
	009 Move X22, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xCEA000
	015 Move X0, [X0+1992]
	016 Call 0x1C17CF4
	017 Move X0, 0xCB0000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1797], W8
	022 Move X8, [X22+16]
	023 Compare X8, 0
	024 JumpIfEqual {63}
	025 Move X9, 0xCB0000
	026 Move X9, [X9+632]
	027 Move X10, 0xCEA000
	028 Add X0, X31, 32
	029 Move X9, [X9]
	030 Move X10, [X10+1992]
	031 Move X21, [X8+72]
	032 Move X1, [X22+40]
	033 Move X8, [X9+184]
	034 Move X2, [X10]
	035 Move X20, [X22+24]
	036 Move X19, [X22+32]
	037 Move X22, [X8]
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Call Nullable`1<CancellationToken>..ctor, X0, X1
	041 Compare X21, 0
	042 JumpIfEqual {63}
	043 Move X8, [X31+32]
	044 Move X9, [X31+40]
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X22
	048 Move X3, X22
	049 Move X4, X20
	050 Move X5, X31
	051 Move X6, X19
	052 Move [X31+8], X9
	053 Move [X31+16], X31
	054 Move [X31], X8
	055 Call ApiClient.RpcFunc2Async, X0, X1, X2, X3, X4, X5, X6, X7
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X22, [X31+64]
	059 Move X21, [X31+72]
	060 Move X30, [X31+48]
	061 Add X31, X31, 96
	062 Return X0
	063 Call 0x1C17F20

