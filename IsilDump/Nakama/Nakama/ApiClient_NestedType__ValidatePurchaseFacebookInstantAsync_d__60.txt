Type: Nakama.ApiClient/<ValidatePurchaseFacebookInstantAsync>d__60

Method: System.Void MoveNext()

Disassembly:
	0x0343C08C LDR X8, [X8 + 0x460]
	0x0343C090 LDR X1, [X8]
	0x0343C094 BL 0x220E6DC
	0x0343C098 MOVN W8, 0x1
	0x0343C09C STR W8, [X19], #0x8
	0x0343C0A0 MOV X20, X0
	0x0343C0A4 LDR X0, [X28]
	0x0343C0A8 ADRP X21, 0xCF3000
	0x0343C0AC LDR W8, [X0 + 0xE0]
	0x0343C0B0 LDR X21, [X21 + 0x458]
	0x0343C0B4 CBNZ W8, 0x343C0BC
	0x0343C0B8 BL 0x1C16DFC
	0x0343C0BC LDR X2, [X21]
	0x0343C0C0 MOV X0, X19
	0x0343C0C4 MOV X1, X20
	0x0343C0C8 BL 0x26322B0
	0x0343C0CC B 0x343C108
	0x0343C0D0 STR W31, [X19]
	0x0343C0D4 LDR X8, [X31 + 0x18]
	0x0343C0D8 STR X8, [X19 + 0x48]
	0x0343C0DC LDR X0, [X28]
	0x0343C0E0 LDR W8, [X0 + 0xE0]
	0x0343C0E4 CBNZ W8, 0x343C0EC
	0x0343C0E8 BL 0x1C16DFC
	0x0343C0EC ADRP X8, 0xCF3000
	0x0343C0F0 LDR X8, [X8 + 0x4B8]
	0x0343C0F4 ADD X0, X19, 0x8
	0x0343C0F8 LDR X3, [X8]
	0x0343C0FC ADD X1, X31, 0x18
	0x0343C100 MOV X2, X19
	0x0343C104 BL 0x1FB6114
	0x0343C108 LDP X20, X19, [X31 + 0x60]
	0x0343C10C LDP X22, X21, [X31 + 0x50]
	0x0343C110 LDP X24, X23, [X31 + 0x40]
	0x0343C114 LDP X26, X25, [X31 + 0x30]
	0x0343C118 LDP X28, X27, [X31 + 0x20]
	0x0343C11C LDR X30, [X31 + 0x10]
	0x0343C120 ADD X31, X31, 0x70
	0x0343C124 RET
	0x0343C128 ADRP X0, 0xCBF000
	0x0343C12C LDR X0, [X0 + 0x578]
	0x0343C130 BL 0x1C16D08
	0x0343C134 BL 0x1C16F10
	0x0343C138 MOV X20, X0
	0x0343C13C ADRP X0, 0xCF2000
	0x0343C140 LDR X0, [X0 + 0xBC8]
	0x0343C144 BL 0x1C16D08
	0x0343C148 MOV X1, X0
	0x0343C14C MOV X0, X20
	0x0343C150 MOV X2, X31
	0x0343C154 BL 0x3314A68
	0x0343C158 ADRP X0, 0xCF3000
	0x0343C15C LDR X0, [X0 + 0x4C8]
	0x0343C160 BL 0x1C16D08
	0x0343C164 MOV X1, X0
	0x0343C168 MOV X0, X20
	0x0343C16C BL 0x1C16DEC
	0x0343C170 BL 0x1C16F20
	0x0343C174 BL 0x1C16F20
	0x0343C178 BL 0x1C16F20
	0x0343C17C BL 0x1C16F28
	0x0343C180 BL 0x1C16F20
	0x0343C184 BL 0x1C16F20
	0x0343C188 BL 0x1C16F20
	0x0343C18C BL 0x1C16F20
	0x0343C190 BL 0x1C16F20
	0x0343C194 BL 0x1C16F20
	0x0343C198 B 0x343C1FC
	0x0343C19C B 0x343C1FC
	0x0343C1A0 B 0x343C1FC
	0x0343C1A4 B 0x343C1FC
	0x0343C1A8 B 0x343C1FC
	0x0343C1AC B 0x343C1FC
	0x0343C1B0 B 0x343C1FC
	0x0343C1B4 B 0x343C1FC
	0x0343C1B8 B 0x343C1FC
	0x0343C1BC B 0x343C1FC
	0x0343C1C0 B 0x343C1FC
	0x0343C1C4 B 0x343C1FC
	0x0343C1C8 B 0x343C1FC
	0x0343C1CC B 0x343C1FC
	0x0343C1D0 B 0x343C1FC
	0x0343C1D4 B 0x343C1FC
	0x0343C1D8 B 0x343C1FC
	0x0343C1DC B 0x343C1FC
	0x0343C1E0 B 0x343C1FC
	0x0343C1E4 B 0x343C1FC
	0x0343C1E8 B 0x343C1FC
	0x0343C1EC B 0x343C1FC
	0x0343C1F0 B 0x343C1FC
	0x0343C1F4 B 0x343C1FC
	0x0343C1F8 B 0x343C1FC
	0x0343C1FC MOV X20, X0
	0x0343C200 CMP W1, 0x1
	0x0343C204 B.NE 0x343C2A0
	0x0343C208 MOV X0, X20
	0x0343C20C BL 0x3EB1AD0
	0x0343C210 MOV X20, X0
	0x0343C214 ADRP X0, 0xCB7000
	0x0343C218 LDR X0, [X0 + 0x7D0]
	0x0343C21C BL 0x1C16D08
	0x0343C220 LDR X8, [X20]
	0x0343C224 LDR X1, [X8]
	0x0343C228 BL 0x1C17270
	0x0343C22C TBZ X0, 0x0, 0x343C278
	0x0343C230 LDR X20, [X20]
	0x0343C234 BL 0x3EB1AE0
	0x0343C238 MOVN W8, 0x1
	0x0343C23C STR W8, [X19], #0x8
	0x0343C240 ADRP X0, 0xCF2000
	0x0343C244 LDR X0, [X0 + 0x530]
	0x0343C248 BL 0x1C16D08
	0x0343C24C LDR W8, [X0 + 0xE0]
	0x0343C250 CBNZ W8, 0x343C258
	0x0343C254 BL 0x1C16DFC
	0x0343C258 ADRP X0, 0xCF3000
	0x0343C25C LDR X0, [X0 + 0x478]
	0x0343C260 BL 0x1C16D08
	0x0343C264 MOV X2, X0
	0x0343C268 MOV X0, X19
	0x0343C26C MOV X1, X20
	0x0343C270 BL 0x26324C8
	0x0343C274 B 0x343C108
	0x0343C278 MOVZ W0, 0x8
	0x0343C27C BL 0x3EB1AF0
	0x0343C280 LDR X8, [X20]
	0x0343C284 STR X8, [X0]
	0x0343C288 ADRP X1, 0xA78000
	0x0343C28C ADD X1, X1, 0xE58
	0x0343C290 MOV X2, X31
	0x0343C294 BL 0x3EB1B00
	0x0343C298 MOV X20, X0
	0x0343C29C BL 0x3EB1AE0
	0x0343C2A0 MOV X0, X20
	0x0343C2A4 BL 0x1D2C690
	0x0343C2A8 BL 0x1990590
	0x0343C2AC STR X30, [X31 - 0x30]!
	0x0343C2B0 STP X22, X21, [X31 + 0x10]
	0x0343C2B4 STP X20, X19, [X31 + 0x20]
	0x0343C2B8 ADRP X22, 0xFA1000
	0x0343C2BC ADRP X21, 0xCF2000
	0x0343C2C0 LDRB W8, [X22 + 0x692]
	0x0343C2C4 LDR X21, [X21 + 0x530]
	0x0343C2C8 MOV X19, X1
	0x0343C2CC MOV X20, X0
	0x0343C2D0 TBNZ X8, 0x0, 0x343C2F4
	0x0343C2D4 ADRP X0, 0xCF3000
	0x0343C2D8 LDR X0, [X0 + 0x480]
	0x0343C2DC BL 0x1C16CF4
	0x0343C2E0 ADRP X0, 0xCF2000
	0x0343C2E4 LDR X0, [X0 + 0x530]
	0x0343C2E8 BL 0x1C16CF4
	0x0343C2EC MOVZ W8, 0x1
	0x0343C2F0 STRB W8, [X22 + 0x692]
	0x0343C2F4 LDR X0, [X21]
	0x0343C2F8 ADRP X21, 0xCF3000
	0x0343C2FC LDR W8, [X0 + 0xE0]
	0x0343C300 LDR X21, [X21 + 0x480]
	0x0343C304 CBNZ W8, 0x343C30C
	0x0343C308 BL 0x1C16DFC
	0x0343C30C LDR X2, [X21]
	0x0343C310 ADD X0, X20, 0x8
	0x0343C314 MOV X1, X19
	0x0343C318 LDP X20, X19, [X31 + 0x20]
	0x0343C31C LDP X22, X21, [X31 + 0x10]
	0x0343C320 LDR X30, [X31], #0x30
	0x0343C324 B 0x2632228
	0x0343C328 SUB X31, X31, 0x70
	0x0343C32C STR X30, [X31 + 0x10]
	0x0343C330 STP X28, X27, [X31 + 0x20]
	0x0343C334 STP X26, X25, [X31 + 0x30]
	0x0343C338 STP X24, X23, [X31 + 0x40]
	0x0343C33C STP X22, X21, [X31 + 0x50]
	0x0343C340 STP X20, X19, [X31 + 0x60]
	0x0343C344 ADRP X20, 0xFA1000
	0x0343C348 LDRB W8, [X20 + 0x693]
	0x0343C34C MOV X19, X0
	0x0343C350 TBNZ X8, 0x0, 0x343C434
	0x0343C354 ADRP X0, 0xCF3000
	0x0343C358 LDR X0, [X0 + 0x4D0]
	0x0343C35C BL 0x1C16CF4
	0x0343C360 ADRP X0, 0xCF3000
	0x0343C364 LDR X0, [X0 + 0x4D8]
	0x0343C368 BL 0x1C16CF4
	0x0343C36C ADRP X0, 0xCF2000
	0x0343C370 LDR X0, [X0 + 0x588]
	0x0343C374 BL 0x1C16CF4
	0x0343C378 ADRP X0, 0xCC0000
	0x0343C37C LDR X0, [X0 + 0x8D8]
	0x0343C380 BL 0x1C16CF4
	0x0343C384 ADRP X0, 0xCB8000
	0x0343C388 LDR X0, [X0 + 0x810]
	0x0343C38C BL 0x1C16CF4
	0x0343C390 ADRP X0, 0xCB8000
	0x0343C394 LDR X0, [X0 + 0x6C0]
	0x0343C398 BL 0x1C16CF4
	0x0343C39C ADRP X0, 0xCB8000
	0x0343C3A0 LDR X0, [X0 + 0x6D0]
	0x0343C3A4 BL 0x1C16CF4
	0x0343C3A8 ADRP X0, 0xCF2000
	0x0343C3AC LDR X0, [X0 + 0x7B8]
	0x0343C3B0 BL 0x1C16CF4
	0x0343C3B4 ADRP X0, 0xCF3000
	0x0343C3B8 LDR X0, [X0 + 0x4E0]
	0x0343C3BC BL 0x1C16CF4
	0x0343C3C0 ADRP X0, 0xCBA000
	0x0343C3C4 LDR X0, [X0 + 0x1E0]
	0x0343C3C8 BL 0x1C16CF4
	0x0343C3CC ADRP X0, 0xCBA000
	0x0343C3D0 LDR X0, [X0 + 0x1F0]
	0x0343C3D4 BL 0x1C16CF4
	0x0343C3D8 ADRP X0, 0xCBA000
	0x0343C3DC LDR X0, [X0 + 0x1F8]
	0x0343C3E0 BL 0x1C16CF4
	0x0343C3E4 ADRP X0, 0xCC0000
	0x0343C3E8 LDR X0, [X0 + 0x3A0]
	0x0343C3EC BL 0x1C16CF4
	0x0343C3F0 ADRP X0, 0xCE0000
	0x0343C3F4 LDR X0, [X0 + 0x4D8]
	0x0343C3F8 BL 0x1C16CF4
	0x0343C3FC ADRP X0, 0xCF3000
	0x0343C400 LDR X0, [X0 + 0x4E8]
	0x0343C404 BL 0x1C16CF4
	0x0343C408 ADRP X0, 0xCF2000
	0x0343C40C LDR X0, [X0 + 0x7D0]
	0x0343C410 BL 0x1C16CF4
	0x0343C414 ADRP X0, 0xCF2000
	0x0343C418 LDR X0, [X0 + 0x7D8]
	0x0343C41C BL 0x1C16CF4
	0x0343C420 ADRP X0, 0xCB7000
	0x0343C424 LDR X0, [X0 + 0x988]
	0x0343C428 BL 0x1C16CF4
	0x0343C42C MOVZ W8, 0x1
	0x0343C430 STRB W8, [X20 + 0x693]
	0x0343C434 STR X31, [X31 + 0x18]
	0x0343C438 ADRP X28, 0xCF2000
	0x0343C43C LDR W8, [X19]
	0x0343C440 LDR X28, [X28 + 0x588]
	0x0343C444 CBZ W8, 0x343C624
	0x0343C448 LDR X8, [X19 + 0x20]
	0x0343C44C CBZ X8, 0x343C75C
	0x0343C450 LDR X25, [X19 + 0x28]
	0x0343C454 CBZ X25, 0x343C7A4
	0x0343C458 LDR X0, [X25 + 0x20]
	0x0343C45C CBZ X0, 0x343C7A8
	0x0343C460 ADRP X8, 0xCF3000
	0x0343C464 ADRP X9, 0xCB7000
	0x0343C468 LDR X8, [X8 + 0x4E8]
	0x0343C46C LDR X9, [X9 + 0x988]
	0x0343C470 LDR X21, [X8]
	0x0343C474 LDR X20, [X9]
	0x0343C478 MOV X1, X31
	0x0343C47C BL 0x361B448
	0x0343C480 ADRP X8, 0xCC0000
	0x0343C484 LDR X8, [X8 + 0x8D8]
	0x0343C488 MOV X22, X0
	0x0343C48C LDR X0, [X8]
	0x0343C490 MOVZ W1, 0x1
	0x0343C494 BL 0x1C16D6C
	0x0343C498 MOV X1, X0
	0x0343C49C CBZ X1, 0x343C7AC
	0x0343C4A0 LDR W8, [X1 + 0x18]
	0x0343C4A4 CBZ W8, 0x343C7B0
	0x0343C4A8 MOVZ W8, 0x2F
	0x0343C4AC STRH W8, [X1 + 0x20]
	0x0343C4B0 CBZ X22, 0x343C7B4
	0x0343C4B4 MOV X0, X22
	0x0343C4B8 MOV X2, X31
	0x0343C4BC BL 0x322BC58
	0x0343C4C0 MOV X1, X21
	0x0343C4C4 MOV X2, X31
	0x0343C4C8 BL 0x321B938
	0x0343C4CC ADRP X8, 0xCC0000
	0x0343C4D0 LDR X8, [X8 + 0x3A0]
	0x0343C4D4 MOV X22, X0
	0x0343C4D8 LDR X23, [X25 + 0x20]
	0x0343C4DC LDR X0, [X8]
	0x0343C4E0 BL 0x1C16F10
	0x0343C4E4 MOV X21, X0
	0x0343C4E8 MOV X1, X23
	0x0343C4EC MOV X2, X31
	0x0343C4F0 BL 0x36281F8
	0x0343C4F4 CBZ X21, 0x343C7B8
	0x0343C4F8 MOV X0, X21
	0x0343C4FC MOV X1, X22
	0x0343C500 MOV X2, X31
	0x0343C504 BL 0x36288CC
	0x0343C508 MOV X0, X21
	0x0343C50C MOV X1, X20
	0x0343C510 MOV X2, X31
	0x0343C514 BL 0x3628980
	0x0343C518 MOV X0, X21
	0x0343C51C MOV X1, X31
	0x0343C520 BL 0x3628A38
	0x0343C524 ADRP X8, 0xCE0000
	0x0343C528 ADRP X9, 0xCB8000
	0x0343C52C LDR X8, [X8 + 0x4D8]
	0x0343C530 LDR X9, [X9 + 0x6D0]
	0x0343C534 MOV X20, X0
	0x0343C538 LDR X21, [X8]
	0x0343C53C LDR X0, [X9]
	0x0343C540 BL 0x1C16F10
	0x0343C544 ADRP X8, 0xCB8000
	0x0343C548 LDR X8, [X8 + 0x6C0]
	0x0343C54C MOV X22, X0
	0x0343C550 LDR X1, [X8]
	0x0343C554 BL 0x2AA4804
	0x0343C558 ADRP X8, 0xCF2000
	0x0343C55C LDR X8, [X8 + 0x7D8]
	0x0343C560 LDR X1, [X19 + 0x30]
	0x0343C564 LDR X0, [X8]
	0x0343C568 MOV X2, X31
	0x0343C56C BL 0x321B938
	0x0343C570 CBZ X22, 0x343C7BC
	0x0343C574 ADRP X8, 0xCF2000
	0x0343C578 LDR X8, [X8 + 0x7D0]
	0x0343C57C ADRP X9, 0xCB8000
	0x0343C580 LDR X9, [X9 + 0x810]
	0x0343C584 MOV X2, X0
	0x0343C588 LDR X1, [X8]
	0x0343C58C LDR X3, [X9]
	0x0343C590 MOV X0, X22
	0x0343C594 BL 0x2AA5098
	0x0343C598 LDR X0, [X19 + 0x20]
	0x0343C59C MOV X1, X31
	0x0343C5A0 BL 0x3483BE4
	0x0343C5A4 MOV X23, X0
	0x0343C5A8 MOV X0, X31
	0x0343C5AC BL 0x3241948
	0x0343C5B0 CBZ X0, 0x343C7C0
	0x0343C5B4 LDR X8, [X0]
	0x0343C5B8 LDR X9, [X8 + 0x268]
	0x0343C5BC LDR X2, [X8 + 0x270]
	0x0343C5C0 MOV X1, X23
	0x0343C5C4 BLR X9
	0x0343C5C8 LDR X24, [X25 + 0x10]
	0x0343C5CC CBZ X24, 0x343C7C4
	0x0343C5D0 ADRP X10, 0xCF2000
	0x0343C5D4 LDR X10, [X10 + 0x7B8]
	0x0343C5D8 LDR X8, [X24]
	0x0343C5DC LDR W26, [X25 + 0x18]
	0x0343C5E0 LDP X27, X25, [X19 + 0x38]
	0x0343C5E4 LDR X1, [X10]
	0x0343C5E8 LDRH W9, [X8 + 0x12E]
	0x0343C5EC MOV X23, X0
	0x0343C5F0 CBZ X9, 0x343C614
	0x0343C5F4 LDR X10, [X8 + 0xB0]
	0x0343C5F8 ADD X10, X10, 0x8
	0x0343C5FC LDUR X11, [X10 - 0x8]
	0x0343C600 CMP X11, X1
	0x0343C604 B.EQ 0x343C63C
	0x0343C608 SUBS X9, X9, 0x1
	0x0343C60C ADD X10, X10, 0x10
	0x0343C610 B.NE 0x343C5FC
	0x0343C614 MOVZ W2, 0x3
	0x0343C618 MOV X0, X24
	0x0343C61C BL 0x1C5C788
	0x0343C620 B 0x343C64C
	0x0343C624 LDR X8, [X19 + 0x48]
	0x0343C628 MOVN W9, 0x0
	0x0343C62C STR X8, [X31 + 0x18]
	0x0343C630 STR X31, [X19 + 0x48]
	0x0343C634 STR W9, [X19]
	0x0343C638 B 0x343C6A8
	0x0343C63C LDR W9, [X10]
	0x0343C640 ADD W9, W9, 0x3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA2000
	014 Move W8, [X20+1677]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCF4000
	021 Move X0, [X0+1160]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF4000
	024 Move X0, [X0+1112]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF3000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC1000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB9000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB9000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB9000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF3000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF4000
	045 Move X0, [X0+1120]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBB000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCBB000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCBB000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC1000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE1000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF3000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF4000
	066 Move X0, [X0+1168]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF3000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCB8000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1677], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCF3000
	078 Move W8, [X19]
	079 Move X28, [X28+1328]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xCF4000
	092 Move X9, 0xCB8000
	093 Move X8, [X8+1168]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCC1000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCC1000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCE1000
	145 Move X9, 0xCB9000
	146 Move X8, [X8+1240]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCB9000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xCF3000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xCF3000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCB9000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xCF3000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCBB000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCBB000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCBB000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xCF4000
	255 Move X8, [X8+1120]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xCF4000
	265 Move W8, [X0+224]
	266 Move X21, [X21+1112]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xCF4000
	283 Move X8, [X8+1160]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCC0000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xCF3000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xCF4000
	315 Move X0, [X0+1176]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCB8000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xCF3000
	352 Move X0, [X0+1328]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xCF4000
	359 Move X0, [X0+1144]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA79000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343C644 ADD X8, X8, W9, 0x4, SXTW
	0x0343C648 ADD X0, X8, 0x138
	0x0343C64C LDP X8, X9, [X0]
	0x0343C650 MOV X0, X24
	0x0343C654 MOV X1, X21
	0x0343C658 MOV X2, X20
	0x0343C65C MOV X3, X22
	0x0343C660 MOV X4, X23
	0x0343C664 MOV W5, W26
	0x0343C668 MOV X6, X27
	0x0343C66C MOV X7, X25
	0x0343C670 STR X9, [X31]
	0x0343C674 BLR X8
	0x0343C678 CBZ X0, 0x343C7C8
	0x0343C67C ADRP X8, 0xCBA000
	0x0343C680 LDR X8, [X8 + 0x1F8]
	0x0343C684 LDR X1, [X8]
	0x0343C688 BL 0x269F5D0
	0x0343C68C ADRP X8, 0xCBA000
	0x0343C690 LDR X8, [X8 + 0x1F0]
	0x0343C694 STR X0, [X31 + 0x18]
	0x0343C698 LDR X1, [X8]
	0x0343C69C ADD X0, X31, 0x18
	0x0343C6A0 BL 0x2677430
	0x0343C6A4 TBZ X0, 0x0, 0x343C704
	0x0343C6A8 ADRP X8, 0xCBA000
	0x0343C6AC LDR X8, [X8 + 0x1E0]
	0x0343C6B0 ADD X0, X31, 0x18
	0x0343C6B4 LDR X1, [X8]
	0x0343C6B8 BL 0x2677474
	0x0343C6BC ADRP X8, 0xCF3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA2000
	007 Move X21, 0xCF3000
	008 Move W8, [X22+1678]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF4000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF3000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1678], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF4000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1152]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

