Type: Nakama.Client/<ValidateSubscriptionAppleAsync>d__123

Method: System.Void MoveNext()

Disassembly:
	0x0346F55C ADRP X23, 0xC85000
	0x0346F560 LDR X8, [X21]
	0x0346F564 LDR X23, [X23 + 0x818]
	0x0346F568 LDRH W9, [X8 + 0x12E]
	0x0346F56C LDR X1, [X23]
	0x0346F570 CBZ X9, 0x346F594
	0x0346F574 LDR X10, [X8 + 0xB0]
	0x0346F578 ADD X10, X10, 0x8
	0x0346F57C LDUR X11, [X10 - 0x8]
	0x0346F580 CMP X11, X1
	0x0346F584 B.EQ 0x346F5A4
	0x0346F588 SUBS X9, X9, 0x1
	0x0346F58C ADD X10, X10, 0x10
	0x0346F590 B.NE 0x346F57C
	0x0346F594 MOVZ W2, 0x7
	0x0346F598 MOV X0, X21
	0x0346F59C BL 0x1C5C788
	0x0346F5A0 B 0x346F5B4
	0x0346F5A4 LDR W9, [X10]
	0x0346F5A8 ADD W9, W9, 0x7
	0x0346F5AC ADD X8, X8, W9, 0x4, SXTW
	0x0346F5B0 ADD X0, X8, 0x138
	0x0346F5B4 LDP X8, X1, [X0]
	0x0346F5B8 MOV X0, X21
	0x0346F5BC BLR X8
	0x0346F5C0 MOV X1, X31
	0x0346F5C4 BL 0x32277A8
	0x0346F5C8 TBNZ X0, 0x0, 0x346F72C
	0x0346F5CC LDR X8, [X19 + 0x68]
	0x0346F5D0 CBZ X8, 0x346F8D4
	0x0346F5D4 ADRP X9, 0xC85000
	0x0346F5D8 LDR X9, [X9 + 0x9F0]
	0x0346F5DC LDR X21, [X8 + 0x18]
	0x0346F5E0 LDR X0, [X9]
	0x0346F5E4 LDR W9, [X0 + 0xE0]
	0x0346F5E8 CBNZ W9, 0x346F5F0
	0x0346F5EC BL 0x1C16DFC
	0x0346F5F0 MOV X0, X31
	0x0346F5F4 BL 0x33616A4
	0x0346F5F8 ADRP X22, 0xC86000
	0x0346F5FC LDR X22, [X22 + 0xA10]
	0x0346F600 MOV X8, X0
	0x0346F604 STR X8, [X31 + 0x28]
	0x0346F608 LDR X0, [X22]
	0x0346F60C LDR W8, [X0 + 0xE0]
	0x0346F610 CBNZ W8, 0x346F61C
	0x0346F614 BL 0x1C16DFC
	0x0346F618 LDR X0, [X22]
	0x0346F61C LDR X8, [X0 + 0xB8]
	0x0346F620 LDR X1, [X8]
	0x0346F624 ADD X0, X31, 0x28
	0x0346F628 MOV X2, X31
	0x0346F62C BL 0x335FC68
	0x0346F630 CBZ X21, 0x346F8D8
	0x0346F634 LDR X8, [X21]
	0x0346F638 LDR X1, [X23]
	0x0346F63C MOV X22, X0
	0x0346F640 LDRH W9, [X8 + 0x12E]
	0x0346F644 CBZ X9, 0x346F668
	0x0346F648 LDR X10, [X8 + 0xB0]
	0x0346F64C ADD X10, X10, 0x8
	0x0346F650 LDUR X11, [X10 - 0x8]
	0x0346F654 CMP X11, X1
	0x0346F658 B.EQ 0x346F678
	0x0346F65C SUBS X9, X9, 0x1
	0x0346F660 ADD X10, X10, 0x10
	0x0346F664 B.NE 0x346F650
	0x0346F668 MOVZ W2, 0xB
	0x0346F66C MOV X0, X21
	0x0346F670 BL 0x1C5C788
	0x0346F674 B 0x346F688
	0x0346F678 LDR W9, [X10]
	0x0346F67C ADD W9, W9, 0xB
	0x0346F680 ADD X8, X8, W9, 0x4, SXTW
	0x0346F684 ADD X0, X8, 0x138
	0x0346F688 LDP X8, X2, [X0]
	0x0346F68C MOV X0, X21
	0x0346F690 MOV X1, X22
	0x0346F694 BLR X8
	0x0346F698 TBZ X0, 0x0, 0x346F72C
	0x0346F69C LDR X8, [X19 + 0x68]
	0x0346F6A0 CBZ X8, 0x346F8DC
	0x0346F6A4 LDR X1, [X8 + 0x18]
	0x0346F6A8 LDR X3, [X19 + 0x60]
	0x0346F6AC LDR X4, [X8 + 0x48]
	0x0346F6B0 MOV X0, X20
	0x0346F6B4 MOV X2, X31
	0x0346F6B8 MOV X5, X31
	0x0346F6BC BL 0x34440A8
	0x0346F6C0 CBZ X0, 0x346F8E0
	0x0346F6C4 ADRP X8, 0xC85000
	0x0346F6C8 LDR X8, [X8 + 0x840]
	0x0346F6CC LDR X1, [X8]
	0x0346F6D0 BL 0x269F5D0
	0x0346F6D4 ADRP X8, 0xC85000
	0x0346F6D8 LDR X8, [X8 + 0x838]
	0x0346F6DC STR X0, [X31 + 0x20]
	0x0346F6E0 LDR X1, [X8]
	0x0346F6E4 ADD X0, X31, 0x20
	0x0346F6E8 BL 0x2677430
	0x0346F6EC TBNZ X0, 0x0, 0x346F4D4
	0x0346F6F0 STR W31, [X19]
	0x0346F6F4 LDR X8, [X31 + 0x20]
	0x0346F6F8 STR X8, [X19 + 0x70]
	0x0346F6FC LDR X0, [X25]
	0x0346F700 LDR W8, [X0 + 0xE0]
	0x0346F704 CBNZ W8, 0x346F70C
	0x0346F708 BL 0x1C16DFC
	0x0346F70C ADRP X8, 0xCC1000
	0x0346F710 LDR X8, [X8 + 0x6F8]
	0x0346F714 ADD X0, X19, 0x8
	0x0346F718 LDR X3, [X8]
	0x0346F71C ADD X1, X31, 0x20
	0x0346F720 MOV X2, X19
	0x0346F724 BL 0x1FBE62C
	0x0346F728 B 0x346F89C
	0x0346F72C CBZ X20, 0x346F8C0
	0x0346F730 ADRP X8, 0xCC1000
	0x0346F734 LDR X8, [X8 + 0x700]
	0x0346F738 LDR X21, [X20 + 0x58]
	0x0346F73C LDR X23, [X19 + 0x68]
	0x0346F740 LDR X0, [X8]
	0x0346F744 BL 0x1C16F10
	0x0346F748 ADRP X8, 0xCC1000
	0x0346F74C LDR X8, [X8 + 0x728]
	0x0346F750 MOV X22, X0
	0x0346F754 LDR X2, [X8]
	0x0346F758 MOV X1, X23
	0x0346F75C MOV X3, X31
	0x0346F760 BL 0x2D27AA8
	0x0346F764 LDR X8, [X19 + 0x68]
	0x0346F768 CBZ X8, 0x346F8B4
	0x0346F76C ADRP X9, 0xCC0000
	0x0346F770 LDR X23, [X19 + 0x60]
	0x0346F774 LDR X9, [X9 + 0x7C8]
	0x0346F778 CBNZ X23, 0x346F780
	0x0346F77C LDR X23, [X20 + 0x18]
	0x0346F780 LDR X20, [X8 + 0x18]
	0x0346F784 LDR X1, [X8 + 0x48]
	0x0346F788 LDR X2, [X9]
	0x0346F78C STP X31, X31, [X31 + 0x8]
	0x0346F790 ADD X0, X31, 0x8
	0x0346F794 BL 0x242E368
	0x0346F798 ADRP X8, 0xCC0000
	0x0346F79C LDR X8, [X8 + 0x7D0]
	0x0346F7A0 LDR X0, [X8]
	0x0346F7A4 BL 0x1C16F10
	0x0346F7A8 LDP X3, X4, [X31 + 0x8]
	0x0346F7AC MOV X24, X0
	0x0346F7B0 MOV X1, X20
	0x0346F7B4 MOV X2, X23
	0x0346F7B8 BL 0x3465404
	0x0346F7BC CBZ X21, 0x346F8B8
	0x0346F7C0 ADRP X8, 0xCC1000
	0x0346F7C4 LDR X8, [X8 + 0x708]
	0x0346F7C8 LDR X3, [X8]
	0x0346F7CC MOV X0, X21
	0x0346F7D0 MOV X1, X22
	0x0346F7D4 MOV X2, X24
	0x0346F7D8 BL 0x2243230
	0x0346F7DC CBZ X0, 0x346F8BC
	0x0346F7E0 ADRP X8, 0xCC1000
	0x0346F7E4 LDR X8, [X8 + 0x720]
	0x0346F7E8 LDR X1, [X8]
	0x0346F7EC BL 0x269F5D0
	0x0346F7F0 ADRP X8, 0xCC1000
	0x0346F7F4 LDR X8, [X8 + 0x718]
	0x0346F7F8 STR X0, [X31 + 0x18]
	0x0346F7FC LDR X1, [X8]
	0x0346F800 ADD X0, X31, 0x18
	0x0346F804 BL 0x2677430
	0x0346F808 TBZ X0, 0x0, 0x346F860
	0x0346F80C ADRP X8, 0xCC1000
	0x0346F810 LDR X8, [X8 + 0x710]
	0x0346F814 ADD X0, X31, 0x18
	0x0346F818 LDR X1, [X8]
	0x0346F81C BL 0x2677474
	0x0346F820 MOVN W8, 0x1
	0x0346F824 STR W8, [X19]
	0x0346F828 STR X31, [X19 + 0x68]
	0x0346F82C MOV X20, X0
	0x0346F830 LDR X0, [X25]
	0x0346F834 ADRP X21, 0xCC0000
	0x0346F838 ADD X19, X19, 0x8
	0x0346F83C LDR W8, [X0 + 0xE0]
	0x0346F840 LDR X21, [X21 + 0x528]
	0x0346F844 CBNZ W8, 0x346F84C
	0x0346F848 BL 0x1C16DFC
	0x0346F84C LDR X2, [X21]
	0x0346F850 MOV X0, X19
	0x0346F854 MOV X1, X20
	0x0346F858 BL 0x26322B0
	0x0346F85C B 0x346F89C
	0x0346F860 MOVZ W8, 0x1
	0x0346F864 STR W8, [X19]
	0x0346F868 LDR X8, [X31 + 0x18]
	0x0346F86C STR X8, [X19 + 0x78]
	0x0346F870 LDR X0, [X25]
	0x0346F874 LDR W8, [X0 + 0xE0]
	0x0346F878 CBNZ W8, 0x346F880
	0x0346F87C BL 0x1C16DFC
	0x0346F880 ADRP X8, 0xCC1000
	0x0346F884 LDR X8, [X8 + 0x6F0]
	0x0346F888 ADD X0, X19, 0x8
	0x0346F88C LDR X3, [X8]
	0x0346F890 ADD X1, X31, 0x18
	0x0346F894 MOV X2, X19
	0x0346F898 BL 0x1FBE62C
	0x0346F89C LDP X20, X19, [X31 + 0x60]
	0x0346F8A0 LDP X22, X21, [X31 + 0x50]
	0x0346F8A4 LDP X24, X23, [X31 + 0x40]
	0x0346F8A8 LDP X30, X25, [X31 + 0x30]
	0x0346F8AC ADD X31, X31, 0x70
	0x0346F8B0 RET
	0x0346F8B4 BL 0x1C16F20
	0x0346F8B8 BL 0x1C16F20
	0x0346F8BC BL 0x1C16F20
	0x0346F8C0 BL 0x1C16F20
	0x0346F8C4 BL 0x1C16F20
	0x0346F8C8 BL 0x1C16F20
	0x0346F8CC BL 0x1C16F20
	0x0346F8D0 BL 0x1C16F20
	0x0346F8D4 BL 0x1C16F20
	0x0346F8D8 BL 0x1C16F20
	0x0346F8DC BL 0x1C16F20
	0x0346F8E0 BL 0x1C16F20
	0x0346F8E4 B 0x346F958
	0x0346F8E8 B 0x346F958
	0x0346F8EC B 0x346F958
	0x0346F8F0 B 0x346F958
	0x0346F8F4 B 0x346F958
	0x0346F8F8 B 0x346F958
	0x0346F8FC B 0x346F958
	0x0346F900 B 0x346F958
	0x0346F904 B 0x346F958
	0x0346F908 B 0x346F958
	0x0346F90C B 0x346F958
	0x0346F910 B 0x346F958
	0x0346F914 B 0x346F958
	0x0346F918 B 0x346F958
	0x0346F91C B 0x346F958
	0x0346F920 B 0x346F958
	0x0346F924 B 0x346F958
	0x0346F928 B 0x346F958
	0x0346F92C B 0x346F958
	0x0346F930 B 0x346F958
	0x0346F934 B 0x346F958
	0x0346F938 B 0x346F958
	0x0346F93C B 0x346F958
	0x0346F940 B 0x346F958
	0x0346F944 B 0x346F958
	0x0346F948 B 0x346F958
	0x0346F94C B 0x346F958
	0x0346F950 B 0x346F958
	0x0346F954 B 0x346F958
	0x0346F958 MOV X20, X0
	0x0346F95C CMP W1, 0x1
	0x0346F960 B.NE 0x346FA00
	0x0346F964 MOV X0, X20
	0x0346F968 BL 0x3EB1AD0
	0x0346F96C MOV X20, X0
	0x0346F970 ADRP X0, 0xC84000
	0x0346F974 LDR X0, [X0 + 0x7D0]
	0x0346F978 BL 0x1C16D08
	0x0346F97C LDR X8, [X20]
	0x0346F980 LDR X1, [X8]
	0x0346F984 BL 0x1C17270
	0x0346F988 TBZ X0, 0x0, 0x346F9D8
	0x0346F98C LDR X20, [X20]
	0x0346F990 BL 0x3EB1AE0
	0x0346F994 MOVN W8, 0x1
	0x0346F998 STR X31, [X19 + 0x68]
	0x0346F99C STR W8, [X19], #0x8
	0x0346F9A0 ADRP X0, 0xCBF000
	0x0346F9A4 LDR X0, [X0 + 0x5F8]
	0x0346F9A8 BL 0x1C16D08
	0x0346F9AC LDR W8, [X0 + 0xE0]
	0x0346F9B0 CBNZ W8, 0x346F9B8
	0x0346F9B4 BL 0x1C16DFC
	0x0346F9B8 ADRP X0, 0xCC0000
	0x0346F9BC LDR X0, [X0 + 0x548]
	0x0346F9C0 BL 0x1C16D08
	0x0346F9C4 MOV X2, X0
	0x0346F9C8 MOV X0, X19
	0x0346F9CC MOV X1, X20
	0x0346F9D0 BL 0x26324C8
	0x0346F9D4 B 0x346F89C
	0x0346F9D8 MOVZ W0, 0x8
	0x0346F9DC BL 0x3EB1AF0
	0x0346F9E0 LDR X8, [X20]
	0x0346F9E4 STR X8, [X0]
	0x0346F9E8 ADRP X1, 0xA45000
	0x0346F9EC ADD X1, X1, 0xE58
	0x0346F9F0 MOV X2, X31
	0x0346F9F4 BL 0x3EB1B00
	0x0346F9F8 MOV X20, X0
	0x0346F9FC BL 0x3EB1AE0
	0x0346FA00 MOV X0, X20
	0x0346FA04 BL 0x1D2C690
	0x0346FA08 BL 0x1990590
	0x0346FA0C STR X30, [X31 - 0x30]!
	0x0346FA10 STP X22, X21, [X31 + 0x10]
	0x0346FA14 STP X20, X19, [X31 + 0x20]
	0x0346FA18 ADRP X22, 0xF6E000
	0x0346FA1C ADRP X21, 0xCBF000
	0x0346FA20 LDRB W8, [X22 + 0x7EA]
	0x0346FA24 LDR X21, [X21 + 0x5F8]
	0x0346FA28 MOV X19, X1
	0x0346FA2C MOV X20, X0
	0x0346FA30 TBNZ X8, 0x0, 0x346FA54
	0x0346FA34 ADRP X0, 0xCC0000
	0x0346FA38 LDR X0, [X0 + 0x550]
	0x0346FA3C BL 0x1C16CF4
	0x0346FA40 ADRP X0, 0xCBF000
	0x0346FA44 LDR X0, [X0 + 0x5F8]
	0x0346FA48 BL 0x1C16CF4
	0x0346FA4C MOVZ W8, 0x1
	0x0346FA50 STRB W8, [X22 + 0x7EA]
	0x0346FA54 LDR X0, [X21]
	0x0346FA58 ADRP X21, 0xCC0000
	0x0346FA5C LDR W8, [X0 + 0xE0]
	0x0346FA60 LDR X21, [X21 + 0x550]
	0x0346FA64 CBNZ W8, 0x346FA6C
	0x0346FA68 BL 0x1C16DFC
	0x0346FA6C LDR X2, [X21]
	0x0346FA70 ADD X0, X20, 0x8
	0x0346FA74 MOV X1, X19
	0x0346FA78 LDP X20, X19, [X31 + 0x20]
	0x0346FA7C LDP X22, X21, [X31 + 0x10]
	0x0346FA80 LDR X30, [X31], #0x30
	0x0346FA84 B 0x2632228
	0x0346FA88 SUB X31, X31, 0x90
	0x0346FA8C STP X29, X30, [X31 + 0x30]
	0x0346FA90 STP X28, X27, [X31 + 0x40]
	0x0346FA94 STP X26, X25, [X31 + 0x50]
	0x0346FA98 STP X24, X23, [X31 + 0x60]
	0x0346FA9C STP X22, X21, [X31 + 0x70]
	0x0346FAA0 STP X20, X19, [X31 + 0x80]
	0x0346FAA4 ADRP X20, 0xF6E000
	0x0346FAA8 LDRB W8, [X20 + 0x7EB]
	0x0346FAAC MOV X19, X0
	0x0346FAB0 TBNZ X8, 0x0, 0x346FBDC
	0x0346FAB4 ADRP X0, 0xCC1000
	0x0346FAB8 LDR X0, [X0 + 0x738]
	0x0346FABC BL 0x1C16CF4
	0x0346FAC0 ADRP X0, 0xCC1000
	0x0346FAC4 LDR X0, [X0 + 0x740]
	0x0346FAC8 BL 0x1C16CF4
	0x0346FACC ADRP X0, 0xCC1000
	0x0346FAD0 LDR X0, [X0 + 0x748]
	0x0346FAD4 BL 0x1C16CF4
	0x0346FAD8 ADRP X0, 0xCC0000
	0x0346FADC LDR X0, [X0 + 0x560]
	0x0346FAE0 BL 0x1C16CF4
	0x0346FAE4 ADRP X0, 0xCBF000
	0x0346FAE8 LDR X0, [X0 + 0x6B8]
	0x0346FAEC BL 0x1C16CF4
	0x0346FAF0 ADRP X0, 0xC86000
	0x0346FAF4 LDR X0, [X0 + 0xA10]
	0x0346FAF8 BL 0x1C16CF4
	0x0346FAFC ADRP X0, 0xC85000
	0x0346FB00 LDR X0, [X0 + 0x9F0]
	0x0346FB04 BL 0x1C16CF4
	0x0346FB08 ADRP X0, 0xCC1000
	0x0346FB0C LDR X0, [X0 + 0x750]
	0x0346FB10 BL 0x1C16CF4
	0x0346FB14 ADRP X0, 0xCC1000
	0x0346FB18 LDR X0, [X0 + 0x758]
	0x0346FB1C BL 0x1C16CF4
	0x0346FB20 ADRP X0, 0xC85000
	0x0346FB24 LDR X0, [X0 + 0x818]
	0x0346FB28 BL 0x1C16CF4
	0x0346FB2C ADRP X0, 0xCC1000
	0x0346FB30 LDR X0, [X0 + 0x760]
	0x0346FB34 BL 0x1C16CF4
	0x0346FB38 ADRP X0, 0xCBF000
	0x0346FB3C LDR X0, [X0 + 0x2A0]
	0x0346FB40 BL 0x1C16CF4
	0x0346FB44 ADRP X0, 0xCBF000
	0x0346FB48 LDR X0, [X0 + 0x2A8]
	0x0346FB4C BL 0x1C16CF4
	0x0346FB50 ADRP X0, 0xCC0000
	0x0346FB54 LDR X0, [X0 + 0x7C8]
	0x0346FB58 BL 0x1C16CF4
	0x0346FB5C ADRP X0, 0xCC0000
	0x0346FB60 LDR X0, [X0 + 0x7D0]
	0x0346FB64 BL 0x1C16CF4
	0x0346FB68 ADRP X0, 0xCC1000
	0x0346FB6C LDR X0, [X0 + 0x768]
	0x0346FB70 BL 0x1C16CF4
	0x0346FB74 ADRP X0, 0xCC1000
	0x0346FB78 LDR X0, [X0 + 0x770]
	0x0346FB7C BL 0x1C16CF4
	0x0346FB80 ADRP X0, 0xC85000
	0x0346FB84 LDR X0, [X0 + 0x830]
	0x0346FB88 BL 0x1C16CF4
	0x0346FB8C ADRP X0, 0xC85000
	0x0346FB90 LDR X0, [X0 + 0x838]
	0x0346FB94 BL 0x1C16CF4
	0x0346FB98 ADRP X0, 0xCC1000
	0x0346FB9C LDR X0, [X0 + 0x778]
	0x0346FBA0 BL 0x1C16CF4
	0x0346FBA4 ADRP X0, 0xC85000
	0x0346FBA8 LDR X0, [X0 + 0x840]
	0x0346FBAC BL 0x1C16CF4
	0x0346FBB0 ADRP X0, 0xCC1000
	0x0346FBB4 LDR X0, [X0 + 0x780]
	0x0346FBB8 BL 0x1C16CF4
	0x0346FBBC ADRP X0, 0xCC1000
	0x0346FBC0 LDR X0, [X0 + 0x788]
	0x0346FBC4 BL 0x1C16CF4
	0x0346FBC8 ADRP X0, 0xCC1000
	0x0346FBCC LDR X0, [X0 + 0x790]
	0x0346FBD0 BL 0x1C16CF4
	0x0346FBD4 MOVZ W8, 0x1
	0x0346FBD8 STRB W8, [X20 + 0x7EB]
	0x0346FBDC STP X31, X31, [X31 + 0x20]
	0x0346FBE0 STR X31, [X31 + 0x18]
	0x0346FBE4 ADRP X25, 0xCBF000
	0x0346FBE8 LDR W8, [X19]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF6F000
	011 Move W8, [X20+2021]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCC2000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC2000
	021 Move X0, [X0+1680]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC1000
	024 Move X0, [X0+1240]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC0000
	027 Move X0, [X0+1416]
	028 Call 0x1C17CF4
	029 Move X0, 0xC87000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC86000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC2000
	036 Move X0, [X0+1688]
	037 Call 0x1C17CF4
	038 Move X0, 0xC86000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC1000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC1000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC2000
	048 Move X0, [X0+1696]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC2000
	051 Move X0, [X0+1704]
	052 Call 0x1C17CF4
	053 Move X0, 0xC86000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC86000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC2000
	060 Move X0, [X0+1712]
	061 Call 0x1C17CF4
	062 Move X0, 0xC86000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC2000
	066 Move X0, [X0+1720]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC2000
	069 Move X0, [X0+1728]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC2000
	072 Move X0, [X0+1736]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2021], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCC0000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1416]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+96]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+96], X31
	092 Move [X19], W9
	093 Move X8, [X19+88]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+88], X31
	099 Move [X19], W9
	100 Move X8, 0xC86000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCC2000
	106 Move X8, [X8+1736]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass123_0..ctor, X0
	112 Move [X19+80], X21
	113 Compare X21, 0
	114 JumpIfEqual {384}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 Move X8, [X19+64]
	124 Move [X21+48], X8
	125 Compare X20, 0
	126 JumpIfEqual {385}
	127 Move W8, [X20+16]
	128 Compare W8, 0
	129 JumpIfEqual {267}
	130 Move X8, [X19+80]
	131 Compare X8, 0
	132 JumpIfEqual {386}
	133 Move X21, [X8+24]
	134 Compare X21, 0
	135 JumpIfEqual {387}
	136 Move X23, 0xC86000
	137 Move X8, [X21]
	138 Move X23, [X23+2072]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X23]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 7
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 7
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {265}
	166 Move X8, [X19+80]
	167 Compare X8, 0
	168 JumpIfEqual {388}
	169 Move X9, 0xC86000
	170 Move X9, [X9+2544]
	171 Move X21, [X8+24]
	172 Move X0, [X9]
	173 Move W9, [X0+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call DateTime.get_UtcNow
	179 Move X22, 0xC87000
	180 Move X22, [X22+2576]
	181 Move X8, X0
	182 Move [X31+40], X8
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X22]
	189 Move X8, [X0+184]
	190 Move X1, [X8]
	191 Add X0, X31, 40
	192 Move X2, X31
	193 Call DateTime.Add, X0, X1
	194 Compare X21, 0
	195 JumpIfEqual {389}
	196 Move X8, [X21]
	197 Move X1, [X23]
	198 Move X22, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move W2, 11
	209 Move X0, X21
	210 Call 0x1C5D788
	211 Move W9, [X10]
	212 Add W9, W9, 11
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X21
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {265}
	224 Move X8, [X19+80]
	225 Compare X8, 0
	226 JumpIfEqual {390}
	227 Move X1, [X8+24]
	228 Move X3, [X19+72]
	229 Move X4, [X8+48]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X5, X31
	233 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	234 Compare X0, 0
	235 JumpIfEqual {391}
	236 Move X8, 0xC86000
	237 Move X8, [X8+2112]
	238 Move X1, [X8]
	239 Call Task`1<Object>.GetAwaiter, X0
	240 Move X8, 0xC86000
	241 Move X8, [X8+2104]
	242 Move [X31+32], X0
	243 Move X1, [X8]
	244 Add X0, X31, 32
	245 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {100}
	250 Move [X19], W31
	251 Move X8, [X31+32]
	252 Move [X19+88], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xCC2000
	259 Move X8, [X8+1672]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 32
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Compare X20, 0
	266 JumpIfEqual {383}
	267 Move X8, 0xCC2000
	268 Move X8, [X8+1688]
	269 Move X21, [X20+88]
	270 Move X23, [X19+80]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X8, 0xCC2000
	274 Move X8, [X8+1728]
	275 Move X22, X0
	276 Move X2, [X8]
	277 Move X1, X23
	278 Move X3, X31
	279 Call Func`1<Object>..ctor, X0, X1, X2
	280 Move X8, [X19+80]
	281 Compare X8, 0
	282 JumpIfEqual {380}
	283 Move X9, 0xCC1000
	284 Move X23, [X19+72]
	285 Move X9, [X9+1992]
	286 Compare X23, 0
	287 JumpIfNotEqual {289}
	288 Move X23, [X20+24]
	289 Move X20, [X8+24]
	290 Move X1, [X8+48]
	291 Move X2, [X9]
	292 Move [X31+8], X31
	293 Move [X31+16], X31
	294 Add X0, X31, 8
	295 Call Nullable`1<CancellationToken>..ctor, X0, X1
	296 Move X8, 0xCC1000
	297 Move X8, [X8+2000]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X3, [X31+8]
	301 Move X4, [X31+16]
	302 Move X24, X0
	303 Move X1, X20
	304 Move X2, X23
	305 Call RetryHistory..ctor, X0, X1, X2, X3
	306 Compare X21, 0
	307 JumpIfEqual {381}
	308 Move X8, 0xCC2000
	309 Move X8, [X8+1696]
	310 Move X3, [X8]
	311 Move X0, X21
	312 Move X1, X22
	313 Move X2, X24
	314 Call 0x2244230, X0, X1, X2
	315 Compare X0, 0
	316 JumpIfEqual {382}
	317 Move X8, 0xCC2000
	318 Move X8, [X8+1720]
	319 Move X1, [X8]
	320 Call Task`1<Object>.GetAwaiter, X0
	321 Move X8, 0xCC2000
	322 Move X8, [X8+1712]
	323 Move [X31+24], X0
	324 Move X1, [X8]
	325 Add X0, X31, 24
	326 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {354}
	331 Move X8, 0xCC2000
	332 Move X8, [X8+1704]
	333 Add X0, X31, 24
	334 Move X1, [X8]
	335 Call TaskAwaiter`1<Object>.GetResult, X0
	336 Move TEMP, 1
	337 Not TEMP
	338 Move W8, TEMP
	339 Move [X19], W8
	340 Move [X19+80], X31
	341 Move X20, X0
	342 Move X0, [X25]
	343 Move X21, 0xCC1000
	344 Add X19, X19, 8
	345 Move W8, [X0+224]
	346 Move X21, [X21+1240]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X2, [X21]
	351 Move X0, X19
	352 Move X1, X20
	353 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	354 Move W8, 1
	355 Move [X19], W8
	356 Move X8, [X31+24]
	357 Move [X19+96], X8
	358 Move X0, [X25]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X8, 0xCC2000
	364 Move X8, [X8+1680]
	365 Add X0, X19, 8
	366 Move X3, [X8]
	367 Add X1, X31, 24
	368 Move X2, X19
	369 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	370 Move X20, [X31+96]
	371 Move X19, [X31+104]
	372 Move X22, [X31+80]
	373 Move X21, [X31+88]
	374 Move X24, [X31+64]
	375 Move X23, [X31+72]
	376 Move X30, [X31+48]
	377 Move X25, [X31+56]
	378 Add X31, X31, 112
	379 Return 
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Move X20, X0
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X0, X20
	395 Call 0x3EB2AD0
	396 Move X20, X0
	397 Move X0, 0xC85000
	398 Move X0, [X0+2000]
	399 Call 0x1C17D08
	400 Move X8, [X20]
	401 Move X1, [X8]
	402 Call 0x1C18270
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfNotEqual {428}
	407 Move X20, [X20]
	408 Call 0x3EB2AE0
	409 Move TEMP, 1
	410 Not TEMP
	411 Move W8, TEMP
	412 Move [X19+80], X31
	413 Move [X19+8], W8
	414 Move X0, 0xCC0000
	415 Move X0, [X0+1416]
	416 Call 0x1C17D08
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, 0xCC1000
	422 Move X0, [X0+1272]
	423 Call 0x1C17D08
	424 Move X2, X0
	425 Move X0, X19
	426 Move X1, X20
	427 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	428 Move W0, 8
	429 Call 0x3EB2AF0
	430 Move X8, [X20]
	431 Move [X0], X8
	432 Move X1, 0xA46000
	433 Add X1, X1, 3672
	434 Move X2, X31
	435 Call 0x3EB2B00
	436 Move X20, X0
	437 Call 0x3EB2AE0
	438 Move X0, X20
	439 Call 0x1D2D690
	440 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346FBEC LDR X20, [X19 + 0x20]
	0x0346FBF0 LDR X25, [X25 + 0x6B8]
	0x0346FBF4 CBZ W8, 0x346FC18
	0x0346FBF8 CMP W8, 0x1
	0x0346FBFC B.NE 0x346FC44
	0x0346FC00 LDR X8, [X19 + 0x58]
	0x0346FC04 MOVN W9, 0x0
	0x0346FC08 STR X8, [X31 + 0x18]
	0x0346FC0C STR X31, [X19 + 0x58]
	0x0346FC10 STR W9, [X19]
	0x0346FC14 B 0x3470294
	0x0346FC18 LDR X8, [X19 + 0x50]
	0x0346FC1C MOVN W9, 0x0
	0x0346FC20 STR X8, [X31 + 0x20]
	0x0346FC24 STR X31, [X19 + 0x50]
	0x0346FC28 STR W9, [X19]
	0x0346FC2C ADRP X8, 0xC85000
	0x0346FC30 LDR X8, [X8 + 0x830]
	0x0346FC34 ADD X0, X31, 0x20
	0x0346FC38 LDR X1, [X8]
	0x0346FC3C BL 0x2677474
	0x0346FC40 B 0x346FE6C
	0x0346FC44 ADRP X8, 0xCC1000
	0x0346FC48 LDR X8, [X8 + 0x790]
	0x0346FC4C LDR X0, [X8]
	0x0346FC50 BL 0x1C16F10
	0x0346FC54 MOV X21, X0
	0x0346FC58 MOV X1, X31
	0x0346FC5C BL 0x3447624
	0x0346FC60 STR X21, [X19 + 0x40]
	0x0346FC64 CBZ X21, 0x3470378

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF6F000
	007 Move X21, 0xCC0000
	008 Move W8, [X22+2022]
	009 Move X21, [X21+1416]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC1000
	017 Move X0, [X0+1280]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC0000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2022], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1280]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

