Type: Nakama.ApiStorageObjectAck

Method: System.String get_Collection()

Disassembly:
	0x0340A04C LDR X8, [X22]
	0x0340A050 MOV X21, X0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Collection(System.String value)

Disassembly:
	0x0340A054 MOVZ W1, 0x4
	0x0340A058 MOV X0, X8

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x0340A05C BL 0x1C16D6C
	0x0340A060 CBZ X0, 0x340A830

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0340A064 MOV X20, X0
	0x0340A068 CBZ X21, 0x340A080

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Key()

Disassembly:
	0x0340A06C LDR X8, [X20]
	0x0340A070 MOV X0, X21

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Key(System.String value)

Disassembly:
	0x0340A074 LDR X1, [X8 + 0x40]
	0x0340A078 BL 0x1C16E00

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x0340A07C CBZ X0, 0x340A824
	0x0340A080 LDR W8, [X20 + 0x18]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x0340A084 CBZ W8, 0x340A820
	0x0340A088 ADRP X25, 0xD23000

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_UserId()

Disassembly:
	0x0340A08C LDR X25, [X25 + 0xF60]
	0x0340A090 STR X21, [X20 + 0x20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_UserId(System.String value)

Disassembly:
	0x0340A094 LDR X0, [X25]
	0x0340A098 CBZ X0, 0x340A0B0

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_Version()

Disassembly:
	0x0340A09C LDR X8, [X20]
	0x0340A0A0 LDR X1, [X8 + 0x40]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Version(System.String value)

Disassembly:
	0x0340A0A4 BL 0x1C16E00
	0x0340A0A8 CBZ X0, 0x340A824

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340A0AC LDR W8, [X20 + 0x18]
	0x0340A0B0 CMP W8, 0x1
	0x0340A0B4 B.LS 0x340A820
	0x0340A0B8 LDR X8, [X25]
	0x0340A0BC ADD X1, X31, 0x28
	0x0340A0C0 STR X8, [X20 + 0x28]
	0x0340A0C4 LDR W8, [X19 + 0x40]
	0x0340A0C8 LDR X0, [X24]
	0x0340A0CC STR W8, [X31 + 0x28]
	0x0340A0D0 BL 0x1C16E04
	0x0340A0D4 MOV X21, X0
	0x0340A0D8 CBZ X0, 0x340A0F0
	0x0340A0DC LDR X8, [X20]
	0x0340A0E0 MOV X0, X21
	0x0340A0E4 LDR X1, [X8 + 0x40]
	0x0340A0E8 BL 0x1C16E00
	0x0340A0EC CBZ X0, 0x340A824
	0x0340A0F0 LDR W8, [X20 + 0x18]
	0x0340A0F4 CMP W8, 0x2
	0x0340A0F8 B.LS 0x340A820
	0x0340A0FC STR X21, [X20 + 0x30]
	0x0340A100 LDR X0, [X23]
	0x0340A104 CBZ X0, 0x340A11C
	0x0340A108 LDR X8, [X20]
	0x0340A10C LDR X1, [X8 + 0x40]
	0x0340A110 BL 0x1C16E00
	0x0340A114 CBZ X0, 0x340A824
	0x0340A118 LDR W8, [X20 + 0x18]
	0x0340A11C CMP W8, 0x3
	0x0340A120 B.LS 0x340A820
	0x0340A124 LDR X8, [X23]
	0x0340A128 MOV X0, X20
	0x0340A12C MOV X1, X31
	0x0340A130 STR X8, [X20 + 0x38]
	0x0340A134 BL 0x3227578
	0x0340A138 LDR X8, [X22]
	0x0340A13C MOV X21, X0
	0x0340A140 MOVZ W1, 0x4
	0x0340A144 MOV X0, X8
	0x0340A148 BL 0x1C16D6C
	0x0340A14C CBZ X0, 0x340A830
	0x0340A150 MOV X20, X0
	0x0340A154 CBZ X21, 0x340A16C
	0x0340A158 LDR X8, [X20]
	0x0340A15C MOV X0, X21
	0x0340A160 LDR X1, [X8 + 0x40]
	0x0340A164 BL 0x1C16E00
	0x0340A168 CBZ X0, 0x340A824
	0x0340A16C LDR W8, [X20 + 0x18]
	0x0340A170 CBZ W8, 0x340A820
	0x0340A174 ADRP X25, 0xD24000
	0x0340A178 LDR X25, [X25 + 0xE8]
	0x0340A17C STR X21, [X20 + 0x20]
	0x0340A180 LDR X0, [X25]
	0x0340A184 CBZ X0, 0x340A19C
	0x0340A188 LDR X8, [X20]
	0x0340A18C LDR X1, [X8 + 0x40]
	0x0340A190 BL 0x1C16E00
	0x0340A194 CBZ X0, 0x340A824
	0x0340A198 LDR W8, [X20 + 0x18]
	0x0340A19C CMP W8, 0x1
	0x0340A1A0 B.LS 0x340A820
	0x0340A1A4 LDR X8, [X25]
	0x0340A1A8 ADD X1, X31, 0x24
	0x0340A1AC STR X8, [X20 + 0x28]
	0x0340A1B0 LDR W8, [X19 + 0x44]
	0x0340A1B4 LDR X0, [X24]
	0x0340A1B8 STR W8, [X31 + 0x24]
	0x0340A1BC BL 0x1C16E04
	0x0340A1C0 MOV X21, X0
	0x0340A1C4 CBZ X0, 0x340A1DC
	0x0340A1C8 LDR X8, [X20]
	0x0340A1CC MOV X0, X21
	0x0340A1D0 LDR X1, [X8 + 0x40]
	0x0340A1D4 BL 0x1C16E00
	0x0340A1D8 CBZ X0, 0x340A824
	0x0340A1DC LDR W8, [X20 + 0x18]
	0x0340A1E0 CMP W8, 0x2
	0x0340A1E4 B.LS 0x340A820
	0x0340A1E8 STR X21, [X20 + 0x30]
	0x0340A1EC LDR X0, [X23]
	0x0340A1F0 CBZ X0, 0x340A208
	0x0340A1F4 LDR X8, [X20]
	0x0340A1F8 LDR X1, [X8 + 0x40]
	0x0340A1FC BL 0x1C16E00
	0x0340A200 CBZ X0, 0x340A824
	0x0340A204 LDR W8, [X20 + 0x18]
	0x0340A208 CMP W8, 0x3
	0x0340A20C B.LS 0x340A820

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0xFD4000
	013 Move X26, 0xCEA000
	014 Move X27, 0xD24000
	015 Move X20, 0xCEA000
	016 Move X25, 0xD24000
	017 Move X24, 0xD24000
	018 Move X23, 0xD24000
	019 Move X22, 0xD25000
	020 Move X21, 0xD24000
	021 Move X26, [X26+2440]
	022 Move X27, [X27+3704]
	023 Move X20, [X20+2104]
	024 Move W8, [X28+1351]
	025 Move X25, [X25+3552]
	026 Move X24, [X24+3712]
	027 Move X23, [X23+3560]
	028 Move X22, [X22+48]
	029 Move X21, [X21+3720]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0xD24000
	036 Move X0, [X0+3712]
	037 Call 0x1C17CF4
	038 Move X0, 0xD24000
	039 Move X0, [X0+3552]
	040 Call 0x1C17CF4
	041 Move X0, 0xCEA000
	042 Move X0, [X0+2104]
	043 Call 0x1C17CF4
	044 Move X0, 0xD24000
	045 Move X0, [X0+3560]
	046 Call 0x1C17CF4
	047 Move X0, 0xD25000
	048 Move X0, [X0+48]
	049 Call 0x1C17CF4
	050 Move X0, 0xD24000
	051 Move X0, [X0+3720]
	052 Call 0x1C17CF4
	053 Move X0, 0xCEA000
	054 Move X0, [X0+2440]
	055 Call 0x1C17CF4
	056 Move X0, 0xD24000
	057 Move X0, [X0+3704]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X28+1351], W8
	061 Move X2, [X19+16]
	062 Move X0, [X26]
	063 Move X1, [X27]
	064 Move X3, [X20]
	065 Move X4, X31
	066 Call String.Concat, X0, X1, X2, X3
	067 Move X2, [X19+24]
	068 Move X1, [X25]
	069 Move X3, [X20]
	070 Move X4, X31
	071 Call String.Concat, X0, X1, X2, X3
	072 Move X2, [X19+32]
	073 Move X1, [X24]
	074 Move X3, [X20]
	075 Move X4, X31
	076 Call String.Concat, X0, X1, X2, X3
	077 Move X2, [X19+40]
	078 Move X1, [X23]
	079 Move X3, [X20]
	080 Move X4, X31
	081 Call String.Concat, X0, X1, X2, X3
	082 Move X2, [X19+48]
	083 Move X1, [X22]
	084 Move X3, [X20]
	085 Move X4, X31
	086 Call String.Concat, X0, X1, X2, X3
	087 Move X2, [X19+56]
	088 Move X1, [X21]
	089 Move X3, [X20]
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X28, [X31+16]
	099 Move X27, [X31+24]
	100 Move X4, X31
	101 Move X30, [X31+96]
	102 Call String.Concat, X0, X1, X2, X3
	103 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0340A210 LDR X8, [X23]
	0x0340A214 ADRP X21, 0xD23000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

