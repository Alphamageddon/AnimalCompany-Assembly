Type: Nakama.Client/<ImportSteamFriendsAsync>d__68

Method: System.Void MoveNext()

Disassembly:
	0x03457564 MOV X0, X20
	0x03457568 MOV X2, X31
	0x0345756C MOV X5, X31
	0x03457570 BL 0x34440A8
	0x03457574 CBZ X0, 0x3457768
	0x03457578 ADRP X8, 0xC9D000
	0x0345757C LDR X8, [X8 + 0x840]
	0x03457580 LDR X1, [X8]
	0x03457584 BL 0x269F5D0
	0x03457588 ADRP X8, 0xC9D000
	0x0345758C LDR X8, [X8 + 0x838]
	0x03457590 STR X0, [X31 + 0x20]
	0x03457594 LDR X1, [X8]
	0x03457598 ADD X0, X31, 0x20
	0x0345759C BL 0x2677430
	0x034575A0 TBNZ X0, 0x0, 0x3457398
	0x034575A4 STR W31, [X19]
	0x034575A8 LDR X8, [X31 + 0x20]
	0x034575AC STR X8, [X19 + 0x50]
	0x034575B0 LDR X0, [X25]
	0x034575B4 LDR W8, [X0 + 0xE0]
	0x034575B8 CBNZ W8, 0x34575C0
	0x034575BC BL 0x1C16DFC
	0x034575C0 ADRP X8, 0xCD8000
	0x034575C4 LDR X8, [X8 + 0xE38]
	0x034575C8 ADD X0, X19, 0x8
	0x034575CC LDR X3, [X8]
	0x034575D0 ADD X1, X31, 0x20
	0x034575D4 MOV X2, X19
	0x034575D8 BL 0x21886CC
	0x034575DC B 0x3457724
	0x034575E0 CBZ X20, 0x3457748
	0x034575E4 ADRP X8, 0xCA4000
	0x034575E8 LDR X8, [X8 + 0x818]
	0x034575EC LDR X21, [X20 + 0x58]
	0x034575F0 LDR X23, [X19 + 0x48]
	0x034575F4 LDR X0, [X8]
	0x034575F8 BL 0x1C16F10
	0x034575FC ADRP X8, 0xCD8000
	0x03457600 LDR X8, [X8 + 0xE48]
	0x03457604 MOV X22, X0
	0x03457608 LDR X2, [X8]
	0x0345760C MOV X1, X23
	0x03457610 MOV X3, X31
	0x03457614 BL 0x2D27AA8
	0x03457618 LDR X8, [X19 + 0x48]
	0x0345761C CBZ X8, 0x345773C
	0x03457620 ADRP X9, 0xCD8000
	0x03457624 LDR X23, [X19 + 0x40]
	0x03457628 LDR X9, [X9 + 0x7C8]
	0x0345762C CBNZ X23, 0x3457634
	0x03457630 LDR X23, [X20 + 0x18]
	0x03457634 LDR X20, [X8 + 0x18]
	0x03457638 LDR X1, [X8 + 0x28]
	0x0345763C LDR X2, [X9]
	0x03457640 STP X31, X31, [X31 + 0x8]
	0x03457644 ADD X0, X31, 0x8
	0x03457648 BL 0x242E368
	0x0345764C ADRP X8, 0xCD8000
	0x03457650 LDR X8, [X8 + 0x7D0]
	0x03457654 LDR X0, [X8]
	0x03457658 BL 0x1C16F10
	0x0345765C LDP X3, X4, [X31 + 0x8]
	0x03457660 MOV X24, X0
	0x03457664 MOV X1, X20
	0x03457668 MOV X2, X23
	0x0345766C MOV X5, X31
	0x03457670 BL 0x3465404
	0x03457674 CBZ X21, 0x3457740
	0x03457678 MOV X0, X21
	0x0345767C MOV X1, X22
	0x03457680 MOV X2, X24
	0x03457684 MOV X3, X31
	0x03457688 BL 0x3465B68
	0x0345768C CBZ X0, 0x3457744
	0x03457690 MOV X1, X31
	0x03457694 BL 0x33ED394
	0x03457698 STR X0, [X31 + 0x18]
	0x0345769C ADD X0, X31, 0x18
	0x034576A0 MOV X1, X31
	0x034576A4 BL 0x32C3A80
	0x034576A8 TBZ X0, 0x0, 0x34576E8
	0x034576AC ADD X0, X31, 0x18
	0x034576B0 MOV X1, X31
	0x034576B4 BL 0x32C3B4C
	0x034576B8 MOVN W8, 0x1
	0x034576BC STR W8, [X19]
	0x034576C0 STR X31, [X19 + 0x48]
	0x034576C4 LDR X0, [X25]
	0x034576C8 ADD X19, X19, 0x8
	0x034576CC LDR W8, [X0 + 0xE0]
	0x034576D0 CBNZ W8, 0x34576D8
	0x034576D4 BL 0x1C16DFC
	0x034576D8 MOV X0, X19
	0x034576DC MOV X1, X31
	0x034576E0 BL 0x32C4864
	0x034576E4 B 0x3457724
	0x034576E8 MOVZ W8, 0x1
	0x034576EC STR W8, [X19]
	0x034576F0 LDR X8, [X31 + 0x18]
	0x034576F4 STR X8, [X19 + 0x58]
	0x034576F8 LDR X0, [X25]
	0x034576FC LDR W8, [X0 + 0xE0]
	0x03457700 CBNZ W8, 0x3457708
	0x03457704 BL 0x1C16DFC
	0x03457708 ADRP X8, 0xCD8000
	0x0345770C LDR X8, [X8 + 0xE40]
	0x03457710 ADD X0, X19, 0x8
	0x03457714 LDR X3, [X8]
	0x03457718 ADD X1, X31, 0x18
	0x0345771C MOV X2, X19
	0x03457720 BL 0x2189D90
	0x03457724 LDP X20, X19, [X31 + 0x60]
	0x03457728 LDP X22, X21, [X31 + 0x50]
	0x0345772C LDP X24, X23, [X31 + 0x40]
	0x03457730 LDP X30, X25, [X31 + 0x30]
	0x03457734 ADD X31, X31, 0x70
	0x03457738 RET
	0x0345773C BL 0x1C16F20
	0x03457740 BL 0x1C16F20
	0x03457744 BL 0x1C16F20
	0x03457748 BL 0x1C16F20
	0x0345774C BL 0x1C16F20
	0x03457750 BL 0x1C16F20
	0x03457754 BL 0x1C16F20
	0x03457758 BL 0x1C16F20
	0x0345775C BL 0x1C16F20
	0x03457760 BL 0x1C16F20
	0x03457764 BL 0x1C16F20
	0x03457768 BL 0x1C16F20
	0x0345776C B 0x34577E0
	0x03457770 B 0x34577E0
	0x03457774 B 0x34577E0
	0x03457778 B 0x34577E0
	0x0345777C B 0x34577E0
	0x03457780 B 0x34577E0
	0x03457784 B 0x34577E0
	0x03457788 B 0x34577E0
	0x0345778C B 0x34577E0
	0x03457790 B 0x34577E0
	0x03457794 B 0x34577E0
	0x03457798 B 0x34577E0
	0x0345779C B 0x34577E0
	0x034577A0 B 0x34577E0
	0x034577A4 B 0x34577E0
	0x034577A8 B 0x34577E0
	0x034577AC B 0x34577E0
	0x034577B0 B 0x34577E0
	0x034577B4 B 0x34577E0
	0x034577B8 B 0x34577E0
	0x034577BC B 0x34577E0
	0x034577C0 B 0x34577E0
	0x034577C4 B 0x34577E0
	0x034577C8 B 0x34577E0
	0x034577CC B 0x34577E0
	0x034577D0 B 0x34577E0
	0x034577D4 B 0x34577E0
	0x034577D8 B 0x34577E0
	0x034577DC B 0x34577E0
	0x034577E0 MOV X20, X0
	0x034577E4 CMP W1, 0x1
	0x034577E8 B.NE 0x345787C
	0x034577EC MOV X0, X20
	0x034577F0 BL 0x3EB1AD0
	0x034577F4 MOV X20, X0
	0x034577F8 ADRP X0, 0xC9C000
	0x034577FC LDR X0, [X0 + 0x7D0]
	0x03457800 BL 0x1C16D08
	0x03457804 LDR X8, [X20]
	0x03457808 LDR X1, [X8]
	0x0345780C BL 0x1C17270
	0x03457810 TBZ X0, 0x0, 0x3457854
	0x03457814 LDR X20, [X20]
	0x03457818 BL 0x3EB1AE0
	0x0345781C MOVN W8, 0x1
	0x03457820 STR X31, [X19 + 0x48]
	0x03457824 STR W8, [X19], #0x8
	0x03457828 ADRP X0, 0xC9F000
	0x0345782C LDR X0, [X0 + 0x280]
	0x03457830 BL 0x1C16D08
	0x03457834 LDR W8, [X0 + 0xE0]
	0x03457838 CBNZ W8, 0x3457840
	0x0345783C BL 0x1C16DFC
	0x03457840 MOV X0, X19
	0x03457844 MOV X1, X20
	0x03457848 MOV X2, X31
	0x0345784C BL 0x32C4908
	0x03457850 B 0x3457724
	0x03457854 MOVZ W0, 0x8
	0x03457858 BL 0x3EB1AF0
	0x0345785C LDR X8, [X20]
	0x03457860 STR X8, [X0]
	0x03457864 ADRP X1, 0xA5D000
	0x03457868 ADD X1, X1, 0xE58
	0x0345786C MOV X2, X31
	0x03457870 BL 0x3EB1B00
	0x03457874 MOV X20, X0
	0x03457878 BL 0x3EB1AE0
	0x0345787C MOV X0, X20
	0x03457880 BL 0x1D2C690
	0x03457884 BL 0x1990590
	0x03457888 STR X30, [X31 - 0x30]!
	0x0345788C STP X22, X21, [X31 + 0x10]
	0x03457890 STP X20, X19, [X31 + 0x20]
	0x03457894 ADRP X21, 0xF86000
	0x03457898 ADRP X22, 0xC9F000
	0x0345789C LDRB W8, [X21 + 0x78C]
	0x034578A0 LDR X22, [X22 + 0x280]
	0x034578A4 MOV X19, X1
	0x034578A8 MOV X20, X0
	0x034578AC TBNZ X8, 0x0, 0x34578C4
	0x034578B0 ADRP X0, 0xC9F000
	0x034578B4 LDR X0, [X0 + 0x280]
	0x034578B8 BL 0x1C16CF4
	0x034578BC MOVZ W8, 0x1
	0x034578C0 STRB W8, [X21 + 0x78C]
	0x034578C4 LDR X0, [X22]
	0x034578C8 LDR W8, [X0 + 0xE0]
	0x034578CC CBNZ W8, 0x34578D4
	0x034578D0 BL 0x1C16DFC
	0x034578D4 ADD X0, X20, 0x8
	0x034578D8 MOV X1, X19
	0x034578DC LDP X20, X19, [X31 + 0x20]
	0x034578E0 LDP X22, X21, [X31 + 0x10]
	0x034578E4 MOV X2, X31
	0x034578E8 LDR X30, [X31], #0x30
	0x034578EC B 0x32C477C
	0x034578F0 SUB X31, X31, 0x70
	0x034578F4 STP X30, X25, [X31 + 0x30]
	0x034578F8 STP X24, X23, [X31 + 0x40]
	0x034578FC STP X22, X21, [X31 + 0x50]
	0x03457900 STP X20, X19, [X31 + 0x60]
	0x03457904 ADRP X20, 0xF86000
	0x03457908 LDRB W8, [X20 + 0x78D]
	0x0345790C MOV X19, X0
	0x03457910 TBNZ X8, 0x0, 0x34579C4
	0x03457914 ADRP X0, 0xCD8000
	0x03457918 LDR X0, [X0 + 0xE58]
	0x0345791C BL 0x1C16CF4
	0x03457920 ADRP X0, 0xCD8000
	0x03457924 LDR X0, [X0 + 0xE60]
	0x03457928 BL 0x1C16CF4
	0x0345792C ADRP X0, 0xC9F000
	0x03457930 LDR X0, [X0 + 0x280]
	0x03457934 BL 0x1C16CF4
	0x03457938 ADRP X0, 0xC9E000
	0x0345793C LDR X0, [X0 + 0xA10]
	0x03457940 BL 0x1C16CF4
	0x03457944 ADRP X0, 0xC9D000
	0x03457948 LDR X0, [X0 + 0x9F0]
	0x0345794C BL 0x1C16CF4
	0x03457950 ADRP X0, 0xCA4000
	0x03457954 LDR X0, [X0 + 0x818]
	0x03457958 BL 0x1C16CF4
	0x0345795C ADRP X0, 0xC9D000
	0x03457960 LDR X0, [X0 + 0x818]
	0x03457964 BL 0x1C16CF4
	0x03457968 ADRP X0, 0xCD8000
	0x0345796C LDR X0, [X0 + 0x7C8]
	0x03457970 BL 0x1C16CF4
	0x03457974 ADRP X0, 0xCD8000
	0x03457978 LDR X0, [X0 + 0x7D0]
	0x0345797C BL 0x1C16CF4
	0x03457980 ADRP X0, 0xC9D000
	0x03457984 LDR X0, [X0 + 0x830]
	0x03457988 BL 0x1C16CF4
	0x0345798C ADRP X0, 0xC9D000
	0x03457990 LDR X0, [X0 + 0x838]
	0x03457994 BL 0x1C16CF4
	0x03457998 ADRP X0, 0xC9D000
	0x0345799C LDR X0, [X0 + 0x840]
	0x034579A0 BL 0x1C16CF4
	0x034579A4 ADRP X0, 0xCD8000
	0x034579A8 LDR X0, [X0 + 0xE68]
	0x034579AC BL 0x1C16CF4
	0x034579B0 ADRP X0, 0xCD8000
	0x034579B4 LDR X0, [X0 + 0xE70]
	0x034579B8 BL 0x1C16CF4
	0x034579BC MOVZ W8, 0x1
	0x034579C0 STRB W8, [X20 + 0x78D]
	0x034579C4 STP X31, X31, [X31 + 0x20]
	0x034579C8 STR X31, [X31 + 0x18]
	0x034579CC ADRP X25, 0xC9F000
	0x034579D0 LDR W8, [X19]
	0x034579D4 LDR X20, [X19 + 0x20]
	0x034579D8 LDR X25, [X25 + 0x280]
	0x034579DC CBZ W8, 0x3457A00
	0x034579E0 CMP W8, 0x1
	0x034579E4 B.NE 0x3457A2C
	0x034579E8 LDR X8, [X19 + 0x60]
	0x034579EC MOVN W9, 0x0
	0x034579F0 STR X8, [X31 + 0x18]
	0x034579F4 STR X31, [X19 + 0x60]
	0x034579F8 STR W9, [X19]
	0x034579FC B 0x3457D30
	0x03457A00 LDR X8, [X19 + 0x58]
	0x03457A04 MOVN W9, 0x0
	0x03457A08 STR X8, [X31 + 0x20]
	0x03457A0C STR X31, [X19 + 0x58]
	0x03457A10 STR W9, [X19]
	0x03457A14 ADRP X8, 0xC9D000
	0x03457A18 LDR X8, [X8 + 0x830]
	0x03457A1C ADD X0, X31, 0x20
	0x03457A20 LDR X1, [X8]
	0x03457A24 BL 0x2677474
	0x03457A28 B 0x3457C64
	0x03457A2C ADRP X8, 0xCD8000
	0x03457A30 LDR X8, [X8 + 0xE70]
	0x03457A34 LDR X0, [X8]
	0x03457A38 BL 0x1C16F10
	0x03457A3C MOV X21, X0
	0x03457A40 MOV X1, X31
	0x03457A44 BL 0x3449B04
	0x03457A48 STR X21, [X19 + 0x50]
	0x03457A4C CBZ X21, 0x3457DD0
	0x03457A50 LDR X8, [X19 + 0x20]
	0x03457A54 STR X8, [X21 + 0x10]
	0x03457A58 LDR X8, [X19 + 0x28]
	0x03457A5C STR X8, [X21 + 0x18]
	0x03457A60 LDR X8, [X19 + 0x30]
	0x03457A64 STR X8, [X21 + 0x20]
	0x03457A68 LDR X8, [X19 + 0x38]
	0x03457A6C STR X8, [X21 + 0x28]
	0x03457A70 LDR X8, [X19 + 0x40]
	0x03457A74 STR X8, [X21 + 0x30]
	0x03457A78 CBZ X20, 0x3457DD4
	0x03457A7C LDRB W8, [X20 + 0x10]
	0x03457A80 CBZ W8, 0x3457C68
	0x03457A84 LDR X8, [X19 + 0x50]
	0x03457A88 CBZ X8, 0x3457DD8
	0x03457A8C LDR X21, [X8 + 0x18]
	0x03457A90 CBZ X21, 0x3457DDC
	0x03457A94 ADRP X23, 0xC9D000
	0x03457A98 LDR X8, [X21]
	0x03457A9C LDR X23, [X23 + 0x818]
	0x03457AA0 LDRH W9, [X8 + 0x12E]
	0x03457AA4 LDR X1, [X23]
	0x03457AA8 CBZ X9, 0x3457ACC
	0x03457AAC LDR X10, [X8 + 0xB0]
	0x03457AB0 ADD X10, X10, 0x8
	0x03457AB4 LDUR X11, [X10 - 0x8]
	0x03457AB8 CMP X11, X1
	0x03457ABC B.EQ 0x3457ADC
	0x03457AC0 SUBS X9, X9, 0x1
	0x03457AC4 ADD X10, X10, 0x10
	0x03457AC8 B.NE 0x3457AB4
	0x03457ACC MOVZ W2, 0x7
	0x03457AD0 MOV X0, X21
	0x03457AD4 BL 0x1C5C788
	0x03457AD8 B 0x3457AEC
	0x03457ADC LDR W9, [X10]
	0x03457AE0 ADD W9, W9, 0x7
	0x03457AE4 ADD X8, X8, W9, 0x4, SXTW
	0x03457AE8 ADD X0, X8, 0x138
	0x03457AEC LDP X8, X1, [X0]
	0x03457AF0 MOV X0, X21
	0x03457AF4 BLR X8
	0x03457AF8 MOV X1, X31
	0x03457AFC BL 0x32277A8
	0x03457B00 TBNZ X0, 0x0, 0x3457C64
	0x03457B04 LDR X8, [X19 + 0x50]
	0x03457B08 CBZ X8, 0x3457DE0
	0x03457B0C ADRP X9, 0xC9D000
	0x03457B10 LDR X9, [X9 + 0x9F0]
	0x03457B14 LDR X21, [X8 + 0x18]
	0x03457B18 LDR X0, [X9]
	0x03457B1C LDR W9, [X0 + 0xE0]
	0x03457B20 CBNZ W9, 0x3457B28
	0x03457B24 BL 0x1C16DFC
	0x03457B28 MOV X0, X31
	0x03457B2C BL 0x33616A4
	0x03457B30 ADRP X22, 0xC9E000
	0x03457B34 LDR X22, [X22 + 0xA10]
	0x03457B38 MOV X8, X0
	0x03457B3C STR X8, [X31 + 0x28]
	0x03457B40 LDR X0, [X22]
	0x03457B44 LDR W8, [X0 + 0xE0]
	0x03457B48 CBNZ W8, 0x3457B54
	0x03457B4C BL 0x1C16DFC
	0x03457B50 LDR X0, [X22]
	0x03457B54 LDR X8, [X0 + 0xB8]
	0x03457B58 LDR X1, [X8]
	0x03457B5C ADD X0, X31, 0x28
	0x03457B60 MOV X2, X31
	0x03457B64 BL 0x335FC68
	0x03457B68 CBZ X21, 0x3457DE4
	0x03457B6C LDR X8, [X21]
	0x03457B70 LDR X1, [X23]
	0x03457B74 MOV X22, X0
	0x03457B78 LDRH W9, [X8 + 0x12E]
	0x03457B7C CBZ X9, 0x3457BA0
	0x03457B80 LDR X10, [X8 + 0xB0]
	0x03457B84 ADD X10, X10, 0x8
	0x03457B88 LDUR X11, [X10 - 0x8]
	0x03457B8C CMP X11, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF87000
	011 Move W8, [X20+1927]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD9000
	018 Move X0, [X0+3576]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD9000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA0000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9F000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9E000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA5000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9E000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD9000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD9000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9E000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9E000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9E000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD9000
	054 Move X0, [X0+3592]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD9000
	057 Move X0, [X0+3600]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1927], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA0000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xC9E000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD9000
	091 Move X8, [X8+3600]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass68_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {361}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 NotImplemented "Instruction STRH not yet implemented."
	108 Move X8, [X19+80]
	109 Compare X8, 0
	110 JumpIfEqual {362}
	111 Move X9, [X19+64]
	112 Move [X8+48], X9
	113 Compare X20, 0
	114 JumpIfEqual {363}
	115 Move W8, [X20+16]
	116 Compare W8, 0
	117 JumpIfEqual {255}
	118 Move X8, [X19+80]
	119 Compare X8, 0
	120 JumpIfEqual {364}
	121 Move X21, [X8+24]
	122 Compare X21, 0
	123 JumpIfEqual {365}
	124 Move X23, 0xC9E000
	125 Move X8, [X21]
	126 Move X23, [X23+2072]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move X1, [X23]
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 7
	138 Move X0, X21
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 7
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X21
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X1, X31
	149 Call String.IsNullOrEmpty, X0
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {253}
	154 Move X8, [X19+80]
	155 Compare X8, 0
	156 JumpIfEqual {366}
	157 Move X9, 0xC9E000
	158 Move X9, [X9+2544]
	159 Move X21, [X8+24]
	160 Move X0, [X9]
	161 Move W9, [X0+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X31
	166 Call DateTime.get_UtcNow
	167 Move X22, 0xC9F000
	168 Move X22, [X22+2576]
	169 Move X8, X0
	170 Move [X31+40], X8
	171 Move X0, [X22]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X22]
	177 Move X8, [X0+184]
	178 Move X1, [X8]
	179 Add X0, X31, 40
	180 Move X2, X31
	181 Call DateTime.Add, X0, X1
	182 Compare X21, 0
	183 JumpIfEqual {367}
	184 Move X8, [X21]
	185 Move X1, [X23]
	186 Move X22, X0
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 11
	197 Move X0, X21
	198 Call 0x1C5D788
	199 Move W9, [X10]
	200 Add W9, W9, 11
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X2, [X0+8]
	205 Move X0, X21
	206 Move X1, X22
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {253}
	212 Move X8, [X19+80]
	213 Compare X8, 0
	214 JumpIfEqual {368}
	215 Move X1, [X8+24]
	216 Move X3, [X19+72]
	217 Move X4, [X8+48]
	218 Move X0, X20
	219 Move X2, X31
	220 Move X5, X31
	221 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	222 Compare X0, 0
	223 JumpIfEqual {369}
	224 Move X8, 0xC9E000
	225 Move X8, [X8+2112]
	226 Move X1, [X8]
	227 Call Task`1<Object>.GetAwaiter, X0
	228 Move X8, 0xC9E000
	229 Move X8, [X8+2104]
	230 Move [X31+32], X0
	231 Move X1, [X8]
	232 Add X0, X31, 32
	233 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {85}
	238 Move [X19], W31
	239 Move X8, [X31+32]
	240 Move [X19+88], X8
	241 Move X0, [X25]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X8, 0xCD9000
	247 Move X8, [X8+3576]
	248 Add X0, X19, 8
	249 Move X3, [X8]
	250 Add X1, X31, 32
	251 Move X2, X19
	252 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	253 Compare X20, 0
	254 JumpIfEqual {360}
	255 Move X8, 0xCA5000
	256 Move X8, [X8+2072]
	257 Move X21, [X20+88]
	258 Move X23, [X19+80]
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X8, 0xCD9000
	262 Move X8, [X8+3592]
	263 Move X22, X0
	264 Move X2, [X8]
	265 Move X1, X23
	266 Move X3, X31
	267 Call Func`1<Object>..ctor, X0, X1, X2
	268 Move X8, [X19+80]
	269 Compare X8, 0
	270 JumpIfEqual {357}
	271 Move X9, 0xCD9000
	272 Move X23, [X19+72]
	273 Move X9, [X9+1992]
	274 Compare X23, 0
	275 JumpIfNotEqual {277}
	276 Move X23, [X20+24]
	277 Move X20, [X8+24]
	278 Move X1, [X8+48]
	279 Move X2, [X9]
	280 Move [X31+8], X31
	281 Move [X31+16], X31
	282 Add X0, X31, 8
	283 Call Nullable`1<CancellationToken>..ctor, X0, X1
	284 Move X8, 0xCD9000
	285 Move X8, [X8+2000]
	286 Move X0, [X8]
	287 Call 0x1C17F10
	288 Move X3, [X31+8]
	289 Move X4, [X31+16]
	290 Move X24, X0
	291 Move X1, X20
	292 Move X2, X23
	293 Move X5, X31
	294 Call RetryHistory..ctor, X0, X1, X2, X3
	295 Compare X21, 0
	296 JumpIfEqual {358}
	297 Move X0, X21
	298 Move X1, X22
	299 Move X2, X24
	300 Move X3, X31
	301 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	302 Compare X0, 0
	303 JumpIfEqual {359}
	304 Move X1, X31
	305 Call Task.GetAwaiter, X0
	306 Move [X31+24], X0
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.get_IsCompleted, X0
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {331}
	314 Add X0, X31, 24
	315 Move X1, X31
	316 Call TaskAwaiter.GetResult, X0
	317 Move TEMP, 1
	318 Not TEMP
	319 Move W8, TEMP
	320 Move [X19], W8
	321 Move [X19+80], X31
	322 Move X0, [X25]
	323 Add X19, X19, 8
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X0, X19
	329 Move X1, X31
	330 Call AsyncTaskMethodBuilder.SetResult, X0
	331 Move W8, 1
	332 Move [X19], W8
	333 Move X8, [X31+24]
	334 Move [X19+96], X8
	335 Move X0, [X25]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X8, 0xCD9000
	341 Move X8, [X8+3584]
	342 Add X0, X19, 8
	343 Move X3, [X8]
	344 Add X1, X31, 24
	345 Move X2, X19
	346 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	347 Move X20, [X31+96]
	348 Move X19, [X31+104]
	349 Move X22, [X31+80]
	350 Move X21, [X31+88]
	351 Move X24, [X31+64]
	352 Move X23, [X31+72]
	353 Move X30, [X31+48]
	354 Move X25, [X31+56]
	355 Add X31, X31, 112
	356 Return 
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Move X20, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X0, X20
	373 Call 0x3EB2AD0
	374 Move X20, X0
	375 Move X0, 0xC9D000
	376 Move X0, [X0+2000]
	377 Call 0x1C17D08
	378 Move X8, [X20]
	379 Move X1, [X8]
	380 Call 0x1C18270
	381 Move TEMP, X0
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfNotEqual {403}
	385 Move X20, [X20]
	386 Call 0x3EB2AE0
	387 Move TEMP, 1
	388 Not TEMP
	389 Move W8, TEMP
	390 Move [X19+80], X31
	391 Move [X19+8], W8
	392 Move X0, 0xCA0000
	393 Move X0, [X0+640]
	394 Call 0x1C17D08
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1C17DFC
	399 Move X0, X19
	400 Move X1, X20
	401 Move X2, X31
	402 Call AsyncTaskMethodBuilder.SetException, X0, X1
	403 Move W0, 8
	404 Call 0x3EB2AF0
	405 Move X8, [X20]
	406 Move [X0], X8
	407 Move X1, 0xA5E000
	408 Add X1, X1, 3672
	409 Move X2, X31
	410 Call 0x3EB2B00
	411 Move X20, X0
	412 Call 0x3EB2AE0
	413 Move X0, X20
	414 Call 0x1D2D690
	415 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03457B90 B.EQ 0x3457BB0
	0x03457B94 SUBS X9, X9, 0x1
	0x03457B98 ADD X10, X10, 0x10
	0x03457B9C B.NE 0x3457B88
	0x03457BA0 MOVZ W2, 0xB
	0x03457BA4 MOV X0, X21
	0x03457BA8 BL 0x1C5C788
	0x03457BAC B 0x3457BC0
	0x03457BB0 LDR W9, [X10]
	0x03457BB4 ADD W9, W9, 0xB
	0x03457BB8 ADD X8, X8, W9, 0x4, SXTW
	0x03457BBC ADD X0, X8, 0x138
	0x03457BC0 LDP X8, X2, [X0]
	0x03457BC4 MOV X0, X21
	0x03457BC8 MOV X1, X22
	0x03457BCC BLR X8
	0x03457BD0 TBZ X0, 0x0, 0x3457C64
	0x03457BD4 LDR X8, [X19 + 0x50]
	0x03457BD8 CBZ X8, 0x3457DE8
	0x03457BDC LDR X1, [X8 + 0x18]
	0x03457BE0 LDR X3, [X19 + 0x48]
	0x03457BE4 LDR X4, [X8 + 0x30]
	0x03457BE8 MOV X0, X20
	0x03457BEC MOV X2, X31
	0x03457BF0 MOV X5, X31
	0x03457BF4 BL 0x34440A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF87000
	007 Move X22, 0xCA0000
	008 Move W8, [X21+1928]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA0000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1928], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

