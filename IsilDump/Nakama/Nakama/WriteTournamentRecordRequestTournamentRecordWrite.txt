Type: Nakama.WriteTournamentRecordRequestTournamentRecordWrite

Method: System.String get_Metadata()

Disassembly:
	0x03401EAC B 0x3401EB8
	0x03401EB0 B 0x3401EB8

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Metadata(System.String value)

Disassembly:
	0x03401EB4 B 0x3401EB8
	0x03401EB8 CMP W1, 0x1

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: Nakama.ApiOperator get_Operator()

Disassembly:
	0x03401EBC B.NE 0x3401ED0
	0x03401EC0 BL 0x3EB1AD0

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: Nakama.ApiOperator get__operator()

Disassembly:
	0x03401EC4 LDR X22, [X0]
	0x03401EC8 BL 0x3EB1AE0

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set__operator(Nakama.ApiOperator value)

Disassembly:
	0x03401ECC B 0x3401DAC
	0x03401ED0 MOV X19, X0

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.String get_Score()

Disassembly:
	0x03401ED4 MOV X22, X31
	0x03401ED8 B 0x3401EE0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Score(System.String value)

Disassembly:
	0x03401EDC MOV X19, X0
	0x03401EE0 CBZ X20, 0x3401F44

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Subscore()

Disassembly:
	0x03401EE4 LDR X8, [X20]
	0x03401EE8 ADRP X10, 0xCF2000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Subscore(System.String value)

Disassembly:
	0x03401EEC LDRH W9, [X8 + 0x12E]
	0x03401EF0 LDR X10, [X10 + 0xE00]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03401EF4 LDR X1, [X10]
	0x03401EF8 CBZ X9, 0x3401F1C
	0x03401EFC LDR X10, [X8 + 0xB0]
	0x03401F00 ADD X10, X10, 0x8
	0x03401F04 LDUR X11, [X10 - 0x8]
	0x03401F08 CMP X11, X1
	0x03401F0C B.EQ 0x3401F2C
	0x03401F10 SUBS X9, X9, 0x1
	0x03401F14 ADD X10, X10, 0x10
	0x03401F18 B.NE 0x3401F04
	0x03401F1C MOV X0, X20
	0x03401F20 MOV W2, W31
	0x03401F24 BL 0x1C5C788
	0x03401F28 B 0x3401F38
	0x03401F2C LDRSW X9, [X10]
	0x03401F30 ADD X8, X8, X9, 0x4, LSL
	0x03401F34 ADD X0, X8, 0x138
	0x03401F38 LDP X8, X1, [X0]
	0x03401F3C MOV X0, X20
	0x03401F40 BLR X8
	0x03401F44 CBNZ X22, 0x3401F50
	0x03401F48 MOV X0, X19
	0x03401F4C BL 0x1D2C690
	0x03401F50 MOV X0, X22
	0x03401F54 BL 0x1C16F18
	0x03401F58 BL 0x1990590
	0x03401F5C MOV X1, X31
	0x03401F60 B 0x33BDD8C
	0x03401F64 LDR X0, [X0 + 0x10]
	0x03401F68 RET
	0x03401F6C STR X1, [X0 + 0x10]
	0x03401F70 RET
	0x03401F74 STR X30, [X31 - 0x20]!
	0x03401F78 STP X20, X19, [X31 + 0x10]
	0x03401F7C ADRP X20, 0xFDC000
	0x03401F80 LDRB W8, [X20 + 0x513]
	0x03401F84 MOV X19, X0
	0x03401F88 TBNZ X8, 0x0, 0x3401FAC
	0x03401F8C ADRP X0, 0xCF3000
	0x03401F90 LDR X0, [X0 + 0x6C0]
	0x03401F94 BL 0x1C16CF4
	0x03401F98 ADRP X0, 0xCF3000
	0x03401F9C LDR X0, [X0 + 0x6D0]
	0x03401FA0 BL 0x1C16CF4
	0x03401FA4 MOVZ W8, 0x1
	0x03401FA8 STRB W8, [X20 + 0x513]
	0x03401FAC LDR X19, [X19 + 0x18]
	0x03401FB0 CBNZ X19, 0x3401FD8
	0x03401FB4 ADRP X8, 0xCF3000
	0x03401FB8 LDR X8, [X8 + 0x6D0]
	0x03401FBC LDR X0, [X8]
	0x03401FC0 BL 0x1C16F10
	0x03401FC4 ADRP X8, 0xCF3000
	0x03401FC8 LDR X8, [X8 + 0x6C0]
	0x03401FCC MOV X19, X0
	0x03401FD0 LDR X1, [X8]
	0x03401FD4 BL 0x2AA4804
	0x03401FD8 MOV X0, X19
	0x03401FDC LDP X20, X19, [X31 + 0x10]
	0x03401FE0 LDR X30, [X31], #0x20
	0x03401FE4 RET
	0x03401FE8 LDR X0, [X0 + 0x18]
	0x03401FEC RET
	0x03401FF0 STR X1, [X0 + 0x18]
	0x03401FF4 RET
	0x03401FF8 SUB X31, X31, 0x70
	0x03401FFC STP X29, X30, [X31 + 0x10]
	0x03402000 STP X28, X27, [X31 + 0x20]
	0x03402004 STP X26, X25, [X31 + 0x30]
	0x03402008 STP X24, X23, [X31 + 0x40]
	0x0340200C STP X22, X21, [X31 + 0x50]
	0x03402010 STP X20, X19, [X31 + 0x60]
	0x03402014 ADRP X23, 0xFDB000
	0x03402018 ADRP X19, 0xCF1000
	0x0340201C ADRP X21, 0xD2B000
	0x03402020 ADRP X22, 0xCF1000
	0x03402024 LDRB W8, [X23 + 0x514]
	0x03402028 LDR X19, [X19 + 0x988]
	0x0340202C LDR X21, [X21 + 0xD88]
	0x03402030 LDR X22, [X22 + 0x838]
	0x03402034 MOV X20, X0
	0x03402038 TBNZ X8, 0x0, 0x34020F8
	0x0340203C ADRP X0, 0xCF1000
	0x03402040 LDR X0, [X0 + 0xE00]
	0x03402044 BL 0x1C16CF4
	0x03402048 ADRP X0, 0xCF4000
	0x0340204C LDR X0, [X0 + 0x190]
	0x03402050 BL 0x1C16CF4
	0x03402054 ADRP X0, 0xCF4000
	0x03402058 LDR X0, [X0 + 0x198]
	0x0340205C BL 0x1C16CF4
	0x03402060 ADRP X0, 0xCF1000
	0x03402064 LDR X0, [X0 + 0xE18]
	0x03402068 BL 0x1C16CF4
	0x0340206C ADRP X0, 0xCF4000
	0x03402070 LDR X0, [X0 + 0x1B0]
	0x03402074 BL 0x1C16CF4
	0x03402078 ADRP X0, 0xCF4000
	0x0340207C LDR X0, [X0 + 0x1B8]
	0x03402080 BL 0x1C16CF4
	0x03402084 ADRP X0, 0xCF1000
	0x03402088 LDR X0, [X0 + 0xAC8]
	0x0340208C BL 0x1C16CF4
	0x03402090 ADRP X0, 0xD1E000
	0x03402094 LDR X0, [X0 + 0x360]
	0x03402098 BL 0x1C16CF4
	0x0340209C ADRP X0, 0xD1E000
	0x034020A0 LDR X0, [X0 + 0xFB8]
	0x034020A4 BL 0x1C16CF4
	0x034020A8 ADRP X0, 0xD2B000
	0x034020AC LDR X0, [X0 + 0xD88]
	0x034020B0 BL 0x1C16CF4
	0x034020B4 ADRP X0, 0xCFC000
	0x034020B8 LDR X0, [X0 + 0x6D8]
	0x034020BC BL 0x1C16CF4
	0x034020C0 ADRP X0, 0xD2B000
	0x034020C4 LDR X0, [X0 + 0xD80]
	0x034020C8 BL 0x1C16CF4
	0x034020CC ADRP X0, 0xCF1000
	0x034020D0 LDR X0, [X0 + 0x838]
	0x034020D4 BL 0x1C16CF4
	0x034020D8 ADRP X0, 0xCF1000
	0x034020DC LDR X0, [X0 + 0x988]
	0x034020E0 BL 0x1C16CF4
	0x034020E4 ADRP X0, 0xCF1000
	0x034020E8 LDR X0, [X0 + 0x848]
	0x034020EC BL 0x1C16CF4
	0x034020F0 MOVZ W8, 0x1
	0x034020F4 STRB W8, [X23 + 0x514]
	0x034020F8 LDR X0, [X19]
	0x034020FC LDR X2, [X20 + 0x10]
	0x03402100 LDR X1, [X21]
	0x03402104 LDR X3, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xFDD000
	009 Move X24, 0xCF3000
	010 Move X21, 0xD2D000
	011 Move X22, 0xCF3000
	012 Move X20, 0xCF3000
	013 Move W8, [X23+1292]
	014 Move X24, [X24+2440]
	015 Move X21, [X21+3328]
	016 Move X22, [X22+2104]
	017 Move X20, [X20+2512]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xD2D000
	024 Move X0, [X0+3336]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF3000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xD2D000
	030 Move X0, [X0+3344]
	031 Call 0x1C17CF4
	032 Move X0, 0xD2D000
	033 Move X0, [X0+3352]
	034 Call 0x1C17CF4
	035 Move X0, 0xCF3000
	036 Move X0, [X0+2104]
	037 Call 0x1C17CF4
	038 Move X0, 0xD2D000
	039 Move X0, [X0+3328]
	040 Call 0x1C17CF4
	041 Move X0, 0xD2D000
	042 Move X0, [X0+3360]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF3000
	045 Move X0, [X0+2440]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X23+1292], W8
	049 Move X0, [X24]
	050 Move X2, [X19+16]
	051 Move X1, [X21]
	052 Move X3, [X22]
	053 Move X4, X31
	054 Call String.Concat, X0, X1, X2, X3
	055 Move X8, [X20]
	056 Move X21, X0
	057 Move W1, 4
	058 Move X0, X8
	059 Call 0x1C17D6C
	060 Compare X0, 0
	061 JumpIfEqual {149}
	062 Move X20, X0
	063 Compare X21, 0
	064 JumpIfEqual {71}
	065 Move X8, [X20]
	066 Move X0, X21
	067 Move X1, [X8+64]
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {146}
	071 Move W8, [X20+24]
	072 Compare W8, 0
	073 JumpIfEqual {145}
	074 Move X23, 0xD2D000
	075 Move X23, [X23+3360]
	076 Move [X20+32], X21
	077 Move X0, [X23]
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {146}
	085 Move W8, [X20+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X23]
	088 Move X9, 0xD2C000
	089 Move X9, [X9+3336]
	090 Add X1, X31, 12
	091 Move [X20+40], X8
	092 Move W8, [X19+24]
	093 Move X0, [X9]
	094 Move [X31+12], W8
	095 Call 0x1C17E04
	096 Move X21, X0
	097 Compare X0, 0
	098 JumpIfEqual {105}
	099 Move X8, [X20]
	100 Move X0, X21
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {146}
	105 Move W8, [X20+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X20+48], X21
	108 Move X0, [X22]
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {146}
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, [X22]
	119 Move X21, 0xD2C000
	120 Move X23, 0xD2C000
	121 Move X21, [X21+3344]
	122 Move X23, [X23+3352]
	123 Move X0, X20
	124 Move X1, X31
	125 Move [X20+56], X8
	126 Call String.Concat, X0
	127 Move X2, [X19+32]
	128 Move X1, [X21]
	129 Move X3, [X22]
	130 Move X4, X31
	131 Call String.Concat, X0, X1, X2, X3
	132 Move X2, [X19+40]
	133 Move X1, [X23]
	134 Move X3, [X22]
	135 Move X4, X31
	136 Call String.Concat, X0, X1, X2, X3
	137 Move X20, [X31+48]
	138 Move X19, [X31+56]
	139 Move X22, [X31+32]
	140 Move X21, [X31+40]
	141 Move X24, [X31+16]
	142 Move X23, [X31+24]
	143 Move X30, [X31+64]
	144 Return X0
	145 Call 0x1C17F28
	146 Call 0x1C17F44
	147 Move X1, X31
	148 Call 0x1C17DEC
	149 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03402108 MOV X4, X31
	0x0340210C BL 0x32277C4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

