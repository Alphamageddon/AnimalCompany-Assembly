Type: Nakama.Client/<>c__DisplayClass103_0

Method: System.Void .ctor()

Disassembly:
	0x03444C9C MOVZ W2, 0x88
	0x03444CA0 MOV W1, W31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> <RpcAsync>b__0()

Disassembly:
	0x03446BE0 CBZ X9, 0x3446C04
	0x03446BE4 LDR X10, [X8 + 0xB0]
	0x03446BE8 ADD X10, X10, 0x8
	0x03446BEC LDUR X11, [X10 - 0x8]
	0x03446BF0 CMP X11, X1
	0x03446BF4 B.EQ 0x3446C14
	0x03446BF8 SUBS X9, X9, 0x1
	0x03446BFC ADD X10, X10, 0x10
	0x03446C00 B.NE 0x3446BEC
	0x03446C04 MOV X0, X21
	0x03446C08 MOV W2, W31
	0x03446C0C BL 0x1C5C788
	0x03446C10 B 0x3446C20
	0x03446C14 LDRSW X9, [X10]
	0x03446C18 ADD X8, X8, X9, 0x4, LSL
	0x03446C1C ADD X0, X8, 0x138
	0x03446C20 LDP X8, X1, [X0]
	0x03446C24 MOV X0, X21
	0x03446C28 BLR X8
	0x03446C2C LDR X8, [X22]
	0x03446C30 LDR X21, [X19 + 0x20]
	0x03446C34 MOV X22, X0
	0x03446C38 MOV X0, X8
	0x03446C3C BL 0x1C16F10
	0x03446C40 MOV X1, X31
	0x03446C44 MOV X23, X0
	0x03446C48 BL 0x34006F0
	0x03446C4C CBZ X23, 0x3446CC0
	0x03446C50 LDR X8, [X19 + 0x28]
	0x03446C54 ADRP X9, 0xCE9000
	0x03446C58 ADD X0, X31, 0x0
	0x03446C5C STR X8, [X23 + 0x28]
	0x03446C60 LDRB W8, [X19 + 0x30]
	0x03446C64 STRB W8, [X23 + 0x30]
	0x03446C68 LDUR V0, [X19 + 0x38]
	0x03446C6C STR V0, [X23 + 0x1]
	0x03446C70 LDR X8, [X19 + 0x48]
	0x03446C74 LDR X9, [X9 + 0x7C8]
	0x03446C78 STR X8, [X23 + 0x20]
	0x03446C7C LDR X1, [X19 + 0x50]
	0x03446C80 LDR X2, [X9]
	0x03446C84 STP X31, X31, [X31]
	0x03446C88 BL 0x242E368
	0x03446C8C CBZ X20, 0x3446CC0
	0x03446C90 LDP X4, X5, [X31]
	0x03446C94 MOV X0, X20
	0x03446C98 MOV X1, X22
	0x03446C9C MOV X2, X21
	0x03446CA0 MOV X3, X23
	0x03446CA4 MOV X6, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X19, 0xF98000
	009 Move W8, [X19+1796]
	010 Move X23, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xCEA000
	016 Move X0, [X0+1992]
	017 Call 0x1C17CF4
	018 Move X0, 0xCB0000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1796], W8
	023 Move X8, [X23+16]
	024 Compare X8, 0
	025 JumpIfEqual {66}
	026 Move X9, 0xCB0000
	027 Move X9, [X9+632]
	028 Move X10, 0xCEA000
	029 Add X0, X31, 32
	030 Move X9, [X9]
	031 Move X10, [X10+1992]
	032 Move X22, [X8+72]
	033 Move X21, [X23+40]
	034 Move X1, [X23+48]
	035 Move X8, [X9+184]
	036 Move X2, [X10]
	037 Move X19, [X23+24]
	038 Move X20, [X23+32]
	039 Move X23, [X8]
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Call Nullable`1<CancellationToken>..ctor, X0, X1
	043 Compare X22, 0
	044 JumpIfEqual {66}
	045 Move X8, [X31+32]
	046 Move X9, [X31+40]
	047 Move X0, X22
	048 Move X1, X31
	049 Move X2, X23
	050 Move X3, X23
	051 Move X4, X19
	052 Move X5, X20
	053 Move X6, X21
	054 Move [X31+8], X9
	055 Move [X31+16], X31
	056 Move [X31], X8
	057 Call ApiClient.RpcFuncAsync, X0, X1, X2, X3, X4, X5, X6, X7
	058 Move X20, [X31+80]
	059 Move X19, [X31+88]
	060 Move X22, [X31+64]
	061 Move X21, [X31+72]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Add X31, X31, 96
	065 Return X0
	066 Call 0x1C17F20

