Type: Nakama.Client/<ValidatePurchaseGoogleAsync>d__121

Method: System.Void MoveNext()

Disassembly:
	0x0346E744 LDR X23, [X23 + 0x818]
	0x0346E748 LDRH W9, [X8 + 0x12E]
	0x0346E74C LDR X1, [X23]
	0x0346E750 CBZ X9, 0x346E774
	0x0346E754 LDR X10, [X8 + 0xB0]
	0x0346E758 ADD X10, X10, 0x8
	0x0346E75C LDUR X11, [X10 - 0x8]
	0x0346E760 CMP X11, X1
	0x0346E764 B.EQ 0x346E784
	0x0346E768 SUBS X9, X9, 0x1
	0x0346E76C ADD X10, X10, 0x10
	0x0346E770 B.NE 0x346E75C
	0x0346E774 MOVZ W2, 0x7
	0x0346E778 MOV X0, X21
	0x0346E77C BL 0x1C5C788
	0x0346E780 B 0x346E794
	0x0346E784 LDR W9, [X10]
	0x0346E788 ADD W9, W9, 0x7
	0x0346E78C ADD X8, X8, W9, 0x4, SXTW
	0x0346E790 ADD X0, X8, 0x138
	0x0346E794 LDP X8, X1, [X0]
	0x0346E798 MOV X0, X21
	0x0346E79C BLR X8
	0x0346E7A0 MOV X1, X31
	0x0346E7A4 BL 0x32277A8
	0x0346E7A8 TBNZ X0, 0x0, 0x346E90C
	0x0346E7AC LDR X8, [X19 + 0x50]
	0x0346E7B0 CBZ X8, 0x346EAB4
	0x0346E7B4 ADRP X9, 0xC86000
	0x0346E7B8 LDR X9, [X9 + 0x9F0]
	0x0346E7BC LDR X21, [X8 + 0x18]
	0x0346E7C0 LDR X0, [X9]
	0x0346E7C4 LDR W9, [X0 + 0xE0]
	0x0346E7C8 CBNZ W9, 0x346E7D0
	0x0346E7CC BL 0x1C16DFC
	0x0346E7D0 MOV X0, X31
	0x0346E7D4 BL 0x33616A4
	0x0346E7D8 ADRP X22, 0xC87000
	0x0346E7DC LDR X22, [X22 + 0xA10]
	0x0346E7E0 MOV X8, X0
	0x0346E7E4 STR X8, [X31 + 0x28]
	0x0346E7E8 LDR X0, [X22]
	0x0346E7EC LDR W8, [X0 + 0xE0]
	0x0346E7F0 CBNZ W8, 0x346E7FC
	0x0346E7F4 BL 0x1C16DFC
	0x0346E7F8 LDR X0, [X22]
	0x0346E7FC LDR X8, [X0 + 0xB8]
	0x0346E800 LDR X1, [X8]
	0x0346E804 ADD X0, X31, 0x28
	0x0346E808 MOV X2, X31
	0x0346E80C BL 0x335FC68
	0x0346E810 CBZ X21, 0x346EAB8
	0x0346E814 LDR X8, [X21]
	0x0346E818 LDR X1, [X23]
	0x0346E81C MOV X22, X0
	0x0346E820 LDRH W9, [X8 + 0x12E]
	0x0346E824 CBZ X9, 0x346E848
	0x0346E828 LDR X10, [X8 + 0xB0]
	0x0346E82C ADD X10, X10, 0x8
	0x0346E830 LDUR X11, [X10 - 0x8]
	0x0346E834 CMP X11, X1
	0x0346E838 B.EQ 0x346E858
	0x0346E83C SUBS X9, X9, 0x1
	0x0346E840 ADD X10, X10, 0x10
	0x0346E844 B.NE 0x346E830
	0x0346E848 MOVZ W2, 0xB
	0x0346E84C MOV X0, X21
	0x0346E850 BL 0x1C5C788
	0x0346E854 B 0x346E868
	0x0346E858 LDR W9, [X10]
	0x0346E85C ADD W9, W9, 0xB
	0x0346E860 ADD X8, X8, W9, 0x4, SXTW
	0x0346E864 ADD X0, X8, 0x138
	0x0346E868 LDP X8, X2, [X0]
	0x0346E86C MOV X0, X21
	0x0346E870 MOV X1, X22
	0x0346E874 BLR X8
	0x0346E878 TBZ X0, 0x0, 0x346E90C
	0x0346E87C LDR X8, [X19 + 0x50]
	0x0346E880 CBZ X8, 0x346EABC
	0x0346E884 LDR X1, [X8 + 0x18]
	0x0346E888 LDR X3, [X19 + 0x48]
	0x0346E88C LDR X4, [X8 + 0x30]
	0x0346E890 MOV X0, X20
	0x0346E894 MOV X2, X31
	0x0346E898 MOV X5, X31
	0x0346E89C BL 0x34440A8
	0x0346E8A0 CBZ X0, 0x346EAC0
	0x0346E8A4 ADRP X8, 0xC86000
	0x0346E8A8 LDR X8, [X8 + 0x840]
	0x0346E8AC LDR X1, [X8]
	0x0346E8B0 BL 0x269F5D0
	0x0346E8B4 ADRP X8, 0xC86000
	0x0346E8B8 LDR X8, [X8 + 0x838]
	0x0346E8BC STR X0, [X31 + 0x20]
	0x0346E8C0 LDR X1, [X8]
	0x0346E8C4 ADD X0, X31, 0x20
	0x0346E8C8 BL 0x2677430
	0x0346E8CC TBNZ X0, 0x0, 0x346E6BC
	0x0346E8D0 STR W31, [X19]
	0x0346E8D4 LDR X8, [X31 + 0x20]
	0x0346E8D8 STR X8, [X19 + 0x58]
	0x0346E8DC LDR X0, [X25]
	0x0346E8E0 LDR W8, [X0 + 0xE0]
	0x0346E8E4 CBNZ W8, 0x346E8EC
	0x0346E8E8 BL 0x1C16DFC
	0x0346E8EC ADRP X8, 0xCC2000
	0x0346E8F0 LDR X8, [X8 + 0x688]
	0x0346E8F4 ADD X0, X19, 0x8
	0x0346E8F8 LDR X3, [X8]
	0x0346E8FC ADD X1, X31, 0x20
	0x0346E900 MOV X2, X19
	0x0346E904 BL 0x1FBE204
	0x0346E908 B 0x346EA7C
	0x0346E90C CBZ X20, 0x346EAA0
	0x0346E910 ADRP X8, 0xCC2000
	0x0346E914 LDR X8, [X8 + 0x698]
	0x0346E918 LDR X21, [X20 + 0x58]
	0x0346E91C LDR X23, [X19 + 0x50]
	0x0346E920 LDR X0, [X8]
	0x0346E924 BL 0x1C16F10
	0x0346E928 ADRP X8, 0xCC2000
	0x0346E92C LDR X8, [X8 + 0x6C0]
	0x0346E930 MOV X22, X0
	0x0346E934 LDR X2, [X8]
	0x0346E938 MOV X1, X23
	0x0346E93C MOV X3, X31
	0x0346E940 BL 0x2D27AA8
	0x0346E944 LDR X8, [X19 + 0x50]
	0x0346E948 CBZ X8, 0x346EA94
	0x0346E94C ADRP X9, 0xCC1000
	0x0346E950 LDR X23, [X19 + 0x48]
	0x0346E954 LDR X9, [X9 + 0x7C8]
	0x0346E958 CBNZ X23, 0x346E960
	0x0346E95C LDR X23, [X20 + 0x18]
	0x0346E960 LDR X20, [X8 + 0x18]
	0x0346E964 LDR X1, [X8 + 0x30]
	0x0346E968 LDR X2, [X9]
	0x0346E96C STP X31, X31, [X31 + 0x8]
	0x0346E970 ADD X0, X31, 0x8
	0x0346E974 BL 0x242E368
	0x0346E978 ADRP X8, 0xCC1000
	0x0346E97C LDR X8, [X8 + 0x7D0]
	0x0346E980 LDR X0, [X8]
	0x0346E984 BL 0x1C16F10
	0x0346E988 LDP X3, X4, [X31 + 0x8]
	0x0346E98C MOV X24, X0
	0x0346E990 MOV X1, X20
	0x0346E994 MOV X2, X23
	0x0346E998 BL 0x3465404
	0x0346E99C CBZ X21, 0x346EA98
	0x0346E9A0 ADRP X8, 0xCC2000
	0x0346E9A4 LDR X8, [X8 + 0x6A0]
	0x0346E9A8 LDR X3, [X8]
	0x0346E9AC MOV X0, X21
	0x0346E9B0 MOV X1, X22
	0x0346E9B4 MOV X2, X24
	0x0346E9B8 BL 0x2243230
	0x0346E9BC CBZ X0, 0x346EA9C
	0x0346E9C0 ADRP X8, 0xCC2000
	0x0346E9C4 LDR X8, [X8 + 0x6B8]
	0x0346E9C8 LDR X1, [X8]
	0x0346E9CC BL 0x269F5D0
	0x0346E9D0 ADRP X8, 0xCC2000
	0x0346E9D4 LDR X8, [X8 + 0x6B0]
	0x0346E9D8 STR X0, [X31 + 0x18]
	0x0346E9DC LDR X1, [X8]
	0x0346E9E0 ADD X0, X31, 0x18
	0x0346E9E4 BL 0x2677430
	0x0346E9E8 TBZ X0, 0x0, 0x346EA40
	0x0346E9EC ADRP X8, 0xCC2000
	0x0346E9F0 LDR X8, [X8 + 0x6A8]
	0x0346E9F4 ADD X0, X31, 0x18
	0x0346E9F8 LDR X1, [X8]
	0x0346E9FC BL 0x2677474
	0x0346EA00 MOVN W8, 0x1
	0x0346EA04 STR W8, [X19]
	0x0346EA08 STR X31, [X19 + 0x50]
	0x0346EA0C MOV X20, X0
	0x0346EA10 LDR X0, [X25]
	0x0346EA14 ADRP X21, 0xCC1000
	0x0346EA18 ADD X19, X19, 0x8
	0x0346EA1C LDR W8, [X0 + 0xE0]
	0x0346EA20 LDR X21, [X21 + 0x4D8]
	0x0346EA24 CBNZ W8, 0x346EA2C
	0x0346EA28 BL 0x1C16DFC
	0x0346EA2C LDR X2, [X21]
	0x0346EA30 MOV X0, X19
	0x0346EA34 MOV X1, X20
	0x0346EA38 BL 0x26322B0
	0x0346EA3C B 0x346EA7C
	0x0346EA40 MOVZ W8, 0x1
	0x0346EA44 STR W8, [X19]
	0x0346EA48 LDR X8, [X31 + 0x18]
	0x0346EA4C STR X8, [X19 + 0x60]
	0x0346EA50 LDR X0, [X25]
	0x0346EA54 LDR W8, [X0 + 0xE0]
	0x0346EA58 CBNZ W8, 0x346EA60
	0x0346EA5C BL 0x1C16DFC
	0x0346EA60 ADRP X8, 0xCC2000
	0x0346EA64 LDR X8, [X8 + 0x690]
	0x0346EA68 ADD X0, X19, 0x8
	0x0346EA6C LDR X3, [X8]
	0x0346EA70 ADD X1, X31, 0x18
	0x0346EA74 MOV X2, X19
	0x0346EA78 BL 0x1FBE204
	0x0346EA7C LDP X20, X19, [X31 + 0x60]
	0x0346EA80 LDP X22, X21, [X31 + 0x50]
	0x0346EA84 LDP X24, X23, [X31 + 0x40]
	0x0346EA88 LDP X30, X25, [X31 + 0x30]
	0x0346EA8C ADD X31, X31, 0x70
	0x0346EA90 RET
	0x0346EA94 BL 0x1C16F20
	0x0346EA98 BL 0x1C16F20
	0x0346EA9C BL 0x1C16F20
	0x0346EAA0 BL 0x1C16F20
	0x0346EAA4 BL 0x1C16F20
	0x0346EAA8 BL 0x1C16F20
	0x0346EAAC BL 0x1C16F20
	0x0346EAB0 BL 0x1C16F20
	0x0346EAB4 BL 0x1C16F20
	0x0346EAB8 BL 0x1C16F20
	0x0346EABC BL 0x1C16F20
	0x0346EAC0 BL 0x1C16F20
	0x0346EAC4 B 0x346EB38
	0x0346EAC8 B 0x346EB38
	0x0346EACC B 0x346EB38
	0x0346EAD0 B 0x346EB38
	0x0346EAD4 B 0x346EB38
	0x0346EAD8 B 0x346EB38
	0x0346EADC B 0x346EB38
	0x0346EAE0 B 0x346EB38
	0x0346EAE4 B 0x346EB38
	0x0346EAE8 B 0x346EB38
	0x0346EAEC B 0x346EB38
	0x0346EAF0 B 0x346EB38
	0x0346EAF4 B 0x346EB38
	0x0346EAF8 B 0x346EB38
	0x0346EAFC B 0x346EB38
	0x0346EB00 B 0x346EB38
	0x0346EB04 B 0x346EB38
	0x0346EB08 B 0x346EB38
	0x0346EB0C B 0x346EB38
	0x0346EB10 B 0x346EB38
	0x0346EB14 B 0x346EB38
	0x0346EB18 B 0x346EB38
	0x0346EB1C B 0x346EB38
	0x0346EB20 B 0x346EB38
	0x0346EB24 B 0x346EB38
	0x0346EB28 B 0x346EB38
	0x0346EB2C B 0x346EB38
	0x0346EB30 B 0x346EB38
	0x0346EB34 B 0x346EB38
	0x0346EB38 MOV X20, X0
	0x0346EB3C CMP W1, 0x1
	0x0346EB40 B.NE 0x346EBE0
	0x0346EB44 MOV X0, X20
	0x0346EB48 BL 0x3EB1AD0
	0x0346EB4C MOV X20, X0
	0x0346EB50 ADRP X0, 0xC85000
	0x0346EB54 LDR X0, [X0 + 0x7D0]
	0x0346EB58 BL 0x1C16D08
	0x0346EB5C LDR X8, [X20]
	0x0346EB60 LDR X1, [X8]
	0x0346EB64 BL 0x1C17270
	0x0346EB68 TBZ X0, 0x0, 0x346EBB8
	0x0346EB6C LDR X20, [X20]
	0x0346EB70 BL 0x3EB1AE0
	0x0346EB74 MOVN W8, 0x1
	0x0346EB78 STR X31, [X19 + 0x50]
	0x0346EB7C STR W8, [X19], #0x8
	0x0346EB80 ADRP X0, 0xCC0000
	0x0346EB84 LDR X0, [X0 + 0x588]
	0x0346EB88 BL 0x1C16D08
	0x0346EB8C LDR W8, [X0 + 0xE0]
	0x0346EB90 CBNZ W8, 0x346EB98
	0x0346EB94 BL 0x1C16DFC
	0x0346EB98 ADRP X0, 0xCC1000
	0x0346EB9C LDR X0, [X0 + 0x4F8]
	0x0346EBA0 BL 0x1C16D08
	0x0346EBA4 MOV X2, X0
	0x0346EBA8 MOV X0, X19
	0x0346EBAC MOV X1, X20
	0x0346EBB0 BL 0x26324C8
	0x0346EBB4 B 0x346EA7C
	0x0346EBB8 MOVZ W0, 0x8
	0x0346EBBC BL 0x3EB1AF0
	0x0346EBC0 LDR X8, [X20]
	0x0346EBC4 STR X8, [X0]
	0x0346EBC8 ADRP X1, 0xA46000
	0x0346EBCC ADD X1, X1, 0xE58
	0x0346EBD0 MOV X2, X31
	0x0346EBD4 BL 0x3EB1B00
	0x0346EBD8 MOV X20, X0
	0x0346EBDC BL 0x3EB1AE0
	0x0346EBE0 MOV X0, X20
	0x0346EBE4 BL 0x1D2C690
	0x0346EBE8 BL 0x1990590
	0x0346EBEC STR X30, [X31 - 0x30]!
	0x0346EBF0 STP X22, X21, [X31 + 0x10]
	0x0346EBF4 STP X20, X19, [X31 + 0x20]
	0x0346EBF8 ADRP X22, 0xF6F000
	0x0346EBFC ADRP X21, 0xCC0000
	0x0346EC00 LDRB W8, [X22 + 0x7E6]
	0x0346EC04 LDR X21, [X21 + 0x588]
	0x0346EC08 MOV X19, X1
	0x0346EC0C MOV X20, X0
	0x0346EC10 TBNZ X8, 0x0, 0x346EC34
	0x0346EC14 ADRP X0, 0xCC1000
	0x0346EC18 LDR X0, [X0 + 0x500]
	0x0346EC1C BL 0x1C16CF4
	0x0346EC20 ADRP X0, 0xCC0000
	0x0346EC24 LDR X0, [X0 + 0x588]
	0x0346EC28 BL 0x1C16CF4
	0x0346EC2C MOVZ W8, 0x1
	0x0346EC30 STRB W8, [X22 + 0x7E6]
	0x0346EC34 LDR X0, [X21]
	0x0346EC38 ADRP X21, 0xCC1000
	0x0346EC3C LDR W8, [X0 + 0xE0]
	0x0346EC40 LDR X21, [X21 + 0x500]
	0x0346EC44 CBNZ W8, 0x346EC4C
	0x0346EC48 BL 0x1C16DFC
	0x0346EC4C LDR X2, [X21]
	0x0346EC50 ADD X0, X20, 0x8
	0x0346EC54 MOV X1, X19
	0x0346EC58 LDP X20, X19, [X31 + 0x20]
	0x0346EC5C LDP X22, X21, [X31 + 0x10]
	0x0346EC60 LDR X30, [X31], #0x30
	0x0346EC64 B 0x2632228
	0x0346EC68 SUB X31, X31, 0x70
	0x0346EC6C STP X30, X25, [X31 + 0x30]
	0x0346EC70 STP X24, X23, [X31 + 0x40]
	0x0346EC74 STP X22, X21, [X31 + 0x50]
	0x0346EC78 STP X20, X19, [X31 + 0x60]
	0x0346EC7C ADRP X20, 0xF6F000
	0x0346EC80 LDRB W8, [X20 + 0x7E7]
	0x0346EC84 MOV X19, X0
	0x0346EC88 TBNZ X8, 0x0, 0x346ED78
	0x0346EC8C ADRP X0, 0xCC2000
	0x0346EC90 LDR X0, [X0 + 0x6D0]
	0x0346EC94 BL 0x1C16CF4
	0x0346EC98 ADRP X0, 0xCC2000
	0x0346EC9C LDR X0, [X0 + 0x6D8]
	0x0346ECA0 BL 0x1C16CF4
	0x0346ECA4 ADRP X0, 0xCC1000
	0x0346ECA8 LDR X0, [X0 + 0x4D8]
	0x0346ECAC BL 0x1C16CF4
	0x0346ECB0 ADRP X0, 0xCC0000
	0x0346ECB4 LDR X0, [X0 + 0x588]
	0x0346ECB8 BL 0x1C16CF4
	0x0346ECBC ADRP X0, 0xC87000
	0x0346ECC0 LDR X0, [X0 + 0xA10]
	0x0346ECC4 BL 0x1C16CF4
	0x0346ECC8 ADRP X0, 0xC86000
	0x0346ECCC LDR X0, [X0 + 0x9F0]
	0x0346ECD0 BL 0x1C16CF4
	0x0346ECD4 ADRP X0, 0xCC2000
	0x0346ECD8 LDR X0, [X0 + 0x698]
	0x0346ECDC BL 0x1C16CF4
	0x0346ECE0 ADRP X0, 0xC86000
	0x0346ECE4 LDR X0, [X0 + 0x818]
	0x0346ECE8 BL 0x1C16CF4
	0x0346ECEC ADRP X0, 0xCC1000
	0x0346ECF0 LDR X0, [X0 + 0x7C8]
	0x0346ECF4 BL 0x1C16CF4
	0x0346ECF8 ADRP X0, 0xCC1000
	0x0346ECFC LDR X0, [X0 + 0x7D0]
	0x0346ED00 BL 0x1C16CF4
	0x0346ED04 ADRP X0, 0xCC2000
	0x0346ED08 LDR X0, [X0 + 0x6A0]
	0x0346ED0C BL 0x1C16CF4
	0x0346ED10 ADRP X0, 0xCC2000
	0x0346ED14 LDR X0, [X0 + 0x6A8]
	0x0346ED18 BL 0x1C16CF4
	0x0346ED1C ADRP X0, 0xC86000
	0x0346ED20 LDR X0, [X0 + 0x830]
	0x0346ED24 BL 0x1C16CF4
	0x0346ED28 ADRP X0, 0xC86000
	0x0346ED2C LDR X0, [X0 + 0x838]
	0x0346ED30 BL 0x1C16CF4
	0x0346ED34 ADRP X0, 0xCC2000
	0x0346ED38 LDR X0, [X0 + 0x6B0]
	0x0346ED3C BL 0x1C16CF4
	0x0346ED40 ADRP X0, 0xC86000
	0x0346ED44 LDR X0, [X0 + 0x840]
	0x0346ED48 BL 0x1C16CF4
	0x0346ED4C ADRP X0, 0xCC2000
	0x0346ED50 LDR X0, [X0 + 0x6B8]
	0x0346ED54 BL 0x1C16CF4
	0x0346ED58 ADRP X0, 0xCC2000
	0x0346ED5C LDR X0, [X0 + 0x6E0]
	0x0346ED60 BL 0x1C16CF4
	0x0346ED64 ADRP X0, 0xCC2000
	0x0346ED68 LDR X0, [X0 + 0x6E8]
	0x0346ED6C BL 0x1C16CF4
	0x0346ED70 MOVZ W8, 0x1
	0x0346ED74 STRB W8, [X20 + 0x7E7]
	0x0346ED78 STP X31, X31, [X31 + 0x20]
	0x0346ED7C STR X31, [X31 + 0x18]
	0x0346ED80 ADRP X25, 0xCC0000
	0x0346ED84 LDR W8, [X19]
	0x0346ED88 LDR X20, [X19 + 0x20]
	0x0346ED8C LDR X25, [X25 + 0x588]
	0x0346ED90 CBZ W8, 0x346EDB4
	0x0346ED94 CMP W8, 0x1
	0x0346ED98 B.NE 0x346EDE0
	0x0346ED9C LDR X8, [X19 + 0x60]
	0x0346EDA0 MOVN W9, 0x0
	0x0346EDA4 STR X8, [X31 + 0x18]
	0x0346EDA8 STR X31, [X19 + 0x60]
	0x0346EDAC STR W9, [X19]
	0x0346EDB0 B 0x346F0F8
	0x0346EDB4 LDR X8, [X19 + 0x58]
	0x0346EDB8 MOVN W9, 0x0
	0x0346EDBC STR X8, [X31 + 0x20]
	0x0346EDC0 STR X31, [X19 + 0x58]
	0x0346EDC4 STR W9, [X19]
	0x0346EDC8 ADRP X8, 0xC86000
	0x0346EDCC LDR X8, [X8 + 0x830]
	0x0346EDD0 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF70000
	011 Move W8, [X20+2017]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCC3000
	018 Move X0, [X0+1608]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC3000
	021 Move X0, [X0+1616]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC2000
	024 Move X0, [X0+1112]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC1000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move X0, 0xC88000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC87000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC3000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xC87000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC2000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC2000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC3000
	048 Move X0, [X0+1528]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC3000
	051 Move X0, [X0+1536]
	052 Call 0x1C17CF4
	053 Move X0, 0xC87000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC87000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC3000
	060 Move X0, [X0+1544]
	061 Call 0x1C17CF4
	062 Move X0, 0xC87000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC3000
	066 Move X0, [X0+1552]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC3000
	069 Move X0, [X0+1624]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC3000
	072 Move X0, [X0+1632]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2017], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCC1000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1328]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+96]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+96], X31
	092 Move [X19], W9
	093 Move X8, [X19+88]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+88], X31
	099 Move [X19], W9
	100 Move X8, 0xC87000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCC3000
	106 Move X8, [X8+1632]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass121_0..ctor, X0
	112 Move [X19+80], X21
	113 Compare X21, 0
	114 JumpIfEqual {384}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 Move X8, [X19+64]
	124 Move [X21+48], X8
	125 Compare X20, 0
	126 JumpIfEqual {385}
	127 Move W8, [X20+16]
	128 Compare W8, 0
	129 JumpIfEqual {267}
	130 Move X8, [X19+80]
	131 Compare X8, 0
	132 JumpIfEqual {386}
	133 Move X21, [X8+24]
	134 Compare X21, 0
	135 JumpIfEqual {387}
	136 Move X23, 0xC87000
	137 Move X8, [X21]
	138 Move X23, [X23+2072]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X23]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 7
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 7
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {265}
	166 Move X8, [X19+80]
	167 Compare X8, 0
	168 JumpIfEqual {388}
	169 Move X9, 0xC87000
	170 Move X9, [X9+2544]
	171 Move X21, [X8+24]
	172 Move X0, [X9]
	173 Move W9, [X0+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call DateTime.get_UtcNow
	179 Move X22, 0xC88000
	180 Move X22, [X22+2576]
	181 Move X8, X0
	182 Move [X31+40], X8
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X22]
	189 Move X8, [X0+184]
	190 Move X1, [X8]
	191 Add X0, X31, 40
	192 Move X2, X31
	193 Call DateTime.Add, X0, X1
	194 Compare X21, 0
	195 JumpIfEqual {389}
	196 Move X8, [X21]
	197 Move X1, [X23]
	198 Move X22, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move W2, 11
	209 Move X0, X21
	210 Call 0x1C5D788
	211 Move W9, [X10]
	212 Add W9, W9, 11
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X21
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {265}
	224 Move X8, [X19+80]
	225 Compare X8, 0
	226 JumpIfEqual {390}
	227 Move X1, [X8+24]
	228 Move X3, [X19+72]
	229 Move X4, [X8+48]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X5, X31
	233 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	234 Compare X0, 0
	235 JumpIfEqual {391}
	236 Move X8, 0xC87000
	237 Move X8, [X8+2112]
	238 Move X1, [X8]
	239 Call Task`1<Object>.GetAwaiter, X0
	240 Move X8, 0xC87000
	241 Move X8, [X8+2104]
	242 Move [X31+32], X0
	243 Move X1, [X8]
	244 Add X0, X31, 32
	245 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {100}
	250 Move [X19], W31
	251 Move X8, [X31+32]
	252 Move [X19+88], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xCC3000
	259 Move X8, [X8+1616]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 32
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Compare X20, 0
	266 JumpIfEqual {383}
	267 Move X8, 0xCC3000
	268 Move X8, [X8+1520]
	269 Move X21, [X20+88]
	270 Move X23, [X19+80]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X8, 0xCC3000
	274 Move X8, [X8+1624]
	275 Move X22, X0
	276 Move X2, [X8]
	277 Move X1, X23
	278 Move X3, X31
	279 Call Func`1<Object>..ctor, X0, X1, X2
	280 Move X8, [X19+80]
	281 Compare X8, 0
	282 JumpIfEqual {380}
	283 Move X9, 0xCC2000
	284 Move X23, [X19+72]
	285 Move X9, [X9+1992]
	286 Compare X23, 0
	287 JumpIfNotEqual {289}
	288 Move X23, [X20+24]
	289 Move X20, [X8+24]
	290 Move X1, [X8+48]
	291 Move X2, [X9]
	292 Move [X31+8], X31
	293 Move [X31+16], X31
	294 Add X0, X31, 8
	295 Call Nullable`1<CancellationToken>..ctor, X0, X1
	296 Move X8, 0xCC2000
	297 Move X8, [X8+2000]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X3, [X31+8]
	301 Move X4, [X31+16]
	302 Move X24, X0
	303 Move X1, X20
	304 Move X2, X23
	305 Call RetryHistory..ctor, X0, X1, X2, X3
	306 Compare X21, 0
	307 JumpIfEqual {381}
	308 Move X8, 0xCC3000
	309 Move X8, [X8+1528]
	310 Move X3, [X8]
	311 Move X0, X21
	312 Move X1, X22
	313 Move X2, X24
	314 Call 0x2244230, X0, X1, X2
	315 Compare X0, 0
	316 JumpIfEqual {382}
	317 Move X8, 0xCC3000
	318 Move X8, [X8+1552]
	319 Move X1, [X8]
	320 Call Task`1<Object>.GetAwaiter, X0
	321 Move X8, 0xCC3000
	322 Move X8, [X8+1544]
	323 Move [X31+24], X0
	324 Move X1, [X8]
	325 Add X0, X31, 24
	326 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {354}
	331 Move X8, 0xCC3000
	332 Move X8, [X8+1536]
	333 Add X0, X31, 24
	334 Move X1, [X8]
	335 Call TaskAwaiter`1<Object>.GetResult, X0
	336 Move TEMP, 1
	337 Not TEMP
	338 Move W8, TEMP
	339 Move [X19], W8
	340 Move [X19+80], X31
	341 Move X20, X0
	342 Move X0, [X25]
	343 Move X21, 0xCC2000
	344 Add X19, X19, 8
	345 Move W8, [X0+224]
	346 Move X21, [X21+1112]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X2, [X21]
	351 Move X0, X19
	352 Move X1, X20
	353 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	354 Move W8, 1
	355 Move [X19], W8
	356 Move X8, [X31+24]
	357 Move [X19+96], X8
	358 Move X0, [X25]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X8, 0xCC3000
	364 Move X8, [X8+1608]
	365 Add X0, X19, 8
	366 Move X3, [X8]
	367 Add X1, X31, 24
	368 Move X2, X19
	369 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	370 Move X20, [X31+96]
	371 Move X19, [X31+104]
	372 Move X22, [X31+80]
	373 Move X21, [X31+88]
	374 Move X24, [X31+64]
	375 Move X23, [X31+72]
	376 Move X30, [X31+48]
	377 Move X25, [X31+56]
	378 Add X31, X31, 112
	379 Return 
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Move X20, X0
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X0, X20
	395 Call 0x3EB2AD0
	396 Move X20, X0
	397 Move X0, 0xC86000
	398 Move X0, [X0+2000]
	399 Call 0x1C17D08
	400 Move X8, [X20]
	401 Move X1, [X8]
	402 Call 0x1C18270
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfNotEqual {428}
	407 Move X20, [X20]
	408 Call 0x3EB2AE0
	409 Move TEMP, 1
	410 Not TEMP
	411 Move W8, TEMP
	412 Move [X19+80], X31
	413 Move [X19+8], W8
	414 Move X0, 0xCC1000
	415 Move X0, [X0+1328]
	416 Call 0x1C17D08
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, 0xCC2000
	422 Move X0, [X0+1144]
	423 Call 0x1C17D08
	424 Move X2, X0
	425 Move X0, X19
	426 Move X1, X20
	427 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	428 Move W0, 8
	429 Call 0x3EB2AF0
	430 Move X8, [X20]
	431 Move [X0], X8
	432 Move X1, 0xA47000
	433 Add X1, X1, 3672
	434 Move X2, X31
	435 Call 0x3EB2B00
	436 Move X20, X0
	437 Call 0x3EB2AE0
	438 Move X0, X20
	439 Call 0x1D2D690
	440 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346EDD4 LDR X1, [X8]
	0x0346EDD8 BL 0x2677474
	0x0346EDDC B 0x346F018
	0x0346EDE0 ADRP X8, 0xCC2000
	0x0346EDE4 LDR X8, [X8 + 0x6E8]
	0x0346EDE8 LDR X0, [X8]
	0x0346EDEC BL 0x1C16F10
	0x0346EDF0 MOV X21, X0
	0x0346EDF4 MOV X1, X31
	0x0346EDF8 BL 0x3447354
	0x0346EDFC STR X21, [X19 + 0x50]
	0x0346EE00 CBZ X21, 0x346F1B0
	0x0346EE04 LDR X8, [X19 + 0x20]
	0x0346EE08 STR X8, [X21 + 0x10]
	0x0346EE0C LDR X8, [X19 + 0x28]
	0x0346EE10 STR X8, [X21 + 0x18]
	0x0346EE14 LDR X8, [X19 + 0x30]
	0x0346EE18 STR X8, [X21 + 0x20]
	0x0346EE1C LDRB W8, [X19 + 0x38]
	0x0346EE20 STRB W8, [X21 + 0x28]
	0x0346EE24 LDR X8, [X19 + 0x40]
	0x0346EE28 STR X8, [X21 + 0x30]
	0x0346EE2C CBZ X20, 0x346F1B4
	0x0346EE30 LDRB W8, [X20 + 0x10]
	0x0346EE34 CBZ W8, 0x346F01C
	0x0346EE38 LDR X8, [X19 + 0x50]
	0x0346EE3C CBZ X8, 0x346F1B8
	0x0346EE40 LDR X21, [X8 + 0x18]
	0x0346EE44 CBZ X21, 0x346F1BC
	0x0346EE48 ADRP X23, 0xC86000
	0x0346EE4C LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF70000
	007 Move X21, 0xCC1000
	008 Move W8, [X22+2018]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC2000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC1000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2018], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1152]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

