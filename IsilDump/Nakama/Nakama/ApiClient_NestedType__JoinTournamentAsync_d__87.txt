Type: Nakama.ApiClient/<JoinTournamentAsync>d__87

Method: System.Void MoveNext()

Disassembly:
	0x03426DF0 ADRP X0, 0xCD0000
	0x03426DF4 LDR X0, [X0 + 0x1F8]
	0x03426DF8 BL 0x1C16CF4
	0x03426DFC ADRP X0, 0xCD6000
	0x03426E00 LDR X0, [X0 + 0x3A0]
	0x03426E04 BL 0x1C16CF4
	0x03426E08 ADRP X0, 0xCCF000
	0x03426E0C LDR X0, [X0 + 0xA28]
	0x03426E10 BL 0x1C16CF4
	0x03426E14 ADRP X0, 0xCF6000
	0x03426E18 LDR X0, [X0 + 0x4D8]
	0x03426E1C BL 0x1C16CF4
	0x03426E20 ADRP X0, 0xD08000
	0x03426E24 LDR X0, [X0 + 0x800]
	0x03426E28 BL 0x1C16CF4
	0x03426E2C ADRP X0, 0xD08000
	0x03426E30 LDR X0, [X0 + 0xE00]
	0x03426E34 BL 0x1C16CF4
	0x03426E38 ADRP X0, 0xD08000
	0x03426E3C LDR X0, [X0 + 0x7D0]
	0x03426E40 BL 0x1C16CF4
	0x03426E44 ADRP X0, 0xD08000
	0x03426E48 LDR X0, [X0 + 0x7D8]
	0x03426E4C BL 0x1C16CF4
	0x03426E50 ADRP X0, 0xCCD000
	0x03426E54 LDR X0, [X0 + 0x988]
	0x03426E58 BL 0x1C16CF4
	0x03426E5C MOVZ W8, 0x1
	0x03426E60 STRB W8, [X20 + 0x637]
	0x03426E64 STR X31, [X31 + 0x8]
	0x03426E68 ADRP X27, 0xCD0000
	0x03426E6C LDR W8, [X19]
	0x03426E70 LDR X27, [X27 + 0x280]
	0x03426E74 CBZ W8, 0x3427068
	0x03426E78 LDR X21, [X19 + 0x20]
	0x03426E7C CBZ X21, 0x342717C
	0x03426E80 ADRP X8, 0xCCF000
	0x03426E84 LDR X8, [X8 + 0xA28]
	0x03426E88 LDR X0, [X8]
	0x03426E8C ADRP X8, 0xD08000
	0x03426E90 LDR X8, [X8 + 0xE00]
	0x03426E94 LDR X24, [X19 + 0x28]
	0x03426E98 LDR W9, [X0 + 0xE0]
	0x03426E9C LDR X20, [X8]
	0x03426EA0 CBNZ W9, 0x3426EA8
	0x03426EA4 BL 0x1C16DFC
	0x03426EA8 MOV X0, X21
	0x03426EAC MOV X1, X31
	0x03426EB0 BL 0x3624D20
	0x03426EB4 CBZ X20, 0x34271C4
	0x03426EB8 ADRP X8, 0xD08000
	0x03426EBC LDR X8, [X8 + 0x800]
	0x03426EC0 MOV X2, X0
	0x03426EC4 LDR X1, [X8]
	0x03426EC8 MOV X0, X20
	0x03426ECC MOV X3, X31
	0x03426ED0 BL 0x32293BC
	0x03426ED4 CBZ X24, 0x34271C8
	0x03426ED8 MOV X21, X0
	0x03426EDC LDR X0, [X24 + 0x20]
	0x03426EE0 CBZ X0, 0x34271CC
	0x03426EE4 ADRP X8, 0xCCD000
	0x03426EE8 LDR X8, [X8 + 0x988]
	0x03426EEC LDR X20, [X8]
	0x03426EF0 MOV X1, X31
	0x03426EF4 BL 0x361B448
	0x03426EF8 ADRP X8, 0xCD6000
	0x03426EFC LDR X8, [X8 + 0x8D8]
	0x03426F00 MOV X22, X0
	0x03426F04 LDR X0, [X8]
	0x03426F08 MOVZ W1, 0x1
	0x03426F0C BL 0x1C16D6C
	0x03426F10 MOV X1, X0
	0x03426F14 CBZ X1, 0x34271D0
	0x03426F18 LDR W8, [X1 + 0x18]
	0x03426F1C CBZ W8, 0x34271D4
	0x03426F20 MOVZ W8, 0x2F
	0x03426F24 STRH W8, [X1 + 0x20]
	0x03426F28 CBZ X22, 0x34271D8
	0x03426F2C MOV X0, X22
	0x03426F30 MOV X2, X31
	0x03426F34 BL 0x322BC58
	0x03426F38 MOV X1, X21
	0x03426F3C MOV X2, X31
	0x03426F40 BL 0x321B938
	0x03426F44 ADRP X8, 0xCD6000
	0x03426F48 LDR X8, [X8 + 0x3A0]
	0x03426F4C MOV X22, X0
	0x03426F50 LDR X23, [X24 + 0x20]
	0x03426F54 LDR X0, [X8]
	0x03426F58 BL 0x1C16F10
	0x03426F5C MOV X21, X0
	0x03426F60 MOV X1, X23
	0x03426F64 MOV X2, X31
	0x03426F68 BL 0x36281F8
	0x03426F6C CBZ X21, 0x34271DC
	0x03426F70 MOV X0, X21
	0x03426F74 MOV X1, X22
	0x03426F78 MOV X2, X31
	0x03426F7C BL 0x36288CC
	0x03426F80 MOV X0, X21
	0x03426F84 MOV X1, X20
	0x03426F88 MOV X2, X31
	0x03426F8C BL 0x3628980
	0x03426F90 MOV X0, X21
	0x03426F94 MOV X1, X31
	0x03426F98 BL 0x3628A38
	0x03426F9C ADRP X8, 0xCF6000
	0x03426FA0 ADRP X9, 0xCCE000
	0x03426FA4 LDR X8, [X8 + 0x4D8]
	0x03426FA8 LDR X9, [X9 + 0x6D0]
	0x03426FAC MOV X20, X0
	0x03426FB0 LDR X21, [X8]
	0x03426FB4 LDR X0, [X9]
	0x03426FB8 BL 0x1C16F10
	0x03426FBC ADRP X8, 0xCCE000
	0x03426FC0 LDR X8, [X8 + 0x6C0]
	0x03426FC4 MOV X22, X0
	0x03426FC8 LDR X1, [X8]
	0x03426FCC BL 0x2AA4804
	0x03426FD0 ADRP X8, 0xD08000
	0x03426FD4 LDR X8, [X8 + 0x7D8]
	0x03426FD8 LDR X1, [X19 + 0x30]
	0x03426FDC LDR X0, [X8]
	0x03426FE0 MOV X2, X31
	0x03426FE4 BL 0x321B938
	0x03426FE8 CBZ X22, 0x34271E0
	0x03426FEC ADRP X8, 0xD08000
	0x03426FF0 LDR X8, [X8 + 0x7D0]
	0x03426FF4 ADRP X9, 0xCCE000
	0x03426FF8 LDR X9, [X9 + 0x810]
	0x03426FFC MOV X2, X0
	0x03427000 LDR X1, [X8]
	0x03427004 LDR X3, [X9]
	0x03427008 MOV X0, X22
	0x0342700C BL 0x2AA5098
	0x03427010 LDR X23, [X24 + 0x10]
	0x03427014 CBZ X23, 0x34271E4
	0x03427018 ADRP X10, 0xD07000
	0x0342701C LDR X10, [X10 + 0x7B8]
	0x03427020 LDR X8, [X23]
	0x03427024 LDR W25, [X24 + 0x18]
	0x03427028 LDP X26, X24, [X19 + 0x38]
	0x0342702C LDR X1, [X10]
	0x03427030 LDRH W9, [X8 + 0x12E]
	0x03427034 CBZ X9, 0x3427058
	0x03427038 LDR X10, [X8 + 0xB0]
	0x0342703C ADD X10, X10, 0x8
	0x03427040 LDUR X11, [X10 - 0x8]
	0x03427044 CMP X11, X1
	0x03427048 B.EQ 0x3427080
	0x0342704C SUBS X9, X9, 0x1
	0x03427050 ADD X10, X10, 0x10
	0x03427054 B.NE 0x3427040
	0x03427058 MOVZ W2, 0x3
	0x0342705C MOV X0, X23
	0x03427060 BL 0x1C5C788
	0x03427064 B 0x3427090
	0x03427068 LDR X8, [X19 + 0x48]
	0x0342706C MOVN W9, 0x0
	0x03427070 STR X8, [X31 + 0x8]
	0x03427074 STR X31, [X19 + 0x48]
	0x03427078 STR W9, [X19]
	0x0342707C B 0x34270EC
	0x03427080 LDR W9, [X10]
	0x03427084 ADD W9, W9, 0x3
	0x03427088 ADD X8, X8, W9, 0x4, SXTW
	0x0342708C ADD X0, X8, 0x138
	0x03427090 LDP X8, X9, [X0]
	0x03427094 MOV X0, X23
	0x03427098 MOV X1, X21
	0x0342709C MOV X2, X20
	0x034270A0 MOV X3, X22
	0x034270A4 MOV X4, X31
	0x034270A8 MOV W5, W25
	0x034270AC MOV X6, X26
	0x034270B0 MOV X7, X24
	0x034270B4 STR X9, [X31]
	0x034270B8 BLR X8
	0x034270BC CBZ X0, 0x34271E8
	0x034270C0 ADRP X8, 0xCCF000
	0x034270C4 LDR X8, [X8 + 0x1F8]
	0x034270C8 LDR X1, [X8]
	0x034270CC BL 0x269F5D0
	0x034270D0 ADRP X8, 0xCCF000
	0x034270D4 LDR X8, [X8 + 0x1F0]
	0x034270D8 STR X0, [X31 + 0x8]
	0x034270DC LDR X1, [X8]
	0x034270E0 ADD X0, X31, 0x8
	0x034270E4 BL 0x2677430
	0x034270E8 TBZ X0, 0x0, 0x3427128
	0x034270EC ADRP X8, 0xCCF000
	0x034270F0 LDR X8, [X8 + 0x1E0]
	0x034270F4 ADD X0, X31, 0x8
	0x034270F8 LDR X1, [X8]
	0x034270FC BL 0x2677474
	0x03427100 MOVN W8, 0x1
	0x03427104 STR W8, [X19], #0x8
	0x03427108 LDR X0, [X27]
	0x0342710C LDR W8, [X0 + 0xE0]
	0x03427110 CBNZ W8, 0x3427118
	0x03427114 BL 0x1C16DFC
	0x03427118 MOV X0, X19
	0x0342711C MOV X1, X31
	0x03427120 BL 0x32C4864
	0x03427124 B 0x3427160
	0x03427128 STR W31, [X19]
	0x0342712C LDR X8, [X31 + 0x8]
	0x03427130 STR X8, [X19 + 0x48]
	0x03427134 LDR X0, [X27]
	0x03427138 LDR W8, [X0 + 0xE0]
	0x0342713C CBNZ W8, 0x3427144
	0x03427140 BL 0x1C16DFC
	0x03427144 ADRP X8, 0xD07000
	0x03427148 LDR X8, [X8 + 0xDF8]
	0x0342714C ADD X0, X19, 0x8
	0x03427150 LDR X3, [X8]
	0x03427154 ADD X1, X31, 0x8
	0x03427158 MOV X2, X19
	0x0342715C BL 0x21866D4
	0x03427160 LDP X20, X19, [X31 + 0x50]
	0x03427164 LDP X22, X21, [X31 + 0x40]
	0x03427168 LDP X24, X23, [X31 + 0x30]
	0x0342716C LDP X26, X25, [X31 + 0x20]
	0x03427170 LDP X30, X27, [X31 + 0x10]
	0x03427174 ADD X31, X31, 0x60
	0x03427178 RET
	0x0342717C ADRP X0, 0xCD4000
	0x03427180 LDR X0, [X0 + 0x578]
	0x03427184 BL 0x1C16D08
	0x03427188 BL 0x1C16F10
	0x0342718C MOV X20, X0
	0x03427190 ADRP X0, 0xD07000
	0x03427194 LDR X0, [X0 + 0x808]
	0x03427198 BL 0x1C16D08
	0x0342719C MOV X1, X0
	0x034271A0 MOV X0, X20
	0x034271A4 MOV X2, X31
	0x034271A8 BL 0x3314A68
	0x034271AC ADRP X0, 0xD07000
	0x034271B0 LDR X0, [X0 + 0xE08]
	0x034271B4 BL 0x1C16D08
	0x034271B8 MOV X1, X0
	0x034271BC MOV X0, X20
	0x034271C0 BL 0x1C16DEC
	0x034271C4 BL 0x1C16F20
	0x034271C8 BL 0x1C16F20
	0x034271CC BL 0x1C16F20
	0x034271D0 BL 0x1C16F20
	0x034271D4 BL 0x1C16F28
	0x034271D8 BL 0x1C16F20
	0x034271DC BL 0x1C16F20
	0x034271E0 BL 0x1C16F20
	0x034271E4 BL 0x1C16F20
	0x034271E8 BL 0x1C16F20
	0x034271EC B 0x3427248
	0x034271F0 B 0x3427248
	0x034271F4 B 0x3427248
	0x034271F8 B 0x3427248
	0x034271FC B 0x3427248
	0x03427200 B 0x3427248
	0x03427204 B 0x3427248
	0x03427208 B 0x3427248
	0x0342720C B 0x3427248
	0x03427210 B 0x3427248
	0x03427214 B 0x3427248
	0x03427218 B 0x3427248
	0x0342721C B 0x3427248
	0x03427220 B 0x3427248
	0x03427224 B 0x3427248
	0x03427228 B 0x3427248
	0x0342722C B 0x3427248
	0x03427230 B 0x3427248
	0x03427234 B 0x3427248
	0x03427238 B 0x3427248
	0x0342723C B 0x3427248
	0x03427240 B 0x3427248
	0x03427244 B 0x3427248
	0x03427248 MOV X20, X0
	0x0342724C CMP W1, 0x1
	0x03427250 B.NE 0x34272E0
	0x03427254 MOV X0, X20
	0x03427258 BL 0x3EB1AD0
	0x0342725C MOV X20, X0
	0x03427260 ADRP X0, 0xCCC000
	0x03427264 LDR X0, [X0 + 0x7D0]
	0x03427268 BL 0x1C16D08
	0x0342726C LDR X8, [X20]
	0x03427270 LDR X1, [X8]
	0x03427274 BL 0x1C17270
	0x03427278 TBZ X0, 0x0, 0x34272B8
	0x0342727C LDR X20, [X20]
	0x03427280 BL 0x3EB1AE0
	0x03427284 MOVN W8, 0x1
	0x03427288 STR W8, [X19], #0x8
	0x0342728C ADRP X0, 0xCCF000
	0x03427290 LDR X0, [X0 + 0x280]
	0x03427294 BL 0x1C16D08
	0x03427298 LDR W8, [X0 + 0xE0]
	0x0342729C CBNZ W8, 0x34272A4
	0x034272A0 BL 0x1C16DFC
	0x034272A4 MOV X0, X19
	0x034272A8 MOV X1, X20
	0x034272AC MOV X2, X31
	0x034272B0 BL 0x32C4908
	0x034272B4 B 0x3427160
	0x034272B8 MOVZ W0, 0x8
	0x034272BC BL 0x3EB1AF0
	0x034272C0 LDR X8, [X20]
	0x034272C4 STR X8, [X0]
	0x034272C8 ADRP X1, 0xA8D000
	0x034272CC ADD X1, X1, 0xE58
	0x034272D0 MOV X2, X31
	0x034272D4 BL 0x3EB1B00
	0x034272D8 MOV X20, X0
	0x034272DC BL 0x3EB1AE0
	0x034272E0 MOV X0, X20
	0x034272E4 BL 0x1D2C690
	0x034272E8 BL 0x1990590
	0x034272EC STR X30, [X31 - 0x30]!
	0x034272F0 STP X22, X21, [X31 + 0x10]
	0x034272F4 STP X20, X19, [X31 + 0x20]
	0x034272F8 ADRP X21, 0xFB6000
	0x034272FC ADRP X22, 0xCCF000
	0x03427300 LDRB W8, [X21 + 0x638]
	0x03427304 LDR X22, [X22 + 0x280]
	0x03427308 MOV X19, X1
	0x0342730C MOV X20, X0
	0x03427310 TBNZ X8, 0x0, 0x3427328
	0x03427314 ADRP X0, 0xCCF000
	0x03427318 LDR X0, [X0 + 0x280]
	0x0342731C BL 0x1C16CF4
	0x03427320 MOVZ W8, 0x1
	0x03427324 STRB W8, [X21 + 0x638]
	0x03427328 LDR X0, [X22]
	0x0342732C LDR W8, [X0 + 0xE0]
	0x03427330 CBNZ W8, 0x3427338
	0x03427334 BL 0x1C16DFC
	0x03427338 ADD X0, X20, 0x8
	0x0342733C MOV X1, X19
	0x03427340 LDP X20, X19, [X31 + 0x20]
	0x03427344 LDP X22, X21, [X31 + 0x10]
	0x03427348 MOV X2, X31
	0x0342734C LDR X30, [X31], #0x30
	0x03427350 B 0x32C477C
	0x03427354 SUB X31, X31, 0x70
	0x03427358 STR X30, [X31 + 0x10]
	0x0342735C STP X28, X27, [X31 + 0x20]
	0x03427360 STP X26, X25, [X31 + 0x30]
	0x03427364 STP X24, X23, [X31 + 0x40]
	0x03427368 STP X22, X21, [X31 + 0x50]
	0x0342736C STP X20, X19, [X31 + 0x60]
	0x03427370 ADRP X20, 0xFB6000
	0x03427374 LDRB W8, [X20 + 0x639]
	0x03427378 MOV X19, X0
	0x0342737C TBNZ X8, 0x0, 0x3427448

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFB8000
	013 Move W8, [X20+1587]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Move X0, 0xD09000
	020 Move X0, [X0+3528]
	021 Call 0x1C17CF4
	022 Move X0, 0xCD1000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCD7000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCF000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xCCF000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xCCF000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xD09000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xCD1000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xCD1000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD1000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xCD7000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xCD0000
	053 Move X0, [X0+2600]
	054 Call 0x1C17CF4
	055 Move X0, 0xCF7000
	056 Move X0, [X0+1240]
	057 Call 0x1C17CF4
	058 Move X0, 0xD09000
	059 Move X0, [X0+3536]
	060 Call 0x1C17CF4
	061 Move X0, 0xD09000
	062 Move X0, [X0+2000]
	063 Call 0x1C17CF4
	064 Move X0, 0xD09000
	065 Move X0, [X0+2008]
	066 Call 0x1C17CF4
	067 Move X0, 0xCCE000
	068 Move X0, [X0+2440]
	069 Call 0x1C17CF4
	070 Move X0, 0xD09000
	071 Move X0, [X0+3192]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+1587], W8
	075 Move [X31+8], X31
	076 Move X27, 0xCD1000
	077 Move W8, [X19]
	078 Move X27, [X27+640]
	079 Compare W8, 0
	080 JumpIfEqual {215}
	081 Move X21, [X19+32]
	082 Compare X21, 0
	083 JumpIfEqual {298}
	084 Move X8, 0xCD0000
	085 Move X8, [X8+2600]
	086 Move X0, [X8]
	087 Move X8, 0xD09000
	088 Move X8, [X8+3536]
	089 Move X24, [X19+40]
	090 Move W9, [X0+224]
	091 Move X20, [X8]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Call Uri.EscapeDataString, X0
	098 Compare X20, 0
	099 JumpIfEqual {316}
	100 Move X8, 0xD09000
	101 Move X8, [X8+3192]
	102 Move X2, X0
	103 Move X1, [X8]
	104 Move X0, X20
	105 Move X3, X31
	106 Call String.Replace, X0, X1, X2
	107 Compare X24, 0
	108 JumpIfEqual {317}
	109 Move X21, X0
	110 Move X0, [X24+32]
	111 Compare X0, 0
	112 JumpIfEqual {318}
	113 Move X8, 0xCCE000
	114 Move X8, [X8+2440]
	115 Move X20, [X8]
	116 Move X1, X31
	117 Call Uri.get_AbsolutePath, X0
	118 Move X8, 0xCD7000
	119 Move X8, [X8+2264]
	120 Move X22, X0
	121 Move X0, [X8]
	122 Move W1, 1
	123 Call 0x1C17D6C
	124 Move X1, X0
	125 Compare X1, 0
	126 JumpIfEqual {319}
	127 Move W8, [X1+24]
	128 Compare W8, 0
	129 JumpIfEqual {320}
	130 Move W8, 47
	131 NotImplemented "Instruction STRH not yet implemented."
	132 Compare X22, 0
	133 JumpIfEqual {321}
	134 Move X0, X22
	135 Move X2, X31
	136 Call String.TrimEnd, X0, X1
	137 Move X1, X21
	138 Move X2, X31
	139 Call String.Concat, X0, X1
	140 Move X8, 0xCD7000
	141 Move X8, [X8+928]
	142 Move X22, X0
	143 Move X23, [X24+32]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X21, X0
	147 Move X1, X23
	148 Move X2, X31
	149 Call UriBuilder..ctor, X0, X1
	150 Compare X21, 0
	151 JumpIfEqual {322}
	152 Move X0, X21
	153 Move X1, X22
	154 Move X2, X31
	155 Call UriBuilder.set_Path, X0, X1
	156 Move X0, X21
	157 Move X1, X20
	158 Move X2, X31
	159 Call UriBuilder.set_Query, X0, X1
	160 Move X0, X21
	161 Move X1, X31
	162 Call UriBuilder.get_Uri, X0
	163 Move X8, 0xCF6000
	164 Move X9, 0xCCE000
	165 Move X8, [X8+1240]
	166 Move X9, [X9+1744]
	167 Move X20, X0
	168 Move X21, [X8]
	169 Move X0, [X9]
	170 Call 0x1C17F10
	171 Move X8, 0xCCE000
	172 Move X8, [X8+1728]
	173 Move X22, X0
	174 Move X1, [X8]
	175 Call Dictionary`2<Object, Object>..ctor, X0
	176 Move X8, 0xD08000
	177 Move X8, [X8+2008]
	178 Move X1, [X19+48]
	179 Move X0, [X8]
	180 Move X2, X31
	181 Call String.Concat, X0, X1
	182 Compare X22, 0
	183 JumpIfEqual {323}
	184 Move X8, 0xD08000
	185 Move X8, [X8+2000]
	186 Move X9, 0xCCE000
	187 Move X9, [X9+2064]
	188 Move X2, X0
	189 Move X1, [X8]
	190 Move X3, [X9]
	191 Move X0, X22
	192 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	193 Move X23, [X24+16]
	194 Compare X23, 0
	195 JumpIfEqual {324}
	196 Move X10, 0xD08000
	197 Move X10, [X10+1976]
	198 Move X8, [X23]
	199 Move W25, [X24+24]
	200 Move X26, [X19+56]
	201 Move X24, [X19+64]
	202 Move X1, [X10]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 3
	213 Move X0, X23
	214 Call 0x1C5D788
	215 Move X8, [X19+72]
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W9, TEMP
	219 Move [X31+8], X8
	220 Move [X19+72], X31
	221 Move [X19], W9
	222 Move W9, [X10]
	223 Add W9, W9, 3
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X9, [X0+8]
	228 Move X0, X23
	229 Move X1, X21
	230 Move X2, X20
	231 Move X3, X22
	232 Move X4, X31
	233 Move W5, W25
	234 Move X6, X26
	235 Move X7, X24
	236 Move [X31], X9
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {325}
	240 Move X8, 0xCD0000
	241 Move X8, [X8+504]
	242 Move X1, [X8]
	243 Call Task`1<Object>.GetAwaiter, X0
	244 Move X8, 0xCD0000
	245 Move X8, [X8+496]
	246 Move [X31+8], X0
	247 Move X1, [X8]
	248 Add X0, X31, 8
	249 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {271}
	254 Move X8, 0xCD0000
	255 Move X8, [X8+480]
	256 Add X0, X31, 8
	257 Move X1, [X8]
	258 Call TaskAwaiter`1<Object>.GetResult, X0
	259 Move TEMP, 1
	260 Not TEMP
	261 Move W8, TEMP
	262 Move [X19+8], W8
	263 Move X0, [X27]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X19
	269 Move X1, X31
	270 Call AsyncTaskMethodBuilder.SetResult, X0
	271 Move [X19], W31
	272 Move X8, [X31+8]
	273 Move [X19+72], X8
	274 Move X0, [X27]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X8, 0xD08000
	280 Move X8, [X8+3528]
	281 Add X0, X19, 8
	282 Move X3, [X8]
	283 Add X1, X31, 8
	284 Move X2, X19
	285 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	286 Move X20, [X31+80]
	287 Move X19, [X31+88]
	288 Move X22, [X31+64]
	289 Move X21, [X31+72]
	290 Move X24, [X31+48]
	291 Move X23, [X31+56]
	292 Move X26, [X31+32]
	293 Move X25, [X31+40]
	294 Move X30, [X31+16]
	295 Move X27, [X31+24]
	296 Add X31, X31, 96
	297 Return 
	298 Move X0, 0xCD5000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xD08000
	304 Move X0, [X0+3200]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xD08000
	311 Move X0, [X0+3544]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X20, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X20
	329 Call 0x3EB2AD0
	330 Move X20, X0
	331 Move X0, 0xCCD000
	332 Move X0, [X0+2000]
	333 Call 0x1C17D08
	334 Move X8, [X20]
	335 Move X1, [X8]
	336 Call 0x1C18270
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {358}
	341 Move X20, [X20]
	342 Call 0x3EB2AE0
	343 Move TEMP, 1
	344 Not TEMP
	345 Move W8, TEMP
	346 Move [X19+8], W8
	347 Move X0, 0xCD0000
	348 Move X0, [X0+640]
	349 Call 0x1C17D08
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X19
	355 Move X1, X20
	356 Move X2, X31
	357 Call AsyncTaskMethodBuilder.SetException, X0, X1
	358 Move W0, 8
	359 Call 0x3EB2AF0
	360 Move X8, [X20]
	361 Move [X0], X8
	362 Move X1, 0xA8E000
	363 Add X1, X1, 3672
	364 Move X2, X31
	365 Call 0x3EB2B00
	366 Move X20, X0
	367 Call 0x3EB2AE0
	368 Move X0, X20
	369 Call 0x1D2D690
	370 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03427380 ADRP X0, 0xD07000
	0x03427384 LDR X0, [X0 + 0xE10]
	0x03427388 BL 0x1C16CF4
	0x0342738C ADRP X0, 0xCCF000
	0x03427390 LDR X0, [X0 + 0x280]
	0x03427394 BL 0x1C16CF4
	0x03427398 ADRP X0, 0xCD5000
	0x0342739C LDR X0, [X0 + 0x8D8]
	0x034273A0 BL 0x1C16CF4
	0x034273A4 ADRP X0, 0xCCD000
	0x034273A8 LDR X0, [X0 + 0x810]
	0x034273AC BL 0x1C16CF4
	0x034273B0 ADRP X0, 0xCCD000
	0x034273B4 LDR X0, [X0 + 0x6C0]
	0x034273B8 BL 0x1C16CF4
	0x034273BC ADRP X0, 0xCCD000
	0x034273C0 LDR X0, [X0 + 0x6D0]
	0x034273C4 BL 0x1C16CF4
	0x034273C8 ADRP X0, 0xD07000
	0x034273CC LDR X0, [X0 + 0x7B8]
	0x034273D0 BL 0x1C16CF4
	0x034273D4 ADRP X0, 0xCCF000
	0x034273D8 LDR X0, [X0 + 0x1E0]
	0x034273DC BL 0x1C16CF4
	0x034273E0 ADRP X0, 0xCCF000
	0x034273E4 LDR X0, [X0 + 0x1F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB7000
	007 Move X22, 0xCD0000
	008 Move W8, [X21+1588]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD0000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1588], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

