Type: Nakama.ApiClient/<AuthenticateFacebookInstantGameAsync>d__16

Method: System.Void MoveNext()

Disassembly:
	0x0341BE40 LDRB W8, [X20 + 0x609]
	0x0341BE44 MOV X19, X0
	0x0341BE48 TBNZ X8, 0x0, 0x341BF8C
	0x0341BE4C ADRP X0, 0xD13000
	0x0341BE50 LDR X0, [X0 + 0xB50]
	0x0341BE54 BL 0x1C16CF4
	0x0341BE58 ADRP X0, 0xD13000
	0x0341BE5C LDR X0, [X0 + 0x820]
	0x0341BE60 BL 0x1C16CF4
	0x0341BE64 ADRP X0, 0xD13000
	0x0341BE68 LDR X0, [X0 + 0x320]
	0x0341BE6C BL 0x1C16CF4
	0x0341BE70 ADRP X0, 0xCE1000
	0x0341BE74 LDR X0, [X0 + 0x8D8]
	0x0341BE78 BL 0x1C16CF4
	0x0341BE7C ADRP X0, 0xCE1000
	0x0341BE80 LDR X0, [X0 + 0x9E8]
	0x0341BE84 BL 0x1C16CF4
	0x0341BE88 ADRP X0, 0xCD9000
	0x0341BE8C LDR X0, [X0 + 0x810]
	0x0341BE90 BL 0x1C16CF4
	0x0341BE94 ADRP X0, 0xCD9000
	0x0341BE98 LDR X0, [X0 + 0x6C0]
	0x0341BE9C BL 0x1C16CF4
	0x0341BEA0 ADRP X0, 0xCD9000
	0x0341BEA4 LDR X0, [X0 + 0x6D0]
	0x0341BEA8 BL 0x1C16CF4
	0x0341BEAC ADRP X0, 0xD13000
	0x0341BEB0 LDR X0, [X0 + 0x7B8]
	0x0341BEB4 BL 0x1C16CF4
	0x0341BEB8 ADRP X0, 0xD13000
	0x0341BEBC LDR X0, [X0 + 0x828]
	0x0341BEC0 BL 0x1C16CF4
	0x0341BEC4 ADRP X0, 0xD13000
	0x0341BEC8 LDR X0, [X0 + 0x830]
	0x0341BECC BL 0x1C16CF4
	0x0341BED0 ADRP X0, 0xCDC000
	0x0341BED4 LDR X0, [X0 + 0xBF0]
	0x0341BED8 BL 0x1C16CF4
	0x0341BEDC ADRP X0, 0xCDB000
	0x0341BEE0 LDR X0, [X0 + 0x1E0]
	0x0341BEE4 BL 0x1C16CF4
	0x0341BEE8 ADRP X0, 0xCDB000
	0x0341BEEC LDR X0, [X0 + 0x1F0]
	0x0341BEF0 BL 0x1C16CF4
	0x0341BEF4 ADRP X0, 0xCDB000
	0x0341BEF8 LDR X0, [X0 + 0x1F8]
	0x0341BEFC BL 0x1C16CF4
	0x0341BF00 ADRP X0, 0xCE1000
	0x0341BF04 LDR X0, [X0 + 0x3A0]
	0x0341BF08 BL 0x1C16CF4
	0x0341BF0C ADRP X0, 0xCDA000
	0x0341BF10 LDR X0, [X0 + 0xA28]
	0x0341BF14 BL 0x1C16CF4
	0x0341BF18 ADRP X0, 0xD13000
	0x0341BF1C LDR X0, [X0 + 0x840]
	0x0341BF20 BL 0x1C16CF4
	0x0341BF24 ADRP X0, 0xD01000
	0x0341BF28 LDR X0, [X0 + 0x4D8]
	0x0341BF2C BL 0x1C16CF4
	0x0341BF30 ADRP X0, 0xD13000
	0x0341BF34 LDR X0, [X0 + 0x848]
	0x0341BF38 BL 0x1C16CF4
	0x0341BF3C ADRP X0, 0xCE1000
	0x0341BF40 LDR X0, [X0 + 0x988]
	0x0341BF44 BL 0x1C16CF4
	0x0341BF48 ADRP X0, 0xCE1000
	0x0341BF4C LDR X0, [X0 + 0x720]
	0x0341BF50 BL 0x1C16CF4
	0x0341BF54 ADRP X0, 0xD13000
	0x0341BF58 LDR X0, [X0 + 0x7D0]
	0x0341BF5C BL 0x1C16CF4
	0x0341BF60 ADRP X0, 0xD13000
	0x0341BF64 LDR X0, [X0 + 0x850]
	0x0341BF68 BL 0x1C16CF4
	0x0341BF6C ADRP X0, 0xD13000
	0x0341BF70 LDR X0, [X0 + 0xB58]
	0x0341BF74 BL 0x1C16CF4
	0x0341BF78 ADRP X0, 0xCD8000
	0x0341BF7C LDR X0, [X0 + 0x988]
	0x0341BF80 BL 0x1C16CF4
	0x0341BF84 MOVZ W8, 0x1
	0x0341BF88 STRB W8, [X20 + 0x609]
	0x0341BF8C STR X31, [X31 + 0x18]
	0x0341BF90 ADRP X28, 0xD13000
	0x0341BF94 LDR W8, [X19]
	0x0341BF98 LDR X28, [X28 + 0x320]
	0x0341BF9C CBZ W8, 0x341C2A0
	0x0341BFA0 LDR X8, [X19 + 0x20]
	0x0341BFA4 CBZ X8, 0x341C3D8
	0x0341BFA8 ADRP X8, 0xD13000
	0x0341BFAC ADRP X9, 0xCD8000
	0x0341BFB0 LDR X8, [X8 + 0xB58]
	0x0341BFB4 LDR X9, [X9 + 0x988]
	0x0341BFB8 MOV X0, X19
	0x0341BFBC LDR X25, [X19 + 0x38]
	0x0341BFC0 LDR X21, [X8]
	0x0341BFC4 LDR X20, [X9]
	0x0341BFC8 LDRB W8, [X0 + 0x28]!
	0x0341BFCC CBZ W8, 0x341C018
	0x0341BFD0 ADRP X8, 0xD13000
	0x0341BFD4 LDR X8, [X8 + 0x830]
	0x0341BFD8 LDR X1, [X8]
	0x0341BFDC BL 0x242D714
	0x0341BFE0 CBZ X0, 0x341C444
	0x0341BFE4 MOV X1, X31
	0x0341BFE8 BL 0x322B5E4
	0x0341BFEC ADRP X8, 0xD13000
	0x0341BFF0 LDR X8, [X8 + 0x840]
	0x0341BFF4 ADRP X9, 0xCE1000
	0x0341BFF8 LDR X9, [X9 + 0x720]
	0x0341BFFC MOV X2, X0
	0x0341C000 LDR X1, [X8]
	0x0341C004 LDR X3, [X9]
	0x0341C008 MOV X0, X20
	0x0341C00C MOV X4, X31
	0x0341C010 BL 0x32277C4
	0x0341C014 MOV X20, X0
	0x0341C018 LDR X22, [X19 + 0x30]
	0x0341C01C CBZ X22, 0x341C070
	0x0341C020 ADRP X8, 0xCD9000
	0x0341C024 LDR X8, [X8 + 0xA28]
	0x0341C028 LDR X0, [X8]
	0x0341C02C LDR W8, [X0 + 0xE0]
	0x0341C030 CBNZ W8, 0x341C038
	0x0341C034 BL 0x1C16DFC
	0x0341C038 MOV X0, X22
	0x0341C03C MOV X1, X31
	0x0341C040 BL 0x3624D20
	0x0341C044 ADRP X8, 0xD12000
	0x0341C048 LDR X8, [X8 + 0x848]
	0x0341C04C ADRP X9, 0xCE0000
	0x0341C050 LDR X9, [X9 + 0x720]
	0x0341C054 MOV X2, X0
	0x0341C058 LDR X1, [X8]
	0x0341C05C LDR X3, [X9]
	0x0341C060 MOV X0, X20
	0x0341C064 MOV X4, X31
	0x0341C068 BL 0x32277C4
	0x0341C06C MOV X20, X0
	0x0341C070 CBZ X25, 0x341C420
	0x0341C074 LDR X0, [X25 + 0x20]
	0x0341C078 CBZ X0, 0x341C424
	0x0341C07C MOV X1, X31
	0x0341C080 BL 0x361B448
	0x0341C084 ADRP X8, 0xCE0000
	0x0341C088 LDR X8, [X8 + 0x8D8]
	0x0341C08C MOV X22, X0
	0x0341C090 LDR X0, [X8]
	0x0341C094 MOVZ W1, 0x1
	0x0341C098 BL 0x1C16D6C
	0x0341C09C MOV X1, X0
	0x0341C0A0 CBZ X1, 0x341C428
	0x0341C0A4 LDR W8, [X1 + 0x18]
	0x0341C0A8 CBZ W8, 0x341C42C
	0x0341C0AC MOVZ W8, 0x2F
	0x0341C0B0 STRH W8, [X1 + 0x20]
	0x0341C0B4 CBZ X22, 0x341C430
	0x0341C0B8 MOV X0, X22
	0x0341C0BC MOV X2, X31
	0x0341C0C0 BL 0x322BC58
	0x0341C0C4 MOV X1, X21
	0x0341C0C8 MOV X2, X31
	0x0341C0CC BL 0x321B938
	0x0341C0D0 ADRP X8, 0xCE0000
	0x0341C0D4 LDR X8, [X8 + 0x3A0]
	0x0341C0D8 MOV X22, X0
	0x0341C0DC LDR X23, [X25 + 0x20]
	0x0341C0E0 LDR X0, [X8]
	0x0341C0E4 BL 0x1C16F10
	0x0341C0E8 MOV X21, X0
	0x0341C0EC MOV X1, X23
	0x0341C0F0 MOV X2, X31
	0x0341C0F4 BL 0x36281F8
	0x0341C0F8 CBZ X21, 0x341C434
	0x0341C0FC MOV X0, X21
	0x0341C100 MOV X1, X22
	0x0341C104 MOV X2, X31
	0x0341C108 BL 0x36288CC
	0x0341C10C MOV X0, X21
	0x0341C110 MOV X1, X20
	0x0341C114 MOV X2, X31
	0x0341C118 BL 0x3628980
	0x0341C11C MOV X0, X21
	0x0341C120 MOV X1, X31
	0x0341C124 BL 0x3628A38
	0x0341C128 ADRP X8, 0xD00000
	0x0341C12C ADRP X9, 0xCD8000
	0x0341C130 LDR X8, [X8 + 0x4D8]
	0x0341C134 LDR X9, [X9 + 0x6D0]
	0x0341C138 MOV X20, X0
	0x0341C13C LDR X21, [X8]
	0x0341C140 LDR X0, [X9]
	0x0341C144 BL 0x1C16F10
	0x0341C148 ADRP X8, 0xCD8000
	0x0341C14C LDR X8, [X8 + 0x6C0]
	0x0341C150 MOV X22, X0
	0x0341C154 LDR X1, [X8]
	0x0341C158 BL 0x2AA4804
	0x0341C15C LDR X0, [X19 + 0x40]
	0x0341C160 MOV X1, X31
	0x0341C164 BL 0x32277A8
	0x0341C168 TBNZ X0, 0x0, 0x341C214
	0x0341C16C MOV X0, X31
	0x0341C170 BL 0x3241948
	0x0341C174 ADRP X8, 0xCE0000
	0x0341C178 MOV X23, X0
	0x0341C17C LDP X0, X2, [X19 + 0x40]
	0x0341C180 LDR X8, [X8 + 0x988]
	0x0341C184 LDR X1, [X8]
	0x0341C188 MOV X3, X31
	0x0341C18C BL 0x32274B8
	0x0341C190 MOV X1, X0
	0x0341C194 CBZ X23, 0x341C448
	0x0341C198 LDR X8, [X23]
	0x0341C19C LDR X9, [X8 + 0x268]
	0x0341C1A0 LDR X2, [X8 + 0x270]
	0x0341C1A4 MOV X0, X23
	0x0341C1A8 BLR X9
	0x0341C1AC ADRP X8, 0xCE0000
	0x0341C1B0 LDR X8, [X8 + 0x9E8]
	0x0341C1B4 MOV X23, X0
	0x0341C1B8 LDR X0, [X8]
	0x0341C1BC LDR W8, [X0 + 0xE0]
	0x0341C1C0 CBNZ W8, 0x341C1C8
	0x0341C1C4 BL 0x1C16DFC
	0x0341C1C8 MOV X0, X23
	0x0341C1CC MOV X1, X31
	0x0341C1D0 BL 0x33225A0
	0x0341C1D4 MOV X1, X0
	0x0341C1D8 ADRP X8, 0xD12000
	0x0341C1DC LDR X8, [X8 + 0x850]
	0x0341C1E0 LDR X0, [X8]
	0x0341C1E4 MOV X2, X31
	0x0341C1E8 BL 0x321B938
	0x0341C1EC CBZ X22, 0x341C44C
	0x0341C1F0 ADRP X8, 0xD12000
	0x0341C1F4 LDR X8, [X8 + 0x7D0]
	0x0341C1F8 ADRP X9, 0xCD8000
	0x0341C1FC LDR X9, [X9 + 0x810]
	0x0341C200 MOV X2, X0
	0x0341C204 LDR X1, [X8]
	0x0341C208 LDR X3, [X9]
	0x0341C20C MOV X0, X22
	0x0341C210 BL 0x2AA5098
	0x0341C214 LDR X0, [X19 + 0x20]
	0x0341C218 MOV X1, X31
	0x0341C21C BL 0x3483BE4
	0x0341C220 MOV X23, X0
	0x0341C224 MOV X0, X31
	0x0341C228 BL 0x3241948
	0x0341C22C CBZ X0, 0x341C438
	0x0341C230 LDR X8, [X0]
	0x0341C234 LDR X9, [X8 + 0x268]
	0x0341C238 LDR X2, [X8 + 0x270]
	0x0341C23C MOV X1, X23
	0x0341C240 BLR X9
	0x0341C244 LDR X24, [X25 + 0x10]
	0x0341C248 CBZ X24, 0x341C43C
	0x0341C24C ADRP X10, 0xD12000
	0x0341C250 LDR X10, [X10 + 0x7B8]
	0x0341C254 LDR X8, [X24]
	0x0341C258 LDR W26, [X25 + 0x18]
	0x0341C25C LDP X27, X25, [X19 + 0x50]
	0x0341C260 LDR X1, [X10]
	0x0341C264 LDRH W9, [X8 + 0x12E]
	0x0341C268 MOV X23, X0
	0x0341C26C CBZ X9, 0x341C290
	0x0341C270 LDR X10, [X8 + 0xB0]
	0x0341C274 ADD X10, X10, 0x8
	0x0341C278 LDUR X11, [X10 - 0x8]
	0x0341C27C CMP X11, X1
	0x0341C280 B.EQ 0x341C2B8
	0x0341C284 SUBS X9, X9, 0x1
	0x0341C288 ADD X10, X10, 0x10
	0x0341C28C B.NE 0x341C278
	0x0341C290 MOVZ W2, 0x3
	0x0341C294 MOV X0, X24
	0x0341C298 BL 0x1C5C788
	0x0341C29C B 0x341C2C8
	0x0341C2A0 LDR X8, [X19 + 0x60]
	0x0341C2A4 MOVN W9, 0x0
	0x0341C2A8 STR X8, [X31 + 0x18]
	0x0341C2AC STR X31, [X19 + 0x60]
	0x0341C2B0 STR W9, [X19]
	0x0341C2B4 B 0x341C324
	0x0341C2B8 LDR W9, [X10]
	0x0341C2BC ADD W9, W9, 0x3
	0x0341C2C0 ADD X8, X8, W9, 0x4, SXTW
	0x0341C2C4 ADD X0, X8, 0x138
	0x0341C2C8 LDP X8, X9, [X0]
	0x0341C2CC MOV X0, X24
	0x0341C2D0 MOV X1, X21
	0x0341C2D4 MOV X2, X20
	0x0341C2D8 MOV X3, X22
	0x0341C2DC MOV X4, X23
	0x0341C2E0 MOV W5, W26
	0x0341C2E4 MOV X6, X27
	0x0341C2E8 MOV X7, X25
	0x0341C2EC STR X9, [X31]
	0x0341C2F0 BLR X8
	0x0341C2F4 CBZ X0, 0x341C440
	0x0341C2F8 ADRP X8, 0xCDA000
	0x0341C2FC LDR X8, [X8 + 0x1F8]
	0x0341C300 LDR X1, [X8]
	0x0341C304 BL 0x269F5D0
	0x0341C308 ADRP X8, 0xCDA000
	0x0341C30C LDR X8, [X8 + 0x1F0]
	0x0341C310 STR X0, [X31 + 0x18]
	0x0341C314 LDR X1, [X8]
	0x0341C318 ADD X0, X31, 0x18
	0x0341C31C BL 0x2677430
	0x0341C320 TBZ X0, 0x0, 0x341C380
	0x0341C324 ADRP X8, 0xCDA000
	0x0341C328 LDR X8, [X8 + 0x1E0]
	0x0341C32C ADD X0, X31, 0x18
	0x0341C330 LDR X1, [X8]
	0x0341C334 BL 0x2677474
	0x0341C338 ADRP X8, 0xD12000
	0x0341C33C LDR X8, [X8 + 0x828]
	0x0341C340 LDR X1, [X8]
	0x0341C344 BL 0x220E6DC
	0x0341C348 MOVN W8, 0x1
	0x0341C34C STR W8, [X19], #0x8
	0x0341C350 MOV X20, X0
	0x0341C354 LDR X0, [X28]
	0x0341C358 ADRP X21, 0xD12000
	0x0341C35C LDR W8, [X0 + 0xE0]
	0x0341C360 LDR X21, [X21 + 0x820]
	0x0341C364 CBNZ W8, 0x341C36C
	0x0341C368 BL 0x1C16DFC
	0x0341C36C LDR X2, [X21]
	0x0341C370 MOV X0, X19
	0x0341C374 MOV X1, X20
	0x0341C378 BL 0x26322B0
	0x0341C37C B 0x341C3B8
	0x0341C380 STR W31, [X19]
	0x0341C384 LDR X8, [X31 + 0x18]
	0x0341C388 STR X8, [X19 + 0x60]
	0x0341C38C LDR X0, [X28]
	0x0341C390 LDR W8, [X0 + 0xE0]
	0x0341C394 CBNZ W8, 0x341C39C
	0x0341C398 BL 0x1C16DFC
	0x0341C39C ADRP X8, 0xD12000
	0x0341C3A0 LDR X8, [X8 + 0xB50]
	0x0341C3A4 ADD X0, X19, 0x8
	0x0341C3A8 LDR X3, [X8]
	0x0341C3AC ADD X1, X31, 0x18
	0x0341C3B0 MOV X2, X19
	0x0341C3B4 BL 0x1FB26E4
	0x0341C3B8 LDP X20, X19, [X31 + 0x60]
	0x0341C3BC LDP X22, X21, [X31 + 0x50]
	0x0341C3C0 LDP X24, X23, [X31 + 0x40]
	0x0341C3C4 LDP X26, X25, [X31 + 0x30]
	0x0341C3C8 LDP X28, X27, [X31 + 0x20]
	0x0341C3CC LDR X30, [X31 + 0x10]
	0x0341C3D0 ADD X31, X31, 0x70
	0x0341C3D4 RET
	0x0341C3D8 ADRP X0, 0xCDF000
	0x0341C3DC LDR X0, [X0 + 0x578]
	0x0341C3E0 BL 0x1C16D08
	0x0341C3E4 BL 0x1C16F10
	0x0341C3E8 MOV X20, X0
	0x0341C3EC ADRP X0, 0xD12000
	0x0341C3F0 LDR X0, [X0 + 0x858]
	0x0341C3F4 BL 0x1C16D08
	0x0341C3F8 MOV X1, X0
	0x0341C3FC MOV X0, X20
	0x0341C400 MOV X2, X31
	0x0341C404 BL 0x3314A68
	0x0341C408 ADRP X0, 0xD12000
	0x0341C40C LDR X0, [X0 + 0xB60]
	0x0341C410 BL 0x1C16D08
	0x0341C414 MOV X1, X0
	0x0341C418 MOV X0, X20
	0x0341C41C BL 0x1C16DEC
	0x0341C420 BL 0x1C16F20
	0x0341C424 BL 0x1C16F20
	0x0341C428 BL 0x1C16F20
	0x0341C42C BL 0x1C16F28
	0x0341C430 BL 0x1C16F20
	0x0341C434 BL 0x1C16F20
	0x0341C438 BL 0x1C16F20
	0x0341C43C BL 0x1C16F20
	0x0341C440 BL 0x1C16F20
	0x0341C444 BL 0x1C16F20
	0x0341C448 BL 0x1C16F20
	0x0341C44C BL 0x1C16F20
	0x0341C450 B 0x341C4E4
	0x0341C454 B 0x341C4E4
	0x0341C458 B 0x341C4E4
	0x0341C45C B 0x341C4E4
	0x0341C460 B 0x341C4E4
	0x0341C464 B 0x341C4E4
	0x0341C468 B 0x341C4E4
	0x0341C46C B 0x341C4E4
	0x0341C470 B 0x341C4E4
	0x0341C474 B 0x341C4E4
	0x0341C478 B 0x341C4E4
	0x0341C47C B 0x341C4E4
	0x0341C480 B 0x341C4E4
	0x0341C484 B 0x341C4E4
	0x0341C488 B 0x341C4E4
	0x0341C48C B 0x341C4E4
	0x0341C490 B 0x341C4E4
	0x0341C494 B 0x341C4E4
	0x0341C498 B 0x341C4E4
	0x0341C49C B 0x341C4E4
	0x0341C4A0 B 0x341C4E4
	0x0341C4A4 B 0x341C4E4
	0x0341C4A8 B 0x341C4E4
	0x0341C4AC B 0x341C4E4
	0x0341C4B0 B 0x341C4E4
	0x0341C4B4 B 0x341C4E4
	0x0341C4B8 B 0x341C4E4
	0x0341C4BC B 0x341C4E4
	0x0341C4C0 B 0x341C4E4
	0x0341C4C4 B 0x341C4E4
	0x0341C4C8 B 0x341C4E4
	0x0341C4CC B 0x341C4E4
	0x0341C4D0 B 0x341C4E4
	0x0341C4D4 B 0x341C4E4
	0x0341C4D8 B 0x341C4E4
	0x0341C4DC B 0x341C4E4
	0x0341C4E0 B 0x341C4E4
	0x0341C4E4 MOV X20, X0
	0x0341C4E8 CMP W1, 0x1
	0x0341C4EC B.NE 0x341C588
	0x0341C4F0 MOV X0, X20
	0x0341C4F4 BL 0x3EB1AD0
	0x0341C4F8 MOV X20, X0
	0x0341C4FC ADRP X0, 0xCD7000
	0x0341C500 LDR X0, [X0 + 0x7D0]
	0x0341C504 BL 0x1C16D08
	0x0341C508 LDR X8, [X20]
	0x0341C50C LDR X1, [X8]
	0x0341C510 BL 0x1C17270
	0x0341C514 TBZ X0, 0x0, 0x341C560
	0x0341C518 LDR X20, [X20]
	0x0341C51C BL 0x3EB1AE0
	0x0341C520 MOVN W8, 0x1
	0x0341C524 STR W8, [X19], #0x8
	0x0341C528 ADRP X0, 0xD12000
	0x0341C52C LDR X0, [X0 + 0x320]
	0x0341C530 BL 0x1C16D08
	0x0341C534 LDR W8, [X0 + 0xE0]
	0x0341C538 CBNZ W8, 0x341C540
	0x0341C53C BL 0x1C16DFC
	0x0341C540 ADRP X0, 0xD12000
	0x0341C544 LDR X0, [X0 + 0x868]
	0x0341C548 BL 0x1C16D08
	0x0341C54C MOV X2, X0
	0x0341C550 MOV X0, X19
	0x0341C554 MOV X1, X20
	0x0341C558 BL 0x26324C8
	0x0341C55C B 0x341C3B8
	0x0341C560 MOVZ W0, 0x8
	0x0341C564 BL 0x3EB1AF0
	0x0341C568 LDR X8, [X20]
	0x0341C56C STR X8, [X0]
	0x0341C570 ADRP X1, 0xA98000
	0x0341C574 ADD X1, X1, 0xE58
	0x0341C578 MOV X2, X31
	0x0341C57C BL 0x3EB1B00
	0x0341C580 MOV X20, X0
	0x0341C584 BL 0x3EB1AE0
	0x0341C588 MOV X0, X20
	0x0341C58C BL 0x1D2C690
	0x0341C590 BL 0x1990590
	0x0341C594 STR X30, [X31 - 0x30]!
	0x0341C598 STP X22, X21, [X31 + 0x10]
	0x0341C59C STP X20, X19, [X31 + 0x20]
	0x0341C5A0 ADRP X22, 0xFC1000
	0x0341C5A4 ADRP X21, 0xD12000
	0x0341C5A8 LDRB W8, [X22 + 0x60A]
	0x0341C5AC LDR X21, [X21 + 0x320]
	0x0341C5B0 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFC3000
	014 Move W8, [X20+1541]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {100}
	020 Move X0, 0xD14000
	021 Move X0, [X0+2848]
	022 Call 0x1C17CF4
	023 Move X0, 0xD14000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xD14000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE2000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE2000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCDA000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDA000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDA000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xD14000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xD14000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0xD14000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDD000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDC000
	057 Move X0, [X0+480]
	058 Call 0x1C17CF4
	059 Move X0, 0xCDC000
	060 Move X0, [X0+496]
	061 Call 0x1C17CF4
	062 Move X0, 0xCDC000
	063 Move X0, [X0+504]
	064 Call 0x1C17CF4
	065 Move X0, 0xCE2000
	066 Move X0, [X0+928]
	067 Call 0x1C17CF4
	068 Move X0, 0xCDB000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0xD14000
	072 Move X0, [X0+2112]
	073 Call 0x1C17CF4
	074 Move X0, 0xD02000
	075 Move X0, [X0+1240]
	076 Call 0x1C17CF4
	077 Move X0, 0xD14000
	078 Move X0, [X0+2120]
	079 Call 0x1C17CF4
	080 Move X0, 0xCE2000
	081 Move X0, [X0+2440]
	082 Call 0x1C17CF4
	083 Move X0, 0xCE2000
	084 Move X0, [X0+1824]
	085 Call 0x1C17CF4
	086 Move X0, 0xD14000
	087 Move X0, [X0+2000]
	088 Call 0x1C17CF4
	089 Move X0, 0xD14000
	090 Move X0, [X0+2128]
	091 Call 0x1C17CF4
	092 Move X0, 0xD14000
	093 Move X0, [X0+2856]
	094 Call 0x1C17CF4
	095 Move X0, 0xCD9000
	096 Move X0, [X0+2440]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+1541], W8
	100 Move [X31+24], X31
	101 Move X28, 0xD14000
	102 Move W8, [X19]
	103 Move X28, [X28+800]
	104 Compare W8, 0
	105 JumpIfEqual {318}
	106 Move X8, [X19+32]
	107 Compare X8, 0
	108 JumpIfEqual {410}
	109 Move X8, 0xD14000
	110 Move X9, 0xCD9000
	111 Move X8, [X8+2856]
	112 Move X9, [X9+2440]
	113 Move X0, X19
	114 Move X25, [X19+56]
	115 Move X21, [X8]
	116 Move X20, [X9]
	117 Add X0, X0, 40
	118 Move W8, [X0]
	119 Compare W8, 0
	120 JumpIfEqual {140}
	121 Move X8, 0xD14000
	122 Move X8, [X8+2096]
	123 Move X1, [X8]
	124 Call Nullable`1<Boolean>.ToString, X0
	125 Compare X0, 0
	126 JumpIfEqual {437}
	127 Move X1, X31
	128 Call String.ToLower, X0
	129 Move X8, 0xD13000
	130 Move X8, [X8+2112]
	131 Move X9, 0xCE1000
	132 Move X9, [X9+1824]
	133 Move X2, X0
	134 Move X1, [X8]
	135 Move X3, [X9]
	136 Move X0, X20
	137 Move X4, X31
	138 Call String.Concat, X0, X1, X2, X3
	139 Move X20, X0
	140 Move X22, [X19+48]
	141 Compare X22, 0
	142 JumpIfEqual {164}
	143 Move X8, 0xCDA000
	144 Move X8, [X8+2600]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X22
	151 Move X1, X31
	152 Call Uri.EscapeDataString, X0
	153 Move X8, 0xD13000
	154 Move X8, [X8+2120]
	155 Move X9, 0xCE1000
	156 Move X9, [X9+1824]
	157 Move X2, X0
	158 Move X1, [X8]
	159 Move X3, [X9]
	160 Move X0, X20
	161 Move X4, X31
	162 Call String.Concat, X0, X1, X2, X3
	163 Move X20, X0
	164 Compare X25, 0
	165 JumpIfEqual {428}
	166 Move X0, [X25+32]
	167 Compare X0, 0
	168 JumpIfEqual {429}
	169 Move X1, X31
	170 Call Uri.get_AbsolutePath, X0
	171 Move X8, 0xCE1000
	172 Move X8, [X8+2264]
	173 Move X22, X0
	174 Move X0, [X8]
	175 Move W1, 1
	176 Call 0x1C17D6C
	177 Move X1, X0
	178 Compare X1, 0
	179 JumpIfEqual {430}
	180 Move W8, [X1+24]
	181 Compare W8, 0
	182 JumpIfEqual {431}
	183 Move W8, 47
	184 NotImplemented "Instruction STRH not yet implemented."
	185 Compare X22, 0
	186 JumpIfEqual {432}
	187 Move X0, X22
	188 Move X2, X31
	189 Call String.TrimEnd, X0, X1
	190 Move X1, X21
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Move X8, 0xCE1000
	194 Move X8, [X8+928]
	195 Move X22, X0
	196 Move X23, [X25+32]
	197 Move X0, [X8]
	198 Call 0x1C17F10
	199 Move X21, X0
	200 Move X1, X23
	201 Move X2, X31
	202 Call UriBuilder..ctor, X0, X1
	203 Compare X21, 0
	204 JumpIfEqual {433}
	205 Move X0, X21
	206 Move X1, X22
	207 Move X2, X31
	208 Call UriBuilder.set_Path, X0, X1
	209 Move X0, X21
	210 Move X1, X20
	211 Move X2, X31
	212 Call UriBuilder.set_Query, X0, X1
	213 Move X0, X21
	214 Move X1, X31
	215 Call UriBuilder.get_Uri, X0
	216 Move X8, 0xD01000
	217 Move X9, 0xCD9000
	218 Move X8, [X8+1240]
	219 Move X9, [X9+1744]
	220 Move X20, X0
	221 Move X21, [X8]
	222 Move X0, [X9]
	223 Call 0x1C17F10
	224 Move X8, 0xCD9000
	225 Move X8, [X8+1728]
	226 Move X22, X0
	227 Move X1, [X8]
	228 Call Dictionary`2<Object, Object>..ctor, X0
	229 Move X0, [X19+64]
	230 Move X1, X31
	231 Call String.IsNullOrEmpty, X0
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {282}
	236 Move X0, X31
	237 Call Encoding.get_UTF8
	238 Move X8, 0xCE1000
	239 Move X23, X0
	240 Move X0, [X19+64]
	241 Move X2, [X19+72]
	242 Move X8, [X8+2440]
	243 Move X1, [X8]
	244 Move X3, X31
	245 Call String.Concat, X0, X1, X2
	246 Move X1, X0
	247 Compare X23, 0
	248 JumpIfEqual {438}
	249 Move X8, [X23]
	250 Move X9, [X8+616]
	251 Move X2, [X8+624]
	252 Move X0, X23
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X8, 0xCE1000
	255 Move X8, [X8+2536]
	256 Move X23, X0
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X23
	263 Move X1, X31
	264 Call Convert.ToBase64String, X0
	265 Move X1, X0
	266 Move X8, 0xD13000
	267 Move X8, [X8+2128]
	268 Move X0, [X8]
	269 Move X2, X31
	270 Call String.Concat, X0, X1
	271 Compare X22, 0
	272 JumpIfEqual {439}
	273 Move X8, 0xD13000
	274 Move X8, [X8+2000]
	275 Move X9, 0xCD9000
	276 Move X9, [X9+2064]
	277 Move X2, X0
	278 Move X1, [X8]
	279 Move X3, [X9]
	280 Move X0, X22
	281 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	282 Move X0, [X19+32]
	283 Move X1, X31
	284 Call JsonWriter.ToJson, X0
	285 Move X23, X0
	286 Move X0, X31
	287 Call Encoding.get_UTF8
	288 Compare X0, 0
	289 JumpIfEqual {434}
	290 Move X8, [X0]
	291 Move X9, [X8+616]
	292 Move X2, [X8+624]
	293 Move X1, X23
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X24, [X25+16]
	296 Compare X24, 0
	297 JumpIfEqual {435}
	298 Move X10, 0xD13000
	299 Move X10, [X10+1976]
	300 Move X8, [X24]
	301 Move W26, [X25+24]
	302 Move X27, [X19+80]
	303 Move X25, [X19+88]
	304 Move X1, [X10]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Move X23, X0
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 3
	316 Move X0, X24
	317 Call 0x1C5D788
	318 Move X8, [X19+96]
	319 Move TEMP, 0
	320 Not TEMP
	321 Move W9, TEMP
	322 Move [X31+24], X8
	323 Move [X19+96], X31
	324 Move [X19], W9
	325 Move W9, [X10]
	326 Add W9, W9, 3
	327 Add X8, X8, W9
	328 Add X0, X8, 312
	329 Move X8, [X0]
	330 Move X9, [X0+8]
	331 Move X0, X24
	332 Move X1, X21
	333 Move X2, X20
	334 Move X3, X22
	335 Move X4, X23
	336 Move W5, W26
	337 Move X6, X27
	338 Move X7, X25
	339 Move [X31], X9
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Compare X0, 0
	342 JumpIfEqual {436}
	343 Move X8, 0xCDB000
	344 Move X8, [X8+504]
	345 Move X1, [X8]
	346 Call Task`1<Object>.GetAwaiter, X0
	347 Move X8, 0xCDB000
	348 Move X8, [X8+496]
	349 Move [X31+24], X0
	350 Move X1, [X8]
	351 Add X0, X31, 24
	352 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {382}
	357 Move X8, 0xCDB000
	358 Move X8, [X8+480]
	359 Add X0, X31, 24
	360 Move X1, [X8]
	361 Call TaskAwaiter`1<Object>.GetResult, X0
	362 Move X8, 0xD13000
	363 Move X8, [X8+2088]
	364 Move X1, [X8]
	365 Call JsonParser.FromJson, X0
	366 Move TEMP, 1
	367 Not TEMP
	368 Move W8, TEMP
	369 Move [X19+8], W8
	370 Move X20, X0
	371 Move X0, [X28]
	372 Move X21, 0xD13000
	373 Move W8, [X0+224]
	374 Move X21, [X21+2080]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X2, [X21]
	379 Move X0, X19
	380 Move X1, X20
	381 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	382 Move [X19], W31
	383 Move X8, [X31+24]
	384 Move [X19+96], X8
	385 Move X0, [X28]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X8, 0xD13000
	391 Move X8, [X8+2848]
	392 Add X0, X19, 8
	393 Move X3, [X8]
	394 Add X1, X31, 24
	395 Move X2, X19
	396 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	397 Move X20, [X31+96]
	398 Move X19, [X31+104]
	399 Move X22, [X31+80]
	400 Move X21, [X31+88]
	401 Move X24, [X31+64]
	402 Move X23, [X31+72]
	403 Move X26, [X31+48]
	404 Move X25, [X31+56]
	405 Move X28, [X31+32]
	406 Move X27, [X31+40]
	407 Move X30, [X31+16]
	408 Add X31, X31, 112
	409 Return 
	410 Move X0, 0xCE0000
	411 Move X0, [X0+1400]
	412 Call 0x1C17D08
	413 Call 0x1C17F10
	414 Move X20, X0
	415 Move X0, 0xD13000
	416 Move X0, [X0+2136]
	417 Call 0x1C17D08
	418 Move X1, X0
	419 Move X0, X20
	420 Move X2, X31
	421 Call ArgumentException..ctor, X0, X1
	422 Move X0, 0xD13000
	423 Move X0, [X0+2864]
	424 Call 0x1C17D08
	425 Move X1, X0
	426 Move X0, X20
	427 Call 0x1C17DEC
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Call 0x1C17F28
	432 Call 0x1C17F20
	433 Call 0x1C17F20
	434 Call 0x1C17F20
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Move X20, X0
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, X20
	443 Call 0x3EB2AD0
	444 Move X20, X0
	445 Move X0, 0xCD8000
	446 Move X0, [X0+2000]
	447 Call 0x1C17D08
	448 Move X8, [X20]
	449 Move X1, [X8]
	450 Call 0x1C18270
	451 Move TEMP, X0
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfNotEqual {475}
	455 Move X20, [X20]
	456 Call 0x3EB2AE0
	457 Move TEMP, 1
	458 Not TEMP
	459 Move W8, TEMP
	460 Move [X19+8], W8
	461 Move X0, 0xD13000
	462 Move X0, [X0+800]
	463 Call 0x1C17D08
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Move X0, 0xD13000
	469 Move X0, [X0+2152]
	470 Call 0x1C17D08
	471 Move X2, X0
	472 Move X0, X19
	473 Move X1, X20
	474 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	475 Move W0, 8
	476 Call 0x3EB2AF0
	477 Move X8, [X20]
	478 Move [X0], X8
	479 Move X1, 0xA99000
	480 Add X1, X1, 3672
	481 Move X2, X31
	482 Call 0x3EB2B00
	483 Move X20, X0
	484 Call 0x3EB2AE0
	485 Move X0, X20
	486 Call 0x1D2D690
	487 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0341C5B4 MOV X20, X0
	0x0341C5B8 TBNZ X8, 0x0, 0x341C5DC
	0x0341C5BC ADRP X0, 0xD12000
	0x0341C5C0 LDR X0, [X0 + 0x870]
	0x0341C5C4 BL 0x1C16CF4
	0x0341C5C8 ADRP X0, 0xD12000
	0x0341C5CC LDR X0, [X0 + 0x320]
	0x0341C5D0 BL 0x1C16CF4
	0x0341C5D4 MOVZ W8, 0x1
	0x0341C5D8 STRB W8, [X22 + 0x60A]
	0x0341C5DC LDR X0, [X21]
	0x0341C5E0 ADRP X21, 0xD12000
	0x0341C5E4 LDR W8, [X0 + 0xE0]
	0x0341C5E8 LDR X21, [X21 + 0x870]
	0x0341C5EC CBNZ W8, 0x341C5F4
	0x0341C5F0 BL 0x1C16DFC
	0x0341C5F4 LDR X2, [X21]
	0x0341C5F8 ADD X0, X20, 0x8
	0x0341C5FC MOV X1, X19
	0x0341C600 LDP X20, X19, [X31 + 0x20]
	0x0341C604 LDP X22, X21, [X31 + 0x10]
	0x0341C608 LDR X30, [X31], #0x30
	0x0341C60C B 0x2632228
	0x0341C610 SUB X31, X31, 0x70
	0x0341C614 STR X30, [X31 + 0x10]
	0x0341C618 STP X28, X27, [X31 + 0x20]
	0x0341C61C STP X26, X25, [X31 + 0x30]
	0x0341C620 STP X24, X23, [X31 + 0x40]
	0x0341C624 STP X22, X21, [X31 + 0x50]
	0x0341C628 STP X20, X19, [X31 + 0x60]
	0x0341C62C ADRP X20, 0xFC1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFC2000
	007 Move X21, 0xD13000
	008 Move W8, [X22+1542]
	009 Move X21, [X21+800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD13000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0xD13000
	020 Move X0, [X0+800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1542], W8
	024 Move X0, [X21]
	025 Move X21, 0xD13000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2160]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

