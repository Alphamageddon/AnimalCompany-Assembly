Type: Nakama.ApiClient

Method: System.Int32 get_Timeout()

Disassembly:
	0x0340EB24 ADRP X0, 0xCE8000
	0x0340EB28 LDR X0, [X0 + 0x280]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_Timeout(System.Int32 value)

Disassembly:
	0x0340EB2C BL 0x1C16CF4
	0x0340EB30 MOVZ W8, 0x1

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.Void .ctor(System.Uri baseUri, Nakama.IHttpAdapter httpAdapter, System.Int32 timeout = 10)

Disassembly:
	0x0340EB34 STRB W8, [X25 + 0x57B]
	0x0340EB38 LDR X0, [X24]
	0x0340EB3C MOVI V0.2D, 0x0
	0x0340EB40 STP V0, V0, [X31 + 0x50]
	0x0340EB44 STP V0, V0, [X31 + 0x30]
	0x0340EB48 STR V0, [X31 + 0x2]
	0x0340EB4C ADRP X24, 0xD20000
	0x0340EB50 LDR W8, [X0 + 0xE0]
	0x0340EB54 LDR X24, [X24 + 0x388]
	0x0340EB58 CBNZ W8, 0x340EB60
	0x0340EB5C BL 0x1C16DFC
	0x0340EB60 ADD X8, X31, 0x8
	0x0340EB64 MOV X0, X31
	0x0340EB68 BL 0x32C4770
	0x0340EB6C LDUR V0, [X31 + 0x8]
	0x0340EB70 LDR X9, [X31 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move W19, W3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+32], X21
	013 Move [X22+16], X20
	014 Move [X22+24], W19
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.Threading.Tasks.Task HealthcheckAsync(System.String bearerToken, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340EB74 LDR X2, [X24]
	0x0340EB78 ADD X8, X31, 0x20
	0x0340EB7C STP X21, X20, [X31 + 0x58]
	0x0340EB80 ORR X20, X8, 0xF
	0x0340EB84 MOVN W10, 0x0
	0x0340EB88 ADD X1, X31, 0x20
	0x0340EB8C MOV X0, X20
	0x0340EB90 STP X23, X22, [X31 + 0x48]
	0x0340EB94 STUR V0, [X31 + 0x28]
	0x0340EB98 STP X9, X19, [X31 + 0x38]
	0x0340EB9C STR W10, [X31 + 0x20]
	0x0340EBA0 BL 0x218E0B8
	0x0340EBA4 MOV X0, X20
	0x0340EBA8 MOV X1, X31
	0x0340EBAC BL 0x32C47F8
	0x0340EBB0 LDP X20, X19, [X31 + 0xA0]
	0x0340EBB4 LDP X22, X21, [X31 + 0x90]
	0x0340EBB8 LDP X24, X23, [X31 + 0x80]
	0x0340EBBC LDP X30, X25, [X31 + 0x70]
	0x0340EBC0 ADD X31, X31, 0xB0
	0x0340EBC4 RET
	0x0340EBC8 SUB X31, X31, 0xB0
	0x0340EBCC STP X30, X25, [X31 + 0x70]
	0x0340EBD0 STP X24, X23, [X31 + 0x80]
	0x0340EBD4 STP X22, X21, [X31 + 0x90]
	0x0340EBD8 STP X20, X19, [X31 + 0xA0]
	0x0340EBDC ADRP X25, 0xFCF000
	0x0340EBE0 ADRP X24, 0xCE8000
	0x0340EBE4 LDRB W8, [X25 + 0x57C]
	0x0340EBE8 LDR X24, [X24 + 0x280]
	0x0340EBEC MOV X20, X4
	0x0340EBF0 MOV X21, X3
	0x0340EBF4 MOV X19, X2
	0x0340EBF8 MOV X22, X1
	0x0340EBFC MOV X23, X0
	0x0340EC00 TBNZ X8, 0x0, 0x340EC24
	0x0340EC04 ADRP X0, 0xD20000
	0x0340EC08 LDR X0, [X0 + 0x390]
	0x0340EC0C BL 0x1C16CF4
	0x0340EC10 ADRP X0, 0xCE8000
	0x0340EC14 LDR X0, [X0 + 0x280]
	0x0340EC18 BL 0x1C16CF4
	0x0340EC1C MOVZ W8, 0x1
	0x0340EC20 STRB W8, [X25 + 0x57C]
	0x0340EC24 LDR X0, [X24]
	0x0340EC28 MOVI V0.2D, 0x0
	0x0340EC2C STP V0, V0, [X31 + 0x50]
	0x0340EC30 STP V0, V0, [X31 + 0x30]
	0x0340EC34 STR V0, [X31 + 0x2]
	0x0340EC38 ADRP X24, 0xD20000
	0x0340EC3C LDR W8, [X0 + 0xE0]
	0x0340EC40 LDR X24, [X24 + 0x390]
	0x0340EC44 CBNZ W8, 0x340EC4C
	0x0340EC48 BL 0x1C16DFC
	0x0340EC4C ADD X8, X31, 0x8
	0x0340EC50 MOV X0, X31
	0x0340EC54 BL 0x32C4770
	0x0340EC58 LDUR V0, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xFD0000
	010 Move X23, 0xCE9000
	011 Move W8, [X24+1389]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD21000
	022 Move X0, [X0+744]
	023 Call 0x1C17CF4
	024 Move X0, 0xCE9000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1389], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xD21000
	037 Move W8, [X0+224]
	038 Move X23, [X23+744]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+88], X20
	050 Or X20, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X20
	056 Move [X31+72], X22
	057 Move [X31+80], X21
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task DeleteAccountAsync(System.String bearerToken, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340EC5C LDR X9, [X31 + 0x18]
	0x0340EC60 LDR X2, [X24]
	0x0340EC64 ADD X8, X31, 0x20
	0x0340EC68 STP X21, X20, [X31 + 0x58]
	0x0340EC6C ORR X20, X8, 0xF
	0x0340EC70 MOVN W10, 0x0
	0x0340EC74 ADD X1, X31, 0x20
	0x0340EC78 MOV X0, X20
	0x0340EC7C STP X23, X22, [X31 + 0x48]
	0x0340EC80 STUR V0, [X31 + 0x28]
	0x0340EC84 STP X9, X19, [X31 + 0x38]
	0x0340EC88 STR W10, [X31 + 0x20]
	0x0340EC8C BL 0x218E1B8
	0x0340EC90 MOV X0, X20
	0x0340EC94 MOV X1, X31
	0x0340EC98 BL 0x32C47F8
	0x0340EC9C LDP X20, X19, [X31 + 0xA0]
	0x0340ECA0 LDP X22, X21, [X31 + 0x90]
	0x0340ECA4 LDP X24, X23, [X31 + 0x80]
	0x0340ECA8 LDP X30, X25, [X31 + 0x70]
	0x0340ECAC ADD X31, X31, 0xB0
	0x0340ECB0 RET
	0x0340ECB4 SUB X31, X31, 0xB0
	0x0340ECB8 STP X30, X25, [X31 + 0x70]
	0x0340ECBC STP X24, X23, [X31 + 0x80]
	0x0340ECC0 STP X22, X21, [X31 + 0x90]
	0x0340ECC4 STP X20, X19, [X31 + 0xA0]
	0x0340ECC8 ADRP X25, 0xFCF000
	0x0340ECCC ADRP X24, 0xCE8000
	0x0340ECD0 LDRB W8, [X25 + 0x57D]
	0x0340ECD4 LDR X24, [X24 + 0x280]
	0x0340ECD8 MOV X20, X4
	0x0340ECDC MOV X21, X3
	0x0340ECE0 MOV X19, X2
	0x0340ECE4 MOV X22, X1
	0x0340ECE8 MOV X23, X0
	0x0340ECEC TBNZ X8, 0x0, 0x340ED10
	0x0340ECF0 ADRP X0, 0xD20000
	0x0340ECF4 LDR X0, [X0 + 0x398]
	0x0340ECF8 BL 0x1C16CF4
	0x0340ECFC ADRP X0, 0xCE8000
	0x0340ED00 LDR X0, [X0 + 0x280]
	0x0340ED04 BL 0x1C16CF4
	0x0340ED08 MOVZ W8, 0x1
	0x0340ED0C STRB W8, [X25 + 0x57D]
	0x0340ED10 LDR X0, [X24]
	0x0340ED14 MOVI V0.2D, 0x0
	0x0340ED18 STP V0, V0, [X31 + 0x50]
	0x0340ED1C STP V0, V0, [X31 + 0x30]
	0x0340ED20 STR V0, [X31 + 0x2]
	0x0340ED24 ADRP X24, 0xD20000
	0x0340ED28 LDR W8, [X0 + 0xE0]
	0x0340ED2C LDR X24, [X24 + 0x398]
	0x0340ED30 CBNZ W8, 0x340ED38
	0x0340ED34 BL 0x1C16DFC
	0x0340ED38 ADD X8, X31, 0x8
	0x0340ED3C MOV X0, X31
	0x0340ED40 BL 0x32C4770

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xFD0000
	010 Move X23, 0xCE9000
	011 Move W8, [X24+1390]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xD21000
	022 Move X0, [X0+752]
	023 Call 0x1C17CF4
	024 Move X0, 0xCE9000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1390], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xD21000
	037 Move W8, [X0+224]
	038 Move X23, [X23+752]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+88], X20
	050 Or X20, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X20
	056 Move [X31+72], X22
	057 Move [X31+80], X21
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiAccount> GetAccountAsync(System.String bearerToken, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340ED44 LDUR V0, [X31 + 0x8]
	0x0340ED48 LDR X9, [X31 + 0x18]
	0x0340ED4C LDR X2, [X24]
	0x0340ED50 ADD X8, X31, 0x20
	0x0340ED54 STP X21, X20, [X31 + 0x58]
	0x0340ED58 ORR X20, X8, 0xF
	0x0340ED5C MOVN W10, 0x0
	0x0340ED60 ADD X1, X31, 0x20
	0x0340ED64 MOV X0, X20
	0x0340ED68 STP X23, X22, [X31 + 0x48]
	0x0340ED6C STUR V0, [X31 + 0x28]
	0x0340ED70 STP X9, X19, [X31 + 0x38]
	0x0340ED74 STR W10, [X31 + 0x20]
	0x0340ED78 BL 0x218E2B8
	0x0340ED7C MOV X0, X20
	0x0340ED80 MOV X1, X31
	0x0340ED84 BL 0x32C47F8
	0x0340ED88 LDP X20, X19, [X31 + 0xA0]
	0x0340ED8C LDP X22, X21, [X31 + 0x90]
	0x0340ED90 LDP X24, X23, [X31 + 0x80]
	0x0340ED94 LDP X30, X25, [X31 + 0x70]
	0x0340ED98 ADD X31, X31, 0xB0
	0x0340ED9C RET
	0x0340EDA0 SUB X31, X31, 0xD0
	0x0340EDA4 STR X30, [X31 + 0x80]
	0x0340EDA8 STP X26, X25, [X31 + 0x90]
	0x0340EDAC STP X24, X23, [X31 + 0xA0]
	0x0340EDB0 STP X22, X21, [X31 + 0xB0]
	0x0340EDB4 STP X20, X19, [X31 + 0xC0]
	0x0340EDB8 ADRP X26, 0xFCF000
	0x0340EDBC ADRP X25, 0xCE8000
	0x0340EDC0 LDRB W8, [X26 + 0x57E]
	0x0340EDC4 LDR X25, [X25 + 0x280]
	0x0340EDC8 MOV X20, X5
	0x0340EDCC MOV X21, X4
	0x0340EDD0 MOV X22, X3
	0x0340EDD4 MOV X19, X2
	0x0340EDD8 MOV X23, X1
	0x0340EDDC MOV X24, X0
	0x0340EDE0 TBNZ X8, 0x0, 0x340EE04
	0x0340EDE4 ADRP X0, 0xD20000
	0x0340EDE8 LDR X0, [X0 + 0x3A0]
	0x0340EDEC BL 0x1C16CF4
	0x0340EDF0 ADRP X0, 0xCE8000
	0x0340EDF4 LDR X0, [X0 + 0x280]
	0x0340EDF8 BL 0x1C16CF4
	0x0340EDFC MOVZ W8, 0x1
	0x0340EE00 STRB W8, [X26 + 0x57E]
	0x0340EE04 LDR X0, [X25]
	0x0340EE08 MOVI V0.2D, 0x0
	0x0340EE0C STR X31, [X31 + 0x70]
	0x0340EE10 STP V0, V0, [X31 + 0x50]
	0x0340EE14 STP V0, V0, [X31 + 0x30]
	0x0340EE18 STR V0, [X31 + 0x2]
	0x0340EE1C ADRP X25, 0xD20000
	0x0340EE20 LDR W8, [X0 + 0xE0]
	0x0340EE24 LDR X25, [X25 + 0x3A0]
	0x0340EE28 CBNZ W8, 0x340EE30
	0x0340EE2C BL 0x1C16DFC
	0x0340EE30 ADD X8, X31, 0x8
	0x0340EE34 MOV X0, X31
	0x0340EE38 BL 0x32C4770
	0x0340EE3C LDUR V0, [X31 + 0x8]
	0x0340EE40 LDR X9, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0xFD0000
	011 Move X23, 0xD21000
	012 Move W8, [X24+1391]
	013 Move X23, [X23+760]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xD21000
	023 Move X0, [X0+768]
	024 Call 0x1C17CF4
	025 Move X0, 0xD21000
	026 Move X0, [X0+776]
	027 Call 0x1C17CF4
	028 Move X0, 0xD21000
	029 Move X0, [X0+784]
	030 Call 0x1C17CF4
	031 Move X0, 0xD21000
	032 Move X0, [X0+760]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+1391], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+64], X31
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X23, 0xD21000
	044 Move X25, 0xD21000
	045 Move X24, 0xD21000
	046 Move W8, [X0+224]
	047 Move X23, [X23+768]
	048 Move X25, [X25+776]
	049 Move X24, [X24+784]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Add X8, X31, 0
	055 Or X23, X8, 15
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 0
	063 Move X0, X23
	064 Move [X31+32], X22
	065 Move [X31+40], X21
	066 Move [X31+48], X20
	067 Move [X31+56], X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+128]
	074 Move X19, [X31+136]
	075 Move X22, [X31+112]
	076 Move X21, [X31+120]
	077 Move X24, [X31+96]
	078 Move X23, [X31+104]
	079 Move X30, [X31+80]
	080 Move X25, [X31+88]
	081 Add X31, X31, 144
	082 Return X0

Method: System.Threading.Tasks.Task UpdateAccountAsync(System.String bearerToken, Nakama.ApiUpdateAccountRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340EE44 LDR X2, [X25]
	0x0340EE48 ADD X8, X31, 0x20
	0x0340EE4C STP X21, X20, [X31 + 0x60]
	0x0340EE50 ORR X20, X8, 0xF
	0x0340EE54 MOVN W10, 0x0
	0x0340EE58 ADD X1, X31, 0x20
	0x0340EE5C MOV X0, X20
	0x0340EE60 STP X24, X23, [X31 + 0x50]
	0x0340EE64 STRH W22, [X31 + 0x48]
	0x0340EE68 STUR V0, [X31 + 0x28]
	0x0340EE6C STP X9, X19, [X31 + 0x38]
	0x0340EE70 STR W10, [X31 + 0x20]
	0x0340EE74 BL 0x218E3B8
	0x0340EE78 MOV X0, X20
	0x0340EE7C MOV X1, X31
	0x0340EE80 BL 0x32C47F8
	0x0340EE84 LDP X20, X19, [X31 + 0xC0]
	0x0340EE88 LDP X22, X21, [X31 + 0xB0]
	0x0340EE8C LDP X24, X23, [X31 + 0xA0]
	0x0340EE90 LDP X26, X25, [X31 + 0x90]
	0x0340EE94 LDR X30, [X31 + 0x80]
	0x0340EE98 ADD X31, X31, 0xD0
	0x0340EE9C RET
	0x0340EEA0 SUB X31, X31, 0xB0
	0x0340EEA4 STP X30, X25, [X31 + 0x70]
	0x0340EEA8 STP X24, X23, [X31 + 0x80]
	0x0340EEAC STP X22, X21, [X31 + 0x90]
	0x0340EEB0 STP X20, X19, [X31 + 0xA0]
	0x0340EEB4 ADRP X25, 0xFCF000
	0x0340EEB8 ADRP X24, 0xCE8000
	0x0340EEBC LDRB W8, [X25 + 0x57F]
	0x0340EEC0 LDR X24, [X24 + 0x280]
	0x0340EEC4 MOV X20, X4
	0x0340EEC8 MOV X21, X3
	0x0340EECC MOV X19, X2
	0x0340EED0 MOV X22, X1
	0x0340EED4 MOV X23, X0
	0x0340EED8 TBNZ X8, 0x0, 0x340EEFC
	0x0340EEDC ADRP X0, 0xD20000
	0x0340EEE0 LDR X0, [X0 + 0x3A8]
	0x0340EEE4 BL 0x1C16CF4
	0x0340EEE8 ADRP X0, 0xCE8000
	0x0340EEEC LDR X0, [X0 + 0x280]
	0x0340EEF0 BL 0x1C16CF4
	0x0340EEF4 MOVZ W8, 0x1
	0x0340EEF8 STRB W8, [X25 + 0x57F]
	0x0340EEFC LDR X0, [X24]
	0x0340EF00 MOVI V0.2D, 0x0
	0x0340EF04 STP V0, V0, [X31 + 0x50]
	0x0340EF08 STP V0, V0, [X31 + 0x30]
	0x0340EF0C STR V0, [X31 + 0x2]
	0x0340EF10 ADRP X24, 0xD20000
	0x0340EF14 LDR W8, [X0 + 0xE0]
	0x0340EF18 LDR X24, [X24 + 0x3A8]
	0x0340EF1C CBNZ W8, 0x340EF24
	0x0340EF20 BL 0x1C16DFC
	0x0340EF24 ADD X8, X31, 0x8
	0x0340EF28 MOV X0, X31
	0x0340EF2C BL 0x32C4770

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFD0000
	011 Move X24, 0xCE9000
	012 Move W8, [X25+1392]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD21000
	024 Move X0, [X0+792]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE9000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1392], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD21000
	039 Move W8, [X0+224]
	040 Move X24, [X24+792]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateAppleAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountApple account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340EF30 LDUR V0, [X31 + 0x8]
	0x0340EF34 LDR X9, [X31 + 0x18]
	0x0340EF38 LDR X2, [X24]
	0x0340EF3C ADD X8, X31, 0x20
	0x0340EF40 STP X21, X20, [X31 + 0x58]
	0x0340EF44 ORR X20, X8, 0xF
	0x0340EF48 MOVN W10, 0x0
	0x0340EF4C ADD X1, X31, 0x20
	0x0340EF50 MOV X0, X20
	0x0340EF54 STP X23, X22, [X31 + 0x48]
	0x0340EF58 STUR V0, [X31 + 0x28]
	0x0340EF5C STP X9, X19, [X31 + 0x38]
	0x0340EF60 STR W10, [X31 + 0x20]
	0x0340EF64 BL 0x218E4B8
	0x0340EF68 MOV X0, X20
	0x0340EF6C MOV X1, X31
	0x0340EF70 BL 0x32C47F8
	0x0340EF74 LDP X20, X19, [X31 + 0xA0]
	0x0340EF78 LDP X22, X21, [X31 + 0x90]
	0x0340EF7C LDP X24, X23, [X31 + 0x80]
	0x0340EF80 LDP X30, X25, [X31 + 0x70]
	0x0340EF84 ADD X31, X31, 0xB0
	0x0340EF88 RET
	0x0340EF8C SUB X31, X31, 0xB0
	0x0340EF90 STP X30, X25, [X31 + 0x70]
	0x0340EF94 STP X24, X23, [X31 + 0x80]
	0x0340EF98 STP X22, X21, [X31 + 0x90]
	0x0340EF9C STP X20, X19, [X31 + 0xA0]
	0x0340EFA0 ADRP X25, 0xFCF000
	0x0340EFA4 ADRP X24, 0xCE8000
	0x0340EFA8 LDRB W8, [X25 + 0x580]
	0x0340EFAC LDR X24, [X24 + 0x280]
	0x0340EFB0 MOV X20, X4
	0x0340EFB4 MOV X21, X3
	0x0340EFB8 MOV X19, X2
	0x0340EFBC MOV X22, X1
	0x0340EFC0 MOV X23, X0
	0x0340EFC4 TBNZ X8, 0x0, 0x340EFE8
	0x0340EFC8 ADRP X0, 0xD20000
	0x0340EFCC LDR X0, [X0 + 0x3B0]
	0x0340EFD0 BL 0x1C16CF4
	0x0340EFD4 ADRP X0, 0xCE8000
	0x0340EFD8 LDR X0, [X0 + 0x280]
	0x0340EFDC BL 0x1C16CF4
	0x0340EFE0 MOVZ W8, 0x1
	0x0340EFE4 STRB W8, [X25 + 0x580]
	0x0340EFE8 LDR X0, [X24]
	0x0340EFEC MOVI V0.2D, 0x0
	0x0340EFF0 STP V0, V0, [X31 + 0x50]
	0x0340EFF4 STP V0, V0, [X31 + 0x30]
	0x0340EFF8 STR V0, [X31 + 0x2]
	0x0340EFFC ADRP X24, 0xD20000
	0x0340F000 LDR W8, [X0 + 0xE0]
	0x0340F004 B 0x3EB18AC
	0x0340F008 CBNZ W8, 0x340F010
	0x0340F00C BL 0x1C16DFC
	0x0340F010 ADD X8, X31, 0x8
	0x0340F014 MOV X0, X31
	0x0340F018 BL 0x32C4770
	0x0340F01C LDUR V0, [X31 + 0x8]
	0x0340F020 LDR X9, [X31 + 0x18]
	0x0340F024 LDR X2, [X24]
	0x0340F028 ADD X8, X31, 0x20
	0x0340F02C STP X21, X20, [X31 + 0x58]
	0x0340F030 ORR X20, X8, 0xF
	0x0340F034 MOVN W10, 0x0
	0x0340F038 ADD X1, X31, 0x20
	0x0340F03C MOV X0, X20
	0x0340F040 STP X23, X22, [X31 + 0x48]
	0x0340F044 STUR V0, [X31 + 0x28]
	0x0340F048 STP X9, X19, [X31 + 0x38]
	0x0340F04C STR W10, [X31 + 0x20]
	0x0340F050 BL 0x218E5B8
	0x0340F054 MOV X0, X20
	0x0340F058 MOV X1, X31
	0x0340F05C BL 0x32C47F8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFD0000
	015 Move X27, 0xD21000
	016 Move W8, [X28+1393]
	017 Move X27, [X27+800]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X25, X2
	024 Move X26, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD21000
	031 Move X0, [X0+808]
	032 Call 0x1C17CF4
	033 Move X0, 0xD21000
	034 Move X0, [X0+816]
	035 Call 0x1C17CF4
	036 Move X0, 0xD21000
	037 Move X0, [X0+824]
	038 Call 0x1C17CF4
	039 Move X0, 0xD21000
	040 Move X0, [X0+800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1393], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD21000
	054 Move X29, 0xD21000
	055 Move X28, 0xD21000
	056 Move W8, [X0+224]
	057 Move X27, [X27+808]
	058 Move X29, [X29+816]
	059 Move X28, [X28+824]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X23
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X31+48], X21
	079 Move [X31+56], X24
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateCustomAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountCustom account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F060 LDP X20, X19, [X31 + 0xA0]
	0x0340F064 LDP X22, X21, [X31 + 0x90]
	0x0340F068 LDP X24, X23, [X31 + 0x80]
	0x0340F06C LDP X30, X25, [X31 + 0x70]
	0x0340F070 ADD X31, X31, 0xB0
	0x0340F074 RET
	0x0340F078 SUB X31, X31, 0xB0
	0x0340F07C STP X30, X25, [X31 + 0x70]
	0x0340F080 STP X24, X23, [X31 + 0x80]
	0x0340F084 STP X22, X21, [X31 + 0x90]
	0x0340F088 STP X20, X19, [X31 + 0xA0]
	0x0340F08C ADRP X25, 0xFCE000
	0x0340F090 ADRP X24, 0xCE7000
	0x0340F094 LDRB W8, [X25 + 0x581]
	0x0340F098 LDR X24, [X24 + 0x280]
	0x0340F09C MOV X20, X4
	0x0340F0A0 MOV X21, X3
	0x0340F0A4 MOV X19, X2
	0x0340F0A8 MOV X22, X1
	0x0340F0AC MOV X23, X0
	0x0340F0B0 TBNZ X8, 0x0, 0x340F0D4
	0x0340F0B4 ADRP X0, 0xD1F000
	0x0340F0B8 LDR X0, [X0 + 0x3B8]
	0x0340F0BC BL 0x1C16CF4
	0x0340F0C0 ADRP X0, 0xCE7000
	0x0340F0C4 LDR X0, [X0 + 0x280]
	0x0340F0C8 BL 0x1C16CF4
	0x0340F0CC MOVZ W8, 0x1
	0x0340F0D0 STRB W8, [X25 + 0x581]
	0x0340F0D4 LDR X0, [X24]
	0x0340F0D8 MOVI V0.2D, 0x0
	0x0340F0DC STP V0, V0, [X31 + 0x50]
	0x0340F0E0 STP V0, V0, [X31 + 0x30]
	0x0340F0E4 STR V0, [X31 + 0x2]
	0x0340F0E8 ADRP X24, 0xD1F000
	0x0340F0EC LDR W8, [X0 + 0xE0]
	0x0340F0F0 LDR X24, [X24 + 0x3B8]
	0x0340F0F4 CBNZ W8, 0x340F0FC
	0x0340F0F8 BL 0x1C16DFC
	0x0340F0FC ADD X8, X31, 0x8
	0x0340F100 MOV X0, X31
	0x0340F104 BL 0x32C4770
	0x0340F108 LDUR V0, [X31 + 0x8]
	0x0340F10C LDR X9, [X31 + 0x18]
	0x0340F110 LDR X2, [X24]
	0x0340F114 ADD X8, X31, 0x20
	0x0340F118 STP X21, X20, [X31 + 0x58]
	0x0340F11C ORR X20, X8, 0xF
	0x0340F120 MOVN W10, 0x0
	0x0340F124 ADD X1, X31, 0x20
	0x0340F128 MOV X0, X20
	0x0340F12C STP X23, X22, [X31 + 0x48]
	0x0340F130 STUR V0, [X31 + 0x28]
	0x0340F134 STP X9, X19, [X31 + 0x38]
	0x0340F138 STR W10, [X31 + 0x20]
	0x0340F13C BL 0x218E6B8
	0x0340F140 MOV X0, X20
	0x0340F144 MOV X1, X31
	0x0340F148 BL 0x32C47F8
	0x0340F14C LDP X20, X19, [X31 + 0xA0]
	0x0340F150 LDP X22, X21, [X31 + 0x90]
	0x0340F154 LDP X24, X23, [X31 + 0x80]
	0x0340F158 LDP X30, X25, [X31 + 0x70]
	0x0340F15C ADD X31, X31, 0xB0
	0x0340F160 RET
	0x0340F164 SUB X31, X31, 0xB0
	0x0340F168 STP X30, X25, [X31 + 0x70]
	0x0340F16C STP X24, X23, [X31 + 0x80]
	0x0340F170 STP X22, X21, [X31 + 0x90]
	0x0340F174 STP X20, X19, [X31 + 0xA0]
	0x0340F178 ADRP X25, 0xFCE000
	0x0340F17C ADRP X24, 0xCE7000
	0x0340F180 LDRB W8, [X25 + 0x582]
	0x0340F184 LDR X24, [X24 + 0x280]
	0x0340F188 MOV X20, X4
	0x0340F18C MOV X21, X3

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCF000
	015 Move X27, 0xD20000
	016 Move W8, [X28+1394]
	017 Move X27, [X27+800]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X25, X2
	024 Move X26, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD20000
	031 Move X0, [X0+808]
	032 Call 0x1C17CF4
	033 Move X0, 0xD20000
	034 Move X0, [X0+832]
	035 Call 0x1C17CF4
	036 Move X0, 0xD20000
	037 Move X0, [X0+824]
	038 Call 0x1C17CF4
	039 Move X0, 0xD20000
	040 Move X0, [X0+800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1394], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD20000
	054 Move X29, 0xD20000
	055 Move X28, 0xD20000
	056 Move W8, [X0+224]
	057 Move X27, [X27+808]
	058 Move X29, [X29+832]
	059 Move X28, [X28+824]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X23
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X31+48], X21
	079 Move [X31+56], X24
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateDeviceAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountDevice account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F190 MOV X19, X2
	0x0340F194 MOV X22, X1
	0x0340F198 MOV X23, X0
	0x0340F19C TBNZ X8, 0x0, 0x340F1C0
	0x0340F1A0 ADRP X0, 0xD1F000
	0x0340F1A4 LDR X0, [X0 + 0x3C0]
	0x0340F1A8 BL 0x1C16CF4
	0x0340F1AC ADRP X0, 0xCE7000
	0x0340F1B0 LDR X0, [X0 + 0x280]
	0x0340F1B4 BL 0x1C16CF4
	0x0340F1B8 MOVZ W8, 0x1
	0x0340F1BC STRB W8, [X25 + 0x582]
	0x0340F1C0 LDR X0, [X24]
	0x0340F1C4 MOVI V0.2D, 0x0
	0x0340F1C8 STP V0, V0, [X31 + 0x50]
	0x0340F1CC STP V0, V0, [X31 + 0x30]
	0x0340F1D0 STR V0, [X31 + 0x2]
	0x0340F1D4 ADRP X24, 0xD1F000
	0x0340F1D8 LDR W8, [X0 + 0xE0]
	0x0340F1DC LDR X24, [X24 + 0x3C0]
	0x0340F1E0 CBNZ W8, 0x340F1E8
	0x0340F1E4 BL 0x1C16DFC
	0x0340F1E8 ADD X8, X31, 0x8
	0x0340F1EC MOV X0, X31
	0x0340F1F0 BL 0x32C4770
	0x0340F1F4 LDUR V0, [X31 + 0x8]
	0x0340F1F8 LDR X9, [X31 + 0x18]
	0x0340F1FC LDR X2, [X24]
	0x0340F200 ADD X8, X31, 0x20
	0x0340F204 STP X21, X20, [X31 + 0x58]
	0x0340F208 ORR X20, X8, 0xF
	0x0340F20C MOVN W10, 0x0
	0x0340F210 ADD X1, X31, 0x20
	0x0340F214 MOV X0, X20
	0x0340F218 STP X23, X22, [X31 + 0x48]
	0x0340F21C STUR V0, [X31 + 0x28]
	0x0340F220 STP X9, X19, [X31 + 0x38]
	0x0340F224 STR W10, [X31 + 0x20]
	0x0340F228 BL 0x218E7B8
	0x0340F22C MOV X0, X20
	0x0340F230 MOV X1, X31
	0x0340F234 BL 0x32C47F8
	0x0340F238 LDP X20, X19, [X31 + 0xA0]
	0x0340F23C LDP X22, X21, [X31 + 0x90]
	0x0340F240 LDP X24, X23, [X31 + 0x80]
	0x0340F244 LDP X30, X25, [X31 + 0x70]
	0x0340F248 ADD X31, X31, 0xB0
	0x0340F24C RET
	0x0340F250 SUB X31, X31, 0xB0
	0x0340F254 STP X30, X27, [X31 + 0x60]
	0x0340F258 STP X26, X25, [X31 + 0x70]
	0x0340F25C STP X24, X23, [X31 + 0x80]
	0x0340F260 STP X22, X21, [X31 + 0x90]
	0x0340F264 STP X20, X19, [X31 + 0xA0]
	0x0340F268 ADRP X26, 0xFCE000
	0x0340F26C ADRP X25, 0xD1F000
	0x0340F270 LDRB W8, [X26 + 0x583]
	0x0340F274 LDR X25, [X25 + 0x320]
	0x0340F278 MOV X19, X5
	0x0340F27C MOV X20, X4
	0x0340F280 MOV X21, X3
	0x0340F284 MOV X22, X2
	0x0340F288 MOV X24, X1
	0x0340F28C MOV X23, X0
	0x0340F290 TBNZ X8, 0x0, 0x340F2CC
	0x0340F294 ADRP X0, 0xD1F000
	0x0340F298 LDR X0, [X0 + 0x328]
	0x0340F29C BL 0x1C16CF4
	0x0340F2A0 ADRP X0, 0xD1F000
	0x0340F2A4 LDR X0, [X0 + 0x3C8]
	0x0340F2A8 BL 0x1C16CF4
	0x0340F2AC ADRP X0, 0xD1F000
	0x0340F2B0 LDR X0, [X0 + 0x338]
	0x0340F2B4 BL 0x1C16CF4
	0x0340F2B8 ADRP X0, 0xD1F000
	0x0340F2BC LDR X0, [X0 + 0x320]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCF000
	015 Move X27, 0xD20000
	016 Move W8, [X28+1395]
	017 Move X27, [X27+800]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X25, X2
	024 Move X26, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD20000
	031 Move X0, [X0+808]
	032 Call 0x1C17CF4
	033 Move X0, 0xD20000
	034 Move X0, [X0+840]
	035 Call 0x1C17CF4
	036 Move X0, 0xD20000
	037 Move X0, [X0+824]
	038 Call 0x1C17CF4
	039 Move X0, 0xD20000
	040 Move X0, [X0+800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1395], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD20000
	054 Move X29, 0xD20000
	055 Move X28, 0xD20000
	056 Move W8, [X0+224]
	057 Move X27, [X27+808]
	058 Move X29, [X29+840]
	059 Move X28, [X28+824]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X23
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X31+48], X21
	079 Move [X31+56], X24
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateEmailAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountEmail account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F2C0 BL 0x1C16CF4
	0x0340F2C4 MOVZ W8, 0x1
	0x0340F2C8 STRB W8, [X26 + 0x583]
	0x0340F2CC LDR X0, [X25]
	0x0340F2D0 MOVI V0.2D, 0x0
	0x0340F2D4 STR X31, [X31 + 0x50]
	0x0340F2D8 STP V0, V0, [X31 + 0x30]
	0x0340F2DC STP V0, V0, [X31 + 0x10]
	0x0340F2E0 STR V0, [X31]
	0x0340F2E4 ADRP X25, 0xD1F000
	0x0340F2E8 ADRP X27, 0xD1F000
	0x0340F2EC ADRP X26, 0xD1F000
	0x0340F2F0 LDR W8, [X0 + 0xE0]
	0x0340F2F4 LDR X25, [X25 + 0x328]
	0x0340F2F8 LDR X27, [X27 + 0x3C8]
	0x0340F2FC LDR X26, [X26 + 0x338]
	0x0340F300 CBNZ W8, 0x340F308
	0x0340F304 BL 0x1C16DFC
	0x0340F308 LDR X0, [X25]
	0x0340F30C ADD X8, X31, 0x0
	0x0340F310 ORR X25, X8, 0xF
	0x0340F314 MOV X8, X25
	0x0340F318 BL 0x263221C
	0x0340F31C LDR X2, [X27]
	0x0340F320 MOVN W8, 0x0
	0x0340F324 ADD X1, X31, 0x0
	0x0340F328 MOV X0, X25
	0x0340F32C STP X24, X22, [X31 + 0x30]
	0x0340F330 STP X21, X23, [X31 + 0x20]
	0x0340F334 STP X20, X19, [X31 + 0x40]
	0x0340F338 STR W8, [X31]
	0x0340F33C BL 0x1FCA414
	0x0340F340 LDR X1, [X26]
	0x0340F344 MOV X0, X25
	0x0340F348 BL 0x2632230
	0x0340F34C LDP X20, X19, [X31 + 0xA0]
	0x0340F350 LDP X22, X21, [X31 + 0x90]
	0x0340F354 LDP X24, X23, [X31 + 0x80]
	0x0340F358 LDP X26, X25, [X31 + 0x70]
	0x0340F35C LDP X30, X27, [X31 + 0x60]
	0x0340F360 ADD X31, X31, 0xB0
	0x0340F364 RET
	0x0340F368 SUB X31, X31, 0xB0
	0x0340F36C STP X30, X25, [X31 + 0x70]
	0x0340F370 STP X24, X23, [X31 + 0x80]
	0x0340F374 STP X22, X21, [X31 + 0x90]
	0x0340F378 STP X20, X19, [X31 + 0xA0]
	0x0340F37C ADRP X25, 0xFCE000
	0x0340F380 ADRP X24, 0xCE7000
	0x0340F384 LDRB W8, [X25 + 0x584]
	0x0340F388 LDR X24, [X24 + 0x280]
	0x0340F38C MOV X20, X4
	0x0340F390 MOV X21, X3
	0x0340F394 MOV X19, X2
	0x0340F398 MOV X22, X1
	0x0340F39C MOV X23, X0
	0x0340F3A0 TBNZ X8, 0x0, 0x340F3C4
	0x0340F3A4 ADRP X0, 0xD1F000
	0x0340F3A8 LDR X0, [X0 + 0x3D0]
	0x0340F3AC BL 0x1C16CF4
	0x0340F3B0 ADRP X0, 0xCE7000
	0x0340F3B4 LDR X0, [X0 + 0x280]
	0x0340F3B8 BL 0x1C16CF4
	0x0340F3BC MOVZ W8, 0x1
	0x0340F3C0 STRB W8, [X25 + 0x584]
	0x0340F3C4 LDR X0, [X24]
	0x0340F3C8 MOVI V0.2D, 0x0
	0x0340F3CC STP V0, V0, [X31 + 0x50]
	0x0340F3D0 STP V0, V0, [X31 + 0x30]
	0x0340F3D4 STR V0, [X31 + 0x2]
	0x0340F3D8 ADRP X24, 0xD1F000
	0x0340F3DC LDR W8, [X0 + 0xE0]
	0x0340F3E0 LDR X24, [X24 + 0x3D0]
	0x0340F3E4 CBNZ W8, 0x340F3EC
	0x0340F3E8 BL 0x1C16DFC
	0x0340F3EC ADD X8, X31, 0x8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCF000
	015 Move X27, 0xD20000
	016 Move W8, [X28+1396]
	017 Move X27, [X27+800]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X25, X2
	024 Move X26, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD20000
	031 Move X0, [X0+808]
	032 Call 0x1C17CF4
	033 Move X0, 0xD20000
	034 Move X0, [X0+848]
	035 Call 0x1C17CF4
	036 Move X0, 0xD20000
	037 Move X0, [X0+824]
	038 Call 0x1C17CF4
	039 Move X0, 0xD20000
	040 Move X0, [X0+800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1396], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD20000
	054 Move X29, 0xD20000
	055 Move X28, 0xD20000
	056 Move W8, [X0+224]
	057 Move X27, [X27+808]
	058 Move X29, [X29+848]
	059 Move X28, [X28+824]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X23
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X31+48], X21
	079 Move [X31+56], X24
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateFacebookAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountFacebook account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Boolean> sync, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F3F0 MOV X0, X31
	0x0340F3F4 BL 0x32C4770
	0x0340F3F8 LDUR V0, [X31 + 0x8]
	0x0340F3FC LDR X9, [X31 + 0x18]
	0x0340F400 LDR X2, [X24]
	0x0340F404 ADD X8, X31, 0x20
	0x0340F408 STP X21, X20, [X31 + 0x58]
	0x0340F40C ORR X20, X8, 0xF
	0x0340F410 MOVN W10, 0x0
	0x0340F414 ADD X1, X31, 0x20
	0x0340F418 MOV X0, X20
	0x0340F41C STP X23, X22, [X31 + 0x48]
	0x0340F420 STUR V0, [X31 + 0x28]
	0x0340F424 STP X9, X19, [X31 + 0x38]
	0x0340F428 STR W10, [X31 + 0x20]
	0x0340F42C BL 0x218EAB8
	0x0340F430 MOV X0, X20
	0x0340F434 MOV X1, X31
	0x0340F438 BL 0x32C47F8
	0x0340F43C LDP X20, X19, [X31 + 0xA0]
	0x0340F440 LDP X22, X21, [X31 + 0x90]
	0x0340F444 LDP X24, X23, [X31 + 0x80]
	0x0340F448 LDP X30, X25, [X31 + 0x70]
	0x0340F44C ADD X31, X31, 0xB0
	0x0340F450 RET
	0x0340F454 SUB X31, X31, 0xB0
	0x0340F458 STP X30, X25, [X31 + 0x70]
	0x0340F45C STP X24, X23, [X31 + 0x80]
	0x0340F460 STP X22, X21, [X31 + 0x90]
	0x0340F464 STP X20, X19, [X31 + 0xA0]
	0x0340F468 ADRP X25, 0xFCE000
	0x0340F46C ADRP X24, 0xCE7000
	0x0340F470 LDRB W8, [X25 + 0x585]
	0x0340F474 LDR X24, [X24 + 0x280]
	0x0340F478 MOV X20, X4
	0x0340F47C MOV X21, X3
	0x0340F480 MOV X19, X2
	0x0340F484 MOV X22, X1
	0x0340F488 MOV X23, X0
	0x0340F48C TBNZ X8, 0x0, 0x340F4B0
	0x0340F490 ADRP X0, 0xD1F000
	0x0340F494 LDR X0, [X0 + 0x3D8]
	0x0340F498 BL 0x1C16CF4
	0x0340F49C ADRP X0, 0xCE7000
	0x0340F4A0 LDR X0, [X0 + 0x280]
	0x0340F4A4 BL 0x1C16CF4
	0x0340F4A8 MOVZ W8, 0x1
	0x0340F4AC STRB W8, [X25 + 0x585]
	0x0340F4B0 LDR X0, [X24]
	0x0340F4B4 MOVI V0.2D, 0x0
	0x0340F4B8 STP V0, V0, [X31 + 0x50]
	0x0340F4BC STP V0, V0, [X31 + 0x30]
	0x0340F4C0 STR V0, [X31 + 0x2]
	0x0340F4C4 ADRP X24, 0xD1F000
	0x0340F4C8 LDR W8, [X0 + 0xE0]
	0x0340F4CC LDR X24, [X24 + 0x3D8]
	0x0340F4D0 CBNZ W8, 0x340F4D8
	0x0340F4D4 BL 0x1C16DFC
	0x0340F4D8 ADD X8, X31, 0x8
	0x0340F4DC MOV X0, X31
	0x0340F4E0 BL 0x32C4770
	0x0340F4E4 LDUR V0, [X31 + 0x8]
	0x0340F4E8 LDR X9, [X31 + 0x18]
	0x0340F4EC LDR X2, [X24]
	0x0340F4F0 ADD X8, X31, 0x20
	0x0340F4F4 STP X21, X20, [X31 + 0x58]
	0x0340F4F8 ORR X20, X8, 0xF
	0x0340F4FC MOVN W10, 0x0
	0x0340F500 ADD X1, X31, 0x20
	0x0340F504 MOV X0, X20
	0x0340F508 STP X23, X22, [X31 + 0x48]
	0x0340F50C STUR V0, [X31 + 0x28]
	0x0340F510 STP X9, X19, [X31 + 0x38]
	0x0340F514 STR W10, [X31 + 0x20]
	0x0340F518 BL 0x218EBB8
	0x0340F51C MOV X0, X20
	0x0340F520 MOV X1, X31
	0x0340F524 BL 0x32C47F8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X27, 0xFCF000
	015 Move X26, 0xD20000
	016 Move W8, [X27+1397]
	017 Move X26, [X26+800]
	018 Move X19, X6
	019 Move X20, X5
	020 Move X22, X4
	021 Move X23, X3
	022 Move X21, X2
	023 Move X24, X1
	024 Move X25, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD20000
	030 Move X0, [X0+808]
	031 Call 0x1C17CF4
	032 Move X0, 0xD20000
	033 Move X0, [X0+856]
	034 Call 0x1C17CF4
	035 Move X0, 0xD20000
	036 Move X0, [X0+824]
	037 Call 0x1C17CF4
	038 Move X0, 0xD20000
	039 Move X0, [X0+800]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+1397], W8
	043 Move X0, [X26]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], V0
	052 Move X26, 0xD20000
	053 Move X29, 0xD20000
	054 Move W8, [X0+224]
	055 Move X27, [X31+208]
	056 Move X28, [X31+216]
	057 Move X26, [X26+808]
	058 Move X29, [X29+856]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X26]
	063 Add X8, X31, 0
	064 Or X26, X8, 15
	065 Move X8, X26
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X26
	073 Move [X31+64], X25
	074 Move [X31+72], X24
	075 Move [X31+32], X23
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Move [X31+48], X20
	078 NotImplemented "Instruction STRH not yet implemented."
	079 Move [X31+80], X21
	080 Move [X31+88], X27
	081 Move [X31+96], X28
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X8, 0xD20000
	085 Move X8, [X8+824]
	086 Move X0, X26
	087 Move X1, [X8]
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateFacebookInstantGameAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountFacebookInstantGame account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F528 LDP X20, X19, [X31 + 0xA0]
	0x0340F52C LDP X22, X21, [X31 + 0x90]
	0x0340F530 LDP X24, X23, [X31 + 0x80]
	0x0340F534 LDP X30, X25, [X31 + 0x70]
	0x0340F538 ADD X31, X31, 0xB0
	0x0340F53C RET
	0x0340F540 SUB X31, X31, 0xB0
	0x0340F544 STP X30, X25, [X31 + 0x70]
	0x0340F548 STP X24, X23, [X31 + 0x80]
	0x0340F54C STP X22, X21, [X31 + 0x90]
	0x0340F550 STP X20, X19, [X31 + 0xA0]
	0x0340F554 ADRP X25, 0xFCE000
	0x0340F558 ADRP X24, 0xCE7000
	0x0340F55C LDRB W8, [X25 + 0x586]
	0x0340F560 LDR X24, [X24 + 0x280]
	0x0340F564 MOV X20, X4
	0x0340F568 MOV X21, X3
	0x0340F56C MOV X19, X2
	0x0340F570 MOV X22, X1
	0x0340F574 MOV X23, X0
	0x0340F578 TBNZ X8, 0x0, 0x340F59C
	0x0340F57C ADRP X0, 0xD1F000
	0x0340F580 LDR X0, [X0 + 0x3E0]
	0x0340F584 BL 0x1C16CF4
	0x0340F588 ADRP X0, 0xCE7000
	0x0340F58C LDR X0, [X0 + 0x280]
	0x0340F590 BL 0x1C16CF4
	0x0340F594 MOVZ W8, 0x1
	0x0340F598 STRB W8, [X25 + 0x586]
	0x0340F59C LDR X0, [X24]
	0x0340F5A0 MOVI V0.2D, 0x0
	0x0340F5A4 STP V0, V0, [X31 + 0x50]
	0x0340F5A8 STP V0, V0, [X31 + 0x30]
	0x0340F5AC STR V0, [X31 + 0x2]
	0x0340F5B0 ADRP X24, 0xD1F000
	0x0340F5B4 LDR W8, [X0 + 0xE0]
	0x0340F5B8 LDR X24, [X24 + 0x3E0]
	0x0340F5BC CBNZ W8, 0x340F5C4
	0x0340F5C0 BL 0x1C16DFC
	0x0340F5C4 ADD X8, X31, 0x8
	0x0340F5C8 MOV X0, X31
	0x0340F5CC BL 0x32C4770
	0x0340F5D0 LDUR V0, [X31 + 0x8]
	0x0340F5D4 LDR X9, [X31 + 0x18]
	0x0340F5D8 LDR X2, [X24]
	0x0340F5DC ADD X8, X31, 0x20
	0x0340F5E0 STP X21, X20, [X31 + 0x58]
	0x0340F5E4 ORR X20, X8, 0xF
	0x0340F5E8 MOVN W10, 0x0
	0x0340F5EC ADD X1, X31, 0x20
	0x0340F5F0 MOV X0, X20
	0x0340F5F4 STP X23, X22, [X31 + 0x48]
	0x0340F5F8 STUR V0, [X31 + 0x28]
	0x0340F5FC STP X9, X19, [X31 + 0x38]
	0x0340F600 STR W10, [X31 + 0x20]
	0x0340F604 BL 0x218ECB8
	0x0340F608 MOV X0, X20
	0x0340F60C MOV X1, X31
	0x0340F610 BL 0x32C47F8
	0x0340F614 LDP X20, X19, [X31 + 0xA0]
	0x0340F618 LDP X22, X21, [X31 + 0x90]
	0x0340F61C LDP X24, X23, [X31 + 0x80]
	0x0340F620 LDP X30, X25, [X31 + 0x70]
	0x0340F624 ADD X31, X31, 0xB0
	0x0340F628 RET
	0x0340F62C SUB X31, X31, 0xB0
	0x0340F630 STP X30, X25, [X31 + 0x70]
	0x0340F634 STP X24, X23, [X31 + 0x80]
	0x0340F638 STP X22, X21, [X31 + 0x90]
	0x0340F63C STP X20, X19, [X31 + 0xA0]
	0x0340F640 ADRP X25, 0xFCE000
	0x0340F644 ADRP X24, 0xCE7000
	0x0340F648 LDRB W8, [X25 + 0x587]
	0x0340F64C LDR X24, [X24 + 0x280]
	0x0340F650 MOV X20, X4
	0x0340F654 MOV X21, X3

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCF000
	015 Move X27, 0xD20000
	016 Move W8, [X28+1398]
	017 Move X27, [X27+800]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X25, X2
	024 Move X26, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD20000
	031 Move X0, [X0+808]
	032 Call 0x1C17CF4
	033 Move X0, 0xD20000
	034 Move X0, [X0+864]
	035 Call 0x1C17CF4
	036 Move X0, 0xD20000
	037 Move X0, [X0+824]
	038 Call 0x1C17CF4
	039 Move X0, 0xD20000
	040 Move X0, [X0+800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1398], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD20000
	054 Move X29, 0xD20000
	055 Move X28, 0xD20000
	056 Move W8, [X0+224]
	057 Move X27, [X27+808]
	058 Move X29, [X29+864]
	059 Move X28, [X28+824]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X23
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X31+48], X21
	079 Move [X31+56], X24
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateGameCenterAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountGameCenter account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F658 MOV X19, X2
	0x0340F65C MOV X22, X1
	0x0340F660 MOV X23, X0
	0x0340F664 TBNZ X8, 0x0, 0x340F688
	0x0340F668 ADRP X0, 0xD1F000
	0x0340F66C LDR X0, [X0 + 0x3E8]
	0x0340F670 BL 0x1C16CF4
	0x0340F674 ADRP X0, 0xCE7000
	0x0340F678 LDR X0, [X0 + 0x280]
	0x0340F67C BL 0x1C16CF4
	0x0340F680 MOVZ W8, 0x1
	0x0340F684 STRB W8, [X25 + 0x587]
	0x0340F688 LDR X0, [X24]
	0x0340F68C MOVI V0.2D, 0x0
	0x0340F690 STP V0, V0, [X31 + 0x50]
	0x0340F694 STP V0, V0, [X31 + 0x30]
	0x0340F698 STR V0, [X31 + 0x2]
	0x0340F69C ADRP X24, 0xD1F000
	0x0340F6A0 LDR W8, [X0 + 0xE0]
	0x0340F6A4 LDR X24, [X24 + 0x3E8]
	0x0340F6A8 CBNZ W8, 0x340F6B0
	0x0340F6AC BL 0x1C16DFC
	0x0340F6B0 ADD X8, X31, 0x8
	0x0340F6B4 MOV X0, X31
	0x0340F6B8 BL 0x32C4770
	0x0340F6BC LDUR V0, [X31 + 0x8]
	0x0340F6C0 LDR X9, [X31 + 0x18]
	0x0340F6C4 LDR X2, [X24]
	0x0340F6C8 ADD X8, X31, 0x20
	0x0340F6CC STP X21, X20, [X31 + 0x58]
	0x0340F6D0 ORR X20, X8, 0xF
	0x0340F6D4 MOVN W10, 0x0
	0x0340F6D8 ADD X1, X31, 0x20
	0x0340F6DC MOV X0, X20
	0x0340F6E0 STP X23, X22, [X31 + 0x48]
	0x0340F6E4 STUR V0, [X31 + 0x28]
	0x0340F6E8 STP X9, X19, [X31 + 0x38]
	0x0340F6EC STR W10, [X31 + 0x20]
	0x0340F6F0 BL 0x218EDB8
	0x0340F6F4 MOV X0, X20
	0x0340F6F8 MOV X1, X31
	0x0340F6FC BL 0x32C47F8
	0x0340F700 LDP X20, X19, [X31 + 0xA0]
	0x0340F704 LDP X22, X21, [X31 + 0x90]
	0x0340F708 LDP X24, X23, [X31 + 0x80]
	0x0340F70C LDP X30, X25, [X31 + 0x70]
	0x0340F710 ADD X31, X31, 0xB0
	0x0340F714 RET
	0x0340F718 SUB X31, X31, 0xB0
	0x0340F71C STP X30, X25, [X31 + 0x70]
	0x0340F720 STP X24, X23, [X31 + 0x80]
	0x0340F724 STP X22, X21, [X31 + 0x90]
	0x0340F728 STP X20, X19, [X31 + 0xA0]
	0x0340F72C ADRP X25, 0xFCE000
	0x0340F730 ADRP X24, 0xCE7000
	0x0340F734 LDRB W8, [X25 + 0x588]
	0x0340F738 LDR X24, [X24 + 0x280]
	0x0340F73C MOV X20, X4
	0x0340F740 MOV X21, X3
	0x0340F744 MOV X19, X2
	0x0340F748 MOV X22, X1
	0x0340F74C MOV X23, X0
	0x0340F750 TBNZ X8, 0x0, 0x340F774
	0x0340F754 ADRP X0, 0xD1F000
	0x0340F758 LDR X0, [X0 + 0x3F0]
	0x0340F75C BL 0x1C16CF4
	0x0340F760 ADRP X0, 0xCE7000
	0x0340F764 LDR X0, [X0 + 0x280]
	0x0340F768 BL 0x1C16CF4
	0x0340F76C MOVZ W8, 0x1
	0x0340F770 STRB W8, [X25 + 0x588]
	0x0340F774 LDR X0, [X24]
	0x0340F778 MOVI V0.2D, 0x0
	0x0340F77C STP V0, V0, [X31 + 0x50]
	0x0340F780 STP V0, V0, [X31 + 0x30]
	0x0340F784 STR V0, [X31 + 0x2]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCF000
	015 Move X27, 0xD20000
	016 Move W8, [X28+1399]
	017 Move X27, [X27+800]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X25, X2
	024 Move X26, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD20000
	031 Move X0, [X0+808]
	032 Call 0x1C17CF4
	033 Move X0, 0xD20000
	034 Move X0, [X0+872]
	035 Call 0x1C17CF4
	036 Move X0, 0xD20000
	037 Move X0, [X0+824]
	038 Call 0x1C17CF4
	039 Move X0, 0xD20000
	040 Move X0, [X0+800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1399], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD20000
	054 Move X29, 0xD20000
	055 Move X28, 0xD20000
	056 Move W8, [X0+224]
	057 Move X27, [X27+808]
	058 Move X29, [X29+872]
	059 Move X28, [X28+824]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X23
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X31+48], X21
	079 Move [X31+56], X24
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateGoogleAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountGoogle account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F788 ADRP X24, 0xD1F000
	0x0340F78C LDR W8, [X0 + 0xE0]
	0x0340F790 LDR X24, [X24 + 0x3F0]
	0x0340F794 CBNZ W8, 0x340F79C
	0x0340F798 BL 0x1C16DFC
	0x0340F79C ADD X8, X31, 0x8
	0x0340F7A0 MOV X0, X31
	0x0340F7A4 BL 0x32C4770
	0x0340F7A8 LDUR V0, [X31 + 0x8]
	0x0340F7AC LDR X9, [X31 + 0x18]
	0x0340F7B0 LDR X2, [X24]
	0x0340F7B4 ADD X8, X31, 0x20
	0x0340F7B8 STP X21, X20, [X31 + 0x58]
	0x0340F7BC ORR X20, X8, 0xF
	0x0340F7C0 MOVN W10, 0x0
	0x0340F7C4 ADD X1, X31, 0x20
	0x0340F7C8 MOV X0, X20
	0x0340F7CC STP X23, X22, [X31 + 0x48]
	0x0340F7D0 STUR V0, [X31 + 0x28]
	0x0340F7D4 STP X9, X19, [X31 + 0x38]
	0x0340F7D8 STR W10, [X31 + 0x20]
	0x0340F7DC BL 0x218EEB8
	0x0340F7E0 MOV X0, X20
	0x0340F7E4 MOV X1, X31
	0x0340F7E8 BL 0x32C47F8
	0x0340F7EC LDP X20, X19, [X31 + 0xA0]
	0x0340F7F0 LDP X22, X21, [X31 + 0x90]
	0x0340F7F4 LDP X24, X23, [X31 + 0x80]
	0x0340F7F8 LDP X30, X25, [X31 + 0x70]
	0x0340F7FC ADD X31, X31, 0xB0
	0x0340F800 RET
	0x0340F804 SUB X31, X31, 0xB0
	0x0340F808 STP X30, X25, [X31 + 0x70]
	0x0340F80C STP X24, X23, [X31 + 0x80]
	0x0340F810 STP X22, X21, [X31 + 0x90]
	0x0340F814 STP X20, X19, [X31 + 0xA0]
	0x0340F818 ADRP X25, 0xFCE000
	0x0340F81C ADRP X24, 0xCE7000
	0x0340F820 LDRB W8, [X25 + 0x589]
	0x0340F824 LDR X24, [X24 + 0x280]
	0x0340F828 MOV X20, X4
	0x0340F82C MOV X21, X3
	0x0340F830 MOV X19, X2
	0x0340F834 MOV X22, X1
	0x0340F838 MOV X23, X0
	0x0340F83C TBNZ X8, 0x0, 0x340F860
	0x0340F840 ADRP X0, 0xD1F000
	0x0340F844 LDR X0, [X0 + 0x3F8]
	0x0340F848 BL 0x1C16CF4
	0x0340F84C ADRP X0, 0xCE7000
	0x0340F850 LDR X0, [X0 + 0x280]
	0x0340F854 BL 0x1C16CF4
	0x0340F858 MOVZ W8, 0x1
	0x0340F85C STRB W8, [X25 + 0x589]
	0x0340F860 LDR X0, [X24]
	0x0340F864 MOVI V0.2D, 0x0
	0x0340F868 STP V0, V0, [X31 + 0x50]
	0x0340F86C STP V0, V0, [X31 + 0x30]
	0x0340F870 STR V0, [X31 + 0x2]
	0x0340F874 ADRP X24, 0xD1F000
	0x0340F878 LDR W8, [X0 + 0xE0]
	0x0340F87C LDR X24, [X24 + 0x3F8]
	0x0340F880 CBNZ W8, 0x340F888
	0x0340F884 BL 0x1C16DFC
	0x0340F888 ADD X8, X31, 0x8
	0x0340F88C MOV X0, X31
	0x0340F890 BL 0x32C4770
	0x0340F894 LDUR V0, [X31 + 0x8]
	0x0340F898 LDR X9, [X31 + 0x18]
	0x0340F89C LDR X2, [X24]
	0x0340F8A0 ADD X8, X31, 0x20
	0x0340F8A4 STP X21, X20, [X31 + 0x58]
	0x0340F8A8 ORR X20, X8, 0xF
	0x0340F8AC MOVN W10, 0x0
	0x0340F8B0 ADD X1, X31, 0x20
	0x0340F8B4 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCF000
	015 Move X27, 0xD20000
	016 Move W8, [X28+1400]
	017 Move X27, [X27+800]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X25, X2
	024 Move X26, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD20000
	031 Move X0, [X0+808]
	032 Call 0x1C17CF4
	033 Move X0, 0xD20000
	034 Move X0, [X0+880]
	035 Call 0x1C17CF4
	036 Move X0, 0xD20000
	037 Move X0, [X0+824]
	038 Call 0x1C17CF4
	039 Move X0, 0xD20000
	040 Move X0, [X0+800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1400], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD20000
	054 Move X29, 0xD20000
	055 Move X28, 0xD20000
	056 Move W8, [X0+224]
	057 Move X27, [X27+808]
	058 Move X29, [X29+880]
	059 Move X28, [X28+824]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X23
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X31+48], X21
	079 Move [X31+56], X24
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> AuthenticateSteamAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiAccountSteam account, System.Nullable`1<System.Boolean> create, System.String username, System.Nullable`1<System.Boolean> sync, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F8B8 STP X23, X22, [X31 + 0x48]
	0x0340F8BC STUR V0, [X31 + 0x28]
	0x0340F8C0 STP X9, X19, [X31 + 0x38]
	0x0340F8C4 STR W10, [X31 + 0x20]
	0x0340F8C8 BL 0x218EFB8
	0x0340F8CC MOV X0, X20
	0x0340F8D0 MOV X1, X31
	0x0340F8D4 BL 0x32C47F8
	0x0340F8D8 LDP X20, X19, [X31 + 0xA0]
	0x0340F8DC LDP X22, X21, [X31 + 0x90]
	0x0340F8E0 LDP X24, X23, [X31 + 0x80]
	0x0340F8E4 LDP X30, X25, [X31 + 0x70]
	0x0340F8E8 ADD X31, X31, 0xB0
	0x0340F8EC RET
	0x0340F8F0 SUB X31, X31, 0xB0
	0x0340F8F4 STP X30, X25, [X31 + 0x70]
	0x0340F8F8 STP X24, X23, [X31 + 0x80]
	0x0340F8FC STP X22, X21, [X31 + 0x90]
	0x0340F900 STP X20, X19, [X31 + 0xA0]
	0x0340F904 ADRP X25, 0xFCE000
	0x0340F908 ADRP X24, 0xCE7000
	0x0340F90C LDRB W8, [X25 + 0x58A]
	0x0340F910 LDR X24, [X24 + 0x280]
	0x0340F914 MOV X20, X4
	0x0340F918 MOV X21, X3
	0x0340F91C MOV X19, X2
	0x0340F920 MOV X22, X1
	0x0340F924 MOV X23, X0
	0x0340F928 TBNZ X8, 0x0, 0x340F94C
	0x0340F92C ADRP X0, 0xD1F000
	0x0340F930 LDR X0, [X0 + 0x400]
	0x0340F934 BL 0x1C16CF4
	0x0340F938 ADRP X0, 0xCE7000
	0x0340F93C LDR X0, [X0 + 0x280]
	0x0340F940 BL 0x1C16CF4
	0x0340F944 MOVZ W8, 0x1
	0x0340F948 STRB W8, [X25 + 0x58A]
	0x0340F94C LDR X0, [X24]
	0x0340F950 MOVI V0.2D, 0x0
	0x0340F954 STP V0, V0, [X31 + 0x50]
	0x0340F958 STP V0, V0, [X31 + 0x30]
	0x0340F95C STR V0, [X31 + 0x2]
	0x0340F960 ADRP X24, 0xD1F000
	0x0340F964 LDR W8, [X0 + 0xE0]
	0x0340F968 LDR X24, [X24 + 0x400]
	0x0340F96C CBNZ W8, 0x340F974
	0x0340F970 BL 0x1C16DFC
	0x0340F974 ADD X8, X31, 0x8
	0x0340F978 MOV X0, X31
	0x0340F97C BL 0x32C4770
	0x0340F980 LDUR V0, [X31 + 0x8]
	0x0340F984 LDR X9, [X31 + 0x18]
	0x0340F988 LDR X2, [X24]
	0x0340F98C ADD X8, X31, 0x20
	0x0340F990 STP X21, X20, [X31 + 0x58]
	0x0340F994 ORR X20, X8, 0xF
	0x0340F998 MOVN W10, 0x0
	0x0340F99C ADD X1, X31, 0x20
	0x0340F9A0 MOV X0, X20
	0x0340F9A4 STP X23, X22, [X31 + 0x48]
	0x0340F9A8 STUR V0, [X31 + 0x28]
	0x0340F9AC STP X9, X19, [X31 + 0x38]
	0x0340F9B0 STR W10, [X31 + 0x20]
	0x0340F9B4 BL 0x218F0B8
	0x0340F9B8 MOV X0, X20
	0x0340F9BC MOV X1, X31
	0x0340F9C0 BL 0x32C47F8
	0x0340F9C4 LDP X20, X19, [X31 + 0xA0]
	0x0340F9C8 LDP X22, X21, [X31 + 0x90]
	0x0340F9CC LDP X24, X23, [X31 + 0x80]
	0x0340F9D0 LDP X30, X25, [X31 + 0x70]
	0x0340F9D4 ADD X31, X31, 0xB0
	0x0340F9D8 RET
	0x0340F9DC SUB X31, X31, 0xB0
	0x0340F9E0 STP X30, X25, [X31 + 0x70]
	0x0340F9E4 STP X24, X23, [X31 + 0x80]
	0x0340F9E8 STP X22, X21, [X31 + 0x90]
	0x0340F9EC STP X20, X19, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X27, 0xFCF000
	015 Move X26, 0xD20000
	016 Move W8, [X27+1401]
	017 Move X26, [X26+800]
	018 Move X19, X6
	019 Move X20, X5
	020 Move X22, X4
	021 Move X23, X3
	022 Move X21, X2
	023 Move X24, X1
	024 Move X25, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD20000
	030 Move X0, [X0+808]
	031 Call 0x1C17CF4
	032 Move X0, 0xD20000
	033 Move X0, [X0+888]
	034 Call 0x1C17CF4
	035 Move X0, 0xD20000
	036 Move X0, [X0+824]
	037 Call 0x1C17CF4
	038 Move X0, 0xD20000
	039 Move X0, [X0+800]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+1401], W8
	043 Move X0, [X26]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], V0
	052 Move X26, 0xD20000
	053 Move X29, 0xD20000
	054 Move W8, [X0+224]
	055 Move X27, [X31+208]
	056 Move X28, [X31+216]
	057 Move X26, [X26+808]
	058 Move X29, [X29+888]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X26]
	063 Add X8, X31, 0
	064 Or X26, X8, 15
	065 Move X8, X26
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X26
	073 Move [X31+64], X25
	074 Move [X31+72], X24
	075 Move [X31+32], X23
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Move [X31+48], X20
	078 NotImplemented "Instruction STRH not yet implemented."
	079 Move [X31+80], X21
	080 Move [X31+88], X27
	081 Move [X31+96], X28
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X8, 0xD20000
	085 Move X8, [X8+824]
	086 Move X0, X26
	087 Move X1, [X8]
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task LinkAppleAsync(System.String bearerToken, Nakama.ApiAccountApple body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340F9F0 ADRP X25, 0xFCE000
	0x0340F9F4 ADRP X24, 0xCE7000
	0x0340F9F8 LDRB W8, [X25 + 0x58B]
	0x0340F9FC LDR X24, [X24 + 0x280]
	0x0340FA00 MOV X20, X4
	0x0340FA04 MOV X21, X3
	0x0340FA08 MOV X19, X2
	0x0340FA0C MOV X22, X1
	0x0340FA10 MOV X23, X0
	0x0340FA14 TBNZ X8, 0x0, 0x340FA38
	0x0340FA18 ADRP X0, 0xD1F000
	0x0340FA1C LDR X0, [X0 + 0x408]
	0x0340FA20 BL 0x1C16CF4
	0x0340FA24 ADRP X0, 0xCE7000
	0x0340FA28 LDR X0, [X0 + 0x280]
	0x0340FA2C BL 0x1C16CF4
	0x0340FA30 MOVZ W8, 0x1
	0x0340FA34 STRB W8, [X25 + 0x58B]
	0x0340FA38 LDR X0, [X24]
	0x0340FA3C MOVI V0.2D, 0x0
	0x0340FA40 STP V0, V0, [X31 + 0x50]
	0x0340FA44 STP V0, V0, [X31 + 0x30]
	0x0340FA48 STR V0, [X31 + 0x2]
	0x0340FA4C ADRP X24, 0xD1F000
	0x0340FA50 LDR W8, [X0 + 0xE0]
	0x0340FA54 LDR X24, [X24 + 0x408]
	0x0340FA58 CBNZ W8, 0x340FA60
	0x0340FA5C BL 0x1C16DFC
	0x0340FA60 ADD X8, X31, 0x8
	0x0340FA64 MOV X0, X31
	0x0340FA68 BL 0x32C4770
	0x0340FA6C LDUR V0, [X31 + 0x8]
	0x0340FA70 LDR X9, [X31 + 0x18]
	0x0340FA74 LDR X2, [X24]
	0x0340FA78 ADD X8, X31, 0x20
	0x0340FA7C STP X21, X20, [X31 + 0x58]
	0x0340FA80 ORR X20, X8, 0xF
	0x0340FA84 MOVN W10, 0x0
	0x0340FA88 ADD X1, X31, 0x20
	0x0340FA8C MOV X0, X20
	0x0340FA90 STP X23, X22, [X31 + 0x48]
	0x0340FA94 STUR V0, [X31 + 0x28]
	0x0340FA98 STP X9, X19, [X31 + 0x38]
	0x0340FA9C STR W10, [X31 + 0x20]
	0x0340FAA0 BL 0x218F1B8
	0x0340FAA4 MOV X0, X20
	0x0340FAA8 MOV X1, X31
	0x0340FAAC BL 0x32C47F8
	0x0340FAB0 LDP X20, X19, [X31 + 0xA0]
	0x0340FAB4 LDP X22, X21, [X31 + 0x90]
	0x0340FAB8 LDP X24, X23, [X31 + 0x80]
	0x0340FABC LDP X30, X25, [X31 + 0x70]
	0x0340FAC0 ADD X31, X31, 0xB0
	0x0340FAC4 RET
	0x0340FAC8 SUB X31, X31, 0xB0
	0x0340FACC STP X30, X25, [X31 + 0x70]
	0x0340FAD0 STP X24, X23, [X31 + 0x80]
	0x0340FAD4 STP X22, X21, [X31 + 0x90]
	0x0340FAD8 STP X20, X19, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCF000
	011 Move X24, 0xCE8000
	012 Move W8, [X25+1402]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD20000
	024 Move X0, [X0+896]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE8000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1402], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD20000
	039 Move W8, [X0+224]
	040 Move X24, [X24+896]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task LinkCustomAsync(System.String bearerToken, Nakama.ApiAccountCustom body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340FADC ADRP X25, 0xFCE000
	0x0340FAE0 ADRP X24, 0xCE7000
	0x0340FAE4 LDRB W8, [X25 + 0x58C]
	0x0340FAE8 LDR X24, [X24 + 0x280]
	0x0340FAEC MOV X20, X4
	0x0340FAF0 MOV X21, X3
	0x0340FAF4 MOV X19, X2
	0x0340FAF8 MOV X22, X1
	0x0340FAFC MOV X23, X0
	0x0340FB00 TBNZ X8, 0x0, 0x340FB24
	0x0340FB04 ADRP X0, 0xD1F000
	0x0340FB08 LDR X0, [X0 + 0x410]
	0x0340FB0C BL 0x1C16CF4
	0x0340FB10 ADRP X0, 0xCE7000
	0x0340FB14 LDR X0, [X0 + 0x280]
	0x0340FB18 BL 0x1C16CF4
	0x0340FB1C MOVZ W8, 0x1
	0x0340FB20 STRB W8, [X25 + 0x58C]
	0x0340FB24 LDR X0, [X24]
	0x0340FB28 MOVI V0.2D, 0x0
	0x0340FB2C STP V0, V0, [X31 + 0x50]
	0x0340FB30 STP V0, V0, [X31 + 0x30]
	0x0340FB34 STR V0, [X31 + 0x2]
	0x0340FB38 ADRP X24, 0xD1F000
	0x0340FB3C LDR W8, [X0 + 0xE0]
	0x0340FB40 LDR X24, [X24 + 0x410]
	0x0340FB44 CBNZ W8, 0x340FB4C
	0x0340FB48 BL 0x1C16DFC
	0x0340FB4C ADD X8, X31, 0x8
	0x0340FB50 MOV X0, X31
	0x0340FB54 BL 0x32C4770
	0x0340FB58 LDUR V0, [X31 + 0x8]
	0x0340FB5C LDR X9, [X31 + 0x18]
	0x0340FB60 LDR X2, [X24]
	0x0340FB64 ADD X8, X31, 0x20
	0x0340FB68 STP X21, X20, [X31 + 0x58]
	0x0340FB6C ORR X20, X8, 0xF
	0x0340FB70 MOVN W10, 0x0
	0x0340FB74 ADD X1, X31, 0x20
	0x0340FB78 MOV X0, X20
	0x0340FB7C STP X23, X22, [X31 + 0x48]
	0x0340FB80 STUR V0, [X31 + 0x28]
	0x0340FB84 STP X9, X19, [X31 + 0x38]
	0x0340FB88 STR W10, [X31 + 0x20]
	0x0340FB8C BL 0x218F2B8
	0x0340FB90 MOV X0, X20
	0x0340FB94 MOV X1, X31
	0x0340FB98 BL 0x32C47F8
	0x0340FB9C LDP X20, X19, [X31 + 0xA0]
	0x0340FBA0 LDP X22, X21, [X31 + 0x90]
	0x0340FBA4 LDP X24, X23, [X31 + 0x80]
	0x0340FBA8 LDP X30, X25, [X31 + 0x70]
	0x0340FBAC ADD X31, X31, 0xB0
	0x0340FBB0 RET
	0x0340FBB4 SUB X31, X31, 0xD0
	0x0340FBB8 STP X29, X30, [X31 + 0x70]
	0x0340FBBC STP X28, X27, [X31 + 0x80]
	0x0340FBC0 STP X26, X25, [X31 + 0x90]
	0x0340FBC4 STP X24, X23, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCF000
	011 Move X24, 0xCE8000
	012 Move W8, [X25+1403]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD20000
	024 Move X0, [X0+904]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE8000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1403], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD20000
	039 Move W8, [X0+224]
	040 Move X24, [X24+904]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task LinkDeviceAsync(System.String bearerToken, Nakama.ApiAccountDevice body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340FBC8 STP X22, X21, [X31 + 0xB0]
	0x0340FBCC STP X20, X19, [X31 + 0xC0]
	0x0340FBD0 ADRP X28, 0xFCE000
	0x0340FBD4 ADRP X27, 0xD1F000
	0x0340FBD8 LDRB W8, [X28 + 0x58D]
	0x0340FBDC LDR X27, [X27 + 0x418]
	0x0340FBE0 MOV X19, X7
	0x0340FBE4 MOV X20, X6
	0x0340FBE8 MOV X21, X5
	0x0340FBEC MOV X22, X4
	0x0340FBF0 MOV X24, X3
	0x0340FBF4 MOV X26, X2
	0x0340FBF8 MOV X23, X1
	0x0340FBFC MOV X25, X0
	0x0340FC00 TBNZ X8, 0x0, 0x340FC3C
	0x0340FC04 ADRP X0, 0xD1F000
	0x0340FC08 LDR X0, [X0 + 0x420]
	0x0340FC0C BL 0x1C16CF4
	0x0340FC10 ADRP X0, 0xD1F000
	0x0340FC14 LDR X0, [X0 + 0x428]
	0x0340FC18 BL 0x1C16CF4
	0x0340FC1C ADRP X0, 0xD1F000
	0x0340FC20 LDR X0, [X0 + 0x430]
	0x0340FC24 BL 0x1C16CF4
	0x0340FC28 ADRP X0, 0xD1F000
	0x0340FC2C LDR X0, [X0 + 0x418]
	0x0340FC30 BL 0x1C16CF4
	0x0340FC34 MOVZ W8, 0x1
	0x0340FC38 STRB W8, [X28 + 0x58D]
	0x0340FC3C LDR X0, [X27]
	0x0340FC40 MOVI V0.2D, 0x0
	0x0340FC44 STR X31, [X31 + 0x60]
	0x0340FC48 STP V0, V0, [X31 + 0x40]
	0x0340FC4C STP V0, V0, [X31 + 0x20]
	0x0340FC50 STP V0, V0, [X31]
	0x0340FC54 ADRP X27, 0xD1F000
	0x0340FC58 ADRP X29, 0xD1F000
	0x0340FC5C ADRP X28, 0xD1F000
	0x0340FC60 LDR W8, [X0 + 0xE0]
	0x0340FC64 LDR X27, [X27 + 0x420]
	0x0340FC68 LDR X29, [X29 + 0x428]
	0x0340FC6C LDR X28, [X28 + 0x430]
	0x0340FC70 CBNZ W8, 0x340FC78
	0x0340FC74 BL 0x1C16DFC
	0x0340FC78 LDR X0, [X27]
	0x0340FC7C ADD X8, X31, 0x0
	0x0340FC80 ORR X27, X8, 0xF
	0x0340FC84 MOV X8, X27
	0x0340FC88 BL 0x263221C
	0x0340FC8C LDR X2, [X29]
	0x0340FC90 MOVN W8, 0x0
	0x0340FC94 ADD X1, X31, 0x0
	0x0340FC98 MOV X0, X27
	0x0340FC9C STP X26, X24, [X31 + 0x20]
	0x0340FCA0 STRH W22, [X31 + 0x30]
	0x0340FCA4 STP X21, X25, [X31 + 0x38]
	0x0340FCA8 STP X23, X20, [X31 + 0x48]
	0x0340FCAC STR X19, [X31 + 0x58]
	0x0340FCB0 STR W8, [X31]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCF000
	011 Move X24, 0xCE8000
	012 Move W8, [X25+1404]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD20000
	024 Move X0, [X0+912]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE8000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1404], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD20000
	039 Move W8, [X0+224]
	040 Move X24, [X24+912]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task LinkEmailAsync(System.String bearerToken, Nakama.ApiAccountEmail body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340FCB4 BL 0x1FC9214
	0x0340FCB8 LDR X1, [X28]
	0x0340FCBC MOV X0, X27
	0x0340FCC0 BL 0x2632230
	0x0340FCC4 LDP X20, X19, [X31 + 0xC0]
	0x0340FCC8 LDP X22, X21, [X31 + 0xB0]
	0x0340FCCC LDP X24, X23, [X31 + 0xA0]
	0x0340FCD0 LDP X26, X25, [X31 + 0x90]
	0x0340FCD4 LDP X28, X27, [X31 + 0x80]
	0x0340FCD8 LDP X29, X30, [X31 + 0x70]
	0x0340FCDC ADD X31, X31, 0xD0
	0x0340FCE0 RET
	0x0340FCE4 SUB X31, X31, 0xB0
	0x0340FCE8 STP X30, X25, [X31 + 0x70]
	0x0340FCEC STP X24, X23, [X31 + 0x80]
	0x0340FCF0 STP X22, X21, [X31 + 0x90]
	0x0340FCF4 STP X20, X19, [X31 + 0xA0]
	0x0340FCF8 ADRP X25, 0xFCE000
	0x0340FCFC ADRP X24, 0xCE7000
	0x0340FD00 LDRB W8, [X25 + 0x58E]
	0x0340FD04 LDR X24, [X24 + 0x280]
	0x0340FD08 MOV X20, X4
	0x0340FD0C MOV X21, X3
	0x0340FD10 MOV X19, X2
	0x0340FD14 MOV X22, X1
	0x0340FD18 MOV X23, X0
	0x0340FD1C TBNZ X8, 0x0, 0x340FD40
	0x0340FD20 ADRP X0, 0xD1F000
	0x0340FD24 LDR X0, [X0 + 0x438]
	0x0340FD28 BL 0x1C16CF4
	0x0340FD2C ADRP X0, 0xCE7000
	0x0340FD30 LDR X0, [X0 + 0x280]
	0x0340FD34 BL 0x1C16CF4
	0x0340FD38 MOVZ W8, 0x1
	0x0340FD3C STRB W8, [X25 + 0x58E]
	0x0340FD40 LDR X0, [X24]
	0x0340FD44 MOVI V0.2D, 0x0
	0x0340FD48 STP V0, V0, [X31 + 0x50]
	0x0340FD4C STP V0, V0, [X31 + 0x30]
	0x0340FD50 STR V0, [X31 + 0x2]
	0x0340FD54 ADRP X24, 0xD1F000
	0x0340FD58 LDR W8, [X0 + 0xE0]
	0x0340FD5C LDR X24, [X24 + 0x438]
	0x0340FD60 CBNZ W8, 0x340FD68
	0x0340FD64 BL 0x1C16DFC
	0x0340FD68 ADD X8, X31, 0x8
	0x0340FD6C MOV X0, X31
	0x0340FD70 BL 0x32C4770
	0x0340FD74 LDUR V0, [X31 + 0x8]
	0x0340FD78 LDR X9, [X31 + 0x18]
	0x0340FD7C LDR X2, [X24]
	0x0340FD80 ADD X8, X31, 0x20
	0x0340FD84 STP X21, X20, [X31 + 0x58]
	0x0340FD88 ORR X20, X8, 0xF
	0x0340FD8C MOVN W10, 0x0
	0x0340FD90 ADD X1, X31, 0x20
	0x0340FD94 MOV X0, X20
	0x0340FD98 STP X23, X22, [X31 + 0x48]
	0x0340FD9C STUR V0, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCF000
	011 Move X24, 0xCE8000
	012 Move W8, [X25+1405]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD20000
	024 Move X0, [X0+920]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE8000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1405], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD20000
	039 Move W8, [X0+224]
	040 Move X24, [X24+920]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task LinkFacebookAsync(System.String bearerToken, Nakama.ApiAccountFacebook account, System.Nullable`1<System.Boolean> sync, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340FDA0 STP X9, X19, [X31 + 0x38]
	0x0340FDA4 STR W10, [X31 + 0x20]
	0x0340FDA8 BL 0x218D7B8
	0x0340FDAC MOV X0, X20
	0x0340FDB0 MOV X1, X31
	0x0340FDB4 BL 0x32C47F8
	0x0340FDB8 LDP X20, X19, [X31 + 0xA0]
	0x0340FDBC LDP X22, X21, [X31 + 0x90]
	0x0340FDC0 LDP X24, X23, [X31 + 0x80]
	0x0340FDC4 LDP X30, X25, [X31 + 0x70]
	0x0340FDC8 ADD X31, X31, 0xB0
	0x0340FDCC RET
	0x0340FDD0 SUB X31, X31, 0xD0
	0x0340FDD4 STR X30, [X31 + 0x80]
	0x0340FDD8 STP X26, X25, [X31 + 0x90]
	0x0340FDDC STP X24, X23, [X31 + 0xA0]
	0x0340FDE0 STP X22, X21, [X31 + 0xB0]
	0x0340FDE4 STP X20, X19, [X31 + 0xC0]
	0x0340FDE8 ADRP X26, 0xFCE000
	0x0340FDEC ADRP X25, 0xCE7000
	0x0340FDF0 LDRB W8, [X26 + 0x58F]
	0x0340FDF4 LDR X25, [X25 + 0x280]
	0x0340FDF8 MOV X20, X5
	0x0340FDFC MOV X21, X4
	0x0340FE00 MOV X22, X3
	0x0340FE04 MOV X19, X2
	0x0340FE08 MOV X23, X1
	0x0340FE0C MOV X24, X0
	0x0340FE10 TBNZ X8, 0x0, 0x340FE34
	0x0340FE14 ADRP X0, 0xD1F000
	0x0340FE18 LDR X0, [X0 + 0x440]
	0x0340FE1C BL 0x1C16CF4
	0x0340FE20 ADRP X0, 0xCE7000
	0x0340FE24 LDR X0, [X0 + 0x280]
	0x0340FE28 BL 0x1C16CF4
	0x0340FE2C MOVZ W8, 0x1
	0x0340FE30 STRB W8, [X26 + 0x58F]
	0x0340FE34 LDR X0, [X25]
	0x0340FE38 MOVI V0.2D, 0x0
	0x0340FE3C STR X31, [X31 + 0x70]
	0x0340FE40 STP V0, V0, [X31 + 0x50]
	0x0340FE44 STP V0, V0, [X31 + 0x30]
	0x0340FE48 STR V0, [X31 + 0x2]
	0x0340FE4C ADRP X25, 0xD1F000
	0x0340FE50 LDR W8, [X0 + 0xE0]
	0x0340FE54 LDR X25, [X25 + 0x440]
	0x0340FE58 CBNZ W8, 0x340FE60
	0x0340FE5C BL 0x1C16DFC
	0x0340FE60 ADD X8, X31, 0x8
	0x0340FE64 MOV X0, X31
	0x0340FE68 BL 0x32C4770
	0x0340FE6C LDUR V0, [X31 + 0x8]
	0x0340FE70 LDR X9, [X31 + 0x18]
	0x0340FE74 LDR X2, [X25]
	0x0340FE78 ADD X8, X31, 0x20
	0x0340FE7C STR X20, [X31 + 0x68]
	0x0340FE80 ORR X20, X8, 0xF
	0x0340FE84 MOVN W10, 0x0
	0x0340FE88 ADD X1, X31, 0x20
	0x0340FE8C MOV X0, X20
	0x0340FE90 STP X22, X24, [X31 + 0x48]
	0x0340FE94 STP X23, X21, [X31 + 0x58]
	0x0340FE98 STUR V0, [X31 + 0x28]
	0x0340FE9C STP X9, X19, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCF000
	012 Move X25, 0xCE8000
	013 Move W8, [X26+1406]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD20000
	026 Move X0, [X0+928]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE8000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1406], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD20000
	042 Move W8, [X0+224]
	043 Move X25, [X25+928]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+96], X21
	055 Move [X31+104], X20
	056 Or X20, X8, 15
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W10, TEMP
	060 Add X1, X31, 32
	061 Move X0, X20
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 NotImplemented "Instruction STRH not yet implemented."
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task LinkFacebookInstantGameAsync(System.String bearerToken, Nakama.ApiAccountFacebookInstantGame body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340FEA0 STR W10, [X31 + 0x20]
	0x0340FEA4 BL 0x218D0B8
	0x0340FEA8 MOV X0, X20
	0x0340FEAC MOV X1, X31
	0x0340FEB0 BL 0x32C47F8
	0x0340FEB4 LDP X20, X19, [X31 + 0xC0]
	0x0340FEB8 LDP X22, X21, [X31 + 0xB0]
	0x0340FEBC LDP X24, X23, [X31 + 0xA0]
	0x0340FEC0 LDP X26, X25, [X31 + 0x90]
	0x0340FEC4 LDR X30, [X31 + 0x80]
	0x0340FEC8 ADD X31, X31, 0xD0
	0x0340FECC RET
	0x0340FED0 SUB X31, X31, 0xC0
	0x0340FED4 STR X30, [X31 + 0x60]
	0x0340FED8 STP X28, X27, [X31 + 0x70]
	0x0340FEDC STP X26, X25, [X31 + 0x80]
	0x0340FEE0 STP X24, X23, [X31 + 0x90]
	0x0340FEE4 STP X22, X21, [X31 + 0xA0]
	0x0340FEE8 STP X20, X19, [X31 + 0xB0]
	0x0340FEEC ADRP X27, 0xFCE000
	0x0340FEF0 ADRP X26, 0xD1F000
	0x0340FEF4 LDRB W8, [X27 + 0x590]
	0x0340FEF8 LDR X26, [X26 + 0x448]
	0x0340FEFC MOV X19, X6
	0x0340FF00 MOV X20, X5
	0x0340FF04 MOV X21, X4
	0x0340FF08 MOV X22, X3
	0x0340FF0C MOV X24, X2
	0x0340FF10 MOV X23, X1
	0x0340FF14 MOV X25, X0
	0x0340FF18 TBNZ X8, 0x0, 0x340FF54
	0x0340FF1C ADRP X0, 0xD1F000
	0x0340FF20 LDR X0, [X0 + 0x450]
	0x0340FF24 BL 0x1C16CF4
	0x0340FF28 ADRP X0, 0xD1F000
	0x0340FF2C LDR X0, [X0 + 0x458]
	0x0340FF30 BL 0x1C16CF4
	0x0340FF34 ADRP X0, 0xD1F000
	0x0340FF38 LDR X0, [X0 + 0x460]
	0x0340FF3C BL 0x1C16CF4
	0x0340FF40 ADRP X0, 0xD1F000
	0x0340FF44 LDR X0, [X0 + 0x448]
	0x0340FF48 BL 0x1C16CF4
	0x0340FF4C MOVZ W8, 0x1
	0x0340FF50 STRB W8, [X27 + 0x590]
	0x0340FF54 LDR X0, [X26]
	0x0340FF58 MOVI V0.2D, 0x0
	0x0340FF5C STP V0, V0, [X31 + 0x40]
	0x0340FF60 STP V0, V0, [X31 + 0x20]
	0x0340FF64 STP V0, V0, [X31]
	0x0340FF68 ADRP X26, 0xD1F000
	0x0340FF6C ADRP X28, 0xD1F000
	0x0340FF70 ADRP X27, 0xD1F000
	0x0340FF74 LDR W8, [X0 + 0xE0]
	0x0340FF78 LDR X26, [X26 + 0x450]
	0x0340FF7C LDR X28, [X28 + 0x458]
	0x0340FF80 LDR X27, [X27 + 0x460]
	0x0340FF84 CBNZ W8, 0x340FF8C
	0x0340FF88 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCF000
	011 Move X24, 0xCE8000
	012 Move W8, [X25+1407]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD20000
	024 Move X0, [X0+936]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE8000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1407], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD20000
	039 Move W8, [X0+224]
	040 Move X24, [X24+936]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task LinkGameCenterAsync(System.String bearerToken, Nakama.ApiAccountGameCenter body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0340FF8C LDR X0, [X26]
	0x0340FF90 ADD X8, X31, 0x0
	0x0340FF94 ORR X26, X8, 0xF
	0x0340FF98 MOV X8, X26
	0x0340FF9C BL 0x263221C
	0x0340FFA0 LDR X2, [X28]
	0x0340FFA4 MOVN W8, 0x0
	0x0340FFA8 ADD X1, X31, 0x0
	0x0340FFAC MOV X0, X26
	0x0340FFB0 STP X24, X22, [X31 + 0x20]
	0x0340FFB4 STP X21, X25, [X31 + 0x30]
	0x0340FFB8 STP X23, X20, [X31 + 0x40]
	0x0340FFBC STR X19, [X31 + 0x50]
	0x0340FFC0 STR W8, [X31]
	0x0340FFC4 BL 0x1FC9314
	0x0340FFC8 LDR X1, [X27]
	0x0340FFCC MOV X0, X26
	0x0340FFD0 BL 0x2632230
	0x0340FFD4 LDP X20, X19, [X31 + 0xB0]
	0x0340FFD8 LDP X22, X21, [X31 + 0xA0]
	0x0340FFDC LDP X24, X23, [X31 + 0x90]
	0x0340FFE0 LDP X26, X25, [X31 + 0x80]
	0x0340FFE4 LDP X28, X27, [X31 + 0x70]
	0x0340FFE8 LDR X30, [X31 + 0x60]
	0x0340FFEC ADD X31, X31, 0xC0
	0x0340FFF0 RET
	0x0340FFF4 SUB X31, X31, 0xD0
	0x0340FFF8 STR X30, [X31 + 0x80]
	0x0340FFFC STP X26, X25, [X31 + 0x90]
	0x03410000 STP X24, X23, [X31 + 0xA0]
	0x03410004 STP X22, X21, [X31 + 0xB0]
	0x03410008 STP X20, X19, [X31 + 0xC0]
	0x0341000C ADRP X26, 0xFCD000
	0x03410010 ADRP X25, 0xCE6000
	0x03410014 LDRB W8, [X26 + 0x591]
	0x03410018 LDR X25, [X25 + 0x280]
	0x0341001C MOV X20, X5
	0x03410020 MOV X21, X4
	0x03410024 MOV X22, X3
	0x03410028 MOV X19, X2
	0x0341002C MOV X23, X1
	0x03410030 MOV X24, X0
	0x03410034 TBNZ X8, 0x0, 0x3410058
	0x03410038 ADRP X0, 0xD1E000
	0x0341003C LDR X0, [X0 + 0x468]
	0x03410040 BL 0x1C16CF4
	0x03410044 ADRP X0, 0xCE6000
	0x03410048 LDR X0, [X0 + 0x280]
	0x0341004C BL 0x1C16CF4
	0x03410050 MOVZ W8, 0x1
	0x03410054 STRB W8, [X26 + 0x591]
	0x03410058 LDR X0, [X25]
	0x0341005C MOVI V0.2D, 0x0
	0x03410060 STR X31, [X31 + 0x70]
	0x03410064 STP V0, V0, [X31 + 0x50]
	0x03410068 STP V0, V0, [X31 + 0x30]
	0x0341006C STR V0, [X31 + 0x2]
	0x03410070 ADRP X25, 0xD1E000
	0x03410074 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCF000
	011 Move X24, 0xCE8000
	012 Move W8, [X25+1408]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD20000
	024 Move X0, [X0+944]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE8000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1408], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD20000
	039 Move W8, [X0+224]
	040 Call 0x3EB28AC
	041 Return X0
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X21
	053 Move [X31+96], X20
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+160]
	071 Move X19, [X31+168]
	072 Move X22, [X31+144]
	073 Move X21, [X31+152]
	074 Move X24, [X31+128]
	075 Move X23, [X31+136]
	076 Move X30, [X31+112]
	077 Move X25, [X31+120]
	078 Add X31, X31, 176
	079 Return X0

Method: System.Threading.Tasks.Task LinkGoogleAsync(System.String bearerToken, Nakama.ApiAccountGoogle body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410078 LDR X25, [X25 + 0x468]
	0x0341007C CBNZ W8, 0x3410084
	0x03410080 BL 0x1C16DFC
	0x03410084 ADD X8, X31, 0x8
	0x03410088 MOV X0, X31
	0x0341008C BL 0x32C4770
	0x03410090 LDUR V0, [X31 + 0x8]
	0x03410094 LDR X9, [X31 + 0x18]
	0x03410098 LDR X2, [X25]
	0x0341009C ADD X8, X31, 0x20
	0x034100A0 STR X20, [X31 + 0x68]
	0x034100A4 ORR X20, X8, 0xF
	0x034100A8 MOVN W10, 0x0
	0x034100AC ADD X1, X31, 0x20
	0x034100B0 MOV X0, X20
	0x034100B4 STP X22, X24, [X31 + 0x48]
	0x034100B8 STP X23, X21, [X31 + 0x58]
	0x034100BC STUR V0, [X31 + 0x28]
	0x034100C0 STP X9, X19, [X31 + 0x38]
	0x034100C4 STR W10, [X31 + 0x20]
	0x034100C8 BL 0x218CBB8
	0x034100CC MOV X0, X20
	0x034100D0 MOV X1, X31
	0x034100D4 BL 0x32C47F8
	0x034100D8 LDP X20, X19, [X31 + 0xC0]
	0x034100DC LDP X22, X21, [X31 + 0xB0]
	0x034100E0 LDP X24, X23, [X31 + 0xA0]
	0x034100E4 LDP X26, X25, [X31 + 0x90]
	0x034100E8 LDR X30, [X31 + 0x80]
	0x034100EC ADD X31, X31, 0xD0
	0x034100F0 RET
	0x034100F4 SUB X31, X31, 0xD0
	0x034100F8 STR X30, [X31 + 0x80]
	0x034100FC STP X26, X25, [X31 + 0x90]
	0x03410100 STP X24, X23, [X31 + 0xA0]
	0x03410104 STP X22, X21, [X31 + 0xB0]
	0x03410108 STP X20, X19, [X31 + 0xC0]
	0x0341010C ADRP X26, 0xFCD000
	0x03410110 ADRP X25, 0xCE6000
	0x03410114 LDRB W8, [X26 + 0x592]
	0x03410118 LDR X25, [X25 + 0x280]
	0x0341011C MOV X20, X5
	0x03410120 MOV X21, X4
	0x03410124 MOV X22, X3
	0x03410128 MOV X19, X2
	0x0341012C MOV X23, X1
	0x03410130 MOV X24, X0
	0x03410134 TBNZ X8, 0x0, 0x3410158
	0x03410138 ADRP X0, 0xD1E000
	0x0341013C LDR X0, [X0 + 0x470]
	0x03410140 BL 0x1C16CF4
	0x03410144 ADRP X0, 0xCE6000
	0x03410148 LDR X0, [X0 + 0x280]
	0x0341014C BL 0x1C16CF4
	0x03410150 MOVZ W8, 0x1
	0x03410154 STRB W8, [X26 + 0x592]
	0x03410158 LDR X0, [X25]
	0x0341015C MOVI V0.2D, 0x0
	0x03410160 STR X31, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1409]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+952]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1409], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+952]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task LinkSteamAsync(System.String bearerToken, Nakama.ApiLinkSteamRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410164 STP V0, V0, [X31 + 0x50]
	0x03410168 STP V0, V0, [X31 + 0x30]
	0x0341016C STR V0, [X31 + 0x2]
	0x03410170 ADRP X25, 0xD1E000
	0x03410174 LDR W8, [X0 + 0xE0]
	0x03410178 LDR X25, [X25 + 0x470]
	0x0341017C CBNZ W8, 0x3410184
	0x03410180 BL 0x1C16DFC
	0x03410184 ADD X8, X31, 0x8
	0x03410188 MOV X0, X31
	0x0341018C BL 0x32C4770
	0x03410190 LDUR V0, [X31 + 0x8]
	0x03410194 LDR X9, [X31 + 0x18]
	0x03410198 LDR X2, [X25]
	0x0341019C ADD X8, X31, 0x20
	0x034101A0 STR X20, [X31 + 0x68]
	0x034101A4 ORR X20, X8, 0xF
	0x034101A8 MOVN W10, 0x0
	0x034101AC ADD X1, X31, 0x20
	0x034101B0 MOV X0, X20
	0x034101B4 STP X22, X24, [X31 + 0x48]
	0x034101B8 STP X23, X21, [X31 + 0x58]
	0x034101BC STUR V0, [X31 + 0x28]
	0x034101C0 STP X9, X19, [X31 + 0x38]
	0x034101C4 STR W10, [X31 + 0x20]
	0x034101C8 BL 0x218CEB8
	0x034101CC MOV X0, X20
	0x034101D0 MOV X1, X31
	0x034101D4 BL 0x32C47F8
	0x034101D8 LDP X20, X19, [X31 + 0xC0]
	0x034101DC LDP X22, X21, [X31 + 0xB0]
	0x034101E0 LDP X24, X23, [X31 + 0xA0]
	0x034101E4 LDP X26, X25, [X31 + 0x90]
	0x034101E8 LDR X30, [X31 + 0x80]
	0x034101EC ADD X31, X31, 0xD0
	0x034101F0 RET
	0x034101F4 SUB X31, X31, 0xD0
	0x034101F8 STR X30, [X31 + 0x80]
	0x034101FC STP X26, X25, [X31 + 0x90]
	0x03410200 STP X24, X23, [X31 + 0xA0]
	0x03410204 STP X22, X21, [X31 + 0xB0]
	0x03410208 STP X20, X19, [X31 + 0xC0]
	0x0341020C ADRP X26, 0xFCD000
	0x03410210 ADRP X25, 0xCE6000
	0x03410214 LDRB W8, [X26 + 0x593]
	0x03410218 LDR X25, [X25 + 0x280]
	0x0341021C MOV X20, X5
	0x03410220 MOV X21, X4
	0x03410224 MOV X22, X3
	0x03410228 MOV X19, X2
	0x0341022C MOV X23, X1
	0x03410230 MOV X24, X0
	0x03410234 TBNZ X8, 0x0, 0x3410258
	0x03410238 ADRP X0, 0xD1E000
	0x0341023C LDR X0, [X0 + 0x478]
	0x03410240 BL 0x1C16CF4
	0x03410244 ADRP X0, 0xCE6000
	0x03410248 LDR X0, [X0 + 0x280]
	0x0341024C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1410]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+960]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1410], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+960]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSession> SessionRefreshAsync(System.String basicAuthUsername, System.String basicAuthPassword, Nakama.ApiSessionRefreshRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410250 MOVZ W8, 0x1
	0x03410254 STRB W8, [X26 + 0x593]
	0x03410258 LDR X0, [X25]
	0x0341025C MOVI V0.2D, 0x0
	0x03410260 STR X31, [X31 + 0x70]
	0x03410264 STP V0, V0, [X31 + 0x50]
	0x03410268 STP V0, V0, [X31 + 0x30]
	0x0341026C STR V0, [X31 + 0x2]
	0x03410270 ADRP X25, 0xD1E000
	0x03410274 LDR W8, [X0 + 0xE0]
	0x03410278 LDR X25, [X25 + 0x478]
	0x0341027C CBNZ W8, 0x3410284
	0x03410280 BL 0x1C16DFC
	0x03410284 ADD X8, X31, 0x8
	0x03410288 MOV X0, X31
	0x0341028C BL 0x32C4770
	0x03410290 LDUR V0, [X31 + 0x8]
	0x03410294 LDR X9, [X31 + 0x18]
	0x03410298 LDR X2, [X25]
	0x0341029C ADD X8, X31, 0x20
	0x034102A0 STP X21, X20, [X31 + 0x60]
	0x034102A4 ORR X20, X8, 0xF
	0x034102A8 MOVN W10, 0x0
	0x034102AC ADD X1, X31, 0x20
	0x034102B0 MOV X0, X20
	0x034102B4 STP X24, X23, [X31 + 0x50]
	0x034102B8 STRH W22, [X31 + 0x48]
	0x034102BC STUR V0, [X31 + 0x28]
	0x034102C0 STP X9, X19, [X31 + 0x38]
	0x034102C4 STR W10, [X31 + 0x20]
	0x034102C8 BL 0x218D9B8
	0x034102CC MOV X0, X20
	0x034102D0 MOV X1, X31
	0x034102D4 BL 0x32C47F8
	0x034102D8 LDP X20, X19, [X31 + 0xC0]
	0x034102DC LDP X22, X21, [X31 + 0xB0]
	0x034102E0 LDP X24, X23, [X31 + 0xA0]
	0x034102E4 LDP X26, X25, [X31 + 0x90]
	0x034102E8 LDR X30, [X31 + 0x80]
	0x034102EC ADD X31, X31, 0xD0
	0x034102F0 RET
	0x034102F4 SUB X31, X31, 0xD0
	0x034102F8 STR X30, [X31 + 0x80]
	0x034102FC STP X26, X25, [X31 + 0x90]
	0x03410300 STP X24, X23, [X31 + 0xA0]
	0x03410304 STP X22, X21, [X31 + 0xB0]
	0x03410308 STP X20, X19, [X31 + 0xC0]
	0x0341030C ADRP X26, 0xFCD000
	0x03410310 ADRP X25, 0xCE6000
	0x03410314 LDRB W8, [X26 + 0x594]
	0x03410318 LDR X25, [X25 + 0x280]
	0x0341031C MOV X20, X5
	0x03410320 MOV X21, X4
	0x03410324 MOV X22, X3
	0x03410328 MOV X19, X2
	0x0341032C MOV X23, X1
	0x03410330 MOV X24, X0
	0x03410334 TBNZ X8, 0x0, 0x3410358
	0x03410338 ADRP X0, 0xD1E000
	0x0341033C LDR X0, [X0 + 0x480]
	0x03410340 BL 0x1C16CF4
	0x03410344 ADRP X0, 0xCE6000
	0x03410348 LDR X0, [X0 + 0x280]
	0x0341034C BL 0x1C16CF4
	0x03410350 MOVZ W8, 0x1
	0x03410354 STRB W8, [X26 + 0x594]
	0x03410358 LDR X0, [X25]
	0x0341035C MOVI V0.2D, 0x0
	0x03410360 STR X31, [X31 + 0x70]
	0x03410364 STP V0, V0, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xFCE000
	013 Move X25, 0xD1F000
	014 Move W8, [X26+1411]
	015 Move X25, [X25+800]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X24, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xD1F000
	027 Move X0, [X0+808]
	028 Call 0x1C17CF4
	029 Move X0, 0xD1F000
	030 Move X0, [X0+968]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1F000
	033 Move X0, [X0+824]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1F000
	036 Move X0, [X0+800]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1411], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xD1F000
	049 Move X27, 0xD1F000
	050 Move X26, 0xD1F000
	051 Move W8, [X0+224]
	052 Move X25, [X25+808]
	053 Move X27, [X27+968]
	054 Move X26, [X26+824]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+48], X24
	070 Move [X31+56], X22
	071 Move [X31+32], X21
	072 Move [X31+40], X23
	073 Move [X31+64], X20
	074 Move [X31+72], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task UnlinkAppleAsync(System.String bearerToken, Nakama.ApiAccountApple body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410368 STP V0, V0, [X31 + 0x30]
	0x0341036C STR V0, [X31 + 0x2]
	0x03410370 ADRP X25, 0xD1E000
	0x03410374 LDR W8, [X0 + 0xE0]
	0x03410378 LDR X25, [X25 + 0x480]
	0x0341037C CBNZ W8, 0x3410384
	0x03410380 BL 0x1C16DFC
	0x03410384 ADD X8, X31, 0x8
	0x03410388 MOV X0, X31
	0x0341038C BL 0x32C4770
	0x03410390 LDUR V0, [X31 + 0x8]
	0x03410394 LDR X9, [X31 + 0x18]
	0x03410398 LDR X2, [X25]
	0x0341039C ADD X8, X31, 0x20
	0x034103A0 STP X21, X20, [X31 + 0x60]
	0x034103A4 ORR X20, X8, 0xF
	0x034103A8 MOVN W10, 0x0
	0x034103AC ADD X1, X31, 0x20
	0x034103B0 MOV X0, X20
	0x034103B4 STP X24, X23, [X31 + 0x50]
	0x034103B8 STRH W22, [X31 + 0x48]
	0x034103BC STUR V0, [X31 + 0x28]
	0x034103C0 STP X9, X19, [X31 + 0x38]
	0x034103C4 STR W10, [X31 + 0x20]
	0x034103C8 BL 0x218DAB8
	0x034103CC MOV X0, X20
	0x034103D0 MOV X1, X31
	0x034103D4 BL 0x32C47F8
	0x034103D8 LDP X20, X19, [X31 + 0xC0]
	0x034103DC LDP X22, X21, [X31 + 0xB0]
	0x034103E0 LDP X24, X23, [X31 + 0xA0]
	0x034103E4 LDP X26, X25, [X31 + 0x90]
	0x034103E8 LDR X30, [X31 + 0x80]
	0x034103EC ADD X31, X31, 0xD0
	0x034103F0 RET
	0x034103F4 SUB X31, X31, 0xF0
	0x034103F8 STP X29, X30, [X31 + 0x90]
	0x034103FC STP X28, X27, [X31 + 0xA0]
	0x03410400 STP X26, X25, [X31 + 0xB0]
	0x03410404 STP X24, X23, [X31 + 0xC0]
	0x03410408 STP X22, X21, [X31 + 0xD0]
	0x0341040C STP X20, X19, [X31 + 0xE0]
	0x03410410 STR X7, [X31 + 0x8]
	0x03410414 ADRP X28, 0xFCD000
	0x03410418 ADRP X27, 0xD1E000
	0x0341041C LDRB W8, [X28 + 0x595]
	0x03410420 LDR X27, [X27 + 0x488]
	0x03410424 MOV X20, X6
	0x03410428 MOV X21, X5
	0x0341042C MOV X22, X4
	0x03410430 MOV X23, X3
	0x03410434 MOV X24, X2
	0x03410438 MOV X25, X1
	0x0341043C MOV X26, X0
	0x03410440 TBNZ X8, 0x0, 0x341047C
	0x03410444 ADRP X0, 0xD1E000
	0x03410448 LDR X0, [X0 + 0x490]
	0x0341044C BL 0x1C16CF4
	0x03410450 ADRP X0, 0xD1E000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1412]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+976]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1412], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+976]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UnlinkCustomAsync(System.String bearerToken, Nakama.ApiAccountCustom body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410454 LDR X0, [X0 + 0x498]
	0x03410458 BL 0x1C16CF4
	0x0341045C ADRP X0, 0xD1E000
	0x03410460 LDR X0, [X0 + 0x4A0]
	0x03410464 BL 0x1C16CF4
	0x03410468 ADRP X0, 0xD1E000
	0x0341046C LDR X0, [X0 + 0x488]
	0x03410470 BL 0x1C16CF4
	0x03410474 MOVZ W8, 0x1
	0x03410478 STRB W8, [X28 + 0x595]
	0x0341047C LDR X0, [X27]
	0x03410480 MOVI V0.2D, 0x0
	0x03410484 STR X31, [X31 + 0x80]
	0x03410488 STP V0, V0, [X31 + 0x60]
	0x0341048C STP V0, V0, [X31 + 0x40]
	0x03410490 STP V0, V0, [X31 + 0x20]
	0x03410494 STR V0, [X31 + 0x1]
	0x03410498 ADRP X27, 0xD1E000
	0x0341049C ADRP X19, 0xD1E000
	0x034104A0 LDR W8, [X0 + 0xE0]
	0x034104A4 LDP X28, X29, [X31 + 0xF0]
	0x034104A8 LDR X27, [X27 + 0x490]
	0x034104AC LDR X19, [X19 + 0x498]
	0x034104B0 CBNZ W8, 0x34104B8
	0x034104B4 BL 0x1C16DFC
	0x034104B8 LDR X0, [X27]
	0x034104BC ADD X8, X31, 0x10
	0x034104C0 ORR X27, X8, 0xF
	0x034104C4 MOV X8, X27
	0x034104C8 BL 0x263221C
	0x034104CC LDR X8, [X31 + 0x8]
	0x034104D0 LDR X2, [X19]
	0x034104D4 ADD X1, X31, 0x10
	0x034104D8 MOV X0, X27
	0x034104DC STRH W8, [X31 + 0x58]
	0x034104E0 MOVN W8, 0x0
	0x034104E4 STP X26, X25, [X31 + 0x60]
	0x034104E8 STP X24, X23, [X31 + 0x30]
	0x034104EC STP X22, X21, [X31 + 0x40]
	0x034104F0 STR X20, [X31 + 0x50]
	0x034104F4 STP X28, X29, [X31 + 0x70]
	0x034104F8 STR W8, [X31 + 0x10]
	0x034104FC BL 0x1FC9514
	0x03410500 ADRP X8, 0xD1E000
	0x03410504 LDR X8, [X8 + 0x4A0]
	0x03410508 MOV X0, X27
	0x0341050C LDR X1, [X8]
	0x03410510 BL 0x2632230
	0x03410514 LDP X20, X19, [X31 + 0xE0]
	0x03410518 LDP X22, X21, [X31 + 0xD0]
	0x0341051C LDP X24, X23, [X31 + 0xC0]
	0x03410520 LDP X26, X25, [X31 + 0xB0]
	0x03410524 LDP X28, X27, [X31 + 0xA0]
	0x03410528 LDP X29, X30, [X31 + 0x90]
	0x0341052C ADD X31, X31, 0xF0
	0x03410530 RET
	0x03410534 SUB X31, X31, 0xA0
	0x03410538 STR X30, [X31 + 0x50]
	0x0341053C STP X26, X25, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1413]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+984]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1413], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+984]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UnlinkDeviceAsync(System.String bearerToken, Nakama.ApiAccountDevice body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410540 STP X24, X23, [X31 + 0x70]
	0x03410544 STP X22, X21, [X31 + 0x80]
	0x03410548 STP X20, X19, [X31 + 0x90]
	0x0341054C ADRP X25, 0xFCD000
	0x03410550 ADRP X24, 0xD1E000
	0x03410554 LDRB W8, [X25 + 0x596]
	0x03410558 LDR X24, [X24 + 0x4A8]
	0x0341055C MOV X19, X4
	0x03410560 MOV X20, X3
	0x03410564 MOV X21, X2
	0x03410568 MOV X22, X1
	0x0341056C MOV X23, X0
	0x03410570 TBNZ X8, 0x0, 0x34105AC
	0x03410574 ADRP X0, 0xD1E000
	0x03410578 LDR X0, [X0 + 0x4B0]
	0x0341057C BL 0x1C16CF4
	0x03410580 ADRP X0, 0xD1E000
	0x03410584 LDR X0, [X0 + 0x4B8]
	0x03410588 BL 0x1C16CF4
	0x0341058C ADRP X0, 0xD1E000
	0x03410590 LDR X0, [X0 + 0x4C0]
	0x03410594 BL 0x1C16CF4
	0x03410598 ADRP X0, 0xD1E000
	0x0341059C LDR X0, [X0 + 0x4A8]
	0x034105A0 BL 0x1C16CF4
	0x034105A4 MOVZ W8, 0x1
	0x034105A8 STRB W8, [X25 + 0x596]
	0x034105AC LDR X0, [X24]
	0x034105B0 MOVI V0.2D, 0x0
	0x034105B4 STP V0, V0, [X31 + 0x30]
	0x034105B8 STP V0, V0, [X31 + 0x10]
	0x034105BC STR V0, [X31]
	0x034105C0 ADRP X24, 0xD1E000
	0x034105C4 ADRP X26, 0xD1E000
	0x034105C8 ADRP X25, 0xD1E000
	0x034105CC LDR W8, [X0 + 0xE0]
	0x034105D0 LDR X24, [X24 + 0x4B0]
	0x034105D4 LDR X26, [X26 + 0x4B8]
	0x034105D8 LDR X25, [X25 + 0x4C0]
	0x034105DC CBNZ W8, 0x34105E4
	0x034105E0 BL 0x1C16DFC
	0x034105E4 LDR X0, [X24]
	0x034105E8 ADD X8, X31, 0x0
	0x034105EC ORR X24, X8, 0xF
	0x034105F0 MOV X8, X24
	0x034105F4 BL 0x263221C
	0x034105F8 LDR X2, [X26]
	0x034105FC MOVN W8, 0x0
	0x03410600 ADD X1, X31, 0x0
	0x03410604 MOV X0, X24
	0x03410608 STP X21, X23, [X31 + 0x20]
	0x0341060C STP X22, X20, [X31 + 0x30]
	0x03410610 STR X19, [X31 + 0x40]
	0x03410614 STR W8, [X31]
	0x03410618 BL 0x1FC8E14
	0x0341061C LDR X1, [X25]
	0x03410620 MOV X0, X24
	0x03410624 BL 0x2632230
	0x03410628 LDP X20, X19, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1414]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+992]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1414], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+992]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UnlinkEmailAsync(System.String bearerToken, Nakama.ApiAccountEmail body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0341062C LDP X22, X21, [X31 + 0x80]
	0x03410630 LDP X24, X23, [X31 + 0x70]
	0x03410634 LDP X26, X25, [X31 + 0x60]
	0x03410638 LDR X30, [X31 + 0x50]
	0x0341063C ADD X31, X31, 0xA0
	0x03410640 RET
	0x03410644 SUB X31, X31, 0xB0
	0x03410648 STP X30, X25, [X31 + 0x70]
	0x0341064C STP X24, X23, [X31 + 0x80]
	0x03410650 STP X22, X21, [X31 + 0x90]
	0x03410654 STP X20, X19, [X31 + 0xA0]
	0x03410658 ADRP X25, 0xFCD000
	0x0341065C ADRP X24, 0xCE6000
	0x03410660 LDRB W8, [X25 + 0x597]
	0x03410664 LDR X24, [X24 + 0x280]
	0x03410668 MOV X20, X4
	0x0341066C MOV X21, X3
	0x03410670 MOV X19, X2
	0x03410674 MOV X22, X1
	0x03410678 MOV X23, X0
	0x0341067C TBNZ X8, 0x0, 0x34106A0
	0x03410680 ADRP X0, 0xD1E000
	0x03410684 LDR X0, [X0 + 0x4C8]
	0x03410688 BL 0x1C16CF4
	0x0341068C ADRP X0, 0xCE6000
	0x03410690 LDR X0, [X0 + 0x280]
	0x03410694 BL 0x1C16CF4
	0x03410698 MOVZ W8, 0x1
	0x0341069C STRB W8, [X25 + 0x597]
	0x034106A0 LDR X0, [X24]
	0x034106A4 MOVI V0.2D, 0x0
	0x034106A8 STP V0, V0, [X31 + 0x50]
	0x034106AC STP V0, V0, [X31 + 0x30]
	0x034106B0 STR V0, [X31 + 0x2]
	0x034106B4 ADRP X24, 0xD1E000
	0x034106B8 LDR W8, [X0 + 0xE0]
	0x034106BC LDR X24, [X24 + 0x4C8]
	0x034106C0 CBNZ W8, 0x34106C8
	0x034106C4 BL 0x1C16DFC
	0x034106C8 ADD X8, X31, 0x8
	0x034106CC MOV X0, X31
	0x034106D0 BL 0x32C4770
	0x034106D4 LDUR V0, [X31 + 0x8]
	0x034106D8 LDR X9, [X31 + 0x18]
	0x034106DC LDR X2, [X24]
	0x034106E0 ADD X8, X31, 0x20
	0x034106E4 STP X21, X20, [X31 + 0x58]
	0x034106E8 ORR X20, X8, 0xF
	0x034106EC MOVN W10, 0x0
	0x034106F0 ADD X1, X31, 0x20
	0x034106F4 MOV X0, X20
	0x034106F8 STP X23, X22, [X31 + 0x48]
	0x034106FC STUR V0, [X31 + 0x28]
	0x03410700 STP X9, X19, [X31 + 0x38]
	0x03410704 STR W10, [X31 + 0x20]
	0x03410708 BL 0x218D1B8
	0x0341070C MOV X0, X20
	0x03410710 MOV X1, X31
	0x03410714 BL 0x32C47F8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1415]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+1000]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1415], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1000]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UnlinkFacebookAsync(System.String bearerToken, Nakama.ApiAccountFacebook body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410718 LDP X20, X19, [X31 + 0xA0]
	0x0341071C LDP X22, X21, [X31 + 0x90]
	0x03410720 LDP X24, X23, [X31 + 0x80]
	0x03410724 LDP X30, X25, [X31 + 0x70]
	0x03410728 ADD X31, X31, 0xB0
	0x0341072C RET
	0x03410730 SUB X31, X31, 0xD0
	0x03410734 STR X30, [X31 + 0x80]
	0x03410738 STP X26, X25, [X31 + 0x90]
	0x0341073C STP X24, X23, [X31 + 0xA0]
	0x03410740 STP X22, X21, [X31 + 0xB0]
	0x03410744 STP X20, X19, [X31 + 0xC0]
	0x03410748 ADRP X26, 0xFCD000
	0x0341074C ADRP X25, 0xCE6000
	0x03410750 LDRB W8, [X26 + 0x598]
	0x03410754 LDR X25, [X25 + 0x280]
	0x03410758 MOV X20, X5
	0x0341075C MOV X21, X4
	0x03410760 MOV X22, X3
	0x03410764 MOV X19, X2
	0x03410768 MOV X23, X1
	0x0341076C MOV X24, X0
	0x03410770 TBNZ X8, 0x0, 0x3410794
	0x03410774 ADRP X0, 0xD1E000
	0x03410778 LDR X0, [X0 + 0x4D0]
	0x0341077C BL 0x1C16CF4
	0x03410780 ADRP X0, 0xCE6000
	0x03410784 LDR X0, [X0 + 0x280]
	0x03410788 BL 0x1C16CF4
	0x0341078C MOVZ W8, 0x1
	0x03410790 STRB W8, [X26 + 0x598]
	0x03410794 LDR X0, [X25]
	0x03410798 MOVI V0.2D, 0x0
	0x0341079C STR X31, [X31 + 0x70]
	0x034107A0 STP V0, V0, [X31 + 0x50]
	0x034107A4 STP V0, V0, [X31 + 0x30]
	0x034107A8 STR V0, [X31 + 0x2]
	0x034107AC ADRP X25, 0xD1E000
	0x034107B0 LDR W8, [X0 + 0xE0]
	0x034107B4 LDR X25, [X25 + 0x4D0]
	0x034107B8 CBNZ W8, 0x34107C0
	0x034107BC BL 0x1C16DFC
	0x034107C0 ADD X8, X31, 0x8
	0x034107C4 MOV X0, X31
	0x034107C8 BL 0x32C4770
	0x034107CC LDUR V0, [X31 + 0x8]
	0x034107D0 LDR X9, [X31 + 0x18]
	0x034107D4 LDR X2, [X25]
	0x034107D8 ADD X8, X31, 0x20
	0x034107DC STR X20, [X31 + 0x68]
	0x034107E0 ORR X20, X8, 0xF
	0x034107E4 MOVN W10, 0x0
	0x034107E8 ADD X1, X31, 0x20
	0x034107EC MOV X0, X20
	0x034107F0 STP X22, X24, [X31 + 0x48]
	0x034107F4 STP X23, X21, [X31 + 0x58]
	0x034107F8 STUR V0, [X31 + 0x28]
	0x034107FC STP X9, X19, [X31 + 0x38]
	0x03410800 STR W10, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1416]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+1008]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1416], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1008]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UnlinkFacebookInstantGameAsync(System.String bearerToken, Nakama.ApiAccountFacebookInstantGame body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410804 BL 0x218F4B8
	0x03410808 MOV X0, X20
	0x0341080C MOV X1, X31
	0x03410810 BL 0x32C47F8
	0x03410814 LDP X20, X19, [X31 + 0xC0]
	0x03410818 LDP X22, X21, [X31 + 0xB0]
	0x0341081C LDP X24, X23, [X31 + 0xA0]
	0x03410820 LDP X26, X25, [X31 + 0x90]
	0x03410824 LDR X30, [X31 + 0x80]
	0x03410828 ADD X31, X31, 0xD0
	0x0341082C RET
	0x03410830 SUB X31, X31, 0xD0
	0x03410834 STR X30, [X31 + 0x80]
	0x03410838 STP X26, X25, [X31 + 0x90]
	0x0341083C STP X24, X23, [X31 + 0xA0]
	0x03410840 STP X22, X21, [X31 + 0xB0]
	0x03410844 STP X20, X19, [X31 + 0xC0]
	0x03410848 ADRP X26, 0xFCD000
	0x0341084C ADRP X25, 0xCE6000
	0x03410850 LDRB W8, [X26 + 0x599]
	0x03410854 LDR X25, [X25 + 0x280]
	0x03410858 MOV X20, X5
	0x0341085C MOV X21, X4
	0x03410860 MOV X22, X3
	0x03410864 MOV X19, X2
	0x03410868 MOV X23, X1
	0x0341086C MOV X24, X0
	0x03410870 TBNZ X8, 0x0, 0x3410894
	0x03410874 ADRP X0, 0xD1E000
	0x03410878 LDR X0, [X0 + 0x4D8]
	0x0341087C BL 0x1C16CF4
	0x03410880 ADRP X0, 0xCE6000
	0x03410884 LDR X0, [X0 + 0x280]
	0x03410888 BL 0x1C16CF4
	0x0341088C MOVZ W8, 0x1
	0x03410890 STRB W8, [X26 + 0x599]
	0x03410894 LDR X0, [X25]
	0x03410898 MOVI V0.2D, 0x0
	0x0341089C STR X31, [X31 + 0x70]
	0x034108A0 STP V0, V0, [X31 + 0x50]
	0x034108A4 STP V0, V0, [X31 + 0x30]
	0x034108A8 STR V0, [X31 + 0x2]
	0x034108AC ADRP X25, 0xD1E000
	0x034108B0 LDR W8, [X0 + 0xE0]
	0x034108B4 LDR X25, [X25 + 0x4D8]
	0x034108B8 CBNZ W8, 0x34108C0
	0x034108BC BL 0x1C16DFC
	0x034108C0 ADD X8, X31, 0x8
	0x034108C4 MOV X0, X31
	0x034108C8 BL 0x32C4770
	0x034108CC LDUR V0, [X31 + 0x8]
	0x034108D0 LDR X9, [X31 + 0x18]
	0x034108D4 LDR X2, [X25]
	0x034108D8 ADD X8, X31, 0x20
	0x034108DC STR X20, [X31 + 0x68]
	0x034108E0 ORR X20, X8, 0xF
	0x034108E4 MOVN W10, 0x0
	0x034108E8 ADD X1, X31, 0x20
	0x034108EC MOV X0, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1417]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+1016]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1417], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1016]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UnlinkGameCenterAsync(System.String bearerToken, Nakama.ApiAccountGameCenter body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034108F0 STP X22, X24, [X31 + 0x48]
	0x034108F4 STP X23, X21, [X31 + 0x58]
	0x034108F8 STUR V0, [X31 + 0x28]
	0x034108FC STP X9, X19, [X31 + 0x38]
	0x03410900 STR W10, [X31 + 0x20]
	0x03410904 BL 0x218CCB8
	0x03410908 MOV X0, X20
	0x0341090C MOV X1, X31
	0x03410910 BL 0x32C47F8
	0x03410914 LDP X20, X19, [X31 + 0xC0]
	0x03410918 LDP X22, X21, [X31 + 0xB0]
	0x0341091C LDP X24, X23, [X31 + 0xA0]
	0x03410920 LDP X26, X25, [X31 + 0x90]
	0x03410924 LDR X30, [X31 + 0x80]
	0x03410928 ADD X31, X31, 0xD0
	0x0341092C RET
	0x03410930 SUB X31, X31, 0xD0
	0x03410934 STR X30, [X31 + 0x80]
	0x03410938 STP X26, X25, [X31 + 0x90]
	0x0341093C STP X24, X23, [X31 + 0xA0]
	0x03410940 STP X22, X21, [X31 + 0xB0]
	0x03410944 STP X20, X19, [X31 + 0xC0]
	0x03410948 ADRP X26, 0xFCD000
	0x0341094C ADRP X25, 0xCE6000
	0x03410950 LDRB W8, [X26 + 0x59A]
	0x03410954 LDR X25, [X25 + 0x280]
	0x03410958 MOV X20, X5
	0x0341095C MOV X21, X4
	0x03410960 MOV X22, X3
	0x03410964 MOV X19, X2
	0x03410968 MOV X23, X1
	0x0341096C MOV X24, X0
	0x03410970 TBNZ X8, 0x0, 0x3410994
	0x03410974 ADRP X0, 0xD1E000
	0x03410978 LDR X0, [X0 + 0x4E0]
	0x0341097C BL 0x1C16CF4
	0x03410980 ADRP X0, 0xCE6000
	0x03410984 LDR X0, [X0 + 0x280]
	0x03410988 BL 0x1C16CF4
	0x0341098C MOVZ W8, 0x1
	0x03410990 STRB W8, [X26 + 0x59A]
	0x03410994 LDR X0, [X25]
	0x03410998 MOVI V0.2D, 0x0
	0x0341099C STR X31, [X31 + 0x70]
	0x034109A0 STP V0, V0, [X31 + 0x50]
	0x034109A4 STP V0, V0, [X31 + 0x30]
	0x034109A8 STR V0, [X31 + 0x2]
	0x034109AC ADRP X25, 0xD1E000
	0x034109B0 LDR W8, [X0 + 0xE0]
	0x034109B4 LDR X25, [X25 + 0x4E0]
	0x034109B8 CBNZ W8, 0x34109C0
	0x034109BC BL 0x1C16DFC
	0x034109C0 ADD X8, X31, 0x8
	0x034109C4 MOV X0, X31
	0x034109C8 BL 0x32C4770
	0x034109CC LDUR V0, [X31 + 0x8]
	0x034109D0 LDR X9, [X31 + 0x18]
	0x034109D4 LDR X2, [X25]
	0x034109D8 ADD X8, X31, 0x20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1418]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+1024]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1418], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1024]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UnlinkGoogleAsync(System.String bearerToken, Nakama.ApiAccountGoogle body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034109DC STR X20, [X31 + 0x68]
	0x034109E0 ORR X20, X8, 0xF
	0x034109E4 MOVN W10, 0x0
	0x034109E8 ADD X1, X31, 0x20
	0x034109EC MOV X0, X20
	0x034109F0 STP X22, X24, [X31 + 0x48]
	0x034109F4 STP X23, X21, [X31 + 0x58]
	0x034109F8 STUR V0, [X31 + 0x28]
	0x034109FC STP X9, X19, [X31 + 0x38]
	0x03410A00 STR W10, [X31 + 0x20]
	0x03410A04 BL 0x218CDB8
	0x03410A08 MOV X0, X20
	0x03410A0C MOV X1, X31
	0x03410A10 BL 0x32C47F8
	0x03410A14 LDP X20, X19, [X31 + 0xC0]
	0x03410A18 LDP X22, X21, [X31 + 0xB0]
	0x03410A1C LDP X24, X23, [X31 + 0xA0]
	0x03410A20 LDP X26, X25, [X31 + 0x90]
	0x03410A24 LDR X30, [X31 + 0x80]
	0x03410A28 ADD X31, X31, 0xD0
	0x03410A2C RET
	0x03410A30 SUB X31, X31, 0xD0
	0x03410A34 STR X30, [X31 + 0x80]
	0x03410A38 STP X26, X25, [X31 + 0x90]
	0x03410A3C STP X24, X23, [X31 + 0xA0]
	0x03410A40 STP X22, X21, [X31 + 0xB0]
	0x03410A44 STP X20, X19, [X31 + 0xC0]
	0x03410A48 ADRP X26, 0xFCD000
	0x03410A4C ADRP X25, 0xCE6000
	0x03410A50 LDRB W8, [X26 + 0x59B]
	0x03410A54 LDR X25, [X25 + 0x280]
	0x03410A58 MOV X20, X5
	0x03410A5C MOV X21, X4
	0x03410A60 MOV X22, X3
	0x03410A64 MOV X19, X2
	0x03410A68 MOV X23, X1
	0x03410A6C MOV X24, X0
	0x03410A70 TBNZ X8, 0x0, 0x3410A94
	0x03410A74 ADRP X0, 0xD1E000
	0x03410A78 LDR X0, [X0 + 0x4E8]
	0x03410A7C BL 0x1C16CF4
	0x03410A80 ADRP X0, 0xCE6000
	0x03410A84 LDR X0, [X0 + 0x280]
	0x03410A88 BL 0x1C16CF4
	0x03410A8C MOVZ W8, 0x1
	0x03410A90 STRB W8, [X26 + 0x59B]
	0x03410A94 LDR X0, [X25]
	0x03410A98 MOVI V0.2D, 0x0
	0x03410A9C STR X31, [X31 + 0x70]
	0x03410AA0 STP V0, V0, [X31 + 0x50]
	0x03410AA4 STP V0, V0, [X31 + 0x30]
	0x03410AA8 STR V0, [X31 + 0x2]
	0x03410AAC ADRP X25, 0xD1E000
	0x03410AB0 LDR W8, [X0 + 0xE0]
	0x03410AB4 LDR X25, [X25 + 0x4E8]
	0x03410AB8 CBNZ W8, 0x3410AC0
	0x03410ABC BL 0x1C16DFC
	0x03410AC0 ADD X8, X31, 0x8
	0x03410AC4 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1419]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+1032]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1419], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1032]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UnlinkSteamAsync(System.String bearerToken, Nakama.ApiAccountSteam body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410AC8 BL 0x32C4770
	0x03410ACC LDUR V0, [X31 + 0x8]
	0x03410AD0 LDR X9, [X31 + 0x18]
	0x03410AD4 LDR X2, [X25]
	0x03410AD8 ADD X8, X31, 0x20
	0x03410ADC STR X20, [X31 + 0x68]
	0x03410AE0 ORR X20, X8, 0xF
	0x03410AE4 MOVN W10, 0x0
	0x03410AE8 ADD X1, X31, 0x20
	0x03410AEC MOV X0, X20
	0x03410AF0 STP X22, X24, [X31 + 0x48]
	0x03410AF4 STP X23, X21, [X31 + 0x58]
	0x03410AF8 STUR V0, [X31 + 0x28]
	0x03410AFC STP X9, X19, [X31 + 0x38]
	0x03410B00 STR W10, [X31 + 0x20]
	0x03410B04 BL 0x218D6B8
	0x03410B08 MOV X0, X20
	0x03410B0C MOV X1, X31
	0x03410B10 BL 0x32C47F8
	0x03410B14 LDP X20, X19, [X31 + 0xC0]
	0x03410B18 LDP X22, X21, [X31 + 0xB0]
	0x03410B1C LDP X24, X23, [X31 + 0xA0]
	0x03410B20 LDP X26, X25, [X31 + 0x90]
	0x03410B24 LDR X30, [X31 + 0x80]
	0x03410B28 ADD X31, X31, 0xD0
	0x03410B2C RET
	0x03410B30 SUB X31, X31, 0xB0
	0x03410B34 STP X30, X25, [X31 + 0x70]
	0x03410B38 STP X24, X23, [X31 + 0x80]
	0x03410B3C STP X22, X21, [X31 + 0x90]
	0x03410B40 STP X20, X19, [X31 + 0xA0]
	0x03410B44 ADRP X25, 0xFCD000
	0x03410B48 ADRP X24, 0xCE6000
	0x03410B4C LDRB W8, [X25 + 0x59C]
	0x03410B50 LDR X24, [X24 + 0x280]
	0x03410B54 MOV X20, X4
	0x03410B58 MOV X21, X3
	0x03410B5C MOV X19, X2
	0x03410B60 MOV X22, X1
	0x03410B64 MOV X23, X0
	0x03410B68 TBNZ X8, 0x0, 0x3410B8C
	0x03410B6C ADRP X0, 0xD1E000
	0x03410B70 LDR X0, [X0 + 0x4F0]
	0x03410B74 BL 0x1C16CF4
	0x03410B78 ADRP X0, 0xCE6000
	0x03410B7C LDR X0, [X0 + 0x280]
	0x03410B80 BL 0x1C16CF4
	0x03410B84 MOVZ W8, 0x1
	0x03410B88 STRB W8, [X25 + 0x59C]
	0x03410B8C LDR X0, [X24]
	0x03410B90 MOVI V0.2D, 0x0
	0x03410B94 STP V0, V0, [X31 + 0x50]
	0x03410B98 STP V0, V0, [X31 + 0x30]
	0x03410B9C STR V0, [X31 + 0x2]
	0x03410BA0 ADRP X24, 0xD1E000
	0x03410BA4 LDR W8, [X0 + 0xE0]
	0x03410BA8 LDR X24, [X24 + 0x4F0]
	0x03410BAC CBNZ W8, 0x3410BB4
	0x03410BB0 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1420]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+1040]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1420], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1040]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiChannelMessageList> ListChannelMessagesAsync(System.String bearerToken, System.String channelId, System.Nullable`1<System.Int32> limit, System.Nullable`1<System.Boolean> forward, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410BB4 ADD X8, X31, 0x8
	0x03410BB8 MOV X0, X31
	0x03410BBC BL 0x32C4770
	0x03410BC0 LDUR V0, [X31 + 0x8]
	0x03410BC4 LDR X9, [X31 + 0x18]
	0x03410BC8 LDR X2, [X24]
	0x03410BCC ADD X8, X31, 0x20
	0x03410BD0 STP X21, X20, [X31 + 0x58]
	0x03410BD4 ORR X20, X8, 0xF
	0x03410BD8 MOVN W10, 0x0
	0x03410BDC ADD X1, X31, 0x20
	0x03410BE0 MOV X0, X20
	0x03410BE4 STP X23, X22, [X31 + 0x48]
	0x03410BE8 STUR V0, [X31 + 0x28]
	0x03410BEC STP X9, X19, [X31 + 0x38]
	0x03410BF0 STR W10, [X31 + 0x20]
	0x03410BF4 BL 0x218DBB8
	0x03410BF8 MOV X0, X20
	0x03410BFC MOV X1, X31
	0x03410C00 BL 0x32C47F8
	0x03410C04 LDP X20, X19, [X31 + 0xA0]
	0x03410C08 LDP X22, X21, [X31 + 0x90]
	0x03410C0C LDP X24, X23, [X31 + 0x80]
	0x03410C10 LDP X30, X25, [X31 + 0x70]
	0x03410C14 ADD X31, X31, 0xB0
	0x03410C18 RET
	0x03410C1C SUB X31, X31, 0xD0
	0x03410C20 STR X30, [X31 + 0x80]
	0x03410C24 STP X26, X25, [X31 + 0x90]
	0x03410C28 STP X24, X23, [X31 + 0xA0]
	0x03410C2C STP X22, X21, [X31 + 0xB0]
	0x03410C30 STP X20, X19, [X31 + 0xC0]
	0x03410C34 ADRP X26, 0xFCD000
	0x03410C38 ADRP X25, 0xCE6000
	0x03410C3C LDRB W8, [X26 + 0x59D]
	0x03410C40 LDR X25, [X25 + 0x280]
	0x03410C44 MOV X20, X5
	0x03410C48 MOV X21, X4
	0x03410C4C MOV X22, X3
	0x03410C50 MOV X19, X2
	0x03410C54 MOV X23, X1
	0x03410C58 MOV X24, X0
	0x03410C5C TBNZ X8, 0x0, 0x3410C80
	0x03410C60 ADRP X0, 0xD1E000
	0x03410C64 LDR X0, [X0 + 0x4F8]
	0x03410C68 BL 0x1C16CF4
	0x03410C6C ADRP X0, 0xCE6000
	0x03410C70 LDR X0, [X0 + 0x280]
	0x03410C74 BL 0x1C16CF4
	0x03410C78 MOVZ W8, 0x1
	0x03410C7C STRB W8, [X26 + 0x59D]
	0x03410C80 LDR X0, [X25]
	0x03410C84 MOVI V0.2D, 0x0
	0x03410C88 STR X31, [X31 + 0x70]
	0x03410C8C STP V0, V0, [X31 + 0x50]
	0x03410C90 STP V0, V0, [X31 + 0x30]
	0x03410C94 STR V0, [X31 + 0x2]
	0x03410C98 ADRP X25, 0xD1E000
	0x03410C9C LDR W8, [X0 + 0xE0]
	0x03410CA0 LDR X25, [X25 + 0x4F8]
	0x03410CA4 CBNZ W8, 0x3410CAC
	0x03410CA8 BL 0x1C16DFC
	0x03410CAC ADD X8, X31, 0x8
	0x03410CB0 MOV X0, X31
	0x03410CB4 BL 0x32C4770
	0x03410CB8 LDUR V0, [X31 + 0x8]
	0x03410CBC LDR X9, [X31 + 0x18]
	0x03410CC0 LDR X2, [X25]
	0x03410CC4 ADD X8, X31, 0x20
	0x03410CC8 STR X20, [X31 + 0x68]
	0x03410CCC ORR X20, X8, 0xF
	0x03410CD0 MOVN W10, 0x0
	0x03410CD4 ADD X1, X31, 0x20
	0x03410CD8 MOV X0, X20
	0x03410CDC STP X22, X24, [X31 + 0x48]
	0x03410CE0 STP X23, X21, [X31 + 0x58]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCE000
	015 Move X27, 0xD1F000
	016 Move W8, [X28+1421]
	017 Move X27, [X27+1048]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X24, X3
	023 Move X26, X2
	024 Move X23, X1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD1F000
	031 Move X0, [X0+1056]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1F000
	034 Move X0, [X0+1064]
	035 Call 0x1C17CF4
	036 Move X0, 0xD1F000
	037 Move X0, [X0+1072]
	038 Call 0x1C17CF4
	039 Move X0, 0xD1F000
	040 Move X0, [X0+1048]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1421], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD1F000
	054 Move X29, 0xD1F000
	055 Move X28, 0xD1F000
	056 Move W8, [X0+224]
	057 Move X27, [X27+1056]
	058 Move X29, [X29+1064]
	059 Move X28, [X28+1072]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+32], X26
	075 Move [X31+40], X24
	076 NotImplemented "Instruction STRH not yet implemented."
	077 Move [X31+56], X21
	078 Move [X31+64], X25
	079 Move [X31+72], X23
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task EventAsync(System.String bearerToken, Nakama.ApiEvent body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410CE4 STUR V0, [X31 + 0x28]
	0x03410CE8 STP X9, X19, [X31 + 0x38]
	0x03410CEC STR W10, [X31 + 0x20]
	0x03410CF0 BL 0x218DDB8
	0x03410CF4 MOV X0, X20
	0x03410CF8 MOV X1, X31
	0x03410CFC BL 0x32C47F8
	0x03410D00 LDP X20, X19, [X31 + 0xC0]
	0x03410D04 LDP X22, X21, [X31 + 0xB0]
	0x03410D08 LDP X24, X23, [X31 + 0xA0]
	0x03410D0C LDP X26, X25, [X31 + 0x90]
	0x03410D10 LDR X30, [X31 + 0x80]
	0x03410D14 ADD X31, X31, 0xD0
	0x03410D18 RET
	0x03410D1C SUB X31, X31, 0xB0
	0x03410D20 STP X30, X25, [X31 + 0x70]
	0x03410D24 STP X24, X23, [X31 + 0x80]
	0x03410D28 STP X22, X21, [X31 + 0x90]
	0x03410D2C STP X20, X19, [X31 + 0xA0]
	0x03410D30 ADRP X25, 0xFCD000
	0x03410D34 ADRP X24, 0xCE6000
	0x03410D38 LDRB W8, [X25 + 0x59E]
	0x03410D3C LDR X24, [X24 + 0x280]
	0x03410D40 MOV X20, X4
	0x03410D44 MOV X21, X3
	0x03410D48 MOV X19, X2
	0x03410D4C MOV X22, X1
	0x03410D50 MOV X23, X0
	0x03410D54 TBNZ X8, 0x0, 0x3410D78
	0x03410D58 ADRP X0, 0xD1E000
	0x03410D5C LDR X0, [X0 + 0x500]
	0x03410D60 BL 0x1C16CF4
	0x03410D64 ADRP X0, 0xCE6000
	0x03410D68 LDR X0, [X0 + 0x280]
	0x03410D6C BL 0x1C16CF4
	0x03410D70 MOVZ W8, 0x1
	0x03410D74 STRB W8, [X25 + 0x59E]
	0x03410D78 LDR X0, [X24]
	0x03410D7C MOVI V0.2D, 0x0
	0x03410D80 STP V0, V0, [X31 + 0x50]
	0x03410D84 STP V0, V0, [X31 + 0x30]
	0x03410D88 STR V0, [X31 + 0x2]
	0x03410D8C ADRP X24, 0xD1E000
	0x03410D90 LDR W8, [X0 + 0xE0]
	0x03410D94 LDR X24, [X24 + 0x500]
	0x03410D98 CBNZ W8, 0x3410DA0
	0x03410D9C BL 0x1C16DFC
	0x03410DA0 ADD X8, X31, 0x8
	0x03410DA4 MOV X0, X31
	0x03410DA8 BL 0x32C4770
	0x03410DAC LDUR V0, [X31 + 0x8]
	0x03410DB0 LDR X9, [X31 + 0x18]
	0x03410DB4 LDR X2, [X24]
	0x03410DB8 ADD X8, X31, 0x20
	0x03410DBC STP X21, X20, [X31 + 0x58]
	0x03410DC0 ORR X20, X8, 0xF
	0x03410DC4 MOVN W10, 0x0
	0x03410DC8 ADD X1, X31, 0x20
	0x03410DCC MOV X0, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCE000
	011 Move X24, 0xCE7000
	012 Move W8, [X25+1422]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1F000
	024 Move X0, [X0+1080]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1422], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1F000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1080]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task DeleteFriendsAsync(System.String bearerToken, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410DD0 STP X23, X22, [X31 + 0x48]
	0x03410DD4 STUR V0, [X31 + 0x28]
	0x03410DD8 STP X9, X19, [X31 + 0x38]
	0x03410DDC STR W10, [X31 + 0x20]
	0x03410DE0 BL 0x218DEB8
	0x03410DE4 MOV X0, X20
	0x03410DE8 MOV X1, X31
	0x03410DEC BL 0x32C47F8
	0x03410DF0 LDP X20, X19, [X31 + 0xA0]
	0x03410DF4 LDP X22, X21, [X31 + 0x90]
	0x03410DF8 LDP X24, X23, [X31 + 0x80]
	0x03410DFC LDP X30, X25, [X31 + 0x70]
	0x03410E00 ADD X31, X31, 0xB0
	0x03410E04 RET
	0x03410E08 SUB X31, X31, 0xD0
	0x03410E0C STR X30, [X31 + 0x80]
	0x03410E10 STP X26, X25, [X31 + 0x90]
	0x03410E14 STP X24, X23, [X31 + 0xA0]
	0x03410E18 STP X22, X21, [X31 + 0xB0]
	0x03410E1C STP X20, X19, [X31 + 0xC0]
	0x03410E20 ADRP X26, 0xFCD000
	0x03410E24 ADRP X25, 0xCE6000
	0x03410E28 LDRB W8, [X26 + 0x59F]
	0x03410E2C LDR X25, [X25 + 0x280]
	0x03410E30 MOV X20, X5
	0x03410E34 MOV X21, X4
	0x03410E38 MOV X22, X3
	0x03410E3C MOV X19, X2
	0x03410E40 MOV X23, X1
	0x03410E44 MOV X24, X0
	0x03410E48 TBNZ X8, 0x0, 0x3410E6C
	0x03410E4C ADRP X0, 0xD1E000
	0x03410E50 LDR X0, [X0 + 0x508]
	0x03410E54 BL 0x1C16CF4
	0x03410E58 ADRP X0, 0xCE6000
	0x03410E5C LDR X0, [X0 + 0x280]
	0x03410E60 BL 0x1C16CF4
	0x03410E64 MOVZ W8, 0x1
	0x03410E68 STRB W8, [X26 + 0x59F]
	0x03410E6C LDR X0, [X25]
	0x03410E70 MOVI V0.2D, 0x0
	0x03410E74 STR X31, [X31 + 0x70]
	0x03410E78 STP V0, V0, [X31 + 0x50]
	0x03410E7C STP V0, V0, [X31 + 0x30]
	0x03410E80 STR V0, [X31 + 0x2]
	0x03410E84 ADRP X25, 0xD1E000
	0x03410E88 LDR W8, [X0 + 0xE0]
	0x03410E8C LDR X25, [X25 + 0x508]
	0x03410E90 CBNZ W8, 0x3410E98
	0x03410E94 BL 0x1C16DFC
	0x03410E98 ADD X8, X31, 0x8
	0x03410E9C MOV X0, X31
	0x03410EA0 BL 0x32C4770
	0x03410EA4 LDUR V0, [X31 + 0x8]
	0x03410EA8 LDR X9, [X31 + 0x18]
	0x03410EAC LDR X2, [X25]
	0x03410EB0 ADD X8, X31, 0x20
	0x03410EB4 STR X20, [X31 + 0x68]
	0x03410EB8 ORR X20, X8, 0xF
	0x03410EBC MOVN W10, 0x0
	0x03410EC0 ADD X1, X31, 0x20
	0x03410EC4 MOV X0, X20
	0x03410EC8 STP X22, X24, [X31 + 0x48]
	0x03410ECC STP X23, X21, [X31 + 0x58]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCE000
	012 Move X25, 0xCE7000
	013 Move W8, [X26+1423]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1F000
	026 Move X0, [X0+1088]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE7000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1423], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1F000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1088]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiFriendList> ListFriendsAsync(System.String bearerToken, System.Nullable`1<System.Int32> limit, System.Nullable`1<System.Int32> state, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410ED0 STUR V0, [X31 + 0x28]
	0x03410ED4 STP X9, X19, [X31 + 0x38]
	0x03410ED8 STR W10, [X31 + 0x20]
	0x03410EDC BL 0x218E8B8
	0x03410EE0 MOV X0, X20
	0x03410EE4 MOV X1, X31
	0x03410EE8 BL 0x32C47F8
	0x03410EEC LDP X20, X19, [X31 + 0xC0]
	0x03410EF0 LDP X22, X21, [X31 + 0xB0]
	0x03410EF4 LDP X24, X23, [X31 + 0xA0]
	0x03410EF8 LDP X26, X25, [X31 + 0x90]
	0x03410EFC LDR X30, [X31 + 0x80]
	0x03410F00 ADD X31, X31, 0xD0
	0x03410F04 RET
	0x03410F08 SUB X31, X31, 0xD0
	0x03410F0C STP X29, X30, [X31 + 0x70]
	0x03410F10 STP X28, X27, [X31 + 0x80]
	0x03410F14 STP X26, X25, [X31 + 0x90]
	0x03410F18 STP X24, X23, [X31 + 0xA0]
	0x03410F1C STP X22, X21, [X31 + 0xB0]
	0x03410F20 STP X20, X19, [X31 + 0xC0]
	0x03410F24 ADRP X28, 0xFCD000
	0x03410F28 ADRP X27, 0xD1E000
	0x03410F2C LDRB W8, [X28 + 0x5A0]
	0x03410F30 LDR X27, [X27 + 0x510]
	0x03410F34 MOV X19, X7
	0x03410F38 MOV X20, X6
	0x03410F3C MOV X21, X5
	0x03410F40 MOV X22, X4
	0x03410F44 MOV X23, X3
	0x03410F48 MOV X24, X2
	0x03410F4C MOV X25, X1
	0x03410F50 MOV X26, X0
	0x03410F54 TBNZ X8, 0x0, 0x3410F90
	0x03410F58 ADRP X0, 0xD1E000
	0x03410F5C LDR X0, [X0 + 0x518]
	0x03410F60 BL 0x1C16CF4
	0x03410F64 ADRP X0, 0xD1E000
	0x03410F68 LDR X0, [X0 + 0x520]
	0x03410F6C BL 0x1C16CF4
	0x03410F70 ADRP X0, 0xD1E000
	0x03410F74 LDR X0, [X0 + 0x528]
	0x03410F78 BL 0x1C16CF4
	0x03410F7C ADRP X0, 0xD1E000
	0x03410F80 LDR X0, [X0 + 0x510]
	0x03410F84 BL 0x1C16CF4
	0x03410F88 MOVZ W8, 0x1
	0x03410F8C STRB W8, [X28 + 0x5A0]
	0x03410F90 LDR X0, [X27]
	0x03410F94 MOVI V0.2D, 0x0
	0x03410F98 STR X31, [X31 + 0x60]
	0x03410F9C STP V0, V0, [X31 + 0x40]
	0x03410FA0 STP V0, V0, [X31 + 0x20]
	0x03410FA4 STP V0, V0, [X31]
	0x03410FA8 ADRP X27, 0xD1E000
	0x03410FAC ADRP X29, 0xD1E000
	0x03410FB0 ADRP X28, 0xD1E000
	0x03410FB4 LDR W8, [X0 + 0xE0]
	0x03410FB8 LDR X27, [X27 + 0x518]
	0x03410FBC LDR X29, [X29 + 0x520]
	0x03410FC0 LDR X28, [X28 + 0x528]
	0x03410FC4 CBNZ W8, 0x3410FCC
	0x03410FC8 BL 0x1C16DFC
	0x03410FCC LDR X0, [X27]
	0x03410FD0 ADD X8, X31, 0x0
	0x03410FD4 ORR X27, X8, 0xF
	0x03410FD8 MOV X8, X27
	0x03410FDC BL 0x263221C
	0x03410FE0 LDR X2, [X29]
	0x03410FE4 MOVN W8, 0x0
	0x03410FE8 ADD X1, X31, 0x0
	0x03410FEC MOV X0, X27
	0x03410FF0 STP X26, X25, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xFCE000
	014 Move X26, 0xD1F000
	015 Move W8, [X27+1424]
	016 Move X26, [X26+1096]
	017 Move X19, X6
	018 Move X20, X5
	019 Move X21, X4
	020 Move X22, X3
	021 Move X24, X2
	022 Move X23, X1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xD1F000
	029 Move X0, [X0+1104]
	030 Call 0x1C17CF4
	031 Move X0, 0xD1F000
	032 Move X0, [X0+1112]
	033 Call 0x1C17CF4
	034 Move X0, 0xD1F000
	035 Move X0, [X0+1120]
	036 Call 0x1C17CF4
	037 Move X0, 0xD1F000
	038 Move X0, [X0+1096]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1424], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X26, 0xD1F000
	051 Move X28, 0xD1F000
	052 Move X27, 0xD1F000
	053 Move W8, [X0+224]
	054 Move X26, [X26+1104]
	055 Move X28, [X28+1112]
	056 Move X27, [X27+1120]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X26]
	061 Add X8, X31, 0
	062 Or X26, X8, 15
	063 Move X8, X26
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X28]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X26
	071 Move [X31+32], X24
	072 Move [X31+40], X22
	073 Move [X31+48], X21
	074 Move [X31+56], X25
	075 Move [X31+64], X23
	076 Move [X31+72], X20
	077 Move [X31+80], X19
	078 Move [X31], W8
	079 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	080 Move X1, [X27]
	081 Move X0, X26
	082 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	083 Move X20, [X31+176]
	084 Move X19, [X31+184]
	085 Move X22, [X31+160]
	086 Move X21, [X31+168]
	087 Move X24, [X31+144]
	088 Move X23, [X31+152]
	089 Move X26, [X31+128]
	090 Move X25, [X31+136]
	091 Move X28, [X31+112]
	092 Move X27, [X31+120]
	093 Move X30, [X31+96]
	094 Add X31, X31, 192
	095 Return X0

Method: System.Threading.Tasks.Task AddFriendsAsync(System.String bearerToken, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03410FF4 STP X24, X23, [X31 + 0x20]
	0x03410FF8 STP X22, X21, [X31 + 0x30]
	0x03410FFC STP X20, X19, [X31 + 0x50]
	0x03411000 STR W8, [X31]
	0x03411004 BL 0x1FC9414
	0x03411008 LDR X1, [X28]
	0x0341100C MOV X0, X27
	0x03411010 BL 0x2632230
	0x03411014 LDP X20, X19, [X31 + 0xC0]
	0x03411018 LDP X22, X21, [X31 + 0xB0]
	0x0341101C LDP X24, X23, [X31 + 0xA0]
	0x03411020 LDP X26, X25, [X31 + 0x90]
	0x03411024 LDP X28, X27, [X31 + 0x80]
	0x03411028 LDP X29, X30, [X31 + 0x70]
	0x0341102C ADD X31, X31, 0xD0
	0x03411030 RET
	0x03411034 SUB X31, X31, 0xA0
	0x03411038 STR X30, [X31 + 0x50]
	0x0341103C STP X26, X25, [X31 + 0x60]
	0x03411040 STP X24, X23, [X31 + 0x70]
	0x03411044 STP X22, X21, [X31 + 0x80]
	0x03411048 STP X20, X19, [X31 + 0x90]
	0x0341104C ADRP X25, 0xFCC000
	0x03411050 ADRP X24, 0xD1D000
	0x03411054 LDRB W8, [X25 + 0x5A1]
	0x03411058 LDR X24, [X24 + 0x530]
	0x0341105C MOV X19, X4
	0x03411060 MOV X20, X3
	0x03411064 MOV X21, X2
	0x03411068 MOV X22, X1
	0x0341106C MOV X23, X0
	0x03411070 TBNZ X8, 0x0, 0x34110AC
	0x03411074 ADRP X0, 0xD1D000
	0x03411078 LDR X0, [X0 + 0x538]
	0x0341107C BL 0x1C16CF4
	0x03411080 ADRP X0, 0xD1D000
	0x03411084 LDR X0, [X0 + 0x540]
	0x03411088 BL 0x1C16CF4
	0x0341108C ADRP X0, 0xD1D000
	0x03411090 LDR X0, [X0 + 0x548]
	0x03411094 BL 0x1C16CF4
	0x03411098 ADRP X0, 0xD1D000
	0x0341109C LDR X0, [X0 + 0x530]
	0x034110A0 BL 0x1C16CF4
	0x034110A4 MOVZ W8, 0x1
	0x034110A8 STRB W8, [X25 + 0x5A1]
	0x034110AC LDR X0, [X24]
	0x034110B0 MOVI V0.2D, 0x0
	0x034110B4 STP V0, V0, [X31 + 0x30]
	0x034110B8 STP V0, V0, [X31 + 0x10]
	0x034110BC STR V0, [X31]
	0x034110C0 ADRP X24, 0xD1D000
	0x034110C4 ADRP X26, 0xD1D000
	0x034110C8 ADRP X25, 0xD1D000
	0x034110CC LDR W8, [X0 + 0xE0]
	0x034110D0 LDR X24, [X24 + 0x538]
	0x034110D4 LDR X26, [X26 + 0x540]
	0x034110D8 LDR X25, [X25 + 0x548]
	0x034110DC CBNZ W8, 0x34110E4
	0x034110E0 BL 0x1C16DFC
	0x034110E4 LDR X0, [X24]
	0x034110E8 ADD X8, X31, 0x0
	0x034110EC ORR X24, X8, 0xF
	0x034110F0 MOV X8, X24

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1425]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1128]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1425], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1128]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task BlockFriendsAsync(System.String bearerToken, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034110F4 BL 0x263221C
	0x034110F8 LDR X2, [X26]
	0x034110FC MOVN W8, 0x0
	0x03411100 ADD X1, X31, 0x0
	0x03411104 MOV X0, X24
	0x03411108 STP X21, X23, [X31 + 0x20]
	0x0341110C STP X22, X20, [X31 + 0x30]
	0x03411110 STR X19, [X31 + 0x40]
	0x03411114 STR W8, [X31]
	0x03411118 BL 0x1FCA514
	0x0341111C LDR X1, [X25]
	0x03411120 MOV X0, X24
	0x03411124 BL 0x2632230
	0x03411128 LDP X20, X19, [X31 + 0x90]
	0x0341112C LDP X22, X21, [X31 + 0x80]
	0x03411130 LDP X24, X23, [X31 + 0x70]
	0x03411134 LDP X26, X25, [X31 + 0x60]
	0x03411138 LDR X30, [X31 + 0x50]
	0x0341113C ADD X31, X31, 0xA0
	0x03411140 RET
	0x03411144 SUB X31, X31, 0xA0
	0x03411148 STR X30, [X31 + 0x50]
	0x0341114C STP X26, X25, [X31 + 0x60]
	0x03411150 STP X24, X23, [X31 + 0x70]
	0x03411154 STP X22, X21, [X31 + 0x80]
	0x03411158 STP X20, X19, [X31 + 0x90]
	0x0341115C ADRP X25, 0xFCC000
	0x03411160 ADRP X24, 0xD1D000
	0x03411164 LDRB W8, [X25 + 0x5A2]
	0x03411168 LDR X24, [X24 + 0x530]
	0x0341116C MOV X19, X4
	0x03411170 MOV X20, X3
	0x03411174 MOV X21, X2
	0x03411178 MOV X22, X1
	0x0341117C MOV X23, X0
	0x03411180 TBNZ X8, 0x0, 0x34111BC
	0x03411184 ADRP X0, 0xD1D000
	0x03411188 LDR X0, [X0 + 0x538]
	0x0341118C BL 0x1C16CF4
	0x03411190 ADRP X0, 0xD1D000
	0x03411194 LDR X0, [X0 + 0x550]
	0x03411198 BL 0x1C16CF4
	0x0341119C ADRP X0, 0xD1D000
	0x034111A0 LDR X0, [X0 + 0x548]
	0x034111A4 BL 0x1C16CF4
	0x034111A8 ADRP X0, 0xD1D000
	0x034111AC LDR X0, [X0 + 0x530]
	0x034111B0 BL 0x1C16CF4
	0x034111B4 MOVZ W8, 0x1
	0x034111B8 STRB W8, [X25 + 0x5A2]
	0x034111BC LDR X0, [X24]
	0x034111C0 MOVI V0.2D, 0x0
	0x034111C4 STP V0, V0, [X31 + 0x30]
	0x034111C8 STP V0, V0, [X31 + 0x10]
	0x034111CC STR V0, [X31]
	0x034111D0 ADRP X24, 0xD1D000
	0x034111D4 ADRP X26, 0xD1D000
	0x034111D8 ADRP X25, 0xD1D000
	0x034111DC LDR W8, [X0 + 0xE0]
	0x034111E0 LDR X24, [X24 + 0x538]
	0x034111E4 LDR X26, [X26 + 0x550]
	0x034111E8 LDR X25, [X25 + 0x548]
	0x034111EC CBNZ W8, 0x34111F4
	0x034111F0 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1426]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1136]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1426], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1136]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task ImportFacebookFriendsAsync(System.String bearerToken, Nakama.ApiAccountFacebook account, System.Nullable`1<System.Boolean> reset, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034111F4 LDR X0, [X24]
	0x034111F8 ADD X8, X31, 0x0
	0x034111FC ORR X24, X8, 0xF
	0x03411200 MOV X8, X24
	0x03411204 BL 0x263221C
	0x03411208 LDR X2, [X26]
	0x0341120C MOVN W8, 0x0
	0x03411210 ADD X1, X31, 0x0
	0x03411214 MOV X0, X24
	0x03411218 STP X21, X23, [X31 + 0x20]
	0x0341121C STP X22, X20, [X31 + 0x30]
	0x03411220 STR X19, [X31 + 0x40]
	0x03411224 STR W8, [X31]
	0x03411228 BL 0x1FCA614
	0x0341122C LDR X1, [X25]
	0x03411230 MOV X0, X24
	0x03411234 BL 0x2632230
	0x03411238 LDP X20, X19, [X31 + 0x90]
	0x0341123C LDP X22, X21, [X31 + 0x80]
	0x03411240 LDP X24, X23, [X31 + 0x70]
	0x03411244 LDP X26, X25, [X31 + 0x60]
	0x03411248 LDR X30, [X31 + 0x50]
	0x0341124C ADD X31, X31, 0xA0
	0x03411250 RET
	0x03411254 SUB X31, X31, 0xA0
	0x03411258 STR X30, [X31 + 0x50]
	0x0341125C STP X26, X25, [X31 + 0x60]
	0x03411260 STP X24, X23, [X31 + 0x70]
	0x03411264 STP X22, X21, [X31 + 0x80]
	0x03411268 STP X20, X19, [X31 + 0x90]
	0x0341126C ADRP X25, 0xFCC000
	0x03411270 ADRP X24, 0xD1D000
	0x03411274 LDRB W8, [X25 + 0x5A3]
	0x03411278 LDR X24, [X24 + 0x530]
	0x0341127C MOV X19, X4
	0x03411280 MOV X20, X3
	0x03411284 MOV X21, X2
	0x03411288 MOV X22, X1
	0x0341128C MOV X23, X0
	0x03411290 TBNZ X8, 0x0, 0x34112CC
	0x03411294 ADRP X0, 0xD1D000
	0x03411298 LDR X0, [X0 + 0x538]
	0x0341129C BL 0x1C16CF4
	0x034112A0 ADRP X0, 0xD1D000
	0x034112A4 LDR X0, [X0 + 0x558]
	0x034112A8 BL 0x1C16CF4
	0x034112AC ADRP X0, 0xD1D000
	0x034112B0 LDR X0, [X0 + 0x548]
	0x034112B4 BL 0x1C16CF4
	0x034112B8 ADRP X0, 0xD1D000
	0x034112BC LDR X0, [X0 + 0x530]
	0x034112C0 BL 0x1C16CF4
	0x034112C4 MOVZ W8, 0x1
	0x034112C8 STRB W8, [X25 + 0x5A3]
	0x034112CC LDR X0, [X24]
	0x034112D0 MOVI V0.2D, 0x0
	0x034112D4 STP V0, V0, [X31 + 0x30]
	0x034112D8 STP V0, V0, [X31 + 0x10]
	0x034112DC STR V0, [X31]
	0x034112E0 ADRP X24, 0xD1D000
	0x034112E4 ADRP X26, 0xD1D000
	0x034112E8 ADRP X25, 0xD1D000
	0x034112EC LDR W8, [X0 + 0xE0]
	0x034112F0 LDR X24, [X24 + 0x538]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1427]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1144]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1427], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1144]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+96], X21
	055 Move [X31+104], X20
	056 Or X20, X8, 15
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W10, TEMP
	060 Add X1, X31, 32
	061 Move X0, X20
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 NotImplemented "Instruction STRH not yet implemented."
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task ImportSteamFriendsAsync(System.String bearerToken, Nakama.ApiAccountSteam account, System.Nullable`1<System.Boolean> reset, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034112F4 LDR X26, [X26 + 0x558]
	0x034112F8 LDR X25, [X25 + 0x548]
	0x034112FC CBNZ W8, 0x3411304
	0x03411300 BL 0x1C16DFC
	0x03411304 LDR X0, [X24]
	0x03411308 ADD X8, X31, 0x0
	0x0341130C ORR X24, X8, 0xF
	0x03411310 MOV X8, X24
	0x03411314 BL 0x263221C
	0x03411318 LDR X2, [X26]
	0x0341131C MOVN W8, 0x0
	0x03411320 ADD X1, X31, 0x0
	0x03411324 MOV X0, X24
	0x03411328 STP X21, X23, [X31 + 0x20]
	0x0341132C STP X22, X20, [X31 + 0x30]
	0x03411330 STR X19, [X31 + 0x40]
	0x03411334 STR W8, [X31]
	0x03411338 BL 0x1FCA714
	0x0341133C LDR X1, [X25]
	0x03411340 MOV X0, X24
	0x03411344 BL 0x2632230
	0x03411348 LDP X20, X19, [X31 + 0x90]
	0x0341134C LDP X22, X21, [X31 + 0x80]
	0x03411350 LDP X24, X23, [X31 + 0x70]
	0x03411354 LDP X26, X25, [X31 + 0x60]
	0x03411358 LDR X30, [X31 + 0x50]
	0x0341135C ADD X31, X31, 0xA0
	0x03411360 RET
	0x03411364 SUB X31, X31, 0xA0
	0x03411368 STR X30, [X31 + 0x50]
	0x0341136C STP X26, X25, [X31 + 0x60]
	0x03411370 STP X24, X23, [X31 + 0x70]
	0x03411374 STP X22, X21, [X31 + 0x80]
	0x03411378 STP X20, X19, [X31 + 0x90]
	0x0341137C ADRP X25, 0xFCC000
	0x03411380 ADRP X24, 0xD1D000
	0x03411384 LDRB W8, [X25 + 0x5A4]
	0x03411388 LDR X24, [X24 + 0x530]
	0x0341138C MOV X19, X4
	0x03411390 MOV X20, X3
	0x03411394 MOV X21, X2
	0x03411398 MOV X22, X1
	0x0341139C MOV X23, X0
	0x034113A0 TBNZ X8, 0x0, 0x34113DC
	0x034113A4 ADRP X0, 0xD1D000
	0x034113A8 LDR X0, [X0 + 0x538]
	0x034113AC BL 0x1C16CF4
	0x034113B0 ADRP X0, 0xD1D000
	0x034113B4 LDR X0, [X0 + 0x560]
	0x034113B8 BL 0x1C16CF4
	0x034113BC ADRP X0, 0xD1D000
	0x034113C0 LDR X0, [X0 + 0x548]
	0x034113C4 BL 0x1C16CF4
	0x034113C8 ADRP X0, 0xD1D000
	0x034113CC LDR X0, [X0 + 0x530]
	0x034113D0 BL 0x1C16CF4
	0x034113D4 MOVZ W8, 0x1
	0x034113D8 STRB W8, [X25 + 0x5A4]
	0x034113DC LDR X0, [X24]
	0x034113E0 MOVI V0.2D, 0x0
	0x034113E4 STP V0, V0, [X31 + 0x30]
	0x034113E8 STP V0, V0, [X31 + 0x10]
	0x034113EC STR V0, [X31]
	0x034113F0 ADRP X24, 0xD1D000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1428]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1152]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1428], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1152]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+96], X21
	055 Move [X31+104], X20
	056 Or X20, X8, 15
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W10, TEMP
	060 Add X1, X31, 32
	061 Move X0, X20
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 NotImplemented "Instruction STRH not yet implemented."
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroupList> ListGroupsAsync(System.String bearerToken, System.String name, System.String cursor, System.Nullable`1<System.Int32> limit, System.String langTag, System.Nullable`1<System.Int32> members, System.Nullable`1<System.Boolean> open, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034113F4 ADRP X26, 0xD1D000
	0x034113F8 ADRP X25, 0xD1D000
	0x034113FC LDR W8, [X0 + 0xE0]
	0x03411400 LDR X24, [X24 + 0x538]
	0x03411404 LDR X26, [X26 + 0x560]
	0x03411408 LDR X25, [X25 + 0x548]
	0x0341140C CBNZ W8, 0x3411414
	0x03411410 BL 0x1C16DFC
	0x03411414 LDR X0, [X24]
	0x03411418 ADD X8, X31, 0x0
	0x0341141C ORR X24, X8, 0xF
	0x03411420 MOV X8, X24
	0x03411424 BL 0x263221C
	0x03411428 LDR X2, [X26]
	0x0341142C MOVN W8, 0x0
	0x03411430 ADD X1, X31, 0x0
	0x03411434 MOV X0, X24
	0x03411438 STP X21, X23, [X31 + 0x20]
	0x0341143C STP X22, X20, [X31 + 0x30]
	0x03411440 STR X19, [X31 + 0x40]
	0x03411444 STR W8, [X31]
	0x03411448 BL 0x1FCA814
	0x0341144C LDR X1, [X25]
	0x03411450 MOV X0, X24
	0x03411454 BL 0x2632230
	0x03411458 LDP X20, X19, [X31 + 0x90]
	0x0341145C LDP X22, X21, [X31 + 0x80]
	0x03411460 LDP X24, X23, [X31 + 0x70]
	0x03411464 LDP X26, X25, [X31 + 0x60]
	0x03411468 LDR X30, [X31 + 0x50]
	0x0341146C ADD X31, X31, 0xA0
	0x03411470 RET
	0x03411474 SUB X31, X31, 0xA0
	0x03411478 STR X30, [X31 + 0x50]
	0x0341147C STP X26, X25, [X31 + 0x60]
	0x03411480 STP X24, X23, [X31 + 0x70]
	0x03411484 STP X22, X21, [X31 + 0x80]
	0x03411488 STP X20, X19, [X31 + 0x90]
	0x0341148C ADRP X25, 0xFCC000
	0x03411490 ADRP X24, 0xD1D000
	0x03411494 LDRB W8, [X25 + 0x5A5]
	0x03411498 LDR X24, [X24 + 0x568]
	0x0341149C MOV X19, X4
	0x034114A0 MOV X20, X3
	0x034114A4 MOV X21, X2
	0x034114A8 MOV X22, X1
	0x034114AC MOV X23, X0
	0x034114B0 TBNZ X8, 0x0, 0x34114EC
	0x034114B4 ADRP X0, 0xD1D000
	0x034114B8 LDR X0, [X0 + 0x570]
	0x034114BC BL 0x1C16CF4
	0x034114C0 ADRP X0, 0xD1D000
	0x034114C4 LDR X0, [X0 + 0x578]
	0x034114C8 BL 0x1C16CF4
	0x034114CC ADRP X0, 0xD1D000
	0x034114D0 LDR X0, [X0 + 0x580]
	0x034114D4 BL 0x1C16CF4
	0x034114D8 ADRP X0, 0xD1D000
	0x034114DC LDR X0, [X0 + 0x568]
	0x034114E0 BL 0x1C16CF4
	0x034114E4 MOVZ W8, 0x1
	0x034114E8 STRB W8, [X25 + 0x5A5]
	0x034114EC LDR X0, [X24]
	0x034114F0 MOVI V0.2D, 0x0
	0x034114F4 STP V0, V0, [X31 + 0x30]
	0x034114F8 STP V0, V0, [X31 + 0x10]
	0x034114FC STR V0, [X31]
	0x03411500 ADRP X24, 0xD1D000
	0x03411504 ADRP X26, 0xD1D000
	0x03411508 ADRP X25, 0xD1D000
	0x0341150C LDR W8, [X0 + 0xE0]
	0x03411510 LDR X24, [X24 + 0x570]
	0x03411514 LDR X26, [X26 + 0x578]
	0x03411518 LDR X25, [X25 + 0x580]
	0x0341151C CBNZ W8, 0x3411524
	0x03411520 BL 0x1C16DFC
	0x03411524 LDR X0, [X24]
	0x03411528 ADD X8, X31, 0x0
	0x0341152C ORR X24, X8, 0xF
	0x03411530 MOV X8, X24

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move [X31+8], X7
	015 Move X28, 0xFCD000
	016 Move X27, 0xD1E000
	017 Move W8, [X28+1429]
	018 Move X27, [X27+1160]
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD1E000
	031 Move X0, [X0+1168]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1E000
	034 Move X0, [X0+1176]
	035 Call 0x1C17CF4
	036 Move X0, 0xD1E000
	037 Move X0, [X0+1184]
	038 Call 0x1C17CF4
	039 Move X0, 0xD1E000
	040 Move X0, [X0+1160]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1429], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+128], X31
	047 Move [X31+96], V0
	048 Move [X31+104], V0
	049 Move [X31+64], V0
	050 Move [X31+72], V0
	051 Move [X31+32], V0
	052 Move [X31+40], V0
	053 Move [X31+1], V0
	054 Move X27, 0xD1E000
	055 Move X19, 0xD1E000
	056 Move W8, [X0+224]
	057 Move X28, [X31+240]
	058 Move X29, [X31+248]
	059 Move X27, [X27+1168]
	060 Move X19, [X19+1176]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X27]
	065 Add X8, X31, 16
	066 Or X27, X8, 15
	067 Move X8, X27
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X8, [X31+8]
	070 Move X2, [X19]
	071 Add X1, X31, 16
	072 Move X0, X27
	073 NotImplemented "Instruction STRH not yet implemented."
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W8, TEMP
	077 Move [X31+96], X26
	078 Move [X31+104], X25
	079 Move [X31+48], X24
	080 Move [X31+56], X23
	081 Move [X31+64], X22
	082 Move [X31+72], X21
	083 Move [X31+80], X20
	084 Move [X31+112], X28
	085 Move [X31+120], X29
	086 Move [X31+16], W8
	087 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	088 Move X8, 0xD1E000
	089 Move X8, [X8+1184]
	090 Move X0, X27
	091 Move X1, [X8]
	092 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	093 Move X20, [X31+224]
	094 Move X19, [X31+232]
	095 Move X22, [X31+208]
	096 Move X21, [X31+216]
	097 Move X24, [X31+192]
	098 Move X23, [X31+200]
	099 Move X26, [X31+176]
	100 Move X25, [X31+184]
	101 Move X28, [X31+160]
	102 Move X27, [X31+168]
	103 Move X29, [X31+144]
	104 Move X30, [X31+152]
	105 Add X31, X31, 240
	106 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroup> CreateGroupAsync(System.String bearerToken, Nakama.ApiCreateGroupRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411534 BL 0x263221C
	0x03411538 LDR X2, [X26]
	0x0341153C MOVN W8, 0x0
	0x03411540 ADD X1, X31, 0x0
	0x03411544 MOV X0, X24
	0x03411548 STP X21, X23, [X31 + 0x20]
	0x0341154C STP X22, X20, [X31 + 0x30]
	0x03411550 STR X19, [X31 + 0x40]
	0x03411554 STR W8, [X31]
	0x03411558 BL 0x1FC9C14
	0x0341155C LDR X1, [X25]
	0x03411560 MOV X0, X24
	0x03411564 BL 0x2632230
	0x03411568 LDP X20, X19, [X31 + 0x90]
	0x0341156C LDP X22, X21, [X31 + 0x80]
	0x03411570 LDP X24, X23, [X31 + 0x70]
	0x03411574 LDP X26, X25, [X31 + 0x60]
	0x03411578 LDR X30, [X31 + 0x50]
	0x0341157C ADD X31, X31, 0xA0
	0x03411580 RET
	0x03411584 SUB X31, X31, 0xA0
	0x03411588 STR X30, [X31 + 0x50]
	0x0341158C STP X26, X25, [X31 + 0x60]
	0x03411590 STP X24, X23, [X31 + 0x70]
	0x03411594 STP X22, X21, [X31 + 0x80]
	0x03411598 STP X20, X19, [X31 + 0x90]
	0x0341159C ADRP X25, 0xFCC000
	0x034115A0 ADRP X24, 0xD1D000
	0x034115A4 LDRB W8, [X25 + 0x5A6]
	0x034115A8 LDR X24, [X24 + 0x588]
	0x034115AC MOV X19, X4
	0x034115B0 MOV X20, X3
	0x034115B4 MOV X21, X2
	0x034115B8 MOV X22, X1
	0x034115BC MOV X23, X0
	0x034115C0 TBNZ X8, 0x0, 0x34115FC
	0x034115C4 ADRP X0, 0xD1D000
	0x034115C8 LDR X0, [X0 + 0x590]
	0x034115CC BL 0x1C16CF4
	0x034115D0 ADRP X0, 0xD1D000
	0x034115D4 LDR X0, [X0 + 0x598]
	0x034115D8 BL 0x1C16CF4
	0x034115DC ADRP X0, 0xD1D000
	0x034115E0 LDR X0, [X0 + 0x5A0]
	0x034115E4 BL 0x1C16CF4
	0x034115E8 ADRP X0, 0xD1D000
	0x034115EC LDR X0, [X0 + 0x588]
	0x034115F0 BL 0x1C16CF4
	0x034115F4 MOVZ W8, 0x1
	0x034115F8 STRB W8, [X25 + 0x5A6]
	0x034115FC LDR X0, [X24]
	0x03411600 MOVI V0.2D, 0x0
	0x03411604 STP V0, V0, [X31 + 0x30]
	0x03411608 STP V0, V0, [X31 + 0x10]
	0x0341160C STR V0, [X31]
	0x03411610 ADRP X24, 0xD1D000
	0x03411614 ADRP X26, 0xD1D000
	0x03411618 ADRP X25, 0xD1D000
	0x0341161C LDR W8, [X0 + 0xE0]
	0x03411620 LDR X24, [X24 + 0x590]
	0x03411624 LDR X26, [X26 + 0x598]
	0x03411628 LDR X25, [X25 + 0x5A0]
	0x0341162C CBNZ W8, 0x3411634
	0x03411630 BL 0x1C16DFC
	0x03411634 LDR X0, [X24]
	0x03411638 ADD X8, X31, 0x0
	0x0341163C ORR X24, X8, 0xF
	0x03411640 MOV X8, X24

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCD000
	012 Move X24, 0xD1E000
	013 Move W8, [X25+1430]
	014 Move X24, [X24+1192]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1E000
	025 Move X0, [X0+1200]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1E000
	028 Move X0, [X0+1208]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1E000
	031 Move X0, [X0+1216]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1E000
	034 Move X0, [X0+1192]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1430], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1E000
	046 Move X26, 0xD1E000
	047 Move X25, 0xD1E000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1200]
	050 Move X26, [X26+1208]
	051 Move X25, [X25+1216]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task DeleteGroupAsync(System.String bearerToken, System.String groupId, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411644 BL 0x263221C
	0x03411648 LDR X2, [X26]
	0x0341164C MOVN W8, 0x0
	0x03411650 ADD X1, X31, 0x0
	0x03411654 MOV X0, X24
	0x03411658 STP X21, X23, [X31 + 0x20]
	0x0341165C STP X22, X20, [X31 + 0x30]
	0x03411660 STR X19, [X31 + 0x40]
	0x03411664 STR W8, [X31]
	0x03411668 BL 0x1FCA914
	0x0341166C LDR X1, [X25]
	0x03411670 MOV X0, X24
	0x03411674 BL 0x2632230
	0x03411678 LDP X20, X19, [X31 + 0x90]
	0x0341167C LDP X22, X21, [X31 + 0x80]
	0x03411680 LDP X24, X23, [X31 + 0x70]
	0x03411684 LDP X26, X25, [X31 + 0x60]
	0x03411688 LDR X30, [X31 + 0x50]
	0x0341168C ADD X31, X31, 0xA0
	0x03411690 RET
	0x03411694 SUB X31, X31, 0xA0
	0x03411698 STR X30, [X31 + 0x50]
	0x0341169C STP X26, X25, [X31 + 0x60]
	0x034116A0 STP X24, X23, [X31 + 0x70]
	0x034116A4 STP X22, X21, [X31 + 0x80]
	0x034116A8 STP X20, X19, [X31 + 0x90]
	0x034116AC ADRP X25, 0xFCC000
	0x034116B0 ADRP X24, 0xD1D000
	0x034116B4 LDRB W8, [X25 + 0x5A7]
	0x034116B8 LDR X24, [X24 + 0x588]
	0x034116BC MOV X19, X4
	0x034116C0 MOV X20, X3
	0x034116C4 MOV X21, X2
	0x034116C8 MOV X22, X1
	0x034116CC MOV X23, X0
	0x034116D0 TBNZ X8, 0x0, 0x341170C
	0x034116D4 ADRP X0, 0xD1D000
	0x034116D8 LDR X0, [X0 + 0x590]
	0x034116DC BL 0x1C16CF4
	0x034116E0 ADRP X0, 0xD1D000
	0x034116E4 LDR X0, [X0 + 0x5A8]
	0x034116E8 BL 0x1C16CF4
	0x034116EC ADRP X0, 0xD1D000
	0x034116F0 LDR X0, [X0 + 0x5A0]
	0x034116F4 BL 0x1C16CF4
	0x034116F8 ADRP X0, 0xD1D000
	0x034116FC LDR X0, [X0 + 0x588]
	0x03411700 BL 0x1C16CF4
	0x03411704 MOVZ W8, 0x1
	0x03411708 STRB W8, [X25 + 0x5A7]
	0x0341170C LDR X0, [X24]
	0x03411710 MOVI V0.2D, 0x0
	0x03411714 STP V0, V0, [X31 + 0x30]
	0x03411718 STP V0, V0, [X31 + 0x10]
	0x0341171C STR V0, [X31]
	0x03411720 ADRP X24, 0xD1D000
	0x03411724 ADRP X26, 0xD1D000
	0x03411728 ADRP X25, 0xD1D000
	0x0341172C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCD000
	011 Move X24, 0xCE6000
	012 Move W8, [X25+1431]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1E000
	024 Move X0, [X0+1224]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE6000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1431], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1E000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task UpdateGroupAsync(System.String bearerToken, System.String groupId, Nakama.ApiUpdateGroupRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411730 LDR X24, [X24 + 0x590]
	0x03411734 LDR X26, [X26 + 0x5A8]
	0x03411738 LDR X25, [X25 + 0x5A0]
	0x0341173C CBNZ W8, 0x3411744
	0x03411740 BL 0x1C16DFC
	0x03411744 LDR X0, [X24]
	0x03411748 ADD X8, X31, 0x0
	0x0341174C ORR X24, X8, 0xF
	0x03411750 MOV X8, X24
	0x03411754 BL 0x263221C
	0x03411758 LDR X2, [X26]
	0x0341175C MOVN W8, 0x0
	0x03411760 ADD X1, X31, 0x0
	0x03411764 MOV X0, X24
	0x03411768 STP X21, X23, [X31 + 0x20]
	0x0341176C STP X22, X20, [X31 + 0x30]
	0x03411770 STR X19, [X31 + 0x40]
	0x03411774 STR W8, [X31]
	0x03411778 BL 0x1FCAA14
	0x0341177C LDR X1, [X25]
	0x03411780 MOV X0, X24
	0x03411784 BL 0x2632230
	0x03411788 LDP X20, X19, [X31 + 0x90]
	0x0341178C LDP X22, X21, [X31 + 0x80]
	0x03411790 LDP X24, X23, [X31 + 0x70]
	0x03411794 LDP X26, X25, [X31 + 0x60]
	0x03411798 LDR X30, [X31 + 0x50]
	0x0341179C ADD X31, X31, 0xA0
	0x034117A0 RET
	0x034117A4 SUB X31, X31, 0xA0
	0x034117A8 STR X30, [X31 + 0x50]
	0x034117AC STP X26, X25, [X31 + 0x60]
	0x034117B0 STP X24, X23, [X31 + 0x70]
	0x034117B4 STP X22, X21, [X31 + 0x80]
	0x034117B8 STP X20, X19, [X31 + 0x90]
	0x034117BC ADRP X25, 0xFCC000
	0x034117C0 ADRP X24, 0xD1D000
	0x034117C4 LDRB W8, [X25 + 0x5A8]
	0x034117C8 LDR X24, [X24 + 0x5B0]
	0x034117CC MOV X19, X4
	0x034117D0 MOV X20, X3
	0x034117D4 MOV X21, X2
	0x034117D8 MOV X22, X1
	0x034117DC MOV X23, X0
	0x034117E0 TBNZ X8, 0x0, 0x341181C
	0x034117E4 ADRP X0, 0xD1D000
	0x034117E8 LDR X0, [X0 + 0x5B8]
	0x034117EC BL 0x1C16CF4
	0x034117F0 ADRP X0, 0xD1D000
	0x034117F4 LDR X0, [X0 + 0x5C0]
	0x034117F8 BL 0x1C16CF4
	0x034117FC ADRP X0, 0xD1D000
	0x03411800 LDR X0, [X0 + 0x5C8]
	0x03411804 BL 0x1C16CF4
	0x03411808 ADRP X0, 0xD1D000
	0x0341180C LDR X0, [X0 + 0x5B0]
	0x03411810 BL 0x1C16CF4
	0x03411814 MOVZ W8, 0x1
	0x03411818 STRB W8, [X25 + 0x5A8]
	0x0341181C LDR X0, [X24]
	0x03411820 MOVI V0.2D, 0x0
	0x03411824 STP V0, V0, [X31 + 0x30]
	0x03411828 STP V0, V0, [X31 + 0x10]
	0x0341182C STR V0, [X31]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1432]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1232]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1432], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1232]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task AddGroupUsersAsync(System.String bearerToken, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> userIds, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411830 ADRP X24, 0xD1D000
	0x03411834 ADRP X26, 0xD1D000
	0x03411838 ADRP X25, 0xD1D000
	0x0341183C LDR W8, [X0 + 0xE0]
	0x03411840 LDR X24, [X24 + 0x5B8]
	0x03411844 LDR X26, [X26 + 0x5C0]
	0x03411848 LDR X25, [X25 + 0x5C8]
	0x0341184C CBNZ W8, 0x3411854
	0x03411850 BL 0x1C16DFC
	0x03411854 LDR X0, [X24]
	0x03411858 ADD X8, X31, 0x0
	0x0341185C ORR X24, X8, 0xF
	0x03411860 MOV X8, X24
	0x03411864 BL 0x263221C
	0x03411868 LDR X2, [X26]
	0x0341186C MOVN W8, 0x0
	0x03411870 ADD X1, X31, 0x0
	0x03411874 MOV X0, X24
	0x03411878 STP X21, X23, [X31 + 0x20]
	0x0341187C STP X22, X20, [X31 + 0x30]
	0x03411880 STR X19, [X31 + 0x40]
	0x03411884 STR W8, [X31]
	0x03411888 BL 0x1FC9014
	0x0341188C LDR X1, [X25]
	0x03411890 MOV X0, X24
	0x03411894 BL 0x2632230
	0x03411898 LDP X20, X19, [X31 + 0x90]
	0x0341189C LDP X22, X21, [X31 + 0x80]
	0x034118A0 LDP X24, X23, [X31 + 0x70]
	0x034118A4 LDP X26, X25, [X31 + 0x60]
	0x034118A8 LDR X30, [X31 + 0x50]
	0x034118AC ADD X31, X31, 0xA0
	0x034118B0 RET
	0x034118B4 SUB X31, X31, 0xB0
	0x034118B8 STP X30, X25, [X31 + 0x70]
	0x034118BC STP X24, X23, [X31 + 0x80]
	0x034118C0 STP X22, X21, [X31 + 0x90]
	0x034118C4 STP X20, X19, [X31 + 0xA0]
	0x034118C8 ADRP X25, 0xFCC000
	0x034118CC ADRP X24, 0xCE5000
	0x034118D0 LDRB W8, [X25 + 0x5A9]
	0x034118D4 LDR X24, [X24 + 0x280]
	0x034118D8 MOV X20, X4
	0x034118DC MOV X21, X3
	0x034118E0 MOV X19, X2
	0x034118E4 MOV X22, X1
	0x034118E8 MOV X23, X0
	0x034118EC TBNZ X8, 0x0, 0x3411910
	0x034118F0 ADRP X0, 0xD1D000
	0x034118F4 LDR X0, [X0 + 0x5D0]
	0x034118F8 BL 0x1C16CF4
	0x034118FC ADRP X0, 0xCE5000
	0x03411900 LDR X0, [X0 + 0x280]
	0x03411904 BL 0x1C16CF4
	0x03411908 MOVZ W8, 0x1
	0x0341190C STRB W8, [X25 + 0x5A9]
	0x03411910 LDR X0, [X24]
	0x03411914 MOVI V0.2D, 0x0
	0x03411918 STP V0, V0, [X31 + 0x50]
	0x0341191C STP V0, V0, [X31 + 0x30]
	0x03411920 STR V0, [X31 + 0x2]
	0x03411924 ADRP X24, 0xD1D000
	0x03411928 LDR W8, [X0 + 0xE0]
	0x0341192C LDR X24, [X24 + 0x5D0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1433]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1240]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1433], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1240]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task BanGroupUsersAsync(System.String bearerToken, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> userIds, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411930 CBNZ W8, 0x3411938
	0x03411934 BL 0x1C16DFC
	0x03411938 ADD X8, X31, 0x8
	0x0341193C MOV X0, X31
	0x03411940 BL 0x32C4770
	0x03411944 LDUR V0, [X31 + 0x8]
	0x03411948 LDR X9, [X31 + 0x18]
	0x0341194C LDR X2, [X24]
	0x03411950 ADD X8, X31, 0x20
	0x03411954 STP X21, X20, [X31 + 0x58]
	0x03411958 ORR X20, X8, 0xF
	0x0341195C MOVN W10, 0x0
	0x03411960 ADD X1, X31, 0x20
	0x03411964 MOV X0, X20
	0x03411968 STP X23, X22, [X31 + 0x48]
	0x0341196C STUR V0, [X31 + 0x28]
	0x03411970 STP X9, X19, [X31 + 0x38]
	0x03411974 STR W10, [X31 + 0x20]
	0x03411978 BL 0x218D2B8
	0x0341197C MOV X0, X20
	0x03411980 MOV X1, X31
	0x03411984 BL 0x32C47F8
	0x03411988 LDP X20, X19, [X31 + 0xA0]
	0x0341198C LDP X22, X21, [X31 + 0x90]
	0x03411990 LDP X24, X23, [X31 + 0x80]
	0x03411994 LDP X30, X25, [X31 + 0x70]
	0x03411998 ADD X31, X31, 0xB0
	0x0341199C RET
	0x034119A0 SUB X31, X31, 0xD0
	0x034119A4 STP X29, X30, [X31 + 0x70]
	0x034119A8 STP X28, X27, [X31 + 0x80]
	0x034119AC STP X26, X25, [X31 + 0x90]
	0x034119B0 STP X24, X23, [X31 + 0xA0]
	0x034119B4 STP X22, X21, [X31 + 0xB0]
	0x034119B8 STP X20, X19, [X31 + 0xC0]
	0x034119BC ADRP X27, 0xFCC000
	0x034119C0 ADRP X26, 0xD1D000
	0x034119C4 LDRB W8, [X27 + 0x5AA]
	0x034119C8 LDR X26, [X26 + 0x5D8]
	0x034119CC MOV X19, X6
	0x034119D0 MOV X20, X5
	0x034119D4 MOV X21, X4
	0x034119D8 MOV X23, X3
	0x034119DC MOV X25, X2
	0x034119E0 MOV X22, X1
	0x034119E4 MOV X24, X0
	0x034119E8 TBNZ X8, 0x0, 0x3411A24
	0x034119EC ADRP X0, 0xD1D000
	0x034119F0 LDR X0, [X0 + 0x5E0]
	0x034119F4 BL 0x1C16CF4
	0x034119F8 ADRP X0, 0xD1D000
	0x034119FC LDR X0, [X0 + 0x5E8]
	0x03411A00 BL 0x1C16CF4
	0x03411A04 ADRP X0, 0xD1D000
	0x03411A08 LDR X0, [X0 + 0x5F0]
	0x03411A0C BL 0x1C16CF4
	0x03411A10 ADRP X0, 0xD1D000
	0x03411A14 LDR X0, [X0 + 0x5D8]
	0x03411A18 BL 0x1C16CF4
	0x03411A1C MOVZ W8, 0x1
	0x03411A20 STRB W8, [X27 + 0x5AA]
	0x03411A24 LDR X0, [X26]
	0x03411A28 MOVI V0.2D, 0x0
	0x03411A2C STP V0, V0, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1434]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1248]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1434], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1248]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task DemoteGroupUsersAsync(System.String bearerToken, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> userIds, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411A30 STP V0, V0, [X31 + 0x30]
	0x03411A34 STP V0, V0, [X31 + 0x10]
	0x03411A38 STR V0, [X31]
	0x03411A3C ADRP X26, 0xD1D000
	0x03411A40 ADRP X29, 0xD1D000
	0x03411A44 LDR W8, [X0 + 0xE0]
	0x03411A48 LDP X27, X28, [X31 + 0xD0]
	0x03411A4C LDR X26, [X26 + 0x5E0]
	0x03411A50 LDR X29, [X29 + 0x5E8]
	0x03411A54 CBNZ W8, 0x3411A5C
	0x03411A58 BL 0x1C16DFC
	0x03411A5C LDR X0, [X26]
	0x03411A60 ADD X8, X31, 0x0
	0x03411A64 ORR X26, X8, 0xF
	0x03411A68 MOV X8, X26
	0x03411A6C BL 0x263221C
	0x03411A70 LDR X2, [X29]
	0x03411A74 MOVN W8, 0x0
	0x03411A78 ADD X1, X31, 0x0
	0x03411A7C MOV X0, X26
	0x03411A80 STP X25, X23, [X31 + 0x20]
	0x03411A84 STP X21, X20, [X31 + 0x30]
	0x03411A88 STP X19, X24, [X31 + 0x40]
	0x03411A8C STP X22, X27, [X31 + 0x50]
	0x03411A90 STR X28, [X31 + 0x60]
	0x03411A94 STR W8, [X31]
	0x03411A98 BL 0x1FC9714
	0x03411A9C ADRP X8, 0xD1D000
	0x03411AA0 LDR X8, [X8 + 0x5F0]
	0x03411AA4 MOV X0, X26
	0x03411AA8 LDR X1, [X8]
	0x03411AAC BL 0x2632230
	0x03411AB0 LDP X20, X19, [X31 + 0xC0]
	0x03411AB4 LDP X22, X21, [X31 + 0xB0]
	0x03411AB8 LDP X24, X23, [X31 + 0xA0]
	0x03411ABC LDP X26, X25, [X31 + 0x90]
	0x03411AC0 LDP X28, X27, [X31 + 0x80]
	0x03411AC4 LDP X29, X30, [X31 + 0x70]
	0x03411AC8 ADD X31, X31, 0xD0
	0x03411ACC RET
	0x03411AD0 SUB X31, X31, 0xB0
	0x03411AD4 STP X30, X27, [X31 + 0x60]
	0x03411AD8 STP X26, X25, [X31 + 0x70]
	0x03411ADC STP X24, X23, [X31 + 0x80]
	0x03411AE0 STP X22, X21, [X31 + 0x90]
	0x03411AE4 STP X20, X19, [X31 + 0xA0]
	0x03411AE8 ADRP X26, 0xFCC000
	0x03411AEC ADRP X25, 0xD1D000
	0x03411AF0 LDRB W8, [X26 + 0x5AB]
	0x03411AF4 LDR X25, [X25 + 0x5F8]
	0x03411AF8 MOV X19, X5
	0x03411AFC MOV X20, X4
	0x03411B00 MOV X21, X3
	0x03411B04 MOV X22, X2
	0x03411B08 MOV X23, X1
	0x03411B0C MOV X24, X0
	0x03411B10 TBNZ X8, 0x0, 0x3411B4C
	0x03411B14 ADRP X0, 0xD1D000
	0x03411B18 LDR X0, [X0 + 0x600]
	0x03411B1C BL 0x1C16CF4
	0x03411B20 ADRP X0, 0xD1D000
	0x03411B24 LDR X0, [X0 + 0x608]
	0x03411B28 BL 0x1C16CF4
	0x03411B2C ADRP X0, 0xD1D000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1435]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1256]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1435], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1256]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task JoinGroupAsync(System.String bearerToken, System.String groupId, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411B30 LDR X0, [X0 + 0x610]
	0x03411B34 BL 0x1C16CF4
	0x03411B38 ADRP X0, 0xD1D000
	0x03411B3C LDR X0, [X0 + 0x5F8]
	0x03411B40 BL 0x1C16CF4
	0x03411B44 MOVZ W8, 0x1
	0x03411B48 STRB W8, [X26 + 0x5AB]
	0x03411B4C LDR X0, [X25]
	0x03411B50 MOVI V0.2D, 0x0
	0x03411B54 STR X31, [X31 + 0x50]
	0x03411B58 STP V0, V0, [X31 + 0x30]
	0x03411B5C STP V0, V0, [X31 + 0x10]
	0x03411B60 STR V0, [X31]
	0x03411B64 ADRP X25, 0xD1D000
	0x03411B68 ADRP X27, 0xD1D000
	0x03411B6C ADRP X26, 0xD1D000
	0x03411B70 LDR W8, [X0 + 0xE0]
	0x03411B74 LDR X25, [X25 + 0x600]
	0x03411B78 LDR X27, [X27 + 0x608]
	0x03411B7C LDR X26, [X26 + 0x610]
	0x03411B80 CBNZ W8, 0x3411B88
	0x03411B84 BL 0x1C16DFC
	0x03411B88 LDR X0, [X25]
	0x03411B8C ADD X8, X31, 0x0
	0x03411B90 ORR X25, X8, 0xF
	0x03411B94 MOV X8, X25
	0x03411B98 BL 0x263221C
	0x03411B9C LDR X2, [X27]
	0x03411BA0 MOVN W8, 0x0
	0x03411BA4 ADD X1, X31, 0x0
	0x03411BA8 MOV X0, X25
	0x03411BAC STP X24, X23, [X31 + 0x30]
	0x03411BB0 STP X22, X21, [X31 + 0x20]
	0x03411BB4 STP X20, X19, [X31 + 0x40]
	0x03411BB8 STR W8, [X31]
	0x03411BBC BL 0x1FCAB14
	0x03411BC0 LDR X1, [X26]
	0x03411BC4 MOV X0, X25
	0x03411BC8 BL 0x2632230
	0x03411BCC LDP X20, X19, [X31 + 0xA0]
	0x03411BD0 LDP X22, X21, [X31 + 0x90]
	0x03411BD4 LDP X24, X23, [X31 + 0x80]
	0x03411BD8 LDP X26, X25, [X31 + 0x70]
	0x03411BDC LDP X30, X27, [X31 + 0x60]
	0x03411BE0 ADD X31, X31, 0xB0
	0x03411BE4 RET
	0x03411BE8 SUB X31, X31, 0xD0
	0x03411BEC STP X29, X30, [X31 + 0x70]
	0x03411BF0 STP X28, X27, [X31 + 0x80]
	0x03411BF4 STP X26, X25, [X31 + 0x90]
	0x03411BF8 STP X24, X23, [X31 + 0xA0]
	0x03411BFC STP X22, X21, [X31 + 0xB0]
	0x03411C00 STP X20, X19, [X31 + 0xC0]
	0x03411C04 ADRP X27, 0xFCC000
	0x03411C08 ADRP X26, 0xD1D000
	0x03411C0C LDRB W8, [X27 + 0x5AC]
	0x03411C10 LDR X26, [X26 + 0x5D8]
	0x03411C14 MOV X19, X6
	0x03411C18 MOV X20, X5

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCD000
	011 Move X24, 0xCE6000
	012 Move W8, [X25+1436]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1E000
	024 Move X0, [X0+1264]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE6000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1436], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1E000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1264]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task KickGroupUsersAsync(System.String bearerToken, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> userIds, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411C1C MOV X21, X4
	0x03411C20 MOV X23, X3
	0x03411C24 MOV X25, X2
	0x03411C28 MOV X22, X1
	0x03411C2C MOV X24, X0
	0x03411C30 TBNZ X8, 0x0, 0x3411C6C
	0x03411C34 ADRP X0, 0xD1D000
	0x03411C38 LDR X0, [X0 + 0x5E0]
	0x03411C3C BL 0x1C16CF4
	0x03411C40 ADRP X0, 0xD1D000
	0x03411C44 LDR X0, [X0 + 0x618]
	0x03411C48 BL 0x1C16CF4
	0x03411C4C ADRP X0, 0xD1D000
	0x03411C50 LDR X0, [X0 + 0x5F0]
	0x03411C54 BL 0x1C16CF4
	0x03411C58 ADRP X0, 0xD1D000
	0x03411C5C LDR X0, [X0 + 0x5D8]
	0x03411C60 BL 0x1C16CF4
	0x03411C64 MOVZ W8, 0x1
	0x03411C68 STRB W8, [X27 + 0x5AC]
	0x03411C6C LDR X0, [X26]
	0x03411C70 MOVI V0.2D, 0x0
	0x03411C74 STP V0, V0, [X31 + 0x50]
	0x03411C78 STP V0, V0, [X31 + 0x30]
	0x03411C7C STP V0, V0, [X31 + 0x10]
	0x03411C80 STR V0, [X31]
	0x03411C84 ADRP X26, 0xD1D000
	0x03411C88 ADRP X29, 0xD1D000
	0x03411C8C LDR W8, [X0 + 0xE0]
	0x03411C90 LDP X27, X28, [X31 + 0xD0]
	0x03411C94 LDR X26, [X26 + 0x5E0]
	0x03411C98 LDR X29, [X29 + 0x618]
	0x03411C9C CBNZ W8, 0x3411CA4
	0x03411CA0 BL 0x1C16DFC
	0x03411CA4 LDR X0, [X26]
	0x03411CA8 ADD X8, X31, 0x0
	0x03411CAC ORR X26, X8, 0xF
	0x03411CB0 MOV X8, X26
	0x03411CB4 BL 0x263221C
	0x03411CB8 LDR X2, [X29]
	0x03411CBC MOVN W8, 0x0
	0x03411CC0 ADD X1, X31, 0x0
	0x03411CC4 MOV X0, X26
	0x03411CC8 STP X25, X23, [X31 + 0x20]
	0x03411CCC STP X21, X20, [X31 + 0x30]
	0x03411CD0 STP X19, X24, [X31 + 0x40]
	0x03411CD4 STP X22, X27, [X31 + 0x50]
	0x03411CD8 STR X28, [X31 + 0x60]
	0x03411CDC STR W8, [X31]
	0x03411CE0 BL 0x1FC9614
	0x03411CE4 ADRP X8, 0xD1D000
	0x03411CE8 LDR X8, [X8 + 0x5F0]
	0x03411CEC MOV X0, X26
	0x03411CF0 LDR X1, [X8]
	0x03411CF4 BL 0x2632230
	0x03411CF8 LDP X20, X19, [X31 + 0xC0]
	0x03411CFC LDP X22, X21, [X31 + 0xB0]
	0x03411D00 LDP X24, X23, [X31 + 0xA0]
	0x03411D04 LDP X26, X25, [X31 + 0x90]
	0x03411D08 LDP X28, X27, [X31 + 0x80]
	0x03411D0C LDP X29, X30, [X31 + 0x70]
	0x03411D10 ADD X31, X31, 0xD0
	0x03411D14 RET
	0x03411D18 SUB X31, X31, 0xF0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1437]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1272]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1437], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1272]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task LeaveGroupAsync(System.String bearerToken, System.String groupId, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411D1C STP X29, X30, [X31 + 0x90]
	0x03411D20 STP X28, X27, [X31 + 0xA0]
	0x03411D24 STP X26, X25, [X31 + 0xB0]
	0x03411D28 STP X24, X23, [X31 + 0xC0]
	0x03411D2C STP X22, X21, [X31 + 0xD0]
	0x03411D30 STP X20, X19, [X31 + 0xE0]
	0x03411D34 STR X7, [X31 + 0x8]
	0x03411D38 ADRP X28, 0xFCC000
	0x03411D3C ADRP X27, 0xD1D000
	0x03411D40 LDRB W8, [X28 + 0x5AD]
	0x03411D44 LDR X27, [X27 + 0x620]
	0x03411D48 MOV X20, X6
	0x03411D4C MOV X21, X5
	0x03411D50 MOV X22, X4
	0x03411D54 MOV X23, X3
	0x03411D58 MOV X24, X2
	0x03411D5C MOV X25, X1
	0x03411D60 MOV X26, X0
	0x03411D64 TBNZ X8, 0x0, 0x3411DA0
	0x03411D68 ADRP X0, 0xD1D000
	0x03411D6C LDR X0, [X0 + 0x628]
	0x03411D70 BL 0x1C16CF4
	0x03411D74 ADRP X0, 0xD1D000
	0x03411D78 LDR X0, [X0 + 0x630]
	0x03411D7C BL 0x1C16CF4
	0x03411D80 ADRP X0, 0xD1D000
	0x03411D84 LDR X0, [X0 + 0x638]
	0x03411D88 BL 0x1C16CF4
	0x03411D8C ADRP X0, 0xD1D000
	0x03411D90 LDR X0, [X0 + 0x620]
	0x03411D94 BL 0x1C16CF4
	0x03411D98 MOVZ W8, 0x1
	0x03411D9C STRB W8, [X28 + 0x5AD]
	0x03411DA0 LDR X0, [X27]
	0x03411DA4 MOVI V0.2D, 0x0
	0x03411DA8 STR X31, [X31 + 0x80]
	0x03411DAC STP V0, V0, [X31 + 0x60]
	0x03411DB0 STP V0, V0, [X31 + 0x40]
	0x03411DB4 STP V0, V0, [X31 + 0x20]
	0x03411DB8 STR V0, [X31 + 0x1]
	0x03411DBC ADRP X27, 0xD1D000
	0x03411DC0 ADRP X19, 0xD1D000
	0x03411DC4 LDR W8, [X0 + 0xE0]
	0x03411DC8 LDP X28, X29, [X31 + 0xF0]
	0x03411DCC LDR X27, [X27 + 0x628]
	0x03411DD0 LDR X19, [X19 + 0x630]
	0x03411DD4 CBNZ W8, 0x3411DDC
	0x03411DD8 BL 0x1C16DFC
	0x03411DDC LDR X0, [X27]
	0x03411DE0 ADD X8, X31, 0x10
	0x03411DE4 ORR X27, X8, 0xF
	0x03411DE8 MOV X8, X27
	0x03411DEC BL 0x263221C
	0x03411DF0 LDR X8, [X31 + 0x8]
	0x03411DF4 LDR X2, [X19]
	0x03411DF8 ADD X1, X31, 0x10
	0x03411DFC MOV X0, X27
	0x03411E00 STP X20, X8, [X31 + 0x50]
	0x03411E04 MOVN W8, 0x0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCD000
	011 Move X24, 0xCE6000
	012 Move W8, [X25+1438]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1E000
	024 Move X0, [X0+1280]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE6000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1438], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1E000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1280]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task PromoteGroupUsersAsync(System.String bearerToken, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> userIds, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411E08 STP X26, X25, [X31 + 0x60]
	0x03411E0C STR X24, [X31 + 0x30]
	0x03411E10 STRH W23, [X31 + 0x38]
	0x03411E14 STP X22, X21, [X31 + 0x40]
	0x03411E18 STP X28, X29, [X31 + 0x70]
	0x03411E1C STR W8, [X31 + 0x10]
	0x03411E20 BL 0x1FC9814
	0x03411E24 ADRP X8, 0xD1D000
	0x03411E28 LDR X8, [X8 + 0x638]
	0x03411E2C MOV X0, X27
	0x03411E30 LDR X1, [X8]
	0x03411E34 BL 0x2632230
	0x03411E38 LDP X20, X19, [X31 + 0xE0]
	0x03411E3C LDP X22, X21, [X31 + 0xD0]
	0x03411E40 LDP X24, X23, [X31 + 0xC0]
	0x03411E44 LDP X26, X25, [X31 + 0xB0]
	0x03411E48 LDP X28, X27, [X31 + 0xA0]
	0x03411E4C LDP X29, X30, [X31 + 0x90]
	0x03411E50 ADD X31, X31, 0xF0
	0x03411E54 RET
	0x03411E58 SUB X31, X31, 0xB0
	0x03411E5C STP X30, X25, [X31 + 0x70]
	0x03411E60 STP X24, X23, [X31 + 0x80]
	0x03411E64 STP X22, X21, [X31 + 0x90]
	0x03411E68 STP X20, X19, [X31 + 0xA0]
	0x03411E6C ADRP X25, 0xFCC000
	0x03411E70 ADRP X24, 0xCE5000
	0x03411E74 LDRB W8, [X25 + 0x5AE]
	0x03411E78 LDR X24, [X24 + 0x280]
	0x03411E7C MOV X20, X4
	0x03411E80 MOV X21, X3
	0x03411E84 MOV X19, X2
	0x03411E88 MOV X22, X1
	0x03411E8C MOV X23, X0
	0x03411E90 TBNZ X8, 0x0, 0x3411EB4
	0x03411E94 ADRP X0, 0xD1D000
	0x03411E98 LDR X0, [X0 + 0x640]
	0x03411E9C BL 0x1C16CF4
	0x03411EA0 ADRP X0, 0xCE5000
	0x03411EA4 LDR X0, [X0 + 0x280]
	0x03411EA8 BL 0x1C16CF4
	0x03411EAC MOVZ W8, 0x1
	0x03411EB0 STRB W8, [X25 + 0x5AE]
	0x03411EB4 LDR X0, [X24]
	0x03411EB8 MOVI V0.2D, 0x0
	0x03411EBC STP V0, V0, [X31 + 0x50]
	0x03411EC0 STP V0, V0, [X31 + 0x30]
	0x03411EC4 STR V0, [X31 + 0x2]
	0x03411EC8 ADRP X24, 0xD1D000
	0x03411ECC LDR W8, [X0 + 0xE0]
	0x03411ED0 LDR X24, [X24 + 0x640]
	0x03411ED4 CBNZ W8, 0x3411EDC
	0x03411ED8 BL 0x1C16DFC
	0x03411EDC ADD X8, X31, 0x8
	0x03411EE0 MOV X0, X31
	0x03411EE4 BL 0x32C4770
	0x03411EE8 LDUR V0, [X31 + 0x8]
	0x03411EEC LDR X9, [X31 + 0x18]
	0x03411EF0 LDR X2, [X24]
	0x03411EF4 ADD X8, X31, 0x20
	0x03411EF8 STP X21, X20, [X31 + 0x58]
	0x03411EFC ORR X20, X8, 0xF
	0x03411F00 MOVN W10, 0x0
	0x03411F04 ADD X1, X31, 0x20

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xFCD000
	012 Move X25, 0xCE6000
	013 Move W8, [X26+1439]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xD1E000
	026 Move X0, [X0+1288]
	027 Call 0x1C17CF4
	028 Move X0, 0xCE6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1439], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xD1E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+1288]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+104], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+72], X22
	062 Move [X31+80], X24
	063 Move [X31+88], X23
	064 Move [X31+96], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroupUserList> ListGroupUsersAsync(System.String bearerToken, System.String groupId, System.Nullable`1<System.Int32> limit, System.Nullable`1<System.Int32> state, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03411F08 MOV X0, X20
	0x03411F0C STP X23, X22, [X31 + 0x48]
	0x03411F10 STUR V0, [X31 + 0x28]
	0x03411F14 STP X9, X19, [X31 + 0x38]
	0x03411F18 STR W10, [X31 + 0x20]
	0x03411F1C BL 0x218D3B8
	0x03411F20 MOV X0, X20
	0x03411F24 MOV X1, X31
	0x03411F28 BL 0x32C47F8
	0x03411F2C LDP X20, X19, [X31 + 0xA0]
	0x03411F30 LDP X22, X21, [X31 + 0x90]
	0x03411F34 LDP X24, X23, [X31 + 0x80]
	0x03411F38 LDP X30, X25, [X31 + 0x70]
	0x03411F3C ADD X31, X31, 0xB0
	0x03411F40 RET
	0x03411F44 SUB X31, X31, 0xB0
	0x03411F48 STP X30, X27, [X31 + 0x60]
	0x03411F4C STP X26, X25, [X31 + 0x70]
	0x03411F50 STP X24, X23, [X31 + 0x80]
	0x03411F54 STP X22, X21, [X31 + 0x90]
	0x03411F58 STP X20, X19, [X31 + 0xA0]
	0x03411F5C ADRP X26, 0xFCC000
	0x03411F60 ADRP X25, 0xD1D000
	0x03411F64 LDRB W8, [X26 + 0x5AF]
	0x03411F68 LDR X25, [X25 + 0x648]
	0x03411F6C MOV X19, X5
	0x03411F70 MOV X20, X4
	0x03411F74 MOV X21, X3
	0x03411F78 MOV X22, X2
	0x03411F7C MOV X23, X1
	0x03411F80 MOV X24, X0
	0x03411F84 TBNZ X8, 0x0, 0x3411FC0
	0x03411F88 ADRP X0, 0xD1D000
	0x03411F8C LDR X0, [X0 + 0x650]
	0x03411F90 BL 0x1C16CF4
	0x03411F94 ADRP X0, 0xD1D000
	0x03411F98 LDR X0, [X0 + 0x658]
	0x03411F9C BL 0x1C16CF4
	0x03411FA0 ADRP X0, 0xD1D000
	0x03411FA4 LDR X0, [X0 + 0x660]
	0x03411FA8 BL 0x1C16CF4
	0x03411FAC ADRP X0, 0xD1D000
	0x03411FB0 LDR X0, [X0 + 0x648]
	0x03411FB4 BL 0x1C16CF4
	0x03411FB8 MOVZ W8, 0x1
	0x03411FBC STRB W8, [X26 + 0x5AF]
	0x03411FC0 LDR X0, [X25]
	0x03411FC4 MOVI V0.2D, 0x0
	0x03411FC8 STR X31, [X31 + 0x50]
	0x03411FCC STP V0, V0, [X31 + 0x30]
	0x03411FD0 STP V0, V0, [X31 + 0x10]
	0x03411FD4 STR V0, [X31]
	0x03411FD8 ADRP X25, 0xD1D000
	0x03411FDC ADRP X27, 0xD1D000
	0x03411FE0 ADRP X26, 0xD1D000
	0x03411FE4 LDR W8, [X0 + 0xE0]
	0x03411FE8 LDR X25, [X25 + 0x650]
	0x03411FEC LDR X27, [X27 + 0x658]
	0x03411FF0 LDR X26, [X26 + 0x660]
	0x03411FF4 CBNZ W8, 0x3411FFC
	0x03411FF8 BL 0x1C16DFC
	0x03411FFC LDR X0, [X25]
	0x03412000 ADD X8, X31, 0x0
	0x03412004 ORR X25, X8, 0xF
	0x03412008 MOV X8, X25
	0x0341200C BL 0x263221C
	0x03412010 LDR X2, [X27]
	0x03412014 MOVN W8, 0x0
	0x03412018 ADD X1, X31, 0x0
	0x0341201C MOV X0, X25
	0x03412020 STP X24, X23, [X31 + 0x30]
	0x03412024 STP X22, X21, [X31 + 0x20]
	0x03412028 STP X20, X19, [X31 + 0x40]
	0x0341202C STR W8, [X31]
	0x03412030 BL 0x1FC9914

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCD000
	015 Move X27, 0xD1E000
	016 Move W8, [X28+1440]
	017 Move X27, [X27+1296]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD1E000
	031 Move X0, [X0+1304]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1E000
	034 Move X0, [X0+1312]
	035 Call 0x1C17CF4
	036 Move X0, 0xD1E000
	037 Move X0, [X0+1320]
	038 Call 0x1C17CF4
	039 Move X0, 0xD1E000
	040 Move X0, [X0+1296]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1440], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD1E000
	054 Move X29, 0xD1E000
	055 Move X28, 0xD1E000
	056 Move W8, [X0+224]
	057 Move X27, [X27+1304]
	058 Move X29, [X29+1312]
	059 Move X28, [X28+1320]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X24
	077 Move [X31+40], X23
	078 Move [X31+48], X22
	079 Move [X31+56], X21
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseAppleAsync(System.String bearerToken, Nakama.ApiValidatePurchaseAppleRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412034 LDR X1, [X26]
	0x03412038 MOV X0, X25
	0x0341203C BL 0x2632230
	0x03412040 LDP X20, X19, [X31 + 0xA0]
	0x03412044 LDP X22, X21, [X31 + 0x90]
	0x03412048 LDP X24, X23, [X31 + 0x80]
	0x0341204C LDP X26, X25, [X31 + 0x70]
	0x03412050 LDP X30, X27, [X31 + 0x60]
	0x03412054 ADD X31, X31, 0xB0
	0x03412058 RET
	0x0341205C SUB X31, X31, 0xD0
	0x03412060 STP X29, X30, [X31 + 0x70]
	0x03412064 STP X28, X27, [X31 + 0x80]
	0x03412068 STP X26, X25, [X31 + 0x90]
	0x0341206C STP X24, X23, [X31 + 0xA0]
	0x03412070 STP X22, X21, [X31 + 0xB0]
	0x03412074 STP X20, X19, [X31 + 0xC0]
	0x03412078 ADRP X27, 0xFCB000
	0x0341207C ADRP X26, 0xD1C000
	0x03412080 LDRB W8, [X27 + 0x5B0]
	0x03412084 LDR X26, [X26 + 0x668]
	0x03412088 MOV X19, X6
	0x0341208C MOV X20, X5
	0x03412090 MOV X22, X4
	0x03412094 MOV X21, X3
	0x03412098 MOV X24, X2
	0x0341209C MOV X25, X1
	0x034120A0 MOV X23, X0
	0x034120A4 TBNZ X8, 0x0, 0x34120E0
	0x034120A8 ADRP X0, 0xD1C000
	0x034120AC LDR X0, [X0 + 0x670]
	0x034120B0 BL 0x1C16CF4
	0x034120B4 ADRP X0, 0xD1C000
	0x034120B8 LDR X0, [X0 + 0x678]
	0x034120BC BL 0x1C16CF4
	0x034120C0 ADRP X0, 0xD1C000
	0x034120C4 LDR X0, [X0 + 0x680]
	0x034120C8 BL 0x1C16CF4
	0x034120CC ADRP X0, 0xD1C000
	0x034120D0 LDR X0, [X0 + 0x668]
	0x034120D4 BL 0x1C16CF4
	0x034120D8 MOVZ W8, 0x1
	0x034120DC STRB W8, [X27 + 0x5B0]
	0x034120E0 LDR X0, [X26]
	0x034120E4 MOVI V0.2D, 0x0
	0x034120E8 STP V0, V0, [X31 + 0x50]
	0x034120EC STP V0, V0, [X31 + 0x30]
	0x034120F0 STP V0, V0, [X31 + 0x10]
	0x034120F4 STR V0, [X31]
	0x034120F8 ADRP X26, 0xD1C000
	0x034120FC ADRP X29, 0xD1C000
	0x03412100 LDR W8, [X0 + 0xE0]
	0x03412104 LDP X27, X28, [X31 + 0xD0]
	0x03412108 LDR X26, [X26 + 0x670]
	0x0341210C LDR X29, [X29 + 0x678]
	0x03412110 CBNZ W8, 0x3412118
	0x03412114 BL 0x1C16DFC
	0x03412118 LDR X0, [X26]
	0x0341211C ADD X8, X31, 0x0
	0x03412120 ORR X26, X8, 0xF
	0x03412124 MOV X8, X26
	0x03412128 BL 0x263221C
	0x0341212C LDR X2, [X29]
	0x03412130 MOVN W8, 0x0
	0x03412134 ADD X1, X31, 0x0
	0x03412138 MOV X0, X26
	0x0341213C STP X25, X24, [X31 + 0x40]
	0x03412140 STP X22, X20, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCC000
	012 Move X24, 0xD1D000
	013 Move W8, [X25+1441]
	014 Move X24, [X24+1328]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1D000
	025 Move X0, [X0+1336]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1D000
	028 Move X0, [X0+1344]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1352]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1328]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1441], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1D000
	046 Move X26, 0xD1D000
	047 Move X25, 0xD1D000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1336]
	050 Move X26, [X26+1344]
	051 Move X25, [X25+1352]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseFacebookInstantAsync(System.String bearerToken, Nakama.ApiValidatePurchaseFacebookInstantRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412144 STP X19, X23, [X31 + 0x30]
	0x03412148 STP X21, X27, [X31 + 0x50]
	0x0341214C STR X28, [X31 + 0x60]
	0x03412150 STR W8, [X31]
	0x03412154 BL 0x1FCA214
	0x03412158 ADRP X8, 0xD1C000
	0x0341215C LDR X8, [X8 + 0x680]
	0x03412160 MOV X0, X26
	0x03412164 LDR X1, [X8]
	0x03412168 BL 0x2632230
	0x0341216C LDP X20, X19, [X31 + 0xC0]
	0x03412170 LDP X22, X21, [X31 + 0xB0]
	0x03412174 LDP X24, X23, [X31 + 0xA0]
	0x03412178 LDP X26, X25, [X31 + 0x90]
	0x0341217C LDP X28, X27, [X31 + 0x80]
	0x03412180 LDP X29, X30, [X31 + 0x70]
	0x03412184 ADD X31, X31, 0xD0
	0x03412188 RET
	0x0341218C SUB X31, X31, 0xD0
	0x03412190 STP X29, X30, [X31 + 0x70]
	0x03412194 STP X28, X27, [X31 + 0x80]
	0x03412198 STP X26, X25, [X31 + 0x90]
	0x0341219C STP X24, X23, [X31 + 0xA0]
	0x034121A0 STP X22, X21, [X31 + 0xB0]
	0x034121A4 STP X20, X19, [X31 + 0xC0]
	0x034121A8 ADRP X27, 0xFCB000
	0x034121AC ADRP X26, 0xD1C000
	0x034121B0 LDRB W8, [X27 + 0x5B1]
	0x034121B4 LDR X26, [X26 + 0x668]
	0x034121B8 MOV X19, X6
	0x034121BC MOV X20, X5
	0x034121C0 MOV X22, X4
	0x034121C4 MOV X21, X3
	0x034121C8 MOV X24, X2
	0x034121CC MOV X25, X1
	0x034121D0 MOV X23, X0
	0x034121D4 TBNZ X8, 0x0, 0x3412210
	0x034121D8 ADRP X0, 0xD1C000
	0x034121DC LDR X0, [X0 + 0x670]
	0x034121E0 BL 0x1C16CF4
	0x034121E4 ADRP X0, 0xD1C000
	0x034121E8 LDR X0, [X0 + 0x688]
	0x034121EC BL 0x1C16CF4
	0x034121F0 ADRP X0, 0xD1C000
	0x034121F4 LDR X0, [X0 + 0x680]
	0x034121F8 BL 0x1C16CF4
	0x034121FC ADRP X0, 0xD1C000
	0x03412200 LDR X0, [X0 + 0x668]
	0x03412204 BL 0x1C16CF4
	0x03412208 MOVZ W8, 0x1
	0x0341220C STRB W8, [X27 + 0x5B1]
	0x03412210 LDR X0, [X26]
	0x03412214 MOVI V0.2D, 0x0
	0x03412218 STP V0, V0, [X31 + 0x50]
	0x0341221C STP V0, V0, [X31 + 0x30]
	0x03412220 STP V0, V0, [X31 + 0x10]
	0x03412224 STR V0, [X31]
	0x03412228 ADRP X26, 0xD1C000
	0x0341222C ADRP X29, 0xD1C000
	0x03412230 LDR W8, [X0 + 0xE0]
	0x03412234 LDP X27, X28, [X31 + 0xD0]
	0x03412238 LDR X26, [X26 + 0x670]
	0x0341223C LDR X29, [X29 + 0x688]
	0x03412240 CBNZ W8, 0x3412248
	0x03412244 BL 0x1C16DFC
	0x03412248 LDR X0, [X26]
	0x0341224C ADD X8, X31, 0x0
	0x03412250 ORR X26, X8, 0xF

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCC000
	012 Move X24, 0xD1D000
	013 Move W8, [X25+1442]
	014 Move X24, [X24+1328]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1D000
	025 Move X0, [X0+1336]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1D000
	028 Move X0, [X0+1360]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1352]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1328]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1442], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1D000
	046 Move X26, 0xD1D000
	047 Move X25, 0xD1D000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1336]
	050 Move X26, [X26+1360]
	051 Move X25, [X25+1352]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseGoogleAsync(System.String bearerToken, Nakama.ApiValidatePurchaseGoogleRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412254 MOV X8, X26
	0x03412258 BL 0x263221C
	0x0341225C LDR X2, [X29]
	0x03412260 MOVN W8, 0x0
	0x03412264 ADD X1, X31, 0x0
	0x03412268 MOV X0, X26
	0x0341226C STP X25, X24, [X31 + 0x40]
	0x03412270 STP X22, X20, [X31 + 0x20]
	0x03412274 STP X19, X23, [X31 + 0x30]
	0x03412278 STP X21, X27, [X31 + 0x50]
	0x0341227C STR X28, [X31 + 0x60]
	0x03412280 STR W8, [X31]
	0x03412284 BL 0x1FCA314
	0x03412288 ADRP X8, 0xD1C000
	0x0341228C LDR X8, [X8 + 0x680]
	0x03412290 MOV X0, X26
	0x03412294 LDR X1, [X8]
	0x03412298 BL 0x2632230
	0x0341229C LDP X20, X19, [X31 + 0xC0]
	0x034122A0 LDP X22, X21, [X31 + 0xB0]
	0x034122A4 LDP X24, X23, [X31 + 0xA0]
	0x034122A8 LDP X26, X25, [X31 + 0x90]
	0x034122AC LDP X28, X27, [X31 + 0x80]
	0x034122B0 LDP X29, X30, [X31 + 0x70]
	0x034122B4 ADD X31, X31, 0xD0
	0x034122B8 RET
	0x034122BC SUB X31, X31, 0xB0
	0x034122C0 STP X30, X25, [X31 + 0x70]
	0x034122C4 STP X24, X23, [X31 + 0x80]
	0x034122C8 STP X22, X21, [X31 + 0x90]
	0x034122CC STP X20, X19, [X31 + 0xA0]
	0x034122D0 ADRP X25, 0xFCB000
	0x034122D4 ADRP X24, 0xCE4000
	0x034122D8 LDRB W8, [X25 + 0x5B2]
	0x034122DC LDR X24, [X24 + 0x280]
	0x034122E0 MOV X20, X4
	0x034122E4 MOV X21, X3
	0x034122E8 MOV X19, X2
	0x034122EC MOV X22, X1
	0x034122F0 MOV X23, X0
	0x034122F4 TBNZ X8, 0x0, 0x3412318
	0x034122F8 ADRP X0, 0xD1C000
	0x034122FC LDR X0, [X0 + 0x690]
	0x03412300 BL 0x1C16CF4
	0x03412304 ADRP X0, 0xCE4000
	0x03412308 LDR X0, [X0 + 0x280]
	0x0341230C BL 0x1C16CF4
	0x03412310 MOVZ W8, 0x1
	0x03412314 STRB W8, [X25 + 0x5B2]
	0x03412318 LDR X0, [X24]
	0x0341231C MOVI V0.2D, 0x0
	0x03412320 STP V0, V0, [X31 + 0x50]
	0x03412324 STP V0, V0, [X31 + 0x30]
	0x03412328 STR V0, [X31 + 0x2]
	0x0341232C ADRP X24, 0xD1C000
	0x03412330 LDR W8, [X0 + 0xE0]
	0x03412334 LDR X24, [X24 + 0x690]
	0x03412338 CBNZ W8, 0x3412340
	0x0341233C BL 0x1C16DFC
	0x03412340 ADD X8, X31, 0x8
	0x03412344 MOV X0, X31
	0x03412348 BL 0x32C4770
	0x0341234C LDUR V0, [X31 + 0x8]
	0x03412350 LDR X9, [X31 + 0x18]
	0x03412354 LDR X2, [X24]
	0x03412358 ADD X8, X31, 0x20
	0x0341235C STP X21, X20, [X31 + 0x58]
	0x03412360 ORR X20, X8, 0xF

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCC000
	012 Move X24, 0xD1D000
	013 Move W8, [X25+1443]
	014 Move X24, [X24+1328]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1D000
	025 Move X0, [X0+1336]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1D000
	028 Move X0, [X0+1368]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1352]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1328]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1443], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1D000
	046 Move X26, 0xD1D000
	047 Move X25, 0xD1D000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1336]
	050 Move X26, [X26+1368]
	051 Move X25, [X25+1352]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseHuaweiAsync(System.String bearerToken, Nakama.ApiValidatePurchaseHuaweiRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412364 MOVN W10, 0x0
	0x03412368 ADD X1, X31, 0x20
	0x0341236C MOV X0, X20
	0x03412370 STP X23, X22, [X31 + 0x48]
	0x03412374 STUR V0, [X31 + 0x28]
	0x03412378 STP X9, X19, [X31 + 0x38]
	0x0341237C STR W10, [X31 + 0x20]
	0x03412380 BL 0x218E9B8
	0x03412384 MOV X0, X20
	0x03412388 MOV X1, X31
	0x0341238C BL 0x32C47F8
	0x03412390 LDP X20, X19, [X31 + 0xA0]
	0x03412394 LDP X22, X21, [X31 + 0x90]
	0x03412398 LDP X24, X23, [X31 + 0x80]
	0x0341239C LDP X30, X25, [X31 + 0x70]
	0x034123A0 ADD X31, X31, 0xB0
	0x034123A4 RET
	0x034123A8 SUB X31, X31, 0xA0
	0x034123AC STR X30, [X31 + 0x50]
	0x034123B0 STP X26, X25, [X31 + 0x60]
	0x034123B4 STP X24, X23, [X31 + 0x70]
	0x034123B8 STP X22, X21, [X31 + 0x80]
	0x034123BC STP X20, X19, [X31 + 0x90]
	0x034123C0 ADRP X25, 0xFCB000
	0x034123C4 ADRP X24, 0xD1C000
	0x034123C8 LDRB W8, [X25 + 0x5B3]
	0x034123CC LDR X24, [X24 + 0x698]
	0x034123D0 MOV X19, X4
	0x034123D4 MOV X20, X3
	0x034123D8 MOV X21, X2
	0x034123DC MOV X22, X1
	0x034123E0 MOV X23, X0
	0x034123E4 TBNZ X8, 0x0, 0x3412420
	0x034123E8 ADRP X0, 0xD1C000
	0x034123EC LDR X0, [X0 + 0x6A0]
	0x034123F0 BL 0x1C16CF4
	0x034123F4 ADRP X0, 0xD1C000
	0x034123F8 LDR X0, [X0 + 0x6A8]
	0x034123FC BL 0x1C16CF4
	0x03412400 ADRP X0, 0xD1C000
	0x03412404 LDR X0, [X0 + 0x6B0]
	0x03412408 BL 0x1C16CF4
	0x0341240C ADRP X0, 0xD1C000
	0x03412410 LDR X0, [X0 + 0x698]
	0x03412414 BL 0x1C16CF4
	0x03412418 MOVZ W8, 0x1
	0x0341241C STRB W8, [X25 + 0x5B3]
	0x03412420 LDR X0, [X24]
	0x03412424 MOVI V0.2D, 0x0
	0x03412428 STP V0, V0, [X31 + 0x30]
	0x0341242C STP V0, V0, [X31 + 0x10]
	0x03412430 STR V0, [X31]
	0x03412434 ADRP X24, 0xD1C000
	0x03412438 ADRP X26, 0xD1C000
	0x0341243C ADRP X25, 0xD1C000
	0x03412440 LDR W8, [X0 + 0xE0]
	0x03412444 LDR X24, [X24 + 0x6A0]
	0x03412448 LDR X26, [X26 + 0x6A8]
	0x0341244C LDR X25, [X25 + 0x6B0]
	0x03412450 CBNZ W8, 0x3412458
	0x03412454 BL 0x1C16DFC
	0x03412458 LDR X0, [X24]
	0x0341245C ADD X8, X31, 0x0
	0x03412460 ORR X24, X8, 0xF
	0x03412464 MOV X8, X24
	0x03412468 BL 0x263221C
	0x0341246C LDR X2, [X26]
	0x03412470 MOVN W8, 0x0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCC000
	012 Move X24, 0xD1D000
	013 Move W8, [X25+1444]
	014 Move X24, [X24+1328]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1D000
	025 Move X0, [X0+1336]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1D000
	028 Move X0, [X0+1376]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1352]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1328]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1444], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1D000
	046 Move X26, 0xD1D000
	047 Move X25, 0xD1D000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1336]
	050 Move X26, [X26+1376]
	051 Move X25, [X25+1352]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSubscriptionList> ListSubscriptionsAsync(System.String bearerToken, Nakama.ApiListSubscriptionsRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412474 ADD X1, X31, 0x0
	0x03412478 MOV X0, X24
	0x0341247C STP X21, X23, [X31 + 0x20]
	0x03412480 STP X22, X20, [X31 + 0x30]
	0x03412484 STR X19, [X31 + 0x40]
	0x03412488 STR W8, [X31]
	0x0341248C BL 0x1FCA114
	0x03412490 LDR X1, [X25]
	0x03412494 MOV X0, X24
	0x03412498 BL 0x2632230
	0x0341249C LDP X20, X19, [X31 + 0x90]
	0x034124A0 LDP X22, X21, [X31 + 0x80]
	0x034124A4 LDP X24, X23, [X31 + 0x70]
	0x034124A8 LDP X26, X25, [X31 + 0x60]
	0x034124AC LDR X30, [X31 + 0x50]
	0x034124B0 ADD X31, X31, 0xA0
	0x034124B4 RET
	0x034124B8 SUB X31, X31, 0xA0
	0x034124BC STR X30, [X31 + 0x50]
	0x034124C0 STP X26, X25, [X31 + 0x60]
	0x034124C4 STP X24, X23, [X31 + 0x70]
	0x034124C8 STP X22, X21, [X31 + 0x80]
	0x034124CC STP X20, X19, [X31 + 0x90]
	0x034124D0 ADRP X25, 0xFCB000
	0x034124D4 ADRP X24, 0xD1C000
	0x034124D8 LDRB W8, [X25 + 0x5B4]
	0x034124DC LDR X24, [X24 + 0x6B8]
	0x034124E0 MOV X19, X4
	0x034124E4 MOV X20, X3
	0x034124E8 MOV X21, X2
	0x034124EC MOV X22, X1
	0x034124F0 MOV X23, X0
	0x034124F4 TBNZ X8, 0x0, 0x3412530
	0x034124F8 ADRP X0, 0xD1C000
	0x034124FC LDR X0, [X0 + 0x6C0]
	0x03412500 BL 0x1C16CF4
	0x03412504 ADRP X0, 0xD1C000
	0x03412508 LDR X0, [X0 + 0x6C8]
	0x0341250C BL 0x1C16CF4
	0x03412510 ADRP X0, 0xD1C000
	0x03412514 LDR X0, [X0 + 0x6D0]
	0x03412518 BL 0x1C16CF4
	0x0341251C ADRP X0, 0xD1C000
	0x03412520 LDR X0, [X0 + 0x6B8]
	0x03412524 BL 0x1C16CF4
	0x03412528 MOVZ W8, 0x1
	0x0341252C STRB W8, [X25 + 0x5B4]
	0x03412530 LDR X0, [X24]
	0x03412534 MOVI V0.2D, 0x0
	0x03412538 STP V0, V0, [X31 + 0x30]
	0x0341253C STP V0, V0, [X31 + 0x10]
	0x03412540 STR V0, [X31]
	0x03412544 ADRP X24, 0xD1C000
	0x03412548 ADRP X26, 0xD1C000
	0x0341254C ADRP X25, 0xD1C000
	0x03412550 LDR W8, [X0 + 0xE0]
	0x03412554 LDR X24, [X24 + 0x6C0]
	0x03412558 LDR X26, [X26 + 0x6C8]
	0x0341255C LDR X25, [X25 + 0x6D0]
	0x03412560 CBNZ W8, 0x3412568
	0x03412564 BL 0x1C16DFC
	0x03412568 LDR X0, [X24]
	0x0341256C ADD X8, X31, 0x0
	0x03412570 ORR X24, X8, 0xF
	0x03412574 MOV X8, X24
	0x03412578 BL 0x263221C
	0x0341257C LDR X2, [X26]
	0x03412580 MOVN W8, 0x0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCC000
	012 Move X24, 0xD1D000
	013 Move W8, [X25+1445]
	014 Move X24, [X24+1384]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1D000
	025 Move X0, [X0+1392]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1D000
	028 Move X0, [X0+1400]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1408]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1384]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1445], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1D000
	046 Move X26, 0xD1D000
	047 Move X25, 0xD1D000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1392]
	050 Move X26, [X26+1400]
	051 Move X25, [X25+1408]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidateSubscriptionResponse> ValidateSubscriptionAppleAsync(System.String bearerToken, Nakama.ApiValidateSubscriptionAppleRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412584 ADD X1, X31, 0x0
	0x03412588 MOV X0, X24
	0x0341258C STP X21, X23, [X31 + 0x20]
	0x03412590 STP X22, X20, [X31 + 0x30]
	0x03412594 STR X19, [X31 + 0x40]
	0x03412598 STR W8, [X31]
	0x0341259C BL 0x1FCAC14
	0x034125A0 LDR X1, [X25]
	0x034125A4 MOV X0, X24
	0x034125A8 BL 0x2632230
	0x034125AC LDP X20, X19, [X31 + 0x90]
	0x034125B0 LDP X22, X21, [X31 + 0x80]
	0x034125B4 LDP X24, X23, [X31 + 0x70]
	0x034125B8 LDP X26, X25, [X31 + 0x60]
	0x034125BC LDR X30, [X31 + 0x50]
	0x034125C0 ADD X31, X31, 0xA0
	0x034125C4 RET
	0x034125C8 SUB X31, X31, 0xB0
	0x034125CC STP X30, X25, [X31 + 0x70]
	0x034125D0 STP X24, X23, [X31 + 0x80]
	0x034125D4 STP X22, X21, [X31 + 0x90]
	0x034125D8 STP X20, X19, [X31 + 0xA0]
	0x034125DC ADRP X25, 0xFCB000
	0x034125E0 ADRP X24, 0xCE4000
	0x034125E4 LDRB W8, [X25 + 0x5B5]
	0x034125E8 LDR X24, [X24 + 0x280]
	0x034125EC MOV X20, X4
	0x034125F0 MOV X21, X3
	0x034125F4 MOV X19, X2
	0x034125F8 MOV X22, X1
	0x034125FC MOV X23, X0
	0x03412600 TBNZ X8, 0x0, 0x3412624
	0x03412604 ADRP X0, 0xD1C000
	0x03412608 LDR X0, [X0 + 0x6D8]
	0x0341260C BL 0x1C16CF4
	0x03412610 ADRP X0, 0xCE4000
	0x03412614 LDR X0, [X0 + 0x280]
	0x03412618 BL 0x1C16CF4
	0x0341261C MOVZ W8, 0x1
	0x03412620 STRB W8, [X25 + 0x5B5]
	0x03412624 LDR X0, [X24]
	0x03412628 MOVI V0.2D, 0x0
	0x0341262C STP V0, V0, [X31 + 0x50]
	0x03412630 STP V0, V0, [X31 + 0x30]
	0x03412634 STR V0, [X31 + 0x2]
	0x03412638 ADRP X24, 0xD1C000
	0x0341263C LDR W8, [X0 + 0xE0]
	0x03412640 LDR X24, [X24 + 0x6D8]
	0x03412644 CBNZ W8, 0x341264C
	0x03412648 BL 0x1C16DFC
	0x0341264C ADD X8, X31, 0x8
	0x03412650 MOV X0, X31
	0x03412654 BL 0x32C4770
	0x03412658 LDUR V0, [X31 + 0x8]
	0x0341265C LDR X9, [X31 + 0x18]
	0x03412660 LDR X2, [X24]
	0x03412664 ADD X8, X31, 0x20
	0x03412668 STP X21, X20, [X31 + 0x58]
	0x0341266C ORR X20, X8, 0xF
	0x03412670 MOVN W10, 0x0
	0x03412674 ADD X1, X31, 0x20
	0x03412678 MOV X0, X20
	0x0341267C STP X23, X22, [X31 + 0x48]
	0x03412680 STUR V0, [X31 + 0x28]
	0x03412684 STP X9, X19, [X31 + 0x38]
	0x03412688 STR W10, [X31 + 0x20]
	0x0341268C BL 0x218D4B8
	0x03412690 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCC000
	012 Move X24, 0xD1D000
	013 Move W8, [X25+1446]
	014 Move X24, [X24+1416]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1D000
	025 Move X0, [X0+1424]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1D000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1416]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1446], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1D000
	046 Move X26, 0xD1D000
	047 Move X25, 0xD1D000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1424]
	050 Move X26, [X26+1432]
	051 Move X25, [X25+1440]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidateSubscriptionResponse> ValidateSubscriptionGoogleAsync(System.String bearerToken, Nakama.ApiValidateSubscriptionGoogleRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412694 MOV X1, X31
	0x03412698 BL 0x32C47F8
	0x0341269C LDP X20, X19, [X31 + 0xA0]
	0x034126A0 LDP X22, X21, [X31 + 0x90]
	0x034126A4 LDP X24, X23, [X31 + 0x80]
	0x034126A8 LDP X30, X25, [X31 + 0x70]
	0x034126AC ADD X31, X31, 0xB0
	0x034126B0 RET
	0x034126B4 SUB X31, X31, 0xD0
	0x034126B8 STP X29, X30, [X31 + 0x70]
	0x034126BC STP X28, X27, [X31 + 0x80]
	0x034126C0 STP X26, X25, [X31 + 0x90]
	0x034126C4 STP X24, X23, [X31 + 0xA0]
	0x034126C8 STP X22, X21, [X31 + 0xB0]
	0x034126CC STP X20, X19, [X31 + 0xC0]
	0x034126D0 ADRP X28, 0xFCB000
	0x034126D4 ADRP X27, 0xD1C000
	0x034126D8 LDRB W8, [X28 + 0x5B6]
	0x034126DC LDR X27, [X27 + 0x6E0]
	0x034126E0 MOV X19, X7
	0x034126E4 MOV X20, X6
	0x034126E8 MOV X21, X5
	0x034126EC MOV X22, X4
	0x034126F0 MOV X23, X3
	0x034126F4 MOV X24, X2
	0x034126F8 MOV X25, X1
	0x034126FC MOV X26, X0
	0x03412700 TBNZ X8, 0x0, 0x341273C
	0x03412704 ADRP X0, 0xD1C000
	0x03412708 LDR X0, [X0 + 0x6E8]
	0x0341270C BL 0x1C16CF4
	0x03412710 ADRP X0, 0xD1C000
	0x03412714 LDR X0, [X0 + 0x6F0]
	0x03412718 BL 0x1C16CF4
	0x0341271C ADRP X0, 0xD1C000
	0x03412720 LDR X0, [X0 + 0x6F8]
	0x03412724 BL 0x1C16CF4
	0x03412728 ADRP X0, 0xD1C000
	0x0341272C LDR X0, [X0 + 0x6E0]
	0x03412730 BL 0x1C16CF4
	0x03412734 MOVZ W8, 0x1
	0x03412738 STRB W8, [X28 + 0x5B6]
	0x0341273C LDR X0, [X27]
	0x03412740 MOVI V0.2D, 0x0
	0x03412744 STR X31, [X31 + 0x60]
	0x03412748 STP V0, V0, [X31 + 0x40]
	0x0341274C STP V0, V0, [X31 + 0x20]
	0x03412750 STP V0, V0, [X31]
	0x03412754 ADRP X27, 0xD1C000
	0x03412758 ADRP X29, 0xD1C000
	0x0341275C ADRP X28, 0xD1C000
	0x03412760 LDR W8, [X0 + 0xE0]
	0x03412764 LDR X27, [X27 + 0x6E8]
	0x03412768 LDR X29, [X29 + 0x6F0]
	0x0341276C LDR X28, [X28 + 0x6F8]
	0x03412770 CBNZ W8, 0x3412778
	0x03412774 BL 0x1C16DFC
	0x03412778 LDR X0, [X27]
	0x0341277C ADD X8, X31, 0x0
	0x03412780 ORR X27, X8, 0xF
	0x03412784 MOV X8, X27
	0x03412788 BL 0x263221C
	0x0341278C LDR X2, [X29]
	0x03412790 MOVN W8, 0x0
	0x03412794 ADD X1, X31, 0x0
	0x03412798 MOV X0, X27
	0x0341279C STP X26, X25, [X31 + 0x40]
	0x034127A0 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCC000
	012 Move X24, 0xD1D000
	013 Move W8, [X25+1447]
	014 Move X24, [X24+1416]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1D000
	025 Move X0, [X0+1424]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1D000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1416]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1447], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1D000
	046 Move X26, 0xD1D000
	047 Move X25, 0xD1D000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1424]
	050 Move X26, [X26+1448]
	051 Move X25, [X25+1440]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatedSubscription> GetSubscriptionAsync(System.String bearerToken, System.String productId, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034127A4 STP X22, X21, [X31 + 0x30]
	0x034127A8 STP X20, X19, [X31 + 0x50]
	0x034127AC STR W8, [X31]
	0x034127B0 BL 0x1FC9B14
	0x034127B4 LDR X1, [X28]
	0x034127B8 MOV X0, X27
	0x034127BC BL 0x2632230
	0x034127C0 LDP X20, X19, [X31 + 0xC0]
	0x034127C4 LDP X22, X21, [X31 + 0xB0]
	0x034127C8 LDP X24, X23, [X31 + 0xA0]
	0x034127CC LDP X26, X25, [X31 + 0x90]
	0x034127D0 LDP X28, X27, [X31 + 0x80]
	0x034127D4 LDP X29, X30, [X31 + 0x70]
	0x034127D8 ADD X31, X31, 0xD0
	0x034127DC RET
	0x034127E0 SUB X31, X31, 0xD0
	0x034127E4 STP X29, X30, [X31 + 0x70]
	0x034127E8 STP X28, X27, [X31 + 0x80]
	0x034127EC STP X26, X25, [X31 + 0x90]
	0x034127F0 STP X24, X23, [X31 + 0xA0]
	0x034127F4 STP X22, X21, [X31 + 0xB0]
	0x034127F8 STP X20, X19, [X31 + 0xC0]
	0x034127FC ADRP X28, 0xFCB000
	0x03412800 ADRP X27, 0xD1C000
	0x03412804 LDRB W8, [X28 + 0x5B7]
	0x03412808 LDR X27, [X27 + 0x6E0]
	0x0341280C MOV X19, X7
	0x03412810 MOV X20, X6
	0x03412814 MOV X21, X5
	0x03412818 MOV X22, X4
	0x0341281C MOV X23, X3
	0x03412820 MOV X24, X2
	0x03412824 MOV X25, X1
	0x03412828 MOV X26, X0
	0x0341282C TBNZ X8, 0x0, 0x3412868
	0x03412830 ADRP X0, 0xD1C000
	0x03412834 LDR X0, [X0 + 0x6E8]
	0x03412838 BL 0x1C16CF4
	0x0341283C ADRP X0, 0xD1C000
	0x03412840 LDR X0, [X0 + 0x700]
	0x03412844 BL 0x1C16CF4
	0x03412848 ADRP X0, 0xD1C000
	0x0341284C LDR X0, [X0 + 0x6F8]
	0x03412850 BL 0x1C16CF4
	0x03412854 ADRP X0, 0xD1C000
	0x03412858 LDR X0, [X0 + 0x6E0]
	0x0341285C BL 0x1C16CF4
	0x03412860 MOVZ W8, 0x1
	0x03412864 STRB W8, [X28 + 0x5B7]
	0x03412868 LDR X0, [X27]
	0x0341286C MOVI V0.2D, 0x0
	0x03412870 STR X31, [X31 + 0x60]
	0x03412874 STP V0, V0, [X31 + 0x40]
	0x03412878 STP V0, V0, [X31 + 0x20]
	0x0341287C STP V0, V0, [X31]
	0x03412880 ADRP X27, 0xD1C000
	0x03412884 ADRP X29, 0xD1C000
	0x03412888 ADRP X28, 0xD1C000
	0x0341288C LDR W8, [X0 + 0xE0]
	0x03412890 LDR X27, [X27 + 0x6E8]
	0x03412894 LDR X29, [X29 + 0x700]
	0x03412898 LDR X28, [X28 + 0x6F8]
	0x0341289C CBNZ W8, 0x34128A4
	0x034128A0 BL 0x1C16DFC
	0x034128A4 LDR X0, [X27]
	0x034128A8 ADD X8, X31, 0x0
	0x034128AC ORR X27, X8, 0xF
	0x034128B0 MOV X8, X27

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCC000
	012 Move X24, 0xD1D000
	013 Move W8, [X25+1448]
	014 Move X24, [X24+1456]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1D000
	025 Move X0, [X0+1464]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1D000
	028 Move X0, [X0+1472]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1480]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1456]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1448], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1D000
	046 Move X26, 0xD1D000
	047 Move X25, 0xD1D000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1464]
	050 Move X26, [X26+1472]
	051 Move X25, [X25+1480]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task DeleteLeaderboardRecordAsync(System.String bearerToken, System.String leaderboardId, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034128B4 BL 0x263221C
	0x034128B8 LDR X2, [X29]
	0x034128BC MOVN W8, 0x0
	0x034128C0 ADD X1, X31, 0x0
	0x034128C4 MOV X0, X27
	0x034128C8 STP X26, X25, [X31 + 0x40]
	0x034128CC STP X24, X23, [X31 + 0x20]
	0x034128D0 STP X22, X21, [X31 + 0x30]
	0x034128D4 STP X20, X19, [X31 + 0x50]
	0x034128D8 STR W8, [X31]
	0x034128DC BL 0x1FC9A14
	0x034128E0 LDR X1, [X28]
	0x034128E4 MOV X0, X27
	0x034128E8 BL 0x2632230
	0x034128EC LDP X20, X19, [X31 + 0xC0]
	0x034128F0 LDP X22, X21, [X31 + 0xB0]
	0x034128F4 LDP X24, X23, [X31 + 0xA0]
	0x034128F8 LDP X26, X25, [X31 + 0x90]
	0x034128FC LDP X28, X27, [X31 + 0x80]
	0x03412900 LDP X29, X30, [X31 + 0x70]
	0x03412904 ADD X31, X31, 0xD0
	0x03412908 RET
	0x0341290C SUB X31, X31, 0xF0
	0x03412910 STP X29, X30, [X31 + 0x90]
	0x03412914 STP X28, X27, [X31 + 0xA0]
	0x03412918 STP X26, X25, [X31 + 0xB0]
	0x0341291C STP X24, X23, [X31 + 0xC0]
	0x03412920 STP X22, X21, [X31 + 0xD0]
	0x03412924 STP X20, X19, [X31 + 0xE0]
	0x03412928 STR X7, [X31 + 0x8]
	0x0341292C ADRP X28, 0xFCB000
	0x03412930 ADRP X27, 0xD1C000
	0x03412934 LDRB W8, [X28 + 0x5B8]
	0x03412938 LDR X27, [X27 + 0x708]
	0x0341293C MOV X20, X6
	0x03412940 MOV X21, X5
	0x03412944 MOV X22, X4
	0x03412948 MOV X23, X3
	0x0341294C MOV X24, X2
	0x03412950 MOV X25, X1
	0x03412954 MOV X26, X0
	0x03412958 TBNZ X8, 0x0, 0x3412994
	0x0341295C ADRP X0, 0xD1C000
	0x03412960 LDR X0, [X0 + 0x710]
	0x03412964 BL 0x1C16CF4
	0x03412968 ADRP X0, 0xD1C000
	0x0341296C LDR X0, [X0 + 0x718]
	0x03412970 BL 0x1C16CF4
	0x03412974 ADRP X0, 0xD1C000
	0x03412978 LDR X0, [X0 + 0x720]
	0x0341297C BL 0x1C16CF4
	0x03412980 ADRP X0, 0xD1C000
	0x03412984 LDR X0, [X0 + 0x708]
	0x03412988 BL 0x1C16CF4
	0x0341298C MOVZ W8, 0x1
	0x03412990 STRB W8, [X28 + 0x5B8]
	0x03412994 LDR X0, [X27]
	0x03412998 MOVI V0.2D, 0x0
	0x0341299C STR X31, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCC000
	011 Move X24, 0xCE5000
	012 Move W8, [X25+1449]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1D000
	024 Move X0, [X0+1488]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1449], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1D000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1488]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecordList> ListLeaderboardRecordsAsync(System.String bearerToken, System.String leaderboardId, System.Collections.Generic.IEnumerable`1<System.String> ownerIds, System.Nullable`1<System.Int32> limit, System.String cursor, System.String expiry, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034129A0 STP V0, V0, [X31 + 0x60]
	0x034129A4 STP V0, V0, [X31 + 0x40]
	0x034129A8 STP V0, V0, [X31 + 0x20]
	0x034129AC STR V0, [X31 + 0x1]
	0x034129B0 ADRP X27, 0xD1C000
	0x034129B4 ADRP X19, 0xD1C000
	0x034129B8 LDR W8, [X0 + 0xE0]
	0x034129BC LDP X28, X29, [X31 + 0xF0]
	0x034129C0 LDR X27, [X27 + 0x710]
	0x034129C4 LDR X19, [X19 + 0x718]
	0x034129C8 CBNZ W8, 0x34129D0
	0x034129CC BL 0x1C16DFC
	0x034129D0 LDR X0, [X27]
	0x034129D4 ADD X8, X31, 0x10
	0x034129D8 ORR X27, X8, 0xF
	0x034129DC MOV X8, X27
	0x034129E0 BL 0x263221C
	0x034129E4 LDR X8, [X31 + 0x8]
	0x034129E8 LDR X2, [X19]
	0x034129EC ADD X1, X31, 0x10
	0x034129F0 MOV X0, X27
	0x034129F4 STP X20, X8, [X31 + 0x50]
	0x034129F8 MOVN W8, 0x0
	0x034129FC STP X26, X25, [X31 + 0x60]
	0x03412A00 STP X24, X23, [X31 + 0x30]
	0x03412A04 STP X22, X21, [X31 + 0x40]
	0x03412A08 STP X28, X29, [X31 + 0x70]
	0x03412A0C STR W8, [X31 + 0x10]
	0x03412A10 BL 0x1FC9F14
	0x03412A14 ADRP X8, 0xD1C000
	0x03412A18 LDR X8, [X8 + 0x720]
	0x03412A1C MOV X0, X27
	0x03412A20 LDR X1, [X8]
	0x03412A24 BL 0x2632230
	0x03412A28 LDP X20, X19, [X31 + 0xE0]
	0x03412A2C LDP X22, X21, [X31 + 0xD0]
	0x03412A30 LDP X24, X23, [X31 + 0xC0]
	0x03412A34 LDP X26, X25, [X31 + 0xB0]
	0x03412A38 LDP X28, X27, [X31 + 0xA0]
	0x03412A3C LDP X29, X30, [X31 + 0x90]
	0x03412A40 ADD X31, X31, 0xF0
	0x03412A44 RET
	0x03412A48 SUB X31, X31, 0xB0
	0x03412A4C STP X30, X25, [X31 + 0x70]
	0x03412A50 STP X24, X23, [X31 + 0x80]
	0x03412A54 STP X22, X21, [X31 + 0x90]
	0x03412A58 STP X20, X19, [X31 + 0xA0]
	0x03412A5C ADRP X25, 0xFCB000
	0x03412A60 ADRP X24, 0xCE4000
	0x03412A64 LDRB W8, [X25 + 0x5B9]
	0x03412A68 LDR X24, [X24 + 0x280]
	0x03412A6C MOV X20, X4
	0x03412A70 MOV X21, X3
	0x03412A74 MOV X19, X2
	0x03412A78 MOV X22, X1
	0x03412A7C MOV X23, X0
	0x03412A80 TBNZ X8, 0x0, 0x3412AA4
	0x03412A84 ADRP X0, 0xD1C000
	0x03412A88 LDR X0, [X0 + 0x728]
	0x03412A8C BL 0x1C16CF4
	0x03412A90 ADRP X0, 0xCE4000
	0x03412A94 LDR X0, [X0 + 0x280]
	0x03412A98 BL 0x1C16CF4
	0x03412A9C MOVZ W8, 0x1
	0x03412AA0 STRB W8, [X25 + 0x5B9]
	0x03412AA4 LDR X0, [X24]
	0x03412AA8 MOVI V0.2D, 0x0
	0x03412AAC STP V0, V0, [X31 + 0x50]
	0x03412AB0 STP V0, V0, [X31 + 0x30]
	0x03412AB4 STR V0, [X31 + 0x2]
	0x03412AB8 ADRP X24, 0xD1C000
	0x03412ABC LDR W8, [X0 + 0xE0]
	0x03412AC0 LDR X24, [X24 + 0x728]
	0x03412AC4 CBNZ W8, 0x3412ACC
	0x03412AC8 BL 0x1C16DFC
	0x03412ACC ADD X8, X31, 0x8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X27, 0xFCC000
	015 Move X26, 0xD1D000
	016 Move W8, [X27+1450]
	017 Move X26, [X26+1496]
	018 Move X19, X6
	019 Move X20, X5
	020 Move X21, X4
	021 Move X23, X3
	022 Move X25, X2
	023 Move X22, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD1D000
	030 Move X0, [X0+1504]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1D000
	033 Move X0, [X0+1512]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1D000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xD1D000
	039 Move X0, [X0+1496]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+1450], W8
	043 Move X0, [X26]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], V0
	052 Move X26, 0xD1D000
	053 Move X29, 0xD1D000
	054 Move W8, [X0+224]
	055 Move X27, [X31+208]
	056 Move X28, [X31+216]
	057 Move X26, [X26+1504]
	058 Move X29, [X29+1512]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X26]
	063 Add X8, X31, 0
	064 Or X26, X8, 15
	065 Move X8, X26
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X26
	073 Move [X31+32], X25
	074 Move [X31+40], X23
	075 Move [X31+48], X21
	076 Move [X31+56], X20
	077 Move [X31+64], X19
	078 Move [X31+72], X24
	079 Move [X31+80], X22
	080 Move [X31+88], X27
	081 Move [X31+96], X28
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X8, 0xD1D000
	085 Move X8, [X8+1520]
	086 Move X0, X26
	087 Move X1, [X8]
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecord> WriteLeaderboardRecordAsync(System.String bearerToken, System.String leaderboardId, Nakama.WriteLeaderboardRecordRequestLeaderboardRecordWrite record, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412AD0 MOV X0, X31
	0x03412AD4 BL 0x32C4770
	0x03412AD8 LDUR V0, [X31 + 0x8]
	0x03412ADC LDR X9, [X31 + 0x18]
	0x03412AE0 LDR X2, [X24]
	0x03412AE4 ADD X8, X31, 0x20
	0x03412AE8 STP X21, X20, [X31 + 0x58]
	0x03412AEC ORR X20, X8, 0xF
	0x03412AF0 MOVN W10, 0x0
	0x03412AF4 ADD X1, X31, 0x20
	0x03412AF8 MOV X0, X20
	0x03412AFC STP X23, X22, [X31 + 0x48]
	0x03412B00 STUR V0, [X31 + 0x28]
	0x03412B04 STP X9, X19, [X31 + 0x38]
	0x03412B08 STR W10, [X31 + 0x20]
	0x03412B0C BL 0x218D5B8
	0x03412B10 MOV X0, X20
	0x03412B14 MOV X1, X31
	0x03412B18 BL 0x32C47F8
	0x03412B1C LDP X20, X19, [X31 + 0xA0]
	0x03412B20 LDP X22, X21, [X31 + 0x90]
	0x03412B24 LDP X24, X23, [X31 + 0x80]
	0x03412B28 LDP X30, X25, [X31 + 0x70]
	0x03412B2C ADD X31, X31, 0xB0
	0x03412B30 RET
	0x03412B34 SUB X31, X31, 0xD0
	0x03412B38 STP X29, X30, [X31 + 0x70]
	0x03412B3C STP X28, X27, [X31 + 0x80]
	0x03412B40 STP X26, X25, [X31 + 0x90]
	0x03412B44 STP X24, X23, [X31 + 0xA0]
	0x03412B48 STP X22, X21, [X31 + 0xB0]
	0x03412B4C STP X20, X19, [X31 + 0xC0]
	0x03412B50 ADRP X27, 0xFCB000
	0x03412B54 ADRP X26, 0xD1C000
	0x03412B58 LDRB W8, [X27 + 0x5BA]
	0x03412B5C LDR X26, [X26 + 0x730]
	0x03412B60 MOV X19, X6
	0x03412B64 MOV X20, X5
	0x03412B68 MOV X21, X4
	0x03412B6C MOV X23, X3
	0x03412B70 MOV X25, X2
	0x03412B74 MOV X22, X1
	0x03412B78 MOV X24, X0
	0x03412B7C TBNZ X8, 0x0, 0x3412BB8
	0x03412B80 ADRP X0, 0xD1C000
	0x03412B84 LDR X0, [X0 + 0x738]
	0x03412B88 BL 0x1C16CF4
	0x03412B8C ADRP X0, 0xD1C000
	0x03412B90 LDR X0, [X0 + 0x740]
	0x03412B94 BL 0x1C16CF4
	0x03412B98 ADRP X0, 0xD1C000
	0x03412B9C LDR X0, [X0 + 0x748]
	0x03412BA0 BL 0x1C16CF4
	0x03412BA4 ADRP X0, 0xD1C000
	0x03412BA8 LDR X0, [X0 + 0x730]
	0x03412BAC BL 0x1C16CF4
	0x03412BB0 MOVZ W8, 0x1
	0x03412BB4 STRB W8, [X27 + 0x5BA]
	0x03412BB8 LDR X0, [X26]
	0x03412BBC MOVI V0.2D, 0x0
	0x03412BC0 STP V0, V0, [X31 + 0x50]
	0x03412BC4 STP V0, V0, [X31 + 0x30]
	0x03412BC8 STP V0, V0, [X31 + 0x10]
	0x03412BCC STR V0, [X31]
	0x03412BD0 ADRP X26, 0xD1C000
	0x03412BD4 ADRP X29, 0xD1C000
	0x03412BD8 LDR W8, [X0 + 0xE0]
	0x03412BDC LDP X27, X28, [X31 + 0xD0]
	0x03412BE0 LDR X26, [X26 + 0x738]
	0x03412BE4 LDR X29, [X29 + 0x740]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xFCC000
	013 Move X25, 0xD1D000
	014 Move W8, [X26+1451]
	015 Move X25, [X25+1528]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xD1D000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0xD1D000
	030 Move X0, [X0+1544]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1D000
	033 Move X0, [X0+1552]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1D000
	036 Move X0, [X0+1528]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1451], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xD1D000
	049 Move X27, 0xD1D000
	050 Move X26, 0xD1D000
	051 Move W8, [X0+224]
	052 Move X25, [X25+1536]
	053 Move X27, [X27+1544]
	054 Move X26, [X26+1552]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+48], X24
	070 Move [X31+56], X23
	071 Move [X31+32], X22
	072 Move [X31+40], X21
	073 Move [X31+64], X20
	074 Move [X31+72], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecordList> ListLeaderboardRecordsAroundOwnerAsync(System.String bearerToken, System.String leaderboardId, System.String ownerId, System.Nullable`1<System.Int32> limit, System.String expiry, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412BE8 CBNZ W8, 0x3412BF0
	0x03412BEC BL 0x1C16DFC
	0x03412BF0 LDR X0, [X26]
	0x03412BF4 ADD X8, X31, 0x0
	0x03412BF8 ORR X26, X8, 0xF
	0x03412BFC MOV X8, X26
	0x03412C00 BL 0x263221C
	0x03412C04 LDR X2, [X29]
	0x03412C08 MOVN W8, 0x0
	0x03412C0C ADD X1, X31, 0x0
	0x03412C10 MOV X0, X26
	0x03412C14 STP X25, X23, [X31 + 0x20]
	0x03412C18 STP X21, X20, [X31 + 0x30]
	0x03412C1C STP X19, X24, [X31 + 0x40]
	0x03412C20 STP X22, X27, [X31 + 0x50]
	0x03412C24 STR X28, [X31 + 0x60]
	0x03412C28 STR W8, [X31]
	0x03412C2C BL 0x1FC9E14
	0x03412C30 ADRP X8, 0xD1C000
	0x03412C34 LDR X8, [X8 + 0x748]
	0x03412C38 MOV X0, X26
	0x03412C3C LDR X1, [X8]
	0x03412C40 BL 0x2632230
	0x03412C44 LDP X20, X19, [X31 + 0xC0]
	0x03412C48 LDP X22, X21, [X31 + 0xB0]
	0x03412C4C LDP X24, X23, [X31 + 0xA0]
	0x03412C50 LDP X26, X25, [X31 + 0x90]
	0x03412C54 LDP X28, X27, [X31 + 0x80]
	0x03412C58 LDP X29, X30, [X31 + 0x70]
	0x03412C5C ADD X31, X31, 0xD0
	0x03412C60 RET
	0x03412C64 SUB X31, X31, 0xB0
	0x03412C68 STP X30, X27, [X31 + 0x60]
	0x03412C6C STP X26, X25, [X31 + 0x70]
	0x03412C70 STP X24, X23, [X31 + 0x80]
	0x03412C74 STP X22, X21, [X31 + 0x90]
	0x03412C78 STP X20, X19, [X31 + 0xA0]
	0x03412C7C ADRP X26, 0xFCB000
	0x03412C80 ADRP X25, 0xD1C000
	0x03412C84 LDRB W8, [X26 + 0x5BB]
	0x03412C88 LDR X25, [X25 + 0x5F8]
	0x03412C8C MOV X19, X5
	0x03412C90 MOV X20, X4
	0x03412C94 MOV X21, X3
	0x03412C98 MOV X22, X2
	0x03412C9C MOV X23, X1
	0x03412CA0 MOV X24, X0
	0x03412CA4 TBNZ X8, 0x0, 0x3412CE0
	0x03412CA8 ADRP X0, 0xD1C000
	0x03412CAC LDR X0, [X0 + 0x600]
	0x03412CB0 BL 0x1C16CF4
	0x03412CB4 ADRP X0, 0xD1C000
	0x03412CB8 LDR X0, [X0 + 0x750]
	0x03412CBC BL 0x1C16CF4
	0x03412CC0 ADRP X0, 0xD1C000
	0x03412CC4 LDR X0, [X0 + 0x610]
	0x03412CC8 BL 0x1C16CF4
	0x03412CCC ADRP X0, 0xD1C000
	0x03412CD0 LDR X0, [X0 + 0x5F8]
	0x03412CD4 BL 0x1C16CF4
	0x03412CD8 MOVZ W8, 0x1
	0x03412CDC STRB W8, [X26 + 0x5BB]
	0x03412CE0 LDR X0, [X25]
	0x03412CE4 MOVI V0.2D, 0x0
	0x03412CE8 STR X31, [X31 + 0x50]
	0x03412CEC STP V0, V0, [X31 + 0x30]
	0x03412CF0 STP V0, V0, [X31 + 0x10]
	0x03412CF4 STR V0, [X31]
	0x03412CF8 ADRP X25, 0xD1C000
	0x03412CFC ADRP X27, 0xD1C000
	0x03412D00 ADRP X26, 0xD1C000
	0x03412D04 LDR W8, [X0 + 0xE0]
	0x03412D08 LDR X25, [X25 + 0x600]
	0x03412D0C LDR X27, [X27 + 0x750]
	0x03412D10 LDR X26, [X26 + 0x610]
	0x03412D14 CBNZ W8, 0x3412D1C

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X27, 0xFCC000
	015 Move X26, 0xD1D000
	016 Move W8, [X27+1452]
	017 Move X26, [X26+1496]
	018 Move X19, X6
	019 Move X20, X5
	020 Move X21, X4
	021 Move X23, X3
	022 Move X25, X2
	023 Move X22, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD1D000
	030 Move X0, [X0+1504]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1D000
	033 Move X0, [X0+1560]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1D000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xD1D000
	039 Move X0, [X0+1496]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+1452], W8
	043 Move X0, [X26]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], V0
	052 Move X26, 0xD1D000
	053 Move X29, 0xD1D000
	054 Move W8, [X0+224]
	055 Move X27, [X31+208]
	056 Move X28, [X31+216]
	057 Move X26, [X26+1504]
	058 Move X29, [X29+1560]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X26]
	063 Add X8, X31, 0
	064 Or X26, X8, 15
	065 Move X8, X26
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X26
	073 Move [X31+32], X25
	074 Move [X31+40], X23
	075 Move [X31+48], X21
	076 Move [X31+56], X20
	077 Move [X31+64], X19
	078 Move [X31+72], X24
	079 Move [X31+80], X22
	080 Move [X31+88], X27
	081 Move [X31+96], X28
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X8, 0xD1D000
	085 Move X8, [X8+1520]
	086 Move X0, X26
	087 Move X1, [X8]
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiMatchList> ListMatchesAsync(System.String bearerToken, System.Nullable`1<System.Int32> limit, System.Nullable`1<System.Boolean> authoritative, System.String label, System.Nullable`1<System.Int32> minSize, System.Nullable`1<System.Int32> maxSize, System.String query, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412D18 BL 0x1C16DFC
	0x03412D1C LDR X0, [X25]
	0x03412D20 ADD X8, X31, 0x0
	0x03412D24 ORR X25, X8, 0xF
	0x03412D28 MOV X8, X25
	0x03412D2C BL 0x263221C
	0x03412D30 LDR X2, [X27]
	0x03412D34 MOVN W8, 0x0
	0x03412D38 ADD X1, X31, 0x0
	0x03412D3C MOV X0, X25
	0x03412D40 STP X24, X23, [X31 + 0x30]
	0x03412D44 STP X22, X21, [X31 + 0x20]
	0x03412D48 STP X20, X19, [X31 + 0x40]
	0x03412D4C STR W8, [X31]
	0x03412D50 BL 0x1FCAD14
	0x03412D54 LDR X1, [X26]
	0x03412D58 MOV X0, X25
	0x03412D5C BL 0x2632230
	0x03412D60 LDP X20, X19, [X31 + 0xA0]
	0x03412D64 LDP X22, X21, [X31 + 0x90]
	0x03412D68 LDP X24, X23, [X31 + 0x80]
	0x03412D6C LDP X26, X25, [X31 + 0x70]
	0x03412D70 LDP X30, X27, [X31 + 0x60]
	0x03412D74 ADD X31, X31, 0xB0
	0x03412D78 RET
	0x03412D7C SUB X31, X31, 0xB0
	0x03412D80 STP X30, X27, [X31 + 0x60]
	0x03412D84 STP X26, X25, [X31 + 0x70]
	0x03412D88 STP X24, X23, [X31 + 0x80]
	0x03412D8C STP X22, X21, [X31 + 0x90]
	0x03412D90 STP X20, X19, [X31 + 0xA0]
	0x03412D94 ADRP X26, 0xFCB000
	0x03412D98 ADRP X25, 0xD1C000
	0x03412D9C LDRB W8, [X26 + 0x5BC]
	0x03412DA0 LDR X25, [X25 + 0x5F8]
	0x03412DA4 MOV X19, X5
	0x03412DA8 MOV X20, X4
	0x03412DAC MOV X21, X3
	0x03412DB0 MOV X22, X2
	0x03412DB4 MOV X23, X1
	0x03412DB8 MOV X24, X0
	0x03412DBC TBNZ X8, 0x0, 0x3412DF8
	0x03412DC0 ADRP X0, 0xD1C000
	0x03412DC4 LDR X0, [X0 + 0x600]
	0x03412DC8 BL 0x1C16CF4
	0x03412DCC ADRP X0, 0xD1C000
	0x03412DD0 LDR X0, [X0 + 0x758]
	0x03412DD4 BL 0x1C16CF4
	0x03412DD8 ADRP X0, 0xD1C000
	0x03412DDC LDR X0, [X0 + 0x610]
	0x03412DE0 BL 0x1C16CF4
	0x03412DE4 ADRP X0, 0xD1C000
	0x03412DE8 LDR X0, [X0 + 0x5F8]
	0x03412DEC BL 0x1C16CF4
	0x03412DF0 MOVZ W8, 0x1
	0x03412DF4 STRB W8, [X26 + 0x5BC]
	0x03412DF8 LDR X0, [X25]
	0x03412DFC MOVI V0.2D, 0x0
	0x03412E00 STR X31, [X31 + 0x50]
	0x03412E04 STP V0, V0, [X31 + 0x30]
	0x03412E08 STP V0, V0, [X31 + 0x10]
	0x03412E0C STR V0, [X31]
	0x03412E10 ADRP X25, 0xD1C000
	0x03412E14 ADRP X27, 0xD1C000
	0x03412E18 ADRP X26, 0xD1C000
	0x03412E1C LDR W8, [X0 + 0xE0]
	0x03412E20 LDR X25, [X25 + 0x600]
	0x03412E24 LDR X27, [X27 + 0x758]
	0x03412E28 LDR X26, [X26 + 0x610]
	0x03412E2C CBNZ W8, 0x3412E34
	0x03412E30 BL 0x1C16DFC
	0x03412E34 LDR X0, [X25]
	0x03412E38 ADD X8, X31, 0x0
	0x03412E3C ORR X25, X8, 0xF
	0x03412E40 MOV X8, X25
	0x03412E44 BL 0x263221C
	0x03412E48 LDR X2, [X27]
	0x03412E4C MOVN W8, 0x0
	0x03412E50 ADD X1, X31, 0x0
	0x03412E54 MOV X0, X25

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move [X31+8], X7
	015 Move X28, 0xFCC000
	016 Move X27, 0xD1D000
	017 Move W8, [X28+1453]
	018 Move X27, [X27+1568]
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD1D000
	031 Move X0, [X0+1576]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1D000
	034 Move X0, [X0+1584]
	035 Call 0x1C17CF4
	036 Move X0, 0xD1D000
	037 Move X0, [X0+1592]
	038 Call 0x1C17CF4
	039 Move X0, 0xD1D000
	040 Move X0, [X0+1568]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1453], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+128], X31
	047 Move [X31+96], V0
	048 Move [X31+104], V0
	049 Move [X31+64], V0
	050 Move [X31+72], V0
	051 Move [X31+32], V0
	052 Move [X31+40], V0
	053 Move [X31+1], V0
	054 Move X27, 0xD1D000
	055 Move X19, 0xD1D000
	056 Move W8, [X0+224]
	057 Move X28, [X31+240]
	058 Move X29, [X31+248]
	059 Move X27, [X27+1576]
	060 Move X19, [X19+1584]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X27]
	065 Add X8, X31, 16
	066 Or X27, X8, 15
	067 Move X8, X27
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X8, [X31+8]
	070 Move X2, [X19]
	071 Add X1, X31, 16
	072 Move X0, X27
	073 Move [X31+80], X20
	074 Move [X31+88], X8
	075 Move TEMP, 0
	076 Not TEMP
	077 Move W8, TEMP
	078 Move [X31+96], X26
	079 Move [X31+104], X25
	080 Move [X31+48], X24
	081 NotImplemented "Instruction STRH not yet implemented."
	082 Move [X31+64], X22
	083 Move [X31+72], X21
	084 Move [X31+112], X28
	085 Move [X31+120], X29
	086 Move [X31+16], W8
	087 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	088 Move X8, 0xD1D000
	089 Move X8, [X8+1592]
	090 Move X0, X27
	091 Move X1, [X8]
	092 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	093 Move X20, [X31+224]
	094 Move X19, [X31+232]
	095 Move X22, [X31+208]
	096 Move X21, [X31+216]
	097 Move X24, [X31+192]
	098 Move X23, [X31+200]
	099 Move X26, [X31+176]
	100 Move X25, [X31+184]
	101 Move X28, [X31+160]
	102 Move X27, [X31+168]
	103 Move X29, [X31+144]
	104 Move X30, [X31+152]
	105 Add X31, X31, 240
	106 Return X0

Method: System.Threading.Tasks.Task DeleteNotificationsAsync(System.String bearerToken, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412E58 STP X24, X23, [X31 + 0x30]
	0x03412E5C STP X22, X21, [X31 + 0x20]
	0x03412E60 STP X20, X19, [X31 + 0x40]
	0x03412E64 STR W8, [X31]
	0x03412E68 BL 0x1FCAE14
	0x03412E6C LDR X1, [X26]
	0x03412E70 MOV X0, X25
	0x03412E74 BL 0x2632230
	0x03412E78 LDP X20, X19, [X31 + 0xA0]
	0x03412E7C LDP X22, X21, [X31 + 0x90]
	0x03412E80 LDP X24, X23, [X31 + 0x80]
	0x03412E84 LDP X26, X25, [X31 + 0x70]
	0x03412E88 LDP X30, X27, [X31 + 0x60]
	0x03412E8C ADD X31, X31, 0xB0
	0x03412E90 RET
	0x03412E94 SUB X31, X31, 0xB0
	0x03412E98 STP X30, X25, [X31 + 0x70]
	0x03412E9C STP X24, X23, [X31 + 0x80]
	0x03412EA0 STP X22, X21, [X31 + 0x90]
	0x03412EA4 STP X20, X19, [X31 + 0xA0]
	0x03412EA8 ADRP X25, 0xFCB000
	0x03412EAC ADRP X24, 0xCE4000
	0x03412EB0 LDRB W8, [X25 + 0x5BD]
	0x03412EB4 LDR X24, [X24 + 0x280]
	0x03412EB8 MOV X20, X4
	0x03412EBC MOV X21, X3
	0x03412EC0 MOV X19, X2
	0x03412EC4 MOV X22, X1
	0x03412EC8 MOV X23, X0
	0x03412ECC TBNZ X8, 0x0, 0x3412EF0
	0x03412ED0 ADRP X0, 0xD1C000
	0x03412ED4 LDR X0, [X0 + 0x760]
	0x03412ED8 BL 0x1C16CF4
	0x03412EDC ADRP X0, 0xCE4000
	0x03412EE0 LDR X0, [X0 + 0x280]
	0x03412EE4 BL 0x1C16CF4
	0x03412EE8 MOVZ W8, 0x1
	0x03412EEC STRB W8, [X25 + 0x5BD]
	0x03412EF0 LDR X0, [X24]
	0x03412EF4 MOVI V0.2D, 0x0
	0x03412EF8 STP V0, V0, [X31 + 0x50]
	0x03412EFC STP V0, V0, [X31 + 0x30]
	0x03412F00 STR V0, [X31 + 0x2]
	0x03412F04 ADRP X24, 0xD1C000
	0x03412F08 LDR W8, [X0 + 0xE0]
	0x03412F0C LDR X24, [X24 + 0x760]
	0x03412F10 CBNZ W8, 0x3412F18
	0x03412F14 BL 0x1C16DFC
	0x03412F18 ADD X8, X31, 0x8
	0x03412F1C MOV X0, X31
	0x03412F20 BL 0x32C4770
	0x03412F24 LDUR V0, [X31 + 0x8]
	0x03412F28 LDR X9, [X31 + 0x18]
	0x03412F2C LDR X2, [X24]
	0x03412F30 ADD X8, X31, 0x20
	0x03412F34 STP X21, X20, [X31 + 0x58]
	0x03412F38 ORR X20, X8, 0xF
	0x03412F3C MOVN W10, 0x0
	0x03412F40 ADD X1, X31, 0x20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCC000
	011 Move X24, 0xCE5000
	012 Move W8, [X25+1454]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1D000
	024 Move X0, [X0+1600]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1454], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1D000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1600]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiNotificationList> ListNotificationsAsync(System.String bearerToken, System.Nullable`1<System.Int32> limit, System.String cacheableCursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03412F44 MOV X0, X20
	0x03412F48 STP X23, X22, [X31 + 0x48]
	0x03412F4C STUR V0, [X31 + 0x28]
	0x03412F50 STP X9, X19, [X31 + 0x38]
	0x03412F54 STR W10, [X31 + 0x20]
	0x03412F58 BL 0x218DCB8
	0x03412F5C MOV X0, X20
	0x03412F60 MOV X1, X31
	0x03412F64 BL 0x32C47F8
	0x03412F68 LDP X20, X19, [X31 + 0xA0]
	0x03412F6C LDP X22, X21, [X31 + 0x90]
	0x03412F70 LDP X24, X23, [X31 + 0x80]
	0x03412F74 LDP X30, X25, [X31 + 0x70]
	0x03412F78 ADD X31, X31, 0xB0
	0x03412F7C RET
	0x03412F80 SUB X31, X31, 0xD0
	0x03412F84 STP X29, X30, [X31 + 0x70]
	0x03412F88 STP X28, X27, [X31 + 0x80]
	0x03412F8C STP X26, X25, [X31 + 0x90]
	0x03412F90 STP X24, X23, [X31 + 0xA0]
	0x03412F94 STP X22, X21, [X31 + 0xB0]
	0x03412F98 STP X20, X19, [X31 + 0xC0]
	0x03412F9C ADRP X27, 0xFCB000
	0x03412FA0 ADRP X26, 0xD1C000
	0x03412FA4 LDRB W8, [X27 + 0x5BE]
	0x03412FA8 LDR X26, [X26 + 0x730]
	0x03412FAC MOV X19, X6
	0x03412FB0 MOV X20, X5
	0x03412FB4 MOV X21, X4
	0x03412FB8 MOV X23, X3
	0x03412FBC MOV X25, X2
	0x03412FC0 MOV X22, X1
	0x03412FC4 MOV X24, X0
	0x03412FC8 TBNZ X8, 0x0, 0x3413004
	0x03412FCC ADRP X0, 0xD1C000
	0x03412FD0 LDR X0, [X0 + 0x738]
	0x03412FD4 BL 0x1C16CF4
	0x03412FD8 ADRP X0, 0xD1C000
	0x03412FDC LDR X0, [X0 + 0x768]
	0x03412FE0 BL 0x1C16CF4
	0x03412FE4 ADRP X0, 0xD1C000
	0x03412FE8 LDR X0, [X0 + 0x748]
	0x03412FEC BL 0x1C16CF4
	0x03412FF0 ADRP X0, 0xD1C000
	0x03412FF4 LDR X0, [X0 + 0x730]
	0x03412FF8 BL 0x1C16CF4
	0x03412FFC MOVZ W8, 0x1
	0x03413000 STRB W8, [X27 + 0x5BE]
	0x03413004 LDR X0, [X26]
	0x03413008 MOVI V0.2D, 0x0
	0x0341300C STP V0, V0, [X31 + 0x50]
	0x03413010 STP V0, V0, [X31 + 0x30]
	0x03413014 STP V0, V0, [X31 + 0x10]
	0x03413018 STR V0, [X31]
	0x0341301C ADRP X26, 0xD1B000
	0x03413020 ADRP X29, 0xD1B000
	0x03413024 LDR W8, [X0 + 0xE0]
	0x03413028 LDP X27, X28, [X31 + 0xD0]
	0x0341302C LDR X26, [X26 + 0x738]
	0x03413030 LDR X29, [X29 + 0x768]
	0x03413034 CBNZ W8, 0x341303C
	0x03413038 BL 0x1C16DFC
	0x0341303C LDR X0, [X26]
	0x03413040 ADD X8, X31, 0x0
	0x03413044 ORR X26, X8, 0xF
	0x03413048 MOV X8, X26
	0x0341304C BL 0x263221C
	0x03413050 LDR X2, [X29]
	0x03413054 MOVN W8, 0x0
	0x03413058 ADD X1, X31, 0x0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xFCC000
	013 Move X25, 0xD1D000
	014 Move W8, [X26+1455]
	015 Move X25, [X25+1608]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xD1D000
	027 Move X0, [X0+1616]
	028 Call 0x1C17CF4
	029 Move X0, 0xD1D000
	030 Move X0, [X0+1624]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1D000
	033 Move X0, [X0+1632]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1D000
	036 Move X0, [X0+1608]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1455], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xD1D000
	049 Move X27, 0xD1D000
	050 Move X26, 0xD1D000
	051 Move W8, [X0+224]
	052 Move X25, [X25+1616]
	053 Move X27, [X27+1624]
	054 Move X26, [X26+1632]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+48], X24
	070 Move [X31+56], X23
	071 Move [X31+32], X22
	072 Move [X31+40], X21
	073 Move [X31+64], X20
	074 Move [X31+72], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcFunc2Async(System.String bearerToken, System.String basicAuthUsername, System.String basicAuthPassword, System.String id, System.String payload, System.String httpKey, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0341305C MOV X0, X26
	0x03413060 STP X25, X23, [X31 + 0x20]
	0x03413064 STP X21, X20, [X31 + 0x30]
	0x03413068 STP X19, X24, [X31 + 0x40]
	0x0341306C STP X22, X27, [X31 + 0x50]
	0x03413070 STR X28, [X31 + 0x60]
	0x03413074 STR W8, [X31]
	0x03413078 BL 0x1FC9D14
	0x0341307C ADRP X8, 0xD1B000
	0x03413080 LDR X8, [X8 + 0x748]
	0x03413084 MOV X0, X26
	0x03413088 LDR X1, [X8]
	0x0341308C BL 0x2632230
	0x03413090 LDP X20, X19, [X31 + 0xC0]
	0x03413094 LDP X22, X21, [X31 + 0xB0]
	0x03413098 LDP X24, X23, [X31 + 0xA0]
	0x0341309C LDP X26, X25, [X31 + 0x90]
	0x034130A0 LDP X28, X27, [X31 + 0x80]
	0x034130A4 LDP X29, X30, [X31 + 0x70]
	0x034130A8 ADD X31, X31, 0xD0
	0x034130AC RET
	0x034130B0 SUB X31, X31, 0xC0
	0x034130B4 STR X30, [X31 + 0x60]
	0x034130B8 STP X28, X27, [X31 + 0x70]
	0x034130BC STP X26, X25, [X31 + 0x80]
	0x034130C0 STP X24, X23, [X31 + 0x90]
	0x034130C4 STP X22, X21, [X31 + 0xA0]
	0x034130C8 STP X20, X19, [X31 + 0xB0]
	0x034130CC ADRP X27, 0xFCA000
	0x034130D0 ADRP X26, 0xD1B000
	0x034130D4 LDRB W8, [X27 + 0x5BF]
	0x034130D8 LDR X26, [X26 + 0x770]
	0x034130DC MOV X19, X6
	0x034130E0 MOV X20, X5
	0x034130E4 MOV X21, X4
	0x034130E8 MOV X22, X3
	0x034130EC MOV X24, X2
	0x034130F0 MOV X23, X1
	0x034130F4 MOV X25, X0
	0x034130F8 TBNZ X8, 0x0, 0x3413134
	0x034130FC ADRP X0, 0xD1B000
	0x03413100 LDR X0, [X0 + 0x778]
	0x03413104 BL 0x1C16CF4
	0x03413108 ADRP X0, 0xD1B000
	0x0341310C LDR X0, [X0 + 0x780]
	0x03413110 BL 0x1C16CF4
	0x03413114 ADRP X0, 0xD1B000
	0x03413118 LDR X0, [X0 + 0x788]
	0x0341311C BL 0x1C16CF4
	0x03413120 ADRP X0, 0xD1B000
	0x03413124 LDR X0, [X0 + 0x770]
	0x03413128 BL 0x1C16CF4
	0x0341312C MOVZ W8, 0x1
	0x03413130 STRB W8, [X27 + 0x5BF]
	0x03413134 LDR X0, [X26]
	0x03413138 MOVI V0.2D, 0x0
	0x0341313C STP V0, V0, [X31 + 0x40]
	0x03413140 STP V0, V0, [X31 + 0x20]
	0x03413144 STP V0, V0, [X31]
	0x03413148 ADRP X26, 0xD1B000
	0x0341314C ADRP X28, 0xD1B000
	0x03413150 ADRP X27, 0xD1B000
	0x03413154 LDR W8, [X0 + 0xE0]
	0x03413158 LDR X26, [X26 + 0x778]
	0x0341315C LDR X28, [X28 + 0x780]
	0x03413160 LDR X27, [X27 + 0x788]
	0x03413164 CBNZ W8, 0x341316C
	0x03413168 BL 0x1C16DFC
	0x0341316C LDR X0, [X26]
	0x03413170 ADD X8, X31, 0x0
	0x03413174 ORR X26, X8, 0xF
	0x03413178 MOV X8, X26
	0x0341317C BL 0x263221C
	0x03413180 LDR X2, [X28]
	0x03413184 MOVN W8, 0x0
	0x03413188 ADD X1, X31, 0x0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X27, 0xFCB000
	015 Move X26, 0xD1C000
	016 Move W8, [X27+1456]
	017 Move X26, [X26+1640]
	018 Move X19, X6
	019 Move X20, X5
	020 Move X22, X4
	021 Move X21, X3
	022 Move X24, X2
	023 Move X25, X1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD1C000
	030 Move X0, [X0+1648]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1C000
	033 Move X0, [X0+1656]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1C000
	036 Move X0, [X0+1664]
	037 Call 0x1C17CF4
	038 Move X0, 0xD1C000
	039 Move X0, [X0+1640]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+1456], W8
	043 Move X0, [X26]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], V0
	052 Move X26, 0xD1C000
	053 Move X29, 0xD1C000
	054 Move W8, [X0+224]
	055 Move X27, [X31+208]
	056 Move X28, [X31+216]
	057 Move X26, [X26+1648]
	058 Move X29, [X29+1656]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X26]
	063 Add X8, X31, 0
	064 Or X26, X8, 15
	065 Move X8, X26
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X26
	073 Move [X31+64], X25
	074 Move [X31+72], X24
	075 Move [X31+32], X22
	076 Move [X31+40], X20
	077 Move [X31+48], X19
	078 Move [X31+56], X23
	079 Move [X31+80], X21
	080 Move [X31+88], X27
	081 Move [X31+96], X28
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X8, 0xD1C000
	085 Move X8, [X8+1664]
	086 Move X0, X26
	087 Move X1, [X8]
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcFuncAsync(System.String bearerToken, System.String basicAuthUsername, System.String basicAuthPassword, System.String id, System.String payload, System.String httpKey, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0341318C MOV X0, X26
	0x03413190 STP X24, X22, [X31 + 0x20]
	0x03413194 STP X21, X25, [X31 + 0x30]
	0x03413198 STP X23, X20, [X31 + 0x40]
	0x0341319C STR X19, [X31 + 0x50]
	0x034131A0 STR W8, [X31]
	0x034131A4 BL 0x1FC9114
	0x034131A8 LDR X1, [X27]
	0x034131AC MOV X0, X26
	0x034131B0 BL 0x2632230
	0x034131B4 LDP X20, X19, [X31 + 0xB0]
	0x034131B8 LDP X22, X21, [X31 + 0xA0]
	0x034131BC LDP X24, X23, [X31 + 0x90]
	0x034131C0 LDP X26, X25, [X31 + 0x80]
	0x034131C4 LDP X28, X27, [X31 + 0x70]
	0x034131C8 LDR X30, [X31 + 0x60]
	0x034131CC ADD X31, X31, 0xC0
	0x034131D0 RET
	0x034131D4 SUB X31, X31, 0xD0
	0x034131D8 STP X29, X30, [X31 + 0x70]
	0x034131DC STP X28, X27, [X31 + 0x80]
	0x034131E0 STP X26, X25, [X31 + 0x90]
	0x034131E4 STP X24, X23, [X31 + 0xA0]
	0x034131E8 STP X22, X21, [X31 + 0xB0]
	0x034131EC STP X20, X19, [X31 + 0xC0]
	0x034131F0 ADRP X28, 0xFCA000
	0x034131F4 ADRP X27, 0xD1B000
	0x034131F8 LDRB W8, [X28 + 0x5C0]
	0x034131FC LDR X27, [X27 + 0x790]
	0x03413200 MOV X19, X7
	0x03413204 MOV X20, X6
	0x03413208 MOV X21, X5
	0x0341320C MOV X22, X4
	0x03413210 MOV X23, X3
	0x03413214 MOV X24, X2
	0x03413218 MOV X25, X1
	0x0341321C MOV X26, X0
	0x03413220 TBNZ X8, 0x0, 0x341325C
	0x03413224 ADRP X0, 0xD1B000
	0x03413228 LDR X0, [X0 + 0x798]
	0x0341322C BL 0x1C16CF4
	0x03413230 ADRP X0, 0xD1B000
	0x03413234 LDR X0, [X0 + 0x7A0]
	0x03413238 BL 0x1C16CF4
	0x0341323C ADRP X0, 0xD1B000
	0x03413240 LDR X0, [X0 + 0x7A8]
	0x03413244 BL 0x1C16CF4
	0x03413248 ADRP X0, 0xD1B000
	0x0341324C LDR X0, [X0 + 0x790]
	0x03413250 BL 0x1C16CF4
	0x03413254 MOVZ W8, 0x1
	0x03413258 STRB W8, [X28 + 0x5C0]
	0x0341325C LDR X0, [X27]
	0x03413260 MOVI V0.2D, 0x0
	0x03413264 STR X31, [X31 + 0x60]
	0x03413268 STP V0, V0, [X31 + 0x40]
	0x0341326C STP V0, V0, [X31 + 0x20]
	0x03413270 STP V0, V0, [X31]
	0x03413274 ADRP X27, 0xD1B000
	0x03413278 ADRP X29, 0xD1B000
	0x0341327C ADRP X28, 0xD1B000
	0x03413280 LDR W8, [X0 + 0xE0]
	0x03413284 LDR X27, [X27 + 0x798]
	0x03413288 LDR X29, [X29 + 0x7A0]
	0x0341328C LDR X28, [X28 + 0x7A8]
	0x03413290 CBNZ W8, 0x3413298
	0x03413294 BL 0x1C16DFC
	0x03413298 LDR X0, [X27]
	0x0341329C ADD X8, X31, 0x0
	0x034132A0 ORR X27, X8, 0xF
	0x034132A4 MOV X8, X27
	0x034132A8 BL 0x263221C
	0x034132AC LDR X2, [X29]
	0x034132B0 MOVN W8, 0x0
	0x034132B4 ADD X1, X31, 0x0
	0x034132B8 MOV X0, X27

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X27, 0xFCB000
	015 Move X26, 0xD1C000
	016 Move W8, [X27+1457]
	017 Move X26, [X26+1640]
	018 Move X19, X6
	019 Move X20, X5
	020 Move X22, X4
	021 Move X21, X3
	022 Move X24, X2
	023 Move X25, X1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD1C000
	030 Move X0, [X0+1648]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1C000
	033 Move X0, [X0+1672]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1C000
	036 Move X0, [X0+1664]
	037 Call 0x1C17CF4
	038 Move X0, 0xD1C000
	039 Move X0, [X0+1640]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+1457], W8
	043 Move X0, [X26]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], V0
	052 Move X26, 0xD1C000
	053 Move X29, 0xD1C000
	054 Move W8, [X0+224]
	055 Move X27, [X31+208]
	056 Move X28, [X31+216]
	057 Move X26, [X26+1648]
	058 Move X29, [X29+1672]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X26]
	063 Add X8, X31, 0
	064 Or X26, X8, 15
	065 Move X8, X26
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X26
	073 Move [X31+64], X25
	074 Move [X31+72], X24
	075 Move [X31+32], X22
	076 Move [X31+40], X20
	077 Move [X31+48], X19
	078 Move [X31+56], X23
	079 Move [X31+80], X21
	080 Move [X31+88], X27
	081 Move [X31+96], X28
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X8, 0xD1C000
	085 Move X8, [X8+1664]
	086 Move X0, X26
	087 Move X1, [X8]
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task SessionLogoutAsync(System.String bearerToken, Nakama.ApiSessionLogoutRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034132BC STP X26, X25, [X31 + 0x40]
	0x034132C0 STP X24, X23, [X31 + 0x20]
	0x034132C4 STP X22, X21, [X31 + 0x30]
	0x034132C8 STP X20, X19, [X31 + 0x50]
	0x034132CC STR W8, [X31]
	0x034132D0 BL 0x1FCA014
	0x034132D4 LDR X1, [X28]
	0x034132D8 MOV X0, X27
	0x034132DC BL 0x2632230
	0x034132E0 LDP X20, X19, [X31 + 0xC0]
	0x034132E4 LDP X22, X21, [X31 + 0xB0]
	0x034132E8 LDP X24, X23, [X31 + 0xA0]
	0x034132EC LDP X26, X25, [X31 + 0x90]
	0x034132F0 LDP X28, X27, [X31 + 0x80]
	0x034132F4 LDP X29, X30, [X31 + 0x70]
	0x034132F8 ADD X31, X31, 0xD0
	0x034132FC RET
	0x03413300 SUB X31, X31, 0x90
	0x03413304 STP X29, X30, [X31 + 0x30]
	0x03413308 STP X28, X27, [X31 + 0x40]
	0x0341330C STP X26, X25, [X31 + 0x50]
	0x03413310 STP X24, X23, [X31 + 0x60]
	0x03413314 STP X22, X21, [X31 + 0x70]
	0x03413318 STP X20, X19, [X31 + 0x80]
	0x0341331C ADRP X20, 0xFCA000
	0x03413320 LDRB W8, [X20 + 0x5C1]
	0x03413324 MOV X19, X0
	0x03413328 TBNZ X8, 0x0, 0x3413460
	0x0341332C ADRP X0, 0xD1B000
	0x03413330 LDR X0, [X0 + 0x7B0]
	0x03413334 BL 0x1C16CF4
	0x03413338 ADRP X0, 0xCE3000
	0x0341333C LDR X0, [X0 + 0x280]
	0x03413340 BL 0x1C16CF4
	0x03413344 ADRP X0, 0xCE9000
	0x03413348 LDR X0, [X0 + 0x8D8]
	0x0341334C BL 0x1C16CF4
	0x03413350 ADRP X0, 0xCE1000
	0x03413354 LDR X0, [X0 + 0x810]
	0x03413358 BL 0x1C16CF4
	0x0341335C ADRP X0, 0xCE1000
	0x03413360 LDR X0, [X0 + 0x6C0]
	0x03413364 BL 0x1C16CF4
	0x03413368 ADRP X0, 0xCE1000
	0x0341336C LDR X0, [X0 + 0x6D0]
	0x03413370 BL 0x1C16CF4
	0x03413374 ADRP X0, 0xCE0000
	0x03413378 LDR X0, [X0 + 0xE00]
	0x0341337C BL 0x1C16CF4
	0x03413380 ADRP X0, 0xCE0000
	0x03413384 LDR X0, [X0 + 0xF70]
	0x03413388 BL 0x1C16CF4
	0x0341338C ADRP X0, 0xCE0000
	0x03413390 LDR X0, [X0 + 0xF78]
	0x03413394 BL 0x1C16CF4
	0x03413398 ADRP X0, 0xCE0000
	0x0341339C LDR X0, [X0 + 0xE18]
	0x034133A0 BL 0x1C16CF4
	0x034133A4 ADRP X0, 0xD1B000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCB000
	011 Move X24, 0xCE4000
	012 Move W8, [X25+1458]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1C000
	024 Move X0, [X0+1680]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE4000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1458], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1C000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1680]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjects> ReadStorageObjectsAsync(System.String bearerToken, Nakama.ApiReadStorageObjectsRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034133A8 LDR X0, [X0 + 0x7B8]
	0x034133AC BL 0x1C16CF4
	0x034133B0 ADRP X0, 0xCE0000
	0x034133B4 LDR X0, [X0 + 0xAC8]
	0x034133B8 BL 0x1C16CF4
	0x034133BC ADRP X0, 0xCE3000
	0x034133C0 LDR X0, [X0 + 0x1E0]
	0x034133C4 BL 0x1C16CF4
	0x034133C8 ADRP X0, 0xCE3000
	0x034133CC LDR X0, [X0 + 0x1F0]
	0x034133D0 BL 0x1C16CF4
	0x034133D4 ADRP X0, 0xCE3000
	0x034133D8 LDR X0, [X0 + 0x1F8]
	0x034133DC BL 0x1C16CF4
	0x034133E0 ADRP X0, 0xCE9000
	0x034133E4 LDR X0, [X0 + 0x3A0]
	0x034133E8 BL 0x1C16CF4
	0x034133EC ADRP X0, 0xCE2000
	0x034133F0 LDR X0, [X0 + 0xA28]
	0x034133F4 BL 0x1C16CF4
	0x034133F8 ADRP X0, 0xD09000
	0x034133FC LDR X0, [X0 + 0x4D8]
	0x03413400 BL 0x1C16CF4
	0x03413404 ADRP X0, 0xD1B000
	0x03413408 LDR X0, [X0 + 0x7C0]
	0x0341340C BL 0x1C16CF4
	0x03413410 ADRP X0, 0xD1B000
	0x03413414 LDR X0, [X0 + 0x7C8]
	0x03413418 BL 0x1C16CF4
	0x0341341C ADRP X0, 0xCE9000
	0x03413420 LDR X0, [X0 + 0x720]
	0x03413424 BL 0x1C16CF4
	0x03413428 ADRP X0, 0xD1B000
	0x0341342C LDR X0, [X0 + 0x7D0]
	0x03413430 BL 0x1C16CF4
	0x03413434 ADRP X0, 0xD1B000
	0x03413438 LDR X0, [X0 + 0x7D8]
	0x0341343C BL 0x1C16CF4
	0x03413440 ADRP X0, 0xD1B000
	0x03413444 LDR X0, [X0 + 0x7E0]
	0x03413448 BL 0x1C16CF4
	0x0341344C ADRP X0, 0xCE0000
	0x03413450 LDR X0, [X0 + 0x988]
	0x03413454 BL 0x1C16CF4
	0x03413458 MOVZ W8, 0x1
	0x0341345C STRB W8, [X20 + 0x5C1]
	0x03413460 STR X31, [X31 + 0x28]
	0x03413464 ADRP X27, 0xCE3000
	0x03413468 LDR W26, [X19]
	0x0341346C LDR X27, [X27 + 0x280]
	0x03413470 CBZ W26, 0x34134FC
	0x03413474 ADRP X8, 0xD1B000
	0x03413478 ADRP X9, 0xCE0000
	0x0341347C LDR X8, [X8 + 0x7E0]
	0x03413480 LDR X9, [X9 + 0x988]
	0x03413484 LDR X20, [X19 + 0x30]
	0x03413488 LDR X21, [X19 + 0x20]
	0x0341348C LDR X22, [X8]
	0x03413490 LDR X24, [X9]
	0x03413494 CBNZ X21, 0x34134B4
	0x03413498 ADRP X8, 0xCE0000
	0x0341349C LDR X8, [X8 + 0xAC8]
	0x034134A0 LDR X0, [X8]
	0x034134A4 MOV W1, W31
	0x034134A8 BL 0x1C16D6C
	0x034134AC MOV X21, X0
	0x034134B0 CBZ X0, 0x3413BB0
	0x034134B4 ADRP X10, 0xCE0000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCB000
	012 Move X24, 0xD1C000
	013 Move W8, [X25+1459]
	014 Move X24, [X24+1688]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1C000
	025 Move X0, [X0+1696]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1C000
	028 Move X0, [X0+1704]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1C000
	031 Move X0, [X0+1712]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1C000
	034 Move X0, [X0+1688]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1459], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1C000
	046 Move X26, 0xD1C000
	047 Move X25, 0xD1C000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1696]
	050 Move X26, [X26+1704]
	051 Move X25, [X25+1712]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectAcks> WriteStorageObjectsAsync(System.String bearerToken, Nakama.ApiWriteStorageObjectsRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034134B8 LDR X8, [X21]
	0x034134BC LDR X10, [X10 + 0xF70]
	0x034134C0 LDRH W9, [X8 + 0x12E]
	0x034134C4 LDR X1, [X10]
	0x034134C8 CBZ X9, 0x34134EC
	0x034134CC LDR X10, [X8 + 0xB0]
	0x034134D0 ADD X10, X10, 0x8
	0x034134D4 LDUR X11, [X10 - 0x8]
	0x034134D8 CMP X11, X1
	0x034134DC B.EQ 0x3413514
	0x034134E0 SUBS X9, X9, 0x1
	0x034134E4 ADD X10, X10, 0x10
	0x034134E8 B.NE 0x34134D4
	0x034134EC MOV X0, X21
	0x034134F0 MOV W2, W31
	0x034134F4 BL 0x1C5C788
	0x034134F8 B 0x3413520
	0x034134FC LDR X8, [X19 + 0x50]
	0x03413500 MOVN W9, 0x0
	0x03413504 STR X8, [X31 + 0x28]
	0x03413508 STR X31, [X19 + 0x50]
	0x0341350C STR W9, [X19]
	0x03413510 B 0x3413AE0
	0x03413514 LDRSW X9, [X10]
	0x03413518 ADD X8, X8, X9, 0x4, LSL
	0x0341351C ADD X0, X8, 0x138
	0x03413520 LDP X8, X1, [X0]
	0x03413524 MOV X0, X21
	0x03413528 BLR X8
	0x0341352C STP X22, X20, [X31 + 0x18]
	0x03413530 ADRP X28, 0xCE0000
	0x03413534 ADRP X29, 0xCE0000
	0x03413538 ADRP X27, 0xCE2000
	0x0341353C ADRP X25, 0xD1B000
	0x03413540 ADRP X20, 0xCE9000
	0x03413544 LDR X28, [X28 + 0xE18]
	0x03413548 LDR X29, [X29 + 0xF78]
	0x0341354C LDR X27, [X27 + 0xA28]
	0x03413550 LDR X25, [X25 + 0x7C0]
	0x03413554 LDR X20, [X20 + 0x720]
	0x03413558 MOV X23, X0
	0x0341355C MOV X0, X24
	0x03413560 CBZ X23, 0x3413B74
	0x03413564 LDR X8, [X23]
	0x03413568 LDR X1, [X28]
	0x0341356C MOV X21, X0
	0x03413570 LDRH W9, [X8 + 0x12E]
	0x03413574 CBZ X9, 0x3413598
	0x03413578 LDR X10, [X8 + 0xB0]
	0x0341357C ADD X10, X10, 0x8
	0x03413580 LDUR X11, [X10 - 0x8]
	0x03413584 CMP X11, X1
	0x03413588 B.EQ 0x34135A8
	0x0341358C SUBS X9, X9, 0x1
	0x03413590 ADD X10, X10, 0x10
	0x03413594 B.NE 0x3413580
	0x03413598 MOV X0, X23
	0x0341359C MOV W2, W31
	0x034135A0 BL 0x1C5C788
	0x034135A4 B 0x34135B4
	0x034135A8 LDRSW X9, [X10]
	0x034135AC ADD X8, X8, X9, 0x4, LSL
	0x034135B0 ADD X0, X8, 0x138
	0x034135B4 LDP X8, X1, [X0]
	0x034135B8 MOV X0, X23
	0x034135BC BLR X8
	0x034135C0 TBZ X0, 0x0, 0x3413658
	0x034135C4 LDR X8, [X23]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xFCB000
	012 Move X24, 0xD1C000
	013 Move W8, [X25+1460]
	014 Move X24, [X24+1720]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xD1C000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move X0, 0xD1C000
	028 Move X0, [X0+1736]
	029 Call 0x1C17CF4
	030 Move X0, 0xD1C000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1C000
	034 Move X0, [X0+1720]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1460], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xD1C000
	046 Move X26, 0xD1C000
	047 Move X25, 0xD1C000
	048 Move W8, [X0+224]
	049 Move X24, [X24+1728]
	050 Move X26, [X26+1736]
	051 Move X25, [X25+1744]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X21
	067 Move [X31+40], X23
	068 Move [X31+48], X22
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task DeleteStorageObjectsAsync(System.String bearerToken, Nakama.ApiDeleteStorageObjectsRequest body, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034135C8 LDR X1, [X29]
	0x034135CC LDRH W9, [X8 + 0x12E]
	0x034135D0 CBZ X9, 0x34135F4
	0x034135D4 LDR X10, [X8 + 0xB0]
	0x034135D8 ADD X10, X10, 0x8
	0x034135DC LDUR X11, [X10 - 0x8]
	0x034135E0 CMP X11, X1
	0x034135E4 B.EQ 0x3413604
	0x034135E8 SUBS X9, X9, 0x1
	0x034135EC ADD X10, X10, 0x10
	0x034135F0 B.NE 0x34135DC
	0x034135F4 MOV X0, X23
	0x034135F8 MOV W2, W31
	0x034135FC BL 0x1C5C788
	0x03413600 B 0x3413610
	0x03413604 LDRSW X9, [X10]
	0x03413608 ADD X8, X8, X9, 0x4, LSL
	0x0341360C ADD X0, X8, 0x138
	0x03413610 LDP X8, X1, [X0]
	0x03413614 MOV X0, X23
	0x03413618 BLR X8
	0x0341361C MOV X22, X0
	0x03413620 LDR X0, [X27]
	0x03413624 LDR W8, [X0 + 0xE0]
	0x03413628 CBNZ W8, 0x3413630
	0x0341362C BL 0x1C16DFC
	0x03413630 MOV X0, X22
	0x03413634 MOV X1, X31
	0x03413638 BL 0x3624D20
	0x0341363C LDR X1, [X25]
	0x03413640 LDR X3, [X20]
	0x03413644 MOV X2, X0
	0x03413648 MOV X0, X21
	0x0341364C MOV X4, X31
	0x03413650 BL 0x32277C4
	0x03413654 B 0x3413560
	0x03413658 MOV X24, X31
	0x0341365C MOVZ W22, 0x6
	0x03413660 TBZ X26, 0x1F, 0x34136C8
	0x03413664 CBZ X23, 0x34136C8
	0x03413668 ADRP X10, 0xCE0000
	0x0341366C LDR X8, [X23]
	0x03413670 LDR X10, [X10 + 0xE00]
	0x03413674 LDRH W9, [X8 + 0x12E]
	0x03413678 LDR X1, [X10]
	0x0341367C CBZ X9, 0x34136A0
	0x03413680 LDR X10, [X8 + 0xB0]
	0x03413684 ADD X10, X10, 0x8
	0x03413688 LDUR X11, [X10 - 0x8]
	0x0341368C CMP X11, X1
	0x03413690 B.EQ 0x34136B0
	0x03413694 SUBS X9, X9, 0x1
	0x03413698 ADD X10, X10, 0x10
	0x0341369C B.NE 0x3413688
	0x034136A0 MOV X0, X23
	0x034136A4 MOV W2, W31
	0x034136A8 BL 0x1C5C788
	0x034136AC B 0x34136BC
	0x034136B0 LDRSW X9, [X10]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCB000
	011 Move X24, 0xCE4000
	012 Move W8, [X25+1461]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1C000
	024 Move X0, [X0+1752]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE4000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1461], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1C000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1752]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectList> ListStorageObjectsAsync(System.String bearerToken, System.String collection, System.String userId, System.Nullable`1<System.Int32> limit, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034136B4 ADD X8, X8, X9, 0x4, LSL
	0x034136B8 ADD X0, X8, 0x138
	0x034136BC LDP X8, X1, [X0]
	0x034136C0 MOV X0, X23
	0x034136C4 BLR X8
	0x034136C8 CBNZ X24, 0x3413B7C
	0x034136CC CMP W22, 0x6
	0x034136D0 B.EQ 0x34136D8
	0x034136D4 CBNZ W22, 0x3413B54
	0x034136D8 LDR X22, [X19 + 0x28]
	0x034136DC CBNZ X22, 0x34136FC
	0x034136E0 ADRP X8, 0xCE0000
	0x034136E4 LDR X8, [X8 + 0xAC8]
	0x034136E8 LDR X0, [X8]
	0x034136EC MOV W1, W31
	0x034136F0 BL 0x1C16D6C
	0x034136F4 MOV X22, X0
	0x034136F8 CBZ X0, 0x3413BB4
	0x034136FC LDR X8, [X22]
	0x03413700 ADRP X10, 0xCE0000
	0x03413704 LDRH W9, [X8 + 0x12E]
	0x03413708 LDR X10, [X10 + 0xF70]
	0x0341370C LDR X1, [X10]
	0x03413710 CBZ X9, 0x3413734
	0x03413714 LDR X10, [X8 + 0xB0]
	0x03413718 ADD X10, X10, 0x8
	0x0341371C LDUR X11, [X10 - 0x8]
	0x03413720 CMP X11, X1
	0x03413724 B.EQ 0x3413744
	0x03413728 SUBS X9, X9, 0x1
	0x0341372C ADD X10, X10, 0x10
	0x03413730 B.NE 0x341371C
	0x03413734 MOV X0, X22
	0x03413738 MOV W2, W31
	0x0341373C BL 0x1C5C788
	0x03413740 B 0x3413750
	0x03413744 LDRSW X9, [X10]
	0x03413748 ADD X8, X8, X9, 0x4, LSL
	0x0341374C ADD X0, X8, 0x138
	0x03413750 LDP X8, X1, [X0]
	0x03413754 MOV X0, X22
	0x03413758 BLR X8
	0x0341375C ADRP X25, 0xD1B000
	0x03413760 LDR X25, [X25 + 0x7C8]
	0x03413764 MOV X24, X0
	0x03413768 MOV X0, X21
	0x0341376C CBZ X24, 0x3413B78
	0x03413770 LDR X8, [X24]
	0x03413774 LDR X1, [X28]
	0x03413778 MOV X23, X0
	0x0341377C LDRH W9, [X8 + 0x12E]
	0x03413780 CBZ X9, 0x34137A4
	0x03413784 LDR X10, [X8 + 0xB0]
	0x03413788 ADD X10, X10, 0x8
	0x0341378C LDUR X11, [X10 - 0x8]
	0x03413790 CMP X11, X1
	0x03413794 B.EQ 0x34137B4
	0x03413798 SUBS X9, X9, 0x1
	0x0341379C ADD X10, X10, 0x10
	0x034137A0 B.NE 0x341378C
	0x034137A4 MOV X0, X24
	0x034137A8 MOV W2, W31
	0x034137AC BL 0x1C5C788
	0x034137B0 B 0x34137C0
	0x034137B4 LDRSW X9, [X10]
	0x034137B8 ADD X8, X8, X9, 0x4, LSL
	0x034137BC ADD X0, X8, 0x138
	0x034137C0 LDP X8, X1, [X0]
	0x034137C4 MOV X0, X24
	0x034137C8 BLR X8
	0x034137CC TBZ X0, 0x0, 0x3413864
	0x034137D0 LDR X8, [X24]
	0x034137D4 LDR X1, [X29]
	0x034137D8 LDRH W9, [X8 + 0x12E]
	0x034137DC CBZ X9, 0x3413800

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCB000
	015 Move X27, 0xD1C000
	016 Move W8, [X28+1462]
	017 Move X27, [X27+1760]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD1C000
	031 Move X0, [X0+1768]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1C000
	034 Move X0, [X0+1776]
	035 Call 0x1C17CF4
	036 Move X0, 0xD1C000
	037 Move X0, [X0+1784]
	038 Call 0x1C17CF4
	039 Move X0, 0xD1C000
	040 Move X0, [X0+1760]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1462], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD1C000
	054 Move X29, 0xD1C000
	055 Move X28, 0xD1C000
	056 Move W8, [X0+224]
	057 Move X27, [X27+1768]
	058 Move X29, [X29+1776]
	059 Move X28, [X28+1784]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X24
	077 Move [X31+40], X23
	078 Move [X31+48], X22
	079 Move [X31+56], X21
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectList> ListStorageObjects2Async(System.String bearerToken, System.String collection, System.String userId, System.Nullable`1<System.Int32> limit, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034137E0 LDR X10, [X8 + 0xB0]
	0x034137E4 ADD X10, X10, 0x8
	0x034137E8 LDUR X11, [X10 - 0x8]
	0x034137EC CMP X11, X1
	0x034137F0 B.EQ 0x3413810
	0x034137F4 SUBS X9, X9, 0x1
	0x034137F8 ADD X10, X10, 0x10
	0x034137FC B.NE 0x34137E8
	0x03413800 MOV X0, X24
	0x03413804 MOV W2, W31
	0x03413808 BL 0x1C5C788
	0x0341380C B 0x341381C
	0x03413810 LDRSW X9, [X10]
	0x03413814 ADD X8, X8, X9, 0x4, LSL
	0x03413818 ADD X0, X8, 0x138
	0x0341381C LDP X8, X1, [X0]
	0x03413820 MOV X0, X24
	0x03413824 BLR X8
	0x03413828 MOV X22, X0
	0x0341382C LDR X0, [X27]
	0x03413830 LDR W8, [X0 + 0xE0]
	0x03413834 CBNZ W8, 0x341383C
	0x03413838 BL 0x1C16DFC
	0x0341383C MOV X0, X22
	0x03413840 MOV X1, X31
	0x03413844 BL 0x3624D20
	0x03413848 LDR X1, [X25]
	0x0341384C LDR X3, [X20]
	0x03413850 MOV X2, X0
	0x03413854 MOV X0, X23
	0x03413858 MOV X4, X31
	0x0341385C BL 0x32277C4
	0x03413860 B 0x341376C
	0x03413864 MOV X21, X31
	0x03413868 MOVZ W20, 0xA
	0x0341386C TBZ X26, 0x1F, 0x34138D4
	0x03413870 CBZ X24, 0x34138D4
	0x03413874 ADRP X10, 0xCE0000
	0x03413878 LDR X8, [X24]
	0x0341387C LDR X10, [X10 + 0xE00]
	0x03413880 LDRH W9, [X8 + 0x12E]
	0x03413884 LDR X1, [X10]
	0x03413888 CBZ X9, 0x34138AC
	0x0341388C LDR X10, [X8 + 0xB0]
	0x03413890 ADD X10, X10, 0x8
	0x03413894 LDUR X11, [X10 - 0x8]
	0x03413898 CMP X11, X1
	0x0341389C B.EQ 0x34138BC
	0x034138A0 SUBS X9, X9, 0x1
	0x034138A4 ADD X10, X10, 0x10
	0x034138A8 B.NE 0x3413894
	0x034138AC MOV X0, X24
	0x034138B0 MOV W2, W31
	0x034138B4 BL 0x1C5C788
	0x034138B8 B 0x34138C8
	0x034138BC LDRSW X9, [X10]
	0x034138C0 ADD X8, X8, X9, 0x4, LSL
	0x034138C4 ADD X0, X8, 0x138
	0x034138C8 LDP X8, X1, [X0]
	0x034138CC MOV X0, X24
	0x034138D0 BLR X8
	0x034138D4 CBNZ X21, 0x3413B84
	0x034138D8 CMP W20, 0xA
	0x034138DC B.EQ 0x34138E4
	0x034138E0 CBNZ W20, 0x3413B54
	0x034138E4 LDR X25, [X31 + 0x20]
	0x034138E8 CBZ X25, 0x3413B8C
	0x034138EC ADRP X27, 0xCE3000
	0x034138F0 LDR X0, [X25 + 0x20]
	0x034138F4 LDR X27, [X27 + 0x280]
	0x034138F8 CBZ X0, 0x3413B90
	0x034138FC MOV X1, X31
	0x03413900 BL 0x361B448
	0x03413904 ADRP X8, 0xCE9000
	0x03413908 LDR X8, [X8 + 0x8D8]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCB000
	015 Move X27, 0xD1C000
	016 Move W8, [X28+1463]
	017 Move X27, [X27+1760]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD1C000
	031 Move X0, [X0+1768]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1C000
	034 Move X0, [X0+1792]
	035 Call 0x1C17CF4
	036 Move X0, 0xD1C000
	037 Move X0, [X0+1784]
	038 Call 0x1C17CF4
	039 Move X0, 0xD1C000
	040 Move X0, [X0+1760]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1463], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD1C000
	054 Move X29, 0xD1C000
	055 Move X28, 0xD1C000
	056 Move W8, [X0+224]
	057 Move X27, [X27+1768]
	058 Move X29, [X29+1792]
	059 Move X28, [X28+1784]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X24
	077 Move [X31+40], X23
	078 Move [X31+48], X22
	079 Move [X31+56], X21
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentList> ListTournamentsAsync(System.String bearerToken, System.Nullable`1<System.Int32> categoryStart, System.Nullable`1<System.Int32> categoryEnd, System.Nullable`1<System.Int32> startTime, System.Nullable`1<System.Int32> endTime, System.Nullable`1<System.Int32> limit, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x0341390C MOV X21, X0
	0x03413910 LDR X0, [X8]
	0x03413914 MOVZ W1, 0x1
	0x03413918 BL 0x1C16D6C
	0x0341391C MOV X1, X0
	0x03413920 CBZ X1, 0x3413B94
	0x03413924 LDR W8, [X1 + 0x18]
	0x03413928 CBZ W8, 0x3413B98
	0x0341392C MOVZ W8, 0x2F
	0x03413930 STRH W8, [X1 + 0x20]
	0x03413934 CBZ X21, 0x3413B9C
	0x03413938 MOV X0, X21
	0x0341393C MOV X2, X31
	0x03413940 BL 0x322BC58
	0x03413944 LDR X1, [X31 + 0x18]
	0x03413948 MOV X2, X31
	0x0341394C BL 0x321B938
	0x03413950 ADRP X8, 0xCE9000
	0x03413954 LDR X22, [X25 + 0x20]
	0x03413958 LDR X8, [X8 + 0x3A0]
	0x0341395C MOV X21, X0
	0x03413960 LDR X0, [X8]
	0x03413964 BL 0x1C16F10
	0x03413968 MOV X20, X0
	0x0341396C MOV X1, X22
	0x03413970 MOV X2, X31
	0x03413974 BL 0x36281F8
	0x03413978 CBZ X20, 0x3413BA0
	0x0341397C MOV X0, X20
	0x03413980 MOV X1, X21
	0x03413984 MOV X2, X31
	0x03413988 BL 0x36288CC
	0x0341398C MOV X0, X20
	0x03413990 MOV X1, X23
	0x03413994 MOV X2, X31
	0x03413998 BL 0x3628980
	0x0341399C MOV X0, X20
	0x034139A0 MOV X1, X31
	0x034139A4 BL 0x3628A38
	0x034139A8 ADRP X8, 0xD09000
	0x034139AC ADRP X9, 0xCE1000
	0x034139B0 LDR X8, [X8 + 0x4D8]
	0x034139B4 LDR X9, [X9 + 0x6D0]
	0x034139B8 MOV X20, X0
	0x034139BC LDR X21, [X8]
	0x034139C0 LDR X0, [X9]
	0x034139C4 BL 0x1C16F10
	0x034139C8 ADRP X8, 0xCE1000
	0x034139CC LDR X8, [X8 + 0x6C0]
	0x034139D0 MOV X22, X0
	0x034139D4 LDR X1, [X8]
	0x034139D8 BL 0x2AA4804
	0x034139DC ADRP X8, 0xD1B000
	0x034139E0 LDR X1, [X19 + 0x38]
	0x034139E4 LDR X8, [X8 + 0x7D8]
	0x034139E8 LDR X0, [X8]
	0x034139EC MOV X2, X31
	0x034139F0 BL 0x321B938
	0x034139F4 CBZ X22, 0x3413BA4
	0x034139F8 ADRP X8, 0xD1B000
	0x034139FC LDR X8, [X8 + 0x7D0]
	0x03413A00 ADRP X9, 0xCE1000
	0x03413A04 LDR X9, [X9 + 0x810]
	0x03413A08 MOV X2, X0
	0x03413A0C LDR X1, [X8]
	0x03413A10 LDR X3, [X9]
	0x03413A14 MOV X0, X22
	0x03413A18 BL 0x2AA5098
	0x03413A1C LDR X24, [X25 + 0x10]
	0x03413A20 CBZ X24, 0x3413BA8
	0x03413A24 ADRP X10, 0xD1B000
	0x03413A28 LDR W23, [X25 + 0x18]
	0x03413A2C LDR X8, [X24]
	0x03413A30 LDP X26, X25, [X19 + 0x40]
	0x03413A34 LDR X10, [X10 + 0x7B8]
	0x03413A38 LDRH W9, [X8 + 0x12E]
	0x03413A3C LDR X1, [X10]
	0x03413A40 CBZ X9, 0x3413A64
	0x03413A44 LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move [X31+8], X7
	015 Move X28, 0xFCB000
	016 Move X27, 0xD1C000
	017 Move W8, [X28+1464]
	018 Move X27, [X27+1800]
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD1C000
	031 Move X0, [X0+1808]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1C000
	034 Move X0, [X0+1816]
	035 Call 0x1C17CF4
	036 Move X0, 0xD1C000
	037 Move X0, [X0+1824]
	038 Call 0x1C17CF4
	039 Move X0, 0xD1C000
	040 Move X0, [X0+1800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1464], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+128], X31
	047 Move [X31+96], V0
	048 Move [X31+104], V0
	049 Move [X31+64], V0
	050 Move [X31+72], V0
	051 Move [X31+32], V0
	052 Move [X31+40], V0
	053 Move [X31+1], V0
	054 Move X27, 0xD1C000
	055 Move X19, 0xD1C000
	056 Move W8, [X0+224]
	057 Move X28, [X31+240]
	058 Move X29, [X31+248]
	059 Move X27, [X27+1808]
	060 Move X19, [X19+1816]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X27]
	065 Add X8, X31, 16
	066 Or X27, X8, 15
	067 Move X8, X27
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X8, [X31+8]
	070 Move X2, [X19]
	071 Add X1, X31, 16
	072 Move X0, X27
	073 Move [X31+80], X20
	074 Move [X31+88], X8
	075 Move TEMP, 0
	076 Not TEMP
	077 Move W8, TEMP
	078 Move [X31+96], X26
	079 Move [X31+104], X25
	080 Move [X31+48], X24
	081 Move [X31+56], X23
	082 Move [X31+64], X22
	083 Move [X31+72], X21
	084 Move [X31+112], X28
	085 Move [X31+120], X29
	086 Move [X31+16], W8
	087 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	088 Move X8, 0xD1C000
	089 Move X8, [X8+1824]
	090 Move X0, X27
	091 Move X1, [X8]
	092 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	093 Move X20, [X31+224]
	094 Move X19, [X31+232]
	095 Move X22, [X31+208]
	096 Move X21, [X31+216]
	097 Move X24, [X31+192]
	098 Move X23, [X31+200]
	099 Move X26, [X31+176]
	100 Move X25, [X31+184]
	101 Move X28, [X31+160]
	102 Move X27, [X31+168]
	103 Move X29, [X31+144]
	104 Move X30, [X31+152]
	105 Add X31, X31, 240
	106 Return X0

Method: System.Threading.Tasks.Task DeleteTournamentRecordAsync(System.String bearerToken, System.String tournamentId, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03413A48 ADD X10, X10, 0x8
	0x03413A4C LDUR X11, [X10 - 0x8]
	0x03413A50 CMP X11, X1
	0x03413A54 B.EQ 0x3413A74
	0x03413A58 SUBS X9, X9, 0x1
	0x03413A5C ADD X10, X10, 0x10
	0x03413A60 B.NE 0x3413A4C
	0x03413A64 MOVZ W2, 0x3
	0x03413A68 MOV X0, X24
	0x03413A6C BL 0x1C5C788
	0x03413A70 B 0x3413A84
	0x03413A74 LDR W9, [X10]
	0x03413A78 ADD W9, W9, 0x3
	0x03413A7C ADD X8, X8, W9, 0x4, SXTW
	0x03413A80 ADD X0, X8, 0x138
	0x03413A84 LDP X8, X9, [X0]
	0x03413A88 MOV X0, X24
	0x03413A8C MOV X1, X21
	0x03413A90 MOV X2, X20
	0x03413A94 MOV X3, X22
	0x03413A98 MOV X4, X31
	0x03413A9C MOV W5, W23
	0x03413AA0 MOV X6, X26
	0x03413AA4 MOV X7, X25
	0x03413AA8 STR X9, [X31]
	0x03413AAC BLR X8
	0x03413AB0 CBZ X0, 0x3413BAC
	0x03413AB4 ADRP X8, 0xCE3000
	0x03413AB8 LDR X8, [X8 + 0x1F8]
	0x03413ABC LDR X1, [X8]
	0x03413AC0 BL 0x269F5D0
	0x03413AC4 ADRP X8, 0xCE3000
	0x03413AC8 LDR X8, [X8 + 0x1F0]
	0x03413ACC STR X0, [X31 + 0x28]
	0x03413AD0 LDR X1, [X8]
	0x03413AD4 ADD X0, X31, 0x28
	0x03413AD8 BL 0x2677430
	0x03413ADC TBZ X0, 0x0, 0x3413B1C
	0x03413AE0 ADRP X8, 0xCE3000
	0x03413AE4 LDR X8, [X8 + 0x1E0]
	0x03413AE8 ADD X0, X31, 0x28
	0x03413AEC LDR X1, [X8]
	0x03413AF0 BL 0x2677474
	0x03413AF4 MOVN W8, 0x1
	0x03413AF8 STR W8, [X19], #0x8
	0x03413AFC LDR X0, [X27]
	0x03413B00 LDR W8, [X0 + 0xE0]
	0x03413B04 CBNZ W8, 0x3413B0C
	0x03413B08 BL 0x1C16DFC
	0x03413B0C MOV X0, X19
	0x03413B10 MOV X1, X31
	0x03413B14 BL 0x32C4864
	0x03413B18 B 0x3413B54
	0x03413B1C STR W31, [X19]
	0x03413B20 LDR X8, [X31 + 0x28]
	0x03413B24 STR X8, [X19 + 0x50]
	0x03413B28 LDR X0, [X27]
	0x03413B2C LDR W8, [X0 + 0xE0]
	0x03413B30 CBNZ W8, 0x3413B38

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCB000
	011 Move X24, 0xCE4000
	012 Move W8, [X25+1465]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1C000
	024 Move X0, [X0+1832]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE4000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1465], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1C000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1832]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentRecordList> ListTournamentRecordsAsync(System.String bearerToken, System.String tournamentId, System.Collections.Generic.IEnumerable`1<System.String> ownerIds, System.Nullable`1<System.Int32> limit, System.String cursor, System.String expiry, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03413B34 BL 0x1C16DFC
	0x03413B38 ADRP X8, 0xD1B000
	0x03413B3C LDR X8, [X8 + 0x7B0]
	0x03413B40 ADD X0, X19, 0x8
	0x03413B44 LDR X3, [X8]
	0x03413B48 ADD X1, X31, 0x28
	0x03413B4C MOV X2, X19
	0x03413B50 BL 0x2185DA0
	0x03413B54 LDP X20, X19, [X31 + 0x80]
	0x03413B58 LDP X22, X21, [X31 + 0x70]
	0x03413B5C LDP X24, X23, [X31 + 0x60]
	0x03413B60 LDP X26, X25, [X31 + 0x50]
	0x03413B64 LDP X28, X27, [X31 + 0x40]
	0x03413B68 LDP X29, X30, [X31 + 0x30]
	0x03413B6C ADD X31, X31, 0x90
	0x03413B70 RET
	0x03413B74 BL 0x1C16F20
	0x03413B78 BL 0x1C16F20
	0x03413B7C MOV X0, X24
	0x03413B80 BL 0x1C16F18
	0x03413B84 MOV X0, X21
	0x03413B88 BL 0x1C16F18
	0x03413B8C BL 0x1C16F20
	0x03413B90 BL 0x1C16F20
	0x03413B94 BL 0x1C16F20
	0x03413B98 BL 0x1C16F28
	0x03413B9C BL 0x1C16F20
	0x03413BA0 BL 0x1C16F20
	0x03413BA4 BL 0x1C16F20
	0x03413BA8 BL 0x1C16F20
	0x03413BAC BL 0x1C16F20
	0x03413BB0 BL 0x1C16F20
	0x03413BB4 BL 0x1C16F20
	0x03413BB8 B 0x3413C20
	0x03413BBC B 0x3413C20
	0x03413BC0 B 0x3413C20
	0x03413BC4 B 0x3413C20
	0x03413BC8 B 0x3413C20
	0x03413BCC B 0x3413C20
	0x03413BD0 B 0x3413C20
	0x03413BD4 B 0x3413C20
	0x03413BD8 B 0x3413C20
	0x03413BDC B 0x3413C20
	0x03413BE0 B 0x3413C20
	0x03413BE4 B 0x3413C20
	0x03413BE8 B 0x3413C20
	0x03413BEC B 0x3413C20
	0x03413BF0 B 0x3413C20
	0x03413BF4 B 0x3413C20
	0x03413BF8 B 0x3413C20
	0x03413BFC B 0x3413C20
	0x03413C00 B 0x3413C20
	0x03413C04 B 0x3413C20
	0x03413C08 B 0x3413C20
	0x03413C0C B 0x3413C20
	0x03413C10 B 0x3413C20
	0x03413C14 B 0x3413C20
	0x03413C18 B 0x3413C20
	0x03413C1C B 0x3413C20
	0x03413C20 MOV X22, X0
	0x03413C24 STR X1, [X31 + 0x10]
	0x03413C28 B 0x3413DB4
	0x03413C2C B 0x3413C60
	0x03413C30 B 0x3413D18
	0x03413C34 B 0x3413C60
	0x03413C38 B 0x3413C60
	0x03413C3C MOV X22, X0
	0x03413C40 MOV X23, X21
	0x03413C44 B 0x3413C64
	0x03413C48 B 0x3413D18
	0x03413C4C B 0x3413D18
	0x03413C50 MOV X22, X0
	0x03413C54 MOV X21, X24
	0x03413C58 B 0x3413D1C
	0x03413C5C B 0x3413C60
	0x03413C60 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X27, 0xFCB000
	015 Move X26, 0xD1C000
	016 Move W8, [X27+1466]
	017 Move X26, [X26+1840]
	018 Move X19, X6
	019 Move X20, X5
	020 Move X21, X4
	021 Move X23, X3
	022 Move X25, X2
	023 Move X22, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD1C000
	030 Move X0, [X0+1848]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1C000
	033 Move X0, [X0+1856]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1C000
	036 Move X0, [X0+1864]
	037 Call 0x1C17CF4
	038 Move X0, 0xD1C000
	039 Move X0, [X0+1840]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+1466], W8
	043 Move X0, [X26]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], V0
	052 Move X26, 0xD1C000
	053 Move X29, 0xD1C000
	054 Move W8, [X0+224]
	055 Move X27, [X31+208]
	056 Move X28, [X31+216]
	057 Move X26, [X26+1848]
	058 Move X29, [X29+1856]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X26]
	063 Add X8, X31, 0
	064 Or X26, X8, 15
	065 Move X8, X26
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X26
	073 Move [X31+32], X25
	074 Move [X31+40], X23
	075 Move [X31+48], X21
	076 Move [X31+56], X20
	077 Move [X31+64], X19
	078 Move [X31+72], X24
	079 Move [X31+80], X22
	080 Move [X31+88], X27
	081 Move [X31+96], X28
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X8, 0xD1C000
	085 Move X8, [X8+1864]
	086 Move X0, X26
	087 Move X1, [X8]
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecord> WriteTournamentRecord2Async(System.String bearerToken, System.String tournamentId, Nakama.WriteTournamentRecordRequestTournamentRecordWrite record, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03413C64 CMP W1, 0x1
	0x03413C68 STR X1, [X31 + 0x10]
	0x03413C6C B.NE 0x3413C8C
	0x03413C70 MOV X0, X22
	0x03413C74 BL 0x3EB1AD0
	0x03413C78 LDR X21, [X0]
	0x03413C7C BL 0x3EB1AE0
	0x03413C80 MOV W20, W31
	0x03413C84 TBNZ X26, 0x1F, 0x3413870
	0x03413C88 B 0x34138D4
	0x03413C8C MOV X21, X31
	0x03413C90 TBZ X26, 0x1F, 0x3413CF8
	0x03413C94 CBZ X24, 0x3413CF8
	0x03413C98 ADRP X10, 0xCE0000
	0x03413C9C LDR X8, [X24]
	0x03413CA0 LDR X10, [X10 + 0xE00]
	0x03413CA4 LDRH W9, [X8 + 0x12E]
	0x03413CA8 LDR X1, [X10]
	0x03413CAC CBZ X9, 0x3413CD0
	0x03413CB0 LDR X10, [X8 + 0xB0]
	0x03413CB4 ADD X10, X10, 0x8
	0x03413CB8 LDUR X11, [X10 - 0x8]
	0x03413CBC CMP X11, X1
	0x03413CC0 B.EQ 0x3413CE0
	0x03413CC4 SUBS X9, X9, 0x1
	0x03413CC8 ADD X10, X10, 0x10
	0x03413CCC B.NE 0x3413CB8
	0x03413CD0 MOV X0, X24
	0x03413CD4 MOV W2, W31
	0x03413CD8 BL 0x1C5C788
	0x03413CDC B 0x3413CEC
	0x03413CE0 LDRSW X9, [X10]
	0x03413CE4 ADD X8, X8, X9, 0x4, LSL
	0x03413CE8 ADD X0, X8, 0x138
	0x03413CEC LDP X8, X1, [X0]
	0x03413CF0 MOV X0, X24
	0x03413CF4 BLR X8
	0x03413CF8 CBZ X21, 0x3413DB4
	0x03413CFC MOV X0, X21
	0x03413D00 BL 0x1C16F18
	0x03413D04 MOV X22, X0
	0x03413D08 STR X1, [X31 + 0x10]
	0x03413D0C TBNZ X26, 0x1F, 0x3413C94
	0x03413D10 B 0x3413CF8
	0x03413D14 B 0x3413D18
	0x03413D18 MOV X22, X0
	0x03413D1C CMP W1, 0x1
	0x03413D20 B.NE 0x3413D40
	0x03413D24 MOV X0, X22
	0x03413D28 BL 0x3EB1AD0
	0x03413D2C LDR X24, [X0]
	0x03413D30 BL 0x3EB1AE0
	0x03413D34 MOV W22, W31
	0x03413D38 TBNZ X26, 0x1F, 0x3413664
	0x03413D3C B 0x34136C8
	0x03413D40 STR X1, [X31 + 0x10]
	0x03413D44 MOV X24, X31
	0x03413D48 TBZ X26, 0x1F, 0x3413DB0
	0x03413D4C CBZ X23, 0x3413DB0
	0x03413D50 ADRP X10, 0xCE0000
	0x03413D54 LDR X8, [X23]
	0x03413D58 LDR X10, [X10 + 0xE00]
	0x03413D5C LDRH W9, [X8 + 0x12E]
	0x03413D60 LDR X1, [X10]
	0x03413D64 CBZ X9, 0x3413D88
	0x03413D68 LDR X10, [X8 + 0xB0]
	0x03413D6C ADD X10, X10, 0x8
	0x03413D70 LDUR X11, [X10 - 0x8]
	0x03413D74 CMP X11, X1
	0x03413D78 B.EQ 0x3413D98

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xFCB000
	013 Move X25, 0xD1C000
	014 Move W8, [X26+1467]
	015 Move X25, [X25+1528]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xD1C000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0xD1C000
	030 Move X0, [X0+1872]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1C000
	033 Move X0, [X0+1552]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1C000
	036 Move X0, [X0+1528]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1467], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xD1C000
	049 Move X27, 0xD1C000
	050 Move X26, 0xD1C000
	051 Move W8, [X0+224]
	052 Move X25, [X25+1536]
	053 Move X27, [X27+1872]
	054 Move X26, [X26+1552]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+48], X24
	070 Move [X31+56], X23
	071 Move [X31+32], X22
	072 Move [X31+40], X21
	073 Move [X31+64], X20
	074 Move [X31+72], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecord> WriteTournamentRecordAsync(System.String bearerToken, System.String tournamentId, Nakama.WriteTournamentRecordRequestTournamentRecordWrite record, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03413D7C SUBS X9, X9, 0x1
	0x03413D80 ADD X10, X10, 0x10
	0x03413D84 B.NE 0x3413D70
	0x03413D88 MOV X0, X23
	0x03413D8C MOV W2, W31
	0x03413D90 BL 0x1C5C788
	0x03413D94 B 0x3413DA4
	0x03413D98 LDRSW X9, [X10]
	0x03413D9C ADD X8, X8, X9, 0x4, LSL
	0x03413DA0 ADD X0, X8, 0x138
	0x03413DA4 LDP X8, X1, [X0]
	0x03413DA8 MOV X0, X23
	0x03413DAC BLR X8
	0x03413DB0 CBNZ X24, 0x3413E44
	0x03413DB4 LDR X8, [X31 + 0x10]
	0x03413DB8 CMP W8, 0x1
	0x03413DBC B.NE 0x3413E64
	0x03413DC0 MOV X0, X22
	0x03413DC4 BL 0x3EB1AD0
	0x03413DC8 MOV X20, X0
	0x03413DCC ADRP X0, 0xCE0000
	0x03413DD0 LDR X0, [X0 + 0x7D0]
	0x03413DD4 BL 0x1C16D08
	0x03413DD8 LDR X8, [X20]
	0x03413DDC LDR X1, [X8]
	0x03413DE0 BL 0x1C17270
	0x03413DE4 TBZ X0, 0x0, 0x3413E24
	0x03413DE8 LDR X20, [X20]
	0x03413DEC BL 0x3EB1AE0
	0x03413DF0 MOVN W8, 0x1
	0x03413DF4 STR W8, [X19], #0x8
	0x03413DF8 ADRP X0, 0xCE3000
	0x03413DFC LDR X0, [X0 + 0x280]
	0x03413E00 BL 0x1C16D08
	0x03413E04 LDR W8, [X0 + 0xE0]
	0x03413E08 CBNZ W8, 0x3413E10
	0x03413E0C BL 0x1C16DFC
	0x03413E10 MOV X0, X19
	0x03413E14 MOV X1, X20
	0x03413E18 MOV X2, X31
	0x03413E1C BL 0x32C4908
	0x03413E20 B 0x3413B54
	0x03413E24 MOVZ W0, 0x8
	0x03413E28 BL 0x3EB1AF0
	0x03413E2C LDR X8, [X20]
	0x03413E30 STR X8, [X0]
	0x03413E34 ADRP X1, 0xAA1000
	0x03413E38 ADD X1, X1, 0xE58
	0x03413E3C MOV X2, X31
	0x03413E40 BL 0x3EB1B00
	0x03413E44 MOV X0, X24
	0x03413E48 BL 0x1C16F18
	0x03413E4C MOV X22, X0
	0x03413E50 STR X1, [X31 + 0x10]
	0x03413E54 TBNZ X26, 0x1F, 0x3413D4C
	0x03413E58 B 0x3413DB0
	0x03413E5C MOV X22, X0
	0x03413E60 BL 0x3EB1AE0
	0x03413E64 MOV X0, X22
	0x03413E68 BL 0x1D2C690
	0x03413E6C BL 0x1990590
	0x03413E70 STR X30, [X31 - 0x30]!
	0x03413E74 STP X22, X21, [X31 + 0x10]
	0x03413E78 STP X20, X19, [X31 + 0x20]
	0x03413E7C ADRP X21, 0xFCA000
	0x03413E80 ADRP X22, 0xCE3000
	0x03413E84 LDRB W8, [X21 + 0x5C2]
	0x03413E88 LDR X22, [X22 + 0x280]
	0x03413E8C MOV X19, X1
	0x03413E90 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xFCB000
	013 Move X25, 0xD1C000
	014 Move W8, [X26+1468]
	015 Move X25, [X25+1528]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xD1C000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0xD1C000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1C000
	033 Move X0, [X0+1552]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1C000
	036 Move X0, [X0+1528]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1468], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xD1C000
	049 Move X27, 0xD1C000
	050 Move X26, 0xD1C000
	051 Move W8, [X0+224]
	052 Move X25, [X25+1536]
	053 Move X27, [X27+1880]
	054 Move X26, [X26+1552]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+48], X24
	070 Move [X31+56], X23
	071 Move [X31+32], X22
	072 Move [X31+40], X21
	073 Move [X31+64], X20
	074 Move [X31+72], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task JoinTournamentAsync(System.String bearerToken, System.String tournamentId, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03413E94 TBNZ X8, 0x0, 0x3413EAC
	0x03413E98 ADRP X0, 0xCE3000
	0x03413E9C LDR X0, [X0 + 0x280]
	0x03413EA0 BL 0x1C16CF4
	0x03413EA4 MOVZ W8, 0x1
	0x03413EA8 STRB W8, [X21 + 0x5C2]
	0x03413EAC LDR X0, [X22]
	0x03413EB0 LDR W8, [X0 + 0xE0]
	0x03413EB4 CBNZ W8, 0x3413EBC
	0x03413EB8 BL 0x1C16DFC
	0x03413EBC ADD X0, X20, 0x8
	0x03413EC0 MOV X1, X19
	0x03413EC4 LDP X20, X19, [X31 + 0x20]
	0x03413EC8 LDP X22, X21, [X31 + 0x10]
	0x03413ECC MOV X2, X31
	0x03413ED0 LDR X30, [X31], #0x30
	0x03413ED4 B 0x32C477C
	0x03413ED8 SUB X31, X31, 0x80
	0x03413EDC STP X29, X30, [X31 + 0x20]
	0x03413EE0 STP X28, X27, [X31 + 0x30]
	0x03413EE4 STP X26, X25, [X31 + 0x40]
	0x03413EE8 STP X24, X23, [X31 + 0x50]
	0x03413EEC STP X22, X21, [X31 + 0x60]
	0x03413EF0 STP X20, X19, [X31 + 0x70]
	0x03413EF4 ADRP X20, 0xFCA000
	0x03413EF8 LDRB W8, [X20 + 0x5C3]
	0x03413EFC MOV X19, X0
	0x03413F00 TBNZ X8, 0x0, 0x3414038
	0x03413F04 ADRP X0, 0xD1B000
	0x03413F08 LDR X0, [X0 + 0x7E8]
	0x03413F0C BL 0x1C16CF4
	0x03413F10 ADRP X0, 0xCE3000
	0x03413F14 LDR X0, [X0 + 0x280]
	0x03413F18 BL 0x1C16CF4
	0x03413F1C ADRP X0, 0xCE9000
	0x03413F20 LDR X0, [X0 + 0x8D8]
	0x03413F24 BL 0x1C16CF4
	0x03413F28 ADRP X0, 0xCE1000
	0x03413F2C LDR X0, [X0 + 0x810]
	0x03413F30 BL 0x1C16CF4
	0x03413F34 ADRP X0, 0xCE1000
	0x03413F38 LDR X0, [X0 + 0x6C0]
	0x03413F3C BL 0x1C16CF4
	0x03413F40 ADRP X0, 0xCE1000
	0x03413F44 LDR X0, [X0 + 0x6D0]
	0x03413F48 BL 0x1C16CF4
	0x03413F4C ADRP X0, 0xCE0000
	0x03413F50 LDR X0, [X0 + 0xE00]
	0x03413F54 BL 0x1C16CF4
	0x03413F58 ADRP X0, 0xCE0000
	0x03413F5C LDR X0, [X0 + 0xF70]
	0x03413F60 BL 0x1C16CF4
	0x03413F64 ADRP X0, 0xCE0000
	0x03413F68 LDR X0, [X0 + 0xF78]
	0x03413F6C BL 0x1C16CF4
	0x03413F70 ADRP X0, 0xCE0000
	0x03413F74 LDR X0, [X0 + 0xE18]
	0x03413F78 BL 0x1C16CF4
	0x03413F7C ADRP X0, 0xD1B000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X25, 0xFCB000
	011 Move X24, 0xCE4000
	012 Move W8, [X25+1469]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xD1C000
	024 Move X0, [X0+1888]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE4000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1469], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+80], V0
	034 Move [X31+88], V0
	035 Move [X31+48], V0
	036 Move [X31+56], V0
	037 Move [X31+2], V0
	038 Move X24, 0xD1C000
	039 Move W8, [X0+224]
	040 Move X24, [X24+1888]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X8, X31, 8
	045 Move X0, X31
	046 Call AsyncTaskMethodBuilder.Create
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X9, [X31+24]
	049 Move X2, [X24]
	050 Add X8, X31, 32
	051 Move [X31+88], X21
	052 Move [X31+96], X20
	053 Or X20, X8, 15
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W10, TEMP
	057 Add X1, X31, 32
	058 Move X0, X20
	059 Move [X31+72], X23
	060 Move [X31+80], X22
	061 Move [X31+40], V0
	062 Move [X31+56], X9
	063 Move [X31+64], X19
	064 Move [X31+32], W10
	065 Call AsyncTaskMethodBuilder.Start, X0, X1
	066 Move X0, X20
	067 Move X1, X31
	068 Call AsyncTaskMethodBuilder.get_Task, X0
	069 Move X20, [X31+160]
	070 Move X19, [X31+168]
	071 Move X22, [X31+144]
	072 Move X21, [X31+152]
	073 Move X24, [X31+128]
	074 Move X23, [X31+136]
	075 Move X30, [X31+112]
	076 Move X25, [X31+120]
	077 Add X31, X31, 176
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentRecordList> ListTournamentRecordsAroundOwnerAsync(System.String bearerToken, System.String tournamentId, System.String ownerId, System.Nullable`1<System.Int32> limit, System.String expiry, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x03413F80 LDR X0, [X0 + 0x7B8]
	0x03413F84 BL 0x1C16CF4
	0x03413F88 ADRP X0, 0xCE0000
	0x03413F8C LDR X0, [X0 + 0xAC8]
	0x03413F90 BL 0x1C16CF4
	0x03413F94 ADRP X0, 0xCE3000
	0x03413F98 LDR X0, [X0 + 0x1E0]
	0x03413F9C BL 0x1C16CF4
	0x03413FA0 ADRP X0, 0xCE3000
	0x03413FA4 LDR X0, [X0 + 0x1F0]
	0x03413FA8 BL 0x1C16CF4
	0x03413FAC ADRP X0, 0xCE3000
	0x03413FB0 LDR X0, [X0 + 0x1F8]
	0x03413FB4 BL 0x1C16CF4
	0x03413FB8 ADRP X0, 0xCE9000
	0x03413FBC LDR X0, [X0 + 0x3A0]
	0x03413FC0 BL 0x1C16CF4
	0x03413FC4 ADRP X0, 0xCE2000
	0x03413FC8 LDR X0, [X0 + 0xA28]
	0x03413FCC BL 0x1C16CF4
	0x03413FD0 ADRP X0, 0xD09000
	0x03413FD4 LDR X0, [X0 + 0x4D8]
	0x03413FD8 BL 0x1C16CF4
	0x03413FDC ADRP X0, 0xD1B000
	0x03413FE0 LDR X0, [X0 + 0x7F0]
	0x03413FE4 BL 0x1C16CF4
	0x03413FE8 ADRP X0, 0xD1B000
	0x03413FEC LDR X0, [X0 + 0x7F8]
	0x03413FF0 BL 0x1C16CF4
	0x03413FF4 ADRP X0, 0xD1B000
	0x03413FF8 LDR X0, [X0 + 0x800]
	0x03413FFC BL 0x1C16CF4
	0x03414000 ADRP X0, 0xCE8000
	0x03414004 LDR X0, [X0 + 0x720]
	0x03414008 BL 0x1C16CF4
	0x0341400C ADRP X0, 0xD1A000
	0x03414010 LDR X0, [X0 + 0x7D0]
	0x03414014 BL 0x1C16CF4
	0x03414018 ADRP X0, 0xD1A000
	0x0341401C LDR X0, [X0 + 0x7D8]
	0x03414020 BL 0x1C16CF4
	0x03414024 ADRP X0, 0xCDF000
	0x03414028 LDR X0, [X0 + 0x988]
	0x0341402C BL 0x1C16CF4
	0x03414030 MOVZ W8, 0x1
	0x03414034 STRB W8, [X20 + 0x5C3]
	0x03414038 STR X31, [X31 + 0x18]
	0x0341403C ADRP X27, 0xCE2000
	0x03414040 LDR W24, [X19]
	0x03414044 LDR X27, [X27 + 0x280]
	0x03414048 CBZ W24, 0x3414124
	0x0341404C LDR X21, [X19 + 0x20]
	0x03414050 CBZ X21, 0x341458C
	0x03414054 ADRP X26, 0xCE1000
	0x03414058 LDR X26, [X26 + 0xA28]
	0x0341405C ADRP X8, 0xD1A000
	0x03414060 LDR X0, [X26]
	0x03414064 LDR X8, [X8 + 0x7F8]
	0x03414068 LDR X23, [X19 + 0x30]
	0x0341406C LDR W9, [X0 + 0xE0]
	0x03414070 LDR X20, [X8]
	0x03414074 CBNZ W9, 0x341407C
	0x03414078 BL 0x1C16DFC
	0x0341407C MOV X0, X21
	0x03414080 MOV X1, X31
	0x03414084 BL 0x3624D20
	0x03414088 CBZ X20, 0x34145D4
	0x0341408C ADRP X8, 0xD1A000
	0x03414090 LDR X8, [X8 + 0x800]
	0x03414094 MOV X2, X0
	0x03414098 LDR X1, [X8]
	0x0341409C MOV X0, X20
	0x034140A0 MOV X3, X31
	0x034140A4 BL 0x32293BC
	0x034140A8 ADRP X8, 0xCDF000
	0x034140AC LDR X8, [X8 + 0x988]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X27, 0xFCB000
	015 Move X26, 0xD1C000
	016 Move W8, [X27+1470]
	017 Move X26, [X26+1840]
	018 Move X19, X6
	019 Move X20, X5
	020 Move X21, X4
	021 Move X23, X3
	022 Move X25, X2
	023 Move X22, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xD1C000
	030 Move X0, [X0+1848]
	031 Call 0x1C17CF4
	032 Move X0, 0xD1C000
	033 Move X0, [X0+1896]
	034 Call 0x1C17CF4
	035 Move X0, 0xD1C000
	036 Move X0, [X0+1864]
	037 Call 0x1C17CF4
	038 Move X0, 0xD1C000
	039 Move X0, [X0+1840]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X27+1470], W8
	043 Move X0, [X26]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+80], V0
	046 Move [X31+88], V0
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+16], V0
	050 Move [X31+24], V0
	051 Move [X31], V0
	052 Move X26, 0xD1B000
	053 Move X29, 0xD1B000
	054 Move W8, [X0+224]
	055 Move X27, [X31+208]
	056 Move X28, [X31+216]
	057 Move X26, [X26+1848]
	058 Move X29, [X29+1896]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X26]
	063 Add X8, X31, 0
	064 Or X26, X8, 15
	065 Move X8, X26
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X26
	073 Move [X31+32], X25
	074 Move [X31+40], X23
	075 Move [X31+48], X21
	076 Move [X31+56], X20
	077 Move [X31+64], X19
	078 Move [X31+72], X24
	079 Move [X31+80], X22
	080 Move [X31+88], X27
	081 Move [X31+96], X28
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X8, 0xD1B000
	085 Move X8, [X8+1864]
	086 Move X0, X26
	087 Move X1, [X8]
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiUsers> GetUsersAsync(System.String bearerToken, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames, System.Collections.Generic.IEnumerable`1<System.String> facebookIds, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034140B0 LDR X21, [X19 + 0x28]
	0x034140B4 MOV X20, X0
	0x034140B8 LDR X28, [X8]
	0x034140BC CBNZ X21, 0x34140DC
	0x034140C0 ADRP X8, 0xCDF000
	0x034140C4 LDR X8, [X8 + 0xAC8]
	0x034140C8 LDR X0, [X8]
	0x034140CC MOV W1, W31
	0x034140D0 BL 0x1C16D6C
	0x034140D4 MOV X21, X0
	0x034140D8 CBZ X0, 0x3414604
	0x034140DC ADRP X10, 0xCDF000
	0x034140E0 LDR X8, [X21]
	0x034140E4 LDR X10, [X10 + 0xF70]
	0x034140E8 LDRH W9, [X8 + 0x12E]
	0x034140EC LDR X1, [X10]
	0x034140F0 CBZ X9, 0x3414114
	0x034140F4 LDR X10, [X8 + 0xB0]
	0x034140F8 ADD X10, X10, 0x8
	0x034140FC LDUR X11, [X10 - 0x8]
	0x03414100 CMP X11, X1
	0x03414104 B.EQ 0x341413C
	0x03414108 SUBS X9, X9, 0x1
	0x0341410C ADD X10, X10, 0x10
	0x03414110 B.NE 0x34140FC
	0x03414114 MOV X0, X21
	0x03414118 MOV W2, W31
	0x0341411C BL 0x1C5C788
	0x03414120 B 0x3414148
	0x03414124 LDR X8, [X19 + 0x50]
	0x03414128 MOVN W9, 0x0
	0x0341412C STR X8, [X31 + 0x18]
	0x03414130 STR X31, [X19 + 0x50]
	0x03414134 STR W9, [X19]
	0x03414138 B 0x34144F4
	0x0341413C LDRSW X9, [X10]
	0x03414140 ADD X8, X8, X9, 0x4, LSL
	0x03414144 ADD X0, X8, 0x138
	0x03414148 LDP X8, X1, [X0]
	0x0341414C MOV X0, X21
	0x03414150 BLR X8
	0x03414154 STP X20, X23, [X31 + 0x8]
	0x03414158 ADRP X29, 0xCDF000
	0x0341415C ADRP X27, 0xCDF000
	0x03414160 ADRP X20, 0xD1A000
	0x03414164 ADRP X25, 0xCE8000
	0x03414168 LDR X29, [X29 + 0xE18]
	0x0341416C LDR X27, [X27 + 0xF78]
	0x03414170 LDR X20, [X20 + 0x7F0]
	0x03414174 LDR X25, [X25 + 0x720]
	0x03414178 MOV X22, X0
	0x0341417C MOV X0, X28
	0x03414180 CBZ X22, 0x3414588
	0x03414184 LDR X8, [X22]
	0x03414188 LDR X1, [X29]
	0x0341418C MOV X21, X0
	0x03414190 LDRH W9, [X8 + 0x12E]
	0x03414194 CBZ X9, 0x34141B8
	0x03414198 LDR X10, [X8 + 0xB0]
	0x0341419C ADD X10, X10, 0x8
	0x034141A0 LDUR X11, [X10 - 0x8]
	0x034141A4 CMP X11, X1
	0x034141A8 B.EQ 0x34141C8
	0x034141AC SUBS X9, X9, 0x1
	0x034141B0 ADD X10, X10, 0x10
	0x034141B4 B.NE 0x34141A0
	0x034141B8 MOV X0, X22
	0x034141BC MOV W2, W31
	0x034141C0 BL 0x1C5C788
	0x034141C4 B 0x34141D4
	0x034141C8 LDRSW X9, [X10]
	0x034141CC ADD X8, X8, X9, 0x4, LSL
	0x034141D0 ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xFCA000
	014 Move X26, 0xD1B000
	015 Move W8, [X27+1471]
	016 Move X26, [X26+1904]
	017 Move X19, X6
	018 Move X20, X5
	019 Move X21, X4
	020 Move X22, X3
	021 Move X24, X2
	022 Move X23, X1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xD1B000
	029 Move X0, [X0+1912]
	030 Call 0x1C17CF4
	031 Move X0, 0xD1B000
	032 Move X0, [X0+1920]
	033 Call 0x1C17CF4
	034 Move X0, 0xD1B000
	035 Move X0, [X0+1928]
	036 Call 0x1C17CF4
	037 Move X0, 0xD1B000
	038 Move X0, [X0+1904]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1471], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X26, 0xD1B000
	051 Move X28, 0xD1B000
	052 Move X27, 0xD1B000
	053 Move W8, [X0+224]
	054 Move X26, [X26+1912]
	055 Move X28, [X28+1920]
	056 Move X27, [X27+1928]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X26]
	061 Add X8, X31, 0
	062 Or X26, X8, 15
	063 Move X8, X26
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X28]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X26
	071 Move [X31+32], X24
	072 Move [X31+40], X22
	073 Move [X31+48], X21
	074 Move [X31+56], X25
	075 Move [X31+64], X23
	076 Move [X31+72], X20
	077 Move [X31+80], X19
	078 Move [X31], W8
	079 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	080 Move X1, [X27]
	081 Move X0, X26
	082 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	083 Move X20, [X31+176]
	084 Move X19, [X31+184]
	085 Move X22, [X31+160]
	086 Move X21, [X31+168]
	087 Move X24, [X31+144]
	088 Move X23, [X31+152]
	089 Move X26, [X31+128]
	090 Move X25, [X31+136]
	091 Move X28, [X31+112]
	092 Move X27, [X31+120]
	093 Move X30, [X31+96]
	094 Add X31, X31, 192
	095 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiUserGroupList> ListUserGroupsAsync(System.String bearerToken, System.String userId, System.Nullable`1<System.Int32> limit, System.Nullable`1<System.Int32> state, System.String cursor, System.Nullable`1<System.Threading.CancellationToken> cancellationToken)

Disassembly:
	0x034141D4 LDP X8, X1, [X0]
	0x034141D8 MOV X0, X22
	0x034141DC BLR X8
	0x034141E0 TBZ X0, 0x0, 0x3414278
	0x034141E4 LDR X8, [X22]
	0x034141E8 LDR X1, [X27]
	0x034141EC LDRH W9, [X8 + 0x12E]
	0x034141F0 CBZ X9, 0x3414214
	0x034141F4 LDR X10, [X8 + 0xB0]
	0x034141F8 ADD X10, X10, 0x8
	0x034141FC LDUR X11, [X10 - 0x8]
	0x03414200 CMP X11, X1
	0x03414204 B.EQ 0x3414224
	0x03414208 SUBS X9, X9, 0x1
	0x0341420C ADD X10, X10, 0x10
	0x03414210 B.NE 0x34141FC
	0x03414214 MOV X0, X22
	0x03414218 MOV W2, W31
	0x0341421C BL 0x1C5C788
	0x03414220 B 0x3414230
	0x03414224 LDRSW X9, [X10]
	0x03414228 ADD X8, X8, X9, 0x4, LSL
	0x0341422C ADD X0, X8, 0x138
	0x03414230 LDP X8, X1, [X0]
	0x03414234 MOV X0, X22
	0x03414238 BLR X8
	0x0341423C MOV X23, X0
	0x03414240 LDR X0, [X26]
	0x03414244 LDR W8, [X0 + 0xE0]
	0x03414248 CBNZ W8, 0x3414250
	0x0341424C BL 0x1C16DFC
	0x03414250 MOV X0, X23
	0x03414254 MOV X1, X31
	0x03414258 BL 0x3624D20
	0x0341425C LDR X1, [X20]
	0x03414260 LDR X3, [X25]
	0x03414264 MOV X2, X0
	0x03414268 MOV X0, X21
	0x0341426C MOV X4, X31
	0x03414270 BL 0x32277C4
	0x03414274 B 0x3414180
	0x03414278 MOV X23, X31
	0x0341427C MOVZ W20, 0x9
	0x03414280 ADRP X27, 0xCE2000
	0x03414284 LDR X27, [X27 + 0x280]
	0x03414288 LDR X25, [X31 + 0x10]
	0x0341428C TBZ X24, 0x1F, 0x34142F4
	0x03414290 CBZ X22, 0x34142F4
	0x03414294 ADRP X10, 0xCDF000
	0x03414298 LDR X8, [X22]
	0x0341429C LDR X10, [X10 + 0xE00]
	0x034142A0 LDRH W9, [X8 + 0x12E]
	0x034142A4 LDR X1, [X10]
	0x034142A8 CBZ X9, 0x34142CC
	0x034142AC LDR X10, [X8 + 0xB0]
	0x034142B0 ADD X10, X10, 0x8
	0x034142B4 LDUR X11, [X10 - 0x8]
	0x034142B8 CMP X11, X1
	0x034142BC B.EQ 0x34142DC
	0x034142C0 SUBS X9, X9, 0x1
	0x034142C4 ADD X10, X10, 0x10
	0x034142C8 B.NE 0x34142B4
	0x034142CC MOV X0, X22
	0x034142D0 MOV W2, W31
	0x034142D4 BL 0x1C5C788
	0x034142D8 B 0x34142E8
	0x034142DC LDRSW X9, [X10]
	0x034142E0 ADD X8, X8, X9, 0x4, LSL
	0x034142E4 ADD X0, X8, 0x138
	0x034142E8 LDP X8, X1, [X0]
	0x034142EC MOV X0, X22
	0x034142F0 BLR X8
	0x034142F4 CBNZ X23, 0x34145D8
	0x034142F8 CMP W20, 0x9
	0x034142FC B.EQ 0x3414304

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xFCA000
	015 Move X27, 0xD1B000
	016 Move W8, [X28+1472]
	017 Move X27, [X27+1936]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xD1B000
	031 Move X0, [X0+1944]
	032 Call 0x1C17CF4
	033 Move X0, 0xD1B000
	034 Move X0, [X0+1952]
	035 Call 0x1C17CF4
	036 Move X0, 0xD1B000
	037 Move X0, [X0+1960]
	038 Call 0x1C17CF4
	039 Move X0, 0xD1B000
	040 Move X0, [X0+1936]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1472], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X27, 0xD1B000
	054 Move X29, 0xD1B000
	055 Move X28, 0xD1B000
	056 Move W8, [X0+224]
	057 Move X27, [X27+1944]
	058 Move X29, [X29+1952]
	059 Move X28, [X28+1960]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+64], X26
	075 Move [X31+72], X25
	076 Move [X31+32], X24
	077 Move [X31+40], X23
	078 Move [X31+48], X22
	079 Move [X31+56], X21
	080 Move [X31+80], X20
	081 Move [X31+88], X19
	082 Move [X31], W8
	083 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	084 Move X1, [X28]
	085 Move X0, X27
	086 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	087 Move X20, [X31+192]
	088 Move X19, [X31+200]
	089 Move X22, [X31+176]
	090 Move X21, [X31+184]
	091 Move X24, [X31+160]
	092 Move X23, [X31+168]
	093 Move X26, [X31+144]
	094 Move X25, [X31+152]
	095 Move X28, [X31+128]
	096 Move X27, [X31+136]
	097 Move X29, [X31+112]
	098 Move X30, [X31+120]
	099 Add X31, X31, 208
	100 Return X0

