Type: Nakama.Client/<WriteTournamentRecordAsync>d__127

Method: System.Void MoveNext()

Disassembly:
	0x03471578 BL 0x3EB1AD0
	0x0347157C MOV X20, X0
	0x03471580 ADRP X0, 0xC82000
	0x03471584 LDR X0, [X0 + 0x7D0]
	0x03471588 BL 0x1C16D08
	0x0347158C LDR X8, [X20]
	0x03471590 LDR X1, [X8]
	0x03471594 BL 0x1C17270
	0x03471598 TBZ X0, 0x0, 0x34715D8
	0x0347159C LDR X20, [X20]
	0x034715A0 BL 0x3EB1AE0
	0x034715A4 MOVN W8, 0x1
	0x034715A8 STR W8, [X19], #0x8
	0x034715AC ADRP X0, 0xC85000
	0x034715B0 LDR X0, [X0 + 0x280]
	0x034715B4 BL 0x1C16D08
	0x034715B8 LDR W8, [X0 + 0xE0]
	0x034715BC CBNZ W8, 0x34715C4
	0x034715C0 BL 0x1C16DFC
	0x034715C4 MOV X0, X19
	0x034715C8 MOV X1, X20
	0x034715CC MOV X2, X31
	0x034715D0 BL 0x32C4908
	0x034715D4 B 0x347145C
	0x034715D8 MOVZ W0, 0x8
	0x034715DC BL 0x3EB1AF0
	0x034715E0 LDR X8, [X20]
	0x034715E4 STR X8, [X0]
	0x034715E8 ADRP X1, 0xA43000
	0x034715EC ADD X1, X1, 0xE58
	0x034715F0 MOV X2, X31
	0x034715F4 BL 0x3EB1B00
	0x034715F8 MOV X21, X0
	0x034715FC BL 0x3EB1AE0
	0x03471600 MOV X0, X21
	0x03471604 BL 0x1D2C690
	0x03471608 BL 0x1990590
	0x0347160C STR X30, [X31 - 0x30]!
	0x03471610 STP X22, X21, [X31 + 0x10]
	0x03471614 STP X20, X19, [X31 + 0x20]
	0x03471618 ADRP X21, 0xF6C000
	0x0347161C ADRP X22, 0xC85000
	0x03471620 LDRB W8, [X21 + 0x7F3]
	0x03471624 LDR X22, [X22 + 0x280]
	0x03471628 MOV X19, X1
	0x0347162C MOV X20, X0
	0x03471630 TBNZ X8, 0x0, 0x3471648
	0x03471634 ADRP X0, 0xC85000
	0x03471638 LDR X0, [X0 + 0x280]
	0x0347163C BL 0x1C16CF4
	0x03471640 MOVZ W8, 0x1
	0x03471644 STRB W8, [X21 + 0x7F3]
	0x03471648 LDR X0, [X22]
	0x0347164C LDR W8, [X0 + 0xE0]
	0x03471650 CBNZ W8, 0x3471658
	0x03471654 BL 0x1C16DFC
	0x03471658 ADD X0, X20, 0x8
	0x0347165C MOV X1, X19
	0x03471660 LDP X20, X19, [X31 + 0x20]
	0x03471664 LDP X22, X21, [X31 + 0x10]
	0x03471668 MOV X2, X31
	0x0347166C LDR X30, [X31], #0x30
	0x03471670 B 0x32C477C
	0x03471674 LDR X0, [X0 + 0x10]
	0x03471678 RET
	0x0347167C STR X1, [X0 + 0x10]
	0x03471680 RET
	0x03471684 STR X30, [X31 - 0x30]!
	0x03471688 STP X22, X21, [X31 + 0x10]
	0x0347168C STP X20, X19, [X31 + 0x20]
	0x03471690 ADRP X21, 0xF6C000
	0x03471694 ADRP X22, 0xC85000
	0x03471698 ADRP X20, 0xCBF000
	0x0347169C LDRB W8, [X21 + 0x7F4]
	0x034716A0 LDR X22, [X22 + 0x118]
	0x034716A4 LDR X20, [X20 + 0x7D0]
	0x034716A8 MOV X19, X0
	0x034716AC TBNZ X8, 0x0, 0x34716D0
	0x034716B0 ADRP X0, 0xCBF000
	0x034716B4 LDR X0, [X0 + 0x7D0]
	0x034716B8 BL 0x1C16CF4
	0x034716BC ADRP X0, 0xC85000
	0x034716C0 LDR X0, [X0 + 0x118]
	0x034716C4 BL 0x1C16CF4
	0x034716C8 MOVZ W8, 0x1
	0x034716CC STRB W8, [X21 + 0x7F4]
	0x034716D0 LDR X0, [X22]
	0x034716D4 BL 0x1C16F10
	0x034716D8 LDR X2, [X20]
	0x034716DC MOV X1, X19
	0x034716E0 MOV X3, X31
	0x034716E4 MOV X20, X0
	0x034716E8 BL 0x3484840
	0x034716EC MOV X0, X20
	0x034716F0 LDP X20, X19, [X31 + 0x20]
	0x034716F4 LDP X22, X21, [X31 + 0x10]
	0x034716F8 LDR X30, [X31], #0x30
	0x034716FC RET
	0x03471700 STR X30, [X31 - 0x30]!
	0x03471704 STP X22, X21, [X31 + 0x10]
	0x03471708 STP X20, X19, [X31 + 0x20]
	0x0347170C ADRP X22, 0xF6C000
	0x03471710 ADRP X21, 0xC85000
	0x03471714 LDRB W8, [X22 + 0x7F5]
	0x03471718 LDR X21, [X21 + 0x128]
	0x0347171C MOV X19, X1
	0x03471720 MOV X20, X0
	0x03471724 TBNZ X8, 0x0, 0x347173C
	0x03471728 ADRP X0, 0xC85000
	0x0347172C LDR X0, [X0 + 0x128]
	0x03471730 BL 0x1C16CF4
	0x03471734 MOVZ W8, 0x1
	0x03471738 STRB W8, [X22 + 0x7F5]
	0x0347173C MOV X0, X20
	0x03471740 MOV X1, X31
	0x03471744 BL 0x33BDD8C
	0x03471748 STR X19, [X20 + 0x18]
	0x0347174C LDR X0, [X21]
	0x03471750 LDR W8, [X0 + 0xE0]
	0x03471754 CBNZ W8, 0x347175C
	0x03471758 BL 0x1C16DFC
	0x0347175C CBZ X19, 0x3471784
	0x03471760 LDR X8, [X21]
	0x03471764 MOV X0, X19
	0x03471768 LDP X20, X19, [X31 + 0x20]
	0x0347176C LDP X22, X21, [X31 + 0x10]
	0x03471770 LDR X8, [X8 + 0xB8]
	0x03471774 MOV X2, X31
	0x03471778 LDR X1, [X8]
	0x0347177C LDR X30, [X31], #0x30
	0x03471780 B 0x35F9A24
	0x03471784 BL 0x1C16F20
	0x03471788 SUB X31, X31, 0xE0
	0x0347178C STP X29, X30, [X31 + 0x80]
	0x03471790 STP X28, X27, [X31 + 0x90]
	0x03471794 STP X26, X25, [X31 + 0xA0]
	0x03471798 STP X24, X23, [X31 + 0xB0]
	0x0347179C STP X22, X21, [X31 + 0xC0]
	0x034717A0 STP X20, X19, [X31 + 0xD0]
	0x034717A4 ADRP X28, 0xF6C000
	0x034717A8 ADRP X27, 0xC85000
	0x034717AC LDRB W8, [X28 + 0x7F6]
	0x034717B0 LDR X27, [X27 + 0x130]
	0x034717B4 MOV X19, X7
	0x034717B8 MOV X20, X6
	0x034717BC MOV W21, W5
	0x034717C0 MOV X22, X4
	0x034717C4 MOV X23, X3
	0x034717C8 MOV X24, X2
	0x034717CC MOV X25, X1
	0x034717D0 MOV X26, X0
	0x034717D4 TBNZ X8, 0x0, 0x3471810
	0x034717D8 ADRP X0, 0xC85000
	0x034717DC LDR X0, [X0 + 0x138]
	0x034717E0 BL 0x1C16CF4
	0x034717E4 ADRP X0, 0xCBF000
	0x034717E8 LDR X0, [X0 + 0x7D8]
	0x034717EC BL 0x1C16CF4
	0x034717F0 ADRP X0, 0xC85000
	0x034717F4 LDR X0, [X0 + 0x148]
	0x034717F8 BL 0x1C16CF4
	0x034717FC ADRP X0, 0xC85000
	0x03471800 LDR X0, [X0 + 0x130]
	0x03471804 BL 0x1C16CF4
	0x03471808 MOVZ W8, 0x1
	0x0347180C STRB W8, [X28 + 0x7F6]
	0x03471810 LDR X0, [X27]
	0x03471814 MOVI V0.2D, 0x0
	0x03471818 STR X31, [X31 + 0x70]
	0x0347181C STP V0, V0, [X31 + 0x50]
	0x03471820 STP V0, V0, [X31 + 0x30]
	0x03471824 STP V0, V0, [X31 + 0x10]
	0x03471828 STR V0, [X31]
	0x0347182C ADRP X27, 0xC85000
	0x03471830 ADRP X29, 0xCBF000
	0x03471834 ADRP X28, 0xC85000
	0x03471838 LDR W8, [X0 + 0xE0]
	0x0347183C LDR X27, [X27 + 0x138]
	0x03471840 LDR X29, [X29 + 0x7D8]
	0x03471844 LDR X28, [X28 + 0x148]
	0x03471848 CBNZ W8, 0x3471850
	0x0347184C BL 0x1C16DFC
	0x03471850 LDR X0, [X27]
	0x03471854 ADD X8, X31, 0x0
	0x03471858 ORR X27, X8, 0xF
	0x0347185C MOV X8, X27
	0x03471860 BL 0x263221C
	0x03471864 LDR X2, [X29]
	0x03471868 MOVN W8, 0x0
	0x0347186C ADD X1, X31, 0x0
	0x03471870 MOV X0, X27
	0x03471874 STP X19, X26, [X31 + 0x50]
	0x03471878 STP X24, X25, [X31 + 0x20]
	0x0347187C STP X23, X22, [X31 + 0x30]
	0x03471880 STR W21, [X31 + 0x40]
	0x03471884 STR X20, [X31 + 0x48]
	0x03471888 STR W8, [X31]
	0x0347188C BL 0x1FCFD14
	0x03471890 LDR X1, [X28]
	0x03471894 MOV X0, X27
	0x03471898 BL 0x2632230
	0x0347189C LDP X20, X19, [X31 + 0xD0]
	0x034718A0 LDP X22, X21, [X31 + 0xC0]
	0x034718A4 LDP X24, X23, [X31 + 0xB0]
	0x034718A8 LDP X26, X25, [X31 + 0xA0]
	0x034718AC LDP X28, X27, [X31 + 0x90]
	0x034718B0 LDP X29, X30, [X31 + 0x80]
	0x034718B4 ADD X31, X31, 0xE0
	0x034718B8 RET
	0x034718BC STR X30, [X31 - 0x30]!
	0x034718C0 STP X22, X21, [X31 + 0x10]
	0x034718C4 STP X20, X19, [X31 + 0x20]
	0x034718C8 ADRP X20, 0xF6C000
	0x034718CC ADRP X22, 0xC84000
	0x034718D0 LDRB W8, [X20 + 0x7F7]
	0x034718D4 LDR X22, [X22 + 0xA30]
	0x034718D8 MOV W19, W1
	0x034718DC MOV W21, W0
	0x034718E0 TBNZ X8, 0x0, 0x347191C
	0x034718E4 ADRP X0, 0xCBF000
	0x034718E8 LDR X0, [X0 + 0x7E0]
	0x034718EC BL 0x1C16CF4
	0x034718F0 ADRP X0, 0xC84000
	0x034718F4 LDR X0, [X0 + 0xA30]
	0x034718F8 BL 0x1C16CF4
	0x034718FC ADRP X0, 0xC84000
	0x03471900 LDR X0, [X0 + 0xA40]
	0x03471904 BL 0x1C16CF4
	0x03471908 ADRP X0, 0xCBF000
	0x0347190C LDR X0, [X0 + 0x7E8]
	0x03471910 BL 0x1C16CF4
	0x03471914 MOVZ W8, 0x1
	0x03471918 STRB W8, [X20 + 0x7F7]
	0x0347191C LDR X0, [X22]
	0x03471920 BL 0x1C16F10
	0x03471924 MOV X1, X31
	0x03471928 MOV X20, X0
	0x0347192C BL 0x35F50D4
	0x03471930 CBZ X20, 0x34719E0
	0x03471934 LDR X8, [X20]
	0x03471938 MOV X0, X20
	0x0347193C LDP X9, X1, [X8 + 0x1A8]
	0x03471940 BLR X9
	0x03471944 TBZ X0, 0x0, 0x347195C
	0x03471948 TBZ X21, 0x0, 0x347195C
	0x0347194C MOVZ W1, 0x3
	0x03471950 MOV X0, X20
	0x03471954 MOV X2, X31
	0x03471958 BL 0x35F5810
	0x0347195C ADRP X22, 0xC84000
	0x03471960 ADRP X21, 0xCBF000
	0x03471964 LDR X22, [X22 + 0xA40]
	0x03471968 LDR X21, [X21 + 0x7E8]
	0x0347196C TBZ X19, 0x0, 0x34719A0
	0x03471970 ADRP X8, 0xCBF000
	0x03471974 LDR X8, [X8 + 0x7E0]
	0x03471978 LDR X0, [X8]
	0x0347197C BL 0x1C16F10
	0x03471980 MOV X1, X31
	0x03471984 MOV X19, X0
	0x03471988 BL 0x35F97CC
	0x0347198C MOV X0, X19
	0x03471990 MOV X1, X20
	0x03471994 MOV X2, X31
	0x03471998 BL 0x35F97DC
	0x0347199C MOV X20, X19
	0x034719A0 LDR X0, [X22]
	0x034719A4 BL 0x1C16F10
	0x034719A8 MOV X1, X20
	0x034719AC MOV X2, X31
	0x034719B0 MOV X19, X0
	0x034719B4 BL 0x35F98E0
	0x034719B8 LDR X0, [X21]
	0x034719BC BL 0x1C16F10
	0x034719C0 MOV X1, X19
	0x034719C4 MOV X20, X0
	0x034719C8 BL 0x3471700
	0x034719CC MOV X0, X20
	0x034719D0 LDP X20, X19, [X31 + 0x20]
	0x034719D4 LDP X22, X21, [X31 + 0x10]
	0x034719D8 LDR X30, [X31], #0x30
	0x034719DC RET
	0x034719E0 BL 0x1C16F20
	0x034719E4 STR X30, [X31 - 0x20]!
	0x034719E8 STP X20, X19, [X31 + 0x10]
	0x034719EC ADRP X20, 0xF6C000
	0x034719F0 LDRB W8, [X20 + 0x7F8]
	0x034719F4 MOV X19, X1
	0x034719F8 TBNZ X8, 0x0, 0x3471A10
	0x034719FC ADRP X0, 0xC83000
	0x03471A00 LDR X0, [X0 + 0x6F0]
	0x03471A04 BL 0x1C16CF4
	0x03471A08 MOVZ W8, 0x1
	0x03471A0C STRB W8, [X20 + 0x7F8]
	0x03471A10 CBZ X19, 0x3471A4C
	0x03471A14 ADRP X8, 0xC83000
	0x03471A18 LDR X8, [X8 + 0x6F0]
	0x03471A1C LDR X9, [X19]
	0x03471A20 LDR X8, [X8]
	0x03471A24 CMP X9, X8
	0x03471A28 B.NE 0x3471A4C
	0x03471A2C LDR X8, [X19 + 0x90]
	0x03471A30 SUB X8, X8, 0x1F4
	0x03471A34 CMP X8, 0x4
	0x03471A38 B.HI 0x3471A4C
	0x03471A3C MOVZ W9, 0x1D
	0x03471A40 LSRV W8, W9, W8
	0x03471A44 AND W0, W8, 0x1
	0x03471A48 B 0x3471A50
	0x03471A4C MOV W0, W31
	0x03471A50 LDP X20, X19, [X31 + 0x10]
	0x03471A54 LDR X30, [X31], #0x20
	0x03471A58 RET
	0x03471A5C SUB X31, X31, 0x80
	0x03471A60 STR X30, [X31 + 0x20]
	0x03471A64 STP X28, X27, [X31 + 0x30]
	0x03471A68 STP X26, X25, [X31 + 0x40]
	0x03471A6C STP X24, X23, [X31 + 0x50]
	0x03471A70 STP X22, X21, [X31 + 0x60]
	0x03471A74 STP X20, X19, [X31 + 0x70]
	0x03471A78 ADRP X20, 0xF6C000
	0x03471A7C LDRB W8, [X20 + 0x7F9]
	0x03471A80 MOV X19, X0
	0x03471A84 TBNZ X8, 0x0, 0x3471C28
	0x03471A88 ADRP X0, 0xCBF000
	0x03471A8C LDR X0, [X0 + 0x7F0]
	0x03471A90 BL 0x1C16CF4
	0x03471A94 ADRP X0, 0xCBF000
	0x03471A98 LDR X0, [X0 + 0x7F8]
	0x03471A9C BL 0x1C16CF4
	0x03471AA0 ADRP X0, 0xC85000
	0x03471AA4 LDR X0, [X0 + 0x160]
	0x03471AA8 BL 0x1C16CF4
	0x03471AAC ADRP X0, 0xC85000
	0x03471AB0 LDR X0, [X0 + 0x130]
	0x03471AB4 BL 0x1C16CF4
	0x03471AB8 ADRP X0, 0xC85000
	0x03471ABC LDR X0, [X0 + 0x168]
	0x03471AC0 BL 0x1C16CF4
	0x03471AC4 ADRP X0, 0xC84000
	0x03471AC8 LDR X0, [X0 + 0xA50]
	0x03471ACC BL 0x1C16CF4
	0x03471AD0 ADRP X0, 0xC84000
	0x03471AD4 LDR X0, [X0 + 0x220]
	0x03471AD8 BL 0x1C16CF4
	0x03471ADC ADRP X0, 0xC85000
	0x03471AE0 LDR X0, [X0 + 0x170]
	0x03471AE4 BL 0x1C16CF4
	0x03471AE8 ADRP X0, 0xC85000
	0x03471AEC LDR X0, [X0 + 0x178]
	0x03471AF0 BL 0x1C16CF4
	0x03471AF4 ADRP X0, 0xC85000
	0x03471AF8 LDR X0, [X0 + 0x180]
	0x03471AFC BL 0x1C16CF4
	0x03471B00 ADRP X0, 0xC85000
	0x03471B04 LDR X0, [X0 + 0x188]
	0x03471B08 BL 0x1C16CF4
	0x03471B0C ADRP X0, 0xC82000
	0x03471B10 LDR X0, [X0 + 0xE00]
	0x03471B14 BL 0x1C16CF4
	0x03471B18 ADRP X0, 0xC85000
	0x03471B1C LDR X0, [X0 + 0x190]
	0x03471B20 BL 0x1C16CF4
	0x03471B24 ADRP X0, 0xC85000
	0x03471B28 LDR X0, [X0 + 0x198]
	0x03471B2C BL 0x1C16CF4
	0x03471B30 ADRP X0, 0xC82000
	0x03471B34 LDR X0, [X0 + 0xE18]
	0x03471B38 BL 0x1C16CF4
	0x03471B3C ADRP X0, 0xC85000
	0x03471B40 LDR X0, [X0 + 0x1A0]
	0x03471B44 BL 0x1C16CF4
	0x03471B48 ADRP X0, 0xC85000
	0x03471B4C LDR X0, [X0 + 0x1A8]
	0x03471B50 BL 0x1C16CF4
	0x03471B54 ADRP X0, 0xC85000
	0x03471B58 LDR X0, [X0 + 0x1B0]
	0x03471B5C BL 0x1C16CF4
	0x03471B60 ADRP X0, 0xC85000
	0x03471B64 LDR X0, [X0 + 0x1B8]
	0x03471B68 BL 0x1C16CF4
	0x03471B6C ADRP X0, 0xC85000
	0x03471B70 LDR X0, [X0 + 0x1C0]
	0x03471B74 BL 0x1C16CF4
	0x03471B78 ADRP X0, 0xC85000
	0x03471B7C LDR X0, [X0 + 0x1C8]
	0x03471B80 BL 0x1C16CF4
	0x03471B84 ADRP X0, 0xC85000
	0x03471B88 LDR X0, [X0 + 0x1D0]
	0x03471B8C BL 0x1C16CF4
	0x03471B90 ADRP X0, 0xC82000
	0x03471B94 LDR X0, [X0 + 0x9D0]
	0x03471B98 BL 0x1C16CF4
	0x03471B9C ADRP X0, 0xC85000
	0x03471BA0 LDR X0, [X0 + 0x1D8]
	0x03471BA4 BL 0x1C16CF4
	0x03471BA8 ADRP X0, 0xC85000
	0x03471BAC LDR X0, [X0 + 0x1E0]
	0x03471BB0 BL 0x1C16CF4
	0x03471BB4 ADRP X0, 0xC85000
	0x03471BB8 LDR X0, [X0 + 0x1E8]
	0x03471BBC BL 0x1C16CF4
	0x03471BC0 ADRP X0, 0xC85000
	0x03471BC4 LDR X0, [X0 + 0x1F0]
	0x03471BC8 BL 0x1C16CF4
	0x03471BCC ADRP X0, 0xC85000
	0x03471BD0 LDR X0, [X0 + 0x1F8]
	0x03471BD4 BL 0x1C16CF4
	0x03471BD8 ADRP X0, 0xC85000
	0x03471BDC LDR X0, [X0 + 0x200]
	0x03471BE0 BL 0x1C16CF4
	0x03471BE4 ADRP X0, 0xC84000
	0x03471BE8 LDR X0, [X0 + 0x570]
	0x03471BEC BL 0x1C16CF4
	0x03471BF0 ADRP X0, 0xC85000
	0x03471BF4 LDR X0, [X0 + 0x208]
	0x03471BF8 BL 0x1C16CF4
	0x03471BFC ADRP X0, 0xC85000
	0x03471C00 LDR X0, [X0 + 0x210]
	0x03471C04 BL 0x1C16CF4
	0x03471C08 ADRP X0, 0xC85000
	0x03471C0C LDR X0, [X0 + 0x218]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF6D000
	011 Move W8, [X20+2029]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCC0000
	018 Move X0, [X0+1944]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC0000
	021 Move X0, [X0+1952]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBF000
	024 Move X0, [X0+1320]
	025 Call 0x1C17CF4
	026 Move X0, 0xCBE000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move X0, 0xC85000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC84000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC0000
	036 Move X0, [X0+1792]
	037 Call 0x1C17CF4
	038 Move X0, 0xC84000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBF000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBF000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC0000
	048 Move X0, [X0+1800]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC0000
	051 Move X0, [X0+1808]
	052 Call 0x1C17CF4
	053 Move X0, 0xC84000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC84000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC0000
	060 Move X0, [X0+1816]
	061 Call 0x1C17CF4
	062 Move X0, 0xC84000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC0000
	066 Move X0, [X0+1824]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC0000
	069 Move X0, [X0+1960]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC0000
	072 Move X0, [X0+1968]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2029], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCBE000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1528]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+120]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+120], X31
	092 Move [X19], W9
	093 Move X8, [X19+112]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+112], X31
	099 Move [X19], W9
	100 Move X8, 0xC84000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCC0000
	106 Move X8, [X8+1968]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass127_0..ctor, X0
	112 Move [X19+104], X21
	113 Compare X21, 0
	114 JumpIfEqual {386}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move V0, [X19+3]
	120 Move [X21+2], V0
	121 Move V0, [X19+4]
	122 Move [X21+3], V0
	123 Move W8, [X19+80]
	124 Move [X21+64], W8
	125 Move X8, [X19+88]
	126 Move [X21+72], X8
	127 Compare X20, 0
	128 JumpIfEqual {387}
	129 Move W8, [X20+16]
	130 Compare W8, 0
	131 JumpIfEqual {269}
	132 Move X8, [X19+104]
	133 Compare X8, 0
	134 JumpIfEqual {388}
	135 Move X21, [X8+24]
	136 Compare X21, 0
	137 JumpIfEqual {389}
	138 Move X23, 0xC84000
	139 Move X8, [X21]
	140 Move X23, [X23+2072]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X23]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 7
	152 Move X0, X21
	153 Call 0x1C5D788
	154 Move W9, [X10]
	155 Add W9, W9, 7
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X21
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X1, X31
	163 Call String.IsNullOrEmpty, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {267}
	168 Move X8, [X19+104]
	169 Compare X8, 0
	170 JumpIfEqual {390}
	171 Move X9, 0xC84000
	172 Move X9, [X9+2544]
	173 Move X21, [X8+24]
	174 Move X0, [X9]
	175 Move W9, [X0+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X31
	180 Call DateTime.get_UtcNow
	181 Move X22, 0xC85000
	182 Move X22, [X22+2576]
	183 Move X8, X0
	184 Move [X31+40], X8
	185 Move X0, [X22]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {191}
	189 Call 0x1C17DFC
	190 Move X0, [X22]
	191 Move X8, [X0+184]
	192 Move X1, [X8]
	193 Add X0, X31, 40
	194 Move X2, X31
	195 Call DateTime.Add, X0, X1
	196 Compare X21, 0
	197 JumpIfEqual {391}
	198 Move X8, [X21]
	199 Move X1, [X23]
	200 Move X22, X0
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 11
	211 Move X0, X21
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 11
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X2, [X0+8]
	219 Move X0, X21
	220 Move X1, X22
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {267}
	226 Move X8, [X19+104]
	227 Compare X8, 0
	228 JumpIfEqual {392}
	229 Move X1, [X8+24]
	230 Move X3, [X19+96]
	231 Move X4, [X8+72]
	232 Move X0, X20
	233 Move X2, X31
	234 Move X5, X31
	235 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	236 Compare X0, 0
	237 JumpIfEqual {393}
	238 Move X8, 0xC84000
	239 Move X8, [X8+2112]
	240 Move X1, [X8]
	241 Call Task`1<Object>.GetAwaiter, X0
	242 Move X8, 0xC84000
	243 Move X8, [X8+2104]
	244 Move [X31+32], X0
	245 Move X1, [X8]
	246 Add X0, X31, 32
	247 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {100}
	252 Move [X19], W31
	253 Move X8, [X31+32]
	254 Move [X19+112], X8
	255 Move X0, [X25]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X8, 0xCC0000
	261 Move X8, [X8+1952]
	262 Add X0, X19, 8
	263 Move X3, [X8]
	264 Add X1, X31, 32
	265 Move X2, X19
	266 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	267 Compare X20, 0
	268 JumpIfEqual {385}
	269 Move X8, 0xCC0000
	270 Move X8, [X8+1792]
	271 Move X21, [X20+88]
	272 Move X23, [X19+104]
	273 Move X0, [X8]
	274 Call 0x1C17F10
	275 Move X8, 0xCC0000
	276 Move X8, [X8+1960]
	277 Move X22, X0
	278 Move X2, [X8]
	279 Move X1, X23
	280 Move X3, X31
	281 Call Func`1<Object>..ctor, X0, X1, X2
	282 Move X8, [X19+104]
	283 Compare X8, 0
	284 JumpIfEqual {382}
	285 Move X9, 0xCBF000
	286 Move X23, [X19+96]
	287 Move X9, [X9+1992]
	288 Compare X23, 0
	289 JumpIfNotEqual {291}
	290 Move X23, [X20+24]
	291 Move X20, [X8+24]
	292 Move X1, [X8+72]
	293 Move X2, [X9]
	294 Move [X31+8], X31
	295 Move [X31+16], X31
	296 Add X0, X31, 8
	297 Call Nullable`1<CancellationToken>..ctor, X0, X1
	298 Move X8, 0xCBF000
	299 Move X8, [X8+2000]
	300 Move X0, [X8]
	301 Call 0x1C17F10
	302 Move X3, [X31+8]
	303 Move X4, [X31+16]
	304 Move X24, X0
	305 Move X1, X20
	306 Move X2, X23
	307 Call RetryHistory..ctor, X0, X1, X2, X3
	308 Compare X21, 0
	309 JumpIfEqual {383}
	310 Move X8, 0xCC0000
	311 Move X8, [X8+1800]
	312 Move X3, [X8]
	313 Move X0, X21
	314 Move X1, X22
	315 Move X2, X24
	316 Call 0x2244230, X0, X1, X2
	317 Compare X0, 0
	318 JumpIfEqual {384}
	319 Move X8, 0xCC0000
	320 Move X8, [X8+1824]
	321 Move X1, [X8]
	322 Call Task`1<Object>.GetAwaiter, X0
	323 Move X8, 0xCC0000
	324 Move X8, [X8+1816]
	325 Move [X31+24], X0
	326 Move X1, [X8]
	327 Add X0, X31, 24
	328 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {356}
	333 Move X8, 0xCC0000
	334 Move X8, [X8+1808]
	335 Add X0, X31, 24
	336 Move X1, [X8]
	337 Call TaskAwaiter`1<Object>.GetResult, X0
	338 Move TEMP, 1
	339 Not TEMP
	340 Move W8, TEMP
	341 Move [X19], W8
	342 Move [X19+104], X31
	343 Move X20, X0
	344 Move X0, [X25]
	345 Move X21, 0xCBF000
	346 Add X19, X19, 8
	347 Move W8, [X0+224]
	348 Move X21, [X21+1320]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1C17DFC
	352 Move X2, [X21]
	353 Move X0, X19
	354 Move X1, X20
	355 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	356 Move W8, 1
	357 Move [X19], W8
	358 Move X8, [X31+24]
	359 Move [X19+120], X8
	360 Move X0, [X25]
	361 Move W8, [X0+224]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X8, 0xCC0000
	366 Move X8, [X8+1944]
	367 Add X0, X19, 8
	368 Move X3, [X8]
	369 Add X1, X31, 24
	370 Move X2, X19
	371 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	372 Move X20, [X31+96]
	373 Move X19, [X31+104]
	374 Move X22, [X31+80]
	375 Move X21, [X31+88]
	376 Move X24, [X31+64]
	377 Move X23, [X31+72]
	378 Move X30, [X31+48]
	379 Move X25, [X31+56]
	380 Add X31, X31, 112
	381 Return 
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Move X20, X0
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X0, X20
	397 Call 0x3EB2AD0
	398 Move X20, X0
	399 Move X0, 0xC83000
	400 Move X0, [X0+2000]
	401 Call 0x1C17D08
	402 Move X8, [X20]
	403 Move X1, [X8]
	404 Call 0x1C18270
	405 Move TEMP, X0
	406 And TEMP, TEMP, 1
	407 Compare TEMP, 1
	408 JumpIfNotEqual {430}
	409 Move X20, [X20]
	410 Call 0x3EB2AE0
	411 Move TEMP, 1
	412 Not TEMP
	413 Move W8, TEMP
	414 Move [X19+104], X31
	415 Move [X19+8], W8
	416 Move X0, 0xCBE000
	417 Move X0, [X0+1528]
	418 Call 0x1C17D08
	419 Move W8, [X0+224]
	420 Compare W8, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move X0, 0xCBF000
	424 Move X0, [X0+1352]
	425 Call 0x1C17D08
	426 Move X2, X0
	427 Move X0, X19
	428 Move X1, X20
	429 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	430 Move W0, 8
	431 Call 0x3EB2AF0
	432 Move X8, [X20]
	433 Move [X0], X8
	434 Move X1, 0xA44000
	435 Add X1, X1, 3672
	436 Move X2, X31
	437 Call 0x3EB2B00
	438 Move X20, X0
	439 Call 0x3EB2AE0
	440 Move X0, X20
	441 Call 0x1D2D690
	442 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03471C10 BL 0x1C16CF4
	0x03471C14 ADRP X0, 0xC85000
	0x03471C18 LDR X0, [X0 + 0x220]
	0x03471C1C BL 0x1C16CF4
	0x03471C20 MOVZ W8, 0x1
	0x03471C24 STRB W8, [X20 + 0x7F9]
	0x03471C28 STR X31, [X31 + 0x28]
	0x03471C2C STR X31, [X31 + 0x18]
	0x03471C30 ADRP X26, 0xC85000
	0x03471C34 LDR W24, [X19]
	0x03471C38 LDR X27, [X19 + 0x58]
	0x03471C3C LDR X26, [X26 + 0x130]
	0x03471C40 CBZ W24, 0x3471C64
	0x03471C44 CMP W24, 0x1
	0x03471C48 B.NE 0x3471C7C
	0x03471C4C LDR X8, [X19 + 0x70]
	0x03471C50 MOVN W9, 0x0
	0x03471C54 STR X8, [X31 + 0x18]
	0x03471C58 STR X31, [X19 + 0x70]
	0x03471C5C STR W9, [X19]
	0x03471C60 B 0x34721E4
	0x03471C64 LDR X8, [X19 + 0x68]
	0x03471C68 MOVN W9, 0x0
	0x03471C6C STR X8, [X31 + 0x28]
	0x03471C70 STR X31, [X19 + 0x68]
	0x03471C74 STR W9, [X19]
	0x03471C78 B 0x3472188
	0x03471C7C ADRP X8, 0xC85000
	0x03471C80 LDR X8, [X8 + 0x180]
	0x03471C84 LDR X0, [X8]
	0x03471C88 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF6D000
	007 Move X21, 0xCBE000
	008 Move W8, [X22+2030]
	009 Move X21, [X21+1528]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCBF000
	017 Move X0, [X0+1360]
	018 Call 0x1C17CF4
	019 Move X0, 0xCBE000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2030], W8
	024 Move X0, [X21]
	025 Move X21, 0xCBF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1360]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

