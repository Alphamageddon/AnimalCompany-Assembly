Type: Nakama.Client/<ListLeaderboardRecordsAroundOwnerAsync>d__87

Method: System.Void MoveNext()

Disassembly:
	0x0345ED14 ADD X8, X8, X9, 0x4, LSL
	0x0345ED18 ADD X0, X8, 0x138
	0x0345ED1C LDP X8, X1, [X0]
	0x0345ED20 MOV X0, X21
	0x0345ED24 BLR X8
	0x0345ED28 CBNZ X24, 0x345EDC8
	0x0345ED2C CMP W22, 0x1
	0x0345ED30 B.NE 0x345EDE8
	0x0345ED34 MOV X0, X23
	0x0345ED38 BL 0x3EB1AD0
	0x0345ED3C MOV X20, X0
	0x0345ED40 ADRP X0, 0xC95000
	0x0345ED44 LDR X0, [X0 + 0x7D0]
	0x0345ED48 BL 0x1C16D08
	0x0345ED4C LDR X8, [X20]
	0x0345ED50 LDR X1, [X8]
	0x0345ED54 BL 0x1C17270
	0x0345ED58 TBZ X0, 0x0, 0x345EDA8
	0x0345ED5C LDR X20, [X20]
	0x0345ED60 BL 0x3EB1AE0
	0x0345ED64 MOVN W8, 0x1
	0x0345ED68 STR X31, [X19 + 0x70]
	0x0345ED6C STR W8, [X19], #0x8
	0x0345ED70 ADRP X0, 0xCD0000
	0x0345ED74 LDR X0, [X0 + 0x5D8]
	0x0345ED78 BL 0x1C16D08
	0x0345ED7C LDR W8, [X0 + 0xE0]
	0x0345ED80 CBNZ W8, 0x345ED88
	0x0345ED84 BL 0x1C16DFC
	0x0345ED88 ADRP X0, 0xCD1000
	0x0345ED8C LDR X0, [X0 + 0x38]
	0x0345ED90 BL 0x1C16D08
	0x0345ED94 MOV X2, X0
	0x0345ED98 MOV X0, X19
	0x0345ED9C MOV X1, X20
	0x0345EDA0 BL 0x26324C8
	0x0345EDA4 B 0x345EA34
	0x0345EDA8 MOVZ W0, 0x8
	0x0345EDAC BL 0x3EB1AF0
	0x0345EDB0 LDR X8, [X20]
	0x0345EDB4 STR X8, [X0]
	0x0345EDB8 ADRP X1, 0xA56000
	0x0345EDBC ADD X1, X1, 0xE58
	0x0345EDC0 MOV X2, X31
	0x0345EDC4 BL 0x3EB1B00
	0x0345EDC8 MOV X0, X24
	0x0345EDCC BL 0x1C16F18
	0x0345EDD0 MOV X22, X1
	0x0345EDD4 MOV X23, X0
	0x0345EDD8 TBNZ X25, 0x1F, 0x345ECC4
	0x0345EDDC B 0x345ED28
	0x0345EDE0 MOV X23, X0
	0x0345EDE4 BL 0x3EB1AE0
	0x0345EDE8 MOV X0, X23
	0x0345EDEC BL 0x1D2C690
	0x0345EDF0 BL 0x1990590
	0x0345EDF4 STR X30, [X31 - 0x30]!
	0x0345EDF8 STP X22, X21, [X31 + 0x10]
	0x0345EDFC STP X20, X19, [X31 + 0x20]
	0x0345EE00 ADRP X22, 0xF7F000
	0x0345EE04 ADRP X21, 0xCD0000
	0x0345EE08 LDRB W8, [X22 + 0x7AA]
	0x0345EE0C LDR X21, [X21 + 0x5D8]
	0x0345EE10 MOV X19, X1
	0x0345EE14 MOV X20, X0
	0x0345EE18 TBNZ X8, 0x0, 0x345EE3C
	0x0345EE1C ADRP X0, 0xCD1000
	0x0345EE20 LDR X0, [X0 + 0x40]
	0x0345EE24 BL 0x1C16CF4
	0x0345EE28 ADRP X0, 0xCD0000
	0x0345EE2C LDR X0, [X0 + 0x5D8]
	0x0345EE30 BL 0x1C16CF4
	0x0345EE34 MOVZ W8, 0x1
	0x0345EE38 STRB W8, [X22 + 0x7AA]
	0x0345EE3C LDR X0, [X21]
	0x0345EE40 ADRP X21, 0xCD1000
	0x0345EE44 LDR W8, [X0 + 0xE0]
	0x0345EE48 LDR X21, [X21 + 0x40]
	0x0345EE4C CBNZ W8, 0x345EE54
	0x0345EE50 BL 0x1C16DFC
	0x0345EE54 LDR X2, [X21]
	0x0345EE58 ADD X0, X20, 0x8
	0x0345EE5C MOV X1, X19
	0x0345EE60 LDP X20, X19, [X31 + 0x20]
	0x0345EE64 LDP X22, X21, [X31 + 0x10]
	0x0345EE68 LDR X30, [X31], #0x30
	0x0345EE6C B 0x2632228
	0x0345EE70 SUB X31, X31, 0x90
	0x0345EE74 STP X29, X30, [X31 + 0x30]
	0x0345EE78 STP X28, X27, [X31 + 0x40]
	0x0345EE7C STP X26, X25, [X31 + 0x50]
	0x0345EE80 STP X24, X23, [X31 + 0x60]
	0x0345EE84 STP X22, X21, [X31 + 0x70]
	0x0345EE88 STP X20, X19, [X31 + 0x80]
	0x0345EE8C ADRP X20, 0xF7F000
	0x0345EE90 LDRB W8, [X20 + 0x7AB]
	0x0345EE94 MOV X19, X0
	0x0345EE98 TBNZ X8, 0x0, 0x345EFDC
	0x0345EE9C ADRP X0, 0xCD2000
	0x0345EEA0 LDR X0, [X0 + 0xE0]
	0x0345EEA4 BL 0x1C16CF4
	0x0345EEA8 ADRP X0, 0xCD2000
	0x0345EEAC LDR X0, [X0 + 0x150]
	0x0345EEB0 BL 0x1C16CF4
	0x0345EEB4 ADRP X0, 0xCD2000
	0x0345EEB8 LDR X0, [X0 + 0x158]
	0x0345EEBC BL 0x1C16CF4
	0x0345EEC0 ADRP X0, 0xCD1000
	0x0345EEC4 LDR X0, [X0]
	0x0345EEC8 BL 0x1C16CF4
	0x0345EECC ADRP X0, 0xCD0000
	0x0345EED0 LDR X0, [X0 + 0x5D8]
	0x0345EED4 BL 0x1C16CF4
	0x0345EED8 ADRP X0, 0xC97000
	0x0345EEDC LDR X0, [X0 + 0xA10]
	0x0345EEE0 BL 0x1C16CF4
	0x0345EEE4 ADRP X0, 0xC96000
	0x0345EEE8 LDR X0, [X0 + 0x9F0]
	0x0345EEEC BL 0x1C16CF4
	0x0345EEF0 ADRP X0, 0xCD2000
	0x0345EEF4 LDR X0, [X0 + 0xF8]
	0x0345EEF8 BL 0x1C16CF4
	0x0345EEFC ADRP X0, 0xCD2000
	0x0345EF00 LDR X0, [X0 + 0x100]
	0x0345EF04 BL 0x1C16CF4
	0x0345EF08 ADRP X0, 0xCD2000
	0x0345EF0C LDR X0, [X0 + 0x108]
	0x0345EF10 BL 0x1C16CF4
	0x0345EF14 ADRP X0, 0xC95000
	0x0345EF18 LDR X0, [X0 + 0xE00]
	0x0345EF1C BL 0x1C16CF4
	0x0345EF20 ADRP X0, 0xCD2000
	0x0345EF24 LDR X0, [X0 + 0x110]
	0x0345EF28 BL 0x1C16CF4
	0x0345EF2C ADRP X0, 0xCD2000
	0x0345EF30 LDR X0, [X0 + 0x118]
	0x0345EF34 BL 0x1C16CF4
	0x0345EF38 ADRP X0, 0xC95000
	0x0345EF3C LDR X0, [X0 + 0xE18]
	0x0345EF40 BL 0x1C16CF4
	0x0345EF44 ADRP X0, 0xC96000
	0x0345EF48 LDR X0, [X0 + 0x818]
	0x0345EF4C BL 0x1C16CF4
	0x0345EF50 ADRP X0, 0xCD1000
	0x0345EF54 LDR X0, [X0 + 0x7C8]
	0x0345EF58 BL 0x1C16CF4
	0x0345EF5C ADRP X0, 0xCD1000
	0x0345EF60 LDR X0, [X0 + 0x7D0]
	0x0345EF64 BL 0x1C16CF4
	0x0345EF68 ADRP X0, 0xCD2000
	0x0345EF6C LDR X0, [X0 + 0x120]
	0x0345EF70 BL 0x1C16CF4
	0x0345EF74 ADRP X0, 0xC96000
	0x0345EF78 LDR X0, [X0 + 0x830]
	0x0345EF7C BL 0x1C16CF4
	0x0345EF80 ADRP X0, 0xCD2000
	0x0345EF84 LDR X0, [X0 + 0x128]
	0x0345EF88 BL 0x1C16CF4
	0x0345EF8C ADRP X0, 0xC96000
	0x0345EF90 LDR X0, [X0 + 0x838]
	0x0345EF94 BL 0x1C16CF4
	0x0345EF98 ADRP X0, 0xCD2000
	0x0345EF9C LDR X0, [X0 + 0x130]
	0x0345EFA0 BL 0x1C16CF4
	0x0345EFA4 ADRP X0, 0xC96000
	0x0345EFA8 LDR X0, [X0 + 0x840]
	0x0345EFAC BL 0x1C16CF4
	0x0345EFB0 ADRP X0, 0xCD2000
	0x0345EFB4 LDR X0, [X0 + 0x138]
	0x0345EFB8 BL 0x1C16CF4
	0x0345EFBC ADRP X0, 0xCD2000
	0x0345EFC0 LDR X0, [X0 + 0x160]
	0x0345EFC4 BL 0x1C16CF4
	0x0345EFC8 ADRP X0, 0xCD2000
	0x0345EFCC LDR X0, [X0 + 0x168]
	0x0345EFD0 BL 0x1C16CF4
	0x0345EFD4 MOVZ W8, 0x1
	0x0345EFD8 STRB W8, [X20 + 0x7AB]
	0x0345EFDC STP X31, X31, [X31 + 0x20]
	0x0345EFE0 STR X31, [X31 + 0x18]
	0x0345EFE4 LDR W25, [X19]
	0x0345EFE8 LDR X20, [X19 + 0x20]
	0x0345EFEC CBZ W25, 0x345F010
	0x0345EFF0 CMP W25, 0x1
	0x0345EFF4 B.NE 0x345F03C
	0x0345EFF8 LDR X8, [X19 + 0x80]
	0x0345EFFC MOVN W25, 0x0
	0x0345F000 STR X8, [X31 + 0x18]
	0x0345F004 STR X31, [X19 + 0x80]
	0x0345F008 STR W25, [X19]
	0x0345F00C B 0x345F380
	0x0345F010 LDR X8, [X19 + 0x78]
	0x0345F014 MOVN W25, 0x0
	0x0345F018 STR X8, [X31 + 0x20]
	0x0345F01C STR X31, [X19 + 0x78]
	0x0345F020 STR W25, [X19]
	0x0345F024 ADRP X8, 0xC95000
	0x0345F028 LDR X8, [X8 + 0x830]
	0x0345F02C ADD X0, X31, 0x20
	0x0345F030 LDR X1, [X8]
	0x0345F034 BL 0x2677474
	0x0345F038 B 0x345F29C
	0x0345F03C ADRP X8, 0xCD1000
	0x0345F040 LDR X8, [X8 + 0x168]
	0x0345F044 LDR X0, [X8]
	0x0345F048 BL 0x1C16F10
	0x0345F04C MOV X21, X0
	0x0345F050 MOV X1, X31
	0x0345F054 BL 0x344AD48
	0x0345F058 STR X21, [X19 + 0x70]
	0x0345F05C CBZ X21, 0x345FC1C
	0x0345F060 LDR X8, [X19 + 0x20]
	0x0345F064 STR X8, [X21 + 0x10]
	0x0345F068 LDR X8, [X19 + 0x28]
	0x0345F06C STR X8, [X21 + 0x18]
	0x0345F070 LDR X8, [X19 + 0x30]
	0x0345F074 STR X8, [X21 + 0x20]
	0x0345F078 LDR X8, [X19 + 0x38]
	0x0345F07C STR X8, [X21 + 0x28]
	0x0345F080 LDR W8, [X19 + 0x40]
	0x0345F084 STR W8, [X21 + 0x30]
	0x0345F088 LDR X8, [X19 + 0x48]
	0x0345F08C STR X8, [X21 + 0x38]
	0x0345F090 LDR V0, [X19 + 0x5]
	0x0345F094 STR V0, [X21 + 0x4]
	0x0345F098 LDR X8, [X19 + 0x70]
	0x0345F09C CBZ X8, 0x345FC20
	0x0345F0A0 LDR X9, [X19 + 0x60]
	0x0345F0A4 STR X9, [X8 + 0x50]
	0x0345F0A8 CBZ X20, 0x345FC24
	0x0345F0AC LDRB W8, [X20 + 0x10]
	0x0345F0B0 CBZ W8, 0x345F2A0
	0x0345F0B4 LDR X8, [X19 + 0x70]
	0x0345F0B8 CBZ X8, 0x345FC28
	0x0345F0BC LDR X21, [X8 + 0x18]
	0x0345F0C0 CBZ X21, 0x345FC2C
	0x0345F0C4 ADRP X23, 0xC95000
	0x0345F0C8 LDR X8, [X21]
	0x0345F0CC LDR X23, [X23 + 0x818]
	0x0345F0D0 LDRH W9, [X8 + 0x12E]
	0x0345F0D4 LDR X1, [X23]
	0x0345F0D8 CBZ X9, 0x345F0FC
	0x0345F0DC LDR X10, [X8 + 0xB0]
	0x0345F0E0 ADD X10, X10, 0x8
	0x0345F0E4 LDUR X11, [X10 - 0x8]
	0x0345F0E8 CMP X11, X1
	0x0345F0EC B.EQ 0x345F10C
	0x0345F0F0 SUBS X9, X9, 0x1
	0x0345F0F4 ADD X10, X10, 0x10
	0x0345F0F8 B.NE 0x345F0E4
	0x0345F0FC MOVZ W2, 0x7
	0x0345F100 MOV X0, X21
	0x0345F104 BL 0x1C5C788
	0x0345F108 B 0x345F11C
	0x0345F10C LDR W9, [X10]
	0x0345F110 ADD W9, W9, 0x7
	0x0345F114 ADD X8, X8, W9, 0x4, SXTW
	0x0345F118 ADD X0, X8, 0x138
	0x0345F11C LDP X8, X1, [X0]
	0x0345F120 MOV X0, X21
	0x0345F124 BLR X8
	0x0345F128 MOV X1, X31
	0x0345F12C BL 0x32277A8
	0x0345F130 TBNZ X0, 0x0, 0x345F29C
	0x0345F134 LDR X8, [X19 + 0x70]
	0x0345F138 CBZ X8, 0x345FC30
	0x0345F13C ADRP X9, 0xC95000
	0x0345F140 LDR X9, [X9 + 0x9F0]
	0x0345F144 LDR X21, [X8 + 0x18]
	0x0345F148 LDR X0, [X9]
	0x0345F14C LDR W9, [X0 + 0xE0]
	0x0345F150 CBNZ W9, 0x345F158
	0x0345F154 BL 0x1C16DFC
	0x0345F158 MOV X0, X31
	0x0345F15C BL 0x33616A4
	0x0345F160 ADRP X22, 0xC96000
	0x0345F164 LDR X22, [X22 + 0xA10]
	0x0345F168 MOV X8, X0
	0x0345F16C STR X8, [X31 + 0x28]
	0x0345F170 LDR X0, [X22]
	0x0345F174 LDR W8, [X0 + 0xE0]
	0x0345F178 CBNZ W8, 0x345F184
	0x0345F17C BL 0x1C16DFC
	0x0345F180 LDR X0, [X22]
	0x0345F184 LDR X8, [X0 + 0xB8]
	0x0345F188 LDR X1, [X8]
	0x0345F18C ADD X0, X31, 0x28
	0x0345F190 MOV X2, X31
	0x0345F194 BL 0x335FC68
	0x0345F198 CBZ X21, 0x345FC34
	0x0345F19C LDR X8, [X21]
	0x0345F1A0 LDR X1, [X23]
	0x0345F1A4 MOV X22, X0
	0x0345F1A8 LDRH W9, [X8 + 0x12E]
	0x0345F1AC CBZ X9, 0x345F1D0
	0x0345F1B0 LDR X10, [X8 + 0xB0]
	0x0345F1B4 ADD X10, X10, 0x8
	0x0345F1B8 LDUR X11, [X10 - 0x8]
	0x0345F1BC CMP X11, X1
	0x0345F1C0 B.EQ 0x345F1E0
	0x0345F1C4 SUBS X9, X9, 0x1
	0x0345F1C8 ADD X10, X10, 0x10
	0x0345F1CC B.NE 0x345F1B8
	0x0345F1D0 MOVZ W2, 0xB
	0x0345F1D4 MOV X0, X21
	0x0345F1D8 BL 0x1C5C788
	0x0345F1DC B 0x345F1F0
	0x0345F1E0 LDR W9, [X10]
	0x0345F1E4 ADD W9, W9, 0xB
	0x0345F1E8 ADD X8, X8, W9, 0x4, SXTW
	0x0345F1EC ADD X0, X8, 0x138
	0x0345F1F0 LDP X8, X2, [X0]
	0x0345F1F4 MOV X0, X21
	0x0345F1F8 MOV X1, X22
	0x0345F1FC BLR X8
	0x0345F200 TBZ X0, 0x0, 0x345F29C
	0x0345F204 LDR X8, [X19 + 0x70]
	0x0345F208 CBZ X8, 0x345FC38
	0x0345F20C LDR X1, [X8 + 0x18]
	0x0345F210 LDR X3, [X19 + 0x68]
	0x0345F214 LDR X4, [X8 + 0x50]
	0x0345F218 MOV X0, X20
	0x0345F21C MOV X2, X31
	0x0345F220 MOV X5, X31
	0x0345F224 BL 0x34440A8
	0x0345F228 CBZ X0, 0x345FC3C
	0x0345F22C ADRP X8, 0xC95000
	0x0345F230 LDR X8, [X8 + 0x840]
	0x0345F234 LDR X1, [X8]
	0x0345F238 BL 0x269F5D0
	0x0345F23C ADRP X8, 0xC95000
	0x0345F240 LDR X8, [X8 + 0x838]
	0x0345F244 STR X0, [X31 + 0x20]
	0x0345F248 LDR X1, [X8]
	0x0345F24C ADD X0, X31, 0x20
	0x0345F250 BL 0x2677430
	0x0345F254 TBNZ X0, 0x0, 0x345F024
	0x0345F258 STR W31, [X19]
	0x0345F25C LDR X8, [X31 + 0x20]
	0x0345F260 STR X8, [X19 + 0x78]
	0x0345F264 ADRP X8, 0xCCF000
	0x0345F268 LDR X8, [X8 + 0x5D8]
	0x0345F26C LDR X0, [X8]
	0x0345F270 LDR W8, [X0 + 0xE0]
	0x0345F274 CBNZ W8, 0x345F27C
	0x0345F278 BL 0x1C16DFC
	0x0345F27C ADRP X8, 0xCD1000
	0x0345F280 LDR X8, [X8 + 0x158]
	0x0345F284 ADD X0, X19, 0x8
	0x0345F288 LDR X3, [X8]
	0x0345F28C ADD X1, X31, 0x20
	0x0345F290 MOV X2, X19
	0x0345F294 BL 0x1FBBC9C
	0x0345F298 B 0x345FB98
	0x0345F29C CBZ X20, 0x345FC08
	0x0345F2A0 ADRP X8, 0xCD1000
	0x0345F2A4 LDR X8, [X8 + 0xF8]
	0x0345F2A8 LDR X21, [X20 + 0x58]
	0x0345F2AC LDR X23, [X19 + 0x70]
	0x0345F2B0 LDR X0, [X8]
	0x0345F2B4 BL 0x1C16F10
	0x0345F2B8 ADRP X8, 0xCD1000
	0x0345F2BC LDR X8, [X8 + 0x160]
	0x0345F2C0 MOV X22, X0
	0x0345F2C4 LDR X2, [X8]
	0x0345F2C8 MOV X1, X23
	0x0345F2CC MOV X3, X31
	0x0345F2D0 BL 0x2D27AA8
	0x0345F2D4 LDR X8, [X19 + 0x70]
	0x0345F2D8 CBZ X8, 0x345FBFC
	0x0345F2DC ADRP X9, 0xCD0000
	0x0345F2E0 LDR X23, [X19 + 0x68]
	0x0345F2E4 LDR X24, [X8 + 0x18]
	0x0345F2E8 LDR X9, [X9 + 0x7C8]
	0x0345F2EC CBNZ X23, 0x345F2F4
	0x0345F2F0 LDR X23, [X20 + 0x18]
	0x0345F2F4 LDR X1, [X8 + 0x50]
	0x0345F2F8 LDR X2, [X9]
	0x0345F2FC STP X31, X31, [X31 + 0x8]
	0x0345F300 ADD X0, X31, 0x8
	0x0345F304 BL 0x242E368
	0x0345F308 ADRP X8, 0xCD0000
	0x0345F30C LDR X8, [X8 + 0x7D0]
	0x0345F310 LDR X0, [X8]
	0x0345F314 BL 0x1C16F10
	0x0345F318 LDP X3, X4, [X31 + 0x8]
	0x0345F31C MOV X20, X0
	0x0345F320 MOV X1, X24
	0x0345F324 MOV X2, X23
	0x0345F328 MOV X5, X31
	0x0345F32C BL 0x3465404
	0x0345F330 CBZ X21, 0x345FC00
	0x0345F334 ADRP X8, 0xCD1000
	0x0345F338 LDR X8, [X8 + 0x120]
	0x0345F33C LDR X3, [X8]
	0x0345F340 MOV X0, X21
	0x0345F344 MOV X1, X22
	0x0345F348 MOV X2, X20
	0x0345F34C BL 0x2243230
	0x0345F350 CBZ X0, 0x345FC04
	0x0345F354 ADRP X8, 0xCD1000
	0x0345F358 LDR X8, [X8 + 0x138]
	0x0345F35C LDR X1, [X8]
	0x0345F360 BL 0x269F5D0
	0x0345F364 ADRP X8, 0xCD1000
	0x0345F368 LDR X8, [X8 + 0x130]
	0x0345F36C STR X0, [X31 + 0x18]
	0x0345F370 LDR X1, [X8]
	0x0345F374 ADD X0, X31, 0x18
	0x0345F378 BL 0x2677430
	0x0345F37C TBZ X0, 0x0, 0x345F3E4
	0x0345F380 ADRP X8, 0xCD1000
	0x0345F384 LDR X8, [X8 + 0x128]
	0x0345F388 ADD X0, X31, 0x18
	0x0345F38C LDR X1, [X8]
	0x0345F390 BL 0x2677474
	0x0345F394 MOV X20, X0
	0x0345F398 CBZ X0, 0x345FBE8
	0x0345F39C ADRP X10, 0xCD1000
	0x0345F3A0 LDR X8, [X20]
	0x0345F3A4 LDR X10, [X10 + 0x100]
	0x0345F3A8 LDRH W9, [X8 + 0x12E]
	0x0345F3AC LDR X1, [X10]
	0x0345F3B0 CBZ X9, 0x345F3D4
	0x0345F3B4 LDR X10, [X8 + 0xB0]
	0x0345F3B8 ADD X10, X10, 0x8
	0x0345F3BC LDUR X11, [X10 - 0x8]
	0x0345F3C0 CMP X11, X1
	0x0345F3C4 B.EQ 0x345F42C
	0x0345F3C8 SUBS X9, X9, 0x1
	0x0345F3CC ADD X10, X10, 0x10
	0x0345F3D0 B.NE 0x345F3BC
	0x0345F3D4 MOVZ W2, 0x4
	0x0345F3D8 MOV X0, X20
	0x0345F3DC BL 0x1C5C788
	0x0345F3E0 B 0x345F43C
	0x0345F3E4 MOVZ W8, 0x1
	0x0345F3E8 STR W8, [X19]
	0x0345F3EC LDR X8, [X31 + 0x18]
	0x0345F3F0 STR X8, [X19 + 0x80]
	0x0345F3F4 ADRP X8, 0xCCF000
	0x0345F3F8 LDR X8, [X8 + 0x5D8]
	0x0345F3FC LDR X0, [X8]
	0x0345F400 LDR W8, [X0 + 0xE0]
	0x0345F404 CBNZ W8, 0x345F40C
	0x0345F408 BL 0x1C16DFC
	0x0345F40C ADRP X8, 0xCD1000
	0x0345F410 LDR X8, [X8 + 0x150]
	0x0345F414 ADD X0, X19, 0x8
	0x0345F418 LDR X3, [X8]
	0x0345F41C ADD X1, X31, 0x18
	0x0345F420 MOV X2, X19
	0x0345F424 BL 0x1FBBC9C
	0x0345F428 B 0x345FB98
	0x0345F42C LDR W9, [X10]
	0x0345F430 ADD W9, W9, 0x4
	0x0345F434 ADD X8, X8, W9, 0x4, SXTW
	0x0345F438 ADD X0, X8, 0x138
	0x0345F43C LDP X8, X1, [X0]
	0x0345F440 MOV X0, X20
	0x0345F444 BLR X8
	0x0345F448 MOV X21, X0
	0x0345F44C CBZ X0, 0x345FBEC
	0x0345F450 ADRP X10, 0xCD1000
	0x0345F454 LDR X8, [X21]
	0x0345F458 LDR X10, [X10 + 0x110]
	0x0345F45C LDRH W9, [X8 + 0x12E]
	0x0345F460 LDR X1, [X10]
	0x0345F464 CBZ X9, 0x345F488
	0x0345F468 LDR X10, [X8 + 0xB0]
	0x0345F46C ADD X10, X10, 0x8
	0x0345F470 LDUR X11, [X10 - 0x8]
	0x0345F474 CMP X11, X1
	0x0345F478 B.EQ 0x345F498
	0x0345F47C SUBS X9, X9, 0x1
	0x0345F480 ADD X10, X10, 0x10
	0x0345F484 B.NE 0x345F470
	0x0345F488 MOV X0, X21
	0x0345F48C MOV W2, W31
	0x0345F490 BL 0x1C5C788
	0x0345F494 B 0x345F4A4
	0x0345F498 LDRSW X9, [X10]
	0x0345F49C ADD X8, X8, X9, 0x4, LSL
	0x0345F4A0 ADD X0, X8, 0x138
	0x0345F4A4 LDP X8, X1, [X0]
	0x0345F4A8 MOV X0, X21
	0x0345F4AC BLR X8
	0x0345F4B0 MOV X21, X0
	0x0345F4B4 CBZ X0, 0x345FBF0
	0x0345F4B8 ADRP X24, 0xC94000
	0x0345F4BC ADRP X28, 0xCD1000
	0x0345F4C0 ADRP X29, 0xC95000
	0x0345F4C4 ADRP X26, 0xCD1000
	0x0345F4C8 ADRP X27, 0xCD1000
	0x0345F4CC LDR X24, [X24 + 0xE18]
	0x0345F4D0 LDR X28, [X28 + 0x118]
	0x0345F4D4 LDR X29, [X29 + 0x818]
	0x0345F4D8 LDR X26, [X26 + 0x108]
	0x0345F4DC LDR X27, [X27 + 0xE0]
	0x0345F4E0 LDR X8, [X21]
	0x0345F4E4 LDR X1, [X24]
	0x0345F4E8 LDRH W9, [X8 + 0x12E]
	0x0345F4EC CBZ X9, 0x345F510
	0x0345F4F0 LDR X10, [X8 + 0xB0]
	0x0345F4F4 ADD X10, X10, 0x8
	0x0345F4F8 LDUR X11, [X10 - 0x8]
	0x0345F4FC CMP X11, X1
	0x0345F500 B.EQ 0x345F520
	0x0345F504 SUBS X9, X9, 0x1
	0x0345F508 ADD X10, X10, 0x10
	0x0345F50C B.NE 0x345F4F8
	0x0345F510 MOV X0, X21
	0x0345F514 MOV W2, W31
	0x0345F518 BL 0x1C5C788
	0x0345F51C B 0x345F52C
	0x0345F520 LDRSW X9, [X10]
	0x0345F524 ADD X8, X8, X9, 0x4, LSL
	0x0345F528 ADD X0, X8, 0x138
	0x0345F52C LDP X8, X1, [X0]
	0x0345F530 MOV X0, X21
	0x0345F534 BLR X8
	0x0345F538 TBZ X0, 0x0, 0x345F720
	0x0345F53C LDR X8, [X21]
	0x0345F540 LDR X1, [X28]
	0x0345F544 LDRH W9, [X8 + 0x12E]
	0x0345F548 CBZ X9, 0x345F56C
	0x0345F54C LDR X10, [X8 + 0xB0]
	0x0345F550 ADD X10, X10, 0x8
	0x0345F554 LDUR X11, [X10 - 0x8]
	0x0345F558 CMP X11, X1
	0x0345F55C B.EQ 0x345F57C
	0x0345F560 SUBS X9, X9, 0x1
	0x0345F564 ADD X10, X10, 0x10
	0x0345F568 B.NE 0x345F554
	0x0345F56C MOV X0, X21
	0x0345F570 MOV W2, W31
	0x0345F574 BL 0x1C5C788
	0x0345F578 B 0x345F588
	0x0345F57C LDRSW X9, [X10]
	0x0345F580 ADD X8, X8, X9, 0x4, LSL
	0x0345F584 ADD X0, X8, 0x138
	0x0345F588 LDP X8, X1, [X0]
	0x0345F58C MOV X0, X21
	0x0345F590 BLR X8
	0x0345F594 LDR X8, [X19 + 0x70]
	0x0345F598 CBZ X8, 0x345FBC0
	0x0345F59C LDR X23, [X8 + 0x18]
	0x0345F5A0 CBZ X23, 0x345FBC4
	0x0345F5A4 LDR X8, [X23]
	0x0345F5A8 LDR X1, [X29]
	0x0345F5AC MOV X22, X0
	0x0345F5B0 LDRH W9, [X8 + 0x12E]
	0x0345F5B4 CBZ X9, 0x345F5D8
	0x0345F5B8 LDR X10, [X8 + 0xB0]
	0x0345F5BC ADD X10, X10, 0x8
	0x0345F5C0 LDUR X11, [X10 - 0x8]
	0x0345F5C4 CMP X11, X1
	0x0345F5C8 B.EQ 0x345F5E8
	0x0345F5CC SUBS X9, X9, 0x1
	0x0345F5D0 ADD X10, X10, 0x10
	0x0345F5D4 B.NE 0x345F5C0
	0x0345F5D8 MOVZ W2, 0xA
	0x0345F5DC MOV X0, X23
	0x0345F5E0 BL 0x1C5C788
	0x0345F5E4 B 0x345F5F8
	0x0345F5E8 LDR W9, [X10]
	0x0345F5EC ADD W9, W9, 0xA
	0x0345F5F0 ADD X8, X8, W9, 0x4, SXTW
	0x0345F5F4 ADD X0, X8, 0x138
	0x0345F5F8 LDP X8, X1, [X0]
	0x0345F5FC MOV X0, X23
	0x0345F600 BLR X8
	0x0345F604 CBZ X22, 0x345FBB8
	0x0345F608 LDR X8, [X22]
	0x0345F60C LDR X1, [X26]
	0x0345F610 MOV X23, X0
	0x0345F614 LDRH W9, [X8 + 0x12E]
	0x0345F618 CBZ X9, 0x345F63C
	0x0345F61C LDR X10, [X8 + 0xB0]
	0x0345F620 ADD X10, X10, 0x8
	0x0345F624 LDUR X11, [X10 - 0x8]
	0x0345F628 CMP X11, X1
	0x0345F62C B.EQ 0x345F64C
	0x0345F630 SUBS X9, X9, 0x1
	0x0345F634 ADD X10, X10, 0x10
	0x0345F638 B.NE 0x345F624
	0x0345F63C MOVZ W2, 0x6
	0x0345F640 MOV X0, X22
	0x0345F644 BL 0x1C5C788
	0x0345F648 B 0x345F65C
	0x0345F64C LDR W9, [X10]
	0x0345F650 ADD W9, W9, 0x6
	0x0345F654 ADD X8, X8, W9, 0x4, SXTW
	0x0345F658 ADD X0, X8, 0x138
	0x0345F65C LDP X8, X1, [X0]
	0x0345F660 MOV X0, X22
	0x0345F664 BLR X8
	0x0345F668 MOV X1, X0
	0x0345F66C CBZ X23, 0x345FBBC
	0x0345F670 MOV X0, X23
	0x0345F674 MOV X2, X31
	0x0345F678 BL 0x322693C
	0x0345F67C TBZ X0, 0x0, 0x345F4E0
	0x0345F680 LDR X9, [X22]
	0x0345F684 LDR X8, [X27]
	0x0345F688 LDRB W11, [X9 + 0x130]
	0x0345F68C LDRB W10, [X8 + 0x130]
	0x0345F690 CMP W11, W10
	0x0345F694 B.CC 0x345F4E0
	0x0345F698 LDR X9, [X9 + 0xC8]
	0x0345F69C ADD X9, X9, X10, 0x3, LSL
	0x0345F6A0 LDUR X9, [X9 - 0x8]
	0x0345F6A4 CMP X9, X8
	0x0345F6A8 B.NE 0x345F4E0
	0x0345F6AC LDR X8, [X19 + 0x70]
	0x0345F6B0 CBZ X8, 0x345FBD8
	0x0345F6B4 LDR X23, [X8 + 0x18]
	0x0345F6B8 CBZ X23, 0x345FBDC
	0x0345F6BC LDR X8, [X23]
	0x0345F6C0 LDR X1, [X29]
	0x0345F6C4 LDRH W9, [X8 + 0x12E]
	0x0345F6C8 CBZ X9, 0x345F6EC
	0x0345F6CC LDR X10, [X8 + 0xB0]
	0x0345F6D0 ADD X10, X10, 0x8
	0x0345F6D4 LDUR X11, [X10 - 0x8]
	0x0345F6D8 CMP X11, X1
	0x0345F6DC B.EQ 0x345F6FC
	0x0345F6E0 SUBS X9, X9, 0x1
	0x0345F6E4 ADD X10, X10, 0x10
	0x0345F6E8 B.NE 0x345F6D4
	0x0345F6EC MOVZ W2, 0x9
	0x0345F6F0 MOV X0, X23
	0x0345F6F4 BL 0x1C5C788
	0x0345F6F8 B 0x345F70C
	0x0345F6FC LDR W9, [X10]
	0x0345F700 ADD W9, W9, 0x9
	0x0345F704 ADD X8, X8, W9, 0x4, SXTW
	0x0345F708 ADD X0, X8, 0x138
	0x0345F70C LDP X8, X1, [X0]
	0x0345F710 MOV X0, X23
	0x0345F714 BLR X8
	0x0345F718 STR X0, [X22 + 0x68]
	0x0345F71C B 0x345F4E0
	0x0345F720 MOV X24, X31
	0x0345F724 MOVZ W22, 0xB
	0x0345F728 TBZ X25, 0x1F, 0x345F790
	0x0345F72C CBZ X21, 0x345F790
	0x0345F730 ADRP X10, 0xC94000
	0x0345F734 LDR X8, [X21]
	0x0345F738 LDR X10, [X10 + 0xE00]
	0x0345F73C LDRH W9, [X8 + 0x12E]
	0x0345F740 LDR X1, [X10]
	0x0345F744 CBZ X9, 0x345F768
	0x0345F748 LDR X10, [X8 + 0xB0]
	0x0345F74C ADD X10, X10, 0x8
	0x0345F750 LDUR X11, [X10 - 0x8]
	0x0345F754 CMP X11, X1
	0x0345F758 B.EQ 0x345F778
	0x0345F75C SUBS X9, X9, 0x1
	0x0345F760 ADD X10, X10, 0x10
	0x0345F764 B.NE 0x345F750
	0x0345F768 MOV X0, X21
	0x0345F76C MOV W2, W31
	0x0345F770 BL 0x1C5C788
	0x0345F774 B 0x345F784
	0x0345F778 LDRSW X9, [X10]
	0x0345F77C ADD X8, X8, X9, 0x4, LSL
	0x0345F780 ADD X0, X8, 0x138
	0x0345F784 LDP X8, X1, [X0]
	0x0345F788 MOV X0, X21
	0x0345F78C BLR X8
	0x0345F790 CBNZ X24, 0x345FBF4
	0x0345F794 CMP W22, 0xB
	0x0345F798 B.EQ 0x345F7A0
	0x0345F79C CBNZ W22, 0x345FB98
	0x0345F7A0 LDR X8, [X20]
	0x0345F7A4 ADRP X10, 0xCD1000
	0x0345F7A8 LDRH W9, [X8 + 0x12E]
	0x0345F7AC LDR X10, [X10 + 0x100]
	0x0345F7B0 LDR X1, [X10]
	0x0345F7B4 CBZ X9, 0x345F7D8
	0x0345F7B8 LDR X10, [X8 + 0xB0]
	0x0345F7BC ADD X10, X10, 0x8
	0x0345F7C0 LDUR X11, [X10 - 0x8]
	0x0345F7C4 CMP X11, X1
	0x0345F7C8 B.EQ 0x345F7E8
	0x0345F7CC SUBS X9, X9, 0x1
	0x0345F7D0 ADD X10, X10, 0x10
	0x0345F7D4 B.NE 0x345F7C0
	0x0345F7D8 MOVZ W2, 0x1
	0x0345F7DC MOV X0, X20
	0x0345F7E0 BL 0x1C5C788
	0x0345F7E4 B 0x345F7F8
	0x0345F7E8 LDR W9, [X10]
	0x0345F7EC ADD W9, W9, 0x1
	0x0345F7F0 ADD X8, X8, W9, 0x4, SXTW
	0x0345F7F4 ADD X0, X8, 0x138
	0x0345F7F8 LDP X8, X1, [X0]
	0x0345F7FC MOV X0, X20
	0x0345F800 BLR X8
	0x0345F804 MOV X21, X0
	0x0345F808 CBZ X0, 0x345FC0C
	0x0345F80C LDR X8, [X21]
	0x0345F810 ADRP X10, 0xCD1000
	0x0345F814 LDRH W9, [X8 + 0x12E]
	0x0345F818 LDR X10, [X10 + 0x110]
	0x0345F81C LDR X1, [X10]
	0x0345F820 CBZ X9, 0x345F844
	0x0345F824 LDR X10, [X8 + 0xB0]
	0x0345F828 ADD X10, X10, 0x8
	0x0345F82C LDUR X11, [X10 - 0x8]
	0x0345F830 CMP X11, X1
	0x0345F834 B.EQ 0x345F854
	0x0345F838 SUBS X9, X9, 0x1
	0x0345F83C ADD X10, X10, 0x10
	0x0345F840 B.NE 0x345F82C
	0x0345F844 MOV X0, X21
	0x0345F848 MOV W2, W31
	0x0345F84C BL 0x1C5C788
	0x0345F850 B 0x345F860
	0x0345F854 LDRSW X9, [X10]
	0x0345F858 ADD X8, X8, X9, 0x4, LSL
	0x0345F85C ADD X0, X8, 0x138
	0x0345F860 LDP X8, X1, [X0]
	0x0345F864 MOV X0, X21
	0x0345F868 BLR X8
	0x0345F86C MOV X21, X0
	0x0345F870 CBZ X0, 0x345FC10
	0x0345F874 ADRP X24, 0xC94000
	0x0345F878 ADRP X26, 0xCD1000
	0x0345F87C ADRP X27, 0xC95000
	0x0345F880 ADRP X28, 0xCD1000
	0x0345F884 ADRP X29, 0xCD1000
	0x0345F888 LDR X24, [X24 + 0xE18]
	0x0345F88C LDR X26, [X26 + 0x118]
	0x0345F890 LDR X27, [X27 + 0x818]
	0x0345F894 LDR X28, [X28 + 0x108]
	0x0345F898 LDR X29, [X29 + 0xE0]
	0x0345F89C LDR X8, [X21]
	0x0345F8A0 LDR X1, [X24]
	0x0345F8A4 LDRH W9, [X8 + 0x12E]
	0x0345F8A8 CBZ X9, 0x345F8CC
	0x0345F8AC LDR X10, [X8 + 0xB0]
	0x0345F8B0 ADD X10, X10, 0x8
	0x0345F8B4 LDUR X11, [X10 - 0x8]
	0x0345F8B8 CMP X11, X1
	0x0345F8BC B.EQ 0x345F8DC
	0x0345F8C0 SUBS X9, X9, 0x1
	0x0345F8C4 ADD X10, X10, 0x10
	0x0345F8C8 B.NE 0x345F8B4
	0x0345F8CC MOV X0, X21
	0x0345F8D0 MOV W2, W31
	0x0345F8D4 BL 0x1C5C788
	0x0345F8D8 B 0x345F8E8
	0x0345F8DC LDRSW X9, [X10]
	0x0345F8E0 ADD X8, X8, X9, 0x4, LSL
	0x0345F8E4 ADD X0, X8, 0x138
	0x0345F8E8 LDP X8, X1, [X0]
	0x0345F8EC MOV X0, X21
	0x0345F8F0 BLR X8
	0x0345F8F4 TBZ X0, 0x0, 0x345FADC
	0x0345F8F8 LDR X8, [X21]
	0x0345F8FC LDR X1, [X26]
	0x0345F900 LDRH W9, [X8 + 0x12E]
	0x0345F904 CBZ X9, 0x345F928
	0x0345F908 LDR X10, [X8 + 0xB0]
	0x0345F90C ADD X10, X10, 0x8
	0x0345F910 LDUR X11, [X10 - 0x8]
	0x0345F914 CMP X11, X1
	0x0345F918 B.EQ 0x345F938
	0x0345F91C SUBS X9, X9, 0x1
	0x0345F920 ADD X10, X10, 0x10
	0x0345F924 B.NE 0x345F910
	0x0345F928 MOV X0, X21
	0x0345F92C MOV W2, W31
	0x0345F930 BL 0x1C5C788
	0x0345F934 B 0x345F944
	0x0345F938 LDRSW X9, [X10]
	0x0345F93C ADD X8, X8, X9, 0x4, LSL
	0x0345F940 ADD X0, X8, 0x138
	0x0345F944 LDP X8, X1, [X0]
	0x0345F948 MOV X0, X21
	0x0345F94C BLR X8
	0x0345F950 LDR X8, [X19 + 0x70]
	0x0345F954 CBZ X8, 0x345FBD0
	0x0345F958 LDR X23, [X8 + 0x18]
	0x0345F95C CBZ X23, 0x345FBD4
	0x0345F960 LDR X8, [X23]
	0x0345F964 LDR X1, [X27]
	0x0345F968 MOV X22, X0
	0x0345F96C LDRH W9, [X8 + 0x12E]
	0x0345F970 CBZ X9, 0x345F994
	0x0345F974 LDR X10, [X8 + 0xB0]
	0x0345F978 ADD X10, X10, 0x8
	0x0345F97C LDUR X11, [X10 - 0x8]
	0x0345F980 CMP X11, X1
	0x0345F984 B.EQ 0x345F9A4
	0x0345F988 SUBS X9, X9, 0x1
	0x0345F98C ADD X10, X10, 0x10
	0x0345F990 B.NE 0x345F97C
	0x0345F994 MOVZ W2, 0xA
	0x0345F998 MOV X0, X23
	0x0345F99C BL 0x1C5C788
	0x0345F9A0 B 0x345F9B4
	0x0345F9A4 LDR W9, [X10]
	0x0345F9A8 ADD W9, W9, 0xA
	0x0345F9AC ADD X8, X8, W9, 0x4, SXTW
	0x0345F9B0 ADD X0, X8, 0x138
	0x0345F9B4 LDP X8, X1, [X0]
	0x0345F9B8 MOV X0, X23
	0x0345F9BC BLR X8
	0x0345F9C0 CBZ X22, 0x345FBC8
	0x0345F9C4 LDR X8, [X22]
	0x0345F9C8 LDR X1, [X28]
	0x0345F9CC MOV X23, X0
	0x0345F9D0 LDRH W9, [X8 + 0x12E]
	0x0345F9D4 CBZ X9, 0x345F9F8
	0x0345F9D8 LDR X10, [X8 + 0xB0]
	0x0345F9DC ADD X10, X10, 0x8
	0x0345F9E0 LDUR X11, [X10 - 0x8]
	0x0345F9E4 CMP X11, X1
	0x0345F9E8 B.EQ 0x345FA08
	0x0345F9EC SUBS X9, X9, 0x1
	0x0345F9F0 ADD X10, X10, 0x10
	0x0345F9F4 B.NE 0x345F9E0
	0x0345F9F8 MOVZ W2, 0x6
	0x0345F9FC MOV X0, X22
	0x0345FA00 BL 0x1C5C788
	0x0345FA04 B 0x345FA18
	0x0345FA08 LDR W9, [X10]
	0x0345FA0C ADD W9, W9, 0x6
	0x0345FA10 ADD X8, X8, W9, 0x4, SXTW
	0x0345FA14 ADD X0, X8, 0x138
	0x0345FA18 LDP X8, X1, [X0]
	0x0345FA1C MOV X0, X22
	0x0345FA20 BLR X8
	0x0345FA24 MOV X1, X0
	0x0345FA28 CBZ X23, 0x345FBCC
	0x0345FA2C MOV X0, X23
	0x0345FA30 MOV X2, X31
	0x0345FA34 BL 0x322693C
	0x0345FA38 TBZ X0, 0x0, 0x345F89C
	0x0345FA3C LDR X9, [X22]
	0x0345FA40 LDR X8, [X29]
	0x0345FA44 LDRB W11, [X9 + 0x130]
	0x0345FA48 LDRB W10, [X8 + 0x130]
	0x0345FA4C CMP W11, W10
	0x0345FA50 B.CC 0x345F89C
	0x0345FA54 LDR X9, [X9 + 0xC8]
	0x0345FA58 ADD X9, X9, X10, 0x3, LSL
	0x0345FA5C LDUR X9, [X9 - 0x8]
	0x0345FA60 CMP X9, X8
	0x0345FA64 B.NE 0x345F89C
	0x0345FA68 LDR X8, [X19 + 0x70]
	0x0345FA6C CBZ X8, 0x345FBE0
	0x0345FA70 LDR X23, [X8 + 0x18]
	0x0345FA74 CBZ X23, 0x345FBE4
	0x0345FA78 LDR X8, [X23]
	0x0345FA7C LDR X1, [X27]
	0x0345FA80 LDRH W9, [X8 + 0x12E]
	0x0345FA84 CBZ X9, 0x345FAA8
	0x0345FA88 LDR X10, [X8 + 0xB0]
	0x0345FA8C ADD X10, X10, 0x8
	0x0345FA90 LDUR X11, [X10 - 0x8]
	0x0345FA94 CMP X11, X1
	0x0345FA98 B.EQ 0x345FAB8
	0x0345FA9C SUBS X9, X9, 0x1
	0x0345FAA0 ADD X10, X10, 0x10
	0x0345FAA4 B.NE 0x345FA90
	0x0345FAA8 MOVZ W2, 0x9
	0x0345FAAC MOV X0, X23
	0x0345FAB0 BL 0x1C5C788
	0x0345FAB4 B 0x345FAC8
	0x0345FAB8 LDR W9, [X10]
	0x0345FABC ADD W9, W9, 0x9
	0x0345FAC0 ADD X8, X8, W9, 0x4, SXTW
	0x0345FAC4 ADD X0, X8, 0x138
	0x0345FAC8 LDP X8, X1, [X0]
	0x0345FACC MOV X0, X23
	0x0345FAD0 BLR X8
	0x0345FAD4 STR X0, [X22 + 0x68]
	0x0345FAD8 B 0x345F89C
	0x0345FADC MOV X24, X31
	0x0345FAE0 MOVZ W22, 0xE
	0x0345FAE4 TBZ X25, 0x1F, 0x345FB4C
	0x0345FAE8 CBZ X21, 0x345FB4C
	0x0345FAEC ADRP X10, 0xC94000
	0x0345FAF0 LDR X8, [X21]
	0x0345FAF4 LDR X10, [X10 + 0xE00]
	0x0345FAF8 LDRH W9, [X8 + 0x12E]
	0x0345FAFC LDR X1, [X10]
	0x0345FB00 CBZ X9, 0x345FB24
	0x0345FB04 LDR X10, [X8 + 0xB0]
	0x0345FB08 ADD X10, X10, 0x8
	0x0345FB0C LDUR X11, [X10 - 0x8]
	0x0345FB10 CMP X11, X1
	0x0345FB14 B.EQ 0x345FB34
	0x0345FB18 SUBS X9, X9, 0x1
	0x0345FB1C ADD X10, X10, 0x10
	0x0345FB20 B.NE 0x345FB0C
	0x0345FB24 MOV X0, X21
	0x0345FB28 MOV W2, W31
	0x0345FB2C BL 0x1C5C788
	0x0345FB30 B 0x345FB40
	0x0345FB34 LDRSW X9, [X10]
	0x0345FB38 ADD X8, X8, X9, 0x4, LSL
	0x0345FB3C ADD X0, X8, 0x138
	0x0345FB40 LDP X8, X1, [X0]
	0x0345FB44 MOV X0, X21
	0x0345FB48 BLR X8
	0x0345FB4C CBNZ X24, 0x345FC14
	0x0345FB50 CBZ W22, 0x345FB5C
	0x0345FB54 CMP W22, 0xE
	0x0345FB58 B.NE 0x345FB98
	0x0345FB5C MOVN W8, 0x1
	0x0345FB60 STR X31, [X19 + 0x70]
	0x0345FB64 STR W8, [X19], #0x8
	0x0345FB68 ADRP X8, 0xCCF000
	0x0345FB6C LDR X8, [X8 + 0x5D8]
	0x0345FB70 LDR X0, [X8]
	0x0345FB74 LDR W8, [X0 + 0xE0]
	0x0345FB78 CBNZ W8, 0x345FB80
	0x0345FB7C BL 0x1C16DFC
	0x0345FB80 ADRP X8, 0xCD0000
	0x0345FB84 LDR X8, [X8]
	0x0345FB88 MOV X0, X19
	0x0345FB8C MOV X1, X20
	0x0345FB90 LDR X2, [X8]
	0x0345FB94 BL 0x26322B0
	0x0345FB98 LDP X20, X19, [X31 + 0x80]
	0x0345FB9C LDP X22, X21, [X31 + 0x70]
	0x0345FBA0 LDP X24, X23, [X31 + 0x60]
	0x0345FBA4 LDP X26, X25, [X31 + 0x50]
	0x0345FBA8 LDP X28, X27, [X31 + 0x40]
	0x0345FBAC LDP X29, X30, [X31 + 0x30]
	0x0345FBB0 ADD X31, X31, 0x90
	0x0345FBB4 RET
	0x0345FBB8 BL 0x1C16F20
	0x0345FBBC BL 0x1C16F20
	0x0345FBC0 BL 0x1C16F20
	0x0345FBC4 BL 0x1C16F20
	0x0345FBC8 BL 0x1C16F20
	0x0345FBCC BL 0x1C16F20
	0x0345FBD0 BL 0x1C16F20
	0x0345FBD4 BL 0x1C16F20
	0x0345FBD8 BL 0x1C16F20
	0x0345FBDC BL 0x1C16F20
	0x0345FBE0 BL 0x1C16F20
	0x0345FBE4 BL 0x1C16F20
	0x0345FBE8 BL 0x1C16F20
	0x0345FBEC BL 0x1C16F20
	0x0345FBF0 BL 0x1C16F20
	0x0345FBF4 MOV X0, X24
	0x0345FBF8 BL 0x1C16F18
	0x0345FBFC BL 0x1C16F20
	0x0345FC00 BL 0x1C16F20
	0x0345FC04 BL 0x1C16F20
	0x0345FC08 BL 0x1C16F20
	0x0345FC0C BL 0x1C16F20
	0x0345FC10 BL 0x1C16F20
	0x0345FC14 MOV X0, X24
	0x0345FC18 BL 0x1C16F18
	0x0345FC1C BL 0x1C16F20
	0x0345FC20 BL 0x1C16F20
	0x0345FC24 BL 0x1C16F20
	0x0345FC28 BL 0x1C16F20
	0x0345FC2C BL 0x1C16F20
	0x0345FC30 BL 0x1C16F20
	0x0345FC34 BL 0x1C16F20
	0x0345FC38 BL 0x1C16F20
	0x0345FC3C BL 0x1C16F20
	0x0345FC40 B 0x345FCEC
	0x0345FC44 B 0x345FCEC
	0x0345FC48 B 0x345FCEC
	0x0345FC4C B 0x345FCEC
	0x0345FC50 B 0x345FCEC
	0x0345FC54 B 0x345FCEC
	0x0345FC58 B 0x345FCEC
	0x0345FC5C B 0x345FCEC
	0x0345FC60 B 0x345FCEC
	0x0345FC64 B 0x345FCEC
	0x0345FC68 B 0x345FCEC
	0x0345FC6C B 0x345FCEC
	0x0345FC70 B 0x345FCEC
	0x0345FC74 B 0x345FCEC
	0x0345FC78 B 0x345FCEC
	0x0345FC7C B 0x345FCEC
	0x0345FC80 B 0x345FCEC
	0x0345FC84 B 0x345FCEC
	0x0345FC88 B 0x345FCEC
	0x0345FC8C B 0x345FCEC
	0x0345FC90 B 0x345FD34
	0x0345FC94 B 0x345FCEC
	0x0345FC98 B 0x345FCEC
	0x0345FC9C B 0x345FCEC
	0x0345FCA0 B 0x345FCEC
	0x0345FCA4 B 0x345FCEC
	0x0345FCA8 B 0x345FCEC
	0x0345FCAC B 0x345FDF4
	0x0345FCB0 B 0x345FCEC
	0x0345FCB4 B 0x345FCEC
	0x0345FCB8 B 0x345FCEC
	0x0345FCBC B 0x345FCEC
	0x0345FCC0 B 0x345FCEC
	0x0345FCC4 B 0x345FCEC
	0x0345FCC8 B 0x345FCEC
	0x0345FCCC B 0x345FCEC
	0x0345FCD0 B 0x345FD34
	0x0345FCD4 B 0x345FD34
	0x0345FCD8 B 0x345FCEC
	0x0345FCDC B 0x345FCEC
	0x0345FCE0 B 0x345FCEC
	0x0345FCE4 B 0x345FDF4
	0x0345FCE8 B 0x345FDF4
	0x0345FCEC MOV X22, X1
	0x0345FCF0 MOV X23, X0
	0x0345FCF4 B 0x345FE90
	0x0345FCF8 B 0x345FD34
	0x0345FCFC B 0x345FDF4
	0x0345FD00 B 0x345FD34
	0x0345FD04 B 0x345FD34
	0x0345FD08 B 0x345FD34
	0x0345FD0C B 0x345FD34
	0x0345FD10 B 0x345FD34
	0x0345FD14 B 0x345FDF4
	0x0345FD18 B 0x345FDF4
	0x0345FD1C B 0x345FDF4
	0x0345FD20 B 0x345FDF4
	0x0345FD24 B 0x345FDF4
	0x0345FD28 B 0x345FD34
	0x0345FD2C B 0x345FD34
	0x0345FD30 B 0x345FD34
	0x0345FD34 MOV X22, X1
	0x0345FD38 MOV X23, X0
	0x0345FD3C CMP W22, 0x1
	0x0345FD40 B.NE 0x345FD60
	0x0345FD44 MOV X0, X23
	0x0345FD48 BL 0x3EB1AD0
	0x0345FD4C LDR X24, [X0]
	0x0345FD50 BL 0x3EB1AE0
	0x0345FD54 MOV W22, W31
	0x0345FD58 TBNZ X25, 0x1F, 0x345FAE8
	0x0345FD5C B 0x345FB4C
	0x0345FD60 MOV X24, X31
	0x0345FD64 TBZ X25, 0x1F, 0x345FDCC
	0x0345FD68 CBZ X21, 0x345FDCC
	0x0345FD6C ADRP X10, 0xC94000
	0x0345FD70 LDR X8, [X21]
	0x0345FD74 LDR X10, [X10 + 0xE00]
	0x0345FD78 LDRH W9, [X8 + 0x12E]
	0x0345FD7C LDR X1, [X10]
	0x0345FD80 CBZ X9, 0x345FDA4
	0x0345FD84 LDR X10, [X8 + 0xB0]
	0x0345FD88 ADD X10, X10, 0x8
	0x0345FD8C LDUR X11, [X10 - 0x8]
	0x0345FD90 CMP X11, X1
	0x0345FD94 B.EQ 0x345FDB4
	0x0345FD98 SUBS X9, X9, 0x1
	0x0345FD9C ADD X10, X10, 0x10
	0x0345FDA0 B.NE 0x345FD8C
	0x0345FDA4 MOV X0, X21
	0x0345FDA8 MOV W2, W31
	0x0345FDAC BL 0x1C5C788
	0x0345FDB0 B 0x345FDC0
	0x0345FDB4 LDRSW X9, [X10]
	0x0345FDB8 ADD X8, X8, X9, 0x4, LSL
	0x0345FDBC ADD X0, X8, 0x138
	0x0345FDC0 LDP X8, X1, [X0]
	0x0345FDC4 MOV X0, X21
	0x0345FDC8 BLR X8
	0x0345FDCC CBZ X24, 0x345FE90
	0x0345FDD0 MOV X0, X24
	0x0345FDD4 BL 0x1C16F18
	0x0345FDD8 MOV X22, X1
	0x0345FDDC MOV X23, X0
	0x0345FDE0 TBNZ X25, 0x1F, 0x345FD68
	0x0345FDE4 B 0x345FDCC
	0x0345FDE8 B 0x345FDF4
	0x0345FDEC B 0x345FDF4
	0x0345FDF0 B 0x345FDF4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF80000
	015 Move W8, [X20+1961]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {101}
	021 Move X0, 0xCD3000
	022 Move X0, [X0+224]
	023 Call 0x1C17CF4
	024 Move X0, 0xCD3000
	025 Move X0, [X0+232]
	026 Call 0x1C17CF4
	027 Move X0, 0xCD3000
	028 Move X0, [X0+240]
	029 Call 0x1C17CF4
	030 Move X0, 0xCD2000
	031 Move X0, [X0]
	032 Call 0x1C17CF4
	033 Move X0, 0xCD1000
	034 Move X0, [X0+1496]
	035 Call 0x1C17CF4
	036 Move X0, 0xC98000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0xC97000
	040 Move X0, [X0+2544]
	041 Call 0x1C17CF4
	042 Move X0, 0xCD3000
	043 Move X0, [X0+248]
	044 Call 0x1C17CF4
	045 Move X0, 0xCD3000
	046 Move X0, [X0+256]
	047 Call 0x1C17CF4
	048 Move X0, 0xCD3000
	049 Move X0, [X0+264]
	050 Call 0x1C17CF4
	051 Move X0, 0xC96000
	052 Move X0, [X0+3584]
	053 Call 0x1C17CF4
	054 Move X0, 0xCD3000
	055 Move X0, [X0+272]
	056 Call 0x1C17CF4
	057 Move X0, 0xCD3000
	058 Move X0, [X0+280]
	059 Call 0x1C17CF4
	060 Move X0, 0xC96000
	061 Move X0, [X0+3608]
	062 Call 0x1C17CF4
	063 Move X0, 0xC97000
	064 Move X0, [X0+2072]
	065 Call 0x1C17CF4
	066 Move X0, 0xCD2000
	067 Move X0, [X0+1992]
	068 Call 0x1C17CF4
	069 Move X0, 0xCD2000
	070 Move X0, [X0+2000]
	071 Call 0x1C17CF4
	072 Move X0, 0xCD3000
	073 Move X0, [X0+288]
	074 Call 0x1C17CF4
	075 Move X0, 0xC97000
	076 Move X0, [X0+2096]
	077 Call 0x1C17CF4
	078 Move X0, 0xCD3000
	079 Move X0, [X0+296]
	080 Call 0x1C17CF4
	081 Move X0, 0xC97000
	082 Move X0, [X0+2104]
	083 Call 0x1C17CF4
	084 Move X0, 0xCD3000
	085 Move X0, [X0+304]
	086 Call 0x1C17CF4
	087 Move X0, 0xC97000
	088 Move X0, [X0+2112]
	089 Call 0x1C17CF4
	090 Move X0, 0xCD3000
	091 Move X0, [X0+312]
	092 Call 0x1C17CF4
	093 Move X0, 0xCD3000
	094 Move X0, [X0+320]
	095 Call 0x1C17CF4
	096 Move X0, 0xCD3000
	097 Move X0, [X0+328]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+1961], W8
	101 Move [X31+32], X31
	102 Move [X31+40], X31
	103 Move [X31+24], X31
	104 Move W25, [X19]
	105 Move X20, [X19+32]
	106 Compare W25, 0
	107 JumpIfEqual {116}
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X19+128]
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W25, TEMP
	113 Move [X31+24], X8
	114 Move [X19+128], X31
	115 Move [X19], W25
	116 Move X8, [X19+120]
	117 Move TEMP, 0
	118 Not TEMP
	119 Move W25, TEMP
	120 Move [X31+32], X8
	121 Move [X19+120], X31
	122 Move [X19], W25
	123 Move X8, 0xC97000
	124 Move X8, [X8+2096]
	125 Add X0, X31, 32
	126 Move X1, [X8]
	127 Call TaskAwaiter`1<Object>.GetResult, X0
	128 Move X8, 0xCD3000
	129 Move X8, [X8+328]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X21, X0
	133 Move X1, X31
	134 Call <>c__DisplayClass87_0..ctor, X0
	135 Move [X19+112], X21
	136 Compare X21, 0
	137 JumpIfEqual {941}
	138 Move X8, [X19+32]
	139 Move [X21+16], X8
	140 Move X8, [X19+40]
	141 Move [X21+24], X8
	142 Move V0, [X19+3]
	143 Move [X21+2], V0
	144 Move W8, [X19+64]
	145 Move [X21+48], W8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Move [X21+56], V0
	148 Move X8, [X19+112]
	149 Compare X8, 0
	150 JumpIfEqual {942}
	151 Move X9, [X19+88]
	152 Move [X8+72], X9
	153 Move X9, [X19+96]
	154 Move [X8+80], X9
	155 Compare X20, 0
	156 JumpIfEqual {943}
	157 Move W8, [X20+16]
	158 Compare W8, 0
	159 JumpIfEqual {299}
	160 Move X8, [X19+112]
	161 Compare X8, 0
	162 JumpIfEqual {944}
	163 Move X21, [X8+24]
	164 Compare X21, 0
	165 JumpIfEqual {945}
	166 Move X23, 0xC97000
	167 Move X8, [X21]
	168 Move X23, [X23+2072]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X1, [X23]
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move W2, 7
	180 Move X0, X21
	181 Call 0x1C5D788
	182 Move W9, [X10]
	183 Add W9, W9, 7
	184 Add X8, X8, W9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X21
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X1, X31
	191 Call String.IsNullOrEmpty, X0
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {297}
	196 Move X8, [X19+112]
	197 Compare X8, 0
	198 JumpIfEqual {946}
	199 Move X9, 0xC97000
	200 Move X9, [X9+2544]
	201 Move X21, [X8+24]
	202 Move X0, [X9]
	203 Move W9, [X0+224]
	204 Compare W9, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X31
	208 Call DateTime.get_UtcNow
	209 Move X22, 0xC98000
	210 Move X22, [X22+2576]
	211 Move X8, X0
	212 Move [X31+40], X8
	213 Move X0, [X22]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {219}
	217 Call 0x1C17DFC
	218 Move X0, [X22]
	219 Move X8, [X0+184]
	220 Move X1, [X8]
	221 Add X0, X31, 40
	222 Move X2, X31
	223 Call DateTime.Add, X0, X1
	224 Compare X21, 0
	225 JumpIfEqual {947}
	226 Move X8, [X21]
	227 Move X1, [X23]
	228 Move X22, X0
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move W2, 11
	239 Move X0, X21
	240 Call 0x1C5D788
	241 Move W9, [X10]
	242 Add W9, W9, 11
	243 Add X8, X8, W9
	244 Add X0, X8, 312
	245 Move X8, [X0]
	246 Move X2, [X0+8]
	247 Move X0, X21
	248 Move X1, X22
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {297}
	254 Move X8, [X19+112]
	255 Compare X8, 0
	256 JumpIfEqual {948}
	257 Move X1, [X8+24]
	258 Move X3, [X19+104]
	259 Move X4, [X8+80]
	260 Move X0, X20
	261 Move X2, X31
	262 Move X5, X31
	263 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	264 Compare X0, 0
	265 JumpIfEqual {949}
	266 Move X8, 0xC96000
	267 Move X8, [X8+2112]
	268 Move X1, [X8]
	269 Call Task`1<Object>.GetAwaiter, X0
	270 Move X8, 0xC96000
	271 Move X8, [X8+2104]
	272 Move [X31+32], X0
	273 Move X1, [X8]
	274 Add X0, X31, 32
	275 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {123}
	280 Move [X19], W31
	281 Move X8, [X31+32]
	282 Move [X19+120], X8
	283 Move X8, 0xCD0000
	284 Move X8, [X8+1496]
	285 Move X0, [X8]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X8, 0xCD2000
	291 Move X8, [X8+240]
	292 Add X0, X19, 8
	293 Move X3, [X8]
	294 Add X1, X31, 32
	295 Move X2, X19
	296 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	297 Compare X20, 0
	298 JumpIfEqual {936}
	299 Move X8, 0xCD2000
	300 Move X8, [X8+248]
	301 Move X21, [X20+88]
	302 Move X23, [X19+112]
	303 Move X0, [X8]
	304 Call 0x1C17F10
	305 Move X8, 0xCD2000
	306 Move X8, [X8+320]
	307 Move X22, X0
	308 Move X2, [X8]
	309 Move X1, X23
	310 Move X3, X31
	311 Call Func`1<Object>..ctor, X0, X1, X2
	312 Move X8, [X19+112]
	313 Compare X8, 0
	314 JumpIfEqual {933}
	315 Move X9, 0xCD1000
	316 Move X23, [X19+104]
	317 Move X24, [X8+24]
	318 Move X9, [X9+1992]
	319 Compare X23, 0
	320 JumpIfNotEqual {322}
	321 Move X23, [X20+24]
	322 Move X1, [X8+80]
	323 Move X2, [X9]
	324 Move [X31+8], X31
	325 Move [X31+16], X31
	326 Add X0, X31, 8
	327 Call Nullable`1<CancellationToken>..ctor, X0, X1
	328 Move X8, 0xCD1000
	329 Move X8, [X8+2000]
	330 Move X0, [X8]
	331 Call 0x1C17F10
	332 Move X3, [X31+8]
	333 Move X4, [X31+16]
	334 Move X20, X0
	335 Move X1, X24
	336 Move X2, X23
	337 Move X5, X31
	338 Call RetryHistory..ctor, X0, X1, X2, X3
	339 Compare X21, 0
	340 JumpIfEqual {934}
	341 Move X8, 0xCD2000
	342 Move X8, [X8+288]
	343 Move X3, [X8]
	344 Move X0, X21
	345 Move X1, X22
	346 Move X2, X20
	347 Call 0x2244230, X0, X1, X2
	348 Compare X0, 0
	349 JumpIfEqual {935}
	350 Move X8, 0xCD2000
	351 Move X8, [X8+312]
	352 Move X1, [X8]
	353 Call Task`1<Object>.GetAwaiter, X0
	354 Move X8, 0xCD2000
	355 Move X8, [X8+304]
	356 Move [X31+24], X0
	357 Move X1, [X8]
	358 Add X0, X31, 24
	359 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {388}
	364 Move X8, 0xCD2000
	365 Move X8, [X8+296]
	366 Add X0, X31, 24
	367 Move X1, [X8]
	368 Call TaskAwaiter`1<Object>.GetResult, X0
	369 Move X20, X0
	370 Compare X0, 0
	371 JumpIfEqual {928}
	372 Move X10, 0xCD2000
	373 Move X8, [X20]
	374 Move X10, [X10+256]
	375 NotImplemented "Instruction LDRH not yet implemented."
	376 Move X1, [X10]
	377 Compare X9, 0
	378 JumpIfEqual {385}
	379 Move X10, [X8+176]
	380 Add X10, X10, 8
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Subtract X9, X9, 1
	384 Add X10, X10, 16
	385 Move W2, 4
	386 Move X0, X20
	387 Call 0x1C5D788
	388 Move W8, 1
	389 Move [X19], W8
	390 Move X8, [X31+24]
	391 Move [X19+128], X8
	392 Move X8, 0xCD0000
	393 Move X8, [X8+1496]
	394 Move X0, [X8]
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1C17DFC
	399 Move X8, 0xCD2000
	400 Move X8, [X8+232]
	401 Add X0, X19, 8
	402 Move X3, [X8]
	403 Add X1, X31, 24
	404 Move X2, X19
	405 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	406 Move W9, [X10]
	407 Add W9, W9, 4
	408 Add X8, X8, W9
	409 Add X0, X8, 312
	410 Move X8, [X0]
	411 Move X1, [X0+8]
	412 Move X0, X20
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move X21, X0
	415 Compare X0, 0
	416 JumpIfEqual {929}
	417 Move X10, 0xCD2000
	418 Move X8, [X21]
	419 Move X10, [X10+272]
	420 NotImplemented "Instruction LDRH not yet implemented."
	421 Move X1, [X10]
	422 Compare X9, 0
	423 JumpIfEqual {430}
	424 Move X10, [X8+176]
	425 Add X10, X10, 8
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Subtract X9, X9, 1
	429 Add X10, X10, 16
	430 Move X0, X21
	431 Move W2, W31
	432 Call 0x1C5D788
	433 NotImplemented "Instruction LDRSW not yet implemented."
	434 Add X8, X8, X9
	435 Add X0, X8, 312
	436 Move X8, [X0]
	437 Move X1, [X0+8]
	438 Move X0, X21
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Move X21, X0
	441 Compare X0, 0
	442 JumpIfEqual {930}
	443 Move X24, 0xC95000
	444 Move X28, 0xCD2000
	445 Move X29, 0xC96000
	446 Move X26, 0xCD2000
	447 Move X27, 0xCD2000
	448 Move X24, [X24+3608]
	449 Move X28, [X28+280]
	450 Move X29, [X29+2072]
	451 Move X26, [X26+264]
	452 Move X27, [X27+224]
	453 Move X8, [X21]
	454 Move X1, [X24]
	455 NotImplemented "Instruction LDRH not yet implemented."
	456 Compare X9, 0
	457 JumpIfEqual {464}
	458 Move X10, [X8+176]
	459 Add X10, X10, 8
	460 NotImplemented "Instruction LDUR not yet implemented."
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Subtract X9, X9, 1
	463 Add X10, X10, 16
	464 Move X0, X21
	465 Move W2, W31
	466 Call 0x1C5D788
	467 NotImplemented "Instruction LDRSW not yet implemented."
	468 Add X8, X8, X9
	469 Add X0, X8, 312
	470 Move X8, [X0]
	471 Move X1, [X0+8]
	472 Move X0, X21
	473 NotImplemented "Instruction BLR not yet implemented."
	474 Move TEMP, X0
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfNotEqual {601}
	478 Move X8, [X21]
	479 Move X1, [X28]
	480 NotImplemented "Instruction LDRH not yet implemented."
	481 Compare X9, 0
	482 JumpIfEqual {489}
	483 Move X10, [X8+176]
	484 Add X10, X10, 8
	485 NotImplemented "Instruction LDUR not yet implemented."
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Subtract X9, X9, 1
	488 Add X10, X10, 16
	489 Move X0, X21
	490 Move W2, W31
	491 Call 0x1C5D788
	492 NotImplemented "Instruction LDRSW not yet implemented."
	493 Add X8, X8, X9
	494 Add X0, X8, 312
	495 Move X8, [X0]
	496 Move X1, [X0+8]
	497 Move X0, X21
	498 NotImplemented "Instruction BLR not yet implemented."
	499 Move X8, [X19+112]
	500 Compare X8, 0
	501 JumpIfEqual {918}
	502 Move X23, [X8+24]
	503 Compare X23, 0
	504 JumpIfEqual {919}
	505 Move X8, [X23]
	506 Move X1, [X29]
	507 Move X22, X0
	508 NotImplemented "Instruction LDRH not yet implemented."
	509 Compare X9, 0
	510 JumpIfEqual {517}
	511 Move X10, [X8+176]
	512 Add X10, X10, 8
	513 NotImplemented "Instruction LDUR not yet implemented."
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Subtract X9, X9, 1
	516 Add X10, X10, 16
	517 Move W2, 10
	518 Move X0, X23
	519 Call 0x1C5D788
	520 Move W9, [X10]
	521 Add W9, W9, 10
	522 Add X8, X8, W9
	523 Add X0, X8, 312
	524 Move X8, [X0]
	525 Move X1, [X0+8]
	526 Move X0, X23
	527 NotImplemented "Instruction BLR not yet implemented."
	528 Compare X22, 0
	529 JumpIfEqual {916}
	530 Move X8, [X22]
	531 Move X1, [X26]
	532 Move X23, X0
	533 NotImplemented "Instruction LDRH not yet implemented."
	534 Compare X9, 0
	535 JumpIfEqual {542}
	536 Move X10, [X8+176]
	537 Add X10, X10, 8
	538 NotImplemented "Instruction LDUR not yet implemented."
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Subtract X9, X9, 1
	541 Add X10, X10, 16
	542 Move W2, 6
	543 Move X0, X22
	544 Call 0x1C5D788
	545 Move W9, [X10]
	546 Add W9, W9, 6
	547 Add X8, X8, W9
	548 Add X0, X8, 312
	549 Move X8, [X0]
	550 Move X1, [X0+8]
	551 Move X0, X22
	552 NotImplemented "Instruction BLR not yet implemented."
	553 Move X1, X0
	554 Compare X23, 0
	555 JumpIfEqual {917}
	556 Move X0, X23
	557 Move X2, X31
	558 Call String.Equals, X0, X1
	559 Move TEMP, X0
	560 And TEMP, TEMP, 1
	561 Compare TEMP, 1
	562 JumpIfNotEqual {453}
	563 Move X9, [X22]
	564 Move X8, [X27]
	565 Move W11, [X9+304]
	566 Move W10, [X8+304]
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Move X9, [X9+200]
	569 Add X9, X9, X10
	570 NotImplemented "Instruction LDUR not yet implemented."
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move X8, [X19+112]
	573 Compare X8, 0
	574 JumpIfEqual {924}
	575 Move X23, [X8+24]
	576 Compare X23, 0
	577 JumpIfEqual {925}
	578 Move X8, [X23]
	579 Move X1, [X29]
	580 NotImplemented "Instruction LDRH not yet implemented."
	581 Compare X9, 0
	582 JumpIfEqual {589}
	583 Move X10, [X8+176]
	584 Add X10, X10, 8
	585 NotImplemented "Instruction LDUR not yet implemented."
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Subtract X9, X9, 1
	588 Add X10, X10, 16
	589 Move W2, 9
	590 Move X0, X23
	591 Call 0x1C5D788
	592 Move W9, [X10]
	593 Add W9, W9, 9
	594 Add X8, X8, W9
	595 Add X0, X8, 312
	596 Move X8, [X0]
	597 Move X1, [X0+8]
	598 Move X0, X23
	599 NotImplemented "Instruction BLR not yet implemented."
	600 Move [X22+104], X0
	601 Move X24, X31
	602 Move W22, 11
	603 Move TEMP, X25
	604 And TEMP, TEMP, -2147483648
	605 Compare TEMP, -2147483648
	606 JumpIfNotEqual {632}
	607 Compare X21, 0
	608 JumpIfEqual {632}
	609 Move X10, 0xC95000
	610 Move X8, [X21]
	611 Move X10, [X10+3584]
	612 NotImplemented "Instruction LDRH not yet implemented."
	613 Move X1, [X10]
	614 Compare X9, 0
	615 JumpIfEqual {622}
	616 Move X10, [X8+176]
	617 Add X10, X10, 8
	618 NotImplemented "Instruction LDUR not yet implemented."
	619 NotImplemented "Instruction CMP not yet implemented."
	620 Subtract X9, X9, 1
	621 Add X10, X10, 16
	622 Move X0, X21
	623 Move W2, W31
	624 Call 0x1C5D788
	625 NotImplemented "Instruction LDRSW not yet implemented."
	626 Add X8, X8, X9
	627 Add X0, X8, 312
	628 Move X8, [X0]
	629 Move X1, [X0+8]
	630 Move X0, X21
	631 NotImplemented "Instruction BLR not yet implemented."
	632 Compare X24, 0
	633 JumpIfNotEqual {931}
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Compare W22, 0
	636 JumpIfNotEqual {902}
	637 Move X8, [X20]
	638 Move X10, 0xCD2000
	639 NotImplemented "Instruction LDRH not yet implemented."
	640 Move X10, [X10+256]
	641 Move X1, [X10]
	642 Compare X9, 0
	643 JumpIfEqual {650}
	644 Move X10, [X8+176]
	645 Add X10, X10, 8
	646 NotImplemented "Instruction LDUR not yet implemented."
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Subtract X9, X9, 1
	649 Add X10, X10, 16
	650 Move W2, 1
	651 Move X0, X20
	652 Call 0x1C5D788
	653 Move W9, [X10]
	654 Add W9, W9, 1
	655 Add X8, X8, W9
	656 Add X0, X8, 312
	657 Move X8, [X0]
	658 Move X1, [X0+8]
	659 Move X0, X20
	660 NotImplemented "Instruction BLR not yet implemented."
	661 Move X21, X0
	662 Compare X0, 0
	663 JumpIfEqual {937}
	664 Move X8, [X21]
	665 Move X10, 0xCD2000
	666 NotImplemented "Instruction LDRH not yet implemented."
	667 Move X10, [X10+272]
	668 Move X1, [X10]
	669 Compare X9, 0
	670 JumpIfEqual {677}
	671 Move X10, [X8+176]
	672 Add X10, X10, 8
	673 NotImplemented "Instruction LDUR not yet implemented."
	674 NotImplemented "Instruction CMP not yet implemented."
	675 Subtract X9, X9, 1
	676 Add X10, X10, 16
	677 Move X0, X21
	678 Move W2, W31
	679 Call 0x1C5D788
	680 NotImplemented "Instruction LDRSW not yet implemented."
	681 Add X8, X8, X9
	682 Add X0, X8, 312
	683 Move X8, [X0]
	684 Move X1, [X0+8]
	685 Move X0, X21
	686 NotImplemented "Instruction BLR not yet implemented."
	687 Move X21, X0
	688 Compare X0, 0
	689 JumpIfEqual {938}
	690 Move X24, 0xC95000
	691 Move X26, 0xCD2000
	692 Move X27, 0xC96000
	693 Move X28, 0xCD2000
	694 Move X29, 0xCD2000
	695 Move X24, [X24+3608]
	696 Move X26, [X26+280]
	697 Move X27, [X27+2072]
	698 Move X28, [X28+264]
	699 Move X29, [X29+224]
	700 Move X8, [X21]
	701 Move X1, [X24]
	702 NotImplemented "Instruction LDRH not yet implemented."
	703 Compare X9, 0
	704 JumpIfEqual {711}
	705 Move X10, [X8+176]
	706 Add X10, X10, 8
	707 NotImplemented "Instruction LDUR not yet implemented."
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Subtract X9, X9, 1
	710 Add X10, X10, 16
	711 Move X0, X21
	712 Move W2, W31
	713 Call 0x1C5D788
	714 NotImplemented "Instruction LDRSW not yet implemented."
	715 Add X8, X8, X9
	716 Add X0, X8, 312
	717 Move X8, [X0]
	718 Move X1, [X0+8]
	719 Move X0, X21
	720 NotImplemented "Instruction BLR not yet implemented."
	721 Move TEMP, X0
	722 And TEMP, TEMP, 1
	723 Compare TEMP, 1
	724 JumpIfNotEqual {848}
	725 Move X8, [X21]
	726 Move X1, [X26]
	727 NotImplemented "Instruction LDRH not yet implemented."
	728 Compare X9, 0
	729 JumpIfEqual {736}
	730 Move X10, [X8+176]
	731 Add X10, X10, 8
	732 NotImplemented "Instruction LDUR not yet implemented."
	733 NotImplemented "Instruction CMP not yet implemented."
	734 Subtract X9, X9, 1
	735 Add X10, X10, 16
	736 Move X0, X21
	737 Move W2, W31
	738 Call 0x1C5D788
	739 NotImplemented "Instruction LDRSW not yet implemented."
	740 Add X8, X8, X9
	741 Add X0, X8, 312
	742 Move X8, [X0]
	743 Move X1, [X0+8]
	744 Move X0, X21
	745 NotImplemented "Instruction BLR not yet implemented."
	746 Move X8, [X19+112]
	747 Compare X8, 0
	748 JumpIfEqual {922}
	749 Move X23, [X8+24]
	750 Compare X23, 0
	751 JumpIfEqual {923}
	752 Move X8, [X23]
	753 Move X1, [X27]
	754 Move X22, X0
	755 NotImplemented "Instruction LDRH not yet implemented."
	756 Compare X9, 0
	757 JumpIfEqual {764}
	758 Move X10, [X8+176]
	759 Add X10, X10, 8
	760 NotImplemented "Instruction LDUR not yet implemented."
	761 NotImplemented "Instruction CMP not yet implemented."
	762 Subtract X9, X9, 1
	763 Add X10, X10, 16
	764 Move W2, 10
	765 Move X0, X23
	766 Call 0x1C5D788
	767 Move W9, [X10]
	768 Add W9, W9, 10
	769 Add X8, X8, W9
	770 Add X0, X8, 312
	771 Move X8, [X0]
	772 Move X1, [X0+8]
	773 Move X0, X23
	774 NotImplemented "Instruction BLR not yet implemented."
	775 Compare X22, 0
	776 JumpIfEqual {920}
	777 Move X8, [X22]
	778 Move X1, [X28]
	779 Move X23, X0
	780 NotImplemented "Instruction LDRH not yet implemented."
	781 Compare X9, 0
	782 JumpIfEqual {789}
	783 Move X10, [X8+176]
	784 Add X10, X10, 8
	785 NotImplemented "Instruction LDUR not yet implemented."
	786 NotImplemented "Instruction CMP not yet implemented."
	787 Subtract X9, X9, 1
	788 Add X10, X10, 16
	789 Move W2, 6
	790 Move X0, X22
	791 Call 0x1C5D788
	792 Move W9, [X10]
	793 Add W9, W9, 6
	794 Add X8, X8, W9
	795 Add X0, X8, 312
	796 Move X8, [X0]
	797 Move X1, [X0+8]
	798 Move X0, X22
	799 NotImplemented "Instruction BLR not yet implemented."
	800 Move X1, X0
	801 Compare X23, 0
	802 JumpIfEqual {921}
	803 Move X0, X23
	804 Move X2, X31
	805 Call String.Equals, X0, X1
	806 Move TEMP, X0
	807 And TEMP, TEMP, 1
	808 Compare TEMP, 1
	809 JumpIfNotEqual {700}
	810 Move X9, [X22]
	811 Move X8, [X29]
	812 Move W11, [X9+304]
	813 Move W10, [X8+304]
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move X9, [X9+200]
	816 Add X9, X9, X10
	817 NotImplemented "Instruction LDUR not yet implemented."
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Move X8, [X19+112]
	820 Compare X8, 0
	821 JumpIfEqual {926}
	822 Move X23, [X8+24]
	823 Compare X23, 0
	824 JumpIfEqual {927}
	825 Move X8, [X23]
	826 Move X1, [X27]
	827 NotImplemented "Instruction LDRH not yet implemented."
	828 Compare X9, 0
	829 JumpIfEqual {836}
	830 Move X10, [X8+176]
	831 Add X10, X10, 8
	832 NotImplemented "Instruction LDUR not yet implemented."
	833 NotImplemented "Instruction CMP not yet implemented."
	834 Subtract X9, X9, 1
	835 Add X10, X10, 16
	836 Move W2, 9
	837 Move X0, X23
	838 Call 0x1C5D788
	839 Move W9, [X10]
	840 Add W9, W9, 9
	841 Add X8, X8, W9
	842 Add X0, X8, 312
	843 Move X8, [X0]
	844 Move X1, [X0+8]
	845 Move X0, X23
	846 NotImplemented "Instruction BLR not yet implemented."
	847 Move [X22+104], X0
	848 Move X24, X31
	849 Move W22, 14
	850 Move TEMP, X25
	851 And TEMP, TEMP, -2147483648
	852 Compare TEMP, -2147483648
	853 JumpIfNotEqual {879}
	854 Compare X21, 0
	855 JumpIfEqual {879}
	856 Move X10, 0xC95000
	857 Move X8, [X21]
	858 Move X10, [X10+3584]
	859 NotImplemented "Instruction LDRH not yet implemented."
	860 Move X1, [X10]
	861 Compare X9, 0
	862 JumpIfEqual {869}
	863 Move X10, [X8+176]
	864 Add X10, X10, 8
	865 NotImplemented "Instruction LDUR not yet implemented."
	866 NotImplemented "Instruction CMP not yet implemented."
	867 Subtract X9, X9, 1
	868 Add X10, X10, 16
	869 Move X0, X21
	870 Move W2, W31
	871 Call 0x1C5D788
	872 NotImplemented "Instruction LDRSW not yet implemented."
	873 Add X8, X8, X9
	874 Add X0, X8, 312
	875 Move X8, [X0]
	876 Move X1, [X0+8]
	877 Move X0, X21
	878 NotImplemented "Instruction BLR not yet implemented."
	879 Compare X24, 0
	880 JumpIfNotEqual {939}
	881 Compare W22, 0
	882 JumpIfEqual {884}
	883 NotImplemented "Instruction CMP not yet implemented."
	884 Move TEMP, 1
	885 Not TEMP
	886 Move W8, TEMP
	887 Move [X19+112], X31
	888 Move [X19+8], W8
	889 Move X8, 0xCD0000
	890 Move X8, [X8+1496]
	891 Move X0, [X8]
	892 Move W8, [X0+224]
	893 Compare W8, 0
	894 JumpIfNotEqual {896}
	895 Call 0x1C17DFC
	896 Move X8, 0xCD1000
	897 Move X8, [X8]
	898 Move X0, X19
	899 Move X1, X20
	900 Move X2, [X8]
	901 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	902 Move X20, [X31+128]
	903 Move X19, [X31+136]
	904 Move X22, [X31+112]
	905 Move X21, [X31+120]
	906 Move X24, [X31+96]
	907 Move X23, [X31+104]
	908 Move X26, [X31+80]
	909 Move X25, [X31+88]
	910 Move X28, [X31+64]
	911 Move X27, [X31+72]
	912 Move X29, [X31+48]
	913 Move X30, [X31+56]
	914 Add X31, X31, 144
	915 Return 
	916 Call 0x1C17F20
	917 Call 0x1C17F20
	918 Call 0x1C17F20
	919 Call 0x1C17F20
	920 Call 0x1C17F20
	921 Call 0x1C17F20
	922 Call 0x1C17F20
	923 Call 0x1C17F20
	924 Call 0x1C17F20
	925 Call 0x1C17F20
	926 Call 0x1C17F20
	927 Call 0x1C17F20
	928 Call 0x1C17F20
	929 Call 0x1C17F20
	930 Call 0x1C17F20
	931 Move X0, X24
	932 Call 0x1C17F18
	933 Call 0x1C17F20
	934 Call 0x1C17F20
	935 Call 0x1C17F20
	936 Call 0x1C17F20
	937 Call 0x1C17F20
	938 Call 0x1C17F20
	939 Move X0, X24
	940 Call 0x1C17F18
	941 Call 0x1C17F20
	942 Call 0x1C17F20
	943 Call 0x1C17F20
	944 Call 0x1C17F20
	945 Call 0x1C17F20
	946 Call 0x1C17F20
	947 Call 0x1C17F20
	948 Call 0x1C17F20
	949 Call 0x1C17F20
	950 Move X22, X1
	951 Move X23, X0
	952 Move X22, X1
	953 Move X23, X0
	954 NotImplemented "Instruction CMP not yet implemented."
	955 Move X0, X23
	956 Call 0x3EB2AD0
	957 Move X24, [X0]
	958 Call 0x3EB2AE0
	959 Move W22, W31
	960 Move TEMP, X25
	961 And TEMP, TEMP, -2147483648
	962 Compare TEMP, -2147483648
	963 JumpIfEqual {854}
	964 Move X24, X31
	965 Move TEMP, X25
	966 And TEMP, TEMP, -2147483648
	967 Compare TEMP, -2147483648
	968 JumpIfNotEqual {994}
	969 Compare X21, 0
	970 JumpIfEqual {994}
	971 Move X10, 0xC95000
	972 Move X8, [X21]
	973 Move X10, [X10+3584]
	974 NotImplemented "Instruction LDRH not yet implemented."
	975 Move X1, [X10]
	976 Compare X9, 0
	977 JumpIfEqual {984}
	978 Move X10, [X8+176]
	979 Add X10, X10, 8
	980 NotImplemented "Instruction LDUR not yet implemented."
	981 NotImplemented "Instruction CMP not yet implemented."
	982 Subtract X9, X9, 1
	983 Add X10, X10, 16
	984 Move X0, X21
	985 Move W2, W31
	986 Call 0x1C5D788
	987 NotImplemented "Instruction LDRSW not yet implemented."
	988 Add X8, X8, X9
	989 Add X0, X8, 312
	990 Move X8, [X0]
	991 Move X1, [X0+8]
	992 Move X0, X21
	993 NotImplemented "Instruction BLR not yet implemented."
	994 Compare X24, 0
	995 JumpIfEqual {1048}
	996 Move X0, X24
	997 Call 0x1C17F18
	998 Move X22, X1
	999 Move X23, X0
	1000 Move TEMP, X25
	1001 And TEMP, TEMP, -2147483648
	1002 Compare TEMP, -2147483648
	1003 JumpIfEqual {969}
	1004 Move X22, X1
	1005 Move X23, X0
	1006 NotImplemented "Instruction CMP not yet implemented."
	1007 Move X0, X23
	1008 Call 0x3EB2AD0
	1009 Move X24, [X0]
	1010 Call 0x3EB2AE0
	1011 Move W22, W31
	1012 Move TEMP, X25
	1013 And TEMP, TEMP, -2147483648
	1014 Compare TEMP, -2147483648
	1015 JumpIfEqual {607}
	1016 Move X24, X31
	1017 Move TEMP, X25
	1018 And TEMP, TEMP, -2147483648
	1019 Compare TEMP, -2147483648
	1020 JumpIfNotEqual {1046}
	1021 Compare X21, 0
	1022 JumpIfEqual {1046}
	1023 Move X10, 0xC95000
	1024 Move X8, [X21]
	1025 Move X10, [X10+3584]
	1026 NotImplemented "Instruction LDRH not yet implemented."
	1027 Move X1, [X10]
	1028 Compare X9, 0
	1029 JumpIfEqual {1036}
	1030 Move X10, [X8+176]
	1031 Add X10, X10, 8
	1032 NotImplemented "Instruction LDUR not yet implemented."
	1033 NotImplemented "Instruction CMP not yet implemented."
	1034 Subtract X9, X9, 1
	1035 Add X10, X10, 16
	1036 Move X0, X21
	1037 Move W2, W31
	1038 Call 0x1C5D788
	1039 NotImplemented "Instruction LDRSW not yet implemented."
	1040 Add X8, X8, X9
	1041 Add X0, X8, 312
	1042 Move X8, [X0]
	1043 Move X1, [X0+8]
	1044 Move X0, X21
	1045 NotImplemented "Instruction BLR not yet implemented."
	1046 Compare X24, 0
	1047 JumpIfNotEqual {1091}
	1048 NotImplemented "Instruction CMP not yet implemented."
	1049 Move X0, X23
	1050 Call 0x3EB2AD0
	1051 Move X20, X0
	1052 Move X0, 0xC95000
	1053 Move X0, [X0+2000]
	1054 Call 0x1C17D08
	1055 Move X8, [X20]
	1056 Move X1, [X8]
	1057 Call 0x1C18270
	1058 Move TEMP, X0
	1059 And TEMP, TEMP, 1
	1060 Compare TEMP, 1
	1061 JumpIfNotEqual {1083}
	1062 Move X20, [X20]
	1063 Call 0x3EB2AE0
	1064 Move TEMP, 1
	1065 Not TEMP
	1066 Move W8, TEMP
	1067 Move [X19+112], X31
	1068 Move [X19+8], W8
	1069 Move X0, 0xCD0000
	1070 Move X0, [X0+1496]
	1071 Call 0x1C17D08
	1072 Move W8, [X0+224]
	1073 Compare W8, 0
	1074 JumpIfNotEqual {1076}
	1075 Call 0x1C17DFC
	1076 Move X0, 0xCD1000
	1077 Move X0, [X0+56]
	1078 Call 0x1C17D08
	1079 Move X2, X0
	1080 Move X0, X19
	1081 Move X1, X20
	1082 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	1083 Move W0, 8
	1084 Call 0x3EB2AF0
	1085 Move X8, [X20]
	1086 Move [X0], X8
	1087 Move X1, 0xA56000
	1088 Add X1, X1, 3672
	1089 Move X2, X31
	1090 Call 0x3EB2B00
	1091 Move X0, X24
	1092 Call 0x1C17F18
	1093 Move X22, X1
	1094 Move X23, X0
	1095 Move TEMP, X25
	1096 And TEMP, TEMP, -2147483648
	1097 Compare TEMP, -2147483648
	1098 JumpIfEqual {1021}
	1099 Move X23, X0
	1100 Call 0x3EB2AE0
	1101 Move X0, X23
	1102 Call 0x1D2D690
	1103 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345FDF4 MOV X22, X1
	0x0345FDF8 MOV X23, X0
	0x0345FDFC CMP W22, 0x1
	0x0345FE00 B.NE 0x345FE20
	0x0345FE04 MOV X0, X23
	0x0345FE08 BL 0x3EB1AD0
	0x0345FE0C LDR X24, [X0]
	0x0345FE10 BL 0x3EB1AE0
	0x0345FE14 MOV W22, W31
	0x0345FE18 TBNZ X25, 0x1F, 0x345F72C
	0x0345FE1C B 0x345F790
	0x0345FE20 MOV X24, X31
	0x0345FE24 TBZ X25, 0x1F, 0x345FE8C
	0x0345FE28 CBZ X21, 0x345FE8C
	0x0345FE2C ADRP X10, 0xC94000
	0x0345FE30 LDR X8, [X21]
	0x0345FE34 LDR X10, [X10 + 0xE00]
	0x0345FE38 LDRH W9, [X8 + 0x12E]
	0x0345FE3C LDR X1, [X10]
	0x0345FE40 CBZ X9, 0x345FE64
	0x0345FE44 LDR X10, [X8 + 0xB0]
	0x0345FE48 ADD X10, X10, 0x8
	0x0345FE4C LDUR X11, [X10 - 0x8]
	0x0345FE50 CMP X11, X1
	0x0345FE54 B.EQ 0x345FE74
	0x0345FE58 SUBS X9, X9, 0x1
	0x0345FE5C ADD X10, X10, 0x10
	0x0345FE60 B.NE 0x345FE4C
	0x0345FE64 MOV X0, X21
	0x0345FE68 MOV W2, W31
	0x0345FE6C BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF7F000
	007 Move X21, 0xCD0000
	008 Move W8, [X22+1962]
	009 Move X21, [X21+1496]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD1000
	017 Move X0, [X0+64]
	018 Call 0x1C17CF4
	019 Move X0, 0xCD0000
	020 Move X0, [X0+1496]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1962], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+64]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

