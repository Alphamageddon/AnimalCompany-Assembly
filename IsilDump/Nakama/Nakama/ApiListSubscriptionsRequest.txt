Type: Nakama.ApiListSubscriptionsRequest

Method: System.String get_Cursor()

Disassembly:
	0x034082C0 LDR X0, [X0 + 0x20]
	0x034082C4 RET

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Cursor(System.String value)

Disassembly:
	0x034082C8 STR X1, [X0 + 0x20]
	0x034082CC RET

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_Limit()

Disassembly:
	0x034082D0 STP X30, X25, [X31 - 0x40]!
	0x034082D4 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_Limit(System.Int32 value)

Disassembly:
	0x034082D8 STP X22, X21, [X31 + 0x20]
	0x034082DC STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034082E0 ADRP X25, 0xFD5000
	0x034082E4 ADRP X23, 0xCEB000
	0x034082E8 ADRP X24, 0xD26000
	0x034082EC ADRP X20, 0xCEB000
	0x034082F0 ADRP X22, 0xD25000
	0x034082F4 ADRP X21, 0xD26000
	0x034082F8 LDRB W8, [X25 + 0x541]
	0x034082FC LDR X23, [X23 + 0x988]
	0x03408300 LDR X24, [X24 + 0x50]
	0x03408304 LDR X20, [X20 + 0x838]
	0x03408308 LDR X22, [X22 + 0xD88]
	0x0340830C LDR X21, [X21 + 0x58]
	0x03408310 MOV X19, X0
	0x03408314 TBNZ X8, 0x0, 0x340835C
	0x03408318 ADRP X0, 0xD25000
	0x0340831C LDR X0, [X0 + 0xD88]
	0x03408320 BL 0x1C16CF4
	0x03408324 ADRP X0, 0xD26000
	0x03408328 LDR X0, [X0 + 0x58]
	0x0340832C BL 0x1C16CF4
	0x03408330 ADRP X0, 0xCEB000
	0x03408334 LDR X0, [X0 + 0x838]
	0x03408338 BL 0x1C16CF4
	0x0340833C ADRP X0, 0xD26000
	0x03408340 LDR X0, [X0 + 0x50]
	0x03408344 BL 0x1C16CF4
	0x03408348 ADRP X0, 0xCEB000
	0x0340834C LDR X0, [X0 + 0x988]
	0x03408350 BL 0x1C16CF4
	0x03408354 MOVZ W8, 0x1
	0x03408358 STRB W8, [X25 + 0x541]
	0x0340835C LDR X2, [X19 + 0x10]
	0x03408360 LDR X0, [X23]
	0x03408364 LDR X1, [X24]
	0x03408368 LDR X3, [X20]
	0x0340836C MOV X4, X31
	0x03408370 BL 0x32277C4
	0x03408374 LDR X2, [X19 + 0x18]
	0x03408378 LDR X1, [X22]
	0x0340837C LDR X3, [X20]
	0x03408380 MOV X4, X31
	0x03408384 BL 0x32277C4
	0x03408388 LDR X2, [X19 + 0x20]
	0x0340838C LDR X1, [X21]
	0x03408390 LDR X3, [X20]
	0x03408394 LDP X20, X19, [X31 + 0x30]
	0x03408398 LDP X22, X21, [X31 + 0x20]
	0x0340839C LDP X24, X23, [X31 + 0x10]
	0x034083A0 MOV X4, X31
	0x034083A4 LDP X30, X25, [X31], #0x40
	0x034083A8 B 0x32277C4
	0x034083AC MOV X1, X31
	0x034083B0 B 0x33BDD8C
	0x034083B4 LDRB W0, [X0 + 0x10]
	0x034083B8 RET
	0x034083BC AND W8, W1, 0x1
	0x034083C0 STRB W8, [X0 + 0x10]
	0x034083C4 RET
	0x034083C8 LDR X0, [X0 + 0x18]
	0x034083CC RET
	0x034083D0 STR X1, [X0 + 0x18]
	0x034083D4 RET
	0x034083D8 LDR X0, [X0 + 0x20]
	0x034083DC RET
	0x034083E0 STR X1, [X0 + 0x20]
	0x034083E4 RET
	0x034083E8 SUB X31, X31, 0x40
	0x034083EC STP X30, X23, [X31 + 0x10]
	0x034083F0 STP X22, X21, [X31 + 0x20]
	0x034083F4 STP X20, X19, [X31 + 0x30]
	0x034083F8 ADRP X20, 0xFD5000
	0x034083FC ADRP X21, 0xCEB000
	0x03408400 ADRP X22, 0xCEB000
	0x03408404 LDRB W8, [X20 + 0x542]
	0x03408408 LDR X21, [X21 + 0x988]
	0x0340840C LDR X22, [X22 + 0x9D0]
	0x03408410 MOV X19, X0
	0x03408414 TBNZ X8, 0x0, 0x3408474
	0x03408418 ADRP X0, 0xCEB000
	0x0340841C LDR X0, [X0 + 0xB58]
	0x03408420 BL 0x1C16CF4
	0x03408424 ADRP X0, 0xCEB000
	0x03408428 LDR X0, [X0 + 0x9D0]
	0x0340842C BL 0x1C16CF4
	0x03408430 ADRP X0, 0xCEB000
	0x03408434 LDR X0, [X0 + 0x838]
	0x03408438 BL 0x1C16CF4
	0x0340843C ADRP X0, 0xD26000
	0x03408440 LDR X0, [X0 + 0x60]
	0x03408444 BL 0x1C16CF4
	0x03408448 ADRP X0, 0xD26000
	0x0340844C LDR X0, [X0 + 0x68]
	0x03408450 BL 0x1C16CF4
	0x03408454 ADRP X0, 0xD25000
	0x03408458 LDR X0, [X0 + 0xD78]
	0x0340845C BL 0x1C16CF4
	0x03408460 ADRP X0, 0xCEB000
	0x03408464 LDR X0, [X0 + 0x988]
	0x03408468 BL 0x1C16CF4
	0x0340846C MOVZ W8, 0x1
	0x03408470 STRB W8, [X20 + 0x542]
	0x03408474 LDR X0, [X22]
	0x03408478 LDR X21, [X21]
	0x0340847C MOVZ W1, 0x4
	0x03408480 BL 0x1C16D6C
	0x03408484 CBZ X0, 0x34085C8
	0x03408488 MOV X20, X0
	0x0340848C CBZ X21, 0x34084A4
	0x03408490 LDR X8, [X20]
	0x03408494 MOV X0, X21
	0x03408498 LDR X1, [X8 + 0x40]
	0x0340849C BL 0x1C16E00
	0x034084A0 CBZ X0, 0x34085BC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xFD6000
	009 Move X24, 0xCEC000
	010 Move X21, 0xD26000
	011 Move X22, 0xCEC000
	012 Move X19, 0xCEC000
	013 Move W8, [X23+1335]
	014 Move X24, [X24+2440]
	015 Move X21, [X21+3800]
	016 Move X22, [X22+2104]
	017 Move X19, [X19+2512]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0xCEC000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move X0, 0xCEC000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xCEC000
	030 Move X0, [X0+2104]
	031 Call 0x1C17CF4
	032 Move X0, 0xD26000
	033 Move X0, [X0+4016]
	034 Call 0x1C17CF4
	035 Move X0, 0xD26000
	036 Move X0, [X0+3800]
	037 Call 0x1C17CF4
	038 Move X0, 0xCEC000
	039 Move X0, [X0+2440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+1335], W8
	043 Move X0, [X24]
	044 Move X2, [X20+16]
	045 Move X1, [X21]
	046 Move X3, [X22]
	047 Move X4, X31
	048 Call String.Concat, X0, X1, X2, X3
	049 Move X8, [X19]
	050 Move X21, X0
	051 Move W1, 4
	052 Move X0, X8
	053 Call 0x1C17D6C
	054 Compare X0, 0
	055 JumpIfEqual {129}
	056 Move X19, X0
	057 Compare X21, 0
	058 JumpIfEqual {65}
	059 Move X8, [X19]
	060 Move X0, X21
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {126}
	065 Move W8, [X19+24]
	066 Compare W8, 0
	067 JumpIfEqual {125}
	068 Move X23, 0xD26000
	069 Move X23, [X23+4016]
	070 Move [X19+32], X21
	071 Move X0, [X23]
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X8, [X19]
	075 Move X1, [X8+64]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {126}
	079 Move W8, [X19+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X23]
	082 Move X9, 0xCEC000
	083 Move X9, [X9+1880]
	084 Add X1, X31, 12
	085 Move [X19+40], X8
	086 Move W8, [X20+24]
	087 Move X0, [X9]
	088 Move [X31+12], W8
	089 Call 0x1C17E04
	090 Move X20, X0
	091 Compare X0, 0
	092 JumpIfEqual {99}
	093 Move X8, [X19]
	094 Move X0, X20
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {126}
	099 Move W8, [X19+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X19+48], X20
	102 Move X0, [X22]
	103 Compare X0, 0
	104 JumpIfEqual {111}
	105 Move X8, [X19]
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {126}
	110 Move W8, [X19+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X22]
	113 Move X0, X19
	114 Move X1, X31
	115 Move [X19+56], X8
	116 Call String.Concat, X0
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X24, [X31+16]
	122 Move X23, [X31+24]
	123 Move X30, [X31+64]
	124 Return X0
	125 Call 0x1C17F28
	126 Call 0x1C17F44
	127 Move X1, X31
	128 Call 0x1C17DEC
	129 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034084A4 LDR W8, [X20 + 0x18]
	0x034084A8 CBZ W8, 0x34085B8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

