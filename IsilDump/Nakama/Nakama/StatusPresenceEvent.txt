Type: Nakama.StatusPresenceEvent

Method: System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> get_Leaves()

Disassembly:
	0x034763E0 LDR X0, [X0 + 0xAC8]
	0x034763E4 BL 0x1C16CF4
	0x034763E8 ADRP X0, 0xCBA000
	0x034763EC LDR X0, [X0 + 0x9C8]
	0x034763F0 BL 0x1C16CF4
	0x034763F4 ADRP X0, 0xCB9000
	0x034763F8 LDR X0, [X0 + 0x5B8]
	0x034763FC BL 0x1C16CF4
	0x03476400 ADRP X0, 0xC7D000
	0x03476404 LDR X0, [X0 + 0x838]
	0x03476408 BL 0x1C16CF4
	0x0347640C ADRP X0, 0xCBA000
	0x03476410 LDR X0, [X0 + 0x9D0]
	0x03476414 BL 0x1C16CF4
	0x03476418 ADRP X0, 0xCBA000
	0x0347641C LDR X0, [X0 + 0x9D8]
	0x03476420 BL 0x1C16CF4
	0x03476424 ADRP X0, 0xCBA000
	0x03476428 LDR X0, [X0 + 0x9E0]
	0x0347642C BL 0x1C16CF4
	0x03476430 ADRP X0, 0xCBA000
	0x03476434 LDR X0, [X0 + 0x9E8]
	0x03476438 BL 0x1C16CF4
	0x0347643C MOVZ W8, 0x1
	0x03476440 STRB W8, [X23 + 0x827]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF68000
	005 Move W8, [X20+2070]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCBB000
	012 Move X0, [X0+2056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2070], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfNotEqual {29}
	019 Move X19, 0xCBB000
	020 Move X19, [X19+2056]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X0, [X8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Collections.Generic.List`1<Nakama.UserPresence> get__leaves()

Disassembly:
	0x03476444 LDR X1, [X19 + 0x20]
	0x03476448 LDR X0, [X21]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__leaves(System.Collections.Generic.List`1<Nakama.UserPresence> value)

Disassembly:
	0x0347644C LDR X2, [X22]
	0x03476450 BL 0x226B7E8

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> get_Joins()

Disassembly:
	0x03476454 LDR X8, [X20]
	0x03476458 MOV X20, X0
	0x0347645C MOVZ W1, 0x9
	0x03476460 MOV X0, X8
	0x03476464 BL 0x1C16D6C
	0x03476468 CBZ X0, 0x3476538
	0x0347646C LDR W8, [X0 + 0x18]
	0x03476470 CBZ W8, 0x3476534
	0x03476474 ADRP X9, 0xCBA000
	0x03476478 LDR X9, [X9 + 0x9D8]
	0x0347647C CMP W8, 0x1
	0x03476480 LDR X9, [X9]
	0x03476484 STR X9, [X0 + 0x20]
	0x03476488 B.EQ 0x3476534
	0x0347648C LDR X9, [X19 + 0x10]
	0x03476490 CMP W8, 0x2
	0x03476494 STR X9, [X0 + 0x28]
	0x03476498 B.LS 0x3476534
	0x0347649C ADRP X9, 0xCBA000
	0x034764A0 LDR X9, [X9 + 0x9E0]
	0x034764A4 CMP W8, 0x3
	0x034764A8 LDR X9, [X9]
	0x034764AC STR X9, [X0 + 0x30]
	0x034764B0 B.EQ 0x3476534
	0x034764B4 LDR X9, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF68000
	005 Move W8, [X20+2071]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCBB000
	012 Move X0, [X0+2056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2071], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfNotEqual {29}
	019 Move X19, 0xCBB000
	020 Move X19, [X19+2056]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X0, [X8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Collections.Generic.List`1<Nakama.UserPresence> get__joins()

Disassembly:
	0x034764B8 CMP W8, 0x4
	0x034764BC STR X9, [X0 + 0x38]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__joins(System.Collections.Generic.List`1<Nakama.UserPresence> value)

Disassembly:
	0x034764C0 B.LS 0x3476534
	0x034764C4 ADRP X9, 0xCBA000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034764C8 LDR X9, [X9 + 0x9D0]
	0x034764CC CMP W8, 0x5
	0x034764D0 LDR X9, [X9]
	0x034764D4 STR X9, [X0 + 0x40]
	0x034764D8 B.EQ 0x3476534
	0x034764DC CMP W8, 0x6
	0x034764E0 STR X20, [X0 + 0x48]
	0x034764E4 B.LS 0x3476534
	0x034764E8 ADRP X9, 0xCBA000
	0x034764EC LDR X9, [X9 + 0x9E8]
	0x034764F0 CMP W8, 0x7
	0x034764F4 LDR X9, [X9]
	0x034764F8 STR X9, [X0 + 0x50]
	0x034764FC B.EQ 0x3476534
	0x03476500 LDR X9, [X19 + 0x28]
	0x03476504 CMP W8, 0x8
	0x03476508 STR X9, [X0 + 0x58]
	0x0347650C B.LS 0x3476534
	0x03476510 ADRP X8, 0xCB9000
	0x03476514 LDR X8, [X8 + 0x5B8]
	0x03476518 LDP X20, X19, [X31 + 0x20]
	0x0347651C LDP X22, X21, [X31 + 0x10]
	0x03476520 MOV X1, X31
	0x03476524 LDR X8, [X8]
	0x03476528 STR X8, [X0 + 0x60]
	0x0347652C LDP X30, X23, [X31], #0x30
	0x03476530 B 0x32278CC
	0x03476534 BL 0x1C16F28
	0x03476538 BL 0x1C16F20
	0x0347653C MOV X1, X31
	0x03476540 B 0x33BDD8C
	0x03476544 MOV X1, X31
	0x03476548 B 0x33BDD8C
	0x0347654C RET
	0x03476550 RET
	0x03476554 RET
	0x03476558 RET
	0x0347655C STR X30, [X31 - 0x20]!
	0x03476560 STP X20, X19, [X31 + 0x10]
	0x03476564 ADRP X19, 0xF67000
	0x03476568 ADRP X20, 0xCB9000
	0x0347656C LDRB W8, [X19 + 0x828]
	0x03476570 LDR X20, [X20 + 0x610]
	0x03476574 TBNZ X8, 0x0, 0x347658C
	0x03476578 ADRP X0, 0xCB9000
	0x0347657C LDR X0, [X0 + 0x610]
	0x03476580 BL 0x1C16CF4
	0x03476584 MOVZ W8, 0x1
	0x03476588 STRB W8, [X19 + 0x828]
	0x0347658C LDR X0, [X20]
	0x03476590 BL 0x1C16F10
	0x03476594 MOV X1, X31
	0x03476598 MOV X19, X0
	0x0347659C BL 0x33BDD8C
	0x034765A0 LDR X8, [X20]
	0x034765A4 LDR X8, [X8 + 0xB8]
	0x034765A8 STR X19, [X8]
	0x034765AC LDP X20, X19, [X31 + 0x10]
	0x034765B0 LDR X30, [X31], #0x20
	0x034765B4 RET
	0x034765B8 LDR X0, [X0 + 0x10]
	0x034765BC RET
	0x034765C0 STR X1, [X0 + 0x10]
	0x034765C4 RET
	0x034765C8 LDRB W0, [X0 + 0x18]
	0x034765CC RET
	0x034765D0 AND W8, W1, 0x1
	0x034765D4 STRB W8, [X0 + 0x18]
	0x034765D8 RET
	0x034765DC LDR W0, [X0 + 0x1C]
	0x034765E0 RET
	0x034765E4 STR W1, [X0 + 0x1C]
	0x034765E8 RET
	0x034765EC LDR X0, [X0 + 0x20]
	0x034765F0 RET
	0x034765F4 LDR X0, [X0 + 0x20]
	0x034765F8 RET
	0x034765FC STR X1, [X0 + 0x20]
	0x03476600 RET
	0x03476604 LDR X0, [X0 + 0x28]
	0x03476608 RET
	0x0347660C LDR X0, [X0 + 0x28]
	0x03476610 RET
	0x03476614 STR X1, [X0 + 0x28]
	0x03476618 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xF68000
	008 Move X22, 0xC7E000
	009 Move X23, 0xCBB000
	010 Move X21, 0xC7E000
	011 Move W8, [X20+2072]
	012 Move X22, [X22+2104]
	013 Move X23, [X23+2072]
	014 Move X21, [X21+2760]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xC7E000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBB000
	024 Move X0, [X0+2072]
	025 Call 0x1C17CF4
	026 Move X0, 0xCBB000
	027 Move X0, [X0+2416]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBB000
	030 Move X0, [X0+2424]
	031 Call 0x1C17CF4
	032 Move X0, 0xC7E000
	033 Move X0, [X0+2104]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBB000
	036 Move X0, [X0+2408]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2072], W8
	040 Move X0, X19
	041 Call StatusPresenceEvent.get_Joins, X0
	042 Move X8, [X22]
	043 Move X2, [X23]
	044 Move X1, X0
	045 Move X0, X8
	046 Call String.Join, X0, X1
	047 Move X20, X0
	048 Move X0, X19
	049 Call StatusPresenceEvent.get_Leaves, X0
	050 Move X8, [X22]
	051 Move X2, [X23]
	052 Move X1, X0
	053 Move X0, X8
	054 Call String.Join, X0, X1
	055 Move X8, [X21]
	056 Move X19, X0
	057 Move W1, 5
	058 Move X0, X8
	059 Call 0x1C17D6C
	060 Compare X0, 0
	061 JumpIfEqual {93}
	062 Move W8, [X0+24]
	063 Compare W8, 0
	064 JumpIfEqual {92}
	065 Move X9, 0xCBB000
	066 Move X9, [X9+2424]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, [X9]
	069 Move [X0+32], X9
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X0+40], X19
	072 Move X9, 0xCBB000
	073 Move X9, [X9+2416]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, [X9]
	076 Move [X0+48], X9
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X0+56], X20
	079 Move X8, 0xCBB000
	080 Move X8, [X8+2408]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X1, X31
	086 Move X8, [X8]
	087 Move [X0+64], X8
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 Call String.Concat, X0
	091 Return X0
	092 Call 0x1C17F28
	093 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0347661C STR X30, [X31 - 0x20]!
	0x03476620 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

