Type: Nakama.Client/<KickGroupUsersAsync>d__71

Method: System.Void MoveNext()

Disassembly:
	0x034588F0 CBZ X0, 0x3458AE4
	0x034588F4 ADRP X8, 0xC9C000
	0x034588F8 LDR X8, [X8 + 0x840]
	0x034588FC LDR X1, [X8]
	0x03458900 BL 0x269F5D0
	0x03458904 ADRP X8, 0xC9C000
	0x03458908 LDR X8, [X8 + 0x838]
	0x0345890C STR X0, [X31 + 0x20]
	0x03458910 LDR X1, [X8]
	0x03458914 ADD X0, X31, 0x20
	0x03458918 BL 0x2677430
	0x0345891C TBNZ X0, 0x0, 0x3458714
	0x03458920 STR W31, [X19]
	0x03458924 LDR X8, [X31 + 0x20]
	0x03458928 STR X8, [X19 + 0x50]
	0x0345892C LDR X0, [X25]
	0x03458930 LDR W8, [X0 + 0xE0]
	0x03458934 CBNZ W8, 0x345893C
	0x03458938 BL 0x1C16DFC
	0x0345893C ADRP X8, 0xCD7000
	0x03458940 LDR X8, [X8 + 0xE98]
	0x03458944 ADD X0, X19, 0x8
	0x03458948 LDR X3, [X8]
	0x0345894C ADD X1, X31, 0x20
	0x03458950 MOV X2, X19
	0x03458954 BL 0x2188840
	0x03458958 B 0x3458AA0
	0x0345895C CBZ X20, 0x3458AC4
	0x03458960 ADRP X8, 0xCA3000
	0x03458964 LDR X8, [X8 + 0x818]
	0x03458968 LDR X21, [X20 + 0x58]
	0x0345896C LDR X23, [X19 + 0x48]
	0x03458970 LDR X0, [X8]
	0x03458974 BL 0x1C16F10
	0x03458978 ADRP X8, 0xCD7000
	0x0345897C LDR X8, [X8 + 0xEA8]
	0x03458980 MOV X22, X0
	0x03458984 LDR X2, [X8]
	0x03458988 MOV X1, X23
	0x0345898C MOV X3, X31
	0x03458990 BL 0x2D27AA8
	0x03458994 LDR X8, [X19 + 0x48]
	0x03458998 CBZ X8, 0x3458AB8
	0x0345899C ADRP X9, 0xCD7000
	0x034589A0 LDR X23, [X19 + 0x40]
	0x034589A4 LDR X9, [X9 + 0x7C8]
	0x034589A8 CBNZ X23, 0x34589B0
	0x034589AC LDR X23, [X20 + 0x18]
	0x034589B0 LDR X20, [X8 + 0x18]
	0x034589B4 LDR X1, [X8 + 0x28]
	0x034589B8 LDR X2, [X9]
	0x034589BC STP X31, X31, [X31 + 0x8]
	0x034589C0 ADD X0, X31, 0x8
	0x034589C4 BL 0x242E368
	0x034589C8 ADRP X8, 0xCD7000
	0x034589CC LDR X8, [X8 + 0x7D0]
	0x034589D0 LDR X0, [X8]
	0x034589D4 BL 0x1C16F10
	0x034589D8 LDP X3, X4, [X31 + 0x8]
	0x034589DC MOV X24, X0
	0x034589E0 MOV X1, X20
	0x034589E4 MOV X2, X23
	0x034589E8 MOV X5, X31
	0x034589EC BL 0x3465404
	0x034589F0 CBZ X21, 0x3458ABC
	0x034589F4 MOV X0, X21
	0x034589F8 MOV X1, X22
	0x034589FC MOV X2, X24
	0x03458A00 MOV X3, X31
	0x03458A04 BL 0x3465B68
	0x03458A08 CBZ X0, 0x3458AC0
	0x03458A0C MOV X1, X31
	0x03458A10 BL 0x33ED394
	0x03458A14 STR X0, [X31 + 0x18]
	0x03458A18 ADD X0, X31, 0x18
	0x03458A1C MOV X1, X31
	0x03458A20 BL 0x32C3A80
	0x03458A24 TBZ X0, 0x0, 0x3458A64
	0x03458A28 ADD X0, X31, 0x18
	0x03458A2C MOV X1, X31
	0x03458A30 BL 0x32C3B4C
	0x03458A34 MOVN W8, 0x1
	0x03458A38 STR W8, [X19]
	0x03458A3C STR X31, [X19 + 0x48]
	0x03458A40 LDR X0, [X25]
	0x03458A44 ADD X19, X19, 0x8
	0x03458A48 LDR W8, [X0 + 0xE0]
	0x03458A4C CBNZ W8, 0x3458A54
	0x03458A50 BL 0x1C16DFC
	0x03458A54 MOV X0, X19
	0x03458A58 MOV X1, X31
	0x03458A5C BL 0x32C4864
	0x03458A60 B 0x3458AA0
	0x03458A64 MOVZ W8, 0x1
	0x03458A68 STR W8, [X19]
	0x03458A6C LDR X8, [X31 + 0x18]
	0x03458A70 STR X8, [X19 + 0x58]
	0x03458A74 LDR X0, [X25]
	0x03458A78 LDR W8, [X0 + 0xE0]
	0x03458A7C CBNZ W8, 0x3458A84
	0x03458A80 BL 0x1C16DFC
	0x03458A84 ADRP X8, 0xCD7000
	0x03458A88 LDR X8, [X8 + 0xEA0]
	0x03458A8C ADD X0, X19, 0x8
	0x03458A90 LDR X3, [X8]
	0x03458A94 ADD X1, X31, 0x18
	0x03458A98 MOV X2, X19
	0x03458A9C BL 0x2189F04
	0x03458AA0 LDP X20, X19, [X31 + 0x60]
	0x03458AA4 LDP X22, X21, [X31 + 0x50]
	0x03458AA8 LDP X24, X23, [X31 + 0x40]
	0x03458AAC LDP X30, X25, [X31 + 0x30]
	0x03458AB0 ADD X31, X31, 0x70
	0x03458AB4 RET
	0x03458AB8 BL 0x1C16F20
	0x03458ABC BL 0x1C16F20
	0x03458AC0 BL 0x1C16F20
	0x03458AC4 BL 0x1C16F20
	0x03458AC8 BL 0x1C16F20
	0x03458ACC BL 0x1C16F20
	0x03458AD0 BL 0x1C16F20
	0x03458AD4 BL 0x1C16F20
	0x03458AD8 BL 0x1C16F20
	0x03458ADC BL 0x1C16F20
	0x03458AE0 BL 0x1C16F20
	0x03458AE4 BL 0x1C16F20
	0x03458AE8 B 0x3458B5C
	0x03458AEC B 0x3458B5C
	0x03458AF0 B 0x3458B5C
	0x03458AF4 B 0x3458B5C
	0x03458AF8 B 0x3458B5C
	0x03458AFC B 0x3458B5C
	0x03458B00 B 0x3458B5C
	0x03458B04 B 0x3458B5C
	0x03458B08 B 0x3458B5C
	0x03458B0C B 0x3458B5C
	0x03458B10 B 0x3458B5C
	0x03458B14 B 0x3458B5C
	0x03458B18 B 0x3458B5C
	0x03458B1C B 0x3458B5C
	0x03458B20 B 0x3458B5C
	0x03458B24 B 0x3458B5C
	0x03458B28 B 0x3458B5C
	0x03458B2C B 0x3458B5C
	0x03458B30 B 0x3458B5C
	0x03458B34 B 0x3458B5C
	0x03458B38 B 0x3458B5C
	0x03458B3C B 0x3458B5C
	0x03458B40 B 0x3458B5C
	0x03458B44 B 0x3458B5C
	0x03458B48 B 0x3458B5C
	0x03458B4C B 0x3458B5C
	0x03458B50 B 0x3458B5C
	0x03458B54 B 0x3458B5C
	0x03458B58 B 0x3458B5C
	0x03458B5C MOV X20, X0
	0x03458B60 CMP W1, 0x1
	0x03458B64 B.NE 0x3458BF8
	0x03458B68 MOV X0, X20
	0x03458B6C BL 0x3EB1AD0
	0x03458B70 MOV X20, X0
	0x03458B74 ADRP X0, 0xC9B000
	0x03458B78 LDR X0, [X0 + 0x7D0]
	0x03458B7C BL 0x1C16D08
	0x03458B80 LDR X8, [X20]
	0x03458B84 LDR X1, [X8]
	0x03458B88 BL 0x1C17270
	0x03458B8C TBZ X0, 0x0, 0x3458BD0
	0x03458B90 LDR X20, [X20]
	0x03458B94 BL 0x3EB1AE0
	0x03458B98 MOVN W8, 0x1
	0x03458B9C STR X31, [X19 + 0x48]
	0x03458BA0 STR W8, [X19], #0x8
	0x03458BA4 ADRP X0, 0xC9E000
	0x03458BA8 LDR X0, [X0 + 0x280]
	0x03458BAC BL 0x1C16D08
	0x03458BB0 LDR W8, [X0 + 0xE0]
	0x03458BB4 CBNZ W8, 0x3458BBC
	0x03458BB8 BL 0x1C16DFC
	0x03458BBC MOV X0, X19
	0x03458BC0 MOV X1, X20
	0x03458BC4 MOV X2, X31
	0x03458BC8 BL 0x32C4908
	0x03458BCC B 0x3458AA0
	0x03458BD0 MOVZ W0, 0x8
	0x03458BD4 BL 0x3EB1AF0
	0x03458BD8 LDR X8, [X20]
	0x03458BDC STR X8, [X0]
	0x03458BE0 ADRP X1, 0xA5C000
	0x03458BE4 ADD X1, X1, 0xE58
	0x03458BE8 MOV X2, X31
	0x03458BEC BL 0x3EB1B00
	0x03458BF0 MOV X20, X0
	0x03458BF4 BL 0x3EB1AE0
	0x03458BF8 MOV X0, X20
	0x03458BFC BL 0x1D2C690
	0x03458C00 BL 0x1990590
	0x03458C04 STR X30, [X31 - 0x30]!
	0x03458C08 STP X22, X21, [X31 + 0x10]
	0x03458C0C STP X20, X19, [X31 + 0x20]
	0x03458C10 ADRP X21, 0xF85000
	0x03458C14 ADRP X22, 0xC9E000
	0x03458C18 LDRB W8, [X21 + 0x792]
	0x03458C1C LDR X22, [X22 + 0x280]
	0x03458C20 MOV X19, X1
	0x03458C24 MOV X20, X0
	0x03458C28 TBNZ X8, 0x0, 0x3458C40
	0x03458C2C ADRP X0, 0xC9E000
	0x03458C30 LDR X0, [X0 + 0x280]
	0x03458C34 BL 0x1C16CF4
	0x03458C38 MOVZ W8, 0x1
	0x03458C3C STRB W8, [X21 + 0x792]
	0x03458C40 LDR X0, [X22]
	0x03458C44 LDR W8, [X0 + 0xE0]
	0x03458C48 CBNZ W8, 0x3458C50
	0x03458C4C BL 0x1C16DFC
	0x03458C50 ADD X0, X20, 0x8
	0x03458C54 MOV X1, X19
	0x03458C58 LDP X20, X19, [X31 + 0x20]
	0x03458C5C LDP X22, X21, [X31 + 0x10]
	0x03458C60 MOV X2, X31
	0x03458C64 LDR X30, [X31], #0x30
	0x03458C68 B 0x32C477C
	0x03458C6C SUB X31, X31, 0x70
	0x03458C70 STP X30, X25, [X31 + 0x30]
	0x03458C74 STP X24, X23, [X31 + 0x40]
	0x03458C78 STP X22, X21, [X31 + 0x50]
	0x03458C7C STP X20, X19, [X31 + 0x60]
	0x03458C80 ADRP X20, 0xF85000
	0x03458C84 LDRB W8, [X20 + 0x793]
	0x03458C88 MOV X19, X0
	0x03458C8C TBNZ X8, 0x0, 0x3458D40
	0x03458C90 ADRP X0, 0xCD7000
	0x03458C94 LDR X0, [X0 + 0xEB8]
	0x03458C98 BL 0x1C16CF4
	0x03458C9C ADRP X0, 0xCD7000
	0x03458CA0 LDR X0, [X0 + 0xEC0]
	0x03458CA4 BL 0x1C16CF4
	0x03458CA8 ADRP X0, 0xC9E000
	0x03458CAC LDR X0, [X0 + 0x280]
	0x03458CB0 BL 0x1C16CF4
	0x03458CB4 ADRP X0, 0xC9D000
	0x03458CB8 LDR X0, [X0 + 0xA10]
	0x03458CBC BL 0x1C16CF4
	0x03458CC0 ADRP X0, 0xC9C000
	0x03458CC4 LDR X0, [X0 + 0x9F0]
	0x03458CC8 BL 0x1C16CF4
	0x03458CCC ADRP X0, 0xCA3000
	0x03458CD0 LDR X0, [X0 + 0x818]
	0x03458CD4 BL 0x1C16CF4
	0x03458CD8 ADRP X0, 0xC9C000
	0x03458CDC LDR X0, [X0 + 0x818]
	0x03458CE0 BL 0x1C16CF4
	0x03458CE4 ADRP X0, 0xCD7000
	0x03458CE8 LDR X0, [X0 + 0x7C8]
	0x03458CEC BL 0x1C16CF4
	0x03458CF0 ADRP X0, 0xCD7000
	0x03458CF4 LDR X0, [X0 + 0x7D0]
	0x03458CF8 BL 0x1C16CF4
	0x03458CFC ADRP X0, 0xC9C000
	0x03458D00 LDR X0, [X0 + 0x830]
	0x03458D04 BL 0x1C16CF4
	0x03458D08 ADRP X0, 0xC9C000
	0x03458D0C LDR X0, [X0 + 0x838]
	0x03458D10 BL 0x1C16CF4
	0x03458D14 ADRP X0, 0xC9C000
	0x03458D18 LDR X0, [X0 + 0x840]
	0x03458D1C BL 0x1C16CF4
	0x03458D20 ADRP X0, 0xCD7000
	0x03458D24 LDR X0, [X0 + 0xEC8]
	0x03458D28 BL 0x1C16CF4
	0x03458D2C ADRP X0, 0xCD7000
	0x03458D30 LDR X0, [X0 + 0xED0]
	0x03458D34 BL 0x1C16CF4
	0x03458D38 MOVZ W8, 0x1
	0x03458D3C STRB W8, [X20 + 0x793]
	0x03458D40 STP X31, X31, [X31 + 0x20]
	0x03458D44 STR X31, [X31 + 0x18]
	0x03458D48 ADRP X25, 0xC9E000
	0x03458D4C LDR W8, [X19]
	0x03458D50 LDR X20, [X19 + 0x20]
	0x03458D54 LDR X25, [X25 + 0x280]
	0x03458D58 CBZ W8, 0x3458D7C
	0x03458D5C CMP W8, 0x1
	0x03458D60 B.NE 0x3458DA8
	0x03458D64 LDR X8, [X19 + 0x58]
	0x03458D68 MOVN W9, 0x0
	0x03458D6C STR X8, [X31 + 0x18]
	0x03458D70 STR X31, [X19 + 0x58]
	0x03458D74 STR W9, [X19]
	0x03458D78 B 0x34590A4
	0x03458D7C LDR X8, [X19 + 0x50]
	0x03458D80 MOVN W9, 0x0
	0x03458D84 STR X8, [X31 + 0x20]
	0x03458D88 STR X31, [X19 + 0x50]
	0x03458D8C STR W9, [X19]
	0x03458D90 ADRP X8, 0xC9C000
	0x03458D94 LDR X8, [X8 + 0x830]
	0x03458D98 ADD X0, X31, 0x20
	0x03458D9C LDR X1, [X8]
	0x03458DA0 BL 0x2677474
	0x03458DA4 B 0x3458FD8
	0x03458DA8 ADRP X8, 0xCD7000
	0x03458DAC LDR X8, [X8 + 0xED0]
	0x03458DB0 LDR X0, [X8]
	0x03458DB4 BL 0x1C16F10
	0x03458DB8 MOV X21, X0
	0x03458DBC MOV X1, X31
	0x03458DC0 BL 0x3449E7C
	0x03458DC4 STR X21, [X19 + 0x48]
	0x03458DC8 CBZ X21, 0x3459144
	0x03458DCC LDR X8, [X19 + 0x20]
	0x03458DD0 STR X8, [X21 + 0x10]
	0x03458DD4 LDR X8, [X19 + 0x28]
	0x03458DD8 STR X8, [X21 + 0x18]
	0x03458DDC LDR X8, [X19 + 0x30]
	0x03458DE0 STR X8, [X21 + 0x20]
	0x03458DE4 LDR X8, [X19 + 0x38]
	0x03458DE8 STR X8, [X21 + 0x28]
	0x03458DEC CBZ X20, 0x3459148
	0x03458DF0 LDRB W8, [X20 + 0x10]
	0x03458DF4 CBZ W8, 0x3458FDC
	0x03458DF8 LDR X8, [X19 + 0x48]
	0x03458DFC CBZ X8, 0x345914C
	0x03458E00 LDR X21, [X8 + 0x18]
	0x03458E04 CBZ X21, 0x3459150
	0x03458E08 ADRP X23, 0xC9C000
	0x03458E0C LDR X8, [X21]
	0x03458E10 LDR X23, [X23 + 0x818]
	0x03458E14 LDRH W9, [X8 + 0x12E]
	0x03458E18 LDR X1, [X23]
	0x03458E1C CBZ X9, 0x3458E40
	0x03458E20 LDR X10, [X8 + 0xB0]
	0x03458E24 ADD X10, X10, 0x8
	0x03458E28 LDUR X11, [X10 - 0x8]
	0x03458E2C CMP X11, X1
	0x03458E30 B.EQ 0x3458E50
	0x03458E34 SUBS X9, X9, 0x1
	0x03458E38 ADD X10, X10, 0x10
	0x03458E3C B.NE 0x3458E28
	0x03458E40 MOVZ W2, 0x7
	0x03458E44 MOV X0, X21
	0x03458E48 BL 0x1C5C788
	0x03458E4C B 0x3458E60
	0x03458E50 LDR W9, [X10]
	0x03458E54 ADD W9, W9, 0x7
	0x03458E58 ADD X8, X8, W9, 0x4, SXTW
	0x03458E5C ADD X0, X8, 0x138
	0x03458E60 LDP X8, X1, [X0]
	0x03458E64 MOV X0, X21
	0x03458E68 BLR X8
	0x03458E6C MOV X1, X31
	0x03458E70 BL 0x32277A8
	0x03458E74 TBNZ X0, 0x0, 0x3458FD8
	0x03458E78 LDR X8, [X19 + 0x48]
	0x03458E7C CBZ X8, 0x3459154
	0x03458E80 ADRP X9, 0xC9C000
	0x03458E84 LDR X9, [X9 + 0x9F0]
	0x03458E88 LDR X21, [X8 + 0x18]
	0x03458E8C LDR X0, [X9]
	0x03458E90 LDR W9, [X0 + 0xE0]
	0x03458E94 CBNZ W9, 0x3458E9C
	0x03458E98 BL 0x1C16DFC
	0x03458E9C MOV X0, X31
	0x03458EA0 BL 0x33616A4
	0x03458EA4 ADRP X22, 0xC9D000
	0x03458EA8 LDR X22, [X22 + 0xA10]
	0x03458EAC MOV X8, X0
	0x03458EB0 STR X8, [X31 + 0x28]
	0x03458EB4 LDR X0, [X22]
	0x03458EB8 LDR W8, [X0 + 0xE0]
	0x03458EBC CBNZ W8, 0x3458EC8
	0x03458EC0 BL 0x1C16DFC
	0x03458EC4 LDR X0, [X22]
	0x03458EC8 LDR X8, [X0 + 0xB8]
	0x03458ECC LDR X1, [X8]
	0x03458ED0 ADD X0, X31, 0x28
	0x03458ED4 MOV X2, X31
	0x03458ED8 BL 0x335FC68
	0x03458EDC CBZ X21, 0x3459158
	0x03458EE0 LDR X8, [X21]
	0x03458EE4 LDR X1, [X23]
	0x03458EE8 MOV X22, X0
	0x03458EEC LDRH W9, [X8 + 0x12E]
	0x03458EF0 CBZ X9, 0x3458F14
	0x03458EF4 LDR X10, [X8 + 0xB0]
	0x03458EF8 ADD X10, X10, 0x8
	0x03458EFC LDUR X11, [X10 - 0x8]
	0x03458F00 CMP X11, X1
	0x03458F04 B.EQ 0x3458F24
	0x03458F08 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF86000
	011 Move W8, [X20+1933]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD8000
	018 Move X0, [X0+3672]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD8000
	021 Move X0, [X0+3680]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9F000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9E000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9D000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA4000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9D000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD8000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD8000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9D000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9D000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9D000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD8000
	054 Move X0, [X0+3688]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD8000
	057 Move X0, [X0+3696]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1933], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9F000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xC9D000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD8000
	091 Move X8, [X8+3696]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass71_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {358}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Move X8, [X19+64]
	109 Move [X21+48], X8
	110 Compare X20, 0
	111 JumpIfEqual {359}
	112 Move W8, [X20+16]
	113 Compare W8, 0
	114 JumpIfEqual {252}
	115 Move X8, [X19+80]
	116 Compare X8, 0
	117 JumpIfEqual {360}
	118 Move X21, [X8+24]
	119 Compare X21, 0
	120 JumpIfEqual {361}
	121 Move X23, 0xC9D000
	122 Move X8, [X21]
	123 Move X23, [X23+2072]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X23]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 7
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 7
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X31
	146 Call String.IsNullOrEmpty, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {250}
	151 Move X8, [X19+80]
	152 Compare X8, 0
	153 JumpIfEqual {362}
	154 Move X9, 0xC9D000
	155 Move X9, [X9+2544]
	156 Move X21, [X8+24]
	157 Move X0, [X9]
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X31
	163 Call DateTime.get_UtcNow
	164 Move X22, 0xC9E000
	165 Move X22, [X22+2576]
	166 Move X8, X0
	167 Move [X31+40], X8
	168 Move X0, [X22]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X22]
	174 Move X8, [X0+184]
	175 Move X1, [X8]
	176 Add X0, X31, 40
	177 Move X2, X31
	178 Call DateTime.Add, X0, X1
	179 Compare X21, 0
	180 JumpIfEqual {363}
	181 Move X8, [X21]
	182 Move X1, [X23]
	183 Move X22, X0
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 11
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 11
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X2, [X0+8]
	202 Move X0, X21
	203 Move X1, X22
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {250}
	209 Move X8, [X19+80]
	210 Compare X8, 0
	211 JumpIfEqual {364}
	212 Move X1, [X8+24]
	213 Move X3, [X19+72]
	214 Move X4, [X8+48]
	215 Move X0, X20
	216 Move X2, X31
	217 Move X5, X31
	218 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	219 Compare X0, 0
	220 JumpIfEqual {365}
	221 Move X8, 0xC9D000
	222 Move X8, [X8+2112]
	223 Move X1, [X8]
	224 Call Task`1<Object>.GetAwaiter, X0
	225 Move X8, 0xC9D000
	226 Move X8, [X8+2104]
	227 Move [X31+32], X0
	228 Move X1, [X8]
	229 Add X0, X31, 32
	230 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {85}
	235 Move [X19], W31
	236 Move X8, [X31+32]
	237 Move [X19+88], X8
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0xCD8000
	244 Move X8, [X8+3672]
	245 Add X0, X19, 8
	246 Move X3, [X8]
	247 Add X1, X31, 32
	248 Move X2, X19
	249 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	250 Compare X20, 0
	251 JumpIfEqual {357}
	252 Move X8, 0xCA4000
	253 Move X8, [X8+2072]
	254 Move X21, [X20+88]
	255 Move X23, [X19+80]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X8, 0xCD8000
	259 Move X8, [X8+3688]
	260 Move X22, X0
	261 Move X2, [X8]
	262 Move X1, X23
	263 Move X3, X31
	264 Call Func`1<Object>..ctor, X0, X1, X2
	265 Move X8, [X19+80]
	266 Compare X8, 0
	267 JumpIfEqual {354}
	268 Move X9, 0xCD8000
	269 Move X23, [X19+72]
	270 Move X9, [X9+1992]
	271 Compare X23, 0
	272 JumpIfNotEqual {274}
	273 Move X23, [X20+24]
	274 Move X20, [X8+24]
	275 Move X1, [X8+48]
	276 Move X2, [X9]
	277 Move [X31+8], X31
	278 Move [X31+16], X31
	279 Add X0, X31, 8
	280 Call Nullable`1<CancellationToken>..ctor, X0, X1
	281 Move X8, 0xCD8000
	282 Move X8, [X8+2000]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X3, [X31+8]
	286 Move X4, [X31+16]
	287 Move X24, X0
	288 Move X1, X20
	289 Move X2, X23
	290 Move X5, X31
	291 Call RetryHistory..ctor, X0, X1, X2, X3
	292 Compare X21, 0
	293 JumpIfEqual {355}
	294 Move X0, X21
	295 Move X1, X22
	296 Move X2, X24
	297 Move X3, X31
	298 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	299 Compare X0, 0
	300 JumpIfEqual {356}
	301 Move X1, X31
	302 Call Task.GetAwaiter, X0
	303 Move [X31+24], X0
	304 Add X0, X31, 24
	305 Move X1, X31
	306 Call TaskAwaiter.get_IsCompleted, X0
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {328}
	311 Add X0, X31, 24
	312 Move X1, X31
	313 Call TaskAwaiter.GetResult, X0
	314 Move TEMP, 1
	315 Not TEMP
	316 Move W8, TEMP
	317 Move [X19], W8
	318 Move [X19+80], X31
	319 Move X0, [X25]
	320 Add X19, X19, 8
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X19
	326 Move X1, X31
	327 Call AsyncTaskMethodBuilder.SetResult, X0
	328 Move W8, 1
	329 Move [X19], W8
	330 Move X8, [X31+24]
	331 Move [X19+96], X8
	332 Move X0, [X25]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X8, 0xCD8000
	338 Move X8, [X8+3680]
	339 Add X0, X19, 8
	340 Move X3, [X8]
	341 Add X1, X31, 24
	342 Move X2, X19
	343 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	344 Move X20, [X31+96]
	345 Move X19, [X31+104]
	346 Move X22, [X31+80]
	347 Move X21, [X31+88]
	348 Move X24, [X31+64]
	349 Move X23, [X31+72]
	350 Move X30, [X31+48]
	351 Move X25, [X31+56]
	352 Add X31, X31, 112
	353 Return 
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X20, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X20
	369 Call 0x3EB2AD0
	370 Move X20, X0
	371 Move X0, 0xC9C000
	372 Move X0, [X0+2000]
	373 Call 0x1C17D08
	374 Move X8, [X20]
	375 Move X1, [X8]
	376 Call 0x1C18270
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {399}
	381 Move X20, [X20]
	382 Call 0x3EB2AE0
	383 Move TEMP, 1
	384 Not TEMP
	385 Move W8, TEMP
	386 Move [X19+80], X31
	387 Move [X19+8], W8
	388 Move X0, 0xC9F000
	389 Move X0, [X0+640]
	390 Call 0x1C17D08
	391 Move W8, [X0+224]
	392 Compare W8, 0
	393 JumpIfNotEqual {395}
	394 Call 0x1C17DFC
	395 Move X0, X19
	396 Move X1, X20
	397 Move X2, X31
	398 Call AsyncTaskMethodBuilder.SetException, X0, X1
	399 Move W0, 8
	400 Call 0x3EB2AF0
	401 Move X8, [X20]
	402 Move [X0], X8
	403 Move X1, 0xA5D000
	404 Add X1, X1, 3672
	405 Move X2, X31
	406 Call 0x3EB2B00
	407 Move X20, X0
	408 Call 0x3EB2AE0
	409 Move X0, X20
	410 Call 0x1D2D690
	411 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03458F0C ADD X10, X10, 0x10
	0x03458F10 B.NE 0x3458EFC
	0x03458F14 MOVZ W2, 0xB
	0x03458F18 MOV X0, X21
	0x03458F1C BL 0x1C5C788
	0x03458F20 B 0x3458F34
	0x03458F24 LDR W9, [X10]
	0x03458F28 ADD W9, W9, 0xB
	0x03458F2C ADD X8, X8, W9, 0x4, SXTW
	0x03458F30 ADD X0, X8, 0x138
	0x03458F34 LDP X8, X2, [X0]
	0x03458F38 MOV X0, X21
	0x03458F3C MOV X1, X22
	0x03458F40 BLR X8
	0x03458F44 TBZ X0, 0x0, 0x3458FD8
	0x03458F48 LDR X8, [X19 + 0x48]
	0x03458F4C CBZ X8, 0x345915C
	0x03458F50 LDR X1, [X8 + 0x18]
	0x03458F54 LDR X3, [X19 + 0x40]
	0x03458F58 LDR X4, [X8 + 0x28]
	0x03458F5C MOV X0, X20
	0x03458F60 MOV X2, X31
	0x03458F64 MOV X5, X31
	0x03458F68 BL 0x34440A8
	0x03458F6C CBZ X0, 0x3459160
	0x03458F70 ADRP X8, 0xC9C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF86000
	007 Move X22, 0xC9F000
	008 Move W8, [X21+1934]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1934], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

