Type: Nakama.ApiClient/<UnlinkCustomAsync>d__31

Method: System.Void MoveNext()

Disassembly:
	0x03437F24 BL 0x1C16F28
	0x03437F28 BL 0x1C16F20
	0x03437F2C BL 0x1C16F20
	0x03437F30 BL 0x1C16F20
	0x03437F34 BL 0x1C16F20
	0x03437F38 BL 0x1C16F20
	0x03437F3C BL 0x1C16F20
	0x03437F40 B 0x3437FA0
	0x03437F44 B 0x3437FA0
	0x03437F48 B 0x3437FA0
	0x03437F4C B 0x3437FA0
	0x03437F50 B 0x3437FA0
	0x03437F54 B 0x3437FA0
	0x03437F58 B 0x3437FA0
	0x03437F5C B 0x3437FA0
	0x03437F60 B 0x3437FA0
	0x03437F64 B 0x3437FA0
	0x03437F68 B 0x3437FA0
	0x03437F6C B 0x3437FA0
	0x03437F70 B 0x3437FA0
	0x03437F74 B 0x3437FA0
	0x03437F78 B 0x3437FA0
	0x03437F7C B 0x3437FA0
	0x03437F80 B 0x3437FA0
	0x03437F84 B 0x3437FA0
	0x03437F88 B 0x3437FA0
	0x03437F8C B 0x3437FA0
	0x03437F90 B 0x3437FA0
	0x03437F94 B 0x3437FA0
	0x03437F98 B 0x3437FA0
	0x03437F9C B 0x3437FA0
	0x03437FA0 MOV X20, X0
	0x03437FA4 CMP W1, 0x1
	0x03437FA8 B.NE 0x3438038
	0x03437FAC MOV X0, X20
	0x03437FB0 BL 0x3EB1AD0
	0x03437FB4 MOV X20, X0
	0x03437FB8 ADRP X0, 0xCBC000
	0x03437FBC LDR X0, [X0 + 0x7D0]
	0x03437FC0 BL 0x1C16D08
	0x03437FC4 LDR X8, [X20]
	0x03437FC8 LDR X1, [X8]
	0x03437FCC BL 0x1C17270
	0x03437FD0 TBZ X0, 0x0, 0x3438010
	0x03437FD4 LDR X20, [X20]
	0x03437FD8 BL 0x3EB1AE0
	0x03437FDC MOVN W8, 0x1
	0x03437FE0 STR W8, [X19], #0x8
	0x03437FE4 ADRP X0, 0xCBF000
	0x03437FE8 LDR X0, [X0 + 0x280]
	0x03437FEC BL 0x1C16D08
	0x03437FF0 LDR W8, [X0 + 0xE0]
	0x03437FF4 CBNZ W8, 0x3437FFC
	0x03437FF8 BL 0x1C16DFC
	0x03437FFC MOV X0, X19
	0x03438000 MOV X1, X20
	0x03438004 MOV X2, X31
	0x03438008 BL 0x32C4908
	0x0343800C B 0x3437EB0
	0x03438010 MOVZ W0, 0x8
	0x03438014 BL 0x3EB1AF0
	0x03438018 LDR X8, [X20]
	0x0343801C STR X8, [X0]
	0x03438020 ADRP X1, 0xA7C000
	0x03438024 ADD X1, X1, 0xE58
	0x03438028 MOV X2, X31
	0x0343802C BL 0x3EB1B00
	0x03438030 MOV X20, X0
	0x03438034 BL 0x3EB1AE0
	0x03438038 MOV X0, X20
	0x0343803C BL 0x1D2C690
	0x03438040 BL 0x1990590
	0x03438044 STR X30, [X31 - 0x30]!
	0x03438048 STP X22, X21, [X31 + 0x10]
	0x0343804C STP X20, X19, [X31 + 0x20]
	0x03438050 ADRP X21, 0xFA5000
	0x03438054 ADRP X22, 0xCBE000
	0x03438058 LDRB W8, [X21 + 0x67C]
	0x0343805C LDR X22, [X22 + 0x280]
	0x03438060 MOV X19, X1
	0x03438064 MOV X20, X0
	0x03438068 TBNZ X8, 0x0, 0x3438080
	0x0343806C ADRP X0, 0xCBE000
	0x03438070 LDR X0, [X0 + 0x280]
	0x03438074 BL 0x1C16CF4
	0x03438078 MOVZ W8, 0x1
	0x0343807C STRB W8, [X21 + 0x67C]
	0x03438080 LDR X0, [X22]
	0x03438084 LDR W8, [X0 + 0xE0]
	0x03438088 CBNZ W8, 0x3438090
	0x0343808C BL 0x1C16DFC
	0x03438090 ADD X0, X20, 0x8
	0x03438094 MOV X1, X19
	0x03438098 LDP X20, X19, [X31 + 0x20]
	0x0343809C LDP X22, X21, [X31 + 0x10]
	0x034380A0 MOV X2, X31
	0x034380A4 LDR X30, [X31], #0x30
	0x034380A8 B 0x32C477C
	0x034380AC SUB X31, X31, 0x70
	0x034380B0 STR X30, [X31 + 0x10]
	0x034380B4 STP X28, X27, [X31 + 0x20]
	0x034380B8 STP X26, X25, [X31 + 0x30]
	0x034380BC STP X24, X23, [X31 + 0x40]
	0x034380C0 STP X22, X21, [X31 + 0x50]
	0x034380C4 STP X20, X19, [X31 + 0x60]
	0x034380C8 ADRP X20, 0xFA5000
	0x034380CC LDRB W8, [X20 + 0x67D]
	0x034380D0 MOV X19, X0
	0x034380D4 TBNZ X8, 0x0, 0x34381A0
	0x034380D8 ADRP X0, 0xCF7000
	0x034380DC LDR X0, [X0 + 0x3B8]
	0x034380E0 BL 0x1C16CF4
	0x034380E4 ADRP X0, 0xCBE000
	0x034380E8 LDR X0, [X0 + 0x280]
	0x034380EC BL 0x1C16CF4
	0x034380F0 ADRP X0, 0xCC4000
	0x034380F4 LDR X0, [X0 + 0x8D8]
	0x034380F8 BL 0x1C16CF4
	0x034380FC ADRP X0, 0xCBC000
	0x03438100 LDR X0, [X0 + 0x810]
	0x03438104 BL 0x1C16CF4
	0x03438108 ADRP X0, 0xCBC000
	0x0343810C LDR X0, [X0 + 0x6C0]
	0x03438110 BL 0x1C16CF4
	0x03438114 ADRP X0, 0xCBC000
	0x03438118 LDR X0, [X0 + 0x6D0]
	0x0343811C BL 0x1C16CF4
	0x03438120 ADRP X0, 0xCF6000
	0x03438124 LDR X0, [X0 + 0x7B8]
	0x03438128 BL 0x1C16CF4
	0x0343812C ADRP X0, 0xCBE000
	0x03438130 LDR X0, [X0 + 0x1E0]
	0x03438134 BL 0x1C16CF4
	0x03438138 ADRP X0, 0xCBE000
	0x0343813C LDR X0, [X0 + 0x1F0]
	0x03438140 BL 0x1C16CF4
	0x03438144 ADRP X0, 0xCBE000
	0x03438148 LDR X0, [X0 + 0x1F8]
	0x0343814C BL 0x1C16CF4
	0x03438150 ADRP X0, 0xCC4000
	0x03438154 LDR X0, [X0 + 0x3A0]
	0x03438158 BL 0x1C16CF4
	0x0343815C ADRP X0, 0xCE4000
	0x03438160 LDR X0, [X0 + 0x4D8]
	0x03438164 BL 0x1C16CF4
	0x03438168 ADRP X0, 0xCF6000
	0x0343816C LDR X0, [X0 + 0x7D0]
	0x03438170 BL 0x1C16CF4
	0x03438174 ADRP X0, 0xCF6000
	0x03438178 LDR X0, [X0 + 0x7D8]
	0x0343817C BL 0x1C16CF4
	0x03438180 ADRP X0, 0xCBB000
	0x03438184 LDR X0, [X0 + 0x988]
	0x03438188 BL 0x1C16CF4
	0x0343818C ADRP X0, 0xCF7000
	0x03438190 LDR X0, [X0 + 0x3C0]
	0x03438194 BL 0x1C16CF4
	0x03438198 MOVZ W8, 0x1
	0x0343819C STRB W8, [X20 + 0x67D]
	0x034381A0 STR X31, [X31 + 0x18]
	0x034381A4 ADRP X28, 0xCBE000
	0x034381A8 LDR W8, [X19]
	0x034381AC LDR X28, [X28 + 0x280]
	0x034381B0 CBZ W8, 0x3438390
	0x034381B4 LDR X8, [X19 + 0x20]
	0x034381B8 CBZ X8, 0x34384A8
	0x034381BC LDR X25, [X19 + 0x28]
	0x034381C0 CBZ X25, 0x34384F0
	0x034381C4 LDR X0, [X25 + 0x20]
	0x034381C8 CBZ X0, 0x34384F4
	0x034381CC ADRP X8, 0xCF7000
	0x034381D0 ADRP X9, 0xCBB000
	0x034381D4 LDR X8, [X8 + 0x3C0]
	0x034381D8 LDR X9, [X9 + 0x988]
	0x034381DC LDR X21, [X8]
	0x034381E0 LDR X20, [X9]
	0x034381E4 MOV X1, X31
	0x034381E8 BL 0x361B448
	0x034381EC ADRP X8, 0xCC4000
	0x034381F0 LDR X8, [X8 + 0x8D8]
	0x034381F4 MOV X22, X0
	0x034381F8 LDR X0, [X8]
	0x034381FC MOVZ W1, 0x1
	0x03438200 BL 0x1C16D6C
	0x03438204 MOV X1, X0
	0x03438208 CBZ X1, 0x34384F8
	0x0343820C LDR W8, [X1 + 0x18]
	0x03438210 CBZ W8, 0x34384FC
	0x03438214 MOVZ W8, 0x2F
	0x03438218 STRH W8, [X1 + 0x20]
	0x0343821C CBZ X22, 0x3438500
	0x03438220 MOV X0, X22
	0x03438224 MOV X2, X31
	0x03438228 BL 0x322BC58
	0x0343822C MOV X1, X21
	0x03438230 MOV X2, X31
	0x03438234 BL 0x321B938
	0x03438238 ADRP X8, 0xCC4000
	0x0343823C LDR X8, [X8 + 0x3A0]
	0x03438240 MOV X22, X0
	0x03438244 LDR X23, [X25 + 0x20]
	0x03438248 LDR X0, [X8]
	0x0343824C BL 0x1C16F10
	0x03438250 MOV X21, X0
	0x03438254 MOV X1, X23
	0x03438258 MOV X2, X31
	0x0343825C BL 0x36281F8
	0x03438260 CBZ X21, 0x3438504
	0x03438264 MOV X0, X21
	0x03438268 MOV X1, X22
	0x0343826C MOV X2, X31
	0x03438270 BL 0x36288CC
	0x03438274 MOV X0, X21
	0x03438278 MOV X1, X20
	0x0343827C MOV X2, X31
	0x03438280 BL 0x3628980
	0x03438284 MOV X0, X21
	0x03438288 MOV X1, X31
	0x0343828C BL 0x3628A38
	0x03438290 ADRP X8, 0xCE4000
	0x03438294 ADRP X9, 0xCBC000
	0x03438298 LDR X8, [X8 + 0x4D8]
	0x0343829C LDR X9, [X9 + 0x6D0]
	0x034382A0 MOV X20, X0
	0x034382A4 LDR X21, [X8]
	0x034382A8 LDR X0, [X9]
	0x034382AC BL 0x1C16F10
	0x034382B0 ADRP X8, 0xCBC000
	0x034382B4 LDR X8, [X8 + 0x6C0]
	0x034382B8 MOV X22, X0
	0x034382BC LDR X1, [X8]
	0x034382C0 BL 0x2AA4804
	0x034382C4 ADRP X8, 0xCF6000
	0x034382C8 LDR X8, [X8 + 0x7D8]
	0x034382CC LDR X1, [X19 + 0x30]
	0x034382D0 LDR X0, [X8]
	0x034382D4 MOV X2, X31
	0x034382D8 BL 0x321B938
	0x034382DC CBZ X22, 0x3438508
	0x034382E0 ADRP X8, 0xCF6000
	0x034382E4 LDR X8, [X8 + 0x7D0]
	0x034382E8 ADRP X9, 0xCBC000
	0x034382EC LDR X9, [X9 + 0x810]
	0x034382F0 MOV X2, X0
	0x034382F4 LDR X1, [X8]
	0x034382F8 LDR X3, [X9]
	0x034382FC MOV X0, X22
	0x03438300 BL 0x2AA5098
	0x03438304 LDR X0, [X19 + 0x20]
	0x03438308 MOV X1, X31
	0x0343830C BL 0x3483BE4
	0x03438310 MOV X23, X0
	0x03438314 MOV X0, X31
	0x03438318 BL 0x3241948
	0x0343831C CBZ X0, 0x343850C
	0x03438320 LDR X8, [X0]
	0x03438324 LDR X9, [X8 + 0x268]
	0x03438328 LDR X2, [X8 + 0x270]
	0x0343832C MOV X1, X23
	0x03438330 BLR X9
	0x03438334 LDR X24, [X25 + 0x10]
	0x03438338 CBZ X24, 0x3438510
	0x0343833C ADRP X10, 0xCF6000
	0x03438340 LDR X10, [X10 + 0x7B8]
	0x03438344 LDR X8, [X24]
	0x03438348 LDR W26, [X25 + 0x18]
	0x0343834C LDP X27, X25, [X19 + 0x38]
	0x03438350 LDR X1, [X10]
	0x03438354 LDRH W9, [X8 + 0x12E]
	0x03438358 MOV X23, X0
	0x0343835C CBZ X9, 0x3438380
	0x03438360 LDR X10, [X8 + 0xB0]
	0x03438364 ADD X10, X10, 0x8
	0x03438368 LDUR X11, [X10 - 0x8]
	0x0343836C CMP X11, X1
	0x03438370 B.EQ 0x34383A8
	0x03438374 SUBS X9, X9, 0x1
	0x03438378 ADD X10, X10, 0x10
	0x0343837C B.NE 0x3438368
	0x03438380 MOVZ W2, 0x3
	0x03438384 MOV X0, X24
	0x03438388 BL 0x1C5C788
	0x0343838C B 0x34383B8
	0x03438390 LDR X8, [X19 + 0x48]
	0x03438394 MOVN W9, 0x0
	0x03438398 STR X8, [X31 + 0x18]
	0x0343839C STR X31, [X19 + 0x48]
	0x034383A0 STR W9, [X19]
	0x034383A4 B 0x3438414
	0x034383A8 LDR W9, [X10]
	0x034383AC ADD W9, W9, 0x3
	0x034383B0 ADD X8, X8, W9, 0x4, SXTW
	0x034383B4 ADD X0, X8, 0x138
	0x034383B8 LDP X8, X9, [X0]
	0x034383BC MOV X0, X24
	0x034383C0 MOV X1, X21
	0x034383C4 MOV X2, X20
	0x034383C8 MOV X3, X22
	0x034383CC MOV X4, X23
	0x034383D0 MOV W5, W26
	0x034383D4 MOV X6, X27
	0x034383D8 MOV X7, X25
	0x034383DC STR X9, [X31]
	0x034383E0 BLR X8
	0x034383E4 CBZ X0, 0x3438514
	0x034383E8 ADRP X8, 0xCBE000
	0x034383EC LDR X8, [X8 + 0x1F8]
	0x034383F0 LDR X1, [X8]
	0x034383F4 BL 0x269F5D0
	0x034383F8 ADRP X8, 0xCBE000
	0x034383FC LDR X8, [X8 + 0x1F0]
	0x03438400 STR X0, [X31 + 0x18]
	0x03438404 LDR X1, [X8]
	0x03438408 ADD X0, X31, 0x18
	0x0343840C BL 0x2677430
	0x03438410 TBZ X0, 0x0, 0x3438450
	0x03438414 ADRP X8, 0xCBE000
	0x03438418 LDR X8, [X8 + 0x1E0]
	0x0343841C ADD X0, X31, 0x18
	0x03438420 LDR X1, [X8]
	0x03438424 BL 0x2677474
	0x03438428 MOVN W8, 0x1
	0x0343842C STR W8, [X19], #0x8
	0x03438430 LDR X0, [X28]
	0x03438434 LDR W8, [X0 + 0xE0]
	0x03438438 CBNZ W8, 0x3438440
	0x0343843C BL 0x1C16DFC
	0x03438440 MOV X0, X19
	0x03438444 MOV X1, X31
	0x03438448 BL 0x32C4864
	0x0343844C B 0x3438488
	0x03438450 STR W31, [X19]
	0x03438454 LDR X8, [X31 + 0x18]
	0x03438458 STR X8, [X19 + 0x48]
	0x0343845C LDR X0, [X28]
	0x03438460 LDR W8, [X0 + 0xE0]
	0x03438464 CBNZ W8, 0x343846C
	0x03438468 BL 0x1C16DFC
	0x0343846C ADRP X8, 0xCF7000
	0x03438470 LDR X8, [X8 + 0x3B8]
	0x03438474 ADD X0, X19, 0x8
	0x03438478 LDR X3, [X8]
	0x0343847C ADD X1, X31, 0x18
	0x03438480 MOV X2, X19
	0x03438484 BL 0x2186E94
	0x03438488 LDP X20, X19, [X31 + 0x60]
	0x0343848C LDP X22, X21, [X31 + 0x50]
	0x03438490 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA7000
	014 Move W8, [X20+1655]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF9000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC0000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC6000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBE000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBE000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBE000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF8000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC0000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC0000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC0000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC6000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE6000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xCF9000
	057 Move X0, [X0+888]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF8000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF8000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBC000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1655], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCBF000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF8000
	086 Move X9, 0xCBC000
	087 Move X8, [X8+888]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC5000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC5000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE5000
	139 Move X9, 0xCBD000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBD000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF7000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF7000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBD000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF7000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCBF000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCBF000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCBF000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF8000
	269 Move X8, [X8+880]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC4000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF7000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF8000
	301 Move X0, [X0+896]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBC000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCBF000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7D000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03438494 LDP X26, X25, [X31 + 0x30]
	0x03438498 LDP X28, X27, [X31 + 0x20]
	0x0343849C LDR X30, [X31 + 0x10]
	0x034384A0 ADD X31, X31, 0x70
	0x034384A4 RET
	0x034384A8 ADRP X0, 0xCC3000
	0x034384AC LDR X0, [X0 + 0x578]
	0x034384B0 BL 0x1C16D08
	0x034384B4 BL 0x1C16F10
	0x034384B8 MOV X20, X0
	0x034384BC ADRP X0, 0xCF6000
	0x034384C0 LDR X0, [X0 + 0xBC8]
	0x034384C4 BL 0x1C16D08
	0x034384C8 MOV X1, X0
	0x034384CC MOV X0, X20
	0x034384D0 MOV X2, X31
	0x034384D4 BL 0x3314A68
	0x034384D8 ADRP X0, 0xCF7000
	0x034384DC LDR X0, [X0 + 0x3C8]
	0x034384E0 BL 0x1C16D08
	0x034384E4 MOV X1, X0
	0x034384E8 MOV X0, X20
	0x034384EC BL 0x1C16DEC
	0x034384F0 BL 0x1C16F20
	0x034384F4 BL 0x1C16F20
	0x034384F8 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA6000
	007 Move X22, 0xCBF000
	008 Move W8, [X21+1656]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBF000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1656], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

