Type: Nakama.StorageObjectId

Method: System.String get_Collection()

Disassembly:
	0x034856A8 MOV X2, X0
	0x034856AC MOV X0, X19

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Collection(System.String value)

Disassembly:
	0x034856B0 MOV X1, X20
	0x034856B4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Key()

Disassembly:
	0x034856B8 LDR X30, [X31], #0x20
	0x034856BC B 0x34855AC

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Key(System.String value)

Disassembly:
	0x034856C0 BL 0x1C16F20
	0x034856C4 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Version()

Disassembly:
	0x034856C8 STP X22, X21, [X31 + 0x10]
	0x034856CC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Version(System.String value)

Disassembly:
	0x034856D0 ADRP X20, 0xF58000
	0x034856D4 LDRB W8, [X20 + 0x8E9]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_UserId()

Disassembly:
	0x034856D8 MOV X19, X0
	0x034856DC TBNZ X8, 0x0, 0x3485718

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_UserId(System.String value)

Disassembly:
	0x034856E0 ADRP X0, 0xCAC000
	0x034856E4 LDR X0, [X0 + 0xF8]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034856E8 BL 0x1C16CF4
	0x034856EC ADRP X0, 0xC71000
	0x034856F0 LDR X0, [X0 + 0x280]
	0x034856F4 BL 0x1C16CF4
	0x034856F8 ADRP X0, 0xC76000
	0x034856FC LDR X0, [X0 + 0x7D8]
	0x03485700 BL 0x1C16CF4
	0x03485704 ADRP X0, 0xC6E000
	0x03485708 LDR X0, [X0 + 0x988]
	0x0348570C BL 0x1C16CF4
	0x03485710 MOVZ W8, 0x1
	0x03485714 STRB W8, [X20 + 0x8E9]
	0x03485718 STR X31, [X31 + 0x8]
	0x0348571C ADRP X21, 0xC71000
	0x03485720 LDR W8, [X19]
	0x03485724 LDR X22, [X19 + 0x20]
	0x03485728 LDR X21, [X21 + 0x280]
	0x0348572C CBZ W8, 0x34857F8
	0x03485730 CBZ X22, 0x3485884
	0x03485734 LDR X0, [X22 + 0x50]
	0x03485738 CBZ X0, 0x3485820
	0x0348573C LDR X8, [X0]
	0x03485740 LDP X9, X1, [X8 + 0x1B8]
	0x03485744 BLR X9
	0x03485748 LDR X20, [X22 + 0x50]
	0x0348574C CMP W0, 0x2
	0x03485750 B.NE 0x3485854
	0x03485754 ADRP X8, 0xC76000
	0x03485758 LDR X8, [X8 + 0x7D8]
	0x0348575C LDR X0, [X8]
	0x03485760 LDR W8, [X0 + 0xE0]
	0x03485764 CBNZ W8, 0x348576C
	0x03485768 BL 0x1C16DFC
	0x0348576C MOV X0, X31
	0x03485770 BL 0x33DD2A8
	0x03485774 CBZ X20, 0x3485890
	0x03485778 ADRP X9, 0xC6E000
	0x0348577C LDR X8, [X20]
	0x03485780 LDR X9, [X9 + 0x988]
	0x03485784 MOV X3, X0
	0x03485788 LDR X2, [X9]
	0x0348578C LDP X9, X4, [X8 + 0x1D8]
	0x03485790 MOVZ W1, 0x3E8
	0x03485794 MOV X0, X20
	0x03485798 BLR X9
	0x0348579C CBZ X0, 0x3485894
	0x034857A0 MOV X1, X31
	0x034857A4 BL 0x33ED394
	0x034857A8 STR X0, [X31 + 0x8]
	0x034857AC ADD X0, X31, 0x8
	0x034857B0 MOV X1, X31
	0x034857B4 BL 0x32C3A80
	0x034857B8 TBNZ X0, 0x0, 0x348580C
	0x034857BC STR W31, [X19]
	0x034857C0 LDR X8, [X31 + 0x8]
	0x034857C4 STR X8, [X19 + 0x28]
	0x034857C8 LDR X0, [X21]
	0x034857CC LDR W8, [X0 + 0xE0]
	0x034857D0 CBNZ W8, 0x34857D8
	0x034857D4 BL 0x1C16DFC
	0x034857D8 ADRP X8, 0xCAC000
	0x034857DC LDR X8, [X8 + 0xF8]
	0x034857E0 ADD X0, X19, 0x8
	0x034857E4 LDR X3, [X8]
	0x034857E8 ADD X1, X31, 0x8
	0x034857EC MOV X2, X19
	0x034857F0 BL 0x218B35C
	0x034857F4 B 0x3485844
	0x034857F8 LDR X8, [X19 + 0x28]
	0x034857FC MOVN W9, 0x0
	0x03485800 STR X8, [X31 + 0x8]
	0x03485804 STR X31, [X19 + 0x28]
	0x03485808 STR W9, [X19]
	0x0348580C ADD X0, X31, 0x8
	0x03485810 MOV X1, X31
	0x03485814 BL 0x32C3B4C
	0x03485818 CBZ X22, 0x3485888
	0x0348581C STR X31, [X22 + 0x50]
	0x03485820 MOVN W8, 0x1
	0x03485824 STR W8, [X19], #0x8
	0x03485828 LDR X0, [X21]
	0x0348582C LDR W8, [X0 + 0xE0]
	0x03485830 CBNZ W8, 0x3485838
	0x03485834 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF59000
	006 Move X21, 0xC6F000
	007 Move W8, [X20+2265]
	008 Move X21, [X21+2760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xC6F000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move X0, 0xCAD000
	018 Move X0, [X0+160]
	019 Call 0x1C17CF4
	020 Move X0, 0xCAD000
	021 Move X0, [X0+168]
	022 Call 0x1C17CF4
	023 Move X0, 0xCAB000
	024 Move X0, [X0+1464]
	025 Call 0x1C17CF4
	026 Move X0, 0xCAD000
	027 Move X0, [X0+176]
	028 Call 0x1C17CF4
	029 Move X0, 0xCAD000
	030 Move X0, [X0+184]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2265], W8
	034 Move X0, [X21]
	035 Move W1, 9
	036 Call 0x1C17D6C
	037 Compare X0, 0
	038 JumpIfEqual {86}
	039 Move W8, [X0+24]
	040 Compare W8, 0
	041 JumpIfEqual {85}
	042 Move X9, 0xCAD000
	043 Move X9, [X9+160]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X9, [X9]
	046 Move [X0+32], X9
	047 Move X9, [X19+16]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X0+40], X9
	050 Move X9, 0xCAD000
	051 Move X9, [X9+168]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, [X9]
	054 Move [X0+48], X9
	055 Move X9, [X19+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X0+56], X9
	058 Move X9, 0xCAD000
	059 Move X9, [X9+184]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9]
	062 Move [X0+64], X9
	063 Move X9, [X19+32]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X0+72], X9
	066 Move X9, 0xCAD000
	067 Move X9, [X9+176]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X9]
	070 Move [X0+80], X9
	071 Move X9, [X19+40]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X0+88], X9
	074 Move X8, 0xCAB000
	075 Move X8, [X8+1464]
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X1, X31
	079 Move X8, [X8]
	080 Move [X0+96], X8
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call String.Concat, X0
	084 Return X0
	085 Call 0x1C17F28
	086 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03485838 MOV X0, X19
	0x0348583C MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

