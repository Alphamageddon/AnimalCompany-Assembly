Type: Nakama.ApiAccountFacebook

Method: System.String get_Token()

Disassembly:
	0x03403A3C ADD X31, X31, 0x70
	0x03403A40 B 0x321B938

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Token(System.String value)

Disassembly:
	0x03403A44 BL 0x1C16F20
	0x03403A48 BL 0x1C16F28

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x03403A4C BL 0x1C16F20
	0x03403A50 BL 0x1C16F28
	0x03403A54 BL 0x1C16F28
	0x03403A58 BL 0x1C16F28
	0x03403A5C BL 0x1C16F28
	0x03403A60 BL 0x1C16F20
	0x03403A64 MOV X0, X22
	0x03403A68 BL 0x1C16F18
	0x03403A6C B 0x3403A98
	0x03403A70 B 0x3403A98
	0x03403A74 B 0x3403A98
	0x03403A78 B 0x3403A98
	0x03403A7C B 0x3403A98
	0x03403A80 B 0x3403A98
	0x03403A84 B 0x3403A98
	0x03403A88 MOV X21, X27
	0x03403A8C B 0x3403A98
	0x03403A90 B 0x3403A98
	0x03403A94 B 0x3403A98
	0x03403A98 CMP W1, 0x1
	0x03403A9C B.NE 0x3403AB0
	0x03403AA0 BL 0x3EB1AD0
	0x03403AA4 LDR X22, [X0]
	0x03403AA8 BL 0x3EB1AE0
	0x03403AAC B 0x340398C
	0x03403AB0 MOV X19, X0
	0x03403AB4 MOV X22, X31
	0x03403AB8 B 0x3403AC0
	0x03403ABC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDB000
	005 Move W8, [X20+1303]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF2000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF2000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1303], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF2000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF2000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03403AC0 CBZ X20, 0x3403B24
	0x03403AC4 LDR X8, [X20]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03403AC8 ADRP X10, 0xCF0000
	0x03403ACC LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03403AD0 LDR X10, [X10 + 0xE00]
	0x03403AD4 LDR X1, [X10]
	0x03403AD8 CBZ X9, 0x3403AFC
	0x03403ADC LDR X10, [X8 + 0xB0]
	0x03403AE0 ADD X10, X10, 0x8
	0x03403AE4 LDUR X11, [X10 - 0x8]
	0x03403AE8 CMP X11, X1
	0x03403AEC B.EQ 0x3403B0C
	0x03403AF0 SUBS X9, X9, 0x1
	0x03403AF4 ADD X10, X10, 0x10
	0x03403AF8 B.NE 0x3403AE4
	0x03403AFC MOV X0, X20
	0x03403B00 MOV W2, W31
	0x03403B04 BL 0x1C5C788
	0x03403B08 B 0x3403B18
	0x03403B0C LDRSW X9, [X10]
	0x03403B10 ADD X8, X8, X9, 0x4, LSL
	0x03403B14 ADD X0, X8, 0x138
	0x03403B18 LDP X8, X1, [X0]
	0x03403B1C MOV X0, X20
	0x03403B20 BLR X8
	0x03403B24 CBNZ X22, 0x3403B30
	0x03403B28 MOV X0, X19
	0x03403B2C BL 0x1D2C690
	0x03403B30 MOV X0, X22
	0x03403B34 BL 0x1C16F18
	0x03403B38 BL 0x1990590
	0x03403B3C MOV X1, X31
	0x03403B40 B 0x33BDD8C
	0x03403B44 LDR X0, [X0 + 0x10]
	0x03403B48 RET
	0x03403B4C STR X1, [X0 + 0x10]
	0x03403B50 RET
	0x03403B54 STR X30, [X31 - 0x20]!
	0x03403B58 STP X20, X19, [X31 + 0x10]
	0x03403B5C ADRP X20, 0xFDA000
	0x03403B60 LDRB W8, [X20 + 0x51D]
	0x03403B64 MOV X19, X0
	0x03403B68 TBNZ X8, 0x0, 0x3403B8C
	0x03403B6C ADRP X0, 0xCF1000
	0x03403B70 LDR X0, [X0 + 0x6C0]
	0x03403B74 BL 0x1C16CF4
	0x03403B78 ADRP X0, 0xCF1000
	0x03403B7C LDR X0, [X0 + 0x6D0]
	0x03403B80 BL 0x1C16CF4
	0x03403B84 MOVZ W8, 0x1
	0x03403B88 STRB W8, [X20 + 0x51D]
	0x03403B8C LDR X19, [X19 + 0x18]
	0x03403B90 CBNZ X19, 0x3403BB8
	0x03403B94 ADRP X8, 0xCF1000
	0x03403B98 LDR X8, [X8 + 0x6D0]
	0x03403B9C LDR X0, [X8]
	0x03403BA0 BL 0x1C16F10
	0x03403BA4 ADRP X8, 0xCF1000
	0x03403BA8 LDR X8, [X8 + 0x6C0]
	0x03403BAC MOV X19, X0
	0x03403BB0 LDR X1, [X8]
	0x03403BB4 BL 0x2AA4804
	0x03403BB8 MOV X0, X19
	0x03403BBC LDP X20, X19, [X31 + 0x10]
	0x03403BC0 LDR X30, [X31], #0x20
	0x03403BC4 RET
	0x03403BC8 LDR X0, [X0 + 0x18]
	0x03403BCC RET
	0x03403BD0 STR X1, [X0 + 0x18]
	0x03403BD4 RET
	0x03403BD8 SUB X31, X31, 0x70
	0x03403BDC STP X29, X30, [X31 + 0x10]
	0x03403BE0 STP X28, X27, [X31 + 0x20]
	0x03403BE4 STP X26, X25, [X31 + 0x30]
	0x03403BE8 STP X24, X23, [X31 + 0x40]
	0x03403BEC STP X22, X21, [X31 + 0x50]
	0x03403BF0 STP X20, X19, [X31 + 0x60]
	0x03403BF4 ADRP X23, 0xFDA000
	0x03403BF8 ADRP X19, 0xCF0000
	0x03403BFC ADRP X21, 0xD2A000
	0x03403C00 ADRP X22, 0xCF0000
	0x03403C04 LDRB W8, [X23 + 0x51E]
	0x03403C08 LDR X19, [X19 + 0x988]
	0x03403C0C LDR X21, [X21 + 0xD78]
	0x03403C10 LDR X22, [X22 + 0x838]
	0x03403C14 MOV X20, X0
	0x03403C18 TBNZ X8, 0x0, 0x3403CD8
	0x03403C1C ADRP X0, 0xCF0000
	0x03403C20 LDR X0, [X0 + 0xE00]
	0x03403C24 BL 0x1C16CF4
	0x03403C28 ADRP X0, 0xCF3000
	0x03403C2C LDR X0, [X0 + 0x190]
	0x03403C30 BL 0x1C16CF4
	0x03403C34 ADRP X0, 0xCF3000
	0x03403C38 LDR X0, [X0 + 0x198]
	0x03403C3C BL 0x1C16CF4
	0x03403C40 ADRP X0, 0xCF0000
	0x03403C44 LDR X0, [X0 + 0xE18]
	0x03403C48 BL 0x1C16CF4
	0x03403C4C ADRP X0, 0xCF3000
	0x03403C50 LDR X0, [X0 + 0x1B0]
	0x03403C54 BL 0x1C16CF4
	0x03403C58 ADRP X0, 0xCF3000
	0x03403C5C LDR X0, [X0 + 0x1B8]
	0x03403C60 BL 0x1C16CF4
	0x03403C64 ADRP X0, 0xCF0000
	0x03403C68 LDR X0, [X0 + 0xAC8]
	0x03403C6C BL 0x1C16CF4
	0x03403C70 ADRP X0, 0xD1D000
	0x03403C74 LDR X0, [X0 + 0x360]
	0x03403C78 BL 0x1C16CF4
	0x03403C7C ADRP X0, 0xD1D000
	0x03403C80 LDR X0, [X0 + 0xFB8]
	0x03403C84 BL 0x1C16CF4
	0x03403C88 ADRP X0, 0xCFB000
	0x03403C8C LDR X0, [X0 + 0x6D8]
	0x03403C90 BL 0x1C16CF4
	0x03403C94 ADRP X0, 0xD2A000
	0x03403C98 LDR X0, [X0 + 0xD80]
	0x03403C9C BL 0x1C16CF4
	0x03403CA0 ADRP X0, 0xCF0000
	0x03403CA4 LDR X0, [X0 + 0x838]
	0x03403CA8 BL 0x1C16CF4
	0x03403CAC ADRP X0, 0xD2A000
	0x03403CB0 LDR X0, [X0 + 0xD78]
	0x03403CB4 BL 0x1C16CF4
	0x03403CB8 ADRP X0, 0xCF0000
	0x03403CBC LDR X0, [X0 + 0x988]
	0x03403CC0 BL 0x1C16CF4
	0x03403CC4 ADRP X0, 0xCF0000
	0x03403CC8 LDR X0, [X0 + 0x848]
	0x03403CCC BL 0x1C16CF4
	0x03403CD0 MOVZ W8, 0x1
	0x03403CD4 STRB W8, [X23 + 0x51E]
	0x03403CD8 LDR X0, [X19]
	0x03403CDC LDR X2, [X20 + 0x10]
	0x03403CE0 LDR X1, [X21]
	0x03403CE4 LDR X3, [X22]
	0x03403CE8 MOV X4, X31
	0x03403CEC BL 0x32277C4
	0x03403CF0 LDR X27, [X19]
	0x03403CF4 STR X0, [X31 + 0x8]
	0x03403CF8 MOV X0, X20
	0x03403CFC BL 0x3403B54
	0x03403D00 CBZ X0, 0x3403FB0
	0x03403D04 ADRP X10, 0xCF3000
	0x03403D08 LDR X8, [X0]
	0x03403D0C LDR X10, [X10 + 0x190]
	0x03403D10 MOV X20, X0
	0x03403D14 LDRH W9, [X8 + 0x12E]
	0x03403D18 LDR X1, [X10]
	0x03403D1C CBZ X9, 0x3403D40
	0x03403D20 LDR X10, [X8 + 0xB0]
	0x03403D24 ADD X10, X10, 0x8
	0x03403D28 LDUR X11, [X10 - 0x8]
	0x03403D2C CMP X11, X1
	0x03403D30 B.EQ 0x3403D50
	0x03403D34 SUBS X9, X9, 0x1
	0x03403D38 ADD X10, X10, 0x10
	0x03403D3C B.NE 0x3403D28
	0x03403D40 MOV X0, X20
	0x03403D44 MOV W2, W31
	0x03403D48 BL 0x1C5C788
	0x03403D4C B 0x3403D5C
	0x03403D50 LDRSW X9, [X10]
	0x03403D54 ADD X8, X8, X9, 0x4, LSL
	0x03403D58 ADD X0, X8, 0x138
	0x03403D5C ADRP X28, 0xCF0000
	0x03403D60 ADRP X29, 0xCF3000
	0x03403D64 ADRP X26, 0xCF0000
	0x03403D68 ADRP X24, 0xD1D000
	0x03403D6C ADRP X25, 0xD1D000
	0x03403D70 ADRP X19, 0xCFB000
	0x03403D74 LDR X28, [X28 + 0xE18]
	0x03403D78 LDR X29, [X29 + 0x198]
	0x03403D7C LDR X26, [X26 + 0xAC8]
	0x03403D80 LDR X24, [X24 + 0x360]
	0x03403D84 LDR X25, [X25 + 0xFB8]
	0x03403D88 LDR X19, [X19 + 0x6D8]
	0x03403D8C LDP X8, X1, [X0]
	0x03403D90 MOV X0, X20
	0x03403D94 BLR X8
	0x03403D98 MOV X20, X0
	0x03403D9C MOV X0, X27
	0x03403DA0 CBZ X20, 0x3403F94
	0x03403DA4 LDR X8, [X20]
	0x03403DA8 LDR X1, [X28]
	0x03403DAC MOV X21, X0
	0x03403DB0 LDRH W9, [X8 + 0x12E]
	0x03403DB4 CBZ X9, 0x3403DD8
	0x03403DB8 LDR X10, [X8 + 0xB0]
	0x03403DBC ADD X10, X10, 0x8
	0x03403DC0 LDUR X11, [X10 - 0x8]
	0x03403DC4 CMP X11, X1
	0x03403DC8 B.EQ 0x3403DE8
	0x03403DCC SUBS X9, X9, 0x1
	0x03403DD0 ADD X10, X10, 0x10
	0x03403DD4 B.NE 0x3403DC0
	0x03403DD8 MOV X0, X20
	0x03403DDC MOV W2, W31
	0x03403DE0 BL 0x1C5C788
	0x03403DE4 B 0x3403DF4
	0x03403DE8 LDRSW X9, [X10]
	0x03403DEC ADD X8, X8, X9, 0x4, LSL
	0x03403DF0 ADD X0, X8, 0x138
	0x03403DF4 LDP X8, X1, [X0]
	0x03403DF8 MOV X0, X20
	0x03403DFC BLR X8
	0x03403E00 TBZ X0, 0x0, 0x3403ED8
	0x03403E04 LDR X8, [X20]
	0x03403E08 LDR X1, [X29]
	0x03403E0C LDRH W9, [X8 + 0x12E]
	0x03403E10 CBZ X9, 0x3403E34
	0x03403E14 LDR X10, [X8 + 0xB0]
	0x03403E18 ADD X10, X10, 0x8
	0x03403E1C LDUR X11, [X10 - 0x8]
	0x03403E20 CMP X11, X1
	0x03403E24 B.EQ 0x3403E44
	0x03403E28 SUBS X9, X9, 0x1
	0x03403E2C ADD X10, X10, 0x10
	0x03403E30 B.NE 0x3403E1C
	0x03403E34 MOV X0, X20
	0x03403E38 MOV W2, W31
	0x03403E3C BL 0x1C5C788
	0x03403E40 B 0x3403E50
	0x03403E44 LDRSW X9, [X10]
	0x03403E48 ADD X8, X8, X9, 0x4, LSL
	0x03403E4C ADD X0, X8, 0x138
	0x03403E50 LDP X8, X1, [X0]
	0x03403E54 MOV X0, X20
	0x03403E58 BLR X8
	0x03403E5C MOV X23, X0
	0x03403E60 LDR X0, [X26]
	0x03403E64 MOV X22, X1
	0x03403E68 MOVZ W1, 0x5
	0x03403E6C BL 0x1C16D6C
	0x03403E70 CBZ X0, 0x3403F9C
	0x03403E74 LDR W8, [X0 + 0x18]
	0x03403E78 CBZ W8, 0x3403FA4
	0x03403E7C LDR X9, [X24]
	0x03403E80 CMP W8, 0x1
	0x03403E84 STR X9, [X0 + 0x20]
	0x03403E88 B.EQ 0x3403F98
	0x03403E8C CMP W8, 0x2
	0x03403E90 STR X23, [X0 + 0x28]
	0x03403E94 B.LS 0x3403FA8
	0x03403E98 LDR X9, [X25]
	0x03403E9C CMP W8, 0x3
	0x03403EA0 STR X9, [X0 + 0x30]
	0x03403EA4 B.EQ 0x3403FAC
	0x03403EA8 CMP W8, 0x4
	0x03403EAC STR X22, [X0 + 0x38]
	0x03403EB0 B.LS 0x3403FA0
	0x03403EB4 LDR X8, [X19]
	0x03403EB8 STR X8, [X0 + 0x40]
	0x03403EBC MOV X1, X31
	0x03403EC0 BL 0x32278CC
	0x03403EC4 MOV X1, X0
	0x03403EC8 MOV X0, X21
	0x03403ECC MOV X2, X31
	0x03403ED0 BL 0x321B938
	0x03403ED4 B 0x3403DA0
	0x03403ED8 MOV X22, X31
	0x03403EDC CBZ X20, 0x3403F40
	0x03403EE0 LDR X8, [X20]
	0x03403EE4 ADRP X10, 0xCF0000
	0x03403EE8 LDRH W9, [X8 + 0x12E]
	0x03403EEC LDR X10, [X10 + 0xE00]
	0x03403EF0 LDR X1, [X10]
	0x03403EF4 CBZ X9, 0x3403F18
	0x03403EF8 LDR X10, [X8 + 0xB0]
	0x03403EFC ADD X10, X10, 0x8
	0x03403F00 LDUR X11, [X10 - 0x8]
	0x03403F04 CMP X11, X1
	0x03403F08 B.EQ 0x3403F28
	0x03403F0C SUBS X9, X9, 0x1
	0x03403F10 ADD X10, X10, 0x10
	0x03403F14 B.NE 0x3403F00
	0x03403F18 MOV X0, X20
	0x03403F1C MOV W2, W31
	0x03403F20 BL 0x1C5C788
	0x03403F24 B 0x3403F34
	0x03403F28 LDRSW X9, [X10]
	0x03403F2C ADD X8, X8, X9, 0x4, LSL
	0x03403F30 ADD X0, X8, 0x138
	0x03403F34 LDP X8, X1, [X0]
	0x03403F38 MOV X0, X20
	0x03403F3C BLR X8
	0x03403F40 CBNZ X22, 0x3403FB4
	0x03403F44 ADRP X8, 0xD2A000
	0x03403F48 LDR X8, [X8 + 0xD80]
	0x03403F4C MOV X1, X21
	0x03403F50 MOV X3, X31
	0x03403F54 LDR X0, [X8]
	0x03403F58 ADRP X8, 0xCF0000
	0x03403F5C LDR X8, [X8 + 0x848]
	0x03403F60 LDR X2, [X8]
	0x03403F64 BL 0x32274B8
	0x03403F68 MOV X1, X0
	0x03403F6C LDR X0, [X31 + 0x8]
	0x03403F70 LDP X20, X19, [X31 + 0x60]
	0x03403F74 LDP X22, X21, [X31 + 0x50]
	0x03403F78 LDP X24, X23, [X31 + 0x40]
	0x03403F7C LDP X26, X25, [X31 + 0x30]
	0x03403F80 LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFDB000
	015 Move X19, 0xCF1000
	016 Move X21, 0xD2B000
	017 Move X22, 0xCF1000
	018 Move W8, [X23+1304]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3448]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xCF1000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xCF4000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xCF4000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xCF1000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCF4000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xCF4000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xCF1000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xD1E000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1E000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xCFC000
	055 Move X0, [X0+1752]
	056 Call 0x1C17CF4
	057 Move X0, 0xD2B000
	058 Move X0, [X0+3456]
	059 Call 0x1C17CF4
	060 Move X0, 0xCF1000
	061 Move X0, [X0+2104]
	062 Call 0x1C17CF4
	063 Move X0, 0xD2B000
	064 Move X0, [X0+3448]
	065 Call 0x1C17CF4
	066 Move X0, 0xCF1000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xCF1000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1304], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiAccountFacebook.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xCF4000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xCF1000
	107 Move X29, 0xCF4000
	108 Move X26, 0xCF1000
	109 Move X24, 0xD1E000
	110 Move X25, 0xD1E000
	111 Move X19, 0xCFC000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xCF1000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xD2B000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xCF1000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xCF1000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03403F84 LDP X29, X30, [X31 + 0x10]
	0x03403F88 MOV X2, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

