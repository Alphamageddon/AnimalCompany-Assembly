Type: Nakama.ApiChannelMessage

Method: System.String get_ChannelId()

Disassembly:
	0x034055E4 LDR X0, [X9]
	0x034055E8 STRB W8, [X31 + 0x1C]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_ChannelId(System.String value)

Disassembly:
	0x034055EC BL 0x1C16E04
	0x034055F0 MOV X21, X0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_Code()

Disassembly:
	0x034055F4 CBZ X0, 0x340560C
	0x034055F8 LDR X8, [X20]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_Code(System.Int32 value)

Disassembly:
	0x034055FC MOV X0, X21
	0x03405600 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.String get_Content()

Disassembly:
	0x03405604 BL 0x1C16E00
	0x03405608 CBZ X0, 0x340596C

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Content(System.String value)

Disassembly:
	0x0340560C LDR W8, [X20 + 0x18]
	0x03405610 CMP W8, 0x2

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x03405614 B.LS 0x3405968
	0x03405618 ADRP X24, 0xCEE000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0340561C LDR X24, [X24 + 0x838]
	0x03405620 STR X21, [X20 + 0x30]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_GroupId()

Disassembly:
	0x03405624 LDR X0, [X24]
	0x03405628 CBZ X0, 0x3405640

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_GroupId(System.String value)

Disassembly:
	0x0340562C LDR X8, [X20]
	0x03405630 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_MessageId()

Disassembly:
	0x03405634 BL 0x1C16E00
	0x03405638 CBZ X0, 0x340596C

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_MessageId(System.String value)

Disassembly:
	0x0340563C LDR W8, [X20 + 0x18]
	0x03405640 CMP W8, 0x3

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Boolean get_Persistent()

Disassembly:
	0x03405644 B.LS 0x3405968
	0x03405648 LDR X8, [X24]

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_Persistent(System.Boolean value)

Disassembly:
	0x0340564C ADRP X19, 0xCEF000
	0x03405650 LDR X19, [X19 + 0xEE0]
	0x03405654 MOV X0, X20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+64], W8
	003 Return 

Method: System.String get_RoomName()

Disassembly:
	0x03405658 MOV X1, X31
	0x0340565C STR X8, [X20 + 0x38]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_RoomName(System.String value)

Disassembly:
	0x03405660 BL 0x3227578
	0x03405664 LDR X2, [X23 + 0x18]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_SenderId()

Disassembly:
	0x03405668 LDR X1, [X19]
	0x0340566C LDR X3, [X24]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_SenderId(System.String value)

Disassembly:
	0x03405670 MOV X4, X31
	0x03405674 BL 0x32277C4

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x03405678 LDR X29, [X22]
	0x0340567C MOV X19, X0

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x03405680 MOV X0, X23
	0x03405684 BL 0x34053A8

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.String get_UserIdOne()

Disassembly:
	0x03405688 CBZ X0, 0x3405978
	0x0340568C ADRP X10, 0xCF1000

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_UserIdOne(System.String value)

Disassembly:
	0x03405690 LDR X8, [X0]
	0x03405694 LDR X10, [X10 + 0x190]

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_UserIdTwo()

Disassembly:
	0x03405698 MOV X21, X0
	0x0340569C STP X19, X23, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_UserIdTwo(System.String value)

Disassembly:
	0x034056A0 LDRH W9, [X8 + 0x12E]
	0x034056A4 LDR X1, [X10]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String get_Username()

Disassembly:
	0x034056A8 CBZ X9, 0x34056CC
	0x034056AC LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_Username(System.String value)

Disassembly:
	0x034056B0 ADD X10, X10, 0x8
	0x034056B4 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034056B8 CMP X11, X1
	0x034056BC B.EQ 0x34056DC
	0x034056C0 SUBS X9, X9, 0x1
	0x034056C4 ADD X10, X10, 0x10
	0x034056C8 B.NE 0x34056B4
	0x034056CC MOV X0, X21
	0x034056D0 MOV W2, W31
	0x034056D4 BL 0x1C5C788
	0x034056D8 B 0x34056E8
	0x034056DC LDRSW X9, [X10]
	0x034056E0 ADD X8, X8, X9, 0x4, LSL
	0x034056E4 ADD X0, X8, 0x138
	0x034056E8 ADRP X26, 0xCEE000
	0x034056EC ADRP X27, 0xCF1000
	0x034056F0 ADRP X28, 0xCEE000
	0x034056F4 ADRP X20, 0xD1B000
	0x034056F8 ADRP X25, 0xD1B000
	0x034056FC ADRP X19, 0xCF9000
	0x03405700 LDR X26, [X26 + 0xE18]
	0x03405704 LDR X27, [X27 + 0x198]
	0x03405708 LDR X28, [X28 + 0xAC8]
	0x0340570C LDR X20, [X20 + 0x360]
	0x03405710 LDR X25, [X25 + 0xFB8]
	0x03405714 LDR X19, [X19 + 0x6D8]
	0x03405718 LDP X8, X1, [X0]
	0x0340571C MOV X0, X21
	0x03405720 BLR X8
	0x03405724 MOV X21, X0
	0x03405728 MOV X0, X29
	0x0340572C CBZ X21, 0x340594C
	0x03405730 LDR X8, [X21]
	0x03405734 LDR X1, [X26]
	0x03405738 MOV X22, X0
	0x0340573C LDRH W9, [X8 + 0x12E]
	0x03405740 CBZ X9, 0x3405764
	0x03405744 LDR X10, [X8 + 0xB0]
	0x03405748 ADD X10, X10, 0x8
	0x0340574C LDUR X11, [X10 - 0x8]
	0x03405750 CMP X11, X1
	0x03405754 B.EQ 0x3405774
	0x03405758 SUBS X9, X9, 0x1
	0x0340575C ADD X10, X10, 0x10
	0x03405760 B.NE 0x340574C
	0x03405764 MOV X0, X21
	0x03405768 MOV W2, W31
	0x0340576C BL 0x1C5C788
	0x03405770 B 0x3405780
	0x03405774 LDRSW X9, [X10]
	0x03405778 ADD X8, X8, X9, 0x4, LSL
	0x0340577C ADD X0, X8, 0x138
	0x03405780 LDP X8, X1, [X0]
	0x03405784 MOV X0, X21
	0x03405788 BLR X8
	0x0340578C TBZ X0, 0x0, 0x3405864
	0x03405790 LDR X8, [X21]
	0x03405794 LDR X1, [X27]
	0x03405798 LDRH W9, [X8 + 0x12E]
	0x0340579C CBZ X9, 0x34057C0
	0x034057A0 LDR X10, [X8 + 0xB0]
	0x034057A4 ADD X10, X10, 0x8
	0x034057A8 LDUR X11, [X10 - 0x8]
	0x034057AC CMP X11, X1
	0x034057B0 B.EQ 0x34057D0
	0x034057B4 SUBS X9, X9, 0x1
	0x034057B8 ADD X10, X10, 0x10
	0x034057BC B.NE 0x34057A8
	0x034057C0 MOV X0, X21
	0x034057C4 MOV W2, W31
	0x034057C8 BL 0x1C5C788
	0x034057CC B 0x34057DC
	0x034057D0 LDRSW X9, [X10]
	0x034057D4 ADD X8, X8, X9, 0x4, LSL
	0x034057D8 ADD X0, X8, 0x138
	0x034057DC LDP X8, X1, [X0]
	0x034057E0 MOV X0, X21
	0x034057E4 BLR X8
	0x034057E8 MOV X24, X0
	0x034057EC LDR X0, [X28]
	0x034057F0 MOV X23, X1
	0x034057F4 MOVZ W1, 0x5
	0x034057F8 BL 0x1C16D6C
	0x034057FC CBZ X0, 0x3405954
	0x03405800 LDR W8, [X0 + 0x18]
	0x03405804 CBZ W8, 0x340595C
	0x03405808 LDR X9, [X20]
	0x0340580C CMP W8, 0x1
	0x03405810 STR X9, [X0 + 0x20]
	0x03405814 B.EQ 0x3405950
	0x03405818 CMP W8, 0x2
	0x0340581C STR X24, [X0 + 0x28]
	0x03405820 B.LS 0x3405960
	0x03405824 LDR X9, [X25]
	0x03405828 CMP W8, 0x3
	0x0340582C STR X9, [X0 + 0x30]
	0x03405830 B.EQ 0x3405964
	0x03405834 CMP W8, 0x4
	0x03405838 STR X23, [X0 + 0x38]
	0x0340583C B.LS 0x3405958
	0x03405840 LDR X8, [X19]
	0x03405844 STR X8, [X0 + 0x40]
	0x03405848 MOV X1, X31
	0x0340584C BL 0x32278CC
	0x03405850 MOV X1, X0
	0x03405854 MOV X0, X22
	0x03405858 MOV X2, X31
	0x0340585C BL 0x321B938
	0x03405860 B 0x340572C
	0x03405864 ADRP X20, 0xCEE000
	0x03405868 LDR X19, [X31 + 0x10]
	0x0340586C LDR X20, [X20 + 0x838]
	0x03405870 MOV X23, X31
	0x03405874 CBZ X21, 0x34058D8
	0x03405878 LDR X8, [X21]
	0x0340587C ADRP X10, 0xCEE000
	0x03405880 LDRH W9, [X8 + 0x12E]
	0x03405884 LDR X10, [X10 + 0xE00]
	0x03405888 LDR X1, [X10]
	0x0340588C CBZ X9, 0x34058B0
	0x03405890 LDR X10, [X8 + 0xB0]
	0x03405894 ADD X10, X10, 0x8
	0x03405898 LDUR X11, [X10 - 0x8]
	0x0340589C CMP X11, X1
	0x034058A0 B.EQ 0x34058C0
	0x034058A4 SUBS X9, X9, 0x1
	0x034058A8 ADD X10, X10, 0x10
	0x034058AC B.NE 0x3405898
	0x034058B0 MOV X0, X21
	0x034058B4 MOV W2, W31
	0x034058B8 BL 0x1C5C788
	0x034058BC B 0x34058CC
	0x034058C0 LDRSW X9, [X10]
	0x034058C4 ADD X8, X8, X9, 0x4, LSL
	0x034058C8 ADD X0, X8, 0x138
	0x034058CC LDP X8, X1, [X0]
	0x034058D0 MOV X0, X21
	0x034058D4 BLR X8
	0x034058D8 CBNZ X23, 0x340597C
	0x034058DC ADRP X8, 0xD28000
	0x034058E0 LDR X8, [X8 + 0xEB8]
	0x034058E4 MOV X1, X22
	0x034058E8 MOV X3, X31
	0x034058EC LDR X0, [X8]
	0x034058F0 ADRP X8, 0xCEE000
	0x034058F4 LDR X8, [X8 + 0x848]
	0x034058F8 LDR X2, [X8]
	0x034058FC BL 0x32274B8
	0x03405900 MOV X1, X0
	0x03405904 LDR X0, [X31 + 0x8]
	0x03405908 MOV X2, X31
	0x0340590C BL 0x321B938
	0x03405910 ADRP X8, 0xD28000
	0x03405914 LDR X2, [X19 + 0x28]
	0x03405918 LDR X8, [X8 + 0xEC0]
	0x0340591C LDR X3, [X20]
	0x03405920 MOV X4, X31
	0x03405924 LDR X1, [X8]
	0x03405928 BL 0x32277C4
	0x0340592C LDP X20, X19, [X31 + 0x70]
	0x03405930 LDP X22, X21, [X31 + 0x60]
	0x03405934 LDP X24, X23, [X31 + 0x50]
	0x03405938 LDP X26, X25, [X31 + 0x40]
	0x0340593C LDP X28, X27, [X31 + 0x30]
	0x03405940 LDP X29, X30, [X31 + 0x20]
	0x03405944 ADD X31, X31, 0x80
	0x03405948 RET
	0x0340594C BL 0x1C16F20
	0x03405950 BL 0x1C16F28
	0x03405954 BL 0x1C16F20
	0x03405958 BL 0x1C16F28
	0x0340595C BL 0x1C16F28
	0x03405960 BL 0x1C16F28
	0x03405964 BL 0x1C16F28
	0x03405968 BL 0x1C16F28
	0x0340596C BL 0x1C16F44
	0x03405970 MOV X1, X31
	0x03405974 BL 0x1C16DEC
	0x03405978 BL 0x1C16F20
	0x0340597C MOV X0, X23
	0x03405980 BL 0x1C16F18
	0x03405984 B 0x34059B0
	0x03405988 B 0x34059B0
	0x0340598C B 0x34059B0
	0x03405990 B 0x34059B0
	0x03405994 B 0x34059B0
	0x03405998 B 0x34059B0
	0x0340599C B 0x34059B0
	0x034059A0 MOV X22, X29
	0x034059A4 B 0x34059B0
	0x034059A8 B 0x34059B0
	0x034059AC B 0x34059B0
	0x034059B0 ADRP X20, 0xCEE000
	0x034059B4 LDR X19, [X31 + 0x10]
	0x034059B8 LDR X20, [X20 + 0x838]
	0x034059BC CMP W1, 0x1
	0x034059C0 B.NE 0x34059D4
	0x034059C4 BL 0x3EB1AD0
	0x034059C8 LDR X23, [X0]
	0x034059CC BL 0x3EB1AE0
	0x034059D0 B 0x3405874
	0x034059D4 MOV X19, X0
	0x034059D8 MOV X23, X31
	0x034059DC B 0x34059E4
	0x034059E0 MOV X19, X0
	0x034059E4 CBZ X21, 0x3405A48
	0x034059E8 LDR X8, [X21]
	0x034059EC ADRP X10, 0xCEE000
	0x034059F0 LDRH W9, [X8 + 0x12E]
	0x034059F4 LDR X10, [X10 + 0xE00]
	0x034059F8 LDR X1, [X10]
	0x034059FC CBZ X9, 0x3405A20
	0x03405A00 LDR X10, [X8 + 0xB0]
	0x03405A04 ADD X10, X10, 0x8
	0x03405A08 LDUR X11, [X10 - 0x8]
	0x03405A0C CMP X11, X1
	0x03405A10 B.EQ 0x3405A30
	0x03405A14 SUBS X9, X9, 0x1
	0x03405A18 ADD X10, X10, 0x10
	0x03405A1C B.NE 0x3405A08
	0x03405A20 MOV X0, X21
	0x03405A24 MOV W2, W31
	0x03405A28 BL 0x1C5C788
	0x03405A2C B 0x3405A3C
	0x03405A30 LDRSW X9, [X10]
	0x03405A34 ADD X8, X8, X9, 0x4, LSL
	0x03405A38 ADD X0, X8, 0x138
	0x03405A3C LDP X8, X1, [X0]
	0x03405A40 MOV X0, X21
	0x03405A44 BLR X8
	0x03405A48 CBNZ X23, 0x3405A54
	0x03405A4C MOV X0, X19
	0x03405A50 BL 0x1D2C690
	0x03405A54 MOV X0, X23
	0x03405A58 BL 0x1C16F18
	0x03405A5C BL 0x1990590
	0x03405A60 MOV X1, X31
	0x03405A64 B 0x33BDD8C
	0x03405A68 LDR W0, [X0 + 0x10]
	0x03405A6C RET
	0x03405A70 STR W1, [X0 + 0x10]
	0x03405A74 RET
	0x03405A78 LDR X0, [X0 + 0x18]
	0x03405A7C RET
	0x03405A80 STR X1, [X0 + 0x18]
	0x03405A84 RET
	0x03405A88 LDR X0, [X0 + 0x20]
	0x03405A8C RET
	0x03405A90 LDR X0, [X0 + 0x20]
	0x03405A94 RET
	0x03405A98 STR X1, [X0 + 0x20]
	0x03405A9C RET
	0x03405AA0 SUB X31, X31, 0x40
	0x03405AA4 STP X30, X23, [X31 + 0x10]
	0x03405AA8 STP X22, X21, [X31 + 0x20]
	0x03405AAC STP X20, X19, [X31 + 0x30]
	0x03405AB0 ADRP X20, 0xFD8000
	0x03405AB4 ADRP X21, 0xCEE000
	0x03405AB8 ADRP X22, 0xCEE000
	0x03405ABC LDRB W8, [X20 + 0x52A]
	0x03405AC0 LDR X21, [X21 + 0x988]
	0x03405AC4 LDR X22, [X22 + 0x9D0]
	0x03405AC8 MOV X19, X0
	0x03405ACC TBNZ X8, 0x0, 0x3405B2C
	0x03405AD0 ADRP X0, 0xCEE000
	0x03405AD4 LDR X0, [X0 + 0x758]
	0x03405AD8 BL 0x1C16CF4
	0x03405ADC ADRP X0, 0xCEE000
	0x03405AE0 LDR X0, [X0 + 0x9D0]
	0x03405AE4 BL 0x1C16CF4
	0x03405AE8 ADRP X0, 0xD28000
	0x03405AEC LDR X0, [X0 + 0xCE8]
	0x03405AF0 BL 0x1C16CF4
	0x03405AF4 ADRP X0, 0xD28000
	0x03405AF8 LDR X0, [X0 + 0xCF0]
	0x03405AFC BL 0x1C16CF4
	0x03405B00 ADRP X0, 0xCEE000
	0x03405B04 LDR X0, [X0 + 0x838]
	0x03405B08 BL 0x1C16CF4
	0x03405B0C ADRP X0, 0xD28000
	0x03405B10 LDR X0, [X0 + 0xDE8]
	0x03405B14 BL 0x1C16CF4
	0x03405B18 ADRP X0, 0xCEE000
	0x03405B1C LDR X0, [X0 + 0x988]
	0x03405B20 BL 0x1C16CF4
	0x03405B24 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xFD9000
	013 Move X24, 0xCEF000
	014 Move X20, 0xD29000
	015 Move X22, 0xCEF000
	016 Move X23, 0xCEF000
	017 Move W8, [X21+1313]
	018 Move X24, [X24+2440]
	019 Move X20, [X20+3536]
	020 Move X22, [X22+2104]
	021 Move X23, [X23+2512]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {83}
	027 Move X0, 0xCEF000
	028 Move X0, [X0+2904]
	029 Call 0x1C17CF4
	030 Move X0, 0xCEF000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEF000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move X0, 0xD29000
	037 Move X0, [X0+3544]
	038 Call 0x1C17CF4
	039 Move X0, 0xD29000
	040 Move X0, [X0+3552]
	041 Call 0x1C17CF4
	042 Move X0, 0xCEF000
	043 Move X0, [X0+2104]
	044 Call 0x1C17CF4
	045 Move X0, 0xD29000
	046 Move X0, [X0+3560]
	047 Call 0x1C17CF4
	048 Move X0, 0xD29000
	049 Move X0, [X0+3568]
	050 Call 0x1C17CF4
	051 Move X0, 0xD29000
	052 Move X0, [X0+3576]
	053 Call 0x1C17CF4
	054 Move X0, 0xD29000
	055 Move X0, [X0+3584]
	056 Call 0x1C17CF4
	057 Move X0, 0xD29000
	058 Move X0, [X0+3592]
	059 Call 0x1C17CF4
	060 Move X0, 0xCEF000
	061 Move X0, [X0+2440]
	062 Call 0x1C17CF4
	063 Move X0, 0xD29000
	064 Move X0, [X0+3600]
	065 Call 0x1C17CF4
	066 Move X0, 0xD29000
	067 Move X0, [X0+3608]
	068 Call 0x1C17CF4
	069 Move X0, 0xD29000
	070 Move X0, [X0+3616]
	071 Call 0x1C17CF4
	072 Move X0, 0xD29000
	073 Move X0, [X0+3536]
	074 Call 0x1C17CF4
	075 Move X0, 0xD29000
	076 Move X0, [X0+3624]
	077 Call 0x1C17CF4
	078 Move X0, 0xD29000
	079 Move X0, [X0+3632]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X21+1313], W8
	083 Move X0, [X24]
	084 Move X2, [X19+16]
	085 Move X1, [X20]
	086 Move X3, [X22]
	087 Move X4, X31
	088 Call String.Concat, X0, X1, X2, X3
	089 Move X8, [X23]
	090 Move X21, X0
	091 Move W1, 4
	092 Move X0, X8
	093 Call 0x1C17D6C
	094 Compare X0, 0
	095 JumpIfEqual {311}
	096 Move X20, X0
	097 Compare X21, 0
	098 JumpIfEqual {105}
	099 Move X8, [X20]
	100 Move X0, X21
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {308}
	105 Move W8, [X20+24]
	106 Compare W8, 0
	107 JumpIfEqual {307}
	108 Move X24, 0xD29000
	109 Move X24, [X24+3616]
	110 Move [X20+32], X21
	111 Move X0, [X24]
	112 Compare X0, 0
	113 JumpIfEqual {120}
	114 Move X8, [X20]
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {308}
	119 Move W8, [X20+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X8, [X24]
	122 Move X9, 0xCEF000
	123 Move X9, [X9+1880]
	124 Add X1, X31, 12
	125 Move [X20+40], X8
	126 Move W8, [X19+24]
	127 Move X0, [X9]
	128 Move [X31+12], W8
	129 Call 0x1C17E04
	130 Move X21, X0
	131 Compare X0, 0
	132 JumpIfEqual {139}
	133 Move X8, [X20]
	134 Move X0, X21
	135 Move X1, [X8+64]
	136 Call 0x1C17E00
	137 Compare X0, 0
	138 JumpIfEqual {308}
	139 Move W8, [X20+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move [X20+48], X21
	142 Move X0, [X22]
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X20]
	146 Move X1, [X8+64]
	147 Call 0x1C17E00
	148 Compare X0, 0
	149 JumpIfEqual {308}
	150 Move W8, [X20+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X21, 0xD29000
	153 Move X21, [X21+3544]
	154 Move X8, [X22]
	155 Move X24, 0xD29000
	156 Move X25, 0xD29000
	157 Move X26, 0xD29000
	158 Move X24, [X24+3552]
	159 Move X25, [X25+3576]
	160 Move X26, [X26+3584]
	161 Move X0, X20
	162 Move X1, X31
	163 Move [X20+56], X8
	164 Call String.Concat, X0
	165 Move X2, [X19+32]
	166 Move X1, [X21]
	167 Move X3, [X22]
	168 Move X4, X31
	169 Call String.Concat, X0, X1, X2, X3
	170 Move X2, [X19+40]
	171 Move X1, [X24]
	172 Move X3, [X22]
	173 Move X4, X31
	174 Call String.Concat, X0, X1, X2, X3
	175 Move X2, [X19+48]
	176 Move X1, [X25]
	177 Move X3, [X22]
	178 Move X4, X31
	179 Call String.Concat, X0, X1, X2, X3
	180 Move X2, [X19+56]
	181 Move X1, [X26]
	182 Move X3, [X22]
	183 Move X4, X31
	184 Call String.Concat, X0, X1, X2, X3
	185 Move X8, [X23]
	186 Move X21, X0
	187 Move W1, 4
	188 Move X0, X8
	189 Call 0x1C17D6C
	190 Compare X0, 0
	191 JumpIfEqual {311}
	192 Move X20, X0
	193 Compare X21, 0
	194 JumpIfEqual {201}
	195 Move X8, [X20]
	196 Move X0, X21
	197 Move X1, [X8+64]
	198 Call 0x1C17E00
	199 Compare X0, 0
	200 JumpIfEqual {308}
	201 Move W8, [X20+24]
	202 Compare W8, 0
	203 JumpIfEqual {307}
	204 Move X23, 0xD29000
	205 Move X23, [X23+3624]
	206 Move [X20+32], X21
	207 Move X0, [X23]
	208 Compare X0, 0
	209 JumpIfEqual {216}
	210 Move X8, [X20]
	211 Move X1, [X8+64]
	212 Call 0x1C17E00
	213 Compare X0, 0
	214 JumpIfEqual {308}
	215 Move W8, [X20+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, [X23]
	218 Move X9, 0xCEF000
	219 Move X9, [X9+2904]
	220 Add X1, X31, 8
	221 Move [X20+40], X8
	222 Move W8, [X19+64]
	223 Move X0, [X9]
	224 Move [X31+8], W8
	225 Call 0x1C17E04
	226 Move X21, X0
	227 Compare X0, 0
	228 JumpIfEqual {235}
	229 Move X8, [X20]
	230 Move X0, X21
	231 Move X1, [X8+64]
	232 Call 0x1C17E00
	233 Compare X0, 0
	234 JumpIfEqual {308}
	235 Move W8, [X20+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X20+48], X21
	238 Move X0, [X22]
	239 Compare X0, 0
	240 JumpIfEqual {247}
	241 Move X8, [X20]
	242 Move X1, [X8+64]
	243 Call 0x1C17E00
	244 Compare X0, 0
	245 JumpIfEqual {308}
	246 Move W8, [X20+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X23, 0xD29000
	249 Move X24, 0xD29000
	250 Move X25, 0xD29000
	251 Move X23, [X23+3592]
	252 Move X24, [X24+3600]
	253 Move X25, [X25+3560]
	254 Move X8, [X22]
	255 Move X26, 0xD29000
	256 Move X27, 0xD29000
	257 Move X21, 0xD29000
	258 Move X26, [X26+3608]
	259 Move X27, [X27+3568]
	260 Move X21, [X21+3632]
	261 Move X0, X20
	262 Move X1, X31
	263 Move [X20+56], X8
	264 Call String.Concat, X0
	265 Move X2, [X19+72]
	266 Move X1, [X23]
	267 Move X3, [X22]
	268 Move X4, X31
	269 Call String.Concat, X0, X1, X2, X3
	270 Move X2, [X19+80]
	271 Move X1, [X24]
	272 Move X3, [X22]
	273 Move X4, X31
	274 Call String.Concat, X0, X1, X2, X3
	275 Move X2, [X19+88]
	276 Move X1, [X25]
	277 Move X3, [X22]
	278 Move X4, X31
	279 Call String.Concat, X0, X1, X2, X3
	280 Move X2, [X19+96]
	281 Move X1, [X26]
	282 Move X3, [X22]
	283 Move X4, X31
	284 Call String.Concat, X0, X1, X2, X3
	285 Move X2, [X19+104]
	286 Move X1, [X27]
	287 Move X3, [X22]
	288 Move X4, X31
	289 Call String.Concat, X0, X1, X2, X3
	290 Move X2, [X19+112]
	291 Move X1, [X21]
	292 Move X3, [X22]
	293 Move X4, X31
	294 Call String.Concat, X0, X1, X2, X3
	295 Move X20, [X31+80]
	296 Move X19, [X31+88]
	297 Move X22, [X31+64]
	298 Move X21, [X31+72]
	299 Move X24, [X31+48]
	300 Move X23, [X31+56]
	301 Move X26, [X31+32]
	302 Move X25, [X31+40]
	303 Move X30, [X31+16]
	304 Move X27, [X31+24]
	305 Add X31, X31, 96
	306 Return X0
	307 Call 0x1C17F28
	308 Call 0x1C17F44
	309 Move X1, X31
	310 Call 0x1C17DEC
	311 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03405B28 STRB W8, [X20 + 0x52A]
	0x03405B2C LDR X0, [X22]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

