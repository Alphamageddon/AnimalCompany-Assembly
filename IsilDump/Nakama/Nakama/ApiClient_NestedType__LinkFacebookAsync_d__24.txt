Type: Nakama.ApiClient/<LinkFacebookAsync>d__24

Method: System.Void MoveNext()

Disassembly:
	0x03429AB4 BL 0x1C16DFC
	0x03429AB8 ADRP X8, 0xD05000
	0x03429ABC LDR X8, [X8 + 0xEA0]
	0x03429AC0 ADD X0, X19, 0x8
	0x03429AC4 LDR X3, [X8]
	0x03429AC8 ADD X1, X31, 0x18
	0x03429ACC MOV X2, X19
	0x03429AD0 BL 0x2186A38
	0x03429AD4 LDP X20, X19, [X31 + 0x60]
	0x03429AD8 LDP X22, X21, [X31 + 0x50]
	0x03429ADC LDP X24, X23, [X31 + 0x40]
	0x03429AE0 LDP X26, X25, [X31 + 0x30]
	0x03429AE4 LDP X28, X27, [X31 + 0x20]
	0x03429AE8 LDR X30, [X31 + 0x10]
	0x03429AEC ADD X31, X31, 0x70
	0x03429AF0 RET
	0x03429AF4 ADRP X0, 0xCD2000
	0x03429AF8 LDR X0, [X0 + 0x578]
	0x03429AFC BL 0x1C16D08
	0x03429B00 BL 0x1C16F10
	0x03429B04 MOV X20, X0
	0x03429B08 ADRP X0, 0xD05000
	0x03429B0C LDR X0, [X0 + 0xBC8]
	0x03429B10 BL 0x1C16D08
	0x03429B14 MOV X1, X0
	0x03429B18 MOV X0, X20
	0x03429B1C MOV X2, X31
	0x03429B20 BL 0x3314A68
	0x03429B24 ADRP X0, 0xD05000
	0x03429B28 LDR X0, [X0 + 0xEB0]
	0x03429B2C BL 0x1C16D08
	0x03429B30 MOV X1, X0
	0x03429B34 MOV X0, X20
	0x03429B38 BL 0x1C16DEC
	0x03429B3C BL 0x1C16F20
	0x03429B40 BL 0x1C16F20
	0x03429B44 BL 0x1C16F20
	0x03429B48 BL 0x1C16F28
	0x03429B4C BL 0x1C16F20
	0x03429B50 BL 0x1C16F20
	0x03429B54 BL 0x1C16F20
	0x03429B58 BL 0x1C16F20
	0x03429B5C BL 0x1C16F20
	0x03429B60 BL 0x1C16F20
	0x03429B64 B 0x3429BC4
	0x03429B68 B 0x3429BC4
	0x03429B6C B 0x3429BC4
	0x03429B70 B 0x3429BC4
	0x03429B74 B 0x3429BC4
	0x03429B78 B 0x3429BC4
	0x03429B7C B 0x3429BC4
	0x03429B80 B 0x3429BC4
	0x03429B84 B 0x3429BC4
	0x03429B88 B 0x3429BC4
	0x03429B8C B 0x3429BC4
	0x03429B90 B 0x3429BC4
	0x03429B94 B 0x3429BC4
	0x03429B98 B 0x3429BC4
	0x03429B9C B 0x3429BC4
	0x03429BA0 B 0x3429BC4
	0x03429BA4 B 0x3429BC4
	0x03429BA8 B 0x3429BC4
	0x03429BAC B 0x3429BC4
	0x03429BB0 B 0x3429BC4
	0x03429BB4 B 0x3429BC4
	0x03429BB8 B 0x3429BC4
	0x03429BBC B 0x3429BC4
	0x03429BC0 B 0x3429BC4
	0x03429BC4 MOV X20, X0
	0x03429BC8 CMP W1, 0x1
	0x03429BCC B.NE 0x3429C5C
	0x03429BD0 MOV X0, X20
	0x03429BD4 BL 0x3EB1AD0
	0x03429BD8 MOV X20, X0
	0x03429BDC ADRP X0, 0xCCA000
	0x03429BE0 LDR X0, [X0 + 0x7D0]
	0x03429BE4 BL 0x1C16D08
	0x03429BE8 LDR X8, [X20]
	0x03429BEC LDR X1, [X8]
	0x03429BF0 BL 0x1C17270
	0x03429BF4 TBZ X0, 0x0, 0x3429C34
	0x03429BF8 LDR X20, [X20]
	0x03429BFC BL 0x3EB1AE0
	0x03429C00 MOVN W8, 0x1
	0x03429C04 STR W8, [X19], #0x8
	0x03429C08 ADRP X0, 0xCCD000
	0x03429C0C LDR X0, [X0 + 0x280]
	0x03429C10 BL 0x1C16D08
	0x03429C14 LDR W8, [X0 + 0xE0]
	0x03429C18 CBNZ W8, 0x3429C20
	0x03429C1C BL 0x1C16DFC
	0x03429C20 MOV X0, X19
	0x03429C24 MOV X1, X20
	0x03429C28 MOV X2, X31
	0x03429C2C BL 0x32C4908
	0x03429C30 B 0x3429AD4
	0x03429C34 MOVZ W0, 0x8
	0x03429C38 BL 0x3EB1AF0
	0x03429C3C LDR X8, [X20]
	0x03429C40 STR X8, [X0]
	0x03429C44 ADRP X1, 0xA8B000
	0x03429C48 ADD X1, X1, 0xE58
	0x03429C4C MOV X2, X31
	0x03429C50 BL 0x3EB1B00
	0x03429C54 MOV X20, X0
	0x03429C58 BL 0x3EB1AE0
	0x03429C5C MOV X0, X20
	0x03429C60 BL 0x1D2C690
	0x03429C64 BL 0x1990590
	0x03429C68 STR X30, [X31 - 0x30]!
	0x03429C6C STP X22, X21, [X31 + 0x10]
	0x03429C70 STP X20, X19, [X31 + 0x20]
	0x03429C74 ADRP X21, 0xFB4000
	0x03429C78 ADRP X22, 0xCCD000
	0x03429C7C LDRB W8, [X21 + 0x646]
	0x03429C80 LDR X22, [X22 + 0x280]
	0x03429C84 MOV X19, X1
	0x03429C88 MOV X20, X0
	0x03429C8C TBNZ X8, 0x0, 0x3429CA4
	0x03429C90 ADRP X0, 0xCCD000
	0x03429C94 LDR X0, [X0 + 0x280]
	0x03429C98 BL 0x1C16CF4
	0x03429C9C MOVZ W8, 0x1
	0x03429CA0 STRB W8, [X21 + 0x646]
	0x03429CA4 LDR X0, [X22]
	0x03429CA8 LDR W8, [X0 + 0xE0]
	0x03429CAC CBNZ W8, 0x3429CB4
	0x03429CB0 BL 0x1C16DFC
	0x03429CB4 ADD X0, X20, 0x8
	0x03429CB8 MOV X1, X19
	0x03429CBC LDP X20, X19, [X31 + 0x20]
	0x03429CC0 LDP X22, X21, [X31 + 0x10]
	0x03429CC4 MOV X2, X31
	0x03429CC8 LDR X30, [X31], #0x30
	0x03429CCC B 0x32C477C
	0x03429CD0 SUB X31, X31, 0x70
	0x03429CD4 STR X30, [X31 + 0x10]
	0x03429CD8 STP X28, X27, [X31 + 0x20]
	0x03429CDC STP X26, X25, [X31 + 0x30]
	0x03429CE0 STP X24, X23, [X31 + 0x40]
	0x03429CE4 STP X22, X21, [X31 + 0x50]
	0x03429CE8 STP X20, X19, [X31 + 0x60]
	0x03429CEC ADRP X20, 0xFB4000
	0x03429CF0 LDRB W8, [X20 + 0x647]
	0x03429CF4 MOV X19, X0
	0x03429CF8 TBNZ X8, 0x0, 0x3429DC4
	0x03429CFC ADRP X0, 0xD05000
	0x03429D00 LDR X0, [X0 + 0xEB8]
	0x03429D04 BL 0x1C16CF4
	0x03429D08 ADRP X0, 0xCCD000
	0x03429D0C LDR X0, [X0 + 0x280]
	0x03429D10 BL 0x1C16CF4
	0x03429D14 ADRP X0, 0xCD3000
	0x03429D18 LDR X0, [X0 + 0x8D8]
	0x03429D1C BL 0x1C16CF4
	0x03429D20 ADRP X0, 0xCCB000
	0x03429D24 LDR X0, [X0 + 0x810]
	0x03429D28 BL 0x1C16CF4
	0x03429D2C ADRP X0, 0xCCB000
	0x03429D30 LDR X0, [X0 + 0x6C0]
	0x03429D34 BL 0x1C16CF4
	0x03429D38 ADRP X0, 0xCCB000
	0x03429D3C LDR X0, [X0 + 0x6D0]
	0x03429D40 BL 0x1C16CF4
	0x03429D44 ADRP X0, 0xD05000
	0x03429D48 LDR X0, [X0 + 0x7B8]
	0x03429D4C BL 0x1C16CF4
	0x03429D50 ADRP X0, 0xCCD000
	0x03429D54 LDR X0, [X0 + 0x1E0]
	0x03429D58 BL 0x1C16CF4
	0x03429D5C ADRP X0, 0xCCD000
	0x03429D60 LDR X0, [X0 + 0x1F0]
	0x03429D64 BL 0x1C16CF4
	0x03429D68 ADRP X0, 0xCCD000
	0x03429D6C LDR X0, [X0 + 0x1F8]
	0x03429D70 BL 0x1C16CF4
	0x03429D74 ADRP X0, 0xCD3000
	0x03429D78 LDR X0, [X0 + 0x3A0]
	0x03429D7C BL 0x1C16CF4
	0x03429D80 ADRP X0, 0xCF3000
	0x03429D84 LDR X0, [X0 + 0x4D8]
	0x03429D88 BL 0x1C16CF4
	0x03429D8C ADRP X0, 0xD05000
	0x03429D90 LDR X0, [X0 + 0xEC0]
	0x03429D94 BL 0x1C16CF4
	0x03429D98 ADRP X0, 0xD05000
	0x03429D9C LDR X0, [X0 + 0x7D0]
	0x03429DA0 BL 0x1C16CF4
	0x03429DA4 ADRP X0, 0xD05000
	0x03429DA8 LDR X0, [X0 + 0x7D8]
	0x03429DAC BL 0x1C16CF4
	0x03429DB0 ADRP X0, 0xCCA000
	0x03429DB4 LDR X0, [X0 + 0x988]
	0x03429DB8 BL 0x1C16CF4
	0x03429DBC MOVZ W8, 0x1
	0x03429DC0 STRB W8, [X20 + 0x647]
	0x03429DC4 STR X31, [X31 + 0x18]
	0x03429DC8 ADRP X28, 0xCCD000
	0x03429DCC LDR W8, [X19]
	0x03429DD0 LDR X28, [X28 + 0x280]
	0x03429DD4 CBZ W8, 0x3429FB4
	0x03429DD8 LDR X8, [X19 + 0x20]
	0x03429DDC CBZ X8, 0x342A0CC
	0x03429DE0 LDR X25, [X19 + 0x28]
	0x03429DE4 CBZ X25, 0x342A114
	0x03429DE8 LDR X0, [X25 + 0x20]
	0x03429DEC CBZ X0, 0x342A118
	0x03429DF0 ADRP X8, 0xD05000
	0x03429DF4 ADRP X9, 0xCCA000
	0x03429DF8 LDR X8, [X8 + 0xEC0]
	0x03429DFC LDR X9, [X9 + 0x988]
	0x03429E00 LDR X21, [X8]
	0x03429E04 LDR X20, [X9]
	0x03429E08 MOV X1, X31
	0x03429E0C BL 0x361B448
	0x03429E10 ADRP X8, 0xCD3000
	0x03429E14 LDR X8, [X8 + 0x8D8]
	0x03429E18 MOV X22, X0
	0x03429E1C LDR X0, [X8]
	0x03429E20 MOVZ W1, 0x1
	0x03429E24 BL 0x1C16D6C
	0x03429E28 MOV X1, X0
	0x03429E2C CBZ X1, 0x342A11C
	0x03429E30 LDR W8, [X1 + 0x18]
	0x03429E34 CBZ W8, 0x342A120
	0x03429E38 MOVZ W8, 0x2F
	0x03429E3C STRH W8, [X1 + 0x20]
	0x03429E40 CBZ X22, 0x342A124
	0x03429E44 MOV X0, X22
	0x03429E48 MOV X2, X31
	0x03429E4C BL 0x322BC58
	0x03429E50 MOV X1, X21
	0x03429E54 MOV X2, X31
	0x03429E58 BL 0x321B938
	0x03429E5C ADRP X8, 0xCD3000
	0x03429E60 LDR X8, [X8 + 0x3A0]
	0x03429E64 MOV X22, X0
	0x03429E68 LDR X23, [X25 + 0x20]
	0x03429E6C LDR X0, [X8]
	0x03429E70 BL 0x1C16F10
	0x03429E74 MOV X21, X0
	0x03429E78 MOV X1, X23
	0x03429E7C MOV X2, X31
	0x03429E80 BL 0x36281F8
	0x03429E84 CBZ X21, 0x342A128
	0x03429E88 MOV X0, X21
	0x03429E8C MOV X1, X22
	0x03429E90 MOV X2, X31
	0x03429E94 BL 0x36288CC
	0x03429E98 MOV X0, X21
	0x03429E9C MOV X1, X20
	0x03429EA0 MOV X2, X31
	0x03429EA4 BL 0x3628980
	0x03429EA8 MOV X0, X21
	0x03429EAC MOV X1, X31
	0x03429EB0 BL 0x3628A38
	0x03429EB4 ADRP X8, 0xCF3000
	0x03429EB8 ADRP X9, 0xCCB000
	0x03429EBC LDR X8, [X8 + 0x4D8]
	0x03429EC0 LDR X9, [X9 + 0x6D0]
	0x03429EC4 MOV X20, X0
	0x03429EC8 LDR X21, [X8]
	0x03429ECC LDR X0, [X9]
	0x03429ED0 BL 0x1C16F10
	0x03429ED4 ADRP X8, 0xCCB000
	0x03429ED8 LDR X8, [X8 + 0x6C0]
	0x03429EDC MOV X22, X0
	0x03429EE0 LDR X1, [X8]
	0x03429EE4 BL 0x2AA4804
	0x03429EE8 ADRP X8, 0xD05000
	0x03429EEC LDR X8, [X8 + 0x7D8]
	0x03429EF0 LDR X1, [X19 + 0x30]
	0x03429EF4 LDR X0, [X8]
	0x03429EF8 MOV X2, X31
	0x03429EFC BL 0x321B938
	0x03429F00 CBZ X22, 0x342A12C
	0x03429F04 ADRP X8, 0xD05000
	0x03429F08 LDR X8, [X8 + 0x7D0]
	0x03429F0C ADRP X9, 0xCCB000
	0x03429F10 LDR X9, [X9 + 0x810]
	0x03429F14 MOV X2, X0
	0x03429F18 LDR X1, [X8]
	0x03429F1C LDR X3, [X9]
	0x03429F20 MOV X0, X22
	0x03429F24 BL 0x2AA5098
	0x03429F28 LDR X0, [X19 + 0x20]
	0x03429F2C MOV X1, X31
	0x03429F30 BL 0x3483BE4
	0x03429F34 MOV X23, X0
	0x03429F38 MOV X0, X31
	0x03429F3C BL 0x3241948
	0x03429F40 CBZ X0, 0x342A130
	0x03429F44 LDR X8, [X0]
	0x03429F48 LDR X9, [X8 + 0x268]
	0x03429F4C LDR X2, [X8 + 0x270]
	0x03429F50 MOV X1, X23
	0x03429F54 BLR X9
	0x03429F58 LDR X24, [X25 + 0x10]
	0x03429F5C CBZ X24, 0x342A134
	0x03429F60 ADRP X10, 0xD05000
	0x03429F64 LDR X10, [X10 + 0x7B8]
	0x03429F68 LDR X8, [X24]
	0x03429F6C LDR W26, [X25 + 0x18]
	0x03429F70 LDP X27, X25, [X19 + 0x38]
	0x03429F74 LDR X1, [X10]
	0x03429F78 LDRH W9, [X8 + 0x12E]
	0x03429F7C MOV X23, X0
	0x03429F80 CBZ X9, 0x3429FA4
	0x03429F84 LDR X10, [X8 + 0xB0]
	0x03429F88 ADD X10, X10, 0x8
	0x03429F8C LDUR X11, [X10 - 0x8]
	0x03429F90 CMP X11, X1
	0x03429F94 B.EQ 0x3429FCC
	0x03429F98 SUBS X9, X9, 0x1
	0x03429F9C ADD X10, X10, 0x10
	0x03429FA0 B.NE 0x3429F8C
	0x03429FA4 MOVZ W2, 0x3
	0x03429FA8 MOV X0, X24
	0x03429FAC BL 0x1C5C788
	0x03429FB0 B 0x3429FDC
	0x03429FB4 LDR X8, [X19 + 0x48]
	0x03429FB8 MOVN W9, 0x0
	0x03429FBC STR X8, [X31 + 0x18]
	0x03429FC0 STR X31, [X19 + 0x48]
	0x03429FC4 STR W9, [X19]
	0x03429FC8 B 0x342A038
	0x03429FCC LDR W9, [X10]
	0x03429FD0 ADD W9, W9, 0x3
	0x03429FD4 ADD X8, X8, W9, 0x4, SXTW
	0x03429FD8 ADD X0, X8, 0x138
	0x03429FDC LDP X8, X9, [X0]
	0x03429FE0 MOV X0, X24
	0x03429FE4 MOV X1, X21
	0x03429FE8 MOV X2, X20
	0x03429FEC MOV X3, X22
	0x03429FF0 MOV X4, X23
	0x03429FF4 MOV W5, W26
	0x03429FF8 MOV X6, X27
	0x03429FFC MOV X7, X25
	0x0342A000 STR X9, [X31]
	0x0342A004 BLR X8
	0x0342A008 CBZ X0, 0x342A138
	0x0342A00C ADRP X8, 0xCCC000
	0x0342A010 LDR X8, [X8 + 0x1F8]
	0x0342A014 LDR X1, [X8]
	0x0342A018 BL 0x269F5D0
	0x0342A01C ADRP X8, 0xCCC000
	0x0342A020 LDR X8, [X8 + 0x1F0]
	0x0342A024 STR X0, [X31 + 0x18]
	0x0342A028 LDR X1, [X8]
	0x0342A02C ADD X0, X31, 0x18
	0x0342A030 BL 0x2677430
	0x0342A034 TBZ X0, 0x0, 0x342A074
	0x0342A038 ADRP X8, 0xCCC000
	0x0342A03C LDR X8, [X8 + 0x1E0]
	0x0342A040 ADD X0, X31, 0x18
	0x0342A044 LDR X1, [X8]
	0x0342A048 BL 0x2677474
	0x0342A04C MOVN W8, 0x1
	0x0342A050 STR W8, [X19], #0x8
	0x0342A054 LDR X0, [X28]
	0x0342A058 LDR W8, [X0 + 0xE0]
	0x0342A05C CBNZ W8, 0x342A064
	0x0342A060 BL 0x1C16DFC
	0x0342A064 MOV X0, X19
	0x0342A068 MOV X1, X31
	0x0342A06C BL 0x32C4864
	0x0342A070 B 0x342A0AC
	0x0342A074 STR W31, [X19]
	0x0342A078 LDR X8, [X31 + 0x18]
	0x0342A07C STR X8, [X19 + 0x48]
	0x0342A080 LDR X0, [X28]
	0x0342A084 LDR W8, [X0 + 0xE0]
	0x0342A088 CBNZ W8, 0x342A090
	0x0342A08C BL 0x1C16DFC
	0x0342A090 ADRP X8, 0xD04000
	0x0342A094 LDR X8, [X8 + 0xEB8]
	0x0342A098 ADD X0, X19, 0x8
	0x0342A09C LDR X3, [X8]
	0x0342A0A0 ADD X1, X31, 0x18
	0x0342A0A4 MOV X2, X19
	0x0342A0A8 BL 0x2186AB4
	0x0342A0AC LDP X20, X19, [X31 + 0x60]
	0x0342A0B0 LDP X22, X21, [X31 + 0x50]
	0x0342A0B4 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB5000
	014 Move W8, [X20+1601]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xD06000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCE000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD4000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCC000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCC000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCC000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD06000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xD06000
	042 Move X0, [X0+2096]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCF000
	045 Move X0, [X0+3056]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCE000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCCE000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCCE000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD4000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF4000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xD06000
	063 Move X0, [X0+2248]
	064 Call 0x1C17CF4
	065 Move X0, 0xCD4000
	066 Move X0, [X0+1824]
	067 Call 0x1C17CF4
	068 Move X0, 0xD06000
	069 Move X0, [X0+2000]
	070 Call 0x1C17CF4
	071 Move X0, 0xD06000
	072 Move X0, [X0+3704]
	073 Call 0x1C17CF4
	074 Move X0, 0xD06000
	075 Move X0, [X0+2008]
	076 Call 0x1C17CF4
	077 Move X0, 0xCCB000
	078 Move X0, [X0+2440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+1601], W8
	082 Move [X31+24], X31
	083 Move X28, 0xCCE000
	084 Move W8, [X19]
	085 Move X28, [X28+640]
	086 Compare W8, 0
	087 JumpIfEqual {240}
	088 Move X8, [X19+32]
	089 Compare X8, 0
	090 JumpIfEqual {324}
	091 Move X8, 0xD06000
	092 Move X9, 0xCCB000
	093 Move X8, [X8+3704]
	094 Move X9, [X9+2440]
	095 Move X0, X19
	096 Move X25, [X19+48]
	097 Move X21, [X8]
	098 Move X20, [X9]
	099 Add X0, X0, 40
	100 Move W8, [X0]
	101 Compare W8, 0
	102 JumpIfEqual {122}
	103 Move X8, 0xD06000
	104 Move X8, [X8+2096]
	105 Move X1, [X8]
	106 Call Nullable`1<Boolean>.ToString, X0
	107 Compare X0, 0
	108 JumpIfEqual {352}
	109 Move X1, X31
	110 Call String.ToLower, X0
	111 Move X8, 0xD06000
	112 Move X8, [X8+2248]
	113 Move X9, 0xCD4000
	114 Move X9, [X9+1824]
	115 Move X2, X0
	116 Move X1, [X8]
	117 Move X3, [X9]
	118 Move X0, X20
	119 Move X4, X31
	120 Call String.Concat, X0, X1, X2, X3
	121 Move X20, X0
	122 Compare X25, 0
	123 JumpIfEqual {342}
	124 Move X0, [X25+32]
	125 Compare X0, 0
	126 JumpIfEqual {343}
	127 Move X1, X31
	128 Call Uri.get_AbsolutePath, X0
	129 Move X8, 0xCD4000
	130 Move X8, [X8+2264]
	131 Move X22, X0
	132 Move X0, [X8]
	133 Move W1, 1
	134 Call 0x1C17D6C
	135 Move X1, X0
	136 Compare X1, 0
	137 JumpIfEqual {344}
	138 Move W8, [X1+24]
	139 Compare W8, 0
	140 JumpIfEqual {345}
	141 Move W8, 47
	142 NotImplemented "Instruction STRH not yet implemented."
	143 Compare X22, 0
	144 JumpIfEqual {346}
	145 Move X0, X22
	146 Move X2, X31
	147 Call String.TrimEnd, X0, X1
	148 Move X1, X21
	149 Move X2, X31
	150 Call String.Concat, X0, X1
	151 Move X8, 0xCD4000
	152 Move X8, [X8+928]
	153 Move X22, X0
	154 Move X23, [X25+32]
	155 Move X0, [X8]
	156 Call 0x1C17F10
	157 Move X21, X0
	158 Move X1, X23
	159 Move X2, X31
	160 Call UriBuilder..ctor, X0, X1
	161 Compare X21, 0
	162 JumpIfEqual {347}
	163 Move X0, X21
	164 Move X1, X22
	165 Move X2, X31
	166 Call UriBuilder.set_Path, X0, X1
	167 Move X0, X21
	168 Move X1, X20
	169 Move X2, X31
	170 Call UriBuilder.set_Query, X0, X1
	171 Move X0, X21
	172 Move X1, X31
	173 Call UriBuilder.get_Uri, X0
	174 Move X8, 0xCF4000
	175 Move X9, 0xCCC000
	176 Move X8, [X8+1240]
	177 Move X9, [X9+1744]
	178 Move X20, X0
	179 Move X21, [X8]
	180 Move X0, [X9]
	181 Call 0x1C17F10
	182 Move X8, 0xCCC000
	183 Move X8, [X8+1728]
	184 Move X22, X0
	185 Move X1, [X8]
	186 Call Dictionary`2<Object, Object>..ctor, X0
	187 Move X8, 0xD06000
	188 Move X8, [X8+2008]
	189 Move X1, [X19+56]
	190 Move X0, [X8]
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Compare X22, 0
	194 JumpIfEqual {348}
	195 Move X8, 0xD06000
	196 Move X8, [X8+2000]
	197 Move X9, 0xCCC000
	198 Move X9, [X9+2064]
	199 Move X2, X0
	200 Move X1, [X8]
	201 Move X3, [X9]
	202 Move X0, X22
	203 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	204 Move X0, [X19+32]
	205 Move X1, X31
	206 Call JsonWriter.ToJson, X0
	207 Move X23, X0
	208 Move X0, X31
	209 Call Encoding.get_UTF8
	210 Compare X0, 0
	211 JumpIfEqual {349}
	212 Move X8, [X0]
	213 Move X9, [X8+616]
	214 Move X2, [X8+624]
	215 Move X1, X23
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X24, [X25+16]
	218 Compare X24, 0
	219 JumpIfEqual {350}
	220 Move X10, 0xD06000
	221 Move X10, [X10+1976]
	222 Move X8, [X24]
	223 Move W26, [X25+24]
	224 Move X27, [X19+64]
	225 Move X25, [X19+72]
	226 Move X1, [X10]
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Move X23, X0
	229 Compare X9, 0
	230 JumpIfEqual {237}
	231 Move X10, [X8+176]
	232 Add X10, X10, 8
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X9, X9, 1
	236 Add X10, X10, 16
	237 Move W2, 3
	238 Move X0, X24
	239 Call 0x1C5D788
	240 Move X8, [X19+80]
	241 Move TEMP, 0
	242 Not TEMP
	243 Move W9, TEMP
	244 Move [X31+24], X8
	245 Move [X19+80], X31
	246 Move [X19], W9
	247 Move W9, [X10]
	248 Add W9, W9, 3
	249 Add X8, X8, W9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X9, [X0+8]
	253 Move X0, X24
	254 Move X1, X21
	255 Move X2, X20
	256 Move X3, X22
	257 Move X4, X23
	258 Move W5, W26
	259 Move X6, X27
	260 Move X7, X25
	261 Move [X31], X9
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Compare X0, 0
	264 JumpIfEqual {351}
	265 Move X8, 0xCCE000
	266 Move X8, [X8+504]
	267 Move X1, [X8]
	268 Call Task`1<Object>.GetAwaiter, X0
	269 Move X8, 0xCCE000
	270 Move X8, [X8+496]
	271 Move [X31+24], X0
	272 Move X1, [X8]
	273 Add X0, X31, 24
	274 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {296}
	279 Move X8, 0xCCE000
	280 Move X8, [X8+480]
	281 Add X0, X31, 24
	282 Move X1, [X8]
	283 Call TaskAwaiter`1<Object>.GetResult, X0
	284 Move TEMP, 1
	285 Not TEMP
	286 Move W8, TEMP
	287 Move [X19+8], W8
	288 Move X0, [X28]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Move X0, X19
	294 Move X1, X31
	295 Call AsyncTaskMethodBuilder.SetResult, X0
	296 Move [X19], W31
	297 Move X8, [X31+24]
	298 Move [X19+80], X8
	299 Move X0, [X28]
	300 Move W8, [X0+224]
	301 Compare W8, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1C17DFC
	304 Move X8, 0xD06000
	305 Move X8, [X8+3696]
	306 Add X0, X19, 8
	307 Move X3, [X8]
	308 Add X1, X31, 24
	309 Move X2, X19
	310 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	311 Move X20, [X31+96]
	312 Move X19, [X31+104]
	313 Move X22, [X31+80]
	314 Move X21, [X31+88]
	315 Move X24, [X31+64]
	316 Move X23, [X31+72]
	317 Move X26, [X31+48]
	318 Move X25, [X31+56]
	319 Move X28, [X31+32]
	320 Move X27, [X31+40]
	321 Move X30, [X31+16]
	322 Add X31, X31, 112
	323 Return 
	324 Move X0, 0xCD3000
	325 Move X0, [X0+1400]
	326 Call 0x1C17D08
	327 Call 0x1C17F10
	328 Move X20, X0
	329 Move X0, 0xD06000
	330 Move X0, [X0+2136]
	331 Call 0x1C17D08
	332 Move X1, X0
	333 Move X0, X20
	334 Move X2, X31
	335 Call ArgumentException..ctor, X0, X1
	336 Move X0, 0xD06000
	337 Move X0, [X0+3712]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Call 0x1C17DEC
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F28
	346 Call 0x1C17F20
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Move X20, X0
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X0, X20
	356 Call 0x3EB2AD0
	357 Move X20, X0
	358 Move X0, 0xCCA000
	359 Move X0, [X0+2000]
	360 Call 0x1C17D08
	361 Move X8, [X20]
	362 Move X1, [X8]
	363 Call 0x1C18270
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {385}
	368 Move X20, [X20]
	369 Call 0x3EB2AE0
	370 Move TEMP, 1
	371 Not TEMP
	372 Move W8, TEMP
	373 Move [X19+8], W8
	374 Move X0, 0xCCD000
	375 Move X0, [X0+640]
	376 Call 0x1C17D08
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Move X0, X19
	382 Move X1, X20
	383 Move X2, X31
	384 Call AsyncTaskMethodBuilder.SetException, X0, X1
	385 Move W0, 8
	386 Call 0x3EB2AF0
	387 Move X8, [X20]
	388 Move [X0], X8
	389 Move X1, 0xA8B000
	390 Add X1, X1, 3672
	391 Move X2, X31
	392 Call 0x3EB2B00
	393 Move X20, X0
	394 Call 0x3EB2AE0
	395 Move X0, X20
	396 Call 0x1D2D690
	397 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342A0B8 LDP X26, X25, [X31 + 0x30]
	0x0342A0BC LDP X28, X27, [X31 + 0x20]
	0x0342A0C0 LDR X30, [X31 + 0x10]
	0x0342A0C4 ADD X31, X31, 0x70
	0x0342A0C8 RET
	0x0342A0CC ADRP X0, 0xCD1000
	0x0342A0D0 LDR X0, [X0 + 0x578]
	0x0342A0D4 BL 0x1C16D08
	0x0342A0D8 BL 0x1C16F10
	0x0342A0DC MOV X20, X0
	0x0342A0E0 ADRP X0, 0xD04000
	0x0342A0E4 LDR X0, [X0 + 0xBC8]
	0x0342A0E8 BL 0x1C16D08
	0x0342A0EC MOV X1, X0
	0x0342A0F0 MOV X0, X20
	0x0342A0F4 MOV X2, X31
	0x0342A0F8 BL 0x3314A68
	0x0342A0FC ADRP X0, 0xD04000
	0x0342A100 LDR X0, [X0 + 0xEC8]
	0x0342A104 BL 0x1C16D08
	0x0342A108 MOV X1, X0
	0x0342A10C MOV X0, X20
	0x0342A110 BL 0x1C16DEC
	0x0342A114 BL 0x1C16F20
	0x0342A118 BL 0x1C16F20
	0x0342A11C BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB4000
	007 Move X22, 0xCCD000
	008 Move W8, [X21+1602]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCD000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1602], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

