Type: Nakama.Client/<AuthenticateGoogleAsync>d__50

Method: System.Void MoveNext()

Disassembly:
	0x0344FEB0 BL 0x1C16F20
	0x0344FEB4 BL 0x1C16F20
	0x0344FEB8 BL 0x1C16F20
	0x0344FEBC BL 0x1C16F20
	0x0344FEC0 BL 0x1C16F20
	0x0344FEC4 BL 0x1C16F20
	0x0344FEC8 BL 0x1C16F20
	0x0344FECC BL 0x1C16F20
	0x0344FED0 BL 0x1C16F20
	0x0344FED4 BL 0x1C16F20
	0x0344FED8 B 0x344FF4C
	0x0344FEDC B 0x344FF4C
	0x0344FEE0 B 0x344FF4C
	0x0344FEE4 B 0x344FF4C
	0x0344FEE8 B 0x344FF4C
	0x0344FEEC B 0x344FF4C
	0x0344FEF0 B 0x344FF4C
	0x0344FEF4 B 0x344FF4C
	0x0344FEF8 B 0x344FF4C
	0x0344FEFC B 0x344FF4C
	0x0344FF00 B 0x344FF4C
	0x0344FF04 B 0x344FF4C
	0x0344FF08 B 0x344FF4C
	0x0344FF0C B 0x344FF4C
	0x0344FF10 B 0x344FF4C
	0x0344FF14 B 0x344FF4C
	0x0344FF18 B 0x344FF4C
	0x0344FF1C B 0x344FF4C
	0x0344FF20 B 0x344FF4C
	0x0344FF24 B 0x344FF4C
	0x0344FF28 B 0x344FF4C
	0x0344FF2C B 0x344FF4C
	0x0344FF30 B 0x344FF4C
	0x0344FF34 B 0x344FF4C
	0x0344FF38 B 0x344FF4C
	0x0344FF3C B 0x344FF4C
	0x0344FF40 B 0x344FF4C
	0x0344FF44 B 0x344FF4C
	0x0344FF48 B 0x344FF4C
	0x0344FF4C MOV X20, X0
	0x0344FF50 CMP W1, 0x1
	0x0344FF54 B.NE 0x344FFE8
	0x0344FF58 MOV X0, X20
	0x0344FF5C BL 0x3EB1AD0
	0x0344FF60 MOV X20, X0
	0x0344FF64 ADRP X0, 0xCA4000
	0x0344FF68 LDR X0, [X0 + 0x7D0]
	0x0344FF6C BL 0x1C16D08
	0x0344FF70 LDR X8, [X20]
	0x0344FF74 LDR X1, [X8]
	0x0344FF78 BL 0x1C17270
	0x0344FF7C TBZ X0, 0x0, 0x344FFC0
	0x0344FF80 LDR X20, [X20]
	0x0344FF84 BL 0x3EB1AE0
	0x0344FF88 MOVN W8, 0x1
	0x0344FF8C STR X31, [X19 + 0x50]
	0x0344FF90 STR W8, [X19], #0x8
	0x0344FF94 ADRP X0, 0xCA7000
	0x0344FF98 LDR X0, [X0 + 0x280]
	0x0344FF9C BL 0x1C16D08
	0x0344FFA0 LDR W8, [X0 + 0xE0]
	0x0344FFA4 CBNZ W8, 0x344FFAC
	0x0344FFA8 BL 0x1C16DFC
	0x0344FFAC MOV X0, X19
	0x0344FFB0 MOV X1, X20
	0x0344FFB4 MOV X2, X31
	0x0344FFB8 BL 0x32C4908
	0x0344FFBC B 0x344FE90
	0x0344FFC0 MOVZ W0, 0x8
	0x0344FFC4 BL 0x3EB1AF0
	0x0344FFC8 LDR X8, [X20]
	0x0344FFCC STR X8, [X0]
	0x0344FFD0 ADRP X1, 0xA65000
	0x0344FFD4 ADD X1, X1, 0xE58
	0x0344FFD8 MOV X2, X31
	0x0344FFDC BL 0x3EB1B00
	0x0344FFE0 MOV X20, X0
	0x0344FFE4 BL 0x3EB1AE0
	0x0344FFE8 MOV X0, X20
	0x0344FFEC BL 0x1D2C690
	0x0344FFF0 BL 0x1990590
	0x0344FFF4 STR X30, [X31 - 0x30]!
	0x0344FFF8 STP X22, X21, [X31 + 0x10]
	0x0344FFFC STP X20, X19, [X31 + 0x20]
	0x03450000 ADRP X21, 0xF8D000
	0x03450004 ADRP X22, 0xCA6000
	0x03450008 LDRB W8, [X21 + 0x768]
	0x0345000C B 0x3EB164C
	0x03450010 MOV X19, X1
	0x03450014 MOV X20, X0
	0x03450018 TBNZ X8, 0x0, 0x3450030
	0x0345001C ADRP X0, 0xCA6000
	0x03450020 LDR X0, [X0 + 0x280]
	0x03450024 BL 0x1C16CF4
	0x03450028 MOVZ W8, 0x1
	0x0345002C STRB W8, [X21 + 0x768]
	0x03450030 LDR X0, [X22]
	0x03450034 LDR W8, [X0 + 0xE0]
	0x03450038 CBNZ W8, 0x3450040
	0x0345003C BL 0x1C16DFC
	0x03450040 ADD X0, X20, 0x8
	0x03450044 MOV X1, X19
	0x03450048 LDP X20, X19, [X31 + 0x20]
	0x0345004C LDP X22, X21, [X31 + 0x10]
	0x03450050 MOV X2, X31
	0x03450054 LDR X30, [X31], #0x30
	0x03450058 B 0x32C477C
	0x0345005C SUB X31, X31, 0x70
	0x03450060 STP X30, X25, [X31 + 0x30]
	0x03450064 STP X24, X23, [X31 + 0x40]
	0x03450068 STP X22, X21, [X31 + 0x50]
	0x0345006C STP X20, X19, [X31 + 0x60]
	0x03450070 ADRP X20, 0xF8D000
	0x03450074 LDRB W8, [X20 + 0x769]
	0x03450078 MOV X19, X0
	0x0345007C TBNZ X8, 0x0, 0x3450130
	0x03450080 ADRP X0, 0xCDF000
	0x03450084 LDR X0, [X0 + 0xB78]
	0x03450088 BL 0x1C16CF4
	0x0345008C ADRP X0, 0xCDF000
	0x03450090 LDR X0, [X0 + 0xB80]
	0x03450094 BL 0x1C16CF4
	0x03450098 ADRP X0, 0xCA6000
	0x0345009C LDR X0, [X0 + 0x280]
	0x034500A0 BL 0x1C16CF4
	0x034500A4 ADRP X0, 0xCA5000
	0x034500A8 LDR X0, [X0 + 0xA10]
	0x034500AC BL 0x1C16CF4
	0x034500B0 ADRP X0, 0xCA4000
	0x034500B4 LDR X0, [X0 + 0x9F0]
	0x034500B8 BL 0x1C16CF4
	0x034500BC ADRP X0, 0xCAB000
	0x034500C0 LDR X0, [X0 + 0x818]
	0x034500C4 BL 0x1C16CF4
	0x034500C8 ADRP X0, 0xCA4000
	0x034500CC LDR X0, [X0 + 0x818]
	0x034500D0 BL 0x1C16CF4
	0x034500D4 ADRP X0, 0xCDF000
	0x034500D8 LDR X0, [X0 + 0x7C8]
	0x034500DC BL 0x1C16CF4
	0x034500E0 ADRP X0, 0xCDF000
	0x034500E4 LDR X0, [X0 + 0x7D0]
	0x034500E8 BL 0x1C16CF4
	0x034500EC ADRP X0, 0xCA4000
	0x034500F0 LDR X0, [X0 + 0x830]
	0x034500F4 BL 0x1C16CF4
	0x034500F8 ADRP X0, 0xCA4000
	0x034500FC LDR X0, [X0 + 0x838]
	0x03450100 BL 0x1C16CF4
	0x03450104 ADRP X0, 0xCA4000
	0x03450108 LDR X0, [X0 + 0x840]
	0x0345010C BL 0x1C16CF4
	0x03450110 ADRP X0, 0xCDF000
	0x03450114 LDR X0, [X0 + 0xB88]
	0x03450118 BL 0x1C16CF4
	0x0345011C ADRP X0, 0xCDF000
	0x03450120 LDR X0, [X0 + 0xB90]
	0x03450124 BL 0x1C16CF4
	0x03450128 MOVZ W8, 0x1
	0x0345012C STRB W8, [X20 + 0x769]
	0x03450130 STP X31, X31, [X31 + 0x20]
	0x03450134 STR X31, [X31 + 0x18]
	0x03450138 ADRP X25, 0xCA6000
	0x0345013C LDR W8, [X19]
	0x03450140 LDR X20, [X19 + 0x20]
	0x03450144 LDR X25, [X25 + 0x280]
	0x03450148 CBZ W8, 0x345016C
	0x0345014C CMP W8, 0x1
	0x03450150 B.NE 0x3450198
	0x03450154 LDR X8, [X19 + 0x60]
	0x03450158 MOVN W9, 0x0
	0x0345015C STR X8, [X31 + 0x18]
	0x03450160 STR X31, [X19 + 0x60]
	0x03450164 STR W9, [X19]
	0x03450168 B 0x3450494
	0x0345016C LDR X8, [X19 + 0x58]
	0x03450170 MOVN W9, 0x0
	0x03450174 STR X8, [X31 + 0x20]
	0x03450178 STR X31, [X19 + 0x58]
	0x0345017C STR W9, [X19]
	0x03450180 ADRP X8, 0xCA4000
	0x03450184 LDR X8, [X8 + 0x830]
	0x03450188 ADD X0, X31, 0x20
	0x0345018C LDR X1, [X8]
	0x03450190 BL 0x2677474
	0x03450194 B 0x34503C8
	0x03450198 ADRP X8, 0xCDF000
	0x0345019C LDR X8, [X8 + 0xB90]
	0x034501A0 LDR X0, [X8]
	0x034501A4 BL 0x1C16F10
	0x034501A8 MOV X21, X0
	0x034501AC MOV X1, X31
	0x034501B0 BL 0x344864C
	0x034501B4 STR X21, [X19 + 0x50]
	0x034501B8 CBZ X21, 0x3450534
	0x034501BC LDR X8, [X19 + 0x20]
	0x034501C0 STR X8, [X21 + 0x10]
	0x034501C4 LDUR V0, [X19 + 0x28]
	0x034501C8 STUR V0, [X21 + 0x18]
	0x034501CC LDR X8, [X19 + 0x38]
	0x034501D0 STR X8, [X21 + 0x28]
	0x034501D4 LDR X8, [X19 + 0x40]
	0x034501D8 STR X8, [X21 + 0x30]
	0x034501DC CBZ X20, 0x3450538
	0x034501E0 LDRB W8, [X20 + 0x10]
	0x034501E4 CBZ W8, 0x34503CC
	0x034501E8 LDR X8, [X19 + 0x50]
	0x034501EC CBZ X8, 0x345053C
	0x034501F0 LDR X21, [X8 + 0x18]
	0x034501F4 CBZ X21, 0x3450540
	0x034501F8 ADRP X23, 0xCA4000
	0x034501FC LDR X8, [X21]
	0x03450200 LDR X23, [X23 + 0x818]
	0x03450204 LDRH W9, [X8 + 0x12E]
	0x03450208 LDR X1, [X23]
	0x0345020C CBZ X9, 0x3450230
	0x03450210 LDR X10, [X8 + 0xB0]
	0x03450214 ADD X10, X10, 0x8
	0x03450218 LDUR X11, [X10 - 0x8]
	0x0345021C CMP X11, X1
	0x03450220 B.EQ 0x3450240
	0x03450224 SUBS X9, X9, 0x1
	0x03450228 ADD X10, X10, 0x10
	0x0345022C B.NE 0x3450218
	0x03450230 MOVZ W2, 0x7
	0x03450234 MOV X0, X21
	0x03450238 BL 0x1C5C788
	0x0345023C B 0x3450250
	0x03450240 LDR W9, [X10]
	0x03450244 ADD W9, W9, 0x7
	0x03450248 ADD X8, X8, W9, 0x4, SXTW
	0x0345024C ADD X0, X8, 0x138
	0x03450250 LDP X8, X1, [X0]
	0x03450254 MOV X0, X21
	0x03450258 BLR X8
	0x0345025C MOV X1, X31
	0x03450260 BL 0x32277A8
	0x03450264 TBNZ X0, 0x0, 0x34503C8
	0x03450268 LDR X8, [X19 + 0x50]
	0x0345026C CBZ X8, 0x3450544
	0x03450270 ADRP X9, 0xCA4000
	0x03450274 LDR X9, [X9 + 0x9F0]
	0x03450278 LDR X21, [X8 + 0x18]
	0x0345027C LDR X0, [X9]
	0x03450280 LDR W9, [X0 + 0xE0]
	0x03450284 CBNZ W9, 0x345028C
	0x03450288 BL 0x1C16DFC
	0x0345028C MOV X0, X31
	0x03450290 BL 0x33616A4
	0x03450294 ADRP X22, 0xCA5000
	0x03450298 LDR X22, [X22 + 0xA10]
	0x0345029C MOV X8, X0
	0x034502A0 STR X8, [X31 + 0x28]
	0x034502A4 LDR X0, [X22]
	0x034502A8 LDR W8, [X0 + 0xE0]
	0x034502AC CBNZ W8, 0x34502B8
	0x034502B0 BL 0x1C16DFC
	0x034502B4 LDR X0, [X22]
	0x034502B8 LDR X8, [X0 + 0xB8]
	0x034502BC LDR X1, [X8]
	0x034502C0 ADD X0, X31, 0x28
	0x034502C4 MOV X2, X31
	0x034502C8 BL 0x335FC68
	0x034502CC CBZ X21, 0x3450548
	0x034502D0 LDR X8, [X21]
	0x034502D4 LDR X1, [X23]
	0x034502D8 MOV X22, X0
	0x034502DC LDRH W9, [X8 + 0x12E]
	0x034502E0 CBZ X9, 0x3450304
	0x034502E4 LDR X10, [X8 + 0xB0]
	0x034502E8 ADD X10, X10, 0x8
	0x034502EC LDUR X11, [X10 - 0x8]
	0x034502F0 CMP X11, X1
	0x034502F4 B.EQ 0x3450314
	0x034502F8 SUBS X9, X9, 0x1
	0x034502FC ADD X10, X10, 0x10
	0x03450300 B.NE 0x34502EC
	0x03450304 MOVZ W2, 0xB
	0x03450308 MOV X0, X21
	0x0345030C BL 0x1C5C788
	0x03450310 B 0x3450324
	0x03450314 LDR W9, [X10]
	0x03450318 ADD W9, W9, 0xB
	0x0345031C ADD X8, X8, W9, 0x4, SXTW
	0x03450320 ADD X0, X8, 0x138
	0x03450324 LDP X8, X2, [X0]
	0x03450328 MOV X0, X21
	0x0345032C MOV X1, X22
	0x03450330 BLR X8
	0x03450334 TBZ X0, 0x0, 0x34503C8
	0x03450338 LDR X8, [X19 + 0x50]
	0x0345033C CBZ X8, 0x345054C
	0x03450340 LDR X1, [X8 + 0x18]
	0x03450344 LDR X3, [X19 + 0x48]
	0x03450348 LDR X4, [X8 + 0x30]
	0x0345034C MOV X0, X20
	0x03450350 MOV X2, X31
	0x03450354 MOV X5, X31
	0x03450358 BL 0x34440A8
	0x0345035C CBZ X0, 0x3450550
	0x03450360 ADRP X8, 0xCA4000
	0x03450364 LDR X8, [X8 + 0x840]
	0x03450368 LDR X1, [X8]
	0x0345036C BL 0x269F5D0
	0x03450370 ADRP X8, 0xCA4000
	0x03450374 LDR X8, [X8 + 0x838]
	0x03450378 STR X0, [X31 + 0x20]
	0x0345037C LDR X1, [X8]
	0x03450380 ADD X0, X31, 0x20
	0x03450384 BL 0x2677430
	0x03450388 TBNZ X0, 0x0, 0x3450180
	0x0345038C STR W31, [X19]
	0x03450390 LDR X8, [X31 + 0x20]
	0x03450394 STR X8, [X19 + 0x58]
	0x03450398 LDR X0, [X25]
	0x0345039C LDR W8, [X0 + 0xE0]
	0x034503A0 CBNZ W8, 0x34503A8
	0x034503A4 BL 0x1C16DFC
	0x034503A8 ADRP X8, 0xCDF000
	0x034503AC LDR X8, [X8 + 0xB78]
	0x034503B0 ADD X0, X19, 0x8
	0x034503B4 LDR X3, [X8]
	0x034503B8 ADD X1, X31, 0x20
	0x034503BC MOV X2, X19
	0x034503C0 BL 0x2188080

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xF8F000
	011 Move W8, [X20+1891]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE1000
	018 Move X0, [X0+2856]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE1000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE1000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE1000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE1000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE1000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE1000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE1000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE1000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xCE1000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0xCE1000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE1000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE1000
	054 Move X0, [X0+2864]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE1000
	057 Move X0, [X0+2872]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1891], W8
	061 Move [X31+24], X31
	062 Move X25, 0xCE1000
	063 Move W8, [X19]
	064 Move X25, [X25+1584]
	065 Compare W8, 0
	066 JumpIfEqual {167}
	067 Move X8, 0xCE1000
	068 Move X8, [X8+2872]
	069 Move X24, [X19+32]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X22, X0
	073 Move X1, X31
	074 Call <>c__DisplayClass50_0..ctor, X0
	075 Compare X22, 0
	076 JumpIfEqual {288}
	077 Move X8, [X19+32]
	078 Move [X22+16], X8
	079 Move X8, [X19+40]
	080 Move [X22+24], X8
	081 Move X8, [X19+48]
	082 Move [X22+32], X8
	083 Move W8, [X19+56]
	084 Move [X22+40], W8
	085 Move X8, [X19+64]
	086 Move [X22+48], X8
	087 Move X8, [X19+72]
	088 Move [X22+56], X8
	089 Compare X24, 0
	090 JumpIfEqual {289}
	091 Move X8, 0xCE1000
	092 Move X8, [X8+2648]
	093 Move X20, [X24+88]
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X8, 0xCE0000
	097 Move X8, [X8+2864]
	098 Move X21, X0
	099 Move X2, [X8]
	100 Move X1, X22
	101 Move X3, X31
	102 Call Func`1<Object>..ctor, X0, X1, X2
	103 Move X8, 0xCE0000
	104 Move X23, [X19+80]
	105 Move X8, [X8+1992]
	106 Compare X23, 0
	107 JumpIfNotEqual {109}
	108 Move X23, [X24+24]
	109 Move X24, [X22+24]
	110 Move X1, [X22+56]
	111 Move X2, [X8]
	112 Move [X31+8], X31
	113 Move [X31+16], X31
	114 Add X0, X31, 8
	115 Call Nullable`1<CancellationToken>..ctor, X0, X1
	116 Move X8, 0xCE0000
	117 Move X8, [X8+2000]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X3, [X31+8]
	121 Move X4, [X31+16]
	122 Move X22, X0
	123 Move X1, X24
	124 Move X2, X23
	125 Move X5, X31
	126 Call RetryHistory..ctor, X0, X1, X2, X3
	127 Compare X20, 0
	128 JumpIfEqual {290}
	129 Move X8, 0xCE0000
	130 Move X8, [X8+2664]
	131 Move X3, [X8]
	132 Move X0, X20
	133 Move X1, X21
	134 Move X2, X22
	135 Call 0x2244230, X0, X1, X2
	136 Compare X0, 0
	137 JumpIfEqual {291}
	138 Move X8, 0xCE0000
	139 Move X8, [X8+2696]
	140 Move X1, [X8]
	141 Call Task`1<Object>.GetAwaiter, X0
	142 Move X8, 0xCE0000
	143 Move X8, [X8+2688]
	144 Move [X31+24], X0
	145 Move X1, [X8]
	146 Add X0, X31, 24
	147 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {174}
	152 Move [X19], W31
	153 Move X8, [X31+24]
	154 Move [X19+88], X8
	155 Move X0, [X25]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X8, 0xCE0000
	161 Move X8, [X8+2856]
	162 Add X0, X19, 8
	163 Move X3, [X8]
	164 Add X1, X31, 24
	165 Move X2, X19
	166 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	167 Move X8, [X19+88]
	168 Move TEMP, 0
	169 Not TEMP
	170 Move W9, TEMP
	171 Move [X31+24], X8
	172 Move [X19+88], X31
	173 Move [X19], W9
	174 Move X8, 0xCE0000
	175 Move X8, [X8+2680]
	176 Add X0, X31, 24
	177 Move X1, [X8]
	178 Call TaskAwaiter`1<Object>.GetResult, X0
	179 Move X20, X0
	180 Compare X0, 0
	181 JumpIfEqual {287}
	182 Move X23, 0xCE0000
	183 Move X8, [X20]
	184 Move X23, [X23+2656]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X23]
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 2
	196 Move X0, X20
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 2
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X8, [X20]
	207 Move X1, [X23]
	208 Move X21, X0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X20
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 1
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X20
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, [X20]
	230 Move X1, [X23]
	231 Move X22, X0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X20
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X1, [X0+8]
	249 Move X0, X20
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X8, 0xCE0000
	252 Move X8, [X8+2672]
	253 Move W23, W0
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X20, X0
	257 And W3, W23, 1
	258 Move X1, X21
	259 Move X2, X22
	260 Move X4, X31
	261 Call Session..ctor, X0, X1, X2, X3
	262 Move TEMP, 1
	263 Not TEMP
	264 Move W8, TEMP
	265 Move [X19+8], W8
	266 Move X0, [X25]
	267 Move X21, 0xCE0000
	268 Move W8, [X0+224]
	269 Move X21, [X21+2640]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X2, [X21]
	274 Move X0, X19
	275 Move X1, X20
	276 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	277 Move X20, [X31+80]
	278 Move X19, [X31+88]
	279 Move X22, [X31+64]
	280 Move X21, [X31+72]
	281 Move X24, [X31+48]
	282 Move X23, [X31+56]
	283 Move X30, [X31+32]
	284 Move X25, [X31+40]
	285 Add X31, X31, 96
	286 Return 
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Move X20, X0
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X20
	295 Call 0x3EB2AD0
	296 Move X20, X0
	297 Move X0, 0xCA4000
	298 Move X0, [X0+2000]
	299 Call 0x1C17D08
	300 Move X8, [X20]
	301 Move X1, [X8]
	302 Call 0x1C18270
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {327}
	307 Move X20, [X20]
	308 Call 0x3EB2AE0
	309 Move TEMP, 1
	310 Not TEMP
	311 Move W8, TEMP
	312 Move [X19+8], W8
	313 Move X0, 0xCE0000
	314 Move X0, [X0+1584]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, 0xCE0000
	321 Move X0, [X0+2720]
	322 Call 0x1C17D08
	323 Move X2, X0
	324 Move X0, X19
	325 Move X1, X20
	326 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	327 Move W0, 8
	328 Call 0x3EB2AF0
	329 Move X8, [X20]
	330 Move [X0], X8
	331 Move X1, 0xA65000
	332 Add X1, X1, 3672
	333 Move X2, X31
	334 Call 0x3EB2B00
	335 Move X20, X0
	336 Call 0x3EB2AE0
	337 Move X0, X20
	338 Call 0x1D2D690
	339 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034503C4 B 0x345050C
	0x034503C8 CBZ X20, 0x3450530
	0x034503CC ADRP X8, 0xCAB000
	0x034503D0 LDR X8, [X8 + 0x818]
	0x034503D4 LDR X21, [X20 + 0x58]
	0x034503D8 LDR X23, [X19 + 0x50]
	0x034503DC LDR X0, [X8]
	0x034503E0 BL 0x1C16F10
	0x034503E4 ADRP X8, 0xCDF000
	0x034503E8 LDR X8, [X8 + 0xB88]
	0x034503EC MOV X22, X0
	0x034503F0 LDR X2, [X8]
	0x034503F4 MOV X1, X23
	0x034503F8 MOV X3, X31
	0x034503FC BL 0x2D27AA8
	0x03450400 LDR X8, [X19 + 0x50]
	0x03450404 CBZ X8, 0x3450524
	0x03450408 ADRP X9, 0xCDF000
	0x0345040C LDR X23, [X19 + 0x48]
	0x03450410 LDR X9, [X9 + 0x7C8]
	0x03450414 CBNZ X23, 0x345041C
	0x03450418 LDR X23, [X20 + 0x18]
	0x0345041C LDR X20, [X8 + 0x18]
	0x03450420 LDR X1, [X8 + 0x30]
	0x03450424 LDR X2, [X9]
	0x03450428 STP X31, X31, [X31 + 0x8]
	0x0345042C ADD X0, X31, 0x8
	0x03450430 BL 0x242E368
	0x03450434 ADRP X8, 0xCDF000
	0x03450438 LDR X8, [X8 + 0x7D0]
	0x0345043C LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF8E000
	007 Move X21, 0xCE0000
	008 Move W8, [X22+1892]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCE0000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCE0000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1892], W8
	024 Move X0, [X21]
	025 Move X21, 0xCE0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

