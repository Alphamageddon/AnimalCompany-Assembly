Type: Nakama.Client/<PromoteGroupUsersAsync>d__99

Method: System.Void MoveNext()

Disassembly:
	0x03466554 LDR X20, [X20]
	0x03466558 BL 0x3EB1AE0
	0x0346655C MOVN W8, 0x1
	0x03466560 STR X31, [X19 + 0x40]
	0x03466564 STR W8, [X19], #0x8
	0x03466568 ADRP X0, 0xCC8000
	0x0346656C LDR X0, [X0 + 0x698]
	0x03466570 BL 0x1C16D08
	0x03466574 LDR W8, [X0 + 0xE0]
	0x03466578 CBNZ W8, 0x3466580
	0x0346657C BL 0x1C16DFC
	0x03466580 ADRP X0, 0xCC9000
	0x03466584 LDR X0, [X0 + 0x2A8]
	0x03466588 BL 0x1C16D08
	0x0346658C MOV X2, X0
	0x03466590 MOV X0, X19
	0x03466594 MOV X1, X20
	0x03466598 BL 0x26324C8
	0x0346659C B 0x3466418
	0x034665A0 MOVZ W0, 0x8
	0x034665A4 BL 0x3EB1AF0
	0x034665A8 LDR X8, [X20]
	0x034665AC STR X8, [X0]
	0x034665B0 ADRP X1, 0xA4E000
	0x034665B4 ADD X1, X1, 0xE58
	0x034665B8 MOV X2, X31
	0x034665BC BL 0x3EB1B00
	0x034665C0 MOV X20, X0
	0x034665C4 BL 0x3EB1AE0
	0x034665C8 MOV X0, X20
	0x034665CC BL 0x1D2C690
	0x034665D0 BL 0x1990590
	0x034665D4 STR X30, [X31 - 0x30]!
	0x034665D8 STP X22, X21, [X31 + 0x10]
	0x034665DC STP X20, X19, [X31 + 0x20]
	0x034665E0 ADRP X22, 0xF77000
	0x034665E4 ADRP X21, 0xCC8000
	0x034665E8 LDRB W8, [X22 + 0x7C2]
	0x034665EC LDR X21, [X21 + 0x698]
	0x034665F0 MOV X19, X1
	0x034665F4 MOV X20, X0
	0x034665F8 TBNZ X8, 0x0, 0x346661C
	0x034665FC ADRP X0, 0xCC9000
	0x03466600 LDR X0, [X0 + 0x2B0]
	0x03466604 BL 0x1C16CF4
	0x03466608 ADRP X0, 0xCC8000
	0x0346660C LDR X0, [X0 + 0x698]
	0x03466610 BL 0x1C16CF4
	0x03466614 MOVZ W8, 0x1
	0x03466618 STRB W8, [X22 + 0x7C2]
	0x0346661C LDR X0, [X21]
	0x03466620 ADRP X21, 0xCC9000
	0x03466624 LDR W8, [X0 + 0xE0]
	0x03466628 LDR X21, [X21 + 0x2B0]
	0x0346662C CBNZ W8, 0x3466634
	0x03466630 BL 0x1C16DFC
	0x03466634 LDR X2, [X21]
	0x03466638 ADD X0, X20, 0x8
	0x0346663C MOV X1, X19
	0x03466640 LDP X20, X19, [X31 + 0x20]
	0x03466644 LDP X22, X21, [X31 + 0x10]
	0x03466648 LDR X30, [X31], #0x30
	0x0346664C B 0x2632228
	0x03466650 SUB X31, X31, 0x70
	0x03466654 STP X30, X25, [X31 + 0x30]
	0x03466658 STP X24, X23, [X31 + 0x40]
	0x0346665C STP X22, X21, [X31 + 0x50]
	0x03466660 STP X20, X19, [X31 + 0x60]
	0x03466664 ADRP X20, 0xF77000
	0x03466668 LDRB W8, [X20 + 0x7C3]
	0x0346666C MOV X19, X0
	0x03466670 TBNZ X8, 0x0, 0x3466760
	0x03466674 ADRP X0, 0xCCA000
	0x03466678 LDR X0, [X0 + 0x400]
	0x0346667C BL 0x1C16CF4
	0x03466680 ADRP X0, 0xCCA000
	0x03466684 LDR X0, [X0 + 0x408]
	0x03466688 BL 0x1C16CF4
	0x0346668C ADRP X0, 0xCC9000
	0x03466690 LDR X0, [X0 + 0x2C0]
	0x03466694 BL 0x1C16CF4
	0x03466698 ADRP X0, 0xCC8000
	0x0346669C LDR X0, [X0 + 0x668]
	0x034666A0 BL 0x1C16CF4
	0x034666A4 ADRP X0, 0xC8F000
	0x034666A8 LDR X0, [X0 + 0xA10]
	0x034666AC BL 0x1C16CF4
	0x034666B0 ADRP X0, 0xC8E000
	0x034666B4 LDR X0, [X0 + 0x9F0]
	0x034666B8 BL 0x1C16CF4
	0x034666BC ADRP X0, 0xCC9000
	0x034666C0 LDR X0, [X0 + 0x848]
	0x034666C4 BL 0x1C16CF4
	0x034666C8 ADRP X0, 0xC8E000
	0x034666CC LDR X0, [X0 + 0x818]
	0x034666D0 BL 0x1C16CF4
	0x034666D4 ADRP X0, 0xCC9000
	0x034666D8 LDR X0, [X0 + 0x7C8]
	0x034666DC BL 0x1C16CF4
	0x034666E0 ADRP X0, 0xCC9000
	0x034666E4 LDR X0, [X0 + 0x7D0]
	0x034666E8 BL 0x1C16CF4
	0x034666EC ADRP X0, 0xCC9000
	0x034666F0 LDR X0, [X0 + 0x850]
	0x034666F4 BL 0x1C16CF4
	0x034666F8 ADRP X0, 0xCCA000
	0x034666FC LDR X0, [X0 + 0x410]
	0x03466700 BL 0x1C16CF4
	0x03466704 ADRP X0, 0xC8E000
	0x03466708 LDR X0, [X0 + 0x830]
	0x0346670C BL 0x1C16CF4
	0x03466710 ADRP X0, 0xC8E000
	0x03466714 LDR X0, [X0 + 0x838]
	0x03466718 BL 0x1C16CF4
	0x0346671C ADRP X0, 0xCCA000
	0x03466720 LDR X0, [X0 + 0x418]
	0x03466724 BL 0x1C16CF4
	0x03466728 ADRP X0, 0xCCA000
	0x0346672C LDR X0, [X0 + 0x420]
	0x03466730 BL 0x1C16CF4
	0x03466734 ADRP X0, 0xC8E000
	0x03466738 LDR X0, [X0 + 0x840]
	0x0346673C BL 0x1C16CF4
	0x03466740 ADRP X0, 0xCCA000
	0x03466744 LDR X0, [X0 + 0x428]
	0x03466748 BL 0x1C16CF4
	0x0346674C ADRP X0, 0xCCA000
	0x03466750 LDR X0, [X0 + 0x430]
	0x03466754 BL 0x1C16CF4
	0x03466758 MOVZ W8, 0x1
	0x0346675C STRB W8, [X20 + 0x7C3]
	0x03466760 STP X31, X31, [X31 + 0x20]
	0x03466764 STR X31, [X31 + 0x18]
	0x03466768 ADRP X25, 0xCC8000
	0x0346676C LDR W8, [X19]
	0x03466770 LDR X20, [X19 + 0x20]
	0x03466774 LDR X25, [X25 + 0x668]
	0x03466778 CBZ W8, 0x346679C
	0x0346677C CMP W8, 0x1
	0x03466780 B.NE 0x34667C8
	0x03466784 LDR X8, [X19 + 0x60]
	0x03466788 MOVN W9, 0x0
	0x0346678C STR X8, [X31 + 0x18]
	0x03466790 STR X31, [X19 + 0x60]
	0x03466794 STR W9, [X19]
	0x03466798 B 0x3466AD8
	0x0346679C LDR X8, [X19 + 0x58]
	0x034667A0 MOVN W9, 0x0
	0x034667A4 STR X8, [X31 + 0x20]
	0x034667A8 STR X31, [X19 + 0x58]
	0x034667AC STR W9, [X19]
	0x034667B0 ADRP X8, 0xC8E000
	0x034667B4 LDR X8, [X8 + 0x830]
	0x034667B8 ADD X0, X31, 0x20
	0x034667BC LDR X1, [X8]
	0x034667C0 BL 0x2677474
	0x034667C4 B 0x34669F8
	0x034667C8 ADRP X8, 0xCCA000
	0x034667CC LDR X8, [X8 + 0x430]
	0x034667D0 LDR X0, [X8]
	0x034667D4 BL 0x1C16F10
	0x034667D8 MOV X21, X0
	0x034667DC MOV X1, X31
	0x034667E0 BL 0x344594C
	0x034667E4 STR X21, [X19 + 0x50]
	0x034667E8 CBZ X21, 0x3466B90
	0x034667EC LDR X8, [X19 + 0x20]
	0x034667F0 STR X8, [X21 + 0x10]
	0x034667F4 LDR X8, [X19 + 0x28]
	0x034667F8 STR X8, [X21 + 0x18]
	0x034667FC LDR V0, [X19 + 0x3]
	0x03466800 STR V0, [X21 + 0x2]
	0x03466804 LDR X8, [X19 + 0x40]
	0x03466808 STR X8, [X21 + 0x30]
	0x0346680C CBZ X20, 0x3466B94
	0x03466810 LDRB W8, [X20 + 0x10]
	0x03466814 CBZ W8, 0x34669FC
	0x03466818 LDR X8, [X19 + 0x50]
	0x0346681C CBZ X8, 0x3466B98
	0x03466820 LDR X21, [X8 + 0x18]
	0x03466824 CBZ X21, 0x3466B9C
	0x03466828 ADRP X23, 0xC8E000
	0x0346682C LDR X8, [X21]
	0x03466830 LDR X23, [X23 + 0x818]
	0x03466834 LDRH W9, [X8 + 0x12E]
	0x03466838 LDR X1, [X23]
	0x0346683C CBZ X9, 0x3466860
	0x03466840 LDR X10, [X8 + 0xB0]
	0x03466844 ADD X10, X10, 0x8
	0x03466848 LDUR X11, [X10 - 0x8]
	0x0346684C CMP X11, X1
	0x03466850 B.EQ 0x3466870
	0x03466854 SUBS X9, X9, 0x1
	0x03466858 ADD X10, X10, 0x10
	0x0346685C B.NE 0x3466848
	0x03466860 MOVZ W2, 0x7
	0x03466864 MOV X0, X21
	0x03466868 BL 0x1C5C788
	0x0346686C B 0x3466880
	0x03466870 LDR W9, [X10]
	0x03466874 ADD W9, W9, 0x7
	0x03466878 ADD X8, X8, W9, 0x4, SXTW
	0x0346687C ADD X0, X8, 0x138
	0x03466880 LDP X8, X1, [X0]
	0x03466884 MOV X0, X21
	0x03466888 BLR X8
	0x0346688C MOV X1, X31
	0x03466890 BL 0x32277A8
	0x03466894 TBNZ X0, 0x0, 0x34669F8
	0x03466898 LDR X8, [X19 + 0x50]
	0x0346689C CBZ X8, 0x3466BA0
	0x034668A0 ADRP X9, 0xC8E000
	0x034668A4 LDR X9, [X9 + 0x9F0]
	0x034668A8 LDR X21, [X8 + 0x18]
	0x034668AC LDR X0, [X9]
	0x034668B0 LDR W9, [X0 + 0xE0]
	0x034668B4 CBNZ W9, 0x34668BC
	0x034668B8 BL 0x1C16DFC
	0x034668BC MOV X0, X31
	0x034668C0 BL 0x33616A4
	0x034668C4 ADRP X22, 0xC8F000
	0x034668C8 LDR X22, [X22 + 0xA10]
	0x034668CC MOV X8, X0
	0x034668D0 STR X8, [X31 + 0x28]
	0x034668D4 LDR X0, [X22]
	0x034668D8 LDR W8, [X0 + 0xE0]
	0x034668DC CBNZ W8, 0x34668E8
	0x034668E0 BL 0x1C16DFC
	0x034668E4 LDR X0, [X22]
	0x034668E8 LDR X8, [X0 + 0xB8]
	0x034668EC LDR X1, [X8]
	0x034668F0 ADD X0, X31, 0x28
	0x034668F4 MOV X2, X31
	0x034668F8 BL 0x335FC68
	0x034668FC CBZ X21, 0x3466BA4
	0x03466900 LDR X8, [X21]
	0x03466904 LDR X1, [X23]
	0x03466908 MOV X22, X0
	0x0346690C LDRH W9, [X8 + 0x12E]
	0x03466910 CBZ X9, 0x3466934
	0x03466914 LDR X10, [X8 + 0xB0]
	0x03466918 ADD X10, X10, 0x8
	0x0346691C LDUR X11, [X10 - 0x8]
	0x03466920 CMP X11, X1
	0x03466924 B.EQ 0x3466944
	0x03466928 SUBS X9, X9, 0x1
	0x0346692C ADD X10, X10, 0x10
	0x03466930 B.NE 0x346691C
	0x03466934 MOVZ W2, 0xB
	0x03466938 MOV X0, X21
	0x0346693C BL 0x1C5C788
	0x03466940 B 0x3466954
	0x03466944 LDR W9, [X10]
	0x03466948 ADD W9, W9, 0xB
	0x0346694C ADD X8, X8, W9, 0x4, SXTW
	0x03466950 ADD X0, X8, 0x138
	0x03466954 LDP X8, X2, [X0]
	0x03466958 MOV X0, X21
	0x0346695C MOV X1, X22
	0x03466960 BLR X8
	0x03466964 TBZ X0, 0x0, 0x34669F8
	0x03466968 LDR X8, [X19 + 0x50]
	0x0346696C CBZ X8, 0x3466BA8
	0x03466970 LDR X1, [X8 + 0x18]
	0x03466974 LDR X3, [X19 + 0x48]
	0x03466978 LDR X4, [X8 + 0x30]
	0x0346697C MOV X0, X20
	0x03466980 MOV X2, X31
	0x03466984 MOV X5, X31
	0x03466988 BL 0x34440A8
	0x0346698C CBZ X0, 0x3466BAC
	0x03466990 ADRP X8, 0xC8E000
	0x03466994 LDR X8, [X8 + 0x840]
	0x03466998 LDR X1, [X8]
	0x0346699C BL 0x269F5D0
	0x034669A0 ADRP X8, 0xC8E000
	0x034669A4 LDR X8, [X8 + 0x838]
	0x034669A8 STR X0, [X31 + 0x20]
	0x034669AC LDR X1, [X8]
	0x034669B0 ADD X0, X31, 0x20
	0x034669B4 BL 0x2677430
	0x034669B8 TBNZ X0, 0x0, 0x34667B0
	0x034669BC STR W31, [X19]
	0x034669C0 LDR X8, [X31 + 0x20]
	0x034669C4 STR X8, [X19 + 0x58]
	0x034669C8 LDR X0, [X25]
	0x034669CC LDR W8, [X0 + 0xE0]
	0x034669D0 CBNZ W8, 0x34669D8
	0x034669D4 BL 0x1C16DFC
	0x034669D8 ADRP X8, 0xCCA000
	0x034669DC LDR X8, [X8 + 0x408]
	0x034669E0 ADD X0, X19, 0x8
	0x034669E4 LDR X3, [X8]
	0x034669E8 ADD X1, X31, 0x20
	0x034669EC MOV X2, X19
	0x034669F0 BL 0x1FBD378
	0x034669F4 B 0x3466B68
	0x034669F8 CBZ X20, 0x3466B8C
	0x034669FC ADRP X8, 0xCC9000
	0x03466A00 LDR X8, [X8 + 0x848]
	0x03466A04 LDR X21, [X20 + 0x58]
	0x03466A08 LDR X23, [X19 + 0x50]
	0x03466A0C LDR X0, [X8]
	0x03466A10 BL 0x1C16F10
	0x03466A14 ADRP X8, 0xCCA000
	0x03466A18 LDR X8, [X8 + 0x428]
	0x03466A1C MOV X22, X0
	0x03466A20 LDR X2, [X8]
	0x03466A24 MOV X1, X23
	0x03466A28 MOV X3, X31
	0x03466A2C BL 0x2D27AA8
	0x03466A30 LDR X8, [X19 + 0x50]
	0x03466A34 CBZ X8, 0x3466B80
	0x03466A38 ADRP X9, 0xCC9000
	0x03466A3C LDR X23, [X19 + 0x48]
	0x03466A40 LDR X9, [X9 + 0x7C8]
	0x03466A44 CBNZ X23, 0x3466A4C
	0x03466A48 LDR X23, [X20 + 0x18]
	0x03466A4C LDR X20, [X8 + 0x18]
	0x03466A50 LDR X1, [X8 + 0x30]
	0x03466A54 LDR X2, [X9]
	0x03466A58 STP X31, X31, [X31 + 0x8]
	0x03466A5C ADD X0, X31, 0x8
	0x03466A60 BL 0x242E368
	0x03466A64 ADRP X8, 0xCC9000
	0x03466A68 LDR X8, [X8 + 0x7D0]
	0x03466A6C LDR X0, [X8]
	0x03466A70 BL 0x1C16F10
	0x03466A74 LDP X3, X4, [X31 + 0x8]
	0x03466A78 MOV X24, X0
	0x03466A7C MOV X1, X20
	0x03466A80 MOV X2, X23
	0x03466A84 BL 0x3465404
	0x03466A88 CBZ X21, 0x3466B84
	0x03466A8C ADRP X8, 0xCC9000
	0x03466A90 LDR X8, [X8 + 0x850]
	0x03466A94 LDR X3, [X8]
	0x03466A98 MOV X0, X21
	0x03466A9C MOV X1, X22
	0x03466AA0 MOV X2, X24
	0x03466AA4 BL 0x2243230
	0x03466AA8 CBZ X0, 0x3466B88
	0x03466AAC ADRP X8, 0xCCA000
	0x03466AB0 LDR X8, [X8 + 0x420]
	0x03466AB4 LDR X1, [X8]
	0x03466AB8 BL 0x269F5D0
	0x03466ABC ADRP X8, 0xCCA000
	0x03466AC0 LDR X8, [X8 + 0x418]
	0x03466AC4 STR X0, [X31 + 0x18]
	0x03466AC8 LDR X1, [X8]
	0x03466ACC ADD X0, X31, 0x18
	0x03466AD0 BL 0x2677430
	0x03466AD4 TBZ X0, 0x0, 0x3466B2C
	0x03466AD8 ADRP X8, 0xCCA000
	0x03466ADC LDR X8, [X8 + 0x410]
	0x03466AE0 ADD X0, X31, 0x18
	0x03466AE4 LDR X1, [X8]
	0x03466AE8 BL 0x2677474
	0x03466AEC MOVN W8, 0x1
	0x03466AF0 STR W8, [X19]
	0x03466AF4 STR X31, [X19 + 0x50]
	0x03466AF8 MOV X20, X0
	0x03466AFC LDR X0, [X25]
	0x03466B00 ADRP X21, 0xCC9000
	0x03466B04 ADD X19, X19, 0x8
	0x03466B08 LDR W8, [X0 + 0xE0]
	0x03466B0C LDR X21, [X21 + 0x2C0]
	0x03466B10 CBNZ W8, 0x3466B18
	0x03466B14 BL 0x1C16DFC
	0x03466B18 LDR X2, [X21]
	0x03466B1C MOV X0, X19
	0x03466B20 MOV X1, X20
	0x03466B24 BL 0x26322B0
	0x03466B28 B 0x3466B68
	0x03466B2C MOVZ W8, 0x1
	0x03466B30 STR W8, [X19]
	0x03466B34 LDR X8, [X31 + 0x18]
	0x03466B38 STR X8, [X19 + 0x60]
	0x03466B3C LDR X0, [X25]
	0x03466B40 LDR W8, [X0 + 0xE0]
	0x03466B44 CBNZ W8, 0x3466B4C
	0x03466B48 BL 0x1C16DFC
	0x03466B4C ADRP X8, 0xCCA000
	0x03466B50 LDR X8, [X8 + 0x400]
	0x03466B54 ADD X0, X19, 0x8
	0x03466B58 LDR X3, [X8]
	0x03466B5C ADD X1, X31, 0x18
	0x03466B60 MOV X2, X19
	0x03466B64 BL 0x1FBD378

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF78000
	011 Move W8, [X20+1983]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCCB000
	018 Move X0, [X0+904]
	019 Call 0x1C17CF4
	020 Move X0, 0xCCB000
	021 Move X0, [X0+912]
	022 Call 0x1C17CF4
	023 Move X0, 0xC91000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC90000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8F000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC96000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8F000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCCA000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCA000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8F000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC8F000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8F000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCCB000
	054 Move X0, [X0+920]
	055 Call 0x1C17CF4
	056 Move X0, 0xCCB000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1983], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC91000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xC8F000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCCB000
	091 Move X8, [X8+928]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass99_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Move X8, [X19+64]
	109 Move [X21+48], X8
	110 Compare X20, 0
	111 JumpIfEqual {357}
	112 Move W8, [X20+16]
	113 Compare W8, 0
	114 JumpIfEqual {252}
	115 Move X8, [X19+80]
	116 Compare X8, 0
	117 JumpIfEqual {358}
	118 Move X21, [X8+24]
	119 Compare X21, 0
	120 JumpIfEqual {359}
	121 Move X23, 0xC8F000
	122 Move X8, [X21]
	123 Move X23, [X23+2072]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X23]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 7
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 7
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X31
	146 Call String.IsNullOrEmpty, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {250}
	151 Move X8, [X19+80]
	152 Compare X8, 0
	153 JumpIfEqual {360}
	154 Move X9, 0xC8F000
	155 Move X9, [X9+2544]
	156 Move X21, [X8+24]
	157 Move X0, [X9]
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X31
	163 Call DateTime.get_UtcNow
	164 Move X22, 0xC90000
	165 Move X22, [X22+2576]
	166 Move X8, X0
	167 Move [X31+40], X8
	168 Move X0, [X22]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X22]
	174 Move X8, [X0+184]
	175 Move X1, [X8]
	176 Add X0, X31, 40
	177 Move X2, X31
	178 Call DateTime.Add, X0, X1
	179 Compare X21, 0
	180 JumpIfEqual {361}
	181 Move X8, [X21]
	182 Move X1, [X23]
	183 Move X22, X0
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 11
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 11
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X2, [X0+8]
	202 Move X0, X21
	203 Move X1, X22
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {250}
	209 Move X8, [X19+80]
	210 Compare X8, 0
	211 JumpIfEqual {362}
	212 Move X1, [X8+24]
	213 Move X3, [X19+72]
	214 Move X4, [X8+48]
	215 Move X0, X20
	216 Move X2, X31
	217 Move X5, X31
	218 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	219 Compare X0, 0
	220 JumpIfEqual {363}
	221 Move X8, 0xC8F000
	222 Move X8, [X8+2112]
	223 Move X1, [X8]
	224 Call Task`1<Object>.GetAwaiter, X0
	225 Move X8, 0xC8F000
	226 Move X8, [X8+2104]
	227 Move [X31+32], X0
	228 Move X1, [X8]
	229 Add X0, X31, 32
	230 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {85}
	235 Move [X19], W31
	236 Move X8, [X31+32]
	237 Move [X19+88], X8
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0xCCB000
	244 Move X8, [X8+904]
	245 Add X0, X19, 8
	246 Move X3, [X8]
	247 Add X1, X31, 32
	248 Move X2, X19
	249 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	250 Compare X20, 0
	251 JumpIfEqual {355}
	252 Move X8, 0xC96000
	253 Move X8, [X8+2072]
	254 Move X21, [X20+88]
	255 Move X23, [X19+80]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X8, 0xCCB000
	259 Move X8, [X8+920]
	260 Move X22, X0
	261 Move X2, [X8]
	262 Move X1, X23
	263 Move X3, X31
	264 Call Func`1<Object>..ctor, X0, X1, X2
	265 Move X8, [X19+80]
	266 Compare X8, 0
	267 JumpIfEqual {352}
	268 Move X9, 0xCCA000
	269 Move X23, [X19+72]
	270 Move X9, [X9+1992]
	271 Compare X23, 0
	272 JumpIfNotEqual {274}
	273 Move X23, [X20+24]
	274 Move X20, [X8+24]
	275 Move X1, [X8+48]
	276 Move X2, [X9]
	277 Move [X31+8], X31
	278 Move [X31+16], X31
	279 Add X0, X31, 8
	280 Call Nullable`1<CancellationToken>..ctor, X0, X1
	281 Move X8, 0xCCA000
	282 Move X8, [X8+2000]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X3, [X31+8]
	286 Move X4, [X31+16]
	287 Move X24, X0
	288 Move X1, X20
	289 Move X2, X23
	290 Call RetryHistory..ctor, X0, X1, X2, X3
	291 Compare X21, 0
	292 JumpIfEqual {353}
	293 Move X0, X21
	294 Move X1, X22
	295 Move X2, X24
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+80], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+96], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCCB000
	336 Move X8, [X8+912]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC8E000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+80], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC91000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA4F000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03466C40 LDR X0, [X0 + 0x7D0]
	0x03466C44 BL 0x1C16D08
	0x03466C48 LDR X8, [X20]
	0x03466C4C LDR X1, [X8]
	0x03466C50 BL 0x1C17270
	0x03466C54 TBZ X0, 0x0, 0x3466CA4
	0x03466C58 LDR X20, [X20]
	0x03466C5C BL 0x3EB1AE0
	0x03466C60 MOVN W8, 0x1
	0x03466C64 STR X31, [X19 + 0x50]
	0x03466C68 STR W8, [X19], #0x8
	0x03466C6C ADRP X0, 0xCC8000
	0x03466C70 LDR X0, [X0 + 0x668]
	0x03466C74 BL 0x1C16D08
	0x03466C78 LDR W8, [X0 + 0xE0]
	0x03466C7C CBNZ W8, 0x3466C84
	0x03466C80 BL 0x1C16DFC
	0x03466C84 ADRP X0, 0xCC9000
	0x03466C88 LDR X0, [X0 + 0x300]
	0x03466C8C BL 0x1C16D08
	0x03466C90 MOV X2, X0
	0x03466C94 MOV X0, X19
	0x03466C98 MOV X1, X20
	0x03466C9C BL 0x26324C8
	0x03466CA0 B 0x3466B68
	0x03466CA4 MOVZ W0, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF78000
	007 Move X22, 0xC91000
	008 Move W8, [X21+1984]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC91000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1984], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

