Type: Nakama.Console.ApiStorageObject

Method: System.String get_Collection()

Disassembly:
	0x0349F884 LDR X8, [X8 + 0xB18]
	0x0349F888 LDR X0, [X8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Collection(System.String value)

Disassembly:
	0x0349F88C BL 0x1C16F10
	0x0349F890 ADRP X8, 0xC92000

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x0349F894 LDR X8, [X8 + 0xB10]
	0x0349F898 MOV W1, W31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0349F89C MOV X19, X0
	0x0349F8A0 LDR X2, [X8]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Key()

Disassembly:
	0x0349F8A4 BL 0x301B830
	0x0349F8A8 MOV X0, X19

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Key(System.String value)

Disassembly:
	0x0349F8AC LDP X20, X19, [X31 + 0x10]
	0x0349F8B0 LDR X30, [X31], #0x20

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_PermissionRead()

Disassembly:
	0x0349F8B4 RET
	0x0349F8B8 LDR X0, [X0 + 0x38]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_PermissionRead(System.Int32 value)

Disassembly:
	0x0349F8BC RET
	0x0349F8C0 STR X1, [X0 + 0x38]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Int32 get_PermissionWrite()

Disassembly:
	0x0349F8C4 RET
	0x0349F8C8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_PermissionWrite(System.Int32 value)

Disassembly:
	0x0349F8CC STP X20, X19, [X31 + 0x10]
	0x0349F8D0 ADRP X20, 0xF3E000

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x0349F8D4 LDRB W8, [X20 + 0x9BB]
	0x0349F8D8 MOV X19, X0

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x0349F8DC TBNZ X8, 0x0, 0x349F900
	0x0349F8E0 ADRP X0, 0xC92000

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_UserId()

Disassembly:
	0x0349F8E4 LDR X0, [X0 + 0xB20]
	0x0349F8E8 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_UserId(System.String value)

Disassembly:
	0x0349F8EC ADRP X0, 0xC92000
	0x0349F8F0 LDR X0, [X0 + 0xB28]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_Value()

Disassembly:
	0x0349F8F4 BL 0x1C16CF4
	0x0349F8F8 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x0349F8FC STRB W8, [X20 + 0x9BB]
	0x0349F900 LDR X19, [X19 + 0x40]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String get_Version()

Disassembly:
	0x0349F904 CBNZ X19, 0x349F930
	0x0349F908 ADRP X8, 0xC92000

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_Version(System.String value)

Disassembly:
	0x0349F90C LDR X8, [X8 + 0xB28]
	0x0349F910 LDR X0, [X8]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0349F914 BL 0x1C16F10
	0x0349F918 ADRP X8, 0xC92000
	0x0349F91C LDR X8, [X8 + 0xB20]
	0x0349F920 MOV W1, W31
	0x0349F924 MOV X19, X0
	0x0349F928 LDR X2, [X8]
	0x0349F92C BL 0x301B830
	0x0349F930 MOV X0, X19
	0x0349F934 LDP X20, X19, [X31 + 0x10]
	0x0349F938 LDR X30, [X31], #0x20
	0x0349F93C RET
	0x0349F940 LDR X0, [X0 + 0x40]
	0x0349F944 RET
	0x0349F948 STR X1, [X0 + 0x40]
	0x0349F94C RET
	0x0349F950 STR X30, [X31 - 0x20]!
	0x0349F954 STP X20, X19, [X31 + 0x10]
	0x0349F958 ADRP X20, 0xF3E000
	0x0349F95C LDRB W8, [X20 + 0x9BC]
	0x0349F960 MOV X19, X0
	0x0349F964 TBNZ X8, 0x0, 0x349F988
	0x0349F968 ADRP X0, 0xC92000
	0x0349F96C LDR X0, [X0 + 0xB30]
	0x0349F970 BL 0x1C16CF4
	0x0349F974 ADRP X0, 0xC92000
	0x0349F978 LDR X0, [X0 + 0xB38]
	0x0349F97C BL 0x1C16CF4
	0x0349F980 MOVZ W8, 0x1
	0x0349F984 STRB W8, [X20 + 0x9BC]
	0x0349F988 LDR X19, [X19 + 0x48]
	0x0349F98C CBNZ X19, 0x349F9B8
	0x0349F990 ADRP X8, 0xC92000
	0x0349F994 LDR X8, [X8 + 0xB38]
	0x0349F998 LDR X0, [X8]
	0x0349F99C BL 0x1C16F10
	0x0349F9A0 ADRP X8, 0xC92000
	0x0349F9A4 LDR X8, [X8 + 0xB30]
	0x0349F9A8 MOV W1, W31
	0x0349F9AC MOV X19, X0
	0x0349F9B0 LDR X2, [X8]
	0x0349F9B4 BL 0x301B830
	0x0349F9B8 MOV X0, X19
	0x0349F9BC LDP X20, X19, [X31 + 0x10]
	0x0349F9C0 LDR X30, [X31], #0x20
	0x0349F9C4 RET
	0x0349F9C8 LDR X0, [X0 + 0x48]
	0x0349F9CC RET
	0x0349F9D0 STR X1, [X0 + 0x48]
	0x0349F9D4 RET
	0x0349F9D8 STP X29, X30, [X31 - 0x60]!
	0x0349F9DC STP X28, X27, [X31 + 0x10]
	0x0349F9E0 STP X26, X25, [X31 + 0x20]
	0x0349F9E4 STP X24, X23, [X31 + 0x30]
	0x0349F9E8 STP X22, X21, [X31 + 0x40]
	0x0349F9EC STP X20, X19, [X31 + 0x50]
	0x0349F9F0 ADRP X20, 0xF3E000
	0x0349F9F4 ADRP X21, 0xC54000
	0x0349F9F8 ADRP X22, 0xC54000
	0x0349F9FC LDRB W8, [X20 + 0x9BD]
	0x0349FA00 LDR X21, [X21 + 0x988]
	0x0349FA04 LDR X22, [X22 + 0x9D0]
	0x0349FA08 MOV X19, X0
	0x0349FA0C TBNZ X8, 0x0, 0x349FAFC
	0x0349FA10 ADRP X0, 0xC54000
	0x0349FA14 LDR X0, [X0 + 0x9D0]
	0x0349FA18 BL 0x1C16CF4
	0x0349FA1C ADRP X0, 0xC92000
	0x0349FA20 LDR X0, [X0 + 0xB40]
	0x0349FA24 BL 0x1C16CF4
	0x0349FA28 ADRP X0, 0xC92000
	0x0349FA2C LDR X0, [X0 + 0xAC0]
	0x0349FA30 BL 0x1C16CF4
	0x0349FA34 ADRP X0, 0xC92000
	0x0349FA38 LDR X0, [X0 + 0xB48]
	0x0349FA3C BL 0x1C16CF4
	0x0349FA40 ADRP X0, 0xC92000
	0x0349FA44 LDR X0, [X0 + 0xB50]
	0x0349FA48 BL 0x1C16CF4
	0x0349FA4C ADRP X0, 0xC92000
	0x0349FA50 LDR X0, [X0 + 0xB58]
	0x0349FA54 BL 0x1C16CF4
	0x0349FA58 ADRP X0, 0xC92000
	0x0349FA5C LDR X0, [X0 + 0xB60]
	0x0349FA60 BL 0x1C16CF4
	0x0349FA64 ADRP X0, 0xC92000
	0x0349FA68 LDR X0, [X0 + 0xB68]
	0x0349FA6C BL 0x1C16CF4
	0x0349FA70 ADRP X0, 0xC8E000
	0x0349FA74 LDR X0, [X0 + 0xE58]
	0x0349FA78 BL 0x1C16CF4
	0x0349FA7C ADRP X0, 0xC92000
	0x0349FA80 LDR X0, [X0 + 0xB70]
	0x0349FA84 BL 0x1C16CF4
	0x0349FA88 ADRP X0, 0xC8F000
	0x0349FA8C LDR X0, [X0 + 0x28]
	0x0349FA90 BL 0x1C16CF4
	0x0349FA94 ADRP X0, 0xC54000
	0x0349FA98 LDR X0, [X0 + 0x838]
	0x0349FA9C BL 0x1C16CF4
	0x0349FAA0 ADRP X0, 0xC92000
	0x0349FAA4 LDR X0, [X0 + 0xB78]
	0x0349FAA8 BL 0x1C16CF4
	0x0349FAAC ADRP X0, 0xC8E000
	0x0349FAB0 LDR X0, [X0 + 0xD50]
	0x0349FAB4 BL 0x1C16CF4
	0x0349FAB8 ADRP X0, 0xC8E000
	0x0349FABC LDR X0, [X0 + 0xF18]
	0x0349FAC0 BL 0x1C16CF4
	0x0349FAC4 ADRP X0, 0xC8E000
	0x0349FAC8 LDR X0, [X0 + 0xFA0]
	0x0349FACC BL 0x1C16CF4
	0x0349FAD0 ADRP X0, 0xC8E000
	0x0349FAD4 LDR X0, [X0 + 0xEE8]
	0x0349FAD8 BL 0x1C16CF4
	0x0349FADC ADRP X0, 0xC54000
	0x0349FAE0 LDR X0, [X0 + 0x988]
	0x0349FAE4 BL 0x1C16CF4
	0x0349FAE8 ADRP X0, 0xC8F000
	0x0349FAEC LDR X0, [X0 + 0xB8]
	0x0349FAF0 BL 0x1C16CF4
	0x0349FAF4 MOVZ W8, 0x1
	0x0349FAF8 STRB W8, [X20 + 0x9BD]
	0x0349FAFC LDR X0, [X22]
	0x0349FB00 LDR X21, [X21]
	0x0349FB04 MOVZ W1, 0x4
	0x0349FB08 BL 0x1C16D6C
	0x0349FB0C CBZ X0, 0x349FE00
	0x0349FB10 MOV X20, X0
	0x0349FB14 CBZ X21, 0x349FB2C
	0x0349FB18 LDR X8, [X20]
	0x0349FB1C MOV X0, X21
	0x0349FB20 LDR X1, [X8 + 0x40]
	0x0349FB24 BL 0x1C16E00
	0x0349FB28 CBZ X0, 0x349FDF4
	0x0349FB2C LDR W8, [X20 + 0x18]
	0x0349FB30 CBZ W8, 0x349FDF0
	0x0349FB34 ADRP X22, 0xC8E000
	0x0349FB38 LDR X22, [X22 + 0xFA0]
	0x0349FB3C STR X21, [X20 + 0x20]
	0x0349FB40 LDR X0, [X22]
	0x0349FB44 CBZ X0, 0x349FB5C
	0x0349FB48 LDR X8, [X20]
	0x0349FB4C LDR X1, [X8 + 0x40]
	0x0349FB50 BL 0x1C16E00
	0x0349FB54 CBZ X0, 0x349FDF4
	0x0349FB58 LDR W8, [X20 + 0x18]
	0x0349FB5C CMP W8, 0x1
	0x0349FB60 B.LS 0x349FDF0
	0x0349FB64 LDR X9, [X22]
	0x0349FB68 STR X9, [X20 + 0x28]
	0x0349FB6C LDR X21, [X19 + 0x10]
	0x0349FB70 CBZ X21, 0x349FB8C
	0x0349FB74 LDR X8, [X20]
	0x0349FB78 MOV X0, X21
	0x0349FB7C LDR X1, [X8 + 0x40]
	0x0349FB80 BL 0x1C16E00
	0x0349FB84 CBZ X0, 0x349FDF4
	0x0349FB88 LDR W8, [X20 + 0x18]
	0x0349FB8C CMP W8, 0x2
	0x0349FB90 B.LS 0x349FDF0
	0x0349FB94 ADRP X22, 0xC54000
	0x0349FB98 LDR X22, [X22 + 0x838]
	0x0349FB9C STR X21, [X20 + 0x30]
	0x0349FBA0 LDR X0, [X22]
	0x0349FBA4 CBZ X0, 0x349FBBC
	0x0349FBA8 LDR X8, [X20]
	0x0349FBAC LDR X1, [X8 + 0x40]
	0x0349FBB0 BL 0x1C16E00
	0x0349FBB4 CBZ X0, 0x349FDF4
	0x0349FBB8 LDR W8, [X20 + 0x18]
	0x0349FBBC CMP W8, 0x3
	0x0349FBC0 B.LS 0x349FDF0
	0x0349FBC4 ADRP X26, 0xC92000
	0x0349FBC8 ADRP X27, 0xC8E000
	0x0349FBCC ADRP X21, 0xC8E000
	0x0349FBD0 ADRP X28, 0xC92000
	0x0349FBD4 ADRP X29, 0xC8E000
	0x0349FBD8 ADRP X25, 0xC92000
	0x0349FBDC ADRP X24, 0xC92000
	0x0349FBE0 ADRP X23, 0xC92000
	0x0349FBE4 LDR X26, [X26 + 0xAC0]
	0x0349FBE8 LDR X27, [X27 + 0xEE8]
	0x0349FBEC LDR X21, [X21 + 0xD50]
	0x0349FBF0 LDR X28, [X28 + 0xB48]
	0x0349FBF4 LDR X29, [X29 + 0xF18]
	0x0349FBF8 LDR X25, [X25 + 0xB50]
	0x0349FBFC LDR X24, [X24 + 0xB70]
	0x0349FC00 LDR X23, [X23 + 0xB40]
	0x0349FC04 LDR X8, [X22]
	0x0349FC08 MOV X0, X20
	0x0349FC0C MOV X1, X31
	0x0349FC10 STR X8, [X20 + 0x38]
	0x0349FC14 BL 0x3227578
	0x0349FC18 MOV X20, X0
	0x0349FC1C MOV X0, X19
	0x0349FC20 BL 0x349F620
	0x0349FC24 LDR X8, [X22]
	0x0349FC28 LDR X2, [X26]
	0x0349FC2C MOV X1, X0
	0x0349FC30 MOV X0, X8
	0x0349FC34 BL 0x226B7E8
	0x0349FC38 LDR X1, [X27]
	0x0349FC3C LDR X3, [X21]
	0x0349FC40 MOV X2, X0
	0x0349FC44 MOV X0, X20
	0x0349FC48 MOV X4, X31
	0x0349FC4C BL 0x32277C4
	0x0349FC50 MOV X20, X0
	0x0349FC54 MOV X0, X19
	0x0349FC58 BL 0x349F6A8
	0x0349FC5C LDR X8, [X22]
	0x0349FC60 LDR X2, [X28]
	0x0349FC64 MOV X1, X0
	0x0349FC68 MOV X0, X8
	0x0349FC6C BL 0x226B7E8
	0x0349FC70 LDR X1, [X29]
	0x0349FC74 LDR X3, [X21]
	0x0349FC78 MOV X2, X0
	0x0349FC7C MOV X0, X20
	0x0349FC80 MOV X4, X31
	0x0349FC84 BL 0x32277C4
	0x0349FC88 MOV X20, X0
	0x0349FC8C MOV X0, X19
	0x0349FC90 BL 0x349F730
	0x0349FC94 LDR X8, [X22]
	0x0349FC98 LDR X2, [X25]
	0x0349FC9C MOV X1, X0
	0x0349FCA0 MOV X0, X8
	0x0349FCA4 BL 0x226B7E8
	0x0349FCA8 LDR X1, [X24]
	0x0349FCAC LDR X3, [X21]
	0x0349FCB0 MOV X2, X0
	0x0349FCB4 MOV X0, X20
	0x0349FCB8 MOV X4, X31
	0x0349FCBC BL 0x32277C4
	0x0349FCC0 MOV X20, X0
	0x0349FCC4 MOV X0, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xF3F000
	011 Move X26, 0xC55000
	012 Move X24, 0xC8F000
	013 Move X22, 0xC55000
	014 Move X21, 0xC8F000
	015 Move X20, 0xC8F000
	016 Move X23, 0xC55000
	017 Move X26, [X26+2440]
	018 Move W8, [X25+2481]
	019 Move X24, [X24+3704]
	020 Move X22, [X22+2104]
	021 Move X21, [X21+3552]
	022 Move X20, [X20+3712]
	023 Move X23, [X23+2512]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {70}
	029 Move X0, 0xC55000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0xC55000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0xC82000
	036 Move X0, [X0+3000]
	037 Call 0x1C17CF4
	038 Move X0, 0xC8F000
	039 Move X0, [X0+3712]
	040 Call 0x1C17CF4
	041 Move X0, 0xC90000
	042 Move X0, [X0+112]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8F000
	045 Move X0, [X0+3552]
	046 Call 0x1C17CF4
	047 Move X0, 0xC55000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8F000
	051 Move X0, [X0+3560]
	052 Call 0x1C17CF4
	053 Move X0, 0xC90000
	054 Move X0, [X0+120]
	055 Call 0x1C17CF4
	056 Move X0, 0xC90000
	057 Move X0, [X0+48]
	058 Call 0x1C17CF4
	059 Move X0, 0xC8F000
	060 Move X0, [X0+3720]
	061 Call 0x1C17CF4
	062 Move X0, 0xC55000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move X0, 0xC8F000
	066 Move X0, [X0+3704]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X25+2481], W8
	070 Move X0, [X26]
	071 Move X2, [X19+16]
	072 Move X1, [X24]
	073 Move X3, [X22]
	074 Move X4, X31
	075 Call String.Concat, X0, X1, X2, X3
	076 Move X2, [X19+24]
	077 Move X1, [X21]
	078 Move X3, [X22]
	079 Move X4, X31
	080 Call String.Concat, X0, X1, X2, X3
	081 Move X2, [X19+32]
	082 Move X1, [X20]
	083 Move X3, [X22]
	084 Move X4, X31
	085 Call String.Concat, X0, X1, X2, X3
	086 Move X8, [X23]
	087 Move X21, X0
	088 Move W1, 4
	089 Move X0, X8
	090 Call 0x1C17D6C
	091 Compare X0, 0
	092 JumpIfEqual {262}
	093 Move X20, X0
	094 Compare X21, 0
	095 JumpIfEqual {102}
	096 Move X8, [X20]
	097 Move X0, X21
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {259}
	102 Move W8, [X20+24]
	103 Compare W8, 0
	104 JumpIfEqual {258}
	105 Move X24, 0xC90000
	106 Move X24, [X24+120]
	107 Move [X20+32], X21
	108 Move X0, [X24]
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {259}
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, [X24]
	119 Move X24, 0xC55000
	120 Move X24, [X24+1880]
	121 Add X1, X31, 12
	122 Move [X20+40], X8
	123 Move W8, [X19+40]
	124 Move X0, [X24]
	125 Move [X31+12], W8
	126 Call 0x1C17E04
	127 Move X21, X0
	128 Compare X0, 0
	129 JumpIfEqual {136}
	130 Move X8, [X20]
	131 Move X0, X21
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {259}
	136 Move W8, [X20+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move [X20+48], X21
	139 Move X0, [X22]
	140 Compare X0, 0
	141 JumpIfEqual {148}
	142 Move X8, [X20]
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {259}
	147 Move W8, [X20+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, [X22]
	150 Move X0, X20
	151 Move X1, X31
	152 Move [X20+56], X8
	153 Call String.Concat, X0
	154 Move X8, [X23]
	155 Move X21, X0
	156 Move W1, 4
	157 Move X0, X8
	158 Call 0x1C17D6C
	159 Compare X0, 0
	160 JumpIfEqual {262}
	161 Move X20, X0
	162 Compare X21, 0
	163 JumpIfEqual {170}
	164 Move X8, [X20]
	165 Move X0, X21
	166 Move X1, [X8+64]
	167 Call 0x1C17E00
	168 Compare X0, 0
	169 JumpIfEqual {259}
	170 Move W8, [X20+24]
	171 Compare W8, 0
	172 JumpIfEqual {258}
	173 Move X23, 0xC90000
	174 Move X23, [X23+112]
	175 Move [X20+32], X21
	176 Move X0, [X23]
	177 Compare X0, 0
	178 JumpIfEqual {185}
	179 Move X8, [X20]
	180 Move X1, [X8+64]
	181 Call 0x1C17E00
	182 Compare X0, 0
	183 JumpIfEqual {259}
	184 Move W8, [X20+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, [X23]
	187 Add X1, X31, 8
	188 Move [X20+40], X8
	189 Move W8, [X19+44]
	190 Move X0, [X24]
	191 Move [X31+8], W8
	192 Call 0x1C17E04
	193 Move X21, X0
	194 Compare X0, 0
	195 JumpIfEqual {202}
	196 Move X8, [X20]
	197 Move X0, X21
	198 Move X1, [X8+64]
	199 Call 0x1C17E00
	200 Compare X0, 0
	201 JumpIfEqual {259}
	202 Move W8, [X20+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X20+48], X21
	205 Move X0, [X22]
	206 Compare X0, 0
	207 JumpIfEqual {214}
	208 Move X8, [X20]
	209 Move X1, [X8+64]
	210 Call 0x1C17E00
	211 Compare X0, 0
	212 JumpIfEqual {259}
	213 Move W8, [X20+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X21, 0xC8F000
	216 Move X21, [X21+3560]
	217 Move X8, [X22]
	218 Move X23, 0xC90000
	219 Move X24, 0xC82000
	220 Move X25, 0xC8F000
	221 Move X23, [X23+48]
	222 Move X24, [X24+3000]
	223 Move X25, [X25+3720]
	224 Move X0, X20
	225 Move X1, X31
	226 Move [X20+56], X8
	227 Call String.Concat, X0
	228 Move X2, [X19+48]
	229 Move X1, [X21]
	230 Move X3, [X22]
	231 Move X4, X31
	232 Call String.Concat, X0, X1, X2, X3
	233 Move X2, [X19+56]
	234 Move X1, [X23]
	235 Move X3, [X22]
	236 Move X4, X31
	237 Call String.Concat, X0, X1, X2, X3
	238 Move X2, [X19+64]
	239 Move X1, [X24]
	240 Move X3, [X22]
	241 Move X4, X31
	242 Call String.Concat, X0, X1, X2, X3
	243 Move X2, [X19+72]
	244 Move X1, [X25]
	245 Move X3, [X22]
	246 Move X4, X31
	247 Call String.Concat, X0, X1, X2, X3
	248 Move X20, [X31+64]
	249 Move X19, [X31+72]
	250 Move X22, [X31+48]
	251 Move X21, [X31+56]
	252 Move X24, [X31+32]
	253 Move X23, [X31+40]
	254 Move X26, [X31+16]
	255 Move X25, [X31+24]
	256 Move X30, [X31+80]
	257 Return X0
	258 Call 0x1C17F28
	259 Call 0x1C17F44
	260 Move X1, X31
	261 Call 0x1C17DEC
	262 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0349FCC8 BL 0x349F7B8
	0x0349FCCC LDR X8, [X22]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

