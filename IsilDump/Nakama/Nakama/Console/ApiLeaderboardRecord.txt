Type: Nakama.Console.ApiLeaderboardRecord

Method: System.String get_CreateTime()

Disassembly:
	0x0349EF9C BL 0x1C16CF4
	0x0349EFA0 ADRP X0, 0xC55000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0349EFA4 LDR X0, [X0 + 0x758]
	0x0349EFA8 BL 0x1C16CF4

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_ExpiryTime()

Disassembly:
	0x0349EFAC ADRP X0, 0xC55000
	0x0349EFB0 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_ExpiryTime(System.String value)

Disassembly:
	0x0349EFB4 BL 0x1C16CF4
	0x0349EFB8 ADRP X0, 0xC90000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_LeaderboardId()

Disassembly:
	0x0349EFBC LDR X0, [X0 + 0x168]
	0x0349EFC0 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_LeaderboardId(System.String value)

Disassembly:
	0x0349EFC4 ADRP X0, 0xC90000
	0x0349EFC8 LDR X0, [X0 + 0x180]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_MaxNumScore()

Disassembly:
	0x0349EFCC BL 0x1C16CF4
	0x0349EFD0 ADRP X0, 0xC8F000

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_MaxNumScore(System.Int32 value)

Disassembly:
	0x0349EFD4 LDR X0, [X0 + 0xD88]
	0x0349EFD8 BL 0x1C16CF4

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.String get_Metadata()

Disassembly:
	0x0349EFDC ADRP X0, 0xC90000
	0x0349EFE0 LDR X0, [X0 + 0x170]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Metadata(System.String value)

Disassembly:
	0x0349EFE4 BL 0x1C16CF4
	0x0349EFE8 ADRP X0, 0xC8F000

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Int32 get_NumScore()

Disassembly:
	0x0349EFEC LDR X0, [X0 + 0xCD8]
	0x0349EFF0 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_NumScore(System.Int32 value)

Disassembly:
	0x0349EFF4 ADRP X0, 0xC90000
	0x0349EFF8 LDR X0, [X0 + 0x188]

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.String get_OwnerId()

Disassembly:
	0x0349EFFC BL 0x1C16CF4
	0x0349F000 ADRP X0, 0xC8F000

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_OwnerId(System.String value)

Disassembly:
	0x0349F004 LDR X0, [X0 + 0x190]
	0x0349F008 BL 0x1C16CF4

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String get_Rank()

Disassembly:
	0x0349F00C ADRP X0, 0xC8E000
	0x0349F010 LDR X0, [X0 + 0xDE0]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_Rank(System.String value)

Disassembly:
	0x0349F014 BL 0x1C16CF4
	0x0349F018 ADRP X0, 0xC54000

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_Score()

Disassembly:
	0x0349F01C LDR X0, [X0 + 0x838]
	0x0349F020 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Score(System.String value)

Disassembly:
	0x0349F024 ADRP X0, 0xC8E000
	0x0349F028 LDR X0, [X0 + 0xD00]

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_Subscore()

Disassembly:
	0x0349F02C BL 0x1C16CF4
	0x0349F030 ADRP X0, 0xC8E000

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_Subscore(System.String value)

Disassembly:
	0x0349F034 LDR X0, [X0 + 0xDE8]
	0x0349F038 BL 0x1C16CF4

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x0349F03C ADRP X0, 0xC8F000
	0x0349F040 LDR X0, [X0 + 0x198]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x0349F044 BL 0x1C16CF4
	0x0349F048 ADRP X0, 0xC8E000

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_Username()

Disassembly:
	0x0349F04C LDR X0, [X0 + 0xCC8]
	0x0349F050 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_Username(System.String value)

Disassembly:
	0x0349F054 ADRP X0, 0xC8F000
	0x0349F058 LDR X0, [X0 + 0x1A0]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0349F05C BL 0x1C16CF4
	0x0349F060 ADRP X0, 0xC8F000
	0x0349F064 LDR X0, [X0 + 0x160]
	0x0349F068 BL 0x1C16CF4
	0x0349F06C ADRP X0, 0xC54000
	0x0349F070 LDR X0, [X0 + 0x988]
	0x0349F074 BL 0x1C16CF4
	0x0349F078 ADRP X0, 0xC8E000
	0x0349F07C LDR X0, [X0 + 0xEF8]
	0x0349F080 BL 0x1C16CF4
	0x0349F084 ADRP X0, 0xC8F000
	0x0349F088 LDR X0, [X0 + 0x1A8]
	0x0349F08C BL 0x1C16CF4
	0x0349F090 ADRP X0, 0xC8E000
	0x0349F094 LDR X0, [X0 + 0xE30]
	0x0349F098 BL 0x1C16CF4
	0x0349F09C MOVZ W8, 0x1
	0x0349F0A0 STRB W8, [X25 + 0x9B3]
	0x0349F0A4 LDR X0, [X26]
	0x0349F0A8 LDR X2, [X19 + 0x10]
	0x0349F0AC LDR X1, [X24]
	0x0349F0B0 LDR X3, [X22]
	0x0349F0B4 MOV X4, X31
	0x0349F0B8 BL 0x32277C4
	0x0349F0BC LDR X2, [X19 + 0x18]
	0x0349F0C0 LDR X1, [X21]
	0x0349F0C4 LDR X3, [X22]
	0x0349F0C8 MOV X4, X31
	0x0349F0CC BL 0x32277C4
	0x0349F0D0 LDR X2, [X19 + 0x20]
	0x0349F0D4 LDR X1, [X20]
	0x0349F0D8 LDR X3, [X22]
	0x0349F0DC MOV X4, X31
	0x0349F0E0 BL 0x32277C4
	0x0349F0E4 LDR X8, [X23]
	0x0349F0E8 MOV X21, X0
	0x0349F0EC MOVZ W1, 0x4
	0x0349F0F0 MOV X0, X8
	0x0349F0F4 BL 0x1C16D6C
	0x0349F0F8 CBZ X0, 0x349F454
	0x0349F0FC MOV X20, X0
	0x0349F100 CBZ X21, 0x349F118
	0x0349F104 LDR X8, [X20]
	0x0349F108 MOV X0, X21
	0x0349F10C LDR X1, [X8 + 0x40]
	0x0349F110 BL 0x1C16E00
	0x0349F114 CBZ X0, 0x349F448
	0x0349F118 LDR W8, [X20 + 0x18]
	0x0349F11C CBZ W8, 0x349F444
	0x0349F120 ADRP X24, 0xC8E000
	0x0349F124 LDR X24, [X24 + 0xEF8]
	0x0349F128 STR X21, [X20 + 0x20]
	0x0349F12C LDR X0, [X24]
	0x0349F130 CBZ X0, 0x349F148
	0x0349F134 LDR X8, [X20]
	0x0349F138 LDR X1, [X8 + 0x40]
	0x0349F13C BL 0x1C16E00
	0x0349F140 CBZ X0, 0x349F448
	0x0349F144 LDR W8, [X20 + 0x18]
	0x0349F148 CMP W8, 0x1
	0x0349F14C B.LS 0x349F444
	0x0349F150 LDR X8, [X24]
	0x0349F154 ADRP X9, 0xC54000
	0x0349F158 LDR X9, [X9 + 0x758]
	0x0349F15C ADD X1, X31, 0xC
	0x0349F160 STR X8, [X20 + 0x28]
	0x0349F164 LDR W8, [X19 + 0x28]
	0x0349F168 LDR X0, [X9]
	0x0349F16C STR W8, [X31 + 0xC]
	0x0349F170 BL 0x1C16E04
	0x0349F174 MOV X21, X0
	0x0349F178 CBZ X0, 0x349F190
	0x0349F17C LDR X8, [X20]
	0x0349F180 MOV X0, X21
	0x0349F184 LDR X1, [X8 + 0x40]
	0x0349F188 BL 0x1C16E00
	0x0349F18C CBZ X0, 0x349F448
	0x0349F190 LDR W8, [X20 + 0x18]
	0x0349F194 CMP W8, 0x2
	0x0349F198 B.LS 0x349F444
	0x0349F19C STR X21, [X20 + 0x30]
	0x0349F1A0 LDR X0, [X22]
	0x0349F1A4 CBZ X0, 0x349F1BC
	0x0349F1A8 LDR X8, [X20]
	0x0349F1AC LDR X1, [X8 + 0x40]
	0x0349F1B0 BL 0x1C16E00
	0x0349F1B4 CBZ X0, 0x349F448
	0x0349F1B8 LDR W8, [X20 + 0x18]
	0x0349F1BC CMP W8, 0x3
	0x0349F1C0 B.LS 0x349F444
	0x0349F1C4 ADRP X26, 0xC8F000
	0x0349F1C8 ADRP X27, 0xC8F000
	0x0349F1CC ADRP X28, 0xC8F000
	0x0349F1D0 ADRP X29, 0xC8F000
	0x0349F1D4 ADRP X23, 0xC8E000
	0x0349F1D8 LDR X26, [X26 + 0x1A0]
	0x0349F1DC LDR X27, [X27 + 0x1A8]
	0x0349F1E0 LDR X28, [X28 + 0x180]
	0x0349F1E4 LDR X29, [X29 + 0x198]
	0x0349F1E8 LDR X23, [X23 + 0xD88]
	0x0349F1EC LDR X8, [X22]
	0x0349F1F0 ADRP X25, 0xC8E000
	0x0349F1F4 ADRP X24, 0xC8F000
	0x0349F1F8 ADRP X21, 0xC8E000
	0x0349F1FC LDR X25, [X25 + 0xCD8]
	0x0349F200 LDR X24, [X24 + 0x168]
	0x0349F204 LDR X21, [X21 + 0xD00]
	0x0349F208 MOV X0, X20
	0x0349F20C MOV X1, X31
	0x0349F210 STR X8, [X20 + 0x38]
	0x0349F214 BL 0x3227578
	0x0349F218 LDR X2, [X19 + 0x30]
	0x0349F21C LDR X1, [X26]
	0x0349F220 LDR X3, [X22]
	0x0349F224 MOV X4, X31
	0x0349F228 BL 0x32277C4
	0x0349F22C LDR X2, [X19 + 0x38]
	0x0349F230 LDR X1, [X27]
	0x0349F234 LDR X3, [X22]
	0x0349F238 MOV X4, X31
	0x0349F23C BL 0x32277C4
	0x0349F240 LDR X2, [X19 + 0x40]
	0x0349F244 LDR X1, [X28]
	0x0349F248 LDR X3, [X22]
	0x0349F24C MOV X4, X31
	0x0349F250 BL 0x32277C4
	0x0349F254 LDR X2, [X19 + 0x48]
	0x0349F258 LDR X1, [X29]
	0x0349F25C LDR X3, [X22]
	0x0349F260 MOV X4, X31
	0x0349F264 BL 0x32277C4
	0x0349F268 LDR X2, [X19 + 0x50]
	0x0349F26C LDR X1, [X23]
	0x0349F270 LDR X3, [X22]
	0x0349F274 MOV X4, X31
	0x0349F278 BL 0x32277C4
	0x0349F27C LDR X2, [X19 + 0x58]
	0x0349F280 LDR X1, [X25]
	0x0349F284 LDR X3, [X22]
	0x0349F288 MOV X4, X31
	0x0349F28C BL 0x32277C4
	0x0349F290 LDR X2, [X19 + 0x60]
	0x0349F294 LDR X1, [X24]
	0x0349F298 LDR X3, [X22]
	0x0349F29C MOV X4, X31
	0x0349F2A0 BL 0x32277C4
	0x0349F2A4 LDR X2, [X19 + 0x68]
	0x0349F2A8 LDR X1, [X21]
	0x0349F2AC LDR X3, [X22]
	0x0349F2B0 MOV X4, X31
	0x0349F2B4 BL 0x32277C4
	0x0349F2B8 ADRP X8, 0xC54000
	0x0349F2BC LDR X8, [X8 + 0x9D0]
	0x0349F2C0 MOV X21, X0
	0x0349F2C4 MOVZ W1, 0x4
	0x0349F2C8 LDR X8, [X8]
	0x0349F2CC MOV X0, X8
	0x0349F2D0 BL 0x1C16D6C
	0x0349F2D4 CBZ X0, 0x349F454
	0x0349F2D8 MOV X20, X0
	0x0349F2DC CBZ X21, 0x349F2F4
	0x0349F2E0 LDR X8, [X20]
	0x0349F2E4 MOV X0, X21
	0x0349F2E8 LDR X1, [X8 + 0x40]
	0x0349F2EC BL 0x1C16E00
	0x0349F2F0 CBZ X0, 0x349F448
	0x0349F2F4 LDR W8, [X20 + 0x18]
	0x0349F2F8 CBZ W8, 0x349F444
	0x0349F2FC ADRP X23, 0xC8F000
	0x0349F300 LDR X23, [X23 + 0x190]
	0x0349F304 STR X21, [X20 + 0x20]
	0x0349F308 LDR X0, [X23]
	0x0349F30C CBZ X0, 0x349F324
	0x0349F310 LDR X8, [X20]
	0x0349F314 LDR X1, [X8 + 0x40]
	0x0349F318 BL 0x1C16E00
	0x0349F31C CBZ X0, 0x349F448
	0x0349F320 LDR W8, [X20 + 0x18]
	0x0349F324 CMP W8, 0x1
	0x0349F328 B.LS 0x349F444
	0x0349F32C LDR X8, [X23]
	0x0349F330 ADRP X9, 0xC54000
	0x0349F334 LDR X9, [X9 + 0xB58]
	0x0349F338 ADD X1, X31, 0x8
	0x0349F33C STR X8, [X20 + 0x28]
	0x0349F340 LDRB W8, [X19 + 0x70]
	0x0349F344 LDR X0, [X9]
	0x0349F348 STRB W8, [X31 + 0x8]
	0x0349F34C BL 0x1C16E04
	0x0349F350 MOV X21, X0
	0x0349F354 CBZ X0, 0x349F36C
	0x0349F358 LDR X8, [X20]
	0x0349F35C MOV X0, X21
	0x0349F360 LDR X1, [X8 + 0x40]
	0x0349F364 BL 0x1C16E00
	0x0349F368 CBZ X0, 0x349F448
	0x0349F36C LDR W8, [X20 + 0x18]
	0x0349F370 CMP W8, 0x2
	0x0349F374 B.LS 0x349F444
	0x0349F378 STR X21, [X20 + 0x30]
	0x0349F37C LDR X0, [X22]
	0x0349F380 CBZ X0, 0x349F398
	0x0349F384 LDR X8, [X20]
	0x0349F388 LDR X1, [X8 + 0x40]
	0x0349F38C BL 0x1C16E00
	0x0349F390 CBZ X0, 0x349F448
	0x0349F394 LDR W8, [X20 + 0x18]
	0x0349F398 CMP W8, 0x3
	0x0349F39C B.LS 0x349F444
	0x0349F3A0 ADRP X21, 0xC8F000
	0x0349F3A4 LDR X21, [X21 + 0x188]
	0x0349F3A8 LDR X8, [X22]
	0x0349F3AC ADRP X23, 0xC8F000
	0x0349F3B0 ADRP X24, 0xC8E000
	0x0349F3B4 ADRP X25, 0xC8E000
	0x0349F3B8 LDR X23, [X23 + 0x170]
	0x0349F3BC LDR X24, [X24 + 0xDE8]
	0x0349F3C0 LDR X25, [X25 + 0xE30]
	0x0349F3C4 MOV X0, X20
	0x0349F3C8 MOV X1, X31
	0x0349F3CC STR X8, [X20 + 0x38]
	0x0349F3D0 BL 0x3227578
	0x0349F3D4 LDR X2, [X19 + 0x78]
	0x0349F3D8 LDR X1, [X21]
	0x0349F3DC LDR X3, [X22]
	0x0349F3E0 MOV X4, X31
	0x0349F3E4 BL 0x32277C4
	0x0349F3E8 LDR X2, [X19 + 0x80]
	0x0349F3EC LDR X1, [X23]
	0x0349F3F0 LDR X3, [X22]
	0x0349F3F4 MOV X4, X31
	0x0349F3F8 BL 0x32277C4
	0x0349F3FC LDR X2, [X19 + 0x88]
	0x0349F400 LDR X1, [X24]
	0x0349F404 LDR X3, [X22]
	0x0349F408 MOV X4, X31
	0x0349F40C BL 0x32277C4
	0x0349F410 LDR X2, [X19 + 0x90]
	0x0349F414 LDR X1, [X25]
	0x0349F418 LDR X3, [X22]
	0x0349F41C MOV X4, X31
	0x0349F420 BL 0x32277C4
	0x0349F424 LDP X20, X19, [X31 + 0x60]
	0x0349F428 LDP X22, X21, [X31 + 0x50]
	0x0349F42C LDP X24, X23, [X31 + 0x40]
	0x0349F430 LDP X26, X25, [X31 + 0x30]
	0x0349F434 LDP X28, X27, [X31 + 0x20]
	0x0349F438 LDP X29, X30, [X31 + 0x10]
	0x0349F43C ADD X31, X31, 0x70
	0x0349F440 RET
	0x0349F444 BL 0x1C16F28
	0x0349F448 BL 0x1C16F44
	0x0349F44C MOV X1, X31
	0x0349F450 BL 0x1C16DEC
	0x0349F454 BL 0x1C16F20
	0x0349F458 MOV X1, X31
	0x0349F45C B 0x33BDD8C
	0x0349F460 LDR X0, [X0 + 0x10]
	0x0349F464 RET
	0x0349F468 STR X1, [X0 + 0x10]
	0x0349F46C RET
	0x0349F470 STR X30, [X31 - 0x20]!
	0x0349F474 STP X20, X19, [X31 + 0x10]
	0x0349F478 ADRP X20, 0xF3E000
	0x0349F47C LDRB W8, [X20 + 0x9B4]
	0x0349F480 MOV X19, X0
	0x0349F484 TBNZ X8, 0x0, 0x349F4A8
	0x0349F488 ADRP X0, 0xC92000
	0x0349F48C LDR X0, [X0 + 0xAC8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, 0xF3F000
	013 Move X26, 0xC55000
	014 Move X24, 0xC8F000
	015 Move X22, 0xC55000
	016 Move X21, 0xC8F000
	017 Move X20, 0xC8F000
	018 Move X23, 0xC55000
	019 Move X26, [X26+2440]
	020 Move W8, [X25+2479]
	021 Move X24, [X24+3552]
	022 Move X22, [X22+2104]
	023 Move X21, [X21+3904]
	024 Move X20, [X20+3912]
	025 Move X23, [X23+2512]
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {81}
	031 Move X0, 0xC55000
	032 Move X0, [X0+1880]
	033 Call 0x1C17CF4
	034 Move X0, 0xC55000
	035 Move X0, [X0+2512]
	036 Call 0x1C17CF4
	037 Move X0, 0xC8F000
	038 Move X0, [X0+3912]
	039 Call 0x1C17CF4
	040 Move X0, 0xC8F000
	041 Move X0, [X0+3344]
	042 Call 0x1C17CF4
	043 Move X0, 0xC8F000
	044 Move X0, [X0+3352]
	045 Call 0x1C17CF4
	046 Move X0, 0xC8F000
	047 Move X0, [X0+3920]
	048 Call 0x1C17CF4
	049 Move X0, 0xC8F000
	050 Move X0, [X0+3552]
	051 Call 0x1C17CF4
	052 Move X0, 0xC55000
	053 Move X0, [X0+2104]
	054 Call 0x1C17CF4
	055 Move X0, 0xC8F000
	056 Move X0, [X0+3328]
	057 Call 0x1C17CF4
	058 Move X0, 0xC8F000
	059 Move X0, [X0+3560]
	060 Call 0x1C17CF4
	061 Move X0, 0xC8F000
	062 Move X0, [X0+3928]
	063 Call 0x1C17CF4
	064 Move X0, 0xC8F000
	065 Move X0, [X0+3904]
	066 Call 0x1C17CF4
	067 Move X0, 0xC55000
	068 Move X0, [X0+2440]
	069 Call 0x1C17CF4
	070 Move X0, 0xC8F000
	071 Move X0, [X0+3936]
	072 Call 0x1C17CF4
	073 Move X0, 0xC8F000
	074 Move X0, [X0+3944]
	075 Call 0x1C17CF4
	076 Move X0, 0xC8F000
	077 Move X0, [X0+3632]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X25+2479], W8
	081 Move X0, [X26]
	082 Move X2, [X19+16]
	083 Move X1, [X24]
	084 Move X3, [X22]
	085 Move X4, X31
	086 Call String.Concat, X0, X1, X2, X3
	087 Move X2, [X19+24]
	088 Move X1, [X21]
	089 Move X3, [X22]
	090 Move X4, X31
	091 Call String.Concat, X0, X1, X2, X3
	092 Move X2, [X19+32]
	093 Move X1, [X20]
	094 Move X3, [X22]
	095 Move X4, X31
	096 Call String.Concat, X0, X1, X2, X3
	097 Move X8, [X23]
	098 Move X21, X0
	099 Move W1, 4
	100 Move X0, X8
	101 Call 0x1C17D6C
	102 Compare X0, 0
	103 JumpIfEqual {296}
	104 Move X20, X0
	105 Compare X21, 0
	106 JumpIfEqual {113}
	107 Move X8, [X20]
	108 Move X0, X21
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {293}
	113 Move W8, [X20+24]
	114 Compare W8, 0
	115 JumpIfEqual {292}
	116 Move X24, 0xC8F000
	117 Move X24, [X24+3936]
	118 Move [X20+32], X21
	119 Move X0, [X24]
	120 Compare X0, 0
	121 JumpIfEqual {128}
	122 Move X8, [X20]
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {293}
	127 Move W8, [X20+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, [X24]
	130 Move X24, 0xC55000
	131 Move X24, [X24+1880]
	132 Add X1, X31, 12
	133 Move [X20+40], X8
	134 Move W8, [X19+40]
	135 Move X0, [X24]
	136 Move [X31+12], W8
	137 Call 0x1C17E04
	138 Move X21, X0
	139 Compare X0, 0
	140 JumpIfEqual {147}
	141 Move X8, [X20]
	142 Move X0, X21
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {293}
	147 Move W8, [X20+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X20+48], X21
	150 Move X0, [X22]
	151 Compare X0, 0
	152 JumpIfEqual {159}
	153 Move X8, [X20]
	154 Move X1, [X8+64]
	155 Call 0x1C17E00
	156 Compare X0, 0
	157 JumpIfEqual {293}
	158 Move W8, [X20+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X8, [X22]
	161 Move X21, 0xC8F000
	162 Move X21, [X21+3328]
	163 Move X0, X20
	164 Move X1, X31
	165 Move [X20+56], X8
	166 Call String.Concat, X0
	167 Move X2, [X19+48]
	168 Move X1, [X21]
	169 Move X3, [X22]
	170 Move X4, X31
	171 Call String.Concat, X0, X1, X2, X3
	172 Move X8, [X23]
	173 Move X21, X0
	174 Move W1, 4
	175 Move X0, X8
	176 Call 0x1C17D6C
	177 Compare X0, 0
	178 JumpIfEqual {296}
	179 Move X20, X0
	180 Compare X21, 0
	181 JumpIfEqual {188}
	182 Move X8, [X20]
	183 Move X0, X21
	184 Move X1, [X8+64]
	185 Call 0x1C17E00
	186 Compare X0, 0
	187 JumpIfEqual {293}
	188 Move W8, [X20+24]
	189 Compare W8, 0
	190 JumpIfEqual {292}
	191 Move X23, 0xC8F000
	192 Move X23, [X23+3928]
	193 Move [X20+32], X21
	194 Move X0, [X23]
	195 Compare X0, 0
	196 JumpIfEqual {203}
	197 Move X8, [X20]
	198 Move X1, [X8+64]
	199 Call 0x1C17E00
	200 Compare X0, 0
	201 JumpIfEqual {293}
	202 Move W8, [X20+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X8, [X23]
	205 Add X1, X31, 8
	206 Move [X20+40], X8
	207 Move W8, [X19+56]
	208 Move X0, [X24]
	209 Move [X31+8], W8
	210 Call 0x1C17E04
	211 Move X21, X0
	212 Compare X0, 0
	213 JumpIfEqual {220}
	214 Move X8, [X20]
	215 Move X0, X21
	216 Move X1, [X8+64]
	217 Call 0x1C17E00
	218 Compare X0, 0
	219 JumpIfEqual {293}
	220 Move W8, [X20+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move [X20+48], X21
	223 Move X0, [X22]
	224 Compare X0, 0
	225 JumpIfEqual {232}
	226 Move X8, [X20]
	227 Move X1, [X8+64]
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {293}
	231 Move W8, [X20+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X23, 0xC8F000
	234 Move X24, 0xC8F000
	235 Move X25, 0xC8F000
	236 Move X23, [X23+3944]
	237 Move X24, [X24+3920]
	238 Move X25, [X25+3344]
	239 Move X8, [X22]
	240 Move X26, 0xC8F000
	241 Move X27, 0xC8F000
	242 Move X21, 0xC8F000
	243 Move X26, [X26+3352]
	244 Move X27, [X27+3560]
	245 Move X21, [X21+3632]
	246 Move X0, X20
	247 Move X1, X31
	248 Move [X20+56], X8
	249 Call String.Concat, X0
	250 Move X2, [X19+64]
	251 Move X1, [X23]
	252 Move X3, [X22]
	253 Move X4, X31
	254 Call String.Concat, X0, X1, X2, X3
	255 Move X2, [X19+72]
	256 Move X1, [X24]
	257 Move X3, [X22]
	258 Move X4, X31
	259 Call String.Concat, X0, X1, X2, X3
	260 Move X2, [X19+80]
	261 Move X1, [X25]
	262 Move X3, [X22]
	263 Move X4, X31
	264 Call String.Concat, X0, X1, X2, X3
	265 Move X2, [X19+88]
	266 Move X1, [X26]
	267 Move X3, [X22]
	268 Move X4, X31
	269 Call String.Concat, X0, X1, X2, X3
	270 Move X2, [X19+96]
	271 Move X1, [X27]
	272 Move X3, [X22]
	273 Move X4, X31
	274 Call String.Concat, X0, X1, X2, X3
	275 Move X2, [X19+104]
	276 Move X1, [X21]
	277 Move X3, [X22]
	278 Move X4, X31
	279 Call String.Concat, X0, X1, X2, X3
	280 Move X20, [X31+80]
	281 Move X19, [X31+88]
	282 Move X22, [X31+64]
	283 Move X21, [X31+72]
	284 Move X24, [X31+48]
	285 Move X23, [X31+56]
	286 Move X26, [X31+32]
	287 Move X25, [X31+40]
	288 Move X30, [X31+16]
	289 Move X27, [X31+24]
	290 Add X31, X31, 96
	291 Return X0
	292 Call 0x1C17F28
	293 Call 0x1C17F44
	294 Move X1, X31
	295 Call 0x1C17DEC
	296 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0349F490 BL 0x1C16CF4
	0x0349F494 ADRP X0, 0xC92000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

