Type: Nakama.Console.ApiClient/<UnbanUserAsync>d__13

Method: System.Void MoveNext()

Disassembly:
	0x034AC078 MOV X1, X20
	0x034AC07C MOV X2, X31
	0x034AC080 BL 0x32C4908
	0x034AC084 B 0x34ABEF8
	0x034AC088 MOVZ W0, 0x8
	0x034AC08C BL 0x3EB1AF0
	0x034AC090 LDR X8, [X20]
	0x034AC094 STR X8, [X0]
	0x034AC098 ADRP X1, 0xA08000
	0x034AC09C ADD X1, X1, 0xE58
	0x034AC0A0 MOV X2, X31
	0x034AC0A4 BL 0x3EB1B00
	0x034AC0A8 MOV X20, X0
	0x034AC0AC BL 0x3EB1AE0
	0x034AC0B0 MOV X0, X20
	0x034AC0B4 BL 0x1D2C690
	0x034AC0B8 BL 0x1990590
	0x034AC0BC STR X30, [X31 - 0x30]!
	0x034AC0C0 STP X22, X21, [X31 + 0x10]
	0x034AC0C4 STP X20, X19, [X31 + 0x20]
	0x034AC0C8 ADRP X21, 0xF31000
	0x034AC0CC ADRP X22, 0xC4A000
	0x034AC0D0 LDRB W8, [X21 + 0xA21]
	0x034AC0D4 LDR X22, [X22 + 0x280]
	0x034AC0D8 MOV X19, X1
	0x034AC0DC MOV X20, X0
	0x034AC0E0 TBNZ X8, 0x0, 0x34AC0F8
	0x034AC0E4 ADRP X0, 0xC4A000
	0x034AC0E8 LDR X0, [X0 + 0x280]
	0x034AC0EC BL 0x1C16CF4
	0x034AC0F0 MOVZ W8, 0x1
	0x034AC0F4 STRB W8, [X21 + 0xA21]
	0x034AC0F8 LDR X0, [X22]
	0x034AC0FC LDR W8, [X0 + 0xE0]
	0x034AC100 CBNZ W8, 0x34AC108
	0x034AC104 BL 0x1C16DFC
	0x034AC108 ADD X0, X20, 0x8
	0x034AC10C MOV X1, X19
	0x034AC110 LDP X20, X19, [X31 + 0x20]
	0x034AC114 LDP X22, X21, [X31 + 0x10]
	0x034AC118 MOV X2, X31
	0x034AC11C LDR X30, [X31], #0x30
	0x034AC120 B 0x32C477C
	0x034AC124 SUB X31, X31, 0x50
	0x034AC128 STP X30, X25, [X31 + 0x10]
	0x034AC12C STP X24, X23, [X31 + 0x20]
	0x034AC130 STP X22, X21, [X31 + 0x30]
	0x034AC134 STP X20, X19, [X31 + 0x40]
	0x034AC138 ADRP X20, 0xF31000
	0x034AC13C LDRB W8, [X20 + 0xA22]
	0x034AC140 MOV X19, X0
	0x034AC144 TBNZ X8, 0x0, 0x34AC21C
	0x034AC148 ADRP X0, 0xC86000
	0x034AC14C LDR X0, [X0 + 0x218]
	0x034AC150 BL 0x1C16CF4
	0x034AC154 ADRP X0, 0xC4A000
	0x034AC158 LDR X0, [X0 + 0x280]
	0x034AC15C BL 0x1C16CF4
	0x034AC160 ADRP X0, 0xC48000
	0x034AC164 LDR X0, [X0 + 0x810]
	0x034AC168 BL 0x1C16CF4
	0x034AC16C ADRP X0, 0xC48000
	0x034AC170 LDR X0, [X0 + 0x6C0]
	0x034AC174 BL 0x1C16CF4
	0x034AC178 ADRP X0, 0xC48000
	0x034AC17C LDR X0, [X0 + 0x6D0]
	0x034AC180 BL 0x1C16CF4
	0x034AC184 ADRP X0, 0xC82000
	0x034AC188 LDR X0, [X0 + 0x7B8]
	0x034AC18C BL 0x1C16CF4
	0x034AC190 ADRP X0, 0xC4A000
	0x034AC194 LDR X0, [X0 + 0x1E0]
	0x034AC198 BL 0x1C16CF4
	0x034AC19C ADRP X0, 0xC4A000
	0x034AC1A0 LDR X0, [X0 + 0x1F0]
	0x034AC1A4 BL 0x1C16CF4
	0x034AC1A8 ADRP X0, 0xC4A000
	0x034AC1AC LDR X0, [X0 + 0x1F8]
	0x034AC1B0 BL 0x1C16CF4
	0x034AC1B4 ADRP X0, 0xC50000
	0x034AC1B8 LDR X0, [X0 + 0x3A0]
	0x034AC1BC BL 0x1C16CF4
	0x034AC1C0 ADRP X0, 0xC49000
	0x034AC1C4 LDR X0, [X0 + 0xA28]
	0x034AC1C8 BL 0x1C16CF4
	0x034AC1CC ADRP X0, 0xC70000
	0x034AC1D0 LDR X0, [X0 + 0x4D8]
	0x034AC1D4 BL 0x1C16CF4
	0x034AC1D8 ADRP X0, 0xC86000
	0x034AC1DC LDR X0, [X0 + 0x220]
	0x034AC1E0 BL 0x1C16CF4
	0x034AC1E4 ADRP X0, 0xC82000
	0x034AC1E8 LDR X0, [X0 + 0x7D0]
	0x034AC1EC BL 0x1C16CF4
	0x034AC1F0 ADRP X0, 0xC83000
	0x034AC1F4 LDR X0, [X0 + 0x2E8]
	0x034AC1F8 BL 0x1C16CF4
	0x034AC1FC ADRP X0, 0xC82000
	0x034AC200 LDR X0, [X0 + 0x7D8]
	0x034AC204 BL 0x1C16CF4
	0x034AC208 ADRP X0, 0xC47000
	0x034AC20C LDR X0, [X0 + 0x988]
	0x034AC210 BL 0x1C16CF4
	0x034AC214 MOVZ W8, 0x1
	0x034AC218 STRB W8, [X20 + 0xA22]
	0x034AC21C STR X31, [X31 + 0x8]
	0x034AC220 ADRP X25, 0xC4A000
	0x034AC224 LDR W8, [X19]
	0x034AC228 LDR X25, [X25 + 0x280]
	0x034AC22C CBZ W8, 0x34AC3BC
	0x034AC230 LDR X21, [X19 + 0x20]
	0x034AC234 CBZ X21, 0x34AC4CC
	0x034AC238 ADRP X8, 0xC49000
	0x034AC23C LDR X8, [X8 + 0xA28]
	0x034AC240 LDR X0, [X8]
	0x034AC244 ADRP X8, 0xC86000
	0x034AC248 LDR X8, [X8 + 0x220]
	0x034AC24C LDR X24, [X19 + 0x28]
	0x034AC250 LDR W9, [X0 + 0xE0]
	0x034AC254 LDR X20, [X8]
	0x034AC258 CBNZ W9, 0x34AC260
	0x034AC25C BL 0x1C16DFC
	0x034AC260 MOV X0, X21
	0x034AC264 MOV X1, X31
	0x034AC268 BL 0x3624D20
	0x034AC26C CBZ X20, 0x34AC514
	0x034AC270 ADRP X8, 0xC83000
	0x034AC274 LDR X8, [X8 + 0x2E8]
	0x034AC278 MOV X2, X0
	0x034AC27C LDR X1, [X8]
	0x034AC280 MOV X0, X20
	0x034AC284 MOV X3, X31
	0x034AC288 BL 0x32293BC
	0x034AC28C CBZ X24, 0x34AC518
	0x034AC290 ADRP X8, 0xC47000
	0x034AC294 ADRP X9, 0xC50000
	0x034AC298 LDR X8, [X8 + 0x988]
	0x034AC29C LDR X9, [X9 + 0x3A0]
	0x034AC2A0 MOV X22, X0
	0x034AC2A4 LDR X23, [X24 + 0x10]
	0x034AC2A8 LDR X21, [X8]
	0x034AC2AC LDR X0, [X9]
	0x034AC2B0 BL 0x1C16F10
	0x034AC2B4 MOV X20, X0
	0x034AC2B8 MOV X1, X23
	0x034AC2BC MOV X2, X31
	0x034AC2C0 BL 0x36281F8
	0x034AC2C4 CBZ X20, 0x34AC51C
	0x034AC2C8 MOV X0, X20
	0x034AC2CC MOV X1, X22
	0x034AC2D0 MOV X2, X31
	0x034AC2D4 BL 0x36288CC
	0x034AC2D8 MOV X0, X20
	0x034AC2DC MOV X1, X21
	0x034AC2E0 MOV X2, X31
	0x034AC2E4 BL 0x3628980
	0x034AC2E8 MOV X0, X20
	0x034AC2EC MOV X1, X31
	0x034AC2F0 BL 0x3628A38
	0x034AC2F4 ADRP X8, 0xC70000
	0x034AC2F8 ADRP X9, 0xC48000
	0x034AC2FC LDR X8, [X8 + 0x4D8]
	0x034AC300 LDR X9, [X9 + 0x6D0]
	0x034AC304 MOV X20, X0
	0x034AC308 LDR X21, [X8]
	0x034AC30C LDR X0, [X9]
	0x034AC310 BL 0x1C16F10
	0x034AC314 ADRP X8, 0xC48000
	0x034AC318 LDR X8, [X8 + 0x6C0]
	0x034AC31C MOV X22, X0
	0x034AC320 LDR X1, [X8]
	0x034AC324 BL 0x2AA4804
	0x034AC328 ADRP X8, 0xC82000
	0x034AC32C LDR X8, [X8 + 0x7D8]
	0x034AC330 LDR X1, [X19 + 0x30]
	0x034AC334 LDR X0, [X8]
	0x034AC338 MOV X2, X31
	0x034AC33C BL 0x321B938
	0x034AC340 CBZ X22, 0x34AC520
	0x034AC344 ADRP X8, 0xC82000
	0x034AC348 LDR X8, [X8 + 0x7D0]
	0x034AC34C ADRP X9, 0xC48000
	0x034AC350 LDR X9, [X9 + 0x810]
	0x034AC354 MOV X2, X0
	0x034AC358 LDR X1, [X8]
	0x034AC35C LDR X3, [X9]
	0x034AC360 MOV X0, X22
	0x034AC364 BL 0x2AA5098
	0x034AC368 LDR X23, [X24 + 0x20]
	0x034AC36C CBZ X23, 0x34AC524
	0x034AC370 ADRP X10, 0xC82000
	0x034AC374 LDR X8, [X23]
	0x034AC378 LDR X10, [X10 + 0x7B8]
	0x034AC37C LDR W24, [X24 + 0x18]
	0x034AC380 LDRH W9, [X8 + 0x12E]
	0x034AC384 LDR X1, [X10]
	0x034AC388 CBZ X9, 0x34AC3AC
	0x034AC38C LDR X10, [X8 + 0xB0]
	0x034AC390 ADD X10, X10, 0x8
	0x034AC394 LDUR X11, [X10 - 0x8]
	0x034AC398 CMP X11, X1
	0x034AC39C B.EQ 0x34AC3D4
	0x034AC3A0 SUBS X9, X9, 0x1
	0x034AC3A4 ADD X10, X10, 0x10
	0x034AC3A8 B.NE 0x34AC394
	0x034AC3AC MOVZ W2, 0x3
	0x034AC3B0 MOV X0, X23
	0x034AC3B4 BL 0x1C5C788
	0x034AC3B8 B 0x34AC3E4
	0x034AC3BC LDR X8, [X19 + 0x38]
	0x034AC3C0 MOVN W9, 0x0
	0x034AC3C4 STR X8, [X31 + 0x8]
	0x034AC3C8 STR X31, [X19 + 0x38]
	0x034AC3CC STR W9, [X19]
	0x034AC3D0 B 0x34AC440
	0x034AC3D4 LDR W9, [X10]
	0x034AC3D8 ADD W9, W9, 0x3
	0x034AC3DC ADD X8, X8, W9, 0x4, SXTW
	0x034AC3E0 ADD X0, X8, 0x138
	0x034AC3E4 LDP X8, X9, [X0]
	0x034AC3E8 MOV X0, X23
	0x034AC3EC MOV X1, X21
	0x034AC3F0 MOV X2, X20
	0x034AC3F4 MOV X3, X22
	0x034AC3F8 MOV X4, X31
	0x034AC3FC MOV W5, W24
	0x034AC400 MOV X6, X31
	0x034AC404 MOV X7, X31
	0x034AC408 STR X9, [X31]
	0x034AC40C BLR X8
	0x034AC410 CBZ X0, 0x34AC528
	0x034AC414 ADRP X8, 0xC4A000
	0x034AC418 LDR X8, [X8 + 0x1F8]
	0x034AC41C LDR X1, [X8]
	0x034AC420 BL 0x269F5D0
	0x034AC424 ADRP X8, 0xC4A000
	0x034AC428 LDR X8, [X8 + 0x1F0]
	0x034AC42C STR X0, [X31 + 0x8]
	0x034AC430 LDR X1, [X8]
	0x034AC434 ADD X0, X31, 0x8
	0x034AC438 BL 0x2677430
	0x034AC43C TBZ X0, 0x0, 0x34AC47C
	0x034AC440 ADRP X8, 0xC4A000
	0x034AC444 LDR X8, [X8 + 0x1E0]
	0x034AC448 ADD X0, X31, 0x8
	0x034AC44C LDR X1, [X8]
	0x034AC450 BL 0x2677474
	0x034AC454 MOVN W8, 0x1
	0x034AC458 STR W8, [X19], #0x8
	0x034AC45C LDR X0, [X25]
	0x034AC460 LDR W8, [X0 + 0xE0]
	0x034AC464 CBNZ W8, 0x34AC46C
	0x034AC468 BL 0x1C16DFC
	0x034AC46C MOV X0, X19
	0x034AC470 MOV X1, X31
	0x034AC474 BL 0x32C4864
	0x034AC478 B 0x34AC4B4
	0x034AC47C STR W31, [X19]
	0x034AC480 LDR X8, [X31 + 0x8]
	0x034AC484 STR X8, [X19 + 0x38]
	0x034AC488 LDR X0, [X25]
	0x034AC48C LDR W8, [X0 + 0xE0]
	0x034AC490 CBNZ W8, 0x34AC498
	0x034AC494 BL 0x1C16DFC
	0x034AC498 ADRP X8, 0xC86000
	0x034AC49C LDR X8, [X8 + 0x218]
	0x034AC4A0 ADD X0, X19, 0x8
	0x034AC4A4 LDR X3, [X8]
	0x034AC4A8 ADD X1, X31, 0x8
	0x034AC4AC MOV X2, X19
	0x034AC4B0 BL 0x21877C8
	0x034AC4B4 LDP X20, X19, [X31 + 0x40]
	0x034AC4B8 LDP X22, X21, [X31 + 0x30]
	0x034AC4BC LDP X24, X23, [X31 + 0x20]
	0x034AC4C0 LDP X30, X25, [X31 + 0x10]
	0x034AC4C4 ADD X31, X31, 0x50
	0x034AC4C8 RET
	0x034AC4CC ADRP X0, 0xC4F000
	0x034AC4D0 LDR X0, [X0 + 0x578]
	0x034AC4D4 BL 0x1C16D08
	0x034AC4D8 BL 0x1C16F10
	0x034AC4DC MOV X20, X0
	0x034AC4E0 ADRP X0, 0xC83000
	0x034AC4E4 LDR X0, [X0 + 0x2F0]
	0x034AC4E8 BL 0x1C16D08
	0x034AC4EC MOV X1, X0
	0x034AC4F0 MOV X0, X20
	0x034AC4F4 MOV X2, X31
	0x034AC4F8 BL 0x3314A68
	0x034AC4FC ADRP X0, 0xC86000
	0x034AC500 LDR X0, [X0 + 0x228]
	0x034AC504 BL 0x1C16D08
	0x034AC508 MOV X1, X0
	0x034AC50C MOV X0, X20
	0x034AC510 BL 0x1C16DEC
	0x034AC514 BL 0x1C16F20
	0x034AC518 BL 0x1C16F20
	0x034AC51C BL 0x1C16F20
	0x034AC520 BL 0x1C16F20
	0x034AC524 BL 0x1C16F20
	0x034AC528 BL 0x1C16F20
	0x034AC52C B 0x34AC570
	0x034AC530 B 0x34AC570
	0x034AC534 B 0x34AC570
	0x034AC538 B 0x34AC570
	0x034AC53C B 0x34AC570
	0x034AC540 B 0x34AC570
	0x034AC544 B 0x34AC570
	0x034AC548 B 0x34AC570
	0x034AC54C B 0x34AC570
	0x034AC550 B 0x34AC570
	0x034AC554 B 0x34AC570
	0x034AC558 B 0x34AC570
	0x034AC55C B 0x34AC570
	0x034AC560 B 0x34AC570
	0x034AC564 B 0x34AC570

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF32000
	011 Move W8, [X20+2588]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC87000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move X0, 0xC4B000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC49000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC49000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC49000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC83000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC4B000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC4B000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4B000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC51000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4A000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC71000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0xC87000
	054 Move X0, [X0+472]
	055 Call 0x1C17CF4
	056 Move X0, 0xC83000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC84000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC83000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC48000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2588], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC4B000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC4A000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC87000
	083 Move X8, [X8+472]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC84000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC48000
	105 Move X9, 0xC51000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC71000
	131 Move X9, 0xC49000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC49000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC83000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC83000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC49000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC83000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC4B000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC4B000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC4B000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC87000
	245 Move X8, [X8+464]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC50000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC84000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC87000
	274 Move X0, [X0+480]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC48000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC4B000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA09000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AC568 B 0x34AC570
	0x034AC56C B 0x34AC570
	0x034AC570 MOV X20, X0
	0x034AC574 CMP W1, 0x1
	0x034AC578 B.NE 0x34AC608
	0x034AC57C MOV X0, X20
	0x034AC580 BL 0x3EB1AD0
	0x034AC584 MOV X20, X0
	0x034AC588 ADRP X0, 0xC47000
	0x034AC58C LDR X0, [X0 + 0x7D0]
	0x034AC590 BL 0x1C16D08
	0x034AC594 LDR X8, [X20]
	0x034AC598 LDR X1, [X8]
	0x034AC59C BL 0x1C17270
	0x034AC5A0 TBZ X0, 0x0, 0x34AC5E0
	0x034AC5A4 LDR X20, [X20]
	0x034AC5A8 BL 0x3EB1AE0
	0x034AC5AC MOVN W8, 0x1
	0x034AC5B0 STR W8, [X19], #0x8
	0x034AC5B4 ADRP X0, 0xC4A000
	0x034AC5B8 LDR X0, [X0 + 0x280]
	0x034AC5BC BL 0x1C16D08
	0x034AC5C0 LDR W8, [X0 + 0xE0]
	0x034AC5C4 CBNZ W8, 0x34AC5CC
	0x034AC5C8 BL 0x1C16DFC
	0x034AC5CC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF32000
	007 Move X22, 0xC4B000
	008 Move W8, [X21+2589]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC4B000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2589], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

