Type: Nakama.Console.NakamaapiAccount

Method: System.String get_CustomId()

Disassembly:
	0x034A200C ADRP X22, 0xC51000
	0x034A2010 LDR X22, [X22 + 0x838]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_CustomId(System.String value)

Disassembly:
	0x034A2014 STR X21, [X20 + 0x30]
	0x034A2018 LDR X0, [X22]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.Console.IApiAccountDevice> get_Devices()

Disassembly:
	0x034A201C CBZ X0, 0x34A2034
	0x034A2020 LDR X8, [X20]
	0x034A2024 LDR X1, [X8 + 0x40]
	0x034A2028 BL 0x1C16E00
	0x034A202C CBZ X0, 0x34A20F4
	0x034A2030 LDR W8, [X20 + 0x18]
	0x034A2034 CMP W8, 0x3
	0x034A2038 B.LS 0x34A20F0
	0x034A203C ADRP X21, 0xC8F000
	0x034A2040 ADRP X23, 0xC8C000
	0x034A2044 LDR X21, [X21 + 0xC40]
	0x034A2048 LDR X23, [X23 + 0x2D8]
	0x034A204C LDR X8, [X22]
	0x034A2050 ADRP X24, 0xC8B000
	0x034A2054 ADRP X25, 0xC8F000
	0x034A2058 ADRP X26, 0xC8C000
	0x034A205C LDR X24, [X24 + 0xD50]
	0x034A2060 LDR X25, [X25 + 0xC48]
	0x034A2064 LDR X26, [X26 + 0x2E0]
	0x034A2068 MOV X0, X20
	0x034A206C MOV X1, X31
	0x034A2070 STR X8, [X20 + 0x38]
	0x034A2074 BL 0x3227578
	0x034A2078 MOV X20, X0
	0x034A207C MOV X0, X19
	0x034A2080 BL 0x34A1DFC
	0x034A2084 LDR X8, [X22]
	0x034A2088 LDR X2, [X21]
	0x034A208C MOV X1, X0
	0x034A2090 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF3C000
	005 Move W8, [X20+2509]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC90000
	012 Move X0, [X0+3080]
	013 Call 0x1C17CF4
	014 Move X0, 0xC90000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2509], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xC90000
	023 Move X8, [X8+3088]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xC90000
	027 Move X8, [X8+3080]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.Console.ApiAccountDevice> get__devices()

Disassembly:
	0x034A2094 BL 0x226B7E8
	0x034A2098 LDR X1, [X23]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__devices(System.Collections.Generic.List`1<Nakama.Console.ApiAccountDevice> value)

Disassembly:
	0x034A209C LDR X3, [X24]
	0x034A20A0 MOV X2, X0

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Email()

Disassembly:
	0x034A20A4 MOV X0, X20
	0x034A20A8 MOV X4, X31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Email(System.String value)

Disassembly:
	0x034A20AC BL 0x32277C4
	0x034A20B0 LDR X2, [X19 + 0x20]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: Nakama.Console.IApiUser get_User()

Disassembly:
	0x034A20B4 LDR X1, [X25]
	0x034A20B8 LDR X3, [X22]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: Nakama.Console.ApiUser get__user()

Disassembly:
	0x034A20BC MOV X4, X31
	0x034A20C0 BL 0x32277C4

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set__user(Nakama.Console.ApiUser value)

Disassembly:
	0x034A20C4 LDR X2, [X19 + 0x28]
	0x034A20C8 LDR X1, [X26]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_VerifyTime()

Disassembly:
	0x034A20CC LDR X3, [X22]
	0x034A20D0 MOV X4, X31

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_VerifyTime(System.String value)

Disassembly:
	0x034A20D4 BL 0x32277C4
	0x034A20D8 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_Wallet()

Disassembly:
	0x034A20DC LDP X22, X21, [X31 + 0x30]
	0x034A20E0 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Wallet(System.String value)

Disassembly:
	0x034A20E4 LDP X26, X25, [X31 + 0x10]
	0x034A20E8 LDR X30, [X31], #0x50

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034A20EC RET
	0x034A20F0 BL 0x1C16F28
	0x034A20F4 BL 0x1C16F44
	0x034A20F8 MOV X1, X31
	0x034A20FC BL 0x1C16DEC
	0x034A2100 BL 0x1C16F20
	0x034A2104 MOV X1, X31
	0x034A2108 B 0x33BDD8C
	0x034A210C STR X30, [X31 - 0x30]!
	0x034A2110 STP X22, X21, [X31 + 0x10]
	0x034A2114 STP X20, X19, [X31 + 0x20]
	0x034A2118 MOV X21, X1
	0x034A211C MOV X1, X31
	0x034A2120 MOV W19, W3
	0x034A2124 MOV X20, X2
	0x034A2128 MOV X22, X0
	0x034A212C BL 0x33BDD8C
	0x034A2130 STR X21, [X22 + 0x10]
	0x034A2134 STR W19, [X22 + 0x18]
	0x034A2138 STR X20, [X22 + 0x20]
	0x034A213C LDP X20, X19, [X31 + 0x20]
	0x034A2140 LDP X22, X21, [X31 + 0x10]
	0x034A2144 LDR X30, [X31], #0x30
	0x034A2148 RET
	0x034A214C SUB X31, X31, 0xB0
	0x034A2150 STR X30, [X31 + 0x70]
	0x034A2154 STP X24, X23, [X31 + 0x80]
	0x034A2158 STP X22, X21, [X31 + 0x90]
	0x034A215C STP X20, X19, [X31 + 0xA0]
	0x034A2160 ADRP X24, 0xF3B000
	0x034A2164 ADRP X23, 0xC54000
	0x034A2168 LDRB W8, [X24 + 0x9D5]
	0x034A216C LDR X23, [X23 + 0x280]
	0x034A2170 MOV X20, X3
	0x034A2174 MOV X19, X2
	0x034A2178 MOV X21, X1
	0x034A217C MOV X22, X0
	0x034A2180 TBNZ X8, 0x0, 0x34A21A4
	0x034A2184 ADRP X0, 0xC8F000
	0x034A2188 LDR X0, [X0 + 0xC50]
	0x034A218C BL 0x1C16CF4
	0x034A2190 ADRP X0, 0xC54000
	0x034A2194 LDR X0, [X0 + 0x280]
	0x034A2198 BL 0x1C16CF4
	0x034A219C MOVZ W8, 0x1
	0x034A21A0 STRB W8, [X24 + 0x9D5]
	0x034A21A4 LDR X0, [X23]
	0x034A21A8 MOVI V0.2D, 0x0
	0x034A21AC STR X31, [X31 + 0x60]
	0x034A21B0 STP V0, V0, [X31 + 0x40]
	0x034A21B4 STP V0, V0, [X31 + 0x20]
	0x034A21B8 ADRP X23, 0xC8F000
	0x034A21BC LDR W8, [X0 + 0xE0]
	0x034A21C0 LDR X23, [X23 + 0xC50]
	0x034A21C4 CBNZ W8, 0x34A21CC
	0x034A21C8 BL 0x1C16DFC
	0x034A21CC ADD X8, X31, 0x8
	0x034A21D0 MOV X0, X31
	0x034A21D4 BL 0x32C4770
	0x034A21D8 LDUR V0, [X31 + 0x8]
	0x034A21DC LDR X9, [X31 + 0x18]
	0x034A21E0 LDR X2, [X23]
	0x034A21E4 ADD X8, X31, 0x20
	0x034A21E8 STRH W20, [X31 + 0x48]
	0x034A21EC ORR X20, X8, 0xF
	0x034A21F0 MOVN W10, 0x0
	0x034A21F4 ADD X1, X31, 0x20
	0x034A21F8 MOV X0, X20
	0x034A21FC STP X22, X21, [X31 + 0x50]
	0x034A2200 STUR V0, [X31 + 0x28]
	0x034A2204 STP X9, X19, [X31 + 0x38]
	0x034A2208 STR W10, [X31 + 0x20]
	0x034A220C BL 0x218F6B8
	0x034A2210 MOV X0, X20
	0x034A2214 MOV X1, X31
	0x034A2218 BL 0x32C47F8
	0x034A221C LDP X20, X19, [X31 + 0xA0]
	0x034A2220 LDP X22, X21, [X31 + 0x90]
	0x034A2224 LDP X24, X23, [X31 + 0x80]
	0x034A2228 LDR X30, [X31 + 0x70]
	0x034A222C ADD X31, X31, 0xB0
	0x034A2230 RET
	0x034A2234 SUB X31, X31, 0x80
	0x034A2238 STR X30, [X31 + 0x40]
	0x034A223C STP X24, X23, [X31 + 0x50]
	0x034A2240 STP X22, X21, [X31 + 0x60]
	0x034A2244 STP X20, X19, [X31 + 0x70]
	0x034A2248 ADRP X23, 0xF3B000
	0x034A224C ADRP X22, 0xC8F000
	0x034A2250 LDRB W8, [X23 + 0x9D6]
	0x034A2254 LDR X22, [X22 + 0xC58]
	0x034A2258 MOV X19, X2
	0x034A225C MOV X21, X1
	0x034A2260 MOV X20, X0
	0x034A2264 TBNZ X8, 0x0, 0x34A22A0
	0x034A2268 ADRP X0, 0xC8F000
	0x034A226C LDR X0, [X0 + 0xC60]
	0x034A2270 BL 0x1C16CF4
	0x034A2274 ADRP X0, 0xC8F000
	0x034A2278 LDR X0, [X0 + 0xC68]
	0x034A227C BL 0x1C16CF4
	0x034A2280 ADRP X0, 0xC8F000
	0x034A2284 LDR X0, [X0 + 0xC70]
	0x034A2288 BL 0x1C16CF4
	0x034A228C ADRP X0, 0xC8F000
	0x034A2290 LDR X0, [X0 + 0xC58]
	0x034A2294 BL 0x1C16CF4
	0x034A2298 MOVZ W8, 0x1
	0x034A229C STRB W8, [X23 + 0x9D6]
	0x034A22A0 LDR X0, [X22]
	0x034A22A4 MOVI V0.2D, 0x0
	0x034A22A8 STP V0, V0, [X31 + 0x20]
	0x034A22AC STP V0, V0, [X31]
	0x034A22B0 ADRP X22, 0xC8F000
	0x034A22B4 ADRP X24, 0xC8F000
	0x034A22B8 ADRP X23, 0xC8F000
	0x034A22BC LDR W8, [X0 + 0xE0]
	0x034A22C0 LDR X22, [X22 + 0xC60]
	0x034A22C4 LDR X24, [X24 + 0xC68]
	0x034A22C8 LDR X23, [X23 + 0xC70]
	0x034A22CC CBNZ W8, 0x34A22D4
	0x034A22D0 BL 0x1C16DFC
	0x034A22D4 LDR X0, [X22]
	0x034A22D8 ADD X8, X31, 0x0
	0x034A22DC ORR X22, X8, 0xF
	0x034A22E0 MOV X8, X22
	0x034A22E4 BL 0x263221C
	0x034A22E8 LDR X2, [X24]
	0x034A22EC MOVN W8, 0x0
	0x034A22F0 ADD X1, X31, 0x0
	0x034A22F4 MOV X0, X22
	0x034A22F8 STP X20, X21, [X31 + 0x28]
	0x034A22FC STR X19, [X31 + 0x20]
	0x034A2300 STR W8, [X31]
	0x034A2304 BL 0x1FCB114
	0x034A2308 LDR X1, [X23]
	0x034A230C MOV X0, X22
	0x034A2310 BL 0x2632230
	0x034A2314 LDP X20, X19, [X31 + 0x70]
	0x034A2318 LDP X22, X21, [X31 + 0x60]
	0x034A231C LDP X24, X23, [X31 + 0x50]
	0x034A2320 LDR X30, [X31 + 0x40]
	0x034A2324 ADD X31, X31, 0x80
	0x034A2328 RET
	0x034A232C SUB X31, X31, 0xB0
	0x034A2330 STR X30, [X31 + 0x70]
	0x034A2334 STP X24, X23, [X31 + 0x80]
	0x034A2338 STP X22, X21, [X31 + 0x90]
	0x034A233C STP X20, X19, [X31 + 0xA0]
	0x034A2340 ADRP X24, 0xF3B000
	0x034A2344 ADRP X23, 0xC54000
	0x034A2348 LDRB W8, [X24 + 0x9D7]
	0x034A234C LDR X23, [X23 + 0x280]
	0x034A2350 MOV X20, X3
	0x034A2354 MOV X19, X2
	0x034A2358 MOV X21, X1
	0x034A235C MOV X22, X0
	0x034A2360 TBNZ X8, 0x0, 0x34A2384
	0x034A2364 ADRP X0, 0xC8F000
	0x034A2368 LDR X0, [X0 + 0xC78]
	0x034A236C BL 0x1C16CF4
	0x034A2370 ADRP X0, 0xC54000
	0x034A2374 LDR X0, [X0 + 0x280]
	0x034A2378 BL 0x1C16CF4
	0x034A237C MOVZ W8, 0x1

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0xF3C000
	013 Move X28, 0xC52000
	014 Move X20, 0xC8C000
	015 Move X22, 0xC52000
	016 Move X26, 0xC90000
	017 Move X24, 0xC8C000
	018 Move X25, 0xC8C000
	019 Move X23, 0xC8C000
	020 Move X21, 0xC52000
	021 Move X28, [X28+2440]
	022 Move X20, [X20+3384]
	023 Move X22, [X22+2104]
	024 Move W8, [X27+2510]
	025 Move X26, [X26+3096]
	026 Move X24, [X24+3400]
	027 Move X25, [X25+3408]
	028 Move X23, [X23+3424]
	029 Move X21, [X21+2512]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {70}
	035 Move X0, 0xC52000
	036 Move X0, [X0+2512]
	037 Call 0x1C17CF4
	038 Move X0, 0xC90000
	039 Move X0, [X0+3096]
	040 Call 0x1C17CF4
	041 Move X0, 0xC8C000
	042 Move X0, [X0+3432]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8C000
	045 Move X0, [X0+3312]
	046 Call 0x1C17CF4
	047 Move X0, 0xC52000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8C000
	051 Move X0, [X0+3440]
	052 Call 0x1C17CF4
	053 Move X0, 0xC8C000
	054 Move X0, [X0+3408]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8C000
	057 Move X0, [X0+3400]
	058 Call 0x1C17CF4
	059 Move X0, 0xC52000
	060 Move X0, [X0+2440]
	061 Call 0x1C17CF4
	062 Move X0, 0xC8C000
	063 Move X0, [X0+3384]
	064 Call 0x1C17CF4
	065 Move X0, 0xC8C000
	066 Move X0, [X0+3424]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X27+2510], W8
	070 Move X0, [X28]
	071 Move X2, [X19+16]
	072 Move X1, [X20]
	073 Move X3, [X22]
	074 Move X4, X31
	075 Call String.Concat, X0, X1, X2, X3
	076 Move X20, X0
	077 Move X0, X19
	078 Call NakamaapiAccount.get_Devices, X0
	079 Move X8, [X22]
	080 Move X2, [X26]
	081 Move X1, X0
	082 Move X0, X8
	083 Call String.Join, X0, X1
	084 Move X1, [X24]
	085 Move X3, [X25]
	086 Move X2, X0
	087 Move X0, X20
	088 Move X4, X31
	089 Call String.Concat, X0, X1, X2, X3
	090 Move X2, [X19+32]
	091 Move X1, [X23]
	092 Move X3, [X22]
	093 Move X4, X31
	094 Call String.Concat, X0, X1, X2, X3
	095 Move X8, [X21]
	096 Move X21, X0
	097 Move W1, 4
	098 Move X0, X8
	099 Call 0x1C17D6C
	100 Compare X0, 0
	101 JumpIfEqual {186}
	102 Move X20, X0
	103 Compare X21, 0
	104 JumpIfEqual {111}
	105 Move X8, [X20]
	106 Move X0, X21
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {183}
	111 Move W8, [X20+24]
	112 Compare W8, 0
	113 JumpIfEqual {182}
	114 Move X23, 0xC8C000
	115 Move X23, [X23+3312]
	116 Move [X20+32], X21
	117 Move X0, [X23]
	118 Compare X0, 0
	119 JumpIfEqual {126}
	120 Move X8, [X20]
	121 Move X1, [X8+64]
	122 Call 0x1C17E00
	123 Compare X0, 0
	124 JumpIfEqual {183}
	125 Move W8, [X20+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X9, [X23]
	128 Move [X20+40], X9
	129 Move X21, [X19+40]
	130 Compare X21, 0
	131 JumpIfEqual {139}
	132 Move X8, [X20]
	133 Move X0, X21
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {183}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move [X20+48], X21
	141 Move X0, [X22]
	142 Compare X0, 0
	143 JumpIfEqual {150}
	144 Move X8, [X20]
	145 Move X1, [X8+64]
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {183}
	149 Move W8, [X20+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, [X22]
	152 Move X21, 0xC8C000
	153 Move X23, 0xC8C000
	154 Move X21, [X21+3432]
	155 Move X23, [X23+3440]
	156 Move X0, X20
	157 Move X1, X31
	158 Move [X20+56], X8
	159 Call String.Concat, X0
	160 Move X2, [X19+48]
	161 Move X1, [X21]
	162 Move X3, [X22]
	163 Move X4, X31
	164 Call String.Concat, X0, X1, X2, X3
	165 Move X2, [X19+56]
	166 Move X1, [X23]
	167 Move X3, [X22]
	168 Move X20, [X31+80]
	169 Move X19, [X31+88]
	170 Move X22, [X31+64]
	171 Move X21, [X31+72]
	172 Move X24, [X31+48]
	173 Move X23, [X31+56]
	174 Move X26, [X31+32]
	175 Move X25, [X31+40]
	176 Move X28, [X31+16]
	177 Move X27, [X31+24]
	178 Move X4, X31
	179 Move X30, [X31+96]
	180 Call String.Concat, X0, X1, X2, X3
	181 Return X0
	182 Call 0x1C17F28
	183 Call 0x1C17F44
	184 Move X1, X31
	185 Call 0x1C17DEC
	186 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034A2380 STRB W8, [X24 + 0x9D7]
	0x034A2384 LDR X0, [X23]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

