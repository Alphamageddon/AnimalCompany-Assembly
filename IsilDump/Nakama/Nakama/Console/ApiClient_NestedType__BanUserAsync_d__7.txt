Type: Nakama.Console.ApiClient/<BanUserAsync>d__7

Method: System.Void MoveNext()

Disassembly:
	0x034A52CC B 0x34A52F8
	0x034A52D0 B 0x34A52F8
	0x034A52D4 B 0x34A52F8
	0x034A52D8 B 0x34A52F8
	0x034A52DC B 0x34A52F8
	0x034A52E0 B 0x34A52F8
	0x034A52E4 B 0x34A52F8
	0x034A52E8 B 0x34A52F8
	0x034A52EC B 0x34A52F8
	0x034A52F0 B 0x34A52F8
	0x034A52F4 B 0x34A52F8
	0x034A52F8 MOV X20, X0
	0x034A52FC CMP W1, 0x1
	0x034A5300 B.NE 0x34A5390
	0x034A5304 MOV X0, X20
	0x034A5308 BL 0x3EB1AD0
	0x034A530C MOV X20, X0
	0x034A5310 ADRP X0, 0xC4E000
	0x034A5314 LDR X0, [X0 + 0x7D0]
	0x034A5318 BL 0x1C16D08
	0x034A531C LDR X8, [X20]
	0x034A5320 LDR X1, [X8]
	0x034A5324 BL 0x1C17270
	0x034A5328 TBZ X0, 0x0, 0x34A5368
	0x034A532C LDR X20, [X20]
	0x034A5330 BL 0x3EB1AE0
	0x034A5334 MOVN W8, 0x1
	0x034A5338 STR W8, [X19], #0x8
	0x034A533C ADRP X0, 0xC51000
	0x034A5340 LDR X0, [X0 + 0x280]
	0x034A5344 BL 0x1C16D08
	0x034A5348 LDR W8, [X0 + 0xE0]
	0x034A534C CBNZ W8, 0x34A5354
	0x034A5350 BL 0x1C16DFC
	0x034A5354 MOV X0, X19
	0x034A5358 MOV X1, X20
	0x034A535C MOV X2, X31
	0x034A5360 BL 0x32C4908
	0x034A5364 B 0x34A51E4
	0x034A5368 MOVZ W0, 0x8
	0x034A536C BL 0x3EB1AF0
	0x034A5370 LDR X8, [X20]
	0x034A5374 STR X8, [X0]
	0x034A5378 ADRP X1, 0xA0F000
	0x034A537C ADD X1, X1, 0xE58
	0x034A5380 MOV X2, X31
	0x034A5384 BL 0x3EB1B00
	0x034A5388 MOV X20, X0
	0x034A538C BL 0x3EB1AE0
	0x034A5390 MOV X0, X20
	0x034A5394 BL 0x1D2C690
	0x034A5398 BL 0x1990590
	0x034A539C STR X30, [X31 - 0x30]!
	0x034A53A0 STP X22, X21, [X31 + 0x10]
	0x034A53A4 STP X20, X19, [X31 + 0x20]
	0x034A53A8 ADRP X21, 0xF38000
	0x034A53AC ADRP X22, 0xC51000
	0x034A53B0 LDRB W8, [X21 + 0x9FB]
	0x034A53B4 LDR X22, [X22 + 0x280]
	0x034A53B8 MOV X19, X1
	0x034A53BC MOV X20, X0
	0x034A53C0 TBNZ X8, 0x0, 0x34A53D8
	0x034A53C4 ADRP X0, 0xC51000
	0x034A53C8 LDR X0, [X0 + 0x280]
	0x034A53CC BL 0x1C16CF4
	0x034A53D0 MOVZ W8, 0x1
	0x034A53D4 STRB W8, [X21 + 0x9FB]
	0x034A53D8 LDR X0, [X22]
	0x034A53DC LDR W8, [X0 + 0xE0]
	0x034A53E0 CBNZ W8, 0x34A53E8
	0x034A53E4 BL 0x1C16DFC
	0x034A53E8 ADD X0, X20, 0x8
	0x034A53EC MOV X1, X19
	0x034A53F0 LDP X20, X19, [X31 + 0x20]
	0x034A53F4 LDP X22, X21, [X31 + 0x10]
	0x034A53F8 MOV X2, X31
	0x034A53FC LDR X30, [X31], #0x30
	0x034A5400 B 0x32C477C
	0x034A5404 SUB X31, X31, 0x50
	0x034A5408 STP X30, X25, [X31 + 0x10]
	0x034A540C STP X24, X23, [X31 + 0x20]
	0x034A5410 STP X22, X21, [X31 + 0x30]
	0x034A5414 STP X20, X19, [X31 + 0x40]
	0x034A5418 ADRP X20, 0xF38000
	0x034A541C LDRB W8, [X20 + 0x9FC]
	0x034A5420 MOV X19, X0
	0x034A5424 TBNZ X8, 0x0, 0x34A5508
	0x034A5428 ADRP X0, 0xC8C000
	0x034A542C LDR X0, [X0 + 0xF00]
	0x034A5430 BL 0x1C16CF4
	0x034A5434 ADRP X0, 0xC51000
	0x034A5438 LDR X0, [X0 + 0x280]
	0x034A543C BL 0x1C16CF4
	0x034A5440 ADRP X0, 0xC4F000
	0x034A5444 LDR X0, [X0 + 0x810]
	0x034A5448 BL 0x1C16CF4
	0x034A544C ADRP X0, 0xC4F000
	0x034A5450 LDR X0, [X0 + 0x6C0]
	0x034A5454 BL 0x1C16CF4
	0x034A5458 ADRP X0, 0xC4F000
	0x034A545C LDR X0, [X0 + 0x6D0]
	0x034A5460 BL 0x1C16CF4
	0x034A5464 ADRP X0, 0xC89000
	0x034A5468 LDR X0, [X0 + 0x7B8]
	0x034A546C BL 0x1C16CF4
	0x034A5470 ADRP X0, 0xC51000
	0x034A5474 LDR X0, [X0 + 0x1E0]
	0x034A5478 BL 0x1C16CF4
	0x034A547C ADRP X0, 0xC51000
	0x034A5480 LDR X0, [X0 + 0x1F0]
	0x034A5484 BL 0x1C16CF4
	0x034A5488 ADRP X0, 0xC51000
	0x034A548C LDR X0, [X0 + 0x1F8]
	0x034A5490 BL 0x1C16CF4
	0x034A5494 ADRP X0, 0xC57000
	0x034A5498 LDR X0, [X0 + 0x3A0]
	0x034A549C BL 0x1C16CF4
	0x034A54A0 ADRP X0, 0xC50000
	0x034A54A4 LDR X0, [X0 + 0xA28]
	0x034A54A8 BL 0x1C16CF4
	0x034A54AC ADRP X0, 0xC8C000
	0x034A54B0 LDR X0, [X0 + 0xF08]
	0x034A54B4 BL 0x1C16CF4
	0x034A54B8 ADRP X0, 0xC8C000
	0x034A54BC LDR X0, [X0 + 0xF10]
	0x034A54C0 BL 0x1C16CF4
	0x034A54C4 ADRP X0, 0xC89000
	0x034A54C8 LDR X0, [X0 + 0x7D0]
	0x034A54CC BL 0x1C16CF4
	0x034A54D0 ADRP X0, 0xC8A000
	0x034A54D4 LDR X0, [X0 + 0x2E8]
	0x034A54D8 BL 0x1C16CF4
	0x034A54DC ADRP X0, 0xC89000
	0x034A54E0 LDR X0, [X0 + 0x7D8]
	0x034A54E4 BL 0x1C16CF4
	0x034A54E8 ADRP X0, 0xC4E000
	0x034A54EC LDR X0, [X0 + 0x988]
	0x034A54F0 BL 0x1C16CF4
	0x034A54F4 ADRP X0, 0xC77000
	0x034A54F8 LDR X0, [X0 + 0x4C8]
	0x034A54FC BL 0x1C16CF4
	0x034A5500 MOVZ W8, 0x1
	0x034A5504 STRB W8, [X20 + 0x9FC]
	0x034A5508 STR X31, [X31 + 0x8]
	0x034A550C ADRP X25, 0xC51000
	0x034A5510 LDR W8, [X19]
	0x034A5514 LDR X25, [X25 + 0x280]
	0x034A5518 CBZ W8, 0x34A56E0
	0x034A551C LDR X21, [X19 + 0x20]
	0x034A5520 CBZ X21, 0x34A57F0
	0x034A5524 LDR X8, [X19 + 0x28]
	0x034A5528 CBZ X8, 0x34A5838
	0x034A552C ADRP X8, 0xC50000
	0x034A5530 LDR X8, [X8 + 0xA28]
	0x034A5534 LDR X0, [X8]
	0x034A5538 ADRP X8, 0xC8C000
	0x034A553C LDR X8, [X8 + 0xF08]
	0x034A5540 LDR X24, [X19 + 0x30]
	0x034A5544 LDR W9, [X0 + 0xE0]
	0x034A5548 LDR X20, [X8]
	0x034A554C CBNZ W9, 0x34A5554
	0x034A5550 BL 0x1C16DFC
	0x034A5554 MOV X0, X21
	0x034A5558 MOV X1, X31
	0x034A555C BL 0x3624D20
	0x034A5560 CBZ X20, 0x34A5880
	0x034A5564 ADRP X8, 0xC8A000
	0x034A5568 LDR X8, [X8 + 0x2E8]
	0x034A556C MOV X2, X0
	0x034A5570 LDR X1, [X8]
	0x034A5574 MOV X0, X20
	0x034A5578 MOV X3, X31
	0x034A557C BL 0x32293BC
	0x034A5580 MOV X20, X0
	0x034A5584 LDR X0, [X19 + 0x28]
	0x034A5588 MOV X1, X31
	0x034A558C BL 0x3624D20
	0x034A5590 CBZ X20, 0x34A5884
	0x034A5594 ADRP X8, 0xC8C000
	0x034A5598 LDR X8, [X8 + 0xF10]
	0x034A559C MOV X2, X0
	0x034A55A0 LDR X1, [X8]
	0x034A55A4 MOV X0, X20
	0x034A55A8 MOV X3, X31
	0x034A55AC BL 0x32293BC
	0x034A55B0 CBZ X24, 0x34A5888
	0x034A55B4 ADRP X8, 0xC4E000
	0x034A55B8 ADRP X9, 0xC57000
	0x034A55BC LDR X8, [X8 + 0x988]
	0x034A55C0 LDR X9, [X9 + 0x3A0]
	0x034A55C4 MOV X22, X0
	0x034A55C8 LDR X23, [X24 + 0x10]
	0x034A55CC LDR X21, [X8]
	0x034A55D0 LDR X0, [X9]
	0x034A55D4 BL 0x1C16F10
	0x034A55D8 MOV X20, X0
	0x034A55DC MOV X1, X23
	0x034A55E0 MOV X2, X31
	0x034A55E4 BL 0x36281F8
	0x034A55E8 CBZ X20, 0x34A588C
	0x034A55EC MOV X0, X20
	0x034A55F0 MOV X1, X22
	0x034A55F4 MOV X2, X31
	0x034A55F8 BL 0x36288CC
	0x034A55FC MOV X0, X20
	0x034A5600 MOV X1, X21
	0x034A5604 MOV X2, X31
	0x034A5608 BL 0x3628980
	0x034A560C MOV X0, X20
	0x034A5610 MOV X1, X31
	0x034A5614 BL 0x3628A38
	0x034A5618 ADRP X8, 0xC77000
	0x034A561C ADRP X9, 0xC4F000
	0x034A5620 LDR X8, [X8 + 0x4C8]
	0x034A5624 LDR X9, [X9 + 0x6D0]
	0x034A5628 MOV X20, X0
	0x034A562C LDR X21, [X8]
	0x034A5630 LDR X0, [X9]
	0x034A5634 BL 0x1C16F10
	0x034A5638 ADRP X8, 0xC4F000
	0x034A563C LDR X8, [X8 + 0x6C0]
	0x034A5640 MOV X22, X0
	0x034A5644 LDR X1, [X8]
	0x034A5648 BL 0x2AA4804
	0x034A564C ADRP X8, 0xC89000
	0x034A5650 LDR X8, [X8 + 0x7D8]
	0x034A5654 LDR X1, [X19 + 0x38]
	0x034A5658 LDR X0, [X8]
	0x034A565C MOV X2, X31
	0x034A5660 BL 0x321B938
	0x034A5664 CBZ X22, 0x34A5890
	0x034A5668 ADRP X8, 0xC89000
	0x034A566C LDR X8, [X8 + 0x7D0]
	0x034A5670 ADRP X9, 0xC4F000
	0x034A5674 LDR X9, [X9 + 0x810]
	0x034A5678 MOV X2, X0
	0x034A567C LDR X1, [X8]
	0x034A5680 LDR X3, [X9]
	0x034A5684 MOV X0, X22
	0x034A5688 BL 0x2AA5098
	0x034A568C LDR X23, [X24 + 0x20]
	0x034A5690 CBZ X23, 0x34A5894
	0x034A5694 ADRP X10, 0xC89000
	0x034A5698 LDR X8, [X23]
	0x034A569C LDR X10, [X10 + 0x7B8]
	0x034A56A0 LDR W24, [X24 + 0x18]
	0x034A56A4 LDRH W9, [X8 + 0x12E]
	0x034A56A8 LDR X1, [X10]
	0x034A56AC CBZ X9, 0x34A56D0
	0x034A56B0 LDR X10, [X8 + 0xB0]
	0x034A56B4 ADD X10, X10, 0x8
	0x034A56B8 LDUR X11, [X10 - 0x8]
	0x034A56BC CMP X11, X1
	0x034A56C0 B.EQ 0x34A56F8
	0x034A56C4 SUBS X9, X9, 0x1
	0x034A56C8 ADD X10, X10, 0x10
	0x034A56CC B.NE 0x34A56B8
	0x034A56D0 MOVZ W2, 0x3
	0x034A56D4 MOV X0, X23
	0x034A56D8 BL 0x1C5C788
	0x034A56DC B 0x34A5708
	0x034A56E0 LDR X8, [X19 + 0x40]
	0x034A56E4 MOVN W9, 0x0
	0x034A56E8 STR X8, [X31 + 0x8]
	0x034A56EC STR X31, [X19 + 0x40]
	0x034A56F0 STR W9, [X19]
	0x034A56F4 B 0x34A5764
	0x034A56F8 LDR W9, [X10]
	0x034A56FC ADD W9, W9, 0x3
	0x034A5700 ADD X8, X8, W9, 0x4, SXTW
	0x034A5704 ADD X0, X8, 0x138
	0x034A5708 LDP X8, X9, [X0]
	0x034A570C MOV X0, X23
	0x034A5710 MOV X1, X21
	0x034A5714 MOV X2, X20
	0x034A5718 MOV X3, X22
	0x034A571C MOV X4, X31
	0x034A5720 MOV W5, W24
	0x034A5724 MOV X6, X31
	0x034A5728 MOV X7, X31
	0x034A572C STR X9, [X31]
	0x034A5730 BLR X8
	0x034A5734 CBZ X0, 0x34A5898
	0x034A5738 ADRP X8, 0xC51000
	0x034A573C LDR X8, [X8 + 0x1F8]
	0x034A5740 LDR X1, [X8]
	0x034A5744 BL 0x269F5D0
	0x034A5748 ADRP X8, 0xC51000
	0x034A574C LDR X8, [X8 + 0x1F0]
	0x034A5750 STR X0, [X31 + 0x8]
	0x034A5754 LDR X1, [X8]
	0x034A5758 ADD X0, X31, 0x8
	0x034A575C BL 0x2677430
	0x034A5760 TBZ X0, 0x0, 0x34A57A0
	0x034A5764 ADRP X8, 0xC51000
	0x034A5768 LDR X8, [X8 + 0x1E0]
	0x034A576C ADD X0, X31, 0x8
	0x034A5770 LDR X1, [X8]
	0x034A5774 BL 0x2677474
	0x034A5778 MOVN W8, 0x1
	0x034A577C STR W8, [X19], #0x8
	0x034A5780 LDR X0, [X25]
	0x034A5784 LDR W8, [X0 + 0xE0]
	0x034A5788 CBNZ W8, 0x34A5790
	0x034A578C BL 0x1C16DFC
	0x034A5790 MOV X0, X19
	0x034A5794 MOV X1, X31
	0x034A5798 BL 0x32C4864
	0x034A579C B 0x34A57D8
	0x034A57A0 STR W31, [X19]
	0x034A57A4 LDR X8, [X31 + 0x8]
	0x034A57A8 STR X8, [X19 + 0x40]
	0x034A57AC LDR X0, [X25]
	0x034A57B0 LDR W8, [X0 + 0xE0]
	0x034A57B4 CBNZ W8, 0x34A57BC
	0x034A57B8 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF39000
	011 Move W8, [X20+2550]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC8D000
	018 Move X0, [X0+3744]
	019 Call 0x1C17CF4
	020 Move X0, 0xC52000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC50000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC50000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC50000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC8A000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC52000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC52000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC52000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC58000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC51000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC78000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0xC8A000
	054 Move X0, [X0+2000]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8B000
	057 Move X0, [X0+744]
	058 Call 0x1C17CF4
	059 Move X0, 0xC8D000
	060 Move X0, [X0+3752]
	061 Call 0x1C17CF4
	062 Move X0, 0xC8A000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC4F000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2550], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC52000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC51000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC8D000
	083 Move X8, [X8+3752]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC8B000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC4F000
	105 Move X9, 0xC58000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC78000
	131 Move X9, 0xC50000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC50000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC8A000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC8A000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC50000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC8A000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC52000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC52000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC52000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC8D000
	245 Move X8, [X8+3744]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC57000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC8B000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC8D000
	274 Move X0, [X0+3760]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC4F000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC52000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA10000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A57BC ADRP X8, 0xC8C000
	0x034A57C0 LDR X8, [X8 + 0xF00]
	0x034A57C4 ADD X0, X19, 0x8
	0x034A57C8 LDR X3, [X8]
	0x034A57CC ADD X1, X31, 0x8
	0x034A57D0 MOV X2, X19
	0x034A57D4 BL 0x218736C
	0x034A57D8 LDP X20, X19, [X31 + 0x40]
	0x034A57DC LDP X22, X21, [X31 + 0x30]
	0x034A57E0 LDP X24, X23, [X31 + 0x20]
	0x034A57E4 LDP X30, X25, [X31 + 0x10]
	0x034A57E8 ADD X31, X31, 0x50
	0x034A57EC RET
	0x034A57F0 ADRP X0, 0xC56000
	0x034A57F4 LDR X0, [X0 + 0x578]
	0x034A57F8 BL 0x1C16D08
	0x034A57FC BL 0x1C16F10
	0x034A5800 MOV X20, X0
	0x034A5804 ADRP X0, 0xC8A000
	0x034A5808 LDR X0, [X0 + 0x2F0]
	0x034A580C BL 0x1C16D08
	0x034A5810 MOV X1, X0
	0x034A5814 MOV X0, X20
	0x034A5818 MOV X2, X31
	0x034A581C BL 0x3314A68
	0x034A5820 ADRP X0, 0xC8C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF39000
	007 Move X22, 0xC52000
	008 Move W8, [X21+2551]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC52000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2551], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

