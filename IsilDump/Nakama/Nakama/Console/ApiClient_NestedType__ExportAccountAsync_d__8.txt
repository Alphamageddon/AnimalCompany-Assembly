Type: Nakama.Console.ApiClient/<ExportAccountAsync>d__8

Method: System.Void MoveNext()

Disassembly:
	0x034A8744 TBNZ X8, 0x0, 0x34A8768
	0x034A8748 ADRP X0, 0xC8A000
	0x034A874C LDR X0, [X0 + 0x58]
	0x034A8750 BL 0x1C16CF4
	0x034A8754 ADRP X0, 0xC89000
	0x034A8758 LDR X0, [X0 + 0xD88]
	0x034A875C BL 0x1C16CF4
	0x034A8760 MOVZ W8, 0x1
	0x034A8764 STRB W8, [X22 + 0xA0D]
	0x034A8768 LDR X0, [X21]
	0x034A876C ADRP X21, 0xC8A000
	0x034A8770 LDR W8, [X0 + 0xE0]
	0x034A8774 LDR X21, [X21 + 0x58]
	0x034A8778 CBNZ W8, 0x34A8780
	0x034A877C BL 0x1C16DFC
	0x034A8780 LDR X2, [X21]
	0x034A8784 ADD X0, X20, 0x8
	0x034A8788 MOV X1, X19
	0x034A878C LDP X20, X19, [X31 + 0x20]
	0x034A8790 LDP X22, X21, [X31 + 0x10]
	0x034A8794 LDR X30, [X31], #0x30
	0x034A8798 B 0x2632228
	0x034A879C SUB X31, X31, 0x50
	0x034A87A0 STP X30, X25, [X31 + 0x10]
	0x034A87A4 STP X24, X23, [X31 + 0x20]
	0x034A87A8 STP X22, X21, [X31 + 0x30]
	0x034A87AC STP X20, X19, [X31 + 0x40]
	0x034A87B0 ADRP X20, 0xF35000
	0x034A87B4 LDRB W8, [X20 + 0xA0E]
	0x034A87B8 MOV X19, X0
	0x034A87BC TBNZ X8, 0x0, 0x34A88AC
	0x034A87C0 ADRP X0, 0xC8A000
	0x034A87C4 LDR X0, [X0 + 0x60]
	0x034A87C8 BL 0x1C16CF4
	0x034A87CC ADRP X0, 0xC8A000
	0x034A87D0 LDR X0, [X0 + 0x68]
	0x034A87D4 BL 0x1C16CF4
	0x034A87D8 ADRP X0, 0xC89000
	0x034A87DC LDR X0, [X0 + 0xCA8]
	0x034A87E0 BL 0x1C16CF4
	0x034A87E4 ADRP X0, 0xC4C000
	0x034A87E8 LDR X0, [X0 + 0x810]
	0x034A87EC BL 0x1C16CF4
	0x034A87F0 ADRP X0, 0xC4C000
	0x034A87F4 LDR X0, [X0 + 0x6C0]
	0x034A87F8 BL 0x1C16CF4
	0x034A87FC ADRP X0, 0xC4C000
	0x034A8800 LDR X0, [X0 + 0x6D0]
	0x034A8804 BL 0x1C16CF4
	0x034A8808 ADRP X0, 0xC86000
	0x034A880C LDR X0, [X0 + 0x7B8]
	0x034A8810 BL 0x1C16CF4
	0x034A8814 ADRP X0, 0xC8A000
	0x034A8818 LDR X0, [X0 + 0x70]
	0x034A881C BL 0x1C16CF4
	0x034A8820 ADRP X0, 0xC4E000
	0x034A8824 LDR X0, [X0 + 0x1E0]
	0x034A8828 BL 0x1C16CF4
	0x034A882C ADRP X0, 0xC4E000
	0x034A8830 LDR X0, [X0 + 0x1F0]
	0x034A8834 BL 0x1C16CF4
	0x034A8838 ADRP X0, 0xC4E000
	0x034A883C LDR X0, [X0 + 0x1F8]
	0x034A8840 BL 0x1C16CF4
	0x034A8844 ADRP X0, 0xC54000
	0x034A8848 LDR X0, [X0 + 0x3A0]
	0x034A884C BL 0x1C16CF4
	0x034A8850 ADRP X0, 0xC4D000
	0x034A8854 LDR X0, [X0 + 0xA28]
	0x034A8858 BL 0x1C16CF4
	0x034A885C ADRP X0, 0xC74000
	0x034A8860 LDR X0, [X0 + 0x4D0]
	0x034A8864 BL 0x1C16CF4
	0x034A8868 ADRP X0, 0xC86000
	0x034A886C LDR X0, [X0 + 0x7D0]
	0x034A8870 BL 0x1C16CF4
	0x034A8874 ADRP X0, 0xC87000
	0x034A8878 LDR X0, [X0 + 0x2E8]
	0x034A887C BL 0x1C16CF4
	0x034A8880 ADRP X0, 0xC86000
	0x034A8884 LDR X0, [X0 + 0x7D8]
	0x034A8888 BL 0x1C16CF4
	0x034A888C ADRP X0, 0xC8A000
	0x034A8890 LDR X0, [X0 + 0x78]
	0x034A8894 BL 0x1C16CF4
	0x034A8898 ADRP X0, 0xC4B000
	0x034A889C LDR X0, [X0 + 0x988]
	0x034A88A0 BL 0x1C16CF4
	0x034A88A4 MOVZ W8, 0x1
	0x034A88A8 STRB W8, [X20 + 0xA0E]
	0x034A88AC STR X31, [X31 + 0x8]
	0x034A88B0 ADRP X25, 0xC89000
	0x034A88B4 LDR W8, [X19]
	0x034A88B8 LDR X25, [X25 + 0xCA8]
	0x034A88BC CBZ W8, 0x34A8A4C
	0x034A88C0 LDR X21, [X19 + 0x20]
	0x034A88C4 CBZ X21, 0x34A8B7C
	0x034A88C8 ADRP X8, 0xC4D000
	0x034A88CC LDR X8, [X8 + 0xA28]
	0x034A88D0 LDR X0, [X8]
	0x034A88D4 ADRP X8, 0xC8A000
	0x034A88D8 LDR X8, [X8 + 0x78]
	0x034A88DC LDR X24, [X19 + 0x28]
	0x034A88E0 LDR W9, [X0 + 0xE0]
	0x034A88E4 LDR X20, [X8]
	0x034A88E8 CBNZ W9, 0x34A88F0
	0x034A88EC BL 0x1C16DFC
	0x034A88F0 MOV X0, X21
	0x034A88F4 MOV X1, X31
	0x034A88F8 BL 0x3624D20
	0x034A88FC CBZ X20, 0x34A8BC4
	0x034A8900 ADRP X8, 0xC87000
	0x034A8904 LDR X8, [X8 + 0x2E8]
	0x034A8908 MOV X2, X0
	0x034A890C LDR X1, [X8]
	0x034A8910 MOV X0, X20
	0x034A8914 MOV X3, X31
	0x034A8918 BL 0x32293BC
	0x034A891C CBZ X24, 0x34A8BC8
	0x034A8920 ADRP X8, 0xC4B000
	0x034A8924 ADRP X9, 0xC54000
	0x034A8928 LDR X8, [X8 + 0x988]
	0x034A892C LDR X9, [X9 + 0x3A0]
	0x034A8930 MOV X22, X0
	0x034A8934 LDR X23, [X24 + 0x10]
	0x034A8938 LDR X21, [X8]
	0x034A893C LDR X0, [X9]
	0x034A8940 BL 0x1C16F10
	0x034A8944 MOV X20, X0
	0x034A8948 MOV X1, X23
	0x034A894C MOV X2, X31
	0x034A8950 BL 0x36281F8
	0x034A8954 CBZ X20, 0x34A8BCC
	0x034A8958 MOV X0, X20
	0x034A895C MOV X1, X22
	0x034A8960 MOV X2, X31
	0x034A8964 BL 0x36288CC
	0x034A8968 MOV X0, X20
	0x034A896C MOV X1, X21
	0x034A8970 MOV X2, X31
	0x034A8974 BL 0x3628980
	0x034A8978 MOV X0, X20
	0x034A897C MOV X1, X31
	0x034A8980 BL 0x3628A38
	0x034A8984 ADRP X8, 0xC74000
	0x034A8988 ADRP X9, 0xC4C000
	0x034A898C LDR X8, [X8 + 0x4D0]
	0x034A8990 LDR X9, [X9 + 0x6D0]
	0x034A8994 MOV X20, X0
	0x034A8998 LDR X21, [X8]
	0x034A899C LDR X0, [X9]
	0x034A89A0 BL 0x1C16F10
	0x034A89A4 ADRP X8, 0xC4C000
	0x034A89A8 LDR X8, [X8 + 0x6C0]
	0x034A89AC MOV X22, X0
	0x034A89B0 LDR X1, [X8]
	0x034A89B4 BL 0x2AA4804
	0x034A89B8 ADRP X8, 0xC86000
	0x034A89BC LDR X8, [X8 + 0x7D8]
	0x034A89C0 LDR X1, [X19 + 0x30]
	0x034A89C4 LDR X0, [X8]
	0x034A89C8 MOV X2, X31
	0x034A89CC BL 0x321B938
	0x034A89D0 CBZ X22, 0x34A8BD0
	0x034A89D4 ADRP X8, 0xC86000
	0x034A89D8 LDR X8, [X8 + 0x7D0]
	0x034A89DC ADRP X9, 0xC4C000
	0x034A89E0 LDR X9, [X9 + 0x810]
	0x034A89E4 MOV X2, X0
	0x034A89E8 LDR X1, [X8]
	0x034A89EC LDR X3, [X9]
	0x034A89F0 MOV X0, X22
	0x034A89F4 BL 0x2AA5098
	0x034A89F8 LDR X23, [X24 + 0x20]
	0x034A89FC CBZ X23, 0x34A8BD4
	0x034A8A00 ADRP X10, 0xC86000
	0x034A8A04 LDR X8, [X23]
	0x034A8A08 LDR X10, [X10 + 0x7B8]
	0x034A8A0C LDR W24, [X24 + 0x18]
	0x034A8A10 LDRH W9, [X8 + 0x12E]
	0x034A8A14 LDR X1, [X10]
	0x034A8A18 CBZ X9, 0x34A8A3C
	0x034A8A1C LDR X10, [X8 + 0xB0]
	0x034A8A20 ADD X10, X10, 0x8
	0x034A8A24 LDUR X11, [X10 - 0x8]
	0x034A8A28 CMP X11, X1
	0x034A8A2C B.EQ 0x34A8A64
	0x034A8A30 SUBS X9, X9, 0x1
	0x034A8A34 ADD X10, X10, 0x10
	0x034A8A38 B.NE 0x34A8A24
	0x034A8A3C MOVZ W2, 0x3
	0x034A8A40 MOV X0, X23
	0x034A8A44 BL 0x1C5C788
	0x034A8A48 B 0x34A8A74
	0x034A8A4C LDR X8, [X19 + 0x38]
	0x034A8A50 MOVN W9, 0x0
	0x034A8A54 STR X8, [X31 + 0x8]
	0x034A8A58 STR X31, [X19 + 0x38]
	0x034A8A5C STR W9, [X19]
	0x034A8A60 B 0x34A8AD0
	0x034A8A64 LDR W9, [X10]
	0x034A8A68 ADD W9, W9, 0x3
	0x034A8A6C ADD X8, X8, W9, 0x4, SXTW
	0x034A8A70 ADD X0, X8, 0x138
	0x034A8A74 LDP X8, X9, [X0]
	0x034A8A78 MOV X0, X23
	0x034A8A7C MOV X1, X21
	0x034A8A80 MOV X2, X20
	0x034A8A84 MOV X3, X22
	0x034A8A88 MOV X4, X31
	0x034A8A8C MOV W5, W24
	0x034A8A90 MOV X6, X31
	0x034A8A94 MOV X7, X31
	0x034A8A98 STR X9, [X31]
	0x034A8A9C BLR X8
	0x034A8AA0 CBZ X0, 0x34A8BD8
	0x034A8AA4 ADRP X8, 0xC4E000
	0x034A8AA8 LDR X8, [X8 + 0x1F8]
	0x034A8AAC LDR X1, [X8]
	0x034A8AB0 BL 0x269F5D0
	0x034A8AB4 ADRP X8, 0xC4E000
	0x034A8AB8 LDR X8, [X8 + 0x1F0]
	0x034A8ABC STR X0, [X31 + 0x8]
	0x034A8AC0 LDR X1, [X8]
	0x034A8AC4 ADD X0, X31, 0x8
	0x034A8AC8 BL 0x2677430
	0x034A8ACC TBZ X0, 0x0, 0x34A8B2C
	0x034A8AD0 ADRP X8, 0xC4E000
	0x034A8AD4 LDR X8, [X8 + 0x1E0]
	0x034A8AD8 ADD X0, X31, 0x8
	0x034A8ADC LDR X1, [X8]
	0x034A8AE0 BL 0x2677474
	0x034A8AE4 ADRP X8, 0xC8A000
	0x034A8AE8 LDR X8, [X8 + 0x70]
	0x034A8AEC LDR X1, [X8]
	0x034A8AF0 BL 0x220E6DC
	0x034A8AF4 MOVN W8, 0x1
	0x034A8AF8 STR W8, [X19], #0x8
	0x034A8AFC MOV X20, X0
	0x034A8B00 LDR X0, [X25]
	0x034A8B04 ADRP X21, 0xC8A000
	0x034A8B08 LDR W8, [X0 + 0xE0]
	0x034A8B0C LDR X21, [X21 + 0x68]
	0x034A8B10 CBNZ W8, 0x34A8B18
	0x034A8B14 BL 0x1C16DFC
	0x034A8B18 LDR X2, [X21]
	0x034A8B1C MOV X0, X19
	0x034A8B20 MOV X1, X20
	0x034A8B24 BL 0x26322B0
	0x034A8B28 B 0x34A8B64
	0x034A8B2C STR W31, [X19]
	0x034A8B30 LDR X8, [X31 + 0x8]
	0x034A8B34 STR X8, [X19 + 0x38]
	0x034A8B38 LDR X0, [X25]
	0x034A8B3C LDR W8, [X0 + 0xE0]
	0x034A8B40 CBNZ W8, 0x34A8B48
	0x034A8B44 BL 0x1C16DFC
	0x034A8B48 ADRP X8, 0xC8A000
	0x034A8B4C LDR X8, [X8 + 0x60]
	0x034A8B50 ADD X0, X19, 0x8
	0x034A8B54 LDR X3, [X8]
	0x034A8B58 ADD X1, X31, 0x8
	0x034A8B5C MOV X2, X19
	0x034A8B60 BL 0x1FB7800
	0x034A8B64 LDP X20, X19, [X31 + 0x40]
	0x034A8B68 LDP X22, X21, [X31 + 0x30]
	0x034A8B6C LDP X24, X23, [X31 + 0x20]
	0x034A8B70 LDP X30, X25, [X31 + 0x10]
	0x034A8B74 ADD X31, X31, 0x50
	0x034A8B78 RET
	0x034A8B7C ADRP X0, 0xC53000
	0x034A8B80 LDR X0, [X0 + 0x578]
	0x034A8B84 BL 0x1C16D08
	0x034A8B88 BL 0x1C16F10
	0x034A8B8C MOV X20, X0
	0x034A8B90 ADRP X0, 0xC87000
	0x034A8B94 LDR X0, [X0 + 0x2F0]
	0x034A8B98 BL 0x1C16D08
	0x034A8B9C MOV X1, X0
	0x034A8BA0 MOV X0, X20
	0x034A8BA4 MOV X2, X31
	0x034A8BA8 BL 0x3314A68
	0x034A8BAC ADRP X0, 0xC8A000
	0x034A8BB0 LDR X0, [X0 + 0x80]
	0x034A8BB4 BL 0x1C16D08
	0x034A8BB8 MOV X1, X0
	0x034A8BBC MOV X0, X20
	0x034A8BC0 BL 0x1C16DEC
	0x034A8BC4 BL 0x1C16F20
	0x034A8BC8 BL 0x1C16F20
	0x034A8BCC BL 0x1C16F20
	0x034A8BD0 BL 0x1C16F20
	0x034A8BD4 BL 0x1C16F20
	0x034A8BD8 BL 0x1C16F20
	0x034A8BDC B 0x34A8C24
	0x034A8BE0 B 0x34A8C24
	0x034A8BE4 B 0x34A8C24
	0x034A8BE8 B 0x34A8C24
	0x034A8BEC B 0x34A8C24
	0x034A8BF0 B 0x34A8C24
	0x034A8BF4 B 0x34A8C24
	0x034A8BF8 B 0x34A8C24
	0x034A8BFC B 0x34A8C24
	0x034A8C00 B 0x34A8C24
	0x034A8C04 B 0x34A8C24
	0x034A8C08 B 0x34A8C24
	0x034A8C0C B 0x34A8C24
	0x034A8C10 B 0x34A8C24
	0x034A8C14 B 0x34A8C24
	0x034A8C18 B 0x34A8C24
	0x034A8C1C B 0x34A8C24
	0x034A8C20 B 0x34A8C24
	0x034A8C24 MOV X20, X0
	0x034A8C28 CMP W1, 0x1
	0x034A8C2C B.NE 0x34A8CC8
	0x034A8C30 MOV X0, X20
	0x034A8C34 BL 0x3EB1AD0
	0x034A8C38 MOV X20, X0
	0x034A8C3C ADRP X0, 0xC4B000
	0x034A8C40 LDR X0, [X0 + 0x7D0]
	0x034A8C44 BL 0x1C16D08
	0x034A8C48 LDR X8, [X20]
	0x034A8C4C LDR X1, [X8]
	0x034A8C50 BL 0x1C17270
	0x034A8C54 TBZ X0, 0x0, 0x34A8CA0
	0x034A8C58 LDR X20, [X20]
	0x034A8C5C BL 0x3EB1AE0
	0x034A8C60 MOVN W8, 0x1
	0x034A8C64 STR W8, [X19], #0x8
	0x034A8C68 ADRP X0, 0xC89000
	0x034A8C6C LDR X0, [X0 + 0xCA8]
	0x034A8C70 BL 0x1C16D08
	0x034A8C74 LDR W8, [X0 + 0xE0]
	0x034A8C78 CBNZ W8, 0x34A8C80

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF36000
	011 Move W8, [X20+2568]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xC8A000
	018 Move X0, [X0+4040]
	019 Call 0x1C17CF4
	020 Move X0, 0xC8A000
	021 Move X0, [X0+4048]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8A000
	024 Move X0, [X0+3208]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4D000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4D000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xC4D000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0xC87000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xC8A000
	039 Move X0, [X0+4056]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4F000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4F000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4F000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xC55000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xC4E000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0xC75000
	057 Move X0, [X0+1232]
	058 Call 0x1C17CF4
	059 Move X0, 0xC87000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xC88000
	063 Move X0, [X0+744]
	064 Call 0x1C17CF4
	065 Move X0, 0xC8A000
	066 Move X0, [X0+4064]
	067 Call 0x1C17CF4
	068 Move X0, 0xC87000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xC4C000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2568], W8
	076 Move [X31+8], X31
	077 Move X25, 0xC8A000
	078 Move W8, [X19]
	079 Move X25, [X25+3208]
	080 Compare W8, 0
	081 JumpIfEqual {186}
	082 Move X21, [X19+32]
	083 Compare X21, 0
	084 JumpIfEqual {275}
	085 Move X8, 0xC4E000
	086 Move X8, [X8+2600]
	087 Move X0, [X8]
	088 Move X8, 0xC8A000
	089 Move X8, [X8+4064]
	090 Move X24, [X19+40]
	091 Move W9, [X0+224]
	092 Move X20, [X8]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Uri.EscapeDataString, X0
	099 Compare X20, 0
	100 JumpIfEqual {293}
	101 Move X8, 0xC88000
	102 Move X8, [X8+744]
	103 Move X2, X0
	104 Move X1, [X8]
	105 Move X0, X20
	106 Move X3, X31
	107 Call String.Replace, X0, X1, X2
	108 Compare X24, 0
	109 JumpIfEqual {294}
	110 Move X8, 0xC4C000
	111 Move X9, 0xC55000
	112 Move X8, [X8+2440]
	113 Move X9, [X9+928]
	114 Move X22, X0
	115 Move X23, [X24+16]
	116 Move X21, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X20, X0
	120 Move X1, X23
	121 Move X2, X31
	122 Call UriBuilder..ctor, X0, X1
	123 Compare X20, 0
	124 JumpIfEqual {295}
	125 Move X0, X20
	126 Move X1, X22
	127 Move X2, X31
	128 Call UriBuilder.set_Path, X0, X1
	129 Move X0, X20
	130 Move X1, X21
	131 Move X2, X31
	132 Call UriBuilder.set_Query, X0, X1
	133 Move X0, X20
	134 Move X1, X31
	135 Call UriBuilder.get_Uri, X0
	136 Move X8, 0xC75000
	137 Move X9, 0xC4D000
	138 Move X8, [X8+1232]
	139 Move X9, [X9+1744]
	140 Move X20, X0
	141 Move X21, [X8]
	142 Move X0, [X9]
	143 Call 0x1C17F10
	144 Move X8, 0xC4D000
	145 Move X8, [X8+1728]
	146 Move X22, X0
	147 Move X1, [X8]
	148 Call Dictionary`2<Object, Object>..ctor, X0
	149 Move X8, 0xC87000
	150 Move X8, [X8+2008]
	151 Move X1, [X19+48]
	152 Move X0, [X8]
	153 Move X2, X31
	154 Call String.Concat, X0, X1
	155 Compare X22, 0
	156 JumpIfEqual {296}
	157 Move X8, 0xC87000
	158 Move X8, [X8+2000]
	159 Move X9, 0xC4D000
	160 Move X9, [X9+2064]
	161 Move X2, X0
	162 Move X1, [X8]
	163 Move X3, [X9]
	164 Move X0, X22
	165 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	166 Move X23, [X24+32]
	167 Compare X23, 0
	168 JumpIfEqual {297}
	169 Move X10, 0xC87000
	170 Move X8, [X23]
	171 Move X10, [X10+1976]
	172 Move W24, [X24+24]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X1, [X10]
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+56]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+56], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W24
	205 Move X6, X31
	206 Move X7, X31
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {298}
	211 Move X8, 0xC4F000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xC4F000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {250}
	225 Move X8, 0xC4F000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move X8, 0xC8A000
	231 Move X8, [X8+4056]
	232 Move X1, [X8]
	233 Call JsonParser.FromJson, X0
	234 Move TEMP, 1
	235 Not TEMP
	236 Move W8, TEMP
	237 Move [X19+8], W8
	238 Move X20, X0
	239 Move X0, [X25]
	240 Move X21, 0xC8A000
	241 Move W8, [X0+224]
	242 Move X21, [X21+4048]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X2, [X21]
	247 Move X0, X19
	248 Move X1, X20
	249 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	250 Move [X19], W31
	251 Move X8, [X31+8]
	252 Move [X19+56], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xC8A000
	259 Move X8, [X8+4040]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 8
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Move X20, [X31+64]
	266 Move X19, [X31+72]
	267 Move X22, [X31+48]
	268 Move X21, [X31+56]
	269 Move X24, [X31+32]
	270 Move X23, [X31+40]
	271 Move X30, [X31+16]
	272 Move X25, [X31+24]
	273 Add X31, X31, 80
	274 Return 
	275 Move X0, 0xC54000
	276 Move X0, [X0+1400]
	277 Call 0x1C17D08
	278 Call 0x1C17F10
	279 Move X20, X0
	280 Move X0, 0xC88000
	281 Move X0, [X0+752]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X20
	285 Move X2, X31
	286 Call ArgumentException..ctor, X0, X1
	287 Move X0, 0xC8A000
	288 Move X0, [X0+4072]
	289 Call 0x1C17D08
	290 Move X1, X0
	291 Move X0, X20
	292 Call 0x1C17DEC
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move X20, X0
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, X20
	302 Call 0x3EB2AD0
	303 Move X20, X0
	304 Move X0, 0xC4C000
	305 Move X0, [X0+2000]
	306 Call 0x1C17D08
	307 Move X8, [X20]
	308 Move X1, [X8]
	309 Call 0x1C18270
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {334}
	314 Move X20, [X20]
	315 Call 0x3EB2AE0
	316 Move TEMP, 1
	317 Not TEMP
	318 Move W8, TEMP
	319 Move [X19+8], W8
	320 Move X0, 0xC8A000
	321 Move X0, [X0+3208]
	322 Call 0x1C17D08
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, 0xC8A000
	328 Move X0, [X0+4080]
	329 Call 0x1C17D08
	330 Move X2, X0
	331 Move X0, X19
	332 Move X1, X20
	333 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	334 Move W0, 8
	335 Call 0x3EB2AF0
	336 Move X8, [X20]
	337 Move [X0], X8
	338 Move X1, 0xA0D000
	339 Add X1, X1, 3672
	340 Move X2, X31
	341 Call 0x3EB2B00
	342 Move X20, X0
	343 Call 0x3EB2AE0
	344 Move X0, X20
	345 Call 0x1D2D690
	346 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A8C7C BL 0x1C16DFC
	0x034A8C80 ADRP X0, 0xC8A000
	0x034A8C84 LDR X0, [X0 + 0x88]
	0x034A8C88 BL 0x1C16D08
	0x034A8C8C MOV X2, X0
	0x034A8C90 MOV X0, X19
	0x034A8C94 MOV X1, X20
	0x034A8C98 BL 0x26324C8
	0x034A8C9C B 0x34A8B64
	0x034A8CA0 MOVZ W0, 0x8
	0x034A8CA4 BL 0x3EB1AF0
	0x034A8CA8 LDR X8, [X20]
	0x034A8CAC STR X8, [X0]
	0x034A8CB0 ADRP X1, 0xA0C000
	0x034A8CB4 ADD X1, X1, 0xE58
	0x034A8CB8 MOV X2, X31
	0x034A8CBC BL 0x3EB1B00
	0x034A8CC0 MOV X20, X0
	0x034A8CC4 BL 0x3EB1AE0
	0x034A8CC8 MOV X0, X20
	0x034A8CCC BL 0x1D2C690
	0x034A8CD0 BL 0x1990590
	0x034A8CD4 STR X30, [X31 - 0x30]!
	0x034A8CD8 STP X22, X21, [X31 + 0x10]
	0x034A8CDC STP X20, X19, [X31 + 0x20]
	0x034A8CE0 ADRP X22, 0xF35000
	0x034A8CE4 ADRP X21, 0xC89000
	0x034A8CE8 LDRB W8, [X22 + 0xA0F]
	0x034A8CEC LDR X21, [X21 + 0xCA8]
	0x034A8CF0 MOV X19, X1
	0x034A8CF4 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF36000
	007 Move X21, 0xC8A000
	008 Move W8, [X22+2569]
	009 Move X21, [X21+3208]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC8A000
	017 Move X0, [X0+4088]
	018 Call 0x1C17CF4
	019 Move X0, 0xC8A000
	020 Move X0, [X0+3208]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2569], W8
	024 Move X0, [X21]
	025 Move X21, 0xC8A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4088]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

