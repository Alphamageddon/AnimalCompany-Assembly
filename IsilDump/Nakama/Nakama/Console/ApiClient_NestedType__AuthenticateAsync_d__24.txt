Type: Nakama.Console.ApiClient/<AuthenticateAsync>d__24

Method: System.Void MoveNext()

Disassembly:
	0x034A4DA8 STR X30, [X31 - 0x30]!
	0x034A4DAC STP X22, X21, [X31 + 0x10]
	0x034A4DB0 STP X20, X19, [X31 + 0x20]
	0x034A4DB4 ADRP X21, 0xF39000
	0x034A4DB8 ADRP X22, 0xC52000
	0x034A4DBC LDRB W8, [X21 + 0x9F9]
	0x034A4DC0 LDR X22, [X22 + 0x280]
	0x034A4DC4 MOV X19, X1
	0x034A4DC8 MOV X20, X0
	0x034A4DCC TBNZ X8, 0x0, 0x34A4DE4
	0x034A4DD0 ADRP X0, 0xC52000
	0x034A4DD4 LDR X0, [X0 + 0x280]
	0x034A4DD8 BL 0x1C16CF4
	0x034A4DDC MOVZ W8, 0x1
	0x034A4DE0 STRB W8, [X21 + 0x9F9]
	0x034A4DE4 LDR X0, [X22]
	0x034A4DE8 LDR W8, [X0 + 0xE0]
	0x034A4DEC CBNZ W8, 0x34A4DF4
	0x034A4DF0 BL 0x1C16DFC
	0x034A4DF4 ADD X0, X20, 0x8
	0x034A4DF8 MOV X1, X19
	0x034A4DFC LDP X20, X19, [X31 + 0x20]
	0x034A4E00 LDP X22, X21, [X31 + 0x10]
	0x034A4E04 MOV X2, X31
	0x034A4E08 LDR X30, [X31], #0x30
	0x034A4E0C B 0x32C477C
	0x034A4E10 SUB X31, X31, 0x50
	0x034A4E14 STP X30, X25, [X31 + 0x10]
	0x034A4E18 STP X24, X23, [X31 + 0x20]
	0x034A4E1C STP X22, X21, [X31 + 0x30]
	0x034A4E20 STP X20, X19, [X31 + 0x40]
	0x034A4E24 ADRP X20, 0xF39000
	0x034A4E28 LDRB W8, [X20 + 0x9FA]
	0x034A4E2C MOV X19, X0
	0x034A4E30 TBNZ X8, 0x0, 0x34A4F14
	0x034A4E34 ADRP X0, 0xC8D000
	0x034A4E38 LDR X0, [X0 + 0xED8]
	0x034A4E3C BL 0x1C16CF4
	0x034A4E40 ADRP X0, 0xC52000
	0x034A4E44 LDR X0, [X0 + 0x280]
	0x034A4E48 BL 0x1C16CF4
	0x034A4E4C ADRP X0, 0xC50000
	0x034A4E50 LDR X0, [X0 + 0x810]
	0x034A4E54 BL 0x1C16CF4
	0x034A4E58 ADRP X0, 0xC50000
	0x034A4E5C LDR X0, [X0 + 0x6C0]
	0x034A4E60 BL 0x1C16CF4
	0x034A4E64 ADRP X0, 0xC50000
	0x034A4E68 LDR X0, [X0 + 0x6D0]
	0x034A4E6C BL 0x1C16CF4
	0x034A4E70 ADRP X0, 0xC8A000
	0x034A4E74 LDR X0, [X0 + 0x7B8]
	0x034A4E78 BL 0x1C16CF4
	0x034A4E7C ADRP X0, 0xC52000
	0x034A4E80 LDR X0, [X0 + 0x1E0]
	0x034A4E84 BL 0x1C16CF4
	0x034A4E88 ADRP X0, 0xC52000
	0x034A4E8C LDR X0, [X0 + 0x1F0]
	0x034A4E90 BL 0x1C16CF4
	0x034A4E94 ADRP X0, 0xC52000
	0x034A4E98 LDR X0, [X0 + 0x1F8]
	0x034A4E9C BL 0x1C16CF4
	0x034A4EA0 ADRP X0, 0xC58000
	0x034A4EA4 LDR X0, [X0 + 0x3A0]
	0x034A4EA8 BL 0x1C16CF4
	0x034A4EAC ADRP X0, 0xC51000
	0x034A4EB0 LDR X0, [X0 + 0xA28]
	0x034A4EB4 BL 0x1C16CF4
	0x034A4EB8 ADRP X0, 0xC8D000
	0x034A4EBC LDR X0, [X0 + 0xEE0]
	0x034A4EC0 BL 0x1C16CF4
	0x034A4EC4 ADRP X0, 0xC8D000
	0x034A4EC8 LDR X0, [X0 + 0xEE8]
	0x034A4ECC BL 0x1C16CF4
	0x034A4ED0 ADRP X0, 0xC8A000
	0x034A4ED4 LDR X0, [X0 + 0x7D0]
	0x034A4ED8 BL 0x1C16CF4
	0x034A4EDC ADRP X0, 0xC8B000
	0x034A4EE0 LDR X0, [X0 + 0x2E8]
	0x034A4EE4 BL 0x1C16CF4
	0x034A4EE8 ADRP X0, 0xC8A000
	0x034A4EEC LDR X0, [X0 + 0x7D8]
	0x034A4EF0 BL 0x1C16CF4
	0x034A4EF4 ADRP X0, 0xC4F000
	0x034A4EF8 LDR X0, [X0 + 0x988]
	0x034A4EFC BL 0x1C16CF4
	0x034A4F00 ADRP X0, 0xC78000
	0x034A4F04 LDR X0, [X0 + 0x4C8]
	0x034A4F08 BL 0x1C16CF4
	0x034A4F0C MOVZ W8, 0x1
	0x034A4F10 STRB W8, [X20 + 0x9FA]
	0x034A4F14 STR X31, [X31 + 0x8]
	0x034A4F18 ADRP X25, 0xC52000
	0x034A4F1C LDR W8, [X19]
	0x034A4F20 LDR X25, [X25 + 0x280]
	0x034A4F24 CBZ W8, 0x34A50EC
	0x034A4F28 LDR X21, [X19 + 0x20]
	0x034A4F2C CBZ X21, 0x34A51FC
	0x034A4F30 LDR X8, [X19 + 0x28]
	0x034A4F34 CBZ X8, 0x34A5244
	0x034A4F38 ADRP X8, 0xC51000
	0x034A4F3C LDR X8, [X8 + 0xA28]
	0x034A4F40 LDR X0, [X8]
	0x034A4F44 ADRP X8, 0xC8D000
	0x034A4F48 LDR X8, [X8 + 0xEE8]
	0x034A4F4C LDR X24, [X19 + 0x30]
	0x034A4F50 LDR W9, [X0 + 0xE0]
	0x034A4F54 LDR X20, [X8]
	0x034A4F58 CBNZ W9, 0x34A4F60
	0x034A4F5C BL 0x1C16DFC
	0x034A4F60 MOV X0, X21
	0x034A4F64 MOV X1, X31
	0x034A4F68 BL 0x3624D20
	0x034A4F6C CBZ X20, 0x34A528C
	0x034A4F70 ADRP X8, 0xC8B000
	0x034A4F74 LDR X8, [X8 + 0x2E8]
	0x034A4F78 MOV X2, X0
	0x034A4F7C LDR X1, [X8]
	0x034A4F80 MOV X0, X20
	0x034A4F84 MOV X3, X31
	0x034A4F88 BL 0x32293BC
	0x034A4F8C MOV X20, X0
	0x034A4F90 LDR X0, [X19 + 0x28]
	0x034A4F94 MOV X1, X31
	0x034A4F98 BL 0x3624D20
	0x034A4F9C CBZ X20, 0x34A5290
	0x034A4FA0 ADRP X8, 0xC8D000
	0x034A4FA4 LDR X8, [X8 + 0xEE0]
	0x034A4FA8 MOV X2, X0
	0x034A4FAC LDR X1, [X8]
	0x034A4FB0 MOV X0, X20
	0x034A4FB4 MOV X3, X31
	0x034A4FB8 BL 0x32293BC
	0x034A4FBC CBZ X24, 0x34A5294
	0x034A4FC0 ADRP X8, 0xC4F000
	0x034A4FC4 ADRP X9, 0xC58000
	0x034A4FC8 LDR X8, [X8 + 0x988]
	0x034A4FCC LDR X9, [X9 + 0x3A0]
	0x034A4FD0 MOV X22, X0
	0x034A4FD4 LDR X23, [X24 + 0x10]
	0x034A4FD8 LDR X21, [X8]
	0x034A4FDC LDR X0, [X9]
	0x034A4FE0 BL 0x1C16F10
	0x034A4FE4 MOV X20, X0
	0x034A4FE8 MOV X1, X23
	0x034A4FEC MOV X2, X31
	0x034A4FF0 BL 0x36281F8
	0x034A4FF4 CBZ X20, 0x34A5298
	0x034A4FF8 MOV X0, X20
	0x034A4FFC MOV X1, X22
	0x034A5000 MOV X2, X31
	0x034A5004 BL 0x36288CC
	0x034A5008 MOV X0, X20
	0x034A500C MOV X1, X21
	0x034A5010 MOV X2, X31
	0x034A5014 BL 0x3628980
	0x034A5018 MOV X0, X20
	0x034A501C MOV X1, X31
	0x034A5020 BL 0x3628A38
	0x034A5024 ADRP X8, 0xC77000
	0x034A5028 ADRP X9, 0xC4F000
	0x034A502C LDR X8, [X8 + 0x4C8]
	0x034A5030 LDR X9, [X9 + 0x6D0]
	0x034A5034 MOV X20, X0
	0x034A5038 LDR X21, [X8]
	0x034A503C LDR X0, [X9]
	0x034A5040 BL 0x1C16F10
	0x034A5044 ADRP X8, 0xC4F000
	0x034A5048 LDR X8, [X8 + 0x6C0]
	0x034A504C MOV X22, X0
	0x034A5050 LDR X1, [X8]
	0x034A5054 BL 0x2AA4804
	0x034A5058 ADRP X8, 0xC89000
	0x034A505C LDR X8, [X8 + 0x7D8]
	0x034A5060 LDR X1, [X19 + 0x38]
	0x034A5064 LDR X0, [X8]
	0x034A5068 MOV X2, X31
	0x034A506C BL 0x321B938
	0x034A5070 CBZ X22, 0x34A529C
	0x034A5074 ADRP X8, 0xC89000
	0x034A5078 LDR X8, [X8 + 0x7D0]
	0x034A507C ADRP X9, 0xC4F000
	0x034A5080 LDR X9, [X9 + 0x810]
	0x034A5084 MOV X2, X0
	0x034A5088 LDR X1, [X8]
	0x034A508C LDR X3, [X9]
	0x034A5090 MOV X0, X22
	0x034A5094 BL 0x2AA5098
	0x034A5098 LDR X23, [X24 + 0x20]
	0x034A509C CBZ X23, 0x34A52A0
	0x034A50A0 ADRP X10, 0xC89000
	0x034A50A4 LDR X8, [X23]
	0x034A50A8 LDR X10, [X10 + 0x7B8]
	0x034A50AC LDR W24, [X24 + 0x18]
	0x034A50B0 LDRH W9, [X8 + 0x12E]
	0x034A50B4 LDR X1, [X10]
	0x034A50B8 CBZ X9, 0x34A50DC
	0x034A50BC LDR X10, [X8 + 0xB0]
	0x034A50C0 ADD X10, X10, 0x8
	0x034A50C4 LDUR X11, [X10 - 0x8]
	0x034A50C8 CMP X11, X1
	0x034A50CC B.EQ 0x34A5104
	0x034A50D0 SUBS X9, X9, 0x1
	0x034A50D4 ADD X10, X10, 0x10
	0x034A50D8 B.NE 0x34A50C4
	0x034A50DC MOVZ W2, 0x3
	0x034A50E0 MOV X0, X23
	0x034A50E4 BL 0x1C5C788
	0x034A50E8 B 0x34A5114
	0x034A50EC LDR X8, [X19 + 0x40]
	0x034A50F0 MOVN W9, 0x0
	0x034A50F4 STR X8, [X31 + 0x8]
	0x034A50F8 STR X31, [X19 + 0x40]
	0x034A50FC STR W9, [X19]
	0x034A5100 B 0x34A5170
	0x034A5104 LDR W9, [X10]
	0x034A5108 ADD W9, W9, 0x3
	0x034A510C ADD X8, X8, W9, 0x4, SXTW
	0x034A5110 ADD X0, X8, 0x138
	0x034A5114 LDP X8, X9, [X0]
	0x034A5118 MOV X0, X23
	0x034A511C MOV X1, X21
	0x034A5120 MOV X2, X20
	0x034A5124 MOV X3, X22
	0x034A5128 MOV X4, X31
	0x034A512C MOV W5, W24
	0x034A5130 MOV X6, X31
	0x034A5134 MOV X7, X31
	0x034A5138 STR X9, [X31]
	0x034A513C BLR X8
	0x034A5140 CBZ X0, 0x34A52A4
	0x034A5144 ADRP X8, 0xC51000
	0x034A5148 LDR X8, [X8 + 0x1F8]
	0x034A514C LDR X1, [X8]
	0x034A5150 BL 0x269F5D0
	0x034A5154 ADRP X8, 0xC51000
	0x034A5158 LDR X8, [X8 + 0x1F0]
	0x034A515C STR X0, [X31 + 0x8]
	0x034A5160 LDR X1, [X8]
	0x034A5164 ADD X0, X31, 0x8
	0x034A5168 BL 0x2677430
	0x034A516C TBZ X0, 0x0, 0x34A51AC
	0x034A5170 ADRP X8, 0xC51000
	0x034A5174 LDR X8, [X8 + 0x1E0]
	0x034A5178 ADD X0, X31, 0x8
	0x034A517C LDR X1, [X8]
	0x034A5180 BL 0x2677474
	0x034A5184 MOVN W8, 0x1
	0x034A5188 STR W8, [X19], #0x8
	0x034A518C LDR X0, [X25]
	0x034A5190 LDR W8, [X0 + 0xE0]
	0x034A5194 CBNZ W8, 0x34A519C
	0x034A5198 BL 0x1C16DFC
	0x034A519C MOV X0, X19
	0x034A51A0 MOV X1, X31
	0x034A51A4 BL 0x32C4864
	0x034A51A8 B 0x34A51E4
	0x034A51AC STR W31, [X19]
	0x034A51B0 LDR X8, [X31 + 0x8]
	0x034A51B4 STR X8, [X19 + 0x40]
	0x034A51B8 LDR X0, [X25]
	0x034A51BC LDR W8, [X0 + 0xE0]
	0x034A51C0 CBNZ W8, 0x34A51C8
	0x034A51C4 BL 0x1C16DFC
	0x034A51C8 ADRP X8, 0xC8C000
	0x034A51CC LDR X8, [X8 + 0xED8]
	0x034A51D0 ADD X0, X19, 0x8
	0x034A51D4 LDR X3, [X8]
	0x034A51D8 ADD X1, X31, 0x8
	0x034A51DC MOV X2, X19
	0x034A51E0 BL 0x21872F0
	0x034A51E4 LDP X20, X19, [X31 + 0x40]
	0x034A51E8 LDP X22, X21, [X31 + 0x30]
	0x034A51EC LDP X24, X23, [X31 + 0x20]
	0x034A51F0 LDP X30, X25, [X31 + 0x10]
	0x034A51F4 ADD X31, X31, 0x50
	0x034A51F8 RET
	0x034A51FC ADRP X0, 0xC56000
	0x034A5200 LDR X0, [X0 + 0x578]
	0x034A5204 BL 0x1C16D08
	0x034A5208 BL 0x1C16F10
	0x034A520C MOV X20, X0
	0x034A5210 ADRP X0, 0xC8A000
	0x034A5214 LDR X0, [X0 + 0x2F0]
	0x034A5218 BL 0x1C16D08
	0x034A521C MOV X1, X0
	0x034A5220 MOV X0, X20
	0x034A5224 MOV X2, X31
	0x034A5228 BL 0x3314A68
	0x034A522C ADRP X0, 0xC8C000
	0x034A5230 LDR X0, [X0 + 0xEF0]
	0x034A5234 BL 0x1C16D08
	0x034A5238 MOV X1, X0
	0x034A523C MOV X0, X20
	0x034A5240 BL 0x1C16DEC
	0x034A5244 ADRP X0, 0xC56000
	0x034A5248 LDR X0, [X0 + 0x578]
	0x034A524C BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xF3A000
	012 Move W8, [X20+2548]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {62}
	018 Move X0, 0xC8E000
	019 Move X0, [X0+3688]
	020 Call 0x1C17CF4
	021 Move X0, 0xC8E000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0xC8E000
	025 Move X0, [X0+3432]
	026 Call 0x1C17CF4
	027 Move X0, 0xC51000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xC51000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0xC8B000
	034 Move X0, [X0+1976]
	035 Call 0x1C17CF4
	036 Move X0, 0xC8E000
	037 Move X0, [X0+3704]
	038 Call 0x1C17CF4
	039 Move X0, 0xC53000
	040 Move X0, [X0+480]
	041 Call 0x1C17CF4
	042 Move X0, 0xC53000
	043 Move X0, [X0+496]
	044 Call 0x1C17CF4
	045 Move X0, 0xC53000
	046 Move X0, [X0+504]
	047 Call 0x1C17CF4
	048 Move X0, 0xC59000
	049 Move X0, [X0+928]
	050 Call 0x1C17CF4
	051 Move X0, 0xC79000
	052 Move X0, [X0+1240]
	053 Call 0x1C17CF4
	054 Move X0, 0xC8E000
	055 Move X0, [X0+3712]
	056 Call 0x1C17CF4
	057 Move X0, 0xC50000
	058 Move X0, [X0+2440]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+2548], W8
	062 Move [X31+24], X31
	063 Move X26, 0xC8E000
	064 Move W8, [X19]
	065 Move X26, [X26+3432]
	066 Compare W8, 0
	067 JumpIfEqual {149}
	068 Move X8, [X19+32]
	069 Compare X8, 0
	070 JumpIfEqual {239}
	071 Move X25, [X19+40]
	072 Compare X25, 0
	073 JumpIfEqual {257}
	074 Move X8, 0xC8E000
	075 Move X9, 0xC50000
	076 Move X10, 0xC59000
	077 Move X8, [X8+3712]
	078 Move X9, [X9+2440]
	079 Move X10, [X10+928]
	080 Move X23, [X25+16]
	081 Move X22, [X8]
	082 Move X21, [X9]
	083 Move X0, [X10]
	084 Call 0x1C17F10
	085 Move X20, X0
	086 Move X1, X23
	087 Move X2, X31
	088 Call UriBuilder..ctor, X0, X1
	089 Compare X20, 0
	090 JumpIfEqual {258}
	091 Move X0, X20
	092 Move X1, X22
	093 Move X2, X31
	094 Call UriBuilder.set_Path, X0, X1
	095 Move X0, X20
	096 Move X1, X21
	097 Move X2, X31
	098 Call UriBuilder.set_Query, X0, X1
	099 Move X0, X20
	100 Move X1, X31
	101 Call UriBuilder.get_Uri, X0
	102 Move X8, 0xC79000
	103 Move X9, 0xC51000
	104 Move X8, [X8+1240]
	105 Move X9, [X9+1744]
	106 Move X20, X0
	107 Move X21, [X8]
	108 Move X0, [X9]
	109 Call 0x1C17F10
	110 Move X8, 0xC51000
	111 Move X8, [X8+1728]
	112 Move X22, X0
	113 Move X1, [X8]
	114 Call Dictionary`2<Object, Object>..ctor, X0
	115 Move X0, [X19+32]
	116 Move X1, X31
	117 Call JsonWriter.ToJson, X0
	118 Move X23, X0
	119 Move X0, X31
	120 Call Encoding.get_UTF8
	121 Compare X0, 0
	122 JumpIfEqual {259}
	123 Move X8, [X0]
	124 Move X9, [X8+616]
	125 Move X2, [X8+624]
	126 Move X1, X23
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X24, [X25+32]
	129 Compare X24, 0
	130 JumpIfEqual {260}
	131 Move X10, 0xC8B000
	132 Move X8, [X24]
	133 Move X10, [X10+1976]
	134 Move W25, [X25+24]
	135 Move X23, X0
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Move X1, [X10]
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move W2, 3
	147 Move X0, X24
	148 Call 0x1C5D788
	149 Move X8, [X19+48]
	150 Move TEMP, 0
	151 Not TEMP
	152 Move W9, TEMP
	153 Move [X31+24], X8
	154 Move [X19+48], X31
	155 Move [X19], W9
	156 Move W9, [X10]
	157 Add W9, W9, 3
	158 Add X8, X8, W9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X9, [X0+8]
	162 Move X0, X24
	163 Move X1, X21
	164 Move X2, X20
	165 Move X3, X22
	166 Move X4, X23
	167 Move W5, W25
	168 Move X6, X31
	169 Move X7, X31
	170 Move [X31], X9
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X0, 0
	173 JumpIfEqual {261}
	174 Move X8, 0xC52000
	175 Move X8, [X8+504]
	176 Move X1, [X8]
	177 Call Task`1<Object>.GetAwaiter, X0
	178 Move X8, 0xC52000
	179 Move X8, [X8+496]
	180 Move [X31+24], X0
	181 Move X1, [X8]
	182 Add X0, X31, 24
	183 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {213}
	188 Move X8, 0xC52000
	189 Move X8, [X8+480]
	190 Add X0, X31, 24
	191 Move X1, [X8]
	192 Call TaskAwaiter`1<Object>.GetResult, X0
	193 Move X8, 0xC8D000
	194 Move X8, [X8+3704]
	195 Move X1, [X8]
	196 Call JsonParser.FromJson, X0
	197 Move TEMP, 1
	198 Not TEMP
	199 Move W8, TEMP
	200 Move [X19+8], W8
	201 Move X20, X0
	202 Move X0, [X26]
	203 Move X21, 0xC8D000
	204 Move W8, [X0+224]
	205 Move X21, [X21+3696]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X2, [X21]
	210 Move X0, X19
	211 Move X1, X20
	212 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	213 Move [X19], W31
	214 Move X8, [X31+24]
	215 Move [X19+48], X8
	216 Move X0, [X26]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X8, 0xC8D000
	222 Move X8, [X8+3688]
	223 Add X0, X19, 8
	224 Move X3, [X8]
	225 Add X1, X31, 24
	226 Move X2, X19
	227 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	228 Move X20, [X31+80]
	229 Move X19, [X31+88]
	230 Move X22, [X31+64]
	231 Move X21, [X31+72]
	232 Move X24, [X31+48]
	233 Move X23, [X31+56]
	234 Move X26, [X31+32]
	235 Move X25, [X31+40]
	236 Move X30, [X31+16]
	237 Add X31, X31, 96
	238 Return 
	239 Move X0, 0xC57000
	240 Move X0, [X0+1400]
	241 Call 0x1C17D08
	242 Call 0x1C17F10
	243 Move X20, X0
	244 Move X0, 0xC8A000
	245 Move X0, [X0+3016]
	246 Call 0x1C17D08
	247 Move X1, X0
	248 Move X0, X20
	249 Move X2, X31
	250 Call ArgumentException..ctor, X0, X1
	251 Move X0, 0xC8D000
	252 Move X0, [X0+3720]
	253 Call 0x1C17D08
	254 Move X1, X0
	255 Move X0, X20
	256 Call 0x1C17DEC
	257 Call 0x1C17F20
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Move X20, X0
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X0, X20
	265 Call 0x3EB2AD0
	266 Move X20, X0
	267 Move X0, 0xC4F000
	268 Move X0, [X0+2000]
	269 Call 0x1C17D08
	270 Move X8, [X20]
	271 Move X1, [X8]
	272 Call 0x1C18270
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {297}
	277 Move X20, [X20]
	278 Call 0x3EB2AE0
	279 Move TEMP, 1
	280 Not TEMP
	281 Move W8, TEMP
	282 Move [X19+8], W8
	283 Move X0, 0xC8D000
	284 Move X0, [X0+3432]
	285 Call 0x1C17D08
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X0, 0xC8D000
	291 Move X0, [X0+3728]
	292 Call 0x1C17D08
	293 Move X2, X0
	294 Move X0, X19
	295 Move X1, X20
	296 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	297 Move W0, 8
	298 Call 0x3EB2AF0
	299 Move X8, [X20]
	300 Move [X0], X8
	301 Move X1, 0xA10000
	302 Add X1, X1, 3672
	303 Move X2, X31
	304 Call 0x3EB2B00
	305 Move X20, X0
	306 Call 0x3EB2AE0
	307 Move X0, X20
	308 Call 0x1D2D690
	309 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A5250 BL 0x1C16F10
	0x034A5254 MOV X20, X0
	0x034A5258 ADRP X0, 0xC8C000
	0x034A525C LDR X0, [X0 + 0xEF8]
	0x034A5260 BL 0x1C16D08
	0x034A5264 MOV X1, X0
	0x034A5268 MOV X0, X20
	0x034A526C MOV X2, X31
	0x034A5270 BL 0x3314A68
	0x034A5274 ADRP X0, 0xC8C000
	0x034A5278 LDR X0, [X0 + 0xEF0]
	0x034A527C BL 0x1C16D08
	0x034A5280 MOV X1, X0
	0x034A5284 MOV X0, X20
	0x034A5288 BL 0x1C16DEC
	0x034A528C BL 0x1C16F20
	0x034A5290 BL 0x1C16F20
	0x034A5294 BL 0x1C16F20
	0x034A5298 BL 0x1C16F20
	0x034A529C BL 0x1C16F20
	0x034A52A0 BL 0x1C16F20
	0x034A52A4 BL 0x1C16F20
	0x034A52A8 B 0x34A52F8
	0x034A52AC B 0x34A52F8
	0x034A52B0 B 0x34A52F8
	0x034A52B4 B 0x34A52F8
	0x034A52B8 B 0x34A52F8
	0x034A52BC B 0x34A52F8
	0x034A52C0 B 0x34A52F8
	0x034A52C4 B 0x34A52F8
	0x034A52C8 B 0x34A52F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF39000
	007 Move X21, 0xC8D000
	008 Move W8, [X22+2549]
	009 Move X21, [X21+3432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC8D000
	017 Move X0, [X0+3736]
	018 Call 0x1C17CF4
	019 Move X0, 0xC8D000
	020 Move X0, [X0+3432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2549], W8
	024 Move X0, [X21]
	025 Move X21, 0xC8D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3736]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

