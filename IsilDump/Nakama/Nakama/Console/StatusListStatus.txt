Type: Nakama.Console.StatusListStatus

Method: System.Double get_AvgInputKbs()

Disassembly:
	0x0349CDE4 MOV X23, X0
	0x0349CDE8 LDR X0, [X26]

ISIL:
	001 Move V0, [X0+16]
	002 Return V0

Method: System.Void set_AvgInputKbs(System.Double value)

Disassembly:
	0x0349CDEC MOV X22, X1
	0x0349CDF0 MOVZ W1, 0x5

ISIL:
	001 Move [X0+16], D0
	002 Return 

Method: System.Double get_AvgLatencyMs()

Disassembly:
	0x0349CDF4 BL 0x1C16D6C
	0x0349CDF8 CBZ X0, 0x349CF24

ISIL:
	001 Move V0, [X0+24]
	002 Return V0

Method: System.Void set_AvgLatencyMs(System.Double value)

Disassembly:
	0x0349CDFC LDR W8, [X0 + 0x18]
	0x0349CE00 CBZ W8, 0x349CF2C

ISIL:
	001 Move [X0+24], D0
	002 Return 

Method: System.Double get_AvgOutputKbs()

Disassembly:
	0x0349CE04 LDR X9, [X24]
	0x0349CE08 CMP W8, 0x1

ISIL:
	001 Move V0, [X0+32]
	002 Return V0

Method: System.Void set_AvgOutputKbs(System.Double value)

Disassembly:
	0x0349CE0C STR X9, [X0 + 0x20]
	0x0349CE10 B.EQ 0x349CF20

ISIL:
	001 Move [X0+32], D0
	002 Return 

Method: System.Double get_AvgRateSec()

Disassembly:
	0x0349CE14 CMP W8, 0x2
	0x0349CE18 STR X23, [X0 + 0x28]

ISIL:
	001 Move V0, [X0+40]
	002 Return V0

Method: System.Void set_AvgRateSec(System.Double value)

Disassembly:
	0x0349CE1C B.LS 0x349CF30
	0x0349CE20 LDR X9, [X25]

ISIL:
	001 Move [X0+40], D0
	002 Return 

Method: System.Int32 get_GoroutineCount()

Disassembly:
	0x0349CE24 CMP W8, 0x3
	0x0349CE28 STR X9, [X0 + 0x30]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_GoroutineCount(System.Int32 value)

Disassembly:
	0x0349CE2C B.EQ 0x349CF34
	0x0349CE30 CMP W8, 0x4

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Int32 get_Health()

Disassembly:
	0x0349CE34 STR X22, [X0 + 0x38]
	0x0349CE38 B.LS 0x349CF28

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_Health(System.Int32 value)

Disassembly:
	0x0349CE3C LDR X8, [X19]
	0x0349CE40 STR X8, [X0 + 0x40]

ISIL:
	001 Move [X0+52], W1
	002 Return 

Method: System.Int32 get_MatchCount()

Disassembly:
	0x0349CE44 MOV X1, X31
	0x0349CE48 BL 0x32278CC

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_MatchCount(System.Int32 value)

Disassembly:
	0x0349CE4C MOV X1, X0
	0x0349CE50 MOV X0, X21

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.String get_Name()

Disassembly:
	0x0349CE54 MOV X2, X31
	0x0349CE58 BL 0x321B938

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x0349CE5C B 0x349CD28
	0x0349CE60 MOV X22, X31

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Int32 get_PresenceCount()

Disassembly:
	0x0349CE64 CBZ X20, 0x349CEC8
	0x0349CE68 LDR X8, [X20]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_PresenceCount(System.Int32 value)

Disassembly:
	0x0349CE6C ADRP X10, 0xC57000
	0x0349CE70 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Int32 get_SessionCount()

Disassembly:
	0x0349CE74 LDR X10, [X10 + 0xE00]
	0x0349CE78 LDR X1, [X10]

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Void set_SessionCount(System.Int32 value)

Disassembly:
	0x0349CE7C CBZ X9, 0x349CEA0
	0x0349CE80 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X0+76], W1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0349CE84 ADD X10, X10, 0x8
	0x0349CE88 LDUR X11, [X10 - 0x8]
	0x0349CE8C CMP X11, X1
	0x0349CE90 B.EQ 0x349CEB0
	0x0349CE94 SUBS X9, X9, 0x1
	0x0349CE98 ADD X10, X10, 0x10
	0x0349CE9C B.NE 0x349CE88
	0x0349CEA0 MOV X0, X20
	0x0349CEA4 MOV W2, W31
	0x0349CEA8 BL 0x1C5C788
	0x0349CEAC B 0x349CEBC
	0x0349CEB0 LDRSW X9, [X10]
	0x0349CEB4 ADD X8, X8, X9, 0x4, LSL
	0x0349CEB8 ADD X0, X8, 0x138
	0x0349CEBC LDP X8, X1, [X0]
	0x0349CEC0 MOV X0, X20
	0x0349CEC4 BLR X8
	0x0349CEC8 CBNZ X22, 0x349CF3C
	0x0349CECC ADRP X8, 0xC91000
	0x0349CED0 LDR X8, [X8 + 0xD80]
	0x0349CED4 MOV X1, X21
	0x0349CED8 MOV X3, X31
	0x0349CEDC LDR X0, [X8]
	0x0349CEE0 ADRP X8, 0xC57000
	0x0349CEE4 LDR X8, [X8 + 0x848]
	0x0349CEE8 LDR X2, [X8]
	0x0349CEEC BL 0x32274B8
	0x0349CEF0 MOV X1, X0
	0x0349CEF4 LDR X0, [X31 + 0x8]
	0x0349CEF8 LDP X20, X19, [X31 + 0x60]
	0x0349CEFC LDP X22, X21, [X31 + 0x50]
	0x0349CF00 LDP X24, X23, [X31 + 0x40]
	0x0349CF04 LDP X26, X25, [X31 + 0x30]
	0x0349CF08 LDP X28, X27, [X31 + 0x20]
	0x0349CF0C LDP X29, X30, [X31 + 0x10]
	0x0349CF10 MOV X2, X31
	0x0349CF14 ADD X31, X31, 0x70
	0x0349CF18 B 0x321B938
	0x0349CF1C BL 0x1C16F20
	0x0349CF20 BL 0x1C16F28
	0x0349CF24 BL 0x1C16F20
	0x0349CF28 BL 0x1C16F28
	0x0349CF2C BL 0x1C16F28
	0x0349CF30 BL 0x1C16F28
	0x0349CF34 BL 0x1C16F28
	0x0349CF38 BL 0x1C16F20
	0x0349CF3C MOV X0, X22
	0x0349CF40 BL 0x1C16F18
	0x0349CF44 B 0x349CF70
	0x0349CF48 B 0x349CF70
	0x0349CF4C B 0x349CF70
	0x0349CF50 B 0x349CF70
	0x0349CF54 B 0x349CF70
	0x0349CF58 B 0x349CF70
	0x0349CF5C B 0x349CF70
	0x0349CF60 MOV X21, X27
	0x0349CF64 B 0x349CF70
	0x0349CF68 B 0x349CF70
	0x0349CF6C B 0x349CF70
	0x0349CF70 CMP W1, 0x1
	0x0349CF74 B.NE 0x349CF88
	0x0349CF78 BL 0x3EB1AD0
	0x0349CF7C LDR X22, [X0]
	0x0349CF80 BL 0x3EB1AE0
	0x0349CF84 B 0x349CE64
	0x0349CF88 MOV X19, X0
	0x0349CF8C MOV X22, X31
	0x0349CF90 B 0x349CF98
	0x0349CF94 MOV X19, X0
	0x0349CF98 CBZ X20, 0x349CFFC
	0x0349CF9C LDR X8, [X20]
	0x0349CFA0 ADRP X10, 0xC57000
	0x0349CFA4 LDRH W9, [X8 + 0x12E]
	0x0349CFA8 LDR X10, [X10 + 0xE00]
	0x0349CFAC LDR X1, [X10]
	0x0349CFB0 CBZ X9, 0x349CFD4
	0x0349CFB4 LDR X10, [X8 + 0xB0]
	0x0349CFB8 ADD X10, X10, 0x8
	0x0349CFBC LDUR X11, [X10 - 0x8]
	0x0349CFC0 CMP X11, X1
	0x0349CFC4 B.EQ 0x349CFE4
	0x0349CFC8 SUBS X9, X9, 0x1
	0x0349CFCC ADD X10, X10, 0x10
	0x0349CFD0 B.NE 0x349CFBC
	0x0349CFD4 MOV X0, X20
	0x0349CFD8 MOV W2, W31
	0x0349CFDC BL 0x1C5C788
	0x0349CFE0 B 0x349CFF0
	0x0349CFE4 LDRSW X9, [X10]
	0x0349CFE8 ADD X8, X8, X9, 0x4, LSL
	0x0349CFEC ADD X0, X8, 0x138
	0x0349CFF0 LDP X8, X1, [X0]
	0x0349CFF4 MOV X0, X20
	0x0349CFF8 BLR X8
	0x0349CFFC CBNZ X22, 0x349D008
	0x0349D000 MOV X0, X19
	0x0349D004 BL 0x1D2C690
	0x0349D008 MOV X0, X22
	0x0349D00C BL 0x1C16F18
	0x0349D010 BL 0x1990590
	0x0349D014 MOV X1, X31
	0x0349D018 B 0x33BDD8C
	0x0349D01C LDR X0, [X0 + 0x10]
	0x0349D020 RET
	0x0349D024 STR X1, [X0 + 0x10]
	0x0349D028 RET
	0x0349D02C LDR W0, [X0 + 0x18]
	0x0349D030 RET
	0x0349D034 STR W1, [X0 + 0x18]
	0x0349D038 RET
	0x0349D03C LDR X0, [X0 + 0x20]
	0x0349D040 RET
	0x0349D044 STR X1, [X0 + 0x20]
	0x0349D048 RET
	0x0349D04C LDR X0, [X0 + 0x28]
	0x0349D050 RET
	0x0349D054 STR X1, [X0 + 0x28]
	0x0349D058 RET
	0x0349D05C LDR X0, [X0 + 0x30]
	0x0349D060 RET
	0x0349D064 STR X1, [X0 + 0x30]
	0x0349D068 RET
	0x0349D06C LDR X0, [X0 + 0x38]
	0x0349D070 RET
	0x0349D074 STR X1, [X0 + 0x38]
	0x0349D078 RET
	0x0349D07C LDRB W0, [X0 + 0x40]
	0x0349D080 RET
	0x0349D084 AND W8, W1, 0x1
	0x0349D088 STRB W8, [X0 + 0x40]
	0x0349D08C RET
	0x0349D090 LDR X0, [X0 + 0x48]
	0x0349D094 RET
	0x0349D098 STR X1, [X0 + 0x48]
	0x0349D09C RET
	0x0349D0A0 LDR X0, [X0 + 0x50]
	0x0349D0A4 RET
	0x0349D0A8 STR X1, [X0 + 0x50]
	0x0349D0AC RET
	0x0349D0B0 LDR X0, [X0 + 0x58]
	0x0349D0B4 RET
	0x0349D0B8 STR X1, [X0 + 0x58]
	0x0349D0BC RET
	0x0349D0C0 LDR X0, [X0 + 0x60]
	0x0349D0C4 RET
	0x0349D0C8 STR X1, [X0 + 0x60]
	0x0349D0CC RET
	0x0349D0D0 LDR X0, [X0 + 0x68]
	0x0349D0D4 RET
	0x0349D0D8 STR X1, [X0 + 0x68]
	0x0349D0DC RET
	0x0349D0E0 LDR X0, [X0 + 0x70]
	0x0349D0E4 RET
	0x0349D0E8 STR X1, [X0 + 0x70]
	0x0349D0EC RET
	0x0349D0F0 SUB X31, X31, 0x60
	0x0349D0F4 STP X30, X27, [X31 + 0x10]
	0x0349D0F8 STP X26, X25, [X31 + 0x20]
	0x0349D0FC STP X24, X23, [X31 + 0x30]
	0x0349D100 STP X22, X21, [X31 + 0x40]
	0x0349D104 STP X20, X19, [X31 + 0x50]
	0x0349D108 ADRP X21, 0xF40000
	0x0349D10C ADRP X24, 0xC56000
	0x0349D110 ADRP X20, 0xC90000
	0x0349D114 ADRP X22, 0xC56000
	0x0349D118 ADRP X23, 0xC56000
	0x0349D11C LDRB W8, [X21 + 0x9AA]
	0x0349D120 LDR X24, [X24 + 0x988]
	0x0349D124 LDR X20, [X20 + 0xDD0]
	0x0349D128 LDR X22, [X22 + 0x838]
	0x0349D12C LDR X23, [X23 + 0x9D0]
	0x0349D130 MOV X19, X0
	0x0349D134 TBNZ X8, 0x0, 0x349D218
	0x0349D138 ADRP X0, 0xC56000
	0x0349D13C LDR X0, [X0 + 0xB58]
	0x0349D140 BL 0x1C16CF4
	0x0349D144 ADRP X0, 0xC56000
	0x0349D148 LDR X0, [X0 + 0x758]
	0x0349D14C BL 0x1C16CF4
	0x0349D150 ADRP X0, 0xC56000
	0x0349D154 LDR X0, [X0 + 0x9D0]
	0x0349D158 BL 0x1C16CF4
	0x0349D15C ADRP X0, 0xC90000
	0x0349D160 LDR X0, [X0 + 0xDD8]
	0x0349D164 BL 0x1C16CF4
	0x0349D168 ADRP X0, 0xC90000
	0x0349D16C LDR X0, [X0 + 0xDE0]
	0x0349D170 BL 0x1C16CF4
	0x0349D174 ADRP X0, 0xC56000
	0x0349D178 LDR X0, [X0 + 0x838]
	0x0349D17C BL 0x1C16CF4
	0x0349D180 ADRP X0, 0xC90000
	0x0349D184 LDR X0, [X0 + 0xDE8]
	0x0349D188 BL 0x1C16CF4
	0x0349D18C ADRP X0, 0xC90000
	0x0349D190 LDR X0, [X0 + 0xDF0]
	0x0349D194 BL 0x1C16CF4
	0x0349D198 ADRP X0, 0xC90000
	0x0349D19C LDR X0, [X0 + 0xDF8]
	0x0349D1A0 BL 0x1C16CF4
	0x0349D1A4 ADRP X0, 0xC90000
	0x0349D1A8 LDR X0, [X0 + 0xE00]
	0x0349D1AC BL 0x1C16CF4
	0x0349D1B0 ADRP X0, 0xC90000
	0x0349D1B4 LDR X0, [X0 + 0xE08]
	0x0349D1B8 BL 0x1C16CF4
	0x0349D1BC ADRP X0, 0xC56000
	0x0349D1C0 LDR X0, [X0 + 0x988]
	0x0349D1C4 BL 0x1C16CF4
	0x0349D1C8 ADRP X0, 0xC90000
	0x0349D1CC LDR X0, [X0 + 0xE10]
	0x0349D1D0 BL 0x1C16CF4
	0x0349D1D4 ADRP X0, 0xC90000
	0x0349D1D8 LDR X0, [X0 + 0xE18]
	0x0349D1DC BL 0x1C16CF4
	0x0349D1E0 ADRP X0, 0xC90000
	0x0349D1E4 LDR X0, [X0 + 0xE20]
	0x0349D1E8 BL 0x1C16CF4
	0x0349D1EC ADRP X0, 0xC90000
	0x0349D1F0 LDR X0, [X0 + 0xDD0]
	0x0349D1F4 BL 0x1C16CF4
	0x0349D1F8 ADRP X0, 0xC90000
	0x0349D1FC LDR X0, [X0 + 0xE28]
	0x0349D200 BL 0x1C16CF4
	0x0349D204 ADRP X0, 0xC90000
	0x0349D208 LDR X0, [X0 + 0xE30]
	0x0349D20C BL 0x1C16CF4
	0x0349D210 MOVZ W8, 0x1
	0x0349D214 STRB W8, [X21 + 0x9AA]
	0x0349D218 LDR X0, [X24]
	0x0349D21C LDR X2, [X19 + 0x10]
	0x0349D220 LDR X1, [X20]
	0x0349D224 LDR X3, [X22]
	0x0349D228 MOV X4, X31
	0x0349D22C BL 0x32277C4
	0x0349D230 LDR X8, [X23]
	0x0349D234 MOV X21, X0
	0x0349D238 MOVZ W1, 0x4
	0x0349D23C MOV X0, X8
	0x0349D240 BL 0x1C16D6C
	0x0349D244 CBZ X0, 0x349D55C
	0x0349D248 MOV X20, X0
	0x0349D24C CBZ X21, 0x349D264
	0x0349D250 LDR X8, [X20]
	0x0349D254 MOV X0, X21
	0x0349D258 LDR X1, [X8 + 0x40]
	0x0349D25C BL 0x1C16E00
	0x0349D260 CBZ X0, 0x349D550
	0x0349D264 LDR W8, [X20 + 0x18]
	0x0349D268 CBZ W8, 0x349D54C
	0x0349D26C ADRP X24, 0xC90000
	0x0349D270 LDR X24, [X24 + 0xE20]
	0x0349D274 STR X21, [X20 + 0x20]
	0x0349D278 LDR X0, [X24]
	0x0349D27C CBZ X0, 0x349D294
	0x0349D280 LDR X8, [X20]
	0x0349D284 LDR X1, [X8 + 0x40]
	0x0349D288 BL 0x1C16E00
	0x0349D28C CBZ X0, 0x349D550
	0x0349D290 LDR W8, [X20 + 0x18]
	0x0349D294 CMP W8, 0x1
	0x0349D298 B.LS 0x349D54C
	0x0349D29C LDR X8, [X24]
	0x0349D2A0 ADRP X9, 0xC56000
	0x0349D2A4 LDR X9, [X9 + 0x758]
	0x0349D2A8 ADD X1, X31, 0xC
	0x0349D2AC STR X8, [X20 + 0x28]
	0x0349D2B0 LDR W8, [X19 + 0x18]
	0x0349D2B4 LDR X0, [X9]
	0x0349D2B8 STR W8, [X31 + 0xC]
	0x0349D2BC BL 0x1C16E04
	0x0349D2C0 MOV X21, X0
	0x0349D2C4 CBZ X0, 0x349D2DC
	0x0349D2C8 LDR X8, [X20]
	0x0349D2CC MOV X0, X21
	0x0349D2D0 LDR X1, [X8 + 0x40]
	0x0349D2D4 BL 0x1C16E00
	0x0349D2D8 CBZ X0, 0x349D550
	0x0349D2DC LDR W8, [X20 + 0x18]
	0x0349D2E0 CMP W8, 0x2
	0x0349D2E4 B.LS 0x349D54C
	0x0349D2E8 STR X21, [X20 + 0x30]
	0x0349D2EC LDR X0, [X22]
	0x0349D2F0 CBZ X0, 0x349D308
	0x0349D2F4 LDR X8, [X20]
	0x0349D2F8 LDR X1, [X8 + 0x40]
	0x0349D2FC BL 0x1C16E00
	0x0349D300 CBZ X0, 0x349D550
	0x0349D304 LDR W8, [X20 + 0x18]
	0x0349D308 CMP W8, 0x3
	0x0349D30C B.LS 0x349D54C
	0x0349D310 ADRP X21, 0xC90000
	0x0349D314 LDR X21, [X21 + 0xDD8]
	0x0349D318 LDR X8, [X22]
	0x0349D31C ADRP X24, 0xC90000
	0x0349D320 ADRP X25, 0xC90000
	0x0349D324 ADRP X26, 0xC90000
	0x0349D328 LDR X24, [X24 + 0xDE0]
	0x0349D32C LDR X25, [X25 + 0xDF8]
	0x0349D330 LDR X26, [X26 + 0xE00]
	0x0349D334 MOV X0, X20
	0x0349D338 MOV X1, X31
	0x0349D33C STR X8, [X20 + 0x38]
	0x0349D340 BL 0x3227578
	0x0349D344 LDR X2, [X19 + 0x20]
	0x0349D348 LDR X1, [X21]
	0x0349D34C LDR X3, [X22]
	0x0349D350 MOV X4, X31
	0x0349D354 BL 0x32277C4
	0x0349D358 LDR X2, [X19 + 0x28]
	0x0349D35C LDR X1, [X24]
	0x0349D360 LDR X3, [X22]
	0x0349D364 MOV X4, X31
	0x0349D368 BL 0x32277C4
	0x0349D36C LDR X2, [X19 + 0x30]
	0x0349D370 LDR X1, [X25]
	0x0349D374 LDR X3, [X22]
	0x0349D378 MOV X4, X31
	0x0349D37C BL 0x32277C4
	0x0349D380 LDR X2, [X19 + 0x38]
	0x0349D384 LDR X1, [X26]
	0x0349D388 LDR X3, [X22]
	0x0349D38C MOV X4, X31
	0x0349D390 BL 0x32277C4
	0x0349D394 LDR X8, [X23]
	0x0349D398 MOV X21, X0
	0x0349D39C MOVZ W1, 0x4
	0x0349D3A0 MOV X0, X8
	0x0349D3A4 BL 0x1C16D6C
	0x0349D3A8 CBZ X0, 0x349D55C
	0x0349D3AC MOV X20, X0
	0x0349D3B0 CBZ X21, 0x349D3C8
	0x0349D3B4 LDR X8, [X20]
	0x0349D3B8 MOV X0, X21
	0x0349D3BC LDR X1, [X8 + 0x40]
	0x0349D3C0 BL 0x1C16E00
	0x0349D3C4 CBZ X0, 0x349D550
	0x0349D3C8 LDR W8, [X20 + 0x18]
	0x0349D3CC CBZ W8, 0x349D54C
	0x0349D3D0 ADRP X23, 0xC90000
	0x0349D3D4 LDR X23, [X23 + 0xE28]
	0x0349D3D8 STR X21, [X20 + 0x20]
	0x0349D3DC LDR X0, [X23]
	0x0349D3E0 CBZ X0, 0x349D3F8
	0x0349D3E4 LDR X8, [X20]
	0x0349D3E8 LDR X1, [X8 + 0x40]
	0x0349D3EC BL 0x1C16E00
	0x0349D3F0 CBZ X0, 0x349D550
	0x0349D3F4 LDR W8, [X20 + 0x18]
	0x0349D3F8 CMP W8, 0x1
	0x0349D3FC B.LS 0x349D54C
	0x0349D400 LDR X8, [X23]
	0x0349D404 ADRP X9, 0xC56000
	0x0349D408 LDR X9, [X9 + 0xB58]
	0x0349D40C ADD X1, X31, 0x8
	0x0349D410 STR X8, [X20 + 0x28]
	0x0349D414 LDRB W8, [X19 + 0x40]
	0x0349D418 LDR X0, [X9]
	0x0349D41C STRB W8, [X31 + 0x8]
	0x0349D420 BL 0x1C16E04
	0x0349D424 MOV X21, X0
	0x0349D428 CBZ X0, 0x349D440
	0x0349D42C LDR X8, [X20]
	0x0349D430 MOV X0, X21
	0x0349D434 LDR X1, [X8 + 0x40]
	0x0349D438 BL 0x1C16E00
	0x0349D43C CBZ X0, 0x349D550
	0x0349D440 LDR W8, [X20 + 0x18]
	0x0349D444 CMP W8, 0x2
	0x0349D448 B.LS 0x349D54C
	0x0349D44C STR X21, [X20 + 0x30]
	0x0349D450 LDR X0, [X22]
	0x0349D454 CBZ X0, 0x349D46C
	0x0349D458 LDR X8, [X20]
	0x0349D45C LDR X1, [X8 + 0x40]
	0x0349D460 BL 0x1C16E00
	0x0349D464 CBZ X0, 0x349D550
	0x0349D468 LDR W8, [X20 + 0x18]
	0x0349D46C CMP W8, 0x3
	0x0349D470 B.LS 0x349D54C
	0x0349D474 ADRP X23, 0xC90000
	0x0349D478 ADRP X24, 0xC90000
	0x0349D47C ADRP X25, 0xC90000
	0x0349D480 LDR X23, [X23 + 0xE08]
	0x0349D484 LDR X24, [X24 + 0xE10]
	0x0349D488 LDR X25, [X25 + 0xDE8]
	0x0349D48C LDR X8, [X22]
	0x0349D490 ADRP X26, 0xC90000
	0x0349D494 ADRP X27, 0xC90000
	0x0349D498 ADRP X21, 0xC90000
	0x0349D49C LDR X26, [X26 + 0xE18]
	0x0349D4A0 LDR X27, [X27 + 0xDF0]
	0x0349D4A4 LDR X21, [X21 + 0xE30]
	0x0349D4A8 MOV X0, X20
	0x0349D4AC MOV X1, X31
	0x0349D4B0 STR X8, [X20 + 0x38]
	0x0349D4B4 BL 0x3227578
	0x0349D4B8 LDR X2, [X19 + 0x48]
	0x0349D4BC LDR X1, [X23]
	0x0349D4C0 LDR X3, [X22]
	0x0349D4C4 MOV X4, X31
	0x0349D4C8 BL 0x32277C4
	0x0349D4CC LDR X2, [X19 + 0x50]
	0x0349D4D0 LDR X1, [X24]
	0x0349D4D4 LDR X3, [X22]
	0x0349D4D8 MOV X4, X31
	0x0349D4DC BL 0x32277C4
	0x0349D4E0 LDR X2, [X19 + 0x58]
	0x0349D4E4 LDR X1, [X25]
	0x0349D4E8 LDR X3, [X22]
	0x0349D4EC MOV X4, X31
	0x0349D4F0 BL 0x32277C4
	0x0349D4F4 LDR X2, [X19 + 0x60]
	0x0349D4F8 LDR X1, [X26]
	0x0349D4FC LDR X3, [X22]
	0x0349D500 MOV X4, X31
	0x0349D504 BL 0x32277C4
	0x0349D508 LDR X2, [X19 + 0x68]
	0x0349D50C LDR X1, [X27]
	0x0349D510 LDR X3, [X22]
	0x0349D514 MOV X4, X31
	0x0349D518 BL 0x32277C4
	0x0349D51C LDR X2, [X19 + 0x70]
	0x0349D520 LDR X1, [X21]
	0x0349D524 LDR X3, [X22]
	0x0349D528 MOV X4, X31
	0x0349D52C BL 0x32277C4
	0x0349D530 LDP X20, X19, [X31 + 0x50]
	0x0349D534 LDP X22, X21, [X31 + 0x40]
	0x0349D538 LDP X24, X23, [X31 + 0x30]
	0x0349D53C LDP X26, X25, [X31 + 0x20]
	0x0349D540 LDP X30, X27, [X31 + 0x10]
	0x0349D544 ADD X31, X31, 0x60
	0x0349D548 RET
	0x0349D54C BL 0x1C16F28
	0x0349D550 BL 0x1C16F44
	0x0349D554 MOV X1, X31
	0x0349D558 BL 0x1C16DEC
	0x0349D55C BL 0x1C16F20
	0x0349D560 MOV X1, X31
	0x0349D564 B 0x33BDD8C
	0x0349D568 LDR W0, [X0 + 0x10]
	0x0349D56C RET
	0x0349D570 STR W1, [X0 + 0x10]
	0x0349D574 RET
	0x0349D578 LDR X0, [X0 + 0x18]
	0x0349D57C RET
	0x0349D580 LDR X0, [X0 + 0x18]
	0x0349D584 RET
	0x0349D588 STR X1, [X0 + 0x18]
	0x0349D58C RET
	0x0349D590 SUB X31, X31, 0x40
	0x0349D594 STP X30, X23, [X31 + 0x10]
	0x0349D598 STP X22, X21, [X31 + 0x20]
	0x0349D59C STP X20, X19, [X31 + 0x30]
	0x0349D5A0 ADRP X20, 0xF40000
	0x0349D5A4 ADRP X21, 0xC56000
	0x0349D5A8 ADRP X22, 0xC56000
	0x0349D5AC LDRB W8, [X20 + 0x9AB]
	0x0349D5B0 LDR X21, [X21 + 0x988]
	0x0349D5B4 LDR X22, [X22 + 0x9D0]
	0x0349D5B8 MOV X19, X0
	0x0349D5BC TBNZ X8, 0x0, 0x349D610
	0x0349D5C0 ADRP X0, 0xC56000
	0x0349D5C4 LDR X0, [X0 + 0x758]
	0x0349D5C8 BL 0x1C16CF4
	0x0349D5CC ADRP X0, 0xC56000
	0x0349D5D0 LDR X0, [X0 + 0x9D0]
	0x0349D5D4 BL 0x1C16CF4
	0x0349D5D8 ADRP X0, 0xC90000
	0x0349D5DC LDR X0, [X0 + 0xCE8]
	0x0349D5E0 BL 0x1C16CF4
	0x0349D5E4 ADRP X0, 0xC90000
	0x0349D5E8 LDR X0, [X0 + 0xCF0]
	0x0349D5EC BL 0x1C16CF4
	0x0349D5F0 ADRP X0, 0xC56000
	0x0349D5F4 LDR X0, [X0 + 0x838]
	0x0349D5F8 BL 0x1C16CF4
	0x0349D5FC ADRP X0, 0xC56000
	0x0349D600 LDR X0, [X0 + 0x988]
	0x0349D604 BL 0x1C16CF4
	0x0349D608 MOVZ W8, 0x1
	0x0349D60C STRB W8, [X20 + 0x9AB]
	0x0349D610 LDR X0, [X22]
	0x0349D614 LDR X21, [X21]
	0x0349D618 MOVZ W1, 0x4
	0x0349D61C BL 0x1C16D6C
	0x0349D620 CBZ X0, 0x349D804
	0x0349D624 MOV X20, X0
	0x0349D628 CBZ X21, 0x349D640
	0x0349D62C LDR X8, [X20]
	0x0349D630 MOV X0, X21
	0x0349D634 LDR X1, [X8 + 0x40]
	0x0349D638 BL 0x1C16E00
	0x0349D63C CBZ X0, 0x349D7F8
	0x0349D640 LDR W8, [X20 + 0x18]
	0x0349D644 CBZ W8, 0x349D7F4
	0x0349D648 ADRP X23, 0xC90000
	0x0349D64C LDR X23, [X23 + 0xCE8]
	0x0349D650 STR X21, [X20 + 0x20]
	0x0349D654 LDR X0, [X23]
	0x0349D658 CBZ X0, 0x349D670
	0x0349D65C LDR X8, [X20]
	0x0349D660 LDR X1, [X8 + 0x40]
	0x0349D664 BL 0x1C16E00
	0x0349D668 CBZ X0, 0x349D7F8
	0x0349D66C LDR W8, [X20 + 0x18]
	0x0349D670 CMP W8, 0x1
	0x0349D674 B.LS 0x349D7F4
	0x0349D678 LDR X8, [X23]
	0x0349D67C ADRP X9, 0xC56000
	0x0349D680 LDR X9, [X9 + 0x758]
	0x0349D684 ADD X1, X31, 0xC
	0x0349D688 STR X8, [X20 + 0x28]
	0x0349D68C LDR W8, [X19 + 0x10]
	0x0349D690 LDR X0, [X9]
	0x0349D694 STR W8, [X31 + 0xC]
	0x0349D698 BL 0x1C16E04
	0x0349D69C MOV X21, X0
	0x0349D6A0 CBZ X0, 0x349D6B8
	0x0349D6A4 LDR X8, [X20]
	0x0349D6A8 MOV X0, X21
	0x0349D6AC LDR X1, [X8 + 0x40]
	0x0349D6B0 BL 0x1C16E00
	0x0349D6B4 CBZ X0, 0x349D7F8
	0x0349D6B8 LDR W8, [X20 + 0x18]
	0x0349D6BC CMP W8, 0x2
	0x0349D6C0 B.LS 0x349D7F4
	0x0349D6C4 ADRP X23, 0xC56000
	0x0349D6C8 LDR X23, [X23 + 0x838]
	0x0349D6CC STR X21, [X20 + 0x30]
	0x0349D6D0 LDR X0, [X23]
	0x0349D6D4 CBZ X0, 0x349D6EC
	0x0349D6D8 LDR X8, [X20]
	0x0349D6DC LDR X1, [X8 + 0x40]
	0x0349D6E0 BL 0x1C16E00
	0x0349D6E4 CBZ X0, 0x349D7F8
	0x0349D6E8 LDR W8, [X20 + 0x18]
	0x0349D6EC CMP W8, 0x3
	0x0349D6F0 B.LS 0x349D7F4
	0x0349D6F4 LDR X8, [X23]
	0x0349D6F8 MOV X0, X20
	0x0349D6FC MOV X1, X31
	0x0349D700 STR X8, [X20 + 0x38]
	0x0349D704 BL 0x3227578
	0x0349D708 LDR X8, [X22]
	0x0349D70C MOV X21, X0
	0x0349D710 MOVZ W1, 0x4
	0x0349D714 MOV X0, X8
	0x0349D718 BL 0x1C16D6C
	0x0349D71C CBZ X0, 0x349D804
	0x0349D720 MOV X20, X0
	0x0349D724 CBZ X21, 0x349D73C
	0x0349D728 LDR X8, [X20]
	0x0349D72C MOV X0, X21
	0x0349D730 LDR X1, [X8 + 0x40]
	0x0349D734 BL 0x1C16E00
	0x0349D738 CBZ X0, 0x349D7F8
	0x0349D73C LDR W8, [X20 + 0x18]
	0x0349D740 CBZ W8, 0x349D7F4
	0x0349D744 ADRP X22, 0xC90000
	0x0349D748 LDR X22, [X22 + 0xCF0]
	0x0349D74C STR X21, [X20 + 0x20]
	0x0349D750 LDR X0, [X22]
	0x0349D754 CBZ X0, 0x349D76C
	0x0349D758 LDR X8, [X20]
	0x0349D75C LDR X1, [X8 + 0x40]
	0x0349D760 BL 0x1C16E00
	0x0349D764 CBZ X0, 0x349D7F8
	0x0349D768 LDR W8, [X20 + 0x18]
	0x0349D76C CMP W8, 0x1
	0x0349D770 B.LS 0x349D7F4
	0x0349D774 LDR X9, [X22]
	0x0349D778 STR X9, [X20 + 0x28]
	0x0349D77C LDR X19, [X19 + 0x18]
	0x0349D780 CBZ X19, 0x349D79C
	0x0349D784 LDR X8, [X20]
	0x0349D788 MOV X0, X19
	0x0349D78C LDR X1, [X8 + 0x40]
	0x0349D790 BL 0x1C16E00
	0x0349D794 CBZ X0, 0x349D7F8
	0x0349D798 LDR W8, [X20 + 0x18]
	0x0349D79C CMP W8, 0x2
	0x0349D7A0 B.LS 0x349D7F4
	0x0349D7A4 STR X19, [X20 + 0x30]
	0x0349D7A8 LDR X0, [X23]
	0x0349D7AC CBZ X0, 0x349D7C4
	0x0349D7B0 LDR X8, [X20]
	0x0349D7B4 LDR X1, [X8 + 0x40]
	0x0349D7B8 BL 0x1C16E00
	0x0349D7BC CBZ X0, 0x349D7F8
	0x0349D7C0 LDR W8, [X20 + 0x18]
	0x0349D7C4 CMP W8, 0x3
	0x0349D7C8 B.LS 0x349D7F4
	0x0349D7CC LDR X8, [X23]
	0x0349D7D0 MOV X0, X20
	0x0349D7D4 MOV X1, X31
	0x0349D7D8 STR X8, [X20 + 0x38]
	0x0349D7DC BL 0x3227578
	0x0349D7E0 LDP X20, X19, [X31 + 0x30]
	0x0349D7E4 LDP X22, X21, [X31 + 0x20]
	0x0349D7E8 LDP X30, X23, [X31 + 0x10]
	0x0349D7EC ADD X31, X31, 0x40
	0x0349D7F0 RET
	0x0349D7F4 BL 0x1C16F28
	0x0349D7F8 BL 0x1C16F44
	0x0349D7FC MOV X1, X31
	0x0349D800 BL 0x1C16DEC
	0x0349D804 BL 0x1C16F20
	0x0349D808 MOV X1, X31
	0x0349D80C B 0x33BDD8C
	0x0349D810 LDR X0, [X0 + 0x10]
	0x0349D814 RET
	0x0349D818 STR X1, [X0 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0xF42000
	011 Move X21, 0xC58000
	012 Move X22, 0xC58000
	013 Move W8, [X20+2470]
	014 Move X21, [X21+2440]
	015 Move X22, [X22+2512]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {68}
	021 Move X0, 0xC5B000
	022 Move X0, [X0+2424]
	023 Call 0x1C17CF4
	024 Move X0, 0xC58000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xC58000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0xC96000
	031 Move X0, [X0+2664]
	032 Call 0x1C17CF4
	033 Move X0, 0xC96000
	034 Move X0, [X0+2672]
	035 Call 0x1C17CF4
	036 Move X0, 0xC59000
	037 Move X0, [X0+3808]
	038 Call 0x1C17CF4
	039 Move X0, 0xC58000
	040 Move X0, [X0+2104]
	041 Call 0x1C17CF4
	042 Move X0, 0xC96000
	043 Move X0, [X0+2680]
	044 Call 0x1C17CF4
	045 Move X0, 0xC96000
	046 Move X0, [X0+2688]
	047 Call 0x1C17CF4
	048 Move X0, 0xC96000
	049 Move X0, [X0+2696]
	050 Call 0x1C17CF4
	051 Move X0, 0xC58000
	052 Move X0, [X0+2440]
	053 Call 0x1C17CF4
	054 Move X0, 0xC96000
	055 Move X0, [X0+2704]
	056 Call 0x1C17CF4
	057 Move X0, 0xC96000
	058 Move X0, [X0+2712]
	059 Call 0x1C17CF4
	060 Move X0, 0xC96000
	061 Move X0, [X0+2720]
	062 Call 0x1C17CF4
	063 Move X0, 0xC96000
	064 Move X0, [X0+2728]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+2470], W8
	068 Move X0, [X22]
	069 Move X21, [X21]
	070 Move W1, 4
	071 Call 0x1C17D6C
	072 Compare X0, 0
	073 JumpIfEqual {688}
	074 Move X20, X0
	075 Compare X21, 0
	076 JumpIfEqual {83}
	077 Move X8, [X20]
	078 Move X0, X21
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {685}
	083 Move W8, [X20+24]
	084 Compare W8, 0
	085 JumpIfEqual {684}
	086 Move X23, 0xC96000
	087 Move X23, [X23+2680]
	088 Move [X20+32], X21
	089 Move X0, [X23]
	090 Compare X0, 0
	091 JumpIfEqual {98}
	092 Move X8, [X20]
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {685}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X23]
	100 Move X24, 0xC5B000
	101 Move X24, [X24+2424]
	102 Add X1, X31, 56
	103 Move [X20+40], X8
	104 Move V0, [X19+16]
	105 Move X0, [X24]
	106 Move [X31+56], D0
	107 Call 0x1C17E04
	108 Move X21, X0
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X0, X21
	113 Move X1, [X8+64]
	114 Call 0x1C17E00
	115 Compare X0, 0
	116 JumpIfEqual {685}
	117 Move W8, [X20+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X23, 0xC57000
	120 Move X23, [X23+2104]
	121 Move [X20+48], X21
	122 Move X0, [X23]
	123 Compare X0, 0
	124 JumpIfEqual {131}
	125 Move X8, [X20]
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {685}
	130 Move W8, [X20+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X23]
	133 Move X0, X20
	134 Move X1, X31
	135 Move [X20+56], X8
	136 Call String.Concat, X0
	137 Move X8, [X22]
	138 Move X21, X0
	139 Move W1, 4
	140 Move X0, X8
	141 Call 0x1C17D6C
	142 Compare X0, 0
	143 JumpIfEqual {688}
	144 Move X20, X0
	145 Compare X21, 0
	146 JumpIfEqual {153}
	147 Move X8, [X20]
	148 Move X0, X21
	149 Move X1, [X8+64]
	150 Call 0x1C17E00
	151 Compare X0, 0
	152 JumpIfEqual {685}
	153 Move W8, [X20+24]
	154 Compare W8, 0
	155 JumpIfEqual {684}
	156 Move X25, 0xC95000
	157 Move X25, [X25+2704]
	158 Move [X20+32], X21
	159 Move X0, [X25]
	160 Compare X0, 0
	161 JumpIfEqual {168}
	162 Move X8, [X20]
	163 Move X1, [X8+64]
	164 Call 0x1C17E00
	165 Compare X0, 0
	166 JumpIfEqual {685}
	167 Move W8, [X20+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X8, [X25]
	170 Add X1, X31, 48
	171 Move [X20+40], X8
	172 Move V0, [X19+24]
	173 Move X0, [X24]
	174 Move [X31+48], D0
	175 Call 0x1C17E04
	176 Move X21, X0
	177 Compare X0, 0
	178 JumpIfEqual {185}
	179 Move X8, [X20]
	180 Move X0, X21
	181 Move X1, [X8+64]
	182 Call 0x1C17E00
	183 Compare X0, 0
	184 JumpIfEqual {685}
	185 Move W8, [X20+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X20+48], X21
	188 Move X0, [X23]
	189 Compare X0, 0
	190 JumpIfEqual {197}
	191 Move X8, [X20]
	192 Move X1, [X8+64]
	193 Call 0x1C17E00
	194 Compare X0, 0
	195 JumpIfEqual {685}
	196 Move W8, [X20+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X8, [X23]
	199 Move X0, X20
	200 Move X1, X31
	201 Move [X20+56], X8
	202 Call String.Concat, X0
	203 Move X8, [X22]
	204 Move X21, X0
	205 Move W1, 4
	206 Move X0, X8
	207 Call 0x1C17D6C
	208 Compare X0, 0
	209 JumpIfEqual {688}
	210 Move X20, X0
	211 Compare X21, 0
	212 JumpIfEqual {219}
	213 Move X8, [X20]
	214 Move X0, X21
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {685}
	219 Move W8, [X20+24]
	220 Compare W8, 0
	221 JumpIfEqual {684}
	222 Move X25, 0xC95000
	223 Move X25, [X25+2664]
	224 Move [X20+32], X21
	225 Move X0, [X25]
	226 Compare X0, 0
	227 JumpIfEqual {234}
	228 Move X8, [X20]
	229 Move X1, [X8+64]
	230 Call 0x1C17E00
	231 Compare X0, 0
	232 JumpIfEqual {685}
	233 Move W8, [X20+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X8, [X25]
	236 Add X1, X31, 40
	237 Move [X20+40], X8
	238 Move V0, [X19+32]
	239 Move X0, [X24]
	240 Move [X31+40], D0
	241 Call 0x1C17E04
	242 Move X21, X0
	243 Compare X0, 0
	244 JumpIfEqual {251}
	245 Move X8, [X20]
	246 Move X0, X21
	247 Move X1, [X8+64]
	248 Call 0x1C17E00
	249 Compare X0, 0
	250 JumpIfEqual {685}
	251 Move W8, [X20+24]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move [X20+48], X21
	254 Move X0, [X23]
	255 Compare X0, 0
	256 JumpIfEqual {263}
	257 Move X8, [X20]
	258 Move X1, [X8+64]
	259 Call 0x1C17E00
	260 Compare X0, 0
	261 JumpIfEqual {685}
	262 Move W8, [X20+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X8, [X23]
	265 Move X0, X20
	266 Move X1, X31
	267 Move [X20+56], X8
	268 Call String.Concat, X0
	269 Move X8, [X22]
	270 Move X21, X0
	271 Move W1, 4
	272 Move X0, X8
	273 Call 0x1C17D6C
	274 Compare X0, 0
	275 JumpIfEqual {688}
	276 Move X20, X0
	277 Compare X21, 0
	278 JumpIfEqual {285}
	279 Move X8, [X20]
	280 Move X0, X21
	281 Move X1, [X8+64]
	282 Call 0x1C17E00
	283 Compare X0, 0
	284 JumpIfEqual {685}
	285 Move W8, [X20+24]
	286 Compare W8, 0
	287 JumpIfEqual {684}
	288 Move X25, 0xC95000
	289 Move X25, [X25+2696]
	290 Move [X20+32], X21
	291 Move X0, [X25]
	292 Compare X0, 0
	293 JumpIfEqual {300}
	294 Move X8, [X20]
	295 Move X1, [X8+64]
	296 Call 0x1C17E00
	297 Compare X0, 0
	298 JumpIfEqual {685}
	299 Move W8, [X20+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X8, [X25]
	302 Add X1, X31, 32
	303 Move [X20+40], X8
	304 Move V0, [X19+40]
	305 Move X0, [X24]
	306 Move [X31+32], D0
	307 Call 0x1C17E04
	308 Move X21, X0
	309 Compare X0, 0
	310 JumpIfEqual {317}
	311 Move X8, [X20]
	312 Move X0, X21
	313 Move X1, [X8+64]
	314 Call 0x1C17E00
	315 Compare X0, 0
	316 JumpIfEqual {685}
	317 Move W8, [X20+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move [X20+48], X21
	320 Move X0, [X23]
	321 Compare X0, 0
	322 JumpIfEqual {329}
	323 Move X8, [X20]
	324 Move X1, [X8+64]
	325 Call 0x1C17E00
	326 Compare X0, 0
	327 JumpIfEqual {685}
	328 Move W8, [X20+24]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X8, [X23]
	331 Move X0, X20
	332 Move X1, X31
	333 Move [X20+56], X8
	334 Call String.Concat, X0
	335 Move X8, [X22]
	336 Move X21, X0
	337 Move W1, 4
	338 Move X0, X8
	339 Call 0x1C17D6C
	340 Compare X0, 0
	341 JumpIfEqual {688}
	342 Move X20, X0
	343 Compare X21, 0
	344 JumpIfEqual {351}
	345 Move X8, [X20]
	346 Move X0, X21
	347 Move X1, [X8+64]
	348 Call 0x1C17E00
	349 Compare X0, 0
	350 JumpIfEqual {685}
	351 Move W8, [X20+24]
	352 Compare W8, 0
	353 JumpIfEqual {684}
	354 Move X24, 0xC95000
	355 Move X24, [X24+2672]
	356 Move [X20+32], X21
	357 Move X0, [X24]
	358 Compare X0, 0
	359 JumpIfEqual {366}
	360 Move X8, [X20]
	361 Move X1, [X8+64]
	362 Call 0x1C17E00
	363 Compare X0, 0
	364 JumpIfEqual {685}
	365 Move W8, [X20+24]
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move X8, [X24]
	368 Move X24, 0xC57000
	369 Move X24, [X24+1880]
	370 Add X1, X31, 28
	371 Move [X20+40], X8
	372 Move W8, [X19+48]
	373 Move X0, [X24]
	374 Move [X31+28], W8
	375 Call 0x1C17E04
	376 Move X21, X0
	377 Compare X0, 0
	378 JumpIfEqual {385}
	379 Move X8, [X20]
	380 Move X0, X21
	381 Move X1, [X8+64]
	382 Call 0x1C17E00
	383 Compare X0, 0
	384 JumpIfEqual {685}
	385 Move W8, [X20+24]
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move [X20+48], X21
	388 Move X0, [X23]
	389 Compare X0, 0
	390 JumpIfEqual {397}
	391 Move X8, [X20]
	392 Move X1, [X8+64]
	393 Call 0x1C17E00
	394 Compare X0, 0
	395 JumpIfEqual {685}
	396 Move W8, [X20+24]
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Move X8, [X23]
	399 Move X0, X20
	400 Move X1, X31
	401 Move [X20+56], X8
	402 Call String.Concat, X0
	403 Move X8, [X22]
	404 Move X21, X0
	405 Move W1, 4
	406 Move X0, X8
	407 Call 0x1C17D6C
	408 Compare X0, 0
	409 JumpIfEqual {688}
	410 Move X20, X0
	411 Compare X21, 0
	412 JumpIfEqual {419}
	413 Move X8, [X20]
	414 Move X0, X21
	415 Move X1, [X8+64]
	416 Call 0x1C17E00
	417 Compare X0, 0
	418 JumpIfEqual {685}
	419 Move W8, [X20+24]
	420 Compare W8, 0
	421 JumpIfEqual {684}
	422 Move X25, 0xC95000
	423 Move X25, [X25+2728]
	424 Move [X20+32], X21
	425 Move X0, [X25]
	426 Compare X0, 0
	427 JumpIfEqual {434}
	428 Move X8, [X20]
	429 Move X1, [X8+64]
	430 Call 0x1C17E00
	431 Compare X0, 0
	432 JumpIfEqual {685}
	433 Move W8, [X20+24]
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Move X8, [X25]
	436 Add X1, X31, 24
	437 Move [X20+40], X8
	438 Move W8, [X19+52]
	439 Move X0, [X24]
	440 Move [X31+24], W8
	441 Call 0x1C17E04
	442 Move X21, X0
	443 Compare X0, 0
	444 JumpIfEqual {451}
	445 Move X8, [X20]
	446 Move X0, X21
	447 Move X1, [X8+64]
	448 Call 0x1C17E00
	449 Compare X0, 0
	450 JumpIfEqual {685}
	451 Move W8, [X20+24]
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Move [X20+48], X21
	454 Move X0, [X23]
	455 Compare X0, 0
	456 JumpIfEqual {463}
	457 Move X8, [X20]
	458 Move X1, [X8+64]
	459 Call 0x1C17E00
	460 Compare X0, 0
	461 JumpIfEqual {685}
	462 Move W8, [X20+24]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X8, [X23]
	465 Move X0, X20
	466 Move X1, X31
	467 Move [X20+56], X8
	468 Call String.Concat, X0
	469 Move X8, [X22]
	470 Move X21, X0
	471 Move W1, 4
	472 Move X0, X8
	473 Call 0x1C17D6C
	474 Compare X0, 0
	475 JumpIfEqual {688}
	476 Move X20, X0
	477 Compare X21, 0
	478 JumpIfEqual {485}
	479 Move X8, [X20]
	480 Move X0, X21
	481 Move X1, [X8+64]
	482 Call 0x1C17E00
	483 Compare X0, 0
	484 JumpIfEqual {685}
	485 Move W8, [X20+24]
	486 Compare W8, 0
	487 JumpIfEqual {684}
	488 Move X25, 0xC95000
	489 Move X25, [X25+2720]
	490 Move [X20+32], X21
	491 Move X0, [X25]
	492 Compare X0, 0
	493 JumpIfEqual {500}
	494 Move X8, [X20]
	495 Move X1, [X8+64]
	496 Call 0x1C17E00
	497 Compare X0, 0
	498 JumpIfEqual {685}
	499 Move W8, [X20+24]
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Move X8, [X25]
	502 Add X1, X31, 20
	503 Move [X20+40], X8
	504 Move W8, [X19+56]
	505 Move X0, [X24]
	506 Move [X31+20], W8
	507 Call 0x1C17E04
	508 Move X21, X0
	509 Compare X0, 0
	510 JumpIfEqual {517}
	511 Move X8, [X20]
	512 Move X0, X21
	513 Move X1, [X8+64]
	514 Call 0x1C17E00
	515 Compare X0, 0
	516 JumpIfEqual {685}
	517 Move W8, [X20+24]
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move [X20+48], X21
	520 Move X0, [X23]
	521 Compare X0, 0
	522 JumpIfEqual {529}
	523 Move X8, [X20]
	524 Move X1, [X8+64]
	525 Call 0x1C17E00
	526 Compare X0, 0
	527 JumpIfEqual {685}
	528 Move W8, [X20+24]
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Move X8, [X23]
	531 Move X21, 0xC58000
	532 Move X21, [X21+3808]
	533 Move X0, X20
	534 Move X1, X31
	535 Move [X20+56], X8
	536 Call String.Concat, X0
	537 Move X2, [X19+64]
	538 Move X1, [X21]
	539 Move X3, [X23]
	540 Move X4, X31
	541 Call String.Concat, X0, X1, X2, X3
	542 Move X8, [X22]
	543 Move X21, X0
	544 Move W1, 4
	545 Move X0, X8
	546 Call 0x1C17D6C
	547 Compare X0, 0
	548 JumpIfEqual {688}
	549 Move X20, X0
	550 Compare X21, 0
	551 JumpIfEqual {558}
	552 Move X8, [X20]
	553 Move X0, X21
	554 Move X1, [X8+64]
	555 Call 0x1C17E00
	556 Compare X0, 0
	557 JumpIfEqual {685}
	558 Move W8, [X20+24]
	559 Compare W8, 0
	560 JumpIfEqual {684}
	561 Move X25, 0xC95000
	562 Move X25, [X25+2712]
	563 Move [X20+32], X21
	564 Move X0, [X25]
	565 Compare X0, 0
	566 JumpIfEqual {573}
	567 Move X8, [X20]
	568 Move X1, [X8+64]
	569 Call 0x1C17E00
	570 Compare X0, 0
	571 JumpIfEqual {685}
	572 Move W8, [X20+24]
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X8, [X25]
	575 Add X1, X31, 16
	576 Move [X20+40], X8
	577 Move W8, [X19+72]
	578 Move X0, [X24]
	579 Move [X31+16], W8
	580 Call 0x1C17E04
	581 Move X21, X0
	582 Compare X0, 0
	583 JumpIfEqual {590}
	584 Move X8, [X20]
	585 Move X0, X21
	586 Move X1, [X8+64]
	587 Call 0x1C17E00
	588 Compare X0, 0
	589 JumpIfEqual {685}
	590 Move W8, [X20+24]
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Move [X20+48], X21
	593 Move X0, [X23]
	594 Compare X0, 0
	595 JumpIfEqual {602}
	596 Move X8, [X20]
	597 Move X1, [X8+64]
	598 Call 0x1C17E00
	599 Compare X0, 0
	600 JumpIfEqual {685}
	601 Move W8, [X20+24]
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Move X8, [X23]
	604 Move X0, X20
	605 Move X1, X31
	606 Move [X20+56], X8
	607 Call String.Concat, X0
	608 Move X8, [X22]
	609 Move X21, X0
	610 Move W1, 4
	611 Move X0, X8
	612 Call 0x1C17D6C
	613 Compare X0, 0
	614 JumpIfEqual {688}
	615 Move X20, X0
	616 Compare X21, 0
	617 JumpIfEqual {624}
	618 Move X8, [X20]
	619 Move X0, X21
	620 Move X1, [X8+64]
	621 Call 0x1C17E00
	622 Compare X0, 0
	623 JumpIfEqual {685}
	624 Move W8, [X20+24]
	625 Compare W8, 0
	626 JumpIfEqual {684}
	627 Move X22, 0xC95000
	628 Move X22, [X22+2688]
	629 Move [X20+32], X21
	630 Move X0, [X22]
	631 Compare X0, 0
	632 JumpIfEqual {639}
	633 Move X8, [X20]
	634 Move X1, [X8+64]
	635 Call 0x1C17E00
	636 Compare X0, 0
	637 JumpIfEqual {685}
	638 Move W8, [X20+24]
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X8, [X22]
	641 Add X1, X31, 12
	642 Move [X20+40], X8
	643 Move W8, [X19+76]
	644 Move X0, [X24]
	645 Move [X31+12], W8
	646 Call 0x1C17E04
	647 Move X19, X0
	648 Compare X0, 0
	649 JumpIfEqual {656}
	650 Move X8, [X20]
	651 Move X0, X19
	652 Move X1, [X8+64]
	653 Call 0x1C17E00
	654 Compare X0, 0
	655 JumpIfEqual {685}
	656 Move W8, [X20+24]
	657 NotImplemented "Instruction CMP not yet implemented."
	658 Move [X20+48], X19
	659 Move X0, [X23]
	660 Compare X0, 0
	661 JumpIfEqual {668}
	662 Move X8, [X20]
	663 Move X1, [X8+64]
	664 Call 0x1C17E00
	665 Compare X0, 0
	666 JumpIfEqual {685}
	667 Move W8, [X20+24]
	668 NotImplemented "Instruction CMP not yet implemented."
	669 Move X8, [X23]
	670 Move X0, X20
	671 Move X1, X31
	672 Move [X20+56], X8
	673 Call String.Concat, X0
	674 Move X20, [X31+112]
	675 Move X19, [X31+120]
	676 Move X22, [X31+96]
	677 Move X21, [X31+104]
	678 Move X24, [X31+80]
	679 Move X23, [X31+88]
	680 Move X30, [X31+64]
	681 Move X25, [X31+72]
	682 Add X31, X31, 128
	683 Return X0
	684 Call 0x1C17F28
	685 Call 0x1C17F44
	686 Move X1, X31
	687 Call 0x1C17DEC
	688 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0349D81C RET
	0x0349D820 STR X30, [X31 - 0x20]!

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

