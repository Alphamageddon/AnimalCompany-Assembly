Type: Nakama.Console.ApiClient

Method: System.Void .ctor(System.Uri baseUri, Nakama.IHttpAdapter httpAdapter, System.Int32 timeout = 10)

Disassembly:
	0x034A310C MOV X1, X31
	0x034A3110 BL 0x32C47F8
	0x034A3114 LDP X20, X19, [X31 + 0x80]
	0x034A3118 LDP X22, X21, [X31 + 0x70]
	0x034A311C LDP X30, X23, [X31 + 0x60]
	0x034A3120 ADD X31, X31, 0x90
	0x034A3124 RET
	0x034A3128 SUB X31, X31, 0x80
	0x034A312C STR X30, [X31 + 0x40]
	0x034A3130 STP X24, X23, [X31 + 0x50]
	0x034A3134 STP X22, X21, [X31 + 0x60]
	0x034A3138 STP X20, X19, [X31 + 0x70]
	0x034A313C ADRP X23, 0xF3A000
	0x034A3140 ADRP X22, 0xC8E000
	0x034A3144 LDRB W8, [X23 + 0x9E7]
	0x034A3148 LDR X22, [X22 + 0xD40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move W19, W3
	009 Move X20, X2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move [X22+16], X21
	013 Move [X22+24], W19
	014 Move [X22+32], X20
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.Threading.Tasks.Task DeleteAccountAsync(System.String bearerToken, System.String id, System.Nullable`1<System.Boolean> recordDeletion)

Disassembly:
	0x034A314C MOV X19, X2
	0x034A3150 MOV X21, X1
	0x034A3154 MOV X20, X0
	0x034A3158 TBNZ X8, 0x0, 0x34A3194
	0x034A315C ADRP X0, 0xC8E000
	0x034A3160 LDR X0, [X0 + 0xD48]
	0x034A3164 BL 0x1C16CF4
	0x034A3168 ADRP X0, 0xC8E000
	0x034A316C LDR X0, [X0 + 0xD50]
	0x034A3170 BL 0x1C16CF4
	0x034A3174 ADRP X0, 0xC8E000
	0x034A3178 LDR X0, [X0 + 0xD58]
	0x034A317C BL 0x1C16CF4
	0x034A3180 ADRP X0, 0xC8E000
	0x034A3184 LDR X0, [X0 + 0xD40]
	0x034A3188 BL 0x1C16CF4
	0x034A318C MOVZ W8, 0x1
	0x034A3190 STRB W8, [X23 + 0x9E7]
	0x034A3194 LDR X0, [X22]
	0x034A3198 MOVI V0.2D, 0x0
	0x034A319C STP V0, V0, [X31 + 0x20]
	0x034A31A0 STP V0, V0, [X31]
	0x034A31A4 ADRP X22, 0xC8E000
	0x034A31A8 ADRP X24, 0xC8E000
	0x034A31AC ADRP X23, 0xC8E000
	0x034A31B0 LDR W8, [X0 + 0xE0]
	0x034A31B4 LDR X22, [X22 + 0xD48]
	0x034A31B8 LDR X24, [X24 + 0xD50]
	0x034A31BC LDR X23, [X23 + 0xD58]
	0x034A31C0 CBNZ W8, 0x34A31C8
	0x034A31C4 BL 0x1C16DFC
	0x034A31C8 LDR X0, [X22]
	0x034A31CC ADD X8, X31, 0x0
	0x034A31D0 ORR X22, X8, 0xF
	0x034A31D4 MOV X8, X22
	0x034A31D8 BL 0x263221C
	0x034A31DC LDR X2, [X24]
	0x034A31E0 MOVN W8, 0x0
	0x034A31E4 ADD X1, X31, 0x0
	0x034A31E8 MOV X0, X22
	0x034A31EC STP X20, X21, [X31 + 0x28]
	0x034A31F0 STR X19, [X31 + 0x20]
	0x034A31F4 STR W8, [X31]
	0x034A31F8 BL 0x1FCB714
	0x034A31FC LDR X1, [X23]
	0x034A3200 MOV X0, X22
	0x034A3204 BL 0x2632230
	0x034A3208 LDP X20, X19, [X31 + 0x70]
	0x034A320C LDP X22, X21, [X31 + 0x60]
	0x034A3210 LDP X24, X23, [X31 + 0x50]
	0x034A3214 LDR X30, [X31 + 0x40]
	0x034A3218 ADD X31, X31, 0x80
	0x034A321C RET
	0x034A3220 SUB X31, X31, 0xB0
	0x034A3224 STR X30, [X31 + 0x70]
	0x034A3228 STP X24, X23, [X31 + 0x80]
	0x034A322C STP X22, X21, [X31 + 0x90]
	0x034A3230 STP X20, X19, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xF3B000
	010 Move X23, 0xC54000
	011 Move W8, [X24+2517]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X19, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xC8F000
	022 Move X0, [X0+3152]
	023 Call 0x1C17CF4
	024 Move X0, 0xC54000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2517], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xC8F000
	037 Move W8, [X0+224]
	038 Move X23, [X23+3152]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 NotImplemented "Instruction STRH not yet implemented."
	050 Or X20, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X20
	056 Move [X31+80], X22
	057 Move [X31+88], X21
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.INakamaconsoleAccount> GetAccountAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A3234 ADRP X24, 0xF3A000
	0x034A3238 ADRP X23, 0xC53000
	0x034A323C LDRB W8, [X24 + 0x9E8]
	0x034A3240 LDR X23, [X23 + 0x280]
	0x034A3244 MOV X20, X3
	0x034A3248 MOV X19, X2
	0x034A324C MOV X21, X1
	0x034A3250 MOV X22, X0
	0x034A3254 TBNZ X8, 0x0, 0x34A3278
	0x034A3258 ADRP X0, 0xC8E000
	0x034A325C LDR X0, [X0 + 0xD60]
	0x034A3260 BL 0x1C16CF4
	0x034A3264 ADRP X0, 0xC53000
	0x034A3268 LDR X0, [X0 + 0x280]
	0x034A326C BL 0x1C16CF4
	0x034A3270 MOVZ W8, 0x1
	0x034A3274 STRB W8, [X24 + 0x9E8]
	0x034A3278 LDR X0, [X23]
	0x034A327C MOVI V0.2D, 0x0
	0x034A3280 STR X31, [X31 + 0x60]
	0x034A3284 STP V0, V0, [X31 + 0x40]
	0x034A3288 STP V0, V0, [X31 + 0x20]
	0x034A328C ADRP X23, 0xC8E000
	0x034A3290 LDR W8, [X0 + 0xE0]
	0x034A3294 LDR X23, [X23 + 0xD60]
	0x034A3298 CBNZ W8, 0x34A32A0
	0x034A329C BL 0x1C16DFC
	0x034A32A0 ADD X8, X31, 0x8
	0x034A32A4 MOV X0, X31
	0x034A32A8 BL 0x32C4770
	0x034A32AC LDUR V0, [X31 + 0x8]
	0x034A32B0 LDR X9, [X31 + 0x18]
	0x034A32B4 LDR X2, [X23]
	0x034A32B8 ADD X8, X31, 0x20
	0x034A32BC STP X19, X20, [X31 + 0x40]
	0x034A32C0 ORR X20, X8, 0xF
	0x034A32C4 MOVN W10, 0x0
	0x034A32C8 ADD X1, X31, 0x20
	0x034A32CC MOV X0, X20
	0x034A32D0 STP X22, X21, [X31 + 0x50]
	0x034A32D4 STUR V0, [X31 + 0x28]
	0x034A32D8 STR X9, [X31 + 0x38]
	0x034A32DC STR W10, [X31 + 0x20]
	0x034A32E0 BL 0x218FDB8
	0x034A32E4 MOV X0, X20
	0x034A32E8 MOV X1, X31
	0x034A32EC BL 0x32C47F8
	0x034A32F0 LDP X20, X19, [X31 + 0xA0]
	0x034A32F4 LDP X22, X21, [X31 + 0x90]
	0x034A32F8 LDP X24, X23, [X31 + 0x80]
	0x034A32FC LDR X30, [X31 + 0x70]
	0x034A3300 ADD X31, X31, 0xB0
	0x034A3304 RET
	0x034A3308 SUB X31, X31, 0x70
	0x034A330C STP X30, X23, [X31 + 0x40]
	0x034A3310 STP X22, X21, [X31 + 0x50]
	0x034A3314 STP X20, X19, [X31 + 0x60]
	0x034A3318 ADRP X22, 0xF3A000
	0x034A331C ADRP X21, 0xC8E000
	0x034A3320 LDRB W8, [X22 + 0x9E9]
	0x034A3324 LDR X21, [X21 + 0xD68]
	0x034A3328 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF3B000
	010 Move X22, 0xC8F000
	011 Move W8, [X23+2518]
	012 Move X22, [X22+3160]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xC8F000
	021 Move X0, [X0+3168]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8F000
	024 Move X0, [X0+3176]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8F000
	027 Move X0, [X0+3184]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8F000
	030 Move X0, [X0+3160]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2518], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xC8F000
	041 Move X24, 0xC8F000
	042 Move X23, 0xC8F000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3168]
	045 Move X24, [X24+3176]
	046 Move X23, [X23+3184]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+40], X20
	062 Move [X31+48], X21
	063 Move [X31+32], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task UpdateAccountAsync(System.String bearerToken, System.String id, Nakama.Console.NakamaconsoleUpdateAccountRequest body)

Disassembly:
	0x034A332C MOV X20, X0
	0x034A3330 TBNZ X8, 0x0, 0x34A336C
	0x034A3334 ADRP X0, 0xC8E000
	0x034A3338 LDR X0, [X0 + 0xD70]
	0x034A333C BL 0x1C16CF4
	0x034A3340 ADRP X0, 0xC8E000
	0x034A3344 LDR X0, [X0 + 0xD78]
	0x034A3348 BL 0x1C16CF4
	0x034A334C ADRP X0, 0xC8E000
	0x034A3350 LDR X0, [X0 + 0xD80]
	0x034A3354 BL 0x1C16CF4
	0x034A3358 ADRP X0, 0xC8E000
	0x034A335C LDR X0, [X0 + 0xD68]
	0x034A3360 BL 0x1C16CF4
	0x034A3364 MOVZ W8, 0x1
	0x034A3368 STRB W8, [X22 + 0x9E9]
	0x034A336C LDR X0, [X21]
	0x034A3370 MOVI V0.2D, 0x0
	0x034A3374 STR X31, [X31 + 0x30]
	0x034A3378 STP V0, V0, [X31 + 0x10]
	0x034A337C STR V0, [X31]
	0x034A3380 ADRP X21, 0xC8E000
	0x034A3384 ADRP X23, 0xC8E000
	0x034A3388 ADRP X22, 0xC8E000
	0x034A338C LDR W8, [X0 + 0xE0]
	0x034A3390 LDR X21, [X21 + 0xD70]
	0x034A3394 LDR X23, [X23 + 0xD78]
	0x034A3398 LDR X22, [X22 + 0xD80]
	0x034A339C CBNZ W8, 0x34A33A4
	0x034A33A0 BL 0x1C16DFC
	0x034A33A4 LDR X0, [X21]
	0x034A33A8 ADD X8, X31, 0x0
	0x034A33AC ORR X21, X8, 0xF
	0x034A33B0 MOV X8, X21
	0x034A33B4 BL 0x263221C
	0x034A33B8 LDR X2, [X23]
	0x034A33BC MOVN W8, 0x0
	0x034A33C0 ADD X1, X31, 0x0
	0x034A33C4 MOV X0, X21
	0x034A33C8 STP X19, X20, [X31 + 0x20]
	0x034A33CC STR W8, [X31]
	0x034A33D0 BL 0x1FCAF14
	0x034A33D4 LDR X1, [X22]
	0x034A33D8 MOV X0, X21
	0x034A33DC BL 0x2632230
	0x034A33E0 LDP X20, X19, [X31 + 0x60]
	0x034A33E4 LDP X22, X21, [X31 + 0x50]
	0x034A33E8 LDP X30, X23, [X31 + 0x40]
	0x034A33EC ADD X31, X31, 0x70
	0x034A33F0 RET
	0x034A33F4 SUB X31, X31, 0x70
	0x034A33F8 STP X30, X23, [X31 + 0x40]
	0x034A33FC STP X22, X21, [X31 + 0x50]
	0x034A3400 STP X20, X19, [X31 + 0x60]
	0x034A3404 ADRP X22, 0xF3A000
	0x034A3408 ADRP X21, 0xC8E000
	0x034A340C LDRB W8, [X22 + 0x9EA]
	0x034A3410 LDR X21, [X21 + 0xD88]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xF3B000
	010 Move X23, 0xC54000
	011 Move W8, [X24+2519]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X19, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xC8F000
	022 Move X0, [X0+3192]
	023 Call 0x1C17CF4
	024 Move X0, 0xC54000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2519], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xC8F000
	037 Move W8, [X0+224]
	038 Move X23, [X23+3192]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+64], X19
	050 Move [X31+72], X20
	051 Or X20, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X20
	057 Move [X31+80], X22
	058 Move [X31+88], X21
	059 Move [X31+40], V0
	060 Move [X31+56], X9
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task BanUserAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A3414 MOV X19, X1
	0x034A3418 MOV X20, X0
	0x034A341C TBNZ X8, 0x0, 0x34A3458
	0x034A3420 ADRP X0, 0xC8E000
	0x034A3424 LDR X0, [X0 + 0xD90]
	0x034A3428 BL 0x1C16CF4
	0x034A342C ADRP X0, 0xC8E000
	0x034A3430 LDR X0, [X0 + 0xD98]
	0x034A3434 BL 0x1C16CF4
	0x034A3438 ADRP X0, 0xC8E000
	0x034A343C LDR X0, [X0 + 0xDA0]
	0x034A3440 BL 0x1C16CF4
	0x034A3444 ADRP X0, 0xC8E000
	0x034A3448 LDR X0, [X0 + 0xD88]
	0x034A344C BL 0x1C16CF4
	0x034A3450 MOVZ W8, 0x1
	0x034A3454 STRB W8, [X22 + 0x9EA]
	0x034A3458 LDR X0, [X21]
	0x034A345C MOVI V0.2D, 0x0
	0x034A3460 STR X31, [X31 + 0x30]
	0x034A3464 STP V0, V0, [X31 + 0x10]
	0x034A3468 STR V0, [X31]
	0x034A346C ADRP X21, 0xC8E000
	0x034A3470 ADRP X23, 0xC8E000
	0x034A3474 ADRP X22, 0xC8E000
	0x034A3478 LDR W8, [X0 + 0xE0]
	0x034A347C LDR X21, [X21 + 0xD90]
	0x034A3480 LDR X23, [X23 + 0xD98]
	0x034A3484 LDR X22, [X22 + 0xDA0]
	0x034A3488 CBNZ W8, 0x34A3490
	0x034A348C BL 0x1C16DFC
	0x034A3490 LDR X0, [X21]
	0x034A3494 ADD X8, X31, 0x0
	0x034A3498 ORR X21, X8, 0xF
	0x034A349C MOV X8, X21
	0x034A34A0 BL 0x263221C
	0x034A34A4 LDR X2, [X23]
	0x034A34A8 MOVN W8, 0x0
	0x034A34AC ADD X1, X31, 0x0
	0x034A34B0 MOV X0, X21
	0x034A34B4 STP X20, X19, [X31 + 0x20]
	0x034A34B8 STR W8, [X31]
	0x034A34BC BL 0x1FCB214
	0x034A34C0 LDR X1, [X22]
	0x034A34C4 MOV X0, X21
	0x034A34C8 BL 0x2632230
	0x034A34CC LDP X20, X19, [X31 + 0x60]
	0x034A34D0 LDP X22, X21, [X31 + 0x50]
	0x034A34D4 LDP X30, X23, [X31 + 0x40]
	0x034A34D8 ADD X31, X31, 0x70
	0x034A34DC RET
	0x034A34E0 SUB X31, X31, 0x70
	0x034A34E4 STP X30, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3B000
	009 Move X22, 0xC54000
	010 Move W8, [X23+2520]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+3200]
	021 Call 0x1C17CF4
	022 Move X0, 0xC54000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2520], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8F000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3200]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IConsoleAccountExport> ExportAccountAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A34E8 STP X22, X21, [X31 + 0x50]
	0x034A34EC STP X20, X19, [X31 + 0x60]
	0x034A34F0 ADRP X22, 0xF3A000
	0x034A34F4 ADRP X21, 0xC8E000
	0x034A34F8 LDRB W8, [X22 + 0x9EB]
	0x034A34FC LDR X21, [X21 + 0xDA8]
	0x034A3500 MOV X19, X1
	0x034A3504 MOV X20, X0
	0x034A3508 TBNZ X8, 0x0, 0x34A3544
	0x034A350C ADRP X0, 0xC8E000
	0x034A3510 LDR X0, [X0 + 0xDB0]
	0x034A3514 BL 0x1C16CF4
	0x034A3518 ADRP X0, 0xC8E000
	0x034A351C LDR X0, [X0 + 0xDB8]
	0x034A3520 BL 0x1C16CF4
	0x034A3524 ADRP X0, 0xC8E000
	0x034A3528 LDR X0, [X0 + 0xDC0]
	0x034A352C BL 0x1C16CF4
	0x034A3530 ADRP X0, 0xC8E000
	0x034A3534 LDR X0, [X0 + 0xDA8]
	0x034A3538 BL 0x1C16CF4
	0x034A353C MOVZ W8, 0x1
	0x034A3540 STRB W8, [X22 + 0x9EB]
	0x034A3544 LDR X0, [X21]
	0x034A3548 MOVI V0.2D, 0x0
	0x034A354C STR X31, [X31 + 0x30]
	0x034A3550 STP V0, V0, [X31 + 0x10]
	0x034A3554 STR V0, [X31]
	0x034A3558 ADRP X21, 0xC8E000
	0x034A355C ADRP X23, 0xC8E000
	0x034A3560 ADRP X22, 0xC8E000
	0x034A3564 LDR W8, [X0 + 0xE0]
	0x034A3568 LDR X21, [X21 + 0xDB0]
	0x034A356C LDR X23, [X23 + 0xDB8]
	0x034A3570 LDR X22, [X22 + 0xDC0]
	0x034A3574 CBNZ W8, 0x34A357C
	0x034A3578 BL 0x1C16DFC
	0x034A357C LDR X0, [X21]
	0x034A3580 ADD X8, X31, 0x0
	0x034A3584 ORR X21, X8, 0xF
	0x034A3588 MOV X8, X21
	0x034A358C BL 0x263221C
	0x034A3590 LDR X2, [X23]
	0x034A3594 MOVN W8, 0x0
	0x034A3598 ADD X1, X31, 0x0
	0x034A359C MOV X0, X21
	0x034A35A0 STP X20, X19, [X31 + 0x20]
	0x034A35A4 STR W8, [X31]
	0x034A35A8 BL 0x1FCB514
	0x034A35AC LDR X1, [X22]
	0x034A35B0 MOV X0, X21
	0x034A35B4 BL 0x2632230
	0x034A35B8 LDP X20, X19, [X31 + 0x60]
	0x034A35BC LDP X22, X21, [X31 + 0x50]
	0x034A35C0 LDP X30, X23, [X31 + 0x40]
	0x034A35C4 ADD X31, X31, 0x70
	0x034A35C8 RET
	0x034A35CC SUB X31, X31, 0x90
	0x034A35D0 STR X30, [X31 + 0x60]
	0x034A35D4 STP X22, X21, [X31 + 0x70]
	0x034A35D8 STP X20, X19, [X31 + 0x80]
	0x034A35DC ADRP X22, 0xF3A000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF3B000
	010 Move X22, 0xC8F000
	011 Move W8, [X23+2521]
	012 Move X22, [X22+3208]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xC8F000
	021 Move X0, [X0+3216]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8F000
	024 Move X0, [X0+3224]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8F000
	027 Move X0, [X0+3232]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8F000
	030 Move X0, [X0+3208]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2521], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xC8F000
	041 Move X24, 0xC8F000
	042 Move X23, 0xC8F000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3216]
	045 Move X24, [X24+3224]
	046 Move X23, [X23+3232]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+40], X20
	062 Move [X31+48], X21
	063 Move [X31+32], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IApiFriendList> GetFriendsAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A35E0 ADRP X21, 0xC53000
	0x034A35E4 LDRB W8, [X22 + 0x9EC]
	0x034A35E8 LDR X21, [X21 + 0x280]
	0x034A35EC MOV X20, X1
	0x034A35F0 MOV X19, X0
	0x034A35F4 TBNZ X8, 0x0, 0x34A3618
	0x034A35F8 ADRP X0, 0xC8E000
	0x034A35FC LDR X0, [X0 + 0xDC8]
	0x034A3600 BL 0x1C16CF4
	0x034A3604 ADRP X0, 0xC53000
	0x034A3608 LDR X0, [X0 + 0x280]
	0x034A360C BL 0x1C16CF4
	0x034A3610 MOVZ W8, 0x1
	0x034A3614 STRB W8, [X22 + 0x9EC]
	0x034A3618 LDR X0, [X21]
	0x034A361C MOVI V0.2D, 0x0
	0x034A3620 STR X31, [X31 + 0x50]
	0x034A3624 STP V0, V0, [X31 + 0x30]
	0x034A3628 STR V0, [X31 + 0x2]
	0x034A362C ADRP X21, 0xC8E000
	0x034A3630 LDR W8, [X0 + 0xE0]
	0x034A3634 LDR X21, [X21 + 0xDC8]
	0x034A3638 CBNZ W8, 0x34A3640
	0x034A363C BL 0x1C16DFC
	0x034A3640 ADD X8, X31, 0x8
	0x034A3644 MOV X0, X31
	0x034A3648 BL 0x32C4770
	0x034A364C LDUR V0, [X31 + 0x8]
	0x034A3650 LDR X9, [X31 + 0x18]
	0x034A3654 LDR X2, [X21]
	0x034A3658 ADD X8, X31, 0x20
	0x034A365C STP X19, X20, [X31 + 0x40]
	0x034A3660 ORR X20, X8, 0xF
	0x034A3664 MOVN W10, 0x0
	0x034A3668 ADD X1, X31, 0x20
	0x034A366C MOV X0, X20
	0x034A3670 STUR V0, [X31 + 0x28]
	0x034A3674 STR X9, [X31 + 0x38]
	0x034A3678 STR W10, [X31 + 0x20]
	0x034A367C BL 0x218F9B8
	0x034A3680 MOV X0, X20
	0x034A3684 MOV X1, X31
	0x034A3688 BL 0x32C47F8
	0x034A368C LDP X20, X19, [X31 + 0x80]
	0x034A3690 LDP X22, X21, [X31 + 0x70]
	0x034A3694 LDR X30, [X31 + 0x60]
	0x034A3698 ADD X31, X31, 0x90
	0x034A369C RET
	0x034A36A0 SUB X31, X31, 0x80
	0x034A36A4 STR X30, [X31 + 0x40]
	0x034A36A8 STP X24, X23, [X31 + 0x50]
	0x034A36AC STP X22, X21, [X31 + 0x60]
	0x034A36B0 STP X20, X19, [X31 + 0x70]
	0x034A36B4 ADRP X23, 0xF3A000
	0x034A36B8 ADRP X22, 0xC8E000
	0x034A36BC LDRB W8, [X23 + 0x9ED]
	0x034A36C0 LDR X22, [X22 + 0xDD0]
	0x034A36C4 MOV X19, X2
	0x034A36C8 MOV X21, X1
	0x034A36CC MOV X20, X0
	0x034A36D0 TBNZ X8, 0x0, 0x34A370C
	0x034A36D4 ADRP X0, 0xC8E000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF3B000
	010 Move X22, 0xC8F000
	011 Move W8, [X23+2522]
	012 Move X22, [X22+3240]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xC8F000
	021 Move X0, [X0+3248]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8F000
	024 Move X0, [X0+3256]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8F000
	027 Move X0, [X0+3264]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8F000
	030 Move X0, [X0+3240]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2522], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xC8F000
	041 Move X24, 0xC8F000
	042 Move X23, 0xC8F000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3248]
	045 Move X24, [X24+3256]
	046 Move X23, [X23+3264]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+40], X20
	062 Move [X31+48], X21
	063 Move [X31+32], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task DeleteFriendAsync(System.String bearerToken, System.String id, System.String friendId)

Disassembly:
	0x034A36D8 LDR X0, [X0 + 0xDD8]
	0x034A36DC BL 0x1C16CF4
	0x034A36E0 ADRP X0, 0xC8E000
	0x034A36E4 LDR X0, [X0 + 0xDE0]
	0x034A36E8 BL 0x1C16CF4
	0x034A36EC ADRP X0, 0xC8E000
	0x034A36F0 LDR X0, [X0 + 0xDE8]
	0x034A36F4 BL 0x1C16CF4
	0x034A36F8 ADRP X0, 0xC8E000
	0x034A36FC LDR X0, [X0 + 0xDD0]
	0x034A3700 BL 0x1C16CF4
	0x034A3704 MOVZ W8, 0x1
	0x034A3708 STRB W8, [X23 + 0x9ED]
	0x034A370C LDR X0, [X22]
	0x034A3710 MOVI V0.2D, 0x0
	0x034A3714 STP V0, V0, [X31 + 0x20]
	0x034A3718 STP V0, V0, [X31]
	0x034A371C ADRP X22, 0xC8E000
	0x034A3720 ADRP X24, 0xC8E000
	0x034A3724 ADRP X23, 0xC8E000
	0x034A3728 LDR W8, [X0 + 0xE0]
	0x034A372C LDR X22, [X22 + 0xDD8]
	0x034A3730 LDR X24, [X24 + 0xDE0]
	0x034A3734 LDR X23, [X23 + 0xDE8]
	0x034A3738 CBNZ W8, 0x34A3740
	0x034A373C BL 0x1C16DFC
	0x034A3740 LDR X0, [X22]
	0x034A3744 ADD X8, X31, 0x0
	0x034A3748 ORR X22, X8, 0xF
	0x034A374C MOV X8, X22
	0x034A3750 BL 0x263221C
	0x034A3754 LDR X2, [X24]
	0x034A3758 MOVN W8, 0x0
	0x034A375C ADD X1, X31, 0x0
	0x034A3760 MOV X0, X22
	0x034A3764 STP X20, X21, [X31 + 0x28]
	0x034A3768 STR X19, [X31 + 0x20]
	0x034A376C STR W8, [X31]
	0x034A3770 BL 0x1FCB814
	0x034A3774 LDR X1, [X23]
	0x034A3778 MOV X0, X22
	0x034A377C BL 0x2632230
	0x034A3780 LDP X20, X19, [X31 + 0x70]
	0x034A3784 LDP X22, X21, [X31 + 0x60]
	0x034A3788 LDP X24, X23, [X31 + 0x50]
	0x034A378C LDR X30, [X31 + 0x40]
	0x034A3790 ADD X31, X31, 0x80
	0x034A3794 RET
	0x034A3798 SUB X31, X31, 0xD0
	0x034A379C STR X30, [X31 + 0x80]
	0x034A37A0 STP X26, X25, [X31 + 0x90]
	0x034A37A4 STP X24, X23, [X31 + 0xA0]
	0x034A37A8 STP X22, X21, [X31 + 0xB0]
	0x034A37AC STP X20, X19, [X31 + 0xC0]
	0x034A37B0 ADRP X26, 0xF3A000
	0x034A37B4 ADRP X25, 0xC53000
	0x034A37B8 LDRB W8, [X26 + 0x9EE]
	0x034A37BC LDR X25, [X25 + 0x280]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xF3B000
	010 Move X23, 0xC54000
	011 Move W8, [X24+2523]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X19, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xC8F000
	022 Move X0, [X0+3272]
	023 Call 0x1C17CF4
	024 Move X0, 0xC54000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2523], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xC8F000
	037 Move W8, [X0+224]
	038 Move X23, [X23+3272]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+64], X19
	050 Move [X31+72], X20
	051 Or X20, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X20
	057 Move [X31+80], X22
	058 Move [X31+88], X21
	059 Move [X31+40], V0
	060 Move [X31+56], X9
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IApiUserGroupList> GetGroupsAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A37C0 MOV X20, X5
	0x034A37C4 MOV X21, X4
	0x034A37C8 MOV X22, X3
	0x034A37CC MOV X19, X2
	0x034A37D0 MOV X24, X1
	0x034A37D4 MOV X23, X0
	0x034A37D8 TBNZ X8, 0x0, 0x34A37FC
	0x034A37DC ADRP X0, 0xC8E000
	0x034A37E0 LDR X0, [X0 + 0xDF0]
	0x034A37E4 BL 0x1C16CF4
	0x034A37E8 ADRP X0, 0xC53000
	0x034A37EC LDR X0, [X0 + 0x280]
	0x034A37F0 BL 0x1C16CF4
	0x034A37F4 MOVZ W8, 0x1
	0x034A37F8 STRB W8, [X26 + 0x9EE]
	0x034A37FC LDR X0, [X25]
	0x034A3800 MOVI V0.2D, 0x0
	0x034A3804 STR X31, [X31 + 0x70]
	0x034A3808 STP V0, V0, [X31 + 0x50]
	0x034A380C STP V0, V0, [X31 + 0x30]
	0x034A3810 STR V0, [X31 + 0x2]
	0x034A3814 ADRP X25, 0xC8E000
	0x034A3818 LDR W8, [X0 + 0xE0]
	0x034A381C LDR X25, [X25 + 0xDF0]
	0x034A3820 CBNZ W8, 0x34A3828
	0x034A3824 BL 0x1C16DFC
	0x034A3828 ADD X8, X31, 0x8
	0x034A382C MOV X0, X31
	0x034A3830 BL 0x32C4770
	0x034A3834 LDUR V0, [X31 + 0x8]
	0x034A3838 LDR X9, [X31 + 0x18]
	0x034A383C LDR X2, [X25]
	0x034A3840 ADD X8, X31, 0x20
	0x034A3844 STR X20, [X31 + 0x58]
	0x034A3848 ORR X20, X8, 0xF
	0x034A384C MOVN W10, 0x0
	0x034A3850 ADD X1, X31, 0x20
	0x034A3854 MOV X0, X20
	0x034A3858 STP X23, X24, [X31 + 0x60]
	0x034A385C STP X22, X21, [X31 + 0x48]
	0x034A3860 STUR V0, [X31 + 0x28]
	0x034A3864 STP X9, X19, [X31 + 0x38]
	0x034A3868 STR W10, [X31 + 0x20]
	0x034A386C BL 0x218FBB8
	0x034A3870 MOV X0, X20
	0x034A3874 MOV X1, X31
	0x034A3878 BL 0x32C47F8
	0x034A387C LDP X20, X19, [X31 + 0xC0]
	0x034A3880 LDP X22, X21, [X31 + 0xB0]
	0x034A3884 LDP X24, X23, [X31 + 0xA0]
	0x034A3888 LDP X26, X25, [X31 + 0x90]
	0x034A388C LDR X30, [X31 + 0x80]
	0x034A3890 ADD X31, X31, 0xD0
	0x034A3894 RET
	0x034A3898 SUB X31, X31, 0xA0
	0x034A389C STR X30, [X31 + 0x50]
	0x034A38A0 STP X26, X25, [X31 + 0x60]
	0x034A38A4 STP X24, X23, [X31 + 0x70]
	0x034A38A8 STP X22, X21, [X31 + 0x80]
	0x034A38AC STP X20, X19, [X31 + 0x90]
	0x034A38B0 ADRP X25, 0xF3A000
	0x034A38B4 ADRP X24, 0xC8E000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF3B000
	010 Move X22, 0xC8F000
	011 Move W8, [X23+2524]
	012 Move X22, [X22+3280]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xC8F000
	021 Move X0, [X0+3288]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8F000
	024 Move X0, [X0+3296]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8F000
	027 Move X0, [X0+3304]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8F000
	030 Move X0, [X0+3280]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2524], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xC8F000
	041 Move X24, 0xC8F000
	042 Move X23, 0xC8F000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3288]
	045 Move X24, [X24+3296]
	046 Move X23, [X23+3304]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+40], X20
	062 Move [X31+48], X21
	063 Move [X31+32], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task DeleteGroupUserAsync(System.String bearerToken, System.String id, System.String groupId)

Disassembly:
	0x034A38B8 LDRB W8, [X25 + 0x9EF]
	0x034A38BC LDR X24, [X24 + 0xDF8]
	0x034A38C0 MOV X19, X4
	0x034A38C4 MOV X21, X3
	0x034A38C8 MOV X22, X2
	0x034A38CC MOV X23, X1
	0x034A38D0 MOV X20, X0
	0x034A38D4 TBNZ X8, 0x0, 0x34A3910
	0x034A38D8 ADRP X0, 0xC8E000
	0x034A38DC LDR X0, [X0 + 0xE00]
	0x034A38E0 BL 0x1C16CF4
	0x034A38E4 ADRP X0, 0xC8E000
	0x034A38E8 LDR X0, [X0 + 0xE08]
	0x034A38EC BL 0x1C16CF4
	0x034A38F0 ADRP X0, 0xC8E000
	0x034A38F4 LDR X0, [X0 + 0xE10]
	0x034A38F8 BL 0x1C16CF4
	0x034A38FC ADRP X0, 0xC8E000
	0x034A3900 LDR X0, [X0 + 0xDF8]
	0x034A3904 BL 0x1C16CF4
	0x034A3908 MOVZ W8, 0x1
	0x034A390C STRB W8, [X25 + 0x9EF]
	0x034A3910 LDR X0, [X24]
	0x034A3914 MOVI V0.2D, 0x0
	0x034A3918 STP V0, V0, [X31 + 0x30]
	0x034A391C STP V0, V0, [X31 + 0x10]
	0x034A3920 STR V0, [X31]
	0x034A3924 ADRP X24, 0xC8E000
	0x034A3928 ADRP X26, 0xC8E000
	0x034A392C ADRP X25, 0xC8E000
	0x034A3930 LDR W8, [X0 + 0xE0]
	0x034A3934 LDR X24, [X24 + 0xE00]
	0x034A3938 LDR X26, [X26 + 0xE08]
	0x034A393C LDR X25, [X25 + 0xE10]
	0x034A3940 CBNZ W8, 0x34A3948
	0x034A3944 BL 0x1C16DFC
	0x034A3948 LDR X0, [X24]
	0x034A394C ADD X8, X31, 0x0
	0x034A3950 ORR X24, X8, 0xF
	0x034A3954 MOV X8, X24
	0x034A3958 BL 0x263221C
	0x034A395C LDR X2, [X26]
	0x034A3960 MOVN W8, 0x0
	0x034A3964 ADD X1, X31, 0x0
	0x034A3968 MOV X0, X24
	0x034A396C STP X20, X23, [X31 + 0x38]
	0x034A3970 STP X22, X21, [X31 + 0x20]
	0x034A3974 STR X19, [X31 + 0x30]
	0x034A3978 STR W8, [X31]
	0x034A397C BL 0x1FCB614
	0x034A3980 LDR X1, [X25]
	0x034A3984 MOV X0, X24
	0x034A3988 BL 0x2632230
	0x034A398C LDP X20, X19, [X31 + 0x90]
	0x034A3990 LDP X22, X21, [X31 + 0x80]
	0x034A3994 LDP X24, X23, [X31 + 0x70]
	0x034A3998 LDP X26, X25, [X31 + 0x60]
	0x034A399C LDR X30, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xF3B000
	010 Move X23, 0xC54000
	011 Move W8, [X24+2525]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X19, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xC8F000
	022 Move X0, [X0+3312]
	023 Call 0x1C17CF4
	024 Move X0, 0xC54000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2525], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xC8F000
	037 Move W8, [X0+224]
	038 Move X23, [X23+3312]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+64], X19
	050 Move [X31+72], X20
	051 Or X20, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X20
	057 Move [X31+80], X22
	058 Move [X31+88], X21
	059 Move [X31+40], V0
	060 Move [X31+56], X9
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task UnbanUserAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A39A0 ADD X31, X31, 0xA0
	0x034A39A4 RET
	0x034A39A8 SUB X31, X31, 0xB0
	0x034A39AC STP X30, X27, [X31 + 0x60]
	0x034A39B0 STP X26, X25, [X31 + 0x70]
	0x034A39B4 STP X24, X23, [X31 + 0x80]
	0x034A39B8 STP X22, X21, [X31 + 0x90]
	0x034A39BC STP X20, X19, [X31 + 0xA0]
	0x034A39C0 ADRP X26, 0xF3A000
	0x034A39C4 ADRP X25, 0xC8E000
	0x034A39C8 LDRB W8, [X26 + 0x9F0]
	0x034A39CC LDR X25, [X25 + 0xE18]
	0x034A39D0 MOV X19, X5
	0x034A39D4 MOV X20, X4
	0x034A39D8 MOV X21, X3
	0x034A39DC MOV X22, X2
	0x034A39E0 MOV X23, X1
	0x034A39E4 MOV X24, X0
	0x034A39E8 TBNZ X8, 0x0, 0x34A3A24
	0x034A39EC ADRP X0, 0xC8E000
	0x034A39F0 LDR X0, [X0 + 0xE20]
	0x034A39F4 BL 0x1C16CF4
	0x034A39F8 ADRP X0, 0xC8E000
	0x034A39FC LDR X0, [X0 + 0xE28]
	0x034A3A00 BL 0x1C16CF4
	0x034A3A04 ADRP X0, 0xC8E000
	0x034A3A08 LDR X0, [X0 + 0xE30]
	0x034A3A0C BL 0x1C16CF4
	0x034A3A10 ADRP X0, 0xC8E000
	0x034A3A14 LDR X0, [X0 + 0xE18]
	0x034A3A18 BL 0x1C16CF4
	0x034A3A1C MOVZ W8, 0x1
	0x034A3A20 STRB W8, [X26 + 0x9F0]
	0x034A3A24 LDR X0, [X25]
	0x034A3A28 MOVI V0.2D, 0x0
	0x034A3A2C STR X31, [X31 + 0x50]
	0x034A3A30 STP V0, V0, [X31 + 0x30]
	0x034A3A34 STP V0, V0, [X31 + 0x10]
	0x034A3A38 STR V0, [X31]
	0x034A3A3C ADRP X25, 0xC8E000
	0x034A3A40 ADRP X27, 0xC8E000
	0x034A3A44 ADRP X26, 0xC8E000
	0x034A3A48 LDR W8, [X0 + 0xE0]
	0x034A3A4C LDR X25, [X25 + 0xE20]
	0x034A3A50 LDR X27, [X27 + 0xE28]
	0x034A3A54 LDR X26, [X26 + 0xE30]
	0x034A3A58 CBNZ W8, 0x34A3A60
	0x034A3A5C BL 0x1C16DFC
	0x034A3A60 LDR X0, [X25]
	0x034A3A64 ADD X8, X31, 0x0
	0x034A3A68 ORR X25, X8, 0xF
	0x034A3A6C MOV X8, X25
	0x034A3A70 BL 0x263221C

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3B000
	009 Move X22, 0xC54000
	010 Move W8, [X23+2526]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+3320]
	021 Call 0x1C17CF4
	022 Move X0, 0xC54000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2526], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8F000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3320]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task UnlinkCustomAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A3A74 LDR X2, [X27]
	0x034A3A78 MOVN W8, 0x0
	0x034A3A7C ADD X1, X31, 0x0
	0x034A3A80 MOV X0, X25
	0x034A3A84 STP X24, X23, [X31 + 0x40]
	0x034A3A88 STP X22, X21, [X31 + 0x20]
	0x034A3A8C STP X20, X19, [X31 + 0x30]
	0x034A3A90 STR W8, [X31]
	0x034A3A94 BL 0x1FCBA14
	0x034A3A98 LDR X1, [X26]
	0x034A3A9C MOV X0, X25
	0x034A3AA0 BL 0x2632230
	0x034A3AA4 LDP X20, X19, [X31 + 0xA0]
	0x034A3AA8 LDP X22, X21, [X31 + 0x90]
	0x034A3AAC LDP X24, X23, [X31 + 0x80]
	0x034A3AB0 LDP X26, X25, [X31 + 0x70]
	0x034A3AB4 LDP X30, X27, [X31 + 0x60]
	0x034A3AB8 ADD X31, X31, 0xB0
	0x034A3ABC RET
	0x034A3AC0 SUB X31, X31, 0xD0
	0x034A3AC4 STR X30, [X31 + 0x80]
	0x034A3AC8 STP X26, X25, [X31 + 0x90]
	0x034A3ACC STP X24, X23, [X31 + 0xA0]
	0x034A3AD0 STP X22, X21, [X31 + 0xB0]
	0x034A3AD4 STP X20, X19, [X31 + 0xC0]
	0x034A3AD8 ADRP X26, 0xF3A000
	0x034A3ADC ADRP X25, 0xC53000
	0x034A3AE0 LDRB W8, [X26 + 0x9F1]
	0x034A3AE4 LDR X25, [X25 + 0x280]
	0x034A3AE8 MOV X20, X5
	0x034A3AEC MOV X21, X4
	0x034A3AF0 MOV X22, X3
	0x034A3AF4 MOV X19, X2
	0x034A3AF8 MOV X24, X1
	0x034A3AFC MOV X23, X0
	0x034A3B00 TBNZ X8, 0x0, 0x34A3B24
	0x034A3B04 ADRP X0, 0xC8E000
	0x034A3B08 LDR X0, [X0 + 0xE38]
	0x034A3B0C BL 0x1C16CF4
	0x034A3B10 ADRP X0, 0xC53000
	0x034A3B14 LDR X0, [X0 + 0x280]
	0x034A3B18 BL 0x1C16CF4
	0x034A3B1C MOVZ W8, 0x1
	0x034A3B20 STRB W8, [X26 + 0x9F1]
	0x034A3B24 LDR X0, [X25]
	0x034A3B28 MOVI V0.2D, 0x0
	0x034A3B2C STR X31, [X31 + 0x70]
	0x034A3B30 STP V0, V0, [X31 + 0x50]
	0x034A3B34 STP V0, V0, [X31 + 0x30]
	0x034A3B38 STR V0, [X31 + 0x2]
	0x034A3B3C ADRP X25, 0xC8E000
	0x034A3B40 LDR W8, [X0 + 0xE0]
	0x034A3B44 LDR X25, [X25 + 0xE38]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3B000
	009 Move X22, 0xC54000
	010 Move W8, [X23+2527]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+3328]
	021 Call 0x1C17CF4
	022 Move X0, 0xC54000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2527], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8F000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3328]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task UnlinkDeviceAsync(System.String bearerToken, System.String id, Nakama.Console.ConsoleUnlinkDeviceRequest body)

Disassembly:
	0x034A3B48 CBNZ W8, 0x34A3B50
	0x034A3B4C BL 0x1C16DFC
	0x034A3B50 ADD X8, X31, 0x8
	0x034A3B54 MOV X0, X31
	0x034A3B58 BL 0x32C4770
	0x034A3B5C LDUR V0, [X31 + 0x8]
	0x034A3B60 LDR X9, [X31 + 0x18]
	0x034A3B64 LDR X2, [X25]
	0x034A3B68 ADD X8, X31, 0x20
	0x034A3B6C STR X20, [X31 + 0x58]
	0x034A3B70 ORR X20, X8, 0xF
	0x034A3B74 MOVN W10, 0x0
	0x034A3B78 ADD X1, X31, 0x20
	0x034A3B7C MOV X0, X20
	0x034A3B80 STP X23, X24, [X31 + 0x60]
	0x034A3B84 STP X22, X21, [X31 + 0x48]
	0x034A3B88 STUR V0, [X31 + 0x28]
	0x034A3B8C STP X9, X19, [X31 + 0x38]
	0x034A3B90 STR W10, [X31 + 0x20]
	0x034A3B94 BL 0x218FAB8
	0x034A3B98 MOV X0, X20
	0x034A3B9C MOV X1, X31
	0x034A3BA0 BL 0x32C47F8
	0x034A3BA4 LDP X20, X19, [X31 + 0xC0]
	0x034A3BA8 LDP X22, X21, [X31 + 0xB0]
	0x034A3BAC LDP X24, X23, [X31 + 0xA0]
	0x034A3BB0 LDP X26, X25, [X31 + 0x90]
	0x034A3BB4 LDR X30, [X31 + 0x80]
	0x034A3BB8 ADD X31, X31, 0xD0
	0x034A3BBC RET
	0x034A3BC0 SUB X31, X31, 0x90
	0x034A3BC4 STR X30, [X31 + 0x60]
	0x034A3BC8 STP X22, X21, [X31 + 0x70]
	0x034A3BCC STP X20, X19, [X31 + 0x80]
	0x034A3BD0 ADRP X22, 0xF3A000
	0x034A3BD4 ADRP X21, 0xC53000
	0x034A3BD8 LDRB W8, [X22 + 0x9F2]
	0x034A3BDC LDR X21, [X21 + 0x280]
	0x034A3BE0 MOV X20, X1
	0x034A3BE4 MOV X19, X0
	0x034A3BE8 TBNZ X8, 0x0, 0x34A3C0C
	0x034A3BEC ADRP X0, 0xC8E000
	0x034A3BF0 LDR X0, [X0 + 0xE40]
	0x034A3BF4 BL 0x1C16CF4
	0x034A3BF8 ADRP X0, 0xC53000
	0x034A3BFC LDR X0, [X0 + 0x280]
	0x034A3C00 BL 0x1C16CF4
	0x034A3C04 MOVZ W8, 0x1
	0x034A3C08 STRB W8, [X22 + 0x9F2]
	0x034A3C0C LDR X0, [X21]
	0x034A3C10 MOVI V0.2D, 0x0
	0x034A3C14 STR X31, [X31 + 0x50]
	0x034A3C18 STP V0, V0, [X31 + 0x30]
	0x034A3C1C STR V0, [X31 + 0x2]
	0x034A3C20 ADRP X21, 0xC8E000
	0x034A3C24 LDR W8, [X0 + 0xE0]
	0x034A3C28 LDR X21, [X21 + 0xE40]
	0x034A3C2C CBNZ W8, 0x34A3C34

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xF3B000
	010 Move X23, 0xC54000
	011 Move W8, [X24+2528]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X19, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xC8F000
	022 Move X0, [X0+3336]
	023 Call 0x1C17CF4
	024 Move X0, 0xC54000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2528], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xC8F000
	037 Move W8, [X0+224]
	038 Move X23, [X23+3336]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+64], X19
	050 Move [X31+72], X20
	051 Or X20, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X20
	057 Move [X31+80], X22
	058 Move [X31+88], X21
	059 Move [X31+40], V0
	060 Move [X31+56], X9
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task UnlinkEmailAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A3C30 BL 0x1C16DFC
	0x034A3C34 ADD X8, X31, 0x8
	0x034A3C38 MOV X0, X31
	0x034A3C3C BL 0x32C4770
	0x034A3C40 LDUR V0, [X31 + 0x8]
	0x034A3C44 LDR X9, [X31 + 0x18]
	0x034A3C48 LDR X2, [X21]
	0x034A3C4C ADD X8, X31, 0x20
	0x034A3C50 STP X19, X20, [X31 + 0x40]
	0x034A3C54 ORR X20, X8, 0xF
	0x034A3C58 MOVN W10, 0x0
	0x034A3C5C ADD X1, X31, 0x20
	0x034A3C60 MOV X0, X20
	0x034A3C64 STUR V0, [X31 + 0x28]
	0x034A3C68 STR X9, [X31 + 0x38]
	0x034A3C6C STR W10, [X31 + 0x20]
	0x034A3C70 BL 0x218FCB8
	0x034A3C74 MOV X0, X20
	0x034A3C78 MOV X1, X31
	0x034A3C7C BL 0x32C47F8
	0x034A3C80 LDP X20, X19, [X31 + 0x80]
	0x034A3C84 LDP X22, X21, [X31 + 0x70]
	0x034A3C88 LDR X30, [X31 + 0x60]
	0x034A3C8C ADD X31, X31, 0x90
	0x034A3C90 RET
	0x034A3C94 SUB X31, X31, 0xA0
	0x034A3C98 STR X30, [X31 + 0x50]
	0x034A3C9C STP X26, X25, [X31 + 0x60]
	0x034A3CA0 STP X24, X23, [X31 + 0x70]
	0x034A3CA4 STP X22, X21, [X31 + 0x80]
	0x034A3CA8 STP X20, X19, [X31 + 0x90]
	0x034A3CAC ADRP X25, 0xF3A000
	0x034A3CB0 ADRP X24, 0xC8E000
	0x034A3CB4 LDRB W8, [X25 + 0x9F3]
	0x034A3CB8 LDR X24, [X24 + 0xE48]
	0x034A3CBC MOV X19, X4
	0x034A3CC0 MOV X20, X3
	0x034A3CC4 MOV X21, X2
	0x034A3CC8 MOV X22, X1
	0x034A3CCC MOV X23, X0
	0x034A3CD0 TBNZ X8, 0x0, 0x34A3D0C
	0x034A3CD4 ADRP X0, 0xC8E000
	0x034A3CD8 LDR X0, [X0 + 0xE50]
	0x034A3CDC BL 0x1C16CF4
	0x034A3CE0 ADRP X0, 0xC8E000
	0x034A3CE4 LDR X0, [X0 + 0xE58]
	0x034A3CE8 BL 0x1C16CF4
	0x034A3CEC ADRP X0, 0xC8E000
	0x034A3CF0 LDR X0, [X0 + 0xE60]
	0x034A3CF4 BL 0x1C16CF4
	0x034A3CF8 ADRP X0, 0xC8E000
	0x034A3CFC LDR X0, [X0 + 0xE48]
	0x034A3D00 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3B000
	009 Move X22, 0xC54000
	010 Move W8, [X23+2529]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+3344]
	021 Call 0x1C17CF4
	022 Move X0, 0xC54000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2529], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8F000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3344]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task UnlinkFacebookAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A3D04 MOVZ W8, 0x1
	0x034A3D08 STRB W8, [X25 + 0x9F3]
	0x034A3D0C LDR X0, [X24]
	0x034A3D10 MOVI V0.2D, 0x0
	0x034A3D14 STR X31, [X31 + 0x40]
	0x034A3D18 STP V0, V0, [X31 + 0x20]
	0x034A3D1C STP V0, V0, [X31]
	0x034A3D20 ADRP X24, 0xC8E000
	0x034A3D24 ADRP X26, 0xC8E000
	0x034A3D28 ADRP X25, 0xC8E000
	0x034A3D2C LDR W8, [X0 + 0xE0]
	0x034A3D30 LDR X24, [X24 + 0xE50]
	0x034A3D34 LDR X26, [X26 + 0xE58]
	0x034A3D38 LDR X25, [X25 + 0xE60]
	0x034A3D3C CBNZ W8, 0x34A3D44
	0x034A3D40 BL 0x1C16DFC
	0x034A3D44 LDR X0, [X24]
	0x034A3D48 ADD X8, X31, 0x0
	0x034A3D4C ORR X24, X8, 0xF
	0x034A3D50 MOV X8, X24
	0x034A3D54 BL 0x263221C
	0x034A3D58 LDR X2, [X26]
	0x034A3D5C MOVN W8, 0x0
	0x034A3D60 ADD X1, X31, 0x0
	0x034A3D64 MOV X0, X24
	0x034A3D68 STP X23, X22, [X31 + 0x30]
	0x034A3D6C STR X21, [X31 + 0x20]
	0x034A3D70 STRH W20, [X31 + 0x28]
	0x034A3D74 STRH W19, [X31 + 0x2A]
	0x034A3D78 STR W8, [X31]
	0x034A3D7C BL 0x1FCB914
	0x034A3D80 LDR X1, [X25]
	0x034A3D84 MOV X0, X24
	0x034A3D88 BL 0x2632230
	0x034A3D8C LDP X20, X19, [X31 + 0x90]
	0x034A3D90 LDP X22, X21, [X31 + 0x80]
	0x034A3D94 LDP X24, X23, [X31 + 0x70]
	0x034A3D98 LDP X26, X25, [X31 + 0x60]
	0x034A3D9C LDR X30, [X31 + 0x50]
	0x034A3DA0 ADD X31, X31, 0xA0
	0x034A3DA4 RET
	0x034A3DA8 SUB X31, X31, 0x60
	0x034A3DAC STR X30, [X31 + 0x10]
	0x034A3DB0 STP X26, X25, [X31 + 0x20]
	0x034A3DB4 STP X24, X23, [X31 + 0x30]
	0x034A3DB8 STP X22, X21, [X31 + 0x40]
	0x034A3DBC STP X20, X19, [X31 + 0x50]
	0x034A3DC0 ADRP X20, 0xF3A000
	0x034A3DC4 LDRB W8, [X20 + 0x9F4]
	0x034A3DC8 MOV X19, X0
	0x034A3DCC TBNZ X8, 0x0, 0x34A3E80
	0x034A3DD0 ADRP X0, 0xC8E000
	0x034A3DD4 LDR X0, [X0 + 0xE68]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3B000
	009 Move X22, 0xC54000
	010 Move W8, [X23+2530]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+3352]
	021 Call 0x1C17CF4
	022 Move X0, 0xC54000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2530], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8F000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3352]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task UnlinkFacebookInstantGameAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A3DD8 BL 0x1C16CF4
	0x034A3DDC ADRP X0, 0xC8E000
	0x034A3DE0 LDR X0, [X0 + 0xE70]
	0x034A3DE4 BL 0x1C16CF4
	0x034A3DE8 ADRP X0, 0xC8E000
	0x034A3DEC LDR X0, [X0 + 0xD68]
	0x034A3DF0 BL 0x1C16CF4
	0x034A3DF4 ADRP X0, 0xC51000
	0x034A3DF8 LDR X0, [X0 + 0x6C0]
	0x034A3DFC BL 0x1C16CF4
	0x034A3E00 ADRP X0, 0xC51000
	0x034A3E04 LDR X0, [X0 + 0x6D0]
	0x034A3E08 BL 0x1C16CF4
	0x034A3E0C ADRP X0, 0xC8B000
	0x034A3E10 LDR X0, [X0 + 0x7B8]
	0x034A3E14 BL 0x1C16CF4
	0x034A3E18 ADRP X0, 0xC8E000
	0x034A3E1C LDR X0, [X0 + 0xE78]
	0x034A3E20 BL 0x1C16CF4
	0x034A3E24 ADRP X0, 0xC53000
	0x034A3E28 LDR X0, [X0 + 0x1E0]
	0x034A3E2C BL 0x1C16CF4
	0x034A3E30 ADRP X0, 0xC53000
	0x034A3E34 LDR X0, [X0 + 0x1F0]
	0x034A3E38 BL 0x1C16CF4
	0x034A3E3C ADRP X0, 0xC53000
	0x034A3E40 LDR X0, [X0 + 0x1F8]
	0x034A3E44 BL 0x1C16CF4
	0x034A3E48 ADRP X0, 0xC59000
	0x034A3E4C LDR X0, [X0 + 0x3A0]
	0x034A3E50 BL 0x1C16CF4
	0x034A3E54 ADRP X0, 0xC79000
	0x034A3E58 LDR X0, [X0 + 0x4D8]
	0x034A3E5C BL 0x1C16CF4
	0x034A3E60 ADRP X0, 0xC8E000
	0x034A3E64 LDR X0, [X0 + 0xE80]
	0x034A3E68 BL 0x1C16CF4
	0x034A3E6C ADRP X0, 0xC50000
	0x034A3E70 LDR X0, [X0 + 0x988]
	0x034A3E74 BL 0x1C16CF4
	0x034A3E78 MOVZ W8, 0x1
	0x034A3E7C STRB W8, [X20 + 0x9F4]
	0x034A3E80 STR X31, [X31 + 0x18]
	0x034A3E84 ADRP X26, 0xC8E000
	0x034A3E88 LDR W8, [X19]
	0x034A3E8C LDR X26, [X26 + 0xD68]
	0x034A3E90 CBZ W8, 0x34A3FCC
	0x034A3E94 LDR X8, [X19 + 0x20]
	0x034A3E98 CBZ X8, 0x34A4100
	0x034A3E9C LDR X25, [X19 + 0x28]
	0x034A3EA0 CBZ X25, 0x34A4148
	0x034A3EA4 ADRP X8, 0xC8E000
	0x034A3EA8 ADRP X9, 0xC50000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3B000
	009 Move X22, 0xC54000
	010 Move W8, [X23+2531]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+3360]
	021 Call 0x1C17CF4
	022 Move X0, 0xC54000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2531], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8F000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3360]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task UnlinkGameCenterAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A3EAC ADRP X10, 0xC59000
	0x034A3EB0 LDR X8, [X8 + 0xE80]
	0x034A3EB4 LDR X9, [X9 + 0x988]
	0x034A3EB8 LDR X10, [X10 + 0x3A0]
	0x034A3EBC LDR X23, [X25 + 0x10]
	0x034A3EC0 LDR X22, [X8]
	0x034A3EC4 LDR X21, [X9]
	0x034A3EC8 LDR X0, [X10]
	0x034A3ECC BL 0x1C16F10
	0x034A3ED0 MOV X20, X0
	0x034A3ED4 MOV X1, X23
	0x034A3ED8 MOV X2, X31
	0x034A3EDC BL 0x36281F8
	0x034A3EE0 CBZ X20, 0x34A414C
	0x034A3EE4 MOV X0, X20
	0x034A3EE8 MOV X1, X22
	0x034A3EEC MOV X2, X31
	0x034A3EF0 BL 0x36288CC
	0x034A3EF4 MOV X0, X20
	0x034A3EF8 MOV X1, X21
	0x034A3EFC MOV X2, X31
	0x034A3F00 BL 0x3628980
	0x034A3F04 MOV X0, X20
	0x034A3F08 MOV X1, X31
	0x034A3F0C BL 0x3628A38
	0x034A3F10 ADRP X8, 0xC79000
	0x034A3F14 ADRP X9, 0xC51000
	0x034A3F18 LDR X8, [X8 + 0x4D8]
	0x034A3F1C LDR X9, [X9 + 0x6D0]
	0x034A3F20 MOV X20, X0
	0x034A3F24 LDR X21, [X8]
	0x034A3F28 LDR X0, [X9]
	0x034A3F2C BL 0x1C16F10
	0x034A3F30 ADRP X8, 0xC51000
	0x034A3F34 LDR X8, [X8 + 0x6C0]
	0x034A3F38 MOV X22, X0
	0x034A3F3C LDR X1, [X8]
	0x034A3F40 BL 0x2AA4804
	0x034A3F44 LDR X0, [X19 + 0x20]
	0x034A3F48 MOV X1, X31
	0x034A3F4C BL 0x3483BE4
	0x034A3F50 MOV X23, X0
	0x034A3F54 MOV X0, X31
	0x034A3F58 BL 0x3241948
	0x034A3F5C CBZ X0, 0x34A4150
	0x034A3F60 LDR X8, [X0]
	0x034A3F64 LDR X9, [X8 + 0x268]
	0x034A3F68 LDR X2, [X8 + 0x270]
	0x034A3F6C MOV X1, X23
	0x034A3F70 BLR X9
	0x034A3F74 LDR X24, [X25 + 0x20]
	0x034A3F78 CBZ X24, 0x34A4154
	0x034A3F7C ADRP X10, 0xC8B000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3B000
	009 Move X22, 0xC54000
	010 Move W8, [X23+2532]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+3368]
	021 Call 0x1C17CF4
	022 Move X0, 0xC54000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2532], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8F000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3368]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task UnlinkGoogleAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A3F80 LDR X8, [X24]
	0x034A3F84 LDR X10, [X10 + 0x7B8]
	0x034A3F88 LDR W25, [X25 + 0x18]
	0x034A3F8C MOV X23, X0
	0x034A3F90 LDRH W9, [X8 + 0x12E]
	0x034A3F94 LDR X1, [X10]
	0x034A3F98 CBZ X9, 0x34A3FBC
	0x034A3F9C LDR X10, [X8 + 0xB0]
	0x034A3FA0 ADD X10, X10, 0x8
	0x034A3FA4 LDUR X11, [X10 - 0x8]
	0x034A3FA8 CMP X11, X1
	0x034A3FAC B.EQ 0x34A3FE4
	0x034A3FB0 SUBS X9, X9, 0x1
	0x034A3FB4 ADD X10, X10, 0x10
	0x034A3FB8 B.NE 0x34A3FA4
	0x034A3FBC MOVZ W2, 0x3
	0x034A3FC0 MOV X0, X24
	0x034A3FC4 BL 0x1C5C788
	0x034A3FC8 B 0x34A3FF4
	0x034A3FCC LDR X8, [X19 + 0x30]
	0x034A3FD0 MOVN W9, 0x0
	0x034A3FD4 STR X8, [X31 + 0x18]
	0x034A3FD8 STR X31, [X19 + 0x30]
	0x034A3FDC STR W9, [X19]
	0x034A3FE0 B 0x34A4050
	0x034A3FE4 LDR W9, [X10]
	0x034A3FE8 ADD W9, W9, 0x3
	0x034A3FEC ADD X8, X8, W9, 0x4, SXTW
	0x034A3FF0 ADD X0, X8, 0x138
	0x034A3FF4 LDP X8, X9, [X0]
	0x034A3FF8 MOV X0, X24
	0x034A3FFC MOV X1, X21
	0x034A4000 MOV X2, X20
	0x034A4004 MOV X3, X22
	0x034A4008 MOV X4, X23
	0x034A400C MOV W5, W25
	0x034A4010 MOV X6, X31
	0x034A4014 MOV X7, X31
	0x034A4018 STR X9, [X31]
	0x034A401C BLR X8
	0x034A4020 CBZ X0, 0x34A4158
	0x034A4024 ADRP X8, 0xC52000
	0x034A4028 LDR X8, [X8 + 0x1F8]
	0x034A402C LDR X1, [X8]
	0x034A4030 BL 0x269F5D0
	0x034A4034 ADRP X8, 0xC52000
	0x034A4038 LDR X8, [X8 + 0x1F0]
	0x034A403C STR X0, [X31 + 0x18]
	0x034A4040 LDR X1, [X8]
	0x034A4044 ADD X0, X31, 0x18
	0x034A4048 BL 0x2677430
	0x034A404C TBZ X0, 0x0, 0x34A40AC
	0x034A4050 ADRP X8, 0xC52000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3B000
	009 Move X22, 0xC54000
	010 Move W8, [X23+2533]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+3376]
	021 Call 0x1C17CF4
	022 Move X0, 0xC54000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2533], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8F000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3376]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task UnlinkSteamAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A4054 LDR X8, [X8 + 0x1E0]
	0x034A4058 ADD X0, X31, 0x18
	0x034A405C LDR X1, [X8]
	0x034A4060 BL 0x2677474
	0x034A4064 ADRP X8, 0xC8D000
	0x034A4068 LDR X8, [X8 + 0xE78]
	0x034A406C LDR X1, [X8]
	0x034A4070 BL 0x220E6DC
	0x034A4074 MOVN W8, 0x1
	0x034A4078 STR W8, [X19], #0x8
	0x034A407C MOV X20, X0
	0x034A4080 LDR X0, [X26]
	0x034A4084 ADRP X21, 0xC8D000
	0x034A4088 LDR W8, [X0 + 0xE0]
	0x034A408C LDR X21, [X21 + 0xE70]
	0x034A4090 CBNZ W8, 0x34A4098
	0x034A4094 BL 0x1C16DFC
	0x034A4098 LDR X2, [X21]
	0x034A409C MOV X0, X19
	0x034A40A0 MOV X1, X20
	0x034A40A4 BL 0x26322B0
	0x034A40A8 B 0x34A40E4
	0x034A40AC STR W31, [X19]
	0x034A40B0 LDR X8, [X31 + 0x18]
	0x034A40B4 STR X8, [X19 + 0x30]
	0x034A40B8 LDR X0, [X26]
	0x034A40BC LDR W8, [X0 + 0xE0]
	0x034A40C0 CBNZ W8, 0x34A40C8
	0x034A40C4 BL 0x1C16DFC
	0x034A40C8 ADRP X8, 0xC8D000
	0x034A40CC LDR X8, [X8 + 0xE68]
	0x034A40D0 ADD X0, X19, 0x8
	0x034A40D4 LDR X3, [X8]
	0x034A40D8 ADD X1, X31, 0x18
	0x034A40DC MOV X2, X19
	0x034A40E0 BL 0x1FB6FA0
	0x034A40E4 LDP X20, X19, [X31 + 0x50]
	0x034A40E8 LDP X22, X21, [X31 + 0x40]
	0x034A40EC LDP X24, X23, [X31 + 0x30]
	0x034A40F0 LDP X26, X25, [X31 + 0x20]
	0x034A40F4 LDR X30, [X31 + 0x10]
	0x034A40F8 ADD X31, X31, 0x60
	0x034A40FC RET
	0x034A4100 ADRP X0, 0xC57000
	0x034A4104 LDR X0, [X0 + 0x578]
	0x034A4108 BL 0x1C16D08
	0x034A410C BL 0x1C16F10
	0x034A4110 MOV X20, X0
	0x034A4114 ADRP X0, 0xC8A000
	0x034A4118 LDR X0, [X0 + 0xBC8]
	0x034A411C BL 0x1C16D08
	0x034A4120 MOV X1, X0
	0x034A4124 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF3A000
	009 Move X22, 0xC53000
	010 Move W8, [X23+2534]
	011 Move X22, [X22+640]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC8E000
	020 Move X0, [X0+3384]
	021 Call 0x1C17CF4
	022 Move X0, 0xC53000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2534], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xC8E000
	034 Move W8, [X0+224]
	035 Move X22, [X22+3384]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IConsoleWalletLedgerList> GetWalletLedgerAsync(System.String bearerToken, System.String id)

Disassembly:
	0x034A4128 MOV X2, X31
	0x034A412C BL 0x3314A68
	0x034A4130 ADRP X0, 0xC8D000
	0x034A4134 LDR X0, [X0 + 0xE88]
	0x034A4138 BL 0x1C16D08
	0x034A413C MOV X1, X0
	0x034A4140 MOV X0, X20
	0x034A4144 BL 0x1C16DEC
	0x034A4148 BL 0x1C16F20
	0x034A414C BL 0x1C16F20
	0x034A4150 BL 0x1C16F20
	0x034A4154 BL 0x1C16F20
	0x034A4158 BL 0x1C16F20
	0x034A415C B 0x34A41A0
	0x034A4160 B 0x34A41A0
	0x034A4164 B 0x34A41A0
	0x034A4168 B 0x34A41A0
	0x034A416C B 0x34A41A0
	0x034A4170 B 0x34A41A0
	0x034A4174 B 0x34A41A0
	0x034A4178 B 0x34A41A0
	0x034A417C B 0x34A41A0
	0x034A4180 B 0x34A41A0
	0x034A4184 B 0x34A41A0
	0x034A4188 B 0x34A41A0
	0x034A418C B 0x34A41A0
	0x034A4190 B 0x34A41A0
	0x034A4194 B 0x34A41A0
	0x034A4198 B 0x34A41A0
	0x034A419C B 0x34A41A0
	0x034A41A0 MOV X20, X0
	0x034A41A4 CMP W1, 0x1
	0x034A41A8 B.NE 0x34A4244
	0x034A41AC MOV X0, X20
	0x034A41B0 BL 0x3EB1AD0
	0x034A41B4 MOV X20, X0
	0x034A41B8 ADRP X0, 0xC4F000
	0x034A41BC LDR X0, [X0 + 0x7D0]
	0x034A41C0 BL 0x1C16D08
	0x034A41C4 LDR X8, [X20]
	0x034A41C8 LDR X1, [X8]
	0x034A41CC BL 0x1C17270
	0x034A41D0 TBZ X0, 0x0, 0x34A421C
	0x034A41D4 LDR X20, [X20]
	0x034A41D8 BL 0x3EB1AE0
	0x034A41DC MOVN W8, 0x1
	0x034A41E0 STR W8, [X19], #0x8
	0x034A41E4 ADRP X0, 0xC8D000
	0x034A41E8 LDR X0, [X0 + 0xD68]
	0x034A41EC BL 0x1C16D08
	0x034A41F0 LDR W8, [X0 + 0xE0]
	0x034A41F4 CBNZ W8, 0x34A41FC
	0x034A41F8 BL 0x1C16DFC
	0x034A41FC ADRP X0, 0xC8D000
	0x034A4200 LDR X0, [X0 + 0xE90]
	0x034A4204 BL 0x1C16D08
	0x034A4208 MOV X2, X0
	0x034A420C MOV X0, X19
	0x034A4210 MOV X1, X20
	0x034A4214 BL 0x26324C8
	0x034A4218 B 0x34A40E4
	0x034A421C MOVZ W0, 0x8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF3A000
	010 Move X22, 0xC8E000
	011 Move W8, [X23+2535]
	012 Move X22, [X22+3392]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xC8E000
	021 Move X0, [X0+3400]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8E000
	024 Move X0, [X0+3408]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8E000
	027 Move X0, [X0+3416]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8E000
	030 Move X0, [X0+3392]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2535], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xC8E000
	041 Move X24, 0xC8E000
	042 Move X23, 0xC8E000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3400]
	045 Move X24, [X24+3408]
	046 Move X23, [X23+3416]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+40], X20
	062 Move [X31+48], X21
	063 Move [X31+32], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task DeleteWalletLedgerAsync(System.String bearerToken, System.String id, System.String walletId)

Disassembly:
	0x034A4220 BL 0x3EB1AF0
	0x034A4224 LDR X8, [X20]
	0x034A4228 STR X8, [X0]
	0x034A422C ADRP X1, 0xA10000
	0x034A4230 ADD X1, X1, 0xE58
	0x034A4234 MOV X2, X31
	0x034A4238 BL 0x3EB1B00
	0x034A423C MOV X20, X0
	0x034A4240 BL 0x3EB1AE0
	0x034A4244 MOV X0, X20
	0x034A4248 BL 0x1D2C690
	0x034A424C BL 0x1990590
	0x034A4250 STR X30, [X31 - 0x30]!
	0x034A4254 STP X22, X21, [X31 + 0x10]
	0x034A4258 STP X20, X19, [X31 + 0x20]
	0x034A425C ADRP X22, 0xF39000
	0x034A4260 ADRP X21, 0xC8D000
	0x034A4264 LDRB W8, [X22 + 0x9F5]
	0x034A4268 LDR X21, [X21 + 0xD68]
	0x034A426C MOV X19, X1
	0x034A4270 MOV X20, X0
	0x034A4274 TBNZ X8, 0x0, 0x34A4298
	0x034A4278 ADRP X0, 0xC8D000
	0x034A427C LDR X0, [X0 + 0xE98]
	0x034A4280 BL 0x1C16CF4
	0x034A4284 ADRP X0, 0xC8D000
	0x034A4288 LDR X0, [X0 + 0xD68]
	0x034A428C BL 0x1C16CF4
	0x034A4290 MOVZ W8, 0x1
	0x034A4294 STRB W8, [X22 + 0x9F5]
	0x034A4298 LDR X0, [X21]
	0x034A429C ADRP X21, 0xC8D000
	0x034A42A0 LDR W8, [X0 + 0xE0]
	0x034A42A4 LDR X21, [X21 + 0xE98]
	0x034A42A8 CBNZ W8, 0x34A42B0
	0x034A42AC BL 0x1C16DFC
	0x034A42B0 LDR X2, [X21]
	0x034A42B4 ADD X0, X20, 0x8
	0x034A42B8 MOV X1, X19
	0x034A42BC LDP X20, X19, [X31 + 0x20]
	0x034A42C0 LDP X22, X21, [X31 + 0x10]
	0x034A42C4 LDR X30, [X31], #0x30
	0x034A42C8 B 0x2632228
	0x034A42CC SUB X31, X31, 0x50
	0x034A42D0 STP X30, X25, [X31 + 0x10]
	0x034A42D4 STP X24, X23, [X31 + 0x20]
	0x034A42D8 STP X22, X21, [X31 + 0x30]
	0x034A42DC STP X20, X19, [X31 + 0x40]
	0x034A42E0 ADRP X20, 0xF39000
	0x034A42E4 LDRB W8, [X20 + 0x9F6]
	0x034A42E8 MOV X19, X0
	0x034A42EC TBNZ X8, 0x0, 0x34A43C4
	0x034A42F0 ADRP X0, 0xC8D000
	0x034A42F4 LDR X0, [X0 + 0xEA0]
	0x034A42F8 BL 0x1C16CF4
	0x034A42FC ADRP X0, 0xC52000
	0x034A4300 LDR X0, [X0 + 0x280]
	0x034A4304 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xF3A000
	010 Move X23, 0xC53000
	011 Move W8, [X24+2536]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X19, X2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xC8E000
	022 Move X0, [X0+3424]
	023 Call 0x1C17CF4
	024 Move X0, 0xC53000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2536], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xC8E000
	037 Move W8, [X0+224]
	038 Move X23, [X23+3424]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+64], X19
	050 Move [X31+72], X20
	051 Or X20, X8, 15
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W10, TEMP
	055 Add X1, X31, 32
	056 Move X0, X20
	057 Move [X31+80], X22
	058 Move [X31+88], X21
	059 Move [X31+40], V0
	060 Move [X31+56], X9
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IConsoleConsoleSession> AuthenticateAsync(Nakama.Console.ConsoleAuthenticateRequest body)

Disassembly:
	0x034A4308 ADRP X0, 0xC50000
	0x034A430C LDR X0, [X0 + 0x810]
	0x034A4310 BL 0x1C16CF4
	0x034A4314 ADRP X0, 0xC50000
	0x034A4318 LDR X0, [X0 + 0x6C0]
	0x034A431C BL 0x1C16CF4
	0x034A4320 ADRP X0, 0xC50000
	0x034A4324 LDR X0, [X0 + 0x6D0]
	0x034A4328 BL 0x1C16CF4
	0x034A432C ADRP X0, 0xC8A000
	0x034A4330 LDR X0, [X0 + 0x7B8]
	0x034A4334 BL 0x1C16CF4
	0x034A4338 ADRP X0, 0xC52000
	0x034A433C LDR X0, [X0 + 0x1E0]
	0x034A4340 BL 0x1C16CF4
	0x034A4344 ADRP X0, 0xC52000
	0x034A4348 LDR X0, [X0 + 0x1F0]
	0x034A434C BL 0x1C16CF4
	0x034A4350 ADRP X0, 0xC52000
	0x034A4354 LDR X0, [X0 + 0x1F8]
	0x034A4358 BL 0x1C16CF4
	0x034A435C ADRP X0, 0xC58000
	0x034A4360 LDR X0, [X0 + 0x3A0]
	0x034A4364 BL 0x1C16CF4
	0x034A4368 ADRP X0, 0xC51000
	0x034A436C LDR X0, [X0 + 0xA28]
	0x034A4370 BL 0x1C16CF4
	0x034A4374 ADRP X0, 0xC78000
	0x034A4378 LDR X0, [X0 + 0x4D8]
	0x034A437C BL 0x1C16CF4
	0x034A4380 ADRP X0, 0xC8A000
	0x034A4384 LDR X0, [X0 + 0x7D0]
	0x034A4388 BL 0x1C16CF4
	0x034A438C ADRP X0, 0xC8B000
	0x034A4390 LDR X0, [X0 + 0x2E8]
	0x034A4394 BL 0x1C16CF4
	0x034A4398 ADRP X0, 0xC8D000
	0x034A439C LDR X0, [X0 + 0xEA8]
	0x034A43A0 BL 0x1C16CF4
	0x034A43A4 ADRP X0, 0xC8A000
	0x034A43A8 LDR X0, [X0 + 0x7D8]
	0x034A43AC BL 0x1C16CF4
	0x034A43B0 ADRP X0, 0xC4F000
	0x034A43B4 LDR X0, [X0 + 0x988]
	0x034A43B8 BL 0x1C16CF4
	0x034A43BC MOVZ W8, 0x1
	0x034A43C0 STRB W8, [X20 + 0x9F6]
	0x034A43C4 STR X31, [X31 + 0x8]
	0x034A43C8 ADRP X25, 0xC52000
	0x034A43CC LDR W8, [X19]
	0x034A43D0 LDR X25, [X25 + 0x280]
	0x034A43D4 CBZ W8, 0x34A4564
	0x034A43D8 LDR X21, [X19 + 0x20]
	0x034A43DC CBZ X21, 0x34A4674
	0x034A43E0 ADRP X8, 0xC51000
	0x034A43E4 LDR X8, [X8 + 0xA28]
	0x034A43E8 LDR X0, [X8]
	0x034A43EC ADRP X8, 0xC8D000
	0x034A43F0 LDR X8, [X8 + 0xEA8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0xF3A000
	009 Move X21, 0xC8E000
	010 Move W8, [X22+2537]
	011 Move X21, [X21+3432]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xC8E000
	019 Move X0, [X0+3440]
	020 Call 0x1C17CF4
	021 Move X0, 0xC8E000
	022 Move X0, [X0+3448]
	023 Call 0x1C17CF4
	024 Move X0, 0xC8E000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move X0, 0xC8E000
	028 Move X0, [X0+3432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2537], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+48], X31
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move X21, 0xC8E000
	039 Move X23, 0xC8E000
	040 Move X22, 0xC8E000
	041 Move W8, [X0+224]
	042 Move X21, [X21+3440]
	043 Move X23, [X23+3448]
	044 Move X22, [X22+3456]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Add X8, X31, 0
	050 Or X21, X8, 15
	051 Move X8, X21
	052 Call AsyncTaskMethodBuilder`1<Object>.Create
	053 Move X2, [X23]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X1, X31, 0
	058 Move X0, X21
	059 Move [X31+32], X19
	060 Move [X31+40], X20
	061 Move [X31], W8
	062 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	063 Move X1, [X22]
	064 Move X0, X21
	065 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IConsoleConfig> GetConfigAsync(System.String bearerToken)

Disassembly:
	0x034A43F4 LDR X24, [X19 + 0x28]
	0x034A43F8 LDR W9, [X0 + 0xE0]
	0x034A43FC LDR X20, [X8]
	0x034A4400 CBNZ W9, 0x34A4408
	0x034A4404 BL 0x1C16DFC
	0x034A4408 MOV X0, X21
	0x034A440C MOV X1, X31
	0x034A4410 BL 0x3624D20
	0x034A4414 CBZ X20, 0x34A46BC
	0x034A4418 ADRP X8, 0xC8B000
	0x034A441C LDR X8, [X8 + 0x2E8]
	0x034A4420 MOV X2, X0
	0x034A4424 LDR X1, [X8]
	0x034A4428 MOV X0, X20
	0x034A442C MOV X3, X31
	0x034A4430 BL 0x32293BC
	0x034A4434 CBZ X24, 0x34A46C0
	0x034A4438 ADRP X8, 0xC4F000
	0x034A443C ADRP X9, 0xC58000
	0x034A4440 LDR X8, [X8 + 0x988]
	0x034A4444 LDR X9, [X9 + 0x3A0]
	0x034A4448 MOV X22, X0
	0x034A444C LDR X23, [X24 + 0x10]
	0x034A4450 LDR X21, [X8]
	0x034A4454 LDR X0, [X9]
	0x034A4458 BL 0x1C16F10
	0x034A445C MOV X20, X0
	0x034A4460 MOV X1, X23
	0x034A4464 MOV X2, X31
	0x034A4468 BL 0x36281F8
	0x034A446C CBZ X20, 0x34A46C4
	0x034A4470 MOV X0, X20
	0x034A4474 MOV X1, X22
	0x034A4478 MOV X2, X31
	0x034A447C BL 0x36288CC
	0x034A4480 MOV X0, X20
	0x034A4484 MOV X1, X21
	0x034A4488 MOV X2, X31
	0x034A448C BL 0x3628980
	0x034A4490 MOV X0, X20
	0x034A4494 MOV X1, X31
	0x034A4498 BL 0x3628A38
	0x034A449C ADRP X8, 0xC78000
	0x034A44A0 ADRP X9, 0xC50000
	0x034A44A4 LDR X8, [X8 + 0x4D8]
	0x034A44A8 LDR X9, [X9 + 0x6D0]
	0x034A44AC MOV X20, X0
	0x034A44B0 LDR X21, [X8]
	0x034A44B4 LDR X0, [X9]
	0x034A44B8 BL 0x1C16F10
	0x034A44BC ADRP X8, 0xC50000
	0x034A44C0 LDR X8, [X8 + 0x6C0]
	0x034A44C4 MOV X22, X0
	0x034A44C8 LDR X1, [X8]
	0x034A44CC BL 0x2AA4804
	0x034A44D0 ADRP X8, 0xC8A000
	0x034A44D4 LDR X8, [X8 + 0x7D8]
	0x034A44D8 LDR X1, [X19 + 0x30]
	0x034A44DC LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0xF3A000
	009 Move X21, 0xC8E000
	010 Move W8, [X22+2538]
	011 Move X21, [X21+3464]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xC8E000
	019 Move X0, [X0+3472]
	020 Call 0x1C17CF4
	021 Move X0, 0xC8E000
	022 Move X0, [X0+3480]
	023 Call 0x1C17CF4
	024 Move X0, 0xC8E000
	025 Move X0, [X0+3488]
	026 Call 0x1C17CF4
	027 Move X0, 0xC8E000
	028 Move X0, [X0+3464]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2538], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+48], X31
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move X21, 0xC8E000
	039 Move X23, 0xC8E000
	040 Move X22, 0xC8E000
	041 Move W8, [X0+224]
	042 Move X21, [X21+3472]
	043 Move X23, [X23+3480]
	044 Move X22, [X22+3488]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Add X8, X31, 0
	050 Or X21, X8, 15
	051 Move X8, X21
	052 Call AsyncTaskMethodBuilder`1<Object>.Create
	053 Move X2, [X23]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X1, X31, 0
	058 Move X0, X21
	059 Move [X31+32], X20
	060 Move [X31+40], X19
	061 Move [X31], W8
	062 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	063 Move X1, [X22]
	064 Move X0, X21
	065 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IConsoleStatusList> GetStatusAsync(System.String bearerToken)

Disassembly:
	0x034A44E0 MOV X2, X31
	0x034A44E4 BL 0x321B938
	0x034A44E8 CBZ X22, 0x34A46C8
	0x034A44EC ADRP X8, 0xC8A000
	0x034A44F0 LDR X8, [X8 + 0x7D0]
	0x034A44F4 ADRP X9, 0xC50000
	0x034A44F8 LDR X9, [X9 + 0x810]
	0x034A44FC MOV X2, X0
	0x034A4500 LDR X1, [X8]
	0x034A4504 LDR X3, [X9]
	0x034A4508 MOV X0, X22
	0x034A450C BL 0x2AA5098
	0x034A4510 LDR X23, [X24 + 0x20]
	0x034A4514 CBZ X23, 0x34A46CC
	0x034A4518 ADRP X10, 0xC8A000
	0x034A451C LDR X8, [X23]
	0x034A4520 LDR X10, [X10 + 0x7B8]
	0x034A4524 LDR W24, [X24 + 0x18]
	0x034A4528 LDRH W9, [X8 + 0x12E]
	0x034A452C LDR X1, [X10]
	0x034A4530 CBZ X9, 0x34A4554
	0x034A4534 LDR X10, [X8 + 0xB0]
	0x034A4538 ADD X10, X10, 0x8
	0x034A453C LDUR X11, [X10 - 0x8]
	0x034A4540 CMP X11, X1
	0x034A4544 B.EQ 0x34A457C
	0x034A4548 SUBS X9, X9, 0x1
	0x034A454C ADD X10, X10, 0x10
	0x034A4550 B.NE 0x34A453C
	0x034A4554 MOVZ W2, 0x3
	0x034A4558 MOV X0, X23
	0x034A455C BL 0x1C5C788
	0x034A4560 B 0x34A458C
	0x034A4564 LDR X8, [X19 + 0x38]
	0x034A4568 MOVN W9, 0x0
	0x034A456C STR X8, [X31 + 0x8]
	0x034A4570 STR X31, [X19 + 0x38]
	0x034A4574 STR W9, [X19]
	0x034A4578 B 0x34A45E8
	0x034A457C LDR W9, [X10]
	0x034A4580 ADD W9, W9, 0x3
	0x034A4584 ADD X8, X8, W9, 0x4, SXTW
	0x034A4588 ADD X0, X8, 0x138
	0x034A458C LDP X8, X9, [X0]
	0x034A4590 MOV X0, X23
	0x034A4594 MOV X1, X21
	0x034A4598 MOV X2, X20
	0x034A459C MOV X3, X22
	0x034A45A0 MOV X4, X31
	0x034A45A4 MOV W5, W24
	0x034A45A8 MOV X6, X31
	0x034A45AC MOV X7, X31
	0x034A45B0 STR X9, [X31]
	0x034A45B4 BLR X8
	0x034A45B8 CBZ X0, 0x34A46D0
	0x034A45BC ADRP X8, 0xC52000
	0x034A45C0 LDR X8, [X8 + 0x1F8]
	0x034A45C4 LDR X1, [X8]
	0x034A45C8 BL 0x269F5D0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0xF3A000
	009 Move X21, 0xC8E000
	010 Move W8, [X22+2539]
	011 Move X21, [X21+3496]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xC8E000
	019 Move X0, [X0+3504]
	020 Call 0x1C17CF4
	021 Move X0, 0xC8E000
	022 Move X0, [X0+3512]
	023 Call 0x1C17CF4
	024 Move X0, 0xC8E000
	025 Move X0, [X0+3520]
	026 Call 0x1C17CF4
	027 Move X0, 0xC8E000
	028 Move X0, [X0+3496]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2539], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+48], X31
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move X21, 0xC8E000
	039 Move X23, 0xC8E000
	040 Move X22, 0xC8E000
	041 Move W8, [X0+224]
	042 Move X21, [X21+3504]
	043 Move X23, [X23+3512]
	044 Move X22, [X22+3520]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Add X8, X31, 0
	050 Or X21, X8, 15
	051 Move X8, X21
	052 Call AsyncTaskMethodBuilder`1<Object>.Create
	053 Move X2, [X23]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X1, X31, 0
	058 Move X0, X21
	059 Move [X31+32], X20
	060 Move [X31+40], X19
	061 Move [X31], W8
	062 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	063 Move X1, [X22]
	064 Move X0, X21
	065 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0

Method: System.Threading.Tasks.Task DeleteStorageAsync(System.String bearerToken)

Disassembly:
	0x034A45CC ADRP X8, 0xC52000
	0x034A45D0 LDR X8, [X8 + 0x1F0]
	0x034A45D4 STR X0, [X31 + 0x8]
	0x034A45D8 LDR X1, [X8]
	0x034A45DC ADD X0, X31, 0x8
	0x034A45E0 BL 0x2677430
	0x034A45E4 TBZ X0, 0x0, 0x34A4624
	0x034A45E8 ADRP X8, 0xC52000
	0x034A45EC LDR X8, [X8 + 0x1E0]
	0x034A45F0 ADD X0, X31, 0x8
	0x034A45F4 LDR X1, [X8]
	0x034A45F8 BL 0x2677474
	0x034A45FC MOVN W8, 0x1
	0x034A4600 STR W8, [X19], #0x8
	0x034A4604 LDR X0, [X25]
	0x034A4608 LDR W8, [X0 + 0xE0]
	0x034A460C CBNZ W8, 0x34A4614
	0x034A4610 BL 0x1C16DFC
	0x034A4614 MOV X0, X19
	0x034A4618 MOV X1, X31
	0x034A461C BL 0x32C4864
	0x034A4620 B 0x34A465C
	0x034A4624 STR W31, [X19]
	0x034A4628 LDR X8, [X31 + 0x8]
	0x034A462C STR X8, [X19 + 0x38]
	0x034A4630 LDR X0, [X25]
	0x034A4634 LDR W8, [X0 + 0xE0]
	0x034A4638 CBNZ W8, 0x34A4640
	0x034A463C BL 0x1C16DFC
	0x034A4640 ADRP X8, 0xC8D000
	0x034A4644 LDR X8, [X8 + 0xEA0]
	0x034A4648 ADD X0, X19, 0x8
	0x034A464C LDR X3, [X8]
	0x034A4650 ADD X1, X31, 0x8
	0x034A4654 MOV X2, X19
	0x034A4658 BL 0x21871F8
	0x034A465C LDP X20, X19, [X31 + 0x40]
	0x034A4660 LDP X22, X21, [X31 + 0x30]
	0x034A4664 LDP X24, X23, [X31 + 0x20]
	0x034A4668 LDP X30, X25, [X31 + 0x10]
	0x034A466C ADD X31, X31, 0x50
	0x034A4670 RET
	0x034A4674 ADRP X0, 0xC57000
	0x034A4678 LDR X0, [X0 + 0x578]
	0x034A467C BL 0x1C16D08
	0x034A4680 BL 0x1C16F10
	0x034A4684 MOV X20, X0
	0x034A4688 ADRP X0, 0xC8B000
	0x034A468C LDR X0, [X0 + 0x2F0]
	0x034A4690 BL 0x1C16D08
	0x034A4694 MOV X1, X0
	0x034A4698 MOV X0, X20
	0x034A469C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xF3A000
	008 Move X21, 0xC53000
	009 Move W8, [X22+2540]
	010 Move X21, [X21+640]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC8E000
	018 Move X0, [X0+3528]
	019 Call 0x1C17CF4
	020 Move X0, 0xC53000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2540], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+80], X31
	028 Move [X31+48], V0
	029 Move [X31+56], V0
	030 Move [X31+2], V0
	031 Move X21, 0xC8E000
	032 Move W8, [X0+224]
	033 Move X21, [X21+3528]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X8, X31, 8
	038 Move X0, X31
	039 Call AsyncTaskMethodBuilder.Create
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X9, [X31+24]
	042 Move X2, [X21]
	043 Add X8, X31, 32
	044 Move [X31+64], X19
	045 Move [X31+72], X20
	046 Or X20, X8, 15
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W10, TEMP
	050 Add X1, X31, 32
	051 Move X0, X20
	052 Move [X31+40], V0
	053 Move [X31+56], X9
	054 Move [X31+32], W10
	055 Call AsyncTaskMethodBuilder.Start, X0, X1
	056 Move X0, X20
	057 Move X1, X31
	058 Call AsyncTaskMethodBuilder.get_Task, X0
	059 Move X20, [X31+128]
	060 Move X19, [X31+136]
	061 Move X22, [X31+112]
	062 Move X21, [X31+120]
	063 Move X30, [X31+96]
	064 Add X31, X31, 144
	065 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IConsoleStorageList> ListStorageAsync(System.String bearerToken, System.String userId)

Disassembly:
	0x034A46A0 BL 0x3314A68
	0x034A46A4 ADRP X0, 0xC8D000
	0x034A46A8 LDR X0, [X0 + 0xEB0]
	0x034A46AC BL 0x1C16D08
	0x034A46B0 MOV X1, X0
	0x034A46B4 MOV X0, X20
	0x034A46B8 BL 0x1C16DEC
	0x034A46BC BL 0x1C16F20
	0x034A46C0 BL 0x1C16F20
	0x034A46C4 BL 0x1C16F20
	0x034A46C8 BL 0x1C16F20
	0x034A46CC BL 0x1C16F20
	0x034A46D0 BL 0x1C16F20
	0x034A46D4 B 0x34A4718
	0x034A46D8 B 0x34A4718
	0x034A46DC B 0x34A4718
	0x034A46E0 B 0x34A4718
	0x034A46E4 B 0x34A4718
	0x034A46E8 B 0x34A4718
	0x034A46EC B 0x34A4718
	0x034A46F0 B 0x34A4718
	0x034A46F4 B 0x34A4718
	0x034A46F8 B 0x34A4718
	0x034A46FC B 0x34A4718
	0x034A4700 B 0x34A4718
	0x034A4704 B 0x34A4718
	0x034A4708 B 0x34A4718
	0x034A470C B 0x34A4718
	0x034A4710 B 0x34A4718
	0x034A4714 B 0x34A4718
	0x034A4718 MOV X20, X0
	0x034A471C CMP W1, 0x1
	0x034A4720 B.NE 0x34A47B0
	0x034A4724 MOV X0, X20
	0x034A4728 BL 0x3EB1AD0
	0x034A472C MOV X20, X0
	0x034A4730 ADRP X0, 0xC4F000
	0x034A4734 LDR X0, [X0 + 0x7D0]
	0x034A4738 BL 0x1C16D08
	0x034A473C LDR X8, [X20]
	0x034A4740 LDR X1, [X8]
	0x034A4744 BL 0x1C17270
	0x034A4748 TBZ X0, 0x0, 0x34A4788
	0x034A474C LDR X20, [X20]
	0x034A4750 BL 0x3EB1AE0
	0x034A4754 MOVN W8, 0x1
	0x034A4758 STR W8, [X19], #0x8
	0x034A475C ADRP X0, 0xC52000
	0x034A4760 LDR X0, [X0 + 0x280]
	0x034A4764 BL 0x1C16D08
	0x034A4768 LDR W8, [X0 + 0xE0]
	0x034A476C CBNZ W8, 0x34A4774
	0x034A4770 BL 0x1C16DFC
	0x034A4774 MOV X0, X19
	0x034A4778 MOV X1, X20
	0x034A477C MOV X2, X31
	0x034A4780 BL 0x32C4908
	0x034A4784 B 0x34A465C
	0x034A4788 MOVZ W0, 0x8
	0x034A478C BL 0x3EB1AF0
	0x034A4790 LDR X8, [X20]
	0x034A4794 STR X8, [X0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF3A000
	010 Move X22, 0xC8E000
	011 Move W8, [X23+2541]
	012 Move X22, [X22+3536]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xC8E000
	021 Move X0, [X0+3544]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8E000
	024 Move X0, [X0+3552]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8E000
	027 Move X0, [X0+3560]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8E000
	030 Move X0, [X0+3536]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2541], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xC8E000
	041 Move X24, 0xC8E000
	042 Move X23, 0xC8E000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3544]
	045 Move X24, [X24+3552]
	046 Move X23, [X23+3560]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+40], X20
	062 Move [X31+48], X21
	063 Move [X31+32], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task DeleteStorageObjectAsync(System.String bearerToken, System.String collection, System.String key, System.String userId, System.String version)

Disassembly:
	0x034A4798 ADRP X1, 0xA10000
	0x034A479C ADD X1, X1, 0xE58
	0x034A47A0 MOV X2, X31
	0x034A47A4 BL 0x3EB1B00
	0x034A47A8 MOV X20, X0
	0x034A47AC BL 0x3EB1AE0
	0x034A47B0 MOV X0, X20
	0x034A47B4 BL 0x1D2C690
	0x034A47B8 BL 0x1990590
	0x034A47BC STR X30, [X31 - 0x30]!
	0x034A47C0 STP X22, X21, [X31 + 0x10]
	0x034A47C4 STP X20, X19, [X31 + 0x20]
	0x034A47C8 ADRP X21, 0xF39000
	0x034A47CC ADRP X22, 0xC52000
	0x034A47D0 LDRB W8, [X21 + 0x9F7]
	0x034A47D4 LDR X22, [X22 + 0x280]
	0x034A47D8 MOV X19, X1
	0x034A47DC MOV X20, X0
	0x034A47E0 TBNZ X8, 0x0, 0x34A47F8
	0x034A47E4 ADRP X0, 0xC52000
	0x034A47E8 LDR X0, [X0 + 0x280]
	0x034A47EC BL 0x1C16CF4
	0x034A47F0 MOVZ W8, 0x1
	0x034A47F4 STRB W8, [X21 + 0x9F7]
	0x034A47F8 LDR X0, [X22]
	0x034A47FC LDR W8, [X0 + 0xE0]
	0x034A4800 CBNZ W8, 0x34A4808
	0x034A4804 BL 0x1C16DFC
	0x034A4808 ADD X0, X20, 0x8
	0x034A480C MOV X1, X19
	0x034A4810 LDP X20, X19, [X31 + 0x20]
	0x034A4814 LDP X22, X21, [X31 + 0x10]
	0x034A4818 MOV X2, X31
	0x034A481C LDR X30, [X31], #0x30
	0x034A4820 B 0x32C477C
	0x034A4824 SUB X31, X31, 0x50
	0x034A4828 STP X30, X25, [X31 + 0x10]
	0x034A482C STP X24, X23, [X31 + 0x20]
	0x034A4830 STP X22, X21, [X31 + 0x30]
	0x034A4834 STP X20, X19, [X31 + 0x40]
	0x034A4838 ADRP X20, 0xF39000
	0x034A483C LDRB W8, [X20 + 0x9F8]
	0x034A4840 MOV X19, X0
	0x034A4844 TBNZ X8, 0x0, 0x34A494C
	0x034A4848 ADRP X0, 0xC8D000
	0x034A484C LDR X0, [X0 + 0xEB8]
	0x034A4850 BL 0x1C16CF4
	0x034A4854 ADRP X0, 0xC52000
	0x034A4858 LDR X0, [X0 + 0x280]
	0x034A485C BL 0x1C16CF4
	0x034A4860 ADRP X0, 0xC50000
	0x034A4864 LDR X0, [X0 + 0x810]
	0x034A4868 BL 0x1C16CF4
	0x034A486C ADRP X0, 0xC50000
	0x034A4870 LDR X0, [X0 + 0x6C0]
	0x034A4874 BL 0x1C16CF4
	0x034A4878 ADRP X0, 0xC50000
	0x034A487C LDR X0, [X0 + 0x6D0]
	0x034A4880 BL 0x1C16CF4
	0x034A4884 ADRP X0, 0xC8A000
	0x034A4888 LDR X0, [X0 + 0x7B8]
	0x034A488C BL 0x1C16CF4
	0x034A4890 ADRP X0, 0xC8A000
	0x034A4894 LDR X0, [X0 + 0x830]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xF3A000
	012 Move X25, 0xC53000
	013 Move W8, [X26+2542]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X24, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xC8E000
	026 Move X0, [X0+3568]
	027 Call 0x1C17CF4
	028 Move X0, 0xC53000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+2542], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xC8E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+3568]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+88], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+96], X23
	062 Move [X31+104], X24
	063 Move [X31+72], X22
	064 Move [X31+80], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IApiStorageObject> GetStorageAsync(System.String bearerToken, System.String collection, System.String key, System.String userId)

Disassembly:
	0x034A4898 BL 0x1C16CF4
	0x034A489C ADRP X0, 0xC53000
	0x034A48A0 LDR X0, [X0 + 0xBF0]
	0x034A48A4 BL 0x1C16CF4
	0x034A48A8 ADRP X0, 0xC52000
	0x034A48AC LDR X0, [X0 + 0x1E0]
	0x034A48B0 BL 0x1C16CF4
	0x034A48B4 ADRP X0, 0xC52000
	0x034A48B8 LDR X0, [X0 + 0x1F0]
	0x034A48BC BL 0x1C16CF4
	0x034A48C0 ADRP X0, 0xC52000
	0x034A48C4 LDR X0, [X0 + 0x1F8]
	0x034A48C8 BL 0x1C16CF4
	0x034A48CC ADRP X0, 0xC58000
	0x034A48D0 LDR X0, [X0 + 0x3A0]
	0x034A48D4 BL 0x1C16CF4
	0x034A48D8 ADRP X0, 0xC51000
	0x034A48DC LDR X0, [X0 + 0xA28]
	0x034A48E0 BL 0x1C16CF4
	0x034A48E4 ADRP X0, 0xC8D000
	0x034A48E8 LDR X0, [X0 + 0xEC0]
	0x034A48EC BL 0x1C16CF4
	0x034A48F0 ADRP X0, 0xC58000
	0x034A48F4 LDR X0, [X0 + 0x720]
	0x034A48F8 BL 0x1C16CF4
	0x034A48FC ADRP X0, 0xC8A000
	0x034A4900 LDR X0, [X0 + 0x7D0]
	0x034A4904 BL 0x1C16CF4
	0x034A4908 ADRP X0, 0xC8B000
	0x034A490C LDR X0, [X0 + 0x2E8]
	0x034A4910 BL 0x1C16CF4
	0x034A4914 ADRP X0, 0xC8A000
	0x034A4918 LDR X0, [X0 + 0x7D8]
	0x034A491C BL 0x1C16CF4
	0x034A4920 ADRP X0, 0xC4F000
	0x034A4924 LDR X0, [X0 + 0x988]
	0x034A4928 BL 0x1C16CF4
	0x034A492C ADRP X0, 0xC78000
	0x034A4930 LDR X0, [X0 + 0x4C8]
	0x034A4934 BL 0x1C16CF4
	0x034A4938 ADRP X0, 0xC8D000
	0x034A493C LDR X0, [X0 + 0xEC8]
	0x034A4940 BL 0x1C16CF4
	0x034A4944 MOVZ W8, 0x1
	0x034A4948 STRB W8, [X20 + 0x9F8]
	0x034A494C STR X31, [X31 + 0x8]
	0x034A4950 ADRP X25, 0xC52000
	0x034A4954 LDR W8, [X19]
	0x034A4958 LDR X25, [X25 + 0x280]
	0x034A495C CBZ W8, 0x34A4B40
	0x034A4960 LDR X21, [X19 + 0x20]
	0x034A4964 CBZ X21, 0x34A4C50
	0x034A4968 ADRP X8, 0xC51000
	0x034A496C LDR X8, [X8 + 0xA28]
	0x034A4970 LDR X0, [X8]
	0x034A4974 ADRP X8, 0xC8D000
	0x034A4978 LDR X8, [X8 + 0xEC8]
	0x034A497C LDR X24, [X19 + 0x30]
	0x034A4980 LDR W9, [X0 + 0xE0]
	0x034A4984 LDR X20, [X8]
	0x034A4988 CBNZ W9, 0x34A4990
	0x034A498C BL 0x1C16DFC
	0x034A4990 MOV X0, X21
	0x034A4994 MOV X1, X31
	0x034A4998 BL 0x3624D20
	0x034A499C CBZ X20, 0x34A4C98
	0x034A49A0 ADRP X8, 0xC8B000
	0x034A49A4 LDR X8, [X8 + 0x2E8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xF3A000
	012 Move X24, 0xC8E000
	013 Move W8, [X25+2543]
	014 Move X24, [X24+3576]
	015 Move X19, X4
	016 Move X21, X3
	017 Move X22, X2
	018 Move X23, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xC8E000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xC8E000
	028 Move X0, [X0+3592]
	029 Call 0x1C17CF4
	030 Move X0, 0xC8E000
	031 Move X0, [X0+3600]
	032 Call 0x1C17CF4
	033 Move X0, 0xC8E000
	034 Move X0, [X0+3576]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+2543], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xC8E000
	046 Move X26, 0xC8E000
	047 Move X25, 0xC8E000
	048 Move W8, [X0+224]
	049 Move X24, [X24+3584]
	050 Move X26, [X26+3592]
	051 Move X25, [X25+3600]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+56], X20
	067 Move [X31+64], X23
	068 Move [X31+32], X22
	069 Move [X31+40], X21
	070 Move [X31+48], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IApiStorageObjectAck> WriteStorageObjectAsync(System.String bearerToken, System.String collection, System.String key, System.String userId, Nakama.Console.ConsoleWriteStorageObjectRequest body)

Disassembly:
	0x034A49A8 MOV X2, X0
	0x034A49AC LDR X1, [X8]
	0x034A49B0 MOV X0, X20
	0x034A49B4 MOV X3, X31
	0x034A49B8 BL 0x32293BC
	0x034A49BC ADRP X8, 0xC4F000
	0x034A49C0 LDR X8, [X8 + 0x988]
	0x034A49C4 MOV X20, X0
	0x034A49C8 MOV X0, X19
	0x034A49CC LDR X21, [X8]
	0x034A49D0 LDRB W8, [X0 + 0x28]!
	0x034A49D4 CBZ W8, 0x34A4A20
	0x034A49D8 ADRP X8, 0xC8A000
	0x034A49DC LDR X8, [X8 + 0x830]
	0x034A49E0 LDR X1, [X8]
	0x034A49E4 BL 0x242D714
	0x034A49E8 CBZ X0, 0x34A4CB0
	0x034A49EC MOV X1, X31
	0x034A49F0 BL 0x322B5E4
	0x034A49F4 ADRP X8, 0xC8D000
	0x034A49F8 LDR X8, [X8 + 0xEC0]
	0x034A49FC ADRP X9, 0xC58000
	0x034A4A00 LDR X9, [X9 + 0x720]
	0x034A4A04 MOV X2, X0
	0x034A4A08 LDR X1, [X8]
	0x034A4A0C LDR X3, [X9]
	0x034A4A10 MOV X0, X21
	0x034A4A14 MOV X4, X31
	0x034A4A18 BL 0x32277C4
	0x034A4A1C MOV X21, X0
	0x034A4A20 CBZ X24, 0x34A4C9C
	0x034A4A24 ADRP X8, 0xC58000
	0x034A4A28 LDR X8, [X8 + 0x3A0]
	0x034A4A2C LDR X23, [X24 + 0x10]
	0x034A4A30 LDR X0, [X8]
	0x034A4A34 BL 0x1C16F10
	0x034A4A38 MOV X22, X0
	0x034A4A3C MOV X1, X23
	0x034A4A40 MOV X2, X31
	0x034A4A44 BL 0x36281F8
	0x034A4A48 CBZ X22, 0x34A4CA0
	0x034A4A4C MOV X0, X22
	0x034A4A50 MOV X1, X20
	0x034A4A54 MOV X2, X31
	0x034A4A58 BL 0x36288CC
	0x034A4A5C MOV X0, X22
	0x034A4A60 MOV X1, X21
	0x034A4A64 MOV X2, X31
	0x034A4A68 BL 0x3628980
	0x034A4A6C MOV X0, X22
	0x034A4A70 MOV X1, X31
	0x034A4A74 BL 0x3628A38
	0x034A4A78 ADRP X8, 0xC78000
	0x034A4A7C ADRP X9, 0xC50000
	0x034A4A80 LDR X8, [X8 + 0x4C8]
	0x034A4A84 LDR X9, [X9 + 0x6D0]
	0x034A4A88 MOV X20, X0
	0x034A4A8C LDR X21, [X8]
	0x034A4A90 LDR X0, [X9]
	0x034A4A94 BL 0x1C16F10
	0x034A4A98 ADRP X8, 0xC50000
	0x034A4A9C LDR X8, [X8 + 0x6C0]
	0x034A4AA0 MOV X22, X0
	0x034A4AA4 LDR X1, [X8]
	0x034A4AA8 BL 0x2AA4804
	0x034A4AAC ADRP X8, 0xC8A000
	0x034A4AB0 LDR X8, [X8 + 0x7D8]
	0x034A4AB4 LDR X1, [X19 + 0x38]
	0x034A4AB8 LDR X0, [X8]
	0x034A4ABC MOV X2, X31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xF3A000
	013 Move X25, 0xC8E000
	014 Move W8, [X26+2544]
	015 Move X25, [X25+3608]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xC8E000
	027 Move X0, [X0+3616]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8E000
	030 Move X0, [X0+3624]
	031 Call 0x1C17CF4
	032 Move X0, 0xC8E000
	033 Move X0, [X0+3632]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8E000
	036 Move X0, [X0+3608]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+2544], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+80], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+16], V0
	046 Move [X31+24], V0
	047 Move [X31], V0
	048 Move X25, 0xC8E000
	049 Move X27, 0xC8E000
	050 Move X26, 0xC8E000
	051 Move W8, [X0+224]
	052 Move X25, [X25+3616]
	053 Move X27, [X27+3624]
	054 Move X26, [X26+3632]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Add X8, X31, 0
	060 Or X25, X8, 15
	061 Move X8, X25
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X27]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X25
	069 Move [X31+64], X24
	070 Move [X31+72], X23
	071 Move [X31+32], X22
	072 Move [X31+40], X21
	073 Move [X31+48], X20
	074 Move [X31+56], X19
	075 Move [X31], W8
	076 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	077 Move X1, [X26]
	078 Move X0, X25
	079 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	080 Move X20, [X31+160]
	081 Move X19, [X31+168]
	082 Move X22, [X31+144]
	083 Move X21, [X31+152]
	084 Move X24, [X31+128]
	085 Move X23, [X31+136]
	086 Move X26, [X31+112]
	087 Move X25, [X31+120]
	088 Move X30, [X31+96]
	089 Move X27, [X31+104]
	090 Add X31, X31, 176
	091 Return X0

Method: System.Threading.Tasks.Task DeleteStorageObject2Async(System.String bearerToken, System.String collection, System.String key, System.String userId, System.String version)

Disassembly:
	0x034A4AC0 BL 0x321B938
	0x034A4AC4 CBZ X22, 0x34A4CA4
	0x034A4AC8 ADRP X8, 0xC8A000
	0x034A4ACC LDR X8, [X8 + 0x7D0]
	0x034A4AD0 ADRP X9, 0xC50000
	0x034A4AD4 LDR X9, [X9 + 0x810]
	0x034A4AD8 MOV X2, X0
	0x034A4ADC LDR X1, [X8]
	0x034A4AE0 LDR X3, [X9]
	0x034A4AE4 MOV X0, X22
	0x034A4AE8 BL 0x2AA5098
	0x034A4AEC LDR X23, [X24 + 0x20]
	0x034A4AF0 CBZ X23, 0x34A4CA8
	0x034A4AF4 ADRP X10, 0xC8A000
	0x034A4AF8 LDR X8, [X23]
	0x034A4AFC LDR X10, [X10 + 0x7B8]
	0x034A4B00 LDR W24, [X24 + 0x18]
	0x034A4B04 LDRH W9, [X8 + 0x12E]
	0x034A4B08 LDR X1, [X10]
	0x034A4B0C CBZ X9, 0x34A4B30
	0x034A4B10 LDR X10, [X8 + 0xB0]
	0x034A4B14 ADD X10, X10, 0x8
	0x034A4B18 LDUR X11, [X10 - 0x8]
	0x034A4B1C CMP X11, X1
	0x034A4B20 B.EQ 0x34A4B58
	0x034A4B24 SUBS X9, X9, 0x1
	0x034A4B28 ADD X10, X10, 0x10
	0x034A4B2C B.NE 0x34A4B18
	0x034A4B30 MOVZ W2, 0x3
	0x034A4B34 MOV X0, X23
	0x034A4B38 BL 0x1C5C788
	0x034A4B3C B 0x34A4B68
	0x034A4B40 LDR X8, [X19 + 0x40]
	0x034A4B44 MOVN W9, 0x0
	0x034A4B48 STR X8, [X31 + 0x8]
	0x034A4B4C STR X31, [X19 + 0x40]
	0x034A4B50 STR W9, [X19]
	0x034A4B54 B 0x34A4BC4
	0x034A4B58 LDR W9, [X10]
	0x034A4B5C ADD W9, W9, 0x3
	0x034A4B60 ADD X8, X8, W9, 0x4, SXTW
	0x034A4B64 ADD X0, X8, 0x138
	0x034A4B68 LDP X8, X9, [X0]
	0x034A4B6C MOV X0, X23
	0x034A4B70 MOV X1, X21
	0x034A4B74 MOV X2, X20
	0x034A4B78 MOV X3, X22
	0x034A4B7C MOV X4, X31
	0x034A4B80 MOV W5, W24
	0x034A4B84 MOV X6, X31
	0x034A4B88 MOV X7, X31
	0x034A4B8C STR X9, [X31]
	0x034A4B90 BLR X8
	0x034A4B94 CBZ X0, 0x34A4CAC
	0x034A4B98 ADRP X8, 0xC52000
	0x034A4B9C LDR X8, [X8 + 0x1F8]
	0x034A4BA0 LDR X1, [X8]
	0x034A4BA4 BL 0x269F5D0
	0x034A4BA8 ADRP X8, 0xC52000
	0x034A4BAC LDR X8, [X8 + 0x1F0]
	0x034A4BB0 STR X0, [X31 + 0x8]
	0x034A4BB4 LDR X1, [X8]
	0x034A4BB8 ADD X0, X31, 0x8
	0x034A4BBC BL 0x2677430

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0xF3A000
	012 Move X25, 0xC53000
	013 Move W8, [X26+2545]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X24, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xC8E000
	026 Move X0, [X0+3640]
	027 Call 0x1C17CF4
	028 Move X0, 0xC53000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+2545], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+112], X31
	036 Move [X31+80], V0
	037 Move [X31+88], V0
	038 Move [X31+48], V0
	039 Move [X31+56], V0
	040 Move [X31+2], V0
	041 Move X25, 0xC8E000
	042 Move W8, [X0+224]
	043 Move X25, [X25+3640]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X8, X31, 8
	048 Move X0, X31
	049 Call AsyncTaskMethodBuilder.Create
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X9, [X31+24]
	052 Move X2, [X25]
	053 Add X8, X31, 32
	054 Move [X31+88], X20
	055 Or X20, X8, 15
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W10, TEMP
	059 Add X1, X31, 32
	060 Move X0, X20
	061 Move [X31+96], X23
	062 Move [X31+104], X24
	063 Move [X31+72], X22
	064 Move [X31+80], X21
	065 Move [X31+40], V0
	066 Move [X31+56], X9
	067 Move [X31+64], X19
	068 Move [X31+32], W10
	069 Call AsyncTaskMethodBuilder.Start, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call AsyncTaskMethodBuilder.get_Task, X0
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Add X31, X31, 208
	083 Return X0

Method: System.Threading.Tasks.Task DeleteUsersAsync(System.String bearerToken)

Disassembly:
	0x034A4BC0 TBZ X0, 0x0, 0x34A4C00
	0x034A4BC4 ADRP X8, 0xC52000
	0x034A4BC8 LDR X8, [X8 + 0x1E0]
	0x034A4BCC ADD X0, X31, 0x8
	0x034A4BD0 LDR X1, [X8]
	0x034A4BD4 BL 0x2677474
	0x034A4BD8 MOVN W8, 0x1
	0x034A4BDC STR W8, [X19], #0x8
	0x034A4BE0 LDR X0, [X25]
	0x034A4BE4 LDR W8, [X0 + 0xE0]
	0x034A4BE8 CBNZ W8, 0x34A4BF0
	0x034A4BEC BL 0x1C16DFC
	0x034A4BF0 MOV X0, X19
	0x034A4BF4 MOV X1, X31
	0x034A4BF8 BL 0x32C4864
	0x034A4BFC B 0x34A4C38
	0x034A4C00 STR W31, [X19]
	0x034A4C04 LDR X8, [X31 + 0x8]
	0x034A4C08 STR X8, [X19 + 0x40]
	0x034A4C0C LDR X0, [X25]
	0x034A4C10 LDR W8, [X0 + 0xE0]
	0x034A4C14 CBNZ W8, 0x34A4C1C
	0x034A4C18 BL 0x1C16DFC
	0x034A4C1C ADRP X8, 0xC8D000
	0x034A4C20 LDR X8, [X8 + 0xEB8]
	0x034A4C24 ADD X0, X19, 0x8
	0x034A4C28 LDR X3, [X8]
	0x034A4C2C ADD X1, X31, 0x8
	0x034A4C30 MOV X2, X19
	0x034A4C34 BL 0x2187274
	0x034A4C38 LDP X20, X19, [X31 + 0x40]
	0x034A4C3C LDP X22, X21, [X31 + 0x30]
	0x034A4C40 LDP X24, X23, [X31 + 0x20]
	0x034A4C44 LDP X30, X25, [X31 + 0x10]
	0x034A4C48 ADD X31, X31, 0x50
	0x034A4C4C RET
	0x034A4C50 ADRP X0, 0xC57000
	0x034A4C54 LDR X0, [X0 + 0x578]
	0x034A4C58 BL 0x1C16D08
	0x034A4C5C BL 0x1C16F10
	0x034A4C60 MOV X20, X0
	0x034A4C64 ADRP X0, 0xC8B000
	0x034A4C68 LDR X0, [X0 + 0x2F0]
	0x034A4C6C BL 0x1C16D08
	0x034A4C70 MOV X1, X0
	0x034A4C74 MOV X0, X20
	0x034A4C78 MOV X2, X31
	0x034A4C7C BL 0x3314A68
	0x034A4C80 ADRP X0, 0xC8D000
	0x034A4C84 LDR X0, [X0 + 0xED0]
	0x034A4C88 BL 0x1C16D08
	0x034A4C8C MOV X1, X0
	0x034A4C90 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xF3A000
	008 Move X21, 0xC53000
	009 Move W8, [X22+2546]
	010 Move X21, [X21+640]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC8E000
	018 Move X0, [X0+3648]
	019 Call 0x1C17CF4
	020 Move X0, 0xC53000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2546], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+80], X31
	028 Move [X31+48], V0
	029 Move [X31+56], V0
	030 Move [X31+2], V0
	031 Move X21, 0xC8E000
	032 Move W8, [X0+224]
	033 Move X21, [X21+3648]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X8, X31, 8
	038 Move X0, X31
	039 Call AsyncTaskMethodBuilder.Create
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X9, [X31+24]
	042 Move X2, [X21]
	043 Add X8, X31, 32
	044 Move [X31+64], X19
	045 Move [X31+72], X20
	046 Or X20, X8, 15
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W10, TEMP
	050 Add X1, X31, 32
	051 Move X0, X20
	052 Move [X31+40], V0
	053 Move [X31+56], X9
	054 Move [X31+32], W10
	055 Call AsyncTaskMethodBuilder.Start, X0, X1
	056 Move X0, X20
	057 Move X1, X31
	058 Call AsyncTaskMethodBuilder.get_Task, X0
	059 Move X20, [X31+128]
	060 Move X19, [X31+136]
	061 Move X22, [X31+112]
	062 Move X21, [X31+120]
	063 Move X30, [X31+96]
	064 Add X31, X31, 144
	065 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Console.IConsoleUserList> ListUsersAsync(System.String bearerToken, System.String filter, System.Nullable`1<System.Boolean> banned, System.Nullable`1<System.Boolean> tombstones)

Disassembly:
	0x034A4C94 BL 0x1C16DEC
	0x034A4C98 BL 0x1C16F20
	0x034A4C9C BL 0x1C16F20
	0x034A4CA0 BL 0x1C16F20
	0x034A4CA4 BL 0x1C16F20
	0x034A4CA8 BL 0x1C16F20
	0x034A4CAC BL 0x1C16F20
	0x034A4CB0 BL 0x1C16F20
	0x034A4CB4 B 0x34A4D04
	0x034A4CB8 B 0x34A4D04
	0x034A4CBC B 0x34A4D04
	0x034A4CC0 B 0x34A4D04
	0x034A4CC4 B 0x34A4D04
	0x034A4CC8 B 0x34A4D04
	0x034A4CCC B 0x34A4D04
	0x034A4CD0 B 0x34A4D04
	0x034A4CD4 B 0x34A4D04
	0x034A4CD8 B 0x34A4D04
	0x034A4CDC B 0x34A4D04
	0x034A4CE0 B 0x34A4D04
	0x034A4CE4 B 0x34A4D04
	0x034A4CE8 B 0x34A4D04
	0x034A4CEC B 0x34A4D04
	0x034A4CF0 B 0x34A4D04
	0x034A4CF4 B 0x34A4D04
	0x034A4CF8 B 0x34A4D04
	0x034A4CFC B 0x34A4D04
	0x034A4D00 B 0x34A4D04
	0x034A4D04 MOV X20, X0
	0x034A4D08 CMP W1, 0x1
	0x034A4D0C B.NE 0x34A4D9C
	0x034A4D10 MOV X0, X20
	0x034A4D14 BL 0x3EB1AD0
	0x034A4D18 MOV X20, X0
	0x034A4D1C ADRP X0, 0xC4F000
	0x034A4D20 LDR X0, [X0 + 0x7D0]
	0x034A4D24 BL 0x1C16D08
	0x034A4D28 LDR X8, [X20]
	0x034A4D2C LDR X1, [X8]
	0x034A4D30 BL 0x1C17270
	0x034A4D34 TBZ X0, 0x0, 0x34A4D74
	0x034A4D38 LDR X20, [X20]
	0x034A4D3C BL 0x3EB1AE0
	0x034A4D40 MOVN W8, 0x1
	0x034A4D44 STR W8, [X19], #0x8
	0x034A4D48 ADRP X0, 0xC52000
	0x034A4D4C LDR X0, [X0 + 0x280]
	0x034A4D50 BL 0x1C16D08
	0x034A4D54 LDR W8, [X0 + 0xE0]
	0x034A4D58 CBNZ W8, 0x34A4D60
	0x034A4D5C BL 0x1C16DFC
	0x034A4D60 MOV X0, X19
	0x034A4D64 MOV X1, X20
	0x034A4D68 MOV X2, X31
	0x034A4D6C BL 0x32C4908
	0x034A4D70 B 0x34A4C38
	0x034A4D74 MOVZ W0, 0x8
	0x034A4D78 BL 0x3EB1AF0
	0x034A4D7C LDR X8, [X20]
	0x034A4D80 STR X8, [X0]
	0x034A4D84 ADRP X1, 0xA10000
	0x034A4D88 ADD X1, X1, 0xE58
	0x034A4D8C MOV X2, X31
	0x034A4D90 BL 0x3EB1B00
	0x034A4D94 MOV X20, X0
	0x034A4D98 BL 0x3EB1AE0
	0x034A4D9C MOV X0, X20
	0x034A4DA0 BL 0x1D2C690
	0x034A4DA4 BL 0x1990590

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xF3A000
	012 Move X24, 0xC8E000
	013 Move W8, [X25+2547]
	014 Move X24, [X24+3656]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xC8E000
	025 Move X0, [X0+3664]
	026 Call 0x1C17CF4
	027 Move X0, 0xC8E000
	028 Move X0, [X0+3672]
	029 Call 0x1C17CF4
	030 Move X0, 0xC8E000
	031 Move X0, [X0+3680]
	032 Call 0x1C17CF4
	033 Move X0, 0xC8E000
	034 Move X0, [X0+3656]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+2547], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+64], X31
	041 Move [X31+32], V0
	042 Move [X31+40], V0
	043 Move [X31], V0
	044 Move [X31+8], V0
	045 Move X24, 0xC8E000
	046 Move X26, 0xC8E000
	047 Move X25, 0xC8E000
	048 Move W8, [X0+224]
	049 Move X24, [X24+3664]
	050 Move X26, [X26+3672]
	051 Move X25, [X25+3680]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+48], X23
	067 Move [X31+56], X22
	068 Move [X31+32], X21
	069 NotImplemented "Instruction STRH not yet implemented."
	070 NotImplemented "Instruction STRH not yet implemented."
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

