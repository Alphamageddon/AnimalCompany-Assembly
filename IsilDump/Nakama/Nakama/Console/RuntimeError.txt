Type: Nakama.Console.RuntimeError

Method: System.Int32 get_Code()

Disassembly:
	0x034A2DEC ADRP X22, 0xC54000
	0x034A2DF0 LDRB W8, [X23 + 0x9E3]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Code(System.Int32 value)

Disassembly:
	0x034A2DF4 LDR X22, [X22 + 0x280]
	0x034A2DF8 MOV X19, X2

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.Console.IProtobufAny> get_Details()

Disassembly:
	0x034A2DFC MOV X20, X1
	0x034A2E00 MOV X21, X0
	0x034A2E04 TBNZ X8, 0x0, 0x34A2E28
	0x034A2E08 ADRP X0, 0xC8F000
	0x034A2E0C LDR X0, [X0 + 0xD20]
	0x034A2E10 BL 0x1C16CF4
	0x034A2E14 ADRP X0, 0xC54000
	0x034A2E18 LDR X0, [X0 + 0x280]
	0x034A2E1C BL 0x1C16CF4
	0x034A2E20 MOVZ W8, 0x1
	0x034A2E24 STRB W8, [X23 + 0x9E3]
	0x034A2E28 LDR X0, [X22]
	0x034A2E2C MOVI V0.2D, 0x0
	0x034A2E30 STP V0, V0, [X31 + 0x40]
	0x034A2E34 STP V0, V0, [X31 + 0x20]
	0x034A2E38 ADRP X22, 0xC8F000
	0x034A2E3C LDR W8, [X0 + 0xE0]
	0x034A2E40 LDR X22, [X22 + 0xD20]
	0x034A2E44 CBNZ W8, 0x34A2E4C
	0x034A2E48 BL 0x1C16DFC
	0x034A2E4C ADD X8, X31, 0x8
	0x034A2E50 MOV X0, X31
	0x034A2E54 BL 0x32C4770
	0x034A2E58 LDUR V0, [X31 + 0x8]
	0x034A2E5C LDR X9, [X31 + 0x18]
	0x034A2E60 LDR X2, [X22]
	0x034A2E64 ADD X8, X31, 0x20
	0x034A2E68 STP X21, X20, [X31 + 0x48]
	0x034A2E6C ORR X20, X8, 0xF
	0x034A2E70 MOVN W10, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF3C000
	005 Move W8, [X20+2515]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC90000
	012 Move X0, [X0+3120]
	013 Call 0x1C17CF4
	014 Move X0, 0xC90000
	015 Move X0, [X0+3128]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2515], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xC90000
	023 Move X8, [X8+3128]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xC90000
	027 Move X8, [X8+3120]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.Console.ProtobufAny> get__details()

Disassembly:
	0x034A2E74 ADD X1, X31, 0x20
	0x034A2E78 MOV X0, X20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__details(System.Collections.Generic.List`1<Nakama.Console.ProtobufAny> value)

Disassembly:
	0x034A2E7C STUR V0, [X31 + 0x28]
	0x034A2E80 STP X9, X19, [X31 + 0x38]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Error()

Disassembly:
	0x034A2E84 STR W10, [X31 + 0x20]
	0x034A2E88 BL 0x21903B8

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Error(System.String value)

Disassembly:
	0x034A2E8C MOV X0, X20
	0x034A2E90 MOV X1, X31

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Message()

Disassembly:
	0x034A2E94 BL 0x32C47F8
	0x034A2E98 LDP X20, X19, [X31 + 0x80]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Message(System.String value)

Disassembly:
	0x034A2E9C LDP X22, X21, [X31 + 0x70]
	0x034A2EA0 LDP X30, X23, [X31 + 0x60]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034A2EA4 ADD X31, X31, 0x90
	0x034A2EA8 RET
	0x034A2EAC SUB X31, X31, 0x90
	0x034A2EB0 STP X30, X23, [X31 + 0x60]
	0x034A2EB4 STP X22, X21, [X31 + 0x70]
	0x034A2EB8 STP X20, X19, [X31 + 0x80]
	0x034A2EBC ADRP X23, 0xF3B000
	0x034A2EC0 ADRP X22, 0xC54000
	0x034A2EC4 LDRB W8, [X23 + 0x9E4]
	0x034A2EC8 LDR X22, [X22 + 0x280]
	0x034A2ECC MOV X19, X2
	0x034A2ED0 MOV X20, X1
	0x034A2ED4 MOV X21, X0
	0x034A2ED8 TBNZ X8, 0x0, 0x34A2EFC
	0x034A2EDC ADRP X0, 0xC8F000
	0x034A2EE0 LDR X0, [X0 + 0xD28]
	0x034A2EE4 BL 0x1C16CF4
	0x034A2EE8 ADRP X0, 0xC54000
	0x034A2EEC LDR X0, [X0 + 0x280]
	0x034A2EF0 BL 0x1C16CF4
	0x034A2EF4 MOVZ W8, 0x1
	0x034A2EF8 STRB W8, [X23 + 0x9E4]
	0x034A2EFC LDR X0, [X22]
	0x034A2F00 MOVI V0.2D, 0x0
	0x034A2F04 STP V0, V0, [X31 + 0x40]
	0x034A2F08 STP V0, V0, [X31 + 0x20]
	0x034A2F0C ADRP X22, 0xC8F000
	0x034A2F10 LDR W8, [X0 + 0xE0]
	0x034A2F14 LDR X22, [X22 + 0xD28]
	0x034A2F18 CBNZ W8, 0x34A2F20
	0x034A2F1C BL 0x1C16DFC
	0x034A2F20 ADD X8, X31, 0x8
	0x034A2F24 MOV X0, X31
	0x034A2F28 BL 0x32C4770
	0x034A2F2C LDUR V0, [X31 + 0x8]
	0x034A2F30 LDR X9, [X31 + 0x18]
	0x034A2F34 LDR X2, [X22]
	0x034A2F38 ADD X8, X31, 0x20
	0x034A2F3C STP X21, X20, [X31 + 0x48]
	0x034A2F40 ORR X20, X8, 0xF
	0x034A2F44 MOVN W10, 0x0
	0x034A2F48 ADD X1, X31, 0x20
	0x034A2F4C MOV X0, X20
	0x034A2F50 STUR V0, [X31 + 0x28]
	0x034A2F54 STP X9, X19, [X31 + 0x38]
	0x034A2F58 STR W10, [X31 + 0x20]
	0x034A2F5C BL 0x21904B8
	0x034A2F60 MOV X0, X20
	0x034A2F64 MOV X1, X31
	0x034A2F68 BL 0x32C47F8
	0x034A2F6C LDP X20, X19, [X31 + 0x80]
	0x034A2F70 LDP X22, X21, [X31 + 0x70]
	0x034A2F74 LDP X30, X23, [X31 + 0x60]
	0x034A2F78 ADD X31, X31, 0x90
	0x034A2F7C RET
	0x034A2F80 SUB X31, X31, 0x90
	0x034A2F84 STP X30, X23, [X31 + 0x60]
	0x034A2F88 STP X22, X21, [X31 + 0x70]
	0x034A2F8C STP X20, X19, [X31 + 0x80]
	0x034A2F90 ADRP X23, 0xF3B000
	0x034A2F94 ADRP X22, 0xC54000
	0x034A2F98 LDRB W8, [X23 + 0x9E5]
	0x034A2F9C LDR X22, [X22 + 0x280]
	0x034A2FA0 MOV X19, X2
	0x034A2FA4 MOV X20, X1
	0x034A2FA8 MOV X21, X0
	0x034A2FAC TBNZ X8, 0x0, 0x34A2FD0
	0x034A2FB0 ADRP X0, 0xC8F000
	0x034A2FB4 LDR X0, [X0 + 0xD30]
	0x034A2FB8 BL 0x1C16CF4
	0x034A2FBC ADRP X0, 0xC54000
	0x034A2FC0 LDR X0, [X0 + 0x280]
	0x034A2FC4 BL 0x1C16CF4
	0x034A2FC8 MOVZ W8, 0x1
	0x034A2FCC STRB W8, [X23 + 0x9E5]
	0x034A2FD0 LDR X0, [X22]
	0x034A2FD4 MOVI V0.2D, 0x0
	0x034A2FD8 STP V0, V0, [X31 + 0x40]
	0x034A2FDC STP V0, V0, [X31 + 0x20]
	0x034A2FE0 ADRP X22, 0xC8F000
	0x034A2FE4 LDR W8, [X0 + 0xE0]
	0x034A2FE8 LDR X22, [X22 + 0xD30]
	0x034A2FEC CBNZ W8, 0x34A2FF4
	0x034A2FF0 BL 0x1C16DFC
	0x034A2FF4 ADD X8, X31, 0x8
	0x034A2FF8 MOV X0, X31
	0x034A2FFC BL 0x32C4770
	0x034A3000 LDUR V0, [X31 + 0x8]
	0x034A3004 LDR X9, [X31 + 0x18]
	0x034A3008 LDR X2, [X22]
	0x034A300C ADD X8, X31, 0x20
	0x034A3010 STP X21, X20, [X31 + 0x48]
	0x034A3014 ORR X20, X8, 0xF
	0x034A3018 MOVN W10, 0x0
	0x034A301C ADD X1, X31, 0x20
	0x034A3020 MOV X0, X20
	0x034A3024 STUR V0, [X31 + 0x28]
	0x034A3028 STP X9, X19, [X31 + 0x38]
	0x034A302C STR W10, [X31 + 0x20]
	0x034A3030 BL 0x21905B8
	0x034A3034 MOV X0, X20
	0x034A3038 MOV X1, X31
	0x034A303C BL 0x32C47F8
	0x034A3040 LDP X20, X19, [X31 + 0x80]
	0x034A3044 LDP X22, X21, [X31 + 0x70]
	0x034A3048 LDP X30, X23, [X31 + 0x60]
	0x034A304C ADD X31, X31, 0x90
	0x034A3050 RET
	0x034A3054 SUB X31, X31, 0x90
	0x034A3058 STP X30, X23, [X31 + 0x60]
	0x034A305C STP X22, X21, [X31 + 0x70]
	0x034A3060 STP X20, X19, [X31 + 0x80]
	0x034A3064 ADRP X23, 0xF3A000
	0x034A3068 ADRP X22, 0xC53000
	0x034A306C LDRB W8, [X23 + 0x9E6]
	0x034A3070 LDR X22, [X22 + 0x280]
	0x034A3074 MOV X19, X2
	0x034A3078 MOV X20, X1
	0x034A307C MOV X21, X0
	0x034A3080 TBNZ X8, 0x0, 0x34A30A4
	0x034A3084 ADRP X0, 0xC8E000
	0x034A3088 LDR X0, [X0 + 0xD38]
	0x034A308C BL 0x1C16CF4
	0x034A3090 ADRP X0, 0xC53000
	0x034A3094 LDR X0, [X0 + 0x280]
	0x034A3098 BL 0x1C16CF4
	0x034A309C MOVZ W8, 0x1
	0x034A30A0 STRB W8, [X23 + 0x9E6]
	0x034A30A4 LDR X0, [X22]
	0x034A30A8 MOVI V0.2D, 0x0
	0x034A30AC STP V0, V0, [X31 + 0x40]
	0x034A30B0 STP V0, V0, [X31 + 0x20]
	0x034A30B4 ADRP X22, 0xC8E000
	0x034A30B8 LDR W8, [X0 + 0xE0]
	0x034A30BC LDR X22, [X22 + 0xD38]
	0x034A30C0 CBNZ W8, 0x34A30C8
	0x034A30C4 BL 0x1C16DFC
	0x034A30C8 ADD X8, X31, 0x8
	0x034A30CC MOV X0, X31
	0x034A30D0 BL 0x32C4770
	0x034A30D4 LDUR V0, [X31 + 0x8]
	0x034A30D8 LDR X9, [X31 + 0x18]
	0x034A30DC LDR X2, [X22]
	0x034A30E0 ADD X8, X31, 0x20
	0x034A30E4 STP X21, X20, [X31 + 0x48]
	0x034A30E8 ORR X20, X8, 0xF
	0x034A30EC MOVN W10, 0x0
	0x034A30F0 ADD X1, X31, 0x20
	0x034A30F4 MOV X0, X20
	0x034A30F8 STUR V0, [X31 + 0x28]
	0x034A30FC STP X9, X19, [X31 + 0x38]
	0x034A3100 STR W10, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF3C000
	011 Move X21, 0xC52000
	012 Move X22, 0xC52000
	013 Move W8, [X20+2516]
	014 Move X21, [X21+2440]
	015 Move X22, [X22+2512]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0xC52000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xC52000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xC90000
	028 Move X0, [X0+3136]
	029 Call 0x1C17CF4
	030 Move X0, 0xC90000
	031 Move X0, [X0+3144]
	032 Call 0x1C17CF4
	033 Move X0, 0xC52000
	034 Move X0, [X0+2104]
	035 Call 0x1C17CF4
	036 Move X0, 0xC8D000
	037 Move X0, [X0+728]
	038 Call 0x1C17CF4
	039 Move X0, 0xC8C000
	040 Move X0, [X0+3408]
	041 Call 0x1C17CF4
	042 Move X0, 0xC8D000
	043 Move X0, [X0+736]
	044 Call 0x1C17CF4
	045 Move X0, 0xC52000
	046 Move X0, [X0+2440]
	047 Call 0x1C17CF4
	048 Move X0, 0xC8C000
	049 Move X0, [X0+3616]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+2516], W8
	053 Move X0, [X22]
	054 Move X21, [X21]
	055 Move W1, 4
	056 Call 0x1C17D6C
	057 Compare X0, 0
	058 JumpIfEqual {170}
	059 Move X20, X0
	060 Compare X21, 0
	061 JumpIfEqual {68}
	062 Move X8, [X20]
	063 Move X0, X21
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {167}
	068 Move W8, [X20+24]
	069 Compare W8, 0
	070 JumpIfEqual {166}
	071 Move X22, 0xC8C000
	072 Move X22, [X22+3616]
	073 Move [X20+32], X21
	074 Move X0, [X22]
	075 Compare X0, 0
	076 JumpIfEqual {83}
	077 Move X8, [X20]
	078 Move X1, [X8+64]
	079 Call 0x1C17E00
	080 Compare X0, 0
	081 JumpIfEqual {167}
	082 Move W8, [X20+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, [X22]
	085 Move X9, 0xC52000
	086 Move X9, [X9+1880]
	087 Add X1, X31, 12
	088 Move [X20+40], X8
	089 Move W8, [X19+16]
	090 Move X0, [X9]
	091 Move [X31+12], W8
	092 Call 0x1C17E04
	093 Move X21, X0
	094 Compare X0, 0
	095 JumpIfEqual {102}
	096 Move X8, [X20]
	097 Move X0, X21
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {167}
	102 Move W8, [X20+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X22, 0xC51000
	105 Move X22, [X22+2104]
	106 Move [X20+48], X21
	107 Move X0, [X22]
	108 Compare X0, 0
	109 JumpIfEqual {116}
	110 Move X8, [X20]
	111 Move X1, [X8+64]
	112 Call 0x1C17E00
	113 Compare X0, 0
	114 JumpIfEqual {167}
	115 Move W8, [X20+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X21, 0xC8F000
	118 Move X23, 0xC8C000
	119 Move X21, [X21+3136]
	120 Move X23, [X23+728]
	121 Move X8, [X22]
	122 Move X24, 0xC8B000
	123 Move X25, 0xC8F000
	124 Move X26, 0xC8C000
	125 Move X24, [X24+3408]
	126 Move X25, [X25+3144]
	127 Move X26, [X26+736]
	128 Move X0, X20
	129 Move X1, X31
	130 Move [X20+56], X8
	131 Call String.Concat, X0
	132 Move X20, X0
	133 Move X0, X19
	134 Call RuntimeError.get_Details, X0
	135 Move X8, [X22]
	136 Move X2, [X21]
	137 Move X1, X0
	138 Move X0, X8
	139 Call String.Join, X0, X1
	140 Move X1, [X23]
	141 Move X3, [X24]
	142 Move X2, X0
	143 Move X0, X20
	144 Move X4, X31
	145 Call String.Concat, X0, X1, X2, X3
	146 Move X2, [X19+32]
	147 Move X1, [X25]
	148 Move X3, [X22]
	149 Move X4, X31
	150 Call String.Concat, X0, X1, X2, X3
	151 Move X2, [X19+40]
	152 Move X1, [X26]
	153 Move X3, [X22]
	154 Move X4, X31
	155 Call String.Concat, X0, X1, X2, X3
	156 Move X20, [X31+64]
	157 Move X19, [X31+72]
	158 Move X22, [X31+48]
	159 Move X21, [X31+56]
	160 Move X24, [X31+32]
	161 Move X23, [X31+40]
	162 Move X26, [X31+16]
	163 Move X25, [X31+24]
	164 Move X30, [X31+80]
	165 Return X0
	166 Call 0x1C17F28
	167 Call 0x1C17F44
	168 Move X1, X31
	169 Call 0x1C17DEC
	170 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034A3104 BL 0x21906B8
	0x034A3108 MOV X0, X20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

