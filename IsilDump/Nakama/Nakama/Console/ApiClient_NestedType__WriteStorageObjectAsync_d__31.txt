Type: Nakama.Console.ApiClient/<WriteStorageObjectAsync>d__31

Method: System.Void MoveNext()

Disassembly:
	0x034AF730 SUB X31, X31, 0x50
	0x034AF734 STP X30, X21, [X31 + 0x30]
	0x034AF738 STP X20, X19, [X31 + 0x40]
	0x034AF73C ADRP X21, 0xF2E000
	0x034AF740 LDR X8, [X21 + 0xA68]
	0x034AF744 MOV X19, X1
	0x034AF748 MOV X20, X0
	0x034AF74C CBNZ X8, 0x34AF798
	0x034AF750 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF754 LDR V0, [X12 + 0x5B8]
	0x034AF758 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF75C ADRP X10, 0xFFFFFFFFFD662000
	0x034AF760 ADD X8, X8, 0x4C6
	0x034AF764 MOVZ W9, 0xB
	0x034AF768 ADD X10, X10, 0xF8C
	0x034AF76C MOVZ W11, 0x13
	0x034AF770 MOVZ W13, 0x10
	0x034AF774 ADD X0, X31, 0x0
	0x034AF778 STP X8, X9, [X31]
	0x034AF77C STP X10, X11, [X31 + 0x10]
	0x034AF780 STR W13, [X31 + 0x28]
	0x034AF784 STR D0, [X31 + 0x20]
	0x034AF788 STRB W31, [X31 + 0x2C]
	0x034AF78C BL 0x1C1729C
	0x034AF790 MOV X8, X0
	0x034AF794 STR X0, [X21 + 0xA68]
	0x034AF798 MOV X0, X20
	0x034AF79C MOV X1, X19
	0x034AF7A0 BLR X8
	0x034AF7A4 LDP X20, X19, [X31 + 0x40]
	0x034AF7A8 LDP X30, X21, [X31 + 0x30]
	0x034AF7AC ADD X31, X31, 0x50
	0x034AF7B0 RET
	0x034AF7B4 SUB X31, X31, 0x70
	0x034AF7B8 STR X30, [X31 + 0x30]
	0x034AF7BC STP X24, X23, [X31 + 0x40]
	0x034AF7C0 STP X22, X21, [X31 + 0x50]
	0x034AF7C4 STP X20, X19, [X31 + 0x60]
	0x034AF7C8 ADRP X24, 0xF2E000
	0x034AF7CC LDR X8, [X24 + 0xA70]
	0x034AF7D0 MOV W19, W4
	0x034AF7D4 MOV X20, X3
	0x034AF7D8 MOV W21, W2
	0x034AF7DC MOV W22, W1
	0x034AF7E0 MOV X23, X0
	0x034AF7E4 CBNZ X8, 0x34AF830
	0x034AF7E8 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF7EC LDR V0, [X12 + 0x5B8]
	0x034AF7F0 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF7F4 ADRP X10, 0xFFFFFFFFFD641000
	0x034AF7F8 ADD X8, X8, 0x4C6
	0x034AF7FC MOVZ W9, 0xB
	0x034AF800 ADD X10, X10, 0x175
	0x034AF804 MOVZ W11, 0x16
	0x034AF808 MOVZ W13, 0x1C
	0x034AF80C ADD X0, X31, 0x0
	0x034AF810 STP X8, X9, [X31]
	0x034AF814 STP X10, X11, [X31 + 0x10]
	0x034AF818 STR W13, [X31 + 0x28]
	0x034AF81C STR D0, [X31 + 0x20]
	0x034AF820 STRB W31, [X31 + 0x2C]
	0x034AF824 BL 0x1C1729C
	0x034AF828 MOV X8, X0
	0x034AF82C STR X0, [X24 + 0xA70]
	0x034AF830 MOV X0, X23
	0x034AF834 MOV W1, W22
	0x034AF838 MOV W2, W21
	0x034AF83C MOV X3, X20
	0x034AF840 MOV W4, W19
	0x034AF844 BLR X8
	0x034AF848 LDP X20, X19, [X31 + 0x60]
	0x034AF84C LDP X22, X21, [X31 + 0x50]
	0x034AF850 LDP X24, X23, [X31 + 0x40]
	0x034AF854 LDR X30, [X31 + 0x30]
	0x034AF858 ADD X31, X31, 0x70
	0x034AF85C RET
	0x034AF860 SUB X31, X31, 0x70
	0x034AF864 STR X30, [X31 + 0x30]
	0x034AF868 STP X24, X23, [X31 + 0x40]
	0x034AF86C STP X22, X21, [X31 + 0x50]
	0x034AF870 STP X20, X19, [X31 + 0x60]
	0x034AF874 ADRP X24, 0xF2E000
	0x034AF878 LDR X8, [X24 + 0xA78]
	0x034AF87C MOV X19, X4
	0x034AF880 MOV X20, X3
	0x034AF884 MOV W21, W2
	0x034AF888 MOV W22, W1
	0x034AF88C MOV X23, X0
	0x034AF890 CBNZ X8, 0x34AF8DC
	0x034AF894 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF898 LDR V0, [X12 + 0x5B8]
	0x034AF89C ADRP X8, 0xFFFFFFFFFD645000
	0x034AF8A0 ADRP X10, 0xFFFFFFFFFD64B000
	0x034AF8A4 ADD X8, X8, 0x4C6
	0x034AF8A8 MOVZ W9, 0xB
	0x034AF8AC ADD X10, X10, 0x763
	0x034AF8B0 MOVZ W11, 0x16
	0x034AF8B4 MOVZ W13, 0x20
	0x034AF8B8 ADD X0, X31, 0x0
	0x034AF8BC STP X8, X9, [X31]
	0x034AF8C0 STP X10, X11, [X31 + 0x10]
	0x034AF8C4 STR W13, [X31 + 0x28]
	0x034AF8C8 STR D0, [X31 + 0x20]
	0x034AF8CC STRB W31, [X31 + 0x2C]
	0x034AF8D0 BL 0x1C1729C
	0x034AF8D4 MOV X8, X0
	0x034AF8D8 STR X0, [X24 + 0xA78]
	0x034AF8DC MOV X0, X23
	0x034AF8E0 MOV W1, W22
	0x034AF8E4 MOV W2, W21
	0x034AF8E8 MOV X3, X20
	0x034AF8EC MOV X4, X19
	0x034AF8F0 BLR X8
	0x034AF8F4 LDP X20, X19, [X31 + 0x60]
	0x034AF8F8 LDP X22, X21, [X31 + 0x50]
	0x034AF8FC LDP X24, X23, [X31 + 0x40]
	0x034AF900 LDR X30, [X31 + 0x30]
	0x034AF904 ADD X31, X31, 0x70
	0x034AF908 RET
	0x034AF90C SUB X31, X31, 0x50
	0x034AF910 STR X30, [X31 + 0x30]
	0x034AF914 STP X20, X19, [X31 + 0x40]
	0x034AF918 ADRP X20, 0xF2E000
	0x034AF91C LDR X8, [X20 + 0xA80]
	0x034AF920 MOV X19, X0
	0x034AF924 CBNZ X8, 0x34AF970
	0x034AF928 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF92C LDR V0, [X12 + 0x5B8]
	0x034AF930 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF934 ADRP X10, 0xFFFFFFFFFD664000
	0x034AF938 ADD X8, X8, 0x4C6
	0x034AF93C MOVZ W9, 0xB
	0x034AF940 ADD X10, X10, 0xDB6
	0x034AF944 MOVZ W11, 0x1B
	0x034AF948 MOVZ W13, 0x8
	0x034AF94C ADD X0, X31, 0x0
	0x034AF950 STP X8, X9, [X31]
	0x034AF954 STP X10, X11, [X31 + 0x10]
	0x034AF958 STR W13, [X31 + 0x28]
	0x034AF95C STR D0, [X31 + 0x20]
	0x034AF960 STRB W31, [X31 + 0x2C]
	0x034AF964 BL 0x1C1729C
	0x034AF968 MOV X8, X0
	0x034AF96C STR X0, [X20 + 0xA80]
	0x034AF970 MOV X0, X19
	0x034AF974 BLR X8
	0x034AF978 LDP X20, X19, [X31 + 0x40]
	0x034AF97C LDR X30, [X31 + 0x30]
	0x034AF980 ADD X31, X31, 0x50
	0x034AF984 RET
	0x034AF988 SUB X31, X31, 0x50
	0x034AF98C STP X30, X21, [X31 + 0x30]
	0x034AF990 STP X20, X19, [X31 + 0x40]
	0x034AF994 ADRP X21, 0xF2E000
	0x034AF998 LDR X8, [X21 + 0xA88]
	0x034AF99C MOV W19, W1
	0x034AF9A0 MOV X20, X0
	0x034AF9A4 CBNZ X8, 0x34AF9F0
	0x034AF9A8 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF9AC LDR V0, [X12 + 0x5B8]
	0x034AF9B0 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF9B4 ADRP X10, 0xFFFFFFFFFD678000
	0x034AF9B8 ADD X8, X8, 0x4C6
	0x034AF9BC MOVZ W9, 0xB
	0x034AF9C0 ADD X10, X10, 0xB3F
	0x034AF9C4 MOVZ W11, 0x1C
	0x034AF9C8 MOVZ W13, 0xC
	0x034AF9CC ADD X0, X31, 0x0
	0x034AF9D0 STP X8, X9, [X31]
	0x034AF9D4 STP X10, X11, [X31 + 0x10]
	0x034AF9D8 STR W13, [X31 + 0x28]
	0x034AF9DC STR D0, [X31 + 0x20]
	0x034AF9E0 STRB W31, [X31 + 0x2C]
	0x034AF9E4 BL 0x1C1729C
	0x034AF9E8 MOV X8, X0
	0x034AF9EC STR X0, [X21 + 0xA88]
	0x034AF9F0 MOV X0, X20
	0x034AF9F4 MOV W1, W19
	0x034AF9F8 BLR X8
	0x034AF9FC LDP X20, X19, [X31 + 0x40]
	0x034AFA00 LDP X30, X21, [X31 + 0x30]
	0x034AFA04 ADD X31, X31, 0x50
	0x034AFA08 RET
	0x034AFA0C SUB X31, X31, 0x60
	0x034AFA10 STP X30, X23, [X31 + 0x30]
	0x034AFA14 STP X22, X21, [X31 + 0x40]
	0x034AFA18 STP X20, X19, [X31 + 0x50]
	0x034AFA1C ADRP X23, 0xF2E000
	0x034AFA20 LDR X8, [X23 + 0xA90]
	0x034AFA24 MOV W19, W3
	0x034AFA28 MOV X20, X2
	0x034AFA2C MOV X21, X1
	0x034AFA30 MOV X22, X0
	0x034AFA34 CBNZ X8, 0x34AFA80
	0x034AFA38 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AFA3C LDR V0, [X12 + 0x5B8]
	0x034AFA40 ADRP X8, 0xFFFFFFFFFD645000
	0x034AFA44 ADRP X10, 0xFFFFFFFFFD64B000
	0x034AFA48 ADD X8, X8, 0x4C6
	0x034AFA4C MOVZ W9, 0xB
	0x034AFA50 ADD X10, X10, 0x77A
	0x034AFA54 MOVZ W11, 0x10
	0x034AFA58 MOVZ W13, 0x1C
	0x034AFA5C ADD X0, X31, 0x0
	0x034AFA60 STP X8, X9, [X31]
	0x034AFA64 STP X10, X11, [X31 + 0x10]
	0x034AFA68 STR W13, [X31 + 0x28]
	0x034AFA6C STR D0, [X31 + 0x20]
	0x034AFA70 STRB W31, [X31 + 0x2C]
	0x034AFA74 BL 0x1C1729C
	0x034AFA78 MOV X8, X0
	0x034AFA7C STR X0, [X23 + 0xA90]
	0x034AFA80 MOV X0, X22
	0x034AFA84 MOV X1, X21
	0x034AFA88 MOV X2, X20
	0x034AFA8C MOV W3, W19
	0x034AFA90 BLR X8
	0x034AFA94 LDP X20, X19, [X31 + 0x50]
	0x034AFA98 LDP X22, X21, [X31 + 0x40]
	0x034AFA9C LDP X30, X23, [X31 + 0x30]
	0x034AFAA0 ADD X31, X31, 0x60
	0x034AFAA4 RET
	0x034AFAA8 SUB X31, X31, 0x60
	0x034AFAAC STP X30, X23, [X31 + 0x30]
	0x034AFAB0 STP X22, X21, [X31 + 0x40]
	0x034AFAB4 STP X20, X19, [X31 + 0x50]
	0x034AFAB8 ADRP X23, 0xF2E000
	0x034AFABC LDR X8, [X23 + 0xA98]
	0x034AFAC0 MOV W19, W3
	0x034AFAC4 MOV X21, X2
	0x034AFAC8 MOV X20, X1
	0x034AFACC MOV X22, X0
	0x034AFAD0 CBNZ X8, 0x34AFB1C
	0x034AFAD4 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AFAD8 LDR V0, [X12 + 0x5B8]
	0x034AFADC ADRP X8, 0xFFFFFFFFFD645000
	0x034AFAE0 ADRP X10, 0xFFFFFFFFFD64B000
	0x034AFAE4 ADD X8, X8, 0x4C6
	0x034AFAE8 MOVZ W9, 0xB
	0x034AFAEC ADD X10, X10, 0x77A
	0x034AFAF0 MOVZ W11, 0x10
	0x034AFAF4 MOVZ W13, 0x1C
	0x034AFAF8 ADD X0, X31, 0x0
	0x034AFAFC STP X8, X9, [X31]
	0x034AFB00 STP X10, X11, [X31 + 0x10]
	0x034AFB04 STR W13, [X31 + 0x28]
	0x034AFB08 STR D0, [X31 + 0x20]
	0x034AFB0C STRB W31, [X31 + 0x2C]
	0x034AFB10 BL 0x1C1729C
	0x034AFB14 MOV X8, X0
	0x034AFB18 STR X0, [X23 + 0xA98]
	0x034AFB1C ADD X9, X21, 0x20
	0x034AFB20 CMP X21, 0x0
	0x034AFB24 CSEL X2, X31, X9, EQ
	0x034AFB28 MOV X0, X22
	0x034AFB2C MOV X1, X20
	0x034AFB30 MOV W3, W19
	0x034AFB34 BLR X8
	0x034AFB38 LDP X20, X19, [X31 + 0x50]
	0x034AFB3C LDP X22, X21, [X31 + 0x40]
	0x034AFB40 LDP X30, X23, [X31 + 0x30]
	0x034AFB44 ADD X31, X31, 0x60
	0x034AFB48 RET
	0x034AFB4C SUB X31, X31, 0x60
	0x034AFB50 STP X30, X23, [X31 + 0x30]
	0x034AFB54 STP X22, X21, [X31 + 0x40]
	0x034AFB58 STP X20, X19, [X31 + 0x50]
	0x034AFB5C ADRP X23, 0xF2E000
	0x034AFB60 LDR X8, [X23 + 0xAA0]
	0x034AFB64 MOV W19, W3
	0x034AFB68 MOV X20, X2
	0x034AFB6C MOV X21, X1
	0x034AFB70 MOV X22, X0
	0x034AFB74 CBNZ X8, 0x34AFBC0
	0x034AFB78 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AFB7C LDR V0, [X12 + 0x5B8]
	0x034AFB80 ADRP X8, 0xFFFFFFFFFD645000
	0x034AFB84 ADRP X10, 0xFFFFFFFFFD64B000
	0x034AFB88 ADD X8, X8, 0x4C6
	0x034AFB8C MOVZ W9, 0xB
	0x034AFB90 ADD X10, X10, 0x77A
	0x034AFB94 MOVZ W11, 0x10
	0x034AFB98 MOVZ W13, 0x1C
	0x034AFB9C ADD X0, X31, 0x0
	0x034AFBA0 STP X8, X9, [X31]
	0x034AFBA4 STP X10, X11, [X31 + 0x10]
	0x034AFBA8 STR W13, [X31 + 0x28]
	0x034AFBAC STR D0, [X31 + 0x20]
	0x034AFBB0 STRB W31, [X31 + 0x2C]
	0x034AFBB4 BL 0x1C1729C
	0x034AFBB8 MOV X8, X0
	0x034AFBBC STR X0, [X23 + 0xAA0]
	0x034AFBC0 MOV X0, X22
	0x034AFBC4 MOV X1, X21
	0x034AFBC8 MOV X2, X20
	0x034AFBCC MOV W3, W19
	0x034AFBD0 BLR X8
	0x034AFBD4 LDP X20, X19, [X31 + 0x50]
	0x034AFBD8 LDP X22, X21, [X31 + 0x40]
	0x034AFBDC LDP X30, X23, [X31 + 0x30]
	0x034AFBE0 ADD X31, X31, 0x60
	0x034AFBE4 RET
	0x034AFBE8 SUB X31, X31, 0x60
	0x034AFBEC STP X30, X23, [X31 + 0x30]
	0x034AFBF0 STP X22, X21, [X31 + 0x40]
	0x034AFBF4 STP X20, X19, [X31 + 0x50]
	0x034AFBF8 ADRP X23, 0xF2E000
	0x034AFBFC LDR X8, [X23 + 0xAA8]
	0x034AFC00 MOV W19, W3
	0x034AFC04 MOV X21, X2
	0x034AFC08 MOV X20, X1
	0x034AFC0C MOV X22, X0
	0x034AFC10 CBNZ X8, 0x34AFC5C
	0x034AFC14 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AFC18 LDR V0, [X12 + 0x5B8]
	0x034AFC1C ADRP X8, 0xFFFFFFFFFD645000
	0x034AFC20 ADRP X10, 0xFFFFFFFFFD64B000
	0x034AFC24 ADD X8, X8, 0x4C6
	0x034AFC28 MOVZ W9, 0xB
	0x034AFC2C ADD X10, X10, 0x77A
	0x034AFC30 MOVZ W11, 0x10
	0x034AFC34 MOVZ W13, 0x1C
	0x034AFC38 ADD X0, X31, 0x0
	0x034AFC3C STP X8, X9, [X31]
	0x034AFC40 STP X10, X11, [X31 + 0x10]
	0x034AFC44 STR W13, [X31 + 0x28]
	0x034AFC48 STR D0, [X31 + 0x20]
	0x034AFC4C STRB W31, [X31 + 0x2C]
	0x034AFC50 BL 0x1C1729C
	0x034AFC54 MOV X8, X0
	0x034AFC58 STR X0, [X23 + 0xAA8]
	0x034AFC5C ADD X9, X21, 0x20
	0x034AFC60 CMP X21, 0x0
	0x034AFC64 CSEL X2, X31, X9, EQ
	0x034AFC68 MOV X0, X22
	0x034AFC6C MOV X1, X20
	0x034AFC70 MOV W3, W19
	0x034AFC74 BLR X8
	0x034AFC78 LDP X20, X19, [X31 + 0x50]
	0x034AFC7C LDP X22, X21, [X31 + 0x40]
	0x034AFC80 LDP X30, X23, [X31 + 0x30]
	0x034AFC84 ADD X31, X31, 0x60
	0x034AFC88 RET
	0x034AFC8C SUB X31, X31, 0x60
	0x034AFC90 STP X30, X23, [X31 + 0x30]
	0x034AFC94 STP X22, X21, [X31 + 0x40]
	0x034AFC98 STP X20, X19, [X31 + 0x50]
	0x034AFC9C ADRP X23, 0xF2E000
	0x034AFCA0 LDR X8, [X23 + 0xAB0]
	0x034AFCA4 MOV W19, W3
	0x034AFCA8 MOV X20, X2
	0x034AFCAC MOV X21, X1
	0x034AFCB0 MOV X22, X0
	0x034AFCB4 CBNZ X8, 0x34AFD00
	0x034AFCB8 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AFCBC LDR V0, [X12 + 0x5B8]
	0x034AFCC0 ADRP X8, 0xFFFFFFFFFD645000
	0x034AFCC4 ADRP X10, 0xFFFFFFFFFD64B000
	0x034AFCC8 ADD X8, X8, 0x4C6
	0x034AFCCC MOVZ W9, 0xB
	0x034AFCD0 ADD X10, X10, 0x77A
	0x034AFCD4 MOVZ W11, 0x10
	0x034AFCD8 MOVZ W13, 0x1C
	0x034AFCDC ADD X0, X31, 0x0
	0x034AFCE0 STP X8, X9, [X31]
	0x034AFCE4 STP X10, X11, [X31 + 0x10]
	0x034AFCE8 STR W13, [X31 + 0x28]
	0x034AFCEC STR D0, [X31 + 0x20]
	0x034AFCF0 STRB W31, [X31 + 0x2C]
	0x034AFCF4 BL 0x1C1729C
	0x034AFCF8 MOV X8, X0
	0x034AFCFC STR X0, [X23 + 0xAB0]
	0x034AFD00 MOV X0, X22
	0x034AFD04 MOV X1, X21
	0x034AFD08 MOV X2, X20
	0x034AFD0C MOV W3, W19
	0x034AFD10 BLR X8
	0x034AFD14 LDP X20, X19, [X31 + 0x50]
	0x034AFD18 LDP X22, X21, [X31 + 0x40]
	0x034AFD1C LDP X30, X23, [X31 + 0x30]
	0x034AFD20 ADD X31, X31, 0x60
	0x034AFD24 RET
	0x034AFD28 SUB X31, X31, 0x60
	0x034AFD2C STP X30, X23, [X31 + 0x30]
	0x034AFD30 STP X22, X21, [X31 + 0x40]
	0x034AFD34 STP X20, X19, [X31 + 0x50]
	0x034AFD38 ADRP X23, 0xF2E000
	0x034AFD3C LDR X8, [X23 + 0xAB8]
	0x034AFD40 MOV W19, W3
	0x034AFD44 MOV X20, X2
	0x034AFD48 MOV X21, X1
	0x034AFD4C MOV X22, X0
	0x034AFD50 CBNZ X8, 0x34AFD9C
	0x034AFD54 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AFD58 LDR V0, [X12 + 0x5B8]
	0x034AFD5C ADRP X8, 0xFFFFFFFFFD645000
	0x034AFD60 ADRP X10, 0xFFFFFFFFFD647000
	0x034AFD64 ADD X8, X8, 0x4C6
	0x034AFD68 MOVZ W9, 0xB
	0x034AFD6C ADD X10, X10, 0x589
	0x034AFD70 MOVZ W11, 0x13
	0x034AFD74 MOVZ W13, 0x1C
	0x034AFD78 ADD X0, X31, 0x0
	0x034AFD7C STP X8, X9, [X31]
	0x034AFD80 STP X10, X11, [X31 + 0x10]
	0x034AFD84 STR W13, [X31 + 0x28]
	0x034AFD88 STR D0, [X31 + 0x20]
	0x034AFD8C STRB W31, [X31 + 0x2C]
	0x034AFD90 BL 0x1C1729C
	0x034AFD94 MOV X8, X0
	0x034AFD98 STR X0, [X23 + 0xAB8]
	0x034AFD9C MOV X0, X22
	0x034AFDA0 MOV X1, X21
	0x034AFDA4 MOV X2, X20
	0x034AFDA8 MOV W3, W19
	0x034AFDAC BLR X8
	0x034AFDB0 LDP X20, X19, [X31 + 0x50]
	0x034AFDB4 LDP X22, X21, [X31 + 0x40]
	0x034AFDB8 LDP X30, X23, [X31 + 0x30]
	0x034AFDBC ADD X31, X31, 0x60
	0x034AFDC0 RET
	0x034AFDC4 SUB X31, X31, 0x60
	0x034AFDC8 STP X30, X23, [X31 + 0x30]
	0x034AFDCC STP X22, X21, [X31 + 0x40]
	0x034AFDD0 STP X20, X19, [X31 + 0x50]
	0x034AFDD4 ADRP X23, 0xF2E000
	0x034AFDD8 LDR X8, [X23 + 0xAC0]
	0x034AFDDC MOV W19, W3
	0x034AFDE0 MOV X21, X2
	0x034AFDE4 MOV X20, X1
	0x034AFDE8 MOV X22, X0
	0x034AFDEC CBNZ X8, 0x34AFE38
	0x034AFDF0 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AFDF4 LDR V0, [X12 + 0x5B8]
	0x034AFDF8 ADRP X8, 0xFFFFFFFFFD645000
	0x034AFDFC ADRP X10, 0xFFFFFFFFFD647000
	0x034AFE00 ADD X8, X8, 0x4C6
	0x034AFE04 MOVZ W9, 0xB
	0x034AFE08 ADD X10, X10, 0x589
	0x034AFE0C MOVZ W11, 0x13
	0x034AFE10 MOVZ W13, 0x1C
	0x034AFE14 ADD X0, X31, 0x0
	0x034AFE18 STP X8, X9, [X31]
	0x034AFE1C STP X10, X11, [X31 + 0x10]
	0x034AFE20 STR W13, [X31 + 0x28]
	0x034AFE24 STR D0, [X31 + 0x20]
	0x034AFE28 STRB W31, [X31 + 0x2C]
	0x034AFE2C BL 0x1C1729C
	0x034AFE30 MOV X8, X0
	0x034AFE34 STR X0, [X23 + 0xAC0]
	0x034AFE38 ADD X9, X21, 0x20
	0x034AFE3C CMP X21, 0x0
	0x034AFE40 CSEL X2, X31, X9, EQ

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xF2F000
	012 Move W8, [X20+2608]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {83}
	018 Move X0, 0xC84000
	019 Move X0, [X0+696]
	020 Call 0x1C17CF4
	021 Move X0, 0xC84000
	022 Move X0, [X0+704]
	023 Call 0x1C17CF4
	024 Move X0, 0xC83000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xC46000
	028 Move X0, [X0+2064]
	029 Call 0x1C17CF4
	030 Move X0, 0xC46000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0xC46000
	034 Move X0, [X0+1744]
	035 Call 0x1C17CF4
	036 Move X0, 0xC80000
	037 Move X0, [X0+1976]
	038 Call 0x1C17CF4
	039 Move X0, 0xC84000
	040 Move X0, [X0+712]
	041 Call 0x1C17CF4
	042 Move X0, 0xC48000
	043 Move X0, [X0+480]
	044 Call 0x1C17CF4
	045 Move X0, 0xC48000
	046 Move X0, [X0+496]
	047 Call 0x1C17CF4
	048 Move X0, 0xC48000
	049 Move X0, [X0+504]
	050 Call 0x1C17CF4
	051 Move X0, 0xC4E000
	052 Move X0, [X0+928]
	053 Call 0x1C17CF4
	054 Move X0, 0xC47000
	055 Move X0, [X0+2600]
	056 Call 0x1C17CF4
	057 Move X0, 0xC6E000
	058 Move X0, [X0+1248]
	059 Call 0x1C17CF4
	060 Move X0, 0xC83000
	061 Move X0, [X0+3960]
	062 Call 0x1C17CF4
	063 Move X0, 0xC81000
	064 Move X0, [X0+256]
	065 Call 0x1C17CF4
	066 Move X0, 0xC83000
	067 Move X0, [X0+3896]
	068 Call 0x1C17CF4
	069 Move X0, 0xC83000
	070 Move X0, [X0+3912]
	071 Call 0x1C17CF4
	072 Move X0, 0xC80000
	073 Move X0, [X0+2000]
	074 Call 0x1C17CF4
	075 Move X0, 0xC80000
	076 Move X0, [X0+2008]
	077 Call 0x1C17CF4
	078 Move X0, 0xC45000
	079 Move X0, [X0+2440]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X20+2608], W8
	083 Move [X31+24], X31
	084 Move X26, 0xC83000
	085 Move W8, [X19]
	086 Move X26, [X26+3608]
	087 Compare W8, 0
	088 JumpIfEqual {242}
	089 Move X20, [X19+32]
	090 Compare X20, 0
	091 JumpIfEqual {332}
	092 Move X8, [X19+40]
	093 Compare X8, 0
	094 JumpIfEqual {350}
	095 Move X8, [X19+48]
	096 Compare X8, 0
	097 JumpIfEqual {368}
	098 Move X8, [X19+56]
	099 Compare X8, 0
	100 JumpIfEqual {386}
	101 Move X8, 0xC47000
	102 Move X8, [X8+2600]
	103 Move X0, [X8]
	104 Move X8, 0xC83000
	105 Move X8, [X8+3960]
	106 Move X25, [X19+64]
	107 Move W9, [X0+224]
	108 Move X21, [X8]
	109 Compare W9, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X20
	113 Move X1, X31
	114 Call Uri.EscapeDataString, X0
	115 Compare X21, 0
	116 JumpIfEqual {404}
	117 Move X8, 0xC81000
	118 Move X8, [X8+256]
	119 Move X2, X0
	120 Move X1, [X8]
	121 Move X0, X21
	122 Move X3, X31
	123 Call String.Replace, X0, X1, X2
	124 Move X20, X0
	125 Move X0, [X19+40]
	126 Move X1, X31
	127 Call Uri.EscapeDataString, X0
	128 Compare X20, 0
	129 JumpIfEqual {405}
	130 Move X8, 0xC83000
	131 Move X8, [X8+3896]
	132 Move X2, X0
	133 Move X1, [X8]
	134 Move X0, X20
	135 Move X3, X31
	136 Call String.Replace, X0, X1, X2
	137 Move X20, X0
	138 Move X0, [X19+48]
	139 Move X1, X31
	140 Call Uri.EscapeDataString, X0
	141 Compare X20, 0
	142 JumpIfEqual {406}
	143 Move X8, 0xC83000
	144 Move X8, [X8+3912]
	145 Move X2, X0
	146 Move X1, [X8]
	147 Move X0, X20
	148 Move X3, X31
	149 Call String.Replace, X0, X1, X2
	150 Compare X25, 0
	151 JumpIfEqual {407}
	152 Move X8, 0xC45000
	153 Move X9, 0xC4E000
	154 Move X8, [X8+2440]
	155 Move X9, [X9+928]
	156 Move X22, X0
	157 Move X23, [X25+16]
	158 Move X21, [X8]
	159 Move X0, [X9]
	160 Call 0x1C17F10
	161 Move X20, X0
	162 Move X1, X23
	163 Move X2, X31
	164 Call UriBuilder..ctor, X0, X1
	165 Compare X20, 0
	166 JumpIfEqual {408}
	167 Move X0, X20
	168 Move X1, X22
	169 Move X2, X31
	170 Call UriBuilder.set_Path, X0, X1
	171 Move X0, X20
	172 Move X1, X21
	173 Move X2, X31
	174 Call UriBuilder.set_Query, X0, X1
	175 Move X0, X20
	176 Move X1, X31
	177 Call UriBuilder.get_Uri, X0
	178 Move X8, 0xC6E000
	179 Move X9, 0xC46000
	180 Move X8, [X8+1248]
	181 Move X9, [X9+1744]
	182 Move X20, X0
	183 Move X21, [X8]
	184 Move X0, [X9]
	185 Call 0x1C17F10
	186 Move X8, 0xC46000
	187 Move X8, [X8+1728]
	188 Move X22, X0
	189 Move X1, [X8]
	190 Call Dictionary`2<Object, Object>..ctor, X0
	191 Move X8, 0xC80000
	192 Move X8, [X8+2008]
	193 Move X1, [X19+72]
	194 Move X0, [X8]
	195 Move X2, X31
	196 Call String.Concat, X0, X1
	197 Compare X22, 0
	198 JumpIfEqual {409}
	199 Move X8, 0xC80000
	200 Move X8, [X8+2000]
	201 Move X9, 0xC46000
	202 Move X9, [X9+2064]
	203 Move X2, X0
	204 Move X1, [X8]
	205 Move X3, [X9]
	206 Move X0, X22
	207 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	208 Move X0, [X19+56]
	209 Move X1, X31
	210 Call JsonWriter.ToJson, X0
	211 Move X23, X0
	212 Move X0, X31
	213 Call Encoding.get_UTF8
	214 Compare X0, 0
	215 JumpIfEqual {410}
	216 Move X8, [X0]
	217 Move X9, [X8+616]
	218 Move X2, [X8+624]
	219 Move X1, X23
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move X24, [X25+32]
	222 Compare X24, 0
	223 JumpIfEqual {411}
	224 Move X10, 0xC80000
	225 Move X8, [X24]
	226 Move X10, [X10+1976]
	227 Move W25, [X25+24]
	228 Move X23, X0
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Move X1, [X10]
	231 Compare X9, 0
	232 JumpIfEqual {239}
	233 Move X10, [X8+176]
	234 Add X10, X10, 8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Subtract X9, X9, 1
	238 Add X10, X10, 16
	239 Move W2, 3
	240 Move X0, X24
	241 Call 0x1C5D788
	242 Move X8, [X19+80]
	243 Move TEMP, 0
	244 Not TEMP
	245 Move W9, TEMP
	246 Move [X31+24], X8
	247 Move [X19+80], X31
	248 Move [X19], W9
	249 Move W9, [X10]
	250 Add W9, W9, 3
	251 Add X8, X8, W9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X9, [X0+8]
	255 Move X0, X24
	256 Move X1, X21
	257 Move X2, X20
	258 Move X3, X22
	259 Move X4, X23
	260 Move W5, W25
	261 Move X6, X31
	262 Move X7, X31
	263 Move [X31], X9
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Compare X0, 0
	266 JumpIfEqual {412}
	267 Move X8, 0xC48000
	268 Move X8, [X8+504]
	269 Move X1, [X8]
	270 Call Task`1<Object>.GetAwaiter, X0
	271 Move X8, 0xC48000
	272 Move X8, [X8+496]
	273 Move [X31+24], X0
	274 Move X1, [X8]
	275 Add X0, X31, 24
	276 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfNotEqual {306}
	281 Move X8, 0xC48000
	282 Move X8, [X8+480]
	283 Add X0, X31, 24
	284 Move X1, [X8]
	285 Call TaskAwaiter`1<Object>.GetResult, X0
	286 Move X8, 0xC84000
	287 Move X8, [X8+712]
	288 Move X1, [X8]
	289 Call JsonParser.FromJson, X0
	290 Move TEMP, 1
	291 Not TEMP
	292 Move W8, TEMP
	293 Move [X19+8], W8
	294 Move X20, X0
	295 Move X0, [X26]
	296 Move X21, 0xC84000
	297 Move W8, [X0+224]
	298 Move X21, [X21+704]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X2, [X21]
	303 Move X0, X19
	304 Move X1, X20
	305 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	306 Move [X19], W31
	307 Move X8, [X31+24]
	308 Move [X19+80], X8
	309 Move X0, [X26]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X8, 0xC84000
	315 Move X8, [X8+696]
	316 Add X0, X19, 8
	317 Move X3, [X8]
	318 Add X1, X31, 24
	319 Move X2, X19
	320 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	321 Move X20, [X31+80]
	322 Move X19, [X31+88]
	323 Move X22, [X31+64]
	324 Move X21, [X31+72]
	325 Move X24, [X31+48]
	326 Move X23, [X31+56]
	327 Move X26, [X31+32]
	328 Move X25, [X31+40]
	329 Move X30, [X31+16]
	330 Add X31, X31, 96
	331 Return 
	332 Move X0, 0xC4D000
	333 Move X0, [X0+1400]
	334 Call 0x1C17D08
	335 Call 0x1C17F10
	336 Move X20, X0
	337 Move X0, 0xC81000
	338 Move X0, [X0+280]
	339 Call 0x1C17D08
	340 Move X1, X0
	341 Move X0, X20
	342 Move X2, X31
	343 Call ArgumentException..ctor, X0, X1
	344 Move X0, 0xC84000
	345 Move X0, [X0+720]
	346 Call 0x1C17D08
	347 Move X1, X0
	348 Move X0, X20
	349 Call 0x1C17DEC
	350 Move X0, 0xC4D000
	351 Move X0, [X0+1400]
	352 Call 0x1C17D08
	353 Call 0x1C17F10
	354 Move X20, X0
	355 Move X0, 0xC83000
	356 Move X0, [X0+3936]
	357 Call 0x1C17D08
	358 Move X1, X0
	359 Move X0, X20
	360 Move X2, X31
	361 Call ArgumentException..ctor, X0, X1
	362 Move X0, 0xC84000
	363 Move X0, [X0+720]
	364 Call 0x1C17D08
	365 Move X1, X0
	366 Move X0, X20
	367 Call 0x1C17DEC
	368 Move X0, 0xC4D000
	369 Move X0, [X0+1400]
	370 Call 0x1C17D08
	371 Call 0x1C17F10
	372 Move X20, X0
	373 Move X0, 0xC81000
	374 Move X0, [X0+296]
	375 Call 0x1C17D08
	376 Move X1, X0
	377 Move X0, X20
	378 Move X2, X31
	379 Call ArgumentException..ctor, X0, X1
	380 Move X0, 0xC84000
	381 Move X0, [X0+720]
	382 Call 0x1C17D08
	383 Move X1, X0
	384 Move X0, X20
	385 Call 0x1C17DEC
	386 Move X0, 0xC4D000
	387 Move X0, [X0+1400]
	388 Call 0x1C17D08
	389 Call 0x1C17F10
	390 Move X20, X0
	391 Move X0, 0xC80000
	392 Move X0, [X0+3016]
	393 Call 0x1C17D08
	394 Move X1, X0
	395 Move X0, X20
	396 Move X2, X31
	397 Call ArgumentException..ctor, X0, X1
	398 Move X0, 0xC84000
	399 Move X0, [X0+720]
	400 Call 0x1C17D08
	401 Move X1, X0
	402 Move X0, X20
	403 Call 0x1C17DEC
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Call 0x1C17F20
	407 Call 0x1C17F20
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Call 0x1C17F20
	412 Call 0x1C17F20
	413 Move X20, X0
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move X0, X20
	416 Call 0x3EB2AD0
	417 Move X20, X0
	418 Move X0, 0xC45000
	419 Move X0, [X0+2000]
	420 Call 0x1C17D08
	421 Move X8, [X20]
	422 Move X1, [X8]
	423 Call 0x1C18270
	424 Move TEMP, X0
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfNotEqual {448}
	428 Move X20, [X20]
	429 Call 0x3EB2AE0
	430 Move TEMP, 1
	431 Not TEMP
	432 Move W8, TEMP
	433 Move [X19+8], W8
	434 Move X0, 0xC83000
	435 Move X0, [X0+3608]
	436 Call 0x1C17D08
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {441}
	440 Call 0x1C17DFC
	441 Move X0, 0xC84000
	442 Move X0, [X0+728]
	443 Call 0x1C17D08
	444 Move X2, X0
	445 Move X0, X19
	446 Move X1, X20
	447 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	448 Move W0, 8
	449 Call 0x3EB2AF0
	450 Move X8, [X20]
	451 Move [X0], X8
	452 Move X1, 0xA06000
	453 Add X1, X1, 3672
	454 Move X2, X31
	455 Call 0x3EB2B00
	456 Move X20, X0
	457 Call 0x3EB2AE0
	458 Move X0, X20
	459 Call 0x1D2D690
	460 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AFE44 MOV X0, X22
	0x034AFE48 MOV X1, X20
	0x034AFE4C MOV W3, W19
	0x034AFE50 BLR X8
	0x034AFE54 LDP X20, X19, [X31 + 0x50]
	0x034AFE58 LDP X22, X21, [X31 + 0x40]
	0x034AFE5C LDP X30, X23, [X31 + 0x30]
	0x034AFE60 ADD X31, X31, 0x60
	0x034AFE64 RET
	0x034AFE68 SUB X31, X31, 0x60
	0x034AFE6C STP X30, X23, [X31 + 0x30]
	0x034AFE70 STP X22, X21, [X31 + 0x40]
	0x034AFE74 STP X20, X19, [X31 + 0x50]
	0x034AFE78 ADRP X23, 0xF2E000
	0x034AFE7C LDR X8, [X23 + 0xAC8]
	0x034AFE80 MOV W19, W3
	0x034AFE84 MOV X20, X2
	0x034AFE88 MOV X21, X1
	0x034AFE8C MOV X22, X0
	0x034AFE90 CBNZ X8, 0x34AFEDC
	0x034AFE94 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AFE98 LDR V0, [X12 + 0x5B8]
	0x034AFE9C ADRP X8, 0xFFFFFFFFFD645000
	0x034AFEA0 ADRP X10, 0xFFFFFFFFFD647000
	0x034AFEA4 ADD X8, X8, 0x4C6
	0x034AFEA8 MOVZ W9, 0xB
	0x034AFEAC ADD X10, X10, 0x589
	0x034AFEB0 MOVZ W11, 0x13
	0x034AFEB4 MOVZ W13, 0x1C
	0x034AFEB8 ADD X0, X31, 0x0
	0x034AFEBC STP X8, X9, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF2F000
	007 Move X21, 0xC83000
	008 Move W8, [X22+2609]
	009 Move X21, [X21+3608]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC84000
	017 Move X0, [X0+736]
	018 Call 0x1C17CF4
	019 Move X0, 0xC83000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2609], W8
	024 Move X0, [X21]
	025 Move X21, 0xC84000
	026 Move W8, [X0+224]
	027 Move X21, [X21+736]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

