Type: Nakama.Console.ConsoleUserList

Method: System.Int32 get_TotalCount()

Disassembly:
	0x034A1658 RET
	0x034A165C STR X1, [X0 + 0x60]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_TotalCount(System.Int32 value)

Disassembly:
	0x034A1660 RET
	0x034A1664 LDR X0, [X0 + 0x68]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.Console.IApiUser> get_Users()

Disassembly:
	0x034A1668 RET
	0x034A166C STR X1, [X0 + 0x68]
	0x034A1670 RET
	0x034A1674 LDR X0, [X0 + 0x70]
	0x034A1678 RET
	0x034A167C STR X1, [X0 + 0x70]
	0x034A1680 RET
	0x034A1684 SUB X31, X31, 0x70
	0x034A1688 STP X29, X30, [X31 + 0x10]
	0x034A168C STP X28, X27, [X31 + 0x20]
	0x034A1690 STP X26, X25, [X31 + 0x30]
	0x034A1694 STP X24, X23, [X31 + 0x40]
	0x034A1698 STP X22, X21, [X31 + 0x50]
	0x034A169C STP X20, X19, [X31 + 0x60]
	0x034A16A0 ADRP X23, 0xF3C000
	0x034A16A4 ADRP X20, 0xC52000
	0x034A16A8 ADRP X22, 0xC8C000
	0x034A16AC ADRP X24, 0xC52000
	0x034A16B0 ADRP X21, 0xC8C000
	0x034A16B4 LDRB W8, [X23 + 0x9D1]
	0x034A16B8 LDR X20, [X20 + 0x988]
	0x034A16BC LDR X22, [X22 + 0xCC8]
	0x034A16C0 LDR X24, [X24 + 0x838]
	0x034A16C4 LDR X21, [X21 + 0xD38]
	0x034A16C8 MOV X19, X0
	0x034A16CC TBNZ X8, 0x0, 0x34A1810
	0x034A16D0 ADRP X0, 0xC52000
	0x034A16D4 LDR X0, [X0 + 0xE00]
	0x034A16D8 BL 0x1C16CF4
	0x034A16DC ADRP X0, 0xC55000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF3D000
	005 Move W8, [X20+2503]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC91000
	012 Move X0, [X0+3040]
	013 Call 0x1C17CF4
	014 Move X0, 0xC91000
	015 Move X0, [X0+3048]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2503], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xC91000
	023 Move X8, [X8+3048]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xC91000
	027 Move X8, [X8+3040]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.Console.ApiUser> get__users()

Disassembly:
	0x034A16E0 LDR X0, [X0 + 0x190]
	0x034A16E4 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__users(System.Collections.Generic.List`1<Nakama.Console.ApiUser> value)

Disassembly:
	0x034A16E8 ADRP X0, 0xC55000
	0x034A16EC LDR X0, [X0 + 0x198]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034A16F0 BL 0x1C16CF4
	0x034A16F4 ADRP X0, 0xC52000
	0x034A16F8 LDR X0, [X0 + 0xE18]
	0x034A16FC BL 0x1C16CF4
	0x034A1700 ADRP X0, 0xC55000
	0x034A1704 LDR X0, [X0 + 0x1B0]
	0x034A1708 BL 0x1C16CF4
	0x034A170C ADRP X0, 0xC55000
	0x034A1710 LDR X0, [X0 + 0x1B8]
	0x034A1714 BL 0x1C16CF4
	0x034A1718 ADRP X0, 0xC52000
	0x034A171C LDR X0, [X0 + 0xAC8]
	0x034A1720 BL 0x1C16CF4
	0x034A1724 ADRP X0, 0xC8D000
	0x034A1728 LDR X0, [X0 + 0x168]
	0x034A172C BL 0x1C16CF4
	0x034A1730 ADRP X0, 0xC7F000
	0x034A1734 LDR X0, [X0 + 0x360]
	0x034A1738 BL 0x1C16CF4
	0x034A173C ADRP X0, 0xC7F000
	0x034A1740 LDR X0, [X0 + 0xFB8]
	0x034A1744 BL 0x1C16CF4
	0x034A1748 ADRP X0, 0xC8C000
	0x034A174C LDR X0, [X0 + 0xD88]
	0x034A1750 BL 0x1C16CF4
	0x034A1754 ADRP X0, 0xC8D000
	0x034A1758 LDR X0, [X0 + 0x170]
	0x034A175C BL 0x1C16CF4
	0x034A1760 ADRP X0, 0xC8C000
	0x034A1764 LDR X0, [X0 + 0xCD8]
	0x034A1768 BL 0x1C16CF4
	0x034A176C ADRP X0, 0xC5D000
	0x034A1770 LDR X0, [X0 + 0x6D8]
	0x034A1774 BL 0x1C16CF4
	0x034A1778 ADRP X0, 0xC52000
	0x034A177C LDR X0, [X0 + 0x838]
	0x034A1780 BL 0x1C16CF4
	0x034A1784 ADRP X0, 0xC90000
	0x034A1788 LDR X0, [X0 + 0xC20]
	0x034A178C BL 0x1C16CF4
	0x034A1790 ADRP X0, 0xC8C000
	0x034A1794 LDR X0, [X0 + 0xD00]
	0x034A1798 BL 0x1C16CF4
	0x034A179C ADRP X0, 0xC8C000
	0x034A17A0 LDR X0, [X0 + 0xD90]
	0x034A17A4 BL 0x1C16CF4
	0x034A17A8 ADRP X0, 0xC8C000
	0x034A17AC LDR X0, [X0 + 0xD70]
	0x034A17B0 BL 0x1C16CF4
	0x034A17B4 ADRP X0, 0xC8C000
	0x034A17B8 LDR X0, [X0 + 0xCC8]
	0x034A17BC BL 0x1C16CF4
	0x034A17C0 ADRP X0, 0xC8D000
	0x034A17C4 LDR X0, [X0 + 0x160]
	0x034A17C8 BL 0x1C16CF4
	0x034A17CC ADRP X0, 0xC52000
	0x034A17D0 LDR X0, [X0 + 0x988]
	0x034A17D4 BL 0x1C16CF4
	0x034A17D8 ADRP X0, 0xC52000
	0x034A17DC LDR X0, [X0 + 0x848]
	0x034A17E0 BL 0x1C16CF4
	0x034A17E4 ADRP X0, 0xC8C000
	0x034A17E8 LDR X0, [X0 + 0xD38]
	0x034A17EC BL 0x1C16CF4
	0x034A17F0 ADRP X0, 0xC8C000
	0x034A17F4 LDR X0, [X0 + 0xD60]
	0x034A17F8 BL 0x1C16CF4
	0x034A17FC ADRP X0, 0xC8C000
	0x034A1800 LDR X0, [X0 + 0xE30]
	0x034A1804 BL 0x1C16CF4
	0x034A1808 MOVZ W8, 0x1
	0x034A180C STRB W8, [X23 + 0x9D1]
	0x034A1810 LDR X0, [X20]
	0x034A1814 LDR X2, [X19 + 0x10]
	0x034A1818 LDR X1, [X22]
	0x034A181C LDR X3, [X24]
	0x034A1820 MOV X4, X31
	0x034A1824 BL 0x32277C4
	0x034A1828 LDR X2, [X19 + 0x18]
	0x034A182C LDR X1, [X21]
	0x034A1830 LDR X3, [X24]
	0x034A1834 MOV X4, X31
	0x034A1838 BL 0x32277C4
	0x034A183C LDR X8, [X20]
	0x034A1840 MOV X20, X0
	0x034A1844 MOV X0, X19
	0x034A1848 STR X8, [X31 + 0x8]
	0x034A184C BL 0x34A1560
	0x034A1850 CBZ X0, 0x34A1C24
	0x034A1854 ADRP X10, 0xC55000
	0x034A1858 LDR X8, [X0]
	0x034A185C LDR X10, [X10 + 0x190]
	0x034A1860 MOV X21, X0
	0x034A1864 STR X20, [X31]
	0x034A1868 LDRH W9, [X8 + 0x12E]
	0x034A186C LDR X1, [X10]
	0x034A1870 CBZ X9, 0x34A1894
	0x034A1874 LDR X10, [X8 + 0xB0]
	0x034A1878 ADD X10, X10, 0x8
	0x034A187C LDUR X11, [X10 - 0x8]
	0x034A1880 CMP X11, X1
	0x034A1884 B.EQ 0x34A18A4
	0x034A1888 SUBS X9, X9, 0x1
	0x034A188C ADD X10, X10, 0x10
	0x034A1890 B.NE 0x34A187C
	0x034A1894 MOV X0, X21
	0x034A1898 MOV W2, W31
	0x034A189C BL 0x1C5C788
	0x034A18A0 B 0x34A18B0
	0x034A18A4 LDRSW X9, [X10]
	0x034A18A8 ADD X8, X8, X9, 0x4, LSL
	0x034A18AC ADD X0, X8, 0x138
	0x034A18B0 ADRP X27, 0xC52000
	0x034A18B4 ADRP X28, 0xC55000
	0x034A18B8 ADRP X29, 0xC52000
	0x034A18BC ADRP X20, 0xC7F000
	0x034A18C0 ADRP X26, 0xC7F000
	0x034A18C4 ADRP X25, 0xC5D000
	0x034A18C8 LDR X27, [X27 + 0xE18]
	0x034A18CC LDR X28, [X28 + 0x198]
	0x034A18D0 LDR X29, [X29 + 0xAC8]
	0x034A18D4 LDR X20, [X20 + 0x360]
	0x034A18D8 LDR X26, [X26 + 0xFB8]
	0x034A18DC LDR X25, [X25 + 0x6D8]
	0x034A18E0 LDP X8, X1, [X0]
	0x034A18E4 MOV X0, X21
	0x034A18E8 BLR X8
	0x034A18EC MOV X21, X0
	0x034A18F0 LDR X0, [X31 + 0x8]
	0x034A18F4 CBZ X21, 0x34A1C08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF3D000
	009 Move X21, 0xC53000
	010 Move X22, 0xC53000
	011 Move W8, [X20+2504]
	012 Move X21, [X21+2440]
	013 Move X22, [X22+2512]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0xC53000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xC53000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xC91000
	026 Move X0, [X0+3056]
	027 Call 0x1C17CF4
	028 Move X0, 0xC53000
	029 Move X0, [X0+2104]
	030 Call 0x1C17CF4
	031 Move X0, 0xC8E000
	032 Move X0, [X0+488]
	033 Call 0x1C17CF4
	034 Move X0, 0xC8D000
	035 Move X0, [X0+3408]
	036 Call 0x1C17CF4
	037 Move X0, 0xC53000
	038 Move X0, [X0+2440]
	039 Call 0x1C17CF4
	040 Move X0, 0xC91000
	041 Move X0, [X0+3024]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2504], W8
	045 Move X0, [X22]
	046 Move X21, [X21]
	047 Move W1, 4
	048 Call 0x1C17D6C
	049 Compare X0, 0
	050 JumpIfEqual {146}
	051 Move X20, X0
	052 Compare X21, 0
	053 JumpIfEqual {60}
	054 Move X8, [X20]
	055 Move X0, X21
	056 Move X1, [X8+64]
	057 Call 0x1C17E00
	058 Compare X0, 0
	059 JumpIfEqual {143}
	060 Move W8, [X20+24]
	061 Compare W8, 0
	062 JumpIfEqual {142}
	063 Move X22, 0xC91000
	064 Move X22, [X22+3024]
	065 Move [X20+32], X21
	066 Move X0, [X22]
	067 Compare X0, 0
	068 JumpIfEqual {75}
	069 Move X8, [X20]
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {143}
	074 Move W8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X22]
	077 Move X9, 0xC53000
	078 Move X9, [X9+1880]
	079 Add X1, X31, 12
	080 Move [X20+40], X8
	081 Move W8, [X19+16]
	082 Move X0, [X9]
	083 Move [X31+12], W8
	084 Call 0x1C17E04
	085 Move X21, X0
	086 Compare X0, 0
	087 JumpIfEqual {94}
	088 Move X8, [X20]
	089 Move X0, X21
	090 Move X1, [X8+64]
	091 Call 0x1C17E00
	092 Compare X0, 0
	093 JumpIfEqual {143}
	094 Move W8, [X20+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X22, 0xC53000
	097 Move X22, [X22+2104]
	098 Move [X20+48], X21
	099 Move X0, [X22]
	100 Compare X0, 0
	101 JumpIfEqual {108}
	102 Move X8, [X20]
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {143}
	107 Move W8, [X20+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X22]
	110 Move X21, 0xC91000
	111 Move X23, 0xC8E000
	112 Move X24, 0xC8D000
	113 Move X21, [X21+3056]
	114 Move X23, [X23+488]
	115 Move X24, [X24+3408]
	116 Move X0, X20
	117 Move X1, X31
	118 Move [X20+56], X8
	119 Call String.Concat, X0
	120 Move X20, X0
	121 Move X0, X19
	122 Call ConsoleUserList.get_Users, X0
	123 Move X8, [X22]
	124 Move X2, [X21]
	125 Move X1, X0
	126 Move X0, X8
	127 Call String.Join, X0, X1
	128 Move X1, [X23]
	129 Move X3, [X24]
	130 Move X2, X0
	131 Move X0, X20
	132 Move X4, X31
	133 Call String.Concat, X0, X1, X2, X3
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move X30, [X31+64]
	141 Return X0
	142 Call 0x1C17F28
	143 Call 0x1C17F44
	144 Move X1, X31
	145 Call 0x1C17DEC
	146 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034A18F8 LDR X8, [X21]
	0x034A18FC LDR X1, [X27]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

