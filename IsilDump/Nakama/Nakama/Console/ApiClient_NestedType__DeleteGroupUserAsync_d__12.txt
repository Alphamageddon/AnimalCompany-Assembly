Type: Nakama.Console.ApiClient/<DeleteGroupUserAsync>d__12

Method: System.Void MoveNext()

Disassembly:
	0x034A6404 BL 0x3314A68
	0x034A6408 ADRP X0, 0xC8B000
	0x034A640C LDR X0, [X0 + 0xF58]
	0x034A6410 BL 0x1C16D08
	0x034A6414 MOV X1, X0
	0x034A6418 MOV X0, X20
	0x034A641C BL 0x1C16DEC
	0x034A6420 BL 0x1C16F20
	0x034A6424 BL 0x1C16F20
	0x034A6428 BL 0x1C16F20
	0x034A642C BL 0x1C16F20
	0x034A6430 BL 0x1C16F20
	0x034A6434 BL 0x1C16F20
	0x034A6438 BL 0x1C16F20
	0x034A643C BL 0x1C16F20
	0x034A6440 BL 0x1C16F20
	0x034A6444 B 0x34A64AC
	0x034A6448 B 0x34A64AC
	0x034A644C B 0x34A64AC
	0x034A6450 B 0x34A64AC
	0x034A6454 B 0x34A64AC
	0x034A6458 B 0x34A64AC
	0x034A645C B 0x34A64AC
	0x034A6460 B 0x34A64AC
	0x034A6464 B 0x34A64AC
	0x034A6468 B 0x34A64AC
	0x034A646C B 0x34A64AC
	0x034A6470 B 0x34A64AC
	0x034A6474 B 0x34A64AC
	0x034A6478 B 0x34A64AC
	0x034A647C B 0x34A64AC
	0x034A6480 B 0x34A64AC
	0x034A6484 B 0x34A64AC
	0x034A6488 B 0x34A64AC
	0x034A648C B 0x34A64AC
	0x034A6490 B 0x34A64AC
	0x034A6494 B 0x34A64AC
	0x034A6498 B 0x34A64AC
	0x034A649C B 0x34A64AC
	0x034A64A0 B 0x34A64AC
	0x034A64A4 B 0x34A64AC
	0x034A64A8 B 0x34A64AC
	0x034A64AC MOV X20, X0
	0x034A64B0 CMP W1, 0x1
	0x034A64B4 B.NE 0x34A6544
	0x034A64B8 MOV X0, X20
	0x034A64BC BL 0x3EB1AD0
	0x034A64C0 MOV X20, X0
	0x034A64C4 ADRP X0, 0xC4D000
	0x034A64C8 LDR X0, [X0 + 0x7D0]
	0x034A64CC BL 0x1C16D08
	0x034A64D0 LDR X8, [X20]
	0x034A64D4 LDR X1, [X8]
	0x034A64D8 BL 0x1C17270
	0x034A64DC TBZ X0, 0x0, 0x34A651C
	0x034A64E0 LDR X20, [X20]
	0x034A64E4 BL 0x3EB1AE0
	0x034A64E8 MOVN W8, 0x1
	0x034A64EC STR W8, [X19], #0x8
	0x034A64F0 ADRP X0, 0xC50000
	0x034A64F4 LDR X0, [X0 + 0x280]
	0x034A64F8 BL 0x1C16D08
	0x034A64FC LDR W8, [X0 + 0xE0]
	0x034A6500 CBNZ W8, 0x34A6508
	0x034A6504 BL 0x1C16DFC
	0x034A6508 MOV X0, X19
	0x034A650C MOV X1, X20
	0x034A6510 MOV X2, X31
	0x034A6514 BL 0x32C4908
	0x034A6518 B 0x34A62E8
	0x034A651C MOVZ W0, 0x8
	0x034A6520 BL 0x3EB1AF0
	0x034A6524 LDR X8, [X20]
	0x034A6528 STR X8, [X0]
	0x034A652C ADRP X1, 0xA0E000
	0x034A6530 ADD X1, X1, 0xE58
	0x034A6534 MOV X2, X31
	0x034A6538 BL 0x3EB1B00
	0x034A653C MOV X20, X0
	0x034A6540 BL 0x3EB1AE0
	0x034A6544 MOV X0, X20
	0x034A6548 BL 0x1D2C690
	0x034A654C BL 0x1990590
	0x034A6550 STR X30, [X31 - 0x30]!
	0x034A6554 STP X22, X21, [X31 + 0x10]
	0x034A6558 STP X20, X19, [X31 + 0x20]
	0x034A655C ADRP X21, 0xF37000
	0x034A6560 ADRP X22, 0xC50000
	0x034A6564 LDRB W8, [X21 + 0xA01]
	0x034A6568 LDR X22, [X22 + 0x280]
	0x034A656C MOV X19, X1
	0x034A6570 MOV X20, X0
	0x034A6574 TBNZ X8, 0x0, 0x34A658C
	0x034A6578 ADRP X0, 0xC50000
	0x034A657C LDR X0, [X0 + 0x280]
	0x034A6580 BL 0x1C16CF4
	0x034A6584 MOVZ W8, 0x1
	0x034A6588 STRB W8, [X21 + 0xA01]
	0x034A658C LDR X0, [X22]
	0x034A6590 LDR W8, [X0 + 0xE0]
	0x034A6594 CBNZ W8, 0x34A659C
	0x034A6598 BL 0x1C16DFC
	0x034A659C ADD X0, X20, 0x8
	0x034A65A0 MOV X1, X19
	0x034A65A4 LDP X20, X19, [X31 + 0x20]
	0x034A65A8 LDP X22, X21, [X31 + 0x10]
	0x034A65AC MOV X2, X31
	0x034A65B0 LDR X30, [X31], #0x30
	0x034A65B4 B 0x32C477C
	0x034A65B8 SUB X31, X31, 0x50
	0x034A65BC STP X30, X25, [X31 + 0x10]
	0x034A65C0 STP X24, X23, [X31 + 0x20]
	0x034A65C4 STP X22, X21, [X31 + 0x30]
	0x034A65C8 STP X20, X19, [X31 + 0x40]
	0x034A65CC ADRP X20, 0xF37000
	0x034A65D0 LDRB W8, [X20 + 0xA02]
	0x034A65D4 MOV X19, X0
	0x034A65D8 TBNZ X8, 0x0, 0x34A66E0
	0x034A65DC ADRP X0, 0xC8B000
	0x034A65E0 LDR X0, [X0 + 0xF70]
	0x034A65E4 BL 0x1C16CF4
	0x034A65E8 ADRP X0, 0xC50000
	0x034A65EC LDR X0, [X0 + 0x280]
	0x034A65F0 BL 0x1C16CF4
	0x034A65F4 ADRP X0, 0xC4E000
	0x034A65F8 LDR X0, [X0 + 0x810]
	0x034A65FC BL 0x1C16CF4
	0x034A6600 ADRP X0, 0xC4E000
	0x034A6604 LDR X0, [X0 + 0x6C0]
	0x034A6608 BL 0x1C16CF4
	0x034A660C ADRP X0, 0xC4E000
	0x034A6610 LDR X0, [X0 + 0x6D0]
	0x034A6614 BL 0x1C16CF4
	0x034A6618 ADRP X0, 0xC88000
	0x034A661C LDR X0, [X0 + 0x7B8]
	0x034A6620 BL 0x1C16CF4
	0x034A6624 ADRP X0, 0xC50000
	0x034A6628 LDR X0, [X0 + 0x1E0]
	0x034A662C BL 0x1C16CF4
	0x034A6630 ADRP X0, 0xC50000
	0x034A6634 LDR X0, [X0 + 0x1F0]
	0x034A6638 BL 0x1C16CF4
	0x034A663C ADRP X0, 0xC50000
	0x034A6640 LDR X0, [X0 + 0x1F8]
	0x034A6644 BL 0x1C16CF4
	0x034A6648 ADRP X0, 0xC56000
	0x034A664C LDR X0, [X0 + 0x3A0]
	0x034A6650 BL 0x1C16CF4
	0x034A6654 ADRP X0, 0xC4F000
	0x034A6658 LDR X0, [X0 + 0xA28]
	0x034A665C BL 0x1C16CF4
	0x034A6660 ADRP X0, 0xC8B000
	0x034A6664 LDR X0, [X0 + 0xF78]
	0x034A6668 BL 0x1C16CF4
	0x034A666C ADRP X0, 0xC89000
	0x034A6670 LDR X0, [X0 + 0x100]
	0x034A6674 BL 0x1C16CF4
	0x034A6678 ADRP X0, 0xC8B000
	0x034A667C LDR X0, [X0 + 0xF38]
	0x034A6680 BL 0x1C16CF4
	0x034A6684 ADRP X0, 0xC8B000
	0x034A6688 LDR X0, [X0 + 0xF48]
	0x034A668C BL 0x1C16CF4
	0x034A6690 ADRP X0, 0xC56000
	0x034A6694 LDR X0, [X0 + 0x720]
	0x034A6698 BL 0x1C16CF4
	0x034A669C ADRP X0, 0xC88000
	0x034A66A0 LDR X0, [X0 + 0x7D0]
	0x034A66A4 BL 0x1C16CF4
	0x034A66A8 ADRP X0, 0xC88000
	0x034A66AC LDR X0, [X0 + 0x7D8]
	0x034A66B0 BL 0x1C16CF4
	0x034A66B4 ADRP X0, 0xC8B000
	0x034A66B8 LDR X0, [X0 + 0xF80]
	0x034A66BC BL 0x1C16CF4
	0x034A66C0 ADRP X0, 0xC4D000
	0x034A66C4 LDR X0, [X0 + 0x988]
	0x034A66C8 BL 0x1C16CF4
	0x034A66CC ADRP X0, 0xC76000
	0x034A66D0 LDR X0, [X0 + 0x4C8]
	0x034A66D4 BL 0x1C16CF4
	0x034A66D8 MOVZ W8, 0x1
	0x034A66DC STRB W8, [X20 + 0xA02]
	0x034A66E0 STR X31, [X31 + 0x8]
	0x034A66E4 ADRP X25, 0xC50000
	0x034A66E8 LDR W8, [X19]
	0x034A66EC LDR X25, [X25 + 0x280]
	0x034A66F0 CBZ W8, 0x34A6940
	0x034A66F4 LDR X20, [X19 + 0x20]
	0x034A66F8 CBZ X20, 0x34A6A50
	0x034A66FC LDR X8, [X19 + 0x28]
	0x034A6700 CBZ X8, 0x34A6A98
	0x034A6704 LDR X8, [X19 + 0x30]
	0x034A6708 CBZ X8, 0x34A6AE0
	0x034A670C ADRP X23, 0xC4F000
	0x034A6710 LDR X23, [X23 + 0xA28]
	0x034A6714 ADRP X8, 0xC8B000
	0x034A6718 LDR X0, [X23]
	0x034A671C LDR X8, [X8 + 0xF78]
	0x034A6720 LDR X24, [X19 + 0x40]
	0x034A6724 LDR W9, [X0 + 0xE0]
	0x034A6728 LDR X21, [X8]
	0x034A672C CBNZ W9, 0x34A6734
	0x034A6730 BL 0x1C16DFC
	0x034A6734 MOV X0, X20
	0x034A6738 MOV X1, X31
	0x034A673C BL 0x3624D20
	0x034A6740 CBZ X21, 0x34A6B28
	0x034A6744 ADRP X8, 0xC89000
	0x034A6748 LDR X8, [X8 + 0x100]
	0x034A674C MOV X2, X0
	0x034A6750 LDR X1, [X8]
	0x034A6754 MOV X0, X21
	0x034A6758 MOV X3, X31
	0x034A675C BL 0x32293BC
	0x034A6760 MOV X20, X0
	0x034A6764 LDR X0, [X19 + 0x28]
	0x034A6768 MOV X1, X31
	0x034A676C BL 0x3624D20
	0x034A6770 CBZ X20, 0x34A6B2C
	0x034A6774 ADRP X8, 0xC8B000
	0x034A6778 LDR X8, [X8 + 0xF38]
	0x034A677C MOV X2, X0
	0x034A6780 LDR X1, [X8]
	0x034A6784 MOV X0, X20
	0x034A6788 MOV X3, X31
	0x034A678C BL 0x32293BC
	0x034A6790 MOV X20, X0
	0x034A6794 LDR X0, [X19 + 0x30]
	0x034A6798 MOV X1, X31
	0x034A679C BL 0x3624D20
	0x034A67A0 CBZ X20, 0x34A6B30
	0x034A67A4 ADRP X8, 0xC8B000
	0x034A67A8 LDR X8, [X8 + 0xF48]
	0x034A67AC MOV X2, X0
	0x034A67B0 LDR X1, [X8]
	0x034A67B4 MOV X0, X20
	0x034A67B8 MOV X3, X31
	0x034A67BC BL 0x32293BC
	0x034A67C0 ADRP X8, 0xC4D000
	0x034A67C4 LDR X8, [X8 + 0x988]
	0x034A67C8 LDR X22, [X19 + 0x38]
	0x034A67CC MOV X20, X0
	0x034A67D0 LDR X21, [X8]
	0x034A67D4 CBZ X22, 0x34A6820
	0x034A67D8 LDR X0, [X23]
	0x034A67DC LDR W8, [X0 + 0xE0]
	0x034A67E0 CBNZ W8, 0x34A67E8
	0x034A67E4 BL 0x1C16DFC
	0x034A67E8 MOV X0, X22
	0x034A67EC MOV X1, X31
	0x034A67F0 BL 0x3624D20
	0x034A67F4 ADRP X8, 0xC8B000
	0x034A67F8 LDR X8, [X8 + 0xF80]
	0x034A67FC ADRP X9, 0xC56000
	0x034A6800 LDR X9, [X9 + 0x720]
	0x034A6804 MOV X2, X0
	0x034A6808 LDR X1, [X8]
	0x034A680C LDR X3, [X9]
	0x034A6810 MOV X0, X21
	0x034A6814 MOV X4, X31
	0x034A6818 BL 0x32277C4
	0x034A681C MOV X21, X0
	0x034A6820 CBZ X24, 0x34A6B34
	0x034A6824 ADRP X8, 0xC56000
	0x034A6828 LDR X8, [X8 + 0x3A0]
	0x034A682C LDR X23, [X24 + 0x10]
	0x034A6830 LDR X0, [X8]
	0x034A6834 BL 0x1C16F10
	0x034A6838 MOV X22, X0
	0x034A683C MOV X1, X23
	0x034A6840 MOV X2, X31
	0x034A6844 BL 0x36281F8
	0x034A6848 CBZ X22, 0x34A6B38
	0x034A684C MOV X0, X22
	0x034A6850 MOV X1, X20
	0x034A6854 MOV X2, X31
	0x034A6858 BL 0x36288CC
	0x034A685C MOV X0, X22
	0x034A6860 MOV X1, X21
	0x034A6864 MOV X2, X31
	0x034A6868 BL 0x3628980
	0x034A686C MOV X0, X22
	0x034A6870 MOV X1, X31
	0x034A6874 BL 0x3628A38
	0x034A6878 ADRP X8, 0xC76000
	0x034A687C ADRP X9, 0xC4E000
	0x034A6880 LDR X8, [X8 + 0x4C8]
	0x034A6884 LDR X9, [X9 + 0x6D0]
	0x034A6888 MOV X20, X0
	0x034A688C LDR X21, [X8]
	0x034A6890 LDR X0, [X9]
	0x034A6894 BL 0x1C16F10
	0x034A6898 ADRP X8, 0xC4E000
	0x034A689C LDR X8, [X8 + 0x6C0]
	0x034A68A0 MOV X22, X0
	0x034A68A4 LDR X1, [X8]
	0x034A68A8 BL 0x2AA4804
	0x034A68AC ADRP X8, 0xC88000
	0x034A68B0 LDR X8, [X8 + 0x7D8]
	0x034A68B4 LDR X1, [X19 + 0x48]
	0x034A68B8 LDR X0, [X8]
	0x034A68BC MOV X2, X31
	0x034A68C0 BL 0x321B938
	0x034A68C4 CBZ X22, 0x34A6B3C
	0x034A68C8 ADRP X8, 0xC88000
	0x034A68CC LDR X8, [X8 + 0x7D0]
	0x034A68D0 ADRP X9, 0xC4E000
	0x034A68D4 LDR X9, [X9 + 0x810]
	0x034A68D8 MOV X2, X0
	0x034A68DC LDR X1, [X8]
	0x034A68E0 LDR X3, [X9]
	0x034A68E4 MOV X0, X22
	0x034A68E8 BL 0x2AA5098
	0x034A68EC LDR X23, [X24 + 0x20]
	0x034A68F0 CBZ X23, 0x34A6B40
	0x034A68F4 ADRP X10, 0xC88000
	0x034A68F8 LDR X8, [X23]
	0x034A68FC LDR X10, [X10 + 0x7B8]
	0x034A6900 LDR W24, [X24 + 0x18]
	0x034A6904 LDRH W9, [X8 + 0x12E]
	0x034A6908 LDR X1, [X10]
	0x034A690C CBZ X9, 0x34A6930
	0x034A6910 LDR X10, [X8 + 0xB0]
	0x034A6914 ADD X10, X10, 0x8
	0x034A6918 LDUR X11, [X10 - 0x8]
	0x034A691C CMP X11, X1
	0x034A6920 B.EQ 0x34A6958
	0x034A6924 SUBS X9, X9, 0x1
	0x034A6928 ADD X10, X10, 0x10
	0x034A692C B.NE 0x34A6918
	0x034A6930 MOVZ W2, 0x3
	0x034A6934 MOV X0, X23
	0x034A6938 BL 0x1C5C788
	0x034A693C B 0x34A6968
	0x034A6940 LDR X8, [X19 + 0x50]
	0x034A6944 MOVN W9, 0x0
	0x034A6948 STR X8, [X31 + 0x8]
	0x034A694C STR X31, [X19 + 0x50]
	0x034A6950 STR W9, [X19]
	0x034A6954 B 0x34A69C4
	0x034A6958 LDR W9, [X10]
	0x034A695C ADD W9, W9, 0x3
	0x034A6960 ADD X8, X8, W9, 0x4, SXTW
	0x034A6964 ADD X0, X8, 0x138
	0x034A6968 LDP X8, X9, [X0]
	0x034A696C MOV X0, X23
	0x034A6970 MOV X1, X21
	0x034A6974 MOV X2, X20
	0x034A6978 MOV X3, X22
	0x034A697C MOV X4, X31
	0x034A6980 MOV W5, W24
	0x034A6984 MOV X6, X31
	0x034A6988 MOV X7, X31
	0x034A698C STR X9, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF38000
	011 Move W8, [X20+2556]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {73}
	017 Move X0, 0xC8C000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move X0, 0xC51000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC4F000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4F000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4F000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC89000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC51000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC51000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC51000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC57000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC50000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8C000
	051 Move X0, [X0+3848]
	052 Call 0x1C17CF4
	053 Move X0, 0xC8C000
	054 Move X0, [X0+3856]
	055 Call 0x1C17CF4
	056 Move X0, 0xC89000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC8A000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC89000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC4E000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move X0, 0xC77000
	069 Move X0, [X0+1224]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+2556], W8
	073 Move [X31+8], X31
	074 Move X25, 0xC51000
	075 Move W8, [X19]
	076 Move X25, [X25+640]
	077 Compare W8, 0
	078 JumpIfEqual {199}
	079 Move X21, [X19+32]
	080 Compare X21, 0
	081 JumpIfEqual {280}
	082 Move X8, [X19+40]
	083 Compare X8, 0
	084 JumpIfEqual {298}
	085 Move X8, 0xC50000
	086 Move X8, [X8+2600]
	087 Move X0, [X8]
	088 Move X8, 0xC8C000
	089 Move X8, [X8+3848]
	090 Move X24, [X19+48]
	091 Move W9, [X0+224]
	092 Move X20, [X8]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Uri.EscapeDataString, X0
	099 Compare X20, 0
	100 JumpIfEqual {316}
	101 Move X8, 0xC8A000
	102 Move X8, [X8+744]
	103 Move X2, X0
	104 Move X1, [X8]
	105 Move X0, X20
	106 Move X3, X31
	107 Call String.Replace, X0, X1, X2
	108 Move X20, X0
	109 Move X0, [X19+40]
	110 Move X1, X31
	111 Call Uri.EscapeDataString, X0
	112 Compare X20, 0
	113 JumpIfEqual {317}
	114 Move X8, 0xC8C000
	115 Move X8, [X8+3856]
	116 Move X2, X0
	117 Move X1, [X8]
	118 Move X0, X20
	119 Move X3, X31
	120 Call String.Replace, X0, X1, X2
	121 Compare X24, 0
	122 JumpIfEqual {318}
	123 Move X8, 0xC4E000
	124 Move X9, 0xC57000
	125 Move X8, [X8+2440]
	126 Move X9, [X9+928]
	127 Move X22, X0
	128 Move X23, [X24+16]
	129 Move X21, [X8]
	130 Move X0, [X9]
	131 Call 0x1C17F10
	132 Move X20, X0
	133 Move X1, X23
	134 Move X2, X31
	135 Call UriBuilder..ctor, X0, X1
	136 Compare X20, 0
	137 JumpIfEqual {319}
	138 Move X0, X20
	139 Move X1, X22
	140 Move X2, X31
	141 Call UriBuilder.set_Path, X0, X1
	142 Move X0, X20
	143 Move X1, X21
	144 Move X2, X31
	145 Call UriBuilder.set_Query, X0, X1
	146 Move X0, X20
	147 Move X1, X31
	148 Call UriBuilder.get_Uri, X0
	149 Move X8, 0xC77000
	150 Move X9, 0xC4F000
	151 Move X8, [X8+1224]
	152 Move X9, [X9+1744]
	153 Move X20, X0
	154 Move X21, [X8]
	155 Move X0, [X9]
	156 Call 0x1C17F10
	157 Move X8, 0xC4F000
	158 Move X8, [X8+1728]
	159 Move X22, X0
	160 Move X1, [X8]
	161 Call Dictionary`2<Object, Object>..ctor, X0
	162 Move X8, 0xC89000
	163 Move X8, [X8+2008]
	164 Move X1, [X19+56]
	165 Move X0, [X8]
	166 Move X2, X31
	167 Call String.Concat, X0, X1
	168 Compare X22, 0
	169 JumpIfEqual {320}
	170 Move X8, 0xC89000
	171 Move X8, [X8+2000]
	172 Move X9, 0xC4F000
	173 Move X9, [X9+2064]
	174 Move X2, X0
	175 Move X1, [X8]
	176 Move X3, [X9]
	177 Move X0, X22
	178 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	179 Move X23, [X24+32]
	180 Compare X23, 0
	181 JumpIfEqual {321}
	182 Move X10, 0xC89000
	183 Move X8, [X23]
	184 Move X10, [X10+1976]
	185 Move W24, [X24+24]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X1, [X10]
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 3
	197 Move X0, X23
	198 Call 0x1C5D788
	199 Move X8, [X19+64]
	200 Move TEMP, 0
	201 Not TEMP
	202 Move W9, TEMP
	203 Move [X31+8], X8
	204 Move [X19+64], X31
	205 Move [X19], W9
	206 Move W9, [X10]
	207 Add W9, W9, 3
	208 Add X8, X8, W9
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X9, [X0+8]
	212 Move X0, X23
	213 Move X1, X21
	214 Move X2, X20
	215 Move X3, X22
	216 Move X4, X31
	217 Move W5, W24
	218 Move X6, X31
	219 Move X7, X31
	220 Move [X31], X9
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X0, 0
	223 JumpIfEqual {322}
	224 Move X8, 0xC51000
	225 Move X8, [X8+504]
	226 Move X1, [X8]
	227 Call Task`1<Object>.GetAwaiter, X0
	228 Move X8, 0xC51000
	229 Move X8, [X8+496]
	230 Move [X31+8], X0
	231 Move X1, [X8]
	232 Add X0, X31, 8
	233 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {255}
	238 Move X8, 0xC51000
	239 Move X8, [X8+480]
	240 Add X0, X31, 8
	241 Move X1, [X8]
	242 Call TaskAwaiter`1<Object>.GetResult, X0
	243 Move TEMP, 1
	244 Not TEMP
	245 Move W8, TEMP
	246 Move [X19+8], W8
	247 Move X0, [X25]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X0, X19
	253 Move X1, X31
	254 Call AsyncTaskMethodBuilder.SetResult, X0
	255 Move [X19], W31
	256 Move X8, [X31+8]
	257 Move [X19+64], X8
	258 Move X0, [X25]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X8, 0xC8C000
	264 Move X8, [X8+3840]
	265 Add X0, X19, 8
	266 Move X3, [X8]
	267 Add X1, X31, 8
	268 Move X2, X19
	269 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	270 Move X20, [X31+64]
	271 Move X19, [X31+72]
	272 Move X22, [X31+48]
	273 Move X21, [X31+56]
	274 Move X24, [X31+32]
	275 Move X23, [X31+40]
	276 Move X30, [X31+16]
	277 Move X25, [X31+24]
	278 Add X31, X31, 80
	279 Return 
	280 Move X0, 0xC56000
	281 Move X0, [X0+1400]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X20, X0
	285 Move X0, 0xC8A000
	286 Move X0, [X0+752]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call ArgumentException..ctor, X0, X1
	292 Move X0, 0xC8C000
	293 Move X0, [X0+3864]
	294 Call 0x1C17D08
	295 Move X1, X0
	296 Move X0, X20
	297 Call 0x1C17DEC
	298 Move X0, 0xC56000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xC89000
	304 Move X0, [X0+2056]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xC8C000
	311 Move X0, [X0+3864]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Move X20, X0
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X0, X20
	326 Call 0x3EB2AD0
	327 Move X20, X0
	328 Move X0, 0xC4E000
	329 Move X0, [X0+2000]
	330 Call 0x1C17D08
	331 Move X8, [X20]
	332 Move X1, [X8]
	333 Call 0x1C18270
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {355}
	338 Move X20, [X20]
	339 Call 0x3EB2AE0
	340 Move TEMP, 1
	341 Not TEMP
	342 Move W8, TEMP
	343 Move [X19+8], W8
	344 Move X0, 0xC51000
	345 Move X0, [X0+640]
	346 Call 0x1C17D08
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X0, X19
	352 Move X1, X20
	353 Move X2, X31
	354 Call AsyncTaskMethodBuilder.SetException, X0, X1
	355 Move W0, 8
	356 Call 0x3EB2AF0
	357 Move X8, [X20]
	358 Move [X0], X8
	359 Move X1, 0xA0F000
	360 Add X1, X1, 3672
	361 Move X2, X31
	362 Call 0x3EB2B00
	363 Move X20, X0
	364 Call 0x3EB2AE0
	365 Move X0, X20
	366 Call 0x1D2D690
	367 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A6990 BLR X8
	0x034A6994 CBZ X0, 0x34A6B44
	0x034A6998 ADRP X8, 0xC50000
	0x034A699C LDR X8, [X8 + 0x1F8]
	0x034A69A0 LDR X1, [X8]
	0x034A69A4 BL 0x269F5D0
	0x034A69A8 ADRP X8, 0xC50000
	0x034A69AC LDR X8, [X8 + 0x1F0]
	0x034A69B0 STR X0, [X31 + 0x8]
	0x034A69B4 LDR X1, [X8]
	0x034A69B8 ADD X0, X31, 0x8
	0x034A69BC BL 0x2677430
	0x034A69C0 TBZ X0, 0x0, 0x34A6A00
	0x034A69C4 ADRP X8, 0xC50000
	0x034A69C8 LDR X8, [X8 + 0x1E0]
	0x034A69CC ADD X0, X31, 0x8
	0x034A69D0 LDR X1, [X8]
	0x034A69D4 BL 0x2677474
	0x034A69D8 MOVN W8, 0x1
	0x034A69DC STR W8, [X19], #0x8
	0x034A69E0 LDR X0, [X25]
	0x034A69E4 LDR W8, [X0 + 0xE0]
	0x034A69E8 CBNZ W8, 0x34A69F0
	0x034A69EC BL 0x1C16DFC
	0x034A69F0 MOV X0, X19
	0x034A69F4 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF38000
	007 Move X22, 0xC51000
	008 Move W8, [X21+2557]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC51000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2557], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

