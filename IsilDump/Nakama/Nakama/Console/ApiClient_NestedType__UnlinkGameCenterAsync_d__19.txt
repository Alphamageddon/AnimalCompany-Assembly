Type: Nakama.Console.ApiClient/<UnlinkGameCenterAsync>d__19

Method: System.Void MoveNext()

Disassembly:
	0x034AE12C LDR X30, [X31], #0x30
	0x034AE130 B 0x32C477C
	0x034AE134 SUB X31, X31, 0x60
	0x034AE138 STR X30, [X31 + 0x10]
	0x034AE13C STP X26, X25, [X31 + 0x20]
	0x034AE140 STP X24, X23, [X31 + 0x30]
	0x034AE144 STP X22, X21, [X31 + 0x40]
	0x034AE148 STP X20, X19, [X31 + 0x50]
	0x034AE14C ADRP X20, 0xF2F000
	0x034AE150 LDRB W8, [X20 + 0xA2E]
	0x034AE154 MOV X19, X0
	0x034AE158 TBNZ X8, 0x0, 0x34AE230
	0x034AE15C ADRP X0, 0xC84000
	0x034AE160 LDR X0, [X0 + 0x2A8]
	0x034AE164 BL 0x1C16CF4
	0x034AE168 ADRP X0, 0xC48000
	0x034AE16C LDR X0, [X0 + 0x280]
	0x034AE170 BL 0x1C16CF4
	0x034AE174 ADRP X0, 0xC46000
	0x034AE178 LDR X0, [X0 + 0x810]
	0x034AE17C BL 0x1C16CF4
	0x034AE180 ADRP X0, 0xC46000
	0x034AE184 LDR X0, [X0 + 0x6C0]
	0x034AE188 BL 0x1C16CF4
	0x034AE18C ADRP X0, 0xC46000
	0x034AE190 LDR X0, [X0 + 0x6D0]
	0x034AE194 BL 0x1C16CF4
	0x034AE198 ADRP X0, 0xC80000
	0x034AE19C LDR X0, [X0 + 0x7B8]
	0x034AE1A0 BL 0x1C16CF4
	0x034AE1A4 ADRP X0, 0xC48000
	0x034AE1A8 LDR X0, [X0 + 0x1E0]
	0x034AE1AC BL 0x1C16CF4
	0x034AE1B0 ADRP X0, 0xC48000
	0x034AE1B4 LDR X0, [X0 + 0x1F0]
	0x034AE1B8 BL 0x1C16CF4
	0x034AE1BC ADRP X0, 0xC48000
	0x034AE1C0 LDR X0, [X0 + 0x1F8]
	0x034AE1C4 BL 0x1C16CF4
	0x034AE1C8 ADRP X0, 0xC4E000
	0x034AE1CC LDR X0, [X0 + 0x3A0]
	0x034AE1D0 BL 0x1C16CF4
	0x034AE1D4 ADRP X0, 0xC47000
	0x034AE1D8 LDR X0, [X0 + 0xA28]
	0x034AE1DC BL 0x1C16CF4
	0x034AE1E0 ADRP X0, 0xC6E000
	0x034AE1E4 LDR X0, [X0 + 0x4D8]
	0x034AE1E8 BL 0x1C16CF4
	0x034AE1EC ADRP X0, 0xC80000
	0x034AE1F0 LDR X0, [X0 + 0x7D0]
	0x034AE1F4 BL 0x1C16CF4
	0x034AE1F8 ADRP X0, 0xC81000
	0x034AE1FC LDR X0, [X0 + 0x2E8]
	0x034AE200 BL 0x1C16CF4
	0x034AE204 ADRP X0, 0xC80000
	0x034AE208 LDR X0, [X0 + 0x7D8]
	0x034AE20C BL 0x1C16CF4
	0x034AE210 ADRP X0, 0xC45000
	0x034AE214 LDR X0, [X0 + 0x988]
	0x034AE218 BL 0x1C16CF4
	0x034AE21C ADRP X0, 0xC83000
	0x034AE220 LDR X0, [X0 + 0xEC8]
	0x034AE224 BL 0x1C16CF4
	0x034AE228 MOVZ W8, 0x1
	0x034AE22C STRB W8, [X20 + 0xA2E]
	0x034AE230 STR X31, [X31 + 0x18]
	0x034AE234 ADRP X26, 0xC48000
	0x034AE238 LDR W8, [X19]
	0x034AE23C LDR X26, [X26 + 0x280]
	0x034AE240 CBZ W8, 0x34AE40C
	0x034AE244 LDR X21, [X19 + 0x20]
	0x034AE248 CBZ X21, 0x34AE520
	0x034AE24C LDR X8, [X19 + 0x28]
	0x034AE250 CBZ X8, 0x34AE568
	0x034AE254 ADRP X8, 0xC47000
	0x034AE258 LDR X8, [X8 + 0xA28]
	0x034AE25C LDR X0, [X8]
	0x034AE260 ADRP X8, 0xC83000
	0x034AE264 LDR X8, [X8 + 0xEC8]
	0x034AE268 LDR X25, [X19 + 0x30]
	0x034AE26C LDR W9, [X0 + 0xE0]
	0x034AE270 LDR X20, [X8]
	0x034AE274 CBNZ W9, 0x34AE27C
	0x034AE278 BL 0x1C16DFC
	0x034AE27C MOV X0, X21
	0x034AE280 MOV X1, X31
	0x034AE284 BL 0x3624D20
	0x034AE288 CBZ X20, 0x34AE5B0
	0x034AE28C ADRP X8, 0xC81000
	0x034AE290 LDR X8, [X8 + 0x2E8]
	0x034AE294 MOV X2, X0
	0x034AE298 LDR X1, [X8]
	0x034AE29C MOV X0, X20
	0x034AE2A0 MOV X3, X31
	0x034AE2A4 BL 0x32293BC
	0x034AE2A8 CBZ X25, 0x34AE5B4
	0x034AE2AC ADRP X8, 0xC45000
	0x034AE2B0 ADRP X9, 0xC4E000
	0x034AE2B4 LDR X8, [X8 + 0x988]
	0x034AE2B8 LDR X9, [X9 + 0x3A0]
	0x034AE2BC MOV X22, X0
	0x034AE2C0 LDR X23, [X25 + 0x10]
	0x034AE2C4 LDR X21, [X8]
	0x034AE2C8 LDR X0, [X9]
	0x034AE2CC BL 0x1C16F10
	0x034AE2D0 MOV X20, X0
	0x034AE2D4 MOV X1, X23
	0x034AE2D8 MOV X2, X31
	0x034AE2DC BL 0x36281F8
	0x034AE2E0 CBZ X20, 0x34AE5B8
	0x034AE2E4 MOV X0, X20
	0x034AE2E8 MOV X1, X22
	0x034AE2EC MOV X2, X31
	0x034AE2F0 BL 0x36288CC
	0x034AE2F4 MOV X0, X20
	0x034AE2F8 MOV X1, X21
	0x034AE2FC MOV X2, X31
	0x034AE300 BL 0x3628980
	0x034AE304 MOV X0, X20
	0x034AE308 MOV X1, X31
	0x034AE30C BL 0x3628A38
	0x034AE310 ADRP X8, 0xC6E000
	0x034AE314 ADRP X9, 0xC46000
	0x034AE318 LDR X8, [X8 + 0x4D8]
	0x034AE31C LDR X9, [X9 + 0x6D0]
	0x034AE320 MOV X20, X0
	0x034AE324 LDR X21, [X8]
	0x034AE328 LDR X0, [X9]
	0x034AE32C BL 0x1C16F10
	0x034AE330 ADRP X8, 0xC46000
	0x034AE334 LDR X8, [X8 + 0x6C0]
	0x034AE338 MOV X22, X0
	0x034AE33C LDR X1, [X8]
	0x034AE340 BL 0x2AA4804
	0x034AE344 ADRP X8, 0xC80000
	0x034AE348 LDR X8, [X8 + 0x7D8]
	0x034AE34C LDR X1, [X19 + 0x38]
	0x034AE350 LDR X0, [X8]
	0x034AE354 MOV X2, X31
	0x034AE358 BL 0x321B938
	0x034AE35C CBZ X22, 0x34AE5BC
	0x034AE360 ADRP X8, 0xC80000
	0x034AE364 LDR X8, [X8 + 0x7D0]
	0x034AE368 ADRP X9, 0xC46000
	0x034AE36C LDR X9, [X9 + 0x810]
	0x034AE370 MOV X2, X0
	0x034AE374 LDR X1, [X8]
	0x034AE378 LDR X3, [X9]
	0x034AE37C MOV X0, X22
	0x034AE380 BL 0x2AA5098
	0x034AE384 LDR X0, [X19 + 0x28]
	0x034AE388 MOV X1, X31
	0x034AE38C BL 0x3483BE4
	0x034AE390 MOV X23, X0
	0x034AE394 MOV X0, X31
	0x034AE398 BL 0x3241948
	0x034AE39C CBZ X0, 0x34AE5C0
	0x034AE3A0 LDR X8, [X0]
	0x034AE3A4 LDR X9, [X8 + 0x268]
	0x034AE3A8 LDR X2, [X8 + 0x270]
	0x034AE3AC MOV X1, X23
	0x034AE3B0 BLR X9
	0x034AE3B4 LDR X24, [X25 + 0x20]
	0x034AE3B8 CBZ X24, 0x34AE5C4
	0x034AE3BC ADRP X10, 0xC80000
	0x034AE3C0 LDR X8, [X24]
	0x034AE3C4 LDR X10, [X10 + 0x7B8]
	0x034AE3C8 LDR W25, [X25 + 0x18]
	0x034AE3CC MOV X23, X0
	0x034AE3D0 LDRH W9, [X8 + 0x12E]
	0x034AE3D4 LDR X1, [X10]
	0x034AE3D8 CBZ X9, 0x34AE3FC
	0x034AE3DC LDR X10, [X8 + 0xB0]
	0x034AE3E0 ADD X10, X10, 0x8
	0x034AE3E4 LDUR X11, [X10 - 0x8]
	0x034AE3E8 CMP X11, X1
	0x034AE3EC B.EQ 0x34AE424
	0x034AE3F0 SUBS X9, X9, 0x1
	0x034AE3F4 ADD X10, X10, 0x10
	0x034AE3F8 B.NE 0x34AE3E4
	0x034AE3FC MOVZ W2, 0x3
	0x034AE400 MOV X0, X24
	0x034AE404 BL 0x1C5C788
	0x034AE408 B 0x34AE434
	0x034AE40C LDR X8, [X19 + 0x40]
	0x034AE410 MOVN W9, 0x0
	0x034AE414 STR X8, [X31 + 0x18]
	0x034AE418 STR X31, [X19 + 0x40]
	0x034AE41C STR W9, [X19]
	0x034AE420 B 0x34AE490
	0x034AE424 LDR W9, [X10]
	0x034AE428 ADD W9, W9, 0x3
	0x034AE42C ADD X8, X8, W9, 0x4, SXTW
	0x034AE430 ADD X0, X8, 0x138
	0x034AE434 LDP X8, X9, [X0]
	0x034AE438 MOV X0, X24
	0x034AE43C MOV X1, X21
	0x034AE440 MOV X2, X20
	0x034AE444 MOV X3, X22
	0x034AE448 MOV X4, X23
	0x034AE44C MOV W5, W25
	0x034AE450 MOV X6, X31
	0x034AE454 MOV X7, X31
	0x034AE458 STR X9, [X31]
	0x034AE45C BLR X8
	0x034AE460 CBZ X0, 0x34AE5C8
	0x034AE464 ADRP X8, 0xC48000
	0x034AE468 LDR X8, [X8 + 0x1F8]
	0x034AE46C LDR X1, [X8]
	0x034AE470 BL 0x269F5D0
	0x034AE474 ADRP X8, 0xC48000
	0x034AE478 LDR X8, [X8 + 0x1F0]
	0x034AE47C STR X0, [X31 + 0x18]
	0x034AE480 LDR X1, [X8]
	0x034AE484 ADD X0, X31, 0x18
	0x034AE488 BL 0x2677430
	0x034AE48C TBZ X0, 0x0, 0x34AE4CC
	0x034AE490 ADRP X8, 0xC48000
	0x034AE494 LDR X8, [X8 + 0x1E0]
	0x034AE498 ADD X0, X31, 0x18
	0x034AE49C LDR X1, [X8]
	0x034AE4A0 BL 0x2677474
	0x034AE4A4 MOVN W8, 0x1
	0x034AE4A8 STR W8, [X19], #0x8
	0x034AE4AC LDR X0, [X26]
	0x034AE4B0 LDR W8, [X0 + 0xE0]
	0x034AE4B4 CBNZ W8, 0x34AE4BC
	0x034AE4B8 BL 0x1C16DFC
	0x034AE4BC MOV X0, X19
	0x034AE4C0 MOV X1, X31
	0x034AE4C4 BL 0x32C4864
	0x034AE4C8 B 0x34AE504
	0x034AE4CC STR W31, [X19]
	0x034AE4D0 LDR X8, [X31 + 0x18]
	0x034AE4D4 STR X8, [X19 + 0x40]
	0x034AE4D8 LDR X0, [X26]
	0x034AE4DC LDR W8, [X0 + 0xE0]
	0x034AE4E0 CBNZ W8, 0x34AE4E8
	0x034AE4E4 BL 0x1C16DFC
	0x034AE4E8 ADRP X8, 0xC84000
	0x034AE4EC LDR X8, [X8 + 0x2A8]
	0x034AE4F0 ADD X0, X19, 0x8
	0x034AE4F4 LDR X3, [X8]
	0x034AE4F8 ADD X1, X31, 0x18
	0x034AE4FC MOV X2, X19
	0x034AE500 BL 0x2187AB0
	0x034AE504 LDP X20, X19, [X31 + 0x50]
	0x034AE508 LDP X22, X21, [X31 + 0x40]
	0x034AE50C LDP X24, X23, [X31 + 0x30]
	0x034AE510 LDP X26, X25, [X31 + 0x20]
	0x034AE514 LDR X30, [X31 + 0x10]
	0x034AE518 ADD X31, X31, 0x60
	0x034AE51C RET
	0x034AE520 ADRP X0, 0xC4D000
	0x034AE524 LDR X0, [X0 + 0x578]
	0x034AE528 BL 0x1C16D08
	0x034AE52C BL 0x1C16F10
	0x034AE530 MOV X20, X0
	0x034AE534 ADRP X0, 0xC81000
	0x034AE538 LDR X0, [X0 + 0x2F0]
	0x034AE53C BL 0x1C16D08
	0x034AE540 MOV X1, X0
	0x034AE544 MOV X0, X20
	0x034AE548 MOV X2, X31
	0x034AE54C BL 0x3314A68
	0x034AE550 ADRP X0, 0xC84000
	0x034AE554 LDR X0, [X0 + 0x2B0]
	0x034AE558 BL 0x1C16D08
	0x034AE55C MOV X1, X0
	0x034AE560 MOV X0, X20
	0x034AE564 BL 0x1C16DEC
	0x034AE568 ADRP X0, 0xC4D000
	0x034AE56C LDR X0, [X0 + 0x578]
	0x034AE570 BL 0x1C16D08
	0x034AE574 BL 0x1C16F10
	0x034AE578 MOV X20, X0
	0x034AE57C ADRP X0, 0xC80000
	0x034AE580 LDR X0, [X0 + 0xBC8]
	0x034AE584 BL 0x1C16D08
	0x034AE588 MOV X1, X0
	0x034AE58C MOV X0, X20
	0x034AE590 MOV X2, X31
	0x034AE594 BL 0x3314A68
	0x034AE598 ADRP X0, 0xC84000
	0x034AE59C LDR X0, [X0 + 0x2B0]
	0x034AE5A0 BL 0x1C16D08
	0x034AE5A4 MOV X1, X0
	0x034AE5A8 MOV X0, X20
	0x034AE5AC BL 0x1C16DEC
	0x034AE5B0 BL 0x1C16F20
	0x034AE5B4 BL 0x1C16F20
	0x034AE5B8 BL 0x1C16F20
	0x034AE5BC BL 0x1C16F20
	0x034AE5C0 BL 0x1C16F20
	0x034AE5C4 BL 0x1C16F20
	0x034AE5C8 BL 0x1C16F20
	0x034AE5CC B 0x34AE624
	0x034AE5D0 B 0x34AE624
	0x034AE5D4 B 0x34AE624
	0x034AE5D8 B 0x34AE624
	0x034AE5DC B 0x34AE624
	0x034AE5E0 B 0x34AE624
	0x034AE5E4 B 0x34AE624
	0x034AE5E8 B 0x34AE624
	0x034AE5EC B 0x34AE624
	0x034AE5F0 B 0x34AE624
	0x034AE5F4 B 0x34AE624
	0x034AE5F8 B 0x34AE624
	0x034AE5FC B 0x34AE624
	0x034AE600 B 0x34AE624
	0x034AE604 B 0x34AE624
	0x034AE608 B 0x34AE624
	0x034AE60C B 0x34AE624
	0x034AE610 B 0x34AE624
	0x034AE614 B 0x34AE624
	0x034AE618 B 0x34AE624

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF30000
	011 Move W8, [X20+2600]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC85000
	018 Move X0, [X0+608]
	019 Call 0x1C17CF4
	020 Move X0, 0xC49000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC47000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC47000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC47000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC81000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC49000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC49000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC49000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4F000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC48000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC6F000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0xC85000
	054 Move X0, [X0+616]
	055 Call 0x1C17CF4
	056 Move X0, 0xC81000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC82000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC81000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC46000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2600], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC49000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC48000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC85000
	083 Move X8, [X8+616]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC82000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC46000
	105 Move X9, 0xC4F000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC6F000
	131 Move X9, 0xC47000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC47000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC81000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC81000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC47000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC81000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC49000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC49000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC49000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC85000
	245 Move X8, [X8+608]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC4E000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC82000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC85000
	274 Move X0, [X0+624]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC46000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC49000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA07000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AE61C B 0x34AE624
	0x034AE620 B 0x34AE624
	0x034AE624 MOV X20, X0
	0x034AE628 CMP W1, 0x1
	0x034AE62C B.NE 0x34AE6BC
	0x034AE630 MOV X0, X20
	0x034AE634 BL 0x3EB1AD0
	0x034AE638 MOV X20, X0
	0x034AE63C ADRP X0, 0xC45000
	0x034AE640 LDR X0, [X0 + 0x7D0]
	0x034AE644 BL 0x1C16D08
	0x034AE648 LDR X8, [X20]
	0x034AE64C LDR X1, [X8]
	0x034AE650 BL 0x1C17270
	0x034AE654 TBZ X0, 0x0, 0x34AE694
	0x034AE658 LDR X20, [X20]
	0x034AE65C BL 0x3EB1AE0
	0x034AE660 MOVN W8, 0x1
	0x034AE664 STR W8, [X19], #0x8
	0x034AE668 ADRP X0, 0xC48000
	0x034AE66C LDR X0, [X0 + 0x280]
	0x034AE670 BL 0x1C16D08
	0x034AE674 LDR W8, [X0 + 0xE0]
	0x034AE678 CBNZ W8, 0x34AE680
	0x034AE67C BL 0x1C16DFC
	0x034AE680 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF30000
	007 Move X22, 0xC49000
	008 Move W8, [X21+2601]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC49000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2601], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

