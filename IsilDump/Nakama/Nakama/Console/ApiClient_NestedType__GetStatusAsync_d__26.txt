Type: Nakama.Console.ApiClient/<GetStatusAsync>d__26

Method: System.Void MoveNext()

Disassembly:
	0x034AA304 BL 0x1C16DEC
	0x034AA308 BL 0x1C16F20
	0x034AA30C BL 0x1C16F20
	0x034AA310 BL 0x1C16F20
	0x034AA314 BL 0x1C16F20
	0x034AA318 BL 0x1C16F20
	0x034AA31C BL 0x1C16F20
	0x034AA320 B 0x34AA368
	0x034AA324 B 0x34AA368
	0x034AA328 B 0x34AA368
	0x034AA32C B 0x34AA368
	0x034AA330 B 0x34AA368
	0x034AA334 B 0x34AA368
	0x034AA338 B 0x34AA368
	0x034AA33C B 0x34AA368
	0x034AA340 B 0x34AA368
	0x034AA344 B 0x34AA368
	0x034AA348 B 0x34AA368
	0x034AA34C B 0x34AA368
	0x034AA350 B 0x34AA368
	0x034AA354 B 0x34AA368
	0x034AA358 B 0x34AA368
	0x034AA35C B 0x34AA368
	0x034AA360 B 0x34AA368
	0x034AA364 B 0x34AA368
	0x034AA368 MOV X20, X0
	0x034AA36C CMP W1, 0x1
	0x034AA370 B.NE 0x34AA40C
	0x034AA374 MOV X0, X20
	0x034AA378 BL 0x3EB1AD0
	0x034AA37C MOV X20, X0
	0x034AA380 ADRP X0, 0xC49000
	0x034AA384 LDR X0, [X0 + 0x7D0]
	0x034AA388 BL 0x1C16D08
	0x034AA38C LDR X8, [X20]
	0x034AA390 LDR X1, [X8]
	0x034AA394 BL 0x1C17270
	0x034AA398 TBZ X0, 0x0, 0x34AA3E4
	0x034AA39C LDR X20, [X20]
	0x034AA3A0 BL 0x3EB1AE0
	0x034AA3A4 MOVN W8, 0x1
	0x034AA3A8 STR W8, [X19], #0x8
	0x034AA3AC ADRP X0, 0xC87000
	0x034AA3B0 LDR X0, [X0 + 0xD40]
	0x034AA3B4 BL 0x1C16D08
	0x034AA3B8 LDR W8, [X0 + 0xE0]
	0x034AA3BC CBNZ W8, 0x34AA3C4
	0x034AA3C0 BL 0x1C16DFC
	0x034AA3C4 ADRP X0, 0xC88000
	0x034AA3C8 LDR X0, [X0 + 0x158]
	0x034AA3CC BL 0x1C16D08
	0x034AA3D0 MOV X2, X0
	0x034AA3D4 MOV X0, X19
	0x034AA3D8 MOV X1, X20
	0x034AA3DC BL 0x26324C8
	0x034AA3E0 B 0x34AA2A8
	0x034AA3E4 MOVZ W0, 0x8
	0x034AA3E8 BL 0x3EB1AF0
	0x034AA3EC LDR X8, [X20]
	0x034AA3F0 STR X8, [X0]
	0x034AA3F4 ADRP X1, 0xA0A000
	0x034AA3F8 ADD X1, X1, 0xE58
	0x034AA3FC MOV X2, X31
	0x034AA400 BL 0x3EB1B00
	0x034AA404 MOV X20, X0
	0x034AA408 BL 0x3EB1AE0
	0x034AA40C MOV X0, X20
	0x034AA410 BL 0x1D2C690
	0x034AA414 BL 0x1990590
	0x034AA418 STR X30, [X31 - 0x30]!
	0x034AA41C STP X22, X21, [X31 + 0x10]
	0x034AA420 STP X20, X19, [X31 + 0x20]
	0x034AA424 ADRP X22, 0xF33000
	0x034AA428 ADRP X21, 0xC87000
	0x034AA42C LDRB W8, [X22 + 0xA17]
	0x034AA430 LDR X21, [X21 + 0xD40]
	0x034AA434 MOV X19, X1
	0x034AA438 MOV X20, X0
	0x034AA43C TBNZ X8, 0x0, 0x34AA460
	0x034AA440 ADRP X0, 0xC88000
	0x034AA444 LDR X0, [X0 + 0x160]
	0x034AA448 BL 0x1C16CF4
	0x034AA44C ADRP X0, 0xC87000
	0x034AA450 LDR X0, [X0 + 0xD40]
	0x034AA454 BL 0x1C16CF4
	0x034AA458 MOVZ W8, 0x1
	0x034AA45C STRB W8, [X22 + 0xA17]
	0x034AA460 LDR X0, [X21]
	0x034AA464 ADRP X21, 0xC88000
	0x034AA468 LDR W8, [X0 + 0xE0]
	0x034AA46C LDR X21, [X21 + 0x160]
	0x034AA470 CBNZ W8, 0x34AA478
	0x034AA474 BL 0x1C16DFC
	0x034AA478 LDR X2, [X21]
	0x034AA47C ADD X0, X20, 0x8
	0x034AA480 MOV X1, X19
	0x034AA484 LDP X20, X19, [X31 + 0x20]
	0x034AA488 LDP X22, X21, [X31 + 0x10]
	0x034AA48C LDR X30, [X31], #0x30
	0x034AA490 B 0x2632228
	0x034AA494 SUB X31, X31, 0x50
	0x034AA498 STP X30, X25, [X31 + 0x10]
	0x034AA49C STP X24, X23, [X31 + 0x20]
	0x034AA4A0 STP X22, X21, [X31 + 0x30]
	0x034AA4A4 STP X20, X19, [X31 + 0x40]
	0x034AA4A8 ADRP X20, 0xF33000
	0x034AA4AC LDRB W8, [X20 + 0xA18]
	0x034AA4B0 MOV X19, X0
	0x034AA4B4 TBNZ X8, 0x0, 0x34AA5B0
	0x034AA4B8 ADRP X0, 0xC88000
	0x034AA4BC LDR X0, [X0 + 0x168]
	0x034AA4C0 BL 0x1C16CF4
	0x034AA4C4 ADRP X0, 0xC88000
	0x034AA4C8 LDR X0, [X0 + 0x170]
	0x034AA4CC BL 0x1C16CF4
	0x034AA4D0 ADRP X0, 0xC87000
	0x034AA4D4 LDR X0, [X0 + 0xDD0]
	0x034AA4D8 BL 0x1C16CF4
	0x034AA4DC ADRP X0, 0xC4A000
	0x034AA4E0 LDR X0, [X0 + 0x810]
	0x034AA4E4 BL 0x1C16CF4
	0x034AA4E8 ADRP X0, 0xC4A000
	0x034AA4EC LDR X0, [X0 + 0x6C0]
	0x034AA4F0 BL 0x1C16CF4
	0x034AA4F4 ADRP X0, 0xC4A000
	0x034AA4F8 LDR X0, [X0 + 0x6D0]
	0x034AA4FC BL 0x1C16CF4
	0x034AA500 ADRP X0, 0xC84000
	0x034AA504 LDR X0, [X0 + 0x7B8]
	0x034AA508 BL 0x1C16CF4
	0x034AA50C ADRP X0, 0xC88000
	0x034AA510 LDR X0, [X0 + 0x178]
	0x034AA514 BL 0x1C16CF4
	0x034AA518 ADRP X0, 0xC4C000
	0x034AA51C LDR X0, [X0 + 0x1E0]
	0x034AA520 BL 0x1C16CF4
	0x034AA524 ADRP X0, 0xC4C000
	0x034AA528 LDR X0, [X0 + 0x1F0]
	0x034AA52C BL 0x1C16CF4
	0x034AA530 ADRP X0, 0xC4C000
	0x034AA534 LDR X0, [X0 + 0x1F8]
	0x034AA538 BL 0x1C16CF4
	0x034AA53C ADRP X0, 0xC52000
	0x034AA540 LDR X0, [X0 + 0x3A0]
	0x034AA544 BL 0x1C16CF4
	0x034AA548 ADRP X0, 0xC4B000
	0x034AA54C LDR X0, [X0 + 0xA28]
	0x034AA550 BL 0x1C16CF4
	0x034AA554 ADRP X0, 0xC72000
	0x034AA558 LDR X0, [X0 + 0x4D0]
	0x034AA55C BL 0x1C16CF4
	0x034AA560 ADRP X0, 0xC85000
	0x034AA564 LDR X0, [X0 + 0x148]
	0x034AA568 BL 0x1C16CF4
	0x034AA56C ADRP X0, 0xC52000
	0x034AA570 LDR X0, [X0 + 0x720]
	0x034AA574 BL 0x1C16CF4
	0x034AA578 ADRP X0, 0xC84000
	0x034AA57C LDR X0, [X0 + 0x7D0]
	0x034AA580 BL 0x1C16CF4
	0x034AA584 ADRP X0, 0xC84000
	0x034AA588 LDR X0, [X0 + 0x7D8]
	0x034AA58C BL 0x1C16CF4
	0x034AA590 ADRP X0, 0xC87000
	0x034AA594 LDR X0, [X0 + 0xF28]
	0x034AA598 BL 0x1C16CF4
	0x034AA59C ADRP X0, 0xC49000
	0x034AA5A0 LDR X0, [X0 + 0x988]
	0x034AA5A4 BL 0x1C16CF4
	0x034AA5A8 MOVZ W8, 0x1
	0x034AA5AC STRB W8, [X20 + 0xA18]
	0x034AA5B0 STR X31, [X31 + 0x8]
	0x034AA5B4 ADRP X25, 0xC87000
	0x034AA5B8 LDR W8, [X19]
	0x034AA5BC LDR X25, [X25 + 0xDD0]
	0x034AA5C0 CBZ W8, 0x34AA754
	0x034AA5C4 ADRP X8, 0xC87000
	0x034AA5C8 ADRP X9, 0xC49000
	0x034AA5CC LDR X8, [X8 + 0xF28]
	0x034AA5D0 LDR X9, [X9 + 0x988]
	0x034AA5D4 LDP X22, X24, [X19 + 0x20]
	0x034AA5D8 LDR X21, [X8]
	0x034AA5DC LDR X20, [X9]
	0x034AA5E0 CBZ X22, 0x34AA634
	0x034AA5E4 ADRP X8, 0xC4B000
	0x034AA5E8 LDR X8, [X8 + 0xA28]
	0x034AA5EC LDR X0, [X8]
	0x034AA5F0 LDR W8, [X0 + 0xE0]
	0x034AA5F4 CBNZ W8, 0x34AA5FC
	0x034AA5F8 BL 0x1C16DFC
	0x034AA5FC MOV X0, X22
	0x034AA600 MOV X1, X31
	0x034AA604 BL 0x3624D20
	0x034AA608 ADRP X8, 0xC85000
	0x034AA60C LDR X8, [X8 + 0x148]
	0x034AA610 ADRP X9, 0xC52000
	0x034AA614 LDR X9, [X9 + 0x720]
	0x034AA618 MOV X2, X0
	0x034AA61C LDR X1, [X8]
	0x034AA620 LDR X3, [X9]
	0x034AA624 MOV X0, X20
	0x034AA628 MOV X4, X31
	0x034AA62C BL 0x32277C4
	0x034AA630 MOV X20, X0
	0x034AA634 CBZ X24, 0x34AA884
	0x034AA638 ADRP X8, 0xC52000
	0x034AA63C LDR X8, [X8 + 0x3A0]
	0x034AA640 LDR X23, [X24 + 0x10]
	0x034AA644 LDR X0, [X8]
	0x034AA648 BL 0x1C16F10
	0x034AA64C MOV X22, X0
	0x034AA650 MOV X1, X23
	0x034AA654 MOV X2, X31
	0x034AA658 BL 0x36281F8
	0x034AA65C CBZ X22, 0x34AA888
	0x034AA660 MOV X0, X22
	0x034AA664 MOV X1, X21
	0x034AA668 MOV X2, X31
	0x034AA66C BL 0x36288CC
	0x034AA670 MOV X0, X22
	0x034AA674 MOV X1, X20
	0x034AA678 MOV X2, X31
	0x034AA67C BL 0x3628980
	0x034AA680 MOV X0, X22
	0x034AA684 MOV X1, X31
	0x034AA688 BL 0x3628A38
	0x034AA68C ADRP X8, 0xC72000
	0x034AA690 ADRP X9, 0xC4A000
	0x034AA694 LDR X8, [X8 + 0x4D0]
	0x034AA698 LDR X9, [X9 + 0x6D0]
	0x034AA69C MOV X20, X0
	0x034AA6A0 LDR X21, [X8]
	0x034AA6A4 LDR X0, [X9]
	0x034AA6A8 BL 0x1C16F10
	0x034AA6AC ADRP X8, 0xC4A000
	0x034AA6B0 LDR X8, [X8 + 0x6C0]
	0x034AA6B4 MOV X22, X0
	0x034AA6B8 LDR X1, [X8]
	0x034AA6BC BL 0x2AA4804
	0x034AA6C0 ADRP X8, 0xC84000
	0x034AA6C4 LDR X8, [X8 + 0x7D8]
	0x034AA6C8 LDR X1, [X19 + 0x30]
	0x034AA6CC LDR X0, [X8]
	0x034AA6D0 MOV X2, X31
	0x034AA6D4 BL 0x321B938
	0x034AA6D8 CBZ X22, 0x34AA88C
	0x034AA6DC ADRP X8, 0xC84000
	0x034AA6E0 LDR X8, [X8 + 0x7D0]
	0x034AA6E4 ADRP X9, 0xC4A000
	0x034AA6E8 LDR X9, [X9 + 0x810]
	0x034AA6EC MOV X2, X0
	0x034AA6F0 LDR X1, [X8]
	0x034AA6F4 LDR X3, [X9]
	0x034AA6F8 MOV X0, X22
	0x034AA6FC BL 0x2AA5098
	0x034AA700 LDR X23, [X24 + 0x20]
	0x034AA704 CBZ X23, 0x34AA890
	0x034AA708 ADRP X10, 0xC84000
	0x034AA70C LDR X8, [X23]
	0x034AA710 LDR X10, [X10 + 0x7B8]
	0x034AA714 LDR W24, [X24 + 0x18]
	0x034AA718 LDRH W9, [X8 + 0x12E]
	0x034AA71C LDR X1, [X10]
	0x034AA720 CBZ X9, 0x34AA744
	0x034AA724 LDR X10, [X8 + 0xB0]
	0x034AA728 ADD X10, X10, 0x8
	0x034AA72C LDUR X11, [X10 - 0x8]
	0x034AA730 CMP X11, X1
	0x034AA734 B.EQ 0x34AA76C
	0x034AA738 SUBS X9, X9, 0x1
	0x034AA73C ADD X10, X10, 0x10
	0x034AA740 B.NE 0x34AA72C
	0x034AA744 MOVZ W2, 0x3
	0x034AA748 MOV X0, X23
	0x034AA74C BL 0x1C5C788
	0x034AA750 B 0x34AA77C
	0x034AA754 LDR X8, [X19 + 0x38]
	0x034AA758 MOVN W9, 0x0
	0x034AA75C STR X8, [X31 + 0x8]
	0x034AA760 STR X31, [X19 + 0x38]
	0x034AA764 STR W9, [X19]
	0x034AA768 B 0x34AA7D8
	0x034AA76C LDR W9, [X10]
	0x034AA770 ADD W9, W9, 0x3
	0x034AA774 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF34000
	011 Move W8, [X20+2578]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC89000
	018 Move X0, [X0+208]
	019 Call 0x1C17CF4
	020 Move X0, 0xC89000
	021 Move X0, [X0+216]
	022 Call 0x1C17CF4
	023 Move X0, 0xC88000
	024 Move X0, [X0+3496]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4B000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4B000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xC4B000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0xC85000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xC89000
	039 Move X0, [X0+224]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4D000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4D000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4D000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xC53000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xC73000
	054 Move X0, [X0+1232]
	055 Call 0x1C17CF4
	056 Move X0, 0xC89000
	057 Move X0, [X0+232]
	058 Call 0x1C17CF4
	059 Move X0, 0xC85000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xC85000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC4A000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2578], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC88000
	072 Move W8, [X19]
	073 Move X25, [X25+3496]
	074 Compare W8, 0
	075 JumpIfEqual {157}
	076 Move X24, [X19+32]
	077 Compare X24, 0
	078 JumpIfEqual {246}
	079 Move X8, 0xC89000
	080 Move X9, 0xC4A000
	081 Move X10, 0xC53000
	082 Move X8, [X8+232]
	083 Move X9, [X9+2440]
	084 Move X10, [X10+928]
	085 Move X23, [X24+16]
	086 Move X22, [X8]
	087 Move X21, [X9]
	088 Move X0, [X10]
	089 Call 0x1C17F10
	090 Move X20, X0
	091 Move X1, X23
	092 Move X2, X31
	093 Call UriBuilder..ctor, X0, X1
	094 Compare X20, 0
	095 JumpIfEqual {247}
	096 Move X0, X20
	097 Move X1, X22
	098 Move X2, X31
	099 Call UriBuilder.set_Path, X0, X1
	100 Move X0, X20
	101 Move X1, X21
	102 Move X2, X31
	103 Call UriBuilder.set_Query, X0, X1
	104 Move X0, X20
	105 Move X1, X31
	106 Call UriBuilder.get_Uri, X0
	107 Move X8, 0xC73000
	108 Move X9, 0xC4B000
	109 Move X8, [X8+1232]
	110 Move X9, [X9+1744]
	111 Move X20, X0
	112 Move X21, [X8]
	113 Move X0, [X9]
	114 Call 0x1C17F10
	115 Move X8, 0xC4B000
	116 Move X8, [X8+1728]
	117 Move X22, X0
	118 Move X1, [X8]
	119 Call Dictionary`2<Object, Object>..ctor, X0
	120 Move X8, 0xC85000
	121 Move X8, [X8+2008]
	122 Move X1, [X19+40]
	123 Move X0, [X8]
	124 Move X2, X31
	125 Call String.Concat, X0, X1
	126 Compare X22, 0
	127 JumpIfEqual {248}
	128 Move X8, 0xC85000
	129 Move X8, [X8+2000]
	130 Move X9, 0xC4B000
	131 Move X9, [X9+2064]
	132 Move X2, X0
	133 Move X1, [X8]
	134 Move X3, [X9]
	135 Move X0, X22
	136 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	137 Move X23, [X24+32]
	138 Compare X23, 0
	139 JumpIfEqual {249}
	140 Move X10, 0xC85000
	141 Move X8, [X23]
	142 Move X10, [X10+1976]
	143 Move W24, [X24+24]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X1, [X10]
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 3
	155 Move X0, X23
	156 Call 0x1C5D788
	157 Move X8, [X19+48]
	158 Move TEMP, 0
	159 Not TEMP
	160 Move W9, TEMP
	161 Move [X31+8], X8
	162 Move [X19+48], X31
	163 Move [X19], W9
	164 Move W9, [X10]
	165 Add W9, W9, 3
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X9, [X0+8]
	170 Move X0, X23
	171 Move X1, X21
	172 Move X2, X20
	173 Move X3, X22
	174 Move X4, X31
	175 Move W5, W24
	176 Move X6, X31
	177 Move X7, X31
	178 Move [X31], X9
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Compare X0, 0
	181 JumpIfEqual {250}
	182 Move X8, 0xC4D000
	183 Move X8, [X8+504]
	184 Move X1, [X8]
	185 Call Task`1<Object>.GetAwaiter, X0
	186 Move X8, 0xC4D000
	187 Move X8, [X8+496]
	188 Move [X31+8], X0
	189 Move X1, [X8]
	190 Add X0, X31, 8
	191 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {221}
	196 Move X8, 0xC4D000
	197 Move X8, [X8+480]
	198 Add X0, X31, 8
	199 Move X1, [X8]
	200 Call TaskAwaiter`1<Object>.GetResult, X0
	201 Move X8, 0xC89000
	202 Move X8, [X8+224]
	203 Move X1, [X8]
	204 Call JsonParser.FromJson, X0
	205 Move TEMP, 1
	206 Not TEMP
	207 Move W8, TEMP
	208 Move [X19+8], W8
	209 Move X20, X0
	210 Move X0, [X25]
	211 Move X21, 0xC89000
	212 Move W8, [X0+224]
	213 Move X21, [X21+216]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Move X2, [X21]
	218 Move X0, X19
	219 Move X1, X20
	220 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	221 Move [X19], W31
	222 Move X8, [X31+8]
	223 Move [X19+48], X8
	224 Move X0, [X25]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X8, 0xC89000
	230 Move X8, [X8+208]
	231 Add X0, X19, 8
	232 Move X3, [X8]
	233 Add X1, X31, 8
	234 Move X2, X19
	235 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	236 Move X20, [X31+64]
	237 Move X19, [X31+72]
	238 Move X22, [X31+48]
	239 Move X21, [X31+56]
	240 Move X24, [X31+32]
	241 Move X23, [X31+40]
	242 Move X30, [X31+16]
	243 Move X25, [X31+24]
	244 Add X31, X31, 80
	245 Return 
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Call 0x1C17F20
	251 Move X20, X0
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, X20
	254 Call 0x3EB2AD0
	255 Move X20, X0
	256 Move X0, 0xC4A000
	257 Move X0, [X0+2000]
	258 Call 0x1C17D08
	259 Move X8, [X20]
	260 Move X1, [X8]
	261 Call 0x1C18270
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {286}
	266 Move X20, [X20]
	267 Call 0x3EB2AE0
	268 Move TEMP, 1
	269 Not TEMP
	270 Move W8, TEMP
	271 Move [X19+8], W8
	272 Move X0, 0xC88000
	273 Move X0, [X0+3496]
	274 Call 0x1C17D08
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X0, 0xC89000
	280 Move X0, [X0+240]
	281 Call 0x1C17D08
	282 Move X2, X0
	283 Move X0, X19
	284 Move X1, X20
	285 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	286 Move W0, 8
	287 Call 0x3EB2AF0
	288 Move X8, [X20]
	289 Move [X0], X8
	290 Move X1, 0xA0B000
	291 Add X1, X1, 3672
	292 Move X2, X31
	293 Call 0x3EB2B00
	294 Move X20, X0
	295 Call 0x3EB2AE0
	296 Move X0, X20
	297 Call 0x1D2D690
	298 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AA778 ADD X0, X8, 0x138
	0x034AA77C LDP X8, X9, [X0]
	0x034AA780 MOV X0, X23
	0x034AA784 MOV X1, X21
	0x034AA788 MOV X2, X20
	0x034AA78C MOV X3, X22
	0x034AA790 MOV X4, X31
	0x034AA794 MOV W5, W24
	0x034AA798 MOV X6, X31
	0x034AA79C MOV X7, X31
	0x034AA7A0 STR X9, [X31]
	0x034AA7A4 BLR X8
	0x034AA7A8 CBZ X0, 0x34AA894
	0x034AA7AC ADRP X8, 0xC4C000
	0x034AA7B0 LDR X8, [X8 + 0x1F8]
	0x034AA7B4 LDR X1, [X8]
	0x034AA7B8 BL 0x269F5D0
	0x034AA7BC ADRP X8, 0xC4C000
	0x034AA7C0 LDR X8, [X8 + 0x1F0]
	0x034AA7C4 STR X0, [X31 + 0x8]
	0x034AA7C8 LDR X1, [X8]
	0x034AA7CC ADD X0, X31, 0x8
	0x034AA7D0 BL 0x2677430
	0x034AA7D4 TBZ X0, 0x0, 0x34AA834
	0x034AA7D8 ADRP X8, 0xC4C000
	0x034AA7DC LDR X8, [X8 + 0x1E0]
	0x034AA7E0 ADD X0, X31, 0x8
	0x034AA7E4 LDR X1, [X8]
	0x034AA7E8 BL 0x2677474
	0x034AA7EC ADRP X8, 0xC88000
	0x034AA7F0 LDR X8, [X8 + 0x178]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF34000
	007 Move X21, 0xC88000
	008 Move W8, [X22+2579]
	009 Move X21, [X21+3496]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC89000
	017 Move X0, [X0+248]
	018 Call 0x1C17CF4
	019 Move X0, 0xC88000
	020 Move X0, [X0+3496]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2579], W8
	024 Move X0, [X21]
	025 Move X21, 0xC89000
	026 Move W8, [X0+224]
	027 Move X21, [X21+248]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

