Type: Nakama.Console.ApiClient/<DeleteAccountAsync>d__4

Method: System.Void MoveNext()

Disassembly:
	0x034A5824 LDR X0, [X0 + 0xF18]
	0x034A5828 BL 0x1C16D08
	0x034A582C MOV X1, X0
	0x034A5830 MOV X0, X20
	0x034A5834 BL 0x1C16DEC
	0x034A5838 ADRP X0, 0xC56000
	0x034A583C LDR X0, [X0 + 0x578]
	0x034A5840 BL 0x1C16D08
	0x034A5844 BL 0x1C16F10
	0x034A5848 MOV X20, X0
	0x034A584C ADRP X0, 0xC89000
	0x034A5850 LDR X0, [X0 + 0x808]
	0x034A5854 BL 0x1C16D08
	0x034A5858 MOV X1, X0
	0x034A585C MOV X0, X20
	0x034A5860 MOV X2, X31
	0x034A5864 BL 0x3314A68
	0x034A5868 ADRP X0, 0xC8C000
	0x034A586C LDR X0, [X0 + 0xF18]
	0x034A5870 BL 0x1C16D08
	0x034A5874 MOV X1, X0
	0x034A5878 MOV X0, X20
	0x034A587C BL 0x1C16DEC
	0x034A5880 BL 0x1C16F20
	0x034A5884 BL 0x1C16F20
	0x034A5888 BL 0x1C16F20
	0x034A588C BL 0x1C16F20
	0x034A5890 BL 0x1C16F20
	0x034A5894 BL 0x1C16F20
	0x034A5898 BL 0x1C16F20
	0x034A589C B 0x34A58EC
	0x034A58A0 B 0x34A58EC
	0x034A58A4 B 0x34A58EC
	0x034A58A8 B 0x34A58EC
	0x034A58AC B 0x34A58EC
	0x034A58B0 B 0x34A58EC
	0x034A58B4 B 0x34A58EC
	0x034A58B8 B 0x34A58EC
	0x034A58BC B 0x34A58EC
	0x034A58C0 B 0x34A58EC
	0x034A58C4 B 0x34A58EC
	0x034A58C8 B 0x34A58EC
	0x034A58CC B 0x34A58EC
	0x034A58D0 B 0x34A58EC
	0x034A58D4 B 0x34A58EC
	0x034A58D8 B 0x34A58EC
	0x034A58DC B 0x34A58EC
	0x034A58E0 B 0x34A58EC
	0x034A58E4 B 0x34A58EC
	0x034A58E8 B 0x34A58EC
	0x034A58EC MOV X20, X0
	0x034A58F0 CMP W1, 0x1
	0x034A58F4 B.NE 0x34A5984
	0x034A58F8 MOV X0, X20
	0x034A58FC BL 0x3EB1AD0
	0x034A5900 MOV X20, X0
	0x034A5904 ADRP X0, 0xC4E000
	0x034A5908 LDR X0, [X0 + 0x7D0]
	0x034A590C BL 0x1C16D08
	0x034A5910 LDR X8, [X20]
	0x034A5914 LDR X1, [X8]
	0x034A5918 BL 0x1C17270
	0x034A591C TBZ X0, 0x0, 0x34A595C
	0x034A5920 LDR X20, [X20]
	0x034A5924 BL 0x3EB1AE0
	0x034A5928 MOVN W8, 0x1
	0x034A592C STR W8, [X19], #0x8
	0x034A5930 ADRP X0, 0xC51000
	0x034A5934 LDR X0, [X0 + 0x280]
	0x034A5938 BL 0x1C16D08
	0x034A593C LDR W8, [X0 + 0xE0]
	0x034A5940 CBNZ W8, 0x34A5948
	0x034A5944 BL 0x1C16DFC
	0x034A5948 MOV X0, X19
	0x034A594C MOV X1, X20
	0x034A5950 MOV X2, X31
	0x034A5954 BL 0x32C4908
	0x034A5958 B 0x34A57D8
	0x034A595C MOVZ W0, 0x8
	0x034A5960 BL 0x3EB1AF0
	0x034A5964 LDR X8, [X20]
	0x034A5968 STR X8, [X0]
	0x034A596C ADRP X1, 0xA0F000
	0x034A5970 ADD X1, X1, 0xE58
	0x034A5974 MOV X2, X31
	0x034A5978 BL 0x3EB1B00
	0x034A597C MOV X20, X0
	0x034A5980 BL 0x3EB1AE0
	0x034A5984 MOV X0, X20
	0x034A5988 BL 0x1D2C690
	0x034A598C BL 0x1990590
	0x034A5990 STR X30, [X31 - 0x30]!
	0x034A5994 STP X22, X21, [X31 + 0x10]
	0x034A5998 STP X20, X19, [X31 + 0x20]
	0x034A599C ADRP X21, 0xF38000
	0x034A59A0 ADRP X22, 0xC51000
	0x034A59A4 LDRB W8, [X21 + 0x9FD]
	0x034A59A8 LDR X22, [X22 + 0x280]
	0x034A59AC MOV X19, X1
	0x034A59B0 MOV X20, X0
	0x034A59B4 TBNZ X8, 0x0, 0x34A59CC
	0x034A59B8 ADRP X0, 0xC51000
	0x034A59BC LDR X0, [X0 + 0x280]
	0x034A59C0 BL 0x1C16CF4
	0x034A59C4 MOVZ W8, 0x1
	0x034A59C8 STRB W8, [X21 + 0x9FD]
	0x034A59CC LDR X0, [X22]
	0x034A59D0 LDR W8, [X0 + 0xE0]
	0x034A59D4 CBNZ W8, 0x34A59DC
	0x034A59D8 BL 0x1C16DFC
	0x034A59DC ADD X0, X20, 0x8
	0x034A59E0 MOV X1, X19
	0x034A59E4 LDP X20, X19, [X31 + 0x20]
	0x034A59E8 LDP X22, X21, [X31 + 0x10]
	0x034A59EC MOV X2, X31
	0x034A59F0 LDR X30, [X31], #0x30
	0x034A59F4 B 0x32C477C
	0x034A59F8 SUB X31, X31, 0x50
	0x034A59FC STP X30, X25, [X31 + 0x10]
	0x034A5A00 STP X24, X23, [X31 + 0x20]
	0x034A5A04 STP X22, X21, [X31 + 0x30]
	0x034A5A08 STP X20, X19, [X31 + 0x40]
	0x034A5A0C ADRP X20, 0xF38000
	0x034A5A10 LDRB W8, [X20 + 0x9FE]
	0x034A5A14 MOV X19, X0
	0x034A5A18 TBNZ X8, 0x0, 0x34A5AD8
	0x034A5A1C ADRP X0, 0xC8C000
	0x034A5A20 LDR X0, [X0 + 0xF20]
	0x034A5A24 BL 0x1C16CF4
	0x034A5A28 ADRP X0, 0xC51000
	0x034A5A2C LDR X0, [X0 + 0x280]
	0x034A5A30 BL 0x1C16CF4
	0x034A5A34 ADRP X0, 0xC4F000
	0x034A5A38 LDR X0, [X0 + 0x810]
	0x034A5A3C BL 0x1C16CF4
	0x034A5A40 ADRP X0, 0xC4F000
	0x034A5A44 LDR X0, [X0 + 0x6C0]
	0x034A5A48 BL 0x1C16CF4
	0x034A5A4C ADRP X0, 0xC4F000
	0x034A5A50 LDR X0, [X0 + 0x6D0]
	0x034A5A54 BL 0x1C16CF4
	0x034A5A58 ADRP X0, 0xC89000
	0x034A5A5C LDR X0, [X0 + 0x7B8]
	0x034A5A60 BL 0x1C16CF4
	0x034A5A64 ADRP X0, 0xC51000
	0x034A5A68 LDR X0, [X0 + 0x1E0]
	0x034A5A6C BL 0x1C16CF4
	0x034A5A70 ADRP X0, 0xC51000
	0x034A5A74 LDR X0, [X0 + 0x1F0]
	0x034A5A78 BL 0x1C16CF4
	0x034A5A7C ADRP X0, 0xC51000
	0x034A5A80 LDR X0, [X0 + 0x1F8]
	0x034A5A84 BL 0x1C16CF4
	0x034A5A88 ADRP X0, 0xC57000
	0x034A5A8C LDR X0, [X0 + 0x3A0]
	0x034A5A90 BL 0x1C16CF4
	0x034A5A94 ADRP X0, 0xC89000
	0x034A5A98 LDR X0, [X0 + 0x7D0]
	0x034A5A9C BL 0x1C16CF4
	0x034A5AA0 ADRP X0, 0xC89000
	0x034A5AA4 LDR X0, [X0 + 0x7D8]
	0x034A5AA8 BL 0x1C16CF4
	0x034A5AAC ADRP X0, 0xC8C000
	0x034A5AB0 LDR X0, [X0 + 0xF28]
	0x034A5AB4 BL 0x1C16CF4
	0x034A5AB8 ADRP X0, 0xC4E000
	0x034A5ABC LDR X0, [X0 + 0x988]
	0x034A5AC0 BL 0x1C16CF4
	0x034A5AC4 ADRP X0, 0xC77000
	0x034A5AC8 LDR X0, [X0 + 0x4C8]
	0x034A5ACC BL 0x1C16CF4
	0x034A5AD0 MOVZ W8, 0x1
	0x034A5AD4 STRB W8, [X20 + 0x9FE]
	0x034A5AD8 STR X31, [X31 + 0x8]
	0x034A5ADC ADRP X25, 0xC51000
	0x034A5AE0 LDR W8, [X19]
	0x034A5AE4 LDR X25, [X25 + 0x280]
	0x034A5AE8 CBZ W8, 0x34A5C28
	0x034A5AEC LDR X24, [X19 + 0x20]
	0x034A5AF0 CBZ X24, 0x34A5D38
	0x034A5AF4 ADRP X8, 0xC8C000
	0x034A5AF8 ADRP X9, 0xC4E000
	0x034A5AFC ADRP X10, 0xC57000
	0x034A5B00 LDR X8, [X8 + 0xF28]
	0x034A5B04 LDR X9, [X9 + 0x988]
	0x034A5B08 LDR X10, [X10 + 0x3A0]
	0x034A5B0C LDR X23, [X24 + 0x10]
	0x034A5B10 LDR X22, [X8]
	0x034A5B14 LDR X21, [X9]
	0x034A5B18 LDR X0, [X10]
	0x034A5B1C BL 0x1C16F10
	0x034A5B20 MOV X20, X0
	0x034A5B24 MOV X1, X23
	0x034A5B28 MOV X2, X31
	0x034A5B2C BL 0x36281F8
	0x034A5B30 CBZ X20, 0x34A5D3C
	0x034A5B34 MOV X0, X20
	0x034A5B38 MOV X1, X22
	0x034A5B3C MOV X2, X31
	0x034A5B40 BL 0x36288CC
	0x034A5B44 MOV X0, X20
	0x034A5B48 MOV X1, X21
	0x034A5B4C MOV X2, X31
	0x034A5B50 BL 0x3628980
	0x034A5B54 MOV X0, X20
	0x034A5B58 MOV X1, X31
	0x034A5B5C BL 0x3628A38
	0x034A5B60 ADRP X8, 0xC77000
	0x034A5B64 ADRP X9, 0xC4F000
	0x034A5B68 LDR X8, [X8 + 0x4C8]
	0x034A5B6C LDR X9, [X9 + 0x6D0]
	0x034A5B70 MOV X20, X0
	0x034A5B74 LDR X21, [X8]
	0x034A5B78 LDR X0, [X9]
	0x034A5B7C BL 0x1C16F10
	0x034A5B80 ADRP X8, 0xC4F000
	0x034A5B84 LDR X8, [X8 + 0x6C0]
	0x034A5B88 MOV X22, X0
	0x034A5B8C LDR X1, [X8]
	0x034A5B90 BL 0x2AA4804
	0x034A5B94 ADRP X8, 0xC89000
	0x034A5B98 LDR X8, [X8 + 0x7D8]
	0x034A5B9C LDR X1, [X19 + 0x28]
	0x034A5BA0 LDR X0, [X8]
	0x034A5BA4 MOV X2, X31
	0x034A5BA8 BL 0x321B938
	0x034A5BAC CBZ X22, 0x34A5D40
	0x034A5BB0 ADRP X8, 0xC89000
	0x034A5BB4 LDR X8, [X8 + 0x7D0]
	0x034A5BB8 ADRP X9, 0xC4F000
	0x034A5BBC LDR X9, [X9 + 0x810]
	0x034A5BC0 MOV X2, X0
	0x034A5BC4 LDR X1, [X8]
	0x034A5BC8 LDR X3, [X9]
	0x034A5BCC MOV X0, X22
	0x034A5BD0 BL 0x2AA5098
	0x034A5BD4 LDR X23, [X24 + 0x20]
	0x034A5BD8 CBZ X23, 0x34A5D44
	0x034A5BDC ADRP X10, 0xC89000
	0x034A5BE0 LDR X8, [X23]
	0x034A5BE4 LDR X10, [X10 + 0x7B8]
	0x034A5BE8 LDR W24, [X24 + 0x18]
	0x034A5BEC LDRH W9, [X8 + 0x12E]
	0x034A5BF0 LDR X1, [X10]
	0x034A5BF4 CBZ X9, 0x34A5C18
	0x034A5BF8 LDR X10, [X8 + 0xB0]
	0x034A5BFC ADD X10, X10, 0x8
	0x034A5C00 LDUR X11, [X10 - 0x8]
	0x034A5C04 CMP X11, X1
	0x034A5C08 B.EQ 0x34A5C40
	0x034A5C0C SUBS X9, X9, 0x1
	0x034A5C10 ADD X10, X10, 0x10
	0x034A5C14 B.NE 0x34A5C00
	0x034A5C18 MOVZ W2, 0x3
	0x034A5C1C MOV X0, X23
	0x034A5C20 BL 0x1C5C788
	0x034A5C24 B 0x34A5C50
	0x034A5C28 LDR X8, [X19 + 0x30]
	0x034A5C2C MOVN W9, 0x0
	0x034A5C30 STR X8, [X31 + 0x8]
	0x034A5C34 STR X31, [X19 + 0x30]
	0x034A5C38 STR W9, [X19]
	0x034A5C3C B 0x34A5CAC
	0x034A5C40 LDR W9, [X10]
	0x034A5C44 ADD W9, W9, 0x3
	0x034A5C48 ADD X8, X8, W9, 0x4, SXTW
	0x034A5C4C ADD X0, X8, 0x138
	0x034A5C50 LDP X8, X9, [X0]
	0x034A5C54 MOV X0, X23
	0x034A5C58 MOV X1, X21
	0x034A5C5C MOV X2, X20
	0x034A5C60 MOV X3, X22
	0x034A5C64 MOV X4, X31
	0x034A5C68 MOV W5, W24
	0x034A5C6C MOV X6, X31
	0x034A5C70 MOV X7, X31
	0x034A5C74 STR X9, [X31]
	0x034A5C78 BLR X8
	0x034A5C7C CBZ X0, 0x34A5D48
	0x034A5C80 ADRP X8, 0xC51000
	0x034A5C84 LDR X8, [X8 + 0x1F8]
	0x034A5C88 LDR X1, [X8]
	0x034A5C8C BL 0x269F5D0
	0x034A5C90 ADRP X8, 0xC51000
	0x034A5C94 LDR X8, [X8 + 0x1F0]
	0x034A5C98 STR X0, [X31 + 0x8]
	0x034A5C9C LDR X1, [X8]
	0x034A5CA0 ADD X0, X31, 0x8
	0x034A5CA4 BL 0x2677430
	0x034A5CA8 TBZ X0, 0x0, 0x34A5CE8
	0x034A5CAC ADRP X8, 0xC51000
	0x034A5CB0 LDR X8, [X8 + 0x1E0]
	0x034A5CB4 ADD X0, X31, 0x8
	0x034A5CB8 LDR X1, [X8]
	0x034A5CBC BL 0x2677474
	0x034A5CC0 MOVN W8, 0x1
	0x034A5CC4 STR W8, [X19], #0x8
	0x034A5CC8 LDR X0, [X25]
	0x034A5CCC LDR W8, [X0 + 0xE0]
	0x034A5CD0 CBNZ W8, 0x34A5CD8
	0x034A5CD4 BL 0x1C16DFC
	0x034A5CD8 MOV X0, X19
	0x034A5CDC MOV X1, X31
	0x034A5CE0 BL 0x32C4864
	0x034A5CE4 B 0x34A5D20
	0x034A5CE8 STR W31, [X19]
	0x034A5CEC LDR X8, [X31 + 0x8]
	0x034A5CF0 STR X8, [X19 + 0x30]
	0x034A5CF4 LDR X0, [X25]
	0x034A5CF8 LDR W8, [X0 + 0xE0]
	0x034A5CFC CBNZ W8, 0x34A5D04
	0x034A5D00 BL 0x1C16DFC
	0x034A5D04 ADRP X8, 0xC8C000
	0x034A5D08 LDR X8, [X8 + 0xF20]
	0x034A5D0C ADD X0, X19, 0x8
	0x034A5D10 LDR X3, [X8]
	0x034A5D14 ADD X1, X31, 0x8
	0x034A5D18 MOV X2, X19
	0x034A5D1C BL 0x21873E8
	0x034A5D20 LDP X20, X19, [X31 + 0x40]
	0x034A5D24 LDP X22, X21, [X31 + 0x30]
	0x034A5D28 LDP X24, X23, [X31 + 0x20]
	0x034A5D2C LDP X30, X25, [X31 + 0x10]
	0x034A5D30 ADD X31, X31, 0x50
	0x034A5D34 RET
	0x034A5D38 BL 0x1C16F20
	0x034A5D3C BL 0x1C16F20
	0x034A5D40 BL 0x1C16F20
	0x034A5D44 BL 0x1C16F20
	0x034A5D48 BL 0x1C16F20
	0x034A5D4C B 0x34A5D80
	0x034A5D50 B 0x34A5D80
	0x034A5D54 B 0x34A5D80
	0x034A5D58 B 0x34A5D80
	0x034A5D5C B 0x34A5D80
	0x034A5D60 B 0x34A5D80
	0x034A5D64 B 0x34A5D80
	0x034A5D68 B 0x34A5D80
	0x034A5D6C B 0x34A5D80
	0x034A5D70 B 0x34A5D80
	0x034A5D74 B 0x34A5D80
	0x034A5D78 B 0x34A5D80
	0x034A5D7C B 0x34A5D80
	0x034A5D80 MOV X20, X0
	0x034A5D84 CMP W1, 0x1
	0x034A5D88 B.NE 0x34A5E18
	0x034A5D8C MOV X0, X20
	0x034A5D90 BL 0x3EB1AD0
	0x034A5D94 MOV X20, X0
	0x034A5D98 ADRP X0, 0xC4E000
	0x034A5D9C LDR X0, [X0 + 0x7D0]
	0x034A5DA0 BL 0x1C16D08
	0x034A5DA4 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF39000
	011 Move W8, [X20+2552]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {82}
	017 Move X0, 0xC8D000
	018 Move X0, [X0+3768]
	019 Call 0x1C17CF4
	020 Move X0, 0xC52000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC50000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC50000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC50000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC8A000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8A000
	036 Move X0, [X0+2096]
	037 Call 0x1C17CF4
	038 Move X0, 0xC53000
	039 Move X0, [X0+3056]
	040 Call 0x1C17CF4
	041 Move X0, 0xC52000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xC52000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xC52000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xC58000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xC51000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8D000
	057 Move X0, [X0+3776]
	058 Call 0x1C17CF4
	059 Move X0, 0xC58000
	060 Move X0, [X0+1824]
	061 Call 0x1C17CF4
	062 Move X0, 0xC8A000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xC8B000
	066 Move X0, [X0+744]
	067 Call 0x1C17CF4
	068 Move X0, 0xC8A000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xC4F000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move X0, 0xC78000
	075 Move X0, [X0+1224]
	076 Call 0x1C17CF4
	077 Move X0, 0xC8D000
	078 Move X0, [X0+3784]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+2552], W8
	082 Move [X31+8], X31
	083 Move X25, 0xC52000
	084 Move W8, [X19]
	085 Move X25, [X25+640]
	086 Compare W8, 0
	087 JumpIfEqual {216}
	088 Move X21, [X19+32]
	089 Compare X21, 0
	090 JumpIfEqual {297}
	091 Move X8, 0xC51000
	092 Move X8, [X8+2600]
	093 Move X0, [X8]
	094 Move X8, 0xC8D000
	095 Move X8, [X8+3784]
	096 Move X24, [X19+48]
	097 Move W9, [X0+224]
	098 Move X20, [X8]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X31
	104 Call Uri.EscapeDataString, X0
	105 Compare X20, 0
	106 JumpIfEqual {315}
	107 Move X8, 0xC8B000
	108 Move X8, [X8+744]
	109 Move X2, X0
	110 Move X1, [X8]
	111 Move X0, X20
	112 Move X3, X31
	113 Call String.Replace, X0, X1, X2
	114 Move X8, 0xC4F000
	115 Move X8, [X8+2440]
	116 Move X20, X0
	117 Move X0, X19
	118 Move X21, [X8]
	119 Add X0, X0, 40
	120 Move W8, [X0]
	121 Compare W8, 0
	122 JumpIfEqual {142}
	123 Move X8, 0xC8A000
	124 Move X8, [X8+2096]
	125 Move X1, [X8]
	126 Call Nullable`1<Boolean>.ToString, X0
	127 Compare X0, 0
	128 JumpIfEqual {321}
	129 Move X1, X31
	130 Call String.ToLower, X0
	131 Move X8, 0xC8D000
	132 Move X8, [X8+3776]
	133 Move X9, 0xC58000
	134 Move X9, [X9+1824]
	135 Move X2, X0
	136 Move X1, [X8]
	137 Move X3, [X9]
	138 Move X0, X21
	139 Move X4, X31
	140 Call String.Concat, X0, X1, X2, X3
	141 Move X21, X0
	142 Compare X24, 0
	143 JumpIfEqual {316}
	144 Move X8, 0xC58000
	145 Move X8, [X8+928]
	146 Move X23, [X24+16]
	147 Move X0, [X8]
	148 Call 0x1C17F10
	149 Move X22, X0
	150 Move X1, X23
	151 Move X2, X31
	152 Call UriBuilder..ctor, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {317}
	155 Move X0, X22
	156 Move X1, X20
	157 Move X2, X31
	158 Call UriBuilder.set_Path, X0, X1
	159 Move X0, X22
	160 Move X1, X21
	161 Move X2, X31
	162 Call UriBuilder.set_Query, X0, X1
	163 Move X0, X22
	164 Move X1, X31
	165 Call UriBuilder.get_Uri, X0
	166 Move X8, 0xC78000
	167 Move X9, 0xC50000
	168 Move X8, [X8+1224]
	169 Move X9, [X9+1744]
	170 Move X20, X0
	171 Move X21, [X8]
	172 Move X0, [X9]
	173 Call 0x1C17F10
	174 Move X8, 0xC50000
	175 Move X8, [X8+1728]
	176 Move X22, X0
	177 Move X1, [X8]
	178 Call Dictionary`2<Object, Object>..ctor, X0
	179 Move X8, 0xC8A000
	180 Move X8, [X8+2008]
	181 Move X1, [X19+56]
	182 Move X0, [X8]
	183 Move X2, X31
	184 Call String.Concat, X0, X1
	185 Compare X22, 0
	186 JumpIfEqual {318}
	187 Move X8, 0xC8A000
	188 Move X8, [X8+2000]
	189 Move X9, 0xC50000
	190 Move X9, [X9+2064]
	191 Move X2, X0
	192 Move X1, [X8]
	193 Move X3, [X9]
	194 Move X0, X22
	195 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	196 Move X23, [X24+32]
	197 Compare X23, 0
	198 JumpIfEqual {319}
	199 Move X10, 0xC8A000
	200 Move X8, [X23]
	201 Move X10, [X10+1976]
	202 Move W24, [X24+24]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move X1, [X10]
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move W2, 3
	214 Move X0, X23
	215 Call 0x1C5D788
	216 Move X8, [X19+64]
	217 Move TEMP, 0
	218 Not TEMP
	219 Move W9, TEMP
	220 Move [X31+8], X8
	221 Move [X19+64], X31
	222 Move [X19], W9
	223 Move W9, [X10]
	224 Add W9, W9, 3
	225 Add X8, X8, W9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X9, [X0+8]
	229 Move X0, X23
	230 Move X1, X21
	231 Move X2, X20
	232 Move X3, X22
	233 Move X4, X31
	234 Move W5, W24
	235 Move X6, X31
	236 Move X7, X31
	237 Move [X31], X9
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Compare X0, 0
	240 JumpIfEqual {320}
	241 Move X8, 0xC52000
	242 Move X8, [X8+504]
	243 Move X1, [X8]
	244 Call Task`1<Object>.GetAwaiter, X0
	245 Move X8, 0xC52000
	246 Move X8, [X8+496]
	247 Move [X31+8], X0
	248 Move X1, [X8]
	249 Add X0, X31, 8
	250 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {272}
	255 Move X8, 0xC52000
	256 Move X8, [X8+480]
	257 Add X0, X31, 8
	258 Move X1, [X8]
	259 Call TaskAwaiter`1<Object>.GetResult, X0
	260 Move TEMP, 1
	261 Not TEMP
	262 Move W8, TEMP
	263 Move [X19+8], W8
	264 Move X0, [X25]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X0, X19
	270 Move X1, X31
	271 Call AsyncTaskMethodBuilder.SetResult, X0
	272 Move [X19], W31
	273 Move X8, [X31+8]
	274 Move [X19+64], X8
	275 Move X0, [X25]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Move X8, 0xC8D000
	281 Move X8, [X8+3768]
	282 Add X0, X19, 8
	283 Move X3, [X8]
	284 Add X1, X31, 8
	285 Move X2, X19
	286 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	287 Move X20, [X31+64]
	288 Move X19, [X31+72]
	289 Move X22, [X31+48]
	290 Move X21, [X31+56]
	291 Move X24, [X31+32]
	292 Move X23, [X31+40]
	293 Move X30, [X31+16]
	294 Move X25, [X31+24]
	295 Add X31, X31, 80
	296 Return 
	297 Move X0, 0xC57000
	298 Move X0, [X0+1400]
	299 Call 0x1C17D08
	300 Call 0x1C17F10
	301 Move X20, X0
	302 Move X0, 0xC8B000
	303 Move X0, [X0+752]
	304 Call 0x1C17D08
	305 Move X1, X0
	306 Move X0, X20
	307 Move X2, X31
	308 Call ArgumentException..ctor, X0, X1
	309 Move X0, 0xC8D000
	310 Move X0, [X0+3792]
	311 Call 0x1C17D08
	312 Move X1, X0
	313 Move X0, X20
	314 Call 0x1C17DEC
	315 Call 0x1C17F20
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Move X20, X0
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X0, X20
	325 Call 0x3EB2AD0
	326 Move X20, X0
	327 Move X0, 0xC4F000
	328 Move X0, [X0+2000]
	329 Call 0x1C17D08
	330 Move X8, [X20]
	331 Move X1, [X8]
	332 Call 0x1C18270
	333 Move TEMP, X0
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfNotEqual {354}
	337 Move X20, [X20]
	338 Call 0x3EB2AE0
	339 Move TEMP, 1
	340 Not TEMP
	341 Move W8, TEMP
	342 Move [X19+8], W8
	343 Move X0, 0xC52000
	344 Move X0, [X0+640]
	345 Call 0x1C17D08
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X0, X19
	351 Move X1, X20
	352 Move X2, X31
	353 Call AsyncTaskMethodBuilder.SetException, X0, X1
	354 Move W0, 8
	355 Call 0x3EB2AF0
	356 Move X8, [X20]
	357 Move [X0], X8
	358 Move X1, 0xA10000
	359 Add X1, X1, 3672
	360 Move X2, X31
	361 Call 0x3EB2B00
	362 Move X20, X0
	363 Call 0x3EB2AE0
	364 Move X0, X20
	365 Call 0x1D2D690
	366 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A5DA8 LDR X1, [X8]
	0x034A5DAC BL 0x1C17270
	0x034A5DB0 TBZ X0, 0x0, 0x34A5DF0
	0x034A5DB4 LDR X20, [X20]
	0x034A5DB8 BL 0x3EB1AE0
	0x034A5DBC MOVN W8, 0x1
	0x034A5DC0 STR W8, [X19], #0x8
	0x034A5DC4 ADRP X0, 0xC51000
	0x034A5DC8 LDR X0, [X0 + 0x280]
	0x034A5DCC BL 0x1C16D08
	0x034A5DD0 LDR W8, [X0 + 0xE0]
	0x034A5DD4 CBNZ W8, 0x34A5DDC
	0x034A5DD8 BL 0x1C16DFC
	0x034A5DDC MOV X0, X19
	0x034A5DE0 MOV X1, X20
	0x034A5DE4 MOV X2, X31
	0x034A5DE8 BL 0x32C4908
	0x034A5DEC B 0x34A5D20
	0x034A5DF0 MOVZ W0, 0x8
	0x034A5DF4 BL 0x3EB1AF0
	0x034A5DF8 LDR X8, [X20]
	0x034A5DFC STR X8, [X0]
	0x034A5E00 ADRP X1, 0xA0F000
	0x034A5E04 ADD X1, X1, 0xE58
	0x034A5E08 MOV X2, X31
	0x034A5E0C BL 0x3EB1B00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF39000
	007 Move X22, 0xC52000
	008 Move W8, [X21+2553]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC52000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2553], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

