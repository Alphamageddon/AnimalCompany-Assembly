Type: Nakama.Console.NakamaconsoleUpdateAccountRequest

Method: System.String get_AvatarUrl()

Disassembly:
	0x034A2540 ADRP X0, 0xC8F000
	0x034A2544 LDR X0, [X0 + 0xC88]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_AvatarUrl(System.String value)

Disassembly:
	0x034A2548 BL 0x1C16CF4
	0x034A254C MOVZ W8, 0x1

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_CustomId()

Disassembly:
	0x034A2550 STRB W8, [X23 + 0x9D9]
	0x034A2554 LDR X0, [X22]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_CustomId(System.String value)

Disassembly:
	0x034A2558 MOVI V0.2D, 0x0
	0x034A255C STP V0, V0, [X31 + 0x20]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_DeviceIds()

Disassembly:
	0x034A2560 STP V0, V0, [X31]
	0x034A2564 ADRP X22, 0xC8F000
	0x034A2568 ADRP X24, 0xC8F000
	0x034A256C ADRP X23, 0xC8F000
	0x034A2570 LDR W8, [X0 + 0xE0]
	0x034A2574 LDR X22, [X22 + 0xC90]
	0x034A2578 LDR X24, [X24 + 0xC98]
	0x034A257C LDR X23, [X23 + 0xCA0]
	0x034A2580 CBNZ W8, 0x34A2588
	0x034A2584 BL 0x1C16DFC
	0x034A2588 LDR X0, [X22]
	0x034A258C ADD X8, X31, 0x0
	0x034A2590 ORR X22, X8, 0xF
	0x034A2594 MOV X8, X22
	0x034A2598 BL 0x263221C
	0x034A259C LDR X2, [X24]
	0x034A25A0 MOVN W8, 0x0
	0x034A25A4 ADD X1, X31, 0x0
	0x034A25A8 MOV X0, X22
	0x034A25AC STP X20, X21, [X31 + 0x28]
	0x034A25B0 STR X19, [X31 + 0x20]
	0x034A25B4 STR W8, [X31]
	0x034A25B8 BL 0x1FCB014
	0x034A25BC LDR X1, [X23]
	0x034A25C0 MOV X0, X22
	0x034A25C4 BL 0x2632230
	0x034A25C8 LDP X20, X19, [X31 + 0x70]
	0x034A25CC LDP X22, X21, [X31 + 0x60]
	0x034A25D0 LDP X24, X23, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF3C000
	005 Move W8, [X20+2512]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC53000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xC53000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2512], W8
	019 Move X19, [X19+32]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xC53000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xC53000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__deviceIds()

Disassembly:
	0x034A25D4 LDR X30, [X31 + 0x40]
	0x034A25D8 ADD X31, X31, 0x80

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set__deviceIds(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x034A25DC RET
	0x034A25E0 SUB X31, X31, 0x80

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_DisplayName()

Disassembly:
	0x034A25E4 STR X30, [X31 + 0x40]
	0x034A25E8 STP X24, X23, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_DisplayName(System.String value)

Disassembly:
	0x034A25EC STP X22, X21, [X31 + 0x60]
	0x034A25F0 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_Email()

Disassembly:
	0x034A25F4 ADRP X23, 0xF3B000
	0x034A25F8 ADRP X22, 0xC8F000

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Email(System.String value)

Disassembly:
	0x034A25FC LDRB W8, [X23 + 0x9DA]
	0x034A2600 LDR X22, [X22 + 0xCA8]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_Id()

Disassembly:
	0x034A2604 MOV X19, X2
	0x034A2608 MOV X21, X1

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x034A260C MOV X20, X0
	0x034A2610 TBNZ X8, 0x0, 0x34A264C

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_LangTag()

Disassembly:
	0x034A2614 ADRP X0, 0xC8F000
	0x034A2618 LDR X0, [X0 + 0xCB0]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_LangTag(System.String value)

Disassembly:
	0x034A261C BL 0x1C16CF4
	0x034A2620 ADRP X0, 0xC8F000

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String get_Location()

Disassembly:
	0x034A2624 LDR X0, [X0 + 0xCB8]
	0x034A2628 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_Location(System.String value)

Disassembly:
	0x034A262C ADRP X0, 0xC8F000
	0x034A2630 LDR X0, [X0 + 0xCC0]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_Metadata()

Disassembly:
	0x034A2634 BL 0x1C16CF4
	0x034A2638 ADRP X0, 0xC8F000

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Metadata(System.String value)

Disassembly:
	0x034A263C LDR X0, [X0 + 0xCA8]
	0x034A2640 BL 0x1C16CF4

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_Password()

Disassembly:
	0x034A2644 MOVZ W8, 0x1
	0x034A2648 STRB W8, [X23 + 0x9DA]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_Password(System.String value)

Disassembly:
	0x034A264C LDR X0, [X22]
	0x034A2650 MOVI V0.2D, 0x0

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.String get_Timezone()

Disassembly:
	0x034A2654 STP V0, V0, [X31 + 0x20]
	0x034A2658 STP V0, V0, [X31]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_Timezone(System.String value)

Disassembly:
	0x034A265C ADRP X22, 0xC8F000
	0x034A2660 ADRP X24, 0xC8F000

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_Username()

Disassembly:
	0x034A2664 ADRP X23, 0xC8F000
	0x034A2668 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_Username(System.String value)

Disassembly:
	0x034A266C LDR X22, [X22 + 0xCB0]
	0x034A2670 LDR X24, [X24 + 0xCB8]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String get_Wallet()

Disassembly:
	0x034A2674 LDR X23, [X23 + 0xCC0]
	0x034A2678 CBNZ W8, 0x34A2680

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_Wallet(System.String value)

Disassembly:
	0x034A267C BL 0x1C16DFC
	0x034A2680 LDR X0, [X22]

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034A2684 ADD X8, X31, 0x0
	0x034A2688 ORR X22, X8, 0xF
	0x034A268C MOV X8, X22
	0x034A2690 BL 0x263221C
	0x034A2694 LDR X2, [X24]
	0x034A2698 MOVN W8, 0x0
	0x034A269C ADD X1, X31, 0x0
	0x034A26A0 MOV X0, X22
	0x034A26A4 STP X20, X21, [X31 + 0x28]
	0x034A26A8 STR X19, [X31 + 0x20]
	0x034A26AC STR W8, [X31]
	0x034A26B0 BL 0x1FCB314
	0x034A26B4 LDR X1, [X23]
	0x034A26B8 MOV X0, X22
	0x034A26BC BL 0x2632230
	0x034A26C0 LDP X20, X19, [X31 + 0x70]
	0x034A26C4 LDP X22, X21, [X31 + 0x60]
	0x034A26C8 LDP X24, X23, [X31 + 0x50]
	0x034A26CC LDR X30, [X31 + 0x40]
	0x034A26D0 ADD X31, X31, 0x80
	0x034A26D4 RET
	0x034A26D8 SUB X31, X31, 0xB0
	0x034A26DC STR X30, [X31 + 0x70]
	0x034A26E0 STP X24, X23, [X31 + 0x80]
	0x034A26E4 STP X22, X21, [X31 + 0x90]
	0x034A26E8 STP X20, X19, [X31 + 0xA0]
	0x034A26EC ADRP X24, 0xF3B000
	0x034A26F0 ADRP X23, 0xC54000
	0x034A26F4 LDRB W8, [X24 + 0x9DB]
	0x034A26F8 LDR X23, [X23 + 0x280]
	0x034A26FC MOV X20, X3
	0x034A2700 MOV X19, X2
	0x034A2704 MOV X21, X1
	0x034A2708 MOV X22, X0
	0x034A270C TBNZ X8, 0x0, 0x34A2730
	0x034A2710 ADRP X0, 0xC8F000
	0x034A2714 LDR X0, [X0 + 0xCC8]
	0x034A2718 BL 0x1C16CF4
	0x034A271C ADRP X0, 0xC54000
	0x034A2720 LDR X0, [X0 + 0x280]
	0x034A2724 BL 0x1C16CF4
	0x034A2728 MOVZ W8, 0x1
	0x034A272C STRB W8, [X24 + 0x9DB]
	0x034A2730 LDR X0, [X23]
	0x034A2734 MOVI V0.2D, 0x0
	0x034A2738 STR X31, [X31 + 0x60]
	0x034A273C STP V0, V0, [X31 + 0x40]
	0x034A2740 STP V0, V0, [X31 + 0x20]
	0x034A2744 ADRP X23, 0xC8F000
	0x034A2748 LDR W8, [X0 + 0xE0]
	0x034A274C LDR X23, [X23 + 0xCC8]
	0x034A2750 CBNZ W8, 0x34A2758
	0x034A2754 BL 0x1C16DFC
	0x034A2758 ADD X8, X31, 0x8
	0x034A275C MOV X0, X31
	0x034A2760 BL 0x32C4770
	0x034A2764 LDUR V0, [X31 + 0x8]
	0x034A2768 LDR X9, [X31 + 0x18]
	0x034A276C LDR X2, [X23]
	0x034A2770 ADD X8, X31, 0x20
	0x034A2774 STP X19, X20, [X31 + 0x40]
	0x034A2778 ORR X20, X8, 0xF
	0x034A277C MOVN W10, 0x0
	0x034A2780 ADD X1, X31, 0x20
	0x034A2784 MOV X0, X20
	0x034A2788 STP X22, X21, [X31 + 0x50]
	0x034A278C STUR V0, [X31 + 0x28]
	0x034A2790 STR X9, [X31 + 0x38]
	0x034A2794 STR W10, [X31 + 0x20]
	0x034A2798 BL 0x218F7B8
	0x034A279C MOV X0, X20
	0x034A27A0 MOV X1, X31
	0x034A27A4 BL 0x32C47F8
	0x034A27A8 LDP X20, X19, [X31 + 0xA0]
	0x034A27AC LDP X22, X21, [X31 + 0x90]
	0x034A27B0 LDP X24, X23, [X31 + 0x80]
	0x034A27B4 LDR X30, [X31 + 0x70]
	0x034A27B8 ADD X31, X31, 0xB0
	0x034A27BC RET
	0x034A27C0 SUB X31, X31, 0x80
	0x034A27C4 STR X30, [X31 + 0x40]
	0x034A27C8 STP X24, X23, [X31 + 0x50]
	0x034A27CC STP X22, X21, [X31 + 0x60]
	0x034A27D0 STP X20, X19, [X31 + 0x70]
	0x034A27D4 ADRP X23, 0xF3B000
	0x034A27D8 ADRP X22, 0xC8F000
	0x034A27DC LDRB W8, [X23 + 0x9DC]
	0x034A27E0 LDR X22, [X22 + 0xCD0]
	0x034A27E4 MOV X19, X2
	0x034A27E8 MOV X21, X1
	0x034A27EC MOV X20, X0
	0x034A27F0 TBNZ X8, 0x0, 0x34A282C
	0x034A27F4 ADRP X0, 0xC8F000
	0x034A27F8 LDR X0, [X0 + 0xCD8]
	0x034A27FC BL 0x1C16CF4
	0x034A2800 ADRP X0, 0xC8F000
	0x034A2804 LDR X0, [X0 + 0xCE0]
	0x034A2808 BL 0x1C16CF4
	0x034A280C ADRP X0, 0xC8F000
	0x034A2810 LDR X0, [X0 + 0xCE8]
	0x034A2814 BL 0x1C16CF4
	0x034A2818 ADRP X0, 0xC8F000
	0x034A281C LDR X0, [X0 + 0xCD0]
	0x034A2820 BL 0x1C16CF4
	0x034A2824 MOVZ W8, 0x1
	0x034A2828 STRB W8, [X23 + 0x9DC]
	0x034A282C LDR X0, [X22]
	0x034A2830 MOVI V0.2D, 0x0
	0x034A2834 STP V0, V0, [X31 + 0x20]
	0x034A2838 STP V0, V0, [X31]
	0x034A283C ADRP X22, 0xC8F000
	0x034A2840 ADRP X24, 0xC8F000
	0x034A2844 ADRP X23, 0xC8F000
	0x034A2848 LDR W8, [X0 + 0xE0]
	0x034A284C LDR X22, [X22 + 0xCD8]
	0x034A2850 LDR X24, [X24 + 0xCE0]
	0x034A2854 LDR X23, [X23 + 0xCE8]
	0x034A2858 CBNZ W8, 0x34A2860
	0x034A285C BL 0x1C16DFC
	0x034A2860 LDR X0, [X22]
	0x034A2864 ADD X8, X31, 0x0
	0x034A2868 ORR X22, X8, 0xF
	0x034A286C MOV X8, X22
	0x034A2870 BL 0x263221C
	0x034A2874 LDR X2, [X24]
	0x034A2878 MOVN W8, 0x0
	0x034A287C ADD X1, X31, 0x0
	0x034A2880 MOV X0, X22
	0x034A2884 STP X20, X21, [X31 + 0x28]
	0x034A2888 STR X19, [X31 + 0x20]
	0x034A288C STR W8, [X31]
	0x034A2890 BL 0x1FCB414
	0x034A2894 LDR X1, [X23]
	0x034A2898 MOV X0, X22
	0x034A289C BL 0x2632230
	0x034A28A0 LDP X20, X19, [X31 + 0x70]
	0x034A28A4 LDP X22, X21, [X31 + 0x60]
	0x034A28A8 LDP X24, X23, [X31 + 0x50]
	0x034A28AC LDR X30, [X31 + 0x40]
	0x034A28B0 ADD X31, X31, 0x80
	0x034A28B4 RET
	0x034A28B8 SUB X31, X31, 0xB0
	0x034A28BC STR X30, [X31 + 0x70]
	0x034A28C0 STP X24, X23, [X31 + 0x80]
	0x034A28C4 STP X22, X21, [X31 + 0x90]
	0x034A28C8 STP X20, X19, [X31 + 0xA0]
	0x034A28CC ADRP X24, 0xF3B000
	0x034A28D0 ADRP X23, 0xC54000
	0x034A28D4 LDRB W8, [X24 + 0x9DD]
	0x034A28D8 LDR X23, [X23 + 0x280]
	0x034A28DC MOV X20, X3
	0x034A28E0 MOV X19, X2
	0x034A28E4 MOV X21, X1
	0x034A28E8 MOV X22, X0
	0x034A28EC TBNZ X8, 0x0, 0x34A2910
	0x034A28F0 ADRP X0, 0xC8F000
	0x034A28F4 LDR X0, [X0 + 0xCF0]
	0x034A28F8 BL 0x1C16CF4
	0x034A28FC ADRP X0, 0xC54000
	0x034A2900 LDR X0, [X0 + 0x280]
	0x034A2904 BL 0x1C16CF4
	0x034A2908 MOVZ W8, 0x1
	0x034A290C STRB W8, [X24 + 0x9DD]
	0x034A2910 LDR X0, [X23]
	0x034A2914 MOVI V0.2D, 0x0
	0x034A2918 STR X31, [X31 + 0x60]
	0x034A291C STP V0, V0, [X31 + 0x40]
	0x034A2920 STP V0, V0, [X31 + 0x20]
	0x034A2924 ADRP X23, 0xC8F000
	0x034A2928 LDR W8, [X0 + 0xE0]
	0x034A292C LDR X23, [X23 + 0xCF0]
	0x034A2930 CBNZ W8, 0x34A2938
	0x034A2934 BL 0x1C16DFC
	0x034A2938 ADD X8, X31, 0x8
	0x034A293C MOV X0, X31
	0x034A2940 BL 0x32C4770
	0x034A2944 LDUR V0, [X31 + 0x8]
	0x034A2948 LDR X9, [X31 + 0x18]
	0x034A294C LDR X2, [X23]
	0x034A2950 ADD X8, X31, 0x20
	0x034A2954 STP X19, X20, [X31 + 0x40]
	0x034A2958 ORR X20, X8, 0xF
	0x034A295C MOVN W10, 0x0
	0x034A2960 ADD X1, X31, 0x20
	0x034A2964 MOV X0, X20
	0x034A2968 STP X22, X21, [X31 + 0x50]
	0x034A296C STUR V0, [X31 + 0x28]
	0x034A2970 STR X9, [X31 + 0x38]
	0x034A2974 STR W10, [X31 + 0x20]
	0x034A2978 BL 0x218F8B8
	0x034A297C MOV X0, X20
	0x034A2980 MOV X1, X31
	0x034A2984 BL 0x32C47F8
	0x034A2988 LDP X20, X19, [X31 + 0xA0]
	0x034A298C LDP X22, X21, [X31 + 0x90]
	0x034A2990 LDP X24, X23, [X31 + 0x80]
	0x034A2994 LDR X30, [X31 + 0x70]
	0x034A2998 ADD X31, X31, 0xB0
	0x034A299C RET
	0x034A29A0 SUB X31, X31, 0x90
	0x034A29A4 STP X30, X23, [X31 + 0x60]
	0x034A29A8 STP X22, X21, [X31 + 0x70]
	0x034A29AC STP X20, X19, [X31 + 0x80]
	0x034A29B0 ADRP X23, 0xF3B000
	0x034A29B4 ADRP X22, 0xC54000
	0x034A29B8 LDRB W8, [X23 + 0x9DE]
	0x034A29BC LDR X22, [X22 + 0x280]
	0x034A29C0 MOV X19, X2
	0x034A29C4 MOV X20, X1
	0x034A29C8 MOV X21, X0
	0x034A29CC TBNZ X8, 0x0, 0x34A29F0
	0x034A29D0 ADRP X0, 0xC8F000
	0x034A29D4 LDR X0, [X0 + 0xCF8]
	0x034A29D8 BL 0x1C16CF4
	0x034A29DC ADRP X0, 0xC54000
	0x034A29E0 LDR X0, [X0 + 0x280]
	0x034A29E4 BL 0x1C16CF4
	0x034A29E8 MOVZ W8, 0x1
	0x034A29EC STRB W8, [X23 + 0x9DE]
	0x034A29F0 LDR X0, [X22]
	0x034A29F4 MOVI V0.2D, 0x0
	0x034A29F8 STP V0, V0, [X31 + 0x40]
	0x034A29FC STP V0, V0, [X31 + 0x20]
	0x034A2A00 ADRP X22, 0xC8F000
	0x034A2A04 LDR W8, [X0 + 0xE0]
	0x034A2A08 LDR X22, [X22 + 0xCF8]
	0x034A2A0C CBNZ W8, 0x34A2A14
	0x034A2A10 BL 0x1C16DFC
	0x034A2A14 ADD X8, X31, 0x8
	0x034A2A18 MOV X0, X31
	0x034A2A1C BL 0x32C4770
	0x034A2A20 LDUR V0, [X31 + 0x8]
	0x034A2A24 LDR X9, [X31 + 0x18]
	0x034A2A28 LDR X2, [X22]
	0x034A2A2C ADD X8, X31, 0x20
	0x034A2A30 STP X21, X20, [X31 + 0x48]
	0x034A2A34 ORR X20, X8, 0xF
	0x034A2A38 MOVN W10, 0x0
	0x034A2A3C ADD X1, X31, 0x20
	0x034A2A40 MOV X0, X20
	0x034A2A44 STUR V0, [X31 + 0x28]
	0x034A2A48 STP X9, X19, [X31 + 0x38]
	0x034A2A4C STR W10, [X31 + 0x20]
	0x034A2A50 BL 0x218FEB8
	0x034A2A54 MOV X0, X20
	0x034A2A58 MOV X1, X31
	0x034A2A5C BL 0x32C47F8
	0x034A2A60 LDP X20, X19, [X31 + 0x80]
	0x034A2A64 LDP X22, X21, [X31 + 0x70]
	0x034A2A68 LDP X30, X23, [X31 + 0x60]
	0x034A2A6C ADD X31, X31, 0x90
	0x034A2A70 RET
	0x034A2A74 SUB X31, X31, 0x90
	0x034A2A78 STP X30, X23, [X31 + 0x60]
	0x034A2A7C STP X22, X21, [X31 + 0x70]
	0x034A2A80 STP X20, X19, [X31 + 0x80]
	0x034A2A84 ADRP X23, 0xF3B000
	0x034A2A88 ADRP X22, 0xC54000
	0x034A2A8C LDRB W8, [X23 + 0x9DF]
	0x034A2A90 LDR X22, [X22 + 0x280]
	0x034A2A94 MOV X19, X2
	0x034A2A98 MOV X20, X1
	0x034A2A9C MOV X21, X0
	0x034A2AA0 TBNZ X8, 0x0, 0x34A2AC4
	0x034A2AA4 ADRP X0, 0xC8F000
	0x034A2AA8 LDR X0, [X0 + 0xD00]
	0x034A2AAC BL 0x1C16CF4
	0x034A2AB0 ADRP X0, 0xC54000
	0x034A2AB4 LDR X0, [X0 + 0x280]
	0x034A2AB8 BL 0x1C16CF4
	0x034A2ABC MOVZ W8, 0x1
	0x034A2AC0 STRB W8, [X23 + 0x9DF]
	0x034A2AC4 LDR X0, [X22]
	0x034A2AC8 MOVI V0.2D, 0x0
	0x034A2ACC STP V0, V0, [X31 + 0x40]
	0x034A2AD0 STP V0, V0, [X31 + 0x20]
	0x034A2AD4 ADRP X22, 0xC8F000
	0x034A2AD8 LDR W8, [X0 + 0xE0]
	0x034A2ADC LDR X22, [X22 + 0xD00]
	0x034A2AE0 CBNZ W8, 0x34A2AE8
	0x034A2AE4 BL 0x1C16DFC
	0x034A2AE8 ADD X8, X31, 0x8
	0x034A2AEC MOV X0, X31
	0x034A2AF0 BL 0x32C4770
	0x034A2AF4 LDUR V0, [X31 + 0x8]
	0x034A2AF8 LDR X9, [X31 + 0x18]
	0x034A2AFC LDR X2, [X22]
	0x034A2B00 ADD X8, X31, 0x20
	0x034A2B04 STP X21, X20, [X31 + 0x48]
	0x034A2B08 ORR X20, X8, 0xF
	0x034A2B0C MOVN W10, 0x0
	0x034A2B10 ADD X1, X31, 0x20
	0x034A2B14 MOV X0, X20
	0x034A2B18 STUR V0, [X31 + 0x28]
	0x034A2B1C STP X9, X19, [X31 + 0x38]
	0x034A2B20 STR W10, [X31 + 0x20]
	0x034A2B24 BL 0x218FFB8
	0x034A2B28 MOV X0, X20
	0x034A2B2C MOV X1, X31
	0x034A2B30 BL 0x32C47F8
	0x034A2B34 LDP X20, X19, [X31 + 0x80]
	0x034A2B38 LDP X22, X21, [X31 + 0x70]
	0x034A2B3C LDP X30, X23, [X31 + 0x60]
	0x034A2B40 ADD X31, X31, 0x90
	0x034A2B44 RET
	0x034A2B48 SUB X31, X31, 0xB0
	0x034A2B4C STR X30, [X31 + 0x70]
	0x034A2B50 STP X24, X23, [X31 + 0x80]
	0x034A2B54 STP X22, X21, [X31 + 0x90]
	0x034A2B58 STP X20, X19, [X31 + 0xA0]
	0x034A2B5C ADRP X24, 0xF3B000
	0x034A2B60 ADRP X23, 0xC54000
	0x034A2B64 LDRB W8, [X24 + 0x9E0]
	0x034A2B68 LDR X23, [X23 + 0x280]
	0x034A2B6C MOV X20, X3
	0x034A2B70 MOV X19, X2
	0x034A2B74 MOV X21, X1
	0x034A2B78 MOV X22, X0
	0x034A2B7C TBNZ X8, 0x0, 0x34A2BA0
	0x034A2B80 ADRP X0, 0xC8F000
	0x034A2B84 LDR X0, [X0 + 0xD08]
	0x034A2B88 BL 0x1C16CF4
	0x034A2B8C ADRP X0, 0xC54000
	0x034A2B90 LDR X0, [X0 + 0x280]
	0x034A2B94 BL 0x1C16CF4
	0x034A2B98 MOVZ W8, 0x1
	0x034A2B9C STRB W8, [X24 + 0x9E0]
	0x034A2BA0 LDR X0, [X23]
	0x034A2BA4 MOVI V0.2D, 0x0
	0x034A2BA8 STR X31, [X31 + 0x60]
	0x034A2BAC STP V0, V0, [X31 + 0x40]
	0x034A2BB0 STP V0, V0, [X31 + 0x20]
	0x034A2BB4 ADRP X23, 0xC8F000
	0x034A2BB8 LDR W8, [X0 + 0xE0]
	0x034A2BBC LDR X23, [X23 + 0xD08]
	0x034A2BC0 CBNZ W8, 0x34A2BC8
	0x034A2BC4 BL 0x1C16DFC
	0x034A2BC8 ADD X8, X31, 0x8
	0x034A2BCC MOV X0, X31
	0x034A2BD0 BL 0x32C4770
	0x034A2BD4 LDUR V0, [X31 + 0x8]
	0x034A2BD8 LDR X9, [X31 + 0x18]
	0x034A2BDC LDR X2, [X23]
	0x034A2BE0 ADD X8, X31, 0x20
	0x034A2BE4 STP X19, X20, [X31 + 0x40]
	0x034A2BE8 ORR X20, X8, 0xF
	0x034A2BEC MOVN W10, 0x0
	0x034A2BF0 ADD X1, X31, 0x20
	0x034A2BF4 MOV X0, X20
	0x034A2BF8 STP X22, X21, [X31 + 0x50]
	0x034A2BFC STUR V0, [X31 + 0x28]
	0x034A2C00 STR X9, [X31 + 0x38]
	0x034A2C04 STR W10, [X31 + 0x20]
	0x034A2C08 BL 0x21900B8
	0x034A2C0C MOV X0, X20
	0x034A2C10 MOV X1, X31
	0x034A2C14 BL 0x32C47F8
	0x034A2C18 LDP X20, X19, [X31 + 0xA0]
	0x034A2C1C LDP X22, X21, [X31 + 0x90]
	0x034A2C20 LDP X24, X23, [X31 + 0x80]
	0x034A2C24 LDR X30, [X31 + 0x70]
	0x034A2C28 ADD X31, X31, 0xB0
	0x034A2C2C RET
	0x034A2C30 SUB X31, X31, 0x90
	0x034A2C34 STP X30, X23, [X31 + 0x60]
	0x034A2C38 STP X22, X21, [X31 + 0x70]
	0x034A2C3C STP X20, X19, [X31 + 0x80]
	0x034A2C40 ADRP X23, 0xF3B000
	0x034A2C44 ADRP X22, 0xC54000
	0x034A2C48 LDRB W8, [X23 + 0x9E1]
	0x034A2C4C LDR X22, [X22 + 0x280]
	0x034A2C50 MOV X19, X2
	0x034A2C54 MOV X20, X1
	0x034A2C58 MOV X21, X0
	0x034A2C5C TBNZ X8, 0x0, 0x34A2C80
	0x034A2C60 ADRP X0, 0xC8F000
	0x034A2C64 LDR X0, [X0 + 0xD10]
	0x034A2C68 BL 0x1C16CF4
	0x034A2C6C ADRP X0, 0xC54000
	0x034A2C70 LDR X0, [X0 + 0x280]
	0x034A2C74 BL 0x1C16CF4
	0x034A2C78 MOVZ W8, 0x1
	0x034A2C7C STRB W8, [X23 + 0x9E1]
	0x034A2C80 LDR X0, [X22]
	0x034A2C84 MOVI V0.2D, 0x0
	0x034A2C88 STP V0, V0, [X31 + 0x40]
	0x034A2C8C STP V0, V0, [X31 + 0x20]
	0x034A2C90 ADRP X22, 0xC8F000
	0x034A2C94 LDR W8, [X0 + 0xE0]
	0x034A2C98 LDR X22, [X22 + 0xD10]
	0x034A2C9C CBNZ W8, 0x34A2CA4
	0x034A2CA0 BL 0x1C16DFC
	0x034A2CA4 ADD X8, X31, 0x8
	0x034A2CA8 MOV X0, X31
	0x034A2CAC BL 0x32C4770
	0x034A2CB0 LDUR V0, [X31 + 0x8]
	0x034A2CB4 LDR X9, [X31 + 0x18]
	0x034A2CB8 LDR X2, [X22]
	0x034A2CBC ADD X8, X31, 0x20
	0x034A2CC0 STP X21, X20, [X31 + 0x48]
	0x034A2CC4 ORR X20, X8, 0xF
	0x034A2CC8 MOVN W10, 0x0
	0x034A2CCC ADD X1, X31, 0x20
	0x034A2CD0 MOV X0, X20
	0x034A2CD4 STUR V0, [X31 + 0x28]
	0x034A2CD8 STP X9, X19, [X31 + 0x38]
	0x034A2CDC STR W10, [X31 + 0x20]
	0x034A2CE0 BL 0x21901B8
	0x034A2CE4 MOV X0, X20
	0x034A2CE8 MOV X1, X31
	0x034A2CEC BL 0x32C47F8
	0x034A2CF0 LDP X20, X19, [X31 + 0x80]
	0x034A2CF4 LDP X22, X21, [X31 + 0x70]
	0x034A2CF8 LDP X30, X23, [X31 + 0x60]
	0x034A2CFC ADD X31, X31, 0x90
	0x034A2D00 RET
	0x034A2D04 SUB X31, X31, 0x90

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xF3C000
	015 Move X20, 0xC52000
	016 Move X22, 0xC8C000
	017 Move X24, 0xC52000
	018 Move X21, 0xC8C000
	019 Move W8, [X23+2513]
	020 Move X20, [X20+2440]
	021 Move X22, [X22+3272]
	022 Move X24, [X24+2104]
	023 Move X21, [X21+3384]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {109}
	029 Move X0, 0xC52000
	030 Move X0, [X0+3584]
	031 Call 0x1C17CF4
	032 Move X0, 0xC55000
	033 Move X0, [X0+400]
	034 Call 0x1C17CF4
	035 Move X0, 0xC55000
	036 Move X0, [X0+408]
	037 Call 0x1C17CF4
	038 Move X0, 0xC52000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0xC55000
	042 Move X0, [X0+432]
	043 Call 0x1C17CF4
	044 Move X0, 0xC55000
	045 Move X0, [X0+440]
	046 Call 0x1C17CF4
	047 Move X0, 0xC52000
	048 Move X0, [X0+2760]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8D000
	051 Move X0, [X0+360]
	052 Call 0x1C17CF4
	053 Move X0, 0xC7F000
	054 Move X0, [X0+864]
	055 Call 0x1C17CF4
	056 Move X0, 0xC7F000
	057 Move X0, [X0+4024]
	058 Call 0x1C17CF4
	059 Move X0, 0xC8C000
	060 Move X0, [X0+3464]
	061 Call 0x1C17CF4
	062 Move X0, 0xC8D000
	063 Move X0, [X0+368]
	064 Call 0x1C17CF4
	065 Move X0, 0xC8C000
	066 Move X0, [X0+3288]
	067 Call 0x1C17CF4
	068 Move X0, 0xC5D000
	069 Move X0, [X0+1752]
	070 Call 0x1C17CF4
	071 Move X0, 0xC52000
	072 Move X0, [X0+2104]
	073 Call 0x1C17CF4
	074 Move X0, 0xC90000
	075 Move X0, [X0+3104]
	076 Call 0x1C17CF4
	077 Move X0, 0xC8C000
	078 Move X0, [X0+3328]
	079 Call 0x1C17CF4
	080 Move X0, 0xC8C000
	081 Move X0, [X0+3472]
	082 Call 0x1C17CF4
	083 Move X0, 0xC8C000
	084 Move X0, [X0+3440]
	085 Call 0x1C17CF4
	086 Move X0, 0xC8C000
	087 Move X0, [X0+3272]
	088 Call 0x1C17CF4
	089 Move X0, 0xC8D000
	090 Move X0, [X0+352]
	091 Call 0x1C17CF4
	092 Move X0, 0xC52000
	093 Move X0, [X0+2440]
	094 Call 0x1C17CF4
	095 Move X0, 0xC52000
	096 Move X0, [X0+2120]
	097 Call 0x1C17CF4
	098 Move X0, 0xC8C000
	099 Move X0, [X0+3384]
	100 Call 0x1C17CF4
	101 Move X0, 0xC8C000
	102 Move X0, [X0+3424]
	103 Call 0x1C17CF4
	104 Move X0, 0xC8C000
	105 Move X0, [X0+3632]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X23+2513], W8
	109 Move X0, [X20]
	110 Move X2, [X19+16]
	111 Move X1, [X22]
	112 Move X3, [X24]
	113 Move X4, X31
	114 Call String.Concat, X0, X1, X2, X3
	115 Move X2, [X19+24]
	116 Move X1, [X21]
	117 Move X3, [X24]
	118 Move X4, X31
	119 Call String.Concat, X0, X1, X2, X3
	120 Move X8, [X20]
	121 Move X20, X0
	122 Move X0, X19
	123 Move [X31+8], X8
	124 Call NakamaconsoleUpdateAccountRequest.get_DeviceIds, X0
	125 Compare X0, 0
	126 JumpIfEqual {377}
	127 Move X10, 0xC55000
	128 Move X8, [X0]
	129 Move X10, [X10+400]
	130 Move X21, X0
	131 Move [X31], X20
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Move X1, [X10]
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X21
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X27, 0xC52000
	149 Move X28, 0xC55000
	150 Move X29, 0xC52000
	151 Move X20, 0xC7F000
	152 Move X26, 0xC7F000
	153 Move X25, 0xC5D000
	154 Move X27, [X27+3608]
	155 Move X28, [X28+408]
	156 Move X29, [X29+2760]
	157 Move X20, [X20+864]
	158 Move X26, [X26+4024]
	159 Move X25, [X25+1752]
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X21
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X21, X0
	165 Move X0, [X31+8]
	166 Compare X21, 0
	167 JumpIfEqual {370}
	168 Move X8, [X21]
	169 Move X1, [X27]
	170 Move X22, X0
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X21
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X21
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {243}
	194 Move X8, [X21]
	195 Move X1, [X28]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X21
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X21
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X24, X0
	216 Move X0, [X29]
	217 Move X23, X1
	218 Move W1, 5
	219 Call 0x1C17D6C
	220 Compare X0, 0
	221 JumpIfEqual {372}
	222 Move W8, [X0+24]
	223 Compare W8, 0
	224 JumpIfEqual {374}
	225 Move X9, [X20]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move [X0+32], X9
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move [X0+40], X24
	230 Move X9, [X26]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move [X0+48], X9
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move [X0+56], X23
	235 Move X8, [X25]
	236 Move [X0+64], X8
	237 Move X1, X31
	238 Call String.Concat, X0
	239 Move X1, X0
	240 Move X0, X22
	241 Move X2, X31
	242 Call String.Concat, X0, X1
	243 Move X20, 0xC52000
	244 Move X20, [X20+2104]
	245 Move X23, X31
	246 Compare X21, 0
	247 JumpIfEqual {271}
	248 Move X8, [X21]
	249 Move X10, 0xC52000
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Move X10, [X10+3584]
	252 Move X1, [X10]
	253 Compare X9, 0
	254 JumpIfEqual {261}
	255 Move X10, [X8+176]
	256 Add X10, X10, 8
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Subtract X9, X9, 1
	260 Add X10, X10, 16
	261 Move X0, X21
	262 Move W2, W31
	263 Call 0x1C5D788
	264 NotImplemented "Instruction LDRSW not yet implemented."
	265 Add X8, X8, X9
	266 Add X0, X8, 312
	267 Move X8, [X0]
	268 Move X1, [X0+8]
	269 Move X0, X21
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Compare X23, 0
	272 JumpIfNotEqual {378}
	273 Move X8, 0xC90000
	274 Move X8, [X8+3104]
	275 Move X1, X22
	276 Move X3, X31
	277 Move X0, [X8]
	278 Move X8, 0xC52000
	279 Move X8, [X8+2120]
	280 Move X2, [X8]
	281 Call String.Concat, X0, X1, X2
	282 Move X1, X0
	283 Move X0, [X31]
	284 Move X2, X31
	285 Call String.Concat, X0, X1
	286 Move X8, 0xC8D000
	287 Move X2, [X19+40]
	288 Move X8, [X8+352]
	289 Move X3, [X20]
	290 Move X4, X31
	291 Move X1, [X8]
	292 Call String.Concat, X0, X1, X2, X3
	293 Move X8, 0xC8C000
	294 Move X2, [X19+48]
	295 Move X8, [X8+3424]
	296 Move X3, [X20]
	297 Move X4, X31
	298 Move X1, [X8]
	299 Call String.Concat, X0, X1, X2, X3
	300 Move X8, 0xC8C000
	301 Move X2, [X19+56]
	302 Move X8, [X8+3464]
	303 Move X3, [X20]
	304 Move X4, X31
	305 Move X1, [X8]
	306 Call String.Concat, X0, X1, X2, X3
	307 Move X8, 0xC8C000
	308 Move X2, [X19+64]
	309 Move X8, [X8+3288]
	310 Move X3, [X20]
	311 Move X4, X31
	312 Move X1, [X8]
	313 Call String.Concat, X0, X1, X2, X3
	314 Move X8, 0xC8D000
	315 Move X2, [X19+72]
	316 Move X8, [X8+360]
	317 Move X3, [X20]
	318 Move X4, X31
	319 Move X1, [X8]
	320 Call String.Concat, X0, X1, X2, X3
	321 Move X8, 0xC8C000
	322 Move X2, [X19+80]
	323 Move X8, [X8+3328]
	324 Move X3, [X20]
	325 Move X4, X31
	326 Move X1, [X8]
	327 Call String.Concat, X0, X1, X2, X3
	328 Move X8, 0xC8C000
	329 Move X2, [X19+88]
	330 Move X8, [X8+3472]
	331 Move X3, [X20]
	332 Move X4, X31
	333 Move X1, [X8]
	334 Call String.Concat, X0, X1, X2, X3
	335 Move X8, 0xC8D000
	336 Move X2, [X19+96]
	337 Move X8, [X8+368]
	338 Move X3, [X20]
	339 Move X4, X31
	340 Move X1, [X8]
	341 Call String.Concat, X0, X1, X2, X3
	342 Move X8, 0xC8C000
	343 Move X2, [X19+104]
	344 Move X8, [X8+3632]
	345 Move X3, [X20]
	346 Move X4, X31
	347 Move X1, [X8]
	348 Call String.Concat, X0, X1, X2, X3
	349 Move X8, 0xC8C000
	350 Move X2, [X19+112]
	351 Move X8, [X8+3440]
	352 Move X3, [X20]
	353 Move X20, [X31+96]
	354 Move X19, [X31+104]
	355 Move X22, [X31+80]
	356 Move X21, [X31+88]
	357 Move X1, [X8]
	358 Move X24, [X31+64]
	359 Move X23, [X31+72]
	360 Move X26, [X31+48]
	361 Move X25, [X31+56]
	362 Move X28, [X31+32]
	363 Move X27, [X31+40]
	364 Move X29, [X31+16]
	365 Move X30, [X31+24]
	366 Move X4, X31
	367 Add X31, X31, 112
	368 Call String.Concat, X0, X1, X2, X3
	369 Return X0
	370 Call 0x1C17F20
	371 Call 0x1C17F28
	372 Call 0x1C17F20
	373 Call 0x1C17F28
	374 Call 0x1C17F28
	375 Call 0x1C17F28
	376 Call 0x1C17F28
	377 Call 0x1C17F20
	378 Move X0, X23
	379 Call 0x1C17F18
	380 Move X22, [X31+8]
	381 Move X20, 0xC52000
	382 Move X20, [X20+2104]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Call 0x3EB2AD0
	385 Move X23, [X0]
	386 Call 0x3EB2AE0
	387 Move X19, X0
	388 Move X23, X31
	389 Move X19, X0
	390 Compare X21, 0
	391 JumpIfEqual {415}
	392 Move X8, [X21]
	393 Move X10, 0xC52000
	394 NotImplemented "Instruction LDRH not yet implemented."
	395 Move X10, [X10+3584]
	396 Move X1, [X10]
	397 Compare X9, 0
	398 JumpIfEqual {405}
	399 Move X10, [X8+176]
	400 Add X10, X10, 8
	401 NotImplemented "Instruction LDUR not yet implemented."
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Subtract X9, X9, 1
	404 Add X10, X10, 16
	405 Move X0, X21
	406 Move W2, W31
	407 Call 0x1C5D788
	408 NotImplemented "Instruction LDRSW not yet implemented."
	409 Add X8, X8, X9
	410 Add X0, X8, 312
	411 Move X8, [X0]
	412 Move X1, [X0+8]
	413 Move X0, X21
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Compare X23, 0
	416 JumpIfNotEqual {419}
	417 Move X0, X19
	418 Call 0x1D2D690
	419 Move X0, X23
	420 Call 0x1C17F18
	421 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x034A2D08 STP X30, X23, [X31 + 0x60]
	0x034A2D0C STP X22, X21, [X31 + 0x70]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

