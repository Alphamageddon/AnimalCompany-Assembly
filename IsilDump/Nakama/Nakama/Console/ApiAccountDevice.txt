Type: Nakama.Console.ApiAccountDevice

Method: System.String get_Id()

Disassembly:
	0x0349DACC LDR X20, [X20 + 0xCD0]
	0x0349DAD0 LDR X23, [X23 + 0x9D0]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x0349DAD4 MOV X19, X0
	0x0349DAD8 TBNZ X8, 0x0, 0x349DBB0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x0349DADC ADRP X0, 0xC56000
	0x0349DAE0 LDR X0, [X0 + 0xB58]
	0x0349DAE4 BL 0x1C16CF4
	0x0349DAE8 ADRP X0, 0xC56000
	0x0349DAEC LDR X0, [X0 + 0x758]
	0x0349DAF0 BL 0x1C16CF4
	0x0349DAF4 ADRP X0, 0xC56000
	0x0349DAF8 LDR X0, [X0 + 0x9D0]
	0x0349DAFC BL 0x1C16CF4
	0x0349DB00 ADRP X0, 0xC90000
	0x0349DB04 LDR X0, [X0 + 0xD88]
	0x0349DB08 BL 0x1C16CF4
	0x0349DB0C ADRP X0, 0xC90000
	0x0349DB10 LDR X0, [X0 + 0xEF0]
	0x0349DB14 BL 0x1C16CF4
	0x0349DB18 ADRP X0, 0xC90000
	0x0349DB1C LDR X0, [X0 + 0xCD8]
	0x0349DB20 BL 0x1C16CF4
	0x0349DB24 ADRP X0, 0xC57000
	0x0349DB28 LDR X0, [X0 + 0xEE0]
	0x0349DB2C BL 0x1C16CF4
	0x0349DB30 ADRP X0, 0xC90000
	0x0349DB34 LDR X0, [X0 + 0xDE0]
	0x0349DB38 BL 0x1C16CF4
	0x0349DB3C ADRP X0, 0xC56000
	0x0349DB40 LDR X0, [X0 + 0x838]
	0x0349DB44 BL 0x1C16CF4
	0x0349DB48 ADRP X0, 0xC90000
	0x0349DB4C LDR X0, [X0 + 0xD00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF41000
	005 Move W8, [X20+2472]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC58000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xC58000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2472], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xC58000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xC58000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x0349DB50 BL 0x1C16CF4
	0x0349DB54 ADRP X0, 0xC90000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x0349DB58 LDR X0, [X0 + 0xDE8]
	0x0349DB5C BL 0x1C16CF4

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0349DB60 ADRP X0, 0xC90000
	0x0349DB64 LDR X0, [X0 + 0xE70]
	0x0349DB68 BL 0x1C16CF4
	0x0349DB6C ADRP X0, 0xC90000
	0x0349DB70 LDR X0, [X0 + 0xCE0]
	0x0349DB74 BL 0x1C16CF4
	0x0349DB78 ADRP X0, 0xC90000
	0x0349DB7C LDR X0, [X0 + 0xCC8]
	0x0349DB80 BL 0x1C16CF4
	0x0349DB84 ADRP X0, 0xC56000
	0x0349DB88 LDR X0, [X0 + 0x988]
	0x0349DB8C BL 0x1C16CF4
	0x0349DB90 ADRP X0, 0xC90000
	0x0349DB94 LDR X0, [X0 + 0xEF8]
	0x0349DB98 BL 0x1C16CF4
	0x0349DB9C ADRP X0, 0xC90000
	0x0349DBA0 LDR X0, [X0 + 0xCD0]
	0x0349DBA4 BL 0x1C16CF4
	0x0349DBA8 MOVZ W8, 0x1
	0x0349DBAC STRB W8, [X26 + 0x9AE]
	0x0349DBB0 LDR X0, [X27]
	0x0349DBB4 LDR X2, [X19 + 0x10]
	0x0349DBB8 LDR X1, [X25]
	0x0349DBBC LDR X3, [X22]
	0x0349DBC0 MOV X4, X31
	0x0349DBC4 BL 0x32277C4
	0x0349DBC8 LDR X2, [X19 + 0x18]
	0x0349DBCC LDR X1, [X24]
	0x0349DBD0 LDR X3, [X22]
	0x0349DBD4 MOV X4, X31
	0x0349DBD8 BL 0x32277C4
	0x0349DBDC LDR X2, [X19 + 0x20]
	0x0349DBE0 LDR X1, [X21]
	0x0349DBE4 LDR X3, [X22]
	0x0349DBE8 MOV X4, X31
	0x0349DBEC BL 0x32277C4
	0x0349DBF0 LDR X2, [X19 + 0x28]
	0x0349DBF4 LDR X1, [X20]
	0x0349DBF8 LDR X3, [X22]
	0x0349DBFC MOV X4, X31
	0x0349DC00 BL 0x32277C4
	0x0349DC04 LDR X8, [X23]
	0x0349DC08 MOV X21, X0
	0x0349DC0C MOVZ W1, 0x4
	0x0349DC10 MOV X0, X8
	0x0349DC14 BL 0x1C16D6C
	0x0349DC18 CBZ X0, 0x349DF90
	0x0349DC1C MOV X20, X0
	0x0349DC20 CBZ X21, 0x349DC38
	0x0349DC24 LDR X8, [X20]
	0x0349DC28 MOV X0, X21
	0x0349DC2C LDR X1, [X8 + 0x40]
	0x0349DC30 BL 0x1C16E00
	0x0349DC34 CBZ X0, 0x349DF84
	0x0349DC38 LDR W8, [X20 + 0x18]
	0x0349DC3C CBZ W8, 0x349DF80
	0x0349DC40 ADRP X24, 0xC90000
	0x0349DC44 LDR X24, [X24 + 0xEF8]
	0x0349DC48 STR X21, [X20 + 0x20]
	0x0349DC4C LDR X0, [X24]
	0x0349DC50 CBZ X0, 0x349DC68
	0x0349DC54 LDR X8, [X20]
	0x0349DC58 LDR X1, [X8 + 0x40]
	0x0349DC5C BL 0x1C16E00
	0x0349DC60 CBZ X0, 0x349DF84
	0x0349DC64 LDR W8, [X20 + 0x18]
	0x0349DC68 CMP W8, 0x1
	0x0349DC6C B.LS 0x349DF80
	0x0349DC70 LDR X8, [X24]
	0x0349DC74 ADRP X24, 0xC56000
	0x0349DC78 LDR X24, [X24 + 0x758]
	0x0349DC7C ADD X1, X31, 0xC
	0x0349DC80 STR X8, [X20 + 0x28]
	0x0349DC84 LDR W8, [X19 + 0x30]
	0x0349DC88 LDR X0, [X24]
	0x0349DC8C STR W8, [X31 + 0xC]
	0x0349DC90 BL 0x1C16E04
	0x0349DC94 MOV X21, X0
	0x0349DC98 CBZ X0, 0x349DCB0
	0x0349DC9C LDR X8, [X20]
	0x0349DCA0 MOV X0, X21
	0x0349DCA4 LDR X1, [X8 + 0x40]
	0x0349DCA8 BL 0x1C16E00
	0x0349DCAC CBZ X0, 0x349DF84
	0x0349DCB0 LDR W8, [X20 + 0x18]
	0x0349DCB4 CMP W8, 0x2
	0x0349DCB8 B.LS 0x349DF80
	0x0349DCBC STR X21, [X20 + 0x30]
	0x0349DCC0 LDR X0, [X22]
	0x0349DCC4 CBZ X0, 0x349DCDC
	0x0349DCC8 LDR X8, [X20]
	0x0349DCCC LDR X1, [X8 + 0x40]
	0x0349DCD0 BL 0x1C16E00
	0x0349DCD4 CBZ X0, 0x349DF84
	0x0349DCD8 LDR W8, [X20 + 0x18]
	0x0349DCDC CMP W8, 0x3
	0x0349DCE0 B.LS 0x349DF80
	0x0349DCE4 LDR X8, [X22]
	0x0349DCE8 ADRP X21, 0xC90000
	0x0349DCEC ADRP X25, 0xC90000
	0x0349DCF0 LDR X21, [X21 + 0xD88]
	0x0349DCF4 LDR X25, [X25 + 0xCD8]
	0x0349DCF8 MOV X0, X20
	0x0349DCFC MOV X1, X31
	0x0349DD00 STR X8, [X20 + 0x38]
	0x0349DD04 BL 0x3227578
	0x0349DD08 LDR X2, [X19 + 0x38]
	0x0349DD0C LDR X1, [X21]
	0x0349DD10 LDR X3, [X22]
	0x0349DD14 MOV X4, X31
	0x0349DD18 BL 0x32277C4
	0x0349DD1C LDR X2, [X19 + 0x40]
	0x0349DD20 LDR X1, [X25]
	0x0349DD24 LDR X3, [X22]
	0x0349DD28 MOV X4, X31
	0x0349DD2C BL 0x32277C4
	0x0349DD30 LDR X8, [X23]
	0x0349DD34 MOV X21, X0
	0x0349DD38 MOVZ W1, 0x4
	0x0349DD3C MOV X0, X8
	0x0349DD40 BL 0x1C16D6C
	0x0349DD44 CBZ X0, 0x349DF90
	0x0349DD48 MOV X20, X0
	0x0349DD4C CBZ X21, 0x349DD64
	0x0349DD50 LDR X8, [X20]
	0x0349DD54 MOV X0, X21
	0x0349DD58 LDR X1, [X8 + 0x40]
	0x0349DD5C BL 0x1C16E00
	0x0349DD60 CBZ X0, 0x349DF84
	0x0349DD64 LDR W8, [X20 + 0x18]
	0x0349DD68 CBZ W8, 0x349DF80
	0x0349DD6C ADRP X25, 0xC90000
	0x0349DD70 LDR X25, [X25 + 0xE70]
	0x0349DD74 STR X21, [X20 + 0x20]
	0x0349DD78 LDR X0, [X25]
	0x0349DD7C CBZ X0, 0x349DD94
	0x0349DD80 LDR X8, [X20]
	0x0349DD84 LDR X1, [X8 + 0x40]
	0x0349DD88 BL 0x1C16E00
	0x0349DD8C CBZ X0, 0x349DF84
	0x0349DD90 LDR W8, [X20 + 0x18]
	0x0349DD94 CMP W8, 0x1
	0x0349DD98 B.LS 0x349DF80
	0x0349DD9C LDR X8, [X25]
	0x0349DDA0 ADD X1, X31, 0x8
	0x0349DDA4 STR X8, [X20 + 0x28]
	0x0349DDA8 LDR W8, [X19 + 0x48]
	0x0349DDAC LDR X0, [X24]
	0x0349DDB0 STR W8, [X31 + 0x8]
	0x0349DDB4 BL 0x1C16E04
	0x0349DDB8 MOV X21, X0
	0x0349DDBC CBZ X0, 0x349DDD4
	0x0349DDC0 LDR X8, [X20]
	0x0349DDC4 MOV X0, X21
	0x0349DDC8 LDR X1, [X8 + 0x40]
	0x0349DDCC BL 0x1C16E00
	0x0349DDD0 CBZ X0, 0x349DF84
	0x0349DDD4 LDR W8, [X20 + 0x18]
	0x0349DDD8 CMP W8, 0x2
	0x0349DDDC B.LS 0x349DF80
	0x0349DDE0 STR X21, [X20 + 0x30]
	0x0349DDE4 LDR X0, [X22]
	0x0349DDE8 CBZ X0, 0x349DE00
	0x0349DDEC LDR X8, [X20]
	0x0349DDF0 LDR X1, [X8 + 0x40]
	0x0349DDF4 BL 0x1C16E00
	0x0349DDF8 CBZ X0, 0x349DF84
	0x0349DDFC LDR W8, [X20 + 0x18]
	0x0349DE00 CMP W8, 0x3
	0x0349DE04 B.LS 0x349DF80
	0x0349DE08 LDR X8, [X22]
	0x0349DE0C ADRP X21, 0xC90000
	0x0349DE10 ADRP X24, 0xC57000
	0x0349DE14 LDR X21, [X21 + 0xD00]
	0x0349DE18 LDR X24, [X24 + 0xEE0]
	0x0349DE1C MOV X0, X20
	0x0349DE20 MOV X1, X31
	0x0349DE24 STR X8, [X20 + 0x38]
	0x0349DE28 BL 0x3227578
	0x0349DE2C LDR X2, [X19 + 0x50]
	0x0349DE30 LDR X1, [X21]
	0x0349DE34 LDR X3, [X22]
	0x0349DE38 MOV X4, X31
	0x0349DE3C BL 0x32277C4
	0x0349DE40 LDR X2, [X19 + 0x58]
	0x0349DE44 LDR X1, [X24]
	0x0349DE48 LDR X3, [X22]
	0x0349DE4C MOV X4, X31
	0x0349DE50 BL 0x32277C4
	0x0349DE54 LDR X8, [X23]
	0x0349DE58 MOV X21, X0
	0x0349DE5C MOVZ W1, 0x4
	0x0349DE60 MOV X0, X8
	0x0349DE64 BL 0x1C16D6C
	0x0349DE68 CBZ X0, 0x349DF90
	0x0349DE6C MOV X20, X0
	0x0349DE70 CBZ X21, 0x349DE88
	0x0349DE74 LDR X8, [X20]
	0x0349DE78 MOV X0, X21
	0x0349DE7C LDR X1, [X8 + 0x40]
	0x0349DE80 BL 0x1C16E00
	0x0349DE84 CBZ X0, 0x349DF84
	0x0349DE88 LDR W8, [X20 + 0x18]
	0x0349DE8C CBZ W8, 0x349DF80
	0x0349DE90 ADRP X23, 0xC90000
	0x0349DE94 LDR X23, [X23 + 0xCE0]
	0x0349DE98 STR X21, [X20 + 0x20]
	0x0349DE9C LDR X0, [X23]
	0x0349DEA0 CBZ X0, 0x349DEB8
	0x0349DEA4 LDR X8, [X20]
	0x0349DEA8 LDR X1, [X8 + 0x40]
	0x0349DEAC BL 0x1C16E00
	0x0349DEB0 CBZ X0, 0x349DF84
	0x0349DEB4 LDR W8, [X20 + 0x18]
	0x0349DEB8 CMP W8, 0x1
	0x0349DEBC B.LS 0x349DF80
	0x0349DEC0 LDR X8, [X23]
	0x0349DEC4 ADRP X9, 0xC56000
	0x0349DEC8 LDR X9, [X9 + 0xB58]
	0x0349DECC ADD X1, X31, 0x4
	0x0349DED0 STR X8, [X20 + 0x28]
	0x0349DED4 LDRB W8, [X19 + 0x60]
	0x0349DED8 LDR X0, [X9]
	0x0349DEDC STRB W8, [X31 + 0x4]
	0x0349DEE0 BL 0x1C16E04
	0x0349DEE4 MOV X21, X0
	0x0349DEE8 CBZ X0, 0x349DF00
	0x0349DEEC LDR X8, [X20]
	0x0349DEF0 MOV X0, X21
	0x0349DEF4 LDR X1, [X8 + 0x40]
	0x0349DEF8 BL 0x1C16E00
	0x0349DEFC CBZ X0, 0x349DF84
	0x0349DF00 LDR W8, [X20 + 0x18]
	0x0349DF04 CMP W8, 0x2
	0x0349DF08 B.LS 0x349DF80
	0x0349DF0C STR X21, [X20 + 0x30]
	0x0349DF10 LDR X0, [X22]
	0x0349DF14 CBZ X0, 0x349DF2C
	0x0349DF18 LDR X8, [X20]
	0x0349DF1C LDR X1, [X8 + 0x40]
	0x0349DF20 BL 0x1C16E00
	0x0349DF24 CBZ X0, 0x349DF84
	0x0349DF28 LDR W8, [X20 + 0x18]
	0x0349DF2C CMP W8, 0x3
	0x0349DF30 B.LS 0x349DF80
	0x0349DF34 LDR X8, [X22]
	0x0349DF38 ADRP X21, 0xC90000
	0x0349DF3C LDR X21, [X21 + 0xDE8]
	0x0349DF40 MOV X0, X20
	0x0349DF44 MOV X1, X31
	0x0349DF48 STR X8, [X20 + 0x38]
	0x0349DF4C BL 0x3227578
	0x0349DF50 LDR X2, [X19 + 0x68]
	0x0349DF54 LDR X1, [X21]
	0x0349DF58 LDR X3, [X22]
	0x0349DF5C MOV X4, X31
	0x0349DF60 BL 0x32277C4
	0x0349DF64 LDP X20, X19, [X31 + 0x50]
	0x0349DF68 LDP X22, X21, [X31 + 0x40]
	0x0349DF6C LDP X24, X23, [X31 + 0x30]
	0x0349DF70 LDP X26, X25, [X31 + 0x20]
	0x0349DF74 LDP X30, X27, [X31 + 0x10]
	0x0349DF78 ADD X31, X31, 0x60
	0x0349DF7C RET
	0x0349DF80 BL 0x1C16F28
	0x0349DF84 BL 0x1C16F44
	0x0349DF88 MOV X1, X31
	0x0349DF8C BL 0x1C16DEC
	0x0349DF90 BL 0x1C16F20
	0x0349DF94 MOV X1, X31
	0x0349DF98 B 0x33BDD8C
	0x0349DF9C LDR X0, [X0 + 0x10]
	0x0349DFA0 RET
	0x0349DFA4 STR X1, [X0 + 0x10]
	0x0349DFA8 RET
	0x0349DFAC LDR X0, [X0 + 0x18]
	0x0349DFB0 RET
	0x0349DFB4 STR X1, [X0 + 0x18]
	0x0349DFB8 RET
	0x0349DFBC LDR X0, [X0 + 0x20]
	0x0349DFC0 RET
	0x0349DFC4 STR X1, [X0 + 0x20]
	0x0349DFC8 RET
	0x0349DFCC LDR W0, [X0 + 0x28]
	0x0349DFD0 RET
	0x0349DFD4 STR W1, [X0 + 0x28]
	0x0349DFD8 RET
	0x0349DFDC LDR X0, [X0 + 0x30]
	0x0349DFE0 RET
	0x0349DFE4 STR X1, [X0 + 0x30]
	0x0349DFE8 RET
	0x0349DFEC LDR W0, [X0 + 0x38]
	0x0349DFF0 RET
	0x0349DFF4 STR W1, [X0 + 0x38]
	0x0349DFF8 RET
	0x0349DFFC LDR X0, [X0 + 0x40]
	0x0349E000 RET
	0x0349E004 STR X1, [X0 + 0x40]
	0x0349E008 RET
	0x0349E00C LDR X0, [X0 + 0x48]
	0x0349E010 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xF41000
	015 Move X19, 0xC57000
	016 Move X21, 0xC91000
	017 Move X22, 0xC57000
	018 Move W8, [X23+2473]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3464]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xC57000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xC5A000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xC5A000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xC57000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xC5A000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xC5A000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xC57000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xC84000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xC84000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xC91000
	055 Move X0, [X0+3464]
	056 Call 0x1C17CF4
	057 Move X0, 0xC62000
	058 Move X0, [X0+1752]
	059 Call 0x1C17CF4
	060 Move X0, 0xC91000
	061 Move X0, [X0+3456]
	062 Call 0x1C17CF4
	063 Move X0, 0xC57000
	064 Move X0, [X0+2104]
	065 Call 0x1C17CF4
	066 Move X0, 0xC57000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xC57000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+2473], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiAccountDevice.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xC5A000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xC57000
	107 Move X29, 0xC5A000
	108 Move X26, 0xC57000
	109 Move X24, 0xC84000
	110 Move X25, 0xC84000
	111 Move X19, 0xC62000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xC57000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xC91000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xC57000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xC57000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0349E014 STR X1, [X0 + 0x48]
	0x0349E018 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

