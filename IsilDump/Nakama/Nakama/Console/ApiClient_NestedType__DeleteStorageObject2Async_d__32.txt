Type: Nakama.Console.ApiClient/<DeleteStorageObject2Async>d__32

Method: System.Void MoveNext()

Disassembly:
	0x034A6E8C LDR X3, [X9]
	0x034A6E90 MOV X0, X22
	0x034A6E94 BL 0x2AA5098
	0x034A6E98 LDR X23, [X24 + 0x20]
	0x034A6E9C CBZ X23, 0x34A7008
	0x034A6EA0 ADRP X10, 0xC88000
	0x034A6EA4 LDR X8, [X23]
	0x034A6EA8 LDR X10, [X10 + 0x7B8]
	0x034A6EAC LDR W24, [X24 + 0x18]
	0x034A6EB0 LDRH W9, [X8 + 0x12E]
	0x034A6EB4 LDR X1, [X10]
	0x034A6EB8 CBZ X9, 0x34A6EDC
	0x034A6EBC LDR X10, [X8 + 0xB0]
	0x034A6EC0 ADD X10, X10, 0x8
	0x034A6EC4 LDUR X11, [X10 - 0x8]
	0x034A6EC8 CMP X11, X1
	0x034A6ECC B.EQ 0x34A6F04
	0x034A6ED0 SUBS X9, X9, 0x1
	0x034A6ED4 ADD X10, X10, 0x10
	0x034A6ED8 B.NE 0x34A6EC4
	0x034A6EDC MOVZ W2, 0x3
	0x034A6EE0 MOV X0, X23
	0x034A6EE4 BL 0x1C5C788
	0x034A6EE8 B 0x34A6F14
	0x034A6EEC LDR X8, [X19 + 0x30]
	0x034A6EF0 MOVN W9, 0x0
	0x034A6EF4 STR X8, [X31 + 0x8]
	0x034A6EF8 STR X31, [X19 + 0x30]
	0x034A6EFC STR W9, [X19]
	0x034A6F00 B 0x34A6F70
	0x034A6F04 LDR W9, [X10]
	0x034A6F08 ADD W9, W9, 0x3
	0x034A6F0C ADD X8, X8, W9, 0x4, SXTW
	0x034A6F10 ADD X0, X8, 0x138
	0x034A6F14 LDP X8, X9, [X0]
	0x034A6F18 MOV X0, X23
	0x034A6F1C MOV X1, X21
	0x034A6F20 MOV X2, X20
	0x034A6F24 MOV X3, X22
	0x034A6F28 MOV X4, X31
	0x034A6F2C MOV W5, W24
	0x034A6F30 MOV X6, X31
	0x034A6F34 MOV X7, X31
	0x034A6F38 STR X9, [X31]
	0x034A6F3C BLR X8
	0x034A6F40 CBZ X0, 0x34A700C
	0x034A6F44 ADRP X8, 0xC50000
	0x034A6F48 LDR X8, [X8 + 0x1F8]
	0x034A6F4C LDR X1, [X8]
	0x034A6F50 BL 0x269F5D0
	0x034A6F54 ADRP X8, 0xC50000
	0x034A6F58 LDR X8, [X8 + 0x1F0]
	0x034A6F5C STR X0, [X31 + 0x8]
	0x034A6F60 LDR X1, [X8]
	0x034A6F64 ADD X0, X31, 0x8
	0x034A6F68 BL 0x2677430
	0x034A6F6C TBZ X0, 0x0, 0x34A6FAC
	0x034A6F70 ADRP X8, 0xC50000
	0x034A6F74 LDR X8, [X8 + 0x1E0]
	0x034A6F78 ADD X0, X31, 0x8
	0x034A6F7C LDR X1, [X8]
	0x034A6F80 BL 0x2677474
	0x034A6F84 MOVN W8, 0x1
	0x034A6F88 STR W8, [X19], #0x8
	0x034A6F8C LDR X0, [X25]
	0x034A6F90 LDR W8, [X0 + 0xE0]
	0x034A6F94 CBNZ W8, 0x34A6F9C
	0x034A6F98 BL 0x1C16DFC
	0x034A6F9C MOV X0, X19
	0x034A6FA0 MOV X1, X31
	0x034A6FA4 BL 0x32C4864
	0x034A6FA8 B 0x34A6FE4
	0x034A6FAC STR W31, [X19]
	0x034A6FB0 LDR X8, [X31 + 0x8]
	0x034A6FB4 STR X8, [X19 + 0x30]
	0x034A6FB8 LDR X0, [X25]
	0x034A6FBC LDR W8, [X0 + 0xE0]
	0x034A6FC0 CBNZ W8, 0x34A6FC8
	0x034A6FC4 BL 0x1C16DFC
	0x034A6FC8 ADRP X8, 0xC8B000
	0x034A6FCC LDR X8, [X8 + 0xF90]
	0x034A6FD0 ADD X0, X19, 0x8
	0x034A6FD4 LDR X3, [X8]
	0x034A6FD8 ADD X1, X31, 0x8
	0x034A6FDC MOV X2, X19
	0x034A6FE0 BL 0x218755C
	0x034A6FE4 LDP X20, X19, [X31 + 0x40]
	0x034A6FE8 LDP X22, X21, [X31 + 0x30]
	0x034A6FEC LDP X24, X23, [X31 + 0x20]
	0x034A6FF0 LDP X30, X25, [X31 + 0x10]
	0x034A6FF4 ADD X31, X31, 0x50
	0x034A6FF8 RET
	0x034A6FFC BL 0x1C16F20
	0x034A7000 BL 0x1C16F20
	0x034A7004 BL 0x1C16F20
	0x034A7008 BL 0x1C16F20
	0x034A700C BL 0x1C16F20
	0x034A7010 B 0x34A7044
	0x034A7014 B 0x34A7044
	0x034A7018 B 0x34A7044
	0x034A701C B 0x34A7044
	0x034A7020 B 0x34A7044
	0x034A7024 B 0x34A7044
	0x034A7028 B 0x34A7044
	0x034A702C B 0x34A7044
	0x034A7030 B 0x34A7044
	0x034A7034 B 0x34A7044
	0x034A7038 B 0x34A7044
	0x034A703C B 0x34A7044
	0x034A7040 B 0x34A7044
	0x034A7044 MOV X20, X0
	0x034A7048 CMP W1, 0x1
	0x034A704C B.NE 0x34A70DC
	0x034A7050 MOV X0, X20
	0x034A7054 BL 0x3EB1AD0
	0x034A7058 MOV X20, X0
	0x034A705C ADRP X0, 0xC4C000
	0x034A7060 LDR X0, [X0 + 0x7D0]
	0x034A7064 BL 0x1C16D08
	0x034A7068 LDR X8, [X20]
	0x034A706C LDR X1, [X8]
	0x034A7070 BL 0x1C17270
	0x034A7074 TBZ X0, 0x0, 0x34A70B4
	0x034A7078 LDR X20, [X20]
	0x034A707C BL 0x3EB1AE0
	0x034A7080 MOVN W8, 0x1
	0x034A7084 STR W8, [X19], #0x8
	0x034A7088 ADRP X0, 0xC4F000
	0x034A708C LDR X0, [X0 + 0x280]
	0x034A7090 BL 0x1C16D08
	0x034A7094 LDR W8, [X0 + 0xE0]
	0x034A7098 CBNZ W8, 0x34A70A0
	0x034A709C BL 0x1C16DFC
	0x034A70A0 MOV X0, X19
	0x034A70A4 MOV X1, X20
	0x034A70A8 MOV X2, X31
	0x034A70AC BL 0x32C4908
	0x034A70B0 B 0x34A6FE4
	0x034A70B4 MOVZ W0, 0x8
	0x034A70B8 BL 0x3EB1AF0
	0x034A70BC LDR X8, [X20]
	0x034A70C0 STR X8, [X0]
	0x034A70C4 ADRP X1, 0xA0D000
	0x034A70C8 ADD X1, X1, 0xE58
	0x034A70CC MOV X2, X31
	0x034A70D0 BL 0x3EB1B00
	0x034A70D4 MOV X20, X0
	0x034A70D8 BL 0x3EB1AE0
	0x034A70DC MOV X0, X20
	0x034A70E0 BL 0x1D2C690
	0x034A70E4 BL 0x1990590
	0x034A70E8 STR X30, [X31 - 0x30]!
	0x034A70EC STP X22, X21, [X31 + 0x10]
	0x034A70F0 STP X20, X19, [X31 + 0x20]
	0x034A70F4 ADRP X21, 0xF36000
	0x034A70F8 ADRP X22, 0xC4F000
	0x034A70FC LDRB W8, [X21 + 0xA05]
	0x034A7100 LDR X22, [X22 + 0x280]
	0x034A7104 MOV X19, X1
	0x034A7108 MOV X20, X0
	0x034A710C TBNZ X8, 0x0, 0x34A7124
	0x034A7110 ADRP X0, 0xC4F000
	0x034A7114 LDR X0, [X0 + 0x280]
	0x034A7118 BL 0x1C16CF4
	0x034A711C MOVZ W8, 0x1
	0x034A7120 STRB W8, [X21 + 0xA05]
	0x034A7124 LDR X0, [X22]
	0x034A7128 LDR W8, [X0 + 0xE0]
	0x034A712C CBNZ W8, 0x34A7134
	0x034A7130 BL 0x1C16DFC
	0x034A7134 ADD X0, X20, 0x8
	0x034A7138 MOV X1, X19
	0x034A713C LDP X20, X19, [X31 + 0x20]
	0x034A7140 LDP X22, X21, [X31 + 0x10]
	0x034A7144 MOV X2, X31
	0x034A7148 LDR X30, [X31], #0x30
	0x034A714C B 0x32C477C
	0x034A7150 SUB X31, X31, 0x50
	0x034A7154 STP X30, X25, [X31 + 0x10]
	0x034A7158 STP X24, X23, [X31 + 0x20]
	0x034A715C STP X22, X21, [X31 + 0x30]
	0x034A7160 STP X20, X19, [X31 + 0x40]
	0x034A7164 ADRP X20, 0xF36000
	0x034A7168 LDRB W8, [X20 + 0xA06]
	0x034A716C MOV X19, X0
	0x034A7170 TBNZ X8, 0x0, 0x34A7254
	0x034A7174 ADRP X0, 0xC8A000
	0x034A7178 LDR X0, [X0 + 0xFA0]
	0x034A717C BL 0x1C16CF4
	0x034A7180 ADRP X0, 0xC4F000
	0x034A7184 LDR X0, [X0 + 0x280]
	0x034A7188 BL 0x1C16CF4
	0x034A718C ADRP X0, 0xC4D000
	0x034A7190 LDR X0, [X0 + 0x810]
	0x034A7194 BL 0x1C16CF4
	0x034A7198 ADRP X0, 0xC4D000
	0x034A719C LDR X0, [X0 + 0x6C0]
	0x034A71A0 BL 0x1C16CF4
	0x034A71A4 ADRP X0, 0xC4D000
	0x034A71A8 LDR X0, [X0 + 0x6D0]
	0x034A71AC BL 0x1C16CF4
	0x034A71B0 ADRP X0, 0xC87000
	0x034A71B4 LDR X0, [X0 + 0x7B8]
	0x034A71B8 BL 0x1C16CF4
	0x034A71BC ADRP X0, 0xC4F000
	0x034A71C0 LDR X0, [X0 + 0x1E0]
	0x034A71C4 BL 0x1C16CF4
	0x034A71C8 ADRP X0, 0xC4F000
	0x034A71CC LDR X0, [X0 + 0x1F0]
	0x034A71D0 BL 0x1C16CF4
	0x034A71D4 ADRP X0, 0xC4F000
	0x034A71D8 LDR X0, [X0 + 0x1F8]
	0x034A71DC BL 0x1C16CF4
	0x034A71E0 ADRP X0, 0xC55000
	0x034A71E4 LDR X0, [X0 + 0x3A0]
	0x034A71E8 BL 0x1C16CF4
	0x034A71EC ADRP X0, 0xC4E000
	0x034A71F0 LDR X0, [X0 + 0xA28]
	0x034A71F4 BL 0x1C16CF4
	0x034A71F8 ADRP X0, 0xC8A000
	0x034A71FC LDR X0, [X0 + 0xFA8]
	0x034A7200 BL 0x1C16CF4
	0x034A7204 ADRP X0, 0xC87000
	0x034A7208 LDR X0, [X0 + 0x7D0]
	0x034A720C BL 0x1C16CF4
	0x034A7210 ADRP X0, 0xC88000
	0x034A7214 LDR X0, [X0 + 0x2E8]
	0x034A7218 BL 0x1C16CF4
	0x034A721C ADRP X0, 0xC8A000
	0x034A7220 LDR X0, [X0 + 0xFB0]
	0x034A7224 BL 0x1C16CF4
	0x034A7228 ADRP X0, 0xC87000
	0x034A722C LDR X0, [X0 + 0x7D8]
	0x034A7230 BL 0x1C16CF4
	0x034A7234 ADRP X0, 0xC4C000
	0x034A7238 LDR X0, [X0 + 0x988]
	0x034A723C BL 0x1C16CF4
	0x034A7240 ADRP X0, 0xC75000
	0x034A7244 LDR X0, [X0 + 0x4C8]
	0x034A7248 BL 0x1C16CF4
	0x034A724C MOVZ W8, 0x1
	0x034A7250 STRB W8, [X20 + 0xA06]
	0x034A7254 STR X31, [X31 + 0x8]
	0x034A7258 ADRP X25, 0xC4F000
	0x034A725C LDR W8, [X19]
	0x034A7260 LDR X25, [X25 + 0x280]
	0x034A7264 CBZ W8, 0x34A742C
	0x034A7268 LDR X21, [X19 + 0x20]
	0x034A726C CBZ X21, 0x34A753C
	0x034A7270 LDR X8, [X19 + 0x28]
	0x034A7274 CBZ X8, 0x34A7584
	0x034A7278 ADRP X8, 0xC4E000
	0x034A727C LDR X8, [X8 + 0xA28]
	0x034A7280 LDR X0, [X8]
	0x034A7284 ADRP X8, 0xC8A000
	0x034A7288 LDR X8, [X8 + 0xFB0]
	0x034A728C LDR X24, [X19 + 0x30]
	0x034A7290 LDR W9, [X0 + 0xE0]
	0x034A7294 LDR X20, [X8]
	0x034A7298 CBNZ W9, 0x34A72A0
	0x034A729C BL 0x1C16DFC
	0x034A72A0 MOV X0, X21
	0x034A72A4 MOV X1, X31
	0x034A72A8 BL 0x3624D20
	0x034A72AC CBZ X20, 0x34A75CC
	0x034A72B0 ADRP X8, 0xC88000
	0x034A72B4 LDR X8, [X8 + 0x2E8]
	0x034A72B8 MOV X2, X0
	0x034A72BC LDR X1, [X8]
	0x034A72C0 MOV X0, X20
	0x034A72C4 MOV X3, X31
	0x034A72C8 BL 0x32293BC
	0x034A72CC MOV X20, X0
	0x034A72D0 LDR X0, [X19 + 0x28]
	0x034A72D4 MOV X1, X31
	0x034A72D8 BL 0x3624D20
	0x034A72DC CBZ X20, 0x34A75D0
	0x034A72E0 ADRP X8, 0xC8A000
	0x034A72E4 LDR X8, [X8 + 0xFA8]
	0x034A72E8 MOV X2, X0
	0x034A72EC LDR X1, [X8]
	0x034A72F0 MOV X0, X20
	0x034A72F4 MOV X3, X31
	0x034A72F8 BL 0x32293BC
	0x034A72FC CBZ X24, 0x34A75D4
	0x034A7300 ADRP X8, 0xC4C000
	0x034A7304 ADRP X9, 0xC55000
	0x034A7308 LDR X8, [X8 + 0x988]
	0x034A730C LDR X9, [X9 + 0x3A0]
	0x034A7310 MOV X22, X0
	0x034A7314 LDR X23, [X24 + 0x10]
	0x034A7318 LDR X21, [X8]
	0x034A731C LDR X0, [X9]
	0x034A7320 BL 0x1C16F10
	0x034A7324 MOV X20, X0
	0x034A7328 MOV X1, X23
	0x034A732C MOV X2, X31
	0x034A7330 BL 0x36281F8
	0x034A7334 CBZ X20, 0x34A75D8
	0x034A7338 MOV X0, X20
	0x034A733C MOV X1, X22
	0x034A7340 MOV X2, X31
	0x034A7344 BL 0x36288CC
	0x034A7348 MOV X0, X20
	0x034A734C MOV X1, X21
	0x034A7350 MOV X2, X31
	0x034A7354 BL 0x3628980
	0x034A7358 MOV X0, X20
	0x034A735C MOV X1, X31
	0x034A7360 BL 0x3628A38
	0x034A7364 ADRP X8, 0xC75000
	0x034A7368 ADRP X9, 0xC4D000
	0x034A736C LDR X8, [X8 + 0x4C8]
	0x034A7370 LDR X9, [X9 + 0x6D0]
	0x034A7374 MOV X20, X0
	0x034A7378 LDR X21, [X8]
	0x034A737C LDR X0, [X9]
	0x034A7380 BL 0x1C16F10
	0x034A7384 ADRP X8, 0xC4D000
	0x034A7388 LDR X8, [X8 + 0x6C0]
	0x034A738C MOV X22, X0
	0x034A7390 LDR X1, [X8]
	0x034A7394 BL 0x2AA4804
	0x034A7398 ADRP X8, 0xC87000
	0x034A739C LDR X8, [X8 + 0x7D8]
	0x034A73A0 LDR X1, [X19 + 0x38]
	0x034A73A4 LDR X0, [X8]
	0x034A73A8 MOV X2, X31
	0x034A73AC BL 0x321B938
	0x034A73B0 CBZ X22, 0x34A75DC
	0x034A73B4 ADRP X8, 0xC87000
	0x034A73B8 LDR X8, [X8 + 0x7D0]
	0x034A73BC ADRP X9, 0xC4D000
	0x034A73C0 LDR X9, [X9 + 0x810]
	0x034A73C4 MOV X2, X0
	0x034A73C8 LDR X1, [X8]
	0x034A73CC LDR X3, [X9]
	0x034A73D0 MOV X0, X22
	0x034A73D4 BL 0x2AA5098
	0x034A73D8 LDR X23, [X24 + 0x20]
	0x034A73DC CBZ X23, 0x34A75E0
	0x034A73E0 ADRP X10, 0xC87000
	0x034A73E4 LDR X8, [X23]
	0x034A73E8 LDR X10, [X10 + 0x7B8]
	0x034A73EC LDR W24, [X24 + 0x18]
	0x034A73F0 LDRH W9, [X8 + 0x12E]
	0x034A73F4 LDR X1, [X10]
	0x034A73F8 CBZ X9, 0x34A741C
	0x034A73FC LDR X10, [X8 + 0xB0]
	0x034A7400 ADD X10, X10, 0x8
	0x034A7404 LDUR X11, [X10 - 0x8]
	0x034A7408 CMP X11, X1
	0x034A740C B.EQ 0x34A7444
	0x034A7410 SUBS X9, X9, 0x1
	0x034A7414 ADD X10, X10, 0x10
	0x034A7418 B.NE 0x34A7404
	0x034A741C MOVZ W2, 0x3
	0x034A7420 MOV X0, X23
	0x034A7424 BL 0x1C5C788
	0x034A7428 B 0x34A7454
	0x034A742C LDR X8, [X19 + 0x40]
	0x034A7430 MOVN W9, 0x0
	0x034A7434 STR X8, [X31 + 0x8]
	0x034A7438 STR X31, [X19 + 0x40]
	0x034A743C STR W9, [X19]
	0x034A7440 B 0x34A74B0
	0x034A7444 LDR W9, [X10]
	0x034A7448 ADD W9, W9, 0x3
	0x034A744C ADD X8, X8, W9, 0x4, SXTW
	0x034A7450 ADD X0, X8, 0x138
	0x034A7454 LDP X8, X9, [X0]
	0x034A7458 MOV X0, X23
	0x034A745C MOV X1, X21
	0x034A7460 MOV X2, X20
	0x034A7464 MOV X3, X22
	0x034A7468 MOV X4, X31
	0x034A746C MOV W5, W24
	0x034A7470 MOV X6, X31
	0x034A7474 MOV X7, X31
	0x034A7478 STR X9, [X31]
	0x034A747C BLR X8
	0x034A7480 CBZ X0, 0x34A75E4
	0x034A7484 ADRP X8, 0xC4F000
	0x034A7488 LDR X8, [X8 + 0x1F8]
	0x034A748C LDR X1, [X8]
	0x034A7490 BL 0x269F5D0
	0x034A7494 ADRP X8, 0xC4F000
	0x034A7498 LDR X8, [X8 + 0x1F0]
	0x034A749C STR X0, [X31 + 0x8]
	0x034A74A0 LDR X1, [X8]
	0x034A74A4 ADD X0, X31, 0x8
	0x034A74A8 BL 0x2677430
	0x034A74AC TBZ X0, 0x0, 0x34A74EC
	0x034A74B0 ADRP X8, 0xC4F000
	0x034A74B4 LDR X8, [X8 + 0x1E0]
	0x034A74B8 ADD X0, X31, 0x8
	0x034A74BC LDR X1, [X8]
	0x034A74C0 BL 0x2677474
	0x034A74C4 MOVN W8, 0x1
	0x034A74C8 STR W8, [X19], #0x8
	0x034A74CC LDR X0, [X25]
	0x034A74D0 LDR W8, [X0 + 0xE0]
	0x034A74D4 CBNZ W8, 0x34A74DC
	0x034A74D8 BL 0x1C16DFC
	0x034A74DC MOV X0, X19
	0x034A74E0 MOV X1, X31
	0x034A74E4 BL 0x32C4864
	0x034A74E8 B 0x34A7524
	0x034A74EC STR W31, [X19]
	0x034A74F0 LDR X8, [X31 + 0x8]
	0x034A74F4 STR X8, [X19 + 0x40]
	0x034A74F8 LDR X0, [X25]
	0x034A74FC LDR W8, [X0 + 0xE0]
	0x034A7500 CBNZ W8, 0x34A7508
	0x034A7504 BL 0x1C16DFC
	0x034A7508 ADRP X8, 0xC8A000
	0x034A750C LDR X8, [X8 + 0xFA0]
	0x034A7510 ADD X0, X19, 0x8
	0x034A7514 LDR X3, [X8]
	0x034A7518 ADD X1, X31, 0x8
	0x034A751C MOV X2, X19
	0x034A7520 BL 0x21875D8
	0x034A7524 LDP X20, X19, [X31 + 0x40]
	0x034A7528 LDP X22, X21, [X31 + 0x30]
	0x034A752C LDP X24, X23, [X31 + 0x20]
	0x034A7530 LDP X30, X25, [X31 + 0x10]
	0x034A7534 ADD X31, X31, 0x50
	0x034A7538 RET
	0x034A753C ADRP X0, 0xC54000
	0x034A7540 LDR X0, [X0 + 0x578]
	0x034A7544 BL 0x1C16D08
	0x034A7548 BL 0x1C16F10
	0x034A754C MOV X20, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF38000
	011 Move W8, [X20+2560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {79}
	017 Move X0, 0xC8C000
	018 Move X0, [X0+3888]
	019 Call 0x1C17CF4
	020 Move X0, 0xC51000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC4F000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4F000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4F000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC89000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC51000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC51000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC51000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC57000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC50000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8A000
	051 Move X0, [X0+256]
	052 Call 0x1C17CF4
	053 Move X0, 0xC8C000
	054 Move X0, [X0+3896]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8C000
	057 Move X0, [X0+3904]
	058 Call 0x1C17CF4
	059 Move X0, 0xC8C000
	060 Move X0, [X0+3912]
	061 Call 0x1C17CF4
	062 Move X0, 0xC8C000
	063 Move X0, [X0+3920]
	064 Call 0x1C17CF4
	065 Move X0, 0xC89000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xC89000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xC4E000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move X0, 0xC77000
	075 Move X0, [X0+1224]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X20+2560], W8
	079 Move [X31+8], X31
	080 Move X25, 0xC51000
	081 Move W8, [X19]
	082 Move X25, [X25+640]
	083 Compare W8, 0
	084 JumpIfEqual {237}
	085 Move X20, [X19+32]
	086 Compare X20, 0
	087 JumpIfEqual {318}
	088 Move X8, [X19+40]
	089 Compare X8, 0
	090 JumpIfEqual {336}
	091 Move X8, [X19+48]
	092 Compare X8, 0
	093 JumpIfEqual {354}
	094 Move X8, [X19+56]
	095 Compare X8, 0
	096 JumpIfEqual {372}
	097 Move X8, 0xC50000
	098 Move X8, [X8+2600]
	099 Move X0, [X8]
	100 Move X8, 0xC8C000
	101 Move X8, [X8+3904]
	102 Move X24, [X19+64]
	103 Move W9, [X0+224]
	104 Move X21, [X8]
	105 Compare W9, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X20
	109 Move X1, X31
	110 Call Uri.EscapeDataString, X0
	111 Compare X21, 0
	112 JumpIfEqual {390}
	113 Move X8, 0xC89000
	114 Move X8, [X8+256]
	115 Move X2, X0
	116 Move X1, [X8]
	117 Move X0, X21
	118 Move X3, X31
	119 Call String.Replace, X0, X1, X2
	120 Move X20, X0
	121 Move X0, [X19+40]
	122 Move X1, X31
	123 Call Uri.EscapeDataString, X0
	124 Compare X20, 0
	125 JumpIfEqual {391}
	126 Move X8, 0xC8B000
	127 Move X8, [X8+3896]
	128 Move X2, X0
	129 Move X1, [X8]
	130 Move X0, X20
	131 Move X3, X31
	132 Call String.Replace, X0, X1, X2
	133 Move X20, X0
	134 Move X0, [X19+48]
	135 Move X1, X31
	136 Call Uri.EscapeDataString, X0
	137 Compare X20, 0
	138 JumpIfEqual {392}
	139 Move X8, 0xC8B000
	140 Move X8, [X8+3912]
	141 Move X2, X0
	142 Move X1, [X8]
	143 Move X0, X20
	144 Move X3, X31
	145 Call String.Replace, X0, X1, X2
	146 Move X20, X0
	147 Move X0, [X19+56]
	148 Move X1, X31
	149 Call Uri.EscapeDataString, X0
	150 Compare X20, 0
	151 JumpIfEqual {393}
	152 Move X8, 0xC8B000
	153 Move X8, [X8+3920]
	154 Move X2, X0
	155 Move X1, [X8]
	156 Move X0, X20
	157 Move X3, X31
	158 Call String.Replace, X0, X1, X2
	159 Compare X24, 0
	160 JumpIfEqual {394}
	161 Move X8, 0xC4D000
	162 Move X9, 0xC56000
	163 Move X8, [X8+2440]
	164 Move X9, [X9+928]
	165 Move X22, X0
	166 Move X23, [X24+16]
	167 Move X21, [X8]
	168 Move X0, [X9]
	169 Call 0x1C17F10
	170 Move X20, X0
	171 Move X1, X23
	172 Move X2, X31
	173 Call UriBuilder..ctor, X0, X1
	174 Compare X20, 0
	175 JumpIfEqual {395}
	176 Move X0, X20
	177 Move X1, X22
	178 Move X2, X31
	179 Call UriBuilder.set_Path, X0, X1
	180 Move X0, X20
	181 Move X1, X21
	182 Move X2, X31
	183 Call UriBuilder.set_Query, X0, X1
	184 Move X0, X20
	185 Move X1, X31
	186 Call UriBuilder.get_Uri, X0
	187 Move X8, 0xC76000
	188 Move X9, 0xC4E000
	189 Move X8, [X8+1224]
	190 Move X9, [X9+1744]
	191 Move X20, X0
	192 Move X21, [X8]
	193 Move X0, [X9]
	194 Call 0x1C17F10
	195 Move X8, 0xC4E000
	196 Move X8, [X8+1728]
	197 Move X22, X0
	198 Move X1, [X8]
	199 Call Dictionary`2<Object, Object>..ctor, X0
	200 Move X8, 0xC88000
	201 Move X8, [X8+2008]
	202 Move X1, [X19+72]
	203 Move X0, [X8]
	204 Move X2, X31
	205 Call String.Concat, X0, X1
	206 Compare X22, 0
	207 JumpIfEqual {396}
	208 Move X8, 0xC88000
	209 Move X8, [X8+2000]
	210 Move X9, 0xC4E000
	211 Move X9, [X9+2064]
	212 Move X2, X0
	213 Move X1, [X8]
	214 Move X3, [X9]
	215 Move X0, X22
	216 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	217 Move X23, [X24+32]
	218 Compare X23, 0
	219 JumpIfEqual {397}
	220 Move X10, 0xC88000
	221 Move X8, [X23]
	222 Move X10, [X10+1976]
	223 Move W24, [X24+24]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move X1, [X10]
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move W2, 3
	235 Move X0, X23
	236 Call 0x1C5D788
	237 Move X8, [X19+80]
	238 Move TEMP, 0
	239 Not TEMP
	240 Move W9, TEMP
	241 Move [X31+8], X8
	242 Move [X19+80], X31
	243 Move [X19], W9
	244 Move W9, [X10]
	245 Add W9, W9, 3
	246 Add X8, X8, W9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X9, [X0+8]
	250 Move X0, X23
	251 Move X1, X21
	252 Move X2, X20
	253 Move X3, X22
	254 Move X4, X31
	255 Move W5, W24
	256 Move X6, X31
	257 Move X7, X31
	258 Move [X31], X9
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Compare X0, 0
	261 JumpIfEqual {398}
	262 Move X8, 0xC50000
	263 Move X8, [X8+504]
	264 Move X1, [X8]
	265 Call Task`1<Object>.GetAwaiter, X0
	266 Move X8, 0xC50000
	267 Move X8, [X8+496]
	268 Move [X31+8], X0
	269 Move X1, [X8]
	270 Add X0, X31, 8
	271 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfNotEqual {293}
	276 Move X8, 0xC50000
	277 Move X8, [X8+480]
	278 Add X0, X31, 8
	279 Move X1, [X8]
	280 Call TaskAwaiter`1<Object>.GetResult, X0
	281 Move TEMP, 1
	282 Not TEMP
	283 Move W8, TEMP
	284 Move [X19+8], W8
	285 Move X0, [X25]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X0, X19
	291 Move X1, X31
	292 Call AsyncTaskMethodBuilder.SetResult, X0
	293 Move [X19], W31
	294 Move X8, [X31+8]
	295 Move [X19+80], X8
	296 Move X0, [X25]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Move X8, 0xC8B000
	302 Move X8, [X8+3888]
	303 Add X0, X19, 8
	304 Move X3, [X8]
	305 Add X1, X31, 8
	306 Move X2, X19
	307 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	308 Move X20, [X31+64]
	309 Move X19, [X31+72]
	310 Move X22, [X31+48]
	311 Move X21, [X31+56]
	312 Move X24, [X31+32]
	313 Move X23, [X31+40]
	314 Move X30, [X31+16]
	315 Move X25, [X31+24]
	316 Add X31, X31, 80
	317 Return 
	318 Move X0, 0xC55000
	319 Move X0, [X0+1400]
	320 Call 0x1C17D08
	321 Call 0x1C17F10
	322 Move X20, X0
	323 Move X0, 0xC89000
	324 Move X0, [X0+280]
	325 Call 0x1C17D08
	326 Move X1, X0
	327 Move X0, X20
	328 Move X2, X31
	329 Call ArgumentException..ctor, X0, X1
	330 Move X0, 0xC8B000
	331 Move X0, [X0+3928]
	332 Call 0x1C17D08
	333 Move X1, X0
	334 Move X0, X20
	335 Call 0x1C17DEC
	336 Move X0, 0xC55000
	337 Move X0, [X0+1400]
	338 Call 0x1C17D08
	339 Call 0x1C17F10
	340 Move X20, X0
	341 Move X0, 0xC8B000
	342 Move X0, [X0+3936]
	343 Call 0x1C17D08
	344 Move X1, X0
	345 Move X0, X20
	346 Move X2, X31
	347 Call ArgumentException..ctor, X0, X1
	348 Move X0, 0xC8B000
	349 Move X0, [X0+3928]
	350 Call 0x1C17D08
	351 Move X1, X0
	352 Move X0, X20
	353 Call 0x1C17DEC
	354 Move X0, 0xC55000
	355 Move X0, [X0+1400]
	356 Call 0x1C17D08
	357 Call 0x1C17F10
	358 Move X20, X0
	359 Move X0, 0xC89000
	360 Move X0, [X0+296]
	361 Call 0x1C17D08
	362 Move X1, X0
	363 Move X0, X20
	364 Move X2, X31
	365 Call ArgumentException..ctor, X0, X1
	366 Move X0, 0xC8B000
	367 Move X0, [X0+3928]
	368 Call 0x1C17D08
	369 Move X1, X0
	370 Move X0, X20
	371 Call 0x1C17DEC
	372 Move X0, 0xC55000
	373 Move X0, [X0+1400]
	374 Call 0x1C17D08
	375 Call 0x1C17F10
	376 Move X20, X0
	377 Move X0, 0xC8B000
	378 Move X0, [X0+3944]
	379 Call 0x1C17D08
	380 Move X1, X0
	381 Move X0, X20
	382 Move X2, X31
	383 Call ArgumentException..ctor, X0, X1
	384 Move X0, 0xC8B000
	385 Move X0, [X0+3928]
	386 Call 0x1C17D08
	387 Move X1, X0
	388 Move X0, X20
	389 Call 0x1C17DEC
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Move X20, X0
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X0, X20
	402 Call 0x3EB2AD0
	403 Move X20, X0
	404 Move X0, 0xC4D000
	405 Move X0, [X0+2000]
	406 Call 0x1C17D08
	407 Move X8, [X20]
	408 Move X1, [X8]
	409 Call 0x1C18270
	410 Move TEMP, X0
	411 And TEMP, TEMP, 1
	412 Compare TEMP, 1
	413 JumpIfNotEqual {431}
	414 Move X20, [X20]
	415 Call 0x3EB2AE0
	416 Move TEMP, 1
	417 Not TEMP
	418 Move W8, TEMP
	419 Move [X19+8], W8
	420 Move X0, 0xC50000
	421 Move X0, [X0+640]
	422 Call 0x1C17D08
	423 Move W8, [X0+224]
	424 Compare W8, 0
	425 JumpIfNotEqual {427}
	426 Call 0x1C17DFC
	427 Move X0, X19
	428 Move X1, X20
	429 Move X2, X31
	430 Call AsyncTaskMethodBuilder.SetException, X0, X1
	431 Move W0, 8
	432 Call 0x3EB2AF0
	433 Move X8, [X20]
	434 Move [X0], X8
	435 Move X1, 0xA0E000
	436 Add X1, X1, 3672
	437 Move X2, X31
	438 Call 0x3EB2B00
	439 Move X20, X0
	440 Call 0x3EB2AE0
	441 Move X0, X20
	442 Call 0x1D2D690
	443 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A7550 ADRP X0, 0xC88000
	0x034A7554 LDR X0, [X0 + 0x2F0]
	0x034A7558 BL 0x1C16D08
	0x034A755C MOV X1, X0
	0x034A7560 MOV X0, X20
	0x034A7564 MOV X2, X31
	0x034A7568 BL 0x3314A68
	0x034A756C ADRP X0, 0xC8A000
	0x034A7570 LDR X0, [X0 + 0xFB8]
	0x034A7574 BL 0x1C16D08
	0x034A7578 MOV X1, X0
	0x034A757C MOV X0, X20
	0x034A7580 BL 0x1C16DEC
	0x034A7584 ADRP X0, 0xC54000
	0x034A7588 LDR X0, [X0 + 0x578]
	0x034A758C BL 0x1C16D08
	0x034A7590 BL 0x1C16F10
	0x034A7594 MOV X20, X0
	0x034A7598 ADRP X0, 0xC8A000
	0x034A759C LDR X0, [X0 + 0xFC0]
	0x034A75A0 BL 0x1C16D08
	0x034A75A4 MOV X1, X0
	0x034A75A8 MOV X0, X20
	0x034A75AC MOV X2, X31
	0x034A75B0 BL 0x3314A68
	0x034A75B4 ADRP X0, 0xC8A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF37000
	007 Move X22, 0xC50000
	008 Move W8, [X21+2561]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC50000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2561], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

