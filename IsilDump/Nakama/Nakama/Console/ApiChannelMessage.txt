Type: Nakama.Console.ApiChannelMessage

Method: System.String get_ChannelId()

Disassembly:
	0x0349E01C LDR X0, [X0 + 0x50]
	0x0349E020 RET

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_ChannelId(System.String value)

Disassembly:
	0x0349E024 STR X1, [X0 + 0x50]
	0x0349E028 RET

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_Code()

Disassembly:
	0x0349E02C LDR X0, [X0 + 0x58]
	0x0349E030 RET

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_Code(System.Int32 value)

Disassembly:
	0x0349E034 STR X1, [X0 + 0x58]
	0x0349E038 RET

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.String get_Content()

Disassembly:
	0x0349E03C LDR X0, [X0 + 0x60]
	0x0349E040 RET

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Content(System.String value)

Disassembly:
	0x0349E044 STR X1, [X0 + 0x60]
	0x0349E048 RET

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x0349E04C LDR X0, [X0 + 0x68]
	0x0349E050 RET

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0349E054 STR X1, [X0 + 0x68]
	0x0349E058 RET

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_GroupId()

Disassembly:
	0x0349E05C SUB X31, X31, 0x60
	0x0349E060 STP X30, X27, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_GroupId(System.String value)

Disassembly:
	0x0349E064 STP X26, X25, [X31 + 0x20]
	0x0349E068 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_MessageId()

Disassembly:
	0x0349E06C STP X22, X21, [X31 + 0x40]
	0x0349E070 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_MessageId(System.String value)

Disassembly:
	0x0349E074 ADRP X25, 0xF3F000
	0x0349E078 ADRP X26, 0xC55000

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Boolean get_Persistent()

Disassembly:
	0x0349E07C ADRP X24, 0xC8F000
	0x0349E080 ADRP X22, 0xC55000

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_Persistent(System.Boolean value)

Disassembly:
	0x0349E084 ADRP X21, 0xC8F000
	0x0349E088 ADRP X20, 0xC8F000
	0x0349E08C ADRP X23, 0xC55000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+64], W8
	003 Return 

Method: System.String get_RoomName()

Disassembly:
	0x0349E090 LDR X26, [X26 + 0x988]
	0x0349E094 LDRB W8, [X25 + 0x9AF]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_RoomName(System.String value)

Disassembly:
	0x0349E098 LDR X24, [X24 + 0xDE0]
	0x0349E09C LDR X22, [X22 + 0x838]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_SenderId()

Disassembly:
	0x0349E0A0 LDR X21, [X21 + 0xF40]
	0x0349E0A4 LDR X20, [X20 + 0xF48]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_SenderId(System.String value)

Disassembly:
	0x0349E0A8 LDR X23, [X23 + 0x9D0]
	0x0349E0AC MOV X19, X0

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x0349E0B0 TBNZ X8, 0x0, 0x349E17C
	0x0349E0B4 ADRP X0, 0xC55000

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x0349E0B8 LDR X0, [X0 + 0x758]
	0x0349E0BC BL 0x1C16CF4

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.String get_UserIdOne()

Disassembly:
	0x0349E0C0 ADRP X0, 0xC55000
	0x0349E0C4 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_UserIdOne(System.String value)

Disassembly:
	0x0349E0C8 BL 0x1C16CF4
	0x0349E0CC ADRP X0, 0xC8F000

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_UserIdTwo()

Disassembly:
	0x0349E0D0 LDR X0, [X0 + 0xF48]
	0x0349E0D4 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_UserIdTwo(System.String value)

Disassembly:
	0x0349E0D8 ADRP X0, 0xC8F000
	0x0349E0DC LDR X0, [X0 + 0xD10]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String get_Username()

Disassembly:
	0x0349E0E0 BL 0x1C16CF4
	0x0349E0E4 ADRP X0, 0xC8F000

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_Username(System.String value)

Disassembly:
	0x0349E0E8 LDR X0, [X0 + 0xD18]
	0x0349E0EC BL 0x1C16CF4

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0349E0F0 ADRP X0, 0xC8F000
	0x0349E0F4 LDR X0, [X0 + 0xF50]
	0x0349E0F8 BL 0x1C16CF4
	0x0349E0FC ADRP X0, 0xC8F000
	0x0349E100 LDR X0, [X0 + 0xDE0]
	0x0349E104 BL 0x1C16CF4
	0x0349E108 ADRP X0, 0xC55000
	0x0349E10C LDR X0, [X0 + 0x838]
	0x0349E110 BL 0x1C16CF4
	0x0349E114 ADRP X0, 0xC8F000
	0x0349E118 LDR X0, [X0 + 0xD00]
	0x0349E11C BL 0x1C16CF4
	0x0349E120 ADRP X0, 0xC8F000
	0x0349E124 LDR X0, [X0 + 0xDE8]
	0x0349E128 BL 0x1C16CF4
	0x0349E12C ADRP X0, 0xC8F000
	0x0349E130 LDR X0, [X0 + 0xF58]
	0x0349E134 BL 0x1C16CF4
	0x0349E138 ADRP X0, 0xC8F000
	0x0349E13C LDR X0, [X0 + 0xF40]
	0x0349E140 BL 0x1C16CF4
	0x0349E144 ADRP X0, 0xC55000
	0x0349E148 LDR X0, [X0 + 0x988]
	0x0349E14C BL 0x1C16CF4
	0x0349E150 ADRP X0, 0xC8F000
	0x0349E154 LDR X0, [X0 + 0xF60]
	0x0349E158 BL 0x1C16CF4
	0x0349E15C ADRP X0, 0xC8F000
	0x0349E160 LDR X0, [X0 + 0xF68]
	0x0349E164 BL 0x1C16CF4
	0x0349E168 ADRP X0, 0xC8F000
	0x0349E16C LDR X0, [X0 + 0xE30]
	0x0349E170 BL 0x1C16CF4
	0x0349E174 MOVZ W8, 0x1
	0x0349E178 STRB W8, [X25 + 0x9AF]
	0x0349E17C LDR X0, [X26]
	0x0349E180 LDR X2, [X19 + 0x10]
	0x0349E184 LDR X1, [X24]
	0x0349E188 LDR X3, [X22]
	0x0349E18C MOV X4, X31
	0x0349E190 BL 0x32277C4
	0x0349E194 LDR X2, [X19 + 0x18]
	0x0349E198 LDR X1, [X21]
	0x0349E19C LDR X3, [X22]
	0x0349E1A0 MOV X4, X31
	0x0349E1A4 BL 0x32277C4
	0x0349E1A8 LDR X2, [X19 + 0x20]
	0x0349E1AC LDR X1, [X20]
	0x0349E1B0 LDR X3, [X22]
	0x0349E1B4 MOV X4, X31
	0x0349E1B8 BL 0x32277C4
	0x0349E1BC LDR X8, [X23]
	0x0349E1C0 MOV X21, X0
	0x0349E1C4 MOVZ W1, 0x4
	0x0349E1C8 MOV X0, X8
	0x0349E1CC BL 0x1C16D6C
	0x0349E1D0 CBZ X0, 0x349E48C
	0x0349E1D4 MOV X20, X0
	0x0349E1D8 CBZ X21, 0x349E1F0
	0x0349E1DC LDR X8, [X20]
	0x0349E1E0 MOV X0, X21
	0x0349E1E4 LDR X1, [X8 + 0x40]
	0x0349E1E8 BL 0x1C16E00
	0x0349E1EC CBZ X0, 0x349E480
	0x0349E1F0 LDR W8, [X20 + 0x18]
	0x0349E1F4 CBZ W8, 0x349E47C
	0x0349E1F8 ADRP X24, 0xC8F000
	0x0349E1FC LDR X24, [X24 + 0xF60]
	0x0349E200 STR X21, [X20 + 0x20]
	0x0349E204 LDR X0, [X24]
	0x0349E208 CBZ X0, 0x349E220
	0x0349E20C LDR X8, [X20]
	0x0349E210 LDR X1, [X8 + 0x40]
	0x0349E214 BL 0x1C16E00
	0x0349E218 CBZ X0, 0x349E480
	0x0349E21C LDR W8, [X20 + 0x18]
	0x0349E220 CMP W8, 0x1
	0x0349E224 B.LS 0x349E47C
	0x0349E228 LDR X8, [X24]
	0x0349E22C ADRP X24, 0xC55000
	0x0349E230 LDR X24, [X24 + 0x758]
	0x0349E234 ADD X1, X31, 0xC
	0x0349E238 STR X8, [X20 + 0x28]
	0x0349E23C LDR W8, [X19 + 0x28]
	0x0349E240 LDR X0, [X24]
	0x0349E244 STR W8, [X31 + 0xC]
	0x0349E248 BL 0x1C16E04
	0x0349E24C MOV X21, X0
	0x0349E250 CBZ X0, 0x349E268
	0x0349E254 LDR X8, [X20]
	0x0349E258 MOV X0, X21
	0x0349E25C LDR X1, [X8 + 0x40]
	0x0349E260 BL 0x1C16E00
	0x0349E264 CBZ X0, 0x349E480
	0x0349E268 LDR W8, [X20 + 0x18]
	0x0349E26C CMP W8, 0x2
	0x0349E270 B.LS 0x349E47C
	0x0349E274 STR X21, [X20 + 0x30]
	0x0349E278 LDR X0, [X22]
	0x0349E27C CBZ X0, 0x349E294
	0x0349E280 LDR X8, [X20]
	0x0349E284 LDR X1, [X8 + 0x40]
	0x0349E288 BL 0x1C16E00
	0x0349E28C CBZ X0, 0x349E480
	0x0349E290 LDR W8, [X20 + 0x18]
	0x0349E294 CMP W8, 0x3
	0x0349E298 B.LS 0x349E47C
	0x0349E29C LDR X8, [X22]
	0x0349E2A0 ADRP X21, 0xC8F000
	0x0349E2A4 LDR X21, [X21 + 0xD00]
	0x0349E2A8 MOV X0, X20
	0x0349E2AC MOV X1, X31
	0x0349E2B0 STR X8, [X20 + 0x38]
	0x0349E2B4 BL 0x3227578
	0x0349E2B8 LDR X2, [X19 + 0x30]
	0x0349E2BC LDR X1, [X21]
	0x0349E2C0 LDR X3, [X22]
	0x0349E2C4 MOV X4, X31
	0x0349E2C8 BL 0x32277C4
	0x0349E2CC LDR X8, [X23]
	0x0349E2D0 MOV X21, X0
	0x0349E2D4 MOVZ W1, 0x4
	0x0349E2D8 MOV X0, X8
	0x0349E2DC BL 0x1C16D6C
	0x0349E2E0 CBZ X0, 0x349E48C
	0x0349E2E4 MOV X20, X0
	0x0349E2E8 CBZ X21, 0x349E300
	0x0349E2EC LDR X8, [X20]
	0x0349E2F0 MOV X0, X21
	0x0349E2F4 LDR X1, [X8 + 0x40]
	0x0349E2F8 BL 0x1C16E00
	0x0349E2FC CBZ X0, 0x349E480
	0x0349E300 LDR W8, [X20 + 0x18]
	0x0349E304 CBZ W8, 0x349E47C
	0x0349E308 ADRP X23, 0xC8F000
	0x0349E30C LDR X23, [X23 + 0xF58]
	0x0349E310 STR X21, [X20 + 0x20]
	0x0349E314 LDR X0, [X23]
	0x0349E318 CBZ X0, 0x349E330
	0x0349E31C LDR X8, [X20]
	0x0349E320 LDR X1, [X8 + 0x40]
	0x0349E324 BL 0x1C16E00
	0x0349E328 CBZ X0, 0x349E480
	0x0349E32C LDR W8, [X20 + 0x18]
	0x0349E330 CMP W8, 0x1
	0x0349E334 B.LS 0x349E47C
	0x0349E338 LDR X8, [X23]
	0x0349E33C ADD X1, X31, 0x8
	0x0349E340 STR X8, [X20 + 0x28]
	0x0349E344 LDR W8, [X19 + 0x38]
	0x0349E348 LDR X0, [X24]
	0x0349E34C STR W8, [X31 + 0x8]
	0x0349E350 BL 0x1C16E04
	0x0349E354 MOV X21, X0
	0x0349E358 CBZ X0, 0x349E370
	0x0349E35C LDR X8, [X20]
	0x0349E360 MOV X0, X21
	0x0349E364 LDR X1, [X8 + 0x40]
	0x0349E368 BL 0x1C16E00
	0x0349E36C CBZ X0, 0x349E480
	0x0349E370 LDR W8, [X20 + 0x18]
	0x0349E374 CMP W8, 0x2
	0x0349E378 B.LS 0x349E47C
	0x0349E37C STR X21, [X20 + 0x30]
	0x0349E380 LDR X0, [X22]
	0x0349E384 CBZ X0, 0x349E39C
	0x0349E388 LDR X8, [X20]
	0x0349E38C LDR X1, [X8 + 0x40]
	0x0349E390 BL 0x1C16E00
	0x0349E394 CBZ X0, 0x349E480
	0x0349E398 LDR W8, [X20 + 0x18]
	0x0349E39C CMP W8, 0x3
	0x0349E3A0 B.LS 0x349E47C
	0x0349E3A4 ADRP X23, 0xC8F000
	0x0349E3A8 ADRP X24, 0xC8F000
	0x0349E3AC ADRP X25, 0xC8F000
	0x0349E3B0 LDR X23, [X23 + 0xF68]
	0x0349E3B4 LDR X24, [X24 + 0xF50]
	0x0349E3B8 LDR X25, [X25 + 0xD10]
	0x0349E3BC LDR X8, [X22]
	0x0349E3C0 ADRP X26, 0xC8F000
	0x0349E3C4 ADRP X27, 0xC8F000
	0x0349E3C8 ADRP X21, 0xC8F000
	0x0349E3CC LDR X26, [X26 + 0xD18]
	0x0349E3D0 LDR X27, [X27 + 0xDE8]
	0x0349E3D4 LDR X21, [X21 + 0xE30]
	0x0349E3D8 MOV X0, X20
	0x0349E3DC MOV X1, X31
	0x0349E3E0 STR X8, [X20 + 0x38]
	0x0349E3E4 BL 0x3227578
	0x0349E3E8 LDR X2, [X19 + 0x40]
	0x0349E3EC LDR X1, [X23]
	0x0349E3F0 LDR X3, [X22]
	0x0349E3F4 MOV X4, X31
	0x0349E3F8 BL 0x32277C4
	0x0349E3FC LDR X2, [X19 + 0x48]
	0x0349E400 LDR X1, [X24]
	0x0349E404 LDR X3, [X22]
	0x0349E408 MOV X4, X31
	0x0349E40C BL 0x32277C4
	0x0349E410 LDR X2, [X19 + 0x50]
	0x0349E414 LDR X1, [X25]
	0x0349E418 LDR X3, [X22]
	0x0349E41C MOV X4, X31
	0x0349E420 BL 0x32277C4
	0x0349E424 LDR X2, [X19 + 0x58]
	0x0349E428 LDR X1, [X26]
	0x0349E42C LDR X3, [X22]
	0x0349E430 MOV X4, X31
	0x0349E434 BL 0x32277C4
	0x0349E438 LDR X2, [X19 + 0x60]
	0x0349E43C LDR X1, [X27]
	0x0349E440 LDR X3, [X22]
	0x0349E444 MOV X4, X31
	0x0349E448 BL 0x32277C4
	0x0349E44C LDR X2, [X19 + 0x68]
	0x0349E450 LDR X1, [X21]
	0x0349E454 LDR X3, [X22]
	0x0349E458 MOV X4, X31
	0x0349E45C BL 0x32277C4
	0x0349E460 LDP X20, X19, [X31 + 0x50]
	0x0349E464 LDP X22, X21, [X31 + 0x40]
	0x0349E468 LDP X24, X23, [X31 + 0x30]
	0x0349E46C LDP X26, X25, [X31 + 0x20]
	0x0349E470 LDP X30, X27, [X31 + 0x10]
	0x0349E474 ADD X31, X31, 0x60
	0x0349E478 RET
	0x0349E47C BL 0x1C16F28
	0x0349E480 BL 0x1C16F44
	0x0349E484 MOV X1, X31
	0x0349E488 BL 0x1C16DEC
	0x0349E48C BL 0x1C16F20
	0x0349E490 MOV X1, X31
	0x0349E494 B 0x33BDD8C
	0x0349E498 LDR W0, [X0 + 0x10]
	0x0349E49C RET
	0x0349E4A0 STR W1, [X0 + 0x10]
	0x0349E4A4 RET
	0x0349E4A8 LDR X0, [X0 + 0x18]
	0x0349E4AC RET
	0x0349E4B0 STR X1, [X0 + 0x18]
	0x0349E4B4 RET
	0x0349E4B8 LDR X0, [X0 + 0x20]
	0x0349E4BC RET
	0x0349E4C0 STR X1, [X0 + 0x20]
	0x0349E4C4 RET
	0x0349E4C8 LDR X0, [X0 + 0x28]
	0x0349E4CC RET
	0x0349E4D0 STR X1, [X0 + 0x28]
	0x0349E4D4 RET
	0x0349E4D8 LDRB W0, [X0 + 0x30]
	0x0349E4DC RET
	0x0349E4E0 AND W8, W1, 0x1
	0x0349E4E4 STRB W8, [X0 + 0x30]
	0x0349E4E8 RET
	0x0349E4EC LDR X0, [X0 + 0x38]
	0x0349E4F0 RET
	0x0349E4F4 STR X1, [X0 + 0x38]
	0x0349E4F8 RET
	0x0349E4FC LDR X0, [X0 + 0x40]
	0x0349E500 RET
	0x0349E504 STR X1, [X0 + 0x40]
	0x0349E508 RET
	0x0349E50C SUB X31, X31, 0x50
	0x0349E510 STP X30, X25, [X31 + 0x10]
	0x0349E514 STP X24, X23, [X31 + 0x20]
	0x0349E518 STP X22, X21, [X31 + 0x30]
	0x0349E51C STP X20, X19, [X31 + 0x40]
	0x0349E520 ADRP X20, 0xF3F000
	0x0349E524 ADRP X21, 0xC55000
	0x0349E528 ADRP X22, 0xC55000
	0x0349E52C LDRB W8, [X20 + 0x9B0]
	0x0349E530 LDR X21, [X21 + 0x988]
	0x0349E534 LDR X22, [X22 + 0x9D0]
	0x0349E538 MOV X19, X0
	0x0349E53C TBNZ X8, 0x0, 0x349E5D8
	0x0349E540 ADRP X0, 0xC55000
	0x0349E544 LDR X0, [X0 + 0xB58]
	0x0349E548 BL 0x1C16CF4
	0x0349E54C ADRP X0, 0xC55000
	0x0349E550 LDR X0, [X0 + 0x758]
	0x0349E554 BL 0x1C16CF4
	0x0349E558 ADRP X0, 0xC55000
	0x0349E55C LDR X0, [X0 + 0x9D0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xF40000
	013 Move X24, 0xC56000
	014 Move X20, 0xC90000
	015 Move X22, 0xC56000
	016 Move X23, 0xC56000
	017 Move W8, [X21+2474]
	018 Move X24, [X24+2440]
	019 Move X20, [X20+3536]
	020 Move X22, [X22+2104]
	021 Move X23, [X23+2512]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {83}
	027 Move X0, 0xC56000
	028 Move X0, [X0+2904]
	029 Call 0x1C17CF4
	030 Move X0, 0xC56000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0xC56000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move X0, 0xC90000
	037 Move X0, [X0+3544]
	038 Call 0x1C17CF4
	039 Move X0, 0xC90000
	040 Move X0, [X0+3552]
	041 Call 0x1C17CF4
	042 Move X0, 0xC56000
	043 Move X0, [X0+2104]
	044 Call 0x1C17CF4
	045 Move X0, 0xC90000
	046 Move X0, [X0+3560]
	047 Call 0x1C17CF4
	048 Move X0, 0xC90000
	049 Move X0, [X0+3568]
	050 Call 0x1C17CF4
	051 Move X0, 0xC90000
	052 Move X0, [X0+3576]
	053 Call 0x1C17CF4
	054 Move X0, 0xC90000
	055 Move X0, [X0+3584]
	056 Call 0x1C17CF4
	057 Move X0, 0xC90000
	058 Move X0, [X0+3592]
	059 Call 0x1C17CF4
	060 Move X0, 0xC56000
	061 Move X0, [X0+2440]
	062 Call 0x1C17CF4
	063 Move X0, 0xC90000
	064 Move X0, [X0+3600]
	065 Call 0x1C17CF4
	066 Move X0, 0xC90000
	067 Move X0, [X0+3608]
	068 Call 0x1C17CF4
	069 Move X0, 0xC90000
	070 Move X0, [X0+3616]
	071 Call 0x1C17CF4
	072 Move X0, 0xC90000
	073 Move X0, [X0+3536]
	074 Call 0x1C17CF4
	075 Move X0, 0xC90000
	076 Move X0, [X0+3624]
	077 Call 0x1C17CF4
	078 Move X0, 0xC90000
	079 Move X0, [X0+3632]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X21+2474], W8
	083 Move X0, [X24]
	084 Move X2, [X19+16]
	085 Move X1, [X20]
	086 Move X3, [X22]
	087 Move X4, X31
	088 Call String.Concat, X0, X1, X2, X3
	089 Move X8, [X23]
	090 Move X21, X0
	091 Move W1, 4
	092 Move X0, X8
	093 Call 0x1C17D6C
	094 Compare X0, 0
	095 JumpIfEqual {311}
	096 Move X20, X0
	097 Compare X21, 0
	098 JumpIfEqual {105}
	099 Move X8, [X20]
	100 Move X0, X21
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {308}
	105 Move W8, [X20+24]
	106 Compare W8, 0
	107 JumpIfEqual {307}
	108 Move X24, 0xC90000
	109 Move X24, [X24+3616]
	110 Move [X20+32], X21
	111 Move X0, [X24]
	112 Compare X0, 0
	113 JumpIfEqual {120}
	114 Move X8, [X20]
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {308}
	119 Move W8, [X20+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X8, [X24]
	122 Move X9, 0xC56000
	123 Move X9, [X9+1880]
	124 Add X1, X31, 12
	125 Move [X20+40], X8
	126 Move W8, [X19+24]
	127 Move X0, [X9]
	128 Move [X31+12], W8
	129 Call 0x1C17E04
	130 Move X21, X0
	131 Compare X0, 0
	132 JumpIfEqual {139}
	133 Move X8, [X20]
	134 Move X0, X21
	135 Move X1, [X8+64]
	136 Call 0x1C17E00
	137 Compare X0, 0
	138 JumpIfEqual {308}
	139 Move W8, [X20+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move [X20+48], X21
	142 Move X0, [X22]
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X20]
	146 Move X1, [X8+64]
	147 Call 0x1C17E00
	148 Compare X0, 0
	149 JumpIfEqual {308}
	150 Move W8, [X20+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X21, 0xC90000
	153 Move X21, [X21+3544]
	154 Move X8, [X22]
	155 Move X24, 0xC90000
	156 Move X25, 0xC90000
	157 Move X26, 0xC90000
	158 Move X24, [X24+3552]
	159 Move X25, [X25+3576]
	160 Move X26, [X26+3584]
	161 Move X0, X20
	162 Move X1, X31
	163 Move [X20+56], X8
	164 Call String.Concat, X0
	165 Move X2, [X19+32]
	166 Move X1, [X21]
	167 Move X3, [X22]
	168 Move X4, X31
	169 Call String.Concat, X0, X1, X2, X3
	170 Move X2, [X19+40]
	171 Move X1, [X24]
	172 Move X3, [X22]
	173 Move X4, X31
	174 Call String.Concat, X0, X1, X2, X3
	175 Move X2, [X19+48]
	176 Move X1, [X25]
	177 Move X3, [X22]
	178 Move X4, X31
	179 Call String.Concat, X0, X1, X2, X3
	180 Move X2, [X19+56]
	181 Move X1, [X26]
	182 Move X3, [X22]
	183 Move X4, X31
	184 Call String.Concat, X0, X1, X2, X3
	185 Move X8, [X23]
	186 Move X21, X0
	187 Move W1, 4
	188 Move X0, X8
	189 Call 0x1C17D6C
	190 Compare X0, 0
	191 JumpIfEqual {311}
	192 Move X20, X0
	193 Compare X21, 0
	194 JumpIfEqual {201}
	195 Move X8, [X20]
	196 Move X0, X21
	197 Move X1, [X8+64]
	198 Call 0x1C17E00
	199 Compare X0, 0
	200 JumpIfEqual {308}
	201 Move W8, [X20+24]
	202 Compare W8, 0
	203 JumpIfEqual {307}
	204 Move X23, 0xC90000
	205 Move X23, [X23+3624]
	206 Move [X20+32], X21
	207 Move X0, [X23]
	208 Compare X0, 0
	209 JumpIfEqual {216}
	210 Move X8, [X20]
	211 Move X1, [X8+64]
	212 Call 0x1C17E00
	213 Compare X0, 0
	214 JumpIfEqual {308}
	215 Move W8, [X20+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, [X23]
	218 Move X9, 0xC56000
	219 Move X9, [X9+2904]
	220 Add X1, X31, 8
	221 Move [X20+40], X8
	222 Move W8, [X19+64]
	223 Move X0, [X9]
	224 Move [X31+8], W8
	225 Call 0x1C17E04
	226 Move X21, X0
	227 Compare X0, 0
	228 JumpIfEqual {235}
	229 Move X8, [X20]
	230 Move X0, X21
	231 Move X1, [X8+64]
	232 Call 0x1C17E00
	233 Compare X0, 0
	234 JumpIfEqual {308}
	235 Move W8, [X20+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X20+48], X21
	238 Move X0, [X22]
	239 Compare X0, 0
	240 JumpIfEqual {247}
	241 Move X8, [X20]
	242 Move X1, [X8+64]
	243 Call 0x1C17E00
	244 Compare X0, 0
	245 JumpIfEqual {308}
	246 Move W8, [X20+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X23, 0xC90000
	249 Move X24, 0xC90000
	250 Move X25, 0xC90000
	251 Move X23, [X23+3592]
	252 Move X24, [X24+3600]
	253 Move X25, [X25+3560]
	254 Move X8, [X22]
	255 Move X26, 0xC90000
	256 Move X27, 0xC90000
	257 Move X21, 0xC90000
	258 Move X26, [X26+3608]
	259 Move X27, [X27+3568]
	260 Move X21, [X21+3632]
	261 Move X0, X20
	262 Move X1, X31
	263 Move [X20+56], X8
	264 Call String.Concat, X0
	265 Move X2, [X19+72]
	266 Move X1, [X23]
	267 Move X3, [X22]
	268 Move X4, X31
	269 Call String.Concat, X0, X1, X2, X3
	270 Move X2, [X19+80]
	271 Move X1, [X24]
	272 Move X3, [X22]
	273 Move X4, X31
	274 Call String.Concat, X0, X1, X2, X3
	275 Move X2, [X19+88]
	276 Move X1, [X25]
	277 Move X3, [X22]
	278 Move X4, X31
	279 Call String.Concat, X0, X1, X2, X3
	280 Move X2, [X19+96]
	281 Move X1, [X26]
	282 Move X3, [X22]
	283 Move X4, X31
	284 Call String.Concat, X0, X1, X2, X3
	285 Move X2, [X19+104]
	286 Move X1, [X27]
	287 Move X3, [X22]
	288 Move X4, X31
	289 Call String.Concat, X0, X1, X2, X3
	290 Move X2, [X19+112]
	291 Move X1, [X21]
	292 Move X3, [X22]
	293 Move X4, X31
	294 Call String.Concat, X0, X1, X2, X3
	295 Move X20, [X31+80]
	296 Move X19, [X31+88]
	297 Move X22, [X31+64]
	298 Move X21, [X31+72]
	299 Move X24, [X31+48]
	300 Move X23, [X31+56]
	301 Move X26, [X31+32]
	302 Move X25, [X31+40]
	303 Move X30, [X31+16]
	304 Move X27, [X31+24]
	305 Add X31, X31, 96
	306 Return X0
	307 Call 0x1C17F28
	308 Call 0x1C17F44
	309 Move X1, X31
	310 Call 0x1C17DEC
	311 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0349E560 BL 0x1C16CF4
	0x0349E564 ADRP X0, 0xC90000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

