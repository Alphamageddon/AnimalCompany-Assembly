Type: Nakama.Console.ApiClient/<GetStorageAsync>d__30

Method: System.Void MoveNext()

Disassembly:
	0x034AA7F4 LDR X1, [X8]
	0x034AA7F8 BL 0x220E6DC
	0x034AA7FC MOVN W8, 0x1
	0x034AA800 STR W8, [X19], #0x8
	0x034AA804 MOV X20, X0
	0x034AA808 LDR X0, [X25]
	0x034AA80C ADRP X21, 0xC88000
	0x034AA810 LDR W8, [X0 + 0xE0]
	0x034AA814 LDR X21, [X21 + 0x170]
	0x034AA818 CBNZ W8, 0x34AA820
	0x034AA81C BL 0x1C16DFC
	0x034AA820 LDR X2, [X21]
	0x034AA824 MOV X0, X19
	0x034AA828 MOV X1, X20
	0x034AA82C BL 0x26322B0
	0x034AA830 B 0x34AA86C
	0x034AA834 STR W31, [X19]
	0x034AA838 LDR X8, [X31 + 0x8]
	0x034AA83C STR X8, [X19 + 0x38]
	0x034AA840 LDR X0, [X25]
	0x034AA844 LDR W8, [X0 + 0xE0]
	0x034AA848 CBNZ W8, 0x34AA850
	0x034AA84C BL 0x1C16DFC
	0x034AA850 ADRP X8, 0xC88000
	0x034AA854 LDR X8, [X8 + 0x168]
	0x034AA858 ADD X0, X19, 0x8
	0x034AA85C LDR X3, [X8]
	0x034AA860 ADD X1, X31, 0x8
	0x034AA864 MOV X2, X19
	0x034AA868 BL 0x1FB826C
	0x034AA86C LDP X20, X19, [X31 + 0x40]
	0x034AA870 LDP X22, X21, [X31 + 0x30]
	0x034AA874 LDP X24, X23, [X31 + 0x20]
	0x034AA878 LDP X30, X25, [X31 + 0x10]
	0x034AA87C ADD X31, X31, 0x50
	0x034AA880 RET
	0x034AA884 BL 0x1C16F20
	0x034AA888 BL 0x1C16F20
	0x034AA88C BL 0x1C16F20
	0x034AA890 BL 0x1C16F20
	0x034AA894 BL 0x1C16F20
	0x034AA898 B 0x34AA8DC
	0x034AA89C B 0x34AA8DC
	0x034AA8A0 B 0x34AA8DC
	0x034AA8A4 B 0x34AA8DC
	0x034AA8A8 B 0x34AA8DC
	0x034AA8AC B 0x34AA8DC
	0x034AA8B0 B 0x34AA8DC
	0x034AA8B4 B 0x34AA8DC
	0x034AA8B8 B 0x34AA8DC
	0x034AA8BC B 0x34AA8DC
	0x034AA8C0 B 0x34AA8DC
	0x034AA8C4 B 0x34AA8DC
	0x034AA8C8 B 0x34AA8DC
	0x034AA8CC B 0x34AA8DC
	0x034AA8D0 B 0x34AA8DC
	0x034AA8D4 B 0x34AA8DC
	0x034AA8D8 B 0x34AA8DC
	0x034AA8DC MOV X20, X0
	0x034AA8E0 CMP W1, 0x1
	0x034AA8E4 B.NE 0x34AA980
	0x034AA8E8 MOV X0, X20
	0x034AA8EC BL 0x3EB1AD0
	0x034AA8F0 MOV X20, X0
	0x034AA8F4 ADRP X0, 0xC49000
	0x034AA8F8 LDR X0, [X0 + 0x7D0]
	0x034AA8FC BL 0x1C16D08
	0x034AA900 LDR X8, [X20]
	0x034AA904 LDR X1, [X8]
	0x034AA908 BL 0x1C17270
	0x034AA90C TBZ X0, 0x0, 0x34AA958
	0x034AA910 LDR X20, [X20]
	0x034AA914 BL 0x3EB1AE0
	0x034AA918 MOVN W8, 0x1
	0x034AA91C STR W8, [X19], #0x8
	0x034AA920 ADRP X0, 0xC87000
	0x034AA924 LDR X0, [X0 + 0xDD0]
	0x034AA928 BL 0x1C16D08
	0x034AA92C LDR W8, [X0 + 0xE0]
	0x034AA930 CBNZ W8, 0x34AA938
	0x034AA934 BL 0x1C16DFC
	0x034AA938 ADRP X0, 0xC88000
	0x034AA93C LDR X0, [X0 + 0x180]
	0x034AA940 BL 0x1C16D08
	0x034AA944 MOV X2, X0
	0x034AA948 MOV X0, X19
	0x034AA94C MOV X1, X20
	0x034AA950 BL 0x26324C8
	0x034AA954 B 0x34AA86C
	0x034AA958 MOVZ W0, 0x8
	0x034AA95C BL 0x3EB1AF0
	0x034AA960 LDR X8, [X20]
	0x034AA964 STR X8, [X0]
	0x034AA968 ADRP X1, 0xA0A000
	0x034AA96C ADD X1, X1, 0xE58
	0x034AA970 MOV X2, X31
	0x034AA974 BL 0x3EB1B00
	0x034AA978 MOV X20, X0
	0x034AA97C BL 0x3EB1AE0
	0x034AA980 MOV X0, X20
	0x034AA984 BL 0x1D2C690
	0x034AA988 BL 0x1990590
	0x034AA98C STR X30, [X31 - 0x30]!
	0x034AA990 STP X22, X21, [X31 + 0x10]
	0x034AA994 STP X20, X19, [X31 + 0x20]
	0x034AA998 ADRP X22, 0xF33000
	0x034AA99C ADRP X21, 0xC87000
	0x034AA9A0 LDRB W8, [X22 + 0xA19]
	0x034AA9A4 LDR X21, [X21 + 0xDD0]
	0x034AA9A8 MOV X19, X1
	0x034AA9AC MOV X20, X0
	0x034AA9B0 TBNZ X8, 0x0, 0x34AA9D4
	0x034AA9B4 ADRP X0, 0xC88000
	0x034AA9B8 LDR X0, [X0 + 0x188]
	0x034AA9BC BL 0x1C16CF4
	0x034AA9C0 ADRP X0, 0xC87000
	0x034AA9C4 LDR X0, [X0 + 0xDD0]
	0x034AA9C8 BL 0x1C16CF4
	0x034AA9CC MOVZ W8, 0x1
	0x034AA9D0 STRB W8, [X22 + 0xA19]
	0x034AA9D4 LDR X0, [X21]
	0x034AA9D8 ADRP X21, 0xC88000
	0x034AA9DC LDR W8, [X0 + 0xE0]
	0x034AA9E0 LDR X21, [X21 + 0x188]
	0x034AA9E4 CBNZ W8, 0x34AA9EC
	0x034AA9E8 BL 0x1C16DFC
	0x034AA9EC LDR X2, [X21]
	0x034AA9F0 ADD X0, X20, 0x8
	0x034AA9F4 MOV X1, X19
	0x034AA9F8 LDP X20, X19, [X31 + 0x20]
	0x034AA9FC LDP X22, X21, [X31 + 0x10]
	0x034AAA00 LDR X30, [X31], #0x30
	0x034AAA04 B 0x2632228
	0x034AAA08 SUB X31, X31, 0x50
	0x034AAA0C STP X30, X25, [X31 + 0x10]
	0x034AAA10 STP X24, X23, [X31 + 0x20]
	0x034AAA14 STP X22, X21, [X31 + 0x30]
	0x034AAA18 STP X20, X19, [X31 + 0x40]
	0x034AAA1C ADRP X20, 0xF33000
	0x034AAA20 LDRB W8, [X20 + 0xA1A]
	0x034AAA24 MOV X19, X0
	0x034AAA28 TBNZ X8, 0x0, 0x34AAB54
	0x034AAA2C ADRP X0, 0xC88000
	0x034AAA30 LDR X0, [X0 + 0x190]
	0x034AAA34 BL 0x1C16CF4
	0x034AAA38 ADRP X0, 0xC88000
	0x034AAA3C LDR X0, [X0 + 0x198]
	0x034AAA40 BL 0x1C16CF4
	0x034AAA44 ADRP X0, 0xC87000
	0x034AAA48 LDR X0, [X0 + 0xE48]
	0x034AAA4C BL 0x1C16CF4
	0x034AAA50 ADRP X0, 0xC4A000
	0x034AAA54 LDR X0, [X0 + 0x810]
	0x034AAA58 BL 0x1C16CF4
	0x034AAA5C ADRP X0, 0xC4A000
	0x034AAA60 LDR X0, [X0 + 0x6C0]
	0x034AAA64 BL 0x1C16CF4
	0x034AAA68 ADRP X0, 0xC4A000
	0x034AAA6C LDR X0, [X0 + 0x6D0]
	0x034AAA70 BL 0x1C16CF4
	0x034AAA74 ADRP X0, 0xC84000
	0x034AAA78 LDR X0, [X0 + 0x7B8]
	0x034AAA7C BL 0x1C16CF4
	0x034AAA80 ADRP X0, 0xC88000
	0x034AAA84 LDR X0, [X0 + 0x1A0]
	0x034AAA88 BL 0x1C16CF4
	0x034AAA8C ADRP X0, 0xC84000
	0x034AAA90 LDR X0, [X0 + 0x830]
	0x034AAA94 BL 0x1C16CF4
	0x034AAA98 ADRP X0, 0xC4D000
	0x034AAA9C LDR X0, [X0 + 0xBF0]
	0x034AAAA0 BL 0x1C16CF4
	0x034AAAA4 ADRP X0, 0xC4C000
	0x034AAAA8 LDR X0, [X0 + 0x1E0]
	0x034AAAAC BL 0x1C16CF4
	0x034AAAB0 ADRP X0, 0xC4C000
	0x034AAAB4 LDR X0, [X0 + 0x1F0]
	0x034AAAB8 BL 0x1C16CF4
	0x034AAABC ADRP X0, 0xC4C000
	0x034AAAC0 LDR X0, [X0 + 0x1F8]
	0x034AAAC4 BL 0x1C16CF4
	0x034AAAC8 ADRP X0, 0xC52000
	0x034AAACC LDR X0, [X0 + 0x3A0]
	0x034AAAD0 BL 0x1C16CF4
	0x034AAAD4 ADRP X0, 0xC4B000
	0x034AAAD8 LDR X0, [X0 + 0xA28]
	0x034AAADC BL 0x1C16CF4
	0x034AAAE0 ADRP X0, 0xC87000
	0x034AAAE4 LDR X0, [X0 + 0xF98]
	0x034AAAE8 BL 0x1C16CF4
	0x034AAAEC ADRP X0, 0xC72000
	0x034AAAF0 LDR X0, [X0 + 0x4D0]
	0x034AAAF4 BL 0x1C16CF4
	0x034AAAF8 ADRP X0, 0xC88000
	0x034AAAFC LDR X0, [X0 + 0x1A8]
	0x034AAB00 BL 0x1C16CF4
	0x034AAB04 ADRP X0, 0xC88000
	0x034AAB08 LDR X0, [X0 + 0x1B0]
	0x034AAB0C BL 0x1C16CF4
	0x034AAB10 ADRP X0, 0xC52000
	0x034AAB14 LDR X0, [X0 + 0x720]
	0x034AAB18 BL 0x1C16CF4
	0x034AAB1C ADRP X0, 0xC88000
	0x034AAB20 LDR X0, [X0 + 0x1B8]
	0x034AAB24 BL 0x1C16CF4
	0x034AAB28 ADRP X0, 0xC84000
	0x034AAB2C LDR X0, [X0 + 0x7D0]
	0x034AAB30 BL 0x1C16CF4
	0x034AAB34 ADRP X0, 0xC84000
	0x034AAB38 LDR X0, [X0 + 0x7D8]
	0x034AAB3C BL 0x1C16CF4
	0x034AAB40 ADRP X0, 0xC49000
	0x034AAB44 LDR X0, [X0 + 0x988]
	0x034AAB48 BL 0x1C16CF4
	0x034AAB4C MOVZ W8, 0x1
	0x034AAB50 STRB W8, [X20 + 0xA1A]
	0x034AAB54 STR X31, [X31 + 0x8]
	0x034AAB58 ADRP X25, 0xC87000
	0x034AAB5C LDR W8, [X19]
	0x034AAB60 LDR X25, [X25 + 0xE48]
	0x034AAB64 CBZ W8, 0x34AADA4
	0x034AAB68 ADRP X8, 0xC87000
	0x034AAB6C ADRP X9, 0xC49000
	0x034AAB70 LDR X8, [X8 + 0xF98]
	0x034AAB74 LDR X9, [X9 + 0x988]
	0x034AAB78 LDR X24, [X19 + 0x30]
	0x034AAB7C LDR X22, [X19 + 0x20]
	0x034AAB80 LDR X20, [X8]
	0x034AAB84 LDR X21, [X9]
	0x034AAB88 CBZ X22, 0x34AABDC
	0x034AAB8C ADRP X8, 0xC4B000
	0x034AAB90 LDR X8, [X8 + 0xA28]
	0x034AAB94 LDR X0, [X8]
	0x034AAB98 LDR W8, [X0 + 0xE0]
	0x034AAB9C CBNZ W8, 0x34AABA4
	0x034AABA0 BL 0x1C16DFC
	0x034AABA4 MOV X0, X22
	0x034AABA8 MOV X1, X31
	0x034AABAC BL 0x3624D20
	0x034AABB0 ADRP X8, 0xC88000
	0x034AABB4 LDR X8, [X8 + 0x1B8]
	0x034AABB8 ADRP X9, 0xC52000
	0x034AABBC LDR X9, [X9 + 0x720]
	0x034AABC0 MOV X2, X0
	0x034AABC4 LDR X1, [X8]
	0x034AABC8 LDR X3, [X9]
	0x034AABCC MOV X0, X21
	0x034AABD0 MOV X4, X31
	0x034AABD4 BL 0x32277C4
	0x034AABD8 MOV X21, X0
	0x034AABDC MOV X0, X19
	0x034AABE0 LDRB W8, [X0 + 0x28]!
	0x034AABE4 CBZ W8, 0x34AAC30
	0x034AABE8 ADRP X8, 0xC84000
	0x034AABEC LDR X8, [X8 + 0x830]
	0x034AABF0 LDR X1, [X8]
	0x034AABF4 BL 0x242D714
	0x034AABF8 CBZ X0, 0x34AAEE8
	0x034AABFC MOV X1, X31
	0x034AAC00 BL 0x322B5E4
	0x034AAC04 ADRP X8, 0xC88000
	0x034AAC08 LDR X8, [X8 + 0x1B0]
	0x034AAC0C ADRP X9, 0xC52000
	0x034AAC10 LDR X9, [X9 + 0x720]
	0x034AAC14 MOV X2, X0
	0x034AAC18 LDR X1, [X8]
	0x034AAC1C LDR X3, [X9]
	0x034AAC20 MOV X0, X21
	0x034AAC24 MOV X4, X31
	0x034AAC28 BL 0x32277C4
	0x034AAC2C MOV X21, X0
	0x034AAC30 MOV X0, X19
	0x034AAC34 LDRB W8, [X0 + 0x2A]!
	0x034AAC38 CBZ W8, 0x34AAC84
	0x034AAC3C ADRP X8, 0xC84000
	0x034AAC40 LDR X8, [X8 + 0x830]
	0x034AAC44 LDR X1, [X8]
	0x034AAC48 BL 0x242D714
	0x034AAC4C CBZ X0, 0x34AAEEC
	0x034AAC50 MOV X1, X31
	0x034AAC54 BL 0x322B5E4
	0x034AAC58 ADRP X8, 0xC88000
	0x034AAC5C LDR X8, [X8 + 0x1A8]
	0x034AAC60 ADRP X9, 0xC52000
	0x034AAC64 LDR X9, [X9 + 0x720]
	0x034AAC68 MOV X2, X0
	0x034AAC6C LDR X1, [X8]
	0x034AAC70 LDR X3, [X9]
	0x034AAC74 MOV X0, X21
	0x034AAC78 MOV X4, X31
	0x034AAC7C BL 0x32277C4
	0x034AAC80 MOV X21, X0
	0x034AAC84 CBZ X24, 0x34AAED4
	0x034AAC88 ADRP X8, 0xC52000
	0x034AAC8C LDR X8, [X8 + 0x3A0]
	0x034AAC90 LDR X23, [X24 + 0x10]
	0x034AAC94 LDR X0, [X8]
	0x034AAC98 BL 0x1C16F10
	0x034AAC9C MOV X22, X0
	0x034AACA0 MOV X1, X23
	0x034AACA4 MOV X2, X31
	0x034AACA8 BL 0x36281F8
	0x034AACAC CBZ X22, 0x34AAED8
	0x034AACB0 MOV X0, X22
	0x034AACB4 MOV X1, X20
	0x034AACB8 MOV X2, X31
	0x034AACBC BL 0x36288CC
	0x034AACC0 MOV X0, X22
	0x034AACC4 MOV X1, X21
	0x034AACC8 MOV X2, X31
	0x034AACCC BL 0x3628980
	0x034AACD0 MOV X0, X22
	0x034AACD4 MOV X1, X31
	0x034AACD8 BL 0x3628A38
	0x034AACDC ADRP X8, 0xC72000
	0x034AACE0 ADRP X9, 0xC4A000
	0x034AACE4 LDR X8, [X8 + 0x4D0]
	0x034AACE8 LDR X9, [X9 + 0x6D0]
	0x034AACEC MOV X20, X0
	0x034AACF0 LDR X21, [X8]
	0x034AACF4 LDR X0, [X9]
	0x034AACF8 BL 0x1C16F10
	0x034AACFC ADRP X8, 0xC4A000
	0x034AAD00 LDR X8, [X8 + 0x6C0]
	0x034AAD04 MOV X22, X0
	0x034AAD08 LDR X1, [X8]
	0x034AAD0C BL 0x2AA4804
	0x034AAD10 ADRP X8, 0xC84000
	0x034AAD14 LDR X8, [X8 + 0x7D8]
	0x034AAD18 LDR X1, [X19 + 0x38]
	0x034AAD1C LDR X0, [X8]
	0x034AAD20 MOV X2, X31
	0x034AAD24 BL 0x321B938
	0x034AAD28 CBZ X22, 0x34AAEDC
	0x034AAD2C ADRP X8, 0xC84000
	0x034AAD30 LDR X8, [X8 + 0x7D0]
	0x034AAD34 ADRP X9, 0xC4A000
	0x034AAD38 LDR X9, [X9 + 0x810]
	0x034AAD3C MOV X2, X0
	0x034AAD40 LDR X1, [X8]
	0x034AAD44 LDR X3, [X9]
	0x034AAD48 MOV X0, X22
	0x034AAD4C BL 0x2AA5098
	0x034AAD50 LDR X23, [X24 + 0x20]
	0x034AAD54 CBZ X23, 0x34AAEE0
	0x034AAD58 ADRP X10, 0xC84000
	0x034AAD5C LDR X8, [X23]
	0x034AAD60 LDR X10, [X10 + 0x7B8]
	0x034AAD64 LDR W24, [X24 + 0x18]
	0x034AAD68 LDRH W9, [X8 + 0x12E]
	0x034AAD6C LDR X1, [X10]
	0x034AAD70 CBZ X9, 0x34AAD94
	0x034AAD74 LDR X10, [X8 + 0xB0]
	0x034AAD78 ADD X10, X10, 0x8
	0x034AAD7C LDUR X11, [X10 - 0x8]
	0x034AAD80 CMP X11, X1
	0x034AAD84 B.EQ 0x34AADBC
	0x034AAD88 SUBS X9, X9, 0x1
	0x034AAD8C ADD X10, X10, 0x10
	0x034AAD90 B.NE 0x34AAD7C
	0x034AAD94 MOVZ W2, 0x3
	0x034AAD98 MOV X0, X23
	0x034AAD9C BL 0x1C5C788
	0x034AADA0 B 0x34AADCC
	0x034AADA4 LDR X8, [X19 + 0x40]
	0x034AADA8 MOVN W9, 0x0
	0x034AADAC STR X8, [X31 + 0x8]
	0x034AADB0 STR X31, [X19 + 0x40]
	0x034AADB4 STR W9, [X19]
	0x034AADB8 B 0x34AAE28
	0x034AADBC LDR W9, [X10]
	0x034AADC0 ADD W9, W9, 0x3
	0x034AADC4 ADD X8, X8, W9, 0x4, SXTW
	0x034AADC8 ADD X0, X8, 0x138
	0x034AADCC LDP X8, X9, [X0]
	0x034AADD0 MOV X0, X23
	0x034AADD4 MOV X1, X21
	0x034AADD8 MOV X2, X20
	0x034AADDC MOV X3, X22
	0x034AADE0 MOV X4, X31
	0x034AADE4 MOV W5, W24
	0x034AADE8 MOV X6, X31
	0x034AADEC MOV X7, X31
	0x034AADF0 STR X9, [X31]
	0x034AADF4 BLR X8
	0x034AADF8 CBZ X0, 0x34AAEE4
	0x034AADFC ADRP X8, 0xC4C000
	0x034AAE00 LDR X8, [X8 + 0x1F8]
	0x034AAE04 LDR X1, [X8]
	0x034AAE08 BL 0x269F5D0
	0x034AAE0C ADRP X8, 0xC4C000
	0x034AAE10 LDR X8, [X8 + 0x1F0]
	0x034AAE14 STR X0, [X31 + 0x8]
	0x034AAE18 LDR X1, [X8]
	0x034AAE1C ADD X0, X31, 0x8
	0x034AAE20 BL 0x2677430
	0x034AAE24 TBZ X0, 0x0, 0x34AAE84
	0x034AAE28 ADRP X8, 0xC4C000
	0x034AAE2C LDR X8, [X8 + 0x1E0]
	0x034AAE30 ADD X0, X31, 0x8
	0x034AAE34 LDR X1, [X8]
	0x034AAE38 BL 0x2677474
	0x034AAE3C ADRP X8, 0xC88000
	0x034AAE40 LDR X8, [X8 + 0x1A0]
	0x034AAE44 LDR X1, [X8]
	0x034AAE48 BL 0x220E6DC
	0x034AAE4C MOVN W8, 0x1
	0x034AAE50 STR W8, [X19], #0x8
	0x034AAE54 MOV X20, X0
	0x034AAE58 LDR X0, [X25]
	0x034AAE5C ADRP X21, 0xC88000
	0x034AAE60 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF34000
	011 Move W8, [X20+2580]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {82}
	017 Move X0, 0xC89000
	018 Move X0, [X0+256]
	019 Call 0x1C17CF4
	020 Move X0, 0xC89000
	021 Move X0, [X0+264]
	022 Call 0x1C17CF4
	023 Move X0, 0xC88000
	024 Move X0, [X0+3576]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4B000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4B000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xC4B000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0xC85000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xC89000
	039 Move X0, [X0+272]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4D000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4D000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4D000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xC53000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xC4C000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0xC88000
	057 Move X0, [X0+3960]
	058 Call 0x1C17CF4
	059 Move X0, 0xC86000
	060 Move X0, [X0+256]
	061 Call 0x1C17CF4
	062 Move X0, 0xC88000
	063 Move X0, [X0+3896]
	064 Call 0x1C17CF4
	065 Move X0, 0xC73000
	066 Move X0, [X0+1232]
	067 Call 0x1C17CF4
	068 Move X0, 0xC88000
	069 Move X0, [X0+3912]
	070 Call 0x1C17CF4
	071 Move X0, 0xC85000
	072 Move X0, [X0+2000]
	073 Call 0x1C17CF4
	074 Move X0, 0xC85000
	075 Move X0, [X0+2008]
	076 Call 0x1C17CF4
	077 Move X0, 0xC4A000
	078 Move X0, [X0+2440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+2580], W8
	082 Move [X31+8], X31
	083 Move X25, 0xC88000
	084 Move W8, [X19]
	085 Move X25, [X25+3576]
	086 Compare W8, 0
	087 JumpIfEqual {224}
	088 Move X20, [X19+32]
	089 Compare X20, 0
	090 JumpIfEqual {313}
	091 Move X8, [X19+40]
	092 Compare X8, 0
	093 JumpIfEqual {331}
	094 Move X8, [X19+48]
	095 Compare X8, 0
	096 JumpIfEqual {349}
	097 Move X8, 0xC4C000
	098 Move X8, [X8+2600]
	099 Move X0, [X8]
	100 Move X8, 0xC88000
	101 Move X8, [X8+3960]
	102 Move X24, [X19+56]
	103 Move W9, [X0+224]
	104 Move X21, [X8]
	105 Compare W9, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X20
	109 Move X1, X31
	110 Call Uri.EscapeDataString, X0
	111 Compare X21, 0
	112 JumpIfEqual {367}
	113 Move X8, 0xC86000
	114 Move X8, [X8+256]
	115 Move X2, X0
	116 Move X1, [X8]
	117 Move X0, X21
	118 Move X3, X31
	119 Call String.Replace, X0, X1, X2
	120 Move X20, X0
	121 Move X0, [X19+40]
	122 Move X1, X31
	123 Call Uri.EscapeDataString, X0
	124 Compare X20, 0
	125 JumpIfEqual {368}
	126 Move X8, 0xC88000
	127 Move X8, [X8+3896]
	128 Move X2, X0
	129 Move X1, [X8]
	130 Move X0, X20
	131 Move X3, X31
	132 Call String.Replace, X0, X1, X2
	133 Move X20, X0
	134 Move X0, [X19+48]
	135 Move X1, X31
	136 Call Uri.EscapeDataString, X0
	137 Compare X20, 0
	138 JumpIfEqual {369}
	139 Move X8, 0xC88000
	140 Move X8, [X8+3912]
	141 Move X2, X0
	142 Move X1, [X8]
	143 Move X0, X20
	144 Move X3, X31
	145 Call String.Replace, X0, X1, X2
	146 Compare X24, 0
	147 JumpIfEqual {370}
	148 Move X8, 0xC4A000
	149 Move X9, 0xC53000
	150 Move X8, [X8+2440]
	151 Move X9, [X9+928]
	152 Move X22, X0
	153 Move X23, [X24+16]
	154 Move X21, [X8]
	155 Move X0, [X9]
	156 Call 0x1C17F10
	157 Move X20, X0
	158 Move X1, X23
	159 Move X2, X31
	160 Call UriBuilder..ctor, X0, X1
	161 Compare X20, 0
	162 JumpIfEqual {371}
	163 Move X0, X20
	164 Move X1, X22
	165 Move X2, X31
	166 Call UriBuilder.set_Path, X0, X1
	167 Move X0, X20
	168 Move X1, X21
	169 Move X2, X31
	170 Call UriBuilder.set_Query, X0, X1
	171 Move X0, X20
	172 Move X1, X31
	173 Call UriBuilder.get_Uri, X0
	174 Move X8, 0xC73000
	175 Move X9, 0xC4B000
	176 Move X8, [X8+1232]
	177 Move X9, [X9+1744]
	178 Move X20, X0
	179 Move X21, [X8]
	180 Move X0, [X9]
	181 Call 0x1C17F10
	182 Move X8, 0xC4B000
	183 Move X8, [X8+1728]
	184 Move X22, X0
	185 Move X1, [X8]
	186 Call Dictionary`2<Object, Object>..ctor, X0
	187 Move X8, 0xC85000
	188 Move X8, [X8+2008]
	189 Move X1, [X19+64]
	190 Move X0, [X8]
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Compare X22, 0
	194 JumpIfEqual {372}
	195 Move X8, 0xC85000
	196 Move X8, [X8+2000]
	197 Move X9, 0xC4B000
	198 Move X9, [X9+2064]
	199 Move X2, X0
	200 Move X1, [X8]
	201 Move X3, [X9]
	202 Move X0, X22
	203 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	204 Move X23, [X24+32]
	205 Compare X23, 0
	206 JumpIfEqual {373}
	207 Move X10, 0xC85000
	208 Move X8, [X23]
	209 Move X10, [X10+1976]
	210 Move W24, [X24+24]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move X1, [X10]
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move W2, 3
	222 Move X0, X23
	223 Call 0x1C5D788
	224 Move X8, [X19+72]
	225 Move TEMP, 0
	226 Not TEMP
	227 Move W9, TEMP
	228 Move [X31+8], X8
	229 Move [X19+72], X31
	230 Move [X19], W9
	231 Move W9, [X10]
	232 Add W9, W9, 3
	233 Add X8, X8, W9
	234 Add X0, X8, 312
	235 Move X8, [X0]
	236 Move X9, [X0+8]
	237 Move X0, X23
	238 Move X1, X21
	239 Move X2, X20
	240 Move X3, X22
	241 Move X4, X31
	242 Move W5, W24
	243 Move X6, X31
	244 Move X7, X31
	245 Move [X31], X9
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Compare X0, 0
	248 JumpIfEqual {374}
	249 Move X8, 0xC4D000
	250 Move X8, [X8+504]
	251 Move X1, [X8]
	252 Call Task`1<Object>.GetAwaiter, X0
	253 Move X8, 0xC4D000
	254 Move X8, [X8+496]
	255 Move [X31+8], X0
	256 Move X1, [X8]
	257 Add X0, X31, 8
	258 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {288}
	263 Move X8, 0xC4D000
	264 Move X8, [X8+480]
	265 Add X0, X31, 8
	266 Move X1, [X8]
	267 Call TaskAwaiter`1<Object>.GetResult, X0
	268 Move X8, 0xC89000
	269 Move X8, [X8+272]
	270 Move X1, [X8]
	271 Call JsonParser.FromJson, X0
	272 Move TEMP, 1
	273 Not TEMP
	274 Move W8, TEMP
	275 Move [X19+8], W8
	276 Move X20, X0
	277 Move X0, [X25]
	278 Move X21, 0xC89000
	279 Move W8, [X0+224]
	280 Move X21, [X21+264]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X2, [X21]
	285 Move X0, X19
	286 Move X1, X20
	287 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	288 Move [X19], W31
	289 Move X8, [X31+8]
	290 Move [X19+72], X8
	291 Move X0, [X25]
	292 Move W8, [X0+224]
	293 Compare W8, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move X8, 0xC89000
	297 Move X8, [X8+256]
	298 Add X0, X19, 8
	299 Move X3, [X8]
	300 Add X1, X31, 8
	301 Move X2, X19
	302 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	303 Move X20, [X31+64]
	304 Move X19, [X31+72]
	305 Move X22, [X31+48]
	306 Move X21, [X31+56]
	307 Move X24, [X31+32]
	308 Move X23, [X31+40]
	309 Move X30, [X31+16]
	310 Move X25, [X31+24]
	311 Add X31, X31, 80
	312 Return 
	313 Move X0, 0xC52000
	314 Move X0, [X0+1400]
	315 Call 0x1C17D08
	316 Call 0x1C17F10
	317 Move X20, X0
	318 Move X0, 0xC86000
	319 Move X0, [X0+280]
	320 Call 0x1C17D08
	321 Move X1, X0
	322 Move X0, X20
	323 Move X2, X31
	324 Call ArgumentException..ctor, X0, X1
	325 Move X0, 0xC89000
	326 Move X0, [X0+280]
	327 Call 0x1C17D08
	328 Move X1, X0
	329 Move X0, X20
	330 Call 0x1C17DEC
	331 Move X0, 0xC52000
	332 Move X0, [X0+1400]
	333 Call 0x1C17D08
	334 Call 0x1C17F10
	335 Move X20, X0
	336 Move X0, 0xC88000
	337 Move X0, [X0+3936]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Move X2, X31
	342 Call ArgumentException..ctor, X0, X1
	343 Move X0, 0xC89000
	344 Move X0, [X0+280]
	345 Call 0x1C17D08
	346 Move X1, X0
	347 Move X0, X20
	348 Call 0x1C17DEC
	349 Move X0, 0xC52000
	350 Move X0, [X0+1400]
	351 Call 0x1C17D08
	352 Call 0x1C17F10
	353 Move X20, X0
	354 Move X0, 0xC86000
	355 Move X0, [X0+296]
	356 Call 0x1C17D08
	357 Move X1, X0
	358 Move X0, X20
	359 Move X2, X31
	360 Call ArgumentException..ctor, X0, X1
	361 Move X0, 0xC89000
	362 Move X0, [X0+280]
	363 Call 0x1C17D08
	364 Move X1, X0
	365 Move X0, X20
	366 Call 0x1C17DEC
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Move X20, X0
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move X0, X20
	378 Call 0x3EB2AD0
	379 Move X20, X0
	380 Move X0, 0xC4A000
	381 Move X0, [X0+2000]
	382 Call 0x1C17D08
	383 Move X8, [X20]
	384 Move X1, [X8]
	385 Call 0x1C18270
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfNotEqual {410}
	390 Move X20, [X20]
	391 Call 0x3EB2AE0
	392 Move TEMP, 1
	393 Not TEMP
	394 Move W8, TEMP
	395 Move [X19+8], W8
	396 Move X0, 0xC88000
	397 Move X0, [X0+3576]
	398 Call 0x1C17D08
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X0, 0xC89000
	404 Move X0, [X0+288]
	405 Call 0x1C17D08
	406 Move X2, X0
	407 Move X0, X19
	408 Move X1, X20
	409 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	410 Move W0, 8
	411 Call 0x3EB2AF0
	412 Move X8, [X20]
	413 Move [X0], X8
	414 Move X1, 0xA0B000
	415 Add X1, X1, 3672
	416 Move X2, X31
	417 Call 0x3EB2B00
	418 Move X20, X0
	419 Call 0x3EB2AE0
	420 Move X0, X20
	421 Call 0x1D2D690
	422 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AAE64 LDR X21, [X21 + 0x198]
	0x034AAE68 CBNZ W8, 0x34AAE70
	0x034AAE6C BL 0x1C16DFC
	0x034AAE70 LDR X2, [X21]
	0x034AAE74 MOV X0, X19
	0x034AAE78 MOV X1, X20
	0x034AAE7C BL 0x26322B0
	0x034AAE80 B 0x34AAEBC
	0x034AAE84 STR W31, [X19]
	0x034AAE88 LDR X8, [X31 + 0x8]
	0x034AAE8C STR X8, [X19 + 0x40]
	0x034AAE90 LDR X0, [X25]
	0x034AAE94 LDR W8, [X0 + 0xE0]
	0x034AAE98 CBNZ W8, 0x34AAEA0
	0x034AAE9C BL 0x1C16DFC
	0x034AAEA0 ADRP X8, 0xC88000
	0x034AAEA4 LDR X8, [X8 + 0x190]
	0x034AAEA8 ADD X0, X19, 0x8
	0x034AAEAC LDR X3, [X8]
	0x034AAEB0 ADD X1, X31, 0x8
	0x034AAEB4 MOV X2, X19
	0x034AAEB8 BL 0x1FB8480
	0x034AAEBC LDP X20, X19, [X31 + 0x40]
	0x034AAEC0 LDP X22, X21, [X31 + 0x30]
	0x034AAEC4 LDP X24, X23, [X31 + 0x20]
	0x034AAEC8 LDP X30, X25, [X31 + 0x10]
	0x034AAECC ADD X31, X31, 0x50
	0x034AAED0 RET
	0x034AAED4 BL 0x1C16F20
	0x034AAED8 BL 0x1C16F20
	0x034AAEDC BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF34000
	007 Move X21, 0xC88000
	008 Move W8, [X22+2581]
	009 Move X21, [X21+3576]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC89000
	017 Move X0, [X0+296]
	018 Call 0x1C17CF4
	019 Move X0, 0xC88000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2581], W8
	024 Move X0, [X21]
	025 Move X21, 0xC89000
	026 Move W8, [X0+224]
	027 Move X21, [X21+296]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

