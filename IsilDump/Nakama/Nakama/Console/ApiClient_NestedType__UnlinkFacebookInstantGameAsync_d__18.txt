Type: Nakama.Console.ApiClient/<UnlinkFacebookInstantGameAsync>d__18

Method: System.Void MoveNext()

Disassembly:
	0x034ADBD4 LDR X30, [X31], #0x30
	0x034ADBD8 B 0x32C477C
	0x034ADBDC SUB X31, X31, 0x50
	0x034ADBE0 STP X30, X25, [X31 + 0x10]
	0x034ADBE4 STP X24, X23, [X31 + 0x20]
	0x034ADBE8 STP X22, X21, [X31 + 0x30]
	0x034ADBEC STP X20, X19, [X31 + 0x40]
	0x034ADBF0 ADRP X20, 0xF30000
	0x034ADBF4 LDRB W8, [X20 + 0xA2C]
	0x034ADBF8 MOV X19, X0
	0x034ADBFC TBNZ X8, 0x0, 0x34ADCD4
	0x034ADC00 ADRP X0, 0xC85000
	0x034ADC04 LDR X0, [X0 + 0x290]
	0x034ADC08 BL 0x1C16CF4
	0x034ADC0C ADRP X0, 0xC49000
	0x034ADC10 LDR X0, [X0 + 0x280]
	0x034ADC14 BL 0x1C16CF4
	0x034ADC18 ADRP X0, 0xC47000
	0x034ADC1C LDR X0, [X0 + 0x810]
	0x034ADC20 BL 0x1C16CF4
	0x034ADC24 ADRP X0, 0xC47000
	0x034ADC28 LDR X0, [X0 + 0x6C0]
	0x034ADC2C BL 0x1C16CF4
	0x034ADC30 ADRP X0, 0xC47000
	0x034ADC34 LDR X0, [X0 + 0x6D0]
	0x034ADC38 BL 0x1C16CF4
	0x034ADC3C ADRP X0, 0xC81000
	0x034ADC40 LDR X0, [X0 + 0x7B8]
	0x034ADC44 BL 0x1C16CF4
	0x034ADC48 ADRP X0, 0xC49000
	0x034ADC4C LDR X0, [X0 + 0x1E0]
	0x034ADC50 BL 0x1C16CF4
	0x034ADC54 ADRP X0, 0xC49000
	0x034ADC58 LDR X0, [X0 + 0x1F0]
	0x034ADC5C BL 0x1C16CF4
	0x034ADC60 ADRP X0, 0xC49000
	0x034ADC64 LDR X0, [X0 + 0x1F8]
	0x034ADC68 BL 0x1C16CF4
	0x034ADC6C ADRP X0, 0xC4F000
	0x034ADC70 LDR X0, [X0 + 0x3A0]
	0x034ADC74 BL 0x1C16CF4
	0x034ADC78 ADRP X0, 0xC48000
	0x034ADC7C LDR X0, [X0 + 0xA28]
	0x034ADC80 BL 0x1C16CF4
	0x034ADC84 ADRP X0, 0xC85000
	0x034ADC88 LDR X0, [X0 + 0x298]
	0x034ADC8C BL 0x1C16CF4
	0x034ADC90 ADRP X0, 0xC6F000
	0x034ADC94 LDR X0, [X0 + 0x4D8]
	0x034ADC98 BL 0x1C16CF4
	0x034ADC9C ADRP X0, 0xC81000
	0x034ADCA0 LDR X0, [X0 + 0x7D0]
	0x034ADCA4 BL 0x1C16CF4
	0x034ADCA8 ADRP X0, 0xC82000
	0x034ADCAC LDR X0, [X0 + 0x2E8]
	0x034ADCB0 BL 0x1C16CF4
	0x034ADCB4 ADRP X0, 0xC81000
	0x034ADCB8 LDR X0, [X0 + 0x7D8]
	0x034ADCBC BL 0x1C16CF4
	0x034ADCC0 ADRP X0, 0xC46000
	0x034ADCC4 LDR X0, [X0 + 0x988]
	0x034ADCC8 BL 0x1C16CF4
	0x034ADCCC MOVZ W8, 0x1
	0x034ADCD0 STRB W8, [X20 + 0xA2C]
	0x034ADCD4 STR X31, [X31 + 0x8]
	0x034ADCD8 ADRP X25, 0xC49000
	0x034ADCDC LDR W8, [X19]
	0x034ADCE0 LDR X25, [X25 + 0x280]
	0x034ADCE4 CBZ W8, 0x34ADE74
	0x034ADCE8 LDR X21, [X19 + 0x20]
	0x034ADCEC CBZ X21, 0x34ADF84
	0x034ADCF0 ADRP X8, 0xC48000
	0x034ADCF4 LDR X8, [X8 + 0xA28]
	0x034ADCF8 LDR X0, [X8]
	0x034ADCFC ADRP X8, 0xC85000
	0x034ADD00 LDR X8, [X8 + 0x298]
	0x034ADD04 LDR X24, [X19 + 0x28]
	0x034ADD08 LDR W9, [X0 + 0xE0]
	0x034ADD0C LDR X20, [X8]
	0x034ADD10 CBNZ W9, 0x34ADD18
	0x034ADD14 BL 0x1C16DFC
	0x034ADD18 MOV X0, X21
	0x034ADD1C MOV X1, X31
	0x034ADD20 BL 0x3624D20
	0x034ADD24 CBZ X20, 0x34ADFCC
	0x034ADD28 ADRP X8, 0xC82000
	0x034ADD2C LDR X8, [X8 + 0x2E8]
	0x034ADD30 MOV X2, X0
	0x034ADD34 LDR X1, [X8]
	0x034ADD38 MOV X0, X20
	0x034ADD3C MOV X3, X31
	0x034ADD40 BL 0x32293BC
	0x034ADD44 CBZ X24, 0x34ADFD0
	0x034ADD48 ADRP X8, 0xC46000
	0x034ADD4C ADRP X9, 0xC4F000
	0x034ADD50 LDR X8, [X8 + 0x988]
	0x034ADD54 LDR X9, [X9 + 0x3A0]
	0x034ADD58 MOV X22, X0
	0x034ADD5C LDR X23, [X24 + 0x10]
	0x034ADD60 LDR X21, [X8]
	0x034ADD64 LDR X0, [X9]
	0x034ADD68 BL 0x1C16F10
	0x034ADD6C MOV X20, X0
	0x034ADD70 MOV X1, X23
	0x034ADD74 MOV X2, X31
	0x034ADD78 BL 0x36281F8
	0x034ADD7C CBZ X20, 0x34ADFD4
	0x034ADD80 MOV X0, X20
	0x034ADD84 MOV X1, X22
	0x034ADD88 MOV X2, X31
	0x034ADD8C BL 0x36288CC
	0x034ADD90 MOV X0, X20
	0x034ADD94 MOV X1, X21
	0x034ADD98 MOV X2, X31
	0x034ADD9C BL 0x3628980
	0x034ADDA0 MOV X0, X20
	0x034ADDA4 MOV X1, X31
	0x034ADDA8 BL 0x3628A38
	0x034ADDAC ADRP X8, 0xC6F000
	0x034ADDB0 ADRP X9, 0xC47000
	0x034ADDB4 LDR X8, [X8 + 0x4D8]
	0x034ADDB8 LDR X9, [X9 + 0x6D0]
	0x034ADDBC MOV X20, X0
	0x034ADDC0 LDR X21, [X8]
	0x034ADDC4 LDR X0, [X9]
	0x034ADDC8 BL 0x1C16F10
	0x034ADDCC ADRP X8, 0xC47000
	0x034ADDD0 LDR X8, [X8 + 0x6C0]
	0x034ADDD4 MOV X22, X0
	0x034ADDD8 LDR X1, [X8]
	0x034ADDDC BL 0x2AA4804
	0x034ADDE0 ADRP X8, 0xC81000
	0x034ADDE4 LDR X8, [X8 + 0x7D8]
	0x034ADDE8 LDR X1, [X19 + 0x30]
	0x034ADDEC LDR X0, [X8]
	0x034ADDF0 MOV X2, X31
	0x034ADDF4 BL 0x321B938
	0x034ADDF8 CBZ X22, 0x34ADFD8
	0x034ADDFC ADRP X8, 0xC81000
	0x034ADE00 LDR X8, [X8 + 0x7D0]
	0x034ADE04 ADRP X9, 0xC47000
	0x034ADE08 LDR X9, [X9 + 0x810]
	0x034ADE0C MOV X2, X0
	0x034ADE10 LDR X1, [X8]
	0x034ADE14 LDR X3, [X9]
	0x034ADE18 MOV X0, X22
	0x034ADE1C BL 0x2AA5098
	0x034ADE20 LDR X23, [X24 + 0x20]
	0x034ADE24 CBZ X23, 0x34ADFDC
	0x034ADE28 ADRP X10, 0xC81000
	0x034ADE2C LDR X8, [X23]
	0x034ADE30 LDR X10, [X10 + 0x7B8]
	0x034ADE34 LDR W24, [X24 + 0x18]
	0x034ADE38 LDRH W9, [X8 + 0x12E]
	0x034ADE3C LDR X1, [X10]
	0x034ADE40 CBZ X9, 0x34ADE64
	0x034ADE44 LDR X10, [X8 + 0xB0]
	0x034ADE48 ADD X10, X10, 0x8
	0x034ADE4C LDUR X11, [X10 - 0x8]
	0x034ADE50 CMP X11, X1
	0x034ADE54 B.EQ 0x34ADE8C
	0x034ADE58 SUBS X9, X9, 0x1
	0x034ADE5C ADD X10, X10, 0x10
	0x034ADE60 B.NE 0x34ADE4C
	0x034ADE64 MOVZ W2, 0x3
	0x034ADE68 MOV X0, X23
	0x034ADE6C BL 0x1C5C788
	0x034ADE70 B 0x34ADE9C
	0x034ADE74 LDR X8, [X19 + 0x38]
	0x034ADE78 MOVN W9, 0x0
	0x034ADE7C STR X8, [X31 + 0x8]
	0x034ADE80 STR X31, [X19 + 0x38]
	0x034ADE84 STR W9, [X19]
	0x034ADE88 B 0x34ADEF8
	0x034ADE8C LDR W9, [X10]
	0x034ADE90 ADD W9, W9, 0x3
	0x034ADE94 ADD X8, X8, W9, 0x4, SXTW
	0x034ADE98 ADD X0, X8, 0x138
	0x034ADE9C LDP X8, X9, [X0]
	0x034ADEA0 MOV X0, X23
	0x034ADEA4 MOV X1, X21
	0x034ADEA8 MOV X2, X20
	0x034ADEAC MOV X3, X22
	0x034ADEB0 MOV X4, X31
	0x034ADEB4 MOV W5, W24
	0x034ADEB8 MOV X6, X31
	0x034ADEBC MOV X7, X31
	0x034ADEC0 STR X9, [X31]
	0x034ADEC4 BLR X8
	0x034ADEC8 CBZ X0, 0x34ADFE0
	0x034ADECC ADRP X8, 0xC49000
	0x034ADED0 LDR X8, [X8 + 0x1F8]
	0x034ADED4 LDR X1, [X8]
	0x034ADED8 BL 0x269F5D0
	0x034ADEDC ADRP X8, 0xC49000
	0x034ADEE0 LDR X8, [X8 + 0x1F0]
	0x034ADEE4 STR X0, [X31 + 0x8]
	0x034ADEE8 LDR X1, [X8]
	0x034ADEEC ADD X0, X31, 0x8
	0x034ADEF0 BL 0x2677430
	0x034ADEF4 TBZ X0, 0x0, 0x34ADF34
	0x034ADEF8 ADRP X8, 0xC49000
	0x034ADEFC LDR X8, [X8 + 0x1E0]
	0x034ADF00 ADD X0, X31, 0x8
	0x034ADF04 LDR X1, [X8]
	0x034ADF08 BL 0x2677474
	0x034ADF0C MOVN W8, 0x1
	0x034ADF10 STR W8, [X19], #0x8
	0x034ADF14 LDR X0, [X25]
	0x034ADF18 LDR W8, [X0 + 0xE0]
	0x034ADF1C CBNZ W8, 0x34ADF24
	0x034ADF20 BL 0x1C16DFC
	0x034ADF24 MOV X0, X19
	0x034ADF28 MOV X1, X31
	0x034ADF2C BL 0x32C4864
	0x034ADF30 B 0x34ADF6C
	0x034ADF34 STR W31, [X19]
	0x034ADF38 LDR X8, [X31 + 0x8]
	0x034ADF3C STR X8, [X19 + 0x38]
	0x034ADF40 LDR X0, [X25]
	0x034ADF44 LDR W8, [X0 + 0xE0]
	0x034ADF48 CBNZ W8, 0x34ADF50
	0x034ADF4C BL 0x1C16DFC
	0x034ADF50 ADRP X8, 0xC85000
	0x034ADF54 LDR X8, [X8 + 0x290]
	0x034ADF58 ADD X0, X19, 0x8
	0x034ADF5C LDR X3, [X8]
	0x034ADF60 ADD X1, X31, 0x8
	0x034ADF64 MOV X2, X19
	0x034ADF68 BL 0x2187A34
	0x034ADF6C LDP X20, X19, [X31 + 0x40]
	0x034ADF70 LDP X22, X21, [X31 + 0x30]
	0x034ADF74 LDP X24, X23, [X31 + 0x20]
	0x034ADF78 LDP X30, X25, [X31 + 0x10]
	0x034ADF7C ADD X31, X31, 0x50
	0x034ADF80 RET
	0x034ADF84 ADRP X0, 0xC4E000
	0x034ADF88 LDR X0, [X0 + 0x578]
	0x034ADF8C BL 0x1C16D08
	0x034ADF90 BL 0x1C16F10
	0x034ADF94 MOV X20, X0
	0x034ADF98 ADRP X0, 0xC82000
	0x034ADF9C LDR X0, [X0 + 0x2F0]
	0x034ADFA0 BL 0x1C16D08
	0x034ADFA4 MOV X1, X0
	0x034ADFA8 MOV X0, X20
	0x034ADFAC MOV X2, X31
	0x034ADFB0 BL 0x3314A68
	0x034ADFB4 ADRP X0, 0xC85000
	0x034ADFB8 LDR X0, [X0 + 0x2A0]
	0x034ADFBC BL 0x1C16D08
	0x034ADFC0 MOV X1, X0
	0x034ADFC4 MOV X0, X20
	0x034ADFC8 BL 0x1C16DEC
	0x034ADFCC BL 0x1C16F20
	0x034ADFD0 BL 0x1C16F20
	0x034ADFD4 BL 0x1C16F20
	0x034ADFD8 BL 0x1C16F20
	0x034ADFDC BL 0x1C16F20
	0x034ADFE0 BL 0x1C16F20
	0x034ADFE4 B 0x34AE028
	0x034ADFE8 B 0x34AE028
	0x034ADFEC B 0x34AE028
	0x034ADFF0 B 0x34AE028
	0x034ADFF4 B 0x34AE028
	0x034ADFF8 B 0x34AE028
	0x034ADFFC B 0x34AE028
	0x034AE000 B 0x34AE028
	0x034AE004 B 0x34AE028
	0x034AE008 B 0x34AE028
	0x034AE00C B 0x34AE028
	0x034AE010 B 0x34AE028
	0x034AE014 B 0x34AE028
	0x034AE018 B 0x34AE028
	0x034AE01C B 0x34AE028
	0x034AE020 B 0x34AE028
	0x034AE024 B 0x34AE028
	0x034AE028 MOV X20, X0
	0x034AE02C CMP W1, 0x1
	0x034AE030 B.NE 0x34AE0C0
	0x034AE034 MOV X0, X20
	0x034AE038 BL 0x3EB1AD0
	0x034AE03C MOV X20, X0
	0x034AE040 ADRP X0, 0xC45000
	0x034AE044 LDR X0, [X0 + 0x7D0]
	0x034AE048 BL 0x1C16D08
	0x034AE04C LDR X8, [X20]
	0x034AE050 LDR X1, [X8]
	0x034AE054 BL 0x1C17270
	0x034AE058 TBZ X0, 0x0, 0x34AE098
	0x034AE05C LDR X20, [X20]
	0x034AE060 BL 0x3EB1AE0
	0x034AE064 MOVN W8, 0x1
	0x034AE068 STR W8, [X19], #0x8
	0x034AE06C ADRP X0, 0xC48000
	0x034AE070 LDR X0, [X0 + 0x280]
	0x034AE074 BL 0x1C16D08
	0x034AE078 LDR W8, [X0 + 0xE0]
	0x034AE07C CBNZ W8, 0x34AE084
	0x034AE080 BL 0x1C16DFC
	0x034AE084 MOV X0, X19
	0x034AE088 MOV X1, X20
	0x034AE08C MOV X2, X31
	0x034AE090 BL 0x32C4908
	0x034AE094 B 0x34ADF6C
	0x034AE098 MOVZ W0, 0x8
	0x034AE09C BL 0x3EB1AF0
	0x034AE0A0 LDR X8, [X20]
	0x034AE0A4 STR X8, [X0]
	0x034AE0A8 ADRP X1, 0xA06000
	0x034AE0AC ADD X1, X1, 0xE58
	0x034AE0B0 MOV X2, X31
	0x034AE0B4 BL 0x3EB1B00
	0x034AE0B8 MOV X20, X0
	0x034AE0BC BL 0x3EB1AE0
	0x034AE0C0 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF31000
	011 Move W8, [X20+2598]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC86000
	018 Move X0, [X0+584]
	019 Call 0x1C17CF4
	020 Move X0, 0xC4A000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC48000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC48000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC48000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC82000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC4A000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC4A000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4A000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC50000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC49000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC70000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0xC86000
	054 Move X0, [X0+592]
	055 Call 0x1C17CF4
	056 Move X0, 0xC82000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC83000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC82000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC47000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2598], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC4A000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC49000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC86000
	083 Move X8, [X8+592]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC83000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC47000
	105 Move X9, 0xC50000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC70000
	131 Move X9, 0xC48000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC48000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC82000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC82000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC48000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC82000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC4A000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC4A000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC4A000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC86000
	245 Move X8, [X8+584]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC4F000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC83000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC86000
	274 Move X0, [X0+600]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC46000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC49000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA07000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AE0C4 BL 0x1D2C690
	0x034AE0C8 BL 0x1990590
	0x034AE0CC STR X30, [X31 - 0x30]!
	0x034AE0D0 STP X22, X21, [X31 + 0x10]
	0x034AE0D4 STP X20, X19, [X31 + 0x20]
	0x034AE0D8 ADRP X21, 0xF2F000
	0x034AE0DC ADRP X22, 0xC48000
	0x034AE0E0 LDRB W8, [X21 + 0xA2D]
	0x034AE0E4 LDR X22, [X22 + 0x280]
	0x034AE0E8 MOV X19, X1
	0x034AE0EC MOV X20, X0
	0x034AE0F0 TBNZ X8, 0x0, 0x34AE108
	0x034AE0F4 ADRP X0, 0xC48000
	0x034AE0F8 LDR X0, [X0 + 0x280]
	0x034AE0FC BL 0x1C16CF4
	0x034AE100 MOVZ W8, 0x1
	0x034AE104 STRB W8, [X21 + 0xA2D]
	0x034AE108 LDR X0, [X22]
	0x034AE10C LDR W8, [X0 + 0xE0]
	0x034AE110 CBNZ W8, 0x34AE118
	0x034AE114 BL 0x1C16DFC
	0x034AE118 ADD X0, X20, 0x8
	0x034AE11C MOV X1, X19
	0x034AE120 LDP X20, X19, [X31 + 0x20]
	0x034AE124 LDP X22, X21, [X31 + 0x10]
	0x034AE128 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF30000
	007 Move X22, 0xC49000
	008 Move W8, [X21+2599]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC49000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2599], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

