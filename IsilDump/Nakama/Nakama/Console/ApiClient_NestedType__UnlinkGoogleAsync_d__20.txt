Type: Nakama.Console.ApiClient/<UnlinkGoogleAsync>d__20

Method: System.Void MoveNext()

Disassembly:
	0x034AE684 MOV X1, X20
	0x034AE688 MOV X2, X31
	0x034AE68C BL 0x32C4908
	0x034AE690 B 0x34AE504
	0x034AE694 MOVZ W0, 0x8
	0x034AE698 BL 0x3EB1AF0
	0x034AE69C LDR X8, [X20]
	0x034AE6A0 STR X8, [X0]
	0x034AE6A4 ADRP X1, 0xA06000
	0x034AE6A8 ADD X1, X1, 0xE58
	0x034AE6AC MOV X2, X31
	0x034AE6B0 BL 0x3EB1B00
	0x034AE6B4 MOV X20, X0
	0x034AE6B8 BL 0x3EB1AE0
	0x034AE6BC MOV X0, X20
	0x034AE6C0 BL 0x1D2C690
	0x034AE6C4 BL 0x1990590
	0x034AE6C8 STR X30, [X31 - 0x30]!
	0x034AE6CC STP X22, X21, [X31 + 0x10]
	0x034AE6D0 STP X20, X19, [X31 + 0x20]
	0x034AE6D4 ADRP X21, 0xF2F000
	0x034AE6D8 ADRP X22, 0xC48000
	0x034AE6DC LDRB W8, [X21 + 0xA2F]
	0x034AE6E0 LDR X22, [X22 + 0x280]
	0x034AE6E4 MOV X19, X1
	0x034AE6E8 MOV X20, X0
	0x034AE6EC TBNZ X8, 0x0, 0x34AE704
	0x034AE6F0 ADRP X0, 0xC48000
	0x034AE6F4 LDR X0, [X0 + 0x280]
	0x034AE6F8 BL 0x1C16CF4
	0x034AE6FC MOVZ W8, 0x1
	0x034AE700 STRB W8, [X21 + 0xA2F]
	0x034AE704 LDR X0, [X22]
	0x034AE708 LDR W8, [X0 + 0xE0]
	0x034AE70C CBNZ W8, 0x34AE714
	0x034AE710 BL 0x1C16DFC
	0x034AE714 ADD X0, X20, 0x8
	0x034AE718 MOV X1, X19
	0x034AE71C LDP X20, X19, [X31 + 0x20]
	0x034AE720 LDP X22, X21, [X31 + 0x10]
	0x034AE724 MOV X2, X31
	0x034AE728 LDR X30, [X31], #0x30
	0x034AE72C B 0x32C477C
	0x034AE730 SUB X31, X31, 0x60
	0x034AE734 STR X30, [X31 + 0x10]
	0x034AE738 STP X26, X25, [X31 + 0x20]
	0x034AE73C STP X24, X23, [X31 + 0x30]
	0x034AE740 STP X22, X21, [X31 + 0x40]
	0x034AE744 STP X20, X19, [X31 + 0x50]
	0x034AE748 ADRP X20, 0xF2F000
	0x034AE74C LDRB W8, [X20 + 0xA30]
	0x034AE750 MOV X19, X0
	0x034AE754 TBNZ X8, 0x0, 0x34AE85C
	0x034AE758 ADRP X0, 0xC84000
	0x034AE75C LDR X0, [X0 + 0x2B8]
	0x034AE760 BL 0x1C16CF4
	0x034AE764 ADRP X0, 0xC84000
	0x034AE768 LDR X0, [X0 + 0x2C0]
	0x034AE76C BL 0x1C16CF4
	0x034AE770 ADRP X0, 0xC83000
	0x034AE774 LDR X0, [X0 + 0xE18]
	0x034AE778 BL 0x1C16CF4
	0x034AE77C ADRP X0, 0xC46000
	0x034AE780 LDR X0, [X0 + 0x810]
	0x034AE784 BL 0x1C16CF4
	0x034AE788 ADRP X0, 0xC46000
	0x034AE78C LDR X0, [X0 + 0x6C0]
	0x034AE790 BL 0x1C16CF4
	0x034AE794 ADRP X0, 0xC46000
	0x034AE798 LDR X0, [X0 + 0x6D0]
	0x034AE79C BL 0x1C16CF4
	0x034AE7A0 ADRP X0, 0xC80000
	0x034AE7A4 LDR X0, [X0 + 0x7B8]
	0x034AE7A8 BL 0x1C16CF4
	0x034AE7AC ADRP X0, 0xC84000
	0x034AE7B0 LDR X0, [X0 + 0x2C8]
	0x034AE7B4 BL 0x1C16CF4
	0x034AE7B8 ADRP X0, 0xC48000
	0x034AE7BC LDR X0, [X0 + 0x1E0]
	0x034AE7C0 BL 0x1C16CF4
	0x034AE7C4 ADRP X0, 0xC48000
	0x034AE7C8 LDR X0, [X0 + 0x1F0]
	0x034AE7CC BL 0x1C16CF4
	0x034AE7D0 ADRP X0, 0xC48000
	0x034AE7D4 LDR X0, [X0 + 0x1F8]
	0x034AE7D8 BL 0x1C16CF4
	0x034AE7DC ADRP X0, 0xC4E000
	0x034AE7E0 LDR X0, [X0 + 0x3A0]
	0x034AE7E4 BL 0x1C16CF4
	0x034AE7E8 ADRP X0, 0xC47000
	0x034AE7EC LDR X0, [X0 + 0xA28]
	0x034AE7F0 BL 0x1C16CF4
	0x034AE7F4 ADRP X0, 0xC6E000
	0x034AE7F8 LDR X0, [X0 + 0x4E0]
	0x034AE7FC BL 0x1C16CF4
	0x034AE800 ADRP X0, 0xC83000
	0x034AE804 LDR X0, [X0 + 0xF78]
	0x034AE808 BL 0x1C16CF4
	0x034AE80C ADRP X0, 0xC81000
	0x034AE810 LDR X0, [X0 + 0x100]
	0x034AE814 BL 0x1C16CF4
	0x034AE818 ADRP X0, 0xC83000
	0x034AE81C LDR X0, [X0 + 0xF38]
	0x034AE820 BL 0x1C16CF4
	0x034AE824 ADRP X0, 0xC83000
	0x034AE828 LDR X0, [X0 + 0xF48]
	0x034AE82C BL 0x1C16CF4
	0x034AE830 ADRP X0, 0xC80000
	0x034AE834 LDR X0, [X0 + 0x7D0]
	0x034AE838 BL 0x1C16CF4
	0x034AE83C ADRP X0, 0xC80000
	0x034AE840 LDR X0, [X0 + 0x7D8]
	0x034AE844 BL 0x1C16CF4
	0x034AE848 ADRP X0, 0xC45000
	0x034AE84C LDR X0, [X0 + 0x988]
	0x034AE850 BL 0x1C16CF4
	0x034AE854 MOVZ W8, 0x1
	0x034AE858 STRB W8, [X20 + 0xA30]
	0x034AE85C STR X31, [X31 + 0x18]
	0x034AE860 ADRP X26, 0xC83000
	0x034AE864 LDR W8, [X19]
	0x034AE868 LDR X26, [X26 + 0xE18]
	0x034AE86C CBZ W8, 0x34AEAA8
	0x034AE870 LDR X20, [X19 + 0x20]
	0x034AE874 CBZ X20, 0x34AEBDC
	0x034AE878 LDR X8, [X19 + 0x28]
	0x034AE87C CBZ X8, 0x34AEC24
	0x034AE880 LDR X8, [X19 + 0x30]
	0x034AE884 CBZ X8, 0x34AEC6C
	0x034AE888 LDR X8, [X19 + 0x38]
	0x034AE88C CBZ X8, 0x34AECB4
	0x034AE890 ADRP X8, 0xC47000
	0x034AE894 LDR X8, [X8 + 0xA28]
	0x034AE898 LDR X0, [X8]
	0x034AE89C ADRP X8, 0xC83000
	0x034AE8A0 LDR X8, [X8 + 0xF78]
	0x034AE8A4 LDR X25, [X19 + 0x40]
	0x034AE8A8 LDR W9, [X0 + 0xE0]
	0x034AE8AC LDR X21, [X8]
	0x034AE8B0 CBNZ W9, 0x34AE8B8
	0x034AE8B4 BL 0x1C16DFC
	0x034AE8B8 MOV X0, X20
	0x034AE8BC MOV X1, X31
	0x034AE8C0 BL 0x3624D20
	0x034AE8C4 CBZ X21, 0x34AECFC
	0x034AE8C8 ADRP X8, 0xC81000
	0x034AE8CC LDR X8, [X8 + 0x100]
	0x034AE8D0 MOV X2, X0
	0x034AE8D4 LDR X1, [X8]
	0x034AE8D8 MOV X0, X21
	0x034AE8DC MOV X3, X31
	0x034AE8E0 BL 0x32293BC
	0x034AE8E4 MOV X20, X0
	0x034AE8E8 LDR X0, [X19 + 0x28]
	0x034AE8EC MOV X1, X31
	0x034AE8F0 BL 0x3624D20
	0x034AE8F4 CBZ X20, 0x34AED00
	0x034AE8F8 ADRP X8, 0xC83000
	0x034AE8FC LDR X8, [X8 + 0xF38]
	0x034AE900 MOV X2, X0
	0x034AE904 LDR X1, [X8]
	0x034AE908 MOV X0, X20
	0x034AE90C MOV X3, X31
	0x034AE910 BL 0x32293BC
	0x034AE914 MOV X20, X0
	0x034AE918 LDR X0, [X19 + 0x30]
	0x034AE91C MOV X1, X31
	0x034AE920 BL 0x3624D20
	0x034AE924 CBZ X20, 0x34AED04
	0x034AE928 ADRP X8, 0xC83000
	0x034AE92C LDR X8, [X8 + 0xF48]
	0x034AE930 MOV X2, X0
	0x034AE934 LDR X1, [X8]
	0x034AE938 MOV X0, X20
	0x034AE93C MOV X3, X31
	0x034AE940 BL 0x32293BC
	0x034AE944 CBZ X25, 0x34AED08
	0x034AE948 ADRP X8, 0xC45000
	0x034AE94C ADRP X9, 0xC4E000
	0x034AE950 LDR X8, [X8 + 0x988]
	0x034AE954 LDR X9, [X9 + 0x3A0]
	0x034AE958 MOV X22, X0
	0x034AE95C LDR X23, [X25 + 0x10]
	0x034AE960 LDR X21, [X8]
	0x034AE964 LDR X0, [X9]
	0x034AE968 BL 0x1C16F10
	0x034AE96C MOV X20, X0
	0x034AE970 MOV X1, X23
	0x034AE974 MOV X2, X31
	0x034AE978 BL 0x36281F8
	0x034AE97C CBZ X20, 0x34AED0C
	0x034AE980 MOV X0, X20
	0x034AE984 MOV X1, X22
	0x034AE988 MOV X2, X31
	0x034AE98C BL 0x36288CC
	0x034AE990 MOV X0, X20
	0x034AE994 MOV X1, X21
	0x034AE998 MOV X2, X31
	0x034AE99C BL 0x3628980
	0x034AE9A0 MOV X0, X20
	0x034AE9A4 MOV X1, X31
	0x034AE9A8 BL 0x3628A38
	0x034AE9AC ADRP X8, 0xC6E000
	0x034AE9B0 ADRP X9, 0xC46000
	0x034AE9B4 LDR X8, [X8 + 0x4E0]
	0x034AE9B8 LDR X9, [X9 + 0x6D0]
	0x034AE9BC MOV X20, X0
	0x034AE9C0 LDR X21, [X8]
	0x034AE9C4 LDR X0, [X9]
	0x034AE9C8 BL 0x1C16F10
	0x034AE9CC ADRP X8, 0xC46000
	0x034AE9D0 LDR X8, [X8 + 0x6C0]
	0x034AE9D4 MOV X22, X0
	0x034AE9D8 LDR X1, [X8]
	0x034AE9DC BL 0x2AA4804
	0x034AE9E0 ADRP X8, 0xC80000
	0x034AE9E4 LDR X8, [X8 + 0x7D8]
	0x034AE9E8 LDR X1, [X19 + 0x48]
	0x034AE9EC LDR X0, [X8]
	0x034AE9F0 MOV X2, X31
	0x034AE9F4 BL 0x321B938
	0x034AE9F8 CBZ X22, 0x34AED10
	0x034AE9FC ADRP X8, 0xC80000
	0x034AEA00 LDR X8, [X8 + 0x7D0]
	0x034AEA04 ADRP X9, 0xC46000
	0x034AEA08 LDR X9, [X9 + 0x810]
	0x034AEA0C MOV X2, X0
	0x034AEA10 LDR X1, [X8]
	0x034AEA14 LDR X3, [X9]
	0x034AEA18 MOV X0, X22
	0x034AEA1C BL 0x2AA5098
	0x034AEA20 LDR X0, [X19 + 0x38]
	0x034AEA24 MOV X1, X31
	0x034AEA28 BL 0x3483BE4
	0x034AEA2C MOV X23, X0
	0x034AEA30 MOV X0, X31
	0x034AEA34 BL 0x3241948
	0x034AEA38 CBZ X0, 0x34AED14
	0x034AEA3C LDR X8, [X0]
	0x034AEA40 LDR X9, [X8 + 0x268]
	0x034AEA44 LDR X2, [X8 + 0x270]
	0x034AEA48 MOV X1, X23
	0x034AEA4C BLR X9
	0x034AEA50 LDR X24, [X25 + 0x20]
	0x034AEA54 CBZ X24, 0x34AED18
	0x034AEA58 ADRP X10, 0xC80000
	0x034AEA5C LDR X8, [X24]
	0x034AEA60 LDR X10, [X10 + 0x7B8]
	0x034AEA64 LDR W25, [X25 + 0x18]
	0x034AEA68 MOV X23, X0
	0x034AEA6C LDRH W9, [X8 + 0x12E]
	0x034AEA70 LDR X1, [X10]
	0x034AEA74 CBZ X9, 0x34AEA98
	0x034AEA78 LDR X10, [X8 + 0xB0]
	0x034AEA7C ADD X10, X10, 0x8
	0x034AEA80 LDUR X11, [X10 - 0x8]
	0x034AEA84 CMP X11, X1
	0x034AEA88 B.EQ 0x34AEAC0
	0x034AEA8C SUBS X9, X9, 0x1
	0x034AEA90 ADD X10, X10, 0x10
	0x034AEA94 B.NE 0x34AEA80
	0x034AEA98 MOVZ W2, 0x3
	0x034AEA9C MOV X0, X24
	0x034AEAA0 BL 0x1C5C788
	0x034AEAA4 B 0x34AEAD0
	0x034AEAA8 LDR X8, [X19 + 0x50]
	0x034AEAAC MOVN W9, 0x0
	0x034AEAB0 STR X8, [X31 + 0x18]
	0x034AEAB4 STR X31, [X19 + 0x50]
	0x034AEAB8 STR W9, [X19]
	0x034AEABC B 0x34AEB2C
	0x034AEAC0 LDR W9, [X10]
	0x034AEAC4 ADD W9, W9, 0x3
	0x034AEAC8 ADD X8, X8, W9, 0x4, SXTW
	0x034AEACC ADD X0, X8, 0x138
	0x034AEAD0 LDP X8, X9, [X0]
	0x034AEAD4 MOV X0, X24
	0x034AEAD8 MOV X1, X21
	0x034AEADC MOV X2, X20
	0x034AEAE0 MOV X3, X22
	0x034AEAE4 MOV X4, X23
	0x034AEAE8 MOV W5, W25
	0x034AEAEC MOV X6, X31
	0x034AEAF0 MOV X7, X31
	0x034AEAF4 STR X9, [X31]
	0x034AEAF8 BLR X8
	0x034AEAFC CBZ X0, 0x34AED1C
	0x034AEB00 ADRP X8, 0xC48000
	0x034AEB04 LDR X8, [X8 + 0x1F8]
	0x034AEB08 LDR X1, [X8]
	0x034AEB0C BL 0x269F5D0
	0x034AEB10 ADRP X8, 0xC48000
	0x034AEB14 LDR X8, [X8 + 0x1F0]
	0x034AEB18 STR X0, [X31 + 0x18]
	0x034AEB1C LDR X1, [X8]
	0x034AEB20 ADD X0, X31, 0x18
	0x034AEB24 BL 0x2677430
	0x034AEB28 TBZ X0, 0x0, 0x34AEB88
	0x034AEB2C ADRP X8, 0xC48000
	0x034AEB30 LDR X8, [X8 + 0x1E0]
	0x034AEB34 ADD X0, X31, 0x18
	0x034AEB38 LDR X1, [X8]
	0x034AEB3C BL 0x2677474
	0x034AEB40 ADRP X8, 0xC84000
	0x034AEB44 LDR X8, [X8 + 0x2C8]
	0x034AEB48 LDR X1, [X8]
	0x034AEB4C BL 0x220E6DC
	0x034AEB50 MOVN W8, 0x1
	0x034AEB54 STR W8, [X19], #0x8
	0x034AEB58 MOV X20, X0
	0x034AEB5C LDR X0, [X26]
	0x034AEB60 ADRP X21, 0xC84000
	0x034AEB64 LDR W8, [X0 + 0xE0]
	0x034AEB68 LDR X21, [X21 + 0x2C0]
	0x034AEB6C CBNZ W8, 0x34AEB74
	0x034AEB70 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF30000
	011 Move W8, [X20+2602]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC85000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0xC49000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC47000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC47000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC47000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC81000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC49000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC49000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC49000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4F000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC48000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC6F000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0xC85000
	054 Move X0, [X0+640]
	055 Call 0x1C17CF4
	056 Move X0, 0xC81000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC82000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC81000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC46000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2602], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC49000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC48000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC85000
	083 Move X8, [X8+640]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC82000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC46000
	105 Move X9, 0xC4F000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC6F000
	131 Move X9, 0xC47000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC47000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC81000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC81000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC47000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC81000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC49000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC49000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC49000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC85000
	245 Move X8, [X8+632]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC4E000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC82000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC85000
	274 Move X0, [X0+648]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC46000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC49000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA07000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AEB74 LDR X2, [X21]
	0x034AEB78 MOV X0, X19
	0x034AEB7C MOV X1, X20
	0x034AEB80 BL 0x26322B0
	0x034AEB84 B 0x34AEBC0
	0x034AEB88 STR W31, [X19]
	0x034AEB8C LDR X8, [X31 + 0x18]
	0x034AEB90 STR X8, [X19 + 0x50]
	0x034AEB94 LDR X0, [X26]
	0x034AEB98 LDR W8, [X0 + 0xE0]
	0x034AEB9C CBNZ W8, 0x34AEBA4
	0x034AEBA0 BL 0x1C16DFC
	0x034AEBA4 ADRP X8, 0xC84000
	0x034AEBA8 LDR X8, [X8 + 0x2B8]
	0x034AEBAC ADD X0, X19, 0x8
	0x034AEBB0 LDR X3, [X8]
	0x034AEBB4 ADD X1, X31, 0x18
	0x034AEBB8 MOV X2, X19
	0x034AEBBC BL 0x1FB8694
	0x034AEBC0 LDP X20, X19, [X31 + 0x50]
	0x034AEBC4 LDP X22, X21, [X31 + 0x40]
	0x034AEBC8 LDP X24, X23, [X31 + 0x30]
	0x034AEBCC LDP X26, X25, [X31 + 0x20]
	0x034AEBD0 LDR X30, [X31 + 0x10]
	0x034AEBD4 ADD X31, X31, 0x60
	0x034AEBD8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF30000
	007 Move X22, 0xC49000
	008 Move W8, [X21+2603]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC49000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2603], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

