Type: Nakama.Console.ApiClient/<ListUsersAsync>d__34

Method: System.Void MoveNext()

Disassembly:
	0x034ABA08 B 0x34ABA1C
	0x034ABA0C B 0x34ABA1C
	0x034ABA10 B 0x34ABA1C
	0x034ABA14 B 0x34ABA1C
	0x034ABA18 B 0x34ABA1C
	0x034ABA1C MOV X20, X0
	0x034ABA20 CMP W1, 0x1
	0x034ABA24 B.NE 0x34ABAB4
	0x034ABA28 MOV X0, X20
	0x034ABA2C BL 0x3EB1AD0
	0x034ABA30 MOV X20, X0
	0x034ABA34 ADRP X0, 0xC48000
	0x034ABA38 LDR X0, [X0 + 0x7D0]
	0x034ABA3C BL 0x1C16D08
	0x034ABA40 LDR X8, [X20]
	0x034ABA44 LDR X1, [X8]
	0x034ABA48 BL 0x1C17270
	0x034ABA4C TBZ X0, 0x0, 0x34ABA8C
	0x034ABA50 LDR X20, [X20]
	0x034ABA54 BL 0x3EB1AE0
	0x034ABA58 MOVN W8, 0x1
	0x034ABA5C STR W8, [X19], #0x8
	0x034ABA60 ADRP X0, 0xC4B000
	0x034ABA64 LDR X0, [X0 + 0x280]
	0x034ABA68 BL 0x1C16D08
	0x034ABA6C LDR W8, [X0 + 0xE0]
	0x034ABA70 CBNZ W8, 0x34ABA78
	0x034ABA74 BL 0x1C16DFC
	0x034ABA78 MOV X0, X19
	0x034ABA7C MOV X1, X20
	0x034ABA80 MOV X2, X31
	0x034ABA84 BL 0x32C4908
	0x034ABA88 B 0x34AB960
	0x034ABA8C MOVZ W0, 0x8
	0x034ABA90 BL 0x3EB1AF0
	0x034ABA94 LDR X8, [X20]
	0x034ABA98 STR X8, [X0]
	0x034ABA9C ADRP X1, 0xA09000
	0x034ABAA0 ADD X1, X1, 0xE58
	0x034ABAA4 MOV X2, X31
	0x034ABAA8 BL 0x3EB1B00
	0x034ABAAC MOV X20, X0
	0x034ABAB0 BL 0x3EB1AE0
	0x034ABAB4 MOV X0, X20
	0x034ABAB8 BL 0x1D2C690
	0x034ABABC BL 0x1990590
	0x034ABAC0 STR X30, [X31 - 0x30]!
	0x034ABAC4 STP X22, X21, [X31 + 0x10]
	0x034ABAC8 STP X20, X19, [X31 + 0x20]
	0x034ABACC ADRP X21, 0xF32000
	0x034ABAD0 ADRP X22, 0xC4B000
	0x034ABAD4 LDRB W8, [X21 + 0xA1F]
	0x034ABAD8 LDR X22, [X22 + 0x280]
	0x034ABADC MOV X19, X1
	0x034ABAE0 MOV X20, X0
	0x034ABAE4 TBNZ X8, 0x0, 0x34ABAFC
	0x034ABAE8 ADRP X0, 0xC4B000
	0x034ABAEC LDR X0, [X0 + 0x280]
	0x034ABAF0 BL 0x1C16CF4
	0x034ABAF4 MOVZ W8, 0x1
	0x034ABAF8 STRB W8, [X21 + 0xA1F]
	0x034ABAFC LDR X0, [X22]
	0x034ABB00 LDR W8, [X0 + 0xE0]
	0x034ABB04 CBNZ W8, 0x34ABB0C
	0x034ABB08 BL 0x1C16DFC
	0x034ABB0C ADD X0, X20, 0x8
	0x034ABB10 MOV X1, X19
	0x034ABB14 LDP X20, X19, [X31 + 0x20]
	0x034ABB18 LDP X22, X21, [X31 + 0x10]
	0x034ABB1C MOV X2, X31
	0x034ABB20 LDR X30, [X31], #0x30
	0x034ABB24 B 0x32C477C
	0x034ABB28 SUB X31, X31, 0x60
	0x034ABB2C STR X30, [X31 + 0x10]
	0x034ABB30 STP X26, X25, [X31 + 0x20]
	0x034ABB34 STP X24, X23, [X31 + 0x30]
	0x034ABB38 STP X22, X21, [X31 + 0x40]
	0x034ABB3C STP X20, X19, [X31 + 0x50]
	0x034ABB40 ADRP X20, 0xF32000
	0x034ABB44 LDRB W8, [X20 + 0xA20]
	0x034ABB48 MOV X19, X0
	0x034ABB4C TBNZ X8, 0x0, 0x34ABC24
	0x034ABB50 ADRP X0, 0xC87000
	0x034ABB54 LDR X0, [X0 + 0x200]
	0x034ABB58 BL 0x1C16CF4
	0x034ABB5C ADRP X0, 0xC4B000
	0x034ABB60 LDR X0, [X0 + 0x280]
	0x034ABB64 BL 0x1C16CF4
	0x034ABB68 ADRP X0, 0xC49000
	0x034ABB6C LDR X0, [X0 + 0x810]
	0x034ABB70 BL 0x1C16CF4
	0x034ABB74 ADRP X0, 0xC49000
	0x034ABB78 LDR X0, [X0 + 0x6C0]
	0x034ABB7C BL 0x1C16CF4
	0x034ABB80 ADRP X0, 0xC49000
	0x034ABB84 LDR X0, [X0 + 0x6D0]
	0x034ABB88 BL 0x1C16CF4
	0x034ABB8C ADRP X0, 0xC83000
	0x034ABB90 LDR X0, [X0 + 0x7B8]
	0x034ABB94 BL 0x1C16CF4
	0x034ABB98 ADRP X0, 0xC4B000
	0x034ABB9C LDR X0, [X0 + 0x1E0]
	0x034ABBA0 BL 0x1C16CF4
	0x034ABBA4 ADRP X0, 0xC4B000
	0x034ABBA8 LDR X0, [X0 + 0x1F0]
	0x034ABBAC BL 0x1C16CF4
	0x034ABBB0 ADRP X0, 0xC4B000
	0x034ABBB4 LDR X0, [X0 + 0x1F8]
	0x034ABBB8 BL 0x1C16CF4
	0x034ABBBC ADRP X0, 0xC51000
	0x034ABBC0 LDR X0, [X0 + 0x3A0]
	0x034ABBC4 BL 0x1C16CF4
	0x034ABBC8 ADRP X0, 0xC4A000
	0x034ABBCC LDR X0, [X0 + 0xA28]
	0x034ABBD0 BL 0x1C16CF4
	0x034ABBD4 ADRP X0, 0xC71000
	0x034ABBD8 LDR X0, [X0 + 0x4D8]
	0x034ABBDC BL 0x1C16CF4
	0x034ABBE0 ADRP X0, 0xC87000
	0x034ABBE4 LDR X0, [X0 + 0x208]
	0x034ABBE8 BL 0x1C16CF4
	0x034ABBEC ADRP X0, 0xC83000
	0x034ABBF0 LDR X0, [X0 + 0x7D0]
	0x034ABBF4 BL 0x1C16CF4
	0x034ABBF8 ADRP X0, 0xC84000
	0x034ABBFC LDR X0, [X0 + 0x2E8]
	0x034ABC00 BL 0x1C16CF4
	0x034ABC04 ADRP X0, 0xC83000
	0x034ABC08 LDR X0, [X0 + 0x7D8]
	0x034ABC0C BL 0x1C16CF4
	0x034ABC10 ADRP X0, 0xC48000
	0x034ABC14 LDR X0, [X0 + 0x988]
	0x034ABC18 BL 0x1C16CF4
	0x034ABC1C MOVZ W8, 0x1
	0x034ABC20 STRB W8, [X20 + 0xA20]
	0x034ABC24 STR X31, [X31 + 0x18]
	0x034ABC28 ADRP X26, 0xC4B000
	0x034ABC2C LDR W8, [X19]
	0x034ABC30 LDR X26, [X26 + 0x280]
	0x034ABC34 CBZ W8, 0x34ABE00
	0x034ABC38 LDR X21, [X19 + 0x20]
	0x034ABC3C CBZ X21, 0x34ABF14
	0x034ABC40 LDR X8, [X19 + 0x28]
	0x034ABC44 CBZ X8, 0x34ABF5C
	0x034ABC48 ADRP X8, 0xC4A000
	0x034ABC4C LDR X8, [X8 + 0xA28]
	0x034ABC50 LDR X0, [X8]
	0x034ABC54 ADRP X8, 0xC87000
	0x034ABC58 LDR X8, [X8 + 0x208]
	0x034ABC5C LDR X25, [X19 + 0x30]
	0x034ABC60 LDR W9, [X0 + 0xE0]
	0x034ABC64 LDR X20, [X8]
	0x034ABC68 CBNZ W9, 0x34ABC70
	0x034ABC6C BL 0x1C16DFC
	0x034ABC70 MOV X0, X21
	0x034ABC74 MOV X1, X31
	0x034ABC78 BL 0x3624D20
	0x034ABC7C CBZ X20, 0x34ABFA4
	0x034ABC80 ADRP X8, 0xC84000
	0x034ABC84 LDR X8, [X8 + 0x2E8]
	0x034ABC88 MOV X2, X0
	0x034ABC8C LDR X1, [X8]
	0x034ABC90 MOV X0, X20
	0x034ABC94 MOV X3, X31
	0x034ABC98 BL 0x32293BC
	0x034ABC9C CBZ X25, 0x34ABFA8
	0x034ABCA0 ADRP X8, 0xC48000
	0x034ABCA4 ADRP X9, 0xC51000
	0x034ABCA8 LDR X8, [X8 + 0x988]
	0x034ABCAC LDR X9, [X9 + 0x3A0]
	0x034ABCB0 MOV X22, X0
	0x034ABCB4 LDR X23, [X25 + 0x10]
	0x034ABCB8 LDR X21, [X8]
	0x034ABCBC LDR X0, [X9]
	0x034ABCC0 BL 0x1C16F10
	0x034ABCC4 MOV X20, X0
	0x034ABCC8 MOV X1, X23
	0x034ABCCC MOV X2, X31
	0x034ABCD0 BL 0x36281F8
	0x034ABCD4 CBZ X20, 0x34ABFAC
	0x034ABCD8 MOV X0, X20
	0x034ABCDC MOV X1, X22
	0x034ABCE0 MOV X2, X31
	0x034ABCE4 BL 0x36288CC
	0x034ABCE8 MOV X0, X20
	0x034ABCEC MOV X1, X21
	0x034ABCF0 MOV X2, X31
	0x034ABCF4 BL 0x3628980
	0x034ABCF8 MOV X0, X20
	0x034ABCFC MOV X1, X31
	0x034ABD00 BL 0x3628A38
	0x034ABD04 ADRP X8, 0xC71000
	0x034ABD08 ADRP X9, 0xC49000
	0x034ABD0C LDR X8, [X8 + 0x4D8]
	0x034ABD10 LDR X9, [X9 + 0x6D0]
	0x034ABD14 MOV X20, X0
	0x034ABD18 LDR X21, [X8]
	0x034ABD1C LDR X0, [X9]
	0x034ABD20 BL 0x1C16F10
	0x034ABD24 ADRP X8, 0xC49000
	0x034ABD28 LDR X8, [X8 + 0x6C0]
	0x034ABD2C MOV X22, X0
	0x034ABD30 LDR X1, [X8]
	0x034ABD34 BL 0x2AA4804
	0x034ABD38 ADRP X8, 0xC83000
	0x034ABD3C LDR X8, [X8 + 0x7D8]
	0x034ABD40 LDR X1, [X19 + 0x38]
	0x034ABD44 LDR X0, [X8]
	0x034ABD48 MOV X2, X31
	0x034ABD4C BL 0x321B938
	0x034ABD50 CBZ X22, 0x34ABFB0
	0x034ABD54 ADRP X8, 0xC83000
	0x034ABD58 LDR X8, [X8 + 0x7D0]
	0x034ABD5C ADRP X9, 0xC49000
	0x034ABD60 LDR X9, [X9 + 0x810]
	0x034ABD64 MOV X2, X0
	0x034ABD68 LDR X1, [X8]
	0x034ABD6C LDR X3, [X9]
	0x034ABD70 MOV X0, X22
	0x034ABD74 BL 0x2AA5098
	0x034ABD78 LDR X0, [X19 + 0x28]
	0x034ABD7C MOV X1, X31
	0x034ABD80 BL 0x3483BE4
	0x034ABD84 MOV X23, X0
	0x034ABD88 MOV X0, X31
	0x034ABD8C BL 0x3241948
	0x034ABD90 CBZ X0, 0x34ABFB4
	0x034ABD94 LDR X8, [X0]
	0x034ABD98 LDR X9, [X8 + 0x268]
	0x034ABD9C LDR X2, [X8 + 0x270]
	0x034ABDA0 MOV X1, X23
	0x034ABDA4 BLR X9
	0x034ABDA8 LDR X24, [X25 + 0x20]
	0x034ABDAC CBZ X24, 0x34ABFB8
	0x034ABDB0 ADRP X10, 0xC83000
	0x034ABDB4 LDR X8, [X24]
	0x034ABDB8 LDR X10, [X10 + 0x7B8]
	0x034ABDBC LDR W25, [X25 + 0x18]
	0x034ABDC0 MOV X23, X0
	0x034ABDC4 LDRH W9, [X8 + 0x12E]
	0x034ABDC8 LDR X1, [X10]
	0x034ABDCC CBZ X9, 0x34ABDF0
	0x034ABDD0 LDR X10, [X8 + 0xB0]
	0x034ABDD4 ADD X10, X10, 0x8
	0x034ABDD8 LDUR X11, [X10 - 0x8]
	0x034ABDDC CMP X11, X1
	0x034ABDE0 B.EQ 0x34ABE18
	0x034ABDE4 SUBS X9, X9, 0x1
	0x034ABDE8 ADD X10, X10, 0x10
	0x034ABDEC B.NE 0x34ABDD8
	0x034ABDF0 MOVZ W2, 0x3
	0x034ABDF4 MOV X0, X24
	0x034ABDF8 BL 0x1C5C788
	0x034ABDFC B 0x34ABE28
	0x034ABE00 LDR X8, [X19 + 0x40]
	0x034ABE04 MOVN W9, 0x0
	0x034ABE08 STR X8, [X31 + 0x18]
	0x034ABE0C STR X31, [X19 + 0x40]
	0x034ABE10 STR W9, [X19]
	0x034ABE14 B 0x34ABE84
	0x034ABE18 LDR W9, [X10]
	0x034ABE1C ADD W9, W9, 0x3
	0x034ABE20 ADD X8, X8, W9, 0x4, SXTW
	0x034ABE24 ADD X0, X8, 0x138
	0x034ABE28 LDP X8, X9, [X0]
	0x034ABE2C MOV X0, X24
	0x034ABE30 MOV X1, X21
	0x034ABE34 MOV X2, X20
	0x034ABE38 MOV X3, X22
	0x034ABE3C MOV X4, X23
	0x034ABE40 MOV W5, W25
	0x034ABE44 MOV X6, X31
	0x034ABE48 MOV X7, X31
	0x034ABE4C STR X9, [X31]
	0x034ABE50 BLR X8
	0x034ABE54 CBZ X0, 0x34ABFBC
	0x034ABE58 ADRP X8, 0xC4B000
	0x034ABE5C LDR X8, [X8 + 0x1F8]
	0x034ABE60 LDR X1, [X8]
	0x034ABE64 BL 0x269F5D0
	0x034ABE68 ADRP X8, 0xC4B000
	0x034ABE6C LDR X8, [X8 + 0x1F0]
	0x034ABE70 STR X0, [X31 + 0x18]
	0x034ABE74 LDR X1, [X8]
	0x034ABE78 ADD X0, X31, 0x18
	0x034ABE7C BL 0x2677430
	0x034ABE80 TBZ X0, 0x0, 0x34ABEC0
	0x034ABE84 ADRP X8, 0xC4B000
	0x034ABE88 LDR X8, [X8 + 0x1E0]
	0x034ABE8C ADD X0, X31, 0x18
	0x034ABE90 LDR X1, [X8]
	0x034ABE94 BL 0x2677474
	0x034ABE98 MOVN W8, 0x1
	0x034ABE9C STR W8, [X19], #0x8
	0x034ABEA0 LDR X0, [X26]
	0x034ABEA4 LDR W8, [X0 + 0xE0]
	0x034ABEA8 CBNZ W8, 0x34ABEB0
	0x034ABEAC BL 0x1C16DFC
	0x034ABEB0 MOV X0, X19
	0x034ABEB4 MOV X1, X31
	0x034ABEB8 BL 0x32C4864
	0x034ABEBC B 0x34ABEF8
	0x034ABEC0 STR W31, [X19]
	0x034ABEC4 LDR X8, [X31 + 0x18]
	0x034ABEC8 STR X8, [X19 + 0x40]
	0x034ABECC LDR X0, [X26]
	0x034ABED0 LDR W8, [X0 + 0xE0]
	0x034ABED4 CBNZ W8, 0x34ABEDC
	0x034ABED8 BL 0x1C16DFC
	0x034ABEDC ADRP X8, 0xC87000
	0x034ABEE0 LDR X8, [X8 + 0x200]
	0x034ABEE4 ADD X0, X19, 0x8
	0x034ABEE8 LDR X3, [X8]
	0x034ABEEC ADD X1, X31, 0x18
	0x034ABEF0 MOV X2, X19
	0x034ABEF4 BL 0x218774C
	0x034ABEF8 LDP X20, X19, [X31 + 0x50]
	0x034ABEFC LDP X22, X21, [X31 + 0x40]
	0x034ABF00 LDP X24, X23, [X31 + 0x30]
	0x034ABF04 LDP X26, X25, [X31 + 0x20]
	0x034ABF08 LDR X30, [X31 + 0x10]
	0x034ABF0C ADD X31, X31, 0x60
	0x034ABF10 RET
	0x034ABF14 ADRP X0, 0xC50000
	0x034ABF18 LDR X0, [X0 + 0x578]
	0x034ABF1C BL 0x1C16D08
	0x034ABF20 BL 0x1C16F10
	0x034ABF24 MOV X20, X0
	0x034ABF28 ADRP X0, 0xC84000
	0x034ABF2C LDR X0, [X0 + 0x2F0]
	0x034ABF30 BL 0x1C16D08
	0x034ABF34 MOV X1, X0
	0x034ABF38 MOV X0, X20
	0x034ABF3C MOV X2, X31
	0x034ABF40 BL 0x3314A68
	0x034ABF44 ADRP X0, 0xC87000
	0x034ABF48 LDR X0, [X0 + 0x210]
	0x034ABF4C BL 0x1C16D08
	0x034ABF50 MOV X1, X0
	0x034ABF54 MOV X0, X20
	0x034ABF58 BL 0x1C16DEC
	0x034ABF5C ADRP X0, 0xC50000
	0x034ABF60 LDR X0, [X0 + 0x578]
	0x034ABF64 BL 0x1C16D08
	0x034ABF68 BL 0x1C16F10
	0x034ABF6C MOV X20, X0
	0x034ABF70 ADRP X0, 0xC83000
	0x034ABF74 LDR X0, [X0 + 0xBC8]
	0x034ABF78 BL 0x1C16D08
	0x034ABF7C MOV X1, X0
	0x034ABF80 MOV X0, X20
	0x034ABF84 MOV X2, X31
	0x034ABF88 BL 0x3314A68
	0x034ABF8C ADRP X0, 0xC87000
	0x034ABF90 LDR X0, [X0 + 0x210]
	0x034ABF94 BL 0x1C16D08
	0x034ABF98 MOV X1, X0
	0x034ABF9C MOV X0, X20
	0x034ABFA0 BL 0x1C16DEC
	0x034ABFA4 BL 0x1C16F20
	0x034ABFA8 BL 0x1C16F20
	0x034ABFAC BL 0x1C16F20
	0x034ABFB0 BL 0x1C16F20
	0x034ABFB4 BL 0x1C16F20
	0x034ABFB8 BL 0x1C16F20
	0x034ABFBC BL 0x1C16F20
	0x034ABFC0 B 0x34AC018
	0x034ABFC4 B 0x34AC018
	0x034ABFC8 B 0x34AC018
	0x034ABFCC B 0x34AC018
	0x034ABFD0 B 0x34AC018
	0x034ABFD4 B 0x34AC018
	0x034ABFD8 B 0x34AC018
	0x034ABFDC B 0x34AC018
	0x034ABFE0 B 0x34AC018
	0x034ABFE4 B 0x34AC018
	0x034ABFE8 B 0x34AC018
	0x034ABFEC B 0x34AC018
	0x034ABFF0 B 0x34AC018
	0x034ABFF4 B 0x34AC018
	0x034ABFF8 B 0x34AC018

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF33000
	011 Move W8, [X20+2586]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {91}
	017 Move X0, 0xC88000
	018 Move X0, [X0+400]
	019 Call 0x1C17CF4
	020 Move X0, 0xC88000
	021 Move X0, [X0+408]
	022 Call 0x1C17CF4
	023 Move X0, 0xC87000
	024 Move X0, [X0+3656]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4A000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4A000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xC4A000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0xC84000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xC88000
	039 Move X0, [X0+416]
	040 Call 0x1C17CF4
	041 Move X0, 0xC84000
	042 Move X0, [X0+2096]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4D000
	045 Move X0, [X0+3056]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4C000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xC4C000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xC4C000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xC52000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xC4B000
	060 Move X0, [X0+2600]
	061 Call 0x1C17CF4
	062 Move X0, 0xC87000
	063 Move X0, [X0+3992]
	064 Call 0x1C17CF4
	065 Move X0, 0xC72000
	066 Move X0, [X0+1232]
	067 Call 0x1C17CF4
	068 Move X0, 0xC88000
	069 Move X0, [X0+424]
	070 Call 0x1C17CF4
	071 Move X0, 0xC88000
	072 Move X0, [X0+432]
	073 Call 0x1C17CF4
	074 Move X0, 0xC52000
	075 Move X0, [X0+1824]
	076 Call 0x1C17CF4
	077 Move X0, 0xC88000
	078 Move X0, [X0+440]
	079 Call 0x1C17CF4
	080 Move X0, 0xC84000
	081 Move X0, [X0+2000]
	082 Call 0x1C17CF4
	083 Move X0, 0xC84000
	084 Move X0, [X0+2008]
	085 Call 0x1C17CF4
	086 Move X0, 0xC49000
	087 Move X0, [X0+2440]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X20+2586], W8
	091 Move [X31+8], X31
	092 Move X25, 0xC87000
	093 Move W8, [X19]
	094 Move X25, [X25+3656]
	095 Compare W8, 0
	096 JumpIfEqual {250}
	097 Move X8, 0xC87000
	098 Move X9, 0xC49000
	099 Move X8, [X8+3992]
	100 Move X9, [X9+2440]
	101 Move X24, [X19+48]
	102 Move X22, [X19+32]
	103 Move X20, [X8]
	104 Move X21, [X9]
	105 Compare X22, 0
	106 JumpIfEqual {128}
	107 Move X8, 0xC4B000
	108 Move X8, [X8+2600]
	109 Move X0, [X8]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X22
	115 Move X1, X31
	116 Call Uri.EscapeDataString, X0
	117 Move X8, 0xC88000
	118 Move X8, [X8+440]
	119 Move X9, 0xC52000
	120 Move X9, [X9+1824]
	121 Move X2, X0
	122 Move X1, [X8]
	123 Move X3, [X9]
	124 Move X0, X21
	125 Move X4, X31
	126 Call String.Concat, X0, X1, X2, X3
	127 Move X21, X0
	128 Move X0, X19
	129 Add X0, X0, 40
	130 Move W8, [X0]
	131 Compare W8, 0
	132 JumpIfEqual {152}
	133 Move X8, 0xC84000
	134 Move X8, [X8+2096]
	135 Move X1, [X8]
	136 Call Nullable`1<Boolean>.ToString, X0
	137 Compare X0, 0
	138 JumpIfEqual {344}
	139 Move X1, X31
	140 Call String.ToLower, X0
	141 Move X8, 0xC88000
	142 Move X8, [X8+432]
	143 Move X9, 0xC52000
	144 Move X9, [X9+1824]
	145 Move X2, X0
	146 Move X1, [X8]
	147 Move X3, [X9]
	148 Move X0, X21
	149 Move X4, X31
	150 Call String.Concat, X0, X1, X2, X3
	151 Move X21, X0
	152 Move X0, X19
	153 Add X0, X0, 42
	154 Move W8, [X0]
	155 Compare W8, 0
	156 JumpIfEqual {176}
	157 Move X8, 0xC84000
	158 Move X8, [X8+2096]
	159 Move X1, [X8]
	160 Call Nullable`1<Boolean>.ToString, X0
	161 Compare X0, 0
	162 JumpIfEqual {345}
	163 Move X1, X31
	164 Call String.ToLower, X0
	165 Move X8, 0xC88000
	166 Move X8, [X8+424]
	167 Move X9, 0xC52000
	168 Move X9, [X9+1824]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X21
	173 Move X4, X31
	174 Call String.Concat, X0, X1, X2, X3
	175 Move X21, X0
	176 Compare X24, 0
	177 JumpIfEqual {339}
	178 Move X8, 0xC52000
	179 Move X8, [X8+928]
	180 Move X23, [X24+16]
	181 Move X0, [X8]
	182 Call 0x1C17F10
	183 Move X22, X0
	184 Move X1, X23
	185 Move X2, X31
	186 Call UriBuilder..ctor, X0, X1
	187 Compare X22, 0
	188 JumpIfEqual {340}
	189 Move X0, X22
	190 Move X1, X20
	191 Move X2, X31
	192 Call UriBuilder.set_Path, X0, X1
	193 Move X0, X22
	194 Move X1, X21
	195 Move X2, X31
	196 Call UriBuilder.set_Query, X0, X1
	197 Move X0, X22
	198 Move X1, X31
	199 Call UriBuilder.get_Uri, X0
	200 Move X8, 0xC72000
	201 Move X9, 0xC4A000
	202 Move X8, [X8+1232]
	203 Move X9, [X9+1744]
	204 Move X20, X0
	205 Move X21, [X8]
	206 Move X0, [X9]
	207 Call 0x1C17F10
	208 Move X8, 0xC4A000
	209 Move X8, [X8+1728]
	210 Move X22, X0
	211 Move X1, [X8]
	212 Call Dictionary`2<Object, Object>..ctor, X0
	213 Move X8, 0xC84000
	214 Move X8, [X8+2008]
	215 Move X1, [X19+56]
	216 Move X0, [X8]
	217 Move X2, X31
	218 Call String.Concat, X0, X1
	219 Compare X22, 0
	220 JumpIfEqual {341}
	221 Move X8, 0xC84000
	222 Move X8, [X8+2000]
	223 Move X9, 0xC4A000
	224 Move X9, [X9+2064]
	225 Move X2, X0
	226 Move X1, [X8]
	227 Move X3, [X9]
	228 Move X0, X22
	229 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	230 Move X23, [X24+32]
	231 Compare X23, 0
	232 JumpIfEqual {342}
	233 Move X10, 0xC84000
	234 Move X8, [X23]
	235 Move X10, [X10+1976]
	236 Move W24, [X24+24]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Move X1, [X10]
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move W2, 3
	248 Move X0, X23
	249 Call 0x1C5D788
	250 Move X8, [X19+64]
	251 Move TEMP, 0
	252 Not TEMP
	253 Move W9, TEMP
	254 Move [X31+8], X8
	255 Move [X19+64], X31
	256 Move [X19], W9
	257 Move W9, [X10]
	258 Add W9, W9, 3
	259 Add X8, X8, W9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X9, [X0+8]
	263 Move X0, X23
	264 Move X1, X21
	265 Move X2, X20
	266 Move X3, X22
	267 Move X4, X31
	268 Move W5, W24
	269 Move X6, X31
	270 Move X7, X31
	271 Move [X31], X9
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Compare X0, 0
	274 JumpIfEqual {343}
	275 Move X8, 0xC4C000
	276 Move X8, [X8+504]
	277 Move X1, [X8]
	278 Call Task`1<Object>.GetAwaiter, X0
	279 Move X8, 0xC4C000
	280 Move X8, [X8+496]
	281 Move [X31+8], X0
	282 Move X1, [X8]
	283 Add X0, X31, 8
	284 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {314}
	289 Move X8, 0xC4C000
	290 Move X8, [X8+480]
	291 Add X0, X31, 8
	292 Move X1, [X8]
	293 Call TaskAwaiter`1<Object>.GetResult, X0
	294 Move X8, 0xC88000
	295 Move X8, [X8+416]
	296 Move X1, [X8]
	297 Call JsonParser.FromJson, X0
	298 Move TEMP, 1
	299 Not TEMP
	300 Move W8, TEMP
	301 Move [X19+8], W8
	302 Move X20, X0
	303 Move X0, [X25]
	304 Move X21, 0xC88000
	305 Move W8, [X0+224]
	306 Move X21, [X21+408]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X2, [X21]
	311 Move X0, X19
	312 Move X1, X20
	313 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	314 Move [X19], W31
	315 Move X8, [X31+8]
	316 Move [X19+64], X8
	317 Move X0, [X25]
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Move X8, 0xC88000
	323 Move X8, [X8+400]
	324 Add X0, X19, 8
	325 Move X3, [X8]
	326 Add X1, X31, 8
	327 Move X2, X19
	328 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	329 Move X20, [X31+64]
	330 Move X19, [X31+72]
	331 Move X22, [X31+48]
	332 Move X21, [X31+56]
	333 Move X24, [X31+32]
	334 Move X23, [X31+40]
	335 Move X30, [X31+16]
	336 Move X25, [X31+24]
	337 Add X31, X31, 80
	338 Return 
	339 Call 0x1C17F20
	340 Call 0x1C17F20
	341 Call 0x1C17F20
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Move X20, X0
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, X20
	349 Call 0x3EB2AD0
	350 Move X20, X0
	351 Move X0, 0xC49000
	352 Move X0, [X0+2000]
	353 Call 0x1C17D08
	354 Move X8, [X20]
	355 Move X1, [X8]
	356 Call 0x1C18270
	357 Move TEMP, X0
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfNotEqual {381}
	361 Move X20, [X20]
	362 Call 0x3EB2AE0
	363 Move TEMP, 1
	364 Not TEMP
	365 Move W8, TEMP
	366 Move [X19+8], W8
	367 Move X0, 0xC87000
	368 Move X0, [X0+3656]
	369 Call 0x1C17D08
	370 Move W8, [X0+224]
	371 Compare W8, 0
	372 JumpIfNotEqual {374}
	373 Call 0x1C17DFC
	374 Move X0, 0xC88000
	375 Move X0, [X0+448]
	376 Call 0x1C17D08
	377 Move X2, X0
	378 Move X0, X19
	379 Move X1, X20
	380 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	381 Move W0, 8
	382 Call 0x3EB2AF0
	383 Move X8, [X20]
	384 Move [X0], X8
	385 Move X1, 0xA0A000
	386 Add X1, X1, 3672
	387 Move X2, X31
	388 Call 0x3EB2B00
	389 Move X20, X0
	390 Call 0x3EB2AE0
	391 Move X0, X20
	392 Call 0x1D2D690
	393 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034ABFFC B 0x34AC018
	0x034AC000 B 0x34AC018
	0x034AC004 B 0x34AC018
	0x034AC008 B 0x34AC018
	0x034AC00C B 0x34AC018
	0x034AC010 B 0x34AC018
	0x034AC014 B 0x34AC018
	0x034AC018 MOV X20, X0
	0x034AC01C CMP W1, 0x1
	0x034AC020 B.NE 0x34AC0B0
	0x034AC024 MOV X0, X20
	0x034AC028 BL 0x3EB1AD0
	0x034AC02C MOV X20, X0
	0x034AC030 ADRP X0, 0xC47000
	0x034AC034 LDR X0, [X0 + 0x7D0]
	0x034AC038 BL 0x1C16D08
	0x034AC03C LDR X8, [X20]
	0x034AC040 LDR X1, [X8]
	0x034AC044 BL 0x1C17270
	0x034AC048 TBZ X0, 0x0, 0x34AC088
	0x034AC04C LDR X20, [X20]
	0x034AC050 BL 0x3EB1AE0
	0x034AC054 MOVN W8, 0x1
	0x034AC058 STR W8, [X19], #0x8
	0x034AC05C ADRP X0, 0xC4A000
	0x034AC060 LDR X0, [X0 + 0x280]
	0x034AC064 BL 0x1C16D08
	0x034AC068 LDR W8, [X0 + 0xE0]
	0x034AC06C CBNZ W8, 0x34AC074
	0x034AC070 BL 0x1C16DFC
	0x034AC074 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF32000
	007 Move X21, 0xC86000
	008 Move W8, [X22+2587]
	009 Move X21, [X21+3656]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC87000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move X0, 0xC86000
	020 Move X0, [X0+3656]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2587], W8
	024 Move X0, [X21]
	025 Move X21, 0xC87000
	026 Move W8, [X0+224]
	027 Move X21, [X21+456]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

