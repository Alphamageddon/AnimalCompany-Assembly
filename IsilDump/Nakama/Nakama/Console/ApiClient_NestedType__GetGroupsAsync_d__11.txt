Type: Nakama.Console.ApiClient/<GetGroupsAsync>d__11

Method: System.Void MoveNext()

Disassembly:
	0x034A9D50 BL 0x1C16F20
	0x034A9D54 B 0x34A9DB4
	0x034A9D58 B 0x34A9DB4
	0x034A9D5C B 0x34A9DB4
	0x034A9D60 B 0x34A9DB4
	0x034A9D64 B 0x34A9DB4
	0x034A9D68 B 0x34A9DB4
	0x034A9D6C B 0x34A9DB4
	0x034A9D70 B 0x34A9DB4
	0x034A9D74 B 0x34A9DB4
	0x034A9D78 B 0x34A9DB4
	0x034A9D7C B 0x34A9DB4
	0x034A9D80 B 0x34A9DB4
	0x034A9D84 B 0x34A9DB4
	0x034A9D88 B 0x34A9DB4
	0x034A9D8C B 0x34A9DB4
	0x034A9D90 B 0x34A9DB4
	0x034A9D94 B 0x34A9DB4
	0x034A9D98 B 0x34A9DB4
	0x034A9D9C B 0x34A9DB4
	0x034A9DA0 B 0x34A9DB4
	0x034A9DA4 B 0x34A9DB4
	0x034A9DA8 B 0x34A9DB4
	0x034A9DAC B 0x34A9DB4
	0x034A9DB0 B 0x34A9DB4
	0x034A9DB4 MOV X20, X0
	0x034A9DB8 CMP W1, 0x1
	0x034A9DBC B.NE 0x34A9E58
	0x034A9DC0 MOV X0, X20
	0x034A9DC4 BL 0x3EB1AD0
	0x034A9DC8 MOV X20, X0
	0x034A9DCC ADRP X0, 0xC4A000
	0x034A9DD0 LDR X0, [X0 + 0x7D0]
	0x034A9DD4 BL 0x1C16D08
	0x034A9DD8 LDR X8, [X20]
	0x034A9DDC LDR X1, [X8]
	0x034A9DE0 BL 0x1C17270
	0x034A9DE4 TBZ X0, 0x0, 0x34A9E30
	0x034A9DE8 LDR X20, [X20]
	0x034A9DEC BL 0x3EB1AE0
	0x034A9DF0 MOVN W8, 0x1
	0x034A9DF4 STR W8, [X19], #0x8
	0x034A9DF8 ADRP X0, 0xC88000
	0x034A9DFC LDR X0, [X0 + 0xDF8]
	0x034A9E00 BL 0x1C16D08
	0x034A9E04 LDR W8, [X0 + 0xE0]
	0x034A9E08 CBNZ W8, 0x34A9E10
	0x034A9E0C BL 0x1C16DFC
	0x034A9E10 ADRP X0, 0xC89000
	0x034A9E14 LDR X0, [X0 + 0x120]
	0x034A9E18 BL 0x1C16D08
	0x034A9E1C MOV X2, X0
	0x034A9E20 MOV X0, X19
	0x034A9E24 MOV X1, X20
	0x034A9E28 BL 0x26324C8
	0x034A9E2C B 0x34A9C44
	0x034A9E30 MOVZ W0, 0x8
	0x034A9E34 BL 0x3EB1AF0
	0x034A9E38 LDR X8, [X20]
	0x034A9E3C STR X8, [X0]
	0x034A9E40 ADRP X1, 0xA0B000
	0x034A9E44 ADD X1, X1, 0xE58
	0x034A9E48 MOV X2, X31
	0x034A9E4C BL 0x3EB1B00
	0x034A9E50 MOV X20, X0
	0x034A9E54 BL 0x3EB1AE0
	0x034A9E58 MOV X0, X20
	0x034A9E5C BL 0x1D2C690
	0x034A9E60 BL 0x1990590
	0x034A9E64 STR X30, [X31 - 0x30]!
	0x034A9E68 STP X22, X21, [X31 + 0x10]
	0x034A9E6C STP X20, X19, [X31 + 0x20]
	0x034A9E70 ADRP X22, 0xF34000
	0x034A9E74 ADRP X21, 0xC88000
	0x034A9E78 LDRB W8, [X22 + 0xA15]
	0x034A9E7C LDR X21, [X21 + 0xDF8]
	0x034A9E80 MOV X19, X1
	0x034A9E84 MOV X20, X0
	0x034A9E88 TBNZ X8, 0x0, 0x34A9EAC
	0x034A9E8C ADRP X0, 0xC89000
	0x034A9E90 LDR X0, [X0 + 0x128]
	0x034A9E94 BL 0x1C16CF4
	0x034A9E98 ADRP X0, 0xC88000
	0x034A9E9C LDR X0, [X0 + 0xDF8]
	0x034A9EA0 BL 0x1C16CF4
	0x034A9EA4 MOVZ W8, 0x1
	0x034A9EA8 STRB W8, [X22 + 0xA15]
	0x034A9EAC LDR X0, [X21]
	0x034A9EB0 ADRP X21, 0xC89000
	0x034A9EB4 LDR W8, [X0 + 0xE0]
	0x034A9EB8 LDR X21, [X21 + 0x128]
	0x034A9EBC CBNZ W8, 0x34A9EC4
	0x034A9EC0 BL 0x1C16DFC
	0x034A9EC4 LDR X2, [X21]
	0x034A9EC8 ADD X0, X20, 0x8
	0x034A9ECC MOV X1, X19
	0x034A9ED0 LDP X20, X19, [X31 + 0x20]
	0x034A9ED4 LDP X22, X21, [X31 + 0x10]
	0x034A9ED8 LDR X30, [X31], #0x30
	0x034A9EDC B 0x2632228
	0x034A9EE0 SUB X31, X31, 0x50
	0x034A9EE4 STP X30, X25, [X31 + 0x10]
	0x034A9EE8 STP X24, X23, [X31 + 0x20]
	0x034A9EEC STP X22, X21, [X31 + 0x30]
	0x034A9EF0 STP X20, X19, [X31 + 0x40]
	0x034A9EF4 ADRP X20, 0xF34000
	0x034A9EF8 LDRB W8, [X20 + 0xA16]
	0x034A9EFC MOV X19, X0
	0x034A9F00 TBNZ X8, 0x0, 0x34A9FF0
	0x034A9F04 ADRP X0, 0xC89000
	0x034A9F08 LDR X0, [X0 + 0x130]
	0x034A9F0C BL 0x1C16CF4
	0x034A9F10 ADRP X0, 0xC89000
	0x034A9F14 LDR X0, [X0 + 0x138]
	0x034A9F18 BL 0x1C16CF4
	0x034A9F1C ADRP X0, 0xC88000
	0x034A9F20 LDR X0, [X0 + 0xD40]
	0x034A9F24 BL 0x1C16CF4
	0x034A9F28 ADRP X0, 0xC4B000
	0x034A9F2C LDR X0, [X0 + 0x810]
	0x034A9F30 BL 0x1C16CF4
	0x034A9F34 ADRP X0, 0xC4B000
	0x034A9F38 LDR X0, [X0 + 0x6C0]
	0x034A9F3C BL 0x1C16CF4
	0x034A9F40 ADRP X0, 0xC4B000
	0x034A9F44 LDR X0, [X0 + 0x6D0]
	0x034A9F48 BL 0x1C16CF4
	0x034A9F4C ADRP X0, 0xC85000
	0x034A9F50 LDR X0, [X0 + 0x7B8]
	0x034A9F54 BL 0x1C16CF4
	0x034A9F58 ADRP X0, 0xC89000
	0x034A9F5C LDR X0, [X0 + 0x140]
	0x034A9F60 BL 0x1C16CF4
	0x034A9F64 ADRP X0, 0xC4D000
	0x034A9F68 LDR X0, [X0 + 0x1E0]
	0x034A9F6C BL 0x1C16CF4
	0x034A9F70 ADRP X0, 0xC4D000
	0x034A9F74 LDR X0, [X0 + 0x1F0]
	0x034A9F78 BL 0x1C16CF4
	0x034A9F7C ADRP X0, 0xC4D000
	0x034A9F80 LDR X0, [X0 + 0x1F8]
	0x034A9F84 BL 0x1C16CF4
	0x034A9F88 ADRP X0, 0xC53000
	0x034A9F8C LDR X0, [X0 + 0x3A0]
	0x034A9F90 BL 0x1C16CF4
	0x034A9F94 ADRP X0, 0xC4C000
	0x034A9F98 LDR X0, [X0 + 0xA28]
	0x034A9F9C BL 0x1C16CF4
	0x034A9FA0 ADRP X0, 0xC73000
	0x034A9FA4 LDR X0, [X0 + 0x4D0]
	0x034A9FA8 BL 0x1C16CF4
	0x034A9FAC ADRP X0, 0xC89000
	0x034A9FB0 LDR X0, [X0 + 0x148]
	0x034A9FB4 BL 0x1C16CF4
	0x034A9FB8 ADRP X0, 0xC85000
	0x034A9FBC LDR X0, [X0 + 0x7D0]
	0x034A9FC0 BL 0x1C16CF4
	0x034A9FC4 ADRP X0, 0xC86000
	0x034A9FC8 LDR X0, [X0 + 0x2E8]
	0x034A9FCC BL 0x1C16CF4
	0x034A9FD0 ADRP X0, 0xC85000
	0x034A9FD4 LDR X0, [X0 + 0x7D8]
	0x034A9FD8 BL 0x1C16CF4
	0x034A9FDC ADRP X0, 0xC4A000
	0x034A9FE0 LDR X0, [X0 + 0x988]
	0x034A9FE4 BL 0x1C16CF4
	0x034A9FE8 MOVZ W8, 0x1
	0x034A9FEC STRB W8, [X20 + 0xA16]
	0x034A9FF0 STR X31, [X31 + 0x8]
	0x034A9FF4 ADRP X25, 0xC88000
	0x034A9FF8 LDR W8, [X19]
	0x034A9FFC LDR X25, [X25 + 0xD40]
	0x034AA000 CBZ W8, 0x34AA190
	0x034AA004 LDR X21, [X19 + 0x20]
	0x034AA008 CBZ X21, 0x34AA2C0
	0x034AA00C ADRP X8, 0xC4B000
	0x034AA010 LDR X8, [X8 + 0xA28]
	0x034AA014 LDR X0, [X8]
	0x034AA018 ADRP X8, 0xC88000
	0x034AA01C LDR X8, [X8 + 0x148]
	0x034AA020 LDR X24, [X19 + 0x28]
	0x034AA024 LDR W9, [X0 + 0xE0]
	0x034AA028 LDR X20, [X8]
	0x034AA02C CBNZ W9, 0x34AA034
	0x034AA030 BL 0x1C16DFC
	0x034AA034 MOV X0, X21
	0x034AA038 MOV X1, X31
	0x034AA03C BL 0x3624D20
	0x034AA040 CBZ X20, 0x34AA308
	0x034AA044 ADRP X8, 0xC85000
	0x034AA048 LDR X8, [X8 + 0x2E8]
	0x034AA04C MOV X2, X0
	0x034AA050 LDR X1, [X8]
	0x034AA054 MOV X0, X20
	0x034AA058 MOV X3, X31
	0x034AA05C BL 0x32293BC
	0x034AA060 CBZ X24, 0x34AA30C
	0x034AA064 ADRP X8, 0xC49000
	0x034AA068 ADRP X9, 0xC52000
	0x034AA06C LDR X8, [X8 + 0x988]
	0x034AA070 LDR X9, [X9 + 0x3A0]
	0x034AA074 MOV X22, X0
	0x034AA078 LDR X23, [X24 + 0x10]
	0x034AA07C LDR X21, [X8]
	0x034AA080 LDR X0, [X9]
	0x034AA084 BL 0x1C16F10
	0x034AA088 MOV X20, X0
	0x034AA08C MOV X1, X23
	0x034AA090 MOV X2, X31
	0x034AA094 BL 0x36281F8
	0x034AA098 CBZ X20, 0x34AA310
	0x034AA09C MOV X0, X20
	0x034AA0A0 MOV X1, X22
	0x034AA0A4 MOV X2, X31
	0x034AA0A8 BL 0x36288CC
	0x034AA0AC MOV X0, X20
	0x034AA0B0 MOV X1, X21
	0x034AA0B4 MOV X2, X31
	0x034AA0B8 BL 0x3628980
	0x034AA0BC MOV X0, X20
	0x034AA0C0 MOV X1, X31
	0x034AA0C4 BL 0x3628A38
	0x034AA0C8 ADRP X8, 0xC72000
	0x034AA0CC ADRP X9, 0xC4A000
	0x034AA0D0 LDR X8, [X8 + 0x4D0]
	0x034AA0D4 LDR X9, [X9 + 0x6D0]
	0x034AA0D8 MOV X20, X0
	0x034AA0DC LDR X21, [X8]
	0x034AA0E0 LDR X0, [X9]
	0x034AA0E4 BL 0x1C16F10
	0x034AA0E8 ADRP X8, 0xC4A000
	0x034AA0EC LDR X8, [X8 + 0x6C0]
	0x034AA0F0 MOV X22, X0
	0x034AA0F4 LDR X1, [X8]
	0x034AA0F8 BL 0x2AA4804
	0x034AA0FC ADRP X8, 0xC84000
	0x034AA100 LDR X8, [X8 + 0x7D8]
	0x034AA104 LDR X1, [X19 + 0x30]
	0x034AA108 LDR X0, [X8]
	0x034AA10C MOV X2, X31
	0x034AA110 BL 0x321B938
	0x034AA114 CBZ X22, 0x34AA314
	0x034AA118 ADRP X8, 0xC84000
	0x034AA11C LDR X8, [X8 + 0x7D0]
	0x034AA120 ADRP X9, 0xC4A000
	0x034AA124 LDR X9, [X9 + 0x810]
	0x034AA128 MOV X2, X0
	0x034AA12C LDR X1, [X8]
	0x034AA130 LDR X3, [X9]
	0x034AA134 MOV X0, X22
	0x034AA138 BL 0x2AA5098
	0x034AA13C LDR X23, [X24 + 0x20]
	0x034AA140 CBZ X23, 0x34AA318
	0x034AA144 ADRP X10, 0xC84000
	0x034AA148 LDR X8, [X23]
	0x034AA14C LDR X10, [X10 + 0x7B8]
	0x034AA150 LDR W24, [X24 + 0x18]
	0x034AA154 LDRH W9, [X8 + 0x12E]
	0x034AA158 LDR X1, [X10]
	0x034AA15C CBZ X9, 0x34AA180
	0x034AA160 LDR X10, [X8 + 0xB0]
	0x034AA164 ADD X10, X10, 0x8
	0x034AA168 LDUR X11, [X10 - 0x8]
	0x034AA16C CMP X11, X1
	0x034AA170 B.EQ 0x34AA1A8
	0x034AA174 SUBS X9, X9, 0x1
	0x034AA178 ADD X10, X10, 0x10
	0x034AA17C B.NE 0x34AA168
	0x034AA180 MOVZ W2, 0x3
	0x034AA184 MOV X0, X23
	0x034AA188 BL 0x1C5C788
	0x034AA18C B 0x34AA1B8
	0x034AA190 LDR X8, [X19 + 0x38]
	0x034AA194 MOVN W9, 0x0
	0x034AA198 STR X8, [X31 + 0x8]
	0x034AA19C STR X31, [X19 + 0x38]
	0x034AA1A0 STR W9, [X19]
	0x034AA1A4 B 0x34AA214
	0x034AA1A8 LDR W9, [X10]
	0x034AA1AC ADD W9, W9, 0x3
	0x034AA1B0 ADD X8, X8, W9, 0x4, SXTW
	0x034AA1B4 ADD X0, X8, 0x138
	0x034AA1B8 LDP X8, X9, [X0]
	0x034AA1BC MOV X0, X23
	0x034AA1C0 MOV X1, X21
	0x034AA1C4 MOV X2, X20
	0x034AA1C8 MOV X3, X22
	0x034AA1CC MOV X4, X31
	0x034AA1D0 MOV W5, W24
	0x034AA1D4 MOV X6, X31
	0x034AA1D8 MOV X7, X31
	0x034AA1DC STR X9, [X31]
	0x034AA1E0 BLR X8
	0x034AA1E4 CBZ X0, 0x34AA31C
	0x034AA1E8 ADRP X8, 0xC4C000
	0x034AA1EC LDR X8, [X8 + 0x1F8]
	0x034AA1F0 LDR X1, [X8]
	0x034AA1F4 BL 0x269F5D0
	0x034AA1F8 ADRP X8, 0xC4C000
	0x034AA1FC LDR X8, [X8 + 0x1F0]
	0x034AA200 STR X0, [X31 + 0x8]
	0x034AA204 LDR X1, [X8]
	0x034AA208 ADD X0, X31, 0x8
	0x034AA20C BL 0x2677430
	0x034AA210 TBZ X0, 0x0, 0x34AA270
	0x034AA214 ADRP X8, 0xC4C000
	0x034AA218 LDR X8, [X8 + 0x1E0]
	0x034AA21C ADD X0, X31, 0x8
	0x034AA220 LDR X1, [X8]
	0x034AA224 BL 0x2677474
	0x034AA228 ADRP X8, 0xC88000
	0x034AA22C LDR X8, [X8 + 0x140]
	0x034AA230 LDR X1, [X8]
	0x034AA234 BL 0x220E6DC
	0x034AA238 MOVN W8, 0x1
	0x034AA23C STR W8, [X19], #0x8
	0x034AA240 MOV X20, X0
	0x034AA244 LDR X0, [X25]
	0x034AA248 ADRP X21, 0xC88000
	0x034AA24C LDR W8, [X0 + 0xE0]
	0x034AA250 LDR X21, [X21 + 0x138]
	0x034AA254 CBNZ W8, 0x34AA25C
	0x034AA258 BL 0x1C16DFC
	0x034AA25C LDR X2, [X21]
	0x034AA260 MOV X0, X19
	0x034AA264 MOV X1, X20
	0x034AA268 BL 0x26322B0
	0x034AA26C B 0x34AA2A8
	0x034AA270 STR W31, [X19]
	0x034AA274 LDR X8, [X31 + 0x8]
	0x034AA278 STR X8, [X19 + 0x38]
	0x034AA27C LDR X0, [X25]
	0x034AA280 LDR W8, [X0 + 0xE0]
	0x034AA284 CBNZ W8, 0x34AA28C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF35000
	011 Move W8, [X20+2576]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xC8A000
	018 Move X0, [X0+152]
	019 Call 0x1C17CF4
	020 Move X0, 0xC8A000
	021 Move X0, [X0+160]
	022 Call 0x1C17CF4
	023 Move X0, 0xC89000
	024 Move X0, [X0+3280]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4C000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4C000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xC4C000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0xC86000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xC8A000
	039 Move X0, [X0+168]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4E000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4E000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4E000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xC54000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xC4D000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8A000
	057 Move X0, [X0+176]
	058 Call 0x1C17CF4
	059 Move X0, 0xC74000
	060 Move X0, [X0+1232]
	061 Call 0x1C17CF4
	062 Move X0, 0xC86000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xC87000
	066 Move X0, [X0+744]
	067 Call 0x1C17CF4
	068 Move X0, 0xC86000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xC4B000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2576], W8
	076 Move [X31+8], X31
	077 Move X25, 0xC89000
	078 Move W8, [X19]
	079 Move X25, [X25+3280]
	080 Compare W8, 0
	081 JumpIfEqual {186}
	082 Move X21, [X19+32]
	083 Compare X21, 0
	084 JumpIfEqual {275}
	085 Move X8, 0xC4D000
	086 Move X8, [X8+2600]
	087 Move X0, [X8]
	088 Move X8, 0xC8A000
	089 Move X8, [X8+176]
	090 Move X24, [X19+40]
	091 Move W9, [X0+224]
	092 Move X20, [X8]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Uri.EscapeDataString, X0
	099 Compare X20, 0
	100 JumpIfEqual {293}
	101 Move X8, 0xC87000
	102 Move X8, [X8+744]
	103 Move X2, X0
	104 Move X1, [X8]
	105 Move X0, X20
	106 Move X3, X31
	107 Call String.Replace, X0, X1, X2
	108 Compare X24, 0
	109 JumpIfEqual {294}
	110 Move X8, 0xC4B000
	111 Move X9, 0xC54000
	112 Move X8, [X8+2440]
	113 Move X9, [X9+928]
	114 Move X22, X0
	115 Move X23, [X24+16]
	116 Move X21, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X20, X0
	120 Move X1, X23
	121 Move X2, X31
	122 Call UriBuilder..ctor, X0, X1
	123 Compare X20, 0
	124 JumpIfEqual {295}
	125 Move X0, X20
	126 Move X1, X22
	127 Move X2, X31
	128 Call UriBuilder.set_Path, X0, X1
	129 Move X0, X20
	130 Move X1, X21
	131 Move X2, X31
	132 Call UriBuilder.set_Query, X0, X1
	133 Move X0, X20
	134 Move X1, X31
	135 Call UriBuilder.get_Uri, X0
	136 Move X8, 0xC74000
	137 Move X9, 0xC4C000
	138 Move X8, [X8+1232]
	139 Move X9, [X9+1744]
	140 Move X20, X0
	141 Move X21, [X8]
	142 Move X0, [X9]
	143 Call 0x1C17F10
	144 Move X8, 0xC4C000
	145 Move X8, [X8+1728]
	146 Move X22, X0
	147 Move X1, [X8]
	148 Call Dictionary`2<Object, Object>..ctor, X0
	149 Move X8, 0xC86000
	150 Move X8, [X8+2008]
	151 Move X1, [X19+48]
	152 Move X0, [X8]
	153 Move X2, X31
	154 Call String.Concat, X0, X1
	155 Compare X22, 0
	156 JumpIfEqual {296}
	157 Move X8, 0xC86000
	158 Move X8, [X8+2000]
	159 Move X9, 0xC4C000
	160 Move X9, [X9+2064]
	161 Move X2, X0
	162 Move X1, [X8]
	163 Move X3, [X9]
	164 Move X0, X22
	165 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	166 Move X23, [X24+32]
	167 Compare X23, 0
	168 JumpIfEqual {297}
	169 Move X10, 0xC86000
	170 Move X8, [X23]
	171 Move X10, [X10+1976]
	172 Move W24, [X24+24]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X1, [X10]
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+56]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+56], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W24
	205 Move X6, X31
	206 Move X7, X31
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {298}
	211 Move X8, 0xC4D000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xC4D000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {250}
	225 Move X8, 0xC4D000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move X8, 0xC89000
	231 Move X8, [X8+168]
	232 Move X1, [X8]
	233 Call JsonParser.FromJson, X0
	234 Move TEMP, 1
	235 Not TEMP
	236 Move W8, TEMP
	237 Move [X19+8], W8
	238 Move X20, X0
	239 Move X0, [X25]
	240 Move X21, 0xC89000
	241 Move W8, [X0+224]
	242 Move X21, [X21+160]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X2, [X21]
	247 Move X0, X19
	248 Move X1, X20
	249 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	250 Move [X19], W31
	251 Move X8, [X31+8]
	252 Move [X19+56], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xC89000
	259 Move X8, [X8+152]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 8
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Move X20, [X31+64]
	266 Move X19, [X31+72]
	267 Move X22, [X31+48]
	268 Move X21, [X31+56]
	269 Move X24, [X31+32]
	270 Move X23, [X31+40]
	271 Move X30, [X31+16]
	272 Move X25, [X31+24]
	273 Add X31, X31, 80
	274 Return 
	275 Move X0, 0xC52000
	276 Move X0, [X0+1400]
	277 Call 0x1C17D08
	278 Call 0x1C17F10
	279 Move X20, X0
	280 Move X0, 0xC86000
	281 Move X0, [X0+752]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X20
	285 Move X2, X31
	286 Call ArgumentException..ctor, X0, X1
	287 Move X0, 0xC89000
	288 Move X0, [X0+184]
	289 Call 0x1C17D08
	290 Move X1, X0
	291 Move X0, X20
	292 Call 0x1C17DEC
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move X20, X0
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, X20
	302 Call 0x3EB2AD0
	303 Move X20, X0
	304 Move X0, 0xC4A000
	305 Move X0, [X0+2000]
	306 Call 0x1C17D08
	307 Move X8, [X20]
	308 Move X1, [X8]
	309 Call 0x1C18270
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {334}
	314 Move X20, [X20]
	315 Call 0x3EB2AE0
	316 Move TEMP, 1
	317 Not TEMP
	318 Move W8, TEMP
	319 Move [X19+8], W8
	320 Move X0, 0xC88000
	321 Move X0, [X0+3280]
	322 Call 0x1C17D08
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, 0xC89000
	328 Move X0, [X0+192]
	329 Call 0x1C17D08
	330 Move X2, X0
	331 Move X0, X19
	332 Move X1, X20
	333 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	334 Move W0, 8
	335 Call 0x3EB2AF0
	336 Move X8, [X20]
	337 Move [X0], X8
	338 Move X1, 0xA0B000
	339 Add X1, X1, 3672
	340 Move X2, X31
	341 Call 0x3EB2B00
	342 Move X20, X0
	343 Call 0x3EB2AE0
	344 Move X0, X20
	345 Call 0x1D2D690
	346 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AA288 BL 0x1C16DFC
	0x034AA28C ADRP X8, 0xC88000
	0x034AA290 LDR X8, [X8 + 0x130]
	0x034AA294 ADD X0, X19, 0x8
	0x034AA298 LDR X3, [X8]
	0x034AA29C ADD X1, X31, 0x8
	0x034AA2A0 MOV X2, X19
	0x034AA2A4 BL 0x1FB8058
	0x034AA2A8 LDP X20, X19, [X31 + 0x40]
	0x034AA2AC LDP X22, X21, [X31 + 0x30]
	0x034AA2B0 LDP X24, X23, [X31 + 0x20]
	0x034AA2B4 LDP X30, X25, [X31 + 0x10]
	0x034AA2B8 ADD X31, X31, 0x50
	0x034AA2BC RET
	0x034AA2C0 ADRP X0, 0xC51000
	0x034AA2C4 LDR X0, [X0 + 0x578]
	0x034AA2C8 BL 0x1C16D08
	0x034AA2CC BL 0x1C16F10
	0x034AA2D0 MOV X20, X0
	0x034AA2D4 ADRP X0, 0xC85000
	0x034AA2D8 LDR X0, [X0 + 0x2F0]
	0x034AA2DC BL 0x1C16D08
	0x034AA2E0 MOV X1, X0
	0x034AA2E4 MOV X0, X20
	0x034AA2E8 MOV X2, X31
	0x034AA2EC BL 0x3314A68
	0x034AA2F0 ADRP X0, 0xC88000
	0x034AA2F4 LDR X0, [X0 + 0x150]
	0x034AA2F8 BL 0x1C16D08
	0x034AA2FC MOV X1, X0
	0x034AA300 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF34000
	007 Move X21, 0xC88000
	008 Move W8, [X22+2577]
	009 Move X21, [X21+3280]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC89000
	017 Move X0, [X0+200]
	018 Call 0x1C17CF4
	019 Move X0, 0xC88000
	020 Move X0, [X0+3280]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2577], W8
	024 Move X0, [X21]
	025 Move X21, 0xC89000
	026 Move W8, [X0+224]
	027 Move X21, [X21+200]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

