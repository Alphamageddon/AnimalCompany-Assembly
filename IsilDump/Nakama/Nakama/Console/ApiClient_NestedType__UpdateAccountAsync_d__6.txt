Type: Nakama.Console.ApiClient/<UpdateAccountAsync>d__6

Method: System.Void MoveNext()

Disassembly:
	0x034AF134 LDP X20, X19, [X31 + 0x60]
	0x034AF138 LDP X22, X21, [X31 + 0x50]
	0x034AF13C LDP X24, X23, [X31 + 0x40]
	0x034AF140 LDP X30, X25, [X31 + 0x30]
	0x034AF144 ADD X31, X31, 0x70
	0x034AF148 RET
	0x034AF14C BL 0x3EB1B20
	0x034AF150 SUB X31, X31, 0x60
	0x034AF154 STR X30, [X31 + 0x30]
	0x034AF158 STP X22, X21, [X31 + 0x40]
	0x034AF15C STP X20, X19, [X31 + 0x50]
	0x034AF160 ADRP X22, 0xF2E000
	0x034AF164 LDR X8, [X22 + 0xB08]
	0x034AF168 MOV W19, W2
	0x034AF16C MOV X20, X1
	0x034AF170 MOV X21, X0
	0x034AF174 CBNZ X8, 0x34AF1C0
	0x034AF178 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF17C LDR V0, [X12 + 0x5B8]
	0x034AF180 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF184 ADRP X10, 0xFFFFFFFFFD653000
	0x034AF188 ADD X8, X8, 0x4C6
	0x034AF18C MOVZ W9, 0xB
	0x034AF190 ADD X10, X10, 0x192
	0x034AF194 MOVZ W11, 0x1A
	0x034AF198 MOVZ W13, 0x14
	0x034AF19C ADD X0, X31, 0x0
	0x034AF1A0 STP X8, X9, [X31]
	0x034AF1A4 STP X10, X11, [X31 + 0x10]
	0x034AF1A8 STR W13, [X31 + 0x28]
	0x034AF1AC STR D0, [X31 + 0x20]
	0x034AF1B0 STRB W31, [X31 + 0x2C]
	0x034AF1B4 BL 0x1C1729C
	0x034AF1B8 MOV X8, X0
	0x034AF1BC STR X0, [X22 + 0xB08]
	0x034AF1C0 MOV X0, X21
	0x034AF1C4 MOV X1, X20
	0x034AF1C8 MOV W2, W19
	0x034AF1CC BLR X8
	0x034AF1D0 LDP X20, X19, [X31 + 0x50]
	0x034AF1D4 LDP X22, X21, [X31 + 0x40]
	0x034AF1D8 LDR X30, [X31 + 0x30]
	0x034AF1DC ADD X31, X31, 0x60
	0x034AF1E0 RET
	0x034AF1E4 SUB X31, X31, 0x50
	0x034AF1E8 STP X30, X23, [X31 + 0x20]
	0x034AF1EC STP X22, X21, [X31 + 0x30]
	0x034AF1F0 STP X20, X19, [X31 + 0x40]
	0x034AF1F4 MRS X21, 0xC000
	0x034AF1F8 MOV X19, X8
	0x034AF1FC LDR X8, [X21 + 0x28]
	0x034AF200 ADRP X22, 0xF2E000
	0x034AF204 ADRP X23, 0xC51000
	0x034AF208 MOV W20, W0
	0x034AF20C STR X8, [X31 + 0x18]
	0x034AF210 LDRB W8, [X22 + 0xA34]
	0x034AF214 LDR X23, [X23 + 0x960]
	0x034AF218 TBNZ X8, 0x0, 0x34AF230
	0x034AF21C ADRP X0, 0xC51000
	0x034AF220 LDR X0, [X0 + 0x960]
	0x034AF224 BL 0x1C16CF4
	0x034AF228 MOVZ W8, 0x1
	0x034AF22C STRB W8, [X22 + 0xA34]
	0x034AF230 LDR X0, [X23]
	0x034AF234 ADD X8, X31, 0x0
	0x034AF238 MOV W1, W20
	0x034AF23C BL 0x34AF278
	0x034AF240 LDR X8, [X31 + 0x10]
	0x034AF244 LDR V0, [X31]
	0x034AF248 STR X8, [X19 + 0x10]
	0x034AF24C STR V0, [X19]
	0x034AF250 LDR X8, [X21 + 0x28]
	0x034AF254 LDR X9, [X31 + 0x18]
	0x034AF258 CMP X8, X9
	0x034AF25C B.NE 0x34AF274
	0x034AF260 LDP X20, X19, [X31 + 0x40]
	0x034AF264 LDP X22, X21, [X31 + 0x30]
	0x034AF268 LDP X30, X23, [X31 + 0x20]
	0x034AF26C ADD X31, X31, 0x50
	0x034AF270 RET
	0x034AF274 BL 0x3EB1B20
	0x034AF278 SUB X31, X31, 0x40
	0x034AF27C STP X30, X21, [X31 + 0x20]
	0x034AF280 STP X20, X19, [X31 + 0x30]
	0x034AF284 MRS X21, 0xC000
	0x034AF288 MOV X19, X8
	0x034AF28C LDR X8, [X21 + 0x28]
	0x034AF290 MOV W20, W1
	0x034AF294 MOV X1, X0
	0x034AF298 ADD X0, X31, 0x0
	0x034AF29C STR X8, [X31 + 0x18]
	0x034AF2A0 STP X31, X31, [X31]
	0x034AF2A4 STR X31, [X31 + 0x10]
	0x034AF2A8 BL 0x34AF3C4
	0x034AF2AC CBNZ W0, 0x34AF2E4
	0x034AF2B0 STRH W20, [X31 + 0x10]
	0x034AF2B4 LDR V0, [X31]
	0x034AF2B8 LDR X8, [X31 + 0x10]
	0x034AF2BC STR V0, [X19]
	0x034AF2C0 STR X8, [X19 + 0x10]
	0x034AF2C4 LDR X8, [X21 + 0x28]
	0x034AF2C8 LDR X9, [X31 + 0x18]
	0x034AF2CC CMP X8, X9
	0x034AF2D0 B.NE 0x34AF32C
	0x034AF2D4 LDP X20, X19, [X31 + 0x30]
	0x034AF2D8 LDP X30, X21, [X31 + 0x20]
	0x034AF2DC ADD X31, X31, 0x40
	0x034AF2E0 RET
	0x034AF2E4 ADRP X0, 0xC44000
	0x034AF2E8 LDR X0, [X0 + 0x7D0]
	0x034AF2EC BL 0x1C16D08
	0x034AF2F0 BL 0x1C16F10
	0x034AF2F4 MOV X19, X0
	0x034AF2F8 ADRP X0, 0xC83000
	0x034AF2FC LDR X0, [X0 + 0x2F0]
	0x034AF300 BL 0x1C16D08
	0x034AF304 MOV X1, X0
	0x034AF308 MOV X0, X19
	0x034AF30C MOV X2, X31
	0x034AF310 BL 0x33B2C70
	0x034AF314 ADRP X0, 0xC83000
	0x034AF318 LDR X0, [X0 + 0x2F8]
	0x034AF31C BL 0x1C16D08
	0x034AF320 MOV X1, X0
	0x034AF324 MOV X0, X19
	0x034AF328 BL 0x1C16DEC
	0x034AF32C BL 0x3EB1B20
	0x034AF330 SUB X31, X31, 0x50
	0x034AF334 STP X30, X23, [X31 + 0x20]
	0x034AF338 STP X22, X21, [X31 + 0x30]
	0x034AF33C STP X20, X19, [X31 + 0x40]
	0x034AF340 MRS X21, 0xC000
	0x034AF344 MOV X19, X8
	0x034AF348 LDR X8, [X21 + 0x28]
	0x034AF34C ADRP X22, 0xF2E000
	0x034AF350 ADRP X23, 0xC51000
	0x034AF354 MOV W20, W0
	0x034AF358 STR X8, [X31 + 0x18]
	0x034AF35C LDRB W8, [X22 + 0xA35]
	0x034AF360 LDR X23, [X23 + 0x990]
	0x034AF364 TBNZ X8, 0x0, 0x34AF37C
	0x034AF368 ADRP X0, 0xC51000
	0x034AF36C LDR X0, [X0 + 0x990]
	0x034AF370 BL 0x1C16CF4
	0x034AF374 MOVZ W8, 0x1
	0x034AF378 STRB W8, [X22 + 0xA35]
	0x034AF37C LDR X0, [X23]
	0x034AF380 ADD X8, X31, 0x0
	0x034AF384 MOV W1, W20
	0x034AF388 BL 0x34AF278
	0x034AF38C LDR X8, [X31 + 0x10]
	0x034AF390 LDR V0, [X31]
	0x034AF394 STR X8, [X19 + 0x10]
	0x034AF398 STR V0, [X19]
	0x034AF39C LDR X8, [X21 + 0x28]
	0x034AF3A0 LDR X9, [X31 + 0x18]
	0x034AF3A4 CMP X8, X9
	0x034AF3A8 B.NE 0x34AF3C0
	0x034AF3AC LDP X20, X19, [X31 + 0x40]
	0x034AF3B0 LDP X22, X21, [X31 + 0x30]
	0x034AF3B4 LDP X30, X23, [X31 + 0x20]
	0x034AF3B8 ADD X31, X31, 0x50
	0x034AF3BC RET
	0x034AF3C0 BL 0x3EB1B20
	0x034AF3C4 SUB X31, X31, 0x50
	0x034AF3C8 STP X30, X21, [X31 + 0x30]
	0x034AF3CC STP X20, X19, [X31 + 0x40]
	0x034AF3D0 ADRP X21, 0xF2E000
	0x034AF3D4 LDR X8, [X21 + 0xB00]
	0x034AF3D8 MOV X20, X1
	0x034AF3DC MOV X19, X0
	0x034AF3E0 CBNZ X8, 0x34AF428
	0x034AF3E4 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF3E8 LDR V0, [X12 + 0x5B8]
	0x034AF3EC ADRP X8, 0xFFFFFFFFFD645000
	0x034AF3F0 ADRP X10, 0xFFFFFFFFFD651000
	0x034AF3F4 ADD X8, X8, 0x4C6
	0x034AF3F8 MOVZ W9, 0xB
	0x034AF3FC ADD X10, X10, 0x1E3
	0x034AF400 MOVZ W11, 0x1A
	0x034AF404 MOVZ W13, 0x10
	0x034AF408 ADD X0, X31, 0x0
	0x034AF40C STP X8, X9, [X31]
	0x034AF410 STP X10, X11, [X31 + 0x10]
	0x034AF414 STR W13, [X31 + 0x28]
	0x034AF418 STR D0, [X31 + 0x20]
	0x034AF41C STRB W31, [X31 + 0x2C]
	0x034AF420 BL 0x1C1729C
	0x034AF424 STR X0, [X21 + 0xB00]
	0x034AF428 MOV X0, X20
	0x034AF42C BL 0x1C1727C
	0x034AF430 LDR X8, [X21 + 0xB00]
	0x034AF434 MOV X20, X0
	0x034AF438 MOV X0, X19
	0x034AF43C MOV X1, X20
	0x034AF440 BLR X8
	0x034AF444 MOV W19, W0
	0x034AF448 MOV X0, X20
	0x034AF44C BL 0x1C17290
	0x034AF450 MOV W0, W19
	0x034AF454 LDP X20, X19, [X31 + 0x40]
	0x034AF458 LDP X30, X21, [X31 + 0x30]
	0x034AF45C ADD X31, X31, 0x50
	0x034AF460 RET
	0x034AF464 SUB X31, X31, 0x40
	0x034AF468 STP X30, X19, [X31 + 0x30]
	0x034AF46C ADRP X19, 0xF2E000
	0x034AF470 LDR X8, [X19 + 0xA38]
	0x034AF474 CBNZ X8, 0x34AF4BC
	0x034AF478 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF47C LDR V0, [X12 + 0x5B8]
	0x034AF480 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF484 ADRP X10, 0xFFFFFFFFFD666000
	0x034AF488 ADD X8, X8, 0x4C6
	0x034AF48C MOVZ W9, 0xB
	0x034AF490 ADD X10, X10, 0xB8C
	0x034AF494 MOVZ W11, 0x16
	0x034AF498 ADD X0, X31, 0x0
	0x034AF49C STR W31, [X31 + 0x28]
	0x034AF4A0 STP X8, X9, [X31]
	0x034AF4A4 STP X10, X11, [X31 + 0x10]
	0x034AF4A8 STR D0, [X31 + 0x20]
	0x034AF4AC STRB W31, [X31 + 0x2C]
	0x034AF4B0 BL 0x1C1729C
	0x034AF4B4 MOV X8, X0
	0x034AF4B8 STR X0, [X19 + 0xA38]
	0x034AF4BC BLR X8
	0x034AF4C0 LDP X30, X19, [X31 + 0x30]
	0x034AF4C4 ADD X31, X31, 0x40
	0x034AF4C8 RET
	0x034AF4CC SUB X31, X31, 0x40
	0x034AF4D0 STP X30, X19, [X31 + 0x30]
	0x034AF4D4 ADRP X19, 0xF2E000
	0x034AF4D8 LDR X0, [X19 + 0xA40]
	0x034AF4DC CBNZ X0, 0x34AF520
	0x034AF4E0 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF4E4 LDR V0, [X12 + 0x5B8]
	0x034AF4E8 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF4EC ADRP X10, 0xFFFFFFFFFD664000
	0x034AF4F0 ADD X8, X8, 0x4C6
	0x034AF4F4 MOVZ W9, 0xB
	0x034AF4F8 ADD X10, X10, 0xD9D
	0x034AF4FC MOVZ W11, 0x18
	0x034AF500 ADD X0, X31, 0x0
	0x034AF504 STR W31, [X31 + 0x28]
	0x034AF508 STP X8, X9, [X31]
	0x034AF50C STP X10, X11, [X31 + 0x10]
	0x034AF510 STR D0, [X31 + 0x20]
	0x034AF514 STRB W31, [X31 + 0x2C]
	0x034AF518 BL 0x1C1729C
	0x034AF51C STR X0, [X19 + 0xA40]
	0x034AF520 BLR X0
	0x034AF524 LDP X30, X19, [X31 + 0x30]
	0x034AF528 ADD X31, X31, 0x40
	0x034AF52C RET
	0x034AF530 SUB X31, X31, 0x50
	0x034AF534 STP X30, X21, [X31 + 0x30]
	0x034AF538 STP X20, X19, [X31 + 0x40]
	0x034AF53C ADRP X21, 0xF2E000
	0x034AF540 LDR X8, [X21 + 0xA48]
	0x034AF544 MOV W19, W1
	0x034AF548 MOV W20, W0
	0x034AF54C CBNZ X8, 0x34AF598
	0x034AF550 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF554 LDR V0, [X12 + 0x5B8]
	0x034AF558 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF55C ADRP X10, 0xFFFFFFFFFD645000
	0x034AF560 ADD X8, X8, 0x4C6
	0x034AF564 MOVZ W9, 0xB
	0x034AF568 ADD X10, X10, 0x4D2
	0x034AF56C MOVZ W11, 0x12
	0x034AF570 MOVZ W13, 0x8
	0x034AF574 ADD X0, X31, 0x0
	0x034AF578 STP X8, X9, [X31]
	0x034AF57C STP X10, X11, [X31 + 0x10]
	0x034AF580 STR W13, [X31 + 0x28]
	0x034AF584 STR D0, [X31 + 0x20]
	0x034AF588 STRB W31, [X31 + 0x2C]
	0x034AF58C BL 0x1C1729C
	0x034AF590 MOV X8, X0
	0x034AF594 STR X0, [X21 + 0xA48]
	0x034AF598 MOV W0, W20
	0x034AF59C MOV W1, W19
	0x034AF5A0 BLR X8
	0x034AF5A4 LDP X20, X19, [X31 + 0x40]
	0x034AF5A8 LDP X30, X21, [X31 + 0x30]
	0x034AF5AC ADD X31, X31, 0x50
	0x034AF5B0 RET
	0x034AF5B4 SUB X31, X31, 0x50
	0x034AF5B8 STR X30, [X31 + 0x30]
	0x034AF5BC STP X20, X19, [X31 + 0x40]
	0x034AF5C0 ADRP X20, 0xF2E000
	0x034AF5C4 LDR X8, [X20 + 0xA50]
	0x034AF5C8 MOV X19, X0
	0x034AF5CC CBNZ X8, 0x34AF618
	0x034AF5D0 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF5D4 LDR V0, [X12 + 0x5B8]
	0x034AF5D8 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF5DC ADRP X10, 0xFFFFFFFFFD659000
	0x034AF5E0 ADD X8, X8, 0x4C6
	0x034AF5E4 MOVZ W9, 0xB
	0x034AF5E8 ADD X10, X10, 0x3CC
	0x034AF5EC MOVZ W11, 0x13
	0x034AF5F0 MOVZ W13, 0x8
	0x034AF5F4 ADD X0, X31, 0x0
	0x034AF5F8 STP X8, X9, [X31]
	0x034AF5FC STP X10, X11, [X31 + 0x10]
	0x034AF600 STR W13, [X31 + 0x28]
	0x034AF604 STR D0, [X31 + 0x20]
	0x034AF608 STRB W31, [X31 + 0x2C]
	0x034AF60C BL 0x1C1729C
	0x034AF610 MOV X8, X0
	0x034AF614 STR X0, [X20 + 0xA50]
	0x034AF618 MOV X0, X19
	0x034AF61C BLR X8
	0x034AF620 LDP X20, X19, [X31 + 0x40]
	0x034AF624 LDR X30, [X31 + 0x30]
	0x034AF628 ADD X31, X31, 0x50
	0x034AF62C RET
	0x034AF630 SUB X31, X31, 0x50
	0x034AF634 STP X30, X21, [X31 + 0x30]
	0x034AF638 STP X20, X19, [X31 + 0x40]
	0x034AF63C ADRP X21, 0xF2E000
	0x034AF640 LDR X8, [X21 + 0xA58]
	0x034AF644 MOV X19, X1
	0x034AF648 MOV X20, X0
	0x034AF64C CBNZ X8, 0x34AF694
	0x034AF650 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF654 LDR V0, [X12 + 0x5B8]
	0x034AF658 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF65C ADRP X10, 0xFFFFFFFFFD66A000
	0x034AF660 ADD X8, X8, 0x4C6
	0x034AF664 MOVZ W9, 0xB
	0x034AF668 ADD X10, X10, 0xC85
	0x034AF66C MOVZ W11, 0x10
	0x034AF670 ADD X0, X31, 0x0
	0x034AF674 STP X8, X9, [X31]
	0x034AF678 STP X10, X11, [X31 + 0x10]
	0x034AF67C STR W11, [X31 + 0x28]
	0x034AF680 STR D0, [X31 + 0x20]
	0x034AF684 STRB W31, [X31 + 0x2C]
	0x034AF688 BL 0x1C1729C
	0x034AF68C MOV X8, X0
	0x034AF690 STR X0, [X21 + 0xA58]
	0x034AF694 MOV X0, X20
	0x034AF698 MOV X1, X19
	0x034AF69C BLR X8
	0x034AF6A0 LDP X20, X19, [X31 + 0x40]
	0x034AF6A4 LDP X30, X21, [X31 + 0x30]
	0x034AF6A8 ADD X31, X31, 0x50
	0x034AF6AC RET
	0x034AF6B0 SUB X31, X31, 0x50
	0x034AF6B4 STP X30, X21, [X31 + 0x30]
	0x034AF6B8 STP X20, X19, [X31 + 0x40]
	0x034AF6BC ADRP X21, 0xF2E000
	0x034AF6C0 LDR X8, [X21 + 0xA60]
	0x034AF6C4 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xF2F000
	012 Move W8, [X20+2606]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {71}
	018 Move X0, 0xC84000
	019 Move X0, [X0+680]
	020 Call 0x1C17CF4
	021 Move X0, 0xC48000
	022 Move X0, [X0+640]
	023 Call 0x1C17CF4
	024 Move X0, 0xC46000
	025 Move X0, [X0+2064]
	026 Call 0x1C17CF4
	027 Move X0, 0xC46000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xC46000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0xC80000
	034 Move X0, [X0+1976]
	035 Call 0x1C17CF4
	036 Move X0, 0xC48000
	037 Move X0, [X0+480]
	038 Call 0x1C17CF4
	039 Move X0, 0xC48000
	040 Move X0, [X0+496]
	041 Call 0x1C17CF4
	042 Move X0, 0xC48000
	043 Move X0, [X0+504]
	044 Call 0x1C17CF4
	045 Move X0, 0xC4E000
	046 Move X0, [X0+928]
	047 Call 0x1C17CF4
	048 Move X0, 0xC47000
	049 Move X0, [X0+2600]
	050 Call 0x1C17CF4
	051 Move X0, 0xC6E000
	052 Move X0, [X0+1240]
	053 Call 0x1C17CF4
	054 Move X0, 0xC80000
	055 Move X0, [X0+2000]
	056 Call 0x1C17CF4
	057 Move X0, 0xC81000
	058 Move X0, [X0+744]
	059 Call 0x1C17CF4
	060 Move X0, 0xC80000
	061 Move X0, [X0+2008]
	062 Call 0x1C17CF4
	063 Move X0, 0xC45000
	064 Move X0, [X0+2440]
	065 Call 0x1C17CF4
	066 Move X0, 0xC83000
	067 Move X0, [X0+3784]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+2606], W8
	071 Move [X31+24], X31
	072 Move X26, 0xC48000
	073 Move W8, [X19]
	074 Move X26, [X26+640]
	075 Compare W8, 0
	076 JumpIfEqual {198}
	077 Move X21, [X19+32]
	078 Compare X21, 0
	079 JumpIfEqual {280}
	080 Move X8, [X19+40]
	081 Compare X8, 0
	082 JumpIfEqual {298}
	083 Move X8, 0xC47000
	084 Move X8, [X8+2600]
	085 Move X0, [X8]
	086 Move X8, 0xC83000
	087 Move X8, [X8+3784]
	088 Move X25, [X19+48]
	089 Move W9, [X0+224]
	090 Move X20, [X8]
	091 Compare W9, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X21
	095 Move X1, X31
	096 Call Uri.EscapeDataString, X0
	097 Compare X20, 0
	098 JumpIfEqual {316}
	099 Move X8, 0xC81000
	100 Move X8, [X8+744]
	101 Move X2, X0
	102 Move X1, [X8]
	103 Move X0, X20
	104 Move X3, X31
	105 Call String.Replace, X0, X1, X2
	106 Compare X25, 0
	107 JumpIfEqual {317}
	108 Move X8, 0xC45000
	109 Move X9, 0xC4E000
	110 Move X8, [X8+2440]
	111 Move X9, [X9+928]
	112 Move X22, X0
	113 Move X23, [X25+16]
	114 Move X21, [X8]
	115 Move X0, [X9]
	116 Call 0x1C17F10
	117 Move X20, X0
	118 Move X1, X23
	119 Move X2, X31
	120 Call UriBuilder..ctor, X0, X1
	121 Compare X20, 0
	122 JumpIfEqual {318}
	123 Move X0, X20
	124 Move X1, X22
	125 Move X2, X31
	126 Call UriBuilder.set_Path, X0, X1
	127 Move X0, X20
	128 Move X1, X21
	129 Move X2, X31
	130 Call UriBuilder.set_Query, X0, X1
	131 Move X0, X20
	132 Move X1, X31
	133 Call UriBuilder.get_Uri, X0
	134 Move X8, 0xC6E000
	135 Move X9, 0xC46000
	136 Move X8, [X8+1240]
	137 Move X9, [X9+1744]
	138 Move X20, X0
	139 Move X21, [X8]
	140 Move X0, [X9]
	141 Call 0x1C17F10
	142 Move X8, 0xC46000
	143 Move X8, [X8+1728]
	144 Move X22, X0
	145 Move X1, [X8]
	146 Call Dictionary`2<Object, Object>..ctor, X0
	147 Move X8, 0xC80000
	148 Move X8, [X8+2008]
	149 Move X1, [X19+56]
	150 Move X0, [X8]
	151 Move X2, X31
	152 Call String.Concat, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {319}
	155 Move X8, 0xC80000
	156 Move X8, [X8+2000]
	157 Move X9, 0xC46000
	158 Move X9, [X9+2064]
	159 Move X2, X0
	160 Move X1, [X8]
	161 Move X3, [X9]
	162 Move X0, X22
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move X0, [X19+40]
	165 Move X1, X31
	166 Call JsonWriter.ToJson, X0
	167 Move X23, X0
	168 Move X0, X31
	169 Call Encoding.get_UTF8
	170 Compare X0, 0
	171 JumpIfEqual {320}
	172 Move X8, [X0]
	173 Move X9, [X8+616]
	174 Move X2, [X8+624]
	175 Move X1, X23
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X24, [X25+32]
	178 Compare X24, 0
	179 JumpIfEqual {321}
	180 Move X10, 0xC80000
	181 Move X8, [X24]
	182 Move X10, [X10+1976]
	183 Move W25, [X25+24]
	184 Move X23, X0
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X10]
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 3
	196 Move X0, X24
	197 Call 0x1C5D788
	198 Move X8, [X19+64]
	199 Move TEMP, 0
	200 Not TEMP
	201 Move W9, TEMP
	202 Move [X31+24], X8
	203 Move [X19+64], X31
	204 Move [X19], W9
	205 Move W9, [X10]
	206 Add W9, W9, 3
	207 Add X8, X8, W9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X9, [X0+8]
	211 Move X0, X24
	212 Move X1, X21
	213 Move X2, X20
	214 Move X3, X22
	215 Move X4, X23
	216 Move W5, W25
	217 Move X6, X31
	218 Move X7, X31
	219 Move [X31], X9
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X0, 0
	222 JumpIfEqual {322}
	223 Move X8, 0xC48000
	224 Move X8, [X8+504]
	225 Move X1, [X8]
	226 Call Task`1<Object>.GetAwaiter, X0
	227 Move X8, 0xC48000
	228 Move X8, [X8+496]
	229 Move [X31+24], X0
	230 Move X1, [X8]
	231 Add X0, X31, 24
	232 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {254}
	237 Move X8, 0xC48000
	238 Move X8, [X8+480]
	239 Add X0, X31, 24
	240 Move X1, [X8]
	241 Call TaskAwaiter`1<Object>.GetResult, X0
	242 Move TEMP, 1
	243 Not TEMP
	244 Move W8, TEMP
	245 Move [X19+8], W8
	246 Move X0, [X26]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X0, X19
	252 Move X1, X31
	253 Call AsyncTaskMethodBuilder.SetResult, X0
	254 Move [X19], W31
	255 Move X8, [X31+24]
	256 Move [X19+64], X8
	257 Move X0, [X26]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X8, 0xC84000
	263 Move X8, [X8+680]
	264 Add X0, X19, 8
	265 Move X3, [X8]
	266 Add X1, X31, 24
	267 Move X2, X19
	268 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	269 Move X20, [X31+80]
	270 Move X19, [X31+88]
	271 Move X22, [X31+64]
	272 Move X21, [X31+72]
	273 Move X24, [X31+48]
	274 Move X23, [X31+56]
	275 Move X26, [X31+32]
	276 Move X25, [X31+40]
	277 Move X30, [X31+16]
	278 Add X31, X31, 96
	279 Return 
	280 Move X0, 0xC4D000
	281 Move X0, [X0+1400]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X20, X0
	285 Move X0, 0xC81000
	286 Move X0, [X0+752]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call ArgumentException..ctor, X0, X1
	292 Move X0, 0xC84000
	293 Move X0, [X0+688]
	294 Call 0x1C17D08
	295 Move X1, X0
	296 Move X0, X20
	297 Call 0x1C17DEC
	298 Move X0, 0xC4D000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xC80000
	304 Move X0, [X0+3016]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xC84000
	311 Move X0, [X0+688]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Move X20, X0
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X0, X20
	326 Call 0x3EB2AD0
	327 Move X20, X0
	328 Move X0, 0xC45000
	329 Move X0, [X0+2000]
	330 Call 0x1C17D08
	331 Move X8, [X20]
	332 Move X1, [X8]
	333 Call 0x1C18270
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {355}
	338 Move X20, [X20]
	339 Call 0x3EB2AE0
	340 Move TEMP, 1
	341 Not TEMP
	342 Move W8, TEMP
	343 Move [X19+8], W8
	344 Move X0, 0xC48000
	345 Move X0, [X0+640]
	346 Call 0x1C17D08
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X0, X19
	352 Move X1, X20
	353 Move X2, X31
	354 Call AsyncTaskMethodBuilder.SetException, X0, X1
	355 Move W0, 8
	356 Call 0x3EB2AF0
	357 Move X8, [X20]
	358 Move [X0], X8
	359 Move X1, 0xA06000
	360 Add X1, X1, 3672
	361 Move X2, X31
	362 Call 0x3EB2B00
	363 Move X20, X0
	364 Call 0x3EB2AE0
	365 Move X0, X20
	366 Call 0x1D2D690
	367 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AF6C8 MOV X20, X0
	0x034AF6CC CBNZ X8, 0x34AF714
	0x034AF6D0 ADRP X12, 0xFFFFFFFFFD63E000
	0x034AF6D4 LDR V0, [X12 + 0x5B8]
	0x034AF6D8 ADRP X8, 0xFFFFFFFFFD645000
	0x034AF6DC ADRP X10, 0xFFFFFFFFFD66A000
	0x034AF6E0 ADD X8, X8, 0x4C6
	0x034AF6E4 MOVZ W9, 0xB
	0x034AF6E8 ADD X10, X10, 0xC85
	0x034AF6EC MOVZ W11, 0x10
	0x034AF6F0 ADD X0, X31, 0x0
	0x034AF6F4 STP X8, X9, [X31]
	0x034AF6F8 STP X10, X11, [X31 + 0x10]
	0x034AF6FC STR W11, [X31 + 0x28]
	0x034AF700 STR D0, [X31 + 0x20]
	0x034AF704 STRB W31, [X31 + 0x2C]
	0x034AF708 BL 0x1C1729C
	0x034AF70C MOV X8, X0
	0x034AF710 STR X0, [X21 + 0xA60]
	0x034AF714 MOV X0, X20
	0x034AF718 MOV X1, X19
	0x034AF71C BLR X8
	0x034AF720 LDP X20, X19, [X31 + 0x40]
	0x034AF724 LDP X30, X21, [X31 + 0x30]
	0x034AF728 ADD X31, X31, 0x50
	0x034AF72C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF2F000
	007 Move X22, 0xC48000
	008 Move W8, [X21+2607]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC48000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2607], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

