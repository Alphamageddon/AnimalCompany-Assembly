Type: Nakama.Console.ApiResponseException

Method: System.Int64 get_StatusCode()

Disassembly:
	0x0349CB0C MOVZ W8, 0x1
	0x0349CB10 STRB W8, [X20 + 0x9A8]

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Int32 get_GrpcStatusCode()

Disassembly:
	0x0349CB14 LDR X19, [X19 + 0x18]
	0x0349CB18 CBNZ X19, 0x349CB40

ISIL:
	001 Move W0, [X0+152]
	002 Return X0

Method: System.Void .ctor(System.Int64 statusCode, System.String content, System.Int32 grpcCode)

Disassembly:
	0x0349CB1C ADRP X8, 0xC58000
	0x0349CB20 LDR X8, [X8 + 0x6D0]
	0x0349CB24 LDR X0, [X8]
	0x0349CB28 BL 0x1C16F10
	0x0349CB2C ADRP X8, 0xC58000
	0x0349CB30 LDR X8, [X8 + 0x6C0]
	0x0349CB34 MOV X19, X0
	0x0349CB38 LDR X1, [X8]
	0x0349CB3C BL 0x2AA4804
	0x0349CB40 MOV X0, X19
	0x0349CB44 LDP X20, X19, [X31 + 0x10]
	0x0349CB48 LDR X30, [X31], #0x20
	0x0349CB4C RET
	0x0349CB50 LDR X0, [X0 + 0x18]
	0x0349CB54 RET
	0x0349CB58 STR X1, [X0 + 0x18]
	0x0349CB5C RET
	0x0349CB60 SUB X31, X31, 0x70
	0x0349CB64 STP X29, X30, [X31 + 0x10]
	0x0349CB68 STP X28, X27, [X31 + 0x20]
	0x0349CB6C STP X26, X25, [X31 + 0x30]
	0x0349CB70 STP X24, X23, [X31 + 0x40]
	0x0349CB74 STP X22, X21, [X31 + 0x50]
	0x0349CB78 STP X20, X19, [X31 + 0x60]
	0x0349CB7C ADRP X23, 0xF41000
	0x0349CB80 ADRP X19, 0xC57000
	0x0349CB84 ADRP X21, 0xC91000
	0x0349CB88 ADRP X22, 0xC57000
	0x0349CB8C LDRB W8, [X23 + 0x9A9]
	0x0349CB90 LDR X19, [X19 + 0x988]
	0x0349CB94 LDR X21, [X21 + 0xD88]
	0x0349CB98 LDR X22, [X22 + 0x838]
	0x0349CB9C MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xF42000
	009 Move X24, 0xC58000
	010 Move W8, [X23+2466]
	011 Move X24, [X24+2000]
	012 Move W19, W3
	013 Move X22, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xC58000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2466], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X22
	032 Move X2, X31
	033 Call Exception..ctor, X0, X1
	034 Move [X20+144], X21
	035 Move [X20+152], W19
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X30, [X31+64]
	043 Return 

Method: System.Void .ctor(System.String message, System.Exception e)

Disassembly:
	0x0349CBA0 TBNZ X8, 0x0, 0x349CC60
	0x0349CBA4 ADRP X0, 0xC57000
	0x0349CBA8 LDR X0, [X0 + 0xE00]
	0x0349CBAC BL 0x1C16CF4
	0x0349CBB0 ADRP X0, 0xC5A000
	0x0349CBB4 LDR X0, [X0 + 0x190]
	0x0349CBB8 BL 0x1C16CF4
	0x0349CBBC ADRP X0, 0xC5A000
	0x0349CBC0 LDR X0, [X0 + 0x198]
	0x0349CBC4 BL 0x1C16CF4
	0x0349CBC8 ADRP X0, 0xC57000
	0x0349CBCC LDR X0, [X0 + 0xE18]
	0x0349CBD0 BL 0x1C16CF4
	0x0349CBD4 ADRP X0, 0xC5A000
	0x0349CBD8 LDR X0, [X0 + 0x1B0]
	0x0349CBDC BL 0x1C16CF4
	0x0349CBE0 ADRP X0, 0xC5A000
	0x0349CBE4 LDR X0, [X0 + 0x1B8]
	0x0349CBE8 BL 0x1C16CF4
	0x0349CBEC ADRP X0, 0xC57000
	0x0349CBF0 LDR X0, [X0 + 0xAC8]
	0x0349CBF4 BL 0x1C16CF4
	0x0349CBF8 ADRP X0, 0xC84000
	0x0349CBFC LDR X0, [X0 + 0x360]
	0x0349CC00 BL 0x1C16CF4
	0x0349CC04 ADRP X0, 0xC84000
	0x0349CC08 LDR X0, [X0 + 0xFB8]
	0x0349CC0C BL 0x1C16CF4
	0x0349CC10 ADRP X0, 0xC91000
	0x0349CC14 LDR X0, [X0 + 0xD88]
	0x0349CC18 BL 0x1C16CF4
	0x0349CC1C ADRP X0, 0xC62000
	0x0349CC20 LDR X0, [X0 + 0x6D8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xF42000
	008 Move X23, 0xC58000
	009 Move W8, [X22+2467]
	010 Move X23, [X23+2000]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xC58000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2467], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X21
	030 Move X2, X20
	031 Move X3, X31
	032 Call Exception..ctor, X0, X1, X2
	033 Move TEMP, 0
	034 Not TEMP
	035 Move X8, TEMP
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W9, TEMP
	039 Move [X19+144], X8
	040 Move [X19+152], W9
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 

Method: System.Void .ctor(System.String content)

Disassembly:
	0x0349CC24 BL 0x1C16CF4
	0x0349CC28 ADRP X0, 0xC91000
	0x0349CC2C LDR X0, [X0 + 0xD80]
	0x0349CC30 BL 0x1C16CF4

ISIL:
	001 Move X2, X1
	002 Move TEMP, 0
	003 Not TEMP
	004 Move X1, TEMP
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W3, TEMP
	008 Call ApiResponseException..ctor, X0, X1, X2, X3
	009 Return 

Method: System.String ToString()

Disassembly:
	0x0349CC34 ADRP X0, 0xC57000
	0x0349CC38 LDR X0, [X0 + 0x838]
	0x0349CC3C BL 0x1C16CF4
	0x0349CC40 ADRP X0, 0xC57000
	0x0349CC44 LDR X0, [X0 + 0x988]
	0x0349CC48 BL 0x1C16CF4
	0x0349CC4C ADRP X0, 0xC57000
	0x0349CC50 LDR X0, [X0 + 0x848]
	0x0349CC54 BL 0x1C16CF4
	0x0349CC58 MOVZ W8, 0x1
	0x0349CC5C STRB W8, [X23 + 0x9A9]
	0x0349CC60 LDR X0, [X19]
	0x0349CC64 LDR X2, [X20 + 0x10]
	0x0349CC68 LDR X1, [X21]
	0x0349CC6C LDR X3, [X22]
	0x0349CC70 MOV X4, X31
	0x0349CC74 BL 0x32277C4
	0x0349CC78 LDR X27, [X19]
	0x0349CC7C STR X0, [X31 + 0x8]
	0x0349CC80 MOV X0, X20
	0x0349CC84 BL 0x349CADC
	0x0349CC88 CBZ X0, 0x349CF38
	0x0349CC8C ADRP X10, 0xC5A000
	0x0349CC90 LDR X8, [X0]
	0x0349CC94 LDR X10, [X10 + 0x190]
	0x0349CC98 MOV X20, X0
	0x0349CC9C LDRH W9, [X8 + 0x12E]
	0x0349CCA0 LDR X1, [X10]
	0x0349CCA4 CBZ X9, 0x349CCC8
	0x0349CCA8 LDR X10, [X8 + 0xB0]
	0x0349CCAC ADD X10, X10, 0x8
	0x0349CCB0 LDUR X11, [X10 - 0x8]
	0x0349CCB4 CMP X11, X1
	0x0349CCB8 B.EQ 0x349CCD8
	0x0349CCBC SUBS X9, X9, 0x1
	0x0349CCC0 ADD X10, X10, 0x10
	0x0349CCC4 B.NE 0x349CCB0
	0x0349CCC8 MOV X0, X20
	0x0349CCCC MOV W2, W31
	0x0349CCD0 BL 0x1C5C788
	0x0349CCD4 B 0x349CCE4
	0x0349CCD8 LDRSW X9, [X10]
	0x0349CCDC ADD X8, X8, X9, 0x4, LSL
	0x0349CCE0 ADD X0, X8, 0x138
	0x0349CCE4 ADRP X28, 0xC57000
	0x0349CCE8 ADRP X29, 0xC5A000
	0x0349CCEC ADRP X26, 0xC57000
	0x0349CCF0 ADRP X24, 0xC84000
	0x0349CCF4 ADRP X25, 0xC84000
	0x0349CCF8 ADRP X19, 0xC62000
	0x0349CCFC LDR X28, [X28 + 0xE18]
	0x0349CD00 LDR X29, [X29 + 0x198]
	0x0349CD04 LDR X26, [X26 + 0xAC8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF42000
	009 Move X20, 0xC5A000
	010 Move X23, 0xC58000
	011 Move X22, 0xC92000
	012 Move W8, [X21+2468]
	013 Move X20, [X20+2656]
	014 Move X23, [X23+1880]
	015 Move X22, [X22+3264]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xC58000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xC5A000
	025 Move X0, [X0+2656]
	026 Call 0x1C17CF4
	027 Move X0, 0xC92000
	028 Move X0, [X0+3264]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2468], W8
	032 Move X8, [X19+144]
	033 Move X0, [X20]
	034 Add X1, X31, 8
	035 Move [X31+8], X8
	036 Call 0x1C17E04
	037 Move X8, [X19]
	038 Move X20, X0
	039 Move X0, X19
	040 Move X9, [X8+392]
	041 Move X1, [X8+400]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X21, X0
	044 Move W8, [X19+152]
	045 Move X0, [X23]
	046 Add X1, X31, 4
	047 Move [X31+4], W8
	048 Call 0x1C17E04
	049 Move X8, [X22]
	050 Move X3, X0
	051 Move X1, X20
	052 Move X2, X21
	053 Move X0, X8
	054 Move X4, X31
	055 Call String.Format, X0, X1, X2, X3
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X30, [X31+16]
	061 Move X23, [X31+24]
	062 Add X31, X31, 64
	063 Return X0

