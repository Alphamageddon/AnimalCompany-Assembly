Type: Nakama.Console.ApiClient/<DeleteStorageObjectAsync>d__29

Method: System.Void MoveNext()

Disassembly:
	0x034A75B8 LDR X0, [X0 + 0xFB8]
	0x034A75BC BL 0x1C16D08
	0x034A75C0 MOV X1, X0
	0x034A75C4 MOV X0, X20
	0x034A75C8 BL 0x1C16DEC
	0x034A75CC BL 0x1C16F20
	0x034A75D0 BL 0x1C16F20
	0x034A75D4 BL 0x1C16F20
	0x034A75D8 BL 0x1C16F20
	0x034A75DC BL 0x1C16F20
	0x034A75E0 BL 0x1C16F20
	0x034A75E4 BL 0x1C16F20
	0x034A75E8 B 0x34A7638
	0x034A75EC B 0x34A7638
	0x034A75F0 B 0x34A7638
	0x034A75F4 B 0x34A7638
	0x034A75F8 B 0x34A7638
	0x034A75FC B 0x34A7638
	0x034A7600 B 0x34A7638
	0x034A7604 B 0x34A7638
	0x034A7608 B 0x34A7638
	0x034A760C B 0x34A7638
	0x034A7610 B 0x34A7638
	0x034A7614 B 0x34A7638
	0x034A7618 B 0x34A7638
	0x034A761C B 0x34A7638
	0x034A7620 B 0x34A7638
	0x034A7624 B 0x34A7638
	0x034A7628 B 0x34A7638
	0x034A762C B 0x34A7638
	0x034A7630 B 0x34A7638
	0x034A7634 B 0x34A7638
	0x034A7638 MOV X20, X0
	0x034A763C CMP W1, 0x1
	0x034A7640 B.NE 0x34A76D0
	0x034A7644 MOV X0, X20
	0x034A7648 BL 0x3EB1AD0
	0x034A764C MOV X20, X0
	0x034A7650 ADRP X0, 0xC4C000
	0x034A7654 LDR X0, [X0 + 0x7D0]
	0x034A7658 BL 0x1C16D08
	0x034A765C LDR X8, [X20]
	0x034A7660 LDR X1, [X8]
	0x034A7664 BL 0x1C17270
	0x034A7668 TBZ X0, 0x0, 0x34A76A8
	0x034A766C LDR X20, [X20]
	0x034A7670 BL 0x3EB1AE0
	0x034A7674 MOVN W8, 0x1
	0x034A7678 STR W8, [X19], #0x8
	0x034A767C ADRP X0, 0xC4F000
	0x034A7680 LDR X0, [X0 + 0x280]
	0x034A7684 BL 0x1C16D08
	0x034A7688 LDR W8, [X0 + 0xE0]
	0x034A768C CBNZ W8, 0x34A7694
	0x034A7690 BL 0x1C16DFC
	0x034A7694 MOV X0, X19
	0x034A7698 MOV X1, X20
	0x034A769C MOV X2, X31
	0x034A76A0 BL 0x32C4908
	0x034A76A4 B 0x34A7524
	0x034A76A8 MOVZ W0, 0x8
	0x034A76AC BL 0x3EB1AF0
	0x034A76B0 LDR X8, [X20]
	0x034A76B4 STR X8, [X0]
	0x034A76B8 ADRP X1, 0xA0D000
	0x034A76BC ADD X1, X1, 0xE58
	0x034A76C0 MOV X2, X31
	0x034A76C4 BL 0x3EB1B00
	0x034A76C8 MOV X20, X0
	0x034A76CC BL 0x3EB1AE0
	0x034A76D0 MOV X0, X20
	0x034A76D4 BL 0x1D2C690
	0x034A76D8 BL 0x1990590
	0x034A76DC STR X30, [X31 - 0x30]!
	0x034A76E0 STP X22, X21, [X31 + 0x10]
	0x034A76E4 STP X20, X19, [X31 + 0x20]
	0x034A76E8 ADRP X21, 0xF36000
	0x034A76EC ADRP X22, 0xC4F000
	0x034A76F0 LDRB W8, [X21 + 0xA07]
	0x034A76F4 LDR X22, [X22 + 0x280]
	0x034A76F8 MOV X19, X1
	0x034A76FC MOV X20, X0
	0x034A7700 TBNZ X8, 0x0, 0x34A7718
	0x034A7704 ADRP X0, 0xC4F000
	0x034A7708 LDR X0, [X0 + 0x280]
	0x034A770C BL 0x1C16CF4
	0x034A7710 MOVZ W8, 0x1
	0x034A7714 STRB W8, [X21 + 0xA07]
	0x034A7718 LDR X0, [X22]
	0x034A771C LDR W8, [X0 + 0xE0]
	0x034A7720 CBNZ W8, 0x34A7728
	0x034A7724 BL 0x1C16DFC
	0x034A7728 ADD X0, X20, 0x8
	0x034A772C MOV X1, X19
	0x034A7730 LDP X20, X19, [X31 + 0x20]
	0x034A7734 LDP X22, X21, [X31 + 0x10]
	0x034A7738 MOV X2, X31
	0x034A773C LDR X30, [X31], #0x30
	0x034A7740 B 0x32C477C
	0x034A7744 SUB X31, X31, 0x50
	0x034A7748 STP X30, X25, [X31 + 0x10]
	0x034A774C STP X24, X23, [X31 + 0x20]
	0x034A7750 STP X22, X21, [X31 + 0x30]
	0x034A7754 STP X20, X19, [X31 + 0x40]
	0x034A7758 ADRP X20, 0xF36000
	0x034A775C LDRB W8, [X20 + 0xA08]
	0x034A7760 MOV X19, X0
	0x034A7764 TBNZ X8, 0x0, 0x34A7854
	0x034A7768 ADRP X0, 0xC8A000
	0x034A776C LDR X0, [X0 + 0xFC8]
	0x034A7770 BL 0x1C16CF4
	0x034A7774 ADRP X0, 0xC8A000
	0x034A7778 LDR X0, [X0 + 0xFD0]
	0x034A777C BL 0x1C16CF4
	0x034A7780 ADRP X0, 0xC8A000
	0x034A7784 LDR X0, [X0 + 0xC88]
	0x034A7788 BL 0x1C16CF4
	0x034A778C ADRP X0, 0xC4D000
	0x034A7790 LDR X0, [X0 + 0x810]
	0x034A7794 BL 0x1C16CF4
	0x034A7798 ADRP X0, 0xC4D000
	0x034A779C LDR X0, [X0 + 0x6C0]
	0x034A77A0 BL 0x1C16CF4
	0x034A77A4 ADRP X0, 0xC4D000
	0x034A77A8 LDR X0, [X0 + 0x6D0]
	0x034A77AC BL 0x1C16CF4
	0x034A77B0 ADRP X0, 0xC87000
	0x034A77B4 LDR X0, [X0 + 0x7B8]
	0x034A77B8 BL 0x1C16CF4
	0x034A77BC ADRP X0, 0xC8A000
	0x034A77C0 LDR X0, [X0 + 0xFD8]
	0x034A77C4 BL 0x1C16CF4
	0x034A77C8 ADRP X0, 0xC4F000
	0x034A77CC LDR X0, [X0 + 0x1E0]
	0x034A77D0 BL 0x1C16CF4
	0x034A77D4 ADRP X0, 0xC4F000
	0x034A77D8 LDR X0, [X0 + 0x1F0]
	0x034A77DC BL 0x1C16CF4
	0x034A77E0 ADRP X0, 0xC4F000
	0x034A77E4 LDR X0, [X0 + 0x1F8]
	0x034A77E8 BL 0x1C16CF4
	0x034A77EC ADRP X0, 0xC55000
	0x034A77F0 LDR X0, [X0 + 0x3A0]
	0x034A77F4 BL 0x1C16CF4
	0x034A77F8 ADRP X0, 0xC4E000
	0x034A77FC LDR X0, [X0 + 0xA28]
	0x034A7800 BL 0x1C16CF4
	0x034A7804 ADRP X0, 0xC75000
	0x034A7808 LDR X0, [X0 + 0x4D0]
	0x034A780C BL 0x1C16CF4
	0x034A7810 ADRP X0, 0xC87000
	0x034A7814 LDR X0, [X0 + 0x7D0]
	0x034A7818 BL 0x1C16CF4
	0x034A781C ADRP X0, 0xC88000
	0x034A7820 LDR X0, [X0 + 0x2E8]
	0x034A7824 BL 0x1C16CF4
	0x034A7828 ADRP X0, 0xC8A000
	0x034A782C LDR X0, [X0 + 0xFE0]
	0x034A7830 BL 0x1C16CF4
	0x034A7834 ADRP X0, 0xC87000
	0x034A7838 LDR X0, [X0 + 0x7D8]
	0x034A783C BL 0x1C16CF4
	0x034A7840 ADRP X0, 0xC4C000
	0x034A7844 LDR X0, [X0 + 0x988]
	0x034A7848 BL 0x1C16CF4
	0x034A784C MOVZ W8, 0x1
	0x034A7850 STRB W8, [X20 + 0xA08]
	0x034A7854 STR X31, [X31 + 0x8]
	0x034A7858 ADRP X25, 0xC8A000
	0x034A785C LDR W8, [X19]
	0x034A7860 LDR X25, [X25 + 0xC88]
	0x034A7864 CBZ W8, 0x34A79F4
	0x034A7868 LDR X21, [X19 + 0x20]
	0x034A786C CBZ X21, 0x34A7B24
	0x034A7870 ADRP X8, 0xC4E000
	0x034A7874 LDR X8, [X8 + 0xA28]
	0x034A7878 LDR X0, [X8]
	0x034A787C ADRP X8, 0xC8A000
	0x034A7880 LDR X8, [X8 + 0xFE0]
	0x034A7884 LDR X24, [X19 + 0x28]
	0x034A7888 LDR W9, [X0 + 0xE0]
	0x034A788C LDR X20, [X8]
	0x034A7890 CBNZ W9, 0x34A7898
	0x034A7894 BL 0x1C16DFC
	0x034A7898 MOV X0, X21
	0x034A789C MOV X1, X31
	0x034A78A0 BL 0x3624D20
	0x034A78A4 CBZ X20, 0x34A7B6C
	0x034A78A8 ADRP X8, 0xC88000
	0x034A78AC LDR X8, [X8 + 0x2E8]
	0x034A78B0 MOV X2, X0
	0x034A78B4 LDR X1, [X8]
	0x034A78B8 MOV X0, X20
	0x034A78BC MOV X3, X31
	0x034A78C0 BL 0x32293BC
	0x034A78C4 CBZ X24, 0x34A7B70
	0x034A78C8 ADRP X8, 0xC4C000
	0x034A78CC ADRP X9, 0xC55000
	0x034A78D0 LDR X8, [X8 + 0x988]
	0x034A78D4 LDR X9, [X9 + 0x3A0]
	0x034A78D8 MOV X22, X0
	0x034A78DC LDR X23, [X24 + 0x10]
	0x034A78E0 LDR X21, [X8]
	0x034A78E4 LDR X0, [X9]
	0x034A78E8 BL 0x1C16F10
	0x034A78EC MOV X20, X0
	0x034A78F0 MOV X1, X23
	0x034A78F4 MOV X2, X31
	0x034A78F8 BL 0x36281F8
	0x034A78FC CBZ X20, 0x34A7B74
	0x034A7900 MOV X0, X20
	0x034A7904 MOV X1, X22
	0x034A7908 MOV X2, X31
	0x034A790C BL 0x36288CC
	0x034A7910 MOV X0, X20
	0x034A7914 MOV X1, X21
	0x034A7918 MOV X2, X31
	0x034A791C BL 0x3628980
	0x034A7920 MOV X0, X20
	0x034A7924 MOV X1, X31
	0x034A7928 BL 0x3628A38
	0x034A792C ADRP X8, 0xC75000
	0x034A7930 ADRP X9, 0xC4D000
	0x034A7934 LDR X8, [X8 + 0x4D0]
	0x034A7938 LDR X9, [X9 + 0x6D0]
	0x034A793C MOV X20, X0
	0x034A7940 LDR X21, [X8]
	0x034A7944 LDR X0, [X9]
	0x034A7948 BL 0x1C16F10
	0x034A794C ADRP X8, 0xC4D000
	0x034A7950 LDR X8, [X8 + 0x6C0]
	0x034A7954 MOV X22, X0
	0x034A7958 LDR X1, [X8]
	0x034A795C BL 0x2AA4804
	0x034A7960 ADRP X8, 0xC87000
	0x034A7964 LDR X8, [X8 + 0x7D8]
	0x034A7968 LDR X1, [X19 + 0x30]
	0x034A796C LDR X0, [X8]
	0x034A7970 MOV X2, X31
	0x034A7974 BL 0x321B938
	0x034A7978 CBZ X22, 0x34A7B78
	0x034A797C ADRP X8, 0xC87000
	0x034A7980 LDR X8, [X8 + 0x7D0]
	0x034A7984 ADRP X9, 0xC4D000
	0x034A7988 LDR X9, [X9 + 0x810]
	0x034A798C MOV X2, X0
	0x034A7990 LDR X1, [X8]
	0x034A7994 LDR X3, [X9]
	0x034A7998 MOV X0, X22
	0x034A799C BL 0x2AA5098
	0x034A79A0 LDR X23, [X24 + 0x20]
	0x034A79A4 CBZ X23, 0x34A7B7C
	0x034A79A8 ADRP X10, 0xC87000
	0x034A79AC LDR X8, [X23]
	0x034A79B0 LDR X10, [X10 + 0x7B8]
	0x034A79B4 LDR W24, [X24 + 0x18]
	0x034A79B8 LDRH W9, [X8 + 0x12E]
	0x034A79BC LDR X1, [X10]
	0x034A79C0 CBZ X9, 0x34A79E4
	0x034A79C4 LDR X10, [X8 + 0xB0]
	0x034A79C8 ADD X10, X10, 0x8
	0x034A79CC LDUR X11, [X10 - 0x8]
	0x034A79D0 CMP X11, X1
	0x034A79D4 B.EQ 0x34A7A0C
	0x034A79D8 SUBS X9, X9, 0x1
	0x034A79DC ADD X10, X10, 0x10
	0x034A79E0 B.NE 0x34A79CC
	0x034A79E4 MOVZ W2, 0x3
	0x034A79E8 MOV X0, X23
	0x034A79EC BL 0x1C5C788
	0x034A79F0 B 0x34A7A1C
	0x034A79F4 LDR X8, [X19 + 0x38]
	0x034A79F8 MOVN W9, 0x0
	0x034A79FC STR X8, [X31 + 0x8]
	0x034A7A00 STR X31, [X19 + 0x38]
	0x034A7A04 STR W9, [X19]
	0x034A7A08 B 0x34A7A78
	0x034A7A0C LDR W9, [X10]
	0x034A7A10 ADD W9, W9, 0x3
	0x034A7A14 ADD X8, X8, W9, 0x4, SXTW
	0x034A7A18 ADD X0, X8, 0x138
	0x034A7A1C LDP X8, X9, [X0]
	0x034A7A20 MOV X0, X23
	0x034A7A24 MOV X1, X21
	0x034A7A28 MOV X2, X20
	0x034A7A2C MOV X3, X22
	0x034A7A30 MOV X4, X31
	0x034A7A34 MOV W5, W24
	0x034A7A38 MOV X6, X31
	0x034A7A3C MOV X7, X31
	0x034A7A40 STR X9, [X31]
	0x034A7A44 BLR X8
	0x034A7A48 CBZ X0, 0x34A7B80
	0x034A7A4C ADRP X8, 0xC4F000
	0x034A7A50 LDR X8, [X8 + 0x1F8]
	0x034A7A54 LDR X1, [X8]
	0x034A7A58 BL 0x269F5D0
	0x034A7A5C ADRP X8, 0xC4F000
	0x034A7A60 LDR X8, [X8 + 0x1F0]
	0x034A7A64 STR X0, [X31 + 0x8]
	0x034A7A68 LDR X1, [X8]
	0x034A7A6C ADD X0, X31, 0x8
	0x034A7A70 BL 0x2677430
	0x034A7A74 TBZ X0, 0x0, 0x34A7AD4
	0x034A7A78 ADRP X8, 0xC4F000
	0x034A7A7C LDR X8, [X8 + 0x1E0]
	0x034A7A80 ADD X0, X31, 0x8
	0x034A7A84 LDR X1, [X8]
	0x034A7A88 BL 0x2677474
	0x034A7A8C ADRP X8, 0xC8A000
	0x034A7A90 LDR X8, [X8 + 0xFD8]
	0x034A7A94 LDR X1, [X8]
	0x034A7A98 BL 0x220E6DC
	0x034A7A9C MOVN W8, 0x1
	0x034A7AA0 STR W8, [X19], #0x8
	0x034A7AA4 MOV X20, X0
	0x034A7AA8 LDR X0, [X25]
	0x034A7AAC ADRP X21, 0xC8A000
	0x034A7AB0 LDR W8, [X0 + 0xE0]
	0x034A7AB4 LDR X21, [X21 + 0xFD0]
	0x034A7AB8 CBNZ W8, 0x34A7AC0
	0x034A7ABC BL 0x1C16DFC
	0x034A7AC0 LDR X2, [X21]
	0x034A7AC4 MOV X0, X19
	0x034A7AC8 MOV X1, X20
	0x034A7ACC BL 0x26322B0
	0x034A7AD0 B 0x34A7B0C
	0x034A7AD4 STR W31, [X19]
	0x034A7AD8 LDR X8, [X31 + 0x8]
	0x034A7ADC STR X8, [X19 + 0x38]
	0x034A7AE0 LDR X0, [X25]
	0x034A7AE4 LDR W8, [X0 + 0xE0]
	0x034A7AE8 CBNZ W8, 0x34A7AF0
	0x034A7AEC BL 0x1C16DFC
	0x034A7AF0 ADRP X8, 0xC8A000
	0x034A7AF4 LDR X8, [X8 + 0xFC8]
	0x034A7AF8 ADD X0, X19, 0x8
	0x034A7AFC LDR X3, [X8]
	0x034A7B00 ADD X1, X31, 0x8
	0x034A7B04 MOV X2, X19
	0x034A7B08 BL 0x1FB71BC
	0x034A7B0C LDP X20, X19, [X31 + 0x40]
	0x034A7B10 LDP X22, X21, [X31 + 0x30]
	0x034A7B14 LDP X24, X23, [X31 + 0x20]
	0x034A7B18 LDP X30, X25, [X31 + 0x10]
	0x034A7B1C ADD X31, X31, 0x50
	0x034A7B20 RET
	0x034A7B24 ADRP X0, 0xC54000
	0x034A7B28 LDR X0, [X0 + 0x578]
	0x034A7B2C BL 0x1C16D08
	0x034A7B30 BL 0x1C16F10
	0x034A7B34 MOV X20, X0
	0x034A7B38 ADRP X0, 0xC88000
	0x034A7B3C LDR X0, [X0 + 0x2F0]
	0x034A7B40 BL 0x1C16D08
	0x034A7B44 MOV X1, X0
	0x034A7B48 MOV X0, X20
	0x034A7B4C MOV X2, X31
	0x034A7B50 BL 0x3314A68
	0x034A7B54 ADRP X0, 0xC8A000
	0x034A7B58 LDR X0, [X0 + 0xFE8]
	0x034A7B5C BL 0x1C16D08
	0x034A7B60 MOV X1, X0
	0x034A7B64 MOV X0, X20
	0x034A7B68 BL 0x1C16DEC
	0x034A7B6C BL 0x1C16F20
	0x034A7B70 BL 0x1C16F20
	0x034A7B74 BL 0x1C16F20
	0x034A7B78 BL 0x1C16F20
	0x034A7B7C BL 0x1C16F20
	0x034A7B80 BL 0x1C16F20
	0x034A7B84 B 0x34A7BCC
	0x034A7B88 B 0x34A7BCC
	0x034A7B8C B 0x34A7BCC
	0x034A7B90 B 0x34A7BCC
	0x034A7B94 B 0x34A7BCC
	0x034A7B98 B 0x34A7BCC
	0x034A7B9C B 0x34A7BCC
	0x034A7BA0 B 0x34A7BCC
	0x034A7BA4 B 0x34A7BCC
	0x034A7BA8 B 0x34A7BCC
	0x034A7BAC B 0x34A7BCC
	0x034A7BB0 B 0x34A7BCC
	0x034A7BB4 B 0x34A7BCC
	0x034A7BB8 B 0x34A7BCC
	0x034A7BBC B 0x34A7BCC
	0x034A7BC0 B 0x34A7BCC
	0x034A7BC4 B 0x34A7BCC
	0x034A7BC8 B 0x34A7BCC
	0x034A7BCC MOV X20, X0
	0x034A7BD0 CMP W1, 0x1
	0x034A7BD4 B.NE 0x34A7C70
	0x034A7BD8 MOV X0, X20
	0x034A7BDC BL 0x3EB1AD0
	0x034A7BE0 MOV X20, X0
	0x034A7BE4 ADRP X0, 0xC4C000
	0x034A7BE8 LDR X0, [X0 + 0x7D0]
	0x034A7BEC BL 0x1C16D08
	0x034A7BF0 LDR X8, [X20]
	0x034A7BF4 LDR X1, [X8]
	0x034A7BF8 BL 0x1C17270
	0x034A7BFC TBZ X0, 0x0, 0x34A7C48
	0x034A7C00 LDR X20, [X20]
	0x034A7C04 BL 0x3EB1AE0
	0x034A7C08 MOVN W8, 0x1
	0x034A7C0C STR W8, [X19], #0x8
	0x034A7C10 ADRP X0, 0xC8A000
	0x034A7C14 LDR X0, [X0 + 0xC88]
	0x034A7C18 BL 0x1C16D08
	0x034A7C1C LDR W8, [X0 + 0xE0]
	0x034A7C20 CBNZ W8, 0x34A7C28
	0x034A7C24 BL 0x1C16DFC
	0x034A7C28 ADRP X0, 0xC8A000
	0x034A7C2C LDR X0, [X0 + 0xFF0]
	0x034A7C30 BL 0x1C16D08
	0x034A7C34 MOV X2, X0
	0x034A7C38 MOV X0, X19
	0x034A7C3C MOV X1, X20
	0x034A7C40 BL 0x26324C8
	0x034A7C44 B 0x34A7B0C
	0x034A7C48 MOVZ W0, 0x8
	0x034A7C4C BL 0x3EB1AF0
	0x034A7C50 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF37000
	011 Move W8, [X20+2562]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {82}
	017 Move X0, 0xC8B000
	018 Move X0, [X0+3952]
	019 Call 0x1C17CF4
	020 Move X0, 0xC50000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC4E000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4E000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4E000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC88000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC50000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC50000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC50000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC56000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4F000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8B000
	051 Move X0, [X0+3960]
	052 Call 0x1C17CF4
	053 Move X0, 0xC89000
	054 Move X0, [X0+256]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8B000
	057 Move X0, [X0+3896]
	058 Call 0x1C17CF4
	059 Move X0, 0xC8B000
	060 Move X0, [X0+3912]
	061 Call 0x1C17CF4
	062 Move X0, 0xC56000
	063 Move X0, [X0+1824]
	064 Call 0x1C17CF4
	065 Move X0, 0xC88000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xC88000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xC8B000
	072 Move X0, [X0+3968]
	073 Call 0x1C17CF4
	074 Move X0, 0xC4D000
	075 Move X0, [X0+2440]
	076 Call 0x1C17CF4
	077 Move X0, 0xC76000
	078 Move X0, [X0+1224]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+2562], W8
	082 Move [X31+8], X31
	083 Move X25, 0xC50000
	084 Move W8, [X19]
	085 Move X25, [X25+640]
	086 Compare W8, 0
	087 JumpIfEqual {246}
	088 Move X20, [X19+32]
	089 Compare X20, 0
	090 JumpIfEqual {327}
	091 Move X8, [X19+40]
	092 Compare X8, 0
	093 JumpIfEqual {345}
	094 Move X8, [X19+48]
	095 Compare X8, 0
	096 JumpIfEqual {363}
	097 Move X23, 0xC4F000
	098 Move X23, [X23+2600]
	099 Move X8, 0xC8B000
	100 Move X0, [X23]
	101 Move X8, [X8+3960]
	102 Move X24, [X19+64]
	103 Move W9, [X0+224]
	104 Move X21, [X8]
	105 Compare W9, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X20
	109 Move X1, X31
	110 Call Uri.EscapeDataString, X0
	111 Compare X21, 0
	112 JumpIfEqual {381}
	113 Move X8, 0xC89000
	114 Move X8, [X8+256]
	115 Move X2, X0
	116 Move X1, [X8]
	117 Move X0, X21
	118 Move X3, X31
	119 Call String.Replace, X0, X1, X2
	120 Move X20, X0
	121 Move X0, [X19+40]
	122 Move X1, X31
	123 Call Uri.EscapeDataString, X0
	124 Compare X20, 0
	125 JumpIfEqual {382}
	126 Move X8, 0xC8B000
	127 Move X8, [X8+3896]
	128 Move X2, X0
	129 Move X1, [X8]
	130 Move X0, X20
	131 Move X3, X31
	132 Call String.Replace, X0, X1, X2
	133 Move X20, X0
	134 Move X0, [X19+48]
	135 Move X1, X31
	136 Call Uri.EscapeDataString, X0
	137 Compare X20, 0
	138 JumpIfEqual {383}
	139 Move X8, 0xC8B000
	140 Move X8, [X8+3912]
	141 Move X2, X0
	142 Move X1, [X8]
	143 Move X0, X20
	144 Move X3, X31
	145 Call String.Replace, X0, X1, X2
	146 Move X8, 0xC4D000
	147 Move X8, [X8+2440]
	148 Move X22, [X19+56]
	149 Move X20, X0
	150 Move X21, [X8]
	151 Compare X22, 0
	152 JumpIfEqual {172}
	153 Move X0, [X23]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X22
	159 Move X1, X31
	160 Call Uri.EscapeDataString, X0
	161 Move X8, 0xC8B000
	162 Move X8, [X8+3968]
	163 Move X9, 0xC56000
	164 Move X9, [X9+1824]
	165 Move X2, X0
	166 Move X1, [X8]
	167 Move X3, [X9]
	168 Move X0, X21
	169 Move X4, X31
	170 Call String.Concat, X0, X1, X2, X3
	171 Move X21, X0
	172 Compare X24, 0
	173 JumpIfEqual {384}
	174 Move X8, 0xC56000
	175 Move X8, [X8+928]
	176 Move X23, [X24+16]
	177 Move X0, [X8]
	178 Call 0x1C17F10
	179 Move X22, X0
	180 Move X1, X23
	181 Move X2, X31
	182 Call UriBuilder..ctor, X0, X1
	183 Compare X22, 0
	184 JumpIfEqual {385}
	185 Move X0, X22
	186 Move X1, X20
	187 Move X2, X31
	188 Call UriBuilder.set_Path, X0, X1
	189 Move X0, X22
	190 Move X1, X21
	191 Move X2, X31
	192 Call UriBuilder.set_Query, X0, X1
	193 Move X0, X22
	194 Move X1, X31
	195 Call UriBuilder.get_Uri, X0
	196 Move X8, 0xC76000
	197 Move X9, 0xC4E000
	198 Move X8, [X8+1224]
	199 Move X9, [X9+1744]
	200 Move X20, X0
	201 Move X21, [X8]
	202 Move X0, [X9]
	203 Call 0x1C17F10
	204 Move X8, 0xC4E000
	205 Move X8, [X8+1728]
	206 Move X22, X0
	207 Move X1, [X8]
	208 Call Dictionary`2<Object, Object>..ctor, X0
	209 Move X8, 0xC88000
	210 Move X8, [X8+2008]
	211 Move X1, [X19+72]
	212 Move X0, [X8]
	213 Move X2, X31
	214 Call String.Concat, X0, X1
	215 Compare X22, 0
	216 JumpIfEqual {386}
	217 Move X8, 0xC88000
	218 Move X8, [X8+2000]
	219 Move X9, 0xC4E000
	220 Move X9, [X9+2064]
	221 Move X2, X0
	222 Move X1, [X8]
	223 Move X3, [X9]
	224 Move X0, X22
	225 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	226 Move X23, [X24+32]
	227 Compare X23, 0
	228 JumpIfEqual {387}
	229 Move X10, 0xC88000
	230 Move X8, [X23]
	231 Move X10, [X10+1976]
	232 Move W24, [X24+24]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Move X1, [X10]
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move W2, 3
	244 Move X0, X23
	245 Call 0x1C5D788
	246 Move X8, [X19+80]
	247 Move TEMP, 0
	248 Not TEMP
	249 Move W9, TEMP
	250 Move [X31+8], X8
	251 Move [X19+80], X31
	252 Move [X19], W9
	253 Move W9, [X10]
	254 Add W9, W9, 3
	255 Add X8, X8, W9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X9, [X0+8]
	259 Move X0, X23
	260 Move X1, X21
	261 Move X2, X20
	262 Move X3, X22
	263 Move X4, X31
	264 Move W5, W24
	265 Move X6, X31
	266 Move X7, X31
	267 Move [X31], X9
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Compare X0, 0
	270 JumpIfEqual {388}
	271 Move X8, 0xC50000
	272 Move X8, [X8+504]
	273 Move X1, [X8]
	274 Call Task`1<Object>.GetAwaiter, X0
	275 Move X8, 0xC50000
	276 Move X8, [X8+496]
	277 Move [X31+8], X0
	278 Move X1, [X8]
	279 Add X0, X31, 8
	280 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfNotEqual {302}
	285 Move X8, 0xC50000
	286 Move X8, [X8+480]
	287 Add X0, X31, 8
	288 Move X1, [X8]
	289 Call TaskAwaiter`1<Object>.GetResult, X0
	290 Move TEMP, 1
	291 Not TEMP
	292 Move W8, TEMP
	293 Move [X19+8], W8
	294 Move X0, [X25]
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X0, X19
	300 Move X1, X31
	301 Call AsyncTaskMethodBuilder.SetResult, X0
	302 Move [X19], W31
	303 Move X8, [X31+8]
	304 Move [X19+80], X8
	305 Move X0, [X25]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X8, 0xC8B000
	311 Move X8, [X8+3952]
	312 Add X0, X19, 8
	313 Move X3, [X8]
	314 Add X1, X31, 8
	315 Move X2, X19
	316 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	317 Move X20, [X31+64]
	318 Move X19, [X31+72]
	319 Move X22, [X31+48]
	320 Move X21, [X31+56]
	321 Move X24, [X31+32]
	322 Move X23, [X31+40]
	323 Move X30, [X31+16]
	324 Move X25, [X31+24]
	325 Add X31, X31, 80
	326 Return 
	327 Move X0, 0xC55000
	328 Move X0, [X0+1400]
	329 Call 0x1C17D08
	330 Call 0x1C17F10
	331 Move X20, X0
	332 Move X0, 0xC89000
	333 Move X0, [X0+280]
	334 Call 0x1C17D08
	335 Move X1, X0
	336 Move X0, X20
	337 Move X2, X31
	338 Call ArgumentException..ctor, X0, X1
	339 Move X0, 0xC8B000
	340 Move X0, [X0+3976]
	341 Call 0x1C17D08
	342 Move X1, X0
	343 Move X0, X20
	344 Call 0x1C17DEC
	345 Move X0, 0xC55000
	346 Move X0, [X0+1400]
	347 Call 0x1C17D08
	348 Call 0x1C17F10
	349 Move X20, X0
	350 Move X0, 0xC8B000
	351 Move X0, [X0+3936]
	352 Call 0x1C17D08
	353 Move X1, X0
	354 Move X0, X20
	355 Move X2, X31
	356 Call ArgumentException..ctor, X0, X1
	357 Move X0, 0xC8B000
	358 Move X0, [X0+3976]
	359 Call 0x1C17D08
	360 Move X1, X0
	361 Move X0, X20
	362 Call 0x1C17DEC
	363 Move X0, 0xC55000
	364 Move X0, [X0+1400]
	365 Call 0x1C17D08
	366 Call 0x1C17F10
	367 Move X20, X0
	368 Move X0, 0xC89000
	369 Move X0, [X0+296]
	370 Call 0x1C17D08
	371 Move X1, X0
	372 Move X0, X20
	373 Move X2, X31
	374 Call ArgumentException..ctor, X0, X1
	375 Move X0, 0xC8B000
	376 Move X0, [X0+3976]
	377 Call 0x1C17D08
	378 Move X1, X0
	379 Move X0, X20
	380 Call 0x1C17DEC
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Move X20, X0
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, X20
	392 Call 0x3EB2AD0
	393 Move X20, X0
	394 Move X0, 0xC4D000
	395 Move X0, [X0+2000]
	396 Call 0x1C17D08
	397 Move X8, [X20]
	398 Move X1, [X8]
	399 Call 0x1C18270
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {421}
	404 Move X20, [X20]
	405 Call 0x3EB2AE0
	406 Move TEMP, 1
	407 Not TEMP
	408 Move W8, TEMP
	409 Move [X19+8], W8
	410 Move X0, 0xC50000
	411 Move X0, [X0+640]
	412 Call 0x1C17D08
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 Move X0, X19
	418 Move X1, X20
	419 Move X2, X31
	420 Call AsyncTaskMethodBuilder.SetException, X0, X1
	421 Move W0, 8
	422 Call 0x3EB2AF0
	423 Move X8, [X20]
	424 Move [X0], X8
	425 Move X1, 0xA0E000
	426 Add X1, X1, 3672
	427 Move X2, X31
	428 Call 0x3EB2B00
	429 Move X20, X0
	430 Call 0x3EB2AE0
	431 Move X0, X20
	432 Call 0x1D2D690
	433 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A7C54 STR X8, [X0]
	0x034A7C58 ADRP X1, 0xA0D000
	0x034A7C5C ADD X1, X1, 0xE58
	0x034A7C60 MOV X2, X31
	0x034A7C64 BL 0x3EB1B00
	0x034A7C68 MOV X20, X0
	0x034A7C6C BL 0x3EB1AE0
	0x034A7C70 MOV X0, X20
	0x034A7C74 BL 0x1D2C690
	0x034A7C78 BL 0x1990590
	0x034A7C7C STR X30, [X31 - 0x30]!
	0x034A7C80 STP X22, X21, [X31 + 0x10]
	0x034A7C84 STP X20, X19, [X31 + 0x20]
	0x034A7C88 ADRP X22, 0xF36000
	0x034A7C8C ADRP X21, 0xC8A000
	0x034A7C90 LDRB W8, [X22 + 0xA09]
	0x034A7C94 LDR X21, [X21 + 0xC88]
	0x034A7C98 MOV X19, X1
	0x034A7C9C MOV X20, X0
	0x034A7CA0 TBNZ X8, 0x0, 0x34A7CC4
	0x034A7CA4 ADRP X0, 0xC8A000
	0x034A7CA8 LDR X0, [X0 + 0xFF8]
	0x034A7CAC BL 0x1C16CF4
	0x034A7CB0 ADRP X0, 0xC8A000
	0x034A7CB4 LDR X0, [X0 + 0xC88]
	0x034A7CB8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF37000
	007 Move X22, 0xC50000
	008 Move W8, [X21+2563]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC50000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2563], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

