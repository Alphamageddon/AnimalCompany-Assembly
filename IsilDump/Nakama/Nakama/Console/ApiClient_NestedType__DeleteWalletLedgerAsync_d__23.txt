Type: Nakama.Console.ApiClient/<DeleteWalletLedgerAsync>d__23

Method: System.Void MoveNext()

Disassembly:
	0x034A8150 B 0x34A8180
	0x034A8154 B 0x34A8180
	0x034A8158 B 0x34A8180
	0x034A815C B 0x34A8180
	0x034A8160 B 0x34A8180
	0x034A8164 B 0x34A8180
	0x034A8168 B 0x34A8180
	0x034A816C B 0x34A8180
	0x034A8170 B 0x34A8180
	0x034A8174 B 0x34A8180
	0x034A8178 B 0x34A8180
	0x034A817C B 0x34A8180
	0x034A8180 MOV X20, X0
	0x034A8184 CMP W1, 0x1
	0x034A8188 B.NE 0x34A8224
	0x034A818C MOV X0, X20
	0x034A8190 BL 0x3EB1AD0
	0x034A8194 MOV X20, X0
	0x034A8198 ADRP X0, 0xC4B000
	0x034A819C LDR X0, [X0 + 0x7D0]
	0x034A81A0 BL 0x1C16D08
	0x034A81A4 LDR X8, [X20]
	0x034A81A8 LDR X1, [X8]
	0x034A81AC BL 0x1C17270
	0x034A81B0 TBZ X0, 0x0, 0x34A81FC
	0x034A81B4 LDR X20, [X20]
	0x034A81B8 BL 0x3EB1AE0
	0x034A81BC MOVN W8, 0x1
	0x034A81C0 STR W8, [X19], #0x8
	0x034A81C4 ADRP X0, 0xC89000
	0x034A81C8 LDR X0, [X0 + 0xC58]
	0x034A81CC BL 0x1C16D08
	0x034A81D0 LDR W8, [X0 + 0xE0]
	0x034A81D4 CBNZ W8, 0x34A81DC
	0x034A81D8 BL 0x1C16DFC
	0x034A81DC ADRP X0, 0xC8A000
	0x034A81E0 LDR X0, [X0 + 0x20]
	0x034A81E4 BL 0x1C16D08
	0x034A81E8 MOV X2, X0
	0x034A81EC MOV X0, X19
	0x034A81F0 MOV X1, X20
	0x034A81F4 BL 0x26324C8
	0x034A81F8 B 0x34A80C0
	0x034A81FC MOVZ W0, 0x8
	0x034A8200 BL 0x3EB1AF0
	0x034A8204 LDR X8, [X20]
	0x034A8208 STR X8, [X0]
	0x034A820C ADRP X1, 0xA0C000
	0x034A8210 ADD X1, X1, 0xE58
	0x034A8214 MOV X2, X31
	0x034A8218 BL 0x3EB1B00
	0x034A821C MOV X20, X0
	0x034A8220 BL 0x3EB1AE0
	0x034A8224 MOV X0, X20
	0x034A8228 BL 0x1D2C690
	0x034A822C BL 0x1990590
	0x034A8230 STR X30, [X31 - 0x30]!
	0x034A8234 STP X22, X21, [X31 + 0x10]
	0x034A8238 STP X20, X19, [X31 + 0x20]
	0x034A823C ADRP X22, 0xF35000
	0x034A8240 ADRP X21, 0xC89000
	0x034A8244 LDRB W8, [X22 + 0xA0B]
	0x034A8248 LDR X21, [X21 + 0xC58]
	0x034A824C MOV X19, X1
	0x034A8250 MOV X20, X0
	0x034A8254 TBNZ X8, 0x0, 0x34A8278
	0x034A8258 ADRP X0, 0xC8A000
	0x034A825C LDR X0, [X0 + 0x28]
	0x034A8260 BL 0x1C16CF4
	0x034A8264 ADRP X0, 0xC89000
	0x034A8268 LDR X0, [X0 + 0xC58]
	0x034A826C BL 0x1C16CF4
	0x034A8270 MOVZ W8, 0x1
	0x034A8274 STRB W8, [X22 + 0xA0B]
	0x034A8278 LDR X0, [X21]
	0x034A827C ADRP X21, 0xC8A000
	0x034A8280 LDR W8, [X0 + 0xE0]
	0x034A8284 LDR X21, [X21 + 0x28]
	0x034A8288 CBNZ W8, 0x34A8290
	0x034A828C BL 0x1C16DFC
	0x034A8290 LDR X2, [X21]
	0x034A8294 ADD X0, X20, 0x8
	0x034A8298 MOV X1, X19
	0x034A829C LDP X20, X19, [X31 + 0x20]
	0x034A82A0 LDP X22, X21, [X31 + 0x10]
	0x034A82A4 LDR X30, [X31], #0x30
	0x034A82A8 B 0x2632228
	0x034A82AC SUB X31, X31, 0x50
	0x034A82B0 STP X30, X25, [X31 + 0x10]
	0x034A82B4 STP X24, X23, [X31 + 0x20]
	0x034A82B8 STP X22, X21, [X31 + 0x30]
	0x034A82BC STP X20, X19, [X31 + 0x40]
	0x034A82C0 ADRP X20, 0xF35000
	0x034A82C4 LDRB W8, [X20 + 0xA0C]
	0x034A82C8 MOV X19, X0
	0x034A82CC TBNZ X8, 0x0, 0x34A83A4
	0x034A82D0 ADRP X0, 0xC8A000
	0x034A82D4 LDR X0, [X0 + 0x30]
	0x034A82D8 BL 0x1C16CF4
	0x034A82DC ADRP X0, 0xC8A000
	0x034A82E0 LDR X0, [X0 + 0x38]
	0x034A82E4 BL 0x1C16CF4
	0x034A82E8 ADRP X0, 0xC89000
	0x034A82EC LDR X0, [X0 + 0xD88]
	0x034A82F0 BL 0x1C16CF4
	0x034A82F4 ADRP X0, 0xC4C000
	0x034A82F8 LDR X0, [X0 + 0x810]
	0x034A82FC BL 0x1C16CF4
	0x034A8300 ADRP X0, 0xC4C000
	0x034A8304 LDR X0, [X0 + 0x6C0]
	0x034A8308 BL 0x1C16CF4
	0x034A830C ADRP X0, 0xC4C000
	0x034A8310 LDR X0, [X0 + 0x6D0]
	0x034A8314 BL 0x1C16CF4
	0x034A8318 ADRP X0, 0xC86000
	0x034A831C LDR X0, [X0 + 0x7B8]
	0x034A8320 BL 0x1C16CF4
	0x034A8324 ADRP X0, 0xC8A000
	0x034A8328 LDR X0, [X0 + 0x40]
	0x034A832C BL 0x1C16CF4
	0x034A8330 ADRP X0, 0xC4E000
	0x034A8334 LDR X0, [X0 + 0x1E0]
	0x034A8338 BL 0x1C16CF4
	0x034A833C ADRP X0, 0xC4E000
	0x034A8340 LDR X0, [X0 + 0x1F0]
	0x034A8344 BL 0x1C16CF4
	0x034A8348 ADRP X0, 0xC4E000
	0x034A834C LDR X0, [X0 + 0x1F8]
	0x034A8350 BL 0x1C16CF4
	0x034A8354 ADRP X0, 0xC54000
	0x034A8358 LDR X0, [X0 + 0x3A0]
	0x034A835C BL 0x1C16CF4
	0x034A8360 ADRP X0, 0xC74000
	0x034A8364 LDR X0, [X0 + 0x4D0]
	0x034A8368 BL 0x1C16CF4
	0x034A836C ADRP X0, 0xC8A000
	0x034A8370 LDR X0, [X0 + 0x48]
	0x034A8374 BL 0x1C16CF4
	0x034A8378 ADRP X0, 0xC86000
	0x034A837C LDR X0, [X0 + 0x7D0]
	0x034A8380 BL 0x1C16CF4
	0x034A8384 ADRP X0, 0xC86000
	0x034A8388 LDR X0, [X0 + 0x7D8]
	0x034A838C BL 0x1C16CF4
	0x034A8390 ADRP X0, 0xC4B000
	0x034A8394 LDR X0, [X0 + 0x988]
	0x034A8398 BL 0x1C16CF4
	0x034A839C MOVZ W8, 0x1
	0x034A83A0 STRB W8, [X20 + 0xA0C]
	0x034A83A4 STR X31, [X31 + 0x8]
	0x034A83A8 ADRP X25, 0xC89000
	0x034A83AC LDR W8, [X19]
	0x034A83B0 LDR X25, [X25 + 0xD88]
	0x034A83B4 CBZ W8, 0x34A84F4
	0x034A83B8 LDR X24, [X19 + 0x20]
	0x034A83BC CBZ X24, 0x34A8624
	0x034A83C0 ADRP X8, 0xC8A000
	0x034A83C4 ADRP X9, 0xC4B000
	0x034A83C8 ADRP X10, 0xC54000
	0x034A83CC LDR X8, [X8 + 0x48]
	0x034A83D0 LDR X9, [X9 + 0x988]
	0x034A83D4 LDR X10, [X10 + 0x3A0]
	0x034A83D8 LDR X23, [X24 + 0x10]
	0x034A83DC LDR X22, [X8]
	0x034A83E0 LDR X21, [X9]
	0x034A83E4 LDR X0, [X10]
	0x034A83E8 BL 0x1C16F10
	0x034A83EC MOV X20, X0
	0x034A83F0 MOV X1, X23
	0x034A83F4 MOV X2, X31
	0x034A83F8 BL 0x36281F8
	0x034A83FC CBZ X20, 0x34A8628
	0x034A8400 MOV X0, X20
	0x034A8404 MOV X1, X22
	0x034A8408 MOV X2, X31
	0x034A840C BL 0x36288CC
	0x034A8410 MOV X0, X20
	0x034A8414 MOV X1, X21
	0x034A8418 MOV X2, X31
	0x034A841C BL 0x3628980
	0x034A8420 MOV X0, X20
	0x034A8424 MOV X1, X31
	0x034A8428 BL 0x3628A38
	0x034A842C ADRP X8, 0xC74000
	0x034A8430 ADRP X9, 0xC4C000
	0x034A8434 LDR X8, [X8 + 0x4D0]
	0x034A8438 LDR X9, [X9 + 0x6D0]
	0x034A843C MOV X20, X0
	0x034A8440 LDR X21, [X8]
	0x034A8444 LDR X0, [X9]
	0x034A8448 BL 0x1C16F10
	0x034A844C ADRP X8, 0xC4C000
	0x034A8450 LDR X8, [X8 + 0x6C0]
	0x034A8454 MOV X22, X0
	0x034A8458 LDR X1, [X8]
	0x034A845C BL 0x2AA4804
	0x034A8460 ADRP X8, 0xC86000
	0x034A8464 LDR X8, [X8 + 0x7D8]
	0x034A8468 LDR X1, [X19 + 0x28]
	0x034A846C LDR X0, [X8]
	0x034A8470 MOV X2, X31
	0x034A8474 BL 0x321B938
	0x034A8478 CBZ X22, 0x34A862C
	0x034A847C ADRP X8, 0xC86000
	0x034A8480 LDR X8, [X8 + 0x7D0]
	0x034A8484 ADRP X9, 0xC4C000
	0x034A8488 LDR X9, [X9 + 0x810]
	0x034A848C MOV X2, X0
	0x034A8490 LDR X1, [X8]
	0x034A8494 LDR X3, [X9]
	0x034A8498 MOV X0, X22
	0x034A849C BL 0x2AA5098
	0x034A84A0 LDR X23, [X24 + 0x20]
	0x034A84A4 CBZ X23, 0x34A8630
	0x034A84A8 ADRP X10, 0xC86000
	0x034A84AC LDR X8, [X23]
	0x034A84B0 LDR X10, [X10 + 0x7B8]
	0x034A84B4 LDR W24, [X24 + 0x18]
	0x034A84B8 LDRH W9, [X8 + 0x12E]
	0x034A84BC LDR X1, [X10]
	0x034A84C0 CBZ X9, 0x34A84E4
	0x034A84C4 LDR X10, [X8 + 0xB0]
	0x034A84C8 ADD X10, X10, 0x8
	0x034A84CC LDUR X11, [X10 - 0x8]
	0x034A84D0 CMP X11, X1
	0x034A84D4 B.EQ 0x34A850C
	0x034A84D8 SUBS X9, X9, 0x1
	0x034A84DC ADD X10, X10, 0x10
	0x034A84E0 B.NE 0x34A84CC
	0x034A84E4 MOVZ W2, 0x3
	0x034A84E8 MOV X0, X23
	0x034A84EC BL 0x1C5C788
	0x034A84F0 B 0x34A851C
	0x034A84F4 LDR X8, [X19 + 0x30]
	0x034A84F8 MOVN W9, 0x0
	0x034A84FC STR X8, [X31 + 0x8]
	0x034A8500 STR X31, [X19 + 0x30]
	0x034A8504 STR W9, [X19]
	0x034A8508 B 0x34A8578
	0x034A850C LDR W9, [X10]
	0x034A8510 ADD W9, W9, 0x3
	0x034A8514 ADD X8, X8, W9, 0x4, SXTW
	0x034A8518 ADD X0, X8, 0x138
	0x034A851C LDP X8, X9, [X0]
	0x034A8520 MOV X0, X23
	0x034A8524 MOV X1, X21
	0x034A8528 MOV X2, X20
	0x034A852C MOV X3, X22
	0x034A8530 MOV X4, X31
	0x034A8534 MOV W5, W24
	0x034A8538 MOV X6, X31
	0x034A853C MOV X7, X31
	0x034A8540 STR X9, [X31]
	0x034A8544 BLR X8
	0x034A8548 CBZ X0, 0x34A8634
	0x034A854C ADRP X8, 0xC4E000
	0x034A8550 LDR X8, [X8 + 0x1F8]
	0x034A8554 LDR X1, [X8]
	0x034A8558 BL 0x269F5D0
	0x034A855C ADRP X8, 0xC4E000
	0x034A8560 LDR X8, [X8 + 0x1F0]
	0x034A8564 STR X0, [X31 + 0x8]
	0x034A8568 LDR X1, [X8]
	0x034A856C ADD X0, X31, 0x8
	0x034A8570 BL 0x2677430
	0x034A8574 TBZ X0, 0x0, 0x34A85D4
	0x034A8578 ADRP X8, 0xC4E000
	0x034A857C LDR X8, [X8 + 0x1E0]
	0x034A8580 ADD X0, X31, 0x8
	0x034A8584 LDR X1, [X8]
	0x034A8588 BL 0x2677474
	0x034A858C ADRP X8, 0xC8A000
	0x034A8590 LDR X8, [X8 + 0x40]
	0x034A8594 LDR X1, [X8]
	0x034A8598 BL 0x220E6DC
	0x034A859C MOVN W8, 0x1
	0x034A85A0 STR W8, [X19], #0x8
	0x034A85A4 MOV X20, X0
	0x034A85A8 LDR X0, [X25]
	0x034A85AC ADRP X21, 0xC8A000
	0x034A85B0 LDR W8, [X0 + 0xE0]
	0x034A85B4 LDR X21, [X21 + 0x38]
	0x034A85B8 CBNZ W8, 0x34A85C0
	0x034A85BC BL 0x1C16DFC
	0x034A85C0 LDR X2, [X21]
	0x034A85C4 MOV X0, X19
	0x034A85C8 MOV X1, X20
	0x034A85CC BL 0x26322B0
	0x034A85D0 B 0x34A860C
	0x034A85D4 STR W31, [X19]
	0x034A85D8 LDR X8, [X31 + 0x8]
	0x034A85DC STR X8, [X19 + 0x30]
	0x034A85E0 LDR X0, [X25]
	0x034A85E4 LDR W8, [X0 + 0xE0]
	0x034A85E8 CBNZ W8, 0x34A85F0
	0x034A85EC BL 0x1C16DFC
	0x034A85F0 ADRP X8, 0xC8A000
	0x034A85F4 LDR X8, [X8 + 0x30]
	0x034A85F8 ADD X0, X19, 0x8
	0x034A85FC LDR X3, [X8]
	0x034A8600 ADD X1, X31, 0x8
	0x034A8604 MOV X2, X19
	0x034A8608 BL 0x1FB75E4
	0x034A860C LDP X20, X19, [X31 + 0x40]
	0x034A8610 LDP X22, X21, [X31 + 0x30]
	0x034A8614 LDP X24, X23, [X31 + 0x20]
	0x034A8618 LDP X30, X25, [X31 + 0x10]
	0x034A861C ADD X31, X31, 0x50
	0x034A8620 RET
	0x034A8624 BL 0x1C16F20
	0x034A8628 BL 0x1C16F20
	0x034A862C BL 0x1C16F20
	0x034A8630 BL 0x1C16F20
	0x034A8634 BL 0x1C16F20
	0x034A8638 B 0x34A8670
	0x034A863C B 0x34A8670
	0x034A8640 B 0x34A8670
	0x034A8644 B 0x34A8670
	0x034A8648 B 0x34A8670
	0x034A864C B 0x34A8670
	0x034A8650 B 0x34A8670
	0x034A8654 B 0x34A8670
	0x034A8658 B 0x34A8670
	0x034A865C B 0x34A8670
	0x034A8660 B 0x34A8670
	0x034A8664 B 0x34A8670
	0x034A8668 B 0x34A8670
	0x034A866C B 0x34A8670
	0x034A8670 MOV X20, X0
	0x034A8674 CMP W1, 0x1
	0x034A8678 B.NE 0x34A8714
	0x034A867C MOV X0, X20
	0x034A8680 BL 0x3EB1AD0
	0x034A8684 MOV X20, X0
	0x034A8688 ADRP X0, 0xC4B000
	0x034A868C LDR X0, [X0 + 0x7D0]
	0x034A8690 BL 0x1C16D08
	0x034A8694 LDR X8, [X20]
	0x034A8698 LDR X1, [X8]
	0x034A869C BL 0x1C17270
	0x034A86A0 TBZ X0, 0x0, 0x34A86EC
	0x034A86A4 LDR X20, [X20]
	0x034A86A8 BL 0x3EB1AE0
	0x034A86AC MOVN W8, 0x1
	0x034A86B0 STR W8, [X19], #0x8
	0x034A86B4 ADRP X0, 0xC89000
	0x034A86B8 LDR X0, [X0 + 0xD88]
	0x034A86BC BL 0x1C16D08
	0x034A86C0 LDR W8, [X0 + 0xE0]
	0x034A86C4 CBNZ W8, 0x34A86CC
	0x034A86C8 BL 0x1C16DFC
	0x034A86CC ADRP X0, 0xC8A000
	0x034A86D0 LDR X0, [X0 + 0x50]
	0x034A86D4 BL 0x1C16D08
	0x034A86D8 MOV X2, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF36000
	011 Move W8, [X20+2566]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {73}
	017 Move X0, 0xC8A000
	018 Move X0, [X0+4000]
	019 Call 0x1C17CF4
	020 Move X0, 0xC4F000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC4D000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4D000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4D000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC87000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC4F000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC4F000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4F000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC55000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4E000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8A000
	051 Move X0, [X0+4008]
	052 Call 0x1C17CF4
	053 Move X0, 0xC87000
	054 Move X0, [X0+2000]
	055 Call 0x1C17CF4
	056 Move X0, 0xC88000
	057 Move X0, [X0+744]
	058 Call 0x1C17CF4
	059 Move X0, 0xC8A000
	060 Move X0, [X0+4016]
	061 Call 0x1C17CF4
	062 Move X0, 0xC87000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC4C000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move X0, 0xC75000
	069 Move X0, [X0+1224]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+2566], W8
	073 Move [X31+8], X31
	074 Move X25, 0xC4F000
	075 Move W8, [X19]
	076 Move X25, [X25+640]
	077 Compare W8, 0
	078 JumpIfEqual {199}
	079 Move X21, [X19+32]
	080 Compare X21, 0
	081 JumpIfEqual {280}
	082 Move X8, [X19+40]
	083 Compare X8, 0
	084 JumpIfEqual {298}
	085 Move X8, 0xC4E000
	086 Move X8, [X8+2600]
	087 Move X0, [X8]
	088 Move X8, 0xC8A000
	089 Move X8, [X8+4016]
	090 Move X24, [X19+48]
	091 Move W9, [X0+224]
	092 Move X20, [X8]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Uri.EscapeDataString, X0
	099 Compare X20, 0
	100 JumpIfEqual {316}
	101 Move X8, 0xC88000
	102 Move X8, [X8+744]
	103 Move X2, X0
	104 Move X1, [X8]
	105 Move X0, X20
	106 Move X3, X31
	107 Call String.Replace, X0, X1, X2
	108 Move X20, X0
	109 Move X0, [X19+40]
	110 Move X1, X31
	111 Call Uri.EscapeDataString, X0
	112 Compare X20, 0
	113 JumpIfEqual {317}
	114 Move X8, 0xC8A000
	115 Move X8, [X8+4008]
	116 Move X2, X0
	117 Move X1, [X8]
	118 Move X0, X20
	119 Move X3, X31
	120 Call String.Replace, X0, X1, X2
	121 Compare X24, 0
	122 JumpIfEqual {318}
	123 Move X8, 0xC4C000
	124 Move X9, 0xC55000
	125 Move X8, [X8+2440]
	126 Move X9, [X9+928]
	127 Move X22, X0
	128 Move X23, [X24+16]
	129 Move X21, [X8]
	130 Move X0, [X9]
	131 Call 0x1C17F10
	132 Move X20, X0
	133 Move X1, X23
	134 Move X2, X31
	135 Call UriBuilder..ctor, X0, X1
	136 Compare X20, 0
	137 JumpIfEqual {319}
	138 Move X0, X20
	139 Move X1, X22
	140 Move X2, X31
	141 Call UriBuilder.set_Path, X0, X1
	142 Move X0, X20
	143 Move X1, X21
	144 Move X2, X31
	145 Call UriBuilder.set_Query, X0, X1
	146 Move X0, X20
	147 Move X1, X31
	148 Call UriBuilder.get_Uri, X0
	149 Move X8, 0xC75000
	150 Move X9, 0xC4D000
	151 Move X8, [X8+1224]
	152 Move X9, [X9+1744]
	153 Move X20, X0
	154 Move X21, [X8]
	155 Move X0, [X9]
	156 Call 0x1C17F10
	157 Move X8, 0xC4D000
	158 Move X8, [X8+1728]
	159 Move X22, X0
	160 Move X1, [X8]
	161 Call Dictionary`2<Object, Object>..ctor, X0
	162 Move X8, 0xC87000
	163 Move X8, [X8+2008]
	164 Move X1, [X19+56]
	165 Move X0, [X8]
	166 Move X2, X31
	167 Call String.Concat, X0, X1
	168 Compare X22, 0
	169 JumpIfEqual {320}
	170 Move X8, 0xC87000
	171 Move X8, [X8+2000]
	172 Move X9, 0xC4D000
	173 Move X9, [X9+2064]
	174 Move X2, X0
	175 Move X1, [X8]
	176 Move X3, [X9]
	177 Move X0, X22
	178 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	179 Move X23, [X24+32]
	180 Compare X23, 0
	181 JumpIfEqual {321}
	182 Move X10, 0xC87000
	183 Move X8, [X23]
	184 Move X10, [X10+1976]
	185 Move W24, [X24+24]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X1, [X10]
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 3
	197 Move X0, X23
	198 Call 0x1C5D788
	199 Move X8, [X19+64]
	200 Move TEMP, 0
	201 Not TEMP
	202 Move W9, TEMP
	203 Move [X31+8], X8
	204 Move [X19+64], X31
	205 Move [X19], W9
	206 Move W9, [X10]
	207 Add W9, W9, 3
	208 Add X8, X8, W9
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X9, [X0+8]
	212 Move X0, X23
	213 Move X1, X21
	214 Move X2, X20
	215 Move X3, X22
	216 Move X4, X31
	217 Move W5, W24
	218 Move X6, X31
	219 Move X7, X31
	220 Move [X31], X9
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X0, 0
	223 JumpIfEqual {322}
	224 Move X8, 0xC4F000
	225 Move X8, [X8+504]
	226 Move X1, [X8]
	227 Call Task`1<Object>.GetAwaiter, X0
	228 Move X8, 0xC4F000
	229 Move X8, [X8+496]
	230 Move [X31+8], X0
	231 Move X1, [X8]
	232 Add X0, X31, 8
	233 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {255}
	238 Move X8, 0xC4F000
	239 Move X8, [X8+480]
	240 Add X0, X31, 8
	241 Move X1, [X8]
	242 Call TaskAwaiter`1<Object>.GetResult, X0
	243 Move TEMP, 1
	244 Not TEMP
	245 Move W8, TEMP
	246 Move [X19+8], W8
	247 Move X0, [X25]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X0, X19
	253 Move X1, X31
	254 Call AsyncTaskMethodBuilder.SetResult, X0
	255 Move [X19], W31
	256 Move X8, [X31+8]
	257 Move [X19+64], X8
	258 Move X0, [X25]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X8, 0xC8A000
	264 Move X8, [X8+4000]
	265 Add X0, X19, 8
	266 Move X3, [X8]
	267 Add X1, X31, 8
	268 Move X2, X19
	269 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	270 Move X20, [X31+64]
	271 Move X19, [X31+72]
	272 Move X22, [X31+48]
	273 Move X21, [X31+56]
	274 Move X24, [X31+32]
	275 Move X23, [X31+40]
	276 Move X30, [X31+16]
	277 Move X25, [X31+24]
	278 Add X31, X31, 80
	279 Return 
	280 Move X0, 0xC54000
	281 Move X0, [X0+1400]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X20, X0
	285 Move X0, 0xC88000
	286 Move X0, [X0+752]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call ArgumentException..ctor, X0, X1
	292 Move X0, 0xC8A000
	293 Move X0, [X0+4024]
	294 Call 0x1C17D08
	295 Move X1, X0
	296 Move X0, X20
	297 Call 0x1C17DEC
	298 Move X0, 0xC54000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xC8A000
	304 Move X0, [X0+4032]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xC8A000
	311 Move X0, [X0+4024]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Move X20, X0
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X0, X20
	326 Call 0x3EB2AD0
	327 Move X20, X0
	328 Move X0, 0xC4C000
	329 Move X0, [X0+2000]
	330 Call 0x1C17D08
	331 Move X8, [X20]
	332 Move X1, [X8]
	333 Call 0x1C18270
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {355}
	338 Move X20, [X20]
	339 Call 0x3EB2AE0
	340 Move TEMP, 1
	341 Not TEMP
	342 Move W8, TEMP
	343 Move [X19+8], W8
	344 Move X0, 0xC4F000
	345 Move X0, [X0+640]
	346 Call 0x1C17D08
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X0, X19
	352 Move X1, X20
	353 Move X2, X31
	354 Call AsyncTaskMethodBuilder.SetException, X0, X1
	355 Move W0, 8
	356 Call 0x3EB2AF0
	357 Move X8, [X20]
	358 Move [X0], X8
	359 Move X1, 0xA0D000
	360 Add X1, X1, 3672
	361 Move X2, X31
	362 Call 0x3EB2B00
	363 Move X20, X0
	364 Call 0x3EB2AE0
	365 Move X0, X20
	366 Call 0x1D2D690
	367 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A86DC MOV X0, X19
	0x034A86E0 MOV X1, X20
	0x034A86E4 BL 0x26324C8
	0x034A86E8 B 0x34A860C
	0x034A86EC MOVZ W0, 0x8
	0x034A86F0 BL 0x3EB1AF0
	0x034A86F4 LDR X8, [X20]
	0x034A86F8 STR X8, [X0]
	0x034A86FC ADRP X1, 0xA0C000
	0x034A8700 ADD X1, X1, 0xE58
	0x034A8704 MOV X2, X31
	0x034A8708 BL 0x3EB1B00
	0x034A870C MOV X20, X0
	0x034A8710 BL 0x3EB1AE0
	0x034A8714 MOV X0, X20
	0x034A8718 BL 0x1D2C690
	0x034A871C BL 0x1990590
	0x034A8720 STR X30, [X31 - 0x30]!
	0x034A8724 STP X22, X21, [X31 + 0x10]
	0x034A8728 STP X20, X19, [X31 + 0x20]
	0x034A872C ADRP X22, 0xF35000
	0x034A8730 ADRP X21, 0xC89000
	0x034A8734 LDRB W8, [X22 + 0xA0D]
	0x034A8738 LDR X21, [X21 + 0xD88]
	0x034A873C MOV X19, X1
	0x034A8740 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF36000
	007 Move X22, 0xC4F000
	008 Move W8, [X21+2567]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC4F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2567], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

