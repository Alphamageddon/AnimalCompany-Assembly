Type: Nakama.Console.ApiClient/<GetAccountAsync>d__5

Method: System.Void MoveNext()

Disassembly:
	0x034A8CF8 TBNZ X8, 0x0, 0x34A8D1C
	0x034A8CFC ADRP X0, 0xC8A000
	0x034A8D00 LDR X0, [X0 + 0x90]
	0x034A8D04 BL 0x1C16CF4
	0x034A8D08 ADRP X0, 0xC89000
	0x034A8D0C LDR X0, [X0 + 0xCA8]
	0x034A8D10 BL 0x1C16CF4
	0x034A8D14 MOVZ W8, 0x1
	0x034A8D18 STRB W8, [X22 + 0xA0F]
	0x034A8D1C LDR X0, [X21]
	0x034A8D20 ADRP X21, 0xC8A000
	0x034A8D24 LDR W8, [X0 + 0xE0]
	0x034A8D28 LDR X21, [X21 + 0x90]
	0x034A8D2C CBNZ W8, 0x34A8D34
	0x034A8D30 BL 0x1C16DFC
	0x034A8D34 LDR X2, [X21]
	0x034A8D38 ADD X0, X20, 0x8
	0x034A8D3C MOV X1, X19
	0x034A8D40 LDP X20, X19, [X31 + 0x20]
	0x034A8D44 LDP X22, X21, [X31 + 0x10]
	0x034A8D48 LDR X30, [X31], #0x30
	0x034A8D4C B 0x2632228
	0x034A8D50 SUB X31, X31, 0x50
	0x034A8D54 STP X30, X25, [X31 + 0x10]
	0x034A8D58 STP X24, X23, [X31 + 0x20]
	0x034A8D5C STP X22, X21, [X31 + 0x30]
	0x034A8D60 STP X20, X19, [X31 + 0x40]
	0x034A8D64 ADRP X20, 0xF35000
	0x034A8D68 LDRB W8, [X20 + 0xA10]
	0x034A8D6C MOV X19, X0
	0x034A8D70 TBNZ X8, 0x0, 0x34A8E60
	0x034A8D74 ADRP X0, 0xC8A000
	0x034A8D78 LDR X0, [X0 + 0x98]
	0x034A8D7C BL 0x1C16CF4
	0x034A8D80 ADRP X0, 0xC8A000
	0x034A8D84 LDR X0, [X0 + 0xA0]
	0x034A8D88 BL 0x1C16CF4
	0x034A8D8C ADRP X0, 0xC89000
	0x034A8D90 LDR X0, [X0 + 0xCD0]
	0x034A8D94 BL 0x1C16CF4
	0x034A8D98 ADRP X0, 0xC4C000
	0x034A8D9C LDR X0, [X0 + 0x810]
	0x034A8DA0 BL 0x1C16CF4
	0x034A8DA4 ADRP X0, 0xC4C000
	0x034A8DA8 LDR X0, [X0 + 0x6C0]
	0x034A8DAC BL 0x1C16CF4
	0x034A8DB0 ADRP X0, 0xC4C000
	0x034A8DB4 LDR X0, [X0 + 0x6D0]
	0x034A8DB8 BL 0x1C16CF4
	0x034A8DBC ADRP X0, 0xC86000
	0x034A8DC0 LDR X0, [X0 + 0x7B8]
	0x034A8DC4 BL 0x1C16CF4
	0x034A8DC8 ADRP X0, 0xC8A000
	0x034A8DCC LDR X0, [X0 + 0xA8]
	0x034A8DD0 BL 0x1C16CF4
	0x034A8DD4 ADRP X0, 0xC4E000
	0x034A8DD8 LDR X0, [X0 + 0x1E0]
	0x034A8DDC BL 0x1C16CF4
	0x034A8DE0 ADRP X0, 0xC4E000
	0x034A8DE4 LDR X0, [X0 + 0x1F0]
	0x034A8DE8 BL 0x1C16CF4
	0x034A8DEC ADRP X0, 0xC4E000
	0x034A8DF0 LDR X0, [X0 + 0x1F8]
	0x034A8DF4 BL 0x1C16CF4
	0x034A8DF8 ADRP X0, 0xC54000
	0x034A8DFC LDR X0, [X0 + 0x3A0]
	0x034A8E00 BL 0x1C16CF4
	0x034A8E04 ADRP X0, 0xC4D000
	0x034A8E08 LDR X0, [X0 + 0xA28]
	0x034A8E0C BL 0x1C16CF4
	0x034A8E10 ADRP X0, 0xC8A000
	0x034A8E14 LDR X0, [X0 + 0xB0]
	0x034A8E18 BL 0x1C16CF4
	0x034A8E1C ADRP X0, 0xC74000
	0x034A8E20 LDR X0, [X0 + 0x4D0]
	0x034A8E24 BL 0x1C16CF4
	0x034A8E28 ADRP X0, 0xC86000
	0x034A8E2C LDR X0, [X0 + 0x7D0]
	0x034A8E30 BL 0x1C16CF4
	0x034A8E34 ADRP X0, 0xC87000
	0x034A8E38 LDR X0, [X0 + 0x2E8]
	0x034A8E3C BL 0x1C16CF4
	0x034A8E40 ADRP X0, 0xC86000
	0x034A8E44 LDR X0, [X0 + 0x7D8]
	0x034A8E48 BL 0x1C16CF4
	0x034A8E4C ADRP X0, 0xC4B000
	0x034A8E50 LDR X0, [X0 + 0x988]
	0x034A8E54 BL 0x1C16CF4
	0x034A8E58 MOVZ W8, 0x1
	0x034A8E5C STRB W8, [X20 + 0xA10]
	0x034A8E60 STR X31, [X31 + 0x8]
	0x034A8E64 ADRP X25, 0xC89000
	0x034A8E68 LDR W8, [X19]
	0x034A8E6C LDR X25, [X25 + 0xCD0]
	0x034A8E70 CBZ W8, 0x34A9000
	0x034A8E74 LDR X21, [X19 + 0x20]
	0x034A8E78 CBZ X21, 0x34A9130
	0x034A8E7C ADRP X8, 0xC4D000
	0x034A8E80 LDR X8, [X8 + 0xA28]
	0x034A8E84 LDR X0, [X8]
	0x034A8E88 ADRP X8, 0xC8A000
	0x034A8E8C LDR X8, [X8 + 0xB0]
	0x034A8E90 LDR X24, [X19 + 0x28]
	0x034A8E94 LDR W9, [X0 + 0xE0]
	0x034A8E98 LDR X20, [X8]
	0x034A8E9C CBNZ W9, 0x34A8EA4
	0x034A8EA0 BL 0x1C16DFC
	0x034A8EA4 MOV X0, X21
	0x034A8EA8 MOV X1, X31
	0x034A8EAC BL 0x3624D20
	0x034A8EB0 CBZ X20, 0x34A9178
	0x034A8EB4 ADRP X8, 0xC87000
	0x034A8EB8 LDR X8, [X8 + 0x2E8]
	0x034A8EBC MOV X2, X0
	0x034A8EC0 LDR X1, [X8]
	0x034A8EC4 MOV X0, X20
	0x034A8EC8 MOV X3, X31
	0x034A8ECC BL 0x32293BC
	0x034A8ED0 CBZ X24, 0x34A917C
	0x034A8ED4 ADRP X8, 0xC4B000
	0x034A8ED8 ADRP X9, 0xC54000
	0x034A8EDC LDR X8, [X8 + 0x988]
	0x034A8EE0 LDR X9, [X9 + 0x3A0]
	0x034A8EE4 MOV X22, X0
	0x034A8EE8 LDR X23, [X24 + 0x10]
	0x034A8EEC LDR X21, [X8]
	0x034A8EF0 LDR X0, [X9]
	0x034A8EF4 BL 0x1C16F10
	0x034A8EF8 MOV X20, X0
	0x034A8EFC MOV X1, X23
	0x034A8F00 MOV X2, X31
	0x034A8F04 BL 0x36281F8
	0x034A8F08 CBZ X20, 0x34A9180
	0x034A8F0C MOV X0, X20
	0x034A8F10 MOV X1, X22
	0x034A8F14 MOV X2, X31
	0x034A8F18 BL 0x36288CC
	0x034A8F1C MOV X0, X20
	0x034A8F20 MOV X1, X21
	0x034A8F24 MOV X2, X31
	0x034A8F28 BL 0x3628980
	0x034A8F2C MOV X0, X20
	0x034A8F30 MOV X1, X31
	0x034A8F34 BL 0x3628A38
	0x034A8F38 ADRP X8, 0xC74000
	0x034A8F3C ADRP X9, 0xC4C000
	0x034A8F40 LDR X8, [X8 + 0x4D0]
	0x034A8F44 LDR X9, [X9 + 0x6D0]
	0x034A8F48 MOV X20, X0
	0x034A8F4C LDR X21, [X8]
	0x034A8F50 LDR X0, [X9]
	0x034A8F54 BL 0x1C16F10
	0x034A8F58 ADRP X8, 0xC4C000
	0x034A8F5C LDR X8, [X8 + 0x6C0]
	0x034A8F60 MOV X22, X0
	0x034A8F64 LDR X1, [X8]
	0x034A8F68 BL 0x2AA4804
	0x034A8F6C ADRP X8, 0xC86000
	0x034A8F70 LDR X8, [X8 + 0x7D8]
	0x034A8F74 LDR X1, [X19 + 0x30]
	0x034A8F78 LDR X0, [X8]
	0x034A8F7C MOV X2, X31
	0x034A8F80 BL 0x321B938
	0x034A8F84 CBZ X22, 0x34A9184
	0x034A8F88 ADRP X8, 0xC86000
	0x034A8F8C LDR X8, [X8 + 0x7D0]
	0x034A8F90 ADRP X9, 0xC4C000
	0x034A8F94 LDR X9, [X9 + 0x810]
	0x034A8F98 MOV X2, X0
	0x034A8F9C LDR X1, [X8]
	0x034A8FA0 LDR X3, [X9]
	0x034A8FA4 MOV X0, X22
	0x034A8FA8 BL 0x2AA5098
	0x034A8FAC LDR X23, [X24 + 0x20]
	0x034A8FB0 CBZ X23, 0x34A9188
	0x034A8FB4 ADRP X10, 0xC86000
	0x034A8FB8 LDR X8, [X23]
	0x034A8FBC LDR X10, [X10 + 0x7B8]
	0x034A8FC0 LDR W24, [X24 + 0x18]
	0x034A8FC4 LDRH W9, [X8 + 0x12E]
	0x034A8FC8 LDR X1, [X10]
	0x034A8FCC CBZ X9, 0x34A8FF0
	0x034A8FD0 LDR X10, [X8 + 0xB0]
	0x034A8FD4 ADD X10, X10, 0x8
	0x034A8FD8 LDUR X11, [X10 - 0x8]
	0x034A8FDC CMP X11, X1
	0x034A8FE0 B.EQ 0x34A9018
	0x034A8FE4 SUBS X9, X9, 0x1
	0x034A8FE8 ADD X10, X10, 0x10
	0x034A8FEC B.NE 0x34A8FD8
	0x034A8FF0 MOVZ W2, 0x3
	0x034A8FF4 MOV X0, X23
	0x034A8FF8 BL 0x1C5C788
	0x034A8FFC B 0x34A9028
	0x034A9000 LDR X8, [X19 + 0x38]
	0x034A9004 MOVN W9, 0x0
	0x034A9008 STR X8, [X31 + 0x8]
	0x034A900C STR X31, [X19 + 0x38]
	0x034A9010 STR W9, [X19]
	0x034A9014 B 0x34A9084
	0x034A9018 LDR W9, [X10]
	0x034A901C ADD W9, W9, 0x3
	0x034A9020 ADD X8, X8, W9, 0x4, SXTW
	0x034A9024 ADD X0, X8, 0x138
	0x034A9028 LDP X8, X9, [X0]
	0x034A902C MOV X0, X23
	0x034A9030 MOV X1, X21
	0x034A9034 MOV X2, X20
	0x034A9038 MOV X3, X22
	0x034A903C MOV X4, X31
	0x034A9040 MOV W5, W24
	0x034A9044 MOV X6, X31
	0x034A9048 MOV X7, X31
	0x034A904C STR X9, [X31]
	0x034A9050 BLR X8
	0x034A9054 CBZ X0, 0x34A918C
	0x034A9058 ADRP X8, 0xC4D000
	0x034A905C LDR X8, [X8 + 0x1F8]
	0x034A9060 LDR X1, [X8]
	0x034A9064 BL 0x269F5D0
	0x034A9068 ADRP X8, 0xC4D000
	0x034A906C LDR X8, [X8 + 0x1F0]
	0x034A9070 STR X0, [X31 + 0x8]
	0x034A9074 LDR X1, [X8]
	0x034A9078 ADD X0, X31, 0x8
	0x034A907C BL 0x2677430
	0x034A9080 TBZ X0, 0x0, 0x34A90E0
	0x034A9084 ADRP X8, 0xC4D000
	0x034A9088 LDR X8, [X8 + 0x1E0]
	0x034A908C ADD X0, X31, 0x8
	0x034A9090 LDR X1, [X8]
	0x034A9094 BL 0x2677474
	0x034A9098 ADRP X8, 0xC89000
	0x034A909C LDR X8, [X8 + 0xA8]
	0x034A90A0 LDR X1, [X8]
	0x034A90A4 BL 0x220E6DC
	0x034A90A8 MOVN W8, 0x1
	0x034A90AC STR W8, [X19], #0x8
	0x034A90B0 MOV X20, X0
	0x034A90B4 LDR X0, [X25]
	0x034A90B8 ADRP X21, 0xC89000
	0x034A90BC LDR W8, [X0 + 0xE0]
	0x034A90C0 LDR X21, [X21 + 0xA0]
	0x034A90C4 CBNZ W8, 0x34A90CC
	0x034A90C8 BL 0x1C16DFC
	0x034A90CC LDR X2, [X21]
	0x034A90D0 MOV X0, X19
	0x034A90D4 MOV X1, X20
	0x034A90D8 BL 0x26322B0
	0x034A90DC B 0x34A9118
	0x034A90E0 STR W31, [X19]
	0x034A90E4 LDR X8, [X31 + 0x8]
	0x034A90E8 STR X8, [X19 + 0x38]
	0x034A90EC LDR X0, [X25]
	0x034A90F0 LDR W8, [X0 + 0xE0]
	0x034A90F4 CBNZ W8, 0x34A90FC
	0x034A90F8 BL 0x1C16DFC
	0x034A90FC ADRP X8, 0xC89000
	0x034A9100 LDR X8, [X8 + 0x98]
	0x034A9104 ADD X0, X19, 0x8
	0x034A9108 LDR X3, [X8]
	0x034A910C ADD X1, X31, 0x8
	0x034A9110 MOV X2, X19
	0x034A9114 BL 0x1FB7A14
	0x034A9118 LDP X20, X19, [X31 + 0x40]
	0x034A911C LDP X22, X21, [X31 + 0x30]
	0x034A9120 LDP X24, X23, [X31 + 0x20]
	0x034A9124 LDP X30, X25, [X31 + 0x10]
	0x034A9128 ADD X31, X31, 0x50
	0x034A912C RET
	0x034A9130 ADRP X0, 0xC52000
	0x034A9134 LDR X0, [X0 + 0x578]
	0x034A9138 BL 0x1C16D08
	0x034A913C BL 0x1C16F10
	0x034A9140 MOV X20, X0
	0x034A9144 ADRP X0, 0xC86000
	0x034A9148 LDR X0, [X0 + 0x2F0]
	0x034A914C BL 0x1C16D08
	0x034A9150 MOV X1, X0
	0x034A9154 MOV X0, X20
	0x034A9158 MOV X2, X31
	0x034A915C BL 0x3314A68
	0x034A9160 ADRP X0, 0xC89000
	0x034A9164 LDR X0, [X0 + 0xB8]
	0x034A9168 BL 0x1C16D08
	0x034A916C MOV X1, X0
	0x034A9170 MOV X0, X20
	0x034A9174 BL 0x1C16DEC
	0x034A9178 BL 0x1C16F20
	0x034A917C BL 0x1C16F20
	0x034A9180 BL 0x1C16F20
	0x034A9184 BL 0x1C16F20
	0x034A9188 BL 0x1C16F20
	0x034A918C BL 0x1C16F20
	0x034A9190 B 0x34A91D8
	0x034A9194 B 0x34A91D8
	0x034A9198 B 0x34A91D8
	0x034A919C B 0x34A91D8
	0x034A91A0 B 0x34A91D8
	0x034A91A4 B 0x34A91D8
	0x034A91A8 B 0x34A91D8
	0x034A91AC B 0x34A91D8
	0x034A91B0 B 0x34A91D8
	0x034A91B4 B 0x34A91D8
	0x034A91B8 B 0x34A91D8
	0x034A91BC B 0x34A91D8
	0x034A91C0 B 0x34A91D8
	0x034A91C4 B 0x34A91D8
	0x034A91C8 B 0x34A91D8
	0x034A91CC B 0x34A91D8
	0x034A91D0 B 0x34A91D8
	0x034A91D4 B 0x34A91D8
	0x034A91D8 MOV X20, X0
	0x034A91DC CMP W1, 0x1
	0x034A91E0 B.NE 0x34A927C
	0x034A91E4 MOV X0, X20
	0x034A91E8 BL 0x3EB1AD0
	0x034A91EC MOV X20, X0
	0x034A91F0 ADRP X0, 0xC4A000
	0x034A91F4 LDR X0, [X0 + 0x7D0]
	0x034A91F8 BL 0x1C16D08
	0x034A91FC LDR X8, [X20]
	0x034A9200 LDR X1, [X8]
	0x034A9204 BL 0x1C17270
	0x034A9208 TBZ X0, 0x0, 0x34A9254
	0x034A920C LDR X20, [X20]
	0x034A9210 BL 0x3EB1AE0
	0x034A9214 MOVN W8, 0x1
	0x034A9218 STR W8, [X19], #0x8
	0x034A921C ADRP X0, 0xC88000
	0x034A9220 LDR X0, [X0 + 0xCD0]
	0x034A9224 BL 0x1C16D08
	0x034A9228 LDR W8, [X0 + 0xE0]
	0x034A922C CBNZ W8, 0x34A9234

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF36000
	011 Move W8, [X20+2570]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xC8B000
	018 Move X0, [X0]
	019 Call 0x1C17CF4
	020 Move X0, 0xC8B000
	021 Move X0, [X0+8]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8A000
	024 Move X0, [X0+3160]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4D000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4D000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xC4D000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0xC87000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xC8B000
	039 Move X0, [X0+16]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4F000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4F000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4F000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xC55000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xC4E000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0xC75000
	057 Move X0, [X0+1232]
	058 Call 0x1C17CF4
	059 Move X0, 0xC87000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xC88000
	063 Move X0, [X0+744]
	064 Call 0x1C17CF4
	065 Move X0, 0xC87000
	066 Move X0, [X0+2008]
	067 Call 0x1C17CF4
	068 Move X0, 0xC4C000
	069 Move X0, [X0+2440]
	070 Call 0x1C17CF4
	071 Move X0, 0xC8A000
	072 Move X0, [X0+3784]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2570], W8
	076 Move [X31+8], X31
	077 Move X25, 0xC8A000
	078 Move W8, [X19]
	079 Move X25, [X25+3160]
	080 Compare W8, 0
	081 JumpIfEqual {186}
	082 Move X21, [X19+32]
	083 Compare X21, 0
	084 JumpIfEqual {275}
	085 Move X8, 0xC4E000
	086 Move X8, [X8+2600]
	087 Move X0, [X8]
	088 Move X8, 0xC8A000
	089 Move X8, [X8+3784]
	090 Move X24, [X19+40]
	091 Move W9, [X0+224]
	092 Move X20, [X8]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Uri.EscapeDataString, X0
	099 Compare X20, 0
	100 JumpIfEqual {293}
	101 Move X8, 0xC88000
	102 Move X8, [X8+744]
	103 Move X2, X0
	104 Move X1, [X8]
	105 Move X0, X20
	106 Move X3, X31
	107 Call String.Replace, X0, X1, X2
	108 Compare X24, 0
	109 JumpIfEqual {294}
	110 Move X8, 0xC4C000
	111 Move X9, 0xC55000
	112 Move X8, [X8+2440]
	113 Move X9, [X9+928]
	114 Move X22, X0
	115 Move X23, [X24+16]
	116 Move X21, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X20, X0
	120 Move X1, X23
	121 Move X2, X31
	122 Call UriBuilder..ctor, X0, X1
	123 Compare X20, 0
	124 JumpIfEqual {295}
	125 Move X0, X20
	126 Move X1, X22
	127 Move X2, X31
	128 Call UriBuilder.set_Path, X0, X1
	129 Move X0, X20
	130 Move X1, X21
	131 Move X2, X31
	132 Call UriBuilder.set_Query, X0, X1
	133 Move X0, X20
	134 Move X1, X31
	135 Call UriBuilder.get_Uri, X0
	136 Move X8, 0xC75000
	137 Move X9, 0xC4D000
	138 Move X8, [X8+1232]
	139 Move X9, [X9+1744]
	140 Move X20, X0
	141 Move X21, [X8]
	142 Move X0, [X9]
	143 Call 0x1C17F10
	144 Move X8, 0xC4D000
	145 Move X8, [X8+1728]
	146 Move X22, X0
	147 Move X1, [X8]
	148 Call Dictionary`2<Object, Object>..ctor, X0
	149 Move X8, 0xC87000
	150 Move X8, [X8+2008]
	151 Move X1, [X19+48]
	152 Move X0, [X8]
	153 Move X2, X31
	154 Call String.Concat, X0, X1
	155 Compare X22, 0
	156 JumpIfEqual {296}
	157 Move X8, 0xC87000
	158 Move X8, [X8+2000]
	159 Move X9, 0xC4D000
	160 Move X9, [X9+2064]
	161 Move X2, X0
	162 Move X1, [X8]
	163 Move X3, [X9]
	164 Move X0, X22
	165 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	166 Move X23, [X24+32]
	167 Compare X23, 0
	168 JumpIfEqual {297}
	169 Move X10, 0xC87000
	170 Move X8, [X23]
	171 Move X10, [X10+1976]
	172 Move W24, [X24+24]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X1, [X10]
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+56]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+56], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W24
	205 Move X6, X31
	206 Move X7, X31
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {298}
	211 Move X8, 0xC4E000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xC4E000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {250}
	225 Move X8, 0xC4E000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move X8, 0xC8A000
	231 Move X8, [X8+16]
	232 Move X1, [X8]
	233 Call JsonParser.FromJson, X0
	234 Move TEMP, 1
	235 Not TEMP
	236 Move W8, TEMP
	237 Move [X19+8], W8
	238 Move X20, X0
	239 Move X0, [X25]
	240 Move X21, 0xC8A000
	241 Move W8, [X0+224]
	242 Move X21, [X21+8]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X2, [X21]
	247 Move X0, X19
	248 Move X1, X20
	249 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	250 Move [X19], W31
	251 Move X8, [X31+8]
	252 Move [X19+56], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xC8A000
	259 Move X8, [X8]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 8
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Move X20, [X31+64]
	266 Move X19, [X31+72]
	267 Move X22, [X31+48]
	268 Move X21, [X31+56]
	269 Move X24, [X31+32]
	270 Move X23, [X31+40]
	271 Move X30, [X31+16]
	272 Move X25, [X31+24]
	273 Add X31, X31, 80
	274 Return 
	275 Move X0, 0xC53000
	276 Move X0, [X0+1400]
	277 Call 0x1C17D08
	278 Call 0x1C17F10
	279 Move X20, X0
	280 Move X0, 0xC87000
	281 Move X0, [X0+752]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X20
	285 Move X2, X31
	286 Call ArgumentException..ctor, X0, X1
	287 Move X0, 0xC8A000
	288 Move X0, [X0+24]
	289 Call 0x1C17D08
	290 Move X1, X0
	291 Move X0, X20
	292 Call 0x1C17DEC
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move X20, X0
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, X20
	302 Call 0x3EB2AD0
	303 Move X20, X0
	304 Move X0, 0xC4B000
	305 Move X0, [X0+2000]
	306 Call 0x1C17D08
	307 Move X8, [X20]
	308 Move X1, [X8]
	309 Call 0x1C18270
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {334}
	314 Move X20, [X20]
	315 Call 0x3EB2AE0
	316 Move TEMP, 1
	317 Not TEMP
	318 Move W8, TEMP
	319 Move [X19+8], W8
	320 Move X0, 0xC89000
	321 Move X0, [X0+3160]
	322 Call 0x1C17D08
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, 0xC8A000
	328 Move X0, [X0+32]
	329 Call 0x1C17D08
	330 Move X2, X0
	331 Move X0, X19
	332 Move X1, X20
	333 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	334 Move W0, 8
	335 Call 0x3EB2AF0
	336 Move X8, [X20]
	337 Move [X0], X8
	338 Move X1, 0xA0C000
	339 Add X1, X1, 3672
	340 Move X2, X31
	341 Call 0x3EB2B00
	342 Move X20, X0
	343 Call 0x3EB2AE0
	344 Move X0, X20
	345 Call 0x1D2D690
	346 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A9230 BL 0x1C16DFC
	0x034A9234 ADRP X0, 0xC89000
	0x034A9238 LDR X0, [X0 + 0xC0]
	0x034A923C BL 0x1C16D08
	0x034A9240 MOV X2, X0
	0x034A9244 MOV X0, X19
	0x034A9248 MOV X1, X20
	0x034A924C BL 0x26324C8
	0x034A9250 B 0x34A9118
	0x034A9254 MOVZ W0, 0x8
	0x034A9258 BL 0x3EB1AF0
	0x034A925C LDR X8, [X20]
	0x034A9260 STR X8, [X0]
	0x034A9264 ADRP X1, 0xA0B000
	0x034A9268 ADD X1, X1, 0xE58
	0x034A926C MOV X2, X31
	0x034A9270 BL 0x3EB1B00
	0x034A9274 MOV X20, X0
	0x034A9278 BL 0x3EB1AE0
	0x034A927C MOV X0, X20
	0x034A9280 BL 0x1D2C690
	0x034A9284 BL 0x1990590
	0x034A9288 STR X30, [X31 - 0x30]!
	0x034A928C STP X22, X21, [X31 + 0x10]
	0x034A9290 STP X20, X19, [X31 + 0x20]
	0x034A9294 ADRP X22, 0xF34000
	0x034A9298 ADRP X21, 0xC88000
	0x034A929C LDRB W8, [X22 + 0xA11]
	0x034A92A0 LDR X21, [X21 + 0xCD0]
	0x034A92A4 MOV X19, X1
	0x034A92A8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF35000
	007 Move X21, 0xC89000
	008 Move W8, [X22+2571]
	009 Move X21, [X21+3160]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC8A000
	017 Move X0, [X0+40]
	018 Call 0x1C17CF4
	019 Move X0, 0xC89000
	020 Move X0, [X0+3160]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2571], W8
	024 Move X0, [X21]
	025 Move X21, 0xC8A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+40]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

