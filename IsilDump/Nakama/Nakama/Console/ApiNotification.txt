Type: Nakama.Console.ApiNotification

Method: System.Int32 get_Code()

Disassembly:
	0x0349F498 LDR X0, [X0 + 0xAD0]
	0x0349F49C BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Code(System.Int32 value)

Disassembly:
	0x0349F4A0 MOVZ W8, 0x1
	0x0349F4A4 STRB W8, [X20 + 0x9B4]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.String get_Content()

Disassembly:
	0x0349F4A8 LDR X19, [X19 + 0x18]
	0x0349F4AC CBNZ X19, 0x349F4D8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Content(System.String value)

Disassembly:
	0x0349F4B0 ADRP X8, 0xC92000
	0x0349F4B4 LDR X8, [X8 + 0xAD0]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x0349F4B8 LDR X0, [X8]
	0x0349F4BC BL 0x1C16F10

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0349F4C0 ADRP X8, 0xC92000
	0x0349F4C4 LDR X8, [X8 + 0xAC8]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Id()

Disassembly:
	0x0349F4C8 MOV W1, W31
	0x0349F4CC MOV X19, X0

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x0349F4D0 LDR X2, [X8]
	0x0349F4D4 BL 0x301B830

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Boolean get_Persistent()

Disassembly:
	0x0349F4D8 MOV X0, X19
	0x0349F4DC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_Persistent(System.Boolean value)

Disassembly:
	0x0349F4E0 LDR X30, [X31], #0x20
	0x0349F4E4 RET
	0x0349F4E8 LDR X0, [X0 + 0x18]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+48], W8
	003 Return 

Method: System.String get_SenderId()

Disassembly:
	0x0349F4EC RET
	0x0349F4F0 STR X1, [X0 + 0x18]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_SenderId(System.String value)

Disassembly:
	0x0349F4F4 RET
	0x0349F4F8 STR X30, [X31 - 0x50]!

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_Subject()

Disassembly:
	0x0349F4FC STP X26, X25, [X31 + 0x10]
	0x0349F500 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Subject(System.String value)

Disassembly:
	0x0349F504 STP X22, X21, [X31 + 0x30]
	0x0349F508 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0349F50C ADRP X26, 0xF3E000
	0x0349F510 ADRP X20, 0xC54000
	0x0349F514 ADRP X25, 0xC8E000
	0x0349F518 ADRP X23, 0xC54000
	0x0349F51C ADRP X24, 0xC92000
	0x0349F520 ADRP X21, 0xC8F000
	0x0349F524 ADRP X22, 0xC8E000
	0x0349F528 LDR X20, [X20 + 0x988]
	0x0349F52C LDRB W8, [X26 + 0x9B5]
	0x0349F530 LDR X25, [X25 + 0xED8]
	0x0349F534 LDR X23, [X23 + 0x838]
	0x0349F538 LDR X24, [X24 + 0xAD8]
	0x0349F53C LDR X21, [X21 + 0x1C8]
	0x0349F540 LDR X22, [X22 + 0xD50]
	0x0349F544 MOV X19, X0
	0x0349F548 TBNZ X8, 0x0, 0x349F59C
	0x0349F54C ADRP X0, 0xC92000
	0x0349F550 LDR X0, [X0 + 0xAD8]
	0x0349F554 BL 0x1C16CF4
	0x0349F558 ADRP X0, 0xC8F000
	0x0349F55C LDR X0, [X0 + 0x1C8]
	0x0349F560 BL 0x1C16CF4
	0x0349F564 ADRP X0, 0xC54000
	0x0349F568 LDR X0, [X0 + 0x838]
	0x0349F56C BL 0x1C16CF4
	0x0349F570 ADRP X0, 0xC8E000
	0x0349F574 LDR X0, [X0 + 0xD50]
	0x0349F578 BL 0x1C16CF4
	0x0349F57C ADRP X0, 0xC8E000
	0x0349F580 LDR X0, [X0 + 0xED8]
	0x0349F584 BL 0x1C16CF4
	0x0349F588 ADRP X0, 0xC54000
	0x0349F58C LDR X0, [X0 + 0x988]
	0x0349F590 BL 0x1C16CF4
	0x0349F594 MOVZ W8, 0x1
	0x0349F598 STRB W8, [X26 + 0x9B5]
	0x0349F59C LDR X2, [X19 + 0x10]
	0x0349F5A0 LDR X0, [X20]
	0x0349F5A4 LDR X1, [X25]
	0x0349F5A8 LDR X3, [X23]
	0x0349F5AC MOV X4, X31
	0x0349F5B0 BL 0x32277C4
	0x0349F5B4 MOV X20, X0
	0x0349F5B8 MOV X0, X19
	0x0349F5BC BL 0x349F470
	0x0349F5C0 LDR X8, [X23]
	0x0349F5C4 LDR X2, [X24]
	0x0349F5C8 MOV X1, X0
	0x0349F5CC MOV X0, X8
	0x0349F5D0 BL 0x226B7E8
	0x0349F5D4 LDR X1, [X21]
	0x0349F5D8 LDR X3, [X22]
	0x0349F5DC MOV X2, X0
	0x0349F5E0 MOV X0, X20
	0x0349F5E4 LDP X20, X19, [X31 + 0x40]
	0x0349F5E8 LDP X22, X21, [X31 + 0x30]
	0x0349F5EC LDP X24, X23, [X31 + 0x20]
	0x0349F5F0 LDP X26, X25, [X31 + 0x10]
	0x0349F5F4 MOV X4, X31
	0x0349F5F8 LDR X30, [X31], #0x50
	0x0349F5FC B 0x32277C4
	0x0349F600 MOV X1, X31
	0x0349F604 B 0x33BDD8C
	0x0349F608 LDR X0, [X0 + 0x10]
	0x0349F60C RET
	0x0349F610 LDR X0, [X0 + 0x10]
	0x0349F614 RET
	0x0349F618 STR X1, [X0 + 0x10]
	0x0349F61C RET
	0x0349F620 STR X30, [X31 - 0x20]!
	0x0349F624 STP X20, X19, [X31 + 0x10]
	0x0349F628 ADRP X20, 0xF3E000
	0x0349F62C LDRB W8, [X20 + 0x9B6]
	0x0349F630 MOV X19, X0
	0x0349F634 TBNZ X8, 0x0, 0x349F658
	0x0349F638 ADRP X0, 0xC92000
	0x0349F63C LDR X0, [X0 + 0xAB0]
	0x0349F640 BL 0x1C16CF4
	0x0349F644 ADRP X0, 0xC92000
	0x0349F648 LDR X0, [X0 + 0xAB8]
	0x0349F64C BL 0x1C16CF4
	0x0349F650 MOVZ W8, 0x1
	0x0349F654 STRB W8, [X20 + 0x9B6]
	0x0349F658 LDR X19, [X19 + 0x18]
	0x0349F65C CBNZ X19, 0x349F688
	0x0349F660 ADRP X8, 0xC92000
	0x0349F664 LDR X8, [X8 + 0xAB8]
	0x0349F668 LDR X0, [X8]
	0x0349F66C BL 0x1C16F10
	0x0349F670 ADRP X8, 0xC92000
	0x0349F674 LDR X8, [X8 + 0xAB0]
	0x0349F678 MOV W1, W31
	0x0349F67C MOV X19, X0
	0x0349F680 LDR X2, [X8]
	0x0349F684 BL 0x301B830
	0x0349F688 MOV X0, X19
	0x0349F68C LDP X20, X19, [X31 + 0x10]
	0x0349F690 LDR X30, [X31], #0x20
	0x0349F694 RET
	0x0349F698 LDR X0, [X0 + 0x18]
	0x0349F69C RET
	0x0349F6A0 STR X1, [X0 + 0x18]
	0x0349F6A4 RET
	0x0349F6A8 STR X30, [X31 - 0x20]!
	0x0349F6AC STP X20, X19, [X31 + 0x10]
	0x0349F6B0 ADRP X20, 0xF3E000
	0x0349F6B4 LDRB W8, [X20 + 0x9B7]
	0x0349F6B8 MOV X19, X0
	0x0349F6BC TBNZ X8, 0x0, 0x349F6E0
	0x0349F6C0 ADRP X0, 0xC92000
	0x0349F6C4 LDR X0, [X0 + 0xAE0]
	0x0349F6C8 BL 0x1C16CF4
	0x0349F6CC ADRP X0, 0xC92000
	0x0349F6D0 LDR X0, [X0 + 0xAE8]
	0x0349F6D4 BL 0x1C16CF4
	0x0349F6D8 MOVZ W8, 0x1
	0x0349F6DC STRB W8, [X20 + 0x9B7]
	0x0349F6E0 LDR X19, [X19 + 0x20]
	0x0349F6E4 CBNZ X19, 0x349F710
	0x0349F6E8 ADRP X8, 0xC92000
	0x0349F6EC LDR X8, [X8 + 0xAE8]
	0x0349F6F0 LDR X0, [X8]
	0x0349F6F4 BL 0x1C16F10
	0x0349F6F8 ADRP X8, 0xC92000
	0x0349F6FC LDR X8, [X8 + 0xAE0]
	0x0349F700 MOV W1, W31
	0x0349F704 MOV X19, X0
	0x0349F708 LDR X2, [X8]
	0x0349F70C BL 0x301B830
	0x0349F710 MOV X0, X19
	0x0349F714 LDP X20, X19, [X31 + 0x10]
	0x0349F718 LDR X30, [X31], #0x20
	0x0349F71C RET
	0x0349F720 LDR X0, [X0 + 0x20]
	0x0349F724 RET
	0x0349F728 STR X1, [X0 + 0x20]
	0x0349F72C RET
	0x0349F730 STR X30, [X31 - 0x20]!
	0x0349F734 STP X20, X19, [X31 + 0x10]
	0x0349F738 ADRP X20, 0xF3E000
	0x0349F73C LDRB W8, [X20 + 0x9B8]
	0x0349F740 MOV X19, X0
	0x0349F744 TBNZ X8, 0x0, 0x349F768
	0x0349F748 ADRP X0, 0xC92000
	0x0349F74C LDR X0, [X0 + 0xAF0]
	0x0349F750 BL 0x1C16CF4
	0x0349F754 ADRP X0, 0xC92000
	0x0349F758 LDR X0, [X0 + 0xAF8]
	0x0349F75C BL 0x1C16CF4
	0x0349F760 MOVZ W8, 0x1
	0x0349F764 STRB W8, [X20 + 0x9B8]
	0x0349F768 LDR X19, [X19 + 0x28]
	0x0349F76C CBNZ X19, 0x349F798
	0x0349F770 ADRP X8, 0xC92000
	0x0349F774 LDR X8, [X8 + 0xAF8]
	0x0349F778 LDR X0, [X8]
	0x0349F77C BL 0x1C16F10
	0x0349F780 ADRP X8, 0xC92000
	0x0349F784 LDR X8, [X8 + 0xAF0]
	0x0349F788 MOV W1, W31
	0x0349F78C MOV X19, X0
	0x0349F790 LDR X2, [X8]
	0x0349F794 BL 0x301B830
	0x0349F798 MOV X0, X19
	0x0349F79C LDP X20, X19, [X31 + 0x10]
	0x0349F7A0 LDR X30, [X31], #0x20
	0x0349F7A4 RET
	0x0349F7A8 LDR X0, [X0 + 0x28]
	0x0349F7AC RET
	0x0349F7B0 STR X1, [X0 + 0x28]
	0x0349F7B4 RET
	0x0349F7B8 STR X30, [X31 - 0x20]!
	0x0349F7BC STP X20, X19, [X31 + 0x10]
	0x0349F7C0 ADRP X20, 0xF3E000
	0x0349F7C4 LDRB W8, [X20 + 0x9B9]
	0x0349F7C8 MOV X19, X0
	0x0349F7CC TBNZ X8, 0x0, 0x349F7F0
	0x0349F7D0 ADRP X0, 0xC92000
	0x0349F7D4 LDR X0, [X0 + 0xB00]
	0x0349F7D8 BL 0x1C16CF4
	0x0349F7DC ADRP X0, 0xC92000
	0x0349F7E0 LDR X0, [X0 + 0xB08]
	0x0349F7E4 BL 0x1C16CF4
	0x0349F7E8 MOVZ W8, 0x1
	0x0349F7EC STRB W8, [X20 + 0x9B9]
	0x0349F7F0 LDR X19, [X19 + 0x30]
	0x0349F7F4 CBNZ X19, 0x349F820
	0x0349F7F8 ADRP X8, 0xC92000
	0x0349F7FC LDR X8, [X8 + 0xB08]
	0x0349F800 LDR X0, [X8]
	0x0349F804 BL 0x1C16F10
	0x0349F808 ADRP X8, 0xC92000
	0x0349F80C LDR X8, [X8 + 0xB00]
	0x0349F810 MOV W1, W31
	0x0349F814 MOV X19, X0
	0x0349F818 LDR X2, [X8]
	0x0349F81C BL 0x301B830
	0x0349F820 MOV X0, X19
	0x0349F824 LDP X20, X19, [X31 + 0x10]
	0x0349F828 LDR X30, [X31], #0x20
	0x0349F82C RET
	0x0349F830 LDR X0, [X0 + 0x30]
	0x0349F834 RET
	0x0349F838 STR X1, [X0 + 0x30]
	0x0349F83C RET
	0x0349F840 STR X30, [X31 - 0x20]!
	0x0349F844 STP X20, X19, [X31 + 0x10]
	0x0349F848 ADRP X20, 0xF3E000
	0x0349F84C LDRB W8, [X20 + 0x9BA]
	0x0349F850 MOV X19, X0
	0x0349F854 TBNZ X8, 0x0, 0x349F878
	0x0349F858 ADRP X0, 0xC92000
	0x0349F85C LDR X0, [X0 + 0xB10]
	0x0349F860 BL 0x1C16CF4
	0x0349F864 ADRP X0, 0xC92000
	0x0349F868 LDR X0, [X0 + 0xB18]
	0x0349F86C BL 0x1C16CF4
	0x0349F870 MOVZ W8, 0x1
	0x0349F874 STRB W8, [X20 + 0x9BA]
	0x0349F878 LDR X19, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF3F000
	011 Move X21, 0xC55000
	012 Move X22, 0xC55000
	013 Move W8, [X20+2480]
	014 Move X21, [X21+2440]
	015 Move X22, [X22+2512]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0xC55000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xC55000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xC55000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0xC90000
	031 Move X0, [X0+8]
	032 Call 0x1C17CF4
	033 Move X0, 0xC8F000
	034 Move X0, [X0+3544]
	035 Call 0x1C17CF4
	036 Move X0, 0xC8F000
	037 Move X0, [X0+3464]
	038 Call 0x1C17CF4
	039 Move X0, 0xC8F000
	040 Move X0, [X0+3552]
	041 Call 0x1C17CF4
	042 Move X0, 0xC55000
	043 Move X0, [X0+2104]
	044 Call 0x1C17CF4
	045 Move X0, 0xC55000
	046 Move X0, [X0+2440]
	047 Call 0x1C17CF4
	048 Move X0, 0xC8F000
	049 Move X0, [X0+3600]
	050 Call 0x1C17CF4
	051 Move X0, 0xC8F000
	052 Move X0, [X0+3616]
	053 Call 0x1C17CF4
	054 Move X0, 0xC8F000
	055 Move X0, [X0+3624]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+2480], W8
	059 Move X0, [X22]
	060 Move X21, [X21]
	061 Move W1, 4
	062 Call 0x1C17D6C
	063 Compare X0, 0
	064 JumpIfEqual {245}
	065 Move X20, X0
	066 Compare X21, 0
	067 JumpIfEqual {74}
	068 Move X8, [X20]
	069 Move X0, X21
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {242}
	074 Move W8, [X20+24]
	075 Compare W8, 0
	076 JumpIfEqual {241}
	077 Move X23, 0xC8F000
	078 Move X23, [X23+3616]
	079 Move [X20+32], X21
	080 Move X0, [X23]
	081 Compare X0, 0
	082 JumpIfEqual {89}
	083 Move X8, [X20]
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {242}
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, [X23]
	091 Move X9, 0xC55000
	092 Move X9, [X9+1880]
	093 Add X1, X31, 12
	094 Move [X20+40], X8
	095 Move W8, [X19+16]
	096 Move X0, [X9]
	097 Move [X31+12], W8
	098 Call 0x1C17E04
	099 Move X21, X0
	100 Compare X0, 0
	101 JumpIfEqual {108}
	102 Move X8, [X20]
	103 Move X0, X21
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {242}
	108 Move W8, [X20+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X23, 0xC55000
	111 Move X23, [X23+2104]
	112 Move [X20+48], X21
	113 Move X0, [X23]
	114 Compare X0, 0
	115 JumpIfEqual {122}
	116 Move X8, [X20]
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {242}
	121 Move W8, [X20+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X23]
	124 Move X21, 0xC8F000
	125 Move X24, 0xC8F000
	126 Move X25, 0xC8F000
	127 Move X21, [X21+3544]
	128 Move X24, [X24+3552]
	129 Move X25, [X25+3464]
	130 Move X0, X20
	131 Move X1, X31
	132 Move [X20+56], X8
	133 Call String.Concat, X0
	134 Move X2, [X19+24]
	135 Move X1, [X21]
	136 Move X3, [X23]
	137 Move X4, X31
	138 Call String.Concat, X0, X1, X2, X3
	139 Move X2, [X19+32]
	140 Move X1, [X24]
	141 Move X3, [X23]
	142 Move X4, X31
	143 Call String.Concat, X0, X1, X2, X3
	144 Move X2, [X19+40]
	145 Move X1, [X25]
	146 Move X3, [X23]
	147 Move X4, X31
	148 Call String.Concat, X0, X1, X2, X3
	149 Move X8, [X22]
	150 Move X21, X0
	151 Move W1, 4
	152 Move X0, X8
	153 Call 0x1C17D6C
	154 Compare X0, 0
	155 JumpIfEqual {245}
	156 Move X20, X0
	157 Compare X21, 0
	158 JumpIfEqual {165}
	159 Move X8, [X20]
	160 Move X0, X21
	161 Move X1, [X8+64]
	162 Call 0x1C17E00
	163 Compare X0, 0
	164 JumpIfEqual {242}
	165 Move W8, [X20+24]
	166 Compare W8, 0
	167 JumpIfEqual {241}
	168 Move X22, 0xC8F000
	169 Move X22, [X22+3624]
	170 Move [X20+32], X21
	171 Move X0, [X22]
	172 Compare X0, 0
	173 JumpIfEqual {180}
	174 Move X8, [X20]
	175 Move X1, [X8+64]
	176 Call 0x1C17E00
	177 Compare X0, 0
	178 JumpIfEqual {242}
	179 Move W8, [X20+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X8, [X22]
	182 Move X9, 0xC55000
	183 Move X9, [X9+2904]
	184 Add X1, X31, 8
	185 Move [X20+40], X8
	186 Move W8, [X19+48]
	187 Move X0, [X9]
	188 Move [X31+8], W8
	189 Call 0x1C17E04
	190 Move X21, X0
	191 Compare X0, 0
	192 JumpIfEqual {199}
	193 Move X8, [X20]
	194 Move X0, X21
	195 Move X1, [X8+64]
	196 Call 0x1C17E00
	197 Compare X0, 0
	198 JumpIfEqual {242}
	199 Move W8, [X20+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move [X20+48], X21
	202 Move X0, [X23]
	203 Compare X0, 0
	204 JumpIfEqual {211}
	205 Move X8, [X20]
	206 Move X1, [X8+64]
	207 Call 0x1C17E00
	208 Compare X0, 0
	209 JumpIfEqual {242}
	210 Move W8, [X20+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, [X23]
	213 Move X21, 0xC8F000
	214 Move X22, 0xC90000
	215 Move X21, [X21+3600]
	216 Move X22, [X22+8]
	217 Move X0, X20
	218 Move X1, X31
	219 Move [X20+56], X8
	220 Call String.Concat, X0
	221 Move X2, [X19+56]
	222 Move X1, [X21]
	223 Move X3, [X23]
	224 Move X4, X31
	225 Call String.Concat, X0, X1, X2, X3
	226 Move X2, [X19+64]
	227 Move X1, [X22]
	228 Move X3, [X23]
	229 Move X4, X31
	230 Call String.Concat, X0, X1, X2, X3
	231 Move X20, [X31+64]
	232 Move X19, [X31+72]
	233 Move X22, [X31+48]
	234 Move X21, [X31+56]
	235 Move X24, [X31+32]
	236 Move X23, [X31+40]
	237 Move X30, [X31+16]
	238 Move X25, [X31+24]
	239 Add X31, X31, 80
	240 Return X0
	241 Call 0x1C17F28
	242 Call 0x1C17F44
	243 Move X1, X31
	244 Call 0x1C17DEC
	245 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0349F87C CBNZ X19, 0x349F8A8
	0x0349F880 ADRP X8, 0xC92000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

