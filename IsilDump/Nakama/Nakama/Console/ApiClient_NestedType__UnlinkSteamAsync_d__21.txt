Type: Nakama.Console.ApiClient/<UnlinkSteamAsync>d__21

Method: System.Void MoveNext()

Disassembly:
	0x034AEBDC ADRP X0, 0xC4D000
	0x034AEBE0 LDR X0, [X0 + 0x578]
	0x034AEBE4 BL 0x1C16D08
	0x034AEBE8 BL 0x1C16F10
	0x034AEBEC MOV X20, X0
	0x034AEBF0 ADRP X0, 0xC81000
	0x034AEBF4 LDR X0, [X0 + 0x118]
	0x034AEBF8 BL 0x1C16D08
	0x034AEBFC MOV X1, X0
	0x034AEC00 MOV X0, X20
	0x034AEC04 MOV X2, X31
	0x034AEC08 BL 0x3314A68
	0x034AEC0C ADRP X0, 0xC84000
	0x034AEC10 LDR X0, [X0 + 0x2D0]
	0x034AEC14 BL 0x1C16D08
	0x034AEC18 MOV X1, X0
	0x034AEC1C MOV X0, X20
	0x034AEC20 BL 0x1C16DEC
	0x034AEC24 ADRP X0, 0xC4D000
	0x034AEC28 LDR X0, [X0 + 0x578]
	0x034AEC2C BL 0x1C16D08
	0x034AEC30 BL 0x1C16F10
	0x034AEC34 MOV X20, X0
	0x034AEC38 ADRP X0, 0xC83000
	0x034AEC3C LDR X0, [X0 + 0xF60]
	0x034AEC40 BL 0x1C16D08
	0x034AEC44 MOV X1, X0
	0x034AEC48 MOV X0, X20
	0x034AEC4C MOV X2, X31
	0x034AEC50 BL 0x3314A68
	0x034AEC54 ADRP X0, 0xC84000
	0x034AEC58 LDR X0, [X0 + 0x2D0]
	0x034AEC5C BL 0x1C16D08
	0x034AEC60 MOV X1, X0
	0x034AEC64 MOV X0, X20
	0x034AEC68 BL 0x1C16DEC
	0x034AEC6C ADRP X0, 0xC4D000
	0x034AEC70 LDR X0, [X0 + 0x578]
	0x034AEC74 BL 0x1C16D08
	0x034AEC78 BL 0x1C16F10
	0x034AEC7C MOV X20, X0
	0x034AEC80 ADRP X0, 0xC81000
	0x034AEC84 LDR X0, [X0 + 0x128]
	0x034AEC88 BL 0x1C16D08
	0x034AEC8C MOV X1, X0
	0x034AEC90 MOV X0, X20
	0x034AEC94 MOV X2, X31
	0x034AEC98 BL 0x3314A68
	0x034AEC9C ADRP X0, 0xC84000
	0x034AECA0 LDR X0, [X0 + 0x2D0]
	0x034AECA4 BL 0x1C16D08
	0x034AECA8 MOV X1, X0
	0x034AECAC MOV X0, X20
	0x034AECB0 BL 0x1C16DEC
	0x034AECB4 ADRP X0, 0xC4D000
	0x034AECB8 LDR X0, [X0 + 0x578]
	0x034AECBC BL 0x1C16D08
	0x034AECC0 BL 0x1C16F10
	0x034AECC4 MOV X20, X0
	0x034AECC8 ADRP X0, 0xC80000
	0x034AECCC LDR X0, [X0 + 0xBC8]
	0x034AECD0 BL 0x1C16D08
	0x034AECD4 MOV X1, X0
	0x034AECD8 MOV X0, X20
	0x034AECDC MOV X2, X31
	0x034AECE0 BL 0x3314A68
	0x034AECE4 ADRP X0, 0xC84000
	0x034AECE8 LDR X0, [X0 + 0x2D0]
	0x034AECEC BL 0x1C16D08
	0x034AECF0 MOV X1, X0
	0x034AECF4 MOV X0, X20
	0x034AECF8 BL 0x1C16DEC
	0x034AECFC BL 0x1C16F20
	0x034AED00 BL 0x1C16F20
	0x034AED04 BL 0x1C16F20
	0x034AED08 BL 0x1C16F20
	0x034AED0C BL 0x1C16F20
	0x034AED10 BL 0x1C16F20
	0x034AED14 BL 0x1C16F20
	0x034AED18 BL 0x1C16F20
	0x034AED1C BL 0x1C16F20
	0x034AED20 B 0x34AED94
	0x034AED24 B 0x34AED94
	0x034AED28 B 0x34AED94
	0x034AED2C B 0x34AED94
	0x034AED30 B 0x34AED94
	0x034AED34 B 0x34AED94
	0x034AED38 B 0x34AED94
	0x034AED3C B 0x34AED94
	0x034AED40 B 0x34AED94
	0x034AED44 B 0x34AED94
	0x034AED48 B 0x34AED94
	0x034AED4C B 0x34AED94
	0x034AED50 B 0x34AED94
	0x034AED54 B 0x34AED94
	0x034AED58 B 0x34AED94
	0x034AED5C B 0x34AED94
	0x034AED60 B 0x34AED94
	0x034AED64 B 0x34AED94
	0x034AED68 B 0x34AED94
	0x034AED6C B 0x34AED94
	0x034AED70 B 0x34AED94
	0x034AED74 B 0x34AED94
	0x034AED78 B 0x34AED94
	0x034AED7C B 0x34AED94
	0x034AED80 B 0x34AED94
	0x034AED84 B 0x34AED94
	0x034AED88 B 0x34AED94
	0x034AED8C B 0x34AED94
	0x034AED90 B 0x34AED94
	0x034AED94 MOV X20, X0
	0x034AED98 CMP W1, 0x1
	0x034AED9C B.NE 0x34AEE38
	0x034AEDA0 MOV X0, X20
	0x034AEDA4 BL 0x3EB1AD0
	0x034AEDA8 MOV X20, X0
	0x034AEDAC ADRP X0, 0xC45000
	0x034AEDB0 LDR X0, [X0 + 0x7D0]
	0x034AEDB4 BL 0x1C16D08
	0x034AEDB8 LDR X8, [X20]
	0x034AEDBC LDR X1, [X8]
	0x034AEDC0 BL 0x1C17270
	0x034AEDC4 TBZ X0, 0x0, 0x34AEE10
	0x034AEDC8 LDR X20, [X20]
	0x034AEDCC BL 0x3EB1AE0
	0x034AEDD0 MOVN W8, 0x1
	0x034AEDD4 STR W8, [X19], #0x8
	0x034AEDD8 ADRP X0, 0xC83000
	0x034AEDDC LDR X0, [X0 + 0xE18]
	0x034AEDE0 BL 0x1C16D08
	0x034AEDE4 LDR W8, [X0 + 0xE0]
	0x034AEDE8 CBNZ W8, 0x34AEDF0
	0x034AEDEC BL 0x1C16DFC
	0x034AEDF0 ADRP X0, 0xC84000
	0x034AEDF4 LDR X0, [X0 + 0x2D8]
	0x034AEDF8 BL 0x1C16D08
	0x034AEDFC MOV X2, X0
	0x034AEE00 MOV X0, X19
	0x034AEE04 MOV X1, X20
	0x034AEE08 BL 0x26324C8
	0x034AEE0C B 0x34AEBC0
	0x034AEE10 MOVZ W0, 0x8
	0x034AEE14 BL 0x3EB1AF0
	0x034AEE18 LDR X8, [X20]
	0x034AEE1C STR X8, [X0]
	0x034AEE20 ADRP X1, 0xA06000
	0x034AEE24 ADD X1, X1, 0xE58
	0x034AEE28 MOV X2, X31
	0x034AEE2C BL 0x3EB1B00
	0x034AEE30 MOV X20, X0
	0x034AEE34 BL 0x3EB1AE0
	0x034AEE38 MOV X0, X20
	0x034AEE3C BL 0x1D2C690
	0x034AEE40 BL 0x1990590
	0x034AEE44 STR X30, [X31 - 0x30]!
	0x034AEE48 STP X22, X21, [X31 + 0x10]
	0x034AEE4C STP X20, X19, [X31 + 0x20]
	0x034AEE50 ADRP X22, 0xF2F000
	0x034AEE54 ADRP X21, 0xC83000
	0x034AEE58 LDRB W8, [X22 + 0xA31]
	0x034AEE5C LDR X21, [X21 + 0xE18]
	0x034AEE60 MOV X19, X1
	0x034AEE64 MOV X20, X0
	0x034AEE68 TBNZ X8, 0x0, 0x34AEE8C
	0x034AEE6C ADRP X0, 0xC84000
	0x034AEE70 LDR X0, [X0 + 0x2E0]
	0x034AEE74 BL 0x1C16CF4
	0x034AEE78 ADRP X0, 0xC83000
	0x034AEE7C LDR X0, [X0 + 0xE18]
	0x034AEE80 BL 0x1C16CF4
	0x034AEE84 MOVZ W8, 0x1
	0x034AEE88 STRB W8, [X22 + 0xA31]
	0x034AEE8C LDR X0, [X21]
	0x034AEE90 ADRP X21, 0xC84000
	0x034AEE94 LDR W8, [X0 + 0xE0]
	0x034AEE98 LDR X21, [X21 + 0x2E0]
	0x034AEE9C CBNZ W8, 0x34AEEA4
	0x034AEEA0 BL 0x1C16DFC
	0x034AEEA4 LDR X2, [X21]
	0x034AEEA8 ADD X0, X20, 0x8
	0x034AEEAC MOV X1, X19
	0x034AEEB0 LDP X20, X19, [X31 + 0x20]
	0x034AEEB4 LDP X22, X21, [X31 + 0x10]
	0x034AEEB8 LDR X30, [X31], #0x30
	0x034AEEBC B 0x2632228
	0x034AEEC0 LDR X8, [X0]
	0x034AEEC4 CMP X8, 0x0
	0x034AEEC8 CSET W0, GT
	0x034AEECC RET
	0x034AEED0 RET
	0x034AEED4 RET
	0x034AEED8 LDR X8, [X0]
	0x034AEEDC LDR X9, [X1]
	0x034AEEE0 CMP X8, X9
	0x034AEEE4 B.NE 0x34AEF0C
	0x034AEEE8 LDR X8, [X0 + 0x8]
	0x034AEEEC LDR X9, [X1 + 0x8]
	0x034AEEF0 CMP X8, X9
	0x034AEEF4 B.NE 0x34AEF0C
	0x034AEEF8 LDRH W8, [X0 + 0x10]
	0x034AEEFC LDRH W9, [X1 + 0x10]
	0x034AEF00 CMP W8, W9
	0x034AEF04 CSET W0, EQ
	0x034AEF08 RET
	0x034AEF0C MOV W0, W31
	0x034AEF10 RET
	0x034AEF14 STP X30, X21, [X31 - 0x20]!
	0x034AEF18 STP X20, X19, [X31 + 0x10]
	0x034AEF1C ADRP X21, 0xF2F000
	0x034AEF20 LDRB W8, [X21 + 0xA32]
	0x034AEF24 MOV X20, X1
	0x034AEF28 MOV X19, X0
	0x034AEF2C TBNZ X8, 0x0, 0x34AEF44
	0x034AEF30 ADRP X0, 0xC52000
	0x034AEF34 LDR X0, [X0 + 0xB10]
	0x034AEF38 BL 0x1C16CF4
	0x034AEF3C MOVZ W8, 0x1
	0x034AEF40 STRB W8, [X21 + 0xA32]
	0x034AEF44 CBZ X20, 0x34AEF9C
	0x034AEF48 ADRP X8, 0xC52000
	0x034AEF4C LDR X8, [X8 + 0xB10]
	0x034AEF50 LDR X9, [X20]
	0x034AEF54 LDR X8, [X8]
	0x034AEF58 CMP X9, X8
	0x034AEF5C B.NE 0x34AEF9C
	0x034AEF60 MOV X0, X20
	0x034AEF64 BL 0x1C16E08
	0x034AEF68 LDR X8, [X0]
	0x034AEF6C LDR X9, [X19]
	0x034AEF70 CMP X9, X8
	0x034AEF74 B.NE 0x34AEF9C
	0x034AEF78 LDR X8, [X0 + 0x8]
	0x034AEF7C LDR X9, [X19 + 0x8]
	0x034AEF80 CMP X9, X8
	0x034AEF84 B.NE 0x34AEF9C
	0x034AEF88 LDRH W8, [X0 + 0x10]
	0x034AEF8C LDRH W9, [X19 + 0x10]
	0x034AEF90 CMP W9, W8
	0x034AEF94 CSET W0, EQ
	0x034AEF98 B 0x34AEFA0
	0x034AEF9C MOV W0, W31
	0x034AEFA0 LDP X20, X19, [X31 + 0x10]
	0x034AEFA4 LDP X30, X21, [X31], #0x20
	0x034AEFA8 RET
	0x034AEFAC STP X30, X21, [X31 - 0x20]!
	0x034AEFB0 STP X20, X19, [X31 + 0x10]
	0x034AEFB4 MOV X1, X31
	0x034AEFB8 MOV X19, X0
	0x034AEFBC BL 0x339A95C
	0x034AEFC0 MOV W20, W0
	0x034AEFC4 ADD X0, X19, 0x8
	0x034AEFC8 MOV X1, X31
	0x034AEFCC BL 0x339A95C
	0x034AEFD0 MOV W21, W0
	0x034AEFD4 ADD X0, X19, 0x10
	0x034AEFD8 MOV X1, X31
	0x034AEFDC BL 0x3398CDC
	0x034AEFE0 UBFM W8, W20, 0x1B, 0x1A
	0x034AEFE4 SUB W8, W8, W20
	0x034AEFE8 ADD W8, W8, W21
	0x034AEFEC UBFM W9, W8, 0x1B, 0x1A
	0x034AEFF0 LDP X20, X19, [X31 + 0x10]
	0x034AEFF4 SUB W8, W9, W8
	0x034AEFF8 MOVZ W9, 0xBA4F
	0x034AEFFC ADD W8, W8, W0
	0x034AF000 MOVK W9, 0x70000
	0x034AF004 ADD W0, W8, W9
	0x034AF008 LDP X30, X21, [X31], #0x20
	0x034AF00C RET
	0x034AF010 SUB X31, X31, 0x70
	0x034AF014 STP X30, X25, [X31 + 0x30]
	0x034AF018 STP X24, X23, [X31 + 0x40]
	0x034AF01C STP X22, X21, [X31 + 0x50]
	0x034AF020 STP X20, X19, [X31 + 0x60]
	0x034AF024 MRS X22, 0xC000
	0x034AF028 LDR X8, [X22 + 0x28]
	0x034AF02C ADRP X21, 0xF2E000
	0x034AF030 ADRP X20, 0xC6C000
	0x034AF034 MOV X19, X0
	0x034AF038 STR X8, [X31 + 0x28]
	0x034AF03C LDRB W8, [X21 + 0xA33]
	0x034AF040 LDR X20, [X20 + 0x850]
	0x034AF044 TBNZ X8, 0x0, 0x34AF080
	0x034AF048 ADRP X0, 0xC6C000
	0x034AF04C LDR X0, [X0 + 0x850]
	0x034AF050 BL 0x1C16CF4
	0x034AF054 ADRP X0, 0xC49000
	0x034AF058 LDR X0, [X0 + 0x658]
	0x034AF05C BL 0x1C16CF4
	0x034AF060 ADRP X0, 0xC50000
	0x034AF064 LDR X0, [X0 + 0x5D8]
	0x034AF068 BL 0x1C16CF4
	0x034AF06C ADRP X0, 0xC83000
	0x034AF070 LDR X0, [X0 + 0x2E8]
	0x034AF074 BL 0x1C16CF4
	0x034AF078 MOVZ W8, 0x1
	0x034AF07C STRB W8, [X21 + 0xA33]
	0x034AF080 LDR X8, [X19 + 0x10]
	0x034AF084 LDR V0, [X19]
	0x034AF088 LDR X0, [X20]
	0x034AF08C ADRP X25, 0xC49000
	0x034AF090 STR X8, [X31 + 0x20]
	0x034AF094 STR V0, [X31 + 0x1]
	0x034AF098 ADRP X24, 0xC83000
	0x034AF09C ADRP X23, 0xC50000
	0x034AF0A0 LDR W8, [X0 + 0xE0]
	0x034AF0A4 LDR X25, [X25 + 0x658]
	0x034AF0A8 LDR X24, [X24 + 0x2E8]
	0x034AF0AC LDR X23, [X23 + 0x5D8]
	0x034AF0B0 CBNZ W8, 0x34AF0B8
	0x034AF0B4 BL 0x1C16DFC
	0x034AF0B8 MOVZ W0, 0x40
	0x034AF0BC MOV X1, X31
	0x034AF0C0 BL 0x32C098C
	0x034AF0C4 MOV X20, X0
	0x034AF0C8 ADD X0, X31, 0x10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF30000
	011 Move W8, [X20+2604]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC85000
	018 Move X0, [X0+656]
	019 Call 0x1C17CF4
	020 Move X0, 0xC49000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC47000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC47000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC47000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC81000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC49000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC49000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC49000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4F000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC48000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC85000
	051 Move X0, [X0+664]
	052 Call 0x1C17CF4
	053 Move X0, 0xC6F000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xC81000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC82000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC81000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC46000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2604], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC49000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC48000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC85000
	083 Move X8, [X8+664]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC82000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC46000
	105 Move X9, 0xC4F000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC6F000
	131 Move X9, 0xC47000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC47000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC81000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC81000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC47000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC81000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC49000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC49000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC49000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC85000
	245 Move X8, [X8+656]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC4E000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC82000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC85000
	274 Move X0, [X0+672]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC45000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC48000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA06000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AF0CC MOVZ W2, 0x40
	0x034AF0D0 MOV X1, X20
	0x034AF0D4 BL 0x34AF150
	0x034AF0D8 MOV X0, X20
	0x034AF0DC MOV X1, X31
	0x034AF0E0 BL 0x32C132C
	0x034AF0E4 MOV X21, X0
	0x034AF0E8 MOV X0, X20
	0x034AF0EC MOV X1, X31
	0x034AF0F0 BL 0x32C1064
	0x034AF0F4 LDRH W8, [X19 + 0x10]
	0x034AF0F8 LDR X0, [X25]
	0x034AF0FC ADD X1, X31, 0xC
	0x034AF100 STRH W8, [X31 + 0xC]
	0x034AF104 BL 0x1C16E04
	0x034AF108 LDR X8, [X24]
	0x034AF10C LDR X1, [X23]
	0x034AF110 MOV X3, X0
	0x034AF114 MOV X2, X21
	0x034AF118 MOV X0, X8
	0x034AF11C MOV X4, X31
	0x034AF120 BL 0x3227C18
	0x034AF124 LDR X8, [X22 + 0x28]
	0x034AF128 LDR X9, [X31 + 0x28]
	0x034AF12C CMP X8, X9
	0x034AF130 B.NE 0x34AF14C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF2F000
	007 Move X22, 0xC48000
	008 Move W8, [X21+2605]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC48000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2605], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

