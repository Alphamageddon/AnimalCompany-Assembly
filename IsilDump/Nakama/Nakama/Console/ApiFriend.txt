Type: Nakama.Console.ApiFriend

Method: System.Int32 get_State()

Disassembly:
	0x0349E568 LDR X0, [X0 + 0x8]
	0x0349E56C BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_State(System.Int32 value)

Disassembly:
	0x0349E570 ADRP X0, 0xC8F000
	0x0349E574 LDR X0, [X0 + 0xDD8]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: Nakama.Console.IApiUser get_User()

Disassembly:
	0x0349E578 BL 0x1C16CF4
	0x0349E57C ADRP X0, 0xC8F000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: Nakama.Console.ApiUser get__user()

Disassembly:
	0x0349E580 LDR X0, [X0 + 0xD88]
	0x0349E584 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__user(Nakama.Console.ApiUser value)

Disassembly:
	0x0349E588 ADRP X0, 0xC8F000
	0x0349E58C LDR X0, [X0 + 0xDE0]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0349E590 BL 0x1C16CF4
	0x0349E594 ADRP X0, 0xC55000
	0x0349E598 LDR X0, [X0 + 0x838]
	0x0349E59C BL 0x1C16CF4
	0x0349E5A0 ADRP X0, 0xC55000
	0x0349E5A4 LDR X0, [X0 + 0x988]
	0x0349E5A8 BL 0x1C16CF4
	0x0349E5AC ADRP X0, 0xC8F000
	0x0349E5B0 LDR X0, [X0 + 0xE10]
	0x0349E5B4 BL 0x1C16CF4
	0x0349E5B8 ADRP X0, 0xC8F000
	0x0349E5BC LDR X0, [X0 + 0xE20]
	0x0349E5C0 BL 0x1C16CF4
	0x0349E5C4 ADRP X0, 0xC8F000
	0x0349E5C8 LDR X0, [X0 + 0xE28]
	0x0349E5CC BL 0x1C16CF4
	0x0349E5D0 MOVZ W8, 0x1
	0x0349E5D4 STRB W8, [X20 + 0x9B0]
	0x0349E5D8 LDR X0, [X22]
	0x0349E5DC LDR X21, [X21]
	0x0349E5E0 MOVZ W1, 0x4
	0x0349E5E4 BL 0x1C16D6C
	0x0349E5E8 CBZ X0, 0x349E878
	0x0349E5EC MOV X20, X0
	0x0349E5F0 CBZ X21, 0x349E608
	0x0349E5F4 LDR X8, [X20]
	0x0349E5F8 MOV X0, X21
	0x0349E5FC LDR X1, [X8 + 0x40]
	0x0349E600 BL 0x1C16E00
	0x0349E604 CBZ X0, 0x349E86C
	0x0349E608 LDR W8, [X20 + 0x18]
	0x0349E60C CBZ W8, 0x349E868
	0x0349E610 ADRP X23, 0xC8F000
	0x0349E614 LDR X23, [X23 + 0xE20]
	0x0349E618 STR X21, [X20 + 0x20]
	0x0349E61C LDR X0, [X23]
	0x0349E620 CBZ X0, 0x349E638
	0x0349E624 LDR X8, [X20]
	0x0349E628 LDR X1, [X8 + 0x40]
	0x0349E62C BL 0x1C16E00
	0x0349E630 CBZ X0, 0x349E86C
	0x0349E634 LDR W8, [X20 + 0x18]
	0x0349E638 CMP W8, 0x1
	0x0349E63C B.LS 0x349E868
	0x0349E640 LDR X8, [X23]
	0x0349E644 ADRP X9, 0xC55000
	0x0349E648 LDR X9, [X9 + 0x758]
	0x0349E64C ADD X1, X31, 0xC
	0x0349E650 STR X8, [X20 + 0x28]
	0x0349E654 LDR W8, [X19 + 0x10]
	0x0349E658 LDR X0, [X9]
	0x0349E65C STR W8, [X31 + 0xC]
	0x0349E660 BL 0x1C16E04
	0x0349E664 MOV X21, X0
	0x0349E668 CBZ X0, 0x349E680
	0x0349E66C LDR X8, [X20]
	0x0349E670 MOV X0, X21
	0x0349E674 LDR X1, [X8 + 0x40]
	0x0349E678 BL 0x1C16E00
	0x0349E67C CBZ X0, 0x349E86C
	0x0349E680 LDR W8, [X20 + 0x18]
	0x0349E684 CMP W8, 0x2
	0x0349E688 B.LS 0x349E868
	0x0349E68C ADRP X23, 0xC55000
	0x0349E690 LDR X23, [X23 + 0x838]
	0x0349E694 STR X21, [X20 + 0x30]
	0x0349E698 LDR X0, [X23]
	0x0349E69C CBZ X0, 0x349E6B4
	0x0349E6A0 LDR X8, [X20]
	0x0349E6A4 LDR X1, [X8 + 0x40]
	0x0349E6A8 BL 0x1C16E00
	0x0349E6AC CBZ X0, 0x349E86C
	0x0349E6B0 LDR W8, [X20 + 0x18]
	0x0349E6B4 CMP W8, 0x3
	0x0349E6B8 B.LS 0x349E868
	0x0349E6BC LDR X8, [X23]
	0x0349E6C0 ADRP X21, 0xC8F000
	0x0349E6C4 ADRP X24, 0xC8F000
	0x0349E6C8 ADRP X25, 0xC8F000
	0x0349E6CC LDR X21, [X21 + 0xDD8]
	0x0349E6D0 LDR X24, [X24 + 0xDE0]
	0x0349E6D4 LDR X25, [X25 + 0xD88]
	0x0349E6D8 MOV X0, X20
	0x0349E6DC MOV X1, X31
	0x0349E6E0 STR X8, [X20 + 0x38]
	0x0349E6E4 BL 0x3227578
	0x0349E6E8 LDR X2, [X19 + 0x18]
	0x0349E6EC LDR X1, [X21]
	0x0349E6F0 LDR X3, [X23]
	0x0349E6F4 MOV X4, X31
	0x0349E6F8 BL 0x32277C4
	0x0349E6FC LDR X2, [X19 + 0x20]
	0x0349E700 LDR X1, [X24]
	0x0349E704 LDR X3, [X23]
	0x0349E708 MOV X4, X31
	0x0349E70C BL 0x32277C4
	0x0349E710 LDR X2, [X19 + 0x28]
	0x0349E714 LDR X1, [X25]
	0x0349E718 LDR X3, [X23]
	0x0349E71C MOV X4, X31
	0x0349E720 BL 0x32277C4
	0x0349E724 LDR X8, [X22]
	0x0349E728 MOV X21, X0
	0x0349E72C MOVZ W1, 0x4
	0x0349E730 MOV X0, X8
	0x0349E734 BL 0x1C16D6C
	0x0349E738 CBZ X0, 0x349E878
	0x0349E73C MOV X20, X0
	0x0349E740 CBZ X21, 0x349E758
	0x0349E744 LDR X8, [X20]
	0x0349E748 MOV X0, X21
	0x0349E74C LDR X1, [X8 + 0x40]
	0x0349E750 BL 0x1C16E00
	0x0349E754 CBZ X0, 0x349E86C
	0x0349E758 LDR W8, [X20 + 0x18]
	0x0349E75C CBZ W8, 0x349E868
	0x0349E760 ADRP X22, 0xC8F000
	0x0349E764 LDR X22, [X22 + 0xE28]
	0x0349E768 STR X21, [X20 + 0x20]
	0x0349E76C LDR X0, [X22]
	0x0349E770 CBZ X0, 0x349E788
	0x0349E774 LDR X8, [X20]
	0x0349E778 LDR X1, [X8 + 0x40]
	0x0349E77C BL 0x1C16E00
	0x0349E780 CBZ X0, 0x349E86C
	0x0349E784 LDR W8, [X20 + 0x18]
	0x0349E788 CMP W8, 0x1
	0x0349E78C B.LS 0x349E868
	0x0349E790 LDR X8, [X22]
	0x0349E794 ADRP X9, 0xC55000
	0x0349E798 LDR X9, [X9 + 0xB58]
	0x0349E79C ADD X1, X31, 0x8
	0x0349E7A0 STR X8, [X20 + 0x28]
	0x0349E7A4 LDRB W8, [X19 + 0x30]
	0x0349E7A8 LDR X0, [X9]
	0x0349E7AC STRB W8, [X31 + 0x8]
	0x0349E7B0 BL 0x1C16E04
	0x0349E7B4 MOV X21, X0
	0x0349E7B8 CBZ X0, 0x349E7D0
	0x0349E7BC LDR X8, [X20]
	0x0349E7C0 MOV X0, X21
	0x0349E7C4 LDR X1, [X8 + 0x40]
	0x0349E7C8 BL 0x1C16E00
	0x0349E7CC CBZ X0, 0x349E86C
	0x0349E7D0 LDR W8, [X20 + 0x18]
	0x0349E7D4 CMP W8, 0x2
	0x0349E7D8 B.LS 0x349E868
	0x0349E7DC STR X21, [X20 + 0x30]
	0x0349E7E0 LDR X0, [X23]
	0x0349E7E4 CBZ X0, 0x349E7FC
	0x0349E7E8 LDR X8, [X20]
	0x0349E7EC LDR X1, [X8 + 0x40]
	0x0349E7F0 BL 0x1C16E00
	0x0349E7F4 CBZ X0, 0x349E86C
	0x0349E7F8 LDR W8, [X20 + 0x18]
	0x0349E7FC CMP W8, 0x3
	0x0349E800 B.LS 0x349E868
	0x0349E804 LDR X8, [X23]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF40000
	009 Move X21, 0xC56000
	010 Move X22, 0xC56000
	011 Move W8, [X20+2475]
	012 Move X21, [X21+2440]
	013 Move X22, [X22+2512]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xC56000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xC56000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xC90000
	026 Move X0, [X0+3304]
	027 Call 0x1C17CF4
	028 Move X0, 0xC90000
	029 Move X0, [X0+3312]
	030 Call 0x1C17CF4
	031 Move X0, 0xC56000
	032 Move X0, [X0+2104]
	033 Call 0x1C17CF4
	034 Move X0, 0xC56000
	035 Move X0, [X0+2440]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2475], W8
	039 Move X0, [X22]
	040 Move X21, [X21]
	041 Move W1, 4
	042 Call 0x1C17D6C
	043 Compare X0, 0
	044 JumpIfEqual {181}
	045 Move X20, X0
	046 Compare X21, 0
	047 JumpIfEqual {54}
	048 Move X8, [X20]
	049 Move X0, X21
	050 Move X1, [X8+64]
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {178}
	054 Move W8, [X20+24]
	055 Compare W8, 0
	056 JumpIfEqual {177}
	057 Move X23, 0xC90000
	058 Move X23, [X23+3304]
	059 Move [X20+32], X21
	060 Move X0, [X23]
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, [X20]
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {178}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X23]
	071 Move X9, 0xC56000
	072 Move X9, [X9+1880]
	073 Add X1, X31, 12
	074 Move [X20+40], X8
	075 Move W8, [X19+16]
	076 Move X0, [X9]
	077 Move [X31+12], W8
	078 Call 0x1C17E04
	079 Move X21, X0
	080 Compare X0, 0
	081 JumpIfEqual {88}
	082 Move X8, [X20]
	083 Move X0, X21
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {178}
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X23, 0xC56000
	091 Move X23, [X23+2104]
	092 Move [X20+48], X21
	093 Move X0, [X23]
	094 Compare X0, 0
	095 JumpIfEqual {102}
	096 Move X8, [X20]
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {178}
	101 Move W8, [X20+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, [X23]
	104 Move X0, X20
	105 Move X1, X31
	106 Move [X20+56], X8
	107 Call String.Concat, X0
	108 Move X8, [X22]
	109 Move X21, X0
	110 Move W1, 4
	111 Move X0, X8
	112 Call 0x1C17D6C
	113 Compare X0, 0
	114 JumpIfEqual {181}
	115 Move X20, X0
	116 Compare X21, 0
	117 JumpIfEqual {124}
	118 Move X8, [X20]
	119 Move X0, X21
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {178}
	124 Move W8, [X20+24]
	125 Compare W8, 0
	126 JumpIfEqual {177}
	127 Move X22, 0xC90000
	128 Move X22, [X22+3312]
	129 Move [X20+32], X21
	130 Move X0, [X22]
	131 Compare X0, 0
	132 JumpIfEqual {139}
	133 Move X8, [X20]
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {178}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, [X22]
	141 Move [X20+40], X9
	142 Move X19, [X19+24]
	143 Compare X19, 0
	144 JumpIfEqual {152}
	145 Move X8, [X20]
	146 Move X0, X19
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {178}
	151 Move W8, [X20+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X20+48], X19
	154 Move X0, [X23]
	155 Compare X0, 0
	156 JumpIfEqual {163}
	157 Move X8, [X20]
	158 Move X1, [X8+64]
	159 Call 0x1C17E00
	160 Compare X0, 0
	161 JumpIfEqual {178}
	162 Move W8, [X20+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X8, [X23]
	165 Move X0, X20
	166 Move X1, X31
	167 Move [X20+56], X8
	168 Call String.Concat, X0
	169 Move X20, [X31+48]
	170 Move X19, [X31+56]
	171 Move X22, [X31+32]
	172 Move X21, [X31+40]
	173 Move X30, [X31+16]
	174 Move X23, [X31+24]
	175 Add X31, X31, 64
	176 Return X0
	177 Call 0x1C17F28
	178 Call 0x1C17F44
	179 Move X1, X31
	180 Call 0x1C17DEC
	181 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0349E808 ADRP X21, 0xC8F000
	0x0349E80C ADRP X22, 0xC90000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

