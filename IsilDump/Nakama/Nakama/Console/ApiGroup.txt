Type: Nakama.Console.ApiGroup

Method: System.String get_AvatarUrl()

Disassembly:
	0x0349E9B8 BL 0x1C16CF4
	0x0349E9BC ADRP X0, 0xC8F000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_AvatarUrl(System.String value)

Disassembly:
	0x0349E9C0 LDR X0, [X0 + 0xDE8]
	0x0349E9C4 BL 0x1C16CF4

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x0349E9C8 ADRP X0, 0xC90000
	0x0349E9CC LDR X0, [X0 + 0x78]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0349E9D0 BL 0x1C16CF4
	0x0349E9D4 ADRP X0, 0xC90000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_CreatorId()

Disassembly:
	0x0349E9D8 LDR X0, [X0 + 0x30]
	0x0349E9DC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_CreatorId(System.String value)

Disassembly:
	0x0349E9E0 ADRP X0, 0xC8F000
	0x0349E9E4 LDR X0, [X0 + 0xE88]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Description()

Disassembly:
	0x0349E9E8 BL 0x1C16CF4
	0x0349E9EC ADRP X0, 0xC55000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Description(System.String value)

Disassembly:
	0x0349E9F0 LDR X0, [X0 + 0x988]
	0x0349E9F4 BL 0x1C16CF4

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Int32 get_EdgeCount()

Disassembly:
	0x0349E9F8 ADRP X0, 0xC8F000
	0x0349E9FC LDR X0, [X0 + 0xE78]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_EdgeCount(System.Int32 value)

Disassembly:
	0x0349EA00 BL 0x1C16CF4
	0x0349EA04 MOVZ W8, 0x1

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.String get_Id()

Disassembly:
	0x0349EA08 STRB W8, [X25 + 0x9B1]
	0x0349EA0C LDR X0, [X26]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x0349EA10 LDR X2, [X19 + 0x10]
	0x0349EA14 LDR X1, [X24]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_LangTag()

Disassembly:
	0x0349EA18 LDR X3, [X22]
	0x0349EA1C MOV X4, X31

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_LangTag(System.String value)

Disassembly:
	0x0349EA20 BL 0x32277C4
	0x0349EA24 LDR X2, [X19 + 0x18]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Int32 get_MaxCount()

Disassembly:
	0x0349EA28 LDR X1, [X21]
	0x0349EA2C LDR X3, [X22]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_MaxCount(System.Int32 value)

Disassembly:
	0x0349EA30 MOV X4, X31
	0x0349EA34 BL 0x32277C4

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.String get_Metadata()

Disassembly:
	0x0349EA38 LDR X2, [X19 + 0x20]
	0x0349EA3C LDR X1, [X20]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Metadata(System.String value)

Disassembly:
	0x0349EA40 LDR X3, [X22]
	0x0349EA44 MOV X4, X31

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_Name()

Disassembly:
	0x0349EA48 BL 0x32277C4
	0x0349EA4C LDR X8, [X23]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x0349EA50 MOV X21, X0
	0x0349EA54 MOVZ W1, 0x4

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.Boolean get_Open()

Disassembly:
	0x0349EA58 MOV X0, X8
	0x0349EA5C BL 0x1C16D6C

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_Open(System.Boolean value)

Disassembly:
	0x0349EA60 CBZ X0, 0x349ECC4
	0x0349EA64 MOV X20, X0
	0x0349EA68 CBZ X21, 0x349EA80

ISIL:
	001 And W8, W1, 1
	002 Move [X0+96], W8
	003 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x0349EA6C LDR X8, [X20]
	0x0349EA70 MOV X0, X21

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x0349EA74 LDR X1, [X8 + 0x40]
	0x0349EA78 BL 0x1C16E00

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0349EA7C CBZ X0, 0x349ECB8
	0x0349EA80 LDR W8, [X20 + 0x18]
	0x0349EA84 CBZ W8, 0x349ECB4
	0x0349EA88 ADRP X24, 0xC90000
	0x0349EA8C LDR X24, [X24 + 0x78]
	0x0349EA90 STR X21, [X20 + 0x20]
	0x0349EA94 LDR X0, [X24]
	0x0349EA98 CBZ X0, 0x349EAB0
	0x0349EA9C LDR X8, [X20]
	0x0349EAA0 LDR X1, [X8 + 0x40]
	0x0349EAA4 BL 0x1C16E00
	0x0349EAA8 CBZ X0, 0x349ECB8
	0x0349EAAC LDR W8, [X20 + 0x18]
	0x0349EAB0 CMP W8, 0x1
	0x0349EAB4 B.LS 0x349ECB4
	0x0349EAB8 LDR X8, [X24]
	0x0349EABC ADRP X24, 0xC55000
	0x0349EAC0 LDR X24, [X24 + 0x758]
	0x0349EAC4 ADD X1, X31, 0xC
	0x0349EAC8 STR X8, [X20 + 0x28]
	0x0349EACC LDR W8, [X19 + 0x28]
	0x0349EAD0 LDR X0, [X24]
	0x0349EAD4 STR W8, [X31 + 0xC]
	0x0349EAD8 BL 0x1C16E04
	0x0349EADC MOV X21, X0
	0x0349EAE0 CBZ X0, 0x349EAF8
	0x0349EAE4 LDR X8, [X20]
	0x0349EAE8 MOV X0, X21
	0x0349EAEC LDR X1, [X8 + 0x40]
	0x0349EAF0 BL 0x1C16E00
	0x0349EAF4 CBZ X0, 0x349ECB8
	0x0349EAF8 LDR W8, [X20 + 0x18]
	0x0349EAFC CMP W8, 0x2
	0x0349EB00 B.LS 0x349ECB4
	0x0349EB04 STR X21, [X20 + 0x30]
	0x0349EB08 LDR X0, [X22]
	0x0349EB0C CBZ X0, 0x349EB24
	0x0349EB10 LDR X8, [X20]
	0x0349EB14 LDR X1, [X8 + 0x40]
	0x0349EB18 BL 0x1C16E00
	0x0349EB1C CBZ X0, 0x349ECB8
	0x0349EB20 LDR W8, [X20 + 0x18]
	0x0349EB24 CMP W8, 0x3
	0x0349EB28 B.LS 0x349ECB4
	0x0349EB2C LDR X8, [X22]
	0x0349EB30 MOV X0, X20
	0x0349EB34 MOV X1, X31
	0x0349EB38 STR X8, [X20 + 0x38]
	0x0349EB3C BL 0x3227578
	0x0349EB40 LDR X8, [X23]
	0x0349EB44 MOV X21, X0
	0x0349EB48 MOVZ W1, 0x4
	0x0349EB4C MOV X0, X8
	0x0349EB50 BL 0x1C16D6C
	0x0349EB54 CBZ X0, 0x349ECC4
	0x0349EB58 MOV X20, X0
	0x0349EB5C CBZ X21, 0x349EB74
	0x0349EB60 LDR X8, [X20]
	0x0349EB64 MOV X0, X21
	0x0349EB68 LDR X1, [X8 + 0x40]
	0x0349EB6C BL 0x1C16E00
	0x0349EB70 CBZ X0, 0x349ECB8
	0x0349EB74 LDR W8, [X20 + 0x18]
	0x0349EB78 CBZ W8, 0x349ECB4
	0x0349EB7C ADRP X23, 0xC90000
	0x0349EB80 LDR X23, [X23 + 0x70]
	0x0349EB84 STR X21, [X20 + 0x20]
	0x0349EB88 LDR X0, [X23]
	0x0349EB8C CBZ X0, 0x349EBA4
	0x0349EB90 LDR X8, [X20]
	0x0349EB94 LDR X1, [X8 + 0x40]
	0x0349EB98 BL 0x1C16E00
	0x0349EB9C CBZ X0, 0x349ECB8
	0x0349EBA0 LDR W8, [X20 + 0x18]
	0x0349EBA4 CMP W8, 0x1
	0x0349EBA8 B.LS 0x349ECB4
	0x0349EBAC LDR X8, [X23]
	0x0349EBB0 ADD X1, X31, 0x8
	0x0349EBB4 STR X8, [X20 + 0x28]
	0x0349EBB8 LDR W8, [X19 + 0x2C]
	0x0349EBBC LDR X0, [X24]
	0x0349EBC0 STR W8, [X31 + 0x8]
	0x0349EBC4 BL 0x1C16E04
	0x0349EBC8 MOV X21, X0
	0x0349EBCC CBZ X0, 0x349EBE4
	0x0349EBD0 LDR X8, [X20]
	0x0349EBD4 MOV X0, X21
	0x0349EBD8 LDR X1, [X8 + 0x40]
	0x0349EBDC BL 0x1C16E00
	0x0349EBE0 CBZ X0, 0x349ECB8
	0x0349EBE4 LDR W8, [X20 + 0x18]
	0x0349EBE8 CMP W8, 0x2
	0x0349EBEC B.LS 0x349ECB4
	0x0349EBF0 STR X21, [X20 + 0x30]
	0x0349EBF4 LDR X0, [X22]
	0x0349EBF8 CBZ X0, 0x349EC10
	0x0349EBFC LDR X8, [X20]
	0x0349EC00 LDR X1, [X8 + 0x40]
	0x0349EC04 BL 0x1C16E00
	0x0349EC08 CBZ X0, 0x349ECB8
	0x0349EC0C LDR W8, [X20 + 0x18]
	0x0349EC10 CMP W8, 0x3
	0x0349EC14 B.LS 0x349ECB4
	0x0349EC18 ADRP X21, 0xC8F000
	0x0349EC1C LDR X21, [X21 + 0xDE8]
	0x0349EC20 LDR X8, [X22]
	0x0349EC24 ADRP X23, 0xC90000
	0x0349EC28 ADRP X24, 0xC82000
	0x0349EC2C ADRP X25, 0xC8F000
	0x0349EC30 LDR X23, [X23 + 0x30]
	0x0349EC34 LDR X24, [X24 + 0xBB8]
	0x0349EC38 LDR X25, [X25 + 0xE88]
	0x0349EC3C MOV X0, X20
	0x0349EC40 MOV X1, X31
	0x0349EC44 STR X8, [X20 + 0x38]
	0x0349EC48 BL 0x3227578
	0x0349EC4C LDR X2, [X19 + 0x30]
	0x0349EC50 LDR X1, [X21]
	0x0349EC54 LDR X3, [X22]
	0x0349EC58 MOV X4, X31
	0x0349EC5C BL 0x32277C4
	0x0349EC60 LDR X2, [X19 + 0x38]
	0x0349EC64 LDR X1, [X23]
	0x0349EC68 LDR X3, [X22]
	0x0349EC6C MOV X4, X31
	0x0349EC70 BL 0x32277C4
	0x0349EC74 LDR X2, [X19 + 0x40]
	0x0349EC78 LDR X1, [X24]
	0x0349EC7C LDR X3, [X22]
	0x0349EC80 MOV X4, X31
	0x0349EC84 BL 0x32277C4
	0x0349EC88 LDR X2, [X19 + 0x48]
	0x0349EC8C LDR X1, [X25]
	0x0349EC90 LDR X3, [X22]
	0x0349EC94 MOV X4, X31
	0x0349EC98 BL 0x32277C4
	0x0349EC9C LDP X20, X19, [X31 + 0x40]
	0x0349ECA0 LDP X22, X21, [X31 + 0x30]
	0x0349ECA4 LDP X24, X23, [X31 + 0x20]
	0x0349ECA8 LDP X26, X25, [X31 + 0x10]
	0x0349ECAC LDR X30, [X31], #0x50
	0x0349ECB0 RET
	0x0349ECB4 BL 0x1C16F28
	0x0349ECB8 BL 0x1C16F44
	0x0349ECBC MOV X1, X31
	0x0349ECC0 BL 0x1C16DEC
	0x0349ECC4 BL 0x1C16F20
	0x0349ECC8 MOV X1, X31
	0x0349ECCC B 0x33BDD8C
	0x0349ECD0 LDR X0, [X0 + 0x10]
	0x0349ECD4 RET
	0x0349ECD8 STR X1, [X0 + 0x10]
	0x0349ECDC RET
	0x0349ECE0 LDR X0, [X0 + 0x18]
	0x0349ECE4 RET
	0x0349ECE8 STR X1, [X0 + 0x18]
	0x0349ECEC RET
	0x0349ECF0 LDR X0, [X0 + 0x20]
	0x0349ECF4 RET
	0x0349ECF8 STR X1, [X0 + 0x20]
	0x0349ECFC RET
	0x0349ED00 LDR X0, [X0 + 0x28]
	0x0349ED04 RET
	0x0349ED08 STR X1, [X0 + 0x28]
	0x0349ED0C RET
	0x0349ED10 STR X30, [X31 - 0x50]!
	0x0349ED14 STP X26, X25, [X31 + 0x10]
	0x0349ED18 STP X24, X23, [X31 + 0x20]
	0x0349ED1C STP X22, X21, [X31 + 0x30]
	0x0349ED20 STP X20, X19, [X31 + 0x40]
	0x0349ED24 ADRP X26, 0xF3F000
	0x0349ED28 ADRP X24, 0xC55000
	0x0349ED2C ADRP X25, 0xC8F000
	0x0349ED30 ADRP X20, 0xC55000
	0x0349ED34 ADRP X23, 0xC8F000
	0x0349ED38 ADRP X22, 0xC90000
	0x0349ED3C ADRP X21, 0xC8F000
	0x0349ED40 LDR X24, [X24 + 0x988]
	0x0349ED44 LDRB W8, [X26 + 0x9B2]
	0x0349ED48 LDR X25, [X25 + 0xE78]
	0x0349ED4C LDR X20, [X20 + 0x838]
	0x0349ED50 LDR X23, [X23 + 0xE80]
	0x0349ED54 LDR X22, [X22 + 0x30]
	0x0349ED58 LDR X21, [X21 + 0xE88]
	0x0349ED5C MOV X19, X0
	0x0349ED60 TBNZ X8, 0x0, 0x349EDB4
	0x0349ED64 ADRP X0, 0xC8F000
	0x0349ED68 LDR X0, [X0 + 0xE80]
	0x0349ED6C BL 0x1C16CF4
	0x0349ED70 ADRP X0, 0xC55000
	0x0349ED74 LDR X0, [X0 + 0x838]
	0x0349ED78 BL 0x1C16CF4
	0x0349ED7C ADRP X0, 0xC90000
	0x0349ED80 LDR X0, [X0 + 0x30]
	0x0349ED84 BL 0x1C16CF4
	0x0349ED88 ADRP X0, 0xC8F000
	0x0349ED8C LDR X0, [X0 + 0xE88]
	0x0349ED90 BL 0x1C16CF4
	0x0349ED94 ADRP X0, 0xC55000
	0x0349ED98 LDR X0, [X0 + 0x988]
	0x0349ED9C BL 0x1C16CF4
	0x0349EDA0 ADRP X0, 0xC8F000
	0x0349EDA4 LDR X0, [X0 + 0xE78]
	0x0349EDA8 BL 0x1C16CF4
	0x0349EDAC MOVZ W8, 0x1
	0x0349EDB0 STRB W8, [X26 + 0x9B2]
	0x0349EDB4 LDR X2, [X19 + 0x10]
	0x0349EDB8 LDR X0, [X24]
	0x0349EDBC LDR X1, [X25]
	0x0349EDC0 LDR X3, [X20]
	0x0349EDC4 MOV X4, X31
	0x0349EDC8 BL 0x32277C4
	0x0349EDCC LDR X2, [X19 + 0x18]
	0x0349EDD0 LDR X1, [X23]
	0x0349EDD4 LDR X3, [X20]
	0x0349EDD8 MOV X4, X31
	0x0349EDDC BL 0x32277C4
	0x0349EDE0 LDR X2, [X19 + 0x20]
	0x0349EDE4 LDR X1, [X22]
	0x0349EDE8 LDR X3, [X20]
	0x0349EDEC MOV X4, X31
	0x0349EDF0 BL 0x32277C4
	0x0349EDF4 LDR X2, [X19 + 0x28]
	0x0349EDF8 LDR X1, [X21]
	0x0349EDFC LDR X3, [X20]
	0x0349EE00 LDP X20, X19, [X31 + 0x40]
	0x0349EE04 LDP X22, X21, [X31 + 0x30]
	0x0349EE08 LDP X24, X23, [X31 + 0x20]
	0x0349EE0C LDP X26, X25, [X31 + 0x10]
	0x0349EE10 MOV X4, X31
	0x0349EE14 LDR X30, [X31], #0x50
	0x0349EE18 B 0x32277C4
	0x0349EE1C MOV X1, X31
	0x0349EE20 B 0x33BDD8C
	0x0349EE24 LDR X0, [X0 + 0x10]
	0x0349EE28 RET
	0x0349EE2C STR X1, [X0 + 0x10]
	0x0349EE30 RET
	0x0349EE34 LDR X0, [X0 + 0x18]
	0x0349EE38 RET
	0x0349EE3C STR X1, [X0 + 0x18]
	0x0349EE40 RET
	0x0349EE44 LDR X0, [X0 + 0x20]
	0x0349EE48 RET
	0x0349EE4C STR X1, [X0 + 0x20]
	0x0349EE50 RET
	0x0349EE54 LDR W0, [X0 + 0x28]
	0x0349EE58 RET
	0x0349EE5C STR W1, [X0 + 0x28]
	0x0349EE60 RET
	0x0349EE64 LDR X0, [X0 + 0x30]
	0x0349EE68 RET
	0x0349EE6C STR X1, [X0 + 0x30]
	0x0349EE70 RET
	0x0349EE74 LDR X0, [X0 + 0x38]
	0x0349EE78 RET
	0x0349EE7C STR X1, [X0 + 0x38]
	0x0349EE80 RET
	0x0349EE84 LDR X0, [X0 + 0x40]
	0x0349EE88 RET
	0x0349EE8C STR X1, [X0 + 0x40]
	0x0349EE90 RET
	0x0349EE94 LDR X0, [X0 + 0x48]
	0x0349EE98 RET
	0x0349EE9C STR X1, [X0 + 0x48]
	0x0349EEA0 RET
	0x0349EEA4 LDR X0, [X0 + 0x50]
	0x0349EEA8 RET
	0x0349EEAC STR X1, [X0 + 0x50]
	0x0349EEB0 RET
	0x0349EEB4 LDR X0, [X0 + 0x58]
	0x0349EEB8 RET
	0x0349EEBC STR X1, [X0 + 0x58]
	0x0349EEC0 RET
	0x0349EEC4 LDR X0, [X0 + 0x60]
	0x0349EEC8 RET
	0x0349EECC STR X1, [X0 + 0x60]
	0x0349EED0 RET
	0x0349EED4 LDR X0, [X0 + 0x68]
	0x0349EED8 RET
	0x0349EEDC STR X1, [X0 + 0x68]
	0x0349EEE0 RET
	0x0349EEE4 LDRB W0, [X0 + 0x70]
	0x0349EEE8 RET
	0x0349EEEC AND W8, W1, 0x1
	0x0349EEF0 STRB W8, [X0 + 0x70]
	0x0349EEF4 RET
	0x0349EEF8 LDR X0, [X0 + 0x78]
	0x0349EEFC RET
	0x0349EF00 STR X1, [X0 + 0x78]
	0x0349EF04 RET
	0x0349EF08 LDR X0, [X0 + 0x80]
	0x0349EF0C RET
	0x0349EF10 STR X1, [X0 + 0x80]
	0x0349EF14 RET
	0x0349EF18 LDR X0, [X0 + 0x88]
	0x0349EF1C RET
	0x0349EF20 STR X1, [X0 + 0x88]
	0x0349EF24 RET
	0x0349EF28 LDR X0, [X0 + 0x90]
	0x0349EF2C RET
	0x0349EF30 STR X1, [X0 + 0x90]
	0x0349EF34 RET
	0x0349EF38 SUB X31, X31, 0x70
	0x0349EF3C STP X29, X30, [X31 + 0x10]
	0x0349EF40 STP X28, X27, [X31 + 0x20]
	0x0349EF44 STP X26, X25, [X31 + 0x30]
	0x0349EF48 STP X24, X23, [X31 + 0x40]
	0x0349EF4C STP X22, X21, [X31 + 0x50]
	0x0349EF50 STP X20, X19, [X31 + 0x60]
	0x0349EF54 ADRP X25, 0xF3F000
	0x0349EF58 ADRP X26, 0xC55000
	0x0349EF5C ADRP X24, 0xC8F000
	0x0349EF60 ADRP X22, 0xC55000
	0x0349EF64 ADRP X21, 0xC8F000
	0x0349EF68 ADRP X20, 0xC90000
	0x0349EF6C ADRP X23, 0xC55000
	0x0349EF70 LDR X26, [X26 + 0x988]
	0x0349EF74 LDRB W8, [X25 + 0x9B3]
	0x0349EF78 LDR X24, [X24 + 0xCC8]
	0x0349EF7C LDR X22, [X22 + 0x838]
	0x0349EF80 LDR X21, [X21 + 0xDE0]
	0x0349EF84 LDR X20, [X20 + 0x160]
	0x0349EF88 LDR X23, [X23 + 0x9D0]
	0x0349EF8C MOV X19, X0
	0x0349EF90 TBNZ X8, 0x0, 0x349F0A4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xF40000
	013 Move X27, 0xC56000
	014 Move X25, 0xC90000
	015 Move X22, 0xC56000
	016 Move X24, 0xC90000
	017 Move X21, 0xC90000
	018 Move X20, 0xC90000
	019 Move X23, 0xC56000
	020 Move X27, [X27+2440]
	021 Move X25, [X25+3272]
	022 Move W8, [X26+2478]
	023 Move X22, [X22+2104]
	024 Move X24, [X24+3552]
	025 Move X21, [X21+3824]
	026 Move X20, [X20+3280]
	027 Move X23, [X23+2512]
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {86}
	033 Move X0, 0xC56000
	034 Move X0, [X0+2904]
	035 Call 0x1C17CF4
	036 Move X0, 0xC56000
	037 Move X0, [X0+1880]
	038 Call 0x1C17CF4
	039 Move X0, 0xC56000
	040 Move X0, [X0+2512]
	041 Call 0x1C17CF4
	042 Move X0, 0xC90000
	043 Move X0, [X0+3464]
	044 Call 0x1C17CF4
	045 Move X0, 0xC90000
	046 Move X0, [X0+3824]
	047 Call 0x1C17CF4
	048 Move X0, 0xC90000
	049 Move X0, [X0+3288]
	050 Call 0x1C17CF4
	051 Move X0, 0xC57000
	052 Move X0, [X0+3808]
	053 Call 0x1C17CF4
	054 Move X0, 0xC90000
	055 Move X0, [X0+3552]
	056 Call 0x1C17CF4
	057 Move X0, 0xC56000
	058 Move X0, [X0+2104]
	059 Call 0x1C17CF4
	060 Move X0, 0xC90000
	061 Move X0, [X0+3328]
	062 Call 0x1C17CF4
	063 Move X0, 0xC90000
	064 Move X0, [X0+3560]
	065 Call 0x1C17CF4
	066 Move X0, 0xC90000
	067 Move X0, [X0+3696]
	068 Call 0x1C17CF4
	069 Move X0, 0xC90000
	070 Move X0, [X0+3296]
	071 Call 0x1C17CF4
	072 Move X0, 0xC90000
	073 Move X0, [X0+3272]
	074 Call 0x1C17CF4
	075 Move X0, 0xC56000
	076 Move X0, [X0+2440]
	077 Call 0x1C17CF4
	078 Move X0, 0xC90000
	079 Move X0, [X0+3832]
	080 Call 0x1C17CF4
	081 Move X0, 0xC90000
	082 Move X0, [X0+3280]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X26+2478], W8
	086 Move X0, [X27]
	087 Move X2, [X19+16]
	088 Move X1, [X25]
	089 Move X3, [X22]
	090 Move X4, X31
	091 Call String.Concat, X0, X1, X2, X3
	092 Move X2, [X19+24]
	093 Move X1, [X24]
	094 Move X3, [X22]
	095 Move X4, X31
	096 Call String.Concat, X0, X1, X2, X3
	097 Move X2, [X19+32]
	098 Move X1, [X21]
	099 Move X3, [X22]
	100 Move X4, X31
	101 Call String.Concat, X0, X1, X2, X3
	102 Move X2, [X19+40]
	103 Move X1, [X20]
	104 Move X3, [X22]
	105 Move X4, X31
	106 Call String.Concat, X0, X1, X2, X3
	107 Move X8, [X23]
	108 Move X21, X0
	109 Move W1, 4
	110 Move X0, X8
	111 Call 0x1C17D6C
	112 Compare X0, 0
	113 JumpIfEqual {360}
	114 Move X20, X0
	115 Compare X21, 0
	116 JumpIfEqual {123}
	117 Move X8, [X20]
	118 Move X0, X21
	119 Move X1, [X8+64]
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {357}
	123 Move W8, [X20+24]
	124 Compare W8, 0
	125 JumpIfEqual {356}
	126 Move X24, 0xC90000
	127 Move X24, [X24+3832]
	128 Move [X20+32], X21
	129 Move X0, [X24]
	130 Compare X0, 0
	131 JumpIfEqual {138}
	132 Move X8, [X20]
	133 Move X1, [X8+64]
	134 Call 0x1C17E00
	135 Compare X0, 0
	136 JumpIfEqual {357}
	137 Move W8, [X20+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X24]
	140 Move X24, 0xC56000
	141 Move X24, [X24+1880]
	142 Add X1, X31, 12
	143 Move [X20+40], X8
	144 Move W8, [X19+48]
	145 Move X0, [X24]
	146 Move [X31+12], W8
	147 Call 0x1C17E04
	148 Move X21, X0
	149 Compare X0, 0
	150 JumpIfEqual {157}
	151 Move X8, [X20]
	152 Move X0, X21
	153 Move X1, [X8+64]
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {357}
	157 Move W8, [X20+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move [X20+48], X21
	160 Move X0, [X22]
	161 Compare X0, 0
	162 JumpIfEqual {169}
	163 Move X8, [X20]
	164 Move X1, [X8+64]
	165 Call 0x1C17E00
	166 Compare X0, 0
	167 JumpIfEqual {357}
	168 Move W8, [X20+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X8, [X22]
	171 Move X21, 0xC90000
	172 Move X25, 0xC90000
	173 Move X21, [X21+3464]
	174 Move X25, [X25+3288]
	175 Move X0, X20
	176 Move X1, X31
	177 Move [X20+56], X8
	178 Call String.Concat, X0
	179 Move X2, [X19+56]
	180 Move X1, [X21]
	181 Move X3, [X22]
	182 Move X4, X31
	183 Call String.Concat, X0, X1, X2, X3
	184 Move X2, [X19+64]
	185 Move X1, [X25]
	186 Move X3, [X22]
	187 Move X4, X31
	188 Call String.Concat, X0, X1, X2, X3
	189 Move X8, [X23]
	190 Move X21, X0
	191 Move W1, 4
	192 Move X0, X8
	193 Call 0x1C17D6C
	194 Compare X0, 0
	195 JumpIfEqual {360}
	196 Move X20, X0
	197 Compare X21, 0
	198 JumpIfEqual {205}
	199 Move X8, [X20]
	200 Move X0, X21
	201 Move X1, [X8+64]
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {357}
	205 Move W8, [X20+24]
	206 Compare W8, 0
	207 JumpIfEqual {356}
	208 Move X25, 0xC90000
	209 Move X25, [X25+3696]
	210 Move [X20+32], X21
	211 Move X0, [X25]
	212 Compare X0, 0
	213 JumpIfEqual {220}
	214 Move X8, [X20]
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {357}
	219 Move W8, [X20+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X8, [X25]
	222 Add X1, X31, 8
	223 Move [X20+40], X8
	224 Move W8, [X19+72]
	225 Move X0, [X24]
	226 Move [X31+8], W8
	227 Call 0x1C17E04
	228 Move X21, X0
	229 Compare X0, 0
	230 JumpIfEqual {237}
	231 Move X8, [X20]
	232 Move X0, X21
	233 Move X1, [X8+64]
	234 Call 0x1C17E00
	235 Compare X0, 0
	236 JumpIfEqual {357}
	237 Move W8, [X20+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move [X20+48], X21
	240 Move X0, [X22]
	241 Compare X0, 0
	242 JumpIfEqual {249}
	243 Move X8, [X20]
	244 Move X1, [X8+64]
	245 Call 0x1C17E00
	246 Compare X0, 0
	247 JumpIfEqual {357}
	248 Move W8, [X20+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, [X22]
	251 Move X21, 0xC90000
	252 Move X24, 0xC57000
	253 Move X21, [X21+3328]
	254 Move X24, [X24+3808]
	255 Move X0, X20
	256 Move X1, X31
	257 Move [X20+56], X8
	258 Call String.Concat, X0
	259 Move X2, [X19+80]
	260 Move X1, [X21]
	261 Move X3, [X22]
	262 Move X4, X31
	263 Call String.Concat, X0, X1, X2, X3
	264 Move X2, [X19+88]
	265 Move X1, [X24]
	266 Move X3, [X22]
	267 Move X4, X31
	268 Call String.Concat, X0, X1, X2, X3
	269 Move X8, [X23]
	270 Move X21, X0
	271 Move W1, 4
	272 Move X0, X8
	273 Call 0x1C17D6C
	274 Compare X0, 0
	275 JumpIfEqual {360}
	276 Move X20, X0
	277 Compare X21, 0
	278 JumpIfEqual {285}
	279 Move X8, [X20]
	280 Move X0, X21
	281 Move X1, [X8+64]
	282 Call 0x1C17E00
	283 Compare X0, 0
	284 JumpIfEqual {357}
	285 Move W8, [X20+24]
	286 Compare W8, 0
	287 JumpIfEqual {356}
	288 Move X23, 0xC90000
	289 Move X23, [X23+3296]
	290 Move [X20+32], X21
	291 Move X0, [X23]
	292 Compare X0, 0
	293 JumpIfEqual {300}
	294 Move X8, [X20]
	295 Move X1, [X8+64]
	296 Call 0x1C17E00
	297 Compare X0, 0
	298 JumpIfEqual {357}
	299 Move W8, [X20+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X8, [X23]
	302 Move X9, 0xC56000
	303 Move X9, [X9+2904]
	304 Add X1, X31, 4
	305 Move [X20+40], X8
	306 Move W8, [X19+96]
	307 Move X0, [X9]
	308 Move [X31+4], W8
	309 Call 0x1C17E04
	310 Move X21, X0
	311 Compare X0, 0
	312 JumpIfEqual {319}
	313 Move X8, [X20]
	314 Move X0, X21
	315 Move X1, [X8+64]
	316 Call 0x1C17E00
	317 Compare X0, 0
	318 JumpIfEqual {357}
	319 Move W8, [X20+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move [X20+48], X21
	322 Move X0, [X22]
	323 Compare X0, 0
	324 JumpIfEqual {331}
	325 Move X8, [X20]
	326 Move X1, [X8+64]
	327 Call 0x1C17E00
	328 Compare X0, 0
	329 JumpIfEqual {357}
	330 Move W8, [X20+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X8, [X22]
	333 Move X21, 0xC90000
	334 Move X21, [X21+3560]
	335 Move X0, X20
	336 Move X1, X31
	337 Move [X20+56], X8
	338 Call String.Concat, X0
	339 Move X2, [X19+104]
	340 Move X1, [X21]
	341 Move X3, [X22]
	342 Move X4, X31
	343 Call String.Concat, X0, X1, X2, X3
	344 Move X20, [X31+80]
	345 Move X19, [X31+88]
	346 Move X22, [X31+64]
	347 Move X21, [X31+72]
	348 Move X24, [X31+48]
	349 Move X23, [X31+56]
	350 Move X26, [X31+32]
	351 Move X25, [X31+40]
	352 Move X30, [X31+16]
	353 Move X27, [X31+24]
	354 Add X31, X31, 96
	355 Return X0
	356 Call 0x1C17F28
	357 Call 0x1C17F44
	358 Move X1, X31
	359 Call 0x1C17DEC
	360 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0349EF94 ADRP X0, 0xC55000
	0x0349EF98 LDR X0, [X0 + 0xB58]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

