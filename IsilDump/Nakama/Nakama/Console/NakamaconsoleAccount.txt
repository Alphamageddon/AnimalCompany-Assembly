Type: Nakama.Console.NakamaconsoleAccount

Method: Nakama.Console.INakamaapiAccount get_Account()

Disassembly:
	0x034A2388 MOVI V0.2D, 0x0
	0x034A238C STR X31, [X31 + 0x60]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: Nakama.Console.NakamaapiAccount get__account()

Disassembly:
	0x034A2390 STP V0, V0, [X31 + 0x40]
	0x034A2394 STP V0, V0, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__account(Nakama.Console.NakamaapiAccount value)

Disassembly:
	0x034A2398 ADRP X23, 0xC8F000
	0x034A239C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_DisableTime()

Disassembly:
	0x034A23A0 LDR X23, [X23 + 0xC78]
	0x034A23A4 CBNZ W8, 0x34A23AC

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_DisableTime(System.String value)

Disassembly:
	0x034A23A8 BL 0x1C16DFC
	0x034A23AC ADD X8, X31, 0x8

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034A23B0 MOV X0, X31
	0x034A23B4 BL 0x32C4770
	0x034A23B8 LDUR V0, [X31 + 0x8]
	0x034A23BC LDR X9, [X31 + 0x18]
	0x034A23C0 LDR X2, [X23]
	0x034A23C4 ADD X8, X31, 0x20
	0x034A23C8 STP X19, X20, [X31 + 0x40]
	0x034A23CC ORR X20, X8, 0xF
	0x034A23D0 MOVN W10, 0x0
	0x034A23D4 ADD X1, X31, 0x20
	0x034A23D8 MOV X0, X20
	0x034A23DC STP X22, X21, [X31 + 0x50]
	0x034A23E0 STUR V0, [X31 + 0x28]
	0x034A23E4 STR X9, [X31 + 0x38]
	0x034A23E8 STR W10, [X31 + 0x20]
	0x034A23EC BL 0x21907B8
	0x034A23F0 MOV X0, X20
	0x034A23F4 MOV X1, X31
	0x034A23F8 BL 0x32C47F8
	0x034A23FC LDP X20, X19, [X31 + 0xA0]
	0x034A2400 LDP X22, X21, [X31 + 0x90]
	0x034A2404 LDP X24, X23, [X31 + 0x80]
	0x034A2408 LDR X30, [X31 + 0x70]
	0x034A240C ADD X31, X31, 0xB0
	0x034A2410 RET
	0x034A2414 SUB X31, X31, 0x90
	0x034A2418 STP X30, X23, [X31 + 0x60]
	0x034A241C STP X22, X21, [X31 + 0x70]
	0x034A2420 STP X20, X19, [X31 + 0x80]
	0x034A2424 ADRP X23, 0xF3B000
	0x034A2428 ADRP X22, 0xC54000
	0x034A242C LDRB W8, [X23 + 0x9D8]
	0x034A2430 LDR X22, [X22 + 0x280]
	0x034A2434 MOV X19, X2
	0x034A2438 MOV X20, X1
	0x034A243C MOV X21, X0
	0x034A2440 TBNZ X8, 0x0, 0x34A2464
	0x034A2444 ADRP X0, 0xC8F000
	0x034A2448 LDR X0, [X0 + 0xC80]
	0x034A244C BL 0x1C16CF4
	0x034A2450 ADRP X0, 0xC54000
	0x034A2454 LDR X0, [X0 + 0x280]
	0x034A2458 BL 0x1C16CF4
	0x034A245C MOVZ W8, 0x1
	0x034A2460 STRB W8, [X23 + 0x9D8]
	0x034A2464 LDR X0, [X22]
	0x034A2468 MOVI V0.2D, 0x0
	0x034A246C STP V0, V0, [X31 + 0x40]
	0x034A2470 STP V0, V0, [X31 + 0x20]
	0x034A2474 ADRP X22, 0xC8F000
	0x034A2478 LDR W8, [X0 + 0xE0]
	0x034A247C LDR X22, [X22 + 0xC80]
	0x034A2480 CBNZ W8, 0x34A2488
	0x034A2484 BL 0x1C16DFC
	0x034A2488 ADD X8, X31, 0x8
	0x034A248C MOV X0, X31
	0x034A2490 BL 0x32C4770
	0x034A2494 LDUR V0, [X31 + 0x8]
	0x034A2498 LDR X9, [X31 + 0x18]
	0x034A249C LDR X2, [X22]
	0x034A24A0 ADD X8, X31, 0x20
	0x034A24A4 STP X21, X20, [X31 + 0x48]
	0x034A24A8 ORR X20, X8, 0xF
	0x034A24AC MOVN W10, 0x0
	0x034A24B0 ADD X1, X31, 0x20
	0x034A24B4 MOV X0, X20
	0x034A24B8 STUR V0, [X31 + 0x28]
	0x034A24BC STP X9, X19, [X31 + 0x38]
	0x034A24C0 STR W10, [X31 + 0x20]
	0x034A24C4 BL 0x218F5B8
	0x034A24C8 MOV X0, X20
	0x034A24CC MOV X1, X31
	0x034A24D0 BL 0x32C47F8
	0x034A24D4 LDP X20, X19, [X31 + 0x80]
	0x034A24D8 LDP X22, X21, [X31 + 0x70]
	0x034A24DC LDP X30, X23, [X31 + 0x60]
	0x034A24E0 ADD X31, X31, 0x90
	0x034A24E4 RET
	0x034A24E8 SUB X31, X31, 0x80
	0x034A24EC STR X30, [X31 + 0x40]
	0x034A24F0 STP X24, X23, [X31 + 0x50]
	0x034A24F4 STP X22, X21, [X31 + 0x60]
	0x034A24F8 STP X20, X19, [X31 + 0x70]
	0x034A24FC ADRP X23, 0xF3B000
	0x034A2500 ADRP X22, 0xC8F000
	0x034A2504 LDRB W8, [X23 + 0x9D9]
	0x034A2508 LDR X22, [X22 + 0xC88]
	0x034A250C MOV X19, X2
	0x034A2510 MOV X21, X1
	0x034A2514 MOV X20, X0
	0x034A2518 TBNZ X8, 0x0, 0x34A2554
	0x034A251C ADRP X0, 0xC8F000
	0x034A2520 LDR X0, [X0 + 0xC90]
	0x034A2524 BL 0x1C16CF4
	0x034A2528 ADRP X0, 0xC8F000
	0x034A252C LDR X0, [X0 + 0xC98]
	0x034A2530 BL 0x1C16CF4
	0x034A2534 ADRP X0, 0xC8F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF3C000
	007 Move X21, 0xC52000
	008 Move X22, 0xC52000
	009 Move W8, [X20+2511]
	010 Move X21, [X21+2440]
	011 Move X22, [X22+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xC52000
	018 Move X0, [X0+2512]
	019 Call 0x1C17CF4
	020 Move X0, 0xC52000
	021 Move X0, [X0+2104]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8C000
	024 Move X0, [X0+4000]
	025 Call 0x1C17CF4
	026 Move X0, 0xC52000
	027 Move X0, [X0+2440]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8C000
	030 Move X0, [X0+3416]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2511], W8
	034 Move X0, [X22]
	035 Move X21, [X21]
	036 Move W1, 4
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {113}
	040 Move X20, X0
	041 Compare X21, 0
	042 JumpIfEqual {49}
	043 Move X8, [X20]
	044 Move X0, X21
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {110}
	049 Move W8, [X20+24]
	050 Compare W8, 0
	051 JumpIfEqual {109}
	052 Move X22, 0xC8C000
	053 Move X22, [X22+4000]
	054 Move [X20+32], X21
	055 Move X0, [X22]
	056 Compare X0, 0
	057 JumpIfEqual {64}
	058 Move X8, [X20]
	059 Move X1, [X8+64]
	060 Call 0x1C17E00
	061 Compare X0, 0
	062 JumpIfEqual {110}
	063 Move W8, [X20+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, [X22]
	066 Move [X20+40], X9
	067 Move X21, [X19+16]
	068 Compare X21, 0
	069 JumpIfEqual {77}
	070 Move X8, [X20]
	071 Move X0, X21
	072 Move X1, [X8+64]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {110}
	076 Move W8, [X20+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X22, 0xC52000
	079 Move X22, [X22+2104]
	080 Move [X20+48], X21
	081 Move X0, [X22]
	082 Compare X0, 0
	083 JumpIfEqual {90}
	084 Move X8, [X20]
	085 Move X1, [X8+64]
	086 Call 0x1C17E00
	087 Compare X0, 0
	088 JumpIfEqual {110}
	089 Move W8, [X20+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, [X22]
	092 Move X21, 0xC8C000
	093 Move X21, [X21+3416]
	094 Move X0, X20
	095 Move X1, X31
	096 Move [X20+56], X8
	097 Call String.Concat, X0
	098 Move X2, [X19+24]
	099 Move X1, [X21]
	100 Move X3, [X22]
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X4, X31
	106 Move X30, [X31+48]
	107 Call String.Concat, X0, X1, X2, X3
	108 Return X0
	109 Call 0x1C17F28
	110 Call 0x1C17F44
	111 Move X1, X31
	112 Call 0x1C17DEC
	113 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034A2538 LDR X0, [X0 + 0xCA0]
	0x034A253C BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

