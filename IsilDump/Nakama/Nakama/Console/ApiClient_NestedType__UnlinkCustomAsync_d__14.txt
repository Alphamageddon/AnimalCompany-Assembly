Type: Nakama.Console.ApiClient/<UnlinkCustomAsync>d__14

Method: System.Void MoveNext()

Disassembly:
	0x034AC5D0 MOV X1, X20
	0x034AC5D4 MOV X2, X31
	0x034AC5D8 BL 0x32C4908
	0x034AC5DC B 0x34AC4B4
	0x034AC5E0 MOVZ W0, 0x8
	0x034AC5E4 BL 0x3EB1AF0
	0x034AC5E8 LDR X8, [X20]
	0x034AC5EC STR X8, [X0]
	0x034AC5F0 ADRP X1, 0xA08000
	0x034AC5F4 ADD X1, X1, 0xE58
	0x034AC5F8 MOV X2, X31
	0x034AC5FC BL 0x3EB1B00
	0x034AC600 MOV X20, X0
	0x034AC604 BL 0x3EB1AE0
	0x034AC608 MOV X0, X20
	0x034AC60C BL 0x1D2C690
	0x034AC610 BL 0x1990590
	0x034AC614 STR X30, [X31 - 0x30]!
	0x034AC618 STP X22, X21, [X31 + 0x10]
	0x034AC61C STP X20, X19, [X31 + 0x20]
	0x034AC620 ADRP X21, 0xF31000
	0x034AC624 ADRP X22, 0xC4A000
	0x034AC628 LDRB W8, [X21 + 0xA23]
	0x034AC62C LDR X22, [X22 + 0x280]
	0x034AC630 MOV X19, X1
	0x034AC634 MOV X20, X0
	0x034AC638 TBNZ X8, 0x0, 0x34AC650
	0x034AC63C ADRP X0, 0xC4A000
	0x034AC640 LDR X0, [X0 + 0x280]
	0x034AC644 BL 0x1C16CF4
	0x034AC648 MOVZ W8, 0x1
	0x034AC64C STRB W8, [X21 + 0xA23]
	0x034AC650 LDR X0, [X22]
	0x034AC654 LDR W8, [X0 + 0xE0]
	0x034AC658 CBNZ W8, 0x34AC660
	0x034AC65C BL 0x1C16DFC
	0x034AC660 ADD X0, X20, 0x8
	0x034AC664 MOV X1, X19
	0x034AC668 LDP X20, X19, [X31 + 0x20]
	0x034AC66C LDP X22, X21, [X31 + 0x10]
	0x034AC670 MOV X2, X31
	0x034AC674 LDR X30, [X31], #0x30
	0x034AC678 B 0x32C477C
	0x034AC67C SUB X31, X31, 0x50
	0x034AC680 STP X30, X25, [X31 + 0x10]
	0x034AC684 STP X24, X23, [X31 + 0x20]
	0x034AC688 STP X22, X21, [X31 + 0x30]
	0x034AC68C STP X20, X19, [X31 + 0x40]
	0x034AC690 ADRP X20, 0xF31000
	0x034AC694 LDRB W8, [X20 + 0xA24]
	0x034AC698 MOV X19, X0
	0x034AC69C TBNZ X8, 0x0, 0x34AC774
	0x034AC6A0 ADRP X0, 0xC86000
	0x034AC6A4 LDR X0, [X0 + 0x230]
	0x034AC6A8 BL 0x1C16CF4
	0x034AC6AC ADRP X0, 0xC4A000
	0x034AC6B0 LDR X0, [X0 + 0x280]
	0x034AC6B4 BL 0x1C16CF4
	0x034AC6B8 ADRP X0, 0xC48000
	0x034AC6BC LDR X0, [X0 + 0x810]
	0x034AC6C0 BL 0x1C16CF4
	0x034AC6C4 ADRP X0, 0xC48000
	0x034AC6C8 LDR X0, [X0 + 0x6C0]
	0x034AC6CC BL 0x1C16CF4
	0x034AC6D0 ADRP X0, 0xC48000
	0x034AC6D4 LDR X0, [X0 + 0x6D0]
	0x034AC6D8 BL 0x1C16CF4
	0x034AC6DC ADRP X0, 0xC82000
	0x034AC6E0 LDR X0, [X0 + 0x7B8]
	0x034AC6E4 BL 0x1C16CF4
	0x034AC6E8 ADRP X0, 0xC4A000
	0x034AC6EC LDR X0, [X0 + 0x1E0]
	0x034AC6F0 BL 0x1C16CF4
	0x034AC6F4 ADRP X0, 0xC4A000
	0x034AC6F8 LDR X0, [X0 + 0x1F0]
	0x034AC6FC BL 0x1C16CF4
	0x034AC700 ADRP X0, 0xC4A000
	0x034AC704 LDR X0, [X0 + 0x1F8]
	0x034AC708 BL 0x1C16CF4
	0x034AC70C ADRP X0, 0xC50000
	0x034AC710 LDR X0, [X0 + 0x3A0]
	0x034AC714 BL 0x1C16CF4
	0x034AC718 ADRP X0, 0xC49000
	0x034AC71C LDR X0, [X0 + 0xA28]
	0x034AC720 BL 0x1C16CF4
	0x034AC724 ADRP X0, 0xC70000
	0x034AC728 LDR X0, [X0 + 0x4D8]
	0x034AC72C BL 0x1C16CF4
	0x034AC730 ADRP X0, 0xC86000
	0x034AC734 LDR X0, [X0 + 0x238]
	0x034AC738 BL 0x1C16CF4
	0x034AC73C ADRP X0, 0xC82000
	0x034AC740 LDR X0, [X0 + 0x7D0]
	0x034AC744 BL 0x1C16CF4
	0x034AC748 ADRP X0, 0xC83000
	0x034AC74C LDR X0, [X0 + 0x2E8]
	0x034AC750 BL 0x1C16CF4
	0x034AC754 ADRP X0, 0xC82000
	0x034AC758 LDR X0, [X0 + 0x7D8]
	0x034AC75C BL 0x1C16CF4
	0x034AC760 ADRP X0, 0xC47000
	0x034AC764 LDR X0, [X0 + 0x988]
	0x034AC768 BL 0x1C16CF4
	0x034AC76C MOVZ W8, 0x1
	0x034AC770 STRB W8, [X20 + 0xA24]
	0x034AC774 STR X31, [X31 + 0x8]
	0x034AC778 ADRP X25, 0xC4A000
	0x034AC77C LDR W8, [X19]
	0x034AC780 LDR X25, [X25 + 0x280]
	0x034AC784 CBZ W8, 0x34AC914
	0x034AC788 LDR X21, [X19 + 0x20]
	0x034AC78C CBZ X21, 0x34ACA24
	0x034AC790 ADRP X8, 0xC49000
	0x034AC794 LDR X8, [X8 + 0xA28]
	0x034AC798 LDR X0, [X8]
	0x034AC79C ADRP X8, 0xC86000
	0x034AC7A0 LDR X8, [X8 + 0x238]
	0x034AC7A4 LDR X24, [X19 + 0x28]
	0x034AC7A8 LDR W9, [X0 + 0xE0]
	0x034AC7AC LDR X20, [X8]
	0x034AC7B0 CBNZ W9, 0x34AC7B8
	0x034AC7B4 BL 0x1C16DFC
	0x034AC7B8 MOV X0, X21
	0x034AC7BC MOV X1, X31
	0x034AC7C0 BL 0x3624D20
	0x034AC7C4 CBZ X20, 0x34ACA6C
	0x034AC7C8 ADRP X8, 0xC83000
	0x034AC7CC LDR X8, [X8 + 0x2E8]
	0x034AC7D0 MOV X2, X0
	0x034AC7D4 LDR X1, [X8]
	0x034AC7D8 MOV X0, X20
	0x034AC7DC MOV X3, X31
	0x034AC7E0 BL 0x32293BC
	0x034AC7E4 CBZ X24, 0x34ACA70
	0x034AC7E8 ADRP X8, 0xC47000
	0x034AC7EC ADRP X9, 0xC50000
	0x034AC7F0 LDR X8, [X8 + 0x988]
	0x034AC7F4 LDR X9, [X9 + 0x3A0]
	0x034AC7F8 MOV X22, X0
	0x034AC7FC LDR X23, [X24 + 0x10]
	0x034AC800 LDR X21, [X8]
	0x034AC804 LDR X0, [X9]
	0x034AC808 BL 0x1C16F10
	0x034AC80C MOV X20, X0
	0x034AC810 MOV X1, X23
	0x034AC814 MOV X2, X31
	0x034AC818 BL 0x36281F8
	0x034AC81C CBZ X20, 0x34ACA74
	0x034AC820 MOV X0, X20
	0x034AC824 MOV X1, X22
	0x034AC828 MOV X2, X31
	0x034AC82C BL 0x36288CC
	0x034AC830 MOV X0, X20
	0x034AC834 MOV X1, X21
	0x034AC838 MOV X2, X31
	0x034AC83C BL 0x3628980
	0x034AC840 MOV X0, X20
	0x034AC844 MOV X1, X31
	0x034AC848 BL 0x3628A38
	0x034AC84C ADRP X8, 0xC70000
	0x034AC850 ADRP X9, 0xC48000
	0x034AC854 LDR X8, [X8 + 0x4D8]
	0x034AC858 LDR X9, [X9 + 0x6D0]
	0x034AC85C MOV X20, X0
	0x034AC860 LDR X21, [X8]
	0x034AC864 LDR X0, [X9]
	0x034AC868 BL 0x1C16F10
	0x034AC86C ADRP X8, 0xC48000
	0x034AC870 LDR X8, [X8 + 0x6C0]
	0x034AC874 MOV X22, X0
	0x034AC878 LDR X1, [X8]
	0x034AC87C BL 0x2AA4804
	0x034AC880 ADRP X8, 0xC82000
	0x034AC884 LDR X8, [X8 + 0x7D8]
	0x034AC888 LDR X1, [X19 + 0x30]
	0x034AC88C LDR X0, [X8]
	0x034AC890 MOV X2, X31
	0x034AC894 BL 0x321B938
	0x034AC898 CBZ X22, 0x34ACA78
	0x034AC89C ADRP X8, 0xC82000
	0x034AC8A0 LDR X8, [X8 + 0x7D0]
	0x034AC8A4 ADRP X9, 0xC48000
	0x034AC8A8 LDR X9, [X9 + 0x810]
	0x034AC8AC MOV X2, X0
	0x034AC8B0 LDR X1, [X8]
	0x034AC8B4 LDR X3, [X9]
	0x034AC8B8 MOV X0, X22
	0x034AC8BC BL 0x2AA5098
	0x034AC8C0 LDR X23, [X24 + 0x20]
	0x034AC8C4 CBZ X23, 0x34ACA7C
	0x034AC8C8 ADRP X10, 0xC82000
	0x034AC8CC LDR X8, [X23]
	0x034AC8D0 LDR X10, [X10 + 0x7B8]
	0x034AC8D4 LDR W24, [X24 + 0x18]
	0x034AC8D8 LDRH W9, [X8 + 0x12E]
	0x034AC8DC LDR X1, [X10]
	0x034AC8E0 CBZ X9, 0x34AC904
	0x034AC8E4 LDR X10, [X8 + 0xB0]
	0x034AC8E8 ADD X10, X10, 0x8
	0x034AC8EC LDUR X11, [X10 - 0x8]
	0x034AC8F0 CMP X11, X1
	0x034AC8F4 B.EQ 0x34AC92C
	0x034AC8F8 SUBS X9, X9, 0x1
	0x034AC8FC ADD X10, X10, 0x10
	0x034AC900 B.NE 0x34AC8EC
	0x034AC904 MOVZ W2, 0x3
	0x034AC908 MOV X0, X23
	0x034AC90C BL 0x1C5C788
	0x034AC910 B 0x34AC93C
	0x034AC914 LDR X8, [X19 + 0x38]
	0x034AC918 MOVN W9, 0x0
	0x034AC91C STR X8, [X31 + 0x8]
	0x034AC920 STR X31, [X19 + 0x38]
	0x034AC924 STR W9, [X19]
	0x034AC928 B 0x34AC998
	0x034AC92C LDR W9, [X10]
	0x034AC930 ADD W9, W9, 0x3
	0x034AC934 ADD X8, X8, W9, 0x4, SXTW
	0x034AC938 ADD X0, X8, 0x138
	0x034AC93C LDP X8, X9, [X0]
	0x034AC940 MOV X0, X23
	0x034AC944 MOV X1, X21
	0x034AC948 MOV X2, X20
	0x034AC94C MOV X3, X22
	0x034AC950 MOV X4, X31
	0x034AC954 MOV W5, W24
	0x034AC958 MOV X6, X31
	0x034AC95C MOV X7, X31
	0x034AC960 STR X9, [X31]
	0x034AC964 BLR X8
	0x034AC968 CBZ X0, 0x34ACA80
	0x034AC96C ADRP X8, 0xC4A000
	0x034AC970 LDR X8, [X8 + 0x1F8]
	0x034AC974 LDR X1, [X8]
	0x034AC978 BL 0x269F5D0
	0x034AC97C ADRP X8, 0xC4A000
	0x034AC980 LDR X8, [X8 + 0x1F0]
	0x034AC984 STR X0, [X31 + 0x8]
	0x034AC988 LDR X1, [X8]
	0x034AC98C ADD X0, X31, 0x8
	0x034AC990 BL 0x2677430
	0x034AC994 TBZ X0, 0x0, 0x34AC9D4
	0x034AC998 ADRP X8, 0xC4A000
	0x034AC99C LDR X8, [X8 + 0x1E0]
	0x034AC9A0 ADD X0, X31, 0x8
	0x034AC9A4 LDR X1, [X8]
	0x034AC9A8 BL 0x2677474
	0x034AC9AC MOVN W8, 0x1
	0x034AC9B0 STR W8, [X19], #0x8
	0x034AC9B4 LDR X0, [X25]
	0x034AC9B8 LDR W8, [X0 + 0xE0]
	0x034AC9BC CBNZ W8, 0x34AC9C4
	0x034AC9C0 BL 0x1C16DFC
	0x034AC9C4 MOV X0, X19
	0x034AC9C8 MOV X1, X31
	0x034AC9CC BL 0x32C4864
	0x034AC9D0 B 0x34ACA0C
	0x034AC9D4 STR W31, [X19]
	0x034AC9D8 LDR X8, [X31 + 0x8]
	0x034AC9DC STR X8, [X19 + 0x38]
	0x034AC9E0 LDR X0, [X25]
	0x034AC9E4 LDR W8, [X0 + 0xE0]
	0x034AC9E8 CBNZ W8, 0x34AC9F0
	0x034AC9EC BL 0x1C16DFC
	0x034AC9F0 ADRP X8, 0xC86000
	0x034AC9F4 LDR X8, [X8 + 0x230]
	0x034AC9F8 ADD X0, X19, 0x8
	0x034AC9FC LDR X3, [X8]
	0x034ACA00 ADD X1, X31, 0x8
	0x034ACA04 MOV X2, X19
	0x034ACA08 BL 0x2187844
	0x034ACA0C LDP X20, X19, [X31 + 0x40]
	0x034ACA10 LDP X22, X21, [X31 + 0x30]
	0x034ACA14 LDP X24, X23, [X31 + 0x20]
	0x034ACA18 LDP X30, X25, [X31 + 0x10]
	0x034ACA1C ADD X31, X31, 0x50
	0x034ACA20 RET
	0x034ACA24 ADRP X0, 0xC4F000
	0x034ACA28 LDR X0, [X0 + 0x578]
	0x034ACA2C BL 0x1C16D08
	0x034ACA30 BL 0x1C16F10
	0x034ACA34 MOV X20, X0
	0x034ACA38 ADRP X0, 0xC83000
	0x034ACA3C LDR X0, [X0 + 0x2F0]
	0x034ACA40 BL 0x1C16D08
	0x034ACA44 MOV X1, X0
	0x034ACA48 MOV X0, X20
	0x034ACA4C MOV X2, X31
	0x034ACA50 BL 0x3314A68
	0x034ACA54 ADRP X0, 0xC86000
	0x034ACA58 LDR X0, [X0 + 0x240]
	0x034ACA5C BL 0x1C16D08
	0x034ACA60 MOV X1, X0
	0x034ACA64 MOV X0, X20
	0x034ACA68 BL 0x1C16DEC
	0x034ACA6C BL 0x1C16F20
	0x034ACA70 BL 0x1C16F20
	0x034ACA74 BL 0x1C16F20
	0x034ACA78 BL 0x1C16F20
	0x034ACA7C BL 0x1C16F20
	0x034ACA80 BL 0x1C16F20
	0x034ACA84 B 0x34ACAC8
	0x034ACA88 B 0x34ACAC8
	0x034ACA8C B 0x34ACAC8
	0x034ACA90 B 0x34ACAC8
	0x034ACA94 B 0x34ACAC8
	0x034ACA98 B 0x34ACAC8
	0x034ACA9C B 0x34ACAC8
	0x034ACAA0 B 0x34ACAC8
	0x034ACAA4 B 0x34ACAC8
	0x034ACAA8 B 0x34ACAC8
	0x034ACAAC B 0x34ACAC8
	0x034ACAB0 B 0x34ACAC8
	0x034ACAB4 B 0x34ACAC8
	0x034ACAB8 B 0x34ACAC8
	0x034ACABC B 0x34ACAC8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF32000
	011 Move W8, [X20+2590]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC87000
	018 Move X0, [X0+488]
	019 Call 0x1C17CF4
	020 Move X0, 0xC4B000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC49000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC49000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC49000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC83000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC4B000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC4B000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4B000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC51000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4A000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC71000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0xC87000
	054 Move X0, [X0+496]
	055 Call 0x1C17CF4
	056 Move X0, 0xC83000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC84000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC83000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC48000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2590], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC4B000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC4A000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC87000
	083 Move X8, [X8+496]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC84000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC48000
	105 Move X9, 0xC51000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC71000
	131 Move X9, 0xC49000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC49000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC83000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC83000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC49000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC83000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC4B000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC4B000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC4B000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC87000
	245 Move X8, [X8+488]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC50000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC84000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC87000
	274 Move X0, [X0+504]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC48000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC4B000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA09000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034ACAC0 B 0x34ACAC8
	0x034ACAC4 B 0x34ACAC8
	0x034ACAC8 MOV X20, X0
	0x034ACACC CMP W1, 0x1
	0x034ACAD0 B.NE 0x34ACB60
	0x034ACAD4 MOV X0, X20
	0x034ACAD8 BL 0x3EB1AD0
	0x034ACADC MOV X20, X0
	0x034ACAE0 ADRP X0, 0xC47000
	0x034ACAE4 LDR X0, [X0 + 0x7D0]
	0x034ACAE8 BL 0x1C16D08
	0x034ACAEC LDR X8, [X20]
	0x034ACAF0 LDR X1, [X8]
	0x034ACAF4 BL 0x1C17270
	0x034ACAF8 TBZ X0, 0x0, 0x34ACB38
	0x034ACAFC LDR X20, [X20]
	0x034ACB00 BL 0x3EB1AE0
	0x034ACB04 MOVN W8, 0x1
	0x034ACB08 STR W8, [X19], #0x8
	0x034ACB0C ADRP X0, 0xC4A000
	0x034ACB10 LDR X0, [X0 + 0x280]
	0x034ACB14 BL 0x1C16D08
	0x034ACB18 LDR W8, [X0 + 0xE0]
	0x034ACB1C CBNZ W8, 0x34ACB24
	0x034ACB20 BL 0x1C16DFC
	0x034ACB24 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF32000
	007 Move X22, 0xC4B000
	008 Move W8, [X21+2591]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC4B000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2591], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

