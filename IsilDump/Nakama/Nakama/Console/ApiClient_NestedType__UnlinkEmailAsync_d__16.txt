Type: Nakama.Console.ApiClient/<UnlinkEmailAsync>d__16

Method: System.Void MoveNext()

Disassembly:
	0x034AD124 LDR X30, [X31], #0x30
	0x034AD128 B 0x32C477C
	0x034AD12C SUB X31, X31, 0x50
	0x034AD130 STP X30, X25, [X31 + 0x10]
	0x034AD134 STP X24, X23, [X31 + 0x20]
	0x034AD138 STP X22, X21, [X31 + 0x30]
	0x034AD13C STP X20, X19, [X31 + 0x40]
	0x034AD140 ADRP X20, 0xF30000
	0x034AD144 LDRB W8, [X20 + 0xA28]
	0x034AD148 MOV X19, X0
	0x034AD14C TBNZ X8, 0x0, 0x34AD224
	0x034AD150 ADRP X0, 0xC85000
	0x034AD154 LDR X0, [X0 + 0x260]
	0x034AD158 BL 0x1C16CF4
	0x034AD15C ADRP X0, 0xC49000
	0x034AD160 LDR X0, [X0 + 0x280]
	0x034AD164 BL 0x1C16CF4
	0x034AD168 ADRP X0, 0xC47000
	0x034AD16C LDR X0, [X0 + 0x810]
	0x034AD170 BL 0x1C16CF4
	0x034AD174 ADRP X0, 0xC47000
	0x034AD178 LDR X0, [X0 + 0x6C0]
	0x034AD17C BL 0x1C16CF4
	0x034AD180 ADRP X0, 0xC47000
	0x034AD184 LDR X0, [X0 + 0x6D0]
	0x034AD188 BL 0x1C16CF4
	0x034AD18C ADRP X0, 0xC81000
	0x034AD190 LDR X0, [X0 + 0x7B8]
	0x034AD194 BL 0x1C16CF4
	0x034AD198 ADRP X0, 0xC49000
	0x034AD19C LDR X0, [X0 + 0x1E0]
	0x034AD1A0 BL 0x1C16CF4
	0x034AD1A4 ADRP X0, 0xC49000
	0x034AD1A8 LDR X0, [X0 + 0x1F0]
	0x034AD1AC BL 0x1C16CF4
	0x034AD1B0 ADRP X0, 0xC49000
	0x034AD1B4 LDR X0, [X0 + 0x1F8]
	0x034AD1B8 BL 0x1C16CF4
	0x034AD1BC ADRP X0, 0xC4F000
	0x034AD1C0 LDR X0, [X0 + 0x3A0]
	0x034AD1C4 BL 0x1C16CF4
	0x034AD1C8 ADRP X0, 0xC48000
	0x034AD1CC LDR X0, [X0 + 0xA28]
	0x034AD1D0 BL 0x1C16CF4
	0x034AD1D4 ADRP X0, 0xC6F000
	0x034AD1D8 LDR X0, [X0 + 0x4D8]
	0x034AD1DC BL 0x1C16CF4
	0x034AD1E0 ADRP X0, 0xC85000
	0x034AD1E4 LDR X0, [X0 + 0x268]
	0x034AD1E8 BL 0x1C16CF4
	0x034AD1EC ADRP X0, 0xC81000
	0x034AD1F0 LDR X0, [X0 + 0x7D0]
	0x034AD1F4 BL 0x1C16CF4
	0x034AD1F8 ADRP X0, 0xC82000
	0x034AD1FC LDR X0, [X0 + 0x2E8]
	0x034AD200 BL 0x1C16CF4
	0x034AD204 ADRP X0, 0xC81000
	0x034AD208 LDR X0, [X0 + 0x7D8]
	0x034AD20C BL 0x1C16CF4
	0x034AD210 ADRP X0, 0xC46000
	0x034AD214 LDR X0, [X0 + 0x988]
	0x034AD218 BL 0x1C16CF4
	0x034AD21C MOVZ W8, 0x1
	0x034AD220 STRB W8, [X20 + 0xA28]
	0x034AD224 STR X31, [X31 + 0x8]
	0x034AD228 ADRP X25, 0xC49000
	0x034AD22C LDR W8, [X19]
	0x034AD230 LDR X25, [X25 + 0x280]
	0x034AD234 CBZ W8, 0x34AD3C4
	0x034AD238 LDR X21, [X19 + 0x20]
	0x034AD23C CBZ X21, 0x34AD4D4
	0x034AD240 ADRP X8, 0xC48000
	0x034AD244 LDR X8, [X8 + 0xA28]
	0x034AD248 LDR X0, [X8]
	0x034AD24C ADRP X8, 0xC85000
	0x034AD250 LDR X8, [X8 + 0x268]
	0x034AD254 LDR X24, [X19 + 0x28]
	0x034AD258 LDR W9, [X0 + 0xE0]
	0x034AD25C LDR X20, [X8]
	0x034AD260 CBNZ W9, 0x34AD268
	0x034AD264 BL 0x1C16DFC
	0x034AD268 MOV X0, X21
	0x034AD26C MOV X1, X31
	0x034AD270 BL 0x3624D20
	0x034AD274 CBZ X20, 0x34AD51C
	0x034AD278 ADRP X8, 0xC82000
	0x034AD27C LDR X8, [X8 + 0x2E8]
	0x034AD280 MOV X2, X0
	0x034AD284 LDR X1, [X8]
	0x034AD288 MOV X0, X20
	0x034AD28C MOV X3, X31
	0x034AD290 BL 0x32293BC
	0x034AD294 CBZ X24, 0x34AD520
	0x034AD298 ADRP X8, 0xC46000
	0x034AD29C ADRP X9, 0xC4F000
	0x034AD2A0 LDR X8, [X8 + 0x988]
	0x034AD2A4 LDR X9, [X9 + 0x3A0]
	0x034AD2A8 MOV X22, X0
	0x034AD2AC LDR X23, [X24 + 0x10]
	0x034AD2B0 LDR X21, [X8]
	0x034AD2B4 LDR X0, [X9]
	0x034AD2B8 BL 0x1C16F10
	0x034AD2BC MOV X20, X0
	0x034AD2C0 MOV X1, X23
	0x034AD2C4 MOV X2, X31
	0x034AD2C8 BL 0x36281F8
	0x034AD2CC CBZ X20, 0x34AD524
	0x034AD2D0 MOV X0, X20
	0x034AD2D4 MOV X1, X22
	0x034AD2D8 MOV X2, X31
	0x034AD2DC BL 0x36288CC
	0x034AD2E0 MOV X0, X20
	0x034AD2E4 MOV X1, X21
	0x034AD2E8 MOV X2, X31
	0x034AD2EC BL 0x3628980
	0x034AD2F0 MOV X0, X20
	0x034AD2F4 MOV X1, X31
	0x034AD2F8 BL 0x3628A38
	0x034AD2FC ADRP X8, 0xC6F000
	0x034AD300 ADRP X9, 0xC47000
	0x034AD304 LDR X8, [X8 + 0x4D8]
	0x034AD308 LDR X9, [X9 + 0x6D0]
	0x034AD30C MOV X20, X0
	0x034AD310 LDR X21, [X8]
	0x034AD314 LDR X0, [X9]
	0x034AD318 BL 0x1C16F10
	0x034AD31C ADRP X8, 0xC47000
	0x034AD320 LDR X8, [X8 + 0x6C0]
	0x034AD324 MOV X22, X0
	0x034AD328 LDR X1, [X8]
	0x034AD32C BL 0x2AA4804
	0x034AD330 ADRP X8, 0xC81000
	0x034AD334 LDR X8, [X8 + 0x7D8]
	0x034AD338 LDR X1, [X19 + 0x30]
	0x034AD33C LDR X0, [X8]
	0x034AD340 MOV X2, X31
	0x034AD344 BL 0x321B938
	0x034AD348 CBZ X22, 0x34AD528
	0x034AD34C ADRP X8, 0xC81000
	0x034AD350 LDR X8, [X8 + 0x7D0]
	0x034AD354 ADRP X9, 0xC47000
	0x034AD358 LDR X9, [X9 + 0x810]
	0x034AD35C MOV X2, X0
	0x034AD360 LDR X1, [X8]
	0x034AD364 LDR X3, [X9]
	0x034AD368 MOV X0, X22
	0x034AD36C BL 0x2AA5098
	0x034AD370 LDR X23, [X24 + 0x20]
	0x034AD374 CBZ X23, 0x34AD52C
	0x034AD378 ADRP X10, 0xC81000
	0x034AD37C LDR X8, [X23]
	0x034AD380 LDR X10, [X10 + 0x7B8]
	0x034AD384 LDR W24, [X24 + 0x18]
	0x034AD388 LDRH W9, [X8 + 0x12E]
	0x034AD38C LDR X1, [X10]
	0x034AD390 CBZ X9, 0x34AD3B4
	0x034AD394 LDR X10, [X8 + 0xB0]
	0x034AD398 ADD X10, X10, 0x8
	0x034AD39C LDUR X11, [X10 - 0x8]
	0x034AD3A0 CMP X11, X1
	0x034AD3A4 B.EQ 0x34AD3DC
	0x034AD3A8 SUBS X9, X9, 0x1
	0x034AD3AC ADD X10, X10, 0x10
	0x034AD3B0 B.NE 0x34AD39C
	0x034AD3B4 MOVZ W2, 0x3
	0x034AD3B8 MOV X0, X23
	0x034AD3BC BL 0x1C5C788
	0x034AD3C0 B 0x34AD3EC
	0x034AD3C4 LDR X8, [X19 + 0x38]
	0x034AD3C8 MOVN W9, 0x0
	0x034AD3CC STR X8, [X31 + 0x8]
	0x034AD3D0 STR X31, [X19 + 0x38]
	0x034AD3D4 STR W9, [X19]
	0x034AD3D8 B 0x34AD448
	0x034AD3DC LDR W9, [X10]
	0x034AD3E0 ADD W9, W9, 0x3
	0x034AD3E4 ADD X8, X8, W9, 0x4, SXTW
	0x034AD3E8 ADD X0, X8, 0x138
	0x034AD3EC LDP X8, X9, [X0]
	0x034AD3F0 MOV X0, X23
	0x034AD3F4 MOV X1, X21
	0x034AD3F8 MOV X2, X20
	0x034AD3FC MOV X3, X22
	0x034AD400 MOV X4, X31
	0x034AD404 MOV W5, W24
	0x034AD408 MOV X6, X31
	0x034AD40C MOV X7, X31
	0x034AD410 STR X9, [X31]
	0x034AD414 BLR X8
	0x034AD418 CBZ X0, 0x34AD530
	0x034AD41C ADRP X8, 0xC49000
	0x034AD420 LDR X8, [X8 + 0x1F8]
	0x034AD424 LDR X1, [X8]
	0x034AD428 BL 0x269F5D0
	0x034AD42C ADRP X8, 0xC49000
	0x034AD430 LDR X8, [X8 + 0x1F0]
	0x034AD434 STR X0, [X31 + 0x8]
	0x034AD438 LDR X1, [X8]
	0x034AD43C ADD X0, X31, 0x8
	0x034AD440 BL 0x2677430
	0x034AD444 TBZ X0, 0x0, 0x34AD484
	0x034AD448 ADRP X8, 0xC49000
	0x034AD44C LDR X8, [X8 + 0x1E0]
	0x034AD450 ADD X0, X31, 0x8
	0x034AD454 LDR X1, [X8]
	0x034AD458 BL 0x2677474
	0x034AD45C MOVN W8, 0x1
	0x034AD460 STR W8, [X19], #0x8
	0x034AD464 LDR X0, [X25]
	0x034AD468 LDR W8, [X0 + 0xE0]
	0x034AD46C CBNZ W8, 0x34AD474
	0x034AD470 BL 0x1C16DFC
	0x034AD474 MOV X0, X19
	0x034AD478 MOV X1, X31
	0x034AD47C BL 0x32C4864
	0x034AD480 B 0x34AD4BC
	0x034AD484 STR W31, [X19]
	0x034AD488 LDR X8, [X31 + 0x8]
	0x034AD48C STR X8, [X19 + 0x38]
	0x034AD490 LDR X0, [X25]
	0x034AD494 LDR W8, [X0 + 0xE0]
	0x034AD498 CBNZ W8, 0x34AD4A0
	0x034AD49C BL 0x1C16DFC
	0x034AD4A0 ADRP X8, 0xC85000
	0x034AD4A4 LDR X8, [X8 + 0x260]
	0x034AD4A8 ADD X0, X19, 0x8
	0x034AD4AC LDR X3, [X8]
	0x034AD4B0 ADD X1, X31, 0x8
	0x034AD4B4 MOV X2, X19
	0x034AD4B8 BL 0x218793C
	0x034AD4BC LDP X20, X19, [X31 + 0x40]
	0x034AD4C0 LDP X22, X21, [X31 + 0x30]
	0x034AD4C4 LDP X24, X23, [X31 + 0x20]
	0x034AD4C8 LDP X30, X25, [X31 + 0x10]
	0x034AD4CC ADD X31, X31, 0x50
	0x034AD4D0 RET
	0x034AD4D4 ADRP X0, 0xC4E000
	0x034AD4D8 LDR X0, [X0 + 0x578]
	0x034AD4DC BL 0x1C16D08
	0x034AD4E0 BL 0x1C16F10
	0x034AD4E4 MOV X20, X0
	0x034AD4E8 ADRP X0, 0xC82000
	0x034AD4EC LDR X0, [X0 + 0x2F0]
	0x034AD4F0 BL 0x1C16D08
	0x034AD4F4 MOV X1, X0
	0x034AD4F8 MOV X0, X20
	0x034AD4FC MOV X2, X31
	0x034AD500 BL 0x3314A68
	0x034AD504 ADRP X0, 0xC85000
	0x034AD508 LDR X0, [X0 + 0x270]
	0x034AD50C BL 0x1C16D08
	0x034AD510 MOV X1, X0
	0x034AD514 MOV X0, X20
	0x034AD518 BL 0x1C16DEC
	0x034AD51C BL 0x1C16F20
	0x034AD520 BL 0x1C16F20
	0x034AD524 BL 0x1C16F20
	0x034AD528 BL 0x1C16F20
	0x034AD52C BL 0x1C16F20
	0x034AD530 BL 0x1C16F20
	0x034AD534 B 0x34AD578
	0x034AD538 B 0x34AD578
	0x034AD53C B 0x34AD578
	0x034AD540 B 0x34AD578
	0x034AD544 B 0x34AD578
	0x034AD548 B 0x34AD578
	0x034AD54C B 0x34AD578
	0x034AD550 B 0x34AD578
	0x034AD554 B 0x34AD578
	0x034AD558 B 0x34AD578
	0x034AD55C B 0x34AD578
	0x034AD560 B 0x34AD578
	0x034AD564 B 0x34AD578
	0x034AD568 B 0x34AD578
	0x034AD56C B 0x34AD578
	0x034AD570 B 0x34AD578
	0x034AD574 B 0x34AD578
	0x034AD578 MOV X20, X0
	0x034AD57C CMP W1, 0x1
	0x034AD580 B.NE 0x34AD610
	0x034AD584 MOV X0, X20
	0x034AD588 BL 0x3EB1AD0
	0x034AD58C MOV X20, X0
	0x034AD590 ADRP X0, 0xC46000
	0x034AD594 LDR X0, [X0 + 0x7D0]
	0x034AD598 BL 0x1C16D08
	0x034AD59C LDR X8, [X20]
	0x034AD5A0 LDR X1, [X8]
	0x034AD5A4 BL 0x1C17270
	0x034AD5A8 TBZ X0, 0x0, 0x34AD5E8
	0x034AD5AC LDR X20, [X20]
	0x034AD5B0 BL 0x3EB1AE0
	0x034AD5B4 MOVN W8, 0x1
	0x034AD5B8 STR W8, [X19], #0x8
	0x034AD5BC ADRP X0, 0xC49000
	0x034AD5C0 LDR X0, [X0 + 0x280]
	0x034AD5C4 BL 0x1C16D08
	0x034AD5C8 LDR W8, [X0 + 0xE0]
	0x034AD5CC CBNZ W8, 0x34AD5D4
	0x034AD5D0 BL 0x1C16DFC
	0x034AD5D4 MOV X0, X19
	0x034AD5D8 MOV X1, X20
	0x034AD5DC MOV X2, X31
	0x034AD5E0 BL 0x32C4908
	0x034AD5E4 B 0x34AD4BC
	0x034AD5E8 MOVZ W0, 0x8
	0x034AD5EC BL 0x3EB1AF0
	0x034AD5F0 LDR X8, [X20]
	0x034AD5F4 STR X8, [X0]
	0x034AD5F8 ADRP X1, 0xA07000
	0x034AD5FC ADD X1, X1, 0xE58
	0x034AD600 MOV X2, X31
	0x034AD604 BL 0x3EB1B00
	0x034AD608 MOV X20, X0
	0x034AD60C BL 0x3EB1AE0
	0x034AD610 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF31000
	011 Move W8, [X20+2594]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC86000
	018 Move X0, [X0+536]
	019 Call 0x1C17CF4
	020 Move X0, 0xC4A000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC48000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC48000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC48000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC82000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC4A000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC4A000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4A000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC50000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC49000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC70000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0xC86000
	054 Move X0, [X0+544]
	055 Call 0x1C17CF4
	056 Move X0, 0xC82000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC83000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC82000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC47000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2594], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC4A000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC49000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC86000
	083 Move X8, [X8+544]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC83000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC47000
	105 Move X9, 0xC50000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC70000
	131 Move X9, 0xC48000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC48000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC82000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC82000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC48000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC82000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC4A000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC4A000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC4A000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC86000
	245 Move X8, [X8+536]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC4F000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC83000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC86000
	274 Move X0, [X0+552]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC47000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC4A000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA08000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AD614 BL 0x1D2C690
	0x034AD618 BL 0x1990590
	0x034AD61C STR X30, [X31 - 0x30]!
	0x034AD620 STP X22, X21, [X31 + 0x10]
	0x034AD624 STP X20, X19, [X31 + 0x20]
	0x034AD628 ADRP X21, 0xF30000
	0x034AD62C ADRP X22, 0xC49000
	0x034AD630 LDRB W8, [X21 + 0xA29]
	0x034AD634 LDR X22, [X22 + 0x280]
	0x034AD638 MOV X19, X1
	0x034AD63C MOV X20, X0
	0x034AD640 TBNZ X8, 0x0, 0x34AD658
	0x034AD644 ADRP X0, 0xC49000
	0x034AD648 LDR X0, [X0 + 0x280]
	0x034AD64C BL 0x1C16CF4
	0x034AD650 MOVZ W8, 0x1
	0x034AD654 STRB W8, [X21 + 0xA29]
	0x034AD658 LDR X0, [X22]
	0x034AD65C LDR W8, [X0 + 0xE0]
	0x034AD660 CBNZ W8, 0x34AD668
	0x034AD664 BL 0x1C16DFC
	0x034AD668 ADD X0, X20, 0x8
	0x034AD66C MOV X1, X19
	0x034AD670 LDP X20, X19, [X31 + 0x20]
	0x034AD674 LDP X22, X21, [X31 + 0x10]
	0x034AD678 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF31000
	007 Move X22, 0xC4A000
	008 Move W8, [X21+2595]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC4A000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2595], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

