Type: Nakama.Console.ConsoleConfig

Method: System.String get_Config()

Disassembly:
	0x034A0EE8 LDR X8, [X20]
	0x034A0EEC LDR X1, [X8 + 0x40]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Config(System.String value)

Disassembly:
	0x034A0EF0 BL 0x1C16E00
	0x034A0EF4 CBZ X0, 0x34A0FF4

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_ServerVersion()

Disassembly:
	0x034A0EF8 LDR W8, [X20 + 0x18]
	0x034A0EFC CMP W8, 0x1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_ServerVersion(System.String value)

Disassembly:
	0x034A0F00 B.LS 0x34A0FF0
	0x034A0F04 LDR X8, [X23]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.Console.IConfigWarning> get_Warnings()

Disassembly:
	0x034A0F08 ADD X1, X31, 0x8
	0x034A0F0C STR X8, [X20 + 0x28]
	0x034A0F10 LDR W8, [X19 + 0x24]
	0x034A0F14 LDR X0, [X24]
	0x034A0F18 STR W8, [X31 + 0x8]
	0x034A0F1C BL 0x1C16E04
	0x034A0F20 MOV X21, X0
	0x034A0F24 CBZ X0, 0x34A0F3C
	0x034A0F28 LDR X8, [X20]
	0x034A0F2C MOV X0, X21
	0x034A0F30 LDR X1, [X8 + 0x40]
	0x034A0F34 BL 0x1C16E00
	0x034A0F38 CBZ X0, 0x34A0FF4
	0x034A0F3C LDR W8, [X20 + 0x18]
	0x034A0F40 CMP W8, 0x2
	0x034A0F44 B.LS 0x34A0FF0
	0x034A0F48 STR X21, [X20 + 0x30]
	0x034A0F4C LDR X0, [X22]
	0x034A0F50 CBZ X0, 0x34A0F68
	0x034A0F54 LDR X8, [X20]
	0x034A0F58 LDR X1, [X8 + 0x40]
	0x034A0F5C BL 0x1C16E00
	0x034A0F60 CBZ X0, 0x34A0FF4
	0x034A0F64 LDR W8, [X20 + 0x18]
	0x034A0F68 CMP W8, 0x3
	0x034A0F6C B.LS 0x34A0FF0
	0x034A0F70 LDR X8, [X22]
	0x034A0F74 ADRP X21, 0xC8E000
	0x034A0F78 ADRP X23, 0xC80000
	0x034A0F7C ADRP X24, 0xC8D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF3E000
	005 Move W8, [X20+2495]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC92000
	012 Move X0, [X0+2944]
	013 Call 0x1C17CF4
	014 Move X0, 0xC92000
	015 Move X0, [X0+2952]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2495], W8
	019 Move X19, [X19+32]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xC92000
	023 Move X8, [X8+2952]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xC92000
	027 Move X8, [X8+2944]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.Console.ConfigWarning> get__warnings()

Disassembly:
	0x034A0F80 LDR X21, [X21 + 0x30]
	0x034A0F84 LDR X23, [X23 + 0xBB8]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set__warnings(System.Collections.Generic.List`1<Nakama.Console.ConfigWarning> value)

Disassembly:
	0x034A0F88 LDR X24, [X24 + 0xE88]
	0x034A0F8C MOV X0, X20

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034A0F90 MOV X1, X31
	0x034A0F94 STR X8, [X20 + 0x38]
	0x034A0F98 BL 0x3227578
	0x034A0F9C LDR X2, [X19 + 0x28]
	0x034A0FA0 LDR X1, [X21]
	0x034A0FA4 LDR X3, [X22]
	0x034A0FA8 MOV X4, X31
	0x034A0FAC BL 0x32277C4
	0x034A0FB0 LDR X2, [X19 + 0x30]
	0x034A0FB4 LDR X1, [X23]
	0x034A0FB8 LDR X3, [X22]
	0x034A0FBC MOV X4, X31
	0x034A0FC0 BL 0x32277C4
	0x034A0FC4 LDR X2, [X19 + 0x38]
	0x034A0FC8 LDR X1, [X24]
	0x034A0FCC LDR X3, [X22]
	0x034A0FD0 MOV X4, X31
	0x034A0FD4 BL 0x32277C4
	0x034A0FD8 LDP X20, X19, [X31 + 0x40]
	0x034A0FDC LDP X22, X21, [X31 + 0x30]
	0x034A0FE0 LDP X24, X23, [X31 + 0x20]
	0x034A0FE4 LDP X30, X25, [X31 + 0x10]
	0x034A0FE8 ADD X31, X31, 0x50
	0x034A0FEC RET
	0x034A0FF0 BL 0x1C16F28
	0x034A0FF4 BL 0x1C16F44
	0x034A0FF8 MOV X1, X31
	0x034A0FFC BL 0x1C16DEC
	0x034A1000 BL 0x1C16F20
	0x034A1004 MOV X1, X31
	0x034A1008 B 0x33BDD8C
	0x034A100C LDR X0, [X0 + 0x10]
	0x034A1010 RET
	0x034A1014 STR X1, [X0 + 0x10]
	0x034A1018 RET
	0x034A101C STR X30, [X31 - 0x20]!
	0x034A1020 STP X20, X19, [X31 + 0x10]
	0x034A1024 ADRP X20, 0xF3C000
	0x034A1028 LDRB W8, [X20 + 0x9CD]
	0x034A102C MOV X19, X0
	0x034A1030 TBNZ X8, 0x0, 0x34A1054
	0x034A1034 ADRP X0, 0xC90000
	0x034A1038 LDR X0, [X0 + 0xC08]
	0x034A103C BL 0x1C16CF4
	0x034A1040 ADRP X0, 0xC90000
	0x034A1044 LDR X0, [X0 + 0xC10]
	0x034A1048 BL 0x1C16CF4
	0x034A104C MOVZ W8, 0x1
	0x034A1050 STRB W8, [X20 + 0x9CD]
	0x034A1054 LDR X19, [X19 + 0x18]
	0x034A1058 CBNZ X19, 0x34A1084
	0x034A105C ADRP X8, 0xC90000
	0x034A1060 LDR X8, [X8 + 0xC10]
	0x034A1064 LDR X0, [X8]
	0x034A1068 BL 0x1C16F10
	0x034A106C ADRP X8, 0xC90000
	0x034A1070 LDR X8, [X8 + 0xC08]
	0x034A1074 MOV W1, W31
	0x034A1078 MOV X19, X0
	0x034A107C LDR X2, [X8]
	0x034A1080 BL 0x301B830
	0x034A1084 MOV X0, X19
	0x034A1088 LDP X20, X19, [X31 + 0x10]
	0x034A108C LDR X30, [X31], #0x20
	0x034A1090 RET
	0x034A1094 LDR X0, [X0 + 0x18]
	0x034A1098 RET
	0x034A109C STR X1, [X0 + 0x18]
	0x034A10A0 RET
	0x034A10A4 LDR X0, [X0 + 0x20]
	0x034A10A8 RET
	0x034A10AC STR X1, [X0 + 0x20]
	0x034A10B0 RET
	0x034A10B4 LDR X0, [X0 + 0x28]
	0x034A10B8 RET
	0x034A10BC LDR X0, [X0 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xF3E000
	012 Move X25, 0xC54000
	013 Move X26, 0xC92000
	014 Move X23, 0xC54000
	015 Move X20, 0xC92000
	016 Move X24, 0xC92000
	017 Move X21, 0xC92000
	018 Move X22, 0xC8E000
	019 Move X25, [X25+2440]
	020 Move X26, [X26+2960]
	021 Move W8, [X27+2496]
	022 Move X23, [X23+2104]
	023 Move X20, [X20+2968]
	024 Move X24, [X24+2976]
	025 Move X21, [X21+2984]
	026 Move X22, [X22+3408]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0xC92000
	033 Move X0, [X0+2976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC92000
	036 Move X0, [X0+2984]
	037 Call 0x1C17CF4
	038 Move X0, 0xC91000
	039 Move X0, [X0+2960]
	040 Call 0x1C17CF4
	041 Move X0, 0xC53000
	042 Move X0, [X0+2104]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8D000
	045 Move X0, [X0+3408]
	046 Call 0x1C17CF4
	047 Move X0, 0xC53000
	048 Move X0, [X0+2440]
	049 Call 0x1C17CF4
	050 Move X0, 0xC91000
	051 Move X0, [X0+2968]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X27+2496], W8
	055 Move X2, [X19+16]
	056 Move X0, [X25]
	057 Move X1, [X26]
	058 Move X3, [X23]
	059 Move X4, X31
	060 Call String.Concat, X0, X1, X2, X3
	061 Move X2, [X19+24]
	062 Move X1, [X20]
	063 Move X3, [X23]
	064 Move X4, X31
	065 Call String.Concat, X0, X1, X2, X3
	066 Move X20, X0
	067 Move X0, X19
	068 Call ConsoleConfig.get_Warnings, X0
	069 Move X8, [X23]
	070 Move X2, [X24]
	071 Move X1, X0
	072 Move X0, X8
	073 Call String.Join, X0, X1
	074 Move X1, [X21]
	075 Move X3, [X22]
	076 Move X2, X0
	077 Move X0, X20
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X4, X31
	087 Move X30, [X31+80]
	088 Move X27, [X31+88]
	089 Call String.Concat, X0, X1, X2, X3
	090 Return X0

Method: System.Void .ctor()

Disassembly:
	0x034A10C0 RET
	0x034A10C4 STR X1, [X0 + 0x28]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

