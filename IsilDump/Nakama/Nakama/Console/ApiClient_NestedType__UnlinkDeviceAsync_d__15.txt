Type: Nakama.Console.ApiClient/<UnlinkDeviceAsync>d__15

Method: System.Void MoveNext()

Disassembly:
	0x034ACB28 MOV X1, X20
	0x034ACB2C MOV X2, X31
	0x034ACB30 BL 0x32C4908
	0x034ACB34 B 0x34ACA0C
	0x034ACB38 MOVZ W0, 0x8
	0x034ACB3C BL 0x3EB1AF0
	0x034ACB40 LDR X8, [X20]
	0x034ACB44 STR X8, [X0]
	0x034ACB48 ADRP X1, 0xA08000
	0x034ACB4C ADD X1, X1, 0xE58
	0x034ACB50 MOV X2, X31
	0x034ACB54 BL 0x3EB1B00
	0x034ACB58 MOV X20, X0
	0x034ACB5C BL 0x3EB1AE0
	0x034ACB60 MOV X0, X20
	0x034ACB64 BL 0x1D2C690
	0x034ACB68 BL 0x1990590
	0x034ACB6C STR X30, [X31 - 0x30]!
	0x034ACB70 STP X22, X21, [X31 + 0x10]
	0x034ACB74 STP X20, X19, [X31 + 0x20]
	0x034ACB78 ADRP X21, 0xF31000
	0x034ACB7C ADRP X22, 0xC4A000
	0x034ACB80 LDRB W8, [X21 + 0xA25]
	0x034ACB84 LDR X22, [X22 + 0x280]
	0x034ACB88 MOV X19, X1
	0x034ACB8C MOV X20, X0
	0x034ACB90 TBNZ X8, 0x0, 0x34ACBA8
	0x034ACB94 ADRP X0, 0xC4A000
	0x034ACB98 LDR X0, [X0 + 0x280]
	0x034ACB9C BL 0x1C16CF4
	0x034ACBA0 MOVZ W8, 0x1
	0x034ACBA4 STRB W8, [X21 + 0xA25]
	0x034ACBA8 LDR X0, [X22]
	0x034ACBAC LDR W8, [X0 + 0xE0]
	0x034ACBB0 CBNZ W8, 0x34ACBB8
	0x034ACBB4 BL 0x1C16DFC
	0x034ACBB8 ADD X0, X20, 0x8
	0x034ACBBC MOV X1, X19
	0x034ACBC0 LDP X20, X19, [X31 + 0x20]
	0x034ACBC4 LDP X22, X21, [X31 + 0x10]
	0x034ACBC8 MOV X2, X31
	0x034ACBCC LDR X30, [X31], #0x30
	0x034ACBD0 B 0x32C477C
	0x034ACBD4 SUB X31, X31, 0x50
	0x034ACBD8 STP X30, X25, [X31 + 0x10]
	0x034ACBDC STP X24, X23, [X31 + 0x20]
	0x034ACBE0 STP X22, X21, [X31 + 0x30]
	0x034ACBE4 STP X20, X19, [X31 + 0x40]
	0x034ACBE8 ADRP X20, 0xF31000
	0x034ACBEC LDRB W8, [X20 + 0xA26]
	0x034ACBF0 MOV X19, X0
	0x034ACBF4 TBNZ X8, 0x0, 0x34ACCCC
	0x034ACBF8 ADRP X0, 0xC86000
	0x034ACBFC LDR X0, [X0 + 0x248]
	0x034ACC00 BL 0x1C16CF4
	0x034ACC04 ADRP X0, 0xC4A000
	0x034ACC08 LDR X0, [X0 + 0x280]
	0x034ACC0C BL 0x1C16CF4
	0x034ACC10 ADRP X0, 0xC48000
	0x034ACC14 LDR X0, [X0 + 0x810]
	0x034ACC18 BL 0x1C16CF4
	0x034ACC1C ADRP X0, 0xC48000
	0x034ACC20 LDR X0, [X0 + 0x6C0]
	0x034ACC24 BL 0x1C16CF4
	0x034ACC28 ADRP X0, 0xC48000
	0x034ACC2C LDR X0, [X0 + 0x6D0]
	0x034ACC30 BL 0x1C16CF4
	0x034ACC34 ADRP X0, 0xC82000
	0x034ACC38 LDR X0, [X0 + 0x7B8]
	0x034ACC3C BL 0x1C16CF4
	0x034ACC40 ADRP X0, 0xC4A000
	0x034ACC44 LDR X0, [X0 + 0x1E0]
	0x034ACC48 BL 0x1C16CF4
	0x034ACC4C ADRP X0, 0xC4A000
	0x034ACC50 LDR X0, [X0 + 0x1F0]
	0x034ACC54 BL 0x1C16CF4
	0x034ACC58 ADRP X0, 0xC4A000
	0x034ACC5C LDR X0, [X0 + 0x1F8]
	0x034ACC60 BL 0x1C16CF4
	0x034ACC64 ADRP X0, 0xC50000
	0x034ACC68 LDR X0, [X0 + 0x3A0]
	0x034ACC6C BL 0x1C16CF4
	0x034ACC70 ADRP X0, 0xC49000
	0x034ACC74 LDR X0, [X0 + 0xA28]
	0x034ACC78 BL 0x1C16CF4
	0x034ACC7C ADRP X0, 0xC70000
	0x034ACC80 LDR X0, [X0 + 0x4D8]
	0x034ACC84 BL 0x1C16CF4
	0x034ACC88 ADRP X0, 0xC86000
	0x034ACC8C LDR X0, [X0 + 0x250]
	0x034ACC90 BL 0x1C16CF4
	0x034ACC94 ADRP X0, 0xC82000
	0x034ACC98 LDR X0, [X0 + 0x7D0]
	0x034ACC9C BL 0x1C16CF4
	0x034ACCA0 ADRP X0, 0xC83000
	0x034ACCA4 LDR X0, [X0 + 0x2E8]
	0x034ACCA8 BL 0x1C16CF4
	0x034ACCAC ADRP X0, 0xC82000
	0x034ACCB0 LDR X0, [X0 + 0x7D8]
	0x034ACCB4 BL 0x1C16CF4
	0x034ACCB8 ADRP X0, 0xC47000
	0x034ACCBC LDR X0, [X0 + 0x988]
	0x034ACCC0 BL 0x1C16CF4
	0x034ACCC4 MOVZ W8, 0x1
	0x034ACCC8 STRB W8, [X20 + 0xA26]
	0x034ACCCC STR X31, [X31 + 0x8]
	0x034ACCD0 ADRP X25, 0xC4A000
	0x034ACCD4 LDR W8, [X19]
	0x034ACCD8 LDR X25, [X25 + 0x280]
	0x034ACCDC CBZ W8, 0x34ACE6C
	0x034ACCE0 LDR X21, [X19 + 0x20]
	0x034ACCE4 CBZ X21, 0x34ACF7C
	0x034ACCE8 ADRP X8, 0xC49000
	0x034ACCEC LDR X8, [X8 + 0xA28]
	0x034ACCF0 LDR X0, [X8]
	0x034ACCF4 ADRP X8, 0xC86000
	0x034ACCF8 LDR X8, [X8 + 0x250]
	0x034ACCFC LDR X24, [X19 + 0x28]
	0x034ACD00 LDR W9, [X0 + 0xE0]
	0x034ACD04 LDR X20, [X8]
	0x034ACD08 CBNZ W9, 0x34ACD10
	0x034ACD0C BL 0x1C16DFC
	0x034ACD10 MOV X0, X21
	0x034ACD14 MOV X1, X31
	0x034ACD18 BL 0x3624D20
	0x034ACD1C CBZ X20, 0x34ACFC4
	0x034ACD20 ADRP X8, 0xC83000
	0x034ACD24 LDR X8, [X8 + 0x2E8]
	0x034ACD28 MOV X2, X0
	0x034ACD2C LDR X1, [X8]
	0x034ACD30 MOV X0, X20
	0x034ACD34 MOV X3, X31
	0x034ACD38 BL 0x32293BC
	0x034ACD3C CBZ X24, 0x34ACFC8
	0x034ACD40 ADRP X8, 0xC47000
	0x034ACD44 ADRP X9, 0xC50000
	0x034ACD48 LDR X8, [X8 + 0x988]
	0x034ACD4C LDR X9, [X9 + 0x3A0]
	0x034ACD50 MOV X22, X0
	0x034ACD54 LDR X23, [X24 + 0x10]
	0x034ACD58 LDR X21, [X8]
	0x034ACD5C LDR X0, [X9]
	0x034ACD60 BL 0x1C16F10
	0x034ACD64 MOV X20, X0
	0x034ACD68 MOV X1, X23
	0x034ACD6C MOV X2, X31
	0x034ACD70 BL 0x36281F8
	0x034ACD74 CBZ X20, 0x34ACFCC
	0x034ACD78 MOV X0, X20
	0x034ACD7C MOV X1, X22
	0x034ACD80 MOV X2, X31
	0x034ACD84 BL 0x36288CC
	0x034ACD88 MOV X0, X20
	0x034ACD8C MOV X1, X21
	0x034ACD90 MOV X2, X31
	0x034ACD94 BL 0x3628980
	0x034ACD98 MOV X0, X20
	0x034ACD9C MOV X1, X31
	0x034ACDA0 BL 0x3628A38
	0x034ACDA4 ADRP X8, 0xC70000
	0x034ACDA8 ADRP X9, 0xC48000
	0x034ACDAC LDR X8, [X8 + 0x4D8]
	0x034ACDB0 LDR X9, [X9 + 0x6D0]
	0x034ACDB4 MOV X20, X0
	0x034ACDB8 LDR X21, [X8]
	0x034ACDBC LDR X0, [X9]
	0x034ACDC0 BL 0x1C16F10
	0x034ACDC4 ADRP X8, 0xC48000
	0x034ACDC8 LDR X8, [X8 + 0x6C0]
	0x034ACDCC MOV X22, X0
	0x034ACDD0 LDR X1, [X8]
	0x034ACDD4 BL 0x2AA4804
	0x034ACDD8 ADRP X8, 0xC82000
	0x034ACDDC LDR X8, [X8 + 0x7D8]
	0x034ACDE0 LDR X1, [X19 + 0x30]
	0x034ACDE4 LDR X0, [X8]
	0x034ACDE8 MOV X2, X31
	0x034ACDEC BL 0x321B938
	0x034ACDF0 CBZ X22, 0x34ACFD0
	0x034ACDF4 ADRP X8, 0xC82000
	0x034ACDF8 LDR X8, [X8 + 0x7D0]
	0x034ACDFC ADRP X9, 0xC48000
	0x034ACE00 LDR X9, [X9 + 0x810]
	0x034ACE04 MOV X2, X0
	0x034ACE08 LDR X1, [X8]
	0x034ACE0C LDR X3, [X9]
	0x034ACE10 MOV X0, X22
	0x034ACE14 BL 0x2AA5098
	0x034ACE18 LDR X23, [X24 + 0x20]
	0x034ACE1C CBZ X23, 0x34ACFD4
	0x034ACE20 ADRP X10, 0xC82000
	0x034ACE24 LDR X8, [X23]
	0x034ACE28 LDR X10, [X10 + 0x7B8]
	0x034ACE2C LDR W24, [X24 + 0x18]
	0x034ACE30 LDRH W9, [X8 + 0x12E]
	0x034ACE34 LDR X1, [X10]
	0x034ACE38 CBZ X9, 0x34ACE5C
	0x034ACE3C LDR X10, [X8 + 0xB0]
	0x034ACE40 ADD X10, X10, 0x8
	0x034ACE44 LDUR X11, [X10 - 0x8]
	0x034ACE48 CMP X11, X1
	0x034ACE4C B.EQ 0x34ACE84
	0x034ACE50 SUBS X9, X9, 0x1
	0x034ACE54 ADD X10, X10, 0x10
	0x034ACE58 B.NE 0x34ACE44
	0x034ACE5C MOVZ W2, 0x3
	0x034ACE60 MOV X0, X23
	0x034ACE64 BL 0x1C5C788
	0x034ACE68 B 0x34ACE94
	0x034ACE6C LDR X8, [X19 + 0x38]
	0x034ACE70 MOVN W9, 0x0
	0x034ACE74 STR X8, [X31 + 0x8]
	0x034ACE78 STR X31, [X19 + 0x38]
	0x034ACE7C STR W9, [X19]
	0x034ACE80 B 0x34ACEF0
	0x034ACE84 LDR W9, [X10]
	0x034ACE88 ADD W9, W9, 0x3
	0x034ACE8C ADD X8, X8, W9, 0x4, SXTW
	0x034ACE90 ADD X0, X8, 0x138
	0x034ACE94 LDP X8, X9, [X0]
	0x034ACE98 MOV X0, X23
	0x034ACE9C MOV X1, X21
	0x034ACEA0 MOV X2, X20
	0x034ACEA4 MOV X3, X22
	0x034ACEA8 MOV X4, X31
	0x034ACEAC MOV W5, W24
	0x034ACEB0 MOV X6, X31
	0x034ACEB4 MOV X7, X31
	0x034ACEB8 STR X9, [X31]
	0x034ACEBC BLR X8
	0x034ACEC0 CBZ X0, 0x34ACFD8
	0x034ACEC4 ADRP X8, 0xC4A000
	0x034ACEC8 LDR X8, [X8 + 0x1F8]
	0x034ACECC LDR X1, [X8]
	0x034ACED0 BL 0x269F5D0
	0x034ACED4 ADRP X8, 0xC4A000
	0x034ACED8 LDR X8, [X8 + 0x1F0]
	0x034ACEDC STR X0, [X31 + 0x8]
	0x034ACEE0 LDR X1, [X8]
	0x034ACEE4 ADD X0, X31, 0x8
	0x034ACEE8 BL 0x2677430
	0x034ACEEC TBZ X0, 0x0, 0x34ACF2C
	0x034ACEF0 ADRP X8, 0xC4A000
	0x034ACEF4 LDR X8, [X8 + 0x1E0]
	0x034ACEF8 ADD X0, X31, 0x8
	0x034ACEFC LDR X1, [X8]
	0x034ACF00 BL 0x2677474
	0x034ACF04 MOVN W8, 0x1
	0x034ACF08 STR W8, [X19], #0x8
	0x034ACF0C LDR X0, [X25]
	0x034ACF10 LDR W8, [X0 + 0xE0]
	0x034ACF14 CBNZ W8, 0x34ACF1C
	0x034ACF18 BL 0x1C16DFC
	0x034ACF1C MOV X0, X19
	0x034ACF20 MOV X1, X31
	0x034ACF24 BL 0x32C4864
	0x034ACF28 B 0x34ACF64
	0x034ACF2C STR W31, [X19]
	0x034ACF30 LDR X8, [X31 + 0x8]
	0x034ACF34 STR X8, [X19 + 0x38]
	0x034ACF38 LDR X0, [X25]
	0x034ACF3C LDR W8, [X0 + 0xE0]
	0x034ACF40 CBNZ W8, 0x34ACF48
	0x034ACF44 BL 0x1C16DFC
	0x034ACF48 ADRP X8, 0xC86000
	0x034ACF4C LDR X8, [X8 + 0x248]
	0x034ACF50 ADD X0, X19, 0x8
	0x034ACF54 LDR X3, [X8]
	0x034ACF58 ADD X1, X31, 0x8
	0x034ACF5C MOV X2, X19
	0x034ACF60 BL 0x21878C0
	0x034ACF64 LDP X20, X19, [X31 + 0x40]
	0x034ACF68 LDP X22, X21, [X31 + 0x30]
	0x034ACF6C LDP X24, X23, [X31 + 0x20]
	0x034ACF70 LDP X30, X25, [X31 + 0x10]
	0x034ACF74 ADD X31, X31, 0x50
	0x034ACF78 RET
	0x034ACF7C ADRP X0, 0xC4F000
	0x034ACF80 LDR X0, [X0 + 0x578]
	0x034ACF84 BL 0x1C16D08
	0x034ACF88 BL 0x1C16F10
	0x034ACF8C MOV X20, X0
	0x034ACF90 ADRP X0, 0xC83000
	0x034ACF94 LDR X0, [X0 + 0x2F0]
	0x034ACF98 BL 0x1C16D08
	0x034ACF9C MOV X1, X0
	0x034ACFA0 MOV X0, X20
	0x034ACFA4 MOV X2, X31
	0x034ACFA8 BL 0x3314A68
	0x034ACFAC ADRP X0, 0xC86000
	0x034ACFB0 LDR X0, [X0 + 0x258]
	0x034ACFB4 BL 0x1C16D08
	0x034ACFB8 MOV X1, X0
	0x034ACFBC MOV X0, X20
	0x034ACFC0 BL 0x1C16DEC
	0x034ACFC4 BL 0x1C16F20
	0x034ACFC8 BL 0x1C16F20
	0x034ACFCC BL 0x1C16F20
	0x034ACFD0 BL 0x1C16F20
	0x034ACFD4 BL 0x1C16F20
	0x034ACFD8 BL 0x1C16F20
	0x034ACFDC B 0x34AD020
	0x034ACFE0 B 0x34AD020
	0x034ACFE4 B 0x34AD020
	0x034ACFE8 B 0x34AD020
	0x034ACFEC B 0x34AD020
	0x034ACFF0 B 0x34AD020
	0x034ACFF4 B 0x34AD020
	0x034ACFF8 B 0x34AD020
	0x034ACFFC B 0x34AD020
	0x034AD000 B 0x34AD020
	0x034AD004 B 0x34AD020
	0x034AD008 B 0x34AD020
	0x034AD00C B 0x34AD020
	0x034AD010 B 0x34AD020
	0x034AD014 B 0x34AD020
	0x034AD018 B 0x34AD020
	0x034AD01C B 0x34AD020
	0x034AD020 MOV X20, X0
	0x034AD024 CMP W1, 0x1
	0x034AD028 B.NE 0x34AD0B8
	0x034AD02C MOV X0, X20
	0x034AD030 BL 0x3EB1AD0
	0x034AD034 MOV X20, X0
	0x034AD038 ADRP X0, 0xC46000
	0x034AD03C LDR X0, [X0 + 0x7D0]
	0x034AD040 BL 0x1C16D08
	0x034AD044 LDR X8, [X20]
	0x034AD048 LDR X1, [X8]
	0x034AD04C BL 0x1C17270
	0x034AD050 TBZ X0, 0x0, 0x34AD090
	0x034AD054 LDR X20, [X20]
	0x034AD058 BL 0x3EB1AE0
	0x034AD05C MOVN W8, 0x1
	0x034AD060 STR W8, [X19], #0x8
	0x034AD064 ADRP X0, 0xC49000
	0x034AD068 LDR X0, [X0 + 0x280]
	0x034AD06C BL 0x1C16D08
	0x034AD070 LDR W8, [X0 + 0xE0]
	0x034AD074 CBNZ W8, 0x34AD07C
	0x034AD078 BL 0x1C16DFC
	0x034AD07C MOV X0, X19
	0x034AD080 MOV X1, X20
	0x034AD084 MOV X2, X31
	0x034AD088 BL 0x32C4908
	0x034AD08C B 0x34ACF64
	0x034AD090 MOVZ W0, 0x8
	0x034AD094 BL 0x3EB1AF0
	0x034AD098 LDR X8, [X20]
	0x034AD09C STR X8, [X0]
	0x034AD0A0 ADRP X1, 0xA07000
	0x034AD0A4 ADD X1, X1, 0xE58
	0x034AD0A8 MOV X2, X31
	0x034AD0AC BL 0x3EB1B00
	0x034AD0B0 MOV X20, X0
	0x034AD0B4 BL 0x3EB1AE0
	0x034AD0B8 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xF32000
	012 Move W8, [X20+2592]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {71}
	018 Move X0, 0xC87000
	019 Move X0, [X0+512]
	020 Call 0x1C17CF4
	021 Move X0, 0xC4B000
	022 Move X0, [X0+640]
	023 Call 0x1C17CF4
	024 Move X0, 0xC49000
	025 Move X0, [X0+2064]
	026 Call 0x1C17CF4
	027 Move X0, 0xC49000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xC49000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0xC83000
	034 Move X0, [X0+1976]
	035 Call 0x1C17CF4
	036 Move X0, 0xC4B000
	037 Move X0, [X0+480]
	038 Call 0x1C17CF4
	039 Move X0, 0xC4B000
	040 Move X0, [X0+496]
	041 Call 0x1C17CF4
	042 Move X0, 0xC4B000
	043 Move X0, [X0+504]
	044 Call 0x1C17CF4
	045 Move X0, 0xC51000
	046 Move X0, [X0+928]
	047 Call 0x1C17CF4
	048 Move X0, 0xC4A000
	049 Move X0, [X0+2600]
	050 Call 0x1C17CF4
	051 Move X0, 0xC71000
	052 Move X0, [X0+1240]
	053 Call 0x1C17CF4
	054 Move X0, 0xC87000
	055 Move X0, [X0+520]
	056 Call 0x1C17CF4
	057 Move X0, 0xC83000
	058 Move X0, [X0+2000]
	059 Call 0x1C17CF4
	060 Move X0, 0xC84000
	061 Move X0, [X0+744]
	062 Call 0x1C17CF4
	063 Move X0, 0xC83000
	064 Move X0, [X0+2008]
	065 Call 0x1C17CF4
	066 Move X0, 0xC48000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+2592], W8
	071 Move [X31+24], X31
	072 Move X26, 0xC4B000
	073 Move W8, [X19]
	074 Move X26, [X26+640]
	075 Compare W8, 0
	076 JumpIfEqual {198}
	077 Move X21, [X19+32]
	078 Compare X21, 0
	079 JumpIfEqual {280}
	080 Move X8, [X19+40]
	081 Compare X8, 0
	082 JumpIfEqual {298}
	083 Move X8, 0xC4A000
	084 Move X8, [X8+2600]
	085 Move X0, [X8]
	086 Move X8, 0xC87000
	087 Move X8, [X8+520]
	088 Move X25, [X19+48]
	089 Move W9, [X0+224]
	090 Move X20, [X8]
	091 Compare W9, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X21
	095 Move X1, X31
	096 Call Uri.EscapeDataString, X0
	097 Compare X20, 0
	098 JumpIfEqual {316}
	099 Move X8, 0xC84000
	100 Move X8, [X8+744]
	101 Move X2, X0
	102 Move X1, [X8]
	103 Move X0, X20
	104 Move X3, X31
	105 Call String.Replace, X0, X1, X2
	106 Compare X25, 0
	107 JumpIfEqual {317}
	108 Move X8, 0xC48000
	109 Move X9, 0xC51000
	110 Move X8, [X8+2440]
	111 Move X9, [X9+928]
	112 Move X22, X0
	113 Move X23, [X25+16]
	114 Move X21, [X8]
	115 Move X0, [X9]
	116 Call 0x1C17F10
	117 Move X20, X0
	118 Move X1, X23
	119 Move X2, X31
	120 Call UriBuilder..ctor, X0, X1
	121 Compare X20, 0
	122 JumpIfEqual {318}
	123 Move X0, X20
	124 Move X1, X22
	125 Move X2, X31
	126 Call UriBuilder.set_Path, X0, X1
	127 Move X0, X20
	128 Move X1, X21
	129 Move X2, X31
	130 Call UriBuilder.set_Query, X0, X1
	131 Move X0, X20
	132 Move X1, X31
	133 Call UriBuilder.get_Uri, X0
	134 Move X8, 0xC71000
	135 Move X9, 0xC49000
	136 Move X8, [X8+1240]
	137 Move X9, [X9+1744]
	138 Move X20, X0
	139 Move X21, [X8]
	140 Move X0, [X9]
	141 Call 0x1C17F10
	142 Move X8, 0xC49000
	143 Move X8, [X8+1728]
	144 Move X22, X0
	145 Move X1, [X8]
	146 Call Dictionary`2<Object, Object>..ctor, X0
	147 Move X8, 0xC83000
	148 Move X8, [X8+2008]
	149 Move X1, [X19+56]
	150 Move X0, [X8]
	151 Move X2, X31
	152 Call String.Concat, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {319}
	155 Move X8, 0xC83000
	156 Move X8, [X8+2000]
	157 Move X9, 0xC49000
	158 Move X9, [X9+2064]
	159 Move X2, X0
	160 Move X1, [X8]
	161 Move X3, [X9]
	162 Move X0, X22
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move X0, [X19+40]
	165 Move X1, X31
	166 Call JsonWriter.ToJson, X0
	167 Move X23, X0
	168 Move X0, X31
	169 Call Encoding.get_UTF8
	170 Compare X0, 0
	171 JumpIfEqual {320}
	172 Move X8, [X0]
	173 Move X9, [X8+616]
	174 Move X2, [X8+624]
	175 Move X1, X23
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X24, [X25+32]
	178 Compare X24, 0
	179 JumpIfEqual {321}
	180 Move X10, 0xC83000
	181 Move X8, [X24]
	182 Move X10, [X10+1976]
	183 Move W25, [X25+24]
	184 Move X23, X0
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X10]
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 3
	196 Move X0, X24
	197 Call 0x1C5D788
	198 Move X8, [X19+64]
	199 Move TEMP, 0
	200 Not TEMP
	201 Move W9, TEMP
	202 Move [X31+24], X8
	203 Move [X19+64], X31
	204 Move [X19], W9
	205 Move W9, [X10]
	206 Add W9, W9, 3
	207 Add X8, X8, W9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X9, [X0+8]
	211 Move X0, X24
	212 Move X1, X21
	213 Move X2, X20
	214 Move X3, X22
	215 Move X4, X23
	216 Move W5, W25
	217 Move X6, X31
	218 Move X7, X31
	219 Move [X31], X9
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X0, 0
	222 JumpIfEqual {322}
	223 Move X8, 0xC4B000
	224 Move X8, [X8+504]
	225 Move X1, [X8]
	226 Call Task`1<Object>.GetAwaiter, X0
	227 Move X8, 0xC4B000
	228 Move X8, [X8+496]
	229 Move [X31+24], X0
	230 Move X1, [X8]
	231 Add X0, X31, 24
	232 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {254}
	237 Move X8, 0xC4B000
	238 Move X8, [X8+480]
	239 Add X0, X31, 24
	240 Move X1, [X8]
	241 Call TaskAwaiter`1<Object>.GetResult, X0
	242 Move TEMP, 1
	243 Not TEMP
	244 Move W8, TEMP
	245 Move [X19+8], W8
	246 Move X0, [X26]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X0, X19
	252 Move X1, X31
	253 Call AsyncTaskMethodBuilder.SetResult, X0
	254 Move [X19], W31
	255 Move X8, [X31+24]
	256 Move [X19+64], X8
	257 Move X0, [X26]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X8, 0xC87000
	263 Move X8, [X8+512]
	264 Add X0, X19, 8
	265 Move X3, [X8]
	266 Add X1, X31, 24
	267 Move X2, X19
	268 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	269 Move X20, [X31+80]
	270 Move X19, [X31+88]
	271 Move X22, [X31+64]
	272 Move X21, [X31+72]
	273 Move X24, [X31+48]
	274 Move X23, [X31+56]
	275 Move X26, [X31+32]
	276 Move X25, [X31+40]
	277 Move X30, [X31+16]
	278 Add X31, X31, 96
	279 Return 
	280 Move X0, 0xC50000
	281 Move X0, [X0+1400]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X20, X0
	285 Move X0, 0xC84000
	286 Move X0, [X0+752]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call ArgumentException..ctor, X0, X1
	292 Move X0, 0xC87000
	293 Move X0, [X0+528]
	294 Call 0x1C17D08
	295 Move X1, X0
	296 Move X0, X20
	297 Call 0x1C17DEC
	298 Move X0, 0xC50000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xC83000
	304 Move X0, [X0+3016]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xC87000
	311 Move X0, [X0+528]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Move X20, X0
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X0, X20
	326 Call 0x3EB2AD0
	327 Move X20, X0
	328 Move X0, 0xC47000
	329 Move X0, [X0+2000]
	330 Call 0x1C17D08
	331 Move X8, [X20]
	332 Move X1, [X8]
	333 Call 0x1C18270
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {355}
	338 Move X20, [X20]
	339 Call 0x3EB2AE0
	340 Move TEMP, 1
	341 Not TEMP
	342 Move W8, TEMP
	343 Move [X19+8], W8
	344 Move X0, 0xC4A000
	345 Move X0, [X0+640]
	346 Call 0x1C17D08
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X0, X19
	352 Move X1, X20
	353 Move X2, X31
	354 Call AsyncTaskMethodBuilder.SetException, X0, X1
	355 Move W0, 8
	356 Call 0x3EB2AF0
	357 Move X8, [X20]
	358 Move [X0], X8
	359 Move X1, 0xA08000
	360 Add X1, X1, 3672
	361 Move X2, X31
	362 Call 0x3EB2B00
	363 Move X20, X0
	364 Call 0x3EB2AE0
	365 Move X0, X20
	366 Call 0x1D2D690
	367 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AD0BC BL 0x1D2C690
	0x034AD0C0 BL 0x1990590
	0x034AD0C4 STR X30, [X31 - 0x30]!
	0x034AD0C8 STP X22, X21, [X31 + 0x10]
	0x034AD0CC STP X20, X19, [X31 + 0x20]
	0x034AD0D0 ADRP X21, 0xF30000
	0x034AD0D4 ADRP X22, 0xC49000
	0x034AD0D8 LDRB W8, [X21 + 0xA27]
	0x034AD0DC LDR X22, [X22 + 0x280]
	0x034AD0E0 MOV X19, X1
	0x034AD0E4 MOV X20, X0
	0x034AD0E8 TBNZ X8, 0x0, 0x34AD100
	0x034AD0EC ADRP X0, 0xC49000
	0x034AD0F0 LDR X0, [X0 + 0x280]
	0x034AD0F4 BL 0x1C16CF4
	0x034AD0F8 MOVZ W8, 0x1
	0x034AD0FC STRB W8, [X21 + 0xA27]
	0x034AD100 LDR X0, [X22]
	0x034AD104 LDR W8, [X0 + 0xE0]
	0x034AD108 CBNZ W8, 0x34AD110
	0x034AD10C BL 0x1C16DFC
	0x034AD110 ADD X0, X20, 0x8
	0x034AD114 MOV X1, X19
	0x034AD118 LDP X20, X19, [X31 + 0x20]
	0x034AD11C LDP X22, X21, [X31 + 0x10]
	0x034AD120 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF31000
	007 Move X22, 0xC4A000
	008 Move W8, [X21+2593]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC4A000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2593], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

