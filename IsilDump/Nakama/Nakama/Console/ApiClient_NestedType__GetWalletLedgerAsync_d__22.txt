Type: Nakama.Console.ApiClient/<GetWalletLedgerAsync>d__22

Method: System.Void MoveNext()

Disassembly:
	0x034AAEE0 BL 0x1C16F20
	0x034AAEE4 BL 0x1C16F20
	0x034AAEE8 BL 0x1C16F20
	0x034AAEEC BL 0x1C16F20
	0x034AAEF0 B 0x34AAF4C
	0x034AAEF4 B 0x34AAF4C
	0x034AAEF8 B 0x34AAF4C
	0x034AAEFC B 0x34AAF4C
	0x034AAF00 B 0x34AAF4C
	0x034AAF04 B 0x34AAF4C
	0x034AAF08 B 0x34AAF4C
	0x034AAF0C B 0x34AAF4C
	0x034AAF10 B 0x34AAF4C
	0x034AAF14 B 0x34AAF4C
	0x034AAF18 B 0x34AAF4C
	0x034AAF1C B 0x34AAF4C
	0x034AAF20 B 0x34AAF4C
	0x034AAF24 B 0x34AAF4C
	0x034AAF28 B 0x34AAF4C
	0x034AAF2C B 0x34AAF4C
	0x034AAF30 B 0x34AAF4C
	0x034AAF34 B 0x34AAF4C
	0x034AAF38 B 0x34AAF4C
	0x034AAF3C B 0x34AAF4C
	0x034AAF40 B 0x34AAF4C
	0x034AAF44 B 0x34AAF4C
	0x034AAF48 B 0x34AAF4C
	0x034AAF4C MOV X20, X0
	0x034AAF50 CMP W1, 0x1
	0x034AAF54 B.NE 0x34AAFF0
	0x034AAF58 MOV X0, X20
	0x034AAF5C BL 0x3EB1AD0
	0x034AAF60 MOV X20, X0
	0x034AAF64 ADRP X0, 0xC49000
	0x034AAF68 LDR X0, [X0 + 0x7D0]
	0x034AAF6C BL 0x1C16D08
	0x034AAF70 LDR X8, [X20]
	0x034AAF74 LDR X1, [X8]
	0x034AAF78 BL 0x1C17270
	0x034AAF7C TBZ X0, 0x0, 0x34AAFC8
	0x034AAF80 LDR X20, [X20]
	0x034AAF84 BL 0x3EB1AE0
	0x034AAF88 MOVN W8, 0x1
	0x034AAF8C STR W8, [X19], #0x8
	0x034AAF90 ADRP X0, 0xC87000
	0x034AAF94 LDR X0, [X0 + 0xE48]
	0x034AAF98 BL 0x1C16D08
	0x034AAF9C LDR W8, [X0 + 0xE0]
	0x034AAFA0 CBNZ W8, 0x34AAFA8
	0x034AAFA4 BL 0x1C16DFC
	0x034AAFA8 ADRP X0, 0xC88000
	0x034AAFAC LDR X0, [X0 + 0x1C0]
	0x034AAFB0 BL 0x1C16D08
	0x034AAFB4 MOV X2, X0
	0x034AAFB8 MOV X0, X19
	0x034AAFBC MOV X1, X20
	0x034AAFC0 BL 0x26324C8
	0x034AAFC4 B 0x34AAEBC
	0x034AAFC8 MOVZ W0, 0x8
	0x034AAFCC BL 0x3EB1AF0
	0x034AAFD0 LDR X8, [X20]
	0x034AAFD4 STR X8, [X0]
	0x034AAFD8 ADRP X1, 0xA0A000
	0x034AAFDC ADD X1, X1, 0xE58
	0x034AAFE0 MOV X2, X31
	0x034AAFE4 BL 0x3EB1B00
	0x034AAFE8 MOV X20, X0
	0x034AAFEC BL 0x3EB1AE0
	0x034AAFF0 MOV X0, X20
	0x034AAFF4 BL 0x1D2C690
	0x034AAFF8 BL 0x1990590
	0x034AAFFC STR X30, [X31 - 0x30]!
	0x034AB000 STP X22, X21, [X31 + 0x10]
	0x034AB004 STP X20, X19, [X31 + 0x20]
	0x034AB008 ADRP X22, 0xF32000
	0x034AB00C ADRP X21, 0xC86000
	0x034AB010 LDRB W8, [X22 + 0xA1B]
	0x034AB014 LDR X21, [X21 + 0xE48]
	0x034AB018 MOV X19, X1
	0x034AB01C MOV X20, X0
	0x034AB020 TBNZ X8, 0x0, 0x34AB044
	0x034AB024 ADRP X0, 0xC87000
	0x034AB028 LDR X0, [X0 + 0x1C8]
	0x034AB02C BL 0x1C16CF4
	0x034AB030 ADRP X0, 0xC86000
	0x034AB034 LDR X0, [X0 + 0xE48]
	0x034AB038 BL 0x1C16CF4
	0x034AB03C MOVZ W8, 0x1
	0x034AB040 STRB W8, [X22 + 0xA1B]
	0x034AB044 LDR X0, [X21]
	0x034AB048 ADRP X21, 0xC87000
	0x034AB04C LDR W8, [X0 + 0xE0]
	0x034AB050 LDR X21, [X21 + 0x1C8]
	0x034AB054 CBNZ W8, 0x34AB05C
	0x034AB058 BL 0x1C16DFC
	0x034AB05C LDR X2, [X21]
	0x034AB060 ADD X0, X20, 0x8
	0x034AB064 MOV X1, X19
	0x034AB068 LDP X20, X19, [X31 + 0x20]
	0x034AB06C LDP X22, X21, [X31 + 0x10]
	0x034AB070 LDR X30, [X31], #0x30
	0x034AB074 B 0x2632228
	0x034AB078 SUB X31, X31, 0x50
	0x034AB07C STP X30, X25, [X31 + 0x10]
	0x034AB080 STP X24, X23, [X31 + 0x20]
	0x034AB084 STP X22, X21, [X31 + 0x30]
	0x034AB088 STP X20, X19, [X31 + 0x40]
	0x034AB08C ADRP X20, 0xF32000
	0x034AB090 LDRB W8, [X20 + 0xA1C]
	0x034AB094 MOV X19, X0
	0x034AB098 TBNZ X8, 0x0, 0x34AB170
	0x034AB09C ADRP X0, 0xC87000
	0x034AB0A0 LDR X0, [X0 + 0x1D0]
	0x034AB0A4 BL 0x1C16CF4
	0x034AB0A8 ADRP X0, 0xC4B000
	0x034AB0AC LDR X0, [X0 + 0x280]
	0x034AB0B0 BL 0x1C16CF4
	0x034AB0B4 ADRP X0, 0xC49000
	0x034AB0B8 LDR X0, [X0 + 0x810]
	0x034AB0BC BL 0x1C16CF4
	0x034AB0C0 ADRP X0, 0xC49000
	0x034AB0C4 LDR X0, [X0 + 0x6C0]
	0x034AB0C8 BL 0x1C16CF4
	0x034AB0CC ADRP X0, 0xC49000
	0x034AB0D0 LDR X0, [X0 + 0x6D0]
	0x034AB0D4 BL 0x1C16CF4
	0x034AB0D8 ADRP X0, 0xC83000
	0x034AB0DC LDR X0, [X0 + 0x7B8]
	0x034AB0E0 BL 0x1C16CF4
	0x034AB0E4 ADRP X0, 0xC4B000
	0x034AB0E8 LDR X0, [X0 + 0x1E0]
	0x034AB0EC BL 0x1C16CF4
	0x034AB0F0 ADRP X0, 0xC4B000
	0x034AB0F4 LDR X0, [X0 + 0x1F0]
	0x034AB0F8 BL 0x1C16CF4
	0x034AB0FC ADRP X0, 0xC4B000
	0x034AB100 LDR X0, [X0 + 0x1F8]
	0x034AB104 BL 0x1C16CF4
	0x034AB108 ADRP X0, 0xC51000
	0x034AB10C LDR X0, [X0 + 0x3A0]
	0x034AB110 BL 0x1C16CF4
	0x034AB114 ADRP X0, 0xC4A000
	0x034AB118 LDR X0, [X0 + 0xA28]
	0x034AB11C BL 0x1C16CF4
	0x034AB120 ADRP X0, 0xC71000
	0x034AB124 LDR X0, [X0 + 0x4D8]
	0x034AB128 BL 0x1C16CF4
	0x034AB12C ADRP X0, 0xC87000
	0x034AB130 LDR X0, [X0 + 0x1D8]
	0x034AB134 BL 0x1C16CF4
	0x034AB138 ADRP X0, 0xC83000
	0x034AB13C LDR X0, [X0 + 0x7D0]
	0x034AB140 BL 0x1C16CF4
	0x034AB144 ADRP X0, 0xC84000
	0x034AB148 LDR X0, [X0 + 0x2E8]
	0x034AB14C BL 0x1C16CF4
	0x034AB150 ADRP X0, 0xC83000
	0x034AB154 LDR X0, [X0 + 0x7D8]
	0x034AB158 BL 0x1C16CF4
	0x034AB15C ADRP X0, 0xC48000
	0x034AB160 LDR X0, [X0 + 0x988]
	0x034AB164 BL 0x1C16CF4
	0x034AB168 MOVZ W8, 0x1
	0x034AB16C STRB W8, [X20 + 0xA1C]
	0x034AB170 STR X31, [X31 + 0x8]
	0x034AB174 ADRP X25, 0xC4B000
	0x034AB178 LDR W8, [X19]
	0x034AB17C LDR X25, [X25 + 0x280]
	0x034AB180 CBZ W8, 0x34AB310
	0x034AB184 LDR X21, [X19 + 0x20]
	0x034AB188 CBZ X21, 0x34AB420
	0x034AB18C ADRP X8, 0xC4A000
	0x034AB190 LDR X8, [X8 + 0xA28]
	0x034AB194 LDR X0, [X8]
	0x034AB198 ADRP X8, 0xC87000
	0x034AB19C LDR X8, [X8 + 0x1D8]
	0x034AB1A0 LDR X24, [X19 + 0x28]
	0x034AB1A4 LDR W9, [X0 + 0xE0]
	0x034AB1A8 LDR X20, [X8]
	0x034AB1AC CBNZ W9, 0x34AB1B4
	0x034AB1B0 BL 0x1C16DFC
	0x034AB1B4 MOV X0, X21
	0x034AB1B8 MOV X1, X31
	0x034AB1BC BL 0x3624D20
	0x034AB1C0 CBZ X20, 0x34AB468
	0x034AB1C4 ADRP X8, 0xC84000
	0x034AB1C8 LDR X8, [X8 + 0x2E8]
	0x034AB1CC MOV X2, X0
	0x034AB1D0 LDR X1, [X8]
	0x034AB1D4 MOV X0, X20
	0x034AB1D8 MOV X3, X31
	0x034AB1DC BL 0x32293BC
	0x034AB1E0 CBZ X24, 0x34AB46C
	0x034AB1E4 ADRP X8, 0xC48000
	0x034AB1E8 ADRP X9, 0xC51000
	0x034AB1EC LDR X8, [X8 + 0x988]
	0x034AB1F0 LDR X9, [X9 + 0x3A0]
	0x034AB1F4 MOV X22, X0
	0x034AB1F8 LDR X23, [X24 + 0x10]
	0x034AB1FC LDR X21, [X8]
	0x034AB200 LDR X0, [X9]
	0x034AB204 BL 0x1C16F10
	0x034AB208 MOV X20, X0
	0x034AB20C MOV X1, X23
	0x034AB210 MOV X2, X31
	0x034AB214 BL 0x36281F8
	0x034AB218 CBZ X20, 0x34AB470
	0x034AB21C MOV X0, X20
	0x034AB220 MOV X1, X22
	0x034AB224 MOV X2, X31
	0x034AB228 BL 0x36288CC
	0x034AB22C MOV X0, X20
	0x034AB230 MOV X1, X21
	0x034AB234 MOV X2, X31
	0x034AB238 BL 0x3628980
	0x034AB23C MOV X0, X20
	0x034AB240 MOV X1, X31
	0x034AB244 BL 0x3628A38
	0x034AB248 ADRP X8, 0xC71000
	0x034AB24C ADRP X9, 0xC49000
	0x034AB250 LDR X8, [X8 + 0x4D8]
	0x034AB254 LDR X9, [X9 + 0x6D0]
	0x034AB258 MOV X20, X0
	0x034AB25C LDR X21, [X8]
	0x034AB260 LDR X0, [X9]
	0x034AB264 BL 0x1C16F10
	0x034AB268 ADRP X8, 0xC49000
	0x034AB26C LDR X8, [X8 + 0x6C0]
	0x034AB270 MOV X22, X0
	0x034AB274 LDR X1, [X8]
	0x034AB278 BL 0x2AA4804
	0x034AB27C ADRP X8, 0xC83000
	0x034AB280 LDR X8, [X8 + 0x7D8]
	0x034AB284 LDR X1, [X19 + 0x30]
	0x034AB288 LDR X0, [X8]
	0x034AB28C MOV X2, X31
	0x034AB290 BL 0x321B938
	0x034AB294 CBZ X22, 0x34AB474
	0x034AB298 ADRP X8, 0xC83000
	0x034AB29C LDR X8, [X8 + 0x7D0]
	0x034AB2A0 ADRP X9, 0xC49000
	0x034AB2A4 LDR X9, [X9 + 0x810]
	0x034AB2A8 MOV X2, X0
	0x034AB2AC LDR X1, [X8]
	0x034AB2B0 LDR X3, [X9]
	0x034AB2B4 MOV X0, X22
	0x034AB2B8 BL 0x2AA5098
	0x034AB2BC LDR X23, [X24 + 0x20]
	0x034AB2C0 CBZ X23, 0x34AB478
	0x034AB2C4 ADRP X10, 0xC83000
	0x034AB2C8 LDR X8, [X23]
	0x034AB2CC LDR X10, [X10 + 0x7B8]
	0x034AB2D0 LDR W24, [X24 + 0x18]
	0x034AB2D4 LDRH W9, [X8 + 0x12E]
	0x034AB2D8 LDR X1, [X10]
	0x034AB2DC CBZ X9, 0x34AB300
	0x034AB2E0 LDR X10, [X8 + 0xB0]
	0x034AB2E4 ADD X10, X10, 0x8
	0x034AB2E8 LDUR X11, [X10 - 0x8]
	0x034AB2EC CMP X11, X1
	0x034AB2F0 B.EQ 0x34AB328
	0x034AB2F4 SUBS X9, X9, 0x1
	0x034AB2F8 ADD X10, X10, 0x10
	0x034AB2FC B.NE 0x34AB2E8
	0x034AB300 MOVZ W2, 0x3
	0x034AB304 MOV X0, X23
	0x034AB308 BL 0x1C5C788
	0x034AB30C B 0x34AB338
	0x034AB310 LDR X8, [X19 + 0x38]
	0x034AB314 MOVN W9, 0x0
	0x034AB318 STR X8, [X31 + 0x8]
	0x034AB31C STR X31, [X19 + 0x38]
	0x034AB320 STR W9, [X19]
	0x034AB324 B 0x34AB394
	0x034AB328 LDR W9, [X10]
	0x034AB32C ADD W9, W9, 0x3
	0x034AB330 ADD X8, X8, W9, 0x4, SXTW
	0x034AB334 ADD X0, X8, 0x138
	0x034AB338 LDP X8, X9, [X0]
	0x034AB33C MOV X0, X23
	0x034AB340 MOV X1, X21
	0x034AB344 MOV X2, X20
	0x034AB348 MOV X3, X22
	0x034AB34C MOV X4, X31
	0x034AB350 MOV W5, W24
	0x034AB354 MOV X6, X31
	0x034AB358 MOV X7, X31
	0x034AB35C STR X9, [X31]
	0x034AB360 BLR X8
	0x034AB364 CBZ X0, 0x34AB47C
	0x034AB368 ADRP X8, 0xC4B000
	0x034AB36C LDR X8, [X8 + 0x1F8]
	0x034AB370 LDR X1, [X8]
	0x034AB374 BL 0x269F5D0
	0x034AB378 ADRP X8, 0xC4B000
	0x034AB37C LDR X8, [X8 + 0x1F0]
	0x034AB380 STR X0, [X31 + 0x8]
	0x034AB384 LDR X1, [X8]
	0x034AB388 ADD X0, X31, 0x8
	0x034AB38C BL 0x2677430
	0x034AB390 TBZ X0, 0x0, 0x34AB3D0
	0x034AB394 ADRP X8, 0xC4B000
	0x034AB398 LDR X8, [X8 + 0x1E0]
	0x034AB39C ADD X0, X31, 0x8
	0x034AB3A0 LDR X1, [X8]
	0x034AB3A4 BL 0x2677474
	0x034AB3A8 MOVN W8, 0x1
	0x034AB3AC STR W8, [X19], #0x8
	0x034AB3B0 LDR X0, [X25]
	0x034AB3B4 LDR W8, [X0 + 0xE0]
	0x034AB3B8 CBNZ W8, 0x34AB3C0
	0x034AB3BC BL 0x1C16DFC
	0x034AB3C0 MOV X0, X19
	0x034AB3C4 MOV X1, X31
	0x034AB3C8 BL 0x32C4864
	0x034AB3CC B 0x34AB408
	0x034AB3D0 STR W31, [X19]
	0x034AB3D4 LDR X8, [X31 + 0x8]
	0x034AB3D8 STR X8, [X19 + 0x38]
	0x034AB3DC LDR X0, [X25]
	0x034AB3E0 LDR W8, [X0 + 0xE0]
	0x034AB3E4 CBNZ W8, 0x34AB3EC
	0x034AB3E8 BL 0x1C16DFC
	0x034AB3EC ADRP X8, 0xC87000
	0x034AB3F0 LDR X8, [X8 + 0x1D0]
	0x034AB3F4 ADD X0, X19, 0x8
	0x034AB3F8 LDR X3, [X8]
	0x034AB3FC ADD X1, X31, 0x8
	0x034AB400 MOV X2, X19
	0x034AB404 BL 0x2187654
	0x034AB408 LDP X20, X19, [X31 + 0x40]
	0x034AB40C LDP X22, X21, [X31 + 0x30]
	0x034AB410 LDP X24, X23, [X31 + 0x20]
	0x034AB414 LDP X30, X25, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF34000
	011 Move W8, [X20+2582]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xC89000
	018 Move X0, [X0+304]
	019 Call 0x1C17CF4
	020 Move X0, 0xC89000
	021 Move X0, [X0+312]
	022 Call 0x1C17CF4
	023 Move X0, 0xC88000
	024 Move X0, [X0+3392]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4B000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4B000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xC4B000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0xC85000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xC89000
	039 Move X0, [X0+320]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4D000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4D000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4D000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xC53000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xC4C000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0xC73000
	057 Move X0, [X0+1232]
	058 Call 0x1C17CF4
	059 Move X0, 0xC89000
	060 Move X0, [X0+328]
	061 Call 0x1C17CF4
	062 Move X0, 0xC85000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xC86000
	066 Move X0, [X0+744]
	067 Call 0x1C17CF4
	068 Move X0, 0xC85000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xC4A000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2582], W8
	076 Move [X31+8], X31
	077 Move X25, 0xC88000
	078 Move W8, [X19]
	079 Move X25, [X25+3392]
	080 Compare W8, 0
	081 JumpIfEqual {186}
	082 Move X21, [X19+32]
	083 Compare X21, 0
	084 JumpIfEqual {275}
	085 Move X8, 0xC4B000
	086 Move X8, [X8+2600]
	087 Move X0, [X8]
	088 Move X8, 0xC88000
	089 Move X8, [X8+328]
	090 Move X24, [X19+40]
	091 Move W9, [X0+224]
	092 Move X20, [X8]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Uri.EscapeDataString, X0
	099 Compare X20, 0
	100 JumpIfEqual {293}
	101 Move X8, 0xC85000
	102 Move X8, [X8+744]
	103 Move X2, X0
	104 Move X1, [X8]
	105 Move X0, X20
	106 Move X3, X31
	107 Call String.Replace, X0, X1, X2
	108 Compare X24, 0
	109 JumpIfEqual {294}
	110 Move X8, 0xC49000
	111 Move X9, 0xC52000
	112 Move X8, [X8+2440]
	113 Move X9, [X9+928]
	114 Move X22, X0
	115 Move X23, [X24+16]
	116 Move X21, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X20, X0
	120 Move X1, X23
	121 Move X2, X31
	122 Call UriBuilder..ctor, X0, X1
	123 Compare X20, 0
	124 JumpIfEqual {295}
	125 Move X0, X20
	126 Move X1, X22
	127 Move X2, X31
	128 Call UriBuilder.set_Path, X0, X1
	129 Move X0, X20
	130 Move X1, X21
	131 Move X2, X31
	132 Call UriBuilder.set_Query, X0, X1
	133 Move X0, X20
	134 Move X1, X31
	135 Call UriBuilder.get_Uri, X0
	136 Move X8, 0xC72000
	137 Move X9, 0xC4A000
	138 Move X8, [X8+1232]
	139 Move X9, [X9+1744]
	140 Move X20, X0
	141 Move X21, [X8]
	142 Move X0, [X9]
	143 Call 0x1C17F10
	144 Move X8, 0xC4A000
	145 Move X8, [X8+1728]
	146 Move X22, X0
	147 Move X1, [X8]
	148 Call Dictionary`2<Object, Object>..ctor, X0
	149 Move X8, 0xC84000
	150 Move X8, [X8+2008]
	151 Move X1, [X19+48]
	152 Move X0, [X8]
	153 Move X2, X31
	154 Call String.Concat, X0, X1
	155 Compare X22, 0
	156 JumpIfEqual {296}
	157 Move X8, 0xC84000
	158 Move X8, [X8+2000]
	159 Move X9, 0xC4A000
	160 Move X9, [X9+2064]
	161 Move X2, X0
	162 Move X1, [X8]
	163 Move X3, [X9]
	164 Move X0, X22
	165 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	166 Move X23, [X24+32]
	167 Compare X23, 0
	168 JumpIfEqual {297}
	169 Move X10, 0xC84000
	170 Move X8, [X23]
	171 Move X10, [X10+1976]
	172 Move W24, [X24+24]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Move X1, [X10]
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+56]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+56], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W24
	205 Move X6, X31
	206 Move X7, X31
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {298}
	211 Move X8, 0xC4C000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xC4C000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {250}
	225 Move X8, 0xC4C000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move X8, 0xC88000
	231 Move X8, [X8+320]
	232 Move X1, [X8]
	233 Call JsonParser.FromJson, X0
	234 Move TEMP, 1
	235 Not TEMP
	236 Move W8, TEMP
	237 Move [X19+8], W8
	238 Move X20, X0
	239 Move X0, [X25]
	240 Move X21, 0xC88000
	241 Move W8, [X0+224]
	242 Move X21, [X21+312]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X2, [X21]
	247 Move X0, X19
	248 Move X1, X20
	249 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	250 Move [X19], W31
	251 Move X8, [X31+8]
	252 Move [X19+56], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xC88000
	259 Move X8, [X8+304]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 8
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Move X20, [X31+64]
	266 Move X19, [X31+72]
	267 Move X22, [X31+48]
	268 Move X21, [X31+56]
	269 Move X24, [X31+32]
	270 Move X23, [X31+40]
	271 Move X30, [X31+16]
	272 Move X25, [X31+24]
	273 Add X31, X31, 80
	274 Return 
	275 Move X0, 0xC51000
	276 Move X0, [X0+1400]
	277 Call 0x1C17D08
	278 Call 0x1C17F10
	279 Move X20, X0
	280 Move X0, 0xC85000
	281 Move X0, [X0+752]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X20
	285 Move X2, X31
	286 Call ArgumentException..ctor, X0, X1
	287 Move X0, 0xC88000
	288 Move X0, [X0+336]
	289 Call 0x1C17D08
	290 Move X1, X0
	291 Move X0, X20
	292 Call 0x1C17DEC
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move X20, X0
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, X20
	302 Call 0x3EB2AD0
	303 Move X20, X0
	304 Move X0, 0xC49000
	305 Move X0, [X0+2000]
	306 Call 0x1C17D08
	307 Move X8, [X20]
	308 Move X1, [X8]
	309 Call 0x1C18270
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {334}
	314 Move X20, [X20]
	315 Call 0x3EB2AE0
	316 Move TEMP, 1
	317 Not TEMP
	318 Move W8, TEMP
	319 Move [X19+8], W8
	320 Move X0, 0xC87000
	321 Move X0, [X0+3392]
	322 Call 0x1C17D08
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, 0xC88000
	328 Move X0, [X0+344]
	329 Call 0x1C17D08
	330 Move X2, X0
	331 Move X0, X19
	332 Move X1, X20
	333 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	334 Move W0, 8
	335 Call 0x3EB2AF0
	336 Move X8, [X20]
	337 Move [X0], X8
	338 Move X1, 0xA0A000
	339 Add X1, X1, 3672
	340 Move X2, X31
	341 Call 0x3EB2B00
	342 Move X20, X0
	343 Call 0x3EB2AE0
	344 Move X0, X20
	345 Call 0x1D2D690
	346 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034AB418 ADD X31, X31, 0x50
	0x034AB41C RET
	0x034AB420 ADRP X0, 0xC50000
	0x034AB424 LDR X0, [X0 + 0x578]
	0x034AB428 BL 0x1C16D08
	0x034AB42C BL 0x1C16F10
	0x034AB430 MOV X20, X0
	0x034AB434 ADRP X0, 0xC84000
	0x034AB438 LDR X0, [X0 + 0x2F0]
	0x034AB43C BL 0x1C16D08
	0x034AB440 MOV X1, X0
	0x034AB444 MOV X0, X20
	0x034AB448 MOV X2, X31
	0x034AB44C BL 0x3314A68
	0x034AB450 ADRP X0, 0xC87000
	0x034AB454 LDR X0, [X0 + 0x1E0]
	0x034AB458 BL 0x1C16D08
	0x034AB45C MOV X1, X0
	0x034AB460 MOV X0, X20
	0x034AB464 BL 0x1C16DEC
	0x034AB468 BL 0x1C16F20
	0x034AB46C BL 0x1C16F20
	0x034AB470 BL 0x1C16F20
	0x034AB474 BL 0x1C16F20
	0x034AB478 BL 0x1C16F20
	0x034AB47C BL 0x1C16F20
	0x034AB480 B 0x34AB4C4
	0x034AB484 B 0x34AB4C4
	0x034AB488 B 0x34AB4C4
	0x034AB48C B 0x34AB4C4
	0x034AB490 B 0x34AB4C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF33000
	007 Move X21, 0xC87000
	008 Move W8, [X22+2583]
	009 Move X21, [X21+3392]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC88000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move X0, 0xC87000
	020 Move X0, [X0+3392]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2583], W8
	024 Move X0, [X21]
	025 Move X21, 0xC88000
	026 Move W8, [X0+224]
	027 Move X21, [X21+352]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

