Type: Nakama.Console.ApiClient/<GetConfigAsync>d__25

Method: System.Void MoveNext()

Disassembly:
	0x034A92AC TBNZ X8, 0x0, 0x34A92D0
	0x034A92B0 ADRP X0, 0xC89000
	0x034A92B4 LDR X0, [X0 + 0xC8]
	0x034A92B8 BL 0x1C16CF4
	0x034A92BC ADRP X0, 0xC88000
	0x034A92C0 LDR X0, [X0 + 0xCD0]
	0x034A92C4 BL 0x1C16CF4
	0x034A92C8 MOVZ W8, 0x1
	0x034A92CC STRB W8, [X22 + 0xA11]
	0x034A92D0 LDR X0, [X21]
	0x034A92D4 ADRP X21, 0xC89000
	0x034A92D8 LDR W8, [X0 + 0xE0]
	0x034A92DC LDR X21, [X21 + 0xC8]
	0x034A92E0 CBNZ W8, 0x34A92E8
	0x034A92E4 BL 0x1C16DFC
	0x034A92E8 LDR X2, [X21]
	0x034A92EC ADD X0, X20, 0x8
	0x034A92F0 MOV X1, X19
	0x034A92F4 LDP X20, X19, [X31 + 0x20]
	0x034A92F8 LDP X22, X21, [X31 + 0x10]
	0x034A92FC LDR X30, [X31], #0x30
	0x034A9300 B 0x2632228
	0x034A9304 SUB X31, X31, 0x50
	0x034A9308 STP X30, X25, [X31 + 0x10]
	0x034A930C STP X24, X23, [X31 + 0x20]
	0x034A9310 STP X22, X21, [X31 + 0x30]
	0x034A9314 STP X20, X19, [X31 + 0x40]
	0x034A9318 ADRP X20, 0xF34000
	0x034A931C LDRB W8, [X20 + 0xA12]
	0x034A9320 MOV X19, X0
	0x034A9324 TBNZ X8, 0x0, 0x34A93FC
	0x034A9328 ADRP X0, 0xC89000
	0x034A932C LDR X0, [X0 + 0xD0]
	0x034A9330 BL 0x1C16CF4
	0x034A9334 ADRP X0, 0xC89000
	0x034A9338 LDR X0, [X0 + 0xD8]
	0x034A933C BL 0x1C16CF4
	0x034A9340 ADRP X0, 0xC88000
	0x034A9344 LDR X0, [X0 + 0xDA8]
	0x034A9348 BL 0x1C16CF4
	0x034A934C ADRP X0, 0xC4B000
	0x034A9350 LDR X0, [X0 + 0x810]
	0x034A9354 BL 0x1C16CF4
	0x034A9358 ADRP X0, 0xC4B000
	0x034A935C LDR X0, [X0 + 0x6C0]
	0x034A9360 BL 0x1C16CF4
	0x034A9364 ADRP X0, 0xC4B000
	0x034A9368 LDR X0, [X0 + 0x6D0]
	0x034A936C BL 0x1C16CF4
	0x034A9370 ADRP X0, 0xC85000
	0x034A9374 LDR X0, [X0 + 0x7B8]
	0x034A9378 BL 0x1C16CF4
	0x034A937C ADRP X0, 0xC89000
	0x034A9380 LDR X0, [X0 + 0xE0]
	0x034A9384 BL 0x1C16CF4
	0x034A9388 ADRP X0, 0xC4D000
	0x034A938C LDR X0, [X0 + 0x1E0]
	0x034A9390 BL 0x1C16CF4
	0x034A9394 ADRP X0, 0xC4D000
	0x034A9398 LDR X0, [X0 + 0x1F0]
	0x034A939C BL 0x1C16CF4
	0x034A93A0 ADRP X0, 0xC4D000
	0x034A93A4 LDR X0, [X0 + 0x1F8]
	0x034A93A8 BL 0x1C16CF4
	0x034A93AC ADRP X0, 0xC53000
	0x034A93B0 LDR X0, [X0 + 0x3A0]
	0x034A93B4 BL 0x1C16CF4
	0x034A93B8 ADRP X0, 0xC73000
	0x034A93BC LDR X0, [X0 + 0x4D0]
	0x034A93C0 BL 0x1C16CF4
	0x034A93C4 ADRP X0, 0xC89000
	0x034A93C8 LDR X0, [X0 + 0xE8]
	0x034A93CC BL 0x1C16CF4
	0x034A93D0 ADRP X0, 0xC85000
	0x034A93D4 LDR X0, [X0 + 0x7D0]
	0x034A93D8 BL 0x1C16CF4
	0x034A93DC ADRP X0, 0xC85000
	0x034A93E0 LDR X0, [X0 + 0x7D8]
	0x034A93E4 BL 0x1C16CF4
	0x034A93E8 ADRP X0, 0xC4A000
	0x034A93EC LDR X0, [X0 + 0x988]
	0x034A93F0 BL 0x1C16CF4
	0x034A93F4 MOVZ W8, 0x1
	0x034A93F8 STRB W8, [X20 + 0xA12]
	0x034A93FC STR X31, [X31 + 0x8]
	0x034A9400 ADRP X25, 0xC88000
	0x034A9404 LDR W8, [X19]
	0x034A9408 LDR X25, [X25 + 0xDA8]
	0x034A940C CBZ W8, 0x34A954C
	0x034A9410 LDR X24, [X19 + 0x20]
	0x034A9414 CBZ X24, 0x34A967C
	0x034A9418 ADRP X8, 0xC89000
	0x034A941C ADRP X9, 0xC4A000
	0x034A9420 ADRP X10, 0xC53000
	0x034A9424 LDR X8, [X8 + 0xE8]
	0x034A9428 LDR X9, [X9 + 0x988]
	0x034A942C LDR X10, [X10 + 0x3A0]
	0x034A9430 LDR X23, [X24 + 0x10]
	0x034A9434 LDR X22, [X8]
	0x034A9438 LDR X21, [X9]
	0x034A943C LDR X0, [X10]
	0x034A9440 BL 0x1C16F10
	0x034A9444 MOV X20, X0
	0x034A9448 MOV X1, X23
	0x034A944C MOV X2, X31
	0x034A9450 BL 0x36281F8
	0x034A9454 CBZ X20, 0x34A9680
	0x034A9458 MOV X0, X20
	0x034A945C MOV X1, X22
	0x034A9460 MOV X2, X31
	0x034A9464 BL 0x36288CC
	0x034A9468 MOV X0, X20
	0x034A946C MOV X1, X21
	0x034A9470 MOV X2, X31
	0x034A9474 BL 0x3628980
	0x034A9478 MOV X0, X20
	0x034A947C MOV X1, X31
	0x034A9480 BL 0x3628A38
	0x034A9484 ADRP X8, 0xC73000
	0x034A9488 ADRP X9, 0xC4B000
	0x034A948C LDR X8, [X8 + 0x4D0]
	0x034A9490 LDR X9, [X9 + 0x6D0]
	0x034A9494 MOV X20, X0
	0x034A9498 LDR X21, [X8]
	0x034A949C LDR X0, [X9]
	0x034A94A0 BL 0x1C16F10
	0x034A94A4 ADRP X8, 0xC4B000
	0x034A94A8 LDR X8, [X8 + 0x6C0]
	0x034A94AC MOV X22, X0
	0x034A94B0 LDR X1, [X8]
	0x034A94B4 BL 0x2AA4804
	0x034A94B8 ADRP X8, 0xC85000
	0x034A94BC LDR X8, [X8 + 0x7D8]
	0x034A94C0 LDR X1, [X19 + 0x28]
	0x034A94C4 LDR X0, [X8]
	0x034A94C8 MOV X2, X31
	0x034A94CC BL 0x321B938
	0x034A94D0 CBZ X22, 0x34A9684
	0x034A94D4 ADRP X8, 0xC85000
	0x034A94D8 LDR X8, [X8 + 0x7D0]
	0x034A94DC ADRP X9, 0xC4B000
	0x034A94E0 LDR X9, [X9 + 0x810]
	0x034A94E4 MOV X2, X0
	0x034A94E8 LDR X1, [X8]
	0x034A94EC LDR X3, [X9]
	0x034A94F0 MOV X0, X22
	0x034A94F4 BL 0x2AA5098
	0x034A94F8 LDR X23, [X24 + 0x20]
	0x034A94FC CBZ X23, 0x34A9688
	0x034A9500 ADRP X10, 0xC85000
	0x034A9504 LDR X8, [X23]
	0x034A9508 LDR X10, [X10 + 0x7B8]
	0x034A950C LDR W24, [X24 + 0x18]
	0x034A9510 LDRH W9, [X8 + 0x12E]
	0x034A9514 LDR X1, [X10]
	0x034A9518 CBZ X9, 0x34A953C
	0x034A951C LDR X10, [X8 + 0xB0]
	0x034A9520 ADD X10, X10, 0x8
	0x034A9524 LDUR X11, [X10 - 0x8]
	0x034A9528 CMP X11, X1
	0x034A952C B.EQ 0x34A9564
	0x034A9530 SUBS X9, X9, 0x1
	0x034A9534 ADD X10, X10, 0x10
	0x034A9538 B.NE 0x34A9524
	0x034A953C MOVZ W2, 0x3
	0x034A9540 MOV X0, X23
	0x034A9544 BL 0x1C5C788
	0x034A9548 B 0x34A9574
	0x034A954C LDR X8, [X19 + 0x30]
	0x034A9550 MOVN W9, 0x0
	0x034A9554 STR X8, [X31 + 0x8]
	0x034A9558 STR X31, [X19 + 0x30]
	0x034A955C STR W9, [X19]
	0x034A9560 B 0x34A95D0
	0x034A9564 LDR W9, [X10]
	0x034A9568 ADD W9, W9, 0x3
	0x034A956C ADD X8, X8, W9, 0x4, SXTW
	0x034A9570 ADD X0, X8, 0x138
	0x034A9574 LDP X8, X9, [X0]
	0x034A9578 MOV X0, X23
	0x034A957C MOV X1, X21
	0x034A9580 MOV X2, X20
	0x034A9584 MOV X3, X22
	0x034A9588 MOV X4, X31
	0x034A958C MOV W5, W24
	0x034A9590 MOV X6, X31
	0x034A9594 MOV X7, X31
	0x034A9598 STR X9, [X31]
	0x034A959C BLR X8
	0x034A95A0 CBZ X0, 0x34A968C
	0x034A95A4 ADRP X8, 0xC4D000
	0x034A95A8 LDR X8, [X8 + 0x1F8]
	0x034A95AC LDR X1, [X8]
	0x034A95B0 BL 0x269F5D0
	0x034A95B4 ADRP X8, 0xC4D000
	0x034A95B8 LDR X8, [X8 + 0x1F0]
	0x034A95BC STR X0, [X31 + 0x8]
	0x034A95C0 LDR X1, [X8]
	0x034A95C4 ADD X0, X31, 0x8
	0x034A95C8 BL 0x2677430
	0x034A95CC TBZ X0, 0x0, 0x34A962C
	0x034A95D0 ADRP X8, 0xC4D000
	0x034A95D4 LDR X8, [X8 + 0x1E0]
	0x034A95D8 ADD X0, X31, 0x8
	0x034A95DC LDR X1, [X8]
	0x034A95E0 BL 0x2677474
	0x034A95E4 ADRP X8, 0xC89000
	0x034A95E8 LDR X8, [X8 + 0xE0]
	0x034A95EC LDR X1, [X8]
	0x034A95F0 BL 0x220E6DC
	0x034A95F4 MOVN W8, 0x1
	0x034A95F8 STR W8, [X19], #0x8
	0x034A95FC MOV X20, X0
	0x034A9600 LDR X0, [X25]
	0x034A9604 ADRP X21, 0xC89000
	0x034A9608 LDR W8, [X0 + 0xE0]
	0x034A960C LDR X21, [X21 + 0xD8]
	0x034A9610 CBNZ W8, 0x34A9618
	0x034A9614 BL 0x1C16DFC
	0x034A9618 LDR X2, [X21]
	0x034A961C MOV X0, X19
	0x034A9620 MOV X1, X20
	0x034A9624 BL 0x26322B0
	0x034A9628 B 0x34A9664
	0x034A962C STR W31, [X19]
	0x034A9630 LDR X8, [X31 + 0x8]
	0x034A9634 STR X8, [X19 + 0x30]
	0x034A9638 LDR X0, [X25]
	0x034A963C LDR W8, [X0 + 0xE0]
	0x034A9640 CBNZ W8, 0x34A9648
	0x034A9644 BL 0x1C16DFC
	0x034A9648 ADRP X8, 0xC89000
	0x034A964C LDR X8, [X8 + 0xD0]
	0x034A9650 ADD X0, X19, 0x8
	0x034A9654 LDR X3, [X8]
	0x034A9658 ADD X1, X31, 0x8
	0x034A965C MOV X2, X19
	0x034A9660 BL 0x1FB7C28
	0x034A9664 LDP X20, X19, [X31 + 0x40]
	0x034A9668 LDP X22, X21, [X31 + 0x30]
	0x034A966C LDP X24, X23, [X31 + 0x20]
	0x034A9670 LDP X30, X25, [X31 + 0x10]
	0x034A9674 ADD X31, X31, 0x50
	0x034A9678 RET
	0x034A967C BL 0x1C16F20
	0x034A9680 BL 0x1C16F20
	0x034A9684 BL 0x1C16F20
	0x034A9688 BL 0x1C16F20
	0x034A968C BL 0x1C16F20
	0x034A9690 B 0x34A96C8
	0x034A9694 B 0x34A96C8
	0x034A9698 B 0x34A96C8
	0x034A969C B 0x34A96C8
	0x034A96A0 B 0x34A96C8
	0x034A96A4 B 0x34A96C8
	0x034A96A8 B 0x34A96C8
	0x034A96AC B 0x34A96C8
	0x034A96B0 B 0x34A96C8
	0x034A96B4 B 0x34A96C8
	0x034A96B8 B 0x34A96C8
	0x034A96BC B 0x34A96C8
	0x034A96C0 B 0x34A96C8
	0x034A96C4 B 0x34A96C8
	0x034A96C8 MOV X20, X0
	0x034A96CC CMP W1, 0x1
	0x034A96D0 B.NE 0x34A976C
	0x034A96D4 MOV X0, X20
	0x034A96D8 BL 0x3EB1AD0
	0x034A96DC MOV X20, X0
	0x034A96E0 ADRP X0, 0xC4A000
	0x034A96E4 LDR X0, [X0 + 0x7D0]
	0x034A96E8 BL 0x1C16D08
	0x034A96EC LDR X8, [X20]
	0x034A96F0 LDR X1, [X8]
	0x034A96F4 BL 0x1C17270
	0x034A96F8 TBZ X0, 0x0, 0x34A9744
	0x034A96FC LDR X20, [X20]
	0x034A9700 BL 0x3EB1AE0
	0x034A9704 MOVN W8, 0x1
	0x034A9708 STR W8, [X19], #0x8
	0x034A970C ADRP X0, 0xC88000
	0x034A9710 LDR X0, [X0 + 0xDA8]
	0x034A9714 BL 0x1C16D08
	0x034A9718 LDR W8, [X0 + 0xE0]
	0x034A971C CBNZ W8, 0x34A9724

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF35000
	011 Move W8, [X20+2572]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC8A000
	018 Move X0, [X0+48]
	019 Call 0x1C17CF4
	020 Move X0, 0xC8A000
	021 Move X0, [X0+56]
	022 Call 0x1C17CF4
	023 Move X0, 0xC89000
	024 Move X0, [X0+3464]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4C000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4C000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0xC4C000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0xC86000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xC8A000
	039 Move X0, [X0+64]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4E000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xC4E000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xC4E000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xC54000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xC74000
	054 Move X0, [X0+1232]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8A000
	057 Move X0, [X0+72]
	058 Call 0x1C17CF4
	059 Move X0, 0xC86000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xC86000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC4B000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2572], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC89000
	072 Move W8, [X19]
	073 Move X25, [X25+3464]
	074 Compare W8, 0
	075 JumpIfEqual {157}
	076 Move X24, [X19+32]
	077 Compare X24, 0
	078 JumpIfEqual {246}
	079 Move X8, 0xC8A000
	080 Move X9, 0xC4B000
	081 Move X10, 0xC54000
	082 Move X8, [X8+72]
	083 Move X9, [X9+2440]
	084 Move X10, [X10+928]
	085 Move X23, [X24+16]
	086 Move X22, [X8]
	087 Move X21, [X9]
	088 Move X0, [X10]
	089 Call 0x1C17F10
	090 Move X20, X0
	091 Move X1, X23
	092 Move X2, X31
	093 Call UriBuilder..ctor, X0, X1
	094 Compare X20, 0
	095 JumpIfEqual {247}
	096 Move X0, X20
	097 Move X1, X22
	098 Move X2, X31
	099 Call UriBuilder.set_Path, X0, X1
	100 Move X0, X20
	101 Move X1, X21
	102 Move X2, X31
	103 Call UriBuilder.set_Query, X0, X1
	104 Move X0, X20
	105 Move X1, X31
	106 Call UriBuilder.get_Uri, X0
	107 Move X8, 0xC74000
	108 Move X9, 0xC4C000
	109 Move X8, [X8+1232]
	110 Move X9, [X9+1744]
	111 Move X20, X0
	112 Move X21, [X8]
	113 Move X0, [X9]
	114 Call 0x1C17F10
	115 Move X8, 0xC4C000
	116 Move X8, [X8+1728]
	117 Move X22, X0
	118 Move X1, [X8]
	119 Call Dictionary`2<Object, Object>..ctor, X0
	120 Move X8, 0xC86000
	121 Move X8, [X8+2008]
	122 Move X1, [X19+40]
	123 Move X0, [X8]
	124 Move X2, X31
	125 Call String.Concat, X0, X1
	126 Compare X22, 0
	127 JumpIfEqual {248}
	128 Move X8, 0xC86000
	129 Move X8, [X8+2000]
	130 Move X9, 0xC4C000
	131 Move X9, [X9+2064]
	132 Move X2, X0
	133 Move X1, [X8]
	134 Move X3, [X9]
	135 Move X0, X22
	136 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	137 Move X23, [X24+32]
	138 Compare X23, 0
	139 JumpIfEqual {249}
	140 Move X10, 0xC86000
	141 Move X8, [X23]
	142 Move X10, [X10+1976]
	143 Move W24, [X24+24]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X1, [X10]
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 3
	155 Move X0, X23
	156 Call 0x1C5D788
	157 Move X8, [X19+48]
	158 Move TEMP, 0
	159 Not TEMP
	160 Move W9, TEMP
	161 Move [X31+8], X8
	162 Move [X19+48], X31
	163 Move [X19], W9
	164 Move W9, [X10]
	165 Add W9, W9, 3
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X9, [X0+8]
	170 Move X0, X23
	171 Move X1, X21
	172 Move X2, X20
	173 Move X3, X22
	174 Move X4, X31
	175 Move W5, W24
	176 Move X6, X31
	177 Move X7, X31
	178 Move [X31], X9
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Compare X0, 0
	181 JumpIfEqual {250}
	182 Move X8, 0xC4E000
	183 Move X8, [X8+504]
	184 Move X1, [X8]
	185 Call Task`1<Object>.GetAwaiter, X0
	186 Move X8, 0xC4E000
	187 Move X8, [X8+496]
	188 Move [X31+8], X0
	189 Move X1, [X8]
	190 Add X0, X31, 8
	191 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {221}
	196 Move X8, 0xC4E000
	197 Move X8, [X8+480]
	198 Add X0, X31, 8
	199 Move X1, [X8]
	200 Call TaskAwaiter`1<Object>.GetResult, X0
	201 Move X8, 0xC8A000
	202 Move X8, [X8+64]
	203 Move X1, [X8]
	204 Call JsonParser.FromJson, X0
	205 Move TEMP, 1
	206 Not TEMP
	207 Move W8, TEMP
	208 Move [X19+8], W8
	209 Move X20, X0
	210 Move X0, [X25]
	211 Move X21, 0xC8A000
	212 Move W8, [X0+224]
	213 Move X21, [X21+56]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Move X2, [X21]
	218 Move X0, X19
	219 Move X1, X20
	220 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	221 Move [X19], W31
	222 Move X8, [X31+8]
	223 Move [X19+48], X8
	224 Move X0, [X25]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X8, 0xC8A000
	230 Move X8, [X8+48]
	231 Add X0, X19, 8
	232 Move X3, [X8]
	233 Add X1, X31, 8
	234 Move X2, X19
	235 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	236 Move X20, [X31+64]
	237 Move X19, [X31+72]
	238 Move X22, [X31+48]
	239 Move X21, [X31+56]
	240 Move X24, [X31+32]
	241 Move X23, [X31+40]
	242 Move X30, [X31+16]
	243 Move X25, [X31+24]
	244 Add X31, X31, 80
	245 Return 
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Call 0x1C17F20
	251 Move X20, X0
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, X20
	254 Call 0x3EB2AD0
	255 Move X20, X0
	256 Move X0, 0xC4B000
	257 Move X0, [X0+2000]
	258 Call 0x1C17D08
	259 Move X8, [X20]
	260 Move X1, [X8]
	261 Call 0x1C18270
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {286}
	266 Move X20, [X20]
	267 Call 0x3EB2AE0
	268 Move TEMP, 1
	269 Not TEMP
	270 Move W8, TEMP
	271 Move [X19+8], W8
	272 Move X0, 0xC89000
	273 Move X0, [X0+3464]
	274 Call 0x1C17D08
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X0, 0xC8A000
	280 Move X0, [X0+80]
	281 Call 0x1C17D08
	282 Move X2, X0
	283 Move X0, X19
	284 Move X1, X20
	285 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	286 Move W0, 8
	287 Call 0x3EB2AF0
	288 Move X8, [X20]
	289 Move [X0], X8
	290 Move X1, 0xA0C000
	291 Add X1, X1, 3672
	292 Move X2, X31
	293 Call 0x3EB2B00
	294 Move X20, X0
	295 Call 0x3EB2AE0
	296 Move X0, X20
	297 Call 0x1D2D690
	298 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A9720 BL 0x1C16DFC
	0x034A9724 ADRP X0, 0xC89000
	0x034A9728 LDR X0, [X0 + 0xF0]
	0x034A972C BL 0x1C16D08
	0x034A9730 MOV X2, X0
	0x034A9734 MOV X0, X19
	0x034A9738 MOV X1, X20
	0x034A973C BL 0x26324C8
	0x034A9740 B 0x34A9664
	0x034A9744 MOVZ W0, 0x8
	0x034A9748 BL 0x3EB1AF0
	0x034A974C LDR X8, [X20]
	0x034A9750 STR X8, [X0]
	0x034A9754 ADRP X1, 0xA0B000
	0x034A9758 ADD X1, X1, 0xE58
	0x034A975C MOV X2, X31
	0x034A9760 BL 0x3EB1B00
	0x034A9764 MOV X20, X0
	0x034A9768 BL 0x3EB1AE0
	0x034A976C MOV X0, X20
	0x034A9770 BL 0x1D2C690
	0x034A9774 BL 0x1990590
	0x034A9778 STR X30, [X31 - 0x30]!
	0x034A977C STP X22, X21, [X31 + 0x10]
	0x034A9780 STP X20, X19, [X31 + 0x20]
	0x034A9784 ADRP X22, 0xF34000
	0x034A9788 ADRP X21, 0xC88000
	0x034A978C LDRB W8, [X22 + 0xA13]
	0x034A9790 LDR X21, [X21 + 0xDA8]
	0x034A9794 MOV X19, X1
	0x034A9798 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF35000
	007 Move X21, 0xC89000
	008 Move W8, [X22+2573]
	009 Move X21, [X21+3464]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC8A000
	017 Move X0, [X0+88]
	018 Call 0x1C17CF4
	019 Move X0, 0xC89000
	020 Move X0, [X0+3464]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2573], W8
	024 Move X0, [X21]
	025 Move X21, 0xC8A000
	026 Move W8, [X0+224]
	027 Move X21, [X21+88]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

