Type: Nakama.Console.ApiClient/<DeleteFriendAsync>d__10

Method: System.Void MoveNext()

Disassembly:
	0x034A5E10 MOV X20, X0
	0x034A5E14 BL 0x3EB1AE0
	0x034A5E18 MOV X0, X20
	0x034A5E1C BL 0x1D2C690
	0x034A5E20 BL 0x1990590
	0x034A5E24 STR X30, [X31 - 0x30]!
	0x034A5E28 STP X22, X21, [X31 + 0x10]
	0x034A5E2C STP X20, X19, [X31 + 0x20]
	0x034A5E30 ADRP X21, 0xF38000
	0x034A5E34 ADRP X22, 0xC51000
	0x034A5E38 LDRB W8, [X21 + 0x9FF]
	0x034A5E3C LDR X22, [X22 + 0x280]
	0x034A5E40 MOV X19, X1
	0x034A5E44 MOV X20, X0
	0x034A5E48 TBNZ X8, 0x0, 0x34A5E60
	0x034A5E4C ADRP X0, 0xC51000
	0x034A5E50 LDR X0, [X0 + 0x280]
	0x034A5E54 BL 0x1C16CF4
	0x034A5E58 MOVZ W8, 0x1
	0x034A5E5C STRB W8, [X21 + 0x9FF]
	0x034A5E60 LDR X0, [X22]
	0x034A5E64 LDR W8, [X0 + 0xE0]
	0x034A5E68 CBNZ W8, 0x34A5E70
	0x034A5E6C BL 0x1C16DFC
	0x034A5E70 ADD X0, X20, 0x8
	0x034A5E74 MOV X1, X19
	0x034A5E78 LDP X20, X19, [X31 + 0x20]
	0x034A5E7C LDP X22, X21, [X31 + 0x10]
	0x034A5E80 MOV X2, X31
	0x034A5E84 LDR X30, [X31], #0x30
	0x034A5E88 B 0x32C477C
	0x034A5E8C SUB X31, X31, 0x50
	0x034A5E90 STP X30, X25, [X31 + 0x10]
	0x034A5E94 STP X24, X23, [X31 + 0x20]
	0x034A5E98 STP X22, X21, [X31 + 0x30]
	0x034A5E9C STP X20, X19, [X31 + 0x40]
	0x034A5EA0 ADRP X20, 0xF38000
	0x034A5EA4 LDRB W8, [X20 + 0xA00]
	0x034A5EA8 MOV X19, X0
	0x034A5EAC TBNZ X8, 0x0, 0x34A5FA8
	0x034A5EB0 ADRP X0, 0xC8C000
	0x034A5EB4 LDR X0, [X0 + 0xF30]
	0x034A5EB8 BL 0x1C16CF4
	0x034A5EBC ADRP X0, 0xC51000
	0x034A5EC0 LDR X0, [X0 + 0x280]
	0x034A5EC4 BL 0x1C16CF4
	0x034A5EC8 ADRP X0, 0xC4F000
	0x034A5ECC LDR X0, [X0 + 0x810]
	0x034A5ED0 BL 0x1C16CF4
	0x034A5ED4 ADRP X0, 0xC4F000
	0x034A5ED8 LDR X0, [X0 + 0x6C0]
	0x034A5EDC BL 0x1C16CF4
	0x034A5EE0 ADRP X0, 0xC4F000
	0x034A5EE4 LDR X0, [X0 + 0x6D0]
	0x034A5EE8 BL 0x1C16CF4
	0x034A5EEC ADRP X0, 0xC89000
	0x034A5EF0 LDR X0, [X0 + 0x7B8]
	0x034A5EF4 BL 0x1C16CF4
	0x034A5EF8 ADRP X0, 0xC51000
	0x034A5EFC LDR X0, [X0 + 0x1E0]
	0x034A5F00 BL 0x1C16CF4
	0x034A5F04 ADRP X0, 0xC51000
	0x034A5F08 LDR X0, [X0 + 0x1F0]
	0x034A5F0C BL 0x1C16CF4
	0x034A5F10 ADRP X0, 0xC51000
	0x034A5F14 LDR X0, [X0 + 0x1F8]
	0x034A5F18 BL 0x1C16CF4
	0x034A5F1C ADRP X0, 0xC57000
	0x034A5F20 LDR X0, [X0 + 0x3A0]
	0x034A5F24 BL 0x1C16CF4
	0x034A5F28 ADRP X0, 0xC50000
	0x034A5F2C LDR X0, [X0 + 0xA28]
	0x034A5F30 BL 0x1C16CF4
	0x034A5F34 ADRP X0, 0xC8A000
	0x034A5F38 LDR X0, [X0 + 0x100]
	0x034A5F3C BL 0x1C16CF4
	0x034A5F40 ADRP X0, 0xC8C000
	0x034A5F44 LDR X0, [X0 + 0xF38]
	0x034A5F48 BL 0x1C16CF4
	0x034A5F4C ADRP X0, 0xC8C000
	0x034A5F50 LDR X0, [X0 + 0xF40]
	0x034A5F54 BL 0x1C16CF4
	0x034A5F58 ADRP X0, 0xC8C000
	0x034A5F5C LDR X0, [X0 + 0xF48]
	0x034A5F60 BL 0x1C16CF4
	0x034A5F64 ADRP X0, 0xC8C000
	0x034A5F68 LDR X0, [X0 + 0xF50]
	0x034A5F6C BL 0x1C16CF4
	0x034A5F70 ADRP X0, 0xC89000
	0x034A5F74 LDR X0, [X0 + 0x7D0]
	0x034A5F78 BL 0x1C16CF4
	0x034A5F7C ADRP X0, 0xC89000
	0x034A5F80 LDR X0, [X0 + 0x7D8]
	0x034A5F84 BL 0x1C16CF4
	0x034A5F88 ADRP X0, 0xC4E000
	0x034A5F8C LDR X0, [X0 + 0x988]
	0x034A5F90 BL 0x1C16CF4
	0x034A5F94 ADRP X0, 0xC77000
	0x034A5F98 LDR X0, [X0 + 0x4C8]
	0x034A5F9C BL 0x1C16CF4
	0x034A5FA0 MOVZ W8, 0x1
	0x034A5FA4 STRB W8, [X20 + 0xA00]
	0x034A5FA8 STR X31, [X31 + 0x8]
	0x034A5FAC ADRP X25, 0xC51000
	0x034A5FB0 LDR W8, [X19]
	0x034A5FB4 LDR X25, [X25 + 0x280]
	0x034A5FB8 CBZ W8, 0x34A61F0
	0x034A5FBC LDR X20, [X19 + 0x20]
	0x034A5FC0 CBZ X20, 0x34A6300
	0x034A5FC4 LDR X8, [X19 + 0x28]
	0x034A5FC8 CBZ X8, 0x34A6348
	0x034A5FCC LDR X8, [X19 + 0x30]
	0x034A5FD0 CBZ X8, 0x34A6390
	0x034A5FD4 LDR X8, [X19 + 0x38]
	0x034A5FD8 CBZ X8, 0x34A63D8
	0x034A5FDC ADRP X8, 0xC50000
	0x034A5FE0 LDR X8, [X8 + 0xA28]
	0x034A5FE4 LDR X0, [X8]
	0x034A5FE8 ADRP X8, 0xC8C000
	0x034A5FEC LDR X8, [X8 + 0xF40]
	0x034A5FF0 LDR X24, [X19 + 0x40]
	0x034A5FF4 LDR W9, [X0 + 0xE0]
	0x034A5FF8 LDR X21, [X8]
	0x034A5FFC CBNZ W9, 0x34A6004
	0x034A6000 BL 0x1C16DFC
	0x034A6004 MOV X0, X20
	0x034A6008 MOV X1, X31
	0x034A600C BL 0x3624D20
	0x034A6010 CBZ X21, 0x34A6420
	0x034A6014 ADRP X8, 0xC89000
	0x034A6018 LDR X8, [X8 + 0x100]
	0x034A601C MOV X2, X0
	0x034A6020 LDR X1, [X8]
	0x034A6024 MOV X0, X21
	0x034A6028 MOV X3, X31
	0x034A602C BL 0x32293BC
	0x034A6030 MOV X20, X0
	0x034A6034 LDR X0, [X19 + 0x28]
	0x034A6038 MOV X1, X31
	0x034A603C BL 0x3624D20
	0x034A6040 CBZ X20, 0x34A6424
	0x034A6044 ADRP X8, 0xC8B000
	0x034A6048 LDR X8, [X8 + 0xF38]
	0x034A604C MOV X2, X0
	0x034A6050 LDR X1, [X8]
	0x034A6054 MOV X0, X20
	0x034A6058 MOV X3, X31
	0x034A605C BL 0x32293BC
	0x034A6060 MOV X20, X0
	0x034A6064 LDR X0, [X19 + 0x30]
	0x034A6068 MOV X1, X31
	0x034A606C BL 0x3624D20
	0x034A6070 CBZ X20, 0x34A6428
	0x034A6074 ADRP X8, 0xC8B000
	0x034A6078 LDR X8, [X8 + 0xF48]
	0x034A607C MOV X2, X0
	0x034A6080 LDR X1, [X8]
	0x034A6084 MOV X0, X20
	0x034A6088 MOV X3, X31
	0x034A608C BL 0x32293BC
	0x034A6090 MOV X20, X0
	0x034A6094 LDR X0, [X19 + 0x38]
	0x034A6098 MOV X1, X31
	0x034A609C BL 0x3624D20
	0x034A60A0 CBZ X20, 0x34A642C
	0x034A60A4 ADRP X8, 0xC8B000
	0x034A60A8 LDR X8, [X8 + 0xF50]
	0x034A60AC MOV X2, X0
	0x034A60B0 LDR X1, [X8]
	0x034A60B4 MOV X0, X20
	0x034A60B8 MOV X3, X31
	0x034A60BC BL 0x32293BC
	0x034A60C0 CBZ X24, 0x34A6430
	0x034A60C4 ADRP X8, 0xC4D000
	0x034A60C8 ADRP X9, 0xC56000
	0x034A60CC LDR X8, [X8 + 0x988]
	0x034A60D0 LDR X9, [X9 + 0x3A0]
	0x034A60D4 MOV X22, X0
	0x034A60D8 LDR X23, [X24 + 0x10]
	0x034A60DC LDR X21, [X8]
	0x034A60E0 LDR X0, [X9]
	0x034A60E4 BL 0x1C16F10
	0x034A60E8 MOV X20, X0
	0x034A60EC MOV X1, X23
	0x034A60F0 MOV X2, X31
	0x034A60F4 BL 0x36281F8
	0x034A60F8 CBZ X20, 0x34A6434
	0x034A60FC MOV X0, X20
	0x034A6100 MOV X1, X22
	0x034A6104 MOV X2, X31
	0x034A6108 BL 0x36288CC
	0x034A610C MOV X0, X20
	0x034A6110 MOV X1, X21
	0x034A6114 MOV X2, X31
	0x034A6118 BL 0x3628980
	0x034A611C MOV X0, X20
	0x034A6120 MOV X1, X31
	0x034A6124 BL 0x3628A38
	0x034A6128 ADRP X8, 0xC76000
	0x034A612C ADRP X9, 0xC4E000
	0x034A6130 LDR X8, [X8 + 0x4C8]
	0x034A6134 LDR X9, [X9 + 0x6D0]
	0x034A6138 MOV X20, X0
	0x034A613C LDR X21, [X8]
	0x034A6140 LDR X0, [X9]
	0x034A6144 BL 0x1C16F10
	0x034A6148 ADRP X8, 0xC4E000
	0x034A614C LDR X8, [X8 + 0x6C0]
	0x034A6150 MOV X22, X0
	0x034A6154 LDR X1, [X8]
	0x034A6158 BL 0x2AA4804
	0x034A615C ADRP X8, 0xC88000
	0x034A6160 LDR X8, [X8 + 0x7D8]
	0x034A6164 LDR X1, [X19 + 0x48]
	0x034A6168 LDR X0, [X8]
	0x034A616C MOV X2, X31
	0x034A6170 BL 0x321B938
	0x034A6174 CBZ X22, 0x34A6438
	0x034A6178 ADRP X8, 0xC88000
	0x034A617C LDR X8, [X8 + 0x7D0]
	0x034A6180 ADRP X9, 0xC4E000
	0x034A6184 LDR X9, [X9 + 0x810]
	0x034A6188 MOV X2, X0
	0x034A618C LDR X1, [X8]
	0x034A6190 LDR X3, [X9]
	0x034A6194 MOV X0, X22
	0x034A6198 BL 0x2AA5098
	0x034A619C LDR X23, [X24 + 0x20]
	0x034A61A0 CBZ X23, 0x34A643C
	0x034A61A4 ADRP X10, 0xC88000
	0x034A61A8 LDR X8, [X23]
	0x034A61AC LDR X10, [X10 + 0x7B8]
	0x034A61B0 LDR W24, [X24 + 0x18]
	0x034A61B4 LDRH W9, [X8 + 0x12E]
	0x034A61B8 LDR X1, [X10]
	0x034A61BC CBZ X9, 0x34A61E0
	0x034A61C0 LDR X10, [X8 + 0xB0]
	0x034A61C4 ADD X10, X10, 0x8
	0x034A61C8 LDUR X11, [X10 - 0x8]
	0x034A61CC CMP X11, X1
	0x034A61D0 B.EQ 0x34A6208
	0x034A61D4 SUBS X9, X9, 0x1
	0x034A61D8 ADD X10, X10, 0x10
	0x034A61DC B.NE 0x34A61C8
	0x034A61E0 MOVZ W2, 0x3
	0x034A61E4 MOV X0, X23
	0x034A61E8 BL 0x1C5C788
	0x034A61EC B 0x34A6218
	0x034A61F0 LDR X8, [X19 + 0x50]
	0x034A61F4 MOVN W9, 0x0
	0x034A61F8 STR X8, [X31 + 0x8]
	0x034A61FC STR X31, [X19 + 0x50]
	0x034A6200 STR W9, [X19]
	0x034A6204 B 0x34A6274
	0x034A6208 LDR W9, [X10]
	0x034A620C ADD W9, W9, 0x3
	0x034A6210 ADD X8, X8, W9, 0x4, SXTW
	0x034A6214 ADD X0, X8, 0x138
	0x034A6218 LDP X8, X9, [X0]
	0x034A621C MOV X0, X23
	0x034A6220 MOV X1, X21
	0x034A6224 MOV X2, X20
	0x034A6228 MOV X3, X22
	0x034A622C MOV X4, X31
	0x034A6230 MOV W5, W24
	0x034A6234 MOV X6, X31
	0x034A6238 MOV X7, X31
	0x034A623C STR X9, [X31]
	0x034A6240 BLR X8
	0x034A6244 CBZ X0, 0x34A6440
	0x034A6248 ADRP X8, 0xC50000
	0x034A624C LDR X8, [X8 + 0x1F8]
	0x034A6250 LDR X1, [X8]
	0x034A6254 BL 0x269F5D0
	0x034A6258 ADRP X8, 0xC50000
	0x034A625C LDR X8, [X8 + 0x1F0]
	0x034A6260 STR X0, [X31 + 0x8]
	0x034A6264 LDR X1, [X8]
	0x034A6268 ADD X0, X31, 0x8
	0x034A626C BL 0x2677430
	0x034A6270 TBZ X0, 0x0, 0x34A62B0
	0x034A6274 ADRP X8, 0xC50000
	0x034A6278 LDR X8, [X8 + 0x1E0]
	0x034A627C ADD X0, X31, 0x8
	0x034A6280 LDR X1, [X8]
	0x034A6284 BL 0x2677474
	0x034A6288 MOVN W8, 0x1
	0x034A628C STR W8, [X19], #0x8
	0x034A6290 LDR X0, [X25]
	0x034A6294 LDR W8, [X0 + 0xE0]
	0x034A6298 CBNZ W8, 0x34A62A0
	0x034A629C BL 0x1C16DFC
	0x034A62A0 MOV X0, X19
	0x034A62A4 MOV X1, X31
	0x034A62A8 BL 0x32C4864
	0x034A62AC B 0x34A62E8
	0x034A62B0 STR W31, [X19]
	0x034A62B4 LDR X8, [X31 + 0x8]
	0x034A62B8 STR X8, [X19 + 0x50]
	0x034A62BC LDR X0, [X25]
	0x034A62C0 LDR W8, [X0 + 0xE0]
	0x034A62C4 CBNZ W8, 0x34A62CC
	0x034A62C8 BL 0x1C16DFC
	0x034A62CC ADRP X8, 0xC8B000
	0x034A62D0 LDR X8, [X8 + 0xF30]
	0x034A62D4 ADD X0, X19, 0x8
	0x034A62D8 LDR X3, [X8]
	0x034A62DC ADD X1, X31, 0x8
	0x034A62E0 MOV X2, X19
	0x034A62E4 BL 0x2187464
	0x034A62E8 LDP X20, X19, [X31 + 0x40]
	0x034A62EC LDP X22, X21, [X31 + 0x30]
	0x034A62F0 LDP X24, X23, [X31 + 0x20]
	0x034A62F4 LDP X30, X25, [X31 + 0x10]
	0x034A62F8 ADD X31, X31, 0x50
	0x034A62FC RET
	0x034A6300 ADRP X0, 0xC55000
	0x034A6304 LDR X0, [X0 + 0x578]
	0x034A6308 BL 0x1C16D08
	0x034A630C BL 0x1C16F10
	0x034A6310 MOV X20, X0
	0x034A6314 ADRP X0, 0xC89000
	0x034A6318 LDR X0, [X0 + 0x118]
	0x034A631C BL 0x1C16D08
	0x034A6320 MOV X1, X0
	0x034A6324 MOV X0, X20
	0x034A6328 MOV X2, X31
	0x034A632C BL 0x3314A68
	0x034A6330 ADRP X0, 0xC8B000
	0x034A6334 LDR X0, [X0 + 0xF58]
	0x034A6338 BL 0x1C16D08
	0x034A633C MOV X1, X0
	0x034A6340 MOV X0, X20
	0x034A6344 BL 0x1C16DEC
	0x034A6348 ADRP X0, 0xC55000
	0x034A634C LDR X0, [X0 + 0x578]
	0x034A6350 BL 0x1C16D08
	0x034A6354 BL 0x1C16F10
	0x034A6358 MOV X20, X0
	0x034A635C ADRP X0, 0xC8B000
	0x034A6360 LDR X0, [X0 + 0xF60]
	0x034A6364 BL 0x1C16D08
	0x034A6368 MOV X1, X0
	0x034A636C MOV X0, X20
	0x034A6370 MOV X2, X31
	0x034A6374 BL 0x3314A68
	0x034A6378 ADRP X0, 0xC8B000
	0x034A637C LDR X0, [X0 + 0xF58]
	0x034A6380 BL 0x1C16D08
	0x034A6384 MOV X1, X0
	0x034A6388 MOV X0, X20
	0x034A638C BL 0x1C16DEC
	0x034A6390 ADRP X0, 0xC55000
	0x034A6394 LDR X0, [X0 + 0x578]
	0x034A6398 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF39000
	011 Move W8, [X20+2554]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {73}
	017 Move X0, 0xC8D000
	018 Move X0, [X0+3800]
	019 Call 0x1C17CF4
	020 Move X0, 0xC52000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC50000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC50000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC50000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC8A000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC52000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC52000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC52000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC58000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC51000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8D000
	051 Move X0, [X0+3808]
	052 Call 0x1C17CF4
	053 Move X0, 0xC8D000
	054 Move X0, [X0+3816]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8A000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC8B000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC8A000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC4F000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move X0, 0xC78000
	069 Move X0, [X0+1224]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+2554], W8
	073 Move [X31+8], X31
	074 Move X25, 0xC52000
	075 Move W8, [X19]
	076 Move X25, [X25+640]
	077 Compare W8, 0
	078 JumpIfEqual {199}
	079 Move X21, [X19+32]
	080 Compare X21, 0
	081 JumpIfEqual {280}
	082 Move X8, [X19+40]
	083 Compare X8, 0
	084 JumpIfEqual {298}
	085 Move X8, 0xC51000
	086 Move X8, [X8+2600]
	087 Move X0, [X8]
	088 Move X8, 0xC8D000
	089 Move X8, [X8+3816]
	090 Move X24, [X19+48]
	091 Move W9, [X0+224]
	092 Move X20, [X8]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Uri.EscapeDataString, X0
	099 Compare X20, 0
	100 JumpIfEqual {316}
	101 Move X8, 0xC8B000
	102 Move X8, [X8+744]
	103 Move X2, X0
	104 Move X1, [X8]
	105 Move X0, X20
	106 Move X3, X31
	107 Call String.Replace, X0, X1, X2
	108 Move X20, X0
	109 Move X0, [X19+40]
	110 Move X1, X31
	111 Call Uri.EscapeDataString, X0
	112 Compare X20, 0
	113 JumpIfEqual {317}
	114 Move X8, 0xC8D000
	115 Move X8, [X8+3808]
	116 Move X2, X0
	117 Move X1, [X8]
	118 Move X0, X20
	119 Move X3, X31
	120 Call String.Replace, X0, X1, X2
	121 Compare X24, 0
	122 JumpIfEqual {318}
	123 Move X8, 0xC4F000
	124 Move X9, 0xC58000
	125 Move X8, [X8+2440]
	126 Move X9, [X9+928]
	127 Move X22, X0
	128 Move X23, [X24+16]
	129 Move X21, [X8]
	130 Move X0, [X9]
	131 Call 0x1C17F10
	132 Move X20, X0
	133 Move X1, X23
	134 Move X2, X31
	135 Call UriBuilder..ctor, X0, X1
	136 Compare X20, 0
	137 JumpIfEqual {319}
	138 Move X0, X20
	139 Move X1, X22
	140 Move X2, X31
	141 Call UriBuilder.set_Path, X0, X1
	142 Move X0, X20
	143 Move X1, X21
	144 Move X2, X31
	145 Call UriBuilder.set_Query, X0, X1
	146 Move X0, X20
	147 Move X1, X31
	148 Call UriBuilder.get_Uri, X0
	149 Move X8, 0xC77000
	150 Move X9, 0xC4F000
	151 Move X8, [X8+1224]
	152 Move X9, [X9+1744]
	153 Move X20, X0
	154 Move X21, [X8]
	155 Move X0, [X9]
	156 Call 0x1C17F10
	157 Move X8, 0xC4F000
	158 Move X8, [X8+1728]
	159 Move X22, X0
	160 Move X1, [X8]
	161 Call Dictionary`2<Object, Object>..ctor, X0
	162 Move X8, 0xC89000
	163 Move X8, [X8+2008]
	164 Move X1, [X19+56]
	165 Move X0, [X8]
	166 Move X2, X31
	167 Call String.Concat, X0, X1
	168 Compare X22, 0
	169 JumpIfEqual {320}
	170 Move X8, 0xC89000
	171 Move X8, [X8+2000]
	172 Move X9, 0xC4F000
	173 Move X9, [X9+2064]
	174 Move X2, X0
	175 Move X1, [X8]
	176 Move X3, [X9]
	177 Move X0, X22
	178 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	179 Move X23, [X24+32]
	180 Compare X23, 0
	181 JumpIfEqual {321}
	182 Move X10, 0xC89000
	183 Move X8, [X23]
	184 Move X10, [X10+1976]
	185 Move W24, [X24+24]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X1, [X10]
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 3
	197 Move X0, X23
	198 Call 0x1C5D788
	199 Move X8, [X19+64]
	200 Move TEMP, 0
	201 Not TEMP
	202 Move W9, TEMP
	203 Move [X31+8], X8
	204 Move [X19+64], X31
	205 Move [X19], W9
	206 Move W9, [X10]
	207 Add W9, W9, 3
	208 Add X8, X8, W9
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X9, [X0+8]
	212 Move X0, X23
	213 Move X1, X21
	214 Move X2, X20
	215 Move X3, X22
	216 Move X4, X31
	217 Move W5, W24
	218 Move X6, X31
	219 Move X7, X31
	220 Move [X31], X9
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X0, 0
	223 JumpIfEqual {322}
	224 Move X8, 0xC51000
	225 Move X8, [X8+504]
	226 Move X1, [X8]
	227 Call Task`1<Object>.GetAwaiter, X0
	228 Move X8, 0xC51000
	229 Move X8, [X8+496]
	230 Move [X31+8], X0
	231 Move X1, [X8]
	232 Add X0, X31, 8
	233 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {255}
	238 Move X8, 0xC51000
	239 Move X8, [X8+480]
	240 Add X0, X31, 8
	241 Move X1, [X8]
	242 Call TaskAwaiter`1<Object>.GetResult, X0
	243 Move TEMP, 1
	244 Not TEMP
	245 Move W8, TEMP
	246 Move [X19+8], W8
	247 Move X0, [X25]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X0, X19
	253 Move X1, X31
	254 Call AsyncTaskMethodBuilder.SetResult, X0
	255 Move [X19], W31
	256 Move X8, [X31+8]
	257 Move [X19+64], X8
	258 Move X0, [X25]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X8, 0xC8C000
	264 Move X8, [X8+3800]
	265 Add X0, X19, 8
	266 Move X3, [X8]
	267 Add X1, X31, 8
	268 Move X2, X19
	269 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	270 Move X20, [X31+64]
	271 Move X19, [X31+72]
	272 Move X22, [X31+48]
	273 Move X21, [X31+56]
	274 Move X24, [X31+32]
	275 Move X23, [X31+40]
	276 Move X30, [X31+16]
	277 Move X25, [X31+24]
	278 Add X31, X31, 80
	279 Return 
	280 Move X0, 0xC56000
	281 Move X0, [X0+1400]
	282 Call 0x1C17D08
	283 Call 0x1C17F10
	284 Move X20, X0
	285 Move X0, 0xC8A000
	286 Move X0, [X0+752]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X20
	290 Move X2, X31
	291 Call ArgumentException..ctor, X0, X1
	292 Move X0, 0xC8C000
	293 Move X0, [X0+3824]
	294 Call 0x1C17D08
	295 Move X1, X0
	296 Move X0, X20
	297 Call 0x1C17DEC
	298 Move X0, 0xC56000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xC8C000
	304 Move X0, [X0+3832]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xC8C000
	311 Move X0, [X0+3824]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Move X20, X0
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X0, X20
	326 Call 0x3EB2AD0
	327 Move X20, X0
	328 Move X0, 0xC4E000
	329 Move X0, [X0+2000]
	330 Call 0x1C17D08
	331 Move X8, [X20]
	332 Move X1, [X8]
	333 Call 0x1C18270
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {355}
	338 Move X20, [X20]
	339 Call 0x3EB2AE0
	340 Move TEMP, 1
	341 Not TEMP
	342 Move W8, TEMP
	343 Move [X19+8], W8
	344 Move X0, 0xC51000
	345 Move X0, [X0+640]
	346 Call 0x1C17D08
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X0, X19
	352 Move X1, X20
	353 Move X2, X31
	354 Call AsyncTaskMethodBuilder.SetException, X0, X1
	355 Move W0, 8
	356 Call 0x3EB2AF0
	357 Move X8, [X20]
	358 Move [X0], X8
	359 Move X1, 0xA0F000
	360 Add X1, X1, 3672
	361 Move X2, X31
	362 Call 0x3EB2B00
	363 Move X20, X0
	364 Call 0x3EB2AE0
	365 Move X0, X20
	366 Call 0x1D2D690
	367 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A639C BL 0x1C16F10
	0x034A63A0 MOV X20, X0
	0x034A63A4 ADRP X0, 0xC89000
	0x034A63A8 LDR X0, [X0 + 0x128]
	0x034A63AC BL 0x1C16D08
	0x034A63B0 MOV X1, X0
	0x034A63B4 MOV X0, X20
	0x034A63B8 MOV X2, X31
	0x034A63BC BL 0x3314A68
	0x034A63C0 ADRP X0, 0xC8B000
	0x034A63C4 LDR X0, [X0 + 0xF58]
	0x034A63C8 BL 0x1C16D08
	0x034A63CC MOV X1, X0
	0x034A63D0 MOV X0, X20
	0x034A63D4 BL 0x1C16DEC
	0x034A63D8 ADRP X0, 0xC55000
	0x034A63DC LDR X0, [X0 + 0x578]
	0x034A63E0 BL 0x1C16D08
	0x034A63E4 BL 0x1C16F10
	0x034A63E8 MOV X20, X0
	0x034A63EC ADRP X0, 0xC8B000
	0x034A63F0 LDR X0, [X0 + 0xF68]
	0x034A63F4 BL 0x1C16D08
	0x034A63F8 MOV X1, X0
	0x034A63FC MOV X0, X20
	0x034A6400 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF38000
	007 Move X22, 0xC51000
	008 Move W8, [X21+2555]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC51000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2555], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

