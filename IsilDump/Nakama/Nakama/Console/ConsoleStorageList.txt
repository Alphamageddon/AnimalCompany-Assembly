Type: Nakama.Console.ConsoleStorageList

Method: System.Collections.Generic.IEnumerable`1<Nakama.Console.IApiStorageObject> get_Objects()

Disassembly:
	0x034A12C8 LDR X1, [X8 + 0x40]
	0x034A12CC BL 0x1C16E00
	0x034A12D0 CBZ X0, 0x34A1370
	0x034A12D4 LDR W8, [X20 + 0x18]
	0x034A12D8 CMP W8, 0x2
	0x034A12DC B.LS 0x34A136C
	0x034A12E0 STR X21, [X20 + 0x30]
	0x034A12E4 LDR X0, [X22]
	0x034A12E8 CBZ X0, 0x34A1300
	0x034A12EC LDR X8, [X20]
	0x034A12F0 LDR X1, [X8 + 0x40]
	0x034A12F4 BL 0x1C16E00
	0x034A12F8 CBZ X0, 0x34A1370
	0x034A12FC LDR W8, [X20 + 0x18]
	0x034A1300 CMP W8, 0x3
	0x034A1304 B.LS 0x34A136C
	0x034A1308 LDR X8, [X22]
	0x034A130C ADRP X21, 0xC8C000
	0x034A1310 ADRP X23, 0xC8C000
	0x034A1314 LDR X21, [X21 + 0xD68]
	0x034A1318 LDR X23, [X23 + 0xD70]
	0x034A131C MOV X0, X20
	0x034A1320 MOV X1, X31
	0x034A1324 STR X8, [X20 + 0x38]
	0x034A1328 BL 0x3227578
	0x034A132C LDR X2, [X19 + 0x30]
	0x034A1330 LDR X1, [X21]
	0x034A1334 LDR X3, [X22]
	0x034A1338 MOV X4, X31
	0x034A133C BL 0x32277C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF3D000
	005 Move W8, [X20+2500]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC91000
	012 Move X0, [X0+2848]
	013 Call 0x1C17CF4
	014 Move X0, 0xC91000
	015 Move X0, [X0+2856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2500], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xC91000
	023 Move X8, [X8+2856]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xC91000
	027 Move X8, [X8+2848]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.Console.ApiStorageObject> get__objects()

Disassembly:
	0x034A1340 LDR X2, [X19 + 0x38]
	0x034A1344 LDR X1, [X23]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__objects(System.Collections.Generic.List`1<Nakama.Console.ApiStorageObject> value)

Disassembly:
	0x034A1348 LDR X3, [X22]
	0x034A134C LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_TotalCount()

Disassembly:
	0x034A1350 LDP X22, X21, [X31 + 0x40]
	0x034A1354 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_TotalCount(System.Int32 value)

Disassembly:
	0x034A1358 LDP X26, X25, [X31 + 0x20]
	0x034A135C LDP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034A1360 MOV X4, X31
	0x034A1364 LDR X30, [X31], #0x60
	0x034A1368 B 0x32277C4
	0x034A136C BL 0x1C16F28
	0x034A1370 BL 0x1C16F44
	0x034A1374 MOV X1, X31
	0x034A1378 BL 0x1C16DEC
	0x034A137C BL 0x1C16F20
	0x034A1380 MOV X1, X31
	0x034A1384 B 0x33BDD8C
	0x034A1388 LDR X0, [X0 + 0x10]
	0x034A138C RET
	0x034A1390 LDR X0, [X0 + 0x10]
	0x034A1394 RET
	0x034A1398 STR X1, [X0 + 0x10]
	0x034A139C RET
	0x034A13A0 LDR X0, [X0 + 0x18]
	0x034A13A4 RET
	0x034A13A8 STR X1, [X0 + 0x18]
	0x034A13AC RET
	0x034A13B0 STR X30, [X31 - 0x30]!
	0x034A13B4 STP X22, X21, [X31 + 0x10]
	0x034A13B8 STP X20, X19, [X31 + 0x20]
	0x034A13BC ADRP X20, 0xF3C000
	0x034A13C0 ADRP X21, 0xC52000
	0x034A13C4 ADRP X22, 0xC52000
	0x034A13C8 LDRB W8, [X20 + 0x9CF]
	0x034A13CC LDR X21, [X21 + 0x988]
	0x034A13D0 LDR X22, [X22 + 0x9D0]
	0x034A13D4 MOV X19, X0
	0x034A13D8 TBNZ X8, 0x0, 0x34A1420
	0x034A13DC ADRP X0, 0xC52000
	0x034A13E0 LDR X0, [X0 + 0x9D0]
	0x034A13E4 BL 0x1C16CF4
	0x034A13E8 ADRP X0, 0xC52000
	0x034A13EC LDR X0, [X0 + 0x838]
	0x034A13F0 BL 0x1C16CF4
	0x034A13F4 ADRP X0, 0xC8C000
	0x034A13F8 LDR X0, [X0 + 0xFA0]
	0x034A13FC BL 0x1C16CF4
	0x034A1400 ADRP X0, 0xC52000
	0x034A1404 LDR X0, [X0 + 0x988]
	0x034A1408 BL 0x1C16CF4
	0x034A140C ADRP X0, 0xC8C000
	0x034A1410 LDR X0, [X0 + 0xD58]
	0x034A1414 BL 0x1C16CF4
	0x034A1418 MOVZ W8, 0x1
	0x034A141C STRB W8, [X20 + 0x9CF]
	0x034A1420 LDR X0, [X22]
	0x034A1424 LDR X21, [X21]
	0x034A1428 MOVZ W1, 0x4
	0x034A142C BL 0x1C16D6C
	0x034A1430 CBZ X0, 0x34A1534
	0x034A1434 MOV X20, X0
	0x034A1438 CBZ X21, 0x34A1450
	0x034A143C LDR X8, [X20]
	0x034A1440 MOV X0, X21
	0x034A1444 LDR X1, [X8 + 0x40]
	0x034A1448 BL 0x1C16E00
	0x034A144C CBZ X0, 0x34A1528
	0x034A1450 LDR W8, [X20 + 0x18]
	0x034A1454 CBZ W8, 0x34A1524
	0x034A1458 ADRP X22, 0xC8C000
	0x034A145C LDR X22, [X22 + 0xFA0]
	0x034A1460 STR X21, [X20 + 0x20]
	0x034A1464 LDR X0, [X22]
	0x034A1468 CBZ X0, 0x34A1480
	0x034A146C LDR X8, [X20]
	0x034A1470 LDR X1, [X8 + 0x40]
	0x034A1474 BL 0x1C16E00
	0x034A1478 CBZ X0, 0x34A1528
	0x034A147C LDR W8, [X20 + 0x18]
	0x034A1480 CMP W8, 0x1
	0x034A1484 B.LS 0x34A1524
	0x034A1488 LDR X9, [X22]
	0x034A148C STR X9, [X20 + 0x28]
	0x034A1490 LDR X21, [X19 + 0x10]
	0x034A1494 CBZ X21, 0x34A14B0
	0x034A1498 LDR X8, [X20]
	0x034A149C MOV X0, X21
	0x034A14A0 LDR X1, [X8 + 0x40]
	0x034A14A4 BL 0x1C16E00
	0x034A14A8 CBZ X0, 0x34A1528
	0x034A14AC LDR W8, [X20 + 0x18]
	0x034A14B0 CMP W8, 0x2
	0x034A14B4 B.LS 0x34A1524
	0x034A14B8 ADRP X22, 0xC52000
	0x034A14BC LDR X22, [X22 + 0x838]
	0x034A14C0 STR X21, [X20 + 0x30]
	0x034A14C4 LDR X0, [X22]
	0x034A14C8 CBZ X0, 0x34A14E0
	0x034A14CC LDR X8, [X20]
	0x034A14D0 LDR X1, [X8 + 0x40]
	0x034A14D4 BL 0x1C16E00
	0x034A14D8 CBZ X0, 0x34A1528
	0x034A14DC LDR W8, [X20 + 0x18]
	0x034A14E0 CMP W8, 0x3
	0x034A14E4 B.LS 0x34A1524
	0x034A14E8 LDR X8, [X22]
	0x034A14EC ADRP X21, 0xC8C000
	0x034A14F0 LDR X21, [X21 + 0xD58]
	0x034A14F4 MOV X0, X20
	0x034A14F8 MOV X1, X31
	0x034A14FC STR X8, [X20 + 0x38]
	0x034A1500 BL 0x3227578
	0x034A1504 LDR X2, [X19 + 0x18]
	0x034A1508 LDR X1, [X21]
	0x034A150C LDR X3, [X22]
	0x034A1510 LDP X20, X19, [X31 + 0x20]
	0x034A1514 LDP X22, X21, [X31 + 0x10]
	0x034A1518 MOV X4, X31
	0x034A151C LDR X30, [X31], #0x30
	0x034A1520 B 0x32277C4
	0x034A1524 BL 0x1C16F28
	0x034A1528 BL 0x1C16F44
	0x034A152C MOV X1, X31
	0x034A1530 BL 0x1C16DEC
	0x034A1534 BL 0x1C16F20
	0x034A1538 MOV X1, X31
	0x034A153C B 0x33BDD8C
	0x034A1540 LDR X0, [X0 + 0x10]
	0x034A1544 RET
	0x034A1548 STR X1, [X0 + 0x10]
	0x034A154C RET
	0x034A1550 LDR X0, [X0 + 0x18]
	0x034A1554 RET
	0x034A1558 STR X1, [X0 + 0x18]
	0x034A155C RET
	0x034A1560 STR X30, [X31 - 0x20]!
	0x034A1564 STP X20, X19, [X31 + 0x10]
	0x034A1568 ADRP X20, 0xF3C000
	0x034A156C LDRB W8, [X20 + 0x9D0]
	0x034A1570 MOV X19, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF3D000
	011 Move X26, 0xC53000
	012 Move X22, 0xC53000
	013 Move X25, 0xC91000
	014 Move X23, 0xC8E000
	015 Move X24, 0xC8D000
	016 Move X21, 0xC53000
	017 Move X26, [X26+2440]
	018 Move W8, [X20+2501]
	019 Move X22, [X22+2104]
	020 Move X25, [X25+2912]
	021 Move X23, [X23+184]
	022 Move X24, [X24+3408]
	023 Move X21, [X21+2512]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {55}
	029 Move X0, 0xC53000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0xC53000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0xC91000
	036 Move X0, [X0+2912]
	037 Call 0x1C17CF4
	038 Move X0, 0xC53000
	039 Move X0, [X0+2104]
	040 Call 0x1C17CF4
	041 Move X0, 0xC8D000
	042 Move X0, [X0+3408]
	043 Call 0x1C17CF4
	044 Move X0, 0xC53000
	045 Move X0, [X0+2440]
	046 Call 0x1C17CF4
	047 Move X0, 0xC91000
	048 Move X0, [X0+3024]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8E000
	051 Move X0, [X0+184]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+2501], W8
	055 Move X20, [X26]
	056 Move X0, X19
	057 Call ConsoleStorageList.get_Objects, X0
	058 Move X8, [X22]
	059 Move X2, [X25]
	060 Move X1, X0
	061 Move X0, X8
	062 Call String.Join, X0, X1
	063 Move X1, [X23]
	064 Move X3, [X24]
	065 Move X2, X0
	066 Move X0, X20
	067 Move X4, X31
	068 Call String.Concat, X0, X1, X2, X3
	069 Move X8, [X21]
	070 Move X21, X0
	071 Move W1, 4
	072 Move X0, X8
	073 Call 0x1C17D6C
	074 Compare X0, 0
	075 JumpIfEqual {151}
	076 Move X20, X0
	077 Compare X21, 0
	078 JumpIfEqual {85}
	079 Move X8, [X20]
	080 Move X0, X21
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {148}
	085 Move W8, [X20+24]
	086 Compare W8, 0
	087 JumpIfEqual {147}
	088 Move X23, 0xC91000
	089 Move X23, [X23+3024]
	090 Move [X20+32], X21
	091 Move X0, [X23]
	092 Compare X0, 0
	093 JumpIfEqual {100}
	094 Move X8, [X20]
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {148}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X23]
	102 Move X9, 0xC53000
	103 Move X9, [X9+1880]
	104 Add X1, X31, 12
	105 Move [X20+40], X8
	106 Move W8, [X19+24]
	107 Move X0, [X9]
	108 Move [X31+12], W8
	109 Call 0x1C17E04
	110 Move X19, X0
	111 Compare X0, 0
	112 JumpIfEqual {119}
	113 Move X8, [X20]
	114 Move X0, X19
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {148}
	119 Move W8, [X20+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X20+48], X19
	122 Move X0, [X22]
	123 Compare X0, 0
	124 JumpIfEqual {131}
	125 Move X8, [X20]
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {148}
	130 Move W8, [X20+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X22]
	133 Move X0, X20
	134 Move X1, X31
	135 Move [X20+56], X8
	136 Call String.Concat, X0
	137 Move X20, [X31+64]
	138 Move X19, [X31+72]
	139 Move X22, [X31+48]
	140 Move X21, [X31+56]
	141 Move X24, [X31+32]
	142 Move X23, [X31+40]
	143 Move X26, [X31+16]
	144 Move X25, [X31+24]
	145 Move X30, [X31+80]
	146 Return X0
	147 Call 0x1C17F28
	148 Call 0x1C17F44
	149 Move X1, X31
	150 Call 0x1C17DEC
	151 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034A1574 TBNZ X8, 0x0, 0x34A1598
	0x034A1578 ADRP X0, 0xC53000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

