Type: Nakama.Console.ApiClient/<DeleteUsersAsync>d__33

Method: System.Void MoveNext()

Disassembly:
	0x034A7CBC MOVZ W8, 0x1
	0x034A7CC0 STRB W8, [X22 + 0xA09]
	0x034A7CC4 LDR X0, [X21]
	0x034A7CC8 ADRP X21, 0xC8A000
	0x034A7CCC LDR W8, [X0 + 0xE0]
	0x034A7CD0 LDR X21, [X21 + 0xFF8]
	0x034A7CD4 CBNZ W8, 0x34A7CDC
	0x034A7CD8 BL 0x1C16DFC
	0x034A7CDC LDR X2, [X21]
	0x034A7CE0 ADD X0, X20, 0x8
	0x034A7CE4 MOV X1, X19
	0x034A7CE8 LDP X20, X19, [X31 + 0x20]
	0x034A7CEC LDP X22, X21, [X31 + 0x10]
	0x034A7CF0 LDR X30, [X31], #0x30
	0x034A7CF4 B 0x2632228
	0x034A7CF8 SUB X31, X31, 0x50
	0x034A7CFC STP X30, X25, [X31 + 0x10]
	0x034A7D00 STP X24, X23, [X31 + 0x20]
	0x034A7D04 STP X22, X21, [X31 + 0x30]
	0x034A7D08 STP X20, X19, [X31 + 0x40]
	0x034A7D0C ADRP X20, 0xF36000
	0x034A7D10 LDRB W8, [X20 + 0xA0A]
	0x034A7D14 MOV X19, X0
	0x034A7D18 TBNZ X8, 0x0, 0x34A7E08
	0x034A7D1C ADRP X0, 0xC8B000
	0x034A7D20 LDR X0, [X0]
	0x034A7D24 BL 0x1C16CF4
	0x034A7D28 ADRP X0, 0xC8B000
	0x034A7D2C LDR X0, [X0 + 0x8]
	0x034A7D30 BL 0x1C16CF4
	0x034A7D34 ADRP X0, 0xC8A000
	0x034A7D38 LDR X0, [X0 + 0xC58]
	0x034A7D3C BL 0x1C16CF4
	0x034A7D40 ADRP X0, 0xC4D000
	0x034A7D44 LDR X0, [X0 + 0x810]
	0x034A7D48 BL 0x1C16CF4
	0x034A7D4C ADRP X0, 0xC4D000
	0x034A7D50 LDR X0, [X0 + 0x6C0]
	0x034A7D54 BL 0x1C16CF4
	0x034A7D58 ADRP X0, 0xC4D000
	0x034A7D5C LDR X0, [X0 + 0x6D0]
	0x034A7D60 BL 0x1C16CF4
	0x034A7D64 ADRP X0, 0xC87000
	0x034A7D68 LDR X0, [X0 + 0x7B8]
	0x034A7D6C BL 0x1C16CF4
	0x034A7D70 ADRP X0, 0xC8B000
	0x034A7D74 LDR X0, [X0 + 0x10]
	0x034A7D78 BL 0x1C16CF4
	0x034A7D7C ADRP X0, 0xC4F000
	0x034A7D80 LDR X0, [X0 + 0x1E0]
	0x034A7D84 BL 0x1C16CF4
	0x034A7D88 ADRP X0, 0xC4F000
	0x034A7D8C LDR X0, [X0 + 0x1F0]
	0x034A7D90 BL 0x1C16CF4
	0x034A7D94 ADRP X0, 0xC4F000
	0x034A7D98 LDR X0, [X0 + 0x1F8]
	0x034A7D9C BL 0x1C16CF4
	0x034A7DA0 ADRP X0, 0xC55000
	0x034A7DA4 LDR X0, [X0 + 0x3A0]
	0x034A7DA8 BL 0x1C16CF4
	0x034A7DAC ADRP X0, 0xC4E000
	0x034A7DB0 LDR X0, [X0 + 0xA28]
	0x034A7DB4 BL 0x1C16CF4
	0x034A7DB8 ADRP X0, 0xC75000
	0x034A7DBC LDR X0, [X0 + 0x4D0]
	0x034A7DC0 BL 0x1C16CF4
	0x034A7DC4 ADRP X0, 0xC87000
	0x034A7DC8 LDR X0, [X0 + 0x7D0]
	0x034A7DCC BL 0x1C16CF4
	0x034A7DD0 ADRP X0, 0xC88000
	0x034A7DD4 LDR X0, [X0 + 0x2E8]
	0x034A7DD8 BL 0x1C16CF4
	0x034A7DDC ADRP X0, 0xC87000
	0x034A7DE0 LDR X0, [X0 + 0x7D8]
	0x034A7DE4 BL 0x1C16CF4
	0x034A7DE8 ADRP X0, 0xC4C000
	0x034A7DEC LDR X0, [X0 + 0x988]
	0x034A7DF0 BL 0x1C16CF4
	0x034A7DF4 ADRP X0, 0xC8A000
	0x034A7DF8 LDR X0, [X0 + 0xEC8]
	0x034A7DFC BL 0x1C16CF4
	0x034A7E00 MOVZ W8, 0x1
	0x034A7E04 STRB W8, [X20 + 0xA0A]
	0x034A7E08 STR X31, [X31 + 0x8]
	0x034A7E0C ADRP X25, 0xC8A000
	0x034A7E10 LDR W8, [X19]
	0x034A7E14 LDR X25, [X25 + 0xC58]
	0x034A7E18 CBZ W8, 0x34A7FA8
	0x034A7E1C LDR X21, [X19 + 0x20]
	0x034A7E20 CBZ X21, 0x34A80D8
	0x034A7E24 ADRP X8, 0xC4E000
	0x034A7E28 LDR X8, [X8 + 0xA28]
	0x034A7E2C LDR X0, [X8]
	0x034A7E30 ADRP X8, 0xC8A000
	0x034A7E34 LDR X8, [X8 + 0xEC8]
	0x034A7E38 LDR X24, [X19 + 0x28]
	0x034A7E3C LDR W9, [X0 + 0xE0]
	0x034A7E40 LDR X20, [X8]
	0x034A7E44 CBNZ W9, 0x34A7E4C
	0x034A7E48 BL 0x1C16DFC
	0x034A7E4C MOV X0, X21
	0x034A7E50 MOV X1, X31
	0x034A7E54 BL 0x3624D20
	0x034A7E58 CBZ X20, 0x34A8120
	0x034A7E5C ADRP X8, 0xC88000
	0x034A7E60 LDR X8, [X8 + 0x2E8]
	0x034A7E64 MOV X2, X0
	0x034A7E68 LDR X1, [X8]
	0x034A7E6C MOV X0, X20
	0x034A7E70 MOV X3, X31
	0x034A7E74 BL 0x32293BC
	0x034A7E78 CBZ X24, 0x34A8124
	0x034A7E7C ADRP X8, 0xC4C000
	0x034A7E80 ADRP X9, 0xC55000
	0x034A7E84 LDR X8, [X8 + 0x988]
	0x034A7E88 LDR X9, [X9 + 0x3A0]
	0x034A7E8C MOV X22, X0
	0x034A7E90 LDR X23, [X24 + 0x10]
	0x034A7E94 LDR X21, [X8]
	0x034A7E98 LDR X0, [X9]
	0x034A7E9C BL 0x1C16F10
	0x034A7EA0 MOV X20, X0
	0x034A7EA4 MOV X1, X23
	0x034A7EA8 MOV X2, X31
	0x034A7EAC BL 0x36281F8
	0x034A7EB0 CBZ X20, 0x34A8128
	0x034A7EB4 MOV X0, X20
	0x034A7EB8 MOV X1, X22
	0x034A7EBC MOV X2, X31
	0x034A7EC0 BL 0x36288CC
	0x034A7EC4 MOV X0, X20
	0x034A7EC8 MOV X1, X21
	0x034A7ECC MOV X2, X31
	0x034A7ED0 BL 0x3628980
	0x034A7ED4 MOV X0, X20
	0x034A7ED8 MOV X1, X31
	0x034A7EDC BL 0x3628A38
	0x034A7EE0 ADRP X8, 0xC75000
	0x034A7EE4 ADRP X9, 0xC4D000
	0x034A7EE8 LDR X8, [X8 + 0x4D0]
	0x034A7EEC LDR X9, [X9 + 0x6D0]
	0x034A7EF0 MOV X20, X0
	0x034A7EF4 LDR X21, [X8]
	0x034A7EF8 LDR X0, [X9]
	0x034A7EFC BL 0x1C16F10
	0x034A7F00 ADRP X8, 0xC4D000
	0x034A7F04 LDR X8, [X8 + 0x6C0]
	0x034A7F08 MOV X22, X0
	0x034A7F0C LDR X1, [X8]
	0x034A7F10 BL 0x2AA4804
	0x034A7F14 ADRP X8, 0xC87000
	0x034A7F18 LDR X8, [X8 + 0x7D8]
	0x034A7F1C LDR X1, [X19 + 0x30]
	0x034A7F20 LDR X0, [X8]
	0x034A7F24 MOV X2, X31
	0x034A7F28 BL 0x321B938
	0x034A7F2C CBZ X22, 0x34A812C
	0x034A7F30 ADRP X8, 0xC87000
	0x034A7F34 LDR X8, [X8 + 0x7D0]
	0x034A7F38 ADRP X9, 0xC4D000
	0x034A7F3C LDR X9, [X9 + 0x810]
	0x034A7F40 MOV X2, X0
	0x034A7F44 LDR X1, [X8]
	0x034A7F48 LDR X3, [X9]
	0x034A7F4C MOV X0, X22
	0x034A7F50 BL 0x2AA5098
	0x034A7F54 LDR X23, [X24 + 0x20]
	0x034A7F58 CBZ X23, 0x34A8130
	0x034A7F5C ADRP X10, 0xC87000
	0x034A7F60 LDR X8, [X23]
	0x034A7F64 LDR X10, [X10 + 0x7B8]
	0x034A7F68 LDR W24, [X24 + 0x18]
	0x034A7F6C LDRH W9, [X8 + 0x12E]
	0x034A7F70 LDR X1, [X10]
	0x034A7F74 CBZ X9, 0x34A7F98
	0x034A7F78 LDR X10, [X8 + 0xB0]
	0x034A7F7C ADD X10, X10, 0x8
	0x034A7F80 LDUR X11, [X10 - 0x8]
	0x034A7F84 CMP X11, X1
	0x034A7F88 B.EQ 0x34A7FC0
	0x034A7F8C SUBS X9, X9, 0x1
	0x034A7F90 ADD X10, X10, 0x10
	0x034A7F94 B.NE 0x34A7F80
	0x034A7F98 MOVZ W2, 0x3
	0x034A7F9C MOV X0, X23
	0x034A7FA0 BL 0x1C5C788
	0x034A7FA4 B 0x34A7FD0
	0x034A7FA8 LDR X8, [X19 + 0x38]
	0x034A7FAC MOVN W9, 0x0
	0x034A7FB0 STR X8, [X31 + 0x8]
	0x034A7FB4 STR X31, [X19 + 0x38]
	0x034A7FB8 STR W9, [X19]
	0x034A7FBC B 0x34A802C
	0x034A7FC0 LDR W9, [X10]
	0x034A7FC4 ADD W9, W9, 0x3
	0x034A7FC8 ADD X8, X8, W9, 0x4, SXTW
	0x034A7FCC ADD X0, X8, 0x138
	0x034A7FD0 LDP X8, X9, [X0]
	0x034A7FD4 MOV X0, X23
	0x034A7FD8 MOV X1, X21
	0x034A7FDC MOV X2, X20
	0x034A7FE0 MOV X3, X22
	0x034A7FE4 MOV X4, X31
	0x034A7FE8 MOV W5, W24
	0x034A7FEC MOV X6, X31
	0x034A7FF0 MOV X7, X31
	0x034A7FF4 STR X9, [X31]
	0x034A7FF8 BLR X8
	0x034A7FFC CBZ X0, 0x34A8134
	0x034A8000 ADRP X8, 0xC4E000
	0x034A8004 LDR X8, [X8 + 0x1F8]
	0x034A8008 LDR X1, [X8]
	0x034A800C BL 0x269F5D0
	0x034A8010 ADRP X8, 0xC4E000
	0x034A8014 LDR X8, [X8 + 0x1F0]
	0x034A8018 STR X0, [X31 + 0x8]
	0x034A801C LDR X1, [X8]
	0x034A8020 ADD X0, X31, 0x8
	0x034A8024 BL 0x2677430
	0x034A8028 TBZ X0, 0x0, 0x34A8088
	0x034A802C ADRP X8, 0xC4E000
	0x034A8030 LDR X8, [X8 + 0x1E0]
	0x034A8034 ADD X0, X31, 0x8
	0x034A8038 LDR X1, [X8]
	0x034A803C BL 0x2677474
	0x034A8040 ADRP X8, 0xC8A000
	0x034A8044 LDR X8, [X8 + 0x10]
	0x034A8048 LDR X1, [X8]
	0x034A804C BL 0x220E6DC
	0x034A8050 MOVN W8, 0x1
	0x034A8054 STR W8, [X19], #0x8
	0x034A8058 MOV X20, X0
	0x034A805C LDR X0, [X25]
	0x034A8060 ADRP X21, 0xC8A000
	0x034A8064 LDR W8, [X0 + 0xE0]
	0x034A8068 LDR X21, [X21 + 0x8]
	0x034A806C CBNZ W8, 0x34A8074
	0x034A8070 BL 0x1C16DFC
	0x034A8074 LDR X2, [X21]
	0x034A8078 MOV X0, X19
	0x034A807C MOV X1, X20
	0x034A8080 BL 0x26322B0
	0x034A8084 B 0x34A80C0
	0x034A8088 STR W31, [X19]
	0x034A808C LDR X8, [X31 + 0x8]
	0x034A8090 STR X8, [X19 + 0x38]
	0x034A8094 LDR X0, [X25]
	0x034A8098 LDR W8, [X0 + 0xE0]
	0x034A809C CBNZ W8, 0x34A80A4
	0x034A80A0 BL 0x1C16DFC
	0x034A80A4 ADRP X8, 0xC8A000
	0x034A80A8 LDR X8, [X8]
	0x034A80AC ADD X0, X19, 0x8
	0x034A80B0 LDR X3, [X8]
	0x034A80B4 ADD X1, X31, 0x8
	0x034A80B8 MOV X2, X19
	0x034A80BC BL 0x1FB73D0
	0x034A80C0 LDP X20, X19, [X31 + 0x40]
	0x034A80C4 LDP X22, X21, [X31 + 0x30]
	0x034A80C8 LDP X24, X23, [X31 + 0x20]
	0x034A80CC LDP X30, X25, [X31 + 0x10]
	0x034A80D0 ADD X31, X31, 0x50
	0x034A80D4 RET
	0x034A80D8 ADRP X0, 0xC53000
	0x034A80DC LDR X0, [X0 + 0x578]
	0x034A80E0 BL 0x1C16D08
	0x034A80E4 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF37000
	011 Move W8, [X20+2564]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {64}
	017 Move X0, 0xC8B000
	018 Move X0, [X0+3984]
	019 Call 0x1C17CF4
	020 Move X0, 0xC50000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC4E000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4E000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4E000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC88000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC50000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC50000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC50000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC56000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC8B000
	048 Move X0, [X0+3992]
	049 Call 0x1C17CF4
	050 Move X0, 0xC88000
	051 Move X0, [X0+2000]
	052 Call 0x1C17CF4
	053 Move X0, 0xC88000
	054 Move X0, [X0+2008]
	055 Call 0x1C17CF4
	056 Move X0, 0xC4D000
	057 Move X0, [X0+2440]
	058 Call 0x1C17CF4
	059 Move X0, 0xC76000
	060 Move X0, [X0+1224]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+2564], W8
	064 Move [X31+8], X31
	065 Move X25, 0xC50000
	066 Move W8, [X19]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {151}
	070 Move X24, [X19+32]
	071 Compare X24, 0
	072 JumpIfEqual {232}
	073 Move X8, 0xC8B000
	074 Move X9, 0xC4D000
	075 Move X10, 0xC56000
	076 Move X8, [X8+3992]
	077 Move X9, [X9+2440]
	078 Move X10, [X10+928]
	079 Move X23, [X24+16]
	080 Move X22, [X8]
	081 Move X21, [X9]
	082 Move X0, [X10]
	083 Call 0x1C17F10
	084 Move X20, X0
	085 Move X1, X23
	086 Move X2, X31
	087 Call UriBuilder..ctor, X0, X1
	088 Compare X20, 0
	089 JumpIfEqual {233}
	090 Move X0, X20
	091 Move X1, X22
	092 Move X2, X31
	093 Call UriBuilder.set_Path, X0, X1
	094 Move X0, X20
	095 Move X1, X21
	096 Move X2, X31
	097 Call UriBuilder.set_Query, X0, X1
	098 Move X0, X20
	099 Move X1, X31
	100 Call UriBuilder.get_Uri, X0
	101 Move X8, 0xC76000
	102 Move X9, 0xC4E000
	103 Move X8, [X8+1224]
	104 Move X9, [X9+1744]
	105 Move X20, X0
	106 Move X21, [X8]
	107 Move X0, [X9]
	108 Call 0x1C17F10
	109 Move X8, 0xC4E000
	110 Move X8, [X8+1728]
	111 Move X22, X0
	112 Move X1, [X8]
	113 Call Dictionary`2<Object, Object>..ctor, X0
	114 Move X8, 0xC88000
	115 Move X8, [X8+2008]
	116 Move X1, [X19+40]
	117 Move X0, [X8]
	118 Move X2, X31
	119 Call String.Concat, X0, X1
	120 Compare X22, 0
	121 JumpIfEqual {234}
	122 Move X8, 0xC88000
	123 Move X8, [X8+2000]
	124 Move X9, 0xC4E000
	125 Move X9, [X9+2064]
	126 Move X2, X0
	127 Move X1, [X8]
	128 Move X3, [X9]
	129 Move X0, X22
	130 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	131 Move X23, [X24+32]
	132 Compare X23, 0
	133 JumpIfEqual {235}
	134 Move X10, 0xC88000
	135 Move X8, [X23]
	136 Move X10, [X10+1976]
	137 Move W24, [X24+24]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X1, [X10]
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move W2, 3
	149 Move X0, X23
	150 Call 0x1C5D788
	151 Move X8, [X19+48]
	152 Move TEMP, 0
	153 Not TEMP
	154 Move W9, TEMP
	155 Move [X31+8], X8
	156 Move [X19+48], X31
	157 Move [X19], W9
	158 Move W9, [X10]
	159 Add W9, W9, 3
	160 Add X8, X8, W9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X9, [X0+8]
	164 Move X0, X23
	165 Move X1, X21
	166 Move X2, X20
	167 Move X3, X22
	168 Move X4, X31
	169 Move W5, W24
	170 Move X6, X31
	171 Move X7, X31
	172 Move [X31], X9
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Compare X0, 0
	175 JumpIfEqual {236}
	176 Move X8, 0xC50000
	177 Move X8, [X8+504]
	178 Move X1, [X8]
	179 Call Task`1<Object>.GetAwaiter, X0
	180 Move X8, 0xC50000
	181 Move X8, [X8+496]
	182 Move [X31+8], X0
	183 Move X1, [X8]
	184 Add X0, X31, 8
	185 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {207}
	190 Move X8, 0xC50000
	191 Move X8, [X8+480]
	192 Add X0, X31, 8
	193 Move X1, [X8]
	194 Call TaskAwaiter`1<Object>.GetResult, X0
	195 Move TEMP, 1
	196 Not TEMP
	197 Move W8, TEMP
	198 Move [X19+8], W8
	199 Move X0, [X25]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X19
	205 Move X1, X31
	206 Call AsyncTaskMethodBuilder.SetResult, X0
	207 Move [X19], W31
	208 Move X8, [X31+8]
	209 Move [X19+48], X8
	210 Move X0, [X25]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move X8, 0xC8B000
	216 Move X8, [X8+3984]
	217 Add X0, X19, 8
	218 Move X3, [X8]
	219 Add X1, X31, 8
	220 Move X2, X19
	221 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	222 Move X20, [X31+64]
	223 Move X19, [X31+72]
	224 Move X22, [X31+48]
	225 Move X21, [X31+56]
	226 Move X24, [X31+32]
	227 Move X23, [X31+40]
	228 Move X30, [X31+16]
	229 Move X25, [X31+24]
	230 Add X31, X31, 80
	231 Return 
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Move X20, X0
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, X20
	240 Call 0x3EB2AD0
	241 Move X20, X0
	242 Move X0, 0xC4C000
	243 Move X0, [X0+2000]
	244 Call 0x1C17D08
	245 Move X8, [X20]
	246 Move X1, [X8]
	247 Call 0x1C18270
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {269}
	252 Move X20, [X20]
	253 Call 0x3EB2AE0
	254 Move TEMP, 1
	255 Not TEMP
	256 Move W8, TEMP
	257 Move [X19+8], W8
	258 Move X0, 0xC4F000
	259 Move X0, [X0+640]
	260 Call 0x1C17D08
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Move X0, X19
	266 Move X1, X20
	267 Move X2, X31
	268 Call AsyncTaskMethodBuilder.SetException, X0, X1
	269 Move W0, 8
	270 Call 0x3EB2AF0
	271 Move X8, [X20]
	272 Move [X0], X8
	273 Move X1, 0xA0D000
	274 Add X1, X1, 3672
	275 Move X2, X31
	276 Call 0x3EB2B00
	277 Move X20, X0
	278 Call 0x3EB2AE0
	279 Move X0, X20
	280 Call 0x1D2D690
	281 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A80E8 MOV X20, X0
	0x034A80EC ADRP X0, 0xC87000
	0x034A80F0 LDR X0, [X0 + 0x2F0]
	0x034A80F4 BL 0x1C16D08
	0x034A80F8 MOV X1, X0
	0x034A80FC MOV X0, X20
	0x034A8100 MOV X2, X31
	0x034A8104 BL 0x3314A68
	0x034A8108 ADRP X0, 0xC8A000
	0x034A810C LDR X0, [X0 + 0x18]
	0x034A8110 BL 0x1C16D08
	0x034A8114 MOV X1, X0
	0x034A8118 MOV X0, X20
	0x034A811C BL 0x1C16DEC
	0x034A8120 BL 0x1C16F20
	0x034A8124 BL 0x1C16F20
	0x034A8128 BL 0x1C16F20
	0x034A812C BL 0x1C16F20
	0x034A8130 BL 0x1C16F20
	0x034A8134 BL 0x1C16F20
	0x034A8138 B 0x34A8180
	0x034A813C B 0x34A8180
	0x034A8140 B 0x34A8180
	0x034A8144 B 0x34A8180
	0x034A8148 B 0x34A8180
	0x034A814C B 0x34A8180

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF36000
	007 Move X22, 0xC4F000
	008 Move W8, [X21+2565]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC4F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2565], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

