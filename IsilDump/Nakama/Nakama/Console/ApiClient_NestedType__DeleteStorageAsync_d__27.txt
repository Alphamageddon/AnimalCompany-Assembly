Type: Nakama.Console.ApiClient/<DeleteStorageAsync>d__27

Method: System.Void MoveNext()

Disassembly:
	0x034A69F8 BL 0x32C4864
	0x034A69FC B 0x34A6A38
	0x034A6A00 STR W31, [X19]
	0x034A6A04 LDR X8, [X31 + 0x8]
	0x034A6A08 STR X8, [X19 + 0x50]
	0x034A6A0C LDR X0, [X25]
	0x034A6A10 LDR W8, [X0 + 0xE0]
	0x034A6A14 CBNZ W8, 0x34A6A1C
	0x034A6A18 BL 0x1C16DFC
	0x034A6A1C ADRP X8, 0xC8B000
	0x034A6A20 LDR X8, [X8 + 0xF70]
	0x034A6A24 ADD X0, X19, 0x8
	0x034A6A28 LDR X3, [X8]
	0x034A6A2C ADD X1, X31, 0x8
	0x034A6A30 MOV X2, X19
	0x034A6A34 BL 0x21874E0
	0x034A6A38 LDP X20, X19, [X31 + 0x40]
	0x034A6A3C LDP X22, X21, [X31 + 0x30]
	0x034A6A40 LDP X24, X23, [X31 + 0x20]
	0x034A6A44 LDP X30, X25, [X31 + 0x10]
	0x034A6A48 ADD X31, X31, 0x50
	0x034A6A4C RET
	0x034A6A50 ADRP X0, 0xC55000
	0x034A6A54 LDR X0, [X0 + 0x578]
	0x034A6A58 BL 0x1C16D08
	0x034A6A5C BL 0x1C16F10
	0x034A6A60 MOV X20, X0
	0x034A6A64 ADRP X0, 0xC89000
	0x034A6A68 LDR X0, [X0 + 0x118]
	0x034A6A6C BL 0x1C16D08
	0x034A6A70 MOV X1, X0
	0x034A6A74 MOV X0, X20
	0x034A6A78 MOV X2, X31
	0x034A6A7C BL 0x3314A68
	0x034A6A80 ADRP X0, 0xC8B000
	0x034A6A84 LDR X0, [X0 + 0xF88]
	0x034A6A88 BL 0x1C16D08
	0x034A6A8C MOV X1, X0
	0x034A6A90 MOV X0, X20
	0x034A6A94 BL 0x1C16DEC
	0x034A6A98 ADRP X0, 0xC55000
	0x034A6A9C LDR X0, [X0 + 0x578]
	0x034A6AA0 BL 0x1C16D08
	0x034A6AA4 BL 0x1C16F10
	0x034A6AA8 MOV X20, X0
	0x034A6AAC ADRP X0, 0xC8B000
	0x034A6AB0 LDR X0, [X0 + 0xF60]
	0x034A6AB4 BL 0x1C16D08
	0x034A6AB8 MOV X1, X0
	0x034A6ABC MOV X0, X20
	0x034A6AC0 MOV X2, X31
	0x034A6AC4 BL 0x3314A68
	0x034A6AC8 ADRP X0, 0xC8B000
	0x034A6ACC LDR X0, [X0 + 0xF88]
	0x034A6AD0 BL 0x1C16D08
	0x034A6AD4 MOV X1, X0
	0x034A6AD8 MOV X0, X20
	0x034A6ADC BL 0x1C16DEC
	0x034A6AE0 ADRP X0, 0xC55000
	0x034A6AE4 LDR X0, [X0 + 0x578]
	0x034A6AE8 BL 0x1C16D08
	0x034A6AEC BL 0x1C16F10
	0x034A6AF0 MOV X20, X0
	0x034A6AF4 ADRP X0, 0xC89000
	0x034A6AF8 LDR X0, [X0 + 0x128]
	0x034A6AFC BL 0x1C16D08
	0x034A6B00 MOV X1, X0
	0x034A6B04 MOV X0, X20
	0x034A6B08 MOV X2, X31
	0x034A6B0C BL 0x3314A68
	0x034A6B10 ADRP X0, 0xC8B000
	0x034A6B14 LDR X0, [X0 + 0xF88]
	0x034A6B18 BL 0x1C16D08
	0x034A6B1C MOV X1, X0
	0x034A6B20 MOV X0, X20
	0x034A6B24 BL 0x1C16DEC
	0x034A6B28 BL 0x1C16F20
	0x034A6B2C BL 0x1C16F20
	0x034A6B30 BL 0x1C16F20
	0x034A6B34 BL 0x1C16F20
	0x034A6B38 BL 0x1C16F20
	0x034A6B3C BL 0x1C16F20
	0x034A6B40 BL 0x1C16F20
	0x034A6B44 BL 0x1C16F20
	0x034A6B48 B 0x34A6BB0
	0x034A6B4C B 0x34A6BB0
	0x034A6B50 B 0x34A6BB0
	0x034A6B54 B 0x34A6BB0
	0x034A6B58 B 0x34A6BB0
	0x034A6B5C B 0x34A6BB0
	0x034A6B60 B 0x34A6BB0
	0x034A6B64 B 0x34A6BB0
	0x034A6B68 B 0x34A6BB0
	0x034A6B6C B 0x34A6BB0
	0x034A6B70 B 0x34A6BB0
	0x034A6B74 B 0x34A6BB0
	0x034A6B78 B 0x34A6BB0
	0x034A6B7C B 0x34A6BB0
	0x034A6B80 B 0x34A6BB0
	0x034A6B84 B 0x34A6BB0
	0x034A6B88 B 0x34A6BB0
	0x034A6B8C B 0x34A6BB0
	0x034A6B90 B 0x34A6BB0
	0x034A6B94 B 0x34A6BB0
	0x034A6B98 B 0x34A6BB0
	0x034A6B9C B 0x34A6BB0
	0x034A6BA0 B 0x34A6BB0
	0x034A6BA4 B 0x34A6BB0
	0x034A6BA8 B 0x34A6BB0
	0x034A6BAC B 0x34A6BB0
	0x034A6BB0 MOV X20, X0
	0x034A6BB4 CMP W1, 0x1
	0x034A6BB8 B.NE 0x34A6C48
	0x034A6BBC MOV X0, X20
	0x034A6BC0 BL 0x3EB1AD0
	0x034A6BC4 MOV X20, X0
	0x034A6BC8 ADRP X0, 0xC4D000
	0x034A6BCC LDR X0, [X0 + 0x7D0]
	0x034A6BD0 BL 0x1C16D08
	0x034A6BD4 LDR X8, [X20]
	0x034A6BD8 LDR X1, [X8]
	0x034A6BDC BL 0x1C17270
	0x034A6BE0 TBZ X0, 0x0, 0x34A6C20
	0x034A6BE4 LDR X20, [X20]
	0x034A6BE8 BL 0x3EB1AE0
	0x034A6BEC MOVN W8, 0x1
	0x034A6BF0 STR W8, [X19], #0x8
	0x034A6BF4 ADRP X0, 0xC50000
	0x034A6BF8 LDR X0, [X0 + 0x280]
	0x034A6BFC BL 0x1C16D08
	0x034A6C00 LDR W8, [X0 + 0xE0]
	0x034A6C04 CBNZ W8, 0x34A6C0C
	0x034A6C08 BL 0x1C16DFC
	0x034A6C0C MOV X0, X19
	0x034A6C10 MOV X1, X20
	0x034A6C14 MOV X2, X31
	0x034A6C18 BL 0x32C4908
	0x034A6C1C B 0x34A6A38
	0x034A6C20 MOVZ W0, 0x8
	0x034A6C24 BL 0x3EB1AF0
	0x034A6C28 LDR X8, [X20]
	0x034A6C2C STR X8, [X0]
	0x034A6C30 ADRP X1, 0xA0E000
	0x034A6C34 ADD X1, X1, 0xE58
	0x034A6C38 MOV X2, X31
	0x034A6C3C BL 0x3EB1B00
	0x034A6C40 MOV X20, X0
	0x034A6C44 BL 0x3EB1AE0
	0x034A6C48 MOV X0, X20
	0x034A6C4C BL 0x1D2C690
	0x034A6C50 BL 0x1990590
	0x034A6C54 STR X30, [X31 - 0x30]!
	0x034A6C58 STP X22, X21, [X31 + 0x10]
	0x034A6C5C STP X20, X19, [X31 + 0x20]
	0x034A6C60 ADRP X21, 0xF37000
	0x034A6C64 ADRP X22, 0xC50000
	0x034A6C68 LDRB W8, [X21 + 0xA03]
	0x034A6C6C LDR X22, [X22 + 0x280]
	0x034A6C70 MOV X19, X1
	0x034A6C74 MOV X20, X0
	0x034A6C78 TBNZ X8, 0x0, 0x34A6C90
	0x034A6C7C ADRP X0, 0xC50000
	0x034A6C80 LDR X0, [X0 + 0x280]
	0x034A6C84 BL 0x1C16CF4
	0x034A6C88 MOVZ W8, 0x1
	0x034A6C8C STRB W8, [X21 + 0xA03]
	0x034A6C90 LDR X0, [X22]
	0x034A6C94 LDR W8, [X0 + 0xE0]
	0x034A6C98 CBNZ W8, 0x34A6CA0
	0x034A6C9C BL 0x1C16DFC
	0x034A6CA0 ADD X0, X20, 0x8
	0x034A6CA4 MOV X1, X19
	0x034A6CA8 LDP X20, X19, [X31 + 0x20]
	0x034A6CAC LDP X22, X21, [X31 + 0x10]
	0x034A6CB0 MOV X2, X31
	0x034A6CB4 LDR X30, [X31], #0x30
	0x034A6CB8 B 0x32C477C
	0x034A6CBC SUB X31, X31, 0x50
	0x034A6CC0 STP X30, X25, [X31 + 0x10]
	0x034A6CC4 STP X24, X23, [X31 + 0x20]
	0x034A6CC8 STP X22, X21, [X31 + 0x30]
	0x034A6CCC STP X20, X19, [X31 + 0x40]
	0x034A6CD0 ADRP X20, 0xF37000
	0x034A6CD4 LDRB W8, [X20 + 0xA04]
	0x034A6CD8 MOV X19, X0
	0x034A6CDC TBNZ X8, 0x0, 0x34A6D9C
	0x034A6CE0 ADRP X0, 0xC8B000
	0x034A6CE4 LDR X0, [X0 + 0xF90]
	0x034A6CE8 BL 0x1C16CF4
	0x034A6CEC ADRP X0, 0xC50000
	0x034A6CF0 LDR X0, [X0 + 0x280]
	0x034A6CF4 BL 0x1C16CF4
	0x034A6CF8 ADRP X0, 0xC4E000
	0x034A6CFC LDR X0, [X0 + 0x810]
	0x034A6D00 BL 0x1C16CF4
	0x034A6D04 ADRP X0, 0xC4E000
	0x034A6D08 LDR X0, [X0 + 0x6C0]
	0x034A6D0C BL 0x1C16CF4
	0x034A6D10 ADRP X0, 0xC4E000
	0x034A6D14 LDR X0, [X0 + 0x6D0]
	0x034A6D18 BL 0x1C16CF4
	0x034A6D1C ADRP X0, 0xC88000
	0x034A6D20 LDR X0, [X0 + 0x7B8]
	0x034A6D24 BL 0x1C16CF4
	0x034A6D28 ADRP X0, 0xC50000
	0x034A6D2C LDR X0, [X0 + 0x1E0]
	0x034A6D30 BL 0x1C16CF4
	0x034A6D34 ADRP X0, 0xC50000
	0x034A6D38 LDR X0, [X0 + 0x1F0]
	0x034A6D3C BL 0x1C16CF4
	0x034A6D40 ADRP X0, 0xC50000
	0x034A6D44 LDR X0, [X0 + 0x1F8]
	0x034A6D48 BL 0x1C16CF4
	0x034A6D4C ADRP X0, 0xC56000
	0x034A6D50 LDR X0, [X0 + 0x3A0]
	0x034A6D54 BL 0x1C16CF4
	0x034A6D58 ADRP X0, 0xC8B000
	0x034A6D5C LDR X0, [X0 + 0xF98]
	0x034A6D60 BL 0x1C16CF4
	0x034A6D64 ADRP X0, 0xC88000
	0x034A6D68 LDR X0, [X0 + 0x7D0]
	0x034A6D6C BL 0x1C16CF4
	0x034A6D70 ADRP X0, 0xC88000
	0x034A6D74 LDR X0, [X0 + 0x7D8]
	0x034A6D78 BL 0x1C16CF4
	0x034A6D7C ADRP X0, 0xC4D000
	0x034A6D80 LDR X0, [X0 + 0x988]
	0x034A6D84 BL 0x1C16CF4
	0x034A6D88 ADRP X0, 0xC76000
	0x034A6D8C LDR X0, [X0 + 0x4C8]
	0x034A6D90 BL 0x1C16CF4
	0x034A6D94 MOVZ W8, 0x1
	0x034A6D98 STRB W8, [X20 + 0xA04]
	0x034A6D9C STR X31, [X31 + 0x8]
	0x034A6DA0 ADRP X25, 0xC50000
	0x034A6DA4 LDR W8, [X19]
	0x034A6DA8 LDR X25, [X25 + 0x280]
	0x034A6DAC CBZ W8, 0x34A6EEC
	0x034A6DB0 LDR X24, [X19 + 0x20]
	0x034A6DB4 CBZ X24, 0x34A6FFC
	0x034A6DB8 ADRP X8, 0xC8B000
	0x034A6DBC ADRP X9, 0xC4D000
	0x034A6DC0 ADRP X10, 0xC56000
	0x034A6DC4 LDR X8, [X8 + 0xF98]
	0x034A6DC8 LDR X9, [X9 + 0x988]
	0x034A6DCC LDR X10, [X10 + 0x3A0]
	0x034A6DD0 LDR X23, [X24 + 0x10]
	0x034A6DD4 LDR X22, [X8]
	0x034A6DD8 LDR X21, [X9]
	0x034A6DDC LDR X0, [X10]
	0x034A6DE0 BL 0x1C16F10
	0x034A6DE4 MOV X20, X0
	0x034A6DE8 MOV X1, X23
	0x034A6DEC MOV X2, X31
	0x034A6DF0 BL 0x36281F8
	0x034A6DF4 CBZ X20, 0x34A7000
	0x034A6DF8 MOV X0, X20
	0x034A6DFC MOV X1, X22
	0x034A6E00 MOV X2, X31
	0x034A6E04 BL 0x36288CC
	0x034A6E08 MOV X0, X20
	0x034A6E0C MOV X1, X21
	0x034A6E10 MOV X2, X31
	0x034A6E14 BL 0x3628980
	0x034A6E18 MOV X0, X20
	0x034A6E1C MOV X1, X31
	0x034A6E20 BL 0x3628A38

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF38000
	011 Move W8, [X20+2558]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {64}
	017 Move X0, 0xC8C000
	018 Move X0, [X0+3872]
	019 Call 0x1C17CF4
	020 Move X0, 0xC51000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC4F000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC4F000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC4F000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC89000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC51000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC51000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC51000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC57000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC89000
	048 Move X0, [X0+2000]
	049 Call 0x1C17CF4
	050 Move X0, 0xC89000
	051 Move X0, [X0+2008]
	052 Call 0x1C17CF4
	053 Move X0, 0xC8C000
	054 Move X0, [X0+3880]
	055 Call 0x1C17CF4
	056 Move X0, 0xC4E000
	057 Move X0, [X0+2440]
	058 Call 0x1C17CF4
	059 Move X0, 0xC77000
	060 Move X0, [X0+1224]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+2558], W8
	064 Move [X31+8], X31
	065 Move X25, 0xC51000
	066 Move W8, [X19]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {151}
	070 Move X24, [X19+32]
	071 Compare X24, 0
	072 JumpIfEqual {232}
	073 Move X8, 0xC8C000
	074 Move X9, 0xC4E000
	075 Move X10, 0xC57000
	076 Move X8, [X8+3880]
	077 Move X9, [X9+2440]
	078 Move X10, [X10+928]
	079 Move X23, [X24+16]
	080 Move X22, [X8]
	081 Move X21, [X9]
	082 Move X0, [X10]
	083 Call 0x1C17F10
	084 Move X20, X0
	085 Move X1, X23
	086 Move X2, X31
	087 Call UriBuilder..ctor, X0, X1
	088 Compare X20, 0
	089 JumpIfEqual {233}
	090 Move X0, X20
	091 Move X1, X22
	092 Move X2, X31
	093 Call UriBuilder.set_Path, X0, X1
	094 Move X0, X20
	095 Move X1, X21
	096 Move X2, X31
	097 Call UriBuilder.set_Query, X0, X1
	098 Move X0, X20
	099 Move X1, X31
	100 Call UriBuilder.get_Uri, X0
	101 Move X8, 0xC77000
	102 Move X9, 0xC4F000
	103 Move X8, [X8+1224]
	104 Move X9, [X9+1744]
	105 Move X20, X0
	106 Move X21, [X8]
	107 Move X0, [X9]
	108 Call 0x1C17F10
	109 Move X8, 0xC4F000
	110 Move X8, [X8+1728]
	111 Move X22, X0
	112 Move X1, [X8]
	113 Call Dictionary`2<Object, Object>..ctor, X0
	114 Move X8, 0xC89000
	115 Move X8, [X8+2008]
	116 Move X1, [X19+40]
	117 Move X0, [X8]
	118 Move X2, X31
	119 Call String.Concat, X0, X1
	120 Compare X22, 0
	121 JumpIfEqual {234}
	122 Move X8, 0xC89000
	123 Move X8, [X8+2000]
	124 Move X9, 0xC4F000
	125 Move X9, [X9+2064]
	126 Move X2, X0
	127 Move X1, [X8]
	128 Move X3, [X9]
	129 Move X0, X22
	130 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	131 Move X23, [X24+32]
	132 Compare X23, 0
	133 JumpIfEqual {235}
	134 Move X10, 0xC89000
	135 Move X8, [X23]
	136 Move X10, [X10+1976]
	137 Move W24, [X24+24]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X1, [X10]
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move W2, 3
	149 Move X0, X23
	150 Call 0x1C5D788
	151 Move X8, [X19+48]
	152 Move TEMP, 0
	153 Not TEMP
	154 Move W9, TEMP
	155 Move [X31+8], X8
	156 Move [X19+48], X31
	157 Move [X19], W9
	158 Move W9, [X10]
	159 Add W9, W9, 3
	160 Add X8, X8, W9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X9, [X0+8]
	164 Move X0, X23
	165 Move X1, X21
	166 Move X2, X20
	167 Move X3, X22
	168 Move X4, X31
	169 Move W5, W24
	170 Move X6, X31
	171 Move X7, X31
	172 Move [X31], X9
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Compare X0, 0
	175 JumpIfEqual {236}
	176 Move X8, 0xC51000
	177 Move X8, [X8+504]
	178 Move X1, [X8]
	179 Call Task`1<Object>.GetAwaiter, X0
	180 Move X8, 0xC51000
	181 Move X8, [X8+496]
	182 Move [X31+8], X0
	183 Move X1, [X8]
	184 Add X0, X31, 8
	185 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {207}
	190 Move X8, 0xC51000
	191 Move X8, [X8+480]
	192 Add X0, X31, 8
	193 Move X1, [X8]
	194 Call TaskAwaiter`1<Object>.GetResult, X0
	195 Move TEMP, 1
	196 Not TEMP
	197 Move W8, TEMP
	198 Move [X19+8], W8
	199 Move X0, [X25]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X19
	205 Move X1, X31
	206 Call AsyncTaskMethodBuilder.SetResult, X0
	207 Move [X19], W31
	208 Move X8, [X31+8]
	209 Move [X19+48], X8
	210 Move X0, [X25]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move X8, 0xC8C000
	216 Move X8, [X8+3872]
	217 Add X0, X19, 8
	218 Move X3, [X8]
	219 Add X1, X31, 8
	220 Move X2, X19
	221 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	222 Move X20, [X31+64]
	223 Move X19, [X31+72]
	224 Move X22, [X31+48]
	225 Move X21, [X31+56]
	226 Move X24, [X31+32]
	227 Move X23, [X31+40]
	228 Move X30, [X31+16]
	229 Move X25, [X31+24]
	230 Add X31, X31, 80
	231 Return 
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Move X20, X0
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, X20
	240 Call 0x3EB2AD0
	241 Move X20, X0
	242 Move X0, 0xC4E000
	243 Move X0, [X0+2000]
	244 Call 0x1C17D08
	245 Move X8, [X20]
	246 Move X1, [X8]
	247 Call 0x1C18270
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {269}
	252 Move X20, [X20]
	253 Call 0x3EB2AE0
	254 Move TEMP, 1
	255 Not TEMP
	256 Move W8, TEMP
	257 Move [X19+8], W8
	258 Move X0, 0xC51000
	259 Move X0, [X0+640]
	260 Call 0x1C17D08
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Move X0, X19
	266 Move X1, X20
	267 Move X2, X31
	268 Call AsyncTaskMethodBuilder.SetException, X0, X1
	269 Move W0, 8
	270 Call 0x3EB2AF0
	271 Move X8, [X20]
	272 Move [X0], X8
	273 Move X1, 0xA0F000
	274 Add X1, X1, 3672
	275 Move X2, X31
	276 Call 0x3EB2B00
	277 Move X20, X0
	278 Call 0x3EB2AE0
	279 Move X0, X20
	280 Call 0x1D2D690
	281 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034A6E24 ADRP X8, 0xC76000
	0x034A6E28 ADRP X9, 0xC4E000
	0x034A6E2C LDR X8, [X8 + 0x4C8]
	0x034A6E30 LDR X9, [X9 + 0x6D0]
	0x034A6E34 MOV X20, X0
	0x034A6E38 LDR X21, [X8]
	0x034A6E3C LDR X0, [X9]
	0x034A6E40 BL 0x1C16F10
	0x034A6E44 ADRP X8, 0xC4E000
	0x034A6E48 LDR X8, [X8 + 0x6C0]
	0x034A6E4C MOV X22, X0
	0x034A6E50 LDR X1, [X8]
	0x034A6E54 BL 0x2AA4804
	0x034A6E58 ADRP X8, 0xC88000
	0x034A6E5C LDR X8, [X8 + 0x7D8]
	0x034A6E60 LDR X1, [X19 + 0x28]
	0x034A6E64 LDR X0, [X8]
	0x034A6E68 MOV X2, X31
	0x034A6E6C BL 0x321B938
	0x034A6E70 CBZ X22, 0x34A7004
	0x034A6E74 ADRP X8, 0xC88000
	0x034A6E78 LDR X8, [X8 + 0x7D0]
	0x034A6E7C ADRP X9, 0xC4E000
	0x034A6E80 LDR X9, [X9 + 0x810]
	0x034A6E84 MOV X2, X0
	0x034A6E88 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF38000
	007 Move X22, 0xC51000
	008 Move W8, [X21+2559]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC51000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2559], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

