Type: Nakama.Console.ApiClient/<UnlinkFacebookAsync>d__17

Method: System.Void MoveNext()

Disassembly:
	0x034AD67C LDR X30, [X31], #0x30
	0x034AD680 B 0x32C477C
	0x034AD684 SUB X31, X31, 0x50
	0x034AD688 STP X30, X25, [X31 + 0x10]
	0x034AD68C STP X24, X23, [X31 + 0x20]
	0x034AD690 STP X22, X21, [X31 + 0x30]
	0x034AD694 STP X20, X19, [X31 + 0x40]
	0x034AD698 ADRP X20, 0xF30000
	0x034AD69C LDRB W8, [X20 + 0xA2A]
	0x034AD6A0 MOV X19, X0
	0x034AD6A4 TBNZ X8, 0x0, 0x34AD77C
	0x034AD6A8 ADRP X0, 0xC85000
	0x034AD6AC LDR X0, [X0 + 0x278]
	0x034AD6B0 BL 0x1C16CF4
	0x034AD6B4 ADRP X0, 0xC49000
	0x034AD6B8 LDR X0, [X0 + 0x280]
	0x034AD6BC BL 0x1C16CF4
	0x034AD6C0 ADRP X0, 0xC47000
	0x034AD6C4 LDR X0, [X0 + 0x810]
	0x034AD6C8 BL 0x1C16CF4
	0x034AD6CC ADRP X0, 0xC47000
	0x034AD6D0 LDR X0, [X0 + 0x6C0]
	0x034AD6D4 BL 0x1C16CF4
	0x034AD6D8 ADRP X0, 0xC47000
	0x034AD6DC LDR X0, [X0 + 0x6D0]
	0x034AD6E0 BL 0x1C16CF4
	0x034AD6E4 ADRP X0, 0xC81000
	0x034AD6E8 LDR X0, [X0 + 0x7B8]
	0x034AD6EC BL 0x1C16CF4
	0x034AD6F0 ADRP X0, 0xC49000
	0x034AD6F4 LDR X0, [X0 + 0x1E0]
	0x034AD6F8 BL 0x1C16CF4
	0x034AD6FC ADRP X0, 0xC49000
	0x034AD700 LDR X0, [X0 + 0x1F0]
	0x034AD704 BL 0x1C16CF4
	0x034AD708 ADRP X0, 0xC49000
	0x034AD70C LDR X0, [X0 + 0x1F8]
	0x034AD710 BL 0x1C16CF4
	0x034AD714 ADRP X0, 0xC4F000
	0x034AD718 LDR X0, [X0 + 0x3A0]
	0x034AD71C BL 0x1C16CF4
	0x034AD720 ADRP X0, 0xC48000
	0x034AD724 LDR X0, [X0 + 0xA28]
	0x034AD728 BL 0x1C16CF4
	0x034AD72C ADRP X0, 0xC6F000
	0x034AD730 LDR X0, [X0 + 0x4D8]
	0x034AD734 BL 0x1C16CF4
	0x034AD738 ADRP X0, 0xC85000
	0x034AD73C LDR X0, [X0 + 0x280]
	0x034AD740 BL 0x1C16CF4
	0x034AD744 ADRP X0, 0xC81000
	0x034AD748 LDR X0, [X0 + 0x7D0]
	0x034AD74C BL 0x1C16CF4
	0x034AD750 ADRP X0, 0xC82000
	0x034AD754 LDR X0, [X0 + 0x2E8]
	0x034AD758 BL 0x1C16CF4
	0x034AD75C ADRP X0, 0xC81000
	0x034AD760 LDR X0, [X0 + 0x7D8]
	0x034AD764 BL 0x1C16CF4
	0x034AD768 ADRP X0, 0xC46000
	0x034AD76C LDR X0, [X0 + 0x988]
	0x034AD770 BL 0x1C16CF4
	0x034AD774 MOVZ W8, 0x1
	0x034AD778 STRB W8, [X20 + 0xA2A]
	0x034AD77C STR X31, [X31 + 0x8]
	0x034AD780 ADRP X25, 0xC49000
	0x034AD784 LDR W8, [X19]
	0x034AD788 LDR X25, [X25 + 0x280]
	0x034AD78C CBZ W8, 0x34AD91C
	0x034AD790 LDR X21, [X19 + 0x20]
	0x034AD794 CBZ X21, 0x34ADA2C
	0x034AD798 ADRP X8, 0xC48000
	0x034AD79C LDR X8, [X8 + 0xA28]
	0x034AD7A0 LDR X0, [X8]
	0x034AD7A4 ADRP X8, 0xC85000
	0x034AD7A8 LDR X8, [X8 + 0x280]
	0x034AD7AC LDR X24, [X19 + 0x28]
	0x034AD7B0 LDR W9, [X0 + 0xE0]
	0x034AD7B4 LDR X20, [X8]
	0x034AD7B8 CBNZ W9, 0x34AD7C0
	0x034AD7BC BL 0x1C16DFC
	0x034AD7C0 MOV X0, X21
	0x034AD7C4 MOV X1, X31
	0x034AD7C8 BL 0x3624D20
	0x034AD7CC CBZ X20, 0x34ADA74
	0x034AD7D0 ADRP X8, 0xC82000
	0x034AD7D4 LDR X8, [X8 + 0x2E8]
	0x034AD7D8 MOV X2, X0
	0x034AD7DC LDR X1, [X8]
	0x034AD7E0 MOV X0, X20
	0x034AD7E4 MOV X3, X31
	0x034AD7E8 BL 0x32293BC
	0x034AD7EC CBZ X24, 0x34ADA78
	0x034AD7F0 ADRP X8, 0xC46000
	0x034AD7F4 ADRP X9, 0xC4F000
	0x034AD7F8 LDR X8, [X8 + 0x988]
	0x034AD7FC LDR X9, [X9 + 0x3A0]
	0x034AD800 MOV X22, X0
	0x034AD804 LDR X23, [X24 + 0x10]
	0x034AD808 LDR X21, [X8]
	0x034AD80C LDR X0, [X9]
	0x034AD810 BL 0x1C16F10
	0x034AD814 MOV X20, X0
	0x034AD818 MOV X1, X23
	0x034AD81C MOV X2, X31
	0x034AD820 BL 0x36281F8
	0x034AD824 CBZ X20, 0x34ADA7C
	0x034AD828 MOV X0, X20
	0x034AD82C MOV X1, X22
	0x034AD830 MOV X2, X31
	0x034AD834 BL 0x36288CC
	0x034AD838 MOV X0, X20
	0x034AD83C MOV X1, X21
	0x034AD840 MOV X2, X31
	0x034AD844 BL 0x3628980
	0x034AD848 MOV X0, X20
	0x034AD84C MOV X1, X31
	0x034AD850 BL 0x3628A38
	0x034AD854 ADRP X8, 0xC6F000
	0x034AD858 ADRP X9, 0xC47000
	0x034AD85C LDR X8, [X8 + 0x4D8]
	0x034AD860 LDR X9, [X9 + 0x6D0]
	0x034AD864 MOV X20, X0
	0x034AD868 LDR X21, [X8]
	0x034AD86C LDR X0, [X9]
	0x034AD870 BL 0x1C16F10
	0x034AD874 ADRP X8, 0xC47000
	0x034AD878 LDR X8, [X8 + 0x6C0]
	0x034AD87C MOV X22, X0
	0x034AD880 LDR X1, [X8]
	0x034AD884 BL 0x2AA4804
	0x034AD888 ADRP X8, 0xC81000
	0x034AD88C LDR X8, [X8 + 0x7D8]
	0x034AD890 LDR X1, [X19 + 0x30]
	0x034AD894 LDR X0, [X8]
	0x034AD898 MOV X2, X31
	0x034AD89C BL 0x321B938
	0x034AD8A0 CBZ X22, 0x34ADA80
	0x034AD8A4 ADRP X8, 0xC81000
	0x034AD8A8 LDR X8, [X8 + 0x7D0]
	0x034AD8AC ADRP X9, 0xC47000
	0x034AD8B0 LDR X9, [X9 + 0x810]
	0x034AD8B4 MOV X2, X0
	0x034AD8B8 LDR X1, [X8]
	0x034AD8BC LDR X3, [X9]
	0x034AD8C0 MOV X0, X22
	0x034AD8C4 BL 0x2AA5098
	0x034AD8C8 LDR X23, [X24 + 0x20]
	0x034AD8CC CBZ X23, 0x34ADA84
	0x034AD8D0 ADRP X10, 0xC81000
	0x034AD8D4 LDR X8, [X23]
	0x034AD8D8 LDR X10, [X10 + 0x7B8]
	0x034AD8DC LDR W24, [X24 + 0x18]
	0x034AD8E0 LDRH W9, [X8 + 0x12E]
	0x034AD8E4 LDR X1, [X10]
	0x034AD8E8 CBZ X9, 0x34AD90C
	0x034AD8EC LDR X10, [X8 + 0xB0]
	0x034AD8F0 ADD X10, X10, 0x8
	0x034AD8F4 LDUR X11, [X10 - 0x8]
	0x034AD8F8 CMP X11, X1
	0x034AD8FC B.EQ 0x34AD934
	0x034AD900 SUBS X9, X9, 0x1
	0x034AD904 ADD X10, X10, 0x10
	0x034AD908 B.NE 0x34AD8F4
	0x034AD90C MOVZ W2, 0x3
	0x034AD910 MOV X0, X23
	0x034AD914 BL 0x1C5C788
	0x034AD918 B 0x34AD944
	0x034AD91C LDR X8, [X19 + 0x38]
	0x034AD920 MOVN W9, 0x0
	0x034AD924 STR X8, [X31 + 0x8]
	0x034AD928 STR X31, [X19 + 0x38]
	0x034AD92C STR W9, [X19]
	0x034AD930 B 0x34AD9A0
	0x034AD934 LDR W9, [X10]
	0x034AD938 ADD W9, W9, 0x3
	0x034AD93C ADD X8, X8, W9, 0x4, SXTW
	0x034AD940 ADD X0, X8, 0x138
	0x034AD944 LDP X8, X9, [X0]
	0x034AD948 MOV X0, X23
	0x034AD94C MOV X1, X21
	0x034AD950 MOV X2, X20
	0x034AD954 MOV X3, X22
	0x034AD958 MOV X4, X31
	0x034AD95C MOV W5, W24
	0x034AD960 MOV X6, X31
	0x034AD964 MOV X7, X31
	0x034AD968 STR X9, [X31]
	0x034AD96C BLR X8
	0x034AD970 CBZ X0, 0x34ADA88
	0x034AD974 ADRP X8, 0xC49000
	0x034AD978 LDR X8, [X8 + 0x1F8]
	0x034AD97C LDR X1, [X8]
	0x034AD980 BL 0x269F5D0
	0x034AD984 ADRP X8, 0xC49000
	0x034AD988 LDR X8, [X8 + 0x1F0]
	0x034AD98C STR X0, [X31 + 0x8]
	0x034AD990 LDR X1, [X8]
	0x034AD994 ADD X0, X31, 0x8
	0x034AD998 BL 0x2677430
	0x034AD99C TBZ X0, 0x0, 0x34AD9DC
	0x034AD9A0 ADRP X8, 0xC49000
	0x034AD9A4 LDR X8, [X8 + 0x1E0]
	0x034AD9A8 ADD X0, X31, 0x8
	0x034AD9AC LDR X1, [X8]
	0x034AD9B0 BL 0x2677474
	0x034AD9B4 MOVN W8, 0x1
	0x034AD9B8 STR W8, [X19], #0x8
	0x034AD9BC LDR X0, [X25]
	0x034AD9C0 LDR W8, [X0 + 0xE0]
	0x034AD9C4 CBNZ W8, 0x34AD9CC
	0x034AD9C8 BL 0x1C16DFC
	0x034AD9CC MOV X0, X19
	0x034AD9D0 MOV X1, X31
	0x034AD9D4 BL 0x32C4864
	0x034AD9D8 B 0x34ADA14
	0x034AD9DC STR W31, [X19]
	0x034AD9E0 LDR X8, [X31 + 0x8]
	0x034AD9E4 STR X8, [X19 + 0x38]
	0x034AD9E8 LDR X0, [X25]
	0x034AD9EC LDR W8, [X0 + 0xE0]
	0x034AD9F0 CBNZ W8, 0x34AD9F8
	0x034AD9F4 BL 0x1C16DFC
	0x034AD9F8 ADRP X8, 0xC85000
	0x034AD9FC LDR X8, [X8 + 0x278]
	0x034ADA00 ADD X0, X19, 0x8
	0x034ADA04 LDR X3, [X8]
	0x034ADA08 ADD X1, X31, 0x8
	0x034ADA0C MOV X2, X19
	0x034ADA10 BL 0x21879B8
	0x034ADA14 LDP X20, X19, [X31 + 0x40]
	0x034ADA18 LDP X22, X21, [X31 + 0x30]
	0x034ADA1C LDP X24, X23, [X31 + 0x20]
	0x034ADA20 LDP X30, X25, [X31 + 0x10]
	0x034ADA24 ADD X31, X31, 0x50
	0x034ADA28 RET
	0x034ADA2C ADRP X0, 0xC4E000
	0x034ADA30 LDR X0, [X0 + 0x578]
	0x034ADA34 BL 0x1C16D08
	0x034ADA38 BL 0x1C16F10
	0x034ADA3C MOV X20, X0
	0x034ADA40 ADRP X0, 0xC82000
	0x034ADA44 LDR X0, [X0 + 0x2F0]
	0x034ADA48 BL 0x1C16D08
	0x034ADA4C MOV X1, X0
	0x034ADA50 MOV X0, X20
	0x034ADA54 MOV X2, X31
	0x034ADA58 BL 0x3314A68
	0x034ADA5C ADRP X0, 0xC85000
	0x034ADA60 LDR X0, [X0 + 0x288]
	0x034ADA64 BL 0x1C16D08
	0x034ADA68 MOV X1, X0
	0x034ADA6C MOV X0, X20
	0x034ADA70 BL 0x1C16DEC
	0x034ADA74 BL 0x1C16F20
	0x034ADA78 BL 0x1C16F20
	0x034ADA7C BL 0x1C16F20
	0x034ADA80 BL 0x1C16F20
	0x034ADA84 BL 0x1C16F20
	0x034ADA88 BL 0x1C16F20
	0x034ADA8C B 0x34ADAD0
	0x034ADA90 B 0x34ADAD0
	0x034ADA94 B 0x34ADAD0
	0x034ADA98 B 0x34ADAD0
	0x034ADA9C B 0x34ADAD0
	0x034ADAA0 B 0x34ADAD0
	0x034ADAA4 B 0x34ADAD0
	0x034ADAA8 B 0x34ADAD0
	0x034ADAAC B 0x34ADAD0
	0x034ADAB0 B 0x34ADAD0
	0x034ADAB4 B 0x34ADAD0
	0x034ADAB8 B 0x34ADAD0
	0x034ADABC B 0x34ADAD0
	0x034ADAC0 B 0x34ADAD0
	0x034ADAC4 B 0x34ADAD0
	0x034ADAC8 B 0x34ADAD0
	0x034ADACC B 0x34ADAD0
	0x034ADAD0 MOV X20, X0
	0x034ADAD4 CMP W1, 0x1
	0x034ADAD8 B.NE 0x34ADB68
	0x034ADADC MOV X0, X20
	0x034ADAE0 BL 0x3EB1AD0
	0x034ADAE4 MOV X20, X0
	0x034ADAE8 ADRP X0, 0xC46000
	0x034ADAEC LDR X0, [X0 + 0x7D0]
	0x034ADAF0 BL 0x1C16D08
	0x034ADAF4 LDR X8, [X20]
	0x034ADAF8 LDR X1, [X8]
	0x034ADAFC BL 0x1C17270
	0x034ADB00 TBZ X0, 0x0, 0x34ADB40
	0x034ADB04 LDR X20, [X20]
	0x034ADB08 BL 0x3EB1AE0
	0x034ADB0C MOVN W8, 0x1
	0x034ADB10 STR W8, [X19], #0x8
	0x034ADB14 ADRP X0, 0xC49000
	0x034ADB18 LDR X0, [X0 + 0x280]
	0x034ADB1C BL 0x1C16D08
	0x034ADB20 LDR W8, [X0 + 0xE0]
	0x034ADB24 CBNZ W8, 0x34ADB2C
	0x034ADB28 BL 0x1C16DFC
	0x034ADB2C MOV X0, X19
	0x034ADB30 MOV X1, X20
	0x034ADB34 MOV X2, X31
	0x034ADB38 BL 0x32C4908
	0x034ADB3C B 0x34ADA14
	0x034ADB40 MOVZ W0, 0x8
	0x034ADB44 BL 0x3EB1AF0
	0x034ADB48 LDR X8, [X20]
	0x034ADB4C STR X8, [X0]
	0x034ADB50 ADRP X1, 0xA07000
	0x034ADB54 ADD X1, X1, 0xE58
	0x034ADB58 MOV X2, X31
	0x034ADB5C BL 0x3EB1B00
	0x034ADB60 MOV X20, X0
	0x034ADB64 BL 0x3EB1AE0
	0x034ADB68 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF31000
	011 Move W8, [X20+2596]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {70}
	017 Move X0, 0xC86000
	018 Move X0, [X0+560]
	019 Call 0x1C17CF4
	020 Move X0, 0xC4A000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move X0, 0xC48000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xC48000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC48000
	030 Move X0, [X0+1744]
	031 Call 0x1C17CF4
	032 Move X0, 0xC82000
	033 Move X0, [X0+1976]
	034 Call 0x1C17CF4
	035 Move X0, 0xC4A000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0xC4A000
	039 Move X0, [X0+496]
	040 Call 0x1C17CF4
	041 Move X0, 0xC4A000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0xC50000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xC49000
	048 Move X0, [X0+2600]
	049 Call 0x1C17CF4
	050 Move X0, 0xC70000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0xC86000
	054 Move X0, [X0+568]
	055 Call 0x1C17CF4
	056 Move X0, 0xC82000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xC83000
	060 Move X0, [X0+744]
	061 Call 0x1C17CF4
	062 Move X0, 0xC82000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xC47000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2596], W8
	070 Move [X31+8], X31
	071 Move X25, 0xC4A000
	072 Move W8, [X19]
	073 Move X25, [X25+640]
	074 Compare W8, 0
	075 JumpIfEqual {180}
	076 Move X21, [X19+32]
	077 Compare X21, 0
	078 JumpIfEqual {261}
	079 Move X8, 0xC49000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move X8, 0xC86000
	083 Move X8, [X8+568]
	084 Move X24, [X19+40]
	085 Move W9, [X0+224]
	086 Move X20, [X8]
	087 Compare W9, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X21
	091 Move X1, X31
	092 Call Uri.EscapeDataString, X0
	093 Compare X20, 0
	094 JumpIfEqual {279}
	095 Move X8, 0xC83000
	096 Move X8, [X8+744]
	097 Move X2, X0
	098 Move X1, [X8]
	099 Move X0, X20
	100 Move X3, X31
	101 Call String.Replace, X0, X1, X2
	102 Compare X24, 0
	103 JumpIfEqual {280}
	104 Move X8, 0xC47000
	105 Move X9, 0xC50000
	106 Move X8, [X8+2440]
	107 Move X9, [X9+928]
	108 Move X22, X0
	109 Move X23, [X24+16]
	110 Move X21, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X20, X0
	114 Move X1, X23
	115 Move X2, X31
	116 Call UriBuilder..ctor, X0, X1
	117 Compare X20, 0
	118 JumpIfEqual {281}
	119 Move X0, X20
	120 Move X1, X22
	121 Move X2, X31
	122 Call UriBuilder.set_Path, X0, X1
	123 Move X0, X20
	124 Move X1, X21
	125 Move X2, X31
	126 Call UriBuilder.set_Query, X0, X1
	127 Move X0, X20
	128 Move X1, X31
	129 Call UriBuilder.get_Uri, X0
	130 Move X8, 0xC70000
	131 Move X9, 0xC48000
	132 Move X8, [X8+1240]
	133 Move X9, [X9+1744]
	134 Move X20, X0
	135 Move X21, [X8]
	136 Move X0, [X9]
	137 Call 0x1C17F10
	138 Move X8, 0xC48000
	139 Move X8, [X8+1728]
	140 Move X22, X0
	141 Move X1, [X8]
	142 Call Dictionary`2<Object, Object>..ctor, X0
	143 Move X8, 0xC82000
	144 Move X8, [X8+2008]
	145 Move X1, [X19+48]
	146 Move X0, [X8]
	147 Move X2, X31
	148 Call String.Concat, X0, X1
	149 Compare X22, 0
	150 JumpIfEqual {282}
	151 Move X8, 0xC82000
	152 Move X8, [X8+2000]
	153 Move X9, 0xC48000
	154 Move X9, [X9+2064]
	155 Move X2, X0
	156 Move X1, [X8]
	157 Move X3, [X9]
	158 Move X0, X22
	159 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	160 Move X23, [X24+32]
	161 Compare X23, 0
	162 JumpIfEqual {283}
	163 Move X10, 0xC82000
	164 Move X8, [X23]
	165 Move X10, [X10+1976]
	166 Move W24, [X24+24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 3
	178 Move X0, X23
	179 Call 0x1C5D788
	180 Move X8, [X19+56]
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W9, TEMP
	184 Move [X31+8], X8
	185 Move [X19+56], X31
	186 Move [X19], W9
	187 Move W9, [X10]
	188 Add W9, W9, 3
	189 Add X8, X8, W9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X9, [X0+8]
	193 Move X0, X23
	194 Move X1, X21
	195 Move X2, X20
	196 Move X3, X22
	197 Move X4, X31
	198 Move W5, W24
	199 Move X6, X31
	200 Move X7, X31
	201 Move [X31], X9
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {284}
	205 Move X8, 0xC4A000
	206 Move X8, [X8+504]
	207 Move X1, [X8]
	208 Call Task`1<Object>.GetAwaiter, X0
	209 Move X8, 0xC4A000
	210 Move X8, [X8+496]
	211 Move [X31+8], X0
	212 Move X1, [X8]
	213 Add X0, X31, 8
	214 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {236}
	219 Move X8, 0xC4A000
	220 Move X8, [X8+480]
	221 Add X0, X31, 8
	222 Move X1, [X8]
	223 Call TaskAwaiter`1<Object>.GetResult, X0
	224 Move TEMP, 1
	225 Not TEMP
	226 Move W8, TEMP
	227 Move [X19+8], W8
	228 Move X0, [X25]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X19
	234 Move X1, X31
	235 Call AsyncTaskMethodBuilder.SetResult, X0
	236 Move [X19], W31
	237 Move X8, [X31+8]
	238 Move [X19+56], X8
	239 Move X0, [X25]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X8, 0xC86000
	245 Move X8, [X8+560]
	246 Add X0, X19, 8
	247 Move X3, [X8]
	248 Add X1, X31, 8
	249 Move X2, X19
	250 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	251 Move X20, [X31+64]
	252 Move X19, [X31+72]
	253 Move X22, [X31+48]
	254 Move X21, [X31+56]
	255 Move X24, [X31+32]
	256 Move X23, [X31+40]
	257 Move X30, [X31+16]
	258 Move X25, [X31+24]
	259 Add X31, X31, 80
	260 Return 
	261 Move X0, 0xC4F000
	262 Move X0, [X0+1400]
	263 Call 0x1C17D08
	264 Call 0x1C17F10
	265 Move X20, X0
	266 Move X0, 0xC83000
	267 Move X0, [X0+752]
	268 Call 0x1C17D08
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call ArgumentException..ctor, X0, X1
	273 Move X0, 0xC86000
	274 Move X0, [X0+576]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X20
	278 Call 0x1C17DEC
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X20, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X20
	288 Call 0x3EB2AD0
	289 Move X20, X0
	290 Move X0, 0xC47000
	291 Move X0, [X0+2000]
	292 Call 0x1C17D08
	293 Move X8, [X20]
	294 Move X1, [X8]
	295 Call 0x1C18270
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {317}
	300 Move X20, [X20]
	301 Call 0x3EB2AE0
	302 Move TEMP, 1
	303 Not TEMP
	304 Move W8, TEMP
	305 Move [X19+8], W8
	306 Move X0, 0xC4A000
	307 Move X0, [X0+640]
	308 Call 0x1C17D08
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X31
	316 Call AsyncTaskMethodBuilder.SetException, X0, X1
	317 Move W0, 8
	318 Call 0x3EB2AF0
	319 Move X8, [X20]
	320 Move [X0], X8
	321 Move X1, 0xA08000
	322 Add X1, X1, 3672
	323 Move X2, X31
	324 Call 0x3EB2B00
	325 Move X20, X0
	326 Call 0x3EB2AE0
	327 Move X0, X20
	328 Call 0x1D2D690
	329 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034ADB6C BL 0x1D2C690
	0x034ADB70 BL 0x1990590
	0x034ADB74 STR X30, [X31 - 0x30]!
	0x034ADB78 STP X22, X21, [X31 + 0x10]
	0x034ADB7C STP X20, X19, [X31 + 0x20]
	0x034ADB80 ADRP X21, 0xF30000
	0x034ADB84 ADRP X22, 0xC49000
	0x034ADB88 LDRB W8, [X21 + 0xA2B]
	0x034ADB8C LDR X22, [X22 + 0x280]
	0x034ADB90 MOV X19, X1
	0x034ADB94 MOV X20, X0
	0x034ADB98 TBNZ X8, 0x0, 0x34ADBB0
	0x034ADB9C ADRP X0, 0xC49000
	0x034ADBA0 LDR X0, [X0 + 0x280]
	0x034ADBA4 BL 0x1C16CF4
	0x034ADBA8 MOVZ W8, 0x1
	0x034ADBAC STRB W8, [X21 + 0xA2B]
	0x034ADBB0 LDR X0, [X22]
	0x034ADBB4 LDR W8, [X0 + 0xE0]
	0x034ADBB8 CBNZ W8, 0x34ADBC0
	0x034ADBBC BL 0x1C16DFC
	0x034ADBC0 ADD X0, X20, 0x8
	0x034ADBC4 MOV X1, X19
	0x034ADBC8 LDP X20, X19, [X31 + 0x20]
	0x034ADBCC LDP X22, X21, [X31 + 0x10]
	0x034ADBD0 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF31000
	007 Move X22, 0xC4A000
	008 Move W8, [X21+2597]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC4A000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2597], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

