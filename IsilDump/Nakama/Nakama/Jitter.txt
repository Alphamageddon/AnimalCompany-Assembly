Type: Nakama.Jitter

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x03478E2C MOVZ W8, 0x1
	0x03478E30 STRB W8, [X20 + 0x850]
	0x03478E34 LDR X0, [X21]
	0x03478E38 LDR W8, [X0 + 0xE0]
	0x03478E3C CBNZ W8, 0x3478E44
	0x03478E40 BL 0x1C16DFC
	0x03478E44 MOV X0, X31
	0x03478E48 BL 0x33616A4
	0x03478E4C MOV X1, X0
	0x03478E50 MOV X0, X19
	0x03478E54 LDP X20, X19, [X31 + 0x10]
	0x03478E58 LDP X30, X21, [X31], #0x20
	0x03478E5C B 0x3478E60
	0x03478E60 STR X30, [X31 - 0x30]!
	0x03478E64 STP X22, X21, [X31 + 0x10]
	0x03478E68 STP X20, X19, [X31 + 0x20]
	0x03478E6C ADRP X22, 0xF65000
	0x03478E70 ADRP X21, 0xCB7000
	0x03478E74 LDRB W8, [X22 + 0x852]
	0x03478E78 LDR X21, [X21 + 0xA70]
	0x03478E7C MOV X19, X1
	0x03478E80 MOV X20, X0
	0x03478E84 TBNZ X8, 0x0, 0x3478EB4
	0x03478E88 ADRP X0, 0xC7C000
	0x03478E8C LDR X0, [X0 + 0x9F0]
	0x03478E90 BL 0x1C16CF4
	0x03478E94 ADRP X0, 0xCB7000
	0x03478E98 LDR X0, [X0 + 0xA70]
	0x03478E9C BL 0x1C16CF4
	0x03478EA0 ADRP X0, 0xC7D000
	0x03478EA4 LDR X0, [X0 + 0x570]
	0x03478EA8 BL 0x1C16CF4
	0x03478EAC MOVZ W8, 0x1
	0x03478EB0 STRB W8, [X22 + 0x852]
	0x03478EB4 LDR X0, [X21]
	0x03478EB8 ADRP X22, 0xC7D000
	0x03478EBC LDR W8, [X0 + 0xE0]
	0x03478EC0 LDR X22, [X22 + 0x570]
	0x03478EC4 CBNZ W8, 0x3478ED0
	0x03478EC8 BL 0x1C16DFC
	0x03478ECC LDR X0, [X21]
	0x03478ED0 LDR X8, [X0 + 0xB8]
	0x03478ED4 LDR X0, [X22]
	0x03478ED8 LDR X22, [X20 + 0x30]
	0x03478EDC ADRP X20, 0xC7C000
	0x03478EE0 LDR X21, [X8]
	0x03478EE4 LDR W8, [X0 + 0xE0]
	0x03478EE8 LDR X20, [X20 + 0x9F0]
	0x03478EEC CBNZ W8, 0x3478EF4
	0x03478EF0 BL 0x1C16DFC
	0x03478EF4 SCVTF D0, X22
	0x03478EF8 MOV X0, X31
	0x03478EFC BL 0x3394754
	0x03478F00 LDR X8, [X20]
	0x03478F04 MOV X20, X0
	0x03478F08 LDR W9, [X8 + 0xE0]
	0x03478F0C CBNZ W9, 0x3478F18
	0x03478F10 MOV X0, X8
	0x03478F14 BL 0x1C16DFC
	0x03478F18 MOV X0, X21
	0x03478F1C MOV X1, X20
	0x03478F20 MOV X2, X31
	0x03478F24 BL 0x3362E18
	0x03478F28 MOV X1, X0
	0x03478F2C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+8]
	007 Move [X0+32], X1
	008 Move [X0+40], X2
	009 Move X19, X0
	010 Move X20, X2
	011 Move [X0+16], X8
	012 Move W22, [X2+82]
	013 Move [X0+64], X0
	014 Move X0, X2
	015 Move X21, X1
	016 Call 0x1C17D84
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, -25927680
	023 Add X8, X8, 3972
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+112]
	026 Compare W8, 0
	027 JumpIfEqual {49}
	028 Move X0, X20
	029 Call 0x1C17D7C
	030 Move W21, W0
	031 Move X0, X20
	032 Call 0x1C18238
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X8, -25923584
	042 Add X8, X8, 192
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X19+16]
	046 Move X9, [X19+32]
	047 Move [X19+24], X8
	048 Move [X19+64], X9
	049 Move X8, -25927680
	050 Add X8, X8, 3932
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move X8, -25927680
	056 Add X8, X8, 4048
	057 Move X8, -25923584
	058 Add X8, X8, 108
	059 Move X8, -25927680
	060 Add X8, X8, 3996
	061 Move [X19+24], X8
	062 Move X8, -25927680
	063 Add X8, X8, 3828
	064 Move [X19+56], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X1, -43368448
	072 Add X1, X1, 3811
	073 Move X0, X31
	074 Call 0x1C17F3C
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Int32 Invoke(System.Collections.Generic.IList`1<Nakama.Retry> retryHistory, System.Int32 retryDelay, System.Random random)

Disassembly:
	0x034799F4 LDRB W8, [X21 + 0x85B]
	0x034799F8 MOV X19, X1
	0x034799FC MOV X20, X0
	0x03479A00 TBNZ X8, 0x0, 0x3479A18
	0x03479A04 ADRP X0, 0xC7B000

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(System.Collections.Generic.IList`1<Nakama.Retry> retryHistory, System.Int32 retryDelay, System.Random random, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x03479A08 LDR X0, [X0 + 0xE70]
	0x03479A0C BL 0x1C16CF4
	0x03479A10 MOVZ W8, 0x1
	0x03479A14 STRB W8, [X21 + 0x85B]
	0x03479A18 ADRP X22, 0xC7B000
	0x03479A1C LDR X21, [X20 + 0x20]!
	0x03479A20 LDR X22, [X22 + 0xE70]
	0x03479A24 MOV X0, X21
	0x03479A28 MOV X1, X19
	0x03479A2C MOV X2, X31
	0x03479A30 BL 0x33C0DE4
	0x03479A34 MOV X8, X0
	0x03479A38 CBZ X0, 0x3479A4C
	0x03479A3C LDR X1, [X22]
	0x03479A40 LDR X9, [X8]
	0x03479A44 CMP X9, X1
	0x03479A48 B.NE 0x3479A78
	0x03479A4C MOV X0, X20
	0x03479A50 MOV X1, X8
	0x03479A54 MOV X2, X21
	0x03479A58 BL 0x1C24138
	0x03479A5C CMP X21, X0
	0x03479A60 MOV X21, X0
	0x03479A64 B.NE 0x3479A24
	0x03479A68 LDP X20, X19, [X31 + 0x20]
	0x03479A6C LDP X22, X21, [X31 + 0x10]
	0x03479A70 LDR X30, [X31], #0x30
	0x03479A74 RET
	0x03479A78 MOV X0, X8
	0x03479A7C BL 0x1C171E0
	0x03479A80 STR X30, [X31 - 0x30]!
	0x03479A84 STP X22, X21, [X31 + 0x10]
	0x03479A88 STP X20, X19, [X31 + 0x20]
	0x03479A8C ADRP X21, 0xF64000
	0x03479A90 LDRB W8, [X21 + 0x85C]
	0x03479A94 MOV X19, X1
	0x03479A98 MOV X20, X0
	0x03479A9C TBNZ X8, 0x0, 0x3479AB4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X25, 0xF65000
	011 Move [X31+44], W2
	012 Move X24, 0xC7B000
	013 Move W8, [X25+2124]
	014 Move X24, [X24+1880]
	015 Move X19, X5
	016 Move X20, X4
	017 Move X22, X3
	018 Move X23, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xC7B000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+2124], W8
	029 Move X0, [X24]
	030 Add X1, X31, 44
	031 Move [X31+24], X31
	032 Move [X31+32], X31
	033 Move [X31+8], X23
	034 Move [X31+16], X31
	035 Call 0x1C17E04
	036 Move [X31+16], X0
	037 Move [X31+24], X22
	038 Add X1, X31, 8
	039 Move X0, X21
	040 Move X2, X20
	041 Move X3, X19
	042 Call 0x1C17CB0
	043 Move X20, [X31+96]
	044 Move X19, [X31+104]
	045 Move X22, [X31+80]
	046 Move X21, [X31+88]
	047 Move X24, [X31+64]
	048 Move X23, [X31+72]
	049 Move X30, [X31+48]
	050 Move X25, [X31+56]
	051 Add X31, X31, 112
	052 Return X0

Method: System.Int32 EndInvoke(System.IAsyncResult result)

Disassembly:
	0x03479AA0 ADRP X0, 0xC7B000
	0x03479AA4 LDR X0, [X0 + 0xE70]
	0x03479AA8 BL 0x1C16CF4
	0x03479AAC MOVZ W8, 0x1
	0x03479AB0 STRB W8, [X21 + 0x85C]
	0x03479AB4 ADRP X22, 0xC7B000
	0x03479AB8 LDR X21, [X20 + 0x20]!
	0x03479ABC LDR X22, [X22 + 0xE70]
	0x03479AC0 MOV X0, X21
	0x03479AC4 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move W0, [X0]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

