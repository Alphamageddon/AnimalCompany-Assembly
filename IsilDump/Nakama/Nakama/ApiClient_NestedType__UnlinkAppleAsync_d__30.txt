Type: Nakama.ApiClient/<UnlinkAppleAsync>d__30

Method: System.Void MoveNext()

Disassembly:
	0x0343794C BL 0x1C16F28
	0x03437950 BL 0x1C16F20
	0x03437954 BL 0x1C16F20
	0x03437958 BL 0x1C16F20
	0x0343795C BL 0x1C16F20
	0x03437960 BL 0x1C16F20
	0x03437964 BL 0x1C16F20
	0x03437968 B 0x34379C8
	0x0343796C B 0x34379C8
	0x03437970 B 0x34379C8
	0x03437974 B 0x34379C8
	0x03437978 B 0x34379C8
	0x0343797C B 0x34379C8
	0x03437980 B 0x34379C8
	0x03437984 B 0x34379C8
	0x03437988 B 0x34379C8
	0x0343798C B 0x34379C8
	0x03437990 B 0x34379C8
	0x03437994 B 0x34379C8
	0x03437998 B 0x34379C8
	0x0343799C B 0x34379C8
	0x034379A0 B 0x34379C8
	0x034379A4 B 0x34379C8
	0x034379A8 B 0x34379C8
	0x034379AC B 0x34379C8
	0x034379B0 B 0x34379C8
	0x034379B4 B 0x34379C8
	0x034379B8 B 0x34379C8
	0x034379BC B 0x34379C8
	0x034379C0 B 0x34379C8
	0x034379C4 B 0x34379C8
	0x034379C8 MOV X20, X0
	0x034379CC CMP W1, 0x1
	0x034379D0 B.NE 0x3437A60
	0x034379D4 MOV X0, X20
	0x034379D8 BL 0x3EB1AD0
	0x034379DC MOV X20, X0
	0x034379E0 ADRP X0, 0xCBC000
	0x034379E4 LDR X0, [X0 + 0x7D0]
	0x034379E8 BL 0x1C16D08
	0x034379EC LDR X8, [X20]
	0x034379F0 LDR X1, [X8]
	0x034379F4 BL 0x1C17270
	0x034379F8 TBZ X0, 0x0, 0x3437A38
	0x034379FC LDR X20, [X20]
	0x03437A00 BL 0x3EB1AE0
	0x03437A04 MOVN W8, 0x1
	0x03437A08 STR W8, [X19], #0x8
	0x03437A0C ADRP X0, 0xCBF000
	0x03437A10 LDR X0, [X0 + 0x280]
	0x03437A14 BL 0x1C16D08
	0x03437A18 LDR W8, [X0 + 0xE0]
	0x03437A1C CBNZ W8, 0x3437A24
	0x03437A20 BL 0x1C16DFC
	0x03437A24 MOV X0, X19
	0x03437A28 MOV X1, X20
	0x03437A2C MOV X2, X31
	0x03437A30 BL 0x32C4908
	0x03437A34 B 0x34378D8
	0x03437A38 MOVZ W0, 0x8
	0x03437A3C BL 0x3EB1AF0
	0x03437A40 LDR X8, [X20]
	0x03437A44 STR X8, [X0]
	0x03437A48 ADRP X1, 0xA7D000
	0x03437A4C ADD X1, X1, 0xE58
	0x03437A50 MOV X2, X31
	0x03437A54 BL 0x3EB1B00
	0x03437A58 MOV X20, X0
	0x03437A5C BL 0x3EB1AE0
	0x03437A60 MOV X0, X20
	0x03437A64 BL 0x1D2C690
	0x03437A68 BL 0x1990590
	0x03437A6C STR X30, [X31 - 0x30]!
	0x03437A70 STP X22, X21, [X31 + 0x10]
	0x03437A74 STP X20, X19, [X31 + 0x20]
	0x03437A78 ADRP X21, 0xFA6000
	0x03437A7C ADRP X22, 0xCBF000
	0x03437A80 LDRB W8, [X21 + 0x67A]
	0x03437A84 LDR X22, [X22 + 0x280]
	0x03437A88 MOV X19, X1
	0x03437A8C MOV X20, X0
	0x03437A90 TBNZ X8, 0x0, 0x3437AA8
	0x03437A94 ADRP X0, 0xCBF000
	0x03437A98 LDR X0, [X0 + 0x280]
	0x03437A9C BL 0x1C16CF4
	0x03437AA0 MOVZ W8, 0x1
	0x03437AA4 STRB W8, [X21 + 0x67A]
	0x03437AA8 LDR X0, [X22]
	0x03437AAC LDR W8, [X0 + 0xE0]
	0x03437AB0 CBNZ W8, 0x3437AB8
	0x03437AB4 BL 0x1C16DFC
	0x03437AB8 ADD X0, X20, 0x8
	0x03437ABC MOV X1, X19
	0x03437AC0 LDP X20, X19, [X31 + 0x20]
	0x03437AC4 LDP X22, X21, [X31 + 0x10]
	0x03437AC8 MOV X2, X31
	0x03437ACC LDR X30, [X31], #0x30
	0x03437AD0 B 0x32C477C
	0x03437AD4 SUB X31, X31, 0x70
	0x03437AD8 STR X30, [X31 + 0x10]
	0x03437ADC STP X28, X27, [X31 + 0x20]
	0x03437AE0 STP X26, X25, [X31 + 0x30]
	0x03437AE4 STP X24, X23, [X31 + 0x40]
	0x03437AE8 STP X22, X21, [X31 + 0x50]
	0x03437AEC STP X20, X19, [X31 + 0x60]
	0x03437AF0 ADRP X20, 0xFA6000
	0x03437AF4 LDRB W8, [X20 + 0x67B]
	0x03437AF8 MOV X19, X0
	0x03437AFC TBNZ X8, 0x0, 0x3437BC8
	0x03437B00 ADRP X0, 0xCF8000
	0x03437B04 LDR X0, [X0 + 0x3A0]
	0x03437B08 BL 0x1C16CF4
	0x03437B0C ADRP X0, 0xCBF000
	0x03437B10 LDR X0, [X0 + 0x280]
	0x03437B14 BL 0x1C16CF4
	0x03437B18 ADRP X0, 0xCC5000
	0x03437B1C LDR X0, [X0 + 0x8D8]
	0x03437B20 BL 0x1C16CF4
	0x03437B24 ADRP X0, 0xCBD000
	0x03437B28 LDR X0, [X0 + 0x810]
	0x03437B2C BL 0x1C16CF4
	0x03437B30 ADRP X0, 0xCBD000
	0x03437B34 LDR X0, [X0 + 0x6C0]
	0x03437B38 BL 0x1C16CF4
	0x03437B3C ADRP X0, 0xCBD000
	0x03437B40 LDR X0, [X0 + 0x6D0]
	0x03437B44 BL 0x1C16CF4
	0x03437B48 ADRP X0, 0xCF7000
	0x03437B4C LDR X0, [X0 + 0x7B8]
	0x03437B50 BL 0x1C16CF4
	0x03437B54 ADRP X0, 0xCBF000
	0x03437B58 LDR X0, [X0 + 0x1E0]
	0x03437B5C BL 0x1C16CF4
	0x03437B60 ADRP X0, 0xCBF000
	0x03437B64 LDR X0, [X0 + 0x1F0]
	0x03437B68 BL 0x1C16CF4
	0x03437B6C ADRP X0, 0xCBF000
	0x03437B70 LDR X0, [X0 + 0x1F8]
	0x03437B74 BL 0x1C16CF4
	0x03437B78 ADRP X0, 0xCC5000
	0x03437B7C LDR X0, [X0 + 0x3A0]
	0x03437B80 BL 0x1C16CF4
	0x03437B84 ADRP X0, 0xCE5000
	0x03437B88 LDR X0, [X0 + 0x4D8]
	0x03437B8C BL 0x1C16CF4
	0x03437B90 ADRP X0, 0xCF8000
	0x03437B94 LDR X0, [X0 + 0x3A8]
	0x03437B98 BL 0x1C16CF4
	0x03437B9C ADRP X0, 0xCF7000
	0x03437BA0 LDR X0, [X0 + 0x7D0]
	0x03437BA4 BL 0x1C16CF4
	0x03437BA8 ADRP X0, 0xCF7000
	0x03437BAC LDR X0, [X0 + 0x7D8]
	0x03437BB0 BL 0x1C16CF4
	0x03437BB4 ADRP X0, 0xCBC000
	0x03437BB8 LDR X0, [X0 + 0x988]
	0x03437BBC BL 0x1C16CF4
	0x03437BC0 MOVZ W8, 0x1
	0x03437BC4 STRB W8, [X20 + 0x67B]
	0x03437BC8 STR X31, [X31 + 0x18]
	0x03437BCC ADRP X28, 0xCBF000
	0x03437BD0 LDR W8, [X19]
	0x03437BD4 LDR X28, [X28 + 0x280]
	0x03437BD8 CBZ W8, 0x3437DB8
	0x03437BDC LDR X8, [X19 + 0x20]
	0x03437BE0 CBZ X8, 0x3437ED0
	0x03437BE4 LDR X25, [X19 + 0x28]
	0x03437BE8 CBZ X25, 0x3437F18
	0x03437BEC LDR X0, [X25 + 0x20]
	0x03437BF0 CBZ X0, 0x3437F1C
	0x03437BF4 ADRP X8, 0xCF8000
	0x03437BF8 ADRP X9, 0xCBC000
	0x03437BFC LDR X8, [X8 + 0x3A8]
	0x03437C00 LDR X9, [X9 + 0x988]
	0x03437C04 LDR X21, [X8]
	0x03437C08 LDR X20, [X9]
	0x03437C0C MOV X1, X31
	0x03437C10 BL 0x361B448
	0x03437C14 ADRP X8, 0xCC5000
	0x03437C18 LDR X8, [X8 + 0x8D8]
	0x03437C1C MOV X22, X0
	0x03437C20 LDR X0, [X8]
	0x03437C24 MOVZ W1, 0x1
	0x03437C28 BL 0x1C16D6C
	0x03437C2C MOV X1, X0
	0x03437C30 CBZ X1, 0x3437F20
	0x03437C34 LDR W8, [X1 + 0x18]
	0x03437C38 CBZ W8, 0x3437F24
	0x03437C3C MOVZ W8, 0x2F
	0x03437C40 STRH W8, [X1 + 0x20]
	0x03437C44 CBZ X22, 0x3437F28
	0x03437C48 MOV X0, X22
	0x03437C4C MOV X2, X31
	0x03437C50 BL 0x322BC58
	0x03437C54 MOV X1, X21
	0x03437C58 MOV X2, X31
	0x03437C5C BL 0x321B938
	0x03437C60 ADRP X8, 0xCC5000
	0x03437C64 LDR X8, [X8 + 0x3A0]
	0x03437C68 MOV X22, X0
	0x03437C6C LDR X23, [X25 + 0x20]
	0x03437C70 LDR X0, [X8]
	0x03437C74 BL 0x1C16F10
	0x03437C78 MOV X21, X0
	0x03437C7C MOV X1, X23
	0x03437C80 MOV X2, X31
	0x03437C84 BL 0x36281F8
	0x03437C88 CBZ X21, 0x3437F2C
	0x03437C8C MOV X0, X21
	0x03437C90 MOV X1, X22
	0x03437C94 MOV X2, X31
	0x03437C98 BL 0x36288CC
	0x03437C9C MOV X0, X21
	0x03437CA0 MOV X1, X20
	0x03437CA4 MOV X2, X31
	0x03437CA8 BL 0x3628980
	0x03437CAC MOV X0, X21
	0x03437CB0 MOV X1, X31
	0x03437CB4 BL 0x3628A38
	0x03437CB8 ADRP X8, 0xCE5000
	0x03437CBC ADRP X9, 0xCBD000
	0x03437CC0 LDR X8, [X8 + 0x4D8]
	0x03437CC4 LDR X9, [X9 + 0x6D0]
	0x03437CC8 MOV X20, X0
	0x03437CCC LDR X21, [X8]
	0x03437CD0 LDR X0, [X9]
	0x03437CD4 BL 0x1C16F10
	0x03437CD8 ADRP X8, 0xCBD000
	0x03437CDC LDR X8, [X8 + 0x6C0]
	0x03437CE0 MOV X22, X0
	0x03437CE4 LDR X1, [X8]
	0x03437CE8 BL 0x2AA4804
	0x03437CEC ADRP X8, 0xCF7000
	0x03437CF0 LDR X8, [X8 + 0x7D8]
	0x03437CF4 LDR X1, [X19 + 0x30]
	0x03437CF8 LDR X0, [X8]
	0x03437CFC MOV X2, X31
	0x03437D00 BL 0x321B938
	0x03437D04 CBZ X22, 0x3437F30
	0x03437D08 ADRP X8, 0xCF7000
	0x03437D0C LDR X8, [X8 + 0x7D0]
	0x03437D10 ADRP X9, 0xCBD000
	0x03437D14 LDR X9, [X9 + 0x810]
	0x03437D18 MOV X2, X0
	0x03437D1C LDR X1, [X8]
	0x03437D20 LDR X3, [X9]
	0x03437D24 MOV X0, X22
	0x03437D28 BL 0x2AA5098
	0x03437D2C LDR X0, [X19 + 0x20]
	0x03437D30 MOV X1, X31
	0x03437D34 BL 0x3483BE4
	0x03437D38 MOV X23, X0
	0x03437D3C MOV X0, X31
	0x03437D40 BL 0x3241948
	0x03437D44 CBZ X0, 0x3437F34
	0x03437D48 LDR X8, [X0]
	0x03437D4C LDR X9, [X8 + 0x268]
	0x03437D50 LDR X2, [X8 + 0x270]
	0x03437D54 MOV X1, X23
	0x03437D58 BLR X9
	0x03437D5C LDR X24, [X25 + 0x10]
	0x03437D60 CBZ X24, 0x3437F38
	0x03437D64 ADRP X10, 0xCF7000
	0x03437D68 LDR X10, [X10 + 0x7B8]
	0x03437D6C LDR X8, [X24]
	0x03437D70 LDR W26, [X25 + 0x18]
	0x03437D74 LDP X27, X25, [X19 + 0x38]
	0x03437D78 LDR X1, [X10]
	0x03437D7C LDRH W9, [X8 + 0x12E]
	0x03437D80 MOV X23, X0
	0x03437D84 CBZ X9, 0x3437DA8
	0x03437D88 LDR X10, [X8 + 0xB0]
	0x03437D8C ADD X10, X10, 0x8
	0x03437D90 LDUR X11, [X10 - 0x8]
	0x03437D94 CMP X11, X1
	0x03437D98 B.EQ 0x3437DD0
	0x03437D9C SUBS X9, X9, 0x1
	0x03437DA0 ADD X10, X10, 0x10
	0x03437DA4 B.NE 0x3437D90
	0x03437DA8 MOVZ W2, 0x3
	0x03437DAC MOV X0, X24
	0x03437DB0 BL 0x1C5C788
	0x03437DB4 B 0x3437DE0
	0x03437DB8 LDR X8, [X19 + 0x48]
	0x03437DBC MOVN W9, 0x0
	0x03437DC0 STR X8, [X31 + 0x18]
	0x03437DC4 STR X31, [X19 + 0x48]
	0x03437DC8 STR W9, [X19]
	0x03437DCC B 0x3437E3C
	0x03437DD0 LDR W9, [X10]
	0x03437DD4 ADD W9, W9, 0x3
	0x03437DD8 ADD X8, X8, W9, 0x4, SXTW
	0x03437DDC ADD X0, X8, 0x138
	0x03437DE0 LDP X8, X9, [X0]
	0x03437DE4 MOV X0, X24
	0x03437DE8 MOV X1, X21
	0x03437DEC MOV X2, X20
	0x03437DF0 MOV X3, X22
	0x03437DF4 MOV X4, X23
	0x03437DF8 MOV W5, W26
	0x03437DFC MOV X6, X27
	0x03437E00 MOV X7, X25
	0x03437E04 STR X9, [X31]
	0x03437E08 BLR X8
	0x03437E0C CBZ X0, 0x3437F3C
	0x03437E10 ADRP X8, 0xCBF000
	0x03437E14 LDR X8, [X8 + 0x1F8]
	0x03437E18 LDR X1, [X8]
	0x03437E1C BL 0x269F5D0
	0x03437E20 ADRP X8, 0xCBF000
	0x03437E24 LDR X8, [X8 + 0x1F0]
	0x03437E28 STR X0, [X31 + 0x18]
	0x03437E2C LDR X1, [X8]
	0x03437E30 ADD X0, X31, 0x18
	0x03437E34 BL 0x2677430
	0x03437E38 TBZ X0, 0x0, 0x3437E78
	0x03437E3C ADRP X8, 0xCBF000
	0x03437E40 LDR X8, [X8 + 0x1E0]
	0x03437E44 ADD X0, X31, 0x18
	0x03437E48 LDR X1, [X8]
	0x03437E4C BL 0x2677474
	0x03437E50 MOVN W8, 0x1
	0x03437E54 STR W8, [X19], #0x8
	0x03437E58 LDR X0, [X28]
	0x03437E5C LDR W8, [X0 + 0xE0]
	0x03437E60 CBNZ W8, 0x3437E68
	0x03437E64 BL 0x1C16DFC
	0x03437E68 MOV X0, X19
	0x03437E6C MOV X1, X31
	0x03437E70 BL 0x32C4864
	0x03437E74 B 0x3437EB0
	0x03437E78 STR W31, [X19]
	0x03437E7C LDR X8, [X31 + 0x18]
	0x03437E80 STR X8, [X19 + 0x48]
	0x03437E84 LDR X0, [X28]
	0x03437E88 LDR W8, [X0 + 0xE0]
	0x03437E8C CBNZ W8, 0x3437E94
	0x03437E90 BL 0x1C16DFC
	0x03437E94 ADRP X8, 0xCF8000
	0x03437E98 LDR X8, [X8 + 0x3A0]
	0x03437E9C ADD X0, X19, 0x8
	0x03437EA0 LDR X3, [X8]
	0x03437EA4 ADD X1, X31, 0x18
	0x03437EA8 MOV X2, X19
	0x03437EAC BL 0x2186E18
	0x03437EB0 LDP X20, X19, [X31 + 0x60]
	0x03437EB4 LDP X22, X21, [X31 + 0x50]
	0x03437EB8 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA7000
	014 Move W8, [X20+1653]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF9000
	021 Move X0, [X0+856]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC0000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC6000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBE000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBE000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBE000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF8000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC0000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC0000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC0000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC6000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE6000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xCF9000
	057 Move X0, [X0+864]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF8000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF8000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBD000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1653], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCC0000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF9000
	086 Move X9, 0xCBD000
	087 Move X8, [X8+864]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC6000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC6000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE6000
	139 Move X9, 0xCBE000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBE000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF8000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF8000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBE000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF8000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCC0000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCC0000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCC0000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF9000
	269 Move X8, [X8+856]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC5000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF8000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF9000
	301 Move X0, [X0+872]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBD000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCC0000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7E000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03437EBC LDP X26, X25, [X31 + 0x30]
	0x03437EC0 LDP X28, X27, [X31 + 0x20]
	0x03437EC4 LDR X30, [X31 + 0x10]
	0x03437EC8 ADD X31, X31, 0x70
	0x03437ECC RET
	0x03437ED0 ADRP X0, 0xCC4000
	0x03437ED4 LDR X0, [X0 + 0x578]
	0x03437ED8 BL 0x1C16D08
	0x03437EDC BL 0x1C16F10
	0x03437EE0 MOV X20, X0
	0x03437EE4 ADRP X0, 0xCF7000
	0x03437EE8 LDR X0, [X0 + 0xBC8]
	0x03437EEC BL 0x1C16D08
	0x03437EF0 MOV X1, X0
	0x03437EF4 MOV X0, X20
	0x03437EF8 MOV X2, X31
	0x03437EFC BL 0x3314A68
	0x03437F00 ADRP X0, 0xCF8000
	0x03437F04 LDR X0, [X0 + 0x3B0]
	0x03437F08 BL 0x1C16D08
	0x03437F0C MOV X1, X0
	0x03437F10 MOV X0, X20
	0x03437F14 BL 0x1C16DEC
	0x03437F18 BL 0x1C16F20
	0x03437F1C BL 0x1C16F20
	0x03437F20 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA7000
	007 Move X22, 0xCC0000
	008 Move W8, [X21+1654]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCC0000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1654], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

