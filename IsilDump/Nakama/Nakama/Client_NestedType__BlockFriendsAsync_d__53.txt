Type: Nakama.Client/<BlockFriendsAsync>d__53

Method: System.Void MoveNext()

Disassembly:
	0x0345105C BL 0x335FC68
	0x03451060 CBZ X21, 0x34512D4
	0x03451064 LDR X8, [X21]
	0x03451068 LDR X1, [X23]
	0x0345106C MOV X22, X0
	0x03451070 LDRH W9, [X8 + 0x12E]
	0x03451074 CBZ X9, 0x3451098
	0x03451078 LDR X10, [X8 + 0xB0]
	0x0345107C ADD X10, X10, 0x8
	0x03451080 LDUR X11, [X10 - 0x8]
	0x03451084 CMP X11, X1
	0x03451088 B.EQ 0x34510A8
	0x0345108C SUBS X9, X9, 0x1
	0x03451090 ADD X10, X10, 0x10
	0x03451094 B.NE 0x3451080
	0x03451098 MOVZ W2, 0xB
	0x0345109C MOV X0, X21
	0x034510A0 BL 0x1C5C788
	0x034510A4 B 0x34510B8
	0x034510A8 LDR W9, [X10]
	0x034510AC ADD W9, W9, 0xB
	0x034510B0 ADD X8, X8, W9, 0x4, SXTW
	0x034510B4 ADD X0, X8, 0x138
	0x034510B8 LDP X8, X2, [X0]
	0x034510BC MOV X0, X21
	0x034510C0 MOV X1, X22
	0x034510C4 BLR X8
	0x034510C8 TBZ X0, 0x0, 0x3451158
	0x034510CC LDR X8, [X19 + 0x40]
	0x034510D0 CBZ X8, 0x34512D8
	0x034510D4 LDP X1, X4, [X8 + 0x18]
	0x034510D8 LDR X3, [X19 + 0x38]
	0x034510DC MOV X0, X20
	0x034510E0 MOV X2, X31
	0x034510E4 MOV X5, X31
	0x034510E8 BL 0x34440A8
	0x034510EC CBZ X0, 0x34512DC
	0x034510F0 ADRP X8, 0xCA3000
	0x034510F4 LDR X8, [X8 + 0x840]
	0x034510F8 LDR X1, [X8]
	0x034510FC BL 0x269F5D0
	0x03451100 ADRP X8, 0xCA3000
	0x03451104 LDR X8, [X8 + 0x838]
	0x03451108 STR X0, [X31 + 0x20]
	0x0345110C LDR X1, [X8]
	0x03451110 ADD X0, X31, 0x20
	0x03451114 BL 0x2677430
	0x03451118 TBNZ X0, 0x0, 0x3450F1C
	0x0345111C STR W31, [X19]
	0x03451120 LDR X8, [X31 + 0x20]
	0x03451124 STR X8, [X19 + 0x48]
	0x03451128 LDR X0, [X25]
	0x0345112C LDR W8, [X0 + 0xE0]
	0x03451130 CBNZ W8, 0x3451138
	0x03451134 BL 0x1C16DFC
	0x03451138 ADRP X8, 0xCDE000
	0x0345113C LDR X8, [X8 + 0xBE0]
	0x03451140 ADD X0, X19, 0x8
	0x03451144 LDR X3, [X8]
	0x03451148 ADD X1, X31, 0x20
	0x0345114C MOV X2, X19
	0x03451150 BL 0x21880FC
	0x03451154 B 0x3451298
	0x03451158 CBZ X20, 0x34512BC
	0x0345115C ADRP X8, 0xCAA000
	0x03451160 LDR X8, [X8 + 0x818]
	0x03451164 LDR X21, [X20 + 0x58]
	0x03451168 LDR X23, [X19 + 0x40]
	0x0345116C LDR X0, [X8]
	0x03451170 BL 0x1C16F10
	0x03451174 ADRP X8, 0xCDE000
	0x03451178 LDR X8, [X8 + 0xBF0]
	0x0345117C MOV X22, X0
	0x03451180 LDR X2, [X8]
	0x03451184 MOV X1, X23
	0x03451188 MOV X3, X31
	0x0345118C BL 0x2D27AA8
	0x03451190 LDR X8, [X19 + 0x40]
	0x03451194 CBZ X8, 0x34512B0
	0x03451198 ADRP X9, 0xCDE000
	0x0345119C LDR X23, [X19 + 0x38]
	0x034511A0 LDR X9, [X9 + 0x7C8]
	0x034511A4 CBNZ X23, 0x34511AC
	0x034511A8 LDR X23, [X20 + 0x18]
	0x034511AC LDP X20, X1, [X8 + 0x18]
	0x034511B0 LDR X2, [X9]
	0x034511B4 STP X31, X31, [X31 + 0x8]
	0x034511B8 ADD X0, X31, 0x8
	0x034511BC BL 0x242E368
	0x034511C0 ADRP X8, 0xCDE000
	0x034511C4 LDR X8, [X8 + 0x7D0]
	0x034511C8 LDR X0, [X8]
	0x034511CC BL 0x1C16F10
	0x034511D0 LDP X3, X4, [X31 + 0x8]
	0x034511D4 MOV X24, X0
	0x034511D8 MOV X1, X20
	0x034511DC MOV X2, X23
	0x034511E0 MOV X5, X31
	0x034511E4 BL 0x3465404
	0x034511E8 CBZ X21, 0x34512B4
	0x034511EC MOV X0, X21
	0x034511F0 MOV X1, X22
	0x034511F4 MOV X2, X24
	0x034511F8 MOV X3, X31
	0x034511FC BL 0x3465B68
	0x03451200 CBZ X0, 0x34512B8
	0x03451204 MOV X1, X31
	0x03451208 BL 0x33ED394
	0x0345120C STR X0, [X31 + 0x18]
	0x03451210 ADD X0, X31, 0x18
	0x03451214 MOV X1, X31
	0x03451218 BL 0x32C3A80
	0x0345121C TBZ X0, 0x0, 0x345125C
	0x03451220 ADD X0, X31, 0x18
	0x03451224 MOV X1, X31
	0x03451228 BL 0x32C3B4C
	0x0345122C MOVN W8, 0x1
	0x03451230 STR W8, [X19]
	0x03451234 STR X31, [X19 + 0x40]
	0x03451238 LDR X0, [X25]
	0x0345123C ADD X19, X19, 0x8
	0x03451240 LDR W8, [X0 + 0xE0]
	0x03451244 CBNZ W8, 0x345124C
	0x03451248 BL 0x1C16DFC
	0x0345124C MOV X0, X19
	0x03451250 MOV X1, X31
	0x03451254 BL 0x32C4864
	0x03451258 B 0x3451298
	0x0345125C MOVZ W8, 0x1
	0x03451260 STR W8, [X19]
	0x03451264 LDR X8, [X31 + 0x18]
	0x03451268 STR X8, [X19 + 0x50]
	0x0345126C LDR X0, [X25]
	0x03451270 LDR W8, [X0 + 0xE0]
	0x03451274 CBNZ W8, 0x345127C
	0x03451278 BL 0x1C16DFC
	0x0345127C ADRP X8, 0xCDE000
	0x03451280 LDR X8, [X8 + 0xBE8]
	0x03451284 ADD X0, X19, 0x8
	0x03451288 LDR X3, [X8]
	0x0345128C ADD X1, X31, 0x18
	0x03451290 MOV X2, X19
	0x03451294 BL 0x21897C0
	0x03451298 LDP X20, X19, [X31 + 0x60]
	0x0345129C LDP X22, X21, [X31 + 0x50]
	0x034512A0 LDP X24, X23, [X31 + 0x40]
	0x034512A4 LDP X30, X25, [X31 + 0x30]
	0x034512A8 ADD X31, X31, 0x70
	0x034512AC RET
	0x034512B0 BL 0x1C16F20
	0x034512B4 BL 0x1C16F20
	0x034512B8 BL 0x1C16F20
	0x034512BC BL 0x1C16F20
	0x034512C0 BL 0x1C16F20
	0x034512C4 BL 0x1C16F20
	0x034512C8 BL 0x1C16F20
	0x034512CC BL 0x1C16F20
	0x034512D0 BL 0x1C16F20
	0x034512D4 BL 0x1C16F20
	0x034512D8 BL 0x1C16F20
	0x034512DC BL 0x1C16F20
	0x034512E0 B 0x3451354
	0x034512E4 B 0x3451354
	0x034512E8 B 0x3451354
	0x034512EC B 0x3451354
	0x034512F0 B 0x3451354
	0x034512F4 B 0x3451354
	0x034512F8 B 0x3451354
	0x034512FC B 0x3451354
	0x03451300 B 0x3451354
	0x03451304 B 0x3451354
	0x03451308 B 0x3451354
	0x0345130C B 0x3451354
	0x03451310 B 0x3451354
	0x03451314 B 0x3451354
	0x03451318 B 0x3451354
	0x0345131C B 0x3451354
	0x03451320 B 0x3451354
	0x03451324 B 0x3451354
	0x03451328 B 0x3451354
	0x0345132C B 0x3451354
	0x03451330 B 0x3451354
	0x03451334 B 0x3451354
	0x03451338 B 0x3451354
	0x0345133C B 0x3451354
	0x03451340 B 0x3451354
	0x03451344 B 0x3451354
	0x03451348 B 0x3451354
	0x0345134C B 0x3451354
	0x03451350 B 0x3451354
	0x03451354 MOV X20, X0
	0x03451358 CMP W1, 0x1
	0x0345135C B.NE 0x34513F0
	0x03451360 MOV X0, X20
	0x03451364 BL 0x3EB1AD0
	0x03451368 MOV X20, X0
	0x0345136C ADRP X0, 0xCA2000
	0x03451370 LDR X0, [X0 + 0x7D0]
	0x03451374 BL 0x1C16D08
	0x03451378 LDR X8, [X20]
	0x0345137C LDR X1, [X8]
	0x03451380 BL 0x1C17270
	0x03451384 TBZ X0, 0x0, 0x34513C8
	0x03451388 LDR X20, [X20]
	0x0345138C BL 0x3EB1AE0
	0x03451390 MOVN W8, 0x1
	0x03451394 STR X31, [X19 + 0x40]
	0x03451398 STR W8, [X19], #0x8
	0x0345139C ADRP X0, 0xCA5000
	0x034513A0 LDR X0, [X0 + 0x280]
	0x034513A4 BL 0x1C16D08
	0x034513A8 LDR W8, [X0 + 0xE0]
	0x034513AC CBNZ W8, 0x34513B4
	0x034513B0 BL 0x1C16DFC
	0x034513B4 MOV X0, X19
	0x034513B8 MOV X1, X20
	0x034513BC MOV X2, X31
	0x034513C0 BL 0x32C4908
	0x034513C4 B 0x3451298
	0x034513C8 MOVZ W0, 0x8
	0x034513CC BL 0x3EB1AF0
	0x034513D0 LDR X8, [X20]
	0x034513D4 STR X8, [X0]
	0x034513D8 ADRP X1, 0xA63000
	0x034513DC ADD X1, X1, 0xE58
	0x034513E0 MOV X2, X31
	0x034513E4 BL 0x3EB1B00
	0x034513E8 MOV X20, X0
	0x034513EC BL 0x3EB1AE0
	0x034513F0 MOV X0, X20
	0x034513F4 BL 0x1D2C690
	0x034513F8 BL 0x1990590
	0x034513FC STR X30, [X31 - 0x30]!
	0x03451400 STP X22, X21, [X31 + 0x10]
	0x03451404 STP X20, X19, [X31 + 0x20]
	0x03451408 ADRP X21, 0xF8C000
	0x0345140C ADRP X22, 0xCA5000
	0x03451410 LDRB W8, [X21 + 0x76E]
	0x03451414 LDR X22, [X22 + 0x280]
	0x03451418 MOV X19, X1
	0x0345141C MOV X20, X0
	0x03451420 TBNZ X8, 0x0, 0x3451438
	0x03451424 ADRP X0, 0xCA5000
	0x03451428 LDR X0, [X0 + 0x280]
	0x0345142C BL 0x1C16CF4
	0x03451430 MOVZ W8, 0x1
	0x03451434 STRB W8, [X21 + 0x76E]
	0x03451438 LDR X0, [X22]
	0x0345143C LDR W8, [X0 + 0xE0]
	0x03451440 CBNZ W8, 0x3451448
	0x03451444 BL 0x1C16DFC
	0x03451448 ADD X0, X20, 0x8
	0x0345144C MOV X1, X19
	0x03451450 LDP X20, X19, [X31 + 0x20]
	0x03451454 LDP X22, X21, [X31 + 0x10]
	0x03451458 MOV X2, X31
	0x0345145C LDR X30, [X31], #0x30
	0x03451460 B 0x32C477C
	0x03451464 SUB X31, X31, 0x70
	0x03451468 STP X30, X25, [X31 + 0x30]
	0x0345146C STP X24, X23, [X31 + 0x40]
	0x03451470 STP X22, X21, [X31 + 0x50]
	0x03451474 STP X20, X19, [X31 + 0x60]
	0x03451478 ADRP X20, 0xF8C000
	0x0345147C LDRB W8, [X20 + 0x76F]
	0x03451480 MOV X19, X0
	0x03451484 TBNZ X8, 0x0, 0x3451538
	0x03451488 ADRP X0, 0xCDE000
	0x0345148C LDR X0, [X0 + 0xC00]
	0x03451490 BL 0x1C16CF4
	0x03451494 ADRP X0, 0xCDE000
	0x03451498 LDR X0, [X0 + 0xC08]
	0x0345149C BL 0x1C16CF4
	0x034514A0 ADRP X0, 0xCA5000
	0x034514A4 LDR X0, [X0 + 0x280]
	0x034514A8 BL 0x1C16CF4
	0x034514AC ADRP X0, 0xCA4000
	0x034514B0 LDR X0, [X0 + 0xA10]
	0x034514B4 BL 0x1C16CF4
	0x034514B8 ADRP X0, 0xCA3000
	0x034514BC LDR X0, [X0 + 0x9F0]
	0x034514C0 BL 0x1C16CF4
	0x034514C4 ADRP X0, 0xCAA000
	0x034514C8 LDR X0, [X0 + 0x818]
	0x034514CC BL 0x1C16CF4
	0x034514D0 ADRP X0, 0xCA3000
	0x034514D4 LDR X0, [X0 + 0x818]
	0x034514D8 BL 0x1C16CF4
	0x034514DC ADRP X0, 0xCDE000
	0x034514E0 LDR X0, [X0 + 0x7C8]
	0x034514E4 BL 0x1C16CF4
	0x034514E8 ADRP X0, 0xCDE000
	0x034514EC LDR X0, [X0 + 0x7D0]
	0x034514F0 BL 0x1C16CF4
	0x034514F4 ADRP X0, 0xCA3000
	0x034514F8 LDR X0, [X0 + 0x830]
	0x034514FC BL 0x1C16CF4
	0x03451500 ADRP X0, 0xCA3000
	0x03451504 LDR X0, [X0 + 0x838]
	0x03451508 BL 0x1C16CF4
	0x0345150C ADRP X0, 0xCA3000
	0x03451510 LDR X0, [X0 + 0x840]
	0x03451514 BL 0x1C16CF4
	0x03451518 ADRP X0, 0xCDE000
	0x0345151C LDR X0, [X0 + 0xC10]
	0x03451520 BL 0x1C16CF4
	0x03451524 ADRP X0, 0xCDE000
	0x03451528 LDR X0, [X0 + 0xC18]
	0x0345152C BL 0x1C16CF4
	0x03451530 MOVZ W8, 0x1
	0x03451534 STRB W8, [X20 + 0x76F]
	0x03451538 STP X31, X31, [X31 + 0x20]
	0x0345153C STR X31, [X31 + 0x18]
	0x03451540 ADRP X25, 0xCA5000
	0x03451544 LDR W8, [X19]
	0x03451548 LDR X20, [X19 + 0x20]
	0x0345154C LDR X25, [X25 + 0x280]
	0x03451550 CBZ W8, 0x3451574
	0x03451554 CMP W8, 0x1
	0x03451558 B.NE 0x34515A0
	0x0345155C LDR X8, [X19 + 0x60]
	0x03451560 MOVN W9, 0x0
	0x03451564 STR X8, [X31 + 0x18]
	0x03451568 STR X31, [X19 + 0x60]
	0x0345156C STR W9, [X19]
	0x03451570 B 0x345189C
	0x03451574 LDR X8, [X19 + 0x58]
	0x03451578 MOVN W9, 0x0
	0x0345157C STR X8, [X31 + 0x20]
	0x03451580 STR X31, [X19 + 0x58]
	0x03451584 STR W9, [X19]
	0x03451588 ADRP X8, 0xCA3000
	0x0345158C LDR X8, [X8 + 0x830]
	0x03451590 ADD X0, X31, 0x20
	0x03451594 LDR X1, [X8]
	0x03451598 BL 0x2677474
	0x0345159C B 0x34517D0
	0x034515A0 ADRP X8, 0xCDE000
	0x034515A4 LDR X8, [X8 + 0xC18]
	0x034515A8 LDR X0, [X8]
	0x034515AC BL 0x1C16F10
	0x034515B0 MOV X21, X0
	0x034515B4 MOV X1, X31
	0x034515B8 BL 0x34489E4
	0x034515BC STR X21, [X19 + 0x50]
	0x034515C0 CBZ X21, 0x345193C
	0x034515C4 LDR X8, [X19 + 0x20]
	0x034515C8 STR X8, [X21 + 0x10]
	0x034515CC LDUR V0, [X19 + 0x28]
	0x034515D0 STUR V0, [X21 + 0x18]
	0x034515D4 LDR X8, [X19 + 0x38]
	0x034515D8 STR X8, [X21 + 0x28]
	0x034515DC LDR X8, [X19 + 0x40]
	0x034515E0 STR X8, [X21 + 0x30]
	0x034515E4 CBZ X20, 0x3451940
	0x034515E8 LDRB W8, [X20 + 0x10]
	0x034515EC CBZ W8, 0x34517D4
	0x034515F0 LDR X8, [X19 + 0x50]
	0x034515F4 CBZ X8, 0x3451944
	0x034515F8 LDR X21, [X8 + 0x18]
	0x034515FC CBZ X21, 0x3451948
	0x03451600 ADRP X23, 0xCA3000
	0x03451604 LDR X8, [X21]
	0x03451608 LDR X23, [X23 + 0x818]
	0x0345160C LDRH W9, [X8 + 0x12E]
	0x03451610 LDR X1, [X23]
	0x03451614 CBZ X9, 0x3451638
	0x03451618 LDR X10, [X8 + 0xB0]
	0x0345161C ADD X10, X10, 0x8
	0x03451620 LDUR X11, [X10 - 0x8]
	0x03451624 CMP X11, X1
	0x03451628 B.EQ 0x3451648
	0x0345162C SUBS X9, X9, 0x1
	0x03451630 ADD X10, X10, 0x10
	0x03451634 B.NE 0x3451620
	0x03451638 MOVZ W2, 0x7
	0x0345163C MOV X0, X21
	0x03451640 BL 0x1C5C788
	0x03451644 B 0x3451658
	0x03451648 LDR W9, [X10]
	0x0345164C ADD W9, W9, 0x7
	0x03451650 ADD X8, X8, W9, 0x4, SXTW
	0x03451654 ADD X0, X8, 0x138
	0x03451658 LDP X8, X1, [X0]
	0x0345165C MOV X0, X21
	0x03451660 BLR X8
	0x03451664 MOV X1, X31
	0x03451668 BL 0x32277A8
	0x0345166C TBNZ X0, 0x0, 0x34517D0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8D000
	011 Move W8, [X20+1897]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDF000
	018 Move X0, [X0+2936]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDF000
	021 Move X0, [X0+2944]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA6000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA5000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA4000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCAB000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA4000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDF000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDF000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA4000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA4000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA4000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDF000
	054 Move X0, [X0+2952]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDF000
	057 Move X0, [X0+2960]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1897], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA6000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xCA4000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDF000
	091 Move X8, [X8+2960]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass53_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move [X21+24], V0
	104 Move X8, [X19+56]
	105 Move [X21+40], X8
	106 Move X8, [X19+64]
	107 Move [X21+48], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+80]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xCA4000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+80]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xCA4000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xCA5000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+80]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+72]
	212 Move X4, [X8+48]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xCA4000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xCA4000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+88], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCDF000
	242 Move X8, [X8+2936]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCAB000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+80]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCDF000
	257 Move X8, [X8+2952]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+80]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCDF000
	267 Move X23, [X19+72]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+48]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCDF000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+80], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+96], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCDF000
	336 Move X8, [X8+2944]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xCA3000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+80], X31
	385 Move [X19+8], W8
	386 Move X0, 0xCA6000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA64000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03451670 LDR X8, [X19 + 0x50]
	0x03451674 CBZ X8, 0x345194C
	0x03451678 ADRP X9, 0xCA3000
	0x0345167C LDR X9, [X9 + 0x9F0]
	0x03451680 LDR X21, [X8 + 0x18]
	0x03451684 LDR X0, [X9]
	0x03451688 LDR W9, [X0 + 0xE0]
	0x0345168C CBNZ W9, 0x3451694
	0x03451690 BL 0x1C16DFC
	0x03451694 MOV X0, X31
	0x03451698 BL 0x33616A4
	0x0345169C ADRP X22, 0xCA4000
	0x034516A0 LDR X22, [X22 + 0xA10]
	0x034516A4 MOV X8, X0
	0x034516A8 STR X8, [X31 + 0x28]
	0x034516AC LDR X0, [X22]
	0x034516B0 LDR W8, [X0 + 0xE0]
	0x034516B4 CBNZ W8, 0x34516C0
	0x034516B8 BL 0x1C16DFC
	0x034516BC LDR X0, [X22]
	0x034516C0 LDR X8, [X0 + 0xB8]
	0x034516C4 LDR X1, [X8]
	0x034516C8 ADD X0, X31, 0x28
	0x034516CC MOV X2, X31
	0x034516D0 BL 0x335FC68
	0x034516D4 CBZ X21, 0x3451950

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8D000
	007 Move X22, 0xCA6000
	008 Move W8, [X21+1898]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA6000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1898], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

