Type: Nakama.Client/<ListGroupsAsync>d__85

Method: System.Void MoveNext()

Disassembly:
	0x0345E5CC ADRP X10, 0xC95000
	0x0345E5D0 LDR X8, [X21]
	0x0345E5D4 LDR X10, [X10 + 0xE00]
	0x0345E5D8 LDRH W9, [X8 + 0x12E]
	0x0345E5DC LDR X1, [X10]
	0x0345E5E0 CBZ X9, 0x345E604
	0x0345E5E4 LDR X10, [X8 + 0xB0]
	0x0345E5E8 ADD X10, X10, 0x8
	0x0345E5EC LDUR X11, [X10 - 0x8]
	0x0345E5F0 CMP X11, X1
	0x0345E5F4 B.EQ 0x345E614
	0x0345E5F8 SUBS X9, X9, 0x1
	0x0345E5FC ADD X10, X10, 0x10
	0x0345E600 B.NE 0x345E5EC
	0x0345E604 MOV X0, X21
	0x0345E608 MOV W2, W31
	0x0345E60C BL 0x1C5C788
	0x0345E610 B 0x345E620
	0x0345E614 LDRSW X9, [X10]
	0x0345E618 ADD X8, X8, X9, 0x4, LSL
	0x0345E61C ADD X0, X8, 0x138
	0x0345E620 LDP X8, X1, [X0]
	0x0345E624 MOV X0, X21
	0x0345E628 BLR X8
	0x0345E62C CBNZ X24, 0x345EA90
	0x0345E630 CMP W22, 0xB
	0x0345E634 B.EQ 0x345E63C
	0x0345E638 CBNZ W22, 0x345EA34
	0x0345E63C LDR X8, [X20]
	0x0345E640 ADRP X10, 0xCD2000
	0x0345E644 LDRH W9, [X8 + 0x12E]
	0x0345E648 LDR X10, [X10 + 0x100]
	0x0345E64C LDR X1, [X10]
	0x0345E650 CBZ X9, 0x345E674
	0x0345E654 LDR X10, [X8 + 0xB0]
	0x0345E658 ADD X10, X10, 0x8
	0x0345E65C LDUR X11, [X10 - 0x8]
	0x0345E660 CMP X11, X1
	0x0345E664 B.EQ 0x345E684
	0x0345E668 SUBS X9, X9, 0x1
	0x0345E66C ADD X10, X10, 0x10
	0x0345E670 B.NE 0x345E65C
	0x0345E674 MOVZ W2, 0x1
	0x0345E678 MOV X0, X20
	0x0345E67C BL 0x1C5C788
	0x0345E680 B 0x345E694
	0x0345E684 LDR W9, [X10]
	0x0345E688 ADD W9, W9, 0x1
	0x0345E68C ADD X8, X8, W9, 0x4, SXTW
	0x0345E690 ADD X0, X8, 0x138
	0x0345E694 LDP X8, X1, [X0]
	0x0345E698 MOV X0, X20
	0x0345E69C BLR X8
	0x0345E6A0 MOV X21, X0
	0x0345E6A4 CBZ X0, 0x345EAA8
	0x0345E6A8 LDR X8, [X21]
	0x0345E6AC ADRP X10, 0xCD2000
	0x0345E6B0 LDRH W9, [X8 + 0x12E]
	0x0345E6B4 LDR X10, [X10 + 0x110]
	0x0345E6B8 LDR X1, [X10]
	0x0345E6BC CBZ X9, 0x345E6E0
	0x0345E6C0 LDR X10, [X8 + 0xB0]
	0x0345E6C4 ADD X10, X10, 0x8
	0x0345E6C8 LDUR X11, [X10 - 0x8]
	0x0345E6CC CMP X11, X1
	0x0345E6D0 B.EQ 0x345E6F0
	0x0345E6D4 SUBS X9, X9, 0x1
	0x0345E6D8 ADD X10, X10, 0x10
	0x0345E6DC B.NE 0x345E6C8
	0x0345E6E0 MOV X0, X21
	0x0345E6E4 MOV W2, W31
	0x0345E6E8 BL 0x1C5C788
	0x0345E6EC B 0x345E6FC
	0x0345E6F0 LDRSW X9, [X10]
	0x0345E6F4 ADD X8, X8, X9, 0x4, LSL
	0x0345E6F8 ADD X0, X8, 0x138
	0x0345E6FC LDP X8, X1, [X0]
	0x0345E700 MOV X0, X21
	0x0345E704 BLR X8
	0x0345E708 MOV X21, X0
	0x0345E70C CBZ X0, 0x345EAAC
	0x0345E710 ADRP X24, 0xC95000
	0x0345E714 ADRP X26, 0xCD2000
	0x0345E718 ADRP X27, 0xC96000
	0x0345E71C ADRP X28, 0xCD2000
	0x0345E720 ADRP X29, 0xCD2000
	0x0345E724 LDR X24, [X24 + 0xE18]
	0x0345E728 LDR X26, [X26 + 0x118]
	0x0345E72C LDR X27, [X27 + 0x818]
	0x0345E730 LDR X28, [X28 + 0x108]
	0x0345E734 LDR X29, [X29 + 0xE0]
	0x0345E738 LDR X8, [X21]
	0x0345E73C LDR X1, [X24]
	0x0345E740 LDRH W9, [X8 + 0x12E]
	0x0345E744 CBZ X9, 0x345E768
	0x0345E748 LDR X10, [X8 + 0xB0]
	0x0345E74C ADD X10, X10, 0x8
	0x0345E750 LDUR X11, [X10 - 0x8]
	0x0345E754 CMP X11, X1
	0x0345E758 B.EQ 0x345E778
	0x0345E75C SUBS X9, X9, 0x1
	0x0345E760 ADD X10, X10, 0x10
	0x0345E764 B.NE 0x345E750
	0x0345E768 MOV X0, X21
	0x0345E76C MOV W2, W31
	0x0345E770 BL 0x1C5C788
	0x0345E774 B 0x345E784
	0x0345E778 LDRSW X9, [X10]
	0x0345E77C ADD X8, X8, X9, 0x4, LSL
	0x0345E780 ADD X0, X8, 0x138
	0x0345E784 LDP X8, X1, [X0]
	0x0345E788 MOV X0, X21
	0x0345E78C BLR X8
	0x0345E790 TBZ X0, 0x0, 0x345E978
	0x0345E794 LDR X8, [X21]
	0x0345E798 LDR X1, [X26]
	0x0345E79C LDRH W9, [X8 + 0x12E]
	0x0345E7A0 CBZ X9, 0x345E7C4
	0x0345E7A4 LDR X10, [X8 + 0xB0]
	0x0345E7A8 ADD X10, X10, 0x8
	0x0345E7AC LDUR X11, [X10 - 0x8]
	0x0345E7B0 CMP X11, X1
	0x0345E7B4 B.EQ 0x345E7D4
	0x0345E7B8 SUBS X9, X9, 0x1
	0x0345E7BC ADD X10, X10, 0x10
	0x0345E7C0 B.NE 0x345E7AC
	0x0345E7C4 MOV X0, X21
	0x0345E7C8 MOV W2, W31
	0x0345E7CC BL 0x1C5C788
	0x0345E7D0 B 0x345E7E0
	0x0345E7D4 LDRSW X9, [X10]
	0x0345E7D8 ADD X8, X8, X9, 0x4, LSL
	0x0345E7DC ADD X0, X8, 0x138
	0x0345E7E0 LDP X8, X1, [X0]
	0x0345E7E4 MOV X0, X21
	0x0345E7E8 BLR X8
	0x0345E7EC LDR X8, [X19 + 0x70]
	0x0345E7F0 CBZ X8, 0x345EA6C
	0x0345E7F4 LDR X23, [X8 + 0x18]
	0x0345E7F8 CBZ X23, 0x345EA70
	0x0345E7FC LDR X8, [X23]
	0x0345E800 LDR X1, [X27]
	0x0345E804 MOV X22, X0
	0x0345E808 LDRH W9, [X8 + 0x12E]
	0x0345E80C CBZ X9, 0x345E830
	0x0345E810 LDR X10, [X8 + 0xB0]
	0x0345E814 ADD X10, X10, 0x8
	0x0345E818 LDUR X11, [X10 - 0x8]
	0x0345E81C CMP X11, X1
	0x0345E820 B.EQ 0x345E840
	0x0345E824 SUBS X9, X9, 0x1
	0x0345E828 ADD X10, X10, 0x10
	0x0345E82C B.NE 0x345E818
	0x0345E830 MOVZ W2, 0xA
	0x0345E834 MOV X0, X23
	0x0345E838 BL 0x1C5C788
	0x0345E83C B 0x345E850
	0x0345E840 LDR W9, [X10]
	0x0345E844 ADD W9, W9, 0xA
	0x0345E848 ADD X8, X8, W9, 0x4, SXTW
	0x0345E84C ADD X0, X8, 0x138
	0x0345E850 LDP X8, X1, [X0]
	0x0345E854 MOV X0, X23
	0x0345E858 BLR X8
	0x0345E85C CBZ X22, 0x345EA64
	0x0345E860 LDR X8, [X22]
	0x0345E864 LDR X1, [X28]
	0x0345E868 MOV X23, X0
	0x0345E86C LDRH W9, [X8 + 0x12E]
	0x0345E870 CBZ X9, 0x345E894
	0x0345E874 LDR X10, [X8 + 0xB0]
	0x0345E878 ADD X10, X10, 0x8
	0x0345E87C LDUR X11, [X10 - 0x8]
	0x0345E880 CMP X11, X1
	0x0345E884 B.EQ 0x345E8A4
	0x0345E888 SUBS X9, X9, 0x1
	0x0345E88C ADD X10, X10, 0x10
	0x0345E890 B.NE 0x345E87C
	0x0345E894 MOVZ W2, 0x6
	0x0345E898 MOV X0, X22
	0x0345E89C BL 0x1C5C788
	0x0345E8A0 B 0x345E8B4
	0x0345E8A4 LDR W9, [X10]
	0x0345E8A8 ADD W9, W9, 0x6
	0x0345E8AC ADD X8, X8, W9, 0x4, SXTW
	0x0345E8B0 ADD X0, X8, 0x138
	0x0345E8B4 LDP X8, X1, [X0]
	0x0345E8B8 MOV X0, X22
	0x0345E8BC BLR X8
	0x0345E8C0 MOV X1, X0
	0x0345E8C4 CBZ X23, 0x345EA68
	0x0345E8C8 MOV X0, X23
	0x0345E8CC MOV X2, X31
	0x0345E8D0 BL 0x322693C
	0x0345E8D4 TBZ X0, 0x0, 0x345E738
	0x0345E8D8 LDR X9, [X22]
	0x0345E8DC LDR X8, [X29]
	0x0345E8E0 LDRB W11, [X9 + 0x130]
	0x0345E8E4 LDRB W10, [X8 + 0x130]
	0x0345E8E8 CMP W11, W10
	0x0345E8EC B.CC 0x345E738
	0x0345E8F0 LDR X9, [X9 + 0xC8]
	0x0345E8F4 ADD X9, X9, X10, 0x3, LSL
	0x0345E8F8 LDUR X9, [X9 - 0x8]
	0x0345E8FC CMP X9, X8
	0x0345E900 B.NE 0x345E738
	0x0345E904 LDR X8, [X19 + 0x70]
	0x0345E908 CBZ X8, 0x345EA7C
	0x0345E90C LDR X23, [X8 + 0x18]
	0x0345E910 CBZ X23, 0x345EA80
	0x0345E914 LDR X8, [X23]
	0x0345E918 LDR X1, [X27]
	0x0345E91C LDRH W9, [X8 + 0x12E]
	0x0345E920 CBZ X9, 0x345E944
	0x0345E924 LDR X10, [X8 + 0xB0]
	0x0345E928 ADD X10, X10, 0x8
	0x0345E92C LDUR X11, [X10 - 0x8]
	0x0345E930 CMP X11, X1
	0x0345E934 B.EQ 0x345E954
	0x0345E938 SUBS X9, X9, 0x1
	0x0345E93C ADD X10, X10, 0x10
	0x0345E940 B.NE 0x345E92C
	0x0345E944 MOVZ W2, 0x9
	0x0345E948 MOV X0, X23
	0x0345E94C BL 0x1C5C788
	0x0345E950 B 0x345E964
	0x0345E954 LDR W9, [X10]
	0x0345E958 ADD W9, W9, 0x9
	0x0345E95C ADD X8, X8, W9, 0x4, SXTW
	0x0345E960 ADD X0, X8, 0x138
	0x0345E964 LDP X8, X1, [X0]
	0x0345E968 MOV X0, X23
	0x0345E96C BLR X8
	0x0345E970 STR X0, [X22 + 0x68]
	0x0345E974 B 0x345E738
	0x0345E978 MOV X24, X31
	0x0345E97C MOVZ W22, 0xE
	0x0345E980 TBZ X25, 0x1F, 0x345E9E8
	0x0345E984 CBZ X21, 0x345E9E8
	0x0345E988 ADRP X10, 0xC95000
	0x0345E98C LDR X8, [X21]
	0x0345E990 LDR X10, [X10 + 0xE00]
	0x0345E994 LDRH W9, [X8 + 0x12E]
	0x0345E998 LDR X1, [X10]
	0x0345E99C CBZ X9, 0x345E9C0
	0x0345E9A0 LDR X10, [X8 + 0xB0]
	0x0345E9A4 ADD X10, X10, 0x8
	0x0345E9A8 LDUR X11, [X10 - 0x8]
	0x0345E9AC CMP X11, X1
	0x0345E9B0 B.EQ 0x345E9D0
	0x0345E9B4 SUBS X9, X9, 0x1
	0x0345E9B8 ADD X10, X10, 0x10
	0x0345E9BC B.NE 0x345E9A8
	0x0345E9C0 MOV X0, X21
	0x0345E9C4 MOV W2, W31
	0x0345E9C8 BL 0x1C5C788
	0x0345E9CC B 0x345E9DC
	0x0345E9D0 LDRSW X9, [X10]
	0x0345E9D4 ADD X8, X8, X9, 0x4, LSL
	0x0345E9D8 ADD X0, X8, 0x138
	0x0345E9DC LDP X8, X1, [X0]
	0x0345E9E0 MOV X0, X21
	0x0345E9E4 BLR X8
	0x0345E9E8 CBNZ X24, 0x345EAB0
	0x0345E9EC CBZ W22, 0x345E9F8
	0x0345E9F0 CMP W22, 0xE
	0x0345E9F4 B.NE 0x345EA34
	0x0345E9F8 MOVN W8, 0x1
	0x0345E9FC STR X31, [X19 + 0x70]
	0x0345EA00 STR W8, [X19], #0x8
	0x0345EA04 ADRP X8, 0xCD0000
	0x0345EA08 LDR X8, [X8 + 0x5D8]
	0x0345EA0C LDR X0, [X8]
	0x0345EA10 LDR W8, [X0 + 0xE0]
	0x0345EA14 CBNZ W8, 0x345EA1C
	0x0345EA18 BL 0x1C16DFC
	0x0345EA1C ADRP X8, 0xCD1000
	0x0345EA20 LDR X8, [X8]
	0x0345EA24 MOV X0, X19
	0x0345EA28 MOV X1, X20
	0x0345EA2C LDR X2, [X8]
	0x0345EA30 BL 0x26322B0
	0x0345EA34 LDP X20, X19, [X31 + 0x80]
	0x0345EA38 LDP X22, X21, [X31 + 0x70]
	0x0345EA3C LDP X24, X23, [X31 + 0x60]
	0x0345EA40 LDP X26, X25, [X31 + 0x50]
	0x0345EA44 LDP X28, X27, [X31 + 0x40]
	0x0345EA48 LDP X29, X30, [X31 + 0x30]
	0x0345EA4C ADD X31, X31, 0x90
	0x0345EA50 RET
	0x0345EA54 BL 0x1C16F20
	0x0345EA58 BL 0x1C16F20
	0x0345EA5C BL 0x1C16F20
	0x0345EA60 BL 0x1C16F20
	0x0345EA64 BL 0x1C16F20
	0x0345EA68 BL 0x1C16F20
	0x0345EA6C BL 0x1C16F20
	0x0345EA70 BL 0x1C16F20
	0x0345EA74 BL 0x1C16F20
	0x0345EA78 BL 0x1C16F20
	0x0345EA7C BL 0x1C16F20
	0x0345EA80 BL 0x1C16F20
	0x0345EA84 BL 0x1C16F20
	0x0345EA88 BL 0x1C16F20
	0x0345EA8C BL 0x1C16F20
	0x0345EA90 MOV X0, X24
	0x0345EA94 BL 0x1C16F18
	0x0345EA98 BL 0x1C16F20
	0x0345EA9C BL 0x1C16F20
	0x0345EAA0 BL 0x1C16F20
	0x0345EAA4 BL 0x1C16F20
	0x0345EAA8 BL 0x1C16F20
	0x0345EAAC BL 0x1C16F20
	0x0345EAB0 MOV X0, X24
	0x0345EAB4 BL 0x1C16F18
	0x0345EAB8 BL 0x1C16F20
	0x0345EABC BL 0x1C16F20
	0x0345EAC0 BL 0x1C16F20
	0x0345EAC4 BL 0x1C16F20
	0x0345EAC8 BL 0x1C16F20
	0x0345EACC BL 0x1C16F20
	0x0345EAD0 BL 0x1C16F20
	0x0345EAD4 BL 0x1C16F20
	0x0345EAD8 BL 0x1C16F20
	0x0345EADC B 0x345EB88
	0x0345EAE0 B 0x345EB88
	0x0345EAE4 B 0x345EB88
	0x0345EAE8 B 0x345EB88
	0x0345EAEC B 0x345EB88
	0x0345EAF0 B 0x345EB88
	0x0345EAF4 B 0x345EB88
	0x0345EAF8 B 0x345EB88
	0x0345EAFC B 0x345EB88
	0x0345EB00 B 0x345EB88
	0x0345EB04 B 0x345EB88
	0x0345EB08 B 0x345EB88
	0x0345EB0C B 0x345EB88
	0x0345EB10 B 0x345EB88
	0x0345EB14 B 0x345EB88
	0x0345EB18 B 0x345EB88
	0x0345EB1C B 0x345EB88
	0x0345EB20 B 0x345EB88
	0x0345EB24 B 0x345EB88
	0x0345EB28 B 0x345EB88
	0x0345EB2C B 0x345EBD0
	0x0345EB30 B 0x345EB88
	0x0345EB34 B 0x345EB88
	0x0345EB38 B 0x345EB88
	0x0345EB3C B 0x345EB88
	0x0345EB40 B 0x345EB88
	0x0345EB44 B 0x345EB88
	0x0345EB48 B 0x345EC90
	0x0345EB4C B 0x345EB88
	0x0345EB50 B 0x345EB88
	0x0345EB54 B 0x345EB88
	0x0345EB58 B 0x345EB88
	0x0345EB5C B 0x345EB88
	0x0345EB60 B 0x345EB88
	0x0345EB64 B 0x345EB88
	0x0345EB68 B 0x345EB88
	0x0345EB6C B 0x345EBD0
	0x0345EB70 B 0x345EBD0
	0x0345EB74 B 0x345EB88
	0x0345EB78 B 0x345EB88
	0x0345EB7C B 0x345EB88
	0x0345EB80 B 0x345EC90
	0x0345EB84 B 0x345EC90
	0x0345EB88 MOV X22, X1
	0x0345EB8C MOV X23, X0
	0x0345EB90 B 0x345ED2C
	0x0345EB94 B 0x345EBD0
	0x0345EB98 B 0x345EC90
	0x0345EB9C B 0x345EBD0
	0x0345EBA0 B 0x345EBD0
	0x0345EBA4 B 0x345EBD0
	0x0345EBA8 B 0x345EBD0
	0x0345EBAC B 0x345EBD0
	0x0345EBB0 B 0x345EC90
	0x0345EBB4 B 0x345EC90
	0x0345EBB8 B 0x345EC90
	0x0345EBBC B 0x345EC90
	0x0345EBC0 B 0x345EC90
	0x0345EBC4 B 0x345EBD0
	0x0345EBC8 B 0x345EBD0
	0x0345EBCC B 0x345EBD0
	0x0345EBD0 MOV X22, X1
	0x0345EBD4 MOV X23, X0
	0x0345EBD8 CMP W22, 0x1
	0x0345EBDC B.NE 0x345EBFC
	0x0345EBE0 MOV X0, X23
	0x0345EBE4 BL 0x3EB1AD0
	0x0345EBE8 LDR X24, [X0]
	0x0345EBEC BL 0x3EB1AE0
	0x0345EBF0 MOV W22, W31
	0x0345EBF4 TBNZ X25, 0x1F, 0x345E984
	0x0345EBF8 B 0x345E9E8
	0x0345EBFC MOV X24, X31
	0x0345EC00 TBZ X25, 0x1F, 0x345EC68
	0x0345EC04 CBZ X21, 0x345EC68
	0x0345EC08 ADRP X10, 0xC95000
	0x0345EC0C LDR X8, [X21]
	0x0345EC10 LDR X10, [X10 + 0xE00]
	0x0345EC14 LDRH W9, [X8 + 0x12E]
	0x0345EC18 LDR X1, [X10]
	0x0345EC1C CBZ X9, 0x345EC40
	0x0345EC20 LDR X10, [X8 + 0xB0]
	0x0345EC24 ADD X10, X10, 0x8
	0x0345EC28 LDUR X11, [X10 - 0x8]
	0x0345EC2C CMP X11, X1
	0x0345EC30 B.EQ 0x345EC50
	0x0345EC34 SUBS X9, X9, 0x1
	0x0345EC38 ADD X10, X10, 0x10
	0x0345EC3C B.NE 0x345EC28
	0x0345EC40 MOV X0, X21
	0x0345EC44 MOV W2, W31
	0x0345EC48 BL 0x1C5C788
	0x0345EC4C B 0x345EC5C
	0x0345EC50 LDRSW X9, [X10]
	0x0345EC54 ADD X8, X8, X9, 0x4, LSL
	0x0345EC58 ADD X0, X8, 0x138
	0x0345EC5C LDP X8, X1, [X0]
	0x0345EC60 MOV X0, X21
	0x0345EC64 BLR X8
	0x0345EC68 CBZ X24, 0x345ED2C
	0x0345EC6C MOV X0, X24
	0x0345EC70 BL 0x1C16F18
	0x0345EC74 MOV X22, X1
	0x0345EC78 MOV X23, X0
	0x0345EC7C TBNZ X25, 0x1F, 0x345EC04
	0x0345EC80 B 0x345EC68
	0x0345EC84 B 0x345EC90
	0x0345EC88 B 0x345EC90
	0x0345EC8C B 0x345EC90
	0x0345EC90 MOV X22, X1
	0x0345EC94 MOV X23, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF80000
	011 Move W8, [X20+1959]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCD3000
	018 Move X0, [X0+152]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD3000
	021 Move X0, [X0+160]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD1000
	024 Move X0, [X0+4024]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD1000
	027 Move X0, [X0+1160]
	028 Call 0x1C17CF4
	029 Move X0, 0xC98000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC97000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD3000
	036 Move X0, [X0+168]
	037 Call 0x1C17CF4
	038 Move X0, 0xC97000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD2000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCD2000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD3000
	048 Move X0, [X0+176]
	049 Call 0x1C17CF4
	050 Move X0, 0xC97000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD3000
	054 Move X0, [X0+184]
	055 Call 0x1C17CF4
	056 Move X0, 0xC97000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCD3000
	060 Move X0, [X0+192]
	061 Call 0x1C17CF4
	062 Move X0, 0xC97000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCD3000
	066 Move X0, [X0+200]
	067 Call 0x1C17CF4
	068 Move X0, 0xCD3000
	069 Move X0, [X0+208]
	070 Call 0x1C17CF4
	071 Move X0, 0xCD3000
	072 Move X0, [X0+216]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1959], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCD1000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1160]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+128]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+128], X31
	092 Move [X19], W9
	093 Move X8, [X19+120]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+120], X31
	099 Move [X19], W9
	100 Move X8, 0xC97000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCD3000
	106 Move X8, [X8+216]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass85_0..ctor, X0
	112 Move [X19+112], X21
	113 Compare X21, 0
	114 JumpIfEqual {397}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move V0, [X19+3]
	120 Move [X21+2], V0
	121 Move W8, [X19+64]
	122 Move [X21+48], W8
	123 Move X8, [X19+72]
	124 Move [X21+56], X8
	125 Move X8, [X19+80]
	126 Move [X21+64], X8
	127 Move X8, [X19+112]
	128 Compare X8, 0
	129 JumpIfEqual {398}
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 NotImplemented "Instruction STRH not yet implemented."
	132 Move X8, [X19+112]
	133 Compare X8, 0
	134 JumpIfEqual {399}
	135 Move X9, [X19+96]
	136 Move [X8+80], X9
	137 Compare X20, 0
	138 JumpIfEqual {400}
	139 Move W8, [X20+16]
	140 Compare W8, 0
	141 JumpIfEqual {279}
	142 Move X8, [X19+112]
	143 Compare X8, 0
	144 JumpIfEqual {401}
	145 Move X21, [X8+24]
	146 Compare X21, 0
	147 JumpIfEqual {402}
	148 Move X23, 0xC97000
	149 Move X8, [X21]
	150 Move X23, [X23+2072]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X1, [X23]
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 7
	162 Move X0, X21
	163 Call 0x1C5D788
	164 Move W9, [X10]
	165 Add W9, W9, 7
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X21
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X1, X31
	173 Call String.IsNullOrEmpty, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {277}
	178 Move X8, [X19+112]
	179 Compare X8, 0
	180 JumpIfEqual {403}
	181 Move X9, 0xC97000
	182 Move X9, [X9+2544]
	183 Move X21, [X8+24]
	184 Move X0, [X9]
	185 Move W9, [X0+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X31
	190 Call DateTime.get_UtcNow
	191 Move X22, 0xC98000
	192 Move X22, [X22+2576]
	193 Move X8, X0
	194 Move [X31+40], X8
	195 Move X0, [X22]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {201}
	199 Call 0x1C17DFC
	200 Move X0, [X22]
	201 Move X8, [X0+184]
	202 Move X1, [X8]
	203 Add X0, X31, 40
	204 Move X2, X31
	205 Call DateTime.Add, X0, X1
	206 Compare X21, 0
	207 JumpIfEqual {404}
	208 Move X8, [X21]
	209 Move X1, [X23]
	210 Move X22, X0
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move W2, 11
	221 Move X0, X21
	222 Call 0x1C5D788
	223 Move W9, [X10]
	224 Add W9, W9, 11
	225 Add X8, X8, W9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X2, [X0+8]
	229 Move X0, X21
	230 Move X1, X22
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {277}
	236 Move X8, [X19+112]
	237 Compare X8, 0
	238 JumpIfEqual {405}
	239 Move X1, [X8+24]
	240 Move X3, [X19+104]
	241 Move X4, [X8+80]
	242 Move X0, X20
	243 Move X2, X31
	244 Move X5, X31
	245 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	246 Compare X0, 0
	247 JumpIfEqual {406}
	248 Move X8, 0xC97000
	249 Move X8, [X8+2112]
	250 Move X1, [X8]
	251 Call Task`1<Object>.GetAwaiter, X0
	252 Move X8, 0xC97000
	253 Move X8, [X8+2104]
	254 Move [X31+32], X0
	255 Move X1, [X8]
	256 Add X0, X31, 32
	257 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	258 Move TEMP, X0
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfEqual {100}
	262 Move [X19], W31
	263 Move X8, [X31+32]
	264 Move [X19+120], X8
	265 Move X0, [X25]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X8, 0xCD3000
	271 Move X8, [X8+160]
	272 Add X0, X19, 8
	273 Move X3, [X8]
	274 Add X1, X31, 32
	275 Move X2, X19
	276 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	277 Compare X20, 0
	278 JumpIfEqual {396}
	279 Move X8, 0xCD3000
	280 Move X8, [X8+168]
	281 Move X21, [X20+88]
	282 Move X23, [X19+112]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X8, 0xCD3000
	286 Move X8, [X8+208]
	287 Move X22, X0
	288 Move X2, [X8]
	289 Move X1, X23
	290 Move X3, X31
	291 Call Func`1<Object>..ctor, X0, X1, X2
	292 Move X8, [X19+112]
	293 Compare X8, 0
	294 JumpIfEqual {393}
	295 Move X9, 0xCD2000
	296 Move X23, [X19+104]
	297 Move X9, [X9+1992]
	298 Compare X23, 0
	299 JumpIfNotEqual {301}
	300 Move X23, [X20+24]
	301 Move X20, [X8+24]
	302 Move X1, [X8+80]
	303 Move X2, [X9]
	304 Move [X31+8], X31
	305 Move [X31+16], X31
	306 Add X0, X31, 8
	307 Call Nullable`1<CancellationToken>..ctor, X0, X1
	308 Move X8, 0xCD2000
	309 Move X8, [X8+2000]
	310 Move X0, [X8]
	311 Call 0x1C17F10
	312 Move X3, [X31+8]
	313 Move X4, [X31+16]
	314 Move X24, X0
	315 Move X1, X20
	316 Move X2, X23
	317 Move X5, X31
	318 Call RetryHistory..ctor, X0, X1, X2, X3
	319 Compare X21, 0
	320 JumpIfEqual {394}
	321 Move X8, 0xCD3000
	322 Move X8, [X8+176]
	323 Move X3, [X8]
	324 Move X0, X21
	325 Move X1, X22
	326 Move X2, X24
	327 Call 0x2244230, X0, X1, X2
	328 Compare X0, 0
	329 JumpIfEqual {395}
	330 Move X8, 0xCD3000
	331 Move X8, [X8+200]
	332 Move X1, [X8]
	333 Call Task`1<Object>.GetAwaiter, X0
	334 Move X8, 0xCD3000
	335 Move X8, [X8+192]
	336 Move [X31+24], X0
	337 Move X1, [X8]
	338 Add X0, X31, 24
	339 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {367}
	344 Move X8, 0xCD3000
	345 Move X8, [X8+184]
	346 Add X0, X31, 24
	347 Move X1, [X8]
	348 Call TaskAwaiter`1<Object>.GetResult, X0
	349 Move TEMP, 1
	350 Not TEMP
	351 Move W8, TEMP
	352 Move [X19], W8
	353 Move [X19+112], X31
	354 Move X20, X0
	355 Move X0, [X25]
	356 Move X21, 0xCD1000
	357 Add X19, X19, 8
	358 Move W8, [X0+224]
	359 Move X21, [X21+4024]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X2, [X21]
	364 Move X0, X19
	365 Move X1, X20
	366 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	367 Move W8, 1
	368 Move [X19], W8
	369 Move X8, [X31+24]
	370 Move [X19+128], X8
	371 Move X0, [X25]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {376}
	375 Call 0x1C17DFC
	376 Move X8, 0xCD3000
	377 Move X8, [X8+152]
	378 Add X0, X19, 8
	379 Move X3, [X8]
	380 Add X1, X31, 24
	381 Move X2, X19
	382 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	383 Move X20, [X31+96]
	384 Move X19, [X31+104]
	385 Move X22, [X31+80]
	386 Move X21, [X31+88]
	387 Move X24, [X31+64]
	388 Move X23, [X31+72]
	389 Move X30, [X31+48]
	390 Move X25, [X31+56]
	391 Add X31, X31, 112
	392 Return 
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Call 0x1C17F20
	407 Move X20, X0
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move X0, X20
	410 Call 0x3EB2AD0
	411 Move X20, X0
	412 Move X0, 0xC96000
	413 Move X0, [X0+2000]
	414 Call 0x1C17D08
	415 Move X8, [X20]
	416 Move X1, [X8]
	417 Call 0x1C18270
	418 Move TEMP, X0
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfNotEqual {443}
	422 Move X20, [X20]
	423 Call 0x3EB2AE0
	424 Move TEMP, 1
	425 Not TEMP
	426 Move W8, TEMP
	427 Move [X19+112], X31
	428 Move [X19+8], W8
	429 Move X0, 0xCD1000
	430 Move X0, [X0+1160]
	431 Call 0x1C17D08
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {436}
	435 Call 0x1C17DFC
	436 Move X0, 0xCD1000
	437 Move X0, [X0+4072]
	438 Call 0x1C17D08
	439 Move X2, X0
	440 Move X0, X19
	441 Move X1, X20
	442 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	443 Move W0, 8
	444 Call 0x3EB2AF0
	445 Move X8, [X20]
	446 Move [X0], X8
	447 Move X1, 0xA57000
	448 Add X1, X1, 3672
	449 Move X2, X31
	450 Call 0x3EB2B00
	451 Move X20, X0
	452 Call 0x3EB2AE0
	453 Move X0, X20
	454 Call 0x1D2D690
	455 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345EC98 CMP W22, 0x1
	0x0345EC9C B.NE 0x345ECBC
	0x0345ECA0 MOV X0, X23
	0x0345ECA4 BL 0x3EB1AD0
	0x0345ECA8 LDR X24, [X0]
	0x0345ECAC BL 0x3EB1AE0
	0x0345ECB0 MOV W22, W31
	0x0345ECB4 TBNZ X25, 0x1F, 0x345E5C8
	0x0345ECB8 B 0x345E62C
	0x0345ECBC MOV X24, X31
	0x0345ECC0 TBZ X25, 0x1F, 0x345ED28
	0x0345ECC4 CBZ X21, 0x345ED28
	0x0345ECC8 ADRP X10, 0xC95000
	0x0345ECCC LDR X8, [X21]
	0x0345ECD0 LDR X10, [X10 + 0xE00]
	0x0345ECD4 LDRH W9, [X8 + 0x12E]
	0x0345ECD8 LDR X1, [X10]
	0x0345ECDC CBZ X9, 0x345ED00
	0x0345ECE0 LDR X10, [X8 + 0xB0]
	0x0345ECE4 ADD X10, X10, 0x8
	0x0345ECE8 LDUR X11, [X10 - 0x8]
	0x0345ECEC CMP X11, X1
	0x0345ECF0 B.EQ 0x345ED10
	0x0345ECF4 SUBS X9, X9, 0x1
	0x0345ECF8 ADD X10, X10, 0x10
	0x0345ECFC B.NE 0x345ECE8
	0x0345ED00 MOV X0, X21
	0x0345ED04 MOV W2, W31
	0x0345ED08 BL 0x1C5C788
	0x0345ED0C B 0x345ED1C
	0x0345ED10 LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF80000
	007 Move X21, 0xCD1000
	008 Move W8, [X22+1960]
	009 Move X21, [X21+1160]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD1000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move X0, 0xCD1000
	020 Move X0, [X0+1160]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1960], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4080]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

