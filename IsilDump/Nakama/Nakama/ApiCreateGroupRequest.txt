Type: Nakama.ApiCreateGroupRequest

Method: System.String get_AvatarUrl()

Disassembly:
	0x03405D50 STR X1, [X0 + 0x10]
	0x03405D54 RET

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_AvatarUrl(System.String value)

Disassembly:
	0x03405D58 STR X30, [X31 - 0x20]!
	0x03405D5C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Description()

Disassembly:
	0x03405D60 ADRP X20, 0xFD8000
	0x03405D64 LDRB W8, [X20 + 0x52B]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Description(System.String value)

Disassembly:
	0x03405D68 MOV X19, X0
	0x03405D6C TBNZ X8, 0x0, 0x3405D90

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_LangTag()

Disassembly:
	0x03405D70 ADRP X0, 0xD28000
	0x03405D74 LDR X0, [X0 + 0xEC8]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_LangTag(System.String value)

Disassembly:
	0x03405D78 BL 0x1C16CF4
	0x03405D7C ADRP X0, 0xD28000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_MaxCount()

Disassembly:
	0x03405D80 LDR X0, [X0 + 0xED0]
	0x03405D84 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_MaxCount(System.Int32 value)

Disassembly:
	0x03405D88 MOVZ W8, 0x1
	0x03405D8C STRB W8, [X20 + 0x52B]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.String get_Name()

Disassembly:
	0x03405D90 LDR X19, [X19 + 0x18]
	0x03405D94 CBNZ X19, 0x3405DC0

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x03405D98 ADRP X8, 0xD28000
	0x03405D9C LDR X8, [X8 + 0xED0]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Boolean get_Open()

Disassembly:
	0x03405DA0 LDR X0, [X8]
	0x03405DA4 BL 0x1C16F10

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_Open(System.Boolean value)

Disassembly:
	0x03405DA8 ADRP X8, 0xD28000
	0x03405DAC LDR X8, [X8 + 0xEC8]
	0x03405DB0 MOV W1, W31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: System.String ToString()

Disassembly:
	0x03405DB4 MOV X19, X0
	0x03405DB8 LDR X2, [X8]
	0x03405DBC BL 0x301B830
	0x03405DC0 MOV X0, X19
	0x03405DC4 LDP X20, X19, [X31 + 0x10]
	0x03405DC8 LDR X30, [X31], #0x20
	0x03405DCC RET
	0x03405DD0 LDR X0, [X0 + 0x18]
	0x03405DD4 RET
	0x03405DD8 STR X1, [X0 + 0x18]
	0x03405DDC RET
	0x03405DE0 STR X30, [X31 - 0x50]!
	0x03405DE4 STP X26, X25, [X31 + 0x10]
	0x03405DE8 STP X24, X23, [X31 + 0x20]
	0x03405DEC STP X22, X21, [X31 + 0x30]
	0x03405DF0 STP X20, X19, [X31 + 0x40]
	0x03405DF4 ADRP X26, 0xFD8000
	0x03405DF8 ADRP X20, 0xCEE000
	0x03405DFC ADRP X25, 0xD28000
	0x03405E00 ADRP X23, 0xCEE000
	0x03405E04 ADRP X24, 0xD28000
	0x03405E08 ADRP X21, 0xD28000
	0x03405E0C ADRP X22, 0xD28000
	0x03405E10 LDR X20, [X20 + 0x988]
	0x03405E14 LDRB W8, [X26 + 0x52C]
	0x03405E18 LDR X25, [X25 + 0xED8]
	0x03405E1C LDR X23, [X23 + 0x838]
	0x03405E20 LDR X24, [X24 + 0xEE0]
	0x03405E24 LDR X21, [X21 + 0xEE8]
	0x03405E28 LDR X22, [X22 + 0xD50]
	0x03405E2C MOV X19, X0
	0x03405E30 TBNZ X8, 0x0, 0x3405E84
	0x03405E34 ADRP X0, 0xD28000
	0x03405E38 LDR X0, [X0 + 0xEE0]
	0x03405E3C BL 0x1C16CF4
	0x03405E40 ADRP X0, 0xCEE000
	0x03405E44 LDR X0, [X0 + 0x838]
	0x03405E48 BL 0x1C16CF4
	0x03405E4C ADRP X0, 0xD28000
	0x03405E50 LDR X0, [X0 + 0xD50]
	0x03405E54 BL 0x1C16CF4
	0x03405E58 ADRP X0, 0xD28000
	0x03405E5C LDR X0, [X0 + 0xEE8]
	0x03405E60 BL 0x1C16CF4
	0x03405E64 ADRP X0, 0xD28000
	0x03405E68 LDR X0, [X0 + 0xED8]
	0x03405E6C BL 0x1C16CF4
	0x03405E70 ADRP X0, 0xCEE000
	0x03405E74 LDR X0, [X0 + 0x988]
	0x03405E78 BL 0x1C16CF4
	0x03405E7C MOVZ W8, 0x1
	0x03405E80 STRB W8, [X26 + 0x52C]
	0x03405E84 LDR X2, [X19 + 0x10]
	0x03405E88 LDR X0, [X20]
	0x03405E8C LDR X1, [X25]
	0x03405E90 LDR X3, [X23]
	0x03405E94 MOV X4, X31
	0x03405E98 BL 0x32277C4
	0x03405E9C MOV X20, X0
	0x03405EA0 MOV X0, X19
	0x03405EA4 BL 0x3405D58
	0x03405EA8 LDR X8, [X23]
	0x03405EAC LDR X2, [X24]
	0x03405EB0 MOV X1, X0
	0x03405EB4 MOV X0, X8
	0x03405EB8 BL 0x226B7E8
	0x03405EBC LDR X1, [X21]
	0x03405EC0 LDR X3, [X22]
	0x03405EC4 MOV X2, X0
	0x03405EC8 MOV X0, X20
	0x03405ECC LDP X20, X19, [X31 + 0x40]
	0x03405ED0 LDP X22, X21, [X31 + 0x30]
	0x03405ED4 LDP X24, X23, [X31 + 0x20]
	0x03405ED8 LDP X26, X25, [X31 + 0x10]
	0x03405EDC MOV X4, X31
	0x03405EE0 LDR X30, [X31], #0x50
	0x03405EE4 B 0x32277C4
	0x03405EE8 MOV X1, X31
	0x03405EEC B 0x33BDD8C
	0x03405EF0 LDR X0, [X0 + 0x10]
	0x03405EF4 RET
	0x03405EF8 STR X1, [X0 + 0x10]
	0x03405EFC RET
	0x03405F00 LDR X0, [X0 + 0x18]
	0x03405F04 RET
	0x03405F08 STR X1, [X0 + 0x18]
	0x03405F0C RET
	0x03405F10 LDR X0, [X0 + 0x20]
	0x03405F14 RET
	0x03405F18 STR X1, [X0 + 0x20]
	0x03405F1C RET
	0x03405F20 LDR X0, [X0 + 0x28]
	0x03405F24 RET
	0x03405F28 STR X1, [X0 + 0x28]
	0x03405F2C RET
	0x03405F30 LDR W0, [X0 + 0x30]
	0x03405F34 RET
	0x03405F38 STR W1, [X0 + 0x30]
	0x03405F3C RET
	0x03405F40 LDR X0, [X0 + 0x38]
	0x03405F44 RET
	0x03405F48 STR X1, [X0 + 0x38]
	0x03405F4C RET
	0x03405F50 LDR X0, [X0 + 0x40]
	0x03405F54 RET
	0x03405F58 STR X1, [X0 + 0x40]
	0x03405F5C RET
	0x03405F60 LDR W0, [X0 + 0x48]
	0x03405F64 RET
	0x03405F68 STR W1, [X0 + 0x48]
	0x03405F6C RET
	0x03405F70 LDR X0, [X0 + 0x50]
	0x03405F74 RET
	0x03405F78 STR X1, [X0 + 0x50]
	0x03405F7C RET
	0x03405F80 LDR X0, [X0 + 0x58]
	0x03405F84 RET
	0x03405F88 STR X1, [X0 + 0x58]
	0x03405F8C RET
	0x03405F90 LDRB W0, [X0 + 0x60]
	0x03405F94 RET
	0x03405F98 AND W8, W1, 0x1
	0x03405F9C STRB W8, [X0 + 0x60]
	0x03405FA0 RET
	0x03405FA4 LDR X0, [X0 + 0x68]
	0x03405FA8 RET
	0x03405FAC STR X1, [X0 + 0x68]
	0x03405FB0 RET
	0x03405FB4 SUB X31, X31, 0x60
	0x03405FB8 STP X30, X27, [X31 + 0x10]
	0x03405FBC STP X26, X25, [X31 + 0x20]
	0x03405FC0 STP X24, X23, [X31 + 0x30]
	0x03405FC4 STP X22, X21, [X31 + 0x40]
	0x03405FC8 STP X20, X19, [X31 + 0x50]
	0x03405FCC ADRP X26, 0xFD8000
	0x03405FD0 ADRP X27, 0xCEE000
	0x03405FD4 ADRP X25, 0xD28000
	0x03405FD8 ADRP X22, 0xCEE000
	0x03405FDC ADRP X24, 0xD28000
	0x03405FE0 ADRP X21, 0xD28000
	0x03405FE4 ADRP X20, 0xD28000
	0x03405FE8 ADRP X23, 0xCEE000
	0x03405FEC LDR X27, [X27 + 0x988]
	0x03405FF0 LDR X25, [X25 + 0xCC8]
	0x03405FF4 LDRB W8, [X26 + 0x52D]
	0x03405FF8 LDR X22, [X22 + 0x838]
	0x03405FFC LDR X24, [X24 + 0xDE0]
	0x03406000 LDR X21, [X21 + 0xEF0]
	0x03406004 LDR X20, [X20 + 0xCD0]
	0x03406008 LDR X23, [X23 + 0x9D0]
	0x0340600C MOV X19, X0
	0x03406010 TBNZ X8, 0x0, 0x34060E8
	0x03406014 ADRP X0, 0xCED000
	0x03406018 LDR X0, [X0 + 0xB58]
	0x0340601C BL 0x1C16CF4
	0x03406020 ADRP X0, 0xCED000
	0x03406024 LDR X0, [X0 + 0x758]
	0x03406028 BL 0x1C16CF4
	0x0340602C ADRP X0, 0xCED000
	0x03406030 LDR X0, [X0 + 0x9D0]
	0x03406034 BL 0x1C16CF4
	0x03406038 ADRP X0, 0xD27000
	0x0340603C LDR X0, [X0 + 0xD88]
	0x03406040 BL 0x1C16CF4
	0x03406044 ADRP X0, 0xD27000
	0x03406048 LDR X0, [X0 + 0xEF0]
	0x0340604C BL 0x1C16CF4
	0x03406050 ADRP X0, 0xD27000
	0x03406054 LDR X0, [X0 + 0xCD8]
	0x03406058 BL 0x1C16CF4
	0x0340605C ADRP X0, 0xCEE000
	0x03406060 LDR X0, [X0 + 0xEE0]
	0x03406064 BL 0x1C16CF4
	0x03406068 ADRP X0, 0xD27000
	0x0340606C LDR X0, [X0 + 0xDE0]
	0x03406070 BL 0x1C16CF4
	0x03406074 ADRP X0, 0xCED000
	0x03406078 LDR X0, [X0 + 0x838]
	0x0340607C BL 0x1C16CF4
	0x03406080 ADRP X0, 0xD27000
	0x03406084 LDR X0, [X0 + 0xD00]
	0x03406088 BL 0x1C16CF4
	0x0340608C ADRP X0, 0xD27000
	0x03406090 LDR X0, [X0 + 0xDE8]
	0x03406094 BL 0x1C16CF4
	0x03406098 ADRP X0, 0xD27000
	0x0340609C LDR X0, [X0 + 0xE70]
	0x034060A0 BL 0x1C16CF4
	0x034060A4 ADRP X0, 0xD27000
	0x034060A8 LDR X0, [X0 + 0xCE0]
	0x034060AC BL 0x1C16CF4
	0x034060B0 ADRP X0, 0xD27000
	0x034060B4 LDR X0, [X0 + 0xCC8]
	0x034060B8 BL 0x1C16CF4
	0x034060BC ADRP X0, 0xCED000
	0x034060C0 LDR X0, [X0 + 0x988]
	0x034060C4 BL 0x1C16CF4
	0x034060C8 ADRP X0, 0xD27000
	0x034060CC LDR X0, [X0 + 0xEF8]
	0x034060D0 BL 0x1C16CF4
	0x034060D4 ADRP X0, 0xD27000
	0x034060D8 LDR X0, [X0 + 0xCD0]
	0x034060DC BL 0x1C16CF4
	0x034060E0 MOVZ W8, 0x1
	0x034060E4 STRB W8, [X26 + 0x52D]
	0x034060E8 LDR X0, [X27]
	0x034060EC LDR X2, [X19 + 0x10]
	0x034060F0 LDR X1, [X25]
	0x034060F4 LDR X3, [X22]
	0x034060F8 MOV X4, X31
	0x034060FC BL 0x32277C4
	0x03406100 LDR X2, [X19 + 0x18]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xFD9000
	011 Move X26, 0xCEF000
	012 Move X24, 0xD29000
	013 Move X22, 0xCEF000
	014 Move X21, 0xD29000
	015 Move X20, 0xD29000
	016 Move X23, 0xCEF000
	017 Move X26, [X26+2440]
	018 Move W8, [X25+1316]
	019 Move X24, [X24+3272]
	020 Move X22, [X22+2104]
	021 Move X21, [X21+3280]
	022 Move X20, [X20+3288]
	023 Move X23, [X23+2512]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {64}
	029 Move X0, 0xCEF000
	030 Move X0, [X0+2904]
	031 Call 0x1C17CF4
	032 Move X0, 0xCEF000
	033 Move X0, [X0+1880]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEF000
	036 Move X0, [X0+2512]
	037 Call 0x1C17CF4
	038 Move X0, 0xD29000
	039 Move X0, [X0+3288]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF0000
	042 Move X0, [X0+3808]
	043 Call 0x1C17CF4
	044 Move X0, 0xCEF000
	045 Move X0, [X0+2104]
	046 Call 0x1C17CF4
	047 Move X0, 0xD29000
	048 Move X0, [X0+3696]
	049 Call 0x1C17CF4
	050 Move X0, 0xD29000
	051 Move X0, [X0+3296]
	052 Call 0x1C17CF4
	053 Move X0, 0xD29000
	054 Move X0, [X0+3272]
	055 Call 0x1C17CF4
	056 Move X0, 0xCEF000
	057 Move X0, [X0+2440]
	058 Call 0x1C17CF4
	059 Move X0, 0xD29000
	060 Move X0, [X0+3280]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X25+1316], W8
	064 Move X0, [X26]
	065 Move X2, [X19+16]
	066 Move X1, [X24]
	067 Move X3, [X22]
	068 Move X4, X31
	069 Call String.Concat, X0, X1, X2, X3
	070 Move X2, [X19+24]
	071 Move X1, [X21]
	072 Move X3, [X22]
	073 Move X4, X31
	074 Call String.Concat, X0, X1, X2, X3
	075 Move X2, [X19+32]
	076 Move X1, [X20]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X8, [X23]
	081 Move X21, X0
	082 Move W1, 4
	083 Move X0, X8
	084 Call 0x1C17D6C
	085 Compare X0, 0
	086 JumpIfEqual {237}
	087 Move X20, X0
	088 Compare X21, 0
	089 JumpIfEqual {96}
	090 Move X8, [X20]
	091 Move X0, X21
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {234}
	096 Move W8, [X20+24]
	097 Compare W8, 0
	098 JumpIfEqual {233}
	099 Move X24, 0xD29000
	100 Move X24, [X24+3696]
	101 Move [X20+32], X21
	102 Move X0, [X24]
	103 Compare X0, 0
	104 JumpIfEqual {111}
	105 Move X8, [X20]
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {234}
	110 Move W8, [X20+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X24]
	113 Move X9, 0xCEF000
	114 Move X9, [X9+1880]
	115 Add X1, X31, 12
	116 Move [X20+40], X8
	117 Move W8, [X19+40]
	118 Move X0, [X9]
	119 Move [X31+12], W8
	120 Call 0x1C17E04
	121 Move X21, X0
	122 Compare X0, 0
	123 JumpIfEqual {130}
	124 Move X8, [X20]
	125 Move X0, X21
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {234}
	130 Move W8, [X20+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X20+48], X21
	133 Move X0, [X22]
	134 Compare X0, 0
	135 JumpIfEqual {142}
	136 Move X8, [X20]
	137 Move X1, [X8+64]
	138 Call 0x1C17E00
	139 Compare X0, 0
	140 JumpIfEqual {234}
	141 Move W8, [X20+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, [X22]
	144 Move X21, 0xCF0000
	145 Move X21, [X21+3808]
	146 Move X0, X20
	147 Move X1, X31
	148 Move [X20+56], X8
	149 Call String.Concat, X0
	150 Move X2, [X19+48]
	151 Move X1, [X21]
	152 Move X3, [X22]
	153 Move X4, X31
	154 Call String.Concat, X0, X1, X2, X3
	155 Move X8, [X23]
	156 Move X21, X0
	157 Move W1, 4
	158 Move X0, X8
	159 Call 0x1C17D6C
	160 Compare X0, 0
	161 JumpIfEqual {237}
	162 Move X20, X0
	163 Compare X21, 0
	164 JumpIfEqual {171}
	165 Move X8, [X20]
	166 Move X0, X21
	167 Move X1, [X8+64]
	168 Call 0x1C17E00
	169 Compare X0, 0
	170 JumpIfEqual {234}
	171 Move W8, [X20+24]
	172 Compare W8, 0
	173 JumpIfEqual {233}
	174 Move X23, 0xD28000
	175 Move X23, [X23+3296]
	176 Move [X20+32], X21
	177 Move X0, [X23]
	178 Compare X0, 0
	179 JumpIfEqual {186}
	180 Move X8, [X20]
	181 Move X1, [X8+64]
	182 Call 0x1C17E00
	183 Compare X0, 0
	184 JumpIfEqual {234}
	185 Move W8, [X20+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X8, [X23]
	188 Move X9, 0xCEE000
	189 Move X9, [X9+2904]
	190 Add X1, X31, 8
	191 Move [X20+40], X8
	192 Move W8, [X19+56]
	193 Move X0, [X9]
	194 Move [X31+8], W8
	195 Call 0x1C17E04
	196 Move X19, X0
	197 Compare X0, 0
	198 JumpIfEqual {205}
	199 Move X8, [X20]
	200 Move X0, X19
	201 Move X1, [X8+64]
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {234}
	205 Move W8, [X20+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X20+48], X19
	208 Move X0, [X22]
	209 Compare X0, 0
	210 JumpIfEqual {217}
	211 Move X8, [X20]
	212 Move X1, [X8+64]
	213 Call 0x1C17E00
	214 Compare X0, 0
	215 JumpIfEqual {234}
	216 Move W8, [X20+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, [X22]
	219 Move X0, X20
	220 Move X1, X31
	221 Move [X20+56], X8
	222 Call String.Concat, X0
	223 Move X20, [X31+64]
	224 Move X19, [X31+72]
	225 Move X22, [X31+48]
	226 Move X21, [X31+56]
	227 Move X24, [X31+32]
	228 Move X23, [X31+40]
	229 Move X26, [X31+16]
	230 Move X25, [X31+24]
	231 Move X30, [X31+80]
	232 Return X0
	233 Call 0x1C17F28
	234 Call 0x1C17F44
	235 Move X1, X31
	236 Call 0x1C17DEC
	237 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03406104 LDR X1, [X24]
	0x03406108 LDR X3, [X22]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

