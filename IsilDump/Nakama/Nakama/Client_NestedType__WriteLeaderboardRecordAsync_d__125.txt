Type: Nakama.Client/<WriteLeaderboardRecordAsync>d__125

Method: System.Void MoveNext()

Disassembly:
	0x03470374 BL 0x1C16F20
	0x03470378 BL 0x1C16F20
	0x0347037C BL 0x1C16F20
	0x03470380 BL 0x1C16F20
	0x03470384 BL 0x1C16F20
	0x03470388 BL 0x1C16F20
	0x0347038C BL 0x1C16F20
	0x03470390 BL 0x1C16F20
	0x03470394 BL 0x1C16F20
	0x03470398 B 0x3470448
	0x0347039C B 0x3470448
	0x034703A0 B 0x3470448
	0x034703A4 B 0x3470448
	0x034703A8 B 0x3470448
	0x034703AC B 0x3470448
	0x034703B0 B 0x3470448
	0x034703B4 B 0x3470448
	0x034703B8 B 0x3470448
	0x034703BC B 0x3470448
	0x034703C0 B 0x3470448
	0x034703C4 B 0x3470448
	0x034703C8 B 0x3470448
	0x034703CC B 0x3470448
	0x034703D0 B 0x3470448
	0x034703D4 B 0x3470448
	0x034703D8 B 0x3470448
	0x034703DC B 0x3470448
	0x034703E0 B 0x3470448
	0x034703E4 B 0x3470448
	0x034703E8 B 0x3470448
	0x034703EC B 0x3470448
	0x034703F0 B 0x3470448
	0x034703F4 B 0x3470448
	0x034703F8 B 0x3470448
	0x034703FC B 0x3470448
	0x03470400 B 0x3470448
	0x03470404 B 0x3470448
	0x03470408 B 0x3470448
	0x0347040C B 0x3470448
	0x03470410 B 0x3470448
	0x03470414 B 0x3470448
	0x03470418 B 0x3470448
	0x0347041C B 0x3470448
	0x03470420 B 0x3470448
	0x03470424 B 0x3470448
	0x03470428 B 0x3470448
	0x0347042C B 0x3470448
	0x03470430 B 0x3470448
	0x03470434 B 0x3470448
	0x03470438 B 0x3470448
	0x0347043C B 0x3470448
	0x03470440 B 0x3470448
	0x03470444 B 0x3470448
	0x03470448 MOV X20, X0
	0x0347044C CMP W1, 0x1
	0x03470450 B.NE 0x34704F0
	0x03470454 MOV X0, X20
	0x03470458 BL 0x3EB1AD0
	0x0347045C MOV X20, X0
	0x03470460 ADRP X0, 0xC83000
	0x03470464 LDR X0, [X0 + 0x7D0]
	0x03470468 BL 0x1C16D08
	0x0347046C LDR X8, [X20]
	0x03470470 LDR X1, [X8]
	0x03470474 BL 0x1C17270
	0x03470478 TBZ X0, 0x0, 0x34704C8
	0x0347047C LDR X20, [X20]
	0x03470480 BL 0x3EB1AE0
	0x03470484 MOVN W8, 0x1
	0x03470488 STR X31, [X19 + 0x40]
	0x0347048C STR W8, [X19], #0x8
	0x03470490 ADRP X0, 0xCBE000
	0x03470494 LDR X0, [X0 + 0x6B8]
	0x03470498 BL 0x1C16D08
	0x0347049C LDR W8, [X0 + 0xE0]
	0x034704A0 CBNZ W8, 0x34704A8
	0x034704A4 BL 0x1C16DFC
	0x034704A8 ADRP X0, 0xCBF000
	0x034704AC LDR X0, [X0 + 0x578]
	0x034704B0 BL 0x1C16D08
	0x034704B4 MOV X2, X0
	0x034704B8 MOV X0, X19
	0x034704BC MOV X1, X20
	0x034704C0 BL 0x26324C8
	0x034704C4 B 0x3470324
	0x034704C8 MOVZ W0, 0x8
	0x034704CC BL 0x3EB1AF0
	0x034704D0 LDR X8, [X20]
	0x034704D4 STR X8, [X0]
	0x034704D8 ADRP X1, 0xA44000
	0x034704DC ADD X1, X1, 0xE58
	0x034704E0 MOV X2, X31
	0x034704E4 BL 0x3EB1B00
	0x034704E8 MOV X20, X0
	0x034704EC BL 0x3EB1AE0
	0x034704F0 MOV X0, X20
	0x034704F4 BL 0x1D2C690
	0x034704F8 BL 0x1990590
	0x034704FC STR X30, [X31 - 0x30]!
	0x03470500 STP X22, X21, [X31 + 0x10]
	0x03470504 STP X20, X19, [X31 + 0x20]
	0x03470508 ADRP X22, 0xF6D000
	0x0347050C ADRP X21, 0xCBE000
	0x03470510 LDRB W8, [X22 + 0x7EC]
	0x03470514 LDR X21, [X21 + 0x6B8]
	0x03470518 MOV X19, X1
	0x0347051C MOV X20, X0
	0x03470520 TBNZ X8, 0x0, 0x3470544
	0x03470524 ADRP X0, 0xCBF000
	0x03470528 LDR X0, [X0 + 0x580]
	0x0347052C BL 0x1C16CF4
	0x03470530 ADRP X0, 0xCBE000
	0x03470534 LDR X0, [X0 + 0x6B8]
	0x03470538 BL 0x1C16CF4
	0x0347053C MOVZ W8, 0x1
	0x03470540 STRB W8, [X22 + 0x7EC]
	0x03470544 LDR X0, [X21]
	0x03470548 ADRP X21, 0xCBF000
	0x0347054C LDR W8, [X0 + 0xE0]
	0x03470550 LDR X21, [X21 + 0x580]
	0x03470554 CBNZ W8, 0x347055C
	0x03470558 BL 0x1C16DFC
	0x0347055C LDR X2, [X21]
	0x03470560 ADD X0, X20, 0x8
	0x03470564 MOV X1, X19
	0x03470568 LDP X20, X19, [X31 + 0x20]
	0x0347056C LDP X22, X21, [X31 + 0x10]
	0x03470570 LDR X30, [X31], #0x30
	0x03470574 B 0x2632228
	0x03470578 SUB X31, X31, 0x70
	0x0347057C STP X30, X25, [X31 + 0x30]
	0x03470580 STP X24, X23, [X31 + 0x40]
	0x03470584 STP X22, X21, [X31 + 0x50]
	0x03470588 STP X20, X19, [X31 + 0x60]
	0x0347058C ADRP X20, 0xF6D000
	0x03470590 LDRB W8, [X20 + 0x7ED]
	0x03470594 MOV X19, X0
	0x03470598 TBNZ X8, 0x0, 0x3470688
	0x0347059C ADRP X0, 0xCC0000
	0x034705A0 LDR X0, [X0 + 0x798]
	0x034705A4 BL 0x1C16CF4
	0x034705A8 ADRP X0, 0xCC0000
	0x034705AC LDR X0, [X0 + 0x7A0]
	0x034705B0 BL 0x1C16CF4
	0x034705B4 ADRP X0, 0xCBF000
	0x034705B8 LDR X0, [X0 + 0x528]
	0x034705BC BL 0x1C16CF4
	0x034705C0 ADRP X0, 0xCBE000
	0x034705C4 LDR X0, [X0 + 0x5F8]
	0x034705C8 BL 0x1C16CF4
	0x034705CC ADRP X0, 0xC85000
	0x034705D0 LDR X0, [X0 + 0xA10]
	0x034705D4 BL 0x1C16CF4
	0x034705D8 ADRP X0, 0xC84000
	0x034705DC LDR X0, [X0 + 0x9F0]
	0x034705E0 BL 0x1C16CF4
	0x034705E4 ADRP X0, 0xCC0000
	0x034705E8 LDR X0, [X0 + 0x700]
	0x034705EC BL 0x1C16CF4
	0x034705F0 ADRP X0, 0xC84000
	0x034705F4 LDR X0, [X0 + 0x818]
	0x034705F8 BL 0x1C16CF4
	0x034705FC ADRP X0, 0xCBF000
	0x03470600 LDR X0, [X0 + 0x7C8]
	0x03470604 BL 0x1C16CF4
	0x03470608 ADRP X0, 0xCBF000
	0x0347060C LDR X0, [X0 + 0x7D0]
	0x03470610 BL 0x1C16CF4
	0x03470614 ADRP X0, 0xCC0000
	0x03470618 LDR X0, [X0 + 0x708]
	0x0347061C BL 0x1C16CF4
	0x03470620 ADRP X0, 0xCC0000
	0x03470624 LDR X0, [X0 + 0x710]
	0x03470628 BL 0x1C16CF4
	0x0347062C ADRP X0, 0xC84000
	0x03470630 LDR X0, [X0 + 0x830]
	0x03470634 BL 0x1C16CF4
	0x03470638 ADRP X0, 0xC84000
	0x0347063C LDR X0, [X0 + 0x838]
	0x03470640 BL 0x1C16CF4
	0x03470644 ADRP X0, 0xCC0000
	0x03470648 LDR X0, [X0 + 0x718]
	0x0347064C BL 0x1C16CF4
	0x03470650 ADRP X0, 0xC84000
	0x03470654 LDR X0, [X0 + 0x840]
	0x03470658 BL 0x1C16CF4
	0x0347065C ADRP X0, 0xCC0000
	0x03470660 LDR X0, [X0 + 0x720]
	0x03470664 BL 0x1C16CF4
	0x03470668 ADRP X0, 0xCC0000
	0x0347066C LDR X0, [X0 + 0x7A8]
	0x03470670 BL 0x1C16CF4
	0x03470674 ADRP X0, 0xCC0000
	0x03470678 LDR X0, [X0 + 0x7B0]
	0x0347067C BL 0x1C16CF4
	0x03470680 MOVZ W8, 0x1
	0x03470684 STRB W8, [X20 + 0x7ED]
	0x03470688 STP X31, X31, [X31 + 0x20]
	0x0347068C STR X31, [X31 + 0x18]
	0x03470690 ADRP X25, 0xCBE000
	0x03470694 LDR W8, [X19]
	0x03470698 LDR X20, [X19 + 0x20]
	0x0347069C LDR X25, [X25 + 0x5F8]
	0x034706A0 CBZ W8, 0x34706C4
	0x034706A4 CMP W8, 0x1
	0x034706A8 B.NE 0x34706F0
	0x034706AC LDR X8, [X19 + 0x78]
	0x034706B0 MOVN W9, 0x0
	0x034706B4 STR X8, [X31 + 0x18]
	0x034706B8 STR X31, [X19 + 0x78]
	0x034706BC STR W9, [X19]
	0x034706C0 B 0x3470A10
	0x034706C4 LDR X8, [X19 + 0x70]
	0x034706C8 MOVN W9, 0x0
	0x034706CC STR X8, [X31 + 0x20]
	0x034706D0 STR X31, [X19 + 0x70]
	0x034706D4 STR W9, [X19]
	0x034706D8 ADRP X8, 0xC84000
	0x034706DC LDR X8, [X8 + 0x830]
	0x034706E0 ADD X0, X31, 0x20
	0x034706E4 LDR X1, [X8]
	0x034706E8 BL 0x2677474
	0x034706EC B 0x3470930
	0x034706F0 ADRP X8, 0xCC0000
	0x034706F4 LDR X8, [X8 + 0x7B0]
	0x034706F8 LDR X0, [X8]
	0x034706FC BL 0x1C16F10
	0x03470700 MOV X21, X0
	0x03470704 MOV X1, X31
	0x03470708 BL 0x344776C
	0x0347070C STR X21, [X19 + 0x68]
	0x03470710 CBZ X21, 0x3470AC8
	0x03470714 LDR X8, [X19 + 0x20]
	0x03470718 STR X8, [X21 + 0x10]
	0x0347071C LDR X8, [X19 + 0x28]
	0x03470720 STR X8, [X21 + 0x18]
	0x03470724 LDR V0, [X19 + 0x3]
	0x03470728 STR V0, [X21 + 0x2]
	0x0347072C LDR V0, [X19 + 0x4]
	0x03470730 STR V0, [X21 + 0x3]
	0x03470734 LDR W8, [X19 + 0x50]
	0x03470738 STR W8, [X21 + 0x40]
	0x0347073C LDR X8, [X19 + 0x58]
	0x03470740 STR X8, [X21 + 0x48]
	0x03470744 CBZ X20, 0x3470ACC
	0x03470748 LDRB W8, [X20 + 0x10]
	0x0347074C CBZ W8, 0x3470934
	0x03470750 LDR X8, [X19 + 0x68]
	0x03470754 CBZ X8, 0x3470AD0
	0x03470758 LDR X21, [X8 + 0x18]
	0x0347075C CBZ X21, 0x3470AD4
	0x03470760 ADRP X23, 0xC84000
	0x03470764 LDR X8, [X21]
	0x03470768 LDR X23, [X23 + 0x818]
	0x0347076C LDRH W9, [X8 + 0x12E]
	0x03470770 LDR X1, [X23]
	0x03470774 CBZ X9, 0x3470798
	0x03470778 LDR X10, [X8 + 0xB0]
	0x0347077C ADD X10, X10, 0x8
	0x03470780 LDUR X11, [X10 - 0x8]
	0x03470784 CMP X11, X1
	0x03470788 B.EQ 0x34707A8
	0x0347078C SUBS X9, X9, 0x1
	0x03470790 ADD X10, X10, 0x10
	0x03470794 B.NE 0x3470780
	0x03470798 MOVZ W2, 0x7
	0x0347079C MOV X0, X21
	0x034707A0 BL 0x1C5C788
	0x034707A4 B 0x34707B8
	0x034707A8 LDR W9, [X10]
	0x034707AC ADD W9, W9, 0x7
	0x034707B0 ADD X8, X8, W9, 0x4, SXTW
	0x034707B4 ADD X0, X8, 0x138
	0x034707B8 LDP X8, X1, [X0]
	0x034707BC MOV X0, X21
	0x034707C0 BLR X8
	0x034707C4 MOV X1, X31
	0x034707C8 BL 0x32277A8
	0x034707CC TBNZ X0, 0x0, 0x3470930
	0x034707D0 LDR X8, [X19 + 0x68]
	0x034707D4 CBZ X8, 0x3470AD8
	0x034707D8 ADRP X9, 0xC84000
	0x034707DC LDR X9, [X9 + 0x9F0]
	0x034707E0 LDR X21, [X8 + 0x18]
	0x034707E4 LDR X0, [X9]
	0x034707E8 LDR W9, [X0 + 0xE0]
	0x034707EC CBNZ W9, 0x34707F4
	0x034707F0 BL 0x1C16DFC
	0x034707F4 MOV X0, X31
	0x034707F8 BL 0x33616A4
	0x034707FC ADRP X22, 0xC85000
	0x03470800 LDR X22, [X22 + 0xA10]
	0x03470804 MOV X8, X0
	0x03470808 STR X8, [X31 + 0x28]
	0x0347080C LDR X0, [X22]
	0x03470810 LDR W8, [X0 + 0xE0]
	0x03470814 CBNZ W8, 0x3470820
	0x03470818 BL 0x1C16DFC
	0x0347081C LDR X0, [X22]
	0x03470820 LDR X8, [X0 + 0xB8]
	0x03470824 LDR X1, [X8]
	0x03470828 ADD X0, X31, 0x28
	0x0347082C MOV X2, X31
	0x03470830 BL 0x335FC68
	0x03470834 CBZ X21, 0x3470ADC
	0x03470838 LDR X8, [X21]
	0x0347083C LDR X1, [X23]
	0x03470840 MOV X22, X0
	0x03470844 LDRH W9, [X8 + 0x12E]
	0x03470848 CBZ X9, 0x347086C
	0x0347084C LDR X10, [X8 + 0xB0]
	0x03470850 ADD X10, X10, 0x8
	0x03470854 LDUR X11, [X10 - 0x8]
	0x03470858 CMP X11, X1
	0x0347085C B.EQ 0x347087C
	0x03470860 SUBS X9, X9, 0x1
	0x03470864 ADD X10, X10, 0x10
	0x03470868 B.NE 0x3470854
	0x0347086C MOVZ W2, 0xB
	0x03470870 MOV X0, X21
	0x03470874 BL 0x1C5C788
	0x03470878 B 0x347088C
	0x0347087C LDR W9, [X10]
	0x03470880 ADD W9, W9, 0xB
	0x03470884 ADD X8, X8, W9, 0x4, SXTW
	0x03470888 ADD X0, X8, 0x138
	0x0347088C LDP X8, X2, [X0]
	0x03470890 MOV X0, X21
	0x03470894 MOV X1, X22
	0x03470898 BLR X8
	0x0347089C TBZ X0, 0x0, 0x3470930
	0x034708A0 LDR X8, [X19 + 0x68]
	0x034708A4 CBZ X8, 0x3470AE0
	0x034708A8 LDR X1, [X8 + 0x18]
	0x034708AC LDR X3, [X19 + 0x60]
	0x034708B0 LDR X4, [X8 + 0x48]
	0x034708B4 MOV X0, X20
	0x034708B8 MOV X2, X31
	0x034708BC MOV X5, X31
	0x034708C0 BL 0x34440A8
	0x034708C4 CBZ X0, 0x3470AE4
	0x034708C8 ADRP X8, 0xC84000
	0x034708CC LDR X8, [X8 + 0x840]
	0x034708D0 LDR X1, [X8]
	0x034708D4 BL 0x269F5D0
	0x034708D8 ADRP X8, 0xC84000
	0x034708DC LDR X8, [X8 + 0x838]
	0x034708E0 STR X0, [X31 + 0x20]
	0x034708E4 LDR X1, [X8]
	0x034708E8 ADD X0, X31, 0x20
	0x034708EC BL 0x2677430
	0x034708F0 TBNZ X0, 0x0, 0x34706D8
	0x034708F4 STR W31, [X19]
	0x034708F8 LDR X8, [X31 + 0x20]
	0x034708FC STR X8, [X19 + 0x70]
	0x03470900 LDR X0, [X25]
	0x03470904 LDR W8, [X0 + 0xE0]
	0x03470908 CBNZ W8, 0x3470910
	0x0347090C BL 0x1C16DFC
	0x03470910 ADRP X8, 0xCC0000
	0x03470914 LDR X8, [X8 + 0x7A0]
	0x03470918 ADD X0, X19, 0x8
	0x0347091C LDR X3, [X8]
	0x03470920 ADD X1, X31, 0x20
	0x03470924 MOV X2, X19
	0x03470928 BL 0x1FBEA54
	0x0347092C B 0x3470AA0
	0x03470930 CBZ X20, 0x3470AC4
	0x03470934 ADRP X8, 0xCC0000
	0x03470938 LDR X8, [X8 + 0x700]
	0x0347093C LDR X21, [X20 + 0x58]
	0x03470940 LDR X23, [X19 + 0x68]
	0x03470944 LDR X0, [X8]
	0x03470948 BL 0x1C16F10
	0x0347094C ADRP X8, 0xCC0000
	0x03470950 LDR X8, [X8 + 0x7A8]
	0x03470954 MOV X22, X0
	0x03470958 LDR X2, [X8]
	0x0347095C MOV X1, X23
	0x03470960 MOV X3, X31
	0x03470964 BL 0x2D27AA8
	0x03470968 LDR X8, [X19 + 0x68]
	0x0347096C CBZ X8, 0x3470AB8
	0x03470970 ADRP X9, 0xCBF000
	0x03470974 LDR X23, [X19 + 0x60]
	0x03470978 LDR X9, [X9 + 0x7C8]
	0x0347097C CBNZ X23, 0x3470984
	0x03470980 LDR X23, [X20 + 0x18]
	0x03470984 LDR X20, [X8 + 0x18]
	0x03470988 LDR X1, [X8 + 0x48]
	0x0347098C LDR X2, [X9]
	0x03470990 STP X31, X31, [X31 + 0x8]
	0x03470994 ADD X0, X31, 0x8
	0x03470998 BL 0x242E368
	0x0347099C ADRP X8, 0xCBF000
	0x034709A0 LDR X8, [X8 + 0x7D0]
	0x034709A4 LDR X0, [X8]
	0x034709A8 BL 0x1C16F10
	0x034709AC LDP X3, X4, [X31 + 0x8]
	0x034709B0 MOV X24, X0
	0x034709B4 MOV X1, X20
	0x034709B8 MOV X2, X23
	0x034709BC BL 0x3465404
	0x034709C0 CBZ X21, 0x3470ABC
	0x034709C4 ADRP X8, 0xCC0000
	0x034709C8 LDR X8, [X8 + 0x708]
	0x034709CC LDR X3, [X8]
	0x034709D0 MOV X0, X21
	0x034709D4 MOV X1, X22
	0x034709D8 MOV X2, X24
	0x034709DC BL 0x2243230
	0x034709E0 CBZ X0, 0x3470AC0
	0x034709E4 ADRP X8, 0xCC0000
	0x034709E8 LDR X8, [X8 + 0x720]
	0x034709EC LDR X1, [X8]
	0x034709F0 BL 0x269F5D0
	0x034709F4 ADRP X8, 0xCC0000
	0x034709F8 LDR X8, [X8 + 0x718]
	0x034709FC STR X0, [X31 + 0x18]
	0x03470A00 LDR X1, [X8]
	0x03470A04 ADD X0, X31, 0x18
	0x03470A08 BL 0x2677430

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF6E000
	011 Move W8, [X20+2025]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCC1000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC1000
	021 Move X0, [X0+1784]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC0000
	024 Move X0, [X0+1320]
	025 Call 0x1C17CF4
	026 Move X0, 0xCBF000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move X0, 0xC86000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC85000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC1000
	036 Move X0, [X0+1792]
	037 Call 0x1C17CF4
	038 Move X0, 0xC85000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC0000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC0000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC1000
	048 Move X0, [X0+1800]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC1000
	051 Move X0, [X0+1808]
	052 Call 0x1C17CF4
	053 Move X0, 0xC85000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC85000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC1000
	060 Move X0, [X0+1816]
	061 Call 0x1C17CF4
	062 Move X0, 0xC85000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC1000
	066 Move X0, [X0+1824]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC1000
	069 Move X0, [X0+1832]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC1000
	072 Move X0, [X0+1840]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2025], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCBF000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1528]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+120]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+120], X31
	092 Move [X19], W9
	093 Move X8, [X19+112]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+112], X31
	099 Move [X19], W9
	100 Move X8, 0xC85000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCC1000
	106 Move X8, [X8+1840]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass125_0..ctor, X0
	112 Move [X19+104], X21
	113 Compare X21, 0
	114 JumpIfEqual {386}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move V0, [X19+3]
	120 Move [X21+2], V0
	121 Move V0, [X19+4]
	122 Move [X21+3], V0
	123 Move W8, [X19+80]
	124 Move [X21+64], W8
	125 Move X8, [X19+88]
	126 Move [X21+72], X8
	127 Compare X20, 0
	128 JumpIfEqual {387}
	129 Move W8, [X20+16]
	130 Compare W8, 0
	131 JumpIfEqual {269}
	132 Move X8, [X19+104]
	133 Compare X8, 0
	134 JumpIfEqual {388}
	135 Move X21, [X8+24]
	136 Compare X21, 0
	137 JumpIfEqual {389}
	138 Move X23, 0xC85000
	139 Move X8, [X21]
	140 Move X23, [X23+2072]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X23]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 7
	152 Move X0, X21
	153 Call 0x1C5D788
	154 Move W9, [X10]
	155 Add W9, W9, 7
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X21
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X1, X31
	163 Call String.IsNullOrEmpty, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {267}
	168 Move X8, [X19+104]
	169 Compare X8, 0
	170 JumpIfEqual {390}
	171 Move X9, 0xC85000
	172 Move X9, [X9+2544]
	173 Move X21, [X8+24]
	174 Move X0, [X9]
	175 Move W9, [X0+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X31
	180 Call DateTime.get_UtcNow
	181 Move X22, 0xC86000
	182 Move X22, [X22+2576]
	183 Move X8, X0
	184 Move [X31+40], X8
	185 Move X0, [X22]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {191}
	189 Call 0x1C17DFC
	190 Move X0, [X22]
	191 Move X8, [X0+184]
	192 Move X1, [X8]
	193 Add X0, X31, 40
	194 Move X2, X31
	195 Call DateTime.Add, X0, X1
	196 Compare X21, 0
	197 JumpIfEqual {391}
	198 Move X8, [X21]
	199 Move X1, [X23]
	200 Move X22, X0
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 11
	211 Move X0, X21
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 11
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X2, [X0+8]
	219 Move X0, X21
	220 Move X1, X22
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {267}
	226 Move X8, [X19+104]
	227 Compare X8, 0
	228 JumpIfEqual {392}
	229 Move X1, [X8+24]
	230 Move X3, [X19+96]
	231 Move X4, [X8+72]
	232 Move X0, X20
	233 Move X2, X31
	234 Move X5, X31
	235 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	236 Compare X0, 0
	237 JumpIfEqual {393}
	238 Move X8, 0xC85000
	239 Move X8, [X8+2112]
	240 Move X1, [X8]
	241 Call Task`1<Object>.GetAwaiter, X0
	242 Move X8, 0xC85000
	243 Move X8, [X8+2104]
	244 Move [X31+32], X0
	245 Move X1, [X8]
	246 Add X0, X31, 32
	247 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {100}
	252 Move [X19], W31
	253 Move X8, [X31+32]
	254 Move [X19+112], X8
	255 Move X0, [X25]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X8, 0xCC1000
	261 Move X8, [X8+1784]
	262 Add X0, X19, 8
	263 Move X3, [X8]
	264 Add X1, X31, 32
	265 Move X2, X19
	266 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	267 Compare X20, 0
	268 JumpIfEqual {385}
	269 Move X8, 0xCC1000
	270 Move X8, [X8+1792]
	271 Move X21, [X20+88]
	272 Move X23, [X19+104]
	273 Move X0, [X8]
	274 Call 0x1C17F10
	275 Move X8, 0xCC1000
	276 Move X8, [X8+1832]
	277 Move X22, X0
	278 Move X2, [X8]
	279 Move X1, X23
	280 Move X3, X31
	281 Call Func`1<Object>..ctor, X0, X1, X2
	282 Move X8, [X19+104]
	283 Compare X8, 0
	284 JumpIfEqual {382}
	285 Move X9, 0xCC0000
	286 Move X23, [X19+96]
	287 Move X9, [X9+1992]
	288 Compare X23, 0
	289 JumpIfNotEqual {291}
	290 Move X23, [X20+24]
	291 Move X20, [X8+24]
	292 Move X1, [X8+72]
	293 Move X2, [X9]
	294 Move [X31+8], X31
	295 Move [X31+16], X31
	296 Add X0, X31, 8
	297 Call Nullable`1<CancellationToken>..ctor, X0, X1
	298 Move X8, 0xCC0000
	299 Move X8, [X8+2000]
	300 Move X0, [X8]
	301 Call 0x1C17F10
	302 Move X3, [X31+8]
	303 Move X4, [X31+16]
	304 Move X24, X0
	305 Move X1, X20
	306 Move X2, X23
	307 Call RetryHistory..ctor, X0, X1, X2, X3
	308 Compare X21, 0
	309 JumpIfEqual {383}
	310 Move X8, 0xCC1000
	311 Move X8, [X8+1800]
	312 Move X3, [X8]
	313 Move X0, X21
	314 Move X1, X22
	315 Move X2, X24
	316 Call 0x2244230, X0, X1, X2
	317 Compare X0, 0
	318 JumpIfEqual {384}
	319 Move X8, 0xCC1000
	320 Move X8, [X8+1824]
	321 Move X1, [X8]
	322 Call Task`1<Object>.GetAwaiter, X0
	323 Move X8, 0xCC1000
	324 Move X8, [X8+1816]
	325 Move [X31+24], X0
	326 Move X1, [X8]
	327 Add X0, X31, 24
	328 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {356}
	333 Move X8, 0xCC1000
	334 Move X8, [X8+1808]
	335 Add X0, X31, 24
	336 Move X1, [X8]
	337 Call TaskAwaiter`1<Object>.GetResult, X0
	338 Move TEMP, 1
	339 Not TEMP
	340 Move W8, TEMP
	341 Move [X19], W8
	342 Move [X19+104], X31
	343 Move X20, X0
	344 Move X0, [X25]
	345 Move X21, 0xCC0000
	346 Add X19, X19, 8
	347 Move W8, [X0+224]
	348 Move X21, [X21+1320]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1C17DFC
	352 Move X2, [X21]
	353 Move X0, X19
	354 Move X1, X20
	355 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	356 Move W8, 1
	357 Move [X19], W8
	358 Move X8, [X31+24]
	359 Move [X19+120], X8
	360 Move X0, [X25]
	361 Move W8, [X0+224]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X8, 0xCC1000
	366 Move X8, [X8+1776]
	367 Add X0, X19, 8
	368 Move X3, [X8]
	369 Add X1, X31, 24
	370 Move X2, X19
	371 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	372 Move X20, [X31+96]
	373 Move X19, [X31+104]
	374 Move X22, [X31+80]
	375 Move X21, [X31+88]
	376 Move X24, [X31+64]
	377 Move X23, [X31+72]
	378 Move X30, [X31+48]
	379 Move X25, [X31+56]
	380 Add X31, X31, 112
	381 Return 
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Move X20, X0
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X0, X20
	397 Call 0x3EB2AD0
	398 Move X20, X0
	399 Move X0, 0xC84000
	400 Move X0, [X0+2000]
	401 Call 0x1C17D08
	402 Move X8, [X20]
	403 Move X1, [X8]
	404 Call 0x1C18270
	405 Move TEMP, X0
	406 And TEMP, TEMP, 1
	407 Compare TEMP, 1
	408 JumpIfNotEqual {430}
	409 Move X20, [X20]
	410 Call 0x3EB2AE0
	411 Move TEMP, 1
	412 Not TEMP
	413 Move W8, TEMP
	414 Move [X19+104], X31
	415 Move [X19+8], W8
	416 Move X0, 0xCBF000
	417 Move X0, [X0+1528]
	418 Call 0x1C17D08
	419 Move W8, [X0+224]
	420 Compare W8, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move X0, 0xCC0000
	424 Move X0, [X0+1352]
	425 Call 0x1C17D08
	426 Move X2, X0
	427 Move X0, X19
	428 Move X1, X20
	429 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	430 Move W0, 8
	431 Call 0x3EB2AF0
	432 Move X8, [X20]
	433 Move [X0], X8
	434 Move X1, 0xA45000
	435 Add X1, X1, 3672
	436 Move X2, X31
	437 Call 0x3EB2B00
	438 Move X20, X0
	439 Call 0x3EB2AE0
	440 Move X0, X20
	441 Call 0x1D2D690
	442 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03470A0C TBZ X0, 0x0, 0x3470A64
	0x03470A10 ADRP X8, 0xCC0000
	0x03470A14 LDR X8, [X8 + 0x710]
	0x03470A18 ADD X0, X31, 0x18
	0x03470A1C LDR X1, [X8]
	0x03470A20 BL 0x2677474
	0x03470A24 MOVN W8, 0x1
	0x03470A28 STR W8, [X19]
	0x03470A2C STR X31, [X19 + 0x68]
	0x03470A30 MOV X20, X0
	0x03470A34 LDR X0, [X25]
	0x03470A38 ADRP X21, 0xCBF000
	0x03470A3C ADD X19, X19, 0x8
	0x03470A40 LDR W8, [X0 + 0xE0]
	0x03470A44 LDR X21, [X21 + 0x528]
	0x03470A48 CBNZ W8, 0x3470A50
	0x03470A4C BL 0x1C16DFC
	0x03470A50 LDR X2, [X21]
	0x03470A54 MOV X0, X19
	0x03470A58 MOV X1, X20
	0x03470A5C BL 0x26322B0
	0x03470A60 B 0x3470AA0
	0x03470A64 MOVZ W8, 0x1
	0x03470A68 STR W8, [X19]
	0x03470A6C LDR X8, [X31 + 0x18]
	0x03470A70 STR X8, [X19 + 0x78]
	0x03470A74 LDR X0, [X25]
	0x03470A78 LDR W8, [X0 + 0xE0]
	0x03470A7C CBNZ W8, 0x3470A84
	0x03470A80 BL 0x1C16DFC
	0x03470A84 ADRP X8, 0xCC0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF6E000
	007 Move X21, 0xCBF000
	008 Move W8, [X22+2026]
	009 Move X21, [X21+1528]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC0000
	017 Move X0, [X0+1360]
	018 Call 0x1C17CF4
	019 Move X0, 0xCBF000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2026], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1360]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

