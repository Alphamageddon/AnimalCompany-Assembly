Type: Nakama.RetryInvoker

Method: System.Void .ctor(Nakama.TransientExceptionDelegate del)

Disassembly:
	0x03479138 LDR X1, [X29]
	0x0347913C MOV X21, X0
	0x03479140 LDRH W9, [X8 + 0x12E]
	0x03479144 CBZ X9, 0x3479168
	0x03479148 LDR X10, [X8 + 0xB0]
	0x0347914C ADD X10, X10, 0x8
	0x03479150 LDUR X11, [X10 - 0x8]
	0x03479154 CMP X11, X1
	0x03479158 B.EQ 0x3479178
	0x0347915C SUBS X9, X9, 0x1
	0x03479160 ADD X10, X10, 0x10
	0x03479164 B.NE 0x3479150
	0x03479168 MOV X0, X20
	0x0347916C MOV W2, W31
	0x03479170 BL 0x1C5C788
	0x03479174 B 0x3479184
	0x03479178 LDRSW X9, [X10]
	0x0347917C ADD X8, X8, X9, 0x4, LSL
	0x03479180 ADD X0, X8, 0x138
	0x03479184 LDP X8, X1, [X0]
	0x03479188 MOV X0, X20
	0x0347918C BLR X8
	0x03479190 TBZ X0, 0x0, 0x3479264
	0x03479194 LDR X8, [X20]
	0x03479198 LDR X1, [X26]
	0x0347919C LDRH W9, [X8 + 0x12E]
	0x034791A0 CBZ X9, 0x34791C4
	0x034791A4 LDR X10, [X8 + 0xB0]
	0x034791A8 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfEqual {15}
	010 Move [X20+16], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Move X0, 0xC83000
	016 Move X0, [X0+1400]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xCB8000
	021 Move X0, [X0+2752]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call ArgumentException..ctor, X0, X1
	027 Move X0, 0xCB8000
	028 Move X0, [X0+2760]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Threading.Tasks.Task`1<T> InvokeWithRetry(System.Func`1<System.Threading.Tasks.Task`1<T>> request, Nakama.RetryHistory history)

Disassembly:
	0x02244230 MOV X0, X20
	0x02244234 MOV X1, X31
	0x02244238 BL 0x338C698
	0x0224423C CBZ X0, 0x22442D0
	0x02244240 MOV X1, X31
	0x02244244 BL 0x33970C4
	0x02244248 TBZ X0, 0x0, 0x224429C
	0x0224424C LDR X0, [X21]
	0x02244250 LDR X8, [X19 + 0x38]
	0x02244254 LDR W9, [X0 + 0xE0]
	0x02244258 LDR X19, [X8]
	0x0224425C CBNZ W9, 0x2244264
	0x02244260 BL 0x1C16DFC
	0x02244264 MOV X0, X19
	0x02244268 MOV X1, X31
	0x0224426C BL 0x338C698
	0x02244270 CBZ X0, 0x22442C0
	0x02244274 ADRP X8, 0x1ED8000
	0x02244278 LDR X8, [X8 + 0x4E8]
	0x0224427C LDR X9, [X0]
	0x02244280 LDR X8, [X8]
	0x02244284 LDRB W11, [X9 + 0x130]
	0x02244288 LDRB W10, [X8 + 0x130]
	0x0224428C CMP W11, W10
	0x02244290 B.CS 0x22442AC
	0x02244294 MOV X0, X31
	0x02244298 B 0x22442C0
	0x0224429C LDP X20, X19, [X31 + 0x10]
	0x022442A0 MOVZ W0, 0x1
	0x022442A4 LDP X30, X21, [X31], #0x20
	0x022442A8 RET
	0x022442AC LDR X9, [X9 + 0xC8]
	0x022442B0 ADD X9, X9, X10, 0x3, LSL
	0x022442B4 LDUR X9, [X9 - 0x8]
	0x022442B8 CMP X9, X8
	0x022442BC CSEL X0, X0, X31, EQ
	0x022442C0 LDP X20, X19, [X31 + 0x10]
	0x022442C4 MOV X1, X31
	0x022442C8 LDP X30, X21, [X31], #0x20
	0x022442CC B 0x33CC440
	0x022442D0 BL 0x1C16F20
	0x022442D4 STP X30, X21, [X31 - 0x20]!
	0x022442D8 STP X20, X19, [X31 + 0x10]
	0x022442DC LDR X8, [X0 + 0x38]
	0x022442E0 MOV X19, X0
	0x022442E4 CBNZ X8, 0x2244314
	0x022442E8 ADRP X0, 0x1ED8000
	0x022442EC LDR X0, [X0 + 0x4E8]
	0x022442F0 BL 0x1C16CF4
	0x022442F4 ADRP X0, 0x1EAF000
	0x022442F8 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X8, [X3+56]
	008 Move X19, X3
	009 Move X21, X2
	010 Move X20, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X19
	015 Call 0x1C5D6E0
	016 Move X8, [X19+56]
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 Move [X31+96], X31
	019 Move [X31+64], V0
	020 Move [X31+72], V0
	021 Move [X31+32], V0
	022 Move [X31+40], V0
	023 Move X0, [X8+8]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X8, [X19+56]
	035 Move X0, [X8]
	036 Add X8, X31, 8
	037 Call AsyncTaskMethodBuilder`1<Object>.Create
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Move X8, [X31+24]
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W9, TEMP
	043 Move [X31+72], X21
	044 Move [X31+80], X22
	045 Move [X31+40], V0
	046 Move [X31+56], X8
	047 Move [X31+64], X20
	048 Move [X31+32], W9
	049 Move X8, [X19+56]
	050 Add X1, X31, 32
	051 Move X2, [X8+40]
	052 Add X8, X31, 32
	053 Or X20, X8, 15
	054 Move X0, X20
	055 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	056 Move X8, [X19+56]
	057 Move X0, X20
	058 Move X1, [X8+56]
	059 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	060 Move X20, [X31+144]
	061 Move X19, [X31+152]
	062 Move X22, [X31+128]
	063 Move X21, [X31+136]
	064 Move X30, [X31+112]
	065 Add X31, X31, 160
	066 Return X0

Method: System.Threading.Tasks.Task InvokeWithRetry(System.Func`1<System.Threading.Tasks.Task> request, Nakama.RetryHistory history)

Disassembly:
	0x03466B68 LDP X20, X19, [X31 + 0x60]
	0x03466B6C LDP X22, X21, [X31 + 0x50]
	0x03466B70 LDP X24, X23, [X31 + 0x40]
	0x03466B74 LDP X30, X25, [X31 + 0x30]
	0x03466B78 ADD X31, X31, 0x70
	0x03466B7C RET
	0x03466B80 BL 0x1C16F20
	0x03466B84 BL 0x1C16F20
	0x03466B88 BL 0x1C16F20
	0x03466B8C BL 0x1C16F20
	0x03466B90 BL 0x1C16F20
	0x03466B94 BL 0x1C16F20
	0x03466B98 BL 0x1C16F20
	0x03466B9C BL 0x1C16F20
	0x03466BA0 BL 0x1C16F20
	0x03466BA4 BL 0x1C16F20
	0x03466BA8 BL 0x1C16F20
	0x03466BAC BL 0x1C16F20
	0x03466BB0 B 0x3466C24
	0x03466BB4 B 0x3466C24
	0x03466BB8 B 0x3466C24
	0x03466BBC B 0x3466C24
	0x03466BC0 B 0x3466C24
	0x03466BC4 B 0x3466C24
	0x03466BC8 B 0x3466C24
	0x03466BCC B 0x3466C24
	0x03466BD0 B 0x3466C24
	0x03466BD4 B 0x3466C24
	0x03466BD8 B 0x3466C24
	0x03466BDC B 0x3466C24
	0x03466BE0 B 0x3466C24
	0x03466BE4 B 0x3466C24
	0x03466BE8 B 0x3466C24
	0x03466BEC B 0x3466C24
	0x03466BF0 B 0x3466C24
	0x03466BF4 B 0x3466C24
	0x03466BF8 B 0x3466C24
	0x03466BFC B 0x3466C24
	0x03466C00 B 0x3466C24
	0x03466C04 B 0x3466C24
	0x03466C08 B 0x3466C24
	0x03466C0C B 0x3466C24
	0x03466C10 B 0x3466C24
	0x03466C14 B 0x3466C24
	0x03466C18 B 0x3466C24
	0x03466C1C B 0x3466C24
	0x03466C20 B 0x3466C24
	0x03466C24 MOV X20, X0
	0x03466C28 CMP W1, 0x1
	0x03466C2C B.NE 0x3466CCC
	0x03466C30 MOV X0, X20
	0x03466C34 BL 0x3EB1AD0
	0x03466C38 MOV X20, X0
	0x03466C3C ADRP X0, 0xC8D000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0xF78000
	009 Move X22, 0xC91000
	010 Move W8, [X23+2119]
	011 Move X22, [X22+640]
	012 Move X20, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xCCB000
	020 Move X0, [X0+936]
	021 Call 0x1C17CF4
	022 Move X0, 0xC91000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2119], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+80], V0
	030 Move [X31+88], V0
	031 Move [X31+48], V0
	032 Move [X31+56], V0
	033 Move [X31+2], V0
	034 Move X22, 0xCCB000
	035 Move W8, [X0+224]
	036 Move X22, [X22+936]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X8, X31, 8
	041 Move X0, X31
	042 Call AsyncTaskMethodBuilder.Create
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X9, [X31+24]
	045 Move X2, [X22]
	046 Add X8, X31, 32
	047 Move [X31+72], X20
	048 Move [X31+80], X21
	049 Or X20, X8, 15
	050 Move TEMP, 0
	051 Not TEMP
	052 Move W10, TEMP
	053 Add X1, X31, 32
	054 Move X0, X20
	055 Move [X31+40], V0
	056 Move [X31+56], X9
	057 Move [X31+64], X19
	058 Move [X31+32], W10
	059 Call AsyncTaskMethodBuilder.Start, X0, X1
	060 Move X0, X20
	061 Move X1, X31
	062 Call AsyncTaskMethodBuilder.get_Task, X0
	063 Move X20, [X31+144]
	064 Move X19, [X31+152]
	065 Move X22, [X31+128]
	066 Move X21, [X31+136]
	067 Move X30, [X31+112]
	068 Move X23, [X31+120]
	069 Add X31, X31, 160
	070 Return X0

Method: Nakama.Retry CreateNewRetry(Nakama.RetryHistory history)

Disassembly:
	0x034791AC LDUR X11, [X10 - 0x8]
	0x034791B0 CMP X11, X1
	0x034791B4 B.EQ 0x34791D4
	0x034791B8 SUBS X9, X9, 0x1
	0x034791BC ADD X10, X10, 0x10
	0x034791C0 B.NE 0x34791AC
	0x034791C4 MOV X0, X20
	0x034791C8 MOV W2, W31
	0x034791CC BL 0x1C5C788
	0x034791D0 B 0x34791E0
	0x034791D4 LDRSW X9, [X10]
	0x034791D8 ADD X8, X8, X9, 0x4, LSL
	0x034791DC ADD X0, X8, 0x138
	0x034791E0 LDP X8, X1, [X0]
	0x034791E4 MOV X0, X20
	0x034791E8 BLR X8
	0x034791EC MOV X23, X0
	0x034791F0 LDR X0, [X27]
	0x034791F4 MOV X22, X1
	0x034791F8 MOVZ W1, 0x6
	0x034791FC BL 0x1C16D6C
	0x03479200 CBZ X0, 0x3479530
	0x03479204 LDR W8, [X0 + 0x18]
	0x03479208 CBZ W8, 0x347953C
	0x0347920C CMP W8, 0x1
	0x03479210 STR X21, [X0 + 0x20]
	0x03479214 B.EQ 0x347952C
	0x03479218 LDR X9, [X28]
	0x0347921C CMP W8, 0x2
	0x03479220 STR X9, [X0 + 0x28]
	0x03479224 B.LS 0x3479540
	0x03479228 CMP W8, 0x3
	0x0347922C STR X23, [X0 + 0x30]
	0x03479230 B.EQ 0x3479544
	0x03479234 LDR X9, [X25]
	0x03479238 CMP W8, 0x4
	0x0347923C STR X9, [X0 + 0x38]
	0x03479240 B.LS 0x3479534
	0x03479244 CMP W8, 0x5
	0x03479248 STR X22, [X0 + 0x40]
	0x0347924C B.EQ 0x3479538
	0x03479250 LDR X8, [X24]
	0x03479254 STR X8, [X0 + 0x48]
	0x03479258 MOV X1, X31
	0x0347925C BL 0x32278CC
	0x03479260 B 0x3479130
	0x03479264 ADRP X23, 0xC7C000
	0x03479268 LDR X23, [X23 + 0xA60]
	0x0347926C MOV X22, X31
	0x03479270 CBZ X20, 0x34792D4
	0x03479274 LDR X8, [X20]
	0x03479278 ADRP X10, 0xC7A000
	0x0347927C LDRH W9, [X8 + 0x12E]
	0x03479280 LDR X10, [X10 + 0xE00]
	0x03479284 LDR X1, [X10]
	0x03479288 CBZ X9, 0x34792AC
	0x0347928C LDR X10, [X8 + 0xB0]
	0x03479290 ADD X10, X10, 0x8
	0x03479294 LDUR X11, [X10 - 0x8]
	0x03479298 CMP X11, X1
	0x0347929C B.EQ 0x34792BC
	0x034792A0 SUBS X9, X9, 0x1
	0x034792A4 ADD X10, X10, 0x10
	0x034792A8 B.NE 0x3479294
	0x034792AC MOV X0, X20
	0x034792B0 MOV W2, W31
	0x034792B4 BL 0x1C5C788
	0x034792B8 B 0x34792C8
	0x034792BC LDRSW X9, [X10]
	0x034792C0 ADD X8, X8, X9, 0x4, LSL
	0x034792C4 ADD X0, X8, 0x138
	0x034792C8 LDP X8, X1, [X0]
	0x034792CC MOV X0, X20
	0x034792D0 BLR X8
	0x034792D4 CBNZ X22, 0x347955C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF65000
	007 Move W8, [X20+2120]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xC84000
	014 Move X0, [X0+2536]
	015 Call 0x1C17CF4
	016 Move X0, 0xCB8000
	017 Move X0, [X0+2768]
	018 Call 0x1C17CF4
	019 Move X0, 0xC7B000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move X0, 0xCB8000
	023 Move X0, [X0+2776]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2120], W8
	027 Compare X19, 0
	028 JumpIfEqual {89}
	029 Move X8, [X19+24]
	030 Compare X8, 0
	031 JumpIfEqual {89}
	032 Move X9, 0xC7B000
	033 Move X9, [X9+1448]
	034 Move X20, 0xC84000
	035 Move W21, [X8+24]
	036 Move X0, [X9]
	037 Move W9, [X0+224]
	038 Move X20, [X20+2536]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 NotImplemented "Instruction SCVTF not yet implemented."
	043 Move D0, 2
	044 Move X0, X31
	045 Call Math.Pow, V0, V1
	046 Move X0, [X20]
	047 Move V8, V0
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move V0, V8
	053 Move X0, X31
	054 Call Convert.ToInt32, V0
	055 Move X8, [X19+16]
	056 Compare X8, 0
	057 JumpIfEqual {89}
	058 Move X9, [X8+24]
	059 Compare X9, 0
	060 JumpIfEqual {89}
	061 Move W10, [X8+16]
	062 Move X8, [X9+64]
	063 Move X3, [X19+48]
	064 Move X1, [X19+24]
	065 Move X11, [X9+24]
	066 Move X4, [X9+40]
	067 Move X20, 0xCB8000
	068 Move X20, [X20+2776]
	069 Multiply W19, W10, W0
	070 Move X0, X8
	071 Move W2, W19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X20]
	074 Move W20, W0
	075 Move X0, X8
	076 Call 0x1C17F10
	077 Move X1, X31
	078 Move X21, X0
	079 Call Object..ctor, X0
	080 Move [X21+16], W19
	081 Move [X21+20], W20
	082 Move X0, X21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X30, [X31+16]
	086 Move X21, [X31+24]
	087 Move V8, [X31+48]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Threading.Tasks.Task Backoff(Nakama.RetryHistory history, System.Exception e)

Disassembly:
	0x034792D8 ADRP X8, 0xC85000
	0x034792DC LDR X8, [X8 + 0x6D8]
	0x034792E0 MOV X0, X21
	0x034792E4 MOV X2, X31
	0x034792E8 LDR X1, [X8]
	0x034792EC BL 0x321B938
	0x034792F0 ADRP X8, 0xC7A000
	0x034792F4 LDR X8, [X8 + 0x9D0]
	0x034792F8 MOV X21, X0
	0x034792FC MOVZ W1, 0x9
	0x03479300 LDR X8, [X8]
	0x03479304 MOV X0, X8
	0x03479308 BL 0x1C16D6C
	0x0347930C CBZ X0, 0x3479558
	0x03479310 LDR X22, [X19 + 0x10]
	0x03479314 MOV X20, X0
	0x03479318 CBZ X22, 0x3479330
	0x0347931C LDR X8, [X20]
	0x03479320 MOV X0, X22
	0x03479324 LDR X1, [X8 + 0x40]
	0x03479328 BL 0x1C16E00
	0x0347932C CBZ X0, 0x347954C
	0x03479330 LDR W8, [X20 + 0x18]
	0x03479334 CBZ W8, 0x3479548
	0x03479338 STR X22, [X20 + 0x20]
	0x0347933C ADRP X9, 0xC7A000
	0x03479340 LDRB W8, [X19 + 0x18]
	0x03479344 LDR X9, [X9 + 0xB58]
	0x03479348 ADD X1, X31, 0x2C
	0x0347934C STRB W8, [X31 + 0x2C]
	0x03479350 LDR X0, [X9]
	0x03479354 BL 0x1C16E04
	0x03479358 MOV X22, X0
	0x0347935C CBZ X0, 0x3479374
	0x03479360 LDR X8, [X20]
	0x03479364 MOV X0, X22
	0x03479368 LDR X1, [X8 + 0x40]
	0x0347936C BL 0x1C16E00
	0x03479370 CBZ X0, 0x347954C
	0x03479374 LDR W8, [X20 + 0x18]
	0x03479378 CMP W8, 0x1
	0x0347937C B.LS 0x3479548
	0x03479380 STR X22, [X20 + 0x28]
	0x03479384 LDR X8, [X19 + 0x20]
	0x03479388 LDR X0, [X23]
	0x0347938C ADD X1, X31, 0x20
	0x03479390 STR X8, [X31 + 0x20]
	0x03479394 BL 0x1C16E04
	0x03479398 MOV X22, X0
	0x0347939C CBZ X0, 0x34793B4
	0x034793A0 LDR X8, [X20]
	0x034793A4 MOV X0, X22
	0x034793A8 LDR X1, [X8 + 0x40]
	0x034793AC BL 0x1C16E00
	0x034793B0 CBZ X0, 0x347954C
	0x034793B4 LDR W8, [X20 + 0x18]
	0x034793B8 CMP W8, 0x2
	0x034793BC B.LS 0x3479548
	0x034793C0 STR X22, [X20 + 0x30]
	0x034793C4 LDR X8, [X19 + 0x28]
	0x034793C8 LDR X0, [X23]
	0x034793CC ADD X1, X31, 0x18
	0x034793D0 STR X8, [X31 + 0x18]
	0x034793D4 BL 0x1C16E04
	0x034793D8 MOV X22, X0
	0x034793DC CBZ X0, 0x34793F4
	0x034793E0 LDR X8, [X20]
	0x034793E4 MOV X0, X22
	0x034793E8 LDR X1, [X8 + 0x40]
	0x034793EC BL 0x1C16E00
	0x034793F0 CBZ X0, 0x347954C
	0x034793F4 LDR W8, [X20 + 0x18]
	0x034793F8 CMP W8, 0x3
	0x034793FC B.LS 0x3479548
	0x03479400 STR X22, [X20 + 0x38]
	0x03479404 LDR X22, [X19 + 0x38]
	0x03479408 CBZ X22, 0x3479424
	0x0347940C LDR X8, [X20]
	0x03479410 MOV X0, X22
	0x03479414 LDR X1, [X8 + 0x40]
	0x03479418 BL 0x1C16E00
	0x0347941C CBZ X0, 0x347954C
	0x03479420 LDR W8, [X20 + 0x18]
	0x03479424 CMP W8, 0x4
	0x03479428 B.LS 0x3479548
	0x0347942C STR X22, [X20 + 0x40]
	0x03479430 LDR X8, [X19 + 0x30]
	0x03479434 LDR X0, [X23]
	0x03479438 ADD X1, X31, 0x10
	0x0347943C STR X8, [X31 + 0x10]
	0x03479440 BL 0x1C16E04
	0x03479444 MOV X22, X0
	0x03479448 CBZ X0, 0x3479460
	0x0347944C LDR X8, [X20]
	0x03479450 MOV X0, X22
	0x03479454 LDR X1, [X8 + 0x40]
	0x03479458 BL 0x1C16E00
	0x0347945C CBZ X0, 0x347954C
	0x03479460 LDR W8, [X20 + 0x18]
	0x03479464 CMP W8, 0x5
	0x03479468 B.LS 0x3479548
	0x0347946C STR X22, [X20 + 0x48]
	0x03479470 CBZ X21, 0x347948C
	0x03479474 LDR X8, [X20]
	0x03479478 MOV X0, X21
	0x0347947C LDR X1, [X8 + 0x40]
	0x03479480 BL 0x1C16E00
	0x03479484 CBZ X0, 0x347954C
	0x03479488 LDR W8, [X20 + 0x18]
	0x0347948C CMP W8, 0x6
	0x03479490 B.LS 0x3479548
	0x03479494 STR X21, [X20 + 0x50]
	0x03479498 LDR X21, [X19 + 0x48]
	0x0347949C CBZ X21, 0x34794B8
	0x034794A0 LDR X8, [X20]
	0x034794A4 MOV X0, X21
	0x034794A8 LDR X1, [X8 + 0x40]
	0x034794AC BL 0x1C16E00
	0x034794B0 CBZ X0, 0x347954C
	0x034794B4 LDR W8, [X20 + 0x18]
	0x034794B8 CMP W8, 0x7
	0x034794BC B.LS 0x3479548
	0x034794C0 STR X21, [X20 + 0x58]
	0x034794C4 LDR X19, [X19 + 0x50]
	0x034794C8 CBZ X19, 0x34794E4
	0x034794CC LDR X8, [X20]
	0x034794D0 MOV X0, X19
	0x034794D4 LDR X1, [X8 + 0x40]
	0x034794D8 BL 0x1C16E00
	0x034794DC CBZ X0, 0x347954C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF65000
	007 Move W8, [X21+2121]
	008 Move X20, X2
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xCB8000
	015 Move X0, [X0+2784]
	016 Call 0x1C17CF4
	017 Move X0, 0xCB8000
	018 Move X0, [X0+2768]
	019 Call 0x1C17CF4
	020 Move X0, 0xC7E000
	021 Move X0, [X0+456]
	022 Call 0x1C17CF4
	023 Move X0, 0xC7E000
	024 Move X0, [X0+464]
	025 Call 0x1C17CF4
	026 Move X0, 0xC7C000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2121], W8
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Compare X19, 0
	034 JumpIfEqual {127}
	035 Move X8, [X19+24]
	036 Compare X8, 0
	037 JumpIfEqual {127}
	038 Move X9, [X19+16]
	039 Compare X9, 0
	040 JumpIfEqual {127}
	041 Move W8, [X8+24]
	042 Move W9, [X9+32]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X1, X19
	045 Call RetryInvoker.CreateNewRetry, X0, X1
	046 Move X8, [X19+24]
	047 Compare X8, 0
	048 JumpIfEqual {127}
	049 Move X10, 0xCB8000
	050 Move X10, [X10+2784]
	051 Move W11, [X8+28]
	052 Move X9, [X8+16]
	053 Move X10, [X10]
	054 Add W11, W11, 1
	055 Move [X8+28], W11
	056 Compare X9, 0
	057 JumpIfEqual {127}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W12, [X9+24]
	060 Move X20, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add W10, W11, 1
	063 Add X9, X9, X11
	064 Move [X8+24], W10
	065 Move [X9+32], X20
	066 Move X9, [X10+32]
	067 Move X0, X8
	068 Move X1, X20
	069 Move X9, [X9+192]
	070 Move X2, [X9+112]
	071 Call List`1<Object>.AddWithResize, X0, X1
	072 Move X8, [X19+16]
	073 Compare X8, 0
	074 JumpIfEqual {127}
	075 Move X8, [X8+40]
	076 Compare X8, 0
	077 JumpIfEqual {87}
	078 Move X9, [X19+24]
	079 Compare X9, 0
	080 JumpIfEqual {127}
	081 Move W1, [X9+24]
	082 Move X9, [X8+24]
	083 Move X0, [X8+64]
	084 Move X3, [X8+40]
	085 Move X2, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X20, 0
	088 JumpIfEqual {127}
	089 Move V0, [X19+2]
	090 Move W19, [X20+20]
	091 Move X20, 0xC7C000
	092 Move X20, [X20+1976]
	093 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	094 Compare W8, 0
	095 JumpIfEqual {113}
	096 Move X8, 0xC7E000
	097 Move X8, [X8+464]
	098 Add X0, X31, 0
	099 Move [X31], V0
	100 Move X1, [X8]
	101 Call Nullable`1<CancellationToken>.get_Value, X0
	102 Move X8, [X20]
	103 Move X20, X0
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move W0, W19
	110 Move X1, X20
	111 Move X2, X31
	112 Call Task.Delay, X0, X1
	113 Move X0, [X20]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move W0, W19
	119 Move X1, X31
	120 Call Task.Delay, X0
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X30, [X31+16]
	124 Move X21, [X31+24]
	125 Add X31, X31, 48
	126 Return X0
	127 Call 0x1C17F20
	128 Move X0, 0xC7C000
	129 Move X0, [X0+2208]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0xCB8000
	134 Move X0, [X0+2792]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Move X2, X20
	139 Move X3, X31
	140 Call TaskCanceledException..ctor, X0, X1, X2
	141 Move X0, 0xCB8000
	142 Move X0, [X0+2800]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC

