Type: Nakama.ApiClient/<GetSubscriptionAsync>d__66

Method: System.Void MoveNext()

Disassembly:
	0x03424058 LDR W23, [X25 + 0x18]
	0x0342405C LDR X8, [X24]
	0x03424060 LDP X26, X25, [X19 + 0x48]
	0x03424064 LDR X10, [X10 + 0x7B8]
	0x03424068 LDRH W9, [X8 + 0x12E]
	0x0342406C LDR X1, [X10]
	0x03424070 CBZ X9, 0x3424094
	0x03424074 LDR X10, [X8 + 0xB0]
	0x03424078 ADD X10, X10, 0x8
	0x0342407C LDUR X11, [X10 - 0x8]
	0x03424080 CMP X11, X1
	0x03424084 B.EQ 0x34240A4
	0x03424088 SUBS X9, X9, 0x1
	0x0342408C ADD X10, X10, 0x10
	0x03424090 B.NE 0x342407C
	0x03424094 MOVZ W2, 0x3
	0x03424098 MOV X0, X24
	0x0342409C BL 0x1C5C788
	0x034240A0 B 0x34240B4
	0x034240A4 LDR W9, [X10]
	0x034240A8 ADD W9, W9, 0x3
	0x034240AC ADD X8, X8, W9, 0x4, SXTW
	0x034240B0 ADD X0, X8, 0x138
	0x034240B4 LDP X8, X9, [X0]
	0x034240B8 MOV X0, X24
	0x034240BC MOV X1, X21
	0x034240C0 MOV X2, X20
	0x034240C4 MOV X3, X22
	0x034240C8 MOV X4, X31
	0x034240CC MOV W5, W23
	0x034240D0 MOV X6, X26
	0x034240D4 MOV X7, X25
	0x034240D8 STR X9, [X31]
	0x034240DC BLR X8
	0x034240E0 CBZ X0, 0x34241B8
	0x034240E4 ADRP X8, 0xCD2000
	0x034240E8 LDR X8, [X8 + 0x1F8]
	0x034240EC LDR X1, [X8]
	0x034240F0 BL 0x269F5D0
	0x034240F4 ADRP X8, 0xCD2000
	0x034240F8 LDR X8, [X8 + 0x1F0]
	0x034240FC STR X0, [X31 + 0x18]
	0x03424100 LDR X1, [X8]
	0x03424104 ADD X0, X31, 0x18
	0x03424108 BL 0x2677430
	0x0342410C TBNZ X0, 0x0, 0x34238D8
	0x03424110 STR W31, [X19]
	0x03424114 LDR X8, [X31 + 0x18]
	0x03424118 STR X8, [X19 + 0x58]
	0x0342411C ADRP X8, 0xD0A000
	0x03424120 LDR X8, [X8 + 0x770]
	0x03424124 LDR X0, [X8]
	0x03424128 LDR W8, [X0 + 0xE0]
	0x0342412C CBNZ W8, 0x3424134
	0x03424130 BL 0x1C16DFC
	0x03424134 ADRP X8, 0xD0A000
	0x03424138 LDR X8, [X8 + 0xD30]
	0x0342413C ADD X0, X19, 0x8
	0x03424140 LDR X3, [X8]
	0x03424144 ADD X1, X31, 0x18
	0x03424148 MOV X2, X19
	0x0342414C BL 0x1FB3148
	0x03424150 LDP X20, X19, [X31 + 0x70]
	0x03424154 LDP X22, X21, [X31 + 0x60]
	0x03424158 LDP X24, X23, [X31 + 0x50]
	0x0342415C LDP X26, X25, [X31 + 0x40]
	0x03424160 LDP X28, X27, [X31 + 0x30]
	0x03424164 LDP X29, X30, [X31 + 0x20]
	0x03424168 ADD X31, X31, 0x80
	0x0342416C RET
	0x03424170 BL 0x1C16F20
	0x03424174 BL 0x1C16F20
	0x03424178 BL 0x1C16F20
	0x0342417C MOV X0, X25
	0x03424180 BL 0x1C16F18
	0x03424184 MOV X0, X23
	0x03424188 BL 0x1C16F18
	0x0342418C MOV X0, X24
	0x03424190 BL 0x1C16F18
	0x03424194 BL 0x1C16F20
	0x03424198 BL 0x1C16F20
	0x0342419C BL 0x1C16F20
	0x034241A0 BL 0x1C16F20
	0x034241A4 BL 0x1C16F28
	0x034241A8 BL 0x1C16F20
	0x034241AC BL 0x1C16F20
	0x034241B0 BL 0x1C16F20
	0x034241B4 BL 0x1C16F20
	0x034241B8 BL 0x1C16F20
	0x034241BC BL 0x1C16F20
	0x034241C0 BL 0x1C16F20
	0x034241C4 B 0x342423C
	0x034241C8 B 0x342423C
	0x034241CC B 0x342423C
	0x034241D0 B 0x342423C
	0x034241D4 B 0x342423C
	0x034241D8 B 0x342423C
	0x034241DC B 0x342423C
	0x034241E0 B 0x342423C
	0x034241E4 B 0x342423C
	0x034241E8 B 0x342423C
	0x034241EC B 0x342423C
	0x034241F0 B 0x342423C
	0x034241F4 B 0x342423C
	0x034241F8 B 0x342423C
	0x034241FC B 0x342423C
	0x03424200 B 0x342423C
	0x03424204 B 0x342423C
	0x03424208 B 0x342423C
	0x0342420C B 0x342423C
	0x03424210 B 0x342423C
	0x03424214 B 0x342423C
	0x03424218 B 0x342423C
	0x0342421C B 0x342423C
	0x03424220 B 0x342423C
	0x03424224 B 0x342423C
	0x03424228 B 0x342423C
	0x0342422C B 0x342423C
	0x03424230 B 0x342423C
	0x03424234 B 0x342423C
	0x03424238 B 0x342423C
	0x0342423C MOV X21, X1
	0x03424240 MOV X26, X0
	0x03424244 B 0x34244AC
	0x03424248 B 0x3424288
	0x0342424C B 0x3424358
	0x03424250 B 0x3424410
	0x03424254 B 0x3424288
	0x03424258 B 0x3424288
	0x0342425C MOV X21, X1
	0x03424260 MOV X26, X0
	0x03424264 MOV X23, X24
	0x03424268 B 0x3424290
	0x0342426C B 0x3424358
	0x03424270 B 0x3424358
	0x03424274 MOV X21, X1
	0x03424278 MOV X26, X0
	0x0342427C MOV X24, X23
	0x03424280 B 0x3424360
	0x03424284 B 0x3424288
	0x03424288 MOV X21, X1
	0x0342428C MOV X26, X0
	0x03424290 CMP W21, 0x1
	0x03424294 B.NE 0x34242B4
	0x03424298 MOV X0, X26
	0x0342429C BL 0x3EB1AD0
	0x034242A0 LDR X24, [X0]
	0x034242A4 BL 0x3EB1AE0
	0x034242A8 MOV W20, W31
	0x034242AC TBNZ X27, 0x1F, 0x3423EA4
	0x034242B0 B 0x3423F08
	0x034242B4 MOV X24, X31
	0x034242B8 TBZ X27, 0x1F, 0x3424320
	0x034242BC CBZ X25, 0x3424320
	0x034242C0 ADRP X10, 0xCCF000
	0x034242C4 LDR X8, [X25]
	0x034242C8 LDR X10, [X10 + 0xE00]
	0x034242CC LDRH W9, [X8 + 0x12E]
	0x034242D0 LDR X1, [X10]
	0x034242D4 CBZ X9, 0x34242F8
	0x034242D8 LDR X10, [X8 + 0xB0]
	0x034242DC ADD X10, X10, 0x8
	0x034242E0 LDUR X11, [X10 - 0x8]
	0x034242E4 CMP X11, X1
	0x034242E8 B.EQ 0x3424308
	0x034242EC SUBS X9, X9, 0x1
	0x034242F0 ADD X10, X10, 0x10
	0x034242F4 B.NE 0x34242E0
	0x034242F8 MOV X0, X25
	0x034242FC MOV W2, W31
	0x03424300 BL 0x1C5C788
	0x03424304 B 0x3424314
	0x03424308 LDRSW X9, [X10]
	0x0342430C ADD X8, X8, X9, 0x4, LSL
	0x03424310 ADD X0, X8, 0x138
	0x03424314 LDP X8, X1, [X0]
	0x03424318 MOV X0, X25
	0x0342431C BLR X8
	0x03424320 CBZ X24, 0x34244AC
	0x03424324 MOV X0, X24
	0x03424328 BL 0x1C16F18
	0x0342432C MOV X21, X1
	0x03424330 MOV X26, X0
	0x03424334 TBNZ X27, 0x1F, 0x34242BC
	0x03424338 B 0x3424320
	0x0342433C B 0x3424410
	0x03424340 B 0x3424410
	0x03424344 MOV X21, X1
	0x03424348 MOV X26, X0
	0x0342434C MOV X23, X25
	0x03424350 B 0x3424418
	0x03424354 B 0x3424358
	0x03424358 MOV X21, X1
	0x0342435C MOV X26, X0
	0x03424360 CMP W21, 0x1
	0x03424364 B.NE 0x3424384
	0x03424368 MOV X0, X26
	0x0342436C BL 0x3EB1AD0
	0x03424370 LDR X23, [X0]
	0x03424374 BL 0x3EB1AE0
	0x03424378 MOV W21, W31
	0x0342437C TBNZ X27, 0x1F, 0x3423C98
	0x03424380 B 0x3423CFC
	0x03424384 MOV X23, X31
	0x03424388 TBZ X27, 0x1F, 0x34243F0
	0x0342438C CBZ X25, 0x34243F0
	0x03424390 ADRP X10, 0xCCF000
	0x03424394 LDR X8, [X25]
	0x03424398 LDR X10, [X10 + 0xE00]
	0x0342439C LDRH W9, [X8 + 0x12E]
	0x034243A0 LDR X1, [X10]
	0x034243A4 CBZ X9, 0x34243C8
	0x034243A8 LDR X10, [X8 + 0xB0]
	0x034243AC ADD X10, X10, 0x8
	0x034243B0 LDUR X11, [X10 - 0x8]
	0x034243B4 CMP X11, X1
	0x034243B8 B.EQ 0x34243D8
	0x034243BC SUBS X9, X9, 0x1
	0x034243C0 ADD X10, X10, 0x10
	0x034243C4 B.NE 0x34243B0
	0x034243C8 MOV X0, X25
	0x034243CC MOV W2, W31
	0x034243D0 BL 0x1C5C788
	0x034243D4 B 0x34243E4
	0x034243D8 LDRSW X9, [X10]
	0x034243DC ADD X8, X8, X9, 0x4, LSL
	0x034243E0 ADD X0, X8, 0x138
	0x034243E4 LDP X8, X1, [X0]
	0x034243E8 MOV X0, X25
	0x034243EC BLR X8
	0x034243F0 CBZ X23, 0x34244AC
	0x034243F4 MOV X0, X23
	0x034243F8 BL 0x1C16F18
	0x034243FC MOV X21, X1
	0x03424400 MOV X26, X0
	0x03424404 TBNZ X27, 0x1F, 0x342438C
	0x03424408 B 0x34243F0
	0x0342440C B 0x3424410
	0x03424410 MOV X21, X1
	0x03424414 MOV X26, X0
	0x03424418 CMP W21, 0x1
	0x0342441C B.NE 0x342443C
	0x03424420 MOV X0, X26
	0x03424424 BL 0x3EB1AD0
	0x03424428 LDR X25, [X0]
	0x0342442C BL 0x3EB1AE0
	0x03424430 MOV W21, W31
	0x03424434 TBNZ X27, 0x1F, 0x3423A8C
	0x03424438 B 0x3423AF0
	0x0342443C MOV X25, X31
	0x03424440 TBZ X27, 0x1F, 0x34244A8
	0x03424444 CBZ X24, 0x34244A8
	0x03424448 ADRP X10, 0xCCF000
	0x0342444C LDR X8, [X24]
	0x03424450 LDR X10, [X10 + 0xE00]
	0x03424454 LDRH W9, [X8 + 0x12E]
	0x03424458 LDR X1, [X10]
	0x0342445C CBZ X9, 0x3424480
	0x03424460 LDR X10, [X8 + 0xB0]
	0x03424464 ADD X10, X10, 0x8
	0x03424468 LDUR X11, [X10 - 0x8]
	0x0342446C CMP X11, X1
	0x03424470 B.EQ 0x3424490
	0x03424474 SUBS X9, X9, 0x1
	0x03424478 ADD X10, X10, 0x10
	0x0342447C B.NE 0x3424468
	0x03424480 MOV X0, X24
	0x03424484 MOV W2, W31
	0x03424488 BL 0x1C5C788
	0x0342448C B 0x342449C
	0x03424490 LDRSW X9, [X10]
	0x03424494 ADD X8, X8, X9, 0x4, LSL
	0x03424498 ADD X0, X8, 0x138
	0x0342449C LDP X8, X1, [X0]
	0x034244A0 MOV X0, X24
	0x034244A4 BLR X8
	0x034244A8 CBNZ X25, 0x3424544
	0x034244AC CMP W21, 0x1
	0x034244B0 B.NE 0x3424564
	0x034244B4 MOV X0, X26
	0x034244B8 BL 0x3EB1AD0
	0x034244BC MOV X20, X0
	0x034244C0 ADRP X0, 0xCCF000
	0x034244C4 LDR X0, [X0 + 0x7D0]
	0x034244C8 BL 0x1C16D08
	0x034244CC LDR X8, [X20]
	0x034244D0 LDR X1, [X8]
	0x034244D4 BL 0x1C17270
	0x034244D8 TBZ X0, 0x0, 0x3424524
	0x034244DC LDR X20, [X20]
	0x034244E0 BL 0x3EB1AE0
	0x034244E4 MOVN W8, 0x1
	0x034244E8 STR W8, [X19], #0x8
	0x034244EC ADRP X0, 0xD0A000
	0x034244F0 LDR X0, [X0 + 0x770]
	0x034244F4 BL 0x1C16D08
	0x034244F8 LDR W8, [X0 + 0xE0]
	0x034244FC CBNZ W8, 0x3424504
	0x03424500 BL 0x1C16DFC
	0x03424504 ADRP X0, 0xD0A000
	0x03424508 LDR X0, [X0 + 0xD58]
	0x0342450C BL 0x1C16D08
	0x03424510 MOV X2, X0
	0x03424514 MOV X0, X19
	0x03424518 MOV X1, X20
	0x0342451C BL 0x26324C8
	0x03424520 B 0x3424150
	0x03424524 MOVZ W0, 0x8
	0x03424528 BL 0x3EB1AF0
	0x0342452C LDR X8, [X20]
	0x03424530 STR X8, [X0]
	0x03424534 ADRP X1, 0xA90000
	0x03424538 ADD X1, X1, 0xE58
	0x0342453C MOV X2, X31
	0x03424540 BL 0x3EB1B00
	0x03424544 MOV X0, X25
	0x03424548 BL 0x1C16F18
	0x0342454C MOV X21, X1
	0x03424550 MOV X26, X0
	0x03424554 TBNZ X27, 0x1F, 0x3424444
	0x03424558 B 0x34244A8
	0x0342455C MOV X26, X0
	0x03424560 BL 0x3EB1AE0
	0x03424564 MOV X0, X26
	0x03424568 BL 0x1D2C690
	0x0342456C BL 0x1990590
	0x03424570 STR X30, [X31 - 0x30]!
	0x03424574 STP X22, X21, [X31 + 0x10]
	0x03424578 STP X20, X19, [X31 + 0x20]
	0x0342457C ADRP X22, 0xFB9000
	0x03424580 ADRP X21, 0xD0A000
	0x03424584 LDRB W8, [X22 + 0x62A]
	0x03424588 LDR X21, [X21 + 0x770]
	0x0342458C MOV X19, X1
	0x03424590 MOV X20, X0
	0x03424594 TBNZ X8, 0x0, 0x34245B8
	0x03424598 ADRP X0, 0xD0A000
	0x0342459C LDR X0, [X0 + 0xD60]
	0x034245A0 BL 0x1C16CF4
	0x034245A4 ADRP X0, 0xD0A000
	0x034245A8 LDR X0, [X0 + 0x770]
	0x034245AC BL 0x1C16CF4
	0x034245B0 MOVZ W8, 0x1
	0x034245B4 STRB W8, [X22 + 0x62A]
	0x034245B8 LDR X0, [X21]
	0x034245BC ADRP X21, 0xD0A000
	0x034245C0 LDR W8, [X0 + 0xE0]
	0x034245C4 LDR X21, [X21 + 0xD60]
	0x034245C8 CBNZ W8, 0x34245D0
	0x034245CC BL 0x1C16DFC
	0x034245D0 LDR X2, [X21]
	0x034245D4 ADD X0, X20, 0x8
	0x034245D8 MOV X1, X19
	0x034245DC LDP X20, X19, [X31 + 0x20]
	0x034245E0 LDP X22, X21, [X31 + 0x10]
	0x034245E4 LDR X30, [X31], #0x30
	0x034245E8 B 0x2632228
	0x034245EC SUB X31, X31, 0x60
	0x034245F0 STP X30, X27, [X31 + 0x10]
	0x034245F4 STP X26, X25, [X31 + 0x20]
	0x034245F8 STP X24, X23, [X31 + 0x30]
	0x034245FC STP X22, X21, [X31 + 0x40]
	0x03424600 STP X20, X19, [X31 + 0x50]
	0x03424604 ADRP X20, 0xFB9000
	0x03424608 LDRB W8, [X20 + 0x62B]
	0x0342460C MOV X19, X0
	0x03424610 TBNZ X8, 0x0, 0x34246DC
	0x03424614 ADRP X0, 0xD0A000
	0x03424618 LDR X0, [X0 + 0xD68]
	0x0342461C BL 0x1C16CF4
	0x03424620 ADRP X0, 0xCD2000
	0x03424624 LDR X0, [X0 + 0x280]
	0x03424628 BL 0x1C16CF4
	0x0342462C ADRP X0, 0xCD8000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFBA000
	013 Move W8, [X20+1575]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {81}
	019 Move X0, 0xD0B000
	020 Move X0, [X0+3304]
	021 Call 0x1C17CF4
	022 Move X0, 0xD0B000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0xD0B000
	026 Move X0, [X0+1456]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD9000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCD1000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCD1000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCD1000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xD0B000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xD0B000
	044 Move X0, [X0+3320]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD3000
	047 Move X0, [X0+480]
	048 Call 0x1C17CF4
	049 Move X0, 0xCD3000
	050 Move X0, [X0+496]
	051 Call 0x1C17CF4
	052 Move X0, 0xCD3000
	053 Move X0, [X0+504]
	054 Call 0x1C17CF4
	055 Move X0, 0xCD9000
	056 Move X0, [X0+928]
	057 Call 0x1C17CF4
	058 Move X0, 0xCD2000
	059 Move X0, [X0+2600]
	060 Call 0x1C17CF4
	061 Move X0, 0xCF9000
	062 Move X0, [X0+1232]
	063 Call 0x1C17CF4
	064 Move X0, 0xD0B000
	065 Move X0, [X0+3328]
	066 Call 0x1C17CF4
	067 Move X0, 0xD0B000
	068 Move X0, [X0+2000]
	069 Call 0x1C17CF4
	070 Move X0, 0xD0B000
	071 Move X0, [X0+2008]
	072 Call 0x1C17CF4
	073 Move X0, 0xD0B000
	074 Move X0, [X0+3336]
	075 Call 0x1C17CF4
	076 Move X0, 0xCD0000
	077 Move X0, [X0+2440]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X20+1575], W8
	081 Move [X31+8], X31
	082 Move X27, 0xD0B000
	083 Move W8, [X19]
	084 Move X27, [X27+1456]
	085 Compare W8, 0
	086 JumpIfEqual {221}
	087 Move X21, [X19+32]
	088 Compare X21, 0
	089 JumpIfEqual {312}
	090 Move X8, 0xCD2000
	091 Move X8, [X8+2600]
	092 Move X0, [X8]
	093 Move X8, 0xD0B000
	094 Move X8, [X8+3328]
	095 Move X24, [X19+40]
	096 Move W9, [X0+224]
	097 Move X20, [X8]
	098 Compare W9, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X21
	102 Move X1, X31
	103 Call Uri.EscapeDataString, X0
	104 Compare X20, 0
	105 JumpIfEqual {330}
	106 Move X8, 0xD0B000
	107 Move X8, [X8+3336]
	108 Move X2, X0
	109 Move X1, [X8]
	110 Move X0, X20
	111 Move X3, X31
	112 Call String.Replace, X0, X1, X2
	113 Compare X24, 0
	114 JumpIfEqual {331}
	115 Move X21, X0
	116 Move X0, [X24+32]
	117 Compare X0, 0
	118 JumpIfEqual {332}
	119 Move X8, 0xCD0000
	120 Move X8, [X8+2440]
	121 Move X20, [X8]
	122 Move X1, X31
	123 Call Uri.get_AbsolutePath, X0
	124 Move X8, 0xCD9000
	125 Move X8, [X8+2264]
	126 Move X22, X0
	127 Move X0, [X8]
	128 Move W1, 1
	129 Call 0x1C17D6C
	130 Move X1, X0
	131 Compare X1, 0
	132 JumpIfEqual {333}
	133 Move W8, [X1+24]
	134 Compare W8, 0
	135 JumpIfEqual {334}
	136 Move W8, 47
	137 NotImplemented "Instruction STRH not yet implemented."
	138 Compare X22, 0
	139 JumpIfEqual {335}
	140 Move X0, X22
	141 Move X2, X31
	142 Call String.TrimEnd, X0, X1
	143 Move X1, X21
	144 Move X2, X31
	145 Call String.Concat, X0, X1
	146 Move X8, 0xCD9000
	147 Move X8, [X8+928]
	148 Move X22, X0
	149 Move X23, [X24+32]
	150 Move X0, [X8]
	151 Call 0x1C17F10
	152 Move X21, X0
	153 Move X1, X23
	154 Move X2, X31
	155 Call UriBuilder..ctor, X0, X1
	156 Compare X21, 0
	157 JumpIfEqual {336}
	158 Move X0, X21
	159 Move X1, X22
	160 Move X2, X31
	161 Call UriBuilder.set_Path, X0, X1
	162 Move X0, X21
	163 Move X1, X20
	164 Move X2, X31
	165 Call UriBuilder.set_Query, X0, X1
	166 Move X0, X21
	167 Move X1, X31
	168 Call UriBuilder.get_Uri, X0
	169 Move X8, 0xCF9000
	170 Move X9, 0xCD1000
	171 Move X8, [X8+1232]
	172 Move X9, [X9+1744]
	173 Move X20, X0
	174 Move X21, [X8]
	175 Move X0, [X9]
	176 Call 0x1C17F10
	177 Move X8, 0xCD1000
	178 Move X8, [X8+1728]
	179 Move X22, X0
	180 Move X1, [X8]
	181 Call Dictionary`2<Object, Object>..ctor, X0
	182 Move X8, 0xD0B000
	183 Move X8, [X8+2008]
	184 Move X1, [X19+48]
	185 Move X0, [X8]
	186 Move X2, X31
	187 Call String.Concat, X0, X1
	188 Compare X22, 0
	189 JumpIfEqual {337}
	190 Move X8, 0xD0B000
	191 Move X8, [X8+2000]
	192 Move X9, 0xCD1000
	193 Move X9, [X9+2064]
	194 Move X2, X0
	195 Move X1, [X8]
	196 Move X3, [X9]
	197 Move X0, X22
	198 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	199 Move X23, [X24+16]
	200 Compare X23, 0
	201 JumpIfEqual {338}
	202 Move X10, 0xD0B000
	203 Move X10, [X10+1976]
	204 Move X8, [X23]
	205 Move W25, [X24+24]
	206 Move X26, [X19+56]
	207 Move X24, [X19+64]
	208 Move X1, [X10]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 3
	219 Move X0, X23
	220 Call 0x1C5D788
	221 Move X8, [X19+72]
	222 Move TEMP, 0
	223 Not TEMP
	224 Move W9, TEMP
	225 Move [X31+8], X8
	226 Move [X19+72], X31
	227 Move [X19], W9
	228 Move W9, [X10]
	229 Add W9, W9, 3
	230 Add X8, X8, W9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X9, [X0+8]
	234 Move X0, X23
	235 Move X1, X21
	236 Move X2, X20
	237 Move X3, X22
	238 Move X4, X31
	239 Move W5, W25
	240 Move X6, X26
	241 Move X7, X24
	242 Move [X31], X9
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Compare X0, 0
	245 JumpIfEqual {339}
	246 Move X8, 0xCD3000
	247 Move X8, [X8+504]
	248 Move X1, [X8]
	249 Call Task`1<Object>.GetAwaiter, X0
	250 Move X8, 0xCD3000
	251 Move X8, [X8+496]
	252 Move [X31+8], X0
	253 Move X1, [X8]
	254 Add X0, X31, 8
	255 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {285}
	260 Move X8, 0xCD3000
	261 Move X8, [X8+480]
	262 Add X0, X31, 8
	263 Move X1, [X8]
	264 Call TaskAwaiter`1<Object>.GetResult, X0
	265 Move X8, 0xD0B000
	266 Move X8, [X8+3320]
	267 Move X1, [X8]
	268 Call JsonParser.FromJson, X0
	269 Move TEMP, 1
	270 Not TEMP
	271 Move W8, TEMP
	272 Move [X19+8], W8
	273 Move X20, X0
	274 Move X0, [X27]
	275 Move X21, 0xD0B000
	276 Move W8, [X0+224]
	277 Move X21, [X21+3312]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X2, [X21]
	282 Move X0, X19
	283 Move X1, X20
	284 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	285 Move [X19], W31
	286 Move X8, [X31+8]
	287 Move [X19+72], X8
	288 Move X0, [X27]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Move X8, 0xD0B000
	294 Move X8, [X8+3304]
	295 Add X0, X19, 8
	296 Move X3, [X8]
	297 Add X1, X31, 8
	298 Move X2, X19
	299 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	300 Move X20, [X31+80]
	301 Move X19, [X31+88]
	302 Move X22, [X31+64]
	303 Move X21, [X31+72]
	304 Move X24, [X31+48]
	305 Move X23, [X31+56]
	306 Move X26, [X31+32]
	307 Move X25, [X31+40]
	308 Move X30, [X31+16]
	309 Move X27, [X31+24]
	310 Add X31, X31, 96
	311 Return 
	312 Move X0, 0xCD8000
	313 Move X0, [X0+1400]
	314 Call 0x1C17D08
	315 Call 0x1C17F10
	316 Move X20, X0
	317 Move X0, 0xD0B000
	318 Move X0, [X0+3344]
	319 Call 0x1C17D08
	320 Move X1, X0
	321 Move X0, X20
	322 Move X2, X31
	323 Call ArgumentException..ctor, X0, X1
	324 Move X0, 0xD0B000
	325 Move X0, [X0+3352]
	326 Call 0x1C17D08
	327 Move X1, X0
	328 Move X0, X20
	329 Call 0x1C17DEC
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Call 0x1C17F20
	333 Call 0x1C17F20
	334 Call 0x1C17F28
	335 Call 0x1C17F20
	336 Call 0x1C17F20
	337 Call 0x1C17F20
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Move X20, X0
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move X0, X20
	343 Call 0x3EB2AD0
	344 Move X20, X0
	345 Move X0, 0xCD0000
	346 Move X0, [X0+2000]
	347 Call 0x1C17D08
	348 Move X8, [X20]
	349 Move X1, [X8]
	350 Call 0x1C18270
	351 Move TEMP, X0
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfNotEqual {375}
	355 Move X20, [X20]
	356 Call 0x3EB2AE0
	357 Move TEMP, 1
	358 Not TEMP
	359 Move W8, TEMP
	360 Move [X19+8], W8
	361 Move X0, 0xD0B000
	362 Move X0, [X0+1456]
	363 Call 0x1C17D08
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move X0, 0xD0B000
	369 Move X0, [X0+3360]
	370 Call 0x1C17D08
	371 Move X2, X0
	372 Move X0, X19
	373 Move X1, X20
	374 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	375 Move W0, 8
	376 Call 0x3EB2AF0
	377 Move X8, [X20]
	378 Move [X0], X8
	379 Move X1, 0xA91000
	380 Add X1, X1, 3672
	381 Move X2, X31
	382 Call 0x3EB2B00
	383 Move X20, X0
	384 Call 0x3EB2AE0
	385 Move X0, X20
	386 Call 0x1D2D690
	387 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03424630 LDR X0, [X0 + 0x8D8]
	0x03424634 BL 0x1C16CF4
	0x03424638 ADRP X0, 0xCD0000
	0x0342463C LDR X0, [X0 + 0x810]
	0x03424640 BL 0x1C16CF4
	0x03424644 ADRP X0, 0xCD0000
	0x03424648 LDR X0, [X0 + 0x6C0]
	0x0342464C BL 0x1C16CF4
	0x03424650 ADRP X0, 0xCD0000
	0x03424654 LDR X0, [X0 + 0x6D0]
	0x03424658 BL 0x1C16CF4
	0x0342465C ADRP X0, 0xD0A000
	0x03424660 LDR X0, [X0 + 0x7B8]
	0x03424664 BL 0x1C16CF4
	0x03424668 ADRP X0, 0xCD2000
	0x0342466C LDR X0, [X0 + 0x1E0]
	0x03424670 BL 0x1C16CF4
	0x03424674 ADRP X0, 0xCD2000
	0x03424678 LDR X0, [X0 + 0x1F0]
	0x0342467C BL 0x1C16CF4
	0x03424680 ADRP X0, 0xCD2000
	0x03424684 LDR X0, [X0 + 0x1F8]
	0x03424688 BL 0x1C16CF4
	0x0342468C ADRP X0, 0xCD8000
	0x03424690 LDR X0, [X0 + 0x3A0]
	0x03424694 BL 0x1C16CF4
	0x03424698 ADRP X0, 0xD0A000
	0x0342469C LDR X0, [X0 + 0xD70]
	0x034246A0 BL 0x1C16CF4
	0x034246A4 ADRP X0, 0xCF8000
	0x034246A8 LDR X0, [X0 + 0x4D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFBA000
	007 Move X21, 0xD0B000
	008 Move W8, [X22+1576]
	009 Move X21, [X21+1456]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD0B000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move X0, 0xD0B000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1576], W8
	024 Move X0, [X21]
	025 Move X21, 0xD0B000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3368]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

