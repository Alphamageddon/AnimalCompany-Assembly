Type: UnityEngine.EventSystems.EventSystem

Method: UnityEngine.EventSystems.EventSystem get_current()

Disassembly:
	0x03E50F90 BL 0x3E50CEC
	0x03E50F94 TBZ X0, 0x0, 0x3E51094
	0x03E50F98 ADRP X22, 0x2CB000
	0x03E50F9C LDR X22, [X22 + 0x930]
	0x03E50FA0 LDR X0, [X22]
	0x03E50FA4 LDR W8, [X0 + 0xE0]
	0x03E50FA8 CBNZ W8, 0x3E50FB0
	0x03E50FAC BL 0x1C16DFC
	0x03E50FB0 MOV X0, X31
	0x03E50FB4 BL 0x3E15A6C
	0x03E50FB8 CBZ X0, 0x3E510B4
	0x03E50FBC ADRP X8, 0x31A000
	0x03E50FC0 LDR X8, [X8 + 0x698]
	0x03E50FC4 LDR X1, [X8]
	0x03E50FC8 ADD X8, X31, 0x8
	0x03E50FCC BL 0x301CB58
	0x03E50FD0 ADRP X20, 0x31A000
	0x03E50FD4 ADRP X21, 0x2CB000
	0x03E50FD8 LDR X20, [X20 + 0x688]
	0x03E50FDC LDR X21, [X21 + 0x918]
	0x03E50FE0 LDR X1, [X20]
	0x03E50FE4 ADD X0, X31, 0x8
	0x03E50FE8 BL 0x2BC4350
	0x03E50FEC TBZ X0, 0x0, 0x3E51030
	0x03E50FF0 LDR X1, [X31 + 0x18]
	0x03E50FF4 CBZ X1, 0x3E51024
	0x03E50FF8 LDR X9, [X1]
	0x03E50FFC LDR X8, [X21]
	0x03E51000 LDRB W11, [X9 + 0x130]
	0x03E51004 LDRB W10, [X8 + 0x130]
	0x03E51008 CMP W11, W10
	0x03E5100C B.CC 0x3E510A8
	0x03E51010 LDR X9, [X9 + 0xC8]
	0x03E51014 ADD X9, X9, X10, 0x3, LSL
	0x03E51018 LDUR X9, [X9 - 0x8]
	0x03E5101C CMP X9, X8
	0x03E51020 B.NE 0x3E510A8
	0x03E51024 MOV X0, X19
	0x03E51028 BL 0x3E51134
	0x03E5102C B 0x3E50FE0
	0x03E51030 ADRP X8, 0x319000
	0x03E51034 LDR X8, [X8 + 0x680]
	0x03E51038 ADD X0, X31, 0x8
	0x03E5103C LDR X1, [X8]
	0x03E51040 BL 0x2BC434C
	0x03E51044 ADRP X8, 0x319000
	0x03E51048 LDR X8, [X8 + 0x5A8]
	0x03E5104C LDR X0, [X8]
	0x03E51050 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x599000
	005 Move X19, 0x2CB000
	006 Move W8, [X20+2137]
	007 Move X19, [X19+3576]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x2CB000
	013 Move X0, [X0+3576]
	014 Call 0x1C17CF4
	015 Move X0, 0x31C000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0x31C000
	019 Move X0, [X0+2272]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2137], W8
	023 Move X0, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X19]
	029 Move X8, [X0+184]
	030 Move X8, [X8]
	031 Compare X8, 0
	032 JumpIfEqual {59}
	033 Move W9, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {44}
	038 Call 0x1C17DFC
	039 Move X8, [X19]
	040 Move X8, [X8+184]
	041 Move X8, [X8]
	042 Compare X8, 0
	043 JumpIfEqual {59}
	044 Move X9, 0x31B000
	045 Move X9, [X9+2272]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X0, X8
	049 Move W1, W31
	050 Move X2, [X9]
	051 Move X30, [X31+32]
	052 Call List`1<Object>.get_Item, X0, X1
	053 Return X0
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X0, X31
	057 Move X30, [X31+32]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Void set_current(UnityEngine.EventSystems.EventSystem value)

Disassembly:
	0x03E51054 ADRP X8, 0x31A000
	0x03E51058 LDR X8, [X8 + 0x968]
	0x03E5105C MOV X1, X19
	0x03E51060 MOV X3, X31
	0x03E51064 MOV X20, X0
	0x03E51068 LDR X2, [X8]
	0x03E5106C BL 0x2A6B948
	0x03E51070 LDR X0, [X22]
	0x03E51074 LDR W8, [X0 + 0xE0]
	0x03E51078 CBNZ W8, 0x3E51080
	0x03E5107C BL 0x1C16DFC
	0x03E51080 MOV X0, X20
	0x03E51084 MOV X1, X31
	0x03E51088 BL 0x3E146FC
	0x03E5108C MOVZ W8, 0x1
	0x03E51090 STRB W8, [X19 + 0x59]
	0x03E51094 LDP X20, X19, [X31 + 0x40]
	0x03E51098 LDP X22, X21, [X31 + 0x30]
	0x03E5109C LDR X30, [X31 + 0x20]
	0x03E510A0 ADD X31, X31, 0x50
	0x03E510A4 RET
	0x03E510A8 MOV X0, X1
	0x03E510AC MOV X1, X8
	0x03E510B0 BL 0x1C171E0
	0x03E510B4 BL 0x1C16F20
	0x03E510B8 B 0x3E510C0
	0x03E510BC B 0x3E510C0
	0x03E510C0 MOV X20, X0
	0x03E510C4 CMP W1, 0x1
	0x03E510C8 B.NE 0x3E510FC
	0x03E510CC MOV X0, X20
	0x03E510D0 BL 0x3EB1AD0
	0x03E510D4 LDR X21, [X0]
	0x03E510D8 BL 0x3EB1AE0
	0x03E510DC ADRP X8, 0x319000
	0x03E510E0 LDR X8, [X8 + 0x680]
	0x03E510E4 ADD X0, X31, 0x8
	0x03E510E8 LDR X1, [X8]
	0x03E510EC BL 0x2BC434C
	0x03E510F0 CBZ X21, 0x3E51044
	0x03E510F4 MOV X0, X21
	0x03E510F8 BL 0x1C16F18
	0x03E510FC MOV X21, X31
	0x03E51100 B 0x3E51108
	0x03E51104 MOV X20, X0
	0x03E51108 ADRP X8, 0x319000
	0x03E5110C LDR X8, [X8 + 0x680]
	0x03E51110 LDR X1, [X8]
	0x03E51114 ADD X0, X31, 0x8
	0x03E51118 BL 0x2BC434C
	0x03E5111C CBNZ X21, 0x3E51128
	0x03E51120 MOV X0, X20
	0x03E51124 BL 0x1D2C690
	0x03E51128 MOV X0, X21
	0x03E5112C BL 0x1C16F18
	0x03E51130 BL 0x1990590
	0x03E51134 STR X30, [X31 - 0x40]!
	0x03E51138 STP X24, X23, [X31 + 0x10]
	0x03E5113C STP X22, X21, [X31 + 0x20]
	0x03E51140 STP X20, X19, [X31 + 0x30]
	0x03E51144 ADRP X21, 0x597000
	0x03E51148 LDRB W8, [X21 + 0x868]
	0x03E5114C MOV X19, X1
	0x03E51150 MOV X20, X0
	0x03E51154 TBNZ X8, 0x0, 0x3E511CC
	0x03E51158 ADRP X0, 0x2A3000
	0x03E5115C LDR X0, [X0 + 0xE70]
	0x03E51160 BL 0x1C16CF4
	0x03E51164 ADRP X0, 0x2A2000
	0x03E51168 LDR X0, [X0 + 0xA58]
	0x03E5116C BL 0x1C16CF4
	0x03E51170 ADRP X0, 0x2A2000
	0x03E51174 LDR X0, [X0 + 0x598]
	0x03E51178 BL 0x1C16CF4
	0x03E5117C ADRP X0, 0x31A000
	0x03E51180 LDR X0, [X0 + 0x970]
	0x03E51184 BL 0x1C16CF4
	0x03E51188 ADRP X0, 0x31A000
	0x03E5118C LDR X0, [X0 + 0x978]
	0x03E51190 BL 0x1C16CF4
	0x03E51194 ADRP X0, 0x2AA000
	0x03E51198 LDR X0, [X0 + 0xC60]
	0x03E5119C BL 0x1C16CF4
	0x03E511A0 ADRP X0, 0x2A2000
	0x03E511A4 LDR X0, [X0 + 0x6C0]
	0x03E511A8 BL 0x1C16CF4
	0x03E511AC ADRP X0, 0x31A000
	0x03E511B0 LDR X0, [X0 + 0x980]
	0x03E511B4 BL 0x1C16CF4
	0x03E511B8 ADRP X0, 0x31A000
	0x03E511BC LDR X0, [X0 + 0x988]
	0x03E511C0 BL 0x1C16CF4
	0x03E511C4 MOVZ W8, 0x1
	0x03E511C8 STRB W8, [X21 + 0x868]
	0x03E511CC CBZ X19, 0x3E513B8
	0x03E511D0 ADRP X8, 0x2A2000
	0x03E511D4 LDR X8, [X8 + 0x598]
	0x03E511D8 LDR X21, [X19 + 0x160]
	0x03E511DC LDR X0, [X8]
	0x03E511E0 LDR W8, [X0 + 0xE0]
	0x03E511E4 CBNZ W8, 0x3E511EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x598000
	006 Move X21, 0x2CA000
	007 Move W8, [X20+2138]
	008 Move X21, [X21+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x2A3000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x2CA000
	018 Move X0, [X0+3576]
	019 Call 0x1C17CF4
	020 Move X0, 0x31B000
	021 Move X0, [X0+2280]
	022 Call 0x1C17CF4
	023 Move X0, 0x31B000
	024 Move X0, [X0+2288]
	025 Call 0x1C17CF4
	026 Move X0, 0x31B000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move X0, 0x31B000
	030 Move X0, [X0+2304]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2138], W8
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move X8, [X0+184]
	041 Move X0, [X8]
	042 Compare X0, 0
	043 JumpIfEqual {121}
	044 Move X8, 0x31B000
	045 Move X8, [X8+2280]
	046 Move X1, X19
	047 Move X2, [X8]
	048 Call List`1<Object>.IndexOf, X0, X1
	049 Move W20, W0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Move X8, [X0+184]
	058 Move X0, [X8]
	059 Compare X0, 0
	060 JumpIfEqual {121}
	061 Move X8, 0x31B000
	062 Move X8, [X8+2296]
	063 Move W1, W20
	064 Move X2, [X8]
	065 Call List`1<Object>.RemoveAt, X0, X1
	066 Move X8, [X21]
	067 Move X8, [X8+184]
	068 Move X0, [X8]
	069 Compare X0, 0
	070 JumpIfEqual {121}
	071 Move X8, 0x31B000
	072 Move X8, [X8+2288]
	073 Move X2, X19
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move W1, W31
	077 Move X3, [X8]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Call List`1<Object>.Insert, X0, X1, X2
	081 Return 
	082 Compare W20, 0
	083 JumpIfEqual {95}
	084 Move X8, 0x31B000
	085 Move X8, [X8+2304]
	086 Move X20, [X8]
	087 Compare X19, 0
	088 JumpIfEqual {100}
	089 Move X8, [X19]
	090 Move X0, X19
	091 Move X9, [X8+360]
	092 Move X1, [X8+368]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X1, X0
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Move X21, [X31+40]
	099 Return 
	100 Move X1, X31
	101 Move X0, X20
	102 Move X2, X31
	103 Call String.Concat, X0, X1
	104 Move X8, 0x2A3000
	105 Move X8, [X8+2600]
	106 Move X19, X0
	107 Move X8, [X8]
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move X0, X19
	114 Move X20, [X31+16]
	115 Move X19, [X31+24]
	116 Move X1, X31
	117 Move X30, [X31+32]
	118 Move X21, [X31+40]
	119 Call Debug.LogError, X0
	120 Return 
	121 Call 0x1C17F20

Method: System.Boolean get_sendNavigationEvents()

Disassembly:
	0x03E511E8 BL 0x1C16DFC
	0x03E511EC MOV X0, X21

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_sendNavigationEvents(System.Boolean value)

Disassembly:
	0x03E511F0 MOV X1, X31
	0x03E511F4 MOV X2, X31
	0x03E511F8 BL 0x3C3883C

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: System.Int32 get_pixelDragThreshold()

Disassembly:
	0x03E511FC TBZ X0, 0x0, 0x3E513A4
	0x03E51200 ADRP X8, 0x31A000

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Void set_pixelDragThreshold(System.Int32 value)

Disassembly:
	0x03E51204 LDR X8, [X8 + 0x988]
	0x03E51208 LDR X0, [X8]

ISIL:
	001 Move [X0+60], W1
	002 Return 

Method: UnityEngine.EventSystems.BaseInputModule get_currentInputModule()

Disassembly:
	0x03E5120C BL 0x1C16F10
	0x03E51210 MOV X1, X31

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: UnityEngine.GameObject get_firstSelectedGameObject()

Disassembly:
	0x03E51214 MOV X21, X0
	0x03E51218 BL 0x33BDD8C

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_firstSelectedGameObject(UnityEngine.GameObject value)

Disassembly:
	0x03E5121C MOV X0, X19
	0x03E51220 MOV X1, X31

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: UnityEngine.GameObject get_currentSelectedGameObject()

Disassembly:
	0x03E51224 BL 0x3DBD098
	0x03E51228 ADRP X8, 0x2AA000

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: UnityEngine.GameObject get_lastSelectedGameObject()

Disassembly:
	0x03E5122C LDR X8, [X8 + 0xC60]
	0x03E51230 MOV X22, X0

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Boolean get_isFocused()

Disassembly:
	0x03E51234 MOVZ W1, 0x2
	0x03E51238 LDR X8, [X8]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03E5123C MOV X0, X8
	0x03E51240 BL 0x1C16D6C
	0x03E51244 ADRP X8, 0x2A2000
	0x03E51248 LDR X8, [X8 + 0x6C0]
	0x03E5124C ADRP X9, 0x31A000
	0x03E51250 MOV X23, X0
	0x03E51254 LDR X8, [X8]
	0x03E51258 LDR X9, [X9 + 0x970]
	0x03E5125C LDR W10, [X8 + 0xE0]
	0x03E51260 LDR X24, [X9]
	0x03E51264 CBNZ W10, 0x3E51270
	0x03E51268 MOV X0, X8
	0x03E5126C BL 0x1C16DFC
	0x03E51270 MOV X0, X24
	0x03E51274 MOV X1, X31
	0x03E51278 BL 0x338C698
	0x03E5127C CBZ X23, 0x3E513B8
	0x03E51280 MOV X24, X0
	0x03E51284 CBZ X0, 0x3E5129C
	0x03E51288 LDR X8, [X23]
	0x03E5128C MOV X0, X24
	0x03E51290 LDR X1, [X8 + 0x40]
	0x03E51294 BL 0x1C16E00
	0x03E51298 CBZ X0, 0x3E513C0
	0x03E5129C LDR W8, [X23 + 0x18]
	0x03E512A0 CBZ W8, 0x3E513BC
	0x03E512A4 STR X24, [X23 + 0x20]
	0x03E512A8 ADRP X8, 0x31A000
	0x03E512AC LDR X8, [X8 + 0x978]
	0x03E512B0 MOV X1, X31
	0x03E512B4 LDR X0, [X8]
	0x03E512B8 BL 0x338C698
	0x03E512BC MOV X24, X0
	0x03E512C0 CBZ X0, 0x3E512D8
	0x03E512C4 LDR X8, [X23]
	0x03E512C8 MOV X0, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x598000
	007 Move X22, 0x31B000
	008 Move X20, 0x31B000
	009 Move W8, [X21+2139]
	010 Move X22, [X22+2312]
	011 Move X20, [X20+2320]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x31B000
	018 Move X0, [X0+2320]
	019 Call 0x1C17CF4
	020 Move X0, 0x31B000
	021 Move X0, [X0+2312]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2139], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move W8, 1
	031 Move W9, 10
	032 Move [X19+32], X20
	033 Move [X19+56], W8
	034 Move [X19+60], W9
	035 Move [X19+72], W8
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+48]
	043 Call MonoBehaviour..ctor, X0
	044 Return 

Method: System.Void UpdateModules()

Disassembly:
	0x03E512CC LDR X1, [X8 + 0x40]
	0x03E512D0 BL 0x1C16E00
	0x03E512D4 CBZ X0, 0x3E513C0
	0x03E512D8 LDR W8, [X23 + 0x18]
	0x03E512DC CMP W8, 0x1
	0x03E512E0 B.LS 0x3E513BC
	0x03E512E4 STR X24, [X23 + 0x28]
	0x03E512E8 ADRP X8, 0x2A2000
	0x03E512EC LDR X8, [X8 + 0xA58]
	0x03E512F0 LDR X0, [X8]
	0x03E512F4 BL 0x1C16F10
	0x03E512F8 MOV X1, X22
	0x03E512FC MOV X2, X23
	0x03E51300 MOV X3, X31
	0x03E51304 MOV X24, X0
	0x03E51308 BL 0x3C35A8C
	0x03E5130C CBZ X21, 0x3E513B8
	0x03E51310 STR X24, [X21 + 0x10]
	0x03E51314 CBZ X24, 0x3E513B8
	0x03E51318 MOV X0, X24
	0x03E5131C MOV X1, X31
	0x03E51320 BL 0x3C356F8
	0x03E51324 MOV X22, X0
	0x03E51328 MOV X0, X20
	0x03E5132C MOV X1, X31
	0x03E51330 BL 0x3C32E90
	0x03E51334 CBZ X22, 0x3E513B8
	0x03E51338 MOV X1, X0
	0x03E5133C MOV X0, X22
	0x03E51340 MOV X2, X31
	0x03E51344 BL 0x3C3FE70
	0x03E51348 LDR X1, [X21 + 0x10]
	0x03E5134C MOV X0, X19
	0x03E51350 MOV X2, X31
	0x03E51354 BL 0x3DBE46C
	0x03E51358 ADRP X8, 0x2A3000
	0x03E5135C LDR X8, [X8 + 0xE70]
	0x03E51360 LDR X0, [X8]
	0x03E51364 BL 0x1C16F10
	0x03E51368 ADRP X8, 0x31A000
	0x03E5136C LDR X8, [X8 + 0x980]
	0x03E51370 MOV X1, X21
	0x03E51374 MOV X3, X31
	0x03E51378 MOV X20, X0
	0x03E5137C LDR X2, [X8]
	0x03E51380 BL 0x3314368
	0x03E51384 MOV X0, X19
	0x03E51388 MOV X1, X20
	0x03E5138C LDP X20, X19, [X31 + 0x30]
	0x03E51390 LDP X22, X21, [X31 + 0x20]
	0x03E51394 LDP X24, X23, [X31 + 0x10]
	0x03E51398 MOV X2, X31
	0x03E5139C LDR X30, [X31], #0x40
	0x03E513A0 B 0x3DBE844
	0x03E513A4 LDP X20, X19, [X31 + 0x30]
	0x03E513A8 LDP X22, X21, [X31 + 0x20]
	0x03E513AC LDP X24, X23, [X31 + 0x10]
	0x03E513B0 LDR X30, [X31], #0x40
	0x03E513B4 RET
	0x03E513B8 BL 0x1C16F20
	0x03E513BC BL 0x1C16F28
	0x03E513C0 BL 0x1C16F44
	0x03E513C4 MOV X1, X31
	0x03E513C8 BL 0x1C16DEC
	0x03E513CC STP X30, X21, [X31 - 0x20]!
	0x03E513D0 STP X20, X19, [X31 + 0x10]
	0x03E513D4 ADRP X20, 0x597000
	0x03E513D8 LDRB W8, [X20 + 0x867]
	0x03E513DC MOV X19, X0
	0x03E513E0 TBNZ X8, 0x0, 0x3E51410
	0x03E513E4 ADRP X0, 0x319000
	0x03E513E8 LDR X0, [X0 + 0x5A8]
	0x03E513EC BL 0x1C16CF4
	0x03E513F0 ADRP X0, 0x31A000
	0x03E513F4 LDR X0, [X0 + 0x968]
	0x03E513F8 BL 0x1C16CF4
	0x03E513FC ADRP X0, 0x2CA000
	0x03E51400 LDR X0, [X0 + 0x930]
	0x03E51404 BL 0x1C16CF4
	0x03E51408 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x598000
	009 Move X20, 0x31B000
	010 Move W8, [X21+2140]
	011 Move X20, [X20+2328]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x31B000
	018 Move X0, [X0+2328]
	019 Call 0x1C17CF4
	020 Move X0, 0x31B000
	021 Move X0, [X0+2336]
	022 Call 0x1C17CF4
	023 Move X0, 0x31B000
	024 Move X0, [X0+2344]
	025 Call 0x1C17CF4
	026 Move X0, 0x31B000
	027 Move X0, [X0+2352]
	028 Call 0x1C17CF4
	029 Move X0, 0x2A3000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2140], W8
	034 Move X1, [X19+32]
	035 Move X2, [X20]
	036 Move X0, X19
	037 Call 0x21A543C, X0, X1
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {92}
	041 Move W8, [X0+24]
	042 Subtract W20, W8, 1
	043 Move X22, 0x31B000
	044 Move X23, 0x2A3000
	045 Move X24, 0x31B000
	046 Move X22, [X22+2352]
	047 Move X23, [X23+1432]
	048 Move X24, [X24+2336]
	049 Move X2, [X22]
	050 Move W1, W20
	051 Call List`1<Object>.get_Item, X0, X1
	052 Move X8, [X23]
	053 Move X21, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Call Object.op_Implicit, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {82}
	066 Move X0, [X19+32]
	067 Compare X0, 0
	068 JumpIfEqual {92}
	069 Move X2, [X22]
	070 Move W1, W20
	071 Call List`1<Object>.get_Item, X0, X1
	072 Compare X0, 0
	073 JumpIfEqual {92}
	074 Move X8, [X0]
	075 Move X9, [X8+456]
	076 Move X1, [X8+464]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {88}
	082 Move X0, [X19+32]
	083 Compare X0, 0
	084 JumpIfEqual {92}
	085 Move X2, [X24]
	086 Move W1, W20
	087 Call List`1<Object>.RemoveAt, X0, X1
	088 Subtract W20, W20, 1
	089 Move X0, [X19+32]
	090 Compare X0, 0
	091 JumpIfNotEqual {49}
	092 Call 0x1C17F20
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X30, [X31+64]
	100 Return 

Method: System.Boolean get_alreadySelecting()

Disassembly:
	0x03E5140C STRB W8, [X20 + 0x867]
	0x03E51410 LDRB W8, [X19 + 0x59]

ISIL:
	001 Move W0, [X0+73]
	002 Return X0

Method: System.Void SetSelectedGameObject(UnityEngine.GameObject selected, UnityEngine.EventSystems.BaseEventData pointer)

Disassembly:
	0x03E4FC58 BL 0x1C16D6C
	0x03E4FC5C CBZ X0, 0x3E4FF8C
	0x03E4FC60 LDR X8, [X0 + 0x18]
	0x03E4FC64 MOV X20, X0
	0x03E4FC68 CBZ W8, 0x3E4FF88
	0x03E4FC6C ADRP X9, 0x2A5000
	0x03E4FC70 LDR X9, [X9 + 0xEE0]
	0x03E4FC74 LDR X9, [X9]
	0x03E4FC78 STR X9, [X20 + 0x20]
	0x03E4FC7C LDR X0, [X19]
	0x03E4FC80 CBZ X0, 0x3E4FC94
	0x03E4FC84 LDR X8, [X0]
	0x03E4FC88 LDP X9, X1, [X8 + 0x168]
	0x03E4FC8C BLR X9
	0x03E4FC90 LDR X8, [X20 + 0x18]
	0x03E4FC94 CMP W8, 0x1
	0x03E4FC98 B.LS 0x3E4FF88
	0x03E4FC9C CMP W8, 0x2
	0x03E4FCA0 STR X0, [X20 + 0x28]
	0x03E4FCA4 B.EQ 0x3E4FF88
	0x03E4FCA8 ADRP X9, 0x31C000
	0x03E4FCAC LDR X9, [X9 + 0x888]
	0x03E4FCB0 LDR X9, [X9]
	0x03E4FCB4 STR X9, [X20 + 0x30]
	0x03E4FCB8 LDR X0, [X19 + 0x8]
	0x03E4FCBC CBZ X0, 0x3E4FCD0
	0x03E4FCC0 LDR X8, [X0]
	0x03E4FCC4 LDP X9, X1, [X8 + 0x168]
	0x03E4FCC8 BLR X9
	0x03E4FCCC LDR X8, [X20 + 0x18]
	0x03E4FCD0 CMP W8, 0x3
	0x03E4FCD4 B.LS 0x3E4FF88
	0x03E4FCD8 CMP W8, 0x4
	0x03E4FCDC STR X0, [X20 + 0x38]
	0x03E4FCE0 B.EQ 0x3E4FF88
	0x03E4FCE4 ADRP X8, 0x31C000
	0x03E4FCE8 LDR X8, [X8 + 0x8C0]
	0x03E4FCEC ADD X0, X19, 0x10
	0x03E4FCF0 MOV X1, X31
	0x03E4FCF4 LDR X8, [X8]
	0x03E4FCF8 STR X8, [X20 + 0x40]
	0x03E4FCFC BL 0x338FE24
	0x03E4FD00 LDR W8, [X20 + 0x18]
	0x03E4FD04 CMP W8, 0x5
	0x03E4FD08 B.LS 0x3E4FF88
	0x03E4FD0C CMP W8, 0x6
	0x03E4FD10 STR X0, [X20 + 0x48]
	0x03E4FD14 B.EQ 0x3E4FF88
	0x03E4FD18 ADRP X8, 0x31C000
	0x03E4FD1C LDR X8, [X8 + 0x8C8]
	0x03E4FD20 ADD X0, X19, 0x14
	0x03E4FD24 MOV X1, X31
	0x03E4FD28 LDR X8, [X8]
	0x03E4FD2C STR X8, [X20 + 0x50]
	0x03E4FD30 BL 0x338FE24
	0x03E4FD34 LDR W8, [X20 + 0x18]
	0x03E4FD38 CMP W8, 0x7
	0x03E4FD3C B.LS 0x3E4FF88
	0x03E4FD40 CMP W8, 0x8
	0x03E4FD44 STR X0, [X20 + 0x58]
	0x03E4FD48 B.EQ 0x3E4FF88
	0x03E4FD4C ADRP X8, 0x31C000
	0x03E4FD50 LDR X8, [X8 + 0x8B0]
	0x03E4FD54 ADD X0, X19, 0x18
	0x03E4FD58 MOV X1, X31
	0x03E4FD5C LDR X8, [X8]
	0x03E4FD60 STR X8, [X20 + 0x60]
	0x03E4FD64 BL 0x337B6E0
	0x03E4FD68 LDR W8, [X20 + 0x18]
	0x03E4FD6C CMP W8, 0x9
	0x03E4FD70 B.LS 0x3E4FF88
	0x03E4FD74 CMP W8, 0xA
	0x03E4FD78 STR X0, [X20 + 0x68]
	0x03E4FD7C B.EQ 0x3E4FF88
	0x03E4FD80 ADRP X8, 0x31C000
	0x03E4FD84 LDR X8, [X8 + 0x8B8]
	0x03E4FD88 ADD X0, X31, 0x10
	0x03E4FD8C MOV X1, X31
	0x03E4FD90 MOV X2, X31
	0x03E4FD94 LDR X8, [X8]
	0x03E4FD98 MOV X3, X31
	0x03E4FD9C STR X8, [X20 + 0x70]
	0x03E4FDA0 LDR W8, [X19 + 0x40]
	0x03E4FDA4 LDR X9, [X19 + 0x38]
	0x03E4FDA8 STR W8, [X31 + 0x18]
	0x03E4FDAC STR X9, [X31 + 0x10]
	0x03E4FDB0 BL 0x2430694
	0x03E4FDB4 LDR W8, [X20 + 0x18]
	0x03E4FDB8 CMP W8, 0xB
	0x03E4FDBC B.LS 0x3E4FF88
	0x03E4FDC0 CMP W8, 0xC
	0x03E4FDC4 STR X0, [X20 + 0x78]
	0x03E4FDC8 B.EQ 0x3E4FF88
	0x03E4FDCC ADRP X8, 0x31C000
	0x03E4FDD0 LDR X8, [X8 + 0x8A8]
	0x03E4FDD4 ADD X0, X31, 0x10
	0x03E4FDD8 MOV X1, X31
	0x03E4FDDC MOV X2, X31
	0x03E4FDE0 LDR X8, [X8]
	0x03E4FDE4 MOV X3, X31
	0x03E4FDE8 STR X8, [X20 + 0x80]
	0x03E4FDEC LDR W8, [X19 + 0x34]
	0x03E4FDF0 LDUR X9, [X19 + 0x2C]
	0x03E4FDF4 STR W8, [X31 + 0x18]
	0x03E4FDF8 STR X9, [X31 + 0x10]
	0x03E4FDFC BL 0x2430694
	0x03E4FE00 LDR W8, [X20 + 0x18]
	0x03E4FE04 CMP W8, 0xD
	0x03E4FE08 B.LS 0x3E4FF88
	0x03E4FE0C CMP W8, 0xE
	0x03E4FE10 STR X0, [X20 + 0x88]
	0x03E4FE14 B.EQ 0x3E4FF88
	0x03E4FE18 ADRP X8, 0x31C000
	0x03E4FE1C LDR X8, [X8 + 0x8D0]
	0x03E4FE20 ADD X0, X31, 0x28
	0x03E4FE24 MOV X1, X31
	0x03E4FE28 MOV X2, X31
	0x03E4FE2C LDR X8, [X8]
	0x03E4FE30 MOV X3, X31
	0x03E4FE34 STR X8, [X20 + 0x90]
	0x03E4FE38 LDUR X8, [X19 + 0x44]
	0x03E4FE3C STR X8, [X31 + 0x28]
	0x03E4FE40 BL 0x25F34C4
	0x03E4FE44 LDR W8, [X20 + 0x18]
	0x03E4FE48 CMP W8, 0xF
	0x03E4FE4C B.LS 0x3E4FF88
	0x03E4FE50 CMP W8, 0x10
	0x03E4FE54 STR X0, [X20 + 0x98]
	0x03E4FE58 B.EQ 0x3E4FF88
	0x03E4FE5C ADRP X8, 0x31C000
	0x03E4FE60 LDR X8, [X8 + 0x890]
	0x03E4FE64 LDR X8, [X8]
	0x03E4FE68 STR X8, [X20 + 0xA0]
	0x03E4FE6C LDR X0, [X19 + 0x8]
	0x03E4FE70 CBZ X0, 0x3E4FF8C
	0x03E4FE74 LDR X8, [X0]
	0x03E4FE78 LDR X9, [X8 + 0x278]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x59A000
	009 Move W8, [X22+2141]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x2A5000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x31D000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0x31D000
	024 Move X0, [X0+1984]
	025 Call 0x1C17CF4
	026 Move X0, 0x2CD000
	027 Move X0, [X0+2552]
	028 Call 0x1C17CF4
	029 Move X0, 0x2A5000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x31D000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0x31D000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2141], W8
	040 Move W8, [X20+73]
	041 Compare W8, 0
	042 JumpIfEqual {58}
	043 Move X8, 0x31D000
	044 Move X8, [X8+1992]
	045 Move X22, 0x31D000
	046 Move X21, 0x2A5000
	047 Move X20, [X8]
	048 Move X22, [X22+2000]
	049 Move X21, [X21+2600]
	050 Compare X19, 0
	051 JumpIfEqual {140}
	052 Move X8, [X19]
	053 Move X0, X19
	054 Move X9, [X8+360]
	055 Move X1, [X8+368]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X1, X0
	058 Move W8, 1
	059 Move [X20+73], W8
	060 Move X8, 0x2A5000
	061 Move X8, [X8+1432]
	062 Move X22, [X20+64]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X22
	070 Move X2, X31
	071 Call Object.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {131}
	076 Move X23, 0x2CD000
	077 Move X23, [X23+2552]
	078 Move X22, [X20+64]
	079 Move X0, [X23]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X24, 0x59A000
	085 Move W8, [X24+2257]
	086 Compare W8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, 0x2CD000
	089 Move X0, [X0+2552]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X24+2257], W8
	093 Move X0, [X23]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X23]
	099 Move X9, 0x31D000
	100 Move X8, [X0+184]
	101 Move X9, [X9+1976]
	102 Move X0, X22
	103 Move X1, X21
	104 Move X2, [X8+112]
	105 Move X3, [X9]
	106 Call 0x21DE088, X0, X1, X2
	107 Move [X20+64], X19
	108 Move X22, 0x59A000
	109 Move W8, [X22+2258]
	110 Compare W8, 0
	111 JumpIfNotEqual {117}
	112 Move X0, 0x2CD000
	113 Move X0, [X0+2552]
	114 Call 0x1C17CF4
	115 Move W8, 1
	116 Move [X22+2258], W8
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X23]
	123 Move X9, 0x31D000
	124 Move X8, [X0+184]
	125 Move X9, [X9+1984]
	126 Move X0, X19
	127 Move X1, X21
	128 Move X2, [X8+104]
	129 Move X3, [X9]
	130 Call 0x21DE088, X0, X1, X2
	131 Move [X20+73], W31
	132 Move X20, [X31+48]
	133 Move X19, [X31+56]
	134 Move X22, [X31+32]
	135 Move X21, [X31+40]
	136 Move X24, [X31+16]
	137 Move X23, [X31+24]
	138 Move X30, [X31+64]
	139 Return 
	140 Move X1, X31
	141 Move X2, [X22]
	142 Move X0, X20
	143 Move X3, X31
	144 Call String.Concat, X0, X1, X2
	145 Move X8, [X21]
	146 Move X19, X0
	147 Move W9, [X8+224]
	148 Compare W9, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X8
	151 Call 0x1C17DFC
	152 Move X0, X19
	153 Move X20, [X31+48]
	154 Move X19, [X31+56]
	155 Move X22, [X31+32]
	156 Move X21, [X31+40]
	157 Move X24, [X31+16]
	158 Move X23, [X31+24]
	159 Move X1, X31
	160 Move X30, [X31+64]
	161 Call Debug.LogError, X0
	162 Return 

Method: UnityEngine.EventSystems.BaseEventData get_baseEventDataCache()

Disassembly:
	0x03E51414 CBZ W8, 0x3E5146C
	0x03E51418 ADRP X8, 0x319000
	0x03E5141C LDR X8, [X8 + 0x5A8]
	0x03E51420 ADRP X20, 0x31A000
	0x03E51424 ADRP X21, 0x2CA000
	0x03E51428 LDR X0, [X8]
	0x03E5142C LDR X20, [X20 + 0x968]
	0x03E51430 LDR X21, [X21 + 0x930]
	0x03E51434 BL 0x1C16F10
	0x03E51438 LDR X2, [X20]
	0x03E5143C MOV X1, X19
	0x03E51440 MOV X3, X31
	0x03E51444 MOV X20, X0
	0x03E51448 BL 0x2A6B948
	0x03E5144C LDR X0, [X21]
	0x03E51450 LDR W8, [X0 + 0xE0]
	0x03E51454 CBNZ W8, 0x3E5145C
	0x03E51458 BL 0x1C16DFC
	0x03E5145C MOV X0, X20
	0x03E51460 MOV X1, X31
	0x03E51464 BL 0x3E147EC
	0x03E51468 STRB W31, [X19 + 0x59]
	0x03E5146C LDP X20, X19, [X31 + 0x10]
	0x03E51470 LDP X30, X21, [X31], #0x20
	0x03E51474 RET
	0x03E51478 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x598000
	005 Move W8, [X20+2142]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x31B000
	012 Move X0, [X0+2360]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2142], W8
	016 Move X20, [X19+80]
	017 Compare X20, 0
	018 JumpIfNotEqual {28}
	019 Move X8, 0x31B000
	020 Move X8, [X8+2360]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+24], X19
	027 Move [X19+80], X20
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Void SetSelectedGameObject(UnityEngine.GameObject selected)

Disassembly:
	0x03E4CE8C BL 0x3E4BD80
	0x03E4CE90 MOV X22, X0
	0x03E4CE94 CBNZ X0, 0x3E4CEB4
	0x03E4CE98 LDR X0, [X21 + 0x20]
	0x03E4CE9C CBZ X0, 0x3E4CF94
	0x03E4CEA0 LDR X8, [X0]
	0x03E4CEA4 LDR X9, [X8 + 0x398]
	0x03E4CEA8 LDR X1, [X8 + 0x3A0]
	0x03E4CEAC BLR X9
	0x03E4CEB0 MOV X22, X0
	0x03E4CEB4 ADRP X19, 0x31F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call EventSystem.get_baseEventDataCache, X0
	007 Move X2, X0
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Call EventSystem.SetSelectedGameObject, X0, X1, X2
	014 Return 

Method: System.Int32 RaycastComparer(UnityEngine.EventSystems.RaycastResult lhs, UnityEngine.EventSystems.RaycastResult rhs)

Disassembly:
	0x03E5147C B 0x33BDD8C
	0x03E51480 MOVZ W8, 0x1
	0x03E51484 STRB W8, [X0 + 0x58]
	0x03E51488 B 0x3E50EFC
	0x03E5148C RET
	0x03E51490 STP X30, X21, [X31 - 0x20]!
	0x03E51494 STP X20, X19, [X31 + 0x10]
	0x03E51498 ADRP X21, 0x597000
	0x03E5149C ADRP X20, 0x2C9000
	0x03E514A0 LDRB W8, [X21 + 0x869]
	0x03E514A4 LDR X20, [X20 + 0xDF8]
	0x03E514A8 MOV X19, X0
	0x03E514AC TBNZ X8, 0x0, 0x3E514DC
	0x03E514B0 ADRP X0, 0x2C9000
	0x03E514B4 LDR X0, [X0 + 0xDF8]
	0x03E514B8 BL 0x1C16CF4
	0x03E514BC ADRP X0, 0x31A000
	0x03E514C0 LDR X0, [X0 + 0x990]
	0x03E514C4 BL 0x1C16CF4
	0x03E514C8 ADRP X0, 0x2CA000
	0x03E514CC LDR X0, [X0 + 0x930]
	0x03E514D0 BL 0x1C16CF4
	0x03E514D4 MOVZ W8, 0x1
	0x03E514D8 STRB W8, [X21 + 0x869]
	0x03E514DC LDR X0, [X20]
	0x03E514E0 LDR W8, [X0 + 0xE0]
	0x03E514E4 CBNZ W8, 0x3E514F0
	0x03E514E8 BL 0x1C16DFC
	0x03E514EC LDR X0, [X20]
	0x03E514F0 LDR X8, [X0 + 0xB8]
	0x03E514F4 LDR X0, [X8]
	0x03E514F8 CBZ X0, 0x3E515B0
	0x03E514FC ADRP X9, 0x31A000
	0x03E51500 LDR X9, [X9 + 0x990]
	0x03E51504 LDR W10, [X0 + 0x1C]
	0x03E51508 LDR X8, [X0 + 0x10]
	0x03E5150C LDR X9, [X9]
	0x03E51510 ADD W10, W10, 0x1
	0x03E51514 STR W10, [X0 + 0x1C]
	0x03E51518 CBZ X8, 0x3E515B0
	0x03E5151C LDRSW X10, [X0 + 0x18]
	0x03E51520 LDR W11, [X8 + 0x18]
	0x03E51524 CMP W10, W11
	0x03E51528 B.CS 0x3E51540
	0x03E5152C ADD W9, W10, 0x1
	0x03E51530 ADD X8, X8, X10, 0x3, LSL
	0x03E51534 STR W9, [X0 + 0x18]
	0x03E51538 STR X19, [X8 + 0x20]
	0x03E5153C B 0x3E51554
	0x03E51540 LDR X8, [X9 + 0x20]
	0x03E51544 MOV X1, X19
	0x03E51548 LDR X8, [X8 + 0xC0]
	0x03E5154C LDR X2, [X8 + 0x70]
	0x03E51550 BL 0x301BF90
	0x03E51554 LDRB W8, [X19 + 0x58]
	0x03E51558 CBZ W8, 0x3E5156C
	0x03E5155C LDRB W8, [X19 + 0x59]
	0x03E51560 CBNZ W8, 0x3E5156C
	0x03E51564 MOV X0, X19
	0x03E51568 BL 0x3E50EFC
	0x03E5156C MOV X0, X19
	0x03E51570 BL 0x3E50C78
	0x03E51574 TBZ X0, 0x0, 0x3E515A4
	0x03E51578 ADRP X8, 0x2CA000
	0x03E5157C LDR X8, [X8 + 0x930]
	0x03E51580 LDR X0, [X8]
	0x03E51584 LDR W8, [X0 + 0xE0]
	0x03E51588 CBNZ W8, 0x3E51590
	0x03E5158C BL 0x1C16DFC
	0x03E51590 MOV X0, X19
	0x03E51594 LDP X20, X19, [X31 + 0x10]
	0x03E51598 MOV X1, X31
	0x03E5159C LDP X30, X21, [X31], #0x20
	0x03E515A0 B 0x3E1604C
	0x03E515A4 LDP X20, X19, [X31 + 0x10]
	0x03E515A8 LDP X30, X21, [X31], #0x20
	0x03E515AC RET
	0x03E515B0 BL 0x1C16F20
	0x03E515B4 STP X30, X21, [X31 - 0x20]!
	0x03E515B8 STP X20, X19, [X31 + 0x10]
	0x03E515BC ADRP X21, 0x597000
	0x03E515C0 ADRP X20, 0x2CA000
	0x03E515C4 LDRB W8, [X21 + 0x86A]
	0x03E515C8 LDR X20, [X20 + 0x930]
	0x03E515CC MOV X19, X0
	0x03E515D0 TBNZ X8, 0x0, 0x3E5160C
	0x03E515D4 ADRP X0, 0x2C9000
	0x03E515D8 LDR X0, [X0 + 0xDF8]
	0x03E515DC BL 0x1C16CF4
	0x03E515E0 ADRP X0, 0x31A000
	0x03E515E4 LDR X0, [X0 + 0x998]
	0x03E515E8 BL 0x1C16CF4
	0x03E515EC ADRP X0, 0x2A2000
	0x03E515F0 LDR X0, [X0 + 0x598]
	0x03E515F4 BL 0x1C16CF4
	0x03E515F8 ADRP X0, 0x2CA000
	0x03E515FC LDR X0, [X0 + 0x930]
	0x03E51600 BL 0x1C16CF4
	0x03E51604 MOVZ W8, 0x1
	0x03E51608 STRB W8, [X21 + 0x86A]
	0x03E5160C ADRP X21, 0x2A2000
	0x03E51610 LDR X21, [X21 + 0x598]
	0x03E51614 MOV X0, X19
	0x03E51618 BL 0x3E513CC
	0x03E5161C LDR X0, [X20]
	0x03E51620 LDR W8, [X0 + 0xE0]
	0x03E51624 CBNZ W8, 0x3E5162C
	0x03E51628 BL 0x1C16DFC
	0x03E5162C MOV X0, X19
	0x03E51630 MOV X1, X31
	0x03E51634 BL 0x3E16264
	0x03E51638 LDR X0, [X21]
	0x03E5163C LDR X20, [X19 + 0x28]
	0x03E51640 LDR W8, [X0 + 0xE0]
	0x03E51644 CBNZ W8, 0x3E5164C
	0x03E51648 BL 0x1C16DFC
	0x03E5164C MOV X0, X20
	0x03E51650 MOV X1, X31
	0x03E51654 MOV X2, X31
	0x03E51658 BL 0x3C354F8
	0x03E5165C TBZ X0, 0x0, 0x3E5167C
	0x03E51660 LDR X0, [X19 + 0x28]
	0x03E51664 CBZ X0, 0x3E516C0
	0x03E51668 LDR X8, [X0]
	0x03E5166C LDR X9, [X8 + 0x298]
	0x03E51670 LDR X1, [X8 + 0x2A0]
	0x03E51674 BLR X9
	0x03E51678 STR X31, [X19 + 0x28]
	0x03E5167C ADRP X20, 0x2C9000
	0x03E51680 LDR X20, [X20 + 0xDF8]
	0x03E51684 LDR X0, [X20]
	0x03E51688 LDR W8, [X0 + 0xE0]
	0x03E5168C CBNZ W8, 0x3E51698
	0x03E51690 BL 0x1C16DFC
	0x03E51694 LDR X0, [X20]
	0x03E51698 LDR X8, [X0 + 0xB8]
	0x03E5169C LDR X0, [X8]
	0x03E516A0 CBZ X0, 0x3E516C0
	0x03E516A4 ADRP X8, 0x31A000
	0x03E516A8 LDR X8, [X8 + 0x998]
	0x03E516AC MOV X1, X19
	0x03E516B0 LDP X20, X19, [X31 + 0x10]
	0x03E516B4 LDR X2, [X8]
	0x03E516B8 LDP X30, X21, [X31], #0x20
	0x03E516BC B 0x301D7A8
	0x03E516C0 BL 0x1C16F20
	0x03E516C4 STR X30, [X31 - 0x40]!
	0x03E516C8 STP X24, X23, [X31 + 0x10]
	0x03E516CC STP X22, X21, [X31 + 0x20]
	0x03E516D0 STP X20, X19, [X31 + 0x30]
	0x03E516D4 ADRP X20, 0x597000
	0x03E516D8 LDRB W8, [X20 + 0x86B]
	0x03E516DC MOV X19, X0
	0x03E516E0 TBNZ X8, 0x0, 0x3E51710
	0x03E516E4 ADRP X0, 0x31A000
	0x03E516E8 LDR X0, [X0 + 0x928]
	0x03E516EC BL 0x1C16CF4
	0x03E516F0 ADRP X0, 0x31A000
	0x03E516F4 LDR X0, [X0 + 0x930]
	0x03E516F8 BL 0x1C16CF4
	0x03E516FC ADRP X0, 0x2A2000
	0x03E51700 LDR X0, [X0 + 0x598]
	0x03E51704 BL 0x1C16CF4
	0x03E51708 MOVZ W8, 0x1
	0x03E5170C STRB W8, [X20 + 0x86B]
	0x03E51710 LDR X0, [X19 + 0x20]
	0x03E51714 CBZ X0, 0x3E517AC
	0x03E51718 LDR W8, [X0 + 0x18]
	0x03E5171C SUBS W22, W8, 0x1
	0x03E51720 B.LT 0x3E517B0
	0x03E51724 ADRP X23, 0x31A000
	0x03E51728 ADRP X24, 0x2A2000
	0x03E5172C LDR X23, [X23 + 0x930]
	0x03E51730 LDR X24, [X24 + 0x598]
	0x03E51734 MOV W20, W31
	0x03E51738 LDR X2, [X23]
	0x03E5173C MOV W1, W20
	0x03E51740 BL 0x301BCCC
	0x03E51744 LDR X8, [X24]
	0x03E51748 MOV X21, X0
	0x03E5174C LDR W9, [X8 + 0xE0]
	0x03E51750 CBNZ W9, 0x3E5175C
	0x03E51754 MOV X0, X8
	0x03E51758 BL 0x1C16DFC
	0x03E5175C MOV X0, X21
	0x03E51760 MOV X1, X31
	0x03E51764 MOV X2, X31
	0x03E51768 BL 0x3C354F8
	0x03E5176C TBZ X0, 0x0, 0x3E51798
	0x03E51770 LDR X0, [X19 + 0x20]
	0x03E51774 CBZ X0, 0x3E517AC
	0x03E51778 LDR X2, [X23]
	0x03E5177C MOV W1, W20
	0x03E51780 BL 0x301BCCC
	0x03E51784 CBZ X0, 0x3E517AC
	0x03E51788 LDR X8, [X0]
	0x03E5178C LDR X9, [X8 + 0x2B8]
	0x03E51790 LDR X1, [X8 + 0x2C0]
	0x03E51794 BLR X9
	0x03E51798 CMP W22, W20
	0x03E5179C B.EQ 0x3E517B0
	0x03E517A0 LDR X0, [X19 + 0x20]
	0x03E517A4 ADD W20, W20, 0x1
	0x03E517A8 CBNZ X0, 0x3E51738
	0x03E517AC BL 0x1C16F20
	0x03E517B0 LDP X20, X19, [X31 + 0x30]
	0x03E517B4 LDP X22, X21, [X31 + 0x20]
	0x03E517B8 LDP X24, X23, [X31 + 0x10]
	0x03E517BC LDR X30, [X31], #0x40
	0x03E517C0 RET
	0x03E517C4 AND W8, W1, 0x1
	0x03E517C8 STRB W8, [X0 + 0x48]
	0x03E517CC TBZ X1, 0x0, 0x3E517D4
	0x03E517D0 RET
	0x03E517D4 B 0x3E516C4
	0x03E517D8 STP X30, X25, [X31 - 0x40]!
	0x03E517DC STP X24, X23, [X31 + 0x10]
	0x03E517E0 STP X22, X21, [X31 + 0x20]
	0x03E517E4 STP X20, X19, [X31 + 0x30]
	0x03E517E8 ADRP X21, 0x597000
	0x03E517EC ADRP X20, 0x2C9000
	0x03E517F0 LDRB W8, [X21 + 0x86C]
	0x03E517F4 LDR X20, [X20 + 0xDF8]
	0x03E517F8 MOV X19, X0
	0x03E517FC TBNZ X8, 0x0, 0x3E51838
	0x03E51800 ADRP X0, 0x2C9000
	0x03E51804 LDR X0, [X0 + 0xDF8]
	0x03E51808 BL 0x1C16CF4
	0x03E5180C ADRP X0, 0x31A000
	0x03E51810 LDR X0, [X0 + 0x928]
	0x03E51814 BL 0x1C16CF4
	0x03E51818 ADRP X0, 0x31A000
	0x03E5181C LDR X0, [X0 + 0x930]
	0x03E51820 BL 0x1C16CF4
	0x03E51824 ADRP X0, 0x2A2000
	0x03E51828 LDR X0, [X0 + 0x598]
	0x03E5182C BL 0x1C16CF4
	0x03E51830 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x598000
	009 Move X23, 0x2A3000
	010 Move W8, [X21+2143]
	011 Move X23, [X23+1432]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2A3000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2143], W8
	023 Move X0, [X23]
	024 Move [X31+8], X31
	025 Move X21, [X19+8]
	026 Move X22, [X20+8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X22
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {129}
	039 Move X0, [X19+8]
	040 Compare X0, 0
	041 JumpIfEqual {259}
	042 Move X8, [X0]
	043 Move X9, [X8+600]
	044 Move X1, [X8+608]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X20+8]
	047 Compare X8, 0
	048 JumpIfEqual {259}
	049 Move X9, [X8]
	050 Move X21, X0
	051 Move X0, X8
	052 Move X10, [X9+600]
	053 Move X1, [X9+608]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X23]
	056 Move X22, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X21
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {95}
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X22
	076 Move X1, X31
	077 Move X2, X31
	078 Call Object.op_Inequality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {95}
	083 Compare X21, 0
	084 JumpIfEqual {259}
	085 Move X0, X21
	086 Move X1, X31
	087 Call Camera.get_depth, X0
	088 Compare X22, 0
	089 JumpIfEqual {259}
	090 Move X0, X22
	091 Move X1, X31
	092 Move V8, V0
	093 Call Camera.get_depth, X0
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Move X0, [X19+8]
	096 Compare X0, 0
	097 JumpIfEqual {259}
	098 Move X8, [X0]
	099 Move X9, [X8+632]
	100 Move X1, [X8+640]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, [X20+8]
	103 Compare X8, 0
	104 JumpIfEqual {259}
	105 Move X9, [X8]
	106 Move W21, W0
	107 Move X0, X8
	108 Move X10, [X9+632]
	109 Move X1, [X9+640]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, [X19+8]
	113 Compare X0, 0
	114 JumpIfEqual {259}
	115 Move X8, [X0]
	116 Move X9, [X8+648]
	117 Move X1, [X8+656]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X8, [X20+8]
	120 Compare X8, 0
	121 JumpIfEqual {259}
	122 Move X9, [X8]
	123 Move W21, W0
	124 Move X0, X8
	125 Move X10, [X9+648]
	126 Move X1, [X9+656]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W8, [X19+36]
	130 Move W0, [X20+36]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X0, X20, 40
	133 Move W1, [X19+40]
	134 Move W8, [X0]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X21, X20
	137 Move W8, [X19+24]
	138 Add X21, X21, 24
	139 Move W9, [X21]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, [X19+8]
	142 Compare X0, 0
	143 JumpIfEqual {259}
	144 Call BaseRaycaster.get_rootRaycaster, X0
	145 Move X8, [X20+8]
	146 Compare X8, 0
	147 JumpIfEqual {259}
	148 Move X22, X0
	149 Move X0, X8
	150 Call BaseRaycaster.get_rootRaycaster, X0
	151 Move X8, [X23]
	152 Move X23, X0
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X0, X22
	159 Move X1, X23
	160 Move X2, X31
	161 Call Object.op_Equality, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {190}
	166 Move W1, [X19+24]
	167 Move X0, X21
	168 Move X1, X31
	169 Call SortingLayer.GetLayerValueFromID, X0
	170 Move [X31+8], W0
	171 Move W0, [X19+36]
	172 Move X1, X31
	173 Call SortingLayer.GetLayerValueFromID, X0
	174 Move W1, W0
	175 Add X0, X31, 8
	176 Move X0, [X20+8]
	177 Compare X0, 0
	178 JumpIfEqual {259}
	179 Move X8, [X0]
	180 Move X9, [X8+632]
	181 Move X1, [X8+640]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move [X31+12], W0
	184 Move X0, [X19+8]
	185 Compare X0, 0
	186 JumpIfEqual {259}
	187 Move X8, [X0]
	188 Move X9, [X8+632]
	189 Move X1, [X8+640]
	190 Add X0, X19, 16
	191 Move V1, [X0]
	192 Move V0, [X20+16]
	193 NotImplemented "Instruction FCMP not yet implemented."
	194 Move W21, [X19+28]
	195 Move X0, X31
	196 Call SortingGroup.get_invalidSortingGroupID
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W21, [X20+28]
	199 Move X0, X31
	200 Call SortingGroup.get_invalidSortingGroupID
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move V0, [X20+20]
	203 Add X0, X19, 20
	204 Move X1, X31
	205 Call Single.CompareTo, X0, V0
	206 Move X0, [X20+8]
	207 Compare X0, 0
	208 JumpIfEqual {259}
	209 Move X8, [X0]
	210 Move X9, [X8+648]
	211 Move X1, [X8+656]
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move [X31+12], W0
	214 Move X0, [X19+8]
	215 Compare X0, 0
	216 JumpIfEqual {259}
	217 Move X8, [X0]
	218 Move X9, [X8+648]
	219 Move X1, [X8+656]
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move W1, W0
	222 Add X0, X31, 12
	223 Move X2, X31
	224 Call Int32.CompareTo, X0, X1
	225 Move X20, [X31+48]
	226 Move X19, [X31+56]
	227 Move X22, [X31+32]
	228 Move X21, [X31+40]
	229 Move X30, [X31+16]
	230 Move X23, [X31+24]
	231 Move V8, [X31+64]
	232 Return X0
	233 Move X0, X21
	234 Move X1, X31
	235 Call Camera.get_depth, X0
	236 Move X0, X22
	237 Move X1, X31
	238 Move V8, V0
	239 Call Camera.get_depth, X0
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 Move X0, X21
	242 Move X1, X31
	243 Call Camera.get_depth, X0
	244 Move X0, X22
	245 Move X1, X31
	246 Move V8, V0
	247 Call Camera.get_depth, X0
	248 NotImplemented "Instruction FCMP not yet implemented."
	249 NotImplemented "Instruction CSINV not yet implemented."
	250 Move W0, 1
	251 Add X0, X19, 28
	252 Move W8, [X0]
	253 Move W1, [X20+28]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Add X0, X20, 32
	256 Move W1, [X19+32]
	257 Move W8, [X0]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Call 0x1C17F20

Method: System.Void RaycastAll(UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> raycastResults)

Disassembly:
	0x03E518EC CMP W23, W20
	0x03E518F0 B.EQ 0x3E5193C
	0x03E518F4 LDR X0, [X19 + 0x20]
	0x03E518F8 CBNZ X0, 0x3E518A8
	0x03E518FC B 0x3E51A3C
	0x03E51900 LDR X0, [X22]
	0x03E51904 LDR X20, [X19 + 0x28]
	0x03E51908 LDR W8, [X0 + 0xE0]
	0x03E5190C CBNZ W8, 0x3E51914
	0x03E51910 BL 0x1C16DFC
	0x03E51914 MOV X0, X20
	0x03E51918 MOV X1, X21
	0x03E5191C MOV X2, X31
	0x03E51920 BL 0x3C354F8
	0x03E51924 TBZ X0, 0x0, 0x3E5193C
	0x03E51928 MOV X0, X19
	0x03E5192C MOV X1, X21
	0x03E51930 BL 0x3E51A40
	0x03E51934 MOVZ W24, 0x1
	0x03E51938 B 0x3E51940
	0x03E5193C MOV W24, W31
	0x03E51940 LDR X0, [X22]
	0x03E51944 LDR X20, [X19 + 0x28]
	0x03E51948 LDR W8, [X0 + 0xE0]
	0x03E5194C CBNZ W8, 0x3E51954
	0x03E51950 BL 0x1C16DFC
	0x03E51954 MOV X0, X20
	0x03E51958 MOV X1, X31
	0x03E5195C MOV X2, X31
	0x03E51960 BL 0x3C3883C
	0x03E51964 TBZ X0, 0x0, 0x3E519B8
	0x03E51968 CMP W23, 0x1
	0x03E5196C B.LT 0x3E519B8
	0x03E51970 ADRP X25, 0x31A000
	0x03E51974 LDR X25, [X25 + 0x930]
	0x03E51978 MOV W20, W31
	0x03E5197C LDR X0, [X19 + 0x20]
	0x03E51980 CBZ X0, 0x3E51A3C
	0x03E51984 LDR X2, [X25]
	0x03E51988 MOV W1, W20
	0x03E5198C BL 0x301BCCC
	0x03E51990 CBZ X0, 0x3E51A3C
	0x03E51994 LDR X8, [X0]
	0x03E51998 MOV X21, X0
	0x03E5199C LDR X9, [X8 + 0x2C8]
	0x03E519A0 LDR X1, [X8 + 0x2D0]
	0x03E519A4 BLR X9
	0x03E519A8 TBNZ X0, 0x0, 0x3E51A20
	0x03E519AC ADD W20, W20, 0x1
	0x03E519B0 CMP W23, W20
	0x03E519B4 B.NE 0x3E5197C
	0x03E519B8 TBNZ X24, 0x0, 0x3E51A0C
	0x03E519BC LDR X0, [X22]
	0x03E519C0 LDR X20, [X19 + 0x28]
	0x03E519C4 LDR W8, [X0 + 0xE0]
	0x03E519C8 CBNZ W8, 0x3E519D0
	0x03E519CC BL 0x1C16DFC
	0x03E519D0 MOV X0, X20
	0x03E519D4 MOV X1, X31
	0x03E519D8 MOV X2, X31
	0x03E519DC BL 0x3C354F8
	0x03E519E0 TBZ X0, 0x0, 0x3E51A0C
	0x03E519E4 LDR X0, [X19 + 0x28]
	0x03E519E8 CBZ X0, 0x3E51A3C
	0x03E519EC LDR X8, [X0]
	0x03E519F0 LDP X20, X19, [X31 + 0x30]
	0x03E519F4 LDP X22, X21, [X31 + 0x20]
	0x03E519F8 LDP X24, X23, [X31 + 0x10]
	0x03E519FC LDR X2, [X8 + 0x248]
	0x03E51A00 LDR X1, [X8 + 0x250]
	0x03E51A04 LDP X30, X25, [X31], #0x40
	0x03E51A08 BR X2
	0x03E51A0C LDP X20, X19, [X31 + 0x30]
	0x03E51A10 LDP X22, X21, [X31 + 0x20]
	0x03E51A14 LDP X24, X23, [X31 + 0x10]
	0x03E51A18 LDP X30, X25, [X31], #0x40
	0x03E51A1C RET
	0x03E51A20 MOV X0, X19
	0x03E51A24 MOV X1, X21
	0x03E51A28 LDP X20, X19, [X31 + 0x30]
	0x03E51A2C LDP X22, X21, [X31 + 0x20]
	0x03E51A30 LDP X24, X23, [X31 + 0x10]
	0x03E51A34 LDP X30, X25, [X31], #0x40
	0x03E51A38 B 0x3E51A40
	0x03E51A3C BL 0x1C16F20
	0x03E51A40 STR X30, [X31 - 0x30]!
	0x03E51A44 STP X22, X21, [X31 + 0x10]
	0x03E51A48 STP X20, X19, [X31 + 0x20]
	0x03E51A4C ADRP X21, 0x597000
	0x03E51A50 ADRP X22, 0x2A2000
	0x03E51A54 LDRB W8, [X21 + 0x86D]
	0x03E51A58 LDR X22, [X22 + 0x598]
	0x03E51A5C MOV X19, X1
	0x03E51A60 MOV X20, X0
	0x03E51A64 TBNZ X8, 0x0, 0x3E51A7C
	0x03E51A68 ADRP X0, 0x2A2000
	0x03E51A6C LDR X0, [X0 + 0x598]
	0x03E51A70 BL 0x1C16CF4
	0x03E51A74 MOVZ W8, 0x1
	0x03E51A78 STRB W8, [X21 + 0x86D]
	0x03E51A7C LDR X0, [X22]
	0x03E51A80 LDR X21, [X20 + 0x28]
	0x03E51A84 LDR W8, [X0 + 0xE0]
	0x03E51A88 CBNZ W8, 0x3E51A90
	0x03E51A8C BL 0x1C16DFC
	0x03E51A90 MOV X0, X21
	0x03E51A94 MOV X1, X19
	0x03E51A98 MOV X2, X31
	0x03E51A9C BL 0x3C3883C
	0x03E51AA0 TBNZ X0, 0x0, 0x3E51B24
	0x03E51AA4 LDR X0, [X22]
	0x03E51AA8 LDR X21, [X20 + 0x28]
	0x03E51AAC LDR W8, [X0 + 0xE0]
	0x03E51AB0 CBNZ W8, 0x3E51AB8
	0x03E51AB4 BL 0x1C16DFC
	0x03E51AB8 MOV X0, X21
	0x03E51ABC MOV X1, X31
	0x03E51AC0 MOV X2, X31
	0x03E51AC4 BL 0x3C354F8
	0x03E51AC8 TBZ X0, 0x0, 0x3E51AE4
	0x03E51ACC LDR X0, [X20 + 0x28]
	0x03E51AD0 CBZ X0, 0x3E51B34
	0x03E51AD4 LDR X8, [X0]
	0x03E51AD8 LDR X9, [X8 + 0x298]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x598000
	011 Move W8, [X21+2144]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x2CA000
	019 Move X0, [X0+3576]
	020 Call 0x1C17CF4
	021 Move X0, 0x2F9000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move X0, 0x31B000
	025 Move X0, [X0+2376]
	026 Call 0x1C17CF4
	027 Move X0, 0x31B000
	028 Move X0, [X0+2384]
	029 Call 0x1C17CF4
	030 Move X0, 0x31B000
	031 Move X0, [X0+2392]
	032 Call 0x1C17CF4
	033 Move X0, 0x2A3000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x31B000
	037 Move X0, [X0+2400]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2144], W8
	041 Compare X19, 0
	042 JumpIfEqual {150}
	043 Move W2, [X19+24]
	044 Move W8, [X19+28]
	045 Move X21, 0x31B000
	046 Move X21, [X21+2400]
	047 Add W8, W8, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X19+24], W31
	050 Move [X19+28], W8
	051 Move X0, [X19+16]
	052 Move W1, W31
	053 Move X3, X31
	054 Call Array.Clear, X0, X1, X2
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X22, 0x598000
	061 Move W8, [X22+2259]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0x31B000
	065 Move X0, [X0+2400]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X22+2259], W8
	069 Move X0, [X21]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X21]
	075 Move X8, [X0+184]
	076 Move X21, [X8]
	077 Compare X21, 0
	078 JumpIfEqual {150}
	079 Move W24, [X21+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X25, 0x31B000
	082 Move X26, 0x2A3000
	083 Move X25, [X25+2392]
	084 Move X26, [X26+1432]
	085 Move W22, W31
	086 Move X2, [X25]
	087 Move X0, X21
	088 Move W1, W22
	089 Call List`1<Object>.get_Item, X0, X1
	090 Move X8, [X26]
	091 Move X23, X0
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X23
	098 Move X1, X31
	099 Move X2, X31
	100 Call Object.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {123}
	105 Compare X23, 0
	106 JumpIfEqual {150}
	107 Move X8, [X23]
	108 Move X0, X23
	109 Move X9, [X8+456]
	110 Move X1, [X8+464]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {123}
	116 Move X8, [X23]
	117 Move X0, X23
	118 Move X1, X20
	119 Move X2, X19
	120 Move X9, [X8+584]
	121 Move X3, [X8+592]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Add W22, W22, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X21, 0x2CA000
	126 Move X21, [X21+3576]
	127 Move X20, 0x31B000
	128 Move X0, [X21]
	129 Move W8, [X0+224]
	130 Move X20, [X20+2376]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X21]
	135 Move X8, [X0+184]
	136 Move X2, [X20]
	137 Move X0, X19
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X1, [X8+8]
	141 Move X22, [X31+48]
	142 Move X21, [X31+56]
	143 Move X24, [X31+32]
	144 Move X23, [X31+40]
	145 Move X26, [X31+16]
	146 Move X25, [X31+24]
	147 Move X30, [X31+80]
	148 Call List`1<RaycastResult>.Sort, X0, X1
	149 Return 
	150 Call 0x1C17F20

Method: System.Boolean IsPointerOverGameObject()

Disassembly:
	0x03E51ADC LDR X1, [X8 + 0x2A0]
	0x03E51AE0 BLR X9

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W1, TEMP

Method: System.Boolean IsPointerOverGameObject(System.Int32 pointerId)

Disassembly:
	0x03E51AE4 LDR X0, [X22]
	0x03E51AE8 LDR W8, [X0 + 0xE0]
	0x03E51AEC CBNZ W8, 0x3E51AF4
	0x03E51AF0 BL 0x1C16DFC
	0x03E51AF4 MOV X0, X19
	0x03E51AF8 MOV X1, X31
	0x03E51AFC MOV X2, X31
	0x03E51B00 BL 0x3C354F8
	0x03E51B04 TBZ X0, 0x0, 0x3E51B20
	0x03E51B08 CBZ X19, 0x3E51B34
	0x03E51B0C LDR X8, [X19]
	0x03E51B10 MOV X0, X19
	0x03E51B14 LDR X9, [X8 + 0x2A8]
	0x03E51B18 LDR X1, [X8 + 0x2B0]
	0x03E51B1C BLR X9
	0x03E51B20 STR X19, [X20 + 0x28]
	0x03E51B24 LDP X20, X19, [X31 + 0x20]
	0x03E51B28 LDP X22, X21, [X31 + 0x10]
	0x03E51B2C LDR X30, [X31], #0x30
	0x03E51B30 RET
	0x03E51B34 BL 0x1C16F20
	0x03E51B38 STR X30, [X31 - 0x30]!
	0x03E51B3C STP X22, X21, [X31 + 0x10]
	0x03E51B40 STP X20, X19, [X31 + 0x20]
	0x03E51B44 ADRP X20, 0x597000
	0x03E51B48 ADRP X22, 0x2A2000
	0x03E51B4C ADRP X21, 0x31A000
	0x03E51B50 LDRB W8, [X20 + 0x86E]
	0x03E51B54 LDR X22, [X22 + 0x8F0]
	0x03E51B58 LDR X21, [X21 + 0x9A0]
	0x03E51B5C MOV X19, X0
	0x03E51B60 TBNZ X8, 0x0, 0x3E51B9C
	0x03E51B64 ADRP X0, 0x2A2000
	0x03E51B68 LDR X0, [X0 + 0x598]
	0x03E51B6C BL 0x1C16CF4
	0x03E51B70 ADRP X0, 0x2A2000
	0x03E51B74 LDR X0, [X0 + 0x8F0]
	0x03E51B78 BL 0x1C16CF4
	0x03E51B7C ADRP X0, 0x31A000
	0x03E51B80 LDR X0, [X0 + 0x9A8]
	0x03E51B84 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x598000
	007 Move X21, 0x2A3000
	008 Move W8, [X22+2145]
	009 Move X21, [X21+1432]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2A3000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2145], W8
	021 Move X0, [X21]
	022 Move X21, [X20+40]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {48}
	035 Move X0, [X20+40]
	036 Compare X0, 0
	037 JumpIfEqual {55}
	038 Move X8, [X0]
	039 Move W1, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X3, [X8+632]
	045 Move X2, [X8+640]
	046 Move X30, [X31+48]
	047 CallNoReturn X3
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move W0, W31
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Boolean get_isUIToolkitActiveEventSystem()

Disassembly:
	0x03E51B88 ADRP X0, 0x31A000
	0x03E51B8C LDR X0, [X0 + 0x9A0]
	0x03E51B90 BL 0x1C16CF4
	0x03E51B94 MOVZ W8, 0x1
	0x03E51B98 STRB W8, [X20 + 0x86E]
	0x03E51B9C LDR X0, [X22]
	0x03E51BA0 BL 0x1C16F10
	0x03E51BA4 MOV X1, X31
	0x03E51BA8 MOV X20, X0
	0x03E51BAC BL 0x3231AC4
	0x03E51BB0 LDR X0, [X19 + 0x40]
	0x03E51BB4 LDR X21, [X21]
	0x03E51BB8 CBZ X0, 0x3E51BD0
	0x03E51BBC LDR X8, [X0]
	0x03E51BC0 LDP X9, X1, [X8 + 0x168]
	0x03E51BC4 BLR X9
	0x03E51BC8 MOV X1, X0
	0x03E51BCC B 0x3E51BD4
	0x03E51BD0 MOV X1, X31
	0x03E51BD4 MOV X0, X21
	0x03E51BD8 MOV X2, X31
	0x03E51BDC BL 0x321B938
	0x03E51BE0 CBZ X20, 0x3E51C8C
	0x03E51BE4 ADRP X21, 0x2A2000
	0x03E51BE8 LDR X21, [X21 + 0x598]
	0x03E51BEC MOV X1, X0
	0x03E51BF0 MOV X0, X20
	0x03E51BF4 MOV X2, X31
	0x03E51BF8 BL 0x32338A8
	0x03E51BFC MOV X0, X20
	0x03E51C00 MOV X1, X31
	0x03E51C04 BL 0x3233888
	0x03E51C08 MOV X0, X20
	0x03E51C0C MOV X1, X31
	0x03E51C10 BL 0x3233888
	0x03E51C14 LDR X0, [X21]
	0x03E51C18 LDR X21, [X19 + 0x28]
	0x03E51C1C LDR W8, [X0 + 0xE0]
	0x03E51C20 CBNZ W8, 0x3E51C28
	0x03E51C24 BL 0x1C16DFC
	0x03E51C28 MOV X0, X21
	0x03E51C2C MOV X1, X31
	0x03E51C30 MOV X2, X31
	0x03E51C34 BL 0x3C354F8
	0x03E51C38 TBZ X0, 0x0, 0x3E51C58
	0x03E51C3C LDR X0, [X19 + 0x28]
	0x03E51C40 CBZ X0, 0x3E51C8C
	0x03E51C44 LDR X8, [X0]
	0x03E51C48 LDP X9, X1, [X8 + 0x168]
	0x03E51C4C BLR X9
	0x03E51C50 MOV X1, X0
	0x03E51C54 B 0x3E51C64
	0x03E51C58 ADRP X8, 0x31A000
	0x03E51C5C LDR X8, [X8 + 0x9A8]
	0x03E51C60 LDR X1, [X8]
	0x03E51C64 MOV X0, X20
	0x03E51C68 MOV X2, X31
	0x03E51C6C BL 0x32338A8
	0x03E51C70 LDR X8, [X20]
	0x03E51C74 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x598000
	007 Move X21, 0x2CA000
	008 Move W8, [X20+2146]
	009 Move X21, [X21+3576]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2CA000
	016 Move X0, [X0+3576]
	017 Call 0x1C17CF4
	018 Move X0, 0x2A3000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2146], W8
	023 Move X0, [X21]
	024 Move X22, 0x2A3000
	025 Move W8, [X0+224]
	026 Move X22, [X22+1432]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X22]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X20, [X9+16]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X19
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {54}
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move W0, 1
	052 Move X30, [X31+48]
	053 Return X0
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X22]
	061 Move X9, [X0+184]
	062 Move W10, [X8+224]
	063 Move X19, [X9+16]
	064 Compare W10, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X1, X31
	074 Move X2, X31
	075 Move X30, [X31+48]
	076 Call Object.op_Equality, X0, X1
	077 Return X0

Method: System.Boolean get_sendUIToolkitEvents()

Disassembly:
	0x03E51C78 LDP X20, X19, [X31 + 0x20]
	0x03E51C7C LDP X22, X21, [X31 + 0x10]
	0x03E51C80 LDP X2, X1, [X8 + 0x168]
	0x03E51C84 LDR X30, [X31], #0x30
	0x03E51C88 BR X2
	0x03E51C8C BL 0x1C16F20
	0x03E51C90 STR X30, [X31 - 0x40]!
	0x03E51C94 STP X24, X23, [X31 + 0x10]
	0x03E51C98 STP X22, X21, [X31 + 0x20]
	0x03E51C9C STP X20, X19, [X31 + 0x30]
	0x03E51CA0 ADRP X23, 0x597000
	0x03E51CA4 ADRP X24, 0x31A000
	0x03E51CA8 ADRP X19, 0x31A000
	0x03E51CAC ADRP X20, 0x2C9000
	0x03E51CB0 ADRP X22, 0x31A000
	0x03E51CB4 ADRP X21, 0x31A000
	0x03E51CB8 LDRB W8, [X23 + 0x86F]
	0x03E51CBC LDR X24, [X24 + 0x9B0]
	0x03E51CC0 LDR X19, [X19 + 0x9B8]
	0x03E51CC4 LDR X20, [X20 + 0xDF8]
	0x03E51CC8 LDR X22, [X22 + 0x9C0]
	0x03E51CCC LDR X21, [X21 + 0x9C8]
	0x03E51CD0 TBNZ X8, 0x0, 0x3E51D18
	0x03E51CD4 ADRP X0, 0x31A000
	0x03E51CD8 LDR X0, [X0 + 0x9C0]
	0x03E51CDC BL 0x1C16CF4
	0x03E51CE0 ADRP X0, 0x31A000
	0x03E51CE4 LDR X0, [X0 + 0x9C8]
	0x03E51CE8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x598000
	006 Move X20, 0x2CA000
	007 Move W8, [X21+2147]
	008 Move X20, [X20+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2CA000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2147], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W8, [X8+24]
	027 Compare W8, 0
	028 JumpIfEqual {36}
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call EventSystem.get_isUIToolkitActiveEventSystem, X0
	035 Return X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W0, W31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Boolean get_createUIToolkitPanelGameObjectsOnStart()

Disassembly:
	0x03E51CEC ADRP X0, 0x2C9000
	0x03E51CF0 LDR X0, [X0 + 0xDF8]
	0x03E51CF4 BL 0x1C16CF4
	0x03E51CF8 ADRP X0, 0x31A000
	0x03E51CFC LDR X0, [X0 + 0x9B8]
	0x03E51D00 BL 0x1C16CF4
	0x03E51D04 ADRP X0, 0x31A000
	0x03E51D08 LDR X0, [X0 + 0x9B0]
	0x03E51D0C BL 0x1C16CF4
	0x03E51D10 MOVZ W8, 0x1
	0x03E51D14 STRB W8, [X23 + 0x86F]
	0x03E51D18 LDR X0, [X24]
	0x03E51D1C BL 0x1C16F10
	0x03E51D20 LDR X1, [X19]
	0x03E51D24 MOV X19, X0
	0x03E51D28 BL 0x301B7C4
	0x03E51D2C LDR X8, [X20]
	0x03E51D30 LDR X8, [X8 + 0xB8]
	0x03E51D34 STR X19, [X8]
	0x03E51D38 LDR X0, [X22]
	0x03E51D3C BL 0x1C16F10
	0x03E51D40 LDR X2, [X21]
	0x03E51D44 MOV X1, X31
	0x03E51D48 MOV X3, X31
	0x03E51D4C MOV X19, X0
	0x03E51D50 BL 0x295A790
	0x03E51D54 LDR X8, [X20]
	0x03E51D58 LDP X22, X21, [X31 + 0x20]
	0x03E51D5C LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x598000
	006 Move X20, 0x2CA000
	007 Move W8, [X21+2148]
	008 Move X20, [X20+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2CA000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2148], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W8, [X8+25]
	027 Compare W8, 0
	028 JumpIfEqual {36}
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call EventSystem.get_isUIToolkitActiveEventSystem, X0
	035 Return X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W0, W31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Void SetUITookitEventSystemOverride(UnityEngine.EventSystems.EventSystem activeEventSystem, System.Boolean sendEvents = True, System.Boolean createPanelGameObjectsOnStart = True)

Disassembly:
	0x03E51D60 MOVZ W9, 0x101
	0x03E51D64 LDR X8, [X8 + 0xB8]
	0x03E51D68 STP X19, X31, [X8 + 0x8]
	0x03E51D6C LDP X20, X19, [X31 + 0x30]
	0x03E51D70 STRH W9, [X8 + 0x18]
	0x03E51D74 STUR W31, [X8 + 0x1A]
	0x03E51D78 STRH W31, [X8 + 0x1E]
	0x03E51D7C LDR X30, [X31], #0x40
	0x03E51D80 RET
	0x03E51D84 STP X30, X21, [X31 - 0x20]!
	0x03E51D88 STP X20, X19, [X31 + 0x10]
	0x03E51D8C ADRP X21, 0x597000
	0x03E51D90 ADRP X20, 0x2A2000
	0x03E51D94 LDRB W8, [X21 + 0x870]
	0x03E51D98 LDR X20, [X20 + 0x598]
	0x03E51D9C MOV X19, X0
	0x03E51DA0 TBNZ X8, 0x0, 0x3E51DB8
	0x03E51DA4 ADRP X0, 0x2A2000
	0x03E51DA8 LDR X0, [X0 + 0x598]
	0x03E51DAC BL 0x1C16CF4
	0x03E51DB0 MOVZ W8, 0x1
	0x03E51DB4 STRB W8, [X21 + 0x870]
	0x03E51DB8 LDR X0, [X20]
	0x03E51DBC LDR X19, [X19 + 0x10]
	0x03E51DC0 LDR W8, [X0 + 0xE0]
	0x03E51DC4 CBNZ W8, 0x3E51DCC
	0x03E51DC8 BL 0x1C16DFC
	0x03E51DCC MOV X0, X19
	0x03E51DD0 LDP X20, X19, [X31 + 0x10]
	0x03E51DD4 MOV X1, X31
	0x03E51DD8 LDP X30, X21, [X31], #0x20
	0x03E51DDC B 0x3C39564
	0x03E51DE0 B 0x3E51DE4
	0x03E51DE4 STR X30, [X31 - 0x20]!
	0x03E51DE8 STP X20, X19, [X31 + 0x10]
	0x03E51DEC ADRP X20, 0x597000
	0x03E51DF0 LDRB W8, [X20 + 0x871]
	0x03E51DF4 MOV X19, X0
	0x03E51DF8 TBNZ X8, 0x0, 0x3E51E1C
	0x03E51DFC ADRP X0, 0x31A000
	0x03E51E00 LDR X0, [X0 + 0x9D0]
	0x03E51E04 BL 0x1C16CF4
	0x03E51E08 ADRP X0, 0x31A000
	0x03E51E0C LDR X0, [X0 + 0x9D8]
	0x03E51E10 BL 0x1C16CF4
	0x03E51E14 MOVZ W8, 0x1
	0x03E51E18 STRB W8, [X20 + 0x871]
	0x03E51E1C LDR X20, [X19 + 0x20]
	0x03E51E20 CBNZ X20, 0x3E51E4C
	0x03E51E24 ADRP X8, 0x31A000
	0x03E51E28 LDR X8, [X8 + 0x9D8]
	0x03E51E2C LDR X0, [X8]
	0x03E51E30 BL 0x1C16F10
	0x03E51E34 ADRP X8, 0x31A000
	0x03E51E38 LDR X8, [X8 + 0x9D0]
	0x03E51E3C MOV X20, X0
	0x03E51E40 LDR X1, [X8]
	0x03E51E44 BL 0x301B7C4
	0x03E51E48 STR X20, [X19 + 0x20]
	0x03E51E4C MOV X0, X20
	0x03E51E50 LDP X20, X19, [X31 + 0x10]
	0x03E51E54 LDR X30, [X31], #0x20
	0x03E51E58 RET
	0x03E51E5C STR X1, [X0 + 0x20]
	0x03E51E60 RET
	0x03E51E64 MOV X1, X31
	0x03E51E68 B 0x3C36C30
	0x03E51E6C STR X1, [X0 + 0x20]
	0x03E51E70 RET
	0x03E51E74 STR X30, [X31 - 0x40]!
	0x03E51E78 STP X24, X23, [X31 + 0x10]
	0x03E51E7C STP X22, X21, [X31 + 0x20]
	0x03E51E80 STP X20, X19, [X31 + 0x30]
	0x03E51E84 ADRP X22, 0x597000
	0x03E51E88 LDRB W8, [X22 + 0x872]
	0x03E51E8C MOV X19, X2
	0x03E51E90 MOV W20, W1
	0x03E51E94 MOV X21, X0
	0x03E51E98 TBNZ X8, 0x0, 0x3E51EC8
	0x03E51E9C ADRP X0, 0x31A000
	0x03E51EA0 LDR X0, [X0 + 0x9E0]
	0x03E51EA4 BL 0x1C16CF4
	0x03E51EA8 ADRP X0, 0x31A000
	0x03E51EAC LDR X0, [X0 + 0x9E8]
	0x03E51EB0 BL 0x1C16CF4
	0x03E51EB4 ADRP X0, 0x31A000
	0x03E51EB8 LDR X0, [X0 + 0x9F0]
	0x03E51EBC BL 0x1C16CF4
	0x03E51EC0 MOVZ W8, 0x1
	0x03E51EC4 STRB W8, [X22 + 0x872]
	0x03E51EC8 MOV X0, X21
	0x03E51ECC BL 0x3E51DE4
	0x03E51ED0 CBZ X0, 0x3E51F40
	0x03E51ED4 ADRP X23, 0x31A000
	0x03E51ED8 ADRP X24, 0x31A000
	0x03E51EDC LDR X23, [X23 + 0x9E8]
	0x03E51EE0 LDR X24, [X24 + 0x9F0]
	0x03E51EE4 MOV W22, W31
	0x03E51EE8 LDR W8, [X0 + 0x18]
	0x03E51EEC CMP W22, W8
	0x03E51EF0 B.GE 0x3E51F44
	0x03E51EF4 MOV X0, X21
	0x03E51EF8 BL 0x3E51DE4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x598000
	009 Move X22, 0x2CB000
	010 Move W8, [X23+2149]
	011 Move X22, [X22+2352]
	012 Move W21, W2
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x2CA000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move X0, 0x2A3000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x2CB000
	026 Move X0, [X0+2352]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2149], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X23, 0x598000
	036 Move W8, [X23+1102]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x2CB000
	040 Move X0, [X0+2352]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+1102], W8
	044 Move X0, [X22]
	045 And W23, W21, 1
	046 Move X21, 0x2CA000
	047 And W24, W20, 1
	048 Move W8, [X0+224]
	049 Move X21, [X21+3576]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X22]
	054 Move X8, [X0+184]
	055 Move X1, X31
	056 Move X0, [X8+56]
	057 Call UIElementsRuntimeUtility.UnregisterEventSystem, X0
	058 Move X0, [X21]
	059 NotImplemented "Instruction STRH not yet implemented."
	060 Move [X31+8], W31
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move [X8+16], X19
	068 Move [X8+24], W24
	069 Move [X8+25], W23
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move W10, [X31+8]
	072 NotImplemented "Instruction STRH not yet implemented."
	073 Move [X8+26], W10
	074 Move TEMP, X20
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {125}
	078 Move X8, 0x2A3000
	079 Move X8, [X8+1432]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X19
	086 Move X1, X31
	087 Move X2, X31
	088 Call Object.op_Inequality, X0, X1
	089 Move W8, W0
	090 Move X0, X19
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {101}
	095 Move X0, [X21]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Call EventSystem.get_current
	101 Compare X0, 0
	102 JumpIfEqual {133}
	103 Move X1, X31
	104 Call Behaviour.get_isActiveAndEnabled, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {125}
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X19
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X24, [X31+16]
	120 Move X23, [X31+24]
	121 Move X1, X31
	122 Move X30, [X31+64]
	123 Call UIElementsRuntimeUtility.RegisterEventSystem, X0
	124 Return 
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X22, [X31+32]
	128 Move X21, [X31+40]
	129 Move X24, [X31+16]
	130 Move X23, [X31+24]
	131 Move X30, [X31+64]
	132 Return 
	133 Call 0x1C17F20

Method: System.Void StartTrackingUIToolkitPanels()

Disassembly:
	0x03E51EFC CBZ X0, 0x3E51F40
	0x03E51F00 LDR X2, [X23]
	0x03E51F04 MOV W1, W22
	0x03E51F08 BL 0x301BCCC
	0x03E51F0C CBZ X0, 0x3E51F40
	0x03E51F10 LDR W8, [X0 + 0x10]
	0x03E51F14 CMP W8, W20
	0x03E51F18 B.NE 0x3E51F30
	0x03E51F1C LDR X0, [X0 + 0x18]
	0x03E51F20 CBZ X0, 0x3E51F30
	0x03E51F24 LDR X2, [X24]
	0x03E51F28 MOV X1, X19
	0x03E51F2C BL 0x2729DBC
	0x03E51F30 MOV X0, X21
	0x03E51F34 ADD W22, W22, 0x1
	0x03E51F38 BL 0x3E51DE4
	0x03E51F3C CBNZ X0, 0x3E51EE8
	0x03E51F40 BL 0x1C16F20
	0x03E51F44 LDP X20, X19, [X31 + 0x30]
	0x03E51F48 LDP X22, X21, [X31 + 0x20]
	0x03E51F4C LDP X24, X23, [X31 + 0x10]
	0x03E51F50 LDR X30, [X31], #0x40
	0x03E51F54 RET
	0x03E51F58 MOV X2, X1
	0x03E51F5C MOV W1, W31
	0x03E51F60 B 0x3E51E74
	0x03E51F64 MOV X2, X1
	0x03E51F68 MOVZ W1, 0x1
	0x03E51F6C B 0x3E51E74
	0x03E51F70 MOV X2, X1
	0x03E51F74 MOVZ W1, 0x5
	0x03E51F78 B 0x3E51E74
	0x03E51F7C MOV X2, X1
	0x03E51F80 MOVZ W1, 0x6
	0x03E51F84 B 0x3E51E74
	0x03E51F88 MOV X2, X1
	0x03E51F8C MOVZ W1, 0x2
	0x03E51F90 B 0x3E51E74
	0x03E51F94 MOV X2, X1
	0x03E51F98 MOVZ W1, 0x3
	0x03E51F9C B 0x3E51E74
	0x03E51FA0 MOV X2, X1
	0x03E51FA4 MOVZ W1, 0x4
	0x03E51FA8 B 0x3E51E74
	0x03E51FAC MOV X2, X1
	0x03E51FB0 MOVZ W1, 0x9
	0x03E51FB4 B 0x3E51E74
	0x03E51FB8 MOV X2, X1
	0x03E51FBC MOVZ W1, 0xA
	0x03E51FC0 B 0x3E51E74
	0x03E51FC4 MOV X2, X1
	0x03E51FC8 MOVZ W1, 0x7
	0x03E51FCC B 0x3E51E74
	0x03E51FD0 MOV X2, X1
	0x03E51FD4 MOVZ W1, 0xB
	0x03E51FD8 B 0x3E51E74
	0x03E51FDC MOV X2, X1
	0x03E51FE0 MOVZ W1, 0x8
	0x03E51FE4 B 0x3E51E74
	0x03E51FE8 MOV X2, X1
	0x03E51FEC MOVZ W1, 0xC
	0x03E51FF0 B 0x3E51E74
	0x03E51FF4 MOV X2, X1
	0x03E51FF8 MOVZ W1, 0xD
	0x03E51FFC B 0x3E51E74
	0x03E52000 MOV X2, X1
	0x03E52004 MOVZ W1, 0xE
	0x03E52008 B 0x3E51E74
	0x03E5200C MOV X2, X1
	0x03E52010 MOVZ W1, 0xF
	0x03E52014 B 0x3E51E74
	0x03E52018 MOV X2, X1
	0x03E5201C MOVZ W1, 0x10
	0x03E52020 B 0x3E51E74
	0x03E52024 STP X30, X21, [X31 - 0x20]!
	0x03E52028 STP X20, X19, [X31 + 0x10]
	0x03E5202C ADRP X20, 0x596000
	0x03E52030 ADRP X21, 0x319000
	0x03E52034 LDRB W8, [X20 + 0x873]
	0x03E52038 LDR X21, [X21 + 0x9F8]
	0x03E5203C MOV X19, X0
	0x03E52040 TBNZ X8, 0x0, 0x3E52058
	0x03E52044 ADRP X0, 0x319000
	0x03E52048 LDR X0, [X0 + 0x9F8]
	0x03E5204C BL 0x1C16CF4
	0x03E52050 MOVZ W8, 0x1
	0x03E52054 STRB W8, [X20 + 0x873]
	0x03E52058 LDR X1, [X21]
	0x03E5205C MOV X0, X19
	0x03E52060 LDP X20, X19, [X31 + 0x10]
	0x03E52064 LDP X30, X21, [X31], #0x20
	0x03E52068 B 0x2729B5C
	0x03E5206C STP X30, X21, [X31 - 0x20]!
	0x03E52070 STP X20, X19, [X31 + 0x10]
	0x03E52074 ADRP X21, 0x596000
	0x03E52078 ADRP X20, 0x319000
	0x03E5207C LDRB W8, [X21 + 0x874]
	0x03E52080 LDR X20, [X20 + 0xA00]
	0x03E52084 MOV X19, X0
	0x03E52088 TBNZ X8, 0x0, 0x3E520A0
	0x03E5208C ADRP X0, 0x319000
	0x03E52090 LDR X0, [X0 + 0xA00]
	0x03E52094 BL 0x1C16CF4
	0x03E52098 MOVZ W8, 0x1
	0x03E5209C STRB W8, [X21 + 0x874]
	0x03E520A0 MOVZ W8, 0x4
	0x03E520A4 STR W8, [X19 + 0x10]
	0x03E520A8 LDR X0, [X20]
	0x03E520AC BL 0x1C16F10
	0x03E520B0 MOV X20, X0
	0x03E520B4 BL 0x3E52024
	0x03E520B8 STR X20, [X19 + 0x18]
	0x03E520BC MOV X0, X19
	0x03E520C0 LDP X20, X19, [X31 + 0x10]
	0x03E520C4 MOV X1, X31
	0x03E520C8 LDP X30, X21, [X31], #0x20
	0x03E520CC B 0x33BDD8C
	0x03E520D0 STR X30, [X31 - 0x30]!
	0x03E520D4 STP X22, X21, [X31 + 0x10]
	0x03E520D8 STP X20, X19, [X31 + 0x20]
	0x03E520DC ADRP X22, 0x596000
	0x03E520E0 ADRP X21, 0x2C9000
	0x03E520E4 LDRB W8, [X22 + 0x875]
	0x03E520E8 LDR X21, [X21 + 0x9F8]
	0x03E520EC MOV X20, X1
	0x03E520F0 MOV X19, X0
	0x03E520F4 TBNZ X8, 0x0, 0x3E52124
	0x03E520F8 ADRP X0, 0x319000
	0x03E520FC LDR X0, [X0 + 0xA08]
	0x03E52100 BL 0x1C16CF4
	0x03E52104 ADRP X0, 0x2C9000
	0x03E52108 LDR X0, [X0 + 0x9F8]
	0x03E5210C BL 0x1C16CF4
	0x03E52110 ADRP X0, 0x319000
	0x03E52114 LDR X0, [X0 + 0xA10]
	0x03E52118 BL 0x1C16CF4
	0x03E5211C MOVZ W8, 0x1
	0x03E52120 STRB W8, [X22 + 0x875]
	0x03E52124 LDR X0, [X21]
	0x03E52128 ADRP X21, 0x319000
	0x03E5212C LDR W8, [X0 + 0xE0]
	0x03E52130 LDR X21, [X21 + 0xA08]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x598000
	008 Move W8, [X20+2150]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x31A000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move X0, 0x2CB000
	018 Move X0, [X0+2328]
	019 Call 0x1C17CF4
	020 Move X0, 0x31A000
	021 Move X0, [X0+1664]
	022 Call 0x1C17CF4
	023 Move X0, 0x31A000
	024 Move X0, [X0+1672]
	025 Call 0x1C17CF4
	026 Move X0, 0x31A000
	027 Move X0, [X0+1680]
	028 Call 0x1C17CF4
	029 Move X0, 0x31B000
	030 Move X0, [X0+2408]
	031 Call 0x1C17CF4
	032 Move X0, 0x31A000
	033 Move X0, [X0+1688]
	034 Call 0x1C17CF4
	035 Move X0, 0x2CB000
	036 Move X0, [X0+2352]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2150], W8
	040 Move X0, X19
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Call EventSystem.get_createUIToolkitPanelGameObjectsOnStart, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {116}
	049 Move X22, 0x2CB000
	050 Move X22, [X22+2352]
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call UIElementsRuntimeUtility.GetSortedPlayerPanels
	058 Compare X0, 0
	059 JumpIfEqual {126}
	060 Move X8, 0x31A000
	061 Move X8, [X8+1688]
	062 Move X1, [X8]
	063 Add X8, X31, 8
	064 Call List`1<Object>.GetEnumerator, X0
	065 Move X20, 0x31A000
	066 Move X21, 0x2CB000
	067 Move X20, [X20+1672]
	068 Move X21, [X21+2328]
	069 Move X1, [X20]
	070 Add X0, X31, 8
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {90}
	076 Move X1, [X31+24]
	077 Compare X1, 0
	078 JumpIfEqual {88}
	079 Move X9, [X1]
	080 Move X8, [X21]
	081 Move W11, [X9+304]
	082 Move W10, [X8+304]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X9, [X9+200]
	085 Add X9, X9, X10
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X19
	089 Call EventSystem.CreateUIToolkitPanelGameObject, X0, X1
	090 Move X8, 0x319000
	091 Move X8, [X8+1664]
	092 Add X0, X31, 8
	093 Move X1, [X8]
	094 Call Enumerator<Object>.Dispose, X0
	095 Move X8, 0x319000
	096 Move X8, [X8+1448]
	097 Move X0, [X8]
	098 Call 0x1C17F10
	099 Move X8, 0x31A000
	100 Move X8, [X8+2408]
	101 Move X1, X19
	102 Move X3, X31
	103 Move X20, X0
	104 Move X2, [X8]
	105 Call Action`1<Object>..ctor, X0, X1, X2
	106 Move X0, [X22]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X20
	112 Move X1, X31
	113 Call UIElementsRuntimeUtility.add_onCreatePanel, X0
	114 Move W8, 1
	115 Move [X19+89], W8
	116 Move X20, [X31+64]
	117 Move X19, [X31+72]
	118 Move X22, [X31+48]
	119 Move X21, [X31+56]
	120 Move X30, [X31+32]
	121 Add X31, X31, 80
	122 Return 
	123 Move X0, X1
	124 Move X1, X8
	125 Call 0x1C181E0
	126 Call 0x1C17F20
	127 Move X20, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X20
	130 Call 0x3EB2AD0
	131 Move X21, [X0]
	132 Call 0x3EB2AE0
	133 Move X8, 0x319000
	134 Move X8, [X8+1664]
	135 Add X0, X31, 8
	136 Move X1, [X8]
	137 Call Enumerator<Object>.Dispose, X0
	138 Compare X21, 0
	139 JumpIfEqual {95}
	140 Move X0, X21
	141 Call 0x1C17F18
	142 Move X21, X31
	143 Move X20, X0
	144 Move X8, 0x319000
	145 Move X8, [X8+1664]
	146 Move X1, [X8]
	147 Add X0, X31, 8
	148 Call Enumerator<Object>.Dispose, X0
	149 Compare X21, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X20
	152 Call 0x1D2D690
	153 Move X0, X21
	154 Call 0x1C17F18
	155 Call 0x1991590

Method: System.Void StopTrackingUIToolkitPanels()

Disassembly:
	0x03E523CC MOV X19, X0
	0x03E523D0 TBNZ X8, 0x0, 0x3E52400
	0x03E523D4 ADRP X0, 0x319000
	0x03E523D8 LDR X0, [X0 + 0xA08]
	0x03E523DC BL 0x1C16CF4
	0x03E523E0 ADRP X0, 0x2C9000
	0x03E523E4 LDR X0, [X0 + 0x9F8]
	0x03E523E8 BL 0x1C16CF4
	0x03E523EC ADRP X0, 0x319000
	0x03E523F0 LDR X0, [X0 + 0xA28]
	0x03E523F4 BL 0x1C16CF4
	0x03E523F8 MOVZ W8, 0x1
	0x03E523FC STRB W8, [X22 + 0x878]
	0x03E52400 LDR X0, [X21]
	0x03E52404 ADRP X21, 0x319000
	0x03E52408 LDR W8, [X0 + 0xE0]
	0x03E5240C LDR X21, [X21 + 0xA08]
	0x03E52410 CBNZ W8, 0x3E52418
	0x03E52414 BL 0x1C16DFC
	0x03E52418 LDR X1, [X21]
	0x03E5241C MOV X0, X20
	0x03E52420 BL 0x21DE5A4
	0x03E52424 CBZ X19, 0x3E5249C
	0x03E52428 ADRP X10, 0x319000
	0x03E5242C LDR X8, [X19]
	0x03E52430 LDR X10, [X10 + 0xA28]
	0x03E52434 MOV X20, X0
	0x03E52438 LDRH W9, [X8 + 0x12E]
	0x03E5243C LDR X1, [X10]
	0x03E52440 CBZ X9, 0x3E52464
	0x03E52444 LDR X10, [X8 + 0xB0]
	0x03E52448 ADD X10, X10, 0x8
	0x03E5244C LDUR X11, [X10 - 0x8]
	0x03E52450 CMP X11, X1
	0x03E52454 B.EQ 0x3E52474
	0x03E52458 SUBS X9, X9, 0x1
	0x03E5245C ADD X10, X10, 0x10
	0x03E52460 B.NE 0x3E5244C
	0x03E52464 MOV X0, X19
	0x03E52468 MOV W2, W31
	0x03E5246C BL 0x1C5C788
	0x03E52470 B 0x3E52480
	0x03E52474 LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x597000
	006 Move W8, [X20+2151]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x319000
	013 Move X0, [X0+1448]
	014 Call 0x1C17CF4
	015 Move X0, 0x31A000
	016 Move X0, [X0+2408]
	017 Call 0x1C17CF4
	018 Move X0, 0x2CA000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2151], W8
	023 Move W8, [X19+89]
	024 Compare W8, 0
	025 JumpIfEqual {48}
	026 Move X8, 0x319000
	027 Move X8, [X8+1448]
	028 Move X20, 0x31A000
	029 Move X21, 0x2CA000
	030 Move X0, [X8]
	031 Move X20, [X20+2408]
	032 Move X21, [X21+2352]
	033 Call 0x1C17F10
	034 Move X2, [X20]
	035 Move X1, X19
	036 Move X3, X31
	037 Move X20, X0
	038 Call Action`1<Object>..ctor, X0, X1, X2
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call UIElementsRuntimeUtility.remove_onCreatePanel, X0
	047 Move [X19+89], W31
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 

Method: System.Void CreateUIToolkitPanelGameObject(UnityEngine.UIElements.BaseRuntimePanel panel)

Disassembly:
	0x03E52134 CBNZ W8, 0x3E5213C
	0x03E52138 BL 0x1C16DFC
	0x03E5213C LDR X1, [X21]
	0x03E52140 MOV X0, X20
	0x03E52144 BL 0x21DE5A4
	0x03E52148 CBZ X19, 0x3E521C0
	0x03E5214C ADRP X10, 0x319000
	0x03E52150 LDR X8, [X19]
	0x03E52154 LDR X10, [X10 + 0xA10]
	0x03E52158 MOV X20, X0
	0x03E5215C LDRH W9, [X8 + 0x12E]
	0x03E52160 LDR X1, [X10]
	0x03E52164 CBZ X9, 0x3E52188
	0x03E52168 LDR X10, [X8 + 0xB0]
	0x03E5216C ADD X10, X10, 0x8
	0x03E52170 LDUR X11, [X10 - 0x8]
	0x03E52174 CMP X11, X1
	0x03E52178 B.EQ 0x3E52198
	0x03E5217C SUBS X9, X9, 0x1
	0x03E52180 ADD X10, X10, 0x10
	0x03E52184 B.NE 0x3E52170
	0x03E52188 MOV X0, X19
	0x03E5218C MOV W2, W31
	0x03E52190 BL 0x1C5C788
	0x03E52194 B 0x3E521A4
	0x03E52198 LDRSW X9, [X10]
	0x03E5219C ADD X8, X8, X9, 0x4, LSL
	0x03E521A0 ADD X0, X8, 0x138
	0x03E521A4 LDP X3, X2, [X0]
	0x03E521A8 MOV X0, X19
	0x03E521AC MOV X1, X20
	0x03E521B0 LDP X20, X19, [X31 + 0x20]
	0x03E521B4 LDP X22, X21, [X31 + 0x10]
	0x03E521B8 LDR X30, [X31], #0x30
	0x03E521BC BR X3
	0x03E521C0 BL 0x1C16F20
	0x03E521C4 STR X30, [X31 - 0x30]!
	0x03E521C8 STP X22, X21, [X31 + 0x10]
	0x03E521CC STP X20, X19, [X31 + 0x20]
	0x03E521D0 ADRP X22, 0x596000
	0x03E521D4 ADRP X21, 0x2C9000
	0x03E521D8 LDRB W8, [X22 + 0x876]
	0x03E521DC LDR X21, [X21 + 0x9F8]
	0x03E521E0 MOV X20, X1
	0x03E521E4 MOV X19, X0
	0x03E521E8 TBNZ X8, 0x0, 0x3E52218
	0x03E521EC ADRP X0, 0x319000
	0x03E521F0 LDR X0, [X0 + 0xA08]
	0x03E521F4 BL 0x1C16CF4
	0x03E521F8 ADRP X0, 0x2C9000
	0x03E521FC LDR X0, [X0 + 0x9F8]
	0x03E52200 BL 0x1C16CF4
	0x03E52204 ADRP X0, 0x319000
	0x03E52208 LDR X0, [X0 + 0xA18]
	0x03E5220C BL 0x1C16CF4
	0x03E52210 MOVZ W8, 0x1
	0x03E52214 STRB W8, [X22 + 0x876]
	0x03E52218 LDR X0, [X21]
	0x03E5221C ADRP X21, 0x319000
	0x03E52220 LDR W8, [X0 + 0xE0]
	0x03E52224 LDR X21, [X21 + 0xA08]
	0x03E52228 CBNZ W8, 0x3E52230
	0x03E5222C BL 0x1C16DFC
	0x03E52230 LDR X1, [X21]
	0x03E52234 MOV X0, X20
	0x03E52238 BL 0x21DE5A4
	0x03E5223C CBZ X19, 0x3E522B4
	0x03E52240 ADRP X10, 0x319000
	0x03E52244 LDR X8, [X19]
	0x03E52248 LDR X10, [X10 + 0xA18]
	0x03E5224C MOV X20, X0
	0x03E52250 LDRH W9, [X8 + 0x12E]
	0x03E52254 LDR X1, [X10]
	0x03E52258 CBZ X9, 0x3E5227C
	0x03E5225C LDR X10, [X8 + 0xB0]
	0x03E52260 ADD X10, X10, 0x8
	0x03E52264 LDUR X11, [X10 - 0x8]
	0x03E52268 CMP X11, X1
	0x03E5226C B.EQ 0x3E5228C
	0x03E52270 SUBS X9, X9, 0x1
	0x03E52274 ADD X10, X10, 0x10
	0x03E52278 B.NE 0x3E52264
	0x03E5227C MOV X0, X19
	0x03E52280 MOV W2, W31
	0x03E52284 BL 0x1C5C788
	0x03E52288 B 0x3E52298
	0x03E5228C LDRSW X9, [X10]
	0x03E52290 ADD X8, X8, X9, 0x4, LSL
	0x03E52294 ADD X0, X8, 0x138
	0x03E52298 LDP X3, X2, [X0]
	0x03E5229C MOV X0, X19
	0x03E522A0 MOV X1, X20
	0x03E522A4 LDP X20, X19, [X31 + 0x20]
	0x03E522A8 LDP X22, X21, [X31 + 0x10]
	0x03E522AC LDR X30, [X31], #0x30
	0x03E522B0 BR X3
	0x03E522B4 BL 0x1C16F20
	0x03E522B8 STR X30, [X31 - 0x30]!
	0x03E522BC STP X22, X21, [X31 + 0x10]
	0x03E522C0 STP X20, X19, [X31 + 0x20]
	0x03E522C4 ADRP X22, 0x596000
	0x03E522C8 ADRP X21, 0x2C9000
	0x03E522CC LDRB W8, [X22 + 0x877]
	0x03E522D0 LDR X21, [X21 + 0x9F8]
	0x03E522D4 MOV X20, X1
	0x03E522D8 MOV X19, X0
	0x03E522DC TBNZ X8, 0x0, 0x3E5230C
	0x03E522E0 ADRP X0, 0x319000
	0x03E522E4 LDR X0, [X0 + 0xA08]
	0x03E522E8 BL 0x1C16CF4
	0x03E522EC ADRP X0, 0x2C9000
	0x03E522F0 LDR X0, [X0 + 0x9F8]
	0x03E522F4 BL 0x1C16CF4
	0x03E522F8 ADRP X0, 0x319000
	0x03E522FC LDR X0, [X0 + 0xA20]
	0x03E52300 BL 0x1C16CF4
	0x03E52304 MOVZ W8, 0x1
	0x03E52308 STRB W8, [X22 + 0x877]
	0x03E5230C LDR X0, [X21]
	0x03E52310 ADRP X21, 0x319000
	0x03E52314 LDR W8, [X0 + 0xE0]
	0x03E52318 LDR X21, [X21 + 0xA08]
	0x03E5231C CBNZ W8, 0x3E52324
	0x03E52320 BL 0x1C16DFC
	0x03E52324 LDR X1, [X21]
	0x03E52328 MOV X0, X20
	0x03E5232C BL 0x21DE5A4
	0x03E52330 CBZ X19, 0x3E523A8
	0x03E52334 ADRP X10, 0x319000
	0x03E52338 LDR X8, [X19]
	0x03E5233C LDR X10, [X10 + 0xA20]
	0x03E52340 MOV X20, X0
	0x03E52344 LDRH W9, [X8 + 0x12E]
	0x03E52348 LDR X1, [X10]
	0x03E5234C CBZ X9, 0x3E52370
	0x03E52350 LDR X10, [X8 + 0xB0]
	0x03E52354 ADD X10, X10, 0x8
	0x03E52358 LDUR X11, [X10 - 0x8]
	0x03E5235C CMP X11, X1
	0x03E52360 B.EQ 0x3E52380
	0x03E52364 SUBS X9, X9, 0x1
	0x03E52368 ADD X10, X10, 0x10
	0x03E5236C B.NE 0x3E52358
	0x03E52370 MOV X0, X19
	0x03E52374 MOV W2, W31
	0x03E52378 BL 0x1C5C788
	0x03E5237C B 0x3E5238C
	0x03E52380 LDRSW X9, [X10]
	0x03E52384 ADD X8, X8, X9, 0x4, LSL
	0x03E52388 ADD X0, X8, 0x138
	0x03E5238C LDP X3, X2, [X0]
	0x03E52390 MOV X0, X19
	0x03E52394 MOV X1, X20
	0x03E52398 LDP X20, X19, [X31 + 0x20]
	0x03E5239C LDP X22, X21, [X31 + 0x10]
	0x03E523A0 LDR X30, [X31], #0x30
	0x03E523A4 BR X3
	0x03E523A8 BL 0x1C16F20
	0x03E523AC STR X30, [X31 - 0x30]!
	0x03E523B0 STP X22, X21, [X31 + 0x10]
	0x03E523B4 STP X20, X19, [X31 + 0x20]
	0x03E523B8 ADRP X22, 0x596000
	0x03E523BC ADRP X21, 0x2C9000
	0x03E523C0 LDRB W8, [X22 + 0x878]
	0x03E523C4 LDR X21, [X21 + 0x9F8]
	0x03E523C8 MOV X20, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x597000
	009 Move W8, [X21+2152]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0x2A3000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2A2000
	020 Move X0, [X0+2648]
	021 Call 0x1C17CF4
	022 Move X0, 0x2A2000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x31A000
	026 Move X0, [X0+2416]
	027 Call 0x1C17CF4
	028 Move X0, 0x31A000
	029 Move X0, [X0+2424]
	030 Call 0x1C17CF4
	031 Move X0, 0x2AA000
	032 Move X0, [X0+3168]
	033 Call 0x1C17CF4
	034 Move X0, 0x2A2000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0x31A000
	038 Move X0, [X0+2432]
	039 Call 0x1C17CF4
	040 Move X0, 0x31A000
	041 Move X0, [X0+2440]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2152], W8
	045 Compare X19, 0
	046 JumpIfEqual {189}
	047 Move X8, 0x2A2000
	048 Move X8, [X8+1432]
	049 Move X21, [X19+352]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {181}
	063 Move X8, 0x31A000
	064 Move X8, [X8+2440]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X21, X0
	069 Call Object..ctor, X0
	070 Move X0, X19
	071 Move X1, X31
	072 Call Panel.get_name, X0
	073 Move X8, 0x2AA000
	074 Move X8, [X8+3168]
	075 Move X22, X0
	076 Move W1, 2
	077 Move X8, [X8]
	078 Move X0, X8
	079 Call 0x1C17D6C
	080 Move X8, 0x2A2000
	081 Move X8, [X8+1728]
	082 Move X9, 0x31A000
	083 Move X23, X0
	084 Move X8, [X8]
	085 Move X9, [X9+2416]
	086 Move W10, [X8+224]
	087 Move X24, [X9]
	088 Compare W10, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X24
	093 Move X1, X31
	094 Call Type.GetTypeFromHandle, X0
	095 Compare X23, 0
	096 JumpIfEqual {189}
	097 Move X24, X0
	098 Compare X0, 0
	099 JumpIfEqual {106}
	100 Move X8, [X23]
	101 Move X0, X24
	102 Move X1, [X8+64]
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {191}
	106 Move W8, [X23+24]
	107 Compare W8, 0
	108 JumpIfEqual {190}
	109 Move [X23+32], X24
	110 Move X8, 0x31A000
	111 Move X8, [X8+2424]
	112 Move X1, X31
	113 Move X0, [X8]
	114 Call Type.GetTypeFromHandle, X0
	115 Move X24, X0
	116 Compare X0, 0
	117 JumpIfEqual {124}
	118 Move X8, [X23]
	119 Move X0, X24
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {191}
	124 Move W8, [X23+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X23+40], X24
	127 Move X8, 0x2A2000
	128 Move X8, [X8+2648]
	129 Move X0, [X8]
	130 Call 0x1C17F10
	131 Move X1, X22
	132 Move X2, X23
	133 Move X3, X31
	134 Move X24, X0
	135 Call GameObject..ctor, X0, X1, X2
	136 Compare X21, 0
	137 JumpIfEqual {189}
	138 Move [X21+16], X24
	139 Compare X24, 0
	140 JumpIfEqual {189}
	141 Move X0, X24
	142 Move X1, X31
	143 Call GameObject.get_transform, X0
	144 Move X22, X0
	145 Move X0, X20
	146 Move X1, X31
	147 Call Component.get_transform, X0
	148 Compare X22, 0
	149 JumpIfEqual {189}
	150 Move X1, X0
	151 Move X0, X22
	152 Move X2, X31
	153 Call Transform.SetParent, X0, X1
	154 Move X1, [X21+16]
	155 Move X0, X19
	156 Move X2, X31
	157 Call BaseRuntimePanel.set_selectableGameObject, X0, X1
	158 Move X8, 0x2A3000
	159 Move X8, [X8+3696]
	160 Move X0, [X8]
	161 Call 0x1C17F10
	162 Move X8, 0x31A000
	163 Move X8, [X8+2432]
	164 Move X1, X21
	165 Move X3, X31
	166 Move X20, X0
	167 Move X2, [X8]
	168 Call Action..ctor, X0, X1, X2
	169 Move X0, X19
	170 Move X1, X20
	171 Move X20, [X31+48]
	172 Move X19, [X31+56]
	173 Move X22, [X31+32]
	174 Move X21, [X31+40]
	175 Move X24, [X31+16]
	176 Move X23, [X31+24]
	177 Move X2, X31
	178 Move X30, [X31+64]
	179 Call BaseRuntimePanel.add_destroyed, X0, X1
	180 Return 
	181 Move X20, [X31+48]
	182 Move X19, [X31+56]
	183 Move X22, [X31+32]
	184 Move X21, [X31+40]
	185 Move X24, [X31+16]
	186 Move X23, [X31+24]
	187 Move X30, [X31+64]
	188 Return 
	189 Call 0x1C17F20
	190 Call 0x1C17F28
	191 Call 0x1C17F44
	192 Move X1, X31
	193 Call 0x1C17DEC

Method: System.Void Start()

Disassembly:
	0x03E52480 LDP X3, X2, [X0]
	0x03E52484 MOV X0, X19
	0x03E52488 MOV X1, X20

ISIL:
	001 Move W8, 1
	002 Move [X0+88], W8
	003 Call EventSystem.StartTrackingUIToolkitPanels, X0
	004 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03E52490 LDP X22, X21, [X31 + 0x10]
	0x03E52494 LDR X30, [X31], #0x30
	0x03E52498 BR X3
	0x03E5249C BL 0x1C16F20
	0x03E524A0 STR X30, [X31 - 0x30]!
	0x03E524A4 STP X22, X21, [X31 + 0x10]
	0x03E524A8 STP X20, X19, [X31 + 0x20]
	0x03E524AC ADRP X22, 0x596000
	0x03E524B0 ADRP X21, 0x2C9000
	0x03E524B4 LDRB W8, [X22 + 0x879]
	0x03E524B8 LDR X21, [X21 + 0x9F8]
	0x03E524BC MOV X20, X1
	0x03E524C0 MOV X19, X0
	0x03E524C4 TBNZ X8, 0x0, 0x3E524F4
	0x03E524C8 ADRP X0, 0x319000
	0x03E524CC LDR X0, [X0 + 0xA08]
	0x03E524D0 BL 0x1C16CF4
	0x03E524D4 ADRP X0, 0x2C9000
	0x03E524D8 LDR X0, [X0 + 0x9F8]
	0x03E524DC BL 0x1C16CF4
	0x03E524E0 ADRP X0, 0x319000
	0x03E524E4 LDR X0, [X0 + 0xA30]
	0x03E524E8 BL 0x1C16CF4
	0x03E524EC MOVZ W8, 0x1
	0x03E524F0 STRB W8, [X22 + 0x879]
	0x03E524F4 LDR X0, [X21]
	0x03E524F8 ADRP X21, 0x319000
	0x03E524FC LDR W8, [X0 + 0xE0]
	0x03E52500 LDR X21, [X21 + 0xA08]
	0x03E52504 CBNZ W8, 0x3E5250C
	0x03E52508 BL 0x1C16DFC
	0x03E5250C LDR X1, [X21]
	0x03E52510 MOV X0, X20
	0x03E52514 BL 0x21DE5A4
	0x03E52518 CBZ X19, 0x3E52590
	0x03E5251C ADRP X10, 0x319000
	0x03E52520 LDR X8, [X19]
	0x03E52524 LDR X10, [X10 + 0xA30]
	0x03E52528 MOV X20, X0
	0x03E5252C LDRH W9, [X8 + 0x12E]
	0x03E52530 LDR X1, [X10]
	0x03E52534 CBZ X9, 0x3E52558
	0x03E52538 LDR X10, [X8 + 0xB0]
	0x03E5253C ADD X10, X10, 0x8
	0x03E52540 LDUR X11, [X10 - 0x8]
	0x03E52544 CMP X11, X1
	0x03E52548 B.EQ 0x3E52568
	0x03E5254C SUBS X9, X9, 0x1
	0x03E52550 ADD X10, X10, 0x10
	0x03E52554 B.NE 0x3E52540
	0x03E52558 MOV X0, X19
	0x03E5255C MOV W2, W31
	0x03E52560 BL 0x1C5C788
	0x03E52564 B 0x3E52574
	0x03E52568 LDRSW X9, [X10]
	0x03E5256C ADD X8, X8, X9, 0x4, LSL
	0x03E52570 ADD X0, X8, 0x138
	0x03E52574 LDP X3, X2, [X0]
	0x03E52578 MOV X0, X19
	0x03E5257C MOV X1, X20
	0x03E52580 LDP X20, X19, [X31 + 0x20]
	0x03E52584 LDP X22, X21, [X31 + 0x10]
	0x03E52588 LDR X30, [X31], #0x30
	0x03E5258C BR X3
	0x03E52590 BL 0x1C16F20
	0x03E52594 STR X30, [X31 - 0x30]!
	0x03E52598 STP X22, X21, [X31 + 0x10]
	0x03E5259C STP X20, X19, [X31 + 0x20]
	0x03E525A0 ADRP X22, 0x596000
	0x03E525A4 ADRP X21, 0x2C9000
	0x03E525A8 LDRB W8, [X22 + 0x87A]
	0x03E525AC LDR X21, [X21 + 0x9F8]
	0x03E525B0 MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x597000
	006 Move X20, 0x2C9000
	007 Move W8, [X21+2153]
	008 Move X20, [X20+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2C9000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move X0, 0x31A000
	018 Move X0, [X0+2448]
	019 Call 0x1C17CF4
	020 Move X0, 0x2CA000
	021 Move X0, [X0+2352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2153], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Compare X0, 0
	034 JumpIfEqual {90}
	035 Move X9, 0x31A000
	036 Move X9, [X9+2448]
	037 Move W10, [X0+28]
	038 Move X8, [X0+16]
	039 Move X9, [X9]
	040 Add W10, W10, 1
	041 Move [X0+28], W10
	042 Compare X8, 0
	043 JumpIfEqual {90}
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move W11, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W9, W10, 1
	048 Add X8, X8, X10
	049 Move [X0+24], W9
	050 Move [X8+32], X19
	051 Move X8, [X9+32]
	052 Move X1, X19
	053 Move X8, [X8+192]
	054 Move X2, [X8+112]
	055 Call List`1<Object>.AddWithResize, X0, X1
	056 Move W8, [X19+88]
	057 Compare W8, 0
	058 JumpIfEqual {64}
	059 Move W8, [X19+89]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X19
	063 Call EventSystem.StartTrackingUIToolkitPanels, X0
	064 Move X0, X19
	065 Call EventSystem.get_sendUIToolkitEvents, X0
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {85}
	070 Move X8, 0x2CA000
	071 Move X8, [X8+2352]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X19
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X1, X31
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call UIElementsRuntimeUtility.RegisterEventSystem, X0
	084 Return 
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03E525B4 MOV X19, X0
	0x03E525B8 TBNZ X8, 0x0, 0x3E525E8
	0x03E525BC ADRP X0, 0x319000
	0x03E525C0 LDR X0, [X0 + 0xA08]
	0x03E525C4 BL 0x1C16CF4
	0x03E525C8 ADRP X0, 0x2C9000
	0x03E525CC LDR X0, [X0 + 0x9F8]
	0x03E525D0 BL 0x1C16CF4
	0x03E525D4 ADRP X0, 0x319000
	0x03E525D8 LDR X0, [X0 + 0xA38]
	0x03E525DC BL 0x1C16CF4
	0x03E525E0 MOVZ W8, 0x1
	0x03E525E4 STRB W8, [X22 + 0x87A]
	0x03E525E8 LDR X0, [X21]
	0x03E525EC ADRP X21, 0x319000
	0x03E525F0 LDR W8, [X0 + 0xE0]
	0x03E525F4 LDR X21, [X21 + 0xA08]
	0x03E525F8 CBNZ W8, 0x3E52600
	0x03E525FC BL 0x1C16DFC
	0x03E52600 LDR X1, [X21]
	0x03E52604 MOV X0, X20
	0x03E52608 BL 0x21DE5A4
	0x03E5260C CBZ X19, 0x3E52684
	0x03E52610 ADRP X10, 0x319000
	0x03E52614 LDR X8, [X19]
	0x03E52618 LDR X10, [X10 + 0xA38]
	0x03E5261C MOV X20, X0
	0x03E52620 LDRH W9, [X8 + 0x12E]
	0x03E52624 LDR X1, [X10]
	0x03E52628 CBZ X9, 0x3E5264C
	0x03E5262C LDR X10, [X8 + 0xB0]
	0x03E52630 ADD X10, X10, 0x8
	0x03E52634 LDUR X11, [X10 - 0x8]
	0x03E52638 CMP X11, X1
	0x03E5263C B.EQ 0x3E5265C
	0x03E52640 SUBS X9, X9, 0x1
	0x03E52644 ADD X10, X10, 0x10
	0x03E52648 B.NE 0x3E52634
	0x03E5264C MOV X0, X19
	0x03E52650 MOV W2, W31
	0x03E52654 BL 0x1C5C788
	0x03E52658 B 0x3E52668
	0x03E5265C LDRSW X9, [X10]
	0x03E52660 ADD X8, X8, X9, 0x4, LSL
	0x03E52664 ADD X0, X8, 0x138
	0x03E52668 LDP X3, X2, [X0]
	0x03E5266C MOV X0, X19
	0x03E52670 MOV X1, X20
	0x03E52674 LDP X20, X19, [X31 + 0x20]
	0x03E52678 LDP X22, X21, [X31 + 0x10]
	0x03E5267C LDR X30, [X31], #0x30
	0x03E52680 BR X3
	0x03E52684 BL 0x1C16F20
	0x03E52688 STR X30, [X31 - 0x30]!
	0x03E5268C STP X22, X21, [X31 + 0x10]
	0x03E52690 STP X20, X19, [X31 + 0x20]
	0x03E52694 ADRP X22, 0x596000
	0x03E52698 ADRP X21, 0x2C9000
	0x03E5269C LDRB W8, [X22 + 0x87B]
	0x03E526A0 LDR X21, [X21 + 0x9F8]
	0x03E526A4 MOV X20, X1
	0x03E526A8 MOV X19, X0
	0x03E526AC TBNZ X8, 0x0, 0x3E526DC
	0x03E526B0 ADRP X0, 0x319000
	0x03E526B4 LDR X0, [X0 + 0xA08]
	0x03E526B8 BL 0x1C16CF4
	0x03E526BC ADRP X0, 0x2C9000
	0x03E526C0 LDR X0, [X0 + 0x9F8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x597000
	006 Move X20, 0x2CA000
	007 Move W8, [X21+2154]
	008 Move X20, [X20+2352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2C9000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move X0, 0x31A000
	018 Move X0, [X0+2456]
	019 Call 0x1C17CF4
	020 Move X0, 0x2A2000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x2CA000
	024 Move X0, [X0+2352]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2154], W8
	028 Move X21, 0x2A2000
	029 Move X21, [X21+1432]
	030 Move X0, X19
	031 Call EventSystem.StopTrackingUIToolkitPanels, X0
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X1, X31
	039 Call UIElementsRuntimeUtility.UnregisterEventSystem, X0
	040 Move X0, [X21]
	041 Move X20, [X19+40]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X20
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {62}
	054 Move X0, [X19+40]
	055 Compare X0, 0
	056 JumpIfEqual {84}
	057 Move X8, [X0]
	058 Move X9, [X8+664]
	059 Move X1, [X8+672]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move [X19+40], X31
	062 Move X20, 0x2C9000
	063 Move X20, [X20+3576]
	064 Move X0, [X20]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X20]
	070 Move X8, [X0+184]
	071 Move X0, [X8]
	072 Compare X0, 0
	073 JumpIfEqual {84}
	074 Move X8, 0x31A000
	075 Move X8, [X8+2456]
	076 Move X1, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X2, [X8]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Call List`1<Object>.Remove, X0, X1
	083 Return 
	084 Call 0x1C17F20

Method: System.Void TickModules()

Disassembly:
	0x03E526C4 BL 0x1C16CF4
	0x03E526C8 ADRP X0, 0x319000
	0x03E526CC LDR X0, [X0 + 0xA40]
	0x03E526D0 BL 0x1C16CF4
	0x03E526D4 MOVZ W8, 0x1
	0x03E526D8 STRB W8, [X22 + 0x87B]
	0x03E526DC LDR X0, [X21]
	0x03E526E0 ADRP X21, 0x319000
	0x03E526E4 LDR W8, [X0 + 0xE0]
	0x03E526E8 LDR X21, [X21 + 0xA08]
	0x03E526EC CBNZ W8, 0x3E526F4
	0x03E526F0 BL 0x1C16DFC
	0x03E526F4 LDR X1, [X21]
	0x03E526F8 MOV X0, X20
	0x03E526FC BL 0x21DE5A4
	0x03E52700 CBZ X19, 0x3E52778
	0x03E52704 ADRP X10, 0x319000
	0x03E52708 LDR X8, [X19]
	0x03E5270C LDR X10, [X10 + 0xA40]
	0x03E52710 MOV X20, X0
	0x03E52714 LDRH W9, [X8 + 0x12E]
	0x03E52718 LDR X1, [X10]
	0x03E5271C CBZ X9, 0x3E52740
	0x03E52720 LDR X10, [X8 + 0xB0]
	0x03E52724 ADD X10, X10, 0x8
	0x03E52728 LDUR X11, [X10 - 0x8]
	0x03E5272C CMP X11, X1
	0x03E52730 B.EQ 0x3E52750
	0x03E52734 SUBS X9, X9, 0x1
	0x03E52738 ADD X10, X10, 0x10
	0x03E5273C B.NE 0x3E52728
	0x03E52740 MOV X0, X19
	0x03E52744 MOV W2, W31
	0x03E52748 BL 0x1C5C788
	0x03E5274C B 0x3E5275C
	0x03E52750 LDRSW X9, [X10]
	0x03E52754 ADD X8, X8, X9, 0x4, LSL
	0x03E52758 ADD X0, X8, 0x138
	0x03E5275C LDP X3, X2, [X0]
	0x03E52760 MOV X0, X19
	0x03E52764 MOV X1, X20
	0x03E52768 LDP X20, X19, [X31 + 0x20]
	0x03E5276C LDP X22, X21, [X31 + 0x10]
	0x03E52770 LDR X30, [X31], #0x30
	0x03E52774 BR X3
	0x03E52778 BL 0x1C16F20
	0x03E5277C STR X30, [X31 - 0x30]!
	0x03E52780 STP X22, X21, [X31 + 0x10]
	0x03E52784 STP X20, X19, [X31 + 0x20]
	0x03E52788 ADRP X22, 0x596000
	0x03E5278C ADRP X21, 0x2C9000
	0x03E52790 LDRB W8, [X22 + 0x87C]
	0x03E52794 LDR X21, [X21 + 0x9F8]
	0x03E52798 MOV X20, X1
	0x03E5279C MOV X19, X0
	0x03E527A0 TBNZ X8, 0x0, 0x3E527D0
	0x03E527A4 ADRP X0, 0x319000
	0x03E527A8 LDR X0, [X0 + 0xA08]
	0x03E527AC BL 0x1C16CF4
	0x03E527B0 ADRP X0, 0x2C9000
	0x03E527B4 LDR X0, [X0 + 0x9F8]
	0x03E527B8 BL 0x1C16CF4
	0x03E527BC ADRP X0, 0x319000
	0x03E527C0 LDR X0, [X0 + 0xA48]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x597000
	009 Move W8, [X20+2155]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x31A000
	016 Move X0, [X0+2344]
	017 Call 0x1C17CF4
	018 Move X0, 0x31A000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move X0, 0x2A2000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2155], W8
	026 Move X0, [X19+32]
	027 Compare X0, 0
	028 JumpIfEqual {71}
	029 Move W8, [X0+24]
	030 Subtract W22, W8, 1
	031 Move X23, 0x31A000
	032 Move X24, 0x2A2000
	033 Move X23, [X23+2352]
	034 Move X24, [X24+1432]
	035 Move W20, W31
	036 Move X2, [X23]
	037 Move W1, W20
	038 Call List`1<Object>.get_Item, X0, X1
	039 Move X8, [X24]
	040 Move X21, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {66}
	054 Move X0, [X19+32]
	055 Compare X0, 0
	056 JumpIfEqual {71}
	057 Move X2, [X23]
	058 Move W1, W20
	059 Call List`1<Object>.get_Item, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {71}
	062 Move X8, [X0]
	063 Move X9, [X8+696]
	064 Move X1, [X8+704]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X19+32]
	068 Add W20, W20, 1
	069 Compare X0, 0
	070 JumpIfNotEqual {36}
	071 Call 0x1C17F20
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return 

Method: System.Void OnApplicationFocus(System.Boolean hasFocus)

Disassembly:
	0x03E527C4 BL 0x1C16CF4
	0x03E527C8 MOVZ W8, 0x1
	0x03E527CC STRB W8, [X22 + 0x87C]
	0x03E527D0 LDR X0, [X21]
	0x03E527D4 ADRP X21, 0x319000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+72], W8
	003 Move TEMP, X1
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {8}
	007 Return 
	008 Call EventSystem.TickModules, X0
	009 Return 

Method: System.Void Update()

Disassembly:
	0x03E527D8 LDR W8, [X0 + 0xE0]
	0x03E527DC LDR X21, [X21 + 0xA08]
	0x03E527E0 CBNZ W8, 0x3E527E8
	0x03E527E4 BL 0x1C16DFC
	0x03E527E8 LDR X1, [X21]
	0x03E527EC MOV X0, X20
	0x03E527F0 BL 0x21DE5A4
	0x03E527F4 CBZ X19, 0x3E5286C
	0x03E527F8 ADRP X10, 0x319000
	0x03E527FC LDR X8, [X19]
	0x03E52800 LDR X10, [X10 + 0xA48]
	0x03E52804 MOV X20, X0
	0x03E52808 LDRH W9, [X8 + 0x12E]
	0x03E5280C LDR X1, [X10]
	0x03E52810 CBZ X9, 0x3E52834
	0x03E52814 LDR X10, [X8 + 0xB0]
	0x03E52818 ADD X10, X10, 0x8
	0x03E5281C LDUR X11, [X10 - 0x8]
	0x03E52820 CMP X11, X1
	0x03E52824 B.EQ 0x3E52844
	0x03E52828 SUBS X9, X9, 0x1
	0x03E5282C ADD X10, X10, 0x10
	0x03E52830 B.NE 0x3E5281C
	0x03E52834 MOV X0, X19
	0x03E52838 MOV W2, W31
	0x03E5283C BL 0x1C5C788
	0x03E52840 B 0x3E52850
	0x03E52844 LDRSW X9, [X10]
	0x03E52848 ADD X8, X8, X9, 0x4, LSL
	0x03E5284C ADD X0, X8, 0x138
	0x03E52850 LDP X3, X2, [X0]
	0x03E52854 MOV X0, X19
	0x03E52858 MOV X1, X20
	0x03E5285C LDP X20, X19, [X31 + 0x20]
	0x03E52860 LDP X22, X21, [X31 + 0x10]
	0x03E52864 LDR X30, [X31], #0x30
	0x03E52868 BR X3
	0x03E5286C BL 0x1C16F20
	0x03E52870 STR X30, [X31 - 0x30]!
	0x03E52874 STP X22, X21, [X31 + 0x10]
	0x03E52878 STP X20, X19, [X31 + 0x20]
	0x03E5287C ADRP X22, 0x596000
	0x03E52880 ADRP X21, 0x2C9000
	0x03E52884 LDRB W8, [X22 + 0x87D]
	0x03E52888 LDR X21, [X21 + 0x9F8]
	0x03E5288C MOV X20, X1
	0x03E52890 MOV X19, X0
	0x03E52894 TBNZ X8, 0x0, 0x3E528C4
	0x03E52898 ADRP X0, 0x319000
	0x03E5289C LDR X0, [X0 + 0xA08]
	0x03E528A0 BL 0x1C16CF4
	0x03E528A4 ADRP X0, 0x2C9000
	0x03E528A8 LDR X0, [X0 + 0x9F8]
	0x03E528AC BL 0x1C16CF4
	0x03E528B0 ADRP X0, 0x319000
	0x03E528B4 LDR X0, [X0 + 0xA50]
	0x03E528B8 BL 0x1C16CF4
	0x03E528BC MOVZ W8, 0x1
	0x03E528C0 STRB W8, [X22 + 0x87D]
	0x03E528C4 LDR X0, [X21]
	0x03E528C8 ADRP X21, 0x319000
	0x03E528CC LDR W8, [X0 + 0xE0]
	0x03E528D0 LDR X21, [X21 + 0xA08]
	0x03E528D4 CBNZ W8, 0x3E528DC
	0x03E528D8 BL 0x1C16DFC
	0x03E528DC LDR X1, [X21]
	0x03E528E0 MOV X0, X20
	0x03E528E4 BL 0x21DE5A4
	0x03E528E8 CBZ X19, 0x3E52960
	0x03E528EC ADRP X10, 0x319000
	0x03E528F0 LDR X8, [X19]
	0x03E528F4 LDR X10, [X10 + 0xA50]
	0x03E528F8 MOV X20, X0
	0x03E528FC LDRH W9, [X8 + 0x12E]
	0x03E52900 LDR X1, [X10]
	0x03E52904 CBZ X9, 0x3E52928
	0x03E52908 LDR X10, [X8 + 0xB0]
	0x03E5290C ADD X10, X10, 0x8
	0x03E52910 LDUR X11, [X10 - 0x8]
	0x03E52914 CMP X11, X1
	0x03E52918 B.EQ 0x3E52938
	0x03E5291C SUBS X9, X9, 0x1
	0x03E52920 ADD X10, X10, 0x10
	0x03E52924 B.NE 0x3E52910
	0x03E52928 MOV X0, X19
	0x03E5292C MOV W2, W31
	0x03E52930 BL 0x1C5C788
	0x03E52934 B 0x3E52944
	0x03E52938 LDRSW X9, [X10]
	0x03E5293C ADD X8, X8, X9, 0x4, LSL
	0x03E52940 ADD X0, X8, 0x138
	0x03E52944 LDP X3, X2, [X0]
	0x03E52948 MOV X0, X19
	0x03E5294C MOV X1, X20
	0x03E52950 LDP X20, X19, [X31 + 0x20]
	0x03E52954 LDP X22, X21, [X31 + 0x10]
	0x03E52958 LDR X30, [X31], #0x30
	0x03E5295C BR X3
	0x03E52960 BL 0x1C16F20
	0x03E52964 STR X30, [X31 - 0x30]!
	0x03E52968 STP X22, X21, [X31 + 0x10]
	0x03E5296C STP X20, X19, [X31 + 0x20]
	0x03E52970 ADRP X22, 0x596000
	0x03E52974 ADRP X21, 0x2C9000
	0x03E52978 LDRB W8, [X22 + 0x87E]
	0x03E5297C LDR X21, [X21 + 0x9F8]
	0x03E52980 MOV X20, X1
	0x03E52984 MOV X19, X0
	0x03E52988 TBNZ X8, 0x0, 0x3E529B8
	0x03E5298C ADRP X0, 0x319000
	0x03E52990 LDR X0, [X0 + 0xA08]
	0x03E52994 BL 0x1C16CF4
	0x03E52998 ADRP X0, 0x2C9000
	0x03E5299C LDR X0, [X0 + 0x9F8]
	0x03E529A0 BL 0x1C16CF4
	0x03E529A4 ADRP X0, 0x319000
	0x03E529A8 LDR X0, [X0 + 0xA58]
	0x03E529AC BL 0x1C16CF4
	0x03E529B0 MOVZ W8, 0x1
	0x03E529B4 STRB W8, [X22 + 0x87E]
	0x03E529B8 LDR X0, [X21]
	0x03E529BC ADRP X21, 0x319000
	0x03E529C0 LDR W8, [X0 + 0xE0]
	0x03E529C4 LDR X21, [X21 + 0xA08]
	0x03E529C8 CBNZ W8, 0x3E529D0
	0x03E529CC BL 0x1C16DFC
	0x03E529D0 LDR X1, [X21]
	0x03E529D4 MOV X0, X20
	0x03E529D8 BL 0x21DE5A4
	0x03E529DC CBZ X19, 0x3E52A54
	0x03E529E0 ADRP X10, 0x319000
	0x03E529E4 LDR X8, [X19]
	0x03E529E8 LDR X10, [X10 + 0xA58]
	0x03E529EC MOV X20, X0
	0x03E529F0 LDRH W9, [X8 + 0x12E]
	0x03E529F4 LDR X1, [X10]
	0x03E529F8 CBZ X9, 0x3E52A1C
	0x03E529FC LDR X10, [X8 + 0xB0]
	0x03E52A00 ADD X10, X10, 0x8
	0x03E52A04 LDUR X11, [X10 - 0x8]
	0x03E52A08 CMP X11, X1
	0x03E52A0C B.EQ 0x3E52A2C
	0x03E52A10 SUBS X9, X9, 0x1
	0x03E52A14 ADD X10, X10, 0x10
	0x03E52A18 B.NE 0x3E52A04
	0x03E52A1C MOV X0, X19
	0x03E52A20 MOV W2, W31
	0x03E52A24 BL 0x1C5C788
	0x03E52A28 B 0x3E52A38
	0x03E52A2C LDRSW X9, [X10]
	0x03E52A30 ADD X8, X8, X9, 0x4, LSL
	0x03E52A34 ADD X0, X8, 0x138
	0x03E52A38 LDP X3, X2, [X0]
	0x03E52A3C MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x597000
	010 Move X20, 0x2C9000
	011 Move W8, [X21+2156]
	012 Move X20, [X20+3576]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2C9000
	019 Move X0, [X0+3576]
	020 Call 0x1C17CF4
	021 Move X0, 0x31A000
	022 Move X0, [X0+2344]
	023 Call 0x1C17CF4
	024 Move X0, 0x31A000
	025 Move X0, [X0+2352]
	026 Call 0x1C17CF4
	027 Move X0, 0x2A2000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2156], W8
	032 Move X0, [X20]
	033 Move X22, 0x2A2000
	034 Move W8, [X0+224]
	035 Move X22, [X22+1432]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Call EventSystem.get_current
	040 Move X8, [X22]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X19
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {182}
	055 Move X0, X19
	056 Call EventSystem.TickModules, X0
	057 Move X0, [X19+32]
	058 Compare X0, 0
	059 JumpIfEqual {201}
	060 Move W23, [X0+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X24, 0x31A000
	063 Move X24, [X24+2352]
	064 Move W20, W31
	065 Move X2, [X24]
	066 Move W1, W20
	067 Call List`1<Object>.get_Item, X0, X1
	068 Compare X0, 0
	069 JumpIfEqual {201}
	070 Move X8, [X0]
	071 Move X21, X0
	072 Move X9, [X8+712]
	073 Move X1, [X8+720]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {88}
	079 Move X8, [X21]
	080 Move X0, X21
	081 Move X9, [X8+648]
	082 Move X1, [X8+656]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {93}
	088 Add W20, W20, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X19+32]
	091 Compare X0, 0
	092 JumpIfNotEqual {65}
	093 Move X0, [X22]
	094 Move X20, [X19+40]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X21
	101 Move X2, X31
	102 Call Object.op_Inequality, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {111}
	107 Move X0, X19
	108 Move X1, X21
	109 Call EventSystem.ChangeEventModule, X0, X1
	110 Move W24, 1
	111 Move W24, W31
	112 Move X0, [X22]
	113 Move X20, [X19+40]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X20
	119 Move X1, X31
	120 Move X2, X31
	121 Call Object.op_Equality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {149}
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X25, 0x31A000
	128 Move X25, [X25+2352]
	129 Move W20, W31
	130 Move X0, [X19+32]
	131 Compare X0, 0
	132 JumpIfEqual {201}
	133 Move X2, [X25]
	134 Move W1, W20
	135 Call List`1<Object>.get_Item, X0, X1
	136 Compare X0, 0
	137 JumpIfEqual {201}
	138 Move X8, [X0]
	139 Move X21, X0
	140 Move X9, [X8+712]
	141 Move X1, [X8+720]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {191}
	147 Add W20, W20, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move TEMP, X24
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {182}
	153 Move X0, [X22]
	154 Move X20, [X19+40]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, X20
	160 Move X1, X31
	161 Move X2, X31
	162 Call Object.op_Inequality, X0, X1
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {182}
	167 Move X0, [X19+40]
	168 Compare X0, 0
	169 JumpIfEqual {201}
	170 Move X8, [X0]
	171 Move X20, [X31+48]
	172 Move X19, [X31+56]
	173 Move X22, [X31+32]
	174 Move X21, [X31+40]
	175 Move X24, [X31+16]
	176 Move X23, [X31+24]
	177 Move X2, [X8+584]
	178 Move X1, [X8+592]
	179 Move X30, [X31+64]
	180 Move X25, [X31+72]
	181 CallNoReturn X2
	182 Move X20, [X31+48]
	183 Move X19, [X31+56]
	184 Move X22, [X31+32]
	185 Move X21, [X31+40]
	186 Move X24, [X31+16]
	187 Move X23, [X31+24]
	188 Move X30, [X31+64]
	189 Move X25, [X31+72]
	190 Return 
	191 Move X0, X19
	192 Move X1, X21
	193 Move X20, [X31+48]
	194 Move X19, [X31+56]
	195 Move X22, [X31+32]
	196 Move X21, [X31+40]
	197 Move X24, [X31+16]
	198 Move X23, [X31+24]
	199 Move X30, [X31+64]
	200 Move X25, [X31+72]
	201 Call 0x1C17F20

Method: System.Void ChangeEventModule(UnityEngine.EventSystems.BaseInputModule module)

Disassembly:
	0x03E52A40 MOV X1, X20
	0x03E52A44 LDP X20, X19, [X31 + 0x20]
	0x03E52A48 LDP X22, X21, [X31 + 0x10]
	0x03E52A4C LDR X30, [X31], #0x30
	0x03E52A50 BR X3
	0x03E52A54 BL 0x1C16F20
	0x03E52A58 STR X30, [X31 - 0x30]!
	0x03E52A5C STP X22, X21, [X31 + 0x10]
	0x03E52A60 STP X20, X19, [X31 + 0x20]
	0x03E52A64 ADRP X22, 0x596000
	0x03E52A68 ADRP X21, 0x2C9000
	0x03E52A6C LDRB W8, [X22 + 0x87F]
	0x03E52A70 LDR X21, [X21 + 0x9F8]
	0x03E52A74 MOV X20, X1
	0x03E52A78 MOV X19, X0
	0x03E52A7C TBNZ X8, 0x0, 0x3E52AAC
	0x03E52A80 ADRP X0, 0x319000
	0x03E52A84 LDR X0, [X0 + 0xA08]
	0x03E52A88 BL 0x1C16CF4
	0x03E52A8C ADRP X0, 0x2C9000
	0x03E52A90 LDR X0, [X0 + 0x9F8]
	0x03E52A94 BL 0x1C16CF4
	0x03E52A98 ADRP X0, 0x319000
	0x03E52A9C LDR X0, [X0 + 0xA60]
	0x03E52AA0 BL 0x1C16CF4
	0x03E52AA4 MOVZ W8, 0x1
	0x03E52AA8 STRB W8, [X22 + 0x87F]
	0x03E52AAC LDR X0, [X21]
	0x03E52AB0 ADRP X21, 0x319000
	0x03E52AB4 LDR W8, [X0 + 0xE0]
	0x03E52AB8 LDR X21, [X21 + 0xA08]
	0x03E52ABC CBNZ W8, 0x3E52AC4
	0x03E52AC0 BL 0x1C16DFC
	0x03E52AC4 LDR X1, [X21]
	0x03E52AC8 MOV X0, X20
	0x03E52ACC BL 0x21DE5A4
	0x03E52AD0 CBZ X19, 0x3E52B48
	0x03E52AD4 ADRP X10, 0x319000
	0x03E52AD8 LDR X8, [X19]
	0x03E52ADC LDR X10, [X10 + 0xA60]
	0x03E52AE0 MOV X20, X0
	0x03E52AE4 LDRH W9, [X8 + 0x12E]
	0x03E52AE8 LDR X1, [X10]
	0x03E52AEC CBZ X9, 0x3E52B10
	0x03E52AF0 LDR X10, [X8 + 0xB0]
	0x03E52AF4 ADD X10, X10, 0x8
	0x03E52AF8 LDUR X11, [X10 - 0x8]
	0x03E52AFC CMP X11, X1
	0x03E52B00 B.EQ 0x3E52B20
	0x03E52B04 SUBS X9, X9, 0x1
	0x03E52B08 ADD X10, X10, 0x10
	0x03E52B0C B.NE 0x3E52AF8
	0x03E52B10 MOV X0, X19
	0x03E52B14 MOV W2, W31
	0x03E52B18 BL 0x1C5C788
	0x03E52B1C B 0x3E52B2C
	0x03E52B20 LDRSW X9, [X10]
	0x03E52B24 ADD X8, X8, X9, 0x4, LSL
	0x03E52B28 ADD X0, X8, 0x138
	0x03E52B2C LDP X3, X2, [X0]
	0x03E52B30 MOV X0, X19
	0x03E52B34 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x597000
	007 Move X22, 0x2A2000
	008 Move W8, [X21+2157]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2A2000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2157], W8
	021 Move X0, [X22]
	022 Move X21, [X20+40]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X19
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {77}
	035 Move X0, [X22]
	036 Move X21, [X20+40]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {56}
	049 Move X0, [X20+40]
	050 Compare X0, 0
	051 JumpIfEqual {83}
	052 Move X8, [X0]
	053 Move X9, [X8+664]
	054 Move X1, [X8+672]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X0, [X22]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Inequality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {76}
	069 Compare X19, 0
	070 JumpIfEqual {83}
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+680]
	074 Move X1, [X8+688]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move [X20+40], X19
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return 
	083 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03E52B38 LDP X20, X19, [X31 + 0x20]
	0x03E52B3C LDP X22, X21, [X31 + 0x10]
	0x03E52B40 LDR X30, [X31], #0x30
	0x03E52B44 BR X3
	0x03E52B48 BL 0x1C16F20
	0x03E52B4C STR X30, [X31 - 0x30]!
	0x03E52B50 STP X22, X21, [X31 + 0x10]
	0x03E52B54 STP X20, X19, [X31 + 0x20]
	0x03E52B58 ADRP X22, 0x596000
	0x03E52B5C ADRP X21, 0x2C9000
	0x03E52B60 LDRB W8, [X22 + 0x880]
	0x03E52B64 LDR X21, [X21 + 0x9F8]
	0x03E52B68 MOV X20, X1
	0x03E52B6C MOV X19, X0
	0x03E52B70 TBNZ X8, 0x0, 0x3E52BA0
	0x03E52B74 ADRP X0, 0x319000
	0x03E52B78 LDR X0, [X0 + 0xA08]
	0x03E52B7C BL 0x1C16CF4
	0x03E52B80 ADRP X0, 0x2C9000
	0x03E52B84 LDR X0, [X0 + 0x9F8]
	0x03E52B88 BL 0x1C16CF4
	0x03E52B8C ADRP X0, 0x307000
	0x03E52B90 LDR X0, [X0 + 0x190]
	0x03E52B94 BL 0x1C16CF4
	0x03E52B98 MOVZ W8, 0x1
	0x03E52B9C STRB W8, [X22 + 0x880]
	0x03E52BA0 LDR X0, [X21]
	0x03E52BA4 ADRP X21, 0x319000
	0x03E52BA8 LDR W8, [X0 + 0xE0]
	0x03E52BAC LDR X21, [X21 + 0xA08]
	0x03E52BB0 CBNZ W8, 0x3E52BB8
	0x03E52BB4 BL 0x1C16DFC
	0x03E52BB8 LDR X1, [X21]
	0x03E52BBC MOV X0, X20
	0x03E52BC0 BL 0x21DE5A4
	0x03E52BC4 CBZ X19, 0x3E52C3C
	0x03E52BC8 ADRP X10, 0x307000
	0x03E52BCC LDR X8, [X19]
	0x03E52BD0 LDR X10, [X10 + 0x190]
	0x03E52BD4 MOV X20, X0
	0x03E52BD8 LDRH W9, [X8 + 0x12E]
	0x03E52BDC LDR X1, [X10]
	0x03E52BE0 CBZ X9, 0x3E52C04
	0x03E52BE4 LDR X10, [X8 + 0xB0]
	0x03E52BE8 ADD X10, X10, 0x8
	0x03E52BEC LDUR X11, [X10 - 0x8]
	0x03E52BF0 CMP X11, X1
	0x03E52BF4 B.EQ 0x3E52C14
	0x03E52BF8 SUBS X9, X9, 0x1
	0x03E52BFC ADD X10, X10, 0x10
	0x03E52C00 B.NE 0x3E52BEC
	0x03E52C04 MOV X0, X19
	0x03E52C08 MOV W2, W31
	0x03E52C0C BL 0x1C5C788
	0x03E52C10 B 0x3E52C20
	0x03E52C14 LDRSW X9, [X10]
	0x03E52C18 ADD X8, X8, X9, 0x4, LSL
	0x03E52C1C ADD X0, X8, 0x138
	0x03E52C20 LDP X3, X2, [X0]
	0x03E52C24 MOV X0, X19
	0x03E52C28 MOV X1, X20
	0x03E52C2C LDP X20, X19, [X31 + 0x20]
	0x03E52C30 LDP X22, X21, [X31 + 0x10]
	0x03E52C34 LDR X30, [X31], #0x30
	0x03E52C38 BR X3
	0x03E52C3C BL 0x1C16F20
	0x03E52C40 STP X30, X21, [X31 - 0x20]!
	0x03E52C44 STP X20, X19, [X31 + 0x10]
	0x03E52C48 ADRP X21, 0x596000
	0x03E52C4C LDRB W8, [X21 + 0x881]
	0x03E52C50 MOV X19, X1
	0x03E52C54 MOV X20, X0
	0x03E52C58 TBNZ X8, 0x0, 0x3E52C70
	0x03E52C5C ADRP X0, 0x319000
	0x03E52C60 LDR X0, [X0 + 0xA68]
	0x03E52C64 BL 0x1C16CF4
	0x03E52C68 MOVZ W8, 0x1
	0x03E52C6C STRB W8, [X21 + 0x881]
	0x03E52C70 CBZ X20, 0x3E52CE0
	0x03E52C74 ADRP X10, 0x319000
	0x03E52C78 LDR X8, [X20]
	0x03E52C7C LDR X10, [X10 + 0xA68]
	0x03E52C80 LDRH W9, [X8 + 0x12E]
	0x03E52C84 LDR X1, [X10]
	0x03E52C88 CBZ X9, 0x3E52CAC
	0x03E52C8C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x597000
	007 Move X22, 0x2A2000
	008 Move X21, 0x31A000
	009 Move W8, [X20+2158]
	010 Move X22, [X22+2288]
	011 Move X21, [X21+2464]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x2A2000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x2A2000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move X0, 0x31A000
	024 Move X0, [X0+2472]
	025 Call 0x1C17CF4
	026 Move X0, 0x31A000
	027 Move X0, [X0+2464]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2158], W8
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call StringBuilder..ctor, X0
	036 Move X0, [X19+64]
	037 Move X21, [X21]
	038 Compare X0, 0
	039 JumpIfEqual {45}
	040 Move X8, [X0]
	041 Move X9, [X8+360]
	042 Move X1, [X8+368]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X1, X0
	045 Move X1, X31
	046 Move X0, X21
	047 Move X2, X31
	048 Call String.Concat, X0, X1
	049 Compare X20, 0
	050 JumpIfEqual {101}
	051 Move X21, 0x2A2000
	052 Move X21, [X21+1432]
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X31
	056 Call StringBuilder.AppendLine, X0, X1
	057 Move X0, X20
	058 Move X1, X31
	059 Call StringBuilder.AppendLine, X0
	060 Move X0, X20
	061 Move X1, X31
	062 Call StringBuilder.AppendLine, X0
	063 Move X0, [X21]
	064 Move X21, [X19+40]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X21
	070 Move X1, X31
	071 Move X2, X31
	072 Call Object.op_Inequality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {85}
	077 Move X0, [X19+40]
	078 Compare X0, 0
	079 JumpIfEqual {101}
	080 Move X8, [X0]
	081 Move X9, [X8+360]
	082 Move X1, [X8+368]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X1, X0
	085 Move X8, 0x31A000
	086 Move X8, [X8+2472]
	087 Move X1, [X8]
	088 Move X0, X20
	089 Move X2, X31
	090 Call StringBuilder.AppendLine, X0, X1
	091 Move X8, [X20]
	092 Move X0, X20
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X2, [X8+360]
	098 Move X1, [X8+368]
	099 Move X30, [X31+48]
	100 CallNoReturn X2
	101 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03E52C90 ADD X10, X10, 0x8
	0x03E52C94 LDUR X11, [X10 - 0x8]
	0x03E52C98 CMP X11, X1
	0x03E52C9C B.EQ 0x3E52CBC
	0x03E52CA0 SUBS X9, X9, 0x1
	0x03E52CA4 ADD X10, X10, 0x10
	0x03E52CA8 B.NE 0x3E52C94
	0x03E52CAC MOV X0, X20
	0x03E52CB0 MOV W2, W31
	0x03E52CB4 BL 0x1C5C788
	0x03E52CB8 B 0x3E52CC8
	0x03E52CBC LDRSW X9, [X10]
	0x03E52CC0 ADD X8, X8, X9, 0x4, LSL
	0x03E52CC4 ADD X0, X8, 0x138
	0x03E52CC8 LDP X3, X2, [X0]
	0x03E52CCC MOV X0, X20
	0x03E52CD0 MOV X1, X19
	0x03E52CD4 LDP X20, X19, [X31 + 0x10]
	0x03E52CD8 LDP X30, X21, [X31], #0x20
	0x03E52CDC BR X3
	0x03E52CE0 BL 0x1C16F20
	0x03E52CE4 STP X30, X21, [X31 - 0x20]!
	0x03E52CE8 STP X20, X19, [X31 + 0x10]
	0x03E52CEC ADRP X21, 0x596000
	0x03E52CF0 LDRB W8, [X21 + 0x882]
	0x03E52CF4 MOV X19, X1
	0x03E52CF8 MOV X20, X0
	0x03E52CFC TBNZ X8, 0x0, 0x3E52D14
	0x03E52D00 ADRP X0, 0x319000
	0x03E52D04 LDR X0, [X0 + 0xA70]
	0x03E52D08 BL 0x1C16CF4
	0x03E52D0C MOVZ W8, 0x1
	0x03E52D10 STRB W8, [X21 + 0x882]
	0x03E52D14 CBZ X20, 0x3E52D84
	0x03E52D18 ADRP X10, 0x319000
	0x03E52D1C LDR X8, [X20]
	0x03E52D20 LDR X10, [X10 + 0xA70]
	0x03E52D24 LDRH W9, [X8 + 0x12E]
	0x03E52D28 LDR X1, [X10]
	0x03E52D2C CBZ X9, 0x3E52D50
	0x03E52D30 LDR X10, [X8 + 0xB0]
	0x03E52D34 ADD X10, X10, 0x8
	0x03E52D38 LDUR X11, [X10 - 0x8]
	0x03E52D3C CMP X11, X1
	0x03E52D40 B.EQ 0x3E52D60
	0x03E52D44 SUBS X9, X9, 0x1
	0x03E52D48 ADD X10, X10, 0x10
	0x03E52D4C B.NE 0x3E52D38
	0x03E52D50 MOV X0, X20
	0x03E52D54 MOV W2, W31
	0x03E52D58 BL 0x1C5C788
	0x03E52D5C B 0x3E52D6C
	0x03E52D60 LDRSW X9, [X10]
	0x03E52D64 ADD X8, X8, X9, 0x4, LSL
	0x03E52D68 ADD X0, X8, 0x138
	0x03E52D6C LDP X3, X2, [X0]
	0x03E52D70 MOV X0, X20
	0x03E52D74 MOV X1, X19
	0x03E52D78 LDP X20, X19, [X31 + 0x10]
	0x03E52D7C LDP X30, X21, [X31], #0x20
	0x03E52D80 BR X3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x597000
	009 Move X24, 0x31A000
	010 Move X19, 0x31A000
	011 Move X20, 0x2C9000
	012 Move X22, 0x31A000
	013 Move X21, 0x31A000
	014 Move W8, [X23+2159]
	015 Move X24, [X24+2480]
	016 Move X19, [X19+2488]
	017 Move X20, [X20+3576]
	018 Move X22, [X22+2496]
	019 Move X21, [X21+2504]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x31A000
	025 Move X0, [X0+2496]
	026 Call 0x1C17CF4
	027 Move X0, 0x31A000
	028 Move X0, [X0+2504]
	029 Call 0x1C17CF4
	030 Move X0, 0x2C9000
	031 Move X0, [X0+3576]
	032 Call 0x1C17CF4
	033 Move X0, 0x31A000
	034 Move X0, [X0+2488]
	035 Call 0x1C17CF4
	036 Move X0, 0x31A000
	037 Move X0, [X0+2480]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2159], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call List`1<Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X2, [X21]
	052 Move X1, X31
	053 Move X3, X31
	054 Move X19, X0
	055 Call Comparison`1<RaycastResult>..ctor, X0, X1, X2
	056 Move X8, [X20]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move W9, 257
	062 Move X8, [X8+184]
	063 Move [X8+8], X19
	064 Move [X8+16], X31
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 NotImplemented "Instruction STRH not yet implemented."
	068 Move [X8+26], W31
	069 NotImplemented "Instruction STRH not yet implemented."
	070 Move X30, [X31+64]
	071 Return 

