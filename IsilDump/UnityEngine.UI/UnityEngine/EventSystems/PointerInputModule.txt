Type: UnityEngine.EventSystems.PointerInputModule

Method: System.Boolean GetPointerData(System.Int32 id, out UnityEngine.EventSystems.PointerEventData data, System.Boolean create)

Disassembly:
	0x03E56280 ADRP X8, 0x315000
	0x03E56284 LDR X8, [X8 + 0xC08]
	0x03E56288 ADRP X22, 0x315000
	0x03E5628C ADRP X23, 0x315000
	0x03E56290 ADRP X21, 0x315000
	0x03E56294 LDR X1, [X8]
	0x03E56298 LDR X22, [X22 + 0xC18]
	0x03E5629C LDR X23, [X23 + 0xC38]
	0x03E562A0 LDR X21, [X21 + 0xC10]
	0x03E562A4 ADD X8, X31, 0x10
	0x03E562A8 BL 0x2A13AB4
	0x03E562AC LDR X1, [X22]
	0x03E562B0 ADD X0, X31, 0x10
	0x03E562B4 BL 0x2BF5330
	0x03E562B8 TBZ X0, 0x0, 0x3E5631C
	0x03E562BC LDR X20, [X31 + 0x28]
	0x03E562C0 CBZ X20, 0x3E562AC
	0x03E562C4 LDR X8, [X31 + 0x20]
	0x03E562C8 STR W8, [X31 + 0xC]
	0x03E562CC ADD X0, X31, 0xC
	0x03E562D0 MOV X1, X31
	0x03E562D4 BL 0x337B6E0
	0x03E562D8 MOV X1, X0
	0x03E562DC LDR X0, [X23]
	0x03E562E0 MOV X2, X31
	0x03E562E4 BL 0x321B938
	0x03E562E8 MOV X1, X0
	0x03E562EC MOV X0, X19
	0x03E562F0 MOV X2, X31
	0x03E562F4 BL 0x32338A8
	0x03E562F8 LDR X8, [X20]
	0x03E562FC LDP X9, X1, [X8 + 0x168]
	0x03E56300 MOV X0, X20
	0x03E56304 BLR X9
	0x03E56308 MOV X1, X0
	0x03E5630C MOV X0, X19
	0x03E56310 MOV X2, X31
	0x03E56314 BL 0x32338A8
	0x03E56318 B 0x3E562AC
	0x03E5631C LDR X1, [X21]
	0x03E56320 ADD X0, X31, 0x10
	0x03E56324 BL 0x2BF5448
	0x03E56328 LDR X8, [X19]
	0x03E5632C MOV X0, X19
	0x03E56330 LDP X9, X1, [X8 + 0x168]
	0x03E56334 BLR X9
	0x03E56338 LDP X20, X19, [X31 + 0x60]
	0x03E5633C LDP X22, X21, [X31 + 0x50]
	0x03E56340 LDP X30, X23, [X31 + 0x40]
	0x03E56344 ADD X31, X31, 0x70
	0x03E56348 RET
	0x03E5634C BL 0x1C16F20
	0x03E56350 B 0x3E56364
	0x03E56354 B 0x3E56364
	0x03E56358 B 0x3E56364
	0x03E5635C B 0x3E56364
	0x03E56360 B 0x3E56364
	0x03E56364 CMP W1, 0x1
	0x03E56368 B.NE 0x3E56390

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x593000
	009 Move W8, [X23+2212]
	010 Move W22, W3
	011 Move X20, X2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x307000
	019 Move X0, [X0+3040]
	020 Call 0x1C17CF4
	021 Move X0, 0x307000
	022 Move X0, [X0+2944]
	023 Call 0x1C17CF4
	024 Move X0, 0x2F4000
	025 Move X0, [X0+1800]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2212], W8
	029 Move X0, [X21+88]
	030 Compare X0, 0
	031 JumpIfEqual {74}
	032 Move X8, 0x307000
	033 Move X8, [X8+2944]
	034 Move W1, W19
	035 Move X2, X20
	036 Move X3, [X8]
	037 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	038 Xor W8, W0, 1
	039 And W24, W8, W22
	040 Move TEMP, X24
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {65}
	044 Move X8, 0x2F4000
	045 Move X23, [X21+56]
	046 Move X8, [X8+1800]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X1, X23
	050 Move X22, X0
	051 Call PointerEventData..ctor, X0, X1
	052 Compare X22, 0
	053 JumpIfEqual {74}
	054 Move [X22+256], W19
	055 Move [X20], X22
	056 Move X0, [X21+88]
	057 Compare X0, 0
	058 JumpIfEqual {74}
	059 Move X8, 0x307000
	060 Move X8, [X8+3040]
	061 Move W1, W19
	062 Move X2, X22
	063 Move X3, [X8]
	064 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	065 And W0, W24, 1
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Void RemovePointerData(UnityEngine.EventSystems.PointerEventData data)

Disassembly:
	0x03E5636C BL 0x3EB1AD0
	0x03E56370 LDR X20, [X0]
	0x03E56374 BL 0x3EB1AE0
	0x03E56378 LDR X1, [X21]
	0x03E5637C ADD X0, X31, 0x10
	0x03E56380 BL 0x2BF5448
	0x03E56384 CBZ X20, 0x3E56328
	0x03E56388 MOV X0, X20
	0x03E5638C BL 0x1C16F18
	0x03E56390 MOV X19, X0
	0x03E56394 MOV X20, X31
	0x03E56398 B 0x3E563A0
	0x03E5639C MOV X19, X0
	0x03E563A0 LDR X1, [X21]
	0x03E563A4 ADD X0, X31, 0x10
	0x03E563A8 BL 0x2BF5448
	0x03E563AC CBNZ X20, 0x3E563B8
	0x03E563B0 MOV X0, X19
	0x03E563B4 BL 0x1D2C690
	0x03E563B8 MOV X0, X20
	0x03E563BC BL 0x1C16F18
	0x03E563C0 BL 0x1990590
	0x03E563C4 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x593000
	006 Move W8, [X21+2213]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x307000
	014 Move X0, [X0+3080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2213], W8
	018 Compare X19, 0
	019 JumpIfEqual {33}
	020 Move X0, [X20+88]
	021 Compare X0, 0
	022 JumpIfEqual {33}
	023 Move X8, 0x307000
	024 Move X8, [X8+3080]
	025 Move W1, [X19+256]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, [X8]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	032 Return 
	033 Call 0x1C17F20

Method: UnityEngine.EventSystems.PointerEventData GetTouchPointerEventData(UnityEngine.Touch input, out System.Boolean pressed, out System.Boolean released)

Disassembly:
	0x03E563C8 STP X22, X21, [X31 + 0x10]
	0x03E563CC STP X20, X19, [X31 + 0x20]
	0x03E563D0 ADRP X23, 0x592000
	0x03E563D4 ADRP X22, 0x2C5000
	0x03E563D8 LDRB W8, [X23 + 0x8AC]
	0x03E563DC LDR X22, [X22 + 0x9F8]
	0x03E563E0 MOV X19, X2
	0x03E563E4 MOV X21, X1
	0x03E563E8 MOV X20, X0
	0x03E563EC TBNZ X8, 0x0, 0x3E5641C
	0x03E563F0 ADRP X0, 0x2F3000
	0x03E563F4 LDR X0, [X0 + 0x3C0]
	0x03E563F8 BL 0x1C16CF4
	0x03E563FC ADRP X0, 0x2C5000
	0x03E56400 LDR X0, [X0 + 0x9F8]
	0x03E56404 BL 0x1C16CF4
	0x03E56408 ADRP X0, 0x29D000
	0x03E5640C LDR X0, [X0 + 0x598]
	0x03E56410 BL 0x1C16CF4
	0x03E56414 MOVZ W8, 0x1
	0x03E56418 STRB W8, [X23 + 0x8AC]
	0x03E5641C LDR X0, [X22]
	0x03E56420 ADRP X22, 0x2F3000
	0x03E56424 LDR W8, [X0 + 0xE0]
	0x03E56428 LDR X22, [X22 + 0x3C0]
	0x03E5642C CBNZ W8, 0x3E56434
	0x03E56430 BL 0x1C16DFC
	0x03E56434 LDR X1, [X22]
	0x03E56438 MOV X0, X21
	0x03E5643C BL 0x21DDB64
	0x03E56440 LDR X8, [X20 + 0x38]
	0x03E56444 CBZ X8, 0x3E564AC
	0x03E56448 ADRP X9, 0x29D000
	0x03E5644C LDR X9, [X9 + 0x598]
	0x03E56450 MOV X21, X0
	0x03E56454 LDR X22, [X8 + 0x40]
	0x03E56458 LDR X0, [X9]
	0x03E5645C LDR W9, [X0 + 0xE0]
	0x03E56460 CBNZ W9, 0x3E56468
	0x03E56464 BL 0x1C16DFC
	0x03E56468 MOV X0, X21
	0x03E5646C MOV X1, X22
	0x03E56470 MOV X2, X31
	0x03E56474 BL 0x3C354F8
	0x03E56478 TBZ X0, 0x0, 0x3E5649C
	0x03E5647C LDR X0, [X20 + 0x38]
	0x03E56480 CBZ X0, 0x3E564AC
	0x03E56484 MOV X2, X19
	0x03E56488 LDP X20, X19, [X31 + 0x20]
	0x03E5648C LDP X22, X21, [X31 + 0x10]
	0x03E56490 MOV X1, X31
	0x03E56494 LDP X30, X23, [X31], #0x30
	0x03E56498 B 0x3E4EC58
	0x03E5649C LDP X20, X19, [X31 + 0x20]
	0x03E564A0 LDP X22, X21, [X31 + 0x10]
	0x03E564A4 LDP X30, X23, [X31], #0x30
	0x03E564A8 RET
	0x03E564AC BL 0x1C16F20
	0x03E564B0 STP X30, X23, [X31 - 0x30]!
	0x03E564B4 STP X22, X21, [X31 + 0x10]
	0x03E564B8 STP X20, X19, [X31 + 0x20]
	0x03E564BC ADRP X22, 0x592000
	0x03E564C0 ADRP X23, 0x306000
	0x03E564C4 ADRP X20, 0x306000
	0x03E564C8 ADRP X21, 0x315000
	0x03E564CC LDRB W8, [X22 + 0x8AD]
	0x03E564D0 LDR X23, [X23 + 0xC38]
	0x03E564D4 LDR X20, [X20 + 0xC40]
	0x03E564D8 LDR X21, [X21 + 0xC40]
	0x03E564DC MOV X19, X0
	0x03E564E0 TBNZ X8, 0x0, 0x3E56510
	0x03E564E4 ADRP X0, 0x306000
	0x03E564E8 LDR X0, [X0 + 0xC40]
	0x03E564EC BL 0x1C16CF4
	0x03E564F0 ADRP X0, 0x306000
	0x03E564F4 LDR X0, [X0 + 0xC38]
	0x03E564F8 BL 0x1C16CF4
	0x03E564FC ADRP X0, 0x315000
	0x03E56500 LDR X0, [X0 + 0xC40]
	0x03E56504 BL 0x1C16CF4
	0x03E56508 MOVZ W8, 0x1
	0x03E5650C STRB W8, [X22 + 0x8AD]
	0x03E56510 LDR X0, [X23]
	0x03E56514 BL 0x1C16F10
	0x03E56518 LDR X1, [X20]
	0x03E5651C MOV X20, X0
	0x03E56520 BL 0x2A12DD4
	0x03E56524 STR X20, [X19 + 0x58]
	0x03E56528 LDR X0, [X21]
	0x03E5652C BL 0x1C16F10
	0x03E56530 MOV X20, X0
	0x03E56534 BL 0x3E56550
	0x03E56538 STR X20, [X19 + 0x60]
	0x03E5653C MOV X0, X19
	0x03E56540 LDP X20, X19, [X31 + 0x20]
	0x03E56544 LDP X22, X21, [X31 + 0x10]
	0x03E56548 LDP X30, X23, [X31], #0x30
	0x03E5654C B 0x3E551FC
	0x03E56550 STR X30, [X31 - 0x30]!
	0x03E56554 STP X22, X21, [X31 + 0x10]
	0x03E56558 STP X20, X19, [X31 + 0x20]
	0x03E5655C ADRP X21, 0x592000
	0x03E56560 ADRP X22, 0x315000
	0x03E56564 ADRP X20, 0x315000
	0x03E56568 LDRB W8, [X21 + 0x8B1]
	0x03E5656C LDR X22, [X22 + 0xC48]
	0x03E56570 LDR X20, [X20 + 0xC50]
	0x03E56574 MOV X19, X0
	0x03E56578 TBNZ X8, 0x0, 0x3E5659C
	0x03E5657C ADRP X0, 0x315000
	0x03E56580 LDR X0, [X0 + 0xC50]
	0x03E56584 BL 0x1C16CF4
	0x03E56588 ADRP X0, 0x315000
	0x03E5658C LDR X0, [X0 + 0xC48]
	0x03E56590 BL 0x1C16CF4
	0x03E56594 MOVZ W8, 0x1
	0x03E56598 STRB W8, [X21 + 0x8B1]
	0x03E5659C LDR X0, [X22]
	0x03E565A0 BL 0x1C16F10
	0x03E565A4 LDR X1, [X20]
	0x03E565A8 MOV X20, X0
	0x03E565AC BL 0x301B7C4
	0x03E565B0 STR X20, [X19 + 0x10]
	0x03E565B4 MOV X0, X19
	0x03E565B8 LDP X20, X19, [X31 + 0x20]
	0x03E565BC LDP X22, X21, [X31 + 0x10]
	0x03E565C0 MOV X1, X31
	0x03E565C4 LDR X30, [X31], #0x30
	0x03E565C8 B 0x33BDD8C
	0x03E565CC LDR X0, [X0 + 0x18]
	0x03E565D0 RET
	0x03E565D4 STR X1, [X0 + 0x18]
	0x03E565D8 RET
	0x03E565DC LDR W0, [X0 + 0x10]
	0x03E565E0 RET
	0x03E565E4 STR W1, [X0 + 0x10]
	0x03E565E8 RET
	0x03E565EC MOV X1, X31
	0x03E565F0 B 0x33BDD8C
	0x03E565F4 STP X30, X23, [X31 - 0x30]!
	0x03E565F8 STP X22, X21, [X31 + 0x10]
	0x03E565FC STP X20, X19, [X31 + 0x20]
	0x03E56600 ADRP X20, 0x592000
	0x03E56604 LDRB W8, [X20 + 0x8AE]
	0x03E56608 MOV X19, X0
	0x03E5660C TBNZ X8, 0x0, 0x3E56630
	0x03E56610 ADRP X0, 0x315000
	0x03E56614 LDR X0, [X0 + 0xC58]
	0x03E56618 BL 0x1C16CF4
	0x03E5661C ADRP X0, 0x315000
	0x03E56620 LDR X0, [X0 + 0xC60]
	0x03E56624 BL 0x1C16CF4
	0x03E56628 MOVZ W8, 0x1
	0x03E5662C STRB W8, [X20 + 0x8AE]
	0x03E56630 LDR X0, [X19 + 0x10]
	0x03E56634 CBZ X0, 0x3E56694
	0x03E56638 LDR W20, [X0 + 0x18]
	0x03E5663C CMP W20, 0x1
	0x03E56640 B.LT 0x3E56698
	0x03E56644 ADRP X22, 0x315000
	0x03E56648 LDR X22, [X22 + 0xC60]
	0x03E5664C MOVZ W23, 0x1
	0x03E56650 MOVZ W21, 0x1
	0x03E56654 LDR X2, [X22]
	0x03E56658 SUB W1, W23, 0x1
	0x03E5665C BL 0x301BCCC
	0x03E56660 CBZ X0, 0x3E56694
	0x03E56664 LDR X8, [X0 + 0x18]
	0x03E56668 CBZ X8, 0x3E56694
	0x03E5666C LDR W8, [X8 + 0x10]
	0x03E56670 ANDS W31, W8, 0xFFFFFFFD
	0x03E56674 B.EQ 0x3E5669C
	0x03E56678 CMP W23, W20
	0x03E5667C CSET W21, LT
	0x03E56680 CMP W20, W23
	0x03E56684 B.EQ 0x3E5669C
	0x03E56688 LDR X0, [X19 + 0x10]
	0x03E5668C ADD W23, W23, 0x1
	0x03E56690 CBNZ X0, 0x3E56654
	0x03E56694 BL 0x1C16F20
	0x03E56698 MOV W21, W31
	0x03E5669C AND W0, W21, 0x1
	0x03E566A0 LDP X20, X19, [X31 + 0x20]
	0x03E566A4 LDP X22, X21, [X31 + 0x10]
	0x03E566A8 LDP X30, X23, [X31], #0x30
	0x03E566AC RET
	0x03E566B0 LDR W8, [X0 + 0x10]
	0x03E566B4 ANDS W31, W8, 0xFFFFFFFD
	0x03E566B8 CSET W0, EQ
	0x03E566BC RET
	0x03E566C0 STP X30, X23, [X31 - 0x30]!
	0x03E566C4 STP X22, X21, [X31 + 0x10]
	0x03E566C8 STP X20, X19, [X31 + 0x20]
	0x03E566CC ADRP X20, 0x592000
	0x03E566D0 LDRB W8, [X20 + 0x8AF]
	0x03E566D4 MOV X19, X0
	0x03E566D8 TBNZ X8, 0x0, 0x3E566FC
	0x03E566DC ADRP X0, 0x315000
	0x03E566E0 LDR X0, [X0 + 0xC58]
	0x03E566E4 BL 0x1C16CF4
	0x03E566E8 ADRP X0, 0x315000
	0x03E566EC LDR X0, [X0 + 0xC60]
	0x03E566F0 BL 0x1C16CF4
	0x03E566F4 MOVZ W8, 0x1
	0x03E566F8 STRB W8, [X20 + 0x8AF]
	0x03E566FC LDR X0, [X19 + 0x10]
	0x03E56700 CBZ X0, 0x3E56764
	0x03E56704 LDR W20, [X0 + 0x18]
	0x03E56708 CMP W20, 0x1
	0x03E5670C B.LT 0x3E56768
	0x03E56710 ADRP X22, 0x315000
	0x03E56714 LDR X22, [X22 + 0xC60]
	0x03E56718 MOVZ W23, 0x1
	0x03E5671C MOVZ W21, 0x1
	0x03E56720 LDR X2, [X22]
	0x03E56724 SUB W1, W23, 0x1
	0x03E56728 BL 0x301BCCC
	0x03E5672C CBZ X0, 0x3E56764
	0x03E56730 LDR X8, [X0 + 0x18]
	0x03E56734 CBZ X8, 0x3E56764
	0x03E56738 LDR W8, [X8 + 0x10]
	0x03E5673C SUB W8, W8, 0x1
	0x03E56740 CMP W8, 0x2

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], D8
	003 Move [X31+176], X30
	004 Move [X31+184], X23
	005 Move [X31+192], X22
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 Move X23, 0x593000
	010 Move W8, [X23+2214]
	011 Move X22, X3
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2F4000
	020 Move X0, [X0+808]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2214], W8
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move X0, X19
	026 Move X1, X31
	027 Move [X31+168], X31
	028 Move [X31+128], V0
	029 Move [X31+136], V0
	030 Move [X31+96], V0
	031 Move [X31+104], V0
	032 Move [X31+5], V0
	033 Call Touch.get_fingerId, X0
	034 Move W1, W0
	035 Add X2, X31, 168
	036 Move W3, 1
	037 Move X0, X20
	038 Call PointerInputModule.GetPointerData, X0, X1, X2, X3
	039 Move X8, [X31+168]
	040 Compare X8, 0
	041 JumpIfEqual {258}
	042 Move X9, [X8]
	043 Move W23, W0
	044 Move X0, X8
	045 Move X10, [X9+376]
	046 Move X1, [X9+384]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move TEMP, X23
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {53}
	052 Move W8, 1
	053 Move X0, X19
	054 Move X1, X31
	055 Call Touch.get_phase, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move X0, X19
	059 Move X1, X31
	060 Move [X21], W8
	061 Call Touch.get_phase, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, 1
	064 Move X0, X19
	065 Move X1, X31
	066 Call Touch.get_phase, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Move [X22], W8
	070 Move TEMP, X23
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {82}
	074 Move X22, [X31+168]
	075 Move X0, X19
	076 Move X1, X31
	077 Call Touch.get_position, X0
	078 Compare X22, 0
	079 JumpIfEqual {258}
	080 Move [X22+260], S0
	081 Move [X22+264], S1
	082 Move W8, [X21]
	083 Move X21, 0x2A6000
	084 Move X23, [X31+168]
	085 Move X21, [X21+3848]
	086 Compare W8, 0
	087 JumpIfEqual {110}
	088 Move X22, 0x584000
	089 Move W8, [X22+1935]
	090 Compare W8, 0
	091 JumpIfNotEqual {97}
	092 Move X0, 0x2A6000
	093 Move X0, [X0+3848]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X22+1935], W8
	097 Compare X23, 0
	098 JumpIfEqual {258}
	099 Move X8, [X21]
	100 Move X0, X19
	101 Move X1, X31
	102 Move X8, [X8+184]
	103 Move V0, [X8]
	104 Add X8, X23, 268
	105 Move [X8], D0
	106 Move X22, [X31+168]
	107 Call Touch.get_position, X0
	108 Compare X22, 0
	109 JumpIfNotEqual {127}
	110 Move X0, X19
	111 Move X1, X31
	112 Call Touch.get_position, X0
	113 Move X22, [X31+168]
	114 Compare X22, 0
	115 JumpIfEqual {258}
	116 Compare X23, 0
	117 JumpIfEqual {258}
	118 Add X8, X22, 260
	119 Move V2, [X8]
	120 Move V0.S[1], V1.S[0]
	121 Add X8, X23, 268
	122 Move X0, X19
	123 Subtract V0, V0, V2
	124 Move X1, X31
	125 Move [X8], D0
	126 Call Touch.get_position, X0
	127 Move [X22+260], S0
	128 Move [X22+264], S1
	129 Move X8, [X31+168]
	130 Compare X8, 0
	131 JumpIfEqual {258}
	132 Move X0, X19
	133 Move X1, X31
	134 Move [X8+328], W31
	135 Call Touch.get_phase, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X22, [X31+168]
	138 NotImplemented "Instruction MOVI not yet implemented."
	139 Move [X31+48], V0
	140 Move [X31+56], V0
	141 Move [X31+16], V0
	142 Move [X31+24], V0
	143 Move [X31], V0
	144 Compare X22, 0
	145 JumpIfEqual {258}
	146 Add X0, X22, 80
	147 Add X1, X31, 0
	148 Move W2, 80
	149 Call 0x3EB2AC0
	150 Move X0, X19
	151 Move X1, X31
	152 Call Touch.get_pressure, X0
	153 Move X8, [X20+56]
	154 Compare X8, 0
	155 JumpIfEqual {258}
	156 Move X2, [X20+32]
	157 Move X1, [X31+168]
	158 Call EventSystem.RaycastAll, X0, X1, X2
	159 Move X0, [X20+32]
	160 Add X8, X31, 80
	161 Call BaseInputModule.FindFirstRaycast, X0
	162 Move X22, [X31+168]
	163 Add X0, X31, 0
	164 Add X1, X31, 80
	165 Move W2, 80
	166 Call 0x3EB2AC0
	167 Compare X22, 0
	168 JumpIfEqual {258}
	169 Add X0, X22, 80
	170 Add X1, X31, 0
	171 Move W2, 80
	172 Call 0x3EB2AC0
	173 Move X8, [X20+32]
	174 Compare X8, 0
	175 JumpIfEqual {258}
	176 Move W2, [X8+24]
	177 Move W9, [X8+28]
	178 Add W9, W9, 1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move [X8+24], W31
	181 Move [X8+28], W9
	182 Move X0, [X8+16]
	183 Move W1, W31
	184 Move X3, X31
	185 Call Array.Clear, X0, X1, X2
	186 Move X22, [X31+168]
	187 Move X0, X19
	188 Move X1, X31
	189 Call Touch.get_pressure, X0
	190 Compare X22, 0
	191 JumpIfEqual {258}
	192 Move [X22+332], S0
	193 Move X20, [X31+168]
	194 Move X0, X19
	195 Move X1, X31
	196 Call Touch.get_altitudeAngle, X0
	197 Compare X20, 0
	198 JumpIfEqual {258}
	199 Move [X20+340], S0
	200 Move X20, [X31+168]
	201 Move X0, X19
	202 Move X1, X31
	203 Call Touch.get_azimuthAngle, X0
	204 Compare X20, 0
	205 JumpIfEqual {258}
	206 Move [X20+344], S0
	207 Move X20, 0x58C000
	208 Move W8, [X20+2632]
	209 Move X22, [X31+168]
	210 Compare W8, 0
	211 JumpIfNotEqual {217}
	212 Move X0, 0x2A6000
	213 Move X0, [X0+3848]
	214 Call 0x1C17CF4
	215 Move W8, 1
	216 Move [X20+2632], W8
	217 Move X8, [X21]
	218 Move X0, X19
	219 Move X1, X31
	220 Move X8, [X8+184]
	221 Move V8, [X8+8]
	222 Call Touch.get_radius, X0
	223 Compare X22, 0
	224 JumpIfEqual {258}
	225 NotImplemented "Instruction INVALID not yet implemented."
	226 Add X8, X22, 364
	227 Move [X8], D0
	228 Move W8, [X20+2632]
	229 Move X22, [X31+168]
	230 Compare W8, 0
	231 JumpIfNotEqual {237}
	232 Move X0, 0x2A6000
	233 Move X0, [X0+3848]
	234 Call 0x1C17CF4
	235 Move W8, 1
	236 Move [X20+2632], W8
	237 Move X8, [X21]
	238 Move X0, X19
	239 Move X1, X31
	240 Move X8, [X8+184]
	241 Move V8, [X8+8]
	242 Call Touch.get_radiusVariance, X0
	243 Compare X22, 0
	244 JumpIfEqual {258}
	245 NotImplemented "Instruction INVALID not yet implemented."
	246 Add X8, X22, 372
	247 Move [X8], D0
	248 Move X0, [X31+168]
	249 Move X20, [X31+208]
	250 Move X19, [X31+216]
	251 Move X22, [X31+192]
	252 Move X21, [X31+200]
	253 Move X30, [X31+176]
	254 Move X23, [X31+184]
	255 Move V8, [X31+160]
	256 Add X31, X31, 224
	257 Return X0
	258 Call 0x1C17F20

Method: System.Void CopyFromTo(UnityEngine.EventSystems.PointerEventData from, UnityEngine.EventSystems.PointerEventData to)

Disassembly:
	0x03E56744 B.CC 0x3E5676C
	0x03E56748 CMP W23, W20
	0x03E5674C CSET W21, LT
	0x03E56750 CMP W20, W23
	0x03E56754 B.EQ 0x3E5676C
	0x03E56758 LDR X0, [X19 + 0x10]
	0x03E5675C ADD W23, W23, 0x1
	0x03E56760 CBNZ X0, 0x3E56720
	0x03E56764 BL 0x1C16F20
	0x03E56768 MOV W21, W31
	0x03E5676C AND W0, W21, 0x1
	0x03E56770 LDP X20, X19, [X31 + 0x20]
	0x03E56774 LDP X22, X21, [X31 + 0x10]
	0x03E56778 LDP X30, X23, [X31], #0x30
	0x03E5677C RET
	0x03E56780 LDR W8, [X0 + 0x10]
	0x03E56784 SUB W8, W8, 0x1
	0x03E56788 CMP W8, 0x2
	0x03E5678C CSET W0, CC
	0x03E56790 RET
	0x03E56794 STP X30, X23, [X31 - 0x30]!
	0x03E56798 STP X22, X21, [X31 + 0x10]
	0x03E5679C STP X20, X19, [X31 + 0x20]
	0x03E567A0 ADRP X21, 0x592000
	0x03E567A4 LDRB W8, [X21 + 0x8B0]
	0x03E567A8 MOV W20, W1
	0x03E567AC MOV X19, X0
	0x03E567B0 TBNZ X8, 0x0, 0x3E567F8
	0x03E567B4 ADRP X0, 0x315000
	0x03E567B8 LDR X0, [X0 + 0xC68]
	0x03E567BC BL 0x1C16CF4
	0x03E567C0 ADRP X0, 0x315000
	0x03E567C4 LDR X0, [X0 + 0xC70]
	0x03E567C8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {40}
	008 Move X19, X2
	009 Compare X2, 0
	010 JumpIfEqual {40}
	011 Add X21, X1, 260
	012 Move V0, [X21]
	013 Add X22, X19, 260
	014 Move X20, X1
	015 Add X1, X1, 80
	016 Move [X22], D0
	017 Move V0, [X21+8]
	018 Add X0, X19, 80
	019 Move W2, 80
	020 Move [X22+8], D0
	021 Move V0, [X21+56]
	022 Move [X22+56], D0
	023 Call 0x3EB2B30
	024 Move X8, [X20+32]
	025 Move [X19+32], X8
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move [X22+72], V0
	028 Move V0, [X20+348]
	029 Move [X19+348], S0
	030 Move V0, [X21+104]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move [X22+104], D0
	034 Move V0, [X21+112]
	035 Move [X22+112], D0
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 
	040 Call 0x1C17F20

Method: UnityEngine.EventSystems.PointerEventData/FramePressState StateForMouseButton(System.Int32 buttonId)

Disassembly:
	0x03E567CC ADRP X0, 0x315000
	0x03E567D0 LDR X0, [X0 + 0xC58]
	0x03E567D4 BL 0x1C16CF4
	0x03E567D8 ADRP X0, 0x315000
	0x03E567DC LDR X0, [X0 + 0xC60]
	0x03E567E0 BL 0x1C16CF4
	0x03E567E4 ADRP X0, 0x315000
	0x03E567E8 LDR X0, [X0 + 0xC78]
	0x03E567EC BL 0x1C16CF4
	0x03E567F0 MOVZ W8, 0x1
	0x03E567F4 STRB W8, [X21 + 0x8B0]
	0x03E567F8 LDR X0, [X19 + 0x10]
	0x03E567FC CBZ X0, 0x3E56920
	0x03E56800 LDR W8, [X0 + 0x18]
	0x03E56804 SUBS W23, W8, 0x1
	0x03E56808 B.LT 0x3E56868
	0x03E5680C ADRP X22, 0x315000
	0x03E56810 LDR X22, [X22 + 0xC60]
	0x03E56814 MOV W21, W31
	0x03E56818 LDR X2, [X22]
	0x03E5681C MOV W1, W21
	0x03E56820 BL 0x301BCCC
	0x03E56824 CBZ X0, 0x3E56920
	0x03E56828 LDR W8, [X0 + 0x10]
	0x03E5682C CMP W8, W20
	0x03E56830 B.EQ 0x3E5684C
	0x03E56834 CMP W23, W21
	0x03E56838 B.EQ 0x3E56868
	0x03E5683C LDR X0, [X19 + 0x10]
	0x03E56840 ADD W21, W21, 0x1
	0x03E56844 CBNZ X0, 0x3E56818

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W1
	006 Move X20, X0
	007 Call BaseInputModule.get_input, X0
	008 Compare X0, 0
	009 JumpIfEqual {39}
	010 Move X8, [X0]
	011 Move W1, W19
	012 Move X9, [X8+680]
	013 Move X2, [X8+688]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W21, W0
	016 Move X0, X20
	017 Call BaseInputModule.get_input, X0
	018 Compare X0, 0
	019 JumpIfEqual {39}
	020 Move X8, [X0]
	021 Move W1, W19
	022 Move X9, [X8+696]
	023 Move X2, [X8+704]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 And W31, W0, 1
	026 Move TEMP, X21
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {32}
	030 Move W8, 2
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move W8, 3
	033 NotImplemented "Instruction CSINC not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: UnityEngine.EventSystems.PointerInputModule/MouseState GetMousePointerEventData()

Disassembly:
	0x03E56848 B 0x3E56920
	0x03E5684C LDR X0, [X19 + 0x10]
	0x03E56850 CBZ X0, 0x3E56920
	0x03E56854 LDR X2, [X22]
	0x03E56858 MOV W1, W21

ISIL:
	001 Move X8, [X0]
	002 Move W1, W31
	003 Move X3, [X8+760]
	004 Move X2, [X8+768]
	005 CallNoReturn X3

Method: UnityEngine.EventSystems.PointerInputModule/MouseState GetMousePointerEventData(System.Int32 id)

Disassembly:
	0x03E5685C BL 0x301BCCC
	0x03E56860 MOV X21, X0
	0x03E56864 CBNZ X0, 0x3E5690C
	0x03E56868 ADRP X8, 0x315000
	0x03E5686C LDR X8, [X8 + 0xC68]
	0x03E56870 LDR X0, [X8]
	0x03E56874 BL 0x1C16F10
	0x03E56878 MOV X1, X31
	0x03E5687C MOV X21, X0
	0x03E56880 BL 0x33BDD8C
	0x03E56884 CBZ X21, 0x3E56920
	0x03E56888 ADRP X8, 0x315000
	0x03E5688C LDR X8, [X8 + 0xC78]
	0x03E56890 STR W20, [X21 + 0x10]
	0x03E56894 LDR X0, [X8]
	0x03E56898 BL 0x1C16F10
	0x03E5689C MOV X1, X31
	0x03E568A0 MOV X20, X0
	0x03E568A4 BL 0x33BDD8C
	0x03E568A8 STR X20, [X21 + 0x18]
	0x03E568AC LDR X0, [X19 + 0x10]
	0x03E568B0 CBZ X0, 0x3E56920
	0x03E568B4 ADRP X9, 0x315000
	0x03E568B8 LDR X9, [X9 + 0xC70]
	0x03E568BC LDR W10, [X0 + 0x1C]
	0x03E568C0 LDR X8, [X0 + 0x10]
	0x03E568C4 LDR X9, [X9]
	0x03E568C8 ADD W10, W10, 0x1
	0x03E568CC STR W10, [X0 + 0x1C]
	0x03E568D0 CBZ X8, 0x3E56920
	0x03E568D4 LDRSW X10, [X0 + 0x18]
	0x03E568D8 LDR W11, [X8 + 0x18]
	0x03E568DC CMP W10, W11
	0x03E568E0 B.CS 0x3E568F8
	0x03E568E4 ADD W9, W10, 0x1
	0x03E568E8 ADD X8, X8, X10, 0x3, LSL
	0x03E568EC STR W9, [X0 + 0x18]
	0x03E568F0 STR X21, [X8 + 0x20]
	0x03E568F4 B 0x3E5690C
	0x03E568F8 LDR X8, [X9 + 0x20]
	0x03E568FC MOV X1, X21
	0x03E56900 LDR X8, [X8 + 0xC0]
	0x03E56904 LDR X2, [X8 + 0x70]
	0x03E56908 BL 0x301BF90
	0x03E5690C MOV X0, X21
	0x03E56910 LDP X20, X19, [X31 + 0x20]
	0x03E56914 LDP X22, X21, [X31 + 0x10]
	0x03E56918 LDP X30, X23, [X31], #0x30
	0x03E5691C RET
	0x03E56920 BL 0x1C16F20
	0x03E56924 MOV X1, X31
	0x03E56928 B 0x33BDD8C
	0x03E5692C STR X30, [X31 - 0x40]!
	0x03E56930 STP X24, X23, [X31 + 0x10]
	0x03E56934 STP X22, X21, [X31 + 0x20]
	0x03E56938 STP X20, X19, [X31 + 0x30]
	0x03E5693C ADRP X23, 0x592000
	0x03E56940 ADRP X24, 0x2F0000
	0x03E56944 ADRP X22, 0x2F0000
	0x03E56948 ADRP X21, 0x2F0000
	0x03E5694C ADRP X20, 0x2E1000
	0x03E56950 LDRB W8, [X23 + 0x8B2]
	0x03E56954 LDR X24, [X24 + 0xAF0]
	0x03E56958 LDR X22, [X22 + 0xAC0]
	0x03E5695C LDR X21, [X21 + 0xAB8]
	0x03E56960 LDR X20, [X20 + 0xB08]
	0x03E56964 MOV X19, X0
	0x03E56968 TBNZ X8, 0x0, 0x3E569A4
	0x03E5696C ADRP X0, 0x2F0000
	0x03E56970 LDR X0, [X0 + 0xAB8]
	0x03E56974 BL 0x1C16CF4
	0x03E56978 ADRP X0, 0x2F0000
	0x03E5697C LDR X0, [X0 + 0xAC0]
	0x03E56980 BL 0x1C16CF4
	0x03E56984 ADRP X0, 0x2F0000
	0x03E56988 LDR X0, [X0 + 0xAF0]
	0x03E5698C BL 0x1C16CF4
	0x03E56990 ADRP X0, 0x2E1000
	0x03E56994 LDR X0, [X0 + 0xB08]
	0x03E56998 BL 0x1C16CF4
	0x03E5699C MOVZ W8, 0x1
	0x03E569A0 STRB W8, [X23 + 0x8B2]
	0x03E569A4 LDR X9, [X24]
	0x03E569A8 LDR X8, [X22]
	0x03E569AC MOV X0, X19
	0x03E569B0 LDP X24, X23, [X31 + 0x10]
	0x03E569B4 STP X9, X8, [X19 + 0x98]
	0x03E569B8 ADRP X9, 0xFFFFFFFFFCC97000
	0x03E569BC LDR X10, [X21]
	0x03E569C0 LDR X8, [X20]
	0x03E569C4 LDR V0, [X9 + 0xDA0]
	0x03E569C8 LDP X22, X21, [X31 + 0x20]
	0x03E569CC STP X10, X8, [X19 + 0xA8]
	0x03E569D0 STR D0, [X19 + 0xB8]
	0x03E569D4 LDP X20, X19, [X31 + 0x30]
	0x03E569D8 LDR X30, [X31], #0x40
	0x03E569DC B 0x3E564B0
	0x03E569E0 MOV W0, W31
	0x03E569E4 RET
	0x03E569E8 LDRB W0, [X0 + 0xC0]
	0x03E569EC RET
	0x03E569F0 AND W8, W1, 0x1
	0x03E569F4 STRB W8, [X0 + 0xC0]
	0x03E569F8 RET
	0x03E569FC LDRB W0, [X0 + 0xC0]
	0x03E56A00 RET
	0x03E56A04 AND W8, W1, 0x1
	0x03E56A08 STRB W8, [X0 + 0xC0]
	0x03E56A0C RET
	0x03E56A10 LDR V0, [X0 + 0xB8]
	0x03E56A14 RET
	0x03E56A18 STR S0, [X0 + 0xB8]
	0x03E56A1C RET
	0x03E56A20 LDR V0, [X0 + 0xBC]
	0x03E56A24 RET
	0x03E56A28 STR S0, [X0 + 0xBC]
	0x03E56A2C RET
	0x03E56A30 LDR X0, [X0 + 0x98]
	0x03E56A34 RET
	0x03E56A38 STR X1, [X0 + 0x98]
	0x03E56A3C RET
	0x03E56A40 LDR X0, [X0 + 0xA0]
	0x03E56A44 RET
	0x03E56A48 STR X1, [X0 + 0xA0]
	0x03E56A4C RET
	0x03E56A50 LDR X0, [X0 + 0xA8]
	0x03E56A54 RET
	0x03E56A58 STR X1, [X0 + 0xA8]
	0x03E56A5C RET
	0x03E56A60 LDR X0, [X0 + 0xB0]
	0x03E56A64 RET
	0x03E56A68 STR X1, [X0 + 0xB0]
	0x03E56A6C RET
	0x03E56A70 MOVZ W0, 0x1
	0x03E56A74 RET
	0x03E56A78 STR X30, [X31 - 0x20]!
	0x03E56A7C STP X20, X19, [X31 + 0x10]
	0x03E56A80 ADRP X20, 0x592000
	0x03E56A84 LDRB W8, [X20 + 0x8B3]
	0x03E56A88 MOV X19, X0
	0x03E56A8C TBNZ X8, 0x0, 0x3E56AA4
	0x03E56A90 ADRP X0, 0x29D000
	0x03E56A94 LDR X0, [X0 + 0x598]
	0x03E56A98 BL 0x1C16CF4
	0x03E56A9C MOVZ W8, 0x1
	0x03E56AA0 STRB W8, [X20 + 0x8B3]
	0x03E56AA4 LDR X8, [X19 + 0x38]
	0x03E56AA8 CBZ X8, 0x3E56B44
	0x03E56AAC LDRB W8, [X8 + 0x48]
	0x03E56AB0 CBZ W8, 0x3E56AE0
	0x03E56AB4 LDR X8, [X19 + 0x80]
	0x03E56AB8 MOV X0, X19
	0x03E56ABC STR X8, [X19 + 0x78]
	0x03E56AC0 BL 0x3E53F58
	0x03E56AC4 CBZ X0, 0x3E56B44
	0x03E56AC8 LDR X8, [X0]
	0x03E56ACC LDR X9, [X8 + 0x2D8]
	0x03E56AD0 LDR X1, [X8 + 0x2E0]
	0x03E56AD4 BLR X9
	0x03E56AD8 STP S0, S1, [X19 + 0x80]
	0x03E56ADC B 0x3E56B38
	0x03E56AE0 LDR X8, [X19 + 0x90]
	0x03E56AE4 CBZ X8, 0x3E56B34
	0x03E56AE8 ADRP X9, 0x29D000
	0x03E56AEC LDR X9, [X9 + 0x598]
	0x03E56AF0 LDR X20, [X8 + 0x40]
	0x03E56AF4 LDR X0, [X9]
	0x03E56AF8 LDR W9, [X0 + 0xE0]
	0x03E56AFC CBNZ W9, 0x3E56B04
	0x03E56B00 BL 0x1C16DFC
	0x03E56B04 MOV X0, X20
	0x03E56B08 MOV X1, X31
	0x03E56B0C MOV X2, X31
	0x03E56B10 BL 0x3C354F8
	0x03E56B14 TBZ X0, 0x0, 0x3E56B34
	0x03E56B18 LDR X1, [X19 + 0x90]
	0x03E56B1C CBZ X1, 0x3E56B44
	0x03E56B20 LDRB W8, [X1 + 0x145]
	0x03E56B24 CBZ W8, 0x3E56B34
	0x03E56B28 LDR X2, [X1 + 0x50]
	0x03E56B2C MOV X0, X19
	0x03E56B30 BL 0x3E56B48
	0x03E56B34 STR X31, [X19 + 0x90]
	0x03E56B38 LDP X20, X19, [X31 + 0x10]
	0x03E56B3C LDR X30, [X31], #0x20
	0x03E56B40 RET
	0x03E56B44 BL 0x1C16F20
	0x03E56B48 STR X30, [X31 - 0x50]!
	0x03E56B4C STP X26, X25, [X31 + 0x10]
	0x03E56B50 STP X24, X23, [X31 + 0x20]
	0x03E56B54 STP X22, X21, [X31 + 0x30]
	0x03E56B58 STP X20, X19, [X31 + 0x40]
	0x03E56B5C ADRP X22, 0x592000
	0x03E56B60 LDRB W8, [X22 + 0x8B4]
	0x03E56B64 MOV X20, X2
	0x03E56B68 MOV X19, X1
	0x03E56B6C MOV X21, X0
	0x03E56B70 TBNZ X8, 0x0, 0x3E56BD0

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X22
	005 Move [X31+248], X21
	006 Move [X31+256], X20
	007 Move [X31+264], X19
	008 Move X20, 0x593000
	009 Move W8, [X20+2215]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2F4000
	016 Move X0, [X0+808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2215], W8
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Add X2, X31, 216
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W1, TEMP
	025 Move W3, 1
	026 Move X0, X19
	027 Move [X31+216], X31
	028 Move [X31+112], X31
	029 Move [X31+120], X31
	030 Move [X31+176], V0
	031 Move [X31+184], V0
	032 Move [X31+144], V0
	033 Move [X31+152], V0
	034 Move [X31+8], V0
	035 Call PointerInputModule.GetPointerData, X0, X1, X2, X3
	036 Move X8, [X31+216]
	037 Compare X8, 0
	038 JumpIfEqual {242}
	039 Move X9, [X8]
	040 Move W20, W0
	041 Move X0, X8
	042 Move X10, [X9+376]
	043 Move X1, [X9+384]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X20
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {62}
	049 Move X20, [X31+216]
	050 Move X0, X19
	051 Call BaseInputModule.get_input, X0
	052 Compare X0, 0
	053 JumpIfEqual {242}
	054 Move X8, [X0]
	055 Move X9, [X8+728]
	056 Move X1, [X8+736]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Compare X20, 0
	059 JumpIfEqual {242}
	060 Move [X20+260], S0
	061 Move [X20+264], S1
	062 Move X0, X19
	063 Call BaseInputModule.get_input, X0
	064 Compare X0, 0
	065 JumpIfEqual {242}
	066 Move X8, [X0]
	067 Move X9, [X8+728]
	068 Move X1, [X8+736]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X0, X31
	071 Move [X31], D0
	072 Move [X31+16], D1
	073 Call Cursor.get_lockState
	074 Move X20, [X31+216]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X21, X20, 260
	077 Compare X20, 0
	078 JumpIfEqual {242}
	079 Move V0, 0
	080 Move [X21], D0
	081 Move X22, 0x584000
	082 Move W8, [X22+1935]
	083 Compare W8, 0
	084 JumpIfNotEqual {91}
	085 Move X0, 0x2A6000
	086 Move X0, [X0+3848]
	087 Call 0x1C17CF4
	088 Move X20, [X31+216]
	089 Move W8, 1
	090 Move [X22+1935], W8
	091 Move X8, 0x2A6000
	092 Move X8, [X8+3848]
	093 Move X8, [X8]
	094 Move X8, [X8+184]
	095 Move V0, [X8]
	096 Move [X21+8], D0
	097 Compare X20, 0
	098 JumpIfEqual {242}
	099 Move V3, [X31]
	100 Move V2, [X31+16]
	101 Move V0, [X21]
	102 Move V1, V3
	103 Move V1.S[1], V2.S[0]
	104 Subtract V0, V1, V0
	105 Move [X21+8], D0
	106 Move [X20+260], S3
	107 Move [X20+264], S2
	108 Move X0, X19
	109 Call BaseInputModule.get_input, X0
	110 Compare X0, 0
	111 JumpIfEqual {242}
	112 Move X8, [X0]
	113 Move X9, [X8+744]
	114 Move X1, [X8+752]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare X20, 0
	117 JumpIfEqual {242}
	118 Move [X20+316], S0
	119 Move [X20+320], S1
	120 Move X1, [X31+216]
	121 Compare X1, 0
	122 JumpIfEqual {242}
	123 Move [X1+328], W31
	124 Move X8, [X19+56]
	125 Compare X8, 0
	126 JumpIfEqual {242}
	127 Move X2, [X19+32]
	128 Call EventSystem.RaycastAll, X0, X1, X2
	129 Move X0, [X19+32]
	130 Add X8, X31, 128
	131 Call BaseInputModule.FindFirstRaycast, X0
	132 Move X20, [X31+216]
	133 Add X0, X31, 32
	134 Add X1, X31, 128
	135 Move W2, 80
	136 Call 0x3EB2AC0
	137 Compare X20, 0
	138 JumpIfEqual {242}
	139 Add X0, X20, 80
	140 Add X1, X31, 32
	141 Move W2, 80
	142 Call 0x3EB2AC0
	143 Move X8, [X19+32]
	144 Compare X8, 0
	145 JumpIfEqual {242}
	146 Move W2, [X8+24]
	147 Move W9, [X8+28]
	148 Add W9, W9, 1
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X8+24], W31
	151 Move [X8+28], W9
	152 Move X0, [X8+16]
	153 Move W1, W31
	154 Move X3, X31
	155 Call Array.Clear, X0, X1, X2
	156 Add X2, X31, 120
	157 Move TEMP, 1
	158 Not TEMP
	159 Move W1, TEMP
	160 Move W3, 1
	161 Move X0, X19
	162 Call PointerInputModule.GetPointerData, X0, X1, X2, X3
	163 Move X0, [X31+120]
	164 Compare X0, 0
	165 JumpIfEqual {242}
	166 Move X8, [X0]
	167 Move X9, [X8+376]
	168 Move X1, [X8+384]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X1, [X31+216]
	171 Move X2, [X31+120]
	172 Call PointerInputModule.CopyFromTo, X0, X1, X2
	173 Move X8, [X31+120]
	174 Compare X8, 0
	175 JumpIfEqual {242}
	176 Move W9, 1
	177 Add X2, X31, 112
	178 Move TEMP, 2
	179 Not TEMP
	180 Move W1, TEMP
	181 Move W3, 1
	182 Move X0, X19
	183 Move [X8+328], W9
	184 Call PointerInputModule.GetPointerData, X0, X1, X2, X3
	185 Move X0, [X31+112]
	186 Compare X0, 0
	187 JumpIfEqual {242}
	188 Move X8, [X0]
	189 Move X9, [X8+376]
	190 Move X1, [X8+384]
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X1, [X31+216]
	193 Move X2, [X31+112]
	194 Call PointerInputModule.CopyFromTo, X0, X1, X2
	195 Move X8, [X31+112]
	196 Compare X8, 0
	197 JumpIfEqual {242}
	198 Move W9, 2
	199 Move [X8+328], W9
	200 Move X20, [X19+96]
	201 Move X0, X19
	202 Move W1, W31
	203 Call PointerInputModule.StateForMouseButton, X0, X1
	204 Compare X20, 0
	205 JumpIfEqual {242}
	206 Move X3, [X31+216]
	207 Move W2, W0
	208 Move X0, X20
	209 Move W1, W31
	210 Call MouseState.SetButtonState, X0, X1, X2, X3
	211 Move X20, [X19+96]
	212 Move W1, 1
	213 Move X0, X19
	214 Call PointerInputModule.StateForMouseButton, X0, X1
	215 Compare X20, 0
	216 JumpIfEqual {242}
	217 Move X3, [X31+120]
	218 Move W2, W0
	219 Move W1, 1
	220 Move X0, X20
	221 Call MouseState.SetButtonState, X0, X1, X2, X3
	222 Move X20, [X19+96]
	223 Move W1, 2
	224 Move X0, X19
	225 Call PointerInputModule.StateForMouseButton, X0, X1
	226 Compare X20, 0
	227 JumpIfEqual {242}
	228 Move X3, [X31+112]
	229 Move W2, W0
	230 Move W1, 2
	231 Move X0, X20
	232 Call MouseState.SetButtonState, X0, X1, X2, X3
	233 Move X0, [X19+96]
	234 Move X20, [X31+256]
	235 Move X19, [X31+264]
	236 Move X22, [X31+240]
	237 Move X21, [X31+248]
	238 Move X29, [X31+224]
	239 Move X30, [X31+232]
	240 Add X31, X31, 272
	241 Return X0
	242 Call 0x1C17F20

Method: UnityEngine.EventSystems.PointerEventData GetLastPointerEventData(System.Int32 id)

Disassembly:
	0x03E56BAC BL 0x1C16CF4
	0x03E56BB0 ADRP X0, 0x2C5000
	0x03E56BB4 LDR X0, [X0 + 0x9F8]
	0x03E56BB8 BL 0x1C16CF4
	0x03E56BBC ADRP X0, 0x29D000
	0x03E56BC0 LDR X0, [X0 + 0x598]
	0x03E56BC4 BL 0x1C16CF4
	0x03E56BC8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Add X2, X31, 8
	003 Move W3, W31
	004 Move [X31+8], X31
	005 Call PointerInputModule.GetPointerData, X0, X1, X2, X3
	006 Move X0, [X31+8]
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean ShouldStartDrag(UnityEngine.Vector2 pressPos, UnityEngine.Vector2 currentPos, System.Single threshold, System.Boolean useDragThreshold)

Disassembly:
	0x03E56BCC STRB W8, [X22 + 0x8B4]
	0x03E56BD0 CBZ X19, 0x3E56EB0
	0x03E56BD4 ADRP X24, 0x2C5000
	0x03E56BD8 LDR X24, [X24 + 0x9F8]
	0x03E56BDC LDR X22, [X19 + 0x28]
	0x03E56BE0 LDR X0, [X24]
	0x03E56BE4 LDR W8, [X0 + 0xE0]
	0x03E56BE8 CBNZ W8, 0x3E56BF0
	0x03E56BEC BL 0x1C16DFC
	0x03E56BF0 ADRP X23, 0x58B000
	0x03E56BF4 LDRB W8, [X23 + 0x388]
	0x03E56BF8 CBNZ W8, 0x3E56C10

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {14}
	005 Subtract S0, S0, S2
	006 Subtract S1, S1, S3
	007 Multiply S0, S0, S0
	008 Multiply S1, S1, S1
	009 Add S0, S0, S1
	010 Multiply S1, S4, S4
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Return X0
	014 Move W0, 1
	015 Return X0

Method: System.Void ProcessMove(UnityEngine.EventSystems.PointerEventData pointerEvent)

Disassembly:
	0x03E56BFC ADRP X0, 0x2C5000
	0x03E56C00 LDR X0, [X0 + 0x9F8]
	0x03E56C04 BL 0x1C16CF4
	0x03E56C08 MOVZ W8, 0x1
	0x03E56C0C STRB W8, [X23 + 0x388]
	0x03E56C10 LDR X0, [X24]
	0x03E56C14 ADRP X26, 0x2F3000
	0x03E56C18 ADRP X23, 0x2F3000
	0x03E56C1C ADRP X25, 0x29D000
	0x03E56C20 LDR W8, [X0 + 0xE0]
	0x03E56C24 LDR X26, [X26 + 0x3A8]
	0x03E56C28 LDR X23, [X23 + 0x3B8]
	0x03E56C2C LDR X25, [X25 + 0x598]
	0x03E56C30 CBNZ W8, 0x3E56C3C
	0x03E56C34 BL 0x1C16DFC
	0x03E56C38 LDR X0, [X24]
	0x03E56C3C LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X31
	006 Move X19, X1
	007 Call Cursor.get_lockState
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X2, X31
	010 Compare X19, 0
	011 JumpIfEqual {20}
	012 Move X2, [X19+80]
	013 Move X0, X20
	014 Move X1, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Call BaseInputModule.HandlePointerExitAndEnter, X0, X1, X2
	019 Return 
	020 Call 0x1C17F20

Method: System.Void ProcessDrag(UnityEngine.EventSystems.PointerEventData pointerEvent)

Disassembly:
	0x03E56C40 LDR X3, [X26]
	0x03E56C44 MOV X0, X22
	0x03E56C48 MOV X1, X19
	0x03E56C4C LDR X2, [X8 + 0x20]
	0x03E56C50 BL 0x21DD088
	0x03E56C54 LDR X1, [X23]
	0x03E56C58 MOV X0, X20
	0x03E56C5C BL 0x21DDB64
	0x03E56C60 LDR X8, [X25]
	0x03E56C64 LDR X23, [X19 + 0x48]
	0x03E56C68 MOV X22, X0
	0x03E56C6C LDR W9, [X8 + 0xE0]
	0x03E56C70 CBNZ W9, 0x3E56C7C
	0x03E56C74 MOV X0, X8
	0x03E56C78 BL 0x1C16DFC
	0x03E56C7C MOV X0, X23
	0x03E56C80 MOV X1, X22
	0x03E56C84 MOV X2, X31
	0x03E56C88 BL 0x3C3883C
	0x03E56C8C TBZ X0, 0x0, 0x3E56D00
	0x03E56C90 LDRB W8, [X19 + 0xF8]
	0x03E56C94 CBZ W8, 0x3E56D00
	0x03E56C98 LDR X0, [X24]
	0x03E56C9C LDR X22, [X19 + 0x48]
	0x03E56CA0 LDR W8, [X0 + 0xE0]
	0x03E56CA4 CBNZ W8, 0x3E56CAC
	0x03E56CA8 BL 0x1C16DFC
	0x03E56CAC ADRP X23, 0x58B000
	0x03E56CB0 LDRB W8, [X23 + 0x389]
	0x03E56CB4 CBNZ W8, 0x3E56CCC
	0x03E56CB8 ADRP X0, 0x2C5000
	0x03E56CBC LDR X0, [X0 + 0x9F8]
	0x03E56CC0 BL 0x1C16CF4
	0x03E56CC4 MOVZ W8, 0x1
	0x03E56CC8 STRB W8, [X23 + 0x389]
	0x03E56CCC LDR X0, [X24]
	0x03E56CD0 LDR W8, [X0 + 0xE0]
	0x03E56CD4 CBNZ W8, 0x3E56CE0
	0x03E56CD8 BL 0x1C16DFC
	0x03E56CDC LDR X0, [X24]
	0x03E56CE0 ADRP X9, 0x2F3000
	0x03E56CE4 LDR X8, [X0 + 0xB8]
	0x03E56CE8 LDR X9, [X9 + 0x3A0]
	0x03E56CEC MOV X0, X22
	0x03E56CF0 MOV X1, X19
	0x03E56CF4 LDR X2, [X8 + 0x28]
	0x03E56CF8 LDR X3, [X9]
	0x03E56CFC BL 0x21DD088
	0x03E56D00 LDR X0, [X25]
	0x03E56D04 LDR X22, [X19 + 0x40]
	0x03E56D08 LDR W8, [X0 + 0xE0]
	0x03E56D0C CBNZ W8, 0x3E56D14
	0x03E56D10 BL 0x1C16DFC
	0x03E56D14 MOV X0, X22
	0x03E56D18 MOV X1, X31
	0x03E56D1C MOV X2, X31
	0x03E56D20 BL 0x3C354F8
	0x03E56D24 TBZ X0, 0x0, 0x3E56D94
	0x03E56D28 LDRB W8, [X19 + 0x145]
	0x03E56D2C CBZ W8, 0x3E56D94
	0x03E56D30 LDR X0, [X24]
	0x03E56D34 LDR W8, [X0 + 0xE0]
	0x03E56D38 CBNZ W8, 0x3E56D40
	0x03E56D3C BL 0x1C16DFC
	0x03E56D40 ADRP X22, 0x58B000
	0x03E56D44 LDRB W8, [X22 + 0x38A]
	0x03E56D48 CBNZ W8, 0x3E56D60
	0x03E56D4C ADRP X0, 0x2C5000
	0x03E56D50 LDR X0, [X0 + 0x9F8]
	0x03E56D54 BL 0x1C16CF4
	0x03E56D58 MOVZ W8, 0x1
	0x03E56D5C STRB W8, [X22 + 0x38A]
	0x03E56D60 LDR X0, [X24]
	0x03E56D64 LDR W8, [X0 + 0xE0]
	0x03E56D68 CBNZ W8, 0x3E56D74
	0x03E56D6C BL 0x1C16DFC
	0x03E56D70 LDR X0, [X24]
	0x03E56D74 ADRP X9, 0x2F3000
	0x03E56D78 LDR X8, [X0 + 0xB8]
	0x03E56D7C LDR X9, [X9 + 0x380]
	0x03E56D80 MOV X0, X20
	0x03E56D84 MOV X1, X19
	0x03E56D88 LDR X2, [X8 + 0x50]
	0x03E56D8C LDR X3, [X9]
	0x03E56D90 BL 0x21DD8A8
	0x03E56D94 MOV X0, X19
	0x03E56D98 MOV X1, X31
	0x03E56D9C STRB W31, [X19 + 0xF8]
	0x03E56DA0 BL 0x3E4F3AC
	0x03E56DA4 STR X31, [X19 + 0x38]
	0x03E56DA8 STR X31, [X19 + 0x48]
	0x03E56DAC LDR X0, [X25]
	0x03E56DB0 LDR X22, [X19 + 0x40]
	0x03E56DB4 LDR W8, [X0 + 0xE0]
	0x03E56DB8 CBNZ W8, 0x3E56DC0
	0x03E56DBC BL 0x1C16DFC
	0x03E56DC0 MOV X0, X22
	0x03E56DC4 MOV X1, X31
	0x03E56DC8 MOV X2, X31
	0x03E56DCC BL 0x3C354F8
	0x03E56DD0 TBZ X0, 0x0, 0x3E56E44
	0x03E56DD4 LDRB W8, [X19 + 0x145]
	0x03E56DD8 CBZ W8, 0x3E56E44
	0x03E56DDC LDR X0, [X24]
	0x03E56DE0 LDR X22, [X19 + 0x40]
	0x03E56DE4 LDR W8, [X0 + 0xE0]
	0x03E56DE8 CBNZ W8, 0x3E56DF0
	0x03E56DEC BL 0x1C16DFC
	0x03E56DF0 ADRP X23, 0x58B000
	0x03E56DF4 LDRB W8, [X23 + 0x38B]
	0x03E56DF8 CBNZ W8, 0x3E56E10
	0x03E56DFC ADRP X0, 0x2C5000
	0x03E56E00 LDR X0, [X0 + 0x9F8]
	0x03E56E04 BL 0x1C16CF4
	0x03E56E08 MOVZ W8, 0x1
	0x03E56E0C STRB W8, [X23 + 0x38B]
	0x03E56E10 LDR X0, [X24]
	0x03E56E14 LDR W8, [X0 + 0xE0]
	0x03E56E18 CBNZ W8, 0x3E56E24
	0x03E56E1C BL 0x1C16DFC
	0x03E56E20 LDR X0, [X24]
	0x03E56E24 ADRP X9, 0x2F3000
	0x03E56E28 LDR X8, [X0 + 0xB8]
	0x03E56E2C LDR X9, [X9 + 0x390]
	0x03E56E30 MOV X0, X22
	0x03E56E34 MOV X1, X19
	0x03E56E38 LDR X2, [X8 + 0x48]
	0x03E56E3C LDR X3, [X9]
	0x03E56E40 BL 0x21DD088
	0x03E56E44 STRB W31, [X19 + 0x145]
	0x03E56E48 STR X31, [X19 + 0x40]
	0x03E56E4C LDR X0, [X25]
	0x03E56E50 LDR X22, [X19 + 0x20]
	0x03E56E54 LDR W8, [X0 + 0xE0]
	0x03E56E58 CBNZ W8, 0x3E56E60
	0x03E56E5C BL 0x1C16DFC
	0x03E56E60 MOV X0, X20
	0x03E56E64 MOV X1, X22
	0x03E56E68 MOV X2, X31
	0x03E56E6C BL 0x3C354F8
	0x03E56E70 TBZ X0, 0x0, 0x3E56E94
	0x03E56E74 MOV X0, X21
	0x03E56E78 MOV X1, X19
	0x03E56E7C MOV X2, X31
	0x03E56E80 BL 0x3E54524
	0x03E56E84 MOV X0, X21
	0x03E56E88 MOV X1, X19
	0x03E56E8C MOV X2, X20
	0x03E56E90 BL 0x3E54524
	0x03E56E94 STR X19, [X21 + 0x90]
	0x03E56E98 LDP X20, X19, [X31 + 0x40]
	0x03E56E9C LDP X22, X21, [X31 + 0x30]
	0x03E56EA0 LDP X24, X23, [X31 + 0x20]
	0x03E56EA4 LDP X26, X25, [X31 + 0x10]
	0x03E56EA8 LDR X30, [X31], #0x50
	0x03E56EAC RET
	0x03E56EB0 BL 0x1C16F20
	0x03E56EB4 STR D12, [X31 - 0x70]!
	0x03E56EB8 STP D11, D10, [X31 + 0x10]
	0x03E56EBC STP D9, D8, [X31 + 0x20]
	0x03E56EC0 STP X30, X25, [X31 + 0x30]
	0x03E56EC4 STP X24, X23, [X31 + 0x40]
	0x03E56EC8 STP X22, X21, [X31 + 0x50]
	0x03E56ECC STP X20, X19, [X31 + 0x60]
	0x03E56ED0 MOV X19, X0
	0x03E56ED4 BL 0x3E5512C
	0x03E56ED8 TBZ X0, 0x0, 0x3E570C0
	0x03E56EDC LDRB W23, [X19 + 0xC0]
	0x03E56EE0 MOV X0, X19
	0x03E56EE4 BL 0x3E53F58
	0x03E56EE8 CBZ X0, 0x3E570E8
	0x03E56EEC LDR X8, [X0]
	0x03E56EF0 LDR X1, [X19 + 0xA8]
	0x03E56EF4 LDR X9, [X8 + 0x338]
	0x03E56EF8 LDR X2, [X8 + 0x340]
	0x03E56EFC BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x593000
	008 Move W8, [X21+2216]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x2F4000
	016 Move X0, [X0+968]
	017 Call 0x1C17CF4
	018 Move X0, 0x2F4000
	019 Move X0, [X0+976]
	020 Call 0x1C17CF4
	021 Move X0, 0x2F4000
	022 Move X0, [X0+936]
	023 Call 0x1C17CF4
	024 Move X0, 0x2C6000
	025 Move X0, [X0+2552]
	026 Call 0x1C17CF4
	027 Move X0, 0x29E000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2216], W8
	032 Compare X19, 0
	033 JumpIfEqual {207}
	034 Move V0, [X19+268]
	035 Move V1, [X19+272]
	036 Multiply S0, S0, S0
	037 Multiply S1, S1, S1
	038 Add S0, S0, S1
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move X0, X31
	041 Call Cursor.get_lockState
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X22, 0x29E000
	044 Move X22, [X22+1432]
	045 Move X21, [X19+64]
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {66}
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return 
	066 Move W8, [X19+325]
	067 Compare W8, 0
	068 JumpIfNotEqual {118}
	069 Move X8, [X20+56]
	070 Compare X8, 0
	071 JumpIfEqual {207}
	072 Move W9, [X19+324]
	073 Compare W9, 0
	074 JumpIfEqual {85}
	075 Add X9, X19, 260
	076 Move V1, [X9+16]
	077 Move V2, [X9]
	078 Move V0, [X8+60]
	079 Subtract V1, V1, V2
	080 NotImplemented "Instruction SCVTF not yet implemented."
	081 NotImplemented "Instruction INVALID not yet implemented."
	082 NotImplemented "Instruction FADDP not yet implemented."
	083 Multiply S0, S0, S0
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Move X21, 0x2C6000
	086 Move X21, [X21+2552]
	087 Move X20, [X19+64]
	088 Move X0, [X21]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X23, 0x58C000
	094 Move W8, [X23+908]
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x2C6000
	098 Move X0, [X0+2552]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X23+908], W8
	102 Move X0, [X21]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X21]
	108 Move X9, 0x2F4000
	109 Move X8, [X0+184]
	110 Move X9, [X9+968]
	111 Move X0, X20
	112 Move X1, X19
	113 Move X2, [X8+56]
	114 Move X3, [X9]
	115 Call 0x21DE088, X0, X1, X2
	116 Move W8, 1
	117 Move [X19+325], W8
	118 Move X0, [X22]
	119 Move X20, [X19+40]
	120 Move X21, [X19+64]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X20
	126 Move X1, X21
	127 Move X2, X31
	128 Call Object.op_Inequality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {169}
	133 Move X21, 0x2C6000
	134 Move X21, [X21+2552]
	135 Move X20, [X19+40]
	136 Move X0, [X21]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X22, 0x58C000
	142 Move W8, [X22+904]
	143 Compare W8, 0
	144 JumpIfNotEqual {150}
	145 Move X0, 0x2C6000
	146 Move X0, [X0+2552]
	147 Call 0x1C17CF4
	148 Move W8, 1
	149 Move [X22+904], W8
	150 Move X0, [X21]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X21]
	156 Move X9, 0x2F4000
	157 Move X8, [X0+184]
	158 Move X9, [X9+936]
	159 Move X0, X20
	160 Move X1, X19
	161 Move X2, [X8+32]
	162 Move X3, [X9]
	163 Call 0x21DE088, X0, X1, X2
	164 Move X0, X19
	165 Move X1, X31
	166 Move [X19+248], W31
	167 Call PointerEventData.set_pointerPress, X0, X1
	168 Move [X19+56], X31
	169 Move X21, 0x2C6000
	170 Move X21, [X21+2552]
	171 Move X20, [X19+64]
	172 Move X0, [X21]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X22, 0x58C000
	178 Move W8, [X22+909]
	179 Compare W8, 0
	180 JumpIfNotEqual {186}
	181 Move X0, 0x2C6000
	182 Move X0, [X0+2552]
	183 Call 0x1C17CF4
	184 Move W8, 1
	185 Move [X22+909], W8
	186 Move X0, [X21]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X21]
	192 Move X9, 0x2F4000
	193 Move X8, [X0+184]
	194 Move X9, [X9+976]
	195 Move X0, X20
	196 Move X1, X19
	197 Move X2, [X8+64]
	198 Move X3, [X9]
	199 Move X20, [X31+32]
	200 Move X19, [X31+40]
	201 Move X22, [X31+16]
	202 Move X21, [X31+24]
	203 Move X30, [X31+48]
	204 Move X23, [X31+56]
	205 Call 0x21DE088, X0, X1, X2
	206 Return 
	207 Call 0x1C17F20

Method: System.Boolean IsPointerOverGameObject(System.Int32 pointerId)

Disassembly:
	0x03E56F00 MOV W20, W0
	0x03E56F04 MOV X0, X19
	0x03E56F08 BL 0x3E53F58
	0x03E56F0C CBZ X0, 0x3E570E8
	0x03E56F10 LDR X8, [X0]
	0x03E56F14 LDR X1, [X19 + 0xB0]
	0x03E56F18 LDR X9, [X8 + 0x338]
	0x03E56F1C LDR X2, [X8 + 0x340]
	0x03E56F20 BLR X9
	0x03E56F24 MOV W21, W0
	0x03E56F28 MOV X0, X19
	0x03E56F2C BL 0x3E53F58
	0x03E56F30 CBZ X0, 0x3E570E8
	0x03E56F34 LDR X8, [X0]
	0x03E56F38 LDR X1, [X19 + 0x98]
	0x03E56F3C LDR X9, [X8 + 0x328]
	0x03E56F40 LDR X2, [X8 + 0x330]
	0x03E56F44 BLR X9
	0x03E56F48 ADRP X22, 0x583000
	0x03E56F4C LDRB W8, [X22 + 0x5AA]
	0x03E56F50 MOV V8.16B, V0.16B
	0x03E56F54 CBNZ W8, 0x3E56F6C
	0x03E56F58 ADRP X0, 0x2A4000
	0x03E56F5C LDR X0, [X0 + 0x4B8]
	0x03E56F60 BL 0x1C16CF4
	0x03E56F64 MOVZ W8, 0x1
	0x03E56F68 STRB W8, [X22 + 0x5AA]
	0x03E56F6C ADRP X25, 0x2A4000
	0x03E56F70 LDR X25, [X25 + 0x4B8]
	0x03E56F74 ADRP X9, 0xFFFFFFFFFCC94000
	0x03E56F78 LDR V9, [X9 + 0x240]
	0x03E56F7C FABS S0, S8
	0x03E56F80 LDR X8, [X25]
	0x03E56F84 FMOV S1, W31
	0x03E56F88 FMOV S3, 8
	0x03E56F8C FMAXNM S0, S0, S1
	0x03E56F90 LDR X8, [X8 + 0xB8]
	0x03E56F94 FMUL S0, S0, S9
	0x03E56F98 FABD S1, S1, S1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x593000
	007 Move W8, [X21+2217]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x29E000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2217], W8
	019 Add X2, X31, 8
	020 Move X0, X20
	021 Move W1, W19
	022 Move W3, W31
	023 Move [X31+8], X31
	024 Call PointerInputModule.GetPointerData, X0, X1, X2, X3
	025 Move X8, [X31+8]
	026 Compare X8, 0
	027 JumpIfEqual {40}
	028 Move X9, 0x29E000
	029 Move X9, [X9+1432]
	030 Move X19, [X8+32]
	031 Move X0, [X9]
	032 Move W9, [X0+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move W0, W31
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 And W0, W0, 1
	046 Add X31, X31, 48
	047 Return X0

Method: System.Void ClearSelection()

Disassembly:
	0x03E56F9C MOV X0, X19
	0x03E56FA0 LDR V2, [X8]
	0x03E56FA4 FMUL S2, S2, S3
	0x03E56FA8 FCMP S0, S2
	0x03E56FAC FCSEL S0, S0, S2, GT
	0x03E56FB0 FCMP S1, S0
	0x03E56FB4 CSET W24, PL
	0x03E56FB8 BL 0x3E53F58
	0x03E56FBC CBZ X0, 0x3E570E8
	0x03E56FC0 LDR X8, [X0]
	0x03E56FC4 LDR X1, [X19 + 0xA0]
	0x03E56FC8 LDR X9, [X8 + 0x328]
	0x03E56FCC LDR X2, [X8 + 0x330]
	0x03E56FD0 BLR X9
	0x03E56FD4 LDRB W8, [X22 + 0x5AA]
	0x03E56FD8 MOV V8.16B, V0.16B
	0x03E56FDC CBNZ W8, 0x3E56FF4
	0x03E56FE0 ADRP X0, 0x2A4000
	0x03E56FE4 LDR X0, [X0 + 0x4B8]
	0x03E56FE8 BL 0x1C16CF4
	0x03E56FEC MOVZ W8, 0x1
	0x03E56FF0 STRB W8, [X22 + 0x5AA]
	0x03E56FF4 LDR X8, [X25]
	0x03E56FF8 LDP D12, D11, [X19 + 0x78]
	0x03E56FFC MOV X0, X19
	0x03E57000 LDR X8, [X8 + 0xB8]
	0x03E57004 LDR V10, [X8]
	0x03E57008 BL 0x3E53F58
	0x03E5700C CBZ X0, 0x3E570E8
	0x03E57010 LDR X8, [X0]
	0x03E57014 MOV W1, W31
	0x03E57018 LDR X9, [X8 + 0x2A8]
	0x03E5701C LDR X2, [X8 + 0x2B0]
	0x03E57020 BLR X9
	0x03E57024 MOV W22, W0
	0x03E57028 MOV X0, X19
	0x03E5702C BL 0x3E53F58
	0x03E57030 CBZ X0, 0x3E570E8
	0x03E57034 FABS S0, S8
	0x03E57038 FMOV S1, W31
	0x03E5703C FMOV S3, 8
	0x03E57040 FMAXNM S0, S0, S1
	0x03E57044 FMUL S3, S10, S3
	0x03E57048 FMUL S0, S0, S9
	0x03E5704C AND W8, W20, 0x1
	0x03E57050 FSUB V2.2S, V11.2S, V12.2S
	0x03E57054 FMOV S1, W31
	0x03E57058 LDR X10, [X0]
	0x03E5705C FCMP S0, S3
	0x03E57060 AND W9, W21, 0x1
	0x03E57064 ORR W8, W8, W23, 0x0
	0x03E57068 FABD S1, S1, S1
	0x00000000 INVALID
	0x03E57070 FCSEL S0, S0, S3, GT
	0x03E57074 ORR W8, W8, W9, 0x0
	0x03E57078 FADDP S2, V2.2S
	0x03E5707C FCMP S1, S0
	0x03E57080 ORR W8, W8, W24, 0x0
	0x03E57084 CSET W11, PL
	0x03E57088 FCMP S2, 0x0
	0x03E5708C LDR X9, [X10 + 0x308]
	0x03E57090 ORR W8, W8, W11, 0x0
	0x03E57094 CSET W11, GT
	0x03E57098 LDR X1, [X10 + 0x310]
	0x03E5709C ORR W8, W8, W11, 0x0
	0x03E570A0 CMP W8, 0x0
	0x03E570A4 CSET W8, NE
	0x03E570A8 ORR W19, W8, W22, 0x0
	0x03E570AC BLR X9
	0x03E570B0 CMP W0, 0x0
	0x03E570B4 CSET W8, GT
	0x03E570B8 ORR W8, W19, W8, 0x0
	0x03E570BC B 0x3E570C4
	0x03E570C0 MOV W8, W31
	0x03E570C4 LDP X20, X19, [X31 + 0x60]
	0x03E570C8 LDP X22, X21, [X31 + 0x50]
	0x03E570CC LDP X24, X23, [X31 + 0x40]
	0x03E570D0 LDP X30, X25, [X31 + 0x30]
	0x03E570D4 LDP D9, D8, [X31 + 0x20]
	0x03E570D8 LDP D11, D10, [X31 + 0x10]
	0x03E570DC AND W0, W8, 0x1
	0x03E570E0 LDR V12, [X31], #0x70
	0x03E570E4 RET
	0x03E570E8 BL 0x1C16F20
	0x03E570EC STP X30, X21, [X31 - 0x20]!
	0x03E570F0 STP X20, X19, [X31 + 0x10]
	0x03E570F4 ADRP X20, 0x591000
	0x03E570F8 LDRB W8, [X20 + 0x8B5]
	0x03E570FC MOV X19, X0
	0x03E57100 TBNZ X8, 0x0, 0x3E57118
	0x03E57104 ADRP X0, 0x29C000
	0x03E57108 LDR X0, [X0 + 0x598]
	0x03E5710C BL 0x1C16CF4
	0x03E57110 MOVZ W8, 0x1
	0x03E57114 STRB W8, [X20 + 0x8B5]
	0x03E57118 LDR X8, [X19 + 0x38]
	0x03E5711C CBZ X8, 0x3E571E8
	0x03E57120 LDRB W8, [X8 + 0x48]
	0x03E57124 CBZ W8, 0x3E571DC
	0x03E57128 MOV X0, X19
	0x03E5712C BL 0x3E53F58
	0x03E57130 CBZ X0, 0x3E571E8
	0x03E57134 LDR X8, [X0]
	0x03E57138 LDR X9, [X8 + 0x2D8]
	0x03E5713C LDR X1, [X8 + 0x2E0]
	0x03E57140 BLR X9
	0x03E57144 MOV X0, X19
	0x03E57148 STP S0, S1, [X19 + 0x80]
	0x03E5714C BL 0x3E53F58
	0x03E57150 CBZ X0, 0x3E571E8
	0x03E57154 LDR X8, [X0]
	0x03E57158 LDR X9, [X8 + 0x2D8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x593000
	009 Move W8, [X20+2218]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x316000
	016 Move X0, [X0+3064]
	017 Call 0x1C17CF4
	018 Move X0, 0x307000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0x307000
	022 Move X0, [X0+2976]
	023 Call 0x1C17CF4
	024 Move X0, 0x307000
	025 Move X0, [X0+2992]
	026 Call 0x1C17CF4
	027 Move X0, 0x307000
	028 Move X0, [X0+3008]
	029 Call 0x1C17CF4
	030 Move X0, 0x307000
	031 Move X0, [X0+3016]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2218], W8
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move X8, [X19]
	039 Move X0, X19
	040 Move X9, [X8+616]
	041 Move X1, [X8+624]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X19+88]
	044 Compare X8, 0
	045 JumpIfEqual {98}
	046 Move X9, 0x306000
	047 Move X9, [X9+2952]
	048 Move X20, X0
	049 Move X0, X8
	050 Move X1, [X9]
	051 Call Dictionary`2<Int32, Object>.get_Values, X0
	052 Compare X0, 0
	053 JumpIfEqual {98}
	054 Move X8, 0x306000
	055 Move X8, [X8+3016]
	056 Move X22, 0x306000
	057 Move X23, 0x315000
	058 Move X21, 0x306000
	059 Move X1, [X8]
	060 Move X22, [X22+2992]
	061 Move X23, [X23+3064]
	062 Move X21, [X21+2976]
	063 Add X8, X31, 8
	064 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	065 Move X1, [X22]
	066 Add X0, X31, 8
	067 Call Enumerator<Int32, Object>.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {76}
	072 Move X1, [X31+24]
	073 Move X0, X19
	074 Move X2, X31
	075 Call BaseInputModule.HandlePointerExitAndEnter, X0, X1, X2
	076 Move X1, [X21]
	077 Add X0, X31, 8
	078 Call Enumerator<Int32, Object>.Dispose, X0
	079 Move X0, [X19+88]
	080 Compare X0, 0
	081 JumpIfEqual {98}
	082 Move X1, [X23]
	083 Call Dictionary`2<Int32, Object>.Clear, X0
	084 Move X0, [X19+56]
	085 Compare X0, 0
	086 JumpIfEqual {98}
	087 Move X1, X31
	088 Move X2, X20
	089 Call EventSystem.SetSelectedGameObject, X0, X1, X2
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X30, [X31+32]
	095 Move X23, [X31+40]
	096 Add X31, X31, 80
	097 Return 
	098 Call 0x1C17F20
	099 Move X22, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X22
	102 Call 0x3EB2AD0
	103 Move X21, [X0]
	104 Call 0x3EB2AE0
	105 Move X8, 0x306000
	106 Move X8, [X8+2976]
	107 Add X0, X31, 8
	108 Move X1, [X8]
	109 Call Enumerator<Int32, Object>.Dispose, X0
	110 Compare X21, 0
	111 JumpIfEqual {79}
	112 Move X0, X21
	113 Call 0x1C17F18
	114 Move X21, X31
	115 Move X22, X0
	116 Move X8, 0x306000
	117 Move X8, [X8+2976]
	118 Move X1, [X8]
	119 Add X0, X31, 8
	120 Call Enumerator<Int32, Object>.Dispose, X0
	121 Compare X21, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X22
	124 Call 0x1D2D690
	125 Move X0, X21
	126 Call 0x1C17F18
	127 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x03E5715C LDR X1, [X8 + 0x2E0]
	0x03E57160 BLR X9
	0x03E57164 LDR X8, [X19 + 0x38]
	0x03E57168 STP S0, S1, [X19 + 0x78]
	0x03E5716C CBZ X8, 0x3E571E8
	0x03E57170 ADRP X9, 0x29C000
	0x03E57174 LDR X9, [X9 + 0x598]
	0x03E57178 LDR X20, [X8 + 0x40]
	0x03E5717C LDR X0, [X9]
	0x03E57180 LDR W9, [X0 + 0xE0]
	0x03E57184 CBNZ W9, 0x3E5718C
	0x03E57188 BL 0x1C16DFC
	0x03E5718C MOV X0, X20
	0x03E57190 MOV X1, X31
	0x03E57194 MOV X2, X31
	0x03E57198 BL 0x3C3883C
	0x03E5719C LDR X21, [X19 + 0x38]
	0x03E571A0 TBZ X0, 0x0, 0x3E571AC
	0x03E571A4 CBZ X21, 0x3E571E8
	0x03E571A8 LDR X20, [X21 + 0x30]
	0x03E571AC LDR X8, [X19]
	0x03E571B0 MOV X0, X19
	0x03E571B4 LDR X9, [X8 + 0x268]
	0x03E571B8 LDR X1, [X8 + 0x270]
	0x03E571BC BLR X9
	0x03E571C0 CBZ X21, 0x3E571E8
	0x03E571C4 MOV X1, X20
	0x03E571C8 LDP X20, X19, [X31 + 0x10]
	0x03E571CC MOV X2, X0
	0x03E571D0 MOV X0, X21
	0x03E571D4 LDP X30, X21, [X31], #0x20
	0x03E571D8 B 0x3E4EC58
	0x03E571DC LDP X20, X19, [X31 + 0x10]
	0x03E571E0 LDP X30, X21, [X31], #0x20
	0x03E571E4 RET
	0x03E571E8 BL 0x1C16F20
	0x03E571EC B 0x3E55F9C
	0x03E571F0 STR X30, [X31 - 0x20]!
	0x03E571F4 STP X20, X19, [X31 + 0x10]
	0x03E571F8 LDR X8, [X0 + 0x38]
	0x03E571FC CBZ X8, 0x3E57290
	0x03E57200 LDRB W8, [X8 + 0x48]
	0x03E57204 CBZ W8, 0x3E57274
	0x03E57208 MOV X19, X0
	0x03E5720C BL 0x3E57294
	0x03E57210 MOV W20, W0
	0x03E57214 MOV X0, X19
	0x03E57218 BL 0x3E573DC
	0x03E5721C TBNZ X0, 0x0, 0x3E5724C
	0x03E57220 MOV X0, X19
	0x03E57224 BL 0x3E53F58
	0x03E57228 CBZ X0, 0x3E57290
	0x03E5722C LDR X8, [X0]
	0x03E57230 LDR X9, [X8 + 0x298]
	0x03E57234 LDR X1, [X8 + 0x2A0]
	0x03E57238 BLR X9
	0x03E5723C TBZ X0, 0x0, 0x3E5724C
	0x03E57240 MOV X0, X19
	0x03E57244 MOV W1, W31
	0x03E57248 BL 0x3E5815C
	0x03E5724C LDR X8, [X19 + 0x38]
	0x03E57250 CBZ X8, 0x3E57290
	0x03E57254 LDRB W8, [X8 + 0x38]
	0x03E57258 CMP W8, 0x0
	0x03E5725C CSET W8, EQ
	0x03E57260 ORR W8, W20, W8, 0x0
	0x03E57264 TBNZ X8, 0x0, 0x3E57274
	0x03E57268 MOV X0, X19
	0x03E5726C BL 0x3E57548
	0x03E57270 TBZ X0, 0x0, 0x3E57280
	0x03E57274 LDP X20, X19, [X31 + 0x10]
	0x03E57278 LDR X30, [X31], #0x20
	0x03E5727C RET
	0x03E57280 MOV X0, X19
	0x03E57284 LDP X20, X19, [X31 + 0x10]
	0x03E57288 LDR X30, [X31], #0x20
	0x03E5728C B 0x3E577A8
	0x03E57290 BL 0x1C16F20
	0x03E57294 STR X30, [X31 - 0x30]!
	0x03E57298 STP X22, X21, [X31 + 0x10]
	0x03E5729C STP X20, X19, [X31 + 0x20]
	0x03E572A0 ADRP X20, 0x591000
	0x03E572A4 LDRB W8, [X20 + 0x8BA]
	0x03E572A8 MOV X19, X0
	0x03E572AC TBNZ X8, 0x0, 0x3E572DC
	0x03E572B0 ADRP X0, 0x2F2000
	0x03E572B4 LDR X0, [X0 + 0x430]
	0x03E572B8 BL 0x1C16CF4
	0x03E572BC ADRP X0, 0x2C4000
	0x03E572C0 LDR X0, [X0 + 0x9F8]
	0x03E572C4 BL 0x1C16CF4
	0x03E572C8 ADRP X0, 0x29C000
	0x03E572CC LDR X0, [X0 + 0x598]
	0x03E572D0 BL 0x1C16CF4
	0x03E572D4 MOVZ W8, 0x1
	0x03E572D8 STRB W8, [X20 + 0x8BA]
	0x03E572DC LDR X8, [X19 + 0x38]
	0x03E572E0 CBZ X8, 0x3E573D8
	0x03E572E4 ADRP X9, 0x29C000
	0x03E572E8 LDR X9, [X9 + 0x598]
	0x03E572EC LDR X20, [X8 + 0x40]
	0x03E572F0 LDR X0, [X9]
	0x03E572F4 LDR W9, [X0 + 0xE0]
	0x03E572F8 CBNZ W9, 0x3E57300
	0x03E572FC BL 0x1C16DFC
	0x03E57300 MOV X0, X20
	0x03E57304 MOV X1, X31
	0x03E57308 MOV X2, X31
	0x03E5730C BL 0x3C3883C
	0x03E57310 TBZ X0, 0x0, 0x3E57328
	0x03E57314 LDP X20, X19, [X31 + 0x20]
	0x03E57318 LDP X22, X21, [X31 + 0x10]
	0x03E5731C MOV W0, W31
	0x03E57320 LDR X30, [X31], #0x30
	0x03E57324 RET
	0x03E57328 LDR X8, [X19]
	0x03E5732C MOV X0, X19
	0x03E57330 LDR X9, [X8 + 0x268]
	0x03E57334 LDR X1, [X8 + 0x270]
	0x03E57338 BLR X9
	0x03E5733C LDR X8, [X19 + 0x38]
	0x03E57340 CBZ X8, 0x3E573D8
	0x03E57344 ADRP X21, 0x2C4000
	0x03E57348 LDR X21, [X21 + 0x9F8]
	0x03E5734C MOV X19, X0
	0x03E57350 LDR X20, [X8 + 0x40]
	0x03E57354 LDR X0, [X21]
	0x03E57358 LDR W9, [X0 + 0xE0]
	0x03E5735C CBNZ W9, 0x3E57364
	0x03E57360 BL 0x1C16DFC
	0x03E57364 ADRP X22, 0x58A000
	0x03E57368 LDRB W8, [X22 + 0x38F]
	0x03E5736C CBNZ W8, 0x3E57384
	0x03E57370 ADRP X0, 0x2C4000
	0x03E57374 LDR X0, [X0 + 0x9F8]
	0x03E57378 BL 0x1C16CF4
	0x03E5737C MOVZ W8, 0x1
	0x03E57380 STRB W8, [X22 + 0x38F]
	0x03E57384 LDR X0, [X21]
	0x03E57388 LDR W8, [X0 + 0xE0]
	0x03E5738C CBNZ W8, 0x3E57398
	0x03E57390 BL 0x1C16DFC
	0x03E57394 LDR X0, [X21]
	0x03E57398 ADRP X9, 0x2F2000
	0x03E5739C LDR X8, [X0 + 0xB8]
	0x03E573A0 LDR X9, [X9 + 0x430]
	0x03E573A4 MOV X0, X20
	0x03E573A8 MOV X1, X19
	0x03E573AC LDR X2, [X8 + 0x60]
	0x03E573B0 LDR X3, [X9]
	0x03E573B4 BL 0x21DD088
	0x03E573B8 CBZ X19, 0x3E573D8
	0x03E573BC LDR X8, [X19]
	0x03E573C0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x592000
	009 Move X19, 0x315000
	010 Move W8, [X21+2219]
	011 Move X19, [X19+3072]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {46}
	017 Move X0, 0x315000
	018 Move X0, [X0+3080]
	019 Call 0x1C17CF4
	020 Move X0, 0x315000
	021 Move X0, [X0+3088]
	022 Call 0x1C17CF4
	023 Move X0, 0x315000
	024 Move X0, [X0+3096]
	025 Call 0x1C17CF4
	026 Move X0, 0x315000
	027 Move X0, [X0+3104]
	028 Call 0x1C17CF4
	029 Move X0, 0x315000
	030 Move X0, [X0+3112]
	031 Call 0x1C17CF4
	032 Move X0, 0x315000
	033 Move X0, [X0+3120]
	034 Call 0x1C17CF4
	035 Move X0, 0x29D000
	036 Move X0, [X0+2288]
	037 Call 0x1C17CF4
	038 Move X0, 0x315000
	039 Move X0, [X0+3072]
	040 Call 0x1C17CF4
	041 Move X0, 0x315000
	042 Move X0, [X0+3128]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+2219], W8
	046 Move X21, 0x29D000
	047 Move X21, [X21+2288]
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move X0, X20
	050 Move X1, X31
	051 Move [X31+48], X31
	052 Move [X31+16], V0
	053 Move [X31+24], V0
	054 Move [X31+12], W31
	055 Call "il2cpp_vm_object_is_inst", X0
	056 Move X19, [X19]
	057 Compare X0, 0
	058 JumpIfEqual {64}
	059 Move X8, [X0]
	060 Move X9, [X8+360]
	061 Move X1, [X8+368]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X1, X0
	064 Move X1, X31
	065 Move X0, X19
	066 Move X2, X31
	067 Call String.Concat, X0, X1
	068 Move X8, [X21]
	069 Move X21, X0
	070 Move X0, X8
	071 Call 0x1C17F10
	072 Move X1, X21
	073 Move X2, X31
	074 Move X19, X0
	075 Call StringBuilder..ctor, X0, X1
	076 Compare X19, 0
	077 JumpIfEqual {143}
	078 Move X0, X19
	079 Move X1, X31
	080 Call StringBuilder.AppendLine, X0
	081 Move X0, [X20+88]
	082 Compare X0, 0
	083 JumpIfEqual {143}
	084 Move X8, 0x315000
	085 Move X8, [X8+3080]
	086 Move X22, 0x315000
	087 Move X23, 0x315000
	088 Move X21, 0x315000
	089 Move X1, [X8]
	090 Move X22, [X22+3096]
	091 Move X23, [X23+3128]
	092 Move X21, [X21+3088]
	093 Add X8, X31, 16
	094 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	095 Move X1, [X22]
	096 Add X0, X31, 16
	097 Call Enumerator<Int32, Object>.MoveNext, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {127}
	102 Move X20, [X31+40]
	103 Compare X20, 0
	104 JumpIfEqual {95}
	105 Move X8, [X31+32]
	106 Move [X31+12], W8
	107 Add X0, X31, 12
	108 Move X1, X31
	109 Call Int32.ToString, X0
	110 Move X1, X0
	111 Move X0, [X23]
	112 Move X2, X31
	113 Call String.Concat, X0, X1
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call StringBuilder.AppendLine, X0, X1
	118 Move X8, [X20]
	119 Move X9, [X8+360]
	120 Move X1, [X8+368]
	121 Move X0, X20
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X1, X0
	124 Move X0, X19
	125 Move X2, X31
	126 Call StringBuilder.AppendLine, X0, X1
	127 Move X1, [X21]
	128 Add X0, X31, 16
	129 Call Enumerator<Int32, Object>.Dispose, X0
	130 Move X8, [X19]
	131 Move X0, X19
	132 Move X9, [X8+360]
	133 Move X1, [X8+368]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X20, [X31+96]
	136 Move X19, [X31+104]
	137 Move X22, [X31+80]
	138 Move X21, [X31+88]
	139 Move X30, [X31+64]
	140 Move X23, [X31+72]
	141 Add X31, X31, 112
	142 Return X0
	143 Call 0x1C17F20
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Call 0x3EB2AD0
	146 Move X20, [X0]
	147 Call 0x3EB2AE0
	148 Move X1, [X21]
	149 Add X0, X31, 16
	150 Call Enumerator<Int32, Object>.Dispose, X0
	151 Compare X20, 0
	152 JumpIfEqual {130}
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Move X19, X0
	156 Move X20, X31
	157 Move X19, X0
	158 Move X1, [X21]
	159 Add X0, X31, 16
	160 Call Enumerator<Int32, Object>.Dispose, X0
	161 Compare X20, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X19
	164 Call 0x1D2D690
	165 Move X0, X20
	166 Call 0x1C17F18
	167 Call 0x1991590

Method: System.Void DeselectIfSelectionChanged(UnityEngine.GameObject currentOverGo, UnityEngine.EventSystems.BaseEventData pointerEvent)

Disassembly:
	0x03E573C4 LDP X20, X19, [X31 + 0x20]
	0x03E573C8 LDP X22, X21, [X31 + 0x10]
	0x03E573CC LDP X2, X1, [X8 + 0x198]
	0x03E573D0 LDR X30, [X31], #0x30
	0x03E573D4 BR X2
	0x03E573D8 BL 0x1C16F20
	0x03E573DC SUB X31, X31, 0x120
	0x03E573E0 STP X29, X30, [X31 + 0xF0]
	0x03E573E4 STP X22, X21, [X31 + 0x100]
	0x03E573E8 STP X20, X19, [X31 + 0x110]
	0x03E573EC ADD X8, X31, 0xA0
	0x03E573F0 MOVI V0.2D, 0x0
	0x03E573F4 MOV X19, X0
	0x03E573F8 STR W31, [X31 + 0xE0]
	0x03E573FC STRB W31, [X31 + 0x9C]
	0x03E57400 STP V0, V0, [X8 + 0x20]
	0x03E57404 STP V0, V0, [X8]
	0x03E57408 STRB W31, [X31 + 0x98]
	0x03E5740C BL 0x3E53F58
	0x03E57410 CBZ X0, 0x3E57510
	0x03E57414 MOV W20, W31
	0x03E57418 LDR X8, [X0]
	0x03E5741C LDR X9, [X8 + 0x308]
	0x03E57420 LDR X1, [X8 + 0x310]
	0x03E57424 BLR X9
	0x03E57428 MOV W21, W0
	0x03E5742C MOV X0, X19
	0x03E57430 BL 0x3E53F58
	0x03E57434 CBZ X0, 0x3E57510
	0x03E57438 CMP W20, W21
	0x03E5743C B.GE 0x3E57514
	0x03E57440 LDR X8, [X0]
	0x03E57444 MOV W1, W20
	0x03E57448 LDR X9, [X8 + 0x318]
	0x03E5744C LDR X2, [X8 + 0x320]
	0x03E57450 ADD X8, X31, 0x50
	0x03E57454 BLR X9
	0x03E57458 ADD X0, X31, 0xA0
	0x03E5745C ADD X1, X31, 0x50
	0x03E57460 MOVZ W2, 0x44
	0x03E57464 BL 0x3EB1AC0
	0x03E57468 ADD X0, X31, 0xA0
	0x03E5746C MOV X1, X31
	0x03E57470 BL 0x3C84608
	0x03E57474 CMP W0, 0x1
	0x03E57478 B.EQ 0x3E57500
	0x03E5747C ADD X0, X31, 0x8
	0x03E57480 ADD X1, X31, 0xA0
	0x03E57484 MOVZ W2, 0x44
	0x03E57488 BL 0x3EB1AC0
	0x03E5748C ADD X1, X31, 0x8
	0x03E57490 ADD X2, X31, 0x98
	0x03E57494 ADD X3, X31, 0x9C
	0x03E57498 MOV X0, X19
	0x03E5749C BL 0x3E553C8
	0x03E574A0 LDRB W22, [X31 + 0x9C]
	0x03E574A4 LDRB W2, [X31 + 0x98]
	0x03E574A8 MOV X21, X0
	0x03E574AC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x592000
	008 Move X22, 0x2C5000
	009 Move W8, [X23+2220]
	010 Move X22, [X22+2552]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2F3000
	019 Move X0, [X0+960]
	020 Call 0x1C17CF4
	021 Move X0, 0x2C5000
	022 Move X0, [X0+2552]
	023 Call 0x1C17CF4
	024 Move X0, 0x29D000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2220], W8
	029 Move X0, [X22]
	030 Move X22, 0x2F3000
	031 Move W8, [X0+224]
	032 Move X22, [X22+960]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X1, [X22]
	037 Move X0, X21
	038 Call 0x21DEB64, X0
	039 Move X8, [X20+56]
	040 Compare X8, 0
	041 JumpIfEqual {79}
	042 Move X9, 0x29D000
	043 Move X9, [X9+1432]
	044 Move X21, X0
	045 Move X22, [X8+64]
	046 Move X0, [X9]
	047 Move W9, [X0+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X22
	053 Move X2, X31
	054 Call Object.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {72}
	059 Move X0, [X20+56]
	060 Compare X0, 0
	061 JumpIfEqual {79}
	062 Move X2, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X1, X31
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Call EventSystem.SetSelectedGameObject, X0, X1, X2
	071 Return 
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03E574B0 MOV X1, X21
	0x03E574B4 MOV W3, W22
	0x03E574B8 BL 0x3E579BC
	0x03E574BC CBZ W22, 0x3E574D0
	0x03E574C0 MOV X0, X19
	0x03E574C4 MOV X1, X21
	0x03E574C8 BL 0x3E5536C
	0x03E574CC B 0x3E57500
	0x03E574D0 LDR X8, [X19]
	0x03E574D4 MOV X0, X19
	0x03E574D8 MOV X1, X21
	0x03E574DC LDR X9, [X8 + 0x308]
	0x03E574E0 LDR X2, [X8 + 0x310]
	0x03E574E4 BLR X9
	0x03E574E8 LDR X8, [X19]
	0x03E574EC MOV X0, X19
	0x03E574F0 MOV X1, X21
	0x03E574F4 LDR X9, [X8 + 0x318]
	0x03E574F8 LDR X2, [X8 + 0x320]
	0x03E574FC BLR X9
	0x03E57500 MOV X0, X19
	0x03E57504 ADD W20, W20, 0x1
	0x03E57508 BL 0x3E53F58
	0x03E5750C CBNZ X0, 0x3E57418
	0x03E57510 BL 0x1C16F20
	0x03E57514 LDR X8, [X0]
	0x03E57518 LDR X9, [X8 + 0x308]
	0x03E5751C LDR X1, [X8 + 0x310]
	0x03E57520 BLR X9
	0x03E57524 LDP X20, X19, [X31 + 0x110]
	0x03E57528 LDP X22, X21, [X31 + 0x100]
	0x03E5752C LDP X29, X30, [X31 + 0xF0]
	0x03E57530 CMP W0, 0x0
	0x03E57534 CSET W0, GT
	0x03E57538 ADD X31, X31, 0x120
	0x03E5753C RET
	0x03E57540 MOV W1, W31
	0x03E57544 B 0x3E5815C
	0x03E57548 STP D11, D10, [X31 - 0x50]!
	0x03E5754C STP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x592000
	008 Move X23, 0x306000
	009 Move X20, 0x306000
	010 Move X21, 0x315000
	011 Move W8, [X22+2221]
	012 Move X23, [X23+3128]
	013 Move X20, [X20+3136]
	014 Move X21, [X21+3136]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x306000
	021 Move X0, [X0+3136]
	022 Call 0x1C17CF4
	023 Move X0, 0x306000
	024 Move X0, [X0+3128]
	025 Call 0x1C17CF4
	026 Move X0, 0x315000
	027 Move X0, [X0+3136]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2221], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X1, [X20]
	034 Move X20, X0
	035 Call Dictionary`2<Int32, Object>..ctor, X0
	036 Move [X19+88], X20
	037 Move X0, [X21]
	038 Call 0x1C17F10
	039 Move X20, X0
	040 Call MouseState..ctor, X0
	041 Move [X19+96], X20
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call BaseInputModule..ctor, X0
	050 Return 

