Type: UnityEngine.EventSystems.StandaloneInputModule

Method: System.Void .ctor()

Disassembly:
	0x03E5792C LDR X21, [X21 + 0x9F8]
	0x03E57930 LDR X20, [X8 + 0x40]
	0x03E57934 LDR X0, [X21]
	0x03E57938 LDR W9, [X0 + 0xE0]
	0x03E5793C CBNZ W9, 0x3E57944
	0x03E57940 BL 0x1C16DFC
	0x03E57944 ADRP X22, 0x58A000
	0x03E57948 LDRB W8, [X22 + 0x391]
	0x03E5794C CBNZ W8, 0x3E57964
	0x03E57950 ADRP X0, 0x2C4000
	0x03E57954 LDR X0, [X0 + 0x9F8]
	0x03E57958 BL 0x1C16CF4
	0x03E5795C MOVZ W8, 0x1
	0x03E57960 STRB W8, [X22 + 0x391]
	0x03E57964 LDR X0, [X21]
	0x03E57968 LDR W8, [X0 + 0xE0]
	0x03E5796C CBNZ W8, 0x3E57978
	0x03E57970 BL 0x1C16DFC
	0x03E57974 LDR X0, [X21]
	0x03E57978 ADRP X9, 0x2F2000
	0x03E5797C LDR X8, [X0 + 0xB8]
	0x03E57980 LDR X9, [X9 + 0x418]
	0x03E57984 MOV X0, X20
	0x03E57988 MOV X1, X19
	0x03E5798C LDR X2, [X8 + 0x88]
	0x03E57990 LDR X3, [X9]
	0x03E57994 BL 0x21DD088
	0x03E57998 CBZ X19, 0x3E579B8
	0x03E5799C LDR X8, [X19]
	0x03E579A0 MOV X0, X19
	0x03E579A4 LDP X20, X19, [X31 + 0x20]
	0x03E579A8 LDP X22, X21, [X31 + 0x10]
	0x03E579AC LDP X2, X1, [X8 + 0x198]
	0x03E579B0 LDP X30, X23, [X31], #0x30
	0x03E579B4 BR X2
	0x03E579B8 BL 0x1C16F20
	0x03E579BC STP D9, D8, [X31 - 0x60]!
	0x03E579C0 STP X30, X27, [X31 + 0x10]
	0x03E579C4 STP X26, X25, [X31 + 0x20]
	0x03E579C8 STP X24, X23, [X31 + 0x30]
	0x03E579CC STP X22, X21, [X31 + 0x40]
	0x03E579D0 STP X20, X19, [X31 + 0x50]
	0x03E579D4 ADRP X21, 0x591000
	0x03E579D8 LDRB W8, [X21 + 0x8B6]
	0x03E579DC MOV W22, W3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x592000
	009 Move X24, 0x2F0000
	010 Move X22, 0x2F0000
	011 Move X21, 0x2F0000
	012 Move X20, 0x2E1000
	013 Move W8, [X23+2226]
	014 Move X24, [X24+2800]
	015 Move X22, [X22+2752]
	016 Move X21, [X21+2744]
	017 Move X20, [X20+2824]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x2F0000
	024 Move X0, [X0+2744]
	025 Call 0x1C17CF4
	026 Move X0, 0x2F0000
	027 Move X0, [X0+2752]
	028 Call 0x1C17CF4
	029 Move X0, 0x2F0000
	030 Move X0, [X0+2800]
	031 Call 0x1C17CF4
	032 Move X0, 0x2E1000
	033 Move X0, [X0+2824]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2226], W8
	037 Move X9, [X24]
	038 Move X8, [X22]
	039 Move X0, X19
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move [X19+152], X9
	043 Move [X19+160], X8
	044 Move X9, -53907456
	045 Move X10, [X21]
	046 Move X8, [X20]
	047 Move V0, [X9+3488]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move [X19+168], X10
	051 Move [X19+176], X8
	052 Move [X19+184], D0
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X30, [X31+64]
	056 Call PointerInputModule..ctor, X0
	057 Return 

Method: UnityEngine.EventSystems.StandaloneInputModule/InputMode get_inputMode()

Disassembly:
	0x03E579E0 MOV W23, W2
	0x03E579E4 MOV X19, X1

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_allowActivationOnMobileDevice()

Disassembly:
	0x03E579E8 MOV X20, X0
	0x03E579EC TBNZ X8, 0x0, 0x3E57A7C

ISIL:
	001 Move W0, [X0+192]
	002 Return X0

Method: System.Void set_allowActivationOnMobileDevice(System.Boolean value)

Disassembly:
	0x03E579F0 ADRP X0, 0x2F2000
	0x03E579F4 LDR X0, [X0 + 0x380]
	0x03E579F8 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+192], W8
	003 Return 

Method: System.Boolean get_forceModuleActive()

Disassembly:
	0x03E579FC ADRP X0, 0x2F2000
	0x03E57A00 LDR X0, [X0 + 0x388]

ISIL:
	001 Move W0, [X0+192]
	002 Return X0

Method: System.Void set_forceModuleActive(System.Boolean value)

Disassembly:
	0x03E57A04 BL 0x1C16CF4
	0x03E57A08 ADRP X0, 0x314000
	0x03E57A0C LDR X0, [X0 + 0xC80]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+192], W8
	003 Return 

Method: System.Single get_inputActionsPerSecond()

Disassembly:
	0x03E57A10 BL 0x1C16CF4
	0x03E57A14 ADRP X0, 0x2F2000

ISIL:
	001 Move V0, [X0+184]
	002 Return V0

Method: System.Void set_inputActionsPerSecond(System.Single value)

Disassembly:
	0x03E57A18 LDR X0, [X0 + 0x390]
	0x03E57A1C BL 0x1C16CF4

ISIL:
	001 Move [X0+184], S0
	002 Return 

Method: System.Single get_repeatDelay()

Disassembly:
	0x03E57A20 ADRP X0, 0x2F2000
	0x03E57A24 LDR X0, [X0 + 0x398]

ISIL:
	001 Move V0, [X0+188]
	002 Return V0

Method: System.Void set_repeatDelay(System.Single value)

Disassembly:
	0x03E57A28 BL 0x1C16CF4
	0x03E57A2C ADRP X0, 0x2F2000

ISIL:
	001 Move [X0+188], S0
	002 Return 

Method: System.String get_horizontalAxis()

Disassembly:
	0x03E57A30 LDR X0, [X0 + 0x3A0]
	0x03E57A34 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_horizontalAxis(System.String value)

Disassembly:
	0x03E57A38 ADRP X0, 0x2F2000
	0x03E57A3C LDR X0, [X0 + 0x3A8]

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: System.String get_verticalAxis()

Disassembly:
	0x03E57A40 BL 0x1C16CF4
	0x03E57A44 ADRP X0, 0x2F2000

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_verticalAxis(System.String value)

Disassembly:
	0x03E57A48 LDR X0, [X0 + 0x3B0]
	0x03E57A4C BL 0x1C16CF4

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: System.String get_submitButton()

Disassembly:
	0x03E57A50 ADRP X0, 0x2F2000
	0x03E57A54 LDR X0, [X0 + 0x3B8]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_submitButton(System.String value)

Disassembly:
	0x03E57A58 BL 0x1C16CF4
	0x03E57A5C ADRP X0, 0x2C4000

ISIL:
	001 Move [X0+168], X1
	002 Return 

Method: System.String get_cancelButton()

Disassembly:
	0x03E57A60 LDR X0, [X0 + 0x9F8]
	0x03E57A64 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_cancelButton(System.String value)

Disassembly:
	0x03E57A68 ADRP X0, 0x29C000
	0x03E57A6C LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Boolean ShouldIgnoreEventsOnNoFocus()

Disassembly:
	0x03E57A70 BL 0x1C16CF4
	0x03E57A74 MOVZ W8, 0x1

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void UpdateModule()

Disassembly:
	0x03E57A78 STRB W8, [X21 + 0x8B6]
	0x03E57A7C CBZ X19, 0x3E5804C
	0x03E57A80 LDR X21, [X19 + 0x50]
	0x03E57A84 TBZ X23, 0x0, 0x3E57D44
	0x03E57A88 MOVZ W24, 0x1
	0x03E57A8C STRB W24, [X19 + 0xF8]
	0x03E57A90 ADRP X25, 0x582000
	0x03E57A94 LDRB W8, [X25 + 0x78F]
	0x03E57A98 ADD X23, X19, 0x104
	0x03E57A9C CBNZ W8, 0x3E57AB0
	0x03E57AA0 ADRP X0, 0x2A4000
	0x03E57AA4 LDR X0, [X0 + 0xF08]
	0x03E57AA8 BL 0x1C16CF4
	0x03E57AAC STRB W24, [X25 + 0x78F]
	0x03E57AB0 ADRP X8, 0x2A4000
	0x03E57AB4 LDR X8, [X8 + 0xF08]
	0x03E57AB8 ADD X1, X19, 0x50
	0x03E57ABC ADD X0, X19, 0xA0
	0x03E57AC0 MOVZ W2, 0x50
	0x03E57AC4 LDR X8, [X8]
	0x03E57AC8 LDR X8, [X8 + 0xB8]
	0x03E57ACC LDR V1, [X8]
	0x03E57AD0 STRH W24, [X19 + 0x144]
	0x03E57AD4 LDR V0, [X23]
	0x03E57AD8 STP D1, D0, [X23 + 0x8]
	0x03E57ADC BL 0x3EB1AC0
	0x03E57AE0 MOV X0, X20
	0x03E57AE4 MOV X1, X21
	0x03E57AE8 MOV X2, X19
	0x03E57AEC BL 0x3E563C4
	0x03E57AF0 ADRP X27, 0x29C000
	0x03E57AF4 LDR X27, [X27 + 0x598]
	0x03E57AF8 LDR X23, [X19 + 0x20]
	0x03E57AFC LDR X0, [X27]
	0x03E57B00 LDR W8, [X0 + 0xE0]
	0x03E57B04 CBNZ W8, 0x3E57B0C
	0x03E57B08 BL 0x1C16DFC
	0x03E57B0C MOV X0, X23
	0x03E57B10 MOV X1, X21
	0x03E57B14 MOV X2, X31
	0x03E57B18 BL 0x3C354F8
	0x03E57B1C TBZ X0, 0x0, 0x3E57B34
	0x03E57B20 MOV X0, X20
	0x03E57B24 MOV X1, X19
	0x03E57B28 MOV X2, X21
	0x03E57B2C BL 0x3E54524
	0x03E57B30 STR X21, [X19 + 0x20]
	0x03E57B34 MOV X0, X31
	0x03E57B38 BL 0x3C3C764
	0x03E57B3C LDR V1, [X19 + 0x134]
	0x03E57B40 ADRP X8, 0xFFFFFFFFFCC93000
	0x03E57B44 LDR V9, [X8 + 0x44C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x592000
	005 Move W8, [X20+2227]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x29D000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2227], W8
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfEqual {67}
	019 Move W8, [X8+72]
	020 Compare W8, 0
	021 JumpIfEqual {34}
	022 Move X8, [X19+128]
	023 Move X0, X19
	024 Move [X19+120], X8
	025 Call BaseInputModule.get_input, X0
	026 Compare X0, 0
	027 JumpIfEqual {67}
	028 Move X8, [X0]
	029 Move X9, [X8+728]
	030 Move X1, [X8+736]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move [X19+128], S0
	033 Move [X19+136], S1
	034 Move X8, [X19+144]
	035 Compare X8, 0
	036 JumpIfEqual {62}
	037 Move X9, 0x29D000
	038 Move X9, [X9+1432]
	039 Move X20, [X8+64]
	040 Move X0, [X9]
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {62}
	053 Move X1, [X19+144]
	054 Compare X1, 0
	055 JumpIfEqual {67}
	056 Move W8, [X1+325]
	057 Compare W8, 0
	058 JumpIfEqual {62}
	059 Move X2, [X1+80]
	060 Move X0, X19
	061 Call StandaloneInputModule.ReleaseMouse, X0, X1, X2
	062 Move [X19+144], X31
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void ReleaseMouse(UnityEngine.EventSystems.PointerEventData pointerEvent, UnityEngine.GameObject currentOverGo)

Disassembly:
	0x03E57B48 FSUB S0, S0, S1
	0x03E57B4C FCMP S0, S9
	0x03E57B50 B.LT 0x3E57B58
	0x03E57B54 STR W31, [X19 + 0x138]
	0x03E57B58 ADRP X26, 0x2C4000
	0x03E57B5C LDR X26, [X26 + 0x9F8]
	0x03E57B60 LDR X0, [X26]
	0x03E57B64 LDR W8, [X0 + 0xE0]
	0x03E57B68 CBNZ W8, 0x3E57B70
	0x03E57B6C BL 0x1C16DFC
	0x03E57B70 ADRP X23, 0x58A000
	0x03E57B74 LDRB W8, [X23 + 0x386]
	0x03E57B78 CBNZ W8, 0x3E57B90
	0x03E57B7C ADRP X0, 0x2C4000
	0x03E57B80 LDR X0, [X0 + 0x9F8]
	0x03E57B84 BL 0x1C16CF4
	0x03E57B88 MOVZ W8, 0x1
	0x03E57B8C STRB W8, [X23 + 0x386]
	0x03E57B90 LDR X0, [X26]
	0x03E57B94 LDR W8, [X0 + 0xE0]
	0x03E57B98 CBNZ W8, 0x3E57BA4
	0x03E57B9C BL 0x1C16DFC
	0x03E57BA0 LDR X0, [X26]
	0x03E57BA4 ADRP X9, 0x2F2000
	0x03E57BA8 LDR X8, [X0 + 0xB8]
	0x03E57BAC LDR X9, [X9 + 0x388]
	0x03E57BB0 MOV X0, X21
	0x03E57BB4 MOV X1, X19
	0x03E57BB8 LDR X2, [X8 + 0x18]
	0x03E57BBC LDR X3, [X9]
	0x03E57BC0 BL 0x21DD8A8
	0x03E57BC4 ADRP X8, 0x2F2000
	0x03E57BC8 LDR X8, [X8 + 0x3B8]
	0x03E57BCC MOV X24, X0
	0x03E57BD0 MOV X0, X21
	0x03E57BD4 LDR X1, [X8]
	0x03E57BD8 BL 0x21DDB64
	0x03E57BDC LDR X8, [X27]
	0x03E57BE0 MOV X23, X0
	0x03E57BE4 LDR W9, [X8 + 0xE0]
	0x03E57BE8 CBNZ W9, 0x3E57BF4
	0x03E57BEC MOV X0, X8
	0x03E57BF0 BL 0x1C16DFC
	0x03E57BF4 MOV X0, X24
	0x03E57BF8 MOV X1, X31
	0x03E57BFC MOV X2, X31
	0x03E57C00 BL 0x3C3883C
	0x03E57C04 ANDS W31, W0, 0x1
	0x03E57C08 MOV X0, X31
	0x03E57C0C CSEL X24, X23, X24, NE
	0x03E57C10 BL 0x3C3C764
	0x03E57C14 LDR X0, [X27]
	0x03E57C18 LDR X25, [X19 + 0x30]
	0x03E57C1C MOV V8.16B, V0.16B
	0x03E57C20 LDR W8, [X0 + 0xE0]
	0x03E57C24 CBNZ W8, 0x3E57C2C
	0x03E57C28 BL 0x1C16DFC
	0x03E57C2C MOV X0, X24
	0x03E57C30 MOV X1, X25
	0x03E57C34 MOV X2, X31
	0x03E57C38 BL 0x3C3883C
	0x03E57C3C TBZ X0, 0x0, 0x3E57C5C
	0x03E57C40 LDR V0, [X19 + 0x134]
	0x03E57C44 FSUB S0, S8, S0
	0x03E57C48 FCMP S0, S9
	0x03E57C4C B.PL 0x3E57C68
	0x03E57C50 LDR W8, [X19 + 0x138]
	0x03E57C54 ADD W8, W8, 0x1
	0x03E57C58 B 0x3E57C6C
	0x03E57C5C MOVZ W8, 0x1
	0x03E57C60 STR W8, [X19 + 0x138]
	0x03E57C64 B 0x3E57C74
	0x03E57C68 MOVZ W8, 0x1
	0x03E57C6C STR W8, [X19 + 0x138]
	0x03E57C70 STR S8, [X19 + 0x134]
	0x03E57C74 MOV X0, X19
	0x03E57C78 MOV X1, X24
	0x03E57C7C BL 0x3E4F3AC
	0x03E57C80 STR X21, [X19 + 0x38]
	0x03E57C84 STR X23, [X19 + 0x48]
	0x03E57C88 STR S8, [X19 + 0x134]
	0x03E57C8C LDR X0, [X26]
	0x03E57C90 LDR W8, [X0 + 0xE0]
	0x03E57C94 CBNZ W8, 0x3E57C9C
	0x03E57C98 BL 0x1C16DFC
	0x03E57C9C ADRP X8, 0x2F2000
	0x03E57CA0 LDR X8, [X8 + 0x3B0]
	0x03E57CA4 MOV X0, X21
	0x03E57CA8 LDR X1, [X8]
	0x03E57CAC BL 0x21DDB64
	0x03E57CB0 STR X0, [X19 + 0x40]
	0x03E57CB4 MOV X23, X0
	0x03E57CB8 LDR X0, [X27]
	0x03E57CBC LDR W8, [X0 + 0xE0]
	0x03E57CC0 CBNZ W8, 0x3E57CC8
	0x03E57CC4 BL 0x1C16DFC
	0x03E57CC8 MOV X0, X23
	0x03E57CCC MOV X1, X31
	0x03E57CD0 MOV X2, X31
	0x03E57CD4 BL 0x3C354F8
	0x03E57CD8 TBZ X0, 0x0, 0x3E57D44
	0x03E57CDC LDR X0, [X26]
	0x03E57CE0 LDR X23, [X19 + 0x40]
	0x03E57CE4 LDR W8, [X0 + 0xE0]
	0x03E57CE8 CBNZ W8, 0x3E57CF0
	0x03E57CEC BL 0x1C16DFC
	0x03E57CF0 ADRP X24, 0x58A000
	0x03E57CF4 LDRB W8, [X24 + 0x387]
	0x03E57CF8 CBNZ W8, 0x3E57D10
	0x03E57CFC ADRP X0, 0x2C4000
	0x03E57D00 LDR X0, [X0 + 0x9F8]
	0x03E57D04 BL 0x1C16CF4
	0x03E57D08 MOVZ W8, 0x1
	0x03E57D0C STRB W8, [X24 + 0x387]
	0x03E57D10 LDR X0, [X26]
	0x03E57D14 LDR W8, [X0 + 0xE0]
	0x03E57D18 CBNZ W8, 0x3E57D24
	0x03E57D1C BL 0x1C16DFC
	0x03E57D20 LDR X0, [X26]
	0x03E57D24 ADRP X9, 0x2F2000
	0x03E57D28 LDR X8, [X0 + 0xB8]
	0x03E57D2C LDR X9, [X9 + 0x398]
	0x03E57D30 MOV X0, X23
	0x03E57D34 MOV X1, X19
	0x03E57D38 LDR X2, [X8 + 0x30]
	0x03E57D3C LDR X3, [X9]
	0x03E57D40 BL 0x21DD088
	0x03E57D44 TBZ X22, 0x0, 0x3E5802C
	0x03E57D48 ADRP X24, 0x2C4000
	0x03E57D4C LDR X24, [X24 + 0x9F8]
	0x03E57D50 LDR X22, [X19 + 0x28]
	0x03E57D54 LDR X0, [X24]
	0x03E57D58 LDR W8, [X0 + 0xE0]
	0x03E57D5C CBNZ W8, 0x3E57D64
	0x03E57D60 BL 0x1C16DFC
	0x03E57D64 ADRP X23, 0x58A000
	0x03E57D68 LDRB W8, [X23 + 0x388]
	0x03E57D6C CBNZ W8, 0x3E57D84
	0x03E57D70 ADRP X0, 0x2C4000
	0x03E57D74 LDR X0, [X0 + 0x9F8]
	0x03E57D78 BL 0x1C16CF4
	0x03E57D7C MOVZ W8, 0x1
	0x03E57D80 STRB W8, [X23 + 0x388]
	0x03E57D84 LDR X0, [X24]
	0x03E57D88 LDR W8, [X0 + 0xE0]
	0x03E57D8C CBNZ W8, 0x3E57D98
	0x03E57D90 BL 0x1C16DFC
	0x03E57D94 LDR X0, [X24]
	0x03E57D98 ADRP X9, 0x2F2000
	0x03E57D9C LDR X8, [X0 + 0xB8]
	0x03E57DA0 LDR X9, [X9 + 0x3A8]
	0x03E57DA4 MOV X0, X22
	0x03E57DA8 MOV X1, X19
	0x03E57DAC LDR X2, [X8 + 0x20]
	0x03E57DB0 LDR X3, [X9]
	0x03E57DB4 BL 0x21DD088
	0x03E57DB8 ADRP X8, 0x2F2000
	0x03E57DBC LDR X8, [X8 + 0x3B8]
	0x03E57DC0 MOV X0, X21
	0x03E57DC4 LDR X1, [X8]
	0x03E57DC8 BL 0x21DDB64
	0x03E57DCC ADRP X25, 0x29C000
	0x03E57DD0 LDR X25, [X25 + 0x598]
	0x03E57DD4 LDR X23, [X19 + 0x48]
	0x03E57DD8 MOV X22, X0
	0x03E57DDC LDR X8, [X25]
	0x03E57DE0 LDR W9, [X8 + 0xE0]
	0x03E57DE4 CBNZ W9, 0x3E57DF0
	0x03E57DE8 MOV X0, X8
	0x03E57DEC BL 0x1C16DFC
	0x03E57DF0 MOV X0, X23
	0x03E57DF4 MOV X1, X22
	0x03E57DF8 MOV X2, X31
	0x03E57DFC BL 0x3C3883C
	0x03E57E00 TBZ X0, 0x0, 0x3E57E74
	0x03E57E04 LDRB W8, [X19 + 0xF8]
	0x03E57E08 CBZ W8, 0x3E57E74
	0x03E57E0C LDR X0, [X24]
	0x03E57E10 LDR X22, [X19 + 0x48]
	0x03E57E14 LDR W8, [X0 + 0xE0]
	0x03E57E18 CBNZ W8, 0x3E57E20
	0x03E57E1C BL 0x1C16DFC
	0x03E57E20 ADRP X23, 0x58A000
	0x03E57E24 LDRB W8, [X23 + 0x389]
	0x03E57E28 CBNZ W8, 0x3E57E40
	0x03E57E2C ADRP X0, 0x2C4000
	0x03E57E30 LDR X0, [X0 + 0x9F8]
	0x03E57E34 BL 0x1C16CF4
	0x03E57E38 MOVZ W8, 0x1
	0x03E57E3C STRB W8, [X23 + 0x389]
	0x03E57E40 LDR X0, [X24]
	0x03E57E44 LDR W8, [X0 + 0xE0]
	0x03E57E48 CBNZ W8, 0x3E57E54
	0x03E57E4C BL 0x1C16DFC
	0x03E57E50 LDR X0, [X24]
	0x03E57E54 ADRP X9, 0x2F2000
	0x03E57E58 LDR X8, [X0 + 0xB8]
	0x03E57E5C LDR X9, [X9 + 0x3A0]
	0x03E57E60 MOV X0, X22
	0x03E57E64 MOV X1, X19
	0x03E57E68 LDR X2, [X8 + 0x28]
	0x03E57E6C LDR X3, [X9]
	0x03E57E70 BL 0x21DD088
	0x03E57E74 LDR X0, [X25]
	0x03E57E78 LDR X22, [X19 + 0x40]
	0x03E57E7C LDR W8, [X0 + 0xE0]
	0x03E57E80 CBNZ W8, 0x3E57E88
	0x03E57E84 BL 0x1C16DFC
	0x03E57E88 MOV X0, X22
	0x03E57E8C MOV X1, X31
	0x03E57E90 MOV X2, X31
	0x03E57E94 BL 0x3C354F8
	0x03E57E98 TBZ X0, 0x0, 0x3E57F08
	0x03E57E9C LDRB W8, [X19 + 0x145]
	0x03E57EA0 CBZ W8, 0x3E57F08
	0x03E57EA4 LDR X0, [X24]
	0x03E57EA8 LDR W8, [X0 + 0xE0]
	0x03E57EAC CBNZ W8, 0x3E57EB4
	0x03E57EB0 BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x592000
	011 Move W8, [X22+2228]
	012 Move X20, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x2F3000
	020 Move X0, [X0+896]
	021 Call 0x1C17CF4
	022 Move X0, 0x2F3000
	023 Move X0, [X0+912]
	024 Call 0x1C17CF4
	025 Move X0, 0x2F3000
	026 Move X0, [X0+928]
	027 Call 0x1C17CF4
	028 Move X0, 0x2F3000
	029 Move X0, [X0+936]
	030 Call 0x1C17CF4
	031 Move X0, 0x2F3000
	032 Move X0, [X0+952]
	033 Call 0x1C17CF4
	034 Move X0, 0x2C5000
	035 Move X0, [X0+2552]
	036 Call 0x1C17CF4
	037 Move X0, 0x29D000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2228], W8
	042 Compare X19, 0
	043 JumpIfEqual {262}
	044 Move X24, 0x2C5000
	045 Move X24, [X24+2552]
	046 Move X22, [X19+40]
	047 Move X0, [X24]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X23, 0x58B000
	053 Move W8, [X23+904]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x2C5000
	057 Move X0, [X0+2552]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+904], W8
	061 Move X0, [X24]
	062 Move X26, 0x2F3000
	063 Move X23, 0x2F3000
	064 Move X25, 0x29D000
	065 Move W8, [X0+224]
	066 Move X26, [X26+936]
	067 Move X23, [X23+952]
	068 Move X25, [X25+1432]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X24]
	073 Move X8, [X0+184]
	074 Move X3, [X26]
	075 Move X0, X22
	076 Move X1, X19
	077 Move X2, [X8+32]
	078 Call 0x21DE088, X0, X1, X2
	079 Move X1, [X23]
	080 Move X0, X20
	081 Call 0x21DEB64, X0
	082 Move X8, [X25]
	083 Move X23, [X19+72]
	084 Move X22, X0
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X0, X23
	091 Move X1, X22
	092 Move X2, X31
	093 Call Object.op_Equality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {130}
	098 Move W8, [X19+248]
	099 Compare W8, 0
	100 JumpIfEqual {130}
	101 Move X0, [X24]
	102 Move X22, [X19+72]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X23, 0x58B000
	108 Move W8, [X23+905]
	109 Compare W8, 0
	110 JumpIfNotEqual {116}
	111 Move X0, 0x2C5000
	112 Move X0, [X0+2552]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X23+905], W8
	116 Move X0, [X24]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X24]
	122 Move X9, 0x2F3000
	123 Move X8, [X0+184]
	124 Move X9, [X9+928]
	125 Move X0, X22
	126 Move X1, X19
	127 Move X2, [X8+40]
	128 Move X3, [X9]
	129 Call 0x21DE088, X0, X1, X2
	130 Move X0, [X25]
	131 Move X22, [X19+64]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X22
	137 Move X1, X31
	138 Move X2, X31
	139 Call Object.op_Inequality, X0, X1
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {175}
	144 Move W8, [X19+325]
	145 Compare W8, 0
	146 JumpIfEqual {175}
	147 Move X0, [X24]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X22, 0x58B000
	153 Move W8, [X22+906]
	154 Compare W8, 0
	155 JumpIfNotEqual {161}
	156 Move X0, 0x2C5000
	157 Move X0, [X0+2552]
	158 Call 0x1C17CF4
	159 Move W8, 1
	160 Move [X22+906], W8
	161 Move X0, [X24]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {167}
	165 Call 0x1C17DFC
	166 Move X0, [X24]
	167 Move X9, 0x2F3000
	168 Move X8, [X0+184]
	169 Move X9, [X9+896]
	170 Move X0, X20
	171 Move X1, X19
	172 Move X2, [X8+80]
	173 Move X3, [X9]
	174 Call 0x21DE8A8, X0, X1, X2
	175 Move X0, X19
	176 Move X1, X31
	177 Move [X19+248], W31
	178 Call PointerEventData.set_pointerPress, X0, X1
	179 Move [X19+56], X31
	180 Move [X19+72], X31
	181 Move X0, [X25]
	182 Move X22, [X19+64]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X0, X22
	188 Move X1, X31
	189 Move X2, X31
	190 Call Object.op_Inequality, X0, X1
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {227}
	195 Move W8, [X19+325]
	196 Compare W8, 0
	197 JumpIfEqual {227}
	198 Move X0, [X24]
	199 Move X22, [X19+64]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X23, 0x58B000
	205 Move W8, [X23+907]
	206 Compare W8, 0
	207 JumpIfNotEqual {213}
	208 Move X0, 0x2C5000
	209 Move X0, [X0+2552]
	210 Call 0x1C17CF4
	211 Move W8, 1
	212 Move [X23+907], W8
	213 Move X0, [X24]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {219}
	217 Call 0x1C17DFC
	218 Move X0, [X24]
	219 Move X9, 0x2F3000
	220 Move X8, [X0+184]
	221 Move X9, [X9+912]
	222 Move X0, X22
	223 Move X1, X19
	224 Move X2, [X8+72]
	225 Move X3, [X9]
	226 Call 0x21DE088, X0, X1, X2
	227 Move [X19+325], W31
	228 Move [X19+64], X31
	229 Move X0, [X25]
	230 Move X22, [X19+32]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X0, X20
	236 Move X1, X22
	237 Move X2, X31
	238 Call Object.op_Inequality, X0, X1
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {251}
	243 Move X0, X21
	244 Move X1, X19
	245 Move X2, X31
	246 Call BaseInputModule.HandlePointerExitAndEnter, X0, X1, X2
	247 Move X0, X21
	248 Move X1, X19
	249 Move X2, X20
	250 Call BaseInputModule.HandlePointerExitAndEnter, X0, X1, X2
	251 Move [X21+144], X19
	252 Move X20, [X31+64]
	253 Move X19, [X31+72]
	254 Move X22, [X31+48]
	255 Move X21, [X31+56]
	256 Move X24, [X31+32]
	257 Move X23, [X31+40]
	258 Move X26, [X31+16]
	259 Move X25, [X31+24]
	260 Move X30, [X31+80]
	261 Return 
	262 Call 0x1C17F20

Method: System.Boolean ShouldActivateModule()

Disassembly:
	0x03E57EB4 ADRP X22, 0x58A000
	0x03E57EB8 LDRB W8, [X22 + 0x38A]
	0x03E57EBC CBNZ W8, 0x3E57ED4
	0x03E57EC0 ADRP X0, 0x2C4000
	0x03E57EC4 LDR X0, [X0 + 0x9F8]
	0x03E57EC8 BL 0x1C16CF4
	0x03E57ECC MOVZ W8, 0x1
	0x03E57ED0 STRB W8, [X22 + 0x38A]
	0x03E57ED4 LDR X0, [X24]
	0x03E57ED8 LDR W8, [X0 + 0xE0]
	0x03E57EDC CBNZ W8, 0x3E57EE8
	0x03E57EE0 BL 0x1C16DFC
	0x03E57EE4 LDR X0, [X24]
	0x03E57EE8 ADRP X9, 0x2F2000
	0x03E57EEC LDR X8, [X0 + 0xB8]
	0x03E57EF0 LDR X9, [X9 + 0x380]
	0x03E57EF4 MOV X0, X21
	0x03E57EF8 MOV X1, X19
	0x03E57EFC LDR X2, [X8 + 0x50]
	0x03E57F00 LDR X3, [X9]
	0x03E57F04 BL 0x21DD8A8
	0x03E57F08 MOV X0, X19
	0x03E57F0C MOV X1, X31
	0x03E57F10 STRB W31, [X19 + 0xF8]
	0x03E57F14 BL 0x3E4F3AC
	0x03E57F18 STR X31, [X19 + 0x38]
	0x03E57F1C STR X31, [X19 + 0x48]
	0x03E57F20 LDR X0, [X25]
	0x03E57F24 LDR X21, [X19 + 0x40]
	0x03E57F28 LDR W8, [X0 + 0xE0]
	0x03E57F2C CBNZ W8, 0x3E57F34
	0x03E57F30 BL 0x1C16DFC
	0x03E57F34 MOV X0, X21
	0x03E57F38 MOV X1, X31
	0x03E57F3C MOV X2, X31
	0x03E57F40 BL 0x3C354F8
	0x03E57F44 TBZ X0, 0x0, 0x3E57FB8
	0x03E57F48 LDRB W8, [X19 + 0x145]
	0x03E57F4C CBZ W8, 0x3E57FB8
	0x03E57F50 LDR X0, [X24]
	0x03E57F54 LDR X21, [X19 + 0x40]
	0x03E57F58 LDR W8, [X0 + 0xE0]
	0x03E57F5C CBNZ W8, 0x3E57F64
	0x03E57F60 BL 0x1C16DFC
	0x03E57F64 ADRP X22, 0x58A000
	0x03E57F68 LDRB W8, [X22 + 0x38B]
	0x03E57F6C CBNZ W8, 0x3E57F84
	0x03E57F70 ADRP X0, 0x2C4000
	0x03E57F74 LDR X0, [X0 + 0x9F8]
	0x03E57F78 BL 0x1C16CF4
	0x03E57F7C MOVZ W8, 0x1
	0x03E57F80 STRB W8, [X22 + 0x38B]
	0x03E57F84 LDR X0, [X24]
	0x03E57F88 LDR W8, [X0 + 0xE0]
	0x03E57F8C CBNZ W8, 0x3E57F98
	0x03E57F90 BL 0x1C16DFC
	0x03E57F94 LDR X0, [X24]
	0x03E57F98 ADRP X9, 0x2F2000
	0x03E57F9C LDR X8, [X0 + 0xB8]
	0x03E57FA0 LDR X9, [X9 + 0x390]
	0x03E57FA4 MOV X0, X21
	0x03E57FA8 MOV X1, X19
	0x03E57FAC LDR X2, [X8 + 0x48]
	0x03E57FB0 LDR X3, [X9]
	0x03E57FB4 BL 0x21DD088
	0x03E57FB8 STRB W31, [X19 + 0x145]
	0x03E57FBC STR X31, [X19 + 0x40]
	0x03E57FC0 LDR X0, [X24]
	0x03E57FC4 LDR X21, [X19 + 0x20]
	0x03E57FC8 LDR W8, [X0 + 0xE0]
	0x03E57FCC CBNZ W8, 0x3E57FD4
	0x03E57FD0 BL 0x1C16DFC
	0x03E57FD4 ADRP X22, 0x58A000
	0x03E57FD8 LDRB W8, [X22 + 0x384]
	0x03E57FDC CBNZ W8, 0x3E57FF4
	0x03E57FE0 ADRP X0, 0x2C4000
	0x03E57FE4 LDR X0, [X0 + 0x9F8]
	0x03E57FE8 BL 0x1C16CF4
	0x03E57FEC MOVZ W8, 0x1
	0x03E57FF0 STRB W8, [X22 + 0x384]
	0x03E57FF4 LDR X0, [X24]
	0x03E57FF8 LDR W8, [X0 + 0xE0]
	0x03E57FFC CBNZ W8, 0x3E58008
	0x03E58000 BL 0x1C16DFC
	0x03E58004 LDR X0, [X24]
	0x03E58008 ADRP X9, 0x313000
	0x03E5800C LDR X8, [X0 + 0xB8]
	0x03E58010 LDR X9, [X9 + 0xC80]
	0x03E58014 MOV X0, X21
	0x03E58018 MOV X1, X19
	0x03E5801C LDR X2, [X8 + 0x10]
	0x03E58020 LDR X3, [X9]
	0x03E58024 BL 0x21DD8A8
	0x03E58028 STR X31, [X19 + 0x20]
	0x03E5802C STR X19, [X20 + 0x90]
	0x03E58030 LDP X20, X19, [X31 + 0x50]
	0x03E58034 LDP X22, X21, [X31 + 0x40]
	0x03E58038 LDP X24, X23, [X31 + 0x30]
	0x03E5803C LDP X26, X25, [X31 + 0x20]
	0x03E58040 LDP X30, X27, [X31 + 0x10]
	0x03E58044 LDP D9, D8, [X31], #0x60
	0x03E58048 RET
	0x03E5804C BL 0x1C16F20
	0x03E58050 STP D9, D8, [X31 - 0x30]!
	0x03E58054 STR X30, [X31 + 0x10]
	0x03E58058 STP X20, X19, [X31 + 0x20]
	0x03E5805C ADRP X20, 0x581000
	0x03E58060 LDRB W8, [X20 + 0x78F]
	0x03E58064 MOV X19, X0
	0x03E58068 CBNZ W8, 0x3E58080
	0x03E5806C ADRP X0, 0x2A3000
	0x03E58070 LDR X0, [X0 + 0xF08]
	0x03E58074 BL 0x1C16CF4
	0x03E58078 MOVZ W8, 0x1
	0x03E5807C STRB W8, [X20 + 0x78F]
	0x03E58080 MOV X0, X19
	0x03E58084 BL 0x3E53F58
	0x03E58088 CBZ X0, 0x3E58158
	0x03E5808C LDR X8, [X0]
	0x03E58090 LDR X1, [X19 + 0x98]
	0x03E58094 LDR X9, [X8 + 0x328]
	0x03E58098 LDR X2, [X8 + 0x330]
	0x03E5809C BLR X9
	0x03E580A0 MOV X0, X19
	0x03E580A4 MOV V8.16B, V0.16B
	0x03E580A8 BL 0x3E53F58
	0x03E580AC CBZ X0, 0x3E58158
	0x03E580B0 LDR X8, [X0]
	0x03E580B4 LDR X1, [X19 + 0xA0]
	0x03E580B8 LDR X9, [X8 + 0x328]
	0x03E580BC LDR X2, [X8 + 0x330]
	0x03E580C0 BLR X9
	0x03E580C4 MOV X0, X19
	0x03E580C8 MOV V9.16B, V0.16B
	0x03E580CC BL 0x3E53F58
	0x03E580D0 CBZ X0, 0x3E58158
	0x03E580D4 LDR X8, [X0]
	0x03E580D8 LDR X1, [X19 + 0x98]
	0x03E580DC LDR X9, [X8 + 0x338]
	0x03E580E0 LDR X2, [X8 + 0x340]
	0x03E580E4 BLR X9
	0x03E580E8 TBZ X0, 0x0, 0x3E58104

ISIL:
	001 Move [X31-112], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, X0
	015 Call BaseInputModule.ShouldActivateModule, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {149}
	020 Move W23, [X19+192]
	021 Move X0, X19
	022 Call BaseInputModule.get_input, X0
	023 Compare X0, 0
	024 JumpIfEqual {165}
	025 Move X8, [X0]
	026 Move X1, [X19+168]
	027 Move X9, [X8+824]
	028 Move X2, [X8+832]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move W20, W0
	031 Move X0, X19
	032 Call BaseInputModule.get_input, X0
	033 Compare X0, 0
	034 JumpIfEqual {165}
	035 Move X8, [X0]
	036 Move X1, [X19+176]
	037 Move X9, [X8+824]
	038 Move X2, [X8+832]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move W21, W0
	041 Move X0, X19
	042 Call BaseInputModule.get_input, X0
	043 Compare X0, 0
	044 JumpIfEqual {165}
	045 Move X8, [X0]
	046 Move X1, [X19+152]
	047 Move X9, [X8+808]
	048 Move X2, [X8+816]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X22, 0x583000
	051 Move W8, [X22+1450]
	052 Move V8, V0
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x2A4000
	056 Move X0, [X0+1208]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X22+1450], W8
	060 Move X25, 0x2A4000
	061 Move X25, [X25+1208]
	062 Move X9, -53919744
	063 Move V9, [X9+576]
	064 NotImplemented "Instruction FABS not yet implemented."
	065 Move X8, [X25]
	066 Move S1, W31
	067 Move S3, 8
	068 NotImplemented "Instruction FMAXNM not yet implemented."
	069 Move X8, [X8+184]
	070 Multiply S0, S0, S9
	071 NotImplemented "Instruction FABD not yet implemented."
	072 Move X0, X19
	073 Move V2, [X8]
	074 Multiply S2, S2, S3
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 NotImplemented "Instruction FCSEL not yet implemented."
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Call BaseInputModule.get_input, X0
	080 Compare X0, 0
	081 JumpIfEqual {165}
	082 Move X8, [X0]
	083 Move X1, [X19+160]
	084 Move X9, [X8+808]
	085 Move X2, [X8+816]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move W8, [X22+1450]
	088 Move V8, V0
	089 Compare W8, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0x2A4000
	092 Move X0, [X0+1208]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X22+1450], W8
	096 Move X8, [X25]
	097 Move D12, [X19+120]
	098 Move D11, [X19+128]
	099 Move X0, X19
	100 Move X8, [X8+184]
	101 Move V10, [X8]
	102 Call BaseInputModule.get_input, X0
	103 Compare X0, 0
	104 JumpIfEqual {165}
	105 Move X8, [X0]
	106 Move W1, W31
	107 Move X9, [X8+680]
	108 Move X2, [X8+688]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move W22, W0
	111 Move X0, X19
	112 Call BaseInputModule.get_input, X0
	113 Compare X0, 0
	114 JumpIfEqual {165}
	115 NotImplemented "Instruction FABS not yet implemented."
	116 Move S1, W31
	117 Move S3, 8
	118 NotImplemented "Instruction FMAXNM not yet implemented."
	119 Multiply S3, S10, S3
	120 Multiply S0, S0, S9
	121 And W8, W20, 1
	122 Subtract V2, V11, V12
	123 Move S1, W31
	124 Move X10, [X0]
	125 NotImplemented "Instruction FCMP not yet implemented."
	126 And W9, W21, 1
	127 Or W8, W8, W23
	128 NotImplemented "Instruction FABD not yet implemented."
	129 NotImplemented "Instruction INVALID not yet implemented."
	130 NotImplemented "Instruction FCSEL not yet implemented."
	131 Or W8, W8, W9
	132 NotImplemented "Instruction FADDP not yet implemented."
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 Or W8, W8, W24
	135 NotImplemented "Instruction CSET not yet implemented."
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 Move X9, [X10+776]
	138 Or W8, W8, W11
	139 NotImplemented "Instruction CSET not yet implemented."
	140 Move X1, [X10+784]
	141 Or W8, W8, W11
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction CSET not yet implemented."
	144 Or W19, W8, W22
	145 NotImplemented "Instruction BLR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction CSET not yet implemented."
	148 Or W8, W19, W8
	149 Move W8, W31
	150 Move X20, [X31+96]
	151 Move X19, [X31+104]
	152 Move X22, [X31+80]
	153 Move X21, [X31+88]
	154 Move X24, [X31+64]
	155 Move X23, [X31+72]
	156 Move X30, [X31+48]
	157 Move X25, [X31+56]
	158 Move D9, [X31+32]
	159 Move D8, [X31+40]
	160 Move D11, [X31+16]
	161 Move D10, [X31+24]
	162 And W0, W8, 1
	163 Move V12, [X31+112]
	164 Return X0
	165 Call 0x1C17F20

Method: System.Void ActivateModule()

Disassembly:
	0x03E580EC FCMP S8, 0x0
	0x03E580F0 FMOV S0, -1
	0x03E580F4 FCSEL S8, S0, S8, MI
	0x03E580F8 FCMP S8, 0x0
	0x03E580FC B.LE 0x3E58104
	0x03E58100 FMOV S8, 1
	0x03E58104 MOV X0, X19
	0x03E58108 BL 0x3E53F58
	0x03E5810C CBZ X0, 0x3E58158
	0x03E58110 LDR X8, [X0]
	0x03E58114 LDR X1, [X19 + 0xA0]
	0x03E58118 LDR X9, [X8 + 0x338]
	0x03E5811C LDR X2, [X8 + 0x340]
	0x03E58120 BLR X9
	0x03E58124 FCMP S9, 0x0
	0x03E58128 FMOV S0, -1
	0x03E5812C FCSEL S0, S0, S9, MI
	0x03E58130 LDP X20, X19, [X31 + 0x20]
	0x03E58134 LDR X30, [X31 + 0x10]
	0x03E58138 FMOV S1, 1
	0x03E5813C FCMP S0, 0x0
	0x03E58140 FCSEL S0, S1, S0, GT
	0x03E58144 ANDS W31, W0, 0x1
	0x03E58148 FCSEL S1, S0, S9, NE
	0x03E5814C MOV V0.16B, V8.16B
	0x03E58150 LDP D9, D8, [X31], #0x30
	0x03E58154 RET
	0x03E58158 BL 0x1C16F20
	0x03E5815C STR D8, [X31 - 0x30]!
	0x03E58160 STR X30, [X31 + 0x8]
	0x03E58164 STP X22, X21, [X31 + 0x10]
	0x03E58168 STP X20, X19, [X31 + 0x20]
	0x03E5816C ADRP X21, 0x590000
	0x03E58170 LDRB W8, [X21 + 0x8B9]
	0x03E58174 MOV W19, W1
	0x03E58178 MOV X20, X0
	0x03E5817C TBNZ X8, 0x0, 0x3E581AC
	0x03E58180 ADRP X0, 0x2F1000
	0x03E58184 LDR X0, [X0 + 0x3D8]
	0x03E58188 BL 0x1C16CF4
	0x03E5818C ADRP X0, 0x2F1000
	0x03E58190 LDR X0, [X0 + 0x3E0]
	0x03E58194 BL 0x1C16CF4
	0x03E58198 ADRP X0, 0x2C3000
	0x03E5819C LDR X0, [X0 + 0x9F8]
	0x03E581A0 BL 0x1C16CF4
	0x03E581A4 MOVZ W8, 0x1
	0x03E581A8 STRB W8, [X21 + 0x8B9]
	0x03E581AC LDR X8, [X20]
	0x03E581B0 MOV X0, X20
	0x03E581B4 MOV W1, W19
	0x03E581B8 LDR X9, [X8 + 0x2F8]
	0x03E581BC LDR X2, [X8 + 0x300]
	0x03E581C0 BLR X9
	0x03E581C4 CBZ X0, 0x3E58400
	0x03E581C8 MOV W1, W31
	0x03E581CC MOV X21, X0
	0x03E581D0 BL 0x3E56794
	0x03E581D4 CBZ X0, 0x3E58400
	0x03E581D8 LDR X19, [X0 + 0x18]
	0x03E581DC CBZ X19, 0x3E58400
	0x03E581E0 LDR X8, [X19 + 0x18]
	0x03E581E4 CBZ X8, 0x3E58400
	0x03E581E8 LDR X8, [X8 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x591000
	006 Move W8, [X20+2229]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x29C000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2229], W8
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfEqual {87}
	020 Move W8, [X8+72]
	021 Compare W8, 0
	022 JumpIfEqual {82}
	023 Move X0, X19
	024 Call BaseInputModule.get_input, X0
	025 Compare X0, 0
	026 JumpIfEqual {87}
	027 Move X8, [X0]
	028 Move X9, [X8+728]
	029 Move X1, [X8+736]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X19
	032 Move [X19+128], S0
	033 Move [X19+136], S1
	034 Call BaseInputModule.get_input, X0
	035 Compare X0, 0
	036 JumpIfEqual {87}
	037 Move X8, [X0]
	038 Move X9, [X8+728]
	039 Move X1, [X8+736]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X19+56]
	042 Move [X19+120], S0
	043 Move [X19+128], S1
	044 Compare X8, 0
	045 JumpIfEqual {87}
	046 Move X9, 0x29C000
	047 Move X9, [X9+1432]
	048 Move X20, [X8+64]
	049 Move X0, [X9]
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Equality, X0, X1
	058 Move X21, [X19+56]
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {66}
	063 Compare X21, 0
	064 JumpIfEqual {87}
	065 Move X20, [X21+48]
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move X9, [X8+616]
	069 Move X1, [X8+624]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X21, 0
	072 JumpIfEqual {87}
	073 Move X1, X20
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X2, X0
	077 Move X0, X21
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Call EventSystem.SetSelectedGameObject, X0, X1, X2
	081 Return 
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void DeactivateModule()

Disassembly:
	0x03E581EC MOV X0, X20

ISIL:
	001 Call PointerInputModule.ClearSelection, X0
	002 Return 

Method: System.Void Process()

Disassembly:
	0x03E581F0 MOV X1, X19
	0x03E581F4 STR X8, [X20 + 0x88]
	0x03E581F8 BL 0x3E5840C
	0x03E581FC LDR X8, [X20]
	0x03E58200 LDR X1, [X19 + 0x18]
	0x03E58204 MOV X0, X20
	0x03E58208 LDR X9, [X8 + 0x308]
	0x03E5820C LDR X2, [X8 + 0x310]
	0x03E58210 BLR X9
	0x03E58214 LDR X8, [X20]
	0x03E58218 LDR X1, [X19 + 0x18]
	0x03E5821C MOV X0, X20
	0x03E58220 LDR X9, [X8 + 0x318]
	0x03E58224 LDR X2, [X8 + 0x320]
	0x03E58228 BLR X9
	0x03E5822C MOVZ W1, 0x1
	0x03E58230 MOV X0, X21
	0x03E58234 BL 0x3E56794
	0x03E58238 CBZ X0, 0x3E58400
	0x03E5823C LDR X1, [X0 + 0x18]
	0x03E58240 MOV X0, X20
	0x03E58244 BL 0x3E5840C
	0x03E58248 MOVZ W1, 0x1
	0x03E5824C MOV X0, X21
	0x03E58250 BL 0x3E56794
	0x03E58254 CBZ X0, 0x3E58400
	0x03E58258 LDR X8, [X0 + 0x18]
	0x03E5825C CBZ X8, 0x3E58400
	0x03E58260 LDR X9, [X20]
	0x03E58264 LDR X1, [X8 + 0x18]
	0x03E58268 MOV X0, X20
	0x03E5826C LDR X8, [X9 + 0x318]
	0x03E58270 LDR X2, [X9 + 0x320]
	0x03E58274 BLR X8
	0x03E58278 MOVZ W1, 0x2
	0x03E5827C MOV X0, X21
	0x03E58280 BL 0x3E56794
	0x03E58284 CBZ X0, 0x3E58400
	0x03E58288 LDR X1, [X0 + 0x18]
	0x03E5828C MOV X0, X20
	0x03E58290 BL 0x3E5840C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Compare X8, 0
	006 JumpIfEqual {61}
	007 Move W8, [X8+72]
	008 Compare W8, 0
	009 JumpIfEqual {51}
	010 Move X19, X0
	011 Call StandaloneInputModule.SendUpdateEventToSelectedObject, X0
	012 Move W20, W0
	013 Move X0, X19
	014 Call StandaloneInputModule.ProcessTouchEvents, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {34}
	019 Move X0, X19
	020 Call BaseInputModule.get_input, X0
	021 Compare X0, 0
	022 JumpIfEqual {61}
	023 Move X8, [X0]
	024 Move X9, [X8+664]
	025 Move X1, [X8+672]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {34}
	031 Move X0, X19
	032 Move W1, W31
	033 Call StandaloneInputModule.ProcessMouseEvent, X0, X1
	034 Move X8, [X19+56]
	035 Compare X8, 0
	036 JumpIfEqual {61}
	037 Move W8, [X8+56]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Or W8, W20, W8
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {51}
	045 Move X0, X19
	046 Call StandaloneInputModule.SendMoveEventToSelectedObject, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {55}
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return 
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Call StandaloneInputModule.SendSubmitEventToSelectedObject, X0
	060 Return 
	061 Call 0x1C17F20

Method: System.Boolean ProcessTouchEvents()

Disassembly:
	0x03E583DC LDP X22, X21, [X31 + 0x10]
	0x03E583E0 LDR X30, [X31 + 0x8]
	0x03E583E4 LDR V8, [X31], #0x30
	0x03E583E8 B 0x21DD8A8
	0x03E583EC LDP X20, X19, [X31 + 0x20]
	0x03E583F0 LDP X22, X21, [X31 + 0x10]
	0x03E583F4 LDR X30, [X31 + 0x8]
	0x03E583F8 LDR V8, [X31], #0x30
	0x03E583FC RET
	0x03E58400 BL 0x1C16F20
	0x03E58404 MOV W0, W31
	0x03E58408 RET
	0x03E5840C STP D9, D8, [X31 - 0x60]!
	0x03E58410 STP X30, X27, [X31 + 0x10]
	0x03E58414 STP X26, X25, [X31 + 0x20]
	0x03E58418 STP X24, X23, [X31 + 0x30]
	0x03E5841C STP X22, X21, [X31 + 0x40]
	0x03E58420 STP X20, X19, [X31 + 0x50]
	0x03E58424 ADRP X21, 0x590000
	0x03E58428 LDRB W8, [X21 + 0x8BB]
	0x03E5842C MOV X20, X1
	0x03E58430 MOV X19, X0
	0x03E58434 TBNZ X8, 0x0, 0x3E58488
	0x03E58438 ADRP X0, 0x2F1000
	0x03E5843C LDR X0, [X0 + 0x388]
	0x03E58440 BL 0x1C16CF4
	0x03E58444 ADRP X0, 0x2F1000
	0x03E58448 LDR X0, [X0 + 0x398]
	0x03E5844C BL 0x1C16CF4
	0x03E58450 ADRP X0, 0x2F1000
	0x03E58454 LDR X0, [X0 + 0x3B0]
	0x03E58458 BL 0x1C16CF4
	0x03E5845C ADRP X0, 0x2F1000
	0x03E58460 LDR X0, [X0 + 0x3B8]
	0x03E58464 BL 0x1C16CF4
	0x03E58468 ADRP X0, 0x2C3000
	0x03E5846C LDR X0, [X0 + 0x9F8]
	0x03E58470 BL 0x1C16CF4
	0x03E58474 ADRP X0, 0x29B000
	0x03E58478 LDR X0, [X0 + 0x598]
	0x03E5847C BL 0x1C16CF4
	0x03E58480 MOVZ W8, 0x1
	0x03E58484 STRB W8, [X21 + 0x8BB]
	0x03E58488 CBZ X20, 0x3E5877C
	0x03E5848C LDR X21, [X20 + 0x18]
	0x03E58490 CBZ X21, 0x3E5877C
	0x03E58494 LDR W8, [X20 + 0x10]
	0x03E58498 LDR X22, [X21 + 0x50]
	0x03E5849C ANDS W31, W8, 0xFFFFFFFD
	0x03E584A0 B.NE 0x3E5872C
	0x03E584A4 MOVZ W24, 0x1
	0x03E584A8 STRB W24, [X21 + 0xF8]
	0x03E584AC ADRP X25, 0x581000
	0x03E584B0 LDRB W8, [X25 + 0x78F]
	0x03E584B4 ADD X23, X21, 0x104
	0x03E584B8 CBNZ W8, 0x3E584CC
	0x03E584BC ADRP X0, 0x2A3000
	0x03E584C0 LDR X0, [X0 + 0xF08]
	0x03E584C4 BL 0x1C16CF4
	0x03E584C8 STRB W24, [X25 + 0x78F]
	0x03E584CC ADRP X8, 0x2A3000
	0x03E584D0 LDR X8, [X8 + 0xF08]
	0x03E584D4 ADD X1, X21, 0x50
	0x03E584D8 ADD X0, X21, 0xA0
	0x03E584DC MOVZ W2, 0x50
	0x03E584E0 LDR X8, [X8]
	0x03E584E4 LDR X8, [X8 + 0xB8]
	0x03E584E8 LDR V1, [X8]
	0x03E584EC STRH W24, [X21 + 0x144]
	0x03E584F0 LDR V0, [X23]
	0x03E584F4 STP D1, D0, [X23 + 0x8]
	0x03E584F8 BL 0x3EB1AC0
	0x03E584FC MOV X0, X19
	0x03E58500 MOV X1, X22
	0x03E58504 MOV X2, X21
	0x03E58508 BL 0x3E563C4
	0x03E5850C MOV X0, X31
	0x03E58510 BL 0x3C3C764
	0x03E58514 LDR V1, [X21 + 0x134]
	0x03E58518 ADRP X8, 0xFFFFFFFFFCC92000
	0x03E5851C LDR V9, [X8 + 0x44C]
	0x03E58520 FSUB S0, S0, S1
	0x03E58524 FCMP S0, S9
	0x03E58528 B.LT 0x3E58530
	0x03E5852C STR W31, [X21 + 0x138]
	0x03E58530 ADRP X26, 0x2C3000
	0x03E58534 LDR X26, [X26 + 0x9F8]
	0x03E58538 LDR X0, [X26]
	0x03E5853C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X22
	005 Move [X31+264], X21
	006 Move [X31+272], X20
	007 Move [X31+280], X19
	008 Add X8, X31, 160
	009 NotImplemented "Instruction MOVI not yet implemented."
	010 Move X19, X0
	011 Move [X31+224], W31
	012 Move [X31+156], W31
	013 Move [X8+32], V0
	014 Move [X8+40], V0
	015 Move [X8], V0
	016 Move [X8+8], V0
	017 Move [X31+152], W31
	018 Call BaseInputModule.get_input, X0
	019 Compare X0, 0
	020 JumpIfEqual {84}
	021 Move W20, W31
	022 Move X8, [X0]
	023 Move X9, [X8+776]
	024 Move X1, [X8+784]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move W21, W0
	027 Move X0, X19
	028 Call BaseInputModule.get_input, X0
	029 Compare X0, 0
	030 JumpIfEqual {84}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X0]
	033 Move W1, W20
	034 Move X9, [X8+792]
	035 Move X2, [X8+800]
	036 Add X8, X31, 80
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Add X0, X31, 160
	039 Add X1, X31, 80
	040 Move W2, 68
	041 Call 0x3EB2AC0
	042 Add X0, X31, 160
	043 Move X1, X31
	044 Call Touch.get_type, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X0, X31, 8
	047 Add X1, X31, 160
	048 Move W2, 68
	049 Call 0x3EB2AC0
	050 Add X1, X31, 8
	051 Add X2, X31, 152
	052 Add X3, X31, 156
	053 Move X0, X19
	054 Call PointerInputModule.GetTouchPointerEventData, X0, X1, X2, X3
	055 Move W22, [X31+156]
	056 Move W2, [X31+152]
	057 Move X21, X0
	058 Move X0, X19
	059 Move X1, X21
	060 Move W3, W22
	061 Call StandaloneInputModule.ProcessTouchPress, X0, X1, X2, X3
	062 Compare W22, 0
	063 JumpIfEqual {67}
	064 Move X0, X19
	065 Move X1, X21
	066 Call PointerInputModule.RemovePointerData, X0, X1
	067 Move X8, [X19]
	068 Move X0, X19
	069 Move X1, X21
	070 Move X9, [X8+776]
	071 Move X2, [X8+784]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X19]
	074 Move X0, X19
	075 Move X1, X21
	076 Move X9, [X8+792]
	077 Move X2, [X8+800]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X0, X19
	080 Add W20, W20, 1
	081 Call BaseInputModule.get_input, X0
	082 Compare X0, 0
	083 JumpIfNotEqual {22}
	084 Call 0x1C17F20
	085 Move X8, [X0]
	086 Move X9, [X8+776]
	087 Move X1, [X8+784]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X20, [X31+272]
	090 Move X19, [X31+280]
	091 Move X22, [X31+256]
	092 Move X21, [X31+264]
	093 Move X29, [X31+240]
	094 Move X30, [X31+248]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSET not yet implemented."
	097 Add X31, X31, 288
	098 Return X0

Method: System.Void ProcessTouchPress(UnityEngine.EventSystems.PointerEventData pointerEvent, System.Boolean pressed, System.Boolean released)

Disassembly:
	0x03E589BC ORR W8, W0, W8, 0x0
	0x03E589C0 B 0x3E58964
	0x03E589C4 LDR X9, [X8 + 0x308]
	0x03E589C8 LDR X1, [X8 + 0x310]
	0x03E589CC BLR X9
	0x03E589D0 CMP W0, 0x0
	0x03E589D4 CSET W8, GT
	0x03E589D8 B 0x3E58964
	0x03E589DC BL 0x1C16F20
	0x03E589E0 STR X30, [X31 - 0x10]!
	0x03E589E4 BL 0x3E53F58
	0x03E589E8 CBZ X0, 0x3E58A0C
	0x03E589EC LDR X8, [X0]
	0x03E589F0 LDR X9, [X8 + 0x2F8]
	0x03E589F4 LDR X1, [X8 + 0x300]
	0x03E589F8 BLR X9
	0x03E589FC ORN W8, W31, W0, 0x0
	0x03E58A00 AND W0, W8, 0x1
	0x03E58A04 LDR X30, [X31], #0x10
	0x03E58A08 RET
	0x03E58A0C BL 0x1C16F20
	0x03E58A10 STP X30, X19, [X31 - 0x10]!
	0x03E58A14 MOV X19, X0
	0x03E58A18 BL 0x3E589E0
	0x03E58A1C TBZ X0, 0x0, 0x3E58A2C
	0x03E58A20 MOV X0, X19
	0x03E58A24 LDP X30, X19, [X31], #0x10
	0x03E58A28 B 0x3E58A38
	0x03E58A2C MOV X0, X19
	0x03E58A30 LDP X30, X19, [X31], #0x10
	0x03E58A34 B 0x3E58B60
	0x03E58A38 STR X30, [X31 - 0x30]!
	0x03E58A3C STP X22, X21, [X31 + 0x10]
	0x03E58A40 STP X20, X19, [X31 + 0x20]
	0x03E58A44 LDR X8, [X0]
	0x03E58A48 MOV W1, W31
	0x03E58A4C MOV X19, X0
	0x03E58A50 LDR X9, [X8 + 0x2F8]
	0x03E58A54 LDR X2, [X8 + 0x300]
	0x03E58A58 BLR X9
	0x03E58A5C CBZ X0, 0x3E58B5C
	0x03E58A60 MOV W1, W31
	0x03E58A64 BL 0x3E56794
	0x03E58A68 CBZ X0, 0x3E58B5C
	0x03E58A6C LDR X20, [X0 + 0x18]
	0x03E58A70 CBZ X20, 0x3E58B5C
	0x03E58A74 LDR W8, [X20 + 0x10]
	0x03E58A78 ANDS W9, W8, 0xFFFFFFFD
	0x03E58A7C B.NE 0x3E58ACC
	0x03E58A80 ADRP X22, 0x581000
	0x03E58A84 LDRB W8, [X22 + 0x78F]
	0x03E58A88 LDR X21, [X20 + 0x18]
	0x03E58A8C CBNZ W8, 0x3E58AA4
	0x03E58A90 ADRP X0, 0x2A3000
	0x03E58A94 LDR X0, [X0 + 0xF08]
	0x03E58A98 BL 0x1C16CF4
	0x03E58A9C MOVZ W8, 0x1
	0x03E58AA0 STRB W8, [X22 + 0x78F]
	0x03E58AA4 CBZ X21, 0x3E58B5C
	0x03E58AA8 ADRP X8, 0x2A3000
	0x03E58AAC LDR X8, [X8 + 0xF08]
	0x03E58AB0 LDR X8, [X8]
	0x03E58AB4 LDR X8, [X8 + 0xB8]
	0x03E58AB8 LDR V0, [X8]
	0x03E58ABC ADD X8, X21, 0x10C
	0x03E58AC0 STR D0, [X8]
	0x03E58AC4 LDR W8, [X20 + 0x10]
	0x03E58AC8 AND W9, W8, 0xFFFFFFFD
	0x03E58ACC LDR X1, [X20 + 0x18]
	0x03E58AD0 CMP W9, 0x0
	0x03E58AD4 SUB W8, W8, 0x1
	0x03E58AD8 CSET W2, EQ
	0x03E58ADC CMP W8, 0x2
	0x03E58AE0 CSET W3, CC
	0x03E58AE4 MOV X0, X19
	0x03E58AE8 BL 0x3E58CA8
	0x03E58AEC MOV X0, X19
	0x03E58AF0 BL 0x3E53F58
	0x03E58AF4 CBZ X0, 0x3E58B5C
	0x03E58AF8 LDR X8, [X0]
	0x03E58AFC MOV W1, W31
	0x03E58B00 LDR X9, [X8 + 0x2C8]
	0x03E58B04 LDR X2, [X8 + 0x2D0]
	0x03E58B08 BLR X9
	0x03E58B0C TBZ X0, 0x0, 0x3E58B4C
	0x03E58B10 LDR X8, [X19]
	0x03E58B14 LDR X1, [X20 + 0x18]
	0x03E58B18 MOV X0, X19
	0x03E58B1C LDR X9, [X8 + 0x308]
	0x03E58B20 LDR X2, [X8 + 0x310]
	0x03E58B24 BLR X9
	0x03E58B28 LDR X8, [X19]
	0x03E58B2C LDR X1, [X20 + 0x18]
	0x03E58B30 MOV X0, X19
	0x03E58B34 LDP X20, X19, [X31 + 0x20]
	0x03E58B38 LDR X3, [X8 + 0x318]
	0x03E58B3C LDR X2, [X8 + 0x320]
	0x03E58B40 LDP X22, X21, [X31 + 0x10]
	0x03E58B44 LDR X30, [X31], #0x30
	0x03E58B48 BR X3
	0x03E58B4C LDP X20, X19, [X31 + 0x20]
	0x03E58B50 LDP X22, X21, [X31 + 0x10]
	0x03E58B54 LDR X30, [X31], #0x30
	0x03E58B58 RET
	0x03E58B5C BL 0x1C16F20
	0x03E58B60 SUB X31, X31, 0x120
	0x03E58B64 STP X29, X30, [X31 + 0xF0]
	0x03E58B68 STP X22, X21, [X31 + 0x100]
	0x03E58B6C STP X20, X19, [X31 + 0x110]
	0x03E58B70 ADD X8, X31, 0xA0
	0x03E58B74 MOVI V0.2D, 0x0
	0x03E58B78 MOV X19, X0
	0x03E58B7C STR W31, [X31 + 0xE0]
	0x03E58B80 STRB W31, [X31 + 0x9C]
	0x03E58B84 STP V0, V0, [X8 + 0x20]
	0x03E58B88 STP V0, V0, [X8]
	0x03E58B8C STRB W31, [X31 + 0x98]
	0x03E58B90 BL 0x3E53F58
	0x03E58B94 CBZ X0, 0x3E58C90
	0x03E58B98 MOV W20, W31
	0x03E58B9C LDR X8, [X0]
	0x03E58BA0 LDR X9, [X8 + 0x308]
	0x03E58BA4 LDR X1, [X8 + 0x310]
	0x03E58BA8 BLR X9
	0x03E58BAC CMP W20, W0
	0x03E58BB0 B.GE 0x3E58C94
	0x03E58BB4 MOV X0, X19
	0x03E58BB8 BL 0x3E53F58
	0x03E58BBC CBZ X0, 0x3E58C90
	0x03E58BC0 LDR X8, [X0]
	0x03E58BC4 MOV W1, W20
	0x03E58BC8 LDR X9, [X8 + 0x318]
	0x03E58BCC LDR X2, [X8 + 0x320]
	0x03E58BD0 ADD X8, X31, 0x50
	0x03E58BD4 BLR X9
	0x03E58BD8 ADD X0, X31, 0xA0
	0x03E58BDC ADD X1, X31, 0x50
	0x03E58BE0 MOVZ W2, 0x44
	0x03E58BE4 BL 0x3EB1AC0
	0x03E58BE8 ADD X0, X31, 0xA0
	0x03E58BEC MOV X1, X31
	0x03E58BF0 BL 0x3C84608
	0x03E58BF4 CMP W0, 0x1
	0x03E58BF8 B.EQ 0x3E58C80
	0x03E58BFC ADD X0, X31, 0x8
	0x03E58C00 ADD X1, X31, 0xA0
	0x03E58C04 MOVZ W2, 0x44
	0x03E58C08 BL 0x3EB1AC0
	0x03E58C0C ADD X1, X31, 0x8
	0x03E58C10 ADD X2, X31, 0x98
	0x03E58C14 ADD X3, X31, 0x9C
	0x03E58C18 MOV X0, X19
	0x03E58C1C BL 0x3E553C8
	0x03E58C20 LDRB W22, [X31 + 0x9C]
	0x03E58C24 LDRB W2, [X31 + 0x98]
	0x03E58C28 MOV X21, X0
	0x03E58C2C MOV X0, X19
	0x03E58C30 MOV X1, X21
	0x03E58C34 MOV W3, W22
	0x03E58C38 BL 0x3E58CA8
	0x03E58C3C CBZ W22, 0x3E58C50
	0x03E58C40 MOV X0, X19
	0x03E58C44 MOV X1, X21
	0x03E58C48 BL 0x3E5536C
	0x03E58C4C B 0x3E58C80
	0x03E58C50 LDR X8, [X19]
	0x03E58C54 MOV X0, X19
	0x03E58C58 MOV X1, X21
	0x03E58C5C LDR X9, [X8 + 0x308]
	0x03E58C60 LDR X2, [X8 + 0x310]
	0x03E58C64 BLR X9
	0x03E58C68 LDR X8, [X19]
	0x03E58C6C MOV X0, X19
	0x03E58C70 MOV X1, X21
	0x03E58C74 LDR X9, [X8 + 0x318]
	0x03E58C78 LDR X2, [X8 + 0x320]
	0x03E58C7C BLR X9
	0x03E58C80 MOV X0, X19
	0x03E58C84 ADD W20, W20, 0x1
	0x03E58C88 BL 0x3E53F58
	0x03E58C8C CBNZ X0, 0x3E58B9C
	0x03E58C90 BL 0x1C16F20
	0x03E58C94 LDP X20, X19, [X31 + 0x110]
	0x03E58C98 LDP X22, X21, [X31 + 0x100]
	0x03E58C9C LDP X29, X30, [X31 + 0xF0]
	0x03E58CA0 ADD X31, X31, 0x120
	0x03E58CA4 RET
	0x03E58CA8 STR D8, [X31 - 0x50]!
	0x03E58CAC STR X30, [X31 + 0x8]
	0x03E58CB0 STP X26, X25, [X31 + 0x10]
	0x03E58CB4 STP X24, X23, [X31 + 0x20]
	0x03E58CB8 STP X22, X21, [X31 + 0x30]
	0x03E58CBC STP X20, X19, [X31 + 0x40]
	0x03E58CC0 ADRP X21, 0x590000
	0x03E58CC4 LDRB W8, [X21 + 0x8BD]
	0x03E58CC8 MOV W22, W3
	0x03E58CCC MOV W23, W2
	0x03E58CD0 MOV X19, X1
	0x03E58CD4 MOV X20, X0
	0x03E58CD8 TBNZ X8, 0x0, 0x3E58D68
	0x03E58CDC ADRP X0, 0x2F1000
	0x03E58CE0 LDR X0, [X0 + 0x380]
	0x03E58CE4 BL 0x1C16CF4
	0x03E58CE8 ADRP X0, 0x2F1000
	0x03E58CEC LDR X0, [X0 + 0x388]
	0x03E58CF0 BL 0x1C16CF4
	0x03E58CF4 ADRP X0, 0x313000
	0x03E58CF8 LDR X0, [X0 + 0xC80]
	0x03E58CFC BL 0x1C16CF4
	0x03E58D00 ADRP X0, 0x2F1000
	0x03E58D04 LDR X0, [X0 + 0x390]
	0x03E58D08 BL 0x1C16CF4
	0x03E58D0C ADRP X0, 0x2F1000
	0x03E58D10 LDR X0, [X0 + 0x398]
	0x03E58D14 BL 0x1C16CF4
	0x03E58D18 ADRP X0, 0x2F1000
	0x03E58D1C LDR X0, [X0 + 0x3A0]
	0x03E58D20 BL 0x1C16CF4
	0x03E58D24 ADRP X0, 0x2F1000
	0x03E58D28 LDR X0, [X0 + 0x3A8]
	0x03E58D2C BL 0x1C16CF4
	0x03E58D30 ADRP X0, 0x2F1000
	0x03E58D34 LDR X0, [X0 + 0x3B0]
	0x03E58D38 BL 0x1C16CF4
	0x03E58D3C ADRP X0, 0x2F1000
	0x03E58D40 LDR X0, [X0 + 0x3B8]
	0x03E58D44 BL 0x1C16CF4
	0x03E58D48 ADRP X0, 0x2C3000
	0x03E58D4C LDR X0, [X0 + 0x9F8]
	0x03E58D50 BL 0x1C16CF4
	0x03E58D54 ADRP X0, 0x29B000
	0x03E58D58 LDR X0, [X0 + 0x598]
	0x03E58D5C BL 0x1C16CF4
	0x03E58D60 MOVZ W8, 0x1
	0x03E58D64 STRB W8, [X21 + 0x8BD]
	0x03E58D68 CBZ X19, 0x3E59328
	0x03E58D6C LDR X21, [X19 + 0x50]
	0x03E58D70 TBZ X23, 0x0, 0x3E59020
	0x03E58D74 MOVZ W24, 0x1
	0x03E58D78 STRB W24, [X19 + 0xF8]
	0x03E58D7C ADRP X25, 0x581000
	0x03E58D80 LDRB W8, [X25 + 0x78F]
	0x03E58D84 ADD X23, X19, 0x104
	0x03E58D88 CBNZ W8, 0x3E58D9C
	0x03E58D8C ADRP X0, 0x2A3000
	0x03E58D90 LDR X0, [X0 + 0xF08]
	0x03E58D94 BL 0x1C16CF4
	0x03E58D98 STRB W24, [X25 + 0x78F]
	0x03E58D9C ADRP X8, 0x2A3000
	0x03E58DA0 LDR X8, [X8 + 0xF08]
	0x03E58DA4 ADD X1, X19, 0x50
	0x03E58DA8 ADD X0, X19, 0xA0
	0x03E58DAC MOVZ W2, 0x50
	0x03E58DB0 LDR X8, [X8]
	0x03E58DB4 LDR X8, [X8 + 0xB8]
	0x03E58DB8 LDR V1, [X8]
	0x03E58DBC STRH W24, [X19 + 0x144]
	0x03E58DC0 LDR V0, [X23]
	0x03E58DC4 STP D1, D0, [X23 + 0x8]
	0x03E58DC8 BL 0x3EB1AC0
	0x03E58DCC MOV X0, X20
	0x03E58DD0 MOV X1, X21
	0x03E58DD4 MOV X2, X19
	0x03E58DD8 BL 0x3E563C4
	0x03E58DDC ADRP X26, 0x29B000
	0x03E58DE0 LDR X26, [X26 + 0x598]
	0x03E58DE4 LDR X23, [X19 + 0x20]
	0x03E58DE8 LDR X0, [X26]
	0x03E58DEC LDR W8, [X0 + 0xE0]
	0x03E58DF0 CBNZ W8, 0x3E58DF8
	0x03E58DF4 BL 0x1C16DFC
	0x03E58DF8 MOV X0, X23
	0x03E58DFC MOV X1, X21
	0x03E58E00 MOV X2, X31
	0x03E58E04 BL 0x3C354F8
	0x03E58E08 TBZ X0, 0x0, 0x3E58E20
	0x03E58E0C MOV X0, X20
	0x03E58E10 MOV X1, X19
	0x03E58E14 MOV X2, X21
	0x03E58E18 BL 0x3E54524
	0x03E58E1C STR X21, [X19 + 0x20]
	0x03E58E20 ADRP X25, 0x2C3000
	0x03E58E24 LDR X25, [X25 + 0x9F8]
	0x03E58E28 LDR X0, [X25]
	0x03E58E2C LDR W8, [X0 + 0xE0]
	0x03E58E30 CBNZ W8, 0x3E58E38
	0x03E58E34 BL 0x1C16DFC
	0x03E58E38 ADRP X23, 0x589000
	0x03E58E3C LDRB W8, [X23 + 0x386]
	0x03E58E40 CBNZ W8, 0x3E58E58
	0x03E58E44 ADRP X0, 0x2C3000
	0x03E58E48 LDR X0, [X0 + 0x9F8]
	0x03E58E4C BL 0x1C16CF4
	0x03E58E50 MOVZ W8, 0x1
	0x03E58E54 STRB W8, [X23 + 0x386]
	0x03E58E58 LDR X0, [X25]
	0x03E58E5C LDR W8, [X0 + 0xE0]
	0x03E58E60 CBNZ W8, 0x3E58E6C
	0x03E58E64 BL 0x1C16DFC
	0x03E58E68 LDR X0, [X25]
	0x03E58E6C ADRP X9, 0x2F1000
	0x03E58E70 LDR X8, [X0 + 0xB8]
	0x03E58E74 LDR X9, [X9 + 0x388]
	0x03E58E78 MOV X0, X21
	0x03E58E7C MOV X1, X19
	0x03E58E80 LDR X2, [X8 + 0x18]
	0x03E58E84 LDR X3, [X9]
	0x03E58E88 BL 0x21DD8A8
	0x03E58E8C LDR X8, [X26]
	0x03E58E90 MOV X23, X0
	0x03E58E94 LDR W9, [X8 + 0xE0]
	0x03E58E98 CBNZ W9, 0x3E58EA4
	0x03E58E9C MOV X0, X8
	0x03E58EA0 BL 0x1C16DFC
	0x03E58EA4 MOV X0, X23
	0x03E58EA8 MOV X1, X31
	0x03E58EAC MOV X2, X31
	0x03E58EB0 BL 0x3C3883C
	0x03E58EB4 TBZ X0, 0x0, 0x3E58EE0
	0x03E58EB8 LDR X0, [X25]
	0x03E58EBC LDR W8, [X0 + 0xE0]
	0x03E58EC0 CBNZ W8, 0x3E58EC8
	0x03E58EC4 BL 0x1C16DFC
	0x03E58EC8 ADRP X8, 0x2F1000
	0x03E58ECC LDR X8, [X8 + 0x3B8]
	0x03E58ED0 MOV X0, X21
	0x03E58ED4 LDR X1, [X8]
	0x03E58ED8 BL 0x21DDB64
	0x03E58EDC MOV X23, X0
	0x03E58EE0 MOV X0, X31
	0x03E58EE4 BL 0x3C3C764
	0x03E58EE8 LDR X0, [X26]
	0x03E58EEC LDR X24, [X19 + 0x30]
	0x03E58EF0 MOV V8.16B, V0.16B
	0x03E58EF4 LDR W8, [X0 + 0xE0]
	0x03E58EF8 CBNZ W8, 0x3E58F00
	0x03E58EFC BL 0x1C16DFC
	0x03E58F00 MOV X0, X23
	0x03E58F04 MOV X1, X24
	0x03E58F08 MOV X2, X31
	0x03E58F0C BL 0x3C3883C
	0x03E58F10 TBZ X0, 0x0, 0x3E58F38
	0x03E58F14 LDR V0, [X19 + 0x134]
	0x03E58F18 ADRP X8, 0xFFFFFFFFFCC92000
	0x03E58F1C LDR V1, [X8 + 0x44C]
	0x03E58F20 FSUB S0, S8, S0
	0x03E58F24 FCMP S0, S1
	0x03E58F28 B.PL 0x3E58F44
	0x03E58F2C LDR W8, [X19 + 0x138]
	0x03E58F30 ADD W8, W8, 0x1
	0x03E58F34 B 0x3E58F48
	0x03E58F38 MOVZ W8, 0x1
	0x03E58F3C STR W8, [X19 + 0x138]
	0x03E58F40 B 0x3E58F50
	0x03E58F44 MOVZ W8, 0x1
	0x03E58F48 STR W8, [X19 + 0x138]
	0x03E58F4C STR S8, [X19 + 0x134]
	0x03E58F50 MOV X0, X19
	0x03E58F54 MOV X1, X23
	0x03E58F58 BL 0x3E4F3AC
	0x03E58F5C STR X21, [X19 + 0x38]
	0x03E58F60 STR S8, [X19 + 0x134]
	0x03E58F64 LDR X0, [X25]
	0x03E58F68 LDR W8, [X0 + 0xE0]
	0x03E58F6C CBNZ W8, 0x3E58F74
	0x03E58F70 BL 0x1C16DFC
	0x03E58F74 ADRP X8, 0x2F1000
	0x03E58F78 LDR X8, [X8 + 0x3B0]
	0x03E58F7C MOV X0, X21
	0x03E58F80 LDR X1, [X8]
	0x03E58F84 BL 0x21DDB64
	0x03E58F88 STR X0, [X19 + 0x40]
	0x03E58F8C MOV X23, X0
	0x03E58F90 LDR X0, [X26]
	0x03E58F94 LDR W8, [X0 + 0xE0]
	0x03E58F98 CBNZ W8, 0x3E58FA0
	0x03E58F9C BL 0x1C16DFC
	0x03E58FA0 MOV X0, X23
	0x03E58FA4 MOV X1, X31
	0x03E58FA8 MOV X2, X31
	0x03E58FAC BL 0x3C354F8
	0x03E58FB0 TBZ X0, 0x0, 0x3E5901C
	0x03E58FB4 LDR X0, [X25]
	0x03E58FB8 LDR X23, [X19 + 0x40]
	0x03E58FBC LDR W8, [X0 + 0xE0]
	0x03E58FC0 CBNZ W8, 0x3E58FC8
	0x03E58FC4 BL 0x1C16DFC
	0x03E58FC8 ADRP X24, 0x589000
	0x03E58FCC LDRB W8, [X24 + 0x387]
	0x03E58FD0 CBNZ W8, 0x3E58FE8
	0x03E58FD4 ADRP X0, 0x2C3000
	0x03E58FD8 LDR X0, [X0 + 0x9F8]
	0x03E58FDC BL 0x1C16CF4
	0x03E58FE0 MOVZ W8, 0x1
	0x03E58FE4 STRB W8, [X24 + 0x387]
	0x03E58FE8 LDR X0, [X25]
	0x03E58FEC LDR W8, [X0 + 0xE0]
	0x03E58FF0 CBNZ W8, 0x3E58FFC
	0x03E58FF4 BL 0x1C16DFC
	0x03E58FF8 LDR X0, [X25]
	0x03E58FFC ADRP X9, 0x2F1000
	0x03E59000 LDR X8, [X0 + 0xB8]
	0x03E59004 B 0x3EB1A5C
	0x03E59008 MOV X0, X23
	0x03E5900C MOV X1, X19
	0x03E59010 LDR X2, [X8 + 0x30]
	0x03E59014 LDR X3, [X9]
	0x03E59018 BL 0x21DD088
	0x03E5901C STR X19, [X20 + 0x78]
	0x03E59020 TBZ X22, 0x0, 0x3E5930C
	0x03E59024 ADRP X24, 0x2C2000
	0x03E59028 LDR X24, [X24 + 0x9F8]
	0x03E5902C LDR X22, [X19 + 0x28]
	0x03E59030 LDR X0, [X24]
	0x03E59034 LDR W8, [X0 + 0xE0]
	0x03E59038 CBNZ W8, 0x3E59040
	0x03E5903C BL 0x1C16DFC
	0x03E59040 ADRP X23, 0x588000
	0x03E59044 LDRB W8, [X23 + 0x388]
	0x03E59048 CBNZ W8, 0x3E59060
	0x03E5904C ADRP X0, 0x2C2000

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x591000
	014 Move W8, [X21+2230]
	015 Move W22, W3
	016 Move W23, W2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x2F2000
	024 Move X0, [X0+896]
	025 Call 0x1C17CF4
	026 Move X0, 0x2F2000
	027 Move X0, [X0+904]
	028 Call 0x1C17CF4
	029 Move X0, 0x314000
	030 Move X0, [X0+3200]
	031 Call 0x1C17CF4
	032 Move X0, 0x2F2000
	033 Move X0, [X0+912]
	034 Call 0x1C17CF4
	035 Move X0, 0x2F2000
	036 Move X0, [X0+920]
	037 Call 0x1C17CF4
	038 Move X0, 0x2F2000
	039 Move X0, [X0+928]
	040 Call 0x1C17CF4
	041 Move X0, 0x2F2000
	042 Move X0, [X0+936]
	043 Call 0x1C17CF4
	044 Move X0, 0x2F2000
	045 Move X0, [X0+944]
	046 Call 0x1C17CF4
	047 Move X0, 0x2F2000
	048 Move X0, [X0+952]
	049 Call 0x1C17CF4
	050 Move X0, 0x2C4000
	051 Move X0, [X0+2552]
	052 Call 0x1C17CF4
	053 Move X0, 0x29C000
	054 Move X0, [X0+1432]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+2230], W8
	058 Compare X19, 0
	059 JumpIfEqual {491}
	060 Move X21, [X19+80]
	061 Move TEMP, X23
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {258}
	065 Move W24, 1
	066 Move [X19+248], W24
	067 Move X25, 0x582000
	068 Move W8, [X25+1935]
	069 Add X23, X19, 260
	070 Compare W8, 0
	071 JumpIfNotEqual {76}
	072 Move X0, 0x2A4000
	073 Move X0, [X0+3848]
	074 Call 0x1C17CF4
	075 Move [X25+1935], W24
	076 Move X8, 0x2A4000
	077 Move X8, [X8+3848]
	078 Add X1, X19, 80
	079 Add X0, X19, 160
	080 Move W2, 80
	081 Move X8, [X8]
	082 Move X8, [X8+184]
	083 Move V1, [X8]
	084 NotImplemented "Instruction STRH not yet implemented."
	085 Move V0, [X23]
	086 Move [X23+8], D1
	087 Move [X23+16], D0
	088 Call 0x3EB2AC0
	089 Move X0, X20
	090 Move X1, X21
	091 Move X2, X19
	092 Call PointerInputModule.DeselectIfSelectionChanged, X0, X1, X2
	093 Move X27, 0x29C000
	094 Move X27, [X27+1432]
	095 Move X23, [X19+32]
	096 Move X0, [X27]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X23
	102 Move X1, X21
	103 Move X2, X31
	104 Call Object.op_Inequality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {114}
	109 Move X0, X20
	110 Move X1, X19
	111 Move X2, X21
	112 Call BaseInputModule.HandlePointerExitAndEnter, X0, X1, X2
	113 Move [X19+32], X21
	114 Move X0, X31
	115 Call Time.get_unscaledTime
	116 Move V1, [X19+308]
	117 Move X8, -53923840
	118 Move V9, [X8+1100]
	119 Subtract S0, S0, S1
	120 NotImplemented "Instruction FCMP not yet implemented."
	121 Move [X19+312], W31
	122 Move X26, 0x2C4000
	123 Move X26, [X26+2552]
	124 Move X0, [X26]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X23, 0x58A000
	130 Move W8, [X23+902]
	131 Compare W8, 0
	132 JumpIfNotEqual {138}
	133 Move X0, 0x2C4000
	134 Move X0, [X0+2552]
	135 Call 0x1C17CF4
	136 Move W8, 1
	137 Move [X23+902], W8
	138 Move X0, [X26]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X26]
	144 Move X9, 0x2F2000
	145 Move X8, [X0+184]
	146 Move X9, [X9+904]
	147 Move X0, X21
	148 Move X1, X19
	149 Move X2, [X8+24]
	150 Move X3, [X9]
	151 Call 0x21DE8A8, X0, X1, X2
	152 Move X8, 0x2F2000
	153 Move X8, [X8+952]
	154 Move X24, X0
	155 Move X0, X21
	156 Move X1, [X8]
	157 Call 0x21DEB64, X0
	158 Move X8, [X27]
	159 Move X23, X0
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X0, X24
	166 Move X1, X31
	167 Move X2, X31
	168 Call Object.op_Equality, X0, X1
	169 And W31, W0, 1
	170 Move X0, X31
	171 NotImplemented "Instruction CSEL not yet implemented."
	172 Call Time.get_unscaledTime
	173 Move X0, [X27]
	174 Move X25, [X19+48]
	175 Move V8, V0
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X24
	181 Move X1, X25
	182 Move X2, X31
	183 Call Object.op_Equality, X0, X1
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {193}
	188 Move V0, [X19+308]
	189 Subtract S0, S8, S0
	190 NotImplemented "Instruction FCMP not yet implemented."
	191 Move W8, [X19+312]
	192 Add W8, W8, 1
	193 Move W8, 1
	194 Move [X19+312], W8
	195 Move W8, 1
	196 Move [X19+312], W8
	197 Move [X19+308], S8
	198 Move X0, X19
	199 Move X1, X24
	200 Call PointerEventData.set_pointerPress, X0, X1
	201 Move [X19+56], X21
	202 Move [X19+72], X23
	203 Move [X19+308], S8
	204 Move X0, [X26]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X8, 0x2F2000
	210 Move X8, [X8+944]
	211 Move X0, X21
	212 Move X1, [X8]
	213 Call 0x21DEB64, X0
	214 Move [X19+64], X0
	215 Move X23, X0
	216 Move X0, [X27]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X23
	222 Move X1, X31
	223 Move X2, X31
	224 Call Object.op_Inequality, X0, X1
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {258}
	229 Move X0, [X26]
	230 Move X23, [X19+64]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X24, 0x58A000
	236 Move W8, [X24+903]
	237 Compare W8, 0
	238 JumpIfNotEqual {244}
	239 Move X0, 0x2C4000
	240 Move X0, [X0+2552]
	241 Call 0x1C17CF4
	242 Move W8, 1
	243 Move [X24+903], W8
	244 Move X0, [X26]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {250}
	248 Call 0x1C17DFC
	249 Move X0, [X26]
	250 Move X9, 0x2F2000
	251 Move X8, [X0+184]
	252 Move X9, [X9+920]
	253 Move X0, X23
	254 Move X1, X19
	255 Move X2, [X8+48]
	256 Move X3, [X9]
	257 Call 0x21DE088, X0, X1, X2
	258 Move TEMP, X22
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfNotEqual {477}
	262 Move X24, 0x2C4000
	263 Move X24, [X24+2552]
	264 Move X22, [X19+40]
	265 Move X0, [X24]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X23, 0x58A000
	271 Move W8, [X23+904]
	272 Compare W8, 0
	273 JumpIfNotEqual {279}
	274 Move X0, 0x2C4000
	275 Move X0, [X0+2552]
	276 Call 0x1C17CF4
	277 Move W8, 1
	278 Move [X23+904], W8
	279 Move X0, [X24]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {285}
	283 Call 0x1C17DFC
	284 Move X0, [X24]
	285 Move X9, 0x2F2000
	286 Move X8, [X0+184]
	287 Move X9, [X9+936]
	288 Move X0, X22
	289 Move X1, X19
	290 Move X2, [X8+32]
	291 Move X3, [X9]
	292 Call 0x21DE088, X0, X1, X2
	293 Move X8, 0x2F2000
	294 Move X8, [X8+952]
	295 Move X0, X21
	296 Move X1, [X8]
	297 Call 0x21DEB64, X0
	298 Move X25, 0x29C000
	299 Move X25, [X25+1432]
	300 Move X23, [X19+72]
	301 Move X22, X0
	302 Move X8, [X25]
	303 Move W9, [X8+224]
	304 Compare W9, 0
	305 JumpIfNotEqual {308}
	306 Move X0, X8
	307 Call 0x1C17DFC
	308 Move X0, X23
	309 Move X1, X22
	310 Move X2, X31
	311 Call Object.op_Equality, X0, X1
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {348}
	316 Move W8, [X19+248]
	317 Compare W8, 0
	318 JumpIfEqual {348}
	319 Move X0, [X24]
	320 Move X22, [X19+72]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X23, 0x58A000
	326 Move W8, [X23+905]
	327 Compare W8, 0
	328 JumpIfNotEqual {334}
	329 Move X0, 0x2C4000
	330 Move X0, [X0+2552]
	331 Call 0x1C17CF4
	332 Move W8, 1
	333 Move [X23+905], W8
	334 Move X0, [X24]
	335 Move W8, [X0+224]
	336 Compare W8, 0
	337 JumpIfNotEqual {340}
	338 Call 0x1C17DFC
	339 Move X0, [X24]
	340 Move X9, 0x2F2000
	341 Move X8, [X0+184]
	342 Move X9, [X9+928]
	343 Move X0, X22
	344 Move X1, X19
	345 Move X2, [X8+40]
	346 Move X3, [X9]
	347 Call 0x21DE088, X0, X1, X2
	348 Move X0, [X25]
	349 Move X22, [X19+64]
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X22
	355 Move X1, X31
	356 Move X2, X31
	357 Call Object.op_Inequality, X0, X1
	358 Move TEMP, X0
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {393}
	362 Move W8, [X19+325]
	363 Compare W8, 0
	364 JumpIfEqual {393}
	365 Move X0, [X24]
	366 Move W8, [X0+224]
	367 Compare W8, 0
	368 JumpIfNotEqual {370}
	369 Call 0x1C17DFC
	370 Move X22, 0x58A000
	371 Move W8, [X22+906]
	372 Compare W8, 0
	373 JumpIfNotEqual {379}
	374 Move X0, 0x2C4000
	375 Move X0, [X0+2552]
	376 Call 0x1C17CF4
	377 Move W8, 1
	378 Move [X22+906], W8
	379 Move X0, [X24]
	380 Move W8, [X0+224]
	381 Compare W8, 0
	382 JumpIfNotEqual {385}
	383 Call 0x1C17DFC
	384 Move X0, [X24]
	385 Move X9, 0x2F2000
	386 Move X8, [X0+184]
	387 Move X9, [X9+896]
	388 Move X0, X21
	389 Move X1, X19
	390 Move X2, [X8+80]
	391 Move X3, [X9]
	392 Call 0x21DE8A8, X0, X1, X2
	393 Move X0, X19
	394 Move X1, X31
	395 Move [X19+248], W31
	396 Call PointerEventData.set_pointerPress, X0, X1
	397 Move [X19+56], X31
	398 Move [X19+72], X31
	399 Move X0, [X25]
	400 Move X21, [X19+64]
	401 Move W8, [X0+224]
	402 Compare W8, 0
	403 JumpIfNotEqual {405}
	404 Call 0x1C17DFC
	405 Move X0, X21
	406 Move X1, X31
	407 Move X2, X31
	408 Call Object.op_Inequality, X0, X1
	409 Move TEMP, X0
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfNotEqual {445}
	413 Move W8, [X19+325]
	414 Compare W8, 0
	415 JumpIfEqual {445}
	416 Move X0, [X24]
	417 Move X21, [X19+64]
	418 Move W8, [X0+224]
	419 Compare W8, 0
	420 JumpIfNotEqual {422}
	421 Call 0x1C17DFC
	422 Move X22, 0x58A000
	423 Move W8, [X22+907]
	424 Compare W8, 0
	425 JumpIfNotEqual {431}
	426 Move X0, 0x2C4000
	427 Move X0, [X0+2552]
	428 Call 0x1C17CF4
	429 Move W8, 1
	430 Move [X22+907], W8
	431 Move X0, [X24]
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {437}
	435 Call 0x1C17DFC
	436 Move X0, [X24]
	437 Move X9, 0x2F2000
	438 Move X8, [X0+184]
	439 Move X9, [X9+912]
	440 Move X0, X21
	441 Move X1, X19
	442 Move X2, [X8+72]
	443 Move X3, [X9]
	444 Call 0x21DE088, X0, X1, X2
	445 Move [X19+325], W31
	446 Move [X19+64], X31
	447 Move X0, [X24]
	448 Move X21, [X19+32]
	449 Move W8, [X0+224]
	450 Compare W8, 0
	451 JumpIfNotEqual {453}
	452 Call 0x1C17DFC
	453 Move X22, 0x58A000
	454 Move W8, [X22+900]
	455 Compare W8, 0
	456 JumpIfNotEqual {462}
	457 Move X0, 0x2C4000
	458 Move X0, [X0+2552]
	459 Call 0x1C17CF4
	460 Move W8, 1
	461 Move [X22+900], W8
	462 Move X0, [X24]
	463 Move W8, [X0+224]
	464 Compare W8, 0
	465 JumpIfNotEqual {468}
	466 Call 0x1C17DFC
	467 Move X0, [X24]
	468 Move X9, 0x313000
	469 Move X8, [X0+184]
	470 Move X9, [X9+3200]
	471 Move X0, X21
	472 Move X1, X19
	473 Move X2, [X8+16]
	474 Move X3, [X9]
	475 Call 0x21DE8A8, X0, X1, X2
	476 Move [X19+32], X31
	477 Move [X20+144], X19
	478 Move X20, [X31+80]
	479 Move X19, [X31+88]
	480 Move X22, [X31+64]
	481 Move X21, [X31+72]
	482 Move X24, [X31+48]
	483 Move X23, [X31+56]
	484 Move X26, [X31+32]
	485 Move X25, [X31+40]
	486 Move X30, [X31+16]
	487 Move X27, [X31+24]
	488 Move D9, [X31+96]
	489 Move D8, [X31+104]
	490 Return 
	491 Call 0x1C17F20

Method: System.Boolean SendSubmitEventToSelectedObject()

Disassembly:
	0x03E587A8 AND W8, W1, 0x1
	0x03E587AC STRB W8, [X0 + 0x80]
	0x03E587B0 RET
	0x03E587B4 STP X30, X23, [X31 - 0x30]!
	0x03E587B8 STP X22, X21, [X31 + 0x10]
	0x03E587BC STP X20, X19, [X31 + 0x20]
	0x03E587C0 ADRP X20, 0x590000
	0x03E587C4 LDRB W8, [X20 + 0x8BC]
	0x03E587C8 MOV X19, X0
	0x03E587CC TBNZ X8, 0x0, 0x3E587FC
	0x03E587D0 ADRP X0, 0x2F1000
	0x03E587D4 LDR X0, [X0 + 0x390]
	0x03E587D8 BL 0x1C16CF4
	0x03E587DC ADRP X0, 0x2C3000
	0x03E587E0 LDR X0, [X0 + 0x9F8]
	0x03E587E4 BL 0x1C16CF4
	0x03E587E8 ADRP X0, 0x29B000
	0x03E587EC LDR X0, [X0 + 0x598]
	0x03E587F0 BL 0x1C16CF4
	0x03E587F4 MOVZ W8, 0x1
	0x03E587F8 STRB W8, [X20 + 0x8BC]
	0x03E587FC LDR X8, [X19 + 0x38]
	0x03E58800 CBZ X8, 0x3E58900
	0x03E58804 LDRB W8, [X8 + 0x48]
	0x03E58808 CBNZ W8, 0x3E588C8
	0x03E5880C LDR X8, [X19 + 0x78]
	0x03E58810 CBZ X8, 0x3E588C4
	0x03E58814 ADRP X9, 0x29B000
	0x03E58818 LDR X9, [X9 + 0x598]
	0x03E5881C LDR X20, [X8 + 0x40]
	0x03E58820 LDR X0, [X9]
	0x03E58824 LDR W9, [X0 + 0xE0]
	0x03E58828 CBNZ W9, 0x3E58830
	0x03E5882C BL 0x1C16DFC
	0x03E58830 MOV X0, X20
	0x03E58834 MOV X1, X31
	0x03E58838 MOV X2, X31
	0x03E5883C BL 0x3C354F8
	0x03E58840 TBZ X0, 0x0, 0x3E588C4
	0x03E58844 LDR X20, [X19 + 0x78]
	0x03E58848 CBZ X20, 0x3E58900
	0x03E5884C LDRB W8, [X20 + 0x145]
	0x03E58850 CBZ W8, 0x3E588C4
	0x03E58854 ADRP X22, 0x2C3000
	0x03E58858 LDR X22, [X22 + 0x9F8]
	0x03E5885C LDR X21, [X20 + 0x40]
	0x03E58860 LDR X0, [X22]
	0x03E58864 LDR W8, [X0 + 0xE0]
	0x03E58868 CBNZ W8, 0x3E58870
	0x03E5886C BL 0x1C16DFC
	0x03E58870 ADRP X23, 0x589000
	0x03E58874 LDRB W8, [X23 + 0x38B]
	0x03E58878 CBNZ W8, 0x3E58890
	0x03E5887C ADRP X0, 0x2C3000
	0x03E58880 LDR X0, [X0 + 0x9F8]
	0x03E58884 BL 0x1C16CF4
	0x03E58888 MOVZ W8, 0x1
	0x03E5888C STRB W8, [X23 + 0x38B]
	0x03E58890 LDR X0, [X22]
	0x03E58894 LDR W8, [X0 + 0xE0]
	0x03E58898 CBNZ W8, 0x3E588A4
	0x03E5889C BL 0x1C16DFC
	0x03E588A0 LDR X0, [X22]
	0x03E588A4 ADRP X9, 0x2F1000
	0x03E588A8 LDR X8, [X0 + 0xB8]
	0x03E588AC LDR X9, [X9 + 0x390]
	0x03E588B0 MOV X0, X21
	0x03E588B4 MOV X1, X20
	0x03E588B8 LDR X2, [X8 + 0x48]
	0x03E588BC LDR X3, [X9]
	0x03E588C0 BL 0x21DD088
	0x03E588C4 STR X31, [X19 + 0x78]
	0x03E588C8 LDR X8, [X19 + 0x70]
	0x03E588CC MOV X0, X19
	0x03E588D0 STR X8, [X19 + 0x68]
	0x03E588D4 BL 0x3E53F58
	0x03E588D8 CBZ X0, 0x3E58900
	0x03E588DC LDR X8, [X0]
	0x03E588E0 LDR X9, [X8 + 0x2D8]
	0x03E588E4 LDR X1, [X8 + 0x2E0]
	0x03E588E8 BLR X9
	0x03E588EC STP S0, S1, [X19 + 0x70]
	0x03E588F0 LDP X20, X19, [X31 + 0x20]
	0x03E588F4 LDP X22, X21, [X31 + 0x10]
	0x03E588F8 LDP X30, X23, [X31], #0x30
	0x03E588FC RET
	0x03E58900 BL 0x1C16F20
	0x03E58904 STR X30, [X31 - 0x10]!
	0x03E58908 LDRB W8, [X0 + 0x80]
	0x03E5890C CBZ W8, 0x3E5891C
	0x03E58910 MOVZ W0, 0x1
	0x03E58914 LDR X30, [X31], #0x10
	0x03E58918 RET
	0x03E5891C BL 0x3E53F58
	0x03E58920 CBZ X0, 0x3E58938
	0x03E58924 LDR X8, [X0]
	0x03E58928 LDR X2, [X8 + 0x2F8]
	0x03E5892C LDR X1, [X8 + 0x300]
	0x03E58930 LDR X30, [X31], #0x10
	0x03E58934 BR X2
	0x03E58938 BL 0x1C16F20
	0x03E5893C STR X30, [X31 - 0x20]!
	0x03E58940 STP X20, X19, [X31 + 0x10]
	0x03E58944 MOV X19, X0
	0x03E58948 BL 0x3E5512C
	0x03E5894C TBZ X0, 0x0, 0x3E58960
	0x03E58950 LDRB W8, [X19 + 0x80]
	0x03E58954 CBZ W8, 0x3E58974
	0x03E58958 MOVZ W8, 0x1
	0x03E5895C B 0x3E58964
	0x03E58960 MOV W8, W31
	0x03E58964 LDP X20, X19, [X31 + 0x10]
	0x03E58968 AND W0, W8, 0x1
	0x03E5896C LDR X30, [X31], #0x20
	0x03E58970 RET
	0x03E58974 MOV X0, X19
	0x03E58978 BL 0x3E589E0
	0x03E5897C MOV W20, W0
	0x03E58980 MOV X0, X19
	0x03E58984 BL 0x3E53F58
	0x03E58988 CBZ X0, 0x3E589DC
	0x03E5898C LDR X8, [X0]
	0x03E58990 TBZ X20, 0x0, 0x3E589C4
	0x03E58994 LDR X9, [X8 + 0x2A8]
	0x03E58998 LDR X2, [X8 + 0x2B0]
	0x03E5899C MOV W1, W31
	0x03E589A0 BLR X9
	0x03E589A4 LDP D1, D0, [X19 + 0x68]
	0x03E589A8 FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x03E589B0 FADDP S0, V0.2S
	0x03E589B4 FCMP S0, 0x0
	0x03E589B8 CSET W8, GT

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x591000
	008 Move W8, [X19+2231]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2F2000
	015 Move X0, [X0+1048]
	016 Call 0x1C17CF4
	017 Move X0, 0x2F2000
	018 Move X0, [X0+1064]
	019 Call 0x1C17CF4
	020 Move X0, 0x2C4000
	021 Move X0, [X0+2552]
	022 Call 0x1C17CF4
	023 Move X0, 0x29C000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+2231], W8
	028 Move X8, [X20+56]
	029 Compare X8, 0
	030 JumpIfEqual {168}
	031 Move X9, 0x29C000
	032 Move X9, [X9+1432]
	033 Move X19, [X8+64]
	034 Move X0, [X9]
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {55}
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move W0, W31
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0
	055 Move X8, [X20]
	056 Move X0, X20
	057 Move X9, [X8+616]
	058 Move X1, [X8+624]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X0
	061 Move X0, X20
	062 Call BaseInputModule.get_input, X0
	063 Compare X0, 0
	064 JumpIfEqual {168}
	065 Move X8, [X0]
	066 Move X1, [X20+168]
	067 Move X9, [X8+824]
	068 Move X2, [X8+832]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {108}
	074 Move X8, [X20+56]
	075 Compare X8, 0
	076 JumpIfEqual {168}
	077 Move X22, 0x2C4000
	078 Move X22, [X22+2552]
	079 Move X21, [X8+64]
	080 Move X0, [X22]
	081 Move W9, [X0+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X23, 0x58A000
	086 Move W8, [X23+914]
	087 Compare W8, 0
	088 JumpIfNotEqual {94}
	089 Move X0, 0x2C4000
	090 Move X0, [X0+2552]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X23+914], W8
	094 Move X0, [X22]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X22]
	100 Move X9, 0x2F2000
	101 Move X8, [X0+184]
	102 Move X9, [X9+1064]
	103 Move X0, X21
	104 Move X1, X19
	105 Move X2, [X8+128]
	106 Move X3, [X9]
	107 Call 0x21DE088, X0, X1, X2
	108 Move X0, X20
	109 Call BaseInputModule.get_input, X0
	110 Compare X0, 0
	111 JumpIfEqual {168}
	112 Move X8, [X0]
	113 Move X1, [X20+176]
	114 Move X9, [X8+824]
	115 Move X2, [X8+832]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {155}
	121 Move X8, [X20+56]
	122 Compare X8, 0
	123 JumpIfEqual {168}
	124 Move X21, 0x2C4000
	125 Move X21, [X21+2552]
	126 Move X20, [X8+64]
	127 Move X0, [X21]
	128 Move W9, [X0+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X22, 0x58A000
	133 Move W8, [X22+913]
	134 Compare W8, 0
	135 JumpIfNotEqual {141}
	136 Move X0, 0x2C4000
	137 Move X0, [X0+2552]
	138 Call 0x1C17CF4
	139 Move W8, 1
	140 Move [X22+913], W8
	141 Move X0, [X21]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X21]
	147 Move X9, 0x2F2000
	148 Move X8, [X0+184]
	149 Move X9, [X9+1048]
	150 Move X0, X20
	151 Move X1, X19
	152 Move X2, [X8+136]
	153 Move X3, [X9]
	154 Call 0x21DE088, X0, X1, X2
	155 Compare X19, 0
	156 JumpIfEqual {168}
	157 Move X8, [X19]
	158 Move X0, X19
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X22, [X31+16]
	162 Move X21, [X31+24]
	163 Move X2, [X8+408]
	164 Move X1, [X8+416]
	165 Move X30, [X31+48]
	166 Move X23, [X31+56]
	167 CallNoReturn X2
	168 Call 0x1C17F20

Method: UnityEngine.Vector2 GetRawMoveVector()

Disassembly:
	0x03E59050 LDR X0, [X0 + 0x9F8]
	0x03E59054 BL 0x1C16CF4
	0x03E59058 MOVZ W8, 0x1
	0x03E5905C STRB W8, [X23 + 0x388]
	0x03E59060 LDR X0, [X24]
	0x03E59064 LDR W8, [X0 + 0xE0]
	0x03E59068 CBNZ W8, 0x3E59074
	0x03E5906C BL 0x1C16DFC
	0x03E59070 LDR X0, [X24]
	0x03E59074 ADRP X9, 0x2F0000
	0x03E59078 LDR X8, [X0 + 0xB8]
	0x03E5907C LDR X9, [X9 + 0x3A8]
	0x03E59080 MOV X0, X22
	0x03E59084 MOV X1, X19
	0x03E59088 LDR X2, [X8 + 0x20]
	0x03E5908C LDR X3, [X9]
	0x03E59090 BL 0x21DD088
	0x03E59094 ADRP X8, 0x2F0000
	0x03E59098 LDR X8, [X8 + 0x3B8]
	0x03E5909C MOV X0, X21
	0x03E590A0 LDR X1, [X8]
	0x03E590A4 BL 0x21DDB64
	0x03E590A8 ADRP X25, 0x29A000
	0x03E590AC LDR X25, [X25 + 0x598]
	0x03E590B0 LDR X23, [X19 + 0x28]
	0x03E590B4 MOV X22, X0
	0x03E590B8 LDR X8, [X25]
	0x03E590BC LDR W9, [X8 + 0xE0]
	0x03E590C0 CBNZ W9, 0x3E590CC
	0x03E590C4 MOV X0, X8
	0x03E590C8 BL 0x1C16DFC
	0x03E590CC MOV X0, X23
	0x03E590D0 MOV X1, X22
	0x03E590D4 MOV X2, X31
	0x03E590D8 BL 0x3C3883C
	0x03E590DC TBZ X0, 0x0, 0x3E59154
	0x03E590E0 LDRB W8, [X19 + 0xF8]
	0x03E590E4 CBZ W8, 0x3E59154
	0x03E590E8 LDR X0, [X24]
	0x03E590EC LDR X21, [X19 + 0x28]
	0x03E590F0 LDR W8, [X0 + 0xE0]
	0x03E590F4 CBNZ W8, 0x3E590FC
	0x03E590F8 BL 0x1C16DFC
	0x03E590FC ADRP X22, 0x588000
	0x03E59100 LDRB W8, [X22 + 0x389]
	0x03E59104 CBNZ W8, 0x3E5911C
	0x03E59108 ADRP X0, 0x2C2000
	0x03E5910C LDR X0, [X0 + 0x9F8]
	0x03E59110 BL 0x1C16CF4
	0x03E59114 MOVZ W8, 0x1
	0x03E59118 STRB W8, [X22 + 0x389]
	0x03E5911C LDR X0, [X24]
	0x03E59120 LDR W8, [X0 + 0xE0]
	0x03E59124 CBNZ W8, 0x3E59130
	0x03E59128 BL 0x1C16DFC
	0x03E5912C LDR X0, [X24]
	0x03E59130 ADRP X9, 0x2F0000
	0x03E59134 LDR X8, [X0 + 0xB8]
	0x03E59138 LDR X9, [X9 + 0x3A0]
	0x03E5913C MOV X0, X21
	0x03E59140 MOV X1, X19
	0x03E59144 LDR X2, [X8 + 0x28]
	0x03E59148 LDR X3, [X9]
	0x03E5914C BL 0x21DD088
	0x03E59150 B 0x3E591E8
	0x03E59154 LDR X0, [X25]
	0x03E59158 LDR X22, [X19 + 0x40]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x581000
	007 Move W8, [X20+1935]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x2A3000
	012 Move X0, [X0+3848]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1935], W8
	016 Move X0, X19
	017 Call BaseInputModule.get_input, X0
	018 Compare X0, 0
	019 JumpIfEqual {78}
	020 Move X8, [X0]
	021 Move X1, [X19+152]
	022 Move X9, [X8+808]
	023 Move X2, [X8+816]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, X19
	026 Move V8, V0
	027 Call BaseInputModule.get_input, X0
	028 Compare X0, 0
	029 JumpIfEqual {78}
	030 Move X8, [X0]
	031 Move X1, [X19+160]
	032 Move X9, [X8+808]
	033 Move X2, [X8+816]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X0, X19
	036 Move V9, V0
	037 Call BaseInputModule.get_input, X0
	038 Compare X0, 0
	039 JumpIfEqual {78}
	040 Move X8, [X0]
	041 Move X1, [X19+152]
	042 Move X9, [X8+824]
	043 Move X2, [X8+832]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {54}
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move S0, -1
	051 NotImplemented "Instruction FCSEL not yet implemented."
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move S8, 1
	054 Move X0, X19
	055 Call BaseInputModule.get_input, X0
	056 Compare X0, 0
	057 JumpIfEqual {78}
	058 Move X8, [X0]
	059 Move X1, [X19+160]
	060 Move X9, [X8+824]
	061 Move X2, [X8+832]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move S0, -1
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X30, [X31+16]
	069 Move S1, 1
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 NotImplemented "Instruction FCSEL not yet implemented."
	072 And W31, W0, 1
	073 NotImplemented "Instruction FCSEL not yet implemented."
	074 Move V0, V8
	075 Move D9, [X31+48]
	076 Move D8, [X31+56]
	077 Return X0
	078 Call 0x1C17F20

Method: System.Boolean SendMoveEventToSelectedObject()

Disassembly:
	0x03E58548 ADRP X23, 0x589000
	0x03E5854C LDRB W8, [X23 + 0x386]
	0x03E58550 CBNZ W8, 0x3E58568
	0x03E58554 ADRP X0, 0x2C3000
	0x03E58558 LDR X0, [X0 + 0x9F8]
	0x03E5855C BL 0x1C16CF4
	0x03E58560 MOVZ W8, 0x1
	0x03E58564 STRB W8, [X23 + 0x386]
	0x03E58568 LDR X0, [X26]
	0x03E5856C LDR W8, [X0 + 0xE0]
	0x03E58570 CBNZ W8, 0x3E5857C
	0x03E58574 BL 0x1C16DFC
	0x03E58578 LDR X0, [X26]
	0x03E5857C ADRP X9, 0x2F1000
	0x03E58580 LDR X8, [X0 + 0xB8]
	0x03E58584 LDR X9, [X9 + 0x388]
	0x03E58588 MOV X0, X22
	0x03E5858C MOV X1, X21
	0x03E58590 LDR X2, [X8 + 0x18]
	0x03E58594 LDR X3, [X9]
	0x03E58598 BL 0x21DD8A8
	0x03E5859C ADRP X8, 0x2F1000
	0x03E585A0 LDR X8, [X8 + 0x3B8]
	0x03E585A4 MOV X24, X0
	0x03E585A8 MOV X0, X22
	0x03E585AC LDR X1, [X8]
	0x03E585B0 BL 0x21DDB64
	0x03E585B4 ADRP X27, 0x29B000
	0x03E585B8 LDR X27, [X27 + 0x598]
	0x03E585BC MOV X23, X0
	0x03E585C0 LDR X8, [X27]
	0x03E585C4 LDR W9, [X8 + 0xE0]
	0x03E585C8 CBNZ W9, 0x3E585D4
	0x03E585CC MOV X0, X8
	0x03E585D0 BL 0x1C16DFC
	0x03E585D4 MOV X0, X24
	0x03E585D8 MOV X1, X31
	0x03E585DC MOV X2, X31
	0x03E585E0 BL 0x3C3883C
	0x03E585E4 ANDS W31, W0, 0x1
	0x03E585E8 MOV X0, X31
	0x03E585EC CSEL X24, X23, X24, NE
	0x03E585F0 BL 0x3C3C764
	0x03E585F4 LDR X0, [X27]
	0x03E585F8 LDR X25, [X21 + 0x30]
	0x03E585FC MOV V8.16B, V0.16B
	0x03E58600 LDR W8, [X0 + 0xE0]
	0x03E58604 CBNZ W8, 0x3E5860C
	0x03E58608 BL 0x1C16DFC
	0x03E5860C MOV X0, X24
	0x03E58610 MOV X1, X25
	0x03E58614 MOV X2, X31
	0x03E58618 BL 0x3C3883C
	0x03E5861C TBZ X0, 0x0, 0x3E5863C
	0x03E58620 LDR V0, [X21 + 0x134]
	0x03E58624 FSUB S0, S8, S0
	0x03E58628 FCMP S0, S9
	0x03E5862C B.PL 0x3E58648
	0x03E58630 LDR W8, [X21 + 0x138]
	0x03E58634 ADD W8, W8, 0x1
	0x03E58638 B 0x3E5864C
	0x03E5863C MOVZ W8, 0x1
	0x03E58640 STR W8, [X21 + 0x138]
	0x03E58644 B 0x3E58654
	0x03E58648 MOVZ W8, 0x1
	0x03E5864C STR W8, [X21 + 0x138]
	0x03E58650 STR S8, [X21 + 0x134]
	0x03E58654 MOV X0, X21
	0x03E58658 MOV X1, X24
	0x03E5865C BL 0x3E4F3AC
	0x03E58660 STR X22, [X21 + 0x38]
	0x03E58664 STR X23, [X21 + 0x48]
	0x03E58668 STR S8, [X21 + 0x134]
	0x03E5866C LDR X0, [X26]
	0x03E58670 LDR W8, [X0 + 0xE0]
	0x03E58674 CBNZ W8, 0x3E5867C
	0x03E58678 BL 0x1C16DFC
	0x03E5867C ADRP X8, 0x2F1000
	0x03E58680 LDR X8, [X8 + 0x3B0]
	0x03E58684 MOV X0, X22
	0x03E58688 LDR X1, [X8]
	0x03E5868C BL 0x21DDB64
	0x03E58690 STR X0, [X21 + 0x40]
	0x03E58694 MOV X23, X0
	0x03E58698 LDR X0, [X27]
	0x03E5869C LDR W8, [X0 + 0xE0]
	0x03E586A0 CBNZ W8, 0x3E586A8
	0x03E586A4 BL 0x1C16DFC
	0x03E586A8 MOV X0, X23
	0x03E586AC MOV X1, X31
	0x03E586B0 MOV X2, X31
	0x03E586B4 BL 0x3C354F8
	0x03E586B8 TBZ X0, 0x0, 0x3E58724
	0x03E586BC LDR X0, [X26]
	0x03E586C0 LDR X23, [X21 + 0x40]
	0x03E586C4 LDR W8, [X0 + 0xE0]
	0x03E586C8 CBNZ W8, 0x3E586D0
	0x03E586CC BL 0x1C16DFC
	0x03E586D0 ADRP X24, 0x589000
	0x03E586D4 LDRB W8, [X24 + 0x387]
	0x03E586D8 CBNZ W8, 0x3E586F0
	0x03E586DC ADRP X0, 0x2C3000
	0x03E586E0 LDR X0, [X0 + 0x9F8]
	0x03E586E4 BL 0x1C16CF4
	0x03E586E8 MOVZ W8, 0x1
	0x03E586EC STRB W8, [X24 + 0x387]
	0x03E586F0 LDR X0, [X26]
	0x03E586F4 LDR W8, [X0 + 0xE0]
	0x03E586F8 CBNZ W8, 0x3E58704
	0x03E586FC BL 0x1C16DFC
	0x03E58700 LDR X0, [X26]
	0x03E58704 ADRP X9, 0x2F1000
	0x03E58708 LDR X8, [X0 + 0xB8]
	0x03E5870C LDR X9, [X9 + 0x398]
	0x03E58710 MOV X0, X23
	0x03E58714 MOV X1, X21
	0x03E58718 LDR X2, [X8 + 0x30]
	0x03E5871C LDR X3, [X9]
	0x03E58720 BL 0x21DD088
	0x03E58724 STR X21, [X19 + 0x90]
	0x03E58728 LDR W8, [X20 + 0x10]
	0x03E5872C SUB W8, W8, 0x1
	0x03E58730 CMP W8, 0x1
	0x03E58734 B.HI 0x3E58760
	0x03E58738 MOV X0, X19
	0x03E5873C MOV X1, X21
	0x03E58740 MOV X2, X22
	0x03E58744 LDP X20, X19, [X31 + 0x50]
	0x03E58748 LDP X22, X21, [X31 + 0x40]
	0x03E5874C LDP X24, X23, [X31 + 0x30]
	0x03E58750 LDP X26, X25, [X31 + 0x20]
	0x03E58754 LDP X30, X27, [X31 + 0x10]
	0x03E58758 LDP D9, D8, [X31], #0x60
	0x03E5875C B 0x3E56B48
	0x03E58760 LDP X20, X19, [X31 + 0x50]
	0x03E58764 LDP X22, X21, [X31 + 0x40]
	0x03E58768 LDP X24, X23, [X31 + 0x30]
	0x03E5876C LDP X26, X25, [X31 + 0x20]
	0x03E58770 LDP X30, X27, [X31 + 0x10]
	0x03E58774 LDP D9, D8, [X31], #0x60
	0x03E58778 RET
	0x03E5877C BL 0x1C16F20
	0x03E58780 LDR X0, [X0 + 0x88]
	0x03E58784 RET
	0x03E58788 B 0x3E564B0
	0x03E5878C LDRB W0, [X0 + 0x80]
	0x03E58790 RET
	0x03E58794 AND W8, W1, 0x1
	0x03E58798 STRB W8, [X0 + 0x80]
	0x03E5879C RET
	0x03E587A0 LDRB W0, [X0 + 0x80]
	0x03E587A4 RET

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x591000
	012 Move W8, [X20+2232]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2F2000
	019 Move X0, [X0+1056]
	020 Call 0x1C17CF4
	021 Move X0, 0x2C4000
	022 Move X0, [X0+2552]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2232], W8
	026 Move X0, X31
	027 Call Time.get_unscaledTime
	028 Move X0, X19
	029 Move V8, V0
	030 Call StandaloneInputModule.GetRawMoveVector, X0
	031 Move X20, 0x582000
	032 Move W8, [X20+1450]
	033 Move V9, V0
	034 Move V10, V1
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0x2A3000
	038 Move X0, [X0+1208]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+1450], W8
	042 Move X8, 0x2A3000
	043 Move X8, [X8+1208]
	044 Move X9, -53923840
	045 Move V1, [X9+576]
	046 NotImplemented "Instruction FABS not yet implemented."
	047 Move X8, [X8]
	048 Move S0, W31
	049 Move S4, 8
	050 NotImplemented "Instruction FMAXNM not yet implemented."
	051 Move X8, [X8+184]
	052 Multiply S5, S2, S1
	053 Move V3, [X8]
	054 Multiply S2, S3, S4
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction FCSEL not yet implemented."
	057 NotImplemented "Instruction FABD not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FABS not yet implemented."
	060 NotImplemented "Instruction FMAXNM not yet implemented."
	061 Multiply S1, S3, S1
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 NotImplemented "Instruction FABD not yet implemented."
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move [X19+116], W31
	067 Move S0, [X19+108]
	068 Move S1, [X19+112]
	069 Multiply S0, S9, S0
	070 Multiply S1, S10, S1
	071 Add S11, S0, S1
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move W8, [X19+116]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move V0, [X19+104]
	076 Move V1, [X19+188]
	077 Add S0, S0, S1
	078 Move V0, [X19+184]
	079 Move V1, [X19+104]
	080 Move S2, 1
	081 NotImplemented "Instruction FDIV not yet implemented."
	082 Add S0, S1, S0
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 Move X8, [X19]
	085 Move X0, X19
	086 Move V0, V9
	087 Move V1, V10
	088 Move X9, [X8+600]
	089 Move X1, [X8+608]
	090 Move X8, -53923840
	091 Move V2, [X8+144]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X0, 0
	094 JumpIfEqual {168}
	095 Move W8, [X0+40]
	096 Move X20, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X19+116], W31
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X30, [X31+32]
	104 Move X23, [X31+40]
	105 Move D9, [X31+16]
	106 Move D8, [X31+24]
	107 Move W0, W31
	108 Move D11, [X31+80]
	109 Move D10, [X31+88]
	110 Return X0
	111 Move X8, [X19+56]
	112 Compare X8, 0
	113 JumpIfEqual {168}
	114 Move X22, 0x2C4000
	115 Move X22, [X22+2552]
	116 Move X21, [X8+64]
	117 Move X0, [X22]
	118 Move W9, [X0+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X23, 0x58A000
	123 Move W8, [X23+912]
	124 Compare W8, 0
	125 JumpIfNotEqual {131}
	126 Move X0, 0x2C4000
	127 Move X0, [X0+2552]
	128 Call 0x1C17CF4
	129 Move W8, 1
	130 Move [X23+912], W8
	131 Move X0, [X22]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {137}
	135 Call 0x1C17DFC
	136 Move X0, [X22]
	137 Move X9, 0x2F2000
	138 Move X8, [X0+184]
	139 Move X9, [X9+1056]
	140 Move X0, X21
	141 Move X1, X20
	142 Move X2, [X8+120]
	143 Move X3, [X9]
	144 Call 0x21DE088, X0, X1, X2
	145 NotImplemented "Instruction FCMP not yet implemented."
	146 Move W8, [X19+116]
	147 Add W8, W8, 1
	148 Move W8, 1
	149 Move [X19+116], W8
	150 Move [X19+104], S8
	151 Move [X19+112], S9
	152 Move [X19+112], S10
	153 Move X8, [X20]
	154 Move X0, X20
	155 Move X20, [X31+64]
	156 Move X19, [X31+72]
	157 Move X22, [X31+48]
	158 Move X21, [X31+56]
	159 Move X2, [X8+408]
	160 Move X1, [X8+416]
	161 Move X30, [X31+32]
	162 Move X23, [X31+40]
	163 Move D9, [X31+16]
	164 Move D8, [X31+24]
	165 Move D11, [X31+80]
	166 Move D10, [X31+88]
	167 CallNoReturn X2
	168 Call 0x1C17F20

Method: System.Void ProcessMouseEvent()

Disassembly:
	0x03E58540 CBNZ W8, 0x3E58548
	0x03E58544 BL 0x1C16DFC

ISIL:
	001 Move W1, W31
	002 Call StandaloneInputModule.ProcessMouseEvent, X0, X1
	003 Return 

Method: System.Boolean ForceAutoSelect()

Disassembly:
	0x03E59404 MOV X2, X31
	0x03E59408 CSEL X8, X8, X9, NE

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void ProcessMouseEvent(System.Int32 id)

Disassembly:
	0x03E5915C LDR W8, [X0 + 0xE0]
	0x03E59160 CBNZ W8, 0x3E59168
	0x03E59164 BL 0x1C16DFC
	0x03E59168 MOV X0, X22
	0x03E5916C MOV X1, X31
	0x03E59170 MOV X2, X31
	0x03E59174 BL 0x3C354F8
	0x03E59178 TBZ X0, 0x0, 0x3E591E8
	0x03E5917C LDRB W8, [X19 + 0x145]
	0x03E59180 CBZ W8, 0x3E591E8
	0x03E59184 LDR X0, [X24]
	0x03E59188 LDR W8, [X0 + 0xE0]
	0x03E5918C CBNZ W8, 0x3E59194
	0x03E59190 BL 0x1C16DFC
	0x03E59194 ADRP X22, 0x588000
	0x03E59198 LDRB W8, [X22 + 0x38A]
	0x03E5919C CBNZ W8, 0x3E591B4
	0x03E591A0 ADRP X0, 0x2C2000
	0x03E591A4 LDR X0, [X0 + 0x9F8]
	0x03E591A8 BL 0x1C16CF4
	0x03E591AC MOVZ W8, 0x1
	0x03E591B0 STRB W8, [X22 + 0x38A]
	0x03E591B4 LDR X0, [X24]
	0x03E591B8 LDR W8, [X0 + 0xE0]
	0x03E591BC CBNZ W8, 0x3E591C8
	0x03E591C0 BL 0x1C16DFC
	0x03E591C4 LDR X0, [X24]
	0x03E591C8 ADRP X9, 0x2F0000
	0x03E591CC LDR X8, [X0 + 0xB8]
	0x03E591D0 LDR X9, [X9 + 0x380]
	0x03E591D4 MOV X0, X21
	0x03E591D8 MOV X1, X19
	0x03E591DC LDR X2, [X8 + 0x50]
	0x03E591E0 LDR X3, [X9]
	0x03E591E4 BL 0x21DD8A8
	0x03E591E8 MOV X0, X19
	0x03E591EC MOV X1, X31
	0x03E591F0 STRB W31, [X19 + 0xF8]
	0x03E591F4 BL 0x3E4F3AC
	0x03E591F8 STR X31, [X19 + 0x38]
	0x03E591FC LDR X0, [X25]
	0x03E59200 LDR X21, [X19 + 0x40]
	0x03E59204 LDR W8, [X0 + 0xE0]
	0x03E59208 CBNZ W8, 0x3E59210
	0x03E5920C BL 0x1C16DFC
	0x03E59210 MOV X0, X21
	0x03E59214 MOV X1, X31
	0x03E59218 MOV X2, X31
	0x03E5921C BL 0x3C354F8
	0x03E59220 TBZ X0, 0x0, 0x3E59294
	0x03E59224 LDRB W8, [X19 + 0x145]
	0x03E59228 CBZ W8, 0x3E59294
	0x03E5922C LDR X0, [X24]
	0x03E59230 LDR X21, [X19 + 0x40]
	0x03E59234 LDR W8, [X0 + 0xE0]
	0x03E59238 CBNZ W8, 0x3E59240
	0x03E5923C BL 0x1C16DFC
	0x03E59240 ADRP X22, 0x588000
	0x03E59244 LDRB W8, [X22 + 0x38B]
	0x03E59248 CBNZ W8, 0x3E59260
	0x03E5924C ADRP X0, 0x2C2000
	0x03E59250 LDR X0, [X0 + 0x9F8]
	0x03E59254 BL 0x1C16CF4
	0x03E59258 MOVZ W8, 0x1
	0x03E5925C STRB W8, [X22 + 0x38B]
	0x03E59260 LDR X0, [X24]
	0x03E59264 LDR W8, [X0 + 0xE0]
	0x03E59268 CBNZ W8, 0x3E59274
	0x03E5926C BL 0x1C16DFC
	0x03E59270 LDR X0, [X24]
	0x03E59274 ADRP X9, 0x2F0000
	0x03E59278 LDR X8, [X0 + 0xB8]
	0x03E5927C LDR X9, [X9 + 0x390]
	0x03E59280 MOV X0, X21
	0x03E59284 MOV X1, X19
	0x03E59288 LDR X2, [X8 + 0x48]
	0x03E5928C LDR X3, [X9]
	0x03E59290 BL 0x21DD088
	0x03E59294 STRB W31, [X19 + 0x145]
	0x03E59298 STR X31, [X19 + 0x40]
	0x03E5929C LDR X0, [X24]
	0x03E592A0 LDR X21, [X19 + 0x20]
	0x03E592A4 LDR W8, [X0 + 0xE0]
	0x03E592A8 CBNZ W8, 0x3E592B0
	0x03E592AC BL 0x1C16DFC
	0x03E592B0 ADRP X22, 0x588000
	0x03E592B4 LDRB W8, [X22 + 0x384]
	0x03E592B8 CBNZ W8, 0x3E592D0
	0x03E592BC ADRP X0, 0x2C2000
	0x03E592C0 LDR X0, [X0 + 0x9F8]
	0x03E592C4 BL 0x1C16CF4
	0x03E592C8 MOVZ W8, 0x1
	0x03E592CC STRB W8, [X22 + 0x384]
	0x03E592D0 LDR X0, [X24]
	0x03E592D4 LDR W8, [X0 + 0xE0]
	0x03E592D8 CBNZ W8, 0x3E592E4
	0x03E592DC BL 0x1C16DFC
	0x03E592E0 LDR X0, [X24]
	0x03E592E4 ADRP X9, 0x312000
	0x03E592E8 LDR X8, [X0 + 0xB8]
	0x03E592EC LDR X9, [X9 + 0xC80]
	0x03E592F0 MOV X0, X21
	0x03E592F4 MOV X1, X19
	0x03E592F8 LDR X2, [X8 + 0x10]
	0x03E592FC LDR X3, [X9]
	0x03E59300 BL 0x21DD8A8
	0x03E59304 STR X31, [X19 + 0x20]
	0x03E59308 STR X19, [X20 + 0x78]
	0x03E5930C LDP X20, X19, [X31 + 0x40]
	0x03E59310 LDP X22, X21, [X31 + 0x30]
	0x03E59314 LDP X24, X23, [X31 + 0x20]
	0x03E59318 LDP X26, X25, [X31 + 0x10]
	0x03E5931C LDR X30, [X31 + 0x8]
	0x03E59320 LDR V8, [X31], #0x50
	0x03E59324 RET
	0x03E59328 BL 0x1C16F20
	0x03E5932C B 0x3E55F9C
	0x03E59330 SUB X31, X31, 0x60
	0x03E59334 STP X30, X21, [X31 + 0x40]
	0x03E59338 STP X20, X19, [X31 + 0x50]
	0x03E5933C ADRP X21, 0x58F000
	0x03E59340 ADRP X19, 0x29A000
	0x03E59344 LDRB W8, [X21 + 0x8BE]
	0x03E59348 LDR X19, [X19 + 0x8F0]
	0x03E5934C MOV X20, X0
	0x03E59350 TBNZ X8, 0x0, 0x3E593BC
	0x03E59354 ADRP X0, 0x312000
	0x03E59358 LDR X0, [X0 + 0xC08]
	0x03E5935C BL 0x1C16CF4
	0x03E59360 ADRP X0, 0x312000
	0x03E59364 LDR X0, [X0 + 0xC10]
	0x03E59368 BL 0x1C16CF4
	0x03E5936C ADRP X0, 0x312000
	0x03E59370 LDR X0, [X0 + 0xC18]
	0x03E59374 BL 0x1C16CF4
	0x03E59378 ADRP X0, 0x312000
	0x03E5937C LDR X0, [X0 + 0xC20]
	0x03E59380 BL 0x1C16CF4
	0x03E59384 ADRP X0, 0x312000
	0x03E59388 LDR X0, [X0 + 0xC88]
	0x03E5938C BL 0x1C16CF4
	0x03E59390 ADRP X0, 0x29A000
	0x03E59394 LDR X0, [X0 + 0x8F0]
	0x03E59398 BL 0x1C16CF4
	0x03E5939C ADRP X0, 0x312000
	0x03E593A0 LDR X0, [X0 + 0xC90]
	0x03E593A4 BL 0x1C16CF4
	0x03E593A8 ADRP X0, 0x312000
	0x03E593AC LDR X0, [X0 + 0xC98]
	0x03E593B0 BL 0x1C16CF4
	0x03E593B4 MOVZ W8, 0x1
	0x03E593B8 STRB W8, [X21 + 0x8BE]
	0x03E593BC LDR X0, [X19]
	0x03E593C0 MOVI V0.2D, 0x0
	0x03E593C4 STR X31, [X31 + 0x30]
	0x03E593C8 STP V0, V0, [X31 + 0x10]
	0x03E593CC STP X31, X31, [X31]
	0x03E593D0 BL 0x1C16F10
	0x03E593D4 MOV X1, X31
	0x03E593D8 MOV X19, X0
	0x03E593DC BL 0x3231AC4
	0x03E593E0 MOV X0, X20
	0x03E593E4 BL 0x3E589E0
	0x03E593E8 CBZ X19, 0x3E594F8
	0x03E593EC ADRP X8, 0x312000
	0x03E593F0 ADRP X9, 0x312000
	0x03E593F4 LDR X8, [X8 + 0xC98]
	0x03E593F8 LDR X9, [X9 + 0xC90]
	0x03E593FC ANDS W31, W0, 0x1
	0x03E59400 MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x590000
	008 Move W8, [X21+2233]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2F1000
	016 Move X0, [X0+984]
	017 Call 0x1C17CF4
	018 Move X0, 0x2F1000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move X0, 0x2C3000
	022 Move X0, [X0+2552]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2233], W8
	026 Move X8, [X20]
	027 Move X0, X20
	028 Move W1, W19
	029 Move X9, [X8+760]
	030 Move X2, [X8+768]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X0, 0
	033 JumpIfEqual {195}
	034 Move W1, W31
	035 Move X21, X0
	036 Call MouseState.GetButtonState, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {195}
	039 Move X19, [X0+24]
	040 Compare X19, 0
	041 JumpIfEqual {195}
	042 Move X8, [X19+24]
	043 Compare X8, 0
	044 JumpIfEqual {195}
	045 Move X8, [X8+80]
	046 Move X0, X20
	047 Move X1, X19
	048 Move [X20+136], X8
	049 Call StandaloneInputModule.ProcessMousePress, X0, X1
	050 Move X8, [X20]
	051 Move X1, [X19+24]
	052 Move X0, X20
	053 Move X9, [X8+776]
	054 Move X2, [X8+784]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X20]
	057 Move X1, [X19+24]
	058 Move X0, X20
	059 Move X9, [X8+792]
	060 Move X2, [X8+800]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W1, 1
	063 Move X0, X21
	064 Call MouseState.GetButtonState, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {195}
	067 Move X1, [X0+24]
	068 Move X0, X20
	069 Call StandaloneInputModule.ProcessMousePress, X0, X1
	070 Move W1, 1
	071 Move X0, X21
	072 Call MouseState.GetButtonState, X0, X1
	073 Compare X0, 0
	074 JumpIfEqual {195}
	075 Move X8, [X0+24]
	076 Compare X8, 0
	077 JumpIfEqual {195}
	078 Move X9, [X20]
	079 Move X1, [X8+24]
	080 Move X0, X20
	081 Move X8, [X9+792]
	082 Move X2, [X9+800]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move W1, 2
	085 Move X0, X21
	086 Call MouseState.GetButtonState, X0, X1
	087 Compare X0, 0
	088 JumpIfEqual {195}
	089 Move X1, [X0+24]
	090 Move X0, X20
	091 Call StandaloneInputModule.ProcessMousePress, X0, X1
	092 Move W1, 2
	093 Move X0, X21
	094 Call MouseState.GetButtonState, X0, X1
	095 Compare X0, 0
	096 JumpIfEqual {195}
	097 Move X8, [X0+24]
	098 Compare X8, 0
	099 JumpIfEqual {195}
	100 Move X9, [X20]
	101 Move X1, [X8+24]
	102 Move X0, X20
	103 Move X8, [X9+792]
	104 Move X2, [X9+800]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X19+24]
	107 Compare X8, 0
	108 JumpIfEqual {195}
	109 Move V0, [X8+316]
	110 Move V1, [X8+320]
	111 Move X20, 0x581000
	112 Move W8, [X20+1450]
	113 Multiply S0, S0, S0
	114 Multiply S1, S1, S1
	115 Add S8, S0, S1
	116 Compare W8, 0
	117 JumpIfNotEqual {123}
	118 Move X0, 0x2A2000
	119 Move X0, [X0+1208]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X20+1450], W8
	123 Move X8, 0x2A2000
	124 Move X8, [X8+1208]
	125 Move X9, -53927936
	126 Move V0, [X9+576]
	127 NotImplemented "Instruction FABS not yet implemented."
	128 Move X8, [X8]
	129 Move S2, W31
	130 NotImplemented "Instruction FMAXNM not yet implemented."
	131 Multiply S0, S1, S0
	132 Move X8, [X8+184]
	133 Move S1, 8
	134 Move V3, [X8]
	135 Multiply S1, S3, S1
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 NotImplemented "Instruction FCSEL not yet implemented."
	138 NotImplemented "Instruction FABD not yet implemented."
	139 NotImplemented "Instruction FCMP not yet implemented."
	140 Move X8, [X19+24]
	141 Compare X8, 0
	142 JumpIfEqual {195}
	143 Move X21, 0x2C3000
	144 Move X21, [X21+2552]
	145 Move X20, [X8+80]
	146 Move X0, [X21]
	147 Move W9, [X0+224]
	148 Compare W9, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X8, 0x2F1000
	152 Move X8, [X8+992]
	153 Move X0, X20
	154 Move X1, [X8]
	155 Call 0x21DEB64, X0
	156 Move X22, 0x589000
	157 Move W8, [X22+910]
	158 Move X19, [X19+24]
	159 Move X20, X0
	160 Compare W8, 0
	161 JumpIfNotEqual {167}
	162 Move X0, 0x2C3000
	163 Move X0, [X0+2552]
	164 Call 0x1C17CF4
	165 Move W8, 1
	166 Move [X22+910], W8
	167 Move X0, [X21]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {173}
	171 Call 0x1C17DFC
	172 Move X0, [X21]
	173 Move X9, 0x2F1000
	174 Move X8, [X0+184]
	175 Move X9, [X9+984]
	176 Move X0, X20
	177 Move X1, X19
	178 Move X2, [X8+88]
	179 Move X3, [X9]
	180 Move X20, [X31+32]
	181 Move X19, [X31+40]
	182 Move X22, [X31+16]
	183 Move X21, [X31+24]
	184 Move X30, [X31+8]
	185 Move V8, [X31+48]
	186 Call 0x21DE8A8, X0, X1, X2
	187 Return 
	188 Move X20, [X31+32]
	189 Move X19, [X31+40]
	190 Move X22, [X31+16]
	191 Move X21, [X31+24]
	192 Move X30, [X31+8]
	193 Move V8, [X31+48]
	194 Return 
	195 Call 0x1C17F20

Method: System.Boolean SendUpdateEventToSelectedObject()

Disassembly:
	0x03E58294 MOVZ W1, 0x2
	0x03E58298 MOV X0, X21
	0x03E5829C BL 0x3E56794
	0x03E582A0 CBZ X0, 0x3E58400
	0x03E582A4 LDR X8, [X0 + 0x18]
	0x03E582A8 CBZ X8, 0x3E58400
	0x03E582AC LDR X9, [X20]
	0x03E582B0 LDR X1, [X8 + 0x18]
	0x03E582B4 MOV X0, X20
	0x03E582B8 LDR X8, [X9 + 0x318]
	0x03E582BC LDR X2, [X9 + 0x320]
	0x03E582C0 BLR X8
	0x03E582C4 LDR X8, [X19 + 0x18]
	0x03E582C8 CBZ X8, 0x3E58400
	0x03E582CC LDR V0, [X8 + 0x13C]
	0x03E582D0 LDR V1, [X8 + 0x140]
	0x03E582D4 ADRP X20, 0x581000
	0x03E582D8 LDRB W8, [X20 + 0x5AA]
	0x03E582DC FMUL S0, S0, S0
	0x03E582E0 FMUL S1, S1, S1
	0x03E582E4 FADD S8, S0, S1
	0x03E582E8 CBNZ W8, 0x3E58300
	0x03E582EC ADRP X0, 0x2A2000
	0x03E582F0 LDR X0, [X0 + 0x4B8]
	0x03E582F4 BL 0x1C16CF4
	0x03E582F8 MOVZ W8, 0x1
	0x03E582FC STRB W8, [X20 + 0x5AA]
	0x03E58300 ADRP X8, 0x2A2000
	0x03E58304 LDR X8, [X8 + 0x4B8]
	0x03E58308 ADRP X9, 0xFFFFFFFFFCC92000
	0x03E5830C LDR V0, [X9 + 0x240]
	0x03E58310 FABS S1, S8
	0x03E58314 LDR X8, [X8]
	0x03E58318 FMOV S2, W31
	0x03E5831C FMAXNM S1, S1, S2
	0x03E58320 FMUL S0, S1, S0
	0x03E58324 LDR X8, [X8 + 0xB8]
	0x03E58328 FMOV S1, 8
	0x03E5832C LDR V3, [X8]
	0x03E58330 FMUL S1, S3, S1
	0x03E58334 FCMP S0, S1
	0x03E58338 FCSEL S0, S0, S1, GT
	0x03E5833C FABD S1, S2, S2
	0x03E58340 FCMP S1, S0
	0x03E58344 B.MI 0x3E583EC
	0x03E58348 LDR X8, [X19 + 0x18]
	0x03E5834C CBZ X8, 0x3E58400
	0x03E58350 ADRP X21, 0x2C3000
	0x03E58354 LDR X21, [X21 + 0x9F8]
	0x03E58358 LDR X20, [X8 + 0x50]
	0x03E5835C LDR X0, [X21]
	0x03E58360 LDR W9, [X0 + 0xE0]
	0x03E58364 CBNZ W9, 0x3E5836C
	0x03E58368 BL 0x1C16DFC
	0x03E5836C ADRP X8, 0x2F1000
	0x03E58370 LDR X8, [X8 + 0x3E0]
	0x03E58374 MOV X0, X20
	0x03E58378 LDR X1, [X8]
	0x03E5837C BL 0x21DDB64
	0x03E58380 ADRP X22, 0x589000
	0x03E58384 LDRB W8, [X22 + 0x38E]
	0x03E58388 LDR X19, [X19 + 0x18]
	0x03E5838C MOV X20, X0
	0x03E58390 CBNZ W8, 0x3E583A8
	0x03E58394 ADRP X0, 0x2C3000
	0x03E58398 LDR X0, [X0 + 0x9F8]
	0x03E5839C BL 0x1C16CF4
	0x03E583A0 MOVZ W8, 0x1
	0x03E583A4 STRB W8, [X22 + 0x38E]
	0x03E583A8 LDR X0, [X21]
	0x03E583AC LDR W8, [X0 + 0xE0]
	0x03E583B0 CBNZ W8, 0x3E583BC
	0x03E583B4 BL 0x1C16DFC
	0x03E583B8 LDR X0, [X21]
	0x03E583BC ADRP X9, 0x2F1000
	0x03E583C0 LDR X8, [X0 + 0xB8]
	0x03E583C4 LDR X9, [X9 + 0x3D8]
	0x03E583C8 MOV X0, X20
	0x03E583CC MOV X1, X19
	0x03E583D0 LDR X2, [X8 + 0x58]
	0x03E583D4 LDR X3, [X9]
	0x03E583D8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x591000
	007 Move W8, [X20+2234]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x2F2000
	014 Move X0, [X0+1072]
	015 Call 0x1C17CF4
	016 Move X0, 0x2C4000
	017 Move X0, [X0+2552]
	018 Call 0x1C17CF4
	019 Move X0, 0x29C000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2234], W8
	024 Move X8, [X19+56]
	025 Compare X8, 0
	026 JumpIfEqual {102}
	027 Move X9, 0x29C000
	028 Move X9, [X9+1432]
	029 Move X20, [X8+64]
	030 Move X0, [X9]
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {50}
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+48]
	049 Return X0
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move X9, [X8+616]
	053 Move X1, [X8+624]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X19+56]
	056 Compare X8, 0
	057 JumpIfEqual {102}
	058 Move X21, 0x2C4000
	059 Move X21, [X21+2552]
	060 Move X19, X0
	061 Move X20, [X8+64]
	062 Move X0, [X21]
	063 Move W9, [X0+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X22, 0x58A000
	068 Move W8, [X22+911]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x2C4000
	072 Move X0, [X0+2552]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X22+911], W8
	076 Move X0, [X21]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X21]
	082 Move X9, 0x2F2000
	083 Move X8, [X0+184]
	084 Move X9, [X9+1072]
	085 Move X0, X20
	086 Move X1, X19
	087 Move X2, [X8+96]
	088 Move X3, [X9]
	089 Call 0x21DE088, X0, X1, X2
	090 Compare X19, 0
	091 JumpIfEqual {102}
	092 Move X8, [X19]
	093 Move X0, X19
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X2, [X8+408]
	099 Move X1, [X8+416]
	100 Move X30, [X31+48]
	101 CallNoReturn X2
	102 Call 0x1C17F20

Method: System.Void ProcessMousePress(UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData data)

Disassembly:
	0x03E5940C LDR X1, [X8]
	0x03E59410 BL 0x32338A8
	0x03E59414 MOV X0, X20
	0x03E59418 BL 0x3E589E0
	0x03E5941C TBZ X0, 0x0, 0x3E59460
	0x03E59420 ADD X2, X31, 0x38
	0x03E59424 MOVN W1, 0x0
	0x03E59428 MOV X0, X20
	0x03E5942C MOV W3, W31
	0x03E59430 STR X31, [X31 + 0x38]
	0x03E59434 BL 0x3E55280
	0x03E59438 LDR X0, [X31 + 0x38]
	0x03E5943C CBZ X0, 0x3E594D8
	0x03E59440 LDR X8, [X0]
	0x03E59444 LDP X9, X1, [X8 + 0x168]
	0x03E59448 BLR X9
	0x03E5944C MOV X1, X0
	0x03E59450 MOV X0, X19
	0x03E59454 MOV X2, X31
	0x03E59458 BL 0x32338A8
	0x03E5945C B 0x3E594D8
	0x03E59460 LDR X0, [X20 + 0x58]
	0x03E59464 CBZ X0, 0x3E594F8
	0x03E59468 ADRP X8, 0x312000
	0x03E5946C LDR X8, [X8 + 0xC08]
	0x03E59470 LDR X1, [X8]
	0x03E59474 ADD X8, X31, 0x10
	0x03E59478 BL 0x2A13AB4
	0x03E5947C ADRP X20, 0x312000
	0x03E59480 ADRP X21, 0x312000
	0x03E59484 LDR X20, [X20 + 0xC18]
	0x03E59488 LDR X21, [X21 + 0xC88]
	0x03E5948C LDR X1, [X20]
	0x03E59490 ADD X0, X31, 0x10
	0x03E59494 BL 0x2BF5330
	0x03E59498 TBZ X0, 0x0, 0x3E594C4
	0x03E5949C LDR V0, [X31 + 0x2]
	0x03E594A0 LDR X1, [X21]
	0x03E594A4 STR V0, [X31]
	0x03E594A8 ADD X0, X31, 0x0
	0x03E594AC BL 0x2EDF4F0
	0x03E594B0 MOV X1, X0
	0x03E594B4 MOV X0, X19
	0x03E594B8 MOV X2, X31
	0x03E594BC BL 0x32338A8
	0x03E594C0 B 0x3E5948C
	0x03E594C4 ADRP X8, 0x312000
	0x03E594C8 LDR X8, [X8 + 0xC10]
	0x03E594CC ADD X0, X31, 0x10
	0x03E594D0 LDR X1, [X8]
	0x03E594D4 BL 0x2BF5448
	0x03E594D8 LDR X8, [X19]
	0x03E594DC MOV X0, X19
	0x03E594E0 LDP X9, X1, [X8 + 0x168]
	0x03E594E4 BLR X9
	0x03E594E8 LDP X20, X19, [X31 + 0x50]
	0x03E594EC LDP X30, X21, [X31 + 0x40]
	0x03E594F0 ADD X31, X31, 0x60
	0x03E594F4 RET
	0x03E594F8 BL 0x1C16F20
	0x03E594FC B 0x3E59504
	0x03E59500 B 0x3E59504
	0x03E59504 MOV X20, X0
	0x03E59508 CMP W1, 0x1
	0x03E5950C B.NE 0x3E59540
	0x03E59510 MOV X0, X20
	0x03E59514 BL 0x3EB1AD0
	0x03E59518 LDR X21, [X0]
	0x03E5951C BL 0x3EB1AE0
	0x03E59520 ADRP X8, 0x312000
	0x03E59524 LDR X8, [X8 + 0xC10]
	0x03E59528 ADD X0, X31, 0x10
	0x03E5952C LDR X1, [X8]
	0x03E59530 BL 0x2BF5448
	0x03E59534 CBZ X21, 0x3E594D8
	0x03E59538 MOV X0, X21
	0x03E5953C BL 0x1C16F18
	0x03E59540 MOV X21, X31
	0x03E59544 B 0x3E5954C
	0x03E59548 MOV X20, X0
	0x03E5954C ADRP X8, 0x312000
	0x03E59550 LDR X8, [X8 + 0xC10]
	0x03E59554 LDR X1, [X8]
	0x03E59558 ADD X0, X31, 0x10
	0x03E5955C BL 0x2BF5448
	0x03E59560 CBNZ X21, 0x3E5956C
	0x03E59564 MOV X0, X20
	0x03E59568 BL 0x1D2C690
	0x03E5956C MOV X0, X21
	0x03E59570 BL 0x1C16F18
	0x03E59574 BL 0x1990590
	0x03E59578 STP X30, X21, [X31 - 0x20]!
	0x03E5957C STP X20, X19, [X31 + 0x10]
	0x03E59580 ADRP X21, 0x58F000
	0x03E59584 ADRP X20, 0x312000
	0x03E59588 LDRB W8, [X21 + 0x8BF]
	0x03E5958C LDR X20, [X20 + 0x960]
	0x03E59590 MOV X19, X0
	0x03E59594 TBNZ X8, 0x0, 0x3E595C4
	0x03E59598 ADRP X0, 0x312000
	0x03E5959C LDR X0, [X0 + 0xCA0]
	0x03E595A0 BL 0x1C16CF4
	0x03E595A4 ADRP X0, 0x312000
	0x03E595A8 LDR X0, [X0 + 0xCA8]
	0x03E595AC BL 0x1C16CF4
	0x03E595B0 ADRP X0, 0x312000
	0x03E595B4 LDR X0, [X0 + 0x960]
	0x03E595B8 BL 0x1C16CF4
	0x03E595BC MOVZ W8, 0x1
	0x03E595C0 STRB W8, [X21 + 0x8BF]
	0x03E595C4 LDR X0, [X20]
	0x03E595C8 LDR W8, [X0 + 0xE0]
	0x03E595CC CBNZ W8, 0x3E595D8
	0x03E595D0 BL 0x1C16DFC
	0x03E595D4 LDR X0, [X20]
	0x03E595D8 LDR X8, [X0 + 0xB8]
	0x03E595DC LDR X0, [X8]
	0x03E595E0 CBZ X0, 0x3E59684
	0x03E595E4 ADRP X8, 0x312000
	0x03E595E8 LDR X8, [X8 + 0xCA8]
	0x03E595EC MOV X1, X19
	0x03E595F0 LDR X2, [X8]
	0x03E595F4 BL 0x301C318
	0x03E595F8 TBNZ X0, 0x0, 0x3E5965C
	0x03E595FC LDR X0, [X20]
	0x03E59600 LDR W8, [X0 + 0xE0]
	0x03E59604 CBNZ W8, 0x3E59610
	0x03E59608 BL 0x1C16DFC
	0x03E5960C LDR X0, [X20]
	0x03E59610 LDR X8, [X0 + 0xB8]
	0x03E59614 LDR X0, [X8]
	0x03E59618 CBZ X0, 0x3E59684
	0x03E5961C ADRP X9, 0x312000
	0x03E59620 LDR X9, [X9 + 0xCA0]
	0x03E59624 LDR W10, [X0 + 0x1C]
	0x03E59628 LDR X8, [X0 + 0x10]
	0x03E5962C LDR X9, [X9]
	0x03E59630 ADD W10, W10, 0x1
	0x03E59634 STR W10, [X0 + 0x1C]
	0x03E59638 CBZ X8, 0x3E59684
	0x03E5963C LDRSW X10, [X0 + 0x18]
	0x03E59640 LDR W11, [X8 + 0x18]
	0x03E59644 CMP W10, W11
	0x03E59648 B.CS 0x3E59668
	0x03E5964C ADD W9, W10, 0x1
	0x03E59650 ADD X8, X8, X10, 0x3, LSL
	0x03E59654 STR W9, [X0 + 0x18]
	0x03E59658 STR X19, [X8 + 0x20]
	0x03E5965C LDP X20, X19, [X31 + 0x10]
	0x03E59660 LDP X30, X21, [X31], #0x20
	0x03E59664 RET
	0x03E59668 LDR X8, [X9 + 0x20]
	0x03E5966C MOV X1, X19
	0x03E59670 LDP X20, X19, [X31 + 0x10]
	0x03E59674 LDR X8, [X8 + 0xC0]
	0x03E59678 LDR X2, [X8 + 0x70]
	0x03E5967C LDP X30, X21, [X31], #0x20
	0x03E59680 B 0x301BF90
	0x03E59684 BL 0x1C16F20
	0x03E59688 STR X30, [X31 - 0x20]!
	0x03E5968C STP X20, X19, [X31 + 0x10]
	0x03E59690 ADRP X20, 0x58F000
	0x03E59694 ADRP X19, 0x312000
	0x03E59698 LDRB W8, [X20 + 0x8C0]
	0x03E5969C LDR X19, [X19 + 0x960]
	0x03E596A0 TBNZ X8, 0x0, 0x3E596B8
	0x03E596A4 ADRP X0, 0x312000
	0x03E596A8 LDR X0, [X0 + 0x960]
	0x03E596AC BL 0x1C16CF4
	0x03E596B0 MOVZ W8, 0x1
	0x03E596B4 STRB W8, [X20 + 0x8C0]
	0x03E596B8 LDR X0, [X19]
	0x03E596BC LDR W8, [X0 + 0xE0]
	0x03E596C0 CBNZ W8, 0x3E596CC
	0x03E596C4 BL 0x1C16DFC
	0x03E596C8 LDR X0, [X19]
	0x03E596CC LDR X8, [X0 + 0xB8]
	0x03E596D0 LDP X20, X19, [X31 + 0x10]
	0x03E596D4 LDR X0, [X8]
	0x03E596D8 LDR X30, [X31], #0x20
	0x03E596DC RET
	0x03E596E0 STP X30, X21, [X31 - 0x20]!
	0x03E596E4 STP X20, X19, [X31 + 0x10]
	0x03E596E8 ADRP X21, 0x58F000
	0x03E596EC ADRP X20, 0x312000
	0x03E596F0 LDRB W8, [X21 + 0x8C1]
	0x03E596F4 LDR X20, [X20 + 0x960]
	0x03E596F8 MOV X19, X0
	0x03E596FC TBNZ X8, 0x0, 0x3E5972C
	0x03E59700 ADRP X0, 0x312000
	0x03E59704 LDR X0, [X0 + 0xCA8]
	0x03E59708 BL 0x1C16CF4
	0x03E5970C ADRP X0, 0x312000
	0x03E59710 LDR X0, [X0 + 0xCB0]
	0x03E59714 BL 0x1C16CF4
	0x03E59718 ADRP X0, 0x312000
	0x03E5971C LDR X0, [X0 + 0x960]
	0x03E59720 BL 0x1C16CF4
	0x03E59724 MOVZ W8, 0x1
	0x03E59728 STRB W8, [X21 + 0x8C1]
	0x03E5972C LDR X0, [X20]
	0x03E59730 LDR W8, [X0 + 0xE0]
	0x03E59734 CBNZ W8, 0x3E59740
	0x03E59738 BL 0x1C16DFC
	0x03E5973C LDR X0, [X20]
	0x03E59740 LDR X8, [X0 + 0xB8]
	0x03E59744 LDR X0, [X8]
	0x03E59748 CBZ X0, 0x3E597AC
	0x03E5974C ADRP X8, 0x312000
	0x03E59750 LDR X8, [X8 + 0xCA8]
	0x03E59754 MOV X1, X19
	0x03E59758 LDR X2, [X8]
	0x03E5975C BL 0x301C318
	0x03E59760 TBZ X0, 0x0, 0x3E597A0
	0x03E59764 LDR X0, [X20]
	0x03E59768 LDR W8, [X0 + 0xE0]
	0x03E5976C CBNZ W8, 0x3E59778
	0x03E59770 BL 0x1C16DFC
	0x03E59774 LDR X0, [X20]
	0x03E59778 LDR X8, [X0 + 0xB8]
	0x03E5977C LDR X0, [X8]

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x590000
	014 Move W8, [X21+2235]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x2F1000
	022 Move X0, [X0+904]
	023 Call 0x1C17CF4
	024 Move X0, 0x2F1000
	025 Move X0, [X0+920]
	026 Call 0x1C17CF4
	027 Move X0, 0x2F1000
	028 Move X0, [X0+944]
	029 Call 0x1C17CF4
	030 Move X0, 0x2F1000
	031 Move X0, [X0+952]
	032 Call 0x1C17CF4
	033 Move X0, 0x2C3000
	034 Move X0, [X0+2552]
	035 Call 0x1C17CF4
	036 Move X0, 0x29B000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2235], W8
	041 Compare X20, 0
	042 JumpIfEqual {257}
	043 Move X21, [X20+24]
	044 Compare X21, 0
	045 JumpIfEqual {257}
	046 Move W8, [X20+16]
	047 Move X22, [X21+80]
	048 And W31, W8, 0xFFFFFFFD
	049 Move W24, 1
	050 Move [X21+248], W24
	051 Move X25, 0x581000
	052 Move W8, [X25+1935]
	053 Add X23, X21, 260
	054 Compare W8, 0
	055 JumpIfNotEqual {60}
	056 Move X0, 0x2A3000
	057 Move X0, [X0+3848]
	058 Call 0x1C17CF4
	059 Move [X25+1935], W24
	060 Move X8, 0x2A3000
	061 Move X8, [X8+3848]
	062 Add X1, X21, 80
	063 Add X0, X21, 160
	064 Move W2, 80
	065 Move X8, [X8]
	066 Move X8, [X8+184]
	067 Move V1, [X8]
	068 NotImplemented "Instruction STRH not yet implemented."
	069 Move V0, [X23]
	070 Move [X23+8], D1
	071 Move [X23+16], D0
	072 Call 0x3EB2AC0
	073 Move X0, X19
	074 Move X1, X22
	075 Move X2, X21
	076 Call PointerInputModule.DeselectIfSelectionChanged, X0, X1, X2
	077 Move X0, X31
	078 Call Time.get_unscaledTime
	079 Move V1, [X21+308]
	080 Move X8, -53927936
	081 Move V9, [X8+1100]
	082 Subtract S0, S0, S1
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 Move [X21+312], W31
	085 Move X26, 0x2C3000
	086 Move X26, [X26+2552]
	087 Move X0, [X26]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X23, 0x589000
	093 Move W8, [X23+902]
	094 Compare W8, 0
	095 JumpIfNotEqual {101}
	096 Move X0, 0x2C3000
	097 Move X0, [X0+2552]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X23+902], W8
	101 Move X0, [X26]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X26]
	107 Move X9, 0x2F1000
	108 Move X8, [X0+184]
	109 Move X9, [X9+904]
	110 Move X0, X22
	111 Move X1, X21
	112 Move X2, [X8+24]
	113 Move X3, [X9]
	114 Call 0x21DE8A8, X0, X1, X2
	115 Move X8, 0x2F1000
	116 Move X8, [X8+952]
	117 Move X24, X0
	118 Move X0, X22
	119 Move X1, [X8]
	120 Call 0x21DEB64, X0
	121 Move X27, 0x29B000
	122 Move X27, [X27+1432]
	123 Move X23, X0
	124 Move X8, [X27]
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X0, X24
	131 Move X1, X31
	132 Move X2, X31
	133 Call Object.op_Equality, X0, X1
	134 And W31, W0, 1
	135 Move X0, X31
	136 NotImplemented "Instruction CSEL not yet implemented."
	137 Call Time.get_unscaledTime
	138 Move X0, [X27]
	139 Move X25, [X21+48]
	140 Move V8, V0
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X24
	146 Move X1, X25
	147 Move X2, X31
	148 Call Object.op_Equality, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {158}
	153 Move V0, [X21+308]
	154 Subtract S0, S8, S0
	155 NotImplemented "Instruction FCMP not yet implemented."
	156 Move W8, [X21+312]
	157 Add W8, W8, 1
	158 Move W8, 1
	159 Move [X21+312], W8
	160 Move W8, 1
	161 Move [X21+312], W8
	162 Move [X21+308], S8
	163 Move X0, X21
	164 Move X1, X24
	165 Call PointerEventData.set_pointerPress, X0, X1
	166 Move [X21+56], X22
	167 Move [X21+72], X23
	168 Move [X21+308], S8
	169 Move X0, [X26]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X8, 0x2F1000
	175 Move X8, [X8+944]
	176 Move X0, X22
	177 Move X1, [X8]
	178 Call 0x21DEB64, X0
	179 Move [X21+64], X0
	180 Move X23, X0
	181 Move X0, [X27]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X23
	187 Move X1, X31
	188 Move X2, X31
	189 Call Object.op_Inequality, X0, X1
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {223}
	194 Move X0, [X26]
	195 Move X23, [X21+64]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X24, 0x589000
	201 Move W8, [X24+903]
	202 Compare W8, 0
	203 JumpIfNotEqual {209}
	204 Move X0, 0x2C3000
	205 Move X0, [X0+2552]
	206 Call 0x1C17CF4
	207 Move W8, 1
	208 Move [X24+903], W8
	209 Move X0, [X26]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {215}
	213 Call 0x1C17DFC
	214 Move X0, [X26]
	215 Move X9, 0x2F1000
	216 Move X8, [X0+184]
	217 Move X9, [X9+920]
	218 Move X0, X23
	219 Move X1, X21
	220 Move X2, [X8+48]
	221 Move X3, [X9]
	222 Call 0x21DE088, X0, X1, X2
	223 Move [X19+144], X21
	224 Move W8, [X20+16]
	225 Subtract W8, W8, 1
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X19
	228 Move X1, X21
	229 Move X2, X22
	230 Move X20, [X31+80]
	231 Move X19, [X31+88]
	232 Move X22, [X31+64]
	233 Move X21, [X31+72]
	234 Move X24, [X31+48]
	235 Move X23, [X31+56]
	236 Move X26, [X31+32]
	237 Move X25, [X31+40]
	238 Move X30, [X31+16]
	239 Move X27, [X31+24]
	240 Move D9, [X31+96]
	241 Move D8, [X31+104]
	242 Call StandaloneInputModule.ReleaseMouse, X0, X1, X2
	243 Return 
	244 Move X20, [X31+80]
	245 Move X19, [X31+88]
	246 Move X22, [X31+64]
	247 Move X21, [X31+72]
	248 Move X24, [X31+48]
	249 Move X23, [X31+56]
	250 Move X26, [X31+32]
	251 Move X25, [X31+40]
	252 Move X30, [X31+16]
	253 Move X27, [X31+24]
	254 Move D9, [X31+96]
	255 Move D8, [X31+104]
	256 Return 
	257 Call 0x1C17F20

Method: UnityEngine.GameObject GetCurrentFocusedGameObject()

Disassembly:
	0x03E59780 CBZ X0, 0x3E597AC
	0x03E59784 ADRP X8, 0x312000

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

