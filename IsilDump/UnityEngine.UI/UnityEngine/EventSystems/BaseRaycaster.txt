Type: UnityEngine.EventSystems.BaseRaycaster

Method: System.Void Raycast(UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	

ISIL:
No ISIL was generated
Method: UnityEngine.Camera get_eventCamera()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 get_priority()

Disassembly:
	0x03E5A83C CBZ W22, 0x3E5A8E0
	0x03E5A840 LDR X8, [X0 + 0x20]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 get_sortOrderPriority()

Disassembly:
	0x03E5A844 CBZ X8, 0x3E5AB5C
	0x03E5A848 LDP W1, W8, [X21 + 0x34]

ISIL:
	001 Move W0, 0x80000000
	002 Return X0

Method: System.Int32 get_renderOrderPriority()

Disassembly:
	0x03E5A84C CMP W8, W1
	0x03E5A850 B.EQ 0x3E5A870

ISIL:
	001 Move W0, 0x80000000
	002 Return X0

Method: UnityEngine.EventSystems.BaseRaycaster get_rootRaycaster()

Disassembly:
	0x03E51834 STRB W8, [X21 + 0x86C]
	0x03E51838 LDR X0, [X20]
	0x03E5183C ADRP X22, 0x2A2000
	0x03E51840 LDR W8, [X0 + 0xE0]
	0x03E51844 LDR X22, [X22 + 0x598]
	0x03E51848 CBNZ W8, 0x3E51850
	0x03E5184C BL 0x1C16DFC
	0x03E51850 BL 0x3E4FF90
	0x03E51854 LDR X8, [X22]
	0x03E51858 MOV X20, X0
	0x03E5185C LDR W9, [X8 + 0xE0]
	0x03E51860 CBNZ W9, 0x3E5186C
	0x03E51864 MOV X0, X8
	0x03E51868 BL 0x1C16DFC
	0x03E5186C MOV X0, X20
	0x03E51870 MOV X1, X19
	0x03E51874 MOV X2, X31
	0x03E51878 BL 0x3C354F8
	0x03E5187C TBNZ X0, 0x0, 0x3E51A0C
	0x03E51880 MOV X0, X19
	0x03E51884 BL 0x3E516C4
	0x03E51888 LDR X0, [X19 + 0x20]
	0x03E5188C CBZ X0, 0x3E51A3C
	0x03E51890 LDR W23, [X0 + 0x18]
	0x03E51894 CMP W23, 0x1
	0x03E51898 B.LT 0x3E5193C
	0x03E5189C ADRP X24, 0x31A000
	0x03E518A0 LDR X24, [X24 + 0x930]
	0x03E518A4 MOV W20, W31
	0x03E518A8 LDR X2, [X24]
	0x03E518AC MOV W1, W20
	0x03E518B0 BL 0x301BCCC
	0x03E518B4 CBZ X0, 0x3E51A3C
	0x03E518B8 LDR X8, [X0]
	0x03E518BC MOV X21, X0
	0x03E518C0 LDR X9, [X8 + 0x2C8]
	0x03E518C4 LDR X1, [X8 + 0x2D0]
	0x03E518C8 BLR X9
	0x03E518CC TBZ X0, 0x0, 0x3E518E8
	0x03E518D0 LDR X8, [X21]
	0x03E518D4 MOV X0, X21
	0x03E518D8 LDR X9, [X8 + 0x288]
	0x03E518DC LDR X1, [X8 + 0x290]
	0x03E518E0 BLR X9
	0x03E518E4 TBNZ X0, 0x0, 0x3E51900
	0x03E518E8 ADD W20, W20, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x598000
	006 Move X20, 0x2A3000
	007 Move W8, [X21+2243]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x31B000
	015 Move X0, [X0+2368]
	016 Call 0x1C17CF4
	017 Move X0, 0x2A3000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2243], W8
	022 Move X0, [X20]
	023 Move X20, [X19+32]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {53}
	036 Move X8, 0x31B000
	037 Move X8, [X8+2368]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A57AC, X0
	041 Compare X0, 0
	042 JumpIfEqual {59}
	043 Move X8, [X0+24]
	044 Compare X8, 0
	045 JumpIfEqual {53}
	046 Compare W8, 0
	047 JumpIfEqual {60}
	048 Move X9, INVALID
	049 Add X8, X9, X8
	050 Add X8, X0, X8
	051 Move X8, [X8+32]
	052 Move [X19+32], X8
	053 Move X0, [X19+32]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.String ToString()

Disassembly:
	0x03E5A854 ADRP X8, 0x29F000
	0x03E5A858 LDR X8, [X8 + 0x488]
	0x03E5A85C LDR X0, [X8]
	0x03E5A860 BL 0x1C16D6C
	0x03E5A864 LDR W8, [X21 + 0x34]
	0x03E5A868 STR X0, [X21 + 0x40]
	0x03E5A86C STR W8, [X21 + 0x38]
	0x03E5A870 MOV X0, X31
	0x03E5A874 BL 0x3E48798
	0x03E5A878 CBZ X0, 0x3E5AB84
	0x03E5A87C LDUR V0, [X31 + 0x48]
	0x03E5A880 LDR X8, [X31 + 0x58]
	0x03E5A884 LDR X23, [X0 + 0x20]
	0x03E5A888 LDR V8, [X31 + 0x40]
	0x03E5A88C STR V0, [X31 + 0x1]
	0x03E5A890 STR X8, [X31 + 0x20]
	0x03E5A894 LDR X22, [X21 + 0x40]
	0x03E5A898 MOV X0, X21
	0x03E5A89C BL 0x3E5A510
	0x03E5A8A0 CBZ X23, 0x3E5AB84
	0x03E5A8A4 LDR V0, [X31 + 0x1]
	0x03E5A8A8 LDR X8, [X31 + 0x20]
	0x03E5A8AC MOV W3, W0
	0x03E5A8B0 LDR X9, [X23 + 0x18]
	0x03E5A8B4 LDR X0, [X23 + 0x40]
	0x03E5A8B8 STR V0, [X31 + 0x6]
	0x03E5A8BC STR X8, [X31 + 0x70]
	0x03E5A8C0 LDR X4, [X23 + 0x28]
	0x03E5A8C4 ADD X1, X31, 0x60
	0x03E5A8C8 MOV X2, X22
	0x03E5A8CC MOV V0.16B, V8.16B
	0x03E5A8D0 BLR X9
	0x03E5A8D4 MOV W22, W0
	0x03E5A8D8 CBNZ W22, 0x3E5A954
	0x03E5A8DC B 0x3E5AB5C
	0x03E5A8E0 LDR X8, [X0 + 0x18]
	0x03E5A8E4 CBZ X8, 0x3E5AB5C
	0x03E5A8E8 MOV X0, X31
	0x03E5A8EC BL 0x3E48798
	0x03E5A8F0 CBZ X0, 0x3E5AB84
	0x03E5A8F4 LDUR V0, [X31 + 0x48]
	0x03E5A8F8 LDR X8, [X31 + 0x58]
	0x03E5A8FC LDR X22, [X0 + 0x18]
	0x03E5A900 LDR V8, [X31 + 0x40]
	0x03E5A904 MOV X0, X21
	0x03E5A908 STR V0, [X31 + 0x1]
	0x03E5A90C STR X8, [X31 + 0x20]
	0x03E5A910 BL 0x3E5A510
	0x03E5A914 CBZ X22, 0x3E5AB84
	0x03E5A918 LDR V0, [X31 + 0x1]
	0x03E5A91C LDR X8, [X31 + 0x20]
	0x03E5A920 MOV W2, W0
	0x03E5A924 LDR X9, [X22 + 0x18]
	0x03E5A928 LDR X0, [X22 + 0x40]
	0x03E5A92C STR V0, [X31 + 0x6]
	0x03E5A930 STR X8, [X31 + 0x70]
	0x03E5A934 LDR X3, [X22 + 0x28]
	0x03E5A938 ADD X1, X31, 0x60
	0x03E5A93C MOV V0.16B, V8.16B
	0x03E5A940 BLR X9
	0x03E5A944 STR X0, [X21 + 0x40]
	0x03E5A948 CBZ X0, 0x3E5AB84
	0x03E5A94C LDR W22, [X0 + 0x18]
	0x03E5A950 CBZ W22, 0x3E5AB5C
	0x03E5A954 CMP W22, 0x2
	0x03E5A958 B.GE 0x3E5A968
	0x03E5A95C CMP W22, 0x1
	0x03E5A960 B.EQ 0x3E5A9AC
	0x03E5A964 B 0x3E5AB5C
	0x03E5A968 ADRP X24, 0x311000
	0x03E5A96C LDR X24, [X24 + 0xD00]
	0x03E5A970 LDR X23, [X21 + 0x40]
	0x03E5A974 LDR X0, [X24]
	0x03E5A978 LDR W8, [X0 + 0xE0]
	0x03E5A97C CBNZ W8, 0x3E5A988
	0x03E5A980 BL 0x1C16DFC
	0x03E5A984 LDR X0, [X24]
	0x03E5A988 ADRP X9, 0x311000
	0x03E5A98C LDR X8, [X0 + 0xB8]
	0x03E5A990 LDR X9, [X9 + 0xCF8]
	0x03E5A994 MOV X0, X23
	0x03E5A998 MOV W1, W31
	0x03E5A99C LDR X3, [X8]
	0x03E5A9A0 LDR X4, [X9]
	0x03E5A9A4 MOV W2, W22
	0x03E5A9A8 BL 0x2163F50
	0x03E5A9AC ADRP X28, 0x2EF000
	0x03E5A9B0 LDR W24, [X31 + 0x44]
	0x03E5A9B4 LDR X28, [X28 + 0x358]
	0x03E5A9B8 ADD X8, X31, 0x60
	0x03E5A9BC MOV X23, X31
	0x03E5A9C0 MOV W25, W22
	0x03E5A9C4 ADD X26, X8, 0x18
	0x03E5A9C8 MOVZ W27, 0x20
	0x03E5A9CC MOVZ W29, 0x50
	0x03E5A9D0 STR W31, [X31 + 0x38]
	0x03E5A9D4 STR X31, [X31 + 0x30]
	0x03E5A9D8 LDR X8, [X21 + 0x40]
	0x03E5A9DC CBZ X8, 0x3E5AB84
	0x03E5A9E0 LDR W9, [X8 + 0x18]
	0x03E5A9E4 CMP X23, X9
	0x03E5A9E8 B.CS 0x3E5AB88
	0x03E5A9EC ADD X0, X8, X27
	0x03E5A9F0 MOV X1, X31
	0x03E5A9F4 BL 0x3C8E5C0
	0x03E5A9F8 CBZ X0, 0x3E5AB84
	0x03E5A9FC MOV X1, X31
	0x03E5AA00 BL 0x3C32ECC
	0x03E5AA04 LDR X8, [X21 + 0x40]
	0x03E5AA08 CBZ X8, 0x3E5AB84
	0x03E5AA0C LDR W9, [X8 + 0x18]
	0x03E5AA10 CMP X23, X9
	0x03E5AA14 B.CS 0x3E5AB88
	0x03E5AA18 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x58F000
	007 Move X21, 0x29A000
	008 Move W8, [X20+2244]
	009 Move X21, [X21+2760]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x29A000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x312000
	019 Move X0, [X0+3272]
	020 Call 0x1C17CF4
	021 Move X0, 0x29B000
	022 Move X0, [X0+3808]
	023 Call 0x1C17CF4
	024 Move X0, 0x312000
	025 Move X0, [X0+3280]
	026 Call 0x1C17CF4
	027 Move X0, 0x312000
	028 Move X0, [X0+3288]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2244], W8
	032 Move X0, [X21]
	033 Move W1, 8
	034 Call 0x1C17D6C
	035 Compare X0, 0
	036 JumpIfEqual {120}
	037 Move W8, [X0+24]
	038 Move X20, X0
	039 Compare W8, 0
	040 JumpIfEqual {119}
	041 Move X8, 0x29B000
	042 Move X8, [X8+3808]
	043 Move X0, X19
	044 Move X1, X31
	045 Move X8, [X8]
	046 Move [X20+32], X8
	047 Call Component.get_gameObject, X0
	048 Compare X0, 0
	049 JumpIfEqual {54}
	050 Move X8, [X0]
	051 Move X9, [X8+360]
	052 Move X1, [X8+368]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move W8, [X20+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X20+40], X0
	058 Move X8, 0x312000
	059 Move X8, [X8+3288]
	060 Move X0, X19
	061 Move X8, [X8]
	062 Move [X20+48], X8
	063 Move X8, [X19]
	064 Move X9, [X8+600]
	065 Move X1, [X8+608]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X0, 0
	068 JumpIfEqual {73}
	069 Move X8, [X0]
	070 Move X9, [X8+360]
	071 Move X1, [X8+368]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move W8, [X20+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X20+56], X0
	077 Move X8, 0x312000
	078 Move X8, [X8+3272]
	079 Move X0, X19
	080 Move X8, [X8]
	081 Move [X20+64], X8
	082 Move X8, [X19]
	083 Move X9, [X8+632]
	084 Move X1, [X8+640]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move [X31+12], W0
	087 Add X0, X31, 12
	088 Move X1, X31
	089 Call Int32.ToString, X0
	090 Move W8, [X20+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X20+72], X0
	094 Move X8, 0x312000
	095 Move X8, [X8+3280]
	096 Move X0, X19
	097 Move X8, [X8]
	098 Move [X20+80], X8
	099 Move X8, [X19]
	100 Move X9, [X8+648]
	101 Move X1, [X8+656]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move [X31+12], W0
	104 Add X0, X31, 12
	105 Move X1, X31
	106 Call Int32.ToString, X0
	107 Move W8, [X20+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X20+88], X0
	110 Move X0, X20
	111 Move X1, X31
	112 Call String.Concat, X0
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X30, [X31+16]
	116 Move X21, [X31+24]
	117 Add X31, X31, 48
	118 Return X0
	119 Call 0x1C17F28
	120 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03E5AA1C ADD X0, X8, X27
	0x03E5AA20 MOV X1, X31
	0x03E5AA24 BL 0x3C8E684
	0x03E5AA28 LDR X8, [X21 + 0x40]
	0x03E5AA2C CBZ X8, 0x3E5AB84
	0x03E5AA30 LDR W9, [X8 + 0x18]
	0x03E5AA34 CMP X23, X9
	0x03E5AA38 B.CS 0x3E5AB88
	0x03E5AA3C ADD X0, X8, X27
	0x03E5AA40 MOV X1, X31
	0x03E5AA44 MOV V8.16B, V0.16B
	0x03E5AA48 BL 0x3C8E66C
	0x03E5AA4C LDR X8, [X21 + 0x40]
	0x03E5AA50 CBZ X8, 0x3E5AB84
	0x03E5AA54 LDR W9, [X8 + 0x18]
	0x03E5AA58 CMP X23, X9
	0x03E5AA5C B.CS 0x3E5AB88
	0x03E5AA60 ADD X0, X8, X27
	0x03E5AA64 MOV X1, X31
	0x03E5AA68 MOV V11.16B, V0.16B
	0x03E5AA6C MOV V9.16B, V1.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x58F000
	006 Move X21, 0x312000
	007 Move W8, [X20+2245]
	008 Move X21, [X21+2400]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x312000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2245], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call RaycasterManager.AddRaycaster, X0
	030 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03E5AA70 MOV V10.16B, V2.16B
	0x03E5AA74 BL 0x3C8E678
	0x03E5AA78 CBZ X20, 0x3E5AB84
	0x03E5AA7C CBZ X19, 0x3E5AB84
	0x03E5AA80 LDR X9, [X31 + 0x30]
	0x03E5AA84 LDR W10, [X31 + 0x38]
	0x03E5AA88 LDR V3, [X20 + 0x104]
	0x03E5AA8C LDR V4, [X20 + 0x108]
	0x03E5AA90 LDP W8, W11, [X19 + 0x18]
	0x03E5AA94 STR X9, [X31 + 0x10]
	0x03E5AA98 STR W10, [X31 + 0x18]
	0x03E5AA9C LDR X9, [X19 + 0x10]
	0x03E5AAA0 LDR X10, [X28]
	0x03E5AAA4 ADD W11, W11, 0x1
	0x03E5AAA8 SXTW X8, W8
	0x03E5AAAC STR W11, [X19 + 0x1C]
	0x03E5AAB0 CBZ X9, 0x3E5AB84
	0x03E5AAB4 LDR W11, [X9 + 0x18]
	0x03E5AAB8 SCVTF S5, W8
	0x03E5AABC CMP W8, W11
	0x03E5AAC0 B.CS 0x3E5AB04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x58F000
	006 Move X21, 0x312000
	007 Move W8, [X20+2246]
	008 Move X21, [X21+2400]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x312000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2246], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call RaycasterManager.RemoveRaycasters, X0
	030 Return 

Method: System.Void OnCanvasHierarchyChanged()

Disassembly:
	0x03E5AAC4 ADD W10, W8, 0x1
	0x03E5AAC8 MADD X8, X8, X29, X9

ISIL:
	001 Move [X0+32], X31
	002 Return 

Method: System.Void OnTransformParentChanged()

Disassembly:
	0x03E5AAD0 STP X22, X21, [X8 + 0x20]
	0x03E5AAD4 STP S8, S5, [X8 + 0x30]

ISIL:
	001 Move [X0+32], X31
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E4FB28 BL 0x32338A8
	0x03E4FB2C LDR X8, [X20]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

