Type: UnityEngine.EventSystems.RaycastResult

Method: UnityEngine.GameObject get_gameObject()

Disassembly:
	0x03E5BC30 ADRP X0, 0x299000
	0x03E5BC34 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_gameObject(UnityEngine.GameObject value)

Disassembly:
	0x03E5BC38 BL 0x1C16CF4
	0x03E5BC3C ADRP X0, 0x299000

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Boolean get_isValid()

Disassembly:
	0x03E5BC40 LDR X0, [X0 + 0x6C8]
	0x03E5BC44 BL 0x1C16CF4
	0x03E5BC48 ADRP X0, 0x299000
	0x03E5BC4C LDR X0, [X0 + 0x6D0]
	0x03E5BC50 BL 0x1C16CF4
	0x03E5BC54 ADRP X0, 0x2DB000
	0x03E5BC58 LDR X0, [X0 + 0xB40]
	0x03E5BC5C BL 0x1C16CF4
	0x03E5BC60 ADRP X0, 0x310000
	0x03E5BC64 LDR X0, [X0 + 0xD40]
	0x03E5BC68 BL 0x1C16CF4
	0x03E5BC6C ADRP X0, 0x2D3000
	0x03E5BC70 LDR X0, [X0 + 0x988]
	0x03E5BC74 BL 0x1C16CF4
	0x03E5BC78 ADRP X0, 0x2A3000
	0x03E5BC7C LDR X0, [X0 + 0xCD8]
	0x03E5BC80 BL 0x1C16CF4
	0x03E5BC84 MOVZ W8, 0x1
	0x03E5BC88 STRB W8, [X21 + 0x8DB]
	0x03E5BC8C LDR X0, [X22]
	0x03E5BC90 BL 0x1C16F10
	0x03E5BC94 LDR X1, [X19]
	0x03E5BC98 MOV X19, X0
	0x03E5BC9C BL 0x2AA4804
	0x03E5BCA0 LDRB W8, [X20 + 0x38]
	0x03E5BCA4 CBZ W8, 0x3E5BD08
	0x03E5BCA8 MOV X0, X31
	0x03E5BCAC BL 0x3241948
	0x03E5BCB0 LDR X1, [X20 + 0x30]
	0x03E5BCB4 CBZ X1, 0x3E5BD4C
	0x03E5BCB8 CBZ X0, 0x3E5BD4C
	0x03E5BCBC LDR X8, [X0]
	0x03E5BCC0 LDR W3, [X1 + 0x18]
	0x03E5BCC4 ADRP X20, 0x310000
	0x03E5BCC8 ADRP X21, 0x2A3000
	0x03E5BCCC LDR X9, [X8 + 0x388]
	0x03E5BCD0 LDR X4, [X8 + 0x390]
	0x03E5BCD4 LDR X20, [X20 + 0xD40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x58E000
	006 Move X21, 0x299000
	007 Move W8, [X20+2254]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x299000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2254], W8
	019 Move X0, [X21]
	020 Move X20, [X19+8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {48}
	033 Move X0, [X21]
	034 Move X19, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X1, X31
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call Object.op_Inequality, X0, X1
	047 Return X0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move W0, W31
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0

Method: System.Void Clear()

Disassembly:
	0x03E5BCD8 LDR X21, [X21 + 0xCD8]
	0x03E5BCDC MOV W2, W31
	0x03E5BCE0 BLR X9
	0x03E5BCE4 LDR X8, [X20]
	0x03E5BCE8 LDR X2, [X21]
	0x03E5BCEC MOV X1, X0
	0x03E5BCF0 MOV X3, X31
	0x03E5BCF4 MOV X0, X8
	0x03E5BCF8 BL 0x32274B8
	0x03E5BCFC CBZ X19, 0x3E5BD4C
	0x03E5BD00 MOV X2, X0
	0x03E5BD04 B 0x3E5BD18
	0x03E5BD08 CBZ X19, 0x3E5BD4C
	0x03E5BD0C ADRP X8, 0x2DB000
	0x03E5BD10 LDR X8, [X8 + 0xB40]
	0x03E5BD14 LDR X2, [X8]
	0x03E5BD18 ADRP X8, 0x2D3000
	0x03E5BD1C ADRP X9, 0x299000
	0x03E5BD20 LDR X8, [X8 + 0x988]
	0x03E5BD24 LDR X9, [X9 + 0x6C8]
	0x03E5BD28 MOV X0, X19
	0x03E5BD2C LDR X1, [X8]
	0x03E5BD30 LDR X3, [X9]
	0x03E5BD34 BL 0x2AA5084
	0x03E5BD38 MOV X0, X19
	0x03E5BD3C LDP X20, X19, [X31 + 0x20]
	0x03E5BD40 LDP X22, X21, [X31 + 0x10]
	0x03E5BD44 LDR X30, [X31], #0x30
	0x03E5BD48 RET
	0x03E5BD4C BL 0x1C16F20
	0x03E5BD50 STP X29, X30, [X31 - 0x60]!
	0x03E5BD54 STP X28, X27, [X31 + 0x10]
	0x03E5BD58 STP X26, X25, [X31 + 0x20]
	0x03E5BD5C STP X24, X23, [X31 + 0x30]
	0x03E5BD60 STP X22, X21, [X31 + 0x40]
	0x03E5BD64 STP X20, X19, [X31 + 0x50]
	0x03E5BD68 ADRP X21, 0x58D000
	0x03E5BD6C ADRP X19, 0x2A0000
	0x03E5BD70 LDRB W8, [X21 + 0x8DC]
	0x03E5BD74 LDR X19, [X19 + 0x558]
	0x03E5BD78 MOV X20, X0
	0x03E5BD7C TBNZ X8, 0x0, 0x3E5BE0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move [X0+36], W31
	006 Move [X0+40], W31
	007 Move [X0+8], X31
	008 Move [X0+16], X31
	009 Move [X0], X31
	010 Move [X0+24], W31
	011 Move X20, 0x57E000
	012 Move W8, [X20+1926]
	013 Move X19, X0
	014 Compare W8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, 0x299000
	017 Move X0, [X0+1440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1926], W8
	021 Move X20, 0x299000
	022 Move X20, [X20+1440]
	023 Move X21, 0x57E000
	024 Move X8, [X20]
	025 Move X9, [X8+184]
	026 Move V0, [X9+24]
	027 Move V1, [X9+32]
	028 Move [X19+56], D0
	029 Move [X19+64], S1
	030 Move W9, [X21+1923]
	031 Compare W9, 0
	032 JumpIfNotEqual {38}
	033 Move X0, X20
	034 Call 0x1C17CF4
	035 Move X8, [X20]
	036 Move W9, 1
	037 Move [X21+1923], W9
	038 Move X9, [X8+184]
	039 Move V0, [X9]
	040 Move V1, [X9+8]
	041 Move [X19+44], D0
	042 Move [X19+52], S1
	043 Move X8, [X8+184]
	044 Move V0, [X8]
	045 Move [X19+68], D0
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 

Method: System.String ToString()

Disassembly:
	0x03E50B60 LDR X3, [X8 + 0x278]
	0x03E50B64 LDR X2, [X8 + 0x280]
	0x03E50B68 LDR X30, [X31], #0x30
	0x03E50B6C BR X3
	0x03E50B70 LDP X20, X19, [X31 + 0x20]
	0x03E50B74 LDP X22, X21, [X31 + 0x10]
	0x03E50B78 MOV W0, W31
	0x03E50B7C LDR X30, [X31], #0x30
	0x03E50B80 RET
	0x03E50B84 BL 0x1C16F20
	0x03E50B88 STR X30, [X31 - 0x30]!
	0x03E50B8C STP X22, X21, [X31 + 0x10]
	0x03E50B90 STP X20, X19, [X31 + 0x20]
	0x03E50B94 ADRP X20, 0x598000
	0x03E50B98 ADRP X21, 0x2CA000
	0x03E50B9C LDRB W8, [X20 + 0x862]
	0x03E50BA0 LDR X21, [X21 + 0xDF8]
	0x03E50BA4 MOV X19, X0
	0x03E50BA8 TBNZ X8, 0x0, 0x3E50BCC
	0x03E50BAC ADRP X0, 0x2CA000
	0x03E50BB0 LDR X0, [X0 + 0xDF8]
	0x03E50BB4 BL 0x1C16CF4
	0x03E50BB8 ADRP X0, 0x2A3000
	0x03E50BBC LDR X0, [X0 + 0x598]
	0x03E50BC0 BL 0x1C16CF4
	0x03E50BC4 MOVZ W8, 0x1
	0x03E50BC8 STRB W8, [X20 + 0x862]
	0x03E50BCC LDR X0, [X21]
	0x03E50BD0 ADRP X22, 0x2A3000
	0x03E50BD4 LDR W8, [X0 + 0xE0]
	0x03E50BD8 LDR X22, [X22 + 0x598]
	0x03E50BDC CBNZ W8, 0x3E50BE8
	0x03E50BE0 BL 0x1C16DFC
	0x03E50BE4 LDR X0, [X21]
	0x03E50BE8 LDR X8, [X22]
	0x03E50BEC LDR X9, [X0 + 0xB8]
	0x03E50BF0 LDR W10, [X8 + 0xE0]
	0x03E50BF4 LDR X20, [X9 + 0x10]
	0x03E50BF8 CBNZ W10, 0x3E50C04
	0x03E50BFC MOV X0, X8
	0x03E50C00 BL 0x1C16DFC
	0x03E50C04 MOV X0, X20
	0x03E50C08 MOV X1, X19
	0x03E50C0C MOV X2, X31
	0x03E50C10 BL 0x3C3883C
	0x03E50C14 TBZ X0, 0x0, 0x3E50C2C
	0x03E50C18 LDP X20, X19, [X31 + 0x20]
	0x03E50C1C LDP X22, X21, [X31 + 0x10]
	0x03E50C20 MOVZ W0, 0x1
	0x03E50C24 LDR X30, [X31], #0x30
	0x03E50C28 RET
	0x03E50C2C LDR X0, [X21]
	0x03E50C30 LDR W8, [X0 + 0xE0]
	0x03E50C34 CBNZ W8, 0x3E50C40
	0x03E50C38 BL 0x1C16DFC
	0x03E50C3C LDR X0, [X21]
	0x03E50C40 LDR X8, [X22]
	0x03E50C44 LDR X9, [X0 + 0xB8]
	0x03E50C48 LDR W10, [X8 + 0xE0]
	0x03E50C4C LDR X19, [X9 + 0x10]
	0x03E50C50 CBNZ W10, 0x3E50C5C
	0x03E50C54 MOV X0, X8
	0x03E50C58 BL 0x1C16DFC
	0x03E50C5C MOV X0, X19
	0x03E50C60 LDP X20, X19, [X31 + 0x20]
	0x03E50C64 LDP X22, X21, [X31 + 0x10]
	0x03E50C68 MOV X1, X31
	0x03E50C6C MOV X2, X31
	0x03E50C70 LDR X30, [X31], #0x30
	0x03E50C74 B 0x3C3883C
	0x03E50C78 STP X30, X21, [X31 - 0x20]!
	0x03E50C7C STP X20, X19, [X31 + 0x10]
	0x03E50C80 ADRP X21, 0x598000
	0x03E50C84 ADRP X20, 0x2CA000
	0x03E50C88 LDRB W8, [X21 + 0x863]
	0x03E50C8C LDR X20, [X20 + 0xDF8]
	0x03E50C90 MOV X19, X0
	0x03E50C94 TBNZ X8, 0x0, 0x3E50CAC
	0x03E50C98 ADRP X0, 0x2CA000
	0x03E50C9C LDR X0, [X0 + 0xDF8]
	0x03E50CA0 BL 0x1C16CF4
	0x03E50CA4 MOVZ W8, 0x1
	0x03E50CA8 STRB W8, [X21 + 0x863]
	0x03E50CAC LDR X0, [X20]
	0x03E50CB0 LDR W8, [X0 + 0xE0]
	0x03E50CB4 CBNZ W8, 0x3E50CC0
	0x03E50CB8 BL 0x1C16DFC
	0x03E50CBC LDR X0, [X20]
	0x03E50CC0 LDR X8, [X0 + 0xB8]
	0x03E50CC4 LDRB W8, [X8 + 0x18]
	0x03E50CC8 CBZ W8, 0x3E50CDC
	0x03E50CCC MOV X0, X19
	0x03E50CD0 LDP X20, X19, [X31 + 0x10]
	0x03E50CD4 LDP X30, X21, [X31], #0x20
	0x03E50CD8 B 0x3E50B88
	0x03E50CDC LDP X20, X19, [X31 + 0x10]
	0x03E50CE0 MOV W0, W31
	0x03E50CE4 LDP X30, X21, [X31], #0x20
	0x03E50CE8 RET
	0x03E50CEC STP X30, X21, [X31 - 0x20]!
	0x03E50CF0 STP X20, X19, [X31 + 0x10]
	0x03E50CF4 ADRP X21, 0x598000
	0x03E50CF8 ADRP X20, 0x2CA000
	0x03E50CFC LDRB W8, [X21 + 0x864]
	0x03E50D00 LDR X20, [X20 + 0xDF8]
	0x03E50D04 MOV X19, X0
	0x03E50D08 TBNZ X8, 0x0, 0x3E50D20
	0x03E50D0C ADRP X0, 0x2CA000
	0x03E50D10 LDR X0, [X0 + 0xDF8]
	0x03E50D14 BL 0x1C16CF4
	0x03E50D18 MOVZ W8, 0x1
	0x03E50D1C STRB W8, [X21 + 0x864]
	0x03E50D20 LDR X0, [X20]
	0x03E50D24 LDR W8, [X0 + 0xE0]
	0x03E50D28 CBNZ W8, 0x3E50D34
	0x03E50D2C BL 0x1C16DFC
	0x03E50D30 LDR X0, [X20]
	0x03E50D34 LDR X8, [X0 + 0xB8]
	0x03E50D38 LDRB W8, [X8 + 0x19]
	0x03E50D3C CBZ W8, 0x3E50D50
	0x03E50D40 MOV X0, X19
	0x03E50D44 LDP X20, X19, [X31 + 0x10]
	0x03E50D48 LDP X30, X21, [X31], #0x20
	0x03E50D4C B 0x3E50B88
	0x03E50D50 LDP X20, X19, [X31 + 0x10]
	0x03E50D54 MOV W0, W31
	0x03E50D58 LDP X30, X21, [X31], #0x20
	0x03E50D5C RET
	0x03E50D60 STR X30, [X31 - 0x40]!
	0x03E50D64 STP X24, X23, [X31 + 0x10]
	0x03E50D68 STP X22, X21, [X31 + 0x20]
	0x03E50D6C STP X20, X19, [X31 + 0x30]
	0x03E50D70 ADRP X23, 0x598000
	0x03E50D74 ADRP X22, 0x2CB000
	0x03E50D78 LDRB W8, [X23 + 0x865]
	0x03E50D7C LDR X22, [X22 + 0x930]
	0x03E50D80 MOV W21, W2
	0x03E50D84 MOV W20, W1
	0x03E50D88 MOV X19, X0
	0x03E50D8C TBNZ X8, 0x0, 0x3E50DBC
	0x03E50D90 ADRP X0, 0x2CA000
	0x03E50D94 LDR X0, [X0 + 0xDF8]
	0x03E50D98 BL 0x1C16CF4
	0x03E50D9C ADRP X0, 0x2A3000
	0x03E50DA0 LDR X0, [X0 + 0x598]
	0x03E50DA4 BL 0x1C16CF4
	0x03E50DA8 ADRP X0, 0x2CB000
	0x03E50DAC LDR X0, [X0 + 0x930]
	0x03E50DB0 BL 0x1C16CF4
	0x03E50DB4 MOVZ W8, 0x1
	0x03E50DB8 STRB W8, [X23 + 0x865]
	0x03E50DBC LDR X0, [X22]
	0x03E50DC0 LDR W8, [X0 + 0xE0]
	0x03E50DC4 CBNZ W8, 0x3E50DCC
	0x03E50DC8 BL 0x1C16DFC
	0x03E50DCC ADRP X23, 0x598000
	0x03E50DD0 LDRB W8, [X23 + 0x44E]
	0x03E50DD4 CBNZ W8, 0x3E50DEC
	0x03E50DD8 ADRP X0, 0x2CB000
	0x03E50DDC LDR X0, [X0 + 0x930]
	0x03E50DE0 BL 0x1C16CF4
	0x03E50DE4 MOVZ W8, 0x1
	0x03E50DE8 STRB W8, [X23 + 0x44E]
	0x03E50DEC LDR X0, [X22]
	0x03E50DF0 AND W23, W21, 0x1
	0x03E50DF4 ADRP X21, 0x2CA000
	0x03E50DF8 AND W24, W20, 0x1
	0x03E50DFC LDR W8, [X0 + 0xE0]
	0x03E50E00 LDR X21, [X21 + 0xDF8]
	0x03E50E04 CBNZ W8, 0x3E50E10
	0x03E50E08 BL 0x1C16DFC
	0x03E50E0C LDR X0, [X22]
	0x03E50E10 LDR X8, [X0 + 0xB8]
	0x03E50E14 MOV X1, X31
	0x03E50E18 LDR X0, [X8 + 0x38]
	0x03E50E1C BL 0x3E16264
	0x03E50E20 LDR X0, [X21]
	0x03E50E24 STRH W31, [X31 + 0xC]
	0x03E50E28 STR W31, [X31 + 0x8]
	0x03E50E2C LDR W8, [X0 + 0xE0]
	0x03E50E30 CBNZ W8, 0x3E50E3C
	0x03E50E34 BL 0x1C16DFC
	0x03E50E38 LDR X0, [X21]
	0x03E50E3C LDR X8, [X0 + 0xB8]
	0x03E50E40 STR X19, [X8 + 0x10]
	0x03E50E44 STRB W24, [X8 + 0x18]
	0x03E50E48 STRB W23, [X8 + 0x19]
	0x03E50E4C LDRH W9, [X31 + 0xC]
	0x03E50E50 LDR W10, [X31 + 0x8]
	0x03E50E54 STRH W9, [X8 + 0x1E]
	0x03E50E58 STUR W10, [X8 + 0x1A]
	0x03E50E5C TBZ X20, 0x0, 0x3E50EE4
	0x03E50E60 ADRP X8, 0x2A3000
	0x03E50E64 LDR X8, [X8 + 0x598]
	0x03E50E68 LDR X0, [X8]
	0x03E50E6C LDR W8, [X0 + 0xE0]
	0x03E50E70 CBNZ W8, 0x3E50E78
	0x03E50E74 BL 0x1C16DFC
	0x03E50E78 MOV X0, X19
	0x03E50E7C MOV X1, X31
	0x03E50E80 MOV X2, X31
	0x03E50E84 BL 0x3C354F8
	0x03E50E88 MOV W8, W0
	0x03E50E8C MOV X0, X19
	0x03E50E90 TBNZ X8, 0x0, 0x3E50EA8
	0x03E50E94 LDR X0, [X21]
	0x03E50E98 LDR W8, [X0 + 0xE0]
	0x03E50E9C CBNZ W8, 0x3E50EA4
	0x03E50EA0 BL 0x1C16DFC
	0x03E50EA4 BL 0x3E4FF90
	0x03E50EA8 CBZ X0, 0x3E50EF8
	0x03E50EAC MOV X1, X31
	0x03E50EB0 BL 0x3C32454
	0x03E50EB4 TBZ X0, 0x0, 0x3E50EE4
	0x03E50EB8 LDR X0, [X22]
	0x03E50EBC LDR W8, [X0 + 0xE0]
	0x03E50EC0 CBNZ W8, 0x3E50EC8
	0x03E50EC4 BL 0x1C16DFC
	0x03E50EC8 MOV X0, X19
	0x03E50ECC LDP X20, X19, [X31 + 0x30]
	0x03E50ED0 LDP X22, X21, [X31 + 0x20]
	0x03E50ED4 LDP X24, X23, [X31 + 0x10]
	0x03E50ED8 MOV X1, X31
	0x03E50EDC LDR X30, [X31], #0x40
	0x03E50EE0 B 0x3E1604C
	0x03E50EE4 LDP X20, X19, [X31 + 0x30]
	0x03E50EE8 LDP X22, X21, [X31 + 0x20]
	0x03E50EEC LDP X24, X23, [X31 + 0x10]
	0x03E50EF0 LDR X30, [X31], #0x40
	0x03E50EF4 RET
	0x03E50EF8 BL 0x1C16F20
	0x03E50EFC SUB X31, X31, 0x50
	0x03E50F00 STR X30, [X31 + 0x20]
	0x03E50F04 STP X22, X21, [X31 + 0x30]
	0x03E50F08 STP X20, X19, [X31 + 0x40]
	0x03E50F0C ADRP X20, 0x598000
	0x03E50F10 LDRB W8, [X20 + 0x866]
	0x03E50F14 MOV X19, X0
	0x03E50F18 TBNZ X8, 0x0, 0x3E50F84
	0x03E50F1C ADRP X0, 0x31A000
	0x03E50F20 LDR X0, [X0 + 0x5A8]
	0x03E50F24 BL 0x1C16CF4
	0x03E50F28 ADRP X0, 0x2CB000
	0x03E50F2C LDR X0, [X0 + 0x918]
	0x03E50F30 BL 0x1C16CF4
	0x03E50F34 ADRP X0, 0x31A000
	0x03E50F38 LDR X0, [X0 + 0x680]
	0x03E50F3C BL 0x1C16CF4
	0x03E50F40 ADRP X0, 0x31A000
	0x03E50F44 LDR X0, [X0 + 0x688]
	0x03E50F48 BL 0x1C16CF4
	0x03E50F4C ADRP X0, 0x31A000
	0x03E50F50 LDR X0, [X0 + 0x690]
	0x03E50F54 BL 0x1C16CF4
	0x03E50F58 ADRP X0, 0x31B000
	0x03E50F5C LDR X0, [X0 + 0x968]
	0x03E50F60 BL 0x1C16CF4
	0x03E50F64 ADRP X0, 0x31A000
	0x03E50F68 LDR X0, [X0 + 0x698]
	0x03E50F6C BL 0x1C16CF4
	0x03E50F70 ADRP X0, 0x2CB000
	0x03E50F74 LDR X0, [X0 + 0x930]
	0x03E50F78 BL 0x1C16CF4
	0x03E50F7C MOVZ W8, 0x1
	0x03E50F80 STRB W8, [X20 + 0x866]
	0x03E50F84 MOV X0, X19
	0x03E50F88 STP X31, X31, [X31 + 0x8]
	0x03E50F8C STR X31, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x599000
	006 Move W8, [X20+2255]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {56}
	012 Move X0, 0x2A4000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0x31C000
	016 Move X0, [X0+2176]
	017 Call 0x1C17CF4
	018 Move X0, 0x31C000
	019 Move X0, [X0+2184]
	020 Call 0x1C17CF4
	021 Move X0, 0x31C000
	022 Move X0, [X0+2192]
	023 Call 0x1C17CF4
	024 Move X0, 0x31C000
	025 Move X0, [X0+2200]
	026 Call 0x1C17CF4
	027 Move X0, 0x31C000
	028 Move X0, [X0+2208]
	029 Call 0x1C17CF4
	030 Move X0, 0x31C000
	031 Move X0, [X0+2216]
	032 Call 0x1C17CF4
	033 Move X0, 0x31C000
	034 Move X0, [X0+2224]
	035 Call 0x1C17CF4
	036 Move X0, 0x31C000
	037 Move X0, [X0+2232]
	038 Call 0x1C17CF4
	039 Move X0, 0x2A5000
	040 Move X0, [X0+3808]
	041 Call 0x1C17CF4
	042 Move X0, 0x31C000
	043 Move X0, [X0+2240]
	044 Call 0x1C17CF4
	045 Move X0, 0x31C000
	046 Move X0, [X0+2248]
	047 Call 0x1C17CF4
	048 Move X0, 0x2A4000
	049 Move X0, [X0+2440]
	050 Call 0x1C17CF4
	051 Move X0, 0x31C000
	052 Move X0, [X0+2256]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+2255], W8
	056 Move X0, X19
	057 Move [X31+24], W31
	058 Move [X31+16], X31
	059 Move [X31+40], X31
	060 Move [X31+12], W31
	061 Call RaycastResult.get_isValid, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {251}
	066 Move X8, 0x2A4000
	067 Move X8, [X8+2760]
	068 Move W1, 24
	069 Move X0, [X8]
	070 Call 0x1C17D6C
	071 Compare X0, 0
	072 JumpIfEqual {260}
	073 Move X8, [X0+24]
	074 Move X20, X0
	075 Compare W8, 0
	076 JumpIfEqual {259}
	077 Move X9, 0x2A5000
	078 Move X9, [X9+3808]
	079 Move X9, [X9]
	080 Move [X20+32], X9
	081 Move X0, [X19]
	082 Compare X0, 0
	083 JumpIfEqual {89}
	084 Move X8, [X0]
	085 Move X9, [X8+360]
	086 Move X1, [X8+368]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move [X20+40], X0
	092 Move X9, 0x31C000
	093 Move X9, [X9+2184]
	094 Move X9, [X9]
	095 Move [X20+48], X9
	096 Move X0, [X19+8]
	097 Compare X0, 0
	098 JumpIfEqual {104}
	099 Move X8, [X0]
	100 Move X9, [X8+360]
	101 Move X1, [X8+368]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X20+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X20+56], X0
	107 Move X8, 0x31C000
	108 Move X8, [X8+2240]
	109 Add X0, X19, 16
	110 Move X1, X31
	111 Move X8, [X8]
	112 Move [X20+64], X8
	113 Call Single.ToString, X0
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X20+72], X0
	118 Move X8, 0x31C000
	119 Move X8, [X8+2248]
	120 Add X0, X19, 20
	121 Move X1, X31
	122 Move X8, [X8]
	123 Move [X20+80], X8
	124 Call Single.ToString, X0
	125 Move W8, [X20+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move [X20+88], X0
	129 Move X8, 0x31C000
	130 Move X8, [X8+2224]
	131 Add X0, X19, 24
	132 Move X1, X31
	133 Move X8, [X8]
	134 Move [X20+96], X8
	135 Call Int32.ToString, X0
	136 Move W8, [X20+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X20+104], X0
	140 Move X8, 0x31C000
	141 Move X8, [X8+2232]
	142 Add X0, X31, 16
	143 Move X1, X31
	144 Move X2, X31
	145 Move X8, [X8]
	146 Move X3, X31
	147 Move [X20+112], X8
	148 Move W8, [X19+64]
	149 Move X9, [X19+56]
	150 Move [X31+24], W8
	151 Move [X31+16], X9
	152 Call 0x2431694
	153 Move W8, [X20+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move [X20+120], X0
	157 Move X8, 0x31C000
	158 Move X8, [X8+2216]
	159 Add X0, X31, 16
	160 Move X1, X31
	161 Move X2, X31
	162 Move X8, [X8]
	163 Move X3, X31
	164 Move [X20+128], X8
	165 Move W8, [X19+52]
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 Move [X31+24], W8
	168 Move [X31+16], X9
	169 Call 0x2431694
	170 Move W8, [X20+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move [X20+136], X0
	174 Move X8, 0x31C000
	175 Move X8, [X8+2256]
	176 Add X0, X31, 40
	177 Move X1, X31
	178 Move X2, X31
	179 Move X8, [X8]
	180 Move X3, X31
	181 Move [X20+144], X8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 Move [X31+40], X8
	184 Call 0x25F44C4
	185 Move W8, [X20+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X20+152], X0
	189 Move X8, 0x31C000
	190 Move X8, [X8+2192]
	191 Move X8, [X8]
	192 Move [X20+160], X8
	193 Move X0, [X19+8]
	194 Compare X0, 0
	195 JumpIfEqual {260}
	196 Move X8, [X0]
	197 Move X9, [X8+632]
	198 Move X1, [X8+640]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move [X31+12], W0
	201 Add X0, X31, 12
	202 Move X1, X31
	203 Call Int32.ToString, X0
	204 Move W8, [X20+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X20+168], X0
	208 Move X8, 0x31C000
	209 Move X8, [X8+2176]
	210 Move X8, [X8]
	211 Move [X20+176], X8
	212 Move X0, [X19+8]
	213 Compare X0, 0
	214 JumpIfEqual {260}
	215 Move X8, [X0]
	216 Move X9, [X8+648]
	217 Move X1, [X8+656]
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move [X31+12], W0
	220 Add X0, X31, 12
	221 Move X1, X31
	222 Call Int32.ToString, X0
	223 Move W8, [X20+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move [X20+184], X0
	227 Move X8, 0x31C000
	228 Move X8, [X8+2200]
	229 Add X0, X19, 36
	230 Move X1, X31
	231 Move X8, [X8]
	232 Move [X20+192], X8
	233 Call Int32.ToString, X0
	234 Move W8, [X20+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X20+200], X0
	238 Move X8, 0x31C000
	239 Move X8, [X8+2208]
	240 Add X0, X19, 40
	241 Move X1, X31
	242 Move X8, [X8]
	243 Move [X20+208], X8
	244 Call Int32.ToString, X0
	245 Move W8, [X20+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move [X20+216], X0
	248 Move X0, X20
	249 Move X1, X31
	250 Call String.Concat, X0
	251 Move X8, 0x2A4000
	252 Move X8, [X8+2440]
	253 Move X0, [X8]
	254 Move X20, [X31+48]
	255 Move X19, [X31+56]
	256 Move X30, [X31+32]
	257 Add X31, X31, 64
	258 Return X0
	259 Call 0x1C17F28
	260 Call 0x1C17F20

