Type: UnityEngine.EventSystems.BaseInputModule

Method: System.Boolean get_sendPointerHoverToParent()

Disassembly:
	0x03E54F44 MOV X0, X8
	0x03E54F48 BL 0x1C16DFC

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_sendPointerHoverToParent(System.Boolean value)

Disassembly:
	0x03E54F4C MOV X0, X25
	0x03E54F50 MOV X1, X24
	0x03E54F54 MOV X2, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: UnityEngine.EventSystems.BaseInput get_input()

Disassembly:
	0x03E54F58 BL 0x3C3883C
	0x03E54F5C TBNZ X0, 0x0, 0x3E54F80
	0x03E54F60 LDRB W8, [X27 + 0x28]
	0x03E54F64 CBNZ W8, 0x3E54CD8
	0x03E54F68 CBZ X24, 0x3E54FA0
	0x03E54F6C MOV X0, X24
	0x03E54F70 MOV X1, X31
	0x03E54F74 BL 0x3C3F49C
	0x03E54F78 MOV X24, X0
	0x03E54F7C B 0x3E54CD8
	0x03E54F80 LDP X20, X19, [X31 + 0x60]
	0x03E54F84 LDP X22, X21, [X31 + 0x50]
	0x03E54F88 LDP X24, X23, [X31 + 0x40]
	0x03E54F8C LDP X26, X25, [X31 + 0x30]
	0x03E54F90 LDP X28, X27, [X31 + 0x20]
	0x03E54F94 LDP X29, X30, [X31 + 0x10]
	0x03E54F98 ADD X31, X31, 0x70
	0x03E54F9C RET
	0x03E54FA0 BL 0x1C16F20
	0x03E54FA4 BL 0x1C171E0
	0x03E54FA8 STR D10, [X31 - 0x40]!
	0x03E54FAC STP D9, D8, [X31 + 0x10]
	0x03E54FB0 STP X30, X21, [X31 + 0x20]
	0x03E54FB4 STP X20, X19, [X31 + 0x30]
	0x03E54FB8 ADRP X20, 0x594000
	0x03E54FBC LDRB W8, [X20 + 0x8A0]
	0x03E54FC0 MOV V10.16B, V2.16B
	0x03E54FC4 MOV V8.16B, V1.16B
	0x03E54FC8 MOV V9.16B, V0.16B
	0x03E54FCC MOV X19, X0
	0x03E54FD0 TBNZ X8, 0x0, 0x3E54FE8
	0x03E54FD4 ADRP X0, 0x308000
	0x03E54FD8 LDR X0, [X0 + 0xC00]
	0x03E54FDC BL 0x1C16CF4
	0x03E54FE0 MOVZ W8, 0x1
	0x03E54FE4 STRB W8, [X20 + 0x8A0]
	0x03E54FE8 LDR X20, [X19 + 0x30]
	0x03E54FEC CBNZ X20, 0x3E55018
	0x03E54FF0 ADRP X8, 0x308000
	0x03E54FF4 LDR X21, [X19 + 0x38]
	0x03E54FF8 LDR X8, [X8 + 0xC00]
	0x03E54FFC LDR X0, [X8]
	0x03E55000 BL 0x1C16F10
	0x03E55004 MOV X1, X21
	0x03E55008 MOV X20, X0
	0x03E5500C BL 0x3E4EB50
	0x03E55010 STR X20, [X19 + 0x30]
	0x03E55014 CBZ X20, 0x3E550A4
	0x03E55018 LDR X8, [X20]
	0x03E5501C MOV X0, X20
	0x03E55020 LDP X9, X1, [X8 + 0x178]
	0x03E55024 BLR X9
	0x03E55028 LDR X8, [X19 + 0x30]
	0x03E5502C CBZ X8, 0x3E550A4
	0x03E55030 STP S9, S8, [X8 + 0x20]
	0x03E55034 LDR X0, [X19 + 0x30]
	0x03E55038 FMUL S0, S9, S9
	0x03E5503C FMUL S1, S8, S8
	0x03E55040 FADD S0, S0, S1
	0x03E55044 FMUL S1, S10, S10
	0x03E55048 FCMP S0, S1
	0x03E5504C B.MI 0x3E55074
	0x03E55050 FABS S0, S9
	0x03E55054 FABS S1, S8
	0x03E55058 FCMP S0, S1
	0x03E5505C B.LE 0x3E55094
	0x03E55060 FCMP S9, 0x0
	0x03E55064 CSET W8, GT
	0x03E55068 UBFM W8, W8, 0x1F, 0x1E
	0x03E5506C CBNZ X0, 0x3E5507C
	0x03E55070 B 0x3E550A4
	0x03E55074 MOVZ W8, 0x4
	0x03E55078 CBZ X0, 0x3E550A4
	0x03E5507C LDP X20, X19, [X31 + 0x30]
	0x03E55080 LDP X30, X21, [X31 + 0x20]
	0x03E55084 LDP D9, D8, [X31 + 0x10]
	0x03E55088 STR W8, [X0 + 0x28]
	0x03E5508C LDR V10, [X31], #0x40
	0x03E55090 RET
	0x03E55094 FCMP S8, 0x0
	0x03E55098 MOVZ W8, 0x3
	0x03E5509C CSINC W8, W8, W31, LE
	0x03E550A0 CBNZ X0, 0x3E5507C
	0x03E550A4 BL 0x1C16F20
	0x03E550A8 STP X30, X21, [X31 - 0x20]!
	0x03E550AC STP X20, X19, [X31 + 0x10]
	0x03E550B0 ADRP X20, 0x593000
	0x03E550B4 LDRB W8, [X20 + 0x8A1]
	0x03E550B8 MOV X19, X0
	0x03E550BC TBNZ X8, 0x0, 0x3E550D4
	0x03E550C0 ADRP X0, 0x316000
	0x03E550C4 LDR X0, [X0 + 0x938]
	0x03E550C8 BL 0x1C16CF4
	0x03E550CC MOVZ W8, 0x1
	0x03E550D0 STRB W8, [X20 + 0x8A1]
	0x03E550D4 LDR X20, [X19 + 0x40]
	0x03E550D8 CBNZ X20, 0x3E55104
	0x03E550DC ADRP X8, 0x316000
	0x03E550E0 LDR X21, [X19 + 0x38]
	0x03E550E4 LDR X8, [X8 + 0x938]
	0x03E550E8 LDR X0, [X8]
	0x03E550EC BL 0x1C16F10
	0x03E550F0 MOV X1, X31
	0x03E550F4 MOV X20, X0
	0x03E550F8 BL 0x33BDD8C
	0x03E550FC STR X21, [X20 + 0x18]
	0x03E55100 STR X20, [X19 + 0x40]
	0x03E55104 LDR X8, [X20]
	0x03E55108 MOV X0, X20
	0x03E5510C LDP X9, X1, [X8 + 0x178]
	0x03E55110 BLR X9
	0x03E55114 LDR X0, [X19 + 0x40]
	0x03E55118 LDP X20, X19, [X31 + 0x10]
	0x03E5511C LDP X30, X21, [X31], #0x20
	0x03E55120 RET
	0x03E55124 MOV W0, W31
	0x03E55128 RET
	0x03E5512C STP X30, X19, [X31 - 0x10]!
	0x03E55130 MOV X1, X31
	0x03E55134 MOV X19, X0
	0x03E55138 BL 0x3C323D4
	0x03E5513C TBZ X0, 0x0, 0x3E5515C
	0x03E55140 MOV X0, X19
	0x03E55144 MOV X1, X31
	0x03E55148 BL 0x3C32ECC
	0x03E5514C CBZ X0, 0x3E55168
	0x03E55150 MOV X1, X31
	0x03E55154 LDP X30, X19, [X31], #0x10
	0x03E55158 B 0x3C35834
	0x03E5515C MOV W0, W31
	0x03E55160 LDP X30, X19, [X31], #0x10
	0x03E55164 RET
	0x03E55168 BL 0x1C16F20
	0x03E5516C RET

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x595000
	014 Move X25, 0x2A0000
	015 Move W8, [X20+2203]
	016 Move X25, [X25+1432]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x318000
	023 Move X0, [X0+3024]
	024 Call 0x1C17CF4
	025 Move X0, 0x318000
	026 Move X0, [X0+3032]
	027 Call 0x1C17CF4
	028 Move X0, 0x318000
	029 Move X0, [X0+3040]
	030 Call 0x1C17CF4
	031 Move X0, 0x2A0000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x2A0000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2203], W8
	039 Move X24, X19
	040 Add X24, X24, 72
	041 Move X20, [X24]
	042 Move X0, [X25]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {155}
	055 Move X24, X19
	056 Add X24, X24, 80
	057 Move X20, [X24]
	058 Move X0, [X25]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {155}
	071 Move X8, 0x317000
	072 Move X8, [X8+3032]
	073 Move X0, X19
	074 Move X1, [X8]
	075 Call 0x21A53A8, X0
	076 Compare X0, 0
	077 JumpIfEqual {170}
	078 Move X8, [X0+24]
	079 Move X20, X0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X28, 0x317000
	082 Move X29, 0x29F000
	083 Move X28, [X28+3024]
	084 Move X29, [X29+1728]
	085 Move X26, X31
	086 And X8, X8, 0
	087 Add X27, X20, 32
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X25]
	090 Move X21, [X27]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Move X2, X31
	098 Call Object.op_Inequality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {127}
	103 Compare X21, 0
	104 JumpIfEqual {170}
	105 Move X0, X21
	106 Move X1, X31
	107 Call "il2cpp_vm_object_is_inst", X0
	108 Move X8, [X29]
	109 Move X23, [X28]
	110 Move X22, X0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X23
	117 Move X1, X31
	118 Call Type.GetTypeFromHandle, X0
	119 Move X1, X0
	120 Move X0, X22
	121 Move X2, X31
	122 Call Type.op_Equality, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {131}
	127 Move W8, [X20+24]
	128 Add X26, X26, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X21, [X24]
	131 Move [X24], X21
	132 Move X0, [X25]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X21
	138 Move X1, X31
	139 Move X2, X31
	140 Call Object.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {155}
	145 Move X0, X19
	146 Move X1, X31
	147 Call Component.get_gameObject, X0
	148 Compare X0, 0
	149 JumpIfEqual {170}
	150 Move X8, 0x317000
	151 Move X8, [X8+3040]
	152 Move X1, [X8]
	153 Call 0x21E61FC, X0
	154 Move [X24], X0
	155 Move X0, [X24]
	156 Move X20, [X31+80]
	157 Move X19, [X31+88]
	158 Move X22, [X31+64]
	159 Move X21, [X31+72]
	160 Move X24, [X31+48]
	161 Move X23, [X31+56]
	162 Move X26, [X31+32]
	163 Move X25, [X31+40]
	164 Move X28, [X31+16]
	165 Move X27, [X31+24]
	166 Move X29, [X31+96]
	167 Move X30, [X31+104]
	168 Return X0
	169 Call 0x1C17F28
	170 Call 0x1C17F20

Method: UnityEngine.EventSystems.BaseInput get_inputOverride()

Disassembly:
	0x03E55170 RET
	0x03E55174 RET

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_inputOverride(UnityEngine.EventSystems.BaseInput value)

Disassembly:
	0x03E55178 MOVZ W0, 0x1
	0x03E5517C RET

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: UnityEngine.EventSystems.EventSystem get_eventSystem()

Disassembly:
	0x03E55180 STP X30, X21, [X31 - 0x20]!
	0x03E55184 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void OnEnable()

Disassembly:
	0x03E55188 ADRP X20, 0x593000
	0x03E5518C LDRB W8, [X20 + 0x8A2]
	0x03E55190 MOV X19, X1
	0x03E55194 TBNZ X8, 0x0, 0x3E551AC
	0x03E55198 ADRP X0, 0x2C7000
	0x03E5519C LDR X0, [X0 + 0xE50]
	0x03E551A0 BL 0x1C16CF4
	0x03E551A4 MOVZ W8, 0x1
	0x03E551A8 STRB W8, [X20 + 0x8A2]
	0x03E551AC CBZ X19, 0x3E551F8
	0x03E551B0 ADRP X21, 0x2C7000
	0x03E551B4 LDR X21, [X21 + 0xE50]
	0x03E551B8 LDR W20, [X19 + 0x100]
	0x03E551BC LDR X0, [X21]
	0x03E551C0 LDR W8, [X0 + 0xE0]
	0x03E551C4 CBNZ W8, 0x3E551D0
	0x03E551C8 BL 0x1C16DFC
	0x03E551CC LDR X0, [X21]
	0x03E551D0 LDR X8, [X0 + 0xB8]
	0x03E551D4 TBNZ X20, 0x1F, 0x3E551E8
	0x03E551D8 LDR W8, [X8 + 0xC]
	0x03E551DC LDR W9, [X19 + 0x100]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x594000
	006 Move X21, 0x2FD000
	007 Move W8, [X20+2204]
	008 Move X21, [X21+3320]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2FD000
	015 Move X0, [X0+3320]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2204], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x21A4894, X0
	022 Move [X19+56], X0
	023 Compare X0, 0
	024 JumpIfEqual {31}
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call EventSystem.UpdateModules, X0
	030 Return 
	031 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03E551E0 ADD W0, W9, W8
	0x03E551E4 B 0x3E551EC
	0x03E551E8 LDR W0, [X8 + 0x8]
	0x03E551EC LDP X20, X19, [X31 + 0x10]
	0x03E551F0 LDP X30, X21, [X31], #0x20
	0x03E551F4 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call EventSystem.UpdateModules, X0
	007 Return 
	008 Call 0x1C17F20

Method: System.Void Process()

Disassembly:
	

ISIL:
No ISIL was generated
Method: UnityEngine.EventSystems.RaycastResult FindFirstRaycast(System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> candidates)

Disassembly:
	0x03E551F8 BL 0x1C16F20
	0x03E551FC STR X30, [X31 - 0x30]!
	0x03E55200 STP X22, X21, [X31 + 0x10]
	0x03E55204 STP X20, X19, [X31 + 0x20]
	0x03E55208 ADRP X21, 0x593000
	0x03E5520C ADRP X22, 0x2F4000
	0x03E55210 ADRP X20, 0x2F4000
	0x03E55214 LDRB W8, [X21 + 0x8A3]
	0x03E55218 LDR X22, [X22 + 0x6F0]
	0x03E5521C LDR X20, [X20 + 0x6E8]
	0x03E55220 MOV X19, X0
	0x03E55224 TBNZ X8, 0x0, 0x3E55248
	0x03E55228 ADRP X0, 0x2F4000
	0x03E5522C LDR X0, [X0 + 0x6E8]
	0x03E55230 BL 0x1C16CF4
	0x03E55234 ADRP X0, 0x2F4000
	0x03E55238 LDR X0, [X0 + 0x6F0]
	0x03E5523C BL 0x1C16CF4
	0x03E55240 MOVZ W8, 0x1
	0x03E55244 STRB W8, [X21 + 0x8A3]
	0x03E55248 LDR X0, [X22]
	0x03E5524C BL 0x1C16F10
	0x03E55250 LDR X1, [X20]
	0x03E55254 MOV X20, X0
	0x03E55258 BL 0x303553C
	0x03E5525C MOVZ W8, 0x1
	0x03E55260 STR X20, [X19 + 0x20]
	0x03E55264 STRB W8, [X19 + 0x28]
	0x03E55268 MOV X0, X19
	0x03E5526C LDP X20, X19, [X31 + 0x20]
	0x03E55270 LDP X22, X21, [X31 + 0x10]
	0x03E55274 MOV X1, X31
	0x03E55278 LDR X30, [X31], #0x30
	0x03E5527C B 0x3C36C30
	0x03E55280 STR X30, [X31 - 0x40]!
	0x03E55284 STP X24, X23, [X31 + 0x10]
	0x03E55288 STP X22, X21, [X31 + 0x20]
	0x03E5528C STP X20, X19, [X31 + 0x30]
	0x03E55290 ADRP X23, 0x593000
	0x03E55294 LDRB W8, [X23 + 0x8A4]
	0x03E55298 MOV W22, W3
	0x03E5529C MOV X20, X2
	0x03E552A0 MOV W19, W1
	0x03E552A4 MOV X21, X0
	0x03E552A8 TBNZ X8, 0x0, 0x3E552D8
	0x03E552AC ADRP X0, 0x307000
	0x03E552B0 LDR X0, [X0 + 0xBE0]
	0x03E552B4 BL 0x1C16CF4
	0x03E552B8 ADRP X0, 0x307000
	0x03E552BC LDR X0, [X0 + 0xB80]
	0x03E552C0 BL 0x1C16CF4
	0x03E552C4 ADRP X0, 0x2F4000
	0x03E552C8 LDR X0, [X0 + 0x708]
	0x03E552CC BL 0x1C16CF4
	0x03E552D0 MOVZ W8, 0x1
	0x03E552D4 STRB W8, [X23 + 0x8A4]
	0x03E552D8 LDR X0, [X21 + 0x58]
	0x03E552DC CBZ X0, 0x3E55368
	0x03E552E0 ADRP X8, 0x307000
	0x03E552E4 LDR X8, [X8 + 0xB80]
	0x03E552E8 MOV W1, W19
	0x03E552EC MOV X2, X20
	0x03E552F0 LDR X3, [X8]
	0x03E552F4 BL 0x2A150AC
	0x03E552F8 EOR W8, W0, 0x1
	0x03E552FC AND W24, W8, W22, 0x0
	0x03E55300 TBZ X24, 0x0, 0x3E55350
	0x03E55304 ADRP X8, 0x2F4000
	0x03E55308 LDR X23, [X21 + 0x38]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X21, 0x594000
	011 Move W9, [X21+2205]
	012 Move X20, X0
	013 Move X19, X8
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2F5000
	019 Move X0, [X0+816]
	020 Call 0x1C17CF4
	021 Move X0, 0x2F5000
	022 Move X0, [X0+824]
	023 Call 0x1C17CF4
	024 Move X0, 0x29F000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2205], W8
	029 Compare X20, 0
	030 JumpIfEqual {84}
	031 Move W23, [X20+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X24, 0x2F5000
	034 Move X25, 0x29F000
	035 Move X24, [X24+824]
	036 Move X25, [X25+1432]
	037 Move W21, W31
	038 Move X2, [X24]
	039 Add X8, X31, 0
	040 Move X0, X20
	041 Move W1, W21
	042 Call List`1<RaycastResult>.get_Item, X0, X1
	043 Move X0, [X25]
	044 Move X22, [X31]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X22
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Equality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {65}
	057 Add W21, W21, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction MOVI not yet implemented."
	060 Move [X19+48], V0
	061 Move [X19+56], V0
	062 Move [X19+16], V0
	063 Move [X19+24], V0
	064 Move [X19], V0
	065 Move X2, [X24]
	066 Add X8, X31, 0
	067 Move X0, X20
	068 Move W1, W21
	069 Call List`1<RaycastResult>.get_Item, X0, X1
	070 Add X1, X31, 0
	071 Move W2, 80
	072 Move X0, X19
	073 Call 0x3EB2AC0
	074 Move X20, [X31+128]
	075 Move X19, [X31+136]
	076 Move X22, [X31+112]
	077 Move X21, [X31+120]
	078 Move X24, [X31+96]
	079 Move X23, [X31+104]
	080 Move X30, [X31+80]
	081 Move X25, [X31+88]
	082 Add X31, X31, 144
	083 Return X0
	084 Call 0x1C17F20

Method: UnityEngine.EventSystems.MoveDirection DetermineMoveDirection(System.Single x, System.Single y)

Disassembly:
	0x03E5530C LDR X8, [X8 + 0x708]
	0x03E55310 LDR X0, [X8]
	0x03E55314 BL 0x1C16F10
	0x03E55318 MOV X1, X23
	0x03E5531C MOV X22, X0
	0x03E55320 BL 0x3E4F118
	0x03E55324 CBZ X22, 0x3E55368
	0x03E55328 STR W19, [X22 + 0x100]
	0x03E5532C STR X22, [X20]
	0x03E55330 LDR X0, [X21 + 0x58]
	0x03E55334 CBZ X0, 0x3E55368
	0x03E55338 ADRP X8, 0x307000
	0x03E5533C LDR X8, [X8 + 0xBE0]
	0x03E55340 MOV W1, W19
	0x03E55344 MOV X2, X22
	0x03E55348 LDR X3, [X8]
	0x03E5534C BL 0x2A1368C
	0x03E55350 AND W0, W24, 0x1
	0x03E55354 LDP X20, X19, [X31 + 0x30]
	0x03E55358 LDP X22, X21, [X31 + 0x20]
	0x03E5535C LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X8, -53911552
	002 Move V2, [X8+332]
	003 Multiply S3, S0, S0
	004 Multiply S4, S1, S1
	005 Add S3, S3, S4
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction FABS not yet implemented."
	008 NotImplemented "Instruction FABS not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move W0, W8
	013 ShiftRight W0, 31
	014 And W0, W0, 0x3FFFFFFF
	015 Return X0
	016 Move W0, 4
	017 Return X0
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move W8, 3
	020 NotImplemented "Instruction CSINC not yet implemented."
	021 Return X0

Method: UnityEngine.EventSystems.MoveDirection DetermineMoveDirection(System.Single x, System.Single y, System.Single deadZone)

Disassembly:
	0x03E55360 LDR X30, [X31], #0x40
	0x03E55364 RET
	0x03E55368 BL 0x1C16F20
	0x03E5536C STP X30, X21, [X31 - 0x20]!
	0x03E55370 STP X20, X19, [X31 + 0x10]
	0x03E55374 ADRP X21, 0x593000
	0x03E55378 LDRB W8, [X21 + 0x8A5]
	0x03E5537C MOV X19, X1
	0x03E55380 MOV X20, X0
	0x03E55384 TBNZ X8, 0x0, 0x3E5539C
	0x03E55388 ADRP X0, 0x307000
	0x03E5538C LDR X0, [X0 + 0xC08]
	0x03E55390 BL 0x1C16CF4
	0x03E55394 MOVZ W8, 0x1
	0x03E55398 STRB W8, [X21 + 0x8A5]
	0x03E5539C CBZ X19, 0x3E553C4
	0x03E553A0 LDR X0, [X20 + 0x58]
	0x03E553A4 CBZ X0, 0x3E553C4
	0x03E553A8 ADRP X8, 0x307000
	0x03E553AC LDR X8, [X8 + 0xC08]

ISIL:
	001 Multiply S3, S0, S0
	002 Multiply S4, S1, S1
	003 Add S3, S3, S4
	004 Multiply S2, S2, S2
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 NotImplemented "Instruction FABS not yet implemented."
	007 NotImplemented "Instruction FABS not yet implemented."
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move W0, W8
	012 ShiftRight W0, 31
	013 And W0, W0, 0x3FFFFFFF
	014 Return X0
	015 Move W0, 4
	016 Return X0
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move W8, 3
	019 NotImplemented "Instruction CSINC not yet implemented."
	020 Return X0

Method: UnityEngine.GameObject FindCommonRoot(UnityEngine.GameObject g1, UnityEngine.GameObject g2)

Disassembly:
	0x03E553B0 LDR W1, [X19 + 0x100]
	0x03E553B4 LDP X20, X19, [X31 + 0x10]
	0x03E553B8 LDR X2, [X8]
	0x03E553BC LDP X30, X21, [X31], #0x20
	0x03E553C0 B 0x2A14A88
	0x03E553C4 BL 0x1C16F20
	0x03E553C8 SUB X31, X31, 0xE0
	0x03E553CC STR D8, [X31 + 0xA0]
	0x03E553D0 STP X30, X23, [X31 + 0xB0]
	0x03E553D4 STP X22, X21, [X31 + 0xC0]
	0x03E553D8 STP X20, X19, [X31 + 0xD0]
	0x03E553DC ADRP X23, 0x593000
	0x03E553E0 LDRB W8, [X23 + 0x8A6]
	0x03E553E4 MOV X22, X3
	0x03E553E8 MOV X21, X2
	0x03E553EC MOV X19, X1
	0x03E553F0 MOV X20, X0
	0x03E553F4 TBNZ X8, 0x0, 0x3E5540C
	0x03E553F8 ADRP X0, 0x2F4000
	0x03E553FC LDR X0, [X0 + 0x328]
	0x03E55400 BL 0x1C16CF4
	0x03E55404 MOVZ W8, 0x1
	0x03E55408 STRB W8, [X23 + 0x8A6]
	0x03E5540C MOVI V0.2D, 0x0
	0x03E55410 MOV X0, X19
	0x03E55414 MOV X1, X31
	0x03E55418 STR X31, [X31 + 0xA8]
	0x03E5541C STP V0, V0, [X31 + 0x80]
	0x03E55420 STP V0, V0, [X31 + 0x60]
	0x03E55424 STR V0, [X31 + 0x5]
	0x03E55428 BL 0x3C845A8
	0x03E5542C MOV W1, W0
	0x03E55430 ADD X2, X31, 0xA8
	0x03E55434 MOVZ W3, 0x1
	0x03E55438 MOV X0, X20
	0x03E5543C BL 0x3E55280
	0x03E55440 LDR X8, [X31 + 0xA8]
	0x03E55444 CBZ X8, 0x3E55740
	0x03E55448 LDR X9, [X8]
	0x03E5544C MOV W23, W0
	0x03E55450 MOV X0, X8
	0x03E55454 LDP X10, X1, [X9 + 0x178]
	0x03E55458 BLR X10
	0x03E5545C TBZ X23, 0x0, 0x3E55468
	0x03E55460 MOVZ W8, 0x1
	0x03E55464 B 0x3E5547C
	0x03E55468 MOV X0, X19
	0x03E5546C MOV X1, X31
	0x03E55470 BL 0x3C845F0
	0x03E55474 CMP W0, 0x0
	0x03E55478 CSET W8, EQ
	0x03E5547C MOV X0, X19
	0x03E55480 MOV X1, X31
	0x03E55484 STRB W8, [X21]
	0x03E55488 BL 0x3C845F0
	0x03E5548C CMP W0, 0x4
	0x03E55490 B.NE 0x3E5549C
	0x03E55494 MOVZ W8, 0x1
	0x03E55498 B 0x3E554B0
	0x03E5549C MOV X0, X19
	0x03E554A0 MOV X1, X31
	0x03E554A4 BL 0x3C845F0
	0x03E554A8 CMP W0, 0x3
	0x03E554AC CSET W8, EQ
	0x03E554B0 STRB W8, [X22]
	0x03E554B4 TBZ X23, 0x0, 0x3E554D4
	0x03E554B8 LDR X22, [X31 + 0xA8]
	0x03E554BC MOV X0, X19
	0x03E554C0 MOV X1, X31
	0x03E554C4 BL 0x3C845B0
	0x03E554C8 CBZ X22, 0x3E55740
	0x03E554CC STR S0, [X22 + 0x104]
	0x03E554D0 STR S1, [X22 + 0x108]
	0x03E554D4 LDRB W8, [X21]
	0x03E554D8 ADRP X21, 0x2A6000
	0x03E554DC LDR X23, [X31 + 0xA8]
	0x03E554E0 LDR X21, [X21 + 0xF08]
	0x03E554E4 CBZ W8, 0x3E55538
	0x03E554E8 ADRP X22, 0x584000
	0x03E554EC LDRB W8, [X22 + 0x78F]
	0x03E554F0 CBNZ W8, 0x3E55508
	0x03E554F4 ADRP X0, 0x2A6000
	0x03E554F8 LDR X0, [X0 + 0xF08]
	0x03E554FC BL 0x1C16CF4
	0x03E55500 MOVZ W8, 0x1
	0x03E55504 STRB W8, [X22 + 0x78F]
	0x03E55508 CBZ X23, 0x3E55740
	0x03E5550C LDR X8, [X21]
	0x03E55510 MOV X0, X19
	0x03E55514 MOV X1, X31
	0x03E55518 LDR X8, [X8 + 0xB8]
	0x03E5551C LDR V0, [X8]
	0x03E55520 ADD X8, X23, 0x10C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x594000
	007 Move X22, 0x29F000
	008 Move W8, [X21+2206]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x29F000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2206], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {47}
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {54}
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X0, X31
	052 Move X30, [X31+48]
	053 Return X0
	054 Compare X20, 0
	055 JumpIfEqual {126}
	056 Move X0, X20
	057 Move X1, X31
	058 Call GameObject.get_transform, X0
	059 Move X20, X0
	060 Move X0, [X22]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X31
	067 Move X2, X31
	068 Call Object.op_Inequality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {47}
	073 Compare X19, 0
	074 JumpIfEqual {126}
	075 Move X0, X19
	076 Move X1, X31
	077 Call GameObject.get_transform, X0
	078 Move X21, X0
	079 Move X0, [X22]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Move X2, X31
	087 Call Object.op_Inequality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {110}
	092 Move X0, [X22]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X20
	098 Move X1, X21
	099 Move X2, X31
	100 Call Object.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {115}
	105 Compare X21, 0
	106 JumpIfEqual {126}
	107 Move X0, X21
	108 Move X1, X31
	109 Call Transform.get_parent, X0
	110 Compare X20, 0
	111 JumpIfEqual {126}
	112 Move X0, X20
	113 Move X1, X31
	114 Call Transform.get_parent, X0
	115 Compare X20, 0
	116 JumpIfEqual {126}
	117 Move X0, X20
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X1, X31
	123 Move X30, [X31+48]
	124 Call Component.get_gameObject, X0
	125 Return X0
	126 Call 0x1C17F20

Method: System.Void HandlePointerExitAndEnter(UnityEngine.EventSystems.PointerEventData currentPointerData, UnityEngine.GameObject newEnterTarget)

Disassembly:
	0x03E55524 STR D0, [X8]
	0x03E55528 LDR X22, [X31 + 0xA8]
	0x03E5552C BL 0x3C845B0
	0x03E55530 CBNZ X22, 0x3E55574
	0x03E55534 B 0x3E55740
	0x03E55538 MOV X0, X19
	0x03E5553C MOV X1, X31
	0x03E55540 BL 0x3C845B0
	0x03E55544 LDR X22, [X31 + 0xA8]
	0x03E55548 CBZ X22, 0x3E55740
	0x03E5554C CBZ X23, 0x3E55740
	0x03E55550 ADD X8, X22, 0x104
	0x03E55554 LDR V2, [X8]
	0x03E55558 MOV V0.S[1], V1.S[0]
	0x03E5555C ADD X8, X23, 0x10C
	0x03E55560 MOV X0, X19
	0x03E55564 FSUB V0.2S, V0.2S, V2.2S
	0x03E55568 MOV X1, X31
	0x03E5556C STR D0, [X8]
	0x03E55570 BL 0x3C845B0
	0x03E55574 STR S0, [X22 + 0x104]
	0x03E55578 STR S1, [X22 + 0x108]
	0x03E5557C LDR X8, [X31 + 0xA8]
	0x03E55580 CBZ X8, 0x3E55740
	0x03E55584 MOV X0, X19
	0x03E55588 MOV X1, X31
	0x03E5558C STR W31, [X8 + 0x148]
	0x03E55590 BL 0x3C845F0
	0x03E55594 CMP W0, 0x4
	0x03E55598 B.NE 0x3E555D4
	0x03E5559C LDR X22, [X31 + 0xA8]
	0x03E555A0 MOVI V0.2D, 0x0
	0x03E555A4 STP V0, V0, [X31 + 0x30]
	0x03E555A8 STP V0, V0, [X31 + 0x10]
	0x03E555AC STR V0, [X31]
	0x03E555B0 CBZ X22, 0x3E55740
	0x03E555B4 ADD X0, X22, 0x50
	0x03E555B8 ADD X1, X31, 0x0
	0x03E555BC MOVZ W2, 0x50
	0x03E555C0 BL 0x3EB1AC0
	0x03E555C4 MOV X0, X19
	0x03E555C8 MOV X1, X31
	0x03E555CC BL 0x3C845F8
	0x03E555D0 B 0x3E5565C
	0x03E555D4 LDR X8, [X20 + 0x38]
	0x03E555D8 CBZ X8, 0x3E55740
	0x03E555DC LDR X2, [X20 + 0x20]
	0x03E555E0 LDR X1, [X31 + 0xA8]
	0x03E555E4 BL 0x3E508EC
	0x03E555E8 LDR X0, [X20 + 0x20]
	0x03E555EC ADD X8, X31, 0x50
	0x03E555F0 BL 0x3E541F8
	0x03E555F4 LDR X22, [X31 + 0xA8]
	0x03E555F8 ADD X0, X31, 0x0
	0x03E555FC ADD X1, X31, 0x50
	0x03E55600 MOVZ W2, 0x50
	0x03E55604 BL 0x3EB1AC0
	0x03E55608 CBZ X22, 0x3E55740
	0x03E5560C ADD X0, X22, 0x50
	0x03E55610 ADD X1, X31, 0x0
	0x03E55614 MOVZ W2, 0x50
	0x03E55618 BL 0x3EB1AC0
	0x03E5561C LDR X8, [X20 + 0x20]
	0x03E55620 CBZ X8, 0x3E55740
	0x03E55624 LDP W2, W9, [X8 + 0x18]
	0x03E55628 ADD W9, W9, 0x1
	0x03E5562C CMP W2, 0x1
	0x03E55630 STP W31, W9, [X8 + 0x18]
	0x03E55634 B.LT 0x3E5564C
	0x03E55638 LDR X0, [X8 + 0x10]
	0x03E5563C MOV W1, W31
	0x03E55640 MOV X3, X31
	0x03E55644 BL 0x339FA34
	0x03E55648 LDR X22, [X31 + 0xA8]
	0x03E5564C MOV X0, X19
	0x03E55650 MOV X1, X31
	0x03E55654 BL 0x3C845F8
	0x03E55658 CBZ X22, 0x3E55740
	0x03E5565C STR S0, [X22 + 0x14C]
	0x03E55660 LDR X20, [X31 + 0xA8]
	0x03E55664 MOV X0, X19
	0x03E55668 MOV X1, X31
	0x03E5566C BL 0x3C84610
	0x03E55670 CBZ X20, 0x3E55740
	0x03E55674 STR S0, [X20 + 0x154]
	0x03E55678 LDR X20, [X31 + 0xA8]
	0x03E5567C MOV X0, X19
	0x03E55680 MOV X1, X31
	0x03E55684 BL 0x3C84618
	0x03E55688 CBZ X20, 0x3E55740
	0x03E5568C STR S0, [X20 + 0x158]
	0x03E55690 ADRP X20, 0x58C000
	0x03E55694 LDRB W8, [X20 + 0xA48]
	0x03E55698 LDR X22, [X31 + 0xA8]
	0x03E5569C CBNZ W8, 0x3E556B4
	0x03E556A0 ADRP X0, 0x2A6000
	0x03E556A4 LDR X0, [X0 + 0xF08]
	0x03E556A8 BL 0x1C16CF4
	0x03E556AC MOVZ W8, 0x1
	0x03E556B0 STRB W8, [X20 + 0xA48]
	0x03E556B4 LDR X8, [X21]
	0x03E556B8 MOV X0, X19
	0x03E556BC MOV X1, X31
	0x03E556C0 LDR X8, [X8 + 0xB8]
	0x03E556C4 LDR V8, [X8 + 0x8]
	0x03E556C8 BL 0x3C84620
	0x03E556CC CBZ X22, 0x3E55740
	0x00000000 INVALID
	0x03E556D4 ADD X8, X22, 0x16C
	0x03E556D8 STR D0, [X8]
	0x03E556DC LDRB W8, [X20 + 0xA48]
	0x03E556E0 LDR X22, [X31 + 0xA8]
	0x03E556E4 CBNZ W8, 0x3E556FC
	0x03E556E8 ADRP X0, 0x2A6000
	0x03E556EC LDR X0, [X0 + 0xF08]
	0x03E556F0 BL 0x1C16CF4
	0x03E556F4 MOVZ W8, 0x1
	0x03E556F8 STRB W8, [X20 + 0xA48]
	0x03E556FC LDR X8, [X21]
	0x03E55700 MOV X0, X19
	0x03E55704 MOV X1, X31
	0x03E55708 LDR X8, [X8 + 0xB8]
	0x03E5570C LDR V8, [X8 + 0x8]
	0x03E55710 BL 0x3C84628
	0x03E55714 CBZ X22, 0x3E55740
	0x00000000 INVALID
	0x03E5571C ADD X8, X22, 0x174
	0x03E55720 STR D0, [X8]
	0x03E55724 LDR X0, [X31 + 0xA8]
	0x03E55728 LDP X20, X19, [X31 + 0xD0]
	0x03E5572C LDP X22, X21, [X31 + 0xC0]
	0x03E55730 LDP X30, X23, [X31 + 0xB0]
	0x03E55734 LDR V8, [X31 + 0xA0]
	0x03E55738 ADD X31, X31, 0xE0
	0x03E5573C RET
	0x03E55740 BL 0x1C16F20
	0x03E55744 STR X30, [X31 - 0x30]!
	0x03E55748 STP X22, X21, [X31 + 0x10]
	0x03E5574C STP X20, X19, [X31 + 0x20]
	0x03E55750 CBZ X1, 0x3E557C8
	0x03E55754 MOV X19, X2
	0x03E55758 CBZ X2, 0x3E557C8
	0x03E5575C ADD X21, X1, 0x104
	0x03E55760 LDR V0, [X21]
	0x03E55764 ADD X22, X19, 0x104
	0x03E55768 MOV X20, X1
	0x03E5576C ADD X1, X1, 0x50
	0x03E55770 STR D0, [X22]
	0x03E55774 LDR V0, [X21 + 0x8]
	0x03E55778 ADD X0, X19, 0x50
	0x03E5577C MOVZ W2, 0x50
	0x03E55780 STR D0, [X22 + 0x8]
	0x03E55784 LDR V0, [X21 + 0x38]
	0x03E55788 STR D0, [X22 + 0x38]
	0x03E5578C BL 0x3EB1B30
	0x03E55790 LDR X8, [X20 + 0x20]
	0x03E55794 STR X8, [X19 + 0x20]
	0x03E55798 LDUR V0, [X21 + 0x48]
	0x03E5579C STUR V0, [X22 + 0x48]
	0x03E557A0 LDR V0, [X20 + 0x15C]
	0x03E557A4 STR S0, [X19 + 0x15C]
	0x03E557A8 LDR V0, [X21 + 0x68]
	0x03E557AC LDP X20, X19, [X31 + 0x20]
	0x03E557B0 STR D0, [X22 + 0x68]
	0x03E557B4 LDR V0, [X21 + 0x70]
	0x03E557B8 STR D0, [X22 + 0x70]
	0x03E557BC LDP X22, X21, [X31 + 0x10]
	0x03E557C0 LDR X30, [X31], #0x30
	0x03E557C4 RET
	0x03E557C8 BL 0x1C16F20
	0x03E557CC STP X30, X21, [X31 - 0x20]!
	0x03E557D0 STP X20, X19, [X31 + 0x10]
	0x03E557D4 MOV W19, W1
	0x03E557D8 MOV X20, X0
	0x03E557DC BL 0x3E53F58
	0x03E557E0 CBZ X0, 0x3E55844
	0x03E557E4 LDR X8, [X0]
	0x03E557E8 MOV W1, W19
	0x03E557EC LDR X9, [X8 + 0x2A8]
	0x03E557F0 LDR X2, [X8 + 0x2B0]
	0x03E557F4 BLR X9
	0x03E557F8 MOV W21, W0
	0x03E557FC MOV X0, X20
	0x03E55800 BL 0x3E53F58
	0x03E55804 CBZ X0, 0x3E55844
	0x03E55808 LDR X8, [X0]
	0x03E5580C MOV W1, W19
	0x03E55810 LDR X9, [X8 + 0x2B8]
	0x03E55814 LDR X2, [X8 + 0x2C0]
	0x03E55818 BLR X9
	0x03E5581C ANDS W31, W0, 0x1
	0x03E55820 TBZ X21, 0x0, 0x3E55830
	0x03E55824 MOVZ W8, 0x2
	0x03E55828 CSEL W0, W8, W31, NE
	0x03E5582C B 0x3E55838
	0x03E55830 MOVZ W8, 0x3
	0x03E55834 CSINC W0, W8, W31, EQ
	0x03E55838 LDP X20, X19, [X31 + 0x10]
	0x03E5583C LDP X30, X21, [X31], #0x20
	0x03E55840 RET
	0x03E55844 BL 0x1C16F20
	0x03E55848 LDR X8, [X0]
	0x03E5584C MOV W1, W31
	0x03E55850 LDR X3, [X8 + 0x2F8]
	0x03E55854 LDR X2, [X8 + 0x300]
	0x03E55858 BR X3
	0x03E5585C SUB X31, X31, 0x110
	0x03E55860 STP X29, X30, [X31 + 0xE0]
	0x03E55864 STP X22, X21, [X31 + 0xF0]
	0x03E55868 STP X20, X19, [X31 + 0x100]
	0x03E5586C ADRP X20, 0x593000
	0x03E55870 LDRB W8, [X20 + 0x8A7]
	0x03E55874 MOV X19, X0
	0x03E55878 TBNZ X8, 0x0, 0x3E55890
	0x03E5587C ADRP X0, 0x2F4000
	0x03E55880 LDR X0, [X0 + 0x328]
	0x03E55884 BL 0x1C16CF4
	0x03E55888 MOVZ W8, 0x1
	0x03E5588C STRB W8, [X20 + 0x8A7]
	0x03E55890 MOVI V0.2D, 0x0
	0x03E55894 ADD X2, X31, 0xD8
	0x03E55898 MOVN W1, 0x0
	0x03E5589C MOVZ W3, 0x1
	0x03E558A0 MOV X0, X19
	0x03E558A4 STR X31, [X31 + 0xD8]
	0x03E558A8 STP X31, X31, [X31 + 0x70]
	0x03E558AC STP V0, V0, [X31 + 0xB0]
	0x03E558B0 STP V0, V0, [X31 + 0x90]
	0x03E558B4 STR V0, [X31 + 0x8]
	0x03E558B8 BL 0x3E55280
	0x03E558BC LDR X8, [X31 + 0xD8]
	0x03E558C0 CBZ X8, 0x3E55B70
	0x03E558C4 LDR X9, [X8]
	0x03E558C8 MOV W20, W0
	0x03E558CC MOV X0, X8
	0x03E558D0 LDP X10, X1, [X9 + 0x178]
	0x03E558D4 BLR X10
	0x03E558D8 TBZ X20, 0x0, 0x3E55908
	0x03E558DC LDR X20, [X31 + 0xD8]
	0x03E558E0 MOV X0, X19
	0x03E558E4 BL 0x3E53F58
	0x03E558E8 CBZ X0, 0x3E55B70
	0x03E558EC LDR X8, [X0]
	0x03E558F0 LDR X9, [X8 + 0x2D8]
	0x03E558F4 LDR X1, [X8 + 0x2E0]
	0x03E558F8 BLR X9
	0x03E558FC CBZ X20, 0x3E55B70
	0x03E55900 STR S0, [X20 + 0x104]
	0x03E55904 STR S1, [X20 + 0x108]
	0x03E55908 MOV X0, X19
	0x03E5590C BL 0x3E53F58
	0x03E55910 CBZ X0, 0x3E55B70
	0x03E55914 LDR X8, [X0]
	0x03E55918 LDR X9, [X8 + 0x2D8]
	0x03E5591C LDR X1, [X8 + 0x2E0]
	0x03E55920 BLR X9
	0x03E55924 MOV X0, X31
	0x03E55928 STR D0, [X31]
	0x03E5592C STR D1, [X31 + 0x10]
	0x03E55930 BL 0x3C246D4
	0x03E55934 LDR X20, [X31 + 0xD8]
	0x03E55938 CMP W0, 0x1
	0x03E5593C ADD X21, X20, 0x104
	0x03E55940 B.NE 0x3E55990
	0x03E55944 CBZ X20, 0x3E55B70
	0x03E55948 FMOV V0.2S, 0x0
	0x03E5594C STR D0, [X21]
	0x03E55950 ADRP X22, 0x584000
	0x03E55954 LDRB W8, [X22 + 0x78F]
	0x03E55958 CBNZ W8, 0x3E55974
	0x03E5595C ADRP X0, 0x2A6000
	0x03E55960 LDR X0, [X0 + 0xF08]
	0x03E55964 BL 0x1C16CF4
	0x03E55968 LDR X20, [X31 + 0xD8]
	0x03E5596C MOVZ W8, 0x1
	0x03E55970 STRB W8, [X22 + 0x78F]
	0x03E55974 ADRP X8, 0x2A6000
	0x03E55978 LDR X8, [X8 + 0xF08]
	0x03E5597C LDR X8, [X8]
	0x03E55980 LDR X8, [X8 + 0xB8]
	0x03E55984 LDR V0, [X8]
	0x03E55988 STR D0, [X21 + 0x8]
	0x03E5598C B 0x3E559B4
	0x03E55990 CBZ X20, 0x3E55B70
	0x03E55994 LDP V3, V2, [X31]
	0x03E55998 LDR V0, [X21]
	0x03E5599C MOV V1.16B, V3.16B
	0x03E559A0 MOV V1.S[1], V2.S[0]
	0x03E559A4 FSUB V0.2S, V1.2S, V0.2S
	0x03E559A8 STR D0, [X21 + 0x8]
	0x03E559AC STR S3, [X20 + 0x104]
	0x03E559B0 STR S2, [X20 + 0x108]
	0x03E559B4 MOV X0, X19
	0x03E559B8 BL 0x3E53F58
	0x03E559BC CBZ X0, 0x3E55B70
	0x03E559C0 LDR X8, [X0]
	0x03E559C4 LDR X9, [X8 + 0x2E8]
	0x03E559C8 LDR X1, [X8 + 0x2F0]
	0x03E559CC BLR X9
	0x03E559D0 CBZ X20, 0x3E55B70
	0x03E559D4 STR S0, [X20 + 0x13C]
	0x03E559D8 STR S1, [X20 + 0x140]
	0x03E559DC LDR X1, [X31 + 0xD8]
	0x03E559E0 CBZ X1, 0x3E55B70
	0x03E559E4 STR W31, [X1 + 0x148]
	0x03E559E8 LDR X8, [X19 + 0x38]
	0x03E559EC CBZ X8, 0x3E55B70
	0x03E559F0 LDR X2, [X19 + 0x20]
	0x03E559F4 BL 0x3E508EC
	0x03E559F8 LDR X0, [X19 + 0x20]
	0x03E559FC ADD X8, X31, 0x80
	0x03E55A00 BL 0x3E541F8
	0x03E55A04 LDR X20, [X31 + 0xD8]
	0x03E55A08 ADD X0, X31, 0x20
	0x03E55A0C ADD X1, X31, 0x80
	0x03E55A10 MOVZ W2, 0x50
	0x03E55A14 BL 0x3EB1AC0
	0x03E55A18 CBZ X20, 0x3E55B70
	0x03E55A1C ADD X0, X20, 0x50
	0x03E55A20 ADD X1, X31, 0x20
	0x03E55A24 MOVZ W2, 0x50
	0x03E55A28 BL 0x3EB1AC0
	0x03E55A2C LDR X8, [X19 + 0x20]
	0x03E55A30 CBZ X8, 0x3E55B70
	0x03E55A34 LDP W2, W9, [X8 + 0x18]
	0x03E55A38 ADD W9, W9, 0x1
	0x03E55A3C CMP W2, 0x1
	0x03E55A40 STP W31, W9, [X8 + 0x18]
	0x03E55A44 B.LT 0x3E55A58
	0x03E55A48 LDR X0, [X8 + 0x10]
	0x03E55A4C MOV W1, W31
	0x03E55A50 MOV X3, X31
	0x03E55A54 BL 0x339FA34
	0x03E55A58 ADD X2, X31, 0x78
	0x03E55A5C MOVN W1, 0x1
	0x03E55A60 MOVZ W3, 0x1
	0x03E55A64 MOV X0, X19
	0x03E55A68 BL 0x3E55280
	0x03E55A6C LDR X0, [X31 + 0x78]
	0x03E55A70 CBZ X0, 0x3E55B70
	0x03E55A74 LDR X8, [X0]
	0x03E55A78 LDP X9, X1, [X8 + 0x178]
	0x03E55A7C BLR X9
	0x03E55A80 LDR X1, [X31 + 0xD8]
	0x03E55A84 LDR X2, [X31 + 0x78]
	0x03E55A88 BL 0x3E55744
	0x03E55A8C LDR X8, [X31 + 0x78]
	0x03E55A90 CBZ X8, 0x3E55B70
	0x03E55A94 MOVZ W9, 0x1
	0x03E55A98 ADD X2, X31, 0x70
	0x03E55A9C MOVN W1, 0x2
	0x03E55AA0 MOVZ W3, 0x1
	0x03E55AA4 MOV X0, X19
	0x03E55AA8 STR W9, [X8 + 0x148]
	0x03E55AAC BL 0x3E55280
	0x03E55AB0 LDR X0, [X31 + 0x70]
	0x03E55AB4 CBZ X0, 0x3E55B70
	0x03E55AB8 LDR X8, [X0]
	0x03E55ABC LDP X9, X1, [X8 + 0x178]
	0x03E55AC0 BLR X9
	0x03E55AC4 LDR X1, [X31 + 0xD8]
	0x03E55AC8 LDR X2, [X31 + 0x70]
	0x03E55ACC BL 0x3E55744
	0x03E55AD0 LDR X8, [X31 + 0x70]
	0x03E55AD4 CBZ X8, 0x3E55B70
	0x03E55AD8 MOVZ W9, 0x2
	0x03E55ADC STR W9, [X8 + 0x148]
	0x03E55AE0 LDR X20, [X19 + 0x60]
	0x03E55AE4 MOV X0, X19
	0x03E55AE8 MOV W1, W31
	0x03E55AEC BL 0x3E557CC
	0x03E55AF0 CBZ X20, 0x3E55B70
	0x03E55AF4 LDR X3, [X31 + 0xD8]
	0x03E55AF8 MOV W2, W0
	0x03E55AFC MOV X0, X20
	0x03E55B00 MOV W1, W31
	0x03E55B04 BL 0x3E55B74
	0x03E55B08 LDR X20, [X19 + 0x60]
	0x03E55B0C MOVZ W1, 0x1
	0x03E55B10 MOV X0, X19
	0x03E55B14 BL 0x3E557CC
	0x03E55B18 CBZ X20, 0x3E55B70
	0x03E55B1C LDR X3, [X31 + 0x78]
	0x03E55B20 MOV W2, W0
	0x03E55B24 MOVZ W1, 0x1
	0x03E55B28 MOV X0, X20
	0x03E55B2C BL 0x3E55B74
	0x03E55B30 LDR X20, [X19 + 0x60]
	0x03E55B34 MOVZ W1, 0x2
	0x03E55B38 MOV X0, X19
	0x03E55B3C BL 0x3E557CC
	0x03E55B40 CBZ X20, 0x3E55B70
	0x03E55B44 LDR X3, [X31 + 0x70]
	0x03E55B48 MOV W2, W0
	0x03E55B4C MOVZ W1, 0x2
	0x03E55B50 MOV X0, X20
	0x03E55B54 BL 0x3E55B74
	0x03E55B58 LDR X0, [X19 + 0x60]
	0x03E55B5C LDP X20, X19, [X31 + 0x100]
	0x03E55B60 LDP X22, X21, [X31 + 0xF0]
	0x03E55B64 LDP X29, X30, [X31 + 0xE0]
	0x03E55B68 ADD X31, X31, 0x110
	0x03E55B6C RET
	0x03E55B70 BL 0x1C16F20
	0x03E55B74 STR X30, [X31 - 0x20]!
	0x03E55B78 STP X20, X19, [X31 + 0x10]
	0x03E55B7C MOV X19, X3
	0x03E55B80 MOV W20, W2
	0x03E55B84 BL 0x3E56794
	0x03E55B88 CBZ X0, 0x3E55BA8
	0x03E55B8C LDR X8, [X0 + 0x18]
	0x03E55B90 CBZ X8, 0x3E55BA8
	0x03E55B94 STR W20, [X8 + 0x10]
	0x03E55B98 STR X19, [X8 + 0x18]
	0x03E55B9C LDP X20, X19, [X31 + 0x10]
	0x03E55BA0 LDR X30, [X31], #0x20
	0x03E55BA4 RET
	0x03E55BA8 BL 0x1C16F20
	0x03E55BAC STR X30, [X31 - 0x10]!
	0x03E55BB0 ADD X2, X31, 0x8
	0x03E55BB4 MOV W3, W31
	0x03E55BB8 STR X31, [X31 + 0x8]
	0x03E55BBC BL 0x3E55280
	0x03E55BC0 LDR X0, [X31 + 0x8]
	0x03E55BC4 LDR X30, [X31], #0x10
	0x03E55BC8 RET
	0x03E55BCC TBZ X0, 0x0, 0x3E55BF4
	0x03E55BD0 FSUB S0, S0, S2
	0x03E55BD4 FSUB S1, S1, S3
	0x03E55BD8 FMUL S0, S0, S0
	0x03E55BDC FMUL S1, S1, S1
	0x03E55BE0 FADD S0, S0, S1
	0x03E55BE4 FMUL S1, S4, S4
	0x03E55BE8 FCMP S0, S1
	0x03E55BEC CSET W0, GE
	0x03E55BF0 RET
	0x03E55BF4 MOVZ W0, 0x1
	0x03E55BF8 RET
	0x03E55BFC STR X30, [X31 - 0x20]!
	0x03E55C00 STP X20, X19, [X31 + 0x10]
	0x03E55C04 MOV X20, X0
	0x03E55C08 MOV X0, X31
	0x03E55C0C MOV X19, X1
	0x03E55C10 BL 0x3C246D4
	0x03E55C14 CMP W0, 0x1
	0x03E55C18 MOV X2, X31
	0x03E55C1C B.EQ 0x3E55C28
	0x03E55C20 CBZ X19, 0x3E55C3C
	0x03E55C24 LDR X2, [X19 + 0x50]
	0x03E55C28 MOV X0, X20
	0x03E55C2C MOV X1, X19
	0x03E55C30 LDP X20, X19, [X31 + 0x10]
	0x03E55C34 LDR X30, [X31], #0x20
	0x03E55C38 B 0x3E54524
	0x03E55C3C BL 0x1C16F20
	0x03E55C40 STP X30, X23, [X31 - 0x30]!
	0x03E55C44 STP X22, X21, [X31 + 0x10]
	0x03E55C48 STP X20, X19, [X31 + 0x20]
	0x03E55C4C ADRP X21, 0x593000
	0x03E55C50 LDRB W8, [X21 + 0x8A8]
	0x03E55C54 MOV X19, X1
	0x03E55C58 MOV X20, X0
	0x03E55C5C TBNZ X8, 0x0, 0x3E55CA4
	0x03E55C60 ADRP X0, 0x2F4000
	0x03E55C64 LDR X0, [X0 + 0x3C8]
	0x03E55C68 BL 0x1C16CF4
	0x03E55C6C ADRP X0, 0x2F4000
	0x03E55C70 LDR X0, [X0 + 0x3D0]
	0x03E55C74 BL 0x1C16CF4
	0x03E55C78 ADRP X0, 0x2F4000
	0x03E55C7C LDR X0, [X0 + 0x3A8]
	0x03E55C80 BL 0x1C16CF4
	0x03E55C84 ADRP X0, 0x2C6000
	0x03E55C88 LDR X0, [X0 + 0x9F8]
	0x03E55C8C BL 0x1C16CF4
	0x03E55C90 ADRP X0, 0x29E000
	0x03E55C94 LDR X0, [X0 + 0x598]
	0x03E55C98 BL 0x1C16CF4
	0x03E55C9C MOVZ W8, 0x1
	0x03E55CA0 STRB W8, [X21 + 0x8A8]
	0x03E55CA4 CBZ X19, 0x3E55EFC
	0x03E55CA8 LDR V0, [X19 + 0x10C]
	0x03E55CAC LDR V1, [X19 + 0x110]
	0x03E55CB0 FMUL S0, S0, S0
	0x03E55CB4 FMUL S1, S1, S1
	0x03E55CB8 FADD S0, S0, S1
	0x03E55CBC FCMP S0, 0x0
	0x03E55CC0 B.LE 0x3E55D04
	0x03E55CC4 MOV X0, X31
	0x03E55CC8 BL 0x3C246D4
	0x03E55CCC CMP W0, 0x1
	0x03E55CD0 B.EQ 0x3E55D04
	0x03E55CD4 ADRP X22, 0x29E000
	0x03E55CD8 LDR X22, [X22 + 0x598]
	0x03E55CDC LDR X21, [X19 + 0x40]
	0x03E55CE0 LDR X0, [X22]
	0x03E55CE4 LDR W8, [X0 + 0xE0]
	0x03E55CE8 CBNZ W8, 0x3E55CF0
	0x03E55CEC BL 0x1C16DFC
	0x03E55CF0 MOV X0, X21
	0x03E55CF4 MOV X1, X31
	0x03E55CF8 MOV X2, X31
	0x03E55CFC BL 0x3C3883C
	0x03E55D00 TBZ X0, 0x0, 0x3E55D14
	0x03E55D04 LDP X20, X19, [X31 + 0x20]
	0x03E55D08 LDP X22, X21, [X31 + 0x10]
	0x03E55D0C LDP X30, X23, [X31], #0x30
	0x03E55D10 RET
	0x03E55D14 LDRB W8, [X19 + 0x145]
	0x03E55D18 CBNZ W8, 0x3E55DD0
	0x03E55D1C LDR X8, [X20 + 0x38]
	0x03E55D20 CBZ X8, 0x3E55EFC
	0x03E55D24 LDRB W9, [X19 + 0x144]
	0x03E55D28 CBZ W9, 0x3E55D58
	0x03E55D2C ADD X9, X19, 0x104
	0x03E55D30 LDR V1, [X9 + 0x10]
	0x03E55D34 LDR V2, [X9]
	0x03E55D38 LDR V0, [X8 + 0x3C]
	0x03E55D3C FSUB V1.2S, V1.2S, V2.2S
	0x03E55D40 SCVTF S0, S0
	0x00000000 INVALID
	0x03E55D48 FADDP S1, V1.2S
	0x03E55D4C FMUL S0, S0, S0
	0x03E55D50 FCMP S1, S0
	0x03E55D54 B.LT 0x3E55D04
	0x03E55D58 ADRP X21, 0x2C6000
	0x03E55D5C LDR X21, [X21 + 0x9F8]
	0x03E55D60 LDR X20, [X19 + 0x40]
	0x03E55D64 LDR X0, [X21]
	0x03E55D68 LDR W8, [X0 + 0xE0]
	0x03E55D6C CBNZ W8, 0x3E55D74
	0x03E55D70 BL 0x1C16DFC
	0x03E55D74 ADRP X23, 0x58C000
	0x03E55D78 LDRB W8, [X23 + 0x38C]
	0x03E55D7C CBNZ W8, 0x3E55D94
	0x03E55D80 ADRP X0, 0x2C6000
	0x03E55D84 LDR X0, [X0 + 0x9F8]
	0x03E55D88 BL 0x1C16CF4
	0x03E55D8C MOVZ W8, 0x1
	0x03E55D90 STRB W8, [X23 + 0x38C]
	0x03E55D94 LDR X0, [X21]
	0x03E55D98 LDR W8, [X0 + 0xE0]
	0x03E55D9C CBNZ W8, 0x3E55DA8
	0x03E55DA0 BL 0x1C16DFC
	0x03E55DA4 LDR X0, [X21]
	0x03E55DA8 ADRP X9, 0x2F4000
	0x03E55DAC LDR X8, [X0 + 0xB8]
	0x03E55DB0 LDR X9, [X9 + 0x3C8]
	0x03E55DB4 MOV X0, X20
	0x03E55DB8 MOV X1, X19
	0x03E55DBC LDR X2, [X8 + 0x38]
	0x03E55DC0 LDR X3, [X9]
	0x03E55DC4 BL 0x21DD088
	0x03E55DC8 MOVZ W8, 0x1
	0x03E55DCC STRB W8, [X19 + 0x145]
	0x03E55DD0 LDR X0, [X22]
	0x03E55DD4 LDR X20, [X19 + 0x28]
	0x03E55DD8 LDR X21, [X19 + 0x40]
	0x03E55DDC LDR W8, [X0 + 0xE0]
	0x03E55DE0 CBNZ W8, 0x3E55DE8
	0x03E55DE4 BL 0x1C16DFC
	0x03E55DE8 MOV X0, X20
	0x03E55DEC MOV X1, X21
	0x03E55DF0 MOV X2, X31
	0x03E55DF4 BL 0x3C354F8
	0x03E55DF8 TBZ X0, 0x0, 0x3E55E80
	0x03E55DFC ADRP X21, 0x2C6000
	0x03E55E00 LDR X21, [X21 + 0x9F8]
	0x03E55E04 LDR X20, [X19 + 0x28]
	0x03E55E08 LDR X0, [X21]
	0x03E55E0C LDR W8, [X0 + 0xE0]
	0x03E55E10 CBNZ W8, 0x3E55E18
	0x03E55E14 BL 0x1C16DFC
	0x03E55E18 ADRP X22, 0x58C000
	0x03E55E1C LDRB W8, [X22 + 0x388]
	0x03E55E20 CBNZ W8, 0x3E55E38
	0x03E55E24 ADRP X0, 0x2C6000
	0x03E55E28 LDR X0, [X0 + 0x9F8]
	0x03E55E2C BL 0x1C16CF4
	0x03E55E30 MOVZ W8, 0x1
	0x03E55E34 STRB W8, [X22 + 0x388]
	0x03E55E38 LDR X0, [X21]
	0x03E55E3C LDR W8, [X0 + 0xE0]
	0x03E55E40 CBNZ W8, 0x3E55E4C
	0x03E55E44 BL 0x1C16DFC
	0x03E55E48 LDR X0, [X21]
	0x03E55E4C ADRP X9, 0x2F4000
	0x03E55E50 LDR X8, [X0 + 0xB8]
	0x03E55E54 LDR X9, [X9 + 0x3A8]
	0x03E55E58 MOV X0, X20
	0x03E55E5C MOV X1, X19
	0x03E55E60 LDR X2, [X8 + 0x20]
	0x03E55E64 LDR X3, [X9]
	0x03E55E68 BL 0x21DD088
	0x03E55E6C MOV X0, X19
	0x03E55E70 MOV X1, X31
	0x03E55E74 STRB W31, [X19 + 0xF8]
	0x03E55E78 BL 0x3E4F3AC
	0x03E55E7C STR X31, [X19 + 0x38]
	0x03E55E80 ADRP X21, 0x2C6000
	0x03E55E84 LDR X21, [X21 + 0x9F8]
	0x03E55E88 LDR X20, [X19 + 0x40]
	0x03E55E8C LDR X0, [X21]
	0x03E55E90 LDR W8, [X0 + 0xE0]
	0x03E55E94 CBNZ W8, 0x3E55E9C
	0x03E55E98 BL 0x1C16DFC
	0x03E55E9C ADRP X22, 0x58C000
	0x03E55EA0 LDRB W8, [X22 + 0x38D]
	0x03E55EA4 CBNZ W8, 0x3E55EBC
	0x03E55EA8 ADRP X0, 0x2C6000
	0x03E55EAC LDR X0, [X0 + 0x9F8]
	0x03E55EB0 BL 0x1C16CF4
	0x03E55EB4 MOVZ W8, 0x1
	0x03E55EB8 STRB W8, [X22 + 0x38D]
	0x03E55EBC LDR X0, [X21]
	0x03E55EC0 LDR W8, [X0 + 0xE0]
	0x03E55EC4 CBNZ W8, 0x3E55ED0
	0x03E55EC8 BL 0x1C16DFC
	0x03E55ECC LDR X0, [X21]
	0x03E55ED0 ADRP X9, 0x2F4000
	0x03E55ED4 LDR X8, [X0 + 0xB8]
	0x03E55ED8 LDR X9, [X9 + 0x3D0]
	0x03E55EDC MOV X0, X20
	0x03E55EE0 MOV X1, X19
	0x03E55EE4 LDR X2, [X8 + 0x40]
	0x03E55EE8 LDR X3, [X9]
	0x03E55EEC LDP X20, X19, [X31 + 0x20]
	0x03E55EF0 LDP X22, X21, [X31 + 0x10]
	0x03E55EF4 LDP X30, X23, [X31], #0x30
	0x03E55EF8 B 0x21DD088
	0x03E55EFC BL 0x1C16F20
	0x03E55F00 SUB X31, X31, 0x30
	0x03E55F04 STP X30, X21, [X31 + 0x10]
	0x03E55F08 STP X20, X19, [X31 + 0x20]
	0x03E55F0C ADRP X21, 0x593000
	0x03E55F10 LDRB W8, [X21 + 0x8A9]
	0x03E55F14 MOV W19, W1
	0x03E55F18 MOV X20, X0
	0x03E55F1C TBNZ X8, 0x0, 0x3E55F34
	0x03E55F20 ADRP X0, 0x29E000
	0x03E55F24 LDR X0, [X0 + 0x598]
	0x03E55F28 BL 0x1C16CF4
	0x03E55F2C MOVZ W8, 0x1
	0x03E55F30 STRB W8, [X21 + 0x8A9]
	0x03E55F34 ADD X2, X31, 0x8
	0x03E55F38 MOV X0, X20
	0x03E55F3C MOV W1, W19
	0x03E55F40 MOV W3, W31
	0x03E55F44 STR X31, [X31 + 0x8]
	0x03E55F48 BL 0x3E55280
	0x03E55F4C LDR X8, [X31 + 0x8]
	0x03E55F50 CBZ X8, 0x3E55F84
	0x03E55F54 ADRP X9, 0x29E000
	0x03E55F58 LDR X9, [X9 + 0x598]
	0x03E55F5C LDR X19, [X8 + 0x20]
	0x03E55F60 LDR X0, [X9]
	0x03E55F64 LDR W9, [X0 + 0xE0]
	0x03E55F68 CBNZ W9, 0x3E55F70
	0x03E55F6C BL 0x1C16DFC
	0x03E55F70 MOV X0, X19
	0x03E55F74 MOV X1, X31
	0x03E55F78 MOV X2, X31
	0x03E55F7C BL 0x3C354F8
	0x03E55F80 B 0x3E55F88
	0x03E55F84 MOV W0, W31
	0x03E55F88 LDP X20, X19, [X31 + 0x20]
	0x03E55F8C LDP X30, X21, [X31 + 0x10]
	0x03E55F90 AND W0, W0, 0x1
	0x03E55F94 ADD X31, X31, 0x30
	0x03E55F98 RET
	0x03E55F9C SUB X31, X31, 0x50
	0x03E55FA0 STP X30, X23, [X31 + 0x20]
	0x03E55FA4 STP X22, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x594000
	015 Move W8, [X20+2207]
	016 Move X21, X2
	017 Move X19, X1
	018 Move X27, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {64}
	023 Move X0, 0x2C8000
	024 Move X0, [X0+2136]
	025 Call 0x1C17CF4
	026 Move X0, 0x2F5000
	027 Move X0, [X0+1008]
	028 Call 0x1C17CF4
	029 Move X0, 0x2F5000
	030 Move X0, [X0+1016]
	031 Call 0x1C17CF4
	032 Move X0, 0x2F5000
	033 Move X0, [X0+1024]
	034 Call 0x1C17CF4
	035 Move X0, 0x2C7000
	036 Move X0, [X0+2552]
	037 Call 0x1C17CF4
	038 Move X0, 0x317000
	039 Move X0, [X0+3048]
	040 Call 0x1C17CF4
	041 Move X0, 0x317000
	042 Move X0, [X0+3056]
	043 Call 0x1C17CF4
	044 Move X0, 0x2A5000
	045 Move X0, [X0+1392]
	046 Call 0x1C17CF4
	047 Move X0, 0x2F5000
	048 Move X0, [X0+1032]
	049 Call 0x1C17CF4
	050 Move X0, 0x2F5000
	051 Move X0, [X0+1040]
	052 Call 0x1C17CF4
	053 Move X0, 0x2A5000
	054 Move X0, [X0+3232]
	055 Call 0x1C17CF4
	056 Move X0, 0x2A5000
	057 Move X0, [X0+3240]
	058 Call 0x1C17CF4
	059 Move X0, 0x29F000
	060 Move X0, [X0+1432]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+2207], W8
	064 Move X20, 0x29F000
	065 Move X20, [X20+1432]
	066 Move X0, [X20]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X31
	073 Move X2, X31
	074 Call Object.op_Equality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {81}
	079 Compare X19, 0
	080 JumpIfNotEqual {97}
	081 Compare X19, 0
	082 JumpIfEqual {799}
	083 Move X0, [X20]
	084 Move X22, [X19+32]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X22
	090 Move X1, X31
	091 Move X2, X31
	092 Call Object.op_Equality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {205}
	097 Move X0, [X19+240]
	098 Compare X0, 0
	099 JumpIfEqual {799}
	100 Move W25, [X0+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X31], X21
	103 Move [X31+8], X27
	104 Move X28, 0x2A5000
	105 Move X23, 0x2C7000
	106 Move X21, 0x2F5000
	107 Move X20, 0x2F5000
	108 Move X28, [X28+3240]
	109 Move X23, [X23+2552]
	110 Move X21, [X21+1024]
	111 Move X20, [X20+1016]
	112 Move W22, W31
	113 Move W26, 1
	114 Move X29, 0x58D000
	115 Move X27, 0x58D000
	116 Move [X19+380], W26
	117 Compare X0, 0
	118 JumpIfEqual {799}
	119 Move X2, [X28]
	120 Move W1, W22
	121 Call List`1<Object>.get_Item, X0, X1
	122 Move X8, [X23]
	123 Move X24, X0
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move W8, [X29+899]
	130 Compare W8, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X23
	133 Call 0x1C17CF4
	134 Move [X29+899], W26
	135 Move X0, [X23]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {141}
	139 Call 0x1C17DFC
	140 Move X0, [X23]
	141 Move X8, [X0+184]
	142 Move X3, [X21]
	143 Move X0, X24
	144 Move X1, X19
	145 Move X2, [X8]
	146 Call 0x21DE088, X0, X1, X2
	147 Move X0, [X19+240]
	148 Compare X0, 0
	149 JumpIfEqual {799}
	150 Move X2, [X28]
	151 Move W1, W22
	152 Call List`1<Object>.get_Item, X0, X1
	153 Move W8, [X27+900]
	154 Move X24, X0
	155 Compare W8, 0
	156 JumpIfNotEqual {160}
	157 Move X0, X23
	158 Call 0x1C17CF4
	159 Move [X27+900], W26
	160 Move X0, [X23]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X23]
	166 Move X8, [X0+184]
	167 Move X3, [X20]
	168 Move X0, X24
	169 Move X1, X19
	170 Move X2, [X8+16]
	171 Call 0x21DE088, X0, X1, X2
	172 Move X0, [X19+240]
	173 Add W22, W22, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X20, 0x29F000
	176 Move X21, [X31]
	177 Move X27, [X31+8]
	178 Move X20, [X20+1432]
	179 Compare X0, 0
	180 JumpIfEqual {799}
	181 Move W2, [X0+24]
	182 Move W8, [X0+28]
	183 Add W8, W8, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+24], W31
	186 Move [X0+28], W8
	187 Move X0, [X0+16]
	188 Move W1, W31
	189 Move X3, X31
	190 Call Array.Clear, X0, X1, X2
	191 Move X0, [X20]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X21
	197 Move X1, X31
	198 Move X2, X31
	199 Call Object.op_Equality, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {205}
	204 Move [X19+32], X31
	205 Move X0, [X20]
	206 Move X22, [X19+32]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X0, X22
	212 Move X1, X21
	213 Move X2, X31
	214 Call Object.op_Equality, X0, X1
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {284}
	219 Move X0, [X20]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Move X0, X21
	225 Move X1, X31
	226 Call Object.op_Implicit, X0
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {284}
	231 Move V0, [X19+268]
	232 Move V1, [X19+272]
	233 Multiply S0, S0, S0
	234 Multiply S1, S1, S1
	235 Add S0, S0, S1
	236 NotImplemented "Instruction FCMP not yet implemented."
	237 Move X0, [X19+240]
	238 Compare X0, 0
	239 JumpIfEqual {799}
	240 Move W23, [X0+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X24, 0x2A5000
	243 Move X21, 0x2C7000
	244 Move X27, 0x2F5000
	245 Move X24, [X24+3240]
	246 Move X21, [X21+2552]
	247 Move X27, [X27+1024]
	248 Move W20, W31
	249 Move X25, 0x58D000
	250 Move W26, 1
	251 Move X2, [X24]
	252 Move W1, W20
	253 Call List`1<Object>.get_Item, X0, X1
	254 Move X8, [X21]
	255 Move X22, X0
	256 Move W9, [X8+224]
	257 Compare W9, 0
	258 JumpIfNotEqual {261}
	259 Move X0, X8
	260 Call 0x1C17DFC
	261 Move W8, [X25+899]
	262 Compare W8, 0
	263 JumpIfNotEqual {267}
	264 Move X0, X21
	265 Call 0x1C17CF4
	266 Move [X25+899], W26
	267 Move X0, [X21]
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {273}
	271 Call 0x1C17DFC
	272 Move X0, [X21]
	273 Move X8, [X0+184]
	274 Move X3, [X27]
	275 Move X0, X22
	276 Move X1, X19
	277 Move X2, [X8]
	278 Call 0x21DE088, X0, X1, X2
	279 Add W20, W20, 1
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, [X19+240]
	282 Compare X0, 0
	283 JumpIfNotEqual {251}
	284 Move X0, [X19+32]
	285 Move X1, X21
	286 Call BaseInputModule.FindCommonRoot, X0, X1
	287 Compare X21, 0
	288 JumpIfEqual {799}
	289 Move X8, 0x317000
	290 Move X8, [X8+3048]
	291 Move X22, X0
	292 Move X0, X21
	293 Move X1, [X8]
	294 Call 0x21E68C4, X0
	295 Compare X0, 0
	296 JumpIfEqual {311}
	297 Move X9, 0x2C8000
	298 Move X9, [X9+2136]
	299 Move X8, [X0]
	300 Move X1, [X9]
	301 Move W10, [X8+304]
	302 Move W9, [X1+304]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X8, [X8+200]
	305 Add X8, X8, X9
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X1, X31
	309 Call Component.get_gameObject, X0
	310 Move X23, X0
	311 Move X23, X31
	312 Move X0, [X20]
	313 Move X24, [X19+32]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Move X0, X24
	319 Move X1, X31
	320 Move X2, X31
	321 Call Object.op_Inequality, X0, X1
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfNotEqual {558}
	326 Move X0, [X19+32]
	327 Compare X0, 0
	328 JumpIfEqual {799}
	329 Move X1, X31
	330 Call GameObject.get_transform, X0
	331 Move X24, 0x2C7000
	332 Move X24, [X24+2552]
	333 Move X25, X0
	334 Move X28, 0x58D000
	335 Move X29, 0x58D000
	336 Move X0, [X20]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move X0, X25
	342 Move X1, X31
	343 Move X2, X31
	344 Call Object.op_Inequality, X0, X1
	345 Move TEMP, X0
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfNotEqual {558}
	349 Move W8, [X27+40]
	350 Compare W8, 0
	351 JumpIfEqual {390}
	352 Move X0, [X20]
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X0, X22
	358 Move X1, X31
	359 Move X2, X31
	360 Call Object.op_Inequality, X0, X1
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {385}
	365 Compare X22, 0
	366 JumpIfEqual {799}
	367 Move X0, X22
	368 Move X1, X31
	369 Call GameObject.get_transform, X0
	370 Move X8, [X20]
	371 Move X26, X0
	372 Move W9, [X8+224]
	373 Compare W9, 0
	374 JumpIfNotEqual {377}
	375 Move X0, X8
	376 Call 0x1C17DFC
	377 Move X0, X26
	378 Move X1, X25
	379 Move X2, X31
	380 Call Object.op_Equality, X0, X1
	381 Move TEMP, X0
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfEqual {558}
	385 Move W8, [X27+40]
	386 Compare W8, 0
	387 JumpIfEqual {390}
	388 Compare X25, 0
	389 JumpIfNotEqual {410}
	390 Compare X25, 0
	391 JumpIfEqual {799}
	392 Move X0, X25
	393 Move X1, X31
	394 Call Component.get_gameObject, X0
	395 Move X8, [X20]
	396 Move X26, X0
	397 Move W9, [X8+224]
	398 Compare W9, 0
	399 JumpIfNotEqual {402}
	400 Move X0, X8
	401 Call 0x1C17DFC
	402 Move X0, X23
	403 Move X1, X26
	404 Move X2, X31
	405 Call Object.op_Equality, X0, X1
	406 Move TEMP, X0
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {558}
	410 Move X0, X25
	411 Move X1, X31
	412 Call Component.get_gameObject, X0
	413 Move X8, [X20]
	414 Move X26, X0
	415 Move W9, [X8+224]
	416 Compare W9, 0
	417 JumpIfNotEqual {420}
	418 Move X0, X8
	419 Call 0x1C17DFC
	420 Move X0, X26
	421 Move X1, X22
	422 Move X2, X31
	423 Call Object.op_Inequality, X0, X1
	424 Move TEMP, X0
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfNotEqual {439}
	428 Move X0, [X20]
	429 Move X26, [X19+32]
	430 Move W8, [X0+224]
	431 Compare W8, 0
	432 JumpIfNotEqual {434}
	433 Call 0x1C17DFC
	434 Move X0, X26
	435 Move X1, X21
	436 Move X2, X31
	437 Call Object.op_Inequality, X0, X1
	438 And W8, W0, 1
	439 Move W8, W31
	440 Move X0, X25
	441 Move X1, X31
	442 Move [X19+380], W8
	443 Call Component.get_gameObject, X0
	444 Move X8, [X24]
	445 Move X26, X0
	446 Move W9, [X8+224]
	447 Compare W9, 0
	448 JumpIfNotEqual {451}
	449 Move X0, X8
	450 Call 0x1C17DFC
	451 Move W8, [X28+899]
	452 Compare W8, 0
	453 JumpIfNotEqual {458}
	454 Move X0, X24
	455 Call 0x1C17CF4
	456 Move W8, 1
	457 Move [X28+899], W8
	458 Move X0, [X24]
	459 Move W8, [X0+224]
	460 Compare W8, 0
	461 JumpIfNotEqual {464}
	462 Call 0x1C17DFC
	463 Move X0, [X24]
	464 Move X8, [X0+184]
	465 Move X0, X26
	466 Move X1, X19
	467 Move X2, [X8]
	468 Move X8, 0x2F5000
	469 Move X8, [X8+1024]
	470 Move X3, [X8]
	471 Call 0x21DE088, X0, X1, X2
	472 Move X0, X25
	473 Move X1, X31
	474 Call Component.get_gameObject, X0
	475 Move W8, [X29+900]
	476 Move X26, X0
	477 Compare W8, 0
	478 JumpIfNotEqual {483}
	479 Move X0, X24
	480 Call 0x1C17CF4
	481 Move W8, 1
	482 Move [X29+900], W8
	483 Move X0, [X24]
	484 Move W8, [X0+224]
	485 Compare W8, 0
	486 JumpIfNotEqual {489}
	487 Call 0x1C17DFC
	488 Move X0, [X24]
	489 Move X8, [X0+184]
	490 Move X0, X26
	491 Move X1, X19
	492 Move X2, [X8+16]
	493 Move X8, 0x2F5000
	494 Move X8, [X8+1016]
	495 Move X3, [X8]
	496 Call 0x21DE088, X0, X1, X2
	497 Move X26, [X19+240]
	498 Move X0, X25
	499 Move X1, X31
	500 Call Component.get_gameObject, X0
	501 Compare X26, 0
	502 JumpIfEqual {799}
	503 Move X8, 0x2F5000
	504 Move X8, [X8+1040]
	505 Move X1, X0
	506 Move X0, X26
	507 Move X2, [X8]
	508 Call List`1<Object>.Remove, X0, X1
	509 Move W8, [X27+40]
	510 Compare W8, 0
	511 JumpIfEqual {516}
	512 Move X0, X25
	513 Move X1, X31
	514 Call Transform.get_parent, X0
	515 Move X25, X0
	516 Move X0, [X20]
	517 Move W8, [X0+224]
	518 Compare W8, 0
	519 JumpIfNotEqual {521}
	520 Call 0x1C17DFC
	521 Move X0, X22
	522 Move X1, X31
	523 Move X2, X31
	524 Call Object.op_Inequality, X0, X1
	525 Move TEMP, X0
	526 And TEMP, TEMP, 1
	527 Compare TEMP, 1
	528 JumpIfNotEqual {549}
	529 Compare X22, 0
	530 JumpIfEqual {799}
	531 Move X0, X22
	532 Move X1, X31
	533 Call GameObject.get_transform, X0
	534 Move X8, [X20]
	535 Move X26, X0
	536 Move W9, [X8+224]
	537 Compare W9, 0
	538 JumpIfNotEqual {541}
	539 Move X0, X8
	540 Call 0x1C17DFC
	541 Move X0, X26
	542 Move X1, X25
	543 Move X2, X31
	544 Call Object.op_Equality, X0, X1
	545 Move TEMP, X0
	546 And TEMP, TEMP, 1
	547 Compare TEMP, 1
	548 JumpIfEqual {558}
	549 Move W8, [X27+40]
	550 Compare W8, 0
	551 JumpIfNotEqual {336}
	552 Compare X25, 0
	553 JumpIfEqual {799}
	554 Move X0, X25
	555 Move X1, X31
	556 Call Transform.get_parent, X0
	557 Move X25, X0
	558 Move X23, [X19+32]
	559 Move [X19+32], X21
	560 Move X0, [X20]
	561 Move W8, [X0+224]
	562 Compare W8, 0
	563 JumpIfNotEqual {565}
	564 Call 0x1C17DFC
	565 Move X0, X21
	566 Move X1, X31
	567 Move X2, X31
	568 Call Object.op_Inequality, X0, X1
	569 Move TEMP, X0
	570 And TEMP, TEMP, 1
	571 Compare TEMP, 1
	572 JumpIfNotEqual {785}
	573 Move X0, X21
	574 Move X1, X31
	575 Call GameObject.get_transform, X0
	576 Move X21, 0x2C7000
	577 Move X29, 0x2A5000
	578 Move X21, [X21+2552]
	579 Move X29, [X29+1392]
	580 Move X24, X0
	581 Move X26, 0x58D000
	582 Move X28, 0x58D000
	583 Move X0, [X20]
	584 Move W8, [X0+224]
	585 Compare W8, 0
	586 JumpIfNotEqual {588}
	587 Call 0x1C17DFC
	588 Move X0, X24
	589 Move X1, X31
	590 Move X2, X31
	591 Call Object.op_Inequality, X0, X1
	592 Move TEMP, X0
	593 And TEMP, TEMP, 1
	594 Compare TEMP, 1
	595 JumpIfNotEqual {785}
	596 Compare X24, 0
	597 JumpIfEqual {799}
	598 Move X0, X24
	599 Move X1, X31
	600 Call Component.get_gameObject, X0
	601 Move X8, [X20]
	602 Move X25, X0
	603 Move W9, [X8+224]
	604 Compare W9, 0
	605 JumpIfNotEqual {608}
	606 Move X0, X8
	607 Call 0x1C17DFC
	608 Move X0, X25
	609 Move X1, X22
	610 Move X2, X31
	611 Call Object.op_Equality, X0, X1
	612 Move TEMP, X0
	613 And TEMP, TEMP, 1
	614 Compare TEMP, 1
	615 JumpIfNotEqual {639}
	616 Move X0, X24
	617 Move X1, X31
	618 Call Component.get_gameObject, X0
	619 Move X8, [X20]
	620 Move X25, X0
	621 Move W9, [X8+224]
	622 Compare W9, 0
	623 JumpIfNotEqual {626}
	624 Move X0, X8
	625 Call 0x1C17DFC
	626 Move X0, X25
	627 Move X1, X23
	628 Move X2, X31
	629 Call Object.op_Inequality, X0, X1
	630 And W8, W0, 1
	631 Move [X19+381], W8
	632 Move W8, [X27+40]
	633 Compare W8, 0
	634 JumpIfEqual {640}
	635 Move TEMP, X0
	636 And TEMP, TEMP, 1
	637 Compare TEMP, 1
	638 JumpIfNotEqual {640}
	639 Move [X19+381], W31
	640 Move X0, X24
	641 Move X1, X31
	642 Call Component.get_gameObject, X0
	643 Move X8, [X21]
	644 Move X25, X0
	645 Move W9, [X8+224]
	646 Compare W9, 0
	647 JumpIfNotEqual {650}
	648 Move X0, X8
	649 Call 0x1C17DFC
	650 Move W8, [X26+901]
	651 Compare W8, 0
	652 JumpIfNotEqual {657}
	653 Move X0, X21
	654 Call 0x1C17CF4
	655 Move W8, 1
	656 Move [X26+901], W8
	657 Move X0, [X21]
	658 Move W8, [X0+224]
	659 Compare W8, 0
	660 JumpIfNotEqual {663}
	661 Call 0x1C17DFC
	662 Move X0, [X21]
	663 Move X8, [X0+184]
	664 Move X0, X25
	665 Move X1, X19
	666 Move X2, [X8+8]
	667 Move X8, 0x2F5000
	668 Move X8, [X8+1008]
	669 Move X3, [X8]
	670 Call 0x21DE088, X0, X1, X2
	671 Move X0, X24
	672 Move X1, X31
	673 Call Component.get_gameObject, X0
	674 Move W8, [X28+899]
	675 Move X25, X0
	676 Compare W8, 0
	677 JumpIfNotEqual {682}
	678 Move X0, X21
	679 Call 0x1C17CF4
	680 Move W8, 1
	681 Move [X28+899], W8
	682 Move X0, [X21]
	683 Move W8, [X0+224]
	684 Compare W8, 0
	685 JumpIfNotEqual {688}
	686 Call 0x1C17DFC
	687 Move X0, [X21]
	688 Move X8, [X0+184]
	689 Move X0, X25
	690 Move X1, X19
	691 Move X2, [X8]
	692 Move X8, 0x2F5000
	693 Move X8, [X8+1024]
	694 Move X3, [X8]
	695 Call 0x21DE088, X0, X1, X2
	696 Move X25, [X19+240]
	697 Move X0, X24
	698 Move X1, X31
	699 Call Component.get_gameObject, X0
	700 Compare X25, 0
	701 JumpIfEqual {799}
	702 Move W10, [X25+28]
	703 Move X8, [X25+16]
	704 Move X9, [X29]
	705 Add W10, W10, 1
	706 Move [X25+28], W10
	707 Compare X8, 0
	708 JumpIfEqual {799}
	709 NotImplemented "Instruction LDRSW not yet implemented."
	710 Move W11, [X8+24]
	711 Move X1, X0
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Add W9, W10, 1
	714 Add X8, X8, X10
	715 Move [X25+24], W9
	716 Move [X8+32], X1
	717 Move X8, [X9+32]
	718 Move X0, X25
	719 Move X8, [X8+192]
	720 Move X2, [X8+112]
	721 Call List`1<Object>.AddWithResize, X0, X1
	722 Move W8, [X27+40]
	723 Compare W8, 0
	724 JumpIfNotEqual {739}
	725 Move X0, X24
	726 Move X1, X31
	727 Call Component.get_gameObject, X0
	728 Compare X0, 0
	729 JumpIfEqual {799}
	730 Move X8, 0x317000
	731 Move X8, [X8+3056]
	732 Move X1, [X8]
	733 Call 0x21E62E4, X0
	734 Compare X0, 0
	735 JumpIfNotEqual {785}
	736 Move W8, [X27+40]
	737 Compare W8, 0
	738 JumpIfEqual {743}
	739 Move X0, X24
	740 Move X1, X31
	741 Call Transform.get_parent, X0
	742 Move X24, X0
	743 Move X0, [X20]
	744 Move W8, [X0+224]
	745 Compare W8, 0
	746 JumpIfNotEqual {748}
	747 Call 0x1C17DFC
	748 Move X0, X22
	749 Move X1, X31
	750 Move X2, X31
	751 Call Object.op_Inequality, X0, X1
	752 Move TEMP, X0
	753 And TEMP, TEMP, 1
	754 Compare TEMP, 1
	755 JumpIfNotEqual {776}
	756 Compare X22, 0
	757 JumpIfEqual {799}
	758 Move X0, X22
	759 Move X1, X31
	760 Call GameObject.get_transform, X0
	761 Move X8, [X20]
	762 Move X25, X0
	763 Move W9, [X8+224]
	764 Compare W9, 0
	765 JumpIfNotEqual {768}
	766 Move X0, X8
	767 Call 0x1C17DFC
	768 Move X0, X25
	769 Move X1, X24
	770 Move X2, X31
	771 Call Object.op_Equality, X0, X1
	772 Move TEMP, X0
	773 And TEMP, TEMP, 1
	774 Compare TEMP, 1
	775 JumpIfEqual {785}
	776 Move W8, [X27+40]
	777 Compare W8, 0
	778 JumpIfNotEqual {583}
	779 Compare X24, 0
	780 JumpIfEqual {799}
	781 Move X0, X24
	782 Move X1, X31
	783 Call Transform.get_parent, X0
	784 Move X24, X0
	785 Move X20, [X31+96]
	786 Move X19, [X31+104]
	787 Move X22, [X31+80]
	788 Move X21, [X31+88]
	789 Move X24, [X31+64]
	790 Move X23, [X31+72]
	791 Move X26, [X31+48]
	792 Move X25, [X31+56]
	793 Move X28, [X31+32]
	794 Move X27, [X31+40]
	795 Move X29, [X31+16]
	796 Move X30, [X31+24]
	797 Add X31, X31, 112
	798 Return 
	799 Call 0x1C17F20
	800 Call 0x1C181E0

Method: UnityEngine.EventSystems.AxisEventData GetAxisEventData(System.Single x, System.Single y, System.Single moveDeadZone)

Disassembly:
	0x03E55FA8 STP X20, X19, [X31 + 0x40]
	0x03E55FAC ADRP X20, 0x593000
	0x03E55FB0 LDRB W8, [X20 + 0x8AA]
	0x03E55FB4 MOV X19, X0
	0x03E55FB8 TBNZ X8, 0x0, 0x3E5600C
	0x03E55FBC ADRP X0, 0x316000
	0x03E55FC0 LDR X0, [X0 + 0xBF8]
	0x03E55FC4 BL 0x1C16CF4
	0x03E55FC8 ADRP X0, 0x307000
	0x03E55FCC LDR X0, [X0 + 0xB88]
	0x03E55FD0 BL 0x1C16CF4
	0x03E55FD4 ADRP X0, 0x307000
	0x03E55FD8 LDR X0, [X0 + 0xBA0]
	0x03E55FDC BL 0x1C16CF4
	0x03E55FE0 ADRP X0, 0x307000
	0x03E55FE4 LDR X0, [X0 + 0xBB0]
	0x03E55FE8 BL 0x1C16CF4
	0x03E55FEC ADRP X0, 0x307000
	0x03E55FF0 LDR X0, [X0 + 0xBC0]
	0x03E55FF4 BL 0x1C16CF4
	0x03E55FF8 ADRP X0, 0x307000
	0x03E55FFC LDR X0, [X0 + 0xBC8]
	0x03E56000 BL 0x1C16CF4
	0x03E56004 MOVZ W8, 0x1
	0x03E56008 STRB W8, [X20 + 0x8AA]
	0x03E5600C STP X31, X31, [X31 + 0x8]
	0x03E56010 STR X31, [X31 + 0x18]
	0x03E56014 LDR X8, [X19]
	0x03E56018 MOV X0, X19
	0x03E5601C LDR X9, [X8 + 0x268]
	0x03E56020 LDR X1, [X8 + 0x270]
	0x03E56024 BLR X9
	0x03E56028 LDR X8, [X19 + 0x58]
	0x03E5602C CBZ X8, 0x3E560E0
	0x03E56030 ADRP X9, 0x306000
	0x03E56034 LDR X9, [X9 + 0xB88]
	0x03E56038 MOV X20, X0
	0x03E5603C MOV X0, X8
	0x03E56040 LDR X1, [X9]
	0x03E56044 BL 0x2A1352C
	0x03E56048 CBZ X0, 0x3E560E0
	0x03E5604C ADRP X8, 0x306000
	0x03E56050 LDR X8, [X8 + 0xBC8]
	0x03E56054 ADRP X22, 0x306000
	0x03E56058 ADRP X23, 0x315000
	0x03E5605C ADRP X21, 0x306000
	0x03E56060 LDR X1, [X8]
	0x03E56064 LDR X22, [X22 + 0xBB0]
	0x03E56068 LDR X23, [X23 + 0xBF8]
	0x03E5606C LDR X21, [X21 + 0xBA0]
	0x03E56070 ADD X8, X31, 0x8
	0x03E56074 BL 0x274B2CC
	0x03E56078 LDR X1, [X22]
	0x03E5607C ADD X0, X31, 0x8
	0x03E56080 BL 0x2BF5F4C
	0x03E56084 TBZ X0, 0x0, 0x3E5609C
	0x03E56088 LDR X1, [X31 + 0x18]
	0x03E5608C MOV X0, X19
	0x03E56090 MOV X2, X31
	0x03E56094 BL 0x3E54524
	0x03E56098 B 0x3E56078
	0x03E5609C LDR X1, [X21]
	0x03E560A0 ADD X0, X31, 0x8
	0x03E560A4 BL 0x2BF5F48

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x594000
	009 Move W8, [X20+2208]
	010 Move V10, V2
	011 Move V8, V1
	012 Move V9, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x308000
	019 Move X0, [X0+3072]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2208], W8
	023 Move X20, [X19+48]
	024 Compare X20, 0
	025 JumpIfNotEqual {37}
	026 Move X8, 0x308000
	027 Move X21, [X19+56]
	028 Move X8, [X8+3072]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X21
	032 Move X20, X0
	033 Call AxisEventData..ctor, X0, X1
	034 Move [X19+48], X20
	035 Compare X20, 0
	036 JumpIfEqual {80}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+376]
	040 Move X1, [X8+384]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, [X19+48]
	043 Compare X8, 0
	044 JumpIfEqual {80}
	045 Move [X8+32], S9
	046 Move [X8+40], S8
	047 Move X0, [X19+48]
	048 Multiply S0, S9, S9
	049 Multiply S1, S8, S8
	050 Add S0, S0, S1
	051 Multiply S1, S10, S10
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 NotImplemented "Instruction FABS not yet implemented."
	054 NotImplemented "Instruction FABS not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move W8, W8
	059 ShiftRight W8, 31
	060 And W8, W8, 0x3FFFFFFF
	061 Compare X0, 0
	062 JumpIfNotEqual {66}
	063 Move W8, 4
	064 Compare X0, 0
	065 JumpIfEqual {80}
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Move D9, [X31+16]
	071 Move D8, [X31+24]
	072 Move [X0+40], W8
	073 Move V10, [X31+64]
	074 Return X0
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move W8, 3
	077 NotImplemented "Instruction CSINC not yet implemented."
	078 Compare X0, 0
	079 JumpIfNotEqual {66}
	080 Call 0x1C17F20

Method: UnityEngine.EventSystems.BaseEventData GetBaseEventData()

Disassembly:
	0x03E560A8 LDR X0, [X19 + 0x58]
	0x03E560AC CBZ X0, 0x3E560E0
	0x03E560B0 LDR X1, [X23]
	0x03E560B4 BL 0x2A13814
	0x03E560B8 LDR X0, [X19 + 0x38]
	0x03E560BC CBZ X0, 0x3E560E0
	0x03E560C0 MOV X1, X31
	0x03E560C4 MOV X2, X20
	0x03E560C8 BL 0x3E4EC58
	0x03E560CC LDP X20, X19, [X31 + 0x40]
	0x03E560D0 LDP X22, X21, [X31 + 0x30]
	0x03E560D4 LDP X30, X23, [X31 + 0x20]
	0x03E560D8 ADD X31, X31, 0x50
	0x03E560DC RET
	0x03E560E0 BL 0x1C16F20
	0x03E560E4 B 0x3E560E8
	0x03E560E8 MOV X22, X0
	0x03E560EC CMP W1, 0x1
	0x03E560F0 B.NE 0x3E56124
	0x03E560F4 MOV X0, X22
	0x03E560F8 BL 0x3EB1AD0
	0x03E560FC LDR X21, [X0]
	0x03E56100 BL 0x3EB1AE0
	0x03E56104 ADRP X8, 0x306000
	0x03E56108 LDR X8, [X8 + 0xBA0]
	0x03E5610C ADD X0, X31, 0x8
	0x03E56110 LDR X1, [X8]
	0x03E56114 BL 0x2BF5F48
	0x03E56118 CBZ X21, 0x3E560A8
	0x03E5611C MOV X0, X21
	0x03E56120 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x593000
	006 Move W8, [X20+2209]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x316000
	013 Move X0, [X0+2360]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2209], W8
	017 Move X20, [X19+64]
	018 Compare X20, 0
	019 JumpIfNotEqual {30}
	020 Move X8, 0x316000
	021 Move X21, [X19+56]
	022 Move X8, [X8+2360]
	023 Move X0, [X8]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move [X20+24], X21
	029 Move [X19+64], X20
	030 Move X8, [X20]
	031 Move X0, X20
	032 Move X9, [X8+376]
	033 Move X1, [X8+384]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X0, [X19+64]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0

Method: System.Boolean IsPointerOverGameObject(System.Int32 pointerId)

Disassembly:
	0x03E56124 MOV X21, X31
	0x03E56128 B 0x3E56130

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean ShouldActivateModule()

Disassembly:
	0x03E5612C MOV X22, X0
	0x03E56130 ADRP X8, 0x306000
	0x03E56134 LDR X8, [X8 + 0xBA0]
	0x03E56138 LDR X1, [X8]
	0x03E5613C ADD X0, X31, 0x8
	0x03E56140 BL 0x2BF5F48
	0x03E56144 CBNZ X21, 0x3E56150
	0x03E56148 MOV X0, X22
	0x03E5614C BL 0x1D2C690
	0x03E56150 MOV X0, X21
	0x03E56154 BL 0x1C16F18
	0x03E56158 BL 0x1990590
	0x03E5615C SUB X31, X31, 0x70
	0x03E56160 STP X30, X23, [X31 + 0x40]
	0x03E56164 STP X22, X21, [X31 + 0x50]
	0x03E56168 STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Behaviour.get_enabled, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {20}
	010 Move X0, X19
	011 Move X1, X31
	012 Call Component.get_gameObject, X0
	013 Compare X0, 0
	014 JumpIfEqual {24}
	015 Move X1, X31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call GameObject.get_activeInHierarchy, X0
	019 Return X0
	020 Move W0, W31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void DeactivateModule()

Disassembly:
	0x03E5616C ADRP X21, 0x592000

ISIL:
	001 Return 

Method: System.Void ActivateModule()

Disassembly:
	0x03E56170 ADRP X19, 0x315000

ISIL:
	001 Return 

Method: System.Void UpdateModule()

Disassembly:
	0x03E56174 LDRB W8, [X21 + 0x8AB]

ISIL:
	001 Return 

Method: System.Boolean IsModuleSupported()

Disassembly:
	0x03E56178 LDR X19, [X19 + 0xC00]
	0x03E5617C MOV X20, X0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 ConvertUIToolkitPointerId(UnityEngine.EventSystems.PointerEventData sourcePointerData)

Disassembly:
	0x03E56180 TBNZ X8, 0x0, 0x3E561F8
	0x03E56184 ADRP X0, 0x315000
	0x03E56188 LDR X0, [X0 + 0xC08]
	0x03E5618C BL 0x1C16CF4
	0x03E56190 ADRP X0, 0x315000
	0x03E56194 LDR X0, [X0 + 0xC10]
	0x03E56198 BL 0x1C16CF4
	0x03E5619C ADRP X0, 0x315000
	0x03E561A0 LDR X0, [X0 + 0xC18]
	0x03E561A4 BL 0x1C16CF4
	0x03E561A8 ADRP X0, 0x315000
	0x03E561AC LDR X0, [X0 + 0xC20]
	0x03E561B0 BL 0x1C16CF4
	0x03E561B4 ADRP X0, 0x315000
	0x03E561B8 LDR X0, [X0 + 0xC28]
	0x03E561BC BL 0x1C16CF4
	0x03E561C0 ADRP X0, 0x315000
	0x03E561C4 LDR X0, [X0 + 0xC30]
	0x03E561C8 BL 0x1C16CF4
	0x03E561CC ADRP X0, 0x29D000
	0x03E561D0 LDR X0, [X0 + 0x8F0]
	0x03E561D4 BL 0x1C16CF4
	0x03E561D8 ADRP X0, 0x315000
	0x03E561DC LDR X0, [X0 + 0xC00]
	0x03E561E0 BL 0x1C16CF4
	0x03E561E4 ADRP X0, 0x315000
	0x03E561E8 LDR X0, [X0 + 0xC38]
	0x03E561EC BL 0x1C16CF4
	0x03E561F0 MOVZ W8, 0x1
	0x03E561F4 STRB W8, [X21 + 0x8AB]
	0x03E561F8 ADRP X21, 0x29D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x593000
	006 Move W8, [X20+2210]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2C7000
	013 Move X0, [X0+3664]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2210], W8
	017 Compare X19, 0
	018 JumpIfEqual {42}
	019 Move X21, 0x2C7000
	020 Move X21, [X21+3664]
	021 Move W20, [X19+256]
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move TEMP, X20
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {36}
	033 Move W8, [X8+12]
	034 Move W9, [X19+256]
	035 Add W0, W9, W8
	036 Move W0, [X8+8]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03E561FC LDR X21, [X21 + 0x8F0]
	0x03E56200 MOVI V0.2D, 0x0
	0x03E56204 MOV X0, X20
	0x03E56208 MOV X1, X31
	0x03E5620C STR X31, [X31 + 0x30]
	0x03E56210 STP V0, V0, [X31 + 0x10]
	0x03E56214 STR W31, [X31 + 0xC]
	0x03E56218 BL 0x33BE520
	0x03E5621C LDR X19, [X19]
	0x03E56220 CBZ X0, 0x3E56238
	0x03E56224 LDR X8, [X0]
	0x03E56228 LDP X9, X1, [X8 + 0x168]
	0x03E5622C BLR X9
	0x03E56230 MOV X1, X0
	0x03E56234 B 0x3E5623C
	0x03E56238 MOV X1, X31
	0x03E5623C MOV X0, X19
	0x03E56240 MOV X2, X31
	0x03E56244 BL 0x321B938
	0x03E56248 LDR X8, [X21]
	0x03E5624C MOV X21, X0
	0x03E56250 MOV X0, X8
	0x03E56254 BL 0x1C16F10
	0x03E56258 MOV X1, X21
	0x03E5625C MOV X2, X31
	0x03E56260 MOV X19, X0
	0x03E56264 BL 0x3231CF8
	0x03E56268 CBZ X19, 0x3E5634C
	0x03E5626C MOV X0, X19
	0x03E56270 MOV X1, X31
	0x03E56274 BL 0x3233888
	0x03E56278 LDR X0, [X20 + 0x58]
	0x03E5627C CBZ X0, 0x3E5634C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x593000
	007 Move X22, 0x2F4000
	008 Move X20, 0x2F4000
	009 Move W8, [X21+2211]
	010 Move X22, [X22+1776]
	011 Move X20, [X20+1768]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2F4000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x2F4000
	021 Move X0, [X0+1776]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2211], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<RaycastResult>..ctor, X0
	030 Move W8, 1
	031 Move [X19+32], X20
	032 Move [X19+40], W8
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+48]
	040 Call MonoBehaviour..ctor, X0
	041 Return 

