Type: UnityEngine.UI.ReflectionMethodsCache

Method: System.Void .ctor()

Disassembly:
	0x03E48B84 LDR X8, [X24]
	0x03E48B88 STR X0, [X31]
	0x03E48B8C ADD X1, X31, 0x2C
	0x03E48B90 MOV X0, X8
	0x03E48B94 BL 0x1C16E04
	0x03E48B98 LDR X8, [X23]
	0x03E48B9C STR X0, [X31 + 0x8]
	0x03E48BA0 ADD X1, X31, 0x28
	0x03E48BA4 MOV X0, X8
	0x03E48BA8 BL 0x1C16E04
	0x03E48BAC STR X0, [X31 + 0x10]
	0x03E48BB0 ADD X1, X31, 0x0
	0x03E48BB4 MOV X0, X21
	0x03E48BB8 MOV X2, X20
	0x03E48BBC MOV X3, X19
	0x03E48BC0 BL 0x1C16CB0
	0x03E48BC4 LDP X20, X19, [X31 + 0x60]
	0x03E48BC8 LDP X22, X21, [X31 + 0x50]
	0x03E48BCC LDP X24, X23, [X31 + 0x40]
	0x03E48BD0 LDP X26, X25, [X31 + 0x30]
	0x03E48BD4 LDR X30, [X31 + 0x20]
	0x03E48BD8 ADD X31, X31, 0x70
	0x03E48BDC RET
	0x03E48BE0 MOV X0, X1
	0x03E48BE4 MOV X1, X31
	0x03E48BE8 B 0x1C16CB4
	0x03E48BEC STP X30, X21, [X31 - 0x20]!
	0x03E48BF0 STP X20, X19, [X31 + 0x10]
	0x03E48BF4 LDR X8, [X2 + 0x8]
	0x03E48BF8 STP X1, X2, [X0 + 0x20]
	0x03E48BFC MOV X19, X0
	0x03E48C00 MOV X20, X1
	0x03E48C04 STR X8, [X0 + 0x10]
	0x03E48C08 LDRB W21, [X2 + 0x52]
	0x03E48C0C STR X0, [X0 + 0x40]
	0x03E48C10 MOV X0, X2
	0x03E48C14 BL 0x1C16D84
	0x03E48C18 TBZ X0, 0x0, 0x3E48C34
	0x03E48C1C CMP W21, 0x4
	0x03E48C20 B.NE 0x3E48C38
	0x03E48C24 ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E48C28 ADD X8, X8, 0x604
	0x03E48C2C STR X8, [X19 + 0x18]
	0x03E48C30 B 0x3E48C48
	0x03E48C34 CBZ X20, 0x3E48C60
	0x03E48C38 LDR X8, [X19 + 0x10]
	0x03E48C3C LDR X9, [X19 + 0x20]
	0x03E48C40 STR X8, [X19 + 0x18]
	0x03E48C44 STR X9, [X19 + 0x40]
	0x03E48C48 ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E48C4C ADD X8, X8, 0x574
	0x03E48C50 STR X8, [X19 + 0x38]
	0x03E48C54 LDP X20, X19, [X31 + 0x10]
	0x03E48C58 LDP X30, X21, [X31], #0x20
	0x03E48C5C RET
	0x03E48C60 ADRP X1, 0xFFFFFFFFFCCD3000
	0x03E48C64 ADD X1, X1, 0xEE3
	0x03E48C68 MOV X0, X31
	0x03E48C6C BL 0x1C16F3C
	0x03E48C70 MOV X1, X31
	0x03E48C74 BL 0x1C16DEC
	0x03E48C78 SUB X31, X31, 0x30
	0x03E48C7C STR X30, [X31 + 0x20]
	0x03E48C80 LDR X9, [X1 + 0x10]
	0x03E48C84 LDR V1, [X1]
	0x03E48C88 LDR X10, [X0 + 0x18]
	0x03E48C8C LDR X8, [X0 + 0x40]
	0x03E48C90 STR X9, [X31 + 0x10]
	0x03E48C94 STR V1, [X31]
	0x03E48C98 LDR X4, [X0 + 0x28]
	0x03E48C9C ADD X1, X31, 0x0
	0x03E48CA0 MOV X0, X8
	0x03E48CA4 BLR X10
	0x03E48CA8 LDR X30, [X31 + 0x20]
	0x03E48CAC ADD X31, X31, 0x30
	0x03E48CB0 RET
	0x03E48CB4 SUB X31, X31, 0x80
	0x03E48CB8 STP X30, X27, [X31 + 0x30]
	0x03E48CBC STP X26, X25, [X31 + 0x40]
	0x03E48CC0 STP X24, X23, [X31 + 0x50]
	0x03E48CC4 STP X22, X21, [X31 + 0x60]
	0x03E48CC8 STP X20, X19, [X31 + 0x70]
	0x03E48CCC STR S0, [X31 + 0x2C]
	0x03E48CD0 ADRP X27, 0x5A0000
	0x03E48CD4 STR W3, [X31 + 0x28]
	0x03E48CD8 ADRP X26, 0x323000
	0x03E48CDC ADRP X25, 0x2AB000
	0x03E48CE0 ADRP X24, 0x2AB000
	0x03E48CE4 LDRB W8, [X27 + 0x814]
	0x03E48CE8 LDR X26, [X26 + 0x648]
	0x03E48CEC LDR X25, [X25 + 0xA90]
	0x03E48CF0 LDR X24, [X24 + 0x758]
	0x03E48CF4 MOV X19, X5
	0x03E48CF8 MOV X20, X4
	0x03E48CFC MOV X22, X2
	0x03E48D00 MOV X23, X1
	0x03E48D04 MOV X21, X0
	0x03E48D08 TBNZ X8, 0x0, 0x3E48D38
	0x03E48D0C ADRP X0, 0x2AB000
	0x03E48D10 LDR X0, [X0 + 0x758]
	0x03E48D14 BL 0x1C16CF4
	0x03E48D18 ADRP X0, 0x323000
	0x03E48D1C LDR X0, [X0 + 0x648]
	0x03E48D20 BL 0x1C16CF4
	0x03E48D24 ADRP X0, 0x2AB000
	0x03E48D28 LDR X0, [X0 + 0xA90]
	0x03E48D2C BL 0x1C16CF4
	0x03E48D30 MOVZ W8, 0x1
	0x03E48D34 STRB W8, [X27 + 0x814]
	0x03E48D38 LDR X0, [X26]
	0x03E48D3C MOV X1, X23
	0x03E48D40 STP X31, X31, [X31 + 0x10]
	0x03E48D44 STR X31, [X31 + 0x20]
	0x03E48D48 BL 0x1C16E04
	0x03E48D4C LDR X8, [X25]
	0x03E48D50 STP X0, X22, [X31]
	0x03E48D54 ADD X1, X31, 0x2C
	0x03E48D58 MOV X0, X8
	0x03E48D5C BL 0x1C16E04
	0x03E48D60 LDR X8, [X24]
	0x03E48D64 STR X0, [X31 + 0x10]
	0x03E48D68 ADD X1, X31, 0x28
	0x03E48D6C MOV X0, X8
	0x03E48D70 BL 0x1C16E04
	0x03E48D74 STR X0, [X31 + 0x18]
	0x03E48D78 ADD X1, X31, 0x0
	0x03E48D7C MOV X0, X21
	0x03E48D80 MOV X2, X20
	0x03E48D84 MOV X3, X19
	0x03E48D88 BL 0x1C16CB0
	0x03E48D8C LDP X20, X19, [X31 + 0x70]
	0x03E48D90 LDP X22, X21, [X31 + 0x60]
	0x03E48D94 LDP X24, X23, [X31 + 0x50]
	0x03E48D98 LDP X26, X25, [X31 + 0x40]
	0x03E48D9C LDP X30, X27, [X31 + 0x30]
	0x03E48DA0 ADD X31, X31, 0x80
	0x03E48DA4 RET
	0x03E48DA8 STR X30, [X31 - 0x10]!
	0x03E48DAC MOV X0, X1
	0x03E48DB0 MOV X1, X31
	0x03E48DB4 BL 0x1C16CB4
	0x03E48DB8 CBZ X0, 0x3E48DCC
	0x03E48DBC BL 0x1C16E08
	0x03E48DC0 LDR W0, [X0]
	0x03E48DC4 LDR X30, [X31], #0x10
	0x03E48DC8 RET
	0x03E48DCC BL 0x1C16F20
	0x03E48DD0 STP X30, X21, [X31 - 0x20]!
	0x03E48DD4 STP X20, X19, [X31 + 0x10]
	0x03E48DD8 LDR X8, [X2 + 0x8]
	0x03E48DDC STP X1, X2, [X0 + 0x20]
	0x03E48DE0 MOV X19, X0
	0x03E48DE4 MOV X20, X1
	0x03E48DE8 STR X8, [X0 + 0x10]
	0x03E48DEC LDRB W21, [X2 + 0x52]
	0x03E48DF0 STR X0, [X0 + 0x40]
	0x03E48DF4 MOV X0, X2
	0x03E48DF8 BL 0x1C16D84
	0x03E48DFC TBZ X0, 0x0, 0x3E48E18
	0x03E48E00 CMP W21, 0x4
	0x03E48E04 B.NE 0x3E48E1C
	0x03E48E08 ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E48E0C ADD X8, X8, 0x740
	0x03E48E10 STR X8, [X19 + 0x18]
	0x03E48E14 B 0x3E48E2C
	0x03E48E18 CBZ X20, 0x3E48E44
	0x03E48E1C LDR X8, [X19 + 0x10]
	0x03E48E20 LDR X9, [X19 + 0x20]
	0x03E48E24 STR X8, [X19 + 0x18]
	0x03E48E28 STR X9, [X19 + 0x40]
	0x03E48E2C ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E48E30 ADD X8, X8, 0x680
	0x03E48E34 STR X8, [X19 + 0x38]
	0x03E48E38 LDP X20, X19, [X31 + 0x10]
	0x03E48E3C LDP X30, X21, [X31], #0x20
	0x03E48E40 RET
	0x03E48E44 ADRP X1, 0xFFFFFFFFFCCD3000
	0x03E48E48 ADD X1, X1, 0xEE3
	0x03E48E4C MOV X0, X31
	0x03E48E50 BL 0x1C16F3C
	0x03E48E54 MOV X1, X31
	0x03E48E58 BL 0x1C16DEC
	0x03E48E5C LDR X9, [X0 + 0x40]
	0x03E48E60 LDR X3, [X0 + 0x18]
	0x03E48E64 LDR X2, [X0 + 0x28]
	0x03E48E68 MOV X0, X9
	0x03E48E6C BR X3
	0x03E48E70 SUB X31, X31, 0x80
	0x03E48E74 STP X30, X25, [X31 + 0x40]
	0x03E48E78 STP X24, X23, [X31 + 0x50]
	0x03E48E7C STP X22, X21, [X31 + 0x60]
	0x03E48E80 STP X20, X19, [X31 + 0x70]
	0x03E48E84 STP S0, S1, [X31 + 0x38]
	0x03E48E88 STP S2, S3, [X31 + 0x30]
	0x03E48E8C STR S4, [X31 + 0x2C]
	0x03E48E90 ADRP X25, 0x5A0000
	0x03E48E94 STR W1, [X31 + 0x28]
	0x03E48E98 ADRP X24, 0x2B3000
	0x03E48E9C ADRP X23, 0x2AB000
	0x03E48EA0 ADRP X22, 0x2AB000
	0x03E48EA4 LDRB W8, [X25 + 0x815]
	0x03E48EA8 LDR X24, [X24 + 0xF08]
	0x03E48EAC LDR X23, [X23 + 0xA90]
	0x03E48EB0 LDR X22, [X22 + 0x758]
	0x03E48EB4 MOV X19, X3
	0x03E48EB8 MOV X20, X2
	0x03E48EBC MOV X21, X0
	0x03E48EC0 TBNZ X8, 0x0, 0x3E48EF0
	0x03E48EC4 ADRP X0, 0x2AB000
	0x03E48EC8 LDR X0, [X0 + 0x758]
	0x03E48ECC BL 0x1C16CF4
	0x03E48ED0 ADRP X0, 0x2AB000
	0x03E48ED4 LDR X0, [X0 + 0xA90]
	0x03E48ED8 BL 0x1C16CF4
	0x03E48EDC ADRP X0, 0x2B3000
	0x03E48EE0 LDR X0, [X0 + 0xF08]
	0x03E48EE4 BL 0x1C16CF4
	0x03E48EE8 MOVZ W8, 0x1
	0x03E48EEC STRB W8, [X25 + 0x815]
	0x03E48EF0 LDR X0, [X24]
	0x03E48EF4 MOVI V0.2D, 0x0
	0x03E48EF8 ADD X1, X31, 0x38
	0x03E48EFC STR X31, [X31 + 0x20]
	0x03E48F00 STP V0, V0, [X31]
	0x03E48F04 BL 0x1C16E04
	0x03E48F08 LDR X8, [X24]
	0x03E48F0C STR X0, [X31]
	0x03E48F10 ADD X1, X31, 0x30
	0x03E48F14 MOV X0, X8
	0x03E48F18 BL 0x1C16E04
	0x03E48F1C LDR X8, [X23]
	0x03E48F20 STR X0, [X31 + 0x8]
	0x03E48F24 ADD X1, X31, 0x2C
	0x03E48F28 MOV X0, X8
	0x03E48F2C BL 0x1C16E04
	0x03E48F30 LDR X8, [X22]
	0x03E48F34 STR X0, [X31 + 0x10]
	0x03E48F38 ADD X1, X31, 0x28
	0x03E48F3C MOV X0, X8
	0x03E48F40 BL 0x1C16E04
	0x03E48F44 STR X0, [X31 + 0x18]
	0x03E48F48 ADD X1, X31, 0x0
	0x03E48F4C MOV X0, X21
	0x03E48F50 MOV X2, X20
	0x03E48F54 MOV X3, X19
	0x03E48F58 BL 0x1C16CB0
	0x03E48F5C LDP X20, X19, [X31 + 0x70]
	0x03E48F60 LDP X22, X21, [X31 + 0x60]
	0x03E48F64 LDP X24, X23, [X31 + 0x50]
	0x03E48F68 LDP X30, X25, [X31 + 0x40]
	0x03E48F6C ADD X31, X31, 0x80
	0x03E48F70 RET
	0x03E48F74 STP X30, X19, [X31 - 0x10]!
	0x03E48F78 MOV X0, X1
	0x03E48F7C MOV X1, X31
	0x03E48F80 MOV X19, X8
	0x03E48F84 BL 0x1C16CB4
	0x03E48F88 CBZ X0, 0x3E48FA8
	0x03E48F8C BL 0x1C16E08
	0x03E48F90 LDP V0, V1, [X0]
	0x03E48F94 LDR W8, [X0 + 0x20]
	0x03E48F98 STP V0, V1, [X19]
	0x03E48F9C STR W8, [X19 + 0x20]
	0x03E48FA0 LDP X30, X19, [X31], #0x10
	0x03E48FA4 RET
	0x03E48FA8 BL 0x1C16F20
	0x03E48FAC STP X30, X21, [X31 - 0x20]!
	0x03E48FB0 STP X20, X19, [X31 + 0x10]
	0x03E48FB4 LDR X8, [X2 + 0x8]
	0x03E48FB8 STP X1, X2, [X0 + 0x20]
	0x03E48FBC MOV X19, X0
	0x03E48FC0 MOV X20, X1
	0x03E48FC4 STR X8, [X0 + 0x10]
	0x03E48FC8 LDRB W21, [X2 + 0x52]
	0x03E48FCC STR X0, [X0 + 0x40]
	0x03E48FD0 MOV X0, X2
	0x03E48FD4 BL 0x1C16D84
	0x03E48FD8 TBZ X0, 0x0, 0x3E48FF4
	0x03E48FDC CMP W21, 0x3
	0x03E48FE0 B.NE 0x3E48FF8
	0x03E48FE4 ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E48FE8 ADD X8, X8, 0x7E4
	0x03E48FEC STR X8, [X19 + 0x18]
	0x03E48FF0 B 0x3E49008
	0x03E48FF4 CBZ X20, 0x3E49020
	0x03E48FF8 LDR X8, [X19 + 0x10]
	0x03E48FFC LDR X9, [X19 + 0x20]
	0x03E49000 STR X8, [X19 + 0x18]
	0x03E49004 STR X9, [X19 + 0x40]
	0x03E49008 ADRP X8, 0xFFFFFFFFFDDCC000
	0x03E4900C ADD X8, X8, 0x75C
	0x03E49010 STR X8, [X19 + 0x38]
	0x03E49014 LDP X20, X19, [X31 + 0x10]
	0x03E49018 LDP X30, X21, [X31], #0x20
	0x03E4901C RET
	0x03E49020 ADRP X1, 0xFFFFFFFFFCCD2000
	0x03E49024 ADD X1, X1, 0xEE3
	0x03E49028 MOV X0, X31
	0x03E4902C BL 0x1C16F3C
	0x03E49030 MOV X1, X31
	0x03E49034 BL 0x1C16DEC
	0x03E49038 SUB X31, X31, 0x30
	0x03E4903C STR X30, [X31 + 0x20]
	0x03E49040 LDR X9, [X1 + 0x10]
	0x03E49044 LDR V1, [X1]
	0x03E49048 LDR X10, [X0 + 0x18]
	0x03E4904C LDR X8, [X0 + 0x40]
	0x03E49050 STR X9, [X31 + 0x10]
	0x03E49054 STR V1, [X31]
	0x03E49058 LDR X3, [X0 + 0x28]
	0x03E4905C ADD X1, X31, 0x0
	0x03E49060 MOV X0, X8
	0x03E49064 BLR X10
	0x03E49068 LDR X30, [X31 + 0x20]
	0x03E4906C ADD X31, X31, 0x30
	0x03E49070 RET
	0x03E49074 SUB X31, X31, 0x70
	0x03E49078 STR X30, [X31 + 0x20]
	0x03E4907C STP X26, X25, [X31 + 0x30]
	0x03E49080 STP X24, X23, [X31 + 0x40]
	0x03E49084 STP X22, X21, [X31 + 0x50]
	0x03E49088 STP X20, X19, [X31 + 0x60]
	0x03E4908C STR S0, [X31 + 0x2C]
	0x03E49090 ADRP X26, 0x59F000
	0x03E49094 STR W2, [X31 + 0x28]
	0x03E49098 ADRP X25, 0x322000
	0x03E4909C ADRP X24, 0x2AA000
	0x03E490A0 ADRP X23, 0x2AA000
	0x03E490A4 LDRB W8, [X26 + 0x817]
	0x03E490A8 LDR X25, [X25 + 0x648]
	0x03E490AC LDR X24, [X24 + 0xA90]
	0x03E490B0 LDR X23, [X23 + 0x758]
	0x03E490B4 MOV X19, X4
	0x03E490B8 MOV X20, X3
	0x03E490BC MOV X22, X1
	0x03E490C0 MOV X21, X0
	0x03E490C4 TBNZ X8, 0x0, 0x3E490F4
	0x03E490C8 ADRP X0, 0x2AA000
	0x03E490CC LDR X0, [X0 + 0x758]
	0x03E490D0 BL 0x1C16CF4
	0x03E490D4 ADRP X0, 0x322000
	0x03E490D8 LDR X0, [X0 + 0x648]
	0x03E490DC BL 0x1C16CF4
	0x03E490E0 ADRP X0, 0x2AA000
	0x03E490E4 LDR X0, [X0 + 0xA90]
	0x03E490E8 BL 0x1C16CF4
	0x03E490EC MOVZ W8, 0x1
	0x03E490F0 STRB W8, [X26 + 0x817]
	0x03E490F4 LDR X0, [X25]
	0x03E490F8 MOV X1, X22
	0x03E490FC STP X31, X31, [X31 + 0x8]
	0x03E49100 STR X31, [X31 + 0x18]
	0x03E49104 BL 0x1C16E04
	0x03E49108 LDR X8, [X24]
	0x03E4910C STR X0, [X31]
	0x03E49110 ADD X1, X31, 0x2C
	0x03E49114 MOV X0, X8
	0x03E49118 BL 0x1C16E04
	0x03E4911C LDR X8, [X23]
	0x03E49120 STR X0, [X31 + 0x8]
	0x03E49124 ADD X1, X31, 0x28
	0x03E49128 MOV X0, X8
	0x03E4912C BL 0x1C16E04
	0x03E49130 STR X0, [X31 + 0x10]
	0x03E49134 ADD X1, X31, 0x0
	0x03E49138 MOV X0, X21
	0x03E4913C MOV X2, X20
	0x03E49140 MOV X3, X19
	0x03E49144 BL 0x1C16CB0
	0x03E49148 LDP X20, X19, [X31 + 0x60]
	0x03E4914C LDP X22, X21, [X31 + 0x50]
	0x03E49150 LDP X24, X23, [X31 + 0x40]
	0x03E49154 LDP X26, X25, [X31 + 0x30]
	0x03E49158 LDR X30, [X31 + 0x20]
	0x03E4915C ADD X31, X31, 0x70
	0x03E49160 RET
	0x03E49164 MOV X0, X1
	0x03E49168 MOV X1, X31
	0x03E4916C B 0x1C16CB4
	0x03E49170 STP X30, X21, [X31 - 0x20]!
	0x03E49174 STP X20, X19, [X31 + 0x10]
	0x03E49178 LDR X8, [X2 + 0x8]
	0x03E4917C STP X1, X2, [X0 + 0x20]
	0x03E49180 MOV X19, X0
	0x03E49184 MOV X20, X1
	0x03E49188 STR X8, [X0 + 0x10]
	0x03E4918C LDRB W21, [X2 + 0x52]
	0x03E49190 STR X0, [X0 + 0x40]
	0x03E49194 MOV X0, X2
	0x03E49198 BL 0x1C16D84
	0x03E4919C TBZ X0, 0x0, 0x3E491B8
	0x03E491A0 CMP W21, 0x4
	0x03E491A4 B.NE 0x3E491BC
	0x03E491A8 ADRP X8, 0xFFFFFFFFFDDCC000
	0x03E491AC ADD X8, X8, 0x970
	0x03E491B0 STR X8, [X19 + 0x18]
	0x03E491B4 B 0x3E491CC
	0x03E491B8 CBZ X20, 0x3E491E4
	0x03E491BC LDR X8, [X19 + 0x10]
	0x03E491C0 LDR X9, [X19 + 0x20]
	0x03E491C4 STR X8, [X19 + 0x18]
	0x03E491C8 STR X9, [X19 + 0x40]
	0x03E491CC ADRP X8, 0xFFFFFFFFFDDCC000
	0x03E491D0 ADD X8, X8, 0x8E0
	0x03E491D4 STR X8, [X19 + 0x38]
	0x03E491D8 LDP X20, X19, [X31 + 0x10]
	0x03E491DC LDP X30, X21, [X31], #0x20
	0x03E491E0 RET
	0x03E491E4 ADRP X1, 0xFFFFFFFFFCCD2000
	0x03E491E8 ADD X1, X1, 0xEE3
	0x03E491EC MOV X0, X31
	0x03E491F0 BL 0x1C16F3C
	0x03E491F4 MOV X1, X31
	0x03E491F8 BL 0x1C16DEC
	0x03E491FC SUB X31, X31, 0x30
	0x03E49200 STR X30, [X31 + 0x20]
	0x03E49204 LDR X9, [X1 + 0x10]
	0x03E49208 LDR V1, [X1]
	0x03E4920C LDR X10, [X0 + 0x18]
	0x03E49210 LDR X8, [X0 + 0x40]
	0x03E49214 STR X9, [X31 + 0x10]
	0x03E49218 STR V1, [X31]
	0x03E4921C LDR X4, [X0 + 0x28]
	0x03E49220 ADD X1, X31, 0x0
	0x03E49224 MOV X0, X8
	0x03E49228 BLR X10
	0x03E4922C LDR X30, [X31 + 0x20]
	0x03E49230 ADD X31, X31, 0x30
	0x03E49234 RET
	0x03E49238 SUB X31, X31, 0x80
	0x03E4923C STP X30, X27, [X31 + 0x30]
	0x03E49240 STP X26, X25, [X31 + 0x40]
	0x03E49244 STP X24, X23, [X31 + 0x50]
	0x03E49248 STP X22, X21, [X31 + 0x60]
	0x03E4924C STP X20, X19, [X31 + 0x70]
	0x03E49250 STR S0, [X31 + 0x2C]
	0x03E49254 ADRP X27, 0x59F000
	0x03E49258 STR W3, [X31 + 0x28]
	0x03E4925C ADRP X26, 0x322000
	0x03E49260 ADRP X25, 0x2AA000
	0x03E49264 ADRP X24, 0x2AA000
	0x03E49268 LDRB W8, [X27 + 0x818]
	0x03E4926C LDR X26, [X26 + 0x648]
	0x03E49270 LDR X25, [X25 + 0xA90]
	0x03E49274 LDR X24, [X24 + 0x758]
	0x03E49278 MOV X19, X5
	0x03E4927C MOV X20, X4
	0x03E49280 MOV X22, X2
	0x03E49284 MOV X23, X1
	0x03E49288 MOV X21, X0
	0x03E4928C TBNZ X8, 0x0, 0x3E492BC
	0x03E49290 ADRP X0, 0x2AA000
	0x03E49294 LDR X0, [X0 + 0x758]
	0x03E49298 BL 0x1C16CF4
	0x03E4929C ADRP X0, 0x322000
	0x03E492A0 LDR X0, [X0 + 0x648]
	0x03E492A4 BL 0x1C16CF4
	0x03E492A8 ADRP X0, 0x2AA000
	0x03E492AC LDR X0, [X0 + 0xA90]
	0x03E492B0 BL 0x1C16CF4
	0x03E492B4 MOVZ W8, 0x1
	0x03E492B8 STRB W8, [X27 + 0x818]
	0x03E492BC LDR X0, [X26]
	0x03E492C0 MOV X1, X23
	0x03E492C4 STP X31, X31, [X31 + 0x10]
	0x03E492C8 STR X31, [X31 + 0x20]
	0x03E492CC BL 0x1C16E04
	0x03E492D0 LDR X8, [X25]
	0x03E492D4 STP X0, X22, [X31]
	0x03E492D8 ADD X1, X31, 0x2C
	0x03E492DC MOV X0, X8
	0x03E492E0 BL 0x1C16E04
	0x03E492E4 LDR X8, [X24]
	0x03E492E8 STR X0, [X31 + 0x10]
	0x03E492EC ADD X1, X31, 0x28
	0x03E492F0 MOV X0, X8
	0x03E492F4 BL 0x1C16E04
	0x03E492F8 STR X0, [X31 + 0x18]
	0x03E492FC ADD X1, X31, 0x0
	0x03E49300 MOV X0, X21
	0x03E49304 MOV X2, X20
	0x03E49308 MOV X3, X19
	0x03E4930C BL 0x1C16CB0
	0x03E49310 LDP X20, X19, [X31 + 0x70]
	0x03E49314 LDP X22, X21, [X31 + 0x60]
	0x03E49318 LDP X24, X23, [X31 + 0x50]
	0x03E4931C LDP X26, X25, [X31 + 0x40]
	0x03E49320 LDP X30, X27, [X31 + 0x30]
	0x03E49324 ADD X31, X31, 0x80
	0x03E49328 RET
	0x03E4932C STR X30, [X31 - 0x10]!
	0x03E49330 MOV X0, X1
	0x03E49334 MOV X1, X31
	0x03E49338 BL 0x1C16CB4
	0x03E4933C CBZ X0, 0x3E49350
	0x03E49340 BL 0x1C16E08
	0x03E49344 LDR W0, [X0]
	0x03E49348 LDR X30, [X31], #0x10
	0x03E4934C RET
	0x03E49350 BL 0x1C16F20
	0x03E49354 MOV X1, X31
	0x03E49358 B 0x33BDD8C
	0x03E4935C STR X30, [X31 - 0x40]!
	0x03E49360 STP X24, X23, [X31 + 0x10]
	0x03E49364 STP X22, X21, [X31 + 0x20]
	0x03E49368 STP X20, X19, [X31 + 0x30]
	0x03E4936C ADRP X21, 0x59F000
	0x03E49370 LDRB W8, [X21 + 0x819]
	0x03E49374 MOV X19, X1
	0x03E49378 MOV X20, X0
	0x03E4937C TBNZ X8, 0x0, 0x3E493D0
	0x03E49380 ADRP X0, 0x322000
	0x03E49384 LDR X0, [X0 + 0x650]
	0x03E49388 BL 0x1C16CF4
	0x03E4938C ADRP X0, 0x305000
	0x03E49390 LDR X0, [X0 + 0x688]
	0x03E49394 BL 0x1C16CF4
	0x03E49398 ADRP X0, 0x305000
	0x03E4939C LDR X0, [X0 + 0x160]
	0x03E493A0 BL 0x1C16CF4
	0x03E493A4 ADRP X0, 0x2D6000
	0x03E493A8 LDR X0, [X0 + 0xD58]
	0x03E493AC BL 0x1C16CF4
	0x03E493B0 ADRP X0, 0x305000
	0x03E493B4 LDR X0, [X0 + 0x10]
	0x03E493B8 BL 0x1C16CF4
	0x03E493BC ADRP X0, 0x305000
	0x03E493C0 LDR X0, [X0 + 0x8]
	0x03E493C4 BL 0x1C16CF4
	0x03E493C8 MOVZ W8, 0x1
	0x03E493CC STRB W8, [X21 + 0x819]
	0x03E493D0 MOV X0, X20
	0x03E493D4 MOV X1, X31
	0x03E493D8 BL 0x33BDD8C
	0x03E493DC MOV X0, X20
	0x03E493E0 BL 0x3E49598
	0x03E493E4 CBZ X19, 0x3E49594
	0x03E493E8 LDR X21, [X20 + 0x10]
	0x03E493EC MOV X0, X19
	0x03E493F0 MOV X1, X31
	0x03E493F4 BL 0x3C17EBC
	0x03E493F8 CBZ X21, 0x3E49594
	0x03E493FC ADRP X22, 0x2D6000
	0x03E49400 LDR X22, [X22 + 0xD58]
	0x03E49404 MOV X1, X0
	0x03E49408 MOV X0, X21
	0x03E4940C LDR X2, [X22]
	0x03E49410 BL 0x30CC3E4
	0x03E49414 LDR X21, [X20 + 0x18]
	0x03E49418 MOV X0, X19
	0x03E4941C MOV X1, X31
	0x03E49420 BL 0x3C182C4
	0x03E49424 CBZ X21, 0x3E49594
	0x03E49428 ADRP X8, 0x322000
	0x03E4942C LDR X8, [X8 + 0x650]
	0x03E49430 ADRP X23, 0x305000
	0x03E49434 ADRP X24, 0x305000
	0x03E49438 MOV X1, X0
	0x03E4943C LDR X2, [X8]
	0x03E49440 LDR X23, [X23 + 0x8]
	0x03E49444 LDR X24, [X24 + 0x10]
	0x03E49448 MOV X0, X21
	0x03E4944C BL 0x2F70248
	0x03E49450 LDR X0, [X23]
	0x03E49454 BL 0x1C16F10
	0x03E49458 LDR X1, [X24]
	0x03E4945C MOV X21, X0
	0x03E49460 BL 0x30CE5F4
	0x03E49464 MOV X0, X19
	0x03E49468 MOV W1, W31
	0x03E4946C MOV X2, X21
	0x03E49470 MOV X3, X31
	0x03E49474 BL 0x3C18C9C
	0x03E49478 LDR X0, [X20 + 0x20]
	0x03E4947C CBZ X0, 0x3E49594
	0x03E49480 ADRP X23, 0x305000
	0x03E49484 LDR X23, [X23 + 0x160]
	0x03E49488 MOV X1, X21
	0x03E4948C LDR X2, [X23]
	0x03E49490 BL 0x30CF050
	0x03E49494 MOVZ W1, 0x1
	0x03E49498 MOV X0, X19
	0x03E4949C MOV X2, X21
	0x03E494A0 MOV X3, X31
	0x03E494A4 BL 0x3C18C9C
	0x03E494A8 LDR X0, [X20 + 0x28]
	0x03E494AC CBZ X0, 0x3E49594
	0x03E494B0 LDR X2, [X23]
	0x03E494B4 MOV X1, X21
	0x03E494B8 BL 0x30CF050
	0x03E494BC MOVZ W1, 0x2
	0x03E494C0 MOV X0, X19
	0x03E494C4 MOV X2, X21
	0x03E494C8 MOV X3, X31
	0x03E494CC BL 0x3C18C9C
	0x03E494D0 LDR X0, [X20 + 0x30]
	0x03E494D4 CBZ X0, 0x3E49594
	0x03E494D8 LDR X2, [X23]
	0x03E494DC MOV X1, X21
	0x03E494E0 BL 0x30CF050
	0x03E494E4 MOVZ W1, 0x3
	0x03E494E8 MOV X0, X19
	0x03E494EC MOV X2, X21
	0x03E494F0 MOV X3, X31
	0x03E494F4 BL 0x3C18C9C
	0x03E494F8 LDR X0, [X20 + 0x38]
	0x03E494FC CBZ X0, 0x3E49594
	0x03E49500 LDR X2, [X23]
	0x03E49504 MOV X1, X21
	0x03E49508 BL 0x30CF050
	0x03E4950C LDR X21, [X20 + 0x40]
	0x03E49510 MOV X0, X19
	0x03E49514 MOV X1, X31
	0x03E49518 BL 0x3C17F68
	0x03E4951C CBZ X21, 0x3E49594
	0x03E49520 LDR X2, [X22]
	0x03E49524 MOV X1, X0
	0x03E49528 MOV X0, X21
	0x03E4952C BL 0x30CC3E4
	0x03E49530 LDR X21, [X20 + 0x48]
	0x03E49534 MOV X0, X19
	0x03E49538 MOV X1, X31
	0x03E4953C BL 0x3C18014
	0x03E49540 CBZ X21, 0x3E49594
	0x03E49544 LDR X2, [X23]
	0x03E49548 MOV X1, X0
	0x03E4954C MOV X0, X21
	0x03E49550 BL 0x30CF050
	0x03E49554 LDR X20, [X20 + 0x50]
	0x03E49558 MOV X0, X19
	0x03E4955C MOV W1, W31
	0x03E49560 MOV X2, X31
	0x03E49564 BL 0x3C191E8
	0x03E49568 CBZ X20, 0x3E49594
	0x03E4956C ADRP X8, 0x305000
	0x03E49570 LDR X8, [X8 + 0x688]
	0x03E49574 MOV X1, X0
	0x03E49578 MOV X0, X20
	0x03E4957C LDP X20, X19, [X31 + 0x30]
	0x03E49580 LDR X2, [X8]
	0x03E49584 LDP X22, X21, [X31 + 0x20]
	0x03E49588 LDP X24, X23, [X31 + 0x10]
	0x03E4958C LDR X30, [X31], #0x40
	0x03E49590 B 0x2FDC918
	0x03E49594 BL 0x1C16F20
	0x03E49598 STP X30, X21, [X31 - 0x20]!
	0x03E4959C STP X20, X19, [X31 + 0x10]
	0x03E495A0 ADRP X20, 0x59F000
	0x03E495A4 LDRB W8, [X20 + 0x81A]
	0x03E495A8 MOV X19, X0
	0x03E495AC TBNZ X8, 0x0, 0x3E49618
	0x03E495B0 ADRP X0, 0x322000
	0x03E495B4 LDR X0, [X0 + 0x658]
	0x03E495B8 BL 0x1C16CF4
	0x03E495BC ADRP X0, 0x322000
	0x03E495C0 LDR X0, [X0 + 0x660]
	0x03E495C4 BL 0x1C16CF4
	0x03E495C8 ADRP X0, 0x322000
	0x03E495CC LDR X0, [X0 + 0x668]
	0x03E495D0 BL 0x1C16CF4
	0x03E495D4 ADRP X0, 0x2D4000
	0x03E495D8 LDR X0, [X0 + 0x8D8]
	0x03E495DC BL 0x1C16CF4
	0x03E495E0 ADRP X0, 0x322000
	0x03E495E4 LDR X0, [X0 + 0x670]
	0x03E495E8 BL 0x1C16CF4
	0x03E495EC ADRP X0, 0x322000
	0x03E495F0 LDR X0, [X0 + 0x678]
	0x03E495F4 BL 0x1C16CF4
	0x03E495F8 ADRP X0, 0x322000
	0x03E495FC LDR X0, [X0 + 0x680]
	0x03E49600 BL 0x1C16CF4
	0x03E49604 ADRP X0, 0x2D4000
	0x03E49608 LDR X0, [X0 + 0x8E0]
	0x03E4960C BL 0x1C16CF4
	0x03E49610 MOVZ W8, 0x1
	0x03E49614 STRB W8, [X20 + 0x81A]
	0x03E49618 LDRB W8, [X19 + 0x58]
	0x03E4961C CBNZ W8, 0x3E49714
	0x03E49620 ADRP X8, 0x322000
	0x03E49624 LDR X8, [X8 + 0x670]
	0x03E49628 LDR X0, [X8]
	0x03E4962C LDR W8, [X0 + 0xE0]
	0x03E49630 CBNZ W8, 0x3E49638
	0x03E49634 BL 0x1C16DFC
	0x03E49638 ADRP X20, 0x322000
	0x03E4963C LDR X20, [X20 + 0x668]
	0x03E49640 LDR X0, [X20]
	0x03E49644 BL 0x28FA1EC
	0x03E49648 STR X0, [X19 + 0x10]
	0x03E4964C ADRP X8, 0x322000
	0x03E49650 LDR X8, [X8 + 0x680]
	0x03E49654 LDR X0, [X8]
	0x03E49658 LDR W8, [X0 + 0xE0]
	0x03E4965C CBNZ W8, 0x3E49664
	0x03E49660 BL 0x1C16DFC
	0x03E49664 ADRP X8, 0x322000
	0x03E49668 LDR X8, [X8 + 0x658]
	0x03E4966C LDR X0, [X8]
	0x03E49670 BL 0x28F8FBC
	0x03E49674 STR X0, [X19 + 0x18]
	0x03E49678 ADRP X8, 0x322000
	0x03E4967C LDR X8, [X8 + 0x678]
	0x03E49680 LDR X0, [X8]
	0x03E49684 LDR W8, [X0 + 0xE0]
	0x03E49688 CBNZ W8, 0x3E49690
	0x03E4968C BL 0x1C16DFC
	0x03E49690 ADRP X21, 0x322000
	0x03E49694 LDR X21, [X21 + 0x660]
	0x03E49698 LDR X0, [X21]
	0x03E4969C BL 0x28FA678
	0x03E496A0 STR X0, [X19 + 0x20]
	0x03E496A4 LDR X0, [X21]
	0x03E496A8 BL 0x28FA678
	0x03E496AC STR X0, [X19 + 0x28]
	0x03E496B0 LDR X0, [X21]
	0x03E496B4 BL 0x28FA678
	0x03E496B8 STR X0, [X19 + 0x30]
	0x03E496BC LDR X0, [X21]
	0x03E496C0 BL 0x28FA678
	0x03E496C4 STR X0, [X19 + 0x38]
	0x03E496C8 LDR X0, [X20]
	0x03E496CC BL 0x28FA1EC
	0x03E496D0 STR X0, [X19 + 0x40]
	0x03E496D4 LDR X0, [X21]
	0x03E496D8 BL 0x28FA678
	0x03E496DC STR X0, [X19 + 0x48]
	0x03E496E0 ADRP X8, 0x2D4000
	0x03E496E4 LDR X8, [X8 + 0x8E0]
	0x03E496E8 LDR X0, [X8]
	0x03E496EC LDR W8, [X0 + 0xE0]
	0x03E496F0 CBNZ W8, 0x3E496F8
	0x03E496F4 BL 0x1C16DFC
	0x03E496F8 ADRP X8, 0x2D4000
	0x03E496FC LDR X8, [X8 + 0x8D8]
	0x03E49700 LDR X0, [X8]
	0x03E49704 BL 0x28F9448
	0x03E49708 MOVZ W8, 0x1
	0x03E4970C STR X0, [X19 + 0x50]
	0x03E49710 STRB W8, [X19 + 0x58]
	0x03E49714 LDP X20, X19, [X31 + 0x10]
	0x03E49718 LDP X30, X21, [X31], #0x20
	0x03E4971C RET
	0x03E49720 STP X30, X25, [X31 - 0x40]!
	0x03E49724 STP X24, X23, [X31 + 0x10]
	0x03E49728 STP X22, X21, [X31 + 0x20]
	0x03E4972C STP X20, X19, [X31 + 0x30]
	0x03E49730 ADRP X20, 0x59F000
	0x03E49734 LDRB W8, [X20 + 0x81B]
	0x03E49738 MOV X19, X0
	0x03E4973C TBNZ X8, 0x0, 0x3E497A8
	0x03E49740 ADRP X0, 0x322000
	0x03E49744 LDR X0, [X0 + 0x688]
	0x03E49748 BL 0x1C16CF4
	0x03E4974C ADRP X0, 0x2D5000
	0x03E49750 LDR X0, [X0 + 0xB08]
	0x03E49754 BL 0x1C16CF4
	0x03E49758 ADRP X0, 0x322000
	0x03E4975C LDR X0, [X0 + 0x690]
	0x03E49760 BL 0x1C16CF4
	0x03E49764 ADRP X0, 0x322000
	0x03E49768 LDR X0, [X0 + 0x698]
	0x03E4976C BL 0x1C16CF4
	0x03E49770 ADRP X0, 0x322000
	0x03E49774 LDR X0, [X0 + 0x670]
	0x03E49778 BL 0x1C16CF4
	0x03E4977C ADRP X0, 0x322000
	0x03E49780 LDR X0, [X0 + 0x678]
	0x03E49784 BL 0x1C16CF4
	0x03E49788 ADRP X0, 0x322000
	0x03E4978C LDR X0, [X0 + 0x680]
	0x03E49790 BL 0x1C16CF4
	0x03E49794 ADRP X0, 0x2D4000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x5A1000
	014 Move X29, 0x324000
	015 Move X23, 0x2AC000
	016 Move W8, [X20+2063]
	017 Move X29, [X29+1416]
	018 Move X23, [X23+1728]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {110}
	024 Move X0, 0x324000
	025 Move X0, [X0+1424]
	026 Call 0x1C17CF4
	027 Move X0, 0x324000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x324000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move X0, 0x324000
	034 Move X0, [X0+1448]
	035 Call 0x1C17CF4
	036 Move X0, 0x324000
	037 Move X0, [X0+1456]
	038 Call 0x1C17CF4
	039 Move X0, 0x324000
	040 Move X0, [X0+1464]
	041 Call 0x1C17CF4
	042 Move X0, 0x2D3000
	043 Move X0, [X0+3456]
	044 Call 0x1C17CF4
	045 Move X0, 0x324000
	046 Move X0, [X0+1472]
	047 Call 0x1C17CF4
	048 Move X0, 0x324000
	049 Move X0, [X0+1416]
	050 Call 0x1C17CF4
	051 Move X0, 0x324000
	052 Move X0, [X0+1480]
	053 Call 0x1C17CF4
	054 Move X0, 0x324000
	055 Move X0, [X0+1488]
	056 Call 0x1C17CF4
	057 Move X0, 0x324000
	058 Move X0, [X0+1496]
	059 Call 0x1C17CF4
	060 Move X0, 0x324000
	061 Move X0, [X0+1504]
	062 Call 0x1C17CF4
	063 Move X0, 0x324000
	064 Move X0, [X0+1512]
	065 Call 0x1C17CF4
	066 Move X0, 0x324000
	067 Move X0, [X0+1520]
	068 Call 0x1C17CF4
	069 Move X0, 0x324000
	070 Move X0, [X0+1528]
	071 Call 0x1C17CF4
	072 Move X0, 0x324000
	073 Move X0, [X0+1536]
	074 Call 0x1C17CF4
	075 Move X0, 0x324000
	076 Move X0, [X0+1544]
	077 Call 0x1C17CF4
	078 Move X0, 0x324000
	079 Move X0, [X0+1552]
	080 Call 0x1C17CF4
	081 Move X0, 0x2D4000
	082 Move X0, [X0+2688]
	083 Call 0x1C17CF4
	084 Move X0, 0x2B4000
	085 Move X0, [X0+3168]
	086 Call 0x1C17CF4
	087 Move X0, 0x2AC000
	088 Move X0, [X0+1728]
	089 Call 0x1C17CF4
	090 Move X0, 0x2B4000
	091 Move X0, [X0+3744]
	092 Call 0x1C17CF4
	093 Move X0, 0x324000
	094 Move X0, [X0+1560]
	095 Call 0x1C17CF4
	096 Move X0, 0x324000
	097 Move X0, [X0+1568]
	098 Call 0x1C17CF4
	099 Move X0, 0x324000
	100 Move X0, [X0+1576]
	101 Call 0x1C17CF4
	102 Move X0, 0x324000
	103 Move X0, [X0+1584]
	104 Call 0x1C17CF4
	105 Move X0, 0x324000
	106 Move X0, [X0+1592]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X20+2063], W8
	110 Move X25, 0x2B4000
	111 Move X24, 0x324000
	112 Move X25, [X25+3168]
	113 Move X24, [X24+1480]
	114 Move X0, X19
	115 Move X1, X31
	116 Call Object..ctor, X0
	117 Move X0, [X23]
	118 Move X20, [X29]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X20
	124 Move X1, X31
	125 Call Type.GetTypeFromHandle, X0
	126 Move X8, [X25]
	127 Move X20, X0
	128 Move W1, 4
	129 Move X0, X8
	130 Call 0x1C17D6C
	131 Move X8, [X24]
	132 Move X21, X0
	133 Move X1, X31
	134 Move X0, X8
	135 Call Type.GetTypeFromHandle, X0
	136 Compare X21, 0
	137 JumpIfEqual {854}
	138 Move X22, X0
	139 Compare X0, 0
	140 JumpIfEqual {147}
	141 Move X8, [X21]
	142 Move X0, X22
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {851}
	147 Move W8, [X21+24]
	148 Compare W8, 0
	149 JumpIfEqual {850}
	150 Move X8, 0x324000
	151 Move X8, [X8+1552]
	152 Move [X21+32], X22
	153 Move X1, X31
	154 Move X0, [X8]
	155 Call Type.GetTypeFromHandle, X0
	156 Compare X0, 0
	157 JumpIfEqual {854}
	158 Move X8, [X0]
	159 Move X9, [X8+2248]
	160 Move X1, [X8+2256]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X22, X0
	163 Compare X0, 0
	164 JumpIfEqual {171}
	165 Move X8, [X21]
	166 Move X0, X22
	167 Move X1, [X8+64]
	168 Call 0x1C17E00
	169 Compare X0, 0
	170 JumpIfEqual {851}
	171 Move W8, [X21+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X26, 0x2D4000
	174 Move X26, [X26+2688]
	175 Move [X21+40], X22
	176 Move X1, X31
	177 Move X0, [X26]
	178 Call Type.GetTypeFromHandle, X0
	179 Move X22, X0
	180 Compare X0, 0
	181 JumpIfEqual {188}
	182 Move X8, [X21]
	183 Move X0, X22
	184 Move X1, [X8+64]
	185 Call 0x1C17E00
	186 Compare X0, 0
	187 JumpIfEqual {851}
	188 Move W8, [X21+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X27, 0x2D3000
	191 Move X27, [X27+3456]
	192 Move [X21+48], X22
	193 Move X1, X31
	194 Move X0, [X27]
	195 Call Type.GetTypeFromHandle, X0
	196 Move X22, X0
	197 Compare X0, 0
	198 JumpIfEqual {205}
	199 Move X8, [X21]
	200 Move X0, X22
	201 Move X1, [X8+64]
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {851}
	205 Move W8, [X21+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X21+56], X22
	208 Compare X20, 0
	209 JumpIfEqual {854}
	210 Move X28, 0x324000
	211 Move X28, [X28+1592]
	212 Move X0, X20
	213 Move X2, X21
	214 Move X3, X31
	215 Move X1, [X28]
	216 Call Type.GetMethod, X0, X1, X2
	217 Move X1, X31
	218 Move X2, X31
	219 Move X20, X0
	220 Call MethodInfo.op_Inequality, X0, X1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {250}
	225 Move X8, 0x324000
	226 Move X0, [X23]
	227 Move X8, [X8+1504]
	228 Move W9, [X0+224]
	229 Move X21, [X8]
	230 Compare W9, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X21
	234 Move X1, X31
	235 Call Type.GetTypeFromHandle, X0
	236 Move X1, X20
	237 Move X2, X31
	238 Call Delegate.CreateDelegate, X0, X1
	239 Compare X0, 0
	240 JumpIfEqual {249}
	241 Move X8, 0x324000
	242 Move X8, [X8+1512]
	243 Move X1, [X8]
	244 Move X8, [X0]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X19+16], X0
	247 Move X8, [X0]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X19+16], X0
	250 Move X0, [X23]
	251 Move X20, [X29]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X0, X20
	257 Move X1, X31
	258 Call Type.GetTypeFromHandle, X0
	259 Move X8, [X25]
	260 Move X20, X0
	261 Move W1, 3
	262 Move X0, X8
	263 Call 0x1C17D6C
	264 Move X8, [X24]
	265 Move X21, X0
	266 Move X1, X31
	267 Move X0, X8
	268 Call Type.GetTypeFromHandle, X0
	269 Compare X21, 0
	270 JumpIfEqual {854}
	271 Move X22, X0
	272 Compare X0, 0
	273 JumpIfEqual {280}
	274 Move X8, [X21]
	275 Move X0, X22
	276 Move X1, [X8+64]
	277 Call 0x1C17E00
	278 Compare X0, 0
	279 JumpIfEqual {851}
	280 Move W8, [X21+24]
	281 Compare W8, 0
	282 JumpIfEqual {850}
	283 Move [X21+32], X22
	284 Move X0, [X26]
	285 Move X1, X31
	286 Call Type.GetTypeFromHandle, X0
	287 Move X22, X0
	288 Compare X0, 0
	289 JumpIfEqual {296}
	290 Move X8, [X21]
	291 Move X0, X22
	292 Move X1, [X8+64]
	293 Call 0x1C17E00
	294 Compare X0, 0
	295 JumpIfEqual {851}
	296 Move W8, [X21+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move [X21+40], X22
	299 Move X0, [X27]
	300 Move X1, X31
	301 Call Type.GetTypeFromHandle, X0
	302 Move X22, X0
	303 Compare X0, 0
	304 JumpIfEqual {311}
	305 Move X8, [X21]
	306 Move X0, X22
	307 Move X1, [X8+64]
	308 Call 0x1C17E00
	309 Compare X0, 0
	310 JumpIfEqual {851}
	311 Move W8, [X21+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move [X21+48], X22
	314 Compare X20, 0
	315 JumpIfEqual {854}
	316 Move X8, 0x324000
	317 Move X8, [X8+1568]
	318 Move X0, X20
	319 Move X2, X21
	320 Move X3, X31
	321 Move X1, [X8]
	322 Call Type.GetMethod, X0, X1, X2
	323 Move X1, X31
	324 Move X2, X31
	325 Move X20, X0
	326 Call MethodInfo.op_Inequality, X0, X1
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {356}
	331 Move X8, 0x323000
	332 Move X0, [X23]
	333 Move X8, [X8+1520]
	334 Move W9, [X0+224]
	335 Move X21, [X8]
	336 Compare W9, 0
	337 JumpIfNotEqual {339}
	338 Call 0x1C17DFC
	339 Move X0, X21
	340 Move X1, X31
	341 Call Type.GetTypeFromHandle, X0
	342 Move X1, X20
	343 Move X2, X31
	344 Call Delegate.CreateDelegate, X0, X1
	345 Compare X0, 0
	346 JumpIfEqual {355}
	347 Move X8, 0x323000
	348 Move X8, [X8+1528]
	349 Move X1, [X8]
	350 Move X8, [X0]
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move [X19+24], X0
	353 Move X8, [X0]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move [X19+24], X0
	356 Move X0, [X23]
	357 Move X20, [X29]
	358 Move W8, [X0+224]
	359 Compare W8, 0
	360 JumpIfNotEqual {362}
	361 Call 0x1C17DFC
	362 Move X0, X20
	363 Move X1, X31
	364 Call Type.GetTypeFromHandle, X0
	365 Move X8, [X25]
	366 Move X20, X0
	367 Move W1, 4
	368 Move X0, X8
	369 Call 0x1C17D6C
	370 Move X8, [X24]
	371 Move X21, X0
	372 Move X1, X31
	373 Move X0, X8
	374 Call Type.GetTypeFromHandle, X0
	375 Compare X21, 0
	376 JumpIfEqual {854}
	377 Move X22, X0
	378 Compare X0, 0
	379 JumpIfEqual {386}
	380 Move X8, [X21]
	381 Move X0, X22
	382 Move X1, [X8+64]
	383 Call 0x1C17E00
	384 Compare X0, 0
	385 JumpIfEqual {851}
	386 Move W8, [X21+24]
	387 Compare W8, 0
	388 JumpIfEqual {850}
	389 Move X8, 0x323000
	390 Move X8, [X8+1544]
	391 Move [X21+32], X22
	392 Move X1, X31
	393 Move X0, [X8]
	394 Call Type.GetTypeFromHandle, X0
	395 Move X22, X0
	396 Compare X0, 0
	397 JumpIfEqual {404}
	398 Move X8, [X21]
	399 Move X0, X22
	400 Move X1, [X8+64]
	401 Call 0x1C17E00
	402 Compare X0, 0
	403 JumpIfEqual {851}
	404 Move W8, [X21+24]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move [X21+40], X22
	407 Move X0, [X26]
	408 Move X1, X31
	409 Call Type.GetTypeFromHandle, X0
	410 Move X22, X0
	411 Compare X0, 0
	412 JumpIfEqual {419}
	413 Move X8, [X21]
	414 Move X0, X22
	415 Move X1, [X8+64]
	416 Call 0x1C17E00
	417 Compare X0, 0
	418 JumpIfEqual {851}
	419 Move W8, [X21+24]
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Move [X21+48], X22
	422 Move X0, [X27]
	423 Move X1, X31
	424 Call Type.GetTypeFromHandle, X0
	425 Move X22, X0
	426 Compare X0, 0
	427 JumpIfEqual {434}
	428 Move X8, [X21]
	429 Move X0, X22
	430 Move X1, [X8+64]
	431 Call 0x1C17E00
	432 Compare X0, 0
	433 JumpIfEqual {851}
	434 Move W8, [X21+24]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Move [X21+56], X22
	437 Compare X20, 0
	438 JumpIfEqual {854}
	439 Move X8, 0x323000
	440 Move X8, [X8+1576]
	441 Move X0, X20
	442 Move X2, X21
	443 Move X3, X31
	444 Move X1, [X8]
	445 Call Type.GetMethod, X0, X1, X2
	446 Move X1, X31
	447 Move X2, X31
	448 Move X20, X0
	449 Call MethodInfo.op_Inequality, X0, X1
	450 Move TEMP, X0
	451 And TEMP, TEMP, 1
	452 Compare TEMP, 1
	453 JumpIfNotEqual {479}
	454 Move X8, 0x323000
	455 Move X0, [X23]
	456 Move X8, [X8+1456]
	457 Move W9, [X0+224]
	458 Move X21, [X8]
	459 Compare W9, 0
	460 JumpIfNotEqual {462}
	461 Call 0x1C17DFC
	462 Move X0, X21
	463 Move X1, X31
	464 Call Type.GetTypeFromHandle, X0
	465 Move X1, X20
	466 Move X2, X31
	467 Call Delegate.CreateDelegate, X0, X1
	468 Compare X0, 0
	469 JumpIfEqual {478}
	470 Move X8, 0x323000
	471 Move X8, [X8+1464]
	472 Move X1, [X8]
	473 Move X8, [X0]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move [X19+32], X0
	476 Move X8, [X0]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move [X19+32], X0
	479 Move X9, 0x323000
	480 Move X0, [X23]
	481 Move X9, [X9+1472]
	482 Move X8, X23
	483 Move X24, X28
	484 Move X28, 0x2B3000
	485 Move W8, [X0+224]
	486 Move X20, [X9]
	487 Move X28, [X28+3744]
	488 Move X29, X9
	489 Compare W8, 0
	490 JumpIfNotEqual {492}
	491 Call 0x1C17DFC
	492 Move X0, X20
	493 Move X1, X31
	494 Call Type.GetTypeFromHandle, X0
	495 Move X8, [X25]
	496 Move X20, X0
	497 Move W1, 4
	498 Move X0, X8
	499 Call 0x1C17D6C
	500 Move X8, [X28]
	501 Move X21, X0
	502 Move X1, X31
	503 Move X0, X8
	504 Call Type.GetTypeFromHandle, X0
	505 Compare X21, 0
	506 JumpIfEqual {854}
	507 Move X22, X0
	508 Compare X0, 0
	509 JumpIfEqual {516}
	510 Move X8, [X21]
	511 Move X0, X22
	512 Move X1, [X8+64]
	513 Call 0x1C17E00
	514 Compare X0, 0
	515 JumpIfEqual {851}
	516 Move W8, [X21+24]
	517 Compare W8, 0
	518 JumpIfEqual {850}
	519 Move [X21+32], X22
	520 Move X0, [X28]
	521 Move X1, X31
	522 Call Type.GetTypeFromHandle, X0
	523 Move X22, X0
	524 Compare X0, 0
	525 JumpIfEqual {532}
	526 Move X8, [X21]
	527 Move X0, X22
	528 Move X1, [X8+64]
	529 Call 0x1C17E00
	530 Compare X0, 0
	531 JumpIfEqual {851}
	532 Move W8, [X21+24]
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Move [X21+40], X22
	535 Move X0, [X26]
	536 Move X1, X31
	537 Call Type.GetTypeFromHandle, X0
	538 Move X22, X0
	539 Compare X0, 0
	540 JumpIfEqual {547}
	541 Move X8, [X21]
	542 Move X0, X22
	543 Move X1, [X8+64]
	544 Call 0x1C17E00
	545 Compare X0, 0
	546 JumpIfEqual {851}
	547 Move W8, [X21+24]
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Move [X21+48], X22
	550 Move X0, [X27]
	551 Move X1, X31
	552 Call Type.GetTypeFromHandle, X0
	553 Move X22, X0
	554 Compare X0, 0
	555 JumpIfEqual {562}
	556 Move X8, [X21]
	557 Move X0, X22
	558 Move X1, [X8+64]
	559 Call 0x1C17E00
	560 Compare X0, 0
	561 JumpIfEqual {851}
	562 Move W8, [X21+24]
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Move [X21+56], X22
	565 Compare X20, 0
	566 JumpIfEqual {854}
	567 Move X1, [X24]
	568 Move X0, X20
	569 Move X2, X21
	570 Move X3, X31
	571 Call Type.GetMethod, X0, X1, X2
	572 Move X1, X31
	573 Move X2, X31
	574 Move X20, X0
	575 Call MethodInfo.op_Inequality, X0, X1
	576 Move X24, 0x323000
	577 Move X24, [X24+1480]
	578 Move TEMP, X0
	579 And TEMP, TEMP, 1
	580 Compare TEMP, 1
	581 JumpIfNotEqual {607}
	582 Move X8, 0x323000
	583 Move X0, [X23]
	584 Move X8, [X8+1488]
	585 Move W9, [X0+224]
	586 Move X21, [X8]
	587 Compare W9, 0
	588 JumpIfNotEqual {590}
	589 Call 0x1C17DFC
	590 Move X0, X21
	591 Move X1, X31
	592 Call Type.GetTypeFromHandle, X0
	593 Move X1, X20
	594 Move X2, X31
	595 Call Delegate.CreateDelegate, X0, X1
	596 Compare X0, 0
	597 JumpIfEqual {606}
	598 Move X8, 0x323000
	599 Move X8, [X8+1496]
	600 Move X1, [X8]
	601 Move X8, [X0]
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Move [X19+40], X0
	604 Move X8, [X0]
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Move [X19+40], X0
	607 Move X0, [X23]
	608 Move X20, [X29]
	609 Move W8, [X0+224]
	610 Compare W8, 0
	611 JumpIfNotEqual {613}
	612 Call 0x1C17DFC
	613 Move X0, X20
	614 Move X1, X31
	615 Call Type.GetTypeFromHandle, X0
	616 Move X8, [X25]
	617 Move X20, X0
	618 Move W1, 3
	619 Move X0, X8
	620 Call 0x1C17D6C
	621 Move X8, [X24]
	622 Move X21, X0
	623 Move X1, X31
	624 Move X0, X8
	625 Call Type.GetTypeFromHandle, X0
	626 Compare X21, 0
	627 JumpIfEqual {854}
	628 Move X22, X0
	629 Compare X0, 0
	630 JumpIfEqual {637}
	631 Move X8, [X21]
	632 Move X0, X22
	633 Move X1, [X8+64]
	634 Call 0x1C17E00
	635 Compare X0, 0
	636 JumpIfEqual {851}
	637 Move W8, [X21+24]
	638 Compare W8, 0
	639 JumpIfEqual {850}
	640 Move [X21+32], X22
	641 Move X0, [X26]
	642 Move X1, X31
	643 Call Type.GetTypeFromHandle, X0
	644 Move X22, X0
	645 Compare X0, 0
	646 JumpIfEqual {653}
	647 Move X8, [X21]
	648 Move X0, X22
	649 Move X1, [X8+64]
	650 Call 0x1C17E00
	651 Compare X0, 0
	652 JumpIfEqual {851}
	653 Move W8, [X21+24]
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Move [X21+40], X22
	656 Move X0, [X27]
	657 Move X1, X31
	658 Call Type.GetTypeFromHandle, X0
	659 Move X22, X0
	660 Compare X0, 0
	661 JumpIfEqual {668}
	662 Move X8, [X21]
	663 Move X0, X22
	664 Move X1, [X8+64]
	665 Call 0x1C17E00
	666 Compare X0, 0
	667 JumpIfEqual {851}
	668 Move W8, [X21+24]
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Move [X21+48], X22
	671 Compare X20, 0
	672 JumpIfEqual {854}
	673 Move X8, 0x323000
	674 Move X8, [X8+1560]
	675 Move X0, X20
	676 Move X2, X21
	677 Move X3, X31
	678 Move X1, [X8]
	679 Call Type.GetMethod, X0, X1, X2
	680 Move X1, X31
	681 Move X2, X31
	682 Move X20, X0
	683 Call MethodInfo.op_Inequality, X0, X1
	684 Move TEMP, X0
	685 And TEMP, TEMP, 1
	686 Compare TEMP, 1
	687 JumpIfNotEqual {713}
	688 Move X8, 0x323000
	689 Move X0, [X23]
	690 Move X8, [X8+1424]
	691 Move W9, [X0+224]
	692 Move X21, [X8]
	693 Compare W9, 0
	694 JumpIfNotEqual {696}
	695 Call 0x1C17DFC
	696 Move X0, X21
	697 Move X1, X31
	698 Call Type.GetTypeFromHandle, X0
	699 Move X1, X20
	700 Move X2, X31
	701 Call Delegate.CreateDelegate, X0, X1
	702 Compare X0, 0
	703 JumpIfEqual {712}
	704 Move X8, 0x323000
	705 Move X8, [X8+1432]
	706 Move X1, [X8]
	707 Move X8, [X0]
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Move [X19+48], X0
	710 Move X8, [X0]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Move [X19+48], X0
	713 Move X0, [X23]
	714 Move X20, [X29]
	715 Move W8, [X0+224]
	716 Compare W8, 0
	717 JumpIfNotEqual {719}
	718 Call 0x1C17DFC
	719 Move X0, X20
	720 Move X1, X31
	721 Call Type.GetTypeFromHandle, X0
	722 Move X8, [X25]
	723 Move X20, X0
	724 Move W1, 4
	725 Move X0, X8
	726 Call 0x1C17D6C
	727 Move X8, [X24]
	728 Move X21, X0
	729 Move X1, X31
	730 Move X0, X8
	731 Call Type.GetTypeFromHandle, X0
	732 Compare X21, 0
	733 JumpIfEqual {854}
	734 Move X22, X0
	735 Compare X0, 0
	736 JumpIfEqual {743}
	737 Move X8, [X21]
	738 Move X0, X22
	739 Move X1, [X8+64]
	740 Call 0x1C17E00
	741 Compare X0, 0
	742 JumpIfEqual {851}
	743 Move W8, [X21+24]
	744 Compare W8, 0
	745 JumpIfEqual {850}
	746 Move X8, 0x323000
	747 Move X8, [X8+1536]
	748 Move [X21+32], X22
	749 Move X1, X31
	750 Move X0, [X8]
	751 Call Type.GetTypeFromHandle, X0
	752 Move X22, X0
	753 Compare X0, 0
	754 JumpIfEqual {761}
	755 Move X8, [X21]
	756 Move X0, X22
	757 Move X1, [X8+64]
	758 Call 0x1C17E00
	759 Compare X0, 0
	760 JumpIfEqual {851}
	761 Move W8, [X21+24]
	762 NotImplemented "Instruction CMP not yet implemented."
	763 Move [X21+40], X22
	764 Move X0, [X26]
	765 Move X1, X31
	766 Call Type.GetTypeFromHandle, X0
	767 Move X22, X0
	768 Compare X0, 0
	769 JumpIfEqual {776}
	770 Move X8, [X21]
	771 Move X0, X22
	772 Move X1, [X8+64]
	773 Call 0x1C17E00
	774 Compare X0, 0
	775 JumpIfEqual {851}
	776 Move W8, [X21+24]
	777 NotImplemented "Instruction CMP not yet implemented."
	778 Move [X21+48], X22
	779 Move X0, [X27]
	780 Move X1, X31
	781 Call Type.GetTypeFromHandle, X0
	782 Move X22, X0
	783 Compare X0, 0
	784 JumpIfEqual {791}
	785 Move X8, [X21]
	786 Move X0, X22
	787 Move X1, [X8+64]
	788 Call 0x1C17E00
	789 Compare X0, 0
	790 JumpIfEqual {851}
	791 Move W8, [X21+24]
	792 NotImplemented "Instruction CMP not yet implemented."
	793 Move [X21+56], X22
	794 Compare X20, 0
	795 JumpIfEqual {854}
	796 Move X8, 0x323000
	797 Move X8, [X8+1584]
	798 Move X0, X20
	799 Move X2, X21
	800 Move X3, X31
	801 Move X1, [X8]
	802 Call Type.GetMethod, X0, X1, X2
	803 Move X1, X31
	804 Move X2, X31
	805 Move X20, X0
	806 Call MethodInfo.op_Inequality, X0, X1
	807 Move TEMP, X0
	808 And TEMP, TEMP, 1
	809 Compare TEMP, 1
	810 JumpIfNotEqual {837}
	811 Move X8, 0x323000
	812 Move X0, [X23]
	813 Move X8, [X8+1440]
	814 Move W9, [X0+224]
	815 Move X21, [X8]
	816 Compare W9, 0
	817 JumpIfNotEqual {819}
	818 Call 0x1C17DFC
	819 Move X0, X21
	820 Move X1, X31
	821 Call Type.GetTypeFromHandle, X0
	822 Move X1, X20
	823 Move X2, X31
	824 Call Delegate.CreateDelegate, X0, X1
	825 Compare X0, 0
	826 JumpIfEqual {836}
	827 Move X8, 0x323000
	828 Move X8, [X8+1448]
	829 Move X1, [X8]
	830 Move X8, [X0]
	831 NotImplemented "Instruction CMP not yet implemented."
	832 Move [X19+56], X0
	833 Move X8, [X0]
	834 NotImplemented "Instruction CMP not yet implemented."
	835 Call 0x1C181E0
	836 Move [X19+56], X0
	837 Move X20, [X31+80]
	838 Move X19, [X31+88]
	839 Move X22, [X31+64]
	840 Move X21, [X31+72]
	841 Move X24, [X31+48]
	842 Move X23, [X31+56]
	843 Move X26, [X31+32]
	844 Move X25, [X31+40]
	845 Move X28, [X31+16]
	846 Move X27, [X31+24]
	847 Move X29, [X31+96]
	848 Move X30, [X31+104]
	849 Return 
	850 Call 0x1C17F28
	851 Call 0x1C17F44
	852 Move X1, X31
	853 Call 0x1C17DEC
	854 Call 0x1C17F20

Method: UnityEngine.UI.ReflectionMethodsCache get_Singleton()

Disassembly:
	0x03E49798 LDR X0, [X0 + 0x8E0]
	0x03E4979C BL 0x1C16CF4
	0x03E497A0 MOVZ W8, 0x1
	0x03E497A4 STRB W8, [X20 + 0x81B]
	0x03E497A8 LDRB W8, [X19 + 0x58]
	0x03E497AC CBZ W8, 0x3E498C0
	0x03E497B0 ADRP X8, 0x322000
	0x03E497B4 LDR X8, [X8 + 0x670]
	0x03E497B8 MOV X21, X19
	0x03E497BC LDR X20, [X21 + 0x10]!
	0x03E497C0 ADRP X22, 0x322000
	0x03E497C4 LDR X0, [X8]
	0x03E497C8 ADRP X24, 0x322000
	0x03E497CC LDR W8, [X0 + 0xE0]
	0x03E497D0 LDR X22, [X22 + 0x690]
	0x03E497D4 LDR X24, [X24 + 0x680]
	0x03E497D8 CBNZ W8, 0x3E497E0
	0x03E497DC BL 0x1C16DFC
	0x03E497E0 LDR X1, [X22]
	0x03E497E4 ADRP X23, 0x322000
	0x03E497E8 ADRP X25, 0x322000
	0x03E497EC LDR X23, [X23 + 0x688]
	0x03E497F0 LDR X25, [X25 + 0x678]
	0x03E497F4 MOV X0, X20
	0x03E497F8 BL 0x28FA32C
	0x03E497FC LDR X0, [X24]
	0x03E49800 LDR X20, [X19 + 0x18]
	0x03E49804 LDR W8, [X0 + 0xE0]
	0x03E49808 CBNZ W8, 0x3E49810

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5A0000
	005 Move X20, 0x323000
	006 Move W8, [X19+2064]
	007 Move X20, [X20+1600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x323000
	013 Move X0, [X0+1600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2064], W8
	017 Move X0, [X20]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Call ReflectionMethodsCache..ctor, X0
	025 Move X8, [X20]
	026 Move X8, [X8+184]
	027 Move [X8], X19
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 Return X0

