Type: UnityEngine.UI.StencilMaterial

Method: UnityEngine.Material Add(UnityEngine.Material baseMat, System.Int32 stencilID)

Disassembly:
	0x03E44F9C BL 0x3C354F8
	0x03E44FA0 TBZ X0, 0x0, 0x3E45058

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material Add(UnityEngine.Material baseMat, System.Int32 stencilID, UnityEngine.Rendering.StencilOp operation, UnityEngine.Rendering.CompareFunction compareFunction, UnityEngine.Rendering.ColorWriteMask colorWriteMask)

Disassembly:
	0x03E44FA4 LDR X8, [X19 + 0xD8]
	0x03E44FA8 CBZ X8, 0x3E45054
	0x03E44FAC LDR X0, [X8 + 0x10]
	0x03E44FB0 CBZ X0, 0x3E45054
	0x03E44FB4 MOV X1, X31
	0x03E44FB8 BL 0x3CCFD38
	0x03E44FBC LDR X8, [X21]
	0x03E44FC0 MOV X20, X0
	0x03E44FC4 LDR W9, [X8 + 0xE0]
	0x03E44FC8 CBNZ W9, 0x3E44FD4
	0x03E44FCC MOV X0, X8
	0x03E44FD0 BL 0x1C16DFC
	0x03E44FD4 MOV X0, X20
	0x03E44FD8 MOV X1, X31
	0x03E44FDC MOV X2, X31
	0x03E44FE0 BL 0x3C354F8
	0x03E44FE4 TBZ X0, 0x0, 0x3E45058
	0x03E44FE8 LDR X8, [X19 + 0xD8]
	0x03E44FEC CBZ X8, 0x3E45054
	0x03E44FF0 LDR X0, [X8 + 0x10]
	0x03E44FF4 CBZ X0, 0x3E45054
	0x03E44FF8 MOV X1, X31
	0x03E44FFC BL 0x3CCFD38
	0x03E45000 CBZ X0, 0x3E45054
	0x03E45004 MOV X1, X31
	0x03E45008 BL 0x3C14A08
	0x03E4500C LDR X8, [X21]
	0x03E45010 MOV X20, X0
	0x03E45014 LDR W9, [X8 + 0xE0]
	0x03E45018 CBNZ W9, 0x3E45024
	0x03E4501C MOV X0, X8
	0x03E45020 BL 0x1C16DFC
	0x03E45024 MOV X0, X20
	0x03E45028 MOV X1, X31
	0x03E4502C MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x5A5000
	010 Move X25, 0x315000
	011 Move W8, [X24+2024]
	012 Move X25, [X25+1848]
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x315000
	023 Move X0, [X0+1848]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2024], W8
	027 Move X0, [X25]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X23
	033 Move W1, W22
	034 Move W2, W21
	035 Move W3, W20
	036 Move W4, W19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move W5, 255
	044 Move W6, 255
	045 Move X30, [X31+64]
	046 Move X25, [X31+72]

Method: System.Void LogWarningWhenNotInBatchmode(System.String warning, UnityEngine.Object context)

Disassembly:
	0x03E45998 MOV X1, X31
	0x03E4599C LDR V8, [X31], #0x30
	0x03E459A0 B 0x3E24614
	0x03E459A4 LDR X8, [X19 + 0xD8]
	0x03E459A8 CBZ X8, 0x3E45A14
	0x03E459AC LDR W9, [X8 + 0x18]
	0x03E459B0 CMP W9, 0x1
	0x03E459B4 B.LT 0x3E45A00
	0x03E459B8 LDR X0, [X8 + 0x10]
	0x03E459BC CBZ X0, 0x3E45A14
	0x03E459C0 MOV X1, X31
	0x03E459C4 BL 0x3CCFD74
	0x03E459C8 CMP W0, 0x1
	0x03E459CC B.LT 0x3E45A00
	0x03E459D0 LDR X8, [X19 + 0xD8]
	0x03E459D4 CBZ X8, 0x3E45A14
	0x03E459D8 LDR X0, [X8 + 0x10]
	0x03E459DC CBZ X0, 0x3E45A14
	0x03E459E0 MOV X1, X31
	0x03E459E4 BL 0x3CCFD74
	0x03E459E8 LDR X8, [X19 + 0xD8]
	0x03E459EC CBZ X8, 0x3E45A14
	0x03E459F0 LDR V0, [X8 + 0x18]
	0x03E459F4 SCVTF S1, W0
	0x03E459F8 SCVTF S0, S0
	0x03E459FC FDIV S8, S1, S0
	0x03E45A00 LDP X20, X19, [X31 + 0x20]
	0x03E45A04 LDP X30, X21, [X31 + 0x10]
	0x03E45A08 MOV V0.16B, V8.16B
	0x03E45A0C LDR V8, [X31], #0x30
	0x03E45A10 RET
	0x03E45A14 BL 0x1C16F20
	0x03E45A18 STR X30, [X31 - 0x20]!
	0x03E45A1C STP X20, X19, [X31 + 0x10]
	0x03E45A20 ADRP X20, 0x5A3000
	0x03E45A24 LDRB W8, [X20 + 0x7F6]
	0x03E45A28 MOV X19, X0
	0x03E45A2C TBNZ X8, 0x0, 0x3E45A44
	0x03E45A30 ADRP X0, 0x31D000
	0x03E45A34 LDR X0, [X0 + 0x398]
	0x03E45A38 BL 0x1C16CF4
	0x03E45A3C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5A4000
	007 Move X22, 0x2AF000
	008 Move W8, [X21+2025]
	009 Move X22, [X22+2416]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2AF000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x2AF000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2025], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isBatchMode
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {41}
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Move X8, 0x2AF000
	042 Move X8, [X8+2600]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+48]
	056 Call Debug.LogWarning, X0, X1
	057 Return 

Method: UnityEngine.Material Add(UnityEngine.Material baseMat, System.Int32 stencilID, UnityEngine.Rendering.StencilOp operation, UnityEngine.Rendering.CompareFunction compareFunction, UnityEngine.Rendering.ColorWriteMask colorWriteMask, System.Int32 readMask, System.Int32 writeMask)

Disassembly:
	0x03E45030 BL 0x3C354F8
	0x03E45034 TBZ X0, 0x0, 0x3E45058
	0x03E45038 LDR X8, [X19 + 0xD8]
	0x03E4503C CBZ X8, 0x3E45054
	0x03E45040 LDR X0, [X8 + 0x10]
	0x03E45044 CBZ X0, 0x3E45054
	0x03E45048 MOV X1, X31
	0x03E4504C BL 0x3CCFD38
	0x03E45050 CBNZ X0, 0x3E45088
	0x03E45054 BL 0x1C16F20
	0x03E45058 LDR X0, [X21]
	0x03E4505C LDR X20, [X19 + 0x20]
	0x03E45060 LDR W8, [X0 + 0xE0]
	0x03E45064 CBNZ W8, 0x3E4506C
	0x03E45068 BL 0x1C16DFC
	0x03E4506C MOV X0, X20
	0x03E45070 MOV X1, X31
	0x03E45074 MOV X2, X31
	0x03E45078 BL 0x3C354F8
	0x03E4507C TBZ X0, 0x0, 0x3E45098
	0x03E45080 LDR X0, [X19 + 0x20]
	0x03E45084 CBZ X0, 0x3E45054
	0x03E45088 LDP X20, X19, [X31 + 0x10]
	0x03E4508C MOV X1, X31
	0x03E45090 LDP X30, X21, [X31], #0x20
	0x03E45094 B 0x3C14A08
	0x03E45098 ADRP X19, 0x5A3000
	0x03E4509C LDRB W8, [X19 + 0x82D]
	0x03E450A0 CBNZ W8, 0x3E450B8
	0x03E450A4 ADRP X0, 0x314000
	0x03E450A8 LDR X0, [X0 + 0x118]
	0x03E450AC BL 0x1C16CF4
	0x03E450B0 MOVZ W8, 0x1
	0x03E450B4 STRB W8, [X19 + 0x82D]
	0x03E450B8 ADRP X19, 0x314000
	0x03E450BC LDR X19, [X19 + 0x118]
	0x03E450C0 LDR X0, [X19]
	0x03E450C4 LDR W8, [X0 + 0xE0]
	0x03E450C8 CBNZ W8, 0x3E450D4
	0x03E450CC BL 0x1C16DFC
	0x03E450D0 LDR X0, [X19]
	0x03E450D4 LDR X8, [X0 + 0xB8]
	0x03E450D8 LDP X20, X19, [X31 + 0x10]
	0x03E450DC LDR X0, [X8 + 0x8]
	0x03E450E0 LDP X30, X21, [X31], #0x20
	0x03E450E4 RET
	0x03E450E8 STR X30, [X31 - 0x10]!
	0x03E450EC LDR X8, [X0 + 0xD8]
	0x03E450F0 CBZ X8, 0x3E45100
	0x03E450F4 LDR X0, [X8 + 0x10]
	0x03E450F8 LDR X30, [X31], #0x10
	0x03E450FC RET
	0x03E45100 BL 0x1C16F20
	0x03E45104 STP X30, X21, [X31 - 0x20]!
	0x03E45108 STP X20, X19, [X31 + 0x10]
	0x03E4510C ADRP X20, 0x5A3000
	0x03E45110 ADRP X21, 0x2AE000
	0x03E45114 LDRB W8, [X20 + 0x7F2]
	0x03E45118 LDR X21, [X21 + 0x598]
	0x03E4511C MOV X19, X0
	0x03E45120 TBNZ X8, 0x0, 0x3E45144
	0x03E45124 ADRP X0, 0x313000
	0x03E45128 LDR X0, [X0 + 0x718]
	0x03E4512C BL 0x1C16CF4
	0x03E45130 ADRP X0, 0x2AE000
	0x03E45134 LDR X0, [X0 + 0x598]
	0x03E45138 BL 0x1C16CF4
	0x03E4513C MOVZ W8, 0x1
	0x03E45140 STRB W8, [X20 + 0x7F2]
	0x03E45144 LDR X0, [X21]
	0x03E45148 LDR W8, [X0 + 0xE0]
	0x03E4514C CBNZ W8, 0x3E45154
	0x03E45150 BL 0x1C16DFC
	0x03E45154 MOV X0, X19
	0x03E45158 MOV X1, X31
	0x03E4515C BL 0x3C38948
	0x03E45160 TBZ X0, 0x0, 0x3E451E4
	0x03E45164 LDRB W8, [X19 + 0xF8]
	0x03E45168 CBNZ W8, 0x3E451E4
	0x03E4516C MOV X0, X19
	0x03E45170 BL 0x3E44E54
	0x03E45174 CBZ X0, 0x3E4520C
	0x03E45178 MOV X1, X31
	0x03E4517C BL 0x3CCEE20
	0x03E45180 LDR X8, [X19]
	0x03E45184 MOV X0, X19
	0x03E45188 LDP X9, X1, [X8 + 0x1C8]
	0x03E4518C BLR X9
	0x03E45190 TBZ X0, 0x0, 0x3E451E4
	0x03E45194 ADRP X20, 0x313000
	0x03E45198 LDR X20, [X20 + 0x718]
	0x03E4519C LDR X0, [X20]
	0x03E451A0 LDR W8, [X0 + 0xE0]
	0x03E451A4 CBNZ W8, 0x3E451AC
	0x03E451A8 BL 0x1C16DFC
	0x03E451AC MOV X0, X31
	0x03E451B0 BL 0x3CD1F50
	0x03E451B4 TBNZ X0, 0x0, 0x3E451D4
	0x03E451B8 LDR X0, [X20]
	0x03E451BC LDR W8, [X0 + 0xE0]
	0x03E451C0 CBNZ W8, 0x3E451C8
	0x03E451C4 BL 0x1C16DFC
	0x03E451C8 MOV X0, X31
	0x03E451CC BL 0x3CD1EF4
	0x03E451D0 TBZ X0, 0x0, 0x3E451F0
	0x03E451D4 LDR X8, [X19]
	0x03E451D8 LDR X2, [X8 + 0x3C8]
	0x03E451DC LDR X1, [X8 + 0x3D0]
	0x03E451E0 B 0x3E451FC
	0x03E451E4 LDP X20, X19, [X31 + 0x10]
	0x03E451E8 LDP X30, X21, [X31], #0x20
	0x03E451EC RET
	0x03E451F0 LDR X8, [X19]
	0x03E451F4 LDR X2, [X8 + 0x2D8]
	0x03E451F8 LDR X1, [X8 + 0x2E0]
	0x03E451FC MOV X0, X19
	0x03E45200 LDP X20, X19, [X31 + 0x10]
	0x03E45204 LDP X30, X21, [X31], #0x20
	0x03E45208 BR X2
	0x03E4520C BL 0x1C16F20
	0x03E45210 STP X30, X21, [X31 - 0x20]!
	0x03E45214 STP X20, X19, [X31 + 0x10]
	0x03E45218 ADRP X21, 0x5A3000
	0x03E4521C LDRB W8, [X21 + 0x7F3]
	0x03E45220 MOV X20, X1
	0x03E45224 MOV X19, X0
	0x03E45228 TBNZ X8, 0x0, 0x3E4524C
	0x03E4522C ADRP X0, 0x31D000
	0x03E45230 LDR X0, [X0 + 0x398]
	0x03E45234 BL 0x1C16CF4
	0x03E45238 ADRP X0, 0x2AE000
	0x03E4523C LDR X0, [X0 + 0x598]
	0x03E45240 BL 0x1C16CF4
	0x03E45244 MOVZ W8, 0x1
	0x03E45248 STRB W8, [X21 + 0x7F3]
	0x03E4524C LDR X8, [X19 + 0xD8]
	0x03E45250 CBZ X8, 0x3E45320
	0x03E45254 ADRP X9, 0x2AE000
	0x03E45258 LDR X9, [X9 + 0x598]
	0x03E4525C LDR X21, [X8 + 0x10]
	0x03E45260 LDR X0, [X9]
	0x03E45264 LDR W9, [X0 + 0xE0]
	0x03E45268 CBNZ W9, 0x3E45270
	0x03E4526C BL 0x1C16DFC
	0x03E45270 MOV X0, X21
	0x03E45274 MOV X1, X20
	0x03E45278 MOV X2, X31
	0x03E4527C BL 0x3C3883C
	0x03E45280 TBZ X0, 0x0, 0x3E45290
	0x03E45284 LDP X20, X19, [X31 + 0x10]
	0x03E45288 LDP X30, X21, [X31], #0x20
	0x03E4528C RET
	0x03E45290 MOV X0, X19
	0x03E45294 MOV X1, X31
	0x03E45298 BL 0x3C32454
	0x03E4529C TBZ X0, 0x0, 0x3E452C4
	0x03E452A0 ADRP X8, 0x31D000
	0x03E452A4 LDR X8, [X8 + 0x398]
	0x03E452A8 LDR X0, [X8]
	0x03E452AC LDR W8, [X0 + 0xE0]
	0x03E452B0 CBNZ W8, 0x3E452B8
	0x03E452B4 BL 0x1C16DFC
	0x03E452B8 MOV X0, X19
	0x03E452BC MOV X1, X31
	0x03E452C0 BL 0x3CDA950
	0x03E452C4 LDR X8, [X19 + 0xD8]
	0x03E452C8 CBZ X8, 0x3E45320
	0x03E452CC MOV X0, X19
	0x03E452D0 MOV X1, X31
	0x03E452D4 STR X20, [X8 + 0x10]
	0x03E452D8 BL 0x3C32454
	0x03E452DC TBZ X0, 0x0, 0x3E45304
	0x03E452E0 ADRP X8, 0x31D000
	0x03E452E4 LDR X8, [X8 + 0x398]
	0x03E452E8 LDR X0, [X8]
	0x03E452EC LDR W8, [X0 + 0xE0]
	0x03E452F0 CBNZ W8, 0x3E452F8
	0x03E452F4 BL 0x1C16DFC
	0x03E452F8 MOV X0, X19
	0x03E452FC MOV X1, X31
	0x03E45300 BL 0x3CDA564
	0x03E45304 LDR X8, [X19]
	0x03E45308 MOV X0, X19
	0x03E4530C LDP X20, X19, [X31 + 0x10]
	0x03E45310 LDR X2, [X8 + 0x2D8]
	0x03E45314 LDR X1, [X8 + 0x2E0]
	0x03E45318 LDP X30, X21, [X31], #0x20
	0x03E4531C BR X2
	0x03E45320 BL 0x1C16F20
	0x03E45324 LDR X0, [X0 + 0xE0]
	0x03E45328 RET
	0x03E4532C STP X30, X21, [X31 - 0x20]!
	0x03E45330 STP X20, X19, [X31 + 0x10]
	0x03E45334 ADRP X21, 0x5A3000
	0x03E45338 LDRB W8, [X21 + 0x7F4]
	0x03E4533C MOV X20, X1
	0x03E45340 MOV X19, X0
	0x03E45344 TBNZ X8, 0x0, 0x3E4535C
	0x03E45348 ADRP X0, 0x2AE000
	0x03E4534C LDR X0, [X0 + 0x988]
	0x03E45350 BL 0x1C16CF4
	0x03E45354 MOVZ W8, 0x1
	0x03E45358 STRB W8, [X21 + 0x7F4]
	0x03E4535C MOV X0, X20
	0x03E45360 MOV X1, X31
	0x03E45364 BL 0x32277A8
	0x03E45368 LDR X8, [X19 + 0xE0]
	0x03E4536C TBZ X0, 0x0, 0x3E453A0
	0x03E45370 MOV X0, X8
	0x03E45374 MOV X1, X31
	0x03E45378 BL 0x32277A8
	0x03E4537C TBNZ X0, 0x0, 0x3E453E8
	0x03E45380 ADRP X8, 0x2AE000
	0x03E45384 LDR X8, [X8 + 0x988]
	0x03E45388 LDR X9, [X19]
	0x03E4538C LDR X8, [X8]
	0x03E45390 STR X8, [X19 + 0xE0]
	0x03E45394 LDR X2, [X9 + 0x2F8]
	0x03E45398 LDR X1, [X9 + 0x300]
	0x03E4539C B 0x3E453D8
	0x03E453A0 MOV X0, X8
	0x03E453A4 MOV X1, X20
	0x03E453A8 MOV X2, X31
	0x03E453AC BL 0x3226EF8
	0x03E453B0 TBZ X0, 0x0, 0x3E453E8
	0x03E453B4 LDR X8, [X19]
	0x03E453B8 STR X20, [X19 + 0xE0]
	0x03E453BC MOV X0, X19
	0x03E453C0 LDR X9, [X8 + 0x2F8]
	0x03E453C4 LDR X1, [X8 + 0x300]
	0x03E453C8 BLR X9
	0x03E453CC LDR X8, [X19]
	0x03E453D0 LDR X2, [X8 + 0x2E8]
	0x03E453D4 LDR X1, [X8 + 0x2F0]
	0x03E453D8 MOV X0, X19
	0x03E453DC LDP X20, X19, [X31 + 0x10]
	0x03E453E0 LDP X30, X21, [X31], #0x20
	0x03E453E4 BR X2
	0x03E453E8 LDP X20, X19, [X31 + 0x10]
	0x03E453EC LDP X30, X21, [X31], #0x20
	0x03E453F0 RET
	0x03E453F4 STR X30, [X31 - 0x10]!
	0x03E453F8 LDR X8, [X0 + 0xD8]
	0x03E453FC CBZ X8, 0x3E4540C
	0x03E45400 LDRB W0, [X8 + 0x31]
	0x03E45404 LDR X30, [X31], #0x10
	0x03E45408 RET
	0x03E4540C BL 0x1C16F20
	0x03E45410 STP X30, X19, [X31 - 0x10]!
	0x03E45414 LDR X8, [X0 + 0xD8]
	0x03E45418 CBZ X8, 0x3E4546C
	0x03E4541C LDRB W9, [X8 + 0x31]
	0x03E45420 CMP W9, 0x0
	0x03E45424 CSET W10, NE
	0x03E45428 AND W9, W1, 0x1
	0x03E4542C CMP W10, W9
	0x03E45430 B.EQ 0x3E45464
	0x03E45434 STRB W9, [X8 + 0x31]
	0x03E45438 LDR X8, [X0]
	0x03E4543C MOV X19, X0
	0x03E45440 LDR X9, [X8 + 0x2F8]
	0x03E45444 LDR X1, [X8 + 0x300]
	0x03E45448 BLR X9
	0x03E4544C LDR X8, [X19]
	0x03E45450 MOV X0, X19
	0x03E45454 LDR X2, [X8 + 0x2E8]
	0x03E45458 LDR X1, [X8 + 0x2F0]
	0x03E4545C LDP X30, X19, [X31], #0x10
	0x03E45460 BR X2
	0x03E45464 LDP X30, X19, [X31], #0x10
	0x03E45468 RET
	0x03E4546C BL 0x1C16F20
	0x03E45470 STR X30, [X31 - 0x10]!
	0x03E45474 LDR X8, [X0 + 0xD8]
	0x03E45478 CBZ X8, 0x3E45488
	0x03E4547C LDRB W0, [X8 + 0x20]
	0x03E45480 LDR X30, [X31], #0x10
	0x03E45484 RET
	0x03E45488 BL 0x1C16F20
	0x03E4548C STP X30, X19, [X31 - 0x10]!
	0x03E45490 LDR X8, [X0 + 0xD8]
	0x03E45494 CBZ X8, 0x3E454E8
	0x03E45498 LDRB W9, [X8 + 0x20]
	0x03E4549C CMP W9, 0x0
	0x03E454A0 CSET W10, NE
	0x03E454A4 AND W9, W1, 0x1
	0x03E454A8 CMP W10, W9
	0x03E454AC B.EQ 0x3E454E0
	0x03E454B0 STRB W9, [X8 + 0x20]
	0x03E454B4 LDR X8, [X0]
	0x03E454B8 MOV X19, X0
	0x03E454BC LDR X9, [X8 + 0x2F8]
	0x03E454C0 LDR X1, [X8 + 0x300]
	0x03E454C4 BLR X9
	0x03E454C8 LDR X8, [X19]
	0x03E454CC MOV X0, X19
	0x03E454D0 LDR X2, [X8 + 0x2E8]
	0x03E454D4 LDR X1, [X8 + 0x2F0]
	0x03E454D8 LDP X30, X19, [X31], #0x10
	0x03E454DC BR X2
	0x03E454E0 LDP X30, X19, [X31], #0x10
	0x03E454E4 RET
	0x03E454E8 BL 0x1C16F20
	0x03E454EC STR X30, [X31 - 0x10]!
	0x03E454F0 LDR X8, [X0 + 0xD8]
	0x03E454F4 CBZ X8, 0x3E45504
	0x03E454F8 LDR W0, [X8 + 0x24]
	0x03E454FC LDR X30, [X31], #0x10
	0x03E45500 RET
	0x03E45504 BL 0x1C16F20
	0x03E45508 STP X30, X19, [X31 - 0x10]!
	0x03E4550C LDR X8, [X0 + 0xD8]
	0x03E45510 CBZ X8, 0x3E45558
	0x03E45514 LDR W9, [X8 + 0x24]
	0x03E45518 CMP W9, W1
	0x03E4551C B.NE 0x3E45528
	0x03E45520 LDP X30, X19, [X31], #0x10
	0x03E45524 RET
	0x03E45528 STR W1, [X8 + 0x24]
	0x03E4552C LDR X8, [X0]
	0x03E45530 MOV X19, X0
	0x03E45534 LDR X9, [X8 + 0x2F8]
	0x03E45538 LDR X1, [X8 + 0x300]
	0x03E4553C BLR X9
	0x03E45540 LDR X8, [X19]
	0x03E45544 MOV X0, X19
	0x03E45548 LDR X2, [X8 + 0x2E8]
	0x03E4554C LDR X1, [X8 + 0x2F0]
	0x03E45550 LDP X30, X19, [X31], #0x10
	0x03E45554 BR X2
	0x03E45558 BL 0x1C16F20
	0x03E4555C STR X30, [X31 - 0x10]!
	0x03E45560 LDR X8, [X0 + 0xD8]
	0x03E45564 CBZ X8, 0x3E45574
	0x03E45568 LDR W0, [X8 + 0x28]
	0x03E4556C LDR X30, [X31], #0x10
	0x03E45570 RET
	0x03E45574 BL 0x1C16F20
	0x03E45578 STP X30, X19, [X31 - 0x10]!
	0x03E4557C LDR X8, [X0 + 0xD8]
	0x03E45580 CBZ X8, 0x3E455C8
	0x03E45584 LDR W9, [X8 + 0x28]
	0x03E45588 CMP W9, W1
	0x03E4558C B.NE 0x3E45598
	0x03E45590 LDP X30, X19, [X31], #0x10
	0x03E45594 RET
	0x03E45598 STR W1, [X8 + 0x28]
	0x03E4559C LDR X8, [X0]
	0x03E455A0 MOV X19, X0
	0x03E455A4 LDR X9, [X8 + 0x2F8]
	0x03E455A8 LDR X1, [X8 + 0x300]
	0x03E455AC BLR X9
	0x03E455B0 LDR X8, [X19]
	0x03E455B4 MOV X0, X19
	0x03E455B8 LDR X2, [X8 + 0x2E8]
	0x03E455BC LDR X1, [X8 + 0x2F0]
	0x03E455C0 LDP X30, X19, [X31], #0x10
	0x03E455C4 BR X2
	0x03E455C8 BL 0x1C16F20
	0x03E455CC STR X30, [X31 - 0x10]!
	0x03E455D0 LDR X8, [X0 + 0xD8]
	0x03E455D4 CBZ X8, 0x3E455E4
	0x03E455D8 LDR W0, [X8 + 0x2C]
	0x03E455DC LDR X30, [X31], #0x10
	0x03E455E0 RET
	0x03E455E4 BL 0x1C16F20
	0x03E455E8 STP X30, X19, [X31 - 0x10]!
	0x03E455EC LDR X8, [X0 + 0xD8]
	0x03E455F0 CBZ X8, 0x3E45638
	0x03E455F4 LDR W9, [X8 + 0x2C]
	0x03E455F8 CMP W9, W1
	0x03E455FC B.NE 0x3E45608
	0x03E45600 LDP X30, X19, [X31], #0x10
	0x03E45604 RET
	0x03E45608 STR W1, [X8 + 0x2C]
	0x03E4560C LDR X8, [X0]
	0x03E45610 MOV X19, X0
	0x03E45614 LDR X9, [X8 + 0x2F8]
	0x03E45618 LDR X1, [X8 + 0x300]
	0x03E4561C BLR X9
	0x03E45620 LDR X8, [X19]
	0x03E45624 MOV X0, X19
	0x03E45628 LDR X2, [X8 + 0x2E8]
	0x03E4562C LDR X1, [X8 + 0x2F0]
	0x03E45630 LDP X30, X19, [X31], #0x10
	0x03E45634 BR X2
	0x03E45638 BL 0x1C16F20
	0x03E4563C STR X30, [X31 - 0x10]!
	0x03E45640 LDR X8, [X0 + 0xD8]
	0x03E45644 CBZ X8, 0x3E45654
	0x03E45648 LDRB W0, [X8 + 0x30]
	0x03E4564C LDR X30, [X31], #0x10
	0x03E45650 RET
	0x03E45654 BL 0x1C16F20
	0x03E45658 STR X30, [X31 - 0x10]!
	0x03E4565C LDR X8, [X0 + 0xD8]
	0x03E45660 CBZ X8, 0x3E4569C
	0x03E45664 LDRB W9, [X8 + 0x30]
	0x03E45668 CMP W9, 0x0
	0x03E4566C CSET W10, NE
	0x03E45670 AND W9, W1, 0x1
	0x03E45674 CMP W10, W9
	0x03E45678 B.EQ 0x3E45694
	0x03E4567C STRB W9, [X8 + 0x30]
	0x03E45680 LDR X8, [X0]
	0x03E45684 LDR X2, [X8 + 0x2F8]
	0x03E45688 LDR X1, [X8 + 0x300]
	0x03E4568C LDR X30, [X31], #0x10
	0x03E45690 BR X2
	0x03E45694 LDR X30, [X31], #0x10
	0x03E45698 RET
	0x03E4569C BL 0x1C16F20
	0x03E456A0 STR X30, [X31 - 0x10]!
	0x03E456A4 LDR X8, [X0 + 0xD8]
	0x03E456A8 CBZ X8, 0x3E456B8
	0x03E456AC LDR W0, [X8 + 0x18]
	0x03E456B0 LDR X30, [X31], #0x10
	0x03E456B4 RET
	0x03E456B8 BL 0x1C16F20
	0x03E456BC STP X30, X19, [X31 - 0x10]!
	0x03E456C0 LDR X8, [X0 + 0xD8]
	0x03E456C4 CBZ X8, 0x3E4570C
	0x03E456C8 LDR W9, [X8 + 0x18]
	0x03E456CC CMP W9, W1
	0x03E456D0 B.NE 0x3E456DC
	0x03E456D4 LDP X30, X19, [X31], #0x10
	0x03E456D8 RET
	0x03E456DC STR W1, [X8 + 0x18]
	0x03E456E0 LDR X8, [X0]
	0x03E456E4 MOV X19, X0
	0x03E456E8 LDR X9, [X8 + 0x2F8]
	0x03E456EC LDR X1, [X8 + 0x300]
	0x03E456F0 BLR X9
	0x03E456F4 LDR X8, [X19]
	0x03E456F8 MOV X0, X19
	0x03E456FC LDR X2, [X8 + 0x2E8]
	0x03E45700 LDR X1, [X8 + 0x2F0]
	0x03E45704 LDP X30, X19, [X31], #0x10
	0x03E45708 BR X2
	0x03E4570C BL 0x1C16F20
	0x03E45710 STR X30, [X31 - 0x10]!
	0x03E45714 LDR X8, [X0 + 0xD8]
	0x03E45718 CBZ X8, 0x3E45728
	0x03E4571C LDR W0, [X8 + 0x34]
	0x03E45720 LDR X30, [X31], #0x10
	0x03E45724 RET
	0x03E45728 BL 0x1C16F20
	0x03E4572C STP X30, X19, [X31 - 0x10]!
	0x03E45730 LDR X8, [X0 + 0xD8]
	0x03E45734 CBZ X8, 0x3E4577C
	0x03E45738 LDR W9, [X8 + 0x34]
	0x03E4573C CMP W9, W1
	0x03E45740 B.NE 0x3E4574C
	0x03E45744 LDP X30, X19, [X31], #0x10
	0x03E45748 RET
	0x03E4574C STR W1, [X8 + 0x34]
	0x03E45750 LDR X8, [X0]
	0x03E45754 MOV X19, X0
	0x03E45758 LDR X9, [X8 + 0x2F8]
	0x03E4575C LDR X1, [X8 + 0x300]
	0x03E45760 BLR X9
	0x03E45764 LDR X8, [X19]
	0x03E45768 MOV X0, X19
	0x03E4576C LDR X2, [X8 + 0x2E8]
	0x03E45770 LDR X1, [X8 + 0x2F0]
	0x03E45774 LDP X30, X19, [X31], #0x10
	0x03E45778 BR X2
	0x03E4577C BL 0x1C16F20
	0x03E45780 STR X30, [X31 - 0x10]!
	0x03E45784 LDR X8, [X0 + 0xD8]
	0x03E45788 CBZ X8, 0x3E45798
	0x03E4578C LDR W0, [X8 + 0x38]
	0x03E45790 LDR X30, [X31], #0x10
	0x03E45794 RET
	0x03E45798 BL 0x1C16F20
	0x03E4579C STP X30, X19, [X31 - 0x10]!
	0x03E457A0 LDR X8, [X0 + 0xD8]
	0x03E457A4 CBZ X8, 0x3E457EC
	0x03E457A8 LDR W9, [X8 + 0x38]
	0x03E457AC CMP W9, W1
	0x03E457B0 B.NE 0x3E457BC
	0x03E457B4 LDP X30, X19, [X31], #0x10
	0x03E457B8 RET
	0x03E457BC STR W1, [X8 + 0x38]
	0x03E457C0 LDR X8, [X0]
	0x03E457C4 MOV X19, X0
	0x03E457C8 LDR X9, [X8 + 0x2F8]
	0x03E457CC LDR X1, [X8 + 0x300]
	0x03E457D0 BLR X9
	0x03E457D4 LDR X8, [X19]
	0x03E457D8 MOV X0, X19
	0x03E457DC LDR X2, [X8 + 0x2E8]
	0x03E457E0 LDR X1, [X8 + 0x2F0]
	0x03E457E4 LDP X30, X19, [X31], #0x10
	0x03E457E8 BR X2
	0x03E457EC BL 0x1C16F20
	0x03E457F0 STR X30, [X31 - 0x10]!
	0x03E457F4 LDR X8, [X0 + 0xD8]
	0x03E457F8 CBZ X8, 0x3E45808
	0x03E457FC LDR V0, [X8 + 0x3C]
	0x03E45800 LDR X30, [X31], #0x10
	0x03E45804 RET
	0x03E45808 BL 0x1C16F20
	0x03E4580C STP X30, X19, [X31 - 0x10]!
	0x03E45810 LDR X8, [X0 + 0xD8]
	0x03E45814 CBZ X8, 0x3E4585C
	0x03E45818 LDR V1, [X8 + 0x3C]
	0x03E4581C FCMP S1, S0
	0x03E45820 B.NE 0x3E4582C
	0x03E45824 LDP X30, X19, [X31], #0x10
	0x03E45828 RET
	0x03E4582C STR S0, [X8 + 0x3C]
	0x03E45830 LDR X8, [X0]
	0x03E45834 MOV X19, X0
	0x03E45838 LDR X9, [X8 + 0x2F8]
	0x03E4583C LDR X1, [X8 + 0x300]
	0x03E45840 BLR X9
	0x03E45844 LDR X8, [X19]
	0x03E45848 MOV X0, X19
	0x03E4584C LDR X2, [X8 + 0x2E8]
	0x03E45850 LDR X1, [X8 + 0x2F0]
	0x03E45854 LDP X30, X19, [X31], #0x10
	0x03E45858 BR X2
	0x03E4585C BL 0x1C16F20
	0x03E45860 STR X30, [X31 - 0x10]!
	0x03E45864 LDR X8, [X0 + 0xD8]
	0x03E45868 CBZ X8, 0x3E45878
	0x03E4586C LDR W0, [X8 + 0x1C]
	0x03E45870 LDR X30, [X31], #0x10
	0x03E45874 RET
	0x03E45878 BL 0x1C16F20
	0x03E4587C STP X30, X19, [X31 - 0x10]!
	0x03E45880 LDR X8, [X0 + 0xD8]
	0x03E45884 CBZ X8, 0x3E458CC
	0x03E45888 LDR W9, [X8 + 0x1C]
	0x03E4588C CMP W9, W1
	0x03E45890 B.NE 0x3E4589C
	0x03E45894 LDP X30, X19, [X31], #0x10
	0x03E45898 RET
	0x03E4589C STR W1, [X8 + 0x1C]
	0x03E458A0 LDR X8, [X0]
	0x03E458A4 MOV X19, X0
	0x03E458A8 LDR X9, [X8 + 0x2F8]
	0x03E458AC LDR X1, [X8 + 0x300]
	0x03E458B0 BLR X9
	0x03E458B4 LDR X8, [X19]
	0x03E458B8 MOV X0, X19
	0x03E458BC LDR X2, [X8 + 0x2E8]
	0x03E458C0 LDR X1, [X8 + 0x2F0]
	0x03E458C4 LDP X30, X19, [X31], #0x10
	0x03E458C8 BR X2
	0x03E458CC BL 0x1C16F20
	0x03E458D0 STR D8, [X31 - 0x30]!
	0x03E458D4 STP X30, X21, [X31 + 0x10]
	0x03E458D8 STP X20, X19, [X31 + 0x20]
	0x03E458DC ADRP X20, 0x5A3000
	0x03E458E0 ADRP X21, 0x2AE000
	0x03E458E4 LDRB W8, [X20 + 0x7F5]
	0x03E458E8 LDR X21, [X21 + 0x598]
	0x03E458EC MOV X19, X0
	0x03E458F0 TBNZ X8, 0x0, 0x3E45908
	0x03E458F4 ADRP X0, 0x2AE000
	0x03E458F8 LDR X0, [X0 + 0x598]
	0x03E458FC BL 0x1C16CF4
	0x03E45900 MOVZ W8, 0x1
	0x03E45904 STRB W8, [X20 + 0x7F5]
	0x03E45908 MOV X0, X19
	0x03E4590C MOV X1, X31
	0x03E45910 BL 0x3CDADE8
	0x03E45914 LDR X8, [X21]
	0x03E45918 MOV X20, X0
	0x03E4591C LDR W9, [X8 + 0xE0]
	0x03E45920 CBNZ W9, 0x3E4592C
	0x03E45924 MOV X0, X8
	0x03E45928 BL 0x1C16DFC
	0x03E4592C MOV X0, X20
	0x03E45930 MOV X1, X31
	0x03E45934 BL 0x3C38948
	0x03E45938 FMOV S8, 1
	0x03E4593C TBZ X0, 0x0, 0x3E45A00
	0x03E45940 LDR X8, [X19 + 0xD8]
	0x03E45944 CBZ X8, 0x3E45A14
	0x03E45948 LDR X0, [X21]
	0x03E4594C LDR X21, [X8 + 0x10]
	0x03E45950 LDR W9, [X0 + 0xE0]
	0x03E45954 CBNZ W9, 0x3E4595C
	0x03E45958 BL 0x1C16DFC
	0x03E4595C MOV X0, X21
	0x03E45960 MOV X1, X31
	0x03E45964 BL 0x3C38948
	0x03E45968 TBZ X0, 0x0, 0x3E45988
	0x03E4596C LDR X8, [X19 + 0xD8]
	0x03E45970 CBZ X8, 0x3E45A14
	0x03E45974 LDR X0, [X8 + 0x10]
	0x03E45978 CBZ X0, 0x3E45A14
	0x03E4597C MOV X1, X31
	0x03E45980 BL 0x3CCEDE4
	0x03E45984 TBZ X0, 0x0, 0x3E459A4
	0x03E45988 CBZ X20, 0x3E45A14
	0x03E4598C MOV X0, X20
	0x03E45990 LDP X20, X19, [X31 + 0x20]
	0x03E45994 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X26, 0x5A4000
	015 Move W8, [X26+2026]
	016 Move W21, W6
	017 Move W22, W5
	018 Move W20, W4
	019 Move W23, W3
	020 Move W24, W2
	021 Move W25, W1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {116}
	027 Move X0, 0x2AF000
	028 Move X0, [X0+2904]
	029 Call 0x1C17CF4
	030 Move X0, 0x327000
	031 Move X0, [X0+1040]
	032 Call 0x1C17CF4
	033 Move X0, 0x327000
	034 Move X0, [X0+1048]
	035 Call 0x1C17CF4
	036 Move X0, 0x2AF000
	037 Move X0, [X0+1880]
	038 Call 0x1C17CF4
	039 Move X0, 0x327000
	040 Move X0, [X0+1056]
	041 Call 0x1C17CF4
	042 Move X0, 0x327000
	043 Move X0, [X0+1064]
	044 Call 0x1C17CF4
	045 Move X0, 0x327000
	046 Move X0, [X0+1072]
	047 Call 0x1C17CF4
	048 Move X0, 0x327000
	049 Move X0, [X0+1080]
	050 Call 0x1C17CF4
	051 Move X0, 0x2B3000
	052 Move X0, [X0+3232]
	053 Call 0x1C17CF4
	054 Move X0, 0x2AF000
	055 Move X0, [X0+2512]
	056 Call 0x1C17CF4
	057 Move X0, 0x2AF000
	058 Move X0, [X0+1432]
	059 Call 0x1C17CF4
	060 Move X0, 0x314000
	061 Move X0, [X0+1848]
	062 Call 0x1C17CF4
	063 Move X0, 0x327000
	064 Move X0, [X0+1088]
	065 Call 0x1C17CF4
	066 Move X0, 0x315000
	067 Move X0, [X0+1200]
	068 Call 0x1C17CF4
	069 Move X0, 0x327000
	070 Move X0, [X0+1096]
	071 Call 0x1C17CF4
	072 Move X0, 0x313000
	073 Move X0, [X0+2184]
	074 Call 0x1C17CF4
	075 Move X0, 0x315000
	076 Move X0, [X0+1224]
	077 Call 0x1C17CF4
	078 Move X0, 0x313000
	079 Move X0, [X0+2192]
	080 Call 0x1C17CF4
	081 Move X0, 0x327000
	082 Move X0, [X0+1104]
	083 Call 0x1C17CF4
	084 Move X0, 0x315000
	085 Move X0, [X0+1344]
	086 Call 0x1C17CF4
	087 Move X0, 0x327000
	088 Move X0, [X0+1112]
	089 Call 0x1C17CF4
	090 Move X0, 0x2B6000
	091 Move X0, [X0+3008]
	092 Call 0x1C17CF4
	093 Move X0, 0x327000
	094 Move X0, [X0+1120]
	095 Call 0x1C17CF4
	096 Move X0, 0x327000
	097 Move X0, [X0+1128]
	098 Call 0x1C17CF4
	099 Move X0, 0x327000
	100 Move X0, [X0+1136]
	101 Call 0x1C17CF4
	102 Move X0, 0x327000
	103 Move X0, [X0+1144]
	104 Call 0x1C17CF4
	105 Move X0, 0x327000
	106 Move X0, [X0+1152]
	107 Call 0x1C17CF4
	108 Move X0, 0x327000
	109 Move X0, [X0+1160]
	110 Call 0x1C17CF4
	111 Move X0, 0x327000
	112 Move X0, [X0+1168]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X26+2026], W8
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X29, 0x2AF000
	119 Move X29, [X29+1432]
	120 Move X0, [X29]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X19
	126 Move X1, X31
	127 Move X2, X31
	128 Call Object.op_Equality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {320}
	133 Compare X19, 0
	134 JumpIfEqual {652}
	135 Move X8, 0x315000
	136 Move X8, [X8+1224]
	137 Move X0, X19
	138 Move X2, X31
	139 Move X1, [X8]
	140 Call Material.HasProperty, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {260}
	145 Move X8, 0x315000
	146 Move X8, [X8+1344]
	147 Move X0, X19
	148 Move X2, X31
	149 Move X1, [X8]
	150 Call Material.HasProperty, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {267}
	155 Move X8, 0x315000
	156 Move X8, [X8+1200]
	157 Move X0, X19
	158 Move X2, X31
	159 Move X1, [X8]
	160 Call Material.HasProperty, X0, X1
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {274}
	165 Move X8, 0x313000
	166 Move X8, [X8+2184]
	167 Move X0, X19
	168 Move X2, X31
	169 Move X1, [X8]
	170 Call Material.HasProperty, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {281}
	175 Move X8, 0x313000
	176 Move X8, [X8+2192]
	177 Move X0, X19
	178 Move X2, X31
	179 Move X1, [X8]
	180 Call Material.HasProperty, X0, X1
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {288}
	185 Move X8, 0x327000
	186 Move X8, [X8+1152]
	187 Move X0, X19
	188 Move X2, X31
	189 Move X1, [X8]
	190 Call Material.HasProperty, X0, X1
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {295}
	195 Move X27, 0x314000
	196 Move X27, [X27+1848]
	197 Move X0, [X27]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X27]
	203 Move X8, [X0+184]
	204 Move X8, [X8]
	205 Compare X8, 0
	206 JumpIfEqual {652}
	207 Move W8, [X8+24]
	208 Subtract W8, W8, 1
	209 Move [X31+8], W8
	210 Move W26, W31
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {216}
	214 Call 0x1C17DFC
	215 Move X0, [X27]
	216 Move X8, [X0+184]
	217 Move X0, [X8]
	218 Compare X0, 0
	219 JumpIfEqual {652}
	220 Move X8, 0x327000
	221 Move X8, [X8+1072]
	222 Move W1, W26
	223 Move X2, [X8]
	224 Call List`1<Object>.get_Item, X0, X1
	225 Compare X0, 0
	226 JumpIfEqual {652}
	227 Move X27, X0
	228 Move X0, [X29]
	229 Move X28, [X27+16]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X0, X28
	235 Move X1, X19
	236 Move X2, X31
	237 Call Object.op_Equality, X0, X1
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {254}
	242 Move W8, [X27+36]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move W8, [X27+40]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move W8, [X27+44]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W8, [X27+48]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move W8, [X27+52]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move W8, [X27+60]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move W8, [X31+8]
	255 Move X27, 0x314000
	256 Move X27, [X27+1848]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X0, [X27]
	259 Add W26, W26, 1
	260 Move X0, X19
	261 Move X1, X31
	262 Call Object.get_name, X0
	263 Move X8, 0x2B6000
	264 Move X9, 0x327000
	265 Move X8, [X8+3008]
	266 Move X9, [X9+1096]
	267 Move X0, X19
	268 Move X1, X31
	269 Call Object.get_name, X0
	270 Move X8, 0x2B6000
	271 Move X9, 0x327000
	272 Move X8, [X8+3008]
	273 Move X9, [X9+1144]
	274 Move X0, X19
	275 Move X1, X31
	276 Call Object.get_name, X0
	277 Move X8, 0x2B6000
	278 Move X9, 0x327000
	279 Move X8, [X8+3008]
	280 Move X9, [X9+1160]
	281 Move X0, X19
	282 Move X1, X31
	283 Call Object.get_name, X0
	284 Move X8, 0x2B6000
	285 Move X9, 0x327000
	286 Move X8, [X8+3008]
	287 Move X9, [X9+1128]
	288 Move X0, X19
	289 Move X1, X31
	290 Call Object.get_name, X0
	291 Move X8, 0x2B6000
	292 Move X9, 0x327000
	293 Move X8, [X8+3008]
	294 Move X9, [X9+1104]
	295 Move X0, X19
	296 Move X1, X31
	297 Call Object.get_name, X0
	298 Move X8, 0x2B6000
	299 Move X9, 0x327000
	300 Move X8, [X8+3008]
	301 Move X9, [X9+1120]
	302 Move X8, [X8]
	303 Move X2, [X9]
	304 Move X1, X0
	305 Move X3, X31
	306 Move X0, X8
	307 Call String.Concat, X0, X1, X2
	308 Move X8, 0x314000
	309 Move X8, [X8+1848]
	310 Move X20, X0
	311 Move X8, [X8]
	312 Move W9, [X8+224]
	313 Compare W9, 0
	314 JumpIfNotEqual {317}
	315 Move X0, X8
	316 Call 0x1C17DFC
	317 Move X0, X20
	318 Move X1, X19
	319 Call StencilMaterial.LogWarningWhenNotInBatchmode, X0, X1
	320 Move X0, X19
	321 Move X20, [X31+128]
	322 Move X19, [X31+136]
	323 Move X22, [X31+112]
	324 Move X21, [X31+120]
	325 Move X24, [X31+96]
	326 Move X23, [X31+104]
	327 Move X26, [X31+80]
	328 Move X25, [X31+88]
	329 Move X28, [X31+64]
	330 Move X27, [X31+72]
	331 Move X29, [X31+48]
	332 Move X30, [X31+56]
	333 Add X31, X31, 144
	334 Return X0
	335 Move X8, 0x327000
	336 Move X8, [X8+1080]
	337 Move X0, [X8]
	338 Call 0x1C17F10
	339 Move W8, 8
	340 Move X1, X31
	341 Move X26, X0
	342 Move [X0+44], W8
	343 Call Object..ctor, X0
	344 Move W8, 1
	345 Move [X26+16], X19
	346 Move [X26+32], W8
	347 Move X8, 0x2B3000
	348 Move X8, [X8+3232]
	349 Move X0, [X8]
	350 Call 0x1C17F10
	351 Move X1, X19
	352 Move X2, X31
	353 Move X27, X0
	354 Call Material..ctor, X0, X1
	355 Move [X26+24], X27
	356 Compare X27, 0
	357 JumpIfEqual {652}
	358 Move W1, 61
	359 Move X0, X27
	360 Move X2, X31
	361 Call Object.set_hideFlags, X0, X1
	362 Move X8, [X26+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move [X26+36], W25
	365 Move [X26+40], W24
	366 Move [X26+44], W23
	367 Move [X26+48], W22
	368 Move [X31+8], X8
	369 NotImplemented "Instruction CSET not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 NotImplemented "Instruction CSET not yet implemented."
	372 And W8, W8, W9
	373 Move [X26+52], W21
	374 Move [X26+60], W20
	375 Move [X26+56], W8
	376 Move X8, 0x2AF000
	377 Move X8, [X8+2512]
	378 Move W1, 8
	379 Move X0, [X8]
	380 Call 0x1C17D6C
	381 Move X29, 0x2AF000
	382 Move X29, [X29+1880]
	383 Move X28, X0
	384 Add X1, X31, 44
	385 Move [X31+44], W25
	386 Move X0, [X29]
	387 Call 0x1C17E04
	388 Compare X28, 0
	389 JumpIfEqual {652}
	390 Move X27, X0
	391 Compare X0, 0
	392 JumpIfEqual {399}
	393 Move X8, [X28]
	394 Move X0, X27
	395 Move X1, [X8+64]
	396 Call 0x1C17E00
	397 Compare X0, 0
	398 JumpIfEqual {654}
	399 Move W8, [X28+24]
	400 Compare W8, 0
	401 JumpIfEqual {653}
	402 Move [X28+32], X27
	403 Move X8, 0x327000
	404 Move X8, [X8+1088]
	405 Add X1, X31, 40
	406 Move [X31+40], W24
	407 Move X0, [X8]
	408 Call 0x1C17E04
	409 Move X27, X0
	410 Compare X0, 0
	411 JumpIfEqual {418}
	412 Move X8, [X28]
	413 Move X0, X27
	414 Move X1, [X8+64]
	415 Call 0x1C17E00
	416 Compare X0, 0
	417 JumpIfEqual {654}
	418 Move W8, [X28+24]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move [X28+40], X27
	421 Move X8, 0x327000
	422 Move X8, [X8+1048]
	423 Add X1, X31, 36
	424 Move [X31+36], W23
	425 Move X0, [X8]
	426 Call 0x1C17E04
	427 Move X27, X0
	428 Compare X0, 0
	429 JumpIfEqual {436}
	430 Move X8, [X28]
	431 Move X0, X27
	432 Move X1, [X8+64]
	433 Call 0x1C17E00
	434 Compare X0, 0
	435 JumpIfEqual {654}
	436 Move W8, [X28+24]
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move [X28+48], X27
	439 Move X0, [X29]
	440 Add X1, X31, 32
	441 Move [X31+32], W21
	442 Call 0x1C17E04
	443 Move X27, X0
	444 Compare X0, 0
	445 JumpIfEqual {452}
	446 Move X8, [X28]
	447 Move X0, X27
	448 Move X1, [X8+64]
	449 Call 0x1C17E00
	450 Compare X0, 0
	451 JumpIfEqual {654}
	452 Move W8, [X28+24]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move [X28+56], X27
	455 Move X0, [X29]
	456 Add X1, X31, 28
	457 Move [X31+28], W22
	458 Call 0x1C17E04
	459 Move X27, X0
	460 Compare X0, 0
	461 JumpIfEqual {468}
	462 Move X8, [X28]
	463 Move X0, X27
	464 Move X1, [X8+64]
	465 Call 0x1C17E00
	466 Compare X0, 0
	467 JumpIfEqual {654}
	468 Move W8, [X28+24]
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move [X28+64], X27
	471 Move X8, 0x327000
	472 Move X8, [X8+1040]
	473 Add X1, X31, 24
	474 Move [X31+24], W20
	475 Move X0, [X8]
	476 Call 0x1C17E04
	477 Move X27, X0
	478 Compare X0, 0
	479 JumpIfEqual {486}
	480 Move X8, [X28]
	481 Move X0, X27
	482 Move X1, [X8+64]
	483 Call 0x1C17E00
	484 Compare X0, 0
	485 JumpIfEqual {654}
	486 Move W8, [X28+24]
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move [X28+72], X27
	489 Move X9, 0x2AF000
	490 Move W8, [X26+56]
	491 Move X9, [X9+2904]
	492 Add X1, X31, 20
	493 Move [X31+20], W8
	494 Move X0, [X9]
	495 Call 0x1C17E04
	496 Move X27, X0
	497 Compare X0, 0
	498 JumpIfEqual {505}
	499 Move X8, [X28]
	500 Move X0, X27
	501 Move X1, [X8+64]
	502 Call 0x1C17E00
	503 Compare X0, 0
	504 JumpIfEqual {654}
	505 Move W8, [X28+24]
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Move X0, X19
	508 Move X1, X31
	509 Move [X28+80], X27
	510 Call Object.get_name, X0
	511 Move X19, X0
	512 Compare X0, 0
	513 JumpIfEqual {520}
	514 Move X8, [X28]
	515 Move X0, X19
	516 Move X1, [X8+64]
	517 Call 0x1C17E00
	518 Compare X0, 0
	519 JumpIfEqual {654}
	520 Move W8, [X28+24]
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move [X28+88], X19
	523 Move X8, 0x327000
	524 Move X8, [X8+1168]
	525 Move X1, X28
	526 Move X2, X31
	527 Move X0, [X8]
	528 Call String.Format, X0, X1
	529 Move X1, X0
	530 Move X0, [X31+8]
	531 Compare X0, 0
	532 JumpIfEqual {652}
	533 Move X2, X31
	534 Call Object.set_name, X0, X1
	535 Move X19, 0x314000
	536 Move X0, [X26+24]
	537 Move X19, [X19+1848]
	538 Compare X0, 0
	539 JumpIfEqual {652}
	540 Move X8, 0x315000
	541 Move X8, [X8+1224]
	542 NotImplemented "Instruction SCVTF not yet implemented."
	543 Move X2, X31
	544 Move X1, [X8]
	545 Call Material.SetFloat, X0, X1, V0
	546 Move X0, [X26+24]
	547 Compare X0, 0
	548 JumpIfEqual {652}
	549 Move X8, 0x315000
	550 Move X8, [X8+1344]
	551 NotImplemented "Instruction SCVTF not yet implemented."
	552 Move X2, X31
	553 Move X1, [X8]
	554 Call Material.SetFloat, X0, X1, V0
	555 Move X0, [X26+24]
	556 Compare X0, 0
	557 JumpIfEqual {652}
	558 Move X8, 0x315000
	559 Move X8, [X8+1200]
	560 NotImplemented "Instruction SCVTF not yet implemented."
	561 Move X2, X31
	562 Move X1, [X8]
	563 Call Material.SetFloat, X0, X1, V0
	564 Move X0, [X26+24]
	565 Compare X0, 0
	566 JumpIfEqual {652}
	567 Move X8, 0x313000
	568 Move X8, [X8+2184]
	569 NotImplemented "Instruction SCVTF not yet implemented."
	570 Move X2, X31
	571 Move X1, [X8]
	572 Call Material.SetFloat, X0, X1, V0
	573 Move X0, [X26+24]
	574 Compare X0, 0
	575 JumpIfEqual {652}
	576 Move X8, 0x313000
	577 Move X8, [X8+2192]
	578 NotImplemented "Instruction SCVTF not yet implemented."
	579 Move X2, X31
	580 Move X1, [X8]
	581 Call Material.SetFloat, X0, X1, V0
	582 Move X0, [X26+24]
	583 Compare X0, 0
	584 JumpIfEqual {652}
	585 Move X8, 0x327000
	586 Move X8, [X8+1152]
	587 NotImplemented "Instruction SCVTF not yet implemented."
	588 Move X2, X31
	589 Move X1, [X8]
	590 Call Material.SetFloat, X0, X1, V0
	591 Move X0, [X26+24]
	592 Compare X0, 0
	593 JumpIfEqual {652}
	594 Move X9, 0x327000
	595 Move W8, [X26+56]
	596 Move X9, [X9+1136]
	597 Move S0, 1
	598 Move S1, W31
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move X1, [X9]
	601 NotImplemented "Instruction FCSEL not yet implemented."
	602 Move X2, X31
	603 Call Material.SetFloat, X0, X1, V0
	604 Move X0, [X26+24]
	605 Compare X0, 0
	606 JumpIfEqual {652}
	607 Move X9, 0x327000
	608 Move W8, [X26+56]
	609 Move X9, [X9+1112]
	610 Move X2, X31
	611 Move X1, [X9]
	612 Compare W8, 0
	613 JumpIfEqual {615}
	614 Call Material.EnableKeyword, X0, X1
	615 Call Material.DisableKeyword, X0, X1
	616 Move X0, [X19]
	617 Move W8, [X0+224]
	618 Compare W8, 0
	619 JumpIfNotEqual {622}
	620 Call 0x1C17DFC
	621 Move X0, [X19]
	622 Move X8, [X0+184]
	623 Move X0, [X8]
	624 Compare X0, 0
	625 JumpIfEqual {652}
	626 Move X9, 0x327000
	627 Move X9, [X9+1056]
	628 Move W10, [X0+28]
	629 Move X8, [X0+16]
	630 Move X9, [X9]
	631 Add W10, W10, 1
	632 Move [X0+28], W10
	633 Compare X8, 0
	634 JumpIfEqual {652}
	635 NotImplemented "Instruction LDRSW not yet implemented."
	636 Move W11, [X8+24]
	637 NotImplemented "Instruction CMP not yet implemented."
	638 Add W9, W10, 1
	639 Add X8, X8, X10
	640 Move [X0+24], W9
	641 Move [X8+32], X26
	642 Move X8, [X9+32]
	643 Move X1, X26
	644 Move X8, [X8+192]
	645 Move X2, [X8+112]
	646 Call List`1<Object>.AddWithResize, X0, X1
	647 Move X19, [X26+24]
	648 Move W8, [X27+32]
	649 Move X19, [X27+24]
	650 Add W8, W8, 1
	651 Move [X27+32], W8
	652 Call 0x1C17F20
	653 Call 0x1C17F28
	654 Call 0x1C17F44
	655 Move X1, X31
	656 Call 0x1C17DEC

Method: System.Void Remove(UnityEngine.Material customMat)

Disassembly:
	0x03E45A50 MOV X0, X19
	0x03E45A54 BL 0x3E44E54
	0x03E45A58 CBZ X0, 0x3E45A90
	0x03E45A5C ADRP X20, 0x31D000
	0x03E45A60 LDR X20, [X20 + 0x398]
	0x03E45A64 MOV X1, X31
	0x03E45A68 BL 0x3CCEE20
	0x03E45A6C LDR X0, [X20]
	0x03E45A70 LDR W8, [X0 + 0xE0]
	0x03E45A74 CBNZ W8, 0x3E45A7C
	0x03E45A78 BL 0x1C16DFC
	0x03E45A7C MOV X0, X19
	0x03E45A80 LDP X20, X19, [X31 + 0x10]
	0x03E45A84 MOV X1, X31
	0x03E45A88 LDR X30, [X31], #0x20
	0x03E45A8C B 0x3CDA564
	0x03E45A90 BL 0x1C16F20
	0x03E45A94 STP X30, X21, [X31 - 0x20]!
	0x03E45A98 STP X20, X19, [X31 + 0x10]
	0x03E45A9C ADRP X20, 0x5A3000
	0x03E45AA0 ADRP X21, 0x31D000
	0x03E45AA4 LDRB W8, [X20 + 0x7F7]
	0x03E45AA8 LDR X21, [X21 + 0x398]
	0x03E45AAC MOV X19, X0
	0x03E45AB0 TBNZ X8, 0x0, 0x3E45AC8
	0x03E45AB4 ADRP X0, 0x31D000
	0x03E45AB8 LDR X0, [X0 + 0x398]
	0x03E45ABC BL 0x1C16CF4
	0x03E45AC0 MOVZ W8, 0x1
	0x03E45AC4 STRB W8, [X20 + 0x7F7]
	0x03E45AC8 LDR X0, [X21]
	0x03E45ACC LDR W8, [X0 + 0xE0]
	0x03E45AD0 CBNZ W8, 0x3E45AD8
	0x03E45AD4 BL 0x1C16DFC
	0x03E45AD8 MOV X0, X19
	0x03E45ADC MOV X1, X31
	0x03E45AE0 BL 0x3CDA950
	0x03E45AE4 MOV X0, X19
	0x03E45AE8 LDP X20, X19, [X31 + 0x10]
	0x03E45AEC MOV X1, X31
	0x03E45AF0 LDP X30, X21, [X31], #0x20
	0x03E45AF4 B 0x3E379EC
	0x03E45AF8 STR X30, [X31 - 0x20]!
	0x03E45AFC STP X20, X19, [X31 + 0x10]
	0x03E45B00 ADRP X20, 0x5A3000
	0x03E45B04 LDRB W8, [X20 + 0x7F8]
	0x03E45B08 MOV X19, X0
	0x03E45B0C TBNZ X8, 0x0, 0x3E45B24
	0x03E45B10 ADRP X0, 0x2AE000
	0x03E45B14 LDR X0, [X0 + 0x598]
	0x03E45B18 BL 0x1C16CF4
	0x03E45B1C MOVZ W8, 0x1
	0x03E45B20 STRB W8, [X20 + 0x7F8]
	0x03E45B24 LDR X8, [X19 + 0xD8]
	0x03E45B28 CBZ X8, 0x3E45B7C
	0x03E45B2C ADRP X9, 0x2AE000
	0x03E45B30 LDR X9, [X9 + 0x598]
	0x03E45B34 LDR X20, [X8 + 0x10]
	0x03E45B38 LDR X0, [X9]
	0x03E45B3C LDR W9, [X0 + 0xE0]
	0x03E45B40 CBNZ W9, 0x3E45B48
	0x03E45B44 BL 0x1C16DFC
	0x03E45B48 MOV X0, X20
	0x03E45B4C MOV X1, X31
	0x03E45B50 MOV X2, X31
	0x03E45B54 BL 0x3C354F8
	0x03E45B58 TBZ X0, 0x0, 0x3E45B70
	0x03E45B5C MOV X0, X19
	0x03E45B60 LDP X20, X19, [X31 + 0x10]
	0x03E45B64 MOV X1, X31
	0x03E45B68 LDR X30, [X31], #0x20
	0x03E45B6C B 0x3CDC9A8
	0x03E45B70 LDP X20, X19, [X31 + 0x10]
	0x03E45B74 LDR X30, [X31], #0x20
	0x03E45B78 RET
	0x03E45B7C BL 0x1C16F20
	0x03E45B80 STR X30, [X31 - 0x30]!
	0x03E45B84 STP X22, X21, [X31 + 0x10]
	0x03E45B88 STP X20, X19, [X31 + 0x20]
	0x03E45B8C ADRP X20, 0x5A3000
	0x03E45B90 ADRP X21, 0x326000
	0x03E45B94 ADRP X22, 0x326000
	0x03E45B98 LDRB W8, [X20 + 0x7F9]
	0x03E45B9C LDR X21, [X21 + 0x4B8]
	0x03E45BA0 LDR X22, [X22 + 0x4C0]
	0x03E45BA4 MOV X19, X0
	0x03E45BA8 TBNZ X8, 0x0, 0x3E45BCC
	0x03E45BAC ADRP X0, 0x326000
	0x03E45BB0 LDR X0, [X0 + 0x4C0]
	0x03E45BB4 BL 0x1C16CF4
	0x03E45BB8 ADRP X0, 0x326000
	0x03E45BBC LDR X0, [X0 + 0x4B8]
	0x03E45BC0 BL 0x1C16CF4
	0x03E45BC4 MOVZ W8, 0x1
	0x03E45BC8 STRB W8, [X20 + 0x7F9]
	0x03E45BCC LDR X0, [X21]
	0x03E45BD0 LDR X1, [X22]
	0x03E45BD4 BL 0x2241EFC
	0x03E45BD8 MOV X1, X0
	0x03E45BDC MOV X0, X19
	0x03E45BE0 LDP X20, X19, [X31 + 0x20]
	0x03E45BE4 LDP X22, X21, [X31 + 0x10]
	0x03E45BE8 LDR X30, [X31], #0x30
	0x03E45BEC B 0x3E45210
	0x03E45BF0 STR X30, [X31 - 0x20]!
	0x03E45BF4 STP X20, X19, [X31 + 0x10]
	0x03E45BF8 ADRP X20, 0x5A3000
	0x03E45BFC LDRB W8, [X20 + 0x7FA]
	0x03E45C00 MOV X19, X0
	0x03E45C04 TBNZ X8, 0x0, 0x3E45C34
	0x03E45C08 ADRP X0, 0x2AE000
	0x03E45C0C LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x5A4000
	011 Move X23, 0x2AF000
	012 Move W8, [X20+2027]
	013 Move X23, [X23+1432]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x327000
	020 Move X0, [X0+1176]
	021 Call 0x1C17CF4
	022 Move X0, 0x327000
	023 Move X0, [X0+1064]
	024 Call 0x1C17CF4
	025 Move X0, 0x327000
	026 Move X0, [X0+1072]
	027 Call 0x1C17CF4
	028 Move X0, 0x2AF000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x314000
	032 Move X0, [X0+1848]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2027], W8
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {101}
	049 Move X24, 0x314000
	050 Move X24, [X24+1848]
	051 Move X0, [X24]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Move X8, [X0+184]
	058 Move X8, [X8]
	059 Compare X8, 0
	060 JumpIfEqual {139}
	061 Move W8, [X8+24]
	062 Subtract W25, W8, 1
	063 Move X26, 0x327000
	064 Move X26, [X26+1072]
	065 Move W20, W31
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X24]
	071 Move X8, [X0+184]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {139}
	075 Move X2, [X26]
	076 Move W1, W20
	077 Call List`1<Object>.get_Item, X0, X1
	078 Compare X0, 0
	079 JumpIfEqual {139}
	080 Move X21, X0
	081 Move X0, [X23]
	082 Move X22, [X21+24]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X22
	088 Move X1, X19
	089 Move X2, X31
	090 Call Object.op_Inequality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {98}
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X24]
	097 Add W20, W20, 1
	098 Move W8, [X21+32]
	099 Subtract W8, W8, 1
	100 Move [X21+32], W8
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X26, [X31+16]
	108 Move X25, [X31+24]
	109 Move X30, [X31+80]
	110 Return 
	111 Move X0, [X21+24]
	112 Call Misc.DestroyImmediate, X0
	113 Move [X21+16], X31
	114 Move X0, [X24]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X24]
	120 Move X8, [X0+184]
	121 Move X0, [X8]
	122 Compare X0, 0
	123 JumpIfEqual {139}
	124 Move X8, 0x327000
	125 Move X8, [X8+1176]
	126 Move W1, W20
	127 Move X20, [X31+64]
	128 Move X19, [X31+72]
	129 Move X22, [X31+48]
	130 Move X21, [X31+56]
	131 Move X2, [X8]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X26, [X31+16]
	135 Move X25, [X31+24]
	136 Move X30, [X31+80]
	137 Call List`1<Object>.RemoveAt, X0, X1
	138 Return 
	139 Call 0x1C17F20

Method: System.Void ClearAll()

Disassembly:
	0x03E45C10 BL 0x1C16CF4
	0x03E45C14 ADRP X0, 0x326000
	0x03E45C18 LDR X0, [X0 + 0x4C0]
	0x03E45C1C BL 0x1C16CF4
	0x03E45C20 ADRP X0, 0x326000
	0x03E45C24 LDR X0, [X0 + 0x4B8]
	0x03E45C28 BL 0x1C16CF4
	0x03E45C2C MOVZ W8, 0x1
	0x03E45C30 STRB W8, [X20 + 0x7FA]
	0x03E45C34 LDR X8, [X19 + 0xD8]
	0x03E45C38 CBZ X8, 0x3E45CA8
	0x03E45C3C ADRP X9, 0x2AE000
	0x03E45C40 LDR X9, [X9 + 0x598]
	0x03E45C44 LDR X20, [X8 + 0x10]
	0x03E45C48 LDR X0, [X9]
	0x03E45C4C LDR W9, [X0 + 0xE0]
	0x03E45C50 CBNZ W9, 0x3E45C58
	0x03E45C54 BL 0x1C16DFC
	0x03E45C58 MOV X0, X20
	0x03E45C5C MOV X1, X31
	0x03E45C60 MOV X2, X31
	0x03E45C64 BL 0x3C3883C
	0x03E45C68 TBZ X0, 0x0, 0x3E45C9C
	0x03E45C6C ADRP X8, 0x326000
	0x03E45C70 ADRP X9, 0x326000
	0x03E45C74 LDR X8, [X8 + 0x4B8]
	0x03E45C78 LDR X9, [X9 + 0x4C0]
	0x03E45C7C LDR X0, [X8]
	0x03E45C80 LDR X1, [X9]
	0x03E45C84 BL 0x2241EFC
	0x03E45C88 MOV X1, X0
	0x03E45C8C MOV X0, X19
	0x03E45C90 LDP X20, X19, [X31 + 0x10]
	0x03E45C94 LDR X30, [X31], #0x20
	0x03E45C98 B 0x3E45210
	0x03E45C9C LDP X20, X19, [X31 + 0x10]
	0x03E45CA0 LDR X30, [X31], #0x20
	0x03E45CA4 RET
	0x03E45CA8 BL 0x1C16F20
	0x03E45CAC SUB X31, X31, 0x90
	0x03E45CB0 STR D14, [X31 + 0x20]
	0x03E45CB4 STP D13, D12, [X31 + 0x28]
	0x03E45CB8 STP D11, D10, [X31 + 0x38]
	0x03E45CBC STP D9, D8, [X31 + 0x48]
	0x03E45CC0 STR X30, [X31 + 0x58]
	0x03E45CC4 STP X24, X23, [X31 + 0x60]
	0x03E45CC8 STP X22, X21, [X31 + 0x70]
	0x03E45CCC STP X20, X19, [X31 + 0x80]
	0x03E45CD0 ADRP X21, 0x5A3000
	0x03E45CD4 LDRB W9, [X21 + 0x7FB]
	0x03E45CD8 MOV V8.16B, V1.16B
	0x03E45CDC MOV V9.16B, V0.16B
	0x03E45CE0 MOV X20, X0
	0x03E45CE4 MOV X19, X8
	0x03E45CE8 TBNZ X9, 0x0, 0x3E45D00
	0x03E45CEC ADRP X0, 0x2AE000
	0x03E45CF0 LDR X0, [X0 + 0x598]
	0x03E45CF4 BL 0x1C16CF4
	0x03E45CF8 MOVZ W8, 0x1
	0x03E45CFC STRB W8, [X21 + 0x7FB]
	0x03E45D00 STRH W31, [X31 + 0x1C]
	0x03E45D04 STRB W31, [X31 + 0x1E]
	0x03E45D08 STRH W31, [X31 + 0x18]
	0x03E45D0C STRB W31, [X31 + 0x1A]
	0x03E45D10 LDR X8, [X20 + 0xD8]
	0x03E45D14 CBZ X8, 0x3E45E98
	0x03E45D18 ADRP X9, 0x2AE000
	0x03E45D1C LDR X9, [X9 + 0x598]
	0x03E45D20 LDR X21, [X8 + 0x10]
	0x03E45D24 LDR X0, [X9]
	0x03E45D28 LDR W9, [X0 + 0xE0]
	0x03E45D2C CBNZ W9, 0x3E45D34

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x5A4000
	008 Move X21, 0x314000
	009 Move W8, [X19+2028]
	010 Move X21, [X21+1848]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x327000
	016 Move X0, [X0+1184]
	017 Call 0x1C17CF4
	018 Move X0, 0x327000
	019 Move X0, [X0+1064]
	020 Call 0x1C17CF4
	021 Move X0, 0x327000
	022 Move X0, [X0+1072]
	023 Call 0x1C17CF4
	024 Move X0, 0x314000
	025 Move X0, [X0+1848]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+2028], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X0+184]
	036 Move X8, [X8]
	037 Compare X8, 0
	038 JumpIfEqual {89}
	039 Move W8, [X8+24]
	040 Move X22, 0x327000
	041 Move X22, [X22+1072]
	042 Move W19, W31
	043 NotImplemented "Instruction BIC not yet implemented."
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Move X8, [X0+184]
	050 Move X0, [X8]
	051 Compare X0, 0
	052 JumpIfEqual {89}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X2, [X22]
	055 Move W1, W19
	056 Call List`1<Object>.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {89}
	059 Move X20, X0
	060 Move X0, [X0+24]
	061 Call Misc.DestroyImmediate, X0
	062 Move [X20+16], X31
	063 Move X0, [X21]
	064 Add W19, W19, 1
	065 Move W2, [X0+24]
	066 Move W8, [X0+28]
	067 Add W8, W8, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X0+24], W31
	070 Move [X0+28], W8
	071 Move X0, [X0+16]
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move W1, W31
	077 Move X3, X31
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call Array.Clear, X0, X1, X2
	081 Return 
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 Return 
	089 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03E45D30 BL 0x1C16DFC
	0x03E45D34 MOV X0, X21
	0x03E45D38 MOV X1, X31
	0x03E45D3C MOV X2, X31
	0x03E45D40 BL 0x3C354F8
	0x03E45D44 TBZ X0, 0x0, 0x3E45D78
	0x03E45D48 LDR X8, [X20 + 0xD8]
	0x03E45D4C CBZ X8, 0x3E45E98
	0x03E45D50 LDR X0, [X8 + 0x10]
	0x03E45D54 CBZ X0, 0x3E45E98
	0x03E45D58 MOV X1, X31
	0x03E45D5C BL 0x3CCEDE4
	0x03E45D60 TBZ X0, 0x0, 0x3E45D78
	0x03E45D64 LDR X8, [X20 + 0xD8]
	0x03E45D68 CBZ X8, 0x3E45E98
	0x03E45D6C LDR W21, [X8 + 0x18]
	0x03E45D70 LDUR V0, [X8 + 0x24]
	0x03E45D74 B 0x3E45D80
	0x03E45D78 MOV W21, W31
	0x03E45D7C MOVI V0.2D, 0x0
	0x03E45D80 LDR X8, [X20 + 0xD8]
	0x03E45D84 STR V0, [X31]
	0x03E45D88 CBZ X8, 0x3E45E98
	0x03E45D8C LDR W22, [X8 + 0x2C]
	0x03E45D90 LDRB W23, [X8 + 0x30]
	0x03E45D94 MOV X0, X20
	0x03E45D98 BL 0x3E458D0
	0x03E45D9C LDR X8, [X20]
	0x03E45DA0 MOV X0, X20
	0x03E45DA4 MOV V10.16B, V0.16B
	0x03E45DA8 LDR X9, [X8 + 0x298]
	0x03E45DAC LDR X1, [X8 + 0x2A0]
	0x03E45DB0 BLR X9
	0x03E45DB4 LDR X8, [X20 + 0xD8]
	0x03E45DB8 CBZ X8, 0x3E45E98

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5A4000
	007 Move X22, 0x327000
	008 Move X19, 0x327000
	009 Move X20, 0x314000
	010 Move W8, [X21+2029]
	011 Move X22, [X22+1192]
	012 Move X19, [X19+1200]
	013 Move X20, [X20+1848]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x327000
	019 Move X0, [X0+1200]
	020 Call 0x1C17CF4
	021 Move X0, 0x327000
	022 Move X0, [X0+1192]
	023 Call 0x1C17CF4
	024 Move X0, 0x314000
	025 Move X0, [X0+1848]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2029], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

