Type: UnityEngine.UI.Selectable

Method: UnityEngine.UI.Selectable[] get_allSelectablesArray()

Disassembly:
	0x03E41934 BL 0x3C35834
	0x03E41938 TBZ X0, 0x0, 0x3E41AF0
	0x03E4193C CMP W21, 0x4
	0x03E41940 B.HI 0x3E41994
	0x03E41944 ADRP X9, 0xFFFFFFFFFCD57000
	0x03E41948 MOV W8, W21
	0x03E4194C ADD X9, X9, 0x62C
	0x03E41950 ADR X10, 0x10
	0x03E41954 LDRB W11, [X9, X8, LSL]
	0x03E41958 ADD X10, X10, X11, 0x2, LSL
	0x03E4195C BR X10
	0x03E41960 ADRP X8, 0x2DA000
	0x03E41964 LDR X8, [X8 + 0x5E8]
	0x03E41968 LDR X0, [X8]
	0x03E4196C LDR W8, [X0 + 0xE0]
	0x03E41970 CBNZ W8, 0x3E41978
	0x03E41974 BL 0x1C16DFC
	0x03E41978 LDR X8, [X20 + 0xD0]
	0x03E4197C CBZ X8, 0x3E41B44
	0x03E41980 LDP S8, S10, [X20 + 0x54]
	0x03E41984 LDP S11, S9, [X20 + 0x5C]
	0x03E41988 MOV X1, X31
	0x03E4198C ADD X8, X8, 0x10
	0x03E41990 B 0x3E41A88
	0x03E41994 ADRP X8, 0x2B4000
	0x03E41998 LDR X8, [X8 + 0x278]
	0x03E4199C MOV X1, X31
	0x03E419A0 FMOV S9, 1
	0x03E419A4 FMOV S8, W31
	0x03E419A8 LDR X8, [X8]
	0x03E419AC FMOV S10, W31
	0x03E419B0 FMOV S11, W31
	0x03E419B4 LDR X8, [X8 + 0xB8]
	0x03E419B8 B 0x3E41A88
	0x03E419BC ADRP X8, 0x2DA000
	0x03E419C0 LDR X8, [X8 + 0x5E8]
	0x03E419C4 LDR X0, [X8]
	0x03E419C8 LDR W8, [X0 + 0xE0]
	0x03E419CC CBNZ W8, 0x3E419D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5A8000
	005 Move X19, 0x318000
	006 Move W8, [X20+1979]
	007 Move X19, [X19+2648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x32B000
	013 Move X0, [X0+880]
	014 Call 0x1C17CF4
	015 Move X0, 0x318000
	016 Move X0, [X0+2648]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1979], W8
	020 Move X0, [X19]
	021 Move X20, 0x32B000
	022 Move W8, [X0+224]
	023 Move X20, [X20+880]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X8, [X0+184]
	029 Move X0, [X20]
	030 Move W1, [X8+8]
	031 Call 0x1C17D6C
	032 Move X8, [X19]
	033 Move X19, X0
	034 Move X1, X19
	035 Move X3, X31
	036 Move X9, [X8+184]
	037 Move X8, [X9]
	038 Move W2, [X9+8]
	039 Move X0, X8
	040 Call Array.Copy, X0, X1, X2
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0

Method: System.Int32 get_allSelectableCount()

Disassembly:
	0x03E419D0 BL 0x1C16DFC
	0x03E419D4 LDR X8, [X20 + 0xD0]
	0x03E419D8 CBZ X8, 0x3E41B44
	0x03E419DC LDR X1, [X20 + 0xB0]
	0x03E419E0 LDP S8, S10, [X20 + 0x64]
	0x03E419E4 LDP S11, S9, [X20 + 0x6C]
	0x03E419E8 ADD X8, X8, 0x18
	0x03E419EC B 0x3E41A88
	0x03E419F0 ADRP X8, 0x2DA000
	0x03E419F4 LDR X8, [X8 + 0x5E8]
	0x03E419F8 LDR X0, [X8]
	0x03E419FC LDR W8, [X0 + 0xE0]
	0x03E41A00 CBNZ W8, 0x3E41A08
	0x03E41A04 BL 0x1C16DFC
	0x03E41A08 LDR X8, [X20 + 0xD0]
	0x03E41A0C CBZ X8, 0x3E41B44
	0x03E41A10 LDR X1, [X20 + 0xB8]
	0x03E41A14 LDP S8, S10, [X20 + 0x74]
	0x03E41A18 LDP S11, S9, [X20 + 0x7C]
	0x03E41A1C ADD X8, X8, 0x20
	0x03E41A20 B 0x3E41A88
	0x03E41A24 ADRP X8, 0x2DA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5A8000
	005 Move X19, 0x318000
	006 Move W8, [X20+1980]
	007 Move X19, [X19+2648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x318000
	013 Move X0, [X0+2648]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1980], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.UI.Selectable> get_allSelectables()

Disassembly:
	0x03E41A28 LDR X8, [X8 + 0x5E8]
	0x03E41A2C LDR X0, [X8]
	0x03E41A30 LDR W8, [X0 + 0xE0]
	0x03E41A34 CBNZ W8, 0x3E41A3C
	0x03E41A38 BL 0x1C16DFC
	0x03E41A3C LDR X8, [X20 + 0xD0]
	0x03E41A40 CBZ X8, 0x3E41B44
	0x03E41A44 LDR X1, [X20 + 0xC0]
	0x03E41A48 LDP S8, S10, [X20 + 0x84]
	0x03E41A4C LDP S11, S9, [X20 + 0x8C]
	0x03E41A50 ADD X8, X8, 0x28
	0x03E41A54 B 0x3E41A88
	0x03E41A58 ADRP X8, 0x2DA000
	0x03E41A5C LDR X8, [X8 + 0x5E8]
	0x03E41A60 LDR X0, [X8]
	0x03E41A64 LDR W8, [X0 + 0xE0]
	0x03E41A68 CBNZ W8, 0x3E41A70
	0x03E41A6C BL 0x1C16DFC
	0x03E41A70 LDR X8, [X20 + 0xD0]
	0x03E41A74 CBZ X8, 0x3E41B44
	0x03E41A78 LDR X1, [X20 + 0xC8]
	0x03E41A7C LDP S8, S10, [X20 + 0x94]
	0x03E41A80 LDP S11, S9, [X20 + 0x9C]
	0x03E41A84 ADD X8, X8, 0x30
	0x03E41A88 LDR W9, [X20 + 0x50]
	0x03E41A8C CMP W9, 0x3
	0x03E41A90 B.EQ 0x3E41B08
	0x03E41A94 CMP W9, 0x2
	0x03E41A98 B.EQ 0x3E41B28
	0x03E41A9C CMP W9, 0x1
	0x03E41AA0 B.NE 0x3E41AF0
	0x03E41AA4 ADRP X8, 0x2DA000
	0x03E41AA8 LDR X8, [X8 + 0x5E8]
	0x03E41AAC LDR X0, [X8]
	0x03E41AB0 LDR W8, [X0 + 0xE0]
	0x03E41AB4 CBNZ W8, 0x3E41ABC
	0x03E41AB8 BL 0x1C16DFC
	0x03E41ABC LDR V3, [X20 + 0xA4]
	0x03E41AC0 AND W1, W19, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5A8000
	005 Move X19, 0x318000
	006 Move W8, [X20+1981]
	007 Move X19, [X19+2648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x32B000
	013 Move X0, [X0+936]
	014 Call 0x1C17CF4
	015 Move X0, 0x32B000
	016 Move X0, [X0+944]
	017 Call 0x1C17CF4
	018 Move X0, 0x318000
	019 Move X0, [X0+2648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1981], W8
	023 Move X0, [X19]
	024 Move X19, 0x32B000
	025 Move X20, 0x32B000
	026 Move W8, [X0+224]
	027 Move X19, [X19+944]
	028 Move X20, [X20+936]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Call Selectable.get_allSelectablesArray
	033 Move X8, [X19]
	034 Move X19, X0
	035 Move X0, X8
	036 Call 0x1C17F10
	037 Move X2, [X20]
	038 Move X1, X19
	039 Move X20, X0
	040 Call List`1<Object>..ctor, X0, X1
	041 Move X0, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0

Method: System.Int32 AllSelectablesNoAlloc(UnityEngine.UI.Selectable[] selectables)

Disassembly:
	0x03E41AC4 MOV X0, X20
	0x03E41AC8 LDP X20, X19, [X31 + 0x40]
	0x03E41ACC FMUL S0, S8, S3
	0x03E41AD0 FMUL S1, S10, S3
	0x03E41AD4 FMUL S2, S11, S3
	0x03E41AD8 FMUL S3, S9, S3
	0x03E41ADC LDP X22, X21, [X31 + 0x30]
	0x03E41AE0 LDR X30, [X31 + 0x20]
	0x03E41AE4 LDP D9, D8, [X31 + 0x10]
	0x03E41AE8 LDP D11, D10, [X31], #0x50
	0x03E41AEC B 0x3E41594
	0x03E41AF0 LDP X20, X19, [X31 + 0x40]
	0x03E41AF4 LDP X22, X21, [X31 + 0x30]
	0x03E41AF8 LDR X30, [X31 + 0x20]
	0x03E41AFC LDP D9, D8, [X31 + 0x10]
	0x03E41B00 LDP D11, D10, [X31], #0x50
	0x03E41B04 RET
	0x03E41B08 LDR X1, [X8]
	0x03E41B0C MOV X0, X20
	0x03E41B10 LDP X20, X19, [X31 + 0x40]
	0x03E41B14 LDP X22, X21, [X31 + 0x30]
	0x03E41B18 LDR X30, [X31 + 0x20]
	0x03E41B1C LDP D9, D8, [X31 + 0x10]
	0x03E41B20 LDP D11, D10, [X31], #0x50
	0x03E41B24 B 0x3E4174C
	0x03E41B28 MOV X0, X20
	0x03E41B2C LDP X20, X19, [X31 + 0x40]
	0x03E41B30 LDP X22, X21, [X31 + 0x30]
	0x03E41B34 LDR X30, [X31 + 0x20]
	0x03E41B38 LDP D9, D8, [X31 + 0x10]
	0x03E41B3C LDP D11, D10, [X31], #0x50
	0x03E41B40 B 0x3E416A4
	0x03E41B44 BL 0x1C16F20
	0x03E41B48 SUB X31, X31, 0xC0
	0x03E41B4C STP D15, D14, [X31 + 0x20]
	0x03E41B50 STP D13, D12, [X31 + 0x30]
	0x03E41B54 STP D11, D10, [X31 + 0x40]
	0x03E41B58 STP D9, D8, [X31 + 0x50]
	0x03E41B5C STP X29, X30, [X31 + 0x60]
	0x03E41B60 STP X28, X27, [X31 + 0x70]
	0x03E41B64 STP X26, X25, [X31 + 0x80]
	0x03E41B68 STP X24, X23, [X31 + 0x90]
	0x03E41B6C STP X22, X21, [X31 + 0xA0]
	0x03E41B70 STP X20, X19, [X31 + 0xB0]
	0x03E41B74 ADRP X20, 0x5A7000
	0x03E41B78 LDRB W8, [X20 + 0x7CE]
	0x03E41B7C MOV V10.16B, V2.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5A8000
	006 Move W8, [X20+1982]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x318000
	013 Move X0, [X0+2648]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1982], W8
	017 Compare X19, 0
	018 JumpIfEqual {56}
	019 Move X21, 0x318000
	020 Move X21, [X21+2648]
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move W20, [X19+24]
	029 Move W8, [X8+8]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfEqual {35}
	034 Move W20, W8
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move W20, [X8+8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X1, X19
	046 Move W2, W20
	047 Move X3, X31
	048 Move X0, [X8]
	049 Call Array.Copy, X0, X1, X2
	050 Move W0, W20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: UnityEngine.UI.Navigation get_navigation()

Disassembly:
	0x03E41B80 MOV V9.16B, V1.16B
	0x03E41B84 MOV V8.16B, V0.16B
	0x03E41B88 MOV X19, X0
	0x03E41B8C TBNZ X8, 0x0, 0x3E41BBC
	0x03E41B90 ADRP X0, 0x2B2000
	0x03E41B94 LDR X0, [X0 + 0x598]

ISIL:
	001 Move X9, [X0+72]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move [X8+32], X9
	005 Move [X8], V1
	006 Move [X8+8], V0
	007 Return X0

Method: System.Void set_navigation(UnityEngine.UI.Navigation value)

Disassembly:
	0x03E41B98 BL 0x1C16CF4
	0x03E41B9C ADRP X0, 0x2D9000
	0x03E41BA0 LDR X0, [X0 + 0xC70]
	0x03E41BA4 BL 0x1C16CF4
	0x03E41BA8 ADRP X0, 0x317000
	0x03E41BAC LDR X0, [X0 + 0xA58]
	0x03E41BB0 BL 0x1C16CF4
	0x03E41BB4 MOVZ W8, 0x1
	0x03E41BB8 STRB W8, [X20 + 0x7CE]
	0x03E41BBC ADRP X20, 0x597000
	0x03E41BC0 LDRB W8, [X20 + 0x785]
	0x03E41BC4 CBNZ W8, 0x3E41BDC
	0x03E41BC8 ADRP X0, 0x2B2000
	0x03E41BCC LDR X0, [X0 + 0x5A8]
	0x03E41BD0 BL 0x1C16CF4
	0x03E41BD4 MOVZ W8, 0x1
	0x03E41BD8 STRB W8, [X20 + 0x785]
	0x03E41BDC ADRP X8, 0x2B2000
	0x03E41BE0 LDR X8, [X8 + 0x5A8]
	0x03E41BE4 LDR X0, [X8]
	0x03E41BE8 LDR W8, [X0 + 0xE0]
	0x03E41BEC CBNZ W8, 0x3E41BF4
	0x03E41BF0 BL 0x1C16DFC
	0x03E41BF4 ADRP X8, 0xFFFFFFFFFCCA9000
	0x03E41BF8 FMUL S0, S8, S8
	0x03E41BFC FMUL S1, S9, S9
	0x03E41C00 LDR V3, [X8 + 0x17C]
	0x03E41C04 FMUL S2, S10, S10
	0x03E41C08 FADD S0, S0, S1
	0x03E41C0C FADD S0, S2, S0
	0x03E41C10 FSQRT S0, S0
	0x03E41C14 FCMP S0, S3
	0x03E41C18 ADRP X27, 0x597000
	0x03E41C1C B.LE 0x3E41C34

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x5A8000
	008 Move X21, 0x32B000
	009 Move W8, [X22+1983]
	010 Move X21, [X21+952]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x32B000
	018 Move X0, [X0+952]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1983], W8
	022 Move X8, [X20+32]
	023 Move V0, [X20]
	024 Move V1, [X20+16]
	025 Move X2, [X21]
	026 Add X0, X19, 40
	027 Add X1, X31, 48
	028 Move [X31+32], X8
	029 Move [X31], V0
	030 Move [X31+8], V1
	031 Move [X31+48], V0
	032 Move [X31+56], V1
	033 Move [X31+80], X8
	034 Call SetPropertyUtility.SetStruct, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {41}
	039 Move X0, X19
	040 Call Selectable.OnSetProperty, X0
	041 Move X20, [X31+128]
	042 Move X19, [X31+136]
	043 Move X22, [X31+112]
	044 Move X21, [X31+120]
	045 Move X30, [X31+96]
	046 Add X31, X31, 144
	047 Return 

Method: UnityEngine.UI.Selectable/Transition get_transition()

Disassembly:
	0x03E41C84 MOV X1, X31
	0x03E41C88 BL 0x3C3DEB4

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_transition(UnityEngine.UI.Selectable/Transition value)

Disassembly:
	0x03E41C8C MOV X0, X31
	0x03E41C90 BL 0x3C2A260
	0x03E41C94 LDP S5, S4, [X31 + 0x18]
	0x03E41C98 MOV V6.16B, V10.16B
	0x03E41C9C MOV X0, X31
	0x03E41CA0 BL 0x3C2A9FC
	0x03E41CA4 MOV X0, X19
	0x03E41CA8 MOV X1, X31
	0x03E41CAC MOV V11.16B, V0.16B
	0x03E41CB0 MOV V12.16B, V1.16B
	0x03E41CB4 BL 0x3C32E90
	0x03E41CB8 MOV X21, X0
	0x03E41CBC MOV X0, X19
	0x03E41CC0 MOV X1, X31
	0x03E41CC4 BL 0x3C32E90
	0x03E41CC8 LDR X8, [X26]
	0x03E41CCC MOV X22, X0
	0x03E41CD0 LDR W9, [X8 + 0xE0]
	0x03E41CD4 CBNZ W9, 0x3E41CE0
	0x03E41CD8 MOV X0, X8
	0x03E41CDC BL 0x1C16DFC
	0x03E41CE0 ADRP X20, 0x2D9000
	0x03E41CE4 LDR X20, [X20 + 0xC70]
	0x03E41CE8 CBZ X22, 0x3E41D00
	0x03E41CEC LDR X8, [X20]
	0x03E41CF0 LDR X9, [X22]
	0x03E41CF4 CMP X9, X8
	0x03E41CF8 CSEL X0, X22, X31, EQ
	0x03E41CFC B 0x3E41D04

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5A8000
	007 Move X21, 0x32B000
	008 Move W8, [X22+1984]
	009 Move X21, [X21+960]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x32B000
	017 Move X0, [X0+960]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1984], W8
	021 Move X2, [X21]
	022 Add X0, X19, 80
	023 Move W1, W20
	024 Call SetPropertyUtility.SetStruct, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {37}
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call Selectable.OnSetProperty, X0
	036 Return 
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: UnityEngine.UI.ColorBlock get_colors()

Disassembly:
	0x03E41D00 MOV X0, X31
	0x03E41D04 MOV V0.16B, V11.16B
	0x03E41D08 MOV V1.16B, V12.16B
	0x03E41D0C BL 0x3E41FFC

ISIL:
	001 Add X1, X0, 84
	002 Move W2, 88
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_colors(UnityEngine.UI.ColorBlock value)

Disassembly:
	0x03E41D10 CBZ X21, 0x3E41FF4
	0x03E41D14 MOV X0, X21
	0x03E41D18 MOV X1, X31
	0x03E41D1C BL 0x3C3DE4C
	0x03E41D20 LDRB W8, [X19 + 0x2C]
	0x03E41D24 MOV V11.16B, V0.16B
	0x03E41D28 MOV V12.16B, V1.16B
	0x03E41D2C MOV V13.16B, V2.16B
	0x03E41D30 CBZ W8, 0x3E41D4C
	0x03E41D34 LDR W8, [X19 + 0x28]
	0x03E41D38 MOV X22, X20
	0x03E41D3C SUB W8, W8, 0x1
	0x03E41D40 CMP W8, 0x1
	0x03E41D44 CSET W29, HI
	0x03E41D48 B 0x3E41D54
	0x03E41D4C MOV X22, X20
	0x03E41D50 MOVZ W29, 0x1
	0x03E41D54 STR X31, [X31 + 0x8]
	0x03E41D58 ADRP X28, 0x2B2000
	0x03E41D5C LDR X28, [X28 + 0x598]
	0x03E41D60 MOVZ W9, 0xFF800000
	0x03E41D64 EOR W8, W29, 0x1
	0x03E41D68 FMOV S9, W9
	0x03E41D6C MOV X20, X31
	0x03E41D70 MOV X21, X31
	0x03E41D74 EOR W25, W8, 0x1
	0x03E41D78 STR S9, [X31 + 0x14]
	0x03E41D7C LDR X0, [X26]
	0x03E41D80 LDR W8, [X0 + 0xE0]
	0x03E41D84 CBNZ W8, 0x3E41D90
	0x03E41D88 BL 0x1C16DFC
	0x03E41D8C LDR X0, [X26]
	0x03E41D90 LDR X8, [X0 + 0xB8]
	0x03E41D94 LDRSW X8, [X8 + 0x8]
	0x03E41D98 CMP X20, X8
	0x03E41D9C B.GE 0x3E41F90
	0x03E41DA0 LDR W8, [X0 + 0xE0]
	0x03E41DA4 CBNZ W8, 0x3E41DB0

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+192], X22
	004 Move [X31+200], X21
	005 Move [X31+208], X20
	006 Move [X31+216], X19
	007 Move X21, 0x5A8000
	008 Move X22, 0x32B000
	009 Move W8, [X21+1985]
	010 Move X22, [X22+968]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x32B000
	018 Move X0, [X0+968]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1985], W8
	022 Add X0, X31, 0
	023 Move W2, 88
	024 Move X1, X20
	025 Add X21, X19, 84
	026 Call 0x3EB2AC0
	027 Move X20, [X22]
	028 Add X0, X31, 88
	029 Add X1, X31, 0
	030 Move W2, 88
	031 Call 0x3EB2AC0
	032 Add X1, X31, 88
	033 Move X0, X21
	034 Move X2, X20
	035 Call SetPropertyUtility.SetStruct, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {42}
	040 Move X0, X19
	041 Call Selectable.OnSetProperty, X0
	042 Move X20, [X31+208]
	043 Move X19, [X31+216]
	044 Move X22, [X31+192]
	045 Move X21, [X31+200]
	046 Move X30, [X31+176]
	047 Add X31, X31, 224
	048 Return 

Method: UnityEngine.UI.SpriteState get_spriteState()

Disassembly:
	0x03E41DA8 BL 0x1C16DFC
	0x03E41DAC LDR X0, [X26]
	0x03E41DB0 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move V1, [X0+176]
	002 Move V0, [X0+192]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void set_spriteState(UnityEngine.UI.SpriteState value)

Disassembly:
	0x03E41DB4 LDR X8, [X8]
	0x03E41DB8 CBZ X8, 0x3E41FF4
	0x03E41DBC LDR W9, [X8 + 0x18]
	0x03E41DC0 CMP X20, X9
	0x03E41DC4 B.CS 0x3E41FF8
	0x03E41DC8 LDR X0, [X28]
	0x03E41DCC ADD X8, X8, X20, 0x3, LSL
	0x03E41DD0 LDR X23, [X8 + 0x20]
	0x03E41DD4 LDR W9, [X0 + 0xE0]
	0x03E41DD8 CBNZ W9, 0x3E41DE0
	0x03E41DDC BL 0x1C16DFC
	0x03E41DE0 MOV X0, X23
	0x03E41DE4 MOV X1, X19
	0x03E41DE8 MOV X2, X31
	0x03E41DEC BL 0x3C3883C
	0x03E41DF0 TBNZ X0, 0x0, 0x3E41F80
	0x03E41DF4 CBZ X23, 0x3E41FF4
	0x03E41DF8 LDR X8, [X23]
	0x03E41DFC MOV X0, X23
	0x03E41E00 LDR X9, [X8 + 0x2B8]
	0x03E41E04 LDR X1, [X8 + 0x2C0]
	0x03E41E08 BLR X9
	0x03E41E0C TBZ X0, 0x0, 0x3E41F80
	0x03E41E10 LDR W8, [X23 + 0x28]
	0x03E41E14 CBZ W8, 0x3E41F80
	0x03E41E18 MOV X0, X23
	0x03E41E1C MOV X1, X31
	0x03E41E20 BL 0x3C32E90
	0x03E41E24 CBZ X0, 0x3E41E3C
	0x03E41E28 LDR X8, [X22]
	0x03E41E2C LDR X9, [X0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x5A8000
	008 Move X21, 0x32B000
	009 Move W8, [X22+1986]
	010 Move X21, [X21+976]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x32B000
	018 Move X0, [X0+976]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1986], W8
	022 Move V1, [X20]
	023 Move V0, [X20+16]
	024 Move X2, [X21]
	025 Add X0, X19, 176
	026 Add X1, X31, 32
	027 Move [X31], V1
	028 Move [X31+8], V0
	029 Move [X31+32], V1
	030 Move [X31+40], V0
	031 Call SetPropertyUtility.SetStruct, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {38}
	036 Move X0, X19
	037 Call Selectable.OnSetProperty, X0
	038 Move X20, [X31+96]
	039 Move X19, [X31+104]
	040 Move X22, [X31+80]
	041 Move X21, [X31+88]
	042 Move X30, [X31+64]
	043 Add X31, X31, 112
	044 Return 

Method: UnityEngine.UI.AnimationTriggers get_animationTriggers()

Disassembly:
	0x03E41E30 CMP X9, X8
	0x03E41E34 CSEL X24, X0, X31, EQ

ISIL:
	001 Move X0, [X0+208]
	002 Return X0

Method: System.Void set_animationTriggers(UnityEngine.UI.AnimationTriggers value)

Disassembly:
	0x03E41E38 B 0x3E41E40
	0x03E41E3C MOV X24, X31
	0x03E41E40 LDR X0, [X28]
	0x03E41E44 LDR W8, [X0 + 0xE0]
	0x03E41E48 CBNZ W8, 0x3E41E50
	0x03E41E4C BL 0x1C16DFC
	0x03E41E50 MOV X0, X24
	0x03E41E54 MOV X1, X31
	0x03E41E58 MOV X2, X31
	0x03E41E5C BL 0x3C354F8
	0x03E41E60 TBZ X0, 0x0, 0x3E41E90
	0x03E41E64 CBZ X24, 0x3E41FF4
	0x03E41E68 MOV X0, X24
	0x03E41E6C MOV X1, X31
	0x03E41E70 BL 0x3C3E51C
	0x03E41E74 FMOV S4, 0.5
	0x03E41E78 FMUL S2, S2, S4
	0x03E41E7C FMUL S3, S3, S4
	0x03E41E80 FADD S14, S0, S2
	0x03E41E84 FADD S15, S1, S3
	0x03E41E88 FMOV S8, W31
	0x03E41E8C B 0x3E41EC4
	0x03E41E90 LDRB W8, [X27 + 0x783]
	0x03E41E94 CBNZ W8, 0x3E41EAC
	0x03E41E98 ADRP X0, 0x2B2000
	0x03E41E9C LDR X0, [X0 + 0x5A0]
	0x03E41EA0 BL 0x1C16CF4
	0x03E41EA4 MOVZ W8, 0x1
	0x03E41EA8 STRB W8, [X27 + 0x783]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5A8000
	007 Move X21, 0x32B000
	008 Move W8, [X22+1987]
	009 Move X21, [X21+984]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x32B000
	017 Move X0, [X0+984]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1987], W8
	021 Move X2, [X21]
	022 Add X0, X19, 208
	023 Move X1, X20
	024 Call 0x2255190, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {37}
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call Selectable.OnSetProperty, X0
	036 Return 
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: UnityEngine.UI.Graphic get_targetGraphic()

Disassembly:
	0x03E41EAC ADRP X8, 0x2B2000
	0x03E41EB0 LDR X8, [X8 + 0x5A0]

ISIL:
	001 Move X0, [X0+224]
	002 Return X0

Method: System.Void set_targetGraphic(UnityEngine.UI.Graphic value)

Disassembly:
	0x03E41EB4 LDR X8, [X8]
	0x03E41EB8 LDR X8, [X8 + 0xB8]
	0x03E41EBC LDP S14, S15, [X8]
	0x03E41EC0 LDR V8, [X8 + 0x8]
	0x03E41EC4 MOV X0, X23
	0x03E41EC8 MOV X1, X31
	0x03E41ECC BL 0x3C32E90
	0x03E41ED0 CBZ X0, 0x3E41FF4
	0x03E41ED4 MOV V0.16B, V14.16B
	0x03E41ED8 MOV V1.16B, V15.16B
	0x03E41EDC MOV V2.16B, V8.16B
	0x03E41EE0 MOV X1, X31
	0x03E41EE4 BL 0x3C3DE4C
	0x03E41EE8 FSUB S4, S0, S11
	0x03E41EEC FSUB S3, S1, S12
	0x03E41EF0 FSUB S0, S2, S13
	0x03E41EF4 LDP S2, S1, [X31 + 0x18]
	0x03E41EF8 FMUL S1, S1, S4
	0x03E41EFC FMUL S2, S2, S3
	0x03E41F00 FADD S1, S1, S2
	0x03E41F04 FMUL S2, S10, S0
	0x03E41F08 FADD S1, S2, S1
	0x03E41F0C FCMP S1, 0x0
	0x03E41F10 CSET W8, PL
	0x03E41F14 ORR W8, W8, W25, 0x0
	0x03E41F18 TBNZ X8, 0x0, 0x3E41F48
	0x03E41F1C FMUL S2, S4, S4
	0x03E41F20 FMUL S3, S3, S3
	0x03E41F24 FMUL S0, S0, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5A8000
	007 Move X21, 0x32A000
	008 Move W8, [X22+1988]
	009 Move X21, [X21+3928]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x32A000
	017 Move X0, [X0+3928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1988], W8
	021 Move X2, [X21]
	022 Add X0, X19, 224
	023 Move X1, X20
	024 Call 0x2255190, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {37}
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call Selectable.OnSetProperty, X0
	036 Return 
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Boolean get_interactable()

Disassembly:
	0x03E41F28 FADD S2, S2, S3
	0x03E41F2C FADD S0, S0, S2

ISIL:
	001 Move W0, [X0+216]
	002 Return X0

Method: System.Void set_interactable(System.Boolean value)

Disassembly:
	0x03E41F30 FNEG S1, S1
	0x03E41F34 FMUL S0, S0, S1
	0x03E41F38 FCMP S0, S9
	0x03E41F3C B.LE 0x3E41F80
	0x03E41F40 MOV X21, X23
	0x03E41F44 B 0x3E41F84
	0x03E41F48 B.LS 0x3E41F80
	0x03E41F4C FMUL S2, S4, S4
	0x03E41F50 FMUL S3, S3, S3
	0x03E41F54 FADD S2, S2, S3
	0x03E41F58 FMUL S0, S0, S0
	0x03E41F5C FADD S0, S0, S2
	0x03E41F60 FDIV S1, S1, S0
	0x03E41F64 LDR V0, [X31 + 0x14]
	0x03E41F68 FCMP S1, S0
	0x03E41F6C B.LE 0x3E41F80
	0x03E41F70 MOV V0.16B, V9.16B
	0x03E41F74 STR X23, [X31 + 0x8]
	0x03E41F78 STR S1, [X31 + 0x14]
	0x03E41F7C B 0x3E41F84
	0x03E41F80 MOV V0.16B, V9.16B
	0x03E41F84 ADD X20, X20, 0x1
	0x03E41F88 MOV V9.16B, V0.16B
	0x03E41F8C B 0x3E41D7C
	0x03E41F90 LDR X19, [X31 + 0x8]
	0x03E41F94 TBNZ X29, 0x0, 0x3E41FBC
	0x03E41F98 LDR X0, [X28]
	0x03E41F9C LDR W8, [X0 + 0xE0]
	0x03E41FA0 CBNZ W8, 0x3E41FA8
	0x03E41FA4 BL 0x1C16DFC
	0x03E41FA8 MOV X0, X31
	0x03E41FAC MOV X1, X19
	0x03E41FB0 MOV X2, X31
	0x03E41FB4 BL 0x3C3883C
	0x03E41FB8 TBNZ X0, 0x0, 0x3E41FC0
	0x03E41FBC MOV X21, X19
	0x03E41FC0 MOV X0, X21
	0x03E41FC4 LDP X20, X19, [X31 + 0xB0]
	0x03E41FC8 LDP X22, X21, [X31 + 0xA0]
	0x03E41FCC LDP X24, X23, [X31 + 0x90]
	0x03E41FD0 LDP X26, X25, [X31 + 0x80]
	0x03E41FD4 LDP X28, X27, [X31 + 0x70]
	0x03E41FD8 LDP X29, X30, [X31 + 0x60]
	0x03E41FDC LDP D9, D8, [X31 + 0x50]
	0x03E41FE0 LDP D11, D10, [X31 + 0x40]
	0x03E41FE4 LDP D13, D12, [X31 + 0x30]
	0x03E41FE8 LDP D15, D14, [X31 + 0x20]
	0x03E41FEC ADD X31, X31, 0xC0
	0x03E41FF0 RET
	0x03E41FF4 BL 0x1C16F20
	0x03E41FF8 BL 0x1C16F28
	0x03E41FFC STR D12, [X31 - 0x50]!
	0x03E42000 STP D11, D10, [X31 + 0x10]
	0x03E42004 STP D9, D8, [X31 + 0x20]
	0x03E42008 STP X30, X21, [X31 + 0x30]
	0x03E4200C STP X20, X19, [X31 + 0x40]
	0x03E42010 ADRP X20, 0x5A6000
	0x03E42014 ADRP X21, 0x2B1000
	0x03E42018 LDRB W8, [X20 + 0x7CF]
	0x03E4201C LDR X21, [X21 + 0x598]
	0x03E42020 MOV V8.16B, V1.16B
	0x03E42024 MOV V9.16B, V0.16B
	0x03E42028 MOV X19, X0
	0x03E4202C TBNZ X8, 0x0, 0x3E42044
	0x03E42030 ADRP X0, 0x2B1000
	0x03E42034 LDR X0, [X0 + 0x598]
	0x03E42038 BL 0x1C16CF4
	0x03E4203C MOVZ W8, 0x1
	0x03E42040 STRB W8, [X20 + 0x7CF]
	0x03E42044 LDR X0, [X21]
	0x03E42048 LDR W8, [X0 + 0xE0]
	0x03E4204C CBNZ W8, 0x3E42054
	0x03E42050 BL 0x1C16DFC
	0x03E42054 MOV X0, X19
	0x03E42058 MOV X1, X31
	0x03E4205C MOV X2, X31
	0x03E42060 BL 0x3C3883C
	0x03E42064 TBZ X0, 0x0, 0x3E420A4
	0x03E42068 ADRP X19, 0x596000
	0x03E4206C LDRB W8, [X19 + 0x783]
	0x03E42070 CBNZ W8, 0x3E42088
	0x03E42074 ADRP X0, 0x2B1000
	0x03E42078 LDR X0, [X0 + 0x5A0]
	0x03E4207C BL 0x1C16CF4
	0x03E42080 MOVZ W8, 0x1
	0x03E42084 STRB W8, [X19 + 0x783]
	0x03E42088 ADRP X8, 0x2B1000
	0x03E4208C LDR X8, [X8 + 0x5A0]
	0x03E42090 LDR X8, [X8]
	0x03E42094 LDR X8, [X8 + 0xB8]
	0x03E42098 LDP S0, S1, [X8]
	0x03E4209C LDR V2, [X8 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5A8000
	007 Move X21, 0x322000
	008 Move W8, [X22+1989]
	009 Move X21, [X21+1424]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x2DA000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x2B3000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x322000
	023 Move X0, [X0+1424]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1989], W8
	027 Move X2, [X21]
	028 Add X21, X19, 216
	029 And W1, W20, 1
	030 Move X0, X21
	031 Call 0x22551E0, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {113}
	036 Move W8, [X21]
	037 Compare W8, 0
	038 JumpIfNotEqual {105}
	039 Move X22, 0x2DA000
	040 Move X22, [X22+3576]
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X31
	047 Call EventSystem.get_current
	048 Move X21, 0x2B3000
	049 Move X21, [X21+1432]
	050 Move X20, X0
	051 Move X8, [X21]
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {105}
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X31
	071 Call EventSystem.get_current
	072 Compare X0, 0
	073 JumpIfEqual {119}
	074 Move X20, [X0+64]
	075 Move X0, X19
	076 Move X1, X31
	077 Call Component.get_gameObject, X0
	078 Move X8, [X21]
	079 Move X21, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X21
	087 Move X2, X31
	088 Call Object.op_Equality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {105}
	093 Move X0, [X22]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X31
	099 Call EventSystem.get_current
	100 Compare X0, 0
	101 JumpIfEqual {119}
	102 Move X1, X31
	103 Move X2, X31
	104 Call EventSystem.SetSelectedGameObject, X0, X1
	105 Move X0, X19
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Call Selectable.OnSetProperty, X0
	112 Return 
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X30, [X31+48]
	118 Return 
	119 Call 0x1C17F20

Method: System.Boolean get_isPointerInside()

Disassembly:
	0x03E420A0 B 0x3E42160
	0x03E420A4 ADRP X20, 0x597000

ISIL:
	001 Move W0, [X0+240]
	002 Return X0

Method: System.Void set_isPointerInside(System.Boolean value)

Disassembly:
	0x03E420A8 LDRB W8, [X20 + 0x78F]
	0x03E420AC CBNZ W8, 0x3E420C4
	0x03E420B0 ADRP X0, 0x2B9000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+240], W8
	003 Return 

Method: System.Boolean get_isPointerDown()

Disassembly:
	0x03E420B4 LDR X0, [X0 + 0xF08]
	0x03E420B8 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+241]
	002 Return X0

Method: System.Void set_isPointerDown(System.Boolean value)

Disassembly:
	0x03E420BC MOVZ W8, 0x1
	0x03E420C0 STRB W8, [X20 + 0x78F]
	0x03E420C4 ADRP X8, 0x2B9000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+241], W8
	003 Return 

Method: System.Boolean get_hasSelection()

Disassembly:
	0x03E420C8 LDR X8, [X8 + 0xF08]
	0x03E420CC LDR X8, [X8]

ISIL:
	001 Move W0, [X0+242]
	002 Return X0

Method: System.Void set_hasSelection(System.Boolean value)

Disassembly:
	0x03E420D0 LDR X8, [X8 + 0xB8]
	0x03E420D4 LDP S0, S1, [X8]
	0x03E420D8 ADRP X8, 0xFFFFFFFFFCCA7000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+242], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E3C678 LDP S8, S9, [X1 + 0xE4]
	0x03E3C67C MOV X19, X0
	0x03E3C680 MOV X0, X1
	0x03E3C684 MOV X1, X31
	0x03E3C688 BL 0x3E4F284
	0x03E3C68C MOV X1, X0
	0x03E3C690 MOV X0, X19
	0x03E3C694 LDP X30, X19, [X31 + 0x10]
	0x03E3C698 MOV V0.16B, V8.16B
	0x03E3C69C MOV V1.16B, V9.16B
	0x03E3C6A0 LDP D9, D8, [X31], #0x20
	0x03E3C6A4 B 0x3E3C5E8
	0x03E3C6A8 BL 0x1C16F20
	0x03E3C6AC STR X30, [X31 - 0x20]!
	0x03E3C6B0 STP X20, X19, [X31 + 0x10]
	0x03E3C6B4 MOV W19, W1
	0x03E3C6B8 MOV X1, X31
	0x03E3C6BC MOV X20, X0
	0x03E3C6C0 BL 0x33BDD8C
	0x03E3C6C4 STR W19, [X20 + 0x10]
	0x03E3C6C8 LDP X20, X19, [X31 + 0x10]
	0x03E3C6CC LDR X30, [X31], #0x20
	0x03E3C6D0 RET
	0x03E3C6D4 STP X30, X19, [X31 - 0x10]!
	0x03E3C6D8 MOV X19, X0
	0x03E3C6DC BL 0x3E3C6EC
	0x03E3C6E0 STRB W31, [X19 + 0x140]
	0x03E3C6E4 LDP X30, X19, [X31], #0x10
	0x03E3C6E8 RET
	0x03E3C6EC STR X30, [X31 - 0x10]!
	0x03E3C6F0 CBZ X1, 0x3E3C710
	0x03E3C6F4 LDR W8, [X1 + 0x148]
	0x03E3C6F8 CBZ W8, 0x3E3C704
	0x03E3C6FC LDR X30, [X31], #0x10
	0x03E3C700 RET
	0x03E3C704 STRB W31, [X0 + 0xF1]
	0x03E3C708 LDR X30, [X31], #0x10
	0x03E3C70C B 0x3E42290
	0x03E3C710 BL 0x1C16F20
	0x03E3C714 STP X30, X21, [X31 - 0x20]!
	0x03E3C718 STP X20, X19, [X31 + 0x10]
	0x03E3C71C ADRP X21, 0x5AC000
	0x03E3C720 LDRB W8, [X21 + 0x79E]
	0x03E3C724 MOV X20, X1
	0x03E3C728 MOV X19, X0
	0x03E3C72C TBNZ X8, 0x0, 0x3E3C744
	0x03E3C730 ADRP X0, 0x2B7000
	0x03E3C734 LDR X0, [X0 + 0x598]
	0x03E3C738 BL 0x1C16CF4
	0x03E3C73C MOVZ W8, 0x1
	0x03E3C740 STRB W8, [X21 + 0x79E]
	0x03E3C744 LDR X8, [X19]
	0x03E3C748 MOV X0, X19
	0x03E3C74C LDP X9, X1, [X8 + 0x1C8]
	0x03E3C750 BLR X9
	0x03E3C754 TBZ X0, 0x0, 0x3E3C8D8
	0x03E3C758 LDR X8, [X19]
	0x03E3C75C MOV X0, X19
	0x03E3C760 LDR X9, [X8 + 0x2B8]
	0x03E3C764 LDR X1, [X8 + 0x2C0]
	0x03E3C768 BLR X9
	0x03E3C76C TBZ X0, 0x0, 0x3E3C8D8
	0x03E3C770 CBZ X20, 0x3E3C958
	0x03E3C774 LDR W8, [X20 + 0x28]
	0x03E3C778 CMP W8, 0x3
	0x03E3C77C B.HI 0x3E3C8EC
	0x03E3C780 ADRP X9, 0xFFFFFFFFFCD5C000
	0x03E3C784 ADD X9, X9, 0x624
	0x03E3C788 ADR X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5AD000
	008 Move X20, 0x2E0000
	009 Move W8, [X21+1990]
	010 Move X20, [X20+1512]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x330000
	017 Move X0, [X0+848]
	018 Call 0x1C17CF4
	019 Move X0, 0x2E0000
	020 Move X0, [X0+1512]
	021 Call 0x1C17CF4
	022 Move X0, 0x330000
	023 Move X0, [X0+856]
	024 Call 0x1C17CF4
	025 Move X0, 0x330000
	026 Move X0, [X0+864]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1990], W8
	030 Move W8, 3
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move X9, 1
	033 Move [X19+44], W31
	034 Move [X19+40], W8
	035 Move [X19+45], V0
	036 Move [X19+61], V0
	037 Move [X19+76], X9
	038 Move X0, [X20]
	039 Move X23, 0x330000
	040 Move X22, 0x330000
	041 Move X21, 0x330000
	042 Move W8, [X0+224]
	043 Move X23, [X23+848]
	044 Move X22, [X22+864]
	045 Move X21, [X21+856]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X1, [X0+184]
	051 Add X0, X19, 84
	052 Move W2, 88
	053 Call 0x3EB2B30
	054 Move X0, [X23]
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X20, X0
	058 Call AnimationTriggers..ctor, X0
	059 Move W8, 1
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W9, TEMP
	063 Move [X19+208], X20
	064 Move [X19+216], W8
	065 Move [X19+232], W8
	066 Move [X19+236], W9
	067 Move X0, [X22]
	068 Call 0x1C17F10
	069 Move X1, [X21]
	070 Move X20, X0
	071 Call List`1<Object>..ctor, X0
	072 Move [X19+248], X20
	073 Move X0, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X1, X31
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Call UIBehaviour..ctor, X0
	082 Return 

Method: UnityEngine.UI.Image get_image()

Disassembly:
	0x03E420DC LDR V2, [X8 + 0xF20]
	0x03E420E0 FSUB S0, S9, S0
	0x03E420E4 FSUB S1, S8, S1
	0x03E420E8 FMUL S0, S0, S0
	0x03E420EC FMUL S1, S1, S1
	0x03E420F0 FADD S0, S0, S1
	0x03E420F4 FCMP S0, S2
	0x03E420F8 B.MI 0x3E42114
	0x03E420FC FABS S0, S9
	0x03E42100 FABS S1, S8
	0x03E42104 FCMP S0, S1
	0x03E42108 FCSEL S0, S0, S1, GT
	0x03E4210C FDIV S9, S9, S0
	0x03E42110 FDIV S8, S8, S0
	0x03E42114 CBZ X19, 0x3E42178
	0x03E42118 MOV X0, X19
	0x03E4211C MOV X1, X31
	0x03E42120 BL 0x3C3E51C
	0x03E42124 FMOV S10, 0.5
	0x03E42128 FMUL S2, S2, S10
	0x03E4212C FMUL S3, S3, S10
	0x03E42130 MOV X0, X19
	0x03E42134 MOV X1, X31
	0x03E42138 FADD S11, S0, S2
	0x03E4213C FADD S12, S1, S3
	0x03E42140 BL 0x3C3E51C
	0x03E42144 FMUL S0, S9, S10
	0x03E42148 FMUL S1, S8, S10
	0x03E4214C FMUL S0, S0, S2
	0x03E42150 FMUL S1, S1, S3
	0x03E42154 FADD S0, S11, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5A7000
	005 Move W8, [X20+1991]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x321000
	012 Move X0, [X0+1408]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1991], W8
	016 Move X8, [X19+224]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X9, 0x321000
	020 Move X9, [X9+1408]
	021 Move X10, [X8]
	022 Move X9, [X9]
	023 Move W12, [X10+304]
	024 Move W11, [X9+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X31
	027 Move X10, [X10+200]
	028 Add X10, X10, X11
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void set_image(UnityEngine.UI.Image value)

Disassembly:
	0x03E42158 FADD S1, S12, S1
	0x03E4215C FMOV S2, W31

ISIL:
	001 Move [X0+224], X1
	002 Return 

Method: UnityEngine.Animator get_animator()

Disassembly:
	0x03E42160 LDP X20, X19, [X31 + 0x40]
	0x03E42164 LDP X30, X21, [X31 + 0x30]
	0x03E42168 LDP D9, D8, [X31 + 0x20]
	0x03E4216C LDP D11, D10, [X31 + 0x10]
	0x03E42170 LDR V12, [X31], #0x50
	0x03E42174 RET
	0x03E42178 BL 0x1C16F20
	0x03E4217C STR X30, [X31 - 0x30]!
	0x03E42180 STP X22, X21, [X31 + 0x10]
	0x03E42184 STP X20, X19, [X31 + 0x20]
	0x03E42188 ADRP X21, 0x5A6000
	0x03E4218C ADRP X22, 0x2B1000
	0x03E42190 LDRB W8, [X21 + 0x7D0]
	0x03E42194 LDR X22, [X22 + 0x598]
	0x03E42198 MOV X20, X2
	0x03E4219C MOV X19, X1
	0x03E421A0 TBNZ X8, 0x0, 0x3E421B8
	0x03E421A4 ADRP X0, 0x2B1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5A7000
	006 Move X21, 0x2BC000
	007 Move W8, [X20+1992]
	008 Move X21, [X21+2128]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2BC000
	015 Move X0, [X0+2128]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1992], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21A4894, X0
	026 Return X0

Method: System.Void Awake()

Disassembly:
	0x03E421A8 LDR X0, [X0 + 0x598]
	0x03E421AC BL 0x1C16CF4
	0x03E421B0 MOVZ W8, 0x1
	0x03E421B4 STRB W8, [X21 + 0x7D0]
	0x03E421B8 LDR X0, [X22]
	0x03E421BC LDR W8, [X0 + 0xE0]
	0x03E421C0 CBNZ W8, 0x3E421C8
	0x03E421C4 BL 0x1C16DFC
	0x03E421C8 MOV X0, X20
	0x03E421CC MOV X1, X31
	0x03E421D0 MOV X2, X31
	0x03E421D4 BL 0x3C354F8
	0x03E421D8 TBZ X0, 0x0, 0x3E42220
	0x03E421DC CBZ X20, 0x3E42230
	0x03E421E0 LDR X8, [X20]
	0x03E421E4 MOV X0, X20
	0x03E421E8 LDP X9, X1, [X8 + 0x1C8]
	0x03E421EC BLR X9
	0x03E421F0 TBZ X0, 0x0, 0x3E42220
	0x03E421F4 MOV X0, X20
	0x03E421F8 MOV X1, X31
	0x03E421FC BL 0x3C32ECC
	0x03E42200 CBZ X19, 0x3E42230
	0x03E42204 MOV X1, X0
	0x03E42208 MOV X0, X19
	0x03E4220C LDP X20, X19, [X31 + 0x20]
	0x03E42210 LDP X22, X21, [X31 + 0x10]
	0x03E42214 MOV X2, X31
	0x03E42218 LDR X30, [X31], #0x30
	0x03E4221C B 0x3E4EC3C
	0x03E42220 LDP X20, X19, [X31 + 0x20]
	0x03E42224 LDP X22, X21, [X31 + 0x10]
	0x03E42228 LDR X30, [X31], #0x30
	0x03E4222C RET
	0x03E42230 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5A7000
	006 Move X20, 0x2B2000
	007 Move W8, [X21+1993]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x32A000
	015 Move X0, [X0+504]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B2000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1993], W8
	022 Move X0, [X20]
	023 Move X20, [X19+224]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x32A000
	037 Move X8, [X8+504]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+224], X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void OnCanvasGroupChanged()

Disassembly:
	0x03E42234 STP X30, X19, [X31 - 0x10]!
	0x03E42238 LDR X8, [X0]
	0x03E4223C MOV X19, X0
	0x03E42240 LDP X9, X1, [X8 + 0x1C8]
	0x03E42244 BLR X9
	0x03E42248 TBZ X0, 0x0, 0x3E42274
	0x03E4224C LDR X8, [X19]
	0x03E42250 MOV X0, X19
	0x03E42254 LDR X9, [X8 + 0x2B8]
	0x03E42258 LDR X1, [X8 + 0x2C0]
	0x03E4225C BLR X9
	0x03E42260 TBZ X0, 0x0, 0x3E42274
	0x03E42264 LDRB W8, [X19 + 0xF0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Selectable.ParentGroupAllowsInteraction, X0
	005 Move W9, [X19+232]
	006 And W8, W0, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move [X19+232], W8
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call Selectable.OnSetProperty, X0
	016 Return 

Method: System.Boolean ParentGroupAllowsInteraction()

Disassembly:
	0x03E42268 CBZ W8, 0x3E42274
	0x03E4226C LDRB W8, [X19 + 0xF1]
	0x03E42270 CBZ W8, 0x3E42280
	0x03E42274 MOV W0, W31
	0x03E42278 LDP X30, X19, [X31], #0x10
	0x03E4227C RET
	0x03E42280 LDRB W8, [X19 + 0xF2]
	0x03E42284 CMP W8, 0x0
	0x03E42288 CSET W0, EQ
	0x03E4228C B 0x3E42278
	0x03E42290 STP X30, X19, [X31 - 0x10]!
	0x03E42294 LDR X8, [X0]
	0x03E42298 MOV X19, X0
	0x03E4229C LDP X9, X1, [X8 + 0x1C8]
	0x03E422A0 BLR X9
	0x03E422A4 TBZ X0, 0x0, 0x3E422E8
	0x03E422A8 LDR X8, [X19]
	0x03E422AC MOV X0, X19
	0x03E422B0 LDR X9, [X8 + 0x2B8]
	0x03E422B4 LDR X1, [X8 + 0x2C0]
	0x03E422B8 BLR X9
	0x03E422BC TBZ X0, 0x0, 0x3E422E8
	0x03E422C0 LDR X8, [X19]
	0x03E422C4 MOV X0, X19
	0x03E422C8 LDR X9, [X8 + 0x2B8]
	0x03E422CC LDR X1, [X8 + 0x2C0]
	0x03E422D0 BLR X9
	0x03E422D4 TBZ X0, 0x0, 0x3E422F0
	0x03E422D8 LDRB W8, [X19 + 0xF1]
	0x03E422DC CBZ W8, 0x3E42310
	0x03E422E0 MOVZ W1, 0x2
	0x03E422E4 B 0x3E422F4
	0x03E422E8 LDP X30, X19, [X31], #0x10
	0x03E422EC RET
	0x03E422F0 MOVZ W1, 0x4
	0x03E422F4 LDR X8, [X19]
	0x03E422F8 MOV X0, X19
	0x03E422FC MOV W2, W31
	0x03E42300 LDR X4, [X8 + 0x2D8]
	0x03E42304 LDR X3, [X8 + 0x2E0]
	0x03E42308 LDP X30, X19, [X31], #0x10
	0x03E4230C BR X4
	0x03E42310 LDRB W8, [X19 + 0xF2]
	0x03E42314 CBZ W8, 0x3E42320
	0x03E42318 MOVZ W1, 0x3
	0x03E4231C B 0x3E422F4
	0x03E42320 LDRB W1, [X19 + 0xF0]
	0x03E42324 B 0x3E422F4
	0x03E42328 MOVZ W8, 0x1
	0x03E4232C STRB W8, [X0 + 0xF0]
	0x03E42330 B 0x3E42290
	0x03E42334 STRB W31, [X0 + 0xF0]
	0x03E42338 B 0x3E42290
	0x03E4233C MOVZ W8, 0x1
	0x03E42340 STRB W8, [X0 + 0xF2]
	0x03E42344 B 0x3E42290
	0x03E42348 STRB W31, [X0 + 0xF2]
	0x03E4234C B 0x3E42290
	0x03E42350 STP X30, X21, [X31 - 0x20]!
	0x03E42354 STP X20, X19, [X31 + 0x10]
	0x03E42358 ADRP X20, 0x5A6000
	0x03E4235C ADRP X21, 0x2D8000
	0x03E42360 LDRB W8, [X20 + 0x7D5]
	0x03E42364 LDR X21, [X21 + 0xDF8]
	0x03E42368 MOV X19, X0
	0x03E4236C TBNZ X8, 0x0, 0x3E42390
	0x03E42370 ADRP X0, 0x2D8000
	0x03E42374 LDR X0, [X0 + 0xDF8]
	0x03E42378 BL 0x1C16CF4
	0x03E4237C ADRP X0, 0x2B1000
	0x03E42380 LDR X0, [X0 + 0x598]
	0x03E42384 BL 0x1C16CF4
	0x03E42388 MOVZ W8, 0x1
	0x03E4238C STRB W8, [X20 + 0x7D5]
	0x03E42390 LDR X0, [X21]
	0x03E42394 ADRP X20, 0x2B1000
	0x03E42398 LDR W8, [X0 + 0xE0]
	0x03E4239C LDR X20, [X20 + 0x598]
	0x03E423A0 CBNZ W8, 0x3E423A8
	0x03E423A4 BL 0x1C16DFC
	0x03E423A8 MOV X0, X31
	0x03E423AC BL 0x3E4FF90
	0x03E423B0 LDR X8, [X20]
	0x03E423B4 MOV X20, X0
	0x03E423B8 LDR W9, [X8 + 0xE0]
	0x03E423BC CBNZ W9, 0x3E423C8
	0x03E423C0 MOV X0, X8
	0x03E423C4 BL 0x1C16DFC
	0x03E423C8 MOV X0, X20
	0x03E423CC MOV X1, X31
	0x03E423D0 MOV X2, X31
	0x03E423D4 BL 0x3C3883C
	0x03E423D8 TBNZ X0, 0x0, 0x3E42400
	0x03E423DC LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x5A7000
	009 Move W8, [X20+1994]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x32A000
	016 Move X0, [X0+992]
	017 Call 0x1C17CF4
	018 Move X0, 0x32A000
	019 Move X0, [X0+1000]
	020 Call 0x1C17CF4
	021 Move X0, 0x32A000
	022 Move X0, [X0+1008]
	023 Call 0x1C17CF4
	024 Move X0, 0x2B2000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1994], W8
	029 Move X22, 0x2B2000
	030 Move X23, 0x32A000
	031 Move X24, 0x32A000
	032 Move X22, [X22+1432]
	033 Move X23, [X23+992]
	034 Move X24, [X24+1008]
	035 Move X0, X19
	036 Move X1, X31
	037 Call Component.get_transform, X0
	038 Move X20, X0
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {110}
	052 Compare X20, 0
	053 JumpIfEqual {120}
	054 Move X1, [X19+248]
	055 Move X2, [X23]
	056 Move X0, X20
	057 Call 0x21A543C, X0, X1
	058 Move X0, [X19+248]
	059 Compare X0, 0
	060 JumpIfEqual {120}
	061 Move W21, W31
	062 Move W8, [X0+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X2, [X24]
	065 Move W1, W21
	066 Call List`1<Object>.get_Item, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {120}
	069 Move X1, X31
	070 Call Behaviour.get_enabled, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {89}
	075 Move X0, [X19+248]
	076 Compare X0, 0
	077 JumpIfEqual {120}
	078 Move X2, [X24]
	079 Move W1, W21
	080 Call List`1<Object>.get_Item, X0, X1
	081 Compare X0, 0
	082 JumpIfEqual {120}
	083 Move X1, X31
	084 Call CanvasGroup.get_interactable, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {111}
	089 Move X0, [X19+248]
	090 Compare X0, 0
	091 JumpIfEqual {120}
	092 Move X2, [X24]
	093 Move W1, W21
	094 Call List`1<Object>.get_Item, X0, X1
	095 Compare X0, 0
	096 JumpIfEqual {120}
	097 Move X1, X31
	098 Call CanvasGroup.get_ignoreParentGroups, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {110}
	103 Move X0, [X19+248]
	104 Add W21, W21, 1
	105 Compare X0, 0
	106 JumpIfNotEqual {62}
	107 Move X0, X20
	108 Move X1, X31
	109 Call Transform.get_parent, X0
	110 Move W0, 1
	111 Move W0, W31
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Return X0
	120 Call 0x1C17F20

Method: System.Boolean IsInteractable()

Disassembly:
	0x03E423E0 LDR W8, [X0 + 0xE0]
	0x03E423E4 CBNZ W8, 0x3E423EC
	0x03E423E8 BL 0x1C16DFC
	0x03E423EC MOV X0, X31
	0x03E423F0 BL 0x3E4FF90
	0x03E423F4 CBZ X0, 0x3E42450
	0x03E423F8 LDRB W8, [X0 + 0x49]
	0x03E423FC CBZ W8, 0x3E4240C

ISIL:
	001 Move W8, [X0+232]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X0+216]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Void OnDidApplyAnimationProperties()

Disassembly:
	0x03E42400 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Call Selectable.OnSetProperty, X0
	002 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03E3CAA8 MOV V2.16B, V10.16B
	0x03E3CAAC LDR X8, [X8]
	0x03E3CAB0 MOV V3.16B, V11.16B
	0x03E3CAB4 MOV X0, X31
	0x03E3CAB8 LDR X8, [X8 + 0xB8]
	0x03E3CABC LDP S4, S5, [X8 + 0x30]
	0x03E3CAC0 LDR V6, [X8 + 0x38]
	0x03E3CAC4 BL 0x3C2A9FC
	0x03E3CAC8 MOV X0, X19
	0x03E3CACC LDP X20, X19, [X31 + 0x30]
	0x03E3CAD0 LDR X30, [X31 + 0x20]
	0x03E3CAD4 LDP D9, D8, [X31 + 0x10]
	0x03E3CAD8 LDP D11, D10, [X31], #0x40
	0x03E3CADC B 0x3E41B48
	0x03E3CAE0 BL 0x1C16F20
	0x03E3CAE4 LDR W8, [X0 + 0x28]
	0x03E3CAE8 CMP W8, 0x3
	0x03E3CAEC B.NE 0x3E3CAFC
	0x03E3CAF0 LDR W8, [X0 + 0x108]
	0x03E3CAF4 CMP W8, 0x2
	0x03E3CAF8 B.CC 0x3E3CB00
	0x03E3CAFC B 0x3E3CB08
	0x03E3CB00 MOV X0, X31
	0x03E3CB04 RET
	0x03E3CB08 STP D11, D10, [X31 - 0x40]!
	0x03E3CB0C STP D9, D8, [X31 + 0x10]
	0x03E3CB10 STR X30, [X31 + 0x20]
	0x03E3CB14 STP X20, X19, [X31 + 0x30]
	0x03E3CB18 LDR W8, [X0 + 0x28]
	0x03E3CB1C MOV X19, X0
	0x03E3CB20 CMP W8, 0x4
	0x03E3CB24 B.NE 0x3E3CB30
	0x03E3CB28 LDR X0, [X19 + 0x48]
	0x03E3CB2C B 0x3E3CB38
	0x03E3CB30 TBNZ X8, 0x0, 0x3E3CB4C
	0x03E3CB34 MOV X0, X31
	0x03E3CB38 LDP X20, X19, [X31 + 0x30]
	0x03E3CB3C LDR X30, [X31 + 0x20]
	0x03E3CB40 LDP D9, D8, [X31 + 0x10]
	0x03E3CB44 LDP D11, D10, [X31], #0x40
	0x03E3CB48 RET
	0x03E3CB4C MOV X0, X19
	0x03E3CB50 MOV X1, X31
	0x03E3CB54 BL 0x3C32E90
	0x03E3CB58 CBZ X0, 0x3E3CBDC
	0x03E3CB5C MOV X1, X31
	0x03E3CB60 BL 0x3C3DEB4
	0x03E3CB64 ADRP X20, 0x59C000
	0x03E3CB68 LDRB W8, [X20 + 0xB70]
	0x03E3CB6C MOV V8.16B, V0.16B
	0x03E3CB70 MOV V9.16B, V1.16B
	0x03E3CB74 MOV V10.16B, V2.16B
	0x03E3CB78 MOV V11.16B, V3.16B
	0x03E3CB7C CBNZ W8, 0x3E3CB94
	0x03E3CB80 ADRP X0, 0x2B7000
	0x03E3CB84 LDR X0, [X0 + 0x5A0]
	0x03E3CB88 BL 0x1C16CF4
	0x03E3CB8C MOVZ W8, 0x1
	0x03E3CB90 STRB W8, [X20 + 0xB70]
	0x03E3CB94 ADRP X8, 0x2B7000
	0x03E3CB98 LDR X8, [X8 + 0x5A0]
	0x03E3CB9C MOV V0.16B, V8.16B
	0x03E3CBA0 MOV V1.16B, V9.16B
	0x03E3CBA4 MOV V2.16B, V10.16B
	0x03E3CBA8 LDR X8, [X8]
	0x03E3CBAC MOV V3.16B, V11.16B
	0x03E3CBB0 MOV X0, X31
	0x03E3CBB4 LDR X8, [X8 + 0xB8]
	0x03E3CBB8 LDP S4, S5, [X8 + 0x3C]
	0x03E3CBBC LDR V6, [X8 + 0x44]
	0x03E3CBC0 BL 0x3C2A9FC
	0x03E3CBC4 MOV X0, X19
	0x03E3CBC8 LDP X20, X19, [X31 + 0x30]
	0x03E3CBCC LDR X30, [X31 + 0x20]
	0x03E3CBD0 LDP D9, D8, [X31 + 0x10]
	0x03E3CBD4 LDP D11, D10, [X31], #0x40
	0x03E3CBD8 B 0x3E41B48
	0x03E3CBDC BL 0x1C16F20
	0x03E3CBE0 LDR W8, [X0 + 0x28]
	0x03E3CBE4 CMP W8, 0x3
	0x03E3CBE8 B.NE 0x3E3CBF8
	0x03E3CBEC LDR W8, [X0 + 0x108]
	0x03E3CBF0 CMP W8, 0x1
	0x03E3CBF4 B.HI 0x3E3CBFC
	0x03E3CBF8 B 0x3E3CC04
	0x03E3CBFC MOV X0, X31
	0x03E3CC00 RET
	0x03E3CC04 STP D11, D10, [X31 - 0x40]!
	0x03E3CC08 STP D9, D8, [X31 + 0x10]
	0x03E3CC0C STR X30, [X31 + 0x20]
	0x03E3CC10 STP X20, X19, [X31 + 0x30]
	0x03E3CC14 LDR W8, [X0 + 0x28]
	0x03E3CC18 MOV X19, X0
	0x03E3CC1C CMP W8, 0x4
	0x03E3CC20 B.NE 0x3E3CC2C
	0x03E3CC24 LDR X0, [X19 + 0x30]
	0x03E3CC28 B 0x3E3CC34
	0x03E3CC2C TBNZ X8, 0x1, 0x3E3CC48
	0x03E3CC30 MOV X0, X31
	0x03E3CC34 LDP X20, X19, [X31 + 0x30]
	0x03E3CC38 LDR X30, [X31 + 0x20]
	0x03E3CC3C LDP D9, D8, [X31 + 0x10]
	0x03E3CC40 LDP D11, D10, [X31], #0x40
	0x03E3CC44 RET
	0x03E3CC48 MOV X0, X19
	0x03E3CC4C MOV X1, X31
	0x03E3CC50 BL 0x3C32E90
	0x03E3CC54 CBZ X0, 0x3E3CCD8
	0x03E3CC58 MOV X1, X31
	0x03E3CC5C BL 0x3C3DEB4
	0x03E3CC60 ADRP X20, 0x59C000
	0x03E3CC64 LDRB W8, [X20 + 0x786]
	0x03E3CC68 MOV V8.16B, V0.16B
	0x03E3CC6C MOV V9.16B, V1.16B
	0x03E3CC70 MOV V10.16B, V2.16B
	0x03E3CC74 MOV V11.16B, V3.16B
	0x03E3CC78 CBNZ W8, 0x3E3CC90
	0x03E3CC7C ADRP X0, 0x2B7000
	0x03E3CC80 LDR X0, [X0 + 0x5A0]
	0x03E3CC84 BL 0x1C16CF4
	0x03E3CC88 MOVZ W8, 0x1
	0x03E3CC8C STRB W8, [X20 + 0x786]
	0x03E3CC90 ADRP X8, 0x2B7000
	0x03E3CC94 LDR X8, [X8 + 0x5A0]
	0x03E3CC98 MOV V0.16B, V8.16B
	0x03E3CC9C MOV V1.16B, V9.16B
	0x03E3CCA0 MOV V2.16B, V10.16B
	0x03E3CCA4 LDR X8, [X8]
	0x03E3CCA8 MOV V3.16B, V11.16B
	0x03E3CCAC MOV X0, X31
	0x03E3CCB0 LDR X8, [X8 + 0xB8]
	0x03E3CCB4 LDP S4, S5, [X8 + 0x18]
	0x03E3CCB8 LDR V6, [X8 + 0x20]
	0x03E3CCBC BL 0x3C2A9FC
	0x03E3CCC0 MOV X0, X19
	0x03E3CCC4 LDP X20, X19, [X31 + 0x30]
	0x03E3CCC8 LDR X30, [X31 + 0x20]
	0x03E3CCCC LDP D9, D8, [X31 + 0x10]
	0x03E3CCD0 LDP D11, D10, [X31], #0x40
	0x03E3CCD4 B 0x3E41B48
	0x03E3CCD8 BL 0x1C16F20
	0x03E3CCDC LDR W8, [X0 + 0x28]
	0x03E3CCE0 CMP W8, 0x3
	0x03E3CCE4 B.NE 0x3E3CCF4
	0x03E3CCE8 LDR W8, [X0 + 0x108]
	0x03E3CCEC CMP W8, 0x1
	0x03E3CCF0 B.HI 0x3E3CCF8
	0x03E3CCF4 B 0x3E3CD00
	0x03E3CCF8 MOV X0, X31
	0x03E3CCFC RET
	0x03E3CD00 STP D11, D10, [X31 - 0x40]!
	0x03E3CD04 STP D9, D8, [X31 + 0x10]
	0x03E3CD08 STR X30, [X31 + 0x20]
	0x03E3CD0C STP X20, X19, [X31 + 0x30]
	0x03E3CD10 LDR W8, [X0 + 0x28]
	0x03E3CD14 MOV X19, X0
	0x03E3CD18 CMP W8, 0x4
	0x03E3CD1C B.NE 0x3E3CD28
	0x03E3CD20 LDR X0, [X19 + 0x38]
	0x03E3CD24 B 0x3E3CD30
	0x03E3CD28 TBNZ X8, 0x1, 0x3E3CD44
	0x03E3CD2C MOV X0, X31
	0x03E3CD30 LDP X20, X19, [X31 + 0x30]
	0x03E3CD34 LDR X30, [X31 + 0x20]
	0x03E3CD38 LDP D9, D8, [X31 + 0x10]
	0x03E3CD3C LDP D11, D10, [X31], #0x40
	0x03E3CD40 RET
	0x03E3CD44 MOV X0, X19
	0x03E3CD48 MOV X1, X31
	0x03E3CD4C BL 0x3C32E90
	0x03E3CD50 CBZ X0, 0x3E3CDD4
	0x03E3CD54 MOV X1, X31
	0x03E3CD58 BL 0x3C3DEB4
	0x03E3CD5C ADRP X20, 0x59C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5AD000
	008 Move W8, [X20+1995]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2DF000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B8000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x330000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move X0, 0x31D000
	024 Move X0, [X0+2648]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1995], W8
	028 Move W8, [X19+32]
	029 Compare W8, 0
	030 JumpIfNotEqual {189}
	031 Move X0, X19
	032 Move X1, X31
	033 Call UIBehaviour.OnEnable, X0
	034 Move X22, 0x31D000
	035 Move X22, [X22+2648]
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X22]
	042 Move X8, [X0+184]
	043 Move X9, [X8]
	044 Compare X9, 0
	045 JumpIfEqual {201}
	046 Move W8, [X8+8]
	047 Move W9, [X9+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X22]
	054 Move X8, [X0+184]
	055 Move X8, [X8]
	056 Compare X8, 0
	057 JumpIfEqual {201}
	058 Move X9, 0x330000
	059 Move X9, [X9+880]
	060 Move W8, [X8+24]
	061 Move X0, [X9]
	062 Move W1, W8
	063 ShiftRight W1, 31
	064 And W1, W1, 0x3FFFFFFF
	065 Call 0x1C17D6C
	066 Move X8, [X22]
	067 Move X8, [X8+184]
	068 Move X8, [X8]
	069 Compare X8, 0
	070 JumpIfEqual {201}
	071 Move W2, [X8+24]
	072 Move X20, X0
	073 Move X0, X8
	074 Move X1, X20
	075 Move X3, X31
	076 Call Array.Copy, X0, X1, X2
	077 Move X8, [X22]
	078 Move X8, [X8+184]
	079 Move [X8], X20
	080 Move X23, 0x2DF000
	081 Move X23, [X23+3576]
	082 Move X0, [X23]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X31
	088 Call EventSystem.get_current
	089 Move X21, 0x2B8000
	090 Move X21, [X21+1432]
	091 Move X20, X0
	092 Move X8, [X21]
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X0, X20
	099 Move X1, X31
	100 Call Object.op_Implicit, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {135}
	105 Move X0, [X23]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X31
	111 Call EventSystem.get_current
	112 Compare X0, 0
	113 JumpIfEqual {201}
	114 Move X20, [X0+64]
	115 Move X0, X19
	116 Move X1, X31
	117 Call Component.get_gameObject, X0
	118 Move X8, [X21]
	119 Move X21, X0
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move X0, X20
	126 Move X1, X21
	127 Move X2, X31
	128 Call Object.op_Equality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {135}
	133 Move W8, 1
	134 Move [X19+242], W8
	135 Move X0, [X22]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {141}
	139 Call 0x1C17DFC
	140 Move X0, [X22]
	141 Move X8, [X0+184]
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Move [X19+236], W20
	144 Move X21, [X8]
	145 Compare X21, 0
	146 JumpIfEqual {201}
	147 Move X8, [X21]
	148 Move X0, X19
	149 Move X1, [X8+64]
	150 Call 0x1C17E00
	151 Compare X0, 0
	152 JumpIfEqual {202}
	153 Move W8, [X21+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add X8, X21, X20
	156 Move [X8+32], X19
	157 Move X8, [X22]
	158 Move X0, X19
	159 Move X8, [X8+184]
	160 Move W9, [X8+8]
	161 Add W9, W9, 1
	162 Move [X8+8], W9
	163 Move [X19+241], W31
	164 Call Selectable.ParentGroupAllowsInteraction, X0
	165 Move X8, [X19]
	166 And W9, W0, 1
	167 Move [X19+232], W9
	168 Move X0, X19
	169 Move X9, [X8+696]
	170 Move X1, [X8+704]
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {180}
	176 Move W8, [X19+241]
	177 Compare W8, 0
	178 JumpIfEqual {196}
	179 Move W1, 2
	180 Move W1, 4
	181 Move X8, [X19]
	182 Move W2, 1
	183 Move X0, X19
	184 Move W20, 1
	185 Move X9, [X8+728]
	186 Move X3, [X8+736]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move [X19+32], W20
	189 Move X20, [X31+32]
	190 Move X19, [X31+40]
	191 Move X22, [X31+16]
	192 Move X21, [X31+24]
	193 Move X30, [X31+48]
	194 Move X23, [X31+56]
	195 Return 
	196 Move W8, [X19+242]
	197 Compare W8, 0
	198 JumpIfEqual {200}
	199 Move W1, 3
	200 Move W1, [X19+240]
	201 Call 0x1C17F20
	202 Call 0x1C17F44
	203 Move X1, X31
	204 Call 0x1C17DEC
	205 Call 0x1C17F28

Method: System.Void OnTransformParentChanged()

Disassembly:
	0x03E42454 STP X30, X21, [X31 - 0x20]!
	0x03E42458 STP X20, X19, [X31 + 0x10]
	0x03E4245C ADRP X20, 0x5A6000
	0x03E42460 ADRP X21, 0x329000
	0x03E42464 ADRP X19, 0x316000
	0x03E42468 LDRB W8, [X20 + 0x7D6]
	0x03E4246C LDR X21, [X21 + 0x370]
	0x03E42470 LDR X19, [X19 + 0xA58]
	0x03E42474 TBNZ X8, 0x0, 0x3E42498
	0x03E42478 ADRP X0, 0x329000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call UIBehaviour.OnTransformParentChanged, X0
	006 Move X8, [X19]
	007 Move X0, X19
	008 Move X2, [X8+536]
	009 Move X1, [X8+544]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 CallNoReturn X2

Method: System.Void OnSetProperty()

Disassembly:
	0x03E41C20 FDIV S2, S8, S0
	0x03E41C24 FDIV S1, S9, S0
	0x03E41C28 STP S1, S2, [X31 + 0x18]
	0x03E41C2C FDIV S10, S10, S0
	0x03E41C30 B 0x3E41C6C
	0x03E41C34 LDRB W8, [X27 + 0x783]
	0x03E41C38 CBNZ W8, 0x3E41C50
	0x03E41C3C ADRP X0, 0x2B2000
	0x03E41C40 LDR X0, [X0 + 0x5A0]
	0x03E41C44 BL 0x1C16CF4
	0x03E41C48 MOVZ W8, 0x1
	0x03E41C4C STRB W8, [X27 + 0x783]
	0x03E41C50 ADRP X8, 0x2B2000
	0x03E41C54 LDR X8, [X8 + 0x5A0]
	0x03E41C58 LDR X8, [X8]
	0x03E41C5C LDR X8, [X8 + 0xB8]
	0x03E41C60 LDR V1, [X8]
	0x03E41C64 LDP S0, S10, [X8 + 0x4]
	0x03E41C68 STP S0, S1, [X31 + 0x18]
	0x03E41C6C MOV X0, X19
	0x03E41C70 MOV X1, X31
	0x03E41C74 BL 0x3C32E90
	0x03E41C78 CBZ X0, 0x3E41FF4
	0x03E41C7C ADRP X26, 0x317000
	0x03E41C80 LDR X26, [X26 + 0xA58]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+696]
	006 Move X1, [X8+704]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {16}
	012 Move W8, [X19+241]
	013 Compare W8, 0
	014 JumpIfEqual {25}
	015 Move W1, 2
	016 Move W1, 4
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move W2, W31
	020 Move X4, [X8+728]
	021 Move X3, [X8+736]
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 CallNoReturn X4
	025 Move W8, [X19+242]
	026 Compare W8, 0
	027 JumpIfEqual {29}
	028 Move W1, 3
	029 Move W1, [X19+240]

Method: System.Void OnDisable()

Disassembly:
	0x03E3CD80 BL 0x1C16CF4
	0x03E3CD84 MOVZ W8, 0x1
	0x03E3CD88 STRB W8, [X20 + 0xABD]
	0x03E3CD8C ADRP X8, 0x2B7000
	0x03E3CD90 LDR X8, [X8 + 0x5A0]
	0x03E3CD94 MOV V0.16B, V8.16B
	0x03E3CD98 MOV V1.16B, V9.16B
	0x03E3CD9C MOV V2.16B, V10.16B
	0x03E3CDA0 LDR X8, [X8]
	0x03E3CDA4 MOV V3.16B, V11.16B
	0x03E3CDA8 MOV X0, X31
	0x03E3CDAC LDR X8, [X8 + 0xB8]
	0x03E3CDB0 LDP S4, S5, [X8 + 0x24]
	0x03E3CDB4 LDR V6, [X8 + 0x2C]
	0x03E3CDB8 BL 0x3C2A9FC
	0x03E3CDBC MOV X0, X19
	0x03E3CDC0 LDP X20, X19, [X31 + 0x30]
	0x03E3CDC4 LDR X30, [X31 + 0x20]
	0x03E3CDC8 LDP D9, D8, [X31 + 0x10]
	0x03E3CDCC LDP D11, D10, [X31], #0x40
	0x03E3CDD0 B 0x3E41B48
	0x03E3CDD4 BL 0x1C16F20
	0x03E3CDD8 STR X30, [X31 - 0x10]!
	0x03E3CDDC CBZ X1, 0x3E3CDEC
	0x03E3CDE0 STRB W31, [X1 + 0x144]
	0x03E3CDE4 LDR X30, [X31], #0x10
	0x03E3CDE8 RET
	0x03E3CDEC BL 0x1C16F20
	0x03E3CDF0 STR X30, [X31 - 0x30]!
	0x03E3CDF4 STP X22, X21, [X31 + 0x10]
	0x03E3CDF8 STP X20, X19, [X31 + 0x20]
	0x03E3CDFC ADRP X22, 0x5AC000
	0x03E3CE00 LDRB W8, [X22 + 0x79F]
	0x03E3CE04 MOV W20, W2
	0x03E3CE08 MOV W21, W1
	0x03E3CE0C MOV X19, X0
	0x03E3CE10 TBNZ X8, 0x0, 0x3E3CE34
	0x03E3CE14 ADRP X0, 0x30D000
	0x03E3CE18 LDR X0, [X0 + 0x6B8]
	0x03E3CE1C BL 0x1C16CF4
	0x03E3CE20 ADRP X0, 0x2DE000
	0x03E3CE24 LDR X0, [X0 + 0xC70]
	0x03E3CE28 BL 0x1C16CF4
	0x03E3CE2C MOVZ W8, 0x1
	0x03E3CE30 STRB W8, [X22 + 0x79F]
	0x03E3CE34 LDR W22, [X19 + 0x108]
	0x03E3CE38 MOV X0, X19
	0x03E3CE3C MOV W1, W21
	0x03E3CE40 BL 0x3E3B4FC
	0x03E3CE44 TBZ X20, 0x0, 0x3E3CF3C
	0x03E3CE48 LDR W8, [X19 + 0x108]
	0x03E3CE4C CMP W22, 0x1
	0x03E3CE50 CSET W9, HI
	0x03E3CE54 AND W21, W22, 0xFFFFFFFD
	0x03E3CE58 CMP W8, 0x2
	0x03E3CE5C CSET W10, CC
	0x03E3CE60 EOR W9, W9, W10, 0x0
	0x03E3CE64 TBNZ X9, 0x0, 0x3E3CED0
	0x03E3CE68 MOV X0, X19
	0x03E3CE6C MOV X1, X31
	0x03E3CE70 BL 0x3C32E90
	0x03E3CE74 ADRP X8, 0x30D000
	0x03E3CE78 LDR X8, [X8 + 0x6B8]
	0x03E3CE7C MOV X20, X0
	0x03E3CE80 LDR X8, [X8]
	0x03E3CE84 LDR W9, [X8 + 0xE0]
	0x03E3CE88 CBZ W9, 0x3E3CEAC
	0x03E3CE8C CBZ X20, 0x3E3CEB8
	0x03E3CE90 ADRP X8, 0x2DE000
	0x03E3CE94 LDR X8, [X8 + 0xC70]
	0x03E3CE98 LDR X9, [X20]
	0x03E3CE9C LDR X8, [X8]
	0x03E3CEA0 CMP X9, X8
	0x03E3CEA4 CSEL X0, X20, X31, EQ

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5AD000
	008 Move W8, [X20+1996]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x31D000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1996], W8
	019 Move W8, [X19+32]
	020 Compare W8, 0
	021 JumpIfEqual {75}
	022 Move X21, 0x31D000
	023 Move X21, [X21+2648]
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X9, [X0+184]
	031 Move W8, [X9+8]
	032 Move X22, [X9]
	033 Subtract W8, W8, 1
	034 Move [X9+8], W8
	035 Compare X22, 0
	036 JumpIfEqual {82}
	037 Move W9, [X22+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X22, W8
	040 Move X20, [X8+32]
	041 Compare X20, 0
	042 JumpIfEqual {82}
	043 Move W8, [X19+236]
	044 Move X0, X20
	045 Move [X20+236], W8
	046 Move X8, [X22]
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Move X1, [X8+64]
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {84}
	052 Move W8, [X22+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X22, X23
	055 Move [X8+32], X20
	056 Move X8, [X21]
	057 Move X9, [X8+184]
	058 Move X8, [X9]
	059 Compare X8, 0
	060 JumpIfEqual {82}
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Move W10, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X8, X9
	065 Move [X8+32], X31
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move X9, [X8+712]
	069 Move X1, [X8+720]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X0, X19
	072 Move X1, X31
	073 Call UIBehaviour.OnDisable, X0
	074 Move [X19+32], W31
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Return 
	082 Call 0x1C17F20
	083 Call 0x1C17F28
	084 Call 0x1C17F44
	085 Move X1, X31
	086 Call 0x1C17DEC

Method: System.Void OnApplicationFocus(System.Boolean hasFocus)

Disassembly:
	0x03E4247C LDR X0, [X0 + 0x370]
	0x03E42480 BL 0x1C16CF4
	0x03E42484 ADRP X0, 0x316000
	0x03E42488 LDR X0, [X0 + 0xA58]
	0x03E4248C BL 0x1C16CF4
	0x03E42490 MOVZ W8, 0x1
	0x03E42494 STRB W8, [X20 + 0x7D6]
	0x03E42498 LDR X0, [X21]
	0x03E4249C MOVZ W1, 0xA
	0x03E424A0 BL 0x1C16D6C
	0x03E424A4 LDR X8, [X19]
	0x03E424A8 LDR X8, [X8 + 0xB8]
	0x03E424AC STR X0, [X8]
	0x03E424B0 LDR X8, [X19]
	0x03E424B4 LDP X20, X19, [X31 + 0x10]
	0x03E424B8 LDR X8, [X8 + 0xB8]
	0x03E424BC STR W31, [X8 + 0x8]
	0x03E424C0 LDP X30, X21, [X31], #0x20
	0x03E424C4 RET
	0x03E424C8 LDR V4, [X0]
	0x03E424CC FCMP S4, S0
	0x03E424D0 B.NE 0x3E42500
	0x03E424D4 LDR V4, [X0 + 0x4]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, X1
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfEqual {35}
	007 Move X8, [X0]
	008 Move X19, X0
	009 Move X9, [X8+456]
	010 Move X1, [X8+464]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {35}
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+696]
	019 Move X1, [X8+704]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {35}
	025 Move W8, [X19+241]
	026 Compare W8, 0
	027 JumpIfEqual {35}
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X2, [X8+712]
	031 Move X1, [X8+720]
	032 Move X30, [X31+16]
	033 Move X19, [X31+24]
	034 CallNoReturn X2
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 

Method: UnityEngine.UI.Selectable/SelectionState get_currentSelectionState()

Disassembly:
	0x03E42404 LDP X30, X21, [X31], #0x20
	0x03E42408 RET
	0x03E4240C LDR X0, [X21]
	0x03E42410 LDR W8, [X0 + 0xE0]
	0x03E42414 CBNZ W8, 0x3E4241C
	0x03E42418 BL 0x1C16DFC
	0x03E4241C MOV X0, X31
	0x03E42420 BL 0x3E4FF90
	0x03E42424 MOV X20, X0
	0x03E42428 MOV X0, X19
	0x03E4242C MOV X1, X31
	0x03E42430 BL 0x3C32ECC
	0x03E42434 CBZ X20, 0x3E42450
	0x03E42438 MOV X1, X0
	0x03E4243C MOV X0, X20
	0x03E42440 LDP X20, X19, [X31 + 0x10]
	0x03E42444 MOV X2, X31
	0x03E42448 LDP X30, X21, [X31], #0x20
	0x03E4244C B 0x3E4BE8C
	0x03E42450 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+696]
	006 Move X1, [X8+704]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {16}
	012 Move W8, [X19+241]
	013 Compare W8, 0
	014 JumpIfEqual {20}
	015 Move W0, 2
	016 Move W0, 4
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0
	020 Move W8, [X19+242]
	021 Compare W8, 0
	022 JumpIfEqual {24}
	023 Move W0, 3
	024 Move W0, [X19+240]

Method: System.Void InstantClearState()

Disassembly:
	0x03E42524 ADRP X22, 0x5A6000
	0x03E42528 ADRP X21, 0x329000
	0x03E4252C LDRB W8, [X22 + 0x7D7]
	0x03E42530 LDR X21, [X21 + 0x338]
	0x03E42534 MOV X20, X1
	0x03E42538 MOV X19, X0
	0x03E4253C TBNZ X8, 0x0, 0x3E42554
	0x03E42540 ADRP X0, 0x329000
	0x03E42544 LDR X0, [X0 + 0x338]
	0x03E42548 BL 0x1C16CF4
	0x03E4254C MOVZ W8, 0x1
	0x03E42550 STRB W8, [X22 + 0x7D7]
	0x03E42554 LDR X2, [X21]
	0x03E42558 ADD X0, X19, 0x100
	0x03E4255C MOV X1, X20
	0x03E42560 BL 0x2254190
	0x03E42564 TBZ X0, 0x0, 0x3E42584
	0x03E42568 MOV X0, X19
	0x03E4256C BL 0x3E42594
	0x03E42570 MOV X0, X19
	0x03E42574 LDP X20, X19, [X31 + 0x20]
	0x03E42578 LDP X22, X21, [X31 + 0x10]
	0x03E4257C LDR X30, [X31], #0x30
	0x03E42580 B 0x3E42838
	0x03E42584 LDP X20, X19, [X31 + 0x20]
	0x03E42588 LDP X22, X21, [X31 + 0x10]
	0x03E4258C LDR X30, [X31], #0x30
	0x03E42590 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+208]
	003 Compare X8, 0
	004 JumpIfEqual {27}
	005 Move W9, [X0+80]
	006 Move X1, [X8+16]
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move [X0+242], W31
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move S0, 1
	013 Move S1, 1
	014 Move S2, 1
	015 Move S3, 1
	016 Move W1, 1
	017 Move X30, [X31+16]
	018 Move X1, X31
	019 Move X30, [X31+16]
	020 Call Selectable.DoSpriteSwap, X0, X1
	021 Return 
	022 Move X30, [X31+16]
	023 Call Selectable.TriggerAnimation, X0, X1
	024 Return 
	025 Move X30, [X31+16]
	026 Return 
	027 Call 0x1C17F20

Method: System.Void DoStateTransition(UnityEngine.UI.Selectable/SelectionState state, System.Boolean instant)

Disassembly:
	0x03E428D4 ADRP X0, 0x2B9000
	0x03E428D8 LDR X0, [X0 + 0xF08]
	0x03E428DC BL 0x1C16CF4
	0x03E428E0 MOVZ W8, 0x1
	0x03E428E4 STRB W8, [X21 + 0x78F]
	0x03E428E8 ADRP X21, 0x2B9000
	0x03E428EC LDR X21, [X21 + 0xF08]
	0x03E428F0 ADRP X23, 0x59F000
	0x03E428F4 LDRB W9, [X23 + 0xA48]
	0x03E428F8 LDR X8, [X21]
	0x03E428FC LDR X8, [X8 + 0xB8]
	0x03E42900 LDP S9, S8, [X8]
	0x03E42904 CBNZ W9, 0x3E42920
	0x03E42908 MOV X0, X21
	0x03E4290C BL 0x1C16CF4
	0x03E42910 LDR X8, [X21]
	0x03E42914 MOVZ W9, 0x1
	0x03E42918 STRB W9, [X23 + 0xA48]
	0x03E4291C LDR X8, [X8 + 0xB8]
	0x03E42920 LDR X0, [X22]
	0x03E42924 LDP S11, S10, [X8 + 0x8]
	0x03E42928 LDR X21, [X19 + 0x130]
	0x03E4292C LDR W8, [X0 + 0xE0]
	0x03E42930 CBNZ W8, 0x3E42938
	0x03E42934 BL 0x1C16DFC
	0x03E42938 MOV X0, X21
	0x03E4293C MOV X1, X31
	0x03E42940 MOV X2, X31
	0x03E42944 BL 0x3C354F8
	0x03E42948 TBZ X0, 0x0, 0x3E42978
	0x03E4294C LDR X21, [X19 + 0x130]
	0x03E42950 CBZ X21, 0x3E42B18
	0x03E42954 LDR W8, [X21 + 0xE8]
	0x03E42958 CMP W8, 0x3
	0x03E4295C B.NE 0x3E42978
	0x03E42960 MOV X0, X19
	0x03E42964 BL 0x3E42EAC
	0x03E42968 MOV X0, X21
	0x03E4296C MOV X1, X31
	0x03E42970 BL 0x3CE013C
	0x03E42974 B 0x3E429B4
	0x03E42978 LDR W21, [X19 + 0x110]
	0x03E4297C MOV X0, X19
	0x03E42980 AND W23, W21, 0xFFFFFFFD
	0x03E42984 BL 0x3E42EAC
	0x03E42988 CMP W23, 0x1
	0x03E4298C B.NE 0x3E429A8
	0x03E42990 FMOV S1, 1
	0x03E42994 CMP W21, 0x1
	0x03E42998 FSUB S0, S1, S0
	0x03E4299C FCSEL S8, S0, S8, HI
	0x03E429A0 FCSEL S9, S9, S0, HI
	0x03E429A4 B 0x3E429B4
	0x03E429A8 CMP W21, 0x1
	0x03E429AC FCSEL S10, S0, S10, HI
	0x03E429B0 FCSEL S11, S11, S0, HI
	0x03E429B4 LDR X0, [X19 + 0x100]
	0x03E429B8 CBZ X0, 0x3E42B18
	0x03E429BC MOV V0.16B, V9.16B
	0x03E429C0 MOV V1.16B, V8.16B
	0x03E429C4 MOV X1, X31
	0x03E429C8 BL 0x3C3E648
	0x03E429CC LDR X0, [X19 + 0x100]
	0x03E429D0 CBZ X0, 0x3E42B18
	0x03E429D4 MOV V0.16B, V11.16B
	0x03E429D8 MOV V1.16B, V10.16B
	0x03E429DC MOV X1, X31
	0x03E429E0 BL 0x3C3E764
	0x03E429E4 LDR X0, [X22]
	0x03E429E8 LDR X21, [X19 + 0x150]
	0x03E429EC LDR W8, [X0 + 0xE0]
	0x03E429F0 CBNZ W8, 0x3E429F8
	0x03E429F4 BL 0x1C16DFC
	0x03E429F8 MOV X0, X21
	0x03E429FC MOV X1, X31
	0x03E42A00 MOV X2, X31
	0x03E42A04 BL 0x3C354F8
	0x03E42A08 TBZ X0, 0x0, 0x3E42AB4
	0x03E42A0C LDR X2, [X19 + 0x108]
	0x03E42A10 MOVZ W3, 0xF00
	0x03E42A14 MOV X0, X20
	0x03E42A18 MOV X1, X19
	0x03E42A1C MOV X4, X31
	0x03E42A20 BL 0x3C3E3A4
	0x03E42A24 ADRP X20, 0x597000
	0x03E42A28 LDRB W8, [X20 + 0x78F]
	0x03E42A2C CBNZ W8, 0x3E42A44
	0x03E42A30 ADRP X0, 0x2B9000
	0x03E42A34 LDR X0, [X0 + 0xF08]
	0x03E42A38 BL 0x1C16CF4
	0x03E42A3C MOVZ W8, 0x1
	0x03E42A40 STRB W8, [X20 + 0x78F]
	0x03E42A44 ADRP X20, 0x2B9000
	0x03E42A48 LDR X20, [X20 + 0xF08]
	0x03E42A4C ADRP X21, 0x59F000
	0x03E42A50 LDRB W9, [X21 + 0xA48]
	0x03E42A54 LDR X8, [X20]
	0x03E42A58 LDR X8, [X8 + 0xB8]
	0x03E42A5C LDP S9, S8, [X8]
	0x03E42A60 CBNZ W9, 0x3E42A7C
	0x03E42A64 MOV X0, X20
	0x03E42A68 BL 0x1C16CF4
	0x03E42A6C LDR X8, [X20]
	0x03E42A70 MOVZ W9, 0x1
	0x03E42A74 STRB W9, [X21 + 0xA48]
	0x03E42A78 LDR X8, [X8 + 0xB8]
	0x03E42A7C LDR W20, [X19 + 0x110]
	0x03E42A80 LDP S10, S11, [X8 + 0x8]
	0x03E42A84 MOV X0, X19
	0x03E42A88 AND W21, W20, 0xFFFFFFFD
	0x03E42A8C BL 0x3E42EAC
	0x03E42A90 FMOV S1, 1
	0x03E42A94 CMP W21, 0x1
	0x03E42A98 FSUB S1, S1, S0
	0x03E42A9C FCSEL S0, S1, S0, EQ
	0x03E42AA0 CMP W20, 0x2
	0x03E42AA4 B.CC 0x3E42ACC
	0x03E42AA8 MOV V11.16B, V0.16B
	0x03E42AAC MOV V8.16B, V0.16B
	0x03E42AB0 B 0x3E42AD4
	0x03E42AB4 LDP X20, X19, [X31 + 0x40]
	0x03E42AB8 LDP X22, X21, [X31 + 0x30]
	0x03E42ABC LDP X30, X23, [X31 + 0x20]
	0x03E42AC0 LDP D9, D8, [X31 + 0x10]
	0x03E42AC4 LDP D11, D10, [X31], #0x50
	0x03E42AC8 RET
	0x03E42ACC MOV V10.16B, V0.16B
	0x03E42AD0 MOV V9.16B, V0.16B
	0x03E42AD4 LDR X0, [X19 + 0x108]
	0x03E42AD8 CBZ X0, 0x3E42B18
	0x03E42ADC MOV V0.16B, V9.16B
	0x03E42AE0 MOV V1.16B, V8.16B
	0x03E42AE4 MOV X1, X31
	0x03E42AE8 BL 0x3C3E648
	0x03E42AEC LDR X0, [X19 + 0x108]
	0x03E42AF0 CBZ X0, 0x3E42B18
	0x03E42AF4 LDP X20, X19, [X31 + 0x40]
	0x03E42AF8 LDP X22, X21, [X31 + 0x30]
	0x03E42AFC LDP X30, X23, [X31 + 0x20]
	0x03E42B00 LDP D9, D8, [X31 + 0x10]
	0x03E42B04 MOV V0.16B, V10.16B
	0x03E42B08 MOV V1.16B, V11.16B
	0x03E42B0C MOV X1, X31
	0x03E42B10 LDP D11, D10, [X31], #0x50
	0x03E42B14 B 0x3C3E764
	0x03E42B18 BL 0x1C16F20
	0x03E42B1C LDR X0, [X0 + 0x108]
	0x03E42B20 RET
	0x03E42B24 STR X30, [X31 - 0x30]!
	0x03E42B28 STP X22, X21, [X31 + 0x10]
	0x03E42B2C STP X20, X19, [X31 + 0x20]
	0x03E42B30 ADRP X22, 0x5A6000
	0x03E42B34 ADRP X21, 0x329000
	0x03E42B38 LDRB W8, [X22 + 0x7D8]
	0x03E42B3C LDR X21, [X21 + 0x338]
	0x03E42B40 MOV X20, X1
	0x03E42B44 MOV X19, X0

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x5A7000
	011 Move W8, [X22+1997]
	012 Move W19, W2
	013 Move W21, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2DA000
	020 Move X0, [X0+1512]
	021 Call 0x1C17CF4
	022 Move X0, 0x2B4000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1997], W8
	027 Move X0, X20
	028 Move X1, X31
	029 Call Component.get_gameObject, X0
	030 Compare X0, 0
	031 JumpIfEqual {199}
	032 Move X1, X31
	033 Call GameObject.get_activeInHierarchy, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {164}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X9, -53121024
	040 Move W8, W21
	041 Add X9, X9, 1580
	042 NotImplemented "Instruction ADR not yet implemented."
	043 Move W11, [X9]
	044 Add X10, X10, X11
	045 CallNoReturn X10
	046 Move X8, 0x2DA000
	047 Move X8, [X8+1512]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X8, [X20+208]
	054 Compare X8, 0
	055 JumpIfEqual {199}
	056 Move S8, [X20+84]
	057 Move S10, [X20+88]
	058 Move S11, [X20+92]
	059 Move S9, [X20+96]
	060 Move X1, X31
	061 Add X8, X8, 16
	062 Move X8, 0x2B4000
	063 Move X8, [X8+632]
	064 Move X1, X31
	065 Move S9, 1
	066 Move S8, W31
	067 Move X8, [X8]
	068 Move S10, W31
	069 Move S11, W31
	070 Move X8, [X8+184]
	071 Move X8, 0x2DA000
	072 Move X8, [X8+1512]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X8, [X20+208]
	079 Compare X8, 0
	080 JumpIfEqual {199}
	081 Move X1, [X20+176]
	082 Move S8, [X20+100]
	083 Move S10, [X20+104]
	084 Move S11, [X20+108]
	085 Move S9, [X20+112]
	086 Add X8, X8, 24
	087 Move X8, 0x2DA000
	088 Move X8, [X8+1512]
	089 Move X0, [X8]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X8, [X20+208]
	095 Compare X8, 0
	096 JumpIfEqual {199}
	097 Move X1, [X20+184]
	098 Move S8, [X20+116]
	099 Move S10, [X20+120]
	100 Move S11, [X20+124]
	101 Move S9, [X20+128]
	102 Add X8, X8, 32
	103 Move X8, 0x2DA000
	104 Move X8, [X8+1512]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X8, [X20+208]
	111 Compare X8, 0
	112 JumpIfEqual {199}
	113 Move X1, [X20+192]
	114 Move S8, [X20+132]
	115 Move S10, [X20+136]
	116 Move S11, [X20+140]
	117 Move S9, [X20+144]
	118 Add X8, X8, 40
	119 Move X8, 0x2DA000
	120 Move X8, [X8+1512]
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X8, [X20+208]
	127 Compare X8, 0
	128 JumpIfEqual {199}
	129 Move X1, [X20+200]
	130 Move S8, [X20+148]
	131 Move S10, [X20+152]
	132 Move S11, [X20+156]
	133 Move S9, [X20+160]
	134 Add X8, X8, 48
	135 Move W9, [X20+80]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, 0x2DA000
	140 Move X8, [X8+1512]
	141 Move X0, [X8]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move V3, [X20+164]
	147 And W1, W19, 1
	148 Move X0, X20
	149 Move X20, [X31+64]
	150 Move X19, [X31+72]
	151 Multiply S0, S8, S3
	152 Multiply S1, S10, S3
	153 Multiply S2, S11, S3
	154 Multiply S3, S9, S3
	155 Move X22, [X31+48]
	156 Move X21, [X31+56]
	157 Move X30, [X31+32]
	158 Move D9, [X31+16]
	159 Move D8, [X31+24]
	160 Move D11, [X31+80]
	161 Move D10, [X31+88]
	162 Call Selectable.StartColorTween, X0, X1, X2
	163 Return 
	164 Move X20, [X31+64]
	165 Move X19, [X31+72]
	166 Move X22, [X31+48]
	167 Move X21, [X31+56]
	168 Move X30, [X31+32]
	169 Move D9, [X31+16]
	170 Move D8, [X31+24]
	171 Move D11, [X31+80]
	172 Move D10, [X31+88]
	173 Return 
	174 Move X1, [X8]
	175 Move X0, X20
	176 Move X20, [X31+64]
	177 Move X19, [X31+72]
	178 Move X22, [X31+48]
	179 Move X21, [X31+56]
	180 Move X30, [X31+32]
	181 Move D9, [X31+16]
	182 Move D8, [X31+24]
	183 Move D11, [X31+80]
	184 Move D10, [X31+88]
	185 Call Selectable.TriggerAnimation, X0, X1
	186 Return 
	187 Move X0, X20
	188 Move X20, [X31+64]
	189 Move X19, [X31+72]
	190 Move X22, [X31+48]
	191 Move X21, [X31+56]
	192 Move X30, [X31+32]
	193 Move D9, [X31+16]
	194 Move D8, [X31+24]
	195 Move D11, [X31+80]
	196 Move D10, [X31+88]
	197 Call Selectable.DoSpriteSwap, X0, X1
	198 Return 
	199 Call 0x1C17F20

Method: UnityEngine.UI.Selectable FindSelectable(UnityEngine.Vector3 dir)

Disassembly:
	0x03E42B48 TBNZ X8, 0x0, 0x3E42B60
	0x03E42B4C ADRP X0, 0x329000
	0x03E42B50 LDR X0, [X0 + 0x338]
	0x03E42B54 BL 0x1C16CF4
	0x03E42B58 MOVZ W8, 0x1
	0x03E42B5C STRB W8, [X22 + 0x7D8]
	0x03E42B60 LDR X2, [X21]
	0x03E42B64 ADD X0, X19, 0x108
	0x03E42B68 MOV X1, X20
	0x03E42B6C BL 0x2254190
	0x03E42B70 TBZ X0, 0x0, 0x3E42B90
	0x03E42B74 MOV X0, X19
	0x03E42B78 BL 0x3E42594
	0x03E42B7C MOV X0, X19
	0x03E42B80 LDP X20, X19, [X31 + 0x20]
	0x03E42B84 LDP X22, X21, [X31 + 0x10]
	0x03E42B88 LDR X30, [X31], #0x30
	0x03E42B8C B 0x3E42838
	0x03E42B90 LDP X20, X19, [X31 + 0x20]
	0x03E42B94 LDP X22, X21, [X31 + 0x10]
	0x03E42B98 LDR X30, [X31], #0x30
	0x03E42B9C RET
	0x03E42BA0 LDR W0, [X0 + 0x110]
	0x03E42BA4 RET
	0x03E42BA8 STR X30, [X31 - 0x30]!
	0x03E42BAC STP X22, X21, [X31 + 0x10]
	0x03E42BB0 STP X20, X19, [X31 + 0x20]
	0x03E42BB4 ADRP X22, 0x5A6000
	0x03E42BB8 ADRP X21, 0x329000
	0x03E42BBC LDRB W8, [X22 + 0x7D9]
	0x03E42BC0 LDR X21, [X21 + 0x3F8]
	0x03E42BC4 MOV W20, W1
	0x03E42BC8 MOV X19, X0
	0x03E42BCC TBNZ X8, 0x0, 0x3E42BE4
	0x03E42BD0 ADRP X0, 0x329000
	0x03E42BD4 LDR X0, [X0 + 0x3F8]
	0x03E42BD8 BL 0x1C16CF4
	0x03E42BDC MOVZ W8, 0x1
	0x03E42BE0 STRB W8, [X22 + 0x7D9]
	0x03E42BE4 LDR X2, [X21]
	0x03E42BE8 ADD X0, X19, 0x110
	0x03E42BEC MOV W1, W20
	0x03E42BF0 BL 0x22543F8
	0x03E42BF4 TBZ X0, 0x0, 0x3E42C0C
	0x03E42BF8 MOV X0, X19
	0x03E42BFC LDP X20, X19, [X31 + 0x20]
	0x03E42C00 LDP X22, X21, [X31 + 0x10]
	0x03E42C04 LDR X30, [X31], #0x30
	0x03E42C08 B 0x3E42838
	0x03E42C0C LDP X20, X19, [X31 + 0x20]
	0x03E42C10 LDP X22, X21, [X31 + 0x10]
	0x03E42C14 LDR X30, [X31], #0x30
	0x03E42C18 RET
	0x03E42C1C LDR V0, [X0 + 0x114]
	0x03E42C20 RET
	0x03E42C24 STR D8, [X31 - 0x30]!
	0x03E42C28 STP X30, X21, [X31 + 0x10]
	0x03E42C2C STP X20, X19, [X31 + 0x20]
	0x03E42C30 ADRP X21, 0x5A6000
	0x03E42C34 ADRP X20, 0x320000
	0x03E42C38 LDRB W8, [X21 + 0x7DA]
	0x03E42C3C LDR X20, [X20 + 0x5A0]
	0x03E42C40 MOV V8.16B, V0.16B
	0x03E42C44 MOV X19, X0
	0x03E42C48 TBNZ X8, 0x0, 0x3E42C60
	0x03E42C4C ADRP X0, 0x320000
	0x03E42C50 LDR X0, [X0 + 0x5A0]
	0x03E42C54 BL 0x1C16CF4
	0x03E42C58 MOVZ W8, 0x1
	0x03E42C5C STRB W8, [X21 + 0x7DA]
	0x03E42C60 LDR X1, [X20]
	0x03E42C64 ADD X0, X19, 0x114
	0x03E42C68 MOV V0.16B, V8.16B
	0x03E42C6C BL 0x2254520
	0x03E42C70 TBZ X0, 0x0, 0x3E42CA4
	0x03E42C74 LDR X8, [X19]
	0x03E42C78 LDR V0, [X19 + 0x120]
	0x03E42C7C MOVZ W1, 0x1
	0x03E42C80 MOV X0, X19
	0x03E42C84 LDR X9, [X8 + 0x488]
	0x03E42C88 LDR X2, [X8 + 0x490]
	0x03E42C8C BLR X9
	0x03E42C90 MOV X0, X19
	0x03E42C94 LDP X20, X19, [X31 + 0x20]
	0x03E42C98 LDP X30, X21, [X31 + 0x10]
	0x03E42C9C LDR V8, [X31], #0x30
	0x03E42CA0 B 0x3E42838
	0x03E42CA4 LDP X20, X19, [X31 + 0x20]
	0x03E42CA8 LDP X30, X21, [X31 + 0x10]
	0x03E42CAC LDR V8, [X31], #0x30
	0x03E42CB0 RET
	0x03E42CB4 LDR V0, [X0 + 0x118]
	0x03E42CB8 RET
	0x03E42CBC STR D8, [X31 - 0x30]!
	0x03E42CC0 STP X30, X21, [X31 + 0x10]
	0x03E42CC4 STP X20, X19, [X31 + 0x20]
	0x03E42CC8 ADRP X21, 0x5A6000
	0x03E42CCC ADRP X20, 0x320000
	0x03E42CD0 LDRB W8, [X21 + 0x7DB]
	0x03E42CD4 LDR X20, [X20 + 0x5A0]
	0x03E42CD8 MOV V8.16B, V0.16B
	0x03E42CDC MOV X19, X0
	0x03E42CE0 TBNZ X8, 0x0, 0x3E42CF8
	0x03E42CE4 ADRP X0, 0x320000
	0x03E42CE8 LDR X0, [X0 + 0x5A0]
	0x03E42CEC BL 0x1C16CF4
	0x03E42CF0 MOVZ W8, 0x1
	0x03E42CF4 STRB W8, [X21 + 0x7DB]
	0x03E42CF8 LDR X1, [X20]
	0x03E42CFC ADD X0, X19, 0x118
	0x03E42D00 MOV V0.16B, V8.16B
	0x03E42D04 BL 0x2254520
	0x03E42D08 TBZ X0, 0x0, 0x3E42D3C
	0x03E42D0C LDR X8, [X19]
	0x03E42D10 LDR V0, [X19 + 0x120]
	0x03E42D14 MOVZ W1, 0x1
	0x03E42D18 MOV X0, X19
	0x03E42D1C LDR X9, [X8 + 0x488]
	0x03E42D20 LDR X2, [X8 + 0x490]
	0x03E42D24 BLR X9
	0x03E42D28 MOV X0, X19
	0x03E42D2C LDP X20, X19, [X31 + 0x20]
	0x03E42D30 LDP X30, X21, [X31 + 0x10]
	0x03E42D34 LDR V8, [X31], #0x30
	0x03E42D38 B 0x3E42838
	0x03E42D3C LDP X20, X19, [X31 + 0x20]
	0x03E42D40 LDP X30, X21, [X31 + 0x10]
	0x03E42D44 LDR V8, [X31], #0x30
	0x03E42D48 RET
	0x03E42D4C LDRB W0, [X0 + 0x11C]
	0x03E42D50 RET
	0x03E42D54 STR X30, [X31 - 0x30]!
	0x03E42D58 STP X22, X21, [X31 + 0x10]
	0x03E42D5C STP X20, X19, [X31 + 0x20]
	0x03E42D60 ADRP X22, 0x5A6000
	0x03E42D64 ADRP X21, 0x320000
	0x03E42D68 LDRB W8, [X22 + 0x7DC]
	0x03E42D6C LDR X21, [X21 + 0x590]
	0x03E42D70 MOV W20, W1
	0x03E42D74 MOV X19, X0
	0x03E42D78 TBNZ X8, 0x0, 0x3E42D90
	0x03E42D7C ADRP X0, 0x320000
	0x03E42D80 LDR X0, [X0 + 0x590]
	0x03E42D84 BL 0x1C16CF4
	0x03E42D88 MOVZ W8, 0x1
	0x03E42D8C STRB W8, [X22 + 0x7DC]
	0x03E42D90 LDR X2, [X21]
	0x03E42D94 ADD X0, X19, 0x11C
	0x03E42D98 AND W1, W20, 0x1
	0x03E42D9C BL 0x22541E0
	0x03E42DA0 TBZ X0, 0x0, 0x3E42DD4
	0x03E42DA4 LDR X8, [X19]
	0x03E42DA8 LDR V0, [X19 + 0x120]
	0x03E42DAC MOVZ W1, 0x1
	0x03E42DB0 MOV X0, X19
	0x03E42DB4 LDR X9, [X8 + 0x488]
	0x03E42DB8 LDR X2, [X8 + 0x490]
	0x03E42DBC BLR X9
	0x03E42DC0 MOV X0, X19
	0x03E42DC4 LDP X20, X19, [X31 + 0x20]
	0x03E42DC8 LDP X22, X21, [X31 + 0x10]
	0x03E42DCC LDR X30, [X31], #0x30
	0x03E42DD0 B 0x3E42838
	0x03E42DD4 LDP X20, X19, [X31 + 0x20]
	0x03E42DD8 LDP X22, X21, [X31 + 0x10]
	0x03E42DDC LDR X30, [X31], #0x30
	0x03E42DE0 RET
	0x03E42DE4 SUB X31, X31, 0x20
	0x03E42DE8 STR D8, [X31 + 0x10]
	0x03E42DEC STR X30, [X31 + 0x18]
	0x03E42DF0 LDRB W8, [X0 + 0x11C]
	0x03E42DF4 LDR V8, [X0 + 0x120]
	0x03E42DF8 CBZ W8, 0x3E42E70
	0x03E42DFC FCVT S0, S8
	0x03E42E00 ADD X0, X31, 0x8
	0x03E42E04 BL 0x3EB1C00
	0x03E42E08 FCMP S8, 0x0
	0x03E42E0C B.GE 0x3E42E28
	0x03E42E10 FMOV D1, -0.5
	0x03E42E14 FCMP D0, D1
	0x03E42E18 B.NE 0x3E42E54
	0x03E42E1C LDR V0, [X31 + 0x8]
	0x03E42E20 FMOV S1, -1
	0x03E42E24 B 0x3E42E3C
	0x03E42E28 FMOV D1, 0.5
	0x03E42E2C FCMP D0, D1
	0x03E42E30 B.NE 0x3E42E64
	0x03E42E34 LDR V0, [X31 + 0x8]
	0x03E42E38 FMOV S1, 1
	0x03E42E3C FCVTZS X8, D0
	0x00000000 INVALID
	0x03E42E44 FADD S1, S0, S1
	0x03E42E48 ANDS X31, X8, 0x1
	0x03E42E4C FCSEL S8, S0, S1, EQ
	0x03E42E50 B 0x3E42E70
	0x03E42E54 FMOV S0, -0.5
	0x03E42E58 FADD S0, S8, S0
	0x03E42E5C FRINTP S8, S0
	0x03E42E60 B 0x3E42E70
	0x03E42E64 FMOV S0, 0.5
	0x03E42E68 FADD S0, S8, S0
	0x03E42E6C FRINTM S8, S0
	0x03E42E70 MOV V0.16B, V8.16B
	0x03E42E74 LDR X30, [X31 + 0x18]
	0x03E42E78 LDR V8, [X31 + 0x10]
	0x03E42E7C ADD X31, X31, 0x20
	0x03E42E80 RET
	0x03E42E84 LDR X8, [X0]
	0x03E42E88 MOVZ W1, 0x1
	0x03E42E8C LDR X3, [X8 + 0x488]
	0x03E42E90 LDR X2, [X8 + 0x490]
	0x03E42E94 BR X3
	0x03E42E98 LDR X8, [X0]
	0x03E42E9C MOV W1, W31
	0x03E42EA0 LDR X3, [X8 + 0x488]
	0x03E42EA4 LDR X2, [X8 + 0x490]
	0x03E42EA8 BR X3
	0x03E42EAC STR D10, [X31 - 0x30]!
	0x03E42EB0 STP D9, D8, [X31 + 0x8]
	0x03E42EB4 STR X30, [X31 + 0x18]
	0x03E42EB8 STP X20, X19, [X31 + 0x20]
	0x03E42EBC ADRP X20, 0x597000
	0x03E42EC0 LDR V8, [X0 + 0x114]
	0x03E42EC4 LDRB W8, [X20 + 0x5AA]
	0x03E42EC8 LDR V9, [X0 + 0x118]
	0x03E42ECC MOV X19, X0
	0x03E42ED0 CBNZ W8, 0x3E42EE8
	0x03E42ED4 ADRP X0, 0x2B8000
	0x03E42ED8 LDR X0, [X0 + 0x4B8]
	0x03E42EDC BL 0x1C16CF4
	0x03E42EE0 MOVZ W8, 0x1
	0x03E42EE4 STRB W8, [X20 + 0x5AA]
	0x03E42EE8 ADRP X8, 0x2B8000
	0x03E42EEC LDR X8, [X8 + 0x4B8]
	0x03E42EF0 ADRP X9, 0xFFFFFFFFFCCA8000
	0x03E42EF4 LDR V0, [X9 + 0x240]
	0x03E42EF8 FABS S1, S8
	0x03E42EFC LDR X8, [X8]
	0x03E42F00 FABS S2, S9
	0x03E42F04 FCMP S1, S2
	0x03E42F08 FCSEL S1, S1, S2, GT
	0x03E42F0C LDR X8, [X8 + 0xB8]
	0x03E42F10 FMUL S0, S1, S0
	0x03E42F14 FMOV S1, 8
	0x03E42F18 LDR V3, [X8]
	0x03E42F1C FMUL S1, S3, S1
	0x03E42F20 FCMP S0, S1
	0x03E42F24 FCSEL S0, S0, S1, GT
	0x03E42F28 FABD S1, S9, S9
	0x03E42F2C FCMP S1, S0
	0x03E42F30 FMOV S8, W31
	0x03E42F34 B.MI 0x3E42F78
	0x03E42F38 LDR X8, [X19]
	0x03E42F3C LDR V9, [X19 + 0x114]
	0x03E42F40 LDR V10, [X19 + 0x118]
	0x03E42F44 MOV X0, X19
	0x03E42F48 LDR X9, [X8 + 0x418]
	0x03E42F4C LDR X1, [X8 + 0x420]
	0x03E42F50 BLR X9
	0x03E42F54 FCMP S9, S10
	0x03E42F58 B.EQ 0x3E42F78
	0x03E42F5C FSUB S0, S0, S9
	0x03E42F60 FSUB S1, S10, S9
	0x03E42F64 FDIV S0, S0, S1
	0x03E42F68 FCMP S0, 0x0
	0x03E42F6C B.MI 0x3E42F78
	0x03E42F70 FMOV S1, 1
	0x03E42F74 FMIN S8, S0, S1
	0x03E42F78 MOV V0.16B, V8.16B
	0x03E42F7C LDP X20, X19, [X31 + 0x20]
	0x03E42F80 LDR X30, [X31 + 0x18]
	0x03E42F84 LDP D9, D8, [X31 + 0x8]
	0x03E42F88 LDR V10, [X31], #0x30
	0x03E42F8C RET
	0x03E42F90 LDR X8, [X0]
	0x03E42F94 LDR V1, [X0 + 0x114]
	0x03E42F98 LDR V2, [X0 + 0x118]
	0x03E42F9C FMOV S3, 1
	0x03E42FA0 FCMP S0, 0x0
	0x03E42FA4 FMIN S0, S0, S3
	0x03E42FA8 FMOV S3, W31
	0x03E42FAC LDR X2, [X8 + 0x428]
	0x03E42FB0 LDR X1, [X8 + 0x430]
	0x03E42FB4 FCSEL S0, S0, S3, PL
	0x03E42FB8 FSUB S2, S2, S1
	0x03E42FBC FMUL S0, S0, S2
	0x03E42FC0 FADD S0, S1, S0
	0x03E42FC4 BR X2
	0x03E42FC8 LDR X0, [X0 + 0x128]
	0x03E42FCC RET
	0x03E42FD0 STR X1, [X0 + 0x128]
	0x03E42FD4 RET
	0x03E42FD8 LDRB W8, [X0 + 0x11C]
	0x03E42FDC FMOV S0, 1
	0x03E42FE0 CBZ W8, 0x3E42FE8
	0x03E42FE4 RET
	0x03E42FE8 LDR V0, [X0 + 0x118]
	0x03E42FEC LDR V1, [X0 + 0x114]
	0x03E42FF0 ADRP X8, 0xFFFFFFFFFCCA8000
	0x03E42FF4 LDR V2, [X8 + 0xBC]
	0x03E42FF8 FSUB S0, S0, S1

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X29
	011 Move [X31+104], X30
	012 Move [X31+112], X28
	013 Move [X31+120], X27
	014 Move [X31+128], X26
	015 Move [X31+136], X25
	016 Move [X31+144], X24
	017 Move [X31+152], X23
	018 Move [X31+160], X22
	019 Move [X31+168], X21
	020 Move [X31+176], X20
	021 Move [X31+184], X19
	022 Move X20, 0x5A7000
	023 Move W8, [X20+1998]
	024 Move V10, V2
	025 Move V9, V1
	026 Move V8, V0
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {43}
	032 Move X0, 0x2B2000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x2D9000
	036 Move X0, [X0+3184]
	037 Call 0x1C17CF4
	038 Move X0, 0x317000
	039 Move X0, [X0+2648]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1998], W8
	043 Move X20, 0x597000
	044 Move W8, [X20+1925]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x2B2000
	048 Move X0, [X0+1448]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+1925], W8
	052 Move X8, 0x2B2000
	053 Move X8, [X8+1448]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X8, -53833728
	060 Multiply S0, S8, S8
	061 Multiply S1, S9, S9
	062 Move V3, [X8+380]
	063 Multiply S2, S10, S10
	064 Add S0, S0, S1
	065 Add S0, S2, S0
	066 NotImplemented "Instruction FSQRT not yet implemented."
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 Move X27, 0x597000
	069 NotImplemented "Instruction FDIV not yet implemented."
	070 NotImplemented "Instruction FDIV not yet implemented."
	071 Move [X31+24], S1
	072 Move [X31+32], S2
	073 NotImplemented "Instruction FDIV not yet implemented."
	074 Move W8, [X27+1923]
	075 Compare W8, 0
	076 JumpIfNotEqual {82}
	077 Move X0, 0x2B2000
	078 Move X0, [X0+1440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X27+1923], W8
	082 Move X8, 0x2B2000
	083 Move X8, [X8+1440]
	084 Move X8, [X8]
	085 Move X8, [X8+184]
	086 Move V1, [X8]
	087 Move S0, [X8+4]
	088 Move S10, [X8+8]
	089 Move [X31+24], S0
	090 Move [X31+32], S1
	091 Move X0, X19
	092 Move X1, X31
	093 Call Component.get_transform, X0
	094 Compare X0, 0
	095 JumpIfEqual {353}
	096 Move X26, 0x317000
	097 Move X26, [X26+2648]
	098 Move X1, X31
	099 Call Transform.get_rotation, X0
	100 Move X0, X31
	101 Call Quaternion.Inverse, X0
	102 Move S5, [X31+24]
	103 Move S4, [X31+28]
	104 Move V6, V10
	105 Move X0, X31
	106 Call Quaternion.op_Multiply, X0, X1
	107 Move X0, X19
	108 Move X1, X31
	109 Move V11, V0
	110 Move V12, V1
	111 Call Component.get_transform, X0
	112 Move X21, X0
	113 Move X0, X19
	114 Move X1, X31
	115 Call Component.get_transform, X0
	116 Move X8, [X26]
	117 Move X22, X0
	118 Move W9, [X8+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X8
	122 Call 0x1C17DFC
	123 Move X20, 0x2D9000
	124 Move X20, [X20+3184]
	125 Compare X22, 0
	126 JumpIfEqual {131}
	127 Move X8, [X20]
	128 Move X9, [X22]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSEL not yet implemented."
	131 Move X0, X31
	132 Move V0, V11
	133 Move V1, V12
	134 Call Selectable.GetPointOnRectEdge, X0, X1
	135 Compare X21, 0
	136 JumpIfEqual {353}
	137 Move X0, X21
	138 Move X1, X31
	139 Call Transform.TransformPoint, X0, X1
	140 Move W8, [X19+44]
	141 Move V11, V0
	142 Move V12, V1
	143 Move V13, V2
	144 Compare W8, 0
	145 JumpIfEqual {151}
	146 Move W8, [X19+40]
	147 Move X22, X20
	148 Subtract W8, W8, 1
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSET not yet implemented."
	151 Move X22, X20
	152 Move W29, 1
	153 Move [X31+8], X31
	154 Move X28, 0x2B2000
	155 Move X28, [X28+1432]
	156 Move W9, 0xFF800000
	157 Xor W8, W29, 1
	158 Move S9, W9
	159 Move X20, X31
	160 Move X21, X31
	161 Xor W25, W8, 1
	162 Move [X31+20], S9
	163 Move X0, [X26]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {169}
	167 Call 0x1C17DFC
	168 Move X0, [X26]
	169 Move X8, [X0+184]
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X26]
	177 Move X8, [X0+184]
	178 Move X8, [X8]
	179 Compare X8, 0
	180 JumpIfEqual {353}
	181 Move W9, [X8+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X0, [X28]
	184 Add X8, X8, X20
	185 Move X23, [X8+32]
	186 Move W9, [X0+224]
	187 Compare W9, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X23
	191 Move X1, X19
	192 Move X2, X31
	193 Call Object.op_Equality, X0, X1
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {308}
	198 Compare X23, 0
	199 JumpIfEqual {353}
	200 Move X8, [X23]
	201 Move X0, X23
	202 Move X9, [X8+696]
	203 Move X1, [X8+704]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {308}
	209 Move W8, [X23+40]
	210 Compare W8, 0
	211 JumpIfEqual {308}
	212 Move X0, X23
	213 Move X1, X31
	214 Call Component.get_transform, X0
	215 Compare X0, 0
	216 JumpIfEqual {221}
	217 Move X8, [X22]
	218 Move X9, [X0]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CSEL not yet implemented."
	221 Move X24, X31
	222 Move X0, [X28]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X0, X24
	228 Move X1, X31
	229 Move X2, X31
	230 Call Object.op_Inequality, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {246}
	235 Compare X24, 0
	236 JumpIfEqual {353}
	237 Move X0, X24
	238 Move X1, X31
	239 Call RectTransform.get_rect, X0
	240 Move S4, 0.5
	241 Multiply S2, S2, S4
	242 Multiply S3, S3, S4
	243 Add S14, S0, S2
	244 Add S15, S1, S3
	245 Move S8, W31
	246 Move W8, [X27+1923]
	247 Compare W8, 0
	248 JumpIfNotEqual {254}
	249 Move X0, 0x2B2000
	250 Move X0, [X0+1440]
	251 Call 0x1C17CF4
	252 Move W8, 1
	253 Move [X27+1923], W8
	254 Move X8, 0x2B2000
	255 Move X8, [X8+1440]
	256 Move X8, [X8]
	257 Move X8, [X8+184]
	258 Move S14, [X8]
	259 Move S15, [X8+4]
	260 Move V8, [X8+8]
	261 Move X0, X23
	262 Move X1, X31
	263 Call Component.get_transform, X0
	264 Compare X0, 0
	265 JumpIfEqual {353}
	266 Move V0, V14
	267 Move V1, V15
	268 Move V2, V8
	269 Move X1, X31
	270 Call Transform.TransformPoint, X0, X1
	271 Subtract S4, S0, S11
	272 Subtract S3, S1, S12
	273 Subtract S0, S2, S13
	274 Move S2, [X31+24]
	275 Move S1, [X31+28]
	276 Multiply S1, S1, S4
	277 Multiply S2, S2, S3
	278 Add S1, S1, S2
	279 Multiply S2, S10, S0
	280 Add S1, S2, S1
	281 NotImplemented "Instruction FCMP not yet implemented."
	282 NotImplemented "Instruction CSET not yet implemented."
	283 Or W8, W8, W25
	284 Move TEMP, X8
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 Invalid "Jump target not found in method."
	288 Multiply S2, S4, S4
	289 Multiply S3, S3, S3
	290 Multiply S0, S0, S0
	291 Add S2, S2, S3
	292 Add S0, S0, S2
	293 NotImplemented "Instruction FNEG not yet implemented."
	294 Multiply S0, S0, S1
	295 NotImplemented "Instruction FCMP not yet implemented."
	296 Move X21, X23
	297 Multiply S2, S4, S4
	298 Multiply S3, S3, S3
	299 Add S2, S2, S3
	300 Multiply S0, S0, S0
	301 Add S0, S0, S2
	302 NotImplemented "Instruction FDIV not yet implemented."
	303 Move V0, [X31+20]
	304 NotImplemented "Instruction FCMP not yet implemented."
	305 Move V0, V9
	306 Move [X31+8], X23
	307 Move [X31+20], S1
	308 Move V0, V9
	309 Add X20, X20, 1
	310 Move V9, V0
	311 Move X19, [X31+8]
	312 Move TEMP, X29
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfEqual {329}
	316 Move X0, [X28]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X31
	322 Move X1, X19
	323 Move X2, X31
	324 Call Object.op_Equality, X0, X1
	325 Move TEMP, X0
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfEqual {330}
	329 Move X21, X19
	330 Move X0, X21
	331 Move X20, [X31+176]
	332 Move X19, [X31+184]
	333 Move X22, [X31+160]
	334 Move X21, [X31+168]
	335 Move X24, [X31+144]
	336 Move X23, [X31+152]
	337 Move X26, [X31+128]
	338 Move X25, [X31+136]
	339 Move X28, [X31+112]
	340 Move X27, [X31+120]
	341 Move X29, [X31+96]
	342 Move X30, [X31+104]
	343 Move D9, [X31+80]
	344 Move D8, [X31+88]
	345 Move D11, [X31+64]
	346 Move D10, [X31+72]
	347 Move D13, [X31+48]
	348 Move D12, [X31+56]
	349 Move D15, [X31+32]
	350 Move D14, [X31+40]
	351 Add X31, X31, 192
	352 Return X0
	353 Call 0x1C17F20
	354 Call 0x1C17F28

Method: UnityEngine.Vector3 GetPointOnRectEdge(UnityEngine.RectTransform rect, UnityEngine.Vector2 dir)

Disassembly:
	0x03E42FFC FMUL S0, S0, S2
	0x03E43000 RET
	0x03E43004 STP X30, X21, [X31 - 0x20]!
	0x03E43008 STP X20, X19, [X31 + 0x10]
	0x03E4300C ADRP X21, 0x5A5000
	0x03E43010 ADRP X20, 0x328000
	0x03E43014 LDRB W8, [X21 + 0x7DD]
	0x03E43018 LDR X20, [X20 + 0x400]
	0x03E4301C MOV X19, X0
	0x03E43020 TBNZ X8, 0x0, 0x3E43044
	0x03E43024 ADRP X0, 0x315000
	0x03E43028 LDR X0, [X0 + 0xA58]
	0x03E4302C BL 0x1C16CF4
	0x03E43030 ADRP X0, 0x328000
	0x03E43034 LDR X0, [X0 + 0x400]
	0x03E43038 BL 0x1C16CF4
	0x03E4303C MOVZ W8, 0x1
	0x03E43040 STRB W8, [X21 + 0x7DD]
	0x03E43044 MOVZ W8, 0x3F800000
	0x03E43048 STR W8, [X19 + 0x118]
	0x03E4304C LDR X0, [X20]
	0x03E43050 ADRP X21, 0x315000
	0x03E43054 LDR X21, [X21 + 0xA58]
	0x03E43058 BL 0x1C16F10
	0x03E4305C MOV X20, X0
	0x03E43060 BL 0x3E430C0
	0x03E43064 STR X20, [X19 + 0x128]
	0x03E43068 ADRP X20, 0x596000
	0x03E4306C LDRB W8, [X20 + 0x78F]
	0x03E43070 CBNZ W8, 0x3E43088
	0x03E43074 ADRP X0, 0x2B8000
	0x03E43078 LDR X0, [X0 + 0xF08]
	0x03E4307C BL 0x1C16CF4
	0x03E43080 MOVZ W8, 0x1
	0x03E43084 STRB W8, [X20 + 0x78F]
	0x03E43088 ADRP X8, 0x2B8000
	0x03E4308C LDR X8, [X8 + 0xF08]
	0x03E43090 LDR X8, [X8]
	0x03E43094 LDR X8, [X8 + 0xB8]
	0x03E43098 LDR V0, [X8]
	0x03E4309C STR D0, [X19 + 0x158]
	0x03E430A0 LDR X0, [X21]
	0x03E430A4 LDR W8, [X0 + 0xE0]
	0x03E430A8 CBNZ W8, 0x3E430B0
	0x03E430AC BL 0x1C16DFC
	0x03E430B0 MOV X0, X19
	0x03E430B4 LDP X20, X19, [X31 + 0x10]
	0x03E430B8 LDP X30, X21, [X31], #0x20
	0x03E430BC B 0x3E3B678
	0x03E430C0 STP X30, X21, [X31 - 0x20]!
	0x03E430C4 STP X20, X19, [X31 + 0x10]
	0x03E430C8 ADRP X20, 0x5A5000
	0x03E430CC ADRP X21, 0x315000
	0x03E430D0 LDRB W8, [X20 + 0x7E6]
	0x03E430D4 LDR X21, [X21 + 0x8D0]
	0x03E430D8 MOV X19, X0
	0x03E430DC TBNZ X8, 0x0, 0x3E430F4
	0x03E430E0 ADRP X0, 0x315000
	0x03E430E4 LDR X0, [X0 + 0x8D0]
	0x03E430E8 BL 0x1C16CF4
	0x03E430EC MOVZ W8, 0x1
	0x03E430F0 STRB W8, [X20 + 0x7E6]
	0x03E430F4 LDR X1, [X21]
	0x03E430F8 MOV X0, X19
	0x03E430FC LDP X20, X19, [X31 + 0x10]
	0x03E43100 LDP X30, X21, [X31], #0x20
	0x03E43104 B 0x272A4A4
	0x03E43108 RET
	0x03E4310C RET
	0x03E43110 RET
	0x03E43114 STP X30, X19, [X31 - 0x10]!
	0x03E43118 MOV X19, X0
	0x03E4311C BL 0x3E3BAA8
	0x03E43120 MOV X0, X19
	0x03E43124 BL 0x3E42594
	0x03E43128 LDR X8, [X19]
	0x03E4312C LDR V0, [X19 + 0x120]
	0x03E43130 MOV X0, X19
	0x03E43134 MOV W1, W31
	0x03E43138 LDR X9, [X8 + 0x488]
	0x03E4313C LDR X2, [X8 + 0x490]
	0x03E43140 BLR X9
	0x03E43144 MOV X0, X19
	0x03E43148 LDP X30, X19, [X31], #0x10
	0x03E4314C B 0x3E42838
	0x03E43150 STP X30, X19, [X31 - 0x10]!
	0x03E43154 MOV X19, X0
	0x03E43158 ADD X0, X0, 0x160
	0x03E4315C MOV X1, X31
	0x03E43160 BL 0x3C3E3A8
	0x03E43164 MOV X0, X19
	0x03E43168 LDP X30, X19, [X31], #0x10
	0x03E4316C B 0x3E3BD80
	0x03E43170 STP X30, X19, [X31 - 0x10]!
	0x03E43174 LDRB W8, [X0 + 0x161]
	0x03E43178 CBZ W8, 0x3E431A8

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x5A6000
	011 Move X21, 0x2B1000
	012 Move W8, [X20+1999]
	013 Move X21, [X21+1432]
	014 Move V8, V1
	015 Move V9, V0
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x2B1000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1999], W8
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {55}
	039 Move X19, 0x596000
	040 Move W8, [X19+1923]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0x2B1000
	044 Move X0, [X0+1440]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+1923], W8
	048 Move X8, 0x2B1000
	049 Move X8, [X8+1440]
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move S0, [X8]
	053 Move S1, [X8+4]
	054 Move V2, [X8+8]
	055 Move X20, 0x597000
	056 Move W8, [X20+1935]
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x2B9000
	060 Move X0, [X0+3848]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+1935], W8
	064 Move X8, 0x2B9000
	065 Move X8, [X8+3848]
	066 Move X8, [X8]
	067 Move X8, [X8+184]
	068 Move S0, [X8]
	069 Move S1, [X8+4]
	070 Move X8, -53841920
	071 Move V2, [X8+3872]
	072 Subtract S0, S9, S0
	073 Subtract S1, S8, S1
	074 Multiply S0, S0, S0
	075 Multiply S1, S1, S1
	076 Add S0, S0, S1
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction FABS not yet implemented."
	079 NotImplemented "Instruction FABS not yet implemented."
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 NotImplemented "Instruction FCSEL not yet implemented."
	082 NotImplemented "Instruction FDIV not yet implemented."
	083 NotImplemented "Instruction FDIV not yet implemented."
	084 Compare X19, 0
	085 JumpIfEqual {114}
	086 Move X0, X19
	087 Move X1, X31
	088 Call RectTransform.get_rect, X0
	089 Move S10, 0.5
	090 Multiply S2, S2, S10
	091 Multiply S3, S3, S10
	092 Move X0, X19
	093 Move X1, X31
	094 Add S11, S0, S2
	095 Add S12, S1, S3
	096 Call RectTransform.get_rect, X0
	097 Multiply S0, S9, S10
	098 Multiply S1, S8, S10
	099 Multiply S0, S0, S2
	100 Multiply S1, S1, S3
	101 Add S0, S11, S0
	102 Add S1, S12, S1
	103 Move S2, W31
	104 Move X20, [X31+64]
	105 Move X19, [X31+72]
	106 Move X30, [X31+48]
	107 Move X21, [X31+56]
	108 Move D9, [X31+32]
	109 Move D8, [X31+40]
	110 Move D11, [X31+16]
	111 Move D10, [X31+24]
	112 Move V12, [X31+80]
	113 Return X0
	114 Call 0x1C17F20

Method: System.Void Navigate(UnityEngine.EventSystems.AxisEventData eventData, UnityEngine.UI.Selectable sel)

Disassembly:
	0x03E4317C LDR X8, [X0]
	0x03E43180 STRB W31, [X0 + 0x161]
	0x03E43184 LDR V0, [X0 + 0x120]
	0x03E43188 MOV W1, W31
	0x03E4318C LDR X9, [X8 + 0x488]
	0x03E43190 LDR X2, [X8 + 0x490]
	0x03E43194 MOV X19, X0
	0x03E43198 BLR X9
	0x03E4319C MOV X0, X19
	0x03E431A0 LDP X30, X19, [X31], #0x10
	0x03E431A4 B 0x3E42838
	0x03E431A8 LDP X30, X19, [X31], #0x10
	0x03E431AC RET
	0x03E431B0 STR D8, [X31 - 0x30]!
	0x03E431B4 STP X30, X21, [X31 + 0x10]
	0x03E431B8 STP X20, X19, [X31 + 0x20]
	0x03E431BC ADRP X20, 0x5A5000
	0x03E431C0 ADRP X21, 0x2B0000
	0x03E431C4 LDRB W8, [X20 + 0x7DE]
	0x03E431C8 LDR X21, [X21 + 0x598]
	0x03E431CC MOV X19, X0
	0x03E431D0 TBNZ X8, 0x0, 0x3E43200
	0x03E431D4 ADRP X0, 0x2B0000
	0x03E431D8 LDR X0, [X0 + 0x598]
	0x03E431DC BL 0x1C16CF4
	0x03E431E0 ADRP X0, 0x315000
	0x03E431E4 LDR X0, [X0 + 0x8B8]
	0x03E431E8 BL 0x1C16CF4
	0x03E431EC ADRP X0, 0x328000
	0x03E431F0 LDR X0, [X0 + 0x408]
	0x03E431F4 BL 0x1C16CF4
	0x03E431F8 MOVZ W8, 0x1
	0x03E431FC STRB W8, [X20 + 0x7DE]
	0x03E43200 LDR V0, [X19 + 0x120]
	0x03E43204 MOV X0, X19
	0x03E43208 BL 0x3E43398
	0x03E4320C MOV X0, X19
	0x03E43210 STR S0, [X19 + 0x120]
	0x03E43214 BL 0x3E42EAC
	0x03E43218 LDR X0, [X21]
	0x03E4321C LDR X20, [X19 + 0x140]
	0x03E43220 MOV V8.16B, V0.16B
	0x03E43224 LDR W8, [X0 + 0xE0]
	0x03E43228 CBNZ W8, 0x3E43230
	0x03E4322C BL 0x1C16DFC
	0x03E43230 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5A6000
	007 Move X22, 0x2B1000
	008 Move W8, [X21+2000]
	009 Move X22, [X22+1432]
	010 Move X20, X2
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2B1000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2000], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {60}
	034 Compare X20, 0
	035 JumpIfEqual {66}
	036 Move X8, [X20]
	037 Move X0, X20
	038 Move X9, [X8+456]
	039 Move X1, [X8+464]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {60}
	045 Move X0, X20
	046 Move X1, X31
	047 Call Component.get_gameObject, X0
	048 Compare X19, 0
	049 JumpIfEqual {66}
	050 Move X1, X0
	051 Move X0, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call BaseEventData.set_selectedObject, X0, X1
	059 Return 
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 
	066 Call 0x1C17F20

Method: UnityEngine.UI.Selectable FindSelectableOnLeft()

Disassembly:
	0x03E3DA0C LDR X0, [X0 + 0xCA0]
	0x03E3DA10 BL 0x1C16CF4
	0x03E3DA14 MOVZ W8, 0x1
	0x03E3DA18 STRB W8, [X20 + 0x7BA]
	0x03E3DA1C LDR X1, [X21]
	0x03E3DA20 MOV X0, X19
	0x03E3DA24 LDP X20, X19, [X31 + 0x10]
	0x03E3DA28 LDP X30, X21, [X31], #0x20
	0x03E3DA2C B 0x272A94C
	0x03E3DA30 STR X30, [X31 - 0x20]!
	0x03E3DA34 STP X20, X19, [X31 + 0x10]
	0x03E3DA38 CMP W1, 0x2
	0x03E3DA3C MOV X19, X0
	0x03E3DA40 B.EQ 0x3E3DA58
	0x03E3DA44 CBNZ W1, 0x3E3DAAC
	0x03E3DA48 MOV X0, X19
	0x03E3DA4C LDP X20, X19, [X31 + 0x10]
	0x03E3DA50 LDR X30, [X31], #0x20
	0x03E3DA54 B 0x3E3DAB8
	0x03E3DA58 MOV X0, X19
	0x03E3DA5C BL 0x3E3DE10
	0x03E3DA60 ADRP X20, 0x59C000
	0x03E3DA64 LDRB W8, [X20 + 0x78F]
	0x03E3DA68 CBNZ W8, 0x3E3DA80
	0x03E3DA6C ADRP X0, 0x2BE000
	0x03E3DA70 LDR X0, [X0 + 0xF08]
	0x03E3DA74 BL 0x1C16CF4
	0x03E3DA78 MOVZ W8, 0x1
	0x03E3DA7C STRB W8, [X20 + 0x78F]
	0x03E3DA80 ADRP X8, 0x2BE000
	0x03E3DA84 LDR X8, [X8 + 0xF08]
	0x03E3DA88 MOV X0, X19
	0x03E3DA8C LDR X8, [X8]
	0x03E3DA90 LDR X8, [X8 + 0xB8]
	0x03E3DA94 LDP S0, S1, [X8]
	0x03E3DA98 BL 0x3E3E168
	0x03E3DA9C MOV X0, X19
	0x03E3DAA0 BL 0x3E3E2E8
	0x03E3DAA4 MOVZ W8, 0x1
	0x03E3DAA8 STRB W8, [X19 + 0xFC]
	0x03E3DAAC LDP X20, X19, [X31 + 0x10]
	0x03E3DAB0 LDR X30, [X31], #0x20
	0x03E3DAB4 RET
	0x03E3DAB8 STR X30, [X31 - 0x40]!
	0x03E3DABC STP X24, X23, [X31 + 0x10]
	0x03E3DAC0 STP X22, X21, [X31 + 0x20]
	0x03E3DAC4 STP X20, X19, [X31 + 0x30]
	0x03E3DAC8 ADRP X20, 0x5AB000
	0x03E3DACC ADRP X23, 0x2B6000
	0x03E3DAD0 LDRB W8, [X20 + 0x7A7]
	0x03E3DAD4 LDR X23, [X23 + 0x598]
	0x03E3DAD8 MOV X19, X0
	0x03E3DADC TBNZ X8, 0x0, 0x3E3DB00
	0x03E3DAE0 ADRP X0, 0x2B6000

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+40]
	009 Move X19, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, [X19+64]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {25}
	016 Move X0, X31
	017 Move X20, [X31+48]
	018 Move X19, [X31+56]
	019 Move X30, [X31+32]
	020 Move D9, [X31+16]
	021 Move D8, [X31+24]
	022 Move D11, [X31+64]
	023 Move D10, [X31+72]
	024 Return X0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Component.get_transform, X0
	028 Compare X0, 0
	029 JumpIfEqual {68}
	030 Move X1, X31
	031 Call Transform.get_rotation, X0
	032 Move X20, 0x59C000
	033 Move W8, [X20+2927]
	034 Move V8, V0
	035 Move V9, V1
	036 Move V10, V2
	037 Move V11, V3
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x2B7000
	041 Move X0, [X0+1440]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2927], W8
	045 Move X8, 0x2B7000
	046 Move X8, [X8+1440]
	047 Move V0, V8
	048 Move V1, V9
	049 Move V2, V10
	050 Move X8, [X8]
	051 Move V3, V11
	052 Move X0, X31
	053 Move X8, [X8+184]
	054 Move S4, [X8+48]
	055 Move S5, [X8+52]
	056 Move V6, [X8+56]
	057 Call Quaternion.op_Multiply, X0, X1
	058 Move X0, X19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X30, [X31+32]
	062 Move D9, [X31+16]
	063 Move D8, [X31+24]
	064 Move D11, [X31+64]
	065 Move D10, [X31+72]
	066 Call Selectable.FindSelectable, X0, X1
	067 Return X0
	068 Call 0x1C17F20

Method: UnityEngine.UI.Selectable FindSelectableOnRight()

Disassembly:
	0x03E3DB08 BL 0x3C32E90
	0x03E3DB0C LDR X8, [X23]
	0x03E3DB10 LDR X21, [X19 + 0x48]
	0x03E3DB14 MOV X20, X0
	0x03E3DB18 LDR W9, [X8 + 0xE0]
	0x03E3DB1C CBNZ W9, 0x3E3DB28
	0x03E3DB20 MOV X0, X8
	0x03E3DB24 BL 0x1C16DFC
	0x03E3DB28 MOV X0, X21
	0x03E3DB2C MOV X1, X31
	0x03E3DB30 MOV X2, X31
	0x03E3DB34 BL 0x3C3883C
	0x03E3DB38 MOV X8, X31
	0x03E3DB3C TBNZ X0, 0x0, 0x3E3DB74
	0x03E3DB40 LDR X0, [X19 + 0x48]
	0x03E3DB44 CBZ X0, 0x3E3DE0C
	0x03E3DB48 MOV X1, X31
	0x03E3DB4C BL 0x3C32E90
	0x03E3DB50 CBZ X0, 0x3E3DB70
	0x03E3DB54 ADRP X8, 0x2DD000
	0x03E3DB58 LDR X8, [X8 + 0xC70]
	0x03E3DB5C LDR X9, [X0]
	0x03E3DB60 LDR X8, [X8]
	0x03E3DB64 CMP X9, X8
	0x03E3DB68 CSEL X8, X0, X31, EQ
	0x03E3DB6C B 0x3E3DB74
	0x03E3DB70 MOV X8, X31
	0x03E3DB74 STR X8, [X19 + 0x110]
	0x03E3DB78 LDR X0, [X23]
	0x03E3DB7C LDR X21, [X19 + 0x50]
	0x03E3DB80 LDR W8, [X0 + 0xE0]
	0x03E3DB84 CBNZ W8, 0x3E3DB8C
	0x03E3DB88 BL 0x1C16DFC
	0x03E3DB8C MOV X0, X21
	0x03E3DB90 MOV X1, X31
	0x03E3DB94 MOV X2, X31
	0x03E3DB98 BL 0x3C3883C
	0x03E3DB9C MOV X8, X31
	0x03E3DBA0 TBNZ X0, 0x0, 0x3E3DBD8
	0x03E3DBA4 LDR X0, [X19 + 0x50]
	0x03E3DBA8 CBZ X0, 0x3E3DE0C
	0x03E3DBAC MOV X1, X31
	0x03E3DBB0 BL 0x3C32E90
	0x03E3DBB4 CBZ X0, 0x3E3DBD4
	0x03E3DBB8 ADRP X8, 0x2DD000
	0x03E3DBBC LDR X8, [X8 + 0xC70]
	0x03E3DBC0 LDR X9, [X0]
	0x03E3DBC4 LDR X8, [X8]
	0x03E3DBC8 CMP X9, X8
	0x03E3DBCC CSEL X8, X0, X31, EQ
	0x03E3DBD0 B 0x3E3DBD8
	0x03E3DBD4 MOV X8, X31
	0x03E3DBD8 MOV X0, X19
	0x03E3DBDC STR X8, [X19 + 0x118]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+40]
	009 Move X19, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, [X19+72]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {25}
	016 Move X0, X31
	017 Move X20, [X31+48]
	018 Move X19, [X31+56]
	019 Move X30, [X31+32]
	020 Move D9, [X31+16]
	021 Move D8, [X31+24]
	022 Move D11, [X31+64]
	023 Move D10, [X31+72]
	024 Return X0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Component.get_transform, X0
	028 Compare X0, 0
	029 JumpIfEqual {68}
	030 Move X1, X31
	031 Call Transform.get_rotation, X0
	032 Move X20, 0x59C000
	033 Move W8, [X20+2928]
	034 Move V8, V0
	035 Move V9, V1
	036 Move V10, V2
	037 Move V11, V3
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x2B7000
	041 Move X0, [X0+1440]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2928], W8
	045 Move X8, 0x2B7000
	046 Move X8, [X8+1440]
	047 Move V0, V8
	048 Move V1, V9
	049 Move V2, V10
	050 Move X8, [X8]
	051 Move V3, V11
	052 Move X0, X31
	053 Move X8, [X8+184]
	054 Move S4, [X8+60]
	055 Move S5, [X8+64]
	056 Move V6, [X8+68]
	057 Call Quaternion.op_Multiply, X0, X1
	058 Move X0, X19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X30, [X31+32]
	062 Move D9, [X31+16]
	063 Move D8, [X31+24]
	064 Move D11, [X31+64]
	065 Move D10, [X31+72]
	066 Call Selectable.FindSelectable, X0, X1
	067 Return X0
	068 Call 0x1C17F20

Method: UnityEngine.UI.Selectable FindSelectableOnUp()

Disassembly:
	0x03E3DC04 BL 0x1C16DFC
	0x03E3DC08 MOV X0, X21
	0x03E3DC0C MOV X1, X20
	0x03E3DC10 MOV X2, X31
	0x03E3DC14 BL 0x3C3883C
	0x03E3DC18 LDR X8, [X19 + 0x110]
	0x03E3DC1C MOV W21, W0
	0x03E3DC20 MOV X1, X31
	0x03E3DC24 MOV X0, X8
	0x03E3DC28 BL 0x3C38948
	0x03E3DC2C TBZ X0, 0x0, 0x3E3DC70
	0x03E3DC30 LDR X0, [X19 + 0x110]
	0x03E3DC34 CBZ X0, 0x3E3DE0C
	0x03E3DC38 MOV X1, X31
	0x03E3DC3C BL 0x3C3F49C
	0x03E3DC40 LDR X8, [X23]
	0x03E3DC44 MOV X22, X0
	0x03E3DC48 LDR W9, [X8 + 0xE0]
	0x03E3DC4C CBNZ W9, 0x3E3DC58
	0x03E3DC50 MOV X0, X8
	0x03E3DC54 BL 0x1C16DFC
	0x03E3DC58 MOV X0, X22
	0x03E3DC5C MOV X1, X20
	0x03E3DC60 MOV X2, X31
	0x03E3DC64 BL 0x3C3883C
	0x03E3DC68 AND W24, W0, 0x1
	0x03E3DC6C B 0x3E3DC74
	0x03E3DC70 MOVZ W24, 0x1
	0x03E3DC74 LDR X0, [X23]
	0x03E3DC78 LDR X22, [X19 + 0x118]
	0x03E3DC7C LDR W8, [X0 + 0xE0]
	0x03E3DC80 CBNZ W8, 0x3E3DC88
	0x03E3DC84 BL 0x1C16DFC
	0x03E3DC88 MOV X0, X22
	0x03E3DC8C MOV X1, X31
	0x03E3DC90 BL 0x3C38948
	0x03E3DC94 TBZ X0, 0x0, 0x3E3DCD8
	0x03E3DC98 LDR X0, [X19 + 0x118]
	0x03E3DC9C CBZ X0, 0x3E3DE0C
	0x03E3DCA0 MOV X1, X31
	0x03E3DCA4 BL 0x3C3F49C
	0x03E3DCA8 LDR X8, [X23]
	0x03E3DCAC MOV X22, X0
	0x03E3DCB0 LDR W9, [X8 + 0xE0]
	0x03E3DCB4 CBNZ W9, 0x3E3DCC0
	0x03E3DCB8 MOV X0, X8
	0x03E3DCBC BL 0x1C16DFC
	0x03E3DCC0 MOV X0, X22
	0x03E3DCC4 MOV X1, X20
	0x03E3DCC8 MOV X2, X31
	0x03E3DCCC BL 0x3C3883C
	0x03E3DCD0 AND W8, W0, 0x1
	0x03E3DCD4 B 0x3E3DCDC
	0x03E3DCD8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+40]
	009 Move X19, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, [X19+48]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 2
	014 Compare TEMP, 2
	015 JumpIfEqual {25}
	016 Move X0, X31
	017 Move X20, [X31+48]
	018 Move X19, [X31+56]
	019 Move X30, [X31+32]
	020 Move D9, [X31+16]
	021 Move D8, [X31+24]
	022 Move D11, [X31+64]
	023 Move D10, [X31+72]
	024 Return X0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Component.get_transform, X0
	028 Compare X0, 0
	029 JumpIfEqual {68}
	030 Move X1, X31
	031 Call Transform.get_rotation, X0
	032 Move X20, 0x59C000
	033 Move W8, [X20+1926]
	034 Move V8, V0
	035 Move V9, V1
	036 Move V10, V2
	037 Move V11, V3
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x2B7000
	041 Move X0, [X0+1440]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+1926], W8
	045 Move X8, 0x2B7000
	046 Move X8, [X8+1440]
	047 Move V0, V8
	048 Move V1, V9
	049 Move V2, V10
	050 Move X8, [X8]
	051 Move V3, V11
	052 Move X0, X31
	053 Move X8, [X8+184]
	054 Move S4, [X8+24]
	055 Move S5, [X8+28]
	056 Move V6, [X8+32]
	057 Call Quaternion.op_Multiply, X0, X1
	058 Move X0, X19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X30, [X31+32]
	062 Move D9, [X31+16]
	063 Move D8, [X31+24]
	064 Move D11, [X31+64]
	065 Move D10, [X31+72]
	066 Call Selectable.FindSelectable, X0, X1
	067 Return X0
	068 Call 0x1C17F20

Method: UnityEngine.UI.Selectable FindSelectableOnDown()

Disassembly:
	0x03E3DD00 BL 0x1C16DFC
	0x03E3DD04 MOV X0, X20
	0x03E3DD08 MOV X1, X31
	0x03E3DD0C BL 0x3C38948
	0x03E3DD10 TBZ X0, 0x0, 0x3E3DD34
	0x03E3DD14 LDR W8, [X19 + 0x58]
	0x03E3DD18 CMP W8, 0x2
	0x03E3DD1C CSET W8, EQ
	0x03E3DD20 B 0x3E3DD38
	0x03E3DD24 CBZ X9, 0x3E3DE0C
	0x03E3DD28 MOV W8, W31
	0x03E3DD2C STRB W31, [X9 + 0xFD]
	0x03E3DD30 B 0x3E3DD74
	0x03E3DD34 MOV W8, W31
	0x03E3DD38 STRB W8, [X21 + 0xFD]
	0x03E3DD3C LDR X0, [X23]
	0x03E3DD40 LDR X20, [X19 + 0x118]
	0x03E3DD44 LDR W8, [X0 + 0xE0]
	0x03E3DD48 CBNZ W8, 0x3E3DD50
	0x03E3DD4C BL 0x1C16DFC
	0x03E3DD50 MOV X0, X20
	0x03E3DD54 MOV X1, X31
	0x03E3DD58 BL 0x3C38948
	0x03E3DD5C TBZ X0, 0x0, 0x3E3DD70
	0x03E3DD60 LDR W8, [X19 + 0x5C]
	0x03E3DD64 CMP W8, 0x2
	0x03E3DD68 CSET W8, EQ
	0x03E3DD6C B 0x3E3DD74
	0x03E3DD70 MOV W8, W31
	0x03E3DD74 STRB W8, [X19 + 0xFE]
	0x03E3DD78 LDR X0, [X23]
	0x03E3DD7C LDR X20, [X19 + 0x110]
	0x03E3DD80 LDR W8, [X0 + 0xE0]
	0x03E3DD84 CBNZ W8, 0x3E3DD8C
	0x03E3DD88 BL 0x1C16DFC
	0x03E3DD8C MOV X0, X20
	0x03E3DD90 MOV X1, X31
	0x03E3DD94 MOV X2, X31
	0x03E3DD98 BL 0x3C3883C
	0x03E3DD9C FMOV S3, W31
	0x03E3DDA0 TBNZ X0, 0x0, 0x3E3DDB4
	0x03E3DDA4 LDR X0, [X19 + 0x110]
	0x03E3DDA8 CBZ X0, 0x3E3DE0C
	0x03E3DDAC MOV X1, X31
	0x03E3DDB0 BL 0x3C3E51C
	0x03E3DDB4 STR S3, [X19 + 0x100]
	0x03E3DDB8 LDR X0, [X23]
	0x03E3DDBC LDR X20, [X19 + 0x118]
	0x03E3DDC0 LDR W8, [X0 + 0xE0]
	0x03E3DDC4 CBNZ W8, 0x3E3DDCC
	0x03E3DDC8 BL 0x1C16DFC
	0x03E3DDCC MOV X0, X20
	0x03E3DDD0 MOV X1, X31
	0x03E3DDD4 MOV X2, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+40]
	009 Move X19, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, [X19+56]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 2
	014 Compare TEMP, 2
	015 JumpIfEqual {25}
	016 Move X0, X31
	017 Move X20, [X31+48]
	018 Move X19, [X31+56]
	019 Move X30, [X31+32]
	020 Move D9, [X31+16]
	021 Move D8, [X31+24]
	022 Move D11, [X31+64]
	023 Move D10, [X31+72]
	024 Return X0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Component.get_transform, X0
	028 Compare X0, 0
	029 JumpIfEqual {68}
	030 Move X1, X31
	031 Call Transform.get_rotation, X0
	032 Move X20, 0x59C000
	033 Move W8, [X20+2749]
	034 Move V8, V0
	035 Move V9, V1
	036 Move V10, V2
	037 Move V11, V3
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x2B7000
	041 Move X0, [X0+1440]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2749], W8
	045 Move X8, 0x2B7000
	046 Move X8, [X8+1440]
	047 Move V0, V8
	048 Move V1, V9
	049 Move V2, V10
	050 Move X8, [X8]
	051 Move V3, V11
	052 Move X0, X31
	053 Move X8, [X8+184]
	054 Move S4, [X8+36]
	055 Move S5, [X8+40]
	056 Move V6, [X8+44]
	057 Call Quaternion.op_Multiply, X0, X1
	058 Move X0, X19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X30, [X31+32]
	062 Move D9, [X31+16]
	063 Move D8, [X31+24]
	064 Move D11, [X31+64]
	065 Move D10, [X31+72]
	066 Call Selectable.FindSelectable, X0, X1
	067 Return X0
	068 Call 0x1C17F20

Method: System.Void OnMove(UnityEngine.EventSystems.AxisEventData eventData)

Disassembly:
	0x03E3D95C ADRP X21, 0x2B8000
	0x03E3D960 LDR X21, [X21 + 0x9B0]
	0x03E3D964 BL 0x1C16F10
	0x03E3D968 MOV X20, X0
	0x03E3D96C BL 0x3E3D9E8
	0x03E3D970 STR X20, [X19 + 0x68]
	0x03E3D974 ADRP X20, 0x59C000
	0x03E3D978 LDRB W8, [X20 + 0x78F]
	0x03E3D97C CBNZ W8, 0x3E3D990
	0x03E3D980 ADRP X0, 0x2BE000
	0x03E3D984 LDR X0, [X0 + 0xF08]
	0x03E3D988 BL 0x1C16CF4
	0x03E3D98C STRB W22, [X20 + 0x78F]
	0x03E3D990 ADRP X8, 0x2BE000
	0x03E3D994 LDR X8, [X8 + 0xF08]
	0x03E3D998 MOVZ W1, 0x4
	0x03E3D99C LDR X8, [X8]
	0x03E3D9A0 LDR X9, [X8 + 0xB8]
	0x03E3D9A4 LDR V0, [X9]
	0x03E3D9A8 STR D0, [X19 + 0x70]
	0x03E3D9AC LDR X9, [X8 + 0xB8]
	0x03E3D9B0 LDR V0, [X9]
	0x03E3D9B4 STR D0, [X19 + 0x78]
	0x03E3D9B8 LDR X8, [X8 + 0xB8]
	0x03E3D9BC LDR V0, [X8]
	0x03E3D9C0 STUR D0, [X19 + 0xC4]
	0x03E3D9C4 LDR X0, [X21]
	0x03E3D9C8 BL 0x1C16D6C
	0x03E3D9CC STR X0, [X19 + 0x128]
	0x03E3D9D0 MOV X0, X19
	0x03E3D9D4 LDP X20, X19, [X31 + 0x20]
	0x03E3D9D8 LDP X22, X21, [X31 + 0x10]
	0x03E3D9DC MOV X1, X31
	0x03E3D9E0 LDR X30, [X31], #0x30
	0x03E3D9E4 B 0x3E4E160

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {36}
	005 Move W8, [X1+40]
	006 Move X19, X1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X9, -53100544
	009 Add X9, X9, 1576
	010 NotImplemented "Instruction ADR not yet implemented."
	011 Move W11, [X9]
	012 Add X10, X10, X11
	013 CallNoReturn X10
	014 Move X8, [X0]
	015 Move X9, [X8+744]
	016 Move X1, [X8+752]
	017 Move X8, [X0]
	018 Move X9, [X8+776]
	019 Move X1, [X8+784]
	020 Move X8, [X0]
	021 Move X9, [X8+760]
	022 Move X1, [X8+768]
	023 Move X8, [X0]
	024 Move X9, [X8+792]
	025 Move X1, [X8+800]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X1, X19
	028 Move X2, X0
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Call Selectable.Navigate, X0, X1, X2
	032 Return 
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Return 
	036 Call 0x1C17F20

Method: System.Void StartColorTween(UnityEngine.Color targetColor, System.Boolean instant)

Disassembly:
	0x03E42594 STP X30, X23, [X31 - 0x30]!
	0x03E42598 STP X22, X21, [X31 + 0x10]
	0x03E4259C STP X20, X19, [X31 + 0x20]
	0x03E425A0 ADRP X20, 0x5A6000
	0x03E425A4 ADRP X22, 0x2B1000
	0x03E425A8 LDRB W8, [X20 + 0x7DF]
	0x03E425AC LDR X22, [X22 + 0x598]
	0x03E425B0 MOV X19, X0
	0x03E425B4 TBNZ X8, 0x0, 0x3E425F0
	0x03E425B8 ADRP X0, 0x2DD000
	0x03E425BC LDR X0, [X0 + 0x9C0]
	0x03E425C0 BL 0x1C16CF4
	0x03E425C4 ADRP X0, 0x2B3000
	0x03E425C8 LDR X0, [X0 + 0x6B8]
	0x03E425CC BL 0x1C16CF4
	0x03E425D0 ADRP X0, 0x2B1000
	0x03E425D4 LDR X0, [X0 + 0x598]
	0x03E425D8 BL 0x1C16CF4
	0x03E425DC ADRP X0, 0x2D8000
	0x03E425E0 LDR X0, [X0 + 0xC70]
	0x03E425E4 BL 0x1C16CF4
	0x03E425E8 MOVZ W8, 0x1
	0x03E425EC STRB W8, [X20 + 0x7DF]
	0x03E425F0 LDR X0, [X22]
	0x03E425F4 LDR X20, [X19 + 0x100]
	0x03E425F8 LDR W8, [X0 + 0xE0]
	0x03E425FC CBNZ W8, 0x3E42604
	0x03E42600 BL 0x1C16DFC
	0x03E42604 ADRP X23, 0x2D8000
	0x03E42608 LDR X23, [X23 + 0xC70]
	0x03E4260C MOV X0, X20
	0x03E42610 MOV X1, X31
	0x03E42614 BL 0x3C38948
	0x03E42618 TBZ X0, 0x0, 0x3E42714
	0x03E4261C LDR X20, [X19 + 0x100]
	0x03E42620 MOV X0, X19
	0x03E42624 MOV X1, X31
	0x03E42628 BL 0x3C32E90
	0x03E4262C LDR X8, [X22]
	0x03E42630 MOV X21, X0
	0x03E42634 LDR W9, [X8 + 0xE0]
	0x03E42638 CBZ W9, 0x3E42644
	0x03E4263C CBNZ X21, 0x3E42650
	0x03E42640 B 0x3E42660
	0x03E42644 MOV X0, X8
	0x03E42648 BL 0x1C16DFC
	0x03E4264C CBZ X21, 0x3E42660
	0x03E42650 LDR X1, [X23]
	0x03E42654 LDR X8, [X21]
	0x03E42658 CMP X8, X1
	0x03E4265C B.NE 0x3E42830
	0x03E42660 MOV X0, X20
	0x03E42664 MOV X1, X21
	0x03E42668 MOV X2, X31
	0x03E4266C BL 0x3C354F8
	0x03E42670 TBZ X0, 0x0, 0x3E42714
	0x03E42674 LDR X0, [X19 + 0x100]
	0x03E42678 CBZ X0, 0x3E4282C
	0x03E4267C MOV X1, X31
	0x03E42680 BL 0x3C32E90
	0x03E42684 LDR X8, [X19 + 0x100]
	0x03E42688 STR X0, [X19 + 0x138]
	0x03E4268C CBZ X8, 0x3E4282C
	0x03E42690 ADRP X9, 0x2DD000
	0x03E42694 LDR X9, [X9 + 0x9C0]
	0x03E42698 MOV X0, X8
	0x03E4269C LDR X1, [X9]
	0x03E426A0 BL 0x21A3894

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x5A7000
	011 Move X21, 0x2B2000
	012 Move W8, [X22+2001]
	013 Move X21, [X21+1432]
	014 Move W20, W1
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x2DA000
	025 Move X0, [X0+1512]
	026 Call 0x1C17CF4
	027 Move X0, 0x2B2000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2001], W8
	032 Move X0, [X21]
	033 Move X21, [X19+224]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X21
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {56}
	046 Move X20, [X31+64]
	047 Move X19, [X31+72]
	048 Move X22, [X31+48]
	049 Move X21, [X31+56]
	050 Move X30, [X31+32]
	051 Move D9, [X31+16]
	052 Move D8, [X31+24]
	053 Move D11, [X31+80]
	054 Move D10, [X31+88]
	055 Return 
	056 Move X21, [X19+224]
	057 Move S4, W31
	058 Move TEMP, X20
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {70}
	062 Move X8, 0x2DA000
	063 Move X8, [X8+1512]
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move V4, [X19+168]
	070 Compare X21, 0
	071 JumpIfEqual {92}
	072 Move X8, [X21]
	073 Move X0, X21
	074 Move V2, V9
	075 Move V3, V8
	076 Move X4, [X8+1064]
	077 Move X3, [X8+1072]
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X30, [X31+32]
	083 Move D9, [X31+16]
	084 Move D8, [X31+24]
	085 Move W1, 1
	086 Move W2, 1
	087 Move V0, V11
	088 Move V1, V10
	089 Move D11, [X31+80]
	090 Move D10, [X31+88]
	091 CallNoReturn X4
	092 Call 0x1C17F20

Method: System.Void DoSpriteSwap(UnityEngine.Sprite newSprite)

Disassembly:
	0x03E426A4 LDR X8, [X19 + 0x138]
	0x03E426A8 STR X0, [X19 + 0x130]
	0x03E426AC CBZ X8, 0x3E4282C
	0x03E426B0 MOV X0, X8
	0x03E426B4 MOV X1, X31
	0x03E426B8 BL 0x3C3F49C
	0x03E426BC LDR X8, [X22]
	0x03E426C0 MOV X20, X0
	0x03E426C4 LDR W9, [X8 + 0xE0]
	0x03E426C8 CBNZ W9, 0x3E426D4
	0x03E426CC MOV X0, X8
	0x03E426D0 BL 0x1C16DFC
	0x03E426D4 MOV X0, X20
	0x03E426D8 MOV X1, X31
	0x03E426DC MOV X2, X31
	0x03E426E0 BL 0x3C354F8
	0x03E426E4 TBZ X0, 0x0, 0x3E42720
	0x03E426E8 LDR X0, [X19 + 0x138]
	0x03E426EC CBZ X0, 0x3E4282C
	0x03E426F0 MOV X1, X31
	0x03E426F4 BL 0x3C3F49C
	0x03E426F8 CBZ X0, 0x3E4282C
	0x03E426FC ADRP X8, 0x2B3000
	0x03E42700 LDR X8, [X8 + 0x6B8]
	0x03E42704 LDR X1, [X8]
	0x03E42708 BL 0x21A3894
	0x03E4270C STR X0, [X19 + 0x140]
	0x03E42710 B 0x3E42720
	0x03E42714 STR X31, [X19 + 0x100]
	0x03E42718 STR X31, [X19 + 0x140]
	0x03E4271C STR X31, [X19 + 0x130]
	0x03E42720 LDR X0, [X22]
	0x03E42724 LDR X20, [X19 + 0x108]
	0x03E42728 LDR W8, [X0 + 0xE0]
	0x03E4272C CBNZ W8, 0x3E42734
	0x03E42730 BL 0x1C16DFC
	0x03E42734 MOV X0, X20
	0x03E42738 MOV X1, X31
	0x03E4273C BL 0x3C38948
	0x03E42740 TBZ X0, 0x0, 0x3E42814
	0x03E42744 LDR X20, [X19 + 0x108]
	0x03E42748 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5A7000
	007 Move X21, 0x2B2000
	008 Move W8, [X22+2002]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2B2000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2002], W8
	021 Move X0, X20
	022 Call Selectable.get_image, X0
	023 Move X8, [X21]
	024 Move X21, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {44}
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, X20
	045 Call Selectable.get_image, X0
	046 Compare X0, 0
	047 JumpIfEqual {57}
	048 Move X1, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X2, X31
	054 Move X30, [X31+48]
	055 Call Image.set_overrideSprite, X0, X1
	056 Return 
	057 Call 0x1C17F20

Method: System.Void TriggerAnimation(System.String triggername)

Disassembly:
	0x03E4274C MOV X1, X31
	0x03E42750 BL 0x3C32E90
	0x03E42754 LDR X8, [X22]
	0x03E42758 MOV X21, X0
	0x03E4275C LDR W9, [X8 + 0xE0]
	0x03E42760 CBZ W9, 0x3E4276C
	0x03E42764 CBNZ X21, 0x3E42778
	0x03E42768 B 0x3E42788
	0x03E4276C MOV X0, X8
	0x03E42770 BL 0x1C16DFC
	0x03E42774 CBZ X21, 0x3E42788
	0x03E42778 LDR X1, [X23]
	0x03E4277C LDR X8, [X21]
	0x03E42780 CMP X8, X1
	0x03E42784 B.NE 0x3E42830
	0x03E42788 MOV X0, X20
	0x03E4278C MOV X1, X21
	0x03E42790 MOV X2, X31
	0x03E42794 BL 0x3C354F8
	0x03E42798 TBZ X0, 0x0, 0x3E42814
	0x03E4279C LDR X0, [X19 + 0x108]
	0x03E427A0 CBZ X0, 0x3E4282C
	0x03E427A4 MOV X1, X31
	0x03E427A8 BL 0x3C32E90
	0x03E427AC STR X0, [X19 + 0x148]
	0x03E427B0 CBZ X0, 0x3E4282C
	0x03E427B4 MOV X1, X31
	0x03E427B8 BL 0x3C3F49C
	0x03E427BC LDR X8, [X22]
	0x03E427C0 MOV X20, X0
	0x03E427C4 LDR W9, [X8 + 0xE0]
	0x03E427C8 CBNZ W9, 0x3E427D4
	0x03E427CC MOV X0, X8
	0x03E427D0 BL 0x1C16DFC
	0x03E427D4 MOV X0, X20
	0x03E427D8 MOV X1, X31
	0x03E427DC MOV X2, X31
	0x03E427E0 BL 0x3C354F8
	0x03E427E4 TBZ X0, 0x0, 0x3E4281C
	0x03E427E8 LDR X0, [X19 + 0x148]
	0x03E427EC CBZ X0, 0x3E4282C
	0x03E427F0 MOV X1, X31
	0x03E427F4 BL 0x3C3F49C
	0x03E427F8 CBZ X0, 0x3E4282C
	0x03E427FC ADRP X8, 0x2B3000
	0x03E42800 LDR X8, [X8 + 0x6B8]
	0x03E42804 LDR X1, [X8]
	0x03E42808 BL 0x21A3894
	0x03E4280C STR X0, [X19 + 0x150]
	0x03E42810 B 0x3E4281C
	0x03E42814 STR X31, [X19 + 0x108]
	0x03E42818 STR X31, [X19 + 0x150]
	0x03E4281C LDP X20, X19, [X31 + 0x20]
	0x03E42820 LDP X22, X21, [X31 + 0x10]
	0x03E42824 LDP X30, X23, [X31], #0x30
	0x03E42828 RET
	0x03E4282C BL 0x1C16F20
	0x03E42830 MOV X0, X21
	0x03E42834 BL 0x1C171E0
	0x03E42838 STP D11, D10, [X31 - 0x50]!
	0x03E4283C STP D9, D8, [X31 + 0x10]
	0x03E42840 STP X30, X23, [X31 + 0x20]
	0x03E42844 STP X22, X21, [X31 + 0x30]
	0x03E42848 STP X20, X19, [X31 + 0x40]
	0x03E4284C ADRP X20, 0x5A6000
	0x03E42850 ADRP X22, 0x2B1000
	0x03E42854 LDRB W8, [X20 + 0x7E1]
	0x03E42858 LDR X22, [X22 + 0x598]
	0x03E4285C MOV X19, X0
	0x03E42860 TBNZ X8, 0x0, 0x3E42878
	0x03E42864 ADRP X0, 0x2B1000
	0x03E42868 LDR X0, [X0 + 0x598]
	0x03E4286C BL 0x1C16CF4
	0x03E42870 MOVZ W8, 0x1
	0x03E42874 STRB W8, [X20 + 0x7E1]
	0x03E42878 ADD X20, X19, 0x160
	0x03E4287C MOV X0, X20
	0x03E42880 MOV X1, X31
	0x03E42884 BL 0x3C3E3A8
	0x03E42888 LDR X0, [X22]
	0x03E4288C LDR X21, [X19 + 0x140]
	0x03E42890 LDR W8, [X0 + 0xE0]
	0x03E42894 CBNZ W8, 0x3E4289C
	0x03E42898 BL 0x1C16DFC
	0x03E4289C MOV X0, X21
	0x03E428A0 MOV X1, X31
	0x03E428A4 MOV X2, X31
	0x03E428A8 BL 0x3C354F8
	0x03E428AC TBZ X0, 0x0, 0x3E429E4
	0x03E428B0 LDR X2, [X19 + 0x100]
	0x03E428B4 MOVZ W3, 0xF00
	0x03E428B8 MOV X0, X20
	0x03E428BC MOV X1, X19
	0x03E428C0 MOV X4, X31
	0x03E428C4 BL 0x3C3E3A4
	0x03E428C8 ADRP X21, 0x597000
	0x03E428CC LDRB W8, [X21 + 0x78F]
	0x03E428D0 CBNZ W8, 0x3E428E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5A7000
	006 Move W8, [X21+2003]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2B2000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2003], W8
	018 Move W8, [X20+80]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, 0x2B2000
	021 Move X21, [X21+1432]
	022 Move X0, X20
	023 Call Selectable.get_animator, X0
	024 Move X8, [X21]
	025 Move X21, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {66}
	039 Move X0, X20
	040 Call Selectable.get_animator, X0
	041 Compare X0, 0
	042 JumpIfEqual {133}
	043 Move X1, X31
	044 Call Behaviour.get_isActiveAndEnabled, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {66}
	049 Move X0, X20
	050 Call Selectable.get_animator, X0
	051 Compare X0, 0
	052 JumpIfEqual {133}
	053 Move X1, X31
	054 Call Animator.get_hasBoundPlayables, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {66}
	059 Move X0, X19
	060 Move X1, X31
	061 Call String.IsNullOrEmpty, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {71}
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 
	071 Move X0, X20
	072 Call Selectable.get_animator, X0
	073 Move X8, [X20+208]
	074 Compare X8, 0
	075 JumpIfEqual {133}
	076 Compare X0, 0
	077 JumpIfEqual {133}
	078 Move X1, [X8+16]
	079 Move X2, X31
	080 Call Animator.ResetTrigger, X0, X1
	081 Move X0, X20
	082 Call Selectable.get_animator, X0
	083 Move X8, [X20+208]
	084 Compare X8, 0
	085 JumpIfEqual {133}
	086 Compare X0, 0
	087 JumpIfEqual {133}
	088 Move X1, [X8+24]
	089 Move X2, X31
	090 Call Animator.ResetTrigger, X0, X1
	091 Move X0, X20
	092 Call Selectable.get_animator, X0
	093 Move X8, [X20+208]
	094 Compare X8, 0
	095 JumpIfEqual {133}
	096 Compare X0, 0
	097 JumpIfEqual {133}
	098 Move X1, [X8+32]
	099 Move X2, X31
	100 Call Animator.ResetTrigger, X0, X1
	101 Move X0, X20
	102 Call Selectable.get_animator, X0
	103 Move X8, [X20+208]
	104 Compare X8, 0
	105 JumpIfEqual {133}
	106 Compare X0, 0
	107 JumpIfEqual {133}
	108 Move X1, [X8+40]
	109 Move X2, X31
	110 Call Animator.ResetTrigger, X0, X1
	111 Move X0, X20
	112 Call Selectable.get_animator, X0
	113 Move X8, [X20+208]
	114 Compare X8, 0
	115 JumpIfEqual {133}
	116 Compare X0, 0
	117 JumpIfEqual {133}
	118 Move X1, [X8+48]
	119 Move X2, X31
	120 Call Animator.ResetTrigger, X0, X1
	121 Move X0, X20
	122 Call Selectable.get_animator, X0
	123 Compare X0, 0
	124 JumpIfEqual {133}
	125 Move X1, X19
	126 Move X20, [X31+16]
	127 Move X19, [X31+24]
	128 Move X2, X31
	129 Move X30, [X31+32]
	130 Move X21, [X31+40]
	131 Call Animator.SetTrigger, X0, X1
	132 Return 
	133 Call 0x1C17F20

Method: System.Boolean IsHighlighted()

Disassembly:
	0x03E43234 MOV X1, X31
	0x03E43238 MOV X2, X31
	0x03E4323C BL 0x3C354F8
	0x03E43240 TBZ X0, 0x0, 0x3E43288
	0x03E43244 LDR X0, [X21]
	0x03E43248 LDR X20, [X19 + 0x130]
	0x03E4324C LDR W8, [X0 + 0xE0]
	0x03E43250 CBNZ W8, 0x3E43258
	0x03E43254 BL 0x1C16DFC
	0x03E43258 MOV X0, X20
	0x03E4325C MOV X1, X31
	0x03E43260 MOV X2, X31
	0x03E43264 BL 0x3C354F8
	0x03E43268 TBZ X0, 0x0, 0x3E432E8
	0x03E4326C LDR X8, [X19 + 0x130]
	0x03E43270 CBZ X8, 0x3E43394
	0x03E43274 LDR W9, [X8 + 0xE8]
	0x03E43278 CMP W9, 0x3
	0x03E4327C B.NE 0x3E432E8
	0x03E43280 LDR V8, [X8 + 0xF4]
	0x03E43284 B 0x3E43334
	0x03E43288 LDR X0, [X21]
	0x03E4328C LDR X20, [X19 + 0x150]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+456]
	006 Move X1, [X8+464]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {27}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+696]
	015 Move X1, [X8+704]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {27}
	021 Move W8, [X19+240]
	022 Compare W8, 0
	023 JumpIfEqual {27}
	024 Move W8, [X19+241]
	025 Compare W8, 0
	026 JumpIfEqual {31}
	027 Move W0, W31
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return X0
	031 Move W8, [X19+242]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."

Method: System.Boolean IsPressed()

Disassembly:
	0x03E424D8 FCMP S4, S1
	0x03E424DC B.NE 0x3E42500
	0x03E424E0 LDR V4, [X0 + 0x8]
	0x03E424E4 FCMP S4, S2
	0x03E424E8 B.NE 0x3E42500
	0x03E424EC LDR V4, [X0 + 0xC]
	0x03E424F0 FCMP S4, S3
	0x03E424F4 B.NE 0x3E42500
	0x03E424F8 MOV W0, W31
	0x03E424FC RET
	0x03E42500 STP S0, S1, [X0]
	0x03E42504 STP S2, S3, [X0 + 0x8]
	0x03E42508 MOVZ W0, 0x1
	0x03E4250C RET
	0x03E42510 LDR X0, [X0 + 0x100]
	0x03E42514 RET
	0x03E42518 STR X30, [X31 - 0x30]!
	0x03E4251C STP X22, X21, [X31 + 0x10]
	0x03E42520 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+456]
	006 Move X1, [X8+464]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {24}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+696]
	015 Move X1, [X8+704]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 Move W8, [X19+241]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move W0, W31
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0

Method: System.Void EvaluateAndTransitionToSelectionState()

Disassembly:
	0x03E43290 LDR W8, [X0 + 0xE0]
	0x03E43294 CBNZ W8, 0x3E4329C
	0x03E43298 BL 0x1C16DFC
	0x03E4329C MOV X0, X20
	0x03E432A0 MOV X1, X31
	0x03E432A4 MOV X2, X31
	0x03E432A8 BL 0x3C354F8
	0x03E432AC TBZ X0, 0x0, 0x3E43334
	0x03E432B0 LDR X0, [X19 + 0x108]
	0x03E432B4 CBZ X0, 0x3E43394
	0x03E432B8 LDR W8, [X19 + 0x110]
	0x03E432BC MOV X1, X31
	0x03E432C0 AND W20, W8, 0xFFFFFFFD
	0x03E432C4 BL 0x3C3E5B8
	0x03E432C8 LDR W8, [X19 + 0x110]
	0x03E432CC FMOV S2, 1
	0x03E432D0 CMP W8, 0x1
	0x03E432D4 FCSEL S0, S1, S0, HI
	0x03E432D8 FSUB S1, S2, S0
	0x03E432DC CMP W20, 0x1
	0x03E432E0 FCSEL S8, S1, S0, EQ
	0x03E432E4 B 0x3E43334
	0x03E432E8 LDR X0, [X19 + 0x100]
	0x03E432EC CBZ X0, 0x3E43394
	0x03E432F0 LDR W8, [X19 + 0x110]
	0x03E432F4 AND W8, W8, 0xFFFFFFFD
	0x03E432F8 CMP W8, 0x1
	0x03E432FC B.NE 0x3E43320
	0x03E43300 MOV X1, X31
	0x03E43304 BL 0x3C3E5B8
	0x03E43308 LDR W8, [X19 + 0x110]
	0x03E4330C CMP W8, 0x1
	0x03E43310 FCSEL S0, S1, S0, HI
	0x03E43314 FMOV S1, 1
	0x03E43318 FSUB S8, S1, S0
	0x03E4331C B 0x3E43334
	0x03E43320 MOV X1, X31
	0x03E43324 BL 0x3C3E6D4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+456]
	006 Move X1, [X8+464]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {34}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+696]
	015 Move X1, [X8+704]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {34}
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+696]
	024 Move X1, [X8+704]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {37}
	030 Move W8, [X19+241]
	031 Compare W8, 0
	032 JumpIfEqual {46}
	033 Move W1, 2
	034 Move X30, [X31+16]
	035 Move X19, [X31+24]
	036 Return 
	037 Move W1, 4
	038 Move X8, [X19]
	039 Move X0, X19
	040 Move W2, W31
	041 Move X4, [X8+728]
	042 Move X3, [X8+736]
	043 Move X30, [X31+16]
	044 Move X19, [X31+24]
	045 CallNoReturn X4
	046 Move W8, [X19+242]
	047 Compare W8, 0
	048 JumpIfEqual {50}
	049 Move W1, 3
	050 Move W1, [X19+240]

Method: System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3D4B8 MOV X21, X0
	0x03E3D4BC LDR X2, [X8]
	0x03E3D4C0 BL 0x2725EC4
	0x03E3D4C4 CBZ X20, 0x3E3D4F4
	0x03E3D4C8 ADRP X8, 0x31B000
	0x03E3D4CC LDR X8, [X8 + 0x8C8]
	0x03E3D4D0 MOV X0, X20
	0x03E3D4D4 MOV X1, X21
	0x03E3D4D8 LDR X2, [X8]
	0x03E3D4DC BL 0x272A4B0
	0x03E3D4E0 MOV X0, X19
	0x03E3D4E4 LDP X20, X19, [X31 + 0x20]
	0x03E3D4E8 LDP X22, X21, [X31 + 0x10]
	0x03E3D4EC LDP X30, X23, [X31], #0x30
	0x03E3D4F0 B 0x3E3D2C0
	0x03E3D4F4 BL 0x1C16F20
	0x03E3D4F8 LDR X0, [X0 + 0x50]
	0x03E3D4FC RET
	0x03E3D500 STP X30, X23, [X31 - 0x30]!
	0x03E3D504 STP X22, X21, [X31 + 0x10]
	0x03E3D508 STP X20, X19, [X31 + 0x20]
	0x03E3D50C ADRP X21, 0x5AB000
	0x03E3D510 ADRP X23, 0x2B6000
	0x03E3D514 LDRB W8, [X21 + 0x7A3]
	0x03E3D518 LDR X23, [X23 + 0x598]
	0x03E3D51C MOV X20, X1
	0x03E3D520 MOV X19, X0
	0x03E3D524 TBNZ X8, 0x0, 0x3E3D56C
	0x03E3D528 ADRP X0, 0x2B6000
	0x03E3D52C LDR X0, [X0 + 0x598]
	0x03E3D530 BL 0x1C16CF4
	0x03E3D534 ADRP X0, 0x32E000
	0x03E3D538 LDR X0, [X0 + 0x390]
	0x03E3D53C BL 0x1C16CF4
	0x03E3D540 ADRP X0, 0x31B000
	0x03E3D544 LDR X0, [X0 + 0xB68]
	0x03E3D548 BL 0x1C16CF4
	0x03E3D54C ADRP X0, 0x31B000
	0x03E3D550 LDR X0, [X0 + 0x8C8]
	0x03E3D554 BL 0x1C16CF4
	0x03E3D558 ADRP X0, 0x31C000
	0x03E3D55C LDR X0, [X0 + 0x70]
	0x03E3D560 BL 0x1C16CF4
	0x03E3D564 MOVZ W8, 0x1
	0x03E3D568 STRB W8, [X21 + 0x7A3]
	0x03E3D56C LDR X0, [X23]
	0x03E3D570 LDR X21, [X19 + 0x50]
	0x03E3D574 LDR W8, [X0 + 0xE0]
	0x03E3D578 CBNZ W8, 0x3E3D580
	0x03E3D57C BL 0x1C16DFC
	0x03E3D580 MOV X0, X21
	0x03E3D584 MOV X1, X31
	0x03E3D588 BL 0x3C38948
	0x03E3D58C TBZ X0, 0x0, 0x3E3D5E4
	0x03E3D590 LDR X8, [X19 + 0x50]
	0x03E3D594 CBZ X8, 0x3E3D678
	0x03E3D598 LDR X21, [X8 + 0x118]
	0x03E3D59C ADRP X8, 0x31B000
	0x03E3D5A0 LDR X8, [X8 + 0xB68]
	0x03E3D5A4 LDR X0, [X8]
	0x03E3D5A8 BL 0x1C16F10
	0x03E3D5AC ADRP X8, 0x32E000
	0x03E3D5B0 LDR X8, [X8 + 0x390]
	0x03E3D5B4 MOV X1, X19
	0x03E3D5B8 MOV X3, X31
	0x03E3D5BC MOV X22, X0
	0x03E3D5C0 LDR X2, [X8]
	0x03E3D5C4 BL 0x2725EC4
	0x03E3D5C8 CBZ X21, 0x3E3D678
	0x03E3D5CC ADRP X8, 0x31C000
	0x03E3D5D0 LDR X8, [X8 + 0x70]
	0x03E3D5D4 MOV X0, X21
	0x03E3D5D8 MOV X1, X22
	0x03E3D5DC LDR X2, [X8]
	0x03E3D5E0 BL 0x272A4EC
	0x03E3D5E4 LDRB W8, [X19 + 0x29]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5AC000
	007 Move W8, [X21+2004]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2DE000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B7000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2004], W8
	022 Compare X20, 0
	023 JumpIfEqual {99}
	024 Move W8, [X20+328]
	025 Compare W8, 0
	026 JumpIfEqual {33}
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Return 
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+696]
	036 Move X1, [X8+704]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {89}
	042 Move W8, [X19+40]
	043 Compare W8, 0
	044 JumpIfEqual {89}
	045 Move X22, 0x2DE000
	046 Move X22, [X22+3576]
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call EventSystem.get_current
	054 Move X8, 0x2B7000
	055 Move X8, [X8+1432]
	056 Move X21, X0
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Inequality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {89}
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X31
	077 Call EventSystem.get_current
	078 Move X21, X0
	079 Move X0, X19
	080 Move X1, X31
	081 Call Component.get_gameObject, X0
	082 Compare X21, 0
	083 JumpIfEqual {99}
	084 Move X1, X0
	085 Move X0, X21
	086 Move X2, X20
	087 Move X3, X31
	088 Call EventSystem.SetSelectedGameObject, X0, X1, X2
	089 Move W8, 1
	090 Move [X19+241], W8
	091 Move X0, X19
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Call Selectable.EvaluateAndTransitionToSelectionState, X0
	098 Return 
	099 Call 0x1C17F20

Method: System.Void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3D6EC ADRP X20, 0x2B9000
	0x03E3D6F0 LDR X20, [X20 + 0x920]
	0x03E3D6F4 MOV X0, X19
	0x03E3D6F8 BL 0x3E3D854
	0x03E3D6FC LDR X8, [X20]
	0x03E3D700 MOV X19, X0
	0x03E3D704 LDR W9, [X8 + 0xE0]
	0x03E3D708 CBNZ W9, 0x3E3D714
	0x03E3D70C MOV X0, X8
	0x03E3D710 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move W8, [X1+328]
	005 Compare W8, 0
	006 JumpIfEqual {9}
	007 Move X30, [X31+16]
	008 Return 
	009 Move [X0+241], W31
	010 Move X30, [X31+16]
	011 Call Selectable.EvaluateAndTransitionToSelectionState, X0
	012 Return 
	013 Call 0x1C17F20

Method: System.Void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E43328 LDR W8, [X19 + 0x110]
	0x03E4332C CMP W8, 0x1
	0x03E43330 FCSEL S8, S1, S0, HI

ISIL:
	001 Move W8, 1
	002 Move [X0+240], W8
	003 Call Selectable.EvaluateAndTransitionToSelectionState, X0
	004 Return 

Method: System.Void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E43334 MOV X0, X19
	0x03E43338 BL 0x3E42838

ISIL:
	001 Move [X0+240], W31
	002 Call Selectable.EvaluateAndTransitionToSelectionState, X0
	003 Return 

Method: System.Void OnSelect(UnityEngine.EventSystems.BaseEventData eventData)

Disassembly:
	0x03E4333C MOV X0, X19
	0x03E43340 BL 0x3E42EAC
	0x03E43344 FCMP S8, S0

ISIL:
	001 Move W8, 1
	002 Move [X0+242], W8
	003 Call Selectable.EvaluateAndTransitionToSelectionState, X0
	004 Return 

Method: System.Void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData)

Disassembly:
	0x03E43348 B.EQ 0x3E43380
	0x03E4334C ADRP X8, 0x328000

ISIL:
	001 Move [X0+242], W31
	002 Call Selectable.EvaluateAndTransitionToSelectionState, X0
	003 Return 

Method: System.Void Select()

Disassembly:
	0x03E43350 LDR X8, [X8 + 0x408]
	0x03E43354 MOV X1, X19
	0x03E43358 MOV X2, X31
	0x03E4335C LDR X0, [X8]
	0x03E43360 BL 0x3E252BC
	0x03E43364 LDR X0, [X19 + 0x128]
	0x03E43368 CBZ X0, 0x3E43394
	0x03E4336C ADRP X8, 0x315000
	0x03E43370 LDR V0, [X19 + 0x120]
	0x03E43374 LDR X8, [X8 + 0x8B8]
	0x03E43378 LDR X1, [X8]
	0x03E4337C BL 0x272A704
	0x03E43380 MOV X0, X19
	0x03E43384 LDP X20, X19, [X31 + 0x20]
	0x03E43388 LDP X30, X21, [X31 + 0x10]
	0x03E4338C LDR V8, [X31], #0x30
	0x03E43390 B 0x3E40C20
	0x03E43394 BL 0x1C16F20
	0x03E43398 SUB X31, X31, 0x20
	0x03E4339C STR D8, [X31 + 0x10]
	0x03E433A0 STR X30, [X31 + 0x18]
	0x03E433A4 LDR V1, [X0 + 0x118]
	0x03E433A8 LDR V2, [X0 + 0x114]
	0x03E433AC LDRB W8, [X0 + 0x11C]
	0x03E433B0 FCMP S1, S0
	0x03E433B4 FCSEL S1, S1, S0, MI
	0x03E433B8 FCMP S2, S0
	0x03E433BC FCSEL S8, S1, S2, LE
	0x03E433C0 CBZ W8, 0x3E43438
	0x03E433C4 FCVT S0, S8
	0x03E433C8 ADD X0, X31, 0x8
	0x03E433CC BL 0x3EB1C00
	0x03E433D0 FCMP S8, 0x0
	0x03E433D4 B.GE 0x3E433F0
	0x03E433D8 FMOV D1, -0.5
	0x03E433DC FCMP D0, D1
	0x03E433E0 B.NE 0x3E4341C
	0x03E433E4 LDR V0, [X31 + 0x8]
	0x03E433E8 FMOV S1, -1
	0x03E433EC B 0x3E43404
	0x03E433F0 FMOV D1, 0.5
	0x03E433F4 FCMP D0, D1
	0x03E433F8 B.NE 0x3E4342C
	0x03E433FC LDR V0, [X31 + 0x8]
	0x03E43400 FMOV S1, 1
	0x03E43404 FCVTZS X8, D0
	0x00000000 INVALID
	0x03E4340C FADD S1, S0, S1
	0x03E43410 ANDS X31, X8, 0x1
	0x03E43414 FCSEL S8, S0, S1, EQ
	0x03E43418 B 0x3E43438
	0x03E4341C FMOV S0, -0.5
	0x03E43420 FADD S0, S8, S0
	0x03E43424 FRINTP S8, S0
	0x03E43428 B 0x3E43438
	0x03E4342C FMOV S0, 0.5
	0x03E43430 FADD S0, S8, S0
	0x03E43434 FRINTM S8, S0
	0x03E43438 MOV V0.16B, V8.16B
	0x03E4343C LDR X30, [X31 + 0x18]
	0x03E43440 LDR V8, [X31 + 0x10]
	0x03E43444 ADD X31, X31, 0x20
	0x03E43448 RET
	0x03E4344C LDR W8, [X0 + 0x110]
	0x03E43450 AND W8, W8, 0xFFFFFFFD

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5A6000
	006 Move X21, 0x2D8000
	007 Move W8, [X20+2005]
	008 Move X21, [X21+3576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2D8000
	015 Move X0, [X0+3576]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B1000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2005], W8
	022 Move X0, [X21]
	023 Move X20, 0x2B1000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1432]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call EventSystem.get_current
	031 Move X8, [X20]
	032 Move X20, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {58}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call EventSystem.get_current
	053 Compare X0, 0
	054 JumpIfEqual {85}
	055 Move W8, [X0+73]
	056 Compare W8, 0
	057 JumpIfEqual {63}
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X31
	069 Call EventSystem.get_current
	070 Move X20, X0
	071 Move X0, X19
	072 Move X1, X31
	073 Call Component.get_gameObject, X0
	074 Compare X20, 0
	075 JumpIfEqual {85}
	076 Move X1, X0
	077 Move X0, X20
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X2, X31
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call EventSystem.SetSelectedGameObject, X0, X1
	084 Return 
	085 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03E43454 CMP W8, 0x1
	0x03E43458 CSET W0, EQ
	0x03E4345C RET
	0x03E43460 LDR W8, [X0 + 0x110]
	0x03E43464 CMP W8, 0x1
	0x03E43468 CSET W0, HI
	0x03E4346C RET
	0x03E43470 STR D8, [X31 - 0x30]!
	0x03E43474 STP X30, X21, [X31 + 0x10]
	0x03E43478 STP X20, X19, [X31 + 0x20]
	0x03E4347C ADRP X21, 0x5A5000
	0x03E43480 LDRB W8, [X21 + 0x7E0]
	0x03E43484 MOV W20, W1
	0x03E43488 MOV V8.16B, V0.16B
	0x03E4348C MOV X19, X0
	0x03E43490 TBNZ X8, 0x0, 0x3E434B4
	0x03E43494 ADRP X0, 0x315000
	0x03E43498 LDR X0, [X0 + 0x8B8]
	0x03E4349C BL 0x1C16CF4
	0x03E434A0 ADRP X0, 0x328000
	0x03E434A4 LDR X0, [X0 + 0x408]
	0x03E434A8 BL 0x1C16CF4
	0x03E434AC MOVZ W8, 0x1
	0x03E434B0 STRB W8, [X21 + 0x7E0]
	0x03E434B4 MOV X0, X19
	0x03E434B8 MOV V0.16B, V8.16B
	0x03E434BC BL 0x3E43398
	0x03E434C0 LDR V1, [X19 + 0x120]
	0x03E434C4 FCMP S1, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5A6000
	006 Move X21, 0x329000
	007 Move X19, 0x316000
	008 Move W8, [X20+2006]
	009 Move X21, [X21+880]
	010 Move X19, [X19+2648]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x329000
	016 Move X0, [X0+880]
	017 Call 0x1C17CF4
	018 Move X0, 0x316000
	019 Move X0, [X0+2648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2006], W8
	023 Move X0, [X21]
	024 Move W1, 10
	025 Call 0x1C17D6C
	026 Move X8, [X19]
	027 Move X8, [X8+184]
	028 Move [X8], X0
	029 Move X8, [X19]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X8, [X8+184]
	033 Move [X8+8], W31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

