Type: UnityEngine.UI.VertexHelper

Method: System.Void .ctor()

Disassembly:
	0x03E4A354 LDR V18, [X1 + 0x68]
	0x03E4A358 LDUR X13, [X1 + 0xC]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(UnityEngine.Mesh m)

Disassembly:
	0x03E4A35C LDP S19, S20, [X1 + 0x14]
	0x03E4A360 LDUR X14, [X1 + 0x1C]
	0x03E4A364 LDR V21, [X1 + 0x24]
	0x03E4A368 MOV X1, X8
	0x03E4A36C STR S20, [X31 + 0x40]
	0x03E4A370 STUR X14, [X31 + 0x44]
	0x03E4A374 STR S21, [X31 + 0x4C]
	0x03E4A378 STR S19, [X31 + 0x38]
	0x03E4A37C STR X13, [X31 + 0x30]
	0x03E4A380 STR S18, [X31 + 0x2C]
	0x03E4A384 STUR X12, [X31 + 0x24]
	0x03E4A388 STR S17, [X31 + 0x20]
	0x03E4A38C STR X11, [X31 + 0x18]
	0x03E4A390 STR S16, [X31 + 0x14]
	0x03E4A394 STUR X10, [X31 + 0xC]
	0x03E4A398 STR S7, [X31 + 0x8]
	0x03E4A39C STR X9, [X31]
	0x03E4A3A0 BL 0x3E49D88
	0x03E4A3A4 LDR X30, [X31 + 0x50]
	0x03E4A3A8 ADD X31, X31, 0x60
	0x03E4A3AC RET
	0x03E4A3B0 SUB X31, X31, 0x40
	0x03E4A3B4 STR X30, [X31 + 0x10]
	0x03E4A3B8 STP X22, X21, [X31 + 0x20]
	0x03E4A3BC STP X20, X19, [X31 + 0x30]
	0x03E4A3C0 ADRP X22, 0x59E000
	0x03E4A3C4 LDRB W8, [X22 + 0x825]
	0x03E4A3C8 MOV X19, X2
	0x03E4A3CC MOV X21, X1
	0x03E4A3D0 MOV X20, X0
	0x03E4A3D4 TBNZ X8, 0x0, 0x3E4A3EC
	0x03E4A3D8 ADRP X0, 0x304000
	0x03E4A3DC LDR X0, [X0 + 0x688]
	0x03E4A3E0 BL 0x1C16CF4
	0x03E4A3E4 MOVZ W8, 0x1
	0x03E4A3E8 STRB W8, [X22 + 0x825]
	0x03E4A3EC MOV X0, X20
	0x03E4A3F0 BL 0x3E49598
	0x03E4A3F4 CBZ X21, 0x3E4A414
	0x03E4A3F8 LDP X1, X2, [X20 + 0x10]
	0x03E4A3FC LDP X3, X4, [X20 + 0x20]
	0x03E4A400 LDP X5, X6, [X20 + 0x30]
	0x03E4A404 LDP X7, X8, [X20 + 0x40]
	0x03E4A408 MOV X0, X21
	0x03E4A40C STP X8, X31, [X31]
	0x03E4A410 BL 0x3E22FA8
	0x03E4A414 CBZ X19, 0x3E4A444
	0x03E4A418 LDR X0, [X20 + 0x50]
	0x03E4A41C CBZ X0, 0x3E4A458
	0x03E4A420 ADRP X8, 0x304000
	0x03E4A424 LDR X8, [X8 + 0x688]
	0x03E4A428 MOV X1, X19
	0x03E4A42C LDP X20, X19, [X31 + 0x30]
	0x03E4A430 LDP X22, X21, [X31 + 0x20]
	0x03E4A434 LDR X2, [X8]
	0x03E4A438 LDR X30, [X31 + 0x10]
	0x03E4A43C ADD X31, X31, 0x40
	0x03E4A440 B 0x2FDC918
	0x03E4A444 LDP X20, X19, [X31 + 0x30]
	0x03E4A448 LDP X22, X21, [X31 + 0x20]
	0x03E4A44C LDR X30, [X31 + 0x10]
	0x03E4A450 ADD X31, X31, 0x40
	0x03E4A454 RET
	0x03E4A458 BL 0x1C16F20
	0x03E4A45C CBZ X1, 0x3E4A4A8
	0x03E4A460 SUB X31, X31, 0x40
	0x03E4A464 STR X30, [X31 + 0x20]
	0x03E4A468 STP X20, X19, [X31 + 0x30]
	0x03E4A46C MOV X19, X1
	0x03E4A470 MOV X20, X0
	0x03E4A474 BL 0x3E49598
	0x03E4A478 LDP X1, X2, [X20 + 0x10]
	0x03E4A47C LDP X3, X4, [X20 + 0x20]
	0x03E4A480 LDP X5, X6, [X20 + 0x30]
	0x03E4A484 LDP X7, X8, [X20 + 0x40]
	0x03E4A488 LDR X9, [X20 + 0x50]
	0x03E4A48C MOV X0, X19
	0x03E4A490 STR X8, [X31]
	0x03E4A494 STP X9, X31, [X31 + 0x8]
	0x03E4A498 BL 0x3E22CC0
	0x03E4A49C LDP X20, X19, [X31 + 0x30]
	0x03E4A4A0 LDR X30, [X31 + 0x20]
	0x03E4A4A4 ADD X31, X31, 0x40
	0x03E4A4A8 RET
	0x03E4A4AC CBZ X1, 0x3E4A4F8
	0x03E4A4B0 SUB X31, X31, 0x40
	0x03E4A4B4 STR X30, [X31 + 0x20]
	0x03E4A4B8 STP X20, X19, [X31 + 0x30]
	0x03E4A4BC MOV X19, X1
	0x03E4A4C0 MOV X20, X0
	0x03E4A4C4 BL 0x3E49598
	0x03E4A4C8 LDP X1, X2, [X20 + 0x10]
	0x03E4A4CC LDP X3, X4, [X20 + 0x20]
	0x03E4A4D0 LDP X5, X6, [X20 + 0x30]
	0x03E4A4D4 LDP X7, X8, [X20 + 0x40]
	0x03E4A4D8 LDR X9, [X20 + 0x50]
	0x03E4A4DC MOV X0, X19
	0x03E4A4E0 STR X8, [X31]
	0x03E4A4E4 STP X9, X31, [X31 + 0x8]
	0x03E4A4E8 BL 0x3E22E70
	0x03E4A4EC LDP X20, X19, [X31 + 0x30]
	0x03E4A4F0 LDR X30, [X31 + 0x20]
	0x03E4A4F4 ADD X31, X31, 0x40
	0x03E4A4F8 RET
	0x03E4A4FC STR X30, [X31 - 0x20]!
	0x03E4A500 STP X20, X19, [X31 + 0x10]
	0x03E4A504 ADRP X20, 0x59E000
	0x03E4A508 ADRP X19, 0x30F000
	0x03E4A50C LDRB W8, [X20 + 0x826]
	0x03E4A510 LDR X19, [X19 + 0x1A0]
	0x03E4A514 TBNZ X8, 0x0, 0x3E4A52C
	0x03E4A518 ADRP X0, 0x30F000
	0x03E4A51C LDR X0, [X0 + 0x1A0]
	0x03E4A520 BL 0x1C16CF4
	0x03E4A524 MOVZ W8, 0x1
	0x03E4A528 STRB W8, [X20 + 0x826]
	0x03E4A52C LDR X8, [X19]
	0x03E4A530 ADRP X9, 0xFFFFFFFFFCCA3000
	0x03E4A534 LDR V0, [X9 + 0x39]
	0x03E4A538 ADRP X20, 0x58E000
	0x03E4A53C LDR X8, [X8 + 0xB8]
	0x03E4A540 STR V0, [X8]
	0x03E4A544 LDRB W8, [X20 + 0xDDE]
	0x03E4A548 CBNZ W8, 0x3E4A560
	0x03E4A54C ADRP X0, 0x2A9000
	0x03E4A550 LDR X0, [X0 + 0x5A0]
	0x03E4A554 BL 0x1C16CF4
	0x03E4A558 MOVZ W8, 0x1
	0x03E4A55C STRB W8, [X20 + 0xDDE]
	0x03E4A560 ADRP X8, 0x2A9000
	0x03E4A564 LDR X8, [X8 + 0x5A0]
	0x03E4A568 LDR X9, [X19]
	0x03E4A56C LDP X20, X19, [X31 + 0x10]
	0x03E4A570 LDR X8, [X8]
	0x03E4A574 LDR X9, [X9 + 0xB8]
	0x03E4A578 LDR X8, [X8 + 0xB8]
	0x03E4A57C LDUR V0, [X8 + 0x54]
	0x03E4A580 LDR V1, [X8 + 0x5C]
	0x03E4A584 STR D0, [X9 + 0x10]
	0x03E4A588 STR S1, [X9 + 0x18]
	0x03E4A58C LDR X30, [X31], #0x20
	0x03E4A590 RET
	0x03E4A594 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x59F000
	009 Move W8, [X21+2073]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x322000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move X0, 0x305000
	020 Move X0, [X0+1672]
	021 Call 0x1C17CF4
	022 Move X0, 0x305000
	023 Move X0, [X0+352]
	024 Call 0x1C17CF4
	025 Move X0, 0x2D6000
	026 Move X0, [X0+3416]
	027 Call 0x1C17CF4
	028 Move X0, 0x305000
	029 Move X0, [X0+16]
	030 Call 0x1C17CF4
	031 Move X0, 0x305000
	032 Move X0, [X0+8]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+2073], W8
	036 Move X0, X20
	037 Move X1, X31
	038 Call Object..ctor, X0
	039 Move X0, X20
	040 Call VertexHelper.InitializeListIfRequired, X0
	041 Compare X19, 0
	042 JumpIfEqual {163}
	043 Move X21, [X20+16]
	044 Move X0, X19
	045 Move X1, X31
	046 Call Mesh.get_vertices, X0
	047 Compare X21, 0
	048 JumpIfEqual {163}
	049 Move X22, 0x2D6000
	050 Move X22, [X22+3416]
	051 Move X1, X0
	052 Move X0, X21
	053 Move X2, [X22]
	054 Call List`1<Vector3>.AddRange, X0, X1
	055 Move X21, [X20+24]
	056 Move X0, X19
	057 Move X1, X31
	058 Call Mesh.get_colors32, X0
	059 Compare X21, 0
	060 JumpIfEqual {163}
	061 Move X8, 0x322000
	062 Move X8, [X8+1616]
	063 Move X23, 0x305000
	064 Move X24, 0x305000
	065 Move X1, X0
	066 Move X2, [X8]
	067 Move X23, [X23+8]
	068 Move X24, [X24+16]
	069 Move X0, X21
	070 Call List`1<Color32>.AddRange, X0, X1
	071 Move X0, [X23]
	072 Call 0x1C17F10
	073 Move X1, [X24]
	074 Move X21, X0
	075 Call List`1<Vector4>..ctor, X0
	076 Move X0, X19
	077 Move W1, W31
	078 Move X2, X21
	079 Move X3, X31
	080 Call Mesh.GetUVs, X0, X1, X2
	081 Move X0, [X20+32]
	082 Compare X0, 0
	083 JumpIfEqual {163}
	084 Move X23, 0x305000
	085 Move X23, [X23+352]
	086 Move X1, X21
	087 Move X2, [X23]
	088 Call List`1<Vector4>.AddRange, X0, X1
	089 Move W1, 1
	090 Move X0, X19
	091 Move X2, X21
	092 Move X3, X31
	093 Call Mesh.GetUVs, X0, X1, X2
	094 Move X0, [X20+40]
	095 Compare X0, 0
	096 JumpIfEqual {163}
	097 Move X2, [X23]
	098 Move X1, X21
	099 Call List`1<Vector4>.AddRange, X0, X1
	100 Move W1, 2
	101 Move X0, X19
	102 Move X2, X21
	103 Move X3, X31
	104 Call Mesh.GetUVs, X0, X1, X2
	105 Move X0, [X20+48]
	106 Compare X0, 0
	107 JumpIfEqual {163}
	108 Move X2, [X23]
	109 Move X1, X21
	110 Call List`1<Vector4>.AddRange, X0, X1
	111 Move W1, 3
	112 Move X0, X19
	113 Move X2, X21
	114 Move X3, X31
	115 Call Mesh.GetUVs, X0, X1, X2
	116 Move X0, [X20+56]
	117 Compare X0, 0
	118 JumpIfEqual {163}
	119 Move X2, [X23]
	120 Move X1, X21
	121 Call List`1<Vector4>.AddRange, X0, X1
	122 Move X21, [X20+64]
	123 Move X0, X19
	124 Move X1, X31
	125 Call Mesh.get_normals, X0
	126 Compare X21, 0
	127 JumpIfEqual {163}
	128 Move X2, [X22]
	129 Move X1, X0
	130 Move X0, X21
	131 Call List`1<Vector3>.AddRange, X0, X1
	132 Move X21, [X20+72]
	133 Move X0, X19
	134 Move X1, X31
	135 Call Mesh.get_tangents, X0
	136 Compare X21, 0
	137 JumpIfEqual {163}
	138 Move X2, [X23]
	139 Move X1, X0
	140 Move X0, X21
	141 Call List`1<Vector4>.AddRange, X0, X1
	142 Move X20, [X20+80]
	143 Move X0, X19
	144 Move W1, W31
	145 Move X2, X31
	146 Call Mesh.GetIndices, X0, X1
	147 Compare X20, 0
	148 JumpIfEqual {163}
	149 Move X8, 0x305000
	150 Move X8, [X8+1672]
	151 Move X1, X0
	152 Move X0, X20
	153 Move X20, [X31+48]
	154 Move X19, [X31+56]
	155 Move X2, [X8]
	156 Move X22, [X31+32]
	157 Move X21, [X31+40]
	158 Move X24, [X31+16]
	159 Move X23, [X31+24]
	160 Move X30, [X31+64]
	161 Call List`1<Int32>.AddRange, X0, X1
	162 Return 
	163 Call 0x1C17F20

Method: System.Void InitializeListIfRequired()

Disassembly:
	0x03E4A598 B 0x33BDD8C
	0x03E4A59C STP X30, X21, [X31 - 0x20]!
	0x03E4A5A0 STP X20, X19, [X31 + 0x10]
	0x03E4A5A4 ADRP X21, 0x59E000
	0x03E4A5A8 ADRP X20, 0x2A9000
	0x03E4A5AC LDRB W8, [X21 + 0x827]
	0x03E4A5B0 LDR X20, [X20 + 0x598]
	0x03E4A5B4 MOV X19, X0
	0x03E4A5B8 TBNZ X8, 0x0, 0x3E4A5DC
	0x03E4A5BC ADRP X0, 0x321000
	0x03E4A5C0 LDR X0, [X0 + 0x1F8]
	0x03E4A5C4 BL 0x1C16CF4
	0x03E4A5C8 ADRP X0, 0x2A9000
	0x03E4A5CC LDR X0, [X0 + 0x598]
	0x03E4A5D0 BL 0x1C16CF4
	0x03E4A5D4 MOVZ W8, 0x1
	0x03E4A5D8 STRB W8, [X21 + 0x827]
	0x03E4A5DC LDR X0, [X20]
	0x03E4A5E0 LDR X20, [X19 + 0x20]
	0x03E4A5E4 LDR W8, [X0 + 0xE0]
	0x03E4A5E8 CBNZ W8, 0x3E4A5F0
	0x03E4A5EC BL 0x1C16DFC
	0x03E4A5F0 MOV X0, X20
	0x03E4A5F4 MOV X1, X31
	0x03E4A5F8 MOV X2, X31
	0x03E4A5FC BL 0x3C3883C
	0x03E4A600 TBZ X0, 0x0, 0x3E4A620
	0x03E4A604 ADRP X8, 0x321000
	0x03E4A608 LDR X8, [X8 + 0x1F8]
	0x03E4A60C MOV X0, X19
	0x03E4A610 LDR X1, [X8]
	0x03E4A614 BL 0x21A3894
	0x03E4A618 STR X0, [X19 + 0x20]
	0x03E4A61C B 0x3E4A624
	0x03E4A620 LDR X0, [X19 + 0x20]
	0x03E4A624 LDP X20, X19, [X31 + 0x10]
	0x03E4A628 LDP X30, X21, [X31], #0x20
	0x03E4A62C RET
	0x03E4A630 STP X30, X21, [X31 - 0x20]!
	0x03E4A634 STP X20, X19, [X31 + 0x10]
	0x03E4A638 ADRP X21, 0x59E000
	0x03E4A63C ADRP X20, 0x2A9000
	0x03E4A640 LDRB W8, [X21 + 0x828]
	0x03E4A644 LDR X20, [X20 + 0x598]
	0x03E4A648 MOV X19, X0
	0x03E4A64C TBNZ X8, 0x0, 0x3E4A664
	0x03E4A650 ADRP X0, 0x2A9000
	0x03E4A654 LDR X0, [X0 + 0x598]
	0x03E4A658 BL 0x1C16CF4
	0x03E4A65C MOVZ W8, 0x1
	0x03E4A660 STRB W8, [X21 + 0x828]
	0x03E4A664 MOV X0, X19
	0x03E4A668 MOV X1, X31
	0x03E4A66C BL 0x3E4BDBC
	0x03E4A670 MOV X0, X19
	0x03E4A674 BL 0x3E4A59C
	0x03E4A678 LDR X8, [X20]
	0x03E4A67C MOV X20, X0
	0x03E4A680 LDR W9, [X8 + 0xE0]
	0x03E4A684 CBNZ W9, 0x3E4A690
	0x03E4A688 MOV X0, X8
	0x03E4A68C BL 0x1C16DFC
	0x03E4A690 MOV X0, X20
	0x03E4A694 MOV X1, X31
	0x03E4A698 MOV X2, X31
	0x03E4A69C BL 0x3C354F8
	0x03E4A6A0 TBZ X0, 0x0, 0x3E4A6C8
	0x03E4A6A4 MOV X0, X19
	0x03E4A6A8 BL 0x3E4A59C
	0x03E4A6AC CBZ X0, 0x3E4A6D4
	0x03E4A6B0 LDR X8, [X0]
	0x03E4A6B4 LDP X20, X19, [X31 + 0x10]
	0x03E4A6B8 LDR X2, [X8 + 0x2F8]
	0x03E4A6BC LDR X1, [X8 + 0x300]
	0x03E4A6C0 LDP X30, X21, [X31], #0x20
	0x03E4A6C4 BR X2
	0x03E4A6C8 LDP X20, X19, [X31 + 0x10]
	0x03E4A6CC LDP X30, X21, [X31], #0x20
	0x03E4A6D0 RET
	0x03E4A6D4 BL 0x1C16F20
	0x03E4A6D8 STP X30, X21, [X31 - 0x20]!
	0x03E4A6DC STP X20, X19, [X31 + 0x10]
	0x03E4A6E0 ADRP X21, 0x59E000
	0x03E4A6E4 ADRP X20, 0x2A9000
	0x03E4A6E8 LDRB W8, [X21 + 0x829]
	0x03E4A6EC LDR X20, [X20 + 0x598]
	0x03E4A6F0 MOV X19, X0
	0x03E4A6F4 TBNZ X8, 0x0, 0x3E4A70C
	0x03E4A6F8 ADRP X0, 0x2A9000
	0x03E4A6FC LDR X0, [X0 + 0x598]
	0x03E4A700 BL 0x1C16CF4
	0x03E4A704 MOVZ W8, 0x1
	0x03E4A708 STRB W8, [X21 + 0x829]
	0x03E4A70C MOV X0, X19
	0x03E4A710 BL 0x3E4A59C
	0x03E4A714 LDR X8, [X20]
	0x03E4A718 MOV X20, X0
	0x03E4A71C LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x59F000
	006 Move W8, [X20+2074]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {38}
	012 Move X0, 0x322000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move X0, 0x322000
	016 Move X0, [X0+1632]
	017 Call 0x1C17CF4
	018 Move X0, 0x322000
	019 Move X0, [X0+1640]
	020 Call 0x1C17CF4
	021 Move X0, 0x2D4000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move X0, 0x322000
	025 Move X0, [X0+1648]
	026 Call 0x1C17CF4
	027 Move X0, 0x322000
	028 Move X0, [X0+1656]
	029 Call 0x1C17CF4
	030 Move X0, 0x322000
	031 Move X0, [X0+1664]
	032 Call 0x1C17CF4
	033 Move X0, 0x2D4000
	034 Move X0, [X0+2272]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2074], W8
	038 Move W8, [X19+88]
	039 Compare W8, 0
	040 JumpIfNotEqual {106}
	041 Move X8, 0x322000
	042 Move X8, [X8+1648]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X20, 0x322000
	049 Move X20, [X20+1640]
	050 Move X0, [X20]
	051 Call CollectionPool`2<Object, Vector3>.Get
	052 Move [X19+16], X0
	053 Move X8, 0x322000
	054 Move X8, [X8+1664]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X8, 0x322000
	061 Move X8, [X8+1624]
	062 Move X0, [X8]
	063 Call CollectionPool`2<Object, Color32>.Get
	064 Move [X19+24], X0
	065 Move X8, 0x322000
	066 Move X8, [X8+1656]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X21, 0x322000
	073 Move X21, [X21+1632]
	074 Move X0, [X21]
	075 Call CollectionPool`2<Object, Vector4>.Get
	076 Move [X19+32], X0
	077 Move X0, [X21]
	078 Call CollectionPool`2<Object, Vector4>.Get
	079 Move [X19+40], X0
	080 Move X0, [X21]
	081 Call CollectionPool`2<Object, Vector4>.Get
	082 Move [X19+48], X0
	083 Move X0, [X21]
	084 Call CollectionPool`2<Object, Vector4>.Get
	085 Move [X19+56], X0
	086 Move X0, [X20]
	087 Call CollectionPool`2<Object, Vector3>.Get
	088 Move [X19+64], X0
	089 Move X0, [X21]
	090 Call CollectionPool`2<Object, Vector4>.Get
	091 Move [X19+72], X0
	092 Move X8, 0x2D4000
	093 Move X8, [X8+2272]
	094 Move X0, [X8]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, 0x2D4000
	100 Move X8, [X8+2264]
	101 Move X0, [X8]
	102 Call CollectionPool`2<Object, Int32>.Get
	103 Move W8, 1
	104 Move [X19+80], X0
	105 Move [X19+88], W8
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X30, [X31+32]
	109 Move X21, [X31+40]
	110 Return 

Method: System.Void Dispose()

Disassembly:
	0x03E4A720 CBNZ W9, 0x3E4A72C
	0x03E4A724 MOV X0, X8
	0x03E4A728 BL 0x1C16DFC
	0x03E4A72C MOV X0, X20
	0x03E4A730 MOV X1, X31
	0x03E4A734 MOV X2, X31
	0x03E4A738 BL 0x3C354F8
	0x03E4A73C TBZ X0, 0x0, 0x3E4A75C
	0x03E4A740 MOV X0, X19
	0x03E4A744 BL 0x3E4A59C
	0x03E4A748 CBZ X0, 0x3E4A770
	0x03E4A74C LDR X8, [X0]
	0x03E4A750 LDR X9, [X8 + 0x2F8]
	0x03E4A754 LDR X1, [X8 + 0x300]
	0x03E4A758 BLR X9
	0x03E4A75C MOV X0, X19
	0x03E4A760 LDP X20, X19, [X31 + 0x10]
	0x03E4A764 MOV X1, X31
	0x03E4A768 LDP X30, X21, [X31], #0x20
	0x03E4A76C B 0x3E4BDC4
	0x03E4A770 BL 0x1C16F20
	0x03E4A774 STP X30, X21, [X31 - 0x20]!
	0x03E4A778 STP X20, X19, [X31 + 0x10]
	0x03E4A77C ADRP X21, 0x59E000
	0x03E4A780 ADRP X20, 0x2A9000
	0x03E4A784 LDRB W8, [X21 + 0x82A]
	0x03E4A788 LDR X20, [X20 + 0x598]
	0x03E4A78C MOV X19, X0
	0x03E4A790 TBNZ X8, 0x0, 0x3E4A7A8
	0x03E4A794 ADRP X0, 0x2A9000
	0x03E4A798 LDR X0, [X0 + 0x598]
	0x03E4A79C BL 0x1C16CF4
	0x03E4A7A0 MOVZ W8, 0x1
	0x03E4A7A4 STRB W8, [X21 + 0x82A]
	0x03E4A7A8 MOV X0, X19
	0x03E4A7AC BL 0x3E4A59C
	0x03E4A7B0 LDR X8, [X20]
	0x03E4A7B4 MOV X20, X0
	0x03E4A7B8 LDR W9, [X8 + 0xE0]
	0x03E4A7BC CBNZ W9, 0x3E4A7C8
	0x03E4A7C0 MOV X0, X8
	0x03E4A7C4 BL 0x1C16DFC
	0x03E4A7C8 MOV X0, X20
	0x03E4A7CC MOV X1, X31
	0x03E4A7D0 MOV X2, X31
	0x03E4A7D4 BL 0x3C354F8
	0x03E4A7D8 TBZ X0, 0x0, 0x3E4A7F8
	0x03E4A7DC MOV X0, X19
	0x03E4A7E0 BL 0x3E4A59C
	0x03E4A7E4 CBZ X0, 0x3E4A80C
	0x03E4A7E8 LDR X8, [X0]
	0x03E4A7EC LDR X9, [X8 + 0x2F8]
	0x03E4A7F0 LDR X1, [X8 + 0x300]
	0x03E4A7F4 BLR X9
	0x03E4A7F8 MOV X0, X19
	0x03E4A7FC LDP X20, X19, [X31 + 0x10]
	0x03E4A800 MOV X1, X31
	0x03E4A804 LDP X30, X21, [X31], #0x20
	0x03E4A808 B 0x3E5AD98
	0x03E4A80C BL 0x1C16F20
	0x03E4A810 STR X30, [X31 - 0x30]!
	0x03E4A814 STP X22, X21, [X31 + 0x10]
	0x03E4A818 STP X20, X19, [X31 + 0x20]
	0x03E4A81C ADRP X22, 0x59E000
	0x03E4A820 ADRP X19, 0x30F000
	0x03E4A824 LDRB W8, [X22 + 0x82B]
	0x03E4A828 LDR X19, [X19 + 0x1A0]
	0x03E4A82C MOV X20, X1
	0x03E4A830 MOV X21, X0
	0x03E4A834 TBNZ X8, 0x0, 0x3E4A858
	0x03E4A838 ADRP X0, 0x2A9000
	0x03E4A83C LDR X0, [X0 + 0xE00]
	0x03E4A840 BL 0x1C16CF4
	0x03E4A844 ADRP X0, 0x30F000
	0x03E4A848 LDR X0, [X0 + 0x1A0]
	0x03E4A84C BL 0x1C16CF4
	0x03E4A850 MOVZ W8, 0x1
	0x03E4A854 STRB W8, [X22 + 0x82B]
	0x03E4A858 LDR X0, [X19]
	0x03E4A85C ADRP X22, 0x2A9000
	0x03E4A860 LDR X22, [X22 + 0xE00]
	0x03E4A864 BL 0x1C16F10
	0x03E4A868 MOV X1, X20
	0x03E4A86C MOV X19, X0
	0x03E4A870 BL 0x3E4935C
	0x03E4A874 LDR X8, [X21]
	0x03E4A878 LDR X9, [X8 + 0x278]
	0x03E4A87C LDR X2, [X8 + 0x280]
	0x03E4A880 MOV X0, X21
	0x03E4A884 MOV X1, X19
	0x03E4A888 BLR X9
	0x03E4A88C CBZ X19, 0x3E4A914
	0x03E4A890 MOV X0, X19
	0x03E4A894 MOV X1, X20
	0x03E4A898 BL 0x3E49C28
	0x03E4A89C MOV X20, X31
	0x03E4A8A0 LDR X8, [X19]
	0x03E4A8A4 LDR X1, [X22]
	0x03E4A8A8 LDRH W9, [X8 + 0x12E]
	0x03E4A8AC CBZ X9, 0x3E4A8D0
	0x03E4A8B0 LDR X10, [X8 + 0xB0]
	0x03E4A8B4 ADD X10, X10, 0x8
	0x03E4A8B8 LDUR X11, [X10 - 0x8]
	0x03E4A8BC CMP X11, X1
	0x03E4A8C0 B.EQ 0x3E4A8E0
	0x03E4A8C4 SUBS X9, X9, 0x1
	0x03E4A8C8 ADD X10, X10, 0x10
	0x03E4A8CC B.NE 0x3E4A8B8
	0x03E4A8D0 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x59F000
	010 Move W8, [X20+2075]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x322000
	017 Move X0, [X0+1672]
	018 Call 0x1C17CF4
	019 Move X0, 0x2D5000
	020 Move X0, [X0+2824]
	021 Call 0x1C17CF4
	022 Move X0, 0x322000
	023 Move X0, [X0+1680]
	024 Call 0x1C17CF4
	025 Move X0, 0x322000
	026 Move X0, [X0+1688]
	027 Call 0x1C17CF4
	028 Move X0, 0x322000
	029 Move X0, [X0+1648]
	030 Call 0x1C17CF4
	031 Move X0, 0x322000
	032 Move X0, [X0+1656]
	033 Call 0x1C17CF4
	034 Move X0, 0x322000
	035 Move X0, [X0+1664]
	036 Call 0x1C17CF4
	037 Move X0, 0x2D4000
	038 Move X0, [X0+2272]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+2075], W8
	042 Move W8, [X19+88]
	043 Compare W8, 0
	044 JumpIfEqual {120}
	045 Move X8, 0x322000
	046 Move X8, [X8+1648]
	047 Move X21, X19
	048 Add X21, X21, 16
	049 Move X20, [X21]
	050 Move X22, 0x322000
	051 Move X0, [X8]
	052 Move X24, 0x322000
	053 Move W8, [X0+224]
	054 Move X22, [X22+1680]
	055 Move X24, [X24+1664]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X1, [X22]
	060 Move X23, 0x322000
	061 Move X25, 0x322000
	062 Move X23, [X23+1672]
	063 Move X25, [X25+1656]
	064 Move X0, X20
	065 Call CollectionPool`2<Object, Vector3>.Release, X0
	066 Move X0, [X24]
	067 Move X20, [X19+24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X1, [X23]
	073 Move X24, 0x322000
	074 Move X23, 0x2D4000
	075 Move X24, [X24+1688]
	076 Move X23, [X23+2272]
	077 Move X0, X20
	078 Call CollectionPool`2<Object, Color32>.Release, X0
	079 Move X0, [X25]
	080 Move X20, [X19+32]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X1, [X24]
	086 Move X25, 0x2D5000
	087 Move X25, [X25+2824]
	088 Move X0, X20
	089 Call CollectionPool`2<Object, Vector4>.Release, X0
	090 Move X0, [X19+40]
	091 Move X1, [X24]
	092 Call CollectionPool`2<Object, Vector4>.Release, X0
	093 Move X0, [X19+48]
	094 Move X1, [X24]
	095 Call CollectionPool`2<Object, Vector4>.Release, X0
	096 Move X0, [X19+56]
	097 Move X1, [X24]
	098 Call CollectionPool`2<Object, Vector4>.Release, X0
	099 Move X0, [X19+64]
	100 Move X1, [X22]
	101 Call CollectionPool`2<Object, Vector3>.Release, X0
	102 Move X0, [X19+72]
	103 Move X1, [X24]
	104 Call CollectionPool`2<Object, Vector4>.Release, X0
	105 Move X0, [X23]
	106 Move X19, [X19+80]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X1, [X25]
	112 Move X0, X19
	113 Call CollectionPool`2<Object, Int32>.Release, X0
	114 NotImplemented "Instruction MOVI not yet implemented."
	115 Move [X21+57], V0
	116 Move [X21+32], V0
	117 Move [X21+40], V0
	118 Move [X21], V0
	119 Move [X21+8], V0
	120 Move X20, [X31+48]
	121 Move X19, [X31+56]
	122 Move X22, [X31+32]
	123 Move X21, [X31+40]
	124 Move X24, [X31+16]
	125 Move X23, [X31+24]
	126 Move X30, [X31+64]
	127 Move X25, [X31+72]
	128 Return 

Method: System.Void Clear()

Disassembly:
	0x03E3A938 MOV X0, X20
	0x03E3A93C BL 0x3EB1AD0
	0x03E3A940 LDR X21, [X0]
	0x03E3A944 BL 0x3EB1AE0
	0x03E3A948 LDR X1, [X22]
	0x03E3A94C ADD X0, X31, 0x20
	0x03E3A950 BL 0x2BC3C60
	0x03E3A954 CBNZ X21, 0x3E3ABA4
	0x03E3A958 LDR X0, [X19 + 0x30]
	0x03E3A95C CBZ X0, 0x3E3AA18
	0x03E3A960 ADRP X8, 0x331000
	0x03E3A964 LDR X8, [X8 + 0x310]
	0x03E3A968 LDR X1, [X8]
	0x03E3A96C ADD X8, X31, 0x8
	0x03E3A970 BL 0x2DBE924
	0x03E3A974 LDUR V0, [X31 + 0x8]
	0x03E3A978 LDR X8, [X31 + 0x18]
	0x03E3A97C ADRP X20, 0x331000
	0x03E3A980 STR V0, [X31 + 0x2]
	0x03E3A984 STR X8, [X31 + 0x30]
	0x03E3A988 LDR X20, [X20 + 0x2E8]
	0x03E3A98C LDR X1, [X20]
	0x03E3A990 ADD X0, X31, 0x20
	0x03E3A994 BL 0x2BC3C64
	0x03E3A998 TBZ X0, 0x0, 0x3E3A9CC
	0x03E3A99C LDR X0, [X31 + 0x30]
	0x03E3A9A0 CBZ X0, 0x3E3AA1C
	0x03E3A9A4 LDR X8, [X0]
	0x03E3A9A8 LDRB W1, [X31 + 0x8C]
	0x03E3A9AC LDR X9, [X8 + 0x4E8]
	0x03E3A9B0 LDR X2, [X8 + 0x4F0]
	0x03E3A9B4 MOV V0.16B, V10.16B
	0x03E3A9B8 MOV V1.16B, V11.16B
	0x03E3A9BC MOV V2.16B, V8.16B
	0x03E3A9C0 MOV V3.16B, V9.16B
	0x03E3A9C4 BLR X9
	0x03E3A9C8 B 0x3E3A98C
	0x03E3A9CC LDR X1, [X22]
	0x03E3A9D0 ADD X0, X31, 0x20
	0x03E3A9D4 BL 0x2BC3C60
	0x03E3A9D8 LDR X8, [X19]
	0x03E3A9DC STP S10, S11, [X19 + 0x50]
	0x03E3A9E0 STP S8, S9, [X19 + 0x58]
	0x03E3A9E4 STRB W31, [X19 + 0x60]
	0x03E3A9E8 LDR X9, [X8 + 0x288]
	0x03E3A9EC LDR X1, [X8 + 0x290]
	0x03E3A9F0 MOV X0, X19
	0x03E3A9F4 BLR X9
	0x03E3A9F8 LDP X20, X19, [X31 + 0xB0]
	0x03E3A9FC LDP X22, X21, [X31 + 0xA0]
	0x03E3AA00 LDP X24, X23, [X31 + 0x90]
	0x03E3AA04 LDR X30, [X31 + 0x80]
	0x03E3AA08 LDP D9, D8, [X31 + 0x70]
	0x03E3AA0C LDP D11, D10, [X31 + 0x60]
	0x03E3AA10 ADD X31, X31, 0xC0
	0x03E3AA14 RET
	0x03E3AA18 BL 0x1C16F20
	0x03E3AA1C BL 0x1C16F20
	0x03E3AA20 MOV X21, X31
	0x03E3AA24 B 0x3E3AA2C
	0x03E3AA28 MOV X20, X0
	0x03E3AA2C LDR X1, [X22]
	0x03E3AA30 ADD X0, X31, 0x20
	0x03E3AA34 BL 0x2BC3C60
	0x03E3AA38 CBZ X21, 0x3E3ABD0
	0x03E3AA3C MOV X0, X21
	0x03E3AA40 BL 0x1C16F18
	0x03E3AA44 B 0x3E3AA4C
	0x03E3AA48 B 0x3E3AA4C
	0x03E3AA4C MOV X20, X0
	0x03E3AA50 CMP W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5AF000
	005 Move W8, [X20+2076]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0x2BE000
	012 Move X0, [X0+896]
	013 Call 0x1C17CF4
	014 Move X0, 0x314000
	015 Move X0, [X0+4088]
	016 Call 0x1C17CF4
	017 Move X0, 0x2C1000
	018 Move X0, [X0+2136]
	019 Call 0x1C17CF4
	020 Move X0, 0x332000
	021 Move X0, [X0+648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2076], W8
	025 Move W8, [X19+88]
	026 Compare W8, 0
	027 JumpIfEqual {91}
	028 Move X8, [X19+16]
	029 Compare X8, 0
	030 JumpIfEqual {95}
	031 Move W9, [X8+28]
	032 Add W9, W9, 1
	033 Move [X8+24], W31
	034 Move [X8+28], W9
	035 Move X8, [X19+24]
	036 Compare X8, 0
	037 JumpIfEqual {95}
	038 Move W9, [X8+28]
	039 Add W9, W9, 1
	040 Move [X8+24], W31
	041 Move [X8+28], W9
	042 Move X8, [X19+32]
	043 Compare X8, 0
	044 JumpIfEqual {95}
	045 Move W9, [X8+28]
	046 Add W9, W9, 1
	047 Move [X8+24], W31
	048 Move [X8+28], W9
	049 Move X8, [X19+40]
	050 Compare X8, 0
	051 JumpIfEqual {95}
	052 Move W9, [X8+28]
	053 Add W9, W9, 1
	054 Move [X8+24], W31
	055 Move [X8+28], W9
	056 Move X8, [X19+48]
	057 Compare X8, 0
	058 JumpIfEqual {95}
	059 Move W9, [X8+28]
	060 Add W9, W9, 1
	061 Move [X8+24], W31
	062 Move [X8+28], W9
	063 Move X8, [X19+56]
	064 Compare X8, 0
	065 JumpIfEqual {95}
	066 Move W9, [X8+28]
	067 Add W9, W9, 1
	068 Move [X8+24], W31
	069 Move [X8+28], W9
	070 Move X8, [X19+64]
	071 Compare X8, 0
	072 JumpIfEqual {95}
	073 Move W9, [X8+28]
	074 Add W9, W9, 1
	075 Move [X8+24], W31
	076 Move [X8+28], W9
	077 Move X8, [X19+72]
	078 Compare X8, 0
	079 JumpIfEqual {95}
	080 Move W9, [X8+28]
	081 Add W9, W9, 1
	082 Move [X8+24], W31
	083 Move [X8+28], W9
	084 Move X8, [X19+80]
	085 Compare X8, 0
	086 JumpIfEqual {95}
	087 Move W9, [X8+28]
	088 Add W9, W9, 1
	089 Move [X8+24], W31
	090 Move [X8+28], W9
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Return 
	095 Call 0x1C17F20

Method: System.Int32 get_currentVertCount()

Disassembly:
	0x03E4A8D4 MOV W2, W31
	0x03E4A8D8 BL 0x1C5C788
	0x03E4A8DC B 0x3E4A8EC
	0x03E4A8E0 LDRSW X9, [X10]
	0x03E4A8E4 ADD X8, X8, X9, 0x4, LSL
	0x03E4A8E8 ADD X0, X8, 0x138
	0x03E4A8EC LDP X8, X1, [X0]
	0x03E4A8F0 MOV X0, X19
	0x03E4A8F4 BLR X8
	0x03E4A8F8 CBNZ X20, 0x3E4A90C
	0x03E4A8FC LDP X20, X19, [X31 + 0x20]
	0x03E4A900 LDP X22, X21, [X31 + 0x10]
	0x03E4A904 LDR X30, [X31], #0x30
	0x03E4A908 RET
	0x03E4A90C MOV X0, X20
	0x03E4A910 BL 0x1C16F18
	0x03E4A914 BL 0x1C16F20
	0x03E4A918 B 0x3E4A91C
	0x03E4A91C MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x59F000
	005 Move W8, [X20+2077]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2AE000
	012 Move X0, [X0+2424]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2077], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {20}
	019 Move W0, [X8+24]
	020 Move W0, W31
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: System.Int32 get_currentIndexCount()

Disassembly:
	0x03E4A920 CMP W1, 0x1
	0x03E4A924 B.NE 0x3E4A940
	0x03E4A928 MOV X0, X21
	0x03E4A92C BL 0x3EB1AD0
	0x03E4A930 LDR X20, [X0]
	0x03E4A934 BL 0x3EB1AE0
	0x03E4A938 CBNZ X19, 0x3E4A8A0
	0x03E4A93C B 0x3E4A8F8
	0x03E4A940 MOV X20, X31
	0x03E4A944 B 0x3E4A94C
	0x03E4A948 MOV X21, X0
	0x03E4A94C CBZ X19, 0x3E4A9A8
	0x03E4A950 LDR X8, [X19]
	0x03E4A954 LDR X1, [X22]
	0x03E4A958 LDRH W9, [X8 + 0x12E]
	0x03E4A95C CBZ X9, 0x3E4A980
	0x03E4A960 LDR X10, [X8 + 0xB0]
	0x03E4A964 ADD X10, X10, 0x8
	0x03E4A968 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x59F000
	005 Move W8, [X20+2078]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2AB000
	012 Move X0, [X0+3624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2078], W8
	016 Move X8, [X19+80]
	017 Compare X8, 0
	018 JumpIfEqual {20}
	019 Move W0, [X8+24]
	020 Move W0, W31
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: System.Void PopulateUIVertex(ref UnityEngine.UIVertex vertex, System.Int32 i)

Disassembly:
	0x03E4A96C CMP X11, X1
	0x03E4A970 B.EQ 0x3E4A990
	0x03E4A974 SUBS X9, X9, 0x1
	0x03E4A978 ADD X10, X10, 0x10
	0x03E4A97C B.NE 0x3E4A968
	0x03E4A980 MOV X0, X19
	0x03E4A984 MOV W2, W31
	0x03E4A988 BL 0x1C5C788
	0x03E4A98C B 0x3E4A99C
	0x03E4A990 LDRSW X9, [X10]
	0x03E4A994 ADD X8, X8, X9, 0x4, LSL
	0x03E4A998 ADD X0, X8, 0x138
	0x03E4A99C LDP X8, X1, [X0]
	0x03E4A9A0 MOV X0, X19
	0x03E4A9A4 BLR X8
	0x03E4A9A8 CBNZ X20, 0x3E4A9B4
	0x03E4A9AC MOV X0, X21
	0x03E4A9B0 BL 0x1D2C690
	0x03E4A9B4 MOV X0, X20
	0x03E4A9B8 BL 0x1C16F18
	0x03E4A9BC BL 0x1990590
	0x03E4A9C0 MOV X1, X31
	0x03E4A9C4 B 0x3E4E160
	0x03E4A9C8 MOV X1, X31
	0x03E4A9CC B 0x3E4ACD4
	0x03E4A9D0 STR X30, [X31 - 0x40]!
	0x03E4A9D4 STP X24, X23, [X31 + 0x10]
	0x03E4A9D8 STP X22, X21, [X31 + 0x20]
	0x03E4A9DC STP X20, X19, [X31 + 0x30]
	0x03E4A9E0 ADRP X21, 0x59E000
	0x03E4A9E4 LDRB W8, [X21 + 0x82C]
	0x03E4A9E8 MOV X19, X1
	0x03E4A9EC MOV X20, X0
	0x03E4A9F0 TBNZ X8, 0x0, 0x3E4AA44
	0x03E4A9F4 ADRP X0, 0x321000
	0x03E4A9F8 LDR X0, [X0 + 0x6C8]
	0x03E4A9FC BL 0x1C16CF4
	0x03E4AA00 ADRP X0, 0x321000
	0x03E4AA04 LDR X0, [X0 + 0x6D0]
	0x03E4AA08 BL 0x1C16CF4
	0x03E4AA0C ADRP X0, 0x321000
	0x03E4AA10 LDR X0, [X0 + 0x6D8]
	0x03E4AA14 BL 0x1C16CF4
	0x03E4AA18 ADRP X0, 0x321000
	0x03E4AA1C LDR X0, [X0 + 0x6E0]
	0x03E4AA20 BL 0x1C16CF4
	0x03E4AA24 ADRP X0, 0x321000
	0x03E4AA28 LDR X0, [X0 + 0x6E8]
	0x03E4AA2C BL 0x1C16CF4
	0x03E4AA30 ADRP X0, 0x321000
	0x03E4AA34 LDR X0, [X0 + 0x6F0]
	0x03E4AA38 BL 0x1C16CF4
	0x03E4AA3C MOVZ W8, 0x1
	0x03E4AA40 STRB W8, [X21 + 0x82C]
	0x03E4AA44 LDR X8, [X20]
	0x03E4AA48 MOV X0, X20
	0x03E4AA4C LDP X9, X1, [X8 + 0x1C8]
	0x03E4AA50 BLR X9
	0x03E4AA54 TBZ X0, 0x0, 0x3E4ABF8
	0x03E4AA58 ADRP X24, 0x321000
	0x03E4AA5C LDR X24, [X24 + 0x6D8]
	0x03E4AA60 ADRP X21, 0x321000
	0x03E4AA64 LDR X0, [X24]
	0x03E4AA68 LDR W8, [X0 + 0xE0]
	0x03E4AA6C LDR X21, [X21 + 0x6C8]
	0x03E4AA70 CBNZ W8, 0x3E4AA78
	0x03E4AA74 BL 0x1C16DFC
	0x03E4AA78 LDR X0, [X21]
	0x03E4AA7C BL 0x28F9D60
	0x03E4AA80 CBZ X19, 0x3E4AC0C
	0x03E4AA84 MOV X21, X0
	0x03E4AA88 MOV X0, X19
	0x03E4AA8C MOV X1, X21
	0x03E4AA90 BL 0x3E4A4AC
	0x03E4AA94 CBZ X21, 0x3E4AC0C
	0x03E4AA98 ADRP X9, 0x321000
	0x03E4AA9C LDR W8, [X21 + 0x18]
	0x03E4AAA0 LDR X9, [X9 + 0x6E0]
	0x03E4AAA4 MOV X0, X21
	0x03E4AAA8 ADD W22, W8, W8, 0x2, LSL
	0x03E4AAAC LDR X1, [X9]
	0x03E4AAB0 BL 0x30BB470
	0x03E4AAB4 CMP W0, W22
	0x03E4AAB8 B.GE 0x3E4AAD4
	0x03E4AABC ADRP X8, 0x321000
	0x03E4AAC0 LDR X8, [X8 + 0x6F0]
	0x03E4AAC4 MOV X0, X21
	0x03E4AAC8 MOV W1, W22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x59F000
	008 Move W8, [X22+2079]
	009 Move W20, W2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x322000
	017 Move X0, [X0+1696]
	018 Call 0x1C17CF4
	019 Move X0, 0x2AE000
	020 Move X0, [X0+2432]
	021 Call 0x1C17CF4
	022 Move X0, 0x305000
	023 Move X0, [X0+56]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2079], W8
	027 Move X0, X21
	028 Call VertexHelper.InitializeListIfRequired, X0
	029 Move X0, [X21+16]
	030 Compare X0, 0
	031 JumpIfEqual {117}
	032 Move X22, 0x2AE000
	033 Move X22, [X22+2432]
	034 Move W1, W20
	035 Move X2, [X22]
	036 Call List`1<Vector3>.get_Item, X0, X1
	037 Move [X19], S0
	038 Move [X19+8], S1
	039 Move [X19+8], S2
	040 Move X0, [X21+24]
	041 Compare X0, 0
	042 JumpIfEqual {117}
	043 Move X8, 0x322000
	044 Move X8, [X8+1696]
	045 Move W1, W20
	046 Move X2, [X8]
	047 Call List`1<Color32>.get_Item, X0, X1
	048 Move [X19+40], W0
	049 Move X0, [X21+32]
	050 Compare X0, 0
	051 JumpIfEqual {117}
	052 Move X23, 0x305000
	053 Move X23, [X23+56]
	054 Move W1, W20
	055 Move X2, [X23]
	056 Call List`1<Vector4>.get_Item, X0, X1
	057 Move [X19+44], S0
	058 Move [X19+52], S1
	059 Move [X19+52], S2
	060 Move [X19+60], S3
	061 Move X0, [X21+40]
	062 Compare X0, 0
	063 JumpIfEqual {117}
	064 Move X2, [X23]
	065 Move W1, W20
	066 Call List`1<Vector4>.get_Item, X0, X1
	067 Move [X19+60], S0
	068 Move [X19+68], S1
	069 Move [X19+68], S2
	070 Move [X19+76], S3
	071 Move X0, [X21+48]
	072 Compare X0, 0
	073 JumpIfEqual {117}
	074 Move X2, [X23]
	075 Move W1, W20
	076 Call List`1<Vector4>.get_Item, X0, X1
	077 Move [X19+76], S0
	078 Move [X19+84], S1
	079 Move [X19+84], S2
	080 Move [X19+92], S3
	081 Move X0, [X21+56]
	082 Compare X0, 0
	083 JumpIfEqual {117}
	084 Move X2, [X23]
	085 Move W1, W20
	086 Call List`1<Vector4>.get_Item, X0, X1
	087 Move [X19+92], S0
	088 Move [X19+100], S1
	089 Move [X19+100], S2
	090 Move [X19+108], S3
	091 Move X0, [X21+64]
	092 Compare X0, 0
	093 JumpIfEqual {117}
	094 Move X2, [X22]
	095 Move W1, W20
	096 Call List`1<Vector3>.get_Item, X0, X1
	097 Move [X19+12], S0
	098 Move [X19+20], S1
	099 Move [X19+20], S2
	100 Move X0, [X21+72]
	101 Compare X0, 0
	102 JumpIfEqual {117}
	103 Move X2, [X23]
	104 Move W1, W20
	105 Call List`1<Vector4>.get_Item, X0, X1
	106 Move [X19+24], S0
	107 Move [X19+32], S1
	108 Move [X19+32], S2
	109 Move [X19+40], S3
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Move X23, [X31+56]
	116 Return 
	117 Call 0x1C17F20

Method: System.Void SetUIVertex(UnityEngine.UIVertex vertex, System.Int32 i)

Disassembly:
	0x03E4AACC LDR X2, [X8]
	0x03E4AAD0 BL 0x30BB48C
	0x03E4AAD4 LDP S0, S1, [X20 + 0x28]
	0x03E4AAD8 LDP S2, S3, [X20 + 0x30]
	0x03E4AADC LDR W22, [X21 + 0x18]
	0x03E4AAE0 MOV X0, X31
	0x03E4AAE4 BL 0x1E43664
	0x03E4AAE8 LDR W4, [X21 + 0x18]
	0x03E4AAEC LDP S0, S1, [X20 + 0x38]
	0x03E4AAF0 AND X2, X0, 0x0
	0x03E4AAF4 MOV X0, X20
	0x03E4AAF8 MOV X1, X21
	0x03E4AAFC MOV W3, W31
	0x03E4AB00 MOV X5, X31
	0x03E4AB04 BL 0x3E4AFA8
	0x03E4AB08 LDP S0, S1, [X20 + 0x28]
	0x03E4AB0C LDP S2, S3, [X20 + 0x30]
	0x03E4AB10 LDR W23, [X21 + 0x18]
	0x03E4AB14 MOV X0, X31
	0x03E4AB18 BL 0x1E43664
	0x03E4AB1C LDP S0, S1, [X20 + 0x38]
	0x03E4AB20 LDR W4, [X21 + 0x18]
	0x03E4AB24 AND X2, X0, 0x0
	0x03E4AB28 MOV X0, X20
	0x03E4AB2C FNEG S1, S1
	0x03E4AB30 MOV X1, X21
	0x03E4AB34 MOV W3, W22
	0x03E4AB38 MOV X5, X31
	0x03E4AB3C BL 0x3E4AFA8
	0x03E4AB40 LDP S0, S1, [X20 + 0x28]
	0x03E4AB44 LDP S2, S3, [X20 + 0x30]
	0x03E4AB48 LDR W22, [X21 + 0x18]
	0x03E4AB4C MOV X0, X31
	0x03E4AB50 BL 0x1E43664
	0x03E4AB54 LDP S0, S1, [X20 + 0x38]
	0x03E4AB58 LDR W4, [X21 + 0x18]
	0x03E4AB5C AND X2, X0, 0x0
	0x03E4AB60 MOV X0, X20
	0x03E4AB64 FNEG S0, S0
	0x03E4AB68 MOV X1, X21
	0x03E4AB6C MOV W3, W23
	0x03E4AB70 MOV X5, X31
	0x03E4AB74 BL 0x3E4AFA8
	0x03E4AB78 LDP S0, S1, [X20 + 0x28]
	0x03E4AB7C LDP S2, S3, [X20 + 0x30]
	0x03E4AB80 MOV X0, X31
	0x03E4AB84 BL 0x1E43664
	0x03E4AB88 LDP S0, S1, [X20 + 0x38]
	0x03E4AB8C LDR W4, [X21 + 0x18]
	0x03E4AB90 AND X2, X0, 0x0
	0x03E4AB94 MOV X0, X20
	0x03E4AB98 FNEG S0, S0
	0x03E4AB9C FNEG S1, S1
	0x03E4ABA0 MOV X1, X21
	0x03E4ABA4 MOV W3, W22
	0x03E4ABA8 MOV X5, X31
	0x03E4ABAC BL 0x3E4AFA8
	0x03E4ABB0 MOV X0, X19
	0x03E4ABB4 BL 0x3E39938
	0x03E4ABB8 MOV X0, X19
	0x03E4ABBC MOV X1, X21
	0x03E4ABC0 BL 0x3E4A45C
	0x03E4ABC4 LDR X0, [X24]
	0x03E4ABC8 LDR W8, [X0 + 0xE0]
	0x03E4ABCC CBNZ W8, 0x3E4ABD4
	0x03E4ABD0 BL 0x1C16DFC
	0x03E4ABD4 ADRP X8, 0x321000
	0x03E4ABD8 LDR X8, [X8 + 0x6D0]
	0x03E4ABDC MOV X0, X21
	0x03E4ABE0 LDP X20, X19, [X31 + 0x30]
	0x03E4ABE4 LDP X22, X21, [X31 + 0x20]
	0x03E4ABE8 LDR X1, [X8]
	0x03E4ABEC LDP X24, X23, [X31 + 0x10]
	0x03E4ABF0 LDR X30, [X31], #0x40
	0x03E4ABF4 B 0x28F9EA0
	0x03E4ABF8 LDP X20, X19, [X31 + 0x30]
	0x03E4ABFC LDP X22, X21, [X31 + 0x20]
	0x03E4AC00 LDP X24, X23, [X31 + 0x10]
	0x03E4AC04 LDR X30, [X31], #0x40
	0x03E4AC08 RET
	0x03E4AC0C BL 0x1C16F20
	0x03E4AC10 MOV X1, X31
	0x03E4AC14 B 0x3E4A9C0
	0x03E4AC18 SUB X31, X31, 0x110
	0x03E4AC1C STR X29, [X31 + 0xE0]
	0x03E4AC20 STP X30, X21, [X31 + 0xF0]
	0x03E4AC24 STP X20, X19, [X31 + 0x100]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x59F000
	008 Move W8, [X22+2080]
	009 Move W19, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x322000
	017 Move X0, [X0+1704]
	018 Call 0x1C17CF4
	019 Move X0, 0x306000
	020 Move X0, [X0+232]
	021 Call 0x1C17CF4
	022 Move X0, 0x30B000
	023 Move X0, [X0+3016]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2080], W8
	027 Move X0, X21
	028 Call VertexHelper.InitializeListIfRequired, X0
	029 Move X0, [X21+16]
	030 Compare X0, 0
	031 JumpIfEqual {117}
	032 Move X22, 0x306000
	033 Move X22, [X22+232]
	034 Move S1, [X20+4]
	035 Move S2, [X20+8]
	036 Move V0, [X20]
	037 Move W1, W19
	038 Move X2, [X22]
	039 Call List`1<Vector3>.set_Item, X0, X1, X2
	040 Move X0, [X21+24]
	041 Compare X0, 0
	042 JumpIfEqual {117}
	043 Move X8, 0x322000
	044 Move X8, [X8+1704]
	045 Move W2, [X20+40]
	046 Move W1, W19
	047 Move X3, [X8]
	048 Call List`1<Color32>.set_Item, X0, X1, X2
	049 Move X0, [X21+32]
	050 Compare X0, 0
	051 JumpIfEqual {117}
	052 Move X23, 0x30B000
	053 Move X23, [X23+3016]
	054 Move S2, [X20+52]
	055 Move S3, [X20+56]
	056 Move S0, [X20+44]
	057 Move S1, [X20+48]
	058 Move W1, W19
	059 Move X2, [X23]
	060 Call List`1<Vector4>.set_Item, X0, X1, X2
	061 Move X0, [X21+40]
	062 Compare X0, 0
	063 JumpIfEqual {117}
	064 Move S2, [X20+68]
	065 Move S3, [X20+72]
	066 Move S0, [X20+60]
	067 Move S1, [X20+64]
	068 Move X2, [X23]
	069 Move W1, W19
	070 Call List`1<Vector4>.set_Item, X0, X1, X2
	071 Move X0, [X21+48]
	072 Compare X0, 0
	073 JumpIfEqual {117}
	074 Move S2, [X20+84]
	075 Move S3, [X20+88]
	076 Move S0, [X20+76]
	077 Move S1, [X20+80]
	078 Move X2, [X23]
	079 Move W1, W19
	080 Call List`1<Vector4>.set_Item, X0, X1, X2
	081 Move X0, [X21+56]
	082 Compare X0, 0
	083 JumpIfEqual {117}
	084 Move S2, [X20+100]
	085 Move S3, [X20+104]
	086 Move S0, [X20+92]
	087 Move S1, [X20+96]
	088 Move X2, [X23]
	089 Move W1, W19
	090 Call List`1<Vector4>.set_Item, X0, X1, X2
	091 Move X0, [X21+64]
	092 Compare X0, 0
	093 JumpIfEqual {117}
	094 Move S1, [X20+16]
	095 Move S2, [X20+20]
	096 Move V0, [X20+12]
	097 Move X2, [X22]
	098 Move W1, W19
	099 Call List`1<Vector3>.set_Item, X0, X1, X2
	100 Move X0, [X21+72]
	101 Compare X0, 0
	102 JumpIfEqual {117}
	103 Move S2, [X20+32]
	104 Move S3, [X20+36]
	105 Move S0, [X20+24]
	106 Move S1, [X20+28]
	107 Move X2, [X23]
	108 Move W1, W19
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X22, [X31+16]
	112 Move X21, [X31+24]
	113 Move X30, [X31+48]
	114 Move X23, [X31+56]
	115 Call List`1<Vector4>.set_Item, X0, X1, X2
	116 Return 
	117 Call 0x1C17F20

Method: System.Void FillMesh(UnityEngine.Mesh mesh)

Disassembly:
	0x03E4AC28 ADD X21, X31, 0x70
	0x03E4AC2C MOVI V0.2D, 0x0
	0x03E4AC30 STUR V0, [X21 + 0x5C]
	0x03E4AC34 STP V0, V0, [X31 + 0xB0]
	0x03E4AC38 STP V0, V0, [X31 + 0x90]
	0x03E4AC3C STP V0, V0, [X31 + 0x70]
	0x03E4AC40 CBZ X1, 0x3E4ACD0
	0x03E4AC44 MOV X19, X1
	0x03E4AC48 MOV X0, X1
	0x03E4AC4C MOV X1, X31
	0x03E4AC50 BL 0x3E498D4
	0x03E4AC54 CMP W0, 0x1
	0x03E4AC58 B.LT 0x3E4ACBC
	0x03E4AC5C MOV W20, W31
	0x03E4AC60 ADD X1, X31, 0x70
	0x03E4AC64 MOV X0, X19
	0x03E4AC68 MOV W2, W20
	0x03E4AC6C MOV X3, X31
	0x03E4AC70 BL 0x3E4996C
	0x03E4AC74 LDR V0, [X31 + 0x70]
	0x03E4AC78 ADD X0, X31, 0x0
	0x03E4AC7C ADD X1, X31, 0x70
	0x03E4AC80 MOVZ W2, 0x6C
	0x03E4AC84 STUR D0, [X21 + 0x3C]
	0x03E4AC88 STP W31, W31, [X31 + 0xB4]
	0x03E4AC8C BL 0x3EB1AC0
	0x03E4AC90 ADD X1, X31, 0x0
	0x03E4AC94 MOV X0, X19
	0x03E4AC98 MOV W2, W20
	0x03E4AC9C MOV X3, X31
	0x03E4ACA0 BL 0x3E49ACC
	0x03E4ACA4 MOV X0, X19
	0x03E4ACA8 MOV X1, X31
	0x03E4ACAC ADD W20, W20, 0x1
	0x03E4ACB0 BL 0x3E498D4
	0x03E4ACB4 CMP W20, W0
	0x03E4ACB8 B.LT 0x3E4AC60
	0x03E4ACBC LDP X20, X19, [X31 + 0x100]
	0x03E4ACC0 LDP X30, X21, [X31 + 0xF0]
	0x03E4ACC4 LDR X29, [X31 + 0xE0]
	0x03E4ACC8 ADD X31, X31, 0x110
	0x03E4ACCC RET
	0x03E4ACD0 BL 0x1C16F20
	0x03E4ACD4 ADRP X8, 0xFFFFFFFFFCCA2000
	0x03E4ACD8 ADRP X9, 0xFFFFFFFFFCCA3000
	0x03E4ACDC LDR V0, [X8 + 0xD4]
	0x03E4ACE0 LDR V1, [X9 + 0x930]
	0x03E4ACE4 MOVZ W8, 0x1
	0x03E4ACE8 MOV X1, X31
	0x03E4ACEC STUR V0, [X0 + 0x28]
	0x03E4ACF0 STR D1, [X0 + 0x38]
	0x03E4ACF4 STRB W8, [X0 + 0x40]
	0x03E4ACF8 B 0x3E4A9C0
	0x03E4ACFC LDP S0, S1, [X0 + 0x28]
	0x03E4AD00 LDP S2, S3, [X0 + 0x30]
	0x03E4AD04 RET
	0x03E4AD08 STP D11, D10, [X31 - 0x40]!
	0x03E4AD0C STP D9, D8, [X31 + 0x10]
	0x03E4AD10 STP X30, X21, [X31 + 0x20]
	0x03E4AD14 STP X20, X19, [X31 + 0x30]
	0x03E4AD18 ADRP X21, 0x59E000
	0x03E4AD1C ADRP X20, 0x2A9000
	0x03E4AD20 LDRB W8, [X21 + 0x82E]
	0x03E4AD24 LDR X20, [X20 + 0x598]
	0x03E4AD28 MOV V8.16B, V3.16B
	0x03E4AD2C MOV V9.16B, V2.16B
	0x03E4AD30 MOV V10.16B, V1.16B
	0x03E4AD34 MOV V11.16B, V0.16B
	0x03E4AD38 MOV X19, X0
	0x03E4AD3C TBNZ X8, 0x0, 0x3E4AD54
	0x03E4AD40 ADRP X0, 0x2A9000
	0x03E4AD44 LDR X0, [X0 + 0x598]
	0x03E4AD48 BL 0x1C16CF4
	0x03E4AD4C MOVZ W8, 0x1
	0x03E4AD50 STRB W8, [X21 + 0x82E]
	0x03E4AD54 MOV X0, X19
	0x03E4AD58 MOV X1, X31
	0x03E4AD5C STP S11, S10, [X19 + 0x28]
	0x03E4AD60 STP S9, S8, [X19 + 0x30]
	0x03E4AD64 BL 0x3E4A59C
	0x03E4AD68 LDR X8, [X20]
	0x03E4AD6C MOV X20, X0
	0x03E4AD70 LDR W9, [X8 + 0xE0]
	0x03E4AD74 CBNZ W9, 0x3E4AD80
	0x03E4AD78 MOV X0, X8
	0x03E4AD7C BL 0x1C16DFC
	0x03E4AD80 MOV X0, X20
	0x03E4AD84 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59F000
	006 Move W8, [X21+2081]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2AE000
	014 Move X0, [X0+2424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2081], W8
	018 Move X0, X20
	019 Call VertexHelper.InitializeListIfRequired, X0
	020 Compare X19, 0
	021 JumpIfEqual {79}
	022 Move X0, X19
	023 Move X1, X31
	024 Call Mesh.Clear, X0
	025 Move X1, [X20+16]
	026 Compare X1, 0
	027 JumpIfEqual {79}
	028 Move W8, [X1+24]
	029 Move W9, 0xFDE8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X19
	032 Move X2, X31
	033 Call Mesh.SetVertices, X0, X1
	034 Move X1, [X20+24]
	035 Move X0, X19
	036 Move X2, X31
	037 Call Mesh.SetColors, X0, X1
	038 Move X2, [X20+32]
	039 Move X0, X19
	040 Move W1, W31
	041 Move X3, X31
	042 Call Mesh.SetUVs, X0, X1, X2
	043 Move X2, [X20+40]
	044 Move W1, 1
	045 Move X0, X19
	046 Move X3, X31
	047 Call Mesh.SetUVs, X0, X1, X2
	048 Move X2, [X20+48]
	049 Move W1, 2
	050 Move X0, X19
	051 Move X3, X31
	052 Call Mesh.SetUVs, X0, X1, X2
	053 Move X2, [X20+56]
	054 Move W1, 3
	055 Move X0, X19
	056 Move X3, X31
	057 Call Mesh.SetUVs, X0, X1, X2
	058 Move X1, [X20+64]
	059 Move X0, X19
	060 Move X2, X31
	061 Call Mesh.SetNormals, X0, X1
	062 Move X1, [X20+72]
	063 Move X0, X19
	064 Move X2, X31
	065 Call Mesh.SetTangents, X0, X1
	066 Move X1, [X20+80]
	067 Move X0, X19
	068 Move W2, W31
	069 Move X3, X31
	070 Call Mesh.SetTriangles, X0, X1, X2
	071 Move X0, X19
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X1, X31
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Call Mesh.RecalculateBounds, X0
	078 Return 
	079 Call 0x1C17F20
	080 Move X0, 0x2B2000
	081 Move X0, [X0+1400]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0x322000
	086 Move X0, [X0+1712]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentException..ctor, X0, X1
	092 Move X0, 0x322000
	093 Move X0, [X0+1720]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: System.Void AddVert(UnityEngine.Vector3 position, UnityEngine.Color32 color, UnityEngine.Vector4 uv0, UnityEngine.Vector4 uv1, UnityEngine.Vector4 uv2, UnityEngine.Vector4 uv3, UnityEngine.Vector3 normal, UnityEngine.Vector4 tangent)

Disassembly:
	0x03E4AD88 MOV X2, X31
	0x03E4AD8C BL 0x3C354F8
	0x03E4AD90 TBZ X0, 0x0, 0x3E4ADC4
	0x03E4AD94 MOV X0, X19
	0x03E4AD98 MOV X1, X31
	0x03E4AD9C BL 0x3E4A59C
	0x03E4ADA0 CBZ X0, 0x3E4ADD8
	0x03E4ADA4 LDR X8, [X0]
	0x03E4ADA8 LDP X20, X19, [X31 + 0x30]
	0x03E4ADAC LDP X30, X21, [X31 + 0x20]
	0x03E4ADB0 LDP D9, D8, [X31 + 0x10]
	0x03E4ADB4 LDR X2, [X8 + 0x2F8]
	0x03E4ADB8 LDR X1, [X8 + 0x300]
	0x03E4ADBC LDP D11, D10, [X31], #0x40
	0x03E4ADC0 BR X2
	0x03E4ADC4 LDP X20, X19, [X31 + 0x30]
	0x03E4ADC8 LDP X30, X21, [X31 + 0x20]
	0x03E4ADCC LDP D9, D8, [X31 + 0x10]
	0x03E4ADD0 LDP D11, D10, [X31], #0x40
	0x03E4ADD4 RET
	0x03E4ADD8 BL 0x1C16F20
	0x03E4ADDC LDP S0, S1, [X0 + 0x38]
	0x03E4ADE0 RET
	0x03E4ADE4 STP D9, D8, [X31 - 0x30]!
	0x03E4ADE8 STR X30, [X31 + 0x10]
	0x03E4ADEC STP X20, X19, [X31 + 0x20]
	0x03E4ADF0 ADRP X20, 0x59E000
	0x03E4ADF4 LDRB W8, [X20 + 0x82F]
	0x03E4ADF8 MOV V8.16B, V1.16B
	0x03E4ADFC MOV V9.16B, V0.16B
	0x03E4AE00 MOV X19, X0
	0x03E4AE04 TBNZ X8, 0x0, 0x3E4AE1C
	0x03E4AE08 ADRP X0, 0x2A9000
	0x03E4AE0C LDR X0, [X0 + 0x598]
	0x03E4AE10 BL 0x1C16CF4
	0x03E4AE14 MOVZ W8, 0x1
	0x03E4AE18 STRB W8, [X20 + 0x82F]
	0x03E4AE1C MOVZ W8, 0x44160000
	0x03E4AE20 LDP S2, S3, [X19 + 0x38]
	0x03E4AE24 FMOV S0, W8
	0x03E4AE28 MOVZ W8, 0xC4160000
	0x03E4AE2C FMIN S1, S9, S0
	0x03E4AE30 FMIN S0, S8, S0
	0x03E4AE34 FMOV S4, W8
	0x03E4AE38 ADRP X8, 0xFFFFFFFFFCC9F000
	0x03E4AE3C FMAX S1, S1, S4
	0x03E4AE40 FMAX S0, S0, S4
	0x03E4AE44 LDR V4, [X8 + 0xF20]
	0x03E4AE48 FSUB S2, S2, S1
	0x03E4AE4C FSUB S3, S3, S0
	0x03E4AE50 FMUL S2, S2, S2
	0x03E4AE54 FMUL S3, S3, S3
	0x03E4AE58 FADD S2, S2, S3
	0x03E4AE5C FCMP S2, S4
	0x03E4AE60 B.MI 0x3E4AED4
	0x03E4AE64 MOV X0, X19
	0x03E4AE68 MOV X1, X31
	0x03E4AE6C STP S1, S0, [X19 + 0x38]
	0x03E4AE70 BL 0x3E4A59C
	0x03E4AE74 ADRP X8, 0x2A9000
	0x03E4AE78 LDR X8, [X8 + 0x598]
	0x03E4AE7C MOV X20, X0
	0x03E4AE80 LDR X8, [X8]
	0x03E4AE84 LDR W9, [X8 + 0xE0]
	0x03E4AE88 CBNZ W9, 0x3E4AE94
	0x03E4AE8C MOV X0, X8
	0x03E4AE90 BL 0x1C16DFC
	0x03E4AE94 MOV X0, X20
	0x03E4AE98 MOV X1, X31
	0x03E4AE9C MOV X2, X31
	0x03E4AEA0 BL 0x3C354F8
	0x03E4AEA4 TBZ X0, 0x0, 0x3E4AED4
	0x03E4AEA8 MOV X0, X19
	0x03E4AEAC MOV X1, X31
	0x03E4AEB0 BL 0x3E4A59C
	0x03E4AEB4 CBZ X0, 0x3E4AEE4
	0x03E4AEB8 LDR X8, [X0]
	0x03E4AEBC LDP X20, X19, [X31 + 0x20]
	0x03E4AEC0 LDR X30, [X31 + 0x10]
	0x03E4AEC4 LDR X2, [X8 + 0x2F8]
	0x03E4AEC8 LDR X1, [X8 + 0x300]
	0x03E4AECC LDP D9, D8, [X31], #0x30
	0x03E4AED0 BR X2
	0x03E4AED4 LDP X20, X19, [X31 + 0x20]
	0x03E4AED8 LDR X30, [X31 + 0x10]
	0x03E4AEDC LDP D9, D8, [X31], #0x30
	0x03E4AEE0 RET
	0x03E4AEE4 BL 0x1C16F20
	0x03E4AEE8 LDRB W0, [X0 + 0x40]
	0x03E4AEEC RET
	0x03E4AEF0 STR X30, [X31 - 0x30]!
	0x03E4AEF4 STP X22, X21, [X31 + 0x10]
	0x03E4AEF8 STP X20, X19, [X31 + 0x20]
	0x03E4AEFC ADRP X22, 0x59E000
	0x03E4AF00 ADRP X20, 0x2A9000
	0x03E4AF04 LDRB W8, [X22 + 0x830]
	0x03E4AF08 LDR X20, [X20 + 0x598]
	0x03E4AF0C MOV X19, X0
	0x03E4AF10 AND W21, W1, 0x1
	0x03E4AF14 TBNZ X8, 0x0, 0x3E4AF2C
	0x03E4AF18 ADRP X0, 0x2A9000
	0x03E4AF1C LDR X0, [X0 + 0x598]
	0x03E4AF20 BL 0x1C16CF4
	0x03E4AF24 MOVZ W8, 0x1
	0x03E4AF28 STRB W8, [X22 + 0x830]
	0x03E4AF2C MOV X0, X19
	0x03E4AF30 MOV X1, X31
	0x03E4AF34 STRB W21, [X19 + 0x40]
	0x03E4AF38 BL 0x3E4A59C
	0x03E4AF3C LDR X8, [X20]
	0x03E4AF40 MOV X20, X0
	0x03E4AF44 LDR W9, [X8 + 0xE0]
	0x03E4AF48 CBNZ W9, 0x3E4AF54
	0x03E4AF4C MOV X0, X8
	0x03E4AF50 BL 0x1C16DFC
	0x03E4AF54 MOV X0, X20
	0x03E4AF58 MOV X1, X31
	0x03E4AF5C MOV X2, X31
	0x03E4AF60 BL 0x3C354F8
	0x03E4AF64 TBZ X0, 0x0, 0x3E4AF94
	0x03E4AF68 MOV X0, X19
	0x03E4AF6C MOV X1, X31
	0x03E4AF70 BL 0x3E4A59C
	0x03E4AF74 CBZ X0, 0x3E4AFA4
	0x03E4AF78 LDR X8, [X0]
	0x03E4AF7C LDP X20, X19, [X31 + 0x20]
	0x03E4AF80 LDP X22, X21, [X31 + 0x10]
	0x03E4AF84 LDR X2, [X8 + 0x2F8]
	0x03E4AF88 LDR X1, [X8 + 0x300]
	0x03E4AF8C LDR X30, [X31], #0x30
	0x03E4AF90 BR X2
	0x03E4AF94 LDP X20, X19, [X31 + 0x20]
	0x03E4AF98 LDP X22, X21, [X31 + 0x10]
	0x03E4AF9C LDR X30, [X31], #0x30
	0x03E4AFA0 RET
	0x03E4AFA4 BL 0x1C16F20
	0x03E4AFA8 SUB X31, X31, 0x1D0
	0x03E4AFAC STR D12, [X31 + 0x140]
	0x03E4AFB0 STP D11, D10, [X31 + 0x150]
	0x03E4AFB4 STP D9, D8, [X31 + 0x160]
	0x03E4AFB8 STP X29, X30, [X31 + 0x170]
	0x03E4AFBC STP X28, X27, [X31 + 0x180]
	0x03E4AFC0 STP X26, X25, [X31 + 0x190]
	0x03E4AFC4 STP X24, X23, [X31 + 0x1A0]
	0x03E4AFC8 STP X22, X21, [X31 + 0x1B0]
	0x03E4AFCC STP X20, X19, [X31 + 0x1C0]
	0x03E4AFD0 ADRP X24, 0x59E000
	0x03E4AFD4 LDRB W8, [X24 + 0x831]
	0x03E4AFD8 MOV V8.16B, V1.16B
	0x03E4AFDC MOV V9.16B, V0.16B
	0x03E4AFE0 MOV W19, W4
	0x03E4AFE4 MOV W20, W3
	0x03E4AFE8 MOV X23, X2
	0x03E4AFEC MOV X21, X1
	0x03E4AFF0 MOV X22, X0
	0x03E4AFF4 TBNZ X8, 0x0, 0x3E4B048
	0x03E4AFF8 ADRP X0, 0x321000
	0x03E4AFFC LDR X0, [X0 + 0x6F8]
	0x03E4B000 BL 0x1C16CF4
	0x03E4B004 ADRP X0, 0x320000
	0x03E4B008 LDR X0, [X0 + 0x6E0]
	0x03E4B00C BL 0x1C16CF4
	0x03E4B010 ADRP X0, 0x320000
	0x03E4B014 LDR X0, [X0 + 0x6E8]
	0x03E4B018 BL 0x1C16CF4
	0x03E4B01C ADRP X0, 0x320000
	0x03E4B020 LDR X0, [X0 + 0x700]
	0x03E4B024 BL 0x1C16CF4
	0x03E4B028 ADRP X0, 0x320000
	0x03E4B02C LDR X0, [X0 + 0x6F0]
	0x03E4B030 BL 0x1C16CF4
	0x03E4B034 ADRP X0, 0x320000
	0x03E4B038 LDR X0, [X0 + 0x708]
	0x03E4B03C BL 0x1C16CF4
	0x03E4B040 MOVZ W8, 0x1
	0x03E4B044 STRB W8, [X24 + 0x831]
	0x03E4B048 CBZ X21, 0x3E4B29C
	0x03E4B04C ADRP X8, 0x320000
	0x03E4B050 LDR X8, [X8 + 0x6E0]
	0x03E4B054 LDR W9, [X21 + 0x18]
	0x03E4B058 MOV X0, X21
	0x03E4B05C LDR X1, [X8]
	0x03E4B060 SUB W8, W19, W20
	0x03E4B064 ADD W24, W8, W9
	0x03E4B068 BL 0x30BB470
	0x03E4B06C CMP W0, W24
	0x03E4B070 B.GE 0x3E4B08C
	0x03E4B074 ADRP X8, 0x320000
	0x03E4B078 LDR X8, [X8 + 0x6F0]
	0x03E4B07C MOV X0, X21
	0x03E4B080 MOV W1, W24
	0x03E4B084 LDR X2, [X8]
	0x03E4B088 BL 0x30BB48C
	0x03E4B08C CMP W19, W20
	0x03E4B090 B.LE 0x3E4B270
	0x03E4B094 ADRP X27, 0x320000
	0x03E4B098 LDR X27, [X27 + 0x700]
	0x03E4B09C ADD X8, X31, 0xD0
	0x03E4B0A0 ADD X24, X31, 0xB0
	0x03E4B0A4 UBFM X25, X23, 0x18, 0x3F
	0x03E4B0A8 UBFM X26, X23, 0x18, 0x1F
	0x03E4B0AC AND W23, W23, 0xFFFFFF
	0x03E4B0B0 ADD X28, X8, 0xC
	0x03E4B0B4 ADD X29, X8, 0x2C
	0x03E4B0B8 LDR X2, [X27]
	0x03E4B0BC ADD X8, X31, 0xD0
	0x03E4B0C0 MOV X0, X21
	0x03E4B0C4 MOV W1, W20
	0x03E4B0C8 BL 0x30BB610
	0x03E4B0CC LDUR V0, [X28 + 0xC]
	0x03E4B0D0 LDR V4, [X28]
	0x03E4B0D4 LDP V3, V2, [X29]
	0x03E4B0D8 ADRP X10, 0x320000
	0x03E4B0DC STUR V0, [X31 + 0x5C]
	0x03E4B0E0 LDP V0, V1, [X29 + 0x20]
	0x03E4B0E4 STP V3, V2, [X31 + 0x10]
	0x03E4B0E8 LDP V2, V3, [X31 + 0x10]
	0x03E4B0EC LDP S11, S12, [X31 + 0xD0]
	0x03E4B0F0 STP V1, V4, [X31 + 0x40]
	0x03E4B0F4 STR V0, [X31 + 0x3]
	0x03E4B0F8 LDUR V0, [X31 + 0x5C]
	0x03E4B0FC LDR V4, [X31 + 0x5]
	0x03E4B100 STP V2, V3, [X31 + 0x70]
	0x03E4B104 LDR V10, [X31 + 0xD8]
	0x03E4B108 STUR V0, [X24 + 0xC]
	0x03E4B10C LDP V0, V1, [X31 + 0x30]
	0x03E4B110 LDR W8, [X31 + 0xF8]
	0x03E4B114 STR V0, [X31 + 0x9]
	0x03E4B118 STP V1, V4, [X31 + 0xA0]
	0x03E4B11C LDR W11, [X21 + 0x1C]
	0x03E4B120 LDR X9, [X21 + 0x10]
	0x03E4B124 LDR X10, [X10 + 0x6F8]
	0x03E4B128 ADD W11, W11, 0x1
	0x03E4B12C LDR X10, [X10]
	0x03E4B130 STR W11, [X21 + 0x1C]
	0x03E4B134 CBZ X9, 0x3E4B29C
	0x03E4B138 LDRSW X11, [X21 + 0x18]
	0x03E4B13C LDR W12, [X9 + 0x18]
	0x03E4B140 CMP W11, W12
	0x03E4B144 B.CS 0x3E4B190
	0x03E4B148 MOVZ W12, 0x6C
	0x03E4B14C ADD W10, W11, 0x1
	0x03E4B150 MADD X9, X11, X12, X9
	0x03E4B154 STR W10, [X21 + 0x18]
	0x03E4B158 STP S11, S12, [X9 + 0x20]
	0x03E4B15C STR S10, [X9 + 0x28]
	0x03E4B160 LDUR V0, [X24 + 0xC]
	0x03E4B164 LDR V1, [X31 + 0xB]
	0x03E4B168 STR W8, [X9 + 0x48]
	0x03E4B16C STUR V0, [X9 + 0x38]
	0x03E4B170 STUR V1, [X9 + 0x2C]
	0x03E4B174 LDP V1, V0, [X31 + 0x90]
	0x03E4B178 LDP V3, V2, [X31 + 0x70]
	0x03E4B17C STUR V0, [X9 + 0x7C]
	0x03E4B180 STUR V1, [X9 + 0x6C]
	0x03E4B184 STUR V2, [X9 + 0x5C]
	0x03E4B188 STUR V3, [X9 + 0x4C]
	0x03E4B18C B 0x3E4B1D4
	0x03E4B190 LDR X9, [X10 + 0x20]
	0x03E4B194 LDP V3, V0, [X31 + 0xA0]
	0x03E4B198 LDUR V1, [X24 + 0xC]
	0x03E4B19C ADD X1, X31, 0xD0
	0x03E4B1A0 LDR X9, [X9 + 0xC0]
	0x03E4B1A4 MOV X0, X21
	0x03E4B1A8 LDR X2, [X9 + 0x70]
	0x03E4B1AC STP S11, S12, [X31 + 0xD0]
	0x03E4B1B0 STR S10, [X31 + 0xD8]
	0x03E4B1B4 STUR V1, [X28 + 0xC]
	0x03E4B1B8 STR V0, [X28]
	0x03E4B1BC LDR V0, [X31 + 0x7]
	0x03E4B1C0 LDP V1, V2, [X31 + 0x80]
	0x03E4B1C4 STR W8, [X31 + 0xF8]
	0x03E4B1C8 STP V2, V3, [X29 + 0x20]
	0x03E4B1CC STP V0, V1, [X29]
	0x03E4B1D0 BL 0x30BB9C8
	0x03E4B1D4 LDRB W9, [X22 + 0x40]
	0x03E4B1D8 MOV W8, W25
	0x03E4B1DC CBZ W9, 0x3E4B20C
	0x03E4B1E0 LDR X2, [X27]
	0x03E4B1E4 ADD X8, X31, 0xD0
	0x03E4B1E8 MOV X0, X21
	0x03E4B1EC MOV W1, W20
	0x03E4B1F0 BL 0x30BB610
	0x03E4B1F4 LDRB W8, [X31 + 0xFB]
	0x03E4B1F8 MOVZ W9, 0x8081
	0x03E4B1FC MOVK W9, 0x80800000
	0x03E4B200 MUL W8, W26, W8
	0x03E4B204 UMADDL X8, X8, X9, X31
	0x03E4B208 UBFM X8, X8, 0x27, 0x3F
	0x03E4B20C MOV W9, W23
	0x03E4B210 FADD S1, S12, S8
	0x03E4B214 BFM W9, W8, 0x8, 0x7
	0x03E4B218 ADRP X8, 0x320000
	0x03E4B21C LDR X8, [X8 + 0x708]
	0x03E4B220 STP S1, S10, [X31 + 0xD4]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move V9, V0
	015 Move V7, [X31+252]
	016 Move V0, [X31+248]
	017 Move X21, 0x59F000
	018 Move W8, [X21+2082]
	019 Move V11, V6
	020 Move [X31+16], S0
	021 Move [X31+24], S7
	022 Move V7, [X31+244]
	023 Move V0, [X31+240]
	024 Move V12, V5
	025 Move V13, V4
	026 Move V14, V3
	027 Move [X31+8], S0
	028 Move [X31+16], S7
	029 Move V7, [X31+232]
	030 Move V0, [X31+228]
	031 Move X20, X1
	032 Move V15, V2
	033 Move V8, V1
	034 Move [X31+28], S0
	035 Move [X31+36], S7
	036 Move V0, [X31+224]
	037 Move V7, [X31+220]
	038 Move X19, X0
	039 Move [X31+24], S0
	040 Move V0, [X31+216]
	041 Move [X31+44], S0
	042 Move [X31+52], S7
	043 Move V7, [X31+212]
	044 Move V0, [X31+208]
	045 Move [X31+36], S0
	046 Move [X31+44], S7
	047 Move V7, [X31+204]
	048 Move V0, [X31+200]
	049 Move [X31+60], S0
	050 Move [X31+68], S7
	051 Move V7, [X31+196]
	052 Move V0, [X31+192]
	053 Move [X31+52], S0
	054 Move [X31+60], S7
	055 Move V7, [X31+188]
	056 Move V0, [X31+184]
	057 Move [X31+72], S0
	058 Move [X31+80], S7
	059 Move S10, [X31+176]
	060 Move S0, [X31+180]
	061 Move [X31+68], S0
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {77}
	066 Move X0, 0x322000
	067 Move X0, [X0+1728]
	068 Call 0x1C17CF4
	069 Move X0, 0x304000
	070 Move X0, [X0+4080]
	071 Call 0x1C17CF4
	072 Move X0, 0x2AE000
	073 Move X0, [X0+952]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X21+2082], W8
	077 Move X0, X19
	078 Call VertexHelper.InitializeListIfRequired, X0
	079 Move X0, [X19+16]
	080 Compare X0, 0
	081 JumpIfEqual {347}
	082 Move X21, 0x2AE000
	083 Move X21, [X21+952]
	084 Move W10, [X0+28]
	085 Move X8, [X0+16]
	086 Move X9, [X21]
	087 Add W10, W10, 1
	088 Move [X0+28], W10
	089 Compare X8, 0
	090 JumpIfEqual {347}
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W11, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W11, 12
	095 Add W9, W10, 1
	096 NotImplemented "Instruction MADD not yet implemented."
	097 Move [X0+24], W9
	098 Move [X8+32], S9
	099 Move [X8+40], S8
	100 Move [X8+40], S15
	101 Move X8, [X9+32]
	102 Move V0, V9
	103 Move V1, V8
	104 Move V2, V15
	105 Move X8, [X8+192]
	106 Move X1, [X8+112]
	107 Call List`1<Vector3>.AddWithResize, X0, X1
	108 Move X0, [X19+24]
	109 Compare X0, 0
	110 JumpIfEqual {347}
	111 Move X9, 0x322000
	112 Move X9, [X9+1728]
	113 Move W10, [X0+28]
	114 Move X8, [X0+16]
	115 Move X9, [X9]
	116 Add W10, W10, 1
	117 Move [X0+28], W10
	118 Compare X8, 0
	119 JumpIfEqual {347}
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Move W11, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add W9, W10, 1
	124 Add X8, X8, X10
	125 Move [X0+24], W9
	126 Move [X8+32], W20
	127 Move X8, [X9+32]
	128 And X1, X20, 0
	129 Move X8, [X8+192]
	130 Move X2, [X8+112]
	131 Call List`1<Color32>.AddWithResize, X0, X1
	132 Move X0, [X19+32]
	133 Compare X0, 0
	134 JumpIfEqual {347}
	135 Move X20, 0x304000
	136 Move X20, [X20+4080]
	137 Move W10, [X0+28]
	138 Move X8, [X0+16]
	139 Move X9, [X20]
	140 Add W10, W10, 1
	141 Move [X0+28], W10
	142 Compare X8, 0
	143 JumpIfEqual {347}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W9, W10, 1
	148 Add X8, X8, X10
	149 Move [X0+24], W9
	150 Move [X8+32], S14
	151 Move [X8+40], S13
	152 Move [X8+40], S12
	153 Move [X8+48], S11
	154 Move X8, [X9+32]
	155 Move V0, V14
	156 Move V1, V13
	157 Move V2, V12
	158 Move X8, [X8+192]
	159 Move V3, V11
	160 Move X1, [X8+112]
	161 Call List`1<Vector4>.AddWithResize, X0, X1
	162 Move X0, [X19+40]
	163 Compare X0, 0
	164 JumpIfEqual {347}
	165 Move W10, [X0+28]
	166 Move X8, [X0+16]
	167 Move X9, [X20]
	168 Add W10, W10, 1
	169 Move [X0+28], W10
	170 Compare X8, 0
	171 JumpIfEqual {347}
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Move W11, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move V0, [X31+68]
	176 Add W9, W10, 1
	177 Add X8, X8, X10
	178 Move [X0+24], W9
	179 Move [X8+32], S10
	180 Move [X8+40], S0
	181 Move V1, [X31+72]
	182 Move V0, [X31+76]
	183 Move [X8+40], S1
	184 Move [X8+48], S0
	185 Move X8, [X9+32]
	186 Move S1, [X31+68]
	187 Move S2, [X31+72]
	188 Move V3, [X31+76]
	189 Move V0, V10
	190 Move X8, [X8+192]
	191 Move X1, [X8+112]
	192 Call List`1<Vector4>.AddWithResize, X0, X1
	193 Move X0, [X19+48]
	194 Compare X0, 0
	195 JumpIfEqual {347}
	196 Move W10, [X0+28]
	197 Move X8, [X0+16]
	198 Move X9, [X20]
	199 Add W10, W10, 1
	200 Move [X0+28], W10
	201 Compare X8, 0
	202 JumpIfEqual {347}
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Move W11, [X8+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move V1, [X31+52]
	207 Move V0, [X31+56]
	208 Add W9, W10, 1
	209 Add X8, X8, X10
	210 Move [X0+24], W9
	211 Move [X8+32], S1
	212 Move [X8+40], S0
	213 Move V1, [X31+60]
	214 Move V0, [X31+64]
	215 Move [X8+40], S1
	216 Move [X8+48], S0
	217 Move X8, [X9+32]
	218 Move S0, [X31+52]
	219 Move S1, [X31+56]
	220 Move S2, [X31+60]
	221 Move S3, [X31+64]
	222 Move X8, [X8+192]
	223 Move X1, [X8+112]
	224 Call List`1<Vector4>.AddWithResize, X0, X1
	225 Move X0, [X19+56]
	226 Compare X0, 0
	227 JumpIfEqual {347}
	228 Move W10, [X0+28]
	229 Move X8, [X0+16]
	230 Move X9, [X20]
	231 Add W10, W10, 1
	232 Move [X0+28], W10
	233 Compare X8, 0
	234 JumpIfEqual {347}
	235 NotImplemented "Instruction LDRSW not yet implemented."
	236 Move W11, [X8+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move V1, [X31+36]
	239 Move V0, [X31+40]
	240 Add W9, W10, 1
	241 Add X8, X8, X10
	242 Move [X0+24], W9
	243 Move [X8+32], S1
	244 Move [X8+40], S0
	245 Move V1, [X31+44]
	246 Move V0, [X31+48]
	247 Move [X8+40], S1
	248 Move [X8+48], S0
	249 Move X8, [X9+32]
	250 Move S0, [X31+36]
	251 Move S1, [X31+40]
	252 Move S2, [X31+44]
	253 Move S3, [X31+48]
	254 Move X8, [X8+192]
	255 Move X1, [X8+112]
	256 Call List`1<Vector4>.AddWithResize, X0, X1
	257 Move X0, [X19+64]
	258 Compare X0, 0
	259 JumpIfEqual {347}
	260 Move W10, [X0+28]
	261 Move X8, [X0+16]
	262 Move X9, [X21]
	263 Add W10, W10, 1
	264 Move [X0+28], W10
	265 Compare X8, 0
	266 JumpIfEqual {347}
	267 NotImplemented "Instruction LDRSW not yet implemented."
	268 Move W11, [X8+24]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move V1, [X31+24]
	271 Move V0, [X31+28]
	272 Move W11, 12
	273 Add W9, W10, 1
	274 NotImplemented "Instruction MADD not yet implemented."
	275 Move [X0+24], W9
	276 Move [X8+32], S1
	277 Move [X8+40], S0
	278 Move V0, [X31+32]
	279 Move [X8+40], S0
	280 Move X8, [X9+32]
	281 Move S0, [X31+24]
	282 Move S1, [X31+28]
	283 Move V2, [X31+32]
	284 Move X8, [X8+192]
	285 Move X1, [X8+112]
	286 Call List`1<Vector3>.AddWithResize, X0, X1
	287 Move X0, [X19+72]
	288 Compare X0, 0
	289 JumpIfEqual {347}
	290 Move W10, [X0+28]
	291 Move X8, [X0+16]
	292 Move X9, [X20]
	293 Add W10, W10, 1
	294 Move [X0+28], W10
	295 Compare X8, 0
	296 JumpIfEqual {347}
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Move W11, [X8+24]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move V1, [X31+8]
	301 Move V0, [X31+12]
	302 Add W9, W10, 1
	303 Add X8, X8, X10
	304 Move [X0+24], W9
	305 Move [X8+32], S1
	306 Move [X8+40], S0
	307 Move V1, [X31+16]
	308 Move V0, [X31+20]
	309 Move X20, [X31+160]
	310 Move X19, [X31+168]
	311 Move X30, [X31+144]
	312 Move X21, [X31+152]
	313 Move D9, [X31+128]
	314 Move D8, [X31+136]
	315 Move D11, [X31+112]
	316 Move D10, [X31+120]
	317 Move D13, [X31+96]
	318 Move D12, [X31+104]
	319 Move D15, [X31+80]
	320 Move D14, [X31+88]
	321 Move [X8+40], S1
	322 Move [X8+48], S0
	323 Add X31, X31, 176
	324 Return 
	325 Move X8, [X9+32]
	326 Move S0, [X31+8]
	327 Move S1, [X31+12]
	328 Move S2, [X31+16]
	329 Move S3, [X31+20]
	330 Move X20, [X31+160]
	331 Move X19, [X31+168]
	332 Move X8, [X8+192]
	333 Move X30, [X31+144]
	334 Move X21, [X31+152]
	335 Move D9, [X31+128]
	336 Move D8, [X31+136]
	337 Move D11, [X31+112]
	338 Move D10, [X31+120]
	339 Move X1, [X8+112]
	340 Move D13, [X31+96]
	341 Move D12, [X31+104]
	342 Move D15, [X31+80]
	343 Move D14, [X31+88]
	344 Add X31, X31, 176
	345 Call List`1<Vector4>.AddWithResize, X0, X1
	346 Return 
	347 Call 0x1C17F20

Method: System.Void AddVert(UnityEngine.Vector3 position, UnityEngine.Color32 color, UnityEngine.Vector4 uv0, UnityEngine.Vector4 uv1, UnityEngine.Vector3 normal, UnityEngine.Vector4 tangent)

Disassembly:
	0x03E4B224 LDP V1, V2, [X31 + 0x40]
	0x03E4B228 LDUR V3, [X31 + 0x5C]
	0x03E4B22C FADD S0, S11, S9
	0x03E4B230 LDR X3, [X8]
	0x03E4B234 STR S0, [X31 + 0xD0]
	0x03E4B238 STUR V3, [X28 + 0xC]
	0x03E4B23C STR V2, [X28]
	0x03E4B240 LDR V2, [X31 + 0x1]
	0x03E4B244 LDP V3, V0, [X31 + 0x20]
	0x03E4B248 ADD X2, X31, 0xD0
	0x03E4B24C MOV X0, X21
	0x03E4B250 MOV W1, W20
	0x03E4B254 STR W9, [X31 + 0xF8]
	0x03E4B258 STP V0, V1, [X29 + 0x20]
	0x03E4B25C STP V2, V3, [X29]
	0x03E4B260 BL 0x30BB674
	0x03E4B264 ADD W20, W20, 0x1
	0x03E4B268 CMP W19, W20
	0x03E4B26C B.NE 0x3E4B0B8
	0x03E4B270 LDP X20, X19, [X31 + 0x1C0]
	0x03E4B274 LDP X22, X21, [X31 + 0x1B0]
	0x03E4B278 LDP X24, X23, [X31 + 0x1A0]
	0x03E4B27C LDP X26, X25, [X31 + 0x190]
	0x03E4B280 LDP X28, X27, [X31 + 0x180]
	0x03E4B284 LDP X29, X30, [X31 + 0x170]
	0x03E4B288 LDP D9, D8, [X31 + 0x160]
	0x03E4B28C LDP D11, D10, [X31 + 0x150]
	0x03E4B290 LDR V12, [X31 + 0x140]
	0x03E4B294 ADD X31, X31, 0x1D0
	0x03E4B298 RET
	0x03E4B29C BL 0x1C16F20
	0x03E4B2A0 AND X2, X2, 0x0
	0x03E4B2A4 B 0x3E4AFA8
	0x03E4B2A8 STP X30, X21, [X31 - 0x20]!
	0x03E4B2AC STP X20, X19, [X31 + 0x10]
	0x03E4B2B0 ADRP X21, 0x59D000
	0x03E4B2B4 LDRB W8, [X21 + 0x832]
	0x03E4B2B8 MOV X19, X1
	0x03E4B2BC MOV X20, X0
	0x03E4B2C0 TBNZ X8, 0x0, 0x3E4B2FC
	0x03E4B2C4 ADRP X0, 0x320000
	0x03E4B2C8 LDR X0, [X0 + 0x6C8]
	0x03E4B2CC BL 0x1C16CF4
	0x03E4B2D0 ADRP X0, 0x320000
	0x03E4B2D4 LDR X0, [X0 + 0x6D0]
	0x03E4B2D8 BL 0x1C16CF4
	0x03E4B2DC ADRP X0, 0x320000
	0x03E4B2E0 LDR X0, [X0 + 0x6D8]
	0x03E4B2E4 BL 0x1C16CF4
	0x03E4B2E8 ADRP X0, 0x320000
	0x03E4B2EC LDR X0, [X0 + 0x6E8]
	0x03E4B2F0 BL 0x1C16CF4
	0x03E4B2F4 MOVZ W8, 0x1
	0x03E4B2F8 STRB W8, [X21 + 0x832]
	0x03E4B2FC LDR X8, [X20]
	0x03E4B300 MOV X0, X20
	0x03E4B304 LDP X9, X1, [X8 + 0x1C8]
	0x03E4B308 BLR X9
	0x03E4B30C TBZ X0, 0x0, 0x3E4B3B8
	0x03E4B310 ADRP X8, 0x320000
	0x03E4B314 LDR X8, [X8 + 0x6D8]
	0x03E4B318 ADRP X21, 0x320000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X30
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X21, 0x58E000
	015 Move V21, [X31+268]
	016 Move V14, [X31+264]
	017 Move V13, [X31+260]
	018 Move V12, [X31+256]
	019 Move S10, [X31+244]
	020 Move S11, [X31+248]
	021 Move S20, [X31+236]
	022 Move S9, [X31+240]
	023 Move S8, [X31+228]
	024 Move S19, [X31+232]
	025 Move W8, [X21+3674]
	026 Move V15, [X31+224]
	027 Move X19, X1
	028 Move X20, X0
	029 Compare W8, 0
	030 JumpIfNotEqual {56}
	031 Move X0, 0x2B0000
	032 Move X0, [X0+2464]
	033 Move [X31+120], S5
	034 Move [X31+128], S6
	035 Move [X31+112], S3
	036 Move [X31+120], S4
	037 Move [X31+104], S1
	038 Move [X31+112], S2
	039 Move [X31+96], S19
	040 Move [X31+104], S0
	041 Move [X31+88], S21
	042 Move [X31+96], S20
	043 Call 0x1C17CF4
	044 Move S21, [X31+88]
	045 Move S20, [X31+92]
	046 Move S19, [X31+96]
	047 Move S0, [X31+100]
	048 Move S1, [X31+104]
	049 Move S2, [X31+108]
	050 Move S3, [X31+112]
	051 Move S4, [X31+116]
	052 Move S5, [X31+120]
	053 Move S6, [X31+124]
	054 Move W8, 1
	055 Move [X21+3674], W8
	056 Move X8, 0x2B0000
	057 Move X8, [X8+2464]
	058 And X1, X19, 0
	059 Move X0, X20
	060 Move X8, [X8]
	061 Move X8, [X8+184]
	062 Move S18, [X8]
	063 Move S17, [X8+4]
	064 Move S16, [X8+8]
	065 Move S7, [X8+12]
	066 Move [X31+72], S14
	067 Move [X31+80], S21
	068 Move [X31+64], S12
	069 Move [X31+72], S13
	070 Move [X31+52], S10
	071 Move [X31+60], S11
	072 Move [X31+44], S7
	073 Move [X31+52], S9
	074 Move [X31+36], S17
	075 Move [X31+44], S16
	076 Move [X31+28], S7
	077 Move [X31+36], S18
	078 Move [X31+20], S17
	079 Move [X31+28], S16
	080 Move [X31+12], S20
	081 Move [X31+20], S18
	082 Move [X31+4], S8
	083 Move [X31+12], S19
	084 Move [X31], S15
	085 Call VertexHelper.AddVert, X0, X1, X2, X3, X4, X5, X6, X7, X8
	086 Move X20, [X31+208]
	087 Move X19, [X31+216]
	088 Move X30, [X31+192]
	089 Move X21, [X31+200]
	090 Move D9, [X31+176]
	091 Move D8, [X31+184]
	092 Move D11, [X31+160]
	093 Move D10, [X31+168]
	094 Move D13, [X31+144]
	095 Move D12, [X31+152]
	096 Move D15, [X31+128]
	097 Move D14, [X31+136]
	098 Add X31, X31, 224
	099 Return 

Method: System.Void AddVert(UnityEngine.Vector3 position, UnityEngine.Color32 color, UnityEngine.Vector4 uv0)

Disassembly:
	0x03E3AA54 B.NE 0x3E3AA7C
	0x03E3AA58 MOV X0, X20
	0x03E3AA5C BL 0x3EB1AD0
	0x03E3AA60 LDR X21, [X0]
	0x03E3AA64 BL 0x3EB1AE0
	0x03E3AA68 LDR X1, [X22]
	0x03E3AA6C ADD X0, X31, 0x20
	0x03E3AA70 BL 0x2BC3C60
	0x03E3AA74 CBZ X21, 0x3E3A9D8
	0x03E3AA78 B 0x3E3ABA4
	0x03E3AA7C MOV X21, X31
	0x03E3AA80 B 0x3E3AA88
	0x03E3AA84 MOV X20, X0
	0x03E3AA88 LDR X1, [X22]
	0x03E3AA8C ADD X0, X31, 0x20
	0x03E3AA90 BL 0x2BC3C60
	0x03E3AA94 CBZ X21, 0x3E3ABD0
	0x03E3AA98 MOV X0, X21
	0x03E3AA9C BL 0x1C16F18
	0x03E3AAA0 B 0x3E3AAA4
	0x03E3AAA4 MOV X20, X0
	0x03E3AAA8 CMP W1, 0x1
	0x03E3AAAC B.NE 0x3E3AADC
	0x03E3AAB0 MOV X0, X20
	0x03E3AAB4 BL 0x3EB1AD0
	0x03E3AAB8 LDR X21, [X0]
	0x03E3AABC BL 0x3EB1AE0
	0x03E3AAC0 ADRP X8, 0x331000
	0x03E3AAC4 LDR X8, [X8 + 0x2D8]
	0x03E3AAC8 ADD X0, X31, 0x40
	0x03E3AACC LDR X1, [X8]
	0x03E3AAD0 BL 0x2BC3C60
	0x03E3AAD4 CBZ X21, 0x3E3A840
	0x03E3AAD8 B 0x3E3ABA4
	0x03E3AADC MOV X21, X31
	0x03E3AAE0 B 0x3E3AAE8
	0x03E3AAE4 MOV X20, X0
	0x03E3AAE8 ADRP X8, 0x331000
	0x03E3AAEC LDR X8, [X8 + 0x2D8]
	0x03E3AAF0 LDR X1, [X8]
	0x03E3AAF4 ADD X0, X31, 0x40
	0x03E3AAF8 BL 0x2BC3C60
	0x03E3AAFC CBZ X21, 0x3E3ABD0
	0x03E3AB00 MOV X0, X21
	0x03E3AB04 BL 0x1C16F18
	0x03E3AB08 B 0x3E3AB18
	0x03E3AB0C B 0x3E3AB18
	0x03E3AB10 B 0x3E3AB18
	0x03E3AB14 B 0x3E3AB70
	0x03E3AB18 MOV X20, X0
	0x03E3AB1C CMP W1, 0x1
	0x03E3AB20 B.NE 0x3E3AB48
	0x03E3AB24 MOV X0, X20
	0x03E3AB28 BL 0x3EB1AD0
	0x03E3AB2C LDR X21, [X0]
	0x03E3AB30 BL 0x3EB1AE0
	0x03E3AB34 LDR X1, [X22]
	0x03E3AB38 ADD X0, X31, 0x20
	0x03E3AB3C BL 0x2BC3C60
	0x03E3AB40 CBZ X21, 0x3E3A5D0
	0x03E3AB44 B 0x3E3ABA4
	0x03E3AB48 MOV X21, X31
	0x03E3AB4C B 0x3E3AB54
	0x03E3AB50 MOV X20, X0
	0x03E3AB54 LDR X1, [X22]
	0x03E3AB58 ADD X0, X31, 0x20
	0x03E3AB5C BL 0x2BC3C60
	0x03E3AB60 CBZ X21, 0x3E3ABD0
	0x03E3AB64 MOV X0, X21
	0x03E3AB68 BL 0x1C16F18
	0x03E3AB6C B 0x3E3AB70
	0x03E3AB70 MOV X20, X0
	0x03E3AB74 CMP W1, 0x1
	0x03E3AB78 B.NE 0x3E3ABAC
	0x03E3AB7C MOV X0, X20
	0x03E3AB80 BL 0x3EB1AD0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move X21, 0x5AF000
	016 Move W8, [X21+2083]
	017 Move V11, V3
	018 Move X20, X1
	019 Move V12, V2
	020 Move V13, V1
	021 Move V14, V0
	022 Move X19, X0
	023 Move [X31+136], S5
	024 Move [X31+144], S6
	025 Move [X31+60], S4
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x320000
	031 Move X0, [X0+416]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2083], W8
	035 Move X22, 0x59F000
	036 Move X21, 0x320000
	037 Move W8, [X22+3674]
	038 Move X21, [X21+416]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x2C1000
	042 Move X0, [X0+2464]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X22+3674], W8
	046 Move X8, 0x2C1000
	047 Move X8, [X8+2464]
	048 Move X0, [X21]
	049 Move X8, [X8]
	050 Move W9, [X0+224]
	051 Move X8, [X8+184]
	052 Move S15, [X8]
	053 Move S8, [X8+4]
	054 Move S9, [X8+8]
	055 Move S10, [X8+12]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move V4, [X31+60]
	062 Move S5, [X31+136]
	063 Move S6, [X31+140]
	064 And X1, X20, 0
	065 Move V0, [X8+24]
	066 Move V1, [X8]
	067 Move V2, [X8+12]
	068 Move X9, [X8+16]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move [X31+32], S1
	071 Move [X31+44], S2
	072 Move [X31+24], S0
	073 Move X0, X19
	074 Move V0, V14
	075 Move V1, V13
	076 Move V2, V12
	077 Move V3, V11
	078 Move [X31+36], X10
	079 Move [X31+16], X9
	080 Move [X31+8], S9
	081 Move [X31+16], S10
	082 Move [X31], S15
	083 Move [X31+8], S8
	084 Call VertexHelper.AddVert, X0, X1, X2, X3, X4, X5, X6
	085 Move X20, [X31+160]
	086 Move X19, [X31+168]
	087 Move X22, [X31+144]
	088 Move X21, [X31+152]
	089 Move X30, [X31+128]
	090 Move D9, [X31+112]
	091 Move D8, [X31+120]
	092 Move D11, [X31+96]
	093 Move D10, [X31+104]
	094 Move D13, [X31+80]
	095 Move D12, [X31+88]
	096 Move D15, [X31+64]
	097 Move D14, [X31+72]
	098 Add X31, X31, 176
	099 Return 

Method: System.Void AddVert(UnityEngine.UIVertex v)

Disassembly:
	0x03E4B31C LDR X0, [X8]
	0x03E4B320 LDR W8, [X0 + 0xE0]
	0x03E4B324 LDR X21, [X21 + 0x6C8]
	0x03E4B328 CBNZ W8, 0x3E4B330
	0x03E4B32C BL 0x1C16DFC
	0x03E4B330 LDR X0, [X21]
	0x03E4B334 BL 0x28F9D60
	0x03E4B338 CBZ X19, 0x3E4B3C4
	0x03E4B33C MOV X21, X0
	0x03E4B340 MOV X0, X19
	0x03E4B344 MOV X1, X21
	0x03E4B348 MOV X2, X31
	0x03E4B34C BL 0x3E4A4AC
	0x03E4B350 LDP S0, S1, [X20 + 0x28]
	0x03E4B354 LDP S2, S3, [X20 + 0x30]
	0x03E4B358 MOV X0, X31
	0x03E4B35C BL 0x1E43664
	0x03E4B360 CBZ X21, 0x3E4B3C4
	0x03E4B364 LDR W4, [X21 + 0x18]
	0x03E4B368 LDP S0, S1, [X20 + 0x38]
	0x03E4B36C AND X2, X0, 0x0
	0x03E4B370 MOV X0, X20
	0x03E4B374 MOV X1, X21
	0x03E4B378 MOV W3, W31
	0x03E4B37C BL 0x3E4AFA8
	0x03E4B380 MOV X0, X19
	0x03E4B384 MOV X1, X31
	0x03E4B388 BL 0x3E39938
	0x03E4B38C MOV X0, X19
	0x03E4B390 MOV X1, X21
	0x03E4B394 MOV X2, X31
	0x03E4B398 BL 0x3E4A45C
	0x03E4B39C ADRP X8, 0x320000
	0x03E4B3A0 LDR X8, [X8 + 0x6D0]
	0x03E4B3A4 LDP X20, X19, [X31 + 0x10]
	0x03E4B3A8 MOV X0, X21
	0x03E4B3AC LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 Move W8, [X1+40]
	004 Move S0, [X1]
	005 Move S1, [X1+4]
	006 Move V2, [X1+8]
	007 Move S3, [X1+44]
	008 Move S4, [X1+48]
	009 Move S5, [X1+52]
	010 Move S6, [X1+56]
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move V7, [X1+68]
	013 Move X10, [X1+72]
	014 Move V16, [X1+80]
	015 NotImplemented "Instruction LDUR not yet implemented."
	016 Move V17, [X1+92]
	017 Move X12, [X1+96]
	018 Move V18, [X1+104]
	019 NotImplemented "Instruction LDUR not yet implemented."
	020 Move S19, [X1+20]
	021 Move S20, [X1+24]
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move V21, [X1+36]
	024 Move X1, X8
	025 Move [X31+64], S20
	026 Move [X31+68], X14
	027 Move [X31+76], S21
	028 Move [X31+56], S19
	029 Move [X31+48], X13
	030 Move [X31+44], S18
	031 Move [X31+36], X12
	032 Move [X31+32], S17
	033 Move [X31+24], X11
	034 Move [X31+20], S16
	035 Move [X31+12], X10
	036 Move [X31+8], S7
	037 Move [X31], X9
	038 Call VertexHelper.AddVert, X0, X1, X2, X3, X4, X5, X6, X7, X8
	039 Move X30, [X31+80]
	040 Add X31, X31, 96
	041 Return 

Method: System.Void AddTriangle(System.Int32 idx0, System.Int32 idx1, System.Int32 idx2)

Disassembly:
	0x03E3AB84 LDR X21, [X0]
	0x03E3AB88 BL 0x3EB1AE0
	0x03E3AB8C ADRP X8, 0x331000
	0x03E3AB90 LDR X8, [X8 + 0x2D8]
	0x03E3AB94 ADD X0, X31, 0x40
	0x03E3AB98 LDR X1, [X8]
	0x03E3AB9C BL 0x2BC3C60
	0x03E3ABA0 CBZ X21, 0x3E3A78C
	0x03E3ABA4 MOV X0, X21
	0x03E3ABA8 BL 0x1C16F18
	0x03E3ABAC MOV X21, X31
	0x03E3ABB0 B 0x3E3ABB8
	0x03E3ABB4 MOV X20, X0
	0x03E3ABB8 ADRP X8, 0x331000
	0x03E3ABBC LDR X8, [X8 + 0x2D8]
	0x03E3ABC0 LDR X1, [X8]
	0x03E3ABC4 ADD X0, X31, 0x40
	0x03E3ABC8 BL 0x2BC3C60
	0x03E3ABCC CBNZ X21, 0x3E3ABD8
	0x03E3ABD0 MOV X0, X20
	0x03E3ABD4 BL 0x1D2C690
	0x03E3ABD8 MOV X0, X21
	0x03E3ABDC BL 0x1C16F18
	0x03E3ABE0 BL 0x1990590
	0x03E3ABE4 SUB X31, X31, 0xA0
	0x03E3ABE8 STP X30, X27, [X31 + 0x50]
	0x03E3ABEC STP X26, X25, [X31 + 0x60]
	0x03E3ABF0 STP X24, X23, [X31 + 0x70]
	0x03E3ABF4 STP X22, X21, [X31 + 0x80]
	0x03E3ABF8 STP X20, X19, [X31 + 0x90]
	0x03E3ABFC ADRP X20, 0x5AE000
	0x03E3AC00 LDRB W8, [X20 + 0x78F]
	0x03E3AC04 MOV X19, X0
	0x03E3AC08 TBNZ X8, 0x0, 0x3E3AC80
	0x03E3AC0C ADRP X0, 0x331000
	0x03E3AC10 LDR X0, [X0 + 0x2D8]
	0x03E3AC14 BL 0x1C16CF4
	0x03E3AC18 ADRP X0, 0x331000
	0x03E3AC1C LDR X0, [X0 + 0x2E0]
	0x03E3AC20 BL 0x1C16CF4
	0x03E3AC24 ADRP X0, 0x331000
	0x03E3AC28 LDR X0, [X0 + 0x2E8]
	0x03E3AC2C BL 0x1C16CF4
	0x03E3AC30 ADRP X0, 0x331000
	0x03E3AC34 LDR X0, [X0 + 0x2F0]
	0x03E3AC38 BL 0x1C16CF4
	0x03E3AC3C ADRP X0, 0x331000
	0x03E3AC40 LDR X0, [X0 + 0x2F8]
	0x03E3AC44 BL 0x1C16CF4
	0x03E3AC48 ADRP X0, 0x331000
	0x03E3AC4C LDR X0, [X0 + 0x300]
	0x03E3AC50 BL 0x1C16CF4
	0x03E3AC54 ADRP X0, 0x331000
	0x03E3AC58 LDR X0, [X0 + 0x308]
	0x03E3AC5C BL 0x1C16CF4
	0x03E3AC60 ADRP X0, 0x331000
	0x03E3AC64 LDR X0, [X0 + 0x310]
	0x03E3AC68 BL 0x1C16CF4
	0x03E3AC6C ADRP X0, 0x331000
	0x03E3AC70 LDR X0, [X0 + 0x260]
	0x03E3AC74 BL 0x1C16CF4
	0x03E3AC78 MOVZ W8, 0x1
	0x03E3AC7C STRB W8, [X20 + 0x78F]
	0x03E3AC80 MOV X0, X19
	0x03E3AC84 STP X31, X31, [X31 + 0x30]
	0x03E3AC88 STR X31, [X31 + 0x40]
	0x03E3AC8C STP X31, X31, [X31 + 0x18]
	0x03E3AC90 STR X31, [X31 + 0x28]
	0x03E3AC94 BL 0x3E39D6C
	0x03E3AC98 CBZ X0, 0x3E3ADE8
	0x03E3AC9C LDR X0, [X19 + 0x38]
	0x03E3ACA0 CBZ X0, 0x3E3AE0C
	0x03E3ACA4 ADRP X8, 0x331000
	0x03E3ACA8 LDR X8, [X8 + 0x308]
	0x03E3ACAC ADRP X21, 0x331000
	0x03E3ACB0 ADRP X25, 0x331000
	0x03E3ACB4 ADRP X24, 0x331000
	0x03E3ACB8 LDR X21, [X21 + 0x2F0]
	0x03E3ACBC LDR X25, [X25 + 0x260]
	0x03E3ACC0 LDR X24, [X24 + 0x310]
	0x03E3ACC4 LDR X1, [X8]
	0x03E3ACC8 ADRP X23, 0x331000
	0x03E3ACCC ADRP X22, 0x331000
	0x03E3ACD0 ADRP X26, 0x331000
	0x03E3ACD4 LDR X23, [X23 + 0x2E8]
	0x03E3ACD8 LDR X22, [X22 + 0x2E0]
	0x03E3ACDC LDR X26, [X26 + 0x2D8]
	0x03E3ACE0 ADD X8, X31, 0x0
	0x03E3ACE4 BL 0x2DBE924
	0x03E3ACE8 LDR V0, [X31]
	0x03E3ACEC LDR X8, [X31 + 0x10]
	0x03E3ACF0 STR V0, [X31 + 0x3]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x5AF000
	008 Move W8, [X23+2084]
	009 Move W19, W3
	010 Move W20, W2
	011 Move W22, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2BB000
	018 Move X0, [X0+3600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2084], W8
	022 Move X0, X21
	023 Call VertexHelper.InitializeListIfRequired, X0
	024 Move X0, [X21+80]
	025 Compare X0, 0
	026 JumpIfEqual {106}
	027 Move X23, 0x2BB000
	028 Move X23, [X23+3600]
	029 Move W10, [X0+28]
	030 Move X8, [X0+16]
	031 Move X9, [X23]
	032 Add W10, W10, 1
	033 Move [X0+28], W10
	034 Compare X8, 0
	035 JumpIfEqual {106}
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Move W11, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add W9, W10, 1
	040 Add X8, X8, X10
	041 Move [X0+24], W9
	042 Move [X8+32], W22
	043 Move X8, [X9+32]
	044 Move W1, W22
	045 Move X8, [X8+192]
	046 Move X2, [X8+112]
	047 Call List`1<Int32>.AddWithResize, X0, X1
	048 Move X0, [X21+80]
	049 Compare X0, 0
	050 JumpIfEqual {106}
	051 Move W10, [X0+28]
	052 Move X8, [X0+16]
	053 Move X9, [X23]
	054 Add W10, W10, 1
	055 Move [X0+28], W10
	056 Compare X8, 0
	057 JumpIfEqual {106}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W11, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W9, W10, 1
	062 Add X8, X8, X10
	063 Move [X0+24], W9
	064 Move [X8+32], W20
	065 Move X8, [X9+32]
	066 Move W1, W20
	067 Move X8, [X8+192]
	068 Move X2, [X8+112]
	069 Call List`1<Int32>.AddWithResize, X0, X1
	070 Move X0, [X21+80]
	071 Compare X0, 0
	072 JumpIfEqual {106}
	073 Move W10, [X0+28]
	074 Move X8, [X0+16]
	075 Move X9, [X23]
	076 Add W10, W10, 1
	077 Move [X0+28], W10
	078 Compare X8, 0
	079 JumpIfEqual {106}
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Move W11, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add W9, W10, 1
	084 Add X8, X8, X10
	085 Move [X0+24], W9
	086 Move [X8+32], W19
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Move X23, [X31+56]
	093 Return 
	094 Move X8, [X9+32]
	095 Move W1, W19
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X8, [X8+192]
	101 Move X2, [X8+112]
	102 Move X30, [X31+48]
	103 Move X23, [X31+56]
	104 Call List`1<Int32>.AddWithResize, X0, X1
	105 Return 
	106 Call 0x1C17F20

Method: System.Void AddUIVertexQuad(UnityEngine.UIVertex[] verts)

Disassembly:
	0x03E474E4 BL 0x1C16CF4
	0x03E474E8 ADRP X0, 0x324000
	0x03E474EC LDR X0, [X0 + 0x540]
	0x03E474F0 BL 0x1C16CF4
	0x03E474F4 ADRP X0, 0x324000
	0x03E474F8 LDR X0, [X0 + 0x528]
	0x03E474FC BL 0x1C16CF4
	0x03E47500 MOVZ W8, 0x1
	0x03E47504 STRB W8, [X20 + 0x80A]
	0x03E47508 LDR X0, [X22]
	0x03E4750C LDR X19, [X19 + 0x28]
	0x03E47510 LDR W8, [X0 + 0xE0]
	0x03E47514 CBNZ W8, 0x3E47520
	0x03E47518 BL 0x1C16DFC
	0x03E4751C LDR X0, [X22]
	0x03E47520 LDR X8, [X0 + 0xB8]
	0x03E47524 LDR X20, [X8 + 0x8]
	0x03E47528 CBNZ X20, 0x3E4757C
	0x03E4752C LDR W8, [X0 + 0xE0]
	0x03E47530 CBNZ W8, 0x3E4753C
	0x03E47534 BL 0x1C16DFC
	0x03E47538 LDR X0, [X22]
	0x03E4753C ADRP X9, 0x324000
	0x03E47540 LDR X8, [X0 + 0xB8]
	0x03E47544 LDR X9, [X9 + 0x538]
	0x03E47548 LDR X21, [X8]
	0x03E4754C LDR X0, [X9]
	0x03E47550 BL 0x1C16F10
	0x03E47554 ADRP X8, 0x324000
	0x03E47558 LDR X8, [X8 + 0x540]
	0x03E4755C MOV X1, X21
	0x03E47560 MOV X3, X31
	0x03E47564 MOV X20, X0
	0x03E47568 LDR X2, [X8]
	0x03E4756C BL 0x24AD1FC
	0x03E47570 LDR X8, [X22]
	0x03E47574 LDR X8, [X8 + 0xB8]
	0x03E47578 STR X20, [X8 + 0x8]
	0x03E4757C CBZ X19, 0x3E475D4
	0x03E47580 ADRP X8, 0x324000
	0x03E47584 LDR X8, [X8 + 0x530]
	0x03E47588 ADRP X21, 0x2AC000
	0x03E4758C MOV X0, X19
	0x03E47590 MOV X1, X20
	0x03E47594 LDR X2, [X8]
	0x03E47598 LDR X21, [X21 + 0x598]
	0x03E4759C BL 0x301C5F0
	0x03E475A0 LDR X8, [X21]
	0x03E475A4 MOV X19, X0
	0x03E475A8 LDR W9, [X8 + 0xE0]
	0x03E475AC CBNZ W9, 0x3E475B8
	0x03E475B0 MOV X0, X8
	0x03E475B4 BL 0x1C16DFC
	0x03E475B8 MOV X0, X19
	0x03E475BC LDP X20, X19, [X31 + 0x20]
	0x03E475C0 LDP X22, X21, [X31 + 0x10]
	0x03E475C4 MOV X1, X31
	0x03E475C8 MOV X2, X31
	0x03E475CC LDR X30, [X31], #0x30
	0x03E475D0 B 0x3C354F8
	0x03E475D4 BL 0x1C16F20
	0x03E475D8 MOVZ W1, 0x1
	0x03E475DC B 0x3E4691C
	0x03E475E0 STP X30, X19, [X31 - 0x10]!
	0x03E475E4 LDR X8, [X0]
	0x03E475E8 MOV X19, X0
	0x03E475EC LDP X9, X1, [X8 + 0x1C8]
	0x03E475F0 BLR X9

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X21, 0x5A2000
	009 Move W8, [X21+2077]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2B1000
	017 Move X0, [X0+2424]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2077], W8
	021 Move X8, [X19+16]
	022 Compare X8, 0
	023 JumpIfEqual {79}
	024 Move W21, [X8+24]
	025 Compare X20, 0
	026 JumpIfEqual {82}
	027 Move X22, X31
	028 Add X23, X20, 52
	029 Move W8, [X20+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move S0, [X23-20]
	032 Move S1, [X23-16]
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Move W1, [X23+20]
	035 Move S3, [X23+24]
	036 Move S4, [X23+28]
	037 Move S5, [X23+32]
	038 Move S6, [X23+36]
	039 Move V7, [X23+40]
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move V16, [X23+52]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move S17, [X23]
	044 Move S18, [X23+4]
	045 Move X10, [X23+8]
	046 Move V19, [X23+16]
	047 Move X0, X19
	048 Move [X31+32], S18
	049 Move [X31+36], X10
	050 Move [X31+44], S19
	051 Move [X31+24], S17
	052 Move [X31+16], X9
	053 Move [X31+12], S16
	054 Move [X31+4], X8
	055 Move [X31], S7
	056 Call VertexHelper.AddVert, X0, X1, X2, X3, X4, X5, X6
	057 Add X22, X22, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X23, X23, 108
	060 Add W20, W21, 2
	061 Add W2, W21, 1
	062 Move X0, X19
	063 Move W1, W21
	064 Move W3, W20
	065 Call VertexHelper.AddTriangle, X0, X1, X2, X3
	066 Add W2, W21, 3
	067 Move X0, X19
	068 Move W1, W20
	069 Move W3, W21
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Add X31, X31, 96
	077 Call VertexHelper.AddTriangle, X0, X1, X2, X3
	078 Return 
	079 Move W21, W31
	080 Compare X20, 0
	081 JumpIfNotEqual {27}
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: System.Void AddUIVertexStream(System.Collections.Generic.List`1<UnityEngine.UIVertex> verts, System.Collections.Generic.List`1<System.Int32> indices)

Disassembly:
	0x03E4B3B0 LDP X30, X21, [X31], #0x20
	0x03E4B3B4 B 0x28F9EA0
	0x03E4B3B8 LDP X20, X19, [X31 + 0x10]
	0x03E4B3BC LDP X30, X21, [X31], #0x20
	0x03E4B3C0 RET
	0x03E4B3C4 BL 0x1C16F20
	0x03E4B3C8 LDP S0, S1, [X0 + 0x8]
	0x03E4B3CC LDP S2, S3, [X0 + 0x10]
	0x03E4B3D0 RET
	0x03E4B3D4 STP S0, S1, [X0 + 0x8]
	0x03E4B3D8 STP S2, S3, [X0 + 0x10]
	0x03E4B3DC RET
	0x03E4B3E0 LDP S0, S1, [X0 + 0x18]
	0x03E4B3E4 LDP S2, S3, [X0 + 0x20]
	0x03E4B3E8 RET
	0x03E4B3EC STP S0, S1, [X0 + 0x18]
	0x03E4B3F0 STP S2, S3, [X0 + 0x20]
	0x03E4B3F4 RET
	0x03E4B3F8 LDR W0, [X0 + 0x28]
	0x03E4B3FC RET
	0x03E4B400 STR W1, [X0 + 0x28]
	0x03E4B404 RET
	0x03E4B408 LDR V0, [X0 + 0x2C]
	0x03E4B40C RET
	0x03E4B410 STR S0, [X0 + 0x2C]
	0x03E4B414 RET
	0x03E4B418 LDRB W0, [X0 + 0x30]
	0x03E4B41C RET
	0x03E4B420 AND W8, W1, 0x1
	0x03E4B424 STRB W8, [X0 + 0x30]
	0x03E4B428 RET
	0x03E4B42C STR D8, [X31 - 0x20]!
	0x03E4B430 STR X30, [X31 + 0x8]
	0x03E4B434 STP X20, X19, [X31 + 0x10]
	0x03E4B438 ADRP X20, 0x59D000
	0x03E4B43C LDRB W8, [X20 + 0x833]
	0x03E4B440 MOV V8.16B, V0.16B
	0x03E4B444 MOV X19, X0
	0x03E4B448 TBNZ X8, 0x0, 0x3E4B460
	0x03E4B44C ADRP X0, 0x30D000
	0x03E4B450 LDR X0, [X0 + 0x898]
	0x03E4B454 BL 0x1C16CF4
	0x03E4B458 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x59E000
	008 Move W8, [X22+2085]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x304000
	017 Move X0, [X0+1672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2085], W8
	021 Move X0, X20
	022 Call VertexHelper.InitializeListIfRequired, X0
	023 Compare X21, 0
	024 JumpIfEqual {37}
	025 Move X1, [X20+16]
	026 Move X2, [X20+24]
	027 Move X3, [X20+32]
	028 Move X4, [X20+40]
	029 Move X5, [X20+48]
	030 Move X6, [X20+56]
	031 Move X7, [X20+64]
	032 Move X8, [X20+72]
	033 Move X0, X21
	034 Move [X31], X8
	035 Move [X31+8], X31
	036 Call CanvasRenderer.AddUIVertexStream, X0, X1, X2, X3, X4, X5, X6, X7, X8
	037 Compare X19, 0
	038 JumpIfEqual {54}
	039 Move X0, [X20+80]
	040 Compare X0, 0
	041 JumpIfEqual {61}
	042 Move X8, 0x304000
	043 Move X8, [X8+1672]
	044 Move X1, X19
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X2, [X8]
	050 Move X30, [X31+16]
	051 Add X31, X31, 64
	052 Call List`1<Int32>.AddRange, X0, X1
	053 Return 
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Add X31, X31, 64
	060 Return 
	061 Call 0x1C17F20

Method: System.Void AddUIVertexTriangleStream(System.Collections.Generic.List`1<UnityEngine.UIVertex> verts)

Disassembly:
	0x03E4B45C STRB W8, [X20 + 0x833]
	0x03E4B460 LDR X0, [X19]
	0x03E4B464 CBZ X0, 0x3E4B4F8
	0x03E4B468 ADRP X8, 0x30D000
	0x03E4B46C LDR X8, [X8 + 0x898]
	0x03E4B470 LDR V1, [X19 + 0x14]
	0x03E4B474 LDR V3, [X19 + 0x24]
	0x03E4B478 LDUR V4, [X19 + 0xC]
	0x03E4B47C FMOV S2, 1
	0x03E4B480 LDR W9, [X19 + 0x28]
	0x03E4B484 LDR V0, [X19 + 0x8]
	0x03E4B488 FCMP S8, 0x0
	0x03E4B48C FMOV S5, W31
	0x03E4B490 FMIN S2, S8, S2
	0x03E4B494 FCSEL S5, S2, S5, PL
	0x03E4B498 FSUB S3, S3, S1
	0x03E4B49C FMUL S3, S5, S3
	0x03E4B4A0 UNIMPLEMENTED
	0x03E4B4A4 CMP W9, 0x2
	0x03E4B4A8 FADD S3, S1, S3

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {28}
	003 Subtract X31, X31, 64
	004 Move [X31+32], X30
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, X1
	008 Move X20, X0
	009 Call VertexHelper.InitializeListIfRequired, X0
	010 Move X1, [X20+16]
	011 Move X2, [X20+24]
	012 Move X3, [X20+32]
	013 Move X4, [X20+40]
	014 Move X5, [X20+48]
	015 Move X6, [X20+56]
	016 Move X7, [X20+64]
	017 Move X8, [X20+72]
	018 Move X9, [X20+80]
	019 Move X0, X19
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X31
	023 Call CanvasRenderer.SplitUIVertexStreams, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	024 Move X20, [X31+48]
	025 Move X19, [X31+56]
	026 Move X30, [X31+32]
	027 Add X31, X31, 64
	028 Return 

Method: System.Void GetUIVertexStream(System.Collections.Generic.List`1<UnityEngine.UIVertex> stream)

Disassembly:
	0x03E4B4AC B.EQ 0x3E4B4E0
	0x03E4B4B0 LDUR V7, [X19 + 0x1C]
	0x03E4B4B4 LDR V6, [X19 + 0x18]
	0x03E4B4B8 CMP W9, 0x1
	0x03E4B4BC FSUB V4.2S, V7.2S, V4.2S
	0x03E4B4C0 FSUB S6, S6, S0
	0x03E4B4C4 UNIMPLEMENTED
	0x03E4B4C8 FMUL S6, S5, S6
	0x00000000 INVALID
	0x03E4B4D0 FADD S0, S0, S6
	0x03E4B4D4 FADD V2.2S, V2.2S, V4.2S
	0x03E4B4D8 B.NE 0x3E4B4E0
	0x03E4B4DC MOV V3.16B, V1.16B
	0x03E4B4E0 LDR X1, [X8]
	0x03E4B4E4 LDP X20, X19, [X31 + 0x10]
	0x03E4B4E8 LDR X30, [X31 + 0x8]
	0x03E4B4EC MOV S1, V2.S[1]
	0x03E4B4F0 LDR V8, [X31], #0x20
	0x03E4B4F4 B 0x2728FB0
	0x03E4B4F8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {28}
	003 Subtract X31, X31, 64
	004 Move [X31+32], X30
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, X1
	008 Move X20, X0
	009 Call VertexHelper.InitializeListIfRequired, X0
	010 Move X1, [X20+16]
	011 Move X2, [X20+24]
	012 Move X3, [X20+32]
	013 Move X4, [X20+40]
	014 Move X5, [X20+48]
	015 Move X6, [X20+56]
	016 Move X7, [X20+64]
	017 Move X8, [X20+72]
	018 Move X9, [X20+80]
	019 Move X0, X19
	020 Move [X31], X8
	021 Move [X31+8], X9
	022 Move [X31+16], X31
	023 Call CanvasRenderer.CreateUIVertexStream, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	024 Move X20, [X31+48]
	025 Move X19, [X31+56]
	026 Move X30, [X31+32]
	027 Add X31, X31, 64
	028 Return 

Method: System.Void .cctor()

Disassembly:
	0x03E4B4FC LDR X30, [X31 + 0x8]
	0x03E4B500 LDR V8, [X31], #0x20
	0x03E4B504 RET
	0x03E4B508 LDR X8, [X0]
	0x03E4B50C CMP X8, 0x0
	0x03E4B510 CSET W0, NE
	0x03E4B514 RET
	0x03E4B518 STP X30, X21, [X31 - 0x20]!
	0x03E4B51C STP X20, X19, [X31 + 0x10]
	0x03E4B520 ADRP X21, 0x59D000
	0x03E4B524 LDRB W8, [X21 + 0x834]
	0x03E4B528 MOV X19, X1
	0x03E4B52C MOV X20, X0
	0x03E4B530 TBNZ X8, 0x0, 0x3E4B554
	0x03E4B534 ADRP X0, 0x320000
	0x03E4B538 LDR X0, [X0 + 0x710]
	0x03E4B53C BL 0x1C16CF4
	0x03E4B540 ADRP X0, 0x30D000
	0x03E4B544 LDR X0, [X0 + 0x8A8]
	0x03E4B548 BL 0x1C16CF4
	0x03E4B54C MOVZ W8, 0x1
	0x03E4B550 STRB W8, [X21 + 0x834]
	0x03E4B554 LDR X21, [X20]
	0x03E4B558 CBNZ X21, 0x3E4B57C
	0x03E4B55C ADRP X8, 0x320000
	0x03E4B560 LDR X8, [X8 + 0x710]
	0x03E4B564 LDR X0, [X8]
	0x03E4B568 BL 0x1C16F10
	0x03E4B56C MOV X21, X0
	0x03E4B570 BL 0x3E4B5A0
	0x03E4B574 STR X21, [X20]
	0x03E4B578 CBZ X21, 0x3E4B59C
	0x03E4B57C ADRP X8, 0x30D000
	0x03E4B580 LDR X8, [X8 + 0x8A8]
	0x03E4B584 MOV X1, X19
	0x03E4B588 LDP X20, X19, [X31 + 0x10]
	0x03E4B58C MOV X0, X21
	0x03E4B590 LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x59E000
	005 Move X19, 0x30F000
	006 Move W8, [X20+2086]
	007 Move X19, [X19+416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x30F000
	013 Move X0, [X0+416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2086], W8
	017 Move X8, [X19]
	018 Move X9, -53858304
	019 Move V0, [X9+57]
	020 Move X20, 0x58E000
	021 Move X8, [X8+184]
	022 Move [X8], V0
	023 Move W8, [X20+3550]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x2A9000
	027 Move X0, [X0+1440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3550], W8
	031 Move X8, 0x2A9000
	032 Move X8, [X8+1440]
	033 Move X9, [X19]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X8, [X8]
	037 Move X9, [X9+184]
	038 Move X8, [X8+184]
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move V1, [X8+92]
	041 Move [X9+16], D0
	042 Move [X9+24], S1
	043 Move X30, [X31+32]
	044 Return 

