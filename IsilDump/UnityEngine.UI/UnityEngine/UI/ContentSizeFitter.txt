Type: UnityEngine.UI.ContentSizeFitter

Method: UnityEngine.UI.ContentSizeFitter/FitMode get_horizontalFit()

Disassembly:
	0x03E3149C BL 0x1C16CF4
	0x03E314A0 ADRP X0, 0x2C2000

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_horizontalFit(UnityEngine.UI.ContentSizeFitter/FitMode value)

Disassembly:
	0x03E314A4 LDR X0, [X0 + 0x598]
	0x03E314A8 BL 0x1C16CF4
	0x03E314AC MOVZ W8, 0x1
	0x03E314B0 STRB W8, [X21 + 0x73A]
	0x03E314B4 LDR X0, [X20]
	0x03E314B8 LDR X20, [X19 + 0x30]
	0x03E314BC LDR W8, [X0 + 0xE0]
	0x03E314C0 CBNZ W8, 0x3E314C8
	0x03E314C4 BL 0x1C16DFC
	0x03E314C8 MOV X0, X20
	0x03E314CC MOV X1, X31
	0x03E314D0 MOV X2, X31
	0x03E314D4 BL 0x3C3883C
	0x03E314D8 TBZ X0, 0x0, 0x3E314F8
	0x03E314DC ADRP X8, 0x2C4000
	0x03E314E0 LDR X8, [X8 + 0x6B8]
	0x03E314E4 MOV X0, X19
	0x03E314E8 LDR X1, [X8]
	0x03E314EC BL 0x21A3894
	0x03E314F0 STR X0, [X19 + 0x30]
	0x03E314F4 B 0x3E314FC
	0x03E314F8 LDR X0, [X19 + 0x30]
	0x03E314FC LDP X20, X19, [X31 + 0x10]
	0x03E31500 LDP X30, X21, [X31], #0x20
	0x03E31504 RET
	0x03E31508 MOV W1, W31
	0x03E3150C B 0x3E31510
	0x03E31510 SUB X31, X31, 0x90
	0x03E31514 STP D11, D10, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5B8000
	007 Move X21, 0x33B000
	008 Move W8, [X22+1815]
	009 Move X21, [X21+72]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x33B000
	017 Move X0, [X0+72]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1815], W8
	021 Move X2, [X21]
	022 Add X0, X19, 32
	023 Move W1, W20
	024 Call SetPropertyUtility.SetStruct, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {35}
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 

Method: UnityEngine.UI.ContentSizeFitter/FitMode get_verticalFit()

Disassembly:
	0x03E3159C CBZ X0, 0x3E31C98
	0x03E315A0 MOV X1, X31

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_verticalFit(UnityEngine.UI.ContentSizeFitter/FitMode value)

Disassembly:
	0x03E315A4 BL 0x3C3E51C
	0x03E315A8 LDR W8, [X19 + 0x78]
	0x03E315AC CMP W8, 0x2
	0x03E315B0 B.EQ 0x3E316B4
	0x03E315B4 CMP W8, 0x1
	0x03E315B8 B.NE 0x3E316D4
	0x03E315BC LDR W29, [X19 + 0x7C]
	0x03E315C0 CMP W28, W29
	0x03E315C4 B.LE 0x3E31784
	0x03E315C8 SDIV W8, W28, W29
	0x03E315CC MSUB W9, W8, W29, W28
	0x03E315D0 CMP W9, 0x0
	0x03E315D4 CINC W20, W8, GT
	0x03E315D8 B 0x3E31848
	0x03E315DC CMP W28, 0x1
	0x03E315E0 B.LT 0x3E31C68
	0x03E315E4 ADRP X24, 0x33A000
	0x03E315E8 ADRP X22, 0x2CA000
	0x03E315EC LDR X24, [X24 + 0xB0]
	0x03E315F0 LDR X22, [X22 + 0xF08]
	0x03E315F4 LDR W27, [X31 + 0x8]
	0x03E315F8 MOV W20, W31
	0x03E315FC ADD X21, X19, 0x38
	0x03E31600 ADRP X25, 0x5AA000
	0x03E31604 MOVZ W26, 0x1
	0x03E31608 LDR X2, [X24]
	0x03E3160C MOV W1, W20
	0x03E31610 BL 0x301BCCC
	0x03E31614 MOV X23, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5B8000
	007 Move X21, 0x33B000
	008 Move W8, [X22+1816]
	009 Move X21, [X21+72]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x33B000
	017 Move X0, [X0+72]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1816], W8
	021 Move X2, [X21]
	022 Add X0, X19, 36
	023 Move W1, W20
	024 Call SetPropertyUtility.SetStruct, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {37}
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call ContentSizeFitter.SetDirty, X0
	036 Return 
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: UnityEngine.RectTransform get_rectTransform()

Disassembly:
	0x03E31618 MOVZ W3, 0x3F06
	0x03E3161C MOV X0, X21
	0x03E31620 MOV X1, X19
	0x03E31624 MOV X2, X23
	0x03E31628 MOV X4, X31
	0x03E3162C BL 0x3C3E3A4
	0x03E31630 LDRB W8, [X25 + 0x7F6]
	0x03E31634 CBNZ W8, 0x3E31644
	0x03E31638 MOV X0, X22
	0x03E3163C BL 0x1C16CF4
	0x03E31640 STRB W26, [X25 + 0x7F6]
	0x03E31644 CBZ X23, 0x3E31C98
	0x03E31648 LDR X8, [X22]
	0x03E3164C MOV X0, X23
	0x03E31650 MOV X1, X31
	0x03E31654 LDR X8, [X8 + 0xB8]
	0x03E31658 LDP S0, S1, [X8 + 0x10]
	0x03E3165C BL 0x3C3E648
	0x03E31660 LDRB W8, [X25 + 0x7F6]
	0x03E31664 CBNZ W8, 0x3E31674
	0x03E31668 MOV X0, X22
	0x03E3166C BL 0x1C16CF4
	0x03E31670 STRB W26, [X25 + 0x7F6]
	0x03E31674 LDR X8, [X22]
	0x03E31678 MOV X0, X23
	0x03E3167C MOV X1, X31
	0x03E31680 LDR X8, [X8 + 0xB8]
	0x03E31684 LDP S0, S1, [X8 + 0x10]
	0x03E31688 BL 0x3C3E764
	0x03E3168C LDP S0, S1, [X19 + 0x68]
	0x03E31690 MOV X0, X23
	0x03E31694 MOV X1, X31
	0x03E31698 BL 0x3C3E99C
	0x03E3169C ADD W20, W20, 0x1
	0x03E316A0 CMP W27, W20
	0x03E316A4 B.EQ 0x3E31C68
	0x03E316A8 LDR X0, [X19 + 0x58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5B8000
	006 Move X20, 0x2C3000
	007 Move W8, [X21+1817]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2C5000
	015 Move X0, [X0+1720]
	016 Call 0x1C17CF4
	017 Move X0, 0x2C3000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1817], W8
	022 Move X0, [X20]
	023 Move X20, [X19+40]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x2C5000
	037 Move X8, [X8+1720]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+40], X0
	042 Move X0, [X19+40]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03E316AC CBNZ X0, 0x3E31608
	0x03E316B0 B 0x3E31C98

ISIL:
	001 Move X1, X31
	002 Call UIBehaviour..ctor, X0
	003 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03E316B4 LDR W20, [X19 + 0x7C]
	0x03E316B8 CMP W28, W20
	0x03E316BC B.LE 0x3E3178C
	0x03E316C0 SDIV W8, W28, W20
	0x03E316C4 MSUB W9, W8, W20, W28
	0x03E316C8 CMP W9, 0x0
	0x03E316CC CINC W29, W8, GT

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call UIBehaviour.OnEnable, X0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call ContentSizeFitter.SetDirty, X0
	010 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03E316D0 B 0x3E31848
	0x03E316D4 LDR V0, [X19 + 0x68]
	0x03E316D8 LDR V1, [X19 + 0x70]
	0x03E316DC MOV V8.16B, V3.16B
	0x03E316E0 FADD S0, S0, S1
	0x03E316E4 FCMP S0, 0x0
	0x03E316E8 B.LS 0x3E31794
	0x03E316EC LDR X0, [X19 + 0x20]
	0x03E316F0 CBZ X0, 0x3E31C98
	0x03E316F4 MOV X1, X31
	0x03E316F8 BL 0x3C0C9D4
	0x03E316FC LDR V0, [X19 + 0x70]
	0x03E31700 ADRP X8, 0xFFFFFFFFFCCB9000
	0x03E31704 LDR V1, [X19 + 0x68]
	0x03E31708 ADRP X20, 0x5A7000
	0x03E3170C LDR V3, [X8 + 0x410]
	0x03E31710 SCVTF S2, W0
	0x03E31714 LDRB W8, [X20 + 0xA23]
	0x03E31718 FSUB S2, S9, S2
	0x03E3171C FADD S2, S0, S2
	0x03E31720 FADD S9, S2, S3
	0x03E31724 FADD S10, S0, S1
	0x03E31728 CBNZ W8, 0x3E31740
	0x03E3172C ADRP X0, 0x2C2000
	0x03E31730 LDR X0, [X0 + 0x5A8]
	0x03E31734 BL 0x1C16CF4
	0x03E31738 MOVZ W8, 0x1
	0x03E3173C STRB W8, [X20 + 0xA23]
	0x03E31740 ADRP X8, 0x2C2000
	0x03E31744 LDR X8, [X8 + 0x5A8]
	0x03E31748 FDIV S9, S9, S10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5B8000
	006 Move X20, 0x2C6000
	007 Move W8, [X21+1818]
	008 Move X20, [X20+2336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2C6000
	015 Move X0, [X0+2336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1818], W8
	019 Add X0, X19, 48
	020 Move X1, X31
	021 Call DrivenRectTransformTracker.Clear, X0
	022 Move X0, X19
	023 Call ContentSizeFitter.get_rectTransform, X0
	024 Move X8, [X20]
	025 Move X20, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Call LayoutRebuilder.MarkLayoutForRebuild, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call UIBehaviour.OnDisable, X0
	040 Return 

Method: System.Void OnRectTransformDimensionsChange()

Disassembly:
	0x03E3174C LDR X0, [X8]

ISIL:
	001 Call ContentSizeFitter.SetDirty, X0
	002 Return 

Method: System.Void HandleSelfFittingAlongAxis(System.Int32 axis)

Disassembly:
	0x03E31750 LDR W8, [X0 + 0xE0]
	0x03E31754 CBNZ W8, 0x3E3175C
	0x03E31758 BL 0x1C16DFC
	0x03E3175C MOVZ W8, 0x7F800000
	0x03E31760 FRINTM S0, S9
	0x03E31764 FMOV S1, W8
	0x03E31768 FCVTMS W9, S9
	0x03E3176C FCMP S0, S1
	0x03E31770 MOVZ W8, 0x80000000
	0x03E31774 CSEL W8, W8, W9, EQ
	0x03E31778 CMP W8, 0x1
	0x03E3177C CSINC W29, W8, W31, GT
	0x03E31780 B 0x3E31798
	0x03E31784 MOVZ W20, 0x1
	0x03E31788 B 0x3E31848
	0x03E3178C MOVZ W29, 0x1
	0x03E31790 B 0x3E31848
	0x03E31794 MOVN W29, 0x80000000
	0x03E31798 LDR V0, [X19 + 0x6C]
	0x03E3179C LDR V1, [X19 + 0x74]
	0x03E317A0 FADD S0, S0, S1
	0x03E317A4 FCMP S0, 0x0
	0x03E317A8 B.LS 0x3E31844
	0x03E317AC LDR X0, [X19 + 0x20]
	0x03E317B0 CBZ X0, 0x3E31C98
	0x03E317B4 MOV X1, X31
	0x03E317B8 BL 0x3C0CA10
	0x03E317BC LDR V0, [X19 + 0x74]
	0x03E317C0 ADRP X8, 0xFFFFFFFFFCCB9000
	0x03E317C4 LDR V1, [X19 + 0x6C]
	0x03E317C8 ADRP X20, 0x5A7000
	0x03E317CC LDR V3, [X8 + 0x410]
	0x03E317D0 SCVTF S2, W0
	0x03E317D4 LDRB W8, [X20 + 0xA23]
	0x03E317D8 FSUB S2, S8, S2
	0x03E317DC FADD S2, S0, S2
	0x03E317E0 FADD S8, S2, S3
	0x03E317E4 FADD S9, S0, S1
	0x03E317E8 CBNZ W8, 0x3E31800
	0x03E317EC ADRP X0, 0x2C2000
	0x03E317F0 LDR X0, [X0 + 0x5A8]
	0x03E317F4 BL 0x1C16CF4
	0x03E317F8 MOVZ W8, 0x1
	0x03E317FC STRB W8, [X20 + 0xA23]
	0x03E31800 ADRP X8, 0x2C2000
	0x03E31804 LDR X8, [X8 + 0x5A8]
	0x03E31808 FDIV S8, S8, S9
	0x03E3180C LDR X0, [X8]
	0x03E31810 LDR W8, [X0 + 0xE0]
	0x03E31814 CBNZ W8, 0x3E3181C
	0x03E31818 BL 0x1C16DFC
	0x03E3181C MOVZ W8, 0x7F800000
	0x03E31820 FRINTM S0, S8
	0x03E31824 FMOV S1, W8
	0x03E31828 FCVTMS W9, S8
	0x03E3182C FCMP S0, S1
	0x03E31830 MOVZ W8, 0x80000000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, 36
	008 Move W9, 32
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move W22, [X0]
	011 Move W19, W1
	012 Move X20, X0
	013 Add X21, X0, 48
	014 Call ContentSizeFitter.get_rectTransform, X0
	015 Move X2, X0
	016 Compare W22, 0
	017 JumpIfEqual {38}
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W8, 0x2000
	020 Move W9, 4096
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Move X0, X21
	023 Move X1, X20
	024 Move X4, X31
	025 Call DrivenRectTransformTracker.Add, X0, X1, X2, X3
	026 Move X0, X20
	027 Call ContentSizeFitter.get_rectTransform, X0
	028 Move X8, [X20+40]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, X0
	031 Move X0, X8
	032 Compare W19, 0
	033 JumpIfEqual {54}
	034 Call LayoutUtility.GetMinHeight, X0
	035 Compare X20, 0
	036 JumpIfNotEqual {60}
	037 Call 0x1C17F20
	038 Move X0, X21
	039 Move X1, X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W3, W31
	045 Move X4, X31
	046 Move X30, [X31+48]
	047 Call DrivenRectTransformTracker.Add, X0, X1, X2, X3
	048 Return 
	049 Compare W19, 0
	050 JumpIfEqual {57}
	051 Call LayoutUtility.GetPreferredHeight, X0
	052 Compare X20, 0
	053 JumpIfNotEqual {60}
	054 Call LayoutUtility.GetMinWidth, X0
	055 Compare X20, 0
	056 JumpIfNotEqual {60}
	057 Call LayoutUtility.GetPreferredWidth, X0
	058 Compare X20, 0
	059 JumpIfEqual {37}
	060 Move X0, X20
	061 Move W1, W19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X2, X31
	067 Move X30, [X31+48]
	068 Call RectTransform.SetSizeWithCurrentAnchors, X0, X1, V0
	069 Return 

Method: System.Void SetLayoutHorizontal()

Disassembly:
	0x03E3184C CMP W22, 0x0
	0x03E31850 CINC W23, W22, LT
	0x03E31854 CBZ W8, 0x3E31880
	0x03E31858 LDR W8, [X19 + 0x78]
	0x03E3185C CMP W20, W28
	0x03E31860 CSEL W9, W28, W20, GT
	0x03E31864 CMP W20, 0x1
	0x03E31868 CSINC W24, W9, W31, GE
	0x03E3186C CMP W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 48
	005 Move X1, X31
	006 Call DrivenRectTransformTracker.Clear, X0
	007 Move X0, X19
	008 Move W1, W31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call ContentSizeFitter.HandleSelfFittingAlongAxis, X0, X1
	012 Return 

Method: System.Void SetLayoutVertical()

Disassembly:
	0x03E31870 B.NE 0x3E318A8
	0x03E31874 CMP W29, W28

ISIL:
	001 Move W1, 1
	002 Call ContentSizeFitter.HandleSelfFittingAlongAxis, X0, X1
	003 Return 

Method: System.Void SetDirty()

Disassembly:
	0x03E31518 STP D9, D8, [X31 + 0x20]
	0x03E3151C STP X29, X30, [X31 + 0x30]
	0x03E31520 STP X28, X27, [X31 + 0x40]
	0x03E31524 STP X26, X25, [X31 + 0x50]
	0x03E31528 STP X24, X23, [X31 + 0x60]
	0x03E3152C STP X22, X21, [X31 + 0x70]
	0x03E31530 STP X20, X19, [X31 + 0x80]
	0x03E31534 ADRP X21, 0x5B7000
	0x03E31538 LDRB W8, [X21 + 0x724]
	0x03E3153C MOV W20, W1
	0x03E31540 MOV X19, X0
	0x03E31544 TBNZ X8, 0x0, 0x3E31568
	0x03E31548 ADRP X0, 0x33A000
	0x03E3154C LDR X0, [X0 + 0x88]
	0x03E31550 BL 0x1C16CF4
	0x03E31554 ADRP X0, 0x33A000
	0x03E31558 LDR X0, [X0 + 0xB0]
	0x03E3155C BL 0x1C16CF4
	0x03E31560 MOVZ W8, 0x1
	0x03E31564 STRB W8, [X21 + 0x724]
	0x03E31568 LDR X0, [X19 + 0x58]
	0x03E3156C CBZ X0, 0x3E31C98
	0x03E31570 LDR W28, [X0 + 0x18]
	0x03E31574 STR W28, [X31 + 0x8]
	0x03E31578 CBZ W20, 0x3E315DC
	0x03E3157C MOV X0, X19
	0x03E31580 BL 0x3E31474
	0x03E31584 CBZ X0, 0x3E31C98
	0x03E31588 MOV X1, X31
	0x03E3158C BL 0x3C3E51C
	0x03E31590 MOV X0, X19
	0x03E31594 MOV V9.16B, V2.16B
	0x03E31598 BL 0x3E31474

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5B8000
	005 Move W8, [X20+1819]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2C6000
	012 Move X0, [X0+2336]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1819], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+456]
	019 Move X1, [X8+464]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {42}
	025 Move X20, 0x2C6000
	026 Move X20, [X20+2336]
	027 Move X0, X19
	028 Call ContentSizeFitter.get_rectTransform, X0
	029 Move X8, [X20]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call LayoutRebuilder.MarkLayoutForRebuild, X0
	041 Return 
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return 

