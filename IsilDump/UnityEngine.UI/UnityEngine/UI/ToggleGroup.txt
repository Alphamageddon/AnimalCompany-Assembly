Type: UnityEngine.UI.ToggleGroup

Method: System.Boolean get_allowSwitchOff()

Disassembly:
	0x03E48664 BL 0x338C698
	0x03E48668 MOV X22, X0

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_allowSwitchOff(System.Boolean value)

Disassembly:
	0x03E4866C CBZ X0, 0x3E48684
	0x03E48670 LDR X8, [X21]
	0x03E48674 MOV X0, X22

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E48678 LDR X1, [X8 + 0x40]
	0x03E4867C BL 0x1C16E00
	0x03E48680 CBZ X0, 0x3E48788
	0x03E48684 LDR W8, [X21 + 0x18]
	0x03E48688 CMP W8, 0x2
	0x03E4868C B.LS 0x3E48784
	0x03E48690 STR X22, [X21 + 0x30]
	0x03E48694 LDR X0, [X27]
	0x03E48698 MOV X1, X31
	0x03E4869C BL 0x338C698
	0x03E486A0 MOV X22, X0
	0x03E486A4 CBZ X0, 0x3E486BC
	0x03E486A8 LDR X8, [X21]
	0x03E486AC MOV X0, X22
	0x03E486B0 LDR X1, [X8 + 0x40]
	0x03E486B4 BL 0x1C16E00
	0x03E486B8 CBZ X0, 0x3E48788
	0x03E486BC LDR W8, [X21 + 0x18]
	0x03E486C0 CMP W8, 0x3
	0x03E486C4 B.LS 0x3E48784
	0x03E486C8 STR X22, [X21 + 0x38]
	0x03E486CC CBZ X20, 0x3E48794
	0x03E486D0 ADRP X8, 0x323000
	0x03E486D4 LDR X8, [X8 + 0x630]
	0x03E486D8 MOV X0, X20
	0x03E486DC MOV X2, X21
	0x03E486E0 MOV X3, X31
	0x03E486E4 LDR X1, [X8]
	0x03E486E8 BL 0x3397674
	0x03E486EC MOV X1, X31
	0x03E486F0 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5A1000
	007 Move X22, 0x324000
	008 Move X20, 0x324000
	009 Move W8, [X21+2052]
	010 Move X22, [X22+1352]
	011 Move X20, [X20+1360]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x324000
	018 Move X0, [X0+1360]
	019 Call 0x1C17CF4
	020 Move X0, 0x324000
	021 Move X0, [X0+1352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2052], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+40], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call UIBehaviour..ctor, X0
	039 Return 

Method: System.Void Start()

Disassembly:
	0x03E486F4 MOV X20, X0
	0x03E486F8 BL 0x32CE528
	0x03E486FC TBZ X0, 0x0, 0x3E48768
	0x03E48700 ADRP X8, 0x323000
	0x03E48704 LDR X0, [X23]
	0x03E48708 LDR X8, [X8 + 0x5A0]
	0x03E4870C LDR W9, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call ToggleGroup.EnsureValidState, X0
	005 Move X0, X19
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call UIBehaviour.Start, X0
	010 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03E48710 LDR X21, [X8]
	0x03E48714 CBNZ W9, 0x3E4871C
	0x03E48718 BL 0x1C16DFC
	0x03E4871C MOV X0, X21
	0x03E48720 MOV X1, X31
	0x03E48724 BL 0x338C698
	0x03E48728 MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call ToggleGroup.EnsureValidState, X0
	005 Move X0, X19
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call UIBehaviour.OnEnable, X0
	010 Return 

Method: System.Void ValidateToggleIsInGroup(UnityEngine.UI.Toggle toggle)

Disassembly:
	0x03E4872C MOV X2, X31
	0x03E48730 BL 0x33C4FD0
	0x03E48734 CBZ X0, 0x3E48764
	0x03E48738 ADRP X8, 0x323000
	0x03E4873C LDR X8, [X8 + 0x5A8]
	0x03E48740 LDR X1, [X8]
	0x03E48744 LDR X8, [X0]
	0x03E48748 CMP X8, X1
	0x03E4874C B.NE 0x3E48760
	0x03E48750 STR X0, [X19 + 0x38]
	0x03E48754 LDR X8, [X0]
	0x03E48758 CMP X8, X1
	0x03E4875C B.EQ 0x3E48768
	0x03E48760 BL 0x1C171E0
	0x03E48764 STR X0, [X19 + 0x38]
	0x03E48768 LDP X20, X19, [X31 + 0x50]
	0x03E4876C LDP X22, X21, [X31 + 0x40]
	0x03E48770 LDP X24, X23, [X31 + 0x30]
	0x03E48774 LDP X26, X25, [X31 + 0x20]
	0x03E48778 LDP X28, X27, [X31 + 0x10]
	0x03E4877C LDP X29, X30, [X31], #0x60
	0x03E48780 RET
	0x03E48784 BL 0x1C16F28
	0x03E48788 BL 0x1C16F44
	0x03E4878C MOV X1, X31
	0x03E48790 BL 0x1C16DEC
	0x03E48794 BL 0x1C16F20
	0x03E48798 STR X30, [X31 - 0x20]!
	0x03E4879C STP X20, X19, [X31 + 0x10]
	0x03E487A0 ADRP X19, 0x5A0000
	0x03E487A4 ADRP X20, 0x323000
	0x03E487A8 LDRB W8, [X19 + 0x810]
	0x03E487AC LDR X20, [X20 + 0x640]
	0x03E487B0 TBNZ X8, 0x0, 0x3E487C8
	0x03E487B4 ADRP X0, 0x323000
	0x03E487B8 LDR X0, [X0 + 0x640]
	0x03E487BC BL 0x1C16CF4
	0x03E487C0 MOVZ W8, 0x1
	0x03E487C4 STRB W8, [X19 + 0x810]
	0x03E487C8 LDR X0, [X20]
	0x03E487CC LDR X8, [X0 + 0xB8]
	0x03E487D0 LDR X8, [X8]
	0x03E487D4 CBNZ X8, 0x3E487FC
	0x03E487D8 BL 0x1C16F10
	0x03E487DC MOV X19, X0
	0x03E487E0 BL 0x3E47B84
	0x03E487E4 LDR X8, [X20]
	0x03E487E8 LDR X8, [X8 + 0xB8]
	0x03E487EC STR X19, [X8]
	0x03E487F0 LDR X8, [X20]
	0x03E487F4 LDR X8, [X8 + 0xB8]
	0x03E487F8 LDR X8, [X8]
	0x03E487FC LDP X20, X19, [X31 + 0x10]
	0x03E48800 MOV X0, X8
	0x03E48804 LDR X30, [X31], #0x20
	0x03E48808 RET
	0x03E4880C STP X30, X21, [X31 - 0x20]!
	0x03E48810 STP X20, X19, [X31 + 0x10]
	0x03E48814 LDR X8, [X2 + 0x8]
	0x03E48818 STP X1, X2, [X0 + 0x20]
	0x03E4881C MOV X19, X0
	0x03E48820 MOV X20, X1
	0x03E48824 STR X8, [X0 + 0x10]
	0x03E48828 LDRB W21, [X2 + 0x52]
	0x03E4882C STR X0, [X0 + 0x40]
	0x03E48830 MOV X0, X2
	0x03E48834 BL 0x1C16D84
	0x03E48838 TBZ X0, 0x0, 0x3E48854
	0x03E4883C CMP W21, 0x4
	0x03E48840 B.NE 0x3E48858
	0x03E48844 ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E48848 ADD X8, X8, 0x368
	0x03E4884C STR X8, [X19 + 0x18]
	0x03E48850 B 0x3E48868
	0x03E48854 CBZ X20, 0x3E48880
	0x03E48858 LDR X8, [X19 + 0x10]
	0x03E4885C LDR X9, [X19 + 0x20]
	0x03E48860 STR X8, [X19 + 0x18]
	0x03E48864 STR X9, [X19 + 0x40]
	0x03E48868 ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E4886C ADD X8, X8, 0x2D4
	0x03E48870 STR X8, [X19 + 0x38]
	0x03E48874 LDP X20, X19, [X31 + 0x10]
	0x03E48878 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5A1000
	007 Move X22, 0x2AC000
	008 Move W8, [X21+2053]
	009 Move X22, [X22+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x324000
	017 Move X0, [X0+1296]
	018 Call 0x1C17CF4
	019 Move X0, 0x2AC000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2053], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {55}
	037 Move X0, [X19+40]
	038 Compare X0, 0
	039 JumpIfEqual {99}
	040 Move X8, 0x324000
	041 Move X8, [X8+1296]
	042 Move X1, X20
	043 Move X2, [X8]
	044 Call List`1<Object>.Contains, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {55}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return 
	055 Move X0, 0x2AC000
	056 Move X0, [X0+2512]
	057 Call 0x1C17D08
	058 Move W1, 2
	059 Call 0x1C17D6C
	060 Move X21, X0
	061 Call 0x19913C0
	062 Move X0, X21
	063 Move X1, X20
	064 Call 0x19990B4
	065 Move X0, X21
	066 Move X1, X31
	067 Move X2, X20
	068 Call 0x1994444
	069 Move X0, X21
	070 Call 0x19913C0
	071 Move X0, X21
	072 Move X1, X19
	073 Call 0x19990B4
	074 Move W1, 1
	075 Move X0, X21
	076 Move X2, X19
	077 Call 0x1994444
	078 Move X0, 0x324000
	079 Move X0, [X0+1368]
	080 Call 0x1C17D08
	081 Move X1, X21
	082 Move X2, X31
	083 Call String.Format, X0, X1
	084 Move X19, X0
	085 Move X0, 0x2B4000
	086 Move X0, [X0+1400]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X1, X19
	090 Move X2, X31
	091 Move X20, X0
	092 Call ArgumentException..ctor, X0, X1
	093 Move X0, 0x324000
	094 Move X0, [X0+1376]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X20
	098 Call 0x1C17DEC
	099 Call 0x1C17F20

Method: System.Void NotifyToggleOn(UnityEngine.UI.Toggle toggle, System.Boolean sendCallback = True)

Disassembly:
	0x03E48374 BL 0x1C16E00
	0x03E48378 CBZ X0, 0x3E48788
	0x03E4837C LDR W8, [X21 + 0x18]
	0x03E48380 CMP W8, 0x3
	0x03E48384 B.LS 0x3E48784
	0x03E48388 STR X22, [X21 + 0x38]
	0x03E4838C CBZ X20, 0x3E48794
	0x03E48390 LDR X1, [X24]
	0x03E48394 MOV X0, X20
	0x03E48398 MOV X2, X21
	0x03E4839C MOV X3, X31
	0x03E483A0 BL 0x3397674
	0x03E483A4 MOV X1, X31
	0x03E483A8 MOV X2, X31
	0x03E483AC MOV X20, X0
	0x03E483B0 BL 0x32CE528
	0x03E483B4 ADRP X24, 0x323000
	0x03E483B8 LDR X24, [X24 + 0x5C8]
	0x03E483BC TBZ X0, 0x0, 0x3E48428
	0x03E483C0 ADRP X8, 0x323000
	0x03E483C4 LDR X0, [X23]
	0x03E483C8 LDR X8, [X8 + 0x5D0]
	0x03E483CC LDR W9, [X0 + 0xE0]
	0x03E483D0 LDR X21, [X8]
	0x03E483D4 CBNZ W9, 0x3E483DC
	0x03E483D8 BL 0x1C16DFC
	0x03E483DC MOV X0, X21
	0x03E483E0 MOV X1, X31
	0x03E483E4 BL 0x338C698
	0x03E483E8 MOV X1, X20
	0x03E483EC MOV X2, X31
	0x03E483F0 BL 0x33C4FD0
	0x03E483F4 CBZ X0, 0x3E48424
	0x03E483F8 ADRP X8, 0x323000
	0x03E483FC LDR X8, [X8 + 0x5D8]
	0x03E48400 LDR X1, [X8]
	0x03E48404 LDR X8, [X0]
	0x03E48408 CMP X8, X1
	0x03E4840C B.NE 0x3E48760
	0x03E48410 STR X0, [X19 + 0x28]
	0x03E48414 LDR X8, [X0]
	0x03E48418 CMP X8, X1
	0x03E4841C B.EQ 0x3E48428
	0x03E48420 B 0x3E48760
	0x03E48424 STR X0, [X19 + 0x28]
	0x03E48428 LDR X0, [X23]
	0x03E4842C LDR X20, [X29]
	0x03E48430 LDR W8, [X0 + 0xE0]
	0x03E48434 CBNZ W8, 0x3E4843C
	0x03E48438 BL 0x1C16DFC
	0x03E4843C MOV X0, X20
	0x03E48440 MOV X1, X31
	0x03E48444 BL 0x338C698
	0x03E48448 LDR X8, [X25]
	0x03E4844C MOV X20, X0
	0x03E48450 MOVZ W1, 0x3
	0x03E48454 MOV X0, X8
	0x03E48458 BL 0x1C16D6C
	0x03E4845C LDR X8, [X24]
	0x03E48460 MOV X21, X0
	0x03E48464 MOV X1, X31
	0x03E48468 MOV X0, X8
	0x03E4846C BL 0x338C698
	0x03E48470 CBZ X21, 0x3E48794
	0x03E48474 MOV X22, X0
	0x03E48478 CBZ X0, 0x3E48490
	0x03E4847C LDR X8, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x5A1000
	010 Move W8, [X21+2054]
	011 Move W22, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x324000
	019 Move X0, [X0+1272]
	020 Call 0x1C17CF4
	021 Move X0, 0x324000
	022 Move X0, [X0+1280]
	023 Call 0x1C17CF4
	024 Move X0, 0x2AC000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2054], W8
	029 Move X0, X20
	030 Move X1, X19
	031 Call ToggleGroup.ValidateToggleIsInGroup, X0, X1
	032 Move X0, [X20+40]
	033 Compare X0, 0
	034 JumpIfEqual {76}
	035 Move X24, 0x324000
	036 Move X25, 0x2AC000
	037 Move X24, [X24+1280]
	038 Move X25, [X25+1432]
	039 Move W21, W31
	040 And W22, W22, 1
	041 Move W8, [X0+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X2, [X24]
	044 Move W1, W21
	045 Call List`1<Object>.get_Item, X0, X1
	046 Move X8, [X25]
	047 Move X23, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X23
	054 Move X1, X19
	055 Move X2, X31
	056 Call Object.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {72}
	061 Move X0, [X20+40]
	062 Compare X0, 0
	063 JumpIfEqual {76}
	064 Move X2, [X24]
	065 Move W1, W21
	066 Call List`1<Object>.get_Item, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {76}
	069 Move W1, W31
	070 Move W2, W22
	071 Call Toggle.Set, X0, X1, X2
	072 Move X0, [X20+40]
	073 Add W21, W21, 1
	074 Compare X0, 0
	075 JumpIfNotEqual {41}
	076 Call 0x1C17F20
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Return 

Method: System.Void UnregisterToggle(UnityEngine.UI.Toggle toggle)

Disassembly:
	0x03E48214 MOV X1, X20
	0x03E48218 MOV X2, X31
	0x03E4821C BL 0x33C4FD0
	0x03E48220 CBZ X0, 0x3E48250
	0x03E48224 ADRP X8, 0x323000
	0x03E48228 LDR X8, [X8 + 0x5B8]
	0x03E4822C LDR X1, [X8]
	0x03E48230 LDR X8, [X0]
	0x03E48234 CMP X8, X1
	0x03E48238 B.NE 0x3E48760
	0x03E4823C STR X0, [X19 + 0x20]
	0x03E48240 LDR X8, [X0]
	0x03E48244 CMP X8, X1
	0x03E48248 B.EQ 0x3E48254
	0x03E4824C B 0x3E48760
	0x03E48250 STR X0, [X19 + 0x20]
	0x03E48254 ADRP X9, 0x323000
	0x03E48258 LDR X0, [X23]
	0x03E4825C LDR X9, [X9 + 0x5C0]
	0x03E48260 MOV X8, X23
	0x03E48264 MOV X24, X28
	0x03E48268 ADRP X28, 0x2B3000
	0x03E4826C LDR W8, [X0 + 0xE0]
	0x03E48270 LDR X20, [X9]
	0x03E48274 LDR X28, [X28 + 0xEA0]
	0x03E48278 MOV X29, X9
	0x03E4827C CBNZ W8, 0x3E48284
	0x03E48280 BL 0x1C16DFC
	0x03E48284 MOV X0, X20
	0x03E48288 MOV X1, X31
	0x03E4828C BL 0x338C698
	0x03E48290 LDR X8, [X25]
	0x03E48294 MOV X20, X0
	0x03E48298 MOVZ W1, 0x4
	0x03E4829C MOV X0, X8
	0x03E482A0 BL 0x1C16D6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5A1000
	006 Move W8, [X21+2055]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x324000
	014 Move X0, [X0+1296]
	015 Call 0x1C17CF4
	016 Move X0, 0x324000
	017 Move X0, [X0+1304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2055], W8
	021 Move X0, [X20+40]
	022 Compare X0, 0
	023 JumpIfEqual {51}
	024 Move X8, 0x324000
	025 Move X8, [X8+1296]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call List`1<Object>.Contains, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X0, [X20+40]
	034 Compare X0, 0
	035 JumpIfEqual {51}
	036 Move X8, 0x324000
	037 Move X8, [X8+1304]
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, [X8]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call List`1<Object>.Remove, X0, X1
	045 Return 
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void RegisterToggle(UnityEngine.UI.Toggle toggle)

Disassembly:
	0x03E482A4 LDR X8, [X28]
	0x03E482A8 MOV X21, X0
	0x03E482AC MOV X1, X31
	0x03E482B0 MOV X0, X8
	0x03E482B4 BL 0x338C698
	0x03E482B8 CBZ X21, 0x3E48794
	0x03E482BC MOV X22, X0
	0x03E482C0 CBZ X0, 0x3E482D8
	0x03E482C4 LDR X8, [X21]
	0x03E482C8 MOV X0, X22
	0x03E482CC LDR X1, [X8 + 0x40]
	0x03E482D0 BL 0x1C16E00
	0x03E482D4 CBZ X0, 0x3E48788
	0x03E482D8 LDR W8, [X21 + 0x18]
	0x03E482DC CBZ W8, 0x3E48784
	0x03E482E0 STR X22, [X21 + 0x20]
	0x03E482E4 LDR X0, [X28]
	0x03E482E8 MOV X1, X31
	0x03E482EC BL 0x338C698
	0x03E482F0 MOV X22, X0
	0x03E482F4 CBZ X0, 0x3E4830C
	0x03E482F8 LDR X8, [X21]
	0x03E482FC MOV X0, X22
	0x03E48300 LDR X1, [X8 + 0x40]
	0x03E48304 BL 0x1C16E00
	0x03E48308 CBZ X0, 0x3E48788
	0x03E4830C LDR W8, [X21 + 0x18]
	0x03E48310 CMP W8, 0x1
	0x03E48314 B.LS 0x3E48784
	0x03E48318 STR X22, [X21 + 0x28]
	0x03E4831C LDR X0, [X26]
	0x03E48320 MOV X1, X31
	0x03E48324 BL 0x338C698
	0x03E48328 MOV X22, X0
	0x03E4832C CBZ X0, 0x3E48344
	0x03E48330 LDR X8, [X21]
	0x03E48334 MOV X0, X22
	0x03E48338 LDR X1, [X8 + 0x40]
	0x03E4833C BL 0x1C16E00
	0x03E48340 CBZ X0, 0x3E48788
	0x03E48344 LDR W8, [X21 + 0x18]
	0x03E48348 CMP W8, 0x2
	0x03E4834C B.LS 0x3E48784
	0x03E48350 STR X22, [X21 + 0x30]
	0x03E48354 LDR X0, [X27]
	0x03E48358 MOV X1, X31
	0x03E4835C BL 0x338C698
	0x03E48360 MOV X22, X0
	0x03E48364 CBZ X0, 0x3E4837C
	0x03E48368 LDR X8, [X21]
	0x03E4836C MOV X0, X22
	0x03E48370 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5A1000
	006 Move W8, [X21+2056]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x324000
	014 Move X0, [X0+1312]
	015 Call 0x1C17CF4
	016 Move X0, 0x324000
	017 Move X0, [X0+1296]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2056], W8
	021 Move X0, [X20+40]
	022 Compare X0, 0
	023 JumpIfEqual {67}
	024 Move X8, 0x324000
	025 Move X8, [X8+1296]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call List`1<Object>.Contains, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {52}
	033 Move X0, [X20+40]
	034 Compare X0, 0
	035 JumpIfEqual {67}
	036 Move X9, 0x324000
	037 Move X9, [X9+1312]
	038 Move W10, [X0+28]
	039 Move X8, [X0+16]
	040 Move X9, [X9]
	041 Add W10, W10, 1
	042 Move [X0+28], W10
	043 Compare X8, 0
	044 JumpIfEqual {67}
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Move W11, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W9, W10, 1
	049 Add X8, X8, X10
	050 Move [X0+24], W9
	051 Move [X8+32], X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Move X8, [X9+32]
	058 Move X1, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X8, [X8+192]
	062 Move X2, [X8+112]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Call List`1<Object>.AddWithResize, X0, X1
	066 Return 
	067 Call 0x1C17F20

Method: System.Void EnsureValidState()

Disassembly:
	0x03E47B40 LDP X20, X19, [X31 + 0x10]
	0x03E47B44 LDR X30, [X31], #0x20
	0x03E47B48 RET
	0x03E47B4C MOV X1, X31
	0x03E47B50 B 0x33BDD8C
	0x03E47B54 STR X30, [X31 - 0x10]!
	0x03E47B58 CBZ X1, 0x3E47B68
	0x03E47B5C LDRB W0, [X1 + 0x120]
	0x03E47B60 LDR X30, [X31], #0x10
	0x03E47B64 RET
	0x03E47B68 BL 0x1C16F20
	0x03E47B6C STR X30, [X31 - 0x10]!
	0x03E47B70 CBZ X1, 0x3E47B80
	0x03E47B74 LDRB W0, [X1 + 0x120]
	0x03E47B78 LDR X30, [X31], #0x10
	0x03E47B7C RET
	0x03E47B80 BL 0x1C16F20
	0x03E47B84 STP X29, X30, [X31 - 0x60]!
	0x03E47B88 STP X28, X27, [X31 + 0x10]
	0x03E47B8C STP X26, X25, [X31 + 0x20]
	0x03E47B90 STP X24, X23, [X31 + 0x30]
	0x03E47B94 STP X22, X21, [X31 + 0x40]
	0x03E47B98 STP X20, X19, [X31 + 0x50]
	0x03E47B9C ADRP X20, 0x5A1000
	0x03E47BA0 ADRP X29, 0x324000
	0x03E47BA4 ADRP X23, 0x2AC000
	0x03E47BA8 LDRB W8, [X20 + 0x80F]
	0x03E47BAC LDR X29, [X29 + 0x588]
	0x03E47BB0 LDR X23, [X23 + 0x6C0]
	0x03E47BB4 MOV X19, X0
	0x03E47BB8 TBNZ X8, 0x0, 0x3E47D14
	0x03E47BBC ADRP X0, 0x324000
	0x03E47BC0 LDR X0, [X0 + 0x590]
	0x03E47BC4 BL 0x1C16CF4
	0x03E47BC8 ADRP X0, 0x324000
	0x03E47BCC LDR X0, [X0 + 0x598]
	0x03E47BD0 BL 0x1C16CF4
	0x03E47BD4 ADRP X0, 0x324000
	0x03E47BD8 LDR X0, [X0 + 0x5A0]
	0x03E47BDC BL 0x1C16CF4
	0x03E47BE0 ADRP X0, 0x324000
	0x03E47BE4 LDR X0, [X0 + 0x5A8]
	0x03E47BE8 BL 0x1C16CF4
	0x03E47BEC ADRP X0, 0x324000
	0x03E47BF0 LDR X0, [X0 + 0x5B0]
	0x03E47BF4 BL 0x1C16CF4
	0x03E47BF8 ADRP X0, 0x324000
	0x03E47BFC LDR X0, [X0 + 0x5B8]
	0x03E47C00 BL 0x1C16CF4
	0x03E47C04 ADRP X0, 0x2D3000
	0x03E47C08 LDR X0, [X0 + 0xD80]
	0x03E47C0C BL 0x1C16CF4
	0x03E47C10 ADRP X0, 0x324000
	0x03E47C14 LDR X0, [X0 + 0x5C0]
	0x03E47C18 BL 0x1C16CF4
	0x03E47C1C ADRP X0, 0x324000
	0x03E47C20 LDR X0, [X0 + 0x588]
	0x03E47C24 BL 0x1C16CF4
	0x03E47C28 ADRP X0, 0x324000
	0x03E47C2C LDR X0, [X0 + 0x5C8]
	0x03E47C30 BL 0x1C16CF4
	0x03E47C34 ADRP X0, 0x324000
	0x03E47C38 LDR X0, [X0 + 0x5D0]
	0x03E47C3C BL 0x1C16CF4
	0x03E47C40 ADRP X0, 0x324000
	0x03E47C44 LDR X0, [X0 + 0x5D8]
	0x03E47C48 BL 0x1C16CF4
	0x03E47C4C ADRP X0, 0x324000
	0x03E47C50 LDR X0, [X0 + 0x5E0]
	0x03E47C54 BL 0x1C16CF4
	0x03E47C58 ADRP X0, 0x324000
	0x03E47C5C LDR X0, [X0 + 0x5E8]
	0x03E47C60 BL 0x1C16CF4
	0x03E47C64 ADRP X0, 0x324000
	0x03E47C68 LDR X0, [X0 + 0x5F0]
	0x03E47C6C BL 0x1C16CF4
	0x03E47C70 ADRP X0, 0x324000
	0x03E47C74 LDR X0, [X0 + 0x5F8]
	0x03E47C78 BL 0x1C16CF4
	0x03E47C7C ADRP X0, 0x324000
	0x03E47C80 LDR X0, [X0 + 0x600]
	0x03E47C84 BL 0x1C16CF4
	0x03E47C88 ADRP X0, 0x324000
	0x03E47C8C LDR X0, [X0 + 0x608]
	0x03E47C90 BL 0x1C16CF4
	0x03E47C94 ADRP X0, 0x324000
	0x03E47C98 LDR X0, [X0 + 0x610]
	0x03E47C9C BL 0x1C16CF4
	0x03E47CA0 ADRP X0, 0x2D4000
	0x03E47CA4 LDR X0, [X0 + 0xA80]
	0x03E47CA8 BL 0x1C16CF4
	0x03E47CAC ADRP X0, 0x2B4000
	0x03E47CB0 LDR X0, [X0 + 0xC60]
	0x03E47CB4 BL 0x1C16CF4
	0x03E47CB8 ADRP X0, 0x2AC000
	0x03E47CBC LDR X0, [X0 + 0x6C0]
	0x03E47CC0 BL 0x1C16CF4
	0x03E47CC4 ADRP X0, 0x2B4000
	0x03E47CC8 LDR X0, [X0 + 0xEA0]
	0x03E47CCC BL 0x1C16CF4
	0x03E47CD0 ADRP X0, 0x324000
	0x03E47CD4 LDR X0, [X0 + 0x618]
	0x03E47CD8 BL 0x1C16CF4
	0x03E47CDC ADRP X0, 0x324000
	0x03E47CE0 LDR X0, [X0 + 0x620]
	0x03E47CE4 BL 0x1C16CF4
	0x03E47CE8 ADRP X0, 0x324000
	0x03E47CEC LDR X0, [X0 + 0x628]
	0x03E47CF0 BL 0x1C16CF4
	0x03E47CF4 ADRP X0, 0x324000
	0x03E47CF8 LDR X0, [X0 + 0x630]
	0x03E47CFC BL 0x1C16CF4
	0x03E47D00 ADRP X0, 0x324000
	0x03E47D04 LDR X0, [X0 + 0x638]
	0x03E47D08 BL 0x1C16CF4
	0x03E47D0C MOVZ W8, 0x1
	0x03E47D10 STRB W8, [X20 + 0x80F]
	0x03E47D14 ADRP X25, 0x2B4000
	0x03E47D18 ADRP X24, 0x324000
	0x03E47D1C LDR X25, [X25 + 0xC60]
	0x03E47D20 LDR X24, [X24 + 0x5C8]
	0x03E47D24 MOV X0, X19
	0x03E47D28 MOV X1, X31
	0x03E47D2C BL 0x33BDD8C
	0x03E47D30 LDR X0, [X23]
	0x03E47D34 LDR X20, [X29]
	0x03E47D38 LDR W8, [X0 + 0xE0]
	0x03E47D3C CBNZ W8, 0x3E47D44
	0x03E47D40 BL 0x1C16DFC
	0x03E47D44 MOV X0, X20
	0x03E47D48 MOV X1, X31
	0x03E47D4C BL 0x338C698
	0x03E47D50 LDR X8, [X25]
	0x03E47D54 MOV X20, X0
	0x03E47D58 MOVZ W1, 0x4
	0x03E47D5C MOV X0, X8
	0x03E47D60 BL 0x1C16D6C
	0x03E47D64 LDR X8, [X24]
	0x03E47D68 MOV X21, X0
	0x03E47D6C MOV X1, X31
	0x03E47D70 MOV X0, X8
	0x03E47D74 BL 0x338C698
	0x03E47D78 CBZ X21, 0x3E48794
	0x03E47D7C MOV X22, X0
	0x03E47D80 CBZ X0, 0x3E47D98
	0x03E47D84 LDR X8, [X21]
	0x03E47D88 MOV X0, X22
	0x03E47D8C LDR X1, [X8 + 0x40]
	0x03E47D90 BL 0x1C16E00
	0x03E47D94 CBZ X0, 0x3E48788
	0x03E47D98 LDR W8, [X21 + 0x18]
	0x03E47D9C CBZ W8, 0x3E48784
	0x03E47DA0 ADRP X8, 0x324000
	0x03E47DA4 LDR X8, [X8 + 0x610]
	0x03E47DA8 STR X22, [X21 + 0x20]
	0x03E47DAC MOV X1, X31
	0x03E47DB0 LDR X0, [X8]
	0x03E47DB4 BL 0x338C698
	0x03E47DB8 CBZ X0, 0x3E48794
	0x03E47DBC LDR X8, [X0]
	0x03E47DC0 LDR X9, [X8 + 0x8C8]
	0x03E47DC4 LDR X1, [X8 + 0x8D0]
	0x03E47DC8 BLR X9
	0x03E47DCC MOV X22, X0
	0x03E47DD0 CBZ X0, 0x3E47DE8
	0x03E47DD4 LDR X8, [X21]
	0x03E47DD8 MOV X0, X22
	0x03E47DDC LDR X1, [X8 + 0x40]
	0x03E47DE0 BL 0x1C16E00
	0x03E47DE4 CBZ X0, 0x3E48788
	0x03E47DE8 LDR W8, [X21 + 0x18]
	0x03E47DEC CMP W8, 0x1
	0x03E47DF0 B.LS 0x3E48784
	0x03E47DF4 ADRP X26, 0x2D4000
	0x03E47DF8 LDR X26, [X26 + 0xA80]
	0x03E47DFC STR X22, [X21 + 0x28]
	0x03E47E00 MOV X1, X31
	0x03E47E04 LDR X0, [X26]
	0x03E47E08 BL 0x338C698
	0x03E47E0C MOV X22, X0
	0x03E47E10 CBZ X0, 0x3E47E28
	0x03E47E14 LDR X8, [X21]
	0x03E47E18 MOV X0, X22
	0x03E47E1C LDR X1, [X8 + 0x40]
	0x03E47E20 BL 0x1C16E00
	0x03E47E24 CBZ X0, 0x3E48788
	0x03E47E28 LDR W8, [X21 + 0x18]
	0x03E47E2C CMP W8, 0x2
	0x03E47E30 B.LS 0x3E48784
	0x03E47E34 ADRP X27, 0x2D3000
	0x03E47E38 LDR X27, [X27 + 0xD80]
	0x03E47E3C STR X22, [X21 + 0x30]
	0x03E47E40 MOV X1, X31
	0x03E47E44 LDR X0, [X27]
	0x03E47E48 BL 0x338C698
	0x03E47E4C MOV X22, X0
	0x03E47E50 CBZ X0, 0x3E47E68
	0x03E47E54 LDR X8, [X21]
	0x03E47E58 MOV X0, X22
	0x03E47E5C LDR X1, [X8 + 0x40]
	0x03E47E60 BL 0x1C16E00
	0x03E47E64 CBZ X0, 0x3E48788
	0x03E47E68 LDR W8, [X21 + 0x18]
	0x03E47E6C CMP W8, 0x3
	0x03E47E70 B.LS 0x3E48784
	0x03E47E74 STR X22, [X21 + 0x38]
	0x03E47E78 CBZ X20, 0x3E48794
	0x03E47E7C ADRP X28, 0x324000
	0x03E47E80 LDR X28, [X28 + 0x638]
	0x03E47E84 MOV X0, X20
	0x03E47E88 MOV X2, X21
	0x03E47E8C MOV X3, X31
	0x03E47E90 LDR X1, [X28]
	0x03E47E94 BL 0x3397674
	0x03E47E98 MOV X1, X31
	0x03E47E9C MOV X2, X31
	0x03E47EA0 MOV X20, X0
	0x03E47EA4 BL 0x32CE528
	0x03E47EA8 TBZ X0, 0x0, 0x3E47F14
	0x03E47EAC ADRP X8, 0x324000
	0x03E47EB0 LDR X0, [X23]
	0x03E47EB4 LDR X8, [X8 + 0x5E0]
	0x03E47EB8 LDR W9, [X0 + 0xE0]
	0x03E47EBC LDR X21, [X8]
	0x03E47EC0 CBNZ W9, 0x3E47EC8
	0x03E47EC4 BL 0x1C16DFC
	0x03E47EC8 MOV X0, X21
	0x03E47ECC MOV X1, X31
	0x03E47ED0 BL 0x338C698
	0x03E47ED4 MOV X1, X20
	0x03E47ED8 MOV X2, X31
	0x03E47EDC BL 0x33C4FD0
	0x03E47EE0 CBZ X0, 0x3E47F10
	0x03E47EE4 ADRP X8, 0x324000
	0x03E47EE8 LDR X8, [X8 + 0x5E8]
	0x03E47EEC LDR X1, [X8]
	0x03E47EF0 LDR X8, [X0]
	0x03E47EF4 CMP X8, X1
	0x03E47EF8 B.NE 0x3E48760
	0x03E47EFC STR X0, [X19 + 0x10]
	0x03E47F00 LDR X8, [X0]
	0x03E47F04 CMP X8, X1
	0x03E47F08 B.EQ 0x3E47F14
	0x03E47F0C B 0x3E48760
	0x03E47F10 STR X0, [X19 + 0x10]
	0x03E47F14 LDR X0, [X23]
	0x03E47F18 LDR X20, [X29]
	0x03E47F1C LDR W8, [X0 + 0xE0]
	0x03E47F20 CBNZ W8, 0x3E47F28
	0x03E47F24 BL 0x1C16DFC
	0x03E47F28 MOV X0, X20
	0x03E47F2C MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x5A2000
	009 Move W8, [X20+2057]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x325000
	016 Move X0, [X0+1248]
	017 Call 0x1C17CF4
	018 Move X0, 0x2AD000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x325000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move X0, 0x325000
	025 Move X0, [X0+1264]
	026 Call 0x1C17CF4
	027 Move X0, 0x2AD000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0x325000
	031 Move X0, [X0+1272]
	032 Call 0x1C17CF4
	033 Move X0, 0x325000
	034 Move X0, [X0+1280]
	035 Call 0x1C17CF4
	036 Move X0, 0x2AD000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2057], W8
	041 Move W8, [X19+32]
	042 Compare W8, 0
	043 JumpIfNotEqual {76}
	044 Move X0, X19
	045 Call ToggleGroup.AnyTogglesOn, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {76}
	050 Move X0, [X19+40]
	051 Compare X0, 0
	052 JumpIfEqual {224}
	053 Move W8, [X0+24]
	054 Compare W8, 0
	055 JumpIfEqual {76}
	056 Move X20, 0x325000
	057 Move X20, [X20+1280]
	058 Move W1, W31
	059 Move X2, [X20]
	060 Call List`1<Object>.get_Item, X0, X1
	061 Compare X0, 0
	062 JumpIfEqual {224}
	063 Move W1, 1
	064 Move W2, 1
	065 Call Toggle.Set, X0, X1, X2
	066 Move X0, [X19+40]
	067 Compare X0, 0
	068 JumpIfEqual {224}
	069 Move X2, [X20]
	070 Move W1, W31
	071 Call List`1<Object>.get_Item, X0, X1
	072 Move X1, X0
	073 Move W2, 1
	074 Move X0, X19
	075 Call ToggleGroup.NotifyToggleOn, X0, X1, X2
	076 Move X20, 0x325000
	077 Move X20, [X20+1248]
	078 Move X0, X19
	079 Call ToggleGroup.ActiveToggles, X0
	080 Move X1, [X20]
	081 Move X21, X0
	082 Call Enumerable.Count, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X19
	085 Call ToggleGroup.GetFirstActiveToggle, X0
	086 Compare X21, 0
	087 JumpIfEqual {224}
	088 Move X10, 0x325000
	089 Move X8, [X21]
	090 Move X10, [X10+1256]
	091 Move X20, X0
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move X0, X21
	103 Move W2, W31
	104 Call 0x1C5D788
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add X8, X8, X9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X21
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X19, X0
	113 Compare X0, 0
	114 JumpIfEqual {225}
	115 Move X22, 0x2AD000
	116 Move X23, 0x325000
	117 Move X24, 0x2AD000
	118 Move X22, [X22+3608]
	119 Move X23, [X23+1264]
	120 Move X24, [X24+1432]
	121 Move X8, [X19]
	122 Move X1, [X22]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X19
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X19
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {187}
	146 Move X8, [X19]
	147 Move X1, [X23]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move X0, X19
	158 Move W2, W31
	159 Call 0x1C5D788
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X8, X8, X9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X19
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X21, X0
	168 Move X0, [X24]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X21
	174 Move X1, X20
	175 Move X2, X31
	176 Call Object.op_Equality, X0, X1
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {121}
	181 Compare X21, 0
	182 JumpIfEqual {223}
	183 Move W2, 1
	184 Move X0, X21
	185 Move W1, W31
	186 Call Toggle.Set, X0, X1, X2
	187 Move X20, X31
	188 Compare X19, 0
	189 JumpIfEqual {213}
	190 Move X10, 0x2AD000
	191 Move X8, [X19]
	192 Move X10, [X10+3584]
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Move X1, [X10]
	195 Compare X9, 0
	196 JumpIfEqual {203}
	197 Move X10, [X8+176]
	198 Add X10, X10, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X9, X9, 1
	202 Add X10, X10, 16
	203 Move X0, X19
	204 Move W2, W31
	205 Call 0x1C5D788
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Add X8, X8, X9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X1, [X0+8]
	211 Move X0, X19
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Compare X20, 0
	214 JumpIfNotEqual {226}
	215 Move X20, [X31+48]
	216 Move X19, [X31+56]
	217 Move X22, [X31+32]
	218 Move X21, [X31+40]
	219 Move X24, [X31+16]
	220 Move X23, [X31+24]
	221 Move X30, [X31+64]
	222 Return 
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Call 0x1C17F20
	226 Move X0, X20
	227 Call 0x1C17F18
	228 Move X21, X0
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, X21
	231 Call 0x3EB2AD0
	232 Move X20, [X0]
	233 Call 0x3EB2AE0
	234 Move X20, X31
	235 Move X21, X0
	236 Compare X19, 0
	237 JumpIfEqual {261}
	238 Move X10, 0x2AD000
	239 Move X8, [X19]
	240 Move X10, [X10+3584]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move X0, X19
	252 Move W2, W31
	253 Call 0x1C5D788
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Add X8, X8, X9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X19
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X20, 0
	262 JumpIfNotEqual {265}
	263 Move X0, X21
	264 Call 0x1D2D690
	265 Move X0, X20
	266 Call 0x1C17F18
	267 Call 0x1991590

Method: System.Boolean AnyTogglesOn()

Disassembly:
	0x03E484A0 MOV X1, X31
	0x03E484A4 BL 0x338C698
	0x03E484A8 MOV X22, X0
	0x03E484AC CBZ X0, 0x3E484C4
	0x03E484B0 LDR X8, [X21]
	0x03E484B4 MOV X0, X22
	0x03E484B8 LDR X1, [X8 + 0x40]
	0x03E484BC BL 0x1C16E00
	0x03E484C0 CBZ X0, 0x3E48788
	0x03E484C4 LDR W8, [X21 + 0x18]
	0x03E484C8 CMP W8, 0x1
	0x03E484CC B.LS 0x3E48784
	0x03E484D0 STR X22, [X21 + 0x28]
	0x03E484D4 LDR X0, [X27]
	0x03E484D8 MOV X1, X31
	0x03E484DC BL 0x338C698
	0x03E484E0 MOV X22, X0
	0x03E484E4 CBZ X0, 0x3E484FC
	0x03E484E8 LDR X8, [X21]
	0x03E484EC MOV X0, X22
	0x03E484F0 LDR X1, [X8 + 0x40]
	0x03E484F4 BL 0x1C16E00
	0x03E484F8 CBZ X0, 0x3E48788
	0x03E484FC LDR W8, [X21 + 0x18]
	0x03E48500 CMP W8, 0x2
	0x03E48504 B.LS 0x3E48784
	0x03E48508 STR X22, [X21 + 0x30]
	0x03E4850C CBZ X20, 0x3E48794
	0x03E48510 ADRP X8, 0x323000
	0x03E48514 LDR X8, [X8 + 0x618]
	0x03E48518 MOV X0, X20
	0x03E4851C MOV X2, X21
	0x03E48520 MOV X3, X31
	0x03E48524 LDR X1, [X8]
	0x03E48528 BL 0x3397674
	0x03E4852C MOV X1, X31
	0x03E48530 MOV X2, X31
	0x03E48534 MOV X20, X0
	0x03E48538 BL 0x32CE528
	0x03E4853C TBZ X0, 0x0, 0x3E485A8
	0x03E48540 ADRP X8, 0x323000
	0x03E48544 LDR X0, [X23]
	0x03E48548 LDR X8, [X8 + 0x590]
	0x03E4854C LDR W9, [X0 + 0xE0]
	0x03E48550 LDR X21, [X8]
	0x03E48554 CBNZ W9, 0x3E4855C
	0x03E48558 BL 0x1C16DFC
	0x03E4855C MOV X0, X21
	0x03E48560 MOV X1, X31
	0x03E48564 BL 0x338C698
	0x03E48568 MOV X1, X20
	0x03E4856C MOV X2, X31
	0x03E48570 BL 0x33C4FD0
	0x03E48574 CBZ X0, 0x3E485A4
	0x03E48578 ADRP X8, 0x323000
	0x03E4857C LDR X8, [X8 + 0x598]
	0x03E48580 LDR X1, [X8]
	0x03E48584 LDR X8, [X0]
	0x03E48588 CMP X8, X1
	0x03E4858C B.NE 0x3E48760
	0x03E48590 STR X0, [X19 + 0x30]
	0x03E48594 LDR X8, [X0]
	0x03E48598 CMP X8, X1
	0x03E4859C B.EQ 0x3E485A8
	0x03E485A0 B 0x3E48760
	0x03E485A4 STR X0, [X19 + 0x30]
	0x03E485A8 LDR X0, [X23]
	0x03E485AC LDR X20, [X29]
	0x03E485B0 LDR W8, [X0 + 0xE0]
	0x03E485B4 CBNZ W8, 0x3E485BC
	0x03E485B8 BL 0x1C16DFC
	0x03E485BC MOV X0, X20
	0x03E485C0 MOV X1, X31
	0x03E485C4 BL 0x338C698
	0x03E485C8 LDR X8, [X25]
	0x03E485CC MOV X20, X0
	0x03E485D0 MOVZ W1, 0x4
	0x03E485D4 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5A1000
	007 Move X22, 0x324000
	008 Move W8, [X20+2058]
	009 Move X22, [X22+1320]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x324000
	016 Move X0, [X0+1328]
	017 Call 0x1C17CF4
	018 Move X0, 0x2AC000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x324000
	022 Move X0, [X0+1336]
	023 Call 0x1C17CF4
	024 Move X0, 0x324000
	025 Move X0, [X0+1344]
	026 Call 0x1C17CF4
	027 Move X0, 0x324000
	028 Move X0, [X0+1320]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2058], W8
	032 Move X0, [X22]
	033 Move X19, [X19+40]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X20, [X8+8]
	041 Compare X20, 0
	042 JumpIfNotEqual {64}
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Move X9, 0x324000
	049 Move X8, [X0+184]
	050 Move X9, [X9+1336]
	051 Move X21, [X8]
	052 Move X0, [X9]
	053 Call 0x1C17F10
	054 Move X8, 0x324000
	055 Move X8, [X8+1344]
	056 Move X1, X21
	057 Move X3, X31
	058 Move X20, X0
	059 Move X2, [X8]
	060 Call Predicate`1<Object>..ctor, X0, X1, X2
	061 Move X8, [X22]
	062 Move X8, [X8+184]
	063 Move [X8+8], X20
	064 Compare X19, 0
	065 JumpIfEqual {91}
	066 Move X8, 0x324000
	067 Move X8, [X8+1328]
	068 Move X21, 0x2AC000
	069 Move X0, X19
	070 Move X1, X20
	071 Move X2, [X8]
	072 Move X21, [X21+1432]
	073 Call List`1<Object>.Find, X0, X1
	074 Move X8, [X21]
	075 Move X19, X0
	076 Move W9, [X8+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X1, X31
	087 Move X2, X31
	088 Move X30, [X31+48]
	089 Call Object.op_Inequality, X0, X1
	090 Return X0
	091 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.UI.Toggle> ActiveToggles()

Disassembly:
	0x03E4887C RET
	0x03E48880 ADRP X1, 0xFFFFFFFFFCCD3000
	0x03E48884 ADD X1, X1, 0xEE3
	0x03E48888 MOV X0, X31
	0x03E4888C BL 0x1C16F3C
	0x03E48890 MOV X1, X31
	0x03E48894 BL 0x1C16DEC
	0x03E48898 SUB X31, X31, 0x30
	0x03E4889C STR X30, [X31 + 0x20]
	0x03E488A0 LDR X9, [X1 + 0x10]
	0x03E488A4 LDR V1, [X1]
	0x03E488A8 LDR X10, [X0 + 0x18]
	0x03E488AC LDR X8, [X0 + 0x40]
	0x03E488B0 STR X9, [X31 + 0x10]
	0x03E488B4 STR V1, [X31]
	0x03E488B8 LDR X4, [X0 + 0x28]
	0x03E488BC ADD X1, X31, 0x0
	0x03E488C0 MOV X0, X8
	0x03E488C4 BLR X10
	0x03E488C8 LDR X30, [X31 + 0x20]
	0x03E488CC AND W0, W0, 0x1
	0x03E488D0 ADD X31, X31, 0x30
	0x03E488D4 RET
	0x03E488D8 SUB X31, X31, 0x90
	0x03E488DC STR X30, [X31 + 0x30]
	0x03E488E0 STP X28, X27, [X31 + 0x40]
	0x03E488E4 STP X26, X25, [X31 + 0x50]
	0x03E488E8 STP X24, X23, [X31 + 0x60]
	0x03E488EC STP X22, X21, [X31 + 0x70]
	0x03E488F0 STP X20, X19, [X31 + 0x80]
	0x03E488F4 STR S0, [X31 + 0x3C]
	0x03E488F8 STR W3, [X31 + 0x38]
	0x03E488FC ADRP X28, 0x5A0000
	0x03E48900 ADRP X27, 0x323000
	0x03E48904 ADRP X26, 0x2D6000
	0x03E48908 ADRP X25, 0x2AB000
	0x03E4890C ADRP X24, 0x2AB000
	0x03E48910 LDRB W8, [X28 + 0x811]
	0x03E48914 LDR X27, [X27 + 0x648]
	0x03E48918 LDR X26, [X26 + 0x6F0]
	0x03E4891C LDR X25, [X25 + 0xA90]
	0x03E48920 LDR X24, [X24 + 0x758]
	0x03E48924 MOV X19, X5
	0x03E48928 MOV X20, X4
	0x03E4892C MOV X22, X2
	0x03E48930 MOV X23, X1
	0x03E48934 MOV X21, X0
	0x03E48938 TBNZ X8, 0x0, 0x3E48974
	0x03E4893C ADRP X0, 0x2AB000
	0x03E48940 LDR X0, [X0 + 0x758]
	0x03E48944 BL 0x1C16CF4
	0x03E48948 ADRP X0, 0x323000
	0x03E4894C LDR X0, [X0 + 0x648]
	0x03E48950 BL 0x1C16CF4
	0x03E48954 ADRP X0, 0x2D6000
	0x03E48958 LDR X0, [X0 + 0x6F0]
	0x03E4895C BL 0x1C16CF4
	0x03E48960 ADRP X0, 0x2AB000
	0x03E48964 LDR X0, [X0 + 0xA90]
	0x03E48968 BL 0x1C16CF4
	0x03E4896C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5A1000
	008 Move X22, 0x324000
	009 Move W8, [X20+2059]
	010 Move X22, [X22+1320]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x324000
	017 Move X0, [X0+1384]
	018 Call 0x1C17CF4
	019 Move X0, 0x324000
	020 Move X0, [X0+1392]
	021 Call 0x1C17CF4
	022 Move X0, 0x324000
	023 Move X0, [X0+1400]
	024 Call 0x1C17CF4
	025 Move X0, 0x324000
	026 Move X0, [X0+1320]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2059], W8
	030 Move X0, [X22]
	031 Move X19, [X19+40]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Move X8, [X0+184]
	038 Move X23, 0x324000
	039 Move X20, [X8+16]
	040 Move X23, [X23+1384]
	041 Compare X20, 0
	042 JumpIfNotEqual {64}
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Move X9, 0x324000
	049 Move X8, [X0+184]
	050 Move X9, [X9+1392]
	051 Move X21, [X8]
	052 Move X0, [X9]
	053 Call 0x1C17F10
	054 Move X8, 0x324000
	055 Move X8, [X8+1400]
	056 Move X1, X21
	057 Move X3, X31
	058 Move X20, X0
	059 Move X2, [X8]
	060 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	061 Move X8, [X22]
	062 Move X8, [X8+184]
	063 Move [X8+16], X20
	064 Move X2, [X23]
	065 Move X0, X19
	066 Move X1, X20
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Call Enumerable.Where, X0, X1
	074 Return X0

Method: UnityEngine.UI.Toggle GetFirstActiveToggle()

Disassembly:
	0x03E48970 STRB W8, [X28 + 0x811]
	0x03E48974 LDR X0, [X27]
	0x03E48978 MOV X1, X23
	0x03E4897C STP X31, X31, [X31 + 0x18]
	0x03E48980 STR X31, [X31 + 0x28]
	0x03E48984 BL 0x1C16E04
	0x03E48988 LDR X8, [X26]
	0x03E4898C STR X0, [X31 + 0x8]
	0x03E48990 MOV X1, X22
	0x03E48994 MOV X0, X8
	0x03E48998 BL 0x1C16E04
	0x03E4899C LDR X8, [X25]
	0x03E489A0 STR X0, [X31 + 0x10]
	0x03E489A4 ADD X1, X31, 0x3C
	0x03E489A8 MOV X0, X8
	0x03E489AC BL 0x1C16E04
	0x03E489B0 LDR X8, [X24]
	0x03E489B4 STR X0, [X31 + 0x18]
	0x03E489B8 ADD X1, X31, 0x38
	0x03E489BC MOV X0, X8
	0x03E489C0 BL 0x1C16E04
	0x03E489C4 STR X0, [X31 + 0x20]
	0x03E489C8 ADD X1, X31, 0x8
	0x03E489CC MOV X0, X21
	0x03E489D0 MOV X2, X20
	0x03E489D4 MOV X3, X19
	0x03E489D8 BL 0x1C16CB0
	0x03E489DC LDP X20, X19, [X31 + 0x80]
	0x03E489E0 LDP X22, X21, [X31 + 0x70]
	0x03E489E4 LDP X24, X23, [X31 + 0x60]
	0x03E489E8 LDP X26, X25, [X31 + 0x50]
	0x03E489EC LDP X28, X27, [X31 + 0x40]
	0x03E489F0 LDR X30, [X31 + 0x30]
	0x03E489F4 ADD X31, X31, 0x90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5A1000
	006 Move X20, 0x324000
	007 Move W8, [X21+2060]
	008 Move X20, [X20+1248]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x324000
	015 Move X0, [X0+1248]
	016 Call 0x1C17CF4
	017 Move X0, 0x324000
	018 Move X0, [X0+1408]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2060], W8
	022 Move X0, X19
	023 Call ToggleGroup.ActiveToggles, X0
	024 Move X1, [X20]
	025 Move X19, X0
	026 Call Enumerable.Count, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, 0x324000
	029 Move X8, [X8+1408]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, [X8]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call Enumerable.First, X0
	037 Return X0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X0, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0

Method: System.Void SetAllTogglesOff(System.Boolean sendCallback = True)

Disassembly:
	0x03E489F8 RET
	0x03E489FC STR X30, [X31 - 0x10]!
	0x03E48A00 MOV X0, X2
	0x03E48A04 STR X1, [X31 + 0x8]
	0x03E48A08 ADD X1, X31, 0x8
	0x03E48A0C BL 0x1C16CB4
	0x03E48A10 CBZ X0, 0x3E48A24
	0x03E48A14 BL 0x1C16E08
	0x03E48A18 LDRB W0, [X0]
	0x03E48A1C LDR X30, [X31], #0x10
	0x03E48A20 RET
	0x03E48A24 BL 0x1C16F20
	0x03E48A28 STP X30, X21, [X31 - 0x20]!
	0x03E48A2C STP X20, X19, [X31 + 0x10]
	0x03E48A30 LDR X8, [X2 + 0x8]
	0x03E48A34 STP X1, X2, [X0 + 0x20]
	0x03E48A38 MOV X19, X0
	0x03E48A3C MOV X20, X1
	0x03E48A40 STR X8, [X0 + 0x10]
	0x03E48A44 LDRB W21, [X2 + 0x52]
	0x03E48A48 STR X0, [X0 + 0x40]
	0x03E48A4C MOV X0, X2
	0x03E48A50 BL 0x1C16D84
	0x03E48A54 TBZ X0, 0x0, 0x3E48A70
	0x03E48A58 CMP W21, 0x3
	0x03E48A5C B.NE 0x3E48A74
	0x03E48A60 ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E48A64 ADD X8, X8, 0x470
	0x03E48A68 STR X8, [X19 + 0x18]
	0x03E48A6C B 0x3E48A84
	0x03E48A70 CBZ X20, 0x3E48A9C
	0x03E48A74 LDR X8, [X19 + 0x10]
	0x03E48A78 LDR X9, [X19 + 0x20]
	0x03E48A7C STR X8, [X19 + 0x18]
	0x03E48A80 STR X9, [X19 + 0x40]
	0x03E48A84 ADRP X8, 0xFFFFFFFFFDDCD000
	0x03E48A88 ADD X8, X8, 0x3E8
	0x03E48A8C STR X8, [X19 + 0x38]
	0x03E48A90 LDP X20, X19, [X31 + 0x10]
	0x03E48A94 LDP X30, X21, [X31], #0x20
	0x03E48A98 RET
	0x03E48A9C ADRP X1, 0xFFFFFFFFFCCD3000
	0x03E48AA0 ADD X1, X1, 0xEE3
	0x03E48AA4 MOV X0, X31
	0x03E48AA8 BL 0x1C16F3C
	0x03E48AAC MOV X1, X31
	0x03E48AB0 BL 0x1C16DEC
	0x03E48AB4 SUB X31, X31, 0x30
	0x03E48AB8 STR X30, [X31 + 0x20]
	0x03E48ABC LDR X9, [X1 + 0x10]
	0x03E48AC0 LDR V1, [X1]
	0x03E48AC4 LDR X10, [X0 + 0x18]
	0x03E48AC8 LDR X8, [X0 + 0x40]
	0x03E48ACC STR X9, [X31 + 0x10]
	0x03E48AD0 STR V1, [X31]
	0x03E48AD4 LDR X3, [X0 + 0x28]
	0x03E48AD8 ADD X1, X31, 0x0
	0x03E48ADC MOV X0, X8
	0x03E48AE0 BLR X10
	0x03E48AE4 LDR X30, [X31 + 0x20]
	0x03E48AE8 ADD X31, X31, 0x30
	0x03E48AEC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5A1000
	007 Move W8, [X21+2061]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x324000
	015 Move X0, [X0+1272]
	016 Call 0x1C17CF4
	017 Move X0, 0x324000
	018 Move X0, [X0+1280]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2061], W8
	022 Move W21, [X19+32]
	023 Move X0, [X19+40]
	024 Move W8, 1
	025 Move [X19+32], W8
	026 Move TEMP, X20
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {49}
	030 Compare X0, 0
	031 JumpIfEqual {68}
	032 Move X22, 0x324000
	033 Move X22, [X22+1280]
	034 Move W20, W31
	035 Move W8, [X0+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X22]
	038 Move W1, W20
	039 Call List`1<Object>.get_Item, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {68}
	042 Move W2, 1
	043 Move W1, W31
	044 Call Toggle.Set, X0, X1, X2
	045 Move X0, [X19+40]
	046 Add W20, W20, 1
	047 Compare X0, 0
	048 JumpIfNotEqual {35}
	049 Compare X0, 0
	050 JumpIfEqual {68}
	051 Move X22, 0x324000
	052 Move X22, [X22+1280]
	053 Move W20, W31
	054 Move W8, [X0+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X2, [X22]
	057 Move W1, W20
	058 Call List`1<Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {68}
	061 Move W1, W31
	062 Move W2, W31
	063 Call Toggle.Set, X0, X1, X2
	064 Move X0, [X19+40]
	065 Add W20, W20, 1
	066 Compare X0, 0
	067 JumpIfNotEqual {54}
	068 Call 0x1C17F20
	069 Move [X19+32], W21
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 

