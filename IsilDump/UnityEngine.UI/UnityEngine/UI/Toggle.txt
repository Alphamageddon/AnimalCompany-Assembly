Type: UnityEngine.UI.Toggle

Method: UnityEngine.UI.ToggleGroup get_group()

Disassembly:
	0x03E477B8 LDP X20, X19, [X31 + 0x20]
	0x03E477BC LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void set_group(UnityEngine.UI.ToggleGroup value)

Disassembly:
	0x03E477C0 LDR X30, [X31], #0x30
	0x03E477C4 RET
	0x03E477C8 ADRP X0, 0x2AC000
	0x03E477CC LDR X0, [X0 + 0x9D0]
	0x03E477D0 BL 0x1C16D08
	0x03E477D4 MOVZ W1, 0x2
	0x03E477D8 BL 0x1C16D6C
	0x03E477DC MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, 1
	004 Move X19, X0
	005 Call Toggle.SetToggleGroup, X0, X1, X2
	006 Move W1, 1
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call Toggle.PlayEffect, X0, X1
	011 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E479E0 LDP X30, X21, [X31], #0x20
	0x03E479E4 B 0x21C2FD4
	0x03E479E8 LDP X20, X19, [X31 + 0x10]
	0x03E479EC MOV X0, X31
	0x03E479F0 LDP X30, X21, [X31], #0x20
	0x03E479F4 RET
	0x03E479F8 STR X30, [X31 - 0x30]!
	0x03E479FC STP X22, X21, [X31 + 0x10]
	0x03E47A00 STP X20, X19, [X31 + 0x20]
	0x03E47A04 ADRP X21, 0x5A1000
	0x03E47A08 LDRB W8, [X21 + 0x80D]
	0x03E47A0C MOV W20, W1
	0x03E47A10 MOV X19, X0
	0x03E47A14 TBNZ X8, 0x0, 0x3E47A38
	0x03E47A18 ADRP X0, 0x324000
	0x03E47A1C LDR X0, [X0 + 0x4F8]
	0x03E47A20 BL 0x1C16CF4
	0x03E47A24 ADRP X0, 0x324000
	0x03E47A28 LDR X0, [X0 + 0x500]
	0x03E47A2C BL 0x1C16CF4
	0x03E47A30 MOVZ W8, 0x1
	0x03E47A34 STRB W8, [X21 + 0x80D]
	0x03E47A38 LDRB W21, [X19 + 0x20]
	0x03E47A3C LDR X0, [X19 + 0x28]
	0x03E47A40 MOVZ W8, 0x1
	0x03E47A44 STRB W8, [X19 + 0x20]
	0x03E47A48 TBZ X20, 0x0, 0x3E47A94
	0x03E47A4C CBZ X0, 0x3E47AD8
	0x03E47A50 ADRP X22, 0x324000
	0x03E47A54 LDR X22, [X22 + 0x500]
	0x03E47A58 MOV W20, W31
	0x03E47A5C LDR W8, [X0 + 0x18]
	0x03E47A60 CMP W20, W8
	0x03E47A64 B.GE 0x3E47ADC
	0x03E47A68 LDR X2, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5A2000
	007 Move X20, 0x325000
	008 Move X21, 0x312000
	009 Move W8, [X22+2045]
	010 Move X20, [X20+1240]
	011 Move X21, [X21+2648]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x312000
	018 Move X0, [X0+2648]
	019 Call 0x1C17CF4
	020 Move X0, 0x325000
	021 Move X0, [X0+1240]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2045], W8
	025 Move W8, 1
	026 Move [X19+256], W8
	027 Move X0, [X20]
	028 Call 0x1C17F10
	029 Move X20, X0
	030 Call ToggleEvent..ctor, X0
	031 Move [X19+280], X20
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call Selectable..ctor, X0
	044 Return 

Method: System.Void Rebuild(UnityEngine.UI.CanvasUpdate executing)

Disassembly:
	0x03E47AB4 MOV W1, W20

ISIL:
	001 Return 

Method: System.Void LayoutComplete()

Disassembly:
	0x03E47AB8 BL 0x301BCCC

ISIL:
	001 Return 

Method: System.Void GraphicUpdateComplete()

Disassembly:
	0x03E47ABC CBZ X0, 0x3E47AD8

ISIL:
	001 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x03E47AC0 MOV W1, W31
	0x03E47AC4 MOV W2, W31
	0x03E47AC8 BL 0x3E470A0
	0x03E47ACC LDR X0, [X19 + 0x28]
	0x03E47AD0 ADD W20, W20, 0x1
	0x03E47AD4 CBNZ X0, 0x3E47AA4
	0x03E47AD8 BL 0x1C16F20
	0x03E47ADC STRB W21, [X19 + 0x20]
	0x03E47AE0 LDP X20, X19, [X31 + 0x20]
	0x03E47AE4 LDP X22, X21, [X31 + 0x10]
	0x03E47AE8 LDR X30, [X31], #0x30
	0x03E47AEC RET
	0x03E47AF0 STR X30, [X31 - 0x20]!
	0x03E47AF4 STP X20, X19, [X31 + 0x10]
	0x03E47AF8 ADRP X19, 0x5A1000
	0x03E47AFC ADRP X20, 0x324000
	0x03E47B00 LDRB W8, [X19 + 0x80E]
	0x03E47B04 LDR X20, [X20 + 0x528]
	0x03E47B08 TBNZ X8, 0x0, 0x3E47B20
	0x03E47B0C ADRP X0, 0x324000
	0x03E47B10 LDR X0, [X0 + 0x528]
	0x03E47B14 BL 0x1C16CF4
	0x03E47B18 MOVZ W8, 0x1
	0x03E47B1C STRB W8, [X19 + 0x80E]
	0x03E47B20 LDR X0, [X20]
	0x03E47B24 BL 0x1C16F10
	0x03E47B28 MOV X1, X31
	0x03E47B2C MOV X19, X0
	0x03E47B30 BL 0x33BDD8C
	0x03E47B34 LDR X8, [X20]
	0x03E47B38 LDR X8, [X8 + 0xB8]
	0x03E47B3C STR X19, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5A2000
	006 Move X20, 0x2AD000
	007 Move W8, [X21+2046]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2AD000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2046], W8
	019 Move X0, [X20]
	020 Move X20, [X19+272]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {37}
	033 Move X0, [X19+272]
	034 Compare X0, 0
	035 JumpIfEqual {45}
	036 Call ToggleGroup.EnsureValidState, X0
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call UIBehaviour.OnDestroy, X0
	044 Return 
	045 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03E47F30 BL 0x338C698
	0x03E47F34 LDR X8, [X25]
	0x03E47F38 MOV X20, X0
	0x03E47F3C MOVZ W1, 0x3
	0x03E47F40 MOV X0, X8
	0x03E47F44 BL 0x1C16D6C
	0x03E47F48 LDR X8, [X24]
	0x03E47F4C MOV X21, X0
	0x03E47F50 MOV X1, X31
	0x03E47F54 MOV X0, X8
	0x03E47F58 BL 0x338C698

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Selectable.OnEnable, X0
	005 Move X1, [X19+272]
	006 Move X0, X19
	007 Move W2, W31
	008 Call Toggle.SetToggleGroup, X0, X1, X2
	009 Move W1, 1
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call Toggle.PlayEffect, X0, X1
	014 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03E47F5C CBZ X21, 0x3E48794
	0x03E47F60 MOV X22, X0
	0x03E47F64 CBZ X0, 0x3E47F7C
	0x03E47F68 LDR X8, [X21]
	0x03E47F6C MOV X0, X22
	0x03E47F70 LDR X1, [X8 + 0x40]
	0x03E47F74 BL 0x1C16E00
	0x03E47F78 CBZ X0, 0x3E48788

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move W2, W31
	005 Move X19, X0
	006 Call Toggle.SetToggleGroup, X0, X1, X2
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call Selectable.OnDisable, X0
	011 Return 

Method: System.Void OnDidApplyAnimationProperties()

Disassembly:
	0x03E47F7C LDR W8, [X21 + 0x18]
	0x03E47F80 CBZ W8, 0x3E48784
	0x03E47F84 STR X22, [X21 + 0x20]
	0x03E47F88 LDR X0, [X26]
	0x03E47F8C MOV X1, X31
	0x03E47F90 BL 0x338C698
	0x03E47F94 MOV X22, X0
	0x03E47F98 CBZ X0, 0x3E47FB0
	0x03E47F9C LDR X8, [X21]
	0x03E47FA0 MOV X0, X22
	0x03E47FA4 LDR X1, [X8 + 0x40]
	0x03E47FA8 BL 0x1C16E00
	0x03E47FAC CBZ X0, 0x3E48788
	0x03E47FB0 LDR W8, [X21 + 0x18]
	0x03E47FB4 CMP W8, 0x1
	0x03E47FB8 B.LS 0x3E48784
	0x03E47FBC STR X22, [X21 + 0x28]
	0x03E47FC0 LDR X0, [X27]
	0x03E47FC4 MOV X1, X31
	0x03E47FC8 BL 0x338C698
	0x03E47FCC MOV X22, X0
	0x03E47FD0 CBZ X0, 0x3E47FE8
	0x03E47FD4 LDR X8, [X21]
	0x03E47FD8 MOV X0, X22
	0x03E47FDC LDR X1, [X8 + 0x40]
	0x03E47FE0 BL 0x1C16E00
	0x03E47FE4 CBZ X0, 0x3E48788
	0x03E47FE8 LDR W8, [X21 + 0x18]
	0x03E47FEC CMP W8, 0x2
	0x03E47FF0 B.LS 0x3E48784
	0x03E47FF4 STR X22, [X21 + 0x30]
	0x03E47FF8 CBZ X20, 0x3E48794
	0x03E47FFC ADRP X8, 0x324000
	0x03E48000 LDR X8, [X8 + 0x620]
	0x03E48004 MOV X0, X20
	0x03E48008 MOV X2, X21
	0x03E4800C MOV X3, X31
	0x03E48010 LDR X1, [X8]
	0x03E48014 BL 0x3397674
	0x03E48018 MOV X1, X31
	0x03E4801C MOV X2, X31
	0x03E48020 MOV X20, X0
	0x03E48024 BL 0x32CE528
	0x03E48028 TBZ X0, 0x0, 0x3E48094
	0x03E4802C ADRP X8, 0x323000
	0x03E48030 LDR X0, [X23]
	0x03E48034 LDR X8, [X8 + 0x5F0]
	0x03E48038 LDR W9, [X0 + 0xE0]
	0x03E4803C LDR X21, [X8]
	0x03E48040 CBNZ W9, 0x3E48048
	0x03E48044 BL 0x1C16DFC
	0x03E48048 MOV X0, X21
	0x03E4804C MOV X1, X31
	0x03E48050 BL 0x338C698
	0x03E48054 MOV X1, X20
	0x03E48058 MOV X2, X31
	0x03E4805C BL 0x33C4FD0
	0x03E48060 CBZ X0, 0x3E48090
	0x03E48064 ADRP X8, 0x323000
	0x03E48068 LDR X8, [X8 + 0x5F8]
	0x03E4806C LDR X1, [X8]
	0x03E48070 LDR X8, [X0]
	0x03E48074 CMP X8, X1
	0x03E48078 B.NE 0x3E48760
	0x03E4807C STR X0, [X19 + 0x18]
	0x03E48080 LDR X8, [X0]
	0x03E48084 CMP X8, X1
	0x03E48088 B.EQ 0x3E48094
	0x03E4808C B 0x3E48760
	0x03E48090 STR X0, [X19 + 0x18]
	0x03E48094 LDR X0, [X23]
	0x03E48098 LDR X20, [X29]
	0x03E4809C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5A2000
	007 Move X20, 0x2AD000
	008 Move W8, [X21+2047]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2AD000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2047], W8
	020 Move X0, [X20]
	021 Move X20, [X19+264]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {79}
	034 Move X0, [X19+264]
	035 Compare X0, 0
	036 JumpIfEqual {87}
	037 Move X1, X31
	038 Call Graphic.get_canvasRenderer, X0
	039 Compare X0, 0
	040 JumpIfEqual {87}
	041 Move X1, X31
	042 Call CanvasRenderer.GetColor, X0
	043 Move X20, 0x593000
	044 Move W8, [X20+1450]
	045 Move V8, V3
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x2B3000
	049 Move X0, [X0+1208]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1450], W8
	053 Move X8, 0x2B3000
	054 Move X8, [X8+1208]
	055 Move X9, -53858304
	056 Move V1, [X9+576]
	057 NotImplemented "Instruction FABS not yet implemented."
	058 Move X8, [X8]
	059 Move S2, W31
	060 NotImplemented "Instruction FMAXNM not yet implemented."
	061 Multiply S0, S0, S1
	062 Move X8, [X8+184]
	063 Move S1, 8
	064 Move W9, [X19+288]
	065 Move V3, [X8]
	066 Multiply S1, S3, S1
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 NotImplemented "Instruction FCSEL not yet implemented."
	069 NotImplemented "Instruction FABD not yet implemented."
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 NotImplemented "Instruction CSET not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move W2, 1
	076 Move X0, X19
	077 Move [X19+288], W8
	078 Call Toggle.Set, X0, X1, X2
	079 Move X0, X19
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Move V8, [X31+48]
	085 Call Selectable.OnSetProperty, X0
	086 Return 
	087 Call 0x1C17F20

Method: System.Void SetToggleGroup(UnityEngine.UI.ToggleGroup newGroup, System.Boolean setMemberValue)

Disassembly:
	0x03E477E0 BL 0x19903C0
	0x03E477E4 MOV X0, X21
	0x03E477E8 MOV X1, X20
	0x03E477EC BL 0x19980B4
	0x03E477F0 MOV X0, X21
	0x03E477F4 MOV X1, X31
	0x03E477F8 MOV X2, X20
	0x03E477FC BL 0x1993444
	0x03E47800 MOV X0, X21
	0x03E47804 BL 0x19903C0
	0x03E47808 MOV X0, X21
	0x03E4780C MOV X1, X19
	0x03E47810 BL 0x19980B4
	0x03E47814 MOVZ W1, 0x1
	0x03E47818 MOV X0, X21
	0x03E4781C MOV X2, X19
	0x03E47820 BL 0x1993444
	0x03E47824 ADRP X0, 0x324000
	0x03E47828 LDR X0, [X0 + 0x558]
	0x03E4782C BL 0x1C16D08
	0x03E47830 MOV X1, X21
	0x03E47834 MOV X2, X31
	0x03E47838 BL 0x3227C5C
	0x03E4783C MOV X19, X0
	0x03E47840 ADRP X0, 0x2B4000
	0x03E47844 LDR X0, [X0 + 0x578]
	0x03E47848 BL 0x1C16D08
	0x03E4784C BL 0x1C16F10
	0x03E47850 MOV X1, X19
	0x03E47854 MOV X2, X31
	0x03E47858 MOV X20, X0
	0x03E4785C BL 0x3314A68
	0x03E47860 ADRP X0, 0x324000
	0x03E47864 LDR X0, [X0 + 0x560]
	0x03E47868 BL 0x1C16D08
	0x03E4786C MOV X1, X0
	0x03E47870 MOV X0, X20
	0x03E47874 BL 0x1C16DEC
	0x03E47878 BL 0x1C16F20
	0x03E4787C STP X30, X23, [X31 - 0x30]!
	0x03E47880 STP X22, X21, [X31 + 0x10]
	0x03E47884 STP X20, X19, [X31 + 0x20]
	0x03E47888 ADRP X20, 0x5A1000
	0x03E4788C ADRP X22, 0x324000
	0x03E47890 LDRB W8, [X20 + 0x80B]
	0x03E47894 LDR X22, [X22 + 0x528]
	0x03E47898 MOV X19, X0
	0x03E4789C TBNZ X8, 0x0, 0x3E478D8
	0x03E478A0 ADRP X0, 0x324000
	0x03E478A4 LDR X0, [X0 + 0x568]
	0x03E478A8 BL 0x1C16CF4
	0x03E478AC ADRP X0, 0x324000
	0x03E478B0 LDR X0, [X0 + 0x570]
	0x03E478B4 BL 0x1C16CF4
	0x03E478B8 ADRP X0, 0x324000
	0x03E478BC LDR X0, [X0 + 0x578]
	0x03E478C0 BL 0x1C16CF4
	0x03E478C4 ADRP X0, 0x324000
	0x03E478C8 LDR X0, [X0 + 0x528]
	0x03E478CC BL 0x1C16CF4
	0x03E478D0 MOVZ W8, 0x1
	0x03E478D4 STRB W8, [X20 + 0x80B]
	0x03E478D8 LDR X0, [X22]
	0x03E478DC LDR X19, [X19 + 0x28]
	0x03E478E0 LDR W8, [X0 + 0xE0]
	0x03E478E4 CBNZ W8, 0x3E478F0
	0x03E478E8 BL 0x1C16DFC
	0x03E478EC LDR X0, [X22]
	0x03E478F0 LDR X8, [X0 + 0xB8]
	0x03E478F4 ADRP X23, 0x324000
	0x03E478F8 LDR X20, [X8 + 0x10]
	0x03E478FC LDR X23, [X23 + 0x568]
	0x03E47900 CBNZ X20, 0x3E47954
	0x03E47904 LDR W8, [X0 + 0xE0]
	0x03E47908 CBNZ W8, 0x3E47914
	0x03E4790C BL 0x1C16DFC
	0x03E47910 LDR X0, [X22]
	0x03E47914 ADRP X9, 0x324000
	0x03E47918 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5A2000
	008 Move X23, 0x2AD000
	009 Move W8, [X22+2048]
	010 Move X23, [X23+1432]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2AD000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2048], W8
	023 Move X0, [X23]
	024 Move X22, [X20+272]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {42}
	037 Move X0, [X20+272]
	038 Compare X0, 0
	039 JumpIfEqual {119}
	040 Move X1, X20
	041 Call ToggleGroup.UnregisterToggle, X0, X1
	042 Move TEMP, X21
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {47}
	046 Move [X20+272], X19
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {74}
	060 Move X8, [X20]
	061 Move X0, X20
	062 Move X9, [X8+456]
	063 Move X1, [X8+464]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {74}
	069 Compare X19, 0
	070 JumpIfEqual {119}
	071 Move X0, X19
	072 Move X1, X20
	073 Call ToggleGroup.RegisterToggle, X0, X1
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move X1, X31
	081 Move X2, X31
	082 Call Object.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {112}
	087 Move W8, [X20+288]
	088 Compare W8, 0
	089 JumpIfEqual {112}
	090 Move X8, [X20]
	091 Move X0, X20
	092 Move X9, [X8+456]
	093 Move X1, [X8+464]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {112}
	099 Compare X19, 0
	100 JumpIfEqual {119}
	101 Move X0, X19
	102 Move X1, X20
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move W2, 1
	108 Move X30, [X31+48]
	109 Move X23, [X31+56]
	110 Call ToggleGroup.NotifyToggleOn, X0, X1, X2
	111 Return 
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Move X23, [X31+56]
	118 Return 
	119 Call 0x1C17F20

Method: System.Boolean get_isOn()

Disassembly:
	0x03E48480 MOV X0, X22
	0x03E48484 LDR X1, [X8 + 0x40]

ISIL:
	001 Move W0, [X0+288]
	002 Return X0

Method: System.Void set_isOn(System.Boolean value)

Disassembly:
	0x03E48488 BL 0x1C16E00
	0x03E4848C CBZ X0, 0x3E48788
	0x03E48490 LDR W8, [X21 + 0x18]

ISIL:
	001 And W1, W1, 1
	002 Move W2, 1
	003 Call Toggle.Set, X0, X1, X2
	004 Return 

Method: System.Void SetIsOnWithoutNotify(System.Boolean value)

Disassembly:
	0x03E48494 CBZ W8, 0x3E48784
	0x03E48498 STR X22, [X21 + 0x20]
	0x03E4849C LDR X0, [X26]

ISIL:
	001 And W1, W1, 1
	002 Move W2, W31
	003 Call Toggle.Set, X0, X1, X2
	004 Return 

Method: System.Void Set(System.Boolean value, System.Boolean sendCallback = True)

Disassembly:
	0x03E480A0 CBNZ W8, 0x3E480A8
	0x03E480A4 BL 0x1C16DFC
	0x03E480A8 MOV X0, X20
	0x03E480AC MOV X1, X31
	0x03E480B0 BL 0x338C698
	0x03E480B4 LDR X8, [X25]
	0x03E480B8 MOV X20, X0
	0x03E480BC MOVZ W1, 0x4
	0x03E480C0 MOV X0, X8
	0x03E480C4 BL 0x1C16D6C
	0x03E480C8 LDR X8, [X24]
	0x03E480CC MOV X21, X0
	0x03E480D0 MOV X1, X31
	0x03E480D4 MOV X0, X8
	0x03E480D8 BL 0x338C698
	0x03E480DC CBZ X21, 0x3E48794
	0x03E480E0 MOV X22, X0
	0x03E480E4 CBZ X0, 0x3E480FC
	0x03E480E8 LDR X8, [X21]
	0x03E480EC MOV X0, X22
	0x03E480F0 LDR X1, [X8 + 0x40]
	0x03E480F4 BL 0x1C16E00
	0x03E480F8 CBZ X0, 0x3E48788
	0x03E480FC LDR W8, [X21 + 0x18]
	0x03E48100 CBZ W8, 0x3E48784
	0x03E48104 ADRP X8, 0x323000
	0x03E48108 LDR X8, [X8 + 0x608]
	0x03E4810C STR X22, [X21 + 0x20]
	0x03E48110 MOV X1, X31
	0x03E48114 LDR X0, [X8]
	0x03E48118 BL 0x338C698
	0x03E4811C MOV X22, X0
	0x03E48120 CBZ X0, 0x3E48138
	0x03E48124 LDR X8, [X21]
	0x03E48128 MOV X0, X22
	0x03E4812C LDR X1, [X8 + 0x40]
	0x03E48130 BL 0x1C16E00
	0x03E48134 CBZ X0, 0x3E48788
	0x03E48138 LDR W8, [X21 + 0x18]
	0x03E4813C CMP W8, 0x1
	0x03E48140 B.LS 0x3E48784
	0x03E48144 STR X22, [X21 + 0x28]
	0x03E48148 LDR X0, [X26]
	0x03E4814C MOV X1, X31
	0x03E48150 BL 0x338C698
	0x03E48154 MOV X22, X0
	0x03E48158 CBZ X0, 0x3E48170
	0x03E4815C LDR X8, [X21]
	0x03E48160 MOV X0, X22
	0x03E48164 LDR X1, [X8 + 0x40]
	0x03E48168 BL 0x1C16E00
	0x03E4816C CBZ X0, 0x3E48788
	0x03E48170 LDR W8, [X21 + 0x18]
	0x03E48174 CMP W8, 0x2
	0x03E48178 B.LS 0x3E48784
	0x03E4817C STR X22, [X21 + 0x30]
	0x03E48180 LDR X0, [X27]
	0x03E48184 MOV X1, X31
	0x03E48188 BL 0x338C698
	0x03E4818C MOV X22, X0
	0x03E48190 CBZ X0, 0x3E481A8
	0x03E48194 LDR X8, [X21]
	0x03E48198 MOV X0, X22
	0x03E4819C LDR X1, [X8 + 0x40]
	0x03E481A0 BL 0x1C16E00
	0x03E481A4 CBZ X0, 0x3E48788
	0x03E481A8 LDR W8, [X21 + 0x18]
	0x03E481AC CMP W8, 0x3
	0x03E481B0 B.LS 0x3E48784
	0x03E481B4 STR X22, [X21 + 0x38]
	0x03E481B8 CBZ X20, 0x3E48794
	0x03E481BC ADRP X8, 0x323000
	0x03E481C0 LDR X8, [X8 + 0x628]
	0x03E481C4 MOV X0, X20
	0x03E481C8 MOV X2, X21
	0x03E481CC MOV X3, X31
	0x03E481D0 LDR X1, [X8]
	0x03E481D4 BL 0x3397674
	0x03E481D8 MOV X1, X31
	0x03E481DC MOV X2, X31
	0x03E481E0 MOV X20, X0
	0x03E481E4 BL 0x32CE528
	0x03E481E8 TBZ X0, 0x0, 0x3E48254
	0x03E481EC ADRP X8, 0x323000
	0x03E481F0 LDR X0, [X23]
	0x03E481F4 LDR X8, [X8 + 0x5B0]
	0x03E481F8 LDR W9, [X0 + 0xE0]
	0x03E481FC LDR X21, [X8]
	0x03E48200 CBNZ W9, 0x3E48208
	0x03E48204 BL 0x1C16DFC
	0x03E48208 MOV X0, X21
	0x03E4820C MOV X1, X31
	0x03E48210 BL 0x338C698

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5A1000
	007 Move W8, [X22+2049]
	008 Move W20, W2
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2AC000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x311000
	019 Move X0, [X0+1856]
	020 Call 0x1C17CF4
	021 Move X0, 0x324000
	022 Move X0, [X0+1288]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2049], W8
	026 Move W8, [X19+288]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X19+288], W21
	029 Move X8, 0x2AC000
	030 Move X8, [X8+1432]
	031 Move X21, [X19+272]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {87}
	045 Move X0, [X19+272]
	046 Compare X0, 0
	047 JumpIfEqual {124}
	048 Move X1, X31
	049 Call Behaviour.get_isActiveAndEnabled, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {87}
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+456]
	057 Move X1, [X8+464]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {87}
	063 Move W8, [X19+288]
	064 Move X0, [X19+272]
	065 Compare W8, 0
	066 JumpIfEqual {74}
	067 Move W8, 1
	068 Move [X19+288], W8
	069 Compare X0, 0
	070 JumpIfEqual {124}
	071 And W2, W20, 1
	072 Move X1, X19
	073 Call ToggleGroup.NotifyToggleOn, X0, X1, X2
	074 Compare X0, 0
	075 JumpIfEqual {124}
	076 Call ToggleGroup.AnyTogglesOn, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {87}
	081 Move X0, [X19+272]
	082 Compare X0, 0
	083 JumpIfEqual {124}
	084 Move W8, [X0+32]
	085 Compare W8, 0
	086 JumpIfEqual {122}
	087 Move W8, [X19+256]
	088 Move X0, X19
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Call Toggle.PlayEffect, X0, X1
	092 Move TEMP, X20
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {116}
	096 Move X8, 0x324000
	097 Move X8, [X8+1288]
	098 Move X1, X19
	099 Move X2, X31
	100 Move X0, [X8]
	101 Call UISystemProfilerApi.AddMarker, X0, X1
	102 Move X0, [X19+280]
	103 Compare X0, 0
	104 JumpIfEqual {124}
	105 Move X8, 0x311000
	106 Move W1, [X19+288]
	107 Move X8, [X8+1856]
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X2, [X8]
	113 Move X30, [X31+48]
	114 Call 0x2729B08, X0, X1
	115 Return 
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Return 
	122 Move W8, 1
	123 Move [X19+288], W8
	124 Call 0x1C17F20

Method: System.Void PlayEffect(System.Boolean instant)

Disassembly:
	0x03E4791C LDR X9, [X9 + 0x570]
	0x03E47920 LDR X21, [X8]
	0x03E47924 LDR X0, [X9]
	0x03E47928 BL 0x1C16F10
	0x03E4792C ADRP X8, 0x324000
	0x03E47930 LDR X8, [X8 + 0x578]
	0x03E47934 MOV X1, X21
	0x03E47938 MOV X3, X31
	0x03E4793C MOV X20, X0
	0x03E47940 LDR X2, [X8]
	0x03E47944 BL 0x2D2F428
	0x03E47948 LDR X8, [X22]
	0x03E4794C LDR X8, [X8 + 0xB8]
	0x03E47950 STR X20, [X8 + 0x10]
	0x03E47954 LDR X2, [X23]
	0x03E47958 MOV X0, X19
	0x03E4795C MOV X1, X20
	0x03E47960 LDP X20, X19, [X31 + 0x20]
	0x03E47964 LDP X22, X21, [X31 + 0x10]
	0x03E47968 LDP X30, X23, [X31], #0x30
	0x03E4796C B 0x21DA490
	0x03E47970 STP X30, X21, [X31 - 0x20]!
	0x03E47974 STP X20, X19, [X31 + 0x10]
	0x03E47978 ADRP X21, 0x5A1000
	0x03E4797C ADRP X20, 0x324000
	0x03E47980 LDRB W8, [X21 + 0x80C]
	0x03E47984 LDR X20, [X20 + 0x4E0]
	0x03E47988 MOV X19, X0
	0x03E4798C TBNZ X8, 0x0, 0x3E479B0
	0x03E47990 ADRP X0, 0x324000
	0x03E47994 LDR X0, [X0 + 0x4E0]
	0x03E47998 BL 0x1C16CF4
	0x03E4799C ADRP X0, 0x324000
	0x03E479A0 LDR X0, [X0 + 0x580]
	0x03E479A4 BL 0x1C16CF4
	0x03E479A8 MOVZ W8, 0x1
	0x03E479AC STRB W8, [X21 + 0x80C]
	0x03E479B0 MOV X0, X19
	0x03E479B4 BL 0x3E4787C
	0x03E479B8 LDR X1, [X20]
	0x03E479BC MOV X19, X0
	0x03E479C0 BL 0x21BD4C4
	0x03E479C4 CMP W0, 0x1
	0x03E479C8 B.LT 0x3E479E8
	0x03E479CC ADRP X8, 0x324000
	0x03E479D0 LDR X8, [X8 + 0x580]
	0x03E479D4 MOV X0, X19
	0x03E479D8 LDP X20, X19, [X31 + 0x10]
	0x03E479DC LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5A2000
	007 Move X21, 0x2AD000
	008 Move W8, [X22+2050]
	009 Move X21, [X21+1432]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2AD000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2050], W8
	021 Move X0, [X21]
	022 Move X21, [X20+264]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {41}
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Move X0, [X20+264]
	042 Compare X0, 0
	043 JumpIfEqual {63}
	044 Move W8, [X20+288]
	045 Move X9, -53854208
	046 Move V1, [X9+188]
	047 Move X9, [X0]
	048 Move S0, 1
	049 Move S2, W31
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X3, [X9+1096]
	052 Move X2, [X9+1104]
	053 NotImplemented "Instruction FCSEL not yet implemented."
	054 And W31, W19, 1
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 NotImplemented "Instruction FCSEL not yet implemented."
	060 Move W1, 1
	061 Move X30, [X31+48]
	062 CallNoReturn X3
	063 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x03E485D8 BL 0x1C16D6C
	0x03E485DC LDR X8, [X24]

ISIL:
	001 Move W1, 1
	002 Call Toggle.PlayEffect, X0, X1
	003 Return 

Method: System.Void InternalToggle()

Disassembly:
	0x03E485E0 MOV X21, X0
	0x03E485E4 MOV X1, X31
	0x03E485E8 MOV X0, X8
	0x03E485EC BL 0x338C698
	0x03E485F0 CBZ X21, 0x3E48794
	0x03E485F4 MOV X22, X0
	0x03E485F8 CBZ X0, 0x3E48610
	0x03E485FC LDR X8, [X21]
	0x03E48600 MOV X0, X22
	0x03E48604 LDR X1, [X8 + 0x40]
	0x03E48608 BL 0x1C16E00
	0x03E4860C CBZ X0, 0x3E48788
	0x03E48610 LDR W8, [X21 + 0x18]
	0x03E48614 CBZ W8, 0x3E48784
	0x03E48618 ADRP X8, 0x323000
	0x03E4861C LDR X8, [X8 + 0x600]
	0x03E48620 STR X22, [X21 + 0x20]
	0x03E48624 MOV X1, X31
	0x03E48628 LDR X0, [X8]
	0x03E4862C BL 0x338C698
	0x03E48630 MOV X22, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+456]
	006 Move X1, [X8+464]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {30}
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+696]
	015 Move X1, [X8+704]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {30}
	021 Move W8, [X19+288]
	022 Move W2, 1
	023 Move X0, X19
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Call Toggle.Set, X0, X1, X2
	029 Return 
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Return 

Method: System.Void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E48634 CBZ X0, 0x3E4864C
	0x03E48638 LDR X8, [X21]
	0x03E4863C MOV X0, X22
	0x03E48640 LDR X1, [X8 + 0x40]
	0x03E48644 BL 0x1C16E00
	0x03E48648 CBZ X0, 0x3E48788
	0x03E4864C LDR W8, [X21 + 0x18]
	0x03E48650 CMP W8, 0x1
	0x03E48654 B.LS 0x3E48784

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {12}
	004 Move W8, [X1+328]
	005 Compare W8, 0
	006 JumpIfEqual {9}
	007 Move X30, [X31+16]
	008 Return 
	009 Move X30, [X31+16]
	010 Call Toggle.InternalToggle, X0
	011 Return 
	012 Call 0x1C17F20

Method: System.Void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData)

Disassembly:
	0x03E48658 STR X22, [X21 + 0x28]

ISIL:
	001 Call Toggle.InternalToggle, X0
	002 Return 

Method: UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform()

Disassembly:
	0x03E4865C LDR X0, [X26]
	0x03E48660 MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call Component.get_transform, X0
	003 Return X0

