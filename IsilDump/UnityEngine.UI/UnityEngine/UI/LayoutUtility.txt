Type: UnityEngine.UI.LayoutUtility

Method: System.Single GetMinSize(UnityEngine.RectTransform rect, System.Int32 axis)

Disassembly:
	0x03E31834 CSEL W8, W8, W9, EQ
	0x03E31838 CMP W8, 0x1
	0x03E3183C CSINC W20, W8, W31, GT

ISIL:
	001 Compare W1, 0
	002 JumpIfEqual {5}
	003 Call LayoutUtility.GetMinHeight, X0
	004 Return V0
	005 Call LayoutUtility.GetMinWidth, X0
	006 Return V0

Method: System.Single GetPreferredSize(UnityEngine.RectTransform rect, System.Int32 axis)

Disassembly:
	0x03E31840 B 0x3E31848
	0x03E31844 MOVN W20, 0x80000000
	0x03E31848 LDP W22, W8, [X19 + 0x60]

ISIL:
	001 Compare W1, 0
	002 JumpIfEqual {5}
	003 Call LayoutUtility.GetPreferredHeight, X0
	004 Return V0
	005 Call LayoutUtility.GetPreferredWidth, X0
	006 Return V0

Method: System.Single GetFlexibleSize(UnityEngine.RectTransform rect, System.Int32 axis)

Disassembly:
	0x03E34258 ADRP X0, 0x337000
	0x03E3425C LDR X0, [X0 + 0x170]
	0x03E34260 BL 0x1C16CF4

ISIL:
	001 Compare W1, 0
	002 JumpIfEqual {5}
	003 Call LayoutUtility.GetFlexibleHeight, X0
	004 Return V0
	005 Call LayoutUtility.GetFlexibleWidth, X0
	006 Return V0

Method: System.Single GetMinWidth(UnityEngine.RectTransform rect)

Disassembly:
	0x03E3651C LDR X0, [X19 + 0x30]
	0x03E36520 CBNZ X0, 0x3E3653C
	0x03E36524 ADRP X8, 0x335000
	0x03E36528 LDR X8, [X8 + 0x1F8]
	0x03E3652C MOV X0, X19
	0x03E36530 LDR X1, [X8]
	0x03E36534 BL 0x21A3894
	0x03E36538 STR X0, [X19 + 0x30]
	0x03E3653C LDP X20, X19, [X31 + 0x10]
	0x03E36540 LDR X30, [X31], #0x20
	0x03E36544 RET
	0x03E36548 MOVZ W8, 0x1
	0x03E3654C MOV X1, X31
	0x03E36550 STRB W8, [X0 + 0x28]
	0x03E36554 B 0x3E4E160
	0x03E36558 STR X30, [X31 - 0x20]!
	0x03E3655C STP X20, X19, [X31 + 0x10]
	0x03E36560 ADRP X20, 0x5B2000
	0x03E36564 LDRB W8, [X20 + 0x76D]
	0x03E36568 MOV X19, X0
	0x03E3656C TBNZ X8, 0x0, 0x3E36584
	0x03E36570 ADRP X0, 0x2BD000
	0x03E36574 LDR X0, [X0 + 0x598]
	0x03E36578 BL 0x1C16CF4
	0x03E3657C MOVZ W8, 0x1
	0x03E36580 STRB W8, [X20 + 0x76D]
	0x03E36584 LDR X8, [X19]
	0x03E36588 MOV X0, X19
	0x03E3658C LDP X9, X1, [X8 + 0x1C8]
	0x03E36590 BLR X9
	0x03E36594 TBZ X0, 0x0, 0x3E365D8
	0x03E36598 ADRP X20, 0x2BD000
	0x03E3659C LDR X20, [X20 + 0x598]
	0x03E365A0 MOV X0, X19
	0x03E365A4 BL 0x3E364F0
	0x03E365A8 LDR X8, [X20]
	0x03E365AC MOV X19, X0
	0x03E365B0 LDR W9, [X8 + 0xE0]
	0x03E365B4 CBNZ W9, 0x3E365C0
	0x03E365B8 MOV X0, X8
	0x03E365BC BL 0x1C16DFC
	0x03E365C0 MOV X0, X19
	0x03E365C4 LDP X20, X19, [X31 + 0x10]
	0x03E365C8 MOV X1, X31
	0x03E365CC MOV X2, X31
	0x03E365D0 LDR X30, [X31], #0x20
	0x03E365D4 B 0x3C354F8
	0x03E365D8 LDP X20, X19, [X31 + 0x10]
	0x03E365DC MOV W0, W31
	0x03E365E0 LDR X30, [X31], #0x20
	0x03E365E4 RET
	0x03E365E8 RET
	0x03E365EC STP X30, X21, [X31 - 0x20]!
	0x03E365F0 STP X20, X19, [X31 + 0x10]
	0x03E365F4 ADRP X21, 0x5B2000
	0x03E365F8 ADRP X20, 0x2BD000
	0x03E365FC LDRB W8, [X21 + 0x76E]
	0x03E36600 LDR X20, [X20 + 0x598]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5B3000
	007 Move X22, 0x336000
	008 Move W8, [X20+1882]
	009 Move X22, [X22+424]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x336000
	016 Move X0, [X0+432]
	017 Call 0x1C17CF4
	018 Move X0, 0x336000
	019 Move X0, [X0+448]
	020 Call 0x1C17CF4
	021 Move X0, 0x336000
	022 Move X0, [X0+424]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1882], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X20, [X8+8]
	034 Compare X20, 0
	035 JumpIfNotEqual {57}
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X22]
	041 Move X9, 0x336000
	042 Move X8, [X0+184]
	043 Move X9, [X9+432]
	044 Move X21, [X8]
	045 Move X0, [X9]
	046 Call 0x1C17F10
	047 Move X8, 0x336000
	048 Move X8, [X8+448]
	049 Move X1, X21
	050 Move X3, X31
	051 Move X20, X0
	052 Move X2, [X8]
	053 Call Func`2<Object, Single>..ctor, X0, X1, X2
	054 Move X8, [X22]
	055 Move X8, [X8+184]
	056 Move [X8+8], X20
	057 Move S0, W31
	058 Add X2, X31, 8
	059 Move X0, X19
	060 Move X1, X20
	061 Move [X31+8], X31
	062 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return V0

Method: System.Single GetPreferredWidth(UnityEngine.RectTransform rect)

Disassembly:
	0x03E3679C ADRP X0, 0x2E5000
	0x03E367A0 LDR X0, [X0 + 0xA20]
	0x03E367A4 BL 0x1C16CF4
	0x03E367A8 ADRP X0, 0x2E5000
	0x03E367AC LDR X0, [X0 + 0xA28]
	0x03E367B0 BL 0x1C16CF4
	0x03E367B4 ADRP X0, 0x335000
	0x03E367B8 LDR X0, [X0 + 0x208]
	0x03E367BC BL 0x1C16CF4
	0x03E367C0 ADRP X0, 0x335000
	0x03E367C4 LDR X0, [X0 + 0x210]
	0x03E367C8 BL 0x1C16CF4
	0x03E367CC ADRP X0, 0x2E5000
	0x03E367D0 LDR X0, [X0 + 0xA40]
	0x03E367D4 BL 0x1C16CF4
	0x03E367D8 ADRP X0, 0x2E5000
	0x03E367DC LDR X0, [X0 + 0xA48]
	0x03E367E0 BL 0x1C16CF4
	0x03E367E4 ADRP X0, 0x2BD000
	0x03E367E8 LDR X0, [X0 + 0x598]
	0x03E367EC BL 0x1C16CF4
	0x03E367F0 MOVZ W8, 0x1
	0x03E367F4 STRB W8, [X20 + 0x77B]
	0x03E367F8 LDR X0, [X24]
	0x03E367FC ADRP X20, 0x2E5000
	0x03E36800 LDR W8, [X0 + 0xE0]
	0x03E36804 LDR X20, [X20 + 0xA18]
	0x03E36808 CBNZ W8, 0x3E36810
	0x03E3680C BL 0x1C16DFC
	0x03E36810 LDR X0, [X20]
	0x03E36814 BL 0x28F98D4
	0x03E36818 CBZ X19, 0x3E369B8
	0x03E3681C ADRP X8, 0x335000
	0x03E36820 LDR X8, [X8 + 0x208]
	0x03E36824 MOV X20, X0
	0x03E36828 MOV X0, X19
	0x03E3682C MOV X1, X20
	0x03E36830 LDR X2, [X8]
	0x03E36834 BL 0x21A4608
	0x03E36838 CBZ X20, 0x3E369B8
	0x03E3683C LDR W8, [X20 + 0x18]
	0x03E36840 CMP W8, 0x1
	0x03E36844 B.LT 0x3E36980
	0x03E36848 ADRP X25, 0x2E5000
	0x03E3684C ADRP X26, 0x2BD000
	0x03E36850 ADRP X27, 0x335000
	0x03E36854 LDR X25, [X25 + 0xA48]
	0x03E36858 LDR X26, [X26 + 0x598]
	0x03E3685C LDR X27, [X27 + 0x210]
	0x03E36860 MOV W21, W31
	0x03E36864 LDR X2, [X25]
	0x03E36868 MOV X0, X20
	0x03E3686C MOV W1, W21
	0x03E36870 BL 0x301BCCC
	0x03E36874 LDR X8, [X26]
	0x03E36878 MOV X22, X0
	0x03E3687C LDR W9, [X8 + 0xE0]
	0x03E36880 CBNZ W9, 0x3E3688C
	0x03E36884 MOV X0, X8
	0x03E36888 BL 0x1C16DFC
	0x03E3688C MOV X0, X22
	0x03E36890 MOV X1, X31
	0x03E36894 MOV X2, X31
	0x03E36898 BL 0x3C3883C
	0x03E3689C TBNZ X0, 0x0, 0x3E36970
	0x03E368A0 LDR X2, [X25]
	0x03E368A4 MOV X0, X20
	0x03E368A8 MOV W1, W21
	0x03E368AC BL 0x301BCCC
	0x03E368B0 CBZ X0, 0x3E369B8
	0x03E368B4 MOV X1, X31
	0x03E368B8 BL 0x3C32ECC
	0x03E368BC MOV X22, X0
	0x03E368C0 MOV X0, X19
	0x03E368C4 MOV X1, X31
	0x03E368C8 BL 0x3C32ECC
	0x03E368CC LDR X8, [X26]
	0x03E368D0 MOV X23, X0
	0x03E368D4 LDR W9, [X8 + 0xE0]
	0x03E368D8 CBNZ W9, 0x3E368E4
	0x03E368DC MOV X0, X8
	0x03E368E0 BL 0x1C16DFC
	0x03E368E4 MOV X0, X22
	0x03E368E8 MOV X1, X23
	0x03E368EC MOV X2, X31
	0x03E368F0 BL 0x3C3883C
	0x03E368F4 TBNZ X0, 0x0, 0x3E36970
	0x03E368F8 LDR X2, [X25]
	0x03E368FC MOV X0, X20
	0x03E36900 MOV W1, W21
	0x03E36904 BL 0x301BCCC
	0x03E36908 LDR X1, [X27]
	0x03E3690C BL 0x1C16E00
	0x03E36910 CBZ X0, 0x3E36970
	0x03E36914 LDR X8, [X0]
	0x03E36918 LDR X1, [X27]
	0x03E3691C MOV X22, X0
	0x03E36920 LDRH W9, [X8 + 0x12E]
	0x03E36924 CBZ X9, 0x3E36948
	0x03E36928 LDR X10, [X8 + 0xB0]
	0x03E3692C ADD X10, X10, 0x8
	0x03E36930 LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x5B3000
	009 Move X22, 0x336000
	010 Move W8, [X20+1883]
	011 Move X22, [X22+424]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x336000
	018 Move X0, [X0+432]
	019 Call 0x1C17CF4
	020 Move X0, 0x336000
	021 Move X0, [X0+472]
	022 Call 0x1C17CF4
	023 Move X0, 0x336000
	024 Move X0, [X0+480]
	025 Call 0x1C17CF4
	026 Move X0, 0x336000
	027 Move X0, [X0+424]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1883], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Move X8, [X0+184]
	038 Move X20, [X8+16]
	039 Compare X20, 0
	040 JumpIfNotEqual {62}
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X9, 0x336000
	047 Move X8, [X0+184]
	048 Move X9, [X9+432]
	049 Move X21, [X8]
	050 Move X0, [X9]
	051 Call 0x1C17F10
	052 Move X8, 0x336000
	053 Move X8, [X8+472]
	054 Move X1, X21
	055 Move X3, X31
	056 Move X20, X0
	057 Move X2, [X8]
	058 Call Func`2<Object, Single>..ctor, X0, X1, X2
	059 Move X8, [X22]
	060 Move X8, [X8+184]
	061 Move [X8+16], X20
	062 Move S0, W31
	063 Add X2, X31, 8
	064 Move X0, X19
	065 Move X1, X20
	066 Move [X31+8], X31
	067 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	068 Move X0, [X22]
	069 Move V8, V0
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X22]
	075 Move X8, [X0+184]
	076 Move X20, [X8+24]
	077 Compare X20, 0
	078 JumpIfNotEqual {100}
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Move X9, 0x336000
	085 Move X8, [X0+184]
	086 Move X9, [X9+432]
	087 Move X21, [X8]
	088 Move X0, [X9]
	089 Call 0x1C17F10
	090 Move X8, 0x336000
	091 Move X8, [X8+480]
	092 Move X1, X21
	093 Move X3, X31
	094 Move X20, X0
	095 Move X2, [X8]
	096 Call Func`2<Object, Single>..ctor, X0, X1, X2
	097 Move X8, [X22]
	098 Move X8, [X8+184]
	099 Move [X8+24], X20
	100 Move S0, W31
	101 Add X2, X31, 8
	102 Move X0, X19
	103 Move X1, X20
	104 Move [X31+8], X31
	105 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction FCSEL not yet implemented."
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X30, [X31+24]
	113 Move V8, [X31+16]
	114 Add X31, X31, 64
	115 Return V0

Method: System.Single GetFlexibleWidth(UnityEngine.RectTransform rect)

Disassembly:
	0x03E36A1C LDR X8, [X20]
	0x03E36A20 MOV X20, X0
	0x03E36A24 LDR W9, [X8 + 0xE0]
	0x03E36A28 CBNZ W9, 0x3E36A34
	0x03E36A2C MOV X0, X8
	0x03E36A30 BL 0x1C16DFC
	0x03E36A34 MOV X0, X20
	0x03E36A38 MOV X1, X31
	0x03E36A3C MOV X2, X31
	0x03E36A40 BL 0x3C354F8
	0x03E36A44 TBZ X0, 0x0, 0x3E36B30
	0x03E36A48 MOV X0, X19
	0x03E36A4C BL 0x3E364F0
	0x03E36A50 CBZ X0, 0x3E36B7C
	0x03E36A54 LDR X8, [X0]
	0x03E36A58 LDR X9, [X8 + 0x308]
	0x03E36A5C LDR X1, [X8 + 0x310]
	0x03E36A60 BLR X9
	0x03E36A64 MOV X0, X19
	0x03E36A68 BL 0x3E364F0
	0x03E36A6C CBZ X0, 0x3E36B7C
	0x03E36A70 MOV X1, X31
	0x03E36A74 BL 0x3CDBD2C
	0x03E36A78 CBZ X0, 0x3E36B7C
	0x03E36A7C MOV W1, W31
	0x03E36A80 MOV X2, X31
	0x03E36A84 BL 0x3E22428
	0x03E36A88 MOV X0, X19
	0x03E36A8C BL 0x3E364F0
	0x03E36A90 CBZ X0, 0x3E36B7C
	0x03E36A94 MOV X1, X31
	0x03E36A98 BL 0x3CDBD2C
	0x03E36A9C CBZ X0, 0x3E36B7C
	0x03E36AA0 MOV W1, W31
	0x03E36AA4 MOV X2, X31
	0x03E36AA8 BL 0x3E224EC
	0x03E36AAC MOV X0, X19
	0x03E36AB0 BL 0x3E364F0
	0x03E36AB4 CBZ X0, 0x3E36B30
	0x03E36AB8 ADRP X20, 0x335000
	0x03E36ABC LDR X20, [X20 + 0x200]
	0x03E36AC0 LDR X9, [X0]
	0x03E36AC4 LDR X8, [X20]
	0x03E36AC8 LDRB W11, [X9 + 0x130]
	0x03E36ACC LDRB W10, [X8 + 0x130]
	0x03E36AD0 CMP W11, W10
	0x03E36AD4 B.CC 0x3E36B30
	0x03E36AD8 LDR X9, [X9 + 0xC8]
	0x03E36ADC ADD X9, X9, X10, 0x3, LSL
	0x03E36AE0 LDUR X9, [X9 - 0x8]
	0x03E36AE4 CMP X9, X8
	0x03E36AE8 B.NE 0x3E36B30
	0x03E36AEC MOV X0, X19
	0x03E36AF0 BL 0x3E364F0
	0x03E36AF4 CBZ X0, 0x3E36B7C
	0x03E36AF8 LDR X9, [X0]
	0x03E36AFC LDR X8, [X20]
	0x03E36B00 LDRB W11, [X9 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5B3000
	007 Move X22, 0x336000
	008 Move W8, [X20+1884]
	009 Move X22, [X22+424]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x336000
	016 Move X0, [X0+432]
	017 Call 0x1C17CF4
	018 Move X0, 0x336000
	019 Move X0, [X0+496]
	020 Call 0x1C17CF4
	021 Move X0, 0x336000
	022 Move X0, [X0+424]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1884], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X20, [X8+32]
	034 Compare X20, 0
	035 JumpIfNotEqual {57}
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X22]
	041 Move X9, 0x336000
	042 Move X8, [X0+184]
	043 Move X9, [X9+432]
	044 Move X21, [X8]
	045 Move X0, [X9]
	046 Call 0x1C17F10
	047 Move X8, 0x336000
	048 Move X8, [X8+496]
	049 Move X1, X21
	050 Move X3, X31
	051 Move X20, X0
	052 Move X2, [X8]
	053 Call Func`2<Object, Single>..ctor, X0, X1, X2
	054 Move X8, [X22]
	055 Move X8, [X8+184]
	056 Move [X8+32], X20
	057 Move S0, W31
	058 Add X2, X31, 8
	059 Move X0, X19
	060 Move X1, X20
	061 Move [X31+8], X31
	062 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return V0

Method: System.Single GetMinHeight(UnityEngine.RectTransform rect)

Disassembly:
	0x03E36434 RET
	0x03E36438 LDRB W0, [X0 + 0x28]
	0x03E3643C RET
	0x03E36440 STP X30, X21, [X31 - 0x20]!
	0x03E36444 STP X20, X19, [X31 + 0x10]
	0x03E36448 ADRP X21, 0x5B2000
	0x03E3644C LDRB W8, [X21 + 0x76B]
	0x03E36450 MOV X19, X0
	0x03E36454 AND W20, W1, 0x1
	0x03E36458 TBNZ X8, 0x0, 0x3E36470
	0x03E3645C ADRP X0, 0x2BD000
	0x03E36460 LDR X0, [X0 + 0x598]
	0x03E36464 BL 0x1C16CF4
	0x03E36468 MOVZ W8, 0x1
	0x03E3646C STRB W8, [X21 + 0x76B]
	0x03E36470 LDRB W8, [X19 + 0x28]
	0x03E36474 CMP W8, W20
	0x03E36478 B.EQ 0x3E364E0
	0x03E3647C MOV X0, X19
	0x03E36480 STRB W20, [X19 + 0x28]
	0x03E36484 BL 0x3E364F0
	0x03E36488 ADRP X8, 0x2BD000
	0x03E3648C LDR X8, [X8 + 0x598]
	0x03E36490 MOV X20, X0
	0x03E36494 LDR X8, [X8]
	0x03E36498 LDR W9, [X8 + 0xE0]
	0x03E3649C CBNZ W9, 0x3E364A8
	0x03E364A0 MOV X0, X8
	0x03E364A4 BL 0x1C16DFC
	0x03E364A8 MOV X0, X20
	0x03E364AC MOV X1, X31
	0x03E364B0 MOV X2, X31
	0x03E364B4 BL 0x3C354F8
	0x03E364B8 TBZ X0, 0x0, 0x3E364E0
	0x03E364BC MOV X0, X19
	0x03E364C0 BL 0x3E364F0
	0x03E364C4 CBZ X0, 0x3E364EC
	0x03E364C8 LDR X8, [X0]
	0x03E364CC LDP X20, X19, [X31 + 0x10]
	0x03E364D0 LDR X2, [X8 + 0x308]
	0x03E364D4 LDR X1, [X8 + 0x310]
	0x03E364D8 LDP X30, X21, [X31], #0x20
	0x03E364DC BR X2
	0x03E364E0 LDP X20, X19, [X31 + 0x10]
	0x03E364E4 LDP X30, X21, [X31], #0x20
	0x03E364E8 RET
	0x03E364EC BL 0x1C16F20
	0x03E364F0 STR X30, [X31 - 0x20]!
	0x03E364F4 STP X20, X19, [X31 + 0x10]
	0x03E364F8 ADRP X20, 0x5B2000
	0x03E364FC LDRB W8, [X20 + 0x76C]
	0x03E36500 MOV X19, X0
	0x03E36504 TBNZ X8, 0x0, 0x3E3651C
	0x03E36508 ADRP X0, 0x335000
	0x03E3650C LDR X0, [X0 + 0x1F8]
	0x03E36510 BL 0x1C16CF4
	0x03E36514 MOVZ W8, 0x1
	0x03E36518 STRB W8, [X20 + 0x76C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5B3000
	007 Move X22, 0x336000
	008 Move W8, [X20+1885]
	009 Move X22, [X22+424]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x336000
	016 Move X0, [X0+432]
	017 Call 0x1C17CF4
	018 Move X0, 0x336000
	019 Move X0, [X0+440]
	020 Call 0x1C17CF4
	021 Move X0, 0x336000
	022 Move X0, [X0+424]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1885], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X20, [X8+40]
	034 Compare X20, 0
	035 JumpIfNotEqual {57}
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X22]
	041 Move X9, 0x336000
	042 Move X8, [X0+184]
	043 Move X9, [X9+432]
	044 Move X21, [X8]
	045 Move X0, [X9]
	046 Call 0x1C17F10
	047 Move X8, 0x336000
	048 Move X8, [X8+440]
	049 Move X1, X21
	050 Move X3, X31
	051 Move X20, X0
	052 Move X2, [X8]
	053 Call Func`2<Object, Single>..ctor, X0, X1, X2
	054 Move X8, [X22]
	055 Move X8, [X8+184]
	056 Move [X8+40], X20
	057 Move S0, W31
	058 Add X2, X31, 8
	059 Move X0, X19
	060 Move X1, X20
	061 Move [X31+8], X31
	062 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return V0

Method: System.Single GetPreferredHeight(UnityEngine.RectTransform rect)

Disassembly:
	0x03E36604 MOV X19, X0
	0x03E36608 TBNZ X8, 0x0, 0x3E3662C
	0x03E3660C ADRP X0, 0x335000
	0x03E36610 LDR X0, [X0 + 0x200]
	0x03E36614 BL 0x1C16CF4
	0x03E36618 ADRP X0, 0x2BD000
	0x03E3661C LDR X0, [X0 + 0x598]
	0x03E36620 BL 0x1C16CF4
	0x03E36624 MOVZ W8, 0x1
	0x03E36628 STRB W8, [X21 + 0x76E]
	0x03E3662C MOV X0, X19
	0x03E36630 MOV X1, X31
	0x03E36634 BL 0x3E4BDBC
	0x03E36638 MOV X0, X19
	0x03E3663C BL 0x3E364F0
	0x03E36640 LDR X8, [X20]
	0x03E36644 MOV X20, X0
	0x03E36648 LDR W9, [X8 + 0xE0]
	0x03E3664C CBNZ W9, 0x3E36658
	0x03E36650 MOV X0, X8
	0x03E36654 BL 0x1C16DFC
	0x03E36658 MOV X0, X20
	0x03E3665C MOV X1, X31
	0x03E36660 MOV X2, X31
	0x03E36664 BL 0x3C354F8
	0x03E36668 TBZ X0, 0x0, 0x3E36738
	0x03E3666C MOV X0, X19
	0x03E36670 BL 0x3E364F0
	0x03E36674 CBZ X0, 0x3E36748
	0x03E36678 MOV X1, X31
	0x03E3667C BL 0x3CDBD2C
	0x03E36680 CBZ X0, 0x3E36748
	0x03E36684 MOVZ W1, 0x1
	0x03E36688 MOV X2, X31
	0x03E3668C BL 0x3E22428
	0x03E36690 MOV X0, X19
	0x03E36694 BL 0x3E364F0
	0x03E36698 CBZ X0, 0x3E36748
	0x03E3669C LDR X8, [X0]
	0x03E366A0 LDR X9, [X8 + 0x308]
	0x03E366A4 LDR X1, [X8 + 0x310]
	0x03E366A8 BLR X9
	0x03E366AC MOV X0, X19
	0x03E366B0 BL 0x3E364F0
	0x03E366B4 CBZ X0, 0x3E36738
	0x03E366B8 ADRP X20, 0x335000
	0x03E366BC LDR X20, [X20 + 0x200]
	0x03E366C0 LDR X9, [X0]
	0x03E366C4 LDR X8, [X20]
	0x03E366C8 LDRB W11, [X9 + 0x130]
	0x03E366CC LDRB W10, [X8 + 0x130]
	0x03E366D0 CMP W11, W10
	0x03E366D4 B.CC 0x3E36738
	0x03E366D8 LDR X9, [X9 + 0xC8]
	0x03E366DC ADD X9, X9, X10, 0x3, LSL
	0x03E366E0 LDUR X9, [X9 - 0x8]
	0x03E366E4 CMP X9, X8
	0x03E366E8 B.NE 0x3E36738
	0x03E366EC MOV X0, X19
	0x03E366F0 BL 0x3E364F0
	0x03E366F4 CBZ X0, 0x3E36748
	0x03E366F8 LDR X9, [X0]
	0x03E366FC LDR X8, [X20]
	0x03E36700 LDRB W11, [X9 + 0x130]
	0x03E36704 LDRB W10, [X8 + 0x130]
	0x03E36708 CMP W11, W10
	0x03E3670C B.CC 0x3E36748
	0x03E36710 LDR X9, [X9 + 0xC8]
	0x03E36714 ADD X9, X9, X10, 0x3, LSL
	0x03E36718 LDUR X9, [X9 - 0x8]
	0x03E3671C CMP X9, X8
	0x03E36720 B.NE 0x3E36748
	0x03E36724 LDRB W8, [X0 + 0xB9]
	0x03E36728 CMP W8, 0x1
	0x03E3672C B.EQ 0x3E36738
	0x03E36730 MOVZ W8, 0x1
	0x03E36734 STRB W8, [X0 + 0xB9]
	0x03E36738 MOV X0, X19
	0x03E3673C LDP X20, X19, [X31 + 0x10]
	0x03E36740 LDP X30, X21, [X31], #0x20
	0x03E36744 B 0x3E36764
	0x03E36748 BL 0x1C16F20
	0x03E3674C LDRB W9, [X0 + 0xB9]
	0x03E36750 AND W8, W1, 0x1
	0x03E36754 CMP W9, W8
	0x03E36758 B.EQ 0x3E36760
	0x03E3675C STRB W8, [X0 + 0xB9]
	0x03E36760 RET
	0x03E36764 STP X30, X27, [X31 - 0x50]!
	0x03E36768 STP X26, X25, [X31 + 0x10]
	0x03E3676C STP X24, X23, [X31 + 0x20]
	0x03E36770 STP X22, X21, [X31 + 0x30]
	0x03E36774 STP X20, X19, [X31 + 0x40]
	0x03E36778 ADRP X20, 0x5B2000
	0x03E3677C ADRP X24, 0x2E5000
	0x03E36780 LDRB W8, [X20 + 0x77B]
	0x03E36784 LDR X24, [X24 + 0xA28]
	0x03E36788 MOV X19, X0
	0x03E3678C TBNZ X8, 0x0, 0x3E367F8
	0x03E36790 ADRP X0, 0x2E5000
	0x03E36794 LDR X0, [X0 + 0xA18]
	0x03E36798 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x5B3000
	009 Move X22, 0x336000
	010 Move W8, [X20+1886]
	011 Move X22, [X22+424]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x336000
	018 Move X0, [X0+432]
	019 Call 0x1C17CF4
	020 Move X0, 0x336000
	021 Move X0, [X0+456]
	022 Call 0x1C17CF4
	023 Move X0, 0x336000
	024 Move X0, [X0+464]
	025 Call 0x1C17CF4
	026 Move X0, 0x336000
	027 Move X0, [X0+424]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1886], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Move X8, [X0+184]
	038 Move X20, [X8+48]
	039 Compare X20, 0
	040 JumpIfNotEqual {62}
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X9, 0x336000
	047 Move X8, [X0+184]
	048 Move X9, [X9+432]
	049 Move X21, [X8]
	050 Move X0, [X9]
	051 Call 0x1C17F10
	052 Move X8, 0x336000
	053 Move X8, [X8+456]
	054 Move X1, X21
	055 Move X3, X31
	056 Move X20, X0
	057 Move X2, [X8]
	058 Call Func`2<Object, Single>..ctor, X0, X1, X2
	059 Move X8, [X22]
	060 Move X8, [X8+184]
	061 Move [X8+48], X20
	062 Move S0, W31
	063 Add X2, X31, 8
	064 Move X0, X19
	065 Move X1, X20
	066 Move [X31+8], X31
	067 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	068 Move X0, [X22]
	069 Move V8, V0
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X22]
	075 Move X8, [X0+184]
	076 Move X20, [X8+56]
	077 Compare X20, 0
	078 JumpIfNotEqual {100}
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Move X9, 0x336000
	085 Move X8, [X0+184]
	086 Move X9, [X9+432]
	087 Move X21, [X8]
	088 Move X0, [X9]
	089 Call 0x1C17F10
	090 Move X8, 0x336000
	091 Move X8, [X8+464]
	092 Move X1, X21
	093 Move X3, X31
	094 Move X20, X0
	095 Move X2, [X8]
	096 Call Func`2<Object, Single>..ctor, X0, X1, X2
	097 Move X8, [X22]
	098 Move X8, [X8+184]
	099 Move [X8+56], X20
	100 Move S0, W31
	101 Add X2, X31, 8
	102 Move X0, X19
	103 Move X1, X20
	104 Move [X31+8], X31
	105 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction FCSEL not yet implemented."
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X30, [X31+24]
	113 Move V8, [X31+16]
	114 Add X31, X31, 64
	115 Return V0

Method: System.Single GetFlexibleHeight(UnityEngine.RectTransform rect)

Disassembly:
	0x03E36934 CMP X11, X1
	0x03E36938 B.EQ 0x3E36958
	0x03E3693C SUBS X9, X9, 0x1
	0x03E36940 ADD X10, X10, 0x10
	0x03E36944 B.NE 0x3E36930
	0x03E36948 MOV X0, X22
	0x03E3694C MOV W2, W31
	0x03E36950 BL 0x1C5C788
	0x03E36954 B 0x3E36964
	0x03E36958 LDRSW X9, [X10]
	0x03E3695C ADD X8, X8, X9, 0x4, LSL
	0x03E36960 ADD X0, X8, 0x138
	0x03E36964 LDP X8, X1, [X0]
	0x03E36968 MOV X0, X22
	0x03E3696C BLR X8
	0x03E36970 LDR W8, [X20 + 0x18]
	0x03E36974 ADD W21, W21, 0x1
	0x03E36978 CMP W21, W8
	0x03E3697C B.LT 0x3E36864
	0x03E36980 LDR X0, [X24]
	0x03E36984 ADRP X19, 0x2E5000
	0x03E36988 LDR W8, [X0 + 0xE0]
	0x03E3698C LDR X19, [X19 + 0xA20]
	0x03E36990 CBNZ W8, 0x3E36998
	0x03E36994 BL 0x1C16DFC
	0x03E36998 LDR X1, [X19]
	0x03E3699C MOV X0, X20
	0x03E369A0 LDP X20, X19, [X31 + 0x40]
	0x03E369A4 LDP X22, X21, [X31 + 0x30]
	0x03E369A8 LDP X24, X23, [X31 + 0x20]
	0x03E369AC LDP X26, X25, [X31 + 0x10]
	0x03E369B0 LDP X30, X27, [X31], #0x50
	0x03E369B4 B 0x28F9A14
	0x03E369B8 BL 0x1C16F20
	0x03E369BC STP X30, X21, [X31 - 0x20]!
	0x03E369C0 STP X20, X19, [X31 + 0x10]
	0x03E369C4 ADRP X21, 0x5B2000
	0x03E369C8 ADRP X20, 0x2BD000
	0x03E369CC LDRB W8, [X21 + 0x76F]
	0x03E369D0 LDR X20, [X20 + 0x598]
	0x03E369D4 MOV X19, X0
	0x03E369D8 TBNZ X8, 0x0, 0x3E36A08
	0x03E369DC ADRP X0, 0x335000
	0x03E369E0 LDR X0, [X0 + 0x200]
	0x03E369E4 BL 0x1C16CF4
	0x03E369E8 ADRP X0, 0x2BD000
	0x03E369EC LDR X0, [X0 + 0x598]
	0x03E369F0 BL 0x1C16CF4
	0x03E369F4 ADRP X0, 0x322000
	0x03E369F8 LDR X0, [X0 + 0x738]
	0x03E369FC BL 0x1C16CF4
	0x03E36A00 MOVZ W8, 0x1
	0x03E36A04 STRB W8, [X21 + 0x76F]
	0x03E36A08 MOV X0, X19
	0x03E36A0C MOV X1, X31
	0x03E36A10 BL 0x3E4BDC4
	0x03E36A14 MOV X0, X19
	0x03E36A18 BL 0x3E364F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5B3000
	007 Move X22, 0x336000
	008 Move W8, [X20+1887]
	009 Move X22, [X22+424]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x336000
	016 Move X0, [X0+432]
	017 Call 0x1C17CF4
	018 Move X0, 0x336000
	019 Move X0, [X0+488]
	020 Call 0x1C17CF4
	021 Move X0, 0x336000
	022 Move X0, [X0+424]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1887], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X20, [X8+64]
	034 Compare X20, 0
	035 JumpIfNotEqual {57}
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X22]
	041 Move X9, 0x336000
	042 Move X8, [X0+184]
	043 Move X9, [X9+432]
	044 Move X21, [X8]
	045 Move X0, [X9]
	046 Call 0x1C17F10
	047 Move X8, 0x336000
	048 Move X8, [X8+488]
	049 Move X1, X21
	050 Move X3, X31
	051 Move X20, X0
	052 Move X2, [X8]
	053 Call Func`2<Object, Single>..ctor, X0, X1, X2
	054 Move X8, [X22]
	055 Move X8, [X8+184]
	056 Move [X8+64], X20
	057 Move S0, W31
	058 Add X2, X31, 8
	059 Move X0, X19
	060 Move X1, X20
	061 Move [X31+8], X31
	062 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return V0

Method: System.Single GetLayoutProperty(UnityEngine.RectTransform rect, System.Func`2<UnityEngine.UI.ILayoutElement, System.Single> property, System.Single defaultValue)

Disassembly:
	0x03E36B04 LDRB W10, [X8 + 0x130]
	0x03E36B08 CMP W11, W10
	0x03E36B0C B.CC 0x3E36B7C
	0x03E36B10 LDR X9, [X9 + 0xC8]
	0x03E36B14 ADD X9, X9, X10, 0x3, LSL
	0x03E36B18 LDUR X9, [X9 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Add X2, X31, 8
	003 Move [X31+8], X31
	004 Call LayoutUtility.GetLayoutProperty, X0, X1, V0, X2
	005 Move X30, [X31+16]
	006 Return V0

Method: System.Single GetLayoutProperty(UnityEngine.RectTransform rect, System.Func`2<UnityEngine.UI.ILayoutElement, System.Single> property, System.Single defaultValue, out UnityEngine.UI.ILayoutElement source)

Disassembly:
	0x03E36B1C CMP X9, X8
	0x03E36B20 B.NE 0x3E36B7C
	0x03E36B24 LDRB W8, [X0 + 0xB9]
	0x03E36B28 CBZ W8, 0x3E36B30
	0x03E36B2C STRB W31, [X0 + 0xB9]
	0x03E36B30 ADRP X8, 0x322000
	0x03E36B34 LDR X8, [X8 + 0x738]
	0x03E36B38 LDR X20, [X19 + 0x38]
	0x03E36B3C LDR X0, [X8]
	0x03E36B40 LDR W8, [X0 + 0xE0]
	0x03E36B44 CBNZ W8, 0x3E36B4C
	0x03E36B48 BL 0x1C16DFC
	0x03E36B4C MOV X0, X20
	0x03E36B50 MOV X1, X31
	0x03E36B54 BL 0x3E44A50
	0x03E36B58 LDR X0, [X19 + 0x40]
	0x03E36B5C MOV X1, X31
	0x03E36B60 STR X31, [X19 + 0x38]
	0x03E36B64 BL 0x3E44A50
	0x03E36B68 STR X31, [X19 + 0x40]
	0x03E36B6C MOV X0, X19
	0x03E36B70 LDP X20, X19, [X31 + 0x10]
	0x03E36B74 LDP X30, X21, [X31], #0x20
	0x03E36B78 B 0x3E36764
	0x03E36B7C BL 0x1C16F20
	0x03E36B80 STP D9, D8, [X31 - 0x30]!
	0x03E36B84 STP X30, X21, [X31 + 0x10]
	0x03E36B88 STP X20, X19, [X31 + 0x20]
	0x03E36B8C ADRP X21, 0x5B2000
	0x03E36B90 LDRB W8, [X21 + 0x770]
	0x03E36B94 MOV X19, X1
	0x03E36B98 MOV V8.16B, V1.16B
	0x03E36B9C MOV V9.16B, V0.16B
	0x03E36BA0 MOV X20, X0
	0x03E36BA4 TBNZ X8, 0x0, 0x3E36BBC
	0x03E36BA8 ADRP X0, 0x313000
	0x03E36BAC LDR X0, [X0 + 0x6B8]
	0x03E36BB0 BL 0x1C16CF4
	0x03E36BB4 MOVZ W8, 0x1
	0x03E36BB8 STRB W8, [X21 + 0x770]
	0x03E36BBC MOV X0, X20
	0x03E36BC0 MOV X1, X31
	0x03E36BC4 BL 0x3C32454
	0x03E36BC8 TBZ X0, 0x0, 0x3E36C18
	0x03E36BCC ADRP X21, 0x313000
	0x03E36BD0 LDR X21, [X21 + 0x6B8]
	0x03E36BD4 MOV X0, X20
	0x03E36BD8 BL 0x3E363E0
	0x03E36BDC LDR X8, [X21]
	0x03E36BE0 MOV X20, X0
	0x03E36BE4 LDR W9, [X8 + 0xE0]
	0x03E36BE8 CBNZ W9, 0x3E36BF4
	0x03E36BEC MOV X0, X8
	0x03E36BF0 BL 0x1C16DFC
	0x03E36BF4 MOV X0, X20
	0x03E36BF8 MOV X1, X19
	0x03E36BFC LDP X20, X19, [X31 + 0x20]
	0x03E36C00 LDP X30, X21, [X31 + 0x10]
	0x03E36C04 MOV V0.16B, V9.16B
	0x03E36C08 MOV V1.16B, V8.16B
	0x03E36C0C MOV X2, X31
	0x03E36C10 LDP D9, D8, [X31], #0x30
	0x03E36C14 B 0x3E2333C
	0x03E36C18 LDP X20, X19, [X31 + 0x20]
	0x03E36C1C LDP X30, X21, [X31 + 0x10]
	0x03E36C20 MOVZ W0, 0x1
	0x03E36C24 LDP D9, D8, [X31], #0x30
	0x03E36C28 RET
	0x03E36C2C STP X30, X23, [X31 - 0x30]!
	0x03E36C30 STP X22, X21, [X31 + 0x10]
	0x03E36C34 STP X20, X19, [X31 + 0x20]
	0x03E36C38 ADRP X21, 0x5B2000
	0x03E36C3C LDRB W8, [X21 + 0x771]
	0x03E36C40 MOV X20, X1
	0x03E36C44 MOV X19, X0
	0x03E36C48 TBNZ X8, 0x0, 0x3E36C78
	0x03E36C4C ADRP X0, 0x2BD000
	0x03E36C50 LDR X0, [X0 + 0xA28]
	0x03E36C54 BL 0x1C16CF4
	0x03E36C58 ADRP X0, 0x322000
	0x03E36C5C LDR X0, [X0 + 0x738]
	0x03E36C60 BL 0x1C16CF4
	0x03E36C64 ADRP X0, 0x335000
	0x03E36C68 LDR X0, [X0 + 0x218]
	0x03E36C6C BL 0x1C16CF4
	0x03E36C70 MOVZ W8, 0x1
	0x03E36C74 STRB W8, [X21 + 0x771]
	0x03E36C78 LDR X8, [X19]
	0x03E36C7C MOV X0, X19
	0x03E36C80 LDR X9, [X8 + 0x268]
	0x03E36C84 LDR X1, [X8 + 0x270]
	0x03E36C88 BLR X9
	0x03E36C8C TBZ X0, 0x0, 0x3E36EA8
	0x03E36C90 MOV X0, X19
	0x03E36C94 MOV X1, X31
	0x03E36C98 BL 0x3C32E90
	0x03E36C9C BL 0x3E36EC0
	0x03E36CA0 MOV X21, X0
	0x03E36CA4 MOV X0, X19
	0x03E36CA8 MOV X1, X31
	0x03E36CAC BL 0x3C32E90
	0x03E36CB0 MOV X1, X21
	0x03E36CB4 BL 0x3E37060
	0x03E36CB8 CMP W0, 0x8
	0x03E36CBC B.GE 0x3E36D8C
	0x03E36CC0 ADRP X8, 0x322000
	0x03E36CC4 LDRB W9, [X19 + 0x28]
	0x03E36CC8 LDR X8, [X8 + 0x738]
	0x03E36CCC ANDS W31, W0, 0x1F
	0x03E36CD0 B.EQ 0x3E36DD4
	0x03E36CD4 LDR X8, [X8]
	0x03E36CD8 MOVZ W10, 0x1
	0x03E36CDC LSLV W10, W10, W0
	0x03E36CE0 SUB W21, W10, 0x1
	0x03E36CE4 LDR W11, [X8 + 0xE0]
	0x03E36CE8 CMP W9, 0x0
	0x03E36CEC MOVZ W9, 0xF
	0x03E36CF0 ORR W22, W21, W10, 0x0
	0x03E36CF4 CSEL W23, W31, W9, EQ
	0x03E36CF8 CBNZ W11, 0x3E36D04
	0x03E36CFC MOV X0, X8
	0x03E36D00 BL 0x1C16DFC
	0x03E36D04 MOVZ W2, 0x2
	0x03E36D08 MOVZ W3, 0x3
	0x03E36D0C MOV X0, X20
	0x03E36D10 MOV W1, W22
	0x03E36D14 MOV W4, W23
	0x03E36D18 MOV W5, W21
	0x03E36D1C MOV W6, W22
	0x03E36D20 MOV X7, X31
	0x03E36D24 BL 0x3E44030
	0x03E36D28 LDR X8, [X19 + 0x38]
	0x03E36D2C MOV X23, X0
	0x03E36D30 MOV X1, X31
	0x03E36D34 MOV X0, X8
	0x03E36D38 BL 0x3E44A50
	0x03E36D3C MOV X0, X19
	0x03E36D40 STR X23, [X19 + 0x38]
	0x03E36D44 BL 0x3E364F0
	0x03E36D48 CBZ X0, 0x3E36EBC
	0x03E36D4C MOV X1, X31
	0x03E36D50 BL 0x3CDBD2C
	0x03E36D54 CBZ X0, 0x3E36EBC
	0x03E36D58 MOVZ W1, 0x1
	0x03E36D5C MOV X2, X31
	0x03E36D60 BL 0x3E22428
	0x03E36D64 MOVZ W2, 0x2
	0x03E36D68 MOVZ W3, 0x3
	0x03E36D6C MOV X0, X20
	0x03E36D70 MOV W1, W21
	0x03E36D74 MOV W4, W31
	0x03E36D78 MOV W5, W21
	0x03E36D7C MOV W6, W22
	0x03E36D80 MOV X7, X31
	0x03E36D84 BL 0x3E44030
	0x03E36D88 B 0x3E36E40
	0x03E36D8C MOV X0, X19
	0x03E36D90 MOV X1, X31
	0x03E36D94 BL 0x3C32ECC
	0x03E36D98 ADRP X8, 0x2BD000
	0x03E36D9C LDR X8, [X8 + 0xA28]
	0x03E36DA0 MOV X19, X0
	0x03E36DA4 LDR X8, [X8]
	0x03E36DA8 LDR W9, [X8 + 0xE0]
	0x03E36DAC CBNZ W9, 0x3E36DB8
	0x03E36DB0 MOV X0, X8
	0x03E36DB4 BL 0x1C16DFC
	0x03E36DB8 ADRP X8, 0x335000
	0x03E36DBC LDR X8, [X8 + 0x218]
	0x03E36DC0 MOV X1, X19
	0x03E36DC4 MOV X2, X31
	0x03E36DC8 LDR X0, [X8]
	0x03E36DCC BL 0x3C06B0C
	0x03E36DD0 B 0x3E36EA8
	0x03E36DD4 LDR X0, [X8]
	0x03E36DD8 CMP W9, 0x0
	0x03E36DDC MOVZ W9, 0xF
	0x03E36DE0 CSEL W21, W31, W9, EQ
	0x03E36DE4 LDR W8, [X0 + 0xE0]
	0x03E36DE8 CBNZ W8, 0x3E36DF0
	0x03E36DEC BL 0x1C16DFC
	0x03E36DF0 MOVZ W1, 0x1
	0x03E36DF4 MOVZ W2, 0x2
	0x03E36DF8 MOVZ W3, 0x8
	0x03E36DFC MOV X0, X20
	0x03E36E00 MOV W4, W21
	0x03E36E04 MOV X5, X31
	0x03E36E08 BL 0x3E43FA4
	0x03E36E0C LDR X8, [X19 + 0x38]
	0x03E36E10 MOV X21, X0
	0x03E36E14 MOV X1, X31
	0x03E36E18 MOV X0, X8
	0x03E36E1C BL 0x3E44A50
	0x03E36E20 MOVZ W1, 0x1
	0x03E36E24 MOVZ W2, 0x1
	0x03E36E28 MOVZ W3, 0x8

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X23, 0x5B3000
	016 Move X21, 0x2BE000
	017 Move W8, [X23+1888]
	018 Move X21, [X21+1432]
	019 Move X19, X2
	020 Move V8, V0
	021 Move X20, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0x2E5000
	028 Move X0, [X0+1760]
	029 Call 0x1C17CF4
	030 Move X0, 0x2E6000
	031 Move X0, [X0+2584]
	032 Call 0x1C17CF4
	033 Move X0, 0x2E6000
	034 Move X0, [X0+2592]
	035 Call 0x1C17CF4
	036 Move X0, 0x2E6000
	037 Move X0, [X0+2600]
	038 Call 0x1C17CF4
	039 Move X0, 0x336000
	040 Move X0, [X0+376]
	041 Call 0x1C17CF4
	042 Move X0, 0x336000
	043 Move X0, [X0+408]
	044 Call 0x1C17CF4
	045 Move X0, 0x2E6000
	046 Move X0, [X0+2624]
	047 Call 0x1C17CF4
	048 Move X0, 0x2E6000
	049 Move X0, [X0+2632]
	050 Call 0x1C17CF4
	051 Move X0, 0x2BE000
	052 Move X0, [X0+1432]
	053 Call 0x1C17CF4
	054 Move X0, 0x2BE000
	055 Move X0, [X0+1728]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X23+1888], W8
	059 Move [X19], X31
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X22
	066 Move X1, X31
	067 Move X2, X31
	068 Call Object.op_Equality, X0, X1
	069 Move S9, W31
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {199}
	074 Move X8, 0x2E6000
	075 Move X8, [X8+2600]
	076 Move X24, 0x2E6000
	077 Move X21, 0x336000
	078 Move X23, 0x2BE000
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Move X24, [X24+2584]
	082 Move X21, [X21+376]
	083 Move X23, [X23+1728]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, [X24]
	088 Call CollectionPool`2<Object, Object>.Get
	089 Move X8, [X23]
	090 Move X23, [X21]
	091 Move X21, X0
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X23
	098 Move X1, X31
	099 Call Type.GetTypeFromHandle, X0
	100 Compare X22, 0
	101 JumpIfEqual {215}
	102 Move X1, X0
	103 Move X0, X22
	104 Move X2, X21
	105 Move X3, X31
	106 Call Component.GetComponents, X0, X1, X2
	107 Compare X21, 0
	108 JumpIfEqual {215}
	109 Move W26, [X21+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X27, 0x2E6000
	112 Move X28, 0x336000
	113 Move X25, 0x2E5000
	114 Move X27, [X27+2632]
	115 Move X28, [X28+408]
	116 Move X25, [X25+1760]
	117 Move W22, W31
	118 Move W29, 0x80000000
	119 Move X2, [X27]
	120 Move X0, X21
	121 Move W1, W22
	122 Call List`1<Object>.get_Item, X0, X1
	123 Move X1, [X28]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {215}
	127 Move X9, [X0]
	128 Move X8, [X25]
	129 Move X23, X0
	130 Move W11, [X9+304]
	131 Move W10, [X8+304]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X9, [X9+200]
	134 Add X9, X9, X10
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X23
	138 Move X1, X31
	139 Call Behaviour.get_isActiveAndEnabled, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {176}
	144 Move X8, [X23]
	145 Move X1, [X28]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move W2, 8
	156 Move X0, X23
	157 Call 0x1C5D788
	158 Move W9, [X10]
	159 Add W9, W9, 8
	160 Add X8, X8, W9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X23
	165 NotImplemented "Instruction BLR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Compare X20, 0
	168 JumpIfEqual {215}
	169 Move W24, W0
	170 Move X8, [X20+24]
	171 Move X0, [X20+64]
	172 Move X2, [X20+40]
	173 Move X1, X23
	174 NotImplemented "Instruction BLR not yet implemented."
	175 NotImplemented "Instruction FCMP not yet implemented."
	176 Move V9, V8
	177 Add W22, W22, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move V8, V9
	180 Move V9, V0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X19], X23
	183 Move W29, W24
	184 NotImplemented "Instruction FCMP not yet implemented."
	185 Move [X19], X23
	186 Move V9, V8
	187 Move X8, 0x2E6000
	188 Move X8, [X8+2600]
	189 Move X0, [X8]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X8, 0x2E6000
	195 Move X8, [X8+2592]
	196 Move X0, X21
	197 Move X1, [X8]
	198 Call CollectionPool`2<Object, Object>.Release, X0
	199 Move X20, [X31+96]
	200 Move X19, [X31+104]
	201 Move X22, [X31+80]
	202 Move X21, [X31+88]
	203 Move X24, [X31+64]
	204 Move X23, [X31+72]
	205 Move X26, [X31+48]
	206 Move X25, [X31+56]
	207 Move X28, [X31+32]
	208 Move X27, [X31+40]
	209 Move X29, [X31+16]
	210 Move X30, [X31+24]
	211 Move V0, V9
	212 Move D9, [X31+112]
	213 Move D8, [X31+120]
	214 Return V0
	215 Call 0x1C17F20

