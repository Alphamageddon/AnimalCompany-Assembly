Type: UnityEngine.UI.CanvasUpdateRegistry

Method: System.Void .ctor()

Disassembly:
	0x03CD15AC LDRB W8, [X20 + 0x436]
	0x03CD15B0 LDR X21, [X21 + 0x718]
	0x03CD15B4 MOV X19, X0
	0x03CD15B8 TBNZ X8, 0x0, 0x3CD15D0
	0x03CD15BC ADRP X0, 0x487000
	0x03CD15C0 LDR X0, [X0 + 0x718]
	0x03CD15C4 BL 0x1C16CF4
	0x03CD15C8 MOVZ W8, 0x1
	0x03CD15CC STRB W8, [X20 + 0x436]
	0x03CD15D0 LDR X0, [X21]
	0x03CD15D4 LDR W8, [X0 + 0xE0]
	0x03CD15D8 CBNZ W8, 0x3CD15E0
	0x03CD15DC BL 0x1C16DFC
	0x03CD15E0 BL 0x3CD077C
	0x03CD15E4 CBZ X0, 0x3CD15F8
	0x03CD15E8 MOV X1, X19
	0x03CD15EC LDP X20, X19, [X31 + 0x10]
	0x03CD15F0 LDP X30, X21, [X31], #0x20
	0x03CD15F4 B 0x3CD15FC
	0x03CD15F8 BL 0x1C16F20
	0x03CD15FC STP X30, X21, [X31 - 0x20]!
	0x03CD1600 STP X20, X19, [X31 + 0x10]
	0x03CD1604 ADRP X21, 0x716000
	0x03CD1608 LDRB W8, [X21 + 0x438]
	0x03CD160C MOV X19, X1
	0x03CD1610 MOV X20, X0
	0x03CD1614 TBNZ X8, 0x0, 0x3CD1638
	0x03CD1618 ADRP X0, 0x491000
	0x03CD161C LDR X0, [X0 + 0xD0]
	0x03CD1620 BL 0x1C16CF4
	0x03CD1624 ADRP X0, 0x491000
	0x03CD1628 LDR X0, [X0 + 0xD8]
	0x03CD162C BL 0x1C16CF4
	0x03CD1630 MOVZ W8, 0x1
	0x03CD1634 STRB W8, [X21 + 0x438]
	0x03CD1638 LDR X0, [X20 + 0x20]
	0x03CD163C CBZ X0, 0x3CD1690
	0x03CD1640 ADRP X8, 0x491000
	0x03CD1644 LDR X8, [X8 + 0xD8]
	0x03CD1648 MOV X1, X19
	0x03CD164C LDR X2, [X8]
	0x03CD1650 BL 0x2DE2A3C
	0x03CD1654 TBZ X0, 0x0, 0x3CD1668
	0x03CD1658 LDP X20, X19, [X31 + 0x10]
	0x03CD165C MOV W0, W31
	0x03CD1660 LDP X30, X21, [X31], #0x20
	0x03CD1664 RET
	0x03CD1668 LDR X0, [X20 + 0x20]
	0x03CD166C CBZ X0, 0x3CD1690
	0x03CD1670 ADRP X8, 0x491000
	0x03CD1674 LDR X8, [X8 + 0xD0]
	0x03CD1678 MOV X1, X19
	0x03CD167C LDP X20, X19, [X31 + 0x10]
	0x03CD1680 MOVZ W2, 0x1
	0x03CD1684 LDR X3, [X8]
	0x03CD1688 LDP X30, X21, [X31], #0x20
	0x03CD168C B 0x2DE276C
	0x03CD1690 BL 0x1C16F20
	0x03CD1694 STP X30, X21, [X31 - 0x20]!
	0x03CD1698 STP X20, X19, [X31 + 0x10]
	0x03CD169C ADRP X20, 0x716000
	0x03CD16A0 ADRP X21, 0x487000
	0x03CD16A4 LDRB W8, [X20 + 0x437]
	0x03CD16A8 LDR X21, [X21 + 0x718]
	0x03CD16AC MOV X19, X0
	0x03CD16B0 TBNZ X8, 0x0, 0x3CD16C8
	0x03CD16B4 ADRP X0, 0x487000
	0x03CD16B8 LDR X0, [X0 + 0x718]
	0x03CD16BC BL 0x1C16CF4
	0x03CD16C0 MOVZ W8, 0x1
	0x03CD16C4 STRB W8, [X20 + 0x437]
	0x03CD16C8 LDR X0, [X21]
	0x03CD16CC LDR W8, [X0 + 0xE0]
	0x03CD16D0 CBNZ W8, 0x3CD16D8
	0x03CD16D4 BL 0x1C16DFC
	0x03CD16D8 BL 0x3CD077C
	0x03CD16DC CBZ X0, 0x3CD16F0
	0x03CD16E0 MOV X1, X19
	0x03CD16E4 LDP X20, X19, [X31 + 0x10]
	0x03CD16E8 LDP X30, X21, [X31], #0x20
	0x03CD16EC B 0x3CD15FC
	0x03CD16F0 BL 0x1C16F20
	0x03CD16F4 STP X30, X21, [X31 - 0x20]!
	0x03CD16F8 STP X20, X19, [X31 + 0x10]
	0x03CD16FC ADRP X20, 0x716000
	0x03CD1700 ADRP X21, 0x487000
	0x03CD1704 LDRB W8, [X20 + 0x439]
	0x03CD1708 LDR X21, [X21 + 0x718]
	0x03CD170C MOV X19, X0
	0x03CD1710 TBNZ X8, 0x0, 0x3CD1728
	0x03CD1714 ADRP X0, 0x487000
	0x03CD1718 LDR X0, [X0 + 0x718]
	0x03CD171C BL 0x1C16CF4
	0x03CD1720 MOVZ W8, 0x1
	0x03CD1724 STRB W8, [X20 + 0x439]
	0x03CD1728 LDR X0, [X21]
	0x03CD172C LDR W8, [X0 + 0xE0]
	0x03CD1730 CBNZ W8, 0x3CD1738
	0x03CD1734 BL 0x1C16DFC
	0x03CD1738 BL 0x3CD077C
	0x03CD173C CBZ X0, 0x3CD1750
	0x03CD1740 MOV X1, X19
	0x03CD1744 LDP X20, X19, [X31 + 0x10]
	0x03CD1748 LDP X30, X21, [X31], #0x20
	0x03CD174C B 0x3CD1754
	0x03CD1750 BL 0x1C16F20
	0x03CD1754 STP X30, X21, [X31 - 0x20]!
	0x03CD1758 STP X20, X19, [X31 + 0x10]
	0x03CD175C ADRP X21, 0x716000
	0x03CD1760 LDRB W8, [X21 + 0x43B]
	0x03CD1764 MOV X19, X1
	0x03CD1768 MOV X20, X0
	0x03CD176C TBNZ X8, 0x0, 0x3CD179C
	0x03CD1770 ADRP X0, 0x422000
	0x03CD1774 LDR X0, [X0 + 0xA28]
	0x03CD1778 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x717000
	009 Move X21, 0x423000
	010 Move W8, [X20+1071]
	011 Move X21, [X21+2760]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {49}
	017 Move X0, 0x492000
	018 Move X0, [X0+72]
	019 Call 0x1C17CF4
	020 Move X0, 0x492000
	021 Move X0, [X0+80]
	022 Call 0x1C17CF4
	023 Move X0, 0x492000
	024 Move X0, [X0+88]
	025 Call 0x1C17CF4
	026 Move X0, 0x423000
	027 Move X0, [X0+2760]
	028 Call 0x1C17CF4
	029 Move X0, 0x489000
	030 Move X0, [X0+1072]
	031 Call 0x1C17CF4
	032 Move X0, 0x492000
	033 Move X0, [X0+96]
	034 Call 0x1C17CF4
	035 Move X0, 0x492000
	036 Move X0, [X0+104]
	037 Call 0x1C17CF4
	038 Move X0, 0x492000
	039 Move X0, [X0+112]
	040 Call 0x1C17CF4
	041 Move X0, 0x492000
	042 Move X0, [X0+120]
	043 Call 0x1C17CF4
	044 Move X0, 0x492000
	045 Move X0, [X0+128]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1071], W8
	049 Move X0, [X21]
	050 Move W1, 5
	051 Call 0x1C17D6C
	052 Compare X0, 0
	053 JumpIfEqual {124}
	054 Move W8, [X0+24]
	055 Compare W8, 0
	056 JumpIfEqual {123}
	057 Move X9, 0x492000
	058 Move X9, [X9+128]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, [X9]
	061 Move [X0+32], X9
	062 Move X9, 0x492000
	063 Move X9, [X9+96]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, [X9]
	066 Move [X0+40], X9
	067 Move X9, 0x492000
	068 Move X9, [X9+120]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9]
	071 Move [X0+48], X9
	072 Move X9, 0x492000
	073 Move X9, [X9+104]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, [X9]
	076 Move [X0+56], X9
	077 Move X8, 0x492000
	078 Move X8, [X8+112]
	079 Move X21, 0x492000
	080 Move X22, 0x492000
	081 Move X23, 0x489000
	082 Move X8, [X8]
	083 Move X21, [X21+88]
	084 Move X24, 0x492000
	085 Move [X0+64], X8
	086 Move [X19+24], X0
	087 Move X0, [X21]
	088 Move X22, [X22+80]
	089 Move X23, [X23+1072]
	090 Move X24, [X24+72]
	091 Call 0x1C17F10
	092 Move X1, [X22]
	093 Move X20, X0
	094 Call 0x2DE3F98, X0
	095 Move [X19+32], X20
	096 Move X0, [X21]
	097 Call 0x1C17F10
	098 Move X1, [X22]
	099 Move X20, X0
	100 Call 0x2DE3F98, X0
	101 Move X0, X19
	102 Move X1, X31
	103 Move [X19+40], X20
	104 Call Object..ctor, X0
	105 Move X0, [X23]
	106 Call 0x1C17F10
	107 Move X2, [X24]
	108 Move X1, X19
	109 Move X3, X31
	110 Move X20, X0
	111 Call WillRenderCanvases..ctor, X0, X1, X2
	112 Move X0, X20
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X1, X31
	120 Move X30, [X31+64]
	121 Call Canvas.add_willRenderCanvases, X0
	122 Return 
	123 Call 0x1C17F28
	124 Call 0x1C17F20

Method: UnityEngine.UI.CanvasUpdateRegistry get_instance()

Disassembly:
	0x03CD177C ADRP X0, 0x491000
	0x03CD1780 LDR X0, [X0 + 0xD0]
	0x03CD1784 BL 0x1C16CF4
	0x03CD1788 ADRP X0, 0x491000
	0x03CD178C LDR X0, [X0 + 0xE0]
	0x03CD1790 BL 0x1C16CF4
	0x03CD1794 MOVZ W8, 0x1
	0x03CD1798 STRB W8, [X21 + 0x43B]
	0x03CD179C LDRB W8, [X20 + 0x11]
	0x03CD17A0 CBZ W8, 0x3CD17F8
	0x03CD17A4 ADRP X8, 0x491000
	0x03CD17A8 LDR X8, [X8 + 0xE0]
	0x03CD17AC ADRP X20, 0x422000
	0x03CD17B0 MOV X1, X19
	0x03CD17B4 MOV X2, X31
	0x03CD17B8 LDR X0, [X8]
	0x03CD17BC LDR X20, [X20 + 0xA28]
	0x03CD17C0 BL 0x321EFD0
	0x03CD17C4 LDR X8, [X20]
	0x03CD17C8 MOV X19, X0
	0x03CD17CC LDR W9, [X8 + 0xE0]
	0x03CD17D0 CBNZ W9, 0x3CD17DC
	0x03CD17D4 MOV X0, X8
	0x03CD17D8 BL 0x1C16DFC
	0x03CD17DC MOV X0, X19
	0x03CD17E0 MOV X1, X31
	0x03CD17E4 BL 0x3C0649C
	0x03CD17E8 LDP X20, X19, [X31 + 0x10]
	0x03CD17EC MOV W0, W31
	0x03CD17F0 LDP X30, X21, [X31], #0x20
	0x03CD17F4 RET
	0x03CD17F8 LDR X0, [X20 + 0x28]
	0x03CD17FC CBZ X0, 0x3CD1820
	0x03CD1800 ADRP X8, 0x491000
	0x03CD1804 LDR X8, [X8 + 0xD0]
	0x03CD1808 MOV X1, X19
	0x03CD180C LDP X20, X19, [X31 + 0x10]
	0x03CD1810 MOVZ W2, 0x1
	0x03CD1814 LDR X3, [X8]
	0x03CD1818 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x717000
	005 Move X20, 0x488000
	006 Move W8, [X19+1072]
	007 Move X20, [X20+1816]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x488000
	013 Move X0, [X0+1816]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1072], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X20]
	023 Move X8, [X0+184]
	024 Move X8, [X8]
	025 Compare X8, 0
	026 JumpIfNotEqual {39}
	027 Call 0x1C17F10
	028 Move X19, X0
	029 Call CanvasUpdateRegistry..ctor, X0
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move [X8], X19
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X0, [X8]
	048 Move X30, [X31+32]
	049 Return X0

Method: System.Boolean ObjectValidForUpdate(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD181C B 0x2DE276C
	0x03CD1820 BL 0x1C16F20
	0x03CD1824 STP X30, X21, [X31 - 0x20]!
	0x03CD1828 STP X20, X19, [X31 + 0x10]
	0x03CD182C ADRP X20, 0x716000
	0x03CD1830 ADRP X21, 0x487000
	0x03CD1834 LDRB W8, [X20 + 0x43A]
	0x03CD1838 LDR X21, [X21 + 0x718]
	0x03CD183C MOV X19, X0
	0x03CD1840 TBNZ X8, 0x0, 0x3CD1858
	0x03CD1844 ADRP X0, 0x487000
	0x03CD1848 LDR X0, [X0 + 0x718]
	0x03CD184C BL 0x1C16CF4
	0x03CD1850 MOVZ W8, 0x1
	0x03CD1854 STRB W8, [X20 + 0x43A]
	0x03CD1858 LDR X0, [X21]
	0x03CD185C LDR W8, [X0 + 0xE0]
	0x03CD1860 CBNZ W8, 0x3CD1868
	0x03CD1864 BL 0x1C16DFC
	0x03CD1868 BL 0x3CD077C
	0x03CD186C CBZ X0, 0x3CD1880
	0x03CD1870 MOV X1, X19
	0x03CD1874 LDP X20, X19, [X31 + 0x10]
	0x03CD1878 LDP X30, X21, [X31], #0x20
	0x03CD187C B 0x3CD1754
	0x03CD1880 BL 0x1C16F20
	0x03CD1884 STP X30, X21, [X31 - 0x20]!
	0x03CD1888 STP X20, X19, [X31 + 0x10]
	0x03CD188C ADRP X20, 0x716000
	0x03CD1890 ADRP X21, 0x487000
	0x03CD1894 LDRB W8, [X20 + 0x43C]
	0x03CD1898 LDR X21, [X21 + 0x718]
	0x03CD189C MOV X19, X0
	0x03CD18A0 TBNZ X8, 0x0, 0x3CD18B8
	0x03CD18A4 ADRP X0, 0x487000
	0x03CD18A8 LDR X0, [X0 + 0x718]
	0x03CD18AC BL 0x1C16CF4
	0x03CD18B0 MOVZ W8, 0x1
	0x03CD18B4 STRB W8, [X20 + 0x43C]
	0x03CD18B8 LDR X0, [X21]
	0x03CD18BC LDR W8, [X0 + 0xE0]
	0x03CD18C0 CBNZ W8, 0x3CD18C8
	0x03CD18C4 BL 0x1C16DFC
	0x03CD18C8 BL 0x3CD077C
	0x03CD18CC CBZ X0, 0x3CD18F0
	0x03CD18D0 MOV X1, X19
	0x03CD18D4 BL 0x3CD18F4
	0x03CD18D8 BL 0x3CD077C
	0x03CD18DC CBZ X0, 0x3CD18F0
	0x03CD18E0 MOV X1, X19
	0x03CD18E4 LDP X20, X19, [X31 + 0x10]
	0x03CD18E8 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x717000
	005 Move W8, [X20+1073]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x423000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1073], W8
	016 Compare X19, 0
	017 JumpIfEqual {30}
	018 Move X20, 0x423000
	019 Move X20, [X20+1432]
	020 Move X8, [X19]
	021 Move X0, [X20]
	022 Move W10, [X8+304]
	023 Move W9, [X0+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X11, [X8+200]
	026 Add X11, X11, X9
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W0, 1
	030 Move W0, W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Move W11, [X0+224]
	036 Compare W11, 0
	037 JumpIfNotEqual {43}
	038 Call 0x1C17DFC
	039 Move X8, [X19]
	040 Move X0, [X20]
	041 Move W10, [X8+304]
	042 Move W9, [X0+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X31
	045 Move X8, [X8+200]
	046 Add X8, X8, W9
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X1, X31
	053 Move X2, X31
	054 Move X30, [X31+32]
	055 Call Object.op_Inequality, X0, X1
	056 Return X0

Method: System.Void CleanInvalidItems()

Disassembly:
	0x03CD18EC B 0x3CD1A58
	0x03CD18F0 BL 0x1C16F20
	0x03CD18F4 STP X30, X21, [X31 - 0x20]!
	0x03CD18F8 STP X20, X19, [X31 + 0x10]
	0x03CD18FC ADRP X21, 0x716000
	0x03CD1900 LDRB W8, [X21 + 0x43E]
	0x03CD1904 MOV X19, X1
	0x03CD1908 MOV X20, X0
	0x03CD190C TBNZ X8, 0x0, 0x3CD1954
	0x03CD1910 ADRP X0, 0x487000
	0x03CD1914 LDR X0, [X0 + 0x718]
	0x03CD1918 BL 0x1C16CF4
	0x03CD191C ADRP X0, 0x422000
	0x03CD1920 LDR X0, [X0 + 0xA28]
	0x03CD1924 BL 0x1C16CF4
	0x03CD1928 ADRP X0, 0x488000
	0x03CD192C LDR X0, [X0 + 0xB20]
	0x03CD1930 BL 0x1C16CF4
	0x03CD1934 ADRP X0, 0x491000
	0x03CD1938 LDR X0, [X0 + 0xE8]
	0x03CD193C BL 0x1C16CF4
	0x03CD1940 ADRP X0, 0x491000
	0x03CD1944 LDR X0, [X0 + 0xF0]
	0x03CD1948 BL 0x1C16CF4
	0x03CD194C MOVZ W8, 0x1
	0x03CD1950 STRB W8, [X21 + 0x43E]
	0x03CD1954 LDRB W8, [X20 + 0x10]
	0x03CD1958 CBZ W8, 0x3CD19A8
	0x03CD195C ADRP X8, 0x491000
	0x03CD1960 LDR X8, [X8 + 0xF0]
	0x03CD1964 ADRP X20, 0x422000
	0x03CD1968 MOV X1, X19
	0x03CD196C MOV X2, X31
	0x03CD1970 LDR X0, [X8]
	0x03CD1974 LDR X20, [X20 + 0xA28]
	0x03CD1978 BL 0x321EFD0
	0x03CD197C LDR X8, [X20]
	0x03CD1980 MOV X19, X0
	0x03CD1984 LDR W9, [X8 + 0xE0]
	0x03CD1988 CBNZ W9, 0x3CD1994
	0x03CD198C MOV X0, X8
	0x03CD1990 BL 0x1C16DFC
	0x03CD1994 MOV X0, X19
	0x03CD1998 LDP X20, X19, [X31 + 0x10]
	0x03CD199C MOV X1, X31
	0x03CD19A0 LDP X30, X21, [X31], #0x20
	0x03CD19A4 B 0x3C0649C
	0x03CD19A8 CBZ X19, 0x3CD1A54
	0x03CD19AC ADRP X10, 0x488000
	0x03CD19B0 LDR X8, [X19]
	0x03CD19B4 LDR X10, [X10 + 0xB20]
	0x03CD19B8 LDRH W9, [X8 + 0x12E]
	0x03CD19BC LDR X1, [X10]
	0x03CD19C0 CBZ X9, 0x3CD19E4
	0x03CD19C4 LDR X10, [X8 + 0xB0]
	0x03CD19C8 ADD X10, X10, 0x8
	0x03CD19CC LDUR X11, [X10 - 0x8]
	0x03CD19D0 CMP X11, X1
	0x03CD19D4 B.EQ 0x3CD19F4
	0x03CD19D8 SUBS X9, X9, 0x1
	0x03CD19DC ADD X10, X10, 0x10
	0x03CD19E0 B.NE 0x3CD19CC
	0x03CD19E4 MOVZ W2, 0x2
	0x03CD19E8 MOV X0, X19
	0x03CD19EC BL 0x1C5C788
	0x03CD19F0 B 0x3CD1A04
	0x03CD19F4 LDR W9, [X10]
	0x03CD19F8 ADD W9, W9, 0x2
	0x03CD19FC ADD X8, X8, W9, 0x4, SXTW
	0x03CD1A00 ADD X0, X8, 0x138
	0x03CD1A04 LDP X8, X1, [X0]
	0x03CD1A08 MOV X0, X19
	0x03CD1A0C BLR X8
	0x03CD1A10 ADRP X8, 0x487000
	0x03CD1A14 LDR X8, [X8 + 0x718]
	0x03CD1A18 LDR X0, [X8]
	0x03CD1A1C LDR W8, [X0 + 0xE0]
	0x03CD1A20 CBNZ W8, 0x3CD1A28
	0x03CD1A24 BL 0x1C16DFC
	0x03CD1A28 BL 0x3CD077C
	0x03CD1A2C CBZ X0, 0x3CD1A54
	0x03CD1A30 LDR X0, [X0 + 0x20]
	0x03CD1A34 CBZ X0, 0x3CD1A54
	0x03CD1A38 ADRP X8, 0x491000
	0x03CD1A3C LDR X8, [X8 + 0xE8]
	0x03CD1A40 MOV X1, X19
	0x03CD1A44 LDP X20, X19, [X31 + 0x10]
	0x03CD1A48 LDR X2, [X8]
	0x03CD1A4C LDP X30, X21, [X31], #0x20
	0x03CD1A50 B 0x2DE291C
	0x03CD1A54 BL 0x1C16F20
	0x03CD1A58 STP X30, X21, [X31 - 0x20]!
	0x03CD1A5C STP X20, X19, [X31 + 0x10]
	0x03CD1A60 ADRP X21, 0x716000
	0x03CD1A64 LDRB W8, [X21 + 0x43F]
	0x03CD1A68 MOV X19, X1
	0x03CD1A6C MOV X20, X0
	0x03CD1A70 TBNZ X8, 0x0, 0x3CD1AB8
	0x03CD1A74 ADRP X0, 0x487000
	0x03CD1A78 LDR X0, [X0 + 0x718]
	0x03CD1A7C BL 0x1C16CF4
	0x03CD1A80 ADRP X0, 0x422000
	0x03CD1A84 LDR X0, [X0 + 0xA28]
	0x03CD1A88 BL 0x1C16CF4
	0x03CD1A8C ADRP X0, 0x488000
	0x03CD1A90 LDR X0, [X0 + 0xB20]
	0x03CD1A94 BL 0x1C16CF4
	0x03CD1A98 ADRP X0, 0x491000
	0x03CD1A9C LDR X0, [X0 + 0xE8]
	0x03CD1AA0 BL 0x1C16CF4
	0x03CD1AA4 ADRP X0, 0x491000
	0x03CD1AA8 LDR X0, [X0 + 0xF0]
	0x03CD1AAC BL 0x1C16CF4
	0x03CD1AB0 MOVZ W8, 0x1
	0x03CD1AB4 STRB W8, [X21 + 0x43F]
	0x03CD1AB8 LDRB W8, [X20 + 0x11]
	0x03CD1ABC CBZ W8, 0x3CD1B0C
	0x03CD1AC0 ADRP X8, 0x491000
	0x03CD1AC4 LDR X8, [X8 + 0xF0]
	0x03CD1AC8 ADRP X20, 0x422000
	0x03CD1ACC MOV X1, X19
	0x03CD1AD0 MOV X2, X31
	0x03CD1AD4 LDR X0, [X8]
	0x03CD1AD8 LDR X20, [X20 + 0xA28]
	0x03CD1ADC BL 0x321EFD0
	0x03CD1AE0 LDR X8, [X20]
	0x03CD1AE4 MOV X19, X0
	0x03CD1AE8 LDR W9, [X8 + 0xE0]
	0x03CD1AEC CBNZ W9, 0x3CD1AF8
	0x03CD1AF0 MOV X0, X8
	0x03CD1AF4 BL 0x1C16DFC
	0x03CD1AF8 MOV X0, X19
	0x03CD1AFC LDP X20, X19, [X31 + 0x10]
	0x03CD1B00 MOV X1, X31
	0x03CD1B04 LDP X30, X21, [X31], #0x20
	0x03CD1B08 B 0x3C0649C
	0x03CD1B0C CBZ X19, 0x3CD1BB8
	0x03CD1B10 ADRP X10, 0x488000
	0x03CD1B14 LDR X8, [X19]
	0x03CD1B18 LDR X10, [X10 + 0xB20]
	0x03CD1B1C LDRH W9, [X8 + 0x12E]
	0x03CD1B20 LDR X1, [X10]
	0x03CD1B24 CBZ X9, 0x3CD1B48
	0x03CD1B28 LDR X10, [X8 + 0xB0]
	0x03CD1B2C ADD X10, X10, 0x8
	0x03CD1B30 LDUR X11, [X10 - 0x8]
	0x03CD1B34 CMP X11, X1
	0x03CD1B38 B.EQ 0x3CD1B58
	0x03CD1B3C SUBS X9, X9, 0x1
	0x03CD1B40 ADD X10, X10, 0x10
	0x03CD1B44 B.NE 0x3CD1B30
	0x03CD1B48 MOVZ W2, 0x3
	0x03CD1B4C MOV X0, X19
	0x03CD1B50 BL 0x1C5C788
	0x03CD1B54 B 0x3CD1B68
	0x03CD1B58 LDR W9, [X10]
	0x03CD1B5C ADD W9, W9, 0x3
	0x03CD1B60 ADD X8, X8, W9, 0x4, SXTW
	0x03CD1B64 ADD X0, X8, 0x138
	0x03CD1B68 LDP X8, X1, [X0]
	0x03CD1B6C MOV X0, X19
	0x03CD1B70 BLR X8
	0x03CD1B74 ADRP X8, 0x487000
	0x03CD1B78 LDR X8, [X8 + 0x718]
	0x03CD1B7C LDR X0, [X8]
	0x03CD1B80 LDR W8, [X0 + 0xE0]
	0x03CD1B84 CBNZ W8, 0x3CD1B8C
	0x03CD1B88 BL 0x1C16DFC
	0x03CD1B8C BL 0x3CD077C
	0x03CD1B90 CBZ X0, 0x3CD1BB8
	0x03CD1B94 LDR X0, [X0 + 0x28]
	0x03CD1B98 CBZ X0, 0x3CD1BB8
	0x03CD1B9C ADRP X8, 0x491000
	0x03CD1BA0 LDR X8, [X8 + 0xE8]
	0x03CD1BA4 MOV X1, X19
	0x03CD1BA8 LDP X20, X19, [X31 + 0x10]
	0x03CD1BAC LDR X2, [X8]
	0x03CD1BB0 LDP X30, X21, [X31], #0x20
	0x03CD1BB4 B 0x2DE291C
	0x03CD1BB8 BL 0x1C16F20
	0x03CD1BBC STP X30, X21, [X31 - 0x20]!
	0x03CD1BC0 STP X20, X19, [X31 + 0x10]
	0x03CD1BC4 ADRP X20, 0x716000
	0x03CD1BC8 ADRP X21, 0x487000
	0x03CD1BCC LDRB W8, [X20 + 0x43D]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x717000
	009 Move W8, [X20+1074]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x489000
	016 Move X0, [X0+2848]
	017 Call 0x1C17CF4
	018 Move X0, 0x492000
	019 Move X0, [X0+136]
	020 Call 0x1C17CF4
	021 Move X0, 0x492000
	022 Move X0, [X0+144]
	023 Call 0x1C17CF4
	024 Move X0, 0x492000
	025 Move X0, [X0+152]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1074], W8
	029 Move X0, [X19+32]
	030 Compare X0, 0
	031 JumpIfEqual {191}
	032 Move W8, [X0+32]
	033 Subtract W20, W8, 1
	034 Move X22, 0x492000
	035 Move X23, 0x492000
	036 Move X24, 0x489000
	037 Move X22, [X22+152]
	038 Move X23, [X23+136]
	039 Move X24, [X24+2848]
	040 Move X2, [X22]
	041 Move W1, W20
	042 Call 0x2DE3D54, X0, X1
	043 Compare X0, 0
	044 JumpIfEqual {60}
	045 Move X8, [X0]
	046 Move X1, [X24]
	047 Move X21, X0
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 4
	058 Move X0, X21
	059 Call 0x1C5D788
	060 Move X0, [X19+32]
	061 Compare X0, 0
	062 JumpIfEqual {191}
	063 Move X2, [X23]
	064 Move W1, W20
	065 Call 0x2DE3B38, X0, X1
	066 Move W9, [X10]
	067 Add W9, W9, 4
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X21
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {106}
	078 Move X0, [X19+32]
	079 Compare X0, 0
	080 JumpIfEqual {191}
	081 Move X2, [X23]
	082 Move W1, W20
	083 Call 0x2DE3B38, X0, X1
	084 Move X8, [X21]
	085 Move X1, [X24]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 2
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 2
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X21
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Subtract W20, W20, 1
	107 Move X0, [X19+32]
	108 Compare X0, 0
	109 JumpIfNotEqual {40}
	110 Move X0, [X19+40]
	111 Compare X0, 0
	112 JumpIfEqual {191}
	113 Move W8, [X0+32]
	114 Subtract W20, W8, 1
	115 Move X22, 0x492000
	116 Move X23, 0x492000
	117 Move X24, 0x489000
	118 Move X22, [X22+152]
	119 Move X23, [X23+136]
	120 Move X24, [X24+2848]
	121 Move X2, [X22]
	122 Move W1, W20
	123 Call 0x2DE3D54, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {141}
	126 Move X8, [X0]
	127 Move X1, [X24]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 4
	139 Move X0, X21
	140 Call 0x1C5D788
	141 Move X0, [X19+40]
	142 Compare X0, 0
	143 JumpIfEqual {191}
	144 Move X2, [X23]
	145 Move W1, W20
	146 Call 0x2DE3B38, X0, X1
	147 Move W9, [X10]
	148 Add W9, W9, 4
	149 Add X8, X8, W9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X21
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {187}
	159 Move X0, [X19+40]
	160 Compare X0, 0
	161 JumpIfEqual {191}
	162 Move X2, [X23]
	163 Move W1, W20
	164 Call 0x2DE3B38, X0, X1
	165 Move X8, [X21]
	166 Move X1, [X24]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move W2, 3
	177 Move X0, X21
	178 Call 0x1C5D788
	179 Move W9, [X10]
	180 Add W9, W9, 3
	181 Add X8, X8, W9
	182 Add X0, X8, 312
	183 Move X8, [X0]
	184 Move X1, [X0+8]
	185 Move X0, X21
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Subtract W20, W20, 1
	188 Move X0, [X19+40]
	189 Compare X0, 0
	190 JumpIfNotEqual {121}
	191 Call 0x1C17F20
	192 Move X20, [X31+48]
	193 Move X19, [X31+56]
	194 Move X22, [X31+32]
	195 Move X21, [X31+40]
	196 Move X24, [X31+16]
	197 Move X23, [X31+24]
	198 Move X30, [X31+64]
	199 Return 

Method: System.Void PerformUpdate()

Disassembly:
	0x03CD1BD0 LDR X21, [X21 + 0x718]
	0x03CD1BD4 MOV X19, X0
	0x03CD1BD8 TBNZ X8, 0x0, 0x3CD1BF0
	0x03CD1BDC ADRP X0, 0x487000
	0x03CD1BE0 LDR X0, [X0 + 0x718]
	0x03CD1BE4 BL 0x1C16CF4
	0x03CD1BE8 MOVZ W8, 0x1
	0x03CD1BEC STRB W8, [X20 + 0x43D]
	0x03CD1BF0 LDR X0, [X21]
	0x03CD1BF4 LDR W8, [X0 + 0xE0]
	0x03CD1BF8 CBNZ W8, 0x3CD1C00
	0x03CD1BFC BL 0x1C16DFC
	0x03CD1C00 BL 0x3CD077C
	0x03CD1C04 CBZ X0, 0x3CD1C28
	0x03CD1C08 MOV X1, X19
	0x03CD1C0C BL 0x3CD1C2C
	0x03CD1C10 BL 0x3CD077C
	0x03CD1C14 CBZ X0, 0x3CD1C28
	0x03CD1C18 MOV X1, X19
	0x03CD1C1C LDP X20, X19, [X31 + 0x10]
	0x03CD1C20 LDP X30, X21, [X31], #0x20
	0x03CD1C24 B 0x3CD1D90
	0x03CD1C28 BL 0x1C16F20
	0x03CD1C2C STP X30, X21, [X31 - 0x20]!
	0x03CD1C30 STP X20, X19, [X31 + 0x10]
	0x03CD1C34 ADRP X21, 0x716000
	0x03CD1C38 LDRB W8, [X21 + 0x440]
	0x03CD1C3C MOV X19, X1
	0x03CD1C40 MOV X20, X0
	0x03CD1C44 TBNZ X8, 0x0, 0x3CD1C8C
	0x03CD1C48 ADRP X0, 0x487000
	0x03CD1C4C LDR X0, [X0 + 0x718]
	0x03CD1C50 BL 0x1C16CF4
	0x03CD1C54 ADRP X0, 0x422000
	0x03CD1C58 LDR X0, [X0 + 0xA28]
	0x03CD1C5C BL 0x1C16CF4
	0x03CD1C60 ADRP X0, 0x488000
	0x03CD1C64 LDR X0, [X0 + 0xB20]
	0x03CD1C68 BL 0x1C16CF4
	0x03CD1C6C ADRP X0, 0x491000
	0x03CD1C70 LDR X0, [X0 + 0xF8]
	0x03CD1C74 BL 0x1C16CF4
	0x03CD1C78 ADRP X0, 0x491000
	0x03CD1C7C LDR X0, [X0 + 0xF0]
	0x03CD1C80 BL 0x1C16CF4
	0x03CD1C84 MOVZ W8, 0x1
	0x03CD1C88 STRB W8, [X21 + 0x440]
	0x03CD1C8C LDRB W8, [X20 + 0x10]
	0x03CD1C90 CBZ W8, 0x3CD1CE0
	0x03CD1C94 ADRP X8, 0x491000
	0x03CD1C98 LDR X8, [X8 + 0xF0]
	0x03CD1C9C ADRP X20, 0x422000
	0x03CD1CA0 MOV X1, X19
	0x03CD1CA4 MOV X2, X31
	0x03CD1CA8 LDR X0, [X8]
	0x03CD1CAC LDR X20, [X20 + 0xA28]
	0x03CD1CB0 BL 0x321EFD0
	0x03CD1CB4 LDR X8, [X20]
	0x03CD1CB8 MOV X19, X0
	0x03CD1CBC LDR W9, [X8 + 0xE0]
	0x03CD1CC0 CBNZ W9, 0x3CD1CCC
	0x03CD1CC4 MOV X0, X8
	0x03CD1CC8 BL 0x1C16DFC
	0x03CD1CCC MOV X0, X19
	0x03CD1CD0 LDP X20, X19, [X31 + 0x10]
	0x03CD1CD4 MOV X1, X31
	0x03CD1CD8 LDP X30, X21, [X31], #0x20
	0x03CD1CDC B 0x3C0649C
	0x03CD1CE0 CBZ X19, 0x3CD1D8C
	0x03CD1CE4 ADRP X10, 0x488000
	0x03CD1CE8 LDR X8, [X19]
	0x03CD1CEC LDR X10, [X10 + 0xB20]
	0x03CD1CF0 LDRH W9, [X8 + 0x12E]
	0x03CD1CF4 LDR X1, [X10]
	0x03CD1CF8 CBZ X9, 0x3CD1D1C
	0x03CD1CFC LDR X10, [X8 + 0xB0]
	0x03CD1D00 ADD X10, X10, 0x8
	0x03CD1D04 LDUR X11, [X10 - 0x8]
	0x03CD1D08 CMP X11, X1
	0x03CD1D0C B.EQ 0x3CD1D2C
	0x03CD1D10 SUBS X9, X9, 0x1
	0x03CD1D14 ADD X10, X10, 0x10
	0x03CD1D18 B.NE 0x3CD1D04
	0x03CD1D1C MOVZ W2, 0x2
	0x03CD1D20 MOV X0, X19
	0x03CD1D24 BL 0x1C5C788
	0x03CD1D28 B 0x3CD1D3C
	0x03CD1D2C LDR W9, [X10]
	0x03CD1D30 ADD W9, W9, 0x2
	0x03CD1D34 ADD X8, X8, W9, 0x4, SXTW
	0x03CD1D38 ADD X0, X8, 0x138
	0x03CD1D3C LDP X8, X1, [X0]
	0x03CD1D40 MOV X0, X19
	0x03CD1D44 BLR X8
	0x03CD1D48 ADRP X8, 0x487000
	0x03CD1D4C LDR X8, [X8 + 0x718]
	0x03CD1D50 LDR X0, [X8]
	0x03CD1D54 LDR W8, [X0 + 0xE0]
	0x03CD1D58 CBNZ W8, 0x3CD1D60
	0x03CD1D5C BL 0x1C16DFC
	0x03CD1D60 BL 0x3CD077C
	0x03CD1D64 CBZ X0, 0x3CD1D8C
	0x03CD1D68 LDR X0, [X0 + 0x20]
	0x03CD1D6C CBZ X0, 0x3CD1D8C
	0x03CD1D70 ADRP X8, 0x491000
	0x03CD1D74 LDR X8, [X8 + 0xF8]
	0x03CD1D78 MOV X1, X19
	0x03CD1D7C LDP X20, X19, [X31 + 0x10]
	0x03CD1D80 LDR X2, [X8]
	0x03CD1D84 LDP X30, X21, [X31], #0x20
	0x03CD1D88 B 0x2DE2890
	0x03CD1D8C BL 0x1C16F20
	0x03CD1D90 STP X30, X21, [X31 - 0x20]!
	0x03CD1D94 STP X20, X19, [X31 + 0x10]
	0x03CD1D98 ADRP X21, 0x716000
	0x03CD1D9C LDRB W8, [X21 + 0x441]
	0x03CD1DA0 MOV X19, X1
	0x03CD1DA4 MOV X20, X0
	0x03CD1DA8 TBNZ X8, 0x0, 0x3CD1DF0
	0x03CD1DAC ADRP X0, 0x487000
	0x03CD1DB0 LDR X0, [X0 + 0x718]
	0x03CD1DB4 BL 0x1C16CF4
	0x03CD1DB8 ADRP X0, 0x422000
	0x03CD1DBC LDR X0, [X0 + 0xA28]
	0x03CD1DC0 BL 0x1C16CF4
	0x03CD1DC4 ADRP X0, 0x488000
	0x03CD1DC8 LDR X0, [X0 + 0xB20]
	0x03CD1DCC BL 0x1C16CF4
	0x03CD1DD0 ADRP X0, 0x491000
	0x03CD1DD4 LDR X0, [X0 + 0xF8]
	0x03CD1DD8 BL 0x1C16CF4
	0x03CD1DDC ADRP X0, 0x491000
	0x03CD1DE0 LDR X0, [X0 + 0xF0]
	0x03CD1DE4 BL 0x1C16CF4
	0x03CD1DE8 MOVZ W8, 0x1
	0x03CD1DEC STRB W8, [X21 + 0x441]
	0x03CD1DF0 LDRB W8, [X20 + 0x11]
	0x03CD1DF4 CBZ W8, 0x3CD1E44
	0x03CD1DF8 ADRP X8, 0x491000
	0x03CD1DFC LDR X8, [X8 + 0xF0]
	0x03CD1E00 ADRP X20, 0x422000
	0x03CD1E04 MOV X1, X19
	0x03CD1E08 MOV X2, X31
	0x03CD1E0C LDR X0, [X8]
	0x03CD1E10 LDR X20, [X20 + 0xA28]
	0x03CD1E14 BL 0x321EFD0
	0x03CD1E18 LDR X8, [X20]
	0x03CD1E1C MOV X19, X0
	0x03CD1E20 LDR W9, [X8 + 0xE0]
	0x03CD1E24 CBNZ W9, 0x3CD1E30
	0x03CD1E28 MOV X0, X8
	0x03CD1E2C BL 0x1C16DFC
	0x03CD1E30 MOV X0, X19
	0x03CD1E34 LDP X20, X19, [X31 + 0x10]
	0x03CD1E38 MOV X1, X31
	0x03CD1E3C LDP X30, X21, [X31], #0x20
	0x03CD1E40 B 0x3C0649C
	0x03CD1E44 CBZ X19, 0x3CD1EF0
	0x03CD1E48 ADRP X10, 0x488000
	0x03CD1E4C LDR X8, [X19]
	0x03CD1E50 LDR X10, [X10 + 0xB20]
	0x03CD1E54 LDRH W9, [X8 + 0x12E]
	0x03CD1E58 LDR X1, [X10]
	0x03CD1E5C CBZ X9, 0x3CD1E80
	0x03CD1E60 LDR X10, [X8 + 0xB0]
	0x03CD1E64 ADD X10, X10, 0x8
	0x03CD1E68 LDUR X11, [X10 - 0x8]
	0x03CD1E6C CMP X11, X1
	0x03CD1E70 B.EQ 0x3CD1E90
	0x03CD1E74 SUBS X9, X9, 0x1
	0x03CD1E78 ADD X10, X10, 0x10
	0x03CD1E7C B.NE 0x3CD1E68
	0x03CD1E80 MOVZ W2, 0x3
	0x03CD1E84 MOV X0, X19
	0x03CD1E88 BL 0x1C5C788
	0x03CD1E8C B 0x3CD1EA0
	0x03CD1E90 LDR W9, [X10]
	0x03CD1E94 ADD W9, W9, 0x3
	0x03CD1E98 ADD X8, X8, W9, 0x4, SXTW
	0x03CD1E9C ADD X0, X8, 0x138
	0x03CD1EA0 LDP X8, X1, [X0]
	0x03CD1EA4 MOV X0, X19
	0x03CD1EA8 BLR X8
	0x03CD1EAC ADRP X8, 0x487000
	0x03CD1EB0 LDR X8, [X8 + 0x718]
	0x03CD1EB4 LDR X0, [X8]
	0x03CD1EB8 LDR W8, [X0 + 0xE0]
	0x03CD1EBC CBNZ W8, 0x3CD1EC4
	0x03CD1EC0 BL 0x1C16DFC
	0x03CD1EC4 BL 0x3CD077C
	0x03CD1EC8 CBZ X0, 0x3CD1EF0
	0x03CD1ECC LDR X0, [X0 + 0x28]
	0x03CD1ED0 CBZ X0, 0x3CD1EF0
	0x03CD1ED4 ADRP X8, 0x491000
	0x03CD1ED8 LDR X8, [X8 + 0xF8]
	0x03CD1EDC MOV X1, X19
	0x03CD1EE0 LDP X20, X19, [X31 + 0x10]
	0x03CD1EE4 LDR X2, [X8]
	0x03CD1EE8 LDP X30, X21, [X31], #0x20
	0x03CD1EEC B 0x2DE2890
	0x03CD1EF0 BL 0x1C16F20
	0x03CD1EF4 STR X30, [X31 - 0x20]!
	0x03CD1EF8 STP X20, X19, [X31 + 0x10]
	0x03CD1EFC ADRP X19, 0x716000
	0x03CD1F00 ADRP X20, 0x487000
	0x03CD1F04 LDRB W8, [X19 + 0x442]
	0x03CD1F08 LDR X20, [X20 + 0x718]
	0x03CD1F0C TBNZ X8, 0x0, 0x3CD1F24
	0x03CD1F10 ADRP X0, 0x487000
	0x03CD1F14 LDR X0, [X0 + 0x718]
	0x03CD1F18 BL 0x1C16CF4
	0x03CD1F1C MOVZ W8, 0x1
	0x03CD1F20 STRB W8, [X19 + 0x442]
	0x03CD1F24 LDR X0, [X20]
	0x03CD1F28 LDR W8, [X0 + 0xE0]
	0x03CD1F2C CBNZ W8, 0x3CD1F34
	0x03CD1F30 BL 0x1C16DFC
	0x03CD1F34 BL 0x3CD077C
	0x03CD1F38 CBZ X0, 0x3CD1F4C
	0x03CD1F3C LDRB W0, [X0 + 0x10]
	0x03CD1F40 LDP X20, X19, [X31 + 0x10]
	0x03CD1F44 LDR X30, [X31], #0x20
	0x03CD1F48 RET
	0x03CD1F4C BL 0x1C16F20
	0x03CD1F50 STR X30, [X31 - 0x20]!
	0x03CD1F54 STP X20, X19, [X31 + 0x10]
	0x03CD1F58 ADRP X19, 0x716000
	0x03CD1F5C ADRP X20, 0x487000
	0x03CD1F60 LDRB W8, [X19 + 0x443]
	0x03CD1F64 LDR X20, [X20 + 0x718]
	0x03CD1F68 TBNZ X8, 0x0, 0x3CD1F80
	0x03CD1F6C ADRP X0, 0x487000
	0x03CD1F70 LDR X0, [X0 + 0x718]
	0x03CD1F74 BL 0x1C16CF4
	0x03CD1F78 MOVZ W8, 0x1
	0x03CD1F7C STRB W8, [X19 + 0x443]
	0x03CD1F80 LDR X0, [X20]
	0x03CD1F84 LDR W8, [X0 + 0xE0]
	0x03CD1F88 CBNZ W8, 0x3CD1F90
	0x03CD1F8C BL 0x1C16DFC
	0x03CD1F90 BL 0x3CD077C
	0x03CD1F94 CBZ X0, 0x3CD1FA8
	0x03CD1F98 LDRB W0, [X0 + 0x11]
	0x03CD1F9C LDP X20, X19, [X31 + 0x10]
	0x03CD1FA0 LDR X30, [X31], #0x20
	0x03CD1FA4 RET
	0x03CD1FA8 BL 0x1C16F20
	0x03CD1FAC STR X30, [X31 - 0x30]!
	0x03CD1FB0 STP X22, X21, [X31 + 0x10]
	0x03CD1FB4 STP X20, X19, [X31 + 0x20]
	0x03CD1FB8 ADRP X21, 0x716000
	0x03CD1FBC ADRP X22, 0x491000
	0x03CD1FC0 ADRP X19, 0x491000
	0x03CD1FC4 ADRP X20, 0x487000
	0x03CD1FC8 LDRB W8, [X21 + 0x444]
	0x03CD1FCC LDR X22, [X22 + 0x100]
	0x03CD1FD0 LDR X19, [X19 + 0x108]
	0x03CD1FD4 LDR X20, [X20 + 0x718]
	0x03CD1FD8 TBNZ X8, 0x0, 0x3CD2008
	0x03CD1FDC ADRP X0, 0x491000
	0x03CD1FE0 LDR X0, [X0 + 0x108]
	0x03CD1FE4 BL 0x1C16CF4
	0x03CD1FE8 ADRP X0, 0x487000
	0x03CD1FEC LDR X0, [X0 + 0x718]
	0x03CD1FF0 BL 0x1C16CF4
	0x03CD1FF4 ADRP X0, 0x491000
	0x03CD1FF8 LDR X0, [X0 + 0x100]
	0x03CD1FFC BL 0x1C16CF4
	0x03CD2000 MOVZ W8, 0x1
	0x03CD2004 STRB W8, [X21 + 0x444]
	0x03CD2008 LDR X0, [X22]
	0x03CD200C BL 0x1C16F10
	0x03CD2010 LDR X2, [X19]
	0x03CD2014 MOV X1, X31
	0x03CD2018 MOV X3, X31
	0x03CD201C MOV X19, X0
	0x03CD2020 BL 0x295A080
	0x03CD2024 LDR X8, [X20]
	0x03CD2028 LDP X22, X21, [X31 + 0x10]
	0x03CD202C LDR X8, [X8 + 0xB8]
	0x03CD2030 STR X19, [X8 + 0x8]
	0x03CD2034 LDP X20, X19, [X31 + 0x20]
	0x03CD2038 LDR X30, [X31], #0x30
	0x03CD203C RET
	0x03CD2040 LDP S0, S1, [X0]
	0x03CD2044 LDP S2, S3, [X0 + 0x8]
	0x03CD2048 RET
	0x03CD204C STP S0, S1, [X0]
	0x03CD2050 STP S2, S3, [X0 + 0x8]
	0x03CD2054 RET
	0x03CD2058 LDP S0, S1, [X0 + 0x10]
	0x03CD205C LDP S2, S3, [X0 + 0x18]
	0x03CD2060 RET
	0x03CD2064 STP S0, S1, [X0 + 0x10]
	0x03CD2068 STP S2, S3, [X0 + 0x18]
	0x03CD206C RET
	0x03CD2070 LDP S0, S1, [X0 + 0x20]
	0x03CD2074 LDP S2, S3, [X0 + 0x28]
	0x03CD2078 RET
	0x03CD207C STP S0, S1, [X0 + 0x20]
	0x03CD2080 STP S2, S3, [X0 + 0x28]
	0x03CD2084 RET
	0x03CD2088 LDP S0, S1, [X0 + 0x30]
	0x03CD208C LDP S2, S3, [X0 + 0x38]
	0x03CD2090 RET
	0x03CD2094 STP S0, S1, [X0 + 0x30]
	0x03CD2098 STP S2, S3, [X0 + 0x38]
	0x03CD209C RET
	0x03CD20A0 LDP S0, S1, [X0 + 0x40]
	0x03CD20A4 LDP S2, S3, [X0 + 0x48]
	0x03CD20A8 RET
	0x03CD20AC STP S0, S1, [X0 + 0x40]
	0x03CD20B0 STP S2, S3, [X0 + 0x48]
	0x03CD20B4 RET
	0x03CD20B8 LDR V0, [X0 + 0x50]
	0x03CD20BC RET
	0x03CD20C0 STR S0, [X0 + 0x50]
	0x03CD20C4 RET
	0x03CD20C8 LDR V0, [X0 + 0x54]
	0x03CD20CC RET
	0x03CD20D0 STR S0, [X0 + 0x54]
	0x03CD20D4 RET
	0x03CD20D8 STR X30, [X31 - 0x20]!
	0x03CD20DC STP X20, X19, [X31 + 0x10]
	0x03CD20E0 ADRP X19, 0x715000
	0x03CD20E4 ADRP X20, 0x449000
	0x03CD20E8 LDRB W8, [X19 + 0x445]
	0x03CD20EC LDR X20, [X20 + 0x5E8]
	0x03CD20F0 TBNZ X8, 0x0, 0x3CD2108
	0x03CD20F4 ADRP X0, 0x449000
	0x03CD20F8 LDR X0, [X0 + 0x5E8]
	0x03CD20FC BL 0x1C16CF4
	0x03CD2100 MOVZ W8, 0x1
	0x03CD2104 STRB W8, [X19 + 0x445]
	0x03CD2108 LDR X8, [X20]
	0x03CD210C ADRP X9, 0xFFFFFFFFFCE18000
	0x03CD2110 LDR V1, [X9 + 0xCF]
	0x03CD2114 ADRP X9, 0xFFFFFFFFFCE19000
	0x03CD2118 LDR V2, [X9 + 0x29]
	0x03CD211C ADRP X9, 0xFFFFFFFFFCE19000
	0x03CD2120 LDR V3, [X9 + 0x42]
	0x03CD2124 ADRP X9, 0xFFFFFFFFFCE1B000
	0x03CD2128 LDR X8, [X8 + 0xB8]
	0x03CD212C LDR V4, [X9 + 0x488]
	0x03CD2130 LDP X20, X19, [X31 + 0x10]
	0x03CD2134 FMOV V0.4S, 0x0
	0x03CD2138 STP V0, V1, [X8]
	0x03CD213C STP V2, V1, [X8 + 0x20]
	0x03CD2140 STR V3, [X8 + 0x4]
	0x03CD2144 STR D4, [X8 + 0x50]
	0x03CD2148 LDR X30, [X31], #0x20
	0x03CD214C RET
	0x03CD2150 SUB X31, X31, 0x80
	0x03CD2154 STP X30, X21, [X31 + 0x60]
	0x03CD2158 STP X20, X19, [X31 + 0x70]
	0x03CD215C ADRP X21, 0x715000
	0x03CD2160 LDRB W8, [X21 + 0x446]
	0x03CD2164 MOV X20, X1
	0x03CD2168 MOV X19, X0
	0x03CD216C TBNZ X8, 0x0, 0x3CD2184
	0x03CD2170 ADRP X0, 0x449000
	0x03CD2174 LDR X0, [X0 + 0x5E8]
	0x03CD2178 BL 0x1C16CF4
	0x03CD217C MOVZ W8, 0x1
	0x03CD2180 STRB W8, [X21 + 0x446]
	0x03CD2184 CBZ X20, 0x3CD21A0
	0x03CD2188 ADRP X21, 0x449000
	0x03CD218C LDR X21, [X21 + 0x5E8]
	0x03CD2190 LDR X8, [X20]
	0x03CD2194 LDR X0, [X21]
	0x03CD2198 CMP X8, X0
	0x03CD219C B.EQ 0x3CD21A8
	0x03CD21A0 MOV W0, W31
	0x03CD21A4 B 0x3CD21F8
	0x03CD21A8 LDR W8, [X0 + 0xE0]
	0x03CD21AC CBZ W8, 0x3CD21B8
	0x03CD21B0 MOV X1, X0
	0x03CD21B4 B 0x3CD21C4
	0x03CD21B8 BL 0x1C16DFC
	0x03CD21BC LDR X1, [X21]
	0x03CD21C0 LDR X0, [X20]
	0x03CD21C4 LDR X8, [X0 + 0x40]
	0x03CD21C8 LDR X9, [X1 + 0x40]
	0x03CD21CC MOV X0, X20
	0x03CD21D0 CMP X8, X9
	0x03CD21D4 B.NE 0x3CD220C
	0x03CD21D8 BL 0x1C16E08
	0x03CD21DC MOV X1, X0
	0x03CD21E0 ADD X0, X31, 0x8
	0x03CD21E4 MOVZ W2, 0x58
	0x03CD21E8 BL 0x3EB1AC0
	0x03CD21EC ADD X1, X31, 0x8
	0x03CD21F0 MOV X0, X19
	0x03CD21F4 BL 0x3CD2210
	0x03CD21F8 LDP X20, X19, [X31 + 0x70]
	0x03CD21FC LDP X30, X21, [X31 + 0x60]
	0x03CD2200 AND W0, W0, 0x1
	0x03CD2204 ADD X31, X31, 0x80
	0x03CD2208 RET
	0x03CD220C BL 0x1C171E0

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x717000
	013 Move X20, 0x488000
	014 Move W8, [X21+1075]
	015 Move X20, [X20+1816]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x488000
	022 Move X0, [X0+1816]
	023 Call 0x1C17CF4
	024 Move X0, 0x489000
	025 Move X0, [X0+2848]
	026 Call 0x1C17CF4
	027 Move X0, 0x492000
	028 Move X0, [X0+160]
	029 Call 0x1C17CF4
	030 Move X0, 0x492000
	031 Move X0, [X0+168]
	032 Call 0x1C17CF4
	033 Move X0, 0x492000
	034 Move X0, [X0+144]
	035 Call 0x1C17CF4
	036 Move X0, 0x492000
	037 Move X0, [X0+152]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1075], W8
	041 Move W0, W31
	042 Move X1, X31
	043 Call UISystemProfilerApi.BeginSample, X0
	044 Move X0, X19
	045 Call CanvasUpdateRegistry.CleanInvalidItems, X0
	046 Move W8, 1
	047 Move [X19+16], W8
	048 Move X0, [X20]
	049 Move X22, [X19+32]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Compare X22, 0
	055 JumpIfEqual {375}
	056 Move X8, [X20]
	057 Move X9, 0x492000
	058 Move X20, 0x492000
	059 Move X21, 0x489000
	060 Move X8, [X8+184]
	061 Move X9, [X9+168]
	062 Move X28, 0x492000
	063 Move X0, X22
	064 Move X1, [X8+8]
	065 Move X2, [X9]
	066 Move X20, [X20+152]
	067 Move X21, [X21+2848]
	068 Move X28, [X28+160]
	069 Call 0x2DE3F04, X0, X1
	070 Move X23, 0x423000
	071 Move X24, 0x423000
	072 Move X0, [X19+32]
	073 Move X23, [X23+2000]
	074 Move X24, [X24+2600]
	075 Move W22, W31
	076 Compare X0, 0
	077 JumpIfEqual {375}
	078 Move W25, W31
	079 Move W8, [X0+32]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X2, [X20]
	082 Move W1, W25
	083 Call 0x2DE3D54, X0, X1
	084 Move X26, X0
	085 Move X1, X0
	086 Call CanvasUpdateRegistry.ObjectValidForUpdate, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {115}
	091 Compare X26, 0
	092 JumpIfEqual {119}
	093 Move X8, [X26]
	094 Move X1, [X21]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X26
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X2, [X0+8]
	112 Move X0, X26
	113 Move W1, W22
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X0, [X19+32]
	116 Add W25, W25, 1
	117 Compare X0, 0
	118 JumpIfNotEqual {79}
	119 Call 0x1C17F20
	120 Move X27, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X27
	123 Call 0x3EB2AD0
	124 Move X27, X0
	125 Move X0, X23
	126 Call 0x1C17D08
	127 Move X8, [X27]
	128 Move X1, [X8]
	129 Call 0x1C18270
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {394}
	134 Move X27, [X27]
	135 Call 0x3EB2AE0
	136 Compare X26, 0
	137 JumpIfEqual {375}
	138 Move X0, X21
	139 Call 0x1C17D08
	140 Move X8, [X26]
	141 Move X1, X0
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 1
	152 Move X0, X26
	153 Call 0x1C5D788
	154 Move W9, [X10]
	155 Add W9, W9, 1
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X26
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X26, X0
	163 Move X0, X24
	164 Call 0x1C17D08
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X0, X27
	170 Move X1, X26
	171 Move X2, X31
	172 Call Debug.LogException, X0, X1
	173 Add W22, W22, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move W22, W31
	176 Move W8, [X0+32]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X2, [X20]
	179 Move W1, W22
	180 Call 0x2DE3D54, X0, X1
	181 Compare X0, 0
	182 JumpIfEqual {375}
	183 Move X8, [X0]
	184 Move X1, [X21]
	185 Move X23, X0
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 2
	196 Move X0, X23
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 2
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X23
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X0, [X19+32]
	207 Add W22, W22, 1
	208 Compare X0, 0
	209 JumpIfNotEqual {176}
	210 Move X1, [X28]
	211 Call 0x2DE39D4, X0
	212 Move W0, W31
	213 Move X1, X31
	214 Move [X19+16], W31
	215 Call UISystemProfilerApi.EndSample, X0
	216 Move W0, 1
	217 Move X1, X31
	218 Move W22, 1
	219 Call UISystemProfilerApi.BeginSample, X0
	220 Call ClipperRegistry.get_instance
	221 Compare X0, 0
	222 JumpIfEqual {375}
	223 Call ClipperRegistry.Cull, X0
	224 Move [X19+17], W22
	225 Move X23, 0x423000
	226 Move X24, 0x423000
	227 Move X0, [X19+40]
	228 Move X23, [X23+2000]
	229 Move X24, [X24+2600]
	230 Move W22, 3
	231 Compare X0, 0
	232 JumpIfEqual {375}
	233 Move W25, W31
	234 Move W8, [X0+32]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X2, [X20]
	237 Move W1, W25
	238 Call 0x2DE3D54, X0, X1
	239 Move X26, X0
	240 Move X1, X0
	241 Call CanvasUpdateRegistry.ObjectValidForUpdate, X0, X1
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {270}
	246 Compare X26, 0
	247 JumpIfEqual {274}
	248 Move X8, [X26]
	249 Move X1, [X21]
	250 NotImplemented "Instruction LDRH not yet implemented."
	251 Compare X9, 0
	252 JumpIfEqual {259}
	253 Move X10, [X8+176]
	254 Add X10, X10, 8
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Subtract X9, X9, 1
	258 Add X10, X10, 16
	259 Move X0, X26
	260 Move W2, W31
	261 Call 0x1C5D788
	262 NotImplemented "Instruction LDRSW not yet implemented."
	263 Add X8, X8, X9
	264 Add X0, X8, 312
	265 Move X8, [X0]
	266 Move X2, [X0+8]
	267 Move X0, X26
	268 Move W1, W22
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X0, [X19+40]
	271 Add W25, W25, 1
	272 Compare X0, 0
	273 JumpIfNotEqual {234}
	274 Call 0x1C17F20
	275 Move X27, X0
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, X27
	278 Call 0x3EB2AD0
	279 Move X26, X0
	280 Move X0, X23
	281 Call 0x1C17D08
	282 Move X8, [X26]
	283 Move X1, [X8]
	284 Call 0x1C18270
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {402}
	289 Move X26, [X26]
	290 Call 0x3EB2AE0
	291 Move X27, [X19+40]
	292 Compare X27, 0
	293 JumpIfEqual {375}
	294 Move X0, X20
	295 Call 0x1C17D08
	296 Move X2, X0
	297 Move X0, X27
	298 Move W1, W25
	299 Call 0x2DE3D54, X0, X1
	300 Compare X0, 0
	301 JumpIfEqual {375}
	302 Move X27, X0
	303 Move X0, X21
	304 Call 0x1C17D08
	305 Move X8, [X27]
	306 Move X1, X0
	307 NotImplemented "Instruction LDRH not yet implemented."
	308 Compare X9, 0
	309 JumpIfEqual {316}
	310 Move X10, [X8+176]
	311 Add X10, X10, 8
	312 NotImplemented "Instruction LDUR not yet implemented."
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Subtract X9, X9, 1
	315 Add X10, X10, 16
	316 Move W2, 1
	317 Move X0, X27
	318 Call 0x1C5D788
	319 Move W9, [X10]
	320 Add W9, W9, 1
	321 Add X8, X8, W9
	322 Add X0, X8, 312
	323 Move X8, [X0]
	324 Move X1, [X0+8]
	325 Move X0, X27
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Move X27, X0
	328 Move X0, X24
	329 Call 0x1C17D08
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X0, X26
	335 Move X1, X27
	336 Move X2, X31
	337 Call Debug.LogException, X0, X1
	338 Add W22, W22, 1
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move W22, W31
	341 Move W8, [X0+32]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X2, [X20]
	344 Move W1, W22
	345 Call 0x2DE3D54, X0, X1
	346 Compare X0, 0
	347 JumpIfEqual {375}
	348 Move X8, [X0]
	349 Move X1, [X21]
	350 Move X23, X0
	351 NotImplemented "Instruction LDRH not yet implemented."
	352 Compare X9, 0
	353 JumpIfEqual {360}
	354 Move X10, [X8+176]
	355 Add X10, X10, 8
	356 NotImplemented "Instruction LDUR not yet implemented."
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Subtract X9, X9, 1
	359 Add X10, X10, 16
	360 Move W2, 3
	361 Move X0, X23
	362 Call 0x1C5D788
	363 Move W9, [X10]
	364 Add W9, W9, 3
	365 Add X8, X8, W9
	366 Add X0, X8, 312
	367 Move X8, [X0]
	368 Move X1, [X0+8]
	369 Move X0, X23
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X0, [X19+40]
	372 Add W22, W22, 1
	373 Compare X0, 0
	374 JumpIfNotEqual {341}
	375 Call 0x1C17F20
	376 Move X1, [X28]
	377 Call 0x2DE39D4, X0
	378 Move [X19+17], W31
	379 Move X20, [X31+80]
	380 Move X19, [X31+88]
	381 Move X22, [X31+64]
	382 Move X21, [X31+72]
	383 Move X24, [X31+48]
	384 Move X23, [X31+56]
	385 Move X26, [X31+32]
	386 Move X25, [X31+40]
	387 Move X28, [X31+16]
	388 Move X27, [X31+24]
	389 Move W0, 1
	390 Move X1, X31
	391 Move X30, [X31+96]
	392 Call UISystemProfilerApi.EndSample, X0
	393 Return 
	394 Move W0, 8
	395 Call 0x3EB2AF0
	396 Move X8, [X27]
	397 Move [X0], X8
	398 Move X1, 0x1E3000
	399 Add X1, X1, 3672
	400 Move X2, X31
	401 Call 0x3EB2B00
	402 Move W0, 8
	403 Call 0x3EB2AF0
	404 Move X8, [X26]
	405 Move [X0], X8
	406 Move X1, 0x1E3000
	407 Add X1, X1, 3672
	408 Move X2, X31
	409 Call 0x3EB2B00
	410 Move X27, X0
	411 Call 0x3EB2AE0
	412 Move X27, X0
	413 Call 0x3EB2AE0
	414 Move X0, X27
	415 Call 0x1D2D690
	416 Call 0x1991590

Method: System.Int32 ParentCount(UnityEngine.Transform child)

Disassembly:
	0x00000000 INVALID
	0x03CD2394 FADD V0.2S, V0.2S, V2.2S
	0x03CD2398 FADD V0.2S, V1.2S, V0.2S
	0x03CD239C UNIMPLEMENTED
	0x03CD23A0 FADD V0.2S, V1.2S, V0.2S
	0x03CD23A4 FCMP S0, S8
	0x03CD23A8 B.PL 0x3CD23F0
	0x03CD23AC LDR X0, [X21]
	0x03CD23B0 LDR W8, [X0 + 0xE0]
	0x03CD23B4 CBNZ W8, 0x3CD23BC
	0x03CD23B8 BL 0x1C16DFC
	0x03CD23BC LDR V0, [X20 + 0x50]
	0x03CD23C0 LDR V1, [X19 + 0x50]
	0x03CD23C4 FCMP S0, S1
	0x03CD23C8 B.NE 0x3CD23F0
	0x03CD23CC LDR X0, [X21]
	0x03CD23D0 LDR W8, [X0 + 0xE0]
	0x03CD23D4 CBNZ W8, 0x3CD23DC
	0x03CD23D8 BL 0x1C16DFC
	0x03CD23DC LDR V0, [X20 + 0x54]
	0x03CD23E0 LDR V1, [X19 + 0x54]
	0x03CD23E4 FCMP S0, S1
	0x03CD23E8 CSET W0, EQ
	0x03CD23EC B 0x3CD23F4
	0x03CD23F0 MOV W0, W31
	0x03CD23F4 LDP X20, X19, [X31 + 0x20]
	0x03CD23F8 LDP X22, X21, [X31 + 0x10]
	0x03CD23FC LDR X30, [X31 + 0x8]
	0x03CD2400 LDR V8, [X31], #0x30
	0x03CD2404 RET
	0x03CD2408 SUB X31, X31, 0xE0
	0x03CD240C STR X30, [X31 + 0xB0]
	0x03CD2410 STP X22, X21, [X31 + 0xC0]
	0x03CD2414 STP X20, X19, [X31 + 0xD0]
	0x03CD2418 ADRP X22, 0x715000
	0x03CD241C ADRP X21, 0x449000
	0x03CD2420 LDRB W8, [X22 + 0x448]
	0x03CD2424 LDR X21, [X21 + 0x5E8]
	0x03CD2428 MOV X20, X1
	0x03CD242C MOV X19, X0
	0x03CD2430 TBNZ X8, 0x0, 0x3CD2448
	0x03CD2434 ADRP X0, 0x449000
	0x03CD2438 LDR X0, [X0 + 0x5E8]
	0x03CD243C BL 0x1C16CF4
	0x03CD2440 MOVZ W8, 0x1
	0x03CD2444 STRB W8, [X22 + 0x448]
	0x03CD2448 ADD X0, X31, 0x58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x716000
	006 Move X21, 0x422000
	007 Move W8, [X20+1076]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x422000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1076], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Move X2, X31
	027 Call Object.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {39}
	032 Move W20, W31
	033 Move W0, W20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Compare X19, 0
	040 JumpIfEqual {63}
	041 Move W20, W31
	042 Move X0, X19
	043 Move X1, X31
	044 Call Transform.get_parent, X0
	045 Move X8, [X21]
	046 Move X19, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {33}
	060 Compare X19, 0
	061 JumpIfEqual {63}
	062 Add W20, W20, 1
	063 Call 0x1C17F20

Method: System.Int32 SortLayoutList(UnityEngine.UI.ICanvasElement x, UnityEngine.UI.ICanvasElement y)

Disassembly:
	0x03CD244C MOVZ W2, 0x58
	0x03CD2450 MOV X1, X20
	0x03CD2454 BL 0x3EB1AC0
	0x03CD2458 LDR X0, [X21]
	0x03CD245C LDR W8, [X0 + 0xE0]
	0x03CD2460 CBNZ W8, 0x3CD2468
	0x03CD2464 BL 0x1C16DFC
	0x03CD2468 ADD X0, X31, 0x0
	0x03CD246C ADD X1, X31, 0x58
	0x03CD2470 MOVZ W2, 0x58
	0x03CD2474 BL 0x3EB1AC0
	0x03CD2478 ADD X1, X31, 0x0
	0x03CD247C MOV X0, X19
	0x03CD2480 BL 0x3CD2210
	0x03CD2484 LDP X20, X19, [X31 + 0xD0]
	0x03CD2488 LDP X22, X21, [X31 + 0xC0]
	0x03CD248C LDR X30, [X31 + 0xB0]
	0x03CD2490 AND W0, W0, 0x1
	0x03CD2494 ADD X31, X31, 0xE0
	0x03CD2498 RET
	0x03CD249C SUB X31, X31, 0xE0
	0x03CD24A0 STR X30, [X31 + 0xB0]
	0x03CD24A4 STP X22, X21, [X31 + 0xC0]
	0x03CD24A8 STP X20, X19, [X31 + 0xD0]
	0x03CD24AC ADRP X22, 0x715000
	0x03CD24B0 ADRP X21, 0x449000
	0x03CD24B4 LDRB W8, [X22 + 0x449]
	0x03CD24B8 LDR X21, [X21 + 0x5E8]
	0x03CD24BC MOV X20, X1
	0x03CD24C0 MOV X19, X0
	0x03CD24C4 TBNZ X8, 0x0, 0x3CD24DC
	0x03CD24C8 ADRP X0, 0x449000
	0x03CD24CC LDR X0, [X0 + 0x5E8]
	0x03CD24D0 BL 0x1C16CF4
	0x03CD24D4 MOVZ W8, 0x1
	0x03CD24D8 STRB W8, [X22 + 0x449]
	0x03CD24DC ADD X0, X31, 0x58
	0x03CD24E0 MOVZ W2, 0x58
	0x03CD24E4 MOV X1, X20
	0x03CD24E8 BL 0x3EB1AC0
	0x03CD24EC LDR X0, [X21]
	0x03CD24F0 LDR W8, [X0 + 0xE0]
	0x03CD24F4 CBNZ W8, 0x3CD24FC
	0x03CD24F8 BL 0x1C16DFC
	0x03CD24FC ADD X0, X31, 0x0
	0x03CD2500 ADD X1, X31, 0x58
	0x03CD2504 MOVZ W2, 0x58
	0x03CD2508 BL 0x3EB1AC0
	0x03CD250C ADD X1, X31, 0x0
	0x03CD2510 MOV X0, X19
	0x03CD2514 BL 0x3CD2210
	0x03CD2518 LDP X20, X19, [X31 + 0xD0]
	0x03CD251C LDP X22, X21, [X31 + 0xC0]
	0x03CD2520 LDR X30, [X31 + 0xB0]
	0x03CD2524 ORN W8, W31, W0, 0x0
	0x03CD2528 AND W0, W8, 0x1
	0x03CD252C ADD X31, X31, 0xE0
	0x03CD2530 RET
	0x03CD2534 SUB X31, X31, 0x80
	0x03CD2538 STP X30, X21, [X31 + 0x60]
	0x03CD253C STP X20, X19, [X31 + 0x70]
	0x03CD2540 ADRP X21, 0x715000
	0x03CD2544 ADRP X20, 0x449000
	0x03CD2548 LDRB W8, [X21 + 0x44A]
	0x03CD254C LDR X20, [X20 + 0x5E8]
	0x03CD2550 MOV X19, X0
	0x03CD2554 TBNZ X8, 0x0, 0x3CD256C
	0x03CD2558 ADRP X0, 0x449000
	0x03CD255C LDR X0, [X0 + 0x5E8]
	0x03CD2560 BL 0x1C16CF4
	0x03CD2564 MOVZ W8, 0x1
	0x03CD2568 STRB W8, [X21 + 0x44A]
	0x03CD256C ADD X0, X31, 0x8
	0x03CD2570 MOVZ W2, 0x58
	0x03CD2574 MOV X1, X19
	0x03CD2578 BL 0x3EB1AC0
	0x03CD257C LDR X0, [X20]
	0x03CD2580 ADD X1, X31, 0x8
	0x03CD2584 BL 0x1C16E04
	0x03CD2588 MOV X1, X31
	0x03CD258C BL 0x33D55D8
	0x03CD2590 LDP X20, X19, [X31 + 0x70]
	0x03CD2594 LDP X30, X21, [X31 + 0x60]
	0x03CD2598 ADD X31, X31, 0x80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x716000
	006 Move W8, [X21+1077]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x487000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move X0, 0x488000
	017 Move X0, [X0+2848]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1077], W8
	021 Compare X20, 0
	022 JumpIfEqual {92}
	023 Move X21, 0x488000
	024 Move X8, [X20]
	025 Move X21, [X21+2848]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X21]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 1
	037 Move X0, X20
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 1
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X19, 0
	048 JumpIfEqual {92}
	049 Move X8, [X19]
	050 Move X1, [X21]
	051 Move X21, 0x487000
	052 Move X20, X0
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X21, [X21+1816]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 1
	064 Move X0, X19
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 1
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X21]
	075 Move X19, X0
	076 Move W9, [X8+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Call CanvasUpdateRegistry.ParentCount, X0
	083 Move W20, W0
	084 Move X0, X19
	085 Call CanvasUpdateRegistry.ParentCount, X0
	086 Subtract W0, W20, W0
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return X0
	092 Call 0x1C17F20

Method: System.Void RegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD259C RET
	0x03CD25A0 STR X30, [X31 - 0x30]!
	0x03CD25A4 STP X22, X21, [X31 + 0x10]
	0x03CD25A8 STP X20, X19, [X31 + 0x20]
	0x03CD25AC ADRP X21, 0x715000
	0x03CD25B0 ADRP X22, 0x490000
	0x03CD25B4 ADRP X20, 0x490000
	0x03CD25B8 LDRB W8, [X21 + 0x44B]
	0x03CD25BC LDR X22, [X22 + 0x110]
	0x03CD25C0 LDR X20, [X20 + 0x118]
	0x03CD25C4 MOV X19, X0
	0x03CD25C8 TBNZ X8, 0x0, 0x3CD25EC
	0x03CD25CC ADRP X0, 0x490000
	0x03CD25D0 LDR X0, [X0 + 0x118]
	0x03CD25D4 BL 0x1C16CF4
	0x03CD25D8 ADRP X0, 0x490000
	0x03CD25DC LDR X0, [X0 + 0x110]
	0x03CD25E0 BL 0x1C16CF4
	0x03CD25E4 MOVZ W8, 0x1
	0x03CD25E8 STRB W8, [X21 + 0x44B]
	0x03CD25EC LDR X0, [X22]
	0x03CD25F0 BL 0x1C16F10
	0x03CD25F4 LDR X1, [X20]
	0x03CD25F8 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x716000
	006 Move X21, 0x487000
	007 Move W8, [X20+1078]
	008 Move X21, [X21+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x487000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1078], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call CanvasUpdateRegistry.get_instance
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call 0x1C17F20

Method: System.Boolean TryRegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD2694 ADRP X20, 0x715000
	0x03CD2698 LDRB W8, [X20 + 0x44F]
	0x03CD269C MOV X19, X0
	0x03CD26A0 TBNZ X8, 0x0, 0x3CD26B8
	0x03CD26A4 ADRP X0, 0x490000
	0x03CD26A8 LDR X0, [X0 + 0x128]
	0x03CD26AC BL 0x1C16CF4
	0x03CD26B0 MOVZ W8, 0x1
	0x03CD26B4 STRB W8, [X20 + 0x44F]
	0x03CD26B8 BL 0x3CD1210
	0x03CD26BC CBZ X0, 0x3CD26E4
	0x03CD26C0 LDR X0, [X0 + 0x10]
	0x03CD26C4 CBZ X0, 0x3CD26E4
	0x03CD26C8 ADRP X8, 0x490000
	0x03CD26CC LDR X8, [X8 + 0x128]
	0x03CD26D0 MOV X1, X19
	0x03CD26D4 LDP X20, X19, [X31 + 0x10]
	0x03CD26D8 LDR X2, [X8]
	0x03CD26DC LDR X30, [X31], #0x20
	0x03CD26E0 B 0x2DE291C
	0x03CD26E4 BL 0x1C16F20
	0x03CD26E8 STR X30, [X31 - 0x20]!
	0x03CD26EC STP X20, X19, [X31 + 0x10]
	0x03CD26F0 ADRP X20, 0x715000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x716000
	006 Move X21, 0x487000
	007 Move W8, [X20+1079]
	008 Move X21, [X21+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x487000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1079], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call CanvasUpdateRegistry.get_instance
	025 Compare X0, 0
	026 JumpIfEqual {34}
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call CanvasUpdateRegistry.InternalRegisterCanvasElementForLayoutRebuild, X0, X1
	033 Return X0
	034 Call 0x1C17F20

Method: System.Boolean InternalRegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD25FC BL 0x2DE2F98
	0x03CD2600 STR X20, [X19 + 0x10]
	0x03CD2604 MOV X0, X19
	0x03CD2608 LDP X20, X19, [X31 + 0x20]
	0x03CD260C LDP X22, X21, [X31 + 0x10]
	0x03CD2610 MOV X1, X31
	0x03CD2614 LDR X30, [X31], #0x30
	0x03CD2618 B 0x33BDD8C
	0x03CD261C STR X30, [X31 - 0x20]!
	0x03CD2620 STP X20, X19, [X31 + 0x10]
	0x03CD2624 ADRP X20, 0x715000
	0x03CD2628 LDRB W8, [X20 + 0x44E]
	0x03CD262C MOV X19, X0
	0x03CD2630 TBNZ X8, 0x0, 0x3CD2648
	0x03CD2634 ADRP X0, 0x490000
	0x03CD2638 LDR X0, [X0 + 0x120]
	0x03CD263C BL 0x1C16CF4
	0x03CD2640 MOVZ W8, 0x1
	0x03CD2644 STRB W8, [X20 + 0x44E]
	0x03CD2648 CBZ X19, 0x3CD267C
	0x03CD264C BL 0x3CD1210
	0x03CD2650 CBZ X0, 0x3CD2688
	0x03CD2654 LDR X0, [X0 + 0x10]
	0x03CD2658 CBZ X0, 0x3CD2688
	0x03CD265C ADRP X8, 0x490000
	0x03CD2660 LDR X8, [X8 + 0x120]
	0x03CD2664 MOV X1, X19
	0x03CD2668 LDP X20, X19, [X31 + 0x10]
	0x03CD266C MOVZ W2, 0x1
	0x03CD2670 LDR X3, [X8]
	0x03CD2674 LDR X30, [X31], #0x20
	0x03CD2678 B 0x2DE276C
	0x03CD267C LDP X20, X19, [X31 + 0x10]
	0x03CD2680 LDR X30, [X31], #0x20
	0x03CD2684 RET
	0x03CD2688 BL 0x1C16F20
	0x03CD268C STR X30, [X31 - 0x20]!
	0x03CD2690 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x716000
	006 Move W8, [X21+1080]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x491000
	014 Move X0, [X0+208]
	015 Call 0x1C17CF4
	016 Move X0, 0x491000
	017 Move X0, [X0+216]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1080], W8
	021 Move X0, [X20+32]
	022 Compare X0, 0
	023 JumpIfEqual {53}
	024 Move X8, 0x491000
	025 Move X8, [X8+216]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call 0x2DE3A3C, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {39}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W0, W31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X0, [X20+32]
	040 Compare X0, 0
	041 JumpIfEqual {53}
	042 Move X8, 0x491000
	043 Move X8, [X8+208]
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move W2, 1
	048 Move X3, [X8]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call 0x2DE376C, X0, X1, X2
	052 Return X0
	053 Call 0x1C17F20

Method: System.Void RegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD26F4 LDRB W8, [X20 + 0x450]
	0x03CD26F8 MOV X19, X0
	0x03CD26FC TBNZ X8, 0x0, 0x3CD2714
	0x03CD2700 ADRP X0, 0x490000
	0x03CD2704 LDR X0, [X0 + 0x130]
	0x03CD2708 BL 0x1C16CF4
	0x03CD270C MOVZ W8, 0x1
	0x03CD2710 STRB W8, [X20 + 0x450]
	0x03CD2714 BL 0x3CD1210
	0x03CD2718 CBZ X0, 0x3CD2740
	0x03CD271C LDR X0, [X0 + 0x10]
	0x03CD2720 CBZ X0, 0x3CD2740
	0x03CD2724 ADRP X8, 0x490000
	0x03CD2728 LDR X8, [X8 + 0x130]
	0x03CD272C MOV X1, X19
	0x03CD2730 LDP X20, X19, [X31 + 0x10]
	0x03CD2734 LDR X2, [X8]
	0x03CD2738 LDR X30, [X31], #0x20
	0x03CD273C B 0x2DE2890
	0x03CD2740 BL 0x1C16F20
	0x03CD2744 STP D15, D14, [X31 - 0x70]!
	0x03CD2748 STP D13, D12, [X31 + 0x10]
	0x03CD274C STP D11, D10, [X31 + 0x20]
	0x03CD2750 STP D9, D8, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x716000
	006 Move X21, 0x487000
	007 Move W8, [X20+1081]
	008 Move X21, [X21+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x487000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1081], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call CanvasUpdateRegistry.get_instance
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call 0x1C17F20

Method: System.Boolean TryRegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD2824 BL 0x301BCCC
	0x03CD2828 CBZ X0, 0x3CD2918
	0x03CD282C MOV X1, X31
	0x03CD2830 BL 0x3E39ECC
	0x03CD2834 LDR X2, [X22]
	0x03CD2838 MOV X0, X20
	0x03CD283C MOV W1, W21
	0x03CD2840 MOV V8.16B, V0.16B
	0x03CD2844 MOV V9.16B, V1.16B
	0x03CD2848 MOV V11.16B, V2.16B
	0x03CD284C MOV V10.16B, V3.16B
	0x03CD2850 BL 0x301BCCC
	0x03CD2854 CBZ X0, 0x3CD2918
	0x03CD2858 LDP S0, S1, [X0 + 0x64]
	0x03CD285C LDP S2, S3, [X0 + 0x6C]
	0x03CD2860 FADD S4, S11, S8
	0x03CD2864 FADD S5, S10, S9
	0x03CD2868 FADD S0, S8, S0
	0x03CD286C FADD S1, S9, S1
	0x03CD2870 FCMP S12, S0
	0x03CD2874 FSUB S2, S4, S2
	0x03CD2878 FCSEL S12, S0, S12, MI
	0x03CD287C FCMP S13, S1
	0x03CD2880 FSUB S3, S5, S3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x716000
	006 Move X21, 0x487000
	007 Move W8, [X20+1082]
	008 Move X21, [X21+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x487000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1082], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call CanvasUpdateRegistry.get_instance
	025 Compare X0, 0
	026 JumpIfEqual {34}
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call CanvasUpdateRegistry.InternalRegisterCanvasElementForGraphicRebuild, X0, X1
	033 Return X0
	034 Call 0x1C17F20

Method: System.Boolean InternalRegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD2754 STP X30, X23, [X31 + 0x40]
	0x03CD2758 STP X22, X21, [X31 + 0x50]
	0x03CD275C STP X20, X19, [X31 + 0x60]
	0x03CD2760 ADRP X21, 0x715000
	0x03CD2764 LDRB W8, [X21 + 0x451]
	0x03CD2768 MOV X19, X1
	0x03CD276C MOV X20, X0
	0x03CD2770 TBNZ X8, 0x0, 0x3CD2794
	0x03CD2774 ADRP X0, 0x490000
	0x03CD2778 LDR X0, [X0 + 0x138]
	0x03CD277C BL 0x1C16CF4
	0x03CD2780 ADRP X0, 0x490000
	0x03CD2784 LDR X0, [X0 + 0x140]
	0x03CD2788 BL 0x1C16CF4
	0x03CD278C MOVZ W8, 0x1
	0x03CD2790 STRB W8, [X21 + 0x451]
	0x03CD2794 CBZ X20, 0x3CD2918
	0x03CD2798 LDR W8, [X20 + 0x18]
	0x03CD279C CBZ W8, 0x3CD28E4
	0x03CD27A0 ADRP X22, 0x490000
	0x03CD27A4 LDR X22, [X22 + 0x140]
	0x03CD27A8 MOV X0, X20
	0x03CD27AC MOV W1, W31
	0x03CD27B0 LDR X2, [X22]
	0x03CD27B4 BL 0x301BCCC
	0x03CD27B8 CBZ X0, 0x3CD2918
	0x03CD27BC MOV X1, X31
	0x03CD27C0 BL 0x3E39ECC
	0x03CD27C4 LDR X2, [X22]
	0x03CD27C8 MOV X0, X20
	0x03CD27CC MOV W1, W31
	0x03CD27D0 MOV V8.16B, V0.16B
	0x03CD27D4 MOV V9.16B, V1.16B
	0x03CD27D8 MOV V11.16B, V2.16B
	0x03CD27DC MOV V10.16B, V3.16B
	0x03CD27E0 BL 0x301BCCC
	0x03CD27E4 CBZ X0, 0x3CD2918
	0x03CD27E8 LDP S0, S1, [X0 + 0x64]
	0x03CD27EC LDP S2, S3, [X0 + 0x6C]
	0x03CD27F0 LDR W23, [X20 + 0x18]
	0x03CD27F4 FADD S4, S11, S8
	0x03CD27F8 FADD S5, S10, S9
	0x03CD27FC FADD S12, S8, S0
	0x03CD2800 FSUB S14, S4, S2
	0x03CD2804 FADD S13, S9, S1
	0x03CD2808 CMP W23, 0x2
	0x03CD280C FSUB S15, S5, S3
	0x03CD2810 B.LT 0x3CD28A4
	0x03CD2814 MOVZ W21, 0x1
	0x03CD2818 LDR X2, [X22]
	0x03CD281C MOV X0, X20
	0x03CD2820 MOV W1, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x716000
	006 Move W8, [X21+1083]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x422000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x491000
	017 Move X0, [X0+208]
	018 Call 0x1C17CF4
	019 Move X0, 0x491000
	020 Move X0, [X0+224]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1083], W8
	024 Move W8, [X20+17]
	025 Compare W8, 0
	026 JumpIfEqual {51}
	027 Move X8, 0x491000
	028 Move X8, [X8+224]
	029 Move X20, 0x422000
	030 Move X1, X19
	031 Move X2, X31
	032 Move X0, [X8]
	033 Move X20, [X20+2600]
	034 Call String.Format, X0, X1
	035 Move X8, [X20]
	036 Move X19, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Call Debug.LogError, X0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Move X0, [X20+40]
	052 Compare X0, 0
	053 JumpIfEqual {65}
	054 Move X8, 0x491000
	055 Move X8, [X8+208]
	056 Move X1, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W2, 1
	060 Move X3, [X8]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call 0x2DE376C, X0, X1, X2
	064 Return X0
	065 Call 0x1C17F20

Method: System.Void UnRegisterCanvasElementForRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD2884 FCSEL S13, S1, S13, MI
	0x03CD2888 FCMP S14, S2
	0x03CD288C ADD W21, W21, 0x1
	0x03CD2890 FCSEL S14, S2, S14, GT
	0x03CD2894 FCMP S15, S3
	0x03CD2898 FCSEL S15, S3, S15, GT
	0x03CD289C CMP W23, W21
	0x03CD28A0 B.NE 0x3CD2818
	0x03CD28A4 FCMP S14, S12
	0x03CD28A8 CSET W8, GT
	0x03CD28AC FCMP S15, S13
	0x03CD28B0 CSET W9, GT
	0x03CD28B4 FMOV S0, W31
	0x03CD28B8 FMOV S1, W31
	0x03CD28BC FMOV S2, W31
	0x03CD28C0 ANDS W8, W9, W8, 0x0
	0x03CD28C4 FMOV S3, W31
	0x03CD28C8 STRB W8, [X19]
	0x03CD28CC B.EQ 0x3CD28F8
	0x03CD28D0 FSUB S2, S14, S12
	0x03CD28D4 FSUB S3, S15, S13
	0x03CD28D8 MOV V0.16B, V12.16B
	0x03CD28DC MOV V1.16B, V13.16B
	0x03CD28E0 B 0x3CD28F8
	0x03CD28E4 STRB W31, [X19]
	0x03CD28E8 FMOV S0, W31
	0x03CD28EC FMOV S1, W31
	0x03CD28F0 FMOV S2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x716000
	006 Move X21, 0x487000
	007 Move W8, [X20+1084]
	008 Move X21, [X21+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x487000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1084], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call CanvasUpdateRegistry.get_instance
	025 Compare X0, 0
	026 JumpIfEqual {39}
	027 Move X1, X19
	028 Call CanvasUpdateRegistry.InternalUnRegisterCanvasElementForLayoutRebuild, X0, X1
	029 Call CanvasUpdateRegistry.get_instance
	030 Compare X0, 0
	031 JumpIfEqual {39}
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call CanvasUpdateRegistry.InternalUnRegisterCanvasElementForGraphicRebuild, X0, X1
	038 Return 
	039 Call 0x1C17F20

Method: System.Void DisableCanvasElementForRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD2BBC MOVZ W8, 0x1
	0x03CD2BC0 STRB W8, [X22 + 0x4EE]
	0x03CD2BC4 LDR X0, [X21]
	0x03CD2BC8 LDR W8, [X0 + 0xE0]
	0x03CD2BCC CBNZ W8, 0x3CD2BD8
	0x03CD2BD0 BL 0x1C16DFC
	0x03CD2BD4 LDR X0, [X21]
	0x03CD2BD8 LDR X8, [X0 + 0xB8]
	0x03CD2BDC LDR X21, [X8]
	0x03CD2BE0 CBZ X21, 0x3CD2C90
	0x03CD2BE4 ADRP X10, 0x490000
	0x03CD2BE8 LDR X8, [X21]
	0x03CD2BEC LDR X10, [X10 + 0x150]
	0x03CD2BF0 LDRH W9, [X8 + 0x12E]
	0x03CD2BF4 LDR X1, [X10]
	0x03CD2BF8 CBZ X9, 0x3CD2C1C
	0x03CD2BFC LDR X10, [X8 + 0xB0]
	0x03CD2C00 ADD X10, X10, 0x8
	0x03CD2C04 LDUR X11, [X10 - 0x8]
	0x03CD2C08 CMP X11, X1
	0x03CD2C0C B.EQ 0x3CD2C2C
	0x03CD2C10 SUBS X9, X9, 0x1
	0x03CD2C14 ADD X10, X10, 0x10
	0x03CD2C18 B.NE 0x3CD2C04
	0x03CD2C1C MOV X0, X21
	0x03CD2C20 MOV W2, W31
	0x03CD2C24 BL 0x1C5C788
	0x03CD2C28 B 0x3CD2C38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x716000
	006 Move X21, 0x487000
	007 Move W8, [X20+1085]
	008 Move X21, [X21+1816]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x487000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1085], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call CanvasUpdateRegistry.get_instance
	025 Compare X0, 0
	026 JumpIfEqual {39}
	027 Move X1, X19
	028 Call CanvasUpdateRegistry.InternalDisableCanvasElementForLayoutRebuild, X0, X1
	029 Call CanvasUpdateRegistry.get_instance
	030 Compare X0, 0
	031 JumpIfEqual {39}
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call CanvasUpdateRegistry.InternalDisableCanvasElementForGraphicRebuild, X0, X1
	038 Return 
	039 Call 0x1C17F20

Method: System.Void InternalUnRegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD28F4 FMOV S3, W31
	0x03CD28F8 LDP X20, X19, [X31 + 0x60]
	0x03CD28FC LDP X22, X21, [X31 + 0x50]
	0x03CD2900 LDP X30, X23, [X31 + 0x40]
	0x03CD2904 LDP D9, D8, [X31 + 0x30]
	0x03CD2908 LDP D11, D10, [X31 + 0x20]
	0x03CD290C LDP D13, D12, [X31 + 0x10]
	0x03CD2910 LDP D15, D14, [X31], #0x70
	0x03CD2914 RET
	0x03CD2918 BL 0x1C16F20
	0x03CD291C STP X30, X23, [X31 - 0x30]!
	0x03CD2920 STP X22, X21, [X31 + 0x10]
	0x03CD2924 STP X20, X19, [X31 + 0x20]
	0x03CD2928 ADRP X22, 0x715000
	0x03CD292C ADRP X23, 0x421000
	0x03CD2930 LDRB W8, [X22 + 0x452]
	0x03CD2934 LDR X23, [X23 + 0x598]
	0x03CD2938 MOV X20, X2
	0x03CD293C MOV X21, X1
	0x03CD2940 MOV X19, X0
	0x03CD2944 TBNZ X8, 0x0, 0x3CD2968
	0x03CD2948 ADRP X0, 0x486000
	0x03CD294C LDR X0, [X0 + 0x570]
	0x03CD2950 BL 0x1C16CF4
	0x03CD2954 ADRP X0, 0x421000
	0x03CD2958 LDR X0, [X0 + 0x598]
	0x03CD295C BL 0x1C16CF4
	0x03CD2960 MOVZ W8, 0x1
	0x03CD2964 STRB W8, [X22 + 0x452]
	0x03CD2968 LDR X0, [X23]
	0x03CD296C LDR W8, [X0 + 0xE0]
	0x03CD2970 CBNZ W8, 0x3CD2978
	0x03CD2974 BL 0x1C16DFC
	0x03CD2978 MOV X0, X20
	0x03CD297C MOV X1, X31
	0x03CD2980 MOV X2, X31
	0x03CD2984 BL 0x3C3883C
	0x03CD2988 FMOV S0, W31
	0x03CD298C FMOV S1, W31
	0x03CD2990 FMOV S2, W31
	0x03CD2994 FMOV S3, W31
	0x03CD2998 TBNZ X0, 0x0, 0x3CD2A5C
	0x03CD299C CBZ X21, 0x3CD2A6C
	0x03CD29A0 LDR X1, [X19 + 0x10]
	0x03CD29A4 MOV X0, X21
	0x03CD29A8 MOV X2, X31
	0x03CD29AC BL 0x3C3F058
	0x03CD29B0 CBZ X20, 0x3CD2A6C
	0x03CD29B4 ADRP X8, 0x486000
	0x03CD29B8 LDR X8, [X8 + 0x570]
	0x03CD29BC MOV X0, X20
	0x03CD29C0 LDR X1, [X8]
	0x03CD29C4 BL 0x21A3894
	0x03CD29C8 LDR X21, [X19 + 0x18]
	0x03CD29CC MOV X20, X0
	0x03CD29D0 MOV X22, X31
	0x03CD29D4 MOV X23, X31
	0x03CD29D8 LDR X8, [X19 + 0x10]
	0x03CD29DC CBZ X8, 0x3CD2A6C
	0x03CD29E0 LDR W9, [X8 + 0x18]
	0x03CD29E4 CMP X23, X9
	0x03CD29E8 B.CS 0x3CD2A70
	0x03CD29EC CBZ X20, 0x3CD2A6C
	0x03CD29F0 ADD X8, X8, X22
	0x03CD29F4 LDP S1, S2, [X8 + 0x24]
	0x03CD29F8 LDR V0, [X8 + 0x20]
	0x03CD29FC MOV X0, X20
	0x03CD2A00 MOV X1, X31
	0x03CD2A04 BL 0x3C40B58
	0x03CD2A08 CBZ X21, 0x3CD2A6C
	0x03CD2A0C LDR W8, [X21 + 0x18]
	0x03CD2A10 CMP X23, X8
	0x03CD2A14 B.CS 0x3CD2A70
	0x03CD2A18 ADD X8, X21, X22
	0x03CD2A1C STP S0, S1, [X8 + 0x20]
	0x03CD2A20 STR S2, [X8 + 0x28]
	0x03CD2A24 LDR X21, [X19 + 0x18]
	0x03CD2A28 ADD X23, X23, 0x1
	0x03CD2A2C CMP X23, 0x4
	0x03CD2A30 ADD X22, X22, 0xC
	0x03CD2A34 B.NE 0x3CD29D8
	0x03CD2A38 CBZ X21, 0x3CD2A6C
	0x03CD2A3C LDR W8, [X21 + 0x18]
	0x03CD2A40 CBZ W8, 0x3CD2A70
	0x03CD2A44 CMP W8, 0x2
	0x03CD2A48 B.LS 0x3CD2A70
	0x03CD2A4C LDP S0, S1, [X21 + 0x20]
	0x03CD2A50 LDP S2, S3, [X21 + 0x38]
	0x03CD2A54 FSUB S2, S2, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x716000
	006 Move W8, [X21+1086]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x487000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move X0, 0x422000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x488000
	020 Move X0, [X0+2848]
	021 Call 0x1C17CF4
	022 Move X0, 0x491000
	023 Move X0, [X0+232]
	024 Call 0x1C17CF4
	025 Move X0, 0x491000
	026 Move X0, [X0+240]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1086], W8
	030 Move W8, [X20+16]
	031 Compare W8, 0
	032 JumpIfEqual {56}
	033 Move X8, 0x491000
	034 Move X8, [X8+240]
	035 Move X20, 0x422000
	036 Move X1, X19
	037 Move X2, X31
	038 Move X0, [X8]
	039 Move X20, [X20+2600]
	040 Call String.Format, X0, X1
	041 Move X8, [X20]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call Debug.LogError, X0
	055 Return 
	056 Compare X19, 0
	057 JumpIfEqual {105}
	058 Move X10, 0x488000
	059 Move X8, [X19]
	060 Move X10, [X10+2848]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 2
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 2
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, 0x487000
	083 Move X8, [X8+1816]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Call CanvasUpdateRegistry.get_instance
	090 Compare X0, 0
	091 JumpIfEqual {105}
	092 Move X0, [X0+32]
	093 Compare X0, 0
	094 JumpIfEqual {105}
	095 Move X8, 0x491000
	096 Move X8, [X8+232]
	097 Move X1, X19
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X2, [X8]
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Call 0x2DE391C, X0, X1
	104 Return 
	105 Call 0x1C17F20

Method: System.Void InternalUnRegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD2A58 FSUB S3, S3, S1
	0x03CD2A5C LDP X20, X19, [X31 + 0x20]
	0x03CD2A60 LDP X22, X21, [X31 + 0x10]
	0x03CD2A64 LDP X30, X23, [X31], #0x30
	0x03CD2A68 RET
	0x03CD2A6C BL 0x1C16F20
	0x03CD2A70 BL 0x1C16F28
	0x03CD2A74 STP X30, X21, [X31 - 0x20]!
	0x03CD2A78 STP X20, X19, [X31 + 0x10]
	0x03CD2A7C ADRP X21, 0x715000
	0x03CD2A80 ADRP X20, 0x423000
	0x03CD2A84 LDRB W8, [X21 + 0x453]
	0x03CD2A88 LDR X20, [X20 + 0x9B0]
	0x03CD2A8C MOV X19, X0
	0x03CD2A90 TBNZ X8, 0x0, 0x3CD2AA8
	0x03CD2A94 ADRP X0, 0x423000
	0x03CD2A98 LDR X0, [X0 + 0x9B0]
	0x03CD2A9C BL 0x1C16CF4
	0x03CD2AA0 MOVZ W8, 0x1
	0x03CD2AA4 STRB W8, [X21 + 0x453]
	0x03CD2AA8 LDR X0, [X20]
	0x03CD2AAC MOVZ W1, 0x4
	0x03CD2AB0 BL 0x1C16D6C
	0x03CD2AB4 STR X0, [X19 + 0x10]
	0x03CD2AB8 LDR X0, [X20]
	0x03CD2ABC MOVZ W1, 0x4
	0x03CD2AC0 BL 0x1C16D6C
	0x03CD2AC4 STR X0, [X19 + 0x18]
	0x03CD2AC8 MOV X0, X19
	0x03CD2ACC LDP X20, X19, [X31 + 0x10]
	0x03CD2AD0 MOV X1, X31
	0x03CD2AD4 LDP X30, X21, [X31], #0x20
	0x03CD2AD8 B 0x33BDD8C
	0x03CD2ADC STR X30, [X31 - 0x20]!
	0x03CD2AE0 STP X20, X19, [X31 + 0x10]
	0x03CD2AE4 ADRP X20, 0x715000
	0x03CD2AE8 ADRP X19, 0x490000
	0x03CD2AEC LDRB W8, [X20 + 0x454]
	0x03CD2AF0 LDR X19, [X19 + 0x148]
	0x03CD2AF4 TBNZ X8, 0x0, 0x3CD2B0C
	0x03CD2AF8 ADRP X0, 0x490000
	0x03CD2AFC LDR X0, [X0 + 0x148]
	0x03CD2B00 BL 0x1C16CF4
	0x03CD2B04 MOVZ W8, 0x1
	0x03CD2B08 STRB W8, [X20 + 0x454]
	0x03CD2B0C LDR X0, [X19]
	0x03CD2B10 LDR W8, [X0 + 0xE0]
	0x03CD2B14 CBNZ W8, 0x3CD2B20
	0x03CD2B18 BL 0x1C16DFC
	0x03CD2B1C LDR X0, [X19]
	0x03CD2B20 LDR X8, [X0 + 0xB8]
	0x03CD2B24 LDP X20, X19, [X31 + 0x10]
	0x03CD2B28 LDR X0, [X8]
	0x03CD2B2C LDR X30, [X31], #0x20
	0x03CD2B30 RET
	0x03CD2B34 STP D9, D8, [X31 - 0x40]!
	0x03CD2B38 STR X30, [X31 + 0x10]
	0x03CD2B3C STP X22, X21, [X31 + 0x20]
	0x03CD2B40 STP X20, X19, [X31 + 0x30]
	0x03CD2B44 ADRP X22, 0x715000
	0x03CD2B48 ADRP X21, 0x490000
	0x03CD2B4C LDRB W8, [X22 + 0x455]
	0x03CD2B50 LDR X21, [X21 + 0x148]
	0x03CD2B54 MOV X19, X1
	0x03CD2B58 MOV V8.16B, V1.16B
	0x03CD2B5C MOV V9.16B, V0.16B
	0x03CD2B60 MOV X20, X0
	0x03CD2B64 TBNZ X8, 0x0, 0x3CD2B94
	0x03CD2B68 ADRP X0, 0x490000
	0x03CD2B6C LDR X0, [X0 + 0x148]
	0x03CD2B70 BL 0x1C16CF4
	0x03CD2B74 ADRP X0, 0x481000
	0x03CD2B78 LDR X0, [X0 + 0xB40]
	0x03CD2B7C BL 0x1C16CF4
	0x03CD2B80 ADRP X0, 0x490000
	0x03CD2B84 LDR X0, [X0 + 0x150]
	0x03CD2B88 BL 0x1C16CF4
	0x03CD2B8C MOVZ W8, 0x1
	0x03CD2B90 STRB W8, [X22 + 0x455]
	0x03CD2B94 LDR X0, [X21]
	0x03CD2B98 LDR W8, [X0 + 0xE0]
	0x03CD2B9C CBNZ W8, 0x3CD2BA4
	0x03CD2BA0 BL 0x1C16DFC
	0x03CD2BA4 ADRP X22, 0x715000
	0x03CD2BA8 LDRB W8, [X22 + 0x4EE]
	0x03CD2BAC CBNZ W8, 0x3CD2BC4
	0x03CD2BB0 ADRP X0, 0x490000
	0x03CD2BB4 LDR X0, [X0 + 0x148]
	0x03CD2BB8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x716000
	006 Move W8, [X21+1087]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x487000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move X0, 0x422000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x488000
	020 Move X0, [X0+2848]
	021 Call 0x1C17CF4
	022 Move X0, 0x491000
	023 Move X0, [X0+232]
	024 Call 0x1C17CF4
	025 Move X0, 0x491000
	026 Move X0, [X0+240]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1087], W8
	030 Move W8, [X20+17]
	031 Compare W8, 0
	032 JumpIfEqual {56}
	033 Move X8, 0x491000
	034 Move X8, [X8+240]
	035 Move X20, 0x422000
	036 Move X1, X19
	037 Move X2, X31
	038 Move X0, [X8]
	039 Move X20, [X20+2600]
	040 Call String.Format, X0, X1
	041 Move X8, [X20]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call Debug.LogError, X0
	055 Return 
	056 Compare X19, 0
	057 JumpIfEqual {105}
	058 Move X10, 0x488000
	059 Move X8, [X19]
	060 Move X10, [X10+2848]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 3
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 3
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, 0x487000
	083 Move X8, [X8+1816]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Call CanvasUpdateRegistry.get_instance
	090 Compare X0, 0
	091 JumpIfEqual {105}
	092 Move X0, [X0+40]
	093 Compare X0, 0
	094 JumpIfEqual {105}
	095 Move X8, 0x491000
	096 Move X8, [X8+232]
	097 Move X1, X19
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X2, [X8]
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Call 0x2DE391C, X0, X1
	104 Return 
	105 Call 0x1C17F20

Method: System.Void InternalDisableCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD2C2C LDRSW X9, [X10]
	0x03CD2C30 ADD X8, X8, X9, 0x4, LSL
	0x03CD2C34 ADD X0, X8, 0x138
	0x03CD2C38 LDP X8, X3, [X0]
	0x03CD2C3C MOV X0, X21
	0x03CD2C40 MOV X1, X20
	0x03CD2C44 MOV X2, X19
	0x03CD2C48 BLR X8
	0x03CD2C4C CBZ X0, 0x3CD2C90
	0x03CD2C50 ADRP X8, 0x481000
	0x03CD2C54 LDR X8, [X8 + 0xB40]
	0x03CD2C58 MOV X19, X0
	0x03CD2C5C LDR X1, [X8]
	0x03CD2C60 BL 0x21E52E4
	0x03CD2C64 CBZ X0, 0x3CD2C90
	0x03CD2C68 MOV V0.16B, V9.16B
	0x03CD2C6C MOV V1.16B, V8.16B
	0x03CD2C70 MOV X1, X31
	0x03CD2C74 BL 0x3C3E99C
	0x03CD2C78 MOV X0, X19
	0x03CD2C7C LDP X20, X19, [X31 + 0x30]
	0x03CD2C80 LDP X22, X21, [X31 + 0x20]
	0x03CD2C84 LDR X30, [X31 + 0x10]
	0x03CD2C88 LDP D9, D8, [X31], #0x40
	0x03CD2C8C RET
	0x03CD2C90 BL 0x1C16F20
	0x03CD2C94 STP X30, X23, [X31 - 0x30]!
	0x03CD2C98 STP X22, X21, [X31 + 0x10]
	0x03CD2C9C STP X20, X19, [X31 + 0x20]
	0x03CD2CA0 ADRP X23, 0x715000
	0x03CD2CA4 ADRP X22, 0x490000
	0x03CD2CA8 LDRB W8, [X23 + 0x456]
	0x03CD2CAC LDR X22, [X22 + 0x148]
	0x03CD2CB0 MOV X20, X2
	0x03CD2CB4 MOV X19, X1
	0x03CD2CB8 MOV X21, X0
	0x03CD2CBC TBNZ X8, 0x0, 0x3CD2CE0
	0x03CD2CC0 ADRP X0, 0x490000
	0x03CD2CC4 LDR X0, [X0 + 0x148]
	0x03CD2CC8 BL 0x1C16CF4
	0x03CD2CCC ADRP X0, 0x490000
	0x03CD2CD0 LDR X0, [X0 + 0x150]
	0x03CD2CD4 BL 0x1C16CF4
	0x03CD2CD8 MOVZ W8, 0x1
	0x03CD2CDC STRB W8, [X23 + 0x456]
	0x03CD2CE0 LDR X0, [X22]
	0x03CD2CE4 LDR W8, [X0 + 0xE0]
	0x03CD2CE8 CBNZ W8, 0x3CD2CF0
	0x03CD2CEC BL 0x1C16DFC
	0x03CD2CF0 ADRP X23, 0x715000
	0x03CD2CF4 LDRB W8, [X23 + 0x4EE]
	0x03CD2CF8 CBNZ W8, 0x3CD2D10
	0x03CD2CFC ADRP X0, 0x490000
	0x03CD2D00 LDR X0, [X0 + 0x148]
	0x03CD2D04 BL 0x1C16CF4
	0x03CD2D08 MOVZ W8, 0x1
	0x03CD2D0C STRB W8, [X23 + 0x4EE]
	0x03CD2D10 LDR X0, [X22]
	0x03CD2D14 LDR W8, [X0 + 0xE0]
	0x03CD2D18 CBNZ W8, 0x3CD2D24
	0x03CD2D1C BL 0x1C16DFC
	0x03CD2D20 LDR X0, [X22]
	0x03CD2D24 LDR X8, [X0 + 0xB8]
	0x03CD2D28 LDR X22, [X8]
	0x03CD2D2C CBZ X22, 0x3CD2DB8
	0x03CD2D30 ADRP X10, 0x490000
	0x03CD2D34 LDR X8, [X22]
	0x03CD2D38 LDR X10, [X10 + 0x150]
	0x03CD2D3C LDRH W9, [X8 + 0x12E]
	0x03CD2D40 LDR X1, [X10]
	0x03CD2D44 CBZ X9, 0x3CD2D68
	0x03CD2D48 LDR X10, [X8 + 0xB0]
	0x03CD2D4C ADD X10, X10, 0x8
	0x03CD2D50 LDUR X11, [X10 - 0x8]
	0x03CD2D54 CMP X11, X1
	0x03CD2D58 B.EQ 0x3CD2D78
	0x03CD2D5C SUBS X9, X9, 0x1
	0x03CD2D60 ADD X10, X10, 0x10
	0x03CD2D64 B.NE 0x3CD2D50
	0x03CD2D68 MOV X0, X22
	0x03CD2D6C MOV W2, W31
	0x03CD2D70 BL 0x1C5C788
	0x03CD2D74 B 0x3CD2D84
	0x03CD2D78 LDRSW X9, [X10]
	0x03CD2D7C ADD X8, X8, X9, 0x4, LSL
	0x03CD2D80 ADD X0, X8, 0x138
	0x03CD2D84 LDP X8, X3, [X0]
	0x03CD2D88 MOV X0, X22
	0x03CD2D8C MOV X1, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x716000
	006 Move W8, [X21+1088]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x487000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move X0, 0x422000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x488000
	020 Move X0, [X0+2848]
	021 Call 0x1C17CF4
	022 Move X0, 0x491000
	023 Move X0, [X0+248]
	024 Call 0x1C17CF4
	025 Move X0, 0x491000
	026 Move X0, [X0+240]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1088], W8
	030 Move W8, [X20+16]
	031 Compare W8, 0
	032 JumpIfEqual {56}
	033 Move X8, 0x491000
	034 Move X8, [X8+240]
	035 Move X20, 0x422000
	036 Move X1, X19
	037 Move X2, X31
	038 Move X0, [X8]
	039 Move X20, [X20+2600]
	040 Call String.Format, X0, X1
	041 Move X8, [X20]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call Debug.LogError, X0
	055 Return 
	056 Compare X19, 0
	057 JumpIfEqual {105}
	058 Move X10, 0x488000
	059 Move X8, [X19]
	060 Move X10, [X10+2848]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 2
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 2
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, 0x487000
	083 Move X8, [X8+1816]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Call CanvasUpdateRegistry.get_instance
	090 Compare X0, 0
	091 JumpIfEqual {105}
	092 Move X0, [X0+32]
	093 Compare X0, 0
	094 JumpIfEqual {105}
	095 Move X8, 0x491000
	096 Move X8, [X8+248]
	097 Move X1, X19
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X2, [X8]
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Call 0x2DE3890, X0, X1
	104 Return 
	105 Call 0x1C17F20

Method: System.Void InternalDisableCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03CD2D90 MOV X2, X20
	0x03CD2D94 BLR X8
	0x03CD2D98 MOV X1, X19
	0x03CD2D9C MOV X20, X0
	0x03CD2DA0 BL 0x3CD2DBC
	0x03CD2DA4 MOV X0, X20
	0x03CD2DA8 LDP X20, X19, [X31 + 0x20]
	0x03CD2DAC LDP X22, X21, [X31 + 0x10]
	0x03CD2DB0 LDP X30, X23, [X31], #0x30
	0x03CD2DB4 RET
	0x03CD2DB8 BL 0x1C16F20
	0x03CD2DBC STR X30, [X31 - 0x30]!
	0x03CD2DC0 STP X22, X21, [X31 + 0x10]
	0x03CD2DC4 STP X20, X19, [X31 + 0x20]
	0x03CD2DC8 ADRP X21, 0x715000
	0x03CD2DCC ADRP X22, 0x421000
	0x03CD2DD0 LDRB W8, [X21 + 0x459]
	0x03CD2DD4 LDR X22, [X22 + 0x598]
	0x03CD2DD8 MOV X20, X1
	0x03CD2DDC MOV X19, X0
	0x03CD2DE0 TBNZ X8, 0x0, 0x3CD2E04
	0x03CD2DE4 ADRP X0, 0x490000
	0x03CD2DE8 LDR X0, [X0 + 0x148]
	0x03CD2DEC BL 0x1C16CF4
	0x03CD2DF0 ADRP X0, 0x421000
	0x03CD2DF4 LDR X0, [X0 + 0x598]
	0x03CD2DF8 BL 0x1C16CF4
	0x03CD2DFC MOVZ W8, 0x1
	0x03CD2E00 STRB W8, [X21 + 0x459]
	0x03CD2E04 LDR X0, [X22]
	0x03CD2E08 LDR W8, [X0 + 0xE0]
	0x03CD2E0C CBNZ W8, 0x3CD2E14
	0x03CD2E10 BL 0x1C16DFC
	0x03CD2E14 MOV X0, X20
	0x03CD2E18 MOV X1, X31
	0x03CD2E1C MOV X2, X31
	0x03CD2E20 BL 0x3C3883C
	0x03CD2E24 TBZ X0, 0x0, 0x3CD2E38
	0x03CD2E28 LDP X20, X19, [X31 + 0x20]
	0x03CD2E2C LDP X22, X21, [X31 + 0x10]
	0x03CD2E30 LDR X30, [X31], #0x30
	0x03CD2E34 RET
	0x03CD2E38 CBZ X19, 0x3CD2EB8
	0x03CD2E3C MOV X0, X19
	0x03CD2E40 MOV X1, X31
	0x03CD2E44 BL 0x3C356F8
	0x03CD2E48 CBZ X20, 0x3CD2EB8
	0x03CD2E4C MOV X21, X0
	0x03CD2E50 MOV X0, X20
	0x03CD2E54 MOV X1, X31
	0x03CD2E58 BL 0x3C356F8
	0x03CD2E5C CBZ X21, 0x3CD2EB8
	0x03CD2E60 MOV X1, X0
	0x03CD2E64 MOV X0, X21
	0x03CD2E68 MOV W2, W31
	0x03CD2E6C MOV X3, X31
	0x03CD2E70 BL 0x3C3FEB8
	0x03CD2E74 MOV X0, X20
	0x03CD2E78 MOV X1, X31
	0x03CD2E7C BL 0x3C35734
	0x03CD2E80 ADRP X8, 0x490000
	0x03CD2E84 LDR X8, [X8 + 0x148]
	0x03CD2E88 MOV W20, W0
	0x03CD2E8C LDR X8, [X8]
	0x03CD2E90 LDR W9, [X8 + 0xE0]
	0x03CD2E94 CBNZ W9, 0x3CD2EA0
	0x03CD2E98 MOV X0, X8
	0x03CD2E9C BL 0x1C16DFC
	0x03CD2EA0 MOV X0, X19
	0x03CD2EA4 MOV W1, W20
	0x03CD2EA8 LDP X20, X19, [X31 + 0x20]
	0x03CD2EAC LDP X22, X21, [X31 + 0x10]
	0x03CD2EB0 LDR X30, [X31], #0x30
	0x03CD2EB4 B 0x3CD2FF8
	0x03CD2EB8 BL 0x1C16F20
	0x03CD2EBC STP X30, X21, [X31 - 0x20]!
	0x03CD2EC0 STP X20, X19, [X31 + 0x10]
	0x03CD2EC4 ADRP X21, 0x715000
	0x03CD2EC8 ADRP X20, 0x490000
	0x03CD2ECC LDRB W8, [X21 + 0x457]
	0x03CD2ED0 LDR X20, [X20 + 0x148]
	0x03CD2ED4 MOV X19, X0
	0x03CD2ED8 TBNZ X8, 0x0, 0x3CD2EFC
	0x03CD2EDC ADRP X0, 0x490000
	0x03CD2EE0 LDR X0, [X0 + 0x148]
	0x03CD2EE4 BL 0x1C16CF4
	0x03CD2EE8 ADRP X0, 0x421000
	0x03CD2EEC LDR X0, [X0 + 0x598]
	0x03CD2EF0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x716000
	006 Move W8, [X21+1089]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x487000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move X0, 0x422000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x488000
	020 Move X0, [X0+2848]
	021 Call 0x1C17CF4
	022 Move X0, 0x491000
	023 Move X0, [X0+248]
	024 Call 0x1C17CF4
	025 Move X0, 0x491000
	026 Move X0, [X0+240]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1089], W8
	030 Move W8, [X20+17]
	031 Compare W8, 0
	032 JumpIfEqual {56}
	033 Move X8, 0x491000
	034 Move X8, [X8+240]
	035 Move X20, 0x422000
	036 Move X1, X19
	037 Move X2, X31
	038 Move X0, [X8]
	039 Move X20, [X20+2600]
	040 Call String.Format, X0, X1
	041 Move X8, [X20]
	042 Move X19, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call Debug.LogError, X0
	055 Return 
	056 Compare X19, 0
	057 JumpIfEqual {105}
	058 Move X10, 0x488000
	059 Move X8, [X19]
	060 Move X10, [X10+2848]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 3
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 3
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, 0x487000
	083 Move X8, [X8+1816]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Call CanvasUpdateRegistry.get_instance
	090 Compare X0, 0
	091 JumpIfEqual {105}
	092 Move X0, [X0+40]
	093 Compare X0, 0
	094 JumpIfEqual {105}
	095 Move X8, 0x491000
	096 Move X8, [X8+248]
	097 Move X1, X19
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X2, [X8]
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Call 0x2DE3890, X0, X1
	104 Return 
	105 Call 0x1C17F20

Method: System.Boolean IsRebuildingLayout()

Disassembly:
	0x03CD2EF4 MOVZ W8, 0x1
	0x03CD2EF8 STRB W8, [X21 + 0x457]
	0x03CD2EFC LDR X0, [X20]
	0x03CD2F00 LDR W8, [X0 + 0xE0]
	0x03CD2F04 CBNZ W8, 0x3CD2F10
	0x03CD2F08 BL 0x1C16DFC
	0x03CD2F0C LDR X0, [X20]
	0x03CD2F10 CBZ X19, 0x3CD2F94
	0x03CD2F14 LDR X8, [X0 + 0xB8]
	0x03CD2F18 LDR X9, [X19]
	0x03CD2F1C ADRP X20, 0x421000
	0x03CD2F20 MOV X0, X19
	0x03CD2F24 LDP S2, S3, [X8 + 0x48]
	0x03CD2F28 LDP S0, S1, [X8 + 0x40]
	0x03CD2F2C LDR X8, [X9 + 0x2A8]
	0x03CD2F30 LDR X1, [X9 + 0x2B0]
	0x03CD2F34 LDR X20, [X20 + 0x598]
	0x03CD2F38 BLR X8
	0x03CD2F3C MOV X0, X19
	0x03CD2F40 MOV X1, X31
	0x03CD2F44 BL 0x3E450E8
	0x03CD2F48 LDR X8, [X20]
	0x03CD2F4C MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x716000
	005 Move X20, 0x487000
	006 Move W8, [X19+1090]
	007 Move X20, [X20+1816]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x487000
	013 Move X0, [X0+1816]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1090], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call CanvasUpdateRegistry.get_instance
	023 Compare X0, 0
	024 JumpIfEqual {30}
	025 Move W0, [X0+16]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Boolean IsRebuildingGraphics()

Disassembly:
	0x03CD2F50 LDR W9, [X8 + 0xE0]
	0x03CD2F54 CBNZ W9, 0x3CD2F60
	0x03CD2F58 MOV X0, X8
	0x03CD2F5C BL 0x1C16DFC
	0x03CD2F60 MOV X0, X20
	0x03CD2F64 MOV X1, X31
	0x03CD2F68 MOV X2, X31
	0x03CD2F6C BL 0x3C3883C
	0x03CD2F70 TBZ X0, 0x0, 0x3CD2F88
	0x03CD2F74 MOV X0, X19
	0x03CD2F78 LDP X20, X19, [X31 + 0x10]
	0x03CD2F7C MOV X1, X31
	0x03CD2F80 LDP X30, X21, [X31], #0x20
	0x03CD2F84 B 0x3E45B80
	0x03CD2F88 LDP X20, X19, [X31 + 0x10]
	0x03CD2F8C LDP X30, X21, [X31], #0x20
	0x03CD2F90 RET
	0x03CD2F94 BL 0x1C16F20
	0x03CD2F98 STR X30, [X31 - 0x20]!
	0x03CD2F9C STP X20, X19, [X31 + 0x10]
	0x03CD2FA0 ADRP X20, 0x715000
	0x03CD2FA4 LDRB W8, [X20 + 0x458]
	0x03CD2FA8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x716000
	005 Move X20, 0x487000
	006 Move W8, [X19+1091]
	007 Move X20, [X20+1816]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x487000
	013 Move X0, [X0+1816]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1091], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call CanvasUpdateRegistry.get_instance
	023 Compare X0, 0
	024 JumpIfEqual {30}
	025 Move W0, [X0+17]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03CD2FAC TBNZ X8, 0x0, 0x3CD2FC4
	0x03CD2FB0 ADRP X0, 0x449000
	0x03CD2FB4 LDR X0, [X0 + 0x5E8]
	0x03CD2FB8 BL 0x1C16CF4
	0x03CD2FBC MOVZ W8, 0x1
	0x03CD2FC0 STRB W8, [X20 + 0x458]
	0x03CD2FC4 CBZ X19, 0x3CD2FF4
	0x03CD2FC8 ADRP X8, 0x449000
	0x03CD2FCC LDR X8, [X8 + 0x5E8]
	0x03CD2FD0 LDR X0, [X8]
	0x03CD2FD4 LDR W8, [X0 + 0xE0]
	0x03CD2FD8 CBZ W8, 0x3CD2FE8
	0x03CD2FDC LDP X20, X19, [X31 + 0x10]
	0x03CD2FE0 LDR X30, [X31], #0x20
	0x03CD2FE4 RET
	0x03CD2FE8 LDP X20, X19, [X31 + 0x10]
	0x03CD2FEC LDR X30, [X31], #0x20
	0x03CD2FF0 B 0x1C16DFC
	0x03CD2FF4 BL 0x1C16F20
	0x03CD2FF8 STP X30, X23, [X31 - 0x30]!
	0x03CD2FFC STP X22, X21, [X31 + 0x10]
	0x03CD3000 STP X20, X19, [X31 + 0x20]
	0x03CD3004 ADRP X21, 0x714000
	0x03CD3008 LDRB W8, [X21 + 0x45A]
	0x03CD300C MOV W19, W1
	0x03CD3010 MOV X20, X0
	0x03CD3014 TBNZ X8, 0x0, 0x3CD302C
	0x03CD3018 ADRP X0, 0x48F000
	0x03CD301C LDR X0, [X0 + 0x148]
	0x03CD3020 BL 0x1C16CF4
	0x03CD3024 MOVZ W8, 0x1
	0x03CD3028 STRB W8, [X21 + 0x45A]
	0x03CD302C CBZ X20, 0x3CD30D8
	0x03CD3030 MOV X0, X20
	0x03CD3034 MOV W1, W19
	0x03CD3038 MOV X2, X31
	0x03CD303C BL 0x3C35770

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x716000
	007 Move X22, 0x491000
	008 Move X19, 0x491000
	009 Move X20, 0x487000
	010 Move W8, [X21+1092]
	011 Move X22, [X22+256]
	012 Move X19, [X19+264]
	013 Move X20, [X20+1816]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x491000
	019 Move X0, [X0+264]
	020 Call 0x1C17CF4
	021 Move X0, 0x487000
	022 Move X0, [X0+1816]
	023 Call 0x1C17CF4
	024 Move X0, 0x491000
	025 Move X0, [X0+256]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1092], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X2, [X19]
	032 Move X1, X31
	033 Move X3, X31
	034 Move X19, X0
	035 Call Comparison`1<Object>..ctor, X0, X1, X2
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8+8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

