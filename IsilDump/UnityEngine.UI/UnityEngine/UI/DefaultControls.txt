Type: UnityEngine.UI.DefaultControls

Method: UnityEngine.UI.DefaultControls/IFactoryControls get_factory()

Disassembly:
	0x03CD3ADC ADRP X0, 0x48F000
	0x03CD3AE0 LDR X0, [X0 + 0x148]
	0x03CD3AE4 BL 0x1C16CF4
	0x03CD3AE8 ADRP X0, 0x480000
	0x03CD3AEC LDR X0, [X0 + 0xCC8]
	0x03CD3AF0 BL 0x1C16CF4
	0x03CD3AF4 ADRP X0, 0x48F000
	0x03CD3AF8 LDR X0, [X0 + 0x178]
	0x03CD3AFC BL 0x1C16CF4
	0x03CD3B00 ADRP X0, 0x428000
	0x03CD3B04 LDR X0, [X0 + 0xC60]
	0x03CD3B08 BL 0x1C16CF4
	0x03CD3B0C ADRP X0, 0x420000
	0x03CD3B10 LDR X0, [X0 + 0x6C0]
	0x03CD3B14 BL 0x1C16CF4
	0x03CD3B18 ADRP X0, 0x48F000
	0x03CD3B1C LDR X0, [X0 + 0x180]
	0x03CD3B20 BL 0x1C16CF4
	0x03CD3B24 ADRP X0, 0x48F000
	0x03CD3B28 LDR X0, [X0 + 0x190]
	0x03CD3B2C BL 0x1C16CF4
	0x03CD3B30 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x715000
	005 Move X19, 0x490000
	006 Move W8, [X20+1108]
	007 Move X19, [X19+328]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x490000
	013 Move X0, [X0+328]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1108], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.GameObject CreateUIElementRoot(System.String name, UnityEngine.Vector2 size, System.Type[] components)

Disassembly:
	0x03CD3B34 STRB W8, [X20 + 0x45D]
	0x03CD3B38 LDR X0, [X19]
	0x03CD3B3C ADRP X22, 0x428000
	0x03CD3B40 ADRP X20, 0x48F000
	0x03CD3B44 ADRP X21, 0x420000
	0x03CD3B48 LDR W8, [X0 + 0xE0]
	0x03CD3B4C LDR X22, [X22 + 0xC60]
	0x03CD3B50 LDR X20, [X20 + 0x178]
	0x03CD3B54 LDR X21, [X21 + 0x6C0]
	0x03CD3B58 CBNZ W8, 0x3CD3B64
	0x03CD3B5C BL 0x1C16DFC
	0x03CD3B60 LDR X0, [X19]
	0x03CD3B64 LDR X8, [X0 + 0xB8]
	0x03CD3B68 LDR X0, [X22]
	0x03CD3B6C MOVZ W1, 0x1
	0x03CD3B70 LDP S8, S9, [X8 + 0x8]
	0x03CD3B74 BL 0x1C16D6C
	0x03CD3B78 LDR X8, [X21]
	0x03CD3B7C LDR X20, [X20]
	0x03CD3B80 MOV X19, X0
	0x03CD3B84 LDR W9, [X8 + 0xE0]
	0x03CD3B88 CBNZ W9, 0x3CD3B94
	0x03CD3B8C MOV X0, X8
	0x03CD3B90 BL 0x1C16DFC
	0x03CD3B94 MOV X0, X20
	0x03CD3B98 MOV X1, X31
	0x03CD3B9C BL 0x338C698
	0x03CD3BA0 CBZ X19, 0x3CD3C44
	0x03CD3BA4 MOV X20, X0
	0x03CD3BA8 CBZ X0, 0x3CD3BC0
	0x03CD3BAC LDR X8, [X19]
	0x03CD3BB0 MOV X0, X20
	0x03CD3BB4 LDR X1, [X8 + 0x40]
	0x03CD3BB8 BL 0x1C16E00
	0x03CD3BBC CBZ X0, 0x3CD3C4C
	0x03CD3BC0 LDR W8, [X19 + 0x18]
	0x03CD3BC4 CBZ W8, 0x3CD3C48
	0x03CD3BC8 ADRP X8, 0x48F000
	0x03CD3BCC LDR X8, [X8 + 0x180]
	0x03CD3BD0 STR X20, [X19 + 0x20]
	0x03CD3BD4 MOV V0.16B, V8.16B
	0x03CD3BD8 MOV V1.16B, V9.16B
	0x03CD3BDC LDR X0, [X8]
	0x03CD3BE0 MOV X1, X19
	0x03CD3BE4 BL 0x3CD2B34
	0x03CD3BE8 CBZ X0, 0x3CD3C44
	0x03CD3BEC ADRP X8, 0x480000
	0x03CD3BF0 LDR X8, [X8 + 0xCC8]
	0x03CD3BF4 MOV X19, X0
	0x03CD3BF8 LDR X1, [X8]
	0x03CD3BFC BL 0x21E52E4
	0x03CD3C00 CBZ X0, 0x3CD3C44
	0x03CD3C04 ADRP X9, 0x48F000
	0x03CD3C08 LDR X8, [X0]
	0x03CD3C0C LDR X9, [X9 + 0x190]
	0x03CD3C10 MOV X20, X0
	0x03CD3C14 LDR X2, [X8 + 0x5F0]
	0x03CD3C18 LDR X1, [X9]
	0x03CD3C1C LDR X9, [X8 + 0x5E8]
	0x03CD3C20 BLR X9
	0x03CD3C24 MOV X0, X20
	0x03CD3C28 BL 0x3CD2EBC
	0x03CD3C2C MOV X0, X19
	0x03CD3C30 LDP X20, X19, [X31 + 0x30]
	0x03CD3C34 LDP X22, X21, [X31 + 0x20]
	0x03CD3C38 LDR X30, [X31 + 0x10]
	0x03CD3C3C LDP D9, D8, [X31], #0x40
	0x03CD3C40 RET
	0x03CD3C44 BL 0x1C16F20
	0x03CD3C48 BL 0x1C16F28
	0x03CD3C4C BL 0x1C16F44
	0x03CD3C50 MOV X1, X31
	0x03CD3C54 BL 0x1C16DEC
	0x03CD3C58 STP D9, D8, [X31 - 0x40]!
	0x03CD3C5C STR X30, [X31 + 0x10]
	0x03CD3C60 STP X22, X21, [X31 + 0x20]
	0x03CD3C64 STP X20, X19, [X31 + 0x30]
	0x03CD3C68 ADRP X20, 0x714000
	0x03CD3C6C ADRP X19, 0x48F000
	0x03CD3C70 LDRB W8, [X20 + 0x45E]
	0x03CD3C74 LDR X19, [X19 + 0x148]
	0x03CD3C78 TBNZ X8, 0x0, 0x3CD3CC0
	0x03CD3C7C ADRP X0, 0x48F000
	0x03CD3C80 LDR X0, [X0 + 0x148]
	0x03CD3C84 BL 0x1C16CF4
	0x03CD3C88 ADRP X0, 0x476000
	0x03CD3C8C LDR X0, [X0 + 0x6E0]
	0x03CD3C90 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x715000
	009 Move X21, 0x490000
	010 Move W8, [X22+1109]
	011 Move X21, [X21+328]
	012 Move X19, X1
	013 Move V8, V1
	014 Move V9, V0
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x490000
	021 Move X0, [X0+328]
	022 Call 0x1C17CF4
	023 Move X0, 0x481000
	024 Move X0, [X0+2880]
	025 Call 0x1C17CF4
	026 Move X0, 0x490000
	027 Move X0, [X0+336]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1109], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X22, 0x715000
	037 Move W8, [X22+1262]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x490000
	041 Move X0, [X0+328]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+1262], W8
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X21]
	051 Move X8, [X0+184]
	052 Move X21, [X8]
	053 Compare X21, 0
	054 JumpIfEqual {102}
	055 Move X10, 0x490000
	056 Move X8, [X21]
	057 Move X10, [X10+336]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move X0, X21
	069 Move W2, W31
	070 Call 0x1C5D788
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Add X8, X8, X9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X3, [X0+8]
	076 Move X0, X21
	077 Move X1, X20
	078 Move X2, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {102}
	082 Move X8, 0x481000
	083 Move X8, [X8+2880]
	084 Move X19, X0
	085 Move X1, [X8]
	086 Call 0x21E62E4, X0
	087 Compare X0, 0
	088 JumpIfEqual {102}
	089 Move V0, V9
	090 Move V1, V8
	091 Move X1, X31
	092 Call RectTransform.set_sizeDelta, X0, X1
	093 Move X0, X19
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Move D9, [X31+64]
	100 Move D8, [X31+72]
	101 Return X0
	102 Call 0x1C17F20

Method: UnityEngine.GameObject CreateUIObject(System.String name, UnityEngine.GameObject parent, System.Type[] components)

Disassembly:
	0x03CD3C94 ADRP X0, 0x428000
	0x03CD3C98 LDR X0, [X0 + 0xC60]
	0x03CD3C9C BL 0x1C16CF4
	0x03CD3CA0 ADRP X0, 0x420000
	0x03CD3CA4 LDR X0, [X0 + 0x6C0]
	0x03CD3CA8 BL 0x1C16CF4
	0x03CD3CAC ADRP X0, 0x48F000
	0x03CD3CB0 LDR X0, [X0 + 0x198]
	0x03CD3CB4 BL 0x1C16CF4
	0x03CD3CB8 MOVZ W8, 0x1
	0x03CD3CBC STRB W8, [X20 + 0x45E]
	0x03CD3CC0 LDR X0, [X19]
	0x03CD3CC4 ADRP X22, 0x428000
	0x03CD3CC8 ADRP X20, 0x476000
	0x03CD3CCC ADRP X21, 0x420000
	0x03CD3CD0 LDR W8, [X0 + 0xE0]
	0x03CD3CD4 LDR X22, [X22 + 0xC60]
	0x03CD3CD8 LDR X20, [X20 + 0x6E0]
	0x03CD3CDC LDR X21, [X21 + 0x6C0]
	0x03CD3CE0 CBNZ W8, 0x3CD3CEC
	0x03CD3CE4 BL 0x1C16DFC
	0x03CD3CE8 LDR X0, [X19]
	0x03CD3CEC LDR X8, [X0 + 0xB8]
	0x03CD3CF0 LDR X0, [X22]
	0x03CD3CF4 MOVZ W1, 0x1
	0x03CD3CF8 LDP S8, S9, [X8 + 0x18]
	0x03CD3CFC BL 0x1C16D6C
	0x03CD3D00 LDR X8, [X21]
	0x03CD3D04 LDR X20, [X20]
	0x03CD3D08 MOV X19, X0
	0x03CD3D0C LDR W9, [X8 + 0xE0]
	0x03CD3D10 CBNZ W9, 0x3CD3D1C
	0x03CD3D14 MOV X0, X8
	0x03CD3D18 BL 0x1C16DFC
	0x03CD3D1C MOV X0, X20
	0x03CD3D20 MOV X1, X31
	0x03CD3D24 BL 0x338C698
	0x03CD3D28 CBZ X19, 0x3CD3D80
	0x03CD3D2C MOV X20, X0
	0x03CD3D30 CBZ X0, 0x3CD3D48
	0x03CD3D34 LDR X8, [X19]
	0x03CD3D38 MOV X0, X20
	0x03CD3D3C LDR X1, [X8 + 0x40]
	0x03CD3D40 BL 0x1C16E00
	0x03CD3D44 CBZ X0, 0x3CD3D88
	0x03CD3D48 LDR W8, [X19 + 0x18]
	0x03CD3D4C CBZ W8, 0x3CD3D84
	0x03CD3D50 ADRP X8, 0x48F000
	0x03CD3D54 LDR X8, [X8 + 0x198]
	0x03CD3D58 STR X20, [X19 + 0x20]
	0x03CD3D5C MOV X1, X19
	0x03CD3D60 LDP X20, X19, [X31 + 0x30]
	0x03CD3D64 LDR X0, [X8]
	0x03CD3D68 LDP X22, X21, [X31 + 0x20]
	0x03CD3D6C LDR X30, [X31 + 0x10]
	0x03CD3D70 MOV V0.16B, V8.16B
	0x03CD3D74 MOV V1.16B, V9.16B
	0x03CD3D78 LDP D9, D8, [X31], #0x40
	0x03CD3D7C B 0x3CD2B34
	0x03CD3D80 BL 0x1C16F20
	0x03CD3D84 BL 0x1C16F28
	0x03CD3D88 BL 0x1C16F44
	0x03CD3D8C MOV X1, X31
	0x03CD3D90 BL 0x1C16DEC
	0x03CD3D94 STP D9, D8, [X31 - 0x40]!
	0x03CD3D98 STR X30, [X31 + 0x10]
	0x03CD3D9C STP X22, X21, [X31 + 0x20]
	0x03CD3DA0 STP X20, X19, [X31 + 0x30]
	0x03CD3DA4 ADRP X20, 0x714000
	0x03CD3DA8 ADRP X19, 0x48F000
	0x03CD3DAC LDRB W8, [X20 + 0x45F]
	0x03CD3DB0 LDR X19, [X19 + 0x148]
	0x03CD3DB4 TBNZ X8, 0x0, 0x3CD3DFC
	0x03CD3DB8 ADRP X0, 0x48F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x715000
	008 Move X22, 0x490000
	009 Move W8, [X23+1110]
	010 Move X22, [X22+328]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x490000
	019 Move X0, [X0+328]
	020 Call 0x1C17CF4
	021 Move X0, 0x490000
	022 Move X0, [X0+336]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1110], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X23, 0x715000
	032 Move W8, [X23+1262]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x490000
	036 Move X0, [X0+328]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+1262], W8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 Move X22, [X8]
	048 Compare X22, 0
	049 JumpIfEqual {86}
	050 Move X10, 0x490000
	051 Move X8, [X22]
	052 Move X10, [X10+336]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X22
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X3, [X0+8]
	071 Move X0, X22
	072 Move X1, X21
	073 Move X2, X20
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X1, X19
	076 Move X20, X0
	077 Call DefaultControls.SetParentAndAlign, X0, X1
	078 Move X0, X20
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return X0
	086 Call 0x1C17F20

Method: System.Void SetDefaultTextValues(UnityEngine.UI.Text lbl)

Disassembly:
	0x03CD3EBC BL 0x1C16F20
	0x03CD3EC0 BL 0x1C16F28
	0x03CD3EC4 BL 0x1C16F44
	0x03CD3EC8 MOV X1, X31
	0x03CD3ECC BL 0x1C16DEC
	0x03CD3ED0 STP D9, D8, [X31 - 0x70]!
	0x03CD3ED4 STP X29, X30, [X31 + 0x10]
	0x03CD3ED8 STP X28, X27, [X31 + 0x20]
	0x03CD3EDC STP X26, X25, [X31 + 0x30]
	0x03CD3EE0 STP X24, X23, [X31 + 0x40]
	0x03CD3EE4 STP X22, X21, [X31 + 0x50]
	0x03CD3EE8 STP X20, X19, [X31 + 0x60]
	0x03CD3EEC ADRP X20, 0x714000
	0x03CD3EF0 ADRP X27, 0x48F000
	0x03CD3EF4 LDRB W8, [X20 + 0x460]
	0x03CD3EF8 LDR X27, [X27 + 0x148]
	0x03CD3EFC MOV X19, X0
	0x03CD3F00 TBNZ X8, 0x0, 0x3CD3FC0
	0x03CD3F04 ADRP X0, 0x48F000
	0x03CD3F08 LDR X0, [X0 + 0x148]
	0x03CD3F0C BL 0x1C16CF4
	0x03CD3F10 ADRP X0, 0x476000
	0x03CD3F14 LDR X0, [X0 + 0x6D8]
	0x03CD3F18 BL 0x1C16CF4
	0x03CD3F1C ADRP X0, 0x480000
	0x03CD3F20 LDR X0, [X0 + 0xB40]
	0x03CD3F24 BL 0x1C16CF4
	0x03CD3F28 ADRP X0, 0x488000
	0x03CD3F2C LDR X0, [X0 + 0x360]
	0x03CD3F30 BL 0x1C16CF4
	0x03CD3F34 ADRP X0, 0x476000
	0x03CD3F38 LDR X0, [X0 + 0x6E0]
	0x03CD3F3C BL 0x1C16CF4
	0x03CD3F40 ADRP X0, 0x486000
	0x03CD3F44 LDR X0, [X0 + 0xA48]
	0x03CD3F48 BL 0x1C16CF4
	0x03CD3F4C ADRP X0, 0x48F000
	0x03CD3F50 LDR X0, [X0 + 0x1B0]
	0x03CD3F54 BL 0x1C16CF4
	0x03CD3F58 ADRP X0, 0x428000
	0x03CD3F5C LDR X0, [X0 + 0xC60]
	0x03CD3F60 BL 0x1C16CF4
	0x03CD3F64 ADRP X0, 0x420000
	0x03CD3F68 LDR X0, [X0 + 0x6C0]
	0x03CD3F6C BL 0x1C16CF4
	0x03CD3F70 ADRP X0, 0x485000
	0x03CD3F74 LDR X0, [X0 + 0x8F0]
	0x03CD3F78 BL 0x1C16CF4
	0x03CD3F7C ADRP X0, 0x48F000
	0x03CD3F80 LDR X0, [X0 + 0x1B8]
	0x03CD3F84 BL 0x1C16CF4
	0x03CD3F88 ADRP X0, 0x48F000
	0x03CD3F8C LDR X0, [X0 + 0x1C0]
	0x03CD3F90 BL 0x1C16CF4
	0x03CD3F94 ADRP X0, 0x48F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x715000
	006 Move X20, 0x490000
	007 Move W8, [X21+1111]
	008 Move X20, [X20+328]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x490000
	015 Move X0, [X0+328]
	016 Call 0x1C17CF4
	017 Move X0, 0x421000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1111], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Compare X19, 0
	029 JumpIfEqual {73}
	030 Move X8, [X0+184]
	031 Move X9, [X19]
	032 Move X20, 0x421000
	033 Move X0, X19
	034 Move S2, [X8+72]
	035 Move S3, [X8+76]
	036 Move S0, [X8+64]
	037 Move S1, [X8+68]
	038 Move X8, [X9+680]
	039 Move X1, [X9+688]
	040 Move X20, [X20+1432]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X0, X19
	043 Move X1, X31
	044 Call Text.get_font, X0
	045 Move X8, [X20]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {68}
	060 Move X0, X19
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X1, X31
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Call Text.AssignDefaultFont, X0
	067 Return 
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void SetDefaultColorTransitionValues(UnityEngine.UI.Selectable slider)

Disassembly:
	0x03CD3F98 LDR X0, [X0 + 0x1C8]
	0x03CD3F9C BL 0x1C16CF4
	0x03CD3FA0 ADRP X0, 0x48D000
	0x03CD3FA4 LDR X0, [X0 + 0x260]
	0x03CD3FA8 BL 0x1C16CF4
	0x03CD3FAC ADRP X0, 0x48F000
	0x03CD3FB0 LDR X0, [X0 + 0x1D0]
	0x03CD3FB4 BL 0x1C16CF4
	0x03CD3FB8 MOVZ W8, 0x1
	0x03CD3FBC STRB W8, [X20 + 0x460]
	0x03CD3FC0 LDR X0, [X27]
	0x03CD3FC4 ADRP X26, 0x428000
	0x03CD3FC8 ADRP X20, 0x48F000
	0x03CD3FCC ADRP X21, 0x420000
	0x03CD3FD0 LDR W8, [X0 + 0xE0]
	0x03CD3FD4 LDR X26, [X26 + 0xC60]
	0x03CD3FD8 LDR X20, [X20 + 0x1B0]
	0x03CD3FDC LDR X21, [X21 + 0x6C0]
	0x03CD3FE0 CBNZ W8, 0x3CD3FEC
	0x03CD3FE4 BL 0x1C16DFC
	0x03CD3FE8 LDR X0, [X27]
	0x03CD3FEC LDR X8, [X0 + 0xB8]
	0x03CD3FF0 LDR X0, [X26]
	0x03CD3FF4 MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x715000
	005 Move W8, [X20+1112]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x449000
	012 Move X0, [X0+1512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1112], W8
	016 Compare X19, 0
	017 JumpIfEqual {33}
	018 Move X8, 0x449000
	019 Move X8, [X8+1512]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfEqual {28}
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call 0x1C17DFC
	032 Return 
	033 Call 0x1C17F20

Method: System.Void SetParentAndAlign(UnityEngine.GameObject child, UnityEngine.GameObject parent)

Disassembly:
	0x03CD3DBC LDR X0, [X0 + 0x148]
	0x03CD3DC0 BL 0x1C16CF4
	0x03CD3DC4 ADRP X0, 0x48F000
	0x03CD3DC8 LDR X0, [X0 + 0x1A0]
	0x03CD3DCC BL 0x1C16CF4
	0x03CD3DD0 ADRP X0, 0x428000
	0x03CD3DD4 LDR X0, [X0 + 0xC60]
	0x03CD3DD8 BL 0x1C16CF4
	0x03CD3DDC ADRP X0, 0x420000
	0x03CD3DE0 LDR X0, [X0 + 0x6C0]
	0x03CD3DE4 BL 0x1C16CF4
	0x03CD3DE8 ADRP X0, 0x48F000
	0x03CD3DEC LDR X0, [X0 + 0x1A8]
	0x03CD3DF0 BL 0x1C16CF4
	0x03CD3DF4 MOVZ W8, 0x1
	0x03CD3DF8 STRB W8, [X20 + 0x45F]
	0x03CD3DFC LDR X0, [X19]
	0x03CD3E00 ADRP X22, 0x428000
	0x03CD3E04 ADRP X20, 0x48F000
	0x03CD3E08 ADRP X21, 0x420000
	0x03CD3E0C LDR W8, [X0 + 0xE0]
	0x03CD3E10 LDR X22, [X22 + 0xC60]
	0x03CD3E14 LDR X20, [X20 + 0x1A0]
	0x03CD3E18 LDR X21, [X21 + 0x6C0]
	0x03CD3E1C CBNZ W8, 0x3CD3E28
	0x03CD3E20 BL 0x1C16DFC
	0x03CD3E24 LDR X0, [X19]
	0x03CD3E28 LDR X8, [X0 + 0xB8]
	0x03CD3E2C LDR X0, [X22]
	0x03CD3E30 MOVZ W1, 0x1
	0x03CD3E34 LDP S8, S9, [X8 + 0x18]
	0x03CD3E38 BL 0x1C16D6C
	0x03CD3E3C LDR X8, [X21]
	0x03CD3E40 LDR X20, [X20]
	0x03CD3E44 MOV X19, X0
	0x03CD3E48 LDR W9, [X8 + 0xE0]
	0x03CD3E4C CBNZ W9, 0x3CD3E58
	0x03CD3E50 MOV X0, X8
	0x03CD3E54 BL 0x1C16DFC
	0x03CD3E58 MOV X0, X20
	0x03CD3E5C MOV X1, X31
	0x03CD3E60 BL 0x338C698
	0x03CD3E64 CBZ X19, 0x3CD3EBC
	0x03CD3E68 MOV X20, X0
	0x03CD3E6C CBZ X0, 0x3CD3E84
	0x03CD3E70 LDR X8, [X19]
	0x03CD3E74 MOV X0, X20
	0x03CD3E78 LDR X1, [X8 + 0x40]
	0x03CD3E7C BL 0x1C16E00
	0x03CD3E80 CBZ X0, 0x3CD3EC4
	0x03CD3E84 LDR W8, [X19 + 0x18]
	0x03CD3E88 CBZ W8, 0x3CD3EC0
	0x03CD3E8C ADRP X8, 0x48F000
	0x03CD3E90 LDR X8, [X8 + 0x1A8]
	0x03CD3E94 STR X20, [X19 + 0x20]
	0x03CD3E98 MOV X1, X19
	0x03CD3E9C LDP X20, X19, [X31 + 0x30]
	0x03CD3EA0 LDR X0, [X8]
	0x03CD3EA4 LDP X22, X21, [X31 + 0x20]
	0x03CD3EA8 LDR X30, [X31 + 0x10]
	0x03CD3EAC MOV V0.16B, V8.16B
	0x03CD3EB0 MOV V1.16B, V9.16B
	0x03CD3EB4 LDP D9, D8, [X31], #0x40
	0x03CD3EB8 B 0x3CD2B34

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x715000
	007 Move X22, 0x421000
	008 Move W8, [X21+1113]
	009 Move X22, [X22+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x490000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x421000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1113], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 
	043 Compare X19, 0
	044 JumpIfEqual {82}
	045 Move X0, X19
	046 Move X1, X31
	047 Call GameObject.get_transform, X0
	048 Compare X20, 0
	049 JumpIfEqual {82}
	050 Move X21, X0
	051 Move X0, X20
	052 Move X1, X31
	053 Call GameObject.get_transform, X0
	054 Compare X21, 0
	055 JumpIfEqual {82}
	056 Move X1, X0
	057 Move X0, X21
	058 Move W2, W31
	059 Move X3, X31
	060 Call Transform.SetParent, X0, X1, X2
	061 Move X0, X20
	062 Move X1, X31
	063 Call GameObject.get_layer, X0
	064 Move X8, 0x490000
	065 Move X8, [X8+328]
	066 Move W20, W0
	067 Move X8, [X8]
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X19
	074 Move W1, W20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Call DefaultControls.SetLayerRecursively, X0, X1
	081 Return 
	082 Call 0x1C17F20

Method: System.Void SetLayerRecursively(UnityEngine.GameObject go, System.Int32 layer)

Disassembly:
	0x03CD3FF8 LDP S8, S9, [X8 + 0x10]
	0x03CD3FFC BL 0x1C16D6C
	0x03CD4000 LDR X8, [X21]
	0x03CD4004 LDR X21, [X20]
	0x03CD4008 MOV X20, X0
	0x03CD400C LDR W9, [X8 + 0xE0]
	0x03CD4010 CBNZ W9, 0x3CD401C
	0x03CD4014 MOV X0, X8
	0x03CD4018 BL 0x1C16DFC
	0x03CD401C MOV X0, X21
	0x03CD4020 MOV X1, X31
	0x03CD4024 BL 0x338C698
	0x03CD4028 CBZ X20, 0x3CD4578
	0x03CD402C MOV X21, X0
	0x03CD4030 CBZ X0, 0x3CD4048
	0x03CD4034 LDR X8, [X20]
	0x03CD4038 MOV X0, X21
	0x03CD403C LDR X1, [X8 + 0x40]
	0x03CD4040 BL 0x1C16E00
	0x03CD4044 CBZ X0, 0x3CD4580
	0x03CD4048 LDR W8, [X20 + 0x18]
	0x03CD404C CBZ W8, 0x3CD457C
	0x03CD4050 ADRP X8, 0x48C000
	0x03CD4054 LDR X8, [X8 + 0x260]
	0x03CD4058 STR X21, [X20 + 0x20]
	0x03CD405C ADRP X28, 0x475000
	0x03CD4060 MOV V0.16B, V8.16B
	0x03CD4064 LDR X0, [X8]
	0x03CD4068 LDR X28, [X28 + 0x6E0]
	0x03CD406C MOV V1.16B, V9.16B
	0x03CD4070 MOV X1, X20
	0x03CD4074 BL 0x3CD2B34
	0x03CD4078 LDR X8, [X26]
	0x03CD407C MOV X20, X0
	0x03CD4080 MOVZ W1, 0x1
	0x03CD4084 MOV X0, X8
	0x03CD4088 BL 0x1C16D6C
	0x03CD408C LDR X8, [X28]
	0x03CD4090 MOV X21, X0
	0x03CD4094 MOV X1, X31
	0x03CD4098 MOV X0, X8
	0x03CD409C BL 0x338C698
	0x03CD40A0 CBZ X21, 0x3CD4578
	0x03CD40A4 MOV X22, X0
	0x03CD40A8 CBZ X0, 0x3CD40C0
	0x03CD40AC LDR X8, [X21]
	0x03CD40B0 MOV X0, X22
	0x03CD40B4 LDR X1, [X8 + 0x40]
	0x03CD40B8 BL 0x1C16E00
	0x03CD40BC CBZ X0, 0x3CD4580
	0x03CD40C0 LDR W8, [X21 + 0x18]
	0x03CD40C4 CBZ W8, 0x3CD457C
	0x03CD40C8 ADRP X8, 0x48E000
	0x03CD40CC LDR X8, [X8 + 0x1C0]
	0x03CD40D0 STR X22, [X21 + 0x20]
	0x03CD40D4 ADRP X23, 0x485000
	0x03CD40D8 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x714000
	008 Move W8, [X21+1114]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x48F000
	016 Move X0, [X0+328]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1114], W8
	020 Compare X20, 0
	021 JumpIfEqual {68}
	022 Move X0, X20
	023 Move W1, W19
	024 Move X2, X31
	025 Call GameObject.set_layer, X0, X1
	026 Move X0, X20
	027 Move X1, X31
	028 Call GameObject.get_transform, X0
	029 Compare X0, 0
	030 JumpIfEqual {68}
	031 Move X1, X31
	032 Move X20, X0
	033 Call Transform.get_childCount, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X23, 0x48F000
	036 Move X23, [X23+328]
	037 Move W21, W31
	038 Move X0, X20
	039 Move W1, W21
	040 Move X2, X31
	041 Call Transform.GetChild, X0, X1
	042 Compare X0, 0
	043 JumpIfEqual {68}
	044 Move X1, X31
	045 Call Component.get_gameObject, X0
	046 Move X8, [X23]
	047 Move X22, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X22
	054 Move W1, W19
	055 Call DefaultControls.SetLayerRecursively, X0, X1
	056 Move X0, X20
	057 Move X1, X31
	058 Add W21, W21, 1
	059 Call Transform.get_childCount, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return 
	068 Call 0x1C17F20

Method: UnityEngine.GameObject CreatePanel(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD40DC LDR X0, [X8]
	0x03CD40E0 LDR X23, [X23 + 0xA48]
	0x03CD40E4 MOV X2, X21
	0x03CD40E8 BL 0x3CD2C94
	0x03CD40EC LDR X8, [X26]
	0x03CD40F0 MOV X24, X0
	0x03CD40F4 MOVZ W1, 0x1
	0x03CD40F8 MOV X0, X8
	0x03CD40FC BL 0x1C16D6C
	0x03CD4100 LDR X8, [X23]
	0x03CD4104 MOV X21, X0
	0x03CD4108 MOV X1, X31
	0x03CD410C MOV X0, X8
	0x03CD4110 BL 0x338C698
	0x03CD4114 CBZ X21, 0x3CD4578
	0x03CD4118 MOV X22, X0
	0x03CD411C CBZ X0, 0x3CD4134
	0x03CD4120 LDR X8, [X21]
	0x03CD4124 MOV X0, X22
	0x03CD4128 LDR X1, [X8 + 0x40]
	0x03CD412C BL 0x1C16E00
	0x03CD4130 CBZ X0, 0x3CD4580
	0x03CD4134 LDR W8, [X21 + 0x18]
	0x03CD4138 CBZ W8, 0x3CD457C
	0x03CD413C ADRP X8, 0x48E000
	0x03CD4140 LDR X8, [X8 + 0x1C8]
	0x03CD4144 STR X22, [X21 + 0x20]
	0x03CD4148 MOV X1, X20
	0x03CD414C MOV X2, X21
	0x03CD4150 LDR X0, [X8]
	0x03CD4154 BL 0x3CD2C94
	0x03CD4158 LDR X8, [X26]
	0x03CD415C MOV X25, X0
	0x03CD4160 MOVZ W1, 0x1
	0x03CD4164 MOV X0, X8
	0x03CD4168 BL 0x1C16D6C
	0x03CD416C LDR X8, [X28]
	0x03CD4170 MOV X21, X0
	0x03CD4174 MOV X1, X31
	0x03CD4178 MOV X0, X8
	0x03CD417C BL 0x338C698
	0x03CD4180 CBZ X21, 0x3CD4578
	0x03CD4184 MOV X22, X0
	0x03CD4188 CBZ X0, 0x3CD41A0
	0x03CD418C LDR X8, [X21]
	0x03CD4190 MOV X0, X22
	0x03CD4194 LDR X1, [X8 + 0x40]
	0x03CD4198 BL 0x1C16E00
	0x03CD419C CBZ X0, 0x3CD4580
	0x03CD41A0 LDR W8, [X21 + 0x18]
	0x03CD41A4 CBZ W8, 0x3CD457C
	0x03CD41A8 ADRP X8, 0x48E000
	0x03CD41AC LDR X8, [X8 + 0x1D0]
	0x03CD41B0 STR X22, [X21 + 0x20]
	0x03CD41B4 MOV X1, X25
	0x03CD41B8 MOV X2, X21
	0x03CD41BC LDR X0, [X8]
	0x03CD41C0 BL 0x3CD2C94
	0x03CD41C4 LDR X8, [X26]
	0x03CD41C8 MOV X21, X0
	0x03CD41CC MOVZ W1, 0x1
	0x03CD41D0 MOV X0, X8
	0x03CD41D4 BL 0x1C16D6C
	0x03CD41D8 LDR X8, [X23]
	0x03CD41DC MOV X22, X0
	0x03CD41E0 MOV X1, X31
	0x03CD41E4 MOV X0, X8
	0x03CD41E8 BL 0x338C698
	0x03CD41EC CBZ X22, 0x3CD4578
	0x03CD41F0 MOV X23, X0
	0x03CD41F4 CBZ X0, 0x3CD420C
	0x03CD41F8 LDR X8, [X22]
	0x03CD41FC MOV X0, X23
	0x03CD4200 LDR X1, [X8 + 0x40]
	0x03CD4204 BL 0x1C16E00
	0x03CD4208 CBZ X0, 0x3CD4580
	0x03CD420C LDR W8, [X22 + 0x18]
	0x03CD4210 CBZ W8, 0x3CD457C
	0x03CD4214 ADRP X8, 0x48E000
	0x03CD4218 LDR X8, [X8 + 0x1B8]
	0x03CD421C STR X23, [X22 + 0x20]
	0x03CD4220 MOV X1, X20
	0x03CD4224 MOV X2, X22
	0x03CD4228 LDR X0, [X8]
	0x03CD422C BL 0x3CD2C94
	0x03CD4230 LDR X8, [X26]
	0x03CD4234 MOV X23, X0
	0x03CD4238 MOVZ W1, 0x1
	0x03CD423C MOV X0, X8
	0x03CD4240 BL 0x1C16D6C
	0x03CD4244 LDR X8, [X28]
	0x03CD4248 MOV X22, X0
	0x03CD424C MOV X1, X31
	0x03CD4250 MOV X0, X8
	0x03CD4254 BL 0x338C698
	0x03CD4258 CBZ X22, 0x3CD4578
	0x03CD425C MOV X26, X0
	0x03CD4260 CBZ X0, 0x3CD4278
	0x03CD4264 LDR X8, [X22]
	0x03CD4268 MOV X0, X26
	0x03CD426C LDR X1, [X8 + 0x40]
	0x03CD4270 BL 0x1C16E00
	0x03CD4274 CBZ X0, 0x3CD4580
	0x03CD4278 LDR W8, [X22 + 0x18]
	0x03CD427C CBZ W8, 0x3CD457C
	0x03CD4280 ADRP X8, 0x484000
	0x03CD4284 LDR X8, [X8 + 0x8F0]
	0x03CD4288 STR X26, [X22 + 0x20]
	0x03CD428C MOV X1, X23
	0x03CD4290 MOV X2, X22
	0x03CD4294 LDR X0, [X8]
	0x03CD4298 BL 0x3CD2C94
	0x03CD429C CBZ X24, 0x3CD4578
	0x03CD42A0 ADRP X29, 0x475000
	0x03CD42A4 LDR X29, [X29 + 0x6D8]
	0x03CD42A8 MOV X22, X0
	0x03CD42AC MOV X0, X24
	0x03CD42B0 LDR X1, [X29]
	0x03CD42B4 BL 0x21E52E4
	0x03CD42B8 CBZ X0, 0x3CD4578
	0x03CD42BC LDR X1, [X19 + 0x8]
	0x03CD42C0 ADRP X28, 0x47F000
	0x03CD42C4 LDR X28, [X28 + 0xB40]
	0x03CD42C8 MOV X26, X0
	0x03CD42CC BL 0x3CD3398
	0x03CD42D0 MOVZ W1, 0x1
	0x03CD42D4 MOV X0, X26
	0x03CD42D8 BL 0x3CD364C
	0x03CD42DC LDR X8, [X27]
	0x03CD42E0 LDR X9, [X26]
	0x03CD42E4 MOV X0, X26
	0x03CD42E8 LDR X8, [X8 + 0xB8]
	0x03CD42EC LDR X10, [X9 + 0x2A8]
	0x03CD42F0 LDR X1, [X9 + 0x2B0]
	0x03CD42F4 LDP S0, S1, [X8 + 0x20]
	0x03CD42F8 LDP S2, S3, [X8 + 0x28]
	0x03CD42FC BLR X10
	0x03CD4300 LDR X1, [X28]
	0x03CD4304 MOV X0, X24
	0x03CD4308 BL 0x21E52E4
	0x03CD430C CBZ X0, 0x3CD4578
	0x03CD4310 FMOV S0, W31
	0x03CD4314 FMOV S1, 0.25
	0x03CD4318 MOV X1, X31
	0x03CD431C MOV X24, X0
	0x03CD4320 BL 0x3C3E648
	0x03CD4324 FMOV S0, 1
	0x03CD4328 FMOV S1, 0.75
	0x03CD432C MOV X0, X24
	0x03CD4330 MOV X1, X31
	0x03CD4334 BL 0x3C3E764
	0x03CD4338 FMOV S0, W31
	0x03CD433C FMOV S1, W31
	0x03CD4340 MOV X0, X24
	0x03CD4344 MOV X1, X31
	0x03CD4348 BL 0x3C3E99C
	0x03CD434C CBZ X25, 0x3CD4578
	0x03CD4350 LDR X1, [X28]
	0x03CD4354 MOV X0, X25
	0x03CD4358 BL 0x21E52E4
	0x03CD435C CBZ X0, 0x3CD4578
	0x03CD4360 FMOV S0, W31
	0x03CD4364 FMOV S1, 0.25
	0x03CD4368 MOV X1, X31
	0x03CD436C MOV X24, X0
	0x03CD4370 BL 0x3C3E648
	0x03CD4374 FMOV S0, 1
	0x03CD4378 FMOV S1, 0.75
	0x03CD437C MOV X0, X24
	0x03CD4380 MOV X1, X31
	0x03CD4384 BL 0x3C3E764
	0x03CD4388 FMOV S0, -5
	0x03CD438C FMOV S1, W31
	0x03CD4390 MOV X0, X24
	0x03CD4394 MOV X1, X31

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x714000
	012 Move X22, 0x48F000
	013 Move W8, [X20+1115]
	014 Move X22, [X22+328]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x48F000
	021 Move X0, [X0+328]
	022 Call 0x1C17CF4
	023 Move X0, 0x476000
	024 Move X0, [X0+1752]
	025 Call 0x1C17CF4
	026 Move X0, 0x480000
	027 Move X0, [X0+2880]
	028 Call 0x1C17CF4
	029 Move X0, 0x476000
	030 Move X0, [X0+1760]
	031 Call 0x1C17CF4
	032 Move X0, 0x428000
	033 Move X0, [X0+3168]
	034 Call 0x1C17CF4
	035 Move X0, 0x420000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0x48F000
	039 Move X0, [X0+344]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1115], W8
	043 Move X0, [X22]
	044 Move X23, 0x428000
	045 Move X20, 0x476000
	046 Move X21, 0x420000
	047 Move W8, [X0+224]
	048 Move X23, [X23+3168]
	049 Move X20, [X20+1760]
	050 Move X21, [X21+1728]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X22]
	055 Move X8, [X0+184]
	056 Move X0, [X23]
	057 Move W1, 1
	058 Move S8, [X8+8]
	059 Move S9, [X8+12]
	060 Call 0x1C17D6C
	061 Move X8, [X21]
	062 Move X21, [X20]
	063 Move X20, X0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X0, X21
	070 Move X1, X31
	071 Call Type.GetTypeFromHandle, X0
	072 Compare X20, 0
	073 JumpIfEqual {204}
	074 Move X21, X0
	075 Compare X0, 0
	076 JumpIfEqual {83}
	077 Move X8, [X20]
	078 Move X0, X21
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {206}
	083 Move W8, [X20+24]
	084 Compare W8, 0
	085 JumpIfEqual {205}
	086 Move X8, 0x48F000
	087 Move X8, [X8+344]
	088 Move [X20+32], X21
	089 Move V0, V8
	090 Move V1, V9
	091 Move X0, [X8]
	092 Move X1, X20
	093 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	094 Compare X0, 0
	095 JumpIfEqual {204}
	096 Move X8, 0x480000
	097 Move X8, [X8+2880]
	098 Move X20, X0
	099 Move X1, [X8]
	100 Call 0x21E62E4, X0
	101 Move X23, 0x706000
	102 Move W8, [X23+1935]
	103 Move X21, X0
	104 Compare W8, 0
	105 JumpIfNotEqual {111}
	106 Move X0, 0x428000
	107 Move X0, [X0+3848]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X23+1935], W8
	111 Compare X21, 0
	112 JumpIfEqual {204}
	113 Move X24, 0x428000
	114 Move X24, [X24+3848]
	115 Move X0, X21
	116 Move X1, X31
	117 Move X8, [X24]
	118 Move X8, [X8+184]
	119 Move S0, [X8]
	120 Move S1, [X8+4]
	121 Call RectTransform.set_anchorMin, X0, X1
	122 Move X25, 0x70E000
	123 Move W8, [X25+2632]
	124 Compare W8, 0
	125 JumpIfNotEqual {131}
	126 Move X0, 0x428000
	127 Move X0, [X0+3848]
	128 Call 0x1C17CF4
	129 Move W8, 1
	130 Move [X25+2632], W8
	131 Move X8, [X24]
	132 Move X0, X21
	133 Move X1, X31
	134 Move X8, [X8+184]
	135 Move S0, [X8+8]
	136 Move S1, [X8+12]
	137 Call RectTransform.set_anchorMax, X0, X1
	138 Move W8, [X23+1935]
	139 Compare W8, 0
	140 JumpIfNotEqual {146}
	141 Move X0, 0x428000
	142 Move X0, [X0+3848]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X23+1935], W8
	146 Move X8, [X24]
	147 Move X25, 0x476000
	148 Move X0, X21
	149 Move X1, X31
	150 Move X8, [X8+184]
	151 Move S0, [X8]
	152 Move S1, [X8+4]
	153 Move X25, [X25+1752]
	154 Call RectTransform.set_anchoredPosition, X0, X1
	155 Move W8, [X23+1935]
	156 Compare W8, 0
	157 JumpIfNotEqual {163}
	158 Move X0, 0x428000
	159 Move X0, [X0+3848]
	160 Call 0x1C17CF4
	161 Move W8, 1
	162 Move [X23+1935], W8
	163 Move X8, [X24]
	164 Move X0, X21
	165 Move X1, X31
	166 Move X8, [X8+184]
	167 Move S0, [X8]
	168 Move S1, [X8+4]
	169 Call RectTransform.set_sizeDelta, X0, X1
	170 Move X1, [X25]
	171 Move X0, X20
	172 Call 0x21E62E4, X0
	173 Compare X0, 0
	174 JumpIfEqual {204}
	175 Move X1, [X19+8]
	176 Move X21, X0
	177 Call Image.set_sprite, X0, X1
	178 Move W1, 1
	179 Move X0, X21
	180 Call Image.set_type, X0, X1
	181 Move X8, [X22]
	182 Move X9, [X21]
	183 Move X0, X21
	184 Move X8, [X8+184]
	185 Move X10, [X9+680]
	186 Move X1, [X9+688]
	187 Move S0, [X8+48]
	188 Move S1, [X8+52]
	189 Move S2, [X8+56]
	190 Move S3, [X8+60]
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X0, X20
	193 Move X20, [X31+64]
	194 Move X19, [X31+72]
	195 Move X22, [X31+48]
	196 Move X21, [X31+56]
	197 Move X24, [X31+32]
	198 Move X23, [X31+40]
	199 Move X30, [X31+16]
	200 Move X25, [X31+24]
	201 Move D9, [X31+80]
	202 Move D8, [X31+88]
	203 Return X0
	204 Call 0x1C17F20
	205 Call 0x1C17F28
	206 Call 0x1C17F44
	207 Move X1, X31
	208 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateButton(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD46CC LDR X1, [X8 + 0x40]
	0x03CD46D0 BL 0x1C16E00
	0x03CD46D4 CBZ X0, 0x3CD49FC
	0x03CD46D8 LDR W8, [X20 + 0x18]
	0x03CD46DC CBZ W8, 0x3CD49F8
	0x03CD46E0 ADRP X8, 0x48E000
	0x03CD46E4 LDR X8, [X8 + 0x1D8]
	0x03CD46E8 STR X21, [X20 + 0x20]
	0x03CD46EC MOV X1, X31
	0x03CD46F0 LDR X0, [X8]
	0x03CD46F4 BL 0x338C698
	0x03CD46F8 MOV X21, X0
	0x03CD46FC CBZ X0, 0x3CD4714
	0x03CD4700 LDR X8, [X20]
	0x03CD4704 MOV X0, X21
	0x03CD4708 LDR X1, [X8 + 0x40]
	0x03CD470C BL 0x1C16E00
	0x03CD4710 CBZ X0, 0x3CD49FC
	0x03CD4714 LDR W8, [X20 + 0x18]
	0x03CD4718 CMP W8, 0x1
	0x03CD471C B.LS 0x3CD49F8
	0x03CD4720 ADRP X8, 0x484000
	0x03CD4724 LDR X8, [X8 + 0x8F8]
	0x03CD4728 STR X21, [X20 + 0x28]
	0x03CD472C ADRP X21, 0x485000
	0x03CD4730 MOV V0.16B, V8.16B
	0x03CD4734 LDR X0, [X8]
	0x03CD4738 LDR X21, [X21 + 0xA48]
	0x03CD473C MOV V1.16B, V9.16B
	0x03CD4740 MOV X1, X20
	0x03CD4744 BL 0x3CD2B34
	0x03CD4748 LDR X8, [X23]
	0x03CD474C MOV X20, X0
	0x03CD4750 MOVZ W1, 0x1
	0x03CD4754 MOV X0, X8
	0x03CD4758 BL 0x1C16D6C
	0x03CD475C LDR X8, [X21]
	0x03CD4760 MOV X21, X0
	0x03CD4764 MOV X1, X31
	0x03CD4768 MOV X0, X8
	0x03CD476C BL 0x338C698
	0x03CD4770 CBZ X21, 0x3CD49F4
	0x03CD4774 MOV X22, X0
	0x03CD4778 CBZ X0, 0x3CD4790
	0x03CD477C LDR X8, [X21]
	0x03CD4780 MOV X0, X22
	0x03CD4784 LDR X1, [X8 + 0x40]
	0x03CD4788 BL 0x1C16E00
	0x03CD478C CBZ X0, 0x3CD49FC
	0x03CD4790 LDR W8, [X21 + 0x18]
	0x03CD4794 CBZ W8, 0x3CD49F8
	0x03CD4798 ADRP X8, 0x484000
	0x03CD479C LDR X8, [X8 + 0x900]
	0x03CD47A0 STR X22, [X21 + 0x20]
	0x03CD47A4 MOV X1, X20
	0x03CD47A8 MOV X2, X21
	0x03CD47AC LDR X0, [X8]
	0x03CD47B0 BL 0x3CD2C94
	0x03CD47B4 LDR X8, [X23]
	0x03CD47B8 MOV X23, X0
	0x03CD47BC MOVZ W1, 0x1
	0x03CD47C0 MOV X0, X8
	0x03CD47C4 BL 0x1C16D6C
	0x03CD47C8 LDR X8, [X25]
	0x03CD47CC MOV X21, X0
	0x03CD47D0 MOV X1, X31
	0x03CD47D4 MOV X0, X8
	0x03CD47D8 BL 0x338C698
	0x03CD47DC CBZ X21, 0x3CD49F4
	0x03CD47E0 MOV X22, X0
	0x03CD47E4 CBZ X0, 0x3CD47FC
	0x03CD47E8 LDR X8, [X21]
	0x03CD47EC MOV X0, X22
	0x03CD47F0 LDR X1, [X8 + 0x40]
	0x03CD47F4 BL 0x1C16E00
	0x03CD47F8 CBZ X0, 0x3CD49FC
	0x03CD47FC LDR W8, [X21 + 0x18]
	0x03CD4800 CBZ W8, 0x3CD49F8
	0x03CD4804 ADRP X8, 0x484000
	0x03CD4808 LDR X8, [X8 + 0x8F0]
	0x03CD480C STR X22, [X21 + 0x20]
	0x03CD4810 MOV X1, X23
	0x03CD4814 MOV X2, X21
	0x03CD4818 LDR X0, [X8]
	0x03CD481C BL 0x3CD2C94
	0x03CD4820 CBZ X20, 0x3CD49F4
	0x03CD4824 ADRP X25, 0x475000
	0x03CD4828 LDR X25, [X25 + 0x6D8]
	0x03CD482C MOV X21, X0
	0x03CD4830 MOV X0, X20
	0x03CD4834 LDR X1, [X25]
	0x03CD4838 BL 0x21E52E4
	0x03CD483C CBZ X0, 0x3CD49F4
	0x03CD4840 LDR X1, [X19 + 0x8]
	0x03CD4844 MOV X22, X0
	0x03CD4848 BL 0x3CD3398
	0x03CD484C MOVZ W1, 0x1
	0x03CD4850 MOV X0, X22
	0x03CD4854 BL 0x3CD364C
	0x03CD4858 LDR X8, [X24]
	0x03CD485C LDR X9, [X22]
	0x03CD4860 MOV X0, X22
	0x03CD4864 LDR X8, [X8 + 0xB8]
	0x03CD4868 LDR X10, [X9 + 0x2A8]
	0x03CD486C LDR X1, [X9 + 0x2B0]
	0x03CD4870 LDP S0, S1, [X8 + 0x20]
	0x03CD4874 LDP S2, S3, [X8 + 0x28]
	0x03CD4878 BLR X10
	0x03CD487C CBZ X21, 0x3CD49F4
	0x03CD4880 LDR X1, [X25]
	0x03CD4884 MOV X0, X21
	0x03CD4888 BL 0x21E52E4
	0x03CD488C CBZ X0, 0x3CD49F4
	0x03CD4890 LDR X1, [X19]
	0x03CD4894 MOV X22, X0
	0x03CD4898 BL 0x3CD3398
	0x03CD489C MOVZ W1, 0x1
	0x03CD48A0 MOV X0, X22
	0x03CD48A4 BL 0x3CD364C
	0x03CD48A8 LDR X8, [X24]
	0x03CD48AC LDR X9, [X22]
	0x03CD48B0 MOV X0, X22
	0x03CD48B4 LDR X8, [X8 + 0xB8]
	0x03CD48B8 LDR X10, [X9 + 0x2A8]
	0x03CD48BC LDR X1, [X9 + 0x2B0]
	0x03CD48C0 LDP S0, S1, [X8 + 0x20]
	0x03CD48C4 LDP S2, S3, [X8 + 0x28]
	0x03CD48C8 BLR X10
	0x03CD48CC CBZ X23, 0x3CD49F4
	0x03CD48D0 ADRP X24, 0x47F000
	0x03CD48D4 LDR X24, [X24 + 0xB40]
	0x03CD48D8 MOV X0, X23
	0x03CD48DC LDR X1, [X24]
	0x03CD48E0 BL 0x21E52E4
	0x03CD48E4 CBZ X0, 0x3CD49F4
	0x03CD48E8 FMOV S0, -20
	0x03CD48EC FMOV S1, -20
	0x03CD48F0 MOV X1, X31
	0x03CD48F4 MOV X19, X0
	0x03CD48F8 BL 0x3C3E99C
	0x03CD48FC ADRP X23, 0x705000
	0x03CD4900 LDRB W8, [X23 + 0x78F]
	0x03CD4904 CBNZ W8, 0x3CD491C
	0x03CD4908 ADRP X0, 0x427000
	0x03CD490C LDR X0, [X0 + 0xF08]
	0x03CD4910 BL 0x1C16CF4
	0x03CD4914 MOVZ W8, 0x1
	0x03CD4918 STRB W8, [X23 + 0x78F]
	0x03CD491C ADRP X23, 0x427000
	0x03CD4920 LDR X23, [X23 + 0xF08]
	0x03CD4924 MOV X0, X19
	0x03CD4928 MOV X1, X31
	0x03CD492C LDR X8, [X23]
	0x03CD4930 LDR X8, [X8 + 0xB8]
	0x03CD4934 LDP S0, S1, [X8]
	0x03CD4938 BL 0x3C3E648
	0x03CD493C ADRP X25, 0x70D000
	0x03CD4940 LDRB W8, [X25 + 0xA48]
	0x03CD4944 CBNZ W8, 0x3CD495C
	0x03CD4948 ADRP X0, 0x427000
	0x03CD494C LDR X0, [X0 + 0xF08]
	0x03CD4950 BL 0x1C16CF4
	0x03CD4954 MOVZ W8, 0x1
	0x03CD4958 STRB W8, [X25 + 0xA48]
	0x03CD495C LDR X8, [X23]
	0x03CD4960 MOV X0, X19
	0x03CD4964 MOV X1, X31
	0x03CD4968 LDR X8, [X8 + 0xB8]
	0x03CD496C LDP S0, S1, [X8 + 0x8]
	0x03CD4970 BL 0x3C3E764
	0x03CD4974 LDR X1, [X24]
	0x03CD4978 MOV X0, X21
	0x03CD497C BL 0x21E52E4
	0x03CD4980 CBZ X0, 0x3CD49F4
	0x03CD4984 ADRP X21, 0x484000
	0x03CD4988 LDR X21, [X21 + 0x990]
	0x03CD498C FMOV S0, 20
	0x03CD4990 FMOV S1, 20
	0x03CD4994 MOV X1, X31
	0x03CD4998 MOV X19, X0
	0x03CD499C BL 0x3C3E99C
	0x03CD49A0 LDR X1, [X21]
	0x03CD49A4 MOV X0, X20
	0x03CD49A8 BL 0x21E52E4
	0x03CD49AC CBZ X0, 0x3CD49F4
	0x03CD49B0 MOV X1, X19
	0x03CD49B4 MOV X2, X31
	0x03CD49B8 MOV X21, X0
	0x03CD49BC BL 0x3E3B1E0
	0x03CD49C0 MOV X0, X21
	0x03CD49C4 MOV X1, X22
	0x03CD49C8 MOV X2, X31
	0x03CD49CC BL 0x3E40EB4
	0x03CD49D0 MOV X0, X21
	0x03CD49D4 BL 0x3CD2F98
	0x03CD49D8 MOV X0, X20
	0x03CD49DC LDP X20, X19, [X31 + 0x40]
	0x03CD49E0 LDP X22, X21, [X31 + 0x30]
	0x03CD49E4 LDP X24, X23, [X31 + 0x20]
	0x03CD49E8 LDP X30, X25, [X31 + 0x10]
	0x03CD49EC LDP D9, D8, [X31], #0x50
	0x03CD49F0 RET
	0x03CD49F4 BL 0x1C16F20
	0x03CD49F8 BL 0x1C16F28
	0x03CD49FC BL 0x1C16F44
	0x03CD4A00 MOV X1, X31
	0x03CD4A04 BL 0x1C16DEC
	0x03CD4A08 STP D9, D8, [X31 - 0x70]!
	0x03CD4A0C STR X30, [X31 + 0x10]
	0x03CD4A10 STP X28, X27, [X31 + 0x20]
	0x03CD4A14 STP X26, X25, [X31 + 0x30]
	0x03CD4A18 STP X24, X23, [X31 + 0x40]
	0x03CD4A1C STP X22, X21, [X31 + 0x50]
	0x03CD4A20 STP X20, X19, [X31 + 0x60]
	0x03CD4A24 ADRP X19, 0x713000
	0x03CD4A28 ADRP X26, 0x48E000
	0x03CD4A2C LDRB W8, [X19 + 0x462]
	0x03CD4A30 LDR X26, [X26 + 0x148]
	0x03CD4A34 MOV X20, X0
	0x03CD4A38 TBNZ X8, 0x0, 0x3CD4AEC
	0x03CD4A3C ADRP X0, 0x48E000
	0x03CD4A40 LDR X0, [X0 + 0x148]
	0x03CD4A44 BL 0x1C16CF4
	0x03CD4A48 ADRP X0, 0x475000
	0x03CD4A4C LDR X0, [X0 + 0x6D8]
	0x03CD4A50 BL 0x1C16CF4
	0x03CD4A54 ADRP X0, 0x47F000
	0x03CD4A58 LDR X0, [X0 + 0xB40]
	0x03CD4A5C BL 0x1C16CF4
	0x03CD4A60 ADRP X0, 0x47F000
	0x03CD4A64 LDR X0, [X0 + 0xCC8]
	0x03CD4A68 BL 0x1C16CF4
	0x03CD4A6C ADRP X0, 0x48E000
	0x03CD4A70 LDR X0, [X0 + 0x1E0]
	0x03CD4A74 BL 0x1C16CF4
	0x03CD4A78 ADRP X0, 0x475000
	0x03CD4A7C LDR X0, [X0 + 0x6E0]
	0x03CD4A80 BL 0x1C16CF4
	0x03CD4A84 ADRP X0, 0x48E000
	0x03CD4A88 LDR X0, [X0 + 0x178]
	0x03CD4A8C BL 0x1C16CF4
	0x03CD4A90 ADRP X0, 0x48E000
	0x03CD4A94 LDR X0, [X0 + 0x1E8]
	0x03CD4A98 BL 0x1C16CF4
	0x03CD4A9C ADRP X0, 0x427000
	0x03CD4AA0 LDR X0, [X0 + 0xC60]
	0x03CD4AA4 BL 0x1C16CF4
	0x03CD4AA8 ADRP X0, 0x41F000
	0x03CD4AAC LDR X0, [X0 + 0x6C0]
	0x03CD4AB0 BL 0x1C16CF4
	0x03CD4AB4 ADRP X0, 0x484000

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x714000
	010 Move X23, 0x48F000
	011 Move W8, [X20+1116]
	012 Move X23, [X23+328]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {59}
	018 Move X0, 0x48F000
	019 Move X0, [X0+360]
	020 Call 0x1C17CF4
	021 Move X0, 0x48F000
	022 Move X0, [X0+328]
	023 Call 0x1C17CF4
	024 Move X0, 0x48F000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0x476000
	028 Move X0, [X0+1752]
	029 Call 0x1C17CF4
	030 Move X0, 0x480000
	031 Move X0, [X0+2880]
	032 Call 0x1C17CF4
	033 Move X0, 0x480000
	034 Move X0, [X0+3272]
	035 Call 0x1C17CF4
	036 Move X0, 0x476000
	037 Move X0, [X0+1760]
	038 Call 0x1C17CF4
	039 Move X0, 0x48F000
	040 Move X0, [X0+376]
	041 Call 0x1C17CF4
	042 Move X0, 0x428000
	043 Move X0, [X0+3168]
	044 Call 0x1C17CF4
	045 Move X0, 0x420000
	046 Move X0, [X0+1728]
	047 Call 0x1C17CF4
	048 Move X0, 0x48F000
	049 Move X0, [X0+384]
	050 Call 0x1C17CF4
	051 Move X0, 0x472000
	052 Move X0, [X0+848]
	053 Call 0x1C17CF4
	054 Move X0, 0x48F000
	055 Move X0, [X0+392]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+1116], W8
	059 Move X0, [X23]
	060 Move X22, 0x428000
	061 Move X20, 0x476000
	062 Move X21, 0x420000
	063 Move W8, [X0+224]
	064 Move X22, [X22+3168]
	065 Move X20, [X20+1760]
	066 Move X21, [X21+1728]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X23]
	071 Move X8, [X0+184]
	072 Move X0, [X22]
	073 Move W1, 2
	074 Move S8, [X8+8]
	075 Move S9, [X8+12]
	076 Call 0x1C17D6C
	077 Move X8, [X21]
	078 Move X21, [X20]
	079 Move X20, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X31
	087 Call Type.GetTypeFromHandle, X0
	088 Compare X20, 0
	089 JumpIfEqual {283}
	090 Move X21, X0
	091 Compare X0, 0
	092 JumpIfEqual {99}
	093 Move X8, [X20]
	094 Move X0, X21
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {285}
	099 Move W8, [X20+24]
	100 Compare W8, 0
	101 JumpIfEqual {284}
	102 Move X8, 0x48F000
	103 Move X8, [X8+360]
	104 Move [X20+32], X21
	105 Move X1, X31
	106 Move X0, [X8]
	107 Call Type.GetTypeFromHandle, X0
	108 Move X21, X0
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X0, X21
	113 Move X1, [X8+64]
	114 Call 0x1C17E00
	115 Compare X0, 0
	116 JumpIfEqual {285}
	117 Move W8, [X20+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, 0x48F000
	120 Move X8, [X8+392]
	121 Move [X20+40], X21
	122 Move X21, 0x48F000
	123 Move V0, V8
	124 Move X0, [X8]
	125 Move X21, [X21+376]
	126 Move V1, V9
	127 Move X1, X20
	128 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	129 Move X8, [X22]
	130 Move X20, X0
	131 Move W1, 1
	132 Move X0, X8
	133 Call 0x1C17D6C
	134 Move X8, [X21]
	135 Move X21, X0
	136 Move X1, X31
	137 Move X0, X8
	138 Call Type.GetTypeFromHandle, X0
	139 Compare X21, 0
	140 JumpIfEqual {283}
	141 Move X22, X0
	142 Compare X0, 0
	143 JumpIfEqual {150}
	144 Move X8, [X21]
	145 Move X0, X22
	146 Move X1, [X8+64]
	147 Call 0x1C17E00
	148 Compare X0, 0
	149 JumpIfEqual {285}
	150 Move W8, [X21+24]
	151 Compare W8, 0
	152 JumpIfEqual {284}
	153 Move X8, 0x48F000
	154 Move X8, [X8+384]
	155 Move [X21+32], X22
	156 Move X1, X20
	157 Move X2, X21
	158 Move X0, [X8]
	159 Call DefaultControls.CreateUIObject, X0, X1, X2
	160 Compare X20, 0
	161 JumpIfEqual {283}
	162 Move X8, 0x476000
	163 Move X8, [X8+1752]
	164 Move X21, X0
	165 Move X0, X20
	166 Move X1, [X8]
	167 Call 0x21E62E4, X0
	168 Compare X0, 0
	169 JumpIfEqual {283}
	170 Move X1, [X19]
	171 Move X19, 0x48F000
	172 Move X19, [X19+368]
	173 Move X22, X0
	174 Call Image.set_sprite, X0, X1
	175 Move W1, 1
	176 Move X0, X22
	177 Call Image.set_type, X0, X1
	178 Move X8, [X23]
	179 Move X9, [X22]
	180 Move X0, X22
	181 Move X8, [X8+184]
	182 Move X10, [X9+680]
	183 Move X1, [X9+688]
	184 Move S0, [X8+32]
	185 Move S1, [X8+36]
	186 Move S2, [X8+40]
	187 Move S3, [X8+44]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X1, [X19]
	190 Move X0, X20
	191 Call 0x21E62E4, X0
	192 Call DefaultControls.SetDefaultColorTransitionValues, X0
	193 Compare X21, 0
	194 JumpIfEqual {283}
	195 Move X8, 0x480000
	196 Move X8, [X8+3272]
	197 Move X0, X21
	198 Move X1, [X8]
	199 Call 0x21E62E4, X0
	200 Compare X0, 0
	201 JumpIfEqual {283}
	202 Move X9, 0x472000
	203 Move X8, [X0]
	204 Move X9, [X9+848]
	205 Move X22, 0x480000
	206 Move X19, X0
	207 Move X2, [X8+1520]
	208 Move X1, [X9]
	209 Move X9, [X8+1512]
	210 Move X22, [X22+2880]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move W1, 4
	213 Move X0, X19
	214 Move X2, X31
	215 Call Text.set_alignment, X0, X1
	216 Move X0, X19
	217 Call DefaultControls.SetDefaultTextValues, X0
	218 Move X1, [X22]
	219 Move X0, X21
	220 Call 0x21E62E4, X0
	221 Move X21, 0x706000
	222 Move W8, [X21+1935]
	223 Move X19, X0
	224 Compare W8, 0
	225 JumpIfNotEqual {231}
	226 Move X0, 0x428000
	227 Move X0, [X0+3848]
	228 Call 0x1C17CF4
	229 Move W8, 1
	230 Move [X21+1935], W8
	231 Compare X19, 0
	232 JumpIfEqual {283}
	233 Move X22, 0x428000
	234 Move X22, [X22+3848]
	235 Move X0, X19
	236 Move X1, X31
	237 Move X8, [X22]
	238 Move X8, [X8+184]
	239 Move S0, [X8]
	240 Move S1, [X8+4]
	241 Call RectTransform.set_anchorMin, X0, X1
	242 Move X23, 0x70E000
	243 Move W8, [X23+2632]
	244 Compare W8, 0
	245 JumpIfNotEqual {251}
	246 Move X0, 0x428000
	247 Move X0, [X0+3848]
	248 Call 0x1C17CF4
	249 Move W8, 1
	250 Move [X23+2632], W8
	251 Move X8, [X22]
	252 Move X0, X19
	253 Move X1, X31
	254 Move X8, [X8+184]
	255 Move S0, [X8+8]
	256 Move S1, [X8+12]
	257 Call RectTransform.set_anchorMax, X0, X1
	258 Move W8, [X21+1935]
	259 Compare W8, 0
	260 JumpIfNotEqual {266}
	261 Move X0, 0x428000
	262 Move X0, [X0+3848]
	263 Call 0x1C17CF4
	264 Move W8, 1
	265 Move [X21+1935], W8
	266 Move X8, [X22]
	267 Move X0, X19
	268 Move X1, X31
	269 Move X8, [X8+184]
	270 Move S0, [X8]
	271 Move S1, [X8+4]
	272 Call RectTransform.set_sizeDelta, X0, X1
	273 Move X0, X20
	274 Move X20, [X31+48]
	275 Move X19, [X31+56]
	276 Move X22, [X31+32]
	277 Move X21, [X31+40]
	278 Move X30, [X31+16]
	279 Move X23, [X31+24]
	280 Move D9, [X31+64]
	281 Move D8, [X31+72]
	282 Return X0
	283 Call 0x1C17F20
	284 Call 0x1C17F28
	285 Call 0x1C17F44
	286 Move X1, X31
	287 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateText(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD4AB8 LDR X0, [X0 + 0x9C0]
	0x03CD4ABC BL 0x1C16CF4
	0x03CD4AC0 ADRP X0, 0x48E000
	0x03CD4AC4 LDR X0, [X0 + 0x1C0]
	0x03CD4AC8 BL 0x1C16CF4
	0x03CD4ACC ADRP X0, 0x48C000
	0x03CD4AD0 LDR X0, [X0 + 0x268]
	0x03CD4AD4 BL 0x1C16CF4
	0x03CD4AD8 ADRP X0, 0x48E000
	0x03CD4ADC LDR X0, [X0 + 0x1F0]
	0x03CD4AE0 BL 0x1C16CF4
	0x03CD4AE4 MOVZ W8, 0x1
	0x03CD4AE8 STRB W8, [X19 + 0x462]
	0x03CD4AEC LDR X0, [X26]
	0x03CD4AF0 ADRP X24, 0x427000
	0x03CD4AF4 ADRP X19, 0x48E000
	0x03CD4AF8 ADRP X21, 0x41F000
	0x03CD4AFC LDR W8, [X0 + 0xE0]
	0x03CD4B00 LDR X24, [X24 + 0xC60]
	0x03CD4B04 LDR X19, [X19 + 0x1E8]
	0x03CD4B08 LDR X21, [X21 + 0x6C0]
	0x03CD4B0C CBNZ W8, 0x3CD4B18
	0x03CD4B10 BL 0x1C16DFC
	0x03CD4B14 LDR X0, [X26]
	0x03CD4B18 LDR X8, [X0 + 0xB8]
	0x03CD4B1C LDR X0, [X24]
	0x03CD4B20 MOVZ W1, 0x1
	0x03CD4B24 LDP S8, S9, [X8 + 0x10]
	0x03CD4B28 BL 0x1C16D6C
	0x03CD4B2C LDR X8, [X21]
	0x03CD4B30 LDR X21, [X19]
	0x03CD4B34 MOV X19, X0
	0x03CD4B38 LDR W9, [X8 + 0xE0]
	0x03CD4B3C CBNZ W9, 0x3CD4B48
	0x03CD4B40 MOV X0, X8
	0x03CD4B44 BL 0x1C16DFC
	0x03CD4B48 MOV X0, X21
	0x03CD4B4C MOV X1, X31
	0x03CD4B50 BL 0x338C698
	0x03CD4B54 CBZ X19, 0x3CD4F68
	0x03CD4B58 MOV X21, X0
	0x03CD4B5C CBZ X0, 0x3CD4B74
	0x03CD4B60 LDR X8, [X19]
	0x03CD4B64 MOV X0, X21
	0x03CD4B68 LDR X1, [X8 + 0x40]
	0x03CD4B6C BL 0x1C16E00
	0x03CD4B70 CBZ X0, 0x3CD4F70
	0x03CD4B74 LDR W8, [X19 + 0x18]
	0x03CD4B78 CBZ W8, 0x3CD4F6C
	0x03CD4B7C ADRP X27, 0x48C000
	0x03CD4B80 LDR X27, [X27 + 0x268]
	0x03CD4B84 STR X21, [X19 + 0x20]
	0x03CD4B88 ADRP X23, 0x475000
	0x03CD4B8C MOV V0.16B, V8.16B
	0x03CD4B90 LDR X0, [X27]
	0x03CD4B94 LDR X23, [X23 + 0x6E0]
	0x03CD4B98 MOV V1.16B, V9.16B
	0x03CD4B9C MOV X1, X19
	0x03CD4BA0 BL 0x3CD2B34
	0x03CD4BA4 LDR X8, [X24]
	0x03CD4BA8 MOV X19, X0
	0x03CD4BAC MOVZ W1, 0x1
	0x03CD4BB0 MOV X0, X8
	0x03CD4BB4 BL 0x1C16D6C
	0x03CD4BB8 LDR X8, [X23]
	0x03CD4BBC MOV X21, X0
	0x03CD4BC0 MOV X1, X31
	0x03CD4BC4 MOV X0, X8
	0x03CD4BC8 BL 0x338C698
	0x03CD4BCC CBZ X21, 0x3CD4F68
	0x03CD4BD0 MOV X22, X0
	0x03CD4BD4 CBZ X0, 0x3CD4BEC
	0x03CD4BD8 LDR X8, [X21]
	0x03CD4BDC MOV X0, X22
	0x03CD4BE0 LDR X1, [X8 + 0x40]
	0x03CD4BE4 BL 0x1C16E00
	0x03CD4BE8 CBZ X0, 0x3CD4F70
	0x03CD4BEC LDR W8, [X21 + 0x18]
	0x03CD4BF0 CBZ W8, 0x3CD4F6C
	0x03CD4BF4 ADRP X8, 0x48E000
	0x03CD4BF8 LDR X8, [X8 + 0x1C0]
	0x03CD4BFC STR X22, [X21 + 0x20]
	0x03CD4C00 MOV X1, X19
	0x03CD4C04 MOV X2, X21
	0x03CD4C08 LDR X0, [X8]
	0x03CD4C0C BL 0x3CD2C94
	0x03CD4C10 LDR X8, [X24]
	0x03CD4C14 MOV X22, X0
	0x03CD4C18 MOVZ W1, 0x1
	0x03CD4C1C MOV X0, X8
	0x03CD4C20 BL 0x1C16D6C
	0x03CD4C24 LDR X8, [X23]
	0x03CD4C28 MOV X21, X0
	0x03CD4C2C MOV X1, X31
	0x03CD4C30 MOV X0, X8
	0x03CD4C34 BL 0x338C698
	0x03CD4C38 CBZ X21, 0x3CD4F68
	0x03CD4C3C MOV X23, X0
	0x03CD4C40 CBZ X0, 0x3CD4C58
	0x03CD4C44 LDR X8, [X21]
	0x03CD4C48 MOV X0, X23
	0x03CD4C4C LDR X1, [X8 + 0x40]
	0x03CD4C50 BL 0x1C16E00
	0x03CD4C54 CBZ X0, 0x3CD4F70

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x714000
	009 Move X19, 0x48F000
	010 Move W8, [X20+1117]
	011 Move X19, [X19+328]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x48F000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x480000
	020 Move X0, [X0+3272]
	021 Call 0x1C17CF4
	022 Move X0, 0x48F000
	023 Move X0, [X0+376]
	024 Call 0x1C17CF4
	025 Move X0, 0x428000
	026 Move X0, [X0+3168]
	027 Call 0x1C17CF4
	028 Move X0, 0x420000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move X0, 0x48F000
	032 Move X0, [X0+384]
	033 Call 0x1C17CF4
	034 Move X0, 0x48F000
	035 Move X0, [X0+400]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1117], W8
	039 Move X0, [X19]
	040 Move X22, 0x428000
	041 Move X20, 0x48F000
	042 Move X21, 0x420000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3168]
	045 Move X20, [X20+376]
	046 Move X21, [X21+1728]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X19]
	051 Move X8, [X0+184]
	052 Move X0, [X22]
	053 Move W1, 1
	054 Move S8, [X8+8]
	055 Move S9, [X8+12]
	056 Call 0x1C17D6C
	057 Move X8, [X21]
	058 Move X20, [X20]
	059 Move X19, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X31
	067 Call Type.GetTypeFromHandle, X0
	068 Compare X19, 0
	069 JumpIfEqual {118}
	070 Move X20, X0
	071 Compare X0, 0
	072 JumpIfEqual {79}
	073 Move X8, [X19]
	074 Move X0, X20
	075 Move X1, [X8+64]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {120}
	079 Move W8, [X19+24]
	080 Compare W8, 0
	081 JumpIfEqual {119}
	082 Move X8, 0x48F000
	083 Move X8, [X8+384]
	084 Move [X19+32], X20
	085 Move V0, V8
	086 Move V1, V9
	087 Move X0, [X8]
	088 Move X1, X19
	089 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	090 Compare X0, 0
	091 JumpIfEqual {118}
	092 Move X8, 0x480000
	093 Move X8, [X8+3272]
	094 Move X19, X0
	095 Move X1, [X8]
	096 Call 0x21E62E4, X0
	097 Compare X0, 0
	098 JumpIfEqual {118}
	099 Move X9, 0x48F000
	100 Move X8, [X0]
	101 Move X9, [X9+400]
	102 Move X20, X0
	103 Move X2, [X8+1520]
	104 Move X1, [X9]
	105 Move X9, [X8+1512]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X0, X20
	108 Call DefaultControls.SetDefaultTextValues, X0
	109 Move X0, X19
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Move D9, [X31+64]
	116 Move D8, [X31+72]
	117 Return X0
	118 Call 0x1C17F20
	119 Call 0x1C17F28
	120 Call 0x1C17F44
	121 Move X1, X31
	122 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateImage(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD4C58 LDR W8, [X21 + 0x18]
	0x03CD4C5C CBZ W8, 0x3CD4F6C
	0x03CD4C60 ADRP X8, 0x48E000
	0x03CD4C64 LDR X8, [X8 + 0x1F0]
	0x03CD4C68 STR X23, [X21 + 0x20]
	0x03CD4C6C ADRP X25, 0x48E000
	0x03CD4C70 MOV X1, X22
	0x03CD4C74 LDR X0, [X8]
	0x03CD4C78 LDR X25, [X25 + 0x178]
	0x03CD4C7C MOV X2, X21
	0x03CD4C80 BL 0x3CD2C94
	0x03CD4C84 LDR X8, [X24]
	0x03CD4C88 MOV X23, X0
	0x03CD4C8C MOVZ W1, 0x1
	0x03CD4C90 MOV X0, X8
	0x03CD4C94 BL 0x1C16D6C
	0x03CD4C98 LDR X8, [X25]
	0x03CD4C9C MOV X21, X0
	0x03CD4CA0 MOV X1, X31
	0x03CD4CA4 MOV X0, X8
	0x03CD4CA8 BL 0x338C698
	0x03CD4CAC CBZ X21, 0x3CD4F68
	0x03CD4CB0 MOV X24, X0
	0x03CD4CB4 CBZ X0, 0x3CD4CCC
	0x03CD4CB8 LDR X8, [X21]
	0x03CD4CBC MOV X0, X24
	0x03CD4CC0 LDR X1, [X8 + 0x40]
	0x03CD4CC4 BL 0x1C16E00
	0x03CD4CC8 CBZ X0, 0x3CD4F70
	0x03CD4CCC LDR W8, [X21 + 0x18]
	0x03CD4CD0 CBZ W8, 0x3CD4F6C
	0x03CD4CD4 ADRP X8, 0x484000
	0x03CD4CD8 LDR X8, [X8 + 0x9C0]
	0x03CD4CDC STR X24, [X21 + 0x20]
	0x03CD4CE0 MOV X1, X19
	0x03CD4CE4 MOV X2, X21
	0x03CD4CE8 LDR X0, [X8]
	0x03CD4CEC BL 0x3CD2C94
	0x03CD4CF0 CBZ X19, 0x3CD4F68
	0x03CD4CF4 ADRP X8, 0x48E000
	0x03CD4CF8 LDR X8, [X8 + 0x1E0]
	0x03CD4CFC MOV X21, X0
	0x03CD4D00 MOV X0, X19
	0x03CD4D04 LDR X1, [X8]
	0x03CD4D08 BL 0x21E52E4
	0x03CD4D0C CBZ X0, 0x3CD4F68
	0x03CD4D10 MOVZ W1, 0x1
	0x03CD4D14 MOV X2, X31
	0x03CD4D18 MOV X24, X0
	0x03CD4D1C BL 0x3E47488
	0x03CD4D20 CBZ X22, 0x3CD4F68
	0x03CD4D24 ADRP X28, 0x475000
	0x03CD4D28 LDR X28, [X28 + 0x6D8]
	0x03CD4D2C MOV X0, X22
	0x03CD4D30 LDR X1, [X28]
	0x03CD4D34 BL 0x21E52E4
	0x03CD4D38 CBZ X0, 0x3CD4F68
	0x03CD4D3C LDR X1, [X20]
	0x03CD4D40 MOV X25, X0
	0x03CD4D44 BL 0x3CD3398
	0x03CD4D48 MOVZ W1, 0x1
	0x03CD4D4C MOV X0, X25
	0x03CD4D50 BL 0x3CD364C
	0x03CD4D54 LDR X8, [X26]
	0x03CD4D58 LDR X9, [X25]
	0x03CD4D5C MOV X0, X25
	0x03CD4D60 LDR X8, [X8 + 0xB8]
	0x03CD4D64 LDR X10, [X9 + 0x2A8]
	0x03CD4D68 LDR X1, [X9 + 0x2B0]
	0x03CD4D6C LDP S0, S1, [X8 + 0x20]
	0x03CD4D70 LDP S2, S3, [X8 + 0x28]
	0x03CD4D74 BLR X10
	0x03CD4D78 CBZ X23, 0x3CD4F68
	0x03CD4D7C LDR X1, [X28]
	0x03CD4D80 MOV X0, X23
	0x03CD4D84 BL 0x21E52E4
	0x03CD4D88 CBZ X0, 0x3CD4F68
	0x03CD4D8C LDR X1, [X20 + 0x20]
	0x03CD4D90 MOV X26, X0

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x714000
	009 Move X19, 0x48F000
	010 Move W8, [X20+1118]
	011 Move X19, [X19+328]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x48F000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x476000
	020 Move X0, [X0+1760]
	021 Call 0x1C17CF4
	022 Move X0, 0x428000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x420000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0x48F000
	029 Move X0, [X0+408]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1118], W8
	033 Move X0, [X19]
	034 Move X22, 0x428000
	035 Move X20, 0x476000
	036 Move X21, 0x420000
	037 Move W8, [X0+224]
	038 Move X22, [X22+3168]
	039 Move X20, [X20+1760]
	040 Move X21, [X21+1728]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X19]
	045 Move X8, [X0+184]
	046 Move X0, [X22]
	047 Move W1, 1
	048 Move S8, [X8+24]
	049 Move S9, [X8+28]
	050 Call 0x1C17D6C
	051 Move X8, [X21]
	052 Move X20, [X20]
	053 Move X19, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X1, X31
	061 Call Type.GetTypeFromHandle, X0
	062 Compare X19, 0
	063 JumpIfEqual {92}
	064 Move X20, X0
	065 Compare X0, 0
	066 JumpIfEqual {73}
	067 Move X8, [X19]
	068 Move X0, X20
	069 Move X1, [X8+64]
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {94}
	073 Move W8, [X19+24]
	074 Compare W8, 0
	075 JumpIfEqual {93}
	076 Move X8, 0x48F000
	077 Move X8, [X8+408]
	078 Move [X19+32], X20
	079 Move X1, X19
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X0, [X8]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+16]
	086 Move V0, V8
	087 Move V1, V9
	088 Move D9, [X31+64]
	089 Move D8, [X31+72]
	090 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	091 Return X0
	092 Call 0x1C17F20
	093 Call 0x1C17F28
	094 Call 0x1C17F44
	095 Move X1, X31
	096 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateRawImage(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD4D94 BL 0x3CD3398
	0x03CD4D98 CBZ X21, 0x3CD4F68
	0x03CD4D9C ADRP X8, 0x47F000
	0x03CD4DA0 LDR X8, [X8 + 0xCC8]
	0x03CD4DA4 MOV X0, X21
	0x03CD4DA8 LDR X1, [X8]
	0x03CD4DAC BL 0x21E52E4
	0x03CD4DB0 CBZ X0, 0x3CD4F68
	0x03CD4DB4 LDR X8, [X0]
	0x03CD4DB8 LDR X1, [X27]
	0x03CD4DBC ADRP X27, 0x47F000
	0x03CD4DC0 MOV X20, X0
	0x03CD4DC4 LDR X9, [X8 + 0x5E8]
	0x03CD4DC8 LDR X2, [X8 + 0x5F0]
	0x03CD4DCC LDR X27, [X27 + 0xB40]
	0x03CD4DD0 BLR X9
	0x03CD4DD4 MOV X0, X20
	0x03CD4DD8 BL 0x3CD2EBC
	0x03CD4DDC MOV X0, X24
	0x03CD4DE0 MOV X1, X25
	0x03CD4DE4 MOV X2, X31
	0x03CD4DE8 STR X26, [X24 + 0x108]
	0x03CD4DEC BL 0x3E40EB4
	0x03CD4DF0 MOV X0, X24
	0x03CD4DF4 BL 0x3CD2F98
	0x03CD4DF8 LDR X1, [X27]
	0x03CD4DFC MOV X0, X22
	0x03CD4E00 BL 0x21E52E4
	0x03CD4E04 CBZ X0, 0x3CD4F68
	0x03CD4E08 FMOV S0, W31
	0x03CD4E0C FMOV S1, 1
	0x03CD4E10 MOV X1, X31
	0x03CD4E14 MOV X20, X0
	0x03CD4E18 BL 0x3C3E648
	0x03CD4E1C FMOV S0, W31
	0x03CD4E20 FMOV S1, 1
	0x03CD4E24 MOV X0, X20
	0x03CD4E28 MOV X1, X31
	0x03CD4E2C BL 0x3C3E764
	0x03CD4E30 FMOV S0, 10
	0x03CD4E34 FMOV S1, -10
	0x03CD4E38 MOV X0, X20
	0x03CD4E3C MOV X1, X31
	0x03CD4E40 BL 0x3C3E880
	0x03CD4E44 FMOV S0, 20
	0x03CD4E48 FMOV S1, 20
	0x03CD4E4C MOV X0, X20
	0x03CD4E50 MOV X1, X31
	0x03CD4E54 BL 0x3C3E99C
	0x03CD4E58 LDR X1, [X27]
	0x03CD4E5C MOV X0, X23
	0x03CD4E60 BL 0x21E52E4
	0x03CD4E64 CBZ X0, 0x3CD4F68
	0x03CD4E68 FMOV S0, 0.5
	0x03CD4E6C FMOV S1, 0.5
	0x03CD4E70 MOV X1, X31
	0x03CD4E74 MOV X20, X0
	0x03CD4E78 BL 0x3C3E648
	0x03CD4E7C FMOV S0, 0.5
	0x03CD4E80 FMOV S1, 0.5
	0x03CD4E84 MOV X0, X20
	0x03CD4E88 MOV X1, X31
	0x03CD4E8C BL 0x3C3E764
	0x03CD4E90 ADRP X22, 0x705000
	0x03CD4E94 LDRB W8, [X22 + 0x78F]
	0x03CD4E98 CBNZ W8, 0x3CD4EB0
	0x03CD4E9C ADRP X0, 0x427000
	0x03CD4EA0 LDR X0, [X0 + 0xF08]
	0x03CD4EA4 BL 0x1C16CF4
	0x03CD4EA8 MOVZ W8, 0x1
	0x03CD4EAC STRB W8, [X22 + 0x78F]
	0x03CD4EB0 ADRP X8, 0x427000
	0x03CD4EB4 LDR X8, [X8 + 0xF08]
	0x03CD4EB8 MOV X0, X20
	0x03CD4EBC MOV X1, X31
	0x03CD4EC0 LDR X8, [X8]
	0x03CD4EC4 LDR X8, [X8 + 0xB8]
	0x03CD4EC8 LDP S0, S1, [X8]
	0x03CD4ECC BL 0x3C3E880

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x714000
	009 Move X19, 0x48F000
	010 Move W8, [X20+1119]
	011 Move X19, [X19+328]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x48F000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x48F000
	020 Move X0, [X0+416]
	021 Call 0x1C17CF4
	022 Move X0, 0x428000
	023 Move X0, [X0+3168]
	024 Call 0x1C17CF4
	025 Move X0, 0x420000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0x48F000
	029 Move X0, [X0+424]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1119], W8
	033 Move X0, [X19]
	034 Move X22, 0x428000
	035 Move X20, 0x48F000
	036 Move X21, 0x420000
	037 Move W8, [X0+224]
	038 Move X22, [X22+3168]
	039 Move X20, [X20+416]
	040 Move X21, [X21+1728]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X19]
	045 Move X8, [X0+184]
	046 Move X0, [X22]
	047 Move W1, 1
	048 Move S8, [X8+24]
	049 Move S9, [X8+28]
	050 Call 0x1C17D6C
	051 Move X8, [X21]
	052 Move X20, [X20]
	053 Move X19, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X1, X31
	061 Call Type.GetTypeFromHandle, X0
	062 Compare X19, 0
	063 JumpIfEqual {92}
	064 Move X20, X0
	065 Compare X0, 0
	066 JumpIfEqual {73}
	067 Move X8, [X19]
	068 Move X0, X20
	069 Move X1, [X8+64]
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {94}
	073 Move W8, [X19+24]
	074 Compare W8, 0
	075 JumpIfEqual {93}
	076 Move X8, 0x48F000
	077 Move X8, [X8+424]
	078 Move [X19+32], X20
	079 Move X1, X19
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X0, [X8]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+16]
	086 Move V0, V8
	087 Move V1, V9
	088 Move D9, [X31+64]
	089 Move D8, [X31+72]
	090 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	091 Return X0
	092 Call 0x1C17F20
	093 Call 0x1C17F28
	094 Call 0x1C17F44
	095 Move X1, X31
	096 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateSlider(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD4ED0 FMOV S0, 20
	0x03CD4ED4 FMOV S1, 20
	0x03CD4ED8 MOV X0, X20
	0x03CD4EDC MOV X1, X31
	0x03CD4EE0 BL 0x3C3E99C
	0x03CD4EE4 LDR X1, [X27]
	0x03CD4EE8 MOV X0, X21
	0x03CD4EEC BL 0x21E52E4
	0x03CD4EF0 CBZ X0, 0x3CD4F68
	0x03CD4EF4 FMOV S0, W31
	0x03CD4EF8 FMOV S1, W31
	0x03CD4EFC MOV X1, X31
	0x03CD4F00 MOV X20, X0
	0x03CD4F04 BL 0x3C3E648
	0x03CD4F08 FMOV S0, 1
	0x03CD4F0C FMOV S1, 1
	0x03CD4F10 MOV X0, X20
	0x03CD4F14 MOV X1, X31
	0x03CD4F18 BL 0x3C3E764
	0x03CD4F1C FMOV S0, 23
	0x03CD4F20 FMOV S1, 1
	0x03CD4F24 MOV X0, X20
	0x03CD4F28 MOV X1, X31
	0x03CD4F2C BL 0x3C3ECAC
	0x03CD4F30 FMOV S0, -5
	0x03CD4F34 FMOV S1, -2
	0x03CD4F38 MOV X0, X20
	0x03CD4F3C MOV X1, X31
	0x03CD4F40 BL 0x3C3EE40
	0x03CD4F44 MOV X0, X19
	0x03CD4F48 LDP X20, X19, [X31 + 0x60]
	0x03CD4F4C LDP X22, X21, [X31 + 0x50]
	0x03CD4F50 LDP X24, X23, [X31 + 0x40]
	0x03CD4F54 LDP X26, X25, [X31 + 0x30]
	0x03CD4F58 LDP X28, X27, [X31 + 0x20]
	0x03CD4F5C LDR X30, [X31 + 0x10]
	0x03CD4F60 LDP D9, D8, [X31], #0x70
	0x03CD4F64 RET
	0x03CD4F68 BL 0x1C16F20
	0x03CD4F6C BL 0x1C16F28
	0x03CD4F70 BL 0x1C16F44
	0x03CD4F74 MOV X1, X31
	0x03CD4F78 BL 0x1C16DEC
	0x03CD4F7C STP D9, D8, [X31 - 0x70]!
	0x03CD4F80 STR X30, [X31 + 0x10]
	0x03CD4F84 STP X28, X27, [X31 + 0x20]
	0x03CD4F88 STP X26, X25, [X31 + 0x30]
	0x03CD4F8C STP X24, X23, [X31 + 0x40]
	0x03CD4F90 STP X22, X21, [X31 + 0x50]
	0x03CD4F94 STP X20, X19, [X31 + 0x60]
	0x03CD4F98 ADRP X19, 0x713000
	0x03CD4F9C ADRP X25, 0x48E000
	0x03CD4FA0 LDRB W8, [X19 + 0x463]
	0x03CD4FA4 LDR X25, [X25 + 0x148]
	0x03CD4FA8 MOV X20, X0
	0x03CD4FAC TBNZ X8, 0x0, 0x3CD506C
	0x03CD4FB0 ADRP X0, 0x48E000
	0x03CD4FB4 LDR X0, [X0 + 0x148]
	0x03CD4FB8 BL 0x1C16CF4
	0x03CD4FBC ADRP X0, 0x475000
	0x03CD4FC0 LDR X0, [X0 + 0x6D8]
	0x03CD4FC4 BL 0x1C16CF4
	0x03CD4FC8 ADRP X0, 0x48E000
	0x03CD4FCC LDR X0, [X0 + 0x1F8]
	0x03CD4FD0 BL 0x1C16CF4
	0x03CD4FD4 ADRP X0, 0x47F000
	0x03CD4FD8 LDR X0, [X0 + 0xB40]
	0x03CD4FDC BL 0x1C16CF4
	0x03CD4FE0 ADRP X0, 0x47F000
	0x03CD4FE4 LDR X0, [X0 + 0xCC8]
	0x03CD4FE8 BL 0x1C16CF4
	0x03CD4FEC ADRP X0, 0x475000
	0x03CD4FF0 LDR X0, [X0 + 0x6E0]
	0x03CD4FF4 BL 0x1C16CF4
	0x03CD4FF8 ADRP X0, 0x48E000
	0x03CD4FFC LDR X0, [X0 + 0x200]
	0x03CD5000 BL 0x1C16CF4
	0x03CD5004 ADRP X0, 0x48D000
	0x03CD5008 LDR X0, [X0 + 0x178]
	0x03CD500C BL 0x1C16CF4
	0x03CD5010 ADRP X0, 0x426000
	0x03CD5014 LDR X0, [X0 + 0xC60]
	0x03CD5018 BL 0x1C16CF4
	0x03CD501C ADRP X0, 0x41E000
	0x03CD5020 LDR X0, [X0 + 0x6C0]
	0x03CD5024 BL 0x1C16CF4
	0x03CD5028 ADRP X0, 0x483000
	0x03CD502C LDR X0, [X0 + 0x930]
	0x03CD5030 BL 0x1C16CF4
	0x03CD5034 ADRP X0, 0x48D000
	0x03CD5038 LDR X0, [X0 + 0x180]
	0x03CD503C BL 0x1C16CF4
	0x03CD5040 ADRP X0, 0x483000
	0x03CD5044 LDR X0, [X0 + 0x940]
	0x03CD5048 BL 0x1C16CF4
	0x03CD504C ADRP X0, 0x41E000
	0x03CD5050 LDR X0, [X0 + 0x988]
	0x03CD5054 BL 0x1C16CF4
	0x03CD5058 ADRP X0, 0x48D000
	0x03CD505C LDR X0, [X0 + 0x208]
	0x03CD5060 BL 0x1C16CF4
	0x03CD5064 MOVZ W8, 0x1
	0x03CD5068 STRB W8, [X19 + 0x463]
	0x03CD506C LDR X0, [X25]
	0x03CD5070 ADRP X23, 0x426000
	0x03CD5074 ADRP X19, 0x474000
	0x03CD5078 ADRP X21, 0x41E000
	0x03CD507C LDR W8, [X0 + 0xE0]
	0x03CD5080 LDR X23, [X23 + 0xC60]
	0x03CD5084 LDR X19, [X19 + 0x6E0]
	0x03CD5088 LDR X21, [X21 + 0x6C0]
	0x03CD508C CBNZ W8, 0x3CD5098
	0x03CD5090 BL 0x1C16DFC
	0x03CD5094 LDR X0, [X25]
	0x03CD5098 LDR X8, [X0 + 0xB8]
	0x03CD509C LDR X0, [X23]
	0x03CD50A0 MOVZ W1, 0x2
	0x03CD50A4 LDP S8, S9, [X8 + 0x8]
	0x03CD50A8 BL 0x1C16D6C
	0x03CD50AC LDR X8, [X21]
	0x03CD50B0 LDR X21, [X19]
	0x03CD50B4 MOV X19, X0
	0x03CD50B8 LDR W9, [X8 + 0xE0]
	0x03CD50BC CBNZ W9, 0x3CD50C8
	0x03CD50C0 MOV X0, X8
	0x03CD50C4 BL 0x1C16DFC
	0x03CD50C8 MOV X0, X21
	0x03CD50CC MOV X1, X31
	0x03CD50D0 BL 0x338C698
	0x03CD50D4 CBZ X19, 0x3CD558C
	0x03CD50D8 MOV X21, X0
	0x03CD50DC CBZ X0, 0x3CD50F4
	0x03CD50E0 LDR X8, [X19]
	0x03CD50E4 MOV X0, X21
	0x03CD50E8 LDR X1, [X8 + 0x40]
	0x03CD50EC BL 0x1C16E00
	0x03CD50F0 CBZ X0, 0x3CD5594
	0x03CD50F4 LDR W8, [X19 + 0x18]
	0x03CD50F8 CBZ W8, 0x3CD5590
	0x03CD50FC ADRP X8, 0x48D000
	0x03CD5100 LDR X8, [X8 + 0x200]
	0x03CD5104 STR X21, [X19 + 0x20]
	0x03CD5108 MOV X1, X31
	0x03CD510C LDR X0, [X8]
	0x03CD5110 BL 0x338C698
	0x03CD5114 MOV X21, X0
	0x03CD5118 CBZ X0, 0x3CD5130
	0x03CD511C LDR X8, [X19]
	0x03CD5120 MOV X0, X21
	0x03CD5124 LDR X1, [X8 + 0x40]
	0x03CD5128 BL 0x1C16E00
	0x03CD512C CBZ X0, 0x3CD5594
	0x03CD5130 LDR W8, [X19 + 0x18]
	0x03CD5134 CMP W8, 0x1
	0x03CD5138 B.LS 0x3CD5590
	0x03CD513C ADRP X8, 0x48D000
	0x03CD5140 LDR X8, [X8 + 0x208]
	0x03CD5144 STR X21, [X19 + 0x28]
	0x03CD5148 ADRP X24, 0x48D000
	0x03CD514C MOV V0.16B, V8.16B
	0x03CD5150 LDR X0, [X8]
	0x03CD5154 LDR X24, [X24 + 0x178]
	0x03CD5158 MOV V1.16B, V9.16B
	0x03CD515C MOV X1, X19
	0x03CD5160 BL 0x3CD2B34
	0x03CD5164 LDR X8, [X23]
	0x03CD5168 MOV X19, X0
	0x03CD516C MOVZ W1, 0x1
	0x03CD5170 MOV X0, X8
	0x03CD5174 BL 0x1C16D6C
	0x03CD5178 LDR X8, [X24]
	0x03CD517C MOV X21, X0
	0x03CD5180 MOV X1, X31
	0x03CD5184 MOV X0, X8
	0x03CD5188 BL 0x338C698
	0x03CD518C CBZ X21, 0x3CD558C
	0x03CD5190 MOV X22, X0
	0x03CD5194 CBZ X0, 0x3CD51AC
	0x03CD5198 LDR X8, [X21]
	0x03CD519C MOV X0, X22
	0x03CD51A0 LDR X1, [X8 + 0x40]
	0x03CD51A4 BL 0x1C16E00
	0x03CD51A8 CBZ X0, 0x3CD5594
	0x03CD51AC LDR W8, [X21 + 0x18]
	0x03CD51B0 CBZ W8, 0x3CD5590
	0x03CD51B4 ADRP X8, 0x483000
	0x03CD51B8 LDR X8, [X8 + 0x930]
	0x03CD51BC STR X22, [X21 + 0x20]
	0x03CD51C0 MOV X1, X19
	0x03CD51C4 MOV X2, X21
	0x03CD51C8 LDR X0, [X8]
	0x03CD51CC BL 0x3CD2C94
	0x03CD51D0 LDR X8, [X23]
	0x03CD51D4 MOV X21, X0
	0x03CD51D8 MOVZ W1, 0x1
	0x03CD51DC MOV X0, X8
	0x03CD51E0 BL 0x1C16D6C
	0x03CD51E4 LDR X8, [X24]
	0x03CD51E8 MOV X22, X0
	0x03CD51EC MOV X1, X31
	0x03CD51F0 MOV X0, X8
	0x03CD51F4 BL 0x338C698
	0x03CD51F8 CBZ X22, 0x3CD558C
	0x03CD51FC MOV X23, X0
	0x03CD5200 CBZ X0, 0x3CD5218
	0x03CD5204 LDR X8, [X22]
	0x03CD5208 MOV X0, X23
	0x03CD520C LDR X1, [X8 + 0x40]
	0x03CD5210 BL 0x1C16E00
	0x03CD5214 CBZ X0, 0x3CD5594
	0x03CD5218 LDR W8, [X22 + 0x18]
	0x03CD521C CBZ W8, 0x3CD5590
	0x03CD5220 ADRP X8, 0x48D000
	0x03CD5224 LDR X8, [X8 + 0x180]
	0x03CD5228 STR X23, [X22 + 0x20]
	0x03CD522C MOV X1, X19
	0x03CD5230 MOV X2, X22
	0x03CD5234 LDR X0, [X8]
	0x03CD5238 BL 0x3CD2C94
	0x03CD523C CBZ X19, 0x3CD558C
	0x03CD5240 ADRP X8, 0x474000
	0x03CD5244 LDR X8, [X8 + 0x6D8]
	0x03CD5248 MOV X24, X0
	0x03CD524C MOV X0, X19
	0x03CD5250 LDR X1, [X8]
	0x03CD5254 BL 0x21E52E4
	0x03CD5258 CBZ X0, 0x3CD558C
	0x03CD525C LDR X1, [X20 + 0x10]
	0x03CD5260 ADRP X20, 0x48D000
	0x03CD5264 LDR X20, [X20 + 0x1F8]
	0x03CD5268 MOV X22, X0
	0x03CD526C BL 0x3CD3398
	0x03CD5270 MOVZ W1, 0x1
	0x03CD5274 MOV X0, X22
	0x03CD5278 BL 0x3CD364C
	0x03CD527C LDR X8, [X25]
	0x03CD5280 LDR X9, [X22]
	0x03CD5284 MOV X0, X22
	0x03CD5288 LDR X8, [X8 + 0xB8]
	0x03CD528C LDR X10, [X9 + 0x2A8]
	0x03CD5290 LDR X1, [X9 + 0x2B0]
	0x03CD5294 LDP S0, S1, [X8 + 0x20]
	0x03CD5298 LDP S2, S3, [X8 + 0x28]
	0x03CD529C BLR X10
	0x03CD52A0 LDR X1, [X20]
	0x03CD52A4 MOV X0, X19
	0x03CD52A8 BL 0x21E52E4
	0x03CD52AC MOV X20, X0
	0x03CD52B0 BL 0x3CD2F98
	0x03CD52B4 CBZ X24, 0x3CD558C
	0x03CD52B8 ADRP X23, 0x47E000
	0x03CD52BC LDR X23, [X23 + 0xCC8]
	0x03CD52C0 MOV X0, X24
	0x03CD52C4 LDR X1, [X23]
	0x03CD52C8 BL 0x21E52E4
	0x03CD52CC CBZ X0, 0x3CD558C
	0x03CD52D0 ADRP X9, 0x41E000
	0x03CD52D4 LDR X8, [X0]
	0x03CD52D8 LDR X9, [X9 + 0x988]
	0x03CD52DC MOV X22, X0
	0x03CD52E0 LDR X2, [X8 + 0x5F0]
	0x03CD52E4 LDR X1, [X9]
	0x03CD52E8 LDR X9, [X8 + 0x5E8]
	0x03CD52EC BLR X9
	0x03CD52F0 MOV X0, X22
	0x03CD52F4 MOV W1, W31
	0x03CD52F8 MOV X2, X31
	0x03CD52FC BL 0x3E45410
	0x03CD5300 MOV X0, X22
	0x03CD5304 BL 0x3CD2EBC
	0x03CD5308 CBZ X21, 0x3CD558C
	0x03CD530C LDR X1, [X23]
	0x03CD5310 MOV X0, X21
	0x03CD5314 BL 0x21E52E4
	0x03CD5318 CBZ X0, 0x3CD558C
	0x03CD531C ADRP X9, 0x483000
	0x03CD5320 LDR X8, [X0]
	0x03CD5324 LDR X9, [X9 + 0x940]
	0x03CD5328 ADRP X27, 0x47E000
	0x03CD532C MOV X23, X0
	0x03CD5330 LDR X2, [X8 + 0x5F0]
	0x03CD5334 LDR X1, [X9]
	0x03CD5338 LDR X9, [X8 + 0x5E8]
	0x03CD533C LDR X27, [X27 + 0xB40]
	0x03CD5340 BLR X9
	0x03CD5344 MOVZ W1, 0x2
	0x03CD5348 MOV X0, X23
	0x03CD534C MOV X2, X31
	0x03CD5350 BL 0x3E4587C
	0x03CD5354 LDR X8, [X22]
	0x03CD5358 MOV X0, X22
	0x03CD535C LDR X9, [X8 + 0x298]
	0x03CD5360 LDR X1, [X8 + 0x2A0]
	0x03CD5364 BLR X9
	0x03CD5368 LDR X8, [X23]
	0x03CD536C FMOV S4, 0.5
	0x03CD5370 FMUL S3, S3, S4
	0x03CD5374 MOV X0, X23
	0x03CD5378 LDR X9, [X8 + 0x2A8]
	0x03CD537C LDR X1, [X8 + 0x2B0]
	0x03CD5380 BLR X9
	0x03CD5384 LDR X1, [X27]
	0x03CD5388 MOV X0, X24
	0x03CD538C BL 0x21E52E4
	0x03CD5390 ADRP X25, 0x704000
	0x03CD5394 LDRB W8, [X25 + 0x78F]
	0x03CD5398 MOV X24, X0
	0x03CD539C CBNZ W8, 0x3CD53B4
	0x03CD53A0 ADRP X0, 0x426000
	0x03CD53A4 LDR X0, [X0 + 0xF08]
	0x03CD53A8 BL 0x1C16CF4
	0x03CD53AC MOVZ W8, 0x1
	0x03CD53B0 STRB W8, [X25 + 0x78F]
	0x03CD53B4 CBZ X24, 0x3CD558C
	0x03CD53B8 ADRP X26, 0x426000
	0x03CD53BC LDR X26, [X26 + 0xF08]
	0x03CD53C0 MOV X0, X24
	0x03CD53C4 MOV X1, X31
	0x03CD53C8 LDR X8, [X26]
	0x03CD53CC LDR X8, [X8 + 0xB8]
	0x03CD53D0 LDP S0, S1, [X8]
	0x03CD53D4 BL 0x3C3E648
	0x03CD53D8 ADRP X28, 0x70C000
	0x03CD53DC LDRB W8, [X28 + 0xA48]
	0x03CD53E0 CBNZ W8, 0x3CD53F8
	0x03CD53E4 ADRP X0, 0x426000
	0x03CD53E8 LDR X0, [X0 + 0xF08]
	0x03CD53EC BL 0x1C16CF4
	0x03CD53F0 MOVZ W8, 0x1
	0x03CD53F4 STRB W8, [X28 + 0xA48]
	0x03CD53F8 LDR X8, [X26]
	0x03CD53FC MOV X0, X24
	0x03CD5400 MOV X1, X31
	0x03CD5404 LDR X8, [X8 + 0xB8]
	0x03CD5408 LDP S0, S1, [X8 + 0x8]
	0x03CD540C BL 0x3C3E764
	0x03CD5410 LDRB W8, [X25 + 0x78F]
	0x03CD5414 CBNZ W8, 0x3CD542C
	0x03CD5418 ADRP X0, 0x426000
	0x03CD541C LDR X0, [X0 + 0xF08]
	0x03CD5420 BL 0x1C16CF4
	0x03CD5424 MOVZ W8, 0x1
	0x03CD5428 STRB W8, [X25 + 0x78F]
	0x03CD542C LDR X8, [X26]
	0x03CD5430 MOV X0, X24
	0x03CD5434 MOV X1, X31
	0x03CD5438 LDR X8, [X8 + 0xB8]
	0x03CD543C LDP S0, S1, [X8]
	0x03CD5440 BL 0x3C3E99C
	0x03CD5444 FMOV S0, 10
	0x03CD5448 FMOV S1, 6
	0x03CD544C MOV X0, X24
	0x03CD5450 MOV X1, X31
	0x03CD5454 BL 0x3C3ECAC
	0x03CD5458 FMOV S0, -10
	0x03CD545C FMOV S1, -7
	0x03CD5460 MOV X0, X24
	0x03CD5464 MOV X1, X31
	0x03CD5468 BL 0x3C3EE40
	0x03CD546C LDR X1, [X27]
	0x03CD5470 MOV X0, X21
	0x03CD5474 BL 0x21E52E4
	0x03CD5478 LDRB W8, [X25 + 0x78F]
	0x03CD547C MOV X21, X0
	0x03CD5480 CBNZ W8, 0x3CD5498
	0x03CD5484 ADRP X0, 0x426000
	0x03CD5488 LDR X0, [X0 + 0xF08]
	0x03CD548C BL 0x1C16CF4
	0x03CD5490 MOVZ W8, 0x1
	0x03CD5494 STRB W8, [X25 + 0x78F]
	0x03CD5498 CBZ X21, 0x3CD558C
	0x03CD549C LDR X8, [X26]
	0x03CD54A0 MOV X0, X21
	0x03CD54A4 MOV X1, X31
	0x03CD54A8 LDR X8, [X8 + 0xB8]
	0x03CD54AC LDP S0, S1, [X8]
	0x03CD54B0 BL 0x3C3E648
	0x03CD54B4 LDRB W8, [X28 + 0xA48]
	0x03CD54B8 CBNZ W8, 0x3CD54D0
	0x03CD54BC ADRP X0, 0x426000
	0x03CD54C0 LDR X0, [X0 + 0xF08]
	0x03CD54C4 BL 0x1C16CF4
	0x03CD54C8 MOVZ W8, 0x1
	0x03CD54CC STRB W8, [X28 + 0xA48]
	0x03CD54D0 LDR X8, [X26]
	0x03CD54D4 MOV X0, X21
	0x03CD54D8 MOV X1, X31
	0x03CD54DC LDR X8, [X8 + 0xB8]
	0x03CD54E0 LDP S0, S1, [X8 + 0x8]
	0x03CD54E4 BL 0x3C3E764
	0x03CD54E8 LDRB W8, [X25 + 0x78F]
	0x03CD54EC CBNZ W8, 0x3CD5504
	0x03CD54F0 ADRP X0, 0x426000
	0x03CD54F4 LDR X0, [X0 + 0xF08]
	0x03CD54F8 BL 0x1C16CF4
	0x03CD54FC MOVZ W8, 0x1
	0x03CD5500 STRB W8, [X25 + 0x78F]
	0x03CD5504 LDR X8, [X26]
	0x03CD5508 MOV X0, X21
	0x03CD550C MOV X1, X31
	0x03CD5510 LDR X8, [X8 + 0xB8]
	0x03CD5514 LDP S0, S1, [X8]
	0x03CD5518 BL 0x3C3E99C
	0x03CD551C FMOV S0, 10
	0x03CD5520 FMOV S1, 6
	0x03CD5524 MOV X0, X21
	0x03CD5528 MOV X1, X31
	0x03CD552C BL 0x3C3ECAC
	0x03CD5530 FMOV S0, -10
	0x03CD5534 FMOV S1, -7
	0x03CD5538 MOV X0, X21
	0x03CD553C MOV X1, X31
	0x03CD5540 BL 0x3C3EE40
	0x03CD5544 CBZ X20, 0x3CD558C
	0x03CD5548 MOV X0, X20
	0x03CD554C MOV X1, X22
	0x03CD5550 MOV X2, X31
	0x03CD5554 BL 0x3E26428
	0x03CD5558 MOV X0, X20
	0x03CD555C MOV X1, X23
	0x03CD5560 MOV X2, X31
	0x03CD5564 BL 0x3E266B0
	0x03CD5568 MOV X0, X19
	0x03CD556C LDP X20, X19, [X31 + 0x60]
	0x03CD5570 LDP X22, X21, [X31 + 0x50]
	0x03CD5574 LDP X24, X23, [X31 + 0x40]
	0x03CD5578 LDP X26, X25, [X31 + 0x30]
	0x03CD557C LDP X28, X27, [X31 + 0x20]
	0x03CD5580 LDR X30, [X31 + 0x10]
	0x03CD5584 LDP D9, D8, [X31], #0x70
	0x03CD5588 RET

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X20, 0x714000
	016 Move X27, 0x48F000
	017 Move W8, [X20+1120]
	018 Move X27, [X27+328]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {71}
	024 Move X0, 0x48F000
	025 Move X0, [X0+328]
	026 Call 0x1C17CF4
	027 Move X0, 0x476000
	028 Move X0, [X0+1752]
	029 Call 0x1C17CF4
	030 Move X0, 0x480000
	031 Move X0, [X0+2880]
	032 Call 0x1C17CF4
	033 Move X0, 0x488000
	034 Move X0, [X0+864]
	035 Call 0x1C17CF4
	036 Move X0, 0x476000
	037 Move X0, [X0+1760]
	038 Call 0x1C17CF4
	039 Move X0, 0x486000
	040 Move X0, [X0+2632]
	041 Call 0x1C17CF4
	042 Move X0, 0x48F000
	043 Move X0, [X0+432]
	044 Call 0x1C17CF4
	045 Move X0, 0x428000
	046 Move X0, [X0+3168]
	047 Call 0x1C17CF4
	048 Move X0, 0x420000
	049 Move X0, [X0+1728]
	050 Call 0x1C17CF4
	051 Move X0, 0x485000
	052 Move X0, [X0+2288]
	053 Call 0x1C17CF4
	054 Move X0, 0x48F000
	055 Move X0, [X0+440]
	056 Call 0x1C17CF4
	057 Move X0, 0x48F000
	058 Move X0, [X0+448]
	059 Call 0x1C17CF4
	060 Move X0, 0x48F000
	061 Move X0, [X0+456]
	062 Call 0x1C17CF4
	063 Move X0, 0x48D000
	064 Move X0, [X0+608]
	065 Call 0x1C17CF4
	066 Move X0, 0x48F000
	067 Move X0, [X0+464]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+1120], W8
	071 Move X0, [X27]
	072 Move X26, 0x428000
	073 Move X20, 0x48F000
	074 Move X21, 0x420000
	075 Move W8, [X0+224]
	076 Move X26, [X26+3168]
	077 Move X20, [X20+432]
	078 Move X21, [X21+1728]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X27]
	083 Move X8, [X0+184]
	084 Move X0, [X26]
	085 Move W1, 1
	086 Move S8, [X8+16]
	087 Move S9, [X8+20]
	088 Call 0x1C17D6C
	089 Move X8, [X21]
	090 Move X21, [X20]
	091 Move X20, X0
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X21
	098 Move X1, X31
	099 Call Type.GetTypeFromHandle, X0
	100 Compare X20, 0
	101 JumpIfEqual {492}
	102 Move X21, X0
	103 Compare X0, 0
	104 JumpIfEqual {111}
	105 Move X8, [X20]
	106 Move X0, X21
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {494}
	111 Move W8, [X20+24]
	112 Compare W8, 0
	113 JumpIfEqual {493}
	114 Move X8, 0x48C000
	115 Move X8, [X8+608]
	116 Move [X20+32], X21
	117 Move X28, 0x475000
	118 Move V0, V8
	119 Move X0, [X8]
	120 Move X28, [X28+1760]
	121 Move V1, V9
	122 Move X1, X20
	123 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	124 Move X8, [X26]
	125 Move X20, X0
	126 Move W1, 1
	127 Move X0, X8
	128 Call 0x1C17D6C
	129 Move X8, [X28]
	130 Move X21, X0
	131 Move X1, X31
	132 Move X0, X8
	133 Call Type.GetTypeFromHandle, X0
	134 Compare X21, 0
	135 JumpIfEqual {492}
	136 Move X22, X0
	137 Compare X0, 0
	138 JumpIfEqual {145}
	139 Move X8, [X21]
	140 Move X0, X22
	141 Move X1, [X8+64]
	142 Call 0x1C17E00
	143 Compare X0, 0
	144 JumpIfEqual {494}
	145 Move W8, [X21+24]
	146 Compare W8, 0
	147 JumpIfEqual {493}
	148 Move X8, 0x48E000
	149 Move X8, [X8+448]
	150 Move [X21+32], X22
	151 Move X23, 0x485000
	152 Move X1, X20
	153 Move X0, [X8]
	154 Move X23, [X23+2632]
	155 Move X2, X21
	156 Call DefaultControls.CreateUIObject, X0, X1, X2
	157 Move X8, [X26]
	158 Move X24, X0
	159 Move W1, 1
	160 Move X0, X8
	161 Call 0x1C17D6C
	162 Move X8, [X23]
	163 Move X21, X0
	164 Move X1, X31
	165 Move X0, X8
	166 Call Type.GetTypeFromHandle, X0
	167 Compare X21, 0
	168 JumpIfEqual {492}
	169 Move X22, X0
	170 Compare X0, 0
	171 JumpIfEqual {178}
	172 Move X8, [X21]
	173 Move X0, X22
	174 Move X1, [X8+64]
	175 Call 0x1C17E00
	176 Compare X0, 0
	177 JumpIfEqual {494}
	178 Move W8, [X21+24]
	179 Compare W8, 0
	180 JumpIfEqual {493}
	181 Move X8, 0x48E000
	182 Move X8, [X8+456]
	183 Move [X21+32], X22
	184 Move X1, X20
	185 Move X2, X21
	186 Move X0, [X8]
	187 Call DefaultControls.CreateUIObject, X0, X1, X2
	188 Move X8, [X26]
	189 Move X25, X0
	190 Move W1, 1
	191 Move X0, X8
	192 Call 0x1C17D6C
	193 Move X8, [X28]
	194 Move X21, X0
	195 Move X1, X31
	196 Move X0, X8
	197 Call Type.GetTypeFromHandle, X0
	198 Compare X21, 0
	199 JumpIfEqual {492}
	200 Move X22, X0
	201 Compare X0, 0
	202 JumpIfEqual {209}
	203 Move X8, [X21]
	204 Move X0, X22
	205 Move X1, [X8+64]
	206 Call 0x1C17E00
	207 Compare X0, 0
	208 JumpIfEqual {494}
	209 Move W8, [X21+24]
	210 Compare W8, 0
	211 JumpIfEqual {493}
	212 Move X8, 0x48E000
	213 Move X8, [X8+464]
	214 Move [X21+32], X22
	215 Move X1, X25
	216 Move X2, X21
	217 Move X0, [X8]
	218 Call DefaultControls.CreateUIObject, X0, X1, X2
	219 Move X8, [X26]
	220 Move X21, X0
	221 Move W1, 1
	222 Move X0, X8
	223 Call 0x1C17D6C
	224 Move X8, [X23]
	225 Move X22, X0
	226 Move X1, X31
	227 Move X0, X8
	228 Call Type.GetTypeFromHandle, X0
	229 Compare X22, 0
	230 JumpIfEqual {492}
	231 Move X23, X0
	232 Compare X0, 0
	233 JumpIfEqual {240}
	234 Move X8, [X22]
	235 Move X0, X23
	236 Move X1, [X8+64]
	237 Call 0x1C17E00
	238 Compare X0, 0
	239 JumpIfEqual {494}
	240 Move W8, [X22+24]
	241 Compare W8, 0
	242 JumpIfEqual {493}
	243 Move X8, 0x48E000
	244 Move X8, [X8+440]
	245 Move [X22+32], X23
	246 Move X1, X20
	247 Move X2, X22
	248 Move X0, [X8]
	249 Call DefaultControls.CreateUIObject, X0, X1, X2
	250 Move X8, [X26]
	251 Move X23, X0
	252 Move W1, 1
	253 Move X0, X8
	254 Call 0x1C17D6C
	255 Move X8, [X28]
	256 Move X22, X0
	257 Move X1, X31
	258 Move X0, X8
	259 Call Type.GetTypeFromHandle, X0
	260 Compare X22, 0
	261 JumpIfEqual {492}
	262 Move X26, X0
	263 Compare X0, 0
	264 JumpIfEqual {271}
	265 Move X8, [X22]
	266 Move X0, X26
	267 Move X1, [X8+64]
	268 Call 0x1C17E00
	269 Compare X0, 0
	270 JumpIfEqual {494}
	271 Move W8, [X22+24]
	272 Compare W8, 0
	273 JumpIfEqual {493}
	274 Move X8, 0x484000
	275 Move X8, [X8+2288]
	276 Move [X22+32], X26
	277 Move X1, X23
	278 Move X2, X22
	279 Move X0, [X8]
	280 Call DefaultControls.CreateUIObject, X0, X1, X2
	281 Compare X24, 0
	282 JumpIfEqual {492}
	283 Move X29, 0x475000
	284 Move X29, [X29+1752]
	285 Move X22, X0
	286 Move X0, X24
	287 Move X1, [X29]
	288 Call 0x21E62E4, X0
	289 Compare X0, 0
	290 JumpIfEqual {492}
	291 Move X1, [X19+8]
	292 Move X28, 0x47F000
	293 Move X28, [X28+2880]
	294 Move X26, X0
	295 Call Image.set_sprite, X0, X1
	296 Move W1, 1
	297 Move X0, X26
	298 Call Image.set_type, X0, X1
	299 Move X8, [X27]
	300 Move X9, [X26]
	301 Move X0, X26
	302 Move X8, [X8+184]
	303 Move X10, [X9+680]
	304 Move X1, [X9+688]
	305 Move S0, [X8+32]
	306 Move S1, [X8+36]
	307 Move S2, [X8+40]
	308 Move S3, [X8+44]
	309 NotImplemented "Instruction BLR not yet implemented."
	310 Move X1, [X28]
	311 Move X0, X24
	312 Call 0x21E62E4, X0
	313 Compare X0, 0
	314 JumpIfEqual {492}
	315 Move S0, W31
	316 Move S1, 0.25
	317 Move X1, X31
	318 Move X24, X0
	319 Call RectTransform.set_anchorMin, X0, X1
	320 Move S0, 1
	321 Move S1, 0.75
	322 Move X0, X24
	323 Move X1, X31
	324 Call RectTransform.set_anchorMax, X0, X1
	325 Move S0, W31
	326 Move S1, W31
	327 Move X0, X24
	328 Move X1, X31
	329 Call RectTransform.set_sizeDelta, X0, X1
	330 Compare X25, 0
	331 JumpIfEqual {492}
	332 Move X1, [X28]
	333 Move X0, X25
	334 Call 0x21E62E4, X0
	335 Compare X0, 0
	336 JumpIfEqual {492}
	337 Move S0, W31
	338 Move S1, 0.25
	339 Move X1, X31
	340 Move X24, X0
	341 Call RectTransform.set_anchorMin, X0, X1
	342 Move S0, 1
	343 Move S1, 0.75
	344 Move X0, X24
	345 Move X1, X31
	346 Call RectTransform.set_anchorMax, X0, X1
	347 Move S0, -5
	348 Move S1, W31
	349 Move X0, X24
	350 Move X1, X31
	351 Call RectTransform.set_anchoredPosition, X0, X1
	352 Move S0, -20
	353 Move S1, W31
	354 Move X0, X24
	355 Move X1, X31
	356 Call RectTransform.set_sizeDelta, X0, X1
	357 Compare X21, 0
	358 JumpIfEqual {492}
	359 Move X1, [X29]
	360 Move X0, X21
	361 Call 0x21E62E4, X0
	362 Compare X0, 0
	363 JumpIfEqual {492}
	364 Move X1, [X19]
	365 Move X24, X0
	366 Call Image.set_sprite, X0, X1
	367 Move W1, 1
	368 Move X0, X24
	369 Call Image.set_type, X0, X1
	370 Move X8, [X27]
	371 Move X9, [X24]
	372 Move X0, X24
	373 Move X8, [X8+184]
	374 Move X10, [X9+680]
	375 Move X1, [X9+688]
	376 Move S0, [X8+32]
	377 Move S1, [X8+36]
	378 Move S2, [X8+40]
	379 Move S3, [X8+44]
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Move X1, [X28]
	382 Move X0, X21
	383 Call 0x21E62E4, X0
	384 Compare X0, 0
	385 JumpIfEqual {492}
	386 Move S0, 10
	387 Move S1, W31
	388 Move X1, X31
	389 Call RectTransform.set_sizeDelta, X0, X1
	390 Compare X23, 0
	391 JumpIfEqual {492}
	392 Move X1, [X28]
	393 Move X0, X23
	394 Call 0x21E62E4, X0
	395 Compare X0, 0
	396 JumpIfEqual {492}
	397 Move S0, -20
	398 Move S1, W31
	399 Move X1, X31
	400 Move X23, X0
	401 Call RectTransform.set_sizeDelta, X0, X1
	402 Move S0, W31
	403 Move S1, W31
	404 Move X0, X23
	405 Move X1, X31
	406 Call RectTransform.set_anchorMin, X0, X1
	407 Move S0, 1
	408 Move S1, 1
	409 Move X0, X23
	410 Move X1, X31
	411 Call RectTransform.set_anchorMax, X0, X1
	412 Compare X22, 0
	413 JumpIfEqual {492}
	414 Move X1, [X29]
	415 Move X0, X22
	416 Call 0x21E62E4, X0
	417 Compare X0, 0
	418 JumpIfEqual {492}
	419 Move X1, [X19+24]
	420 Move X23, X0
	421 Call Image.set_sprite, X0, X1
	422 Move X8, [X27]
	423 Move X9, [X23]
	424 Move X0, X23
	425 Move X8, [X8+184]
	426 Move X10, [X9+680]
	427 Move X1, [X9+688]
	428 Move S0, [X8+32]
	429 Move S1, [X8+36]
	430 Move S2, [X8+40]
	431 Move S3, [X8+44]
	432 NotImplemented "Instruction BLR not yet implemented."
	433 Move X1, [X28]
	434 Move X0, X22
	435 Call 0x21E62E4, X0
	436 Compare X0, 0
	437 JumpIfEqual {492}
	438 Move S0, 20
	439 Move S1, W31
	440 Move X1, X31
	441 Call RectTransform.set_sizeDelta, X0, X1
	442 Compare X20, 0
	443 JumpIfEqual {492}
	444 Move X8, 0x487000
	445 Move X8, [X8+864]
	446 Move X0, X20
	447 Move X1, [X8]
	448 Call 0x21E62E4, X0
	449 Move X1, [X28]
	450 Move X19, X0
	451 Move X0, X21
	452 Call 0x21E62E4, X0
	453 Compare X19, 0
	454 JumpIfEqual {492}
	455 Move X1, X0
	456 Move X0, X19
	457 Move X2, X31
	458 Call Slider.set_fillRect, X0, X1
	459 Move X1, [X28]
	460 Move X0, X22
	461 Call 0x21E62E4, X0
	462 Move X1, X0
	463 Move X0, X19
	464 Move X2, X31
	465 Call Slider.set_handleRect, X0, X1
	466 Move X0, X19
	467 Move X1, X23
	468 Move X2, X31
	469 Call Selectable.set_targetGraphic, X0, X1
	470 Move X0, X19
	471 Move W1, W31
	472 Move X2, X31
	473 Call Slider.set_direction, X0, X1
	474 Move X0, X19
	475 Call DefaultControls.SetDefaultColorTransitionValues, X0
	476 Move X0, X20
	477 Move X20, [X31+96]
	478 Move X19, [X31+104]
	479 Move X22, [X31+80]
	480 Move X21, [X31+88]
	481 Move X24, [X31+64]
	482 Move X23, [X31+72]
	483 Move X26, [X31+48]
	484 Move X25, [X31+56]
	485 Move X28, [X31+32]
	486 Move X27, [X31+40]
	487 Move X29, [X31+16]
	488 Move X30, [X31+24]
	489 Move D9, [X31+112]
	490 Move D8, [X31+120]
	491 Return X0
	492 Call 0x1C17F20
	493 Call 0x1C17F28
	494 Call 0x1C17F44
	495 Move X1, X31
	496 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateScrollbar(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD558C BL 0x1C16F20
	0x03CD5590 BL 0x1C16F28
	0x03CD5594 BL 0x1C16F44
	0x03CD5598 MOV X1, X31
	0x03CD559C BL 0x1C16DEC
	0x03CD55A0 SUB X31, X31, 0xF0
	0x03CD55A4 STP D9, D8, [X31 + 0x80]
	0x03CD55A8 STP X29, X30, [X31 + 0x90]
	0x03CD55AC STP X28, X27, [X31 + 0xA0]
	0x03CD55B0 STP X26, X25, [X31 + 0xB0]
	0x03CD55B4 STP X24, X23, [X31 + 0xC0]
	0x03CD55B8 STP X22, X21, [X31 + 0xD0]
	0x03CD55BC STP X20, X19, [X31 + 0xE0]
	0x03CD55C0 ADRP X19, 0x712000
	0x03CD55C4 ADRP X26, 0x48D000
	0x03CD55C8 LDRB W8, [X19 + 0x464]
	0x03CD55CC LDR X26, [X26 + 0x148]
	0x03CD55D0 MOV X21, X0
	0x03CD55D4 TBNZ X8, 0x0, 0x3CD5778
	0x03CD55D8 ADRP X0, 0x48D000
	0x03CD55DC LDR X0, [X0 + 0x148]
	0x03CD55E0 BL 0x1C16CF4
	0x03CD55E4 ADRP X0, 0x48D000
	0x03CD55E8 LDR X0, [X0 + 0x210]
	0x03CD55EC BL 0x1C16CF4
	0x03CD55F0 ADRP X0, 0x48D000
	0x03CD55F4 LDR X0, [X0 + 0x218]
	0x03CD55F8 BL 0x1C16CF4
	0x03CD55FC ADRP X0, 0x474000
	0x03CD5600 LDR X0, [X0 + 0x6D8]
	0x03CD5604 BL 0x1C16CF4
	0x03CD5608 ADRP X0, 0x48D000
	0x03CD560C LDR X0, [X0 + 0x220]
	0x03CD5610 BL 0x1C16CF4
	0x03CD5614 ADRP X0, 0x47E000
	0x03CD5618 LDR X0, [X0 + 0xB40]
	0x03CD561C BL 0x1C16CF4
	0x03CD5620 ADRP X0, 0x48D000
	0x03CD5624 LDR X0, [X0 + 0x228]
	0x03CD5628 BL 0x1C16CF4
	0x03CD562C ADRP X0, 0x483000
	0x03CD5630 LDR X0, [X0 + 0x990]
	0x03CD5634 BL 0x1C16CF4
	0x03CD5638 ADRP X0, 0x47E000
	0x03CD563C LDR X0, [X0 + 0xCC8]
	0x03CD5640 BL 0x1C16CF4
	0x03CD5644 ADRP X0, 0x48D000
	0x03CD5648 LDR X0, [X0 + 0x1E0]
	0x03CD564C BL 0x1C16CF4
	0x03CD5650 ADRP X0, 0x474000
	0x03CD5654 LDR X0, [X0 + 0x6E0]
	0x03CD5658 BL 0x1C16CF4
	0x03CD565C ADRP X0, 0x445000
	0x03CD5660 LDR X0, [X0 + 0xCF8]
	0x03CD5664 BL 0x1C16CF4
	0x03CD5668 ADRP X0, 0x48D000
	0x03CD566C LDR X0, [X0 + 0x230]
	0x03CD5670 BL 0x1C16CF4
	0x03CD5674 ADRP X0, 0x445000
	0x03CD5678 LDR X0, [X0 + 0xCE0]
	0x03CD567C BL 0x1C16CF4
	0x03CD5680 ADRP X0, 0x484000
	0x03CD5684 LDR X0, [X0 + 0xA48]
	0x03CD5688 BL 0x1C16CF4
	0x03CD568C ADRP X0, 0x48D000
	0x03CD5690 LDR X0, [X0 + 0x238]
	0x03CD5694 BL 0x1C16CF4
	0x03CD5698 ADRP X0, 0x48D000
	0x03CD569C LDR X0, [X0 + 0x178]
	0x03CD56A0 BL 0x1C16CF4
	0x03CD56A4 ADRP X0, 0x48D000
	0x03CD56A8 LDR X0, [X0 + 0x1E8]
	0x03CD56AC BL 0x1C16CF4
	0x03CD56B0 ADRP X0, 0x426000
	0x03CD56B4 LDR X0, [X0 + 0xC60]
	0x03CD56B8 BL 0x1C16CF4
	0x03CD56BC ADRP X0, 0x41E000
	0x03CD56C0 LDR X0, [X0 + 0x6C0]
	0x03CD56C4 BL 0x1C16CF4
	0x03CD56C8 ADRP X0, 0x48D000
	0x03CD56CC LDR X0, [X0 + 0x240]
	0x03CD56D0 BL 0x1C16CF4
	0x03CD56D4 ADRP X0, 0x483000
	0x03CD56D8 LDR X0, [X0 + 0x9A8]
	0x03CD56DC BL 0x1C16CF4
	0x03CD56E0 ADRP X0, 0x483000
	0x03CD56E4 LDR X0, [X0 + 0x9B0]
	0x03CD56E8 BL 0x1C16CF4
	0x03CD56EC ADRP X0, 0x483000
	0x03CD56F0 LDR X0, [X0 + 0x9B8]
	0x03CD56F4 BL 0x1C16CF4
	0x03CD56F8 ADRP X0, 0x483000
	0x03CD56FC LDR X0, [X0 + 0x9C0]
	0x03CD5700 BL 0x1C16CF4
	0x03CD5704 ADRP X0, 0x483000
	0x03CD5708 LDR X0, [X0 + 0x9C8]
	0x03CD570C BL 0x1C16CF4
	0x03CD5710 ADRP X0, 0x483000
	0x03CD5714 LDR X0, [X0 + 0x9D0]
	0x03CD5718 BL 0x1C16CF4
	0x03CD571C ADRP X0, 0x483000
	0x03CD5720 LDR X0, [X0 + 0x9D8]
	0x03CD5724 BL 0x1C16CF4
	0x03CD5728 ADRP X0, 0x483000
	0x03CD572C LDR X0, [X0 + 0x9E0]
	0x03CD5730 BL 0x1C16CF4
	0x03CD5734 ADRP X0, 0x483000
	0x03CD5738 LDR X0, [X0 + 0x9E8]
	0x03CD573C BL 0x1C16CF4
	0x03CD5740 ADRP X0, 0x483000
	0x03CD5744 LDR X0, [X0 + 0x9F0]
	0x03CD5748 BL 0x1C16CF4
	0x03CD574C ADRP X0, 0x483000
	0x03CD5750 LDR X0, [X0 + 0x9F8]
	0x03CD5754 BL 0x1C16CF4
	0x03CD5758 ADRP X0, 0x483000
	0x03CD575C LDR X0, [X0 + 0xA00]
	0x03CD5760 BL 0x1C16CF4
	0x03CD5764 ADRP X0, 0x483000
	0x03CD5768 LDR X0, [X0 + 0x8F8]
	0x03CD576C BL 0x1C16CF4
	0x03CD5770 MOVZ W8, 0x1
	0x03CD5774 STRB W8, [X19 + 0x464]
	0x03CD5778 LDR X0, [X26]
	0x03CD577C ADRP X24, 0x426000
	0x03CD5780 ADRP X25, 0x474000
	0x03CD5784 ADRP X19, 0x41E000
	0x03CD5788 LDR W8, [X0 + 0xE0]
	0x03CD578C LDR X24, [X24 + 0xC60]
	0x03CD5790 LDR X25, [X25 + 0x6E0]
	0x03CD5794 LDR X19, [X19 + 0x6C0]
	0x03CD5798 CBNZ W8, 0x3CD57A4
	0x03CD579C BL 0x1C16DFC
	0x03CD57A0 LDR X0, [X26]
	0x03CD57A4 LDR X8, [X0 + 0xB8]
	0x03CD57A8 LDR X0, [X24]
	0x03CD57AC MOVZ W1, 0x2
	0x03CD57B0 LDP S8, S9, [X8 + 0x8]
	0x03CD57B4 BL 0x1C16D6C
	0x03CD57B8 LDR X8, [X19]
	0x03CD57BC LDR X20, [X25]
	0x03CD57C0 MOV X19, X0
	0x03CD57C4 LDR W9, [X8 + 0xE0]
	0x03CD57C8 CBNZ W9, 0x3CD57D4
	0x03CD57CC MOV X0, X8
	0x03CD57D0 BL 0x1C16DFC
	0x03CD57D4 MOV X0, X20
	0x03CD57D8 MOV X1, X31
	0x03CD57DC BL 0x338C698
	0x03CD57E0 CBZ X19, 0x3CD67B8
	0x03CD57E4 MOV X20, X0
	0x03CD57E8 CBZ X0, 0x3CD5800
	0x03CD57EC LDR X8, [X19]
	0x03CD57F0 MOV X0, X20
	0x03CD57F4 LDR X1, [X8 + 0x40]
	0x03CD57F8 BL 0x1C16E00
	0x03CD57FC CBZ X0, 0x3CD67C0
	0x03CD5800 LDR W8, [X19 + 0x18]
	0x03CD5804 CBZ W8, 0x3CD67BC
	0x03CD5808 ADRP X8, 0x48D000
	0x03CD580C LDR X8, [X8 + 0x210]
	0x03CD5810 STR X20, [X19 + 0x20]
	0x03CD5814 MOV X1, X31
	0x03CD5818 LDR X0, [X8]
	0x03CD581C BL 0x338C698
	0x03CD5820 MOV X20, X0
	0x03CD5824 CBZ X0, 0x3CD583C
	0x03CD5828 LDR X8, [X19]
	0x03CD582C MOV X0, X20
	0x03CD5830 LDR X1, [X8 + 0x40]
	0x03CD5834 BL 0x1C16E00
	0x03CD5838 CBZ X0, 0x3CD67C0
	0x03CD583C LDR W8, [X19 + 0x18]
	0x03CD5840 CMP W8, 0x1
	0x03CD5844 B.LS 0x3CD67BC
	0x03CD5848 ADRP X8, 0x48D000
	0x03CD584C LDR X8, [X8 + 0x240]
	0x03CD5850 STR X20, [X19 + 0x28]
	0x03CD5854 ADRP X28, 0x48D000
	0x03CD5858 MOV V0.16B, V8.16B
	0x03CD585C LDR X0, [X8]
	0x03CD5860 LDR X28, [X28 + 0x178]
	0x03CD5864 MOV V1.16B, V9.16B
	0x03CD5868 MOV X1, X19
	0x03CD586C BL 0x3CD2B34
	0x03CD5870 LDR X8, [X24]
	0x03CD5874 MOV X29, X0
	0x03CD5878 MOVZ W1, 0x1
	0x03CD587C MOV X0, X8
	0x03CD5880 BL 0x1C16D6C
	0x03CD5884 LDR X8, [X28]
	0x03CD5888 MOV X20, X0
	0x03CD588C MOV X1, X31
	0x03CD5890 MOV X0, X8
	0x03CD5894 BL 0x338C698
	0x03CD5898 CBZ X20, 0x3CD67B8
	0x03CD589C MOV X22, X0
	0x03CD58A0 CBZ X0, 0x3CD58B8
	0x03CD58A4 LDR X8, [X20]
	0x03CD58A8 MOV X0, X22
	0x03CD58AC LDR X1, [X8 + 0x40]
	0x03CD58B0 BL 0x1C16E00
	0x03CD58B4 CBZ X0, 0x3CD67C0
	0x03CD58B8 LDR W8, [X20 + 0x18]
	0x03CD58BC CBZ W8, 0x3CD67BC
	0x03CD58C0 ADRP X8, 0x483000
	0x03CD58C4 LDR X8, [X8 + 0x9C0]
	0x03CD58C8 STR X22, [X20 + 0x20]
	0x03CD58CC MOV X1, X29
	0x03CD58D0 MOV X2, X20
	0x03CD58D4 LDR X0, [X8]
	0x03CD58D8 BL 0x3CD2C94
	0x03CD58DC LDR X8, [X24]
	0x03CD58E0 MOV X19, X0
	0x03CD58E4 MOVZ W1, 0x1
	0x03CD58E8 MOV X0, X8
	0x03CD58EC BL 0x1C16D6C
	0x03CD58F0 LDR X8, [X25]
	0x03CD58F4 MOV X20, X0
	0x03CD58F8 MOV X1, X31
	0x03CD58FC MOV X0, X8
	0x03CD5900 BL 0x338C698
	0x03CD5904 CBZ X20, 0x3CD67B8
	0x03CD5908 MOV X22, X0
	0x03CD590C CBZ X0, 0x3CD5924
	0x03CD5910 LDR X8, [X20]
	0x03CD5914 MOV X0, X22
	0x03CD5918 LDR X1, [X8 + 0x40]
	0x03CD591C BL 0x1C16E00
	0x03CD5920 CBZ X0, 0x3CD67C0
	0x03CD5924 LDR W8, [X20 + 0x18]
	0x03CD5928 CBZ W8, 0x3CD67BC
	0x03CD592C ADRP X8, 0x483000
	0x03CD5930 LDR X8, [X8 + 0x9C8]
	0x03CD5934 STR X22, [X20 + 0x20]
	0x03CD5938 MOV X1, X29
	0x03CD593C MOV X2, X20
	0x03CD5940 LDR X0, [X8]
	0x03CD5944 BL 0x3CD2C94
	0x03CD5948 LDR X8, [X24]
	0x03CD594C MOV X27, X0
	0x03CD5950 MOVZ W1, 0x2
	0x03CD5954 MOV X0, X8
	0x03CD5958 BL 0x1C16D6C
	0x03CD595C LDR X8, [X25]
	0x03CD5960 MOV X20, X0
	0x03CD5964 MOV X1, X31
	0x03CD5968 MOV X0, X8
	0x03CD596C BL 0x338C698
	0x03CD5970 CBZ X20, 0x3CD67B8
	0x03CD5974 MOV X22, X0
	0x03CD5978 CBZ X0, 0x3CD5990
	0x03CD597C LDR X8, [X20]
	0x03CD5980 MOV X0, X22
	0x03CD5984 LDR X1, [X8 + 0x40]
	0x03CD5988 BL 0x1C16E00
	0x03CD598C CBZ X0, 0x3CD67C0
	0x03CD5990 LDR W8, [X20 + 0x18]
	0x03CD5994 CBZ W8, 0x3CD67BC
	0x03CD5998 ADRP X8, 0x48D000
	0x03CD599C LDR X8, [X8 + 0x238]
	0x03CD59A0 STR X22, [X20 + 0x20]
	0x03CD59A4 MOV X1, X31
	0x03CD59A8 LDR X0, [X8]
	0x03CD59AC BL 0x338C698
	0x03CD59B0 MOV X22, X0
	0x03CD59B4 CBZ X0, 0x3CD59CC
	0x03CD59B8 LDR X8, [X20]
	0x03CD59BC MOV X0, X22
	0x03CD59C0 LDR X1, [X8 + 0x40]
	0x03CD59C4 BL 0x1C16E00
	0x03CD59C8 CBZ X0, 0x3CD67C0
	0x03CD59CC LDR W8, [X20 + 0x18]
	0x03CD59D0 CMP W8, 0x1
	0x03CD59D4 B.LS 0x3CD67BC
	0x03CD59D8 ADRP X8, 0x483000
	0x03CD59DC LDR X8, [X8 + 0x9F8]
	0x03CD59E0 STR X22, [X20 + 0x28]
	0x03CD59E4 MOV X1, X29
	0x03CD59E8 MOV X2, X20
	0x03CD59EC LDR X0, [X8]
	0x03CD59F0 BL 0x3CD2C94
	0x03CD59F4 LDR X8, [X24]
	0x03CD59F8 MOV X20, X0
	0x03CD59FC MOVZ W1, 0x2
	0x03CD5A00 MOV X0, X8
	0x03CD5A04 BL 0x1C16D6C

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x713000
	012 Move X24, 0x48E000
	013 Move W8, [X20+1121]
	014 Move X24, [X24+328]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {58}
	020 Move X0, 0x48E000
	021 Move X0, [X0+328]
	022 Call 0x1C17CF4
	023 Move X0, 0x475000
	024 Move X0, [X0+1752]
	025 Call 0x1C17CF4
	026 Move X0, 0x47F000
	027 Move X0, [X0+2880]
	028 Call 0x1C17CF4
	029 Move X0, 0x484000
	030 Move X0, [X0+2448]
	031 Call 0x1C17CF4
	032 Move X0, 0x475000
	033 Move X0, [X0+1760]
	034 Call 0x1C17CF4
	035 Move X0, 0x485000
	036 Move X0, [X0+2632]
	037 Call 0x1C17CF4
	038 Move X0, 0x48E000
	039 Move X0, [X0+472]
	040 Call 0x1C17CF4
	041 Move X0, 0x427000
	042 Move X0, [X0+3168]
	043 Call 0x1C17CF4
	044 Move X0, 0x41F000
	045 Move X0, [X0+1728]
	046 Call 0x1C17CF4
	047 Move X0, 0x484000
	048 Move X0, [X0+2288]
	049 Call 0x1C17CF4
	050 Move X0, 0x484000
	051 Move X0, [X0+2296]
	052 Call 0x1C17CF4
	053 Move X0, 0x484000
	054 Move X0, [X0+2304]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+1121], W8
	058 Move X0, [X24]
	059 Move X23, 0x427000
	060 Move X25, 0x475000
	061 Move X20, 0x41F000
	062 Move W8, [X0+224]
	063 Move X23, [X23+3168]
	064 Move X25, [X25+1760]
	065 Move X20, [X20+1728]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X24]
	070 Move X8, [X0+184]
	071 Move X0, [X23]
	072 Move W1, 2
	073 Move S8, [X8+16]
	074 Move S9, [X8+20]
	075 Call 0x1C17D6C
	076 Move X8, [X20]
	077 Move X21, [X25]
	078 Move X20, X0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Call Type.GetTypeFromHandle, X0
	087 Compare X20, 0
	088 JumpIfEqual {328}
	089 Move X21, X0
	090 Compare X0, 0
	091 JumpIfEqual {98}
	092 Move X8, [X20]
	093 Move X0, X21
	094 Move X1, [X8+64]
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {330}
	098 Move W8, [X20+24]
	099 Compare W8, 0
	100 JumpIfEqual {329}
	101 Move X8, 0x48E000
	102 Move X8, [X8+472]
	103 Move [X20+32], X21
	104 Move X1, X31
	105 Move X0, [X8]
	106 Call Type.GetTypeFromHandle, X0
	107 Move X21, X0
	108 Compare X0, 0
	109 JumpIfEqual {116}
	110 Move X8, [X20]
	111 Move X0, X21
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {330}
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, 0x484000
	119 Move X8, [X8+2296]
	120 Move [X20+40], X21
	121 Move X21, 0x485000
	122 Move V0, V8
	123 Move X0, [X8]
	124 Move X21, [X21+2632]
	125 Move V1, V9
	126 Move X1, X20
	127 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	128 Move X8, [X23]
	129 Move X20, X0
	130 Move W1, 1
	131 Move X0, X8
	132 Call 0x1C17D6C
	133 Move X8, [X21]
	134 Move X21, X0
	135 Move X1, X31
	136 Move X0, X8
	137 Call Type.GetTypeFromHandle, X0
	138 Compare X21, 0
	139 JumpIfEqual {328}
	140 Move X22, X0
	141 Compare X0, 0
	142 JumpIfEqual {149}
	143 Move X8, [X21]
	144 Move X0, X22
	145 Move X1, [X8+64]
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {330}
	149 Move W8, [X21+24]
	150 Compare W8, 0
	151 JumpIfEqual {329}
	152 Move X8, 0x484000
	153 Move X8, [X8+2304]
	154 Move [X21+32], X22
	155 Move X1, X20
	156 Move X2, X21
	157 Move X0, [X8]
	158 Call DefaultControls.CreateUIObject, X0, X1, X2
	159 Move X8, [X23]
	160 Move X23, X0
	161 Move W1, 1
	162 Move X0, X8
	163 Call 0x1C17D6C
	164 Move X8, [X25]
	165 Move X21, X0
	166 Move X1, X31
	167 Move X0, X8
	168 Call Type.GetTypeFromHandle, X0
	169 Compare X21, 0
	170 JumpIfEqual {328}
	171 Move X22, X0
	172 Compare X0, 0
	173 JumpIfEqual {180}
	174 Move X8, [X21]
	175 Move X0, X22
	176 Move X1, [X8+64]
	177 Call 0x1C17E00
	178 Compare X0, 0
	179 JumpIfEqual {330}
	180 Move W8, [X21+24]
	181 Compare W8, 0
	182 JumpIfEqual {329}
	183 Move X8, 0x484000
	184 Move X8, [X8+2288]
	185 Move [X21+32], X22
	186 Move X1, X23
	187 Move X2, X21
	188 Move X0, [X8]
	189 Call DefaultControls.CreateUIObject, X0, X1, X2
	190 Compare X20, 0
	191 JumpIfEqual {328}
	192 Move X25, 0x475000
	193 Move X25, [X25+1752]
	194 Move X21, X0
	195 Move X0, X20
	196 Move X1, [X25]
	197 Call 0x21E62E4, X0
	198 Compare X0, 0
	199 JumpIfEqual {328}
	200 Move X1, [X19+8]
	201 Move X22, X0
	202 Call Image.set_sprite, X0, X1
	203 Move W1, 1
	204 Move X0, X22
	205 Call Image.set_type, X0, X1
	206 Move X8, [X24]
	207 Move X9, [X22]
	208 Move X0, X22
	209 Move X8, [X8+184]
	210 Move X10, [X9+680]
	211 Move X1, [X9+688]
	212 Move S0, [X8+32]
	213 Move S1, [X8+36]
	214 Move S2, [X8+40]
	215 Move S3, [X8+44]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Compare X21, 0
	218 JumpIfEqual {328}
	219 Move X1, [X25]
	220 Move X0, X21
	221 Call 0x21E62E4, X0
	222 Compare X0, 0
	223 JumpIfEqual {328}
	224 Move X1, [X19]
	225 Move X22, X0
	226 Call Image.set_sprite, X0, X1
	227 Move W1, 1
	228 Move X0, X22
	229 Call Image.set_type, X0, X1
	230 Move X8, [X24]
	231 Move X9, [X22]
	232 Move X0, X22
	233 Move X8, [X8+184]
	234 Move X10, [X9+680]
	235 Move X1, [X9+688]
	236 Move S0, [X8+32]
	237 Move S1, [X8+36]
	238 Move S2, [X8+40]
	239 Move S3, [X8+44]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X23, 0
	242 JumpIfEqual {328}
	243 Move X24, 0x47F000
	244 Move X24, [X24+2880]
	245 Move X0, X23
	246 Move X1, [X24]
	247 Call 0x21E62E4, X0
	248 Compare X0, 0
	249 JumpIfEqual {328}
	250 Move S0, -20
	251 Move S1, -20
	252 Move X1, X31
	253 Move X19, X0
	254 Call RectTransform.set_sizeDelta, X0, X1
	255 Move X23, 0x705000
	256 Move W8, [X23+1935]
	257 Compare W8, 0
	258 JumpIfNotEqual {264}
	259 Move X0, 0x427000
	260 Move X0, [X0+3848]
	261 Call 0x1C17CF4
	262 Move W8, 1
	263 Move [X23+1935], W8
	264 Move X23, 0x427000
	265 Move X23, [X23+3848]
	266 Move X0, X19
	267 Move X1, X31
	268 Move X8, [X23]
	269 Move X8, [X8+184]
	270 Move S0, [X8]
	271 Move S1, [X8+4]
	272 Call RectTransform.set_anchorMin, X0, X1
	273 Move X25, 0x70D000
	274 Move W8, [X25+2632]
	275 Compare W8, 0
	276 JumpIfNotEqual {282}
	277 Move X0, 0x427000
	278 Move X0, [X0+3848]
	279 Call 0x1C17CF4
	280 Move W8, 1
	281 Move [X25+2632], W8
	282 Move X8, [X23]
	283 Move X0, X19
	284 Move X1, X31
	285 Move X8, [X8+184]
	286 Move S0, [X8+8]
	287 Move S1, [X8+12]
	288 Call RectTransform.set_anchorMax, X0, X1
	289 Move X1, [X24]
	290 Move X0, X21
	291 Call 0x21E62E4, X0
	292 Compare X0, 0
	293 JumpIfEqual {328}
	294 Move X21, 0x484000
	295 Move X21, [X21+2448]
	296 Move S0, 20
	297 Move S1, 20
	298 Move X1, X31
	299 Move X19, X0
	300 Call RectTransform.set_sizeDelta, X0, X1
	301 Move X1, [X21]
	302 Move X0, X20
	303 Call 0x21E62E4, X0
	304 Compare X0, 0
	305 JumpIfEqual {328}
	306 Move X1, X19
	307 Move X2, X31
	308 Move X21, X0
	309 Call Scrollbar.set_handleRect, X0, X1
	310 Move X0, X21
	311 Move X1, X22
	312 Move X2, X31
	313 Call Selectable.set_targetGraphic, X0, X1
	314 Move X0, X21
	315 Call DefaultControls.SetDefaultColorTransitionValues, X0
	316 Move X0, X20
	317 Move X20, [X31+64]
	318 Move X19, [X31+72]
	319 Move X22, [X31+48]
	320 Move X21, [X31+56]
	321 Move X24, [X31+32]
	322 Move X23, [X31+40]
	323 Move X30, [X31+16]
	324 Move X25, [X31+24]
	325 Move D9, [X31+80]
	326 Move D8, [X31+88]
	327 Return X0
	328 Call 0x1C17F20
	329 Call 0x1C17F28
	330 Call 0x1C17F44
	331 Move X1, X31
	332 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateToggle(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD5A08 LDR X8, [X25]
	0x03CD5A0C MOV X22, X0
	0x03CD5A10 MOV X1, X31
	0x03CD5A14 MOV X0, X8
	0x03CD5A18 BL 0x338C698
	0x03CD5A1C CBZ X22, 0x3CD67B8
	0x03CD5A20 MOV X23, X0
	0x03CD5A24 CBZ X0, 0x3CD5A3C
	0x03CD5A28 LDR X8, [X22]
	0x03CD5A2C MOV X0, X23
	0x03CD5A30 LDR X1, [X8 + 0x40]
	0x03CD5A34 BL 0x1C16E00
	0x03CD5A38 CBZ X0, 0x3CD67C0
	0x03CD5A3C LDR W8, [X22 + 0x18]
	0x03CD5A40 CBZ W8, 0x3CD67BC
	0x03CD5A44 ADRP X8, 0x48D000
	0x03CD5A48 LDR X8, [X8 + 0x230]
	0x03CD5A4C STR X23, [X22 + 0x20]
	0x03CD5A50 MOV X1, X31
	0x03CD5A54 LDR X0, [X8]
	0x03CD5A58 BL 0x338C698
	0x03CD5A5C MOV X23, X0
	0x03CD5A60 CBZ X0, 0x3CD5A78
	0x03CD5A64 LDR X8, [X22]
	0x03CD5A68 MOV X0, X23
	0x03CD5A6C LDR X1, [X8 + 0x40]
	0x03CD5A70 BL 0x1C16E00
	0x03CD5A74 CBZ X0, 0x3CD67C0
	0x03CD5A78 LDR W8, [X22 + 0x18]
	0x03CD5A7C STR X19, [X31 + 0x8]
	0x03CD5A80 CMP W8, 0x1
	0x03CD5A84 B.LS 0x3CD67BC
	0x03CD5A88 ADRP X8, 0x483000
	0x03CD5A8C LDR X8, [X8 + 0x9D0]
	0x03CD5A90 STR X23, [X22 + 0x28]
	0x03CD5A94 ADRP X19, 0x484000
	0x03CD5A98 MOV X1, X20
	0x03CD5A9C LDR X0, [X8]
	0x03CD5AA0 LDR X19, [X19 + 0xA48]
	0x03CD5AA4 MOV X2, X22
	0x03CD5AA8 BL 0x3CD2C94
	0x03CD5AAC LDR X8, [X24]
	0x03CD5AB0 STR X0, [X31 + 0x38]
	0x03CD5AB4 MOVZ W1, 0x1
	0x03CD5AB8 MOV X0, X8
	0x03CD5ABC BL 0x1C16D6C
	0x03CD5AC0 LDR X8, [X19]
	0x03CD5AC4 MOV X22, X0
	0x03CD5AC8 MOV X1, X31
	0x03CD5ACC MOV X0, X8
	0x03CD5AD0 BL 0x338C698
	0x03CD5AD4 CBZ X22, 0x3CD67B8
	0x03CD5AD8 MOV X23, X0
	0x03CD5ADC CBZ X0, 0x3CD5AF4
	0x03CD5AE0 LDR X8, [X22]
	0x03CD5AE4 MOV X0, X23
	0x03CD5AE8 LDR X1, [X8 + 0x40]
	0x03CD5AEC BL 0x1C16E00
	0x03CD5AF0 CBZ X0, 0x3CD67C0
	0x03CD5AF4 LDR W8, [X22 + 0x18]
	0x03CD5AF8 CBZ W8, 0x3CD67BC
	0x03CD5AFC ADRP X8, 0x483000
	0x03CD5B00 LDR X8, [X8 + 0x9F0]
	0x03CD5B04 STR X23, [X22 + 0x20]
	0x03CD5B08 ADRP X19, 0x48D000
	0x03CD5B0C MOV X2, X22
	0x03CD5B10 LDR X0, [X8]
	0x03CD5B14 LDR X19, [X19 + 0x1E8]
	0x03CD5B18 LDR X1, [X31 + 0x38]
	0x03CD5B1C BL 0x3CD2C94
	0x03CD5B20 LDR X8, [X24]
	0x03CD5B24 STR X0, [X31 + 0x30]
	0x03CD5B28 MOVZ W1, 0x1
	0x03CD5B2C MOV X0, X8
	0x03CD5B30 BL 0x1C16D6C
	0x03CD5B34 LDR X8, [X19]
	0x03CD5B38 MOV X22, X0
	0x03CD5B3C MOV X1, X31
	0x03CD5B40 MOV X0, X8
	0x03CD5B44 BL 0x338C698
	0x03CD5B48 CBZ X22, 0x3CD67B8
	0x03CD5B4C MOV X23, X0
	0x03CD5B50 CBZ X0, 0x3CD5B68
	0x03CD5B54 LDR X8, [X22]
	0x03CD5B58 MOV X0, X23
	0x03CD5B5C LDR X1, [X8 + 0x40]
	0x03CD5B60 BL 0x1C16E00
	0x03CD5B64 CBZ X0, 0x3CD67C0
	0x03CD5B68 LDR W8, [X22 + 0x18]
	0x03CD5B6C CBZ W8, 0x3CD67BC
	0x03CD5B70 ADRP X8, 0x483000
	0x03CD5B74 LDR X8, [X8 + 0x9E8]
	0x03CD5B78 STR X23, [X22 + 0x20]
	0x03CD5B7C LDR X1, [X31 + 0x30]
	0x03CD5B80 MOV X2, X22
	0x03CD5B84 LDR X0, [X8]
	0x03CD5B88 BL 0x3CD2C94
	0x03CD5B8C LDR X8, [X24]
	0x03CD5B90 MOV X19, X0
	0x03CD5B94 MOVZ W1, 0x1
	0x03CD5B98 MOV X0, X8
	0x03CD5B9C BL 0x1C16D6C
	0x03CD5BA0 LDR X8, [X25]
	0x03CD5BA4 MOV X22, X0
	0x03CD5BA8 MOV X1, X31
	0x03CD5BAC MOV X0, X8
	0x03CD5BB0 BL 0x338C698
	0x03CD5BB4 CBZ X22, 0x3CD67B8
	0x03CD5BB8 MOV X23, X0
	0x03CD5BBC CBZ X0, 0x3CD5BD4
	0x03CD5BC0 LDR X8, [X22]
	0x03CD5BC4 MOV X0, X23
	0x03CD5BC8 LDR X1, [X8 + 0x40]
	0x03CD5BCC BL 0x1C16E00
	0x03CD5BD0 CBZ X0, 0x3CD67C0
	0x03CD5BD4 LDR W8, [X22 + 0x18]
	0x03CD5BD8 CBZ W8, 0x3CD67BC
	0x03CD5BDC ADRP X8, 0x483000
	0x03CD5BE0 LDR X8, [X8 + 0xA00]
	0x03CD5BE4 STR X23, [X22 + 0x20]
	0x03CD5BE8 MOV X1, X19
	0x03CD5BEC MOV X2, X22
	0x03CD5BF0 LDR X0, [X8]
	0x03CD5BF4 BL 0x3CD2C94
	0x03CD5BF8 LDR X8, [X24]
	0x03CD5BFC STR X0, [X31 + 0x20]
	0x03CD5C00 MOVZ W1, 0x1
	0x03CD5C04 MOV X0, X8
	0x03CD5C08 BL 0x1C16D6C
	0x03CD5C0C LDR X8, [X25]
	0x03CD5C10 MOV X22, X0
	0x03CD5C14 MOV X1, X31
	0x03CD5C18 MOV X0, X8
	0x03CD5C1C BL 0x338C698
	0x03CD5C20 CBZ X22, 0x3CD67B8
	0x03CD5C24 MOV X23, X0
	0x03CD5C28 CBZ X0, 0x3CD5C40
	0x03CD5C2C LDR X8, [X22]
	0x03CD5C30 MOV X0, X23
	0x03CD5C34 LDR X1, [X8 + 0x40]
	0x03CD5C38 BL 0x1C16E00
	0x03CD5C3C CBZ X0, 0x3CD67C0
	0x03CD5C40 LDR W8, [X22 + 0x18]
	0x03CD5C44 CBZ W8, 0x3CD67BC
	0x03CD5C48 ADRP X8, 0x483000
	0x03CD5C4C LDR X8, [X8 + 0x9A8]
	0x03CD5C50 STR X23, [X22 + 0x20]
	0x03CD5C54 MOV X1, X19
	0x03CD5C58 MOV X2, X22
	0x03CD5C5C LDR X0, [X8]
	0x03CD5C60 BL 0x3CD2C94
	0x03CD5C64 LDR X8, [X24]
	0x03CD5C68 STR X0, [X31 + 0x10]
	0x03CD5C6C MOVZ W1, 0x1
	0x03CD5C70 MOV X0, X8
	0x03CD5C74 BL 0x1C16D6C
	0x03CD5C78 LDR X8, [X28]
	0x03CD5C7C MOV X22, X0
	0x03CD5C80 MOV X1, X31
	0x03CD5C84 MOV X0, X8
	0x03CD5C88 BL 0x338C698
	0x03CD5C8C CBZ X22, 0x3CD67B8
	0x03CD5C90 MOV X23, X0
	0x03CD5C94 CBZ X0, 0x3CD5CAC
	0x03CD5C98 LDR X8, [X22]
	0x03CD5C9C MOV X0, X23
	0x03CD5CA0 LDR X1, [X8 + 0x40]
	0x03CD5CA4 BL 0x1C16E00
	0x03CD5CA8 CBZ X0, 0x3CD67C0
	0x03CD5CAC LDR W8, [X22 + 0x18]
	0x03CD5CB0 CBZ W8, 0x3CD67BC
	0x03CD5CB4 ADRP X8, 0x483000
	0x03CD5CB8 LDR X8, [X8 + 0x9E0]
	0x03CD5CBC STR X23, [X22 + 0x20]
	0x03CD5CC0 MOV X1, X19
	0x03CD5CC4 MOV X2, X22
	0x03CD5CC8 LDR X0, [X8]
	0x03CD5CCC STR X19, [X31 + 0x18]
	0x03CD5CD0 BL 0x3CD2C94
	0x03CD5CD4 LDR X8, [X21 + 0x30]
	0x03CD5CD8 LDP V2, V0, [X21 + 0x10]
	0x03CD5CDC LDR V1, [X21]
	0x03CD5CE0 MOV X28, X0
	0x03CD5CE4 ADD X0, X31, 0x40
	0x03CD5CE8 STR X8, [X31 + 0x70]
	0x03CD5CEC STP V2, V0, [X31 + 0x50]
	0x03CD5CF0 STR V1, [X31 + 0x4]
	0x03CD5CF4 BL 0x3CD458C
	0x03CD5CF8 CBZ X0, 0x3CD67B8
	0x03CD5CFC ADRP X8, 0x483000
	0x03CD5D00 LDR X8, [X8 + 0x8F8]
	0x03CD5D04 ADRP X19, 0x483000
	0x03CD5D08 MOV X2, X31
	0x03CD5D0C MOV X22, X0
	0x03CD5D10 LDR X1, [X8]
	0x03CD5D14 LDR X19, [X19 + 0x990]
	0x03CD5D18 BL 0x3C38A84
	0x03CD5D1C MOV X0, X22
	0x03CD5D20 MOV X1, X20
	0x03CD5D24 BL 0x3CD2DBC
	0x03CD5D28 LDR X1, [X19]
	0x03CD5D2C MOV X0, X22
	0x03CD5D30 BL 0x21E52E4
	0x03CD5D34 CBZ X0, 0x3CD67B8
	0x03CD5D38 ADRP X19, 0x47E000
	0x03CD5D3C LDR X19, [X19 + 0xB40]
	0x03CD5D40 MOVZ W1, 0x2
	0x03CD5D44 MOVZ W2, 0x1
	0x03CD5D48 MOV X3, X31
	0x03CD5D4C MOV X23, X0
	0x03CD5D50 MOVZ W24, 0x1
	0x03CD5D54 BL 0x3E3CDF0
	0x03CD5D58 LDR X1, [X19]
	0x03CD5D5C MOV X0, X22
	0x03CD5D60 BL 0x21E52E4
	0x03CD5D64 ADRP X25, 0x704000
	0x03CD5D68 LDRB W8, [X25 + 0x78E]
	0x03CD5D6C MOV X22, X0
	0x03CD5D70 CBNZ W8, 0x3CD5D84
	0x03CD5D74 ADRP X0, 0x426000
	0x03CD5D78 LDR X0, [X0 + 0xF08]
	0x03CD5D7C BL 0x1C16CF4
	0x03CD5D80 STRB W24, [X25 + 0x78E]
	0x03CD5D84 CBZ X22, 0x3CD67B8
	0x03CD5D88 ADRP X19, 0x426000
	0x03CD5D8C LDR X19, [X19 + 0xF08]
	0x03CD5D90 MOV X0, X22
	0x03CD5D94 MOV X1, X31
	0x03CD5D98 LDR X8, [X19]
	0x03CD5D9C LDR X8, [X8 + 0xB8]
	0x03CD5DA0 LDP S0, S1, [X8 + 0x28]
	0x03CD5DA4 BL 0x3C3E648
	0x03CD5DA8 ADRP X24, 0x70C000
	0x03CD5DAC LDRB W8, [X24 + 0xA48]
	0x03CD5DB0 CBNZ W8, 0x3CD5DC8
	0x03CD5DB4 ADRP X0, 0x426000
	0x03CD5DB8 LDR X0, [X0 + 0xF08]
	0x03CD5DBC BL 0x1C16CF4
	0x03CD5DC0 MOVZ W8, 0x1
	0x03CD5DC4 STRB W8, [X24 + 0xA48]
	0x03CD5DC8 LDR X8, [X19]
	0x03CD5DCC MOV X0, X22
	0x03CD5DD0 MOV X1, X31
	0x03CD5DD4 LDR X8, [X8 + 0xB8]
	0x03CD5DD8 LDP S0, S1, [X8 + 0x8]
	0x03CD5DDC BL 0x3C3E764
	0x03CD5DE0 LDRB W8, [X24 + 0xA48]
	0x03CD5DE4 CBNZ W8, 0x3CD5DFC
	0x03CD5DE8 ADRP X0, 0x426000
	0x03CD5DEC LDR X0, [X0 + 0xF08]
	0x03CD5DF0 BL 0x1C16CF4
	0x03CD5DF4 MOVZ W8, 0x1
	0x03CD5DF8 STRB W8, [X24 + 0xA48]
	0x03CD5DFC LDR X8, [X19]
	0x03CD5E00 MOV X0, X22
	0x03CD5E04 MOV X1, X31
	0x03CD5E08 LDR X8, [X8 + 0xB8]
	0x03CD5E0C LDP S0, S1, [X8 + 0x8]
	0x03CD5E10 BL 0x3C3EAB8
	0x03CD5E14 MOV X0, X22
	0x03CD5E18 MOV X1, X31
	0x03CD5E1C BL 0x3C3E90C
	0x03CD5E20 FMOV S1, W31
	0x03CD5E24 MOV X0, X22
	0x03CD5E28 MOV X1, X31
	0x03CD5E2C BL 0x3C3E99C
	0x03CD5E30 CBZ X28, 0x3CD67B8
	0x03CD5E34 ADRP X8, 0x47E000
	0x03CD5E38 LDR X8, [X8 + 0xCC8]
	0x03CD5E3C MOV X0, X28
	0x03CD5E40 LDR X1, [X8]
	0x03CD5E44 BL 0x21E52E4
	0x03CD5E48 MOV X22, X0
	0x03CD5E4C BL 0x3CD2EBC
	0x03CD5E50 CBZ X22, 0x3CD67B8
	0x03CD5E54 MOVZ W1, 0x3
	0x03CD5E58 MOV X0, X22
	0x03CD5E5C MOV X2, X31
	0x03CD5E60 STR X28, [X31]
	0x03CD5E64 BL 0x3E455E8
	0x03CD5E68 LDR X0, [X31 + 0x20]
	0x03CD5E6C CBZ X0, 0x3CD67B8
	0x03CD5E70 ADRP X28, 0x474000
	0x03CD5E74 LDR X28, [X28 + 0x6D8]
	0x03CD5E78 LDR X1, [X28]
	0x03CD5E7C BL 0x21E52E4
	0x03CD5E80 CBZ X0, 0x3CD67B8
	0x03CD5E84 LDR X8, [X0]
	0x03CD5E88 FMOV S3, 1
	0x03CD5E8C MOV X24, X0
	0x03CD5E90 LDR X9, [X8 + 0x2A8]
	0x03CD5E94 LDR X1, [X8 + 0x2B0]
	0x03CD5E98 ADRP X8, 0xFFFFFFFFFCE15000
	0x03CD5E9C LDR V0, [X8 + 0x1DC]
	0x03CD5EA0 MOV V1.16B, V0.16B
	0x03CD5EA4 MOV V2.16B, V0.16B
	0x03CD5EA8 BLR X9
	0x03CD5EAC LDR X0, [X31 + 0x10]
	0x03CD5EB0 CBZ X0, 0x3CD67B8
	0x03CD5EB4 LDR X1, [X28]
	0x03CD5EB8 MOV X19, X26
	0x03CD5EBC BL 0x21E52E4
	0x03CD5EC0 CBZ X0, 0x3CD67B8
	0x03CD5EC4 LDR X1, [X21 + 0x20]
	0x03CD5EC8 MOV X25, X0
	0x03CD5ECC MOV X26, X29
	0x03CD5ED0 BL 0x3CD3398
	0x03CD5ED4 LDR X0, [X31 + 0x18]
	0x03CD5ED8 CBZ X0, 0x3CD67B8
	0x03CD5EDC ADRP X8, 0x48D000
	0x03CD5EE0 LDR X8, [X8 + 0x1E0]
	0x03CD5EE4 LDR X1, [X8]
	0x03CD5EE8 BL 0x21E52E4
	0x03CD5EEC CBZ X0, 0x3CD67B8
	0x03CD5EF0 MOV X1, X24
	0x03CD5EF4 MOV X2, X31
	0x03CD5EF8 MOV X29, X0
	0x03CD5EFC BL 0x3E40EB4
	0x03CD5F00 MOVZ W1, 0x1
	0x03CD5F04 MOV X0, X29
	0x03CD5F08 MOV X2, X31
	0x03CD5F0C STR X25, [X29 + 0x108]
	0x03CD5F10 BL 0x3E47488
	0x03CD5F14 CBZ X20, 0x3CD67B8
	0x03CD5F18 LDR X1, [X28]
	0x03CD5F1C MOV X0, X20
	0x03CD5F20 BL 0x21E52E4
	0x03CD5F24 CBZ X0, 0x3CD67B8
	0x03CD5F28 LDR X1, [X21]
	0x03CD5F2C ADRP X25, 0x48D000
	0x03CD5F30 LDR X25, [X25 + 0x228]
	0x03CD5F34 MOV X24, X0
	0x03CD5F38 MOV X29, X26
	0x03CD5F3C BL 0x3CD3398
	0x03CD5F40 MOVZ W1, 0x1
	0x03CD5F44 MOV X0, X24
	0x03CD5F48 BL 0x3CD364C
	0x03CD5F4C LDR X1, [X25]
	0x03CD5F50 MOV X0, X20
	0x03CD5F54 BL 0x21E52E4
	0x03CD5F58 MOV X24, X0
	0x03CD5F5C LDR X0, [X31 + 0x30]
	0x03CD5F60 STR X20, [X31 + 0x28]
	0x03CD5F64 CBZ X0, 0x3CD67B8
	0x03CD5F68 ADRP X25, 0x47E000
	0x03CD5F6C LDR X25, [X25 + 0xB40]
	0x03CD5F70 MOV X26, X19
	0x03CD5F74 LDR X1, [X25]
	0x03CD5F78 BL 0x21E52E4

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x713000
	015 Move X26, 0x48E000
	016 Move W8, [X19+1122]
	017 Move X26, [X26+328]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {67}
	023 Move X0, 0x48E000
	024 Move X0, [X0+328]
	025 Call 0x1C17CF4
	026 Move X0, 0x475000
	027 Move X0, [X0+1752]
	028 Call 0x1C17CF4
	029 Move X0, 0x47F000
	030 Move X0, [X0+2880]
	031 Call 0x1C17CF4
	032 Move X0, 0x47F000
	033 Move X0, [X0+3272]
	034 Call 0x1C17CF4
	035 Move X0, 0x48E000
	036 Move X0, [X0+480]
	037 Call 0x1C17CF4
	038 Move X0, 0x475000
	039 Move X0, [X0+1760]
	040 Call 0x1C17CF4
	041 Move X0, 0x48E000
	042 Move X0, [X0+376]
	043 Call 0x1C17CF4
	044 Move X0, 0x48E000
	045 Move X0, [X0+488]
	046 Call 0x1C17CF4
	047 Move X0, 0x427000
	048 Move X0, [X0+3168]
	049 Call 0x1C17CF4
	050 Move X0, 0x41F000
	051 Move X0, [X0+1728]
	052 Call 0x1C17CF4
	053 Move X0, 0x484000
	054 Move X0, [X0+2496]
	055 Call 0x1C17CF4
	056 Move X0, 0x48E000
	057 Move X0, [X0+448]
	058 Call 0x1C17CF4
	059 Move X0, 0x48C000
	060 Move X0, [X0+616]
	061 Call 0x1C17CF4
	062 Move X0, 0x48E000
	063 Move X0, [X0+496]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X19+1122], W8
	067 Move X0, [X26]
	068 Move X24, 0x427000
	069 Move X19, 0x48E000
	070 Move X21, 0x41F000
	071 Move W8, [X0+224]
	072 Move X24, [X24+3168]
	073 Move X19, [X19+488]
	074 Move X21, [X21+1728]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X26]
	079 Move X8, [X0+184]
	080 Move X0, [X24]
	081 Move W1, 1
	082 Move S8, [X8+16]
	083 Move S9, [X8+20]
	084 Call 0x1C17D6C
	085 Move X8, [X21]
	086 Move X21, [X19]
	087 Move X19, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X0, X21
	094 Move X1, X31
	095 Call Type.GetTypeFromHandle, X0
	096 Compare X19, 0
	097 JumpIfEqual {394}
	098 Move X21, X0
	099 Compare X0, 0
	100 JumpIfEqual {107}
	101 Move X8, [X19]
	102 Move X0, X21
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {396}
	107 Move W8, [X19+24]
	108 Compare W8, 0
	109 JumpIfEqual {395}
	110 Move X27, 0x48C000
	111 Move X27, [X27+616]
	112 Move [X19+32], X21
	113 Move X23, 0x475000
	114 Move V0, V8
	115 Move X0, [X27]
	116 Move X23, [X23+1760]
	117 Move V1, V9
	118 Move X1, X19
	119 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	120 Move X8, [X24]
	121 Move X19, X0
	122 Move W1, 1
	123 Move X0, X8
	124 Call 0x1C17D6C
	125 Move X8, [X23]
	126 Move X21, X0
	127 Move X1, X31
	128 Move X0, X8
	129 Call Type.GetTypeFromHandle, X0
	130 Compare X21, 0
	131 JumpIfEqual {394}
	132 Move X22, X0
	133 Compare X0, 0
	134 JumpIfEqual {141}
	135 Move X8, [X21]
	136 Move X0, X22
	137 Move X1, [X8+64]
	138 Call 0x1C17E00
	139 Compare X0, 0
	140 JumpIfEqual {396}
	141 Move W8, [X21+24]
	142 Compare W8, 0
	143 JumpIfEqual {395}
	144 Move X8, 0x48E000
	145 Move X8, [X8+448]
	146 Move [X21+32], X22
	147 Move X1, X19
	148 Move X2, X21
	149 Move X0, [X8]
	150 Call DefaultControls.CreateUIObject, X0, X1, X2
	151 Move X8, [X24]
	152 Move X22, X0
	153 Move W1, 1
	154 Move X0, X8
	155 Call 0x1C17D6C
	156 Move X8, [X23]
	157 Move X21, X0
	158 Move X1, X31
	159 Move X0, X8
	160 Call Type.GetTypeFromHandle, X0
	161 Compare X21, 0
	162 JumpIfEqual {394}
	163 Move X23, X0
	164 Compare X0, 0
	165 JumpIfEqual {172}
	166 Move X8, [X21]
	167 Move X0, X23
	168 Move X1, [X8+64]
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {396}
	172 Move W8, [X21+24]
	173 Compare W8, 0
	174 JumpIfEqual {395}
	175 Move X8, 0x48E000
	176 Move X8, [X8+496]
	177 Move [X21+32], X23
	178 Move X25, 0x48E000
	179 Move X1, X22
	180 Move X0, [X8]
	181 Move X25, [X25+376]
	182 Move X2, X21
	183 Call DefaultControls.CreateUIObject, X0, X1, X2
	184 Move X8, [X24]
	185 Move X23, X0
	186 Move W1, 1
	187 Move X0, X8
	188 Call 0x1C17D6C
	189 Move X8, [X25]
	190 Move X21, X0
	191 Move X1, X31
	192 Move X0, X8
	193 Call Type.GetTypeFromHandle, X0
	194 Compare X21, 0
	195 JumpIfEqual {394}
	196 Move X24, X0
	197 Compare X0, 0
	198 JumpIfEqual {205}
	199 Move X8, [X21]
	200 Move X0, X24
	201 Move X1, [X8+64]
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {396}
	205 Move W8, [X21+24]
	206 Compare W8, 0
	207 JumpIfEqual {395}
	208 Move X8, 0x484000
	209 Move X8, [X8+2496]
	210 Move [X21+32], X24
	211 Move X1, X19
	212 Move X2, X21
	213 Move X0, [X8]
	214 Call DefaultControls.CreateUIObject, X0, X1, X2
	215 Compare X19, 0
	216 JumpIfEqual {394}
	217 Move X8, 0x48E000
	218 Move X8, [X8+480]
	219 Move X21, X0
	220 Move X0, X19
	221 Move X1, [X8]
	222 Call 0x21E62E4, X0
	223 Compare X0, 0
	224 JumpIfEqual {394}
	225 Move W1, 1
	226 Move X2, X31
	227 Move X24, X0
	228 Call Toggle.set_isOn, X0, X1
	229 Compare X22, 0
	230 JumpIfEqual {394}
	231 Move X28, 0x475000
	232 Move X28, [X28+1752]
	233 Move X0, X22
	234 Move X1, [X28]
	235 Call 0x21E62E4, X0
	236 Compare X0, 0
	237 JumpIfEqual {394}
	238 Move X1, [X20]
	239 Move X25, X0
	240 Call Image.set_sprite, X0, X1
	241 Move W1, 1
	242 Move X0, X25
	243 Call Image.set_type, X0, X1
	244 Move X8, [X26]
	245 Move X9, [X25]
	246 Move X0, X25
	247 Move X8, [X8+184]
	248 Move X10, [X9+680]
	249 Move X1, [X9+688]
	250 Move S0, [X8+32]
	251 Move S1, [X8+36]
	252 Move S2, [X8+40]
	253 Move S3, [X8+44]
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Compare X23, 0
	256 JumpIfEqual {394}
	257 Move X1, [X28]
	258 Move X0, X23
	259 Call 0x21E62E4, X0
	260 Compare X0, 0
	261 JumpIfEqual {394}
	262 Move X1, [X20+32]
	263 Move X26, X0
	264 Call Image.set_sprite, X0, X1
	265 Compare X21, 0
	266 JumpIfEqual {394}
	267 Move X8, 0x47F000
	268 Move X8, [X8+3272]
	269 Move X0, X21
	270 Move X1, [X8]
	271 Call 0x21E62E4, X0
	272 Compare X0, 0
	273 JumpIfEqual {394}
	274 Move X8, [X0]
	275 Move X1, [X27]
	276 Move X27, 0x47F000
	277 Move X20, X0
	278 Move X9, [X8+1512]
	279 Move X2, [X8+1520]
	280 Move X27, [X27+2880]
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move X0, X20
	283 Call DefaultControls.SetDefaultTextValues, X0
	284 Move X0, X24
	285 Move X1, X25
	286 Move X2, X31
	287 Move [X24+264], X26
	288 Call Selectable.set_targetGraphic, X0, X1
	289 Move X0, X24
	290 Call DefaultControls.SetDefaultColorTransitionValues, X0
	291 Move X1, [X27]
	292 Move X0, X22
	293 Call 0x21E62E4, X0
	294 Compare X0, 0
	295 JumpIfEqual {394}
	296 Move S0, W31
	297 Move S1, 1
	298 Move X1, X31
	299 Move X20, X0
	300 Call RectTransform.set_anchorMin, X0, X1
	301 Move S0, W31
	302 Move S1, 1
	303 Move X0, X20
	304 Move X1, X31
	305 Call RectTransform.set_anchorMax, X0, X1
	306 Move S0, 10
	307 Move S1, -10
	308 Move X0, X20
	309 Move X1, X31
	310 Call RectTransform.set_anchoredPosition, X0, X1
	311 Move S0, 20
	312 Move S1, 20
	313 Move X0, X20
	314 Move X1, X31
	315 Call RectTransform.set_sizeDelta, X0, X1
	316 Move X1, [X27]
	317 Move X0, X23
	318 Call 0x21E62E4, X0
	319 Compare X0, 0
	320 JumpIfEqual {394}
	321 Move S0, 0.5
	322 Move S1, 0.5
	323 Move X1, X31
	324 Move X20, X0
	325 Call RectTransform.set_anchorMin, X0, X1
	326 Move S0, 0.5
	327 Move S1, 0.5
	328 Move X0, X20
	329 Move X1, X31
	330 Call RectTransform.set_anchorMax, X0, X1
	331 Move X22, 0x705000
	332 Move W8, [X22+1935]
	333 Compare W8, 0
	334 JumpIfNotEqual {340}
	335 Move X0, 0x427000
	336 Move X0, [X0+3848]
	337 Call 0x1C17CF4
	338 Move W8, 1
	339 Move [X22+1935], W8
	340 Move X8, 0x427000
	341 Move X8, [X8+3848]
	342 Move X0, X20
	343 Move X1, X31
	344 Move X8, [X8]
	345 Move X8, [X8+184]
	346 Move S0, [X8]
	347 Move S1, [X8+4]
	348 Call RectTransform.set_anchoredPosition, X0, X1
	349 Move S0, 20
	350 Move S1, 20
	351 Move X0, X20
	352 Move X1, X31
	353 Call RectTransform.set_sizeDelta, X0, X1
	354 Move X1, [X27]
	355 Move X0, X21
	356 Call 0x21E62E4, X0
	357 Compare X0, 0
	358 JumpIfEqual {394}
	359 Move S0, W31
	360 Move S1, W31
	361 Move X1, X31
	362 Move X20, X0
	363 Call RectTransform.set_anchorMin, X0, X1
	364 Move S0, 1
	365 Move S1, 1
	366 Move X0, X20
	367 Move X1, X31
	368 Call RectTransform.set_anchorMax, X0, X1
	369 Move S0, 23
	370 Move S1, 1
	371 Move X0, X20
	372 Move X1, X31
	373 Call RectTransform.set_offsetMin, X0, X1
	374 Move S0, -5
	375 Move S1, -2
	376 Move X0, X20
	377 Move X1, X31
	378 Call RectTransform.set_offsetMax, X0, X1
	379 Move X0, X19
	380 Move X20, [X31+96]
	381 Move X19, [X31+104]
	382 Move X22, [X31+80]
	383 Move X21, [X31+88]
	384 Move X24, [X31+64]
	385 Move X23, [X31+72]
	386 Move X26, [X31+48]
	387 Move X25, [X31+56]
	388 Move X28, [X31+32]
	389 Move X27, [X31+40]
	390 Move X30, [X31+16]
	391 Move D9, [X31+112]
	392 Move D8, [X31+120]
	393 Return X0
	394 Call 0x1C17F20
	395 Call 0x1C17F28
	396 Call 0x1C17F44
	397 Move X1, X31
	398 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateInputField(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD5F7C LDR X19, [X31 + 0x8]
	0x03CD5F80 CBZ X24, 0x3CD67B8
	0x03CD5F84 LDR X20, [X31 + 0x38]
	0x03CD5F88 STR X0, [X24 + 0x20]
	0x03CD5F8C CBZ X20, 0x3CD67B8
	0x03CD5F90 LDR X1, [X25]
	0x03CD5F94 ADRP X25, 0x48D000
	0x03CD5F98 LDR X25, [X25 + 0x220]
	0x03CD5F9C MOV X0, X20
	0x03CD5FA0 BL 0x21E52E4
	0x03CD5FA4 MOV X1, X0
	0x03CD5FA8 MOV X0, X24
	0x03CD5FAC MOV X2, X31
	0x03CD5FB0 BL 0x3E3D2B8
	0x03CD5FB4 MOVZ W8, 0x2
	0x03CD5FB8 MOV X0, X24
	0x03CD5FBC MOV X1, X23
	0x03CD5FC0 MOV X2, X31
	0x03CD5FC4 STRB W31, [X24 + 0x28]
	0x03CD5FC8 STR W8, [X24 + 0x2C]
	0x03CD5FCC BL 0x3E3D500
	0x03CD5FD0 MOVZ W1, 0x2
	0x03CD5FD4 MOV X0, X24
	0x03CD5FD8 MOV X2, X31
	0x03CD5FDC BL 0x3E3D694
	0x03CD5FE0 FMOV S0, -3
	0x03CD5FE4 MOV X0, X24
	0x03CD5FE8 MOV X1, X31
	0x03CD5FEC BL 0x3E3D73C
	0x03CD5FF0 LDR X1, [X25]
	0x03CD5FF4 MOV X0, X20
	0x03CD5FF8 BL 0x21E52E4
	0x03CD5FFC CBZ X0, 0x3CD67B8
	0x03CD6000 MOV W1, W31
	0x03CD6004 MOV X2, X31
	0x03CD6008 BL 0x3E36440
	0x03CD600C LDR X1, [X28]
	0x03CD6010 MOV X0, X20
	0x03CD6014 BL 0x21E52E4
	0x03CD6018 CBZ X0, 0x3CD67B8
	0x03CD601C LDR X1, [X21 + 0x30]
	0x03CD6020 MOV X23, X0
	0x03CD6024 BL 0x3CD3398
	0x03CD6028 MOVZ W1, 0x1
	0x03CD602C MOV X0, X23
	0x03CD6030 BL 0x3CD364C
	0x03CD6034 ADRP X20, 0x47D000
	0x03CD6038 LDR X20, [X20 + 0xB40]
	0x03CD603C CBZ X19, 0x3CD67B8
	0x03CD6040 ADRP X8, 0x47D000
	0x03CD6044 LDR X8, [X8 + 0xCC8]
	0x03CD6048 MOV X0, X19
	0x03CD604C LDR X1, [X8]
	0x03CD6050 BL 0x21E52E4
	0x03CD6054 MOV X23, X0
	0x03CD6058 BL 0x3CD2EBC
	0x03CD605C CBZ X23, 0x3CD67B8
	0x03CD6060 MOVZ W1, 0x3
	0x03CD6064 MOV X0, X23
	0x03CD6068 MOV X2, X31
	0x03CD606C BL 0x3E455E8
	0x03CD6070 CBZ X27, 0x3CD67B8
	0x03CD6074 LDR X1, [X28]
	0x03CD6078 MOV X0, X27
	0x03CD607C BL 0x21E52E4
	0x03CD6080 CBZ X0, 0x3CD67B8
	0x03CD6084 LDR X1, [X21 + 0x28]
	0x03CD6088 BL 0x3CD3398
	0x03CD608C CBZ X29, 0x3CD67B8
	0x03CD6090 LDR X1, [X28]
	0x03CD6094 MOV X0, X29
	0x03CD6098 BL 0x21E52E4
	0x03CD609C CBZ X0, 0x3CD67B8
	0x03CD60A0 LDR X1, [X21]
	0x03CD60A4 ADRP X21, 0x48C000
	0x03CD60A8 LDR X21, [X21 + 0x218]
	0x03CD60AC MOV X24, X0
	0x03CD60B0 BL 0x3CD3398
	0x03CD60B4 LDR X8, [X26]
	0x03CD60B8 LDR X9, [X24]
	0x03CD60BC MOV X0, X24
	0x03CD60C0 LDR X8, [X8 + 0xB8]
	0x03CD60C4 LDR X10, [X9 + 0x2A8]
	0x03CD60C8 LDR X1, [X9 + 0x2B0]
	0x03CD60CC LDP S0, S1, [X8 + 0x20]
	0x03CD60D0 LDP S2, S3, [X8 + 0x28]
	0x03CD60D4 BLR X10
	0x03CD60D8 MOVZ W1, 0x1
	0x03CD60DC MOV X0, X24
	0x03CD60E0 BL 0x3CD364C
	0x03CD60E4 LDR X1, [X21]
	0x03CD60E8 MOV X0, X29
	0x03CD60EC BL 0x21E52E4
	0x03CD60F0 CBZ X0, 0x3CD67B8
	0x03CD60F4 ADRP X28, 0x482000
	0x03CD60F8 LDR X28, [X28 + 0x9B0]
	0x03CD60FC MOV X1, X24
	0x03CD6100 MOV X2, X31
	0x03CD6104 MOV X21, X0
	0x03CD6108 BL 0x3E40EB4
	0x03CD610C MOV X0, X21
	0x03CD6110 BL 0x3CD2F98
	0x03CD6114 LDR X1, [X20]
	0x03CD6118 LDR X0, [X31 + 0x28]
	0x03CD611C BL 0x21E52E4
	0x03CD6120 STR X0, [X21 + 0x100]
	0x03CD6124 MOV X0, X21
	0x03CD6128 BL 0x3CD6808
	0x03CD612C MOV X0, X21
	0x03CD6130 STR X23, [X21 + 0x108]
	0x03CD6134 BL 0x3CD6808
	0x03CD6138 MOV X0, X21
	0x03CD613C STR X22, [X21 + 0x118]
	0x03CD6140 BL 0x3CD6808
	0x03CD6144 LDR X8, [X22]
	0x03CD6148 LDR X1, [X28]
	0x03CD614C MOV X0, X22
	0x03CD6150 LDR X9, [X8 + 0x5E8]
	0x03CD6154 LDR X2, [X8 + 0x5F0]
	0x03CD6158 BLR X9
	0x03CD615C LDR X8, [X21 + 0x130]
	0x03CD6160 CBZ X8, 0x3CD67B8
	0x03CD6164 ADRP X25, 0x444000
	0x03CD6168 LDR X25, [X25 + 0xCE0]
	0x03CD616C LDR X22, [X8 + 0x10]
	0x03CD6170 LDR X0, [X25]
	0x03CD6174 BL 0x1C16F10
	0x03CD6178 MOV X1, X31
	0x03CD617C MOV X23, X0
	0x03CD6180 BL 0x33BDD8C
	0x03CD6184 CBZ X23, 0x3CD67B8
	0x03CD6188 LDR X8, [X28]
	0x03CD618C STR X8, [X23 + 0x10]
	0x03CD6190 CBZ X22, 0x3CD67B8
	0x03CD6194 ADRP X24, 0x444000
	0x03CD6198 LDR X24, [X24 + 0xCF8]
	0x03CD619C LDR W10, [X22 + 0x1C]
	0x03CD61A0 LDR X8, [X22 + 0x10]
	0x03CD61A4 LDR X26, [X31]
	0x03CD61A8 LDR X9, [X24]
	0x03CD61AC ADD W10, W10, 0x1
	0x03CD61B0 STR W10, [X22 + 0x1C]
	0x03CD61B4 CBZ X8, 0x3CD67B8
	0x03CD61B8 LDRSW X10, [X22 + 0x18]
	0x03CD61BC LDR W11, [X8 + 0x18]
	0x03CD61C0 CMP W10, W11
	0x03CD61C4 B.CS 0x3CD61DC
	0x03CD61C8 ADD W9, W10, 0x1
	0x03CD61CC ADD X8, X8, X10, 0x3, LSL
	0x03CD61D0 STR W9, [X22 + 0x18]
	0x03CD61D4 STR X23, [X8 + 0x20]
	0x03CD61D8 B 0x3CD61F4
	0x03CD61DC LDR X8, [X9 + 0x20]
	0x03CD61E0 MOV X0, X22
	0x03CD61E4 MOV X1, X23
	0x03CD61E8 LDR X8, [X8 + 0xC0]
	0x03CD61EC LDR X2, [X8 + 0x70]
	0x03CD61F0 BL 0x301BF90
	0x03CD61F4 LDR X8, [X21 + 0x130]
	0x03CD61F8 CBZ X8, 0x3CD67B8
	0x03CD61FC LDR X0, [X25]
	0x03CD6200 LDR X22, [X8 + 0x10]
	0x03CD6204 BL 0x1C16F10
	0x03CD6208 MOV X1, X31
	0x03CD620C MOV X23, X0
	0x03CD6210 BL 0x33BDD8C
	0x03CD6214 CBZ X23, 0x3CD67B8
	0x03CD6218 ADRP X8, 0x482000
	0x03CD621C LDR X8, [X8 + 0x9D8]
	0x03CD6220 LDR X8, [X8]
	0x03CD6224 STR X8, [X23 + 0x10]
	0x03CD6228 CBZ X22, 0x3CD67B8
	0x03CD622C LDR W10, [X22 + 0x1C]
	0x03CD6230 LDR X8, [X22 + 0x10]
	0x03CD6234 LDR X9, [X24]
	0x03CD6238 ADD W10, W10, 0x1
	0x03CD623C STR W10, [X22 + 0x1C]
	0x03CD6240 CBZ X8, 0x3CD67B8
	0x03CD6244 LDRSW X10, [X22 + 0x18]
	0x03CD6248 LDR W11, [X8 + 0x18]
	0x03CD624C CMP W10, W11
	0x03CD6250 B.CS 0x3CD6268
	0x03CD6254 ADD W9, W10, 0x1
	0x03CD6258 ADD X8, X8, X10, 0x3, LSL
	0x03CD625C STR W9, [X22 + 0x18]
	0x03CD6260 STR X23, [X8 + 0x20]
	0x03CD6264 B 0x3CD6280
	0x03CD6268 LDR X8, [X9 + 0x20]
	0x03CD626C MOV X0, X22
	0x03CD6270 MOV X1, X23
	0x03CD6274 LDR X8, [X8 + 0xC0]
	0x03CD6278 LDR X2, [X8 + 0x70]
	0x03CD627C BL 0x301BF90
	0x03CD6280 LDR X8, [X21 + 0x130]
	0x03CD6284 CBZ X8, 0x3CD67B8
	0x03CD6288 LDR X0, [X25]
	0x03CD628C LDR X22, [X8 + 0x10]
	0x03CD6290 BL 0x1C16F10
	0x03CD6294 MOV X1, X31
	0x03CD6298 MOV X23, X0
	0x03CD629C BL 0x33BDD8C
	0x03CD62A0 CBZ X23, 0x3CD67B8
	0x03CD62A4 ADRP X8, 0x482000
	0x03CD62A8 LDR X8, [X8 + 0x9B8]
	0x03CD62AC ADRP X25, 0x47D000
	0x03CD62B0 LDR X8, [X8]
	0x03CD62B4 STR X8, [X23 + 0x10]
	0x03CD62B8 LDR X25, [X25 + 0xB40]
	0x03CD62BC CBZ X22, 0x3CD67B8
	0x03CD62C0 LDR W10, [X22 + 0x1C]
	0x03CD62C4 LDR X8, [X22 + 0x10]
	0x03CD62C8 LDR X9, [X24]
	0x03CD62CC ADD W10, W10, 0x1
	0x03CD62D0 STR W10, [X22 + 0x1C]
	0x03CD62D4 CBZ X8, 0x3CD67B8
	0x03CD62D8 LDRSW X10, [X22 + 0x18]
	0x03CD62DC LDR W11, [X8 + 0x18]
	0x03CD62E0 ADRP X20, 0x425000
	0x03CD62E4 LDR X20, [X20 + 0xF08]
	0x03CD62E8 ADRP X24, 0x70B000
	0x03CD62EC CMP W10, W11
	0x03CD62F0 B.CS 0x3CD6308
	0x03CD62F4 ADD W9, W10, 0x1
	0x03CD62F8 ADD X8, X8, X10, 0x3, LSL
	0x03CD62FC STR W9, [X22 + 0x18]
	0x03CD6300 STR X23, [X8 + 0x20]
	0x03CD6304 B 0x3CD6320
	0x03CD6308 LDR X8, [X9 + 0x20]
	0x03CD630C MOV X0, X22
	0x03CD6310 MOV X1, X23
	0x03CD6314 LDR X8, [X8 + 0xC0]
	0x03CD6318 LDR X2, [X8 + 0x70]
	0x03CD631C BL 0x301BF90
	0x03CD6320 MOV X0, X21
	0x03CD6324 BL 0x3CD6808
	0x03CD6328 LDR X1, [X25]
	0x03CD632C MOV X0, X19
	0x03CD6330 BL 0x21E52E4
	0x03CD6334 ADRP X22, 0x703000
	0x03CD6338 LDRB W8, [X22 + 0x78F]
	0x03CD633C MOV X21, X0
	0x03CD6340 CBNZ W8, 0x3CD6358
	0x03CD6344 ADRP X0, 0x425000
	0x03CD6348 LDR X0, [X0 + 0xF08]
	0x03CD634C BL 0x1C16CF4
	0x03CD6350 MOVZ W8, 0x1
	0x03CD6354 STRB W8, [X22 + 0x78F]
	0x03CD6358 LDR X19, [X31 + 0x18]
	0x03CD635C CBZ X21, 0x3CD67B8
	0x03CD6360 LDR X8, [X20]
	0x03CD6364 MOV X0, X21
	0x03CD6368 MOV X1, X31
	0x03CD636C LDR X8, [X8 + 0xB8]
	0x03CD6370 LDP S0, S1, [X8]
	0x03CD6374 BL 0x3C3E648
	0x03CD6378 LDRB W8, [X24 + 0xA48]
	0x03CD637C CBNZ W8, 0x3CD6394
	0x03CD6380 ADRP X0, 0x425000
	0x03CD6384 LDR X0, [X0 + 0xF08]
	0x03CD6388 BL 0x1C16CF4
	0x03CD638C MOVZ W8, 0x1
	0x03CD6390 STRB W8, [X24 + 0xA48]
	0x03CD6394 LDR X8, [X20]
	0x03CD6398 MOV X0, X21
	0x03CD639C MOV X1, X31
	0x03CD63A0 LDR X8, [X8 + 0xB8]
	0x03CD63A4 LDP S0, S1, [X8 + 0x8]
	0x03CD63A8 BL 0x3C3E764
	0x03CD63AC FMOV S0, 10
	0x03CD63B0 FMOV S1, 6
	0x03CD63B4 MOV X0, X21
	0x03CD63B8 MOV X1, X31
	0x03CD63BC BL 0x3C3ECAC
	0x03CD63C0 FMOV S0, -25
	0x03CD63C4 FMOV S1, -7
	0x03CD63C8 MOV X0, X21
	0x03CD63CC MOV X1, X31
	0x03CD63D0 BL 0x3C3EE40
	0x03CD63D4 LDR X1, [X25]
	0x03CD63D8 MOV X0, X27
	0x03CD63DC BL 0x21E52E4
	0x03CD63E0 CBZ X0, 0x3CD67B8
	0x03CD63E4 FMOV S0, 1
	0x03CD63E8 FMOV S1, 0.5
	0x03CD63EC MOV X1, X31
	0x03CD63F0 MOV X21, X0
	0x03CD63F4 BL 0x3C3E648
	0x03CD63F8 FMOV S0, 1
	0x03CD63FC FMOV S1, 0.5
	0x03CD6400 MOV X0, X21
	0x03CD6404 MOV X1, X31
	0x03CD6408 BL 0x3C3E764
	0x03CD640C FMOV S0, 20
	0x03CD6410 FMOV S1, 20
	0x03CD6414 MOV X0, X21
	0x03CD6418 MOV X1, X31
	0x03CD641C BL 0x3C3E99C
	0x03CD6420 FMOV S0, -15
	0x03CD6424 FMOV S1, W31
	0x03CD6428 MOV X0, X21
	0x03CD642C MOV X1, X31
	0x03CD6430 BL 0x3C3E880
	0x03CD6434 LDR X1, [X25]
	0x03CD6438 LDR X0, [X31 + 0x28]
	0x03CD643C BL 0x21E52E4
	0x03CD6440 CBZ X0, 0x3CD67B8
	0x03CD6444 FMOV S0, W31
	0x03CD6448 FMOV S1, W31
	0x03CD644C MOV X1, X31
	0x03CD6450 MOV X21, X0
	0x03CD6454 BL 0x3C3E648
	0x03CD6458 FMOV S0, 1
	0x03CD645C FMOV S1, W31
	0x03CD6460 MOV X0, X21
	0x03CD6464 MOV X1, X31
	0x03CD6468 BL 0x3C3E764
	0x03CD646C FMOV S0, 0.5
	0x03CD6470 FMOV S1, 1
	0x03CD6474 MOV X0, X21
	0x03CD6478 MOV X1, X31
	0x03CD647C BL 0x3C3EAB8
	0x03CD6480 FMOV S0, W31
	0x03CD6484 FMOV S1, 2
	0x03CD6488 MOV X0, X21
	0x03CD648C MOV X1, X31
	0x03CD6490 BL 0x3C3E880
	0x03CD6494 MOVZ W8, 0x43160000
	0x03CD6498 FMOV S0, W31
	0x03CD649C FMOV S1, W8
	0x03CD64A0 MOV X0, X21
	0x03CD64A4 MOV X1, X31
	0x03CD64A8 BL 0x3C3E99C
	0x03CD64AC LDR X1, [X25]
	0x03CD64B0 LDR X0, [X31 + 0x38]
	0x03CD64B4 BL 0x21E52E4
	0x03CD64B8 CBZ X0, 0x3CD67B8
	0x03CD64BC FMOV S0, W31
	0x03CD64C0 FMOV S1, W31
	0x03CD64C4 MOV X1, X31
	0x03CD64C8 MOV X21, X0
	0x03CD64CC BL 0x3C3E648
	0x03CD64D0 FMOV S0, 1
	0x03CD64D4 FMOV S1, 1
	0x03CD64D8 MOV X0, X21
	0x03CD64DC MOV X1, X31
	0x03CD64E0 BL 0x3C3E764
	0x03CD64E4 FMOV S0, -18
	0x03CD64E8 FMOV S1, W31
	0x03CD64EC MOV X0, X21
	0x03CD64F0 MOV X1, X31
	0x03CD64F4 BL 0x3C3E99C
	0x03CD64F8 FMOV S0, W31
	0x03CD64FC FMOV S1, 1
	0x03CD6500 MOV X0, X21
	0x03CD6504 MOV X1, X31
	0x03CD6508 BL 0x3C3EAB8
	0x03CD650C LDR X1, [X25]
	0x03CD6510 LDR X0, [X31 + 0x30]
	0x03CD6514 BL 0x21E52E4
	0x03CD6518 CBZ X0, 0x3CD67B8
	0x03CD651C FMOV S0, W31
	0x03CD6520 FMOV S1, 1
	0x03CD6524 MOV X1, X31
	0x03CD6528 MOV X21, X0
	0x03CD652C BL 0x3C3E648
	0x03CD6530 FMOV S0, 1
	0x03CD6534 FMOV S1, 1
	0x03CD6538 MOV X0, X21
	0x03CD653C MOV X1, X31
	0x03CD6540 BL 0x3C3E764
	0x03CD6544 FMOV S0, 0.5
	0x03CD6548 FMOV S1, 1
	0x03CD654C MOV X0, X21
	0x03CD6550 MOV X1, X31
	0x03CD6554 BL 0x3C3EAB8
	0x03CD6558 FMOV S0, W31
	0x03CD655C FMOV S1, W31
	0x03CD6560 MOV X0, X21
	0x03CD6564 MOV X1, X31
	0x03CD6568 BL 0x3C3E880
	0x03CD656C FMOV S0, W31
	0x03CD6570 FMOV S1, 28
	0x03CD6574 MOV X0, X21
	0x03CD6578 MOV X1, X31
	0x03CD657C BL 0x3C3E99C
	0x03CD6580 LDR X1, [X25]
	0x03CD6584 MOV X0, X19
	0x03CD6588 BL 0x21E52E4
	0x03CD658C CBZ X0, 0x3CD67B8
	0x03CD6590 FMOV S0, W31
	0x03CD6594 FMOV S1, 0.5
	0x03CD6598 MOV X1, X31
	0x03CD659C MOV X21, X0

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x713000
	015 Move X25, 0x48E000
	016 Move W8, [X19+1123]
	017 Move X25, [X25+328]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {70}
	023 Move X0, 0x48E000
	024 Move X0, [X0+328]
	025 Call 0x1C17CF4
	026 Move X0, 0x475000
	027 Move X0, [X0+1752]
	028 Call 0x1C17CF4
	029 Move X0, 0x48E000
	030 Move X0, [X0+504]
	031 Call 0x1C17CF4
	032 Move X0, 0x47F000
	033 Move X0, [X0+2880]
	034 Call 0x1C17CF4
	035 Move X0, 0x47F000
	036 Move X0, [X0+3272]
	037 Call 0x1C17CF4
	038 Move X0, 0x475000
	039 Move X0, [X0+1760]
	040 Call 0x1C17CF4
	041 Move X0, 0x48E000
	042 Move X0, [X0+512]
	043 Call 0x1C17CF4
	044 Move X0, 0x48D000
	045 Move X0, [X0+376]
	046 Call 0x1C17CF4
	047 Move X0, 0x426000
	048 Move X0, [X0+3168]
	049 Call 0x1C17CF4
	050 Move X0, 0x41E000
	051 Move X0, [X0+1728]
	052 Call 0x1C17CF4
	053 Move X0, 0x483000
	054 Move X0, [X0+2352]
	055 Call 0x1C17CF4
	056 Move X0, 0x48D000
	057 Move X0, [X0+384]
	058 Call 0x1C17CF4
	059 Move X0, 0x483000
	060 Move X0, [X0+2368]
	061 Call 0x1C17CF4
	062 Move X0, 0x41E000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move X0, 0x48D000
	066 Move X0, [X0+520]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X19+1123], W8
	070 Move X0, [X25]
	071 Move X23, 0x426000
	072 Move X19, 0x474000
	073 Move X21, 0x41E000
	074 Move W8, [X0+224]
	075 Move X23, [X23+3168]
	076 Move X19, [X19+1760]
	077 Move X21, [X21+1728]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X25]
	082 Move X8, [X0+184]
	083 Move X0, [X23]
	084 Move W1, 2
	085 Move S8, [X8+8]
	086 Move S9, [X8+12]
	087 Call 0x1C17D6C
	088 Move X8, [X21]
	089 Move X21, [X19]
	090 Move X19, X0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X0, X21
	097 Move X1, X31
	098 Call Type.GetTypeFromHandle, X0
	099 Compare X19, 0
	100 JumpIfEqual {443}
	101 Move X21, X0
	102 Compare X0, 0
	103 JumpIfEqual {110}
	104 Move X8, [X19]
	105 Move X0, X21
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {445}
	110 Move W8, [X19+24]
	111 Compare W8, 0
	112 JumpIfEqual {444}
	113 Move X8, 0x48D000
	114 Move X8, [X8+512]
	115 Move [X19+32], X21
	116 Move X1, X31
	117 Move X0, [X8]
	118 Call Type.GetTypeFromHandle, X0
	119 Move X21, X0
	120 Compare X0, 0
	121 JumpIfEqual {128}
	122 Move X8, [X19]
	123 Move X0, X21
	124 Move X1, [X8+64]
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {445}
	128 Move W8, [X19+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, 0x48D000
	131 Move X8, [X8+520]
	132 Move [X19+40], X21
	133 Move X24, 0x48D000
	134 Move V0, V8
	135 Move X0, [X8]
	136 Move X24, [X24+376]
	137 Move V1, V9
	138 Move X1, X19
	139 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	140 Move X8, [X23]
	141 Move X19, X0
	142 Move W1, 1
	143 Move X0, X8
	144 Call 0x1C17D6C
	145 Move X8, [X24]
	146 Move X21, X0
	147 Move X1, X31
	148 Move X0, X8
	149 Call Type.GetTypeFromHandle, X0
	150 Compare X21, 0
	151 JumpIfEqual {443}
	152 Move X22, X0
	153 Compare X0, 0
	154 JumpIfEqual {161}
	155 Move X8, [X21]
	156 Move X0, X22
	157 Move X1, [X8+64]
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {445}
	161 Move W8, [X21+24]
	162 Compare W8, 0
	163 JumpIfEqual {444}
	164 Move X8, 0x483000
	165 Move X8, [X8+2352]
	166 Move [X21+32], X22
	167 Move X1, X19
	168 Move X2, X21
	169 Move X0, [X8]
	170 Call DefaultControls.CreateUIObject, X0, X1, X2
	171 Move X8, [X23]
	172 Move X21, X0
	173 Move W1, 1
	174 Move X0, X8
	175 Call 0x1C17D6C
	176 Move X8, [X24]
	177 Move X22, X0
	178 Move X1, X31
	179 Move X0, X8
	180 Call Type.GetTypeFromHandle, X0
	181 Compare X22, 0
	182 JumpIfEqual {443}
	183 Move X23, X0
	184 Compare X0, 0
	185 JumpIfEqual {192}
	186 Move X8, [X22]
	187 Move X0, X23
	188 Move X1, [X8+64]
	189 Call 0x1C17E00
	190 Compare X0, 0
	191 JumpIfEqual {445}
	192 Move W8, [X22+24]
	193 Compare W8, 0
	194 JumpIfEqual {444}
	195 Move X8, 0x48D000
	196 Move X8, [X8+384]
	197 Move [X22+32], X23
	198 Move X1, X19
	199 Move X2, X22
	200 Move X0, [X8]
	201 Call DefaultControls.CreateUIObject, X0, X1, X2
	202 Compare X19, 0
	203 JumpIfEqual {443}
	204 Move X8, 0x474000
	205 Move X8, [X8+1752]
	206 Move X24, X0
	207 Move X0, X19
	208 Move X1, [X8]
	209 Call 0x21E62E4, X0
	210 Compare X0, 0
	211 JumpIfEqual {443}
	212 Move X1, [X20+16]
	213 Move X20, 0x48D000
	214 Move X20, [X20+504]
	215 Move X22, X0
	216 Call Image.set_sprite, X0, X1
	217 Move W1, 1
	218 Move X0, X22
	219 Call Image.set_type, X0, X1
	220 Move X8, [X25]
	221 Move X9, [X22]
	222 Move X0, X22
	223 Move X8, [X8+184]
	224 Move X10, [X9+680]
	225 Move X1, [X9+688]
	226 Move S0, [X8+32]
	227 Move S1, [X8+36]
	228 Move S2, [X8+40]
	229 Move S3, [X8+44]
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X1, [X20]
	232 Move X0, X19
	233 Call 0x21E62E4, X0
	234 Move X20, X0
	235 Call DefaultControls.SetDefaultColorTransitionValues, X0
	236 Compare X24, 0
	237 JumpIfEqual {443}
	238 Move X23, 0x47E000
	239 Move X23, [X23+3272]
	240 Move X0, X24
	241 Move X1, [X23]
	242 Call 0x21E62E4, X0
	243 Compare X0, 0
	244 JumpIfEqual {443}
	245 Move X9, 0x41E000
	246 Move X8, [X0]
	247 Move X9, [X9+2440]
	248 Move X22, X0
	249 Move X2, [X8+1520]
	250 Move X1, [X9]
	251 Move X9, [X8+1512]
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X0, X22
	254 Move W1, W31
	255 Move X2, X31
	256 Call Text.set_supportRichText, X0, X1
	257 Move X0, X22
	258 Call DefaultControls.SetDefaultTextValues, X0
	259 Compare X21, 0
	260 JumpIfEqual {443}
	261 Move X1, [X23]
	262 Move X0, X21
	263 Call 0x21E62E4, X0
	264 Compare X0, 0
	265 JumpIfEqual {443}
	266 Move X9, 0x483000
	267 Move X8, [X0]
	268 Move X9, [X9+2368]
	269 Move X27, 0x47E000
	270 Move X23, X0
	271 Move X2, [X8+1520]
	272 Move X1, [X9]
	273 Move X9, [X8+1512]
	274 Move X27, [X27+2880]
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Move W1, 2
	277 Move X0, X23
	278 Move X2, X31
	279 Call Text.set_fontStyle, X0, X1
	280 Move X8, [X22]
	281 Move X0, X22
	282 Move X9, [X8+664]
	283 Move X1, [X8+672]
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move X8, [X23]
	286 Move S4, 0.5
	287 Multiply S3, S3, S4
	288 Move X0, X23
	289 Move X9, [X8+680]
	290 Move X1, [X8+688]
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move X1, [X27]
	293 Move X0, X24
	294 Call 0x21E62E4, X0
	295 Move X25, 0x704000
	296 Move W8, [X25+1935]
	297 Move X24, X0
	298 Compare W8, 0
	299 JumpIfNotEqual {305}
	300 Move X0, 0x426000
	301 Move X0, [X0+3848]
	302 Call 0x1C17CF4
	303 Move W8, 1
	304 Move [X25+1935], W8
	305 Compare X24, 0
	306 JumpIfEqual {443}
	307 Move X26, 0x426000
	308 Move X26, [X26+3848]
	309 Move X0, X24
	310 Move X1, X31
	311 Move X8, [X26]
	312 Move X8, [X8+184]
	313 Move S0, [X8]
	314 Move S1, [X8+4]
	315 Call RectTransform.set_anchorMin, X0, X1
	316 Move X28, 0x70C000
	317 Move W8, [X28+2632]
	318 Compare W8, 0
	319 JumpIfNotEqual {325}
	320 Move X0, 0x426000
	321 Move X0, [X0+3848]
	322 Call 0x1C17CF4
	323 Move W8, 1
	324 Move [X28+2632], W8
	325 Move X8, [X26]
	326 Move X0, X24
	327 Move X1, X31
	328 Move X8, [X8+184]
	329 Move S0, [X8+8]
	330 Move S1, [X8+12]
	331 Call RectTransform.set_anchorMax, X0, X1
	332 Move W8, [X25+1935]
	333 Compare W8, 0
	334 JumpIfNotEqual {340}
	335 Move X0, 0x426000
	336 Move X0, [X0+3848]
	337 Call 0x1C17CF4
	338 Move W8, 1
	339 Move [X25+1935], W8
	340 Move X8, [X26]
	341 Move X0, X24
	342 Move X1, X31
	343 Move X8, [X8+184]
	344 Move S0, [X8]
	345 Move S1, [X8+4]
	346 Call RectTransform.set_sizeDelta, X0, X1
	347 Move S0, 10
	348 Move S1, 6
	349 Move X0, X24
	350 Move X1, X31
	351 Call RectTransform.set_offsetMin, X0, X1
	352 Move S0, -10
	353 Move S1, -7
	354 Move X0, X24
	355 Move X1, X31
	356 Call RectTransform.set_offsetMax, X0, X1
	357 Move X1, [X27]
	358 Move X0, X21
	359 Call 0x21E62E4, X0
	360 Move W8, [X25+1935]
	361 Move X21, X0
	362 Compare W8, 0
	363 JumpIfNotEqual {369}
	364 Move X0, 0x426000
	365 Move X0, [X0+3848]
	366 Call 0x1C17CF4
	367 Move W8, 1
	368 Move [X25+1935], W8
	369 Compare X21, 0
	370 JumpIfEqual {443}
	371 Move X8, [X26]
	372 Move X0, X21
	373 Move X1, X31
	374 Move X8, [X8+184]
	375 Move S0, [X8]
	376 Move S1, [X8+4]
	377 Call RectTransform.set_anchorMin, X0, X1
	378 Move W8, [X28+2632]
	379 Compare W8, 0
	380 JumpIfNotEqual {386}
	381 Move X0, 0x426000
	382 Move X0, [X0+3848]
	383 Call 0x1C17CF4
	384 Move W8, 1
	385 Move [X28+2632], W8
	386 Move X8, [X26]
	387 Move X0, X21
	388 Move X1, X31
	389 Move X8, [X8+184]
	390 Move S0, [X8+8]
	391 Move S1, [X8+12]
	392 Call RectTransform.set_anchorMax, X0, X1
	393 Move W8, [X25+1935]
	394 Compare W8, 0
	395 JumpIfNotEqual {401}
	396 Move X0, 0x426000
	397 Move X0, [X0+3848]
	398 Call 0x1C17CF4
	399 Move W8, 1
	400 Move [X25+1935], W8
	401 Move X8, [X26]
	402 Move X0, X21
	403 Move X1, X31
	404 Move X8, [X8+184]
	405 Move S0, [X8]
	406 Move S1, [X8+4]
	407 Call RectTransform.set_sizeDelta, X0, X1
	408 Move S0, 10
	409 Move S1, 6
	410 Move X0, X21
	411 Move X1, X31
	412 Call RectTransform.set_offsetMin, X0, X1
	413 Move S0, -10
	414 Move S1, -7
	415 Move X0, X21
	416 Move X1, X31
	417 Call RectTransform.set_offsetMax, X0, X1
	418 Compare X20, 0
	419 JumpIfEqual {443}
	420 Move X0, X20
	421 Move X1, X22
	422 Move X2, X31
	423 Call InputField.set_textComponent, X0, X1
	424 Move X0, X20
	425 Move X1, X23
	426 Move X2, X31
	427 Call InputField.set_placeholder, X0, X1
	428 Move X0, X19
	429 Move X20, [X31+96]
	430 Move X19, [X31+104]
	431 Move X22, [X31+80]
	432 Move X21, [X31+88]
	433 Move X24, [X31+64]
	434 Move X23, [X31+72]
	435 Move X26, [X31+48]
	436 Move X25, [X31+56]
	437 Move X28, [X31+32]
	438 Move X27, [X31+40]
	439 Move X30, [X31+16]
	440 Move D9, [X31+112]
	441 Move D8, [X31+120]
	442 Return X0
	443 Call 0x1C17F20
	444 Call 0x1C17F28
	445 Call 0x1C17F44
	446 Move X1, X31
	447 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateDropdown(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD65A0 BL 0x3C3E648
	0x03CD65A4 FMOV S0, 1
	0x03CD65A8 FMOV S1, 0.5
	0x03CD65AC MOV X0, X21
	0x03CD65B0 MOV X1, X31
	0x03CD65B4 BL 0x3C3E764
	0x03CD65B8 FMOV S0, W31
	0x03CD65BC FMOV S1, 20
	0x03CD65C0 MOV X0, X21
	0x03CD65C4 MOV X1, X31
	0x03CD65C8 BL 0x3C3E99C
	0x03CD65CC LDR X1, [X25]
	0x03CD65D0 LDR X0, [X31 + 0x20]
	0x03CD65D4 BL 0x21E52E4
	0x03CD65D8 LDRB W8, [X22 + 0x78F]
	0x03CD65DC MOV X21, X0
	0x03CD65E0 CBNZ W8, 0x3CD65F8
	0x03CD65E4 ADRP X0, 0x425000
	0x03CD65E8 LDR X0, [X0 + 0xF08]
	0x03CD65EC BL 0x1C16CF4
	0x03CD65F0 MOVZ W8, 0x1
	0x03CD65F4 STRB W8, [X22 + 0x78F]
	0x03CD65F8 CBZ X21, 0x3CD67B8
	0x03CD65FC LDR X8, [X20]
	0x03CD6600 MOV X0, X21
	0x03CD6604 MOV X1, X31
	0x03CD6608 LDR X8, [X8 + 0xB8]
	0x03CD660C LDP S0, S1, [X8]
	0x03CD6610 BL 0x3C3E648
	0x03CD6614 LDRB W8, [X24 + 0xA48]
	0x03CD6618 CBNZ W8, 0x3CD6630
	0x03CD661C ADRP X0, 0x425000
	0x03CD6620 LDR X0, [X0 + 0xF08]
	0x03CD6624 BL 0x1C16CF4
	0x03CD6628 MOVZ W8, 0x1
	0x03CD662C STRB W8, [X24 + 0xA48]
	0x03CD6630 LDR X8, [X20]
	0x03CD6634 MOV X0, X21
	0x03CD6638 MOV X1, X31
	0x03CD663C LDR X8, [X8 + 0xB8]
	0x03CD6640 LDP S0, S1, [X8 + 0x8]
	0x03CD6644 BL 0x3C3E764
	0x03CD6648 LDRB W8, [X22 + 0x78F]
	0x03CD664C CBNZ W8, 0x3CD6664
	0x03CD6650 ADRP X0, 0x425000
	0x03CD6654 LDR X0, [X0 + 0xF08]
	0x03CD6658 BL 0x1C16CF4
	0x03CD665C MOVZ W8, 0x1
	0x03CD6660 STRB W8, [X22 + 0x78F]
	0x03CD6664 LDR X8, [X20]
	0x03CD6668 MOV X0, X21
	0x03CD666C MOV X1, X31
	0x03CD6670 LDR X8, [X8 + 0xB8]
	0x03CD6674 LDP S0, S1, [X8]
	0x03CD6678 BL 0x3C3E99C
	0x03CD667C LDR X1, [X25]
	0x03CD6680 LDR X0, [X31 + 0x10]
	0x03CD6684 BL 0x21E52E4
	0x03CD6688 CBZ X0, 0x3CD67B8
	0x03CD668C FMOV S0, W31
	0x03CD6690 FMOV S1, 0.5
	0x03CD6694 MOV X1, X31
	0x03CD6698 MOV X21, X0
	0x03CD669C BL 0x3C3E648
	0x03CD66A0 FMOV S0, W31
	0x03CD66A4 FMOV S1, 0.5
	0x03CD66A8 MOV X0, X21
	0x03CD66AC MOV X1, X31
	0x03CD66B0 BL 0x3C3E764
	0x03CD66B4 FMOV S0, 20
	0x03CD66B8 FMOV S1, 20
	0x03CD66BC MOV X0, X21
	0x03CD66C0 MOV X1, X31
	0x03CD66C4 BL 0x3C3E99C
	0x03CD66C8 FMOV S0, 10
	0x03CD66CC FMOV S1, W31
	0x03CD66D0 MOV X0, X21
	0x03CD66D4 MOV X1, X31
	0x03CD66D8 BL 0x3C3E880
	0x03CD66DC LDR X1, [X25]
	0x03CD66E0 MOV X0, X26
	0x03CD66E4 BL 0x21E52E4
	0x03CD66E8 LDRB W8, [X22 + 0x78F]
	0x03CD66EC MOV X21, X0
	0x03CD66F0 CBNZ W8, 0x3CD6708
	0x03CD66F4 ADRP X0, 0x425000
	0x03CD66F8 LDR X0, [X0 + 0xF08]
	0x03CD66FC BL 0x1C16CF4
	0x03CD6700 MOVZ W8, 0x1
	0x03CD6704 STRB W8, [X22 + 0x78F]
	0x03CD6708 CBZ X21, 0x3CD67B8
	0x03CD670C LDR X8, [X20]
	0x03CD6710 MOV X0, X21
	0x03CD6714 MOV X1, X31
	0x03CD6718 LDR X8, [X8 + 0xB8]
	0x03CD671C LDP S0, S1, [X8]
	0x03CD6720 BL 0x3C3E648
	0x03CD6724 LDRB W8, [X24 + 0xA48]
	0x03CD6728 CBNZ W8, 0x3CD6740
	0x03CD672C ADRP X0, 0x425000
	0x03CD6730 LDR X0, [X0 + 0xF08]
	0x03CD6734 BL 0x1C16CF4
	0x03CD6738 MOVZ W8, 0x1
	0x03CD673C STRB W8, [X24 + 0xA48]
	0x03CD6740 LDR X8, [X20]
	0x03CD6744 MOV X0, X21
	0x03CD6748 MOV X1, X31
	0x03CD674C LDR X8, [X8 + 0xB8]
	0x03CD6750 LDP S0, S1, [X8 + 0x8]
	0x03CD6754 BL 0x3C3E764
	0x03CD6758 FMOV S0, 20
	0x03CD675C FMOV S1, 1
	0x03CD6760 MOV X0, X21
	0x03CD6764 MOV X1, X31
	0x03CD6768 BL 0x3C3ECAC
	0x03CD676C FMOV S0, -10
	0x03CD6770 FMOV S1, -2
	0x03CD6774 MOV X0, X21
	0x03CD6778 MOV X1, X31
	0x03CD677C BL 0x3C3EE40
	0x03CD6780 LDR X0, [X31 + 0x28]
	0x03CD6784 MOV W1, W31
	0x03CD6788 MOV X2, X31
	0x03CD678C BL 0x3C357B4
	0x03CD6790 MOV X0, X29
	0x03CD6794 LDP X20, X19, [X31 + 0xE0]
	0x03CD6798 LDP X22, X21, [X31 + 0xD0]
	0x03CD679C LDP X24, X23, [X31 + 0xC0]
	0x03CD67A0 LDP X26, X25, [X31 + 0xB0]
	0x03CD67A4 LDP X28, X27, [X31 + 0xA0]
	0x03CD67A8 LDP X29, X30, [X31 + 0x90]
	0x03CD67AC LDP D9, D8, [X31 + 0x80]
	0x03CD67B0 ADD X31, X31, 0xF0
	0x03CD67B4 RET
	0x03CD67B8 BL 0x1C16F20
	0x03CD67BC BL 0x1C16F28
	0x03CD67C0 BL 0x1C16F44
	0x03CD67C4 MOV X1, X31
	0x03CD67C8 BL 0x1C16DEC
	0x03CD67CC STR X1, [X0 + 0x100]
	0x03CD67D0 B 0x3CD6808
	0x03CD67D4 STR X1, [X0 + 0x108]
	0x03CD67D8 B 0x3CD6808
	0x03CD67DC STR X1, [X0 + 0x118]
	0x03CD67E0 B 0x3CD6808
	0x03CD67E4 STR X30, [X31 - 0x10]!
	0x03CD67E8 LDR X8, [X0 + 0x130]
	0x03CD67EC CBZ X8, 0x3CD67FC
	0x03CD67F0 LDR X0, [X8 + 0x10]
	0x03CD67F4 LDR X30, [X31], #0x10
	0x03CD67F8 RET
	0x03CD67FC BL 0x1C16F20
	0x03CD6800 MOV X1, X31
	0x03CD6804 B 0x33BDD8C
	0x03CD6808 STR X30, [X31 - 0x30]!
	0x03CD680C STP X22, X21, [X31 + 0x10]
	0x03CD6810 STP X20, X19, [X31 + 0x20]
	0x03CD6814 ADRP X21, 0x711000
	0x03CD6818 ADRP X20, 0x48C000
	0x03CD681C LDRB W8, [X21 + 0x46E]
	0x03CD6820 LDR X20, [X20 + 0x248]
	0x03CD6824 MOV X19, X0
	0x03CD6828 TBNZ X8, 0x0, 0x3CD6870
	0x03CD682C ADRP X0, 0x48C000
	0x03CD6830 LDR X0, [X0 + 0x248]
	0x03CD6834 BL 0x1C16CF4
	0x03CD6838 ADRP X0, 0x48C000
	0x03CD683C LDR X0, [X0 + 0x250]
	0x03CD6840 BL 0x1C16CF4
	0x03CD6844 ADRP X0, 0x48C000
	0x03CD6848 LDR X0, [X0 + 0x258]
	0x03CD684C BL 0x1C16CF4
	0x03CD6850 ADRP X0, 0x41D000
	0x03CD6854 LDR X0, [X0 + 0x598]
	0x03CD6858 BL 0x1C16CF4
	0x03CD685C ADRP X0, 0x41D000
	0x03CD6860 LDR X0, [X0 + 0x988]
	0x03CD6864 BL 0x1C16CF4
	0x03CD6868 MOVZ W8, 0x1
	0x03CD686C STRB W8, [X21 + 0x46E]
	0x03CD6870 LDR X0, [X20]
	0x03CD6874 LDR W8, [X0 + 0xE0]
	0x03CD6878 CBNZ W8, 0x3CD6884
	0x03CD687C BL 0x1C16DFC
	0x03CD6880 LDR X0, [X20]
	0x03CD6884 LDR X8, [X19 + 0x130]
	0x03CD6888 CBZ X8, 0x3CD69E0
	0x03CD688C LDR X8, [X8 + 0x10]
	0x03CD6890 CBZ X8, 0x3CD69E0
	0x03CD6894 LDR W9, [X8 + 0x18]
	0x03CD6898 ADRP X22, 0x41D000
	0x03CD689C LDR X22, [X22 + 0x598]
	0x03CD68A0 SUBS W10, W9, 0x1
	0x03CD68A4 B.LT 0x3CD68D8
	0x03CD68A8 ADRP X12, 0x48C000
	0x03CD68AC LDR W11, [X19 + 0x128]
	0x03CD68B0 LDR X12, [X12 + 0x258]
	0x03CD68B4 MOV X0, X8
	0x03CD68B8 CMP W11, W9
	0x03CD68BC LDR X2, [X12]
	0x03CD68C0 CSEL W9, W11, W10, LT
	0x03CD68C4 CMP W11, 0x0
	0x03CD68C8 CSEL W1, W31, W9, LT
	0x03CD68CC BL 0x301BCCC
	0x03CD68D0 MOV X20, X0
	0x03CD68D4 B 0x3CD68E0
	0x03CD68D8 LDR X8, [X0 + 0xB8]
	0x03CD68DC LDR X20, [X8]
	0x03CD68E0 LDR X0, [X22]
	0x03CD68E4 LDR X21, [X19 + 0x108]
	0x03CD68E8 LDR W8, [X0 + 0xE0]
	0x03CD68EC CBNZ W8, 0x3CD68F4
	0x03CD68F0 BL 0x1C16DFC
	0x03CD68F4 MOV X0, X21
	0x03CD68F8 MOV X1, X31
	0x03CD68FC BL 0x3C38948
	0x03CD6900 TBZ X0, 0x0, 0x3CD6944
	0x03CD6904 CBZ X20, 0x3CD6920
	0x03CD6908 LDR X1, [X20 + 0x10]
	0x03CD690C CBZ X1, 0x3CD6920
	0x03CD6910 LDR X0, [X19 + 0x108]
	0x03CD6914 CBZ X0, 0x3CD69E0
	0x03CD6918 LDR X8, [X0]
	0x03CD691C B 0x3CD6938
	0x03CD6920 LDR X0, [X19 + 0x108]
	0x03CD6924 CBZ X0, 0x3CD69E0
	0x03CD6928 ADRP X9, 0x41D000
	0x03CD692C LDR X8, [X0]
	0x03CD6930 LDR X9, [X9 + 0x988]
	0x03CD6934 LDR X1, [X9]
	0x03CD6938 LDR X9, [X8 + 0x5E8]
	0x03CD693C LDR X2, [X8 + 0x5F0]
	0x03CD6940 BLR X9
	0x03CD6944 LDR X0, [X22]
	0x03CD6948 LDR X21, [X19 + 0x110]
	0x03CD694C LDR W8, [X0 + 0xE0]
	0x03CD6950 CBNZ W8, 0x3CD6958
	0x03CD6954 BL 0x1C16DFC
	0x03CD6958 MOV X0, X21
	0x03CD695C MOV X1, X31
	0x03CD6960 BL 0x3C38948
	0x03CD6964 TBZ X0, 0x0, 0x3CD697C
	0x03CD6968 LDR X0, [X19 + 0x110]
	0x03CD696C CBZ X20, 0x3CD698C
	0x03CD6970 CBZ X0, 0x3CD69E0
	0x03CD6974 LDR X1, [X20 + 0x18]
	0x03CD6978 B 0x3CD6994
	0x03CD697C LDP X20, X19, [X31 + 0x20]
	0x03CD6980 LDP X22, X21, [X31 + 0x10]
	0x03CD6984 LDR X30, [X31], #0x30
	0x03CD6988 RET
	0x03CD698C CBZ X0, 0x3CD69E0
	0x03CD6990 MOV X1, X31
	0x03CD6994 BL 0x3CD3398
	0x03CD6998 LDR X19, [X19 + 0x110]
	0x03CD699C CBZ X19, 0x3CD69E0
	0x03CD69A0 LDR X0, [X22]
	0x03CD69A4 LDR X20, [X19 + 0xD8]
	0x03CD69A8 LDR W8, [X0 + 0xE0]
	0x03CD69AC CBNZ W8, 0x3CD69B4
	0x03CD69B0 BL 0x1C16DFC
	0x03CD69B4 MOV X0, X20
	0x03CD69B8 MOV X1, X31
	0x03CD69BC MOV X2, X31
	0x03CD69C0 BL 0x3C354F8
	0x03CD69C4 AND W1, W0, 0x1
	0x03CD69C8 MOV X0, X19
	0x03CD69CC LDP X20, X19, [X31 + 0x20]
	0x03CD69D0 LDP X22, X21, [X31 + 0x10]
	0x03CD69D4 MOV X2, X31
	0x03CD69D8 LDR X30, [X31], #0x30
	0x03CD69DC B 0x3C32410
	0x03CD69E0 BL 0x1C16F20
	0x03CD69E4 SUB X31, X31, 0xE0
	0x03CD69E8 STP X29, X30, [X31 + 0x80]
	0x03CD69EC STP X28, X27, [X31 + 0x90]
	0x03CD69F0 STP X26, X25, [X31 + 0xA0]
	0x03CD69F4 STP X24, X23, [X31 + 0xB0]
	0x03CD69F8 STP X22, X21, [X31 + 0xC0]
	0x03CD69FC STP X20, X19, [X31 + 0xD0]
	0x03CD6A00 ADRP X21, 0x711000
	0x03CD6A04 ADRP X23, 0x425000
	0x03CD6A08 ADRP X22, 0x473000
	0x03CD6A0C ADRP X20, 0x41D000
	0x03CD6A10 LDRB W8, [X21 + 0x465]
	0x03CD6A14 LDR X23, [X23 + 0xC60]
	0x03CD6A18 LDR X22, [X22 + 0x6E0]
	0x03CD6A1C LDR X20, [X20 + 0x6C0]
	0x03CD6A20 MOV X19, X0
	0x03CD6A24 TBNZ X8, 0x0, 0x3CD6AFC
	0x03CD6A28 ADRP X0, 0x48C000
	0x03CD6A2C LDR X0, [X0 + 0x148]
	0x03CD6A30 BL 0x1C16CF4
	0x03CD6A34 ADRP X0, 0x473000
	0x03CD6A38 LDR X0, [X0 + 0x6D8]
	0x03CD6A3C BL 0x1C16CF4
	0x03CD6A40 ADRP X0, 0x48C000
	0x03CD6A44 LDR X0, [X0 + 0x220]
	0x03CD6A48 BL 0x1C16CF4
	0x03CD6A4C ADRP X0, 0x47D000
	0x03CD6A50 LDR X0, [X0 + 0xB40]
	0x03CD6A54 BL 0x1C16CF4
	0x03CD6A58 ADRP X0, 0x48C000
	0x03CD6A5C LDR X0, [X0 + 0x228]
	0x03CD6A60 BL 0x1C16CF4
	0x03CD6A64 ADRP X0, 0x482000
	0x03CD6A68 LDR X0, [X0 + 0x990]
	0x03CD6A6C BL 0x1C16CF4
	0x03CD6A70 ADRP X0, 0x473000
	0x03CD6A74 LDR X0, [X0 + 0x6E0]
	0x03CD6A78 BL 0x1C16CF4
	0x03CD6A7C ADRP X0, 0x48C000
	0x03CD6A80 LDR X0, [X0 + 0x230]
	0x03CD6A84 BL 0x1C16CF4
	0x03CD6A88 ADRP X0, 0x483000
	0x03CD6A8C LDR X0, [X0 + 0xA48]
	0x03CD6A90 BL 0x1C16CF4
	0x03CD6A94 ADRP X0, 0x48C000
	0x03CD6A98 LDR X0, [X0 + 0x238]
	0x03CD6A9C BL 0x1C16CF4
	0x03CD6AA0 ADRP X0, 0x425000
	0x03CD6AA4 LDR X0, [X0 + 0xC60]
	0x03CD6AA8 BL 0x1C16CF4
	0x03CD6AAC ADRP X0, 0x41D000
	0x03CD6AB0 LDR X0, [X0 + 0x6C0]
	0x03CD6AB4 BL 0x1C16CF4
	0x03CD6AB8 ADRP X0, 0x48C000
	0x03CD6ABC LDR X0, [X0 + 0x260]
	0x03CD6AC0 BL 0x1C16CF4
	0x03CD6AC4 ADRP X0, 0x482000
	0x03CD6AC8 LDR X0, [X0 + 0x9D0]
	0x03CD6ACC BL 0x1C16CF4
	0x03CD6AD0 ADRP X0, 0x48C000
	0x03CD6AD4 LDR X0, [X0 + 0x268]
	0x03CD6AD8 BL 0x1C16CF4
	0x03CD6ADC ADRP X0, 0x482000
	0x03CD6AE0 LDR X0, [X0 + 0x9F0]
	0x03CD6AE4 BL 0x1C16CF4
	0x03CD6AE8 ADRP X0, 0x48C000
	0x03CD6AEC LDR X0, [X0 + 0x270]
	0x03CD6AF0 BL 0x1C16CF4
	0x03CD6AF4 MOVZ W8, 0x1
	0x03CD6AF8 STRB W8, [X21 + 0x465]
	0x03CD6AFC LDR X0, [X23]
	0x03CD6B00 MOVZ W1, 0x2
	0x03CD6B04 BL 0x1C16D6C
	0x03CD6B08 LDR X8, [X20]
	0x03CD6B0C LDR X21, [X22]
	0x03CD6B10 MOV X20, X0
	0x03CD6B14 LDR W9, [X8 + 0xE0]
	0x03CD6B18 CBNZ W9, 0x3CD6B24
	0x03CD6B1C MOV X0, X8
	0x03CD6B20 BL 0x1C16DFC
	0x03CD6B24 MOV X0, X21
	0x03CD6B28 MOV X1, X31
	0x03CD6B2C BL 0x338C698
	0x03CD6B30 CBZ X20, 0x3CD72A8
	0x03CD6B34 MOV X21, X0
	0x03CD6B38 CBZ X0, 0x3CD6B50
	0x03CD6B3C LDR X8, [X20]
	0x03CD6B40 MOV X0, X21
	0x03CD6B44 LDR X1, [X8 + 0x40]
	0x03CD6B48 BL 0x1C16E00
	0x03CD6B4C CBZ X0, 0x3CD72B0
	0x03CD6B50 LDR W8, [X20 + 0x18]
	0x03CD6B54 CBZ W8, 0x3CD72AC
	0x03CD6B58 ADRP X8, 0x48C000
	0x03CD6B5C LDR X8, [X8 + 0x238]
	0x03CD6B60 STR X21, [X20 + 0x20]
	0x03CD6B64 MOV X1, X31
	0x03CD6B68 LDR X0, [X8]
	0x03CD6B6C BL 0x338C698
	0x03CD6B70 MOV X21, X0
	0x03CD6B74 CBZ X0, 0x3CD6B8C
	0x03CD6B78 LDR X8, [X20]
	0x03CD6B7C MOV X0, X21
	0x03CD6B80 LDR X1, [X8 + 0x40]
	0x03CD6B84 BL 0x1C16E00
	0x03CD6B88 CBZ X0, 0x3CD72B0
	0x03CD6B8C LDR W8, [X20 + 0x18]
	0x03CD6B90 CMP W8, 0x1
	0x03CD6B94 B.LS 0x3CD72AC
	0x03CD6B98 ADRP X8, 0x48C000
	0x03CD6B9C LDR X8, [X8 + 0x148]
	0x03CD6BA0 STR X21, [X20 + 0x28]
	0x03CD6BA4 ADRP X21, 0x48C000
	0x03CD6BA8 LDR X0, [X8]
	0x03CD6BAC LDR W8, [X0 + 0xE0]
	0x03CD6BB0 LDR X21, [X21 + 0x270]
	0x03CD6BB4 CBNZ W8, 0x3CD6BBC
	0x03CD6BB8 BL 0x1C16DFC
	0x03CD6BBC LDR X0, [X21]
	0x03CD6BC0 MOVZ W8, 0x43480000
	0x03CD6BC4 FMOV S0, W8
	0x03CD6BC8 MOV V1.16B, V0.16B
	0x03CD6BCC MOV X1, X20
	0x03CD6BD0 BL 0x3CD2B34
	0x03CD6BD4 LDR X8, [X23]
	0x03CD6BD8 MOV X20, X0
	0x03CD6BDC MOVZ W1, 0x2
	0x03CD6BE0 MOV X0, X8
	0x03CD6BE4 BL 0x1C16D6C
	0x03CD6BE8 LDR X8, [X22]
	0x03CD6BEC MOV X21, X0
	0x03CD6BF0 MOV X1, X31
	0x03CD6BF4 MOV X0, X8
	0x03CD6BF8 BL 0x338C698
	0x03CD6BFC CBZ X21, 0x3CD72A8
	0x03CD6C00 MOV X22, X0
	0x03CD6C04 CBZ X0, 0x3CD6C1C
	0x03CD6C08 LDR X8, [X21]
	0x03CD6C0C MOV X0, X22
	0x03CD6C10 LDR X1, [X8 + 0x40]
	0x03CD6C14 BL 0x1C16E00
	0x03CD6C18 CBZ X0, 0x3CD72B0
	0x03CD6C1C LDR W8, [X21 + 0x18]
	0x03CD6C20 CBZ W8, 0x3CD72AC
	0x03CD6C24 ADRP X8, 0x48C000
	0x03CD6C28 LDR X8, [X8 + 0x230]
	0x03CD6C2C STR X22, [X21 + 0x20]
	0x03CD6C30 MOV X1, X31
	0x03CD6C34 LDR X0, [X8]
	0x03CD6C38 BL 0x338C698
	0x03CD6C3C MOV X22, X0
	0x03CD6C40 CBZ X0, 0x3CD6C58
	0x03CD6C44 LDR X8, [X21]
	0x03CD6C48 MOV X0, X22
	0x03CD6C4C LDR X1, [X8 + 0x40]
	0x03CD6C50 BL 0x1C16E00
	0x03CD6C54 CBZ X0, 0x3CD72B0
	0x03CD6C58 LDR W8, [X21 + 0x18]
	0x03CD6C5C CMP W8, 0x1
	0x03CD6C60 B.LS 0x3CD72AC
	0x03CD6C64 ADRP X8, 0x482000
	0x03CD6C68 LDR X8, [X8 + 0x9D0]
	0x03CD6C6C STR X22, [X21 + 0x28]
	0x03CD6C70 ADRP X22, 0x483000
	0x03CD6C74 MOV X1, X20
	0x03CD6C78 LDR X0, [X8]
	0x03CD6C7C LDR X22, [X22 + 0xA48]
	0x03CD6C80 MOV X2, X21
	0x03CD6C84 BL 0x3CD2C94
	0x03CD6C88 LDR X8, [X23]
	0x03CD6C8C MOV X21, X0
	0x03CD6C90 MOVZ W1, 0x1
	0x03CD6C94 MOV X0, X8
	0x03CD6C98 BL 0x1C16D6C
	0x03CD6C9C LDR X8, [X22]
	0x03CD6CA0 MOV X22, X0
	0x03CD6CA4 MOV X1, X31
	0x03CD6CA8 MOV X0, X8
	0x03CD6CAC BL 0x338C698
	0x03CD6CB0 CBZ X22, 0x3CD72A8
	0x03CD6CB4 MOV X23, X0
	0x03CD6CB8 CBZ X0, 0x3CD6CD0
	0x03CD6CBC LDR X8, [X22]
	0x03CD6CC0 MOV X0, X23
	0x03CD6CC4 LDR X1, [X8 + 0x40]
	0x03CD6CC8 BL 0x1C16E00
	0x03CD6CCC CBZ X0, 0x3CD72B0
	0x03CD6CD0 LDR W8, [X22 + 0x18]
	0x03CD6CD4 CBZ W8, 0x3CD72AC
	0x03CD6CD8 ADRP X8, 0x482000
	0x03CD6CDC LDR X8, [X8 + 0x9F0]
	0x03CD6CE0 STR X23, [X22 + 0x20]
	0x03CD6CE4 MOV X1, X21
	0x03CD6CE8 MOV X2, X22
	0x03CD6CEC LDR X0, [X8]
	0x03CD6CF0 BL 0x3CD2C94
	0x03CD6CF4 LDR X8, [X19 + 0x30]
	0x03CD6CF8 LDP V2, V0, [X19 + 0x10]
	0x03CD6CFC LDR V1, [X19]
	0x03CD6D00 MOV X23, X0
	0x03CD6D04 ADD X0, X31, 0x40
	0x03CD6D08 STR X8, [X31 + 0x70]
	0x03CD6D0C STP V2, V0, [X31 + 0x50]
	0x03CD6D10 STR V1, [X31 + 0x4]
	0x03CD6D14 BL 0x3CD458C
	0x03CD6D18 CBZ X0, 0x3CD72A8
	0x03CD6D1C ADRP X8, 0x48C000
	0x03CD6D20 LDR X8, [X8 + 0x260]
	0x03CD6D24 ADRP X25, 0x47D000
	0x03CD6D28 MOV X2, X31
	0x03CD6D2C MOV X22, X0
	0x03CD6D30 LDR X1, [X8]
	0x03CD6D34 LDR X25, [X25 + 0xB40]
	0x03CD6D38 BL 0x3C38A84
	0x03CD6D3C MOV X0, X22
	0x03CD6D40 MOV X1, X20
	0x03CD6D44 BL 0x3CD2DBC
	0x03CD6D48 LDR X1, [X25]
	0x03CD6D4C MOV X0, X22
	0x03CD6D50 BL 0x21E52E4
	0x03CD6D54 ADRP X27, 0x703000
	0x03CD6D58 LDRB W8, [X27 + 0x78F]
	0x03CD6D5C MOV X24, X0
	0x03CD6D60 CBNZ W8, 0x3CD6D78
	0x03CD6D64 ADRP X0, 0x425000
	0x03CD6D68 LDR X0, [X0 + 0xF08]
	0x03CD6D6C BL 0x1C16CF4
	0x03CD6D70 MOVZ W8, 0x1
	0x03CD6D74 STRB W8, [X27 + 0x78F]
	0x03CD6D78 CBZ X24, 0x3CD72A8
	0x03CD6D7C ADRP X26, 0x425000
	0x03CD6D80 LDR X26, [X26 + 0xF08]
	0x03CD6D84 MOV X0, X24
	0x03CD6D88 MOV X1, X31
	0x03CD6D8C LDR X8, [X26]
	0x03CD6D90 LDR X8, [X8 + 0xB8]
	0x03CD6D94 LDP S0, S1, [X8]
	0x03CD6D98 BL 0x3C3E648
	0x03CD6D9C ADRP X29, 0x703000
	0x03CD6DA0 LDRB W8, [X29 + 0x78E]
	0x03CD6DA4 CBNZ W8, 0x3CD6DBC
	0x03CD6DA8 ADRP X0, 0x425000
	0x03CD6DAC LDR X0, [X0 + 0xF08]
	0x03CD6DB0 BL 0x1C16CF4
	0x03CD6DB4 MOVZ W8, 0x1
	0x03CD6DB8 STRB W8, [X29 + 0x78E]
	0x03CD6DBC LDR X8, [X26]
	0x03CD6DC0 MOV X0, X24
	0x03CD6DC4 MOV X1, X31
	0x03CD6DC8 LDR X8, [X8 + 0xB8]
	0x03CD6DCC LDP S0, S1, [X8 + 0x28]
	0x03CD6DD0 BL 0x3C3E764
	0x03CD6DD4 LDRB W8, [X27 + 0x78F]
	0x03CD6DD8 CBNZ W8, 0x3CD6DF0
	0x03CD6DDC ADRP X0, 0x425000
	0x03CD6DE0 LDR X0, [X0 + 0xF08]
	0x03CD6DE4 BL 0x1C16CF4
	0x03CD6DE8 MOVZ W8, 0x1
	0x03CD6DEC STRB W8, [X27 + 0x78F]
	0x03CD6DF0 LDR X8, [X26]
	0x03CD6DF4 MOV X0, X24
	0x03CD6DF8 MOV X1, X31
	0x03CD6DFC LDR X8, [X8 + 0xB8]
	0x03CD6E00 LDP S0, S1, [X8]
	0x03CD6E04 BL 0x3C3EAB8
	0x03CD6E08 MOV X0, X24
	0x03CD6E0C MOV X1, X31
	0x03CD6E10 BL 0x3C3E90C
	0x03CD6E14 FMOV S0, W31
	0x03CD6E18 MOV X0, X24
	0x03CD6E1C MOV X1, X31
	0x03CD6E20 BL 0x3C3E99C
	0x03CD6E24 LDR X8, [X19 + 0x30]
	0x03CD6E28 LDP V1, V0, [X19 + 0x10]
	0x03CD6E2C LDR V2, [X19]
	0x03CD6E30 ADD X0, X31, 0x0
	0x03CD6E34 STR X8, [X31 + 0x30]
	0x03CD6E38 STP V1, V0, [X31 + 0x10]
	0x03CD6E3C STR V2, [X31]
	0x03CD6E40 BL 0x3CD458C
	0x03CD6E44 CBZ X0, 0x3CD72A8
	0x03CD6E48 ADRP X8, 0x48C000
	0x03CD6E4C LDR X8, [X8 + 0x268]
	0x03CD6E50 ADRP X28, 0x482000
	0x03CD6E54 MOV X2, X31
	0x03CD6E58 MOV X24, X0
	0x03CD6E5C LDR X1, [X8]
	0x03CD6E60 LDR X28, [X28 + 0x990]
	0x03CD6E64 BL 0x3C38A84
	0x03CD6E68 MOV X0, X24
	0x03CD6E6C MOV X1, X20
	0x03CD6E70 BL 0x3CD2DBC
	0x03CD6E74 LDR X1, [X28]
	0x03CD6E78 MOV X0, X24
	0x03CD6E7C BL 0x21E52E4
	0x03CD6E80 CBZ X0, 0x3CD72A8
	0x03CD6E84 MOVZ W1, 0x2
	0x03CD6E88 MOVZ W2, 0x1
	0x03CD6E8C MOV X3, X31
	0x03CD6E90 MOVZ W28, 0x1
	0x03CD6E94 BL 0x3E3CDF0
	0x03CD6E98 LDR X1, [X25]
	0x03CD6E9C MOV X0, X24
	0x03CD6EA0 BL 0x21E52E4
	0x03CD6EA4 LDRB W8, [X29 + 0x78E]
	0x03CD6EA8 MOV X25, X0
	0x03CD6EAC CBNZ W8, 0x3CD6EC0
	0x03CD6EB0 ADRP X0, 0x425000
	0x03CD6EB4 LDR X0, [X0 + 0xF08]
	0x03CD6EB8 BL 0x1C16CF4
	0x03CD6EBC STRB W28, [X29 + 0x78E]
	0x03CD6EC0 CBZ X25, 0x3CD72A8
	0x03CD6EC4 LDR X8, [X26]
	0x03CD6EC8 MOV X0, X25
	0x03CD6ECC MOV X1, X31
	0x03CD6ED0 LDR X8, [X8 + 0xB8]
	0x03CD6ED4 LDP S0, S1, [X8 + 0x28]
	0x03CD6ED8 BL 0x3C3E648
	0x03CD6EDC ADRP X29, 0x70B000
	0x03CD6EE0 LDRB W8, [X29 + 0xA48]
	0x03CD6EE4 CBNZ W8, 0x3CD6EFC
	0x03CD6EE8 ADRP X0, 0x425000
	0x03CD6EEC LDR X0, [X0 + 0xF08]
	0x03CD6EF0 BL 0x1C16CF4
	0x03CD6EF4 MOVZ W8, 0x1
	0x03CD6EF8 STRB W8, [X29 + 0xA48]
	0x03CD6EFC LDR X8, [X26]
	0x03CD6F00 MOV X0, X25
	0x03CD6F04 MOV X1, X31
	0x03CD6F08 LDR X8, [X8 + 0xB8]
	0x03CD6F0C LDP S0, S1, [X8 + 0x8]
	0x03CD6F10 BL 0x3C3E764
	0x03CD6F14 LDRB W8, [X29 + 0xA48]
	0x03CD6F18 CBNZ W8, 0x3CD6F30
	0x03CD6F1C ADRP X0, 0x425000
	0x03CD6F20 LDR X0, [X0 + 0xF08]
	0x03CD6F24 BL 0x1C16CF4
	0x03CD6F28 MOVZ W8, 0x1
	0x03CD6F2C STRB W8, [X29 + 0xA48]
	0x03CD6F30 LDR X8, [X26]
	0x03CD6F34 MOV X0, X25
	0x03CD6F38 MOV X1, X31
	0x03CD6F3C LDR X8, [X8 + 0xB8]
	0x03CD6F40 LDP S0, S1, [X8 + 0x8]
	0x03CD6F44 BL 0x3C3EAB8
	0x03CD6F48 MOV X0, X25
	0x03CD6F4C MOV X1, X31
	0x03CD6F50 BL 0x3C3E90C
	0x03CD6F54 FMOV S1, W31
	0x03CD6F58 MOV X0, X25
	0x03CD6F5C MOV X1, X31
	0x03CD6F60 BL 0x3C3E99C
	0x03CD6F64 CBZ X21, 0x3CD72A8
	0x03CD6F68 ADRP X8, 0x47D000
	0x03CD6F6C LDR X8, [X8 + 0xB40]
	0x03CD6F70 MOV X0, X21
	0x03CD6F74 LDR X1, [X8]
	0x03CD6F78 BL 0x21E52E4
	0x03CD6F7C LDRB W8, [X27 + 0x78F]
	0x03CD6F80 MOV X25, X0
	0x03CD6F84 CBNZ W8, 0x3CD6F9C
	0x03CD6F88 ADRP X0, 0x425000
	0x03CD6F8C LDR X0, [X0 + 0xF08]
	0x03CD6F90 BL 0x1C16CF4
	0x03CD6F94 MOVZ W8, 0x1
	0x03CD6F98 STRB W8, [X27 + 0x78F]
	0x03CD6F9C CBZ X25, 0x3CD72A8
	0x03CD6FA0 LDR X8, [X26]
	0x03CD6FA4 MOV X0, X25
	0x03CD6FA8 MOV X1, X31
	0x03CD6FAC LDR X8, [X8 + 0xB8]
	0x03CD6FB0 LDP S0, S1, [X8]
	0x03CD6FB4 BL 0x3C3E648
	0x03CD6FB8 LDRB W8, [X29 + 0xA48]
	0x03CD6FBC CBNZ W8, 0x3CD6FD4
	0x03CD6FC0 ADRP X0, 0x425000
	0x03CD6FC4 LDR X0, [X0 + 0xF08]
	0x03CD6FC8 BL 0x1C16CF4
	0x03CD6FCC MOVZ W8, 0x1
	0x03CD6FD0 STRB W8, [X29 + 0xA48]
	0x03CD6FD4 LDR X8, [X26]
	0x03CD6FD8 MOV X0, X25
	0x03CD6FDC MOV X1, X31
	0x03CD6FE0 LDR X8, [X8 + 0xB8]
	0x03CD6FE4 LDP S0, S1, [X8 + 0x8]
	0x03CD6FE8 BL 0x3C3E764
	0x03CD6FEC LDRB W8, [X27 + 0x78F]
	0x03CD6FF0 CBNZ W8, 0x3CD7008
	0x03CD6FF4 ADRP X0, 0x425000
	0x03CD6FF8 LDR X0, [X0 + 0xF08]
	0x03CD6FFC BL 0x1C16CF4
	0x03CD7000 MOVZ W8, 0x1
	0x03CD7004 STRB W8, [X27 + 0x78F]
	0x03CD7008 LDR X8, [X26]
	0x03CD700C MOV X0, X25
	0x03CD7010 MOV X1, X31
	0x03CD7014 LDR X8, [X8 + 0xB8]
	0x03CD7018 LDP S0, S1, [X8]
	0x03CD701C BL 0x3C3E99C
	0x03CD7020 ADRP X27, 0x704000
	0x03CD7024 LDRB W8, [X27 + 0x7F6]
	0x03CD7028 CBNZ W8, 0x3CD7040
	0x03CD702C ADRP X0, 0x424000
	0x03CD7030 LDR X0, [X0 + 0xF08]
	0x03CD7034 BL 0x1C16CF4
	0x03CD7038 MOVZ W8, 0x1
	0x03CD703C STRB W8, [X27 + 0x7F6]
	0x03CD7040 LDR X8, [X26]
	0x03CD7044 MOV X0, X25
	0x03CD7048 MOV X1, X31
	0x03CD704C LDR X8, [X8 + 0xB8]
	0x03CD7050 LDP S0, S1, [X8 + 0x10]
	0x03CD7054 BL 0x3C3EAB8
	0x03CD7058 CBZ X23, 0x3CD72A8
	0x03CD705C ADRP X8, 0x47C000
	0x03CD7060 LDR X8, [X8 + 0xB40]
	0x03CD7064 MOV X0, X23
	0x03CD7068 LDR X1, [X8]
	0x03CD706C BL 0x21E52E4
	0x03CD7070 LDRB W8, [X27 + 0x7F6]
	0x03CD7074 MOV X23, X0
	0x03CD7078 CBNZ W8, 0x3CD7090
	0x03CD707C ADRP X0, 0x424000
	0x03CD7080 LDR X0, [X0 + 0xF08]
	0x03CD7084 BL 0x1C16CF4
	0x03CD7088 MOVZ W8, 0x1
	0x03CD708C STRB W8, [X27 + 0x7F6]
	0x03CD7090 CBZ X23, 0x3CD72A8
	0x03CD7094 LDR X8, [X26]
	0x03CD7098 MOV X0, X23
	0x03CD709C MOV X1, X31
	0x03CD70A0 LDR X8, [X8 + 0xB8]
	0x03CD70A4 LDP S0, S1, [X8 + 0x10]
	0x03CD70A8 BL 0x3C3E648
	0x03CD70AC LDRB W8, [X29 + 0xA48]
	0x03CD70B0 CBNZ W8, 0x3CD70C8
	0x03CD70B4 ADRP X0, 0x424000
	0x03CD70B8 LDR X0, [X0 + 0xF08]
	0x03CD70BC BL 0x1C16CF4
	0x03CD70C0 MOVZ W8, 0x1
	0x03CD70C4 STRB W8, [X29 + 0xA48]
	0x03CD70C8 LDR X8, [X26]
	0x03CD70CC MOV X0, X23
	0x03CD70D0 MOV X1, X31
	0x03CD70D4 LDR X8, [X8 + 0xB8]
	0x03CD70D8 LDP S0, S1, [X8 + 0x8]
	0x03CD70DC BL 0x3C3E764
	0x03CD70E0 MOVZ W8, 0x43960000
	0x03CD70E4 FMOV S0, W31
	0x03CD70E8 FMOV S1, W8
	0x03CD70EC MOV X0, X23
	0x03CD70F0 MOV X1, X31
	0x03CD70F4 BL 0x3C3E99C
	0x03CD70F8 LDRB W8, [X27 + 0x7F6]
	0x03CD70FC CBNZ W8, 0x3CD7114
	0x03CD7100 ADRP X0, 0x424000
	0x03CD7104 LDR X0, [X0 + 0xF08]
	0x03CD7108 BL 0x1C16CF4
	0x03CD710C MOVZ W8, 0x1
	0x03CD7110 STRB W8, [X27 + 0x7F6]
	0x03CD7114 LDR X8, [X26]
	0x03CD7118 MOV X0, X23
	0x03CD711C MOV X1, X31
	0x03CD7120 LDR X8, [X8 + 0xB8]
	0x03CD7124 LDP S0, S1, [X8 + 0x10]
	0x03CD7128 BL 0x3C3EAB8
	0x03CD712C CBZ X20, 0x3CD72A8
	0x03CD7130 ADRP X8, 0x48B000
	0x03CD7134 LDR X8, [X8 + 0x228]
	0x03CD7138 MOV X0, X20
	0x03CD713C LDR X1, [X8]
	0x03CD7140 BL 0x21E52E4
	0x03CD7144 CBZ X0, 0x3CD72A8
	0x03CD7148 ADRP X27, 0x472000
	0x03CD714C LDR X27, [X27 + 0x6D8]
	0x03CD7150 MOV X1, X25
	0x03CD7154 MOV X2, X31
	0x03CD7158 MOV X26, X0
	0x03CD715C STR X23, [X0 + 0x20]
	0x03CD7160 BL 0x3E3D2B8
	0x03CD7164 ADRP X23, 0x481000
	0x03CD7168 LDR X23, [X23 + 0x990]
	0x03CD716C MOV X0, X22
	0x03CD7170 LDR X1, [X23]
	0x03CD7174 BL 0x21E52E4
	0x03CD7178 MOV X1, X0
	0x03CD717C MOV X0, X26
	0x03CD7180 MOV X2, X31
	0x03CD7184 BL 0x3E3D37C
	0x03CD7188 LDR X1, [X23]
	0x03CD718C MOV X0, X24
	0x03CD7190 BL 0x21E52E4
	0x03CD7194 MOV X1, X0
	0x03CD7198 MOV X0, X26
	0x03CD719C MOV X2, X31
	0x03CD71A0 BL 0x3E3D500
	0x03CD71A4 MOVZ W1, 0x2
	0x03CD71A8 MOV X0, X26
	0x03CD71AC MOV X2, X31
	0x03CD71B0 BL 0x3E3D684
	0x03CD71B4 MOVZ W1, 0x2
	0x03CD71B8 MOV X0, X26
	0x03CD71BC MOV X2, X31
	0x03CD71C0 BL 0x3E3D694
	0x03CD71C4 FMOV S0, -3
	0x03CD71C8 MOV X0, X26
	0x03CD71CC MOV X1, X31
	0x03CD71D0 BL 0x3E3D6A4
	0x03CD71D4 FMOV S0, -3
	0x03CD71D8 MOV X0, X26
	0x03CD71DC MOV X1, X31
	0x03CD71E0 BL 0x3E3D73C
	0x03CD71E4 LDR X1, [X27]
	0x03CD71E8 MOV X0, X20
	0x03CD71EC BL 0x21E52E4
	0x03CD71F0 CBZ X0, 0x3CD72A8
	0x03CD71F4 LDR X1, [X19 + 0x8]
	0x03CD71F8 ADRP X23, 0x48B000
	0x03CD71FC LDR X23, [X23 + 0x220]
	0x03CD7200 MOV X22, X0
	0x03CD7204 BL 0x3CD3398
	0x03CD7208 MOVZ W1, 0x1
	0x03CD720C MOV X0, X22
	0x03CD7210 BL 0x3CD364C
	0x03CD7214 ADRP X8, 0x48B000
	0x03CD7218 LDR X8, [X8 + 0x148]
	0x03CD721C LDR X9, [X22]
	0x03CD7220 MOV X0, X22
	0x03CD7224 LDR X8, [X8]
	0x03CD7228 LDR X10, [X9 + 0x2A8]
	0x03CD722C LDR X1, [X9 + 0x2B0]
	0x03CD7230 LDR X8, [X8 + 0xB8]
	0x03CD7234 LDP S0, S1, [X8 + 0x30]
	0x03CD7238 LDP S2, S3, [X8 + 0x38]
	0x03CD723C BLR X10
	0x03CD7240 LDR X1, [X23]
	0x03CD7244 MOV X0, X21
	0x03CD7248 BL 0x21E52E4
	0x03CD724C CBZ X0, 0x3CD72A8
	0x03CD7250 MOV W1, W31
	0x03CD7254 MOV X2, X31
	0x03CD7258 BL 0x3E36440
	0x03CD725C LDR X1, [X27]
	0x03CD7260 MOV X0, X21
	0x03CD7264 BL 0x21E52E4
	0x03CD7268 CBZ X0, 0x3CD72A8
	0x03CD726C LDR X1, [X19 + 0x30]
	0x03CD7270 MOV X21, X0
	0x03CD7274 BL 0x3CD3398
	0x03CD7278 MOVZ W1, 0x1
	0x03CD727C MOV X0, X21
	0x03CD7280 BL 0x3CD364C
	0x03CD7284 MOV X0, X20
	0x03CD7288 LDP X20, X19, [X31 + 0xD0]
	0x03CD728C LDP X22, X21, [X31 + 0xC0]
	0x03CD7290 LDP X24, X23, [X31 + 0xB0]
	0x03CD7294 LDP X26, X25, [X31 + 0xA0]
	0x03CD7298 LDP X28, X27, [X31 + 0x90]
	0x03CD729C LDP X29, X30, [X31 + 0x80]
	0x03CD72A0 ADD X31, X31, 0xE0
	0x03CD72A4 RET
	0x03CD72A8 BL 0x1C16F20
	0x03CD72AC BL 0x1C16F28
	0x03CD72B0 BL 0x1C16F44
	0x03CD72B4 MOV X1, X31
	0x03CD72B8 BL 0x1C16DEC
	0x03CD72BC STR X30, [X31 - 0x20]!
	0x03CD72C0 STP X20, X19, [X31 + 0x10]
	0x03CD72C4 ADRP X20, 0x710000
	0x03CD72C8 ADRP X19, 0x48B000
	0x03CD72CC LDRB W8, [X20 + 0x466]
	0x03CD72D0 LDR X19, [X19 + 0x278]
	0x03CD72D4 TBNZ X8, 0x0, 0x3CD72F8
	0x03CD72D8 ADRP X0, 0x48B000
	0x03CD72DC LDR X0, [X0 + 0x148]
	0x03CD72E0 BL 0x1C16CF4
	0x03CD72E4 ADRP X0, 0x48B000
	0x03CD72E8 LDR X0, [X0 + 0x278]
	0x03CD72EC BL 0x1C16CF4
	0x03CD72F0 MOVZ W8, 0x1
	0x03CD72F4 STRB W8, [X20 + 0x466]
	0x03CD72F8 LDR X0, [X19]
	0x03CD72FC ADRP X20, 0x48B000
	0x03CD7300 LDR W8, [X0 + 0xE0]
	0x03CD7304 LDR X20, [X20 + 0x148]
	0x03CD7308 CBNZ W8, 0x3CD7314
	0x03CD730C BL 0x1C16DFC
	0x03CD7310 LDR X0, [X19]
	0x03CD7314 LDR X8, [X0 + 0xB8]
	0x03CD7318 LDR X9, [X20]
	0x03CD731C ADRP X10, 0xFFFFFFFFFCE16000
	0x03CD7320 LDR X8, [X8]
	0x03CD7324 LDR X9, [X9 + 0xB8]
	0x03CD7328 STR X8, [X9]
	0x03CD732C LDR X8, [X20]
	0x03CD7330 ADRP X9, 0xFFFFFFFFFCE16000
	0x03CD7334 LDR V0, [X9 + 0x548]
	0x03CD7338 LDP X20, X19, [X31 + 0x10]
	0x03CD733C LDR X9, [X8 + 0xB8]
	0x03CD7340 STR D0, [X9 + 0x8]
	0x03CD7344 LDR V0, [X10 + 0x498]
	0x03CD7348 LDR X9, [X8 + 0xB8]
	0x03CD734C MOVZ W10, 0x42C80000
	0x03CD7350 STR D0, [X9 + 0x10]
	0x03CD7354 LDR X9, [X8 + 0xB8]
	0x03CD7358 UNIMPLEMENTED
	0x03CD735C ADRP X10, 0xFFFFFFFFFCE15000
	0x03CD7360 STR D0, [X9 + 0x18]
	0x03CD7364 LDR X9, [X8 + 0xB8]
	0x03CD7368 FMOV V0.4S, 0x0
	0x03CD736C STR V0, [X9 + 0x2]
	0x03CD7370 LDR V0, [X10 + 0xF0]
	0x03CD7374 LDR X9, [X8 + 0xB8]
	0x03CD7378 ADRP X10, 0xFFFFFFFFFCE15000
	0x03CD737C STR V0, [X9 + 0x3]
	0x03CD7380 LDR X8, [X8 + 0xB8]
	0x03CD7384 LDR V0, [X10 + 0x91]
	0x03CD7388 STR V0, [X8 + 0x4]
	0x03CD738C LDR X30, [X31], #0x20
	0x03CD7390 RET
	0x03CD7394 STR X30, [X31 - 0x30]!
	0x03CD7398 STP X22, X21, [X31 + 0x10]
	0x03CD739C STP X20, X19, [X31 + 0x20]
	0x03CD73A0 ADRP X21, 0x710000
	0x03CD73A4 ADRP X22, 0x41C000
	0x03CD73A8 LDRB W8, [X21 + 0x467]
	0x03CD73AC LDR X22, [X22 + 0xA58]
	0x03CD73B0 MOV X19, X2
	0x03CD73B4 MOV X20, X1
	0x03CD73B8 TBNZ X8, 0x0, 0x3CD73D0
	0x03CD73BC ADRP X0, 0x41C000
	0x03CD73C0 LDR X0, [X0 + 0xA58]
	0x03CD73C4 BL 0x1C16CF4
	0x03CD73C8 MOVZ W8, 0x1
	0x03CD73CC STRB W8, [X21 + 0x467]
	0x03CD73D0 LDR X0, [X22]
	0x03CD73D4 BL 0x1C16F10
	0x03CD73D8 MOV X1, X20
	0x03CD73DC MOV X2, X19
	0x03CD73E0 MOV X3, X31
	0x03CD73E4 MOV X21, X0
	0x03CD73E8 BL 0x3C35A8C
	0x03CD73EC MOV X0, X21
	0x03CD73F0 LDP X20, X19, [X31 + 0x20]
	0x03CD73F4 LDP X22, X21, [X31 + 0x10]
	0x03CD73F8 LDR X30, [X31], #0x30
	0x03CD73FC RET
	0x03CD7400 MOV X1, X31
	0x03CD7404 B 0x33BDD8C
	0x03CD7408 STR X30, [X31 - 0x20]!
	0x03CD740C STP X20, X19, [X31 + 0x10]
	0x03CD7410 ADRP X19, 0x710000
	0x03CD7414 ADRP X20, 0x48B000
	0x03CD7418 LDRB W8, [X19 + 0x468]
	0x03CD741C LDR X20, [X20 + 0x278]
	0x03CD7420 TBNZ X8, 0x0, 0x3CD7438
	0x03CD7424 ADRP X0, 0x48B000
	0x03CD7428 LDR X0, [X0 + 0x278]
	0x03CD742C BL 0x1C16CF4
	0x03CD7430 MOVZ W8, 0x1
	0x03CD7434 STRB W8, [X19 + 0x468]
	0x03CD7438 LDR X0, [X20]
	0x03CD743C BL 0x1C16F10
	0x03CD7440 MOV X1, X31
	0x03CD7444 MOV X19, X0
	0x03CD7448 BL 0x33BDD8C
	0x03CD744C LDR X8, [X20]
	0x03CD7450 LDR X8, [X8 + 0xB8]
	0x03CD7454 STR X19, [X8]
	0x03CD7458 LDP X20, X19, [X31 + 0x10]
	0x03CD745C LDR X30, [X31], #0x20
	0x03CD7460 RET
	0x03CD7464 LDR X0, [X0 + 0x100]
	0x03CD7468 RET
	0x03CD746C LDR X0, [X0 + 0x108]
	0x03CD7470 RET
	0x03CD7474 LDR X0, [X0 + 0x110]
	0x03CD7478 RET
	0x03CD747C STR X1, [X0 + 0x110]
	0x03CD7480 B 0x3CD6808
	0x03CD7484 LDR X0, [X0 + 0x118]
	0x03CD7488 RET
	0x03CD748C LDR X0, [X0 + 0x120]
	0x03CD7490 RET
	0x03CD7494 STR X1, [X0 + 0x120]
	0x03CD7498 B 0x3CD6808
	0x03CD749C STR X30, [X31 - 0x10]!
	0x03CD74A0 LDR X8, [X0 + 0x130]
	0x03CD74A4 CBZ X8, 0x3CD74B4
	0x03CD74A8 STR X1, [X8 + 0x10]
	0x03CD74AC LDR X30, [X31], #0x10
	0x03CD74B0 B 0x3CD6808
	0x03CD74B4 BL 0x1C16F20
	0x03CD74B8 LDR X0, [X0 + 0x138]
	0x03CD74BC RET
	0x03CD74C0 STR X1, [X0 + 0x138]
	0x03CD74C4 RET
	0x03CD74C8 LDR V0, [X0 + 0x140]
	0x03CD74CC RET
	0x03CD74D0 STR S0, [X0 + 0x140]
	0x03CD74D4 RET
	0x03CD74D8 LDR W0, [X0 + 0x128]
	0x03CD74DC RET
	0x03CD74E0 MOVZ W2, 0x1
	0x03CD74E4 B 0x3CD74E8
	0x03CD74E8 STP X30, X23, [X31 - 0x30]!
	0x03CD74EC STP X22, X21, [X31 + 0x10]
	0x03CD74F0 STP X20, X19, [X31 + 0x20]
	0x03CD74F4 ADRP X22, 0x710000
	0x03CD74F8 ADRP X23, 0x41C000
	0x03CD74FC LDRB W8, [X22 + 0x469]
	0x03CD7500 LDR X23, [X23 + 0x970]
	0x03CD7504 MOV W20, W2
	0x03CD7508 MOV W21, W1
	0x03CD750C MOV X19, X0
	0x03CD7510 TBNZ X8, 0x0, 0x3CD754C
	0x03CD7514 ADRP X0, 0x41C000
	0x03CD7518 LDR X0, [X0 + 0x970]
	0x03CD751C BL 0x1C16CF4
	0x03CD7520 ADRP X0, 0x48B000
	0x03CD7524 LDR X0, [X0 + 0x250]
	0x03CD7528 BL 0x1C16CF4
	0x03CD752C ADRP X0, 0x481000
	0x03CD7530 LDR X0, [X0 + 0xA28]
	0x03CD7534 BL 0x1C16CF4
	0x03CD7538 ADRP X0, 0x481000
	0x03CD753C LDR X0, [X0 + 0xA30]
	0x03CD7540 BL 0x1C16CF4
	0x03CD7544 MOVZ W8, 0x1
	0x03CD7548 STRB W8, [X22 + 0x469]
	0x03CD754C LDR X0, [X23]
	0x03CD7550 LDR W8, [X0 + 0xE0]
	0x03CD7554 CBNZ W8, 0x3CD755C
	0x03CD7558 BL 0x1C16DFC
	0x03CD755C MOV X0, X31
	0x03CD7560 BL 0x3C018E4
	0x03CD7564 TBZ X0, 0x0, 0x3CD7590
	0x03CD7568 LDR W8, [X19 + 0x128]
	0x03CD756C CMP W8, W21
	0x03CD7570 B.EQ 0x3CD7608
	0x03CD7574 LDR X8, [X19 + 0x130]
	0x03CD7578 CBZ X8, 0x3CD7618
	0x03CD757C LDR X9, [X8 + 0x10]
	0x03CD7580 CBZ X9, 0x3CD7618
	0x03CD7584 LDR W9, [X9 + 0x18]
	0x03CD7588 CBNZ W9, 0x3CD7598
	0x03CD758C B 0x3CD7608
	0x03CD7590 LDR X8, [X19 + 0x130]
	0x03CD7594 CBZ X8, 0x3CD7618
	0x03CD7598 LDR X8, [X8 + 0x10]
	0x03CD759C CBZ X8, 0x3CD7618
	0x03CD75A0 LDR W8, [X8 + 0x18]
	0x03CD75A4 MOV X0, X19
	0x03CD75A8 SUB W8, W8, 0x1
	0x03CD75AC CMP W8, W21
	0x03CD75B0 CSEL W8, W8, W21, LT
	0x03CD75B4 CMP W21, 0x0
	0x03CD75B8 CSEL W8, W31, W8, LT
	0x03CD75BC STR W8, [X19 + 0x128]
	0x03CD75C0 BL 0x3CD6808
	0x03CD75C4 TBZ X20, 0x0, 0x3CD7608
	0x03CD75C8 ADRP X8, 0x481000
	0x03CD75CC LDR X8, [X8 + 0xA30]
	0x03CD75D0 MOV X1, X19
	0x03CD75D4 MOV X2, X31
	0x03CD75D8 LDR X0, [X8]
	0x03CD75DC BL 0x3E252BC
	0x03CD75E0 LDR X0, [X19 + 0x138]
	0x03CD75E4 CBZ X0, 0x3CD7618
	0x03CD75E8 ADRP X8, 0x481000
	0x03CD75EC LDR W1, [X19 + 0x128]
	0x03CD75F0 LDR X8, [X8 + 0xA28]
	0x03CD75F4 LDP X20, X19, [X31 + 0x20]
	0x03CD75F8 LDP X22, X21, [X31 + 0x10]
	0x03CD75FC LDR X2, [X8]
	0x03CD7600 LDP X30, X23, [X31], #0x30
	0x03CD7604 B 0x272947C
	0x03CD7608 LDP X20, X19, [X31 + 0x20]
	0x03CD760C LDP X22, X21, [X31 + 0x10]
	0x03CD7610 LDP X30, X23, [X31], #0x30
	0x03CD7614 RET
	0x03CD7618 BL 0x1C16F20
	0x03CD761C MOV W2, W31
	0x03CD7620 B 0x3CD74E8
	0x03CD7624 STP X30, X25, [X31 - 0x40]!
	0x03CD7628 STP X24, X23, [X31 + 0x10]
	0x03CD762C STP X22, X21, [X31 + 0x20]
	0x03CD7630 STP X20, X19, [X31 + 0x30]
	0x03CD7634 ADRP X20, 0x710000
	0x03CD7638 ADRP X25, 0x48B000
	0x03CD763C ADRP X24, 0x48B000
	0x03CD7640 ADRP X23, 0x48B000
	0x03CD7644 ADRP X22, 0x48B000
	0x03CD7648 ADRP X21, 0x481000
	0x03CD764C LDRB W8, [X20 + 0x46A]
	0x03CD7650 LDR X25, [X25 + 0x280]
	0x03CD7654 LDR X24, [X24 + 0x288]
	0x03CD7658 LDR X23, [X23 + 0x290]
	0x03CD765C LDR X22, [X22 + 0x298]
	0x03CD7660 LDR X21, [X21 + 0xA58]
	0x03CD7664 MOV X19, X0
	0x03CD7668 TBNZ X8, 0x0, 0x3CD76B0
	0x03CD766C ADRP X0, 0x48B000
	0x03CD7670 LDR X0, [X0 + 0x288]
	0x03CD7674 BL 0x1C16CF4
	0x03CD7678 ADRP X0, 0x48B000
	0x03CD767C LDR X0, [X0 + 0x298]
	0x03CD7680 BL 0x1C16CF4
	0x03CD7684 ADRP X0, 0x48B000
	0x03CD7688 LDR X0, [X0 + 0x290]
	0x03CD768C BL 0x1C16CF4
	0x03CD7690 ADRP X0, 0x48B000
	0x03CD7694 LDR X0, [X0 + 0x280]
	0x03CD7698 BL 0x1C16CF4
	0x03CD769C ADRP X0, 0x481000
	0x03CD76A0 LDR X0, [X0 + 0xA58]
	0x03CD76A4 BL 0x1C16CF4
	0x03CD76A8 MOVZ W8, 0x1
	0x03CD76AC STRB W8, [X20 + 0x46A]
	0x03CD76B0 LDR X0, [X25]
	0x03CD76B4 BL 0x1C16F10
	0x03CD76B8 MOV X20, X0
	0x03CD76BC BL 0x3CD7728
	0x03CD76C0 STR X20, [X19 + 0x130]
	0x03CD76C4 LDR X0, [X24]
	0x03CD76C8 BL 0x1C16F10
	0x03CD76CC MOV X20, X0
	0x03CD76D0 BL 0x3CD77A8
	0x03CD76D4 MOVZ W8, 0x999A
	0x03CD76D8 MOVK W8, 0x3E190000
	0x03CD76DC STR X20, [X19 + 0x138]
	0x03CD76E0 STR W8, [X19 + 0x140]
	0x03CD76E4 LDR X0, [X23]
	0x03CD76E8 BL 0x1C16F10
	0x03CD76EC LDR X1, [X22]
	0x03CD76F0 MOV X20, X0
	0x03CD76F4 BL 0x301B7C4
	0x03CD76F8 STR X20, [X19 + 0x158]
	0x03CD76FC LDR X0, [X21]
	0x03CD7700 LDR W8, [X0 + 0xE0]
	0x03CD7704 CBNZ W8, 0x3CD770C
	0x03CD7708 BL 0x1C16DFC
	0x03CD770C MOV X0, X19
	0x03CD7710 LDP X20, X19, [X31 + 0x30]
	0x03CD7714 LDP X22, X21, [X31 + 0x20]
	0x03CD7718 LDP X24, X23, [X31 + 0x10]
	0x03CD771C MOV X1, X31
	0x03CD7720 LDP X30, X25, [X31], #0x40
	0x03CD7724 B 0x3E3B678
	0x03CD7728 STR X30, [X31 - 0x30]!
	0x03CD772C STP X22, X21, [X31 + 0x10]
	0x03CD7730 STP X20, X19, [X31 + 0x20]
	0x03CD7734 ADRP X22, 0x710000
	0x03CD7738 ADRP X21, 0x443000
	0x03CD773C ADRP X20, 0x443000
	0x03CD7740 LDRB W8, [X22 + 0x485]
	0x03CD7744 LDR X21, [X21 + 0xCD0]
	0x03CD7748 LDR X20, [X20 + 0xCD8]
	0x03CD774C MOV X19, X0
	0x03CD7750 TBNZ X8, 0x0, 0x3CD7774
	0x03CD7754 ADRP X0, 0x443000
	0x03CD7758 LDR X0, [X0 + 0xCD8]
	0x03CD775C BL 0x1C16CF4
	0x03CD7760 ADRP X0, 0x443000
	0x03CD7764 LDR X0, [X0 + 0xCD0]
	0x03CD7768 BL 0x1C16CF4
	0x03CD776C MOVZ W8, 0x1
	0x03CD7770 STRB W8, [X22 + 0x485]
	0x03CD7774 MOV X0, X19
	0x03CD7778 MOV X1, X31
	0x03CD777C BL 0x33BDD8C
	0x03CD7780 LDR X0, [X21]
	0x03CD7784 BL 0x1C16F10
	0x03CD7788 LDR X1, [X20]
	0x03CD778C MOV X20, X0
	0x03CD7790 BL 0x301B7C4
	0x03CD7794 STR X20, [X19 + 0x10]
	0x03CD7798 LDP X20, X19, [X31 + 0x20]
	0x03CD779C LDP X22, X21, [X31 + 0x10]
	0x03CD77A0 LDR X30, [X31], #0x30
	0x03CD77A4 RET
	0x03CD77A8 STP X30, X21, [X31 - 0x20]!
	0x03CD77AC STP X20, X19, [X31 + 0x10]
	0x03CD77B0 ADRP X20, 0x710000
	0x03CD77B4 ADRP X21, 0x481000
	0x03CD77B8 LDRB W8, [X20 + 0x486]
	0x03CD77BC LDR X21, [X21 + 0xA70]
	0x03CD77C0 MOV X19, X0
	0x03CD77C4 TBNZ X8, 0x0, 0x3CD77DC
	0x03CD77C8 ADRP X0, 0x481000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D9
	003 Move [X31+136], D8
	004 Move [X31+144], X29
	005 Move [X31+152], X30
	006 Move [X31+160], X28
	007 Move [X31+168], X27
	008 Move [X31+176], X26
	009 Move [X31+184], X25
	010 Move [X31+192], X24
	011 Move [X31+200], X23
	012 Move [X31+208], X22
	013 Move [X31+216], X21
	014 Move [X31+224], X20
	015 Move [X31+232], X19
	016 Move X19, 0x712000
	017 Move X26, 0x48D000
	018 Move W8, [X19+1124]
	019 Move X26, [X26+328]
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {129}
	025 Move X0, 0x48D000
	026 Move X0, [X0+328]
	027 Call 0x1C17CF4
	028 Move X0, 0x48D000
	029 Move X0, [X0+528]
	030 Call 0x1C17CF4
	031 Move X0, 0x48D000
	032 Move X0, [X0+536]
	033 Call 0x1C17CF4
	034 Move X0, 0x474000
	035 Move X0, [X0+1752]
	036 Call 0x1C17CF4
	037 Move X0, 0x48D000
	038 Move X0, [X0+544]
	039 Call 0x1C17CF4
	040 Move X0, 0x47E000
	041 Move X0, [X0+2880]
	042 Call 0x1C17CF4
	043 Move X0, 0x48D000
	044 Move X0, [X0+552]
	045 Call 0x1C17CF4
	046 Move X0, 0x483000
	047 Move X0, [X0+2448]
	048 Call 0x1C17CF4
	049 Move X0, 0x47E000
	050 Move X0, [X0+3272]
	051 Call 0x1C17CF4
	052 Move X0, 0x48D000
	053 Move X0, [X0+480]
	054 Call 0x1C17CF4
	055 Move X0, 0x474000
	056 Move X0, [X0+1760]
	057 Call 0x1C17CF4
	058 Move X0, 0x445000
	059 Move X0, [X0+3320]
	060 Call 0x1C17CF4
	061 Move X0, 0x48D000
	062 Move X0, [X0+560]
	063 Call 0x1C17CF4
	064 Move X0, 0x445000
	065 Move X0, [X0+3296]
	066 Call 0x1C17CF4
	067 Move X0, 0x484000
	068 Move X0, [X0+2632]
	069 Call 0x1C17CF4
	070 Move X0, 0x48D000
	071 Move X0, [X0+568]
	072 Call 0x1C17CF4
	073 Move X0, 0x48D000
	074 Move X0, [X0+376]
	075 Call 0x1C17CF4
	076 Move X0, 0x48D000
	077 Move X0, [X0+488]
	078 Call 0x1C17CF4
	079 Move X0, 0x426000
	080 Move X0, [X0+3168]
	081 Call 0x1C17CF4
	082 Move X0, 0x41E000
	083 Move X0, [X0+1728]
	084 Call 0x1C17CF4
	085 Move X0, 0x48D000
	086 Move X0, [X0+576]
	087 Call 0x1C17CF4
	088 Move X0, 0x483000
	089 Move X0, [X0+2472]
	090 Call 0x1C17CF4
	091 Move X0, 0x483000
	092 Move X0, [X0+2480]
	093 Call 0x1C17CF4
	094 Move X0, 0x483000
	095 Move X0, [X0+2488]
	096 Call 0x1C17CF4
	097 Move X0, 0x483000
	098 Move X0, [X0+2496]
	099 Call 0x1C17CF4
	100 Move X0, 0x483000
	101 Move X0, [X0+2504]
	102 Call 0x1C17CF4
	103 Move X0, 0x483000
	104 Move X0, [X0+2512]
	105 Call 0x1C17CF4
	106 Move X0, 0x483000
	107 Move X0, [X0+2520]
	108 Call 0x1C17CF4
	109 Move X0, 0x483000
	110 Move X0, [X0+2528]
	111 Call 0x1C17CF4
	112 Move X0, 0x483000
	113 Move X0, [X0+2536]
	114 Call 0x1C17CF4
	115 Move X0, 0x483000
	116 Move X0, [X0+2544]
	117 Call 0x1C17CF4
	118 Move X0, 0x483000
	119 Move X0, [X0+2552]
	120 Call 0x1C17CF4
	121 Move X0, 0x483000
	122 Move X0, [X0+2560]
	123 Call 0x1C17CF4
	124 Move X0, 0x483000
	125 Move X0, [X0+2296]
	126 Call 0x1C17CF4
	127 Move W8, 1
	128 Move [X19+1124], W8
	129 Move X0, [X26]
	130 Move X24, 0x426000
	131 Move X25, 0x474000
	132 Move X19, 0x41E000
	133 Move W8, [X0+224]
	134 Move X24, [X24+3168]
	135 Move X25, [X25+1760]
	136 Move X19, [X19+1728]
	137 Compare W8, 0
	138 JumpIfNotEqual {141}
	139 Call 0x1C17DFC
	140 Move X0, [X26]
	141 Move X8, [X0+184]
	142 Move X0, [X24]
	143 Move W1, 2
	144 Move S8, [X8+8]
	145 Move S9, [X8+12]
	146 Call 0x1C17D6C
	147 Move X8, [X19]
	148 Move X20, [X25]
	149 Move X19, X0
	150 Move W9, [X8+224]
	151 Compare W9, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X8
	154 Call 0x1C17DFC
	155 Move X0, X20
	156 Move X1, X31
	157 Call Type.GetTypeFromHandle, X0
	158 Compare X19, 0
	159 JumpIfEqual {1286}
	160 Move X20, X0
	161 Compare X0, 0
	162 JumpIfEqual {169}
	163 Move X8, [X19]
	164 Move X0, X20
	165 Move X1, [X8+64]
	166 Call 0x1C17E00
	167 Compare X0, 0
	168 JumpIfEqual {1288}
	169 Move W8, [X19+24]
	170 Compare W8, 0
	171 JumpIfEqual {1287}
	172 Move X8, 0x48D000
	173 Move X8, [X8+528]
	174 Move [X19+32], X20
	175 Move X1, X31
	176 Move X0, [X8]
	177 Call Type.GetTypeFromHandle, X0
	178 Move X20, X0
	179 Compare X0, 0
	180 JumpIfEqual {187}
	181 Move X8, [X19]
	182 Move X0, X20
	183 Move X1, [X8+64]
	184 Call 0x1C17E00
	185 Compare X0, 0
	186 JumpIfEqual {1288}
	187 Move W8, [X19+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, 0x48D000
	190 Move X8, [X8+576]
	191 Move [X19+40], X20
	192 Move X28, 0x48D000
	193 Move V0, V8
	194 Move X0, [X8]
	195 Move X28, [X28+376]
	196 Move V1, V9
	197 Move X1, X19
	198 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	199 Move X8, [X24]
	200 Move X29, X0
	201 Move W1, 1
	202 Move X0, X8
	203 Call 0x1C17D6C
	204 Move X8, [X28]
	205 Move X20, X0
	206 Move X1, X31
	207 Move X0, X8
	208 Call Type.GetTypeFromHandle, X0
	209 Compare X20, 0
	210 JumpIfEqual {1286}
	211 Move X22, X0
	212 Compare X0, 0
	213 JumpIfEqual {220}
	214 Move X8, [X20]
	215 Move X0, X22
	216 Move X1, [X8+64]
	217 Call 0x1C17E00
	218 Compare X0, 0
	219 JumpIfEqual {1288}
	220 Move W8, [X20+24]
	221 Compare W8, 0
	222 JumpIfEqual {1287}
	223 Move X8, 0x483000
	224 Move X8, [X8+2496]
	225 Move [X20+32], X22
	226 Move X1, X29
	227 Move X2, X20
	228 Move X0, [X8]
	229 Call DefaultControls.CreateUIObject, X0, X1, X2
	230 Move X8, [X24]
	231 Move X19, X0
	232 Move W1, 1
	233 Move X0, X8
	234 Call 0x1C17D6C
	235 Move X8, [X25]
	236 Move X20, X0
	237 Move X1, X31
	238 Move X0, X8
	239 Call Type.GetTypeFromHandle, X0
	240 Compare X20, 0
	241 JumpIfEqual {1286}
	242 Move X22, X0
	243 Compare X0, 0
	244 JumpIfEqual {251}
	245 Move X8, [X20]
	246 Move X0, X22
	247 Move X1, [X8+64]
	248 Call 0x1C17E00
	249 Compare X0, 0
	250 JumpIfEqual {1288}
	251 Move W8, [X20+24]
	252 Compare W8, 0
	253 JumpIfEqual {1287}
	254 Move X8, 0x483000
	255 Move X8, [X8+2504]
	256 Move [X20+32], X22
	257 Move X1, X29
	258 Move X2, X20
	259 Move X0, [X8]
	260 Call DefaultControls.CreateUIObject, X0, X1, X2
	261 Move X8, [X24]
	262 Move X27, X0
	263 Move W1, 2
	264 Move X0, X8
	265 Call 0x1C17D6C
	266 Move X8, [X25]
	267 Move X20, X0
	268 Move X1, X31
	269 Move X0, X8
	270 Call Type.GetTypeFromHandle, X0
	271 Compare X20, 0
	272 JumpIfEqual {1286}
	273 Move X22, X0
	274 Compare X0, 0
	275 JumpIfEqual {282}
	276 Move X8, [X20]
	277 Move X0, X22
	278 Move X1, [X8+64]
	279 Call 0x1C17E00
	280 Compare X0, 0
	281 JumpIfEqual {1288}
	282 Move W8, [X20+24]
	283 Compare W8, 0
	284 JumpIfEqual {1287}
	285 Move X8, 0x48D000
	286 Move X8, [X8+568]
	287 Move [X20+32], X22
	288 Move X1, X31
	289 Move X0, [X8]
	290 Call Type.GetTypeFromHandle, X0
	291 Move X22, X0
	292 Compare X0, 0
	293 JumpIfEqual {300}
	294 Move X8, [X20]
	295 Move X0, X22
	296 Move X1, [X8+64]
	297 Call 0x1C17E00
	298 Compare X0, 0
	299 JumpIfEqual {1288}
	300 Move W8, [X20+24]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X8, 0x483000
	303 Move X8, [X8+2552]
	304 Move [X20+40], X22
	305 Move X1, X29
	306 Move X2, X20
	307 Move X0, [X8]
	308 Call DefaultControls.CreateUIObject, X0, X1, X2
	309 Move X8, [X24]
	310 Move X20, X0
	311 Move W1, 2
	312 Move X0, X8
	313 Call 0x1C17D6C
	314 Move X8, [X25]
	315 Move X22, X0
	316 Move X1, X31
	317 Move X0, X8
	318 Call Type.GetTypeFromHandle, X0
	319 Compare X22, 0
	320 JumpIfEqual {1286}
	321 Move X23, X0
	322 Compare X0, 0
	323 JumpIfEqual {330}
	324 Move X8, [X22]
	325 Move X0, X23
	326 Move X1, [X8+64]
	327 Call 0x1C17E00
	328 Compare X0, 0
	329 JumpIfEqual {1288}
	330 Move W8, [X22+24]
	331 Compare W8, 0
	332 JumpIfEqual {1287}
	333 Move X8, 0x48D000
	334 Move X8, [X8+560]
	335 Move [X22+32], X23
	336 Move X1, X31
	337 Move X0, [X8]
	338 Call Type.GetTypeFromHandle, X0
	339 Move X23, X0
	340 Compare X0, 0
	341 JumpIfEqual {348}
	342 Move X8, [X22]
	343 Move X0, X23
	344 Move X1, [X8+64]
	345 Call 0x1C17E00
	346 Compare X0, 0
	347 JumpIfEqual {1288}
	348 Move W8, [X22+24]
	349 Move [X31+8], X19
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X8, 0x483000
	352 Move X8, [X8+2512]
	353 Move [X22+40], X23
	354 Move X19, 0x484000
	355 Move X1, X20
	356 Move X0, [X8]
	357 Move X19, [X19+2632]
	358 Move X2, X22
	359 Call DefaultControls.CreateUIObject, X0, X1, X2
	360 Move X8, [X24]
	361 Move [X31+56], X0
	362 Move W1, 1
	363 Move X0, X8
	364 Call 0x1C17D6C
	365 Move X8, [X19]
	366 Move X22, X0
	367 Move X1, X31
	368 Move X0, X8
	369 Call Type.GetTypeFromHandle, X0
	370 Compare X22, 0
	371 JumpIfEqual {1286}
	372 Move X23, X0
	373 Compare X0, 0
	374 JumpIfEqual {381}
	375 Move X8, [X22]
	376 Move X0, X23
	377 Move X1, [X8+64]
	378 Call 0x1C17E00
	379 Compare X0, 0
	380 JumpIfEqual {1288}
	381 Move W8, [X22+24]
	382 Compare W8, 0
	383 JumpIfEqual {1287}
	384 Move X8, 0x483000
	385 Move X8, [X8+2544]
	386 Move [X22+32], X23
	387 Move X19, 0x48D000
	388 Move X2, X22
	389 Move X0, [X8]
	390 Move X19, [X19+488]
	391 Move X1, [X31+56]
	392 Call DefaultControls.CreateUIObject, X0, X1, X2
	393 Move X8, [X24]
	394 Move [X31+48], X0
	395 Move W1, 1
	396 Move X0, X8
	397 Call 0x1C17D6C
	398 Move X8, [X19]
	399 Move X22, X0
	400 Move X1, X31
	401 Move X0, X8
	402 Call Type.GetTypeFromHandle, X0
	403 Compare X22, 0
	404 JumpIfEqual {1286}
	405 Move X23, X0
	406 Compare X0, 0
	407 JumpIfEqual {414}
	408 Move X8, [X22]
	409 Move X0, X23
	410 Move X1, [X8+64]
	411 Call 0x1C17E00
	412 Compare X0, 0
	413 JumpIfEqual {1288}
	414 Move W8, [X22+24]
	415 Compare W8, 0
	416 JumpIfEqual {1287}
	417 Move X8, 0x483000
	418 Move X8, [X8+2536]
	419 Move [X22+32], X23
	420 Move X1, [X31+48]
	421 Move X2, X22
	422 Move X0, [X8]
	423 Call DefaultControls.CreateUIObject, X0, X1, X2
	424 Move X8, [X24]
	425 Move X19, X0
	426 Move W1, 1
	427 Move X0, X8
	428 Call 0x1C17D6C
	429 Move X8, [X25]
	430 Move X22, X0
	431 Move X1, X31
	432 Move X0, X8
	433 Call Type.GetTypeFromHandle, X0
	434 Compare X22, 0
	435 JumpIfEqual {1286}
	436 Move X23, X0
	437 Compare X0, 0
	438 JumpIfEqual {445}
	439 Move X8, [X22]
	440 Move X0, X23
	441 Move X1, [X8+64]
	442 Call 0x1C17E00
	443 Compare X0, 0
	444 JumpIfEqual {1288}
	445 Move W8, [X22+24]
	446 Compare W8, 0
	447 JumpIfEqual {1287}
	448 Move X8, 0x483000
	449 Move X8, [X8+2560]
	450 Move [X22+32], X23
	451 Move X1, X19
	452 Move X2, X22
	453 Move X0, [X8]
	454 Call DefaultControls.CreateUIObject, X0, X1, X2
	455 Move X8, [X24]
	456 Move [X31+32], X0
	457 Move W1, 1
	458 Move X0, X8
	459 Call 0x1C17D6C
	460 Move X8, [X25]
	461 Move X22, X0
	462 Move X1, X31
	463 Move X0, X8
	464 Call Type.GetTypeFromHandle, X0
	465 Compare X22, 0
	466 JumpIfEqual {1286}
	467 Move X23, X0
	468 Compare X0, 0
	469 JumpIfEqual {476}
	470 Move X8, [X22]
	471 Move X0, X23
	472 Move X1, [X8+64]
	473 Call 0x1C17E00
	474 Compare X0, 0
	475 JumpIfEqual {1288}
	476 Move W8, [X22+24]
	477 Compare W8, 0
	478 JumpIfEqual {1287}
	479 Move X8, 0x483000
	480 Move X8, [X8+2472]
	481 Move [X22+32], X23
	482 Move X1, X19
	483 Move X2, X22
	484 Move X0, [X8]
	485 Call DefaultControls.CreateUIObject, X0, X1, X2
	486 Move X8, [X24]
	487 Move [X31+16], X0
	488 Move W1, 1
	489 Move X0, X8
	490 Call 0x1C17D6C
	491 Move X8, [X28]
	492 Move X22, X0
	493 Move X1, X31
	494 Move X0, X8
	495 Call Type.GetTypeFromHandle, X0
	496 Compare X22, 0
	497 JumpIfEqual {1286}
	498 Move X23, X0
	499 Compare X0, 0
	500 JumpIfEqual {507}
	501 Move X8, [X22]
	502 Move X0, X23
	503 Move X1, [X8+64]
	504 Call 0x1C17E00
	505 Compare X0, 0
	506 JumpIfEqual {1288}
	507 Move W8, [X22+24]
	508 Compare W8, 0
	509 JumpIfEqual {1287}
	510 Move X8, 0x483000
	511 Move X8, [X8+2528]
	512 Move [X22+32], X23
	513 Move X1, X19
	514 Move X2, X22
	515 Move X0, [X8]
	516 Move [X31+24], X19
	517 Call DefaultControls.CreateUIObject, X0, X1, X2
	518 Move X8, [X21+48]
	519 Move V2, [X21+16]
	520 Move V0, [X21+32]
	521 Move V1, [X21]
	522 Move X28, X0
	523 Add X0, X31, 64
	524 Move [X31+112], X8
	525 Move [X31+80], V2
	526 Move [X31+88], V0
	527 Move [X31+4], V1
	528 Call DefaultControls.CreateScrollbar, X0
	529 Compare X0, 0
	530 JumpIfEqual {1286}
	531 Move X8, 0x483000
	532 Move X8, [X8+2296]
	533 Move X19, 0x483000
	534 Move X2, X31
	535 Move X22, X0
	536 Move X1, [X8]
	537 Move X19, [X19+2448]
	538 Call Object.set_name, X0, X1
	539 Move X0, X22
	540 Move X1, X20
	541 Call DefaultControls.SetParentAndAlign, X0, X1
	542 Move X1, [X19]
	543 Move X0, X22
	544 Call 0x21E62E4, X0
	545 Compare X0, 0
	546 JumpIfEqual {1286}
	547 Move X19, 0x47E000
	548 Move X19, [X19+2880]
	549 Move W1, 2
	550 Move W2, 1
	551 Move X3, X31
	552 Move X23, X0
	553 Move W24, 1
	554 Call Scrollbar.SetDirection, X0, X1, X2
	555 Move X1, [X19]
	556 Move X0, X22
	557 Call 0x21E62E4, X0
	558 Move X25, 0x704000
	559 Move W8, [X25+1934]
	560 Move X22, X0
	561 Compare W8, 0
	562 JumpIfNotEqual {567}
	563 Move X0, 0x426000
	564 Move X0, [X0+3848]
	565 Call 0x1C17CF4
	566 Move [X25+1934], W24
	567 Compare X22, 0
	568 JumpIfEqual {1286}
	569 Move X19, 0x426000
	570 Move X19, [X19+3848]
	571 Move X0, X22
	572 Move X1, X31
	573 Move X8, [X19]
	574 Move X8, [X8+184]
	575 Move S0, [X8+40]
	576 Move S1, [X8+44]
	577 Call RectTransform.set_anchorMin, X0, X1
	578 Move X24, 0x70C000
	579 Move W8, [X24+2632]
	580 Compare W8, 0
	581 JumpIfNotEqual {587}
	582 Move X0, 0x426000
	583 Move X0, [X0+3848]
	584 Call 0x1C17CF4
	585 Move W8, 1
	586 Move [X24+2632], W8
	587 Move X8, [X19]
	588 Move X0, X22
	589 Move X1, X31
	590 Move X8, [X8+184]
	591 Move S0, [X8+8]
	592 Move S1, [X8+12]
	593 Call RectTransform.set_anchorMax, X0, X1
	594 Move W8, [X24+2632]
	595 Compare W8, 0
	596 JumpIfNotEqual {602}
	597 Move X0, 0x426000
	598 Move X0, [X0+3848]
	599 Call 0x1C17CF4
	600 Move W8, 1
	601 Move [X24+2632], W8
	602 Move X8, [X19]
	603 Move X0, X22
	604 Move X1, X31
	605 Move X8, [X8+184]
	606 Move S0, [X8+8]
	607 Move S1, [X8+12]
	608 Call RectTransform.set_pivot, X0, X1
	609 Move X0, X22
	610 Move X1, X31
	611 Call RectTransform.get_sizeDelta, X0
	612 Move S1, W31
	613 Move X0, X22
	614 Move X1, X31
	615 Call RectTransform.set_sizeDelta, X0, X1
	616 Compare X28, 0
	617 JumpIfEqual {1286}
	618 Move X8, 0x47E000
	619 Move X8, [X8+3272]
	620 Move X0, X28
	621 Move X1, [X8]
	622 Call 0x21E62E4, X0
	623 Move X22, X0
	624 Call DefaultControls.SetDefaultTextValues, X0
	625 Compare X22, 0
	626 JumpIfEqual {1286}
	627 Move W1, 3
	628 Move X0, X22
	629 Move X2, X31
	630 Move [X31], X28
	631 Call Text.set_alignment, X0, X1
	632 Move X0, [X31+32]
	633 Compare X0, 0
	634 JumpIfEqual {1286}
	635 Move X28, 0x474000
	636 Move X28, [X28+1752]
	637 Move X1, [X28]
	638 Call 0x21E62E4, X0
	639 Compare X0, 0
	640 JumpIfEqual {1286}
	641 Move X8, [X0]
	642 Move S3, 1
	643 Move X24, X0
	644 Move X9, [X8+680]
	645 Move X1, [X8+688]
	646 Move X8, -52342784
	647 Move V0, [X8+476]
	648 Move V1, V0
	649 Move V2, V0
	650 NotImplemented "Instruction BLR not yet implemented."
	651 Move X0, [X31+16]
	652 Compare X0, 0
	653 JumpIfEqual {1286}
	654 Move X1, [X28]
	655 Move X19, X26
	656 Call 0x21E62E4, X0
	657 Compare X0, 0
	658 JumpIfEqual {1286}
	659 Move X1, [X21+32]
	660 Move X25, X0
	661 Move X26, X29
	662 Call Image.set_sprite, X0, X1
	663 Move X0, [X31+24]
	664 Compare X0, 0
	665 JumpIfEqual {1286}
	666 Move X8, 0x48D000
	667 Move X8, [X8+480]
	668 Move X1, [X8]
	669 Call 0x21E62E4, X0
	670 Compare X0, 0
	671 JumpIfEqual {1286}
	672 Move X1, X24
	673 Move X2, X31
	674 Move X29, X0
	675 Call Selectable.set_targetGraphic, X0, X1
	676 Move W1, 1
	677 Move X0, X29
	678 Move X2, X31
	679 Move [X29+264], X25
	680 Call Toggle.set_isOn, X0, X1
	681 Compare X20, 0
	682 JumpIfEqual {1286}
	683 Move X1, [X28]
	684 Move X0, X20
	685 Call 0x21E62E4, X0
	686 Compare X0, 0
	687 JumpIfEqual {1286}
	688 Move X1, [X21]
	689 Move X25, 0x48D000
	690 Move X25, [X25+552]
	691 Move X24, X0
	692 Move X29, X26
	693 Call Image.set_sprite, X0, X1
	694 Move W1, 1
	695 Move X0, X24
	696 Call Image.set_type, X0, X1
	697 Move X1, [X25]
	698 Move X0, X20
	699 Call 0x21E62E4, X0
	700 Move X24, X0
	701 Move X0, [X31+48]
	702 Move [X31+40], X20
	703 Compare X0, 0
	704 JumpIfEqual {1286}
	705 Move X25, 0x47E000
	706 Move X25, [X25+2880]
	707 Move X26, X19
	708 Move X1, [X25]
	709 Call 0x21E62E4, X0
	710 Move X19, [X31+8]
	711 Compare X24, 0
	712 JumpIfEqual {1286}
	713 Move X20, [X31+56]
	714 Move [X24+32], X0
	715 Compare X20, 0
	716 JumpIfEqual {1286}
	717 Move X1, [X25]
	718 Move X25, 0x48D000
	719 Move X25, [X25+544]
	720 Move X0, X20
	721 Call 0x21E62E4, X0
	722 Move X1, X0
	723 Move X0, X24
	724 Move X2, X31
	725 Call ScrollRect.set_viewport, X0, X1
	726 Move W8, 2
	727 Move X0, X24
	728 Move X1, X23
	729 Move X2, X31
	730 Move [X24+40], W31
	731 Move [X24+44], W8
	732 Call ScrollRect.set_verticalScrollbar, X0, X1
	733 Move W1, 2
	734 Move X0, X24
	735 Move X2, X31
	736 Call ScrollRect.set_verticalScrollbarVisibility, X0, X1
	737 Move S0, -3
	738 Move X0, X24
	739 Move X1, X31
	740 Call ScrollRect.set_verticalScrollbarSpacing, X0, V0
	741 Move X1, [X25]
	742 Move X0, X20
	743 Call 0x21E62E4, X0
	744 Compare X0, 0
	745 JumpIfEqual {1286}
	746 Move W1, W31
	747 Move X2, X31
	748 Call Mask.set_showMaskGraphic, X0, X1
	749 Move X1, [X28]
	750 Move X0, X20
	751 Call 0x21E62E4, X0
	752 Compare X0, 0
	753 JumpIfEqual {1286}
	754 Move X1, [X21+48]
	755 Move X23, X0
	756 Call Image.set_sprite, X0, X1
	757 Move W1, 1
	758 Move X0, X23
	759 Call Image.set_type, X0, X1
	760 Move X20, 0x47D000
	761 Move X20, [X20+2880]
	762 Compare X19, 0
	763 JumpIfEqual {1286}
	764 Move X8, 0x47D000
	765 Move X8, [X8+3272]
	766 Move X0, X19
	767 Move X1, [X8]
	768 Call 0x21E62E4, X0
	769 Move X23, X0
	770 Call DefaultControls.SetDefaultTextValues, X0
	771 Compare X23, 0
	772 JumpIfEqual {1286}
	773 Move W1, 3
	774 Move X0, X23
	775 Move X2, X31
	776 Call Text.set_alignment, X0, X1
	777 Compare X27, 0
	778 JumpIfEqual {1286}
	779 Move X1, [X28]
	780 Move X0, X27
	781 Call 0x21E62E4, X0
	782 Compare X0, 0
	783 JumpIfEqual {1286}
	784 Move X1, [X21+40]
	785 Call Image.set_sprite, X0, X1
	786 Compare X29, 0
	787 JumpIfEqual {1286}
	788 Move X1, [X28]
	789 Move X0, X29
	790 Call 0x21E62E4, X0
	791 Compare X0, 0
	792 JumpIfEqual {1286}
	793 Move X1, [X21]
	794 Move X21, 0x48C000
	795 Move X21, [X21+536]
	796 Move X24, X0
	797 Call Image.set_sprite, X0, X1
	798 Move X8, [X26]
	799 Move X9, [X24]
	800 Move X0, X24
	801 Move X8, [X8+184]
	802 Move X10, [X9+680]
	803 Move X1, [X9+688]
	804 Move S0, [X8+32]
	805 Move S1, [X8+36]
	806 Move S2, [X8+40]
	807 Move S3, [X8+44]
	808 NotImplemented "Instruction BLR not yet implemented."
	809 Move W1, 1
	810 Move X0, X24
	811 Call Image.set_type, X0, X1
	812 Move X1, [X21]
	813 Move X0, X29
	814 Call 0x21E62E4, X0
	815 Compare X0, 0
	816 JumpIfEqual {1286}
	817 Move X28, 0x482000
	818 Move X28, [X28+2480]
	819 Move X1, X24
	820 Move X2, X31
	821 Move X21, X0
	822 Call Selectable.set_targetGraphic, X0, X1
	823 Move X0, X21
	824 Call DefaultControls.SetDefaultColorTransitionValues, X0
	825 Move X1, [X20]
	826 Move X0, [X31+40]
	827 Call 0x21E62E4, X0
	828 Move [X21+256], X0
	829 Move X0, X21
	830 Call Dropdown.RefreshShownValue, X0
	831 Move X0, X21
	832 Move [X21+264], X23
	833 Call Dropdown.RefreshShownValue, X0
	834 Move X0, X21
	835 Move [X21+280], X22
	836 Call Dropdown.RefreshShownValue, X0
	837 Move X8, [X22]
	838 Move X1, [X28]
	839 Move X0, X22
	840 Move X9, [X8+1512]
	841 Move X2, [X8+1520]
	842 NotImplemented "Instruction BLR not yet implemented."
	843 Move X8, [X21+304]
	844 Compare X8, 0
	845 JumpIfEqual {1286}
	846 Move X25, 0x444000
	847 Move X25, [X25+3296]
	848 Move X22, [X8+16]
	849 Move X0, [X25]
	850 Call 0x1C17F10
	851 Move X1, X31
	852 Move X23, X0
	853 Call Object..ctor, X0
	854 Compare X23, 0
	855 JumpIfEqual {1286}
	856 Move X8, [X28]
	857 Move [X23+16], X8
	858 Compare X22, 0
	859 JumpIfEqual {1286}
	860 Move X24, 0x444000
	861 Move X24, [X24+3320]
	862 Move W10, [X22+28]
	863 Move X8, [X22+16]
	864 Move X26, [X31]
	865 Move X9, [X24]
	866 Add W10, W10, 1
	867 Move [X22+28], W10
	868 Compare X8, 0
	869 JumpIfEqual {1286}
	870 NotImplemented "Instruction LDRSW not yet implemented."
	871 Move W11, [X8+24]
	872 NotImplemented "Instruction CMP not yet implemented."
	873 Add W9, W10, 1
	874 Add X8, X8, X10
	875 Move [X22+24], W9
	876 Move [X8+32], X23
	877 Move X8, [X9+32]
	878 Move X0, X22
	879 Move X1, X23
	880 Move X8, [X8+192]
	881 Move X2, [X8+112]
	882 Call List`1<Object>.AddWithResize, X0, X1
	883 Move X8, [X21+304]
	884 Compare X8, 0
	885 JumpIfEqual {1286}
	886 Move X0, [X25]
	887 Move X22, [X8+16]
	888 Call 0x1C17F10
	889 Move X1, X31
	890 Move X23, X0
	891 Call Object..ctor, X0
	892 Compare X23, 0
	893 JumpIfEqual {1286}
	894 Move X8, 0x482000
	895 Move X8, [X8+2520]
	896 Move X8, [X8]
	897 Move [X23+16], X8
	898 Compare X22, 0
	899 JumpIfEqual {1286}
	900 Move W10, [X22+28]
	901 Move X8, [X22+16]
	902 Move X9, [X24]
	903 Add W10, W10, 1
	904 Move [X22+28], W10
	905 Compare X8, 0
	906 JumpIfEqual {1286}
	907 NotImplemented "Instruction LDRSW not yet implemented."
	908 Move W11, [X8+24]
	909 NotImplemented "Instruction CMP not yet implemented."
	910 Add W9, W10, 1
	911 Add X8, X8, X10
	912 Move [X22+24], W9
	913 Move [X8+32], X23
	914 Move X8, [X9+32]
	915 Move X0, X22
	916 Move X1, X23
	917 Move X8, [X8+192]
	918 Move X2, [X8+112]
	919 Call List`1<Object>.AddWithResize, X0, X1
	920 Move X8, [X21+304]
	921 Compare X8, 0
	922 JumpIfEqual {1286}
	923 Move X0, [X25]
	924 Move X22, [X8+16]
	925 Call 0x1C17F10
	926 Move X1, X31
	927 Move X23, X0
	928 Call Object..ctor, X0
	929 Compare X23, 0
	930 JumpIfEqual {1286}
	931 Move X8, 0x482000
	932 Move X8, [X8+2488]
	933 Move X25, 0x47D000
	934 Move X8, [X8]
	935 Move [X23+16], X8
	936 Move X25, [X25+2880]
	937 Compare X22, 0
	938 JumpIfEqual {1286}
	939 Move W10, [X22+28]
	940 Move X8, [X22+16]
	941 Move X9, [X24]
	942 Add W10, W10, 1
	943 Move [X22+28], W10
	944 Compare X8, 0
	945 JumpIfEqual {1286}
	946 NotImplemented "Instruction LDRSW not yet implemented."
	947 Move W11, [X8+24]
	948 Move X20, 0x425000
	949 Move X20, [X20+3848]
	950 Move X24, 0x70B000
	951 NotImplemented "Instruction CMP not yet implemented."
	952 Add W9, W10, 1
	953 Add X8, X8, X10
	954 Move [X22+24], W9
	955 Move [X8+32], X23
	956 Move X8, [X9+32]
	957 Move X0, X22
	958 Move X1, X23
	959 Move X8, [X8+192]
	960 Move X2, [X8+112]
	961 Call List`1<Object>.AddWithResize, X0, X1
	962 Move X0, X21
	963 Call Dropdown.RefreshShownValue, X0
	964 Move X1, [X25]
	965 Move X0, X19
	966 Call 0x21E62E4, X0
	967 Move X22, 0x703000
	968 Move W8, [X22+1935]
	969 Move X21, X0
	970 Compare W8, 0
	971 JumpIfNotEqual {977}
	972 Move X0, 0x425000
	973 Move X0, [X0+3848]
	974 Call 0x1C17CF4
	975 Move W8, 1
	976 Move [X22+1935], W8
	977 Move X19, [X31+24]
	978 Compare X21, 0
	979 JumpIfEqual {1286}
	980 Move X8, [X20]
	981 Move X0, X21
	982 Move X1, X31
	983 Move X8, [X8+184]
	984 Move S0, [X8]
	985 Move S1, [X8+4]
	986 Call RectTransform.set_anchorMin, X0, X1
	987 Move W8, [X24+2632]
	988 Compare W8, 0
	989 JumpIfNotEqual {995}
	990 Move X0, 0x425000
	991 Move X0, [X0+3848]
	992 Call 0x1C17CF4
	993 Move W8, 1
	994 Move [X24+2632], W8
	995 Move X8, [X20]
	996 Move X0, X21
	997 Move X1, X31
	998 Move X8, [X8+184]
	999 Move S0, [X8+8]
	1000 Move S1, [X8+12]
	1001 Call RectTransform.set_anchorMax, X0, X1
	1002 Move S0, 10
	1003 Move S1, 6
	1004 Move X0, X21
	1005 Move X1, X31
	1006 Call RectTransform.set_offsetMin, X0, X1
	1007 Move S0, -25
	1008 Move S1, -7
	1009 Move X0, X21
	1010 Move X1, X31
	1011 Call RectTransform.set_offsetMax, X0, X1
	1012 Move X1, [X25]
	1013 Move X0, X27
	1014 Call 0x21E62E4, X0
	1015 Compare X0, 0
	1016 JumpIfEqual {1286}
	1017 Move S0, 1
	1018 Move S1, 0.5
	1019 Move X1, X31
	1020 Move X21, X0
	1021 Call RectTransform.set_anchorMin, X0, X1
	1022 Move S0, 1
	1023 Move S1, 0.5
	1024 Move X0, X21
	1025 Move X1, X31
	1026 Call RectTransform.set_anchorMax, X0, X1
	1027 Move S0, 20
	1028 Move S1, 20
	1029 Move X0, X21
	1030 Move X1, X31
	1031 Call RectTransform.set_sizeDelta, X0, X1
	1032 Move S0, -15
	1033 Move S1, W31
	1034 Move X0, X21
	1035 Move X1, X31
	1036 Call RectTransform.set_anchoredPosition, X0, X1
	1037 Move X1, [X25]
	1038 Move X0, [X31+40]
	1039 Call 0x21E62E4, X0
	1040 Compare X0, 0
	1041 JumpIfEqual {1286}
	1042 Move S0, W31
	1043 Move S1, W31
	1044 Move X1, X31
	1045 Move X21, X0
	1046 Call RectTransform.set_anchorMin, X0, X1
	1047 Move S0, 1
	1048 Move S1, W31
	1049 Move X0, X21
	1050 Move X1, X31
	1051 Call RectTransform.set_anchorMax, X0, X1
	1052 Move S0, 0.5
	1053 Move S1, 1
	1054 Move X0, X21
	1055 Move X1, X31
	1056 Call RectTransform.set_pivot, X0, X1
	1057 Move S0, W31
	1058 Move S1, 2
	1059 Move X0, X21
	1060 Move X1, X31
	1061 Call RectTransform.set_anchoredPosition, X0, X1
	1062 Move W8, 0x43160000
	1063 Move S0, W31
	1064 Move S1, W8
	1065 Move X0, X21
	1066 Move X1, X31
	1067 Call RectTransform.set_sizeDelta, X0, X1
	1068 Move X1, [X25]
	1069 Move X0, [X31+56]
	1070 Call 0x21E62E4, X0
	1071 Compare X0, 0
	1072 JumpIfEqual {1286}
	1073 Move S0, W31
	1074 Move S1, W31
	1075 Move X1, X31
	1076 Move X21, X0
	1077 Call RectTransform.set_anchorMin, X0, X1
	1078 Move S0, 1
	1079 Move S1, 1
	1080 Move X0, X21
	1081 Move X1, X31
	1082 Call RectTransform.set_anchorMax, X0, X1
	1083 Move S0, -18
	1084 Move S1, W31
	1085 Move X0, X21
	1086 Move X1, X31
	1087 Call RectTransform.set_sizeDelta, X0, X1
	1088 Move S0, W31
	1089 Move S1, 1
	1090 Move X0, X21
	1091 Move X1, X31
	1092 Call RectTransform.set_pivot, X0, X1
	1093 Move X1, [X25]
	1094 Move X0, [X31+48]
	1095 Call 0x21E62E4, X0
	1096 Compare X0, 0
	1097 JumpIfEqual {1286}
	1098 Move S0, W31
	1099 Move S1, 1
	1100 Move X1, X31
	1101 Move X21, X0
	1102 Call RectTransform.set_anchorMin, X0, X1
	1103 Move S0, 1
	1104 Move S1, 1
	1105 Move X0, X21
	1106 Move X1, X31
	1107 Call RectTransform.set_anchorMax, X0, X1
	1108 Move S0, 0.5
	1109 Move S1, 1
	1110 Move X0, X21
	1111 Move X1, X31
	1112 Call RectTransform.set_pivot, X0, X1
	1113 Move S0, W31
	1114 Move S1, W31
	1115 Move X0, X21
	1116 Move X1, X31
	1117 Call RectTransform.set_anchoredPosition, X0, X1
	1118 Move S0, W31
	1119 Move S1, 28
	1120 Move X0, X21
	1121 Move X1, X31
	1122 Call RectTransform.set_sizeDelta, X0, X1
	1123 Move X1, [X25]
	1124 Move X0, X19
	1125 Call 0x21E62E4, X0
	1126 Compare X0, 0
	1127 JumpIfEqual {1286}
	1128 Move S0, W31
	1129 Move S1, 0.5
	1130 Move X1, X31
	1131 Move X21, X0
	1132 Call RectTransform.set_anchorMin, X0, X1
	1133 Move S0, 1
	1134 Move S1, 0.5
	1135 Move X0, X21
	1136 Move X1, X31
	1137 Call RectTransform.set_anchorMax, X0, X1
	1138 Move S0, W31
	1139 Move S1, 20
	1140 Move X0, X21
	1141 Move X1, X31
	1142 Call RectTransform.set_sizeDelta, X0, X1
	1143 Move X1, [X25]
	1144 Move X0, [X31+32]
	1145 Call 0x21E62E4, X0
	1146 Move W8, [X22+1935]
	1147 Move X21, X0
	1148 Compare W8, 0
	1149 JumpIfNotEqual {1155}
	1150 Move X0, 0x425000
	1151 Move X0, [X0+3848]
	1152 Call 0x1C17CF4
	1153 Move W8, 1
	1154 Move [X22+1935], W8
	1155 Compare X21, 0
	1156 JumpIfEqual {1286}
	1157 Move X8, [X20]
	1158 Move X0, X21
	1159 Move X1, X31
	1160 Move X8, [X8+184]
	1161 Move S0, [X8]
	1162 Move S1, [X8+4]
	1163 Call RectTransform.set_anchorMin, X0, X1
	1164 Move W8, [X24+2632]
	1165 Compare W8, 0
	1166 JumpIfNotEqual {1172}
	1167 Move X0, 0x425000
	1168 Move X0, [X0+3848]
	1169 Call 0x1C17CF4
	1170 Move W8, 1
	1171 Move [X24+2632], W8
	1172 Move X8, [X20]
	1173 Move X0, X21
	1174 Move X1, X31
	1175 Move X8, [X8+184]
	1176 Move S0, [X8+8]
	1177 Move S1, [X8+12]
	1178 Call RectTransform.set_anchorMax, X0, X1
	1179 Move W8, [X22+1935]
	1180 Compare W8, 0
	1181 JumpIfNotEqual {1187}
	1182 Move X0, 0x425000
	1183 Move X0, [X0+3848]
	1184 Call 0x1C17CF4
	1185 Move W8, 1
	1186 Move [X22+1935], W8
	1187 Move X8, [X20]
	1188 Move X0, X21
	1189 Move X1, X31
	1190 Move X8, [X8+184]
	1191 Move S0, [X8]
	1192 Move S1, [X8+4]
	1193 Call RectTransform.set_sizeDelta, X0, X1
	1194 Move X1, [X25]
	1195 Move X0, [X31+16]
	1196 Call 0x21E62E4, X0
	1197 Compare X0, 0
	1198 JumpIfEqual {1286}
	1199 Move S0, W31
	1200 Move S1, 0.5
	1201 Move X1, X31
	1202 Move X21, X0
	1203 Call RectTransform.set_anchorMin, X0, X1
	1204 Move S0, W31
	1205 Move S1, 0.5
	1206 Move X0, X21
	1207 Move X1, X31
	1208 Call RectTransform.set_anchorMax, X0, X1
	1209 Move S0, 20
	1210 Move S1, 20
	1211 Move X0, X21
	1212 Move X1, X31
	1213 Call RectTransform.set_sizeDelta, X0, X1
	1214 Move S0, 10
	1215 Move S1, W31
	1216 Move X0, X21
	1217 Move X1, X31
	1218 Call RectTransform.set_anchoredPosition, X0, X1
	1219 Move X1, [X25]
	1220 Move X0, X26
	1221 Call 0x21E62E4, X0
	1222 Move W8, [X22+1935]
	1223 Move X21, X0
	1224 Compare W8, 0
	1225 JumpIfNotEqual {1231}
	1226 Move X0, 0x425000
	1227 Move X0, [X0+3848]
	1228 Call 0x1C17CF4
	1229 Move W8, 1
	1230 Move [X22+1935], W8
	1231 Compare X21, 0
	1232 JumpIfEqual {1286}
	1233 Move X8, [X20]
	1234 Move X0, X21
	1235 Move X1, X31
	1236 Move X8, [X8+184]
	1237 Move S0, [X8]
	1238 Move S1, [X8+4]
	1239 Call RectTransform.set_anchorMin, X0, X1
	1240 Move W8, [X24+2632]
	1241 Compare W8, 0
	1242 JumpIfNotEqual {1248}
	1243 Move X0, 0x425000
	1244 Move X0, [X0+3848]
	1245 Call 0x1C17CF4
	1246 Move W8, 1
	1247 Move [X24+2632], W8
	1248 Move X8, [X20]
	1249 Move X0, X21
	1250 Move X1, X31
	1251 Move X8, [X8+184]
	1252 Move S0, [X8+8]
	1253 Move S1, [X8+12]
	1254 Call RectTransform.set_anchorMax, X0, X1
	1255 Move S0, 20
	1256 Move S1, 1
	1257 Move X0, X21
	1258 Move X1, X31
	1259 Call RectTransform.set_offsetMin, X0, X1
	1260 Move S0, -10
	1261 Move S1, -2
	1262 Move X0, X21
	1263 Move X1, X31
	1264 Call RectTransform.set_offsetMax, X0, X1
	1265 Move X0, [X31+40]
	1266 Move W1, W31
	1267 Move X2, X31
	1268 Call GameObject.SetActive, X0, X1
	1269 Move X0, X29
	1270 Move X20, [X31+224]
	1271 Move X19, [X31+232]
	1272 Move X22, [X31+208]
	1273 Move X21, [X31+216]
	1274 Move X24, [X31+192]
	1275 Move X23, [X31+200]
	1276 Move X26, [X31+176]
	1277 Move X25, [X31+184]
	1278 Move X28, [X31+160]
	1279 Move X27, [X31+168]
	1280 Move X29, [X31+144]
	1281 Move X30, [X31+152]
	1282 Move D9, [X31+128]
	1283 Move D8, [X31+136]
	1284 Add X31, X31, 240
	1285 Return X0
	1286 Call 0x1C17F20
	1287 Call 0x1C17F28
	1288 Call 0x1C17F44
	1289 Move X1, X31
	1290 Call 0x1C17DEC

Method: UnityEngine.GameObject CreateScrollView(UnityEngine.UI.DefaultControls/Resources resources)

Disassembly:
	0x03CD79E4 BL 0x3C354F8
	0x03CD79E8 TBZ X0, 0x0, 0x3CD7A04
	0x03CD79EC LDR X8, [X19]
	0x03CD79F0 LDR X1, [X19 + 0x150]
	0x03CD79F4 MOV X0, X19
	0x03CD79F8 LDR X9, [X8 + 0x418]
	0x03CD79FC LDR X2, [X8 + 0x420]
	0x03CD7A00 BLR X9
	0x03CD7A04 STR X31, [X19 + 0x150]
	0x03CD7A08 MOV X0, X19
	0x03CD7A0C LDP X20, X19, [X31 + 0x10]
	0x03CD7A10 MOV X1, X31
	0x03CD7A14 LDP X30, X21, [X31], #0x20
	0x03CD7A18 B 0x3E3BD80
	0x03CD7A1C STR X30, [X31 - 0x40]!
	0x03CD7A20 STP X24, X23, [X31 + 0x10]
	0x03CD7A24 STP X22, X21, [X31 + 0x20]
	0x03CD7A28 STP X20, X19, [X31 + 0x30]
	0x03CD7A2C ADRP X20, 0x710000
	0x03CD7A30 LDRB W8, [X20 + 0x480]
	0x03CD7A34 MOV X19, X0
	0x03CD7A38 TBNZ X8, 0x0, 0x3CD7A74
	0x03CD7A3C ADRP X0, 0x48B000
	0x03CD7A40 LDR X0, [X0 + 0x2B8]
	0x03CD7A44 BL 0x1C16CF4
	0x03CD7A48 ADRP X0, 0x48B000
	0x03CD7A4C LDR X0, [X0 + 0x2C0]
	0x03CD7A50 BL 0x1C16CF4
	0x03CD7A54 ADRP X0, 0x48B000
	0x03CD7A58 LDR X0, [X0 + 0x2C8]
	0x03CD7A5C BL 0x1C16CF4
	0x03CD7A60 ADRP X0, 0x41C000
	0x03CD7A64 LDR X0, [X0 + 0x598]
	0x03CD7A68 BL 0x1C16CF4
	0x03CD7A6C MOVZ W8, 0x1
	0x03CD7A70 STRB W8, [X20 + 0x480]
	0x03CD7A74 LDR X0, [X19 + 0x158]
	0x03CD7A78 CBZ X0, 0x3CD7B10
	0x03CD7A7C LDR W8, [X0 + 0x18]
	0x03CD7A80 ADRP X23, 0x48B000
	0x03CD7A84 ADRP X22, 0x41C000
	0x03CD7A88 LDR X23, [X23 + 0x2C8]
	0x03CD7A8C LDR X22, [X22 + 0x598]
	0x03CD7A90 MOV W20, W31
	0x03CD7A94 BIC W24, W8, W8, 0x1F
	0x03CD7A98 CMP W24, W20
	0x03CD7A9C B.EQ 0x3CD7B14
	0x03CD7AA0 LDR X2, [X23]
	0x03CD7AA4 MOV W1, W20
	0x03CD7AA8 BL 0x301BCCC
	0x03CD7AAC LDR X8, [X22]
	0x03CD7AB0 MOV X21, X0
	0x03CD7AB4 LDR W9, [X8 + 0xE0]
	0x03CD7AB8 CBNZ W9, 0x3CD7AC4
	0x03CD7ABC MOV X0, X8
	0x03CD7AC0 BL 0x1C16DFC
	0x03CD7AC4 MOV X0, X21
	0x03CD7AC8 MOV X1, X31
	0x03CD7ACC MOV X2, X31
	0x03CD7AD0 BL 0x3C354F8
	0x03CD7AD4 TBZ X0, 0x0, 0x3CD7B04
	0x03CD7AD8 LDR X0, [X19 + 0x158]
	0x03CD7ADC CBZ X0, 0x3CD7B10
	0x03CD7AE0 LDR X2, [X23]
	0x03CD7AE4 MOV W1, W20
	0x03CD7AE8 BL 0x301BCCC
	0x03CD7AEC LDR X8, [X19]
	0x03CD7AF0 MOV X1, X0
	0x03CD7AF4 MOV X0, X19
	0x03CD7AF8 LDR X9, [X8 + 0x458]
	0x03CD7AFC LDR X2, [X8 + 0x460]
	0x03CD7B00 BLR X9
	0x03CD7B04 LDR X0, [X19 + 0x158]
	0x03CD7B08 ADD W20, W20, 0x1
	0x03CD7B0C CBNZ X0, 0x3CD7A98
	0x03CD7B10 BL 0x1C16F20
	0x03CD7B14 LDP W2, W8, [X0 + 0x18]
	0x03CD7B18 ADD W8, W8, 0x1
	0x03CD7B1C CMP W2, 0x1
	0x03CD7B20 STP W31, W8, [X0 + 0x18]
	0x03CD7B24 B.LT 0x3CD7B38
	0x03CD7B28 LDR X0, [X0 + 0x10]
	0x03CD7B2C MOV W1, W31
	0x03CD7B30 MOV X3, X31
	0x03CD7B34 BL 0x339FA34
	0x03CD7B38 LDR X0, [X22]
	0x03CD7B3C LDR X20, [X19 + 0x148]
	0x03CD7B40 LDR W8, [X0 + 0xE0]
	0x03CD7B44 CBNZ W8, 0x3CD7B4C
	0x03CD7B48 BL 0x1C16DFC
	0x03CD7B4C MOV X0, X20
	0x03CD7B50 MOV X1, X31
	0x03CD7B54 MOV X2, X31
	0x03CD7B58 BL 0x3C354F8
	0x03CD7B5C TBZ X0, 0x0, 0x3CD7B78
	0x03CD7B60 LDR X8, [X19]
	0x03CD7B64 LDR X1, [X19 + 0x148]
	0x03CD7B68 MOV X0, X19
	0x03CD7B6C LDR X9, [X8 + 0x438]
	0x03CD7B70 LDR X2, [X8 + 0x440]
	0x03CD7B74 BLR X9
	0x03CD7B78 STR X31, [X19 + 0x148]
	0x03CD7B7C LDP X20, X19, [X31 + 0x30]
	0x03CD7B80 LDP X22, X21, [X31 + 0x20]
	0x03CD7B84 LDP X24, X23, [X31 + 0x10]
	0x03CD7B88 LDR X30, [X31], #0x40
	0x03CD7B8C RET
	0x03CD7B90 STP X30, X21, [X31 - 0x20]!
	0x03CD7B94 STP X20, X19, [X31 + 0x10]
	0x03CD7B98 ADRP X21, 0x710000
	0x03CD7B9C LDRB W8, [X21 + 0x46F]
	0x03CD7BA0 MOV X20, X1
	0x03CD7BA4 MOV X19, X0
	0x03CD7BA8 TBNZ X8, 0x0, 0x3CD7BC0
	0x03CD7BAC ADRP X0, 0x48B000
	0x03CD7BB0 LDR X0, [X0 + 0x2D0]
	0x03CD7BB4 BL 0x1C16CF4
	0x03CD7BB8 MOVZ W8, 0x1
	0x03CD7BBC STRB W8, [X21 + 0x46F]
	0x03CD7BC0 LDR X8, [X19 + 0x130]
	0x03CD7BC4 CBZ X8, 0x3CD7BF4
	0x03CD7BC8 LDR X0, [X8 + 0x10]
	0x03CD7BCC CBZ X0, 0x3CD7BF4
	0x03CD7BD0 ADRP X8, 0x48B000
	0x03CD7BD4 LDR X8, [X8 + 0x2D0]
	0x03CD7BD8 MOV X1, X20
	0x03CD7BDC LDR X2, [X8]
	0x03CD7BE0 BL 0x301C194
	0x03CD7BE4 MOV X0, X19
	0x03CD7BE8 LDP X20, X19, [X31 + 0x10]
	0x03CD7BEC LDP X30, X21, [X31], #0x20
	0x03CD7BF0 B 0x3CD6808
	0x03CD7BF4 BL 0x1C16F20
	0x03CD7BF8 STR X30, [X31 - 0x60]!
	0x03CD7BFC STP X28, X27, [X31 + 0x10]
	0x03CD7C00 STP X26, X25, [X31 + 0x20]
	0x03CD7C04 STP X24, X23, [X31 + 0x30]
	0x03CD7C08 STP X22, X21, [X31 + 0x40]
	0x03CD7C0C STP X20, X19, [X31 + 0x50]
	0x03CD7C10 ADRP X21, 0x710000
	0x03CD7C14 LDRB W8, [X21 + 0x470]
	0x03CD7C18 MOV X19, X1
	0x03CD7C1C MOV X20, X0
	0x03CD7C20 TBNZ X8, 0x0, 0x3CD7C5C
	0x03CD7C24 ADRP X0, 0x443000
	0x03CD7C28 LDR X0, [X0 + 0xCF8]
	0x03CD7C2C BL 0x1C16CF4
	0x03CD7C30 ADRP X0, 0x41D000
	0x03CD7C34 LDR X0, [X0 + 0x1C8]
	0x03CD7C38 BL 0x1C16CF4
	0x03CD7C3C ADRP X0, 0x444000
	0x03CD7C40 LDR X0, [X0 + 0xB58]
	0x03CD7C44 BL 0x1C16CF4
	0x03CD7C48 ADRP X0, 0x443000
	0x03CD7C4C LDR X0, [X0 + 0xCE0]
	0x03CD7C50 BL 0x1C16CF4
	0x03CD7C54 MOVZ W8, 0x1
	0x03CD7C58 STRB W8, [X21 + 0x470]
	0x03CD7C5C CBZ X19, 0x3CD7D48
	0x03CD7C60 LDR W25, [X19 + 0x18]
	0x03CD7C64 CMP W25, 0x1
	0x03CD7C68 B.LT 0x3CD7D28
	0x03CD7C6C ADRP X26, 0x444000
	0x03CD7C70 ADRP X27, 0x443000
	0x03CD7C74 ADRP X28, 0x443000
	0x03CD7C78 LDR X26, [X26 + 0xB58]
	0x03CD7C7C LDR X27, [X27 + 0xCE0]
	0x03CD7C80 LDR X28, [X28 + 0xCF8]
	0x03CD7C84 MOV W21, W31
	0x03CD7C88 LDR X8, [X20 + 0x130]
	0x03CD7C8C CBZ X8, 0x3CD7D48
	0x03CD7C90 LDR X2, [X26]
	0x03CD7C94 LDR X22, [X8 + 0x10]
	0x03CD7C98 MOV X0, X19
	0x03CD7C9C MOV W1, W21
	0x03CD7CA0 BL 0x301BCCC
	0x03CD7CA4 LDR X8, [X27]
	0x03CD7CA8 MOV X24, X0
	0x03CD7CAC MOV X0, X8
	0x03CD7CB0 BL 0x1C16F10
	0x03CD7CB4 MOV X1, X31
	0x03CD7CB8 MOV X23, X0
	0x03CD7CBC BL 0x33BDD8C
	0x03CD7CC0 STR X24, [X23 + 0x10]
	0x03CD7CC4 CBZ X22, 0x3CD7D48
	0x03CD7CC8 LDR W10, [X22 + 0x1C]
	0x03CD7CCC LDR X8, [X22 + 0x10]
	0x03CD7CD0 LDR X9, [X28]
	0x03CD7CD4 ADD W10, W10, 0x1
	0x03CD7CD8 STR W10, [X22 + 0x1C]
	0x03CD7CDC CBZ X8, 0x3CD7D48
	0x03CD7CE0 LDRSW X10, [X22 + 0x18]
	0x03CD7CE4 LDR W11, [X8 + 0x18]
	0x03CD7CE8 CMP W10, W11
	0x03CD7CEC B.CS 0x3CD7D04
	0x03CD7CF0 ADD W9, W10, 0x1
	0x03CD7CF4 ADD X8, X8, X10, 0x3, LSL
	0x03CD7CF8 STR W9, [X22 + 0x18]
	0x03CD7CFC STR X23, [X8 + 0x20]
	0x03CD7D00 B 0x3CD7D1C
	0x03CD7D04 LDR X8, [X9 + 0x20]
	0x03CD7D08 MOV X0, X22
	0x03CD7D0C MOV X1, X23
	0x03CD7D10 LDR X8, [X8 + 0xC0]
	0x03CD7D14 LDR X2, [X8 + 0x70]
	0x03CD7D18 BL 0x301BF90
	0x03CD7D1C ADD W21, W21, 0x1
	0x03CD7D20 CMP W25, W21
	0x03CD7D24 B.NE 0x3CD7C88
	0x03CD7D28 MOV X0, X20
	0x03CD7D2C LDP X20, X19, [X31 + 0x50]
	0x03CD7D30 LDP X22, X21, [X31 + 0x40]
	0x03CD7D34 LDP X24, X23, [X31 + 0x30]
	0x03CD7D38 LDP X26, X25, [X31 + 0x20]
	0x03CD7D3C LDP X28, X27, [X31 + 0x10]
	0x03CD7D40 LDR X30, [X31], #0x60
	0x03CD7D44 B 0x3CD6808
	0x03CD7D48 BL 0x1C16F20
	0x03CD7D4C STR X30, [X31 - 0x20]!
	0x03CD7D50 STP X20, X19, [X31 + 0x10]
	0x03CD7D54 MOV X19, X1
	0x03CD7D58 MOV X1, X31
	0x03CD7D5C MOV X20, X0
	0x03CD7D60 BL 0x33BDD8C
	0x03CD7D64 STR X19, [X20 + 0x10]
	0x03CD7D68 LDP X20, X19, [X31 + 0x10]
	0x03CD7D6C LDR X30, [X31], #0x20
	0x03CD7D70 RET
	0x03CD7D74 STR X30, [X31 - 0x60]!
	0x03CD7D78 STP X28, X27, [X31 + 0x10]
	0x03CD7D7C STP X26, X25, [X31 + 0x20]
	0x03CD7D80 STP X24, X23, [X31 + 0x30]
	0x03CD7D84 STP X22, X21, [X31 + 0x40]
	0x03CD7D88 STP X20, X19, [X31 + 0x50]
	0x03CD7D8C ADRP X21, 0x710000
	0x03CD7D90 LDRB W8, [X21 + 0x471]
	0x03CD7D94 MOV X19, X1
	0x03CD7D98 MOV X20, X0
	0x03CD7D9C TBNZ X8, 0x0, 0x3CD7DD8
	0x03CD7DA0 ADRP X0, 0x443000
	0x03CD7DA4 LDR X0, [X0 + 0xCF8]
	0x03CD7DA8 BL 0x1C16CF4
	0x03CD7DAC ADRP X0, 0x481000
	0x03CD7DB0 LDR X0, [X0 + 0xAB8]
	0x03CD7DB4 BL 0x1C16CF4
	0x03CD7DB8 ADRP X0, 0x481000
	0x03CD7DBC LDR X0, [X0 + 0xAC0]
	0x03CD7DC0 BL 0x1C16CF4
	0x03CD7DC4 ADRP X0, 0x443000
	0x03CD7DC8 LDR X0, [X0 + 0xCE0]
	0x03CD7DCC BL 0x1C16CF4
	0x03CD7DD0 MOVZ W8, 0x1
	0x03CD7DD4 STRB W8, [X21 + 0x471]
	0x03CD7DD8 CBZ X19, 0x3CD7EC4
	0x03CD7DDC LDR W25, [X19 + 0x18]
	0x03CD7DE0 CMP W25, 0x1
	0x03CD7DE4 B.LT 0x3CD7EA4
	0x03CD7DE8 ADRP X26, 0x481000
	0x03CD7DEC ADRP X27, 0x443000
	0x03CD7DF0 ADRP X28, 0x443000
	0x03CD7DF4 LDR X26, [X26 + 0xAC0]
	0x03CD7DF8 LDR X27, [X27 + 0xCE0]
	0x03CD7DFC LDR X28, [X28 + 0xCF8]
	0x03CD7E00 MOV W21, W31
	0x03CD7E04 LDR X8, [X20 + 0x130]
	0x03CD7E08 CBZ X8, 0x3CD7EC4
	0x03CD7E0C LDR X2, [X26]
	0x03CD7E10 LDR X22, [X8 + 0x10]
	0x03CD7E14 MOV X0, X19
	0x03CD7E18 MOV W1, W21
	0x03CD7E1C BL 0x301BCCC
	0x03CD7E20 LDR X8, [X27]
	0x03CD7E24 MOV X24, X0
	0x03CD7E28 MOV X0, X8
	0x03CD7E2C BL 0x1C16F10
	0x03CD7E30 MOV X1, X31
	0x03CD7E34 MOV X23, X0
	0x03CD7E38 BL 0x33BDD8C
	0x03CD7E3C STR X24, [X23 + 0x18]
	0x03CD7E40 CBZ X22, 0x3CD7EC4
	0x03CD7E44 LDR W10, [X22 + 0x1C]
	0x03CD7E48 LDR X8, [X22 + 0x10]
	0x03CD7E4C LDR X9, [X28]
	0x03CD7E50 ADD W10, W10, 0x1
	0x03CD7E54 STR W10, [X22 + 0x1C]
	0x03CD7E58 CBZ X8, 0x3CD7EC4
	0x03CD7E5C LDRSW X10, [X22 + 0x18]
	0x03CD7E60 LDR W11, [X8 + 0x18]
	0x03CD7E64 CMP W10, W11
	0x03CD7E68 B.CS 0x3CD7E80
	0x03CD7E6C ADD W9, W10, 0x1
	0x03CD7E70 ADD X8, X8, X10, 0x3, LSL
	0x03CD7E74 STR W9, [X22 + 0x18]
	0x03CD7E78 STR X23, [X8 + 0x20]
	0x03CD7E7C B 0x3CD7E98
	0x03CD7E80 LDR X8, [X9 + 0x20]
	0x03CD7E84 MOV X0, X22
	0x03CD7E88 MOV X1, X23
	0x03CD7E8C LDR X8, [X8 + 0xC0]
	0x03CD7E90 LDR X2, [X8 + 0x70]
	0x03CD7E94 BL 0x301BF90
	0x03CD7E98 ADD W21, W21, 0x1
	0x03CD7E9C CMP W25, W21
	0x03CD7EA0 B.NE 0x3CD7E04
	0x03CD7EA4 MOV X0, X20
	0x03CD7EA8 LDP X20, X19, [X31 + 0x50]
	0x03CD7EAC LDP X22, X21, [X31 + 0x40]
	0x03CD7EB0 LDP X24, X23, [X31 + 0x30]
	0x03CD7EB4 LDP X26, X25, [X31 + 0x20]
	0x03CD7EB8 LDP X28, X27, [X31 + 0x10]
	0x03CD7EBC LDR X30, [X31], #0x60
	0x03CD7EC0 B 0x3CD6808
	0x03CD7EC4 BL 0x1C16F20
	0x03CD7EC8 STR X30, [X31 - 0x20]!
	0x03CD7ECC STP X20, X19, [X31 + 0x10]
	0x03CD7ED0 MOV X19, X1
	0x03CD7ED4 MOV X1, X31
	0x03CD7ED8 MOV X20, X0
	0x03CD7EDC BL 0x33BDD8C
	0x03CD7EE0 STR X19, [X20 + 0x18]
	0x03CD7EE4 LDP X20, X19, [X31 + 0x10]
	0x03CD7EE8 LDR X30, [X31], #0x20
	0x03CD7EEC RET
	0x03CD7EF0 STR X30, [X31 - 0x20]!
	0x03CD7EF4 STP X20, X19, [X31 + 0x10]
	0x03CD7EF8 ADRP X20, 0x710000
	0x03CD7EFC LDRB W8, [X20 + 0x472]
	0x03CD7F00 MOV X19, X0
	0x03CD7F04 TBNZ X8, 0x0, 0x3CD7F1C
	0x03CD7F08 ADRP X0, 0x48B000
	0x03CD7F0C LDR X0, [X0 + 0x2D8]
	0x03CD7F10 BL 0x1C16CF4
	0x03CD7F14 MOVZ W8, 0x1
	0x03CD7F18 STRB W8, [X20 + 0x472]
	0x03CD7F1C LDR X8, [X19 + 0x130]
	0x03CD7F20 CBZ X8, 0x3CD7F64
	0x03CD7F24 LDR X8, [X8 + 0x10]
	0x03CD7F28 CBZ X8, 0x3CD7F64
	0x03CD7F2C LDP W2, W9, [X8 + 0x18]
	0x03CD7F30 ADD W9, W9, 0x1
	0x03CD7F34 CMP W2, 0x1
	0x03CD7F38 STP W31, W9, [X8 + 0x18]
	0x03CD7F3C B.LT 0x3CD7F50
	0x03CD7F40 LDR X0, [X8 + 0x10]
	0x03CD7F44 MOV W1, W31
	0x03CD7F48 MOV X3, X31
	0x03CD7F4C BL 0x339FA34
	0x03CD7F50 STR W31, [X19 + 0x128]
	0x03CD7F54 MOV X0, X19
	0x03CD7F58 LDP X20, X19, [X31 + 0x10]
	0x03CD7F5C LDR X30, [X31], #0x20
	0x03CD7F60 B 0x3CD6808
	0x03CD7F64 BL 0x1C16F20
	0x03CD7F68 STR X30, [X31 - 0x50]!
	0x03CD7F6C STP X26, X25, [X31 + 0x10]
	0x03CD7F70 STP X24, X23, [X31 + 0x20]
	0x03CD7F74 STP X22, X21, [X31 + 0x30]
	0x03CD7F78 STP X20, X19, [X31 + 0x40]
	0x03CD7F7C ADRP X20, 0x710000
	0x03CD7F80 ADRP X25, 0x41C000
	0x03CD7F84 LDRB W8, [X20 + 0x473]
	0x03CD7F88 LDR X25, [X25 + 0x598]
	0x03CD7F8C MOV X21, X1
	0x03CD7F90 MOV X19, X0
	0x03CD7F94 TBNZ X8, 0x0, 0x3CD806C
	0x03CD7F98 ADRP X0, 0x481000
	0x03CD7F9C LDR X0, [X0 + 0xAD0]
	0x03CD7FA0 BL 0x1C16CF4
	0x03CD7FA4 ADRP X0, 0x472000
	0x03CD7FA8 LDR X0, [X0 + 0x560]
	0x03CD7FAC BL 0x1C16CF4
	0x03CD7FB0 ADRP X0, 0x481000
	0x03CD7FB4 LDR X0, [X0 + 0xAD8]
	0x03CD7FB8 BL 0x1C16CF4
	0x03CD7FBC ADRP X0, 0x41C000
	0x03CD7FC0 LDR X0, [X0 + 0xA28]
	0x03CD7FC4 BL 0x1C16CF4
	0x03CD7FC8 ADRP X0, 0x48B000
	0x03CD7FCC LDR X0, [X0 + 0x2E0]
	0x03CD7FD0 BL 0x1C16CF4
	0x03CD7FD4 ADRP X0, 0x48B000
	0x03CD7FD8 LDR X0, [X0 + 0x2E8]
	0x03CD7FDC BL 0x1C16CF4
	0x03CD7FE0 ADRP X0, 0x48B000
	0x03CD7FE4 LDR X0, [X0 + 0x248]
	0x03CD7FE8 BL 0x1C16CF4
	0x03CD7FEC ADRP X0, 0x481000
	0x03CD7FF0 LDR X0, [X0 + 0xB78]
	0x03CD7FF4 BL 0x1C16CF4
	0x03CD7FF8 ADRP X0, 0x48B000
	0x03CD7FFC LDR X0, [X0 + 0x2F0]
	0x03CD8000 BL 0x1C16CF4
	0x03CD8004 ADRP X0, 0x484000
	0x03CD8008 LDR X0, [X0 + 0x7C0]
	0x03CD800C BL 0x1C16CF4
	0x03CD8010 ADRP X0, 0x41B000
	0x03CD8014 LDR X0, [X0 + 0x598]
	0x03CD8018 BL 0x1C16CF4
	0x03CD801C ADRP X0, 0x442000
	0x03CD8020 LDR X0, [X0 + 0xC70]
	0x03CD8024 BL 0x1C16CF4
	0x03CD8028 ADRP X0, 0x480000
	0x03CD802C LDR X0, [X0 + 0xB00]
	0x03CD8030 BL 0x1C16CF4
	0x03CD8034 ADRP X0, 0x480000
	0x03CD8038 LDR X0, [X0 + 0xB08]
	0x03CD803C BL 0x1C16CF4
	0x03CD8040 ADRP X0, 0x480000
	0x03CD8044 LDR X0, [X0 + 0xB10]
	0x03CD8048 BL 0x1C16CF4
	0x03CD804C ADRP X0, 0x480000
	0x03CD8050 LDR X0, [X0 + 0xB18]
	0x03CD8054 BL 0x1C16CF4
	0x03CD8058 ADRP X0, 0x480000
	0x03CD805C LDR X0, [X0 + 0xB20]
	0x03CD8060 BL 0x1C16CF4
	0x03CD8064 MOVZ W8, 0x1
	0x03CD8068 STRB W8, [X20 + 0x473]
	0x03CD806C STR X31, [X31 + 0x8]
	0x03CD8070 STRB W31, [X19 + 0x168]
	0x03CD8074 LDR X0, [X25]
	0x03CD8078 LDR X20, [X19 + 0x100]
	0x03CD807C LDR W8, [X0 + 0xE0]
	0x03CD8080 CBNZ W8, 0x3CD8088
	0x03CD8084 BL 0x1C16DFC
	0x03CD8088 ADRP X26, 0x41B000
	0x03CD808C LDR X26, [X26 + 0xA28]
	0x03CD8090 MOV X0, X20
	0x03CD8094 MOV X1, X31
	0x03CD8098 BL 0x3C38948
	0x03CD809C TBZ X0, 0x0, 0x3CD8170
	0x03CD80A0 LDR X0, [X19 + 0x100]
	0x03CD80A4 CBZ X0, 0x3CD85F4
	0x03CD80A8 MOV X1, X31
	0x03CD80AC BL 0x3C32ECC
	0x03CD80B0 CBZ X0, 0x3CD85F4
	0x03CD80B4 MOVZ W1, 0x1
	0x03CD80B8 MOV X2, X31
	0x03CD80BC MOV X20, X0
	0x03CD80C0 MOVZ W22, 0x1
	0x03CD80C4 BL 0x3C357B4
	0x03CD80C8 LDR X0, [X19 + 0x100]
	0x03CD80CC CBZ X0, 0x3CD85F4
	0x03CD80D0 ADRP X8, 0x480000
	0x03CD80D4 LDR X8, [X8 + 0xAD0]
	0x03CD80D8 LDR X1, [X8]
	0x03CD80DC BL 0x21A3AF8
	0x03CD80E0 STRB W22, [X19 + 0x168]
	0x03CD80E4 LDR X8, [X25]
	0x03CD80E8 MOV X22, X0
	0x03CD80EC LDR W9, [X8 + 0xE0]
	0x03CD80F0 CBNZ W9, 0x3CD80FC
	0x03CD80F4 MOV X0, X8
	0x03CD80F8 BL 0x1C16DFC
	0x03CD80FC MOV X0, X22
	0x03CD8100 MOV X1, X31
	0x03CD8104 BL 0x3C38948
	0x03CD8108 TBZ X0, 0x0, 0x3CD814C
	0x03CD810C CBZ X22, 0x3CD85F4
	0x03CD8110 MOV X0, X22
	0x03CD8114 MOV X1, X31
	0x03CD8118 BL 0x3C32E90
	0x03CD811C LDR X8, [X25]
	0x03CD8120 LDR X23, [X19 + 0x100]
	0x03CD8124 MOV X24, X0
	0x03CD8128 LDR W9, [X8 + 0xE0]
	0x03CD812C CBNZ W9, 0x3CD8138
	0x03CD8130 MOV X0, X8
	0x03CD8134 BL 0x1C16DFC
	0x03CD8138 MOV X0, X24
	0x03CD813C MOV X1, X23
	0x03CD8140 MOV X2, X31
	0x03CD8144 BL 0x3C3883C
	0x03CD8148 TBZ X0, 0x0, 0x3CD819C
	0x03CD814C STRB W31, [X19 + 0x168]
	0x03CD8150 LDR X0, [X26]
	0x03CD8154 LDR X23, [X19 + 0x100]
	0x03CD8158 LDR W8, [X0 + 0xE0]
	0x03CD815C CBNZ W8, 0x3CD8164
	0x03CD8160 BL 0x1C16DFC
	0x03CD8164 ADRP X8, 0x480000
	0x03CD8168 LDR X8, [X8 + 0xB08]
	0x03CD816C B 0x3CD81F0
	0x03CD8170 LDR X0, [X26]
	0x03CD8174 ADRP X20, 0x480000
	0x03CD8178 LDR W8, [X0 + 0xE0]
	0x03CD817C LDR X20, [X20 + 0xB20]
	0x03CD8180 CBNZ W8, 0x3CD8188
	0x03CD8184 BL 0x1C16DFC
	0x03CD8188 LDR X0, [X20]
	0x03CD818C MOV X1, X19
	0x03CD8190 MOV X2, X31
	0x03CD8194 BL 0x3C065A4
	0x03CD8198 B 0x3CD84D4
	0x03CD819C MOV X0, X22
	0x03CD81A0 MOV X1, X31
	0x03CD81A4 BL 0x3C32E90
	0x03CD81A8 CBZ X0, 0x3CD85F4
	0x03CD81AC MOV X1, X31
	0x03CD81B0 BL 0x3C3F49C
	0x03CD81B4 CBZ X0, 0x3CD81D0
	0x03CD81B8 ADRP X8, 0x442000
	0x03CD81BC LDR X8, [X8 + 0xC70]
	0x03CD81C0 LDR X9, [X0]
	0x03CD81C4 LDR X8, [X8]
	0x03CD81C8 CMP X9, X8
	0x03CD81CC B.EQ 0x3CD84EC
	0x03CD81D0 STRB W31, [X19 + 0x168]
	0x03CD81D4 LDR X0, [X26]
	0x03CD81D8 LDR X23, [X19 + 0x100]
	0x03CD81DC LDR W8, [X0 + 0xE0]
	0x03CD81E0 CBNZ W8, 0x3CD81E8
	0x03CD81E4 BL 0x1C16DFC
	0x03CD81E8 ADRP X8, 0x480000
	0x03CD81EC LDR X8, [X8 + 0xB18]
	0x03CD81F0 LDR X0, [X8]
	0x03CD81F4 MOV X1, X23
	0x03CD81F8 MOV X2, X31
	0x03CD81FC BL 0x3C065A4
	0x03CD8200 LDRB W8, [X19 + 0x168]
	0x03CD8204 CBZ W8, 0x3CD8450
	0x03CD8208 CBZ X22, 0x3CD85F4
	0x03CD820C MOV X0, X22
	0x03CD8210 MOV X1, X31
	0x03CD8214 BL 0x3C32ECC
	0x03CD8218 CBZ X0, 0x3CD85F4
	0x03CD821C ADRP X8, 0x48A000
	0x03CD8220 LDR X8, [X8 + 0x2F0]
	0x03CD8224 LDR X1, [X8]
	0x03CD8228 BL 0x21E51FC
	0x03CD822C CBZ X0, 0x3CD85F4
	0x03CD8230 LDR X8, [X19 + 0x118]
	0x03CD8234 MOV X23, X0
	0x03CD8238 MOV X1, X31
	0x03CD823C STR X8, [X0 + 0x20]
	0x03CD8240 LDR X8, [X19 + 0x120]
	0x03CD8244 STR X22, [X0 + 0x38]
	0x03CD8248 STR X8, [X0 + 0x28]
	0x03CD824C MOV X0, X22
	0x03CD8250 BL 0x3C32E90
	0x03CD8254 CBZ X0, 0x3CD8270
	0x03CD8258 ADRP X8, 0x442000
	0x03CD825C LDR X8, [X8 + 0xC70]
	0x03CD8260 LDR X1, [X8]
	0x03CD8264 LDR X8, [X0]
	0x03CD8268 CMP X8, X1
	0x03CD826C B.NE 0x3CD85FC
	0x03CD8270 STR X0, [X23 + 0x30]
	0x03CD8274 LDR X0, [X19 + 0x100]
	0x03CD8278 CBZ X0, 0x3CD85F4
	0x03CD827C MOV X1, X31
	0x03CD8280 BL 0x3C3F49C
	0x03CD8284 ADRP X24, 0x471000
	0x03CD8288 LDR X24, [X24 + 0x560]
	0x03CD828C MOV X23, X0
	0x03CD8290 MOV X22, X31
	0x03CD8294 LDR X0, [X25]
	0x03CD8298 LDR W8, [X0 + 0xE0]
	0x03CD829C CBNZ W8, 0x3CD82A4
	0x03CD82A0 BL 0x1C16DFC
	0x03CD82A4 MOV X0, X23
	0x03CD82A8 MOV X1, X31
	0x03CD82AC MOV X2, X31
	0x03CD82B0 BL 0x3C354F8
	0x03CD82B4 TBZ X0, 0x0, 0x3CD8308
	0x03CD82B8 CBZ X23, 0x3CD85F4

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X21, 0x711000
	015 Move X23, 0x425000
	016 Move X22, 0x473000
	017 Move X20, 0x41D000
	018 Move W8, [X21+1125]
	019 Move X23, [X23+3168]
	020 Move X22, [X22+1760]
	021 Move X20, [X20+1728]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {80}
	027 Move X0, 0x48C000
	028 Move X0, [X0+328]
	029 Call 0x1C17CF4
	030 Move X0, 0x473000
	031 Move X0, [X0+1752]
	032 Call 0x1C17CF4
	033 Move X0, 0x48C000
	034 Move X0, [X0+544]
	035 Call 0x1C17CF4
	036 Move X0, 0x47D000
	037 Move X0, [X0+2880]
	038 Call 0x1C17CF4
	039 Move X0, 0x48C000
	040 Move X0, [X0+552]
	041 Call 0x1C17CF4
	042 Move X0, 0x482000
	043 Move X0, [X0+2448]
	044 Call 0x1C17CF4
	045 Move X0, 0x473000
	046 Move X0, [X0+1760]
	047 Call 0x1C17CF4
	048 Move X0, 0x48C000
	049 Move X0, [X0+560]
	050 Call 0x1C17CF4
	051 Move X0, 0x483000
	052 Move X0, [X0+2632]
	053 Call 0x1C17CF4
	054 Move X0, 0x48C000
	055 Move X0, [X0+568]
	056 Call 0x1C17CF4
	057 Move X0, 0x425000
	058 Move X0, [X0+3168]
	059 Call 0x1C17CF4
	060 Move X0, 0x41D000
	061 Move X0, [X0+1728]
	062 Call 0x1C17CF4
	063 Move X0, 0x48C000
	064 Move X0, [X0+608]
	065 Call 0x1C17CF4
	066 Move X0, 0x482000
	067 Move X0, [X0+2512]
	068 Call 0x1C17CF4
	069 Move X0, 0x48C000
	070 Move X0, [X0+616]
	071 Call 0x1C17CF4
	072 Move X0, 0x482000
	073 Move X0, [X0+2544]
	074 Call 0x1C17CF4
	075 Move X0, 0x48C000
	076 Move X0, [X0+624]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X21+1125], W8
	080 Move X0, [X23]
	081 Move W1, 2
	082 Call 0x1C17D6C
	083 Move X8, [X20]
	084 Move X21, [X22]
	085 Move X20, X0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X0, X21
	092 Move X1, X31
	093 Call Type.GetTypeFromHandle, X0
	094 Compare X20, 0
	095 JumpIfEqual {639}
	096 Move X21, X0
	097 Compare X0, 0
	098 JumpIfEqual {105}
	099 Move X8, [X20]
	100 Move X0, X21
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {641}
	105 Move W8, [X20+24]
	106 Compare W8, 0
	107 JumpIfEqual {640}
	108 Move X8, 0x48C000
	109 Move X8, [X8+568]
	110 Move [X20+32], X21
	111 Move X1, X31
	112 Move X0, [X8]
	113 Call Type.GetTypeFromHandle, X0
	114 Move X21, X0
	115 Compare X0, 0
	116 JumpIfEqual {123}
	117 Move X8, [X20]
	118 Move X0, X21
	119 Move X1, [X8+64]
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {641}
	123 Move W8, [X20+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, 0x48C000
	126 Move X8, [X8+328]
	127 Move [X20+40], X21
	128 Move X21, 0x48C000
	129 Move X0, [X8]
	130 Move W8, [X0+224]
	131 Move X21, [X21+624]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, [X21]
	136 Move W8, 0x43480000
	137 Move S0, W8
	138 Move V1, V0
	139 Move X1, X20
	140 Call DefaultControls.CreateUIElementRoot, X0, X1, X2
	141 Move X8, [X23]
	142 Move X20, X0
	143 Move W1, 2
	144 Move X0, X8
	145 Call 0x1C17D6C
	146 Move X8, [X22]
	147 Move X21, X0
	148 Move X1, X31
	149 Move X0, X8
	150 Call Type.GetTypeFromHandle, X0
	151 Compare X21, 0
	152 JumpIfEqual {639}
	153 Move X22, X0
	154 Compare X0, 0
	155 JumpIfEqual {162}
	156 Move X8, [X21]
	157 Move X0, X22
	158 Move X1, [X8+64]
	159 Call 0x1C17E00
	160 Compare X0, 0
	161 JumpIfEqual {641}
	162 Move W8, [X21+24]
	163 Compare W8, 0
	164 JumpIfEqual {640}
	165 Move X8, 0x48C000
	166 Move X8, [X8+560]
	167 Move [X21+32], X22
	168 Move X1, X31
	169 Move X0, [X8]
	170 Call Type.GetTypeFromHandle, X0
	171 Move X22, X0
	172 Compare X0, 0
	173 JumpIfEqual {180}
	174 Move X8, [X21]
	175 Move X0, X22
	176 Move X1, [X8+64]
	177 Call 0x1C17E00
	178 Compare X0, 0
	179 JumpIfEqual {641}
	180 Move W8, [X21+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, 0x482000
	183 Move X8, [X8+2512]
	184 Move [X21+40], X22
	185 Move X22, 0x483000
	186 Move X1, X20
	187 Move X0, [X8]
	188 Move X22, [X22+2632]
	189 Move X2, X21
	190 Call DefaultControls.CreateUIObject, X0, X1, X2
	191 Move X8, [X23]
	192 Move X21, X0
	193 Move W1, 1
	194 Move X0, X8
	195 Call 0x1C17D6C
	196 Move X8, [X22]
	197 Move X22, X0
	198 Move X1, X31
	199 Move X0, X8
	200 Call Type.GetTypeFromHandle, X0
	201 Compare X22, 0
	202 JumpIfEqual {639}
	203 Move X23, X0
	204 Compare X0, 0
	205 JumpIfEqual {212}
	206 Move X8, [X22]
	207 Move X0, X23
	208 Move X1, [X8+64]
	209 Call 0x1C17E00
	210 Compare X0, 0
	211 JumpIfEqual {641}
	212 Move W8, [X22+24]
	213 Compare W8, 0
	214 JumpIfEqual {640}
	215 Move X8, 0x482000
	216 Move X8, [X8+2544]
	217 Move [X22+32], X23
	218 Move X1, X21
	219 Move X2, X22
	220 Move X0, [X8]
	221 Call DefaultControls.CreateUIObject, X0, X1, X2
	222 Move X8, [X19+48]
	223 Move V2, [X19+16]
	224 Move V0, [X19+32]
	225 Move V1, [X19]
	226 Move X23, X0
	227 Add X0, X31, 64
	228 Move [X31+112], X8
	229 Move [X31+80], V2
	230 Move [X31+88], V0
	231 Move [X31+4], V1
	232 Call DefaultControls.CreateScrollbar, X0
	233 Compare X0, 0
	234 JumpIfEqual {639}
	235 Move X8, 0x48C000
	236 Move X8, [X8+608]
	237 Move X25, 0x47D000
	238 Move X2, X31
	239 Move X22, X0
	240 Move X1, [X8]
	241 Move X25, [X25+2880]
	242 Call Object.set_name, X0, X1
	243 Move X0, X22
	244 Move X1, X20
	245 Call DefaultControls.SetParentAndAlign, X0, X1
	246 Move X1, [X25]
	247 Move X0, X22
	248 Call 0x21E62E4, X0
	249 Move X27, 0x703000
	250 Move W8, [X27+1935]
	251 Move X24, X0
	252 Compare W8, 0
	253 JumpIfNotEqual {259}
	254 Move X0, 0x425000
	255 Move X0, [X0+3848]
	256 Call 0x1C17CF4
	257 Move W8, 1
	258 Move [X27+1935], W8
	259 Compare X24, 0
	260 JumpIfEqual {639}
	261 Move X26, 0x425000
	262 Move X26, [X26+3848]
	263 Move X0, X24
	264 Move X1, X31
	265 Move X8, [X26]
	266 Move X8, [X8+184]
	267 Move S0, [X8]
	268 Move S1, [X8+4]
	269 Call RectTransform.set_anchorMin, X0, X1
	270 Move X29, 0x703000
	271 Move W8, [X29+1934]
	272 Compare W8, 0
	273 JumpIfNotEqual {279}
	274 Move X0, 0x425000
	275 Move X0, [X0+3848]
	276 Call 0x1C17CF4
	277 Move W8, 1
	278 Move [X29+1934], W8
	279 Move X8, [X26]
	280 Move X0, X24
	281 Move X1, X31
	282 Move X8, [X8+184]
	283 Move S0, [X8+40]
	284 Move S1, [X8+44]
	285 Call RectTransform.set_anchorMax, X0, X1
	286 Move W8, [X27+1935]
	287 Compare W8, 0
	288 JumpIfNotEqual {294}
	289 Move X0, 0x425000
	290 Move X0, [X0+3848]
	291 Call 0x1C17CF4
	292 Move W8, 1
	293 Move [X27+1935], W8
	294 Move X8, [X26]
	295 Move X0, X24
	296 Move X1, X31
	297 Move X8, [X8+184]
	298 Move S0, [X8]
	299 Move S1, [X8+4]
	300 Call RectTransform.set_pivot, X0, X1
	301 Move X0, X24
	302 Move X1, X31
	303 Call RectTransform.get_sizeDelta, X0
	304 Move S0, W31
	305 Move X0, X24
	306 Move X1, X31
	307 Call RectTransform.set_sizeDelta, X0, X1
	308 Move X8, [X19+48]
	309 Move V1, [X19+16]
	310 Move V0, [X19+32]
	311 Move V2, [X19]
	312 Add X0, X31, 0
	313 Move [X31+48], X8
	314 Move [X31+16], V1
	315 Move [X31+24], V0
	316 Move [X31], V2
	317 Call DefaultControls.CreateScrollbar, X0
	318 Compare X0, 0
	319 JumpIfEqual {639}
	320 Move X8, 0x48C000
	321 Move X8, [X8+616]
	322 Move X28, 0x482000
	323 Move X2, X31
	324 Move X24, X0
	325 Move X1, [X8]
	326 Move X28, [X28+2448]
	327 Call Object.set_name, X0, X1
	328 Move X0, X24
	329 Move X1, X20
	330 Call DefaultControls.SetParentAndAlign, X0, X1
	331 Move X1, [X28]
	332 Move X0, X24
	333 Call 0x21E62E4, X0
	334 Compare X0, 0
	335 JumpIfEqual {639}
	336 Move W1, 2
	337 Move W2, 1
	338 Move X3, X31
	339 Move W28, 1
	340 Call Scrollbar.SetDirection, X0, X1, X2
	341 Move X1, [X25]
	342 Move X0, X24
	343 Call 0x21E62E4, X0
	344 Move W8, [X29+1934]
	345 Move X25, X0
	346 Compare W8, 0
	347 JumpIfNotEqual {352}
	348 Move X0, 0x425000
	349 Move X0, [X0+3848]
	350 Call 0x1C17CF4
	351 Move [X29+1934], W28
	352 Compare X25, 0
	353 JumpIfEqual {639}
	354 Move X8, [X26]
	355 Move X0, X25
	356 Move X1, X31
	357 Move X8, [X8+184]
	358 Move S0, [X8+40]
	359 Move S1, [X8+44]
	360 Call RectTransform.set_anchorMin, X0, X1
	361 Move X29, 0x70B000
	362 Move W8, [X29+2632]
	363 Compare W8, 0
	364 JumpIfNotEqual {370}
	365 Move X0, 0x425000
	366 Move X0, [X0+3848]
	367 Call 0x1C17CF4
	368 Move W8, 1
	369 Move [X29+2632], W8
	370 Move X8, [X26]
	371 Move X0, X25
	372 Move X1, X31
	373 Move X8, [X8+184]
	374 Move S0, [X8+8]
	375 Move S1, [X8+12]
	376 Call RectTransform.set_anchorMax, X0, X1
	377 Move W8, [X29+2632]
	378 Compare W8, 0
	379 JumpIfNotEqual {385}
	380 Move X0, 0x425000
	381 Move X0, [X0+3848]
	382 Call 0x1C17CF4
	383 Move W8, 1
	384 Move [X29+2632], W8
	385 Move X8, [X26]
	386 Move X0, X25
	387 Move X1, X31
	388 Move X8, [X8+184]
	389 Move S0, [X8+8]
	390 Move S1, [X8+12]
	391 Call RectTransform.set_pivot, X0, X1
	392 Move X0, X25
	393 Move X1, X31
	394 Call RectTransform.get_sizeDelta, X0
	395 Move S1, W31
	396 Move X0, X25
	397 Move X1, X31
	398 Call RectTransform.set_sizeDelta, X0, X1
	399 Compare X21, 0
	400 JumpIfEqual {639}
	401 Move X8, 0x47D000
	402 Move X8, [X8+2880]
	403 Move X0, X21
	404 Move X1, [X8]
	405 Call 0x21E62E4, X0
	406 Move W8, [X27+1935]
	407 Move X25, X0
	408 Compare W8, 0
	409 JumpIfNotEqual {415}
	410 Move X0, 0x425000
	411 Move X0, [X0+3848]
	412 Call 0x1C17CF4
	413 Move W8, 1
	414 Move [X27+1935], W8
	415 Compare X25, 0
	416 JumpIfEqual {639}
	417 Move X8, [X26]
	418 Move X0, X25
	419 Move X1, X31
	420 Move X8, [X8+184]
	421 Move S0, [X8]
	422 Move S1, [X8+4]
	423 Call RectTransform.set_anchorMin, X0, X1
	424 Move W8, [X29+2632]
	425 Compare W8, 0
	426 JumpIfNotEqual {432}
	427 Move X0, 0x425000
	428 Move X0, [X0+3848]
	429 Call 0x1C17CF4
	430 Move W8, 1
	431 Move [X29+2632], W8
	432 Move X8, [X26]
	433 Move X0, X25
	434 Move X1, X31
	435 Move X8, [X8+184]
	436 Move S0, [X8+8]
	437 Move S1, [X8+12]
	438 Call RectTransform.set_anchorMax, X0, X1
	439 Move W8, [X27+1935]
	440 Compare W8, 0
	441 JumpIfNotEqual {447}
	442 Move X0, 0x425000
	443 Move X0, [X0+3848]
	444 Call 0x1C17CF4
	445 Move W8, 1
	446 Move [X27+1935], W8
	447 Move X8, [X26]
	448 Move X0, X25
	449 Move X1, X31
	450 Move X8, [X8+184]
	451 Move S0, [X8]
	452 Move S1, [X8+4]
	453 Call RectTransform.set_sizeDelta, X0, X1
	454 Move X27, 0x704000
	455 Move W8, [X27+2038]
	456 Compare W8, 0
	457 JumpIfNotEqual {463}
	458 Move X0, 0x424000
	459 Move X0, [X0+3848]
	460 Call 0x1C17CF4
	461 Move W8, 1
	462 Move [X27+2038], W8
	463 Move X8, [X26]
	464 Move X0, X25
	465 Move X1, X31
	466 Move X8, [X8+184]
	467 Move S0, [X8+16]
	468 Move S1, [X8+20]
	469 Call RectTransform.set_pivot, X0, X1
	470 Compare X23, 0
	471 JumpIfEqual {639}
	472 Move X8, 0x47C000
	473 Move X8, [X8+2880]
	474 Move X0, X23
	475 Move X1, [X8]
	476 Call 0x21E62E4, X0
	477 Move W8, [X27+2038]
	478 Move X23, X0
	479 Compare W8, 0
	480 JumpIfNotEqual {486}
	481 Move X0, 0x424000
	482 Move X0, [X0+3848]
	483 Call 0x1C17CF4
	484 Move W8, 1
	485 Move [X27+2038], W8
	486 Compare X23, 0
	487 JumpIfEqual {639}
	488 Move X8, [X26]
	489 Move X0, X23
	490 Move X1, X31
	491 Move X8, [X8+184]
	492 Move S0, [X8+16]
	493 Move S1, [X8+20]
	494 Call RectTransform.set_anchorMin, X0, X1
	495 Move W8, [X29+2632]
	496 Compare W8, 0
	497 JumpIfNotEqual {503}
	498 Move X0, 0x424000
	499 Move X0, [X0+3848]
	500 Call 0x1C17CF4
	501 Move W8, 1
	502 Move [X29+2632], W8
	503 Move X8, [X26]
	504 Move X0, X23
	505 Move X1, X31
	506 Move X8, [X8+184]
	507 Move S0, [X8+8]
	508 Move S1, [X8+12]
	509 Call RectTransform.set_anchorMax, X0, X1
	510 Move W8, 0x43960000
	511 Move S0, W31
	512 Move S1, W8
	513 Move X0, X23
	514 Move X1, X31
	515 Call RectTransform.set_sizeDelta, X0, X1
	516 Move W8, [X27+2038]
	517 Compare W8, 0
	518 JumpIfNotEqual {524}
	519 Move X0, 0x424000
	520 Move X0, [X0+3848]
	521 Call 0x1C17CF4
	522 Move W8, 1
	523 Move [X27+2038], W8
	524 Move X8, [X26]
	525 Move X0, X23
	526 Move X1, X31
	527 Move X8, [X8+184]
	528 Move S0, [X8+16]
	529 Move S1, [X8+20]
	530 Call RectTransform.set_pivot, X0, X1
	531 Compare X20, 0
	532 JumpIfEqual {639}
	533 Move X8, 0x48B000
	534 Move X8, [X8+552]
	535 Move X0, X20
	536 Move X1, [X8]
	537 Call 0x21E62E4, X0
	538 Compare X0, 0
	539 JumpIfEqual {639}
	540 Move X27, 0x472000
	541 Move X27, [X27+1752]
	542 Move X1, X25
	543 Move X2, X31
	544 Move X26, X0
	545 Move [X0+32], X23
	546 Call ScrollRect.set_viewport, X0, X1
	547 Move X23, 0x481000
	548 Move X23, [X23+2448]
	549 Move X0, X22
	550 Move X1, [X23]
	551 Call 0x21E62E4, X0
	552 Move X1, X0
	553 Move X0, X26
	554 Move X2, X31
	555 Call ScrollRect.set_horizontalScrollbar, X0, X1
	556 Move X1, [X23]
	557 Move X0, X24
	558 Call 0x21E62E4, X0
	559 Move X1, X0
	560 Move X0, X26
	561 Move X2, X31
	562 Call ScrollRect.set_verticalScrollbar, X0, X1
	563 Move W1, 2
	564 Move X0, X26
	565 Move X2, X31
	566 Call ScrollRect.set_horizontalScrollbarVisibility, X0, X1
	567 Move W1, 2
	568 Move X0, X26
	569 Move X2, X31
	570 Call ScrollRect.set_verticalScrollbarVisibility, X0, X1
	571 Move S0, -3
	572 Move X0, X26
	573 Move X1, X31
	574 Call ScrollRect.set_horizontalScrollbarSpacing, X0, V0
	575 Move S0, -3
	576 Move X0, X26
	577 Move X1, X31
	578 Call ScrollRect.set_verticalScrollbarSpacing, X0, V0
	579 Move X1, [X27]
	580 Move X0, X20
	581 Call 0x21E62E4, X0
	582 Compare X0, 0
	583 JumpIfEqual {639}
	584 Move X1, [X19+8]
	585 Move X23, 0x48B000
	586 Move X23, [X23+544]
	587 Move X22, X0
	588 Call Image.set_sprite, X0, X1
	589 Move W1, 1
	590 Move X0, X22
	591 Call Image.set_type, X0, X1
	592 Move X8, 0x48B000
	593 Move X8, [X8+328]
	594 Move X9, [X22]
	595 Move X0, X22
	596 Move X8, [X8]
	597 Move X10, [X9+680]
	598 Move X1, [X9+688]
	599 Move X8, [X8+184]
	600 Move S0, [X8+48]
	601 Move S1, [X8+52]
	602 Move S2, [X8+56]
	603 Move S3, [X8+60]
	604 NotImplemented "Instruction BLR not yet implemented."
	605 Move X1, [X23]
	606 Move X0, X21
	607 Call 0x21E62E4, X0
	608 Compare X0, 0
	609 JumpIfEqual {639}
	610 Move W1, W31
	611 Move X2, X31
	612 Call Mask.set_showMaskGraphic, X0, X1
	613 Move X1, [X27]
	614 Move X0, X21
	615 Call 0x21E62E4, X0
	616 Compare X0, 0
	617 JumpIfEqual {639}
	618 Move X1, [X19+48]
	619 Move X21, X0
	620 Call Image.set_sprite, X0, X1
	621 Move W1, 1
	622 Move X0, X21
	623 Call Image.set_type, X0, X1
	624 Move X0, X20
	625 Move X20, [X31+208]
	626 Move X19, [X31+216]
	627 Move X22, [X31+192]
	628 Move X21, [X31+200]
	629 Move X24, [X31+176]
	630 Move X23, [X31+184]
	631 Move X26, [X31+160]
	632 Move X25, [X31+168]
	633 Move X28, [X31+144]
	634 Move X27, [X31+152]
	635 Move X29, [X31+128]
	636 Move X30, [X31+136]
	637 Add X31, X31, 224
	638 Return X0
	639 Call 0x1C17F20
	640 Call 0x1C17F28
	641 Call 0x1C17F44
	642 Move X1, X31
	643 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x03CD82BC LDR X1, [X24]
	0x03CD82C0 MOV X0, X23
	0x03CD82C4 BL 0x21A3894
	0x03CD82C8 LDR X8, [X25]
	0x03CD82CC MOV X22, X0
	0x03CD82D0 LDR W9, [X8 + 0xE0]
	0x03CD82D4 CBNZ W9, 0x3CD82E0
	0x03CD82D8 MOV X0, X8
	0x03CD82DC BL 0x1C16DFC
	0x03CD82E0 MOV X0, X22
	0x03CD82E4 MOV X1, X31
	0x03CD82E8 MOV X2, X31
	0x03CD82EC BL 0x3C354F8
	0x03CD82F0 TBNZ X0, 0x0, 0x3CD8308
	0x03CD82F4 MOV X0, X23
	0x03CD82F8 MOV X1, X31
	0x03CD82FC BL 0x3C3F49C
	0x03CD8300 MOV X23, X0
	0x03CD8304 B 0x3CD8294
	0x03CD8308 ADRP X8, 0x484000
	0x03CD830C LDR X8, [X8 + 0x7C0]
	0x03CD8310 ADD X1, X31, 0x8
	0x03CD8314 MOV X0, X20
	0x03CD8318 LDR X2, [X8]
	0x03CD831C BL 0x21E6600
	0x03CD8320 TBNZ X0, 0x0, 0x3CD837C
	0x03CD8324 ADRP X8, 0x480000
	0x03CD8328 LDR X8, [X8 + 0xB78]
	0x03CD832C MOV X0, X20
	0x03CD8330 LDR X1, [X8]
	0x03CD8334 BL 0x21E51FC
	0x03CD8338 CBZ X0, 0x3CD85F4
	0x03CD833C MOVZ W1, 0x1
	0x03CD8340 MOV X2, X31
	0x03CD8344 MOV X23, X0
	0x03CD8348 BL 0x3E248E0
	0x03CD834C MOVZ W1, 0x7530
	0x03CD8350 MOV X0, X23
	0x03CD8354 MOV X2, X31
	0x03CD8358 BL 0x3E24960
	0x03CD835C CBZ X21, 0x3CD85F4
	0x03CD8360 MOV X0, X21
	0x03CD8364 MOV X1, X31
	0x03CD8368 BL 0x3E24A24
	0x03CD836C MOV W1, W0
	0x03CD8370 MOV X0, X23
	0x03CD8374 MOV X2, X31
	0x03CD8378 BL 0x3E24A60
	0x03CD837C LDR X0, [X25]
	0x03CD8380 LDR W8, [X0 + 0xE0]
	0x03CD8384 CBNZ W8, 0x3CD838C
	0x03CD8388 BL 0x1C16DFC
	0x03CD838C MOV X0, X22
	0x03CD8390 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x710000
	005 Move X19, 0x48B000
	006 Move W8, [X20+1126]
	007 Move X19, [X19+632]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x48B000
	013 Move X0, [X0+328]
	014 Call 0x1C17CF4
	015 Move X0, 0x48B000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1126], W8
	020 Move X0, [X19]
	021 Move X20, 0x48B000
	022 Move W8, [X0+224]
	023 Move X20, [X20+328]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X8, [X0+184]
	029 Move X9, [X20]
	030 Move X10, -52338688
	031 Move X8, [X8]
	032 Move X9, [X9+184]
	033 Move [X9], X8
	034 Move X8, [X20]
	035 Move X9, -52338688
	036 Move V0, [X9+1352]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X9, [X8+184]
	040 Move [X9+8], D0
	041 Move V0, [X10+1176]
	042 Move X9, [X8+184]
	043 Move W10, 0x42C80000
	044 Move [X9+16], D0
	045 Move X9, [X8+184]
	046 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	047 Move X10, -52342784
	048 Move [X9+24], D0
	049 Move X9, [X8+184]
	050 Move V0, 0
	051 Move [X9+2], V0
	052 Move V0, [X10+240]
	053 Move X9, [X8+184]
	054 Move X10, -52342784
	055 Move [X9+3], V0
	056 Move X8, [X8+184]
	057 Move V0, [X10+145]
	058 Move [X8+4], V0
	059 Move X30, [X31+32]
	060 Return 

