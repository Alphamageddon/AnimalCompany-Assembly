Type: UnityEngine.UI.ClipperRegistry

Method: System.Void .ctor()

Disassembly:
	0x03CD35A0 LDR X8, [X23]
	0x03CD35A4 MOV X21, X0
	0x03CD35A8 LDR W9, [X8 + 0xE0]
	0x03CD35AC CBNZ W9, 0x3CD35B8
	0x03CD35B0 MOV X0, X8
	0x03CD35B4 BL 0x1C16DFC
	0x03CD35B8 MOV X0, X20
	0x03CD35BC MOV X1, X31
	0x03CD35C0 BL 0x3C38948
	0x03CD35C4 MOV X22, X31
	0x03CD35C8 TBZ X0, 0x0, 0x3CD35E0
	0x03CD35CC CBZ X20, 0x3CD3648
	0x03CD35D0 MOV X0, X20
	0x03CD35D4 MOV X1, X31
	0x03CD35D8 BL 0x3C41990
	0x03CD35DC MOV X22, X0
	0x03CD35E0 LDR X0, [X23]
	0x03CD35E4 LDR W8, [X0 + 0xE0]
	0x03CD35E8 CBNZ W8, 0x3CD35F0
	0x03CD35EC BL 0x1C16DFC
	0x03CD35F0 MOV X0, X21
	0x03CD35F4 MOV X1, X22
	0x03CD35F8 MOV X2, X31
	0x03CD35FC BL 0x3C3883C
	0x03CD3600 AND W8, W0, 0x1
	0x03CD3604 MOV X0, X19
	0x03CD3608 STRB W8, [X19 + 0x39]
	0x03CD360C STR X20, [X19 + 0xD8]
	0x03CD3610 BL 0x3CDFD14
	0x03CD3614 LDR X8, [X19]
	0x03CD3618 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x715000
	007 Move X22, 0x490000
	008 Move X20, 0x490000
	009 Move W8, [X21+1099]
	010 Move X22, [X22+272]
	011 Move X20, [X20+280]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x490000
	018 Move X0, [X0+280]
	019 Call 0x1C17CF4
	020 Move X0, 0x490000
	021 Move X0, [X0+272]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1099], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call 0x2DE3F98, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

Method: UnityEngine.UI.ClipperRegistry get_instance()

Disassembly:
	0x03CD2210 STR D8, [X31 - 0x30]!
	0x03CD2214 STR X30, [X31 + 0x8]
	0x03CD2218 STP X22, X21, [X31 + 0x10]
	0x03CD221C STP X20, X19, [X31 + 0x20]
	0x03CD2220 ADRP X22, 0x715000
	0x03CD2224 ADRP X21, 0x449000
	0x03CD2228 LDRB W8, [X22 + 0x447]
	0x03CD222C LDR X21, [X21 + 0x5E8]
	0x03CD2230 MOV X19, X1
	0x03CD2234 MOV X20, X0
	0x03CD2238 TBNZ X8, 0x0, 0x3CD2250
	0x03CD223C ADRP X0, 0x449000
	0x03CD2240 LDR X0, [X0 + 0x5E8]
	0x03CD2244 BL 0x1C16CF4
	0x03CD2248 MOVZ W8, 0x1
	0x03CD224C STRB W8, [X22 + 0x447]
	0x03CD2250 LDR X0, [X21]
	0x03CD2254 LDR W8, [X0 + 0xE0]
	0x03CD2258 CBNZ W8, 0x3CD2260
	0x03CD225C BL 0x1C16DFC
	0x03CD2260 LDP D0, D3, [X19]
	0x03CD2264 LDP D1, D2, [X20]
	0x03CD2268 ADRP X8, 0xFFFFFFFFFCE17000
	0x03CD226C LDR V8, [X8 + 0xF20]
	0x03CD2270 FSUB V0.2S, V1.2S, V0.2S
	0x00000000 INVALID
	0x03CD2278 FSUB V1.2S, V2.2S, V3.2S
	0x03CD227C UNIMPLEMENTED
	0x00000000 INVALID

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x716000
	005 Move X20, 0x491000
	006 Move W8, [X19+1100]
	007 Move X20, [X20+176]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x491000
	013 Move X0, [X0+176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1100], W8
	017 Move X0, [X20]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Call ClipperRegistry..ctor, X0
	025 Move X8, [X20]
	026 Move X8, [X8+184]
	027 Move [X8], X19
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void Cull()

Disassembly:
	0x03CD2284 FADD V0.2S, V0.2S, V2.2S
	0x03CD2288 FADD V0.2S, V1.2S, V0.2S
	0x03CD228C UNIMPLEMENTED
	0x03CD2290 FADD V0.2S, V1.2S, V0.2S
	0x03CD2294 FCMP S0, S8
	0x03CD2298 B.PL 0x3CD23F0
	0x03CD229C LDR X0, [X21]
	0x03CD22A0 LDR W8, [X0 + 0xE0]
	0x03CD22A4 CBNZ W8, 0x3CD22AC
	0x03CD22A8 BL 0x1C16DFC
	0x03CD22AC LDP D0, D1, [X20 + 0x10]
	0x03CD22B0 LDP D2, D3, [X19 + 0x10]
	0x03CD22B4 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03CD22BC FSUB V1.2S, V1.2S, V3.2S
	0x03CD22C0 UNIMPLEMENTED
	0x00000000 INVALID
	0x03CD22C8 FADD V0.2S, V0.2S, V2.2S
	0x03CD22CC FADD V0.2S, V1.2S, V0.2S
	0x03CD22D0 UNIMPLEMENTED
	0x03CD22D4 FADD V0.2S, V1.2S, V0.2S
	0x03CD22D8 FCMP S0, S8
	0x03CD22DC B.PL 0x3CD23F0
	0x03CD22E0 LDR X0, [X21]
	0x03CD22E4 LDR W8, [X0 + 0xE0]
	0x03CD22E8 CBNZ W8, 0x3CD22F0
	0x03CD22EC BL 0x1C16DFC
	0x03CD22F0 LDP D0, D1, [X20 + 0x20]
	0x03CD22F4 LDP D2, D3, [X19 + 0x20]
	0x03CD22F8 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03CD2300 FSUB V1.2S, V1.2S, V3.2S
	0x03CD2304 UNIMPLEMENTED
	0x00000000 INVALID
	0x03CD230C FADD V0.2S, V0.2S, V2.2S
	0x03CD2310 FADD V0.2S, V1.2S, V0.2S
	0x03CD2314 UNIMPLEMENTED
	0x03CD2318 FADD V0.2S, V1.2S, V0.2S
	0x03CD231C FCMP S0, S8
	0x03CD2320 B.PL 0x3CD23F0
	0x03CD2324 LDR X0, [X21]
	0x03CD2328 LDR W8, [X0 + 0xE0]
	0x03CD232C CBNZ W8, 0x3CD2334
	0x03CD2330 BL 0x1C16DFC
	0x03CD2334 LDP D0, D1, [X20 + 0x30]
	0x03CD2338 LDP D2, D3, [X19 + 0x30]
	0x03CD233C FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03CD2344 FSUB V1.2S, V1.2S, V3.2S
	0x03CD2348 UNIMPLEMENTED
	0x00000000 INVALID
	0x03CD2350 FADD V0.2S, V0.2S, V2.2S
	0x03CD2354 FADD V0.2S, V1.2S, V0.2S
	0x03CD2358 UNIMPLEMENTED
	0x03CD235C FADD V0.2S, V1.2S, V0.2S
	0x03CD2360 FCMP S0, S8
	0x03CD2364 B.PL 0x3CD23F0
	0x03CD2368 LDR X0, [X21]
	0x03CD236C LDR W8, [X0 + 0xE0]
	0x03CD2370 CBNZ W8, 0x3CD2378
	0x03CD2374 BL 0x1C16DFC
	0x03CD2378 LDP D0, D1, [X20 + 0x40]
	0x03CD237C LDP D2, D3, [X19 + 0x40]
	0x03CD2380 FSUB V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03CD2388 FSUB V1.2S, V1.2S, V3.2S
	0x03CD238C UNIMPLEMENTED

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x716000
	009 Move W8, [X20+1101]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x491000
	016 Move X0, [X0+184]
	017 Call 0x1C17CF4
	018 Move X0, 0x491000
	019 Move X0, [X0+192]
	020 Call 0x1C17CF4
	021 Move X0, 0x491000
	022 Move X0, [X0+200]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1101], W8
	026 Move X0, [X19+16]
	027 Compare X0, 0
	028 JumpIfEqual {68}
	029 Move W22, [X0+32]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X23, 0x491000
	032 Move X24, 0x491000
	033 Move X23, [X23+200]
	034 Move X24, [X24+184]
	035 Move W20, W31
	036 Move X2, [X23]
	037 Move W1, W20
	038 Call 0x2DE3D54, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {68}
	041 Move X8, [X0]
	042 Move X1, [X24]
	043 Move X21, X0
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X21
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X21
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Add W20, W20, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X19+16]
	066 Compare X0, 0
	067 JumpIfNotEqual {36}
	068 Call 0x1C17F20
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X30, [X31+64]
	076 Return 

Method: System.Void Register(UnityEngine.UI.IClipper c)

Disassembly:
	0x03CD361C LDR X9, [X8 + 0x2D8]
	0x03CD3620 LDR X1, [X8 + 0x2E0]
	0x03CD3624 BLR X9
	0x03CD3628 MOV X0, X19
	0x03CD362C BL 0x3CDFDA4
	0x03CD3630 LDP X20, X19, [X31 + 0x40]
	0x03CD3634 LDP X22, X21, [X31 + 0x30]
	0x03CD3638 LDP X30, X23, [X31 + 0x20]
	0x03CD363C LDP D9, D8, [X31 + 0x10]
	0x03CD3640 ADD X31, X31, 0x50
	0x03CD3644 RET
	0x03CD3648 BL 0x1C16F20
	0x03CD364C STR X30, [X31 - 0x30]!
	0x03CD3650 STP X22, X21, [X31 + 0x10]
	0x03CD3654 STP X20, X19, [X31 + 0x20]
	0x03CD3658 ADRP X22, 0x714000
	0x03CD365C ADRP X21, 0x48F000
	0x03CD3660 LDRB W8, [X22 + 0x4CB]
	0x03CD3664 LDR X21, [X21 + 0x160]
	0x03CD3668 MOV W20, W1
	0x03CD366C MOV X19, X0
	0x03CD3670 TBNZ X8, 0x0, 0x3CD3688
	0x03CD3674 ADRP X0, 0x48F000
	0x03CD3678 LDR X0, [X0 + 0x160]
	0x03CD367C BL 0x1C16CF4
	0x03CD3680 MOVZ W8, 0x1
	0x03CD3684 STRB W8, [X22 + 0x4CB]
	0x03CD3688 LDR X2, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x715000
	005 Move W8, [X20+1102]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x490000
	012 Move X0, [X0+288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1102], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Call ClipperRegistry.get_instance
	019 Compare X0, 0
	020 JumpIfEqual {38}
	021 Move X0, [X0+16]
	022 Compare X0, 0
	023 JumpIfEqual {38}
	024 Move X8, 0x490000
	025 Move X8, [X8+288]
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W2, 1
	030 Move X3, [X8]
	031 Move X30, [X31+32]
	032 Call 0x2DE376C, X0, X1, X2
	033 Return 
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void Unregister(UnityEngine.UI.IClipper c)

Disassembly:
	0x03CD368C ADD X0, X19, 0xE8
	0x03CD3690 MOV W1, W20
	0x03CD3694 BL 0x22543F8
	0x03CD3698 TBZ X0, 0x0, 0x3CD36BC
	0x03CD369C LDR X8, [X19]
	0x03CD36A0 MOV X0, X19
	0x03CD36A4 LDP X20, X19, [X31 + 0x20]
	0x03CD36A8 LDP X22, X21, [X31 + 0x10]
	0x03CD36AC LDR X2, [X8 + 0x2F8]
	0x03CD36B0 LDR X1, [X8 + 0x300]
	0x03CD36B4 LDR X30, [X31], #0x30
	0x03CD36B8 BR X2
	0x03CD36BC LDP X20, X19, [X31 + 0x20]
	0x03CD36C0 LDP X22, X21, [X31 + 0x10]
	0x03CD36C4 LDR X30, [X31], #0x30
	0x03CD36C8 RET
	0x03CD36CC STP D9, D8, [X31 - 0x40]!
	0x03CD36D0 STP X30, X23, [X31 + 0x10]
	0x03CD36D4 STP X22, X21, [X31 + 0x20]
	0x03CD36D8 STP X20, X19, [X31 + 0x30]
	0x03CD36DC ADRP X20, 0x714000
	0x03CD36E0 ADRP X23, 0x48F000
	0x03CD36E4 LDRB W8, [X20 + 0x45C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x715000
	005 Move W8, [X20+1103]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x490000
	012 Move X0, [X0+296]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1103], W8
	016 Call ClipperRegistry.get_instance
	017 Compare X0, 0
	018 JumpIfEqual {31}
	019 Move X0, [X0+16]
	020 Compare X0, 0
	021 JumpIfEqual {31}
	022 Move X8, 0x490000
	023 Move X8, [X8+296]
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X2, [X8]
	028 Move X30, [X31+32]
	029 Call 0x2DE391C, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void Disable(UnityEngine.UI.IClipper c)

Disassembly:
	0x03CD36E8 LDR X23, [X23 + 0x148]
	0x03CD36EC MOV X19, X0
	0x03CD36F0 TBNZ X8, 0x0, 0x3CD3798
	0x03CD36F4 ADRP X0, 0x48F000
	0x03CD36F8 LDR X0, [X0 + 0x168]
	0x03CD36FC BL 0x1C16CF4
	0x03CD3700 ADRP X0, 0x48F000
	0x03CD3704 LDR X0, [X0 + 0x148]
	0x03CD3708 BL 0x1C16CF4
	0x03CD370C ADRP X0, 0x48F000
	0x03CD3710 LDR X0, [X0 + 0x170]
	0x03CD3714 BL 0x1C16CF4
	0x03CD3718 ADRP X0, 0x476000
	0x03CD371C LDR X0, [X0 + 0x6D8]
	0x03CD3720 BL 0x1C16CF4
	0x03CD3724 ADRP X0, 0x480000
	0x03CD3728 LDR X0, [X0 + 0xB40]
	0x03CD372C BL 0x1C16CF4
	0x03CD3730 ADRP X0, 0x480000
	0x03CD3734 LDR X0, [X0 + 0xCC8]
	0x03CD3738 BL 0x1C16CF4
	0x03CD373C ADRP X0, 0x476000
	0x03CD3740 LDR X0, [X0 + 0x6E0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x715000
	005 Move W8, [X20+1104]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x490000
	012 Move X0, [X0+304]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1104], W8
	016 Call ClipperRegistry.get_instance
	017 Compare X0, 0
	018 JumpIfEqual {31}
	019 Move X0, [X0+16]
	020 Compare X0, 0
	021 JumpIfEqual {31}
	022 Move X8, 0x490000
	023 Move X8, [X8+304]
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X2, [X8]
	028 Move X30, [X31+32]
	029 Call 0x2DE3890, X0, X1
	030 Return 
	031 Call 0x1C17F20

