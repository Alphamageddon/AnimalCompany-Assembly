Type: UnityEngine.UI.BaseMeshEffect

Method: UnityEngine.UI.Graphic get_graphic()

Disassembly:
	0x03E4B59C BL 0x1C16F20
	0x03E4B5A0 STP X30, X21, [X31 - 0x20]!
	0x03E4B5A4 STP X20, X19, [X31 + 0x10]
	0x03E4B5A8 ADRP X20, 0x59D000
	0x03E4B5AC ADRP X21, 0x30D000
	0x03E4B5B0 LDRB W8, [X20 + 0x835]
	0x03E4B5B4 LDR X21, [X21 + 0x8B0]
	0x03E4B5B8 MOV X19, X0
	0x03E4B5BC TBNZ X8, 0x0, 0x3E4B5D4
	0x03E4B5C0 ADRP X0, 0x30D000
	0x03E4B5C4 LDR X0, [X0 + 0x8B0]
	0x03E4B5C8 BL 0x1C16CF4
	0x03E4B5CC MOVZ W8, 0x1
	0x03E4B5D0 STRB W8, [X20 + 0x835]
	0x03E4B5D4 LDR X1, [X21]
	0x03E4B5D8 MOV X0, X19
	0x03E4B5DC LDP X20, X19, [X31 + 0x10]
	0x03E4B5E0 LDP X30, X21, [X31], #0x20
	0x03E4B5E4 B 0x2728D50
	0x03E4B5E8 LDRB W0, [X0 + 0x30]
	0x03E4B5EC RET
	0x03E4B5F0 LDR V0, [X0 + 0x2C]
	0x03E4B5F4 RET
	0x03E4B5F8 LDR V0, [X0 + 0x8]
	0x03E4B5FC RET
	0x03E4B600 STR S0, [X0 + 0x8]
	0x03E4B604 RET
	0x03E4B608 LDR V0, [X0 + 0xC]
	0x03E4B60C RET
	0x03E4B610 STR S0, [X0 + 0xC]
	0x03E4B614 RET
	0x03E4B618 LDR V0, [X0 + 0x10]
	0x03E4B61C RET
	0x03E4B620 STR S0, [X0 + 0x10]
	0x03E4B624 RET
	0x03E4B628 LDRB W0, [X0 + 0x14]
	0x03E4B62C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59E000
	006 Move X20, 0x2A9000
	007 Move W8, [X21+2087]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x321000
	015 Move X0, [X0+504]
	016 Call 0x1C17CF4
	017 Move X0, 0x2A9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2087], W8
	022 Move X0, [X20]
	023 Move X20, [X19+32]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x321000
	037 Move X8, [X8+504]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+32], X0
	042 Move X0, [X19+32]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Void OnEnable()

Disassembly:
	0x03E4B630 AND W8, W1, 0x1
	0x03E4B634 STRB W8, [X0 + 0x14]
	0x03E4B638 RET
	0x03E4B63C STR D8, [X31 - 0x20]!
	0x03E4B640 STR X30, [X31 + 0x8]
	0x03E4B644 STP X20, X19, [X31 + 0x10]
	0x03E4B648 ADRP X20, 0x59D000
	0x03E4B64C LDRB W8, [X20 + 0x836]
	0x03E4B650 MOV V8.16B, V0.16B
	0x03E4B654 MOV X19, X0
	0x03E4B658 TBNZ X8, 0x0, 0x3E4B670
	0x03E4B65C ADRP X0, 0x30D000
	0x03E4B660 LDR X0, [X0 + 0x8B8]
	0x03E4B664 BL 0x1C16CF4
	0x03E4B668 MOVZ W8, 0x1
	0x03E4B66C STRB W8, [X20 + 0x836]
	0x03E4B670 LDR X0, [X19]
	0x03E4B674 CBZ X0, 0x3E4B6B8
	0x03E4B678 ADRP X8, 0x30D000
	0x03E4B67C LDR X8, [X8 + 0x8B8]
	0x03E4B680 LDP S0, S1, [X19 + 0x8]
	0x03E4B684 FMOV S2, 1
	0x03E4B688 FCMP S8, 0x0
	0x03E4B68C FMOV S3, W31
	0x03E4B690 FMIN S2, S8, S2
	0x03E4B694 LDR X1, [X8]
	0x03E4B698 LDP X20, X19, [X31 + 0x10]
	0x03E4B69C LDR X30, [X31 + 0x8]
	0x03E4B6A0 FSUB S1, S1, S0
	0x03E4B6A4 FCSEL S2, S2, S3, PL
	0x03E4B6A8 FMUL S1, S2, S1
	0x03E4B6AC FADD S0, S0, S1
	0x03E4B6B0 LDR V8, [X31], #0x20
	0x03E4B6B4 B 0x272A704
	0x03E4B6B8 LDP X20, X19, [X31 + 0x10]
	0x03E4B6BC LDR X30, [X31 + 0x8]
	0x03E4B6C0 LDR V8, [X31], #0x20
	0x03E4B6C4 RET
	0x03E4B6C8 LDR X8, [X0]
	0x03E4B6CC CMP X8, 0x0
	0x03E4B6D0 CSET W0, NE
	0x03E4B6D4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59E000
	006 Move X20, 0x2A9000
	007 Move W8, [X21+2088]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2A9000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2088], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call UIBehaviour.OnEnable, X0
	022 Move X0, X19
	023 Call BaseMeshEffect.get_graphic, X0
	024 Move X8, [X20]
	025 Move X20, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {51}
	039 Move X0, X19
	040 Call BaseMeshEffect.get_graphic, X0
	041 Compare X0, 0
	042 JumpIfEqual {56}
	043 Move X8, [X0]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X2, [X8+760]
	047 Move X1, [X8+768]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 CallNoReturn X2
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03E4B6D8 STP X30, X21, [X31 - 0x20]!
	0x03E4B6DC STP X20, X19, [X31 + 0x10]
	0x03E4B6E0 ADRP X21, 0x59D000
	0x03E4B6E4 LDRB W8, [X21 + 0x837]
	0x03E4B6E8 MOV X19, X1
	0x03E4B6EC MOV X20, X0
	0x03E4B6F0 TBNZ X8, 0x0, 0x3E4B714
	0x03E4B6F4 ADRP X0, 0x320000
	0x03E4B6F8 LDR X0, [X0 + 0x718]
	0x03E4B6FC BL 0x1C16CF4
	0x03E4B700 ADRP X0, 0x30D000
	0x03E4B704 LDR X0, [X0 + 0x8C8]
	0x03E4B708 BL 0x1C16CF4
	0x03E4B70C MOVZ W8, 0x1
	0x03E4B710 STRB W8, [X21 + 0x837]
	0x03E4B714 LDR X21, [X20]
	0x03E4B718 CBNZ X21, 0x3E4B73C
	0x03E4B71C ADRP X8, 0x320000
	0x03E4B720 LDR X8, [X8 + 0x718]
	0x03E4B724 LDR X0, [X8]
	0x03E4B728 BL 0x1C16F10
	0x03E4B72C MOV X21, X0
	0x03E4B730 BL 0x3E4B760
	0x03E4B734 STR X21, [X20]
	0x03E4B738 CBZ X21, 0x3E4B75C
	0x03E4B73C ADRP X8, 0x30D000
	0x03E4B740 LDR X8, [X8 + 0x8C8]
	0x03E4B744 MOV X1, X19
	0x03E4B748 LDP X20, X19, [X31 + 0x10]
	0x03E4B74C MOV X0, X21
	0x03E4B750 LDR X2, [X8]
	0x03E4B754 LDP X30, X21, [X31], #0x20
	0x03E4B758 B 0x272A4B0
	0x03E4B75C BL 0x1C16F20
	0x03E4B760 STP X30, X21, [X31 - 0x20]!
	0x03E4B764 STP X20, X19, [X31 + 0x10]
	0x03E4B768 ADRP X20, 0x59D000
	0x03E4B76C ADRP X21, 0x30D000
	0x03E4B770 LDRB W8, [X20 + 0x838]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59E000
	006 Move X20, 0x2A9000
	007 Move W8, [X21+2089]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2A9000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2089], W8
	019 Move X0, X19
	020 Call BaseMeshEffect.get_graphic, X0
	021 Move X8, [X20]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {44}
	036 Move X0, X19
	037 Call BaseMeshEffect.get_graphic, X0
	038 Compare X0, 0
	039 JumpIfEqual {52}
	040 Move X8, [X0]
	041 Move X9, [X8+760]
	042 Move X1, [X8+768]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call UIBehaviour.OnDisable, X0
	051 Return 
	052 Call 0x1C17F20

Method: System.Void OnDidApplyAnimationProperties()

Disassembly:
	0x03E4B774 LDR X21, [X21 + 0x8D0]
	0x03E4B778 MOV X19, X0
	0x03E4B77C TBNZ X8, 0x0, 0x3E4B794
	0x03E4B780 ADRP X0, 0x30D000
	0x03E4B784 LDR X0, [X0 + 0x8D0]
	0x03E4B788 BL 0x1C16CF4
	0x03E4B78C MOVZ W8, 0x1
	0x03E4B790 STRB W8, [X20 + 0x838]
	0x03E4B794 LDR X1, [X21]
	0x03E4B798 MOV X0, X19
	0x03E4B79C LDP X20, X19, [X31 + 0x10]
	0x03E4B7A0 LDP X30, X21, [X31], #0x20
	0x03E4B7A4 B 0x272A4A4
	0x03E4B7A8 LDRB W0, [X0 + 0x14]
	0x03E4B7AC RET
	0x03E4B7B0 LDR V0, [X0 + 0x10]
	0x03E4B7B4 RET
	0x03E4B7B8 LDR X0, [X0 + 0x20]
	0x03E4B7BC RET
	0x03E4B7C0 STP X30, X21, [X31 - 0x20]!
	0x03E4B7C4 STP X20, X19, [X31 + 0x10]
	0x03E4B7C8 ADRP X21, 0x59D000
	0x03E4B7CC LDRB W8, [X21 + 0x839]
	0x03E4B7D0 MOV X19, X1
	0x03E4B7D4 MOV X20, X0
	0x03E4B7D8 TBNZ X8, 0x0, 0x3E4B7F0
	0x03E4B7DC ADRP X0, 0x2D0000
	0x03E4B7E0 LDR X0, [X0 + 0x918]
	0x03E4B7E4 BL 0x1C16CF4
	0x03E4B7E8 MOVZ W8, 0x1
	0x03E4B7EC STRB W8, [X21 + 0x839]
	0x03E4B7F0 CBZ X19, 0x3E4B828
	0x03E4B7F4 ADRP X9, 0x2D0000
	0x03E4B7F8 LDR X9, [X9 + 0x918]
	0x03E4B7FC LDR X8, [X19]
	0x03E4B800 LDR X1, [X9]
	0x03E4B804 LDRB W10, [X8 + 0x130]
	0x03E4B808 LDRB W9, [X1 + 0x130]
	0x03E4B80C CMP W10, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59E000
	006 Move X20, 0x2A9000
	007 Move W8, [X21+2090]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2A9000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2090], W8
	019 Move X0, X19
	020 Call BaseMeshEffect.get_graphic, X0
	021 Move X8, [X20]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {44}
	036 Move X0, X19
	037 Call BaseMeshEffect.get_graphic, X0
	038 Compare X0, 0
	039 JumpIfEqual {52}
	040 Move X8, [X0]
	041 Move X9, [X8+760]
	042 Move X1, [X8+768]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call UIBehaviour.OnDidApplyAnimationProperties, X0
	051 Return 
	052 Call 0x1C17F20

Method: System.Void ModifyMesh(UnityEngine.Mesh mesh)

Disassembly:
	0x03E4B810 B.CC 0x3E4B85C
	0x03E4B814 LDR X8, [X8 + 0xC8]
	0x03E4B818 ADD X8, X8, X9, 0x3, LSL
	0x03E4B81C LDUR X8, [X8 - 0x8]
	0x03E4B820 CMP X8, X1
	0x03E4B824 B.NE 0x3E4B85C
	0x03E4B828 LDR X8, [X20 + 0x20]
	0x03E4B82C CMP X8, X19
	0x03E4B830 B.EQ 0x3E4B850
	0x03E4B834 MOV X0, X20
	0x03E4B838 BL 0x3E4B864
	0x03E4B83C STR X19, [X20 + 0x20]
	0x03E4B840 MOV X0, X20
	0x03E4B844 LDP X20, X19, [X31 + 0x10]
	0x03E4B848 LDP X30, X21, [X31], #0x20
	0x03E4B84C B 0x3E4BA18
	0x03E4B850 LDP X20, X19, [X31 + 0x10]
	0x03E4B854 LDP X30, X21, [X31], #0x20
	0x03E4B858 RET
	0x03E4B85C MOV X0, X19
	0x03E4B860 BL 0x1C171E0
	0x03E4B864 STP X30, X21, [X31 - 0x20]!
	0x03E4B868 STP X20, X19, [X31 + 0x10]
	0x03E4B86C ADRP X20, 0x59D000
	0x03E4B870 LDRB W8, [X20 + 0x83D]
	0x03E4B874 MOV X19, X0
	0x03E4B878 TBNZ X8, 0x0, 0x3E4B8E4
	0x03E4B87C ADRP X0, 0x2A9000
	0x03E4B880 LDR X0, [X0 + 0xE70]
	0x03E4B884 BL 0x1C16CF4
	0x03E4B888 ADRP X0, 0x320000
	0x03E4B88C LDR X0, [X0 + 0x720]
	0x03E4B890 BL 0x1C16CF4
	0x03E4B894 ADRP X0, 0x320000
	0x03E4B898 LDR X0, [X0 + 0x728]
	0x03E4B89C BL 0x1C16CF4
	0x03E4B8A0 ADRP X0, 0x320000
	0x03E4B8A4 LDR X0, [X0 + 0x730]
	0x03E4B8A8 BL 0x1C16CF4
	0x03E4B8AC ADRP X0, 0x320000
	0x03E4B8B0 LDR X0, [X0 + 0x738]
	0x03E4B8B4 BL 0x1C16CF4
	0x03E4B8B8 ADRP X0, 0x320000
	0x03E4B8BC LDR X0, [X0 + 0x740]
	0x03E4B8C0 BL 0x1C16CF4
	0x03E4B8C4 ADRP X0, 0x320000
	0x03E4B8C8 LDR X0, [X0 + 0x748]
	0x03E4B8CC BL 0x1C16CF4
	0x03E4B8D0 ADRP X0, 0x320000
	0x03E4B8D4 LDR X0, [X0 + 0x750]
	0x03E4B8D8 BL 0x1C16CF4
	0x03E4B8DC MOVZ W8, 0x1
	0x03E4B8E0 STRB W8, [X20 + 0x83D]
	0x03E4B8E4 LDR X20, [X19 + 0x20]
	0x03E4B8E8 CBZ X20, 0x3E4BA08
	0x03E4B8EC ADRP X8, 0x2A9000
	0x03E4B8F0 LDR X8, [X8 + 0xE70]
	0x03E4B8F4 ADRP X21, 0x320000
	0x03E4B8F8 LDR X0, [X8]
	0x03E4B8FC LDR X21, [X21 + 0x750]
	0x03E4B900 BL 0x1C16F10
	0x03E4B904 LDR X2, [X21]
	0x03E4B908 MOV X1, X19
	0x03E4B90C MOV X3, X31
	0x03E4B910 MOV X21, X0
	0x03E4B914 BL 0x3314368
	0x03E4B918 MOV X0, X20
	0x03E4B91C MOV X1, X21
	0x03E4B920 MOV X2, X31
	0x03E4B924 BL 0x3DBE8E4
	0x03E4B928 LDR X0, [X19 + 0x20]
	0x03E4B92C CBZ X0, 0x3E4BA14
	0x03E4B930 LDR X8, [X0]
	0x03E4B934 ADRP X20, 0x320000
	0x03E4B938 ADRP X21, 0x320000
	0x03E4B93C LDR X9, [X8 + 0x398]
	0x03E4B940 LDR X1, [X8 + 0x3A0]
	0x03E4B944 LDR X20, [X20 + 0x738]
	0x03E4B948 LDR X21, [X21 + 0x748]
	0x03E4B94C BLR X9
	0x03E4B950 LDR X8, [X20]
	0x03E4B954 MOV X20, X0
	0x03E4B958 MOV X0, X8
	0x03E4B95C BL 0x1C16F10
	0x03E4B960 LDR X2, [X21]
	0x03E4B964 MOV X1, X19
	0x03E4B968 MOV X3, X31
	0x03E4B96C MOV X21, X0
	0x03E4B970 BL 0x2D0E824
	0x03E4B974 CBZ X20, 0x3E4BA14
	0x03E4B978 ADRP X8, 0x320000
	0x03E4B97C LDR X8, [X8 + 0x728]
	0x03E4B980 MOVZ W2, 0x1
	0x03E4B984 MOV X0, X20
	0x03E4B988 MOV X1, X21
	0x03E4B98C LDR X3, [X8]
	0x03E4B990 BL 0x21A18B4
	0x03E4B994 LDR X0, [X19 + 0x20]
	0x03E4B998 CBZ X0, 0x3E4BA14
	0x03E4B99C LDR X8, [X0]
	0x03E4B9A0 ADRP X20, 0x320000
	0x03E4B9A4 ADRP X21, 0x320000
	0x03E4B9A8 LDR X9, [X8 + 0x398]
	0x03E4B9AC LDR X1, [X8 + 0x3A0]
	0x03E4B9B0 LDR X20, [X20 + 0x730]
	0x03E4B9B4 LDR X21, [X21 + 0x740]
	0x03E4B9B8 BLR X9
	0x03E4B9BC LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x59E000
	007 Move X19, 0x30F000
	008 Move W8, [X22+2091]
	009 Move X19, [X19+416]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2A9000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x30F000
	020 Move X0, [X0+416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2091], W8
	024 Move X0, [X19]
	025 Move X22, 0x2A9000
	026 Move X22, [X22+3584]
	027 Call 0x1C17F10
	028 Move X1, X20
	029 Move X19, X0
	030 Call VertexHelper..ctor, X0, X1
	031 Move X8, [X21]
	032 Move X9, [X8+632]
	033 Move X2, [X8+640]
	034 Move X0, X21
	035 Move X1, X19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X19, 0
	038 JumpIfEqual {74}
	039 Move X0, X19
	040 Move X1, X20
	041 Call VertexHelper.FillMesh, X0, X1
	042 Move X20, X31
	043 Move X8, [X19]
	044 Move X1, [X22]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X19
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X20, 0
	065 JumpIfNotEqual {72}
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Call 0x1C17F20
	075 Move X21, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, X21
	078 Call 0x3EB2AD0
	079 Move X20, [X0]
	080 Call 0x3EB2AE0
	081 Compare X19, 0
	082 JumpIfNotEqual {43}
	083 Move X20, X31
	084 Move X21, X0
	085 Compare X19, 0
	086 JumpIfEqual {108}
	087 Move X8, [X19]
	088 Move X1, [X22]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X19
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X19
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X20, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X21
	111 Call 0x1D2D690
	112 Move X0, X20
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.Void ModifyMesh(UnityEngine.UI.VertexHelper vh)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x03E4B9C0 MOV X20, X0
	0x03E4B9C4 MOV X0, X8

ISIL:
	001 Move X1, X31
	002 Call UIBehaviour..ctor, X0
	003 Return 

