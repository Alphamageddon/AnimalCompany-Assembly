Type: UnityEngine.UI.Button/<OnFinishSubmit>d__9

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03CD1444 B 0x3CD1404
	0x03CD1448 BL 0x1C16F20
	0x03CD144C STP X30, X21, [X31 - 0x20]!
	0x03CD1450 STP X20, X19, [X31 + 0x10]
	0x03CD1454 ADRP X21, 0x716000
	0x03CD1458 LDRB W8, [X21 + 0x435]
	0x03CD145C MOV X19, X1
	0x03CD1460 MOV X20, X0
	0x03CD1464 TBNZ X8, 0x0, 0x3CD1488
	0x03CD1468 ADRP X0, 0x487000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03CD146C LDR X0, [X0 + 0x718]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03CD1470 BL 0x1C16CF4
	0x03CD1474 ADRP X0, 0x488000
	0x03CD1478 LDR X0, [X0 + 0xB20]
	0x03CD147C BL 0x1C16CF4
	0x03CD1480 MOVZ W8, 0x1
	0x03CD1484 STRB W8, [X21 + 0x435]
	0x03CD1488 CBZ X20, 0x3CD1598
	0x03CD148C ADRP X21, 0x488000
	0x03CD1490 LDR X8, [X20]
	0x03CD1494 LDR X21, [X21 + 0xB20]
	0x03CD1498 LDRH W9, [X8 + 0x12E]
	0x03CD149C LDR X1, [X21]
	0x03CD14A0 CBZ X9, 0x3CD14C4
	0x03CD14A4 LDR X10, [X8 + 0xB0]
	0x03CD14A8 ADD X10, X10, 0x8
	0x03CD14AC LDUR X11, [X10 - 0x8]
	0x03CD14B0 CMP X11, X1
	0x03CD14B4 B.EQ 0x3CD14D4
	0x03CD14B8 SUBS X9, X9, 0x1
	0x03CD14BC ADD X10, X10, 0x10
	0x03CD14C0 B.NE 0x3CD14AC
	0x03CD14C4 MOVZ W2, 0x1
	0x03CD14C8 MOV X0, X20
	0x03CD14CC BL 0x1C5C788
	0x03CD14D0 B 0x3CD14E4
	0x03CD14D4 LDR W9, [X10]
	0x03CD14D8 ADD W9, W9, 0x1
	0x03CD14DC ADD X8, X8, W9, 0x4, SXTW
	0x03CD14E0 ADD X0, X8, 0x138
	0x03CD14E4 LDP X8, X1, [X0]
	0x03CD14E8 MOV X0, X20
	0x03CD14EC BLR X8
	0x03CD14F0 CBZ X19, 0x3CD1598
	0x03CD14F4 LDR X8, [X19]
	0x03CD14F8 LDR X1, [X21]
	0x03CD14FC ADRP X21, 0x487000
	0x03CD1500 MOV X20, X0
	0x03CD1504 LDRH W9, [X8 + 0x12E]
	0x03CD1508 LDR X21, [X21 + 0x718]
	0x03CD150C CBZ X9, 0x3CD1530
	0x03CD1510 LDR X10, [X8 + 0xB0]
	0x03CD1514 ADD X10, X10, 0x8
	0x03CD1518 LDUR X11, [X10 - 0x8]
	0x03CD151C CMP X11, X1
	0x03CD1520 B.EQ 0x3CD1540
	0x03CD1524 SUBS X9, X9, 0x1
	0x03CD1528 ADD X10, X10, 0x10
	0x03CD152C B.NE 0x3CD1518
	0x03CD1530 MOVZ W2, 0x1
	0x03CD1534 MOV X0, X19
	0x03CD1538 BL 0x1C5C788
	0x03CD153C B 0x3CD1550
	0x03CD1540 LDR W9, [X10]
	0x03CD1544 ADD W9, W9, 0x1
	0x03CD1548 ADD X8, X8, W9, 0x4, SXTW
	0x03CD154C ADD X0, X8, 0x138
	0x03CD1550 LDP X8, X1, [X0]
	0x03CD1554 MOV X0, X19
	0x03CD1558 BLR X8
	0x03CD155C LDR X8, [X21]
	0x03CD1560 MOV X19, X0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x717000
	007 Move W8, [X20+1070]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x44B000
	014 Move X0, [X0+1512]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1070], W8
	018 Move W8, [X19+16]
	019 Move X20, [X19+32]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Compare W8, 0
	022 JumpIfNotEqual {66}
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W8, TEMP
	026 Move [X19+16], W8
	027 Compare X20, 0
	028 JumpIfEqual {73}
	029 Move X8, 0x44B000
	030 Move X8, [X8+1512]
	031 Move V8, [X20+168]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move [X19+40], S8
	038 Move [X19+44], W31
	039 Move S9, W31
	040 Move S8, [X19+40]
	041 Move S9, [X19+44]
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W8, TEMP
	045 Move [X19+16], W8
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move X0, X31
	048 Call Time.get_unscaledDeltaTime
	049 Add S0, S9, S0
	050 Move W0, 1
	051 Move [X19+24], X31
	052 Move [X19+44], S0
	053 Move [X19+16], W0
	054 Compare X20, 0
	055 JumpIfEqual {73}
	056 Move X0, X20
	057 Move X1, X31
	058 Call Selectable.get_currentSelectionState, X0
	059 Move X8, [X20]
	060 Move W1, W0
	061 Move X0, X20
	062 Move W2, W31
	063 Move X9, [X8+728]
	064 Move X3, [X8+736]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W0, W31
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move D9, [X31+48]
	071 Move D8, [X31+56]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x03CD1564 LDR W9, [X8 + 0xE0]
	0x03CD1568 CBNZ W9, 0x3CD1574

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03CD156C MOV X0, X8
	0x03CD1570 BL 0x1C16DFC
	0x03CD1574 MOV X0, X20
	0x03CD1578 BL 0x3CD1390
	0x03CD157C MOV W20, W0
	0x03CD1580 MOV X0, X19
	0x03CD1584 BL 0x3CD1390
	0x03CD1588 SUB W0, W20, W0
	0x03CD158C LDP X20, X19, [X31 + 0x10]
	0x03CD1590 LDP X30, X21, [X31], #0x20
	0x03CD1594 RET
	0x03CD1598 BL 0x1C16F20
	0x03CD159C STP X30, X21, [X31 - 0x20]!
	0x03CD15A0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x423000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x492000
	011 Move X0, [X0+64]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03CD15A4 ADRP X20, 0x716000
	0x03CD15A8 ADRP X21, 0x487000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

