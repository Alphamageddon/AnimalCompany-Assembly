Type: UnityEngine.UI.Scrollbar

Method: UnityEngine.RectTransform get_handleRect()

Disassembly:
	0x03E3C1D8 CSET W0, EQ
	0x03E3C1DC B 0x3E3C1E4

ISIL:
	001 Move X0, [X0+256]
	002 Return X0

Method: System.Void set_handleRect(UnityEngine.RectTransform value)

Disassembly:
	0x03E3C1E0 MOV W0, W31
	0x03E3C1E4 LDP X20, X19, [X31 + 0x10]
	0x03E3C1E8 LDR X30, [X31], #0x20
	0x03E3C1EC RET
	0x03E3C1F0 BL 0x1C16F20
	0x03E3C1F4 SUB X31, X31, 0x50
	0x03E3C1F8 STP D9, D8, [X31 + 0x10]
	0x03E3C1FC STP X30, X23, [X31 + 0x20]
	0x03E3C200 STP X22, X21, [X31 + 0x30]
	0x03E3C204 STP X20, X19, [X31 + 0x40]
	0x03E3C208 ADRP X21, 0x5AC000
	0x03E3C20C LDRB W8, [X21 + 0x79B]
	0x03E3C210 MOV X20, X1
	0x03E3C214 MOV X19, X0
	0x03E3C218 TBNZ X8, 0x0, 0x3E3C23C
	0x03E3C21C ADRP X0, 0x2B7000
	0x03E3C220 LDR X0, [X0 + 0x598]
	0x03E3C224 BL 0x1C16CF4
	0x03E3C228 ADRP X0, 0x30D000
	0x03E3C22C LDR X0, [X0 + 0x6B8]
	0x03E3C230 BL 0x1C16CF4
	0x03E3C234 MOVZ W8, 0x1
	0x03E3C238 STRB W8, [X21 + 0x79B]
	0x03E3C23C MOV X0, X19
	0x03E3C240 MOV X1, X20
	0x03E3C244 STR X31, [X31 + 0x8]
	0x03E3C248 STRB W31, [X19 + 0x140]
	0x03E3C24C BL 0x3E3C190
	0x03E3C250 TBZ X0, 0x0, 0x3E3C38C
	0x03E3C254 ADRP X8, 0x2B7000
	0x03E3C258 LDR X8, [X8 + 0x598]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5AD000
	007 Move X21, 0x330000
	008 Move W8, [X22+1938]
	009 Move X21, [X21+824]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x330000
	017 Move X0, [X0+824]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1938], W8
	021 Move X2, [X21]
	022 Add X0, X19, 256
	023 Move X1, X20
	024 Call 0x2255190, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {39}
	029 Move X0, X19
	030 Call Scrollbar.UpdateCachedReferences, X0
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call Scrollbar.UpdateVisuals, X0
	038 Return 
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: UnityEngine.UI.Scrollbar/Direction get_direction()

Disassembly:
	0x03E3C4F4 STRB W8, [X21 + 0x7D4]
	0x03E3C4F8 CBZ X20, 0x3E3C5E4

ISIL:
	001 Move W0, [X0+264]
	002 Return X0

Method: System.Void set_direction(UnityEngine.UI.Scrollbar/Direction value)

Disassembly:
	0x03E3C4FC LDR W8, [X20 + 0x148]
	0x03E3C500 CBZ W8, 0x3E3C514
	0x03E3C504 LDP X20, X19, [X31 + 0x20]
	0x03E3C508 LDP X22, X21, [X31 + 0x10]
	0x03E3C50C LDR X30, [X31], #0x30
	0x03E3C510 RET
	0x03E3C514 LDR X8, [X19]
	0x03E3C518 MOV X0, X19
	0x03E3C51C LDR X9, [X8 + 0x2B8]
	0x03E3C520 LDR X1, [X8 + 0x2C0]
	0x03E3C524 BLR X9
	0x03E3C528 TBZ X0, 0x0, 0x3E3C5C8
	0x03E3C52C LDR W8, [X19 + 0x28]
	0x03E3C530 CBZ W8, 0x3E3C5C8
	0x03E3C534 ADRP X22, 0x2DE000
	0x03E3C538 LDR X22, [X22 + 0xDF8]
	0x03E3C53C LDR X0, [X22]
	0x03E3C540 LDR W8, [X0 + 0xE0]
	0x03E3C544 CBNZ W8, 0x3E3C54C
	0x03E3C548 BL 0x1C16DFC
	0x03E3C54C MOV X0, X31
	0x03E3C550 BL 0x3E4FF90
	0x03E3C554 ADRP X8, 0x2B7000
	0x03E3C558 LDR X8, [X8 + 0x598]
	0x03E3C55C MOV X21, X0
	0x03E3C560 LDR X8, [X8]
	0x03E3C564 LDR W9, [X8 + 0xE0]
	0x03E3C568 CBNZ W9, 0x3E3C574
	0x03E3C56C MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5AD000
	007 Move X21, 0x330000
	008 Move W8, [X22+1939]
	009 Move X21, [X21+832]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x330000
	017 Move X0, [X0+832]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1939], W8
	021 Move X2, [X21]
	022 Add X0, X19, 264
	023 Move W1, W20
	024 Call SetPropertyUtility.SetStruct, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {37}
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call Scrollbar.UpdateVisuals, X0
	036 Return 
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E3C570 BL 0x1C16DFC
	0x03E3C574 MOV X0, X21
	0x03E3C578 MOV X1, X31
	0x03E3C57C MOV X2, X31
	0x03E3C580 BL 0x3C354F8
	0x03E3C584 TBZ X0, 0x0, 0x3E3C5C8
	0x03E3C588 LDR X0, [X22]
	0x03E3C58C LDR W8, [X0 + 0xE0]
	0x03E3C590 CBNZ W8, 0x3E3C598
	0x03E3C594 BL 0x1C16DFC
	0x03E3C598 MOV X0, X31
	0x03E3C59C BL 0x3E4FF90
	0x03E3C5A0 MOV X21, X0
	0x03E3C5A4 MOV X0, X19
	0x03E3C5A8 MOV X1, X31
	0x03E3C5AC BL 0x3C32ECC
	0x03E3C5B0 CBZ X21, 0x3E3C5E4
	0x03E3C5B4 MOV X1, X0
	0x03E3C5B8 MOV X0, X21
	0x03E3C5BC MOV X2, X20
	0x03E3C5C0 MOV X3, X31
	0x03E3C5C4 BL 0x3E4EC58
	0x03E3C5C8 MOVZ W8, 0x1
	0x03E3C5CC STRB W8, [X19 + 0xF1]
	0x03E3C5D0 MOV X0, X19
	0x03E3C5D4 LDP X20, X19, [X31 + 0x20]
	0x03E3C5D8 LDP X22, X21, [X31 + 0x10]
	0x03E3C5DC LDR X30, [X31], #0x30
	0x03E3C5E0 B 0x3E42290
	0x03E3C5E4 BL 0x1C16F20
	0x03E3C5E8 STP D9, D8, [X31 - 0x40]!
	0x03E3C5EC STR X30, [X31 + 0x10]
	0x03E3C5F0 STP X22, X21, [X31 + 0x20]
	0x03E3C5F4 STP X20, X19, [X31 + 0x30]
	0x03E3C5F8 ADRP X21, 0x5AC000
	0x03E3C5FC ADRP X22, 0x32F000
	0x03E3C600 LDRB W8, [X21 + 0x79D]
	0x03E3C604 LDR X22, [X22 + 0x378]
	0x03E3C608 MOV X19, X1
	0x03E3C60C MOV V8.16B, V1.16B
	0x03E3C610 MOV V9.16B, V0.16B
	0x03E3C614 MOV X20, X0
	0x03E3C618 TBNZ X8, 0x0, 0x3E3C630
	0x03E3C61C ADRP X0, 0x32F000
	0x03E3C620 LDR X0, [X0 + 0x378]
	0x03E3C624 BL 0x1C16CF4
	0x03E3C628 MOVZ W8, 0x1
	0x03E3C62C STRB W8, [X21 + 0x79D]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5AD000
	006 Move X20, 0x330000
	007 Move W8, [X21+1940]
	008 Move X20, [X20+840]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x330000
	015 Move X0, [X0+840]
	016 Call 0x1C17CF4
	017 Move X0, 0x31D000
	018 Move X0, [X0+2648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1940], W8
	022 Move W8, 0xCCCD
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 Move [X19+272], W8
	025 Move X0, [X20]
	026 Move X21, 0x31D000
	027 Move X21, [X21+2648]
	028 Call 0x1C17F10
	029 Move X20, X0
	030 Call ScrollEvent..ctor, X0
	031 Move [X19+280], X20
	032 Move X20, 0x59E000
	033 Move W8, [X20+1935]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x2C0000
	037 Move X0, [X0+3848]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1935], W8
	041 Move X8, 0x2C0000
	042 Move X8, [X8+3848]
	043 Move X8, [X8]
	044 Move X8, [X8+184]
	045 Move V0, [X8]
	046 Move [X19+296], D0
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call Selectable..ctor, X0
	058 Return 

Method: System.Single get_value()

Disassembly:
	0x03E3C78C LDRB W11, [X9, X8, LSL]
	0x03E3C790 ADD X10, X10, X11, 0x2, LSL
	0x03E3C794 BR X10
	0x03E3C798 LDR W8, [X19 + 0x108]
	0x03E3C79C CMP W8, 0x1
	0x03E3C7A0 B.HI 0x3E3C8D8
	0x03E3C7A4 LDR X8, [X19]
	0x03E3C7A8 LDR X9, [X8 + 0x2E8]
	0x03E3C7AC LDR X1, [X8 + 0x2F0]
	0x03E3C7B0 B 0x3E3C86C
	0x03E3C7B4 LDR W8, [X19 + 0x108]
	0x03E3C7B8 CMP W8, 0x2
	0x03E3C7BC B.CC 0x3E3C8D8
	0x03E3C7C0 LDR X8, [X19]
	0x03E3C7C4 LDR X9, [X8 + 0x308]
	0x03E3C7C8 LDR X1, [X8 + 0x310]
	0x03E3C7CC B 0x3E3C7E8
	0x03E3C7D0 LDR W8, [X19 + 0x108]
	0x03E3C7D4 CMP W8, 0x1
	0x03E3C7D8 B.HI 0x3E3C8D8
	0x03E3C7DC LDR X8, [X19]
	0x03E3C7E0 LDR X9, [X8 + 0x2F8]
	0x03E3C7E4 LDR X1, [X8 + 0x300]
	0x03E3C7E8 MOV X0, X19
	0x03E3C7EC BLR X9
	0x03E3C7F0 ADRP X8, 0x2B7000
	0x03E3C7F4 LDR X8, [X8 + 0x598]
	0x03E3C7F8 MOV X21, X0
	0x03E3C7FC LDR X8, [X8]
	0x03E3C800 LDR W9, [X8 + 0xE0]
	0x03E3C804 CBNZ W9, 0x3E3C810
	0x03E3C808 MOV X0, X8
	0x03E3C80C BL 0x1C16DFC
	0x03E3C810 MOV X0, X21
	0x03E3C814 MOV X1, X31
	0x03E3C818 MOV X2, X31
	0x03E3C81C BL 0x3C3883C
	0x03E3C820 TBZ X0, 0x0, 0x3E3C8D8
	0x03E3C824 LDR W8, [X19 + 0x108]
	0x03E3C828 MOV X0, X19
	0x03E3C82C AND W20, W8, 0xFFFFFFFD
	0x03E3C830 BL 0x3E3B78C
	0x03E3C834 LDR W8, [X19 + 0x114]
	0x03E3C838 CMP W8, 0x2
	0x03E3C83C B.LT 0x3E3C8F8
	0x03E3C840 SUB W8, W8, 0x1

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W8, [X0+276]
	005 Move V0, [X0+268]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Subtract W8, W8, 1
	008 NotImplemented "Instruction SCVTF not yet implemented."
	009 Multiply S8, S0, S1
	010 Move X19, X0
	011 NotImplemented "Instruction FCVT not yet implemented."
	012 Add X0, X31, 8
	013 Call 0x3EB2C00
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 Move D1, -0.5
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move V0, [X31+8]
	018 Move S1, -1
	019 Move D1, 0.5
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move V0, [X31+8]
	022 Move S1, 1
	023 NotImplemented "Instruction FCVTZS not yet implemented."
	024 NotImplemented "Instruction INVALID not yet implemented."
	025 Add S1, S0, S1
	026 And X31, X8, 1
	027 NotImplemented "Instruction FCSEL not yet implemented."
	028 Move S0, -0.5
	029 Add S0, S8, S0
	030 NotImplemented "Instruction FRINTP not yet implemented."
	031 Move S0, 0.5
	032 Add S0, S8, S0
	033 NotImplemented "Instruction FRINTM not yet implemented."
	034 Move W8, [X19+276]
	035 Subtract W8, W8, 1
	036 NotImplemented "Instruction SCVTF not yet implemented."
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Move V8, [X31+32]
	041 Return V0

Method: System.Void set_value(System.Single value)

Disassembly:
	0x03E3C844 SCVTF S1, W8
	0x03E3C848 FMOV S2, 1

ISIL:
	001 Move W1, 1

Method: System.Void SetValueWithoutNotify(System.Single input)

Disassembly:
	0x03E3C910 FCSEL S1, S2, S1, EQ
	0x03E3C914 B 0x3E3C934

ISIL:
	001 Move W1, W31
	002 Call Scrollbar.Set, X0, V0, X1
	003 Return 

Method: System.Single get_size()

Disassembly:
	0x03E3C918 ADRP X8, 0xFFFFFFFFFCCAE000
	0x03E3C91C LDR V1, [X8 + 0xBC]

ISIL:
	001 Move V0, [X0+272]
	002 Return V0

Method: System.Void set_size(System.Single value)

Disassembly:
	0x03E3C920 FNEG S2, S1
	0x03E3C924 CMP W20, 0x1
	0x03E3C928 FMOV S3, 1
	0x03E3C92C FMOV S4, W31
	0x03E3C930 FCSEL S1, S1, S2, EQ
	0x03E3C934 MOV X0, X19
	0x03E3C938 LDP X20, X19, [X31 + 0x10]
	0x03E3C93C FADD S0, S0, S1
	0x03E3C940 FMIN S1, S0, S3
	0x03E3C944 FCMP S0, 0x0
	0x03E3C948 FCSEL S0, S1, S4, PL
	0x03E3C94C MOVZ W1, 0x1
	0x03E3C950 LDP X30, X21, [X31], #0x20
	0x03E3C954 B 0x3E3B84C
	0x03E3C958 BL 0x1C16F20
	0x03E3C95C STP X30, X19, [X31 - 0x10]!
	0x03E3C960 CBZ X1, 0x3E3C9E4
	0x03E3C964 LDR W8, [X1 + 0x28]
	0x03E3C968 MOV X19, X1
	0x03E3C96C CMP W8, 0x3
	0x03E3C970 B.HI 0x3E3C9DC
	0x03E3C974 ADRP X9, 0xFFFFFFFFFCD5C000
	0x03E3C978 ADD X9, X9, 0x628
	0x03E3C97C ADR X10, 0x10
	0x03E3C980 LDRB W11, [X9, X8, LSL]
	0x03E3C984 ADD X10, X10, X11, 0x2, LSL
	0x03E3C988 BR X10
	0x03E3C98C LDR X8, [X0]
	0x03E3C990 LDR X9, [X8 + 0x2E8]
	0x03E3C994 LDR X1, [X8 + 0x2F0]
	0x03E3C998 B 0x3E3C9C8
	0x03E3C99C LDR X8, [X0]
	0x03E3C9A0 LDR X9, [X8 + 0x308]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5AD000
	007 Move X20, 0x327000
	008 Move W8, [X21+1941]
	009 Move X20, [X20+1440]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x327000
	017 Move X0, [X0+1440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1941], W8
	021 Move X1, [X20]
	022 Move S0, 1
	023 NotImplemented "Instruction FMIN not yet implemented."
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move S1, W31
	026 Add X0, X19, 272
	027 NotImplemented "Instruction FCSEL not yet implemented."
	028 Call SetPropertyUtility.SetStruct, X0, V0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {41}
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Move V8, [X31+48]
	039 Call Scrollbar.UpdateVisuals, X0
	040 Return 
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Move V8, [X31+48]
	046 Return 

Method: System.Int32 get_numberOfSteps()

Disassembly:
	0x03E3C9A4 LDR X1, [X8 + 0x310]
	0x03E3C9A8 B 0x3E3C9C8

ISIL:
	001 Move W0, [X0+276]
	002 Return X0

Method: System.Void set_numberOfSteps(System.Int32 value)

Disassembly:
	0x03E3C9AC LDR X8, [X0]
	0x03E3C9B0 LDR X9, [X8 + 0x2F8]
	0x03E3C9B4 LDR X1, [X8 + 0x300]
	0x03E3C9B8 B 0x3E3C9C8
	0x03E3C9BC LDR X8, [X0]
	0x03E3C9C0 LDR X9, [X8 + 0x318]
	0x03E3C9C4 LDR X1, [X8 + 0x320]
	0x03E3C9C8 BLR X9
	0x03E3C9CC MOV X1, X19
	0x03E3C9D0 MOV X2, X0
	0x03E3C9D4 LDP X30, X19, [X31], #0x10
	0x03E3C9D8 B 0x3E4217C
	0x03E3C9DC LDP X30, X19, [X31], #0x10
	0x03E3C9E0 RET
	0x03E3C9E4 BL 0x1C16F20
	0x03E3C9E8 LDR W8, [X0 + 0x28]
	0x03E3C9EC CMP W8, 0x3
	0x03E3C9F0 B.NE 0x3E3CA00
	0x03E3C9F4 LDR W8, [X0 + 0x108]
	0x03E3C9F8 CMP W8, 0x2
	0x03E3C9FC B.CC 0x3E3CA04
	0x03E3CA00 B 0x3E3CA0C
	0x03E3CA04 MOV X0, X31
	0x03E3CA08 RET
	0x03E3CA0C STP D11, D10, [X31 - 0x40]!
	0x03E3CA10 STP D9, D8, [X31 + 0x10]
	0x03E3CA14 STR X30, [X31 + 0x20]
	0x03E3CA18 STP X20, X19, [X31 + 0x30]
	0x03E3CA1C LDR W8, [X0 + 0x28]
	0x03E3CA20 MOV X19, X0
	0x03E3CA24 CMP W8, 0x4
	0x03E3CA28 B.NE 0x3E3CA34
	0x03E3CA2C LDR X0, [X19 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5AD000
	007 Move X21, 0x327000
	008 Move W8, [X22+1942]
	009 Move X21, [X21+1448]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x327000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1942], W8
	021 Move X2, [X21]
	022 Add X0, X19, 276
	023 Move W1, W20
	024 Call SetPropertyUtility.SetStruct, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {41}
	029 Move V0, [X19+268]
	030 Move W1, 1
	031 Move X0, X19
	032 Call Scrollbar.Set, X0, V0, X1
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call Scrollbar.UpdateVisuals, X0
	040 Return 
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return 

Method: UnityEngine.UI.Scrollbar/ScrollEvent get_onValueChanged()

Disassembly:
	0x03E3CA30 B 0x3E3CA3C
	0x03E3CA34 TBNZ X8, 0x0, 0x3E3CA50

ISIL:
	001 Move X0, [X0+280]
	002 Return X0

Method: System.Void set_onValueChanged(UnityEngine.UI.Scrollbar/ScrollEvent value)

Disassembly:
	0x03E3CA38 MOV X0, X31
	0x03E3CA3C LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0+280], X1
	002 Return 

Method: System.Single get_stepSize()

Disassembly:
	0x03E3CA40 LDR X30, [X31 + 0x20]
	0x03E3CA44 LDP D9, D8, [X31 + 0x10]
	0x03E3CA48 LDP D11, D10, [X31], #0x40
	0x03E3CA4C RET
	0x03E3CA50 MOV X0, X19
	0x03E3CA54 MOV X1, X31
	0x03E3CA58 BL 0x3C32E90
	0x03E3CA5C CBZ X0, 0x3E3CAE0
	0x03E3CA60 MOV X1, X31
	0x03E3CA64 BL 0x3C3DEB4
	0x03E3CA68 ADRP X20, 0x59C000

ISIL:
	001 Move W8, [X0+276]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Subtract W8, W8, 1
	004 NotImplemented "Instruction SCVTF not yet implemented."
	005 Move S1, 1
	006 NotImplemented "Instruction FDIV not yet implemented."
	007 Return V0
	008 Move X8, -53809152
	009 Move V0, [X8+188]
	010 Return V0

Method: System.Void Rebuild(UnityEngine.UI.CanvasUpdate executing)

Disassembly:
	0x03E3CA6C LDRB W8, [X20 + 0xB6F]

ISIL:
	001 Return 

Method: System.Void LayoutComplete()

Disassembly:
	0x03E3CA70 MOV V8.16B, V0.16B

ISIL:
	001 Return 

Method: System.Void GraphicUpdateComplete()

Disassembly:
	0x03E3CA74 MOV V9.16B, V1.16B

ISIL:
	001 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03E3CA78 MOV V10.16B, V2.16B
	0x03E3CA7C MOV V11.16B, V3.16B
	0x03E3CA80 CBNZ W8, 0x3E3CA98
	0x03E3CA84 ADRP X0, 0x2B7000
	0x03E3CA88 LDR X0, [X0 + 0x5A0]
	0x03E3CA8C BL 0x1C16CF4
	0x03E3CA90 MOVZ W8, 0x1
	0x03E3CA94 STRB W8, [X20 + 0xB6F]
	0x03E3CA98 ADRP X8, 0x2B7000
	0x03E3CA9C LDR X8, [X8 + 0x5A0]
	0x03E3CAA0 MOV V0.16B, V8.16B
	0x03E3CAA4 MOV V1.16B, V9.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Selectable.OnEnable, X0
	005 Move X0, X19
	006 Call Scrollbar.UpdateCachedReferences, X0
	007 Move V0, [X19+268]
	008 Move X0, X19
	009 Move W1, W31
	010 Call Scrollbar.Set, X0, V0, X1
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call Scrollbar.UpdateVisuals, X0
	015 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03E3CD60 LDRB W8, [X20 + 0xABD]
	0x03E3CD64 MOV V8.16B, V0.16B
	0x03E3CD68 MOV V9.16B, V1.16B
	0x03E3CD6C MOV V10.16B, V2.16B
	0x03E3CD70 MOV V11.16B, V3.16B
	0x03E3CD74 CBNZ W8, 0x3E3CD8C
	0x03E3CD78 ADRP X0, 0x2B7000
	0x03E3CD7C LDR X0, [X0 + 0x5A0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 304
	005 Move X1, X31
	006 Call DrivenRectTransformTracker.Clear, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]

Method: System.Void Update()

Disassembly:
	0x03E3CEA8 B 0x3E3CEBC
	0x03E3CEAC MOV X0, X8
	0x03E3CEB0 BL 0x1C16DFC
	0x03E3CEB4 CBNZ X20, 0x3E3CE90
	0x03E3CEB8 MOV X0, X31

ISIL:
	001 Move W8, [X0+321]
	002 Compare W8, 0
	003 JumpIfEqual {7}
	004 Move [X0+321], W31
	005 Call Scrollbar.UpdateVisuals, X0
	006 Return 
	007 Return 

Method: System.Void UpdateCachedReferences()

Disassembly:
	0x03E3C25C LDR X21, [X19 + 0x120]
	0x03E3C260 LDR X0, [X8]
	0x03E3C264 LDR W8, [X0 + 0xE0]
	0x03E3C268 CBNZ W8, 0x3E3C270
	0x03E3C26C BL 0x1C16DFC
	0x03E3C270 MOV X0, X21
	0x03E3C274 MOV X1, X31
	0x03E3C278 MOV X2, X31
	0x03E3C27C BL 0x3C3883C
	0x03E3C280 TBNZ X0, 0x0, 0x3E3C38C
	0x03E3C284 ADRP X21, 0x59D000
	0x03E3C288 LDRB W8, [X21 + 0x78F]
	0x03E3C28C CBNZ W8, 0x3E3C2A4
	0x03E3C290 ADRP X0, 0x2BF000
	0x03E3C294 LDR X0, [X0 + 0xF08]
	0x03E3C298 BL 0x1C16CF4
	0x03E3C29C MOVZ W8, 0x1
	0x03E3C2A0 STRB W8, [X21 + 0x78F]
	0x03E3C2A4 ADRP X8, 0x2BF000
	0x03E3C2A8 LDR X8, [X8 + 0xF08]
	0x03E3C2AC LDR X8, [X8]
	0x03E3C2B0 LDR X8, [X8 + 0xB8]
	0x03E3C2B4 LDR V0, [X8]
	0x03E3C2B8 STR D0, [X19 + 0x128]
	0x03E3C2BC CBZ X20, 0x3E3C3A4
	0x03E3C2C0 LDR X21, [X19 + 0x100]
	0x03E3C2C4 LDP S8, S9, [X20 + 0xE4]
	0x03E3C2C8 MOV X0, X20
	0x03E3C2CC MOV X1, X31
	0x03E3C2D0 BL 0x3E4F284
	0x03E3C2D4 ADRP X23, 0x30D000
	0x03E3C2D8 LDR X23, [X23 + 0x6B8]
	0x03E3C2DC MOV X22, X0
	0x03E3C2E0 LDR X8, [X23]
	0x03E3C2E4 LDR W9, [X8 + 0xE0]
	0x03E3C2E8 CBNZ W9, 0x3E3C2F4
	0x03E3C2EC MOV X0, X8
	0x03E3C2F0 BL 0x1C16DFC
	0x03E3C2F4 MOV X0, X21
	0x03E3C2F8 MOV V0.16B, V8.16B
	0x03E3C2FC MOV V1.16B, V9.16B
	0x03E3C300 MOV X1, X22
	0x03E3C304 MOV X2, X31
	0x03E3C308 BL 0x3E2333C
	0x03E3C30C TBZ X0, 0x0, 0x3E3C38C
	0x03E3C310 LDR X21, [X19 + 0x100]
	0x03E3C314 LDP S8, S9, [X20 + 0xE4]
	0x03E3C318 MOV X0, X20
	0x03E3C31C MOV X1, X31
	0x03E3C320 BL 0x3E4F314
	0x03E3C324 LDR X8, [X23]
	0x03E3C328 MOV X20, X0
	0x03E3C32C LDR W9, [X8 + 0xE0]
	0x03E3C330 CBNZ W9, 0x3E3C33C
	0x03E3C334 MOV X0, X8
	0x03E3C338 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5AD000
	006 Move X21, 0x2B8000
	007 Move W8, [X20+1943]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2BA000
	015 Move X0, [X0+1720]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B8000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1943], W8
	022 Move X0, [X21]
	023 Move X20, [X19+256]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Call Object.op_Implicit, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {67}
	035 Move X0, [X19+256]
	036 Compare X0, 0
	037 JumpIfEqual {73}
	038 Move X1, X31
	039 Call Transform.get_parent, X0
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {67}
	055 Move X0, [X19+256]
	056 Compare X0, 0
	057 JumpIfEqual {73}
	058 Move X1, X31
	059 Call Transform.get_parent, X0
	060 Compare X0, 0
	061 JumpIfEqual {73}
	062 Move X8, 0x2BA000
	063 Move X8, [X8+1720]
	064 Move X1, [X8]
	065 Call 0x21A4894, X0
	066 Move [X19+288], X0
	067 Move [X19+288], X31
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void Set(System.Single input, System.Boolean sendCallback = True)

Disassembly:
	0x03E3C84C FDIV S1, S2, S1
	0x03E3C850 B 0x3E3C900
	0x03E3C854 LDR W8, [X19 + 0x108]
	0x03E3C858 CMP W8, 0x2
	0x03E3C85C B.CC 0x3E3C8D8
	0x03E3C860 LDR X8, [X19]
	0x03E3C864 LDR X9, [X8 + 0x318]
	0x03E3C868 LDR X1, [X8 + 0x320]
	0x03E3C86C MOV X0, X19
	0x03E3C870 BLR X9
	0x03E3C874 ADRP X8, 0x2B7000
	0x03E3C878 LDR X8, [X8 + 0x598]
	0x03E3C87C MOV X21, X0
	0x03E3C880 LDR X8, [X8]
	0x03E3C884 LDR W9, [X8 + 0xE0]
	0x03E3C888 CBNZ W9, 0x3E3C894
	0x03E3C88C MOV X0, X8
	0x03E3C890 BL 0x1C16DFC
	0x03E3C894 MOV X0, X21
	0x03E3C898 MOV X1, X31
	0x03E3C89C MOV X2, X31
	0x03E3C8A0 BL 0x3C3883C
	0x03E3C8A4 TBZ X0, 0x0, 0x3E3C8D8
	0x03E3C8A8 LDR W8, [X19 + 0x108]
	0x03E3C8AC MOV X0, X19
	0x03E3C8B0 AND W20, W8, 0xFFFFFFFD
	0x03E3C8B4 BL 0x3E3B78C
	0x03E3C8B8 LDR W8, [X19 + 0x114]
	0x03E3C8BC CMP W8, 0x2
	0x03E3C8C0 B.LT 0x3E3C918
	0x03E3C8C4 SUB W8, W8, 0x1
	0x03E3C8C8 SCVTF S1, W8
	0x03E3C8CC FMOV S2, 1
	0x03E3C8D0 FDIV S1, S2, S1
	0x03E3C8D4 B 0x3E3C920
	0x03E3C8D8 MOV X0, X19
	0x03E3C8DC MOV X1, X20
	0x03E3C8E0 LDP X20, X19, [X31 + 0x10]
	0x03E3C8E4 LDP X30, X21, [X31], #0x20
	0x03E3C8E8 B 0x3E3C95C
	0x03E3C8EC LDP X20, X19, [X31 + 0x10]
	0x03E3C8F0 LDP X30, X21, [X31], #0x20
	0x03E3C8F4 RET
	0x03E3C8F8 ADRP X8, 0xFFFFFFFFFCCAE000
	0x03E3C8FC LDR V1, [X8 + 0xBC]
	0x03E3C900 FNEG S2, S1
	0x03E3C904 CMP W20, 0x1
	0x03E3C908 FMOV S3, 1
	0x03E3C90C FMOV S4, W31

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5AD000
	008 Move W8, [X21+1944]
	009 Move W20, W1
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x31D000
	017 Move X0, [X0+2232]
	018 Call 0x1C17CF4
	019 Move X0, 0x330000
	020 Move X0, [X0+872]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1944], W8
	024 Move V9, [X19+268]
	025 Move X0, X19
	026 Move [X19+268], S8
	027 Call Scrollbar.get_value, X0
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move X0, X19
	030 Call Scrollbar.UpdateVisuals, X0
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {58}
	035 Move X8, 0x330000
	036 Move X8, [X8+872]
	037 Move X1, X19
	038 Move X2, X31
	039 Move X0, [X8]
	040 Call UISystemProfilerApi.AddMarker, X0, X1
	041 Move X20, [X19+280]
	042 Move X0, X19
	043 Call Scrollbar.get_value, X0
	044 Compare X20, 0
	045 JumpIfEqual {65}
	046 Move X8, 0x31D000
	047 Move X8, [X8+2232]
	048 Move X0, X20
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move X21, [X31+24]
	053 Move X1, [X8]
	054 Move D9, [X31+48]
	055 Move D8, [X31+56]
	056 Call UnityEvent`1<Single>.Invoke, X0, V0
	057 Return 
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Move D9, [X31+48]
	063 Move D8, [X31+56]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void OnRectTransformDimensionsChange()

Disassembly:
	0x03E3CEBC MOVZ W1, 0x1
	0x03E3CEC0 MOVZ W2, 0x1
	0x03E3CEC4 MOV X3, X31
	0x03E3CEC8 BL 0x3E23F04
	0x03E3CECC LDR W8, [X19 + 0x108]
	0x03E3CED0 CMP W21, 0x1
	0x03E3CED4 AND W8, W8, 0xFFFFFFFD
	0x03E3CED8 CSET W9, EQ
	0x03E3CEDC CMP W8, 0x1
	0x03E3CEE0 CSET W8, EQ
	0x03E3CEE4 CMP W9, W8
	0x03E3CEE8 B.EQ 0x3E3CF3C
	0x03E3CEEC MOV X0, X19
	0x03E3CEF0 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call UIBehaviour.OnRectTransformDimensionsChange, X0
	006 Move X8, [X19]
	007 Move X0, X19
	008 Move X9, [X8+456]
	009 Move X1, [X8+464]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {20}
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call Scrollbar.UpdateVisuals, X0
	019 Return 
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return 

Method: UnityEngine.UI.Scrollbar/Axis get_axis()

Disassembly:
	0x03E3CEF4 BL 0x3C32E90
	0x03E3CEF8 ADRP X8, 0x30D000
	0x03E3CEFC LDR X8, [X8 + 0x6B8]
	0x03E3CF00 MOV X20, X0

ISIL:
	001 Move W8, [X0+264]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_reverseValue()

Disassembly:
	0x03E3CF04 LDR X0, [X8]
	0x03E3CF08 LDR W8, [X19 + 0x108]
	0x03E3CF0C LDR W9, [X0 + 0xE0]
	0x03E3CF10 CMP W8, 0x1
	0x03E3CF14 CSET W19, HI

ISIL:
	001 Move W8, [X0+264]
	002 And W8, W8, 0xFFFFFFFD
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Void UpdateVisuals()

Disassembly:
	0x03E3C33C ADD X2, X31, 0x8
	0x03E3C340 MOV X0, X21
	0x03E3C344 MOV V0.16B, V8.16B
	0x03E3C348 MOV V1.16B, V9.16B
	0x03E3C34C MOV X1, X20
	0x03E3C350 MOV X3, X31
	0x03E3C354 BL 0x3E23A98
	0x03E3C358 TBZ X0, 0x0, 0x3E3C38C
	0x03E3C35C LDR X0, [X19 + 0x100]
	0x03E3C360 CBZ X0, 0x3E3C3A4
	0x03E3C364 LDR V8, [X31 + 0x8]
	0x03E3C368 MOV X1, X31
	0x03E3C36C BL 0x3C3E51C
	0x03E3C370 MOVI V4.2S, 0x3F, 0x18
	0x03E3C374 MOV V2.S[1], V3.S[0]
	0x00000000 INVALID
	0x03E3C37C MOV V0.S[1], V1.S[0]
	0x03E3C380 FADD V0.2S, V0.2S, V2.2S
	0x03E3C384 FSUB V0.2S, V8.2S, V0.2S
	0x03E3C388 STR D0, [X19 + 0x128]
	0x03E3C38C LDP X20, X19, [X31 + 0x40]
	0x03E3C390 LDP X22, X21, [X31 + 0x30]
	0x03E3C394 LDP X30, X23, [X31 + 0x20]
	0x03E3C398 LDP D9, D8, [X31 + 0x10]
	0x03E3C39C ADD X31, X31, 0x50
	0x03E3C3A0 RET
	0x03E3C3A4 BL 0x1C16F20
	0x03E3C3A8 STP X30, X21, [X31 - 0x20]!
	0x03E3C3AC STP X20, X19, [X31 + 0x10]
	0x03E3C3B0 ADRP X21, 0x5AC000
	0x03E3C3B4 LDRB W8, [X21 + 0x79C]
	0x03E3C3B8 MOV X19, X1
	0x03E3C3BC MOV X20, X0
	0x03E3C3C0 TBNZ X8, 0x0, 0x3E3C3D8
	0x03E3C3C4 ADRP X0, 0x2B7000
	0x03E3C3C8 LDR X0, [X0 + 0x598]
	0x03E3C3CC BL 0x1C16CF4
	0x03E3C3D0 MOVZ W8, 0x1
	0x03E3C3D4 STRB W8, [X21 + 0x79C]
	0x03E3C3D8 MOV X0, X20
	0x03E3C3DC MOV X1, X19
	0x03E3C3E0 BL 0x3E3C190
	0x03E3C3E4 TBZ X0, 0x0, 0x3E3C42C
	0x03E3C3E8 ADRP X8, 0x2B7000
	0x03E3C3EC LDR X8, [X8 + 0x598]
	0x03E3C3F0 LDR X21, [X20 + 0x120]
	0x03E3C3F4 LDR X0, [X8]
	0x03E3C3F8 LDR W8, [X0 + 0xE0]
	0x03E3C3FC CBNZ W8, 0x3E3C404
	0x03E3C400 BL 0x1C16DFC
	0x03E3C404 MOV X0, X21
	0x03E3C408 MOV X1, X31
	0x03E3C40C MOV X2, X31
	0x03E3C410 BL 0x3C354F8
	0x03E3C414 TBZ X0, 0x0, 0x3E3C42C
	0x03E3C418 MOV X0, X20
	0x03E3C41C MOV X1, X19
	0x03E3C420 LDP X20, X19, [X31 + 0x10]
	0x03E3C424 LDP X30, X21, [X31], #0x20
	0x03E3C428 B 0x3E3BF18
	0x03E3C42C LDP X20, X19, [X31 + 0x10]
	0x03E3C430 LDP X30, X21, [X31], #0x20
	0x03E3C434 RET
	0x03E3C438 STP D9, D8, [X31 - 0x30]!
	0x03E3C43C STR X30, [X31 + 0x10]
	0x03E3C440 STP X20, X19, [X31 + 0x20]
	0x03E3C444 MOV X20, X1
	0x03E3C448 MOV X19, X0
	0x03E3C44C BL 0x3E3C190
	0x03E3C450 TBZ X0, 0x0, 0x3E3C4A4
	0x03E3C454 MOV X0, X19
	0x03E3C458 MOV X1, X20
	0x03E3C45C BL 0x3E3C4B8
	0x03E3C460 MOVZ W8, 0x1
	0x03E3C464 STRB W8, [X19 + 0x140]
	0x03E3C468 CBZ X20, 0x3E3C4B4
	0x03E3C46C LDP S8, S9, [X20 + 0xE4]
	0x03E3C470 MOV X0, X20
	0x03E3C474 MOV X1, X31
	0x03E3C478 BL 0x3E4F284
	0x03E3C47C MOV X1, X0
	0x03E3C480 MOV X0, X19
	0x03E3C484 MOV V0.16B, V8.16B
	0x03E3C488 MOV V1.16B, V9.16B
	0x03E3C48C BL 0x3E3C5E8
	0x03E3C490 MOV X1, X0
	0x03E3C494 MOV X0, X19
	0x03E3C498 MOV X2, X31
	0x03E3C49C BL 0x3C366FC
	0x03E3C4A0 STR X0, [X19 + 0x138]
	0x03E3C4A4 LDP X20, X19, [X31 + 0x20]
	0x03E3C4A8 LDR X30, [X31 + 0x10]
	0x03E3C4AC LDP D9, D8, [X31], #0x30
	0x03E3C4B0 RET
	0x03E3C4B4 BL 0x1C16F20
	0x03E3C4B8 STR X30, [X31 - 0x30]!
	0x03E3C4BC STP X22, X21, [X31 + 0x10]
	0x03E3C4C0 STP X20, X19, [X31 + 0x20]
	0x03E3C4C4 ADRP X21, 0x5AC000
	0x03E3C4C8 LDRB W8, [X21 + 0x7D4]
	0x03E3C4CC MOV X20, X1
	0x03E3C4D0 MOV X19, X0
	0x03E3C4D4 TBNZ X8, 0x0, 0x3E3C4F8
	0x03E3C4D8 ADRP X0, 0x2DE000
	0x03E3C4DC LDR X0, [X0 + 0xDF8]
	0x03E3C4E0 BL 0x1C16CF4
	0x03E3C4E4 ADRP X0, 0x2B7000
	0x03E3C4E8 LDR X0, [X0 + 0x598]
	0x03E3C4EC BL 0x1C16CF4
	0x03E3C4F0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x5AD000
	010 Move X21, 0x2B8000
	011 Move W8, [X20+1945]
	012 Move X21, [X21+1432]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2B8000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1945], W8
	023 Add X20, X19, 304
	024 Move X0, X20
	025 Move X1, X31
	026 Call DrivenRectTransformTracker.Clear, X0
	027 Move X0, [X21]
	028 Move X21, [X19+288]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {92}
	041 Move X2, [X19+256]
	042 Move W3, 3840
	043 Move X0, X20
	044 Move X1, X19
	045 Move X4, X31
	046 Call DrivenRectTransformTracker.Add, X0, X1, X2, X3
	047 Move X20, 0x59E000
	048 Move W8, [X20+1935]
	049 Compare W8, 0
	050 JumpIfNotEqual {56}
	051 Move X0, 0x2C0000
	052 Move X0, [X0+3848]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+1935], W8
	056 Move X20, 0x2C0000
	057 Move X20, [X20+3848]
	058 Move X21, 0x5A6000
	059 Move W9, [X21+2632]
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Move S9, [X8]
	063 Move S8, [X8+4]
	064 Compare W9, 0
	065 JumpIfNotEqual {72}
	066 Move X0, X20
	067 Call 0x1C17CF4
	068 Move X8, [X20]
	069 Move W9, 1
	070 Move [X21+2632], W9
	071 Move X8, [X8+184]
	072 Move S11, [X8+8]
	073 Move S10, [X8+12]
	074 Move X0, X19
	075 Call Scrollbar.get_value, X0
	076 Move V2, [X19+272]
	077 Move W8, [X19+264]
	078 Move S1, 1
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move S3, W31
	081 NotImplemented "Instruction FMIN not yet implemented."
	082 NotImplemented "Instruction FCSEL not yet implemented."
	083 Subtract S3, S1, S2
	084 And W9, W8, 0xFFFFFFFD
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Multiply S0, S3, S0
	087 Subtract S0, S1, S0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract S1, S0, S2
	090 Move V8, V1
	091 Move V10, V0
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Move D9, [X31+16]
	097 Move D8, [X31+24]
	098 Move D11, [X31+64]
	099 Move D10, [X31+72]
	100 Return 
	101 Add S1, S2, S0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction FCSEL not yet implemented."
	104 NotImplemented "Instruction FCSEL not yet implemented."
	105 NotImplemented "Instruction FCSEL not yet implemented."
	106 NotImplemented "Instruction FCSEL not yet implemented."
	107 Move V9, V1
	108 Move V11, V0
	109 Move X0, [X19+256]
	110 Compare X0, 0
	111 JumpIfEqual {132}
	112 Move V0, V9
	113 Move V1, V8
	114 Move X1, X31
	115 Call RectTransform.set_anchorMin, X0, X1
	116 Move X0, [X19+256]
	117 Compare X0, 0
	118 JumpIfEqual {132}
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X30, [X31+32]
	122 Move X21, [X31+40]
	123 Move D9, [X31+16]
	124 Move D8, [X31+24]
	125 Move V0, V11
	126 Move V1, V10
	127 Move X1, X31
	128 Move D11, [X31+64]
	129 Move D10, [X31+72]
	130 Call RectTransform.set_anchorMax, X0, X1
	131 Return 
	132 Call 0x1C17F20

Method: System.Void UpdateDrag(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3CF18 CBZ W9, 0x3E3CF4C
	0x03E3CF1C CBZ X20, 0x3E3CF54
	0x03E3CF20 ADRP X8, 0x2DE000
	0x03E3CF24 LDR X8, [X8 + 0xC70]
	0x03E3CF28 LDR X9, [X20]
	0x03E3CF2C LDR X8, [X8]
	0x03E3CF30 CMP X9, X8
	0x03E3CF34 CSEL X0, X20, X31, EQ
	0x03E3CF38 B 0x3E3CF58
	0x03E3CF3C LDP X20, X19, [X31 + 0x20]
	0x03E3CF40 LDP X22, X21, [X31 + 0x10]
	0x03E3CF44 LDR X30, [X31], #0x30
	0x03E3CF48 RET
	0x03E3CF4C BL 0x1C16DFC
	0x03E3CF50 CBNZ X20, 0x3E3CF20
	0x03E3CF54 MOV X0, X31
	0x03E3CF58 MOV W1, W19
	0x03E3CF5C LDP X20, X19, [X31 + 0x20]
	0x03E3CF60 LDP X22, X21, [X31 + 0x10]
	0x03E3CF64 MOVZ W2, 0x1
	0x03E3CF68 MOVZ W3, 0x1
	0x03E3CF6C MOV X4, X31
	0x03E3CF70 LDR X30, [X31], #0x30
	0x03E3CF74 B 0x3E23C44
	0x03E3CF78 MOV X1, X31
	0x03E3CF7C B 0x3C32E90
	0x03E3CF80 RET
	0x03E3CF84 SUB X31, X31, 0x50
	0x03E3CF88 STP D9, D8, [X31 + 0x10]
	0x03E3CF8C STP X30, X23, [X31 + 0x20]
	0x03E3CF90 STP X22, X21, [X31 + 0x30]
	0x03E3CF94 STP X20, X19, [X31 + 0x40]
	0x03E3CF98 ADRP X20, 0x5AC000
	0x03E3CF9C LDRB W8, [X20 + 0x7A1]
	0x03E3CFA0 MOV X19, X0
	0x03E3CFA4 TBNZ X8, 0x0, 0x3E3CFC8
	0x03E3CFA8 ADRP X0, 0x30D000
	0x03E3CFAC LDR X0, [X0 + 0x6B8]
	0x03E3CFB0 BL 0x1C16CF4
	0x03E3CFB4 ADRP X0, 0x315000
	0x03E3CFB8 LDR X0, [X0 + 0xD58]
	0x03E3CFBC BL 0x1C16CF4
	0x03E3CFC0 MOVZ W8, 0x1
	0x03E3CFC4 STRB W8, [X20 + 0x7A1]
	0x03E3CFC8 STR X31, [X31]
	0x03E3CFCC LDR W8, [X19 + 0x10]
	0x03E3CFD0 CMP W8, 0x2
	0x03E3CFD4 B.CS 0x3E3D138
	0x03E3CFD8 LDR X20, [X19 + 0x20]
	0x03E3CFDC MOVN W8, 0x0
	0x03E3CFE0 STR W8, [X19 + 0x10]
	0x03E3CFE4 CBZ X20, 0x3E3D1D8
	0x03E3CFE8 LDRB W8, [X20 + 0x140]
	0x03E3CFEC CBZ W8, 0x3E3D128
	0x03E3CFF0 ADRP X23, 0x30D000
	0x03E3CFF4 LDR X23, [X23 + 0x6B8]
	0x03E3CFF8 LDR X22, [X20 + 0x100]
	0x03E3CFFC LDP S9, S8, [X19 + 0x28]
	0x03E3D000 LDR X21, [X19 + 0x30]
	0x03E3D004 LDR X0, [X23]
	0x03E3D008 LDR W8, [X0 + 0xE0]
	0x03E3D00C CBNZ W8, 0x3E3D014
	0x03E3D010 BL 0x1C16DFC
	0x03E3D014 MOV X0, X22
	0x03E3D018 MOV V0.16B, V9.16B
	0x03E3D01C MOV V1.16B, V8.16B
	0x03E3D020 MOV X1, X21
	0x03E3D024 MOV X2, X31
	0x03E3D028 BL 0x3E2333C
	0x03E3D02C TBNZ X0, 0x0, 0x3E3D198
	0x03E3D030 LDR X0, [X23]
	0x03E3D034 LDR X21, [X20 + 0x100]
	0x03E3D038 LDP S8, S9, [X19 + 0x28]
	0x03E3D03C LDR X22, [X19 + 0x30]
	0x03E3D040 LDR W8, [X0 + 0xE0]
	0x03E3D044 CBNZ W8, 0x3E3D04C
	0x03E3D048 BL 0x1C16DFC
	0x03E3D04C ADD X2, X31, 0x0
	0x03E3D050 MOV X0, X21
	0x03E3D054 MOV V0.16B, V8.16B
	0x03E3D058 MOV V1.16B, V9.16B
	0x03E3D05C MOV X1, X22
	0x03E3D060 MOV X3, X31
	0x03E3D064 ADD X23, X31, 0x0
	0x03E3D068 BL 0x3E23A98
	0x03E3D06C TBZ X0, 0x0, 0x3E3D198
	0x03E3D070 LDR W8, [X20 + 0x108]
	0x03E3D074 ORR X9, X23, 0x7
	0x03E3D078 LDR V0, [X20 + 0x110]
	0x03E3D07C MOV X0, X20
	0x03E3D080 CMP W8, 0x2
	0x03E3D084 CSEL X8, X23, X9, CC
	0x03E3D088 LDR V1, [X8]
	0x03E3D08C FNEG S2, S0
	0x03E3D090 FCMP S1, 0x0
	0x03E3D094 FCSEL S8, S0, S2, MI
	0x03E3D098 BL 0x3E3B78C
	0x03E3D09C LDR W8, [X20 + 0x108]
	0x03E3D0A0 FNEG S1, S8
	0x03E3D0A4 MOVZ W1, 0x1
	0x03E3D0A8 MOV X0, X20
	0x03E3D0AC AND W8, W8, 0xFFFFFFFD
	0x03E3D0B0 CMP W8, 0x1
	0x03E3D0B4 FCSEL S1, S8, S1, EQ
	0x03E3D0B8 FADD S0, S0, S1
	0x03E3D0BC BL 0x3E3B84C
	0x03E3D0C0 MOV X0, X20
	0x03E3D0C4 BL 0x3E3B78C
	0x03E3D0C8 FMOV S1, 1
	0x03E3D0CC FCMP S0, 0x0
	0x03E3D0D0 FMIN S0, S0, S1
	0x03E3D0D4 FMOV S1, W31
	0x03E3D0D8 FCSEL S0, S0, S1, PL
	0x03E3D0DC MOVZ W1, 0x1
	0x03E3D0E0 MOV X0, X20
	0x03E3D0E4 BL 0x3E3B84C
	0x03E3D0E8 MOV X0, X20
	0x03E3D0EC BL 0x3E3B78C
	0x03E3D0F0 ADRP X8, 0xFFFFFFFFFCCAD000
	0x03E3D0F4 LDR V8, [X8 + 0x18C]
	0x03E3D0F8 ADD X0, X31, 0x8
	0x03E3D0FC FMUL S9, S0, S8
	0x03E3D100 FCVT S0, S9
	0x03E3D104 BL 0x3EB1C00
	0x03E3D108 FCMP S9, 0x0
	0x03E3D10C B.GE 0x3E3D140
	0x03E3D110 FMOV D1, -0.5
	0x03E3D114 FCMP D0, D1
	0x03E3D118 B.NE 0x3E3D16C
	0x03E3D11C LDR V0, [X31 + 0x8]
	0x03E3D120 FMOV S1, -1
	0x03E3D124 B 0x3E3D154

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x5AD000
	015 Move W8, [X21+1946]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x2B8000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x30E000
	026 Move X0, [X0+1720]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1946], W8
	030 Move [X31+16], X31
	031 Compare X20, 0
	032 JumpIfEqual {167}
	033 Move W8, [X20+328]
	034 Compare W8, 0
	035 JumpIfNotEqual {153}
	036 Move X8, 0x2B8000
	037 Move X8, [X8+1432]
	038 Move X21, [X19+288]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {153}
	052 Move X21, 0x59E000
	053 Move W8, [X21+1935]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x2C0000
	057 Move X0, [X0+3848]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X21+1935], W8
	061 Move X8, 0x2C0000
	062 Move X8, [X8+3848]
	063 Add X1, X31, 24
	064 Move X0, X20
	065 Move X8, [X8]
	066 Move X8, [X8+184]
	067 Move V0, [X8]
	068 Move [X31+24], D0
	069 Call MultipleDisplayUtilities.GetRelativeMousePositionForDrag, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {153}
	074 Move X21, [X19+288]
	075 Move S8, [X31+24]
	076 Move S9, [X31+28]
	077 Move X0, X20
	078 Move X1, X31
	079 Call PointerEventData.get_pressEventCamera, X0
	080 Move X8, 0x30D000
	081 Move X8, [X8+1720]
	082 Move X20, X0
	083 Move X8, [X8]
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Add X2, X31, 16
	090 Move X0, X21
	091 Move V0, V8
	092 Move V1, V9
	093 Move X1, X20
	094 Move X3, X31
	095 Call RectTransformUtility.ScreenPointToLocalPointInRectangle, X0, X1, X2, X3
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {153}
	100 Move X0, [X19+288]
	101 Compare X0, 0
	102 JumpIfEqual {167}
	103 Move V14, [X19+300]
	104 Move S15, [X31+16]
	105 Move S8, [X31+20]
	106 Move V9, [X19+296]
	107 Move X1, X31
	108 Call RectTransform.get_rect, X0
	109 Move X0, [X19+256]
	110 Compare X0, 0
	111 JumpIfEqual {167}
	112 Move X1, X31
	113 Move [X31+8], S1
	114 Move [X31+16], S0
	115 Call RectTransform.get_rect, X0
	116 Move X0, [X19+256]
	117 Compare X0, 0
	118 JumpIfEqual {167}
	119 Move X1, X31
	120 Move V10, V2
	121 Move V11, V3
	122 Call RectTransform.get_sizeDelta, X0
	123 Move X0, [X19+288]
	124 Compare X0, 0
	125 JumpIfEqual {167}
	126 Move W20, [X19+264]
	127 Move X1, X31
	128 Move V12, V0
	129 Move V13, V1
	130 Call RectTransform.get_rect, X0
	131 Move V0, [X19+272]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction FCSEL not yet implemented."
	134 Move S2, 1
	135 Subtract S0, S2, S0
	136 Multiply S2, S1, S0
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 Move V6, [X31+12]
	139 Subtract S1, S15, S9
	140 Subtract S0, S8, S14
	141 Subtract S3, S10, S12
	142 Subtract S1, S1, S6
	143 Move V6, [X31+8]
	144 Subtract S4, S11, S13
	145 Move S5, 0.5
	146 Move X0, X19
	147 Subtract S6, S0, S6
	148 Multiply S0, S3, S5
	149 Multiply S3, S4, S5
	150 Subtract S0, S1, S0
	151 Subtract S1, S6, S3
	152 Call Scrollbar.DoUpdateDrag, X0, X1, V0
	153 Move X20, [X31+112]
	154 Move X19, [X31+120]
	155 Move X30, [X31+96]
	156 Move X21, [X31+104]
	157 Move D9, [X31+80]
	158 Move D8, [X31+88]
	159 Move D11, [X31+64]
	160 Move D10, [X31+72]
	161 Move D13, [X31+48]
	162 Move D12, [X31+56]
	163 Move D15, [X31+32]
	164 Move D14, [X31+40]
	165 Add X31, X31, 128
	166 Return 
	167 Call 0x1C17F20

Method: System.Void DoUpdateDrag(UnityEngine.Vector2 handleCorner, System.Single remainingSize)

Disassembly:
	0x03E3D128 LDR X1, [X20 + 0x138]
	0x03E3D12C MOV X0, X20
	0x03E3D130 MOV X2, X31
	0x03E3D134 BL 0x3C36968
	0x03E3D138 MOV W0, W31
	0x03E3D13C B 0x3E3D1C0
	0x03E3D140 FMOV D1, 0.5
	0x03E3D144 FCMP D0, D1
	0x03E3D148 B.NE 0x3E3D17C
	0x03E3D14C LDR V0, [X31 + 0x8]
	0x03E3D150 FMOV S1, 1
	0x03E3D154 FCVTZS X8, D0
	0x00000000 INVALID
	0x03E3D15C FADD S1, S0, S1
	0x03E3D160 ANDS X31, X8, 0x1
	0x03E3D164 FCSEL S0, S0, S1, EQ
	0x03E3D168 B 0x3E3D188
	0x03E3D16C FMOV S0, -0.5
	0x03E3D170 FADD S0, S9, S0
	0x03E3D174 FRINTP S0, S0
	0x03E3D178 B 0x3E3D188
	0x03E3D17C FMOV S0, 0.5
	0x03E3D180 FADD S0, S9, S0
	0x03E3D184 FRINTM S0, S0
	0x03E3D188 FDIV S0, S0, S8
	0x03E3D18C MOVZ W1, 0x1

ISIL:
	001 Move W8, [X0+264]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -53100544
	004 Add X9, X9, 1568
	005 NotImplemented "Instruction ADR not yet implemented."
	006 Move W11, [X9]
	007 Add X10, X10, X11
	008 CallNoReturn X10
	009 NotImplemented "Instruction FDIV not yet implemented."
	010 Return 
	011 NotImplemented "Instruction FDIV not yet implemented."
	012 NotImplemented "Instruction FDIV not yet implemented."
	013 NotImplemented "Instruction FDIV not yet implemented."
	014 Move S1, 1
	015 Subtract S0, S1, S0
	016 Move S1, 1
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move S2, W31
	019 NotImplemented "Instruction FMIN not yet implemented."
	020 NotImplemented "Instruction FCSEL not yet implemented."
	021 Move W1, 1
	022 Call Scrollbar.Set, X0, V0, X1
	023 Return 

Method: System.Boolean MayDrag(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3D190 MOV X0, X20
	0x03E3D194 BL 0x3E3B84C
	0x03E3D198 ADRP X8, 0x314000
	0x03E3D19C LDR X8, [X8 + 0xD58]
	0x03E3D1A0 LDR X0, [X8]
	0x03E3D1A4 BL 0x1C16F10
	0x03E3D1A8 MOV X1, X31
	0x03E3D1AC MOV X20, X0
	0x03E3D1B0 BL 0x3C3A624
	0x03E3D1B4 MOVZ W0, 0x1
	0x03E3D1B8 STR X20, [X19 + 0x18]
	0x03E3D1BC STR W0, [X19 + 0x10]
	0x03E3D1C0 LDP X20, X19, [X31 + 0x40]
	0x03E3D1C4 LDP X22, X21, [X31 + 0x30]
	0x03E3D1C8 LDP X30, X23, [X31 + 0x20]
	0x03E3D1CC LDP D9, D8, [X31 + 0x10]
	0x03E3D1D0 ADD X31, X31, 0x50
	0x03E3D1D4 RET
	0x03E3D1D8 BL 0x1C16F20
	0x03E3D1DC LDR X0, [X0 + 0x18]
	0x03E3D1E0 RET
	0x03E3D1E4 STP X30, X19, [X31 - 0x10]!
	0x03E3D1E8 ADRP X0, 0x2B6000
	0x03E3D1EC LDR X0, [X0 + 0xB40]
	0x03E3D1F0 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X9, [X8+456]
	008 Move X8, [X8+464]
	009 Move X1, X8
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {29}
	015 Move X8, [X20]
	016 Move X0, X20
	017 Move X9, [X8+696]
	018 Move X1, [X8+704]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {29}
	024 Compare X19, 0
	025 JumpIfEqual {34}
	026 Move W8, [X19+328]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move W0, W31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3D1F4 BL 0x1C16F10
	0x03E3D1F8 MOV X1, X31
	0x03E3D1FC MOV X19, X0
	0x03E3D200 BL 0x3380310
	0x03E3D204 ADRP X0, 0x32E000
	0x03E3D208 LDR X0, [X0 + 0x380]
	0x03E3D20C BL 0x1C16D08
	0x03E3D210 MOV X1, X0
	0x03E3D214 MOV X0, X19
	0x03E3D218 BL 0x1C16DEC
	0x03E3D21C LDR X0, [X0 + 0x18]
	0x03E3D220 RET
	0x03E3D224 LDR X0, [X0 + 0x20]
	0x03E3D228 RET
	0x03E3D22C STR X1, [X0 + 0x20]
	0x03E3D230 RET
	0x03E3D234 LDRB W0, [X0 + 0x28]
	0x03E3D238 RET
	0x03E3D23C AND W8, W1, 0x1
	0x03E3D240 STRB W8, [X0 + 0x28]
	0x03E3D244 RET
	0x03E3D248 LDRB W0, [X0 + 0x29]
	0x03E3D24C RET
	0x03E3D250 AND W8, W1, 0x1
	0x03E3D254 STRB W8, [X0 + 0x29]
	0x03E3D258 RET
	0x03E3D25C LDR W0, [X0 + 0x2C]
	0x03E3D260 RET
	0x03E3D264 STR W1, [X0 + 0x2C]
	0x03E3D268 RET
	0x03E3D26C LDR V0, [X0 + 0x30]
	0x03E3D270 RET
	0x03E3D274 STR S0, [X0 + 0x30]
	0x03E3D278 RET
	0x03E3D27C LDRB W0, [X0 + 0x34]
	0x03E3D280 RET
	0x03E3D284 AND W8, W1, 0x1
	0x03E3D288 STRB W8, [X0 + 0x34]
	0x03E3D28C RET
	0x03E3D290 LDR V0, [X0 + 0x38]
	0x03E3D294 RET
	0x03E3D298 STR S0, [X0 + 0x38]
	0x03E3D29C RET
	0x03E3D2A0 LDR V0, [X0 + 0x3C]
	0x03E3D2A4 RET
	0x03E3D2A8 STR S0, [X0 + 0x3C]
	0x03E3D2AC RET
	0x03E3D2B0 LDR X0, [X0 + 0x40]
	0x03E3D2B4 RET
	0x03E3D2B8 STR X1, [X0 + 0x40]
	0x03E3D2BC B 0x3E3D2C0
	0x03E3D2C0 STR X30, [X31 - 0x20]!
	0x03E3D2C4 STP X20, X19, [X31 + 0x10]
	0x03E3D2C8 ADRP X20, 0x5AB000
	0x03E3D2CC LDRB W8, [X20 + 0x7B9]
	0x03E3D2D0 MOV X19, X0
	0x03E3D2D4 TBNZ X8, 0x0, 0x3E3D2F8
	0x03E3D2D8 ADRP X0, 0x31B000
	0x03E3D2DC LDR X0, [X0 + 0x718]
	0x03E3D2E0 BL 0x1C16CF4
	0x03E3D2E4 ADRP X0, 0x2B9000
	0x03E3D2E8 LDR X0, [X0 + 0x920]
	0x03E3D2EC BL 0x1C16CF4
	0x03E3D2F0 MOVZ W8, 0x1
	0x03E3D2F4 STRB W8, [X20 + 0x7B9]
	0x03E3D2F8 LDR X8, [X19]
	0x03E3D2FC MOV X0, X19
	0x03E3D300 LDP X9, X1, [X8 + 0x1C8]
	0x03E3D304 BLR X9
	0x03E3D308 TBZ X0, 0x0, 0x3E3D368
	0x03E3D30C ADRP X8, 0x31B000
	0x03E3D310 LDR X8, [X8 + 0x718]
	0x03E3D314 ADRP X20, 0x2B9000
	0x03E3D318 LDR X0, [X8]
	0x03E3D31C LDR W8, [X0 + 0xE0]
	0x03E3D320 LDR X20, [X20 + 0x920]
	0x03E3D324 CBNZ W8, 0x3E3D32C
	0x03E3D328 BL 0x1C16DFC
	0x03E3D32C MOV X0, X19
	0x03E3D330 MOV X1, X31
	0x03E3D334 BL 0x3CD159C
	0x03E3D338 MOV X0, X19
	0x03E3D33C BL 0x3E3D854
	0x03E3D340 LDR X8, [X20]
	0x03E3D344 MOV X20, X0
	0x03E3D348 LDR W9, [X8 + 0xE0]
	0x03E3D34C CBNZ W9, 0x3E3D358
	0x03E3D350 MOV X0, X8
	0x03E3D354 BL 0x1C16DFC
	0x03E3D358 MOV X0, X20
	0x03E3D35C MOV X1, X31
	0x03E3D360 BL 0x3E2F3D8
	0x03E3D364 STR X31, [X19 + 0x80]
	0x03E3D368 LDP X20, X19, [X31 + 0x10]
	0x03E3D36C LDR X30, [X31], #0x20
	0x03E3D370 RET
	0x03E3D374 LDR X0, [X0 + 0x48]
	0x03E3D378 RET
	0x03E3D37C STP X30, X23, [X31 - 0x30]!
	0x03E3D380 STP X22, X21, [X31 + 0x10]
	0x03E3D384 STP X20, X19, [X31 + 0x20]
	0x03E3D388 ADRP X21, 0x5AB000
	0x03E3D38C ADRP X23, 0x2B6000
	0x03E3D390 LDRB W8, [X21 + 0x7A2]
	0x03E3D394 LDR X23, [X23 + 0x598]
	0x03E3D398 MOV X20, X1
	0x03E3D39C MOV X19, X0
	0x03E3D3A0 TBNZ X8, 0x0, 0x3E3D3E8
	0x03E3D3A4 ADRP X0, 0x2B6000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x5AC000
	011 Move W8, [X21+1947]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2B7000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x30D000
	022 Move X0, [X0+1720]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1947], W8
	026 Move X0, X19
	027 Move X1, X20
	028 Move [X31+8], X31
	029 Move [X19+320], W31
	030 Call Scrollbar.MayDrag, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {130}
	035 Move X8, 0x2B7000
	036 Move X8, [X8+1432]
	037 Move X21, [X19+288]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {130}
	051 Move X21, 0x59D000
	052 Move W8, [X21+1935]
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x2BF000
	056 Move X0, [X0+3848]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+1935], W8
	060 Move X8, 0x2BF000
	061 Move X8, [X8+3848]
	062 Move X8, [X8]
	063 Move X8, [X8+184]
	064 Move V0, [X8]
	065 Move [X19+296], D0
	066 Compare X20, 0
	067 JumpIfEqual {140}
	068 Move X21, [X19+256]
	069 Move S8, [X20+228]
	070 Move S9, [X20+232]
	071 Move X0, X20
	072 Move X1, X31
	073 Call PointerEventData.get_enterEventCamera, X0
	074 Move X23, 0x30D000
	075 Move X23, [X23+1720]
	076 Move X22, X0
	077 Move X8, [X23]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move V0, V8
	085 Move V1, V9
	086 Move X1, X22
	087 Move X2, X31
	088 Call RectTransformUtility.RectangleContainsScreenPoint, X0, X1, X2
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {130}
	093 Move X21, [X19+256]
	094 Move S8, [X20+228]
	095 Move S9, [X20+232]
	096 Move X0, X20
	097 Move X1, X31
	098 Call PointerEventData.get_pressEventCamera, X0
	099 Move X8, [X23]
	100 Move X20, X0
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Add X2, X31, 8
	107 Move X0, X21
	108 Move V0, V8
	109 Move V1, V9
	110 Move X1, X20
	111 Move X3, X31
	112 Call RectTransformUtility.ScreenPointToLocalPointInRectangle, X0, X1, X2, X3
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {130}
	117 Move X0, [X19+256]
	118 Compare X0, 0
	119 JumpIfEqual {140}
	120 Move V8, [X31+8]
	121 Move X1, X31
	122 Call RectTransform.get_rect, X0
	123 NotImplemented "Instruction MOVI not yet implemented."
	124 Move V2.S[1], V3.S[0]
	125 NotImplemented "Instruction INVALID not yet implemented."
	126 Move V0.S[1], V1.S[0]
	127 Add V0, V0, V2
	128 Subtract V0, V8, V0
	129 Move [X19+296], D0
	130 Move X20, [X31+64]
	131 Move X19, [X31+72]
	132 Move X22, [X31+48]
	133 Move X21, [X31+56]
	134 Move X30, [X31+32]
	135 Move X23, [X31+40]
	136 Move D9, [X31+16]
	137 Move D8, [X31+24]
	138 Add X31, X31, 80
	139 Return 
	140 Call 0x1C17F20

Method: System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3D3A8 LDR X0, [X0 + 0x598]
	0x03E3D3AC BL 0x1C16CF4
	0x03E3D3B0 ADRP X0, 0x32E000
	0x03E3D3B4 LDR X0, [X0 + 0x388]
	0x03E3D3B8 BL 0x1C16CF4
	0x03E3D3BC ADRP X0, 0x31B000
	0x03E3D3C0 LDR X0, [X0 + 0xB68]
	0x03E3D3C4 BL 0x1C16CF4
	0x03E3D3C8 ADRP X0, 0x31B000
	0x03E3D3CC LDR X0, [X0 + 0x8C8]
	0x03E3D3D0 BL 0x1C16CF4
	0x03E3D3D4 ADRP X0, 0x31C000
	0x03E3D3D8 LDR X0, [X0 + 0x70]
	0x03E3D3DC BL 0x1C16CF4
	0x03E3D3E0 MOVZ W8, 0x1
	0x03E3D3E4 STRB W8, [X21 + 0x7A2]
	0x03E3D3E8 LDR X0, [X23]
	0x03E3D3EC LDR X21, [X19 + 0x48]
	0x03E3D3F0 LDR W8, [X0 + 0xE0]
	0x03E3D3F4 CBNZ W8, 0x3E3D3FC
	0x03E3D3F8 BL 0x1C16DFC
	0x03E3D3FC MOV X0, X21
	0x03E3D400 MOV X1, X31
	0x03E3D404 BL 0x3C38948
	0x03E3D408 TBZ X0, 0x0, 0x3E3D460
	0x03E3D40C LDR X8, [X19 + 0x48]
	0x03E3D410 CBZ X8, 0x3E3D4F4
	0x03E3D414 LDR X21, [X8 + 0x118]
	0x03E3D418 ADRP X8, 0x31B000
	0x03E3D41C LDR X8, [X8 + 0xB68]
	0x03E3D420 LDR X0, [X8]
	0x03E3D424 BL 0x1C16F10
	0x03E3D428 ADRP X8, 0x32E000
	0x03E3D42C LDR X8, [X8 + 0x388]
	0x03E3D430 MOV X1, X19
	0x03E3D434 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5AC000
	006 Move W8, [X21+1948]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2B7000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1948], W8
	018 Move X0, X20
	019 Move X1, X19
	020 Call Scrollbar.MayDrag, X0, X1
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {49}
	025 Move X8, 0x2B7000
	026 Move X8, [X8+1432]
	027 Move X21, [X20+288]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {49}
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call Scrollbar.UpdateDrag, X0, X1
	048 Return 
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 

Method: System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3D438 MOV X22, X0
	0x03E3D43C LDR X2, [X8]
	0x03E3D440 BL 0x2725EC4
	0x03E3D444 CBZ X21, 0x3E3D4F4
	0x03E3D448 ADRP X8, 0x31C000
	0x03E3D44C LDR X8, [X8 + 0x70]
	0x03E3D450 MOV X0, X21
	0x03E3D454 MOV X1, X22
	0x03E3D458 LDR X2, [X8]
	0x03E3D45C BL 0x272A4EC
	0x03E3D460 LDRB W8, [X19 + 0x28]
	0x03E3D464 STR X20, [X19 + 0x48]
	0x03E3D468 CBZ W8, 0x3E3D4E0
	0x03E3D46C LDR X0, [X23]
	0x03E3D470 LDR W8, [X0 + 0xE0]
	0x03E3D474 CBNZ W8, 0x3E3D47C
	0x03E3D478 BL 0x1C16DFC
	0x03E3D47C MOV X0, X20
	0x03E3D480 MOV X1, X31
	0x03E3D484 BL 0x3C38948
	0x03E3D488 TBZ X0, 0x0, 0x3E3D4E0
	0x03E3D48C LDR X8, [X19 + 0x48]
	0x03E3D490 CBZ X8, 0x3E3D4F4
	0x03E3D494 LDR X20, [X8 + 0x118]
	0x03E3D498 ADRP X8, 0x31B000
	0x03E3D49C LDR X8, [X8 + 0xB68]
	0x03E3D4A0 LDR X0, [X8]
	0x03E3D4A4 BL 0x1C16F10
	0x03E3D4A8 ADRP X8, 0x32E000
	0x03E3D4AC LDR X8, [X8 + 0x388]
	0x03E3D4B0 MOV X1, X19
	0x03E3D4B4 MOV X3, X31

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Call Scrollbar.MayDrag, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {35}
	013 Move X0, X19
	014 Move X1, X20
	015 Call Selectable.OnPointerDown, X0, X1
	016 Move W8, 1
	017 Move [X19+320], W8
	018 Compare X20, 0
	019 JumpIfEqual {41}
	020 Move S8, [X20+228]
	021 Move S9, [X20+232]
	022 Move X0, X20
	023 Move X1, X31
	024 Call PointerEventData.get_enterEventCamera, X0
	025 Move X1, X0
	026 Move X0, X19
	027 Move V0, V8
	028 Move V1, V9
	029 Call Scrollbar.ClickRepeat, X0, X1, X2
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call MonoBehaviour.StartCoroutine, X0, X1
	034 Move [X19+312], X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move D9, [X31+48]
	039 Move D8, [X31+56]
	040 Return 
	041 Call 0x1C17F20

Method: System.Collections.IEnumerator ClickRepeat(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3D66C LDP X22, X21, [X31 + 0x10]
	0x03E3D670 LDP X30, X23, [X31], #0x30
	0x03E3D674 B 0x3E3D2C0
	0x03E3D678 BL 0x1C16F20
	0x03E3D67C LDR W0, [X0 + 0x58]
	0x03E3D680 RET
	0x03E3D684 STR W1, [X0 + 0x58]
	0x03E3D688 B 0x3E3D2C0
	0x03E3D68C LDR W0, [X0 + 0x5C]
	0x03E3D690 RET
	0x03E3D694 STR W1, [X0 + 0x5C]
	0x03E3D698 B 0x3E3D2C0
	0x03E3D69C LDR V0, [X0 + 0x60]
	0x03E3D6A0 RET
	0x03E3D6A4 STR S0, [X0 + 0x60]
	0x03E3D6A8 B 0x3E3D6AC

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {23}
	007 Move S8, [X1+228]
	008 Move S9, [X1+232]
	009 Move X19, X0
	010 Move X0, X1
	011 Move X1, X31
	012 Call PointerEventData.get_enterEventCamera, X0
	013 Move X1, X0
	014 Move X0, X19
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Move V0, V8
	018 Move V1, V9
	019 Move D9, [X31+32]
	020 Move D8, [X31+40]
	021 Call Scrollbar.ClickRepeat, X0, X1, X2
	022 Return X0
	023 Call 0x1C17F20

Method: System.Collections.IEnumerator ClickRepeat(UnityEngine.Vector2 screenPosition, UnityEngine.Camera camera)

Disassembly:
	0x03E3D5E8 STR X20, [X19 + 0x50]
	0x03E3D5EC CBZ W8, 0x3E3D664
	0x03E3D5F0 LDR X0, [X23]
	0x03E3D5F4 LDR W8, [X0 + 0xE0]
	0x03E3D5F8 CBNZ W8, 0x3E3D600
	0x03E3D5FC BL 0x1C16DFC
	0x03E3D600 MOV X0, X20
	0x03E3D604 MOV X1, X31
	0x03E3D608 BL 0x3C38948
	0x03E3D60C TBZ X0, 0x0, 0x3E3D664
	0x03E3D610 LDR X8, [X19 + 0x50]
	0x03E3D614 CBZ X8, 0x3E3D678
	0x03E3D618 LDR X20, [X8 + 0x118]
	0x03E3D61C ADRP X8, 0x31B000
	0x03E3D620 LDR X8, [X8 + 0xB68]
	0x03E3D624 LDR X0, [X8]
	0x03E3D628 BL 0x1C16F10
	0x03E3D62C ADRP X8, 0x32E000
	0x03E3D630 LDR X8, [X8 + 0x390]
	0x03E3D634 MOV X1, X19
	0x03E3D638 MOV X3, X31
	0x03E3D63C MOV X21, X0
	0x03E3D640 LDR X2, [X8]
	0x03E3D644 BL 0x2725EC4
	0x03E3D648 CBZ X20, 0x3E3D678
	0x03E3D64C ADRP X8, 0x31B000
	0x03E3D650 LDR X8, [X8 + 0x8C8]
	0x03E3D654 MOV X0, X20
	0x03E3D658 MOV X1, X21
	0x03E3D65C LDR X2, [X8]
	0x03E3D660 BL 0x272A4B0
	0x03E3D664 MOV X0, X19
	0x03E3D668 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x5AC000
	009 Move X22, 0x32F000
	010 Move W8, [X21+1949]
	011 Move X22, [X22+888]
	012 Move X19, X1
	013 Move V8, V1
	014 Move V9, V0
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x32F000
	021 Move X0, [X0+888]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1949], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X21, X0
	029 Call Object..ctor, X0
	030 Move [X21+16], W31
	031 Move [X21+32], X20
	032 Move [X21+40], S9
	033 Move [X21+48], S8
	034 Move [X21+48], X19
	035 Move X0, X21
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Move D9, [X31+64]
	042 Move D8, [X31+72]
	043 Return X0

Method: System.Void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3D6D4 STRB W8, [X20 + 0x7B8]
	0x03E3D6D8 LDR X8, [X19]
	0x03E3D6DC MOV X0, X19
	0x03E3D6E0 LDP X9, X1, [X8 + 0x1C8]
	0x03E3D6E4 BLR X9
	0x03E3D6E8 TBZ X0, 0x0, 0x3E3D728

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Selectable.OnPointerUp, X0, X1
	005 Move [X19+320], W31
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Void OnMove(UnityEngine.EventSystems.AxisEventData eventData)

Disassembly:
	0x03E3D714 MOV X0, X19
	0x03E3D718 LDP X20, X19, [X31 + 0x10]
	0x03E3D71C MOV X1, X31
	0x03E3D720 LDR X30, [X31], #0x20
	0x03E3D724 B 0x3E2F3D8
	0x03E3D728 LDP X20, X19, [X31 + 0x10]
	0x03E3D72C LDR X30, [X31], #0x20
	0x03E3D730 RET
	0x03E3D734 LDR V0, [X0 + 0x64]
	0x03E3D738 RET
	0x03E3D73C STR S0, [X0 + 0x64]
	0x03E3D740 B 0x3E3D6AC
	0x03E3D744 LDR X0, [X0 + 0x68]
	0x03E3D748 RET
	0x03E3D74C STR X1, [X0 + 0x68]
	0x03E3D750 RET
	0x03E3D754 STP X30, X21, [X31 - 0x20]!
	0x03E3D758 STP X20, X19, [X31 + 0x10]
	0x03E3D75C ADRP X20, 0x5AB000
	0x03E3D760 ADRP X21, 0x2B6000
	0x03E3D764 LDRB W8, [X20 + 0x7A4]
	0x03E3D768 LDR X21, [X21 + 0x598]
	0x03E3D76C MOV X19, X0
	0x03E3D770 TBNZ X8, 0x0, 0x3E3D794
	0x03E3D774 ADRP X0, 0x2B6000
	0x03E3D778 LDR X0, [X0 + 0x598]
	0x03E3D77C BL 0x1C16CF4
	0x03E3D780 ADRP X0, 0x2DD000
	0x03E3D784 LDR X0, [X0 + 0xC70]
	0x03E3D788 BL 0x1C16CF4
	0x03E3D78C MOVZ W8, 0x1
	0x03E3D790 STRB W8, [X20 + 0x7A4]
	0x03E3D794 LDR X0, [X21]
	0x03E3D798 LDR X20, [X19 + 0x80]
	0x03E3D79C LDR W8, [X0 + 0xE0]
	0x03E3D7A0 CBNZ W8, 0x3E3D7A8
	0x03E3D7A4 BL 0x1C16DFC
	0x03E3D7A8 MOV X0, X20
	0x03E3D7AC MOV X1, X31
	0x03E3D7B0 MOV X2, X31
	0x03E3D7B4 BL 0x3C3883C
	0x03E3D7B8 TBZ X0, 0x0, 0x3E3D7C8
	0x03E3D7BC LDR X20, [X19 + 0x40]
	0x03E3D7C0 STR X20, [X19 + 0x80]
	0x03E3D7C4 B 0x3E3D7CC
	0x03E3D7C8 LDR X20, [X19 + 0x80]
	0x03E3D7CC LDR X0, [X21]
	0x03E3D7D0 LDR W8, [X0 + 0xE0]
	0x03E3D7D4 CBNZ W8, 0x3E3D7DC
	0x03E3D7D8 BL 0x1C16DFC
	0x03E3D7DC MOV X0, X20
	0x03E3D7E0 MOV X1, X31
	0x03E3D7E4 MOV X2, X31
	0x03E3D7E8 BL 0x3C3883C
	0x03E3D7EC TBZ X0, 0x0, 0x3E3D82C
	0x03E3D7F0 MOV X0, X19
	0x03E3D7F4 MOV X1, X31
	0x03E3D7F8 BL 0x3C32E90
	0x03E3D7FC CBZ X0, 0x3E3D834
	0x03E3D800 ADRP X8, 0x2DD000
	0x03E3D804 LDR X8, [X8 + 0xC70]
	0x03E3D808 LDR X1, [X8]
	0x03E3D80C LDR X8, [X0]
	0x03E3D810 CMP X8, X1
	0x03E3D814 B.NE 0x3E3D828
	0x03E3D818 STR X0, [X19 + 0x80]
	0x03E3D81C LDR X8, [X0]
	0x03E3D820 CMP X8, X1
	0x03E3D824 B.EQ 0x3E3D838
	0x03E3D828 BL 0x1C171E0
	0x03E3D82C LDR X0, [X19 + 0x80]
	0x03E3D830 B 0x3E3D838
	0x03E3D834 STR X0, [X19 + 0x80]
	0x03E3D838 LDP X20, X19, [X31 + 0x10]
	0x03E3D83C LDP X30, X21, [X31], #0x20
	0x03E3D840 RET
	0x03E3D844 LDP S0, S1, [X0 + 0xB8]
	0x03E3D848 RET
	0x03E3D84C STP S0, S1, [X0 + 0xB8]
	0x03E3D850 RET
	0x03E3D854 STP X30, X21, [X31 - 0x20]!
	0x03E3D858 STP X20, X19, [X31 + 0x10]
	0x03E3D85C ADRP X21, 0x5AB000
	0x03E3D860 ADRP X20, 0x2B6000
	0x03E3D864 LDRB W8, [X21 + 0x7A5]
	0x03E3D868 LDR X20, [X20 + 0x598]
	0x03E3D86C MOV X19, X0
	0x03E3D870 TBNZ X8, 0x0, 0x3E3D894
	0x03E3D874 ADRP X0, 0x2B8000
	0x03E3D878 LDR X0, [X0 + 0x6B8]
	0x03E3D87C BL 0x1C16CF4
	0x03E3D880 ADRP X0, 0x2B6000
	0x03E3D884 LDR X0, [X0 + 0x598]
	0x03E3D888 BL 0x1C16CF4
	0x03E3D88C MOVZ W8, 0x1
	0x03E3D890 STRB W8, [X21 + 0x7A5]
	0x03E3D894 LDR X0, [X20]
	0x03E3D898 LDR X20, [X19 + 0x108]
	0x03E3D89C LDR W8, [X0 + 0xE0]
	0x03E3D8A0 CBNZ W8, 0x3E3D8A8
	0x03E3D8A4 BL 0x1C16DFC
	0x03E3D8A8 MOV X0, X20
	0x03E3D8AC MOV X1, X31
	0x03E3D8B0 MOV X2, X31
	0x03E3D8B4 BL 0x3C3883C
	0x03E3D8B8 TBZ X0, 0x0, 0x3E3D8D8
	0x03E3D8BC ADRP X8, 0x2B8000
	0x03E3D8C0 LDR X8, [X8 + 0x6B8]
	0x03E3D8C4 MOV X0, X19
	0x03E3D8C8 LDR X1, [X8]
	0x03E3D8CC BL 0x21A3894
	0x03E3D8D0 STR X0, [X19 + 0x108]
	0x03E3D8D4 B 0x3E3D8DC
	0x03E3D8D8 LDR X0, [X19 + 0x108]
	0x03E3D8DC LDP X20, X19, [X31 + 0x10]
	0x03E3D8E0 LDP X30, X21, [X31], #0x20
	0x03E3D8E4 RET
	0x03E3D8E8 STR X30, [X31 - 0x30]!
	0x03E3D8EC STP X22, X21, [X31 + 0x10]
	0x03E3D8F0 STP X20, X19, [X31 + 0x20]
	0x03E3D8F4 ADRP X21, 0x5AB000
	0x03E3D8F8 ADRP X20, 0x32E000
	0x03E3D8FC LDRB W8, [X21 + 0x7A6]
	0x03E3D900 LDR X20, [X20 + 0x398]
	0x03E3D904 MOV X19, X0
	0x03E3D908 TBNZ X8, 0x0, 0x3E3D92C
	0x03E3D90C ADRP X0, 0x32E000
	0x03E3D910 LDR X0, [X0 + 0x398]
	0x03E3D914 BL 0x1C16CF4
	0x03E3D918 ADRP X0, 0x2B8000
	0x03E3D91C LDR X0, [X0 + 0x9B0]
	0x03E3D920 BL 0x1C16CF4
	0x03E3D924 MOVZ W8, 0x1
	0x03E3D928 STRB W8, [X21 + 0x7A6]
	0x03E3D92C ADRP X10, 0xFFFFFFFFFCCB1000
	0x03E3D930 LDR V0, [X10 + 0x118]
	0x03E3D934 MOVZ X9, 0x1
	0x03E3D938 MOVK X9, 0xCCCD
	0x03E3D93C MOVZ W8, 0x101
	0x03E3D940 MOVK X9, 0x3DCC0000
	0x03E3D944 MOVZ W22, 0x1
	0x03E3D948 STRH W8, [X19 + 0x28]
	0x03E3D94C STUR X9, [X19 + 0x2C]
	0x03E3D950 STRB W22, [X19 + 0x34]
	0x03E3D954 STR D0, [X19 + 0x38]
	0x03E3D958 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5AC000
	006 Move W8, [X21+1950]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2B7000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1950], W8
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+456]
	021 Move X1, [X8+464]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {124}
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+696]
	030 Move X1, [X8+704]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {124}
	036 Compare X20, 0
	037 JumpIfEqual {161}
	038 Move W8, [X20+40]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, -53100544
	041 Add X9, X9, 1572
	042 NotImplemented "Instruction ADR not yet implemented."
	043 Move W11, [X9]
	044 Add X10, X10, X11
	045 CallNoReturn X10
	046 Move W8, [X19+264]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, [X19]
	049 Move X9, [X8+744]
	050 Move X1, [X8+752]
	051 Move W8, [X19+264]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X19]
	054 Move X9, [X8+776]
	055 Move X1, [X8+784]
	056 Move W8, [X19+264]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X19]
	059 Move X9, [X8+760]
	060 Move X1, [X8+768]
	061 Move X0, X19
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, 0x2B7000
	064 Move X8, [X8+1432]
	065 Move X21, X0
	066 Move X8, [X8]
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X0, X21
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {124}
	080 Move W8, [X19+264]
	081 Move X0, X19
	082 And W20, W8, 0xFFFFFFFD
	083 Call Scrollbar.get_value, X0
	084 Move W8, [X19+276]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract W8, W8, 1
	087 NotImplemented "Instruction SCVTF not yet implemented."
	088 Move S2, 1
	089 NotImplemented "Instruction FDIV not yet implemented."
	090 Move W8, [X19+264]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X19]
	093 Move X9, [X8+792]
	094 Move X1, [X8+800]
	095 Move X0, X19
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, 0x2B7000
	098 Move X8, [X8+1432]
	099 Move X21, X0
	100 Move X8, [X8]
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X0, X21
	107 Move X1, X31
	108 Move X2, X31
	109 Call Object.op_Equality, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {124}
	114 Move W8, [X19+264]
	115 Move X0, X19
	116 And W20, W8, 0xFFFFFFFD
	117 Call Scrollbar.get_value, X0
	118 Move W8, [X19+276]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract W8, W8, 1
	121 NotImplemented "Instruction SCVTF not yet implemented."
	122 Move S2, 1
	123 NotImplemented "Instruction FDIV not yet implemented."
	124 Move X0, X19
	125 Move X1, X20
	126 Move X20, [X31+16]
	127 Move X19, [X31+24]
	128 Move X30, [X31+32]
	129 Move X21, [X31+40]
	130 Move X20, [X31+16]
	131 Move X19, [X31+24]
	132 Move X30, [X31+32]
	133 Move X21, [X31+40]
	134 Return 
	135 Move X8, -53813248
	136 Move V1, [X8+188]
	137 NotImplemented "Instruction FNEG not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move S3, 1
	140 Move S4, W31
	141 NotImplemented "Instruction FCSEL not yet implemented."
	142 Move X8, -53813248
	143 Move V1, [X8+188]
	144 NotImplemented "Instruction FNEG not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move S3, 1
	147 Move S4, W31
	148 NotImplemented "Instruction FCSEL not yet implemented."
	149 Move X0, X19
	150 Move X20, [X31+16]
	151 Move X19, [X31+24]
	152 Add S0, S0, S1
	153 NotImplemented "Instruction FMIN not yet implemented."
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 NotImplemented "Instruction FCSEL not yet implemented."
	156 Move W1, 1
	157 Move X30, [X31+32]
	158 Move X21, [X31+40]
	159 Call Scrollbar.Set, X0, V0, X1
	160 Return 
	161 Call 0x1C17F20

Method: UnityEngine.UI.Selectable FindSelectableOnLeft()

Disassembly:
	0x03E3D9E8 STP X30, X21, [X31 - 0x20]!
	0x03E3D9EC STP X20, X19, [X31 + 0x10]
	0x03E3D9F0 ADRP X20, 0x5AB000
	0x03E3D9F4 ADRP X21, 0x31C000
	0x03E3D9F8 LDRB W8, [X20 + 0x7BA]
	0x03E3D9FC LDR X21, [X21 + 0xCA0]
	0x03E3DA00 MOV X19, X0
	0x03E3DA04 TBNZ X8, 0x0, 0x3E3DA1C
	0x03E3DA08 ADRP X0, 0x31C000

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+264]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X0, X31
	006 Return X0

Method: UnityEngine.UI.Selectable FindSelectableOnRight()

Disassembly:
	0x03E3DAE4 LDR X0, [X0 + 0x598]
	0x03E3DAE8 BL 0x1C16CF4
	0x03E3DAEC ADRP X0, 0x2DD000
	0x03E3DAF0 LDR X0, [X0 + 0xC70]
	0x03E3DAF4 BL 0x1C16CF4
	0x03E3DAF8 MOVZ W8, 0x1
	0x03E3DAFC STRB W8, [X20 + 0x7A7]
	0x03E3DB00 MOV X0, X19
	0x03E3DB04 MOV X1, X31

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+264]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X0, X31
	006 Return X0

Method: UnityEngine.UI.Selectable FindSelectableOnUp()

Disassembly:
	0x03E3DBE0 BL 0x3E3D754
	0x03E3DBE4 CBZ X0, 0x3E3DE0C
	0x03E3DBE8 MOV X1, X31
	0x03E3DBEC BL 0x3C3F49C
	0x03E3DBF0 LDR X8, [X23]
	0x03E3DBF4 MOV X21, X0
	0x03E3DBF8 LDR W9, [X8 + 0xE0]
	0x03E3DBFC CBNZ W9, 0x3E3DC08
	0x03E3DC00 MOV X0, X8

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+264]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X0, X31
	006 Return X0

Method: UnityEngine.UI.Selectable FindSelectableOnDown()

Disassembly:
	0x03E3DCDC AND W9, W24, W21, 0x0
	0x03E3DCE0 ANDS W8, W9, W8, 0x0
	0x03E3DCE4 CSEL X21, X31, X19, EQ
	0x03E3DCE8 CSEL X9, X19, X31, EQ
	0x03E3DCEC CBZ W8, 0x3E3DD24
	0x03E3DCF0 LDR X0, [X23]
	0x03E3DCF4 LDR X20, [X19 + 0x110]
	0x03E3DCF8 LDR W8, [X0 + 0xE0]
	0x03E3DCFC CBNZ W8, 0x3E3DD04

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+264]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X0, X31
	006 Return X0

Method: System.Void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03E3DDD8 BL 0x3C3883C
	0x03E3DDDC FMOV S2, W31
	0x03E3DDE0 TBNZ X0, 0x0, 0x3E3DDF4
	0x03E3DDE4 LDR X0, [X19 + 0x118]
	0x03E3DDE8 CBZ X0, 0x3E3DE0C
	0x03E3DDEC MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move [X1+324], W31
	005 Move X30, [X31+16]
	006 Return 
	007 Call 0x1C17F20

Method: System.Void SetDirection(UnityEngine.UI.Scrollbar/Direction direction, System.Boolean includeRectLayouts)

Disassembly:
	0x03E3DDF0 BL 0x3C3E51C
	0x03E3DDF4 STR S2, [X19 + 0x104]
	0x03E3DDF8 LDP X20, X19, [X31 + 0x30]
	0x03E3DDFC LDP X22, X21, [X31 + 0x20]
	0x03E3DE00 LDP X24, X23, [X31 + 0x10]
	0x03E3DE04 LDR X30, [X31], #0x40
	0x03E3DE08 RET
	0x03E3DE0C BL 0x1C16F20
	0x03E3DE10 SUB X31, X31, 0x70
	0x03E3DE14 STP D13, D12, [X31 + 0x20]
	0x03E3DE18 STP D11, D10, [X31 + 0x30]
	0x03E3DE1C STP D9, D8, [X31 + 0x40]
	0x03E3DE20 STR X30, [X31 + 0x50]
	0x03E3DE24 STP X20, X19, [X31 + 0x60]
	0x03E3DE28 ADRP X20, 0x5AB000
	0x03E3DE2C LDRB W8, [X20 + 0x7B6]
	0x03E3DE30 MOV X19, X0
	0x03E3DE34 TBNZ X8, 0x0, 0x3E3DE58
	0x03E3DE38 ADRP X0, 0x2B6000
	0x03E3DE3C LDR X0, [X0 + 0x5A8]
	0x03E3DE40 BL 0x1C16CF4
	0x03E3DE44 ADRP X0, 0x2B6000
	0x03E3DE48 LDR X0, [X0 + 0x598]
	0x03E3DE4C BL 0x1C16CF4
	0x03E3DE50 MOVZ W8, 0x1
	0x03E3DE54 STRB W8, [X20 + 0x7B6]
	0x03E3DE58 MOV X0, X19
	0x03E3DE5C BL 0x3E3D754
	0x03E3DE60 CBZ X0, 0x3E3E164
	0x03E3DE64 MOV X1, X31
	0x03E3DE68 BL 0x3C3E51C
	0x03E3DE6C MOV X0, X19
	0x03E3DE70 MOV V8.16B, V0.16B
	0x03E3DE74 MOV V9.16B, V1.16B
	0x03E3DE78 MOV V10.16B, V2.16B
	0x03E3DE7C MOV V11.16B, V3.16B
	0x03E3DE80 BL 0x3E3D754
	0x03E3DE84 CBZ X0, 0x3E3E164
	0x03E3DE88 ADRP X20, 0x2B6000
	0x03E3DE8C LDR X20, [X20 + 0x598]
	0x03E3DE90 FMOV S12, 0.5
	0x03E3DE94 FMUL S0, S11, S12
	0x03E3DE98 FMUL S1, S10, S12
	0x03E3DE9C MOV X1, X31
	0x03E3DEA0 FADD S9, S9, S0
	0x03E3DEA4 FADD S8, S8, S1
	0x03E3DEA8 BL 0x3C3E51C
	0x03E3DEAC FMUL S0, S2, S12
	0x03E3DEB0 FMUL S1, S3, S12
	0x03E3DEB4 ADD X8, X31, 0x8
	0x03E3DEB8 MOV X0, X19
	0x03E3DEBC STP S8, S9, [X19 + 0xA0]
	0x03E3DEC0 STR W31, [X19 + 0xA8]
	0x03E3DEC4 STP S0, S1, [X19 + 0xAC]
	0x03E3DEC8 STR W31, [X19 + 0xB4]
	0x03E3DECC BL 0x3E400D8
	0x03E3DED0 LDR X8, [X31 + 0x18]
	0x03E3DED4 LDUR V0, [X31 + 0x8]
	0x03E3DED8 STR X8, [X19 + 0x98]
	0x03E3DEDC STUR V0, [X19 + 0x88]
	0x03E3DEE0 LDR X0, [X20]
	0x03E3DEE4 LDR X20, [X19 + 0x20]
	0x03E3DEE8 LDR W8, [X0 + 0xE0]
	0x03E3DEEC CBNZ W8, 0x3E3DEF4
	0x03E3DEF0 BL 0x1C16DFC
	0x03E3DEF4 MOV X0, X20
	0x03E3DEF8 MOV X1, X31
	0x03E3DEFC MOV X2, X31
	0x03E3DF00 BL 0x3C3883C
	0x03E3DF04 TBNZ X0, 0x0, 0x3E3E120
	0x03E3DF08 LDR X0, [X19 + 0x20]
	0x03E3DF0C CBZ X0, 0x3E3E164
	0x03E3DF10 LDUR V0, [X19 + 0x94]
	0x03E3DF14 LDR V1, [X19 + 0x9C]
	0x03E3DF18 LDR V8, [X19 + 0x88]
	0x03E3DF1C LDR V9, [X19 + 0x90]
	0x03E3DF20 MOV X1, X31
	0x03E3DF24 FADD V10.2S, V0.2S, V0.2S
	0x03E3DF28 FADD S11, S1, S1
	0x03E3DF2C BL 0x3C3EA28
	0x03E3DF30 LDUR V2, [X19 + 0xAC]
	0x03E3DF34 FMOV S5, 0.5
	0x03E3DF38 MOV V0.S[1], V1.S[0]
	0x03E3DF3C FMUL S1, S11, S5
	0x03E3DF40 MOVI V3.2S, 0xBF, 0x18
	0x03E3DF44 LDR W8, [X19 + 0x2C]
	0x03E3DF48 STR S1, [X19 + 0x9C]
	0x03E3DF4C FADD V1.2S, V2.2S, V2.2S
	0x03E3DF50 FADD V0.2S, V0.2S, V3.2S
	0x03E3DF54 FSUB V3.2S, V1.2S, V10.2S
	0x03E3DF58 UNIMPLEMENTED
	0x00000000 INVALID
	0x03E3DF60 MOVI V4.2S, 0x3F, 0x18
	0x03E3DF64 FSUB V0.2S, V8.2S, V0.2S
	0x00000000 INVALID
	0x03E3DF6C CMP W8, 0x2
	0x00000000 INVALID
	0x00000000 INVALID

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5AC000
	007 Move W8, [X22+1951]
	008 Move W20, W2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x30D000
	016 Move X0, [X0+1720]
	017 Call 0x1C17CF4
	018 Move X0, 0x2DE000
	019 Move X0, [X0+3184]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1951], W8
	023 Move W22, [X19+264]
	024 Move X0, X19
	025 Move W1, W21
	026 Call Scrollbar.set_direction, X0, X1
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {97}
	031 Move W8, [X19+264]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 And W21, W22, 0xFFFFFFFD
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Xor W9, W9, W10
	038 Move TEMP, X9
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {70}
	042 Move X0, X19
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Move X8, 0x30D000
	046 Move X8, [X8+1720]
	047 Move X20, X0
	048 Move X8, [X8]
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfEqual {60}
	052 Compare X20, 0
	053 JumpIfEqual {64}
	054 Move X8, 0x2DE000
	055 Move X8, [X8+3184]
	056 Move X9, [X20]
	057 Move X8, [X8]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Compare X20, 0
	063 JumpIfNotEqual {54}
	064 Move X0, X31
	065 Move W1, 1
	066 Move W2, 1
	067 Move X3, X31
	068 Call RectTransformUtility.FlipLayoutAxes, X0, X1, X2
	069 Move W8, [X19+264]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 And W8, W8, 0xFFFFFFFD
	072 NotImplemented "Instruction CSET not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X19
	077 Move X1, X31
	078 Call Component.get_transform, X0
	079 Move X8, 0x30D000
	080 Move X8, [X8+1720]
	081 Move X20, X0
	082 Move X0, [X8]
	083 Move W8, [X19+264]
	084 Move W9, [X0+224]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."
	087 Compare W9, 0
	088 JumpIfEqual {103}
	089 Compare X20, 0
	090 JumpIfEqual {106}
	091 Move X8, 0x2DE000
	092 Move X8, [X8+3184]
	093 Move X9, [X20]
	094 Move X8, [X8]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSEL not yet implemented."
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Return 
	103 Call 0x1C17DFC
	104 Compare X20, 0
	105 JumpIfNotEqual {91}
	106 Move X0, X31
	107 Move W1, W19
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move W2, 1
	113 Move W3, 1
	114 Move X4, X31
	115 Move X30, [X31+48]
	116 Call RectTransformUtility.FlipLayoutOnAxis, X0, X1, X2, X3
	117 Return 

Method: UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform()

Disassembly:
	0x03E3DF78 STUR D1, [X19 + 0x94]
	0x03E3DF7C STR D0, [X19 + 0x88]

ISIL:
	001 Move X1, X31
	002 Call Component.get_transform, X0
	003 Return X0

