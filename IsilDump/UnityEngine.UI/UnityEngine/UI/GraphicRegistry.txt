Type: UnityEngine.UI.GraphicRegistry

Method: System.Void .ctor()

Disassembly:
	0x03CE07FC B 0x3CE0804
	0x03CE0800 MOV W0, W31
	0x03CE0804 LDP X20, X19, [X31 + 0x10]
	0x03CE0808 LDP X30, X21, [X31], #0x20
	0x03CE080C RET
	0x03CE0810 BL 0x1C16F20
	0x03CE0814 LDR V0, [X0 + 0x108]
	0x03CE0818 RET
	0x03CE081C ADRP X8, 0xFFFFFFFFFCE0A000
	0x03CE0820 LDR V1, [X8 + 0x330]
	0x03CE0824 LDR X8, [X0]
	0x03CE0828 FMAX S0, S0, S1
	0x03CE082C STR S0, [X0 + 0x108]
	0x03CE0830 LDR X2, [X8 + 0x2F8]
	0x03CE0834 LDR X1, [X8 + 0x300]
	0x03CE0838 BR X2
	0x03CE083C STR D8, [X31 - 0x30]!
	0x03CE0840 STP X30, X21, [X31 + 0x10]
	0x03CE0844 STP X20, X19, [X31 + 0x20]
	0x03CE0848 ADRP X20, 0x707000
	0x03CE084C ADRP X21, 0x413000
	0x03CE0850 LDRB W8, [X20 + 0x4D7]
	0x03CE0854 LDR X21, [X21 + 0x598]
	0x03CE0858 MOV X19, X0
	0x03CE085C TBNZ X8, 0x0, 0x3CE0874
	0x03CE0860 ADRP X0, 0x413000
	0x03CE0864 LDR X0, [X0 + 0x598]
	0x03CE0868 BL 0x1C16CF4
	0x03CE086C MOVZ W8, 0x1
	0x03CE0870 STRB W8, [X20 + 0x4D7]
	0x03CE0874 MOV X0, X19
	0x03CE0878 BL 0x3CDFE9C
	0x03CE087C LDR X8, [X21]
	0x03CE0880 MOV X20, X0
	0x03CE0884 LDR W9, [X8 + 0xE0]
	0x03CE0888 CBNZ W9, 0x3CE0894
	0x03CE088C MOV X0, X8
	0x03CE0890 BL 0x1C16DFC
	0x03CE0894 MOV X0, X20
	0x03CE0898 MOV X1, X31
	0x03CE089C BL 0x3C38948
	0x03CE08A0 TBZ X0, 0x0, 0x3CE08C0
	0x03CE08A4 MOV X0, X19
	0x03CE08A8 BL 0x3CDFE9C
	0x03CE08AC CBZ X0, 0x3CE092C
	0x03CE08B0 MOV X1, X31
	0x03CE08B4 BL 0x3C419CC
	0x03CE08B8 MOV V8.16B, V0.16B
	0x03CE08BC B 0x3CE08C8
	0x03CE08C0 MOVZ W8, 0x42C80000
	0x03CE08C4 FMOV S8, W8
	0x03CE08C8 MOV X0, X19
	0x03CE08CC BL 0x3CDADE8
	0x03CE08D0 LDR X8, [X21]
	0x03CE08D4 MOV X20, X0
	0x03CE08D8 LDR W9, [X8 + 0xE0]
	0x03CE08DC CBNZ W9, 0x3CE08E8
	0x03CE08E0 MOV X0, X8
	0x03CE08E4 BL 0x1C16DFC
	0x03CE08E8 MOV X0, X20
	0x03CE08EC MOV X1, X31
	0x03CE08F0 BL 0x3C38948
	0x03CE08F4 TBZ X0, 0x0, 0x3CE0914
	0x03CE08F8 MOV X0, X19
	0x03CE08FC BL 0x3CDADE8
	0x03CE0900 CBZ X0, 0x3CE092C
	0x03CE0904 MOV X1, X31
	0x03CE0908 BL 0x3E2469C
	0x03CE090C STR S0, [X19 + 0x10C]
	0x03CE0910 B 0x3CE0918
	0x03CE0914 LDR V0, [X19 + 0x10C]
	0x03CE0918 LDP X20, X19, [X31 + 0x20]
	0x03CE091C LDP X30, X21, [X31 + 0x10]
	0x03CE0920 FDIV S0, S8, S0
	0x03CE0924 LDR V8, [X31], #0x30
	0x03CE0928 RET
	0x03CE092C BL 0x1C16F20
	0x03CE0930 STP X30, X19, [X31 - 0x10]!
	0x03CE0934 MOV X19, X0
	0x03CE0938 BL 0x3CE083C
	0x03CE093C LDR V1, [X19 + 0x108]
	0x03CE0940 FMUL S0, S0, S1
	0x03CE0944 LDP X30, X19, [X31], #0x10
	0x03CE0948 RET
	0x03CE094C STP X30, X21, [X31 - 0x20]!
	0x03CE0950 STP X20, X19, [X31 + 0x10]
	0x03CE0954 ADRP X20, 0x707000
	0x03CE0958 ADRP X21, 0x413000
	0x03CE095C LDRB W8, [X20 + 0x4D8]
	0x03CE0960 LDR X21, [X21 + 0x598]
	0x03CE0964 MOV X19, X0
	0x03CE0968 TBNZ X8, 0x0, 0x3CE098C
	0x03CE096C ADRP X0, 0x482000
	0x03CE0970 LDR X0, [X0 + 0x580]
	0x03CE0974 BL 0x1C16CF4
	0x03CE0978 ADRP X0, 0x413000
	0x03CE097C LDR X0, [X0 + 0x598]
	0x03CE0980 BL 0x1C16CF4
	0x03CE0984 MOVZ W8, 0x1
	0x03CE0988 STRB W8, [X20 + 0x4D8]
	0x03CE098C LDR X0, [X21]
	0x03CE0990 LDR X20, [X19 + 0x20]
	0x03CE0994 LDR W8, [X0 + 0xE0]
	0x03CE0998 CBNZ W8, 0x3CE09A0
	0x03CE099C BL 0x1C16DFC
	0x03CE09A0 MOV X0, X20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x708000
	014 Move X27, 0x483000
	015 Move X25, 0x483000
	016 Move X23, 0x483000
	017 Move X22, 0x483000
	018 Move X21, 0x41B000
	019 Move W8, [X20+1213]
	020 Move X27, [X27+1336]
	021 Move X25, [X25+1344]
	022 Move X23, [X23+1352]
	023 Move X22, [X22+1360]
	024 Move X21, [X21+3088]
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {59}
	030 Move X0, 0x483000
	031 Move X0, [X0+1344]
	032 Call 0x1C17CF4
	033 Move X0, 0x483000
	034 Move X0, [X0+1368]
	035 Call 0x1C17CF4
	036 Move X0, 0x483000
	037 Move X0, [X0+1360]
	038 Call 0x1C17CF4
	039 Move X0, 0x483000
	040 Move X0, [X0+1376]
	041 Call 0x1C17CF4
	042 Move X0, 0x483000
	043 Move X0, [X0+1384]
	044 Call 0x1C17CF4
	045 Move X0, 0x483000
	046 Move X0, [X0+1352]
	047 Call 0x1C17CF4
	048 Move X0, 0x483000
	049 Move X0, [X0+1392]
	050 Call 0x1C17CF4
	051 Move X0, 0x483000
	052 Move X0, [X0+1336]
	053 Call 0x1C17CF4
	054 Move X0, 0x41B000
	055 Move X0, [X0+3088]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+1213], W8
	059 Move X29, 0x483000
	060 Move X29, [X29+1384]
	061 Move X0, [X27]
	062 Move X28, 0x483000
	063 Move X26, 0x483000
	064 Move X24, 0x483000
	065 Move X28, [X28+1368]
	066 Move X26, [X26+1392]
	067 Move X24, [X24+1376]
	068 Call 0x1C17F10
	069 Move X1, [X25]
	070 Move X20, X0
	071 Call Dictionary`2<Object, Object>..ctor, X0
	072 Move [X19+16], X20
	073 Move X0, [X27]
	074 Call 0x1C17F10
	075 Move X1, [X25]
	076 Move X20, X0
	077 Call Dictionary`2<Object, Object>..ctor, X0
	078 Move X0, X19
	079 Move X1, X31
	080 Move [X19+24], X20
	081 Call Object..ctor, X0
	082 Move X0, [X23]
	083 Call 0x1C17F10
	084 Move X1, [X22]
	085 Move X19, X0
	086 Call Dictionary`2<Object, Int32>..ctor, X0
	087 Move X0, [X21]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X19
	093 Move X1, X31
	094 Call GC.KeepAlive, X0
	095 Move X0, [X29]
	096 Call 0x1C17F10
	097 Move X1, [X28]
	098 Move X19, X0
	099 Call Dictionary`2<Object, Int32>..ctor, X0
	100 Move X0, X19
	101 Move X1, X31
	102 Call GC.KeepAlive, X0
	103 Move X0, [X26]
	104 Call 0x1C17F10
	105 Move X1, [X24]
	106 Move X19, X0
	107 Call Dictionary`2<Object, Int32>..ctor, X0
	108 Move X0, X19
	109 Move X20, [X31+80]
	110 Move X19, [X31+88]
	111 Move X22, [X31+64]
	112 Move X21, [X31+72]
	113 Move X24, [X31+48]
	114 Move X23, [X31+56]
	115 Move X26, [X31+32]
	116 Move X25, [X31+40]
	117 Move X28, [X31+16]
	118 Move X27, [X31+24]
	119 Move X1, X31
	120 Move X29, [X31+96]
	121 Move X30, [X31+104]
	122 Call GC.KeepAlive, X0
	123 Return 

Method: UnityEngine.UI.GraphicRegistry get_instance()

Disassembly:
	0x03CE09A4 MOV X1, X31
	0x03CE09A8 MOV X2, X31
	0x03CE09AC BL 0x3C354F8
	0x03CE09B0 TBZ X0, 0x0, 0x3CE09C4
	0x03CE09B4 LDR X0, [X19 + 0x20]
	0x03CE09B8 LDP X20, X19, [X31 + 0x10]
	0x03CE09BC LDP X30, X21, [X31], #0x20
	0x03CE09C0 RET
	0x03CE09C4 MOV X0, X19
	0x03CE09C8 BL 0x3CDFE9C
	0x03CE09CC LDR X8, [X21]
	0x03CE09D0 MOV X20, X0
	0x03CE09D4 LDR W9, [X8 + 0xE0]
	0x03CE09D8 CBNZ W9, 0x3CE09E4
	0x03CE09DC MOV X0, X8
	0x03CE09E0 BL 0x1C16DFC
	0x03CE09E4 MOV X0, X20
	0x03CE09E8 MOV X1, X31
	0x03CE09EC BL 0x3C38948
	0x03CE09F0 TBZ X0, 0x0, 0x3CE0A58
	0x03CE09F4 MOV X0, X19
	0x03CE09F8 BL 0x3CDFE9C
	0x03CE09FC CBZ X0, 0x3CE0A74
	0x03CE0A00 MOV X1, X31
	0x03CE0A04 BL 0x3C41A08
	0x03CE0A08 LDR X8, [X21]
	0x03CE0A0C MOV X20, X0
	0x03CE0A10 LDR W9, [X8 + 0xE0]
	0x03CE0A14 CBNZ W9, 0x3CE0A20
	0x03CE0A18 MOV X0, X8
	0x03CE0A1C BL 0x1C16DFC
	0x03CE0A20 MOV X0, X20
	0x03CE0A24 MOV X1, X31
	0x03CE0A28 MOV X2, X31
	0x03CE0A2C BL 0x3C354F8
	0x03CE0A30 TBZ X0, 0x0, 0x3CE0A58
	0x03CE0A34 ADRP X8, 0x482000
	0x03CE0A38 LDR X8, [X8 + 0x580]
	0x03CE0A3C LDR X0, [X8]
	0x03CE0A40 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x708000
	005 Move X20, 0x46A000
	006 Move W8, [X19+1214]
	007 Move X20, [X20+1408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x46A000
	013 Move X0, [X0+1408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1214], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X20]
	023 Move X8, [X0+184]
	024 Move X8, [X8]
	025 Compare X8, 0
	026 JumpIfNotEqual {39}
	027 Call 0x1C17F10
	028 Move X19, X0
	029 Call GraphicRegistry..ctor, X0
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move [X8], X19
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X0, [X8]
	048 Move X30, [X31+32]
	049 Return X0

Method: System.Void RegisterGraphicForCanvas(UnityEngine.Canvas c, UnityEngine.UI.Graphic graphic)

Disassembly:
	0x03CDCB24 CBNZ W8, 0x3CDCB2C
	0x03CDCB28 BL 0x1C16DFC
	0x03CDCB2C LDR X0, [X22]
	0x03CDCB30 BL 0x28F98D4
	0x03CDCB34 LDR X8, [X21]
	0x03CDCB38 LDR X21, [X20]
	0x03CDCB3C MOV X20, X0
	0x03CDCB40 LDR W9, [X8 + 0xE0]
	0x03CDCB44 CBNZ W9, 0x3CDCB50
	0x03CDCB48 MOV X0, X8
	0x03CDCB4C BL 0x1C16DFC
	0x03CDCB50 MOV X0, X21
	0x03CDCB54 MOV X1, X31
	0x03CDCB58 BL 0x338C698
	0x03CDCB5C MOV X1, X0
	0x03CDCB60 MOV X0, X19
	0x03CDCB64 MOV X2, X20
	0x03CDCB68 MOV X3, X31
	0x03CDCB6C BL 0x3C33320
	0x03CDCB70 CBZ X20, 0x3CDCD04
	0x03CDCB74 LDR W8, [X20 + 0x18]
	0x03CDCB78 CMP W8, 0x1
	0x03CDCB7C B.LT 0x3CDCC60
	0x03CDCB80 ADRP X28, 0x43F000
	0x03CDCB84 ADRP X29, 0x486000
	0x03CDCB88 LDR X28, [X28 + 0xA48]
	0x03CDCB8C LDR X29, [X29 + 0x490]
	0x03CDCB90 MOV W21, W31
	0x03CDCB94 LDR X2, [X28]
	0x03CDCB98 MOV X0, X20
	0x03CDCB9C MOV W1, W21
	0x03CDCBA0 BL 0x301BCCC
	0x03CDCBA4 LDR X8, [X26]
	0x03CDCBA8 MOV X25, X0
	0x03CDCBAC LDR W9, [X8 + 0xE0]
	0x03CDCBB0 CBNZ W9, 0x3CDCBBC
	0x03CDCBB4 MOV X0, X8
	0x03CDCBB8 BL 0x1C16DFC
	0x03CDCBBC BL 0x3CDD0BC
	0x03CDCBC0 CBZ X25, 0x3CDCD04
	0x03CDCBC4 LDR X23, [X29]
	0x03CDCBC8 MOV X22, X0
	0x03CDCBCC MOV X0, X25
	0x03CDCBD0 MOV X1, X23
	0x03CDCBD4 BL 0x1C16E00
	0x03CDCBD8 CBZ X0, 0x3CDCD08
	0x03CDCBDC LDR X24, [X29]
	0x03CDCBE0 MOV X0, X25
	0x03CDCBE4 MOV X1, X24
	0x03CDCBE8 BL 0x1C16E00
	0x03CDCBEC CBZ X0, 0x3CDCD14
	0x03CDCBF0 LDR X8, [X0]
	0x03CDCBF4 MOV X23, X0
	0x03CDCBF8 LDRH W9, [X8 + 0x12E]
	0x03CDCBFC CBZ X9, 0x3CDCC20
	0x03CDCC00 LDR X10, [X8 + 0xB0]
	0x03CDCC04 ADD X10, X10, 0x8
	0x03CDCC08 LDUR X11, [X10 - 0x8]
	0x03CDCC0C CMP X11, X24
	0x03CDCC10 B.EQ 0x3CDCC34
	0x03CDCC14 SUBS X9, X9, 0x1
	0x03CDCC18 ADD X10, X10, 0x10
	0x03CDCC1C B.NE 0x3CDCC08
	0x03CDCC20 MOV X0, X23
	0x03CDCC24 MOV X1, X24
	0x03CDCC28 MOV W2, W31
	0x03CDCC2C BL 0x1C5C788
	0x03CDCC30 B 0x3CDCC40
	0x03CDCC34 LDRSW X9, [X10]
	0x03CDCC38 ADD X8, X8, X9, 0x4, LSL
	0x03CDCC3C ADD X0, X8, 0x138
	0x03CDCC40 LDP X8, X2, [X0]
	0x03CDCC44 MOV X0, X23
	0x03CDCC48 MOV X1, X22
	0x03CDCC4C BLR X8
	0x03CDCC50 LDR W8, [X20 + 0x18]
	0x03CDCC54 ADD W21, W21, 0x1
	0x03CDCC58 CMP W21, W8
	0x03CDCC5C B.LT 0x3CDCB94
	0x03CDCC60 LDR X0, [X27]
	0x03CDCC64 ADRP X21, 0x43F000
	0x03CDCC68 LDR W8, [X0 + 0xE0]
	0x03CDCC6C LDR X21, [X21 + 0xA20]
	0x03CDCC70 CBNZ W8, 0x3CDCC78
	0x03CDCC74 BL 0x1C16DFC
	0x03CDCC78 LDR X1, [X21]
	0x03CDCC7C MOV X0, X20
	0x03CDCC80 BL 0x28F9A14
	0x03CDCC84 MOV X0, X19
	0x03CDCC88 BL 0x3CDBD2C
	0x03CDCC8C LDR X8, [X26]
	0x03CDCC90 MOV X19, X0
	0x03CDCC94 LDR W9, [X8 + 0xE0]
	0x03CDCC98 CBNZ W9, 0x3CDCCA4
	0x03CDCC9C MOV X0, X8
	0x03CDCCA0 BL 0x1C16DFC
	0x03CDCCA4 BL 0x3CDD0BC
	0x03CDCCA8 CBZ X19, 0x3CDCD04
	0x03CDCCAC MOV X1, X0
	0x03CDCCB0 MOV X0, X19
	0x03CDCCB4 LDP X20, X19, [X31 + 0x50]
	0x03CDCCB8 LDP X22, X21, [X31 + 0x40]
	0x03CDCCBC LDP X24, X23, [X31 + 0x30]
	0x03CDCCC0 LDP X26, X25, [X31 + 0x20]
	0x03CDCCC4 LDP X28, X27, [X31 + 0x10]
	0x03CDCCC8 MOV X2, X31
	0x03CDCCCC LDP X29, X30, [X31], #0x60
	0x03CDCCD0 B 0x3E22AB0
	0x03CDCCD4 LDR X0, [X26]
	0x03CDCCD8 LDR W8, [X0 + 0xE0]
	0x03CDCCDC CBNZ W8, 0x3CDCCE4
	0x03CDCCE0 BL 0x1C16DFC
	0x03CDCCE4 BL 0x3CDD0BC
	0x03CDCCE8 LDR X8, [X19]
	0x03CDCCEC MOV X1, X0
	0x03CDCCF0 MOV X0, X19
	0x03CDCCF4 LDR X9, [X8 + 0x3E8]
	0x03CDCCF8 LDR X2, [X8 + 0x3F0]
	0x03CDCCFC BLR X9
	0x03CDCD00 B 0x3CDCAFC
	0x03CDCD04 BL 0x1C16F20
	0x03CDCD08 MOV X0, X25
	0x03CDCD0C MOV X1, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x70C000
	007 Move X21, 0x418000
	008 Move W8, [X22+1215]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x487000
	017 Move X0, [X0+1056]
	018 Call 0x1C17CF4
	019 Move X0, 0x487000
	020 Move X0, [X0+1032]
	021 Call 0x1C17CF4
	022 Move X0, 0x46E000
	023 Move X0, [X0+1408]
	024 Call 0x1C17CF4
	025 Move X0, 0x487000
	026 Move X0, [X0+1064]
	027 Call 0x1C17CF4
	028 Move X0, 0x487000
	029 Move X0, [X0+1072]
	030 Call 0x1C17CF4
	031 Move X0, 0x487000
	032 Move X0, [X0+1080]
	033 Call 0x1C17CF4
	034 Move X0, 0x487000
	035 Move X0, [X0+1088]
	036 Call 0x1C17CF4
	037 Move X0, 0x418000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1215], W8
	042 Move X0, [X21]
	043 Move [X31+8], X31
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {140}
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {140}
	069 Move X22, 0x46E000
	070 Move X22, [X22+1408]
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Call GraphicRegistry.get_instance
	077 Compare X0, 0
	078 JumpIfEqual {146}
	079 Move X0, [X0+16]
	080 Compare X0, 0
	081 JumpIfEqual {146}
	082 Move X8, 0x487000
	083 Move X8, [X8+1032]
	084 Add X2, X31, 8
	085 Move X1, X20
	086 Move X3, [X8]
	087 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	088 Move X0, [X31+8]
	089 Compare X0, 0
	090 JumpIfEqual {102}
	091 Move X8, 0x487000
	092 Move X8, [X8+1064]
	093 Move W2, 1
	094 Move X1, X19
	095 Move X3, [X8]
	096 Call 0x2DE376C, X0, X1, X2
	097 Move X0, [X22]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {137}
	101 Call 0x1C17DFC
	102 Move X8, 0x487000
	103 Move X8, [X8+1088]
	104 Move X0, [X8]
	105 Call 0x1C17F10
	106 Move X8, 0x487000
	107 Move X8, [X8+1080]
	108 Move X21, X0
	109 Move X1, [X8]
	110 Call 0x2DE3F98, X0
	111 Move [X31+8], X21
	112 Compare X21, 0
	113 JumpIfEqual {146}
	114 Move X8, 0x487000
	115 Move X8, [X8+1072]
	116 Move X0, X21
	117 Move X1, X19
	118 Move X2, [X8]
	119 Call 0x2DE3674, X0, X1
	120 Move X0, [X22]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Call GraphicRegistry.get_instance
	126 Compare X0, 0
	127 JumpIfEqual {146}
	128 Move X0, [X0+16]
	129 Compare X0, 0
	130 JumpIfEqual {146}
	131 Move X8, 0x487000
	132 Move X2, [X31+8]
	133 Move X8, [X8+1056]
	134 Move X1, X20
	135 Move X3, [X8]
	136 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	137 Move X0, X20
	138 Move X1, X19
	139 Call GraphicRegistry.RegisterRaycastGraphicForCanvas, X0, X1
	140 Move X20, [X31+32]
	141 Move X19, [X31+40]
	142 Move X22, [X31+16]
	143 Move X21, [X31+24]
	144 Move X30, [X31+48]
	145 Return 
	146 Call 0x1C17F20

Method: System.Void RegisterRaycastGraphicForCanvas(UnityEngine.Canvas c, UnityEngine.UI.Graphic graphic)

Disassembly:
	0x03CDBFD8 MOV X19, X0
	0x03CDBFDC MOV X0, X20
	0x03CDBFE0 MOV X1, X19
	0x03CDBFE4 BL 0x21A443C
	0x03CDBFE8 LDR X8, [X20]
	0x03CDBFEC MOV X0, X20
	0x03CDBFF0 LDR X9, [X8 + 0x338]
	0x03CDBFF4 LDR X1, [X8 + 0x340]
	0x03CDBFF8 BLR X9
	0x03CDBFFC CBZ X19, 0x3CDC0E8
	0x03CDC000 LDR W8, [X19 + 0x18]
	0x03CDC004 MOV X20, X0
	0x03CDC008 CMP W8, 0x1
	0x03CDC00C B.LT 0x3CDC0AC
	0x03CDC010 ADRP X24, 0x47D000
	0x03CDC014 ADRP X25, 0x47D000
	0x03CDC018 LDR X24, [X24 + 0x720]
	0x03CDC01C LDR X25, [X25 + 0x710]
	0x03CDC020 MOV W21, W31
	0x03CDC024 LDR X2, [X24]
	0x03CDC028 MOV X0, X19
	0x03CDC02C MOV W1, W21
	0x03CDC030 BL 0x301BCCC
	0x03CDC034 CBZ X0, 0x3CDC0E8
	0x03CDC038 LDR X8, [X0]
	0x03CDC03C LDR X1, [X25]
	0x03CDC040 MOV X22, X0
	0x03CDC044 LDRH W9, [X8 + 0x12E]
	0x03CDC048 CBZ X9, 0x3CDC06C
	0x03CDC04C LDR X10, [X8 + 0xB0]
	0x03CDC050 ADD X10, X10, 0x8
	0x03CDC054 LDUR X11, [X10 - 0x8]
	0x03CDC058 CMP X11, X1
	0x03CDC05C B.EQ 0x3CDC07C
	0x03CDC060 SUBS X9, X9, 0x1
	0x03CDC064 ADD X10, X10, 0x10
	0x03CDC068 B.NE 0x3CDC054
	0x03CDC06C MOV X0, X22
	0x03CDC070 MOV W2, W31
	0x03CDC074 BL 0x1C5C788
	0x03CDC078 B 0x3CDC088
	0x03CDC07C LDRSW X9, [X10]
	0x03CDC080 ADD X8, X8, X9, 0x4, LSL
	0x03CDC084 ADD X0, X8, 0x138
	0x03CDC088 LDP X8, X2, [X0]
	0x03CDC08C MOV X0, X22
	0x03CDC090 MOV X1, X20
	0x03CDC094 BLR X8
	0x03CDC098 LDR W8, [X19 + 0x18]
	0x03CDC09C ADD W21, W21, 0x1
	0x03CDC0A0 MOV X20, X0
	0x03CDC0A4 CMP W21, W8
	0x03CDC0A8 B.LT 0x3CDC024
	0x03CDC0AC LDR X0, [X23]
	0x03CDC0B0 ADRP X21, 0x486000
	0x03CDC0B4 LDR W8, [X0 + 0xE0]
	0x03CDC0B8 LDR X21, [X21 + 0x478]
	0x03CDC0BC CBNZ W8, 0x3CDC0C4
	0x03CDC0C0 BL 0x1C16DFC
	0x03CDC0C4 LDR X1, [X21]
	0x03CDC0C8 MOV X0, X19
	0x03CDC0CC BL 0x28F9A14
	0x03CDC0D0 MOV X0, X20
	0x03CDC0D4 LDP X20, X19, [X31 + 0x30]
	0x03CDC0D8 LDP X22, X21, [X31 + 0x20]
	0x03CDC0DC LDP X24, X23, [X31 + 0x10]
	0x03CDC0E0 LDP X30, X25, [X31], #0x40
	0x03CDC0E4 RET
	0x03CDC0E8 BL 0x1C16F20
	0x03CDC0EC STR X30, [X31 - 0x20]!
	0x03CDC0F0 STP X20, X19, [X31 + 0x10]
	0x03CDC0F4 ADRP X20, 0x70B000
	0x03CDC0F8 ADRP X19, 0x47D000
	0x03CDC0FC LDRB W8, [X20 + 0x49F]
	0x03CDC100 LDR X19, [X19 + 0x118]
	0x03CDC104 TBNZ X8, 0x0, 0x3CDC11C
	0x03CDC108 ADRP X0, 0x47D000
	0x03CDC10C LDR X0, [X0 + 0x118]
	0x03CDC110 BL 0x1C16CF4
	0x03CDC114 MOVZ W8, 0x1
	0x03CDC118 STRB W8, [X20 + 0x49F]
	0x03CDC11C LDR X0, [X19]
	0x03CDC120 LDR W8, [X0 + 0xE0]
	0x03CDC124 CBNZ W8, 0x3CDC130
	0x03CDC128 BL 0x1C16DFC
	0x03CDC12C LDR X0, [X19]
	0x03CDC130 LDR X8, [X0 + 0xB8]
	0x03CDC134 LDP X20, X19, [X31 + 0x10]
	0x03CDC138 LDR X0, [X8 + 0x8]
	0x03CDC13C LDR X30, [X31], #0x20
	0x03CDC140 RET
	0x03CDC144 STR X30, [X31 - 0x30]!
	0x03CDC148 STP X22, X21, [X31 + 0x10]
	0x03CDC14C STP X20, X19, [X31 + 0x20]
	0x03CDC150 ADRP X21, 0x70B000
	0x03CDC154 ADRP X20, 0x46D000
	0x03CDC158 LDRB W8, [X21 + 0x4A0]
	0x03CDC15C LDR X20, [X20 + 0x580]
	0x03CDC160 MOV X19, X0
	0x03CDC164 TBNZ X8, 0x0, 0x3CDC194
	0x03CDC168 ADRP X0, 0x46D000
	0x03CDC16C LDR X0, [X0 + 0x580]
	0x03CDC170 BL 0x1C16CF4
	0x03CDC174 ADRP X0, 0x47D000
	0x03CDC178 LDR X0, [X0 + 0x118]
	0x03CDC17C BL 0x1C16CF4
	0x03CDC180 ADRP X0, 0x417000
	0x03CDC184 LDR X0, [X0 + 0x598]
	0x03CDC188 BL 0x1C16CF4
	0x03CDC18C MOVZ W8, 0x1
	0x03CDC190 STRB W8, [X21 + 0x4A0]
	0x03CDC194 ADRP X21, 0x47D000
	0x03CDC198 LDR X21, [X21 + 0x118]
	0x03CDC19C MOV X0, X19
	0x03CDC1A0 MOV X1, X31
	0x03CDC1A4 BL 0x3E4BDBC
	0x03CDC1A8 MOV X0, X19
	0x03CDC1AC BL 0x3CDB9B4
	0x03CDC1B0 MOV X0, X19
	0x03CDC1B4 BL 0x3CDADE8
	0x03CDC1B8 LDR X8, [X20]
	0x03CDC1BC MOV X20, X0
	0x03CDC1C0 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x70D000
	007 Move X21, 0x419000
	008 Move W8, [X22+1216]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x487000
	017 Move X0, [X0+1056]
	018 Call 0x1C17CF4
	019 Move X0, 0x487000
	020 Move X0, [X0+1032]
	021 Call 0x1C17CF4
	022 Move X0, 0x46E000
	023 Move X0, [X0+1408]
	024 Call 0x1C17CF4
	025 Move X0, 0x487000
	026 Move X0, [X0+1064]
	027 Call 0x1C17CF4
	028 Move X0, 0x487000
	029 Move X0, [X0+1072]
	030 Call 0x1C17CF4
	031 Move X0, 0x487000
	032 Move X0, [X0+1080]
	033 Call 0x1C17CF4
	034 Move X0, 0x487000
	035 Move X0, [X0+1088]
	036 Call 0x1C17CF4
	037 Move X0, 0x418000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1216], W8
	042 Move X0, [X21]
	043 Move [X31+8], X31
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {143}
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {143}
	069 Compare X20, 0
	070 JumpIfEqual {149}
	071 Move X8, [X20]
	072 Move X0, X20
	073 Move X9, [X8+696]
	074 Move X1, [X8+704]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {143}
	080 Move X22, 0x46E000
	081 Move X22, [X22+1408]
	082 Move X0, [X22]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Call GraphicRegistry.get_instance
	088 Compare X0, 0
	089 JumpIfEqual {149}
	090 Move X0, [X0+24]
	091 Compare X0, 0
	092 JumpIfEqual {149}
	093 Move X8, 0x487000
	094 Move X8, [X8+1032]
	095 Add X2, X31, 8
	096 Move X1, X19
	097 Move X3, [X8]
	098 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	099 Move X0, [X31+8]
	100 Compare X0, 0
	101 JumpIfEqual {108}
	102 Move X8, 0x487000
	103 Move X8, [X8+1064]
	104 Move W2, 1
	105 Move X1, X20
	106 Move X3, [X8]
	107 Call 0x2DE376C, X0, X1, X2
	108 Move X8, 0x487000
	109 Move X8, [X8+1088]
	110 Move X0, [X8]
	111 Call 0x1C17F10
	112 Move X8, 0x487000
	113 Move X8, [X8+1080]
	114 Move X21, X0
	115 Move X1, [X8]
	116 Call 0x2DE3F98, X0
	117 Move [X31+8], X21
	118 Compare X21, 0
	119 JumpIfEqual {149}
	120 Move X8, 0x487000
	121 Move X8, [X8+1072]
	122 Move X0, X21
	123 Move X1, X20
	124 Move X2, [X8]
	125 Call 0x2DE3674, X0, X1
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Call GraphicRegistry.get_instance
	132 Compare X0, 0
	133 JumpIfEqual {149}
	134 Move X0, [X0+24]
	135 Compare X0, 0
	136 JumpIfEqual {149}
	137 Move X8, 0x487000
	138 Move X2, [X31+8]
	139 Move X8, [X8+1056]
	140 Move X1, X19
	141 Move X3, [X8]
	142 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	143 Move X20, [X31+32]
	144 Move X19, [X31+40]
	145 Move X22, [X31+16]
	146 Move X21, [X31+24]
	147 Move X30, [X31+48]
	148 Return 
	149 Call 0x1C17F20

Method: System.Void UnregisterGraphicForCanvas(UnityEngine.Canvas c, UnityEngine.UI.Graphic graphic)

Disassembly:
	0x03CDC75C LDP X22, X21, [X31 + 0x10]
	0x03CDC760 LDR X30, [X31], #0x30
	0x03CDC764 B 0x3CDB75C
	0x03CDC768 LDP X20, X19, [X31 + 0x20]
	0x03CDC76C LDP X22, X21, [X31 + 0x10]
	0x03CDC770 LDR X30, [X31], #0x30
	0x03CDC774 RET
	0x03CDC778 STR X30, [X31 - 0x20]!
	0x03CDC77C STP X20, X19, [X31 + 0x10]
	0x03CDC780 ADRP X20, 0x70B000
	0x03CDC784 LDRB W8, [X20 + 0x4A4]
	0x03CDC788 MOV X19, X0
	0x03CDC78C TBNZ X8, 0x0, 0x3CDC7A4
	0x03CDC790 ADRP X0, 0x47C000
	0x03CDC794 LDR X0, [X0 + 0x718]
	0x03CDC798 BL 0x1C16CF4
	0x03CDC79C MOVZ W8, 0x1
	0x03CDC7A0 STRB W8, [X20 + 0x4A4]
	0x03CDC7A4 MOV X0, X19
	0x03CDC7A8 BL 0x3CDBD2C
	0x03CDC7AC CBZ X0, 0x3CDC800
	0x03CDC7B0 MOV X1, X31
	0x03CDC7B4 BL 0x3E22628
	0x03CDC7B8 TBZ X0, 0x0, 0x3CDC7C8
	0x03CDC7BC LDP X20, X19, [X31 + 0x10]
	0x03CDC7C0 LDR X30, [X31], #0x20
	0x03CDC7C4 RET
	0x03CDC7C8 LDRB W8, [X19 + 0x68]
	0x03CDC7CC CBNZ W8, 0x3CDC7D8
	0x03CDC7D0 LDRB W8, [X19 + 0x69]
	0x03CDC7D4 CBZ W8, 0x3CDC7BC
	0x03CDC7D8 ADRP X8, 0x47C000
	0x03CDC7DC LDR X8, [X8 + 0x718]
	0x03CDC7E0 LDR X0, [X8]
	0x03CDC7E4 LDR W8, [X0 + 0xE0]
	0x03CDC7E8 CBNZ W8, 0x3CDC7F0
	0x03CDC7EC BL 0x1C16DFC
	0x03CDC7F0 MOV X0, X19
	0x03CDC7F4 LDP X20, X19, [X31 + 0x10]
	0x03CDC7F8 LDR X30, [X31], #0x20
	0x03CDC7FC B 0x3CD16F4
	0x03CDC800 BL 0x1C16F20
	0x03CDC804 STR X30, [X31 - 0x30]!
	0x03CDC808 STP X22, X21, [X31 + 0x10]
	0x03CDC80C STP X20, X19, [X31 + 0x20]
	0x03CDC810 ADRP X22, 0x70B000
	0x03CDC814 ADRP X21, 0x417000
	0x03CDC818 LDRB W8, [X22 + 0x4A5]
	0x03CDC81C LDR X21, [X21 + 0x598]
	0x03CDC820 MOV W20, W1
	0x03CDC824 MOV X19, X0
	0x03CDC828 TBNZ X8, 0x0, 0x3CDC840
	0x03CDC82C ADRP X0, 0x417000
	0x03CDC830 LDR X0, [X0 + 0x598]
	0x03CDC834 BL 0x1C16CF4
	0x03CDC838 MOVZ W8, 0x1
	0x03CDC83C STRB W8, [X22 + 0x4A5]
	0x03CDC840 MOV X0, X19
	0x03CDC844 BL 0x3CDBD2C
	0x03CDC848 LDR X8, [X21]
	0x03CDC84C MOV X21, X0
	0x03CDC850 LDR W9, [X8 + 0xE0]
	0x03CDC854 CBNZ W9, 0x3CDC860
	0x03CDC858 MOV X0, X8
	0x03CDC85C BL 0x1C16DFC
	0x03CDC860 MOV X0, X21
	0x03CDC864 MOV X1, X31
	0x03CDC868 MOV X2, X31
	0x03CDC86C BL 0x3C3883C
	0x03CDC870 TBNZ X0, 0x0, 0x3CDC8D4
	0x03CDC874 MOV X0, X19
	0x03CDC878 BL 0x3CDBD2C
	0x03CDC87C CBZ X0, 0x3CDC8E4
	0x03CDC880 MOV X1, X31
	0x03CDC884 BL 0x3E22628
	0x03CDC888 CMP W20, 0x3
	0x03CDC88C B.NE 0x3CDC8D4
	0x03CDC890 TBNZ X0, 0x0, 0x3CDC8D4
	0x03CDC894 LDRB W8, [X19 + 0x68]
	0x03CDC898 CBZ W8, 0x3CDC8B4
	0x03CDC89C LDR X8, [X19]
	0x03CDC8A0 MOV X0, X19
	0x03CDC8A4 LDR X9, [X8 + 0x3C8]
	0x03CDC8A8 LDR X1, [X8 + 0x3D0]
	0x03CDC8AC BLR X9
	0x03CDC8B0 STRB W31, [X19 + 0x68]
	0x03CDC8B4 LDRB W8, [X19 + 0x69]
	0x03CDC8B8 CBZ W8, 0x3CDC8D4
	0x03CDC8BC LDR X8, [X19]
	0x03CDC8C0 MOV X0, X19
	0x03CDC8C4 LDR X9, [X8 + 0x3B8]
	0x03CDC8C8 LDR X1, [X8 + 0x3C0]
	0x03CDC8CC BLR X9
	0x03CDC8D0 STRB W31, [X19 + 0x69]
	0x03CDC8D4 LDP X20, X19, [X31 + 0x20]
	0x03CDC8D8 LDP X22, X21, [X31 + 0x10]
	0x03CDC8DC LDR X30, [X31], #0x30
	0x03CDC8E0 RET
	0x03CDC8E4 BL 0x1C16F20
	0x03CDC8E8 RET
	0x03CDC8EC RET
	0x03CDC8F0 STR X30, [X31 - 0x20]!
	0x03CDC8F4 STP X20, X19, [X31 + 0x10]
	0x03CDC8F8 LDR X8, [X0]
	0x03CDC8FC MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x70C000
	007 Move X21, 0x418000
	008 Move W8, [X22+1217]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x487000
	017 Move X0, [X0+1024]
	018 Call 0x1C17CF4
	019 Move X0, 0x487000
	020 Move X0, [X0+1032]
	021 Call 0x1C17CF4
	022 Move X0, 0x46E000
	023 Move X0, [X0+1408]
	024 Call 0x1C17CF4
	025 Move X0, 0x487000
	026 Move X0, [X0+1040]
	027 Call 0x1C17CF4
	028 Move X0, 0x487000
	029 Move X0, [X0+1120]
	030 Call 0x1C17CF4
	031 Move X0, 0x418000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1217], W8
	036 Move X0, [X21]
	037 Move [X31+8], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {127}
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {127}
	063 Move X21, 0x46E000
	064 Move X21, [X21+1408]
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Call GraphicRegistry.get_instance
	071 Compare X0, 0
	072 JumpIfEqual {133}
	073 Move X0, [X0+16]
	074 Compare X0, 0
	075 JumpIfEqual {133}
	076 Move X8, 0x487000
	077 Move X8, [X8+1032]
	078 Add X2, X31, 8
	079 Move X1, X20
	080 Move X3, [X8]
	081 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {127}
	086 Move X0, [X31+8]
	087 Compare X0, 0
	088 JumpIfEqual {133}
	089 Move X8, 0x487000
	090 Move X8, [X8+1040]
	091 Move X1, X19
	092 Move X2, [X8]
	093 Call 0x2DE391C, X0, X1
	094 Move X0, [X31+8]
	095 Compare X0, 0
	096 JumpIfEqual {133}
	097 Move X8, 0x487000
	098 Move X8, [X8+1120]
	099 Move X1, [X8]
	100 Call 0x2DE3A8C, X0
	101 Compare W0, 0
	102 JumpIfNotEqual {119}
	103 Move X0, [X21]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Call GraphicRegistry.get_instance
	109 Compare X0, 0
	110 JumpIfEqual {133}
	111 Move X0, [X0+16]
	112 Compare X0, 0
	113 JumpIfEqual {133}
	114 Move X8, 0x487000
	115 Move X8, [X8+1024]
	116 Move X1, X20
	117 Move X2, [X8]
	118 Call Dictionary`2<Object, Object>.Remove, X0, X1
	119 Move X0, [X21]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X20
	125 Move X1, X19
	126 Call GraphicRegistry.UnregisterRaycastGraphicForCanvas, X0, X1
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 Move X30, [X31+48]
	132 Return 
	133 Call 0x1C17F20

Method: System.Void UnregisterRaycastGraphicForCanvas(UnityEngine.Canvas c, UnityEngine.UI.Graphic graphic)

Disassembly:
	0x03CDBE5C BL 0x3C354F8
	0x03CDBE60 TBZ X0, 0x0, 0x3CDBE74
	0x03CDBE64 LDR X0, [X19 + 0x20]
	0x03CDBE68 LDP X20, X19, [X31 + 0x10]
	0x03CDBE6C LDP X30, X21, [X31], #0x20
	0x03CDBE70 RET
	0x03CDBE74 LDR X8, [X19]
	0x03CDBE78 MOV X0, X19
	0x03CDBE7C LDP X20, X19, [X31 + 0x10]
	0x03CDBE80 LDR X2, [X8 + 0x328]
	0x03CDBE84 LDR X1, [X8 + 0x330]
	0x03CDBE88 LDP X30, X21, [X31], #0x20
	0x03CDBE8C BR X2
	0x03CDBE90 STR X30, [X31 - 0x30]!
	0x03CDBE94 STP X22, X21, [X31 + 0x10]
	0x03CDBE98 STP X20, X19, [X31 + 0x20]
	0x03CDBE9C ADRP X22, 0x70C000
	0x03CDBEA0 ADRP X21, 0x418000
	0x03CDBEA4 LDRB W8, [X22 + 0x49D]
	0x03CDBEA8 LDR X21, [X21 + 0x598]
	0x03CDBEAC MOV X20, X1
	0x03CDBEB0 MOV X19, X0
	0x03CDBEB4 TBNZ X8, 0x0, 0x3CDBECC
	0x03CDBEB8 ADRP X0, 0x418000
	0x03CDBEBC LDR X0, [X0 + 0x598]
	0x03CDBEC0 BL 0x1C16CF4
	0x03CDBEC4 MOVZ W8, 0x1
	0x03CDBEC8 STRB W8, [X22 + 0x49D]
	0x03CDBECC LDR X0, [X21]
	0x03CDBED0 LDR X21, [X19 + 0x20]
	0x03CDBED4 LDR W8, [X0 + 0xE0]
	0x03CDBED8 CBNZ W8, 0x3CDBEE0
	0x03CDBEDC BL 0x1C16DFC
	0x03CDBEE0 MOV X0, X21
	0x03CDBEE4 MOV X1, X20
	0x03CDBEE8 MOV X2, X31
	0x03CDBEEC BL 0x3C3883C
	0x03CDBEF0 TBZ X0, 0x0, 0x3CDBF04
	0x03CDBEF4 LDP X20, X19, [X31 + 0x20]
	0x03CDBEF8 LDP X22, X21, [X31 + 0x10]
	0x03CDBEFC LDR X30, [X31], #0x30
	0x03CDBF00 RET
	0x03CDBF04 LDR X8, [X19]
	0x03CDBF08 STR X20, [X19 + 0x20]
	0x03CDBF0C MOV X0, X19
	0x03CDBF10 LDP X20, X19, [X31 + 0x20]
	0x03CDBF14 LDR X2, [X8 + 0x308]
	0x03CDBF18 LDR X1, [X8 + 0x310]
	0x03CDBF1C LDP X22, X21, [X31 + 0x10]
	0x03CDBF20 LDR X30, [X31], #0x30
	0x03CDBF24 BR X2
	0x03CDBF28 STP X30, X25, [X31 - 0x40]!
	0x03CDBF2C STP X24, X23, [X31 + 0x10]
	0x03CDBF30 STP X22, X21, [X31 + 0x20]
	0x03CDBF34 STP X20, X19, [X31 + 0x30]
	0x03CDBF38 ADRP X19, 0x70C000
	0x03CDBF3C ADRP X23, 0x487000
	0x03CDBF40 LDRB W8, [X19 + 0x49E]
	0x03CDBF44 LDR X23, [X23 + 0x468]
	0x03CDBF48 MOV X20, X0
	0x03CDBF4C TBNZ X8, 0x0, 0x3CDBFAC
	0x03CDBF50 ADRP X0, 0x487000
	0x03CDBF54 LDR X0, [X0 + 0x470]
	0x03CDBF58 BL 0x1C16CF4
	0x03CDBF5C ADRP X0, 0x487000
	0x03CDBF60 LDR X0, [X0 + 0x478]
	0x03CDBF64 BL 0x1C16CF4
	0x03CDBF68 ADRP X0, 0x487000
	0x03CDBF6C LDR X0, [X0 + 0x468]
	0x03CDBF70 BL 0x1C16CF4
	0x03CDBF74 ADRP X0, 0x47E000
	0x03CDBF78 LDR X0, [X0 + 0x708]
	0x03CDBF7C BL 0x1C16CF4
	0x03CDBF80 ADRP X0, 0x47E000
	0x03CDBF84 LDR X0, [X0 + 0x710]
	0x03CDBF88 BL 0x1C16CF4
	0x03CDBF8C ADRP X0, 0x47E000
	0x03CDBF90 LDR X0, [X0 + 0x718]
	0x03CDBF94 BL 0x1C16CF4
	0x03CDBF98 ADRP X0, 0x47E000
	0x03CDBF9C LDR X0, [X0 + 0x720]
	0x03CDBFA0 BL 0x1C16CF4
	0x03CDBFA4 MOVZ W8, 0x1
	0x03CDBFA8 STRB W8, [X19 + 0x49E]
	0x03CDBFAC LDR X0, [X23]
	0x03CDBFB0 ADRP X21, 0x487000
	0x03CDBFB4 ADRP X19, 0x47E000
	0x03CDBFB8 LDR W8, [X0 + 0xE0]
	0x03CDBFBC LDR X21, [X21 + 0x470]
	0x03CDBFC0 LDR X19, [X19 + 0x708]
	0x03CDBFC4 CBNZ W8, 0x3CDBFCC
	0x03CDBFC8 BL 0x1C16DFC
	0x03CDBFCC LDR X0, [X21]
	0x03CDBFD0 BL 0x28F98D4
	0x03CDBFD4 LDR X2, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x70D000
	007 Move X21, 0x419000
	008 Move W8, [X22+1218]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x488000
	017 Move X0, [X0+1024]
	018 Call 0x1C17CF4
	019 Move X0, 0x488000
	020 Move X0, [X0+1032]
	021 Call 0x1C17CF4
	022 Move X0, 0x46F000
	023 Move X0, [X0+1408]
	024 Call 0x1C17CF4
	025 Move X0, 0x488000
	026 Move X0, [X0+1040]
	027 Call 0x1C17CF4
	028 Move X0, 0x488000
	029 Move X0, [X0+1048]
	030 Call 0x1C17CF4
	031 Move X0, 0x419000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1218], W8
	036 Move X0, [X21]
	037 Move [X31+8], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {116}
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {116}
	063 Move X21, 0x46F000
	064 Move X21, [X21+1408]
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Call GraphicRegistry.get_instance
	071 Compare X0, 0
	072 JumpIfEqual {122}
	073 Move X0, [X0+24]
	074 Compare X0, 0
	075 JumpIfEqual {122}
	076 Move X8, 0x488000
	077 Move X8, [X8+1032]
	078 Add X2, X31, 8
	079 Move X1, X19
	080 Move X3, [X8]
	081 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {116}
	086 Move X0, [X31+8]
	087 Compare X0, 0
	088 JumpIfEqual {122}
	089 Move X8, 0x488000
	090 Move X8, [X8+1040]
	091 Move X1, X20
	092 Move X2, [X8]
	093 Call 0x2DE391C, X0, X1
	094 Move X8, [X31+8]
	095 Compare X8, 0
	096 JumpIfEqual {122}
	097 Move W8, [X8+32]
	098 Compare W8, 0
	099 JumpIfNotEqual {116}
	100 Move X0, [X21]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Call GraphicRegistry.get_instance
	106 Compare X0, 0
	107 JumpIfEqual {122}
	108 Move X0, [X0+24]
	109 Compare X0, 0
	110 JumpIfEqual {122}
	111 Move X8, 0x488000
	112 Move X8, [X8+1024]
	113 Move X1, X19
	114 Move X2, [X8]
	115 Call Dictionary`2<Object, Object>.Remove, X0, X1
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Return 
	122 Call 0x1C17F20

Method: System.Void DisableGraphicForCanvas(UnityEngine.Canvas c, UnityEngine.UI.Graphic graphic)

Disassembly:
	0x03CDD3BC MOVZ W2, 0x3
	0x03CDD3C0 MOV W3, W31
	0x03CDD3C4 MOV X4, X31
	0x03CDD3C8 LDP D11, D10, [X31], #0x40
	0x03CDD3CC B 0x3E39B84
	0x03CDD3D0 BL 0x1C16F20
	0x03CDD3D4 STP X30, X21, [X31 - 0x20]!
	0x03CDD3D8 STP X20, X19, [X31 + 0x10]
	0x03CDD3DC ADRP X21, 0x70A000
	0x03CDD3E0 ADRP X20, 0x416000
	0x03CDD3E4 LDRB W8, [X21 + 0x4AC]
	0x03CDD3E8 LDR X20, [X20 + 0x598]
	0x03CDD3EC MOV X19, X0
	0x03CDD3F0 TBNZ X8, 0x0, 0x3CDD414
	0x03CDD3F4 ADRP X0, 0x416000
	0x03CDD3F8 LDR X0, [X0 + 0x598]
	0x03CDD3FC BL 0x1C16CF4
	0x03CDD400 ADRP X0, 0x46C000
	0x03CDD404 LDR X0, [X0 + 0x6B8]
	0x03CDD408 BL 0x1C16CF4
	0x03CDD40C MOVZ W8, 0x1
	0x03CDD410 STRB W8, [X21 + 0x4AC]
	0x03CDD414 MOV X0, X19
	0x03CDD418 BL 0x3CDADE8
	0x03CDD41C LDR X8, [X20]
	0x03CDD420 MOV X20, X0
	0x03CDD424 LDR W9, [X8 + 0xE0]
	0x03CDD428 CBNZ W9, 0x3CDD434
	0x03CDD42C MOV X0, X8
	0x03CDD430 BL 0x1C16DFC
	0x03CDD434 MOV X0, X20
	0x03CDD438 MOV X1, X31
	0x03CDD43C BL 0x3C38948
	0x03CDD440 TBZ X0, 0x0, 0x3CDD4E0
	0x03CDD444 MOV X0, X19
	0x03CDD448 BL 0x3CDADE8
	0x03CDD44C CBZ X0, 0x3CDD4FC
	0x03CDD450 MOV X1, X31
	0x03CDD454 BL 0x3E244BC
	0x03CDD458 CMP W0, 0x2
	0x03CDD45C B.EQ 0x3CDD4E0
	0x03CDD460 MOV X0, X19
	0x03CDD464 BL 0x3CDADE8
	0x03CDD468 CBZ X0, 0x3CDD4FC
	0x03CDD46C MOV X1, X31
	0x03CDD470 BL 0x3E24614
	0x03CDD474 FCMP S0, 0x0
	0x03CDD478 B.EQ 0x3CDD4E0
	0x03CDD47C MOV X0, X19
	0x03CDD480 BL 0x3CDADE8
	0x03CDD484 CBZ X0, 0x3CDD4FC
	0x03CDD488 MOV X1, X31
	0x03CDD48C BL 0x3E247A4
	0x03CDD490 TBZ X0, 0x0, 0x3CDD4E0
	0x03CDD494 MOV X0, X19
	0x03CDD498 BL 0x3CDB488
	0x03CDD49C MOV X20, X0
	0x03CDD4A0 MOV X0, X19
	0x03CDD4A4 BL 0x3CDADE8
	0x03CDD4A8 ADRP X8, 0x46C000
	0x03CDD4AC LDR X8, [X8 + 0x6B8]
	0x03CDD4B0 MOV X19, X0
	0x03CDD4B4 LDR X8, [X8]
	0x03CDD4B8 LDR W9, [X8 + 0xE0]
	0x03CDD4BC CBNZ W9, 0x3CDD4C8
	0x03CDD4C0 MOV X0, X8
	0x03CDD4C4 BL 0x1C16DFC
	0x03CDD4C8 MOV X0, X20
	0x03CDD4CC MOV X1, X19
	0x03CDD4D0 LDP X20, X19, [X31 + 0x10]
	0x03CDD4D4 MOV X2, X31
	0x03CDD4D8 LDP X30, X21, [X31], #0x20
	0x03CDD4DC B 0x3E23144
	0x03CDD4E0 MOV X0, X19
	0x03CDD4E4 BL 0x3CDB488
	0x03CDD4E8 CBZ X0, 0x3CDD4FC
	0x03CDD4EC LDP X20, X19, [X31 + 0x10]
	0x03CDD4F0 MOV X1, X31
	0x03CDD4F4 LDP X30, X21, [X31], #0x20
	0x03CDD4F8 B 0x3C3E51C
	0x03CDD4FC BL 0x1C16F20
	0x03CDD500 LDR X8, [X0]
	0x03CDD504 LDR X2, [X8 + 0x2D8]
	0x03CDD508 LDR X1, [X8 + 0x2E0]
	0x03CDD50C BR X2
	0x03CDD510 RET
	0x03CDD514 STP D9, D8, [X31 - 0x70]!
	0x03CDD518 STP X29, X30, [X31 + 0x10]
	0x03CDD51C STP X28, X27, [X31 + 0x20]
	0x03CDD520 STP X26, X25, [X31 + 0x30]
	0x03CDD524 STP X24, X23, [X31 + 0x40]
	0x03CDD528 STP X22, X21, [X31 + 0x50]
	0x03CDD52C STP X20, X19, [X31 + 0x60]
	0x03CDD530 ADRP X21, 0x70A000
	0x03CDD534 LDRB W8, [X21 + 0x4AA]
	0x03CDD538 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x70B000
	007 Move X21, 0x417000
	008 Move W8, [X22+1219]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x486000
	017 Move X0, [X0+1024]
	018 Call 0x1C17CF4
	019 Move X0, 0x486000
	020 Move X0, [X0+1032]
	021 Call 0x1C17CF4
	022 Move X0, 0x46D000
	023 Move X0, [X0+1408]
	024 Call 0x1C17CF4
	025 Move X0, 0x486000
	026 Move X0, [X0+1152]
	027 Call 0x1C17CF4
	028 Move X0, 0x486000
	029 Move X0, [X0+1120]
	030 Call 0x1C17CF4
	031 Move X0, 0x417000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1219], W8
	036 Move X0, [X21]
	037 Move [X31+8], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {114}
	050 Move X21, 0x46D000
	051 Move X21, [X21+1408]
	052 Move X0, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Call GraphicRegistry.get_instance
	058 Compare X0, 0
	059 JumpIfEqual {120}
	060 Move X0, [X0+16]
	061 Compare X0, 0
	062 JumpIfEqual {120}
	063 Move X8, 0x486000
	064 Move X8, [X8+1032]
	065 Add X2, X31, 8
	066 Move X1, X20
	067 Move X3, [X8]
	068 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {114}
	073 Move X0, [X31+8]
	074 Compare X0, 0
	075 JumpIfEqual {120}
	076 Move X8, 0x486000
	077 Move X8, [X8+1152]
	078 Move X1, X19
	079 Move X2, [X8]
	080 Call 0x2DE3890, X0, X1
	081 Move X0, [X31+8]
	082 Compare X0, 0
	083 JumpIfEqual {120}
	084 Move X8, 0x486000
	085 Move X8, [X8+1120]
	086 Move X1, [X8]
	087 Call 0x2DE3A8C, X0
	088 Compare W0, 0
	089 JumpIfNotEqual {106}
	090 Move X0, [X21]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Call GraphicRegistry.get_instance
	096 Compare X0, 0
	097 JumpIfEqual {120}
	098 Move X0, [X0+16]
	099 Compare X0, 0
	100 JumpIfEqual {120}
	101 Move X8, 0x486000
	102 Move X8, [X8+1024]
	103 Move X1, X20
	104 Move X2, [X8]
	105 Call Dictionary`2<Object, Object>.Remove, X0, X1
	106 Move X0, [X21]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X20
	112 Move X1, X19
	113 Call GraphicRegistry.DisableRaycastGraphicForCanvas, X0, X1
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return 
	120 Call 0x1C17F20

Method: System.Void DisableRaycastGraphicForCanvas(UnityEngine.Canvas c, UnityEngine.UI.Graphic graphic)

Disassembly:
	0x03CE0A44 CBNZ W8, 0x3CE0A4C
	0x03CE0A48 BL 0x1C16DFC
	0x03CE0A4C LDP X20, X19, [X31 + 0x10]
	0x03CE0A50 LDP X30, X21, [X31], #0x20
	0x03CE0A54 B 0x3CE0508
	0x03CE0A58 LDR X8, [X19]
	0x03CE0A5C MOV X0, X19
	0x03CE0A60 LDP X20, X19, [X31 + 0x10]
	0x03CE0A64 LDR X2, [X8 + 0x328]
	0x03CE0A68 LDR X1, [X8 + 0x330]
	0x03CE0A6C LDP X30, X21, [X31], #0x20
	0x03CE0A70 BR X2
	0x03CE0A74 BL 0x1C16F20
	0x03CE0A78 B 0x3CDBE90
	0x03CE0A7C RET
	0x03CE0A80 LDR W8, [X0 + 0xFC]
	0x03CE0A84 TBNZ X8, 0x1F, 0x3CE0AA0
	0x03CE0A88 LDR W9, [X0 + 0xF0]
	0x03CE0A8C CMP W9, 0x1
	0x03CE0A90 B.EQ 0x3CE0A98
	0x03CE0A94 CBNZ W9, 0x3CE0AC4
	0x03CE0A98 CMP W8, 0x2
	0x03CE0A9C B.LT 0x3CE0AA4
	0x03CE0AA0 STR W31, [X0 + 0xFC]
	0x03CE0AA4 LDR V0, [X0 + 0xF4]
	0x03CE0AA8 FMOV S1, 1
	0x03CE0AAC FMIN S1, S0, S1
	0x03CE0AB0 FCMP S0, 0x0
	0x03CE0AB4 FMOV S0, W31
	0x03CE0AB8 FCSEL S0, S1, S0, PL
	0x03CE0ABC STR S0, [X0 + 0xF4]
	0x03CE0AC0 RET
	0x03CE0AC4 CMP W8, 0x4
	0x03CE0AC8 B.GE 0x3CE0AA0
	0x03CE0ACC B 0x3CE0AA4
	0x03CE0AD0 STR D10, [X31 - 0x30]!
	0x03CE0AD4 STP D9, D8, [X31 + 0x10]
	0x03CE0AD8 STP X30, X19, [X31 + 0x20]
	0x03CE0ADC LDP S9, S10, [X1 + 0x8]
	0x03CE0AE0 FDIV S0, S0, S1
	0x03CE0AE4 MOV X19, X1
	0x03CE0AE8 FDIV S1, S9, S10
	0x03CE0AEC FCMP S0, S1
	0x03CE0AF0 B.LE 0x3CE0B24
	0x03CE0AF4 LDR V8, [X19 + 0x4]!
	0x03CE0AF8 FMOV S1, 1
	0x03CE0AFC FDIV S0, S1, S0
	0x03CE0B00 FMUL S9, S0, S9
	0x03CE0B04 STR S9, [X19 + 0x8]
	0x03CE0B08 BL 0x3CDB488
	0x03CE0B0C CBZ X0, 0x3CE0B60
	0x03CE0B10 MOV X1, X31
	0x03CE0B14 BL 0x3C3EA28
	0x03CE0B18 MOV V0.16B, V1.16B
	0x03CE0B1C FSUB S1, S10, S9
	0x03CE0B20 B 0x3CE0B44
	0x03CE0B24 LDR V8, [X19]
	0x03CE0B28 FMUL S10, S0, S10
	0x03CE0B2C STR S10, [X19 + 0x8]
	0x03CE0B30 BL 0x3CDB488
	0x03CE0B34 CBZ X0, 0x3CE0B60
	0x03CE0B38 MOV X1, X31
	0x03CE0B3C BL 0x3C3EA28
	0x03CE0B40 FSUB S1, S9, S10
	0x03CE0B44 FMUL S0, S1, S0
	0x03CE0B48 FADD S0, S8, S0
	0x03CE0B4C STR S0, [X19]
	0x03CE0B50 LDP X30, X19, [X31 + 0x20]
	0x03CE0B54 LDP D9, D8, [X31 + 0x10]
	0x03CE0B58 LDR V10, [X31], #0x30
	0x03CE0B5C RET
	0x03CE0B60 BL 0x1C16F20
	0x03CE0B64 SUB X31, X31, 0x90
	0x03CE0B68 STP D15, D14, [X31 + 0x20]
	0x03CE0B6C STP D13, D12, [X31 + 0x30]
	0x03CE0B70 STP D11, D10, [X31 + 0x40]
	0x03CE0B74 STP D9, D8, [X31 + 0x50]
	0x03CE0B78 STR X30, [X31 + 0x60]
	0x03CE0B7C STP X22, X21, [X31 + 0x70]
	0x03CE0B80 STP X20, X19, [X31 + 0x80]
	0x03CE0B84 ADRP X21, 0x707000
	0x03CE0B88 ADRP X22, 0x413000
	0x03CE0B8C LDRB W8, [X21 + 0x4D9]
	0x03CE0B90 LDR X22, [X22 + 0x598]
	0x03CE0B94 MOV W20, W1
	0x03CE0B98 MOV X19, X0
	0x03CE0B9C TBNZ X8, 0x0, 0x3CE0BB4
	0x03CE0BA0 ADRP X0, 0x413000
	0x03CE0BA4 LDR X0, [X0 + 0x598]
	0x03CE0BA8 BL 0x1C16CF4
	0x03CE0BAC MOVZ W8, 0x1
	0x03CE0BB0 STRB W8, [X21 + 0x4D9]
	0x03CE0BB4 MOV X0, X19
	0x03CE0BB8 STP X31, X31, [X31 + 0x10]
	0x03CE0BBC BL 0x3CDFE9C
	0x03CE0BC0 LDR X8, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x708000
	007 Move X21, 0x414000
	008 Move W8, [X22+1220]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x483000
	017 Move X0, [X0+1024]
	018 Call 0x1C17CF4
	019 Move X0, 0x483000
	020 Move X0, [X0+1032]
	021 Call 0x1C17CF4
	022 Move X0, 0x46A000
	023 Move X0, [X0+1408]
	024 Call 0x1C17CF4
	025 Move X0, 0x483000
	026 Move X0, [X0+1152]
	027 Call 0x1C17CF4
	028 Move X0, 0x483000
	029 Move X0, [X0+1120]
	030 Call 0x1C17CF4
	031 Move X0, 0x414000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1220], W8
	036 Move X0, [X21]
	037 Move [X31+8], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {117}
	050 Compare X20, 0
	051 JumpIfEqual {123}
	052 Move X8, [X20]
	053 Move X0, X20
	054 Move X9, [X8+696]
	055 Move X1, [X8+704]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {117}
	061 Move X21, 0x46A000
	062 Move X21, [X21+1408]
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Call GraphicRegistry.get_instance
	069 Compare X0, 0
	070 JumpIfEqual {123}
	071 Move X0, [X0+24]
	072 Compare X0, 0
	073 JumpIfEqual {123}
	074 Move X8, 0x483000
	075 Move X8, [X8+1032]
	076 Add X2, X31, 8
	077 Move X1, X19
	078 Move X3, [X8]
	079 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {117}
	084 Move X0, [X31+8]
	085 Compare X0, 0
	086 JumpIfEqual {123}
	087 Move X8, 0x483000
	088 Move X8, [X8+1152]
	089 Move X1, X20
	090 Move X2, [X8]
	091 Call 0x2DE3890, X0, X1
	092 Move X0, [X31+8]
	093 Compare X0, 0
	094 JumpIfEqual {123}
	095 Move X8, 0x483000
	096 Move X8, [X8+1120]
	097 Move X1, [X8]
	098 Call 0x2DE3A8C, X0
	099 Compare W0, 0
	100 JumpIfNotEqual {117}
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Call GraphicRegistry.get_instance
	107 Compare X0, 0
	108 JumpIfEqual {123}
	109 Move X0, [X0+24]
	110 Compare X0, 0
	111 JumpIfEqual {123}
	112 Move X8, 0x483000
	113 Move X8, [X8+1024]
	114 Move X1, X19
	115 Move X2, [X8]
	116 Call Dictionary`2<Object, Object>.Remove, X0, X1
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move X30, [X31+48]
	122 Return 
	123 Call 0x1C17F20

Method: System.Collections.Generic.IList`1<UnityEngine.UI.Graphic> GetGraphicsForCanvas(UnityEngine.Canvas canvas)

Disassembly:
	0x03CE0BC4 MOV X21, X0
	0x03CE0BC8 LDR W9, [X8 + 0xE0]
	0x03CE0BCC CBNZ W9, 0x3CE0BD8
	0x03CE0BD0 MOV X0, X8
	0x03CE0BD4 BL 0x1C16DFC
	0x03CE0BD8 MOV X0, X21
	0x03CE0BDC MOV X1, X31
	0x03CE0BE0 MOV X2, X31
	0x03CE0BE4 BL 0x3C3883C
	0x03CE0BE8 TBZ X0, 0x0, 0x3CE0C28
	0x03CE0BEC ADRP X21, 0x6F8000
	0x03CE0BF0 LDRB W8, [X21 + 0xE5A]
	0x03CE0BF4 CBNZ W8, 0x3CE0C0C
	0x03CE0BF8 ADRP X0, 0x41A000
	0x03CE0BFC LDR X0, [X0 + 0x9A0]
	0x03CE0C00 BL 0x1C16CF4
	0x03CE0C04 MOVZ W8, 0x1
	0x03CE0C08 STRB W8, [X21 + 0xE5A]
	0x03CE0C0C ADRP X8, 0x41A000
	0x03CE0C10 LDR X8, [X8 + 0x9A0]
	0x03CE0C14 LDR X8, [X8]
	0x03CE0C18 LDR X8, [X8 + 0xB8]
	0x03CE0C1C LDP S8, S9, [X8]
	0x03CE0C20 LDP S10, S11, [X8 + 0x8]
	0x03CE0C24 B 0x3CE0C48
	0x03CE0C28 MOV X0, X19
	0x03CE0C2C BL 0x3CDFE9C
	0x03CE0C30 MOV X1, X31
	0x03CE0C34 BL 0x3C425D4
	0x03CE0C38 MOV V8.16B, V0.16B
	0x03CE0C3C MOV V9.16B, V1.16B
	0x03CE0C40 MOV V10.16B, V2.16B
	0x03CE0C44 MOV V11.16B, V3.16B
	0x03CE0C48 MOV X0, X19
	0x03CE0C4C BL 0x3CDFE9C
	0x03CE0C50 LDR X8, [X22]
	0x03CE0C54 MOV X21, X0
	0x03CE0C58 LDR W9, [X8 + 0xE0]
	0x03CE0C5C CBNZ W9, 0x3CE0C68
	0x03CE0C60 MOV X0, X8
	0x03CE0C64 BL 0x1C16DFC
	0x03CE0C68 MOV X0, X21
	0x03CE0C6C MOV X1, X31
	0x03CE0C70 MOV X2, X31
	0x03CE0C74 BL 0x3C3883C
	0x03CE0C78 STP S9, S8, [X31 + 0x8]
	0x03CE0C7C STP S11, S10, [X31]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x708000
	007 Move X20, 0x46A000
	008 Move W8, [X21+1221]
	009 Move X20, [X20+1408]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x483000
	016 Move X0, [X0+1032]
	017 Call 0x1C17CF4
	018 Move X0, 0x46A000
	019 Move X0, [X0+1408]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1221], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Call GraphicRegistry.get_instance
	030 Compare X0, 0
	031 JumpIfEqual {61}
	032 Move X0, [X0+16]
	033 Compare X0, 0
	034 JumpIfEqual {61}
	035 Move X8, 0x483000
	036 Move X8, [X8+1032]
	037 Add X2, X31, 8
	038 Move X1, X19
	039 Add X21, X31, 8
	040 Move X3, [X8]
	041 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {54}
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Add X21, X8, 8
	054 Move X0, [X21]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Add X31, X31, 48
	060 Return X0
	061 Call 0x1C17F20

Method: System.Collections.Generic.IList`1<UnityEngine.UI.Graphic> GetRaycastableGraphicsForCanvas(UnityEngine.Canvas canvas)

Disassembly:
	0x03CDFFD8 LDR X0, [X0 + 0x590]
	0x03CDFFDC BL 0x1C16CF4
	0x03CDFFE0 MOVZ W8, 0x1
	0x03CDFFE4 STRB W8, [X22 + 0x4CC]
	0x03CDFFE8 LDR X2, [X21]
	0x03CDFFEC ADD X0, X19, 0xEC
	0x03CDFFF0 AND W1, W20, 0x1
	0x03CDFFF4 BL 0x22541E0
	0x03CDFFF8 TBZ X0, 0x0, 0x3CE001C
	0x03CDFFFC LDR X8, [X19]
	0x03CE0000 MOV X0, X19
	0x03CE0004 LDP X20, X19, [X31 + 0x20]
	0x03CE0008 LDP X22, X21, [X31 + 0x10]
	0x03CE000C LDR X2, [X8 + 0x2F8]
	0x03CE0010 LDR X1, [X8 + 0x300]
	0x03CE0014 LDR X30, [X31], #0x30
	0x03CE0018 BR X2
	0x03CE001C LDP X20, X19, [X31 + 0x20]
	0x03CE0020 LDP X22, X21, [X31 + 0x10]
	0x03CE0024 LDR X30, [X31], #0x30
	0x03CE0028 RET
	0x03CE002C LDRB W0, [X0 + 0xED]
	0x03CE0030 RET
	0x03CE0034 STR X30, [X31 - 0x30]!
	0x03CE0038 STP X22, X21, [X31 + 0x10]
	0x03CE003C STP X20, X19, [X31 + 0x20]
	0x03CE0040 ADRP X22, 0x707000
	0x03CE0044 ADRP X21, 0x482000
	0x03CE0048 LDRB W8, [X22 + 0x4CD]
	0x03CE004C LDR X21, [X21 + 0x590]
	0x03CE0050 MOV W20, W1
	0x03CE0054 MOV X19, X0
	0x03CE0058 TBNZ X8, 0x0, 0x3CE0070
	0x03CE005C ADRP X0, 0x482000
	0x03CE0060 LDR X0, [X0 + 0x590]
	0x03CE0064 BL 0x1C16CF4
	0x03CE0068 MOVZ W8, 0x1
	0x03CE006C STRB W8, [X22 + 0x4CD]
	0x03CE0070 LDR X2, [X21]
	0x03CE0074 ADD X0, X19, 0xED
	0x03CE0078 AND W1, W20, 0x1
	0x03CE007C BL 0x22541E0
	0x03CE0080 TBZ X0, 0x0, 0x3CE00A4
	0x03CE0084 LDR X8, [X19]
	0x03CE0088 MOV X0, X19
	0x03CE008C LDP X20, X19, [X31 + 0x20]
	0x03CE0090 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x709000
	007 Move X20, 0x46B000
	008 Move W8, [X21+1222]
	009 Move X20, [X20+1408]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x484000
	016 Move X0, [X0+1032]
	017 Call 0x1C17CF4
	018 Move X0, 0x46A000
	019 Move X0, [X0+1408]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1222], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Call GraphicRegistry.get_instance
	030 Compare X0, 0
	031 JumpIfEqual {61}
	032 Move X0, [X0+24]
	033 Compare X0, 0
	034 JumpIfEqual {61}
	035 Move X8, 0x483000
	036 Move X8, [X8+1032]
	037 Add X2, X31, 8
	038 Move X1, X19
	039 Add X21, X31, 8
	040 Move X3, [X8]
	041 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {54}
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Add X21, X8, 8
	054 Move X0, [X21]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Add X31, X31, 48
	060 Return X0
	061 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03CE0C80 TBZ X0, 0x0, 0x3CE0CBC
	0x03CE0C84 ADRP X21, 0x6F9000
	0x03CE0C88 LDRB W8, [X21 + 0x78F]
	0x03CE0C8C CBNZ W8, 0x3CE0CA4
	0x03CE0C90 ADRP X0, 0x41B000
	0x03CE0C94 LDR X0, [X0 + 0xF08]
	0x03CE0C98 BL 0x1C16CF4
	0x03CE0C9C MOVZ W8, 0x1
	0x03CE0CA0 STRB W8, [X21 + 0x78F]
	0x03CE0CA4 ADRP X8, 0x41B000
	0x03CE0CA8 LDR X8, [X8 + 0xF08]
	0x03CE0CAC LDR X8, [X8]
	0x03CE0CB0 LDR X8, [X8 + 0xB8]
	0x03CE0CB4 LDP S12, S9, [X8]
	0x03CE0CB8 B 0x3CE0CEC
	0x03CE0CBC MOV X0, X19
	0x03CE0CC0 BL 0x3CDFE9C
	0x03CE0CC4 CBZ X0, 0x3CE0F10
	0x03CE0CC8 MOV X1, X31
	0x03CE0CCC BL 0x3C41858
	0x03CE0CD0 MOV X0, X19
	0x03CE0CD4 MOV V12.16B, V2.16B
	0x03CE0CD8 BL 0x3CDFE9C
	0x03CE0CDC CBZ X0, 0x3CE0F10
	0x03CE0CE0 MOV X1, X31
	0x03CE0CE4 BL 0x3C41858
	0x03CE0CE8 MOV V9.16B, V3.16B
	0x03CE0CEC MOV X0, X19
	0x03CE0CF0 BL 0x3CDD3D4
	0x03CE0CF4 ADRP X21, 0x6F9000
	0x03CE0CF8 LDRB W8, [X21 + 0x5D7]
	0x03CE0CFC MOV V13.16B, V0.16B
	0x03CE0D00 MOV V14.16B, V1.16B
	0x03CE0D04 MOV V8.16B, V2.16B
	0x03CE0D08 MOV V15.16B, V3.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x708000
	007 Move X22, 0x483000
	008 Move X19, 0x483000
	009 Move X20, 0x46A000
	010 Move W8, [X21+1223]
	011 Move X22, [X22+1248]
	012 Move X19, [X19+1256]
	013 Move X20, [X20+1408]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x46A000
	019 Move X0, [X0+1408]
	020 Call 0x1C17CF4
	021 Move X0, 0x483000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move X0, 0x483000
	025 Move X0, [X0+1248]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1223], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8+8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

