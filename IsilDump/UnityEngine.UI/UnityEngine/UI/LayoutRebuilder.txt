Type: UnityEngine.UI.LayoutRebuilder

Method: System.Void Initialize(UnityEngine.RectTransform controller)

Disassembly:
	0x03E34D50 TBNZ X8, 0x0, 0x3E34D98
	0x03E34D54 ADRP X0, 0x324000
	0x03E34D58 LDR X0, [X0 + 0x718]
	0x03E34D5C BL 0x1C16CF4
	0x03E34D60 ADRP X0, 0x2C2000
	0x03E34D64 LDR X0, [X0 + 0x920]
	0x03E34D68 BL 0x1C16CF4
	0x03E34D6C ADRP X0, 0x337000
	0x03E34D70 LDR X0, [X0 + 0x140]
	0x03E34D74 BL 0x1C16CF4
	0x03E34D78 ADRP X0, 0x337000
	0x03E34D7C LDR X0, [X0 + 0x148]
	0x03E34D80 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move [X0+16], X1
	004 Compare X1, 0
	005 JumpIfEqual {17}
	006 Move X8, [X1]
	007 Move X19, X0
	008 Move X0, X1
	009 Move X9, [X8+344]
	010 Move X8, [X8+352]
	011 Move X1, X8
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move [X19+24], W0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03E34D84 ADRP X0, 0x2BF000
	0x03E34D88 LDR X0, [X0 + 0x598]
	0x03E34D8C BL 0x1C16CF4

ISIL:
	001 Move [X0+16], X31
	002 Move [X0+24], W31
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03E34D90 MOVZ W8, 0x1
	0x03E34D94 STRB W8, [X20 + 0x750]
	0x03E34D98 LDR X0, [X21]
	0x03E34D9C LDR W8, [X0 + 0xE0]
	0x03E34DA0 CBNZ W8, 0x3E34DA8
	0x03E34DA4 BL 0x1C16DFC
	0x03E34DA8 MOV X0, X19
	0x03E34DAC MOV X1, X31
	0x03E34DB0 MOV X2, X31
	0x03E34DB4 BL 0x3C3883C
	0x03E34DB8 TBNZ X0, 0x0, 0x3E34E40
	0x03E34DBC ADRP X21, 0x2C2000
	0x03E34DC0 LDR X21, [X21 + 0x920]
	0x03E34DC4 LDR X0, [X21]
	0x03E34DC8 LDR W8, [X0 + 0xE0]
	0x03E34DCC CBNZ W8, 0x3E34DD8
	0x03E34DD0 BL 0x1C16DFC
	0x03E34DD4 LDR X0, [X21]
	0x03E34DD8 LDR X8, [X0 + 0xB8]
	0x03E34DDC LDR X0, [X8]
	0x03E34DE0 CBZ X0, 0x3E34E88
	0x03E34DE4 ADRP X8, 0x337000
	0x03E34DE8 LDR X8, [X8 + 0x140]
	0x03E34DEC LDR X1, [X8]
	0x03E34DF0 BL 0x24932C0
	0x03E34DF4 CBZ X0, 0x3E34E88
	0x03E34DF8 MOV X20, X0
	0x03E34DFC STR X19, [X0 + 0x10]
	0x03E34E00 CBZ X19, 0x3E34E88
	0x03E34E04 LDR X8, [X19]
	0x03E34E08 MOV X0, X19
	0x03E34E0C LDP X9, X1, [X8 + 0x158]
	0x03E34E10 BLR X9
	0x03E34E14 STR W0, [X20 + 0x18]
	0x03E34E18 ADRP X8, 0x324000
	0x03E34E1C LDR X8, [X8 + 0x718]
	0x03E34E20 LDR X0, [X8]
	0x03E34E24 LDR W8, [X0 + 0xE0]
	0x03E34E28 CBNZ W8, 0x3E34E30
	0x03E34E2C BL 0x1C16DFC
	0x03E34E30 MOV X0, X20
	0x03E34E34 MOV X1, X31
	0x03E34E38 BL 0x3CD1694
	0x03E34E3C TBZ X0, 0x0, 0x3E34E4C
	0x03E34E40 LDP X20, X19, [X31 + 0x10]
	0x03E34E44 LDP X30, X21, [X31], #0x20
	0x03E34E48 RET
	0x03E34E4C LDR X0, [X21]
	0x03E34E50 LDR W8, [X0 + 0xE0]
	0x03E34E54 CBNZ W8, 0x3E34E60
	0x03E34E58 BL 0x1C16DFC
	0x03E34E5C LDR X0, [X21]
	0x03E34E60 LDR X8, [X0 + 0xB8]
	0x03E34E64 LDR X0, [X8]
	0x03E34E68 CBZ X0, 0x3E34E88
	0x03E34E6C ADRP X8, 0x337000
	0x03E34E70 LDR X8, [X8 + 0x148]
	0x03E34E74 MOV X1, X20
	0x03E34E78 LDP X20, X19, [X31 + 0x10]
	0x03E34E7C LDR X2, [X8]
	0x03E34E80 LDP X30, X21, [X31], #0x20
	0x03E34E84 B 0x24933E0
	0x03E34E88 BL 0x1C16F20
	0x03E34E8C STP X30, X21, [X31 - 0x20]!
	0x03E34E90 STP X20, X19, [X31 + 0x10]
	0x03E34E94 ADRP X21, 0x5B4000
	0x03E34E98 ADRP X20, 0x2C2000
	0x03E34E9C LDRB W8, [X21 + 0x751]
	0x03E34EA0 LDR X20, [X20 + 0x920]
	0x03E34EA4 MOV X19, X0
	0x03E34EA8 TBNZ X8, 0x0, 0x3E34ECC
	0x03E34EAC ADRP X0, 0x2C2000
	0x03E34EB0 LDR X0, [X0 + 0x920]
	0x03E34EB4 BL 0x1C16CF4
	0x03E34EB8 ADRP X0, 0x337000
	0x03E34EBC LDR X0, [X0 + 0x148]
	0x03E34EC0 BL 0x1C16CF4
	0x03E34EC4 MOVZ W8, 0x1
	0x03E34EC8 STRB W8, [X21 + 0x751]
	0x03E34ECC LDR X0, [X20]
	0x03E34ED0 LDR W8, [X0 + 0xE0]
	0x03E34ED4 CBNZ W8, 0x3E34EE0
	0x03E34ED8 BL 0x1C16DFC
	0x03E34EDC LDR X0, [X20]
	0x03E34EE0 LDR X8, [X0 + 0xB8]
	0x03E34EE4 LDR X0, [X8]
	0x03E34EE8 CBZ X0, 0x3E34F08
	0x03E34EEC ADRP X8, 0x337000
	0x03E34EF0 LDR X8, [X8 + 0x148]
	0x03E34EF4 MOV X1, X19
	0x03E34EF8 LDP X20, X19, [X31 + 0x10]
	0x03E34EFC LDR X2, [X8]
	0x03E34F00 LDP X30, X21, [X31], #0x20
	0x03E34F04 B 0x24933E0
	0x03E34F08 BL 0x1C16F20
	0x03E34F0C RET
	0x03E34F10 LDR W0, [X0 + 0x18]
	0x03E34F14 RET
	0x03E34F18 STR X30, [X31 - 0x20]!
	0x03E34F1C STP X20, X19, [X31 + 0x10]
	0x03E34F20 CBZ X1, 0x3E34F64
	0x03E34F24 LDR X8, [X1]
	0x03E34F28 MOV X19, X0
	0x03E34F2C MOV X0, X1
	0x03E34F30 LDP X9, X8, [X8 + 0x158]
	0x03E34F34 MOV X1, X8
	0x03E34F38 BLR X9
	0x03E34F3C LDR X8, [X19]
	0x03E34F40 MOV W20, W0
	0x03E34F44 MOV X0, X19
	0x03E34F48 LDP X9, X1, [X8 + 0x158]
	0x03E34F4C BLR X9
	0x03E34F50 CMP W20, W0
	0x03E34F54 LDP X20, X19, [X31 + 0x10]
	0x03E34F58 CSET W0, EQ
	0x03E34F5C LDR X30, [X31], #0x20
	0x03E34F60 RET
	0x03E34F64 BL 0x1C16F20
	0x03E34F68 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x5B5000
	015 Move X21, 0x338000
	016 Move W8, [X19+1862]
	017 Move X21, [X21+232]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x338000
	023 Move X0, [X0+240]
	024 Call 0x1C17CF4
	025 Move X0, 0x338000
	026 Move X0, [X0+248]
	027 Call 0x1C17CF4
	028 Move X0, 0x338000
	029 Move X0, [X0+256]
	030 Call 0x1C17CF4
	031 Move X0, 0x2C3000
	032 Move X0, [X0+2336]
	033 Call 0x1C17CF4
	034 Move X0, 0x338000
	035 Move X0, [X0+264]
	036 Call 0x1C17CF4
	037 Move X0, 0x338000
	038 Move X0, [X0+272]
	039 Call 0x1C17CF4
	040 Move X0, 0x32C000
	041 Move X0, [X0+2040]
	042 Call 0x1C17CF4
	043 Move X0, 0x338000
	044 Move X0, [X0+280]
	045 Call 0x1C17CF4
	046 Move X0, 0x338000
	047 Move X0, [X0+288]
	048 Call 0x1C17CF4
	049 Move X0, 0x338000
	050 Move X0, [X0+232]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+1862], W8
	054 Move X29, 0x338000
	055 Move X20, 0x338000
	056 Move X29, [X29+248]
	057 Move X20, [X20+280]
	058 Move X0, [X21]
	059 Move X28, 0x338000
	060 Move X27, 0x338000
	061 Move X26, 0x338000
	062 Move X25, 0x338000
	063 Move X24, 0x2C3000
	064 Move X23, 0x32C000
	065 Move X22, 0x338000
	066 Move X28, [X28+240]
	067 Move X27, [X27+288]
	068 Move X26, [X26+272]
	069 Move W8, [X0+224]
	070 Move X25, [X25+264]
	071 Move X24, [X24+2336]
	072 Move X23, [X23+2040]
	073 Move X22, [X22+256]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X21]
	078 Move X8, [X0+184]
	079 Move X0, [X29]
	080 Move X19, [X8]
	081 Call 0x1C17F10
	082 Move X2, [X20]
	083 Move X1, X19
	084 Move X3, X31
	085 Move X20, X0
	086 Call Func`1<Object>..ctor, X0, X1, X2
	087 Move X8, [X21]
	088 Move X0, [X28]
	089 Move X8, [X8+184]
	090 Move X19, [X8]
	091 Call 0x1C17F10
	092 Move X2, [X27]
	093 Move X1, X19
	094 Move X3, X31
	095 Move X21, X0
	096 Call Action`1<Object>..ctor, X0, X1, X2
	097 Move X0, [X26]
	098 Call 0x1C17F10
	099 Move X8, [X25]
	100 Move W5, 1
	101 Move W6, 10
	102 Move W7, 0x2710
	103 Move X1, X20
	104 Move X2, X31
	105 Move X3, X21
	106 Move X4, X31
	107 Move X19, X0
	108 Move [X31], X8
	109 Call 0x249418C, X0, X1, X2, X3, X4, X5, X6, X7
	110 Move X8, [X24]
	111 Move X8, [X8+184]
	112 Move [X8], X19
	113 Move X0, [X23]
	114 Call 0x1C17F10
	115 Move X2, [X22]
	116 Move X1, X31
	117 Move X3, X31
	118 Move X19, X0
	119 Call ReapplyDrivenProperties..ctor, X0, X1, X2
	120 Move X0, X19
	121 Move X20, [X31+96]
	122 Move X19, [X31+104]
	123 Move X22, [X31+80]
	124 Move X21, [X31+88]
	125 Move X24, [X31+64]
	126 Move X23, [X31+72]
	127 Move X26, [X31+48]
	128 Move X25, [X31+56]
	129 Move X28, [X31+32]
	130 Move X27, [X31+40]
	131 Move X29, [X31+16]
	132 Move X30, [X31+24]
	133 Move X1, X31
	134 Add X31, X31, 112
	135 Call RectTransform.add_reapplyDrivenProperties, X0
	136 Return 

Method: System.Void ReapplyDrivenProperties(UnityEngine.RectTransform driven)

Disassembly:
	0x03E34F6C STP X20, X19, [X31 + 0x10]
	0x03E34F70 ADRP X21, 0x5B4000
	0x03E34F74 ADRP X20, 0x337000
	0x03E34F78 LDRB W8, [X21 + 0x752]
	0x03E34F7C LDR X20, [X20 + 0x190]
	0x03E34F80 MOV X19, X0
	0x03E34F84 TBNZ X8, 0x0, 0x3E34F9C
	0x03E34F88 ADRP X0, 0x337000
	0x03E34F8C LDR X0, [X0 + 0x190]
	0x03E34F90 BL 0x1C16CF4
	0x03E34F94 MOVZ W8, 0x1
	0x03E34F98 STRB W8, [X21 + 0x752]
	0x03E34F9C LDR X0, [X19 + 0x10]
	0x03E34FA0 LDR X19, [X20]
	0x03E34FA4 CBZ X0, 0x3E34FBC
	0x03E34FA8 LDR X8, [X0]
	0x03E34FAC LDP X9, X1, [X8 + 0x168]
	0x03E34FB0 BLR X9
	0x03E34FB4 MOV X1, X0
	0x03E34FB8 B 0x3E34FC0
	0x03E34FBC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5B5000
	006 Move X21, 0x2C3000
	007 Move W8, [X20+1863]
	008 Move X21, [X21+2336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2C3000
	015 Move X0, [X0+2336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1863], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call LayoutRebuilder.MarkLayoutForRebuild, X0
	030 Return 

Method: UnityEngine.Transform get_transform()

Disassembly:
	0x03E34FC0 MOV X0, X19
	0x03E34FC4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean IsDestroyed()

Disassembly:
	0x03E34FC8 MOV X2, X31
	0x03E34FCC LDP X30, X21, [X31], #0x20
	0x03E34FD0 B 0x321B938
	0x03E34FD4 MOV X1, X31
	0x03E34FD8 B 0x33BDD8C
	0x03E34FDC STR X30, [X31 - 0x20]!
	0x03E34FE0 STP X20, X19, [X31 + 0x10]
	0x03E34FE4 ADRP X19, 0x5B4000
	0x03E34FE8 ADRP X20, 0x337000
	0x03E34FEC LDRB W8, [X19 + 0x753]
	0x03E34FF0 LDR X20, [X20 + 0xE8]
	0x03E34FF4 TBNZ X8, 0x0, 0x3E3500C
	0x03E34FF8 ADRP X0, 0x337000
	0x03E34FFC LDR X0, [X0 + 0xE8]
	0x03E35000 BL 0x1C16CF4
	0x03E35004 MOVZ W8, 0x1
	0x03E35008 STRB W8, [X19 + 0x753]
	0x03E3500C LDR X0, [X20]
	0x03E35010 BL 0x1C16F10
	0x03E35014 MOV X1, X31
	0x03E35018 MOV X19, X0
	0x03E3501C BL 0x33BDD8C
	0x03E35020 LDR X8, [X20]
	0x03E35024 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5B5000
	006 Move X20, 0x2C0000
	007 Move W8, [X21+1864]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2C0000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1864], W8
	019 Move X0, [X20]
	020 Move X19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Object.op_Equality, X0, X1
	033 Return X0

Method: System.Void StripDisabledBehavioursFromList(System.Collections.Generic.List`1<UnityEngine.Component> components)

Disassembly:
	0x03E35028 STR X19, [X8]
	0x03E3502C LDP X20, X19, [X31 + 0x10]
	0x03E35030 LDR X30, [X31], #0x20
	0x03E35034 RET
	0x03E35038 MOV X1, X31
	0x03E3503C B 0x33BDD8C
	0x03E35040 STR X30, [X31 - 0x20]!
	0x03E35044 STP X20, X19, [X31 + 0x10]
	0x03E35048 ADRP X19, 0x5B3000
	0x03E3504C ADRP X20, 0x2C1000
	0x03E35050 LDRB W8, [X19 + 0x754]
	0x03E35054 LDR X20, [X20 + 0x920]
	0x03E35058 TBNZ X8, 0x0, 0x3E35070
	0x03E3505C ADRP X0, 0x2C1000
	0x03E35060 LDR X0, [X0 + 0x920]
	0x03E35064 BL 0x1C16CF4
	0x03E35068 MOVZ W8, 0x1
	0x03E3506C STRB W8, [X19 + 0x754]
	0x03E35070 LDR X0, [X20]
	0x03E35074 BL 0x1C16F10
	0x03E35078 MOV X1, X31
	0x03E3507C MOV X19, X0
	0x03E35080 BL 0x33BDD8C
	0x03E35084 MOV X0, X19
	0x03E35088 LDP X20, X19, [X31 + 0x10]
	0x03E3508C LDR X30, [X31], #0x20
	0x03E35090 RET
	0x03E35094 STR X30, [X31 - 0x10]!
	0x03E35098 CBZ X1, 0x3E350AC
	0x03E3509C STR X31, [X1 + 0x10]
	0x03E350A0 STR W31, [X1 + 0x18]
	0x03E350A4 LDR X30, [X31], #0x10
	0x03E350A8 RET
	0x03E350AC BL 0x1C16F20
	0x03E350B0 STR X30, [X31 - 0x20]!
	0x03E350B4 STP X20, X19, [X31 + 0x10]
	0x03E350B8 ADRP X20, 0x5B3000
	0x03E350BC LDRB W8, [X20 + 0x755]
	0x03E350C0 MOV X19, X1
	0x03E350C4 TBNZ X8, 0x0, 0x3E350DC
	0x03E350C8 ADRP X0, 0x2E5000
	0x03E350CC LDR X0, [X0 + 0x6E0]
	0x03E350D0 BL 0x1C16CF4
	0x03E350D4 MOVZ W8, 0x1
	0x03E350D8 STRB W8, [X20 + 0x755]
	0x03E350DC CBZ X19, 0x3E35114
	0x03E350E0 ADRP X8, 0x2E5000
	0x03E350E4 LDR X8, [X8 + 0x6E0]
	0x03E350E8 LDR X9, [X19]
	0x03E350EC LDR X8, [X8]
	0x03E350F0 LDRB W11, [X9 + 0x130]
	0x03E350F4 LDRB W10, [X8 + 0x130]
	0x03E350F8 CMP W11, W10
	0x03E350FC B.CC 0x3E35114
	0x03E35100 LDR X9, [X9 + 0xC8]
	0x03E35104 ADD X9, X9, X10, 0x3, LSL
	0x03E35108 LDUR X9, [X9 - 0x8]
	0x03E3510C CMP X9, X8
	0x03E35110 B.EQ 0x3E35128
	0x03E35114 MOV W8, W31
	0x03E35118 LDP X20, X19, [X31 + 0x10]
	0x03E3511C AND W0, W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5B4000
	007 Move X22, 0x337000
	008 Move W8, [X20+1865]
	009 Move X22, [X22+232]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x337000
	016 Move X0, [X0+296]
	017 Call 0x1C17CF4
	018 Move X0, 0x337000
	019 Move X0, [X0+304]
	020 Call 0x1C17CF4
	021 Move X0, 0x337000
	022 Move X0, [X0+312]
	023 Call 0x1C17CF4
	024 Move X0, 0x337000
	025 Move X0, [X0+232]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1865], W8
	029 Move X0, [X22]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X22]
	035 Move X8, [X0+184]
	036 Move X20, [X8+8]
	037 Compare X20, 0
	038 JumpIfNotEqual {60}
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X22]
	044 Move X9, 0x337000
	045 Move X8, [X0+184]
	046 Move X9, [X9+304]
	047 Move X21, [X8]
	048 Move X0, [X9]
	049 Call 0x1C17F10
	050 Move X8, 0x337000
	051 Move X8, [X8+312]
	052 Move X1, X21
	053 Move X3, X31
	054 Move X20, X0
	055 Move X2, [X8]
	056 Call Predicate`1<Object>..ctor, X0, X1, X2
	057 Move X8, [X22]
	058 Move X8, [X8+184]
	059 Move [X8+8], X20
	060 Compare X19, 0
	061 JumpIfEqual {74}
	062 Move X8, 0x337000
	063 Move X8, [X8+296]
	064 Move X0, X19
	065 Move X1, X20
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X2, [X8]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Call List`1<Object>.RemoveAll, X0, X1
	073 Return 
	074 Call 0x1C17F20

Method: System.Void ForceRebuildLayoutImmediate(UnityEngine.RectTransform layoutRoot)

Disassembly:
	0x03E35120 LDR X30, [X31], #0x20
	0x03E35124 RET
	0x03E35128 MOV X0, X19
	0x03E3512C MOV X1, X31
	0x03E35130 BL 0x3C32454
	0x03E35134 EOR W8, W0, 0x1
	0x03E35138 B 0x3E35118
	0x03E3513C STP X30, X21, [X31 - 0x20]!
	0x03E35140 STP X20, X19, [X31 + 0x10]
	0x03E35144 ADRP X21, 0x5B3000
	0x03E35148 ADRP X20, 0x336000
	0x03E3514C LDRB W8, [X21 + 0x756]
	0x03E35150 LDR X20, [X20 + 0x198]
	0x03E35154 MOV X19, X1
	0x03E35158 TBNZ X8, 0x0, 0x3E35170
	0x03E3515C ADRP X0, 0x336000
	0x03E35160 LDR X0, [X0 + 0x198]
	0x03E35164 BL 0x1C16CF4
	0x03E35168 MOVZ W8, 0x1
	0x03E3516C STRB W8, [X21 + 0x756]
	0x03E35170 LDR X1, [X20]
	0x03E35174 MOV X0, X19
	0x03E35178 BL 0x1C16E00
	0x03E3517C CBZ X0, 0x3E351F4
	0x03E35180 LDR X20, [X20]
	0x03E35184 MOV X0, X19
	0x03E35188 MOV X1, X20
	0x03E3518C BL 0x1C16E00
	0x03E35190 LDR X8, [X0]
	0x03E35194 MOV X19, X0
	0x03E35198 LDRH W9, [X8 + 0x12E]
	0x03E3519C CBZ X9, 0x3E351C0
	0x03E351A0 LDR X10, [X8 + 0xB0]
	0x03E351A4 ADD X10, X10, 0x8
	0x03E351A8 LDUR X11, [X10 - 0x8]
	0x03E351AC CMP X11, X20
	0x03E351B0 B.EQ 0x3E351D4
	0x03E351B4 SUBS X9, X9, 0x1
	0x03E351B8 ADD X10, X10, 0x10
	0x03E351BC B.NE 0x3E351A8
	0x03E351C0 MOV X0, X19
	0x03E351C4 MOV X1, X20
	0x03E351C8 MOV W2, W31
	0x03E351CC BL 0x1C5C788
	0x03E351D0 B 0x3E351E0
	0x03E351D4 LDRSW X9, [X10]
	0x03E351D8 ADD X8, X8, X9, 0x4, LSL
	0x03E351DC ADD X0, X8, 0x138
	0x03E351E0 LDP X2, X1, [X0]
	0x03E351E4 MOV X0, X19
	0x03E351E8 LDP X20, X19, [X31 + 0x10]
	0x03E351EC LDP X30, X21, [X31], #0x20
	0x03E351F0 BR X2
	0x03E351F4 BL 0x1C16F20
	0x03E351F8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5B4000
	006 Move X21, 0x2C2000
	007 Move W8, [X20+1866]
	008 Move X21, [X21+2336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2C2000
	015 Move X0, [X0+2336]
	016 Call 0x1C17CF4
	017 Move X0, 0x337000
	018 Move X0, [X0+320]
	019 Call 0x1C17CF4
	020 Move X0, 0x337000
	021 Move X0, [X0+328]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1866], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, [X8]
	033 Compare X0, 0
	034 JumpIfEqual {69}
	035 Move X8, 0x337000
	036 Move X8, [X8+320]
	037 Move X1, [X8]
	038 Call 0x24942C0, X0
	039 Compare X0, 0
	040 JumpIfEqual {69}
	041 Move X20, X0
	042 Move [X0+16], X19
	043 Compare X19, 0
	044 JumpIfEqual {69}
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+344]
	048 Move X1, [X8+352]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move [X20+24], W0
	051 Move W1, 1
	052 Move X0, X20
	053 Call LayoutRebuilder.Rebuild, X0, X1
	054 Move X8, [X21]
	055 Move X8, [X8+184]
	056 Move X0, [X8]
	057 Compare X0, 0
	058 JumpIfEqual {69}
	059 Move X8, 0x337000
	060 Move X8, [X8+328]
	061 Move X1, X20
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X2, [X8]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Call 0x24943E0, X0, X1
	068 Return 
	069 Call 0x1C17F20

Method: System.Void Rebuild(UnityEngine.UI.CanvasUpdate executing)

Disassembly:
	0x03E351FC STP X20, X19, [X31 + 0x10]
	0x03E35200 ADRP X21, 0x5B3000
	0x03E35204 ADRP X20, 0x336000
	0x03E35208 LDRB W8, [X21 + 0x757]
	0x03E3520C LDR X20, [X20 + 0x1A0]
	0x03E35210 MOV X19, X1
	0x03E35214 TBNZ X8, 0x0, 0x3E3522C
	0x03E35218 ADRP X0, 0x336000
	0x03E3521C LDR X0, [X0 + 0x1A0]
	0x03E35220 BL 0x1C16CF4
	0x03E35224 MOVZ W8, 0x1
	0x03E35228 STRB W8, [X21 + 0x757]
	0x03E3522C LDR X1, [X20]
	0x03E35230 MOV X0, X19
	0x03E35234 BL 0x1C16E00
	0x03E35238 CBZ X0, 0x3E352B0
	0x03E3523C LDR X20, [X20]
	0x03E35240 MOV X0, X19
	0x03E35244 MOV X1, X20
	0x03E35248 BL 0x1C16E00
	0x03E3524C LDR X8, [X0]
	0x03E35250 MOV X19, X0
	0x03E35254 LDRH W9, [X8 + 0x12E]
	0x03E35258 CBZ X9, 0x3E3527C
	0x03E3525C LDR X10, [X8 + 0xB0]
	0x03E35260 ADD X10, X10, 0x8
	0x03E35264 LDUR X11, [X10 - 0x8]
	0x03E35268 CMP X11, X20
	0x03E3526C B.EQ 0x3E35290
	0x03E35270 SUBS X9, X9, 0x1
	0x03E35274 ADD X10, X10, 0x10
	0x03E35278 B.NE 0x3E35264
	0x03E3527C MOV X0, X19
	0x03E35280 MOV X1, X20
	0x03E35284 MOV W2, W31
	0x03E35288 BL 0x1C5C788
	0x03E3528C B 0x3E3529C
	0x03E35290 LDRSW X9, [X10]
	0x03E35294 ADD X8, X8, X9, 0x4, LSL
	0x03E35298 ADD X0, X8, 0x138
	0x03E3529C LDP X2, X1, [X0]
	0x03E352A0 MOV X0, X19
	0x03E352A4 LDP X20, X19, [X31 + 0x10]
	0x03E352A8 LDP X30, X21, [X31], #0x20
	0x03E352AC BR X2
	0x03E352B0 BL 0x1C16F20
	0x03E352B4 STP X30, X21, [X31 - 0x20]!
	0x03E352B8 STP X20, X19, [X31 + 0x10]
	0x03E352BC ADRP X21, 0x5B3000
	0x03E352C0 ADRP X20, 0x336000
	0x03E352C4 LDRB W8, [X21 + 0x758]
	0x03E352C8 LDR X20, [X20 + 0x198]
	0x03E352CC MOV X19, X1
	0x03E352D0 TBNZ X8, 0x0, 0x3E352E8
	0x03E352D4 ADRP X0, 0x336000
	0x03E352D8 LDR X0, [X0 + 0x198]
	0x03E352DC BL 0x1C16CF4
	0x03E352E0 MOVZ W8, 0x1
	0x03E352E4 STRB W8, [X21 + 0x758]
	0x03E352E8 LDR X1, [X20]
	0x03E352EC MOV X0, X19
	0x03E352F0 BL 0x1C16E00
	0x03E352F4 CBZ X0, 0x3E35370
	0x03E352F8 LDR X20, [X20]
	0x03E352FC MOV X0, X19
	0x03E35300 MOV X1, X20
	0x03E35304 BL 0x1C16E00
	0x03E35308 LDR X8, [X0]
	0x03E3530C MOV X19, X0
	0x03E35310 LDRH W9, [X8 + 0x12E]
	0x03E35314 CBZ X9, 0x3E35338
	0x03E35318 LDR X10, [X8 + 0xB0]
	0x03E3531C ADD X10, X10, 0x8
	0x03E35320 LDUR X11, [X10 - 0x8]
	0x03E35324 CMP X11, X20
	0x03E35328 B.EQ 0x3E3534C
	0x03E3532C SUBS X9, X9, 0x1
	0x03E35330 ADD X10, X10, 0x10
	0x03E35334 B.NE 0x3E35320
	0x03E35338 MOVZ W2, 0x1
	0x03E3533C MOV X0, X19
	0x03E35340 MOV X1, X20
	0x03E35344 BL 0x1C5C788
	0x03E35348 B 0x3E3535C
	0x03E3534C LDR W9, [X10]
	0x03E35350 ADD W9, W9, 0x1
	0x03E35354 ADD X8, X8, W9, 0x4, SXTW
	0x03E35358 ADD X0, X8, 0x138
	0x03E3535C LDP X2, X1, [X0]
	0x03E35360 MOV X0, X19
	0x03E35364 LDP X20, X19, [X31 + 0x10]
	0x03E35368 LDP X30, X21, [X31], #0x20
	0x03E3536C BR X2
	0x03E35370 BL 0x1C16F20
	0x03E35374 STP X30, X21, [X31 - 0x20]!
	0x03E35378 STP X20, X19, [X31 + 0x10]
	0x03E3537C ADRP X21, 0x5B3000
	0x03E35380 ADRP X20, 0x336000
	0x03E35384 LDRB W8, [X21 + 0x759]
	0x03E35388 LDR X20, [X20 + 0x1A0]
	0x03E3538C MOV X19, X1
	0x03E35390 TBNZ X8, 0x0, 0x3E353A8
	0x03E35394 ADRP X0, 0x336000
	0x03E35398 LDR X0, [X0 + 0x1A0]
	0x03E3539C BL 0x1C16CF4
	0x03E353A0 MOVZ W8, 0x1
	0x03E353A4 STRB W8, [X21 + 0x759]
	0x03E353A8 LDR X1, [X20]
	0x03E353AC MOV X0, X19
	0x03E353B0 BL 0x1C16E00
	0x03E353B4 CBZ X0, 0x3E35430
	0x03E353B8 LDR X20, [X20]
	0x03E353BC MOV X0, X19
	0x03E353C0 MOV X1, X20
	0x03E353C4 BL 0x1C16E00
	0x03E353C8 LDR X8, [X0]
	0x03E353CC MOV X19, X0
	0x03E353D0 LDRH W9, [X8 + 0x12E]
	0x03E353D4 CBZ X9, 0x3E353F8
	0x03E353D8 LDR X10, [X8 + 0xB0]
	0x03E353DC ADD X10, X10, 0x8
	0x03E353E0 LDUR X11, [X10 - 0x8]
	0x03E353E4 CMP X11, X20
	0x03E353E8 B.EQ 0x3E3540C
	0x03E353EC SUBS X9, X9, 0x1
	0x03E353F0 ADD X10, X10, 0x10
	0x03E353F4 B.NE 0x3E353E0
	0x03E353F8 MOVZ W2, 0x1
	0x03E353FC MOV X0, X19
	0x03E35400 MOV X1, X20
	0x03E35404 BL 0x1C5C788
	0x03E35408 B 0x3E3541C
	0x03E3540C LDR W9, [X10]
	0x03E35410 ADD W9, W9, 0x1
	0x03E35414 ADD X8, X8, W9, 0x4, SXTW
	0x03E35418 ADD X0, X8, 0x138
	0x03E3541C LDP X2, X1, [X0]
	0x03E35420 MOV X0, X19
	0x03E35424 LDP X20, X19, [X31 + 0x10]
	0x03E35428 LDP X30, X21, [X31], #0x20
	0x03E3542C BR X2
	0x03E35430 BL 0x1C16F20
	0x03E35434 STR X30, [X31 - 0x30]!
	0x03E35438 STP X22, X21, [X31 + 0x10]
	0x03E3543C STP X20, X19, [X31 + 0x20]
	0x03E35440 ADRP X20, 0x5B3000
	0x03E35444 ADRP X22, 0x336000
	0x03E35448 LDRB W8, [X20 + 0x75D]
	0x03E3544C LDR X22, [X22 + 0x1A8]
	0x03E35450 MOV X19, X0
	0x03E35454 TBNZ X8, 0x0, 0x3E35484
	0x03E35458 ADRP X0, 0x336000
	0x03E3545C LDR X0, [X0 + 0x1B0]
	0x03E35460 BL 0x1C16CF4
	0x03E35464 ADRP X0, 0x336000
	0x03E35468 LDR X0, [X0 + 0x1B8]
	0x03E3546C BL 0x1C16CF4
	0x03E35470 ADRP X0, 0x336000
	0x03E35474 LDR X0, [X0 + 0x1A8]
	0x03E35478 BL 0x1C16CF4
	0x03E3547C MOVZ W8, 0x1
	0x03E35480 STRB W8, [X20 + 0x75D]
	0x03E35484 LDR X0, [X22]
	0x03E35488 LDR W8, [X0 + 0xE0]
	0x03E3548C CBNZ W8, 0x3E35498
	0x03E35490 BL 0x1C16DFC
	0x03E35494 LDR X0, [X22]
	0x03E35498 LDR X8, [X0 + 0xB8]
	0x03E3549C LDR X20, [X8 + 0x28]
	0x03E354A0 CBNZ X20, 0x3E354F4
	0x03E354A4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5B4000
	008 Move W8, [X21+1867]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x337000
	016 Move X0, [X0+336]
	017 Call 0x1C17CF4
	018 Move X0, 0x337000
	019 Move X0, [X0+344]
	020 Call 0x1C17CF4
	021 Move X0, 0x337000
	022 Move X0, [X0+352]
	023 Call 0x1C17CF4
	024 Move X0, 0x337000
	025 Move X0, [X0+360]
	026 Call 0x1C17CF4
	027 Move X0, 0x337000
	028 Move X0, [X0+232]
	029 Call 0x1C17CF4
	030 Move X0, 0x337000
	031 Move X0, [X0+368]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1867], W8
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X23, 0x337000
	037 Move X23, [X23+232]
	038 Move X20, [X19+16]
	039 Move X0, [X23]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X23]
	045 Move X8, [X0+184]
	046 Move X21, [X8+16]
	047 Compare X21, 0
	048 JumpIfNotEqual {70}
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Move X9, 0x337000
	055 Move X8, [X0+184]
	056 Move X9, [X9+368]
	057 Move X22, [X8]
	058 Move X0, [X9]
	059 Call 0x1C17F10
	060 Move X8, 0x337000
	061 Move X8, [X8+336]
	062 Move X1, X22
	063 Move X3, X31
	064 Move X21, X0
	065 Move X2, [X8]
	066 Call UnityAction`1<Object>..ctor, X0, X1, X2
	067 Move X8, [X23]
	068 Move X8, [X8+184]
	069 Move [X8+16], X21
	070 Move X0, X19
	071 Move X1, X20
	072 Move X2, X21
	073 Call LayoutRebuilder.PerformLayoutCalculation, X0, X1, X2
	074 Move X0, [X23]
	075 Move X20, [X19+16]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X23]
	081 Move X8, [X0+184]
	082 Move X21, [X8+24]
	083 Compare X21, 0
	084 JumpIfNotEqual {106}
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {90}
	088 Call 0x1C17DFC
	089 Move X0, [X23]
	090 Move X9, 0x337000
	091 Move X8, [X0+184]
	092 Move X9, [X9+368]
	093 Move X22, [X8]
	094 Move X0, [X9]
	095 Call 0x1C17F10
	096 Move X8, 0x337000
	097 Move X8, [X8+344]
	098 Move X1, X22
	099 Move X3, X31
	100 Move X21, X0
	101 Move X2, [X8]
	102 Call UnityAction`1<Object>..ctor, X0, X1, X2
	103 Move X8, [X23]
	104 Move X8, [X8+184]
	105 Move [X8+24], X21
	106 Move X0, X19
	107 Move X1, X20
	108 Move X2, X21
	109 Call LayoutRebuilder.PerformLayoutControl, X0, X1, X2
	110 Move X0, [X23]
	111 Move X20, [X19+16]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X23]
	117 Move X8, [X0+184]
	118 Move X21, [X8+32]
	119 Compare X21, 0
	120 JumpIfNotEqual {142}
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X23]
	126 Move X9, 0x337000
	127 Move X8, [X0+184]
	128 Move X9, [X9+368]
	129 Move X22, [X8]
	130 Move X0, [X9]
	131 Call 0x1C17F10
	132 Move X8, 0x337000
	133 Move X8, [X8+352]
	134 Move X1, X22
	135 Move X3, X31
	136 Move X21, X0
	137 Move X2, [X8]
	138 Call UnityAction`1<Object>..ctor, X0, X1, X2
	139 Move X8, [X23]
	140 Move X8, [X8+184]
	141 Move [X8+32], X21
	142 Move X0, X19
	143 Move X1, X20
	144 Move X2, X21
	145 Call LayoutRebuilder.PerformLayoutCalculation, X0, X1, X2
	146 Move X0, [X23]
	147 Move X20, [X19+16]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X23]
	153 Move X8, [X0+184]
	154 Move X21, [X8+40]
	155 Compare X21, 0
	156 JumpIfNotEqual {178}
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X23]
	162 Move X9, 0x337000
	163 Move X8, [X0+184]
	164 Move X9, [X9+368]
	165 Move X22, [X8]
	166 Move X0, [X9]
	167 Call 0x1C17F10
	168 Move X8, 0x337000
	169 Move X8, [X8+360]
	170 Move X1, X22
	171 Move X3, X31
	172 Move X21, X0
	173 Move X2, [X8]
	174 Call UnityAction`1<Object>..ctor, X0, X1, X2
	175 Move X8, [X23]
	176 Move X8, [X8+184]
	177 Move [X8+40], X21
	178 Move X0, X19
	179 Move X1, X20
	180 Move X2, X21
	181 Move X20, [X31+32]
	182 Move X19, [X31+40]
	183 Move X22, [X31+16]
	184 Move X21, [X31+24]
	185 Move X30, [X31+48]
	186 Move X23, [X31+56]
	187 Call LayoutRebuilder.PerformLayoutControl, X0, X1, X2
	188 Return 
	189 Move X20, [X31+32]
	190 Move X19, [X31+40]
	191 Move X22, [X31+16]
	192 Move X21, [X31+24]
	193 Move X30, [X31+48]
	194 Move X23, [X31+56]
	195 Return 

Method: System.Void PerformLayoutControl(UnityEngine.RectTransform rect, UnityEngine.Events.UnityAction`1<UnityEngine.Component> action)

Disassembly:
	0x03E35778 BL 0x3E35B1C
	0x03E3577C FCMP S8, S0
	0x03E35780 FCSEL S0, S8, S0, GT
	0x03E35784 LDP X20, X19, [X31 + 0x30]
	0x03E35788 LDP X22, X21, [X31 + 0x20]
	0x03E3578C LDR X30, [X31 + 0x18]
	0x03E35790 LDR V8, [X31 + 0x10]
	0x03E35794 ADD X31, X31, 0x40
	0x03E35798 RET
	0x03E3579C SUB X31, X31, 0x40
	0x03E357A0 STR D8, [X31 + 0x10]
	0x03E357A4 STR X30, [X31 + 0x18]
	0x03E357A8 STP X22, X21, [X31 + 0x20]
	0x03E357AC STP X20, X19, [X31 + 0x30]
	0x03E357B0 ADRP X20, 0x5B3000
	0x03E357B4 ADRP X22, 0x336000
	0x03E357B8 LDRB W8, [X20 + 0x75B]
	0x03E357BC LDR X22, [X22 + 0x1A8]
	0x03E357C0 MOV X19, X0
	0x03E357C4 TBNZ X8, 0x0, 0x3E35800
	0x03E357C8 ADRP X0, 0x336000
	0x03E357CC LDR X0, [X0 + 0x1B0]
	0x03E357D0 BL 0x1C16CF4
	0x03E357D4 ADRP X0, 0x336000
	0x03E357D8 LDR X0, [X0 + 0x1D8]
	0x03E357DC BL 0x1C16CF4
	0x03E357E0 ADRP X0, 0x336000
	0x03E357E4 LDR X0, [X0 + 0x1E0]
	0x03E357E8 BL 0x1C16CF4
	0x03E357EC ADRP X0, 0x336000
	0x03E357F0 LDR X0, [X0 + 0x1A8]
	0x03E357F4 BL 0x1C16CF4
	0x03E357F8 MOVZ W8, 0x1
	0x03E357FC STRB W8, [X20 + 0x75B]
	0x03E35800 LDR X0, [X22]
	0x03E35804 LDR W8, [X0 + 0xE0]
	0x03E35808 CBNZ W8, 0x3E35814
	0x03E3580C BL 0x1C16DFC
	0x03E35810 LDR X0, [X22]
	0x03E35814 LDR X8, [X0 + 0xB8]
	0x03E35818 LDR X20, [X8 + 0x10]
	0x03E3581C CBNZ X20, 0x3E35870
	0x03E35820 LDR W8, [X0 + 0xE0]
	0x03E35824 CBNZ W8, 0x3E35830
	0x03E35828 BL 0x1C16DFC
	0x03E3582C LDR X0, [X22]
	0x03E35830 ADRP X9, 0x336000
	0x03E35834 LDR X8, [X0 + 0xB8]
	0x03E35838 LDR X9, [X9 + 0x1B0]
	0x03E3583C LDR X21, [X8]
	0x03E35840 LDR X0, [X9]
	0x03E35844 BL 0x1C16F10
	0x03E35848 ADRP X8, 0x336000
	0x03E3584C LDR X8, [X8 + 0x1D8]
	0x03E35850 MOV X1, X21
	0x03E35854 MOV X3, X31
	0x03E35858 MOV X20, X0
	0x03E3585C LDR X2, [X8]
	0x03E35860 BL 0x2D30ADC
	0x03E35864 LDR X8, [X22]
	0x03E35868 LDR X8, [X8 + 0xB8]
	0x03E3586C STR X20, [X8 + 0x10]
	0x03E35870 FMOV S0, W31
	0x03E35874 ADD X2, X31, 0x8
	0x03E35878 MOV X0, X19
	0x03E3587C MOV X1, X20
	0x03E35880 STR X31, [X31 + 0x8]
	0x03E35884 BL 0x3E35B1C
	0x03E35888 LDR X0, [X22]
	0x03E3588C MOV V8.16B, V0.16B
	0x03E35890 LDR W8, [X0 + 0xE0]
	0x03E35894 CBNZ W8, 0x3E358A0
	0x03E35898 BL 0x1C16DFC
	0x03E3589C LDR X0, [X22]
	0x03E358A0 LDR X8, [X0 + 0xB8]
	0x03E358A4 LDR X20, [X8 + 0x18]
	0x03E358A8 CBNZ X20, 0x3E358FC
	0x03E358AC LDR W8, [X0 + 0xE0]
	0x03E358B0 CBNZ W8, 0x3E358BC
	0x03E358B4 BL 0x1C16DFC
	0x03E358B8 LDR X0, [X22]
	0x03E358BC ADRP X9, 0x336000
	0x03E358C0 LDR X8, [X0 + 0xB8]
	0x03E358C4 LDR X9, [X9 + 0x1B0]
	0x03E358C8 LDR X21, [X8]
	0x03E358CC LDR X0, [X9]
	0x03E358D0 BL 0x1C16F10
	0x03E358D4 ADRP X8, 0x336000
	0x03E358D8 LDR X8, [X8 + 0x1E0]
	0x03E358DC MOV X1, X21
	0x03E358E0 MOV X3, X31
	0x03E358E4 MOV X20, X0
	0x03E358E8 LDR X2, [X8]
	0x03E358EC BL 0x2D30ADC
	0x03E358F0 LDR X8, [X22]
	0x03E358F4 LDR X8, [X8 + 0xB8]
	0x03E358F8 STR X20, [X8 + 0x18]
	0x03E358FC FMOV S0, W31
	0x03E35900 ADD X2, X31, 0x8
	0x03E35904 MOV X0, X19
	0x03E35908 MOV X1, X20
	0x03E3590C STR X31, [X31 + 0x8]
	0x03E35910 BL 0x3E35B1C
	0x03E35914 FCMP S8, S0
	0x03E35918 FCSEL S0, S8, S0, GT
	0x03E3591C LDP X20, X19, [X31 + 0x30]
	0x03E35920 LDP X22, X21, [X31 + 0x20]
	0x03E35924 LDR X30, [X31 + 0x18]
	0x03E35928 LDR V8, [X31 + 0x10]
	0x03E3592C ADD X31, X31, 0x40
	0x03E35930 RET
	0x03E35934 STR X30, [X31 - 0x30]!
	0x03E35938 STP X22, X21, [X31 + 0x10]
	0x03E3593C STP X20, X19, [X31 + 0x20]
	0x03E35940 ADRP X20, 0x5B3000
	0x03E35944 ADRP X22, 0x336000
	0x03E35948 LDRB W8, [X20 + 0x75F]
	0x03E3594C LDR X22, [X22 + 0x1A8]
	0x03E35950 MOV X19, X0
	0x03E35954 TBNZ X8, 0x0, 0x3E35984
	0x03E35958 ADRP X0, 0x336000
	0x03E3595C LDR X0, [X0 + 0x1B0]
	0x03E35960 BL 0x1C16CF4
	0x03E35964 ADRP X0, 0x336000
	0x03E35968 LDR X0, [X0 + 0x1E8]
	0x03E3596C BL 0x1C16CF4
	0x03E35970 ADRP X0, 0x336000
	0x03E35974 LDR X0, [X0 + 0x1A8]
	0x03E35978 BL 0x1C16CF4
	0x03E3597C MOVZ W8, 0x1
	0x03E35980 STRB W8, [X20 + 0x75F]
	0x03E35984 LDR X0, [X22]
	0x03E35988 LDR W8, [X0 + 0xE0]
	0x03E3598C CBNZ W8, 0x3E35998
	0x03E35990 BL 0x1C16DFC
	0x03E35994 LDR X0, [X22]
	0x03E35998 LDR X8, [X0 + 0xB8]
	0x03E3599C LDR X20, [X8 + 0x40]
	0x03E359A0 CBNZ X20, 0x3E359F4
	0x03E359A4 LDR W8, [X0 + 0xE0]
	0x03E359A8 CBNZ W8, 0x3E359B4
	0x03E359AC BL 0x1C16DFC
	0x03E359B0 LDR X0, [X22]
	0x03E359B4 ADRP X9, 0x336000
	0x03E359B8 LDR X8, [X0 + 0xB8]
	0x03E359BC LDR X9, [X9 + 0x1B0]
	0x03E359C0 LDR X21, [X8]
	0x03E359C4 LDR X0, [X9]
	0x03E359C8 BL 0x1C16F10
	0x03E359CC ADRP X8, 0x336000
	0x03E359D0 LDR X8, [X8 + 0x1E8]
	0x03E359D4 MOV X1, X21
	0x03E359D8 MOV X3, X31
	0x03E359DC MOV X20, X0
	0x03E359E0 LDR X2, [X8]
	0x03E359E4 BL 0x2D30ADC
	0x03E359E8 LDR X8, [X22]
	0x03E359EC LDR X8, [X8 + 0xB8]
	0x03E359F0 STR X20, [X8 + 0x40]
	0x03E359F4 FMOV S0, W31
	0x03E359F8 ADD X2, X31, 0x8
	0x03E359FC MOV X0, X19
	0x03E35A00 MOV X1, X20
	0x03E35A04 STR X31, [X31 + 0x8]
	0x03E35A08 BL 0x3E35B1C
	0x03E35A0C LDP X20, X19, [X31 + 0x20]
	0x03E35A10 LDP X22, X21, [X31 + 0x10]
	0x03E35A14 LDR X30, [X31], #0x30
	0x03E35A18 RET
	0x03E35A1C STR X30, [X31 - 0x30]!
	0x03E35A20 STP X22, X21, [X31 + 0x10]
	0x03E35A24 STP X20, X19, [X31 + 0x20]
	0x03E35A28 ADRP X20, 0x5B3000
	0x03E35A2C ADRP X22, 0x336000
	0x03E35A30 LDRB W8, [X20 + 0x75C]
	0x03E35A34 LDR X22, [X22 + 0x1A8]
	0x03E35A38 MOV X19, X0
	0x03E35A3C TBNZ X8, 0x0, 0x3E35A6C
	0x03E35A40 ADRP X0, 0x336000
	0x03E35A44 LDR X0, [X0 + 0x1B0]
	0x03E35A48 BL 0x1C16CF4
	0x03E35A4C ADRP X0, 0x336000
	0x03E35A50 LDR X0, [X0 + 0x1F0]
	0x03E35A54 BL 0x1C16CF4
	0x03E35A58 ADRP X0, 0x336000
	0x03E35A5C LDR X0, [X0 + 0x1A8]
	0x03E35A60 BL 0x1C16CF4
	0x03E35A64 MOVZ W8, 0x1
	0x03E35A68 STRB W8, [X20 + 0x75C]
	0x03E35A6C LDR X0, [X22]
	0x03E35A70 LDR W8, [X0 + 0xE0]
	0x03E35A74 CBNZ W8, 0x3E35A80
	0x03E35A78 BL 0x1C16DFC
	0x03E35A7C LDR X0, [X22]
	0x03E35A80 LDR X8, [X0 + 0xB8]
	0x03E35A84 LDR X20, [X8 + 0x20]
	0x03E35A88 CBNZ X20, 0x3E35ADC
	0x03E35A8C LDR W8, [X0 + 0xE0]
	0x03E35A90 CBNZ W8, 0x3E35A9C
	0x03E35A94 BL 0x1C16DFC
	0x03E35A98 LDR X0, [X22]
	0x03E35A9C ADRP X9, 0x336000
	0x03E35AA0 LDR X8, [X0 + 0xB8]
	0x03E35AA4 LDR X9, [X9 + 0x1B0]
	0x03E35AA8 LDR X21, [X8]
	0x03E35AAC LDR X0, [X9]
	0x03E35AB0 BL 0x1C16F10
	0x03E35AB4 ADRP X8, 0x336000
	0x03E35AB8 LDR X8, [X8 + 0x1F0]
	0x03E35ABC MOV X1, X21
	0x03E35AC0 MOV X3, X31
	0x03E35AC4 MOV X20, X0
	0x03E35AC8 LDR X2, [X8]
	0x03E35ACC BL 0x2D30ADC
	0x03E35AD0 LDR X8, [X22]
	0x03E35AD4 LDR X8, [X8 + 0xB8]
	0x03E35AD8 STR X20, [X8 + 0x20]
	0x03E35ADC FMOV S0, W31
	0x03E35AE0 ADD X2, X31, 0x8
	0x03E35AE4 MOV X0, X19
	0x03E35AE8 MOV X1, X20
	0x03E35AEC STR X31, [X31 + 0x8]
	0x03E35AF0 BL 0x3E35B1C
	0x03E35AF4 LDP X20, X19, [X31 + 0x20]
	0x03E35AF8 LDP X22, X21, [X31 + 0x10]
	0x03E35AFC LDR X30, [X31], #0x30
	0x03E35B00 RET
	0x03E35B04 STR X30, [X31 - 0x10]!
	0x03E35B08 ADD X2, X31, 0x8
	0x03E35B0C STR X31, [X31 + 0x8]
	0x03E35B10 BL 0x3E35B1C
	0x03E35B14 LDR X30, [X31], #0x10
	0x03E35B18 RET
	0x03E35B1C STP D9, D8, [X31 - 0x70]!
	0x03E35B20 STP X29, X30, [X31 + 0x10]
	0x03E35B24 STP X28, X27, [X31 + 0x20]
	0x03E35B28 STP X26, X25, [X31 + 0x30]
	0x03E35B2C STP X24, X23, [X31 + 0x40]
	0x03E35B30 STP X22, X21, [X31 + 0x50]
	0x03E35B34 STP X20, X19, [X31 + 0x60]
	0x03E35B38 ADRP X23, 0x5B3000
	0x03E35B3C ADRP X21, 0x2BE000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x5B4000
	014 Move X25, 0x2BF000
	015 Move W8, [X22+1868]
	016 Move X25, [X25+1432]
	017 Move X19, X2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {62}
	024 Move X0, 0x2E7000
	025 Move X0, [X0+2584]
	026 Call 0x1C17CF4
	027 Move X0, 0x2E7000
	028 Move X0, [X0+2592]
	029 Call 0x1C17CF4
	030 Move X0, 0x2E7000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x337000
	034 Move X0, [X0+384]
	035 Call 0x1C17CF4
	036 Move X0, 0x337000
	037 Move X0, [X0+392]
	038 Call 0x1C17CF4
	039 Move X0, 0x2C2000
	040 Move X0, [X0+2336]
	041 Call 0x1C17CF4
	042 Move X0, 0x2E7000
	043 Move X0, [X0+2624]
	044 Call 0x1C17CF4
	045 Move X0, 0x2E7000
	046 Move X0, [X0+2632]
	047 Call 0x1C17CF4
	048 Move X0, 0x2BF000
	049 Move X0, [X0+1432]
	050 Call 0x1C17CF4
	051 Move X0, 0x2E6000
	052 Move X0, [X0+3184]
	053 Call 0x1C17CF4
	054 Move X0, 0x325000
	055 Move X0, [X0+288]
	056 Call 0x1C17CF4
	057 Move X0, 0x2BF000
	058 Move X0, [X0+1728]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+1868], W8
	062 Move X0, [X25]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {88}
	075 Move X20, [X31+80]
	076 Move X19, [X31+88]
	077 Move X22, [X31+64]
	078 Move X21, [X31+72]
	079 Move X24, [X31+48]
	080 Move X23, [X31+56]
	081 Move X26, [X31+32]
	082 Move X25, [X31+40]
	083 Move X28, [X31+16]
	084 Move X27, [X31+24]
	085 Move X29, [X31+96]
	086 Move X30, [X31+104]
	087 Return 
	088 Move X26, 0x2E7000
	089 Move X26, [X26+2600]
	090 Move X0, [X26]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X8, 0x2E7000
	096 Move X8, [X8+2584]
	097 Move X0, [X8]
	098 Call CollectionPool`2<Object, Object>.Get
	099 Move X8, 0x2BF000
	100 Move X8, [X8+1728]
	101 Move X9, 0x337000
	102 Move X22, X0
	103 Move X8, [X8]
	104 Move X9, [X9+384]
	105 Move W10, [X8+224]
	106 Move X23, [X9]
	107 Compare W10, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X8
	110 Call 0x1C17DFC
	111 Move X0, X23
	112 Move X1, X31
	113 Call Type.GetTypeFromHandle, X0
	114 Compare X20, 0
	115 JumpIfEqual {279}
	116 Move X1, X0
	117 Move X0, X20
	118 Move X2, X22
	119 Move X3, X31
	120 Call Component.GetComponents, X0, X1, X2
	121 Move X8, 0x2C2000
	122 Move X8, [X8+2336]
	123 Move X0, [X8]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X22
	129 Call LayoutRebuilder.StripDisabledBehavioursFromList, X0
	130 Compare X22, 0
	131 JumpIfEqual {279}
	132 Move W8, [X22+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X27, 0x2E7000
	135 Move X28, 0x337000
	136 Move X27, [X27+2632]
	137 Move X28, [X28+392]
	138 Move W23, W31
	139 Move X2, [X27]
	140 Move X0, X22
	141 Move W1, W23
	142 Call List`1<Object>.get_Item, X0, X1
	143 Move X1, [X28]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {158}
	147 Move X2, [X27]
	148 Move X0, X22
	149 Move W1, W23
	150 Call List`1<Object>.get_Item, X0, X1
	151 Compare X19, 0
	152 JumpIfEqual {279}
	153 Move X1, X0
	154 Move X8, [X19+24]
	155 Move X0, [X19+64]
	156 Move X2, [X19+40]
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move W8, [X22+24]
	159 Add W23, W23, 1
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X29, 0x325000
	163 Move X29, [X29+288]
	164 Move W23, W31
	165 Move X2, [X27]
	166 Move X0, X22
	167 Move W1, W23
	168 Call List`1<Object>.get_Item, X0, X1
	169 Move X1, [X28]
	170 Call 0x1C17E00
	171 Compare X0, 0
	172 JumpIfNotEqual {227}
	173 Move X2, [X27]
	174 Move X0, X22
	175 Move W1, W23
	176 Call List`1<Object>.get_Item, X0, X1
	177 Move X8, [X25]
	178 Move X24, X0
	179 Move W9, [X8+224]
	180 Compare W9, 0
	181 JumpIfNotEqual {184}
	182 Move X0, X8
	183 Call 0x1C17DFC
	184 Move X0, X24
	185 Move X1, X31
	186 Call Object.op_Implicit, X0
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {216}
	191 Compare X24, 0
	192 JumpIfEqual {216}
	193 Move X9, [X24]
	194 Move X8, [X29]
	195 Move W11, [X9+304]
	196 Move W10, [X8+304]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X9, [X9+200]
	199 Add X9, X9, X10
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, [X25]
	203 Move X24, [X24+32]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X0, X24
	209 Move X1, X20
	210 Move X2, X31
	211 Call Object.op_Inequality, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {227}
	216 Move X2, [X27]
	217 Move X0, X22
	218 Move W1, W23
	219 Call List`1<Object>.get_Item, X0, X1
	220 Compare X19, 0
	221 JumpIfEqual {279}
	222 Move X1, X0
	223 Move X8, [X19+24]
	224 Move X0, [X19+64]
	225 Move X2, [X19+40]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move W8, [X22+24]
	228 Add W23, W23, 1
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, X20
	231 Move X1, X31
	232 Call Transform.get_childCount, X0
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X24, 0x2E6000
	235 Move X24, [X24+3184]
	236 Move W23, W31
	237 Move X0, X20
	238 Move W1, W23
	239 Move X2, X31
	240 Call Transform.GetChild, X0, X1
	241 Compare X0, 0
	242 JumpIfEqual {247}
	243 Move X8, [X24]
	244 Move X9, [X0]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 NotImplemented "Instruction CSEL not yet implemented."
	247 Move X1, X31
	248 Move X0, X21
	249 Move X2, X19
	250 Call LayoutRebuilder.PerformLayoutControl, X0, X1, X2
	251 Move X0, X20
	252 Move X1, X31
	253 Add W23, W23, 1
	254 Call Transform.get_childCount, X0
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, [X26]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X8, 0x2E7000
	262 Move X8, [X8+2592]
	263 Move X0, X22
	264 Move X20, [X31+80]
	265 Move X19, [X31+88]
	266 Move X22, [X31+64]
	267 Move X21, [X31+72]
	268 Move X1, [X8]
	269 Move X24, [X31+48]
	270 Move X23, [X31+56]
	271 Move X26, [X31+32]
	272 Move X25, [X31+40]
	273 Move X28, [X31+16]
	274 Move X27, [X31+24]
	275 Move X29, [X31+96]
	276 Move X30, [X31+104]
	277 Call CollectionPool`2<Object, Object>.Release, X0
	278 Return 
	279 Call 0x1C17F20

Method: System.Void PerformLayoutCalculation(UnityEngine.RectTransform rect, UnityEngine.Events.UnityAction`1<UnityEngine.Component> action)

Disassembly:
	0x03E354A8 CBNZ W8, 0x3E354B4
	0x03E354AC BL 0x1C16DFC
	0x03E354B0 LDR X0, [X22]
	0x03E354B4 ADRP X9, 0x336000
	0x03E354B8 LDR X8, [X0 + 0xB8]
	0x03E354BC LDR X9, [X9 + 0x1B0]
	0x03E354C0 LDR X21, [X8]
	0x03E354C4 LDR X0, [X9]
	0x03E354C8 BL 0x1C16F10
	0x03E354CC ADRP X8, 0x336000
	0x03E354D0 LDR X8, [X8 + 0x1B8]
	0x03E354D4 MOV X1, X21
	0x03E354D8 MOV X3, X31
	0x03E354DC MOV X20, X0
	0x03E354E0 LDR X2, [X8]
	0x03E354E4 BL 0x2D30ADC
	0x03E354E8 LDR X8, [X22]
	0x03E354EC LDR X8, [X8 + 0xB8]
	0x03E354F0 STR X20, [X8 + 0x28]
	0x03E354F4 FMOV S0, W31
	0x03E354F8 ADD X2, X31, 0x8
	0x03E354FC MOV X0, X19
	0x03E35500 MOV X1, X20
	0x03E35504 STR X31, [X31 + 0x8]
	0x03E35508 BL 0x3E35B1C
	0x03E3550C LDP X20, X19, [X31 + 0x20]
	0x03E35510 LDP X22, X21, [X31 + 0x10]
	0x03E35514 LDR X30, [X31], #0x30
	0x03E35518 RET
	0x03E3551C STR X30, [X31 - 0x30]!
	0x03E35520 STP X22, X21, [X31 + 0x10]
	0x03E35524 STP X20, X19, [X31 + 0x20]
	0x03E35528 ADRP X20, 0x5B3000
	0x03E3552C ADRP X22, 0x336000
	0x03E35530 LDRB W8, [X20 + 0x75A]
	0x03E35534 LDR X22, [X22 + 0x1A8]
	0x03E35538 MOV X19, X0
	0x03E3553C TBNZ X8, 0x0, 0x3E3556C
	0x03E35540 ADRP X0, 0x336000
	0x03E35544 LDR X0, [X0 + 0x1B0]
	0x03E35548 BL 0x1C16CF4
	0x03E3554C ADRP X0, 0x336000
	0x03E35550 LDR X0, [X0 + 0x1C0]
	0x03E35554 BL 0x1C16CF4
	0x03E35558 ADRP X0, 0x336000
	0x03E3555C LDR X0, [X0 + 0x1A8]
	0x03E35560 BL 0x1C16CF4
	0x03E35564 MOVZ W8, 0x1
	0x03E35568 STRB W8, [X20 + 0x75A]
	0x03E3556C LDR X0, [X22]
	0x03E35570 LDR W8, [X0 + 0xE0]
	0x03E35574 CBNZ W8, 0x3E35580
	0x03E35578 BL 0x1C16DFC
	0x03E3557C LDR X0, [X22]
	0x03E35580 LDR X8, [X0 + 0xB8]
	0x03E35584 LDR X20, [X8 + 0x8]
	0x03E35588 CBNZ X20, 0x3E355DC
	0x03E3558C LDR W8, [X0 + 0xE0]
	0x03E35590 CBNZ W8, 0x3E3559C
	0x03E35594 BL 0x1C16DFC
	0x03E35598 LDR X0, [X22]
	0x03E3559C ADRP X9, 0x336000
	0x03E355A0 LDR X8, [X0 + 0xB8]
	0x03E355A4 LDR X9, [X9 + 0x1B0]
	0x03E355A8 LDR X21, [X8]
	0x03E355AC LDR X0, [X9]
	0x03E355B0 BL 0x1C16F10
	0x03E355B4 ADRP X8, 0x336000
	0x03E355B8 LDR X8, [X8 + 0x1C0]
	0x03E355BC MOV X1, X21
	0x03E355C0 MOV X3, X31
	0x03E355C4 MOV X20, X0
	0x03E355C8 LDR X2, [X8]
	0x03E355CC BL 0x2D30ADC
	0x03E355D0 LDR X8, [X22]
	0x03E355D4 LDR X8, [X8 + 0xB8]
	0x03E355D8 STR X20, [X8 + 0x8]
	0x03E355DC FMOV S0, W31
	0x03E355E0 ADD X2, X31, 0x8
	0x03E355E4 MOV X0, X19
	0x03E355E8 MOV X1, X20
	0x03E355EC STR X31, [X31 + 0x8]
	0x03E355F0 BL 0x3E35B1C
	0x03E355F4 LDP X20, X19, [X31 + 0x20]
	0x03E355F8 LDP X22, X21, [X31 + 0x10]
	0x03E355FC LDR X30, [X31], #0x30
	0x03E35600 RET
	0x03E35604 SUB X31, X31, 0x40
	0x03E35608 STR D8, [X31 + 0x10]
	0x03E3560C STR X30, [X31 + 0x18]
	0x03E35610 STP X22, X21, [X31 + 0x20]
	0x03E35614 STP X20, X19, [X31 + 0x30]
	0x03E35618 ADRP X20, 0x5B3000
	0x03E3561C ADRP X22, 0x336000
	0x03E35620 LDRB W8, [X20 + 0x75E]
	0x03E35624 LDR X22, [X22 + 0x1A8]
	0x03E35628 MOV X19, X0
	0x03E3562C TBNZ X8, 0x0, 0x3E35668
	0x03E35630 ADRP X0, 0x336000
	0x03E35634 LDR X0, [X0 + 0x1B0]
	0x03E35638 BL 0x1C16CF4
	0x03E3563C ADRP X0, 0x336000
	0x03E35640 LDR X0, [X0 + 0x1C8]
	0x03E35644 BL 0x1C16CF4
	0x03E35648 ADRP X0, 0x336000
	0x03E3564C LDR X0, [X0 + 0x1D0]
	0x03E35650 BL 0x1C16CF4
	0x03E35654 ADRP X0, 0x336000
	0x03E35658 LDR X0, [X0 + 0x1A8]
	0x03E3565C BL 0x1C16CF4
	0x03E35660 MOVZ W8, 0x1
	0x03E35664 STRB W8, [X20 + 0x75E]
	0x03E35668 LDR X0, [X22]
	0x03E3566C LDR W8, [X0 + 0xE0]
	0x03E35670 CBNZ W8, 0x3E3567C
	0x03E35674 BL 0x1C16DFC
	0x03E35678 LDR X0, [X22]
	0x03E3567C LDR X8, [X0 + 0xB8]
	0x03E35680 LDR X20, [X8 + 0x30]
	0x03E35684 CBNZ X20, 0x3E356D8
	0x03E35688 LDR W8, [X0 + 0xE0]
	0x03E3568C CBNZ W8, 0x3E35698
	0x03E35690 BL 0x1C16DFC
	0x03E35694 LDR X0, [X22]
	0x03E35698 ADRP X9, 0x336000
	0x03E3569C LDR X8, [X0 + 0xB8]
	0x03E356A0 LDR X9, [X9 + 0x1B0]
	0x03E356A4 LDR X21, [X8]
	0x03E356A8 LDR X0, [X9]
	0x03E356AC BL 0x1C16F10
	0x03E356B0 ADRP X8, 0x336000
	0x03E356B4 LDR X8, [X8 + 0x1C8]
	0x03E356B8 MOV X1, X21
	0x03E356BC MOV X3, X31
	0x03E356C0 MOV X20, X0
	0x03E356C4 LDR X2, [X8]
	0x03E356C8 BL 0x2D30ADC
	0x03E356CC LDR X8, [X22]
	0x03E356D0 LDR X8, [X8 + 0xB8]
	0x03E356D4 STR X20, [X8 + 0x30]
	0x03E356D8 FMOV S0, W31
	0x03E356DC ADD X2, X31, 0x8
	0x03E356E0 MOV X0, X19
	0x03E356E4 MOV X1, X20
	0x03E356E8 STR X31, [X31 + 0x8]
	0x03E356EC BL 0x3E35B1C
	0x03E356F0 LDR X0, [X22]
	0x03E356F4 MOV V8.16B, V0.16B
	0x03E356F8 LDR W8, [X0 + 0xE0]
	0x03E356FC CBNZ W8, 0x3E35708
	0x03E35700 BL 0x1C16DFC
	0x03E35704 LDR X0, [X22]
	0x03E35708 LDR X8, [X0 + 0xB8]
	0x03E3570C LDR X20, [X8 + 0x38]
	0x03E35710 CBNZ X20, 0x3E35764
	0x03E35714 LDR W8, [X0 + 0xE0]
	0x03E35718 CBNZ W8, 0x3E35724
	0x03E3571C BL 0x1C16DFC
	0x03E35720 LDR X0, [X22]
	0x03E35724 ADRP X9, 0x336000
	0x03E35728 LDR X8, [X0 + 0xB8]
	0x03E3572C LDR X9, [X9 + 0x1B0]
	0x03E35730 LDR X21, [X8]
	0x03E35734 LDR X0, [X9]
	0x03E35738 BL 0x1C16F10
	0x03E3573C ADRP X8, 0x336000
	0x03E35740 LDR X8, [X8 + 0x1D0]
	0x03E35744 MOV X1, X21
	0x03E35748 MOV X3, X31
	0x03E3574C MOV X20, X0
	0x03E35750 LDR X2, [X8]
	0x03E35754 BL 0x2D30ADC
	0x03E35758 LDR X8, [X22]
	0x03E3575C LDR X8, [X8 + 0xB8]
	0x03E35760 STR X20, [X8 + 0x38]
	0x03E35764 FMOV S0, W31
	0x03E35768 ADD X2, X31, 0x8
	0x03E3576C MOV X0, X19
	0x03E35770 MOV X1, X20
	0x03E35774 STR X31, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x5B4000
	011 Move X22, 0x2BF000
	012 Move W8, [X23+1869]
	013 Move X22, [X22+1432]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x2E7000
	022 Move X0, [X0+2584]
	023 Call 0x1C17CF4
	024 Move X0, 0x2E7000
	025 Move X0, [X0+2592]
	026 Call 0x1C17CF4
	027 Move X0, 0x2E7000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x337000
	031 Move X0, [X0+376]
	032 Call 0x1C17CF4
	033 Move X0, 0x337000
	034 Move X0, [X0+56]
	035 Call 0x1C17CF4
	036 Move X0, 0x2C2000
	037 Move X0, [X0+2336]
	038 Call 0x1C17CF4
	039 Move X0, 0x2E7000
	040 Move X0, [X0+2624]
	041 Call 0x1C17CF4
	042 Move X0, 0x2E7000
	043 Move X0, [X0+2632]
	044 Call 0x1C17CF4
	045 Move X0, 0x2BF000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0x2E6000
	049 Move X0, [X0+3184]
	050 Call 0x1C17CF4
	051 Move X0, 0x2BF000
	052 Move X0, [X0+1728]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X23+1869], W8
	056 Move X0, [X22]
	057 Move [X31+8], X31
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {191}
	070 Move X24, 0x2E7000
	071 Move X24, [X24+2600]
	072 Move X23, 0x2E7000
	073 Move X22, 0x337000
	074 Move X25, 0x2BF000
	075 Move X0, [X24]
	076 Move W8, [X0+224]
	077 Move X23, [X23+2584]
	078 Move X22, [X22+376]
	079 Move X25, [X25+1728]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, [X23]
	084 Call CollectionPool`2<Object, Object>.Get
	085 Move X8, [X25]
	086 Move X23, [X22]
	087 Move X22, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X0, X23
	094 Move X1, X31
	095 Call Type.GetTypeFromHandle, X0
	096 Compare X20, 0
	097 JumpIfEqual {201}
	098 Move X1, X0
	099 Move X0, X20
	100 Move X2, X22
	101 Move X3, X31
	102 Call Component.GetComponents, X0, X1, X2
	103 Move X8, 0x2C2000
	104 Move X8, [X8+2336]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X22
	111 Call LayoutRebuilder.StripDisabledBehavioursFromList, X0
	112 Compare X22, 0
	113 JumpIfEqual {201}
	114 Move W8, [X22+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, 0x337000
	117 Move X0, [X25]
	118 Move X8, [X8+56]
	119 Move W9, [X0+224]
	120 Move X23, [X8]
	121 Compare W9, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X23
	125 Move X1, X31
	126 Call Type.GetTypeFromHandle, X0
	127 Move X1, X0
	128 Add X2, X31, 8
	129 Move X0, X20
	130 Move X3, X31
	131 Call Component.TryGetComponent, X0, X1, X2
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {181}
	136 Move X0, X20
	137 Move X1, X31
	138 Call Transform.get_childCount, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X25, 0x2E6000
	141 Move X25, [X25+3184]
	142 Move W23, W31
	143 Move X0, X20
	144 Move W1, W23
	145 Move X2, X31
	146 Call Transform.GetChild, X0, X1
	147 Compare X0, 0
	148 JumpIfEqual {153}
	149 Move X8, [X25]
	150 Move X9, [X0]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSEL not yet implemented."
	153 Move X1, X31
	154 Move X0, X21
	155 Move X2, X19
	156 Call LayoutRebuilder.PerformLayoutCalculation, X0, X1, X2
	157 Move X0, X20
	158 Move X1, X31
	159 Add W23, W23, 1
	160 Call Transform.get_childCount, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W8, [X22+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X21, 0x2E7000
	165 Move X21, [X21+2632]
	166 Move W20, W31
	167 Move X2, [X21]
	168 Move X0, X22
	169 Move W1, W20
	170 Call List`1<Object>.get_Item, X0, X1
	171 Compare X19, 0
	172 JumpIfEqual {201}
	173 Move X1, X0
	174 Move X8, [X19+24]
	175 Move X0, [X19+64]
	176 Move X2, [X19+40]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move W8, [X22+24]
	179 Add W20, W20, 1
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, [X24]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X8, 0x2E7000
	187 Move X8, [X8+2592]
	188 Move X0, X22
	189 Move X1, [X8]
	190 Call CollectionPool`2<Object, Object>.Release, X0
	191 Move X20, [X31+64]
	192 Move X19, [X31+72]
	193 Move X22, [X31+48]
	194 Move X21, [X31+56]
	195 Move X24, [X31+32]
	196 Move X23, [X31+40]
	197 Move X30, [X31+16]
	198 Move X25, [X31+24]
	199 Add X31, X31, 80
	200 Return 
	201 Call 0x1C17F20

Method: System.Void MarkLayoutForRebuild(UnityEngine.RectTransform rect)

Disassembly:
	0x03E303D8 B 0x3E30408
	0x03E303DC LDP S0, S1, [X19 + 0x2C]
	0x03E303E0 FDIV S0, S9, S0
	0x03E303E4 FDIV S1, S8, S1
	0x03E303E8 FCMP S0, S1
	0x03E303EC FCSEL S0, S0, S1, GT
	0x03E303F0 B 0x3E30408
	0x03E303F4 LDP S0, S1, [X19 + 0x2C]
	0x03E303F8 FDIV S0, S9, S0
	0x03E303FC FDIV S1, S8, S1
	0x03E30400 FCMP S0, S1
	0x03E30404 FCSEL S0, S0, S1, MI
	0x03E30408 MOV X0, X19
	0x03E3040C BL 0x3E30044
	0x03E30410 LDR V0, [X19 + 0x24]
	0x03E30414 MOV X0, X19
	0x03E30418 LDP X20, X19, [X31 + 0x30]
	0x03E3041C LDP X30, X21, [X31 + 0x20]
	0x03E30420 LDP D9, D8, [X31 + 0x10]
	0x03E30424 LDR V10, [X31], #0x40
	0x03E30428 B 0x3E30084
	0x03E3042C BL 0x1C16F20
	0x03E30430 BL 0x1C16F28
	0x03E30434 STR D8, [X31 - 0x20]!
	0x03E30438 STP X30, X19, [X31 + 0x10]
	0x03E3043C MOV X19, X0
	0x03E30440 MOV X0, X31
	0x03E30444 BL 0x3C0E100
	0x03E30448 FCMP S0, 0x0
	0x03E3044C B.NE 0x3E30454
	0x03E30450 LDR V0, [X19 + 0x40]
	0x03E30454 LDRSW X8, [X19 + 0x3C]
	0x03E30458 FMOV S8, 1
	0x03E3045C CMP W8, 0x4
	0x03E30460 B.HI 0x3E30470
	0x03E30464 ADRP X9, 0xFFFFFFFFFCD68000
	0x03E30468 ADD X9, X9, 0x60C
	0x03E3046C LDR V8, [X9, X8, LSL #2]
	0x03E30470 FDIV S0, S0, S8
	0x03E30474 MOV X0, X19
	0x03E30478 BL 0x3E30044
	0x03E3047C LDR V0, [X19 + 0x24]
	0x03E30480 LDR V1, [X19 + 0x44]
	0x03E30484 MOV X0, X19
	0x03E30488 LDP X30, X19, [X31 + 0x10]
	0x03E3048C FMUL S0, S8, S0
	0x03E30490 FDIV S0, S0, S1
	0x03E30494 LDR V8, [X31], #0x20
	0x03E30498 B 0x3E30084
	0x03E3049C LDR W0, [X0 + 0x20]
	0x03E304A0 RET
	0x03E304A4 STR X30, [X31 - 0x30]!
	0x03E304A8 STP X22, X21, [X31 + 0x10]
	0x03E304AC STP X20, X19, [X31 + 0x20]
	0x03E304B0 ADRP X22, 0x5B8000
	0x03E304B4 ADRP X21, 0x33B000
	0x03E304B8 LDRB W8, [X22 + 0x717]
	0x03E304BC LDR X21, [X21 + 0x48]
	0x03E304C0 MOV W20, W1
	0x03E304C4 MOV X19, X0
	0x03E304C8 TBNZ X8, 0x0, 0x3E304E0
	0x03E304CC ADRP X0, 0x33B000
	0x03E304D0 LDR X0, [X0 + 0x48]
	0x03E304D4 BL 0x1C16CF4
	0x03E304D8 MOVZ W8, 0x1
	0x03E304DC STRB W8, [X22 + 0x717]
	0x03E304E0 LDR X2, [X21]
	0x03E304E4 ADD X0, X19, 0x20
	0x03E304E8 MOV W1, W20
	0x03E304EC BL 0x22543F8
	0x03E304F0 TBZ X0, 0x0, 0x3E30508
	0x03E304F4 MOV X0, X19
	0x03E304F8 LDP X20, X19, [X31 + 0x20]
	0x03E304FC LDP X22, X21, [X31 + 0x10]
	0x03E30500 LDR X30, [X31], #0x30
	0x03E30504 B 0x3E30518
	0x03E30508 LDP X20, X19, [X31 + 0x20]
	0x03E3050C LDP X22, X21, [X31 + 0x10]
	0x03E30510 LDR X30, [X31], #0x30
	0x03E30514 RET
	0x03E30518 STR X30, [X31 - 0x20]!
	0x03E3051C STP X20, X19, [X31 + 0x10]
	0x03E30520 ADRP X20, 0x5B8000
	0x03E30524 LDRB W8, [X20 + 0x71B]
	0x03E30528 MOV X19, X0
	0x03E3052C TBNZ X8, 0x0, 0x3E30544
	0x03E30530 ADRP X0, 0x2C6000
	0x03E30534 LDR X0, [X0 + 0x920]
	0x03E30538 BL 0x1C16CF4
	0x03E3053C MOVZ W8, 0x1
	0x03E30540 STRB W8, [X20 + 0x71B]
	0x03E30544 LDR X8, [X19]
	0x03E30548 MOV X0, X19
	0x03E3054C LDP X9, X1, [X8 + 0x1C8]
	0x03E30550 BLR X9
	0x03E30554 TBZ X0, 0x0, 0x3E30590
	0x03E30558 ADRP X20, 0x2C6000
	0x03E3055C LDR X20, [X20 + 0x920]
	0x03E30560 MOV X0, X19
	0x03E30564 BL 0x3E30618
	0x03E30568 LDR X8, [X20]
	0x03E3056C MOV X19, X0
	0x03E30570 LDR W9, [X8 + 0xE0]
	0x03E30574 CBNZ W9, 0x3E30580
	0x03E30578 MOV X0, X8
	0x03E3057C BL 0x1C16DFC
	0x03E30580 MOV X0, X19
	0x03E30584 LDP X20, X19, [X31 + 0x10]
	0x03E30588 LDR X30, [X31], #0x20
	0x03E3058C B 0x3E2F3D8
	0x03E30590 LDP X20, X19, [X31 + 0x10]
	0x03E30594 LDR X30, [X31], #0x20
	0x03E30598 RET
	0x03E3059C LDR W0, [X0 + 0x24]
	0x03E305A0 RET
	0x03E305A4 STR X30, [X31 - 0x30]!
	0x03E305A8 STP X22, X21, [X31 + 0x10]
	0x03E305AC STP X20, X19, [X31 + 0x20]
	0x03E305B0 ADRP X22, 0x5B8000
	0x03E305B4 ADRP X21, 0x33B000
	0x03E305B8 LDRB W8, [X22 + 0x718]
	0x03E305BC LDR X21, [X21 + 0x48]
	0x03E305C0 MOV W20, W1
	0x03E305C4 MOV X19, X0
	0x03E305C8 TBNZ X8, 0x0, 0x3E305E0
	0x03E305CC ADRP X0, 0x33B000
	0x03E305D0 LDR X0, [X0 + 0x48]
	0x03E305D4 BL 0x1C16CF4
	0x03E305D8 MOVZ W8, 0x1
	0x03E305DC STRB W8, [X22 + 0x718]
	0x03E305E0 LDR X2, [X21]
	0x03E305E4 ADD X0, X19, 0x24
	0x03E305E8 MOV W1, W20
	0x03E305EC BL 0x22543F8
	0x03E305F0 TBZ X0, 0x0, 0x3E30608
	0x03E305F4 MOV X0, X19
	0x03E305F8 LDP X20, X19, [X31 + 0x20]
	0x03E305FC LDP X22, X21, [X31 + 0x10]
	0x03E30600 LDR X30, [X31], #0x30
	0x03E30604 B 0x3E30518
	0x03E30608 LDP X20, X19, [X31 + 0x20]
	0x03E3060C LDP X22, X21, [X31 + 0x10]
	0x03E30610 LDR X30, [X31], #0x30
	0x03E30614 RET
	0x03E30618 STP X30, X21, [X31 - 0x20]!
	0x03E3061C STP X20, X19, [X31 + 0x10]
	0x03E30620 ADRP X21, 0x5B8000
	0x03E30624 ADRP X20, 0x2C3000
	0x03E30628 LDRB W8, [X21 + 0x719]
	0x03E3062C LDR X20, [X20 + 0x598]
	0x03E30630 MOV X19, X0
	0x03E30634 TBNZ X8, 0x0, 0x3E30658
	0x03E30638 ADRP X0, 0x2C5000
	0x03E3063C LDR X0, [X0 + 0x6B8]
	0x03E30640 BL 0x1C16CF4
	0x03E30644 ADRP X0, 0x2C3000
	0x03E30648 LDR X0, [X0 + 0x598]
	0x03E3064C BL 0x1C16CF4
	0x03E30650 MOVZ W8, 0x1
	0x03E30654 STRB W8, [X21 + 0x719]
	0x03E30658 LDR X0, [X20]
	0x03E3065C LDR X20, [X19 + 0x28]
	0x03E30660 LDR W8, [X0 + 0xE0]
	0x03E30664 CBNZ W8, 0x3E3066C
	0x03E30668 BL 0x1C16DFC
	0x03E3066C MOV X0, X20
	0x03E30670 MOV X1, X31
	0x03E30674 MOV X2, X31
	0x03E30678 BL 0x3C3883C
	0x03E3067C TBZ X0, 0x0, 0x3E3069C
	0x03E30680 ADRP X8, 0x2C5000
	0x03E30684 LDR X8, [X8 + 0x6B8]
	0x03E30688 MOV X0, X19
	0x03E3068C LDR X1, [X8]
	0x03E30690 BL 0x21A3894
	0x03E30694 STR X0, [X19 + 0x28]
	0x03E30698 B 0x3E306A0
	0x03E3069C LDR X0, [X19 + 0x28]
	0x03E306A0 LDP X20, X19, [X31 + 0x10]
	0x03E306A4 LDP X30, X21, [X31], #0x20
	0x03E306A8 RET
	0x03E306AC MOV X1, X31
	0x03E306B0 B 0x3E4E160
	0x03E306B4 STP X30, X19, [X31 - 0x10]!
	0x03E306B8 MOV X1, X31
	0x03E306BC MOV X19, X0
	0x03E306C0 BL 0x3E4BDBC
	0x03E306C4 MOV X0, X19
	0x03E306C8 LDP X30, X19, [X31], #0x10
	0x03E306CC B 0x3E30518
	0x03E306D0 STP X30, X21, [X31 - 0x20]!
	0x03E306D4 STP X20, X19, [X31 + 0x10]
	0x03E306D8 ADRP X21, 0x5B8000
	0x03E306DC ADRP X20, 0x2C6000
	0x03E306E0 LDRB W8, [X21 + 0x71A]
	0x03E306E4 LDR X20, [X20 + 0x920]
	0x03E306E8 MOV X19, X0
	0x03E306EC TBNZ X8, 0x0, 0x3E30704
	0x03E306F0 ADRP X0, 0x2C6000
	0x03E306F4 LDR X0, [X0 + 0x920]
	0x03E306F8 BL 0x1C16CF4
	0x03E306FC MOVZ W8, 0x1
	0x03E30700 STRB W8, [X21 + 0x71A]
	0x03E30704 ADD X0, X19, 0x30
	0x03E30708 MOV X1, X31
	0x03E3070C BL 0x3C3E3A8
	0x03E30710 MOV X0, X19
	0x03E30714 BL 0x3E30618
	0x03E30718 LDR X8, [X20]
	0x03E3071C MOV X20, X0
	0x03E30720 LDR W9, [X8 + 0xE0]
	0x03E30724 CBNZ W9, 0x3E30730
	0x03E30728 MOV X0, X8
	0x03E3072C BL 0x1C16DFC
	0x03E30730 MOV X0, X20
	0x03E30734 BL 0x3E2F3D8
	0x03E30738 MOV X0, X19
	0x03E3073C LDP X20, X19, [X31 + 0x10]
	0x03E30740 MOV X1, X31
	0x03E30744 LDP X30, X21, [X31], #0x20
	0x03E30748 B 0x3E4BDC4
	0x03E3074C B 0x3E30518
	0x03E30750 STR X30, [X31 - 0x30]!
	0x03E30754 STP X22, X21, [X31 + 0x10]
	0x03E30758 STP X20, X19, [X31 + 0x20]
	0x03E3075C CMP W1, 0x0
	0x03E30760 MOVZ W8, 0x24
	0x03E30764 MOVZ W9, 0x20
	0x03E30768 CSEL X8, X9, X8, EQ
	0x03E3076C LDR W22, [X0, X8, LSL]
	0x03E30770 MOV W19, W1
	0x03E30774 MOV X20, X0
	0x03E30778 ADD X21, X0, 0x30
	0x03E3077C BL 0x3E30618
	0x03E30780 MOV X2, X0
	0x03E30784 CBZ W22, 0x3E307D4
	0x03E30788 CMP W19, 0x0
	0x03E3078C MOVZ W8, 0x2000
	0x03E30790 MOVZ W9, 0x1000
	0x03E30794 CSEL W3, W9, W8, EQ
	0x03E30798 MOV X0, X21
	0x03E3079C MOV X1, X20
	0x03E307A0 MOV X4, X31
	0x03E307A4 BL 0x3C3E3A4
	0x03E307A8 MOV X0, X20
	0x03E307AC BL 0x3E30618
	0x03E307B0 LDR X8, [X20 + 0x28]
	0x03E307B4 CMP W22, 0x1
	0x03E307B8 MOV X20, X0
	0x03E307BC MOV X0, X8
	0x03E307C0 B.NE 0x3E307F4
	0x03E307C4 CBZ W19, 0x3E30804
	0x03E307C8 BL 0x3E35434
	0x03E307CC CBNZ X20, 0x3E30818
	0x03E307D0 BL 0x1C16F20
	0x03E307D4 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x5B9000
	015 Move X25, 0x2C4000
	016 Move W8, [X20+1870]
	017 Move X25, [X25+1432]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x2EB000
	024 Move X0, [X0+1760]
	025 Call 0x1C17CF4
	026 Move X0, 0x2EC000
	027 Move X0, [X0+2584]
	028 Call 0x1C17CF4
	029 Move X0, 0x2EC000
	030 Move X0, [X0+2592]
	031 Call 0x1C17CF4
	032 Move X0, 0x2EC000
	033 Move X0, [X0+2600]
	034 Call 0x1C17CF4
	035 Move X0, 0x33C000
	036 Move X0, [X0+56]
	037 Call 0x1C17CF4
	038 Move X0, 0x2C7000
	039 Move X0, [X0+2336]
	040 Call 0x1C17CF4
	041 Move X0, 0x2EC000
	042 Move X0, [X0+2624]
	043 Call 0x1C17CF4
	044 Move X0, 0x2EC000
	045 Move X0, [X0+2632]
	046 Call 0x1C17CF4
	047 Move X0, 0x2C4000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move X0, 0x2EB000
	051 Move X0, [X0+3184]
	052 Call 0x1C17CF4
	053 Move X0, 0x2C4000
	054 Move X0, [X0+1728]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+1870], W8
	058 Move X0, [X25]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {91}
	071 Compare X19, 0
	072 JumpIfEqual {317}
	073 Move X0, X19
	074 Move X1, X31
	075 Call Component.get_gameObject, X0
	076 Move X8, [X25]
	077 Move X20, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Move X1, X31
	085 Move X2, X31
	086 Call Object.op_Equality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {105}
	091 Move X20, [X31+96]
	092 Move X19, [X31+104]
	093 Move X22, [X31+80]
	094 Move X21, [X31+88]
	095 Move X24, [X31+64]
	096 Move X23, [X31+72]
	097 Move X26, [X31+48]
	098 Move X25, [X31+56]
	099 Move X28, [X31+32]
	100 Move X27, [X31+40]
	101 Move X29, [X31+16]
	102 Move X30, [X31+24]
	103 Add X31, X31, 112
	104 Return 
	105 Move X8, 0x2EC000
	106 Move X8, [X8+2600]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X8, 0x2EC000
	113 Move X8, [X8+2584]
	114 Move X0, [X8]
	115 Call CollectionPool`2<Object, Object>.Get
	116 Move X20, X0
	117 Move X0, X19
	118 Move X1, X31
	119 Call Transform.get_parent, X0
	120 Compare X0, 0
	121 JumpIfEqual {128}
	122 Move X8, 0x2EB000
	123 Move X8, [X8+3184]
	124 Move X9, [X0]
	125 Move X8, [X8]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Move X22, X31
	129 Move X27, 0x33C000
	130 Move X28, 0x2C4000
	131 Move X29, 0x2EC000
	132 Move X26, 0x2EB000
	133 Move X27, [X27+56]
	134 Move X28, [X28+1728]
	135 Move X29, [X29+2632]
	136 Move X26, [X26+1760]
	137 Move [X31+8], X19
	138 Move X0, [X25]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X22
	144 Move X1, X31
	145 Move X2, X31
	146 Call Object.op_Equality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {254}
	151 Compare X22, 0
	152 JumpIfEqual {317}
	153 Move X0, X22
	154 Move X1, X31
	155 Call Component.get_gameObject, X0
	156 Move X8, [X25]
	157 Move X23, X0
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {163}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move X0, X23
	164 Move X1, X31
	165 Move X2, X31
	166 Call Object.op_Equality, X0, X1
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {254}
	171 Move X0, [X28]
	172 Move X23, [X27]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X23
	178 Move X1, X31
	179 Call Type.GetTypeFromHandle, X0
	180 Move X1, X0
	181 Move X0, X22
	182 Move X2, X20
	183 Move X3, X31
	184 Call Component.GetComponents, X0, X1, X2
	185 Compare X20, 0
	186 JumpIfEqual {317}
	187 Move W8, [X20+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CSET not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W23, W31
	192 Move X2, [X29]
	193 Move X0, X20
	194 Move W1, W23
	195 Call List`1<Object>.get_Item, X0, X1
	196 Move X8, [X25]
	197 Move X24, X0
	198 Move W9, [X8+224]
	199 Compare W9, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X8
	202 Call 0x1C17DFC
	203 Move X0, X24
	204 Move X1, X31
	205 Move X2, X31
	206 Call Object.op_Inequality, X0, X1
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {229}
	211 Compare X24, 0
	212 JumpIfEqual {229}
	213 Move X9, [X24]
	214 Move X8, [X26]
	215 Move W11, [X9+304]
	216 Move W10, [X8+304]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X9, [X9+200]
	219 Add X9, X9, X10
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, X24
	223 Move X1, X31
	224 Call Behaviour.get_isActiveAndEnabled, X0
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {253}
	229 Move W8, [X20+24]
	230 Add W23, W23, 1
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction CSET not yet implemented."
	233 Move X0, X22
	234 Move X1, X31
	235 Call Transform.get_parent, X0
	236 Compare X0, 0
	237 JumpIfEqual {248}
	238 Move X8, 0x2EB000
	239 Move X8, [X8+3184]
	240 Move X9, [X0]
	241 Move X8, [X8]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 NotImplemented "Instruction CSEL not yet implemented."
	244 Move TEMP, X21
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {138}
	248 Move X22, X31
	249 Move TEMP, X21
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {138}
	253 Move [X31+8], X22
	254 Move X0, [X25]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X21, [X31+8]
	260 Move X1, X19
	261 Move X2, X31
	262 Move X0, X21
	263 Call Object.op_Equality, X0, X1
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {282}
	268 Move X8, 0x2C7000
	269 Move X8, [X8+2336]
	270 Move X0, [X8]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X0, X21
	276 Move X1, X20
	277 Call LayoutRebuilder.ValidController, X0, X1
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfNotEqual {291}
	282 Move X8, 0x2C7000
	283 Move X8, [X8+2336]
	284 Move X0, [X8]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 Move X0, X21
	290 Call LayoutRebuilder.MarkLayoutRootForRebuild, X0
	291 Move X8, 0x2EC000
	292 Move X8, [X8+2600]
	293 Move X0, [X8]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move X8, 0x2EC000
	299 Move X8, [X8+2592]
	300 Move X0, X20
	301 Move X20, [X31+96]
	302 Move X19, [X31+104]
	303 Move X22, [X31+80]
	304 Move X21, [X31+88]
	305 Move X1, [X8]
	306 Move X24, [X31+64]
	307 Move X23, [X31+72]
	308 Move X26, [X31+48]
	309 Move X25, [X31+56]
	310 Move X28, [X31+32]
	311 Move X27, [X31+40]
	312 Move X29, [X31+16]
	313 Move X30, [X31+24]
	314 Add X31, X31, 112
	315 Call CollectionPool`2<Object, Object>.Release, X0
	316 Return 
	317 Call 0x1C17F20

Method: System.Boolean ValidController(UnityEngine.RectTransform layoutRoot, System.Collections.Generic.List`1<UnityEngine.Component> comps)

Disassembly:
	0x03E35B40 LDRB W8, [X23 + 0x760]
	0x03E35B44 LDR X21, [X21 + 0x598]
	0x03E35B48 MOV X19, X2
	0x03E35B4C MOV V8.16B, V0.16B
	0x03E35B50 MOV X20, X1
	0x03E35B54 MOV X22, X0
	0x03E35B58 TBNZ X8, 0x0, 0x3E35BDC
	0x03E35B5C ADRP X0, 0x2E5000
	0x03E35B60 LDR X0, [X0 + 0x6E0]
	0x03E35B64 BL 0x1C16CF4
	0x03E35B68 ADRP X0, 0x2E6000
	0x03E35B6C LDR X0, [X0 + 0xA18]
	0x03E35B70 BL 0x1C16CF4
	0x03E35B74 ADRP X0, 0x2E6000
	0x03E35B78 LDR X0, [X0 + 0xA20]
	0x03E35B7C BL 0x1C16CF4
	0x03E35B80 ADRP X0, 0x2E6000
	0x03E35B84 LDR X0, [X0 + 0xA28]
	0x03E35B88 BL 0x1C16CF4
	0x03E35B8C ADRP X0, 0x336000
	0x03E35B90 LDR X0, [X0 + 0x178]
	0x03E35B94 BL 0x1C16CF4
	0x03E35B98 ADRP X0, 0x336000
	0x03E35B9C LDR X0, [X0 + 0x198]
	0x03E35BA0 BL 0x1C16CF4
	0x03E35BA4 ADRP X0, 0x2E6000
	0x03E35BA8 LDR X0, [X0 + 0xA40]
	0x03E35BAC BL 0x1C16CF4
	0x03E35BB0 ADRP X0, 0x2E6000
	0x03E35BB4 LDR X0, [X0 + 0xA48]
	0x03E35BB8 BL 0x1C16CF4
	0x03E35BBC ADRP X0, 0x2BE000
	0x03E35BC0 LDR X0, [X0 + 0x598]
	0x03E35BC4 BL 0x1C16CF4
	0x03E35BC8 ADRP X0, 0x2BE000
	0x03E35BCC LDR X0, [X0 + 0x6C0]
	0x03E35BD0 BL 0x1C16CF4
	0x03E35BD4 MOVZ W8, 0x1
	0x03E35BD8 STRB W8, [X23 + 0x760]
	0x03E35BDC STR X31, [X19]
	0x03E35BE0 LDR X0, [X21]
	0x03E35BE4 LDR W8, [X0 + 0xE0]
	0x03E35BE8 CBNZ W8, 0x3E35BF0
	0x03E35BEC BL 0x1C16DFC
	0x03E35BF0 MOV X0, X22
	0x03E35BF4 MOV X1, X31
	0x03E35BF8 MOV X2, X31
	0x03E35BFC BL 0x3C3883C
	0x03E35C00 FMOV S9, W31
	0x03E35C04 TBNZ X0, 0x0, 0x3E35E04
	0x03E35C08 ADRP X8, 0x2E6000
	0x03E35C0C LDR X8, [X8 + 0xA28]
	0x03E35C10 ADRP X24, 0x2E6000
	0x03E35C14 ADRP X21, 0x336000
	0x03E35C18 ADRP X23, 0x2BE000
	0x03E35C1C LDR X0, [X8]
	0x03E35C20 LDR W8, [X0 + 0xE0]
	0x03E35C24 LDR X24, [X24 + 0xA18]
	0x03E35C28 LDR X21, [X21 + 0x178]
	0x03E35C2C LDR X23, [X23 + 0x6C0]
	0x03E35C30 CBNZ W8, 0x3E35C38
	0x03E35C34 BL 0x1C16DFC
	0x03E35C38 LDR X0, [X24]
	0x03E35C3C BL 0x28F98D4
	0x03E35C40 LDR X8, [X23]
	0x03E35C44 LDR X23, [X21]
	0x03E35C48 MOV X21, X0
	0x03E35C4C LDR W9, [X8 + 0xE0]
	0x03E35C50 CBNZ W9, 0x3E35C5C
	0x03E35C54 MOV X0, X8
	0x03E35C58 BL 0x1C16DFC
	0x03E35C5C MOV X0, X23
	0x03E35C60 MOV X1, X31
	0x03E35C64 BL 0x338C698
	0x03E35C68 CBZ X22, 0x3E35E28
	0x03E35C6C MOV X1, X0
	0x03E35C70 MOV X0, X22
	0x03E35C74 MOV X2, X21
	0x03E35C78 MOV X3, X31
	0x03E35C7C BL 0x3C33320
	0x03E35C80 CBZ X21, 0x3E35E28
	0x03E35C84 LDR W26, [X21 + 0x18]
	0x03E35C88 CMP W26, 0x1
	0x03E35C8C B.LT 0x3E35DD4
	0x03E35C90 ADRP X27, 0x2E6000
	0x03E35C94 ADRP X28, 0x336000
	0x03E35C98 ADRP X25, 0x2E5000
	0x03E35C9C LDR X27, [X27 + 0xA48]
	0x03E35CA0 LDR X28, [X28 + 0x198]
	0x03E35CA4 LDR X25, [X25 + 0x6E0]
	0x03E35CA8 MOV W22, W31
	0x03E35CAC MOVZ W29, 0x80000000
	0x03E35CB0 LDR X2, [X27]
	0x03E35CB4 MOV X0, X21
	0x03E35CB8 MOV W1, W22
	0x03E35CBC BL 0x301BCCC
	0x03E35CC0 LDR X1, [X28]
	0x03E35CC4 BL 0x1C16E00
	0x03E35CC8 CBZ X0, 0x3E35E28
	0x03E35CCC LDR X9, [X0]
	0x03E35CD0 LDR X8, [X25]
	0x03E35CD4 MOV X23, X0
	0x03E35CD8 LDRB W11, [X9 + 0x130]
	0x03E35CDC LDRB W10, [X8 + 0x130]
	0x03E35CE0 CMP W11, W10
	0x03E35CE4 B.CC 0x3E35D0C
	0x03E35CE8 LDR X9, [X9 + 0xC8]
	0x03E35CEC ADD X9, X9, X10, 0x3, LSL
	0x03E35CF0 LDUR X9, [X9 - 0x8]
	0x03E35CF4 CMP X9, X8
	0x03E35CF8 B.NE 0x3E35D0C
	0x03E35CFC MOV X0, X23
	0x03E35D00 MOV X1, X31
	0x03E35D04 BL 0x3C32454
	0x03E35D08 TBZ X0, 0x0, 0x3E35D94
	0x03E35D0C LDR X8, [X23]
	0x03E35D10 LDR X1, [X28]
	0x03E35D14 LDRH W9, [X8 + 0x12E]
	0x03E35D18 CBZ X9, 0x3E35D3C
	0x03E35D1C LDR X10, [X8 + 0xB0]
	0x03E35D20 ADD X10, X10, 0x8
	0x03E35D24 LDUR X11, [X10 - 0x8]
	0x03E35D28 CMP X11, X1
	0x03E35D2C B.EQ 0x3E35D4C
	0x03E35D30 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x5B4000
	009 Move X22, 0x2BF000
	010 Move W8, [X21+1871]
	011 Move X22, [X22+1432]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x2E6000
	019 Move X0, [X0+1760]
	020 Call 0x1C17CF4
	021 Move X0, 0x337000
	022 Move X0, [X0+384]
	023 Call 0x1C17CF4
	024 Move X0, 0x2E7000
	025 Move X0, [X0+2624]
	026 Call 0x1C17CF4
	027 Move X0, 0x2E7000
	028 Move X0, [X0+2632]
	029 Call 0x1C17CF4
	030 Move X0, 0x2BF000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x2BF000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1871], W8
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {138}
	051 Compare X20, 0
	052 JumpIfEqual {148}
	053 Move X0, X20
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X8, [X22]
	057 Move X21, X0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {138}
	071 Move X8, 0x2BF000
	072 Move X8, [X8+1728]
	073 Move X0, [X8]
	074 Move X8, 0x337000
	075 Move X8, [X8+384]
	076 Move W9, [X0+224]
	077 Move X21, [X8]
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X21
	082 Move X1, X31
	083 Call Type.GetTypeFromHandle, X0
	084 Move X1, X0
	085 Move X0, X20
	086 Move X2, X19
	087 Move X3, X31
	088 Call Component.GetComponents, X0, X1, X2
	089 Compare X19, 0
	090 JumpIfEqual {148}
	091 Move W8, [X19+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X23, 0x2E7000
	094 Move X24, 0x2E6000
	095 Move X23, [X23+2632]
	096 Move X24, [X24+1760]
	097 Move W20, W31
	098 Move X2, [X23]
	099 Move X0, X19
	100 Move W1, W20
	101 Call List`1<Object>.get_Item, X0, X1
	102 Move X8, [X22]
	103 Move X21, X0
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X21
	110 Move X1, X31
	111 Move X2, X31
	112 Call Object.op_Inequality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {135}
	117 Compare X21, 0
	118 JumpIfEqual {135}
	119 Move X9, [X21]
	120 Move X8, [X24]
	121 Move W11, [X9+304]
	122 Move W10, [X8+304]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, [X9+200]
	125 Add X9, X9, X10
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X21
	129 Move X1, X31
	130 Call Behaviour.get_isActiveAndEnabled, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {147}
	135 Move W8, [X19+24]
	136 Add W20, W20, 1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W0, W31
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X30, [X31+64]
	146 Return X0
	147 Move W0, 1
	148 Call 0x1C17F20

Method: System.Void MarkLayoutRootForRebuild(UnityEngine.RectTransform controller)

Disassembly:
	0x03E35D34 ADD X10, X10, 0x10
	0x03E35D38 B.NE 0x3E35D24
	0x03E35D3C MOVZ W2, 0x8
	0x03E35D40 MOV X0, X23
	0x03E35D44 BL 0x1C5C788
	0x03E35D48 B 0x3E35D5C
	0x03E35D4C LDR W9, [X10]
	0x03E35D50 ADD W9, W9, 0x8
	0x03E35D54 ADD X8, X8, W9, 0x4, SXTW
	0x03E35D58 ADD X0, X8, 0x138
	0x03E35D5C LDP X8, X1, [X0]
	0x03E35D60 MOV X0, X23
	0x03E35D64 BLR X8
	0x03E35D68 CMP W0, W29
	0x03E35D6C B.LT 0x3E35D94
	0x03E35D70 CBZ X20, 0x3E35E28
	0x03E35D74 MOV W24, W0
	0x03E35D78 LDR X8, [X20 + 0x18]
	0x03E35D7C LDR X0, [X20 + 0x40]
	0x03E35D80 LDR X2, [X20 + 0x28]
	0x03E35D84 MOV X1, X23
	0x03E35D88 BLR X8
	0x03E35D8C FCMP S0, 0x0
	0x03E35D90 B.PL 0x3E35DAC
	0x03E35D94 MOV V9.16B, V8.16B
	0x03E35D98 ADD W22, W22, 0x1
	0x03E35D9C CMP W22, W26
	0x03E35DA0 MOV V8.16B, V9.16B
	0x03E35DA4 B.NE 0x3E35CB0
	0x03E35DA8 B 0x3E35DD8
	0x03E35DAC MOV V9.16B, V0.16B
	0x03E35DB0 CMP W24, W29
	0x03E35DB4 B.LE 0x3E35DC4
	0x03E35DB8 STR X23, [X19]
	0x03E35DBC MOV W29, W24
	0x03E35DC0 B 0x3E35D98
	0x03E35DC4 FCMP S9, S8
	0x03E35DC8 B.LE 0x3E35D94
	0x03E35DCC STR X23, [X19]
	0x03E35DD0 B 0x3E35D98
	0x03E35DD4 MOV V9.16B, V8.16B
	0x03E35DD8 ADRP X8, 0x2E6000
	0x03E35DDC LDR X8, [X8 + 0xA28]
	0x03E35DE0 LDR X0, [X8]
	0x03E35DE4 LDR W8, [X0 + 0xE0]
	0x03E35DE8 CBNZ W8, 0x3E35DF0
	0x03E35DEC BL 0x1C16DFC
	0x03E35DF0 ADRP X8, 0x2E6000
	0x03E35DF4 LDR X8, [X8 + 0xA20]
	0x03E35DF8 MOV X0, X21
	0x03E35DFC LDR X1, [X8]
	0x03E35E00 BL 0x28F9A14
	0x03E35E04 LDP X20, X19, [X31 + 0x60]
	0x03E35E08 LDP X22, X21, [X31 + 0x50]
	0x03E35E0C LDP X24, X23, [X31 + 0x40]
	0x03E35E10 LDP X26, X25, [X31 + 0x30]
	0x03E35E14 LDP X28, X27, [X31 + 0x20]
	0x03E35E18 LDP X29, X30, [X31 + 0x10]
	0x03E35E1C MOV V0.16B, V9.16B
	0x03E35E20 LDP D9, D8, [X31], #0x70
	0x03E35E24 RET
	0x03E35E28 BL 0x1C16F20
	0x03E35E2C STR X30, [X31 - 0x20]!
	0x03E35E30 STP X20, X19, [X31 + 0x10]
	0x03E35E34 ADRP X19, 0x5B3000
	0x03E35E38 ADRP X20, 0x336000
	0x03E35E3C LDRB W8, [X19 + 0x761]
	0x03E35E40 LDR X20, [X20 + 0x1A8]
	0x03E35E44 TBNZ X8, 0x0, 0x3E35E5C
	0x03E35E48 ADRP X0, 0x336000
	0x03E35E4C LDR X0, [X0 + 0x1A8]
	0x03E35E50 BL 0x1C16CF4
	0x03E35E54 MOVZ W8, 0x1
	0x03E35E58 STRB W8, [X19 + 0x761]
	0x03E35E5C LDR X0, [X20]
	0x03E35E60 BL 0x1C16F10
	0x03E35E64 MOV X1, X31
	0x03E35E68 MOV X19, X0
	0x03E35E6C BL 0x33BDD8C
	0x03E35E70 LDR X8, [X20]
	0x03E35E74 LDR X8, [X8 + 0xB8]
	0x03E35E78 STR X19, [X8]
	0x03E35E7C LDP X20, X19, [X31 + 0x10]
	0x03E35E80 LDR X30, [X31], #0x20
	0x03E35E84 RET
	0x03E35E88 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5B4000
	006 Move X21, 0x2BF000
	007 Move W8, [X20+1872]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x324000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move X0, 0x2C2000
	018 Move X0, [X0+2336]
	019 Call 0x1C17CF4
	020 Move X0, 0x337000
	021 Move X0, [X0+320]
	022 Call 0x1C17CF4
	023 Move X0, 0x337000
	024 Move X0, [X0+328]
	025 Call 0x1C17CF4
	026 Move X0, 0x2BF000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1872], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {86}
	044 Move X21, 0x2C2000
	045 Move X21, [X21+2336]
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X0, [X8]
	054 Compare X0, 0
	055 JumpIfEqual {111}
	056 Move X8, 0x337000
	057 Move X8, [X8+320]
	058 Move X1, [X8]
	059 Call 0x24942C0, X0
	060 Compare X0, 0
	061 JumpIfEqual {111}
	062 Move X20, X0
	063 Move [X0+16], X19
	064 Compare X19, 0
	065 JumpIfEqual {111}
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move X9, [X8+344]
	069 Move X1, [X8+352]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move [X20+24], W0
	072 Move X8, 0x324000
	073 Move X8, [X8+1816]
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X20
	080 Move X1, X31
	081 Call CanvasUpdateRegistry.TryRegisterCanvasElementForLayoutRebuild, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {91}
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Return 
	091 Move X0, [X21]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X21]
	097 Move X8, [X0+184]
	098 Move X0, [X8]
	099 Compare X0, 0
	100 JumpIfEqual {111}
	101 Move X8, 0x337000
	102 Move X8, [X8+328]
	103 Move X1, X20
	104 Move X20, [X31+16]
	105 Move X19, [X31+24]
	106 Move X2, [X8]
	107 Move X30, [X31+32]
	108 Move X21, [X31+40]
	109 Call 0x24943E0, X0, X1
	110 Return 
	111 Call 0x1C17F20

Method: System.Void LayoutComplete()

Disassembly:
	0x03E35E8C B 0x33BDD8C
	0x03E35E90 STR X30, [X31 - 0x20]!
	0x03E35E94 STP X20, X19, [X31 + 0x10]
	0x03E35E98 ADRP X20, 0x5B3000
	0x03E35E9C LDRB W8, [X20 + 0x762]
	0x03E35EA0 MOV X19, X1
	0x03E35EA4 TBNZ X8, 0x0, 0x3E35EBC
	0x03E35EA8 ADRP X0, 0x336000
	0x03E35EAC LDR X0, [X0 + 0x198]
	0x03E35EB0 BL 0x1C16CF4
	0x03E35EB4 MOVZ W8, 0x1
	0x03E35EB8 STRB W8, [X20 + 0x762]
	0x03E35EBC CBZ X19, 0x3E35F2C
	0x03E35EC0 ADRP X10, 0x336000
	0x03E35EC4 LDR X8, [X19]
	0x03E35EC8 LDR X10, [X10 + 0x198]
	0x03E35ECC LDRH W9, [X8 + 0x12E]
	0x03E35ED0 LDR X1, [X10]
	0x03E35ED4 CBZ X9, 0x3E35EF8
	0x03E35ED8 LDR X10, [X8 + 0xB0]
	0x03E35EDC ADD X10, X10, 0x8
	0x03E35EE0 LDUR X11, [X10 - 0x8]
	0x03E35EE4 CMP X11, X1
	0x03E35EE8 B.EQ 0x3E35F08
	0x03E35EEC SUBS X9, X9, 0x1
	0x03E35EF0 ADD X10, X10, 0x10
	0x03E35EF4 B.NE 0x3E35EE0
	0x03E35EF8 MOVZ W2, 0x2
	0x03E35EFC MOV X0, X19
	0x03E35F00 BL 0x1C5C788
	0x03E35F04 B 0x3E35F18
	0x03E35F08 LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5B4000
	006 Move X20, 0x2C2000
	007 Move W8, [X21+1873]
	008 Move X20, [X20+2336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2C2000
	015 Move X0, [X0+2336]
	016 Call 0x1C17CF4
	017 Move X0, 0x337000
	018 Move X0, [X0+328]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1873], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x337000
	033 Move X8, [X8+328]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call 0x24943E0, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Void GraphicUpdateComplete()

Disassembly:
	0x03E35F0C ADD W9, W9, 0x2

ISIL:
	001 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x03E35F10 ADD X8, X8, W9, 0x4, SXTW
	0x03E35F14 ADD X0, X8, 0x138

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03E35F18 LDP X2, X1, [X0]
	0x03E35F1C MOV X0, X19
	0x03E35F20 LDP X20, X19, [X31 + 0x10]
	0x03E35F24 LDR X30, [X31], #0x20
	0x03E35F28 BR X2
	0x03E35F2C BL 0x1C16F20
	0x03E35F30 STR X30, [X31 - 0x20]!
	0x03E35F34 STP X20, X19, [X31 + 0x10]
	0x03E35F38 ADRP X20, 0x5B3000
	0x03E35F3C LDRB W8, [X20 + 0x763]
	0x03E35F40 MOV X19, X1
	0x03E35F44 TBNZ X8, 0x0, 0x3E35F5C
	0x03E35F48 ADRP X0, 0x336000
	0x03E35F4C LDR X0, [X0 + 0x198]
	0x03E35F50 BL 0x1C16CF4
	0x03E35F54 MOVZ W8, 0x1
	0x03E35F58 STRB W8, [X20 + 0x763]
	0x03E35F5C CBZ X19, 0x3E35FCC
	0x03E35F60 ADRP X10, 0x336000
	0x03E35F64 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {25}
	006 Move X8, [X1]
	007 Move X19, X0
	008 Move X0, X1
	009 Move X9, [X8+344]
	010 Move X8, [X8+352]
	011 Move X1, X8
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19]
	014 Move W20, W0
	015 Move X0, X19
	016 Move X9, [X8+344]
	017 Move X1, [X8+352]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move X30, [X31+32]
	024 Return X0
	025 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03E35F68 LDR X10, [X10 + 0x198]
	0x03E35F6C LDRH W9, [X8 + 0x12E]
	0x03E35F70 LDR X1, [X10]
	0x03E35F74 CBZ X9, 0x3E35F98
	0x03E35F78 LDR X10, [X8 + 0xB0]
	0x03E35F7C ADD X10, X10, 0x8
	0x03E35F80 LDUR X11, [X10 - 0x8]
	0x03E35F84 CMP X11, X1
	0x03E35F88 B.EQ 0x3E35FA8
	0x03E35F8C SUBS X9, X9, 0x1
	0x03E35F90 ADD X10, X10, 0x10
	0x03E35F94 B.NE 0x3E35F80
	0x03E35F98 MOVZ W2, 0x2
	0x03E35F9C MOV X0, X19
	0x03E35FA0 BL 0x1C5C788
	0x03E35FA4 B 0x3E35FB8
	0x03E35FA8 LDR W9, [X10]
	0x03E35FAC ADD W9, W9, 0x2
	0x03E35FB0 ADD X8, X8, W9, 0x4, SXTW
	0x03E35FB4 ADD X0, X8, 0x138
	0x03E35FB8 LDP X2, X1, [X0]
	0x03E35FBC MOV X0, X19
	0x03E35FC0 LDP X20, X19, [X31 + 0x10]
	0x03E35FC4 LDR X30, [X31], #0x20
	0x03E35FC8 BR X2
	0x03E35FCC BL 0x1C16F20
	0x03E35FD0 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5B4000
	006 Move X20, 0x337000
	007 Move W8, [X21+1874]
	008 Move X20, [X20+400]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x337000
	015 Move X0, [X0+400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1874], W8
	019 Move X0, [X19+16]
	020 Move X19, [X20]
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X8, [X0]
	024 Move X9, [X8+360]
	025 Move X1, [X8+368]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X1, X0
	028 Move X1, X31
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call String.Concat, X0, X1
	036 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03E35FD4 STP X20, X19, [X31 + 0x10]
	0x03E35FD8 ADRP X20, 0x5B3000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

