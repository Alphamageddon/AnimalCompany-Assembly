Type: UnityEngine.UI.InputField/<MouseDragOutsideRect>d__196

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03E2B318 ADRP X21, 0x33F000
	0x03E2B31C LDR X21, [X21 + 0xFB8]
	0x03E2B320 LDR X20, [X19 + 0x180]
	0x03E2B324 LDR X0, [X21]
	0x03E2B328 LDR W8, [X0 + 0xE0]
	0x03E2B32C CBNZ W8, 0x3E2B338
	0x03E2B330 BL 0x1C16DFC
	0x03E2B334 LDR X0, [X21]
	0x03E2B338 LDR X8, [X0 + 0xB8]
	0x03E2B33C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03E2FD2C ADRP X0, 0x316000

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03E2FD30 LDR X0, [X0 + 0xFF8]
	0x03E2FD34 BL 0x1C16D08
	0x03E2FD38 MOV X1, X0
	0x03E2FD3C MOV X0, X19
	0x03E2FD40 MOV X2, X31
	0x03E2FD44 BL 0x3379B6C
	0x03E2FD48 ADRP X0, 0x317000
	0x03E2FD4C LDR X0, [X0]
	0x03E2FD50 BL 0x1C16D08
	0x03E2FD54 MOV X1, X0
	0x03E2FD58 MOV X0, X19
	0x03E2FD5C BL 0x1C16DEC
	0x03E2FD60 RET
	0x03E2FD64 RET
	0x03E2FD68 LDRB W0, [X0 + 0x31]
	0x03E2FD6C RET
	0x03E2FD70 LDR W0, [X0 + 0x20]
	0x03E2FD74 RET
	0x03E2FD78 STR W1, [X0 + 0x20]
	0x03E2FD7C RET
	0x03E2FD80 LDR V0, [X0 + 0x24]
	0x03E2FD84 RET
	0x03E2FD88 STR S0, [X0 + 0x24]
	0x03E2FD8C RET
	0x03E2FD90 LDR V0, [X0 + 0x28]
	0x03E2FD94 RET
	0x03E2FD98 ADRP X8, 0xFFFFFFFFFCCBB000
	0x03E2FD9C LDR V1, [X8 + 0x330]
	0x03E2FDA0 FMAX S0, S0, S1
	0x03E2FDA4 STR S0, [X0 + 0x28]
	0x03E2FDA8 RET
	0x03E2FDAC LDP S0, S1, [X0 + 0x2C]
	0x03E2FDB0 RET
	0x03E2FDB4 ADRP X8, 0xFFFFFFFFFCCBA000
	0x03E2FDB8 LDR V2, [X8 + 0xFBC]
	0x03E2FDBC ADRP X8, 0xFFFFFFFFFCCBE000
	0x03E2FDC0 ADRP X9, 0xFFFFFFFFFCCBB000
	0x03E2FDC4 ADD X8, X8, 0xE20
	0x03E2FDC8 FCMP S0, S2
	0x03E2FDCC STP S0, S1, [X0 + 0x2C]
	0x03E2FDD0 B.LE 0x3E2FDF0
	0x03E2FDD4 LDR V3, [X9 + 0x17C]
	0x03E2FDD8 FCMP S0, S3
	0x03E2FDDC B.PL 0x3E2FDF0
	0x03E2FDE0 FCMP S0, 0x0
	0x03E2FDE4 CSET W10, GE
	0x03E2FDE8 LDR V0, [X8, W10, UXTW]
	0x03E2FDEC STR S0, [X0 + 0x2C]
	0x03E2FDF0 FCMP S1, S2
	0x03E2FDF4 B.LE 0x3E2FE14
	0x03E2FDF8 LDR V0, [X9 + 0x17C]
	0x03E2FDFC FCMP S1, S0
	0x03E2FE00 B.PL 0x3E2FE14
	0x03E2FE04 FCMP S1, 0x0
	0x03E2FE08 CSET W9, GE
	0x03E2FE0C LDR V0, [X8, W9, UXTW]
	0x03E2FE10 STR S0, [X0 + 0x30]
	0x03E2FE14 RET
	0x03E2FE18 LDR W0, [X0 + 0x34]
	0x03E2FE1C RET
	0x03E2FE20 STR W1, [X0 + 0x34]
	0x03E2FE24 RET
	0x03E2FE28 LDR V0, [X0 + 0x38]
	0x03E2FE2C RET
	0x03E2FE30 STR S0, [X0 + 0x38]
	0x03E2FE34 RET
	0x03E2FE38 LDR W0, [X0 + 0x3C]
	0x03E2FE3C RET
	0x03E2FE40 STR W1, [X0 + 0x3C]
	0x03E2FE44 RET
	0x03E2FE48 LDR V0, [X0 + 0x40]
	0x03E2FE4C RET
	0x03E2FE50 STR S0, [X0 + 0x40]
	0x03E2FE54 RET
	0x03E2FE58 LDR V0, [X0 + 0x44]
	0x03E2FE5C RET
	0x03E2FE60 FMOV S1, 1
	0x03E2FE64 FMAX S0, S0, S1
	0x03E2FE68 STR S0, [X0 + 0x44]
	0x03E2FE6C RET
	0x03E2FE70 LDR V0, [X0 + 0x48]
	0x03E2FE74 RET
	0x03E2FE78 STR S0, [X0 + 0x48]
	0x03E2FE7C RET
	0x03E2FE80 ADRP X8, 0xFFFFFFFFFCCBE000
	0x03E2FE84 LDR V0, [X8 + 0xE28]
	0x03E2FE88 ADRP X8, 0xFFFFFFFFFCCBF000
	0x03E2FE8C LDR V1, [X8 + 0x5B0]
	0x03E2FE90 MOVZ W8, 0x42C00000
	0x03E2FE94 UNIMPLEMENTED
	0x03E2FE98 ADRP X8, 0xFFFFFFFFFCCBF000
	0x03E2FE9C STUR D0, [X0 + 0x24]
	0x03E2FEA0 LDR V0, [X8 + 0x3E8]
	0x03E2FEA4 MOVZ W8, 0x3
	0x03E2FEA8 STR W8, [X0 + 0x3C]
	0x03E2FEAC MOVZ W8, 0x3F800000
	0x03E2FEB0 MOV X1, X31
	0x03E2FEB4 STR D2, [X0 + 0x40]
	0x03E2FEB8 STUR D1, [X0 + 0x2C]
	0x03E2FEBC STR W8, [X0 + 0x48]
	0x03E2FEC0 STR D0, [X0 + 0x58]
	0x03E2FEC4 B 0x3E4E160
	0x03E2FEC8 STP X30, X23, [X31 - 0x30]!
	0x03E2FECC STP X22, X21, [X31 + 0x10]
	0x03E2FED0 STP X20, X19, [X31 + 0x20]
	0x03E2FED4 ADRP X23, 0x5B9000
	0x03E2FED8 ADRP X22, 0x31A000
	0x03E2FEDC ADRP X21, 0x32A000
	0x03E2FEE0 ADRP X20, 0x33C000
	0x03E2FEE4 LDRB W8, [X23 + 0x713]
	0x03E2FEE8 LDR X22, [X22 + 0x560]
	0x03E2FEEC LDR X21, [X21 + 0x430]
	0x03E2FEF0 LDR X20, [X20 + 0x40]
	0x03E2FEF4 MOV X19, X0
	0x03E2FEF8 TBNZ X8, 0x0, 0x3E2FF28
	0x03E2FEFC ADRP X0, 0x33C000
	0x03E2FF00 LDR X0, [X0 + 0x40]
	0x03E2FF04 BL 0x1C16CF4
	0x03E2FF08 ADRP X0, 0x31A000
	0x03E2FF0C LDR X0, [X0 + 0x560]
	0x03E2FF10 BL 0x1C16CF4
	0x03E2FF14 ADRP X0, 0x32A000
	0x03E2FF18 LDR X0, [X0 + 0x430]
	0x03E2FF1C BL 0x1C16CF4
	0x03E2FF20 MOVZ W8, 0x1
	0x03E2FF24 STRB W8, [X23 + 0x713]
	0x03E2FF28 MOV X0, X19
	0x03E2FF2C MOV X1, X31
	0x03E2FF30 BL 0x3E4BDBC
	0x03E2FF34 LDR X1, [X22]
	0x03E2FF38 MOV X0, X19
	0x03E2FF3C BL 0x21A3894
	0x03E2FF40 LDR X8, [X19]
	0x03E2FF44 STR X0, [X19 + 0x50]
	0x03E2FF48 MOV X0, X19
	0x03E2FF4C LDR X9, [X8 + 0x248]
	0x03E2FF50 LDR X1, [X8 + 0x250]
	0x03E2FF54 BLR X9
	0x03E2FF58 LDR X0, [X21]
	0x03E2FF5C BL 0x1C16F10
	0x03E2FF60 LDR X2, [X20]
	0x03E2FF64 MOV X1, X19
	0x03E2FF68 MOV X3, X31
	0x03E2FF6C MOV X20, X0
	0x03E2FF70 BL 0x3E251A8
	0x03E2FF74 MOV X0, X20
	0x03E2FF78 LDP X20, X19, [X31 + 0x20]
	0x03E2FF7C LDP X22, X21, [X31 + 0x10]
	0x03E2FF80 MOV X1, X31
	0x03E2FF84 LDP X30, X23, [X31], #0x30
	0x03E2FF88 B 0x3E241D4
	0x03E2FF8C LDR X8, [X0]
	0x03E2FF90 LDR X2, [X8 + 0x248]
	0x03E2FF94 LDR X1, [X8 + 0x250]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x5BA000
	010 Move W8, [X20+1802]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x31B000
	017 Move X0, [X0+1720]
	018 Call 0x1C17CF4
	019 Move X0, 0x2CE000
	020 Move X0, [X0+2464]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1802], W8
	024 Move [X31+40], X31
	025 Move [X31+8], X31
	026 Move W8, [X19+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X19+40]
	029 Move TEMP, 0
	030 Not TEMP
	031 Move W8, TEMP
	032 Move [X19+16], W8
	033 Compare X20, 0
	034 JumpIfEqual {167}
	035 Move W8, [X20+466]
	036 Compare W8, 0
	037 JumpIfEqual {114}
	038 Move W8, [X20+467]
	039 Compare W8, 0
	040 JumpIfEqual {114}
	041 Move X21, 0x5AB000
	042 Move W8, [X21+1935]
	043 Compare W8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, 0x2CD000
	046 Move X0, [X0+3848]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1935], W8
	050 Move X8, 0x2CD000
	051 Move X8, [X8+3848]
	052 Add X1, X31, 40
	053 Move X2, X31
	054 Move X8, [X8]
	055 Move X8, [X8+184]
	056 Move V0, [X8]
	057 Move [X31+40], D0
	058 Move X0, [X19+32]
	059 Call MultipleDisplayUtilities.GetRelativeMousePositionForDrag, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {114}
	064 Move X0, [X20+264]
	065 Compare X0, 0
	066 JumpIfEqual {167}
	067 Move X1, X31
	068 Call Graphic.get_rectTransform, X0
	069 Move X8, [X19+32]
	070 Compare X8, 0
	071 JumpIfEqual {167}
	072 Move S8, [X31+40]
	073 Move S9, [X31+44]
	074 Move X21, X0
	075 Move X0, X8
	076 Move X1, X31
	077 Call PointerEventData.get_pressEventCamera, X0
	078 Move X8, 0x31B000
	079 Move X8, [X8+1720]
	080 Move X22, X0
	081 Move X8, [X8]
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Add X2, X31, 8
	088 Move X0, X21
	089 Move V0, V8
	090 Move V1, V9
	091 Move X1, X22
	092 Move X3, X31
	093 Call RectTransformUtility.ScreenPointToLocalPointInRectangle, X0, X1, X2, X3
	094 Move X0, [X20+264]
	095 Compare X0, 0
	096 JumpIfEqual {167}
	097 Move X1, X31
	098 Call Graphic.get_rectTransform, X0
	099 Compare X0, 0
	100 JumpIfEqual {167}
	101 Move X1, X31
	102 Call RectTransform.get_rect, X0
	103 Move W8, [X20+296]
	104 Subtract W8, W8, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move V0, [X31+12]
	107 Add S2, S3, S1
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 Move W1, 1
	110 Move W2, 1
	111 Move X0, X20
	112 Call InputField.MoveUp, X0, X1, X2
	113 Move W0, W31
	114 Move W0, W31
	115 Move [X20+496], X31
	116 Move X20, [X31+64]
	117 Move X19, [X31+72]
	118 Move X22, [X31+48]
	119 Move X21, [X31+56]
	120 Move X30, [X31+32]
	121 Move D9, [X31+16]
	122 Move D8, [X31+24]
	123 Add X31, X31, 80
	124 Return X0
	125 Move V1, [X31+8]
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move W1, 1
	128 Move X0, X20
	129 Move W2, W31
	130 Call InputField.MoveLeft, X0, X1, X2
	131 NotImplemented "Instruction FCMP not yet implemented."
	132 Move W1, 1
	133 Move W2, 1
	134 Move X0, X20
	135 Call InputField.MoveDown, X0, X1, X2
	136 Add S0, S2, S0
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 Move W1, 1
	139 Move X0, X20
	140 Move W2, W31
	141 Call InputField.MoveRight, X0, X1, X2
	142 Move X0, X20
	143 Call InputField.UpdateLabel, X0
	144 Move W8, [X20+296]
	145 Move X9, -53743616
	146 Add X9, X9, 1856
	147 Move X21, [X20+520]
	148 Subtract W8, W8, 1
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSET not yet implemented."
	151 Move V8, [X9]
	152 Compare X21, 0
	153 JumpIfEqual {155}
	154 Move [X21+16], S8
	155 Move X8, 0x2CE000
	156 Move X8, [X8+2464]
	157 Move X0, [X8]
	158 Call 0x1C17F10
	159 Move V0, V8
	160 Move X1, X31
	161 Move X21, X0
	162 Call WaitForSecondsRealtime..ctor, X0, V0
	163 Move [X20+520], X21
	164 Move W0, 1
	165 Move [X19+24], X21
	166 Move [X19+16], W0
	167 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x03E2FF98 BR X2
	0x03E2FF9C STR X30, [X31 - 0x30]!

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03E2FFA0 STP X22, X21, [X31 + 0x10]
	0x03E2FFA4 STP X20, X19, [X31 + 0x20]
	0x03E2FFA8 ADRP X22, 0x5B9000
	0x03E2FFAC ADRP X21, 0x32A000
	0x03E2FFB0 ADRP X20, 0x33C000
	0x03E2FFB4 LDRB W8, [X22 + 0x714]
	0x03E2FFB8 LDR X21, [X21 + 0x430]
	0x03E2FFBC LDR X20, [X20 + 0x40]
	0x03E2FFC0 MOV X19, X0
	0x03E2FFC4 TBNZ X8, 0x0, 0x3E2FFE8
	0x03E2FFC8 ADRP X0, 0x33C000
	0x03E2FFCC LDR X0, [X0 + 0x40]
	0x03E2FFD0 BL 0x1C16CF4
	0x03E2FFD4 ADRP X0, 0x32A000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x2C5000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x33D000
	011 Move X0, [X0+40]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03E2FFD8 LDR X0, [X0 + 0x430]
	0x03E2FFDC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

