Type: UnityEngine.UI.RawImage

Method: System.Void .ctor()

Disassembly:
	0x03E3A130 ADRP X0, 0x331000
	0x03E3A134 LDR X0, [X0 + 0x280]
	0x03E3A138 BL 0x1C16CF4
	0x03E3A13C MOVZ W8, 0x1
	0x03E3A140 STRB W8, [X20 + 0x78C]
	0x03E3A144 MOV X0, X19
	0x03E3A148 MOV X1, X31
	0x03E3A14C BL 0x3E4BDC4
	0x03E3A150 LDR X0, [X19 + 0x38]
	0x03E3A154 CBZ X0, 0x3E3A1CC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, -53800960
	004 Move V0, [X8+188]
	005 Move X1, X31
	006 Move X19, X0
	007 Move [X0+14], V0
	008 Call MaskableGraphic..ctor, X0
	009 Move [X19+160], W31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: UnityEngine.Texture get_mainTexture()

Disassembly:
	0x03E3A158 ADRP X8, 0x331000
	0x03E3A15C LDR X8, [X8 + 0x2C8]
	0x03E3A160 LDR X1, [X8]
	0x03E3A164 BL 0x2DBE450
	0x03E3A168 LDR X0, [X19 + 0x30]
	0x03E3A16C CBZ X0, 0x3E3A1CC
	0x03E3A170 ADRP X8, 0x331000
	0x03E3A174 LDR X8, [X8 + 0x2D0]
	0x03E3A178 LDR X1, [X8]
	0x03E3A17C BL 0x2DBE450
	0x03E3A180 LDR X8, [X19 + 0x48]
	0x03E3A184 CBZ X8, 0x3E3A1CC
	0x03E3A188 LDP W2, W9, [X8 + 0x18]
	0x03E3A18C ADD W9, W9, 0x1
	0x03E3A190 CMP W2, 0x1
	0x03E3A194 STP W31, W9, [X8 + 0x18]
	0x03E3A198 B.LT 0x3E3A1AC
	0x03E3A19C LDR X0, [X8 + 0x10]
	0x03E3A1A0 MOV W1, W31
	0x03E3A1A4 MOV X3, X31
	0x03E3A1A8 BL 0x339FA34
	0x03E3A1AC MOV X0, X19
	0x03E3A1B0 MOV X1, X31
	0x03E3A1B4 BL 0x3CD26E8
	0x03E3A1B8 MOV X0, X19
	0x03E3A1BC LDP X20, X19, [X31 + 0x10]
	0x03E3A1C0 MOV X1, X31
	0x03E3A1C4 LDR X30, [X31], #0x20
	0x03E3A1C8 B 0x3E380DC
	0x03E3A1CC BL 0x1C16F20
	0x03E3A1D0 STP X30, X19, [X31 - 0x10]!
	0x03E3A1D4 MOV X1, X31
	0x03E3A1D8 MOV X19, X0
	0x03E3A1DC BL 0x3CD268C
	0x03E3A1E0 MOV X0, X19
	0x03E3A1E4 MOV X1, X31
	0x03E3A1E8 LDP X30, X19, [X31], #0x10
	0x03E3A1EC B 0x3E5AD84
	0x03E3A1F0 STP D13, D12, [X31 - 0x50]!
	0x03E3A1F4 STP D11, D10, [X31 + 0x10]
	0x03E3A1F8 STP D9, D8, [X31 + 0x20]
	0x03E3A1FC STP X30, X21, [X31 + 0x30]
	0x03E3A200 STP X20, X19, [X31 + 0x40]
	0x03E3A204 ADRP X21, 0x5AE000
	0x03E3A208 LDRB W8, [X21 + 0x78D]
	0x03E3A20C MOV X19, X1
	0x03E3A210 MOV V8.16B, V1.16B
	0x03E3A214 MOV V9.16B, V0.16B
	0x03E3A218 MOV X20, X0
	0x03E3A21C TBNZ X8, 0x0, 0x3E3A234
	0x03E3A220 ADRP X0, 0x30F000
	0x03E3A224 LDR X0, [X0 + 0x6B8]
	0x03E3A228 BL 0x1C16CF4
	0x03E3A22C MOVZ W8, 0x1
	0x03E3A230 STRB W8, [X21 + 0x78D]
	0x03E3A234 MOV X0, X20
	0x03E3A238 MOV X1, X31
	0x03E3A23C BL 0x3C32454
	0x03E3A240 TBZ X0, 0x0, 0x3E3A2B0
	0x03E3A244 ADRP X21, 0x30F000
	0x03E3A248 LDR X21, [X21 + 0x6B8]
	0x03E3A24C MOV X0, X20
	0x03E3A250 BL 0x3E39F10
	0x03E3A254 LDR X8, [X21]
	0x03E3A258 LDP S13, S11, [X20 + 0x64]
	0x03E3A25C LDP S12, S10, [X20 + 0x6C]
	0x03E3A260 MOV X20, X0
	0x03E3A264 LDR W9, [X8 + 0xE0]
	0x03E3A268 CBNZ W9, 0x3E3A274
	0x03E3A26C MOV X0, X8
	0x03E3A270 BL 0x1C16DFC
	0x03E3A274 MOV X0, X20
	0x03E3A278 MOV V0.16B, V9.16B
	0x03E3A27C MOV V1.16B, V8.16B
	0x03E3A280 MOV X1, X19
	0x03E3A284 MOV V3.16B, V11.16B
	0x03E3A288 MOV V5.16B, V10.16B
	0x03E3A28C LDP X20, X19, [X31 + 0x40]
	0x03E3A290 LDP X30, X21, [X31 + 0x30]
	0x03E3A294 LDP D9, D8, [X31 + 0x20]
	0x03E3A298 LDP D11, D10, [X31 + 0x10]
	0x03E3A29C MOV V2.16B, V13.16B
	0x03E3A2A0 MOV V4.16B, V12.16B
	0x03E3A2A4 MOV X2, X31
	0x03E3A2A8 LDP D13, D12, [X31], #0x50
	0x03E3A2AC B 0x3E23410

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5AF000
	006 Move X21, 0x2BA000
	007 Move W8, [X20+1925]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x320000
	015 Move X0, [X0+280]
	016 Call 0x1C17CF4
	017 Move X0, 0x2BA000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1925], W8
	022 Move X0, [X21]
	023 Move X20, [X19+216]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {94}
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X9, [X8+824]
	039 Move X1, [X8+832]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X21]
	042 Move X20, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {95}
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+824]
	059 Move X1, [X8+832]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X0, 0
	062 JumpIfEqual {110}
	063 Move X1, X31
	064 Call Material.get_mainTexture, X0
	065 Move X8, [X21]
	066 Move X20, X0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Inequality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {95}
	080 Move X8, [X19]
	081 Move X0, X19
	082 Move X9, [X8+824]
	083 Move X1, [X8+832]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X0, 0
	086 JumpIfEqual {110}
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X1, X31
	090 Move X30, [X31+32]
	091 Move X21, [X31+40]
	092 Call Material.get_mainTexture, X0
	093 Return X0
	094 Move X0, [X19+216]
	095 Move X19, 0x320000
	096 Move X19, [X19+280]
	097 Move X0, [X19]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X19]
	103 Move X8, [X0+184]
	104 Move X0, [X8+8]
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X30, [X31+32]
	108 Move X21, [X31+40]
	109 Return X0
	110 Call 0x1C17F20

Method: UnityEngine.Texture get_texture()

Disassembly:
	0x03E3A2B0 LDP X20, X19, [X31 + 0x40]
	0x03E3A2B4 LDP X30, X21, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+216]
	002 Return X0

Method: System.Void set_texture(UnityEngine.Texture value)

Disassembly:
	0x03E3A2B8 LDP D9, D8, [X31 + 0x20]
	0x03E3A2BC LDP D11, D10, [X31 + 0x10]
	0x03E3A2C0 MOVZ W0, 0x1
	0x03E3A2C4 LDP D13, D12, [X31], #0x50
	0x03E3A2C8 RET
	0x03E3A2CC STP X30, X23, [X31 - 0x30]!
	0x03E3A2D0 STP X22, X21, [X31 + 0x10]
	0x03E3A2D4 STP X20, X19, [X31 + 0x20]
	0x03E3A2D8 MOV X19, X0
	0x03E3A2DC BL 0x3E39F10
	0x03E3A2E0 CBZ X0, 0x3E3A3C0
	0x03E3A2E4 LDR X1, [X19 + 0x88]
	0x03E3A2E8 MOV X2, X31
	0x03E3A2EC BL 0x3C3F058
	0x03E3A2F0 MOV X0, X19
	0x03E3A2F4 BL 0x3E39D6C
	0x03E3A2F8 CBZ X0, 0x3E3A388
	0x03E3A2FC MOV X0, X19
	0x03E3A300 BL 0x3E39D6C
	0x03E3A304 CBZ X0, 0x3E3A3C0
	0x03E3A308 MOV X1, X31
	0x03E3A30C BL 0x3E24BA4
	0x03E3A310 CBZ X0, 0x3E3A3C0
	0x03E3A314 MOV X20, X0
	0x03E3A318 MOV X21, X31
	0x03E3A31C MOV X22, X31
	0x03E3A320 LDR X23, [X19 + 0x88]
	0x03E3A324 MOV X0, X20
	0x03E3A328 MOV X1, X31
	0x03E3A32C BL 0x3C32E90
	0x03E3A330 LDR X8, [X19 + 0x88]
	0x03E3A334 CBZ X8, 0x3E3A3C0
	0x03E3A338 LDR W9, [X8 + 0x18]
	0x03E3A33C CMP X22, X9
	0x03E3A340 B.CS 0x3E3A3C4
	0x03E3A344 CBZ X0, 0x3E3A3C0
	0x03E3A348 ADD X8, X8, X21
	0x03E3A34C LDP S1, S2, [X8 + 0x24]
	0x03E3A350 LDR V0, [X8 + 0x20]
	0x03E3A354 MOV X1, X31
	0x03E3A358 BL 0x3C40B58
	0x03E3A35C CBZ X23, 0x3E3A3C0
	0x03E3A360 LDR W8, [X23 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5AF000
	007 Move X21, 0x2BA000
	008 Move W8, [X22+1926]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2BA000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1926], W8
	021 Move X0, [X21]
	022 Move X21, [X19+216]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {41}
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Move X8, [X19]
	042 Move [X19+216], X20
	043 Move X0, X19
	044 Move X9, [X8+760]
	045 Move X1, [X8+768]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X2, [X8+776]
	054 Move X1, [X8+784]
	055 Move X30, [X31+48]
	056 CallNoReturn X2

Method: UnityEngine.Rect get_uvRect()

Disassembly:
	0x03E3A364 CMP X22, X8
	0x03E3A368 B.CS 0x3E3A3C4
	0x03E3A36C ADD X22, X22, 0x1

ISIL:
	001 Move S0, [X0+224]
	002 Move S1, [X0+228]
	003 Move S2, [X0+232]
	004 Move S3, [X0+236]
	005 Return X0

Method: System.Void set_uvRect(UnityEngine.Rect value)

Disassembly:
	0x03E3A370 ADD X8, X23, X21
	0x03E3A374 CMP X22, 0x4
	0x03E3A378 ADD X21, X21, 0xC
	0x03E3A37C STP S0, S1, [X8 + 0x20]
	0x03E3A380 STR S2, [X8 + 0x28]
	0x03E3A384 B.NE 0x3E3A320
	0x03E3A388 LDR X8, [X19 + 0x88]
	0x03E3A38C CBZ X8, 0x3E3A3C0
	0x03E3A390 LDR W9, [X8 + 0x18]
	0x03E3A394 CBZ W9, 0x3E3A3C4
	0x03E3A398 CMP W9, 0x2
	0x03E3A39C B.LS 0x3E3A3C4
	0x03E3A3A0 LDP S0, S1, [X8 + 0x20]
	0x03E3A3A4 LDP S2, S3, [X8 + 0x38]
	0x03E3A3A8 LDP X20, X19, [X31 + 0x20]
	0x03E3A3AC LDP X22, X21, [X31 + 0x10]
	0x03E3A3B0 FSUB S2, S2, S0
	0x03E3A3B4 FSUB S3, S3, S1
	0x03E3A3B8 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move V4, [X0+224]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V4, [X0+236]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move V4, [X0+232]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move V4, [X0+228]
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Return 
	010 Move X8, [X0]
	011 Move [X0+224], S0
	012 Move [X0+232], S1
	013 Move [X0+232], S2
	014 Move [X0+240], S3
	015 Move X2, [X8+760]
	016 Move X1, [X8+768]
	017 CallNoReturn X2

Method: System.Void SetNativeSize()

Disassembly:
	0x03E3A3BC RET
	0x03E3A3C0 BL 0x1C16F20
	0x03E3A3C4 BL 0x1C16F28
	0x03E3A3C8 SUB X31, X31, 0xC0
	0x03E3A3CC STP D11, D10, [X31 + 0x60]
	0x03E3A3D0 STP D9, D8, [X31 + 0x70]
	0x03E3A3D4 STR X30, [X31 + 0x80]
	0x03E3A3D8 STP X24, X23, [X31 + 0x90]
	0x03E3A3DC STP X22, X21, [X31 + 0xA0]
	0x03E3A3E0 STP X20, X19, [X31 + 0xB0]
	0x03E3A3E4 ADRP X20, 0x5AE000
	0x03E3A3E8 LDRB W8, [X20 + 0x78E]
	0x03E3A3EC MOV X19, X0
	0x03E3A3F0 TBNZ X8, 0x0, 0x3E3A468
	0x03E3A3F4 ADRP X0, 0x331000
	0x03E3A3F8 LDR X0, [X0 + 0x2D8]
	0x03E3A3FC BL 0x1C16CF4
	0x03E3A400 ADRP X0, 0x331000
	0x03E3A404 LDR X0, [X0 + 0x2E0]
	0x03E3A408 BL 0x1C16CF4
	0x03E3A40C ADRP X0, 0x331000
	0x03E3A410 LDR X0, [X0 + 0x2E8]
	0x03E3A414 BL 0x1C16CF4
	0x03E3A418 ADRP X0, 0x331000
	0x03E3A41C LDR X0, [X0 + 0x2F0]
	0x03E3A420 BL 0x1C16CF4
	0x03E3A424 ADRP X0, 0x331000
	0x03E3A428 LDR X0, [X0 + 0x2F8]
	0x03E3A42C BL 0x1C16CF4
	0x03E3A430 ADRP X0, 0x331000
	0x03E3A434 LDR X0, [X0 + 0x300]
	0x03E3A438 BL 0x1C16CF4
	0x03E3A43C ADRP X0, 0x331000
	0x03E3A440 LDR X0, [X0 + 0x308]
	0x03E3A444 BL 0x1C16CF4
	0x03E3A448 ADRP X0, 0x331000
	0x03E3A44C LDR X0, [X0 + 0x310]
	0x03E3A450 BL 0x1C16CF4
	0x03E3A454 ADRP X0, 0x331000
	0x03E3A458 LDR X0, [X0 + 0x260]
	0x03E3A45C BL 0x1C16CF4
	0x03E3A460 MOVZ W8, 0x1
	0x03E3A464 STRB W8, [X20 + 0x78E]
	0x03E3A468 MOV X0, X19
	0x03E3A46C STP X31, X31, [X31 + 0x40]
	0x03E3A470 STR X31, [X31 + 0x50]
	0x03E3A474 STP X31, X31, [X31 + 0x20]
	0x03E3A478 STR X31, [X31 + 0x30]
	0x03E3A47C BL 0x3E39D6C
	0x03E3A480 CBZ X0, 0x3E3A9F8
	0x03E3A484 LDRB W8, [X19 + 0x40]
	0x03E3A488 CBZ W8, 0x3E3A4A0
	0x03E3A48C LDR X1, [X19 + 0x48]
	0x03E3A490 MOV X0, X19
	0x03E3A494 MOV X2, X31
	0x03E3A498 BL 0x3E38490
	0x03E3A49C STRB W31, [X19 + 0x40]
	0x03E3A4A0 MOVZ W8, 0x1
	0x03E3A4A4 STRB W8, [X31 + 0x8C]
	0x03E3A4A8 LDR X0, [X19 + 0x48]
	0x03E3A4AC ADD X1, X31, 0x8C
	0x03E3A4B0 MOV X2, X31
	0x03E3A4B4 BL 0x3CD2744
	0x03E3A4B8 MOV X0, X19
	0x03E3A4BC MOV V10.16B, V0.16B
	0x03E3A4C0 MOV V11.16B, V1.16B
	0x03E3A4C4 MOV V8.16B, V2.16B
	0x03E3A4C8 MOV V9.16B, V3.16B
	0x03E3A4CC BL 0x3E39D6C
	0x03E3A4D0 CBZ X0, 0x3E3AA18
	0x03E3A4D4 MOV X1, X31
	0x03E3A4D8 BL 0x3E24BA4
	0x03E3A4DC CBZ X0, 0x3E3AA18
	0x03E3A4E0 MOV X1, X31
	0x03E3A4E4 BL 0x3E244BC
	0x03E3A4E8 CMP W0, 0x1
	0x03E3A4EC B.HI 0x3E3A598
	0x03E3A4F0 MOV X0, X19
	0x03E3A4F4 BL 0x3E3A2CC
	0x03E3A4F8 FADD S5, S10, S8
	0x03E3A4FC FADD S4, S11, S9
	0x03E3A500 FSUB S6, S10, S5
	0x03E3A504 FCMP S10, S5
	0x03E3A508 FADD S7, S2, S0
	0x03E3A50C FCSEL S16, S6, S8, GT
	0x03E3A510 FCSEL S6, S5, S10, GT
	0x03E3A514 FCMP S11, S4
	0x03E3A518 FSUB S17, S0, S7
	0x03E3A51C FCSEL S5, S4, S11, GT
	0x03E3A520 FCMP S0, S7
	0x03E3A524 FCSEL S2, S17, S2, GT
	0x03E3A528 FADD S17, S3, S1
	0x03E3A52C FCSEL S7, S7, S0, GT
	0x03E3A530 FSUB S0, S1, S17
	0x03E3A534 FCMP S1, S17
	0x03E3A538 FCSEL S3, S0, S3, GT
	0x03E3A53C FCSEL S0, S17, S1, GT
	0x03E3A540 FADD S1, S0, S3
	0x03E3A544 FCMP S1, S5
	0x03E3A548 B.LE 0x3E3A57C
	0x03E3A54C FADD S1, S6, S16
	0x03E3A550 FCMP S7, S1
	0x03E3A554 B.PL 0x3E3A57C
	0x03E3A558 FADD S1, S7, S2
	0x03E3A55C FCMP S1, S6
	0x03E3A560 B.LE 0x3E3A57C
	0x03E3A564 FSUB S1, S11, S4
	0x03E3A568 FCMP S11, S4
	0x03E3A56C FCSEL S1, S1, S9, GT
	0x03E3A570 FADD S1, S5, S1
	0x03E3A574 FCMP S0, S1
	0x03E3A578 B.MI 0x3E3A598
	0x03E3A57C MOV X0, X31
	0x03E3A580 BL 0x3C0B398
	0x03E3A584 MOV V10.16B, V0.16B
	0x03E3A588 MOV V11.16B, V1.16B
	0x03E3A58C MOV V8.16B, V2.16B
	0x03E3A590 MOV V9.16B, V3.16B
	0x03E3A594 STRB W31, [X31 + 0x8C]
	0x03E3A598 LDR V0, [X19 + 0x50]
	0x03E3A59C ADRP X22, 0x331000
	0x03E3A5A0 LDR X22, [X22 + 0x2E0]
	0x03E3A5A4 FCMP S10, S0
	0x03E3A5A8 B.NE 0x3E3A6A8
	0x03E3A5AC LDR V0, [X19 + 0x5C]
	0x03E3A5B0 FCMP S9, S0
	0x03E3A5B4 B.NE 0x3E3A6A8
	0x03E3A5B8 LDR V0, [X19 + 0x58]
	0x03E3A5BC FCMP S8, S0
	0x03E3A5C0 B.NE 0x3E3A6A8
	0x03E3A5C4 LDR V0, [X19 + 0x54]
	0x03E3A5C8 FCMP S11, S0
	0x03E3A5CC B.NE 0x3E3A6A8
	0x03E3A5D0 LDRB W8, [X19 + 0x60]
	0x03E3A5D4 CBZ W8, 0x3E3A958
	0x03E3A5D8 LDR X0, [X19 + 0x38]
	0x03E3A5DC CBZ X0, 0x3E3AA18
	0x03E3A5E0 ADRP X8, 0x331000
	0x03E3A5E4 LDR X8, [X8 + 0x308]
	0x03E3A5E8 LDR X1, [X8]
	0x03E3A5EC ADD X8, X31, 0x8
	0x03E3A5F0 BL 0x2DBE924
	0x03E3A5F4 LDUR V0, [X31 + 0x8]
	0x03E3A5F8 LDR X8, [X31 + 0x18]
	0x03E3A5FC ADRP X21, 0x331000
	0x03E3A600 LDR X21, [X21 + 0x2F0]
	0x03E3A604 STR V0, [X31 + 0x4]
	0x03E3A608 STR X8, [X31 + 0x50]
	0x03E3A60C ADRP X23, 0x331000
	0x03E3A610 LDR X23, [X23 + 0x260]
	0x03E3A614 LDR X1, [X21]
	0x03E3A618 ADD X0, X31, 0x40
	0x03E3A61C BL 0x2BC3C64
	0x03E3A620 TBZ X0, 0x0, 0x3E3A82C
	0x03E3A624 LDR X20, [X31 + 0x50]
	0x03E3A628 CBZ X20, 0x3E3A904
	0x03E3A62C LDR X8, [X20]
	0x03E3A630 LDRB W24, [X31 + 0x8C]
	0x03E3A634 LDR X1, [X23]
	0x03E3A638 LDRH W9, [X8 + 0x12E]
	0x03E3A63C CBZ X9, 0x3E3A660
	0x03E3A640 LDR X10, [X8 + 0xB0]
	0x03E3A644 ADD X10, X10, 0x8
	0x03E3A648 LDUR X11, [X10 - 0x8]
	0x03E3A64C CMP X11, X1
	0x03E3A650 B.EQ 0x3E3A670
	0x03E3A654 SUBS X9, X9, 0x1
	0x03E3A658 ADD X10, X10, 0x10
	0x03E3A65C B.NE 0x3E3A648
	0x03E3A660 MOVZ W2, 0x4
	0x03E3A664 MOV X0, X20
	0x03E3A668 BL 0x1C5C788
	0x03E3A66C B 0x3E3A680

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D10
	003 Move [X31+24], D9
	004 Move [X31+32], D8
	005 Move [X31+40], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x5AF000
	011 Move X20, 0x2BA000
	012 Move W8, [X21+1927]
	013 Move X20, [X20+1432]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x2BA000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1927], W8
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+872]
	027 Move X1, [X8+880]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X20]
	030 Move X20, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {79}
	044 Compare X20, 0
	045 JumpIfEqual {188}
	046 Move X8, [X20]
	047 Move X0, X20
	048 Move X9, [X8+392]
	049 Move X1, [X8+400]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X21, 0x5A0000
	052 Move W8, [X21+1495]
	053 Move V8, [X19+232]
	054 NotImplemented "Instruction SCVTF not yet implemented."
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x2BA000
	058 Move X0, [X0+1448]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X21+1495], W8
	062 Move X22, 0x2BA000
	063 Move X22, [X22+1448]
	064 Multiply S9, S8, S9
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 NotImplemented "Instruction FCVT not yet implemented."
	071 Add X0, X31, 8
	072 Move V0, V8
	073 Call 0x3EB2C00
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move D1, -0.5
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move V0, [X31+8]
	078 Move D1, -1
	079 Move X20, [X31+64]
	080 Move X19, [X31+72]
	081 Move X22, [X31+48]
	082 Move X21, [X31+56]
	083 Move X30, [X31+40]
	084 Move D9, [X31+24]
	085 Move D8, [X31+32]
	086 Move V10, [X31+16]
	087 Add X31, X31, 80
	088 Return 
	089 Move D1, 0.5
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move V0, [X31+8]
	092 Move D1, 1
	093 NotImplemented "Instruction FCVTZS not yet implemented."
	094 Add D1, D0, D1
	095 And X31, X8, 1
	096 NotImplemented "Instruction FCSEL not yet implemented."
	097 Add D0, D8, D1
	098 NotImplemented "Instruction FRINTP not yet implemented."
	099 Add D0, D8, D1
	100 NotImplemented "Instruction FRINTM not yet implemented."
	101 Move X8, [X20]
	102 Move X0, X20
	103 Move X9, [X8+424]
	104 Move X1, [X8+432]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move W8, [X21+1495]
	107 Move V8, [X19+236]
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 Compare W8, 0
	110 JumpIfNotEqual {116}
	111 Move X0, 0x2BA000
	112 Move X0, [X0+1448]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X21+1495], W8
	116 Move X0, [X22]
	117 Multiply S10, S8, S10
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 NotImplemented "Instruction FCVT not yet implemented."
	123 Add X0, X31, 8
	124 Move V0, V8
	125 Call 0x3EB2C00
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move D1, -0.5
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Move V0, [X31+8]
	130 Move D1, -1
	131 Move D1, 0.5
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 Move V0, [X31+8]
	134 Move D1, 1
	135 NotImplemented "Instruction FCVTZS not yet implemented."
	136 Add D1, D0, D1
	137 And X31, X8, 1
	138 NotImplemented "Instruction FCSEL not yet implemented."
	139 Add D0, D8, D1
	140 NotImplemented "Instruction FRINTP not yet implemented."
	141 Add D0, D8, D1
	142 NotImplemented "Instruction FRINTM not yet implemented."
	143 Move X0, X19
	144 Move X1, X31
	145 Call Graphic.get_rectTransform, X0
	146 Move X20, X0
	147 Move X0, X19
	148 Move X1, X31
	149 Call Graphic.get_rectTransform, X0
	150 Compare X0, 0
	151 JumpIfEqual {188}
	152 Move X1, X31
	153 Call RectTransform.get_anchorMin, X0
	154 Compare X20, 0
	155 JumpIfEqual {188}
	156 Move X0, X20
	157 Move X1, X31
	158 Call RectTransform.set_anchorMax, X0, X1
	159 Move X0, X19
	160 Move X1, X31
	161 Call Graphic.get_rectTransform, X0
	162 Compare X0, 0
	163 JumpIfEqual {188}
	164 Move X9, 0x7FF00000
	165 NotImplemented "Instruction FCVTZS not yet implemented."
	166 Move D2, X9
	167 Move W9, 0xCF000000
	168 NotImplemented "Instruction SCVTF not yet implemented."
	169 NotImplemented "Instruction FCMP not yet implemented."
	170 Move S3, W9
	171 NotImplemented "Instruction FCVTZS not yet implemented."
	172 NotImplemented "Instruction FCSEL not yet implemented."
	173 NotImplemented "Instruction FCMP not yet implemented."
	174 Move X20, [X31+64]
	175 Move X19, [X31+72]
	176 Move X22, [X31+48]
	177 Move X21, [X31+56]
	178 Move X30, [X31+40]
	179 Move D9, [X31+24]
	180 Move D8, [X31+32]
	181 Move V10, [X31+16]
	182 NotImplemented "Instruction SCVTF not yet implemented."
	183 NotImplemented "Instruction FCSEL not yet implemented."
	184 Move X1, X31
	185 Add X31, X31, 80
	186 Call RectTransform.set_sizeDelta, X0, X1
	187 Return 
	188 Call 0x1C17F20

Method: System.Void OnPopulateMesh(UnityEngine.UI.VertexHelper vh)

Disassembly:
	0x03E3A670 LDR W9, [X10]
	0x03E3A674 ADD W9, W9, 0x4
	0x03E3A678 ADD X8, X8, W9, 0x4, SXTW
	0x03E3A67C ADD X0, X8, 0x138
	0x03E3A680 LDP X8, X2, [X0]
	0x03E3A684 CMP W24, 0x0
	0x03E3A688 CSET W1, NE
	0x03E3A68C MOV X0, X20
	0x03E3A690 MOV V0.16B, V10.16B
	0x03E3A694 MOV V1.16B, V11.16B
	0x03E3A698 MOV V2.16B, V8.16B
	0x03E3A69C MOV V3.16B, V9.16B
	0x03E3A6A0 BLR X8
	0x03E3A6A4 B 0x3E3A614
	0x03E3A6A8 LDR X0, [X19 + 0x38]
	0x03E3A6AC CBZ X0, 0x3E3AA18
	0x03E3A6B0 ADRP X8, 0x331000
	0x03E3A6B4 LDR X8, [X8 + 0x308]
	0x03E3A6B8 LDR X1, [X8]
	0x03E3A6BC ADD X8, X31, 0x8
	0x03E3A6C0 BL 0x2DBE924
	0x03E3A6C4 LDUR V0, [X31 + 0x8]
	0x03E3A6C8 LDR X8, [X31 + 0x18]
	0x03E3A6CC ADRP X21, 0x331000
	0x03E3A6D0 LDR X21, [X21 + 0x2F0]
	0x03E3A6D4 STR V0, [X31 + 0x4]
	0x03E3A6D8 STR X8, [X31 + 0x50]
	0x03E3A6DC ADRP X23, 0x331000
	0x03E3A6E0 LDR X23, [X23 + 0x260]
	0x03E3A6E4 LDR X1, [X21]
	0x03E3A6E8 ADD X0, X31, 0x40
	0x03E3A6EC BL 0x2BC3C64
	0x03E3A6F0 TBZ X0, 0x0, 0x3E3A778
	0x03E3A6F4 LDR X20, [X31 + 0x50]
	0x03E3A6F8 CBZ X20, 0x3E3A8FC
	0x03E3A6FC LDR X8, [X20]
	0x03E3A700 LDRB W24, [X31 + 0x8C]
	0x03E3A704 LDR X1, [X23]
	0x03E3A708 LDRH W9, [X8 + 0x12E]
	0x03E3A70C CBZ X9, 0x3E3A730
	0x03E3A710 LDR X10, [X8 + 0xB0]
	0x03E3A714 ADD X10, X10, 0x8
	0x03E3A718 LDUR X11, [X10 - 0x8]
	0x03E3A71C CMP X11, X1
	0x03E3A720 B.EQ 0x3E3A740
	0x03E3A724 SUBS X9, X9, 0x1
	0x03E3A728 ADD X10, X10, 0x10
	0x03E3A72C B.NE 0x3E3A718
	0x03E3A730 MOVZ W2, 0x4
	0x03E3A734 MOV X0, X20
	0x03E3A738 BL 0x1C5C788
	0x03E3A73C B 0x3E3A750
	0x03E3A740 LDR W9, [X10]
	0x03E3A744 ADD W9, W9, 0x4
	0x03E3A748 ADD X8, X8, W9, 0x4, SXTW
	0x03E3A74C ADD X0, X8, 0x138
	0x03E3A750 LDP X8, X2, [X0]
	0x03E3A754 CMP W24, 0x0
	0x03E3A758 CSET W1, NE
	0x03E3A75C MOV X0, X20
	0x03E3A760 MOV V0.16B, V10.16B
	0x03E3A764 MOV V1.16B, V11.16B
	0x03E3A768 MOV V2.16B, V8.16B
	0x03E3A76C MOV V3.16B, V9.16B
	0x03E3A770 BLR X8
	0x03E3A774 B 0x3E3A6E4
	0x03E3A778 ADRP X8, 0x331000
	0x03E3A77C LDR X8, [X8 + 0x2D8]
	0x03E3A780 ADD X0, X31, 0x40
	0x03E3A784 LDR X1, [X8]
	0x03E3A788 BL 0x2BC3C60
	0x03E3A78C LDR X0, [X19 + 0x30]
	0x03E3A790 CBZ X0, 0x3E3AA18
	0x03E3A794 ADRP X8, 0x331000
	0x03E3A798 LDR X8, [X8 + 0x310]
	0x03E3A79C LDR X1, [X8]
	0x03E3A7A0 ADD X8, X31, 0x8
	0x03E3A7A4 BL 0x2DBE924
	0x03E3A7A8 LDUR V0, [X31 + 0x8]
	0x03E3A7AC LDR X8, [X31 + 0x18]
	0x03E3A7B0 ADRP X21, 0x331000
	0x03E3A7B4 STR V0, [X31 + 0x2]
	0x03E3A7B8 STR X8, [X31 + 0x30]
	0x03E3A7BC LDR X21, [X21 + 0x2E8]
	0x03E3A7C0 LDR X1, [X21]
	0x03E3A7C4 ADD X0, X31, 0x20
	0x03E3A7C8 BL 0x2BC3C64
	0x03E3A7CC TBZ X0, 0x0, 0x3E3A9CC
	0x03E3A7D0 LDR X20, [X31 + 0x30]
	0x03E3A7D4 CBZ X20, 0x3E3A900
	0x03E3A7D8 LDR X8, [X20]
	0x03E3A7DC LDRB W1, [X31 + 0x8C]
	0x03E3A7E0 LDR X9, [X8 + 0x4F8]
	0x03E3A7E4 LDR X2, [X8 + 0x500]
	0x03E3A7E8 MOV X0, X20
	0x03E3A7EC MOV V0.16B, V10.16B
	0x03E3A7F0 MOV V1.16B, V11.16B
	0x03E3A7F4 MOV V2.16B, V8.16B
	0x03E3A7F8 MOV V3.16B, V9.16B
	0x03E3A7FC BLR X9
	0x03E3A800 LDR X8, [X20]
	0x03E3A804 LDRB W1, [X31 + 0x8C]
	0x03E3A808 LDR X9, [X8 + 0x4E8]
	0x03E3A80C LDR X2, [X8 + 0x4F0]
	0x03E3A810 MOV X0, X20
	0x03E3A814 MOV V0.16B, V10.16B
	0x03E3A818 MOV V1.16B, V11.16B
	0x03E3A81C MOV V2.16B, V8.16B
	0x03E3A820 MOV V3.16B, V9.16B
	0x03E3A824 BLR X9
	0x03E3A828 B 0x3E3A7C0
	0x03E3A82C ADRP X8, 0x331000
	0x03E3A830 LDR X8, [X8 + 0x2D8]
	0x03E3A834 ADD X0, X31, 0x40
	0x03E3A838 LDR X1, [X8]
	0x03E3A83C BL 0x2BC3C60
	0x03E3A840 LDR X0, [X19 + 0x30]
	0x03E3A844 CBZ X0, 0x3E3AA18
	0x03E3A848 ADRP X8, 0x331000
	0x03E3A84C LDR X8, [X8 + 0x310]
	0x03E3A850 LDR X1, [X8]
	0x03E3A854 ADD X8, X31, 0x8
	0x03E3A858 BL 0x2DBE924
	0x03E3A85C LDUR V0, [X31 + 0x8]
	0x03E3A860 LDR X8, [X31 + 0x18]
	0x03E3A864 ADRP X21, 0x331000
	0x03E3A868 STR V0, [X31 + 0x2]
	0x03E3A86C STR X8, [X31 + 0x30]
	0x03E3A870 LDR X21, [X21 + 0x2E8]
	0x03E3A874 LDR X1, [X21]
	0x03E3A878 ADD X0, X31, 0x20
	0x03E3A87C BL 0x2BC3C64
	0x03E3A880 TBZ X0, 0x0, 0x3E3A9CC
	0x03E3A884 LDR X20, [X31 + 0x30]
	0x03E3A888 CBZ X20, 0x3E3A908
	0x03E3A88C LDR X8, [X20]
	0x03E3A890 LDRB W1, [X31 + 0x8C]
	0x03E3A894 LDR X9, [X8 + 0x4F8]
	0x03E3A898 LDR X2, [X8 + 0x500]
	0x03E3A89C MOV X0, X20
	0x03E3A8A0 MOV V0.16B, V10.16B
	0x03E3A8A4 MOV V1.16B, V11.16B
	0x03E3A8A8 MOV V2.16B, V8.16B
	0x03E3A8AC MOV V3.16B, V9.16B
	0x03E3A8B0 BLR X9
	0x03E3A8B4 MOV X0, X20
	0x03E3A8B8 MOV X1, X31
	0x03E3A8BC BL 0x3CDBD2C
	0x03E3A8C0 CBZ X0, 0x3E3A90C
	0x03E3A8C4 MOV X1, X31
	0x03E3A8C8 BL 0x3E2256C
	0x03E3A8CC TBZ X0, 0x0, 0x3E3A874
	0x03E3A8D0 LDR X8, [X20]
	0x03E3A8D4 LDRB W1, [X31 + 0x8C]
	0x03E3A8D8 LDR X9, [X8 + 0x4E8]
	0x03E3A8DC LDR X2, [X8 + 0x4F0]
	0x03E3A8E0 MOV X0, X20
	0x03E3A8E4 MOV V0.16B, V10.16B
	0x03E3A8E8 MOV V1.16B, V11.16B
	0x03E3A8EC MOV V2.16B, V8.16B
	0x03E3A8F0 MOV V3.16B, V9.16B
	0x03E3A8F4 BLR X9
	0x03E3A8F8 B 0x3E3A874
	0x03E3A8FC BL 0x1C16F20
	0x03E3A900 BL 0x1C16F20
	0x03E3A904 BL 0x1C16F20
	0x03E3A908 BL 0x1C16F20
	0x03E3A90C BL 0x1C16F20
	0x03E3A910 B 0x3E3A92C
	0x03E3A914 B 0x3E3A92C
	0x03E3A918 B 0x3E3A92C
	0x03E3A91C B 0x3E3A92C
	0x03E3A920 B 0x3E3A92C
	0x03E3A924 B 0x3E3A92C
	0x03E3A928 B 0x3E3AAA4
	0x03E3A92C MOV X20, X0
	0x03E3A930 CMP W1, 0x1
	0x03E3A934 B.NE 0x3E3AA20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X21, 0x5AF000
	016 Move W8, [X21+1928]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x2BA000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1928], W8
	028 Move X8, [X20]
	029 Move X0, X20
	030 Move X9, [X8+872]
	031 Move X1, [X8+880]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Compare X19, 0
	034 JumpIfEqual {214}
	035 Move X22, 0x2BA000
	036 Move X22, [X22+1432]
	037 Move X21, X0
	038 Move X0, X19
	039 Call VertexHelper.Clear, X0
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {199}
	053 Move X0, X20
	054 Move X1, X31
	055 Call Graphic.GetPixelAdjustedRect, X0
	056 Compare X21, 0
	057 JumpIfEqual {214}
	058 Move X8, [X21]
	059 Move V8, V0
	060 Add S4, S1, S3
	061 Add S0, S8, S2
	062 Move X9, [X8+392]
	063 Move X1, [X8+400]
	064 Move X0, X21
	065 Move [X31+88], S4
	066 Move [X31+96], S0
	067 Move V11, V1
	068 Move [X31+12], S1
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move W22, W0
	071 Move X0, X21
	072 Move X1, X31
	073 Call Texture.get_texelSize, X0
	074 Move X8, [X21]
	075 NotImplemented "Instruction SCVTF not yet implemented."
	076 Move X0, X21
	077 Multiply S9, S0, S1
	078 Move X9, [X8+424]
	079 Move X1, [X8+432]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move W22, W0
	082 Move X0, X21
	083 Move X1, X31
	084 Call Texture.get_texelSize, X0
	085 Move X8, [X20]
	086 NotImplemented "Instruction SCVTF not yet implemented."
	087 Move X0, X20
	088 Multiply S10, S1, S0
	089 Move X9, [X8+664]
	090 Move X1, [X8+672]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X0, X31
	093 Move V12, V0
	094 Move V13, V1
	095 Move V14, V2
	096 Move V15, V3
	097 Call 0x1E44664
	098 Move S0, [X20+224]
	099 Move S1, [X20+228]
	100 And X1, X0, 0
	101 Move S2, W31
	102 Move S5, W31
	103 Multiply S3, S9, S0
	104 Multiply S4, S10, S1
	105 Move S6, W31
	106 Move X0, X19
	107 Move V0, V8
	108 Move V1, V11
	109 Call VertexHelper.AddVert, X0, X1, X2, X3
	110 Move V0, V12
	111 Move V1, V13
	112 Move V2, V14
	113 Move V3, V15
	114 Move X0, X31
	115 Call 0x1E44664
	116 Move V0, [X20+236]
	117 Move S2, [X20+224]
	118 Move S1, [X20+228]
	119 And X1, X0, 0
	120 Move S5, W31
	121 Move S6, W31
	122 Add S0, S0, S1
	123 Multiply S4, S10, S0
	124 Move V0, V8
	125 Move V8, [X31+88]
	126 Multiply S3, S9, S2
	127 Move S2, W31
	128 Move X0, X19
	129 Move V1, V8
	130 Call VertexHelper.AddVert, X0, X1, X2, X3
	131 Move V0, V12
	132 Move V1, V13
	133 Move V2, V14
	134 Move V3, V15
	135 Move X0, X31
	136 Call 0x1E44664
	137 Move S0, [X20+232]
	138 Move S1, [X20+236]
	139 Move S2, [X20+224]
	140 Move S3, [X20+228]
	141 Move V11, [X31+92]
	142 And X1, X0, 0
	143 Move S5, W31
	144 Add S0, S0, S2
	145 Add S1, S1, S3
	146 Multiply S3, S9, S0
	147 Multiply S4, S10, S1
	148 Move S2, W31
	149 Move S6, W31
	150 Move X0, X19
	151 Move V0, V11
	152 Move V1, V8
	153 Call VertexHelper.AddVert, X0, X1, X2, X3
	154 Move V0, V12
	155 Move V1, V13
	156 Move V2, V14
	157 Move V3, V15
	158 Move X0, X31
	159 Call 0x1E44664
	160 Move S2, [X20+228]
	161 Move S0, [X20+232]
	162 Move V1, [X20+224]
	163 And X1, X0, 0
	164 Move S5, W31
	165 Multiply S4, S10, S2
	166 Add S0, S0, S1
	167 Move V1, [X31+12]
	168 Multiply S3, S9, S0
	169 Move S2, W31
	170 Move S6, W31
	171 Move X0, X19
	172 Move V0, V11
	173 Call VertexHelper.AddVert, X0, X1, X2, X3
	174 Move W2, 1
	175 Move W3, 2
	176 Move X0, X19
	177 Move W1, W31
	178 Call VertexHelper.AddTriangle, X0, X1, X2, X3
	179 Move X0, X19
	180 Move X20, [X31+112]
	181 Move X19, [X31+120]
	182 Move X22, [X31+96]
	183 Move X21, [X31+104]
	184 Move X30, [X31+80]
	185 Move D9, [X31+64]
	186 Move D8, [X31+72]
	187 Move D11, [X31+48]
	188 Move D10, [X31+56]
	189 Move D13, [X31+32]
	190 Move D12, [X31+40]
	191 Move D15, [X31+16]
	192 Move D14, [X31+24]
	193 Move W1, 2
	194 Move W2, 3
	195 Move W3, W31
	196 Add X31, X31, 128
	197 Call VertexHelper.AddTriangle, X0, X1, X2, X3
	198 Return 
	199 Move X20, [X31+112]
	200 Move X19, [X31+120]
	201 Move X22, [X31+96]
	202 Move X21, [X31+104]
	203 Move X30, [X31+80]
	204 Move D9, [X31+64]
	205 Move D8, [X31+72]
	206 Move D11, [X31+48]
	207 Move D10, [X31+56]
	208 Move D13, [X31+32]
	209 Move D12, [X31+40]
	210 Move D15, [X31+16]
	211 Move D14, [X31+24]
	212 Add X31, X31, 128
	213 Return 
	214 Call 0x1C17F20

Method: System.Void OnDidApplyAnimationProperties()

Disassembly:
	0x03E3ACF4 STR X8, [X31 + 0x40]
	0x03E3ACF8 LDR X1, [X21]
	0x03E3ACFC ADD X0, X31, 0x30
	0x03E3AD00 BL 0x2BC3C64
	0x03E3AD04 TBZ X0, 0x0, 0x3E3AD80
	0x03E3AD08 LDR X20, [X31 + 0x40]
	0x03E3AD0C CBZ X20, 0x3E3AE08
	0x03E3AD10 LDR X8, [X20]
	0x03E3AD14 LDUR X27, [X19 + 0x74]
	0x03E3AD18 LDR X1, [X25]
	0x03E3AD1C LDRH W9, [X8 + 0x12E]
	0x03E3AD20 CBZ X9, 0x3E3AD44
	0x03E3AD24 LDR X10, [X8 + 0xB0]
	0x03E3AD28 ADD X10, X10, 0x8
	0x03E3AD2C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+776]
	006 Move X1, [X8+784]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move X8, [X19]
	009 Move X0, X19
	010 Move X9, [X8+760]
	011 Move X1, [X8+768]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X0, X19
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call Graphic.SetRaycastDirty, X0
	018 Return 

