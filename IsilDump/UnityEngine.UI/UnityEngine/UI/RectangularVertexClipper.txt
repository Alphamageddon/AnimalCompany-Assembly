Type: UnityEngine.UI.RectangularVertexClipper

Method: UnityEngine.Rect GetCanvasRect(UnityEngine.RectTransform t, UnityEngine.Canvas c)

Disassembly:
	0x03CD391C LDR X1, [X19]
	0x03CD3920 ADRP X19, 0x48F000
	0x03CD3924 LDR X19, [X19 + 0x170]
	0x03CD3928 MOV X22, X0
	0x03CD392C BL 0x3CD3398
	0x03CD3930 MOVZ W1, 0x1
	0x03CD3934 MOV X0, X22
	0x03CD3938 BL 0x3CD364C
	0x03CD393C LDR X8, [X23]
	0x03CD3940 LDR X9, [X22]
	0x03CD3944 MOV X0, X22
	0x03CD3948 LDR X8, [X8 + 0xB8]
	0x03CD394C LDR X10, [X9 + 0x2A8]
	0x03CD3950 LDR X1, [X9 + 0x2B0]
	0x03CD3954 LDP S0, S1, [X8 + 0x20]
	0x03CD3958 LDP S2, S3, [X8 + 0x28]
	0x03CD395C BLR X10
	0x03CD3960 LDR X1, [X19]
	0x03CD3964 MOV X0, X20
	0x03CD3968 BL 0x21E52E4
	0x03CD396C BL 0x3CD2F98
	0x03CD3970 CBZ X21, 0x3CD3AA4
	0x03CD3974 ADRP X8, 0x480000
	0x03CD3978 LDR X8, [X8 + 0xCC8]
	0x03CD397C MOV X0, X21
	0x03CD3980 LDR X1, [X8]
	0x03CD3984 BL 0x21E52E4
	0x03CD3988 CBZ X0, 0x3CD3AA4
	0x03CD398C ADRP X9, 0x472000
	0x03CD3990 LDR X8, [X0]
	0x03CD3994 LDR X9, [X9 + 0x350]
	0x03CD3998 ADRP X22, 0x480000
	0x03CD399C MOV X19, X0
	0x03CD39A0 LDR X2, [X8 + 0x5F0]
	0x03CD39A4 LDR X1, [X9]
	0x03CD39A8 LDR X9, [X8 + 0x5E8]
	0x03CD39AC LDR X22, [X22 + 0xB40]
	0x03CD39B0 BLR X9
	0x03CD39B4 MOVZ W1, 0x4
	0x03CD39B8 MOV X0, X19
	0x03CD39BC MOV X2, X31
	0x03CD39C0 BL 0x3E455E8
	0x03CD39C4 MOV X0, X19
	0x03CD39C8 BL 0x3CD2EBC
	0x03CD39CC LDR X1, [X22]
	0x03CD39D0 MOV X0, X21
	0x03CD39D4 BL 0x21E52E4
	0x03CD39D8 ADRP X21, 0x706000
	0x03CD39DC LDRB W8, [X21 + 0x78F]
	0x03CD39E0 MOV X19, X0
	0x03CD39E4 CBNZ W8, 0x3CD39FC
	0x03CD39E8 ADRP X0, 0x428000
	0x03CD39EC LDR X0, [X0 + 0xF08]
	0x03CD39F0 BL 0x1C16CF4
	0x03CD39F4 MOVZ W8, 0x1
	0x03CD39F8 STRB W8, [X21 + 0x78F]
	0x03CD39FC CBZ X19, 0x3CD3AA4
	0x03CD3A00 ADRP X22, 0x428000
	0x03CD3A04 LDR X22, [X22 + 0xF08]
	0x03CD3A08 MOV X0, X19
	0x03CD3A0C MOV X1, X31
	0x03CD3A10 LDR X8, [X22]
	0x03CD3A14 LDR X8, [X8 + 0xB8]
	0x03CD3A18 LDP S0, S1, [X8]
	0x03CD3A1C BL 0x3C3E648
	0x03CD3A20 ADRP X23, 0x70E000
	0x03CD3A24 LDRB W8, [X23 + 0xA48]
	0x03CD3A28 CBNZ W8, 0x3CD3A40
	0x03CD3A2C ADRP X0, 0x428000
	0x03CD3A30 LDR X0, [X0 + 0xF08]
	0x03CD3A34 BL 0x1C16CF4
	0x03CD3A38 MOVZ W8, 0x1
	0x03CD3A3C STRB W8, [X23 + 0xA48]
	0x03CD3A40 LDR X8, [X22]
	0x03CD3A44 MOV X0, X19
	0x03CD3A48 MOV X1, X31
	0x03CD3A4C LDR X8, [X8 + 0xB8]
	0x03CD3A50 LDP S0, S1, [X8 + 0x8]
	0x03CD3A54 BL 0x3C3E764
	0x03CD3A58 LDRB W8, [X21 + 0x78F]
	0x03CD3A5C CBNZ W8, 0x3CD3A74
	0x03CD3A60 ADRP X0, 0x428000
	0x03CD3A64 LDR X0, [X0 + 0xF08]
	0x03CD3A68 BL 0x1C16CF4
	0x03CD3A6C MOVZ W8, 0x1
	0x03CD3A70 STRB W8, [X21 + 0x78F]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x715000
	008 Move X23, 0x421000
	009 Move W8, [X22+1106]
	010 Move X23, [X23+1432]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x486000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move X0, 0x421000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1106], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move S0, W31
	036 Move S1, W31
	037 Move S2, W31
	038 Move S3, W31
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {98}
	043 Compare X21, 0
	044 JumpIfEqual {105}
	045 Move X1, [X19+16]
	046 Move X0, X21
	047 Move X2, X31
	048 Call RectTransform.GetWorldCorners, X0, X1
	049 Compare X20, 0
	050 JumpIfEqual {105}
	051 Move X8, 0x486000
	052 Move X8, [X8+1392]
	053 Move X0, X20
	054 Move X1, [X8]
	055 Call 0x21A4894, X0
	056 Move X21, [X19+24]
	057 Move X20, X0
	058 Move X22, X31
	059 Move X23, X31
	060 Move X8, [X19+16]
	061 Compare X8, 0
	062 JumpIfEqual {105}
	063 Move W9, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare X20, 0
	066 JumpIfEqual {105}
	067 Add X8, X8, X22
	068 Move S1, [X8+36]
	069 Move S2, [X8+40]
	070 Move V0, [X8+32]
	071 Move X0, X20
	072 Move X1, X31
	073 Call Transform.InverseTransformPoint, X0, X1
	074 Compare X21, 0
	075 JumpIfEqual {105}
	076 Move W8, [X21+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X21, X22
	079 Move [X8+32], S0
	080 Move [X8+40], S1
	081 Move [X8+40], S2
	082 Move X21, [X19+24]
	083 Add X23, X23, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X22, X22, 12
	086 Compare X21, 0
	087 JumpIfEqual {105}
	088 Move W8, [X21+24]
	089 Compare W8, 0
	090 JumpIfEqual {106}
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move S0, [X21+32]
	093 Move S1, [X21+36]
	094 Move S2, [X21+56]
	095 Move S3, [X21+60]
	096 Subtract S2, S2, S0
	097 Subtract S3, S3, S1
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Move X23, [X31+56]
	104 Return X0
	105 Call 0x1C17F20
	106 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03CD3A74 LDR X8, [X22]
	0x03CD3A78 MOV X0, X19
	0x03CD3A7C MOV X1, X31
	0x03CD3A80 LDR X8, [X8 + 0xB8]
	0x03CD3A84 LDP S0, S1, [X8]
	0x03CD3A88 BL 0x3C3E99C
	0x03CD3A8C MOV X0, X20
	0x03CD3A90 LDP X20, X19, [X31 + 0x30]
	0x03CD3A94 LDP X22, X21, [X31 + 0x20]
	0x03CD3A98 LDP X30, X23, [X31 + 0x10]
	0x03CD3A9C LDP D9, D8, [X31], #0x40
	0x03CD3AA0 RET
	0x03CD3AA4 BL 0x1C16F20
	0x03CD3AA8 BL 0x1C16F28
	0x03CD3AAC BL 0x1C16F44
	0x03CD3AB0 MOV X1, X31
	0x03CD3AB4 BL 0x1C16DEC
	0x03CD3AB8 STP D9, D8, [X31 - 0x40]!
	0x03CD3ABC STR X30, [X31 + 0x10]
	0x03CD3AC0 STP X22, X21, [X31 + 0x20]
	0x03CD3AC4 STP X20, X19, [X31 + 0x30]
	0x03CD3AC8 ADRP X20, 0x714000
	0x03CD3ACC ADRP X19, 0x48F000
	0x03CD3AD0 LDRB W8, [X20 + 0x45D]
	0x03CD3AD4 LDR X19, [X19 + 0x148]
	0x03CD3AD8 TBNZ X8, 0x0, 0x3CD3B38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x715000
	006 Move X20, 0x423000
	007 Move W8, [X21+1107]
	008 Move X20, [X20+2480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x423000
	015 Move X0, [X0+2480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1107], W8
	019 Move X0, [X20]
	020 Move W1, 4
	021 Call 0x1C17D6C
	022 Move [X19+16], X0
	023 Move X0, [X20]
	024 Move W1, 4
	025 Call 0x1C17D6C
	026 Move [X19+24], X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Object..ctor, X0
	034 Return 

