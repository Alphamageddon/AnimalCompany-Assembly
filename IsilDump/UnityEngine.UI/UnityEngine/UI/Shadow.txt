Type: UnityEngine.UI.Shadow

Method: System.Void .ctor()

Disassembly:
	0x03E4BCD4 LDR X0, [X0 + 0x598]
	0x03E4BCD8 BL 0x1C16CF4
	0x03E4BCDC MOVZ W8, 0x1
	0x03E4BCE0 STRB W8, [X20 + 0x83B]
	0x03E4BCE4 LDR X8, [X19 + 0x20]
	0x03E4BCE8 CBZ X8, 0x3E4BD40
	0x03E4BCEC ADRP X21, 0x2A8000
	0x03E4BCF0 LDR X21, [X21 + 0x598]
	0x03E4BCF4 BL 0x3E4BBE4
	0x03E4BCF8 LDR X8, [X21]

ISIL:
	001 Move X8, -53862400
	002 Move X9, -53858304
	003 Move V0, [X8+212]
	004 Move V1, [X9+2352]
	005 Move W8, 1
	006 Move X1, X31
	007 Move [X0+40], V0
	008 Move [X0+56], D1
	009 Move [X0+64], W8
	010 Call BaseMeshEffect..ctor, X0
	011 Return 

Method: UnityEngine.Color get_effectColor()

Disassembly:
	0x03E4BCFC MOV X20, X0
	0x03E4BD00 LDR W9, [X8 + 0xE0]
	0x03E4BD04 CBNZ W9, 0x3E4BD10

ISIL:
	001 Move S0, [X0+40]
	002 Move S1, [X0+44]
	003 Move S2, [X0+48]
	004 Move S3, [X0+52]
	005 Return X0

Method: System.Void set_effectColor(UnityEngine.Color value)

Disassembly:
	0x03E4BD08 MOV X0, X8
	0x03E4BD0C BL 0x1C16DFC
	0x03E4BD10 MOV X0, X20
	0x03E4BD14 MOV X1, X31
	0x03E4BD18 MOV X2, X31
	0x03E4BD1C BL 0x3C354F8
	0x03E4BD20 TBZ X0, 0x0, 0x3E4BD40
	0x03E4BD24 BL 0x3E4BBE4
	0x03E4BD28 CBZ X0, 0x3E4BD7C
	0x03E4BD2C LDR X8, [X19 + 0x20]
	0x03E4BD30 LDR X19, [X0 + 0x40]
	0x03E4BD34 CBZ X8, 0x3E4BD50
	0x03E4BD38 LDR X20, [X8 + 0x160]
	0x03E4BD3C B 0x3E4BD54
	0x03E4BD40 LDP X20, X19, [X31 + 0x10]
	0x03E4BD44 MOV W0, W31
	0x03E4BD48 LDP X30, X21, [X31], #0x20
	0x03E4BD4C RET
	0x03E4BD50 MOV X20, X31
	0x03E4BD54 LDR X0, [X21]
	0x03E4BD58 LDR W8, [X0 + 0xE0]
	0x03E4BD5C CBNZ W8, 0x3E4BD64
	0x03E4BD60 BL 0x1C16DFC
	0x03E4BD64 MOV X0, X19
	0x03E4BD68 MOV X1, X20
	0x03E4BD6C LDP X20, X19, [X31 + 0x10]
	0x03E4BD70 MOV X2, X31
	0x03E4BD74 LDP X30, X21, [X31], #0x20
	0x03E4BD78 B 0x3C3883C
	0x03E4BD7C BL 0x1C16F20
	0x03E4BD80 STR X30, [X31 - 0x10]!
	0x03E4BD84 LDR X0, [X0 + 0x20]
	0x03E4BD88 CBZ X0, 0x3E4BDAC
	0x03E4BD8C LDR X8, [X0]
	0x03E4BD90 LDR X9, [X8 + 0x278]
	0x03E4BD94 LDR X1, [X8 + 0x280]
	0x03E4BD98 BLR X9
	0x03E4BD9C CBZ X0, 0x3E4BDB4
	0x03E4BDA0 MOV X1, X31
	0x03E4BDA4 LDR X30, [X31], #0x10
	0x03E4BDA8 B 0x3D9D854
	0x03E4BDAC LDR X30, [X31], #0x10
	0x03E4BDB0 RET
	0x03E4BDB4 BL 0x1C16F20
	0x03E4BDB8 B 0x3E4BA18
	0x03E4BDBC RET
	0x03E4BDC0 B 0x3E4B864
	0x03E4BDC4 RET
	0x03E4BDC8 MOV X1, X31
	0x03E4BDCC B 0x3E4B7C0
	0x03E4BDD0 STR X30, [X31 - 0x20]!
	0x03E4BDD4 STP X20, X19, [X31 + 0x10]
	0x03E4BDD8 ADRP X20, 0x59D000

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x59E000
	010 Move X20, 0x2A9000
	011 Move W8, [X21+2094]
	012 Move X20, [X20+1432]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x2A9000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2094], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Move [X19+40], S11
	030 Move [X19+48], S10
	031 Move [X19+48], S9
	032 Move [X19+56], S8
	033 Call BaseMeshEffect.get_graphic, X0
	034 Move X8, [X20]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {66}
	049 Move X0, X19
	050 Move X1, X31
	051 Call BaseMeshEffect.get_graphic, X0
	052 Compare X0, 0
	053 JumpIfEqual {75}
	054 Move X8, [X0]
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Move D9, [X31+16]
	060 Move D8, [X31+24]
	061 Move X2, [X8+760]
	062 Move X1, [X8+768]
	063 Move D11, [X31+64]
	064 Move D10, [X31+72]
	065 CallNoReturn X2
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Move D9, [X31+16]
	071 Move D8, [X31+24]
	072 Move D11, [X31+64]
	073 Move D10, [X31+72]
	074 Return 
	075 Call 0x1C17F20

Method: UnityEngine.Vector2 get_effectDistance()

Disassembly:
	0x03E4BDDC LDRB W8, [X20 + 0x83E]
	0x03E4BDE0 MOV X19, X0

ISIL:
	001 Move S0, [X0+56]
	002 Move S1, [X0+60]
	003 Return X0

Method: System.Void set_effectDistance(UnityEngine.Vector2 value)

Disassembly:
	0x03E4BDE4 TBNZ X8, 0x0, 0x3E4BDFC
	0x03E4BDE8 ADRP X0, 0x2A8000
	0x03E4BDEC LDR X0, [X0 + 0x598]
	0x03E4BDF0 BL 0x1C16CF4
	0x03E4BDF4 MOVZ W8, 0x1
	0x03E4BDF8 STRB W8, [X20 + 0x83E]
	0x03E4BDFC LDRB W8, [X19 + 0x34]
	0x03E4BE00 CBNZ W8, 0x3E4BE74
	0x03E4BE04 BL 0x3E4BBE4
	0x03E4BE08 ADRP X8, 0x2A8000
	0x03E4BE0C LDR X8, [X8 + 0x598]
	0x03E4BE10 MOV X20, X0
	0x03E4BE14 LDR X8, [X8]
	0x03E4BE18 LDR W9, [X8 + 0xE0]
	0x03E4BE1C CBNZ W9, 0x3E4BE28
	0x03E4BE20 MOV X0, X8
	0x03E4BE24 BL 0x1C16DFC
	0x03E4BE28 MOV X0, X20
	0x03E4BE2C MOV X1, X31
	0x03E4BE30 MOV X2, X31
	0x03E4BE34 BL 0x3C354F8
	0x03E4BE38 TBZ X0, 0x0, 0x3E4BE74
	0x03E4BE3C BL 0x3E4BBE4
	0x03E4BE40 LDR X8, [X19 + 0x20]
	0x03E4BE44 MOV X19, X0
	0x03E4BE48 CBZ X8, 0x3E4BE80
	0x03E4BE4C LDR X20, [X8 + 0x160]
	0x03E4BE50 CBZ X19, 0x3E4BE88
	0x03E4BE54 MOV X0, X19
	0x03E4BE58 BL 0x3E50414
	0x03E4BE5C MOV X2, X0
	0x03E4BE60 MOV X0, X19
	0x03E4BE64 MOV X1, X20
	0x03E4BE68 LDP X20, X19, [X31 + 0x10]
	0x03E4BE6C LDR X30, [X31], #0x20
	0x03E4BE70 B 0x3E4EC58
	0x03E4BE74 LDP X20, X19, [X31 + 0x10]
	0x03E4BE78 LDR X30, [X31], #0x20
	0x03E4BE7C RET
	0x03E4BE80 MOV X20, X31
	0x03E4BE84 CBNZ X19, 0x3E4BE54
	0x03E4BE88 BL 0x1C16F20
	0x03E4BE8C STR X30, [X31 - 0x20]!
	0x03E4BE90 STP X20, X19, [X31 + 0x10]
	0x03E4BE94 MOV X19, X1
	0x03E4BE98 MOV X20, X0
	0x03E4BE9C BL 0x3E50414
	0x03E4BEA0 MOV X2, X0
	0x03E4BEA4 MOV X0, X20
	0x03E4BEA8 MOV X1, X19
	0x03E4BEAC LDP X20, X19, [X31 + 0x10]
	0x03E4BEB0 LDR X30, [X31], #0x20
	0x03E4BEB4 B 0x3E4EC58
	0x03E4BEB8 RET
	0x03E4BEBC STR X30, [X31 - 0x20]!
	0x03E4BEC0 STP X20, X19, [X31 + 0x10]
	0x03E4BEC4 MOV X19, X0
	0x03E4BEC8 LDR X0, [X0 + 0x20]
	0x03E4BECC MOVZ W8, 0x1
	0x03E4BED0 STRB W8, [X19 + 0x34]
	0x03E4BED4 CBZ X0, 0x3E4BEE0
	0x03E4BED8 MOV X1, X31
	0x03E4BEDC BL 0x3DBD028
	0x03E4BEE0 STRB W31, [X19 + 0x34]
	0x03E4BEE4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x59E000
	007 Move W8, [X20+2095]
	008 Move V8, V1
	009 Move V9, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x2A9000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2095], W8
	020 Move W8, 0x44160000
	021 Move S2, [X19+56]
	022 Move S3, [X19+60]
	023 Move S0, W8
	024 Move W8, 0xC4160000
	025 NotImplemented "Instruction FMIN not yet implemented."
	026 NotImplemented "Instruction FMIN not yet implemented."
	027 Move S4, W8
	028 Move X8, -53874688
	029 NotImplemented "Instruction FMAX not yet implemented."
	030 NotImplemented "Instruction FMAX not yet implemented."
	031 Move V4, [X8+3872]
	032 Subtract S2, S2, S1
	033 Subtract S3, S3, S0
	034 Multiply S2, S2, S2
	035 Multiply S3, S3, S3
	036 Add S2, S2, S3
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move X0, X19
	039 Move X1, X31
	040 Move [X19+56], S1
	041 Move [X19+64], S0
	042 Call BaseMeshEffect.get_graphic, X0
	043 Move X8, 0x2A9000
	044 Move X8, [X8+1432]
	045 Move X20, X0
	046 Move X8, [X8]
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {74}
	060 Move X0, X19
	061 Move X1, X31
	062 Call BaseMeshEffect.get_graphic, X0
	063 Compare X0, 0
	064 JumpIfEqual {80}
	065 Move X8, [X0]
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X30, [X31+16]
	069 Move X2, [X8+760]
	070 Move X1, [X8+768]
	071 Move D9, [X31+48]
	072 Move D8, [X31+56]
	073 CallNoReturn X2
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Move D9, [X31+48]
	078 Move D8, [X31+56]
	079 Return 
	080 Call 0x1C17F20

Method: System.Boolean get_useGraphicAlpha()

Disassembly:
	0x03E4BEE8 LDR X30, [X31], #0x20
	0x03E4BEEC RET

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_useGraphicAlpha(System.Boolean value)

Disassembly:
	0x03E4BEF0 CMP W1, 0x1
	0x03E4BEF4 B.NE 0x3E4BF14
	0x03E4BEF8 BL 0x3EB1AD0
	0x03E4BEFC LDR X20, [X0]
	0x03E4BF00 BL 0x3EB1AE0
	0x03E4BF04 STRB W31, [X19 + 0x34]
	0x03E4BF08 CBZ X20, 0x3E4BEE4
	0x03E4BF0C MOV X0, X20
	0x03E4BF10 BL 0x1C16F18
	0x03E4BF14 STRB W31, [X19 + 0x34]
	0x03E4BF18 B 0x3E4BF24
	0x03E4BF1C STRB W31, [X19 + 0x34]
	0x03E4BF20 CBNZ X20, 0x3E4BF28
	0x03E4BF24 BL 0x1D2C690
	0x03E4BF28 MOV X0, X20
	0x03E4BF2C BL 0x1C16F18
	0x03E4BF30 BL 0x1990590
	0x03E4BF34 LDR X0, [X0 + 0x20]
	0x03E4BF38 CBZ X0, 0x3E4BF44
	0x03E4BF3C MOV X1, X31
	0x03E4BF40 B 0x3DBD034
	0x03E4BF44 RET
	0x03E4BF48 STP X30, X21, [X31 - 0x20]!
	0x03E4BF4C STP X20, X19, [X31 + 0x10]
	0x03E4BF50 ADRP X19, 0x59D000
	0x03E4BF54 LDRB W8, [X19 + 0x83F]
	0x03E4BF58 MOV X20, X1
	0x03E4BF5C MOV X21, X0
	0x03E4BF60 TBNZ X8, 0x0, 0x3E4BF84
	0x03E4BF64 ADRP X0, 0x2A8000
	0x03E4BF68 LDR X0, [X0 + 0xE00]
	0x03E4BF6C BL 0x1C16CF4
	0x03E4BF70 ADRP X0, 0x320000
	0x03E4BF74 LDR X0, [X0 + 0x768]
	0x03E4BF78 BL 0x1C16CF4
	0x03E4BF7C MOVZ W8, 0x1
	0x03E4BF80 STRB W8, [X19 + 0x83F]
	0x03E4BF84 LDR X8, [X21 + 0x20]
	0x03E4BF88 CBZ X8, 0x3E4C038
	0x03E4BF8C LDR X1, [X21 + 0x28]
	0x03E4BF90 MOV X0, X21
	0x03E4BF94 MOV X2, X20
	0x03E4BF98 MOV W3, W31
	0x03E4BF9C BL 0x3E4C0F4
	0x03E4BFA0 TBZ X0, 0x0, 0x3E4C038
	0x03E4BFA4 ADRP X8, 0x320000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x59E000
	007 Move X20, 0x2A9000
	008 Move W8, [X22+2096]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 And W21, W1, 1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2A9000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2096], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Move [X19+64], W21
	024 Call BaseMeshEffect.get_graphic, X0
	025 Move X8, [X20]
	026 Move X20, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {54}
	040 Move X0, X19
	041 Move X1, X31
	042 Call BaseMeshEffect.get_graphic, X0
	043 Compare X0, 0
	044 JumpIfEqual {60}
	045 Move X8, [X0]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X2, [X8+760]
	051 Move X1, [X8+768]
	052 Move X30, [X31+48]
	053 CallNoReturn X2
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void ApplyShadowZeroAlloc(System.Collections.Generic.List`1<UnityEngine.UIVertex> verts, UnityEngine.Color32 color, System.Int32 start, System.Int32 end, System.Single x, System.Single y)

Disassembly:
	0x03E4BFA8 LDR X0, [X21 + 0x28]
	0x03E4BFAC LDR X8, [X8 + 0x768]
	0x03E4BFB0 LDR X1, [X8]
	0x03E4BFB4 BL 0x24A5124
	0x03E4BFB8 MOV X19, X0
	0x03E4BFBC MOV X0, X21
	0x03E4BFC0 MOV X1, X19
	0x03E4BFC4 MOV X2, X20
	0x03E4BFC8 BL 0x3E4C234
	0x03E4BFCC MOV X20, X31
	0x03E4BFD0 CBZ X19, 0x3E4C034
	0x03E4BFD4 ADRP X10, 0x2A8000
	0x03E4BFD8 LDR X8, [X19]
	0x03E4BFDC LDR X10, [X10 + 0xE00]
	0x03E4BFE0 LDRH W9, [X8 + 0x12E]
	0x03E4BFE4 LDR X1, [X10]
	0x03E4BFE8 CBZ X9, 0x3E4C00C
	0x03E4BFEC LDR X10, [X8 + 0xB0]
	0x03E4BFF0 ADD X10, X10, 0x8
	0x03E4BFF4 LDUR X11, [X10 - 0x8]
	0x03E4BFF8 CMP X11, X1
	0x03E4BFFC B.EQ 0x3E4C01C
	0x03E4C000 SUBS X9, X9, 0x1
	0x03E4C004 ADD X10, X10, 0x10
	0x03E4C008 B.NE 0x3E4BFF4
	0x03E4C00C MOV X0, X19
	0x03E4C010 MOV W2, W31
	0x03E4C014 BL 0x1C5C788
	0x03E4C018 B 0x3E4C028
	0x03E4C01C LDRSW X9, [X10]
	0x03E4C020 ADD X8, X8, X9, 0x4, LSL
	0x03E4C024 ADD X0, X8, 0x138
	0x03E4C028 LDP X8, X1, [X0]
	0x03E4C02C MOV X0, X19
	0x03E4C030 BLR X8
	0x03E4C034 CBNZ X20, 0x3E4C044
	0x03E4C038 LDP X20, X19, [X31 + 0x10]
	0x03E4C03C LDP X30, X21, [X31], #0x20
	0x03E4C040 RET
	0x03E4C044 MOV X0, X20
	0x03E4C048 BL 0x1C16F18
	0x03E4C04C CMP W1, 0x1
	0x03E4C050 MOV X21, X0
	0x03E4C054 B.NE 0x3E4C06C
	0x03E4C058 MOV X0, X21
	0x03E4C05C BL 0x3EB1AD0
	0x03E4C060 LDR X20, [X0]
	0x03E4C064 BL 0x3EB1AE0
	0x03E4C068 B 0x3E4BFD0
	0x03E4C06C MOV X20, X31
	0x03E4C070 B 0x3E4C078
	0x03E4C074 MOV X21, X0
	0x03E4C078 CBZ X19, 0x3E4C0DC
	0x03E4C07C ADRP X10, 0x2A7000
	0x03E4C080 LDR X8, [X19]
	0x03E4C084 LDR X10, [X10 + 0xE00]
	0x03E4C088 LDRH W9, [X8 + 0x12E]
	0x03E4C08C LDR X1, [X10]
	0x03E4C090 CBZ X9, 0x3E4C0B4
	0x03E4C094 LDR X10, [X8 + 0xB0]
	0x03E4C098 ADD X10, X10, 0x8
	0x03E4C09C LDUR X11, [X10 - 0x8]
	0x03E4C0A0 CMP X11, X1
	0x03E4C0A4 B.EQ 0x3E4C0C4
	0x03E4C0A8 SUBS X9, X9, 0x1
	0x03E4C0AC ADD X10, X10, 0x10
	0x03E4C0B0 B.NE 0x3E4C09C
	0x03E4C0B4 MOV X0, X19
	0x03E4C0B8 MOV W2, W31
	0x03E4C0BC BL 0x1C5C788
	0x03E4C0C0 B 0x3E4C0D0
	0x03E4C0C4 LDRSW X9, [X10]
	0x03E4C0C8 ADD X8, X8, X9, 0x4, LSL
	0x03E4C0CC ADD X0, X8, 0x138
	0x03E4C0D0 LDP X8, X1, [X0]
	0x03E4C0D4 MOV X0, X19
	0x03E4C0D8 BLR X8
	0x03E4C0DC CBNZ X20, 0x3E4C0E8
	0x03E4C0E0 MOV X0, X21
	0x03E4C0E4 BL 0x1D2C690
	0x03E4C0E8 MOV X0, X20
	0x03E4C0EC BL 0x1C16F18
	0x03E4C0F0 BL 0x1990590
	0x03E4C0F4 SUB X31, X31, 0x50
	0x03E4C0F8 STR X30, [X31 + 0x10]
	0x03E4C0FC STP X24, X23, [X31 + 0x20]
	0x03E4C100 STP X22, X21, [X31 + 0x30]
	0x03E4C104 STP X20, X19, [X31 + 0x40]
	0x03E4C108 ADRP X23, 0x59C000
	0x03E4C10C ADRP X24, 0x2A7000
	0x03E4C110 LDRB W8, [X23 + 0x84B]
	0x03E4C114 LDR X24, [X24 + 0x598]
	0x03E4C118 MOV W21, W3
	0x03E4C11C MOV X22, X2
	0x03E4C120 MOV X19, X1
	0x03E4C124 MOV X20, X0
	0x03E4C128 TBNZ X8, 0x0, 0x3E4C140
	0x03E4C12C ADRP X0, 0x2A7000
	0x03E4C130 LDR X0, [X0 + 0x598]
	0x03E4C134 BL 0x1C16CF4
	0x03E4C138 MOVZ W8, 0x1
	0x03E4C13C STRB W8, [X23 + 0x84B]
	0x03E4C140 STR X31, [X31 + 0x18]
	0x03E4C144 STR X31, [X31 + 0x8]
	0x03E4C148 BL 0x3E4BBE4
	0x03E4C14C LDR X8, [X24]
	0x03E4C150 MOV X23, X0
	0x03E4C154 LDR W9, [X8 + 0xE0]
	0x03E4C158 CBNZ W9, 0x3E4C164
	0x03E4C15C MOV X0, X8
	0x03E4C160 BL 0x1C16DFC
	0x03E4C164 MOV X0, X23
	0x03E4C168 MOV X1, X31
	0x03E4C16C MOV X2, X31
	0x03E4C170 BL 0x3C3883C
	0x03E4C174 TBNZ X0, 0x0, 0x3E4C1AC
	0x03E4C178 BL 0x3E4BBE4
	0x03E4C17C CBZ X0, 0x3E4C230
	0x03E4C180 LDR X8, [X24]
	0x03E4C184 LDR X23, [X0 + 0x28]
	0x03E4C188 LDR W9, [X8 + 0xE0]
	0x03E4C18C CBNZ W9, 0x3E4C198
	0x03E4C190 MOV X0, X8
	0x03E4C194 BL 0x1C16DFC
	0x03E4C198 MOV X0, X23
	0x03E4C19C MOV X1, X31
	0x03E4C1A0 MOV X2, X31
	0x03E4C1A4 BL 0x3C3883C
	0x03E4C1A8 TBZ X0, 0x0, 0x3E4C1B4
	0x03E4C1AC MOV W20, W31
	0x03E4C1B0 B 0x3E4C214
	0x03E4C1B4 CBZ X19, 0x3E4C230
	0x03E4C1B8 MOV X0, X19
	0x03E4C1BC MOV X1, X20
	0x03E4C1C0 MOV X2, X22
	0x03E4C1C4 MOV W3, W21
	0x03E4C1C8 BL 0x3E4DBE8
	0x03E4C1CC LDR X0, [X20 + 0x20]
	0x03E4C1D0 CBZ X0, 0x3E4C230
	0x03E4C1D4 LDP S2, S3, [X19 + 0x44]
	0x03E4C1D8 LDP S0, S1, [X19 + 0x2C]
	0x03E4C1DC ADD X1, X31, 0x18
	0x03E4C1E0 ADD X2, X31, 0x8
	0x03E4C1E4 MOVZ W3, 0x1
	0x03E4C1E8 MOV X4, X31
	0x03E4C1EC MOVZ W20, 0x1
	0x03E4C1F0 BL 0x3DBEF68
	0x03E4C1F4 LDP S0, S1, [X31 + 0x18]
	0x03E4C1F8 LDR V2, [X31 + 0x8]
	0x03E4C1FC STR W31, [X19 + 0x34]
	0x03E4C200 STR W31, [X19 + 0x40]
	0x03E4C204 STP S0, S1, [X19 + 0x2C]
	0x03E4C208 STP S0, S1, [X19 + 0x38]
	0x03E4C20C STUR D2, [X19 + 0x44]
	0x03E4C210 STR W31, [X19 + 0x4C]
	0x03E4C214 MOV W0, W20
	0x03E4C218 LDP X20, X19, [X31 + 0x40]
	0x03E4C21C LDP X22, X21, [X31 + 0x30]
	0x03E4C220 LDP X24, X23, [X31 + 0x20]
	0x03E4C224 LDR X30, [X31 + 0x10]
	0x03E4C228 ADD X31, X31, 0x50
	0x03E4C22C RET
	0x03E4C230 BL 0x1C16F20
	0x03E4C234 STR X30, [X31 - 0x20]!
	0x03E4C238 STP X20, X19, [X31 + 0x10]
	0x03E4C23C LDR X0, [X0 + 0x20]
	0x03E4C240 CBZ X0, 0x3E4C294
	0x03E4C244 MOV X19, X2
	0x03E4C248 MOVZ W2, 0x1
	0x03E4C24C MOV X3, X31
	0x03E4C250 MOV X20, X1
	0x03E4C254 BL 0x3DBC070
	0x03E4C258 CBZ X20, 0x3E4C294
	0x03E4C25C MOV X0, X20
	0x03E4C260 MOV X1, X31
	0x03E4C264 BL 0x3D9C10C
	0x03E4C268 TBZ X0, 0x0, 0x3E4C288
	0x03E4C26C CBZ X19, 0x3E4C294
	0x03E4C270 LDR X8, [X19]
	0x03E4C274 MOV X0, X19
	0x03E4C278 LDP X20, X19, [X31 + 0x10]
	0x03E4C27C LDP X2, X1, [X8 + 0x188]
	0x03E4C280 LDR X30, [X31], #0x20
	0x03E4C284 BR X2
	0x03E4C288 LDP X20, X19, [X31 + 0x10]
	0x03E4C28C LDR X30, [X31], #0x20
	0x03E4C290 RET
	0x03E4C294 BL 0x1C16F20
	0x03E4C298 STP X30, X21, [X31 - 0x20]!
	0x03E4C29C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+320], D12
	003 Move [X31+336], D11
	004 Move [X31+344], D10
	005 Move [X31+352], D9
	006 Move [X31+360], D8
	007 Move [X31+368], X29
	008 Move [X31+376], X30
	009 Move [X31+384], X28
	010 Move [X31+392], X27
	011 Move [X31+400], X26
	012 Move [X31+408], X25
	013 Move [X31+416], X24
	014 Move [X31+424], X23
	015 Move [X31+432], X22
	016 Move [X31+440], X21
	017 Move [X31+448], X20
	018 Move [X31+456], X19
	019 Move X24, 0x59E000
	020 Move W8, [X24+2097]
	021 Move V8, V1
	022 Move V9, V0
	023 Move W19, W4
	024 Move W20, W3
	025 Move X23, X2
	026 Move X21, X1
	027 Move X22, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {52}
	032 Move X0, 0x321000
	033 Move X0, [X0+1784]
	034 Call 0x1C17CF4
	035 Move X0, 0x320000
	036 Move X0, [X0+1760]
	037 Call 0x1C17CF4
	038 Move X0, 0x320000
	039 Move X0, [X0+1768]
	040 Call 0x1C17CF4
	041 Move X0, 0x320000
	042 Move X0, [X0+1792]
	043 Call 0x1C17CF4
	044 Move X0, 0x320000
	045 Move X0, [X0+1776]
	046 Call 0x1C17CF4
	047 Move X0, 0x320000
	048 Move X0, [X0+1800]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X24+2097], W8
	052 Compare X21, 0
	053 JumpIfEqual {235}
	054 Move X8, 0x320000
	055 Move X8, [X8+1760]
	056 Move W9, [X21+24]
	057 Move X0, X21
	058 Move X1, [X8]
	059 Subtract W8, W19, W20
	060 Add W24, W8, W9
	061 Call List`1<UIVertex>.get_Capacity, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, 0x320000
	064 Move X8, [X8+1776]
	065 Move X0, X21
	066 Move W1, W24
	067 Move X2, [X8]
	068 Call List`1<UIVertex>.set_Capacity, X0, X1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X27, 0x320000
	071 Move X27, [X27+1792]
	072 Add X8, X31, 208
	073 Add X24, X31, 176
	074 Move X25, X23
	075 ShiftRight X25, 24
	076 And X25, X25, 0x7FFFFFFF
	077 Move X26, X23
	078 ShiftRight X26, 24
	079 And X26, X26, 0x7FFFFFFF
	080 And W23, W23, 0xFFFFFF
	081 Add X28, X8, 12
	082 Add X29, X8, 44
	083 Move X2, [X27]
	084 Add X8, X31, 208
	085 Move X0, X21
	086 Move W1, W20
	087 Call List`1<UIVertex>.get_Item, X0, X1
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move V4, [X28]
	090 Move V3, [X29]
	091 Move V2, [X29+16]
	092 Move X10, 0x320000
	093 Move [X31+92], V0
	094 Move V0, [X29+32]
	095 Move V1, [X29+48]
	096 Move [X31+16], V3
	097 Move [X31+24], V2
	098 Move V2, [X31+16]
	099 Move V3, [X31+32]
	100 Move S11, [X31+208]
	101 Move S12, [X31+212]
	102 Move [X31+64], V1
	103 Move [X31+72], V4
	104 Move [X31+3], V0
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 Move V4, [X31+5]
	107 Move [X31+112], V2
	108 Move [X31+120], V3
	109 Move V10, [X31+216]
	110 Move [X24+12], V0
	111 Move V0, [X31+48]
	112 Move V1, [X31+64]
	113 Move W8, [X31+248]
	114 Move [X31+9], V0
	115 Move [X31+160], V1
	116 Move [X31+168], V4
	117 Move W11, [X21+28]
	118 Move X9, [X21+16]
	119 Move X10, [X10+1784]
	120 Add W11, W11, 1
	121 Move X10, [X10]
	122 Move [X21+28], W11
	123 Compare X9, 0
	124 JumpIfEqual {235}
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Move W12, [X9+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W12, 108
	129 Add W10, W11, 1
	130 NotImplemented "Instruction MADD not yet implemented."
	131 Move [X21+24], W10
	132 Move [X9+32], S11
	133 Move [X9+40], S12
	134 Move [X9+40], S10
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 Move V1, [X31+11]
	137 Move [X9+72], W8
	138 Move [X9+56], V0
	139 Move [X9+44], V1
	140 Move V1, [X31+144]
	141 Move V0, [X31+160]
	142 Move V3, [X31+112]
	143 Move V2, [X31+128]
	144 Move [X9+124], V0
	145 Move [X9+108], V1
	146 Move [X9+92], V2
	147 Move [X9+76], V3
	148 Move X9, [X10+32]
	149 Move V3, [X31+160]
	150 Move V0, [X31+176]
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 Add X1, X31, 208
	153 Move X9, [X9+192]
	154 Move X0, X21
	155 Move X2, [X9+112]
	156 Move [X31+208], S11
	157 Move [X31+216], S12
	158 Move [X31+216], S10
	159 Move [X28+12], V1
	160 Move [X28], V0
	161 Move V0, [X31+7]
	162 Move V1, [X31+128]
	163 Move V2, [X31+144]
	164 Move [X31+248], W8
	165 Move [X29+32], V2
	166 Move [X29+40], V3
	167 Move [X29], V0
	168 Move [X29+8], V1
	169 Call List`1<UIVertex>.AddWithResize, X0, X1
	170 Move W9, [X22+64]
	171 Move W8, W25
	172 Compare W9, 0
	173 JumpIfEqual {187}
	174 Move X2, [X27]
	175 Add X8, X31, 208
	176 Move X0, X21
	177 Move W1, W20
	178 Call List`1<UIVertex>.get_Item, X0, X1
	179 Move W8, [X31+251]
	180 Move W9, 0x8081
	181 NotImplemented "Instruction MOVK not yet implemented."
	182 Multiply W8, W26, W8
	183 NotImplemented "Instruction UMADDL not yet implemented."
	184 Move X8, X8
	185 ShiftRight X8, 39
	186 And X8, X8, 0x7FFFFFFF
	187 Move W9, W23
	188 Add S1, S12, S8
	189 NotImplemented "Instruction BFM not yet implemented."
	190 Move X8, 0x320000
	191 Move X8, [X8+1800]
	192 Move [X31+212], S1
	193 Move [X31+220], S10
	194 Move V1, [X31+64]
	195 Move V2, [X31+80]
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 Add S0, S11, S9
	198 Move X3, [X8]
	199 Move [X31+208], S0
	200 Move [X28+12], V3
	201 Move [X28], V2
	202 Move V2, [X31+1]
	203 Move V3, [X31+32]
	204 Move V0, [X31+48]
	205 Add X2, X31, 208
	206 Move X0, X21
	207 Move W1, W20
	208 Move [X31+248], W9
	209 Move [X29+32], V0
	210 Move [X29+40], V1
	211 Move [X29], V2
	212 Move [X29+8], V3
	213 Call List`1<UIVertex>.set_Item, X0, X1, X2
	214 Add W20, W20, 1
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X20, [X31+448]
	217 Move X19, [X31+456]
	218 Move X22, [X31+432]
	219 Move X21, [X31+440]
	220 Move X24, [X31+416]
	221 Move X23, [X31+424]
	222 Move X26, [X31+400]
	223 Move X25, [X31+408]
	224 Move X28, [X31+384]
	225 Move X27, [X31+392]
	226 Move X29, [X31+368]
	227 Move X30, [X31+376]
	228 Move D9, [X31+352]
	229 Move D8, [X31+360]
	230 Move D11, [X31+336]
	231 Move D10, [X31+344]
	232 Move V12, [X31+320]
	233 Add X31, X31, 464
	234 Return 
	235 Call 0x1C17F20

Method: System.Void ApplyShadow(System.Collections.Generic.List`1<UnityEngine.UIVertex> verts, UnityEngine.Color32 color, System.Int32 start, System.Int32 end, System.Single x, System.Single y)

Disassembly:
	0x03E4C2A0 ADRP X19, 0x59C000
	0x03E4C2A4 LDRB W8, [X19 + 0x840]

ISIL:
	001 And X2, X2, 0
	002 Call Shadow.ApplyShadowZeroAlloc, X0, X1, X2, X3, X4, V0, V1
	003 Return 

Method: System.Void ModifyMesh(UnityEngine.UI.VertexHelper vh)

Disassembly:
	0x03E4C2A8 MOV X20, X1
	0x03E4C2AC MOV X21, X0
	0x03E4C2B0 TBNZ X8, 0x0, 0x3E4C2F8
	0x03E4C2B4 ADRP X0, 0x2A7000
	0x03E4C2B8 LDR X0, [X0 + 0xE00]
	0x03E4C2BC BL 0x1C16CF4
	0x03E4C2C0 ADRP X0, 0x2CF000
	0x03E4C2C4 LDR X0, [X0 + 0x958]
	0x03E4C2C8 BL 0x1C16CF4
	0x03E4C2CC ADRP X0, 0x31F000
	0x03E4C2D0 LDR X0, [X0 + 0x770]
	0x03E4C2D4 BL 0x1C16CF4
	0x03E4C2D8 ADRP X0, 0x2D2000
	0x03E4C2DC LDR X0, [X0 + 0xD20]
	0x03E4C2E0 BL 0x1C16CF4
	0x03E4C2E4 ADRP X0, 0x2CF000
	0x03E4C2E8 LDR X0, [X0 + 0x960]
	0x03E4C2EC BL 0x1C16CF4
	0x03E4C2F0 MOVZ W8, 0x1
	0x03E4C2F4 STRB W8, [X19 + 0x840]
	0x03E4C2F8 LDR X8, [X21 + 0x20]
	0x03E4C2FC CBZ X8, 0x3E4C3E8
	0x03E4C300 LDR X1, [X21 + 0x28]
	0x03E4C304 MOVZ W3, 0x2
	0x03E4C308 MOV X0, X21
	0x03E4C30C MOV X2, X20
	0x03E4C310 BL 0x3E4C0F4
	0x03E4C314 TBZ X0, 0x0, 0x3E4C3E8
	0x03E4C318 ADRP X8, 0x31F000
	0x03E4C31C LDR X0, [X21 + 0x28]
	0x03E4C320 LDR X8, [X8 + 0x770]
	0x03E4C324 LDR X1, [X8]
	0x03E4C328 BL 0x24A5124
	0x03E4C32C MOV X19, X0
	0x03E4C330 MOV X0, X21
	0x03E4C334 MOV X1, X19
	0x03E4C338 MOV X2, X20
	0x03E4C33C BL 0x3E4C234
	0x03E4C340 CBZ X19, 0x3E4C3FC
	0x03E4C344 LDR W8, [X19 + 0xB0]
	0x03E4C348 CBZ W8, 0x3E4C354
	0x03E4C34C MOV X20, X31
	0x03E4C350 B 0x3E4C384
	0x03E4C354 ADRP X8, 0x2CF000
	0x03E4C358 LDR X8, [X8 + 0x958]
	0x03E4C35C LDR W20, [X19 + 0x9C]
	0x03E4C360 LDR X0, [X8]
	0x03E4C364 LDR W8, [X0 + 0xE0]
	0x03E4C368 CBNZ W8, 0x3E4C370
	0x03E4C36C BL 0x1C16DFC
	0x03E4C370 MOV W0, W20
	0x03E4C374 MOV X1, X31
	0x03E4C378 MOV X2, X31
	0x03E4C37C BL 0x3DA9F84
	0x03E4C380 MOV X20, X31
	0x03E4C384 ADRP X10, 0x2A7000
	0x03E4C388 LDR X8, [X19]
	0x03E4C38C LDR X10, [X10 + 0xE00]
	0x03E4C390 LDRH W9, [X8 + 0x12E]
	0x03E4C394 LDR X1, [X10]
	0x03E4C398 CBZ X9, 0x3E4C3BC
	0x03E4C39C LDR X10, [X8 + 0xB0]
	0x03E4C3A0 ADD X10, X10, 0x8
	0x03E4C3A4 LDUR X11, [X10 - 0x8]
	0x03E4C3A8 CMP X11, X1
	0x03E4C3AC B.EQ 0x3E4C3CC
	0x03E4C3B0 SUBS X9, X9, 0x1
	0x03E4C3B4 ADD X10, X10, 0x10
	0x03E4C3B8 B.NE 0x3E4C3A4
	0x03E4C3BC MOV X0, X19
	0x03E4C3C0 MOV W2, W31
	0x03E4C3C4 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59D000
	006 Move W8, [X21+2098]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x320000
	014 Move X0, [X0+1736]
	015 Call 0x1C17CF4
	016 Move X0, 0x320000
	017 Move X0, [X0+1744]
	018 Call 0x1C17CF4
	019 Move X0, 0x320000
	020 Move X0, [X0+1752]
	021 Call 0x1C17CF4
	022 Move X0, 0x320000
	023 Move X0, [X0+1768]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2098], W8
	027 Move X8, [X20]
	028 Move X0, X20
	029 Move X9, [X8+456]
	030 Move X1, [X8+464]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {87}
	036 Move X8, 0x320000
	037 Move X8, [X8+1752]
	038 Move X21, 0x320000
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Move X21, [X21+1736]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Call CollectionPool`2<Object, UIVertex>.Get
	047 Compare X19, 0
	048 JumpIfEqual {92}
	049 Move X21, X0
	050 Move X0, X19
	051 Move X1, X21
	052 Move X2, X31
	053 Call VertexHelper.GetUIVertexStream, X0, X1
	054 Move S0, [X20+40]
	055 Move S1, [X20+44]
	056 Move S2, [X20+48]
	057 Move S3, [X20+52]
	058 Move X0, X31
	059 Call 0x1E44664
	060 Compare X21, 0
	061 JumpIfEqual {92}
	062 Move W4, [X21+24]
	063 Move S0, [X20+56]
	064 Move S1, [X20+60]
	065 And X2, X0, 0
	066 Move X0, X20
	067 Move X1, X21
	068 Move W3, W31
	069 Call Shadow.ApplyShadowZeroAlloc, X0, X1, X2, X3, X4, V0, V1
	070 Move X0, X19
	071 Move X1, X31
	072 Call VertexHelper.Clear, X0
	073 Move X0, X19
	074 Move X1, X21
	075 Move X2, X31
	076 Call VertexHelper.AddUIVertexTriangleStream, X0, X1
	077 Move X8, 0x320000
	078 Move X8, [X8+1744]
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X0, X21
	082 Move X1, [X8]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call CollectionPool`2<Object, UIVertex>.Release, X0
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 
	092 Call 0x1C17F20

