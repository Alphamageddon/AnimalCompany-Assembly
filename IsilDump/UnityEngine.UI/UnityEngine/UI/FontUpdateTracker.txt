Type: UnityEngine.UI.FontUpdateTracker

Method: System.Void TrackText(UnityEngine.UI.Text t)

Disassembly:
	0x03CDB564 BR X2
	0x03CDB568 LDP X20, X19, [X31 + 0x10]
	0x03CDB56C LDR X30, [X31], #0x20
	0x03CDB570 RET
	0x03CDB574 STR X30, [X31 - 0x20]!
	0x03CDB578 STP X20, X19, [X31 + 0x10]
	0x03CDB57C ADRP X20, 0x70C000
	0x03CDB580 LDRB W8, [X20 + 0x492]
	0x03CDB584 MOV X19, X0
	0x03CDB588 TBNZ X8, 0x0, 0x3CDB5A0
	0x03CDB58C ADRP X0, 0x47D000
	0x03CDB590 LDR X0, [X0 + 0x718]
	0x03CDB594 BL 0x1C16CF4
	0x03CDB598 MOVZ W8, 0x1
	0x03CDB59C STRB W8, [X20 + 0x492]
	0x03CDB5A0 LDR X8, [X19]
	0x03CDB5A4 MOV X0, X19
	0x03CDB5A8 LDP X9, X1, [X8 + 0x1C8]
	0x03CDB5AC BLR X9
	0x03CDB5B0 TBZ X0, 0x0, 0x3CDB5FC
	0x03CDB5B4 ADRP X8, 0x47D000
	0x03CDB5B8 LDR X8, [X8 + 0x718]
	0x03CDB5BC MOVZ W9, 0x1
	0x03CDB5C0 STRB W9, [X19 + 0x69]
	0x03CDB5C4 LDR X0, [X8]
	0x03CDB5C8 LDR W8, [X0 + 0xE0]
	0x03CDB5CC CBNZ W8, 0x3CDB5D4
	0x03CDB5D0 BL 0x1C16DFC
	0x03CDB5D4 MOV X0, X19
	0x03CDB5D8 BL 0x3CD16F4
	0x03CDB5DC LDR X8, [X19 + 0x80]
	0x03CDB5E0 CBZ X8, 0x3CDB5FC
	0x03CDB5E4 LDR X2, [X8 + 0x18]
	0x03CDB5E8 LDR X0, [X8 + 0x40]
	0x03CDB5EC LDR X1, [X8 + 0x28]
	0x03CDB5F0 LDP X20, X19, [X31 + 0x10]
	0x03CDB5F4 LDR X30, [X31], #0x20
	0x03CDB5F8 BR X2
	0x03CDB5FC LDP X20, X19, [X31 + 0x10]
	0x03CDB600 LDR X30, [X31], #0x20
	0x03CDB604 RET
	0x03CDB608 STR X30, [X31 - 0x20]!
	0x03CDB60C STP X20, X19, [X31 + 0x10]
	0x03CDB610 ADRP X20, 0x70C000
	0x03CDB614 LDRB W8, [X20 + 0x494]
	0x03CDB618 MOV X19, X0
	0x03CDB61C TBNZ X8, 0x0, 0x3CDB634
	0x03CDB620 ADRP X0, 0x47D000
	0x03CDB624 LDR X0, [X0 + 0x718]
	0x03CDB628 BL 0x1C16CF4
	0x03CDB62C MOVZ W8, 0x1
	0x03CDB630 STRB W8, [X20 + 0x494]
	0x03CDB634 MOV X0, X19
	0x03CDB638 MOV X1, X31
	0x03CDB63C BL 0x3C32ECC
	0x03CDB640 CBZ X0, 0x3CDB6B0
	0x03CDB644 MOV X1, X31
	0x03CDB648 BL 0x3C35834
	0x03CDB64C TBZ X0, 0x0, 0x3CDB688
	0x03CDB650 ADRP X8, 0x47D000
	0x03CDB654 LDR X8, [X8 + 0x718]
	0x03CDB658 LDR X0, [X8]
	0x03CDB65C LDR W8, [X0 + 0xE0]
	0x03CDB660 CBNZ W8, 0x3CDB668
	0x03CDB664 BL 0x1C16DFC
	0x03CDB668 BL 0x3CD1EF4
	0x03CDB66C LDR X8, [X19]
	0x03CDB670 MOV W20, W0
	0x03CDB674 MOV X0, X19
	0x03CDB678 LDR X9, [X8 + 0x2F8]
	0x03CDB67C LDR X1, [X8 + 0x300]
	0x03CDB680 BLR X9
	0x03CDB684 TBZ X20, 0x0, 0x3CDB694
	0x03CDB688 LDP X20, X19, [X31 + 0x10]
	0x03CDB68C LDR X30, [X31], #0x20
	0x03CDB690 RET
	0x03CDB694 LDR X8, [X19]
	0x03CDB698 MOV X0, X19
	0x03CDB69C LDP X20, X19, [X31 + 0x10]
	0x03CDB6A0 LDR X2, [X8 + 0x2E8]
	0x03CDB6A4 LDR X1, [X8 + 0x2F0]
	0x03CDB6A8 LDR X30, [X31], #0x20
	0x03CDB6AC BR X2
	0x03CDB6B0 BL 0x1C16F20
	0x03CDB6B4 STP X30, X21, [X31 - 0x20]!
	0x03CDB6B8 STP X20, X19, [X31 + 0x10]
	0x03CDB6BC ADRP X21, 0x70C000
	0x03CDB6C0 ADRP X20, 0x46E000
	0x03CDB6C4 LDRB W8, [X21 + 0x495]
	0x03CDB6C8 LDR X20, [X20 + 0x580]
	0x03CDB6CC MOV X19, X0
	0x03CDB6D0 TBNZ X8, 0x0, 0x3CDB6F4
	0x03CDB6D4 ADRP X0, 0x46E000
	0x03CDB6D8 LDR X0, [X0 + 0x580]
	0x03CDB6DC BL 0x1C16CF4
	0x03CDB6E0 ADRP X0, 0x41B000
	0x03CDB6E4 LDR X0, [X0 + 0x920]
	0x03CDB6E8 BL 0x1C16CF4
	0x03CDB6EC MOVZ W8, 0x1
	0x03CDB6F0 STRB W8, [X21 + 0x495]
	0x03CDB6F4 ADRP X21, 0x41B000
	0x03CDB6F8 LDR X21, [X21 + 0x920]
	0x03CDB6FC MOV X0, X19
	0x03CDB700 BL 0x3CDADE8
	0x03CDB704 LDR X8, [X20]
	0x03CDB708 MOV X20, X0
	0x03CDB70C LDR W9, [X8 + 0xE0]
	0x03CDB710 CBNZ W9, 0x3CDB71C
	0x03CDB714 MOV X0, X8
	0x03CDB718 BL 0x1C16DFC
	0x03CDB71C MOV X0, X20
	0x03CDB720 MOV X1, X19
	0x03CDB724 BL 0x3CDB75C
	0x03CDB728 MOV X0, X19
	0x03CDB72C BL 0x3CDB488
	0x03CDB730 LDR X8, [X21]
	0x03CDB734 MOV X19, X0
	0x03CDB738 LDR W9, [X8 + 0xE0]
	0x03CDB73C CBNZ W9, 0x3CDB748
	0x03CDB740 MOV X0, X8
	0x03CDB744 BL 0x1C16DFC
	0x03CDB748 MOV X0, X19
	0x03CDB74C LDP X20, X19, [X31 + 0x10]
	0x03CDB750 MOV X1, X31
	0x03CDB754 LDP X30, X21, [X31], #0x20
	0x03CDB758 B 0x3E2F3D8
	0x03CDB75C STR X30, [X31 - 0x30]!
	0x03CDB760 STP X22, X21, [X31 + 0x10]
	0x03CDB764 STP X20, X19, [X31 + 0x20]
	0x03CDB768 ADRP X22, 0x70C000
	0x03CDB76C ADRP X21, 0x418000
	0x03CDB770 LDRB W8, [X22 + 0x4C1]
	0x03CDB774 LDR X21, [X21 + 0x598]
	0x03CDB778 MOV X19, X1
	0x03CDB77C MOV X20, X0
	0x03CDB780 TBNZ X8, 0x0, 0x3CDB7D4
	0x03CDB784 ADRP X0, 0x487000
	0x03CDB788 LDR X0, [X0 + 0x400]
	0x03CDB78C BL 0x1C16CF4
	0x03CDB790 ADRP X0, 0x487000
	0x03CDB794 LDR X0, [X0 + 0x408]
	0x03CDB798 BL 0x1C16CF4
	0x03CDB79C ADRP X0, 0x46E000
	0x03CDB7A0 LDR X0, [X0 + 0x580]
	0x03CDB7A4 BL 0x1C16CF4
	0x03CDB7A8 ADRP X0, 0x487000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x70D000
	007 Move W8, [X20+1161]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {45}
	013 Move X0, 0x487000
	014 Move X0, [X0+4080]
	015 Call 0x1C17CF4
	016 Move X0, 0x488000
	017 Move X0, [X0+888]
	018 Call 0x1C17CF4
	019 Move X0, 0x488000
	020 Move X0, [X0+896]
	021 Call 0x1C17CF4
	022 Move X0, 0x488000
	023 Move X0, [X0+904]
	024 Call 0x1C17CF4
	025 Move X0, 0x488000
	026 Move X0, [X0+912]
	027 Call 0x1C17CF4
	028 Move X0, 0x488000
	029 Move X0, [X0+920]
	030 Call 0x1C17CF4
	031 Move X0, 0x488000
	032 Move X0, [X0+928]
	033 Call 0x1C17CF4
	034 Move X0, 0x488000
	035 Move X0, [X0+936]
	036 Call 0x1C17CF4
	037 Move X0, 0x488000
	038 Move X0, [X0+944]
	039 Call 0x1C17CF4
	040 Move X0, 0x419000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+1161], W8
	045 Move [X31+8], X31
	046 Compare X19, 0
	047 JumpIfEqual {167}
	048 Move X20, 0x419000
	049 Move X20, [X20+1432]
	050 Move X0, X19
	051 Move X1, X31
	052 Call Text.get_font, X0
	053 Move X8, [X20]
	054 Move X20, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {161}
	068 Move X21, 0x488000
	069 Move X21, [X21+920]
	070 Move X0, [X21]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X21]
	076 Move X8, [X0+184]
	077 Move X0, X19
	078 Move X1, X31
	079 Move X20, [X8]
	080 Call Text.get_font, X0
	081 Compare X20, 0
	082 JumpIfEqual {167}
	083 Move X8, 0x488000
	084 Move X8, [X8+896]
	085 Move X1, X0
	086 Add X2, X31, 8
	087 Move X0, X20
	088 Move X3, [X8]
	089 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	090 Move X0, [X31+8]
	091 Compare X0, 0
	092 JumpIfNotEqual {156}
	093 Move X0, [X21]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X21]
	099 Move X8, [X0+184]
	100 Move X0, [X8]
	101 Compare X0, 0
	102 JumpIfEqual {167}
	103 Move X8, 0x488000
	104 Move X8, [X8+904]
	105 Move X1, [X8]
	106 Call Dictionary`2<Object, Object>.get_Count, X0
	107 Compare W0, 0
	108 JumpIfNotEqual {123}
	109 Move X8, 0x487000
	110 Move X8, [X8+4080]
	111 Move X0, [X8]
	112 Call 0x1C17F10
	113 Move X8, 0x488000
	114 Move X8, [X8+912]
	115 Move X1, X31
	116 Move X3, X31
	117 Move X20, X0
	118 Move X2, [X8]
	119 Call Action`1<Object>..ctor, X0, X1, X2
	120 Move X0, X20
	121 Move X1, X31
	122 Call Font.add_textureRebuilt, X0
	123 Move X8, 0x488000
	124 Move X8, [X8+944]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X8, 0x488000
	128 Move X8, [X8+936]
	129 Move X20, X0
	130 Move X1, [X8]
	131 Call HashSet`1<Object>..ctor, X0
	132 Move X0, [X21]
	133 Move [X31+8], X20
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {139}
	137 Call 0x1C17DFC
	138 Move X0, [X21]
	139 Move X8, [X0+184]
	140 Move X0, X19
	141 Move X1, X31
	142 Move X20, [X8]
	143 Call Text.get_font, X0
	144 Compare X20, 0
	145 JumpIfEqual {167}
	146 Move X8, 0x488000
	147 Move X2, [X31+8]
	148 Move X8, [X8+888]
	149 Move X1, X0
	150 Move X0, X20
	151 Move X3, [X8]
	152 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	153 Move X0, [X31+8]
	154 Compare X0, 0
	155 JumpIfEqual {167}
	156 Move X8, 0x488000
	157 Move X8, [X8+928]
	158 Move X1, X19
	159 Move X2, [X8]
	160 Call HashSet`1<Object>.Add, X0, X1
	161 Move X20, [X31+32]
	162 Move X19, [X31+40]
	163 Move X30, [X31+16]
	164 Move X21, [X31+24]
	165 Add X31, X31, 48
	166 Return 
	167 Call 0x1C17F20

Method: System.Void RebuildForFont(UnityEngine.Font f)

Disassembly:
	0x03CDB7AC LDR X0, [X0 + 0x410]
	0x03CDB7B0 BL 0x1C16CF4
	0x03CDB7B4 ADRP X0, 0x487000
	0x03CDB7B8 LDR X0, [X0 + 0x460]
	0x03CDB7BC BL 0x1C16CF4
	0x03CDB7C0 ADRP X0, 0x418000
	0x03CDB7C4 LDR X0, [X0 + 0x598]
	0x03CDB7C8 BL 0x1C16CF4
	0x03CDB7CC MOVZ W8, 0x1
	0x03CDB7D0 STRB W8, [X22 + 0x4C1]
	0x03CDB7D4 LDR X0, [X21]
	0x03CDB7D8 STR X31, [X31 + 0x8]
	0x03CDB7DC LDR W8, [X0 + 0xE0]
	0x03CDB7E0 CBNZ W8, 0x3CDB7E8
	0x03CDB7E4 BL 0x1C16DFC
	0x03CDB7E8 MOV X0, X20
	0x03CDB7EC MOV X1, X31
	0x03CDB7F0 MOV X2, X31
	0x03CDB7F4 BL 0x3C3883C
	0x03CDB7F8 TBNZ X0, 0x0, 0x3CDB8EC
	0x03CDB7FC LDR X0, [X21]
	0x03CDB800 LDR W8, [X0 + 0xE0]
	0x03CDB804 CBNZ W8, 0x3CDB80C
	0x03CDB808 BL 0x1C16DFC
	0x03CDB80C MOV X0, X19
	0x03CDB810 MOV X1, X31
	0x03CDB814 MOV X2, X31
	0x03CDB818 BL 0x3C3883C
	0x03CDB81C TBNZ X0, 0x0, 0x3CDB8EC
	0x03CDB820 ADRP X21, 0x46E000
	0x03CDB824 LDR X21, [X21 + 0x580]
	0x03CDB828 LDR X0, [X21]
	0x03CDB82C LDR W8, [X0 + 0xE0]
	0x03CDB830 CBNZ W8, 0x3CDB838
	0x03CDB834 BL 0x1C16DFC
	0x03CDB838 BL 0x3CDF9A4
	0x03CDB83C CBZ X0, 0x3CDB8FC
	0x03CDB840 LDR X0, [X0 + 0x10]
	0x03CDB844 CBZ X0, 0x3CDB8FC
	0x03CDB848 ADRP X8, 0x487000
	0x03CDB84C LDR X8, [X8 + 0x408]
	0x03CDB850 ADD X2, X31, 0x8
	0x03CDB854 MOV X1, X20
	0x03CDB858 LDR X3, [X8]
	0x03CDB85C BL 0x2AA6B2C
	0x03CDB860 TBZ X0, 0x0, 0x3CDB8EC
	0x03CDB864 LDR X0, [X31 + 0x8]
	0x03CDB868 CBZ X0, 0x3CDB8FC
	0x03CDB86C ADRP X8, 0x487000
	0x03CDB870 LDR X8, [X8 + 0x410]
	0x03CDB874 MOV X1, X19
	0x03CDB878 LDR X2, [X8]
	0x03CDB87C BL 0x2DE291C
	0x03CDB880 LDR X0, [X31 + 0x8]
	0x03CDB884 CBZ X0, 0x3CDB8FC
	0x03CDB888 ADRP X8, 0x487000
	0x03CDB88C LDR X8, [X8 + 0x460]
	0x03CDB890 LDR X1, [X8]
	0x03CDB894 BL 0x2DE2A8C
	0x03CDB898 CBNZ W0, 0x3CDB8D0
	0x03CDB89C LDR X0, [X21]
	0x03CDB8A0 LDR W8, [X0 + 0xE0]
	0x03CDB8A4 CBNZ W8, 0x3CDB8AC
	0x03CDB8A8 BL 0x1C16DFC
	0x03CDB8AC BL 0x3CDF9A4
	0x03CDB8B0 CBZ X0, 0x3CDB8FC
	0x03CDB8B4 LDR X0, [X0 + 0x10]
	0x03CDB8B8 CBZ X0, 0x3CDB8FC
	0x03CDB8BC ADRP X8, 0x487000
	0x03CDB8C0 LDR X8, [X8 + 0x400]
	0x03CDB8C4 MOV X1, X20
	0x03CDB8C8 LDR X2, [X8]
	0x03CDB8CC BL 0x2AA64F8
	0x03CDB8D0 LDR X0, [X21]
	0x03CDB8D4 LDR W8, [X0 + 0xE0]
	0x03CDB8D8 CBNZ W8, 0x3CDB8E0
	0x03CDB8DC BL 0x1C16DFC
	0x03CDB8E0 MOV X0, X20
	0x03CDB8E4 MOV X1, X19
	0x03CDB8E8 BL 0x3CDAE5C
	0x03CDB8EC LDP X20, X19, [X31 + 0x20]
	0x03CDB8F0 LDP X22, X21, [X31 + 0x10]
	0x03CDB8F4 LDR X30, [X31], #0x30
	0x03CDB8F8 RET
	0x03CDB8FC BL 0x1C16F20
	0x03CDB900 STR X30, [X31 - 0x20]!
	0x03CDB904 STP X20, X19, [X31 + 0x10]
	0x03CDB908 ADRP X20, 0x70C000
	0x03CDB90C LDRB W8, [X20 + 0x496]
	0x03CDB910 MOV X19, X0
	0x03CDB914 TBNZ X8, 0x0, 0x3CDB92C
	0x03CDB918 ADRP X0, 0x46E000
	0x03CDB91C LDR X0, [X0 + 0x580]
	0x03CDB920 BL 0x1C16CF4
	0x03CDB924 MOVZ W8, 0x1
	0x03CDB928 STRB W8, [X20 + 0x496]
	0x03CDB92C MOV X0, X19
	0x03CDB930 MOV X1, X31
	0x03CDB934 BL 0x3E59AD8
	0x03CDB938 LDR X8, [X19]
	0x03CDB93C STR X31, [X19 + 0x60]
	0x03CDB940 MOV X0, X19
	0x03CDB944 LDP X9, X1, [X8 + 0x1C8]
	0x03CDB948 BLR X9
	0x03CDB94C TBZ X0, 0x0, 0x3CDB9A8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x70D000
	007 Move X20, 0x488000
	008 Move W8, [X21+1162]
	009 Move X20, [X20+920]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x488000
	016 Move X0, [X0+896]
	017 Call 0x1C17CF4
	018 Move X0, 0x488000
	019 Move X0, [X0+952]
	020 Call 0x1C17CF4
	021 Move X0, 0x488000
	022 Move X0, [X0+960]
	023 Call 0x1C17CF4
	024 Move X0, 0x488000
	025 Move X0, [X0+968]
	026 Call 0x1C17CF4
	027 Move X0, 0x488000
	028 Move X0, [X0+920]
	029 Call 0x1C17CF4
	030 Move X0, 0x488000
	031 Move X0, [X0+976]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1162], W8
	035 Move X0, [X20]
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move [X31], X31
	039 Move [X31+8], X31
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X0, [X8]
	047 Compare X0, 0
	048 JumpIfEqual {89}
	049 Move X8, 0x488000
	050 Move X8, [X8+896]
	051 Add X2, X31, 24
	052 Move X1, X19
	053 Move X3, [X8]
	054 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	055 Move X0, [X31+24]
	056 Compare X0, 0
	057 JumpIfEqual {82}
	058 Move X8, 0x488000
	059 Move X8, [X8+976]
	060 Move X20, 0x488000
	061 Move X19, 0x488000
	062 Move X1, [X8]
	063 Move X20, [X20+960]
	064 Move X19, [X19+952]
	065 Add X8, X31, 0
	066 Call HashSet`1<Object>.GetEnumerator, X0
	067 Move X1, [X20]
	068 Add X0, X31, 0
	069 Call Enumerator<Object>.MoveNext, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {79}
	074 Move X0, [X31+16]
	075 Compare X0, 0
	076 JumpIfEqual {88}
	077 Move X1, X31
	078 Call Text.FontTextureChanged, X0
	079 Move X1, [X19]
	080 Add X0, X31, 0
	081 Call Enumerator<Object>.Dispose, X0
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Add X31, X31, 64
	087 Return 
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 Move X19, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X19
	093 Call 0x3EB2AD0
	094 Move X20, [X0]
	095 Call 0x3EB2AE0
	096 Move X8, 0x488000
	097 Move X8, [X8+952]
	098 Add X0, X31, 0
	099 Move X1, [X8]
	100 Call Enumerator<Object>.Dispose, X0
	101 Compare X20, 0
	102 JumpIfEqual {82}
	103 Move X0, X20
	104 Call 0x1C17F18
	105 Move X20, X31
	106 Move X19, X0
	107 Move X8, 0x488000
	108 Move X8, [X8+952]
	109 Move X1, [X8]
	110 Add X0, X31, 0
	111 Call Enumerator<Object>.Dispose, X0
	112 Compare X20, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X19
	115 Call 0x1D2D690
	116 Move X0, X20
	117 Call 0x1C17F18
	118 Call 0x1991590

Method: System.Void UntrackText(UnityEngine.UI.Text t)

Disassembly:
	0x03CDB950 ADRP X20, 0x46E000
	0x03CDB954 LDR X20, [X20 + 0x580]
	0x03CDB958 MOV X0, X19
	0x03CDB95C BL 0x3CDB9B4
	0x03CDB960 MOV X0, X19
	0x03CDB964 BL 0x3CDADE8
	0x03CDB968 LDR X8, [X20]
	0x03CDB96C MOV X20, X0
	0x03CDB970 LDR W9, [X8 + 0xE0]
	0x03CDB974 CBNZ W9, 0x3CDB980
	0x03CDB978 MOV X0, X8
	0x03CDB97C BL 0x1C16DFC
	0x03CDB980 MOV X0, X20
	0x03CDB984 MOV X1, X19
	0x03CDB988 BL 0x3CDBB24
	0x03CDB98C LDR X8, [X19]
	0x03CDB990 MOV X0, X19
	0x03CDB994 LDP X20, X19, [X31 + 0x10]
	0x03CDB998 LDR X2, [X8 + 0x2D8]
	0x03CDB99C LDR X1, [X8 + 0x2E0]
	0x03CDB9A0 LDR X30, [X31], #0x20
	0x03CDB9A4 BR X2
	0x03CDB9A8 LDP X20, X19, [X31 + 0x10]
	0x03CDB9AC LDR X30, [X31], #0x20
	0x03CDB9B0 RET
	0x03CDB9B4 STP X30, X23, [X31 - 0x30]!
	0x03CDB9B8 STP X22, X21, [X31 + 0x10]
	0x03CDB9BC STP X20, X19, [X31 + 0x20]
	0x03CDB9C0 ADRP X20, 0x70C000
	0x03CDB9C4 ADRP X22, 0x487000
	0x03CDB9C8 LDRB W8, [X20 + 0x499]
	0x03CDB9CC LDR X22, [X22 + 0x308]
	0x03CDB9D0 MOV X19, X0
	0x03CDB9D4 TBNZ X8, 0x0, 0x3CDBA28
	0x03CDB9D8 ADRP X0, 0x487000
	0x03CDB9DC LDR X0, [X0 + 0x2F8]
	0x03CDB9E0 BL 0x1C16CF4
	0x03CDB9E4 ADRP X0, 0x487000
	0x03CDB9E8 LDR X0, [X0 + 0x300]
	0x03CDB9EC BL 0x1C16CF4
	0x03CDB9F0 ADRP X0, 0x487000
	0x03CDB9F4 LDR X0, [X0 + 0x308]
	0x03CDB9F8 BL 0x1C16CF4
	0x03CDB9FC ADRP X0, 0x47D000
	0x03CDBA00 LDR X0, [X0 + 0x768]
	0x03CDBA04 BL 0x1C16CF4
	0x03CDBA08 ADRP X0, 0x47D000
	0x03CDBA0C LDR X0, [X0 + 0x770]
	0x03CDBA10 BL 0x1C16CF4
	0x03CDBA14 ADRP X0, 0x47D000
	0x03CDBA18 LDR X0, [X0 + 0x778]
	0x03CDBA1C BL 0x1C16CF4
	0x03CDBA20 MOVZ W8, 0x1
	0x03CDBA24 STRB W8, [X20 + 0x499]
	0x03CDBA28 LDR X0, [X22]
	0x03CDBA2C ADRP X20, 0x487000
	0x03CDBA30 LDR W8, [X0 + 0xE0]
	0x03CDBA34 LDR X20, [X20 + 0x2F8]
	0x03CDBA38 CBNZ W8, 0x3CDBA40
	0x03CDBA3C BL 0x1C16DFC
	0x03CDBA40 LDR X0, [X20]
	0x03CDBA44 BL 0x28F98D4
	0x03CDBA48 MOV X20, X0
	0x03CDBA4C MOV X0, X19
	0x03CDBA50 MOV X1, X31
	0x03CDBA54 BL 0x3C32ECC
	0x03CDBA58 CBZ X0, 0x3CDBB20
	0x03CDBA5C ADRP X8, 0x47D000
	0x03CDBA60 LDR X8, [X8 + 0x768]
	0x03CDBA64 MOV W1, W31
	0x03CDBA68 MOV X2, X20
	0x03CDBA6C LDR X3, [X8]
	0x03CDBA70 BL 0x21E64C8
	0x03CDBA74 CBZ X20, 0x3CDBB20
	0x03CDBA78 LDR W8, [X20 + 0x18]
	0x03CDBA7C CMP W8, 0x1
	0x03CDBA80 B.LT 0x3CDBAD4
	0x03CDBA84 ADRP X23, 0x47D000
	0x03CDBA88 LDR X23, [X23 + 0x778]
	0x03CDBA8C MOV W21, W31
	0x03CDBA90 LDR X2, [X23]
	0x03CDBA94 MOV X0, X20
	0x03CDBA98 MOV W1, W21
	0x03CDBA9C BL 0x301BCCC
	0x03CDBAA0 CBZ X0, 0x3CDBB20
	0x03CDBAA4 MOV X1, X31
	0x03CDBAA8 BL 0x3C32454
	0x03CDBAAC TBNZ X0, 0x0, 0x3CDBADC
	0x03CDBAB0 LDR W8, [X20 + 0x18]
	0x03CDBAB4 SUB W9, W8, 0x1
	0x03CDBAB8 CMP W21, W9
	0x03CDBABC B.NE 0x3CDBAC4
	0x03CDBAC0 STR X31, [X19 + 0x60]
	0x03CDBAC4 ADD W21, W21, 0x1
	0x03CDBAC8 CMP W21, W8
	0x03CDBACC B.LT 0x3CDBA90
	0x03CDBAD0 B 0x3CDBAF0
	0x03CDBAD4 STR X31, [X19 + 0x60]
	0x03CDBAD8 B 0x3CDBAF0
	0x03CDBADC LDR X2, [X23]
	0x03CDBAE0 MOV X0, X20
	0x03CDBAE4 MOV W1, W21
	0x03CDBAE8 BL 0x301BCCC
	0x03CDBAEC STR X0, [X19 + 0x60]
	0x03CDBAF0 LDR X0, [X22]
	0x03CDBAF4 ADRP X19, 0x487000
	0x03CDBAF8 LDR W8, [X0 + 0xE0]
	0x03CDBAFC LDR X19, [X19 + 0x300]
	0x03CDBB00 CBNZ W8, 0x3CDBB08
	0x03CDBB04 BL 0x1C16DFC
	0x03CDBB08 LDR X1, [X19]
	0x03CDBB0C MOV X0, X20
	0x03CDBB10 LDP X20, X19, [X31 + 0x20]
	0x03CDBB14 LDP X22, X21, [X31 + 0x10]
	0x03CDBB18 LDP X30, X23, [X31], #0x30
	0x03CDBB1C B 0x28F9A14
	0x03CDBB20 BL 0x1C16F20
	0x03CDBB24 STR X30, [X31 - 0x30]!
	0x03CDBB28 STP X22, X21, [X31 + 0x10]
	0x03CDBB2C STP X20, X19, [X31 + 0x20]
	0x03CDBB30 ADRP X22, 0x70C000
	0x03CDBB34 ADRP X21, 0x418000
	0x03CDBB38 LDRB W8, [X22 + 0x4BF]
	0x03CDBB3C LDR X21, [X21 + 0x598]
	0x03CDBB40 MOV X19, X1
	0x03CDBB44 MOV X20, X0
	0x03CDBB48 TBNZ X8, 0x0, 0x3CDBBB4
	0x03CDBB4C ADRP X0, 0x487000
	0x03CDBB50 LDR X0, [X0 + 0x420]
	0x03CDBB54 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x70D000
	007 Move W8, [X20+1163]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {42}
	013 Move X0, 0x487000
	014 Move X0, [X0+4080]
	015 Call 0x1C17CF4
	016 Move X0, 0x488000
	017 Move X0, [X0+984]
	018 Call 0x1C17CF4
	019 Move X0, 0x488000
	020 Move X0, [X0+896]
	021 Call 0x1C17CF4
	022 Move X0, 0x488000
	023 Move X0, [X0+904]
	024 Call 0x1C17CF4
	025 Move X0, 0x488000
	026 Move X0, [X0+912]
	027 Call 0x1C17CF4
	028 Move X0, 0x488000
	029 Move X0, [X0+920]
	030 Call 0x1C17CF4
	031 Move X0, 0x488000
	032 Move X0, [X0+992]
	033 Call 0x1C17CF4
	034 Move X0, 0x488000
	035 Move X0, [X0+1000]
	036 Call 0x1C17CF4
	037 Move X0, 0x419000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+1163], W8
	042 Move [X31+8], X31
	043 Compare X19, 0
	044 JumpIfEqual {151}
	045 Move X20, 0x419000
	046 Move X20, [X20+1432]
	047 Move X0, X19
	048 Move X1, X31
	049 Call Text.get_font, X0
	050 Move X8, [X20]
	051 Move X20, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {145}
	065 Move X21, 0x488000
	066 Move X21, [X21+920]
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X21]
	073 Move X8, [X0+184]
	074 Move X0, X19
	075 Move X1, X31
	076 Move X20, [X8]
	077 Call Text.get_font, X0
	078 Compare X20, 0
	079 JumpIfEqual {151}
	080 Move X8, 0x488000
	081 Move X8, [X8+896]
	082 Move X1, X0
	083 Add X2, X31, 8
	084 Move X0, X20
	085 Move X3, [X8]
	086 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	087 Move X0, [X31+8]
	088 Compare X0, 0
	089 JumpIfEqual {145}
	090 Move X8, 0x488000
	091 Move X8, [X8+992]
	092 Move X1, X19
	093 Move X2, [X8]
	094 Call HashSet`1<Object>.Remove, X0, X1
	095 Move X8, [X31+8]
	096 Compare X8, 0
	097 JumpIfEqual {151}
	098 Move W8, [X8+32]
	099 Compare W8, 0
	100 JumpIfNotEqual {145}
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X21]
	107 Move X8, [X0+184]
	108 Move X0, X19
	109 Move X1, X31
	110 Move X20, [X8]
	111 Call Text.get_font, X0
	112 Compare X20, 0
	113 JumpIfEqual {151}
	114 Move X8, 0x488000
	115 Move X8, [X8+984]
	116 Move X1, X0
	117 Move X0, X20
	118 Move X2, [X8]
	119 Call Dictionary`2<Object, Object>.Remove, X0, X1
	120 Move X8, [X21]
	121 Move X8, [X8+184]
	122 Move X0, [X8]
	123 Compare X0, 0
	124 JumpIfEqual {151}
	125 Move X8, 0x488000
	126 Move X8, [X8+904]
	127 Move X1, [X8]
	128 Call Dictionary`2<Object, Object>.get_Count, X0
	129 Compare W0, 0
	130 JumpIfNotEqual {145}
	131 Move X8, 0x487000
	132 Move X8, [X8+4080]
	133 Move X0, [X8]
	134 Call 0x1C17F10
	135 Move X8, 0x488000
	136 Move X8, [X8+912]
	137 Move X1, X31
	138 Move X3, X31
	139 Move X19, X0
	140 Move X2, [X8]
	141 Call Action`1<Object>..ctor, X0, X1, X2
	142 Move X0, X19
	143 Move X1, X31
	144 Call Font.remove_textureRebuilt, X0
	145 Move X20, [X31+32]
	146 Move X19, [X31+40]
	147 Move X30, [X31+16]
	148 Move X21, [X31+24]
	149 Add X31, X31, 48
	150 Return 
	151 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03CDBB58 ADRP X0, 0x487000
	0x03CDBB5C LDR X0, [X0 + 0x408]
	0x03CDBB60 BL 0x1C16CF4
	0x03CDBB64 ADRP X0, 0x46E000
	0x03CDBB68 LDR X0, [X0 + 0x580]
	0x03CDBB6C BL 0x1C16CF4
	0x03CDBB70 ADRP X0, 0x487000
	0x03CDBB74 LDR X0, [X0 + 0x428]
	0x03CDBB78 BL 0x1C16CF4
	0x03CDBB7C ADRP X0, 0x487000
	0x03CDBB80 LDR X0, [X0 + 0x430]
	0x03CDBB84 BL 0x1C16CF4
	0x03CDBB88 ADRP X0, 0x487000
	0x03CDBB8C LDR X0, [X0 + 0x438]
	0x03CDBB90 BL 0x1C16CF4
	0x03CDBB94 ADRP X0, 0x487000
	0x03CDBB98 LDR X0, [X0 + 0x440]
	0x03CDBB9C BL 0x1C16CF4
	0x03CDBBA0 ADRP X0, 0x418000
	0x03CDBBA4 LDR X0, [X0 + 0x598]
	0x03CDBBA8 BL 0x1C16CF4
	0x03CDBBAC MOVZ W8, 0x1
	0x03CDBBB0 STRB W8, [X22 + 0x4BF]
	0x03CDBBB4 LDR X0, [X21]
	0x03CDBBB8 STR X31, [X31 + 0x8]
	0x03CDBBBC LDR W8, [X0 + 0xE0]
	0x03CDBBC0 CBNZ W8, 0x3CDBBC8
	0x03CDBBC4 BL 0x1C16DFC
	0x03CDBBC8 MOV X0, X20
	0x03CDBBCC MOV X1, X31
	0x03CDBBD0 MOV X2, X31
	0x03CDBBD4 BL 0x3C3883C
	0x03CDBBD8 TBNZ X0, 0x0, 0x3CDBCFC
	0x03CDBBDC LDR X0, [X21]
	0x03CDBBE0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x70D000
	007 Move X22, 0x488000
	008 Move X19, 0x488000
	009 Move X20, 0x488000
	010 Move W8, [X21+1164]
	011 Move X22, [X22+1008]
	012 Move X19, [X19+1016]
	013 Move X20, [X20+920]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x488000
	019 Move X0, [X0+1016]
	020 Call 0x1C17CF4
	021 Move X0, 0x488000
	022 Move X0, [X0+1008]
	023 Call 0x1C17CF4
	024 Move X0, 0x488000
	025 Move X0, [X0+920]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1164], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

