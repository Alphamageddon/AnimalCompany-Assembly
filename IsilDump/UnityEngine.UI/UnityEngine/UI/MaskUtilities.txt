Type: UnityEngine.UI.MaskUtilities

Method: System.Void Notify2DMaskStateChanged(UnityEngine.Component mask)

Disassembly:
	0x03E390DC MOV X2, X31
	0x03E390E0 BL 0x3C3883C
	0x03E390E4 TBZ X0, 0x0, 0x3E3911C
	0x03E390E8 LDR X0, [X23]
	0x03E390EC LDR X20, [X20 + 0x20]
	0x03E390F0 LDR X19, [X19 + 0x20]
	0x03E390F4 LDR W8, [X0 + 0xE0]
	0x03E390F8 CBNZ W8, 0x3E39100
	0x03E390FC BL 0x1C16DFC
	0x03E39100 MOV X0, X20
	0x03E39104 MOV X1, X19
	0x03E39108 LDP X20, X19, [X31 + 0x20]
	0x03E3910C LDP X22, X21, [X31 + 0x10]
	0x03E39110 MOV X2, X31
	0x03E39114 LDP X30, X23, [X31], #0x30
	0x03E39118 B 0x3C3883C
	0x03E3911C LDP X20, X19, [X31 + 0x20]
	0x03E39120 LDP X22, X21, [X31 + 0x10]
	0x03E39124 MOV W0, W31
	0x03E39128 LDP X30, X23, [X31], #0x30
	0x03E3912C RET
	0x03E39130 STP X30, X19, [X31 - 0x10]!
	0x03E39134 ADRP X8, 0xFFFFFFFFFCCB1000
	0x03E39138 LDR V0, [X8 + 0xBC]
	0x03E3913C MOV X1, X31
	0x03E39140 MOV X19, X0
	0x03E39144 STR V0, [X0 + 0xE]
	0x03E39148 BL 0x3E37FD0
	0x03E3914C STRB W31, [X19 + 0xA0]
	0x03E39150 LDP X30, X19, [X31], #0x10
	0x03E39154 RET
	0x03E39158 STP X30, X21, [X31 - 0x20]!
	0x03E3915C STP X20, X19, [X31 + 0x10]
	0x03E39160 ADRP X20, 0x5AF000
	0x03E39164 ADRP X21, 0x2BA000
	0x03E39168 LDRB W8, [X20 + 0x785]
	0x03E3916C LDR X21, [X21 + 0x598]
	0x03E39170 MOV X19, X0
	0x03E39174 TBNZ X8, 0x0, 0x3E39198
	0x03E39178 ADRP X0, 0x320000
	0x03E3917C LDR X0, [X0 + 0x118]
	0x03E39180 BL 0x1C16CF4
	0x03E39184 ADRP X0, 0x2BA000
	0x03E39188 LDR X0, [X0 + 0x598]
	0x03E3918C BL 0x1C16CF4
	0x03E39190 MOVZ W8, 0x1
	0x03E39194 STRB W8, [X20 + 0x785]
	0x03E39198 LDR X0, [X21]
	0x03E3919C LDR X20, [X19 + 0xD8]
	0x03E391A0 LDR W8, [X0 + 0xE0]
	0x03E391A4 CBNZ W8, 0x3E391AC
	0x03E391A8 BL 0x1C16DFC
	0x03E391AC MOV X0, X20
	0x03E391B0 MOV X1, X31
	0x03E391B4 MOV X2, X31
	0x03E391B8 BL 0x3C3883C
	0x03E391BC TBZ X0, 0x0, 0x3E39274
	0x03E391C0 LDR X8, [X19]
	0x03E391C4 MOV X0, X19
	0x03E391C8 LDR X9, [X8 + 0x338]
	0x03E391CC LDR X1, [X8 + 0x340]
	0x03E391D0 BLR X9
	0x03E391D4 LDR X8, [X21]
	0x03E391D8 MOV X20, X0
	0x03E391DC LDR W9, [X8 + 0xE0]
	0x03E391E0 CBNZ W9, 0x3E391EC
	0x03E391E4 MOV X0, X8
	0x03E391E8 BL 0x1C16DFC
	0x03E391EC MOV X0, X20
	0x03E391F0 MOV X1, X31
	0x03E391F4 MOV X2, X31
	0x03E391F8 BL 0x3C354F8
	0x03E391FC TBZ X0, 0x0, 0x3E3927C
	0x03E39200 LDR X8, [X19]
	0x03E39204 MOV X0, X19
	0x03E39208 LDR X9, [X8 + 0x338]
	0x03E3920C LDR X1, [X8 + 0x340]
	0x03E39210 BLR X9
	0x03E39214 CBZ X0, 0x3E392AC
	0x03E39218 MOV X1, X31
	0x03E3921C BL 0x3C14A08
	0x03E39220 LDR X8, [X21]
	0x03E39224 MOV X20, X0
	0x03E39228 LDR W9, [X8 + 0xE0]
	0x03E3922C CBNZ W9, 0x3E39238
	0x03E39230 MOV X0, X8
	0x03E39234 BL 0x1C16DFC
	0x03E39238 MOV X0, X20
	0x03E3923C MOV X1, X31
	0x03E39240 MOV X2, X31
	0x03E39244 BL 0x3C354F8
	0x03E39248 TBZ X0, 0x0, 0x3E3927C
	0x03E3924C LDR X8, [X19]
	0x03E39250 MOV X0, X19
	0x03E39254 LDR X9, [X8 + 0x338]
	0x03E39258 LDR X1, [X8 + 0x340]
	0x03E3925C BLR X9
	0x03E39260 CBZ X0, 0x3E392AC
	0x03E39264 LDP X20, X19, [X31 + 0x10]
	0x03E39268 MOV X1, X31
	0x03E3926C LDP X30, X21, [X31], #0x20
	0x03E39270 B 0x3C14A08
	0x03E39274 LDR X0, [X19 + 0xD8]
	0x03E39278 B 0x3E392A0
	0x03E3927C ADRP X19, 0x320000
	0x03E39280 LDR X19, [X19 + 0x118]
	0x03E39284 LDR X0, [X19]
	0x03E39288 LDR W8, [X0 + 0xE0]
	0x03E3928C CBNZ W8, 0x3E39298
	0x03E39290 BL 0x1C16DFC
	0x03E39294 LDR X0, [X19]
	0x03E39298 LDR X8, [X0 + 0xB8]
	0x03E3929C LDR X0, [X8 + 0x8]
	0x03E392A0 LDP X20, X19, [X31 + 0x10]
	0x03E392A4 LDP X30, X21, [X31], #0x20
	0x03E392A8 RET
	0x03E392AC BL 0x1C16F20
	0x03E392B0 LDR X0, [X0 + 0xD8]
	0x03E392B4 RET
	0x03E392B8 STR X30, [X31 - 0x30]!
	0x03E392BC STP X22, X21, [X31 + 0x10]
	0x03E392C0 STP X20, X19, [X31 + 0x20]
	0x03E392C4 ADRP X22, 0x5AF000
	0x03E392C8 ADRP X21, 0x2BA000
	0x03E392CC LDRB W8, [X22 + 0x786]
	0x03E392D0 LDR X21, [X21 + 0x598]
	0x03E392D4 MOV X20, X1
	0x03E392D8 MOV X19, X0
	0x03E392DC TBNZ X8, 0x0, 0x3E392F4
	0x03E392E0 ADRP X0, 0x2BA000
	0x03E392E4 LDR X0, [X0 + 0x598]
	0x03E392E8 BL 0x1C16CF4
	0x03E392EC MOVZ W8, 0x1
	0x03E392F0 STRB W8, [X22 + 0x786]
	0x03E392F4 LDR X0, [X21]
	0x03E392F8 LDR X21, [X19 + 0xD8]
	0x03E392FC LDR W8, [X0 + 0xE0]
	0x03E39300 CBNZ W8, 0x3E39308
	0x03E39304 BL 0x1C16DFC
	0x03E39308 MOV X0, X21
	0x03E3930C MOV X1, X20
	0x03E39310 MOV X2, X31
	0x03E39314 BL 0x3C3883C
	0x03E39318 TBZ X0, 0x0, 0x3E3932C
	0x03E3931C LDP X20, X19, [X31 + 0x20]
	0x03E39320 LDP X22, X21, [X31 + 0x10]
	0x03E39324 LDR X30, [X31], #0x30
	0x03E39328 RET
	0x03E3932C LDR X8, [X19]
	0x03E39330 STR X20, [X19 + 0xD8]
	0x03E39334 MOV X0, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x5B0000
	012 Move X24, 0x2E3000
	013 Move W8, [X20+1914]
	014 Move X24, [X24+2600]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x2E3000
	021 Move X0, [X0+2584]
	022 Call 0x1C17CF4
	023 Move X0, 0x2E3000
	024 Move X0, [X0+2592]
	025 Call 0x1C17CF4
	026 Move X0, 0x2E3000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0x333000
	030 Move X0, [X0+520]
	031 Call 0x1C17CF4
	032 Move X0, 0x333000
	033 Move X0, [X0+608]
	034 Call 0x1C17CF4
	035 Move X0, 0x2E3000
	036 Move X0, [X0+2624]
	037 Call 0x1C17CF4
	038 Move X0, 0x2E3000
	039 Move X0, [X0+2632]
	040 Call 0x1C17CF4
	041 Move X0, 0x2BB000
	042 Move X0, [X0+1432]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+1914], W8
	046 Move X0, [X24]
	047 Move X20, 0x2E3000
	048 Move W8, [X0+224]
	049 Move X20, [X20+2584]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Call CollectionPool`2<Object, Object>.Get
	055 Compare X19, 0
	056 JumpIfEqual {176}
	057 Move X8, 0x333000
	058 Move X8, [X8+520]
	059 Move X20, X0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X2, [X8]
	063 Call 0x21A5608, X0, X1
	064 Compare X20, 0
	065 JumpIfEqual {176}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X25, 0x2E3000
	069 Move X26, 0x2BB000
	070 Move X27, 0x333000
	071 Move X25, [X25+2632]
	072 Move X26, [X26+1432]
	073 Move X27, [X27+608]
	074 Move W21, W31
	075 Move X2, [X25]
	076 Move X0, X20
	077 Move W1, W21
	078 Call List`1<Object>.get_Item, X0, X1
	079 Move X8, [X26]
	080 Move X22, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X22
	087 Move X1, X31
	088 Move X2, X31
	089 Call Object.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {152}
	094 Move X2, [X25]
	095 Move X0, X20
	096 Move W1, W21
	097 Call List`1<Object>.get_Item, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {176}
	100 Move X1, X31
	101 Call Component.get_gameObject, X0
	102 Move X22, X0
	103 Move X0, X19
	104 Move X1, X31
	105 Call Component.get_gameObject, X0
	106 Move X8, [X26]
	107 Move X23, X0
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move X0, X22
	114 Move X1, X23
	115 Move X2, X31
	116 Call Object.op_Equality, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {152}
	121 Move X2, [X25]
	122 Move X0, X20
	123 Move W1, W21
	124 Call List`1<Object>.get_Item, X0, X1
	125 Move X1, [X27]
	126 Call 0x1C17E00
	127 Compare X0, 0
	128 JumpIfEqual {152}
	129 Move X8, [X0]
	130 Move X1, [X27]
	131 Move X22, X0
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 1
	142 Move X0, X22
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 1
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X22
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move W8, [X20+24]
	153 Add W21, W21, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, [X24]
	156 Move X19, 0x2E3000
	157 Move W8, [X0+224]
	158 Move X19, [X19+2592]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X1, [X19]
	163 Move X0, X20
	164 Move X20, [X31+64]
	165 Move X19, [X31+72]
	166 Move X22, [X31+48]
	167 Move X21, [X31+56]
	168 Move X24, [X31+32]
	169 Move X23, [X31+40]
	170 Move X26, [X31+16]
	171 Move X25, [X31+24]
	172 Move X30, [X31+80]
	173 Move X27, [X31+88]
	174 Call CollectionPool`2<Object, Object>.Release, X0
	175 Return 
	176 Call 0x1C17F20

Method: System.Void NotifyStencilStateChanged(UnityEngine.Component mask)

Disassembly:
	0x03E37764 ADRP X8, 0x321000
	0x03E37768 LDR X8, [X8 + 0x740]
	0x03E3776C MOV W1, W20
	0x03E37770 LDR X2, [X8]
	0x03E37774 BL 0x2728B08
	0x03E37778 LDR X8, [X19]
	0x03E3777C MOV X0, X19
	0x03E37780 LDP X20, X19, [X31 + 0x10]
	0x03E37784 LDR X2, [X8 + 0x378]
	0x03E37788 LDR X1, [X8 + 0x380]
	0x03E3778C LDP X30, X21, [X31], #0x20
	0x03E37790 BR X2
	0x03E37794 LDP X20, X19, [X31 + 0x10]
	0x03E37798 LDP X30, X21, [X31], #0x20
	0x03E3779C RET
	0x03E377A0 BL 0x1C16F20
	0x03E377A4 STP D11, D10, [X31 - 0x30]!
	0x03E377A8 STP D9, D8, [X31 + 0x10]
	0x03E377AC STP X30, X19, [X31 + 0x20]
	0x03E377B0 MOV W19, W1
	0x03E377B4 MOV X1, X31
	0x03E377B8 MOV V8.16B, V3.16B
	0x03E377BC MOV V9.16B, V2.16B
	0x03E377C0 MOV V10.16B, V1.16B
	0x03E377C4 MOV V11.16B, V0.16B
	0x03E377C8 BL 0x3CDBD2C
	0x03E377CC CBZ X0, 0x3E3780C
	0x03E377D0 TBZ X19, 0x0, 0x3E377F8
	0x03E377D4 MOV V2.16B, V9.16B
	0x03E377D8 MOV V3.16B, V8.16B
	0x03E377DC LDP X30, X19, [X31 + 0x20]
	0x03E377E0 LDP D9, D8, [X31 + 0x10]
	0x03E377E4 MOV V0.16B, V11.16B
	0x03E377E8 MOV V1.16B, V10.16B
	0x03E377EC MOV X1, X31
	0x03E377F0 LDP D11, D10, [X31], #0x30
	0x03E377F4 B 0x3E227DC
	0x03E377F8 LDP X30, X19, [X31 + 0x20]
	0x03E377FC LDP D9, D8, [X31 + 0x10]
	0x03E37800 MOV X1, X31
	0x03E37804 LDP D11, D10, [X31], #0x30
	0x03E37808 B 0x3E22900
	0x03E3780C BL 0x1C16F20
	0x03E37810 STP D9, D8, [X31 - 0x20]!
	0x03E37814 STR X30, [X31 + 0x10]
	0x03E37818 MOV X1, X31
	0x03E3781C MOV V8.16B, V1.16B
	0x03E37820 MOV V9.16B, V0.16B
	0x03E37824 BL 0x3CDBD2C
	0x03E37828 CBZ X0, 0x3E37844
	0x03E3782C LDR X30, [X31 + 0x10]
	0x03E37830 MOV V0.16B, V9.16B
	0x03E37834 MOV V1.16B, V8.16B
	0x03E37838 MOV X1, X31
	0x03E3783C LDP D9, D8, [X31], #0x20
	0x03E37840 B 0x3E22874
	0x03E37844 BL 0x1C16F20
	0x03E37848 STP X30, X19, [X31 - 0x10]!
	0x03E3784C MOV X1, X31
	0x03E37850 MOV X19, X0
	0x03E37854 BL 0x3CDC144
	0x03E37858 MOVZ W8, 0x1
	0x03E3785C MOV X0, X19
	0x03E37860 STRB W8, [X19 + 0xA1]
	0x03E37864 BL 0x3E37898
	0x03E37868 LDR X8, [X19]
	0x03E3786C MOV X0, X19
	0x03E37870 LDR X9, [X8 + 0x308]
	0x03E37874 LDR X1, [X8 + 0x310]
	0x03E37878 BLR X9
	0x03E3787C LDRB W8, [X19 + 0xB9]
	0x03E37880 CBZ W8, 0x3E37890
	0x03E37884 MOV X0, X19
	0x03E37888 LDP X30, X19, [X31], #0x10
	0x03E3788C B 0x3E36764
	0x03E37890 LDP X30, X19, [X31], #0x10
	0x03E37894 RET
	0x03E37898 STR X30, [X31 - 0x30]!
	0x03E3789C STP X22, X21, [X31 + 0x10]
	0x03E378A0 STP X20, X19, [X31 + 0x20]
	0x03E378A4 ADRP X20, 0x5B1000
	0x03E378A8 LDRB W8, [X20 + 0x776]
	0x03E378AC MOV X19, X0
	0x03E378B0 TBNZ X8, 0x0, 0x3E378C8
	0x03E378B4 ADRP X0, 0x2BC000
	0x03E378B8 LDR X0, [X0 + 0x598]
	0x03E378BC BL 0x1C16CF4
	0x03E378C0 MOVZ W8, 0x1
	0x03E378C4 STRB W8, [X20 + 0x776]
	0x03E378C8 ADRP X22, 0x2BC000
	0x03E378CC LDRB W8, [X19 + 0xB8]
	0x03E378D0 LDR X22, [X22 + 0x598]
	0x03E378D4 CBZ W8, 0x3E378FC
	0x03E378D8 LDR X8, [X19]
	0x03E378DC MOV X0, X19
	0x03E378E0 LDP X9, X1, [X8 + 0x1C8]
	0x03E378E4 BLR X9
	0x03E378E8 TBZ X0, 0x0, 0x3E378FC
	0x03E378EC MOV X0, X19
	0x03E378F0 BL 0x3E37B3C
	0x03E378F4 MOV X20, X0
	0x03E378F8 B 0x3E37900
	0x03E378FC MOV X20, X31
	0x03E37900 LDR X0, [X22]
	0x03E37904 LDR X21, [X19 + 0xB0]
	0x03E37908 LDR W8, [X0 + 0xE0]
	0x03E3790C CBNZ W8, 0x3E37914
	0x03E37910 BL 0x1C16DFC
	0x03E37914 MOV X0, X21
	0x03E37918 MOV X1, X31
	0x03E3791C MOV X2, X31
	0x03E37920 BL 0x3C354F8
	0x03E37924 TBZ X0, 0x0, 0x3E37988
	0x03E37928 LDR X0, [X22]
	0x03E3792C LDR X21, [X19 + 0xB0]
	0x03E37930 LDR W8, [X0 + 0xE0]
	0x03E37934 CBNZ W8, 0x3E3793C
	0x03E37938 BL 0x1C16DFC
	0x03E3793C MOV X0, X20
	0x03E37940 MOV X1, X21
	0x03E37944 MOV X2, X31
	0x03E37948 BL 0x3C354F8
	0x03E3794C TBNZ X0, 0x0, 0x3E37968
	0x03E37950 CBZ X20, 0x3E379E8
	0x03E37954 LDR X8, [X20]
	0x03E37958 MOV X0, X20
	0x03E3795C LDP X9, X1, [X8 + 0x1C8]
	0x03E37960 BLR X9
	0x03E37964 TBNZ X0, 0x0, 0x3E37988
	0x03E37968 LDR X0, [X19 + 0xB0]
	0x03E3796C CBZ X0, 0x3E379E8
	0x03E37970 MOV X1, X19
	0x03E37974 MOV X2, X31
	0x03E37978 BL 0x3E3AFF0
	0x03E3797C MOV X0, X19
	0x03E37980 MOV W1, W31
	0x03E37984 BL 0x3E376C0
	0x03E37988 LDR X0, [X22]
	0x03E3798C LDR W8, [X0 + 0xE0]
	0x03E37990 CBNZ W8, 0x3E37998
	0x03E37994 BL 0x1C16DFC
	0x03E37998 MOV X0, X20
	0x03E3799C MOV X1, X31
	0x03E379A0 MOV X2, X31
	0x03E379A4 BL 0x3C354F8
	0x03E379A8 TBZ X0, 0x0, 0x3E379D4
	0x03E379AC CBZ X20, 0x3E379E8
	0x03E379B0 LDR X8, [X20]
	0x03E379B4 MOV X0, X20
	0x03E379B8 LDP X9, X1, [X8 + 0x1C8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x5B2000
	012 Move X24, 0x2E5000
	013 Move W8, [X20+1915]
	014 Move X24, [X24+2600]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x2E5000
	021 Move X0, [X0+2584]
	022 Call 0x1C17CF4
	023 Move X0, 0x2E5000
	024 Move X0, [X0+2592]
	025 Call 0x1C17CF4
	026 Move X0, 0x2E5000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0x335000
	030 Move X0, [X0+520]
	031 Call 0x1C17CF4
	032 Move X0, 0x335000
	033 Move X0, [X0+528]
	034 Call 0x1C17CF4
	035 Move X0, 0x2E5000
	036 Move X0, [X0+2624]
	037 Call 0x1C17CF4
	038 Move X0, 0x2E5000
	039 Move X0, [X0+2632]
	040 Call 0x1C17CF4
	041 Move X0, 0x2BD000
	042 Move X0, [X0+1432]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+1915], W8
	046 Move X0, [X24]
	047 Move X20, 0x2E5000
	048 Move W8, [X0+224]
	049 Move X20, [X20+2584]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Call CollectionPool`2<Object, Object>.Get
	055 Compare X19, 0
	056 JumpIfEqual {175}
	057 Move X8, 0x335000
	058 Move X8, [X8+520]
	059 Move X20, X0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X2, [X8]
	063 Call 0x21A5608, X0, X1
	064 Compare X20, 0
	065 JumpIfEqual {175}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X25, 0x2E5000
	069 Move X26, 0x2BD000
	070 Move X27, 0x335000
	071 Move X25, [X25+2632]
	072 Move X26, [X26+1432]
	073 Move X27, [X27+528]
	074 Move W21, W31
	075 Move X2, [X25]
	076 Move X0, X20
	077 Move W1, W21
	078 Call List`1<Object>.get_Item, X0, X1
	079 Move X8, [X26]
	080 Move X22, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X22
	087 Move X1, X31
	088 Move X2, X31
	089 Call Object.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {151}
	094 Move X2, [X25]
	095 Move X0, X20
	096 Move W1, W21
	097 Call List`1<Object>.get_Item, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {175}
	100 Move X1, X31
	101 Call Component.get_gameObject, X0
	102 Move X22, X0
	103 Move X0, X19
	104 Move X1, X31
	105 Call Component.get_gameObject, X0
	106 Move X8, [X26]
	107 Move X23, X0
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move X0, X22
	114 Move X1, X23
	115 Move X2, X31
	116 Call Object.op_Equality, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {151}
	121 Move X2, [X25]
	122 Move X0, X20
	123 Move W1, W21
	124 Call List`1<Object>.get_Item, X0, X1
	125 Move X1, [X27]
	126 Call 0x1C17E00
	127 Compare X0, 0
	128 JumpIfEqual {151}
	129 Move X8, [X0]
	130 Move X1, [X27]
	131 Move X22, X0
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X22
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X22
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move W8, [X20+24]
	152 Add W21, W21, 1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, [X24]
	155 Move X19, 0x2E5000
	156 Move W8, [X0+224]
	157 Move X19, [X19+2592]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X1, [X19]
	162 Move X0, X20
	163 Move X20, [X31+64]
	164 Move X19, [X31+72]
	165 Move X22, [X31+48]
	166 Move X21, [X31+56]
	167 Move X24, [X31+32]
	168 Move X23, [X31+40]
	169 Move X26, [X31+16]
	170 Move X25, [X31+24]
	171 Move X30, [X31+80]
	172 Move X27, [X31+88]
	173 Call CollectionPool`2<Object, Object>.Release, X0
	174 Return 
	175 Call 0x1C17F20

Method: UnityEngine.Transform FindRootSortOverrideCanvas(UnityEngine.Transform start)

Disassembly:
	0x03E37EC0 MOV X2, X19
	0x03E37EC4 LDR X3, [X8]
	0x03E37EC8 BL 0x21E64C8
	0x03E37ECC CBZ X19, 0x3E37F4C
	0x03E37ED0 LDR W8, [X19 + 0x18]
	0x03E37ED4 SUBS W21, W8, 0x1
	0x03E37ED8 B.MI 0x3E37DE8
	0x03E37EDC ADRP X24, 0x321000
	0x03E37EE0 LDR X24, [X24 + 0x778]
	0x03E37EE4 LDR X2, [X24]
	0x03E37EE8 MOV X0, X19
	0x03E37EEC MOV W1, W21
	0x03E37EF0 BL 0x301BCCC
	0x03E37EF4 CBZ X0, 0x3E37F4C
	0x03E37EF8 MOV X1, X31
	0x03E37EFC BL 0x3C32E90
	0x03E37F00 MOV X23, X0
	0x03E37F04 MOV X0, X22
	0x03E37F08 MOV X1, X31
	0x03E37F0C BL 0x3C32E90
	0x03E37F10 MOV X1, X0
	0x03E37F14 MOV X0, X23
	0x03E37F18 BL 0x3E38338
	0x03E37F1C TBNZ X0, 0x0, 0x3E37F40
	0x03E37F20 LDR X2, [X24]
	0x03E37F24 MOV X0, X19
	0x03E37F28 MOV W1, W21
	0x03E37F2C BL 0x301BCCC
	0x03E37F30 CBZ X0, 0x3E37F4C
	0x03E37F34 MOV X1, X31
	0x03E37F38 BL 0x3E248A4
	0x03E37F3C TBNZ X0, 0x0, 0x3E37DE4
	0x03E37F40 SUBS W21, W21, 0x1
	0x03E37F44 B.PL 0x3E37EE4
	0x03E37F48 B 0x3E37DE8
	0x03E37F4C BL 0x1C16F20
	0x03E37F50 B 0x3E37898
	0x03E37F54 STP X30, X21, [X31 - 0x20]!
	0x03E37F58 STP X20, X19, [X31 + 0x10]
	0x03E37F5C ADRP X21, 0x5B1000
	0x03E37F60 ADRP X20, 0x321000
	0x03E37F64 LDRB W8, [X21 + 0x777]
	0x03E37F68 LDR X20, [X20 + 0x738]
	0x03E37F6C MOV X19, X0
	0x03E37F70 TBNZ X8, 0x0, 0x3E37F88
	0x03E37F74 ADRP X0, 0x321000
	0x03E37F78 LDR X0, [X0 + 0x738]
	0x03E37F7C BL 0x1C16CF4
	0x03E37F80 MOVZ W8, 0x1
	0x03E37F84 STRB W8, [X21 + 0x777]
	0x03E37F88 LDR X0, [X20]
	0x03E37F8C LDR X20, [X19 + 0xA8]
	0x03E37F90 LDR W8, [X0 + 0xE0]
	0x03E37F94 CBNZ W8, 0x3E37F9C
	0x03E37F98 BL 0x1C16DFC
	0x03E37F9C MOV X0, X20
	0x03E37FA0 MOV X1, X31
	0x03E37FA4 BL 0x3E44A50
	0x03E37FA8 LDR X8, [X19]
	0x03E37FAC MOVZ W9, 0x1
	0x03E37FB0 STR X31, [X19 + 0xA8]
	0x03E37FB4 STRB W9, [X19 + 0xA1]
	0x03E37FB8 LDR X2, [X8 + 0x308]
	0x03E37FBC LDR X1, [X8 + 0x310]
	0x03E37FC0 MOV X0, X19
	0x03E37FC4 LDP X20, X19, [X31 + 0x10]
	0x03E37FC8 LDP X30, X21, [X31], #0x20
	0x03E37FCC BR X2
	0x03E37FD0 STP X30, X23, [X31 - 0x30]!
	0x03E37FD4 STP X22, X21, [X31 + 0x10]
	0x03E37FD8 STP X20, X19, [X31 + 0x20]
	0x03E37FDC ADRP X23, 0x5B1000
	0x03E37FE0 ADRP X20, 0x334000
	0x03E37FE4 ADRP X22, 0x2BE000
	0x03E37FE8 ADRP X21, 0x322000
	0x03E37FEC LDRB W8, [X23 + 0x778]
	0x03E37FF0 LDR X20, [X20 + 0x268]
	0x03E37FF4 LDR X22, [X22 + 0x9B0]
	0x03E37FF8 LDR X21, [X21 + 0x118]
	0x03E37FFC MOV X19, X0
	0x03E38000 TBNZ X8, 0x0, 0x3E38030
	0x03E38004 ADRP X0, 0x333000
	0x03E38008 LDR X0, [X0 + 0x268]
	0x03E3800C BL 0x1C16CF4
	0x03E38010 ADRP X0, 0x321000
	0x03E38014 LDR X0, [X0 + 0x118]
	0x03E38018 BL 0x1C16CF4
	0x03E3801C ADRP X0, 0x2BD000
	0x03E38020 LDR X0, [X0 + 0x9B0]
	0x03E38024 BL 0x1C16CF4
	0x03E38028 MOVZ W8, 0x1
	0x03E3802C STRB W8, [X23 + 0x778]
	0x03E38030 MOVZ W23, 0x1
	0x03E38034 STRB W23, [X19 + 0xA1]
	0x03E38038 STRB W23, [X19 + 0xB8]
	0x03E3803C LDR X0, [X20]
	0x03E38040 BL 0x1C16F10
	0x03E38044 MOV X20, X0
	0x03E38048 BL 0x3E3808C
	0x03E3804C STR X20, [X19 + 0xC0]
	0x03E38050 STRB W23, [X19 + 0xC8]
	0x03E38054 LDR X0, [X22]
	0x03E38058 MOVZ W1, 0x4
	0x03E3805C BL 0x1C16D6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x5B2000
	008 Move X22, 0x32C000
	009 Move W8, [X19+1916]
	010 Move X22, [X22+776]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x32C000
	017 Move X0, [X0+760]
	018 Call 0x1C17CF4
	019 Move X0, 0x32C000
	020 Move X0, [X0+768]
	021 Call 0x1C17CF4
	022 Move X0, 0x32C000
	023 Move X0, [X0+776]
	024 Call 0x1C17CF4
	025 Move X0, 0x323000
	026 Move X0, [X0+1792]
	027 Call 0x1C17CF4
	028 Move X0, 0x322000
	029 Move X0, [X0+1904]
	030 Call 0x1C17CF4
	031 Move X0, 0x322000
	032 Move X0, [X0+1912]
	033 Call 0x1C17CF4
	034 Move X0, 0x2BD000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+1916], W8
	039 Move X0, [X22]
	040 Move X19, 0x32C000
	041 Move W8, [X0+224]
	042 Move X19, [X19+760]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X19]
	047 Call CollectionPool`2<Object, Object>.Get
	048 Compare X20, 0
	049 JumpIfEqual {127}
	050 Move X8, 0x323000
	051 Move X8, [X8+1792]
	052 Move X19, X0
	053 Move X0, X20
	054 Move W1, W31
	055 Move X3, [X8]
	056 Move X2, X19
	057 Call 0x21A58CC, X0, X1, X2
	058 Compare X19, 0
	059 JumpIfEqual {127}
	060 Move W8, [X19+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X23, 0x322000
	063 Move X23, [X23+1912]
	064 Move W21, W31
	065 Move X2, [X23]
	066 Move X0, X19
	067 Move W1, W21
	068 Call List`1<Object>.get_Item, X0, X1
	069 Compare X0, 0
	070 JumpIfEqual {127}
	071 Move X1, X31
	072 Move X20, X0
	073 Call Canvas.get_overrideSorting, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {82}
	078 Move W8, [X19+24]
	079 Add W21, W21, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, X31
	082 Move X0, [X22]
	083 Move X22, 0x32C000
	084 Move X21, 0x2BD000
	085 Move W8, [X0+224]
	086 Move X22, [X22+768]
	087 Move X21, [X21+1432]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X1, [X22]
	092 Move X0, X19
	093 Call CollectionPool`2<Object, Object>.Release, X0
	094 Move X0, [X21]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X31
	101 Move X2, X31
	102 Call Object.op_Inequality, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {119}
	107 Compare X20, 0
	108 JumpIfEqual {127}
	109 Move X0, X20
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X1, X31
	115 Move X30, [X31+48]
	116 Move X23, [X31+56]
	117 Call Component.get_transform, X0
	118 Return X0
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X0, X31
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 Return X0
	127 Call 0x1C17F20

Method: System.Int32 GetStencilDepth(UnityEngine.Transform transform, UnityEngine.Transform stopAfter)

Disassembly:
	0x03E38060 STR X0, [X19 + 0xD0]
	0x03E38064 LDR X0, [X21]
	0x03E38068 LDR W8, [X0 + 0xE0]
	0x03E3806C CBNZ W8, 0x3E38074
	0x03E38070 BL 0x1C16DFC
	0x03E38074 MOV X0, X19
	0x03E38078 LDP X20, X19, [X31 + 0x20]
	0x03E3807C LDP X22, X21, [X31 + 0x10]
	0x03E38080 MOV X1, X31
	0x03E38084 LDP X30, X23, [X31], #0x30
	0x03E38088 B 0x3CDB1F0
	0x03E3808C STP X30, X21, [X31 - 0x20]!
	0x03E38090 STP X20, X19, [X31 + 0x10]
	0x03E38094 ADRP X20, 0x5B0000
	0x03E38098 ADRP X21, 0x321000
	0x03E3809C LDRB W8, [X20 + 0x779]
	0x03E380A0 LDR X21, [X21 + 0xC98]
	0x03E380A4 MOV X19, X0
	0x03E380A8 TBNZ X8, 0x0, 0x3E380C0
	0x03E380AC ADRP X0, 0x321000
	0x03E380B0 LDR X0, [X0 + 0xC98]
	0x03E380B4 BL 0x1C16CF4
	0x03E380B8 MOVZ W8, 0x1
	0x03E380BC STRB W8, [X20 + 0x779]
	0x03E380C0 LDR X1, [X21]
	0x03E380C4 MOV X0, X19
	0x03E380C8 LDP X20, X19, [X31 + 0x10]
	0x03E380CC LDP X30, X21, [X31], #0x20
	0x03E380D0 B 0x27288A8
	0x03E380D4 MOV X1, X31
	0x03E380D8 B 0x3C32ECC
	0x03E380DC STP X30, X27, [X31 - 0x50]!
	0x03E380E0 STP X26, X25, [X31 + 0x10]
	0x03E380E4 STP X24, X23, [X31 + 0x20]
	0x03E380E8 STP X22, X21, [X31 + 0x30]
	0x03E380EC STP X20, X19, [X31 + 0x40]
	0x03E380F0 ADRP X20, 0x5B0000
	0x03E380F4 ADRP X24, 0x2E3000
	0x03E380F8 LDRB W8, [X20 + 0x77A]
	0x03E380FC LDR X24, [X24 + 0xA28]
	0x03E38100 MOV X19, X0
	0x03E38104 TBNZ X8, 0x0, 0x3E38170
	0x03E38108 ADRP X0, 0x2E3000
	0x03E3810C LDR X0, [X0 + 0xA18]
	0x03E38110 BL 0x1C16CF4
	0x03E38114 ADRP X0, 0x2E3000
	0x03E38118 LDR X0, [X0 + 0xA20]
	0x03E3811C BL 0x1C16CF4
	0x03E38120 ADRP X0, 0x2E3000
	0x03E38124 LDR X0, [X0 + 0xA28]
	0x03E38128 BL 0x1C16CF4
	0x03E3812C ADRP X0, 0x333000
	0x03E38130 LDR X0, [X0 + 0x208]
	0x03E38134 BL 0x1C16CF4
	0x03E38138 ADRP X0, 0x333000
	0x03E3813C LDR X0, [X0 + 0x260]
	0x03E38140 BL 0x1C16CF4
	0x03E38144 ADRP X0, 0x2E3000
	0x03E38148 LDR X0, [X0 + 0xA40]
	0x03E3814C BL 0x1C16CF4
	0x03E38150 ADRP X0, 0x2E3000
	0x03E38154 LDR X0, [X0 + 0xA48]
	0x03E38158 BL 0x1C16CF4
	0x03E3815C ADRP X0, 0x2BB000
	0x03E38160 LDR X0, [X0 + 0x598]
	0x03E38164 BL 0x1C16CF4
	0x03E38168 MOVZ W8, 0x1
	0x03E3816C STRB W8, [X20 + 0x77A]
	0x03E38170 LDR X0, [X24]
	0x03E38174 ADRP X20, 0x2E3000
	0x03E38178 LDR W8, [X0 + 0xE0]
	0x03E3817C LDR X20, [X20 + 0xA18]
	0x03E38180 CBNZ W8, 0x3E38188
	0x03E38184 BL 0x1C16DFC
	0x03E38188 LDR X0, [X20]
	0x03E3818C BL 0x28F98D4
	0x03E38190 CBZ X19, 0x3E38334
	0x03E38194 ADRP X8, 0x333000
	0x03E38198 LDR X8, [X8 + 0x208]
	0x03E3819C MOV X20, X0
	0x03E381A0 MOV X0, X19
	0x03E381A4 MOV X1, X20
	0x03E381A8 LDR X2, [X8]
	0x03E381AC BL 0x21A4608
	0x03E381B0 CBZ X20, 0x3E38334
	0x03E381B4 LDR W8, [X20 + 0x18]
	0x03E381B8 CMP W8, 0x1
	0x03E381BC B.LT 0x3E382FC
	0x03E381C0 ADRP X25, 0x2E3000
	0x03E381C4 ADRP X26, 0x2BB000
	0x03E381C8 ADRP X27, 0x333000
	0x03E381CC LDR X25, [X25 + 0xA48]
	0x03E381D0 LDR X26, [X26 + 0x598]
	0x03E381D4 LDR X27, [X27 + 0x260]
	0x03E381D8 MOV W21, W31
	0x03E381DC LDR X2, [X25]
	0x03E381E0 MOV X0, X20
	0x03E381E4 MOV W1, W21
	0x03E381E8 BL 0x301BCCC
	0x03E381EC LDR X8, [X26]
	0x03E381F0 MOV X22, X0
	0x03E381F4 LDR W9, [X8 + 0xE0]
	0x03E381F8 CBNZ W9, 0x3E38204
	0x03E381FC MOV X0, X8
	0x03E38200 BL 0x1C16DFC
	0x03E38204 MOV X0, X22
	0x03E38208 MOV X1, X31
	0x03E3820C MOV X2, X31
	0x03E38210 BL 0x3C3883C
	0x03E38214 TBNZ X0, 0x0, 0x3E382EC
	0x03E38218 LDR X2, [X25]
	0x03E3821C MOV X0, X20
	0x03E38220 MOV W1, W21
	0x03E38224 BL 0x301BCCC
	0x03E38228 CBZ X0, 0x3E38334
	0x03E3822C MOV X1, X31
	0x03E38230 BL 0x3C32ECC
	0x03E38234 MOV X22, X0
	0x03E38238 MOV X0, X19
	0x03E3823C MOV X1, X31
	0x03E38240 BL 0x3C32ECC
	0x03E38244 LDR X8, [X26]
	0x03E38248 MOV X23, X0
	0x03E3824C LDR W9, [X8 + 0xE0]
	0x03E38250 CBNZ W9, 0x3E3825C
	0x03E38254 MOV X0, X8
	0x03E38258 BL 0x1C16DFC
	0x03E3825C MOV X0, X22
	0x03E38260 MOV X1, X23
	0x03E38264 MOV X2, X31
	0x03E38268 BL 0x3C3883C
	0x03E3826C TBNZ X0, 0x0, 0x3E382EC
	0x03E38270 LDR X2, [X25]
	0x03E38274 MOV X0, X20
	0x03E38278 MOV W1, W21
	0x03E3827C BL 0x301BCCC
	0x03E38280 LDR X1, [X27]
	0x03E38284 BL 0x1C16E00
	0x03E38288 CBZ X0, 0x3E382EC
	0x03E3828C LDR X8, [X0]
	0x03E38290 LDR X1, [X27]
	0x03E38294 MOV X22, X0
	0x03E38298 LDRH W9, [X8 + 0x12E]
	0x03E3829C CBZ X9, 0x3E382C0
	0x03E382A0 LDR X10, [X8 + 0xB0]
	0x03E382A4 ADD X10, X10, 0x8
	0x03E382A8 LDUR X11, [X10 - 0x8]
	0x03E382AC CMP X11, X1
	0x03E382B0 B.EQ 0x3E382D0
	0x03E382B4 SUBS X9, X9, 0x1
	0x03E382B8 ADD X10, X10, 0x10
	0x03E382BC B.NE 0x3E382A8
	0x03E382C0 MOVZ W2, 0x1
	0x03E382C4 MOV X0, X22
	0x03E382C8 BL 0x1C5C788
	0x03E382CC B 0x3E382E0
	0x03E382D0 LDR W9, [X10]
	0x03E382D4 ADD W9, W9, 0x1
	0x03E382D8 ADD X8, X8, W9, 0x4, SXTW
	0x03E382DC ADD X0, X8, 0x138
	0x03E382E0 LDP X8, X1, [X0]
	0x03E382E4 MOV X0, X22

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x5B1000
	013 Move X25, 0x2BC000
	014 Move W8, [X21+1917]
	015 Move X25, [X25+1432]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x334000
	023 Move X0, [X0+544]
	024 Call 0x1C17CF4
	025 Move X0, 0x334000
	026 Move X0, [X0+552]
	027 Call 0x1C17CF4
	028 Move X0, 0x334000
	029 Move X0, [X0+560]
	030 Call 0x1C17CF4
	031 Move X0, 0x322000
	032 Move X0, [X0+1744]
	033 Call 0x1C17CF4
	034 Move X0, 0x322000
	035 Move X0, [X0+1752]
	036 Call 0x1C17CF4
	037 Move X0, 0x322000
	038 Move X0, [X0+1760]
	039 Call 0x1C17CF4
	040 Move X0, 0x2BC000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1917], W8
	045 Move X0, [X25]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X19
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {59}
	058 Move W20, W31
	059 Compare X20, 0
	060 JumpIfEqual {201}
	061 Move X0, X20
	062 Move X1, X31
	063 Call Transform.get_parent, X0
	064 Move X26, 0x334000
	065 Move X26, [X26+560]
	066 Move X22, X0
	067 Move X8, [X26]
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X8, 0x334000
	074 Move X8, [X8+544]
	075 Move X0, [X8]
	076 Call CollectionPool`2<Object, Object>.Get
	077 Move X27, 0x322000
	078 Move X28, 0x322000
	079 Move X27, [X27+1744]
	080 Move X28, [X28+1760]
	081 Move X21, X0
	082 Move W20, W31
	083 Move X0, [X25]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X22
	089 Move X1, X31
	090 Move X2, X31
	091 Call Object.op_Inequality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {178}
	096 Compare X22, 0
	097 JumpIfEqual {201}
	098 Move X2, [X27]
	099 Move X0, X22
	100 Move X1, X21
	101 Call 0x21A543C, X0, X1
	102 Compare X21, 0
	103 JumpIfEqual {201}
	104 Move W8, [X21+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W23, W31
	107 Move X2, [X28]
	108 Move X0, X21
	109 Move W1, W23
	110 Call List`1<Object>.get_Item, X0, X1
	111 Move X8, [X25]
	112 Move X24, X0
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X0, X24
	119 Move X1, X31
	120 Move X2, X31
	121 Call Object.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {157}
	126 Move X2, [X28]
	127 Move X0, X21
	128 Move W1, W23
	129 Call List`1<Object>.get_Item, X0, X1
	130 Compare X0, 0
	131 JumpIfEqual {201}
	132 Move X8, [X0]
	133 Move X9, [X8+616]
	134 Move X1, [X8+624]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {157}
	140 Move X2, [X28]
	141 Move X0, X21
	142 Move W1, W23
	143 Call List`1<Object>.get_Item, X0, X1
	144 Compare X0, 0
	145 JumpIfEqual {201}
	146 Call Mask.get_graphic, X0
	147 Compare X0, 0
	148 JumpIfEqual {201}
	149 Move X8, [X0]
	150 Move X9, [X8+456]
	151 Move X1, [X8+464]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {160}
	157 Move W8, [X21+24]
	158 Add W23, W23, 1
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add W20, W20, 1
	161 Move X0, [X25]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X22
	167 Move X1, X19
	168 Move X2, X31
	169 Call Object.op_Equality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {178}
	174 Move X0, X22
	175 Move X1, X31
	176 Call Transform.get_parent, X0
	177 Move X22, X0
	178 Move X0, [X26]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X8, 0x334000
	184 Move X8, [X8+552]
	185 Move X0, X21
	186 Move X1, [X8]
	187 Call CollectionPool`2<Object, Object>.Release, X0
	188 Move W0, W20
	189 Move X20, [X31+80]
	190 Move X19, [X31+88]
	191 Move X22, [X31+64]
	192 Move X21, [X31+72]
	193 Move X24, [X31+48]
	194 Move X23, [X31+56]
	195 Move X26, [X31+32]
	196 Move X25, [X31+40]
	197 Move X28, [X31+16]
	198 Move X27, [X31+24]
	199 Move X30, [X31+96]
	200 Return X0
	201 Call 0x1C17F20

Method: System.Boolean IsDescendantOrSelf(UnityEngine.Transform father, UnityEngine.Transform child)

Disassembly:
	0x03E39338 LDR X9, [X8 + 0x2F8]
	0x03E3933C LDR X1, [X8 + 0x300]
	0x03E39340 BLR X9
	0x03E39344 LDR X8, [X19]
	0x03E39348 MOV X0, X19
	0x03E3934C LDP X20, X19, [X31 + 0x20]
	0x03E39350 LDP X22, X21, [X31 + 0x10]
	0x03E39354 LDR X2, [X8 + 0x308]
	0x03E39358 LDR X1, [X8 + 0x310]
	0x03E3935C LDR X30, [X31], #0x30
	0x03E39360 BR X2
	0x03E39364 LDP S0, S1, [X0 + 0xE0]
	0x03E39368 LDP S2, S3, [X0 + 0xE8]
	0x03E3936C RET
	0x03E39370 LDR V4, [X0 + 0xE0]
	0x03E39374 FCMP S4, S0
	0x03E39378 B.NE 0x3E393A4
	0x03E3937C LDR V4, [X0 + 0xEC]
	0x03E39380 FCMP S4, S3
	0x03E39384 B.NE 0x3E393A4
	0x03E39388 LDR V4, [X0 + 0xE8]
	0x03E3938C FCMP S4, S2
	0x03E39390 B.NE 0x3E393A4
	0x03E39394 LDR V4, [X0 + 0xE4]
	0x03E39398 FCMP S4, S1
	0x03E3939C B.NE 0x3E393A4
	0x03E393A0 RET
	0x03E393A4 LDR X8, [X0]
	0x03E393A8 STP S0, S1, [X0 + 0xE0]
	0x03E393AC STP S2, S3, [X0 + 0xE8]
	0x03E393B0 LDR X2, [X8 + 0x2F8]
	0x03E393B4 LDR X1, [X8 + 0x300]
	0x03E393B8 BR X2
	0x03E393BC SUB X31, X31, 0x50
	0x03E393C0 STR D10, [X31 + 0x10]
	0x03E393C4 STP D9, D8, [X31 + 0x18]
	0x03E393C8 STR X30, [X31 + 0x28]
	0x03E393CC STP X22, X21, [X31 + 0x30]
	0x03E393D0 STP X20, X19, [X31 + 0x40]
	0x03E393D4 ADRP X21, 0x5AF000
	0x03E393D8 ADRP X20, 0x2BA000
	0x03E393DC LDRB W8, [X21 + 0x787]
	0x03E393E0 LDR X20, [X20 + 0x598]
	0x03E393E4 MOV X19, X0
	0x03E393E8 TBNZ X8, 0x0, 0x3E39400
	0x03E393EC ADRP X0, 0x2BA000
	0x03E393F0 LDR X0, [X0 + 0x598]
	0x03E393F4 BL 0x1C16CF4
	0x03E393F8 MOVZ W8, 0x1
	0x03E393FC STRB W8, [X21 + 0x787]
	0x03E39400 LDR X8, [X19]
	0x03E39404 MOV X0, X19
	0x03E39408 LDR X9, [X8 + 0x368]
	0x03E3940C LDR X1, [X8 + 0x370]
	0x03E39410 BLR X9
	0x03E39414 LDR X8, [X20]
	0x03E39418 MOV X20, X0
	0x03E3941C LDR W9, [X8 + 0xE0]
	0x03E39420 CBNZ W9, 0x3E3942C
	0x03E39424 MOV X0, X8
	0x03E39428 BL 0x1C16DFC
	0x03E3942C MOV X0, X20
	0x03E39430 MOV X1, X31
	0x03E39434 MOV X2, X31
	0x03E39438 BL 0x3C354F8
	0x03E3943C TBZ X0, 0x0, 0x3E394C8
	0x03E39440 CBZ X20, 0x3E3966C
	0x03E39444 LDR X8, [X20]
	0x03E39448 MOV X0, X20
	0x03E3944C LDP X9, X1, [X8 + 0x188]
	0x03E39450 BLR X9
	0x03E39454 ADRP X21, 0x5A0000
	0x03E39458 LDRB W8, [X21 + 0x5D7]
	0x03E3945C LDR V8, [X19 + 0xE8]
	0x03E39460 SCVTF S9, W0
	0x03E39464 CBNZ W8, 0x3E3947C
	0x03E39468 ADRP X0, 0x2BA000
	0x03E3946C LDR X0, [X0 + 0x5A8]
	0x03E39470 BL 0x1C16CF4
	0x03E39474 MOVZ W8, 0x1
	0x03E39478 STRB W8, [X21 + 0x5D7]
	0x03E3947C ADRP X22, 0x2BA000
	0x03E39480 LDR X22, [X22 + 0x5A8]
	0x03E39484 FMUL S9, S8, S9
	0x03E39488 LDR X0, [X22]
	0x03E3948C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5B0000
	008 Move X23, 0x2BB000
	009 Move W8, [X21+1918]
	010 Move X23, [X23+1432]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2BB000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1918], W8
	022 Move X0, [X23]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {48}
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {57}
	048 Move W21, W31
	049 And W0, W21, 1
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return X0
	057 Move X0, [X23]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X19
	063 Move X1, X20
	064 Move X2, X31
	065 Call Object.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {71}
	070 Move W21, 1
	071 Compare X20, 0
	072 JumpIfEqual {116}
	073 Move X0, X20
	074 Move X1, X31
	075 Call Transform.get_parent, X0
	076 Move X8, [X23]
	077 Move X21, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move X1, X31
	085 Move X2, X31
	086 Call Object.op_Inequality, X0, X1
	087 Move W21, W0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {49}
	092 Move X0, X20
	093 Move X1, X31
	094 Call Transform.get_parent, X0
	095 Move X8, [X23]
	096 Move X22, X0
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, X22
	103 Move X1, X19
	104 Move X2, X31
	105 Call Object.op_Equality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {49}
	110 Move X0, X20
	111 Move X1, X31
	112 Call Transform.get_parent, X0
	113 Move X20, X0
	114 Compare X0, 0
	115 JumpIfNotEqual {73}
	116 Call 0x1C17F20

Method: UnityEngine.UI.RectMask2D GetRectMaskForClippable(UnityEngine.UI.IClippable clippable)

Disassembly:
	0x03E38B3C FMOV S2, W31
	0x03E38B40 MOV V0.16B, V9.16B
	0x03E38B44 MOV V1.16B, V8.16B
	0x03E38B48 MOV X0, X31
	0x03E38B4C BL 0x3C0DA7C
	0x03E38B50 B 0x3E38E88
	0x03E38B54 LDR X0, [X25]
	0x03E38B58 LDR W8, [X0 + 0xE0]
	0x03E38B5C CBNZ W8, 0x3E38B64
	0x03E38B60 BL 0x1C16DFC
	0x03E38B64 MOV X0, X31
	0x03E38B68 BL 0x3C0DB98
	0x03E38B6C CBZ X0, 0x3E38EBC
	0x03E38B70 MOV X1, X31
	0x03E38B74 BL 0x3C0D84C
	0x03E38B78 MOV W19, W0
	0x03E38B7C MOV X0, X31
	0x03E38B80 BL 0x3C0DB98
	0x03E38B84 CBZ X0, 0x3E38EBC
	0x03E38B88 MOV X1, X31
	0x03E38B8C BL 0x3C0D934
	0x03E38B90 MOV W20, W0
	0x03E38B94 MOV X0, X31
	0x03E38B98 BL 0x3C0DB98
	0x03E38B9C CBZ X0, 0x3E38EBC
	0x03E38BA0 MOV X1, X31
	0x03E38BA4 BL 0x3C0D6D0
	0x03E38BA8 MOV W21, W0
	0x03E38BAC MOV X0, X31
	0x03E38BB0 BL 0x3C0DB98
	0x03E38BB4 CBZ X0, 0x3E38EBC
	0x03E38BB8 MOV X1, X31
	0x03E38BBC BL 0x3C0D7B8
	0x03E38BC0 ADRP X23, 0x5A1000
	0x03E38BC4 LDRB W8, [X23 + 0x78F]
	0x03E38BC8 MOV W22, W0
	0x03E38BCC CBNZ W8, 0x3E38BE4
	0x03E38BD0 ADRP X0, 0x2C3000
	0x03E38BD4 LDR X0, [X0 + 0xF08]
	0x03E38BD8 BL 0x1C16CF4
	0x03E38BDC MOVZ W8, 0x1
	0x03E38BE0 STRB W8, [X23 + 0x78F]
	0x03E38BE4 ADRP X8, 0x2C3000
	0x03E38BE8 LDR X8, [X8 + 0xF08]
	0x03E38BEC MOV X0, X31
	0x03E38BF0 SCVTF S10, W21
	0x03E38BF4 SCVTF S11, W22
	0x03E38BF8 LDR X8, [X8]
	0x03E38BFC LDR X8, [X8 + 0xB8]
	0x03E38C00 LDP S13, S12, [X8]
	0x03E38C04 BL 0x3C0E178
	0x03E38C08 TBZ X0, 0x0, 0x3E38D24
	0x03E38C0C MOV X0, X31
	0x03E38C10 BL 0x3C0E0B0
	0x03E38C14 MOV W21, W0
	0x03E38C18 MOV X0, X31
	0x03E38C1C BL 0x3C0E0D8
	0x03E38C20 LDR X8, [X25]
	0x03E38C24 MOV W22, W0
	0x03E38C28 LDR W9, [X8 + 0xE0]
	0x03E38C2C CBNZ W9, 0x3E38C38
	0x03E38C30 MOV X0, X8
	0x03E38C34 BL 0x1C16DFC
	0x03E38C38 MOV X0, X31
	0x03E38C3C BL 0x3C0DB98
	0x03E38C40 CBZ X0, 0x3E38EBC
	0x03E38C44 MOV X1, X31
	0x03E38C48 BL 0x3C0D934
	0x03E38C4C MOV W23, W0
	0x03E38C50 MOV X0, X31
	0x03E38C54 BL 0x3C0DB98
	0x03E38C58 CBZ X0, 0x3E38EBC
	0x03E38C5C MOV X1, X31
	0x03E38C60 BL 0x3C0D84C
	0x03E38C64 LDR X8, [X25]
	0x03E38C68 MOV W24, W0
	0x03E38C6C LDR W9, [X8 + 0xE0]
	0x03E38C70 CBNZ W9, 0x3E38C7C
	0x03E38C74 MOV X0, X8
	0x03E38C78 BL 0x1C16DFC
	0x03E38C7C MOV X0, X31
	0x03E38C80 BL 0x3C0DB98
	0x03E38C84 CBZ X0, 0x3E38EBC
	0x03E38C88 SCVTF S0, W21
	0x03E38C8C SCVTF S1, W22
	0x03E38C90 SCVTF S4, W23
	0x03E38C94 FDIV S0, S0, S1
	0x03E38C98 SCVTF S2, W19
	0x03E38C9C SCVTF S3, W20
	0x03E38CA0 FMUL S0, S0, S4
	0x03E38CA4 SCVTF S1, W24
	0x03E38CA8 FCMP S0, S1
	0x03E38CAC FDIV S14, S2, S3
	0x03E38CB0 MOV X1, X31
	0x03E38CB4 B.PL 0x3E38CF0
	0x03E38CB8 BL 0x3C0D7B8
	0x03E38CBC MOV W19, W0
	0x03E38CC0 MOV X0, X31
	0x03E38CC4 BL 0x3C0DB98
	0x03E38CC8 CBZ X0, 0x3E38EBC
	0x03E38CCC SCVTF S0, W19
	0x03E38CD0 MOV X1, X31
	0x03E38CD4 FMUL S10, S14, S0
	0x03E38CD8 BL 0x3C0D6D0
	0x03E38CDC SCVTF S0, W0
	0x03E38CE0 FSUB S0, S10, S0
	0x03E38CE4 FMOV S1, 0.5
	0x03E38CE8 FMUL S13, S0, S1
	0x03E38CEC B 0x3E38D24
	0x03E38CF0 BL 0x3C0D6D0
	0x03E38CF4 MOV W19, W0
	0x03E38CF8 MOV X0, X31
	0x03E38CFC BL 0x3C0DB98
	0x03E38D00 CBZ X0, 0x3E38EBC
	0x03E38D04 SCVTF S0, W19
	0x03E38D08 MOV X1, X31
	0x03E38D0C FDIV S11, S0, S14
	0x03E38D10 BL 0x3C0D7B8
	0x03E38D14 SCVTF S0, W0
	0x03E38D18 FSUB S0, S11, S0
	0x03E38D1C FMOV S1, 0.5
	0x03E38D20 FMUL S12, S0, S1
	0x03E38D24 FSUB S0, S10, S13
	0x03E38D28 FCMP S9, S0
	0x03E38D2C B.GT 0x3E38D54
	0x03E38D30 FNEG S0, S13
	0x03E38D34 FCMP S9, S0
	0x03E38D38 B.MI 0x3E38D54
	0x03E38D3C FNEG S0, S12
	0x03E38D40 FCMP S8, S0
	0x03E38D44 B.MI 0x3E38D54
	0x03E38D48 FSUB S0, S11, S12
	0x03E38D4C FCMP S8, S0
	0x03E38D50 B.LE 0x3E38E80
	0x03E38D54 MOV X0, X31
	0x03E38D58 BL 0x3C0E178
	0x03E38D5C TBZ X0, 0x0, 0x3E38DC0
	0x03E38D60 LDR X0, [X25]
	0x03E38D64 LDR W8, [X0 + 0xE0]
	0x03E38D68 CBNZ W8, 0x3E38D70
	0x03E38D6C BL 0x1C16DFC
	0x03E38D70 MOV X0, X31
	0x03E38D74 BL 0x3C0DB98
	0x03E38D78 CBZ X0, 0x3E38EBC
	0x03E38D7C MOV X1, X31
	0x03E38D80 BL 0x3C0D84C
	0x03E38D84 MOV W19, W0
	0x03E38D88 MOV X0, X31
	0x03E38D8C BL 0x3C0DB98
	0x03E38D90 CBZ X0, 0x3E38EBC
	0x03E38D94 SCVTF S1, W19
	0x03E38D98 FADD S0, S9, S13
	0x03E38D9C FDIV S1, S1, S10
	0x03E38DA0 MOV X1, X31
	0x03E38DA4 FADD S12, S8, S12
	0x03E38DA8 FMUL S10, S0, S1
	0x03E38DAC BL 0x3C0D934
	0x03E38DB0 SCVTF S0, W0
	0x03E38DB4 FDIV S0, S0, S11
	0x03E38DB8 FMUL S11, S12, S0
	0x03E38DBC B 0x3E38E54
	0x03E38DC0 LDR X0, [X25]
	0x03E38DC4 LDR W8, [X0 + 0xE0]
	0x03E38DC8 CBNZ W8, 0x3E38DD0
	0x03E38DCC BL 0x1C16DFC
	0x03E38DD0 MOV X0, X31
	0x03E38DD4 BL 0x3C0DB98
	0x03E38DD8 CBZ X0, 0x3E38EBC
	0x03E38DDC MOV X1, X31
	0x03E38DE0 BL 0x3C0D6D0
	0x03E38DE4 MOV W19, W0
	0x03E38DE8 MOV X0, X31
	0x03E38DEC BL 0x3C0DB98
	0x03E38DF0 CBZ X0, 0x3E38EBC
	0x03E38DF4 MOV X1, X31
	0x03E38DF8 BL 0x3C0D84C
	0x03E38DFC MOV W20, W0
	0x03E38E00 MOV X0, X31
	0x03E38E04 BL 0x3C0DB98
	0x03E38E08 CBZ X0, 0x3E38EBC
	0x03E38E0C MOV X1, X31
	0x03E38E10 BL 0x3C0D7B8
	0x03E38E14 MOV W21, W0
	0x03E38E18 MOV X0, X31
	0x03E38E1C BL 0x3C0DB98
	0x03E38E20 CBZ X0, 0x3E38EBC
	0x03E38E24 SUB W8, W19, W20
	0x03E38E28 SCVTF S0, W8
	0x03E38E2C FMOV S1, -0.5
	0x03E38E30 FMUL S0, S0, S1
	0x03E38E34 MOV X1, X31
	0x03E38E38 FADD S10, S9, S0
	0x03E38E3C BL 0x3C0D934
	0x03E38E40 SUB W8, W21, W0
	0x03E38E44 SCVTF S0, W8
	0x03E38E48 FMOV S1, -0.5
	0x03E38E4C FMUL S0, S0, S1
	0x03E38E50 FADD S11, S8, S0
	0x03E38E54 LDR X0, [X25]
	0x03E38E58 LDR W8, [X0 + 0xE0]
	0x03E38E5C CBNZ W8, 0x3E38E64
	0x03E38E60 BL 0x1C16DFC
	0x03E38E64 FMOV S2, W31
	0x03E38E68 MOV V0.16B, V10.16B
	0x03E38E6C MOV V1.16B, V11.16B
	0x03E38E70 MOV X0, X31
	0x03E38E74 BL 0x3C0DA7C
	0x03E38E78 FCMP S2, 0x0
	0x03E38E7C B.NE 0x3E38E88
	0x03E38E80 FMOV S2, W31
	0x03E38E84 B 0x3E38E90
	0x03E38E88 MOV V9.16B, V0.16B
	0x03E38E8C MOV V8.16B, V1.16B
	0x03E38E90 MOV V0.16B, V9.16B
	0x03E38E94 MOV V1.16B, V8.16B
	0x03E38E98 LDP X20, X19, [X31 + 0x70]
	0x03E38E9C LDP X22, X21, [X31 + 0x60]
	0x03E38EA0 LDP X24, X23, [X31 + 0x50]
	0x03E38EA4 LDP X30, X25, [X31 + 0x40]
	0x03E38EA8 LDP D9, D8, [X31 + 0x30]
	0x03E38EAC LDP D11, D10, [X31 + 0x20]
	0x03E38EB0 LDP D13, D12, [X31 + 0x10]
	0x03E38EB4 LDR V14, [X31], #0x80
	0x03E38EB8 RET
	0x03E38EBC BL 0x1C16F20
	0x03E38EC0 STR D10, [X31 - 0x30]!
	0x03E38EC4 STP D9, D8, [X31 + 0x8]
	0x03E38EC8 STR X30, [X31 + 0x18]
	0x03E38ECC STP X20, X19, [X31 + 0x20]
	0x03E38ED0 CBZ X0, 0x3E38F90
	0x03E38ED4 LDR V0, [X0 + 0x104]
	0x03E38ED8 LDR V1, [X0 + 0x108]
	0x03E38EDC MOV X19, X0
	0x03E38EE0 BL 0x3E38A54
	0x03E38EE4 ADRP X20, 0x5A0000
	0x03E38EE8 LDRB W8, [X20 + 0x783]
	0x03E38EEC MOV V8.16B, V0.16B
	0x03E38EF0 MOV V9.16B, V1.16B
	0x03E38EF4 MOV V10.16B, V2.16B
	0x03E38EF8 CBNZ W8, 0x3E38F10
	0x03E38EFC ADRP X0, 0x2BB000
	0x03E38F00 LDR X0, [X0 + 0x5A0]
	0x03E38F04 BL 0x1C16CF4
	0x03E38F08 MOVZ W8, 0x1
	0x03E38F0C STRB W8, [X20 + 0x783]
	0x03E38F10 ADRP X8, 0x2BB000
	0x03E38F14 LDR X8, [X8 + 0x5A0]
	0x03E38F18 LDR X8, [X8]
	0x03E38F1C LDR X8, [X8 + 0xB8]
	0x03E38F20 LDP S0, S1, [X8]
	0x03E38F24 LDR V2, [X8 + 0x8]
	0x03E38F28 ADRP X8, 0xFFFFFFFFFCCB1000
	0x03E38F2C FSUB S0, S8, S0
	0x03E38F30 FSUB S1, S9, S1
	0x03E38F34 FMUL S0, S0, S0
	0x03E38F38 FMUL S1, S1, S1
	0x03E38F3C FADD S0, S0, S1
	0x03E38F40 LDR V1, [X8 + 0xF20]
	0x03E38F44 FSUB S2, S10, S2
	0x03E38F48 FMUL S2, S2, S2
	0x03E38F4C FADD S0, S2, S0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x5B1000
	014 Move X27, 0x334000
	015 Move W8, [X19+1919]
	016 Move X27, [X27+576]
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x32B000
	023 Move X0, [X0+760]
	024 Call 0x1C17CF4
	025 Move X0, 0x334000
	026 Move X0, [X0+584]
	027 Call 0x1C17CF4
	028 Move X0, 0x32B000
	029 Move X0, [X0+768]
	030 Call 0x1C17CF4
	031 Move X0, 0x334000
	032 Move X0, [X0+592]
	033 Call 0x1C17CF4
	034 Move X0, 0x32B000
	035 Move X0, [X0+776]
	036 Call 0x1C17CF4
	037 Move X0, 0x334000
	038 Move X0, [X0+576]
	039 Call 0x1C17CF4
	040 Move X0, 0x321000
	041 Move X0, [X0+1896]
	042 Call 0x1C17CF4
	043 Move X0, 0x334000
	044 Move X0, [X0+600]
	045 Call 0x1C17CF4
	046 Move X0, 0x334000
	047 Move X0, [X0+608]
	048 Call 0x1C17CF4
	049 Move X0, 0x32B000
	050 Move X0, [X0+312]
	051 Call 0x1C17CF4
	052 Move X0, 0x321000
	053 Move X0, [X0+1904]
	054 Call 0x1C17CF4
	055 Move X0, 0x321000
	056 Move X0, [X0+1912]
	057 Call 0x1C17CF4
	058 Move X0, 0x32B000
	059 Move X0, [X0+320]
	060 Call 0x1C17CF4
	061 Move X0, 0x2BC000
	062 Move X0, [X0+1432]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+1919], W8
	066 Move X0, [X27]
	067 Move X19, 0x334000
	068 Move X25, 0x32B000
	069 Move W8, [X0+224]
	070 Move X19, [X19+584]
	071 Move X25, [X25+776]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, [X19]
	076 Move X19, 0x32B000
	077 Move X19, [X19+760]
	078 Call CollectionPool`2<Object, Object>.Get
	079 Move X8, [X25]
	080 Move X20, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, [X19]
	087 Call CollectionPool`2<Object, Object>.Get
	088 Compare X21, 0
	089 JumpIfEqual {293}
	090 Move X28, 0x334000
	091 Move X8, [X21]
	092 Move X28, [X28+608]
	093 Move X19, X0
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Move X1, [X28]
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X21
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X21
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X0, 0
	115 JumpIfEqual {293}
	116 Move X8, 0x334000
	117 Move X8, [X8+600]
	118 Move W1, W31
	119 Move X2, X20
	120 Move X3, [X8]
	121 Call 0x21E74C8, X0, X1, X2
	122 Compare X20, 0
	123 JumpIfEqual {293}
	124 Move W8, [X20+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X29, 0x32B000
	127 Move X26, 0x2BC000
	128 Move X29, [X29+320]
	129 Move X26, [X26+1432]
	130 Move W23, W31
	131 Move X2, [X29]
	132 Move X0, X20
	133 Move W1, W23
	134 Call List`1<Object>.get_Item, X0, X1
	135 Compare X0, 0
	136 JumpIfEqual {293}
	137 Move X1, X31
	138 Move X22, X0
	139 Call Component.get_gameObject, X0
	140 Move X8, [X21]
	141 Move X1, [X28]
	142 Move X24, X0
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move X0, X21
	153 Move W2, W31
	154 Call 0x1C5D788
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X21
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X26]
	163 Move X25, X0
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X0, X24
	170 Move X1, X25
	171 Move X2, X31
	172 Call Object.op_Equality, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {184}
	177 Move X0, X22
	178 Move X1, X31
	179 Call Behaviour.get_isActiveAndEnabled, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {224}
	184 Move W8, [X20+24]
	185 Add W23, W23, 1
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X25, 0x32B000
	188 Move X25, [X25+776]
	189 Move X22, X31
	190 Move X0, [X27]
	191 Move X21, 0x334000
	192 Move W8, [X0+224]
	193 Move X21, [X21+592]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X1, [X21]
	198 Move X21, 0x32B000
	199 Move X21, [X21+768]
	200 Move X0, X20
	201 Call CollectionPool`2<Object, Object>.Release, X0
	202 Move X0, [X25]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X1, [X21]
	208 Move X0, X19
	209 Call CollectionPool`2<Object, Object>.Release, X0
	210 Move X0, X22
	211 Move X20, [X31+80]
	212 Move X19, [X31+88]
	213 Move X22, [X31+64]
	214 Move X21, [X31+72]
	215 Move X24, [X31+48]
	216 Move X23, [X31+56]
	217 Move X26, [X31+32]
	218 Move X25, [X31+40]
	219 Move X28, [X31+16]
	220 Move X27, [X31+24]
	221 Move X29, [X31+96]
	222 Move X30, [X31+104]
	223 Return X0
	224 Move X8, [X21]
	225 Move X25, 0x32B000
	226 Move X1, [X28]
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Move X25, [X25+776]
	229 Compare X9, 0
	230 JumpIfEqual {237}
	231 Move X10, [X8+176]
	232 Add X10, X10, 8
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X9, X9, 1
	236 Add X10, X10, 16
	237 Move X0, X21
	238 Move W2, W31
	239 Call 0x1C5D788
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 Add X8, X8, X9
	242 Add X0, X8, 312
	243 Move X8, [X0]
	244 Move X1, [X0+8]
	245 Move X0, X21
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Compare X0, 0
	248 JumpIfEqual {293}
	249 Move X8, 0x321000
	250 Move X8, [X8+1896]
	251 Move W1, W31
	252 Move X2, X19
	253 Move X3, [X8]
	254 Call 0x21E74C8, X0, X1, X2
	255 Compare X19, 0
	256 JumpIfEqual {293}
	257 Move W8, [X19+24]
	258 Subtract W21, W8, 1
	259 Move X24, 0x321000
	260 Move X24, [X24+1912]
	261 Move X2, [X24]
	262 Move X0, X19
	263 Move W1, W21
	264 Call List`1<Object>.get_Item, X0, X1
	265 Compare X0, 0
	266 JumpIfEqual {293}
	267 Move X1, X31
	268 Call Component.get_transform, X0
	269 Move X23, X0
	270 Move X0, X22
	271 Move X1, X31
	272 Call Component.get_transform, X0
	273 Move X1, X0
	274 Move X0, X23
	275 Call MaskUtilities.IsDescendantOrSelf, X0, X1
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {292}
	280 Move X2, [X24]
	281 Move X0, X19
	282 Move W1, W21
	283 Call List`1<Object>.get_Item, X0, X1
	284 Compare X0, 0
	285 JumpIfEqual {293}
	286 Move X1, X31
	287 Call Canvas.get_overrideSorting, X0
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfEqual {189}
	292 Subtract W21, W21, 1
	293 Call 0x1C17F20

Method: System.Void GetRectMasksForClip(UnityEngine.UI.RectMask2D clipper, System.Collections.Generic.List`1<UnityEngine.UI.RectMask2D> masks)

Disassembly:
	0x03E39490 CBNZ W8, 0x3E39498
	0x03E39494 BL 0x1C16DFC
	0x03E39498 FCVT S8, S9
	0x03E3949C ADD X0, X31, 0x8
	0x03E394A0 MOV V0.16B, V8.16B
	0x03E394A4 BL 0x3EB1C00
	0x03E394A8 FCMP S9, 0x0
	0x03E394AC B.GE 0x3E394E4
	0x03E394B0 FMOV D1, -0.5
	0x03E394B4 FCMP D0, D1
	0x03E394B8 B.NE 0x3E3950C
	0x03E394BC LDR V0, [X31 + 0x8]
	0x03E394C0 FMOV D1, -1
	0x03E394C4 B 0x3E394F8
	0x03E394C8 LDP X20, X19, [X31 + 0x40]
	0x03E394CC LDP X22, X21, [X31 + 0x30]
	0x03E394D0 LDR X30, [X31 + 0x28]
	0x03E394D4 LDP D9, D8, [X31 + 0x18]
	0x03E394D8 LDR V10, [X31 + 0x10]
	0x03E394DC ADD X31, X31, 0x50
	0x03E394E0 RET
	0x03E394E4 FMOV D1, 0.5
	0x03E394E8 FCMP D0, D1
	0x03E394EC B.NE 0x3E39518
	0x03E394F0 LDR V0, [X31 + 0x8]
	0x03E394F4 FMOV D1, 1
	0x03E394F8 FCVTZS X8, D0
	0x03E394FC FADD D1, D0, D1
	0x03E39500 ANDS X31, X8, 0x1
	0x03E39504 FCSEL D9, D0, D1, EQ
	0x03E39508 B 0x3E39520
	0x03E3950C FADD D0, D8, D1
	0x03E39510 FRINTP D9, D0
	0x03E39514 B 0x3E39520
	0x03E39518 FADD D0, D8, D1
	0x03E3951C FRINTM D9, D0
	0x03E39520 LDR X8, [X20]
	0x03E39524 MOV X0, X20
	0x03E39528 LDP X9, X1, [X8 + 0x1A8]
	0x03E3952C BLR X9
	0x03E39530 LDRB W8, [X21 + 0x5D7]
	0x03E39534 LDR V8, [X19 + 0xEC]
	0x03E39538 SCVTF S10, W0
	0x03E3953C CBNZ W8, 0x3E39554
	0x03E39540 ADRP X0, 0x2BA000
	0x03E39544 LDR X0, [X0 + 0x5A8]
	0x03E39548 BL 0x1C16CF4
	0x03E3954C MOVZ W8, 0x1
	0x03E39550 STRB W8, [X21 + 0x5D7]
	0x03E39554 LDR X0, [X22]
	0x03E39558 FMUL S10, S8, S10
	0x03E3955C LDR W8, [X0 + 0xE0]
	0x03E39560 CBNZ W8, 0x3E39568
	0x03E39564 BL 0x1C16DFC
	0x03E39568 FCVT S8, S10
	0x03E3956C ADD X0, X31, 0x8
	0x03E39570 MOV V0.16B, V8.16B
	0x03E39574 BL 0x3EB1C00
	0x03E39578 FCMP S10, 0x0
	0x03E3957C B.GE 0x3E39598
	0x03E39580 FMOV D1, -0.5
	0x03E39584 FCMP D0, D1
	0x03E39588 B.NE 0x3E395C0
	0x03E3958C LDR V0, [X31 + 0x8]
	0x03E39590 FMOV D1, -1
	0x03E39594 B 0x3E395AC
	0x03E39598 FMOV D1, 0.5
	0x03E3959C FCMP D0, D1
	0x03E395A0 B.NE 0x3E395CC
	0x03E395A4 LDR V0, [X31 + 0x8]
	0x03E395A8 FMOV D1, 1
	0x03E395AC FCVTZS X8, D0
	0x03E395B0 FADD D1, D0, D1
	0x03E395B4 ANDS X31, X8, 0x1
	0x03E395B8 FCSEL D8, D0, D1, EQ
	0x03E395BC B 0x3E395D4
	0x03E395C0 FADD D0, D8, D1
	0x03E395C4 FRINTP D8, D0
	0x03E395C8 B 0x3E395D4
	0x03E395CC FADD D0, D8, D1
	0x03E395D0 FRINTM D8, D0
	0x03E395D4 MOV X0, X19
	0x03E395D8 MOV X1, X31
	0x03E395DC BL 0x3CDB488
	0x03E395E0 MOV X20, X0
	0x03E395E4 MOV X0, X19
	0x03E395E8 MOV X1, X31
	0x03E395EC BL 0x3CDB488
	0x03E395F0 CBZ X0, 0x3E3966C
	0x03E395F4 MOV X1, X31
	0x03E395F8 BL 0x3C3E5B8
	0x03E395FC CBZ X20, 0x3E3966C
	0x03E39600 MOV X0, X20
	0x03E39604 MOV X1, X31
	0x03E39608 BL 0x3C3E764
	0x03E3960C MOV X0, X19
	0x03E39610 MOV X1, X31
	0x03E39614 BL 0x3CDB488
	0x03E39618 CBZ X0, 0x3E3966C
	0x03E3961C MOVZ X9, 0x7FF00000
	0x03E39620 FCVTZS W8, D8
	0x03E39624 FMOV D2, X9
	0x03E39628 MOVZ W9, 0xCF000000
	0x03E3962C SCVTF S0, W8
	0x03E39630 FCMP D8, D2
	0x03E39634 FMOV S3, W9
	0x03E39638 FCVTZS W8, D9
	0x03E3963C FCSEL S1, S3, S0, EQ
	0x03E39640 FCMP D9, D2
	0x03E39644 LDP X20, X19, [X31 + 0x40]
	0x03E39648 LDP X22, X21, [X31 + 0x30]
	0x03E3964C LDR X30, [X31 + 0x28]
	0x03E39650 LDP D9, D8, [X31 + 0x18]
	0x03E39654 LDR V10, [X31 + 0x10]
	0x03E39658 SCVTF S4, W8
	0x03E3965C FCSEL S0, S3, S4, EQ
	0x03E39660 MOV X1, X31
	0x03E39664 ADD X31, X31, 0x50
	0x03E39668 B 0x3C3E99C
	0x03E3966C BL 0x1C16F20
	0x03E39670 SUB X31, X31, 0x80
	0x03E39674 STP D15, D14, [X31 + 0x10]
	0x03E39678 STP D13, D12, [X31 + 0x20]
	0x03E3967C STP D11, D10, [X31 + 0x30]
	0x03E39680 STP D9, D8, [X31 + 0x40]
	0x03E39684 STR X30, [X31 + 0x50]
	0x03E39688 STP X22, X21, [X31 + 0x60]
	0x03E3968C STP X20, X19, [X31 + 0x70]
	0x03E39690 ADRP X21, 0x5AF000
	0x03E39694 LDRB W8, [X21 + 0x788]
	0x03E39698 MOV X19, X1
	0x03E3969C MOV X20, X0
	0x03E396A0 TBNZ X8, 0x0, 0x3E396B8
	0x03E396A4 ADRP X0, 0x2BA000
	0x03E396A8 LDR X0, [X0 + 0x598]
	0x03E396AC BL 0x1C16CF4
	0x03E396B0 MOVZ W8, 0x1
	0x03E396B4 STRB W8, [X21 + 0x788]
	0x03E396B8 LDR X8, [X20]
	0x03E396BC MOV X0, X20
	0x03E396C0 LDR X9, [X8 + 0x368]
	0x03E396C4 LDR X1, [X8 + 0x370]
	0x03E396C8 BLR X9
	0x03E396CC CBZ X19, 0x3E39934
	0x03E396D0 ADRP X22, 0x2BA000
	0x03E396D4 LDR X22, [X22 + 0x598]
	0x03E396D8 MOV X21, X0
	0x03E396DC MOV X0, X19
	0x03E396E0 BL 0x3E39938
	0x03E396E4 LDR X0, [X22]
	0x03E396E8 LDR W8, [X0 + 0xE0]
	0x03E396EC CBNZ W8, 0x3E396F4
	0x03E396F0 BL 0x1C16DFC
	0x03E396F4 MOV X0, X21
	0x03E396F8 MOV X1, X31
	0x03E396FC MOV X2, X31
	0x03E39700 BL 0x3C354F8
	0x03E39704 TBZ X0, 0x0, 0x3E39910
	0x03E39708 MOV X0, X20
	0x03E3970C MOV X1, X31
	0x03E39710 BL 0x3CDD3D4
	0x03E39714 CBZ X21, 0x3E39934
	0x03E39718 LDR X8, [X21]
	0x03E3971C MOV V8.16B, V0.16B
	0x03E39720 FADD S4, S1, S3
	0x03E39724 FADD S0, S8, S2
	0x03E39728 LDP X9, X1, [X8 + 0x188]
	0x03E3972C MOV X0, X21
	0x03E39730 STP S4, S0, [X31 + 0x58]
	0x03E39734 MOV V11.16B, V1.16B
	0x03E39738 STR S1, [X31 + 0xC]
	0x03E3973C BLR X9
	0x03E39740 MOV W22, W0
	0x03E39744 MOV X0, X21
	0x03E39748 MOV X1, X31
	0x03E3974C BL 0x3C1ACA8
	0x03E39750 LDR X8, [X21]
	0x03E39754 SCVTF S1, W22
	0x03E39758 MOV X0, X21
	0x03E3975C FMUL S9, S0, S1
	0x03E39760 LDP X9, X1, [X8 + 0x1A8]
	0x03E39764 BLR X9
	0x03E39768 MOV W22, W0
	0x03E3976C MOV X0, X21
	0x03E39770 MOV X1, X31
	0x03E39774 BL 0x3C1ACA8
	0x03E39778 LDR X8, [X20]
	0x03E3977C SCVTF S0, W22
	0x03E39780 MOV X0, X20
	0x03E39784 FMUL S10, S1, S0
	0x03E39788 LDR X9, [X8 + 0x298]
	0x03E3978C LDR X1, [X8 + 0x2A0]
	0x03E39790 BLR X9
	0x03E39794 MOV X0, X31
	0x03E39798 MOV V12.16B, V0.16B
	0x03E3979C MOV V13.16B, V1.16B
	0x03E397A0 MOV V14.16B, V2.16B
	0x03E397A4 MOV V15.16B, V3.16B
	0x03E397A8 BL 0x1E43664
	0x03E397AC LDP S0, S1, [X20 + 0xE0]
	0x03E397B0 AND X1, X0, 0x0
	0x03E397B4 FMOV S2, W31
	0x03E397B8 FMOV S5, W31
	0x03E397BC FMUL S3, S9, S0
	0x03E397C0 FMUL S4, S10, S1
	0x03E397C4 FMOV S6, W31
	0x03E397C8 MOV X0, X19
	0x03E397CC MOV V0.16B, V8.16B
	0x03E397D0 MOV V1.16B, V11.16B
	0x03E397D4 BL 0x3E39A54
	0x03E397D8 MOV V0.16B, V12.16B
	0x03E397DC MOV V1.16B, V13.16B
	0x03E397E0 MOV V2.16B, V14.16B
	0x03E397E4 MOV V3.16B, V15.16B
	0x03E397E8 MOV X0, X31
	0x03E397EC BL 0x1E43664

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x5B0000
	014 Move W8, [X20+1920]
	015 Move X19, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {65}
	021 Move X0, 0x32A000
	022 Move X0, [X0+760]
	023 Call 0x1C17CF4
	024 Move X0, 0x333000
	025 Move X0, [X0+584]
	026 Call 0x1C17CF4
	027 Move X0, 0x32A000
	028 Move X0, [X0+768]
	029 Call 0x1C17CF4
	030 Move X0, 0x333000
	031 Move X0, [X0+592]
	032 Call 0x1C17CF4
	033 Move X0, 0x32A000
	034 Move X0, [X0+776]
	035 Call 0x1C17CF4
	036 Move X0, 0x333000
	037 Move X0, [X0+576]
	038 Call 0x1C17CF4
	039 Move X0, 0x321000
	040 Move X0, [X0+1792]
	041 Call 0x1C17CF4
	042 Move X0, 0x333000
	043 Move X0, [X0+624]
	044 Call 0x1C17CF4
	045 Move X0, 0x333000
	046 Move X0, [X0+632]
	047 Call 0x1C17CF4
	048 Move X0, 0x333000
	049 Move X0, [X0+640]
	050 Call 0x1C17CF4
	051 Move X0, 0x32A000
	052 Move X0, [X0+312]
	053 Call 0x1C17CF4
	054 Move X0, 0x320000
	055 Move X0, [X0+1904]
	056 Call 0x1C17CF4
	057 Move X0, 0x320000
	058 Move X0, [X0+1912]
	059 Call 0x1C17CF4
	060 Move X0, 0x32A000
	061 Move X0, [X0+320]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+1920], W8
	065 Compare X19, 0
	066 JumpIfEqual {251}
	067 Move W2, [X19+24]
	068 Move W8, [X19+28]
	069 Move X25, 0x32A000
	070 Move X25, [X25+776]
	071 Add W8, W8, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X19+24], W31
	074 Move [X19+28], W8
	075 Move X0, [X19+16]
	076 Move W1, W31
	077 Move X3, X31
	078 Call Array.Clear, X0, X1, X2
	079 Move X0, [X25]
	080 Move X20, 0x32A000
	081 Move X26, 0x333000
	082 Move W8, [X0+224]
	083 Move X20, [X20+760]
	084 Move X26, [X26+576]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, [X20]
	089 Move X21, 0x333000
	090 Move X21, [X21+584]
	091 Call CollectionPool`2<Object, Object>.Get
	092 Move X8, [X26]
	093 Move X20, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move X0, [X21]
	100 Call CollectionPool`2<Object, Object>.Get
	101 Compare X22, 0
	102 JumpIfEqual {251}
	103 Move X21, X0
	104 Move X0, X22
	105 Move X1, X31
	106 Call Component.get_transform, X0
	107 Compare X0, 0
	108 JumpIfEqual {251}
	109 Move X8, 0x333000
	110 Move X8, [X8+624]
	111 Move W1, W31
	112 Move X2, X21
	113 Move X3, [X8]
	114 Call 0x21A58CC, X0, X1, X2
	115 Compare X21, 0
	116 JumpIfEqual {251}
	117 Move W8, [X21+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X22
	120 Move X1, X31
	121 Call Component.get_transform, X0
	122 Compare X0, 0
	123 JumpIfEqual {251}
	124 Move X8, 0x321000
	125 Move X8, [X8+1792]
	126 Move W1, W31
	127 Move X2, X20
	128 Move X3, [X8]
	129 Call 0x21A58CC, X0, X1, X2
	130 Move W8, [X21+24]
	131 Subtract W22, W8, 1
	132 Move X27, 0x32A000
	133 Move X28, 0x320000
	134 Move X29, 0x333000
	135 Move X27, [X27+320]
	136 Move X28, [X28+1912]
	137 Move X29, [X29+632]
	138 Move X2, [X27]
	139 Move X0, X21
	140 Move W1, W22
	141 Call List`1<Object>.get_Item, X0, X1
	142 Compare X0, 0
	143 JumpIfEqual {251}
	144 Move X8, [X0]
	145 Move X9, [X8+456]
	146 Move X1, [X8+464]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {217}
	152 Compare X20, 0
	153 JumpIfEqual {251}
	154 Move W8, [X20+24]
	155 Subtract W23, W8, 1
	156 Move X2, [X28]
	157 Move X0, X20
	158 Move W1, W23
	159 Call List`1<Object>.get_Item, X0, X1
	160 Compare X0, 0
	161 JumpIfEqual {251}
	162 Move X1, X31
	163 Call Component.get_transform, X0
	164 Move X2, [X27]
	165 Move X24, X0
	166 Move X0, X21
	167 Move W1, W22
	168 Call List`1<Object>.get_Item, X0, X1
	169 Compare X0, 0
	170 JumpIfEqual {251}
	171 Move X1, X31
	172 Call Component.get_transform, X0
	173 Move X1, X0
	174 Move X0, X24
	175 Call MaskUtilities.IsDescendantOrSelf, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {192}
	180 Move X2, [X28]
	181 Move X0, X20
	182 Move W1, W23
	183 Call List`1<Object>.get_Item, X0, X1
	184 Compare X0, 0
	185 JumpIfEqual {251}
	186 Move X1, X31
	187 Call Canvas.get_overrideSorting, X0
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {217}
	192 Subtract W23, W23, 1
	193 Move X2, [X27]
	194 Move X0, X21
	195 Move W1, W22
	196 Call List`1<Object>.get_Item, X0, X1
	197 Move W10, [X19+28]
	198 Move X8, [X19+16]
	199 Move X9, [X29]
	200 Add W10, W10, 1
	201 Move [X19+28], W10
	202 Compare X8, 0
	203 JumpIfEqual {251}
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Move W11, [X8+24]
	206 Move X1, X0
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add W9, W10, 1
	209 Add X8, X8, X10
	210 Move [X19+24], W9
	211 Move [X8+32], X1
	212 Move X8, [X9+32]
	213 Move X0, X19
	214 Move X8, [X8+192]
	215 Move X2, [X8+112]
	216 Call List`1<Object>.AddWithResize, X0, X1
	217 Subtract W22, W22, 1
	218 Move X0, [X26]
	219 Move X19, 0x333000
	220 Move W8, [X0+224]
	221 Move X19, [X19+592]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X1, [X19]
	226 Move X19, 0x32A000
	227 Move X19, [X19+768]
	228 Move X0, X21
	229 Call CollectionPool`2<Object, Object>.Release, X0
	230 Move X0, [X25]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X1, [X19]
	236 Move X0, X20
	237 Move X20, [X31+80]
	238 Move X19, [X31+88]
	239 Move X22, [X31+64]
	240 Move X21, [X31+72]
	241 Move X24, [X31+48]
	242 Move X23, [X31+56]
	243 Move X26, [X31+32]
	244 Move X25, [X31+40]
	245 Move X28, [X31+16]
	246 Move X27, [X31+24]
	247 Move X29, [X31+96]
	248 Move X30, [X31+104]
	249 Call CollectionPool`2<Object, Object>.Release, X0
	250 Return 
	251 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03E397F0 LDR V0, [X20 + 0xEC]
	0x03E397F4 LDP S2, S1, [X20 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

