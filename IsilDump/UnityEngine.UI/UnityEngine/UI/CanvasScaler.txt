Type: UnityEngine.UI.CanvasScaler

Method: UnityEngine.UI.CanvasScaler/ScaleMode get_uiScaleMode()

Disassembly:
	0x03E30D70 FSQRT S8, S8
	0x03E30D74 LDR X0, [X8]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_uiScaleMode(UnityEngine.UI.CanvasScaler/ScaleMode value)

Disassembly:
	0x03E30D78 LDR W8, [X0 + 0xE0]
	0x03E30D7C CBNZ W8, 0x3E30D84

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Single get_referencePixelsPerUnit()

Disassembly:
	0x03E30D80 BL 0x1C16DFC
	0x03E30D84 MOVZ W9, 0x7F800000

ISIL:
	001 Move V0, [X0+36]
	002 Return V0

Method: System.Void set_referencePixelsPerUnit(System.Single value)

Disassembly:
	0x03E30D88 FRINTP S0, S8
	0x03E30D8C FMOV S1, W9

ISIL:
	001 Move [X0+36], S0
	002 Return 

Method: System.Single get_scaleFactor()

Disassembly:
	0x03E30D90 FCVTPS W8, S8
	0x03E30D94 MOVZ W10, 0x80000000

ISIL:
	001 Move V0, [X0+40]
	002 Return V0

Method: System.Void set_scaleFactor(System.Single value)

Disassembly:
	0x03E30D98 FCMP S0, S1
	0x03E30D9C CSEL W21, W10, W8, EQ
	0x03E30DA0 MOVZ W22, 0x1
	0x03E30DA4 LDR X0, [X19 + 0x20]
	0x03E30DA8 CBZ X0, 0x3E30E30

ISIL:
	001 Move X8, -53760000
	002 Move V1, [X8+816]
	003 NotImplemented "Instruction FMAX not yet implemented."
	004 Move [X0+40], S0
	005 Return 

Method: UnityEngine.Vector2 get_referenceResolution()

Disassembly:
	0x03E30DAC MOV X1, X31
	0x03E30DB0 BL 0x3C0C9D4

ISIL:
	001 Move S0, [X0+44]
	002 Move S1, [X0+48]
	003 Return X0

Method: System.Void set_referenceResolution(UnityEngine.Vector2 value)

Disassembly:
	0x03E30DB4 LDR X8, [X19 + 0x20]
	0x03E30DB8 CBZ X8, 0x3E30E30
	0x03E30DBC LDR V8, [X19 + 0x70]
	0x03E30DC0 LDR V9, [X19 + 0x68]
	0x03E30DC4 MOV W20, W0
	0x03E30DC8 MOV X0, X8
	0x03E30DCC MOV X1, X31
	0x03E30DD0 BL 0x3C0C9D4
	0x03E30DD4 LDR V0, [X19 + 0x68]
	0x03E30DD8 LDR V1, [X19 + 0x70]
	0x03E30DDC FADD S3, S8, S9
	0x03E30DE0 SCVTF S4, W22
	0x03E30DE4 SCVTF S2, W20
	0x03E30DE8 FMUL S3, S3, S4
	0x03E30DEC FADD S2, S3, S2
	0x03E30DF0 SCVTF S3, W21
	0x03E30DF4 FADD S0, S0, S1
	0x03E30DF8 SCVTF S4, W0
	0x03E30DFC FMUL S0, S0, S3
	0x03E30E00 FADD S0, S0, S4
	0x03E30E04 MOVZ W8, 0xBF800000
	0x03E30E08 FSUB S2, S2, S8
	0x03E30E0C FSUB S0, S0, S1
	0x03E30E10 STR S2, [X19 + 0x3C]
	0x03E30E14 STR S0, [X19 + 0x44]

ISIL:
	001 Move X8, -53764096
	002 Move V2, [X8+4028]
	003 Move X8, -53747712
	004 Move X9, -53760000
	005 Add X8, X8, 3616
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move [X0+44], S0
	008 Move [X0+52], S1
	009 Move V3, [X9+380]
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Move V0, [X8]
	014 Move [X0+44], S0
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move V0, [X9+380]
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Move V0, [X8]
	021 Move [X0+48], S0
	022 Return 

Method: UnityEngine.UI.CanvasScaler/ScreenMatchMode get_screenMatchMode()

Disassembly:
	0x03E30E18 STR W8, [X19 + 0x4C]
	0x03E30E1C LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_screenMatchMode(UnityEngine.UI.CanvasScaler/ScreenMatchMode value)

Disassembly:
	0x03E30E20 LDP X22, X21, [X31 + 0x20]
	0x03E30E24 LDR X30, [X31 + 0x10]

ISIL:
	001 Move [X0+52], W1
	002 Return 

Method: System.Single get_matchWidthOrHeight()

Disassembly:
	0x03E30E28 LDP D9, D8, [X31], #0x40
	0x03E30E2C RET

ISIL:
	001 Move V0, [X0+56]
	002 Return V0

Method: System.Void set_matchWidthOrHeight(System.Single value)

Disassembly:
	0x03E30E30 BL 0x1C16F20
	0x03E30E34 STP X29, X30, [X31 - 0x60]!

ISIL:
	001 Move [X0+56], S0
	002 Return 

Method: UnityEngine.UI.CanvasScaler/Unit get_physicalUnit()

Disassembly:
	0x03E30E38 STP X28, X27, [X31 + 0x10]
	0x03E30E3C STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Void set_physicalUnit(UnityEngine.UI.CanvasScaler/Unit value)

Disassembly:
	0x03E30E40 STP X24, X23, [X31 + 0x30]
	0x03E30E44 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X0+60], W1
	002 Return 

Method: System.Single get_fallbackScreenDPI()

Disassembly:
	0x03E30E48 STP X20, X19, [X31 + 0x50]
	0x03E30E4C ADRP X20, 0x5B8000

ISIL:
	001 Move V0, [X0+64]
	002 Return V0

Method: System.Void set_fallbackScreenDPI(System.Single value)

Disassembly:
	0x03E30E50 LDRB W8, [X20 + 0x73B]
	0x03E30E54 MOV X19, X0

ISIL:
	001 Move [X0+64], S0
	002 Return 

Method: System.Single get_defaultSpriteDPI()

Disassembly:
	0x03E30E58 TBNZ X8, 0x0, 0x3E30EF4
	0x03E30E5C ADRP X0, 0x2EB000

ISIL:
	001 Move V0, [X0+68]
	002 Return V0

Method: System.Void set_defaultSpriteDPI(System.Single value)

Disassembly:
	0x03E30E60 LDR X0, [X0 + 0xA18]
	0x03E30E64 BL 0x1C16CF4
	0x03E30E68 ADRP X0, 0x2EB000
	0x03E30E6C LDR X0, [X0 + 0xA20]

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FMAX not yet implemented."
	003 Move [X0+68], S0
	004 Return 

Method: System.Single get_dynamicPixelsPerUnit()

Disassembly:
	0x03E30E70 BL 0x1C16CF4
	0x03E30E74 ADRP X0, 0x2EB000

ISIL:
	001 Move V0, [X0+72]
	002 Return V0

Method: System.Void set_dynamicPixelsPerUnit(System.Single value)

Disassembly:
	0x03E30E78 LDR X0, [X0 + 0xA28]
	0x03E30E7C BL 0x1C16CF4

ISIL:
	001 Move [X0+72], S0
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E30E80 ADRP X0, 0x33B000
	0x03E30E84 LDR X0, [X0 + 0x90]
	0x03E30E88 BL 0x1C16CF4
	0x03E30E8C ADRP X0, 0x33B000
	0x03E30E90 LDR X0, [X0 + 0x98]
	0x03E30E94 BL 0x1C16CF4
	0x03E30E98 ADRP X0, 0x33B000
	0x03E30E9C LDR X0, [X0 + 0xA0]
	0x03E30EA0 BL 0x1C16CF4
	0x03E30EA4 ADRP X0, 0x33B000
	0x03E30EA8 LDR X0, [X0 + 0xA8]
	0x03E30EAC BL 0x1C16CF4
	0x03E30EB0 ADRP X0, 0x2EB000
	0x03E30EB4 LDR X0, [X0 + 0xA40]
	0x03E30EB8 BL 0x1C16CF4
	0x03E30EBC ADRP X0, 0x2EB000
	0x03E30EC0 LDR X0, [X0 + 0xA48]
	0x03E30EC4 BL 0x1C16CF4

ISIL:
	001 Move X8, -53747712
	002 Move V0, [X8+3624]
	003 Move X8, -53743616
	004 Move V1, [X8+1456]
	005 Move W8, 0x42C00000
	006 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	007 Move X8, -53743616
	008 Move [X0+36], D0
	009 Move V0, [X8+1000]
	010 Move W8, 3
	011 Move [X0+60], W8
	012 Move W8, 0x3F800000
	013 Move X1, X31
	014 Move [X0+64], D2
	015 Move [X0+44], D1
	016 Move [X0+72], W8
	017 Move [X0+88], D0
	018 Call UIBehaviour..ctor, X0
	019 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03E30EC8 ADRP X0, 0x2C3000
	0x03E30ECC LDR X0, [X0 + 0x598]
	0x03E30ED0 BL 0x1C16CF4
	0x03E30ED4 ADRP X0, 0x2EA000
	0x03E30ED8 LDR X0, [X0 + 0xC70]
	0x03E30EDC BL 0x1C16CF4
	0x03E30EE0 ADRP X0, 0x2C3000
	0x03E30EE4 LDR X0, [X0 + 0x6C0]
	0x03E30EE8 BL 0x1C16CF4
	0x03E30EEC MOVZ W8, 0x1
	0x03E30EF0 STRB W8, [X20 + 0x73B]
	0x03E30EF4 LDR X8, [X19 + 0x58]
	0x03E30EF8 CBZ X8, 0x3E31180
	0x03E30EFC LDP W2, W9, [X8 + 0x18]
	0x03E30F00 ADRP X20, 0x2EB000
	0x03E30F04 LDR X20, [X20 + 0xA28]
	0x03E30F08 ADD W9, W9, 0x1
	0x03E30F0C CMP W2, 0x1
	0x03E30F10 STP W31, W9, [X8 + 0x18]
	0x03E30F14 B.LT 0x3E30F28
	0x03E30F18 LDR X0, [X8 + 0x10]
	0x03E30F1C MOV W1, W31
	0x03E30F20 MOV X3, X31
	0x03E30F24 BL 0x339FA34
	0x03E30F28 LDR X0, [X20]
	0x03E30F2C ADRP X20, 0x2EB000
	0x03E30F30 LDR W8, [X0 + 0xE0]
	0x03E30F34 LDR X20, [X20 + 0xA18]
	0x03E30F38 CBNZ W8, 0x3E30F40
	0x03E30F3C BL 0x1C16DFC
	0x03E30F40 LDR X0, [X20]
	0x03E30F44 BL 0x28F98D4
	0x03E30F48 MOV X20, X0
	0x03E30F4C MOV X0, X19
	0x03E30F50 BL 0x3E31474
	0x03E30F54 CBZ X0, 0x3E31180
	0x03E30F58 ADRP X29, 0x2C3000
	0x03E30F5C ADRP X28, 0x2EB000
	0x03E30F60 ADRP X27, 0x33B000
	0x03E30F64 LDR X29, [X29 + 0x598]
	0x03E30F68 LDR X28, [X28 + 0xA48]
	0x03E30F6C LDR X27, [X27 + 0x98]
	0x03E30F70 MOV W21, W31
	0x03E30F74 MOV X1, X31
	0x03E30F78 BL 0x3C40C8C
	0x03E30F7C CMP W21, W0
	0x03E30F80 B.GE 0x3E31184
	0x03E30F84 MOV X0, X19
	0x03E30F88 BL 0x3E31474

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x5B9000
	008 Move X22, 0x31A000
	009 Move X21, 0x32A000
	010 Move X20, 0x33C000
	011 Move W8, [X23+1811]
	012 Move X22, [X22+1376]
	013 Move X21, [X21+1072]
	014 Move X20, [X20+64]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x33C000
	021 Move X0, [X0+64]
	022 Call 0x1C17CF4
	023 Move X0, 0x31A000
	024 Move X0, [X0+1376]
	025 Call 0x1C17CF4
	026 Move X0, 0x32A000
	027 Move X0, [X0+1072]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1811], W8
	031 Move X0, X19
	032 Move X1, X31
	033 Call UIBehaviour.OnEnable, X0
	034 Move X1, [X22]
	035 Move X0, X19
	036 Call 0x21A4894, X0
	037 Move X8, [X19]
	038 Move [X19+80], X0
	039 Move X0, X19
	040 Move X9, [X8+584]
	041 Move X1, [X8+592]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X2, [X20]
	046 Move X1, X19
	047 Move X3, X31
	048 Move X20, X0
	049 Call WillRenderCanvases..ctor, X0, X1, X2
	050 Move X0, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X1, X31
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call Canvas.add_preWillRenderCanvases, X0
	059 Return 

Method: System.Void Canvas_preWillRenderCanvases()

Disassembly:
	0x03E30F8C CBZ X0, 0x3E31180
	0x03E30F90 MOV W1, W21
	0x03E30F94 MOV X2, X31
	0x03E30F98 BL 0x3C410A0

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+584]
	003 Move X1, [X8+592]
	004 CallNoReturn X2

Method: System.Void OnDisable()

Disassembly:
	0x03E30F9C CBZ X0, 0x3E30FBC
	0x03E30FA0 ADRP X8, 0x2EA000
	0x03E30FA4 LDR X8, [X8 + 0xC70]
	0x03E30FA8 LDR X9, [X0]
	0x03E30FAC LDR X8, [X8]
	0x03E30FB0 CMP X9, X8
	0x03E30FB4 CSEL X22, X0, X31, EQ
	0x03E30FB8 B 0x3E30FC0
	0x03E30FBC MOV X22, X31
	0x03E30FC0 LDR X0, [X29]
	0x03E30FC4 LDR W8, [X0 + 0xE0]
	0x03E30FC8 CBNZ W8, 0x3E30FD0
	0x03E30FCC BL 0x1C16DFC
	0x03E30FD0 MOV X0, X22
	0x03E30FD4 MOV X1, X31
	0x03E30FD8 MOV X2, X31
	0x03E30FDC BL 0x3C3883C
	0x03E30FE0 TBNZ X0, 0x0, 0x3E31170
	0x03E30FE4 CBZ X22, 0x3E31180
	0x03E30FE8 MOV X0, X22
	0x03E30FEC MOV X1, X31
	0x03E30FF0 BL 0x3C32ECC
	0x03E30FF4 CBZ X0, 0x3E31180
	0x03E30FF8 MOV X1, X31
	0x03E30FFC BL 0x3C35834
	0x03E31000 TBZ X0, 0x0, 0x3E31170
	0x03E31004 ADRP X8, 0x2C2000
	0x03E31008 LDR X8, [X8 + 0x6C0]
	0x03E3100C ADRP X9, 0x33A000
	0x03E31010 LDR X0, [X8]
	0x03E31014 LDR W8, [X0 + 0xE0]
	0x03E31018 LDR X9, [X9 + 0x90]
	0x03E3101C LDR X23, [X9]
	0x03E31020 CBNZ W8, 0x3E31028
	0x03E31024 BL 0x1C16DFC
	0x03E31028 MOV X0, X23
	0x03E3102C MOV X1, X31
	0x03E31030 BL 0x338C698
	0x03E31034 MOV X1, X0
	0x03E31038 MOV X0, X22
	0x03E3103C MOV X2, X20
	0x03E31040 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5B9000
	007 Move X21, 0x32A000
	008 Move X20, 0x33C000
	009 Move W8, [X22+1812]
	010 Move X21, [X21+1072]
	011 Move X20, [X20+64]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x33C000
	018 Move X0, [X0+64]
	019 Call 0x1C17CF4
	020 Move X0, 0x32A000
	021 Move X0, [X0+1072]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1812], W8
	025 Move S0, 1
	026 Move X0, X19
	027 Call CanvasScaler.SetScaleFactor, X0, V0
	028 Move W8, 0x42C80000
	029 Move S0, W8
	030 Move X0, X19
	031 Call CanvasScaler.SetReferencePixelsPerUnit, X0, V0
	032 Move X0, [X21]
	033 Call 0x1C17F10
	034 Move X2, [X20]
	035 Move X1, X19
	036 Move X3, X31
	037 Move X20, X0
	038 Call WillRenderCanvases..ctor, X0, X1, X2
	039 Move X0, X20
	040 Move X1, X31
	041 Call Canvas.remove_preWillRenderCanvases, X0
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Call UIBehaviour.OnDisable, X0
	050 Return 

Method: System.Void Handle()

Disassembly:
	0x03E310C4 ADD X10, X10, 0x10
	0x03E310C8 B.NE 0x3E310B4
	0x03E310CC MOV X0, X24
	0x03E310D0 MOV X1, X25
	0x03E310D4 MOV W2, W31
	0x03E310D8 BL 0x1C5C788
	0x03E310DC B 0x3E310EC
	0x03E310E0 LDRSW X9, [X10]
	0x03E310E4 ADD X8, X8, X9, 0x4, LSL
	0x03E310E8 ADD X0, X8, 0x138
	0x03E310EC LDP X8, X1, [X0]
	0x03E310F0 MOV X0, X24
	0x03E310F4 BLR X8
	0x03E310F8 TBZ X0, 0x0, 0x3E31110
	0x03E310FC LDR W8, [X20 + 0x18]
	0x03E31100 ADD W23, W23, 0x1
	0x03E31104 CMP W23, W8
	0x03E31108 B.LT 0x3E31060
	0x03E3110C B 0x3E31170
	0x03E31110 LDR X0, [X19 + 0x58]
	0x03E31114 CBZ X0, 0x3E31180
	0x03E31118 ADRP X9, 0x33A000
	0x03E3111C LDR W10, [X0 + 0x1C]
	0x03E31120 LDR X8, [X0 + 0x10]
	0x03E31124 LDR X9, [X9 + 0xA0]
	0x03E31128 ADD W10, W10, 0x1
	0x03E3112C LDR X9, [X9]
	0x03E31130 STR W10, [X0 + 0x1C]
	0x03E31134 CBZ X8, 0x3E31180
	0x03E31138 LDRSW X10, [X0 + 0x18]
	0x03E3113C LDR W11, [X8 + 0x18]
	0x03E31140 CMP W10, W11
	0x03E31144 B.CS 0x3E3115C
	0x03E31148 ADD W9, W10, 0x1
	0x03E3114C ADD X8, X8, X10, 0x3, LSL
	0x03E31150 STR W9, [X0 + 0x18]
	0x03E31154 STR X22, [X8 + 0x20]
	0x03E31158 B 0x3E31170
	0x03E3115C LDR X8, [X9 + 0x20]
	0x03E31160 MOV X1, X22
	0x03E31164 LDR X8, [X8 + 0xC0]
	0x03E31168 LDR X2, [X8 + 0x70]
	0x03E3116C BL 0x301BF90
	0x03E31170 MOV X0, X19
	0x03E31174 ADD W21, W21, 0x1
	0x03E31178 BL 0x3E31474
	0x03E3117C CBNZ X0, 0x3E30F74
	0x03E31180 BL 0x1C16F20
	0x03E31184 ADRP X8, 0x2EA000
	0x03E31188 LDR X8, [X8 + 0xA28]
	0x03E3118C LDR X0, [X8]
	0x03E31190 LDR W8, [X0 + 0xE0]
	0x03E31194 CBNZ W8, 0x3E3119C
	0x03E31198 BL 0x1C16DFC
	0x03E3119C ADRP X8, 0x2EA000
	0x03E311A0 LDR X8, [X8 + 0xA20]
	0x03E311A4 MOV X0, X20
	0x03E311A8 LDR X1, [X8]
	0x03E311AC BL 0x28F9A14
	0x03E311B0 ADD X0, X19, 0x38
	0x03E311B4 LDP X20, X19, [X31 + 0x50]
	0x03E311B8 LDP X22, X21, [X31 + 0x40]
	0x03E311BC LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5B8000
	006 Move X20, 0x2C3000
	007 Move W8, [X21+1813]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2C3000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1813], W8
	019 Move X0, [X20]
	020 Move X20, [X19+80]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {59}
	033 Move X0, [X19+80]
	034 Compare X0, 0
	035 JumpIfEqual {76}
	036 Move X1, X31
	037 Call Canvas.get_isRootCanvas, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {59}
	042 Move X0, [X19+80]
	043 Compare X0, 0
	044 JumpIfEqual {76}
	045 Move X1, X31
	046 Call Canvas.get_renderMode, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, [X19]
	049 Move X2, [X8+600]
	050 Move X1, [X8+608]
	051 Move W8, [X19+32]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare W8, 0
	055 JumpIfNotEqual {59}
	056 Move X8, [X19]
	057 Move X2, [X8+616]
	058 Move X1, [X8+624]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Move X8, [X19]
	065 Move X2, [X8+648]
	066 Move X1, [X8+656]
	067 Move X8, [X19]
	068 Move X2, [X8+632]
	069 Move X1, [X8+640]
	070 Move X0, X19
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X2
	076 Call 0x1C17F20

Method: System.Void HandleWorldCanvas()

Disassembly:
	0x03E311C0 LDP X26, X25, [X31 + 0x20]
	0x03E311C4 LDP X28, X27, [X31 + 0x10]
	0x03E311C8 MOV X1, X31
	0x03E311CC LDP X29, X30, [X31], #0x60
	0x03E311D0 B 0x3C3E3A8
	0x03E311D4 MOV X0, X26
	0x03E311D8 MOV X1, X24
	0x03E311DC BL 0x1C171E0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move V0, [X0+72]
	004 Move X19, X0
	005 Call CanvasScaler.SetScaleFactor, X0, V0
	006 Move V0, [X19+36]
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call CanvasScaler.SetReferencePixelsPerUnit, X0, V0
	011 Return 

Method: System.Void HandleConstantPixelSize()

Disassembly:
	0x03E311E0 MOV X0, X26
	0x03E311E4 MOV X1, X25
	0x03E311E8 BL 0x1C171E0
	0x03E311EC STP X30, X19, [X31 - 0x10]!
	0x03E311F0 CBZ W1, 0x3E3120C
	0x03E311F4 CMP W1, 0x1
	0x03E311F8 B.NE 0x3E31224
	0x03E311FC ADD X8, X0, 0x50

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move V0, [X0+40]
	004 Move X19, X0
	005 Call CanvasScaler.SetScaleFactor, X0, V0
	006 Move V0, [X19+36]
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call CanvasScaler.SetReferencePixelsPerUnit, X0, V0
	011 Return 

Method: System.Void HandleScaleWithScreenSize()

Disassembly:
	0x03E31200 STR S0, [X0 + 0x40]
	0x03E31204 STR S1, [X0 + 0x48]
	0x03E31208 B 0x3E31218
	0x03E3120C STR S0, [X0 + 0x3C]
	0x03E31210 STR S1, [X0 + 0x44]
	0x03E31214 ADD X8, X0, 0x4C
	0x03E31218 STR S2, [X8]
	0x03E3121C LDP X30, X19, [X31], #0x10
	0x03E31220 RET
	0x03E31224 ADRP X0, 0x2CC000
	0x03E31228 LDR X0, [X0 + 0xF78]
	0x03E3122C BL 0x1C16D08
	0x03E31230 BL 0x1C16F10
	0x03E31234 MOV X19, X0
	0x03E31238 ADRP X0, 0x314000
	0x03E3123C LDR X0, [X0 + 0xFF8]
	0x03E31240 BL 0x1C16D08
	0x03E31244 MOV X1, X0
	0x03E31248 MOV X0, X19
	0x03E3124C MOV X2, X31
	0x03E31250 BL 0x3379B6C
	0x03E31254 ADRP X0, 0x32E000
	0x03E31258 LDR X0, [X0 + 0x2A8]
	0x03E3125C BL 0x1C16D08
	0x03E31260 MOV X1, X0
	0x03E31264 MOV X0, X19
	0x03E31268 BL 0x1C16DEC
	0x03E3126C STP D9, D8, [X31 - 0x30]!
	0x03E31270 STP X30, X21, [X31 + 0x10]
	0x03E31274 STP X20, X19, [X31 + 0x20]
	0x03E31278 ADRP X20, 0x5B7000
	0x03E3127C LDRB W8, [X20 + 0x723]
	0x03E31280 MOV X19, X0
	0x03E31284 TBNZ X8, 0x0, 0x3E3129C
	0x03E31288 ADRP X0, 0x33A000
	0x03E3128C LDR X0, [X0 + 0x88]
	0x03E31290 BL 0x1C16CF4
	0x03E31294 MOVZ W8, 0x1
	0x03E31298 STRB W8, [X20 + 0x723]
	0x03E3129C LDR W8, [X19 + 0x78]
	0x03E312A0 CMP W8, 0x2
	0x03E312A4 B.EQ 0x3E31308
	0x03E312A8 CMP W8, 0x1
	0x03E312AC B.NE 0x3E31310
	0x03E312B0 LDR X8, [X19 + 0x58]
	0x03E312B4 CBZ X8, 0x3E31470
	0x03E312B8 LDR V0, [X8 + 0x18]
	0x03E312BC LDR V1, [X19 + 0x7C]
	0x03E312C0 ADRP X8, 0xFFFFFFFFFCCB8000
	0x03E312C4 ADRP X20, 0x5A7000
	0x03E312C8 LDRB W9, [X20 + 0xABE]
	0x03E312CC LDR V8, [X8 + 0xF70]
	0x03E312D0 SCVTF S0, S0
	0x03E312D4 SCVTF S1, S1
	0x03E312D8 FDIV S9, S0, S1
	0x03E312DC CBNZ W9, 0x3E312F4
	0x03E312E0 ADRP X0, 0x2C2000
	0x03E312E4 LDR X0, [X0 + 0x5A8]
	0x03E312E8 BL 0x1C16CF4
	0x03E312EC MOVZ W8, 0x1
	0x03E312F0 STRB W8, [X20 + 0xABE]
	0x03E312F4 ADRP X8, 0x2C2000
	0x03E312F8 LDR X8, [X8 + 0x5A8]
	0x03E312FC FADD S8, S9, S8
	0x03E31300 LDR X0, [X8]
	0x03E31304 B 0x3E313F8
	0x03E31308 LDR W20, [X19 + 0x7C]
	0x03E3130C B 0x3E31420
	0x03E31310 MOV X0, X19
	0x03E31314 BL 0x3E31474
	0x03E31318 CBZ X0, 0x3E31470
	0x03E3131C MOV X1, X31
	0x03E31320 BL 0x3C3E51C
	0x03E31324 LDR X0, [X19 + 0x20]
	0x03E31328 CBZ X0, 0x3E31470
	0x03E3132C MOV X1, X31
	0x03E31330 MOV V8.16B, V2.16B
	0x03E31334 BL 0x3C0C9D4
	0x03E31338 LDR V0, [X19 + 0x70]
	0x03E3133C ADRP X8, 0xFFFFFFFFFCCB9000
	0x03E31340 LDR V1, [X19 + 0x68]
	0x03E31344 ADRP X20, 0x5A7000
	0x03E31348 LDR V3, [X8 + 0x410]
	0x03E3134C SCVTF S2, W0
	0x03E31350 LDRB W8, [X20 + 0xA23]
	0x03E31354 FSUB S2, S8, S2
	0x03E31358 FADD S2, S0, S2
	0x03E3135C FADD S8, S2, S3
	0x03E31360 FADD S9, S0, S1
	0x03E31364 CBNZ W8, 0x3E3137C
	0x03E31368 ADRP X0, 0x2C2000
	0x03E3136C LDR X0, [X0 + 0x5A8]
	0x03E31370 BL 0x1C16CF4
	0x03E31374 MOVZ W8, 0x1
	0x03E31378 STRB W8, [X20 + 0xA23]
	0x03E3137C ADRP X20, 0x2C2000
	0x03E31380 LDR X20, [X20 + 0x5A8]
	0x03E31384 FDIV S8, S8, S9
	0x03E31388 LDR X0, [X20]
	0x03E3138C LDR W8, [X0 + 0xE0]
	0x03E31390 CBNZ W8, 0x3E31398
	0x03E31394 BL 0x1C16DFC
	0x03E31398 MOVZ W8, 0x7F800000
	0x03E3139C LDR X9, [X19 + 0x58]
	0x03E313A0 FRINTM S0, S8
	0x03E313A4 FMOV S1, W8
	0x03E313A8 FCVTMS W10, S8
	0x03E313AC FCMP S0, S1
	0x03E313B0 MOVZ W8, 0x80000000
	0x03E313B4 CSEL W8, W8, W10, EQ
	0x03E313B8 CBZ X9, 0x3E31470
	0x03E313BC LDR V0, [X9 + 0x18]
	0x03E313C0 ADRP X21, 0x5A7000
	0x03E313C4 LDRB W9, [X21 + 0xABE]
	0x03E313C8 CMP W8, 0x1
	0x03E313CC CSINC W8, W8, W31, GT
	0x03E313D0 SCVTF S8, S0
	0x03E313D4 SCVTF S9, W8
	0x03E313D8 CBNZ W9, 0x3E313F0
	0x03E313DC ADRP X0, 0x2C2000
	0x03E313E0 LDR X0, [X0 + 0x5A8]
	0x03E313E4 BL 0x1C16CF4
	0x03E313E8 MOVZ W8, 0x1
	0x03E313EC STRB W8, [X21 + 0xABE]
	0x03E313F0 LDR X0, [X20]
	0x03E313F4 FDIV S8, S8, S9
	0x03E313F8 LDR W8, [X0 + 0xE0]
	0x03E313FC CBNZ W8, 0x3E31404
	0x03E31400 BL 0x1C16DFC
	0x03E31404 MOVZ W8, 0x7F800000
	0x03E31408 FRINTP S0, S8
	0x03E3140C FMOV S1, W8
	0x03E31410 FCVTPS W9, S8
	0x03E31414 FCMP S0, S1
	0x03E31418 MOVZ W8, 0x80000000
	0x03E3141C CSEL W20, W8, W9, EQ
	0x03E31420 LDR X0, [X19 + 0x20]
	0x03E31424 CBZ X0, 0x3E31470
	0x03E31428 MOV X1, X31
	0x03E3142C BL 0x3C0CA10
	0x03E31430 LDR V0, [X19 + 0x6C]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x5B8000
	009 Move W8, [X20+1814]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x327000
	016 Move X0, [X0+1096]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1814], W8
	020 Move X0, [X19+80]
	021 Compare X0, 0
	022 JumpIfEqual {157}
	023 Move X1, X31
	024 Call Canvas.get_renderingDisplaySize, X0
	025 Move X0, [X19+80]
	026 Compare X0, 0
	027 JumpIfEqual {157}
	028 Move X1, X31
	029 Move V9, V0
	030 Move V8, V1
	031 Call Canvas.get_targetDisplay, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X21, 0x327000
	034 Move X21, [X21+1096]
	035 Move W20, W0
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {157}
	046 Move W9, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W9, [X0+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {57}
	051 Call 0x1C17DFC
	052 Move X8, [X21]
	053 Move X8, [X8+184]
	054 Move X8, [X8]
	055 Compare X8, 0
	056 JumpIfEqual {157}
	057 Move W9, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X8, X8, W20
	060 Move X20, [X8+32]
	061 Compare X20, 0
	062 JumpIfEqual {157}
	063 Move X0, X20
	064 Move X1, X31
	065 Call Display.get_renderingWidth, X0
	066 Move W21, W0
	067 Move X0, X20
	068 Move X1, X31
	069 Call Display.get_renderingHeight, X0
	070 NotImplemented "Instruction SCVTF not yet implemented."
	071 NotImplemented "Instruction SCVTF not yet implemented."
	072 Move W8, [X19+52]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move S0, W31
	076 Compare W8, 0
	077 JumpIfNotEqual {144}
	078 Move X20, 0x5B1000
	079 Move W8, [X20+3640]
	080 Move V10, [X19+44]
	081 Compare W8, 0
	082 JumpIfNotEqual {88}
	083 Move X0, 0x2C3000
	084 Move X0, [X0+1448]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X20+3640], W8
	088 Move X21, 0x2C3000
	089 Move X21, [X21+1448]
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Move X0, [X21]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 NotImplemented "Instruction FCVT not yet implemented."
	097 Move D1, 2
	098 Move X0, X31
	099 Call Math.Log, V0, V1
	100 Move W8, [X20+3640]
	101 Move V10, [X19+48]
	102 Move V9, V0
	103 Compare W8, 0
	104 JumpIfNotEqual {110}
	105 Move X0, 0x2C3000
	106 Move X0, [X0+1448]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X20+3640], W8
	110 Move X0, [X21]
	111 NotImplemented "Instruction INVALID not yet implemented."
	112 NotImplemented "Instruction FDIV not yet implemented."
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 NotImplemented "Instruction FCVT not yet implemented."
	118 Move D1, 2
	119 Move X0, X31
	120 Call Math.Log, V0, V1
	121 Move V1, [X19+56]
	122 Move S2, 1
	123 NotImplemented "Instruction INVALID not yet implemented."
	124 Move S3, W31
	125 NotImplemented "Instruction FMIN not yet implemented."
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 NotImplemented "Instruction FCSEL not yet implemented."
	128 Subtract S0, S0, S9
	129 Multiply S0, S0, S1
	130 Add S0, S0, S9
	131 Call 0x3EB2B90
	132 Move S0, [X19+44]
	133 Move S1, [X19+48]
	134 NotImplemented "Instruction FDIV not yet implemented."
	135 NotImplemented "Instruction FDIV not yet implemented."
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 NotImplemented "Instruction FCSEL not yet implemented."
	138 Move S0, [X19+44]
	139 Move S1, [X19+48]
	140 NotImplemented "Instruction FDIV not yet implemented."
	141 NotImplemented "Instruction FDIV not yet implemented."
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 NotImplemented "Instruction FCSEL not yet implemented."
	144 Move X0, X19
	145 Call CanvasScaler.SetScaleFactor, X0, V0
	146 Move V0, [X19+36]
	147 Move X0, X19
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X30, [X31+32]
	151 Move X21, [X31+40]
	152 Move D9, [X31+16]
	153 Move D8, [X31+24]
	154 Move V10, [X31+64]
	155 Call CanvasScaler.SetReferencePixelsPerUnit, X0, V0
	156 Return 
	157 Call 0x1C17F20
	158 Call 0x1C17F28

Method: System.Void HandleConstantPhysicalSize()

Disassembly:
	0x03E31434 LDR V1, [X19 + 0x74]
	0x03E31438 SCVTF S3, W20
	0x03E3143C SCVTF S2, W0
	0x03E31440 MOVZ W8, 0xBF800000
	0x03E31444 FADD S0, S0, S1
	0x03E31448 FMUL S0, S0, S3
	0x03E3144C FADD S0, S0, S2
	0x03E31450 FSUB S0, S0, S1
	0x03E31454 STR S0, [X19 + 0x40]
	0x03E31458 STR S0, [X19 + 0x48]
	0x03E3145C STR W8, [X19 + 0x50]
	0x03E31460 LDP X20, X19, [X31 + 0x20]
	0x03E31464 LDP X30, X21, [X31 + 0x10]
	0x03E31468 LDP D9, D8, [X31], #0x30
	0x03E3146C RET
	0x03E31470 BL 0x1C16F20
	0x03E31474 STP X30, X21, [X31 - 0x20]!
	0x03E31478 STP X20, X19, [X31 + 0x10]
	0x03E3147C ADRP X21, 0x5B7000
	0x03E31480 ADRP X20, 0x2C2000
	0x03E31484 LDRB W8, [X21 + 0x73A]
	0x03E31488 LDR X20, [X20 + 0x598]
	0x03E3148C MOV X19, X0
	0x03E31490 TBNZ X8, 0x0, 0x3E314B4
	0x03E31494 ADRP X0, 0x2C4000
	0x03E31498 LDR X0, [X0 + 0x6B8]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, X31
	006 Call Screen.get_dpi
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 Move V0, [X19+64]
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move S8, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X9, -53051392
	013 Add X9, X9, 1548
	014 Move V8, [X9]
	015 NotImplemented "Instruction FDIV not yet implemented."
	016 Move X0, X19
	017 Call CanvasScaler.SetScaleFactor, X0, V0
	018 Move V0, [X19+36]
	019 Move V1, [X19+68]
	020 Move X0, X19
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Multiply S0, S8, S0
	024 NotImplemented "Instruction FDIV not yet implemented."
	025 Move V8, [X31+32]
	026 Call CanvasScaler.SetReferencePixelsPerUnit, X0, V0
	027 Return 

Method: System.Void SetScaleFactor(System.Single scaleFactor)

Disassembly:
	0x03E31044 BL 0x3C33320
	0x03E31048 CBZ X20, 0x3E31180
	0x03E3104C LDR W8, [X20 + 0x18]
	0x03E31050 CBZ W8, 0x3E31110
	0x03E31054 CMP W8, 0x1
	0x03E31058 B.LT 0x3E31170
	0x03E3105C MOV W23, W31
	0x03E31060 LDR X2, [X28]
	0x03E31064 MOV X0, X20
	0x03E31068 MOV W1, W23
	0x03E3106C BL 0x301BCCC
	0x03E31070 CBZ X0, 0x3E31180
	0x03E31074 LDR X24, [X27]
	0x03E31078 MOV X26, X0
	0x03E3107C MOV X1, X24
	0x03E31080 BL 0x1C16E00

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move V1, [X0+88]
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X19, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move X1, X31
	011 Move V8, V0
	012 Call Canvas.set_scaleFactor, X0, V0
	013 Move [X19+88], S8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Move V8, [X31+32]
	017 Return 
	018 Call 0x1C17F20

Method: System.Void SetReferencePixelsPerUnit(System.Single referencePixelsPerUnit)

Disassembly:
	0x03E31084 CBZ X0, 0x3E311D4
	0x03E31088 LDR X25, [X27]
	0x03E3108C MOV X0, X26
	0x03E31090 MOV X1, X25
	0x03E31094 BL 0x1C16E00
	0x03E31098 CBZ X0, 0x3E311E0
	0x03E3109C LDR X8, [X0]
	0x03E310A0 MOV X24, X0
	0x03E310A4 LDRH W9, [X8 + 0x12E]
	0x03E310A8 CBZ X9, 0x3E310CC
	0x03E310AC LDR X10, [X8 + 0xB0]
	0x03E310B0 ADD X10, X10, 0x8
	0x03E310B4 LDUR X11, [X10 - 0x8]
	0x03E310B8 CMP X11, X25
	0x03E310BC B.EQ 0x3E310E0
	0x03E310C0 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move V1, [X0+92]
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move X19, X0
	007 Move X0, [X0+80]
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move X1, X31
	011 Move V8, V0
	012 Call Canvas.set_referencePixelsPerUnit, X0, V0
	013 Move [X19+92], S8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Move V8, [X31+32]
	017 Return 
	018 Call 0x1C17F20

