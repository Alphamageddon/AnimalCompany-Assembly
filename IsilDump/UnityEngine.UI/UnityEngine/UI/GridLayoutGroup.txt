Type: UnityEngine.UI.GridLayoutGroup

Method: UnityEngine.UI.GridLayoutGroup/Corner get_startCorner()

Disassembly:
	0x03E31878 CSEL W25, W29, W28, LT
	0x03E3187C B 0x3E31994

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_startCorner(UnityEngine.UI.GridLayoutGroup/Corner value)

Disassembly:
	0x03E31880 LDR W8, [X19 + 0x78]
	0x03E31884 CMP W29, W28
	0x03E31888 CSEL W9, W28, W29, GT
	0x03E3188C CMP W29, 0x1
	0x03E31890 CSINC W25, W9, W31, GE
	0x03E31894 CMP W8, 0x2
	0x03E31898 B.NE 0x3E3191C
	0x03E3189C CMP W20, W28
	0x03E318A0 CSEL W24, W20, W28, LT
	0x03E318A4 B 0x3E31998
	0x03E318A8 ADRP X21, 0x5A7000
	0x03E318AC LDRB W8, [X21 + 0xABE]
	0x03E318B0 SCVTF S8, W28
	0x03E318B4 SCVTF S9, W20
	0x03E318B8 CBNZ W8, 0x3E318D0
	0x03E318BC ADRP X0, 0x2C2000
	0x03E318C0 LDR X0, [X0 + 0x5A8]
	0x03E318C4 BL 0x1C16CF4
	0x03E318C8 MOVZ W8, 0x1
	0x03E318CC STRB W8, [X21 + 0xABE]
	0x03E318D0 ADRP X8, 0x2C2000
	0x03E318D4 LDR X8, [X8 + 0x5A8]
	0x03E318D8 FDIV S8, S8, S9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5B8000
	007 Move X21, 0x33B000
	008 Move W8, [X22+1820]
	009 Move X21, [X21+80]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x33B000
	017 Move X0, [X0+80]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1820], W8
	021 Move X3, [X21]
	022 Add X1, X20, 96
	023 Move X0, X20
	024 Move W2, W19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Call LayoutGroup.SetProperty, X0, X1, X2
	031 Return 

Method: UnityEngine.UI.GridLayoutGroup/Axis get_startAxis()

Disassembly:
	0x03E318DC LDR X0, [X8]
	0x03E318E0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W0, [X0+100]
	002 Return X0

Method: System.Void set_startAxis(UnityEngine.UI.GridLayoutGroup/Axis value)

Disassembly:
	0x03E318E4 CBNZ W8, 0x3E318EC
	0x03E318E8 BL 0x1C16DFC
	0x03E318EC MOVZ W9, 0x7F800000
	0x03E318F0 FRINTP S0, S8
	0x03E318F4 FMOV S1, W9
	0x03E318F8 FCVTPS W8, S8
	0x03E318FC MOVZ W10, 0x80000000
	0x03E31900 FCMP S0, S1
	0x03E31904 CSEL W8, W10, W8, EQ
	0x03E31908 CMP W29, 0x1
	0x03E3190C B.LT 0x3E31990
	0x03E31910 CMP W29, W8
	0x03E31914 CSEL W25, W8, W29, GT
	0x03E31918 B 0x3E31994
	0x03E3191C ADRP X21, 0x5A7000
	0x03E31920 LDRB W8, [X21 + 0xABE]
	0x03E31924 SCVTF S8, W28
	0x03E31928 SCVTF S9, W29
	0x03E3192C CBNZ W8, 0x3E31944
	0x03E31930 ADRP X0, 0x2C2000
	0x03E31934 LDR X0, [X0 + 0x5A8]
	0x03E31938 BL 0x1C16CF4
	0x03E3193C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5B8000
	007 Move X21, 0x33B000
	008 Move W8, [X22+1821]
	009 Move X21, [X21+88]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x33B000
	017 Move X0, [X0+88]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1821], W8
	021 Move X3, [X21]
	022 Add X1, X20, 100
	023 Move X0, X20
	024 Move W2, W19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Call LayoutGroup.SetProperty, X0, X1, X2
	031 Return 

Method: UnityEngine.Vector2 get_cellSize()

Disassembly:
	0x03E31940 STRB W8, [X21 + 0xABE]
	0x03E31944 ADRP X8, 0x2C2000

ISIL:
	001 Move S0, [X0+104]
	002 Move S1, [X0+108]
	003 Return X0

Method: System.Void set_cellSize(UnityEngine.Vector2 value)

Disassembly:
	0x03E31948 LDR X8, [X8 + 0x5A8]
	0x03E3194C FDIV S8, S8, S9
	0x03E31950 LDR X0, [X8]
	0x03E31954 LDR W8, [X0 + 0xE0]
	0x03E31958 CBNZ W8, 0x3E31960
	0x03E3195C BL 0x1C16DFC
	0x03E31960 MOVZ W9, 0x7F800000
	0x03E31964 FRINTP S0, S8
	0x03E31968 FMOV S1, W9
	0x03E3196C FCVTPS W8, S8
	0x03E31970 MOVZ W10, 0x80000000
	0x03E31974 FCMP S0, S1
	0x03E31978 CSEL W8, W10, W8, EQ
	0x03E3197C CMP W20, 0x1
	0x03E31980 B.LT 0x3E31C90
	0x03E31984 CMP W20, W8
	0x03E31988 CSEL W24, W8, W20, GT
	0x03E3198C B 0x3E31998
	0x03E31990 MOVZ W25, 0x1
	0x03E31994 MOV W29, W20
	0x03E31998 LDP S0, S1, [X19 + 0x68]
	0x03E3199C LDP S2, S3, [X19 + 0x70]
	0x03E319A0 SCVTF S4, W25
	0x03E319A4 SUB W8, W25, 0x1
	0x03E319A8 FMUL S0, S0, S4

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5B8000
	008 Move X20, 0x33B000
	009 Move W8, [X21+1822]
	010 Move X20, [X20+96]
	011 Move V8, V1
	012 Move V9, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x33B000
	019 Move X0, [X0+96]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1822], W8
	023 Move X2, [X20]
	024 Add X1, X19, 104
	025 Move X0, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V9
	031 Move V1, V8
	032 Move D9, [X31+48]
	033 Move D8, [X31+56]
	034 Call LayoutGroup.SetProperty, X0, X1, X2
	035 Return 

Method: UnityEngine.Vector2 get_spacing()

Disassembly:
	0x03E319AC SCVTF S4, W8
	0x03E319B0 FMUL S2, S2, S4

ISIL:
	001 Move S0, [X0+112]
	002 Move S1, [X0+116]
	003 Return X0

Method: System.Void set_spacing(UnityEngine.Vector2 value)

Disassembly:
	0x03E319B4 SCVTF S4, W24
	0x03E319B8 SUB W26, W24, 0x1
	0x03E319BC FMUL S1, S1, S4
	0x03E319C0 SCVTF S4, W26
	0x03E319C4 FMUL S3, S3, S4
	0x03E319C8 FADD S0, S0, S2
	0x03E319CC MOV X0, X19
	0x03E319D0 MOV W1, W31
	0x03E319D4 STR W8, [X31 + 0xC]
	0x03E319D8 FADD S9, S1, S3
	0x03E319DC BL 0x3E31CA4
	0x03E319E0 MOV V8.16B, V0.16B
	0x03E319E4 MOVZ W1, 0x1
	0x03E319E8 MOV X0, X19
	0x03E319EC MOV V0.16B, V9.16B
	0x03E319F0 BL 0x3E31CA4
	0x03E319F4 LDR W8, [X19 + 0x7C]
	0x03E319F8 MOV V9.16B, V0.16B
	0x03E319FC STR W31, [X31 + 0x4]
	0x03E31A00 CMP W28, W8
	0x03E31A04 B.LE 0x3E31B1C
	0x03E31A08 ADRP X27, 0x5A7000
	0x03E31A0C LDRB W8, [X27 + 0xABE]
	0x03E31A10 SCVTF S11, W28
	0x03E31A14 SCVTF S10, W29

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5B8000
	008 Move X20, 0x33B000
	009 Move W8, [X21+1823]
	010 Move X20, [X20+96]
	011 Move V8, V1
	012 Move V9, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x33B000
	019 Move X0, [X0+96]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1823], W8
	023 Move X2, [X20]
	024 Add X1, X19, 112
	025 Move X0, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V9
	031 Move V1, V8
	032 Move D9, [X31+48]
	033 Move D8, [X31+56]
	034 Call LayoutGroup.SetProperty, X0, X1, X2
	035 Return 

Method: UnityEngine.UI.GridLayoutGroup/Constraint get_constraint()

Disassembly:
	0x03E31A18 CBNZ W8, 0x3E31A30
	0x03E31A1C ADRP X0, 0x2C2000

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_constraint(UnityEngine.UI.GridLayoutGroup/Constraint value)

Disassembly:
	0x03E31A20 LDR X0, [X0 + 0x5A8]
	0x03E31A24 BL 0x1C16CF4
	0x03E31A28 MOVZ W8, 0x1
	0x03E31A2C STRB W8, [X27 + 0xABE]
	0x03E31A30 ADRP X20, 0x2C2000
	0x03E31A34 LDR X20, [X20 + 0x5A8]
	0x03E31A38 FDIV S11, S11, S10
	0x03E31A3C LDR X0, [X20]
	0x03E31A40 LDR W8, [X0 + 0xE0]
	0x03E31A44 CBNZ W8, 0x3E31A4C
	0x03E31A48 BL 0x1C16DFC
	0x03E31A4C MOVZ W9, 0x7F800000
	0x03E31A50 LDR W10, [X19 + 0x7C]
	0x03E31A54 FRINTP S0, S11
	0x03E31A58 FMOV S1, W9
	0x03E31A5C FCVTPS W8, S11
	0x03E31A60 FCMP S0, S1
	0x03E31A64 MOVZ W9, 0x80000000
	0x03E31A68 CSEL W8, W9, W8, EQ
	0x03E31A6C SUBS W24, W10, W8
	0x03E31A70 B.LE 0x3E31B18
	0x03E31A74 LDRB W8, [X27 + 0xABE]
	0x03E31A78 CBNZ W8, 0x3E31A90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5B8000
	007 Move X21, 0x33B000
	008 Move W8, [X22+1824]
	009 Move X21, [X21+104]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x33B000
	017 Move X0, [X0+104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1824], W8
	021 Move X3, [X21]
	022 Add X1, X20, 120
	023 Move X0, X20
	024 Move W2, W19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Call LayoutGroup.SetProperty, X0, X1, X2
	031 Return 

Method: System.Int32 get_constraintCount()

Disassembly:
	0x03E31A7C ADRP X0, 0x2C2000
	0x03E31A80 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move W0, [X0+124]
	002 Return X0

Method: System.Void set_constraintCount(System.Int32 value)

Disassembly:
	0x03E31A84 BL 0x1C16CF4
	0x03E31A88 MOVZ W8, 0x1
	0x03E31A8C STRB W8, [X27 + 0xABE]
	0x03E31A90 LDR X0, [X20]
	0x03E31A94 LDR W8, [X0 + 0xE0]
	0x03E31A98 CBNZ W8, 0x3E31AA0
	0x03E31A9C BL 0x1C16DFC
	0x03E31AA0 ADRP X21, 0x5A7000
	0x03E31AA4 LDRB W8, [X21 + 0xA23]
	0x03E31AA8 FMOV S0, -1
	0x03E31AAC SCVTF S11, W24
	0x03E31AB0 FADD S10, S10, S0
	0x03E31AB4 CBNZ W8, 0x3E31ACC
	0x03E31AB8 ADRP X0, 0x2C2000
	0x03E31ABC LDR X0, [X0 + 0x5A8]
	0x03E31AC0 BL 0x1C16CF4
	0x03E31AC4 MOVZ W8, 0x1
	0x03E31AC8 STRB W8, [X21 + 0xA23]
	0x03E31ACC LDR X0, [X20]
	0x03E31AD0 FDIV S10, S11, S10
	0x03E31AD4 LDR W8, [X0 + 0xE0]
	0x03E31AD8 CBNZ W8, 0x3E31AE0
	0x03E31ADC BL 0x1C16DFC
	0x03E31AE0 MOVZ W9, 0x7F800000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5B8000
	007 Move X21, 0x33B000
	008 Move W8, [X22+1825]
	009 Move X21, [X21+112]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x33B000
	017 Move X0, [X0+112]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1825], W8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X3, [X21]
	023 Add X1, X20, 124
	024 NotImplemented "Instruction CSINC not yet implemented."
	025 Move X0, X20
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Call LayoutGroup.SetProperty, X0, X1, X2
	032 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E31AE4 FRINTM S0, S10
	0x03E31AE8 FMOV S1, W9
	0x03E31AEC FCVTMS W8, S10
	0x03E31AF0 MOVZ W10, 0x80000000
	0x03E31AF4 SDIV W11, W28, W29
	0x03E31AF8 FCMP S0, S1
	0x03E31AFC MSUB W9, W11, W29, W28
	0x03E31B00 CSEL W8, W10, W8, EQ
	0x03E31B04 ADD W8, W8, W24
	0x03E31B08 CMP W9, 0x1
	0x03E31B0C CINC W8, W8, EQ
	0x03E31B10 STR W8, [X31 + 0x4]
	0x03E31B14 B 0x3E31B1C
	0x03E31B18 STR W31, [X31 + 0x4]
	0x03E31B1C CMP W28, 0x1
	0x03E31B20 B.LT 0x3E31C68
	0x03E31B24 MOV W25, W29
	0x03E31B28 LDR W24, [X31 + 0x8]
	0x03E31B2C ADRP X29, 0x33A000
	0x03E31B30 LDR X29, [X29 + 0xB0]
	0x03E31B34 AND W8, W23, 0xFFFFFFFE
	0x03E31B38 MOV W20, W31
	0x03E31B3C AND W23, W22, 0xFFFFFFFE
	0x03E31B40 SUB W28, W31, W24
	0x03E31B44 SUB W22, W22, W8
	0x03E31B48 LDR W9, [X19 + 0x64]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, 0x42C80000
	005 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	006 Move [X0+104], D0
	007 Move X20, 0x5A9000
	008 Move W8, [X20+1935]
	009 Move X19, X0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x2CB000
	013 Move X0, [X0+3848]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1935], W8
	017 Move X8, 0x2CB000
	018 Move X8, [X8+3848]
	019 Move X0, X19
	020 Move X8, [X8]
	021 Move X8, [X8+184]
	022 Move V0, [X8]
	023 Move W8, 2
	024 Move [X19+124], W8
	025 Move [X19+112], D0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]

Method: System.Void CalculateLayoutInputHorizontal()

Disassembly:
	0x03E31C68 LDP X20, X19, [X31 + 0x80]
	0x03E31C6C LDP X22, X21, [X31 + 0x70]
	0x03E31C70 LDP X24, X23, [X31 + 0x60]
	0x03E31C74 LDP X26, X25, [X31 + 0x50]
	0x03E31C78 LDP X28, X27, [X31 + 0x40]
	0x03E31C7C LDP X29, X30, [X31 + 0x30]
	0x03E31C80 LDP D9, D8, [X31 + 0x20]
	0x03E31C84 LDP D11, D10, [X31 + 0x10]
	0x03E31C88 ADD X31, X31, 0x90
	0x03E31C8C RET
	0x03E31C90 MOVZ W24, 0x1
	0x03E31C94 B 0x3E31998
	0x03E31C98 BL 0x1C16F20
	0x03E31C9C MOVZ W1, 0x1
	0x03E31CA0 B 0x3E31510
	0x03E31CA4 STP D9, D8, [X31 - 0x30]!
	0x03E31CA8 STP X30, X21, [X31 + 0x10]
	0x03E31CAC STP X20, X19, [X31 + 0x20]
	0x03E31CB0 MOV X20, X0
	0x03E31CB4 LDR X0, [X0 + 0x20]
	0x03E31CB8 CBZ X0, 0x3E31DA0
	0x03E31CBC MOV V8.16B, V0.16B
	0x03E31CC0 MOV W21, W1
	0x03E31CC4 CBZ W1, 0x3E31CD4
	0x03E31CC8 MOV X1, X31
	0x03E31CCC BL 0x3C0CA10
	0x03E31CD0 B 0x3E31CDC
	0x03E31CD4 MOV X1, X31
	0x03E31CD8 BL 0x3C0C9D4
	0x03E31CDC MOV W19, W0
	0x03E31CE0 MOV X0, X20
	0x03E31CE4 BL 0x3E31474
	0x03E31CE8 CBZ X0, 0x3E31DA0
	0x03E31CEC MOV X1, X31
	0x03E31CF0 BL 0x3C3E51C
	0x03E31CF4 CBZ W21, 0x3E31D08
	0x03E31CF8 CMP W21, 0x1
	0x03E31CFC B.NE 0x3E31DA4
	0x03E31D00 MOV V9.16B, V3.16B
	0x03E31D04 B 0x3E31D0C
	0x03E31D08 MOV V9.16B, V2.16B
	0x03E31D0C LDR W8, [X20 + 0x28]
	0x03E31D10 LDR X0, [X20 + 0x20]
	0x03E31D14 CBZ W21, 0x3E31D40
	0x03E31D18 CBZ X0, 0x3E31DA0
	0x03E31D1C MOVZ W9, 0x5556
	0x03E31D20 MOVK W9, 0x55550000
	0x03E31D24 SMADDL X8, X8, X9, X31
	0x03E31D28 UBFM X9, X8, 0x3F, 0x3F
	0x03E31D2C UBFM X8, X8, 0x20, 0x3F
	0x03E31D30 MOV X1, X31
	0x03E31D34 ADD W20, W8, W9
	0x03E31D38 BL 0x3C0C920
	0x03E31D3C B 0x3E31D6C
	0x03E31D40 CBZ X0, 0x3E31DA0
	0x03E31D44 MOVZ W9, 0x5556
	0x03E31D48 MOVK W9, 0x55550000
	0x03E31D4C SMADDL X9, X8, X9, X31
	0x03E31D50 UBFM X10, X9, 0x3F, 0x3F
	0x03E31D54 UBFM X9, X9, 0x20, 0x3F
	0x03E31D58 ADD W9, W9, W10
	0x03E31D5C ADD W9, W9, W9, 0x1, LSL
	0x03E31D60 MOV X1, X31
	0x03E31D64 SUB W20, W8, W9
	0x03E31D68 BL 0x3C0C8A8
	0x03E31D6C SCVTF S0, W20
	0x03E31D70 FMOV S1, 0.5
	0x03E31D74 SCVTF S2, W19
	0x03E31D78 FMUL S0, S0, S1
	0x03E31D7C FADD S1, S2, S8
	0x03E31D80 LDP X20, X19, [X31 + 0x20]
	0x03E31D84 LDP X30, X21, [X31 + 0x10]
	0x03E31D88 FSUB S1, S9, S1
	0x03E31D8C SCVTF S2, W0
	0x03E31D90 FMUL S0, S1, S0
	0x03E31D94 FADD S0, S0, S2
	0x03E31D98 LDP D9, D8, [X31], #0x30
	0x03E31D9C RET
	0x03E31DA0 BL 0x1C16F20
	0x03E31DA4 ADRP X0, 0x2CC000
	0x03E31DA8 LDR X0, [X0 + 0xF78]
	0x03E31DAC BL 0x1C16D08
	0x03E31DB0 BL 0x1C16F10
	0x03E31DB4 MOV X19, X0
	0x03E31DB8 ADRP X0, 0x314000
	0x03E31DBC LDR X0, [X0 + 0xFF8]
	0x03E31DC0 BL 0x1C16D08
	0x03E31DC4 MOV X1, X0
	0x03E31DC8 MOV X0, X19
	0x03E31DCC MOV X2, X31
	0x03E31DD0 BL 0x3379B6C
	0x03E31DD4 ADRP X0, 0x315000
	0x03E31DD8 LDR X0, [X0]
	0x03E31DDC BL 0x1C16D08
	0x03E31DE0 MOV X1, X0
	0x03E31DE4 MOV X0, X19
	0x03E31DE8 BL 0x1C16DEC
	0x03E31DEC STP D9, D8, [X31 - 0x40]!
	0x03E31DF0 STP X30, X23, [X31 + 0x10]
	0x03E31DF4 STP X22, X21, [X31 + 0x20]
	0x03E31DF8 STP X20, X19, [X31 + 0x30]
	0x03E31DFC ADRP X22, 0x5B7000
	0x03E31E00 ADRP X23, 0x2C2000
	0x03E31E04 LDRB W8, [X22 + 0x740]
	0x03E31E08 LDR X23, [X23 + 0x598]
	0x03E31E0C MOV V8.16B, V1.16B
	0x03E31E10 MOV V9.16B, V0.16B
	0x03E31E14 MOV W19, W2
	0x03E31E18 MOV X20, X1
	0x03E31E1C MOV X21, X0
	0x03E31E20 TBNZ X8, 0x0, 0x3E31E38
	0x03E31E24 ADRP X0, 0x2C2000
	0x03E31E28 LDR X0, [X0 + 0x598]
	0x03E31E2C BL 0x1C16CF4
	0x03E31E30 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x5B8000
	009 Move W8, [X20+1826]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x33B000
	016 Move X0, [X0+136]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1826], W8
	020 Move X0, X19
	021 Call LayoutGroup.CalculateLayoutInputHorizontal, X0
	022 Move W9, [X19+120]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W21, [X19+124]
	025 Move X8, [X19+88]
	026 Compare X8, 0
	027 JumpIfEqual {127}
	028 Move W8, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move V0, [X19+124]
	031 Move X9, -53768192
	032 Move X20, 0x5A8000
	033 Move W10, [X20+2750]
	034 Move V8, [X9+3952]
	035 NotImplemented "Instruction SCVTF not yet implemented."
	036 NotImplemented "Instruction SCVTF not yet implemented."
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 Compare W10, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x2C3000
	041 Move X0, [X0+1448]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2750], W8
	045 Move X8, 0x2C3000
	046 Move X8, [X8+1448]
	047 Add S8, S9, S8
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move W8, 0x7F800000
	054 NotImplemented "Instruction FRINTP not yet implemented."
	055 Move S1, W8
	056 NotImplemented "Instruction FCVTPS not yet implemented."
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move W8, 0x80000000
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move W22, W21
	061 Move X20, 0x5A8000
	062 Move W9, [X20+2750]
	063 NotImplemented "Instruction SCVTF not yet implemented."
	064 Compare W9, 0
	065 JumpIfNotEqual {71}
	066 Move X0, 0x2C3000
	067 Move X0, [X0+1448]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+2750], W8
	071 Move X8, 0x2C3000
	072 Move X8, [X8+1448]
	073 NotImplemented "Instruction FSQRT not yet implemented."
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W9, 0x7F800000
	080 NotImplemented "Instruction FRINTP not yet implemented."
	081 Move S1, W9
	082 NotImplemented "Instruction FCVTPS not yet implemented."
	083 Move W10, 0x80000000
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Move W22, 1
	087 Move X0, [X19+32]
	088 Compare X0, 0
	089 JumpIfEqual {127}
	090 Move X1, X31
	091 Call RectOffset.get_horizontal, X0
	092 Move X8, [X19+32]
	093 Compare X8, 0
	094 JumpIfEqual {127}
	095 Move V8, [X19+112]
	096 Move V9, [X19+104]
	097 Move W20, W0
	098 Move X0, X8
	099 Move X1, X31
	100 Call RectOffset.get_horizontal, X0
	101 Move V0, [X19+104]
	102 Move V1, [X19+112]
	103 Add S3, S8, S9
	104 NotImplemented "Instruction SCVTF not yet implemented."
	105 NotImplemented "Instruction SCVTF not yet implemented."
	106 Multiply S3, S3, S4
	107 Add S2, S3, S2
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 Add S0, S0, S1
	110 NotImplemented "Instruction SCVTF not yet implemented."
	111 Multiply S0, S0, S3
	112 Add S0, S0, S4
	113 Move W8, 0xBF800000
	114 Subtract S2, S2, S8
	115 Subtract S0, S0, S1
	116 Move [X19+60], S2
	117 Move [X19+68], S0
	118 Move [X19+76], W8
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X30, [X31+16]
	124 Move D9, [X31+64]
	125 Move D8, [X31+72]
	126 Return 
	127 Call 0x1C17F20

Method: System.Void CalculateLayoutInputVertical()

Disassembly:
	0x03E3226C UBFM X12, X11, 0x3F, 0x3F
	0x03E32270 UBFM X11, X11, 0x20, 0x3F
	0x03E32274 ADD W11, W11, W12
	0x03E32278 ADD W11, W11, W11, 0x1, LSL
	0x03E3227C SUB W10, W10, W11
	0x03E32280 LDRB W11, [X20 + 0x6A]
	0x03E32284 LDRB W26, [X20, X8, LSL]
	0x03E32288 LDRB W27, [X20, X9, LSL]
	0x03E3228C LDR X8, [X20 + 0x58]
	0x03E32290 CMP W11, 0x0
	0x03E32294 SCVTF S0, W10
	0x03E32298 CSET W10, NE
	0x03E3229C CMP W19, 0x1
	0x03E322A0 FMOV S1, 0.5
	0x03E322A4 CSET W9, EQ
	0x03E322A8 FMUL S12, S0, S1
	0x03E322AC EOR W9, W9, W21, 0x0
	0x03E322B0 CBZ W11, 0x3E322F0
	0x03E322B4 CBZ X8, 0x3E32754
	0x03E322B8 LDR X0, [X20 + 0x20]
	0x03E322BC LDR W8, [X8 + 0x18]
	0x03E322C0 MOV W28, W31
	0x03E322C4 AND W9, W9, W10, 0x0
	0x03E322C8 CMP X0, 0x0
	0x03E322CC SUB W21, W8, 0x1
	0x03E322D0 CSET W8, EQ
	0x03E322D4 MOVN W29, 0x0
	0x03E322D8 TBZ X9, 0x0, 0x3E32310
	0x03E322DC CBNZ W8, 0x3E32754
	0x03E322E0 MOV X1, X31
	0x03E322E4 CBZ W19, 0x3E32324
	0x03E322E8 BL 0x3C0CA10
	0x03E322EC B 0x3E32328
	0x03E322F0 CBZ X8, 0x3E32754
	0x03E322F4 LDR X0, [X20 + 0x20]
	0x03E322F8 LDR W28, [X8 + 0x18]
	0x03E322FC MOV W21, W31
	0x03E32300 MOVZ W29, 0x1
	0x03E32304 CMP X0, 0x0
	0x03E32308 CSET W8, EQ
	0x03E3230C TBNZ X9, 0x0, 0x3E322DC
	0x03E32310 CBNZ W8, 0x3E32754
	0x03E32314 MOV X1, X31
	0x03E32318 CBZ W19, 0x3E324A4
	0x03E3231C BL 0x3C0C920
	0x03E32320 B 0x3E324A8
	0x03E32324 BL 0x3C0C9D4
	0x03E32328 LDRB W8, [X20 + 0x6A]
	0x03E3232C CMP W21, W28
	0x03E32330 CSET W9, GE
	0x03E32334 CSET W10, LT
	0x03E32338 CMP W8, 0x0
	0x03E3233C CSEL W8, W10, W9, EQ
	0x03E32340 CMP W8, 0x1
	0x03E32344 B.NE 0x3E32724
	0x03E32348 SCVTF S0, W0
	0x03E3234C FSUB S13, S8, S0
	0x03E32350 LDR X0, [X20 + 0x58]
	0x03E32354 CBZ X0, 0x3E32754
	0x03E32358 ADRP X8, 0x339000
	0x03E3235C LDR X8, [X8 + 0xB0]
	0x03E32360 CMP W27, 0x0
	0x03E32364 CSET W23, NE
	0x03E32368 CMP W25, 0x0
	0x03E3236C LDR X2, [X8]
	0x03E32370 MOV W1, W21
	0x03E32374 CSET W24, NE
	0x03E32378 BL 0x301BCCC
	0x03E3237C ADD X5, X31, 0x2C
	0x03E32380 ADD X6, X31, 0x28
	0x03E32384 ADD X7, X31, 0x1C
	0x03E32388 MOV X1, X0
	0x03E3238C MOV W2, W19
	0x03E32390 MOV W3, W24
	0x03E32394 MOV W4, W23
	0x03E32398 MOV X22, X0
	0x03E3239C BL 0x3E32B08
	0x03E323A0 CBZ W26, 0x3E323D0
	0x03E323A4 CBZ X22, 0x3E32754
	0x03E323A8 MOV X0, X22
	0x03E323AC MOV X1, X31
	0x03E323B0 BL 0x3C3FBAC
	0x03E323B4 CBZ W19, 0x3E323D8
	0x03E323B8 CMP W19, 0x2
	0x03E323BC B.EQ 0x3E323E0
	0x03E323C0 CMP W19, 0x1
	0x03E323C4 B.NE 0x3E32758
	0x03E323C8 MOV V9.16B, V1.16B
	0x03E323CC B 0x3E323E4
	0x03E323D0 FMOV S9, 1
	0x03E323D4 B 0x3E323E4
	0x03E323D8 MOV V9.16B, V0.16B
	0x03E323DC B 0x3E323E4
	0x03E323E0 MOV V9.16B, V2.16B
	0x03E323E4 LDR V0, [X31 + 0x1C]
	0x03E323E8 LDP S1, S2, [X31 + 0x28]
	0x03E323EC MOV X0, X20
	0x03E323F0 MOV W1, W19
	0x03E323F4 FCMP S0, 0x0
	0x03E323F8 FCSEL S0, S8, S1, GT
	0x03E323FC FCMP S13, S0
	0x03E32400 FCSEL S0, S0, S13, GT
	0x03E32404 FCMP S13, S2
	0x03E32408 FCSEL S10, S0, S2, PL
	0x03E3240C FMUL S0, S9, S10
	0x03E32410 BL 0x3E31CA4
	0x03E32414 MOV V11.16B, V0.16B
	0x03E32418 CBZ W25, 0x3E3243C
	0x03E3241C MOV X0, X20
	0x03E32420 MOV X1, X22
	0x03E32424 MOV W2, W19
	0x03E32428 MOV V0.16B, V11.16B
	0x03E3242C MOV V1.16B, V10.16B
	0x03E32430 MOV V2.16B, V9.16B
	0x03E32434 BL 0x3E32C68
	0x03E32438 B 0x3E3247C
	0x03E3243C CBZ X22, 0x3E32754
	0x03E32440 MOV X0, X22
	0x03E32444 MOV X1, X31
	0x03E32448 BL 0x3C3E90C
	0x03E3244C CBZ W19, 0x3E3245C
	0x03E32450 CMP W19, 0x1
	0x03E32454 B.NE 0x3E32794
	0x03E32458 MOV V0.16B, V1.16B
	0x03E3245C FSUB S0, S10, S0
	0x03E32460 FMUL S0, S12, S0
	0x03E32464 FADD S0, S11, S0
	0x03E32468 MOV X0, X20
	0x03E3246C MOV X1, X22
	0x03E32470 MOV W2, W19

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5B7000
	008 Move W8, [X20+1827]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x33A000
	015 Move X0, [X0+136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1827], W8
	019 Move W8, [X19+120]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X19+88]
	023 Compare X8, 0
	024 JumpIfEqual {145}
	025 Move V0, [X8+24]
	026 Move V1, [X19+124]
	027 Move X8, -53772288
	028 Move X20, 0x5A7000
	029 Move W9, [X20+2750]
	030 Move V8, [X8+3952]
	031 NotImplemented "Instruction SCVTF not yet implemented."
	032 NotImplemented "Instruction SCVTF not yet implemented."
	033 NotImplemented "Instruction FDIV not yet implemented."
	034 Compare W9, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x2C2000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2750], W8
	041 Move X8, 0x2C2000
	042 Move X8, [X8+1448]
	043 Add S8, S9, S8
	044 Move X0, [X8]
	045 Move W20, [X19+124]
	046 Move X0, X19
	047 Call LayoutGroup.get_rectTransform, X0
	048 Compare X0, 0
	049 JumpIfEqual {145}
	050 Move X1, X31
	051 Call RectTransform.get_rect, X0
	052 Move X0, [X19+32]
	053 Compare X0, 0
	054 JumpIfEqual {145}
	055 Move X1, X31
	056 Move V8, V2
	057 Call RectOffset.get_horizontal, X0
	058 Move V0, [X19+112]
	059 Move X8, -53768192
	060 Move V1, [X19+104]
	061 Move X20, 0x5A7000
	062 Move V3, [X8+1040]
	063 NotImplemented "Instruction SCVTF not yet implemented."
	064 Move W8, [X20+2595]
	065 Subtract S2, S8, S2
	066 Add S2, S0, S2
	067 Add S8, S2, S3
	068 Add S9, S0, S1
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x2C2000
	072 Move X0, [X0+1448]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2595], W8
	076 Move X20, 0x2C2000
	077 Move X20, [X20+1448]
	078 NotImplemented "Instruction FDIV not yet implemented."
	079 Move X0, [X20]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W8, 0x7F800000
	085 Move X9, [X19+88]
	086 NotImplemented "Instruction FRINTM not yet implemented."
	087 Move S1, W8
	088 NotImplemented "Instruction FCVTMS not yet implemented."
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 Move W8, 0x80000000
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {145}
	094 Move V0, [X9+24]
	095 Move X21, 0x5A7000
	096 Move W9, [X21+2750]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSINC not yet implemented."
	099 NotImplemented "Instruction SCVTF not yet implemented."
	100 NotImplemented "Instruction SCVTF not yet implemented."
	101 Compare W9, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0x2C2000
	104 Move X0, [X0+1448]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X21+2750], W8
	108 Move X0, [X20]
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move W8, 0x7F800000
	115 NotImplemented "Instruction FRINTP not yet implemented."
	116 Move S1, W8
	117 NotImplemented "Instruction FCVTPS not yet implemented."
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 Move W8, 0x80000000
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 Move X0, [X19+32]
	122 Compare X0, 0
	123 JumpIfEqual {145}
	124 Move X1, X31
	125 Call RectOffset.get_vertical, X0
	126 Move V0, [X19+108]
	127 Move V1, [X19+116]
	128 NotImplemented "Instruction SCVTF not yet implemented."
	129 NotImplemented "Instruction SCVTF not yet implemented."
	130 Move W8, 0xBF800000
	131 Add S0, S0, S1
	132 Multiply S0, S0, S3
	133 Add S0, S0, S2
	134 Subtract S0, S0, S1
	135 Move [X19+64], S0
	136 Move [X19+72], S0
	137 Move [X19+80], W8
	138 Move X20, [X31+32]
	139 Move X19, [X31+40]
	140 Move X30, [X31+16]
	141 Move X21, [X31+24]
	142 Move D9, [X31+48]
	143 Move D8, [X31+56]
	144 Return 
	145 Call 0x1C17F20

Method: System.Void SetLayoutHorizontal()

Disassembly:
	0x03E32508 BL 0x3E33178
	0x03E3250C FCMP S0, 0x0

ISIL:
	001 Move W1, W31

Method: System.Void SetLayoutVertical()

Disassembly:
	0x03E32C9C MOV W20, W2
	0x03E32CA0 MOV X19, X1

ISIL:
	001 Move W1, 1
	002 Call GridLayoutGroup.SetCellsAlongAxis, X0, X1
	003 Return 

Method: System.Void SetCellsAlongAxis(System.Int32 axis)

Disassembly:
	0x03E32510 B.LE 0x3E32544
	0x03E32514 MOV X0, X20
	0x03E32518 MOV W1, W19
	0x03E3251C BL 0x3E33178
	0x03E32520 FDIV S13, S10, S0
	0x03E32524 B 0x3E32548
	0x03E32528 BL 0x3C0C9D4
	0x03E3252C MOV W1, W31
	0x03E32530 SCVTF S0, W0
	0x03E32534 FSUB S0, S9, S0
	0x03E32538 MOV X0, X20
	0x03E3253C BL 0x3E31CA4
	0x03E32540 MOV V9.16B, V0.16B
	0x03E32544 FMOV S13, W31
	0x03E32548 MOV X0, X20
	0x03E3254C MOV W1, W19
	0x03E32550 BL 0x3E331E8
	0x03E32554 MOV X0, X20
	0x03E32558 MOV W1, W19
	0x03E3255C MOV V10.16B, V0.16B
	0x03E32560 BL 0x3E33108
	0x03E32564 FCMP S10, S0
	0x03E32568 B.EQ 0x3E325B4
	0x03E3256C MOV X0, X20
	0x03E32570 MOV W1, W19
	0x03E32574 BL 0x3E331E8
	0x03E32578 MOV X0, X20
	0x03E3257C MOV W1, W19
	0x03E32580 MOV V10.16B, V0.16B
	0x03E32584 BL 0x3E33108
	0x03E32588 MOV X0, X20
	0x03E3258C MOV W1, W19
	0x03E32590 MOV V11.16B, V0.16B
	0x03E32594 BL 0x3E331E8
	0x03E32598 FSUB S1, S8, S10
	0x03E3259C FSUB S0, S11, S0
	0x03E325A0 FDIV S0, S1, S0
	0x03E325A4 FCMP S0, 0x0
	0x03E325A8 B.MI 0x3E325B4
	0x03E325AC FMOV S1, 1
	0x03E325B0 FMIN S14, S0, S1
	0x03E325B4 LDRB W8, [X20 + 0x6A]
	0x03E325B8 CMP W21, W28
	0x03E325BC CSET W9, GE
	0x03E325C0 CSET W10, LT
	0x03E325C4 CMP W8, 0x0
	0x03E325C8 CSEL W8, W10, W9, EQ
	0x03E325CC CMP W8, 0x1
	0x03E325D0 B.NE 0x3E32724
	0x03E325D4 FMOV S0, W31
	0x03E325D8 FMAX S11, S14, S0
	0x03E325DC LDR X0, [X20 + 0x58]
	0x03E325E0 CBZ X0, 0x3E32754
	0x03E325E4 ADRP X8, 0x339000
	0x03E325E8 LDR X8, [X8 + 0xB0]
	0x03E325EC CMP W27, 0x0
	0x03E325F0 CSET W23, NE
	0x03E325F4 CMP W25, 0x0
	0x03E325F8 LDR X2, [X8]
	0x03E325FC MOV W1, W21
	0x03E32600 CSET W24, NE
	0x03E32604 BL 0x301BCCC
	0x03E32608 ADD X5, X31, 0x18
	0x03E3260C ADD X6, X31, 0x14
	0x03E32610 ADD X7, X31, 0x10
	0x03E32614 MOV X1, X0
	0x03E32618 MOV W2, W19
	0x03E3261C MOV W3, W24
	0x03E32620 MOV W4, W23
	0x03E32624 MOV X22, X0
	0x03E32628 BL 0x3E32B08
	0x03E3262C CBZ W26, 0x3E3265C
	0x03E32630 CBZ X22, 0x3E32754
	0x03E32634 MOV X0, X22
	0x03E32638 MOV X1, X31
	0x03E3263C BL 0x3C3FBAC
	0x03E32640 CBZ W19, 0x3E32664
	0x03E32644 CMP W19, 0x2
	0x03E32648 B.EQ 0x3E3266C
	0x03E3264C CMP W19, 0x1
	0x03E32650 B.NE 0x3E32758
	0x03E32654 MOV V8.16B, V1.16B
	0x03E32658 B 0x3E32670
	0x03E3265C FMOV S8, 1
	0x03E32660 B 0x3E32670
	0x03E32664 MOV V8.16B, V0.16B
	0x03E32668 B 0x3E32670
	0x03E3266C MOV V8.16B, V2.16B
	0x03E32670 LDP S1, S0, [X31 + 0x14]
	0x03E32674 LDR V2, [X31 + 0x10]
	0x03E32678 FSUB S1, S1, S0
	0x03E3267C FMUL S1, S11, S1
	0x03E32680 FADD S0, S0, S1
	0x03E32684 FMUL S1, S13, S2
	0x03E32688 FADD S10, S1, S0
	0x03E3268C CBZ W25, 0x3E326B0
	0x03E32690 MOV X0, X20
	0x03E32694 MOV X1, X22
	0x03E32698 MOV W2, W19
	0x03E3269C MOV V0.16B, V9.16B
	0x03E326A0 MOV V1.16B, V10.16B
	0x03E326A4 MOV V2.16B, V8.16B
	0x03E326A8 BL 0x3E32C68
	0x03E326AC B 0x3E326F0
	0x03E326B0 CBZ X22, 0x3E32754
	0x03E326B4 MOV X0, X22
	0x03E326B8 MOV X1, X31
	0x03E326BC BL 0x3C3E90C
	0x03E326C0 CBZ W19, 0x3E326D0
	0x03E326C4 CMP W19, 0x1
	0x03E326C8 B.NE 0x3E32794
	0x03E326CC MOV V0.16B, V1.16B
	0x03E326D0 FSUB S0, S10, S0
	0x03E326D4 FMUL S0, S12, S0
	0x03E326D8 FADD S0, S9, S0
	0x03E326DC MOV X0, X20
	0x03E326E0 MOV X1, X22
	0x03E326E4 MOV W2, W19
	0x03E326E8 MOV V1.16B, V8.16B
	0x03E326EC BL 0x3E32EDC
	0x03E326F0 LDRB W8, [X20 + 0x6A]
	0x03E326F4 LDR V0, [X20 + 0x60]
	0x03E326F8 ADD W21, W21, W29
	0x03E326FC CMP W21, W28
	0x03E32700 FMUL S1, S8, S10
	0x03E32704 CSET W9, GE
	0x03E32708 CSET W10, LT
	0x03E3270C CMP W8, 0x0
	0x03E32710 FADD S0, S1, S0
	0x03E32714 CSEL W8, W10, W9, EQ
	0x03E32718 CMP W8, 0x1
	0x03E3271C FADD S9, S9, S0
	0x03E32720 B.EQ 0x3E325DC
	0x03E32724 LDP X20, X19, [X31 + 0xB0]
	0x03E32728 LDP X22, X21, [X31 + 0xA0]
	0x03E3272C LDP X24, X23, [X31 + 0x90]
	0x03E32730 LDP X26, X25, [X31 + 0x80]
	0x03E32734 LDP X28, X27, [X31 + 0x70]
	0x03E32738 LDP X29, X30, [X31 + 0x60]
	0x03E3273C LDP D9, D8, [X31 + 0x50]
	0x03E32740 LDP D11, D10, [X31 + 0x40]
	0x03E32744 LDP D13, D12, [X31 + 0x30]
	0x03E32748 LDR V14, [X31 + 0x20]
	0x03E3274C ADD X31, X31, 0xC0
	0x03E32750 RET
	0x03E32754 BL 0x1C16F20
	0x03E32758 ADRP X0, 0x2CB000
	0x03E3275C LDR X0, [X0 + 0xF78]
	0x03E32760 BL 0x1C16D08
	0x03E32764 BL 0x1C16F10
	0x03E32768 MOV X19, X0
	0x03E3276C ADRP X0, 0x31C000
	0x03E32770 LDR X0, [X0 + 0x6F8]
	0x03E32774 BL 0x1C16D08
	0x03E32778 MOV X1, X0
	0x03E3277C MOV X0, X19
	0x03E32780 MOV X2, X31
	0x03E32784 BL 0x3379B6C
	0x03E32788 ADRP X0, 0x31C000
	0x03E3278C LDR X0, [X0 + 0x700]
	0x03E32790 B 0x3E327CC
	0x03E32794 ADRP X0, 0x2CB000
	0x03E32798 LDR X0, [X0 + 0xF78]
	0x03E3279C BL 0x1C16D08
	0x03E327A0 BL 0x1C16F10
	0x03E327A4 MOV X19, X0
	0x03E327A8 ADRP X0, 0x313000
	0x03E327AC LDR X0, [X0 + 0xFF8]
	0x03E327B0 BL 0x1C16D08
	0x03E327B4 MOV X1, X0
	0x03E327B8 MOV X0, X19
	0x03E327BC MOV X2, X31
	0x03E327C0 BL 0x3379B6C
	0x03E327C4 ADRP X0, 0x314000
	0x03E327C8 LDR X0, [X0]
	0x03E327CC BL 0x1C16D08
	0x03E327D0 MOV X1, X0
	0x03E327D4 MOV X0, X19
	0x03E327D8 BL 0x1C16DEC
	0x03E327DC MOVZ W1, 0x1
	0x03E327E0 MOV W2, W31
	0x03E327E4 B 0x3E3218C
	0x03E327E8 LDR V0, [X0 + 0x60]
	0x03E327EC RET
	0x03E327F0 STR D8, [X31 - 0x30]!
	0x03E327F4 STP X30, X21, [X31 + 0x10]
	0x03E327F8 STP X20, X19, [X31 + 0x20]
	0x03E327FC ADRP X21, 0x5B6000
	0x03E32800 ADRP X20, 0x339000
	0x03E32804 LDRB W8, [X21 + 0x725]
	0x03E32808 LDR X20, [X20 + 0xB8]
	0x03E3280C MOV V8.16B, V0.16B
	0x03E32810 MOV X19, X0
	0x03E32814 TBNZ X8, 0x0, 0x3E3282C
	0x03E32818 ADRP X0, 0x339000
	0x03E3281C LDR X0, [X0 + 0xB8]
	0x03E32820 BL 0x1C16CF4
	0x03E32824 MOVZ W8, 0x1
	0x03E32828 STRB W8, [X21 + 0x725]
	0x03E3282C LDR X2, [X20]
	0x03E32830 ADD X1, X19, 0x60
	0x03E32834 MOV X0, X19
	0x03E32838 LDP X20, X19, [X31 + 0x20]
	0x03E3283C LDP X30, X21, [X31 + 0x10]
	0x03E32840 MOV V0.16B, V8.16B
	0x03E32844 LDR V8, [X31], #0x30
	0x03E32848 B 0x2212678
	0x03E3284C LDRB W0, [X0 + 0x64]
	0x03E32850 RET
	0x03E32854 STR X30, [X31 - 0x30]!
	0x03E32858 STP X22, X21, [X31 + 0x10]
	0x03E3285C STP X20, X19, [X31 + 0x20]
	0x03E32860 ADRP X22, 0x5B6000
	0x03E32864 ADRP X21, 0x339000
	0x03E32868 LDRB W8, [X22 + 0x726]
	0x03E3286C LDR X21, [X21 + 0xC0]
	0x03E32870 MOV W20, W1
	0x03E32874 MOV X19, X0
	0x03E32878 TBNZ X8, 0x0, 0x3E32890
	0x03E3287C ADRP X0, 0x339000
	0x03E32880 LDR X0, [X0 + 0xC0]
	0x03E32884 BL 0x1C16CF4
	0x03E32888 MOVZ W8, 0x1
	0x03E3288C STRB W8, [X22 + 0x726]
	0x03E32890 LDR X3, [X21]
	0x03E32894 ADD X1, X19, 0x64
	0x03E32898 AND W2, W20, 0x1
	0x03E3289C MOV X0, X19
	0x03E328A0 LDP X20, X19, [X31 + 0x20]
	0x03E328A4 LDP X22, X21, [X31 + 0x10]
	0x03E328A8 LDR X30, [X31], #0x30
	0x03E328AC B 0x2212440
	0x03E328B0 LDRB W0, [X0 + 0x65]
	0x03E328B4 RET
	0x03E328B8 STR X30, [X31 - 0x30]!
	0x03E328BC STP X22, X21, [X31 + 0x10]
	0x03E328C0 STP X20, X19, [X31 + 0x20]
	0x03E328C4 ADRP X22, 0x5B6000
	0x03E328C8 ADRP X21, 0x339000
	0x03E328CC LDRB W8, [X22 + 0x727]
	0x03E328D0 LDR X21, [X21 + 0xC0]
	0x03E328D4 MOV W20, W1
	0x03E328D8 MOV X19, X0
	0x03E328DC TBNZ X8, 0x0, 0x3E328F4
	0x03E328E0 ADRP X0, 0x339000
	0x03E328E4 LDR X0, [X0 + 0xC0]
	0x03E328E8 BL 0x1C16CF4
	0x03E328EC MOVZ W8, 0x1
	0x03E328F0 STRB W8, [X22 + 0x727]
	0x03E328F4 LDR X3, [X21]
	0x03E328F8 ADD X1, X19, 0x65
	0x03E328FC AND W2, W20, 0x1
	0x03E32900 MOV X0, X19
	0x03E32904 LDP X20, X19, [X31 + 0x20]
	0x03E32908 LDP X22, X21, [X31 + 0x10]
	0x03E3290C LDR X30, [X31], #0x30
	0x03E32910 B 0x2212440
	0x03E32914 LDRB W0, [X0 + 0x66]
	0x03E32918 RET
	0x03E3291C STR X30, [X31 - 0x30]!
	0x03E32920 STP X22, X21, [X31 + 0x10]
	0x03E32924 STP X20, X19, [X31 + 0x20]
	0x03E32928 ADRP X22, 0x5B6000
	0x03E3292C ADRP X21, 0x339000
	0x03E32930 LDRB W8, [X22 + 0x728]
	0x03E32934 LDR X21, [X21 + 0xC0]
	0x03E32938 MOV W20, W1
	0x03E3293C MOV X19, X0
	0x03E32940 TBNZ X8, 0x0, 0x3E32958
	0x03E32944 ADRP X0, 0x339000
	0x03E32948 LDR X0, [X0 + 0xC0]
	0x03E3294C BL 0x1C16CF4
	0x03E32950 MOVZ W8, 0x1
	0x03E32954 STRB W8, [X22 + 0x728]
	0x03E32958 LDR X3, [X21]
	0x03E3295C ADD X1, X19, 0x66
	0x03E32960 AND W2, W20, 0x1
	0x03E32964 MOV X0, X19
	0x03E32968 LDP X20, X19, [X31 + 0x20]
	0x03E3296C LDP X22, X21, [X31 + 0x10]
	0x03E32970 LDR X30, [X31], #0x30
	0x03E32974 B 0x2212440
	0x03E32978 LDRB W0, [X0 + 0x67]
	0x03E3297C RET
	0x03E32980 STR X30, [X31 - 0x30]!
	0x03E32984 STP X22, X21, [X31 + 0x10]
	0x03E32988 STP X20, X19, [X31 + 0x20]
	0x03E3298C ADRP X22, 0x5B6000
	0x03E32990 ADRP X21, 0x339000
	0x03E32994 LDRB W8, [X22 + 0x729]
	0x03E32998 LDR X21, [X21 + 0xC0]
	0x03E3299C MOV W20, W1
	0x03E329A0 MOV X19, X0
	0x03E329A4 TBNZ X8, 0x0, 0x3E329BC
	0x03E329A8 ADRP X0, 0x339000
	0x03E329AC LDR X0, [X0 + 0xC0]
	0x03E329B0 BL 0x1C16CF4
	0x03E329B4 MOVZ W8, 0x1
	0x03E329B8 STRB W8, [X22 + 0x729]
	0x03E329BC LDR X3, [X21]
	0x03E329C0 ADD X1, X19, 0x67
	0x03E329C4 AND W2, W20, 0x1
	0x03E329C8 MOV X0, X19
	0x03E329CC LDP X20, X19, [X31 + 0x20]
	0x03E329D0 LDP X22, X21, [X31 + 0x10]
	0x03E329D4 LDR X30, [X31], #0x30
	0x03E329D8 B 0x2212440
	0x03E329DC LDRB W0, [X0 + 0x68]
	0x03E329E0 RET
	0x03E329E4 STR X30, [X31 - 0x30]!
	0x03E329E8 STP X22, X21, [X31 + 0x10]
	0x03E329EC STP X20, X19, [X31 + 0x20]
	0x03E329F0 ADRP X22, 0x5B6000
	0x03E329F4 ADRP X21, 0x339000
	0x03E329F8 LDRB W8, [X22 + 0x72A]
	0x03E329FC LDR X21, [X21 + 0xC0]
	0x03E32A00 MOV W20, W1
	0x03E32A04 MOV X19, X0
	0x03E32A08 TBNZ X8, 0x0, 0x3E32A20
	0x03E32A0C ADRP X0, 0x339000
	0x03E32A10 LDR X0, [X0 + 0xC0]
	0x03E32A14 BL 0x1C16CF4
	0x03E32A18 MOVZ W8, 0x1
	0x03E32A1C STRB W8, [X22 + 0x72A]
	0x03E32A20 LDR X3, [X21]
	0x03E32A24 ADD X1, X19, 0x68
	0x03E32A28 AND W2, W20, 0x1
	0x03E32A2C MOV X0, X19
	0x03E32A30 LDP X20, X19, [X31 + 0x20]
	0x03E32A34 LDP X22, X21, [X31 + 0x10]
	0x03E32A38 LDR X30, [X31], #0x30
	0x03E32A3C B 0x2212440
	0x03E32A40 LDRB W0, [X0 + 0x69]
	0x03E32A44 RET
	0x03E32A48 STR X30, [X31 - 0x30]!
	0x03E32A4C STP X22, X21, [X31 + 0x10]
	0x03E32A50 STP X20, X19, [X31 + 0x20]
	0x03E32A54 ADRP X22, 0x5B6000
	0x03E32A58 ADRP X21, 0x339000
	0x03E32A5C LDRB W8, [X22 + 0x72B]
	0x03E32A60 LDR X21, [X21 + 0xC0]
	0x03E32A64 MOV W20, W1
	0x03E32A68 MOV X19, X0
	0x03E32A6C TBNZ X8, 0x0, 0x3E32A84
	0x03E32A70 ADRP X0, 0x339000
	0x03E32A74 LDR X0, [X0 + 0xC0]
	0x03E32A78 BL 0x1C16CF4
	0x03E32A7C MOVZ W8, 0x1
	0x03E32A80 STRB W8, [X22 + 0x72B]
	0x03E32A84 LDR X3, [X21]
	0x03E32A88 ADD X1, X19, 0x69
	0x03E32A8C AND W2, W20, 0x1
	0x03E32A90 MOV X0, X19
	0x03E32A94 LDP X20, X19, [X31 + 0x20]
	0x03E32A98 LDP X22, X21, [X31 + 0x10]
	0x03E32A9C LDR X30, [X31], #0x30
	0x03E32AA0 B 0x2212440
	0x03E32AA4 LDRB W0, [X0 + 0x6A]
	0x03E32AA8 RET
	0x03E32AAC STR X30, [X31 - 0x30]!
	0x03E32AB0 STP X22, X21, [X31 + 0x10]
	0x03E32AB4 STP X20, X19, [X31 + 0x20]
	0x03E32AB8 ADRP X22, 0x5B6000
	0x03E32ABC ADRP X21, 0x339000
	0x03E32AC0 LDRB W8, [X22 + 0x72C]
	0x03E32AC4 LDR X21, [X21 + 0xC0]
	0x03E32AC8 MOV W20, W1
	0x03E32ACC MOV X19, X0
	0x03E32AD0 TBNZ X8, 0x0, 0x3E32AE8
	0x03E32AD4 ADRP X0, 0x339000
	0x03E32AD8 LDR X0, [X0 + 0xC0]
	0x03E32ADC BL 0x1C16CF4
	0x03E32AE0 MOVZ W8, 0x1
	0x03E32AE4 STRB W8, [X22 + 0x72C]
	0x03E32AE8 LDR X3, [X21]
	0x03E32AEC ADD X1, X19, 0x6A
	0x03E32AF0 AND W2, W20, 0x1
	0x03E32AF4 MOV X0, X19
	0x03E32AF8 LDP X20, X19, [X31 + 0x20]
	0x03E32AFC LDP X22, X21, [X31 + 0x10]
	0x03E32B00 LDR X30, [X31], #0x30
	0x03E32B04 B 0x2212440
	0x03E32B08 STR X30, [X31 - 0x40]!
	0x03E32B0C STP X24, X23, [X31 + 0x10]
	0x03E32B10 STP X22, X21, [X31 + 0x20]
	0x03E32B14 STP X20, X19, [X31 + 0x30]
	0x03E32B18 MOV X19, X7
	0x03E32B1C MOV X21, X6
	0x03E32B20 MOV X22, X5
	0x03E32B24 MOV W20, W4
	0x03E32B28 MOV W24, W2
	0x03E32B2C MOV X23, X1
	0x03E32B30 TBZ X3, 0x0, 0x3E32B5C
	0x03E32B34 MOV X0, X23
	0x03E32B38 CBZ W24, 0x3E32B8C
	0x03E32B3C BL 0x3E35434
	0x03E32B40 MOV X0, X23
	0x03E32B44 STR S0, [X22]
	0x03E32B48 BL 0x3E35604
	0x03E32B4C MOV X0, X23
	0x03E32B50 STR S0, [X21]
	0x03E32B54 BL 0x3E35934
	0x03E32B58 B 0x3E32BA8
	0x03E32B5C CBZ X23, 0x3E32BD0
	0x03E32B60 MOV X0, X23
	0x03E32B64 MOV X1, X31
	0x03E32B68 BL 0x3C3E90C
	0x03E32B6C CBZ W24, 0x3E32B7C
	0x03E32B70 CMP W24, 0x1
	0x03E32B74 B.NE 0x3E32BD4
	0x03E32B78 MOV V0.16B, V1.16B
	0x03E32B7C STR S0, [X22]
	0x03E32B80 STR S0, [X21]
	0x03E32B84 FMOV S0, W31
	0x03E32B88 B 0x3E32BA8
	0x03E32B8C BL 0x3E3551C
	0x03E32B90 MOV X0, X23
	0x03E32B94 STR S0, [X22]
	0x03E32B98 BL 0x3E3579C
	0x03E32B9C MOV X0, X23
	0x03E32BA0 STR S0, [X21]
	0x03E32BA4 BL 0x3E35A1C
	0x03E32BA8 FMOV S1, 1
	0x03E32BAC FMAXNM S1, S0, S1
	0x03E32BB0 ANDS W31, W20, 0x1
	0x03E32BB4 FCSEL S0, S1, S0, NE
	0x03E32BB8 STR S0, [X19]
	0x03E32BBC LDP X20, X19, [X31 + 0x30]
	0x03E32BC0 LDP X22, X21, [X31 + 0x20]
	0x03E32BC4 LDP X24, X23, [X31 + 0x10]
	0x03E32BC8 LDR X30, [X31], #0x40
	0x03E32BCC RET
	0x03E32BD0 BL 0x1C16F20
	0x03E32BD4 ADRP X0, 0x2CB000
	0x03E32BD8 LDR X0, [X0 + 0xF78]
	0x03E32BDC BL 0x1C16D08
	0x03E32BE0 BL 0x1C16F10
	0x03E32BE4 MOV X19, X0
	0x03E32BE8 ADRP X0, 0x313000
	0x03E32BEC LDR X0, [X0 + 0xFF8]
	0x03E32BF0 BL 0x1C16D08
	0x03E32BF4 MOV X1, X0
	0x03E32BF8 MOV X0, X19
	0x03E32BFC MOV X2, X31
	0x03E32C00 BL 0x3379B6C
	0x03E32C04 ADRP X0, 0x314000
	0x03E32C08 LDR X0, [X0]
	0x03E32C0C BL 0x1C16D08
	0x03E32C10 MOV X1, X0
	0x03E32C14 MOV X0, X19
	0x03E32C18 BL 0x1C16DEC
	0x03E32C1C LDR W8, [X0 + 0x28]
	0x03E32C20 MOVZ W9, 0x5556
	0x03E32C24 MOVK W9, 0x55550000
	0x03E32C28 CBZ W1, 0x3E32C40
	0x03E32C2C SMADDL X8, X8, X9, X31
	0x03E32C30 UBFM X9, X8, 0x3F, 0x3F
	0x03E32C34 UBFM X8, X8, 0x20, 0x3F
	0x03E32C38 ADD W8, W8, W9
	0x03E32C3C B 0x3E32C58
	0x03E32C40 SMADDL X9, X8, X9, X31
	0x03E32C44 UBFM X10, X9, 0x3F, 0x3F
	0x03E32C48 UBFM X9, X9, 0x20, 0x3F
	0x03E32C4C ADD W9, W9, W10
	0x03E32C50 ADD W9, W9, W9, 0x1, LSL
	0x03E32C54 SUB W8, W8, W9
	0x03E32C58 SCVTF S0, W8
	0x03E32C5C FMOV S1, 0.5
	0x03E32C60 FMUL S0, S0, S1
	0x03E32C64 RET
	0x03E32C68 STR D12, [X31 - 0x60]!
	0x03E32C6C STP D11, D10, [X31 + 0x10]
	0x03E32C70 STP D9, D8, [X31 + 0x20]
	0x03E32C74 STP X30, X23, [X31 + 0x30]
	0x03E32C78 STP X22, X21, [X31 + 0x40]
	0x03E32C7C STP X20, X19, [X31 + 0x50]
	0x03E32C80 ADRP X22, 0x5B6000
	0x03E32C84 ADRP X23, 0x2C1000
	0x03E32C88 LDRB W8, [X22 + 0x741]
	0x03E32C8C LDR X23, [X23 + 0x598]
	0x03E32C90 MOV V8.16B, V2.16B
	0x03E32C94 MOV V9.16B, V1.16B
	0x03E32C98 MOV V10.16B, V0.16B

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X21, 0x5B7000
	019 Move W8, [X21+1828]
	020 Move W20, W1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x33A000
	027 Move X0, [X0+136]
	028 Call 0x1C17CF4
	029 Move X0, 0x33A000
	030 Move X0, [X0+176]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+1828], W8
	034 Move X0, [X19+88]
	035 Compare X0, 0
	036 JumpIfEqual {506}
	037 Move W28, [X0+24]
	038 Move [X31+8], W28
	039 Compare W20, 0
	040 JumpIfEqual {63}
	041 Move X0, X19
	042 Call LayoutGroup.get_rectTransform, X0
	043 Compare X0, 0
	044 JumpIfEqual {506}
	045 Move X1, X31
	046 Call RectTransform.get_rect, X0
	047 Move X0, X19
	048 Move V9, V2
	049 Call LayoutGroup.get_rectTransform, X0
	050 Compare X0, 0
	051 JumpIfEqual {506}
	052 Move X1, X31
	053 Call RectTransform.get_rect, X0
	054 Move W8, [X19+120]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W29, [X19+124]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction SDIV not yet implemented."
	060 NotImplemented "Instruction MSUB not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CINC not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X24, 0x33A000
	065 Move X22, 0x2CA000
	066 Move X24, [X24+176]
	067 Move X22, [X22+3848]
	068 Move W27, [X31+8]
	069 Move W20, W31
	070 Add X21, X19, 56
	071 Move X25, 0x5AA000
	072 Move W26, 1
	073 Move X2, [X24]
	074 Move W1, W20
	075 Call List`1<Object>.get_Item, X0, X1
	076 Move X23, X0
	077 Move W3, 0x3F06
	078 Move X0, X21
	079 Move X1, X19
	080 Move X2, X23
	081 Move X4, X31
	082 Call DrivenRectTransformTracker.Add, X0, X1, X2, X3
	083 Move W8, [X25+2038]
	084 Compare W8, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X22
	087 Call 0x1C17CF4
	088 Move [X25+2038], W26
	089 Compare X23, 0
	090 JumpIfEqual {506}
	091 Move X8, [X22]
	092 Move X0, X23
	093 Move X1, X31
	094 Move X8, [X8+184]
	095 Move S0, [X8+16]
	096 Move S1, [X8+20]
	097 Call RectTransform.set_anchorMin, X0, X1
	098 Move W8, [X25+2038]
	099 Compare W8, 0
	100 JumpIfNotEqual {104}
	101 Move X0, X22
	102 Call 0x1C17CF4
	103 Move [X25+2038], W26
	104 Move X8, [X22]
	105 Move X0, X23
	106 Move X1, X31
	107 Move X8, [X8+184]
	108 Move S0, [X8+16]
	109 Move S1, [X8+20]
	110 Call RectTransform.set_anchorMax, X0, X1
	111 Move S0, [X19+104]
	112 Move S1, [X19+108]
	113 Move X0, X23
	114 Move X1, X31
	115 Call RectTransform.set_sizeDelta, X0, X1
	116 Add W20, W20, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X19+88]
	119 Compare X0, 0
	120 JumpIfNotEqual {73}
	121 Move W20, [X19+124]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction SDIV not yet implemented."
	124 NotImplemented "Instruction MSUB not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CINC not yet implemented."
	127 Move V0, [X19+104]
	128 Move V1, [X19+112]
	129 Move V8, V3
	130 Add S0, S0, S1
	131 NotImplemented "Instruction FCMP not yet implemented."
	132 Move X0, [X19+32]
	133 Compare X0, 0
	134 JumpIfEqual {506}
	135 Move X1, X31
	136 Call RectOffset.get_horizontal, X0
	137 Move V0, [X19+112]
	138 Move X8, -53768192
	139 Move V1, [X19+104]
	140 Move X20, 0x5A7000
	141 Move V3, [X8+1040]
	142 NotImplemented "Instruction SCVTF not yet implemented."
	143 Move W8, [X20+2595]
	144 Subtract S2, S9, S2
	145 Add S2, S0, S2
	146 Add S9, S2, S3
	147 Add S10, S0, S1
	148 Compare W8, 0
	149 JumpIfNotEqual {155}
	150 Move X0, 0x2C2000
	151 Move X0, [X0+1448]
	152 Call 0x1C17CF4
	153 Move W8, 1
	154 Move [X20+2595], W8
	155 Move X8, 0x2C2000
	156 Move X8, [X8+1448]
	157 NotImplemented "Instruction FDIV not yet implemented."
	158 Move X0, [X8]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move W8, 0x7F800000
	164 NotImplemented "Instruction FRINTM not yet implemented."
	165 Move S1, W8
	166 NotImplemented "Instruction FCVTMS not yet implemented."
	167 NotImplemented "Instruction FCMP not yet implemented."
	168 Move W8, 0x80000000
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CSINC not yet implemented."
	172 Move W20, 1
	173 Move W29, 1
	174 Move TEMP, 0x80000000
	175 Not TEMP
	176 Move W29, TEMP
	177 Move V0, [X19+108]
	178 Move V1, [X19+116]
	179 Add S0, S0, S1
	180 NotImplemented "Instruction FCMP not yet implemented."
	181 Move X0, [X19+32]
	182 Compare X0, 0
	183 JumpIfEqual {506}
	184 Move X1, X31
	185 Call RectOffset.get_vertical, X0
	186 Move V0, [X19+116]
	187 Move X8, -53768192
	188 Move V1, [X19+108]
	189 Move X20, 0x5A7000
	190 Move V3, [X8+1040]
	191 NotImplemented "Instruction SCVTF not yet implemented."
	192 Move W8, [X20+2595]
	193 Subtract S2, S8, S2
	194 Add S2, S0, S2
	195 Add S8, S2, S3
	196 Add S9, S0, S1
	197 Compare W8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, 0x2C2000
	200 Move X0, [X0+1448]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X20+2595], W8
	204 Move X8, 0x2C2000
	205 Move X8, [X8+1448]
	206 NotImplemented "Instruction FDIV not yet implemented."
	207 Move X0, [X8]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move W8, 0x7F800000
	213 NotImplemented "Instruction FRINTM not yet implemented."
	214 Move S1, W8
	215 NotImplemented "Instruction FCVTMS not yet implemented."
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Move W8, 0x80000000
	218 NotImplemented "Instruction CSEL not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CSINC not yet implemented."
	221 Move TEMP, 0x80000000
	222 Not TEMP
	223 Move W20, TEMP
	224 Move W22, [X19+96]
	225 Move W8, [X19+100]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CINC not yet implemented."
	228 Compare W8, 0
	229 JumpIfEqual {238}
	230 Move W8, [X19+120]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction CSEL not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 NotImplemented "Instruction CSINC not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 NotImplemented "Instruction CSEL not yet implemented."
	238 Move W8, [X19+120]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 NotImplemented "Instruction CSEL not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 NotImplemented "Instruction CSINC not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 NotImplemented "Instruction CSEL not yet implemented."
	246 Move X21, 0x5A7000
	247 Move W8, [X21+2750]
	248 NotImplemented "Instruction SCVTF not yet implemented."
	249 NotImplemented "Instruction SCVTF not yet implemented."
	250 Compare W8, 0
	251 JumpIfNotEqual {257}
	252 Move X0, 0x2C2000
	253 Move X0, [X0+1448]
	254 Call 0x1C17CF4
	255 Move W8, 1
	256 Move [X21+2750], W8
	257 Move X8, 0x2C2000
	258 Move X8, [X8+1448]
	259 NotImplemented "Instruction FDIV not yet implemented."
	260 Move X0, [X8]
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Move W9, 0x7F800000
	266 NotImplemented "Instruction FRINTP not yet implemented."
	267 Move S1, W9
	268 NotImplemented "Instruction FCVTPS not yet implemented."
	269 Move W10, 0x80000000
	270 NotImplemented "Instruction FCMP not yet implemented."
	271 NotImplemented "Instruction CSEL not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 NotImplemented "Instruction CSEL not yet implemented."
	275 Move X21, 0x5A7000
	276 Move W8, [X21+2750]
	277 NotImplemented "Instruction SCVTF not yet implemented."
	278 NotImplemented "Instruction SCVTF not yet implemented."
	279 Compare W8, 0
	280 JumpIfNotEqual {286}
	281 Move X0, 0x2C2000
	282 Move X0, [X0+1448]
	283 Call 0x1C17CF4
	284 Move W8, 1
	285 Move [X21+2750], W8
	286 Move X8, 0x2C2000
	287 Move X8, [X8+1448]
	288 NotImplemented "Instruction FDIV not yet implemented."
	289 Move X0, [X8]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move W9, 0x7F800000
	295 NotImplemented "Instruction FRINTP not yet implemented."
	296 Move S1, W9
	297 NotImplemented "Instruction FCVTPS not yet implemented."
	298 Move W10, 0x80000000
	299 NotImplemented "Instruction FCMP not yet implemented."
	300 NotImplemented "Instruction CSEL not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 NotImplemented "Instruction CSEL not yet implemented."
	304 Move W25, 1
	305 Move W29, W20
	306 Move S0, [X19+104]
	307 Move S1, [X19+108]
	308 Move S2, [X19+112]
	309 Move S3, [X19+116]
	310 NotImplemented "Instruction SCVTF not yet implemented."
	311 Subtract W8, W25, 1
	312 Multiply S0, S0, S4
	313 NotImplemented "Instruction SCVTF not yet implemented."
	314 Multiply S2, S2, S4
	315 NotImplemented "Instruction SCVTF not yet implemented."
	316 Subtract W26, W24, 1
	317 Multiply S1, S1, S4
	318 NotImplemented "Instruction SCVTF not yet implemented."
	319 Multiply S3, S3, S4
	320 Add S0, S0, S2
	321 Move X0, X19
	322 Move W1, W31
	323 Move [X31+12], W8
	324 Add S9, S1, S3
	325 Call LayoutGroup.GetStartOffset, X0, X1, V0
	326 Move V8, V0
	327 Move W1, 1
	328 Move X0, X19
	329 Move V0, V9
	330 Call LayoutGroup.GetStartOffset, X0, X1, V0
	331 Move W8, [X19+124]
	332 Move V9, V0
	333 Move [X31+4], W31
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move X27, 0x5A7000
	336 Move W8, [X27+2750]
	337 NotImplemented "Instruction SCVTF not yet implemented."
	338 NotImplemented "Instruction SCVTF not yet implemented."
	339 Compare W8, 0
	340 JumpIfNotEqual {346}
	341 Move X0, 0x2C2000
	342 Move X0, [X0+1448]
	343 Call 0x1C17CF4
	344 Move W8, 1
	345 Move [X27+2750], W8
	346 Move X20, 0x2C2000
	347 Move X20, [X20+1448]
	348 NotImplemented "Instruction FDIV not yet implemented."
	349 Move X0, [X20]
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move W9, 0x7F800000
	355 Move W10, [X19+124]
	356 NotImplemented "Instruction FRINTP not yet implemented."
	357 Move S1, W9
	358 NotImplemented "Instruction FCVTPS not yet implemented."
	359 NotImplemented "Instruction FCMP not yet implemented."
	360 Move W9, 0x80000000
	361 NotImplemented "Instruction CSEL not yet implemented."
	362 Subtract W24, W10, W8
	363 Move W8, [X27+2750]
	364 Compare W8, 0
	365 JumpIfNotEqual {371}
	366 Move X0, 0x2C2000
	367 Move X0, [X0+1448]
	368 Call 0x1C17CF4
	369 Move W8, 1
	370 Move [X27+2750], W8
	371 Move X0, [X20]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {376}
	375 Call 0x1C17DFC
	376 Move X21, 0x5A7000
	377 Move W8, [X21+2595]
	378 Move S0, -1
	379 NotImplemented "Instruction SCVTF not yet implemented."
	380 Add S10, S10, S0
	381 Compare W8, 0
	382 JumpIfNotEqual {388}
	383 Move X0, 0x2C2000
	384 Move X0, [X0+1448]
	385 Call 0x1C17CF4
	386 Move W8, 1
	387 Move [X21+2595], W8
	388 Move X0, [X20]
	389 NotImplemented "Instruction FDIV not yet implemented."
	390 Move W8, [X0+224]
	391 Compare W8, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Move W9, 0x7F800000
	395 NotImplemented "Instruction FRINTM not yet implemented."
	396 Move S1, W9
	397 NotImplemented "Instruction FCVTMS not yet implemented."
	398 Move W10, 0x80000000
	399 NotImplemented "Instruction SDIV not yet implemented."
	400 NotImplemented "Instruction FCMP not yet implemented."
	401 NotImplemented "Instruction MSUB not yet implemented."
	402 NotImplemented "Instruction CSEL not yet implemented."
	403 Add W8, W8, W24
	404 NotImplemented "Instruction CMP not yet implemented."
	405 NotImplemented "Instruction CINC not yet implemented."
	406 Move [X31+4], W8
	407 Move [X31+4], W31
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move W25, W29
	410 Move W24, [X31+8]
	411 Move X29, 0x33A000
	412 Move X29, [X29+176]
	413 And W8, W23, 0xFFFFFFFE
	414 Move W20, W31
	415 And W23, W22, 0xFFFFFFFE
	416 Subtract W28, W31, W24
	417 Subtract W22, W22, W8
	418 Move W9, [X19+100]
	419 Move W8, [X19+120]
	420 Compare W9, 0
	421 JumpIfEqual {428}
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move W8, [X31+4]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move W9, W25
	426 NotImplemented "Instruction SDIV not yet implemented."
	427 NotImplemented "Instruction MSUB not yet implemented."
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move W8, [X31+4]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Move W8, W25
	432 NotImplemented "Instruction SDIV not yet implemented."
	433 NotImplemented "Instruction MSUB not yet implemented."
	434 Move W8, [X19+124]
	435 Add W10, W28, W20
	436 Move W9, W31
	437 Add W8, W10, W8
	438 Move W10, [X31+8]
	439 Move W9, [X19+124]
	440 Move W8, W31
	441 Subtract W10, W10, W20
	442 Subtract W9, W9, W10
	443 Move X0, [X19+88]
	444 Subtract W10, W26, W9
	445 NotImplemented "Instruction CMP not yet implemented."
	446 NotImplemented "Instruction CSEL not yet implemented."
	447 Compare X0, 0
	448 JumpIfEqual {506}
	449 Move W9, [X31+12]
	450 Move X2, [X29]
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move W1, W20
	453 Subtract W9, W9, W8
	454 NotImplemented "Instruction CSEL not yet implemented."
	455 Call List`1<Object>.get_Item, X0, X1
	456 Move V1, [X19+104]
	457 Move V0, [X19+112]
	458 NotImplemented "Instruction SCVTF not yet implemented."
	459 Move X1, X0
	460 Move X0, X19
	461 Add S0, S1, S0
	462 Multiply S0, S0, S2
	463 Add S0, S8, S0
	464 Move W2, W31
	465 Call LayoutGroup.SetChildAlongAxis, X0, X1, X2, V0, V1
	466 Move X0, [X19+88]
	467 Compare X0, 0
	468 JumpIfEqual {506}
	469 Move X2, [X29]
	470 Move W1, W20
	471 Call List`1<Object>.get_Item, X0, X1
	472 Move V1, [X19+108]
	473 Move V0, [X19+116]
	474 NotImplemented "Instruction SCVTF not yet implemented."
	475 Move X1, X0
	476 Move W2, 1
	477 Add S0, S1, S0
	478 Multiply S0, S0, S2
	479 Add S0, S9, S0
	480 Move X0, X19
	481 Call LayoutGroup.SetChildAlongAxis, X0, X1, X2, V0, V1
	482 Add W20, W20, 1
	483 Add W8, W28, W20
	484 Subtract W24, W24, 1
	485 Compare W8, 0
	486 JumpIfNotEqual {418}
	487 Move X20, [X31+128]
	488 Move X19, [X31+136]
	489 Move X22, [X31+112]
	490 Move X21, [X31+120]
	491 Move X24, [X31+96]
	492 Move X23, [X31+104]
	493 Move X26, [X31+80]
	494 Move X25, [X31+88]
	495 Move X28, [X31+64]
	496 Move X27, [X31+72]
	497 Move X29, [X31+48]
	498 Move X30, [X31+56]
	499 Move D9, [X31+32]
	500 Move D8, [X31+40]
	501 Move D11, [X31+16]
	502 Move D10, [X31+24]
	503 Add X31, X31, 144
	504 Return 
	505 Move W24, 1
	506 Call 0x1C17F20

