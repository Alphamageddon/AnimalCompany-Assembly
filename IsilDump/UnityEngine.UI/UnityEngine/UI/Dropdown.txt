Type: UnityEngine.UI.Dropdown

Method: UnityEngine.RectTransform get_template()

Disassembly:
	0x03CD8464 ADRP X8, 0x48A000
	0x03CD8468 LDR X8, [X8 + 0x248]

ISIL:
	001 Move X0, [X0+256]
	002 Return X0

Method: System.Void set_template(UnityEngine.RectTransform value)

Disassembly:
	0x03CD77CC LDR X0, [X0 + 0xA70]
	0x03CD77D0 BL 0x1C16CF4

ISIL:
	001 Move [X0+256], X1
	002 Call Dropdown.RefreshShownValue, X0
	003 Return 

Method: UnityEngine.UI.Text get_captionText()

Disassembly:
	0x03CD846C LDR X0, [X8]
	0x03CD8470 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+264]
	002 Return X0

Method: System.Void set_captionText(UnityEngine.UI.Text value)

Disassembly:
	0x03CD77D4 MOVZ W8, 0x1
	0x03CD77D8 STRB W8, [X20 + 0x486]

ISIL:
	001 Move [X0+264], X1
	002 Call Dropdown.RefreshShownValue, X0
	003 Return 

Method: UnityEngine.UI.Image get_captionImage()

Disassembly:
	0x03CD8474 CBNZ W8, 0x3CD847C
	0x03CD8478 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void set_captionImage(UnityEngine.UI.Image value)

Disassembly:
	0x03CD847C ADRP X8, 0x48A000
	0x03CD8480 LDR X8, [X8 + 0x2E8]

ISIL:
	001 Move [X0+272], X1
	002 Call Dropdown.RefreshShownValue, X0
	003 Return 

Method: UnityEngine.UI.Text get_itemText()

Disassembly:
	0x03CD8484 MOV X0, X20
	0x03CD8488 LDR X1, [X8]

ISIL:
	001 Move X0, [X0+280]
	002 Return X0

Method: System.Void set_itemText(UnityEngine.UI.Text value)

Disassembly:
	0x03CD77DC LDR X1, [X21]
	0x03CD77E0 MOV X0, X19

ISIL:
	001 Move [X0+280], X1
	002 Call Dropdown.RefreshShownValue, X0
	003 Return 

Method: UnityEngine.UI.Image get_itemImage()

Disassembly:
	0x03CD848C BL 0x21AF6D4
	0x03CD8490 ADRP X8, 0x48A000

ISIL:
	001 Move X0, [X0+288]
	002 Return X0

Method: System.Void set_itemImage(UnityEngine.UI.Image value)

Disassembly:
	0x03CD8494 LDR X8, [X8 + 0x248]
	0x03CD8498 LDR X0, [X8]

ISIL:
	001 Move [X0+288], X1
	002 Call Dropdown.RefreshShownValue, X0
	003 Return 

Method: System.Collections.Generic.List`1<UnityEngine.UI.Dropdown/OptionData> get_options()

Disassembly:
	0x03CD77E4 LDP X20, X19, [X31 + 0x10]
	0x03CD77E8 LDP X30, X21, [X31], #0x20
	0x03CD77EC B 0x272921C
	0x03CD77F0 STR X30, [X31 - 0x30]!
	0x03CD77F4 STP X22, X21, [X31 + 0x10]
	0x03CD77F8 STP X20, X19, [X31 + 0x20]
	0x03CD77FC ADRP X20, 0x710000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+304]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_options(System.Collections.Generic.List`1<UnityEngine.UI.Dropdown/OptionData> value)

Disassembly:
	0x03CD849C LDR W8, [X0 + 0xE0]
	0x03CD84A0 CBNZ W8, 0x3CD84A8
	0x03CD84A4 BL 0x1C16DFC
	0x03CD84A8 ADRP X8, 0x48A000
	0x03CD84AC LDR X8, [X8 + 0x2E0]
	0x03CD84B0 MOV X0, X20
	0x03CD84B4 LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+304]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move [X8+16], X1
	006 Move X30, [X31+16]
	007 Call Dropdown.RefreshShownValue, X0
	008 Return 
	009 Call 0x1C17F20

Method: UnityEngine.UI.Dropdown/DropdownEvent get_onValueChanged()

Disassembly:
	0x03CD84B8 BL 0x21AF6D4
	0x03CD84BC MOV X0, X20

ISIL:
	001 Move X0, [X0+312]
	002 Return X0

Method: System.Void set_onValueChanged(UnityEngine.UI.Dropdown/DropdownEvent value)

Disassembly:
	0x03CD84C0 MOV W1, W31
	0x03CD84C4 MOV X2, X31

ISIL:
	001 Move [X0+312], X1
	002 Return 

Method: System.Single get_alphaFadeSpeed()

Disassembly:
	0x03CD84C8 BL 0x3C357B4
	0x03CD84CC MOVZ W8, 0x1

ISIL:
	001 Move V0, [X0+320]
	002 Return V0

Method: System.Void set_alphaFadeSpeed(System.Single value)

Disassembly:
	0x03CD84D0 STRB W8, [X19 + 0x168]
	0x03CD84D4 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X0+320], S0
	002 Return 

Method: System.Int32 get_value()

Disassembly:
	0x03CD84D8 LDP X22, X21, [X31 + 0x30]
	0x03CD84DC LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+296]
	002 Return X0

Method: System.Void set_value(System.Int32 value)

Disassembly:
	0x03CD84E0 LDP X26, X25, [X31 + 0x10]
	0x03CD84E4 LDR X30, [X31], #0x50

ISIL:
	001 Move W2, 1

Method: System.Void SetValueWithoutNotify(System.Int32 input)

Disassembly:
	0x03CD861C STP X28, X27, [X31 + 0x110]
	0x03CD8620 STP X26, X25, [X31 + 0x120]

ISIL:
	001 Move W2, W31
	002 Call Dropdown.Set, X0, X1, X2
	003 Return 

Method: System.Void Set(System.Int32 value, System.Boolean sendCallback = True)

Disassembly:
	0x03CD84E8 RET
	0x03CD84EC LDR X0, [X25]
	0x03CD84F0 LDR X23, [X19 + 0x118]
	0x03CD84F4 LDR W8, [X0 + 0xE0]
	0x03CD84F8 CBNZ W8, 0x3CD8500
	0x03CD84FC BL 0x1C16DFC
	0x03CD8500 MOV X0, X23
	0x03CD8504 MOV X1, X31
	0x03CD8508 MOV X2, X31
	0x03CD850C BL 0x3C354F8
	0x03CD8510 TBZ X0, 0x0, 0x3CD854C
	0x03CD8514 LDR X0, [X19 + 0x118]
	0x03CD8518 CBZ X0, 0x3CD85F4
	0x03CD851C MOV X1, X31
	0x03CD8520 BL 0x3C32E90
	0x03CD8524 MOV X23, X0
	0x03CD8528 MOV X0, X22
	0x03CD852C MOV X1, X31
	0x03CD8530 BL 0x3C32E90
	0x03CD8534 CBZ X23, 0x3CD85F4
	0x03CD8538 MOV X1, X0
	0x03CD853C MOV X0, X23
	0x03CD8540 MOV X2, X31
	0x03CD8544 BL 0x3C40F48
	0x03CD8548 TBZ X0, 0x0, 0x3CD85D0
	0x03CD854C LDR X0, [X25]
	0x03CD8550 LDR X23, [X19 + 0x120]
	0x03CD8554 LDR W8, [X0 + 0xE0]
	0x03CD8558 CBNZ W8, 0x3CD8560
	0x03CD855C BL 0x1C16DFC
	0x03CD8560 MOV X0, X23
	0x03CD8564 MOV X1, X31
	0x03CD8568 MOV X2, X31
	0x03CD856C BL 0x3C354F8
	0x03CD8570 TBZ X0, 0x0, 0x3CD8200
	0x03CD8574 LDR X0, [X19 + 0x120]
	0x03CD8578 CBZ X0, 0x3CD85F4
	0x03CD857C MOV X1, X31
	0x03CD8580 BL 0x3C32E90
	0x03CD8584 MOV X23, X0
	0x03CD8588 MOV X0, X22
	0x03CD858C MOV X1, X31
	0x03CD8590 BL 0x3C32E90
	0x03CD8594 CBZ X23, 0x3CD85F4
	0x03CD8598 MOV X1, X0
	0x03CD859C MOV X0, X23
	0x03CD85A0 MOV X2, X31
	0x03CD85A4 BL 0x3C40F48
	0x03CD85A8 TBNZ X0, 0x0, 0x3CD8200
	0x03CD85AC STRB W31, [X19 + 0x168]
	0x03CD85B0 LDR X0, [X26]
	0x03CD85B4 LDR X23, [X19 + 0x100]
	0x03CD85B8 LDR W8, [X0 + 0xE0]
	0x03CD85BC CBNZ W8, 0x3CD85C4
	0x03CD85C0 BL 0x1C16DFC
	0x03CD85C4 ADRP X8, 0x480000
	0x03CD85C8 LDR X8, [X8 + 0xB10]
	0x03CD85CC B 0x3CD81F0
	0x03CD85D0 STRB W31, [X19 + 0x168]
	0x03CD85D4 LDR X0, [X26]
	0x03CD85D8 LDR X23, [X19 + 0x100]
	0x03CD85DC LDR W8, [X0 + 0xE0]
	0x03CD85E0 CBNZ W8, 0x3CD85E8
	0x03CD85E4 BL 0x1C16DFC
	0x03CD85E8 ADRP X8, 0x480000
	0x03CD85EC LDR X8, [X8 + 0xB00]
	0x03CD85F0 B 0x3CD81F0
	0x03CD85F4 BL 0x1C16F20
	0x03CD85F8 BL 0x1C16F28
	0x03CD85FC BL 0x1C171E0
	0x03CD8600 B 0x3CD8604
	0x03CD8604 SUB X31, X31, 0x160
	0x03CD8608 STP D15, D14, [X31 + 0xC0]
	0x03CD860C STP D13, D12, [X31 + 0xD0]
	0x03CD8610 STP D11, D10, [X31 + 0xE0]
	0x03CD8614 STP D9, D8, [X31 + 0xF0]
	0x03CD8618 STP X29, X30, [X31 + 0x100]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x710000
	008 Move X23, 0x41C000
	009 Move W8, [X22+1129]
	010 Move X23, [X23+2416]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x41C000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move X0, 0x48B000
	022 Move X0, [X0+592]
	023 Call 0x1C17CF4
	024 Move X0, 0x481000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x481000
	028 Move X0, [X0+2608]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1129], W8
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call Application.get_isPlaying
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {54}
	043 Move W8, [X19+296]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X19+304]
	046 Compare X8, 0
	047 JumpIfEqual {101}
	048 Move X9, [X8+16]
	049 Compare X9, 0
	050 JumpIfEqual {101}
	051 Move W9, [X9+24]
	052 Compare W9, 0
	053 JumpIfNotEqual {57}
	054 Move X8, [X19+304]
	055 Compare X8, 0
	056 JumpIfEqual {101}
	057 Move X8, [X8+16]
	058 Compare X8, 0
	059 JumpIfEqual {101}
	060 Move W8, [X8+24]
	061 Move X0, X19
	062 Subtract W8, W8, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 Move [X19+296], W8
	068 Call Dropdown.RefreshShownValue, X0
	069 Move TEMP, X20
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {94}
	073 Move X8, 0x481000
	074 Move X8, [X8+2608]
	075 Move X1, X19
	076 Move X2, X31
	077 Move X0, [X8]
	078 Call UISystemProfilerApi.AddMarker, X0, X1
	079 Move X0, [X19+312]
	080 Compare X0, 0
	081 JumpIfEqual {101}
	082 Move X8, 0x481000
	083 Move W1, [X19+296]
	084 Move X8, [X8+2600]
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X2, [X8]
	090 Move X30, [X31+48]
	091 Move X23, [X31+56]
	092 Call UnityEvent`1<Int32>.Invoke, X0, X1
	093 Return 
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Return 
	101 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03CD8624 STP X24, X23, [X31 + 0x130]
	0x03CD8628 STP X22, X21, [X31 + 0x140]
	0x03CD862C STP X20, X19, [X31 + 0x150]
	0x03CD8630 MRS X29, 0xC000
	0x03CD8634 LDR X8, [X29 + 0x28]
	0x03CD8638 ADRP X20, 0x70F000
	0x03CD863C MOV X28, X0
	0x03CD8640 STR X8, [X31 + 0xB8]
	0x03CD8644 LDRB W8, [X20 + 0x474]
	0x03CD8648 TBNZ X8, 0x0, 0x3CD8750
	0x03CD864C ADRP X0, 0x48A000
	0x03CD8650 LDR X0, [X0 + 0x2F8]
	0x03CD8654 BL 0x1C16CF4
	0x03CD8658 ADRP X0, 0x48A000
	0x03CD865C LDR X0, [X0 + 0x300]
	0x03CD8660 BL 0x1C16CF4
	0x03CD8664 ADRP X0, 0x48A000
	0x03CD8668 LDR X0, [X0 + 0x308]
	0x03CD866C BL 0x1C16CF4
	0x03CD8670 ADRP X0, 0x48A000
	0x03CD8674 LDR X0, [X0 + 0x310]
	0x03CD8678 BL 0x1C16CF4
	0x03CD867C ADRP X0, 0x480000
	0x03CD8680 LDR X0, [X0 + 0x768]
	0x03CD8684 BL 0x1C16CF4
	0x03CD8688 ADRP X0, 0x48A000
	0x03CD868C LDR X0, [X0 + 0x2B8]
	0x03CD8690 BL 0x1C16CF4
	0x03CD8694 ADRP X0, 0x48A000
	0x03CD8698 LDR X0, [X0 + 0x250]
	0x03CD869C BL 0x1C16CF4
	0x03CD86A0 ADRP X0, 0x48A000
	0x03CD86A4 LDR X0, [X0 + 0x2C0]
	0x03CD86A8 BL 0x1C16CF4
	0x03CD86AC ADRP X0, 0x480000
	0x03CD86B0 LDR X0, [X0 + 0x770]
	0x03CD86B4 BL 0x1C16CF4
	0x03CD86B8 ADRP X0, 0x48A000
	0x03CD86BC LDR X0, [X0 + 0x2C8]
	0x03CD86C0 BL 0x1C16CF4
	0x03CD86C4 ADRP X0, 0x480000
	0x03CD86C8 LDR X0, [X0 + 0x778]
	0x03CD86CC BL 0x1C16CF4
	0x03CD86D0 ADRP X0, 0x48A000
	0x03CD86D4 LDR X0, [X0 + 0x258]
	0x03CD86D8 BL 0x1C16CF4
	0x03CD86DC ADRP X0, 0x41B000
	0x03CD86E0 LDR X0, [X0 + 0x598]
	0x03CD86E4 BL 0x1C16CF4
	0x03CD86E8 ADRP X0, 0x471000
	0x03CD86EC LDR X0, [X0 + 0x6B8]
	0x03CD86F0 BL 0x1C16CF4
	0x03CD86F4 ADRP X0, 0x442000
	0x03CD86F8 LDR X0, [X0 + 0xC70]
	0x03CD86FC BL 0x1C16CF4
	0x03CD8700 ADRP X0, 0x48A000
	0x03CD8704 LDR X0, [X0 + 0x318]
	0x03CD8708 BL 0x1C16CF4
	0x03CD870C ADRP X0, 0x48A000
	0x03CD8710 LDR X0, [X0 + 0x320]
	0x03CD8714 BL 0x1C16CF4
	0x03CD8718 ADRP X0, 0x47B000
	0x03CD871C LDR X0, [X0 + 0xA30]
	0x03CD8720 BL 0x1C16CF4
	0x03CD8724 ADRP X0, 0x47B000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x710000
	010 Move X25, 0x48B000
	011 Move X24, 0x48B000
	012 Move X23, 0x48B000
	013 Move X22, 0x48B000
	014 Move X21, 0x481000
	015 Move W8, [X20+1130]
	016 Move X25, [X25+640]
	017 Move X24, [X24+648]
	018 Move X23, [X23+656]
	019 Move X22, [X22+664]
	020 Move X21, [X21+2648]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x48B000
	027 Move X0, [X0+648]
	028 Call 0x1C17CF4
	029 Move X0, 0x48B000
	030 Move X0, [X0+664]
	031 Call 0x1C17CF4
	032 Move X0, 0x48B000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move X0, 0x48B000
	036 Move X0, [X0+640]
	037 Call 0x1C17CF4
	038 Move X0, 0x481000
	039 Move X0, [X0+2648]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1130], W8
	043 Move X0, [X25]
	044 Call 0x1C17F10
	045 Move X20, X0
	046 Call OptionDataList..ctor, X0
	047 Move [X19+304], X20
	048 Move X0, [X24]
	049 Call 0x1C17F10
	050 Move X20, X0
	051 Call DropdownEvent..ctor, X0
	052 Move W8, 0x999A
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 Move [X19+312], X20
	055 Move [X19+320], W8
	056 Move X0, [X23]
	057 Call 0x1C17F10
	058 Move X1, [X22]
	059 Move X20, X0
	060 Call List`1<Object>..ctor, X0
	061 Move [X19+344], X20
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X1, X31
	075 Move X30, [X31+64]
	076 Move X25, [X31+72]
	077 Call Selectable..ctor, X0
	078 Return 

Method: System.Void Awake()

Disassembly:
	0x03CD87F0 ADRP X8, 0x480000
	0x03CD87F4 LDR X8, [X8 + 0x768]
	0x03CD87F8 MOV W1, W31
	0x03CD87FC MOV X2, X21
	0x03CD8800 LDR X3, [X8]
	0x03CD8804 BL 0x21E64C8
	0x03CD8808 CBZ X21, 0x3CD90CC
	0x03CD880C LDR W19, [X21 + 0x18]
	0x03CD8810 CBZ W19, 0x3CD913C
	0x03CD8814 ADRP X23, 0x480000
	0x03CD8818 LDR X23, [X23 + 0x778]
	0x03CD881C SUBS W1, W19, 0x1
	0x03CD8820 MOV X0, X21
	0x03CD8824 LDR X2, [X23]
	0x03CD8828 BL 0x301BCCC
	0x03CD882C CMP W19, 0x1
	0x03CD8830 MOV X24, X0
	0x03CD8834 B.LT 0x3CD88A0
	0x03CD8838 MOV W22, W31
	0x03CD883C LDR X2, [X23]
	0x03CD8840 MOV X0, X21
	0x03CD8844 MOV W1, W22
	0x03CD8848 BL 0x301BCCC
	0x03CD884C CBZ X0, 0x3CD90CC
	0x03CD8850 MOV X1, X31
	0x03CD8854 BL 0x3E2453C
	0x03CD8858 TBNZ X0, 0x0, 0x3CD888C
	0x03CD885C LDR X2, [X23]
	0x03CD8860 MOV X0, X21
	0x03CD8864 MOV W1, W22
	0x03CD8868 BL 0x301BCCC
	0x03CD886C CBZ X0, 0x3CD90CC
	0x03CD8870 MOV X1, X31
	0x03CD8874 BL 0x3E248A4
	0x03CD8878 TBNZ X0, 0x0, 0x3CD888C
	0x03CD887C ADD W22, W22, 0x1
	0x03CD8880 CMP W19, W22
	0x03CD8884 B.NE 0x3CD883C
	0x03CD8888 B 0x3CD88A0
	0x03CD888C LDR X2, [X23]
	0x03CD8890 MOV X0, X21
	0x03CD8894 MOV W1, W22
	0x03CD8898 BL 0x301BCCC
	0x03CD889C MOV X24, X0
	0x03CD88A0 LDR X0, [X20]
	0x03CD88A4 LDR W8, [X0 + 0xE0]
	0x03CD88A8 CBNZ W8, 0x3CD88B0
	0x03CD88AC BL 0x1C16DFC
	0x03CD88B0 ADRP X8, 0x48A000
	0x03CD88B4 LDR X8, [X8 + 0x300]
	0x03CD88B8 MOV X0, X21
	0x03CD88BC LDR X1, [X8]
	0x03CD88C0 BL 0x28F9A14
	0x03CD88C4 LDRB W8, [X28 + 0x168]
	0x03CD88C8 CBNZ W8, 0x3CD88E0
	0x03CD88CC MOV X0, X28
	0x03CD88D0 MOV X1, X24
	0x03CD88D4 BL 0x3CD7F68
	0x03CD88D8 LDRB W8, [X28 + 0x168]
	0x03CD88DC CBZ W8, 0x3CD913C
	0x03CD88E0 LDR X0, [X28 + 0x100]
	0x03CD88E4 CBZ X0, 0x3CD90CC
	0x03CD88E8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x710000
	007 Move X22, 0x41C000
	008 Move W8, [X20+1131]
	009 Move X22, [X22+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x41C000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1131], W8
	020 Move X0, [X22]
	021 Move X20, [X19+272]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Object.op_Implicit, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {50}
	033 Move X20, [X19+272]
	034 Compare X20, 0
	035 JumpIfEqual {85}
	036 Move X0, [X22]
	037 Move X21, [X20+216]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 And W1, W0, 1
	047 Move X0, X20
	048 Move X2, X31
	049 Call Behaviour.set_enabled, X0, X1
	050 Move X0, [X22]
	051 Move X20, [X19+256]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Move X1, X31
	058 Call Object.op_Implicit, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {79}
	063 Move X0, [X19+256]
	064 Compare X0, 0
	065 JumpIfEqual {85}
	066 Move X1, X31
	067 Call Component.get_gameObject, X0
	068 Compare X0, 0
	069 JumpIfEqual {85}
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move W1, W31
	075 Move X2, X31
	076 Move X30, [X31+48]
	077 Call GameObject.SetActive, X0, X1
	078 Return 
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return 
	085 Call 0x1C17F20

Method: System.Void Start()

Disassembly:
	0x03CD88EC BL 0x3C32ECC
	0x03CD88F0 CBZ X0, 0x3CD90CC
	0x03CD88F4 MOVZ W1, 0x1
	0x03CD88F8 MOV X2, X31
	0x03CD88FC BL 0x3C357B4
	0x03CD8900 LDR X0, [X28 + 0x100]
	0x03CD8904 CBZ X0, 0x3CD90CC
	0x03CD8908 MOV X1, X31
	0x03CD890C BL 0x3C32ECC
	0x03CD8910 LDR X8, [X28]
	0x03CD8914 MOV X1, X0
	0x03CD8918 MOV X0, X28
	0x03CD891C LDR X9, [X8 + 0x428]
	0x03CD8920 LDR X2, [X8 + 0x430]
	0x03CD8924 BLR X9
	0x03CD8928 STR X0, [X28 + 0x148]
	0x03CD892C CBZ X0, 0x3CD90CC
	0x03CD8930 ADRP X8, 0x480000
	0x03CD8934 LDR X8, [X8 + 0xB40]
	0x03CD8938 MOV X2, X31
	0x03CD893C LDR X1, [X8]
	0x03CD8940 BL 0x3C38A84
	0x03CD8944 LDR X0, [X28 + 0x148]
	0x03CD8948 CBZ X0, 0x3CD90CC
	0x03CD894C MOVZ W1, 0x1
	0x03CD8950 MOV X2, X31
	0x03CD8954 BL 0x3C357B4
	0x03CD8958 LDR X0, [X28 + 0x148]
	0x03CD895C CBZ X0, 0x3CD90CC
	0x03CD8960 MOV X1, X31
	0x03CD8964 BL 0x3C356F8
	0x03CD8968 CBZ X0, 0x3CD8988
	0x03CD896C ADRP X8, 0x442000
	0x03CD8970 LDR X8, [X8 + 0xC70]
	0x03CD8974 LDR X9, [X0]
	0x03CD8978 LDR X8, [X8]
	0x03CD897C CMP X9, X8
	0x03CD8980 CSEL X20, X0, X31, EQ
	0x03CD8984 B 0x3CD898C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x710000
	007 Move X22, 0x48B000
	008 Move X20, 0x48B000
	009 Move W8, [X21+1132]
	010 Move X22, [X22+672]
	011 Move X20, [X20+680]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x48B000
	018 Move X0, [X0+688]
	019 Call 0x1C17CF4
	020 Move X0, 0x48B000
	021 Move X0, [X0+680]
	022 Call 0x1C17CF4
	023 Move X0, 0x48B000
	024 Move X0, [X0+672]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1132], W8
	028 Move X0, [X22]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call TweenRunner`1<FloatTween>..ctor, X0
	033 Move [X19+352], X20
	034 Compare X20, 0
	035 JumpIfEqual {48}
	036 Move X0, X19
	037 Move X1, X31
	038 Move [X20+16], X19
	039 Call UIBehaviour.Start, X0
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Call Dropdown.RefreshShownValue, X0
	047 Return 
	048 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03CD8988 MOV X20, X31
	0x03CD898C LDR X0, [X28 + 0x100]
	0x03CD8990 CBZ X0, 0x3CD90CC
	0x03CD8994 MOV X1, X31
	0x03CD8998 BL 0x3C32E90
	0x03CD899C CBZ X0, 0x3CD90CC
	0x03CD89A0 MOV X1, X31
	0x03CD89A4 BL 0x3C3F49C
	0x03CD89A8 CBZ X20, 0x3CD90CC
	0x03CD89AC MOV X1, X0
	0x03CD89B0 MOV X0, X20
	0x03CD89B4 MOV W2, W31
	0x03CD89B8 MOV X3, X31
	0x03CD89BC BL 0x3C3FEB8
	0x03CD89C0 LDR X0, [X28 + 0x148]
	0x03CD89C4 CBZ X0, 0x3CD90CC
	0x03CD89C8 ADRP X8, 0x48A000
	0x03CD89CC LDR X8, [X8 + 0x310]
	0x03CD89D0 LDR X1, [X8]
	0x03CD89D4 BL 0x21E5548
	0x03CD89D8 CBZ X0, 0x3CD90CC
	0x03CD89DC MOV X19, X0
	0x03CD89E0 LDR X0, [X0 + 0x30]
	0x03CD89E4 CBZ X0, 0x3CD90CC
	0x03CD89E8 MOV X1, X31
	0x03CD89EC BL 0x3C3F49C
	0x03CD89F0 CBZ X0, 0x3CD90CC
	0x03CD89F4 MOV X1, X31
	0x03CD89F8 BL 0x3C32ECC
	0x03CD89FC CBZ X0, 0x3CD90CC
	0x03CD8A00 MOV X1, X31
	0x03CD8A04 BL 0x3C356F8
	0x03CD8A08 CBZ X0, 0x3CD8A28
	0x03CD8A0C ADRP X8, 0x442000
	0x03CD8A10 LDR X8, [X8 + 0xC70]
	0x03CD8A14 LDR X9, [X0]
	0x03CD8A18 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x710000
	006 Move X20, 0x41C000
	007 Move W8, [X21+1133]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x41C000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1133], W8
	019 Move X0, X19
	020 Call Dropdown.ImmediateDestroyDropdownList, X0
	021 Move X0, [X20]
	022 Move X20, [X19+336]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {41}
	035 Move X8, [X19]
	036 Move X1, [X19+336]
	037 Move X0, X19
	038 Move X9, [X8+1048]
	039 Move X2, [X8+1056]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move [X19+336], X31
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Selectable.OnDisable, X0
	049 Return 

Method: System.Void RefreshShownValue()

Disassembly:
	0x03CD7808 LDR X22, [X22 + 0x598]
	0x03CD780C MOV X19, X0
	0x03CD7810 TBNZ X8, 0x0, 0x3CD7828
	0x03CD7814 ADRP X0, 0x41C000
	0x03CD7818 LDR X0, [X0 + 0x598]
	0x03CD781C BL 0x1C16CF4
	0x03CD7820 MOVZ W8, 0x1
	0x03CD7824 STRB W8, [X20 + 0x46B]
	0x03CD7828 LDR X0, [X22]
	0x03CD782C LDR X20, [X19 + 0x110]
	0x03CD7830 LDR W8, [X0 + 0xE0]
	0x03CD7834 CBNZ W8, 0x3CD783C
	0x03CD7838 BL 0x1C16DFC
	0x03CD783C MOV X0, X20
	0x03CD7840 MOV X1, X31
	0x03CD7844 BL 0x3C38948
	0x03CD7848 TBZ X0, 0x0, 0x3CD7888
	0x03CD784C LDR X20, [X19 + 0x110]
	0x03CD7850 CBZ X20, 0x3CD78E8
	0x03CD7854 LDR X0, [X22]
	0x03CD7858 LDR X21, [X20 + 0xD8]
	0x03CD785C LDR W8, [X0 + 0xE0]
	0x03CD7860 CBNZ W8, 0x3CD7868
	0x03CD7864 BL 0x1C16DFC
	0x03CD7868 MOV X0, X21
	0x03CD786C MOV X1, X31
	0x03CD7870 MOV X2, X31
	0x03CD7874 BL 0x3C354F8
	0x03CD7878 AND W1, W0, 0x1
	0x03CD787C MOV X0, X20
	0x03CD7880 MOV X2, X31
	0x03CD7884 BL 0x3C32410
	0x03CD7888 LDR X0, [X22]
	0x03CD788C LDR X20, [X19 + 0x100]
	0x03CD7890 LDR W8, [X0 + 0xE0]
	0x03CD7894 CBNZ W8, 0x3CD789C
	0x03CD7898 BL 0x1C16DFC
	0x03CD789C MOV X0, X20
	0x03CD78A0 MOV X1, X31
	0x03CD78A4 BL 0x3C38948
	0x03CD78A8 TBZ X0, 0x0, 0x3CD78D8
	0x03CD78AC LDR X0, [X19 + 0x100]
	0x03CD78B0 CBZ X0, 0x3CD78E8
	0x03CD78B4 MOV X1, X31
	0x03CD78B8 BL 0x3C32ECC
	0x03CD78BC CBZ X0, 0x3CD78E8
	0x03CD78C0 LDP X20, X19, [X31 + 0x20]
	0x03CD78C4 LDP X22, X21, [X31 + 0x10]
	0x03CD78C8 MOV W1, W31
	0x03CD78CC MOV X2, X31
	0x03CD78D0 LDR X30, [X31], #0x30
	0x03CD78D4 B 0x3C357B4
	0x03CD78D8 LDP X20, X19, [X31 + 0x20]
	0x03CD78DC LDP X22, X21, [X31 + 0x10]
	0x03CD78E0 LDR X30, [X31], #0x30
	0x03CD78E4 RET
	0x03CD78E8 BL 0x1C16F20
	0x03CD78EC STR X30, [X31 - 0x30]!
	0x03CD78F0 STP X22, X21, [X31 + 0x10]
	0x03CD78F4 STP X20, X19, [X31 + 0x20]
	0x03CD78F8 ADRP X21, 0x710000
	0x03CD78FC ADRP X22, 0x48B000
	0x03CD7900 ADRP X20, 0x48B000
	0x03CD7904 LDRB W8, [X21 + 0x46C]
	0x03CD7908 LDR X22, [X22 + 0x2A0]
	0x03CD790C LDR X20, [X20 + 0x2A8]
	0x03CD7910 MOV X19, X0
	0x03CD7914 TBNZ X8, 0x0, 0x3CD7944
	0x03CD7918 ADRP X0, 0x48B000
	0x03CD791C LDR X0, [X0 + 0x2B0]
	0x03CD7920 BL 0x1C16CF4
	0x03CD7924 ADRP X0, 0x48B000
	0x03CD7928 LDR X0, [X0 + 0x2A8]
	0x03CD792C BL 0x1C16CF4
	0x03CD7930 ADRP X0, 0x48B000
	0x03CD7934 LDR X0, [X0 + 0x2A0]
	0x03CD7938 BL 0x1C16CF4
	0x03CD793C MOVZ W8, 0x1
	0x03CD7940 STRB W8, [X21 + 0x46C]
	0x03CD7944 LDR X0, [X22]
	0x03CD7948 BL 0x1C16F10
	0x03CD794C LDR X1, [X20]
	0x03CD7950 MOV X20, X0
	0x03CD7954 BL 0x27094B0
	0x03CD7958 STR X20, [X19 + 0x160]
	0x03CD795C CBZ X20, 0x3CD7984
	0x03CD7960 MOV X0, X19
	0x03CD7964 MOV X1, X31
	0x03CD7968 STR X19, [X20 + 0x10]
	0x03CD796C BL 0x3E5148C
	0x03CD7970 MOV X0, X19
	0x03CD7974 LDP X20, X19, [X31 + 0x20]
	0x03CD7978 LDP X22, X21, [X31 + 0x10]
	0x03CD797C LDR X30, [X31], #0x30
	0x03CD7980 B 0x3CD6808
	0x03CD7984 BL 0x1C16F20
	0x03CD7988 STP X30, X21, [X31 - 0x20]!
	0x03CD798C STP X20, X19, [X31 + 0x10]
	0x03CD7990 ADRP X21, 0x710000
	0x03CD7994 ADRP X20, 0x41C000
	0x03CD7998 LDRB W8, [X21 + 0x46D]
	0x03CD799C LDR X20, [X20 + 0x598]
	0x03CD79A0 MOV X19, X0
	0x03CD79A4 TBNZ X8, 0x0, 0x3CD79BC
	0x03CD79A8 ADRP X0, 0x41C000
	0x03CD79AC LDR X0, [X0 + 0x598]
	0x03CD79B0 BL 0x1C16CF4
	0x03CD79B4 MOVZ W8, 0x1
	0x03CD79B8 STRB W8, [X21 + 0x46D]
	0x03CD79BC MOV X0, X19
	0x03CD79C0 BL 0x3CD7A1C
	0x03CD79C4 LDR X0, [X20]
	0x03CD79C8 LDR X20, [X19 + 0x150]
	0x03CD79CC LDR W8, [X0 + 0xE0]
	0x03CD79D0 CBNZ W8, 0x3CD79D8
	0x03CD79D4 BL 0x1C16DFC
	0x03CD79D8 MOV X0, X20
	0x03CD79DC MOV X1, X31
	0x03CD79E0 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x711000
	007 Move X20, 0x48C000
	008 Move W8, [X21+1134]
	009 Move X20, [X20+584]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x48C000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0x48C000
	019 Move X0, [X0+592]
	020 Call 0x1C17CF4
	021 Move X0, 0x48C000
	022 Move X0, [X0+600]
	023 Call 0x1C17CF4
	024 Move X0, 0x41D000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x41D000
	028 Move X0, [X0+2440]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1134], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X19+304]
	039 Compare X8, 0
	040 JumpIfEqual {145}
	041 Move X8, [X8+16]
	042 Compare X8, 0
	043 JumpIfEqual {145}
	044 Move W9, [X8+24]
	045 Move X22, 0x41D000
	046 Move X22, [X22+1432]
	047 Subtract W10, W9, 1
	048 Move X12, 0x48C000
	049 Move W11, [X19+296]
	050 Move X12, [X12+600]
	051 Move X0, X8
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X2, [X12]
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Call List`1<Object>.get_Item, X0, X1
	058 Move X20, X0
	059 Move X8, [X0+184]
	060 Move X20, [X8]
	061 Move X0, [X22]
	062 Move X21, [X19+264]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X21
	068 Move X1, X31
	069 Call Object.op_Implicit, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {93}
	074 Compare X20, 0
	075 JumpIfEqual {83}
	076 Move X1, [X20+16]
	077 Compare X1, 0
	078 JumpIfEqual {83}
	079 Move X0, [X19+264]
	080 Compare X0, 0
	081 JumpIfEqual {145}
	082 Move X8, [X0]
	083 Move X0, [X19+264]
	084 Compare X0, 0
	085 JumpIfEqual {145}
	086 Move X9, 0x41D000
	087 Move X8, [X0]
	088 Move X9, [X9+2440]
	089 Move X1, [X9]
	090 Move X9, [X8+1512]
	091 Move X2, [X8+1520]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X0, [X22]
	094 Move X21, [X19+272]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X21
	100 Move X1, X31
	101 Call Object.op_Implicit, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {112}
	106 Move X0, [X19+272]
	107 Compare X20, 0
	108 JumpIfEqual {118}
	109 Compare X0, 0
	110 JumpIfEqual {145}
	111 Move X1, [X20+24]
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Return 
	118 Compare X0, 0
	119 JumpIfEqual {145}
	120 Move X1, X31
	121 Call Image.set_sprite, X0, X1
	122 Move X19, [X19+272]
	123 Compare X19, 0
	124 JumpIfEqual {145}
	125 Move X0, [X22]
	126 Move X20, [X19+216]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X20
	132 Move X1, X31
	133 Move X2, X31
	134 Call Object.op_Inequality, X0, X1
	135 And W1, W0, 1
	136 Move X0, X19
	137 Move X20, [X31+32]
	138 Move X19, [X31+40]
	139 Move X22, [X31+16]
	140 Move X21, [X31+24]
	141 Move X2, X31
	142 Move X30, [X31+48]
	143 Call Behaviour.set_enabled, X0, X1
	144 Return 
	145 Call 0x1C17F20

Method: System.Void AddOptions(System.Collections.Generic.List`1<UnityEngine.UI.Dropdown/OptionData> options)

Disassembly:
	0x03CD8B90 MOV X1, X31
	0x03CD8B94 MOV X2, X31
	0x03CD8B98 BL 0x3C3883C
	0x03CD8B9C TBNZ X0, 0x0, 0x3CD8D18
	0x03CD8BA0 LDR X8, [X26 + 0x10]
	0x03CD8BA4 CBZ X8, 0x3CD90CC
	0x03CD8BA8 LDR X0, [X8 + 0x38]
	0x03CD8BAC CBZ X0, 0x3CD90CC
	0x03CD8BB0 LDR W8, [X28 + 0x128]
	0x03CD8BB4 MOV X2, X31
	0x03CD8BB8 CMP W24, W8
	0x03CD8BBC CSET W1, EQ
	0x03CD8BC0 BL 0x3E47488
	0x03CD8BC4 LDR X8, [X26 + 0x10]
	0x03CD8BC8 CBZ X8, 0x3CD90CC
	0x03CD8BCC LDR X8, [X8 + 0x38]
	0x03CD8BD0 CBZ X8, 0x3CD90CC
	0x03CD8BD4 LDR X27, [X8 + 0x118]
	0x03CD8BD8 ADRP X8, 0x47B000
	0x03CD8BDC LDR X8, [X8 + 0xA30]
	0x03CD8BE0 LDR X0, [X8]
	0x03CD8BE4 BL 0x1C16F10
	0x03CD8BE8 ADRP X8, 0x48A000
	0x03CD8BEC LDR X8, [X8 + 0x318]
	0x03CD8BF0 MOV X1, X26
	0x03CD8BF4 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x710000
	006 Move W8, [X21+1135]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x48B000
	014 Move X0, [X0+720]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1135], W8
	018 Move X8, [X19+304]
	019 Compare X8, 0
	020 JumpIfEqual {36}
	021 Move X0, [X8+16]
	022 Compare X0, 0
	023 JumpIfEqual {36}
	024 Move X8, 0x48B000
	025 Move X8, [X8+720]
	026 Move X1, X20
	027 Move X2, [X8]
	028 Call List`1<Object>.AddRange, X0, X1
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call Dropdown.RefreshShownValue, X0
	035 Return 
	036 Call 0x1C17F20

Method: System.Void AddOptions(System.Collections.Generic.List`1<System.String> options)

Disassembly:
	0x03CD8BF8 MOV X28, X0
	0x03CD8BFC LDR X2, [X8]
	0x03CD8C00 BL 0x27259E8
	0x03CD8C04 CBZ X27, 0x3CD90CC
	0x03CD8C08 ADRP X8, 0x47B000
	0x03CD8C0C LDR X8, [X8 + 0xA38]
	0x03CD8C10 MOV X0, X27
	0x03CD8C14 MOV X1, X28
	0x03CD8C18 LDR X2, [X8]
	0x03CD8C1C BL 0x27288B4
	0x03CD8C20 LDR X8, [X26 + 0x10]
	0x03CD8C24 CBZ X8, 0x3CD90CC
	0x03CD8C28 LDR X0, [X8 + 0x38]
	0x03CD8C2C LDR X28, [X31 + 0x30]
	0x03CD8C30 CBZ X0, 0x3CD90CC
	0x03CD8C34 LDRB W8, [X0 + 0x120]
	0x03CD8C38 CBZ W8, 0x3CD8C4C
	0x03CD8C3C LDR X8, [X0]
	0x03CD8C40 LDR X9, [X8 + 0x398]
	0x03CD8C44 LDR X1, [X8 + 0x3A0]
	0x03CD8C48 BLR X9
	0x03CD8C4C ADRP X8, 0x41B000
	0x03CD8C50 LDR X8, [X8 + 0x598]
	0x03CD8C54 LDR X0, [X8]
	0x03CD8C58 LDR W8, [X0 + 0xE0]
	0x03CD8C5C CBNZ W8, 0x3CD8C64
	0x03CD8C60 BL 0x1C16DFC
	0x03CD8C64 MOV X0, X25
	0x03CD8C68 MOV X1, X31
	0x03CD8C6C MOV X2, X31
	0x03CD8C70 BL 0x3C354F8
	0x03CD8C74 TBZ X0, 0x0, 0x3CD8D0C
	0x03CD8C78 CBZ X25, 0x3CD90CC
	0x03CD8C7C LDR W8, [X25 + 0x34]
	0x03CD8C80 LDUR X9, [X25 + 0x2C]
	0x03CD8C84 STR W8, [X31 + 0xB0]
	0x03CD8C88 STR X9, [X31 + 0xA8]
	0x03CD8C8C LDR X8, [X26 + 0x10]
	0x03CD8C90 CBZ X8, 0x3CD90CC
	0x03CD8C94 LDR X8, [X8 + 0x38]
	0x03CD8C98 CBZ X8, 0x3CD90CC
	0x03CD8C9C LDR W10, [X31 + 0xB0]
	0x03CD8CA0 LDR X9, [X25 + 0x40]
	0x03CD8CA4 LDR X11, [X31 + 0xA8]
	0x03CD8CA8 LDR W19, [X8 + 0x2C]
	0x03CD8CAC LDR X28, [X8 + 0x38]
	0x03CD8CB0 LDR X27, [X8 + 0x48]
	0x03CD8CB4 STR W10, [X21 + 0x8]
	0x03CD8CB8 MOVZ W10, 0x4
	0x03CD8CBC ADD X1, X31, 0x80
	0x03CD8CC0 MOV X0, X25
	0x03CD8CC4 MOV X2, X31
	0x03CD8CC8 STR X11, [X21]
	0x03CD8CCC STR W10, [X31 + 0x80]
	0x03CD8CD0 STP X8, X9, [X31 + 0x90]
	0x03CD8CD4 STR X8, [X31 + 0xA0]
	0x03CD8CD8 BL 0x3E40B98
	0x03CD8CDC LDR X8, [X26 + 0x10]
	0x03CD8CE0 CBZ X8, 0x3CD90CC
	0x03CD8CE4 LDR X0, [X8 + 0x38]
	0x03CD8CE8 CBZ X0, 0x3CD90CC
	0x03CD8CEC MOVZ W8, 0x4
	0x03CD8CF0 ADD X1, X31, 0x58
	0x03CD8CF4 MOV X2, X31
	0x03CD8CF8 STP W8, W19, [X31 + 0x58]
	0x03CD8CFC STP X25, X28, [X31 + 0x60]
	0x03CD8D00 STP X25, X27, [X31 + 0x70]
	0x03CD8D04 BL 0x3E40B98
	0x03CD8D08 LDP X19, X28, [X31 + 0x28]
	0x03CD8D0C LDR X8, [X26 + 0x10]
	0x03CD8D10 CBZ X8, 0x3CD90CC
	0x03CD8D14 LDR X25, [X8 + 0x38]
	0x03CD8D18 ADD W24, W24, 0x1
	0x03CD8D1C CMP W20, W24
	0x03CD8D20 B.NE 0x3CD8B1C
	0x03CD8D24 LDR X19, [X31 + 0x50]
	0x03CD8D28 MOV X1, X31
	0x03CD8D2C MOV X0, X19
	0x03CD8D30 BL 0x3C3E90C
	0x03CD8D34 LDR X8, [X28 + 0x158]
	0x03CD8D38 CBZ X8, 0x3CD90CC
	0x03CD8D3C LDR V4, [X8 + 0x18]
	0x03CD8D40 FADD S1, S14, S11
	0x03CD8D44 FADD S2, S10, S9
	0x03CD8D48 FSUB S3, S11, S9

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x710000
	013 Move W8, [X21+1136]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x443000
	021 Move X0, [X0+3320]
	022 Call 0x1C17CF4
	023 Move X0, 0x41D000
	024 Move X0, [X0+456]
	025 Call 0x1C17CF4
	026 Move X0, 0x444000
	027 Move X0, [X0+2904]
	028 Call 0x1C17CF4
	029 Move X0, 0x443000
	030 Move X0, [X0+3296]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+1136], W8
	034 Compare X19, 0
	035 JumpIfEqual {99}
	036 Move W25, [X19+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X26, 0x444000
	039 Move X27, 0x443000
	040 Move X28, 0x443000
	041 Move X26, [X26+2904]
	042 Move X27, [X27+3296]
	043 Move X28, [X28+3320]
	044 Move W21, W31
	045 Move X8, [X20+304]
	046 Compare X8, 0
	047 JumpIfEqual {99}
	048 Move X2, [X26]
	049 Move X22, [X8+16]
	050 Move X0, X19
	051 Move W1, W21
	052 Call List`1<Object>.get_Item, X0, X1
	053 Move X8, [X27]
	054 Move X24, X0
	055 Move X0, X8
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X23, X0
	059 Call Object..ctor, X0
	060 Move [X23+16], X24
	061 Compare X22, 0
	062 JumpIfEqual {99}
	063 Move W10, [X22+28]
	064 Move X8, [X22+16]
	065 Move X9, [X28]
	066 Add W10, W10, 1
	067 Move [X22+28], W10
	068 Compare X8, 0
	069 JumpIfEqual {99}
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W11, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W9, W10, 1
	074 Add X8, X8, X10
	075 Move [X22+24], W9
	076 Move [X8+32], X23
	077 Move X8, [X9+32]
	078 Move X0, X22
	079 Move X1, X23
	080 Move X8, [X8+192]
	081 Move X2, [X8+112]
	082 Call List`1<Object>.AddWithResize, X0, X1
	083 Add W21, W21, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X20
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X22, [X31+64]
	089 Move X21, [X31+72]
	090 Move X24, [X31+48]
	091 Move X23, [X31+56]
	092 Move X26, [X31+32]
	093 Move X25, [X31+40]
	094 Move X28, [X31+16]
	095 Move X27, [X31+24]
	096 Move X30, [X31+96]
	097 Call Dropdown.RefreshShownValue, X0
	098 Return 
	099 Call 0x1C17F20

Method: System.Void AddOptions(System.Collections.Generic.List`1<UnityEngine.Sprite> options)

Disassembly:
	0x03CD8D74 LDR X20, [X31 + 0x38]
	0x03CD8D78 MOV X1, X31
	0x03CD8D7C MOV X0, X20
	0x03CD8D80 BL 0x3C3E51C
	0x03CD8D84 MOV X0, X19
	0x03CD8D88 MOV X1, X31
	0x03CD8D8C MOV V9.16B, V3.16B
	0x03CD8D90 BL 0x3C3E51C
	0x03CD8D94 LDR X19, [X31 + 0x20]
	0x03CD8D98 FSUB S8, S9, S3
	0x03CD8D9C FCMP S8, 0x0
	0x03CD8DA0 B.LE 0x3CD8DD4
	0x03CD8DA4 MOV X0, X20
	0x03CD8DA8 MOV X1, X31
	0x03CD8DAC BL 0x3C3E90C
	0x03CD8DB0 MOV X0, X20
	0x03CD8DB4 MOV X1, X31
	0x03CD8DB8 MOV V9.16B, V0.16B
	0x03CD8DBC BL 0x3C3E90C
	0x03CD8DC0 FSUB S1, S1, S8
	0x03CD8DC4 MOV X0, X20
	0x03CD8DC8 MOV V0.16B, V9.16B
	0x03CD8DCC MOV X1, X31
	0x03CD8DD0 BL 0x3C3E99C
	0x03CD8DD4 ADRP X8, 0x41D000
	0x03CD8DD8 LDR X8, [X8 + 0x9B0]
	0x03CD8DDC MOVZ W1, 0x4
	0x03CD8DE0 LDR X0, [X8]
	0x03CD8DE4 BL 0x1C16D6C
	0x03CD8DE8 MOV X23, X0
	0x03CD8DEC MOV X0, X20
	0x03CD8DF0 MOV X1, X23
	0x03CD8DF4 MOV X2, X31
	0x03CD8DF8 BL 0x3C3F058
	0x03CD8DFC CBZ X19, 0x3CD90CC
	0x03CD8E00 MOV X0, X19
	0x03CD8E04 MOV X1, X31
	0x03CD8E08 BL 0x3C32E90
	0x03CD8E0C CBZ X0, 0x3CD90CC
	0x03CD8E10 ADRP X8, 0x442000
	0x03CD8E14 LDR X8, [X8 + 0xC70]
	0x03CD8E18 LDR X9, [X0]
	0x03CD8E1C MOV X24, X0
	0x03CD8E20 LDR X8, [X8]
	0x03CD8E24 CMP X9, X8
	0x03CD8E28 B.NE 0x3CD90CC
	0x03CD8E2C MOV X0, X24
	0x03CD8E30 MOV X1, X31
	0x03CD8E34 STP S10, S14, [X31 + 0x10]
	0x03CD8E38 STR X29, [X31 + 0x18]
	0x03CD8E3C BL 0x3C3E51C
	0x03CD8E40 CBZ X23, 0x3CD90CC
	0x03CD8E44 FADD S4, S2, S0
	0x03CD8E48 FADD S2, S3, S1
	0x03CD8E4C STP S2, S4, [X31 + 0x4C]
	0x03CD8E50 ADRP X26, 0x422000
	0x03CD8E54 ADRP X8, 0xFFFFFFFFFCE12000
	0x03CD8E58 LDR X26, [X26 + 0x4B8]
	0x03CD8E5C LDR V14, [X8 + 0x240]
	0x03CD8E60 MOV W25, W31
	0x03CD8E64 ADD X19, X23, 0x28
	0x03CD8E68 MOVZ W21, 0x1
	0x03CD8E6C ADRP X22, 0x701000
	0x03CD8E70 MOVZ W29, 0x1
	0x03CD8E74 STP S1, S0, [X31 + 0x44]
	0x03CD8E78 ANDS W31, W29, 0x1
	0x03CD8E7C FCSEL S9, S0, S1, NE
	0x03CD8E80 LDP S1, S0, [X31 + 0x4C]
	0x03CD8E84 MOV X27, X31
	0x03CD8E88 MOV W28, W25
	0x03CD8E8C FABS S10, S9
	0x03CD8E90 FCSEL S13, S0, S1, NE
	0x03CD8E94 FABS S15, S13
	0x03CD8E98 MOV X20, X19
	0x03CD8E9C LDR W8, [X23 + 0x18]
	0x03CD8EA0 CMP X27, X8
	0x03CD8EA4 B.CS 0x3CD917C
	0x03CD8EA8 LDP S0, S1, [X20 - 0x8]
	0x03CD8EAC LDR V2, [X20]
	0x03CD8EB0 MOV X0, X24
	0x03CD8EB4 MOV X1, X31
	0x03CD8EB8 BL 0x3C40B58
	0x03CD8EBC ANDS W31, W29, 0x1
	0x03CD8EC0 MOV V11.16B, V0.16B
	0x03CD8EC4 FCSEL S0, S0, S1, NE

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x710000
	013 Move W8, [X21+1137]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x443000
	021 Move X0, [X0+3320]
	022 Call 0x1C17CF4
	023 Move X0, 0x481000
	024 Move X0, [X0+2744]
	025 Call 0x1C17CF4
	026 Move X0, 0x481000
	027 Move X0, [X0+2752]
	028 Call 0x1C17CF4
	029 Move X0, 0x443000
	030 Move X0, [X0+3296]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+1137], W8
	034 Compare X19, 0
	035 JumpIfEqual {99}
	036 Move W25, [X19+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X26, 0x481000
	039 Move X27, 0x443000
	040 Move X28, 0x443000
	041 Move X26, [X26+2752]
	042 Move X27, [X27+3296]
	043 Move X28, [X28+3320]
	044 Move W21, W31
	045 Move X8, [X20+304]
	046 Compare X8, 0
	047 JumpIfEqual {99}
	048 Move X2, [X26]
	049 Move X22, [X8+16]
	050 Move X0, X19
	051 Move W1, W21
	052 Call List`1<Object>.get_Item, X0, X1
	053 Move X8, [X27]
	054 Move X24, X0
	055 Move X0, X8
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X23, X0
	059 Call Object..ctor, X0
	060 Move [X23+24], X24
	061 Compare X22, 0
	062 JumpIfEqual {99}
	063 Move W10, [X22+28]
	064 Move X8, [X22+16]
	065 Move X9, [X28]
	066 Add W10, W10, 1
	067 Move [X22+28], W10
	068 Compare X8, 0
	069 JumpIfEqual {99}
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W11, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W9, W10, 1
	074 Add X8, X8, X10
	075 Move [X22+24], W9
	076 Move [X8+32], X23
	077 Move X8, [X9+32]
	078 Move X0, X22
	079 Move X1, X23
	080 Move X8, [X8+192]
	081 Move X2, [X8+112]
	082 Call List`1<Object>.AddWithResize, X0, X1
	083 Add W21, W21, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X20
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X22, [X31+64]
	089 Move X21, [X31+72]
	090 Move X24, [X31+48]
	091 Move X23, [X31+56]
	092 Move X26, [X31+32]
	093 Move X25, [X31+40]
	094 Move X28, [X31+16]
	095 Move X27, [X31+24]
	096 Move X30, [X31+96]
	097 Call Dropdown.RefreshShownValue, X0
	098 Return 
	099 Call 0x1C17F20

Method: System.Void ClearOptions()

Disassembly:
	0x03CD8EF0 LDR X8, [X26]
	0x03CD8EF4 FABS S0, S8
	0x03CD8EF8 FCMP S0, S10
	0x03CD8EFC FCSEL S0, S0, S10, GT
	0x03CD8F00 LDR X8, [X8 + 0xB8]
	0x03CD8F04 FMOV S2, 8
	0x03CD8F08 FMUL S0, S0, S14
	0x03CD8F0C LDR V1, [X8]
	0x03CD8F10 FMUL S1, S1, S2
	0x03CD8F14 FCMP S0, S1
	0x03CD8F18 FCSEL S0, S0, S1, GT
	0x03CD8F1C FABD S1, S9, S9
	0x03CD8F20 FCMP S1, S0
	0x03CD8F24 B.PL 0x3CD8FA0
	0x03CD8F28 ANDS W31, W29, 0x1
	0x03CD8F2C FCSEL S0, S11, S12, NE
	0x03CD8F30 FCMP S0, S13
	0x03CD8F34 B.LE 0x3CD8F8C
	0x03CD8F38 LDRB W8, [X22 + 0x5AA]
	0x03CD8F3C ANDS W31, W29, 0x1
	0x03CD8F40 FCSEL S8, S11, S12, NE
	0x03CD8F44 CBNZ W8, 0x3CD8F54
	0x03CD8F48 MOV X0, X26
	0x03CD8F4C BL 0x1C16CF4
	0x03CD8F50 STRB W21, [X22 + 0x5AA]
	0x03CD8F54 LDR X8, [X26]
	0x03CD8F58 FABS S0, S8
	0x03CD8F5C FCMP S0, S15
	0x03CD8F60 FCSEL S0, S0, S15, GT
	0x03CD8F64 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x710000
	005 Move W8, [X20+1138]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x48B000
	012 Move X0, [X0+728]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1138], W8
	016 Move X8, [X19+304]
	017 Compare X8, 0
	018 JumpIfEqual {39}
	019 Move X8, [X8+16]
	020 Compare X8, 0
	021 JumpIfEqual {39}
	022 Move W2, [X8+24]
	023 Move W9, [X8+28]
	024 Add W9, W9, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X8+24], W31
	027 Move [X8+28], W9
	028 Move X0, [X8+16]
	029 Move W1, W31
	030 Move X3, X31
	031 Call Array.Clear, X0, X1, X2
	032 Move [X19+296], W31
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Call Dropdown.RefreshShownValue, X0
	038 Return 
	039 Call 0x1C17F20

Method: System.Void SetupTemplate(UnityEngine.Canvas rootCanvas)

Disassembly:
	0x03CD8F68 FMOV S2, 8
	0x03CD8F6C FMUL S0, S0, S14
	0x03CD8F70 LDR V1, [X8]
	0x03CD8F74 FMUL S1, S1, S2
	0x03CD8F78 FCMP S0, S1
	0x03CD8F7C FCSEL S0, S0, S1, GT
	0x03CD8F80 FABD S1, S13, S13
	0x03CD8F84 FCMP S1, S0
	0x03CD8F88 B.PL 0x3CD8FA0
	0x03CD8F8C ADD X27, X27, 0x1
	0x03CD8F90 CMP X27, 0x4
	0x03CD8F94 ADD X20, X20, 0xC
	0x03CD8F98 B.NE 0x3CD8E9C
	0x03CD8F9C B 0x3CD8FD0
	0x03CD8FA0 ADRP X8, 0x471000
	0x03CD8FA4 LDR X8, [X8 + 0x6B8]
	0x03CD8FA8 LDR X0, [X8]
	0x03CD8FAC LDR W8, [X0 + 0xE0]
	0x03CD8FB0 CBNZ W8, 0x3CD8FB8
	0x03CD8FB4 BL 0x1C16DFC
	0x03CD8FB8 LDR X0, [X31 + 0x38]
	0x03CD8FBC MOV W1, W25
	0x03CD8FC0 MOV W2, W31
	0x03CD8FC4 MOV W3, W31
	0x03CD8FC8 MOV X4, X31
	0x03CD8FCC BL 0x3E23C44
	0x03CD8FD0 LDP S1, S0, [X31 + 0x44]
	0x03CD8FD4 MOV W29, W31
	0x03CD8FD8 MOVZ W25, 0x1
	0x03CD8FDC TBZ X28, 0x0, 0x3CD8E78
	0x03CD8FE0 LDR X19, [X31 + 0x30]
	0x03CD8FE4 LDR X0, [X19 + 0x158]
	0x03CD8FE8 CBZ X0, 0x3CD90CC
	0x03CD8FEC LDR W8, [X0 + 0x18]
	0x03CD8FF0 LDP X29, X24, [X31 + 0x18]
	0x03CD8FF4 LDP S10, S8, [X31 + 0x10]
	0x03CD8FF8 SUBS W20, W8, 0x1
	0x03CD8FFC B.LT 0x3CD90D0
	0x03CD9000 ADRP X21, 0x489000
	0x03CD9004 LDR X21, [X21 + 0x2C8]
	0x03CD9008 MOV W22, W31
	0x03CD900C LDR X2, [X21]
	0x03CD9010 MOV W1, W22
	0x03CD9014 BL 0x301BCCC
	0x03CD9018 CBZ X0, 0x3CD90CC
	0x03CD901C LDR X23, [X0 + 0x30]
	0x03CD9020 CBZ X23, 0x3CD90CC
	0x03CD9024 MOV X0, X23
	0x03CD9028 MOV X1, X31
	0x03CD902C BL 0x3C3E5B8
	0x03CD9030 FMOV S1, W31
	0x03CD9034 MOV X0, X23
	0x03CD9038 MOV X1, X31
	0x03CD903C BL 0x3C3E648
	0x03CD9040 MOV X0, X23
	0x03CD9044 MOV X1, X31
	0x03CD9048 BL 0x3C3E6D4
	0x03CD904C FMOV S1, W31
	0x03CD9050 MOV X0, X23
	0x03CD9054 MOV X1, X31
	0x03CD9058 BL 0x3C3E764
	0x03CD905C MOV X0, X23
	0x03CD9060 MOV X1, X31
	0x03CD9064 BL 0x3C3E7F0
	0x03CD9068 MOV X0, X23
	0x03CD906C MOV X1, X31
	0x03CD9070 MOV V9.16B, V0.16B
	0x03CD9074 BL 0x3C3EA28
	0x03CD9078 SCVTF S0, W20
	0x03CD907C FMUL S0, S8, S0
	0x03CD9080 FADD S0, S10, S0
	0x03CD9084 FMUL S1, S8, S1
	0x03CD9088 FADD S1, S0, S1
	0x03CD908C MOV X0, X23
	0x03CD9090 MOV V0.16B, V9.16B
	0x03CD9094 MOV X1, X31
	0x03CD9098 BL 0x3C3E880
	0x03CD909C MOV X0, X23
	0x03CD90A0 MOV X1, X31
	0x03CD90A4 BL 0x3C3E90C
	0x03CD90A8 MOV X0, X23
	0x03CD90AC MOV V1.16B, V8.16B
	0x03CD90B0 MOV X1, X31
	0x03CD90B4 BL 0x3C3E99C
	0x03CD90B8 CBZ W20, 0x3CD90D0
	0x03CD90BC LDR X0, [X19 + 0x158]
	0x03CD90C0 ADD W22, W22, 0x1
	0x03CD90C4 SUB W20, W20, 0x1
	0x03CD90C8 CBNZ X0, 0x3CD900C
	0x03CD90CC BL 0x1C16F20
	0x03CD90D0 LDR V0, [X19 + 0x140]
	0x03CD90D4 FMOV S1, W31
	0x03CD90D8 FMOV S2, 1
	0x03CD90DC MOV X0, X19
	0x03CD90E0 BL 0x3CD9574
	0x03CD90E4 LDR X0, [X19 + 0x100]
	0x03CD90E8 CBZ X0, 0x3CD90CC
	0x03CD90EC MOV X1, X31
	0x03CD90F0 BL 0x3C32ECC
	0x03CD90F4 CBZ X0, 0x3CD90CC
	0x03CD90F8 MOV W1, W31
	0x03CD90FC MOV X2, X31
	0x03CD9100 BL 0x3C357B4
	0x03CD9104 LDR X0, [X31 + 0x28]
	0x03CD9108 MOV X1, X31
	0x03CD910C BL 0x3C32ECC
	0x03CD9110 CBZ X0, 0x3CD90CC
	0x03CD9114 MOV W1, W31
	0x03CD9118 MOV X2, X31
	0x03CD911C BL 0x3C357B4
	0x03CD9120 LDR X8, [X19]
	0x03CD9124 MOV X0, X19
	0x03CD9128 MOV X1, X24
	0x03CD912C LDR X9, [X8 + 0x408]
	0x03CD9130 LDR X2, [X8 + 0x410]
	0x03CD9134 BLR X9
	0x03CD9138 STR X0, [X19 + 0x150]
	0x03CD913C LDR X8, [X29 + 0x28]
	0x03CD9140 LDR X9, [X31 + 0xB8]
	0x03CD9144 CMP X8, X9
	0x03CD9148 B.NE 0x3CD9180
	0x03CD914C LDP X20, X19, [X31 + 0x150]
	0x03CD9150 LDP X22, X21, [X31 + 0x140]
	0x03CD9154 LDP X24, X23, [X31 + 0x130]
	0x03CD9158 LDP X26, X25, [X31 + 0x120]
	0x03CD915C LDP X28, X27, [X31 + 0x110]
	0x03CD9160 LDP X29, X30, [X31 + 0x100]
	0x03CD9164 LDP D9, D8, [X31 + 0xF0]
	0x03CD9168 LDP D11, D10, [X31 + 0xE0]
	0x03CD916C LDP D13, D12, [X31 + 0xD0]
	0x03CD9170 LDP D15, D14, [X31 + 0xC0]
	0x03CD9174 ADD X31, X31, 0x160
	0x03CD9178 RET
	0x03CD917C BL 0x1C16F28
	0x03CD9180 BL 0x3EB1B20
	0x03CD9184 B 0x3CD8604
	0x03CD9188 B 0x3CD918C
	0x03CD918C STP X30, X21, [X31 - 0x20]!
	0x03CD9190 STP X20, X19, [X31 + 0x10]
	0x03CD9194 ADRP X20, 0x70E000
	0x03CD9198 ADRP X21, 0x41A000
	0x03CD919C LDRB W8, [X20 + 0x47E]
	0x03CD91A0 LDR X21, [X21 + 0x598]
	0x03CD91A4 MOV X19, X0
	0x03CD91A8 TBNZ X8, 0x0, 0x3CD91C0
	0x03CD91AC ADRP X0, 0x41A000
	0x03CD91B0 LDR X0, [X0 + 0x598]
	0x03CD91B4 BL 0x1C16CF4
	0x03CD91B8 MOVZ W8, 0x1
	0x03CD91BC STRB W8, [X20 + 0x47E]
	0x03CD91C0 LDR X0, [X21]
	0x03CD91C4 LDR X20, [X19 + 0x148]
	0x03CD91C8 LDR W8, [X0 + 0xE0]
	0x03CD91CC CBNZ W8, 0x3CD91D4
	0x03CD91D0 BL 0x1C16DFC
	0x03CD91D4 MOV X0, X20
	0x03CD91D8 MOV X1, X31
	0x03CD91DC MOV X2, X31
	0x03CD91E0 BL 0x3C354F8
	0x03CD91E4 TBZ X0, 0x0, 0x3CD9228
	0x03CD91E8 LDR V0, [X19 + 0x140]
	0x03CD91EC FMOV S1, W31
	0x03CD91F0 MOV X0, X19
	0x03CD91F4 BL 0x3CD9D64
	0x03CD91F8 LDR X8, [X19]
	0x03CD91FC MOV X0, X19
	0x03CD9200 LDP X9, X1, [X8 + 0x1C8]
	0x03CD9204 BLR X9
	0x03CD9208 TBZ X0, 0x0, 0x3CD9228
	0x03CD920C LDR V0, [X19 + 0x140]
	0x03CD9210 MOV X0, X19
	0x03CD9214 BL 0x3CD9E98
	0x03CD9218 MOV X1, X0
	0x03CD921C MOV X0, X19
	0x03CD9220 MOV X2, X31
	0x03CD9224 BL 0x3C366FC
	0x03CD9228 LDR X0, [X21]
	0x03CD922C LDR X20, [X19 + 0x150]
	0x03CD9230 LDR W8, [X0 + 0xE0]
	0x03CD9234 CBNZ W8, 0x3CD923C
	0x03CD9238 BL 0x1C16DFC
	0x03CD923C MOV X0, X20
	0x03CD9240 MOV X1, X31
	0x03CD9244 MOV X2, X31
	0x03CD9248 BL 0x3C354F8
	0x03CD924C TBZ X0, 0x0, 0x3CD9268
	0x03CD9250 LDR X8, [X19]
	0x03CD9254 LDR X1, [X19 + 0x150]
	0x03CD9258 MOV X0, X19
	0x03CD925C LDR X9, [X8 + 0x418]
	0x03CD9260 LDR X2, [X8 + 0x420]
	0x03CD9264 BLR X9
	0x03CD9268 LDR X8, [X19]
	0x03CD926C STR X31, [X19 + 0x150]
	0x03CD9270 MOV X0, X19
	0x03CD9274 LDP X20, X19, [X31 + 0x10]
	0x03CD9278 LDR X2, [X8 + 0x398]
	0x03CD927C LDR X1, [X8 + 0x3A0]
	0x03CD9280 LDP X30, X21, [X31], #0x20
	0x03CD9284 BR X2
	0x03CD9288 MOV X1, X31
	0x03CD928C B 0x33BDD8C
	0x03CD9290 STR X30, [X31 - 0x40]!
	0x03CD9294 STP X24, X23, [X31 + 0x10]
	0x03CD9298 STP X22, X21, [X31 + 0x20]
	0x03CD929C STP X20, X19, [X31 + 0x30]
	0x03CD92A0 ADRP X23, 0x70E000
	0x03CD92A4 LDRB W8, [X23 + 0x47A]
	0x03CD92A8 MOV X19, X4
	0x03CD92AC MOV X22, X3
	0x03CD92B0 MOV X21, X1
	0x03CD92B4 MOV X20, X0
	0x03CD92B8 TBNZ X8, 0x0, 0x3CD930C
	0x03CD92BC ADRP X0, 0x489000
	0x03CD92C0 LDR X0, [X0 + 0x328]
	0x03CD92C4 BL 0x1C16CF4
	0x03CD92C8 ADRP X0, 0x489000
	0x03CD92CC LDR X0, [X0 + 0x2C0]
	0x03CD92D0 BL 0x1C16CF4
	0x03CD92D4 ADRP X0, 0x41A000
	0x03CD92D8 LDR X0, [X0 + 0x598]
	0x03CD92DC BL 0x1C16CF4
	0x03CD92E0 ADRP X0, 0x41E000
	0x03CD92E4 LDR X0, [X0 + 0x928]
	0x03CD92E8 BL 0x1C16CF4
	0x03CD92EC ADRP X0, 0x47F000
	0x03CD92F0 LDR X0, [X0 + 0xB50]
	0x03CD92F4 BL 0x1C16CF4
	0x03CD92F8 ADRP X0, 0x41A000
	0x03CD92FC LDR X0, [X0 + 0x988]
	0x03CD9300 BL 0x1C16CF4
	0x03CD9304 MOVZ W8, 0x1
	0x03CD9308 STRB W8, [X23 + 0x47A]
	0x03CD930C LDR X8, [X20]
	0x03CD9310 MOV X0, X20
	0x03CD9314 MOV X1, X22
	0x03CD9318 LDR X9, [X8 + 0x448]
	0x03CD931C LDR X2, [X8 + 0x450]
	0x03CD9320 BLR X9
	0x03CD9324 CBZ X0, 0x3CD9570
	0x03CD9328 CBZ X22, 0x3CD9570
	0x03CD932C MOV X20, X0
	0x03CD9330 LDR X0, [X22 + 0x30]
	0x03CD9334 CBZ X0, 0x3CD9570
	0x03CD9338 LDR X22, [X20 + 0x30]
	0x03CD933C MOV X1, X31
	0x03CD9340 BL 0x3C3F49C
	0x03CD9344 CBZ X22, 0x3CD9570
	0x03CD9348 MOV X1, X0
	0x03CD934C MOV X0, X22
	0x03CD9350 MOV W2, W31
	0x03CD9354 MOV X3, X31
	0x03CD9358 BL 0x3C3FEB8
	0x03CD935C MOV X0, X20
	0x03CD9360 MOV X1, X31
	0x03CD9364 BL 0x3C32ECC
	0x03CD9368 CBZ X0, 0x3CD9570
	0x03CD936C MOVZ W1, 0x1
	0x03CD9370 MOV X2, X31
	0x03CD9374 BL 0x3C357B4
	0x03CD9378 MOV X0, X20
	0x03CD937C MOV X1, X31
	0x03CD9380 BL 0x3C32ECC
	0x03CD9384 CBZ X19, 0x3CD9570
	0x03CD9388 LDR W8, [X19 + 0x18]
	0x03CD938C MOV X22, X0
	0x03CD9390 ADD X0, X31, 0xC
	0x03CD9394 MOV X1, X31
	0x03CD9398 STR W8, [X31 + 0xC]
	0x03CD939C BL 0x337B6E0
	0x03CD93A0 CBZ X21, 0x3CD9570
	0x03CD93A4 ADRP X8, 0x47F000
	0x03CD93A8 LDR X8, [X8 + 0xB50]
	0x03CD93AC LDR X1, [X21 + 0x10]
	0x03CD93B0 MOV X23, X0
	0x03CD93B4 LDR X24, [X8]
	0x03CD93B8 CBZ X1, 0x3CD93D8
	0x03CD93BC ADRP X8, 0x41E000
	0x03CD93C0 LDR X8, [X8 + 0x928]
	0x03CD93C4 MOV X2, X31
	0x03CD93C8 LDR X0, [X8]
	0x03CD93CC BL 0x321B938
	0x03CD93D0 MOV X2, X0
	0x03CD93D4 B 0x3CD93E4
	0x03CD93D8 ADRP X8, 0x41A000
	0x03CD93DC LDR X8, [X8 + 0x988]
	0x03CD93E0 LDR X2, [X8]
	0x03CD93E4 MOV X0, X24
	0x03CD93E8 MOV X1, X23
	0x03CD93EC MOV X3, X31
	0x03CD93F0 BL 0x32274B8
	0x03CD93F4 CBZ X22, 0x3CD9570
	0x03CD93F8 ADRP X23, 0x41A000
	0x03CD93FC LDR X23, [X23 + 0x598]
	0x03CD9400 MOV X1, X0
	0x03CD9404 MOV X0, X22
	0x03CD9408 MOV X2, X31
	0x03CD940C BL 0x3C38A84
	0x03CD9410 LDR X0, [X23]
	0x03CD9414 LDR X22, [X20 + 0x38]
	0x03CD9418 LDR W8, [X0 + 0xE0]
	0x03CD941C CBNZ W8, 0x3CD9424
	0x03CD9420 BL 0x1C16DFC
	0x03CD9424 MOV X0, X22
	0x03CD9428 MOV X1, X31
	0x03CD942C MOV X2, X31
	0x03CD9430 BL 0x3C354F8
	0x03CD9434 TBZ X0, 0x0, 0x3CD944C
	0x03CD9438 LDR X0, [X20 + 0x38]
	0x03CD943C CBZ X0, 0x3CD9570
	0x03CD9440 MOV W1, W31
	0x03CD9444 MOV X2, X31
	0x03CD9448 BL 0x3E47488
	0x03CD944C LDR X0, [X23]
	0x03CD9450 LDR X22, [X20 + 0x20]
	0x03CD9454 LDR W8, [X0 + 0xE0]
	0x03CD9458 CBNZ W8, 0x3CD9460
	0x03CD945C BL 0x1C16DFC
	0x03CD9460 MOV X0, X22
	0x03CD9464 MOV X1, X31
	0x03CD9468 BL 0x3C38948
	0x03CD946C TBZ X0, 0x0, 0x3CD948C
	0x03CD9470 LDR X0, [X20 + 0x20]
	0x03CD9474 CBZ X0, 0x3CD9570
	0x03CD9478 LDR X8, [X0]
	0x03CD947C LDR X1, [X21 + 0x10]
	0x03CD9480 LDR X9, [X8 + 0x5E8]
	0x03CD9484 LDR X2, [X8 + 0x5F0]
	0x03CD9488 BLR X9
	0x03CD948C LDR X0, [X23]
	0x03CD9490 LDR X22, [X20 + 0x28]
	0x03CD9494 LDR W8, [X0 + 0xE0]
	0x03CD9498 CBNZ W8, 0x3CD94A0
	0x03CD949C BL 0x1C16DFC
	0x03CD94A0 MOV X0, X22
	0x03CD94A4 MOV X1, X31
	0x03CD94A8 BL 0x3C38948
	0x03CD94AC TBZ X0, 0x0, 0x3CD94FC
	0x03CD94B0 LDR X0, [X20 + 0x28]
	0x03CD94B4 CBZ X0, 0x3CD9570
	0x03CD94B8 LDR X1, [X21 + 0x18]
	0x03CD94BC BL 0x3CD3398
	0x03CD94C0 LDR X21, [X20 + 0x28]
	0x03CD94C4 CBZ X21, 0x3CD9570
	0x03CD94C8 LDR X0, [X23]
	0x03CD94CC LDR X22, [X21 + 0xD8]
	0x03CD94D0 LDR W8, [X0 + 0xE0]
	0x03CD94D4 CBNZ W8, 0x3CD94DC
	0x03CD94D8 BL 0x1C16DFC
	0x03CD94DC MOV X0, X22
	0x03CD94E0 MOV X1, X31
	0x03CD94E4 MOV X2, X31
	0x03CD94E8 BL 0x3C354F8
	0x03CD94EC AND W1, W0, 0x1
	0x03CD94F0 MOV X0, X21
	0x03CD94F4 MOV X2, X31
	0x03CD94F8 BL 0x3C32410
	0x03CD94FC ADRP X9, 0x489000
	0x03CD9500 LDR X9, [X9 + 0x328]
	0x03CD9504 LDR W10, [X19 + 0x1C]
	0x03CD9508 LDR X8, [X19 + 0x10]
	0x03CD950C LDR X9, [X9]
	0x03CD9510 ADD W10, W10, 0x1
	0x03CD9514 STR W10, [X19 + 0x1C]
	0x03CD9518 CBZ X8, 0x3CD9570
	0x03CD951C LDRSW X10, [X19 + 0x18]
	0x03CD9520 LDR W11, [X8 + 0x18]
	0x03CD9524 CMP W10, W11
	0x03CD9528 B.CS 0x3CD9540
	0x03CD952C ADD W9, W10, 0x1
	0x03CD9530 ADD X8, X8, X10, 0x3, LSL
	0x03CD9534 STR W9, [X19 + 0x18]
	0x03CD9538 STR X20, [X8 + 0x20]
	0x03CD953C B 0x3CD9558
	0x03CD9540 LDR X8, [X9 + 0x20]
	0x03CD9544 MOV X0, X19
	0x03CD9548 MOV X1, X20
	0x03CD954C LDR X8, [X8 + 0xC0]
	0x03CD9550 LDR X2, [X8 + 0x70]
	0x03CD9554 BL 0x301BF90
	0x03CD9558 MOV X0, X20
	0x03CD955C LDP X20, X19, [X31 + 0x30]
	0x03CD9560 LDP X22, X21, [X31 + 0x20]
	0x03CD9564 LDP X24, X23, [X31 + 0x10]
	0x03CD9568 LDR X30, [X31], #0x40
	0x03CD956C RET
	0x03CD9570 BL 0x1C16F20
	0x03CD9574 SUB X31, X31, 0x80
	0x03CD9578 STP D9, D8, [X31 + 0x50]
	0x03CD957C STR X30, [X31 + 0x60]
	0x03CD9580 STP X20, X19, [X31 + 0x70]
	0x03CD9584 ADRP X20, 0x70E000
	0x03CD9588 LDRB W8, [X20 + 0x47C]
	0x03CD958C MOV V8.16B, V1.16B
	0x03CD9590 MOV V9.16B, V0.16B
	0x03CD9594 MOV X19, X0
	0x03CD9598 STR S2, [X31 + 0x6C]
	0x03CD959C TBNZ X8, 0x0, 0x3CD95CC
	0x03CD95A0 ADRP X0, 0x489000
	0x03CD95A4 LDR X0, [X0 + 0x330]
	0x03CD95A8 BL 0x1C16CF4
	0x03CD95AC ADRP X0, 0x489000
	0x03CD95B0 LDR X0, [X0 + 0x338]
	0x03CD95B4 BL 0x1C16CF4
	0x03CD95B8 ADRP X0, 0x47F000
	0x03CD95BC LDR X0, [X0 + 0xB68]
	0x03CD95C0 BL 0x1C16CF4
	0x03CD95C4 MOVZ W8, 0x1
	0x03CD95C8 STRB W8, [X20 + 0x47C]
	0x03CD95CC ADD X0, X31, 0x6C
	0x03CD95D0 MOV V0.16B, V8.16B
	0x03CD95D4 MOV X1, X31
	0x03CD95D8 STP X31, X31, [X31 + 0x18]
	0x03CD95DC STR X31, [X31 + 0x28]
	0x03CD95E0 BL 0x338FDC0
	0x03CD95E4 TBNZ X0, 0x0, 0x3CD967C
	0x03CD95E8 STR X31, [X31 + 0x18]
	0x03CD95EC STR S9, [X31 + 0x28]
	0x03CD95F0 ADRP X8, 0x47F000
	0x03CD95F4 LDR V0, [X31 + 0x6C]
	0x03CD95F8 LDR X8, [X8 + 0xB68]
	0x03CD95FC STR W31, [X31 + 0x2C]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x710000
	011 Move X25, 0x41C000
	012 Move W8, [X20+1139]
	013 Move X25, [X25+1432]
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {73}
	020 Move X0, 0x481000
	021 Move X0, [X0+2768]
	022 Call 0x1C17CF4
	023 Move X0, 0x472000
	024 Move X0, [X0+1376]
	025 Call 0x1C17CF4
	026 Move X0, 0x481000
	027 Move X0, [X0+2776]
	028 Call 0x1C17CF4
	029 Move X0, 0x41C000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0x48B000
	033 Move X0, [X0+736]
	034 Call 0x1C17CF4
	035 Move X0, 0x48B000
	036 Move X0, [X0+744]
	037 Call 0x1C17CF4
	038 Move X0, 0x48B000
	039 Move X0, [X0+584]
	040 Call 0x1C17CF4
	041 Move X0, 0x481000
	042 Move X0, [X0+2936]
	043 Call 0x1C17CF4
	044 Move X0, 0x48B000
	045 Move X0, [X0+752]
	046 Call 0x1C17CF4
	047 Move X0, 0x484000
	048 Move X0, [X0+1984]
	049 Call 0x1C17CF4
	050 Move X0, 0x41B000
	051 Move X0, [X0+1432]
	052 Call 0x1C17CF4
	053 Move X0, 0x442000
	054 Move X0, [X0+3184]
	055 Call 0x1C17CF4
	056 Move X0, 0x480000
	057 Move X0, [X0+2816]
	058 Call 0x1C17CF4
	059 Move X0, 0x480000
	060 Move X0, [X0+2824]
	061 Call 0x1C17CF4
	062 Move X0, 0x480000
	063 Move X0, [X0+2832]
	064 Call 0x1C17CF4
	065 Move X0, 0x480000
	066 Move X0, [X0+2840]
	067 Call 0x1C17CF4
	068 Move X0, 0x480000
	069 Move X0, [X0+2848]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+1139], W8
	073 Move [X31+8], X31
	074 Move [X19+360], W31
	075 Move X0, [X25]
	076 Move X20, [X19+256]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X26, 0x41B000
	082 Move X26, [X26+2600]
	083 Move X0, X20
	084 Move X1, X31
	085 Call Object.op_Implicit, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {154}
	090 Move X0, [X19+256]
	091 Compare X0, 0
	092 JumpIfEqual {493}
	093 Move X1, X31
	094 Call Component.get_gameObject, X0
	095 Compare X0, 0
	096 JumpIfEqual {493}
	097 Move W1, 1
	098 Move X2, X31
	099 Move X20, X0
	100 Move W22, 1
	101 Call GameObject.SetActive, X0, X1
	102 Move X0, [X19+256]
	103 Compare X0, 0
	104 JumpIfEqual {493}
	105 Move X8, 0x480000
	106 Move X8, [X8+2768]
	107 Move X1, [X8]
	108 Call 0x21A4AF8, X0
	109 Move [X19+360], W22
	110 Move X8, [X25]
	111 Move X22, X0
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X0, X22
	118 Move X1, X31
	119 Call Object.op_Implicit, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {145}
	124 Compare X22, 0
	125 JumpIfEqual {493}
	126 Move X0, X22
	127 Move X1, X31
	128 Call Component.get_transform, X0
	129 Move X8, [X25]
	130 Move X23, [X19+256]
	131 Move X24, X0
	132 Move W9, [X8+224]
	133 Compare W9, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Move X0, X24
	138 Move X1, X23
	139 Move X2, X31
	140 Call Object.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {165}
	145 Move [X19+360], W31
	146 Move X0, [X26]
	147 Move X23, [X19+256]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X8, 0x480000
	153 Move X8, [X8+2824]
	154 Move X0, [X26]
	155 Move X20, 0x480000
	156 Move W8, [X0+224]
	157 Move X20, [X20+2848]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, [X20]
	162 Move X1, X19
	163 Move X2, X31
	164 Call Debug.LogError, X0, X1
	165 Move X0, X22
	166 Move X1, X31
	167 Call Component.get_transform, X0
	168 Compare X0, 0
	169 JumpIfEqual {493}
	170 Move X1, X31
	171 Call Transform.get_parent, X0
	172 Compare X0, 0
	173 JumpIfEqual {179}
	174 Move X8, 0x442000
	175 Move X8, [X8+3184]
	176 Move X9, [X0]
	177 Move X8, [X8]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X19+360], W31
	180 Move X0, [X26]
	181 Move X23, [X19+256]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X8, 0x480000
	187 Move X8, [X8+2840]
	188 Move X0, [X8]
	189 Move X1, X23
	190 Move X2, X31
	191 Call Debug.LogError, X0, X1
	192 Move W8, [X19+360]
	193 Compare W8, 0
	194 JumpIfEqual {365}
	195 Compare X22, 0
	196 JumpIfEqual {493}
	197 Move X0, X22
	198 Move X1, X31
	199 Call Component.get_gameObject, X0
	200 Compare X0, 0
	201 JumpIfEqual {493}
	202 Move X8, 0x48A000
	203 Move X8, [X8+752]
	204 Move X1, [X8]
	205 Call 0x21E61FC, X0
	206 Compare X0, 0
	207 JumpIfEqual {493}
	208 Move X8, [X19+280]
	209 Move X23, X0
	210 Move X1, X31
	211 Move [X0+32], X8
	212 Move X8, [X19+288]
	213 Move [X0+56], X22
	214 Move [X0+40], X8
	215 Move X0, X22
	216 Call Component.get_transform, X0
	217 Compare X0, 0
	218 JumpIfEqual {224}
	219 Move X8, 0x442000
	220 Move X8, [X8+3184]
	221 Move X1, [X8]
	222 Move X8, [X0]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move [X23+48], X0
	225 Move X0, [X19+256]
	226 Compare X0, 0
	227 JumpIfEqual {493}
	228 Move X1, X31
	229 Call Transform.get_parent, X0
	230 Move X24, 0x471000
	231 Move X24, [X24+1376]
	232 Move X23, X0
	233 Move X22, X31
	234 Move X0, [X25]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X23
	240 Move X1, X31
	241 Move X2, X31
	242 Call Object.op_Inequality, X0, X1
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {271}
	247 Compare X23, 0
	248 JumpIfEqual {493}
	249 Move X1, [X24]
	250 Move X0, X23
	251 Call 0x21A4894, X0
	252 Move X8, [X25]
	253 Move X22, X0
	254 Move W9, [X8+224]
	255 Compare W9, 0
	256 JumpIfNotEqual {259}
	257 Move X0, X8
	258 Call 0x1C17DFC
	259 Move X0, X22
	260 Move X1, X31
	261 Move X2, X31
	262 Call Object.op_Inequality, X0, X1
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfEqual {271}
	267 Move X0, X23
	268 Move X1, X31
	269 Call Transform.get_parent, X0
	270 Move X23, X0
	271 Move X8, 0x484000
	272 Move X8, [X8+1984]
	273 Add X1, X31, 8
	274 Move X0, X20
	275 Move X2, [X8]
	276 Call 0x21E7600, X0, X1
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfEqual {305}
	281 Move X8, 0x480000
	282 Move X8, [X8+2936]
	283 Move X0, X20
	284 Move X1, [X8]
	285 Call 0x21E61FC, X0
	286 Compare X0, 0
	287 JumpIfEqual {493}
	288 Move W1, 1
	289 Move X2, X31
	290 Move X23, X0
	291 Call Canvas.set_overrideSorting, X0, X1
	292 Move W1, 0x7530
	293 Move X0, X23
	294 Move X2, X31
	295 Call Canvas.set_sortingOrder, X0, X1
	296 Compare X21, 0
	297 JumpIfEqual {493}
	298 Move X0, X21
	299 Move X1, X31
	300 Call Canvas.get_sortingLayerID, X0
	301 Move W1, W0
	302 Move X0, X23
	303 Move X2, X31
	304 Call Canvas.set_sortingLayerID, X0, X1
	305 Move X0, [X25]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X0, X22
	311 Move X1, X31
	312 Move X2, X31
	313 Call Object.op_Inequality, X0, X1
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {369}
	318 Compare X22, 0
	319 JumpIfEqual {493}
	320 Move X8, 0x480000
	321 Move X8, [X8+2776]
	322 Move X0, X22
	323 Move X1, [X8]
	324 Call 0x21A53A8, X0
	325 Compare X0, 0
	326 JumpIfEqual {493}
	327 Move W8, [X0+24]
	328 Move X21, X0
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move W24, W31
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Add X8, X21, W24
	333 Move X0, [X8+32]
	334 Compare X0, 0
	335 JumpIfEqual {493}
	336 Move X1, X31
	337 Call "il2cpp_vm_object_is_inst", X0
	338 Move X22, X0
	339 Move X0, X20
	340 Move X1, X22
	341 Move X2, X31
	342 Call GameObject.GetComponent, X0, X1
	343 Move X8, [X25]
	344 Move X23, X0
	345 Move W9, [X8+224]
	346 Compare W9, 0
	347 JumpIfNotEqual {350}
	348 Move X0, X8
	349 Call 0x1C17DFC
	350 Move X0, X23
	351 Move X1, X31
	352 Move X2, X31
	353 Call Object.op_Equality, X0, X1
	354 Move TEMP, X0
	355 And TEMP, TEMP, 1
	356 Compare TEMP, 1
	357 JumpIfNotEqual {362}
	358 Move X0, X20
	359 Move X1, X22
	360 Move X2, X31
	361 Call GameObject.AddComponent, X0, X1
	362 Move W8, [X21+24]
	363 Add W24, W24, 1
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X0, X20
	366 Move W1, W31
	367 Move X2, X31
	368 Call GameObject.SetActive, X0, X1
	369 Move X8, 0x48A000
	370 Move X8, [X8+584]
	371 Move X0, [X8]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {376}
	375 Call 0x1C17DFC
	376 Move X8, 0x48A000
	377 Move X8, [X8+744]
	378 Move X0, X20
	379 Move X1, [X8]
	380 Call 0x21B06D4, X0
	381 Move X8, 0x48A000
	382 Move X8, [X8+584]
	383 Move X0, [X8]
	384 Move W8, [X0+224]
	385 Compare W8, 0
	386 JumpIfNotEqual {388}
	387 Call 0x1C17DFC
	388 Move X8, 0x48A000
	389 Move X8, [X8+736]
	390 Move X0, X20
	391 Move X1, [X8]
	392 Call 0x21B06D4, X0
	393 Move X0, X20
	394 Move W1, W31
	395 Move X2, X31
	396 Call GameObject.SetActive, X0, X1
	397 Move W8, 1
	398 Move [X19+360], W8
	399 Move X20, [X31+64]
	400 Move X19, [X31+72]
	401 Move X22, [X31+48]
	402 Move X21, [X31+56]
	403 Move X24, [X31+32]
	404 Move X23, [X31+40]
	405 Move X26, [X31+16]
	406 Move X25, [X31+24]
	407 Move X30, [X31+80]
	408 Return 
	409 Move X0, [X25]
	410 Move X23, [X19+280]
	411 Move W8, [X0+224]
	412 Compare W8, 0
	413 JumpIfNotEqual {415}
	414 Call 0x1C17DFC
	415 Move X0, X23
	416 Move X1, X31
	417 Move X2, X31
	418 Call Object.op_Inequality, X0, X1
	419 Move TEMP, X0
	420 And TEMP, TEMP, 1
	421 Compare TEMP, 1
	422 JumpIfNotEqual {442}
	423 Move X0, [X19+280]
	424 Compare X0, 0
	425 JumpIfEqual {493}
	426 Move X1, X31
	427 Call Component.get_transform, X0
	428 Move X23, X0
	429 Move X0, X22
	430 Move X1, X31
	431 Call Component.get_transform, X0
	432 Compare X23, 0
	433 JumpIfEqual {493}
	434 Move X1, X0
	435 Move X0, X23
	436 Move X2, X31
	437 Call Transform.IsChildOf, X0, X1
	438 Move TEMP, X0
	439 And TEMP, TEMP, 1
	440 Compare TEMP, 1
	441 JumpIfNotEqual {484}
	442 Move X0, [X25]
	443 Move X23, [X19+288]
	444 Move W8, [X0+224]
	445 Compare W8, 0
	446 JumpIfNotEqual {448}
	447 Call 0x1C17DFC
	448 Move X0, X23
	449 Move X1, X31
	450 Move X2, X31
	451 Call Object.op_Inequality, X0, X1
	452 Move TEMP, X0
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfNotEqual {192}
	456 Move X0, [X19+288]
	457 Compare X0, 0
	458 JumpIfEqual {493}
	459 Move X1, X31
	460 Call Component.get_transform, X0
	461 Move X23, X0
	462 Move X0, X22
	463 Move X1, X31
	464 Call Component.get_transform, X0
	465 Compare X23, 0
	466 JumpIfEqual {493}
	467 Move X1, X0
	468 Move X0, X23
	469 Move X2, X31
	470 Call Transform.IsChildOf, X0, X1
	471 Move TEMP, X0
	472 And TEMP, TEMP, 1
	473 Compare TEMP, 1
	474 JumpIfEqual {192}
	475 Move [X19+360], W31
	476 Move X0, [X26]
	477 Move X23, [X19+256]
	478 Move W8, [X0+224]
	479 Compare W8, 0
	480 JumpIfNotEqual {482}
	481 Call 0x1C17DFC
	482 Move X8, 0x480000
	483 Move X8, [X8+2832]
	484 Move [X19+360], W31
	485 Move X0, [X26]
	486 Move X23, [X19+256]
	487 Move W8, [X0+224]
	488 Compare W8, 0
	489 JumpIfNotEqual {491}
	490 Call 0x1C17DFC
	491 Move X8, 0x480000
	492 Move X8, [X8+2816]
	493 Call 0x1C17F20
	494 Call 0x1C17F28
	495 Call 0x1C181E0

Method: T GetOrAddComponent(UnityEngine.GameObject go)

Disassembly:
	0x021B06D4 LDR X8, [X24 + 0x28]
	0x021B06D8 MOV X21, X2
	0x021B06DC MOV X19, X1
	0x021B06E0 MOV X20, X0
	0x021B06E4 STUR X8, [X29 - 0x8]
	0x021B06E8 LDR X8, [X2 + 0x38]
	0x021B06EC CBNZ X8, 0x21B0710
	0x021B06F0 ADRP X0, 0x1F43000
	0x021B06F4 LDR X0, [X0 + 0xDF8]
	0x021B06F8 BL 0x1C16CF4
	0x021B06FC LDR X8, [X21 + 0x38]
	0x021B0700 CBNZ X8, 0x21B0710
	0x021B0704 MOV X0, X21
	0x021B0708 BL 0x1C5C6E0
	0x021B070C LDR X8, [X21 + 0x38]
	0x021B0710 LDR X9, [X8 + 0x8]
	0x021B0714 LDR W22, [X9 + 0xFC]
	0x021B0718 ADD X9, X31, 0x0
	0x021B071C ADD X10, X22, 0xF
	0x021B0720 AND X10, X10, 0x1FFFFFFFF
	0x021B0724 SUB X23, X9, X10
	0x021B0728 ADD X31, X23, 0x0
	0x021B072C ADRP X9, 0x1F43000
	0x021B0730 LDR X9, [X9 + 0xDF8]
	0x021B0734 LDR X0, [X9]
	0x021B0738 LDR W9, [X0 + 0xE0]
	0x021B073C CBNZ W9, 0x21B0748
	0x021B0740 BL 0x1C16DFC
	0x021B0744 LDR X8, [X21 + 0x38]
	0x021B0748 LDR X1, [X8]
	0x021B074C SUB X8, X29, 0xC
	0x021B0750 SUB X3, X29, 0x28
	0x021B0754 MOV X2, X31
	0x021B0758 LDR X0, [X1]
	0x021B075C STURB W31, [X29 - 0xC]
	0x021B0760 STP X20, X8, [X29 - 0x28]
	0x021B0764 STUR X23, [X29 - 0x18]
	0x021B0768 LDR X8, [X1 + 0x10]
	0x021B076C MOV X4, X23
	0x021B0770 BLR X8
	0x021B0774 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {18}
	010 Move X0, 0x1F44000
	011 Move X0, [X0+1432]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Compare X20, 0
	019 JumpIfEqual {55}
	020 Move X8, [X19+56]
	021 Move X0, X20
	022 Move X1, [X8]
	023 Call 0x21E62E4, X0
	024 Move X8, 0x1F44000
	025 Move X8, [X8+1432]
	026 Move X21, X0
	027 Move X8, [X8]
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X31
	035 Call Object.op_Implicit, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {46}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X0, X21
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Move X8, [X19+56]
	047 Move X0, X20
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X1, [X8+16]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call 0x21E61FC, X0
	054 Return X0
	055 Call 0x1C17F20

Method: System.Void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03CD9600 STP S8, S0, [X31 + 0x20]

ISIL:
No ISIL was generated
Method: System.Void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData)

Disassembly:
	0x03CDA184 LDP X30, X21, [X31], #0x20

ISIL:
	001 Call Dropdown.Show, X0
	002 Return 

Method: System.Void OnCancel(UnityEngine.EventSystems.BaseEventData eventData)

Disassembly:
	0x03CDA188 B 0x3E4BE8C

ISIL:
No ISIL was generated
Method: System.Void Show()

Disassembly:
	0x03CD9604 LDR X0, [X8]
	0x03CD9608 BL 0x1C16F10
	0x03CD960C ADRP X8, 0x489000
	0x03CD9610 LDR X8, [X8 + 0x330]
	0x03CD9614 MOV X1, X19
	0x03CD9618 MOV X3, X31
	0x03CD961C MOV X20, X0
	0x03CD9620 LDR X2, [X8]
	0x03CD9624 BL 0x2725EC4
	0x03CD9628 ADD X0, X31, 0x18
	0x03CD962C MOV X1, X20
	0x03CD9630 MOV X2, X31
	0x03CD9634 BL 0x3E4B6D8
	0x03CD9638 MOVZ W8, 0x1
	0x03CD963C STRB W8, [X31 + 0x2C]
	0x03CD9640 LDUR V0, [X31 + 0x18]
	0x03CD9644 LDR X0, [X19 + 0x160]
	0x03CD9648 LDR X8, [X31 + 0x28]
	0x03CD964C STR V0, [X31]
	0x03CD9650 STR X8, [X31 + 0x10]
	0x03CD9654 CBZ X0, 0x3CD9690
	0x03CD9658 ADRP X8, 0x489000
	0x03CD965C LDR X8, [X8 + 0x338]
	0x03CD9660 LDR V0, [X31]
	0x03CD9664 LDR X9, [X31 + 0x10]
	0x03CD9668 ADD X1, X31, 0x30
	0x03CD966C LDR X2, [X8]
	0x03CD9670 STR V0, [X31 + 0x3]
	0x03CD9674 STR X9, [X31 + 0x40]
	0x03CD9678 BL 0x2709314
	0x03CD967C LDP X20, X19, [X31 + 0x70]
	0x03CD9680 LDR X30, [X31 + 0x60]
	0x03CD9684 LDP D9, D8, [X31 + 0x50]
	0x03CD9688 ADD X31, X31, 0x80
	0x03CD968C RET
	0x03CD9690 BL 0x1C16F20
	0x03CD9694 SUB X31, X31, 0x70
	0x03CD9698 STP X29, X30, [X31 + 0x10]
	0x03CD969C STP X28, X27, [X31 + 0x20]
	0x03CD96A0 STP X26, X25, [X31 + 0x30]
	0x03CD96A4 STP X24, X23, [X31 + 0x40]
	0x03CD96A8 STP X22, X21, [X31 + 0x50]
	0x03CD96AC STP X20, X19, [X31 + 0x60]
	0x03CD96B0 ADRP X22, 0x70E000
	0x03CD96B4 ADRP X23, 0x41A000
	0x03CD96B8 ADRP X20, 0x47F000
	0x03CD96BC LDRB W8, [X22 + 0x475]
	0x03CD96C0 LDR X23, [X23 + 0xA58]
	0x03CD96C4 LDR X20, [X20 + 0xB70]
	0x03CD96C8 MOV X21, X1
	0x03CD96CC MOV X19, X0
	0x03CD96D0 TBNZ X8, 0x0, 0x3CD9790
	0x03CD96D4 ADRP X0, 0x470000
	0x03CD96D8 LDR X0, [X0 + 0x560]
	0x03CD96DC BL 0x1C16CF4
	0x03CD96E0 ADRP X0, 0x47F000
	0x03CD96E4 LDR X0, [X0 + 0xAD8]
	0x03CD96E8 BL 0x1C16CF4
	0x03CD96EC ADRP X0, 0x489000
	0x03CD96F0 LDR X0, [X0 + 0x2E8]
	0x03CD96F4 BL 0x1C16CF4
	0x03CD96F8 ADRP X0, 0x489000
	0x03CD96FC LDR X0, [X0 + 0x340]
	0x03CD9700 BL 0x1C16CF4
	0x03CD9704 ADRP X0, 0x489000
	0x03CD9708 LDR X0, [X0 + 0x248]
	0x03CD970C BL 0x1C16CF4
	0x03CD9710 ADRP X0, 0x47F000
	0x03CD9714 LDR X0, [X0 + 0x908]
	0x03CD9718 BL 0x1C16CF4
	0x03CD971C ADRP X0, 0x489000
	0x03CD9720 LDR X0, [X0 + 0x348]
	0x03CD9724 BL 0x1C16CF4
	0x03CD9728 ADRP X0, 0x47F000
	0x03CD972C LDR X0, [X0 + 0xB78]
	0x03CD9730 BL 0x1C16CF4
	0x03CD9734 ADRP X0, 0x47F000
	0x03CD9738 LDR X0, [X0 + 0x8E0]
	0x03CD973C BL 0x1C16CF4
	0x03CD9740 ADRP X0, 0x47F000
	0x03CD9744 LDR X0, [X0 + 0x558]
	0x03CD9748 BL 0x1C16CF4
	0x03CD974C ADRP X0, 0x47F000
	0x03CD9750 LDR X0, [X0 + 0xB80]
	0x03CD9754 BL 0x1C16CF4
	0x03CD9758 ADRP X0, 0x41A000
	0x03CD975C LDR X0, [X0 + 0xA58]
	0x03CD9760 BL 0x1C16CF4
	0x03CD9764 ADRP X0, 0x41A000
	0x03CD9768 LDR X0, [X0 + 0x598]
	0x03CD976C BL 0x1C16CF4
	0x03CD9770 ADRP X0, 0x441000
	0x03CD9774 LDR X0, [X0 + 0xE30]
	0x03CD9778 BL 0x1C16CF4
	0x03CD977C ADRP X0, 0x47F000
	0x03CD9780 LDR X0, [X0 + 0xB70]
	0x03CD9784 BL 0x1C16CF4
	0x03CD9788 MOVZ W8, 0x1
	0x03CD978C STRB W8, [X22 + 0x475]
	0x03CD9790 LDR X0, [X23]
	0x03CD9794 BL 0x1C16F10
	0x03CD9798 LDR X1, [X20]
	0x03CD979C MOV X2, X31
	0x03CD97A0 MOV X20, X0
	0x03CD97A4 BL 0x3C35934
	0x03CD97A8 CBZ X21, 0x3CD9BD0
	0x03CD97AC MOV X0, X21
	0x03CD97B0 MOV X1, X31
	0x03CD97B4 BL 0x3C32ECC
	0x03CD97B8 CBZ X0, 0x3CD9BD0
	0x03CD97BC MOV X1, X31
	0x03CD97C0 BL 0x3C35734
	0x03CD97C4 CBZ X20, 0x3CD9BD0
	0x03CD97C8 ADRP X22, 0x47F000
	0x03CD97CC LDR X22, [X22 + 0x558]
	0x03CD97D0 MOV W1, W0
	0x03CD97D4 MOV X0, X20
	0x03CD97D8 MOV X2, X31
	0x03CD97DC BL 0x3C35770
	0x03CD97E0 LDR X1, [X22]
	0x03CD97E4 MOV X0, X20
	0x03CD97E8 BL 0x21E51FC
	0x03CD97EC MOV X22, X0
	0x03CD97F0 MOV X0, X21
	0x03CD97F4 MOV X1, X31
	0x03CD97F8 BL 0x3C32E90
	0x03CD97FC CBZ X22, 0x3CD9BD0
	0x03CD9800 MOV X1, X0
	0x03CD9804 MOV X0, X22
	0x03CD9808 MOV W2, W31
	0x03CD980C MOV X3, X31
	0x03CD9810 BL 0x3C3FEB8
	0x03CD9814 ADRP X21, 0x6FF000
	0x03CD9818 LDRB W8, [X21 + 0x783]
	0x03CD981C CBNZ W8, 0x3CD9834
	0x03CD9820 ADRP X0, 0x41A000
	0x03CD9824 LDR X0, [X0 + 0x5A0]
	0x03CD9828 BL 0x1C16CF4
	0x03CD982C MOVZ W8, 0x1
	0x03CD9830 STRB W8, [X21 + 0x783]
	0x03CD9834 ADRP X21, 0x41A000
	0x03CD9838 LDR X21, [X21 + 0x5A0]
	0x03CD983C MOV X0, X22
	0x03CD9840 MOV X1, X31
	0x03CD9844 LDR X8, [X21]
	0x03CD9848 LDR X8, [X8 + 0xB8]
	0x03CD984C LDP S0, S1, [X8]
	0x03CD9850 BL 0x3C3E648
	0x03CD9854 ADRP X23, 0x6FF000
	0x03CD9858 LDRB W8, [X23 + 0x85B]
	0x03CD985C CBNZ W8, 0x3CD9874
	0x03CD9860 ADRP X0, 0x41A000
	0x03CD9864 LDR X0, [X0 + 0x5A0]
	0x03CD9868 BL 0x1C16CF4
	0x03CD986C MOVZ W8, 0x1
	0x03CD9870 STRB W8, [X23 + 0x85B]
	0x03CD9874 LDR X8, [X21]
	0x03CD9878 ADRP X21, 0x47F000
	0x03CD987C MOV X0, X22
	0x03CD9880 MOV X1, X31
	0x03CD9884 LDR X8, [X8 + 0xB8]
	0x03CD9888 LDP S0, S1, [X8 + 0xC]
	0x03CD988C LDR X21, [X21 + 0xB78]
	0x03CD9890 BL 0x3C3E764
	0x03CD9894 ADRP X23, 0x700000
	0x03CD9898 LDRB W8, [X23 + 0x78F]
	0x03CD989C CBNZ W8, 0x3CD98B4
	0x03CD98A0 ADRP X0, 0x422000
	0x03CD98A4 LDR X0, [X0 + 0xF08]
	0x03CD98A8 BL 0x1C16CF4
	0x03CD98AC MOVZ W8, 0x1
	0x03CD98B0 STRB W8, [X23 + 0x78F]
	0x03CD98B4 ADRP X8, 0x422000
	0x03CD98B8 LDR X8, [X8 + 0xF08]
	0x03CD98BC MOV X0, X22
	0x03CD98C0 MOV X1, X31
	0x03CD98C4 LDR X8, [X8]
	0x03CD98C8 LDR X8, [X8 + 0xB8]
	0x03CD98CC LDP S0, S1, [X8]
	0x03CD98D0 BL 0x3C3E99C
	0x03CD98D4 LDR X1, [X21]
	0x03CD98D8 MOV X0, X20
	0x03CD98DC BL 0x21E51FC
	0x03CD98E0 CBZ X0, 0x3CD9BD0
	0x03CD98E4 MOVZ W1, 0x1
	0x03CD98E8 MOV X2, X31
	0x03CD98EC MOV X21, X0
	0x03CD98F0 BL 0x3E248E0
	0x03CD98F4 LDR X0, [X19 + 0x148]
	0x03CD98F8 CBZ X0, 0x3CD9BD0
	0x03CD98FC ADRP X8, 0x47F000
	0x03CD9900 LDR X8, [X8 + 0xB80]
	0x03CD9904 LDR X1, [X8]
	0x03CD9908 BL 0x21E52E4
	0x03CD990C CBZ X0, 0x3CD9BD0
	0x03CD9910 MOV X1, X31
	0x03CD9914 MOV X22, X0
	0x03CD9918 BL 0x3E24A24
	0x03CD991C MOV W1, W0
	0x03CD9920 MOV X0, X21
	0x03CD9924 MOV X2, X31
	0x03CD9928 BL 0x3E24A60
	0x03CD992C MOV X0, X22
	0x03CD9930 MOV X1, X31
	0x03CD9934 BL 0x3E24924
	0x03CD9938 SUB W1, W0, 0x1
	0x03CD993C MOV X0, X21
	0x03CD9940 MOV X2, X31
	0x03CD9944 BL 0x3E24960
	0x03CD9948 LDR X0, [X19 + 0x100]
	0x03CD994C CBZ X0, 0x3CD9BD0
	0x03CD9950 ADRP X29, 0x41A000
	0x03CD9954 ADRP X23, 0x470000
	0x03CD9958 ADRP X24, 0x47F000
	0x03CD995C ADRP X28, 0x47F000
	0x03CD9960 ADRP X27, 0x441000
	0x03CD9964 ADRP X26, 0x489000
	0x03CD9968 ADRP X25, 0x489000
	0x03CD996C LDR X29, [X29 + 0x598]
	0x03CD9970 LDR X23, [X23 + 0x560]
	0x03CD9974 LDR X24, [X24 + 0x8E0]
	0x03CD9978 LDR X28, [X28 + 0x908]
	0x03CD997C LDR X27, [X27 + 0xE30]
	0x03CD9980 LDR X26, [X26 + 0x340]
	0x03CD9984 LDR X25, [X25 + 0x348]
	0x03CD9988 MOV X1, X31
	0x03CD998C BL 0x3C3F49C
	0x03CD9990 MOV X22, X0
	0x03CD9994 MOV X21, X31
	0x03CD9998 LDR X0, [X29]
	0x03CD999C LDR W8, [X0 + 0xE0]
	0x03CD99A0 CBNZ W8, 0x3CD99A8
	0x03CD99A4 BL 0x1C16DFC
	0x03CD99A8 MOV X0, X22
	0x03CD99AC MOV X1, X31
	0x03CD99B0 MOV X2, X31
	0x03CD99B4 BL 0x3C354F8
	0x03CD99B8 TBZ X0, 0x0, 0x3CD9A0C
	0x03CD99BC CBZ X22, 0x3CD9BD0
	0x03CD99C0 LDR X1, [X23]
	0x03CD99C4 MOV X0, X22
	0x03CD99C8 BL 0x21A3894
	0x03CD99CC LDR X8, [X29]
	0x03CD99D0 MOV X21, X0
	0x03CD99D4 LDR W9, [X8 + 0xE0]
	0x03CD99D8 CBNZ W9, 0x3CD99E4
	0x03CD99DC MOV X0, X8
	0x03CD99E0 BL 0x1C16DFC
	0x03CD99E4 MOV X0, X21
	0x03CD99E8 MOV X1, X31
	0x03CD99EC MOV X2, X31
	0x03CD99F0 BL 0x3C354F8
	0x03CD99F4 TBNZ X0, 0x0, 0x3CD9A0C
	0x03CD99F8 MOV X0, X22
	0x03CD99FC MOV X1, X31
	0x03CD9A00 BL 0x3C3F49C
	0x03CD9A04 MOV X22, X0
	0x03CD9A08 B 0x3CD9998
	0x03CD9A0C LDR X0, [X29]
	0x03CD9A10 LDR W8, [X0 + 0xE0]
	0x03CD9A14 CBNZ W8, 0x3CD9A1C
	0x03CD9A18 BL 0x1C16DFC
	0x03CD9A1C MOV X0, X21
	0x03CD9A20 MOV X1, X31
	0x03CD9A24 MOV X2, X31
	0x03CD9A28 STR X19, [X31 + 0x8]
	0x03CD9A2C BL 0x3C354F8
	0x03CD9A30 TBZ X0, 0x0, 0x3CD9AE8
	0x03CD9A34 CBZ X21, 0x3CD9BD0
	0x03CD9A38 ADRP X8, 0x47F000
	0x03CD9A3C LDR X8, [X8 + 0xAD8]
	0x03CD9A40 MOV X0, X21
	0x03CD9A44 MOV X19, X24
	0x03CD9A48 LDR X1, [X8]
	0x03CD9A4C BL 0x21A43A8
	0x03CD9A50 CBZ X0, 0x3CD9BD0
	0x03CD9A54 LDR W8, [X0 + 0x18]
	0x03CD9A58 MOV X21, X0
	0x03CD9A5C CMP W8, 0x1
	0x03CD9A60 B.LT 0x3CD9B18
	0x03CD9A64 MOV W24, W31
	0x03CD9A68 CMP W24, W8
	0x03CD9A6C B.CS 0x3CD9BD4
	0x03CD9A70 ADD X8, X21, W24, 0x3, SXTW
	0x03CD9A74 LDR X0, [X8 + 0x20]
	0x03CD9A78 CBZ X0, 0x3CD9BD0
	0x03CD9A7C MOV X1, X31
	0x03CD9A80 BL 0x33BE520
	0x03CD9A84 MOV X22, X0
	0x03CD9A88 MOV X0, X20
	0x03CD9A8C MOV X1, X22
	0x03CD9A90 MOV X2, X31
	0x03CD9A94 BL 0x3C32F80
	0x03CD9A98 LDR X8, [X29]
	0x03CD9A9C MOV X23, X0
	0x03CD9AA0 LDR W9, [X8 + 0xE0]
	0x03CD9AA4 CBNZ W9, 0x3CD9AB0
	0x03CD9AA8 MOV X0, X8
	0x03CD9AAC BL 0x1C16DFC
	0x03CD9AB0 MOV X0, X23
	0x03CD9AB4 MOV X1, X31
	0x03CD9AB8 MOV X2, X31
	0x03CD9ABC BL 0x3C3883C
	0x03CD9AC0 TBZ X0, 0x0, 0x3CD9AD4
	0x03CD9AC4 MOV X0, X20
	0x03CD9AC8 MOV X1, X22
	0x03CD9ACC MOV X2, X31
	0x03CD9AD0 BL 0x3C356B4
	0x03CD9AD4 LDR W8, [X21 + 0x18]
	0x03CD9AD8 ADD W24, W24, 0x1
	0x03CD9ADC CMP W24, W8
	0x03CD9AE0 B.LT 0x3CD9A68
	0x03CD9AE4 B 0x3CD9B18
	0x03CD9AE8 ADRP X8, 0x489000
	0x03CD9AEC LDR X8, [X8 + 0x248]
	0x03CD9AF0 MOV X19, X24
	0x03CD9AF4 LDR X0, [X8]
	0x03CD9AF8 LDR W8, [X0 + 0xE0]
	0x03CD9AFC CBNZ W8, 0x3CD9B04
	0x03CD9B00 BL 0x1C16DFC
	0x03CD9B04 ADRP X8, 0x489000
	0x03CD9B08 LDR X8, [X8 + 0x2E8]
	0x03CD9B0C MOV X0, X20
	0x03CD9B10 LDR X1, [X8]
	0x03CD9B14 BL 0x21AF6D4
	0x03CD9B18 LDR X1, [X19]
	0x03CD9B1C MOV X0, X20
	0x03CD9B20 BL 0x21E51FC
	0x03CD9B24 CBZ X0, 0x3CD9BD0
	0x03CD9B28 LDR X8, [X0]
	0x03CD9B2C FMOV S0, W31
	0x03CD9B30 FMOV S1, W31
	0x03CD9B34 FMOV S2, W31
	0x03CD9B38 LDR X9, [X8 + 0x2A8]
	0x03CD9B3C LDR X1, [X8 + 0x2B0]
	0x03CD9B40 FMOV S3, W31
	0x03CD9B44 BLR X9
	0x03CD9B48 LDR X1, [X28]
	0x03CD9B4C MOV X0, X20
	0x03CD9B50 BL 0x21E51FC
	0x03CD9B54 LDR X19, [X31 + 0x8]
	0x03CD9B58 CBZ X0, 0x3CD9BD0
	0x03CD9B5C LDR X21, [X0 + 0x100]
	0x03CD9B60 LDR X0, [X27]
	0x03CD9B64 BL 0x1C16F10
	0x03CD9B68 LDR X2, [X26]
	0x03CD9B6C MOV X1, X19
	0x03CD9B70 MOV X3, X31
	0x03CD9B74 MOV X22, X0
	0x03CD9B78 BL 0x3C45BE8
	0x03CD9B7C CBZ X21, 0x3CD9BD0
	0x03CD9B80 MOV X0, X21
	0x03CD9B84 MOV X1, X22
	0x03CD9B88 MOV X2, X31
	0x03CD9B8C BL 0x3C45C8C
	0x03CD9B90 LDR X1, [X25]
	0x03CD9B94 MOV X0, X20
	0x03CD9B98 BL 0x21E51FC
	0x03CD9B9C CBZ X0, 0x3CD9BD0
	0x03CD9BA0 MOVZ W1, 0x1
	0x03CD9BA4 MOV X2, X31
	0x03CD9BA8 BL 0x3E223A8
	0x03CD9BAC MOV X0, X20
	0x03CD9BB0 LDP X20, X19, [X31 + 0x60]
	0x03CD9BB4 LDP X22, X21, [X31 + 0x50]
	0x03CD9BB8 LDP X24, X23, [X31 + 0x40]
	0x03CD9BBC LDP X26, X25, [X31 + 0x30]
	0x03CD9BC0 LDP X28, X27, [X31 + 0x20]
	0x03CD9BC4 LDP X29, X30, [X31 + 0x10]
	0x03CD9BC8 ADD X31, X31, 0x70
	0x03CD9BCC RET
	0x03CD9BD0 BL 0x1C16F20
	0x03CD9BD4 BL 0x1C16F28
	0x03CD9BD8 STP X30, X21, [X31 - 0x20]!
	0x03CD9BDC STP X20, X19, [X31 + 0x10]
	0x03CD9BE0 ADRP X20, 0x70E000
	0x03CD9BE4 ADRP X21, 0x41A000
	0x03CD9BE8 LDRB W8, [X20 + 0x476]
	0x03CD9BEC LDR X21, [X21 + 0x598]
	0x03CD9BF0 MOV X19, X1
	0x03CD9BF4 TBNZ X8, 0x0, 0x3CD9C0C
	0x03CD9BF8 ADRP X0, 0x41A000
	0x03CD9BFC LDR X0, [X0 + 0x598]
	0x03CD9C00 BL 0x1C16CF4
	0x03CD9C04 MOVZ W8, 0x1
	0x03CD9C08 STRB W8, [X20 + 0x476]
	0x03CD9C0C LDR X0, [X21]
	0x03CD9C10 LDR W8, [X0 + 0xE0]
	0x03CD9C14 CBNZ W8, 0x3CD9C1C
	0x03CD9C18 BL 0x1C16DFC
	0x03CD9C1C MOV X0, X19
	0x03CD9C20 LDP X20, X19, [X31 + 0x10]
	0x03CD9C24 MOV X1, X31
	0x03CD9C28 LDP X30, X21, [X31], #0x20
	0x03CD9C2C B 0x3C394A8
	0x03CD9C30 STP X30, X21, [X31 - 0x20]!
	0x03CD9C34 STP X20, X19, [X31 + 0x10]
	0x03CD9C38 ADRP X21, 0x70E000
	0x03CD9C3C ADRP X20, 0x41A000
	0x03CD9C40 LDRB W8, [X21 + 0x477]
	0x03CD9C44 LDR X20, [X20 + 0x598]
	0x03CD9C48 MOV X19, X1
	0x03CD9C4C TBNZ X8, 0x0, 0x3CD9C70
	0x03CD9C50 ADRP X0, 0x41A000
	0x03CD9C54 LDR X0, [X0 + 0xD78]
	0x03CD9C58 BL 0x1C16CF4
	0x03CD9C5C ADRP X0, 0x41A000
	0x03CD9C60 LDR X0, [X0 + 0x598]
	0x03CD9C64 BL 0x1C16CF4
	0x03CD9C68 MOVZ W8, 0x1
	0x03CD9C6C STRB W8, [X21 + 0x477]
	0x03CD9C70 LDR X0, [X20]
	0x03CD9C74 ADRP X20, 0x41A000
	0x03CD9C78 LDR W8, [X0 + 0xE0]
	0x03CD9C7C LDR X20, [X20 + 0xD78]
	0x03CD9C80 CBNZ W8, 0x3CD9C88
	0x03CD9C84 BL 0x1C16DFC
	0x03CD9C88 LDR X1, [X20]
	0x03CD9C8C MOV X0, X19
	0x03CD9C90 LDP X20, X19, [X31 + 0x10]
	0x03CD9C94 LDP X30, X21, [X31], #0x20
	0x03CD9C98 B 0x222D35C
	0x03CD9C9C STP X30, X21, [X31 - 0x20]!
	0x03CD9CA0 STP X20, X19, [X31 + 0x10]
	0x03CD9CA4 ADRP X20, 0x70E000
	0x03CD9CA8 ADRP X21, 0x41A000
	0x03CD9CAC LDRB W8, [X20 + 0x478]
	0x03CD9CB0 LDR X21, [X21 + 0x598]
	0x03CD9CB4 MOV X19, X1
	0x03CD9CB8 TBNZ X8, 0x0, 0x3CD9CD0
	0x03CD9CBC ADRP X0, 0x41A000
	0x03CD9CC0 LDR X0, [X0 + 0x598]
	0x03CD9CC4 BL 0x1C16CF4
	0x03CD9CC8 MOVZ W8, 0x1
	0x03CD9CCC STRB W8, [X20 + 0x478]
	0x03CD9CD0 LDR X0, [X21]
	0x03CD9CD4 LDR W8, [X0 + 0xE0]
	0x03CD9CD8 CBNZ W8, 0x3CD9CE0
	0x03CD9CDC BL 0x1C16DFC
	0x03CD9CE0 MOV X0, X19
	0x03CD9CE4 LDP X20, X19, [X31 + 0x10]
	0x03CD9CE8 MOV X1, X31
	0x03CD9CEC LDP X30, X21, [X31], #0x20
	0x03CD9CF0 B 0x3C394A8
	0x03CD9CF4 STP X30, X21, [X31 - 0x20]!
	0x03CD9CF8 STP X20, X19, [X31 + 0x10]
	0x03CD9CFC ADRP X21, 0x70E000
	0x03CD9D00 ADRP X20, 0x41A000
	0x03CD9D04 LDRB W8, [X21 + 0x479]
	0x03CD9D08 LDR X20, [X20 + 0x598]
	0x03CD9D0C MOV X19, X1
	0x03CD9D10 TBNZ X8, 0x0, 0x3CD9D34
	0x03CD9D14 ADRP X0, 0x489000
	0x03CD9D18 LDR X0, [X0 + 0x350]
	0x03CD9D1C BL 0x1C16CF4
	0x03CD9D20 ADRP X0, 0x41A000
	0x03CD9D24 LDR X0, [X0 + 0x598]
	0x03CD9D28 BL 0x1C16CF4
	0x03CD9D2C MOVZ W8, 0x1
	0x03CD9D30 STRB W8, [X21 + 0x479]
	0x03CD9D34 LDR X0, [X20]
	0x03CD9D38 ADRP X20, 0x489000
	0x03CD9D3C LDR W8, [X0 + 0xE0]
	0x03CD9D40 LDR X20, [X20 + 0x350]
	0x03CD9D44 CBNZ W8, 0x3CD9D4C
	0x03CD9D48 BL 0x1C16DFC
	0x03CD9D4C LDR X1, [X20]
	0x03CD9D50 MOV X0, X19
	0x03CD9D54 LDP X20, X19, [X31 + 0x10]
	0x03CD9D58 LDP X30, X21, [X31], #0x20
	0x03CD9D5C B 0x222D35C
	0x03CD9D60 RET
	0x03CD9D64 STP D9, D8, [X31 - 0x30]!
	0x03CD9D68 STR X30, [X31 + 0x10]
	0x03CD9D6C STP X20, X19, [X31 + 0x20]
	0x03CD9D70 ADRP X20, 0x70E000
	0x03CD9D74 LDRB W8, [X20 + 0x47B]
	0x03CD9D78 MOV V8.16B, V1.16B
	0x03CD9D7C MOV V9.16B, V0.16B
	0x03CD9D80 MOV X19, X0
	0x03CD9D84 TBNZ X8, 0x0, 0x3CD9D9C
	0x03CD9D88 ADRP X0, 0x47F000
	0x03CD9D8C LDR X0, [X0 + 0xB98]
	0x03CD9D90 BL 0x1C16CF4
	0x03CD9D94 MOVZ W8, 0x1
	0x03CD9D98 STRB W8, [X20 + 0x47B]
	0x03CD9D9C LDR X0, [X19 + 0x148]
	0x03CD9DA0 CBZ X0, 0x3CD9DE0
	0x03CD9DA4 ADRP X8, 0x47F000
	0x03CD9DA8 LDR X8, [X8 + 0xB98]
	0x03CD9DAC LDR X1, [X8]
	0x03CD9DB0 BL 0x21E52E4
	0x03CD9DB4 CBZ X0, 0x3CD9DE0
	0x03CD9DB8 MOV X1, X31
	0x03CD9DBC BL 0x3E2226C
	0x03CD9DC0 MOV X0, X19
	0x03CD9DC4 LDP X20, X19, [X31 + 0x20]
	0x03CD9DC8 LDR X30, [X31 + 0x10]
	0x03CD9DCC MOV V1.16B, V0.16B
	0x03CD9DD0 MOV V0.16B, V9.16B
	0x03CD9DD4 MOV V2.16B, V8.16B
	0x03CD9DD8 LDP D9, D8, [X31], #0x30
	0x03CD9DDC B 0x3CD9574
	0x03CD9DE0 BL 0x1C16F20
	0x03CD9DE4 STR D8, [X31 - 0x30]!
	0x03CD9DE8 STP X30, X21, [X31 + 0x10]
	0x03CD9DEC STP X20, X19, [X31 + 0x20]
	0x03CD9DF0 ADRP X21, 0x70E000
	0x03CD9DF4 ADRP X20, 0x41A000
	0x03CD9DF8 LDRB W8, [X21 + 0x47D]
	0x03CD9DFC LDR X20, [X20 + 0x598]
	0x03CD9E00 MOV V8.16B, V0.16B
	0x03CD9E04 MOV X19, X0
	0x03CD9E08 TBNZ X8, 0x0, 0x3CD9E2C
	0x03CD9E0C ADRP X0, 0x47F000
	0x03CD9E10 LDR X0, [X0 + 0xB98]
	0x03CD9E14 BL 0x1C16CF4
	0x03CD9E18 ADRP X0, 0x41A000
	0x03CD9E1C LDR X0, [X0 + 0x598]
	0x03CD9E20 BL 0x1C16CF4
	0x03CD9E24 MOVZ W8, 0x1
	0x03CD9E28 STRB W8, [X21 + 0x47D]
	0x03CD9E2C LDR X0, [X20]
	0x03CD9E30 LDR X20, [X19 + 0x148]
	0x03CD9E34 LDR W8, [X0 + 0xE0]
	0x03CD9E38 CBNZ W8, 0x3CD9E40
	0x03CD9E3C BL 0x1C16DFC
	0x03CD9E40 MOV X0, X20
	0x03CD9E44 MOV X1, X31
	0x03CD9E48 BL 0x3C38948
	0x03CD9E4C TBZ X0, 0x0, 0x3CD9E84
	0x03CD9E50 LDR X0, [X19 + 0x148]
	0x03CD9E54 CBZ X0, 0x3CD9E94
	0x03CD9E58 ADRP X8, 0x47F000
	0x03CD9E5C LDR X8, [X8 + 0xB98]
	0x03CD9E60 LDR X1, [X8]
	0x03CD9E64 BL 0x21E52E4
	0x03CD9E68 CBZ X0, 0x3CD9E94
	0x03CD9E6C LDP X20, X19, [X31 + 0x20]
	0x03CD9E70 LDP X30, X21, [X31 + 0x10]
	0x03CD9E74 MOV V0.16B, V8.16B
	0x03CD9E78 MOV X1, X31
	0x03CD9E7C LDR V8, [X31], #0x30
	0x03CD9E80 B 0x3E222A8
	0x03CD9E84 LDP X20, X19, [X31 + 0x20]
	0x03CD9E88 LDP X30, X21, [X31 + 0x10]
	0x03CD9E8C LDR V8, [X31], #0x30
	0x03CD9E90 RET
	0x03CD9E94 BL 0x1C16F20
	0x03CD9E98 STR D8, [X31 - 0x30]!
	0x03CD9E9C STP X30, X21, [X31 + 0x10]
	0x03CD9EA0 STP X20, X19, [X31 + 0x20]
	0x03CD9EA4 ADRP X20, 0x70E000
	0x03CD9EA8 ADRP X21, 0x489000
	0x03CD9EAC LDRB W8, [X20 + 0x47F]
	0x03CD9EB0 LDR X21, [X21 + 0x358]
	0x03CD9EB4 MOV V8.16B, V0.16B
	0x03CD9EB8 MOV X19, X0
	0x03CD9EBC TBNZ X8, 0x0, 0x3CD9ED4
	0x03CD9EC0 ADRP X0, 0x489000
	0x03CD9EC4 LDR X0, [X0 + 0x358]
	0x03CD9EC8 BL 0x1C16CF4
	0x03CD9ECC MOVZ W8, 0x1
	0x03CD9ED0 STRB W8, [X20 + 0x47F]
	0x03CD9ED4 LDR X0, [X21]
	0x03CD9ED8 BL 0x1C16F10
	0x03CD9EDC MOV X1, X31
	0x03CD9EE0 MOV X20, X0
	0x03CD9EE4 BL 0x33BDD8C
	0x03CD9EE8 STR W31, [X20 + 0x10]
	0x03CD9EEC STR X19, [X20 + 0x28]
	0x03CD9EF0 STR S8, [X20 + 0x20]
	0x03CD9EF4 MOV X0, X20
	0x03CD9EF8 LDP X20, X19, [X31 + 0x20]
	0x03CD9EFC LDP X30, X21, [X31 + 0x10]
	0x03CD9F00 LDR V8, [X31], #0x30
	0x03CD9F04 RET
	0x03CD9F08 STR X30, [X31 - 0x20]!
	0x03CD9F0C STP X20, X19, [X31 + 0x10]
	0x03CD9F10 MOV W19, W1
	0x03CD9F14 MOV X1, X31
	0x03CD9F18 MOV X20, X0
	0x03CD9F1C BL 0x33BDD8C
	0x03CD9F20 STR W19, [X20 + 0x10]
	0x03CD9F24 LDP X20, X19, [X31 + 0x10]
	0x03CD9F28 LDR X30, [X31], #0x20
	0x03CD9F2C RET
	0x03CD9F30 STR X30, [X31 - 0x40]!
	0x03CD9F34 STP X24, X23, [X31 + 0x10]
	0x03CD9F38 STP X22, X21, [X31 + 0x20]
	0x03CD9F3C STP X20, X19, [X31 + 0x30]
	0x03CD9F40 ADRP X21, 0x70E000
	0x03CD9F44 LDRB W8, [X21 + 0x481]
	0x03CD9F48 MOV X20, X1
	0x03CD9F4C MOV X19, X0
	0x03CD9F50 TBNZ X8, 0x0, 0x3CD9F68
	0x03CD9F54 ADRP X0, 0x41A000
	0x03CD9F58 LDR X0, [X0 + 0x598]
	0x03CD9F5C BL 0x1C16CF4
	0x03CD9F60 MOVZ W8, 0x1
	0x03CD9F64 STRB W8, [X21 + 0x481]
	0x03CD9F68 CBZ X20, 0x3CDA060
	0x03CD9F6C LDRB W8, [X20 + 0x120]
	0x03CD9F70 CBNZ W8, 0x3CD9F84
	0x03CD9F74 MOVZ W1, 0x1
	0x03CD9F78 MOV X0, X20
	0x03CD9F7C MOV X2, X31
	0x03CD9F80 BL 0x3E47488
	0x03CD9F84 MOV X0, X20
	0x03CD9F88 MOV X1, X31
	0x03CD9F8C BL 0x3C32E90
	0x03CD9F90 CBZ X0, 0x3CDA060
	0x03CD9F94 MOV X1, X31
	0x03CD9F98 MOV X20, X0
	0x03CD9F9C BL 0x3C3F49C
	0x03CD9FA0 CBZ X0, 0x3CDA060
	0x03CD9FA4 MOV X1, X31
	0x03CD9FA8 MOV X21, X0
	0x03CD9FAC BL 0x3C40C8C
	0x03CD9FB0 CMP W0, 0x1
	0x03CD9FB4 B.LT 0x3CDA04C
	0x03CD9FB8 ADRP X24, 0x41A000
	0x03CD9FBC LDR X24, [X24 + 0x598]
	0x03CD9FC0 MOVN W22, 0x0
	0x03CD9FC4 ADD W1, W22, 0x1
	0x03CD9FC8 MOV X0, X21
	0x03CD9FCC MOV X2, X31
	0x03CD9FD0 BL 0x3C410A0
	0x03CD9FD4 LDR X8, [X24]
	0x03CD9FD8 MOV X23, X0
	0x03CD9FDC LDR W9, [X8 + 0xE0]
	0x03CD9FE0 CBNZ W9, 0x3CD9FEC
	0x03CD9FE4 MOV X0, X8
	0x03CD9FE8 BL 0x1C16DFC
	0x03CD9FEC MOV X0, X23
	0x03CD9FF0 MOV X1, X20
	0x03CD9FF4 MOV X2, X31
	0x03CD9FF8 BL 0x3C3883C
	0x03CD9FFC TBNZ X0, 0x0, 0x3CDA020
	0x03CDA000 MOV X0, X21
	0x03CDA004 MOV X1, X31
	0x03CDA008 BL 0x3C40C8C
	0x03CDA00C ADD W8, W22, 0x2
	0x03CDA010 ADD W22, W22, 0x1
	0x03CDA014 CMP W8, W0
	0x03CDA018 B.LT 0x3CD9FC4
	0x03CDA01C B 0x3CDA04C
	0x03CDA020 TBNZ X22, 0x1F, 0x3CDA04C
	0x03CDA024 MOVZ W2, 0x1
	0x03CDA028 MOV X0, X19
	0x03CDA02C MOV W1, W22
	0x03CDA030 BL 0x3CD74E8
	0x03CDA034 MOV X0, X19
	0x03CDA038 LDP X20, X19, [X31 + 0x30]
	0x03CDA03C LDP X22, X21, [X31 + 0x20]
	0x03CDA040 LDP X24, X23, [X31 + 0x10]
	0x03CDA044 LDR X30, [X31], #0x40
	0x03CDA048 B 0x3CD918C
	0x03CDA04C LDP X20, X19, [X31 + 0x30]
	0x03CDA050 LDP X22, X21, [X31 + 0x20]
	0x03CDA054 LDP X24, X23, [X31 + 0x10]
	0x03CDA058 LDR X30, [X31], #0x40
	0x03CDA05C RET
	0x03CDA060 BL 0x1C16F20
	0x03CDA064 STP X30, X21, [X31 - 0x20]!
	0x03CDA068 STP X20, X19, [X31 + 0x10]
	0x03CDA06C ADRP X19, 0x70D000
	0x03CDA070 ADRP X21, 0x440000
	0x03CDA074 ADRP X20, 0x488000
	0x03CDA078 LDRB W8, [X19 + 0x482]
	0x03CDA07C LDR X21, [X21 + 0xCE0]
	0x03CDA080 LDR X20, [X20 + 0x248]
	0x03CDA084 TBNZ X8, 0x0, 0x3CDA0A8
	0x03CDA088 ADRP X0, 0x488000
	0x03CDA08C LDR X0, [X0 + 0x248]
	0x03CDA090 BL 0x1C16CF4
	0x03CDA094 ADRP X0, 0x440000
	0x03CDA098 LDR X0, [X0 + 0xCE0]
	0x03CDA09C BL 0x1C16CF4
	0x03CDA0A0 MOVZ W8, 0x1
	0x03CDA0A4 STRB W8, [X19 + 0x482]
	0x03CDA0A8 LDR X0, [X21]
	0x03CDA0AC BL 0x1C16F10
	0x03CDA0B0 MOV X1, X31
	0x03CDA0B4 MOV X19, X0
	0x03CDA0B8 BL 0x33BDD8C
	0x03CDA0BC LDR X8, [X20]
	0x03CDA0C0 LDR X8, [X8 + 0xB8]
	0x03CDA0C4 STR X19, [X8]
	0x03CDA0C8 LDP X20, X19, [X31 + 0x10]
	0x03CDA0CC LDP X30, X21, [X31], #0x20
	0x03CDA0D0 RET
	0x03CDA0D4 LDR X0, [X0 + 0x20]
	0x03CDA0D8 RET
	0x03CDA0DC STR X1, [X0 + 0x20]
	0x03CDA0E0 RET
	0x03CDA0E4 LDR X0, [X0 + 0x28]
	0x03CDA0E8 RET
	0x03CDA0EC STR X1, [X0 + 0x28]
	0x03CDA0F0 RET
	0x03CDA0F4 LDR X0, [X0 + 0x30]
	0x03CDA0F8 RET
	0x03CDA0FC STR X1, [X0 + 0x30]
	0x03CDA100 RET
	0x03CDA104 LDR X0, [X0 + 0x38]
	0x03CDA108 RET
	0x03CDA10C STR X1, [X0 + 0x38]
	0x03CDA110 RET
	0x03CDA114 STP X30, X21, [X31 - 0x20]!
	0x03CDA118 STP X20, X19, [X31 + 0x10]
	0x03CDA11C ADRP X20, 0x70D000
	0x03CDA120 ADRP X21, 0x440000
	0x03CDA124 LDRB W8, [X20 + 0x483]
	0x03CDA128 LDR X21, [X21 + 0xDF8]
	0x03CDA12C MOV X19, X0
	0x03CDA130 TBNZ X8, 0x0, 0x3CDA148
	0x03CDA134 ADRP X0, 0x440000
	0x03CDA138 LDR X0, [X0 + 0xDF8]
	0x03CDA13C BL 0x1C16CF4
	0x03CDA140 MOVZ W8, 0x1
	0x03CDA144 STRB W8, [X20 + 0x483]
	0x03CDA148 LDR X0, [X21]
	0x03CDA14C LDR W8, [X0 + 0xE0]
	0x03CDA150 CBNZ W8, 0x3CDA158
	0x03CDA154 BL 0x1C16DFC
	0x03CDA158 MOV X0, X31
	0x03CDA15C BL 0x3E4FF90
	0x03CDA160 MOV X20, X0
	0x03CDA164 MOV X0, X19
	0x03CDA168 MOV X1, X31
	0x03CDA16C BL 0x3C32ECC
	0x03CDA170 CBZ X20, 0x3CDA18C
	0x03CDA174 MOV X1, X0
	0x03CDA178 MOV X0, X20
	0x03CDA17C LDP X20, X19, [X31 + 0x10]
	0x03CDA180 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+192], D15
	003 Move [X31+200], D14
	004 Move [X31+208], D13
	005 Move [X31+216], D12
	006 Move [X31+224], D11
	007 Move [X31+232], D10
	008 Move [X31+240], D9
	009 Move [X31+248], D8
	010 Move [X31+256], X29
	011 Move [X31+264], X30
	012 Move [X31+272], X28
	013 Move [X31+280], X27
	014 Move [X31+288], X26
	015 Move [X31+296], X25
	016 Move [X31+304], X24
	017 Move [X31+312], X23
	018 Move [X31+320], X22
	019 Move [X31+328], X21
	020 Move [X31+336], X20
	021 Move [X31+344], X19
	022 NotImplemented "Instruction MRS not yet implemented."
	023 Move X8, [X29+40]
	024 Move X20, 0x70F000
	025 Move X28, X0
	026 Move [X31+184], X8
	027 Move W8, [X20+1140]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {97}
	032 Move X0, 0x48A000
	033 Move X0, [X0+760]
	034 Call 0x1C17CF4
	035 Move X0, 0x48A000
	036 Move X0, [X0+768]
	037 Call 0x1C17CF4
	038 Move X0, 0x48A000
	039 Move X0, [X0+776]
	040 Call 0x1C17CF4
	041 Move X0, 0x48A000
	042 Move X0, [X0+784]
	043 Call 0x1C17CF4
	044 Move X0, 0x480000
	045 Move X0, [X0+1896]
	046 Call 0x1C17CF4
	047 Move X0, 0x48A000
	048 Move X0, [X0+696]
	049 Call 0x1C17CF4
	050 Move X0, 0x48A000
	051 Move X0, [X0+592]
	052 Call 0x1C17CF4
	053 Move X0, 0x48A000
	054 Move X0, [X0+704]
	055 Call 0x1C17CF4
	056 Move X0, 0x480000
	057 Move X0, [X0+1904]
	058 Call 0x1C17CF4
	059 Move X0, 0x48A000
	060 Move X0, [X0+712]
	061 Call 0x1C17CF4
	062 Move X0, 0x480000
	063 Move X0, [X0+1912]
	064 Call 0x1C17CF4
	065 Move X0, 0x48A000
	066 Move X0, [X0+600]
	067 Call 0x1C17CF4
	068 Move X0, 0x41B000
	069 Move X0, [X0+1432]
	070 Call 0x1C17CF4
	071 Move X0, 0x471000
	072 Move X0, [X0+1720]
	073 Call 0x1C17CF4
	074 Move X0, 0x442000
	075 Move X0, [X0+3184]
	076 Call 0x1C17CF4
	077 Move X0, 0x48A000
	078 Move X0, [X0+792]
	079 Call 0x1C17CF4
	080 Move X0, 0x48A000
	081 Move X0, [X0+800]
	082 Call 0x1C17CF4
	083 Move X0, 0x47B000
	084 Move X0, [X0+2608]
	085 Call 0x1C17CF4
	086 Move X0, 0x47B000
	087 Move X0, [X0+2616]
	088 Call 0x1C17CF4
	089 Move X0, 0x41D000
	090 Move X0, [X0+2480]
	091 Call 0x1C17CF4
	092 Move X0, 0x480000
	093 Move X0, [X0+2880]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X20+1140], W8
	097 Move [X31+176], W31
	098 Move [X31+168], X31
	099 Move X8, [X28]
	100 Move X0, X28
	101 Move X9, [X8+456]
	102 Move X1, [X8+464]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {824}
	108 Move X8, [X28]
	109 Move X0, X28
	110 Move X9, [X8+696]
	111 Move X1, [X8+704]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {824}
	117 Move X8, 0x41B000
	118 Move X8, [X8+1432]
	119 Move X20, [X28+328]
	120 Move X0, [X8]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X20
	126 Move X1, X31
	127 Move X2, X31
	128 Call Object.op_Inequality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {824}
	133 Move X20, 0x48A000
	134 Move X20, [X20+776]
	135 Move X0, [X20]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X8, 0x48A000
	141 Move X8, [X8+760]
	142 Move X0, [X8]
	143 Call CollectionPool`2<Object, Object>.Get
	144 Move X21, X0
	145 Move X0, X28
	146 Move X1, X31
	147 Call Component.get_gameObject, X0
	148 Compare X0, 0
	149 JumpIfEqual {793}
	150 Move X8, 0x480000
	151 Move X8, [X8+1896]
	152 Move W1, W31
	153 Move X2, X21
	154 Move X3, [X8]
	155 Call 0x21E74C8, X0, X1, X2
	156 Compare X21, 0
	157 JumpIfEqual {793}
	158 Move W19, [X21+24]
	159 Compare W19, 0
	160 JumpIfEqual {824}
	161 Move X23, 0x480000
	162 Move X23, [X23+1912]
	163 Subtract W1, W19, 1
	164 Move X0, X21
	165 Move X2, [X23]
	166 Call List`1<Object>.get_Item, X0, X1
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X24, X0
	169 Move W22, W31
	170 Move X2, [X23]
	171 Move X0, X21
	172 Move W1, W22
	173 Call List`1<Object>.get_Item, X0, X1
	174 Compare X0, 0
	175 JumpIfEqual {793}
	176 Move X1, X31
	177 Call Canvas.get_isRootCanvas, X0
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {196}
	182 Move X2, [X23]
	183 Move X0, X21
	184 Move W1, W22
	185 Call List`1<Object>.get_Item, X0, X1
	186 Compare X0, 0
	187 JumpIfEqual {793}
	188 Move X1, X31
	189 Call Canvas.get_overrideSorting, X0
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {196}
	194 Add W22, W22, 1
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X2, [X23]
	197 Move X0, X21
	198 Move W1, W22
	199 Call List`1<Object>.get_Item, X0, X1
	200 Move X24, X0
	201 Move X0, [X20]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move X8, 0x48A000
	207 Move X8, [X8+768]
	208 Move X0, X21
	209 Move X1, [X8]
	210 Call CollectionPool`2<Object, Object>.Release, X0
	211 Move W8, [X28+360]
	212 Compare W8, 0
	213 JumpIfNotEqual {220}
	214 Move X0, X28
	215 Move X1, X24
	216 Call Dropdown.SetupTemplate, X0, X1
	217 Move W8, [X28+360]
	218 Compare W8, 0
	219 JumpIfEqual {824}
	220 Move X0, [X28+256]
	221 Compare X0, 0
	222 JumpIfEqual {793}
	223 Move X1, X31
	224 Call Component.get_gameObject, X0
	225 Compare X0, 0
	226 JumpIfEqual {793}
	227 Move W1, 1
	228 Move X2, X31
	229 Call GameObject.SetActive, X0, X1
	230 Move X0, [X28+256]
	231 Compare X0, 0
	232 JumpIfEqual {793}
	233 Move X1, X31
	234 Call Component.get_gameObject, X0
	235 Move X8, [X28]
	236 Move X1, X0
	237 Move X0, X28
	238 Move X9, [X8+1064]
	239 Move X2, [X8+1072]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move [X28+328], X0
	242 Compare X0, 0
	243 JumpIfEqual {793}
	244 Move X8, 0x480000
	245 Move X8, [X8+2880]
	246 Move X2, X31
	247 Move X1, [X8]
	248 Call Object.set_name, X0, X1
	249 Move X0, [X28+328]
	250 Compare X0, 0
	251 JumpIfEqual {793}
	252 Move W1, 1
	253 Move X2, X31
	254 Call GameObject.SetActive, X0, X1
	255 Move X0, [X28+328]
	256 Compare X0, 0
	257 JumpIfEqual {793}
	258 Move X1, X31
	259 Call GameObject.get_transform, X0
	260 Compare X0, 0
	261 JumpIfEqual {268}
	262 Move X8, 0x442000
	263 Move X8, [X8+3184]
	264 Move X9, [X0]
	265 Move X8, [X8]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CSEL not yet implemented."
	268 Move X20, X31
	269 Move X0, [X28+256]
	270 Compare X0, 0
	271 JumpIfEqual {793}
	272 Move X1, X31
	273 Call Component.get_transform, X0
	274 Compare X0, 0
	275 JumpIfEqual {793}
	276 Move X1, X31
	277 Call Transform.get_parent, X0
	278 Compare X20, 0
	279 JumpIfEqual {793}
	280 Move X1, X0
	281 Move X0, X20
	282 Move W2, W31
	283 Move X3, X31
	284 Call Transform.SetParent, X0, X1, X2
	285 Move X0, [X28+328]
	286 Compare X0, 0
	287 JumpIfEqual {793}
	288 Move X8, 0x48A000
	289 Move X8, [X8+784]
	290 Move X1, [X8]
	291 Call 0x21E6548, X0
	292 Compare X0, 0
	293 JumpIfEqual {793}
	294 Move X19, X0
	295 Move X0, [X0+48]
	296 Compare X0, 0
	297 JumpIfEqual {793}
	298 Move X1, X31
	299 Call Transform.get_parent, X0
	300 Compare X0, 0
	301 JumpIfEqual {793}
	302 Move X1, X31
	303 Call Component.get_gameObject, X0
	304 Compare X0, 0
	305 JumpIfEqual {793}
	306 Move X1, X31
	307 Call GameObject.get_transform, X0
	308 Compare X0, 0
	309 JumpIfEqual {316}
	310 Move X8, 0x442000
	311 Move X8, [X8+3184]
	312 Move X9, [X0]
	313 Move X8, [X8]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 NotImplemented "Instruction CSEL not yet implemented."
	316 Move X21, X31
	317 Move X0, [X19+48]
	318 Compare X0, 0
	319 JumpIfEqual {793}
	320 Move X1, X31
	321 Call Component.get_gameObject, X0
	322 Compare X0, 0
	323 JumpIfEqual {793}
	324 Move W1, 1
	325 Move X2, X31
	326 Call GameObject.SetActive, X0, X1
	327 Compare X21, 0
	328 JumpIfEqual {793}
	329 Move X0, X21
	330 Move X1, X31
	331 Call RectTransform.get_rect, X0
	332 Move X0, [X19+48]
	333 Compare X0, 0
	334 JumpIfEqual {793}
	335 Move X1, X31
	336 Move V9, V1
	337 Move V10, V3
	338 Call RectTransform.get_rect, X0
	339 Move X0, [X19+48]
	340 Compare X0, 0
	341 JumpIfEqual {793}
	342 Move X1, X31
	343 Move V11, V1
	344 Move V14, V3
	345 Call Transform.get_localPosition, X0
	346 Move X0, [X19+48]
	347 Compare X0, 0
	348 JumpIfEqual {793}
	349 Move X1, X31
	350 Move V12, V1
	351 Call Transform.get_localPosition, X0
	352 Move X8, [X28+344]
	353 Compare X8, 0
	354 JumpIfEqual {793}
	355 Move W2, [X8+24]
	356 Move W9, [X8+28]
	357 Move V13, V1
	358 Add W9, W9, 1
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move [X8+24], W31
	361 Move [X8+28], W9
	362 Move X0, [X8+16]
	363 Move W1, W31
	364 Move X3, X31
	365 Call Array.Clear, X0, X1, X2
	366 Move X8, [X28+304]
	367 Move [X31+80], X21
	368 Move [X31+32], X24
	369 Compare X8, 0
	370 JumpIfEqual {793}
	371 Move X8, [X8+16]
	372 Move [X31+56], X20
	373 Compare X8, 0
	374 JumpIfEqual {793}
	375 Move W20, [X8+24]
	376 Move [X31+40], X19
	377 Move [X31+48], X28
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X23, 0x48A000
	380 Move X22, 0x48A000
	381 Move X23, [X23+800]
	382 Move X22, [X22+600]
	383 Add X8, X31, 128
	384 Move X25, X31
	385 Move W24, W31
	386 Or X21, X8, 7
	387 Move X0, [X23]
	388 Call 0x1C17F10
	389 Move X1, X31
	390 Move X26, X0
	391 Call Object..ctor, X0
	392 Compare X26, 0
	393 JumpIfEqual {793}
	394 Move [X26+24], X28
	395 Move X8, [X28+304]
	396 Compare X8, 0
	397 JumpIfEqual {793}
	398 Move X0, [X8+16]
	399 Compare X0, 0
	400 JumpIfEqual {793}
	401 Move X2, [X22]
	402 Move W1, W24
	403 Call List`1<Object>.get_Item, X0, X1
	404 Move X4, [X28+344]
	405 Move X1, X0
	406 Move X0, X28
	407 Move W2, W31
	408 Move X3, X19
	409 Call Dropdown.AddItem, X0, X1, X2, X3, X4
	410 Move [X26+16], X0
	411 Move X8, 0x41B000
	412 Move X8, [X8+1432]
	413 Move X27, X0
	414 Move X0, [X8]
	415 Move W8, [X0+224]
	416 Compare W8, 0
	417 JumpIfNotEqual {419}
	418 Call 0x1C17DFC
	419 Move X0, X27
	420 Move X1, X31
	421 Move X2, X31
	422 Call Object.op_Equality, X0, X1
	423 Move TEMP, X0
	424 And TEMP, TEMP, 1
	425 Compare TEMP, 1
	426 JumpIfEqual {544}
	427 Move X8, [X26+16]
	428 Compare X8, 0
	429 JumpIfEqual {793}
	430 Move X0, [X8+56]
	431 Compare X0, 0
	432 JumpIfEqual {793}
	433 Move W8, [X28+296]
	434 Move X2, X31
	435 NotImplemented "Instruction CMP not yet implemented."
	436 NotImplemented "Instruction CSET not yet implemented."
	437 Call Toggle.set_isOn, X0, X1
	438 Move X8, [X26+16]
	439 Compare X8, 0
	440 JumpIfEqual {793}
	441 Move X8, [X8+56]
	442 Compare X8, 0
	443 JumpIfEqual {793}
	444 Move X27, [X8+280]
	445 Move X8, 0x47B000
	446 Move X8, [X8+2608]
	447 Move X0, [X8]
	448 Call 0x1C17F10
	449 Move X8, 0x48A000
	450 Move X8, [X8+792]
	451 Move X1, X26
	452 Move X3, X31
	453 Move X28, X0
	454 Move X2, [X8]
	455 Call 0x27269E8, X0, X1, X2
	456 Compare X27, 0
	457 JumpIfEqual {793}
	458 Move X8, 0x47B000
	459 Move X8, [X8+2616]
	460 Move X0, X27
	461 Move X1, X28
	462 Move X2, [X8]
	463 Call 0x27298B4, X0, X1
	464 Move X8, [X26+16]
	465 Compare X8, 0
	466 JumpIfEqual {793}
	467 Move X0, [X8+56]
	468 Move X28, [X31+48]
	469 Compare X0, 0
	470 JumpIfEqual {793}
	471 Move W8, [X0+288]
	472 Compare W8, 0
	473 JumpIfEqual {478}
	474 Move X8, [X0]
	475 Move X9, [X8+920]
	476 Move X1, [X8+928]
	477 NotImplemented "Instruction BLR not yet implemented."
	478 Move X8, 0x41B000
	479 Move X8, [X8+1432]
	480 Move X0, [X8]
	481 Move W8, [X0+224]
	482 Compare W8, 0
	483 JumpIfNotEqual {485}
	484 Call 0x1C17DFC
	485 Move X0, X25
	486 Move X1, X31
	487 Move X2, X31
	488 Call Object.op_Inequality, X0, X1
	489 Move TEMP, X0
	490 And TEMP, TEMP, 1
	491 Compare TEMP, 1
	492 JumpIfNotEqual {540}
	493 Compare X25, 0
	494 JumpIfEqual {793}
	495 Move W8, [X25+52]
	496 NotImplemented "Instruction LDUR not yet implemented."
	497 Move [X31+176], W8
	498 Move [X31+168], X9
	499 Move X8, [X26+16]
	500 Compare X8, 0
	501 JumpIfEqual {793}
	502 Move X8, [X8+56]
	503 Compare X8, 0
	504 JumpIfEqual {793}
	505 Move W10, [X31+176]
	506 Move X9, [X25+64]
	507 Move X11, [X31+168]
	508 Move W19, [X8+44]
	509 Move X28, [X8+56]
	510 Move X27, [X8+72]
	511 Move [X21+8], W10
	512 Move W10, 4
	513 Add X1, X31, 128
	514 Move X0, X25
	515 Move X2, X31
	516 Move [X21], X11
	517 Move [X31+128], W10
	518 Move [X31+144], X8
	519 Move [X31+152], X9
	520 Move [X31+160], X8
	521 Call Selectable.set_navigation, X0, X1
	522 Move X8, [X26+16]
	523 Compare X8, 0
	524 JumpIfEqual {793}
	525 Move X0, [X8+56]
	526 Compare X0, 0
	527 JumpIfEqual {793}
	528 Move W8, 4
	529 Add X1, X31, 88
	530 Move X2, X31
	531 Move [X31+88], W8
	532 Move [X31+92], W19
	533 Move [X31+96], X25
	534 Move [X31+104], X28
	535 Move [X31+112], X25
	536 Move [X31+120], X27
	537 Call Selectable.set_navigation, X0, X1
	538 Move X19, [X31+40]
	539 Move X28, [X31+48]
	540 Move X8, [X26+16]
	541 Compare X8, 0
	542 JumpIfEqual {793}
	543 Move X25, [X8+56]
	544 Add W24, W24, 1
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Move X19, [X31+80]
	547 Move X1, X31
	548 Move X0, X19
	549 Call RectTransform.get_sizeDelta, X0
	550 Move X8, [X28+344]
	551 Compare X8, 0
	552 JumpIfEqual {793}
	553 Move V4, [X8+24]
	554 Add S1, S14, S11
	555 Add S2, S10, S9
	556 Subtract S3, S11, S9
	557 Subtract S1, S1, S2
	558 NotImplemented "Instruction SCVTF not yet implemented."
	559 Add S10, S3, S12
	560 Multiply S2, S14, S2
	561 Add S1, S1, S13
	562 Add S2, S10, S2
	563 Subtract S1, S2, S1
	564 Move X0, X19
	565 Move X1, X31
	566 Call RectTransform.set_sizeDelta, X0, X1
	567 Move X20, [X31+56]
	568 Move X1, X31
	569 Move X0, X20
	570 Call RectTransform.get_rect, X0
	571 Move X0, X19
	572 Move X1, X31
	573 Move V9, V3
	574 Call RectTransform.get_rect, X0
	575 Move X19, [X31+32]
	576 Subtract S8, S9, S3
	577 NotImplemented "Instruction FCMP not yet implemented."
	578 Move X0, X20
	579 Move X1, X31
	580 Call RectTransform.get_sizeDelta, X0
	581 Move X0, X20
	582 Move X1, X31
	583 Move V9, V0
	584 Call RectTransform.get_sizeDelta, X0
	585 Subtract S1, S1, S8
	586 Move X0, X20
	587 Move V0, V9
	588 Move X1, X31
	589 Call RectTransform.set_sizeDelta, X0, X1
	590 Move X8, 0x41D000
	591 Move X8, [X8+2480]
	592 Move W1, 4
	593 Move X0, [X8]
	594 Call 0x1C17D6C
	595 Move X23, X0
	596 Move X0, X20
	597 Move X1, X23
	598 Move X2, X31
	599 Call RectTransform.GetWorldCorners, X0, X1
	600 Compare X19, 0
	601 JumpIfEqual {793}
	602 Move X0, X19
	603 Move X1, X31
	604 Call Component.get_transform, X0
	605 Compare X0, 0
	606 JumpIfEqual {793}
	607 Move X8, 0x442000
	608 Move X8, [X8+3184]
	609 Move X9, [X0]
	610 Move X24, X0
	611 Move X8, [X8]
	612 NotImplemented "Instruction CMP not yet implemented."
	613 Move X0, X24
	614 Move X1, X31
	615 Move [X31+16], S10
	616 Move [X31+24], S14
	617 Move [X31+24], X29
	618 Call RectTransform.get_rect, X0
	619 Compare X23, 0
	620 JumpIfEqual {793}
	621 Add S4, S2, S0
	622 Add S2, S3, S1
	623 Move [X31+76], S2
	624 Move [X31+84], S4
	625 Move X26, 0x422000
	626 Move X8, -52355072
	627 Move X26, [X26+1208]
	628 Move V14, [X8+576]
	629 Move W25, W31
	630 Add X19, X23, 40
	631 Move W21, 1
	632 Move X22, 0x701000
	633 Move W29, 1
	634 Move [X31+68], S1
	635 Move [X31+76], S0
	636 And W31, W29, 1
	637 NotImplemented "Instruction FCSEL not yet implemented."
	638 Move S1, [X31+76]
	639 Move S0, [X31+80]
	640 Move X27, X31
	641 Move W28, W25
	642 NotImplemented "Instruction FABS not yet implemented."
	643 NotImplemented "Instruction FCSEL not yet implemented."
	644 NotImplemented "Instruction FABS not yet implemented."
	645 Move X20, X19
	646 Move W8, [X23+24]
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Move S0, [X20-8]
	649 Move S1, [X20-4]
	650 Move V2, [X20]
	651 Move X0, X24
	652 Move X1, X31
	653 Call Transform.InverseTransformPoint, X0, X1
	654 And W31, W29, 1
	655 Move V11, V0
	656 NotImplemented "Instruction FCSEL not yet implemented."
	657 Move V12, V1
	658 NotImplemented "Instruction FCMP not yet implemented."
	659 Move W8, [X22+1450]
	660 And W31, W29, 1
	661 NotImplemented "Instruction FCSEL not yet implemented."
	662 Compare W8, 0
	663 JumpIfNotEqual {667}
	664 Move X0, X26
	665 Call 0x1C17CF4
	666 Move [X22+1450], W21
	667 Move X8, [X26]
	668 NotImplemented "Instruction FABS not yet implemented."
	669 NotImplemented "Instruction FCMP not yet implemented."
	670 NotImplemented "Instruction FCSEL not yet implemented."
	671 Move X8, [X8+184]
	672 Move S2, 8
	673 Multiply S0, S0, S14
	674 Move V1, [X8]
	675 Multiply S1, S1, S2
	676 NotImplemented "Instruction FCMP not yet implemented."
	677 NotImplemented "Instruction FCSEL not yet implemented."
	678 NotImplemented "Instruction FABD not yet implemented."
	679 NotImplemented "Instruction FCMP not yet implemented."
	680 And W31, W29, 1
	681 NotImplemented "Instruction FCSEL not yet implemented."
	682 NotImplemented "Instruction FCMP not yet implemented."
	683 Move W8, [X22+1450]
	684 And W31, W29, 1
	685 NotImplemented "Instruction FCSEL not yet implemented."
	686 Compare W8, 0
	687 JumpIfNotEqual {691}
	688 Move X0, X26
	689 Call 0x1C17CF4
	690 Move [X22+1450], W21
	691 Move X8, [X26]
	692 NotImplemented "Instruction FABS not yet implemented."
	693 NotImplemented "Instruction FCMP not yet implemented."
	694 NotImplemented "Instruction FCSEL not yet implemented."
	695 Move X8, [X8+184]
	696 Move S2, 8
	697 Multiply S0, S0, S14
	698 Move V1, [X8]
	699 Multiply S1, S1, S2
	700 NotImplemented "Instruction FCMP not yet implemented."
	701 NotImplemented "Instruction FCSEL not yet implemented."
	702 NotImplemented "Instruction FABD not yet implemented."
	703 NotImplemented "Instruction FCMP not yet implemented."
	704 Add X27, X27, 1
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Add X20, X20, 12
	707 Move X8, 0x471000
	708 Move X8, [X8+1720]
	709 Move X0, [X8]
	710 Move W8, [X0+224]
	711 Compare W8, 0
	712 JumpIfNotEqual {714}
	713 Call 0x1C17DFC
	714 Move X0, [X31+56]
	715 Move W1, W25
	716 Move W2, W31
	717 Move W3, W31
	718 Move X4, X31
	719 Call RectTransformUtility.FlipLayoutOnAxis, X0, X1, X2, X3
	720 Move S1, [X31+68]
	721 Move S0, [X31+72]
	722 Move W29, W31
	723 Move W25, 1
	724 Move TEMP, X28
	725 And TEMP, TEMP, 1
	726 Compare TEMP, 1
	727 JumpIfNotEqual {636}
	728 Move X19, [X31+48]
	729 Move X0, [X19+344]
	730 Compare X0, 0
	731 JumpIfEqual {793}
	732 Move W8, [X0+24]
	733 Move X29, [X31+24]
	734 Move X24, [X31+32]
	735 Move S10, [X31+16]
	736 Move S8, [X31+20]
	737 Subtract W20, W8, 1
	738 Move X21, 0x489000
	739 Move X21, [X21+712]
	740 Move W22, W31
	741 Move X2, [X21]
	742 Move W1, W22
	743 Call List`1<Object>.get_Item, X0, X1
	744 Compare X0, 0
	745 JumpIfEqual {793}
	746 Move X23, [X0+48]
	747 Compare X23, 0
	748 JumpIfEqual {793}
	749 Move X0, X23
	750 Move X1, X31
	751 Call RectTransform.get_anchorMin, X0
	752 Move S1, W31
	753 Move X0, X23
	754 Move X1, X31
	755 Call RectTransform.set_anchorMin, X0, X1
	756 Move X0, X23
	757 Move X1, X31
	758 Call RectTransform.get_anchorMax, X0
	759 Move S1, W31
	760 Move X0, X23
	761 Move X1, X31
	762 Call RectTransform.set_anchorMax, X0, X1
	763 Move X0, X23
	764 Move X1, X31
	765 Call RectTransform.get_anchoredPosition, X0
	766 Move X0, X23
	767 Move X1, X31
	768 Move V9, V0
	769 Call RectTransform.get_pivot, X0
	770 NotImplemented "Instruction SCVTF not yet implemented."
	771 Multiply S0, S8, S0
	772 Add S0, S10, S0
	773 Multiply S1, S8, S1
	774 Add S1, S0, S1
	775 Move X0, X23
	776 Move V0, V9
	777 Move X1, X31
	778 Call RectTransform.set_anchoredPosition, X0, X1
	779 Move X0, X23
	780 Move X1, X31
	781 Call RectTransform.get_sizeDelta, X0
	782 Move X0, X23
	783 Move V1, V8
	784 Move X1, X31
	785 Call RectTransform.set_sizeDelta, X0, X1
	786 Compare W20, 0
	787 JumpIfEqual {794}
	788 Move X0, [X19+344]
	789 Add W22, W22, 1
	790 Subtract W20, W20, 1
	791 Compare X0, 0
	792 JumpIfNotEqual {741}
	793 Call 0x1C17F20
	794 Move V0, [X19+320]
	795 Move S1, W31
	796 Move S2, 1
	797 Move X0, X19
	798 Call Dropdown.AlphaFadeList, X0, V0, V1, V2
	799 Move X0, [X19+256]
	800 Compare X0, 0
	801 JumpIfEqual {793}
	802 Move X1, X31
	803 Call Component.get_gameObject, X0
	804 Compare X0, 0
	805 JumpIfEqual {793}
	806 Move W1, W31
	807 Move X2, X31
	808 Call GameObject.SetActive, X0, X1
	809 Move X0, [X31+40]
	810 Move X1, X31
	811 Call Component.get_gameObject, X0
	812 Compare X0, 0
	813 JumpIfEqual {793}
	814 Move W1, W31
	815 Move X2, X31
	816 Call GameObject.SetActive, X0, X1
	817 Move X8, [X19]
	818 Move X0, X19
	819 Move X1, X24
	820 Move X9, [X8+1032]
	821 Move X2, [X8+1040]
	822 NotImplemented "Instruction BLR not yet implemented."
	823 Move [X19+336], X0
	824 Move X8, [X29+40]
	825 Move X9, [X31+184]
	826 NotImplemented "Instruction CMP not yet implemented."
	827 Move X20, [X31+336]
	828 Move X19, [X31+344]
	829 Move X22, [X31+320]
	830 Move X21, [X31+328]
	831 Move X24, [X31+304]
	832 Move X23, [X31+312]
	833 Move X26, [X31+288]
	834 Move X25, [X31+296]
	835 Move X28, [X31+272]
	836 Move X27, [X31+280]
	837 Move X29, [X31+256]
	838 Move X30, [X31+264]
	839 Move D9, [X31+240]
	840 Move D8, [X31+248]
	841 Move D11, [X31+224]
	842 Move D10, [X31+232]
	843 Move D13, [X31+208]
	844 Move D12, [X31+216]
	845 Move D15, [X31+192]
	846 Move D14, [X31+200]
	847 Add X31, X31, 352
	848 Return 
	849 Call 0x1C17F28
	850 Call 0x3EB2B20

Method: UnityEngine.GameObject CreateBlocker(UnityEngine.Canvas rootCanvas)

Disassembly:
	0x03CDA694 BL 0x2AA6B2C
	0x03CDA698 LDR X0, [X31 + 0x8]
	0x03CDA69C CBNZ X0, 0x3CDA784
	0x03CDA6A0 LDR X0, [X21]
	0x03CDA6A4 LDR W8, [X0 + 0xE0]
	0x03CDA6A8 CBNZ W8, 0x3CDA6B4
	0x03CDA6AC BL 0x1C16DFC
	0x03CDA6B0 LDR X0, [X21]
	0x03CDA6B4 LDR X8, [X0 + 0xB8]
	0x03CDA6B8 LDR X0, [X8]
	0x03CDA6BC CBZ X0, 0x3CDA7A8
	0x03CDA6C0 ADRP X8, 0x488000
	0x03CDA6C4 LDR X8, [X8 + 0x388]
	0x03CDA6C8 LDR X1, [X8]
	0x03CDA6CC BL 0x2AA4E88
	0x03CDA6D0 CBNZ W0, 0x3CDA70C
	0x03CDA6D4 ADRP X8, 0x487000
	0x03CDA6D8 LDR X8, [X8 + 0xFF0]
	0x03CDA6DC LDR X0, [X8]
	0x03CDA6E0 BL 0x1C16F10
	0x03CDA6E4 ADRP X8, 0x488000
	0x03CDA6E8 LDR X8, [X8 + 0x390]
	0x03CDA6EC MOV X1, X31
	0x03CDA6F0 MOV X3, X31
	0x03CDA6F4 MOV X20, X0
	0x03CDA6F8 LDR X2, [X8]
	0x03CDA6FC BL 0x2A6B948
	0x03CDA700 MOV X0, X20
	0x03CDA704 MOV X1, X31
	0x03CDA708 BL 0x3CCFBA0
	0x03CDA70C ADRP X8, 0x488000
	0x03CDA710 LDR X8, [X8 + 0x3B0]
	0x03CDA714 LDR X0, [X8]
	0x03CDA718 BL 0x1C16F10
	0x03CDA71C ADRP X8, 0x488000
	0x03CDA720 LDR X8, [X8 + 0x3A8]
	0x03CDA724 MOV X20, X0
	0x03CDA728 LDR X1, [X8]
	0x03CDA72C BL 0x2DBDE08
	0x03CDA730 LDR X0, [X21]
	0x03CDA734 STR X20, [X31 + 0x8]
	0x03CDA738 LDR W8, [X0 + 0xE0]
	0x03CDA73C CBNZ W8, 0x3CDA748
	0x03CDA740 BL 0x1C16DFC
	0x03CDA744 LDR X0, [X21]
	0x03CDA748 LDR X8, [X0 + 0xB8]
	0x03CDA74C MOV X0, X19
	0x03CDA750 MOV X1, X31
	0x03CDA754 LDR X20, [X8]
	0x03CDA758 BL 0x3E450E8
	0x03CDA75C CBZ X20, 0x3CDA7A8
	0x03CDA760 ADRP X8, 0x488000
	0x03CDA764 LDR X2, [X31 + 0x8]
	0x03CDA768 LDR X8, [X8 + 0x378]
	0x03CDA76C MOV X1, X0
	0x03CDA770 MOV X0, X20
	0x03CDA774 LDR X3, [X8]
	0x03CDA778 BL 0x2AA5098
	0x03CDA77C LDR X0, [X31 + 0x8]
	0x03CDA780 CBZ X0, 0x3CDA7A8
	0x03CDA784 ADRP X8, 0x488000
	0x03CDA788 LDR X8, [X8 + 0x3A0]
	0x03CDA78C MOV X1, X19
	0x03CDA790 LDR X2, [X8]
	0x03CDA794 BL 0x2DBEF30
	0x03CDA798 LDP X20, X19, [X31 + 0x20]
	0x03CDA79C LDP X30, X21, [X31 + 0x10]
	0x03CDA7A0 ADD X31, X31, 0x30
	0x03CDA7A4 RET
	0x03CDA7A8 BL 0x1C16F20
	0x03CDA7AC SUB X31, X31, 0x40
	0x03CDA7B0 STP X30, X21, [X31 + 0x20]
	0x03CDA7B4 STP X20, X19, [X31 + 0x30]
	0x03CDA7B8 ADRP X21, 0x70D000
	0x03CDA7BC ADRP X20, 0x488000
	0x03CDA7C0 LDRB W8, [X21 + 0x48A]
	0x03CDA7C4 LDR X20, [X20 + 0x398]
	0x03CDA7C8 MOV X19, X0
	0x03CDA7CC TBNZ X8, 0x0, 0x3CDA820
	0x03CDA7D0 ADRP X0, 0x488000
	0x03CDA7D4 LDR X0, [X0 + 0x380]
	0x03CDA7D8 BL 0x1C16CF4
	0x03CDA7DC ADRP X0, 0x488000
	0x03CDA7E0 LDR X0, [X0 + 0x3B8]
	0x03CDA7E4 BL 0x1C16CF4
	0x03CDA7E8 ADRP X0, 0x488000
	0x03CDA7EC LDR X0, [X0 + 0x3C0]
	0x03CDA7F0 BL 0x1C16CF4
	0x03CDA7F4 ADRP X0, 0x488000
	0x03CDA7F8 LDR X0, [X0 + 0x3C8]
	0x03CDA7FC BL 0x1C16CF4
	0x03CDA800 ADRP X0, 0x488000
	0x03CDA804 LDR X0, [X0 + 0x398]
	0x03CDA808 BL 0x1C16CF4
	0x03CDA80C ADRP X0, 0x488000
	0x03CDA810 LDR X0, [X0 + 0x3D0]
	0x03CDA814 BL 0x1C16CF4
	0x03CDA818 MOVZ W8, 0x1
	0x03CDA81C STRB W8, [X21 + 0x48A]
	0x03CDA820 LDR X0, [X20]
	0x03CDA824 STP X31, X31, [X31 + 0x10]
	0x03CDA828 STP X31, X31, [X31]
	0x03CDA82C LDR W8, [X0 + 0xE0]
	0x03CDA830 CBNZ W8, 0x3CDA83C
	0x03CDA834 BL 0x1C16DFC
	0x03CDA838 LDR X0, [X20]
	0x03CDA83C LDR X8, [X0 + 0xB8]
	0x03CDA840 LDR X0, [X8]
	0x03CDA844 CBZ X0, 0x3CDA8D0
	0x03CDA848 ADRP X8, 0x488000
	0x03CDA84C LDR X8, [X8 + 0x380]
	0x03CDA850 ADD X2, X31, 0x18
	0x03CDA854 MOV X1, X19
	0x03CDA858 LDR X3, [X8]
	0x03CDA85C BL 0x2AA6B2C
	0x03CDA860 LDR X0, [X31 + 0x18]
	0x03CDA864 CBZ X0, 0x3CDA8BC
	0x03CDA868 ADRP X8, 0x488000
	0x03CDA86C LDR X8, [X8 + 0x3D0]
	0x03CDA870 ADRP X20, 0x488000
	0x03CDA874 ADRP X19, 0x488000
	0x03CDA878 LDR X1, [X8]
	0x03CDA87C LDR X20, [X20 + 0x3C0]
	0x03CDA880 LDR X19, [X19 + 0x3B8]
	0x03CDA884 ADD X8, X31, 0x0
	0x03CDA888 BL 0x2DBE924
	0x03CDA88C LDR X1, [X20]
	0x03CDA890 ADD X0, X31, 0x0
	0x03CDA894 BL 0x2BC3C64
	0x03CDA898 TBZ X0, 0x0, 0x3CDA8B0
	0x03CDA89C LDR X0, [X31 + 0x10]
	0x03CDA8A0 CBZ X0, 0x3CDA8CC
	0x03CDA8A4 MOV X1, X31
	0x03CDA8A8 BL 0x3E45104
	0x03CDA8AC B 0x3CDA88C
	0x03CDA8B0 LDR X1, [X19]
	0x03CDA8B4 ADD X0, X31, 0x0
	0x03CDA8B8 BL 0x2BC3C60
	0x03CDA8BC LDP X20, X19, [X31 + 0x30]
	0x03CDA8C0 LDP X30, X21, [X31 + 0x20]
	0x03CDA8C4 ADD X31, X31, 0x40
	0x03CDA8C8 RET
	0x03CDA8CC BL 0x1C16F20
	0x03CDA8D0 BL 0x1C16F20
	0x03CDA8D4 B 0x3CDA8DC
	0x03CDA8D8 B 0x3CDA8DC
	0x03CDA8DC MOV X19, X0
	0x03CDA8E0 CMP W1, 0x1
	0x03CDA8E4 B.NE 0x3CDA918
	0x03CDA8E8 MOV X0, X19
	0x03CDA8EC BL 0x3EB1AD0
	0x03CDA8F0 LDR X20, [X0]
	0x03CDA8F4 BL 0x3EB1AE0
	0x03CDA8F8 ADRP X8, 0x488000
	0x03CDA8FC LDR X8, [X8 + 0x3B8]
	0x03CDA900 ADD X0, X31, 0x0
	0x03CDA904 LDR X1, [X8]
	0x03CDA908 BL 0x2BC3C60
	0x03CDA90C CBZ X20, 0x3CDA8BC
	0x03CDA910 MOV X0, X20
	0x03CDA914 BL 0x1C16F18
	0x03CDA918 MOV X20, X31
	0x03CDA91C B 0x3CDA924
	0x03CDA920 MOV X19, X0
	0x03CDA924 ADRP X8, 0x488000
	0x03CDA928 LDR X8, [X8 + 0x3B8]
	0x03CDA92C LDR X1, [X8]
	0x03CDA930 ADD X0, X31, 0x0
	0x03CDA934 BL 0x2BC3C60
	0x03CDA938 CBNZ X20, 0x3CDA944
	0x03CDA93C MOV X0, X19
	0x03CDA940 BL 0x1D2C690
	0x03CDA944 MOV X0, X20
	0x03CDA948 BL 0x1C16F18
	0x03CDA94C BL 0x1990590
	0x03CDA950 SUB X31, X31, 0x30
	0x03CDA954 STP X30, X21, [X31 + 0x10]
	0x03CDA958 STP X20, X19, [X31 + 0x20]
	0x03CDA95C ADRP X20, 0x70D000
	0x03CDA960 LDRB W8, [X20 + 0x48B]
	0x03CDA964 MOV X19, X0
	0x03CDA968 TBNZ X8, 0x0, 0x3CDA9E0
	0x03CDA96C ADRP X0, 0x487000
	0x03CDA970 LDR X0, [X0 + 0xFF0]
	0x03CDA974 BL 0x1C16CF4
	0x03CDA978 ADRP X0, 0x488000
	0x03CDA97C LDR X0, [X0 + 0x3D8]
	0x03CDA980 BL 0x1C16CF4
	0x03CDA984 ADRP X0, 0x488000
	0x03CDA988 LDR X0, [X0 + 0x380]
	0x03CDA98C BL 0x1C16CF4
	0x03CDA990 ADRP X0, 0x488000
	0x03CDA994 LDR X0, [X0 + 0x388]
	0x03CDA998 BL 0x1C16CF4
	0x03CDA99C ADRP X0, 0x488000
	0x03CDA9A0 LDR X0, [X0 + 0x390]
	0x03CDA9A4 BL 0x1C16CF4
	0x03CDA9A8 ADRP X0, 0x488000
	0x03CDA9AC LDR X0, [X0 + 0x398]
	0x03CDA9B0 BL 0x1C16CF4
	0x03CDA9B4 ADRP X0, 0x488000
	0x03CDA9B8 LDR X0, [X0 + 0x3E0]
	0x03CDA9BC BL 0x1C16CF4
	0x03CDA9C0 ADRP X0, 0x488000
	0x03CDA9C4 LDR X0, [X0 + 0x3E8]
	0x03CDA9C8 BL 0x1C16CF4
	0x03CDA9CC ADRP X0, 0x419000
	0x03CDA9D0 LDR X0, [X0 + 0x598]
	0x03CDA9D4 BL 0x1C16CF4
	0x03CDA9D8 MOVZ W8, 0x1
	0x03CDA9DC STRB W8, [X20 + 0x48B]
	0x03CDA9E0 STR X31, [X31 + 0x8]
	0x03CDA9E4 CBZ X19, 0x3CDAB54
	0x03CDA9E8 ADRP X20, 0x419000
	0x03CDA9EC LDR X20, [X20 + 0x598]
	0x03CDA9F0 MOV X0, X19
	0x03CDA9F4 MOV X1, X31
	0x03CDA9F8 BL 0x3E450E8
	0x03CDA9FC LDR X8, [X20]
	0x03CDAA00 MOV X20, X0
	0x03CDAA04 LDR W9, [X8 + 0xE0]
	0x03CDAA08 CBNZ W9, 0x3CDAA14
	0x03CDAA0C MOV X0, X8
	0x03CDAA10 BL 0x1C16DFC
	0x03CDAA14 MOV X0, X20
	0x03CDAA18 MOV X1, X31
	0x03CDAA1C MOV X2, X31
	0x03CDAA20 BL 0x3C3883C
	0x03CDAA24 TBNZ X0, 0x0, 0x3CDAB44
	0x03CDAA28 ADRP X21, 0x488000
	0x03CDAA2C LDR X21, [X21 + 0x398]
	0x03CDAA30 LDR X0, [X21]
	0x03CDAA34 LDR W8, [X0 + 0xE0]
	0x03CDAA38 CBNZ W8, 0x3CDAA44
	0x03CDAA3C BL 0x1C16DFC
	0x03CDAA40 LDR X0, [X21]
	0x03CDAA44 LDR X8, [X0 + 0xB8]
	0x03CDAA48 MOV X0, X19
	0x03CDAA4C MOV X1, X31
	0x03CDAA50 LDR X20, [X8]
	0x03CDAA54 BL 0x3E450E8
	0x03CDAA58 CBZ X20, 0x3CDAB54
	0x03CDAA5C ADRP X8, 0x488000
	0x03CDAA60 LDR X8, [X8 + 0x380]
	0x03CDAA64 MOV X1, X0
	0x03CDAA68 ADD X2, X31, 0x8
	0x03CDAA6C MOV X0, X20
	0x03CDAA70 LDR X3, [X8]
	0x03CDAA74 BL 0x2AA6B2C
	0x03CDAA78 LDR X0, [X31 + 0x8]
	0x03CDAA7C CBZ X0, 0x3CDAB44
	0x03CDAA80 ADRP X8, 0x488000
	0x03CDAA84 LDR X8, [X8 + 0x3E0]
	0x03CDAA88 MOV X1, X19
	0x03CDAA8C LDR X2, [X8]
	0x03CDAA90 BL 0x2DBE67C
	0x03CDAA94 LDR X8, [X31 + 0x8]
	0x03CDAA98 CBZ X8, 0x3CDAB54
	0x03CDAA9C LDR W8, [X8 + 0x20]
	0x03CDAAA0 CBNZ W8, 0x3CDAB44
	0x03CDAAA4 LDR X0, [X21]
	0x03CDAAA8 LDR W8, [X0 + 0xE0]
	0x03CDAAAC CBNZ W8, 0x3CDAAB8
	0x03CDAAB0 BL 0x1C16DFC
	0x03CDAAB4 LDR X0, [X21]
	0x03CDAAB8 LDR X8, [X0 + 0xB8]
	0x03CDAABC MOV X0, X19
	0x03CDAAC0 MOV X1, X31
	0x03CDAAC4 LDR X20, [X8]
	0x03CDAAC8 BL 0x3E450E8
	0x03CDAACC CBZ X20, 0x3CDAB54
	0x03CDAAD0 ADRP X8, 0x488000
	0x03CDAAD4 LDR X8, [X8 + 0x3D8]
	0x03CDAAD8 MOV X1, X0
	0x03CDAADC MOV X0, X20
	0x03CDAAE0 LDR X2, [X8]
	0x03CDAAE4 BL 0x2AA64F8
	0x03CDAAE8 LDR X8, [X21]
	0x03CDAAEC LDR X8, [X8 + 0xB8]
	0x03CDAAF0 LDR X0, [X8]
	0x03CDAAF4 CBZ X0, 0x3CDAB54
	0x03CDAAF8 ADRP X8, 0x488000
	0x03CDAAFC LDR X8, [X8 + 0x388]
	0x03CDAB00 LDR X1, [X8]
	0x03CDAB04 BL 0x2AA4E88
	0x03CDAB08 CBNZ W0, 0x3CDAB44
	0x03CDAB0C ADRP X8, 0x487000
	0x03CDAB10 LDR X8, [X8 + 0xFF0]
	0x03CDAB14 LDR X0, [X8]
	0x03CDAB18 BL 0x1C16F10
	0x03CDAB1C ADRP X8, 0x488000
	0x03CDAB20 LDR X8, [X8 + 0x390]
	0x03CDAB24 MOV X1, X31
	0x03CDAB28 MOV X3, X31
	0x03CDAB2C MOV X19, X0
	0x03CDAB30 LDR X2, [X8]
	0x03CDAB34 BL 0x2A6B948
	0x03CDAB38 MOV X0, X19
	0x03CDAB3C MOV X1, X31
	0x03CDAB40 BL 0x3CCFC6C
	0x03CDAB44 LDP X20, X19, [X31 + 0x20]
	0x03CDAB48 LDP X30, X21, [X31 + 0x10]
	0x03CDAB4C ADD X31, X31, 0x30
	0x03CDAB50 RET
	0x03CDAB54 BL 0x1C16F20
	0x03CDAB58 STR X30, [X31 - 0x30]!
	0x03CDAB5C STP X22, X21, [X31 + 0x10]
	0x03CDAB60 STP X20, X19, [X31 + 0x20]
	0x03CDAB64 ADRP X21, 0x70D000
	0x03CDAB68 ADRP X22, 0x488000
	0x03CDAB6C ADRP X19, 0x488000
	0x03CDAB70 ADRP X20, 0x488000
	0x03CDAB74 LDRB W8, [X21 + 0x48C]
	0x03CDAB78 LDR X22, [X22 + 0x3F0]
	0x03CDAB7C LDR X19, [X19 + 0x3F8]
	0x03CDAB80 LDR X20, [X20 + 0x398]
	0x03CDAB84 TBNZ X8, 0x0, 0x3CDABB4
	0x03CDAB88 ADRP X0, 0x488000
	0x03CDAB8C LDR X0, [X0 + 0x3F8]
	0x03CDAB90 BL 0x1C16CF4
	0x03CDAB94 ADRP X0, 0x488000
	0x03CDAB98 LDR X0, [X0 + 0x3F0]
	0x03CDAB9C BL 0x1C16CF4
	0x03CDABA0 ADRP X0, 0x488000
	0x03CDABA4 LDR X0, [X0 + 0x398]
	0x03CDABA8 BL 0x1C16CF4
	0x03CDABAC MOVZ W8, 0x1
	0x03CDABB0 STRB W8, [X21 + 0x48C]
	0x03CDABB4 LDR X0, [X22]
	0x03CDABB8 BL 0x1C16F10
	0x03CDABBC LDR X1, [X19]
	0x03CDABC0 MOV X19, X0
	0x03CDABC4 BL 0x2AA4804
	0x03CDABC8 LDR X8, [X20]
	0x03CDABCC LDP X22, X21, [X31 + 0x10]
	0x03CDABD0 LDR X8, [X8 + 0xB8]
	0x03CDABD4 STR X19, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x70E000
	015 Move X23, 0x41A000
	016 Move X20, 0x47F000
	017 Move W8, [X22+1141]
	018 Move X23, [X23+2648]
	019 Move X20, [X20+2928]
	020 Move X21, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {73}
	026 Move X0, 0x470000
	027 Move X0, [X0+1376]
	028 Call 0x1C17CF4
	029 Move X0, 0x47F000
	030 Move X0, [X0+2776]
	031 Call 0x1C17CF4
	032 Move X0, 0x489000
	033 Move X0, [X0+744]
	034 Call 0x1C17CF4
	035 Move X0, 0x489000
	036 Move X0, [X0+832]
	037 Call 0x1C17CF4
	038 Move X0, 0x489000
	039 Move X0, [X0+584]
	040 Call 0x1C17CF4
	041 Move X0, 0x47F000
	042 Move X0, [X0+2312]
	043 Call 0x1C17CF4
	044 Move X0, 0x489000
	045 Move X0, [X0+840]
	046 Call 0x1C17CF4
	047 Move X0, 0x47F000
	048 Move X0, [X0+2936]
	049 Call 0x1C17CF4
	050 Move X0, 0x47F000
	051 Move X0, [X0+2272]
	052 Call 0x1C17CF4
	053 Move X0, 0x47F000
	054 Move X0, [X0+1368]
	055 Call 0x1C17CF4
	056 Move X0, 0x47F000
	057 Move X0, [X0+2944]
	058 Call 0x1C17CF4
	059 Move X0, 0x41A000
	060 Move X0, [X0+2648]
	061 Call 0x1C17CF4
	062 Move X0, 0x41A000
	063 Move X0, [X0+1432]
	064 Call 0x1C17CF4
	065 Move X0, 0x441000
	066 Move X0, [X0+3632]
	067 Call 0x1C17CF4
	068 Move X0, 0x47F000
	069 Move X0, [X0+2928]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X22+1141], W8
	073 Move X0, [X23]
	074 Call 0x1C17F10
	075 Move X1, [X20]
	076 Move X2, X31
	077 Move X20, X0
	078 Call GameObject..ctor, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {385}
	081 Move X0, X21
	082 Move X1, X31
	083 Call Component.get_gameObject, X0
	084 Compare X0, 0
	085 JumpIfEqual {385}
	086 Move X1, X31
	087 Call GameObject.get_layer, X0
	088 Compare X20, 0
	089 JumpIfEqual {385}
	090 Move X22, 0x47F000
	091 Move X22, [X22+1368]
	092 Move W1, W0
	093 Move X0, X20
	094 Move X2, X31
	095 Call GameObject.set_layer, X0, X1
	096 Move X1, [X22]
	097 Move X0, X20
	098 Call 0x21E61FC, X0
	099 Move X22, X0
	100 Move X0, X21
	101 Move X1, X31
	102 Call Component.get_transform, X0
	103 Compare X22, 0
	104 JumpIfEqual {385}
	105 Move X1, X0
	106 Move X0, X22
	107 Move W2, W31
	108 Move X3, X31
	109 Call Transform.SetParent, X0, X1, X2
	110 Move X21, 0x6FF000
	111 Move W8, [X21+1923]
	112 Compare W8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, 0x41A000
	115 Move X0, [X0+1440]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X21+1923], W8
	119 Move X21, 0x41A000
	120 Move X21, [X21+1440]
	121 Move X0, X22
	122 Move X1, X31
	123 Move X8, [X21]
	124 Move X8, [X8+184]
	125 Move S0, [X8]
	126 Move S1, [X8+4]
	127 Call RectTransform.set_anchorMin, X0, X1
	128 Move X23, 0x6FF000
	129 Move W8, [X23+2139]
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0x41A000
	133 Move X0, [X0+1440]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X23+2139], W8
	137 Move X8, [X21]
	138 Move X21, 0x47F000
	139 Move X0, X22
	140 Move X1, X31
	141 Move X8, [X8+184]
	142 Move S0, [X8+12]
	143 Move S1, [X8+16]
	144 Move X21, [X21+2936]
	145 Call RectTransform.set_anchorMax, X0, X1
	146 Move X23, 0x700000
	147 Move W8, [X23+1935]
	148 Compare W8, 0
	149 JumpIfNotEqual {155}
	150 Move X0, 0x422000
	151 Move X0, [X0+3848]
	152 Call 0x1C17CF4
	153 Move W8, 1
	154 Move [X23+1935], W8
	155 Move X8, 0x422000
	156 Move X8, [X8+3848]
	157 Move X0, X22
	158 Move X1, X31
	159 Move X8, [X8]
	160 Move X8, [X8+184]
	161 Move S0, [X8]
	162 Move S1, [X8+4]
	163 Call RectTransform.set_sizeDelta, X0, X1
	164 Move X1, [X21]
	165 Move X0, X20
	166 Call 0x21E61FC, X0
	167 Compare X0, 0
	168 JumpIfEqual {385}
	169 Move W1, 1
	170 Move X2, X31
	171 Move X21, X0
	172 Call Canvas.set_overrideSorting, X0, X1
	173 Move X0, [X19+328]
	174 Compare X0, 0
	175 JumpIfEqual {385}
	176 Move X8, 0x47F000
	177 Move X8, [X8+2944]
	178 Move X1, [X8]
	179 Call 0x21E62E4, X0
	180 Compare X0, 0
	181 JumpIfEqual {385}
	182 Move X1, X31
	183 Move X22, X0
	184 Call Canvas.get_sortingLayerID, X0
	185 Move W1, W0
	186 Move X0, X21
	187 Move X2, X31
	188 Call Canvas.set_sortingLayerID, X0, X1
	189 Move X0, X22
	190 Move X1, X31
	191 Call Canvas.get_sortingOrder, X0
	192 Subtract W1, W0, 1
	193 Move X0, X21
	194 Move X2, X31
	195 Call Canvas.set_sortingOrder, X0, X1
	196 Move X0, [X19+256]
	197 Compare X0, 0
	198 JumpIfEqual {385}
	199 Move X29, 0x41A000
	200 Move X23, 0x470000
	201 Move X24, 0x47F000
	202 Move X28, 0x47F000
	203 Move X27, 0x441000
	204 Move X26, 0x489000
	205 Move X25, 0x489000
	206 Move X29, [X29+1432]
	207 Move X23, [X23+1376]
	208 Move X24, [X24+2272]
	209 Move X28, [X28+2312]
	210 Move X27, [X27+3632]
	211 Move X26, [X26+832]
	212 Move X25, [X25+840]
	213 Move X1, X31
	214 Call Transform.get_parent, X0
	215 Move X22, X0
	216 Move X21, X31
	217 Move X0, [X29]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X0, X22
	223 Move X1, X31
	224 Move X2, X31
	225 Call Object.op_Inequality, X0, X1
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {254}
	230 Compare X22, 0
	231 JumpIfEqual {385}
	232 Move X1, [X23]
	233 Move X0, X22
	234 Call 0x21A4894, X0
	235 Move X8, [X29]
	236 Move X21, X0
	237 Move W9, [X8+224]
	238 Compare W9, 0
	239 JumpIfNotEqual {242}
	240 Move X0, X8
	241 Call 0x1C17DFC
	242 Move X0, X21
	243 Move X1, X31
	244 Move X2, X31
	245 Call Object.op_Inequality, X0, X1
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {254}
	250 Move X0, X22
	251 Move X1, X31
	252 Call Transform.get_parent, X0
	253 Move X22, X0
	254 Move X0, [X29]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X0, X21
	260 Move X1, X31
	261 Move X2, X31
	262 Move [X31+8], X19
	263 Call Object.op_Inequality, X0, X1
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {316}
	268 Compare X21, 0
	269 JumpIfEqual {385}
	270 Move X8, 0x47F000
	271 Move X8, [X8+2776]
	272 Move X0, X21
	273 Move X19, X24
	274 Move X1, [X8]
	275 Call 0x21A53A8, X0
	276 Compare X0, 0
	277 JumpIfEqual {385}
	278 Move W8, [X0+24]
	279 Move X21, X0
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move W24, W31
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Add X8, X21, W24
	284 Move X0, [X8+32]
	285 Compare X0, 0
	286 JumpIfEqual {385}
	287 Move X1, X31
	288 Call "il2cpp_vm_object_is_inst", X0
	289 Move X22, X0
	290 Move X0, X20
	291 Move X1, X22
	292 Move X2, X31
	293 Call GameObject.GetComponent, X0, X1
	294 Move X8, [X29]
	295 Move X23, X0
	296 Move W9, [X8+224]
	297 Compare W9, 0
	298 JumpIfNotEqual {301}
	299 Move X0, X8
	300 Call 0x1C17DFC
	301 Move X0, X23
	302 Move X1, X31
	303 Move X2, X31
	304 Call Object.op_Equality, X0, X1
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {313}
	309 Move X0, X20
	310 Move X1, X22
	311 Move X2, X31
	312 Call GameObject.AddComponent, X0, X1
	313 Move W8, [X21+24]
	314 Add W24, W24, 1
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X8, 0x489000
	317 Move X8, [X8+584]
	318 Move X19, X24
	319 Move X0, [X8]
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X8, 0x489000
	325 Move X8, [X8+744]
	326 Move X0, X20
	327 Move X1, [X8]
	328 Call 0x21B06D4, X0
	329 Move X1, [X19]
	330 Move X0, X20
	331 Call 0x21E61FC, X0
	332 Compare X0, 0
	333 JumpIfEqual {385}
	334 Move X8, [X0]
	335 Move S0, W31
	336 Move S1, W31
	337 Move S2, W31
	338 Move X9, [X8+680]
	339 Move X1, [X8+688]
	340 Move S3, W31
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move X1, [X28]
	343 Move X0, X20
	344 Call 0x21E61FC, X0
	345 Move X19, [X31+8]
	346 Compare X0, 0
	347 JumpIfEqual {385}
	348 Move X21, [X0+256]
	349 Move X0, [X27]
	350 Call 0x1C17F10
	351 Move X2, [X26]
	352 Move X1, X19
	353 Move X3, X31
	354 Move X22, X0
	355 Call UnityAction..ctor, X0, X1, X2
	356 Compare X21, 0
	357 JumpIfEqual {385}
	358 Move X0, X21
	359 Move X1, X22
	360 Move X2, X31
	361 Call UnityEvent.AddListener, X0, X1
	362 Move X1, [X25]
	363 Move X0, X20
	364 Call 0x21E61FC, X0
	365 Compare X0, 0
	366 JumpIfEqual {385}
	367 Move W1, 1
	368 Move X2, X31
	369 Call CanvasGroup.set_ignoreParentGroups, X0, X1
	370 Move X0, X20
	371 Move X20, [X31+96]
	372 Move X19, [X31+104]
	373 Move X22, [X31+80]
	374 Move X21, [X31+88]
	375 Move X24, [X31+64]
	376 Move X23, [X31+72]
	377 Move X26, [X31+48]
	378 Move X25, [X31+56]
	379 Move X28, [X31+32]
	380 Move X27, [X31+40]
	381 Move X29, [X31+16]
	382 Move X30, [X31+24]
	383 Add X31, X31, 112
	384 Return X0
	385 Call 0x1C17F20
	386 Call 0x1C17F28

Method: System.Void DestroyBlocker(UnityEngine.GameObject blocker)

Disassembly:
	0x03CDABD8 LDP X20, X19, [X31 + 0x20]
	0x03CDABDC LDR X30, [X31], #0x30
	0x03CDABE0 RET
	0x03CDABE4 STR X30, [X31 - 0x20]!
	0x03CDABE8 STP X20, X19, [X31 + 0x10]
	0x03CDABEC ADRP X19, 0x70D000
	0x03CDABF0 ADRP X20, 0x47F000
	0x03CDABF4 LDRB W8, [X19 + 0x48D]
	0x03CDABF8 LDR X20, [X20 + 0x118]
	0x03CDABFC TBNZ X8, 0x0, 0x3CDAC20
	0x03CDAC00 ADRP X0, 0x47F000
	0x03CDAC04 LDR X0, [X0 + 0x118]
	0x03CDAC08 BL 0x1C16CF4
	0x03CDAC0C ADRP X0, 0x419000
	0x03CDAC10 LDR X0, [X0 + 0x598]
	0x03CDAC14 BL 0x1C16CF4
	0x03CDAC18 MOVZ W8, 0x1
	0x03CDAC1C STRB W8, [X19 + 0x48D]
	0x03CDAC20 LDR X0, [X20]
	0x03CDAC24 ADRP X19, 0x419000
	0x03CDAC28 LDR W8, [X0 + 0xE0]
	0x03CDAC2C LDR X19, [X19 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x70E000
	006 Move X21, 0x41A000
	007 Move W8, [X20+1142]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x41A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1142], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object.Destroy, X0
	031 Return 

Method: UnityEngine.GameObject CreateDropdownList(UnityEngine.GameObject template)

Disassembly:
	0x03CDAC30 CBNZ W8, 0x3CDAC3C
	0x03CDAC34 BL 0x1C16DFC
	0x03CDAC38 LDR X0, [X20]
	0x03CDAC3C LDR X8, [X19]
	0x03CDAC40 LDR X9, [X0 + 0xB8]
	0x03CDAC44 LDR W10, [X8 + 0xE0]
	0x03CDAC48 LDR X19, [X9]
	0x03CDAC4C CBNZ W10, 0x3CDAC58
	0x03CDAC50 MOV X0, X8
	0x03CDAC54 BL 0x1C16DFC
	0x03CDAC58 MOV X0, X19
	0x03CDAC5C MOV X1, X31
	0x03CDAC60 MOV X2, X31
	0x03CDAC64 BL 0x3C3883C
	0x03CDAC68 TBZ X0, 0x0, 0x3CDAC98
	0x03CDAC6C MOV X0, X31
	0x03CDAC70 BL 0x3E24F2C
	0x03CDAC74 LDR X8, [X20]
	0x03CDAC78 MOV X19, X0
	0x03CDAC7C LDR W9, [X8 + 0xE0]
	0x03CDAC80 CBNZ W9, 0x3CDAC90
	0x03CDAC84 MOV X0, X8
	0x03CDAC88 BL 0x1C16DFC
	0x03CDAC8C LDR X8, [X20]
	0x03CDAC90 LDR X8, [X8 + 0xB8]
	0x03CDAC94 STR X19, [X8]
	0x03CDAC98 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x70E000
	006 Move X20, 0x41A000
	007 Move W8, [X21+1143]
	008 Move X20, [X20+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x41A000
	015 Move X0, [X0+3448]
	016 Call 0x1C17CF4
	017 Move X0, 0x41A000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1143], W8
	022 Move X0, [X20]
	023 Move X20, 0x41A000
	024 Move W8, [X0+224]
	025 Move X20, [X20+3448]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call 0x222E35C, X0
	036 Return X0

Method: System.Void DestroyDropdownList(UnityEngine.GameObject dropdownList)

Disassembly:
	0x03CDAC9C LDR W8, [X0 + 0xE0]
	0x03CDACA0 CBNZ W8, 0x3CDACAC
	0x03CDACA4 BL 0x1C16DFC
	0x03CDACA8 LDR X0, [X20]
	0x03CDACAC LDR X8, [X0 + 0xB8]
	0x03CDACB0 LDP X20, X19, [X31 + 0x10]
	0x03CDACB4 LDR X0, [X8]
	0x03CDACB8 LDR X30, [X31], #0x20
	0x03CDACBC RET
	0x03CDACC0 LDP S0, S1, [X0 + 0x28]
	0x03CDACC4 LDP S2, S3, [X0 + 0x30]
	0x03CDACC8 RET
	0x03CDACCC STP X30, X19, [X31 - 0x10]!
	0x03CDACD0 MOV X19, X0
	0x03CDACD4 ADD X0, X0, 0x28
	0x03CDACD8 MOV X1, X31
	0x03CDACDC BL 0x3E424C8
	0x03CDACE0 TBZ X0, 0x0, 0x3CDACFC
	0x03CDACE4 LDR X8, [X19]
	0x03CDACE8 MOV X0, X19
	0x03CDACEC LDR X2, [X8 + 0x2F8]
	0x03CDACF0 LDR X1, [X8 + 0x300]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x70E000
	006 Move X21, 0x41A000
	007 Move W8, [X20+1144]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x41A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1144], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object.Destroy, X0
	031 Return 

Method: UnityEngine.UI.Dropdown/DropdownItem CreateItem(UnityEngine.UI.Dropdown/DropdownItem itemTemplate)

Disassembly:
	0x03CDACF4 LDP X30, X19, [X31], #0x10
	0x03CDACF8 BR X2
	0x03CDACFC LDP X30, X19, [X31], #0x10
	0x03CDAD00 RET
	0x03CDAD04 LDRB W0, [X0 + 0x3A]
	0x03CDAD08 RET
	0x03CDAD0C STR X30, [X31 - 0x30]!
	0x03CDAD10 STP X22, X21, [X31 + 0x10]
	0x03CDAD14 STP X20, X19, [X31 + 0x20]
	0x03CDAD18 ADRP X21, 0x70D000
	0x03CDAD1C LDRB W8, [X21 + 0x48E]
	0x03CDAD20 MOV W20, W1
	0x03CDAD24 MOV X19, X0
	0x03CDAD28 AND W22, W1, 0x1
	0x03CDAD2C TBNZ X8, 0x0, 0x3CDAD44
	0x03CDAD30 ADRP X0, 0x46F000
	0x03CDAD34 LDR X0, [X0 + 0x580]
	0x03CDAD38 BL 0x1C16CF4
	0x03CDAD3C MOVZ W8, 0x1
	0x03CDAD40 STRB W8, [X21 + 0x48E]
	0x03CDAD44 LDRB W8, [X19 + 0x3A]
	0x03CDAD48 CMP W8, W22
	0x03CDAD4C B.EQ 0x3CDADD4
	0x03CDAD50 CBZ W8, 0x3CDAD88
	0x03CDAD54 MOV X0, X19
	0x03CDAD58 BL 0x3CDADE8
	0x03CDAD5C ADRP X8, 0x46F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x70E000
	006 Move X20, 0x41A000
	007 Move W8, [X21+1145]
	008 Move X20, [X20+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x489000
	015 Move X0, [X0+848]
	016 Call 0x1C17CF4
	017 Move X0, 0x41A000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1145], W8
	022 Move X0, [X20]
	023 Move X20, 0x489000
	024 Move W8, [X0+224]
	025 Move X20, [X20+848]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call 0x222E35C, X0
	036 Return X0

Method: System.Void DestroyItem(UnityEngine.UI.Dropdown/DropdownItem item)

Disassembly:
	0x03CDAD60 LDR X8, [X8 + 0x580]

ISIL:
	001 Return 

Method: UnityEngine.UI.Dropdown/DropdownItem AddItem(UnityEngine.UI.Dropdown/OptionData data, System.Boolean selected, UnityEngine.UI.Dropdown/DropdownItem itemTemplate, System.Collections.Generic.List`1<UnityEngine.UI.Dropdown/DropdownItem> items)

Disassembly:
	0x03CDA290 LDR X0, [X0 + 0x10]
	0x03CDA294 RET
	0x03CDA298 STR X1, [X0 + 0x10]
	0x03CDA29C RET
	0x03CDA2A0 STR X30, [X31 - 0x10]!
	0x03CDA2A4 LDR X8, [X0 + 0x10]
	0x03CDA2A8 CBZ X8, 0x3CDA2C0
	0x03CDA2AC LDR X0, [X0 + 0x18]
	0x03CDA2B0 CBZ X0, 0x3CDA2C0
	0x03CDA2B4 LDR X1, [X8 + 0x38]
	0x03CDA2B8 LDR X30, [X31], #0x10
	0x03CDA2BC B 0x3CD9F30
	0x03CDA2C0 BL 0x1C16F20
	0x03CDA2C4 RET
	0x03CDA2C8 STR D8, [X31 - 0x20]!
	0x03CDA2CC STR X30, [X31 + 0x8]
	0x03CDA2D0 STP X20, X19, [X31 + 0x10]
	0x03CDA2D4 ADRP X20, 0x70D000
	0x03CDA2D8 LDRB W8, [X20 + 0x487]
	0x03CDA2DC MOV X19, X0
	0x03CDA2E0 TBNZ X8, 0x0, 0x3CDA2F8
	0x03CDA2E4 ADRP X0, 0x422000
	0x03CDA2E8 LDR X0, [X0 + 0x9A0]
	0x03CDA2EC BL 0x1C16CF4
	0x03CDA2F0 MOVZ W8, 0x1
	0x03CDA2F4 STRB W8, [X20 + 0x487]
	0x03CDA2F8 LDR W8, [X19 + 0x10]
	0x03CDA2FC CMP W8, 0x1
	0x03CDA300 B.EQ 0x3CDA344
	0x03CDA304 CBNZ W8, 0x3CDA358
	0x03CDA308 MOVN W8, 0x0
	0x03CDA30C STR W8, [X19 + 0x10]
	0x03CDA310 ADRP X8, 0x422000
	0x03CDA314 LDR V8, [X19 + 0x20]
	0x03CDA318 LDR X8, [X8 + 0x9A0]
	0x03CDA31C LDR X0, [X8]
	0x03CDA320 BL 0x1C16F10
	0x03CDA324 MOV V0.16B, V8.16B
	0x03CDA328 MOV X1, X31
	0x03CDA32C MOV X20, X0
	0x03CDA330 BL 0x3C3A730
	0x03CDA334 MOVZ W0, 0x1
	0x03CDA338 STR X20, [X19 + 0x18]
	0x03CDA33C STR W0, [X19 + 0x10]
	0x03CDA340 B 0x3CDA35C
	0x03CDA344 LDR X0, [X19 + 0x28]
	0x03CDA348 MOVN W8, 0x0
	0x03CDA34C STR W8, [X19 + 0x10]
	0x03CDA350 CBZ X0, 0x3CDA36C
	0x03CDA354 BL 0x3CD7A1C
	0x03CDA358 MOV W0, W31
	0x03CDA35C LDP X20, X19, [X31 + 0x10]
	0x03CDA360 LDR X30, [X31 + 0x8]
	0x03CDA364 LDR V8, [X31], #0x20
	0x03CDA368 RET
	0x03CDA36C BL 0x1C16F20
	0x03CDA370 LDR X0, [X0 + 0x18]
	0x03CDA374 RET
	0x03CDA378 STP X30, X19, [X31 - 0x10]!
	0x03CDA37C ADRP X0, 0x419000
	0x03CDA380 LDR X0, [X0 + 0xB40]
	0x03CDA384 BL 0x1C16D08
	0x03CDA388 BL 0x1C16F10
	0x03CDA38C MOV X1, X31
	0x03CDA390 MOV X19, X0
	0x03CDA394 BL 0x3380310
	0x03CDA398 ADRP X0, 0x488000
	0x03CDA39C LDR X0, [X0 + 0x368]
	0x03CDA3A0 BL 0x1C16D08
	0x03CDA3A4 MOV X1, X0
	0x03CDA3A8 MOV X0, X19
	0x03CDA3AC BL 0x1C16DEC
	0x03CDA3B0 LDR X0, [X0 + 0x18]
	0x03CDA3B4 RET
	0x03CDA3B8 STR X30, [X31 - 0x20]!
	0x03CDA3BC STP X20, X19, [X31 + 0x10]
	0x03CDA3C0 ADRP X19, 0x70D000
	0x03CDA3C4 ADRP X20, 0x488000
	0x03CDA3C8 LDRB W8, [X19 + 0x488]
	0x03CDA3CC LDR X20, [X20 + 0x370]
	0x03CDA3D0 TBNZ X8, 0x0, 0x3CDA3E8
	0x03CDA3D4 ADRP X0, 0x488000
	0x03CDA3D8 LDR X0, [X0 + 0x370]
	0x03CDA3DC BL 0x1C16CF4
	0x03CDA3E0 MOVZ W8, 0x1
	0x03CDA3E4 STRB W8, [X19 + 0x488]
	0x03CDA3E8 LDR X0, [X20]
	0x03CDA3EC BL 0x1C16F10
	0x03CDA3F0 MOV X1, X31
	0x03CDA3F4 MOV X19, X0
	0x03CDA3F8 BL 0x33BDD8C
	0x03CDA3FC CBZ X19, 0x3CDA444
	0x03CDA400 ADRP X9, 0xFFFFFFFFFCE13000
	0x03CDA404 ADRP X10, 0xFFFFFFFFFCE13000
	0x03CDA408 LDR V0, [X9 + 0xE68]
	0x03CDA40C LDR V1, [X10 + 0xEA8]
	0x03CDA410 MOVZ W8, 0x3F800000
	0x03CDA414 MOVZ W9, 0x100
	0x03CDA418 STRB W31, [X19 + 0x20]
	0x03CDA41C STR W31, [X19 + 0x2C]
	0x03CDA420 STP W31, W31, [X19 + 0x34]
	0x03CDA424 STR W8, [X19 + 0x3C]
	0x03CDA428 STR D0, [X19 + 0x18]
	0x03CDA42C STUR D1, [X19 + 0x24]
	0x03CDA430 STRH W9, [X19 + 0x30]
	0x03CDA434 MOV X0, X19
	0x03CDA438 LDP X20, X19, [X31 + 0x10]
	0x03CDA43C LDR X30, [X31], #0x20
	0x03CDA440 RET
	0x03CDA444 BL 0x1C16F20
	0x03CDA448 MOV X1, X31
	0x03CDA44C B 0x33BDD8C
	0x03CDA450 LDR X0, [X0 + 0x10]
	0x03CDA454 RET
	0x03CDA458 STR X1, [X0 + 0x10]
	0x03CDA45C RET
	0x03CDA460 LDR W0, [X0 + 0x18]
	0x03CDA464 RET
	0x03CDA468 STR W1, [X0 + 0x18]
	0x03CDA46C RET
	0x03CDA470 LDR W0, [X0 + 0x1C]
	0x03CDA474 RET
	0x03CDA478 STR W1, [X0 + 0x1C]
	0x03CDA47C RET
	0x03CDA480 LDRB W0, [X0 + 0x20]
	0x03CDA484 RET
	0x03CDA488 AND W8, W1, 0x1
	0x03CDA48C STRB W8, [X0 + 0x20]
	0x03CDA490 RET
	0x03CDA494 LDR W0, [X0 + 0x24]
	0x03CDA498 RET
	0x03CDA49C STR W1, [X0 + 0x24]
	0x03CDA4A0 RET
	0x03CDA4A4 LDR W0, [X0 + 0x28]
	0x03CDA4A8 RET
	0x03CDA4AC STR W1, [X0 + 0x28]
	0x03CDA4B0 RET
	0x03CDA4B4 LDR W0, [X0 + 0x2C]
	0x03CDA4B8 RET
	0x03CDA4BC STR W1, [X0 + 0x2C]
	0x03CDA4C0 RET
	0x03CDA4C4 LDRB W0, [X0 + 0x30]
	0x03CDA4C8 RET
	0x03CDA4CC AND W8, W1, 0x1
	0x03CDA4D0 STRB W8, [X0 + 0x30]
	0x03CDA4D4 RET
	0x03CDA4D8 LDRB W0, [X0 + 0x31]
	0x03CDA4DC RET
	0x03CDA4E0 AND W8, W1, 0x1
	0x03CDA4E4 STRB W8, [X0 + 0x31]
	0x03CDA4E8 RET
	0x03CDA4EC LDR W0, [X0 + 0x34]
	0x03CDA4F0 RET
	0x03CDA4F4 STR W1, [X0 + 0x34]
	0x03CDA4F8 RET
	0x03CDA4FC LDR W0, [X0 + 0x38]
	0x03CDA500 RET
	0x03CDA504 STR W1, [X0 + 0x38]
	0x03CDA508 RET
	0x03CDA50C LDR V0, [X0 + 0x3C]
	0x03CDA510 RET
	0x03CDA514 STR S0, [X0 + 0x3C]
	0x03CDA518 RET
	0x03CDA51C RET
	0x03CDA520 LDR W8, [X0 + 0x18]
	0x03CDA524 LDP W10, W11, [X0 + 0x24]
	0x03CDA528 MOVZ W9, 0x12C
	0x03CDA52C CMP W8, 0x12C
	0x03CDA530 CSEL W8, W8, W9, LT
	0x03CDA534 BIC W8, W8, W8, 0x1F
	0x03CDA538 CMP W10, W8
	0x03CDA53C CSEL W12, W8, W10, GT
	0x03CDA540 CMP W10, 0x0
	0x03CDA544 CSEL W10, W31, W12, LT
	0x03CDA548 CMP W11, 0x12C
	0x03CDA54C CSEL W9, W11, W9, LT
	0x03CDA550 CMP W11, W8
	0x03CDA554 STR W8, [X0 + 0x18]
	0x03CDA558 CSEL W8, W8, W9, LT
	0x03CDA55C STP W10, W8, [X0 + 0x24]
	0x03CDA560 RET
	0x03CDA564 SUB X31, X31, 0x30
	0x03CDA568 STP X30, X21, [X31 + 0x10]
	0x03CDA56C STP X20, X19, [X31 + 0x20]
	0x03CDA570 ADRP X20, 0x70D000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x70E000
	009 Move W8, [X23+1146]
	010 Move X19, X4
	011 Move X22, X3
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x489000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0x489000
	022 Move X0, [X0+704]
	023 Call 0x1C17CF4
	024 Move X0, 0x41A000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x41E000
	028 Move X0, [X0+2344]
	029 Call 0x1C17CF4
	030 Move X0, 0x47F000
	031 Move X0, [X0+2896]
	032 Call 0x1C17CF4
	033 Move X0, 0x41A000
	034 Move X0, [X0+2440]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+1146], W8
	038 Move X8, [X20]
	039 Move X0, X20
	040 Move X1, X22
	041 Move X9, [X8+1096]
	042 Move X2, [X8+1104]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Compare X0, 0
	045 JumpIfEqual {218}
	046 Compare X22, 0
	047 JumpIfEqual {218}
	048 Move X20, X0
	049 Move X0, [X22+48]
	050 Compare X0, 0
	051 JumpIfEqual {218}
	052 Move X22, [X20+48]
	053 Move X1, X31
	054 Call Transform.get_parent, X0
	055 Compare X22, 0
	056 JumpIfEqual {218}
	057 Move X1, X0
	058 Move X0, X22
	059 Move W2, W31
	060 Move X3, X31
	061 Call Transform.SetParent, X0, X1, X2
	062 Move X0, X20
	063 Move X1, X31
	064 Call Component.get_gameObject, X0
	065 Compare X0, 0
	066 JumpIfEqual {218}
	067 Move W1, 1
	068 Move X2, X31
	069 Call GameObject.SetActive, X0, X1
	070 Move X0, X20
	071 Move X1, X31
	072 Call Component.get_gameObject, X0
	073 Compare X19, 0
	074 JumpIfEqual {218}
	075 Move W8, [X19+24]
	076 Move X22, X0
	077 Add X0, X31, 12
	078 Move X1, X31
	079 Move [X31+12], W8
	080 Call Int32.ToString, X0
	081 Compare X21, 0
	082 JumpIfEqual {218}
	083 Move X8, 0x47F000
	084 Move X8, [X8+2896]
	085 Move X1, [X21+16]
	086 Move X23, X0
	087 Move X24, [X8]
	088 Compare X1, 0
	089 JumpIfEqual {96}
	090 Move X8, 0x41E000
	091 Move X8, [X8+2344]
	092 Move X2, X31
	093 Move X0, [X8]
	094 Call String.Concat, X0, X1
	095 Move X2, X0
	096 Move X8, 0x41A000
	097 Move X8, [X8+2440]
	098 Move X2, [X8]
	099 Move X0, X24
	100 Move X1, X23
	101 Move X3, X31
	102 Call String.Concat, X0, X1, X2
	103 Compare X22, 0
	104 JumpIfEqual {218}
	105 Move X23, 0x41A000
	106 Move X23, [X23+1432]
	107 Move X1, X0
	108 Move X0, X22
	109 Move X2, X31
	110 Call Object.set_name, X0, X1
	111 Move X0, [X23]
	112 Move X22, [X20+56]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X22
	118 Move X1, X31
	119 Move X2, X31
	120 Call Object.op_Inequality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {131}
	125 Move X0, [X20+56]
	126 Compare X0, 0
	127 JumpIfEqual {218}
	128 Move W1, W31
	129 Move X2, X31
	130 Call Toggle.set_isOn, X0, X1
	131 Move X0, [X23]
	132 Move X22, [X20+32]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X22
	138 Move X1, X31
	139 Call Object.op_Implicit, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {152}
	144 Move X0, [X20+32]
	145 Compare X0, 0
	146 JumpIfEqual {218}
	147 Move X8, [X0]
	148 Move X1, [X21+16]
	149 Move X9, [X8+1512]
	150 Move X2, [X8+1520]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X0, [X23]
	153 Move X22, [X20+40]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X22
	159 Move X1, X31
	160 Call Object.op_Implicit, X0
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {187}
	165 Move X0, [X20+40]
	166 Compare X0, 0
	167 JumpIfEqual {218}
	168 Move X1, [X21+24]
	169 Call Image.set_sprite, X0, X1
	170 Move X21, [X20+40]
	171 Compare X21, 0
	172 JumpIfEqual {218}
	173 Move X0, [X23]
	174 Move X22, [X21+216]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X22
	180 Move X1, X31
	181 Move X2, X31
	182 Call Object.op_Inequality, X0, X1
	183 And W1, W0, 1
	184 Move X0, X21
	185 Move X2, X31
	186 Call Behaviour.set_enabled, X0, X1
	187 Move X9, 0x489000
	188 Move X9, [X9+808]
	189 Move W10, [X19+28]
	190 Move X8, [X19+16]
	191 Move X9, [X9]
	192 Add W10, W10, 1
	193 Move [X19+28], W10
	194 Compare X8, 0
	195 JumpIfEqual {218}
	196 NotImplemented "Instruction LDRSW not yet implemented."
	197 Move W11, [X8+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add W9, W10, 1
	200 Add X8, X8, X10
	201 Move [X19+24], W9
	202 Move [X8+32], X20
	203 Move X8, [X9+32]
	204 Move X0, X19
	205 Move X1, X20
	206 Move X8, [X8+192]
	207 Move X2, [X8+112]
	208 Call List`1<Object>.AddWithResize, X0, X1
	209 Move X0, X20
	210 Move X20, [X31+48]
	211 Move X19, [X31+56]
	212 Move X22, [X31+32]
	213 Move X21, [X31+40]
	214 Move X24, [X31+16]
	215 Move X23, [X31+24]
	216 Move X30, [X31+64]
	217 Return X0
	218 Call 0x1C17F20

Method: System.Void AlphaFadeList(System.Single duration, System.Single alpha)

Disassembly:
	0x03CDAD64 MOV X21, X0
	0x03CDAD68 LDR X8, [X8]
	0x03CDAD6C LDR W9, [X8 + 0xE0]
	0x03CDAD70 CBNZ W9, 0x3CDAD7C
	0x03CDAD74 MOV X0, X8
	0x03CDAD78 BL 0x1C16DFC
	0x03CDAD7C MOV X0, X21
	0x03CDAD80 MOV X1, X19
	0x03CDAD84 BL 0x3CDAE5C
	0x03CDAD88 STRB W22, [X19 + 0x3A]
	0x03CDAD8C TBZ X20, 0x0, 0x3CDADD4
	0x03CDAD90 MOV X0, X19
	0x03CDAD94 MOV X1, X31
	0x03CDAD98 BL 0x3C32454
	0x03CDAD9C TBZ X0, 0x0, 0x3CDADD4
	0x03CDADA0 MOV X0, X19
	0x03CDADA4 BL 0x3CDADE8
	0x03CDADA8 ADRP X8, 0x46F000
	0x03CDADAC LDR X8, [X8 + 0x580]
	0x03CDADB0 MOV X20, X0
	0x03CDADB4 LDR X8, [X8]
	0x03CDADB8 LDR W9, [X8 + 0xE0]
	0x03CDADBC CBNZ W9, 0x3CDADC8
	0x03CDADC0 MOV X0, X8
	0x03CDADC4 BL 0x1C16DFC
	0x03CDADC8 MOV X0, X20
	0x03CDADCC MOV X1, X19
	0x03CDADD0 BL 0x3CDAFD8
	0x03CDADD4 STRB W22, [X19 + 0x3B]
	0x03CDADD8 LDP X20, X19, [X31 + 0x20]
	0x03CDADDC LDP X22, X21, [X31 + 0x10]
	0x03CDADE0 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x70E000
	007 Move W8, [X20+1147]
	008 Move V8, V1
	009 Move V9, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x47F000
	016 Move X0, [X0+2968]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1147], W8
	020 Move X0, [X19+328]
	021 Compare X0, 0
	022 JumpIfEqual {42}
	023 Move X8, 0x47F000
	024 Move X8, [X8+2968]
	025 Move X1, [X8]
	026 Call 0x21E62E4, X0
	027 Compare X0, 0
	028 JumpIfEqual {42}
	029 Move X1, X31
	030 Call CanvasGroup.get_alpha, X0
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move V1, V0
	036 Move V0, V9
	037 Move V2, V8
	038 Move D9, [X31+48]
	039 Move D8, [X31+56]
	040 Call Dropdown.AlphaFadeList, X0, V0, V1, V2
	041 Return 
	042 Call 0x1C17F20

Method: System.Void AlphaFadeList(System.Single duration, System.Single start, System.Single end)

Disassembly:
	0x03CDA574 LDRB W8, [X20 + 0x489]
	0x03CDA578 MOV X19, X0
	0x03CDA57C TBNZ X8, 0x0, 0x3CDA600
	0x03CDA580 ADRP X0, 0x487000
	0x03CDA584 LDR X0, [X0 + 0xFF0]
	0x03CDA588 BL 0x1C16CF4
	0x03CDA58C ADRP X0, 0x488000
	0x03CDA590 LDR X0, [X0 + 0x378]
	0x03CDA594 BL 0x1C16CF4
	0x03CDA598 ADRP X0, 0x488000
	0x03CDA59C LDR X0, [X0 + 0x380]
	0x03CDA5A0 BL 0x1C16CF4
	0x03CDA5A4 ADRP X0, 0x488000
	0x03CDA5A8 LDR X0, [X0 + 0x388]
	0x03CDA5AC BL 0x1C16CF4
	0x03CDA5B0 ADRP X0, 0x488000
	0x03CDA5B4 LDR X0, [X0 + 0x390]
	0x03CDA5B8 BL 0x1C16CF4
	0x03CDA5BC ADRP X0, 0x488000
	0x03CDA5C0 LDR X0, [X0 + 0x398]
	0x03CDA5C4 BL 0x1C16CF4
	0x03CDA5C8 ADRP X0, 0x488000
	0x03CDA5CC LDR X0, [X0 + 0x3A0]
	0x03CDA5D0 BL 0x1C16CF4
	0x03CDA5D4 ADRP X0, 0x488000
	0x03CDA5D8 LDR X0, [X0 + 0x3A8]
	0x03CDA5DC BL 0x1C16CF4
	0x03CDA5E0 ADRP X0, 0x488000
	0x03CDA5E4 LDR X0, [X0 + 0x3B0]
	0x03CDA5E8 BL 0x1C16CF4
	0x03CDA5EC ADRP X0, 0x419000
	0x03CDA5F0 LDR X0, [X0 + 0x598]
	0x03CDA5F4 BL 0x1C16CF4
	0x03CDA5F8 MOVZ W8, 0x1
	0x03CDA5FC STRB W8, [X20 + 0x489]
	0x03CDA600 STR X31, [X31 + 0x8]
	0x03CDA604 CBZ X19, 0x3CDA7A8
	0x03CDA608 ADRP X20, 0x419000
	0x03CDA60C LDR X20, [X20 + 0x598]
	0x03CDA610 MOV X0, X19
	0x03CDA614 MOV X1, X31
	0x03CDA618 BL 0x3E450E8
	0x03CDA61C LDR X8, [X20]
	0x03CDA620 MOV X20, X0
	0x03CDA624 LDR W9, [X8 + 0xE0]
	0x03CDA628 CBNZ W9, 0x3CDA634
	0x03CDA62C MOV X0, X8
	0x03CDA630 BL 0x1C16DFC
	0x03CDA634 MOV X0, X20
	0x03CDA638 MOV X1, X31
	0x03CDA63C MOV X2, X31
	0x03CDA640 BL 0x3C3883C
	0x03CDA644 TBNZ X0, 0x0, 0x3CDA798
	0x03CDA648 ADRP X21, 0x488000
	0x03CDA64C LDR X21, [X21 + 0x398]
	0x03CDA650 LDR X0, [X21]
	0x03CDA654 LDR W8, [X0 + 0xE0]
	0x03CDA658 CBNZ W8, 0x3CDA664
	0x03CDA65C BL 0x1C16DFC
	0x03CDA660 LDR X0, [X21]
	0x03CDA664 LDR X8, [X0 + 0xB8]
	0x03CDA668 MOV X0, X19
	0x03CDA66C MOV X1, X31
	0x03CDA670 LDR X20, [X8]
	0x03CDA674 BL 0x3E450E8
	0x03CDA678 CBZ X20, 0x3CDA7A8
	0x03CDA67C ADRP X8, 0x488000
	0x03CDA680 LDR X8, [X8 + 0x380]
	0x03CDA684 MOV X1, X0
	0x03CDA688 ADD X2, X31, 0x8
	0x03CDA68C MOV X0, X20
	0x03CDA690 LDR X3, [X8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], D9
	003 Move [X31+88], D8
	004 Move [X31+96], X30
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X20, 0x70E000
	008 Move W8, [X20+1148]
	009 Move V8, V1
	010 Move V9, V0
	011 Move X19, X0
	012 Move [X31+108], S2
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x489000
	018 Move X0, [X0+816]
	019 Call 0x1C17CF4
	020 Move X0, 0x489000
	021 Move X0, [X0+824]
	022 Call 0x1C17CF4
	023 Move X0, 0x47F000
	024 Move X0, [X0+2920]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1148], W8
	028 Add X0, X31, 108
	029 Move V0, V8
	030 Move X1, X31
	031 Move [X31+24], X31
	032 Move [X31+32], X31
	033 Move [X31+40], X31
	034 Call Single.Equals, X0, V0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {78}
	039 Move [X31+24], X31
	040 Move [X31+40], S9
	041 Move X8, 0x47F000
	042 Move V0, [X31+108]
	043 Move X8, [X8+2920]
	044 Move [X31+44], W31
	045 Move [X31+32], S8
	046 Move [X31+40], S0
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X8, 0x489000
	050 Move X8, [X8+816]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X20, X0
	054 Move X2, [X8]
	055 Call UnityAction`1<Single>..ctor, X0, X1, X2
	056 Add X0, X31, 24
	057 Move X1, X20
	058 Move X2, X31
	059 Call FloatTween.AddOnChangedCallback, X0, X1
	060 Move W8, 1
	061 Move [X31+44], W8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move X0, [X19+352]
	064 Move X8, [X31+40]
	065 Move [X31], V0
	066 Move [X31+16], X8
	067 Compare X0, 0
	068 JumpIfEqual {85}
	069 Move X8, 0x489000
	070 Move X8, [X8+824]
	071 Move V0, [X31]
	072 Move X9, [X31+16]
	073 Add X1, X31, 48
	074 Move X2, [X8]
	075 Move [X31+3], V0
	076 Move [X31+64], X9
	077 Call TweenRunner`1<FloatTween>.StartTween, X0, X1
	078 Move X20, [X31+112]
	079 Move X19, [X31+120]
	080 Move X30, [X31+96]
	081 Move D9, [X31+80]
	082 Move D8, [X31+88]
	083 Add X31, X31, 128
	084 Return 
	085 Call 0x1C17F20

Method: System.Void SetAlpha(System.Single alpha)

Disassembly:
	0x03CDADE4 RET
	0x03CDADE8 STP X30, X21, [X31 - 0x20]!
	0x03CDADEC STP X20, X19, [X31 + 0x10]
	0x03CDADF0 ADRP X21, 0x70D000
	0x03CDADF4 ADRP X20, 0x419000
	0x03CDADF8 LDRB W8, [X21 + 0x498]
	0x03CDADFC LDR X20, [X20 + 0x598]
	0x03CDAE00 MOV X19, X0
	0x03CDAE04 TBNZ X8, 0x0, 0x3CDAE1C
	0x03CDAE08 ADRP X0, 0x419000
	0x03CDAE0C LDR X0, [X0 + 0x598]
	0x03CDAE10 BL 0x1C16CF4
	0x03CDAE14 MOVZ W8, 0x1
	0x03CDAE18 STRB W8, [X21 + 0x498]
	0x03CDAE1C LDR X0, [X20]
	0x03CDAE20 LDR X20, [X19 + 0x60]
	0x03CDAE24 LDR W8, [X0 + 0xE0]
	0x03CDAE28 CBNZ W8, 0x3CDAE30
	0x03CDAE2C BL 0x1C16DFC
	0x03CDAE30 MOV X0, X20
	0x03CDAE34 MOV X1, X31
	0x03CDAE38 MOV X2, X31
	0x03CDAE3C BL 0x3C3883C
	0x03CDAE40 TBZ X0, 0x0, 0x3CDAE4C
	0x03CDAE44 MOV X0, X19
	0x03CDAE48 BL 0x3CDB9B4
	0x03CDAE4C LDR X0, [X19 + 0x60]
	0x03CDAE50 LDP X20, X19, [X31 + 0x10]
	0x03CDAE54 LDP X30, X21, [X31], #0x20
	0x03CDAE58 RET
	0x03CDAE5C STR X30, [X31 - 0x30]!
	0x03CDAE60 STP X22, X21, [X31 + 0x10]
	0x03CDAE64 STP X20, X19, [X31 + 0x20]
	0x03CDAE68 ADRP X22, 0x70D000
	0x03CDAE6C ADRP X21, 0x419000
	0x03CDAE70 LDRB W8, [X22 + 0x4C2]
	0x03CDAE74 LDR X21, [X21 + 0x598]
	0x03CDAE78 MOV X20, X1
	0x03CDAE7C MOV X19, X0
	0x03CDAE80 TBNZ X8, 0x0, 0x3CDAED4
	0x03CDAE84 ADRP X0, 0x488000
	0x03CDAE88 LDR X0, [X0 + 0x400]
	0x03CDAE8C BL 0x1C16CF4
	0x03CDAE90 ADRP X0, 0x488000
	0x03CDAE94 LDR X0, [X0 + 0x408]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x70E000
	007 Move X20, 0x41A000
	008 Move W8, [X21+1149]
	009 Move X20, [X20+1432]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x47F000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move X0, 0x41A000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1149], W8
	024 Move X0, [X20]
	025 Move X20, [X19+328]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object.op_Implicit, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {55}
	037 Move X0, [X19+328]
	038 Compare X0, 0
	039 JumpIfEqual {61}
	040 Move X8, 0x47F000
	041 Move X8, [X8+2968]
	042 Move X1, [X8]
	043 Call 0x21E62E4, X0
	044 Compare X0, 0
	045 JumpIfEqual {61}
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Move V0, V8
	051 Move X1, X31
	052 Move V8, [X31+48]
	053 Call CanvasGroup.set_alpha, X0, V0
	054 Return 
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Move V8, [X31+48]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void Hide()

Disassembly:
	0x03CDA18C BL 0x1C16F20
	0x03CDA190 STR X30, [X31 - 0x30]!
	0x03CDA194 STP X22, X21, [X31 + 0x10]
	0x03CDA198 STP X20, X19, [X31 + 0x20]
	0x03CDA19C ADRP X21, 0x70D000
	0x03CDA1A0 ADRP X22, 0x488000
	0x03CDA1A4 ADRP X20, 0x419000
	0x03CDA1A8 LDRB W8, [X21 + 0x484]
	0x03CDA1AC LDR X22, [X22 + 0x360]
	0x03CDA1B0 LDR X20, [X20 + 0x598]
	0x03CDA1B4 MOV X19, X0
	0x03CDA1B8 TBNZ X8, 0x0, 0x3CDA1DC
	0x03CDA1BC ADRP X0, 0x488000
	0x03CDA1C0 LDR X0, [X0 + 0x360]
	0x03CDA1C4 BL 0x1C16CF4
	0x03CDA1C8 ADRP X0, 0x419000
	0x03CDA1CC LDR X0, [X0 + 0x598]
	0x03CDA1D0 BL 0x1C16CF4
	0x03CDA1D4 MOVZ W8, 0x1
	0x03CDA1D8 STRB W8, [X21 + 0x484]
	0x03CDA1DC LDR X1, [X22]
	0x03CDA1E0 MOV X0, X19
	0x03CDA1E4 BL 0x21A3F50
	0x03CDA1E8 LDR X8, [X20]
	0x03CDA1EC MOV X19, X0
	0x03CDA1F0 LDR W9, [X8 + 0xE0]
	0x03CDA1F4 CBNZ W9, 0x3CDA200
	0x03CDA1F8 MOV X0, X8
	0x03CDA1FC BL 0x1C16DFC
	0x03CDA200 MOV X0, X19
	0x03CDA204 MOV X1, X31
	0x03CDA208 BL 0x3C38948
	0x03CDA20C TBZ X0, 0x0, 0x3CDA228
	0x03CDA210 CBZ X19, 0x3CDA238
	0x03CDA214 MOV X0, X19
	0x03CDA218 LDP X20, X19, [X31 + 0x20]
	0x03CDA21C LDP X22, X21, [X31 + 0x10]
	0x03CDA220 LDR X30, [X31], #0x30
	0x03CDA224 B 0x3CD918C
	0x03CDA228 LDP X20, X19, [X31 + 0x20]
	0x03CDA22C LDP X22, X21, [X31 + 0x10]
	0x03CDA230 LDR X30, [X31], #0x30
	0x03CDA234 RET
	0x03CDA238 BL 0x1C16F20
	0x03CDA23C MOV X1, X31
	0x03CDA240 B 0x3C36C30
	0x03CDA244 LDR X0, [X0 + 0x10]
	0x03CDA248 RET
	0x03CDA24C STR X1, [X0 + 0x10]
	0x03CDA250 RET
	0x03CDA254 LDR X0, [X0 + 0x18]
	0x03CDA258 RET
	0x03CDA25C STR X1, [X0 + 0x18]
	0x03CDA260 RET
	0x03CDA264 STP X30, X21, [X31 - 0x20]!
	0x03CDA268 STP X20, X19, [X31 + 0x10]
	0x03CDA26C MOV X20, X1
	0x03CDA270 MOV X1, X31
	0x03CDA274 MOV X19, X2
	0x03CDA278 MOV X21, X0
	0x03CDA27C BL 0x33BDD8C
	0x03CDA280 STP X20, X19, [X21 + 0x10]
	0x03CDA284 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x70E000
	006 Move X21, 0x41A000
	007 Move W8, [X20+1150]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x41A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1150], W8
	019 Move X0, [X21]
	020 Move X20, [X19+328]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {53}
	033 Move V0, [X19+320]
	034 Move S1, W31
	035 Move X0, X19
	036 Call Dropdown.AlphaFadeList, X0, V0, V1
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+456]
	040 Move X1, [X8+464]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {53}
	046 Move V0, [X19+320]
	047 Move X0, X19
	048 Call Dropdown.DelayedDestroyDropdownList, X0, V0
	049 Move X1, X0
	050 Move X0, X19
	051 Move X2, X31
	052 Call MonoBehaviour.StartCoroutine, X0, X1
	053 Move X0, [X21]
	054 Move X20, [X19+336]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {73}
	067 Move X8, [X19]
	068 Move X1, [X19+336]
	069 Move X0, X19
	070 Move X9, [X8+1048]
	071 Move X2, [X8+1056]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X19]
	074 Move [X19+336], X31
	075 Move X0, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X2, [X8+920]
	079 Move X1, [X8+928]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 CallNoReturn X2

Method: System.Collections.IEnumerator DelayedDestroyDropdownList(System.Single delay)

Disassembly:
	0x03CDAE98 BL 0x1C16CF4
	0x03CDAE9C ADRP X0, 0x46F000
	0x03CDAEA0 LDR X0, [X0 + 0x580]
	0x03CDAEA4 BL 0x1C16CF4
	0x03CDAEA8 ADRP X0, 0x488000
	0x03CDAEAC LDR X0, [X0 + 0x410]
	0x03CDAEB0 BL 0x1C16CF4
	0x03CDAEB4 ADRP X0, 0x488000
	0x03CDAEB8 LDR X0, [X0 + 0x418]
	0x03CDAEBC BL 0x1C16CF4
	0x03CDAEC0 ADRP X0, 0x419000
	0x03CDAEC4 LDR X0, [X0 + 0x598]
	0x03CDAEC8 BL 0x1C16CF4
	0x03CDAECC MOVZ W8, 0x1
	0x03CDAED0 STRB W8, [X22 + 0x4C2]
	0x03CDAED4 LDR X0, [X21]
	0x03CDAED8 STR X31, [X31 + 0x8]
	0x03CDAEDC LDR W8, [X0 + 0xE0]
	0x03CDAEE0 CBNZ W8, 0x3CDAEE8
	0x03CDAEE4 BL 0x1C16DFC
	0x03CDAEE8 MOV X0, X19
	0x03CDAEEC MOV X1, X31
	0x03CDAEF0 MOV X2, X31
	0x03CDAEF4 BL 0x3C3883C
	0x03CDAEF8 TBNZ X0, 0x0, 0x3CDAFC4
	0x03CDAEFC LDR X0, [X21]
	0x03CDAF00 LDR W8, [X0 + 0xE0]
	0x03CDAF04 CBNZ W8, 0x3CDAF0C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x70E000
	007 Move X21, 0x489000
	008 Move W8, [X20+1151]
	009 Move X21, [X21+856]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x489000
	017 Move X0, [X0+856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1151], W8
	021 Move X0, [X21]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X20+16], W31
	027 Move [X20+40], X19
	028 Move [X20+32], S8
	029 Move X0, X20
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Move V8, [X31+48]
	035 Return X0

Method: System.Void ImmediateDestroyDropdownList()

Disassembly:
	0x03CD8A1C CMP X9, X8
	0x03CD8A20 CSEL X21, X0, X31, EQ
	0x03CD8A24 B 0x3CD8A2C
	0x03CD8A28 MOV X21, X31
	0x03CD8A2C LDR X0, [X19 + 0x30]
	0x03CD8A30 CBZ X0, 0x3CD90CC
	0x03CD8A34 MOV X1, X31
	0x03CD8A38 BL 0x3C32ECC
	0x03CD8A3C CBZ X0, 0x3CD90CC
	0x03CD8A40 MOVZ W1, 0x1
	0x03CD8A44 MOV X2, X31
	0x03CD8A48 BL 0x3C357B4
	0x03CD8A4C CBZ X21, 0x3CD90CC
	0x03CD8A50 MOV X0, X21
	0x03CD8A54 MOV X1, X31
	0x03CD8A58 BL 0x3C3E51C
	0x03CD8A5C LDR X0, [X19 + 0x30]
	0x03CD8A60 CBZ X0, 0x3CD90CC
	0x03CD8A64 MOV X1, X31
	0x03CD8A68 MOV V9.16B, V1.16B
	0x03CD8A6C MOV V10.16B, V3.16B
	0x03CD8A70 BL 0x3C3E51C
	0x03CD8A74 LDR X0, [X19 + 0x30]
	0x03CD8A78 CBZ X0, 0x3CD90CC
	0x03CD8A7C MOV X1, X31
	0x03CD8A80 MOV V11.16B, V1.16B
	0x03CD8A84 MOV V14.16B, V3.16B
	0x03CD8A88 BL 0x3C3EB78
	0x03CD8A8C LDR X0, [X19 + 0x30]
	0x03CD8A90 CBZ X0, 0x3CD90CC
	0x03CD8A94 MOV X1, X31
	0x03CD8A98 MOV V12.16B, V1.16B
	0x03CD8A9C BL 0x3C3EB78
	0x03CD8AA0 LDR X8, [X28 + 0x158]
	0x03CD8AA4 CBZ X8, 0x3CD90CC
	0x03CD8AA8 LDP W2, W9, [X8 + 0x18]
	0x03CD8AAC MOV V13.16B, V1.16B
	0x03CD8AB0 ADD W9, W9, 0x1
	0x03CD8AB4 CMP W2, 0x1
	0x03CD8AB8 STP W31, W9, [X8 + 0x18]
	0x03CD8ABC B.LT 0x3CD8AD0
	0x03CD8AC0 LDR X0, [X8 + 0x10]
	0x03CD8AC4 MOV W1, W31
	0x03CD8AC8 MOV X3, X31
	0x03CD8ACC BL 0x339FA34
	0x03CD8AD0 LDR X8, [X28 + 0x130]
	0x03CD8AD4 STR X21, [X31 + 0x50]
	0x03CD8AD8 STR X24, [X31 + 0x20]
	0x03CD8ADC CBZ X8, 0x3CD90CC
	0x03CD8AE0 LDR X8, [X8 + 0x10]
	0x03CD8AE4 STR X20, [X31 + 0x38]
	0x03CD8AE8 CBZ X8, 0x3CD90CC
	0x03CD8AEC LDR W20, [X8 + 0x18]
	0x03CD8AF0 STP X19, X28, [X31 + 0x28]
	0x03CD8AF4 CMP W20, 0x1
	0x03CD8AF8 B.LT 0x3CD8D24
	0x03CD8AFC ADRP X23, 0x48A000
	0x03CD8B00 ADRP X22, 0x48A000
	0x03CD8B04 LDR X23, [X23 + 0x320]
	0x03CD8B08 LDR X22, [X22 + 0x258]
	0x03CD8B0C ADD X8, X31, 0x80
	0x03CD8B10 MOV X25, X31
	0x03CD8B14 MOV W24, W31
	0x03CD8B18 ORR X21, X8, 0x7
	0x03CD8B1C LDR X0, [X23]
	0x03CD8B20 BL 0x1C16F10
	0x03CD8B24 MOV X1, X31
	0x03CD8B28 MOV X26, X0
	0x03CD8B2C BL 0x33BDD8C
	0x03CD8B30 CBZ X26, 0x3CD90CC
	0x03CD8B34 STR X28, [X26 + 0x18]
	0x03CD8B38 LDR X8, [X28 + 0x130]
	0x03CD8B3C CBZ X8, 0x3CD90CC
	0x03CD8B40 LDR X0, [X8 + 0x10]
	0x03CD8B44 CBZ X0, 0x3CD90CC
	0x03CD8B48 LDR X2, [X22]
	0x03CD8B4C MOV W1, W24
	0x03CD8B50 BL 0x301BCCC
	0x03CD8B54 LDR X4, [X28 + 0x158]
	0x03CD8B58 MOV X1, X0
	0x03CD8B5C MOV X0, X28
	0x03CD8B60 MOV W2, W31
	0x03CD8B64 MOV X3, X19
	0x03CD8B68 BL 0x3CD9290
	0x03CD8B6C STR X0, [X26 + 0x10]
	0x03CD8B70 ADRP X8, 0x41B000
	0x03CD8B74 LDR X8, [X8 + 0x598]
	0x03CD8B78 MOV X27, X0
	0x03CD8B7C LDR X0, [X8]
	0x03CD8B80 LDR W8, [X0 + 0xE0]
	0x03CD8B84 CBNZ W8, 0x3CD8B8C
	0x03CD8B88 BL 0x1C16DFC
	0x03CD8B8C MOV X0, X27

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x710000
	009 Move W8, [X20+1152]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x48B000
	016 Move X0, [X0+696]
	017 Call 0x1C17CF4
	018 Move X0, 0x48B000
	019 Move X0, [X0+704]
	020 Call 0x1C17CF4
	021 Move X0, 0x48B000
	022 Move X0, [X0+712]
	023 Call 0x1C17CF4
	024 Move X0, 0x41C000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1152], W8
	029 Move X0, [X19+344]
	030 Compare X0, 0
	031 JumpIfEqual {74}
	032 Move W8, [X0+24]
	033 Move X23, 0x48B000
	034 Move X22, 0x41C000
	035 Move X23, [X23+712]
	036 Move X22, [X22+1432]
	037 Move W20, W31
	038 NotImplemented "Instruction BIC not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, [X23]
	041 Move W1, W20
	042 Call List`1<Object>.get_Item, X0, X1
	043 Move X8, [X22]
	044 Move X21, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {70}
	058 Move X0, [X19+344]
	059 Compare X0, 0
	060 JumpIfEqual {74}
	061 Move X2, [X23]
	062 Move W1, W20
	063 Call List`1<Object>.get_Item, X0, X1
	064 Move X8, [X19]
	065 Move X1, X0
	066 Move X0, X19
	067 Move X9, [X8+1112]
	068 Move X2, [X8+1120]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X0, [X19+344]
	071 Add W20, W20, 1
	072 Compare X0, 0
	073 JumpIfNotEqual {39}
	074 Call 0x1C17F20
	075 Move W2, [X0+24]
	076 Move W8, [X0+28]
	077 Add W8, W8, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X0+24], W31
	080 Move [X0+28], W8
	081 Move X0, [X0+16]
	082 Move W1, W31
	083 Move X3, X31
	084 Call Array.Clear, X0, X1, X2
	085 Move X0, [X22]
	086 Move X20, [X19+328]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X20
	092 Move X1, X31
	093 Move X2, X31
	094 Call Object.op_Inequality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {105}
	099 Move X8, [X19]
	100 Move X1, [X19+328]
	101 Move X0, X19
	102 Move X9, [X8+1080]
	103 Move X2, [X8+1088]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move [X19+328], X31
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+64]
	113 Return 

Method: System.Void OnSelectItem(UnityEngine.UI.Toggle toggle)

Disassembly:
	0x03CDAF30 CBNZ W8, 0x3CDAF38
	0x03CDAF34 BL 0x1C16DFC
	0x03CDAF38 BL 0x3CDF9A4
	0x03CDAF3C CBZ X0, 0x3CDAFD4
	0x03CDAF40 LDR X0, [X0 + 0x18]
	0x03CDAF44 CBZ X0, 0x3CDAFD4
	0x03CDAF48 ADRP X8, 0x488000
	0x03CDAF4C LDR X8, [X8 + 0x408]
	0x03CDAF50 ADD X2, X31, 0x8
	0x03CDAF54 MOV X1, X19
	0x03CDAF58 LDR X3, [X8]
	0x03CDAF5C BL 0x2AA6B2C
	0x03CDAF60 TBZ X0, 0x0, 0x3CDAFC4
	0x03CDAF64 LDR X0, [X31 + 0x8]
	0x03CDAF68 CBZ X0, 0x3CDAFD4
	0x03CDAF6C ADRP X8, 0x488000
	0x03CDAF70 LDR X8, [X8 + 0x410]
	0x03CDAF74 MOV X1, X20
	0x03CDAF78 LDR X2, [X8]
	0x03CDAF7C BL 0x2DE291C
	0x03CDAF80 LDR X8, [X31 + 0x8]
	0x03CDAF84 CBZ X8, 0x3CDAFD4
	0x03CDAF88 LDR W8, [X8 + 0x20]
	0x03CDAF8C CBNZ W8, 0x3CDAFC4
	0x03CDAF90 LDR X0, [X21]
	0x03CDAF94 LDR W8, [X0 + 0xE0]
	0x03CDAF98 CBNZ W8, 0x3CDAFA0
	0x03CDAF9C BL 0x1C16DFC
	0x03CDAFA0 BL 0x3CDF9A4
	0x03CDAFA4 CBZ X0, 0x3CDAFD4
	0x03CDAFA8 LDR X0, [X0 + 0x18]
	0x03CDAFAC CBZ X0, 0x3CDAFD4
	0x03CDAFB0 ADRP X8, 0x488000
	0x03CDAFB4 LDR X8, [X8 + 0x400]
	0x03CDAFB8 MOV X1, X19
	0x03CDAFBC LDR X2, [X8]
	0x03CDAFC0 BL 0x2AA64F8
	0x03CDAFC4 LDP X20, X19, [X31 + 0x20]
	0x03CDAFC8 LDP X22, X21, [X31 + 0x10]
	0x03CDAFCC LDR X30, [X31], #0x30
	0x03CDAFD0 RET
	0x03CDAFD4 BL 0x1C16F20
	0x03CDAFD8 STR X30, [X31 - 0x30]!
	0x03CDAFDC STP X22, X21, [X31 + 0x10]
	0x03CDAFE0 STP X20, X19, [X31 + 0x20]
	0x03CDAFE4 ADRP X22, 0x70D000
	0x03CDAFE8 ADRP X21, 0x419000
	0x03CDAFEC LDRB W8, [X22 + 0x4C0]
	0x03CDAFF0 LDR X21, [X21 + 0x598]
	0x03CDAFF4 MOV X20, X1
	0x03CDAFF8 MOV X19, X0
	0x03CDAFFC TBNZ X8, 0x0, 0x3CDB068
	0x03CDB000 ADRP X0, 0x487000
	0x03CDB004 LDR X0, [X0 + 0x420]
	0x03CDB008 BL 0x1C16CF4
	0x03CDB00C ADRP X0, 0x487000
	0x03CDB010 LDR X0, [X0 + 0x408]
	0x03CDB014 BL 0x1C16CF4
	0x03CDB018 ADRP X0, 0x46E000
	0x03CDB01C LDR X0, [X0 + 0x580]
	0x03CDB020 BL 0x1C16CF4
	0x03CDB024 ADRP X0, 0x487000
	0x03CDB028 LDR X0, [X0 + 0x428]
	0x03CDB02C BL 0x1C16CF4
	0x03CDB030 ADRP X0, 0x487000
	0x03CDB034 LDR X0, [X0 + 0x430]
	0x03CDB038 BL 0x1C16CF4
	0x03CDB03C ADRP X0, 0x487000
	0x03CDB040 LDR X0, [X0 + 0x438]
	0x03CDB044 BL 0x1C16CF4
	0x03CDB048 ADRP X0, 0x487000
	0x03CDB04C LDR X0, [X0 + 0x440]
	0x03CDB050 BL 0x1C16CF4
	0x03CDB054 ADRP X0, 0x418000
	0x03CDB058 LDR X0, [X0 + 0x598]
	0x03CDB05C BL 0x1C16CF4
	0x03CDB060 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x70E000
	009 Move W8, [X21+1153]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x41A000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1153], W8
	021 Compare X20, 0
	022 JumpIfEqual {100}
	023 Move W8, [X20+288]
	024 Compare W8, 0
	025 JumpIfNotEqual {30}
	026 Move W1, 1
	027 Move X0, X20
	028 Move X2, X31
	029 Call Toggle.set_isOn, X0, X1
	030 Move X0, X20
	031 Move X1, X31
	032 Call Component.get_transform, X0
	033 Compare X0, 0
	034 JumpIfEqual {100}
	035 Move X1, X31
	036 Move X20, X0
	037 Call Transform.get_parent, X0
	038 Compare X0, 0
	039 JumpIfEqual {100}
	040 Move X1, X31
	041 Move X21, X0
	042 Call Transform.get_childCount, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X24, 0x41A000
	045 Move X24, [X24+1432]
	046 Move TEMP, 0
	047 Not TEMP
	048 Move W22, TEMP
	049 Add W1, W22, 1
	050 Move X0, X21
	051 Move X2, X31
	052 Call Transform.GetChild, X0, X1
	053 Move X8, [X24]
	054 Move X23, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X0, X23
	061 Move X1, X20
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {74}
	068 Move X0, X21
	069 Move X1, X31
	070 Call Transform.get_childCount, X0
	071 Add W8, W22, 2
	072 Add W22, W22, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move TEMP, X22
	075 And TEMP, TEMP, -2147483648
	076 Compare TEMP, -2147483648
	077 JumpIfEqual {92}
	078 Move W2, 1
	079 Move X0, X19
	080 Move W1, W22
	081 Call Dropdown.Set, X0, X1, X2
	082 Move X0, X19
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Call Dropdown.Hide, X0
	091 Return 
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 Move X24, [X31+16]
	097 Move X23, [X31+24]
	098 Move X30, [X31+64]
	099 Return 
	100 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03CDB064 STRB W8, [X22 + 0x4C0]
	0x03CDB068 LDR X0, [X21]
	0x03CDB06C STR X31, [X31 + 0x8]
	0x03CDB070 LDR W8, [X0 + 0xE0]
	0x03CDB074 CBNZ W8, 0x3CDB07C
	0x03CDB078 BL 0x1C16DFC
	0x03CDB07C MOV X0, X19
	0x03CDB080 MOV X1, X31
	0x03CDB084 MOV X2, X31
	0x03CDB088 BL 0x3C3883C
	0x03CDB08C TBNZ X0, 0x0, 0x3CDB1B0
	0x03CDB090 LDR X0, [X21]
	0x03CDB094 LDR W8, [X0 + 0xE0]
	0x03CDB098 CBNZ W8, 0x3CDB0A0
	0x03CDB09C BL 0x1C16DFC
	0x03CDB0A0 MOV X0, X20
	0x03CDB0A4 MOV X1, X31
	0x03CDB0A8 MOV X2, X31
	0x03CDB0AC BL 0x3C3883C
	0x03CDB0B0 TBNZ X0, 0x0, 0x3CDB1B0
	0x03CDB0B4 CBZ X20, 0x3CDB1C0
	0x03CDB0B8 LDR X8, [X20]
	0x03CDB0BC MOV X0, X20
	0x03CDB0C0 LDR X9, [X8 + 0x2B8]
	0x03CDB0C4 LDR X1, [X8 + 0x2C0]
	0x03CDB0C8 BLR X9
	0x03CDB0CC TBZ X0, 0x0, 0x3CDB1B0
	0x03CDB0D0 ADRP X22, 0x46E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x70D000
	006 Move X21, 0x440000
	007 Move X20, 0x488000
	008 Move W8, [X19+1154]
	009 Move X21, [X21+3296]
	010 Move X20, [X20+584]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x488000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0x440000
	019 Move X0, [X0+3296]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1154], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

