Type: UnityEngine.UIElements.PanelRaycaster

Method: UnityEngine.UIElements.IPanel get_panel()

Disassembly:
	0x03E4F3A4 LDR X0, [X0 + 0x28]
	0x03E4F3A8 RET

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_panel(UnityEngine.UIElements.IPanel value)

Disassembly:
	0x03E4F3AC STR X30, [X31 - 0x30]!
	0x03E4F3B0 STP X22, X21, [X31 + 0x10]
	0x03E4F3B4 STP X20, X19, [X31 + 0x20]
	0x03E4F3B8 ADRP X22, 0x599000
	0x03E4F3BC ADRP X21, 0x2A4000
	0x03E4F3C0 LDRB W8, [X22 + 0x857]
	0x03E4F3C4 LDR X21, [X21 + 0x598]
	0x03E4F3C8 MOV X19, X1
	0x03E4F3CC MOV X20, X0
	0x03E4F3D0 TBNZ X8, 0x0, 0x3E4F3E8
	0x03E4F3D4 ADRP X0, 0x2A4000
	0x03E4F3D8 LDR X0, [X0 + 0x598]
	0x03E4F3DC BL 0x1C16CF4
	0x03E4F3E0 MOVZ W8, 0x1
	0x03E4F3E4 STRB W8, [X22 + 0x857]
	0x03E4F3E8 LDR X0, [X21]
	0x03E4F3EC LDR X21, [X20 + 0x28]
	0x03E4F3F0 LDR W8, [X0 + 0xE0]
	0x03E4F3F4 CBNZ W8, 0x3E4F3FC
	0x03E4F3F8 BL 0x1C16DFC
	0x03E4F3FC MOV X0, X21
	0x03E4F400 MOV X1, X19
	0x03E4F404 MOV X2, X31
	0x03E4F408 BL 0x3C3883C
	0x03E4F40C TBNZ X0, 0x0, 0x3E4F418
	0x03E4F410 LDR X8, [X20 + 0x28]
	0x03E4F414 STP X19, X8, [X20 + 0x28]
	0x03E4F418 LDP X20, X19, [X31 + 0x20]
	0x03E4F41C LDP X22, X21, [X31 + 0x10]
	0x03E4F420 LDR X30, [X31], #0x30
	0x03E4F424 RET
	0x03E4F428 SUB X31, X31, 0xE0
	0x03E4F42C STP X29, X30, [X31 + 0x80]
	0x03E4F430 STP X28, X27, [X31 + 0x90]
	0x03E4F434 STP X26, X25, [X31 + 0xA0]
	0x03E4F438 STP X24, X23, [X31 + 0xB0]
	0x03E4F43C STP X22, X21, [X31 + 0xC0]
	0x03E4F440 STP X20, X19, [X31 + 0xD0]
	0x03E4F444 ADRP X23, 0x599000
	0x03E4F448 ADRP X20, 0x2A4000
	0x03E4F44C ADRP X21, 0x31C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59A000
	006 Move W8, [X21+2127]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2CD000
	014 Move X0, [X0+2328]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2127], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X9, 0x2CD000
	021 Move X9, [X9+2328]
	022 Move X8, [X19]
	023 Move X1, [X9]
	024 Move W10, [X8+304]
	025 Move W9, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X8+200]
	028 Add X8, X8, X9
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20+40]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Call PanelRaycaster.UnregisterCallbacks, X0
	035 Move [X20+40], X19
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call PanelRaycaster.RegisterCallbacks, X0
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Move X0, X19
	049 Call 0x1C181E0

Method: System.Void RegisterCallbacks()

Disassembly:
	0x03E4F4E0 ADRP X0, 0x31C000
	0x03E4F4E4 LDR X0, [X0 + 0x820]
	0x03E4F4E8 BL 0x1C16CF4
	0x03E4F4EC ADRP X0, 0x31C000
	0x03E4F4F0 LDR X0, [X0 + 0x7D8]
	0x03E4F4F4 BL 0x1C16CF4
	0x03E4F4F8 ADRP X0, 0x31C000
	0x03E4F4FC LDR X0, [X0 + 0x828]
	0x03E4F500 BL 0x1C16CF4
	0x03E4F504 ADRP X0, 0x31C000
	0x03E4F508 LDR X0, [X0 + 0x830]
	0x03E4F50C BL 0x1C16CF4
	0x03E4F510 ADRP X0, 0x31C000
	0x03E4F514 LDR X0, [X0 + 0x838]
	0x03E4F518 BL 0x1C16CF4
	0x03E4F51C ADRP X0, 0x31C000
	0x03E4F520 LDR X0, [X0 + 0x840]
	0x03E4F524 BL 0x1C16CF4
	0x03E4F528 ADRP X0, 0x31C000
	0x03E4F52C LDR X0, [X0 + 0x848]
	0x03E4F530 BL 0x1C16CF4
	0x03E4F534 ADRP X0, 0x31C000
	0x03E4F538 LDR X0, [X0 + 0x850]
	0x03E4F53C BL 0x1C16CF4
	0x03E4F540 ADRP X0, 0x31C000
	0x03E4F544 LDR X0, [X0 + 0x858]
	0x03E4F548 BL 0x1C16CF4
	0x03E4F54C ADRP X0, 0x31C000
	0x03E4F550 LDR X0, [X0 + 0x860]
	0x03E4F554 BL 0x1C16CF4
	0x03E4F558 ADRP X0, 0x31C000
	0x03E4F55C LDR X0, [X0 + 0x868]
	0x03E4F560 BL 0x1C16CF4
	0x03E4F564 ADRP X0, 0x31C000
	0x03E4F568 LDR X0, [X0 + 0x870]
	0x03E4F56C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x59A000
	006 Move W8, [X20+2128]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2A6000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x31D000
	016 Move X0, [X0+1968]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2128], W8
	020 Move X20, [X19+40]
	021 Compare X20, 0
	022 JumpIfEqual {43}
	023 Move X8, 0x2A6000
	024 Move X8, [X8+3696]
	025 Move X21, 0x31D000
	026 Move X0, [X8]
	027 Move X21, [X21+1968]
	028 Call 0x1C17F10
	029 Move X2, [X21]
	030 Move X1, X19
	031 Move X3, X31
	032 Move X21, X0
	033 Call Action..ctor, X0, X1, X2
	034 Move X0, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X21
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call BaseRuntimePanel.add_destroyed, X0, X1
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 

Method: System.Void UnregisterCallbacks()

Disassembly:
	0x03E4F450 LDRB W8, [X23 + 0x858]
	0x03E4F454 LDR X20, [X20 + 0x8F0]
	0x03E4F458 LDR X21, [X21 + 0x7D8]
	0x03E4F45C MOV X19, X0
	0x03E4F460 ADD X22, X0, 0x104
	0x03E4F464 TBNZ X8, 0x0, 0x3E4F584
	0x03E4F468 ADRP X0, 0x2A4000
	0x03E4F46C LDR X0, [X0 + 0xB58]
	0x03E4F470 BL 0x1C16CF4
	0x03E4F474 ADRP X0, 0x31C000
	0x03E4F478 LDR X0, [X0 + 0x7E0]
	0x03E4F47C BL 0x1C16CF4
	0x03E4F480 ADRP X0, 0x2A4000
	0x03E4F484 LDR X0, [X0 + 0x8F0]
	0x03E4F488 BL 0x1C16CF4
	0x03E4F48C ADRP X0, 0x31C000
	0x03E4F490 LDR X0, [X0 + 0x7E8]
	0x03E4F494 BL 0x1C16CF4
	0x03E4F498 ADRP X0, 0x31C000
	0x03E4F49C LDR X0, [X0 + 0x7F0]
	0x03E4F4A0 BL 0x1C16CF4
	0x03E4F4A4 ADRP X0, 0x31C000
	0x03E4F4A8 LDR X0, [X0 + 0x7F8]
	0x03E4F4AC BL 0x1C16CF4
	0x03E4F4B0 ADRP X0, 0x31C000
	0x03E4F4B4 LDR X0, [X0 + 0x800]
	0x03E4F4B8 BL 0x1C16CF4
	0x03E4F4BC ADRP X0, 0x31C000
	0x03E4F4C0 LDR X0, [X0 + 0x808]
	0x03E4F4C4 BL 0x1C16CF4
	0x03E4F4C8 ADRP X0, 0x31C000
	0x03E4F4CC LDR X0, [X0 + 0x810]
	0x03E4F4D0 BL 0x1C16CF4
	0x03E4F4D4 ADRP X0, 0x31C000
	0x03E4F4D8 LDR X0, [X0 + 0x818]
	0x03E4F4DC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x59A000
	006 Move W8, [X20+2129]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x2A6000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x31D000
	016 Move X0, [X0+1968]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2129], W8
	020 Move X20, [X19+40]
	021 Compare X20, 0
	022 JumpIfEqual {43}
	023 Move X8, 0x2A6000
	024 Move X8, [X8+3696]
	025 Move X21, 0x31D000
	026 Move X0, [X8]
	027 Move X21, [X21+1968]
	028 Call 0x1C17F10
	029 Move X2, [X21]
	030 Move X1, X19
	031 Move X3, X31
	032 Move X21, X0
	033 Call Action..ctor, X0, X1, X2
	034 Move X0, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X21
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call BaseRuntimePanel.remove_destroyed, X0, X1
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 

Method: System.Void OnPanelDestroyed()

Disassembly:
	0x03E4F570 ADRP X0, 0x31C000
	0x03E4F574 LDR X0, [X0 + 0x878]

ISIL:
	001 Move X1, X31
	002 Call PanelRaycaster.set_panel, X0, X1
	003 Return 

Method: UnityEngine.GameObject get_selectableGameObject()

Disassembly:
	0x03E4F578 BL 0x1C16CF4
	0x03E4F57C MOVZ W8, 0x1
	0x03E4F580 STRB W8, [X23 + 0x858]
	0x03E4F584 LDR X0, [X20]
	0x03E4F588 MOVI V0.2D, 0x0
	0x03E4F58C STRB W31, [X31 + 0x74]

ISIL:
	001 Move X8, [X0+40]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+352]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Int32 get_sortOrderPriority()

Disassembly:
	0x03E4F590 STP V0, V0, [X31 + 0x50]
	0x03E4F594 STP V0, V0, [X31 + 0x30]
	0x03E4F598 STR V0, [X31 + 0x2]
	0x03E4F59C STR X31, [X31 + 0x18]
	0x03E4F5A0 BL 0x1C16F10
	0x03E4F5A4 MOV X1, X31
	0x03E4F5A8 MOV X20, X0
	0x03E4F5AC BL 0x3231AC4
	0x03E4F5B0 LDR V0, [X22]
	0x03E4F5B4 ADD X0, X31, 0x78
	0x03E4F5B8 MOV X1, X31
	0x03E4F5BC MOV X2, X31
	0x03E4F5C0 MOV X3, X31
	0x03E4F5C4 STR D0, [X31 + 0x78]
	0x03E4F5C8 BL 0x25F34C4
	0x03E4F5CC LDR X8, [X21]
	0x03E4F5D0 MOV X1, X0
	0x03E4F5D4 MOV X2, X31
	0x03E4F5D8 MOV X0, X8
	0x03E4F5DC BL 0x321B938
	0x03E4F5E0 CBZ X20, 0x3E4FB5C
	0x03E4F5E4 ADRP X23, 0x31C000
	0x03E4F5E8 ADRP X28, 0x2A4000
	0x03E4F5EC ADRP X24, 0x31C000
	0x03E4F5F0 ADRP X21, 0x31C000
	0x03E4F5F4 LDR X23, [X23 + 0x858]
	0x03E4F5F8 LDR X28, [X28 + 0xB58]
	0x03E4F5FC LDR X24, [X24 + 0x838]
	0x03E4F600 LDR X21, [X21 + 0x820]
	0x03E4F604 MOV X1, X0
	0x03E4F608 MOV X0, X20

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0+40]
	005 Compare X8, 0
	006 JumpIfEqual {8}
	007 Move V8, [X8+364]
	008 Move S8, W31
	009 Move X19, 0x58A000
	010 Move W8, [X19+2595]
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x2A5000
	014 Move X0, [X0+1448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+2595], W8
	018 Move X8, 0x2A5000
	019 Move X8, [X8+1448]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W8, 0x7F800000
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction FRINTM not yet implemented."
	029 Move S1, W8
	030 NotImplemented "Instruction FCVTMS not yet implemented."
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move W8, 0x80000000
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move V8, [X31+32]
	035 Return X0

Method: System.Int32 get_renderOrderPriority()

Disassembly:
	0x03E4F60C MOV X2, X31
	0x03E4F610 BL 0x32338A8
	0x03E4F614 LDR V0, [X22 + 0x8]
	0x03E4F618 ADD X0, X31, 0x78
	0x03E4F61C MOV X1, X31
	0x03E4F620 MOV X2, X31
	0x03E4F624 MOV X3, X31
	0x03E4F628 STR D0, [X31 + 0x78]
	0x03E4F62C BL 0x25F34C4
	0x03E4F630 LDR X8, [X23]
	0x03E4F634 MOV X1, X0
	0x03E4F638 MOV X2, X31
	0x03E4F63C MOV X0, X8
	0x03E4F640 BL 0x321B938
	0x03E4F644 MOV X1, X0
	0x03E4F648 MOV X0, X20
	0x03E4F64C MOV X2, X31
	0x03E4F650 BL 0x32338A8
	0x03E4F654 LDRB W8, [X19 + 0xF8]
	0x03E4F658 LDR X0, [X28]
	0x03E4F65C STRB W8, [X31 + 0x74]
	0x03E4F660 LDR W8, [X0 + 0xE0]
	0x03E4F664 CBNZ W8, 0x3E4F66C
	0x03E4F668 BL 0x1C16DFC
	0x03E4F66C ADRP X23, 0x31C000
	0x03E4F670 LDR X23, [X23 + 0x848]
	0x03E4F674 ADD X0, X31, 0x74
	0x03E4F678 MOV X1, X31
	0x03E4F67C BL 0x33176C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59A000
	006 Move X20, 0x2CD000
	007 Move W8, [X21+2130]
	008 Move X20, [X20+2352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2CD000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2130], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X9, [X19+40]
	027 Move W8, [X8+28]
	028 Compare X9, 0
	029 JumpIfEqual {31}
	030 Move W9, [X9+368]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Subtract W8, W9, W8
	034 Move TEMP, 0x80000000
	035 Not TEMP
	036 Move W9, TEMP
	037 Add W0, W8, W9
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0

Method: System.Void Raycast(UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03E4F680 LDR X8, [X24]
	0x03E4F684 MOV X1, X0
	0x03E4F688 MOV X2, X31
	0x03E4F68C MOV X0, X8
	0x03E4F690 BL 0x321B938
	0x03E4F694 MOV X1, X0
	0x03E4F698 MOV X0, X20
	0x03E4F69C MOV X2, X31
	0x03E4F6A0 BL 0x32338A8
	0x03E4F6A4 LDR X0, [X19 + 0x20]
	0x03E4F6A8 LDR X21, [X21]
	0x03E4F6AC CBZ X0, 0x3E4F6C4
	0x03E4F6B0 LDR X8, [X0]
	0x03E4F6B4 LDP X9, X1, [X8 + 0x168]
	0x03E4F6B8 BLR X9
	0x03E4F6BC MOV X1, X0
	0x03E4F6C0 B 0x3E4F6C8
	0x03E4F6C4 MOV X1, X31
	0x03E4F6C8 ADRP X24, 0x31C000
	0x03E4F6CC LDR X24, [X24 + 0x7F0]
	0x03E4F6D0 MOV X0, X21
	0x03E4F6D4 MOV X2, X31
	0x03E4F6D8 BL 0x321B938
	0x03E4F6DC MOV X1, X0
	0x03E4F6E0 MOV X0, X20
	0x03E4F6E4 MOV X2, X31
	0x03E4F6E8 BL 0x32338A8
	0x03E4F6EC LDR X0, [X19 + 0x28]
	0x03E4F6F0 LDR X21, [X23]
	0x03E4F6F4 CBZ X0, 0x3E4F70C
	0x03E4F6F8 LDR X8, [X0]
	0x03E4F6FC LDP X9, X1, [X8 + 0x168]
	0x03E4F700 BLR X9
	0x03E4F704 MOV X1, X0
	0x03E4F708 B 0x3E4F710
	0x03E4F70C MOV X1, X31
	0x03E4F710 ADRP X23, 0x31C000
	0x03E4F714 LDR X23, [X23 + 0x7E8]
	0x03E4F718 MOV X0, X21
	0x03E4F71C MOV X2, X31
	0x03E4F720 BL 0x321B938
	0x03E4F724 MOV X1, X0
	0x03E4F728 MOV X0, X20
	0x03E4F72C MOV X2, X31
	0x03E4F730 BL 0x32338A8
	0x03E4F734 LDR X0, [X19 + 0x30]
	0x03E4F738 LDR X21, [X24]
	0x03E4F73C CBZ X0, 0x3E4F754
	0x03E4F740 LDR X8, [X0]
	0x03E4F744 LDP X9, X1, [X8 + 0x168]
	0x03E4F748 BLR X9
	0x03E4F74C MOV X1, X0
	0x03E4F750 B 0x3E4F758
	0x03E4F754 MOV X1, X31
	0x03E4F758 MOV X0, X21
	0x03E4F75C MOV X2, X31
	0x03E4F760 BL 0x321B938
	0x03E4F764 MOV X1, X0
	0x03E4F768 MOV X0, X20
	0x03E4F76C MOV X2, X31
	0x03E4F770 BL 0x32338A8
	0x03E4F774 LDR X0, [X19 + 0x40]
	0x03E4F778 LDR X21, [X23]
	0x03E4F77C CBZ X0, 0x3E4F794
	0x03E4F780 LDR X8, [X0]
	0x03E4F784 LDP X9, X1, [X8 + 0x168]
	0x03E4F788 BLR X9
	0x03E4F78C MOV X1, X0
	0x03E4F790 B 0x3E4F798
	0x03E4F794 MOV X1, X31
	0x03E4F798 ADRP X24, 0x31C000
	0x03E4F79C ADRP X23, 0x31C000
	0x03E4F7A0 ADRP X29, 0x31C000
	0x03E4F7A4 ADRP X27, 0x31C000
	0x03E4F7A8 ADRP X26, 0x31C000
	0x03E4F7AC ADRP X25, 0x31C000
	0x03E4F7B0 LDR X24, [X24 + 0x810]
	0x03E4F7B4 LDR X23, [X23 + 0x808]
	0x03E4F7B8 LDR X29, [X29 + 0x800]
	0x03E4F7BC LDR X27, [X27 + 0x878]
	0x03E4F7C0 LDR X26, [X26 + 0x830]
	0x03E4F7C4 LDR X25, [X25 + 0x840]
	0x03E4F7C8 MOV X0, X21
	0x03E4F7CC MOV X2, X31
	0x03E4F7D0 BL 0x321B938
	0x03E4F7D4 MOV X1, X0
	0x03E4F7D8 MOV X0, X20
	0x03E4F7DC MOV X2, X31
	0x03E4F7E0 BL 0x32338A8
	0x03E4F7E4 LDRB W8, [X19 + 0x144]
	0x03E4F7E8 LDR X0, [X28]
	0x03E4F7EC STRB W8, [X31 + 0x74]
	0x03E4F7F0 LDR W8, [X0 + 0xE0]
	0x03E4F7F4 CBNZ W8, 0x3E4F7FC
	0x03E4F7F8 BL 0x1C16DFC
	0x03E4F7FC ADD X0, X31, 0x74
	0x03E4F800 MOV X1, X31
	0x03E4F804 BL 0x33176C4
	0x03E4F808 LDR X8, [X24]
	0x03E4F80C MOV X1, X0
	0x03E4F810 MOV X2, X31
	0x03E4F814 MOV X0, X8
	0x03E4F818 BL 0x321B938
	0x03E4F81C MOV X1, X0
	0x03E4F820 MOV X0, X20
	0x03E4F824 MOV X2, X31
	0x03E4F828 BL 0x32338A8
	0x03E4F82C LDR X1, [X23]
	0x03E4F830 MOV X0, X20
	0x03E4F834 MOV X2, X31
	0x03E4F838 BL 0x32338A8
	0x03E4F83C ADD X1, X19, 0x50
	0x03E4F840 ADD X0, X31, 0x20
	0x03E4F844 MOVZ W2, 0x50
	0x03E4F848 BL 0x3EB1AC0
	0x03E4F84C ADD X0, X31, 0x20
	0x03E4F850 BL 0x3E4FB60
	0x03E4F854 MOV X1, X0
	0x03E4F858 MOV X0, X20
	0x03E4F85C MOV X2, X31
	0x03E4F860 BL 0x32338A8
	0x03E4F864 LDR X1, [X29]
	0x03E4F868 MOV X0, X20
	0x03E4F86C MOV X2, X31
	0x03E4F870 BL 0x32338A8
	0x03E4F874 ADD X1, X19, 0xA0
	0x03E4F878 ADD X0, X31, 0x20
	0x03E4F87C MOVZ W2, 0x50
	0x03E4F880 BL 0x3EB1AC0
	0x03E4F884 ADD X0, X31, 0x20
	0x03E4F888 BL 0x3E4FB60
	0x03E4F88C MOV X1, X0
	0x03E4F890 MOV X0, X20
	0x03E4F894 MOV X2, X31
	0x03E4F898 BL 0x32338A8
	0x03E4F89C LDR X1, [X27]
	0x03E4F8A0 MOV X0, X20
	0x03E4F8A4 MOV X2, X31
	0x03E4F8A8 BL 0x32338A8
	0x03E4F8AC LDR W8, [X19 + 0xFC]
	0x03E4F8B0 ADD X0, X31, 0x1C
	0x03E4F8B4 MOV X1, X31
	0x03E4F8B8 STR W8, [X31 + 0x1C]
	0x03E4F8BC BL 0x337B6E0
	0x03E4F8C0 MOV X1, X0
	0x03E4F8C4 MOV X0, X20
	0x03E4F8C8 MOV X2, X31
	0x03E4F8CC BL 0x32338A8
	0x03E4F8D0 LDR V0, [X19 + 0x14C]
	0x03E4F8D4 ADD X0, X31, 0x18
	0x03E4F8D8 MOV X1, X31
	0x03E4F8DC STR S0, [X31 + 0x18]
	0x03E4F8E0 BL 0x338FE24
	0x03E4F8E4 LDR X8, [X26]
	0x03E4F8E8 MOV X1, X0
	0x03E4F8EC MOV X2, X31
	0x03E4F8F0 MOV X0, X8
	0x03E4F8F4 BL 0x321B938
	0x03E4F8F8 MOV X1, X0
	0x03E4F8FC MOV X0, X20
	0x03E4F900 MOV X2, X31
	0x03E4F904 BL 0x32338A8
	0x03E4F908 LDR V0, [X19 + 0x150]
	0x03E4F90C ADD X0, X31, 0x18
	0x03E4F910 MOV X1, X31
	0x03E4F914 STR S0, [X31 + 0x18]
	0x03E4F918 BL 0x338FE24
	0x03E4F91C LDR X8, [X25]
	0x03E4F920 MOV X1, X0
	0x03E4F924 MOV X2, X31
	0x03E4F928 MOV X0, X8
	0x03E4F92C BL 0x321B938
	0x03E4F930 MOV X1, X0
	0x03E4F934 MOV X0, X20
	0x03E4F938 MOV X2, X31
	0x03E4F93C BL 0x32338A8
	0x03E4F940 LDR V0, [X19 + 0x154]
	0x03E4F944 ADD X0, X31, 0x18
	0x03E4F948 MOV X1, X31
	0x03E4F94C STR S0, [X31 + 0x18]
	0x03E4F950 BL 0x338FE24
	0x03E4F954 ADRP X8, 0x31C000
	0x03E4F958 LDR X8, [X8 + 0x870]
	0x03E4F95C MOV X1, X0
	0x03E4F960 MOV X2, X31
	0x03E4F964 LDR X8, [X8]
	0x03E4F968 MOV X0, X8
	0x03E4F96C BL 0x321B938
	0x03E4F970 MOV X1, X0
	0x03E4F974 MOV X0, X20
	0x03E4F978 MOV X2, X31
	0x03E4F97C BL 0x32338A8
	0x03E4F980 LDR V0, [X19 + 0x158]
	0x03E4F984 ADD X0, X31, 0x18
	0x03E4F988 MOV X1, X31
	0x03E4F98C STR S0, [X31 + 0x18]
	0x03E4F990 BL 0x338FE24
	0x03E4F994 ADRP X8, 0x31C000
	0x03E4F998 LDR X8, [X8 + 0x868]
	0x03E4F99C MOV X1, X0
	0x03E4F9A0 MOV X2, X31
	0x03E4F9A4 LDR X8, [X8]
	0x03E4F9A8 MOV X0, X8
	0x03E4F9AC BL 0x321B938
	0x03E4F9B0 MOV X1, X0
	0x03E4F9B4 MOV X0, X20
	0x03E4F9B8 MOV X2, X31
	0x03E4F9BC BL 0x32338A8
	0x03E4F9C0 LDR V0, [X19 + 0x15C]
	0x03E4F9C4 ADD X0, X31, 0x18
	0x03E4F9C8 MOV X1, X31
	0x03E4F9CC STR S0, [X31 + 0x18]
	0x03E4F9D0 BL 0x338FE24
	0x03E4F9D4 ADRP X8, 0x31C000
	0x03E4F9D8 LDR X8, [X8 + 0x850]
	0x03E4F9DC MOV X1, X0
	0x03E4F9E0 MOV X2, X31
	0x03E4F9E4 LDR X8, [X8]
	0x03E4F9E8 MOV X0, X8
	0x03E4F9EC BL 0x321B938
	0x03E4F9F0 MOV X1, X0
	0x03E4F9F4 MOV X0, X20
	0x03E4F9F8 MOV X2, X31
	0x03E4F9FC BL 0x32338A8
	0x03E4FA00 LDR V0, [X19 + 0x160]
	0x03E4FA04 ADD X0, X31, 0x78
	0x03E4FA08 MOV X1, X31
	0x03E4FA0C MOV X2, X31
	0x03E4FA10 MOV X3, X31
	0x03E4FA14 STR D0, [X31 + 0x78]
	0x03E4FA18 BL 0x25F34C4
	0x03E4FA1C ADRP X8, 0x31C000
	0x03E4FA20 LDR X8, [X8 + 0x828]
	0x03E4FA24 MOV X1, X0
	0x03E4FA28 MOV X2, X31
	0x03E4FA2C LDR X8, [X8]
	0x03E4FA30 MOV X0, X8
	0x03E4FA34 BL 0x321B938
	0x03E4FA38 MOV X1, X0
	0x03E4FA3C MOV X0, X20
	0x03E4FA40 MOV X2, X31
	0x03E4FA44 BL 0x32338A8
	0x03E4FA48 ADRP X8, 0x31C000
	0x03E4FA4C LDR X8, [X8 + 0x7E0]
	0x03E4FA50 LDR W9, [X19 + 0x168]
	0x03E4FA54 MOVN X10, 0x0
	0x03E4FA58 ADD X0, X31, 0x0
	0x03E4FA5C LDR X8, [X8]
	0x03E4FA60 MOV X1, X31
	0x03E4FA64 STR W9, [X31 + 0x10]
	0x03E4FA68 STP X8, X10, [X31]
	0x03E4FA6C BL 0x33B162C
	0x03E4FA70 ADRP X8, 0x31C000
	0x03E4FA74 LDR X8, [X8 + 0x7F8]
	0x03E4FA78 MOV X1, X0
	0x03E4FA7C MOV X2, X31
	0x03E4FA80 LDR X8, [X8]
	0x03E4FA84 MOV X0, X8
	0x03E4FA88 BL 0x321B938
	0x03E4FA8C MOV X1, X0
	0x03E4FA90 MOV X0, X20
	0x03E4FA94 MOV X2, X31
	0x03E4FA98 BL 0x32338A8
	0x03E4FA9C LDR V0, [X22 + 0x68]
	0x03E4FAA0 ADD X0, X31, 0x78
	0x03E4FAA4 MOV X1, X31
	0x03E4FAA8 MOV X2, X31
	0x03E4FAAC MOV X3, X31
	0x03E4FAB0 STR D0, [X31 + 0x78]
	0x03E4FAB4 BL 0x25F34C4
	0x03E4FAB8 ADRP X8, 0x31C000
	0x03E4FABC LDR X8, [X8 + 0x860]
	0x03E4FAC0 MOV X1, X0
	0x03E4FAC4 MOV X2, X31
	0x03E4FAC8 LDR X8, [X8]
	0x03E4FACC MOV X0, X8
	0x03E4FAD0 BL 0x321B938
	0x03E4FAD4 MOV X1, X0
	0x03E4FAD8 MOV X0, X20
	0x03E4FADC MOV X2, X31
	0x03E4FAE0 BL 0x32338A8
	0x03E4FAE4 LDR V0, [X22 + 0x70]
	0x03E4FAE8 ADD X0, X31, 0x78
	0x03E4FAEC MOV X1, X31
	0x03E4FAF0 MOV X2, X31
	0x03E4FAF4 MOV X3, X31
	0x03E4FAF8 STR D0, [X31 + 0x78]
	0x03E4FAFC BL 0x25F34C4
	0x03E4FB00 ADRP X8, 0x31C000
	0x03E4FB04 LDR X8, [X8 + 0x818]
	0x03E4FB08 MOV X1, X0
	0x03E4FB0C MOV X2, X31
	0x03E4FB10 LDR X8, [X8]
	0x03E4FB14 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 384
	002 Move [X31+288], D11
	003 Move [X31+296], D10
	004 Move [X31+304], D9
	005 Move [X31+312], D8
	006 Move [X31+320], X29
	007 Move [X31+328], X30
	008 Move [X31+336], X24
	009 Move [X31+344], X23
	010 Move [X31+352], X22
	011 Move [X31+360], X21
	012 Move [X31+368], X20
	013 Move [X31+376], X19
	014 Move X22, 0x59A000
	015 Move W8, [X22+2131]
	016 Move X19, X2
	017 Move X21, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x309000
	024 Move X0, [X0+1096]
	025 Call 0x1C17CF4
	026 Move X0, 0x2CC000
	027 Move X0, [X0+3576]
	028 Call 0x1C17CF4
	029 Move X0, 0x2FB000
	030 Move X0, [X0+856]
	031 Call 0x1C17CF4
	032 Move X0, 0x2A5000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x2CD000
	036 Move X0, [X0+2392]
	037 Call 0x1C17CF4
	038 Move X0, 0x2CD000
	039 Move X0, [X0+2352]
	040 Call 0x1C17CF4
	041 Move X0, 0x2CD000
	042 Move X0, [X0+2200]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X22+2131], W8
	046 Move [X31+128], X31
	047 Move [X31+136], X31
	048 Move X8, [X20+40]
	049 Compare X8, 0
	050 JumpIfEqual {327}
	051 Move W23, [X8+472]
	052 Move X0, X21
	053 Move X1, X31
	054 Call MultipleDisplayUtilities.GetRelativeMousePositionForRaycast, X0
	055 Move W8, 0x7F800000
	056 Move V8, V0
	057 Move S0, W8
	058 NotImplemented "Instruction FCVTZS not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move W8, 0x80000000
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Compare X21, 0
	064 JumpIfEqual {341}
	065 Move V10, [X21+268]
	066 Move V11, [X21+272]
	067 Move X0, X31
	068 Move V9, V1
	069 Call Screen.get_height
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W22, W0
	072 Move X24, 0x309000
	073 Move X24, [X24+1096]
	074 Move X0, [X24]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X24]
	080 Move X8, [X0+184]
	081 Move X8, [X8]
	082 Compare X8, 0
	083 JumpIfEqual {341}
	084 Move W9, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W9, [X0+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {95}
	089 Call 0x1C17DFC
	090 Move X8, [X24]
	091 Move X8, [X8+184]
	092 Move X8, [X8]
	093 Compare X8, 0
	094 JumpIfEqual {341}
	095 Move W9, [X8+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X8, X8, X23
	098 Move X0, [X8+32]
	099 Compare X0, 0
	100 JumpIfEqual {341}
	101 Move X1, X31
	102 Call Display.get_systemHeight, X0
	103 Move W22, W0
	104 Move X23, 0x2CD000
	105 Move X23, [X23+2352]
	106 Move X0, [X23]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X24, 0x59A000
	112 Move W8, [X24+1102]
	113 Compare W8, 0
	114 JumpIfNotEqual {120}
	115 Move X0, 0x2CD000
	116 Move X0, [X0+2352]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X24+1102], W8
	120 Move X0, [X23]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X23]
	126 Move X8, [X0+184]
	127 Move X8, [X8+56]
	128 Compare X8, 0
	129 JumpIfEqual {137}
	130 Move X9, 0x2CC000
	131 Move X9, [X9+3576]
	132 Move X10, [X8]
	133 Move X9, [X9]
	134 Move W12, [X10+304]
	135 Move W11, [X9+304]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X23, X31
	138 Move X10, [X10+200]
	139 Add X10, X10, X11
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSEL not yet implemented."
	143 Move X24, 0x2A5000
	144 Move X24, [X24+1432]
	145 Move X0, [X24]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X23
	151 Move X1, X31
	152 Move X2, X31
	153 Call Object.op_Equality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {327}
	158 Compare X23, 0
	159 JumpIfEqual {341}
	160 Move X0, [X24]
	161 Move X24, [X23+40]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X24
	167 Move X1, X31
	168 Move X2, X31
	169 Call Object.op_Equality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {327}
	174 Move X0, [X23+40]
	175 Compare X0, 0
	176 JumpIfEqual {341}
	177 Move X8, [X0]
	178 Move X1, X21
	179 Move X9, [X8+728]
	180 Move X2, [X8+736]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, [X20+40]
	183 Move W23, W0
	184 Move W1, W23
	185 Move X2, X31
	186 Move X0, X8
	187 Call PointerCaptureHelper.GetCapturingElement, X0, X1
	188 Move X21, X0
	189 Compare X0, 0
	190 JumpIfEqual {202}
	191 Move X8, 0x2CD000
	192 Move X8, [X8+2200]
	193 Move X9, [X21]
	194 Move X8, [X8]
	195 Move W11, [X9+304]
	196 Move W10, [X8+304]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X9, [X9+200]
	199 Add X9, X9, X10
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X8, 0x2CD000
	203 Move X8, [X8+2392]
	204 Move X0, [X8]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move W0, W23
	210 Move X1, X31
	211 Call PointerDeviceState.GetPlayerPanelWithSoftPointerCapture, X0
	212 Compare X0, 0
	213 JumpIfEqual {216}
	214 Move X8, [X20+40]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Compare X21, 0
	217 JumpIfEqual {294}
	218 Move X0, [X20+40]
	219 NotImplemented "Instruction MOVI not yet implemented."
	220 Move [X31+112], W31
	221 Move [X31+80], V0
	222 Move [X31+88], V0
	223 Move [X31+4], V0
	224 Compare X0, 0
	225 JumpIfEqual {341}
	226 Move X9, [X0+352]
	227 Move W8, [X0+472]
	228 Move V0, [X31+64]
	229 Move V1, [X31+80]
	230 Move V2, [X31+6]
	231 Move W10, [X31+112]
	232 Move [X31], V0
	233 Move [X31+8], V1
	234 Move [X31+2], V2
	235 Move [X31+48], W10
	236 Compare X19, 0
	237 JumpIfEqual {341}
	238 Move X11, 0x2FB000
	239 Move X11, [X11+856]
	240 Move V0, [X31]
	241 Move V1, [X31+16]
	242 Move V2, [X31+2]
	243 Move W10, [X31+48]
	244 Move X11, [X11]
	245 Move [X31+144], V0
	246 Move [X31+152], V1
	247 Move [X31+11], V2
	248 Move [X31+192], W10
	249 Move W12, [X19+28]
	250 Move X10, [X19+16]
	251 Add W12, W12, 1
	252 Move [X19+28], W12
	253 Compare X10, 0
	254 JumpIfEqual {341}
	255 NotImplemented "Instruction LDRSW not yet implemented."
	256 Move W13, [X10+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Add W11, W12, 1
	259 Move [X19+24], W11
	260 Move W11, 80
	261 NotImplemented "Instruction MADD not yet implemented."
	262 Move [X10+32], X9
	263 Move [X10+40], X20
	264 Move V0, [X31+144]
	265 Move V1, [X31+160]
	266 Move W9, [X31+192]
	267 Move V2, [X31+11]
	268 Move [X10+100], S8
	269 Move [X10+108], S9
	270 Move [X10+3], V0
	271 Move [X10+96], W9
	272 Move [X10+64], V1
	273 Move [X10+72], V2
	274 Move [X10+108], W8
	275 Move X10, [X11+32]
	276 Move V0, [X31+144]
	277 Move V1, [X31+160]
	278 Add X1, X31, 208
	279 Move X0, X19
	280 Move X10, [X10+192]
	281 Move X2, [X10+112]
	282 Move [X31+224], V0
	283 Move [X31+232], V1
	284 Move V0, [X31+11]
	285 Move W10, [X31+192]
	286 Move [X31+208], X9
	287 Move [X31+216], X20
	288 Move [X31+276], S8
	289 Move [X31+16], V0
	290 Move [X31+272], W10
	291 Move [X31+280], S9
	292 Move [X31+284], W8
	293 Call List`1<RaycastResult>.AddWithResize, X0, X1
	294 Move X0, [X20+40]
	295 Compare X0, 0
	296 JumpIfEqual {341}
	297 NotImplemented "Instruction SCVTF not yet implemented."
	298 Subtract S1, S0, S9
	299 NotImplemented "Instruction FNEG not yet implemented."
	300 Add X1, X31, 136
	301 Add X2, X31, 128
	302 Move V0, V8
	303 Move V2, V10
	304 Move W3, W31
	305 Move X4, X31
	306 Call BaseRuntimePanel.ScreenToPanel, X0, X1, X2, X3, X4, X5
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {327}
	311 Move X0, [X20+40]
	312 Compare X0, 0
	313 JumpIfEqual {341}
	314 Move X8, [X0]
	315 Move S0, [X31+136]
	316 Move S1, [X31+140]
	317 Move X9, [X8+1048]
	318 Move X1, [X8+1056]
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Compare X0, 0
	321 JumpIfNotEqual {218}
	322 Move X0, X21
	323 Move X1, X31
	324 Call VisualElement.get_panel, X0
	325 Move X8, [X20+40]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X20, [X31+368]
	328 Move X19, [X31+376]
	329 Move X22, [X31+352]
	330 Move X21, [X31+360]
	331 Move X24, [X31+336]
	332 Move X23, [X31+344]
	333 Move X29, [X31+320]
	334 Move X30, [X31+328]
	335 Move D9, [X31+304]
	336 Move D8, [X31+312]
	337 Move D11, [X31+288]
	338 Move D10, [X31+296]
	339 Add X31, X31, 384
	340 Return 
	341 Call 0x1C17F20
	342 Call 0x1C17F28

Method: UnityEngine.Camera get_eventCamera()

Disassembly:
	0x03E4FB18 BL 0x321B938
	0x03E4FB1C MOV X1, X0

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03E4FB20 MOV X0, X20
	0x03E4FB24 MOV X2, X31

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

