Type: UnityEngine.UIElements.PanelEventHandler/PointerEvent

Method: System.Int32 get_pointerId()

Disassembly:
	0x03E4F168 LDR X0, [X22]
	0x03E4F16C ADD X22, X19, 0x104

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_pointerId(System.Int32 value)

Disassembly:
	0x03E4F170 BL 0x1C16F10
	0x03E4F174 LDR X1, [X21]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.String get_pointerType()

Disassembly:
	0x03E4F178 MOV X21, X0
	0x03E4F17C BL 0x301B7C4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_pointerType(System.String value)

Disassembly:
	0x03E4F180 MOV X0, X19
	0x03E4F184 MOV X1, X31

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Boolean get_isPrimary()

Disassembly:
	0x03E4F188 STR X21, [X19 + 0xF0]
	0x03E4F18C BL 0x33BDD8C

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_isPrimary(System.Boolean value)

Disassembly:
	0x03E4F190 MOVI D0, 0xFFFFFFFF00000000
	0x03E4F194 STR X20, [X19 + 0x18]
	0x03E4F198 STRB W31, [X19 + 0xF8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Int32 get_button()

Disassembly:
	0x03E4F19C STUR D0, [X19 + 0xFC]
	0x03E4F1A0 ADRP X20, 0x58A000

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_button(System.Int32 value)

Disassembly:
	0x03E4F1A4 LDRB W8, [X20 + 0x78F]
	0x03E4F1A8 CBNZ W8, 0x3E4F1C0

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Int32 get_pressedButtons()

Disassembly:
	0x03E4F1AC ADRP X0, 0x2AC000
	0x03E4F1B0 LDR X0, [X0 + 0xF08]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_pressedButtons(System.Int32 value)

Disassembly:
	0x03E4F1B4 BL 0x1C16CF4
	0x03E4F1B8 MOVZ W8, 0x1

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: UnityEngine.Vector3 get_position()

Disassembly:
	0x03E4F1BC STRB W8, [X20 + 0x78F]
	0x03E4F1C0 ADRP X8, 0x2AC000
	0x03E4F1C4 LDR X8, [X8 + 0xF08]

ISIL:
	001 Move S0, [X0+44]
	002 Move S1, [X0+48]
	003 Move V2, [X0+52]
	004 Return X0

Method: System.Void set_position(UnityEngine.Vector3 value)

Disassembly:
	0x03E4F1C8 LDR X8, [X8]
	0x03E4F1CC LDR X9, [X8 + 0xB8]
	0x03E4F1D0 LDR V0, [X9]

ISIL:
	001 Move [X0+44], S0
	002 Move [X0+52], S1
	003 Move [X0+52], S2
	004 Return 

Method: UnityEngine.Vector3 get_localPosition()

Disassembly:
	0x03E4F1D4 STR D0, [X22]
	0x03E4F1D8 LDR X9, [X8 + 0xB8]
	0x03E4F1DC LDR V0, [X9]

ISIL:
	001 Move S0, [X0+56]
	002 Move S1, [X0+60]
	003 Move V2, [X0+64]
	004 Return X0

Method: System.Void set_localPosition(UnityEngine.Vector3 value)

Disassembly:
	0x03E4F1E0 STR D0, [X22 + 0x8]
	0x03E4F1E4 LDR X9, [X8 + 0xB8]
	0x03E4F1E8 LDR V0, [X9]

ISIL:
	001 Move [X0+56], S0
	002 Move [X0+64], S1
	003 Move [X0+64], S2
	004 Return 

Method: UnityEngine.Vector3 get_deltaPosition()

Disassembly:
	0x03E4F1EC ADD X9, X19, 0x134
	0x03E4F1F0 STR D0, [X22 + 0x10]
	0x03E4F1F4 STR X31, [X9]

ISIL:
	001 Move S0, [X0+68]
	002 Move S1, [X0+72]
	003 Move V2, [X0+76]
	004 Return X0

Method: System.Void set_deltaPosition(UnityEngine.Vector3 value)

Disassembly:
	0x03E4F1F8 LDR X9, [X8 + 0xB8]
	0x03E4F1FC LDR V0, [X9]
	0x03E4F200 MOVZ W9, 0x1

ISIL:
	001 Move [X0+68], S0
	002 Move [X0+76], S1
	003 Move [X0+76], S2
	004 Return 

Method: System.Single get_deltaTime()

Disassembly:
	0x03E4F204 STR D0, [X22 + 0x38]
	0x03E4F208 STRH W9, [X19 + 0x144]

ISIL:
	001 Move V0, [X0+80]
	002 Return V0

Method: System.Void set_deltaTime(System.Single value)

Disassembly:
	0x03E4F20C ADD X9, X19, 0x148
	0x03E4F210 MOVI V0.2D, 0x0

ISIL:
	001 Move [X0+80], S0
	002 Return 

Method: System.Int32 get_clickCount()

Disassembly:
	0x03E4F214 STP V0, V0, [X9]
	0x03E4F218 STR W31, [X9 + 0x20]

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_clickCount(System.Int32 value)

Disassembly:
	0x03E4F21C LDR X9, [X8 + 0xB8]
	0x03E4F220 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+84], W1
	002 Return 

Method: System.Single get_pressure()

Disassembly:
	0x03E4F224 LDR V0, [X9]
	0x03E4F228 STR D0, [X22 + 0x68]

ISIL:
	001 Move V0, [X0+88]
	002 Return V0

Method: System.Void set_pressure(System.Single value)

Disassembly:
	0x03E4F22C LDR X8, [X8 + 0xB8]
	0x03E4F230 LDR V0, [X8]

ISIL:
	001 Move [X0+88], S0
	002 Return 

Method: System.Single get_tangentialPressure()

Disassembly:
	0x03E4F234 STR D0, [X22 + 0x70]
	0x03E4F238 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move V0, [X0+92]
	002 Return V0

Method: System.Void set_tangentialPressure(System.Single value)

Disassembly:
	0x03E4F23C LDP X30, X23, [X31], #0x30
	0x03E4F240 RET

ISIL:
	001 Move [X0+92], S0
	002 Return 

Method: System.Single get_altitudeAngle()

Disassembly:
	0x03E4F244 LDR V0, [X0 + 0x10C]
	0x03E4F248 LDR V1, [X0 + 0x110]

ISIL:
	001 Move V0, [X0+96]
	002 Return V0

Method: System.Void set_altitudeAngle(System.Single value)

Disassembly:
	0x03E4F24C FMUL S0, S0, S0
	0x03E4F250 FMUL S1, S1, S1

ISIL:
	001 Move [X0+96], S0
	002 Return 

Method: System.Single get_azimuthAngle()

Disassembly:
	0x03E4F254 FADD S0, S0, S1
	0x03E4F258 FCMP S0, 0x0

ISIL:
	001 Move V0, [X0+100]
	002 Return V0

Method: System.Void set_azimuthAngle(System.Single value)

Disassembly:
	0x03E4F25C CSET W0, GT
	0x03E4F260 RET

ISIL:
	001 Move [X0+100], S0
	002 Return 

Method: System.Single get_twist()

Disassembly:
	0x03E4F264 LDR V0, [X0 + 0x13C]
	0x03E4F268 LDR V1, [X0 + 0x140]

ISIL:
	001 Move V0, [X0+104]
	002 Return V0

Method: System.Void set_twist(System.Single value)

Disassembly:
	0x03E4F26C FMUL S0, S0, S0
	0x03E4F270 FMUL S1, S1, S1

ISIL:
	001 Move [X0+104], S0
	002 Return 

Method: UnityEngine.Vector2 get_tilt()

Disassembly:
	0x03E4F274 FADD S0, S0, S1
	0x03E4F278 FCMP S0, 0x0

ISIL:
	001 Move S0, [X0+108]
	002 Move S1, [X0+112]
	003 Return X0

Method: System.Void set_tilt(UnityEngine.Vector2 value)

Disassembly:
	0x03E4F27C CSET W0, GT
	0x03E4F280 RET

ISIL:
	001 Move [X0+108], S0
	002 Move [X0+116], S1
	003 Return 

Method: UnityEngine.PenStatus get_penStatus()

Disassembly:
	0x03E4F284 STP X30, X21, [X31 - 0x20]!
	0x03E4F288 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+116]
	002 Return X0

Method: System.Void set_penStatus(UnityEngine.PenStatus value)

Disassembly:
	0x03E4F28C ADRP X21, 0x599000
	0x03E4F290 ADRP X20, 0x2A4000

ISIL:
	001 Move [X0+116], W1
	002 Return 

Method: UnityEngine.Vector2 get_radius()

Disassembly:
	0x03E4F294 LDRB W8, [X21 + 0x855]
	0x03E4F298 LDR X20, [X20 + 0x598]

ISIL:
	001 Move S0, [X0+120]
	002 Move S1, [X0+124]
	003 Return X0

Method: System.Void set_radius(UnityEngine.Vector2 value)

Disassembly:
	0x03E4F29C MOV X19, X0
	0x03E4F2A0 TBNZ X8, 0x0, 0x3E4F2B8

ISIL:
	001 Move [X0+120], S0
	002 Move [X0+128], S1
	003 Return 

Method: UnityEngine.Vector2 get_radiusVariance()

Disassembly:
	0x03E4F2A4 ADRP X0, 0x2A4000
	0x03E4F2A8 LDR X0, [X0 + 0x598]

ISIL:
	001 Move S0, [X0+128]
	002 Move S1, [X0+132]
	003 Return X0

Method: System.Void set_radiusVariance(UnityEngine.Vector2 value)

Disassembly:
	0x03E4F2AC BL 0x1C16CF4
	0x03E4F2B0 MOVZ W8, 0x1

ISIL:
	001 Move [X0+128], S0
	002 Move [X0+136], S1
	003 Return 

Method: UnityEngine.EventModifiers get_modifiers()

Disassembly:
	0x03E4F2B4 STRB W8, [X21 + 0x855]
	0x03E4F2B8 LDR X0, [X20]

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Void set_modifiers(UnityEngine.EventModifiers value)

Disassembly:
	0x03E4F2BC LDR X20, [X19 + 0x58]
	0x03E4F2C0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X0+136], W1
	002 Return 

Method: System.Boolean get_shiftKey()

Disassembly:
	0x03E4F2C4 CBNZ W8, 0x3E4F2CC
	0x03E4F2C8 BL 0x1C16DFC
	0x03E4F2CC MOV X0, X20

ISIL:
	001 Move W8, [X0+136]
	002 And W0, W8, 1
	003 Return X0

Method: System.Boolean get_ctrlKey()

Disassembly:
	0x03E4F2D0 MOV X1, X31
	0x03E4F2D4 MOV X2, X31
	0x03E4F2D8 BL 0x3C3883C

ISIL:
	001 Move W8, [X0+136]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Boolean get_commandKey()

Disassembly:
	0x03E4F2DC TBZ X0, 0x0, 0x3E4F2F0
	0x03E4F2E0 LDP X20, X19, [X31 + 0x10]
	0x03E4F2E4 MOV X0, X31

ISIL:
	001 Move W8, [X0+136]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.Boolean get_altKey()

Disassembly:
	0x03E4F2E8 LDP X30, X21, [X31], #0x20
	0x03E4F2EC RET
	0x03E4F2F0 LDR X0, [X19 + 0x58]

ISIL:
	001 Move W8, [X0+136]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Boolean get_actionKey()

Disassembly:
	0x03E4F2F4 CBZ X0, 0x3E4F310
	0x03E4F2F8 LDR X8, [X0]
	0x03E4F2FC LDP X20, X19, [X31 + 0x10]
	0x03E4F300 LDR X2, [X8 + 0x258]
	0x03E4F304 LDR X1, [X8 + 0x260]
	0x03E4F308 LDP X30, X21, [X31], #0x20
	0x03E4F30C BR X2
	0x03E4F310 BL 0x1C16F20
	0x03E4F314 STP X30, X21, [X31 - 0x20]!
	0x03E4F318 STP X20, X19, [X31 + 0x10]
	0x03E4F31C ADRP X21, 0x599000
	0x03E4F320 ADRP X20, 0x2A4000
	0x03E4F324 LDRB W8, [X21 + 0x856]
	0x03E4F328 LDR X20, [X20 + 0x598]
	0x03E4F32C MOV X19, X0
	0x03E4F330 TBNZ X8, 0x0, 0x3E4F348
	0x03E4F334 ADRP X0, 0x2A4000
	0x03E4F338 LDR X0, [X0 + 0x598]
	0x03E4F33C BL 0x1C16CF4
	0x03E4F340 MOVZ W8, 0x1
	0x03E4F344 STRB W8, [X21 + 0x856]
	0x03E4F348 LDR X0, [X20]
	0x03E4F34C LDR X20, [X19 + 0xA8]
	0x03E4F350 LDR W8, [X0 + 0xE0]
	0x03E4F354 CBNZ W8, 0x3E4F35C
	0x03E4F358 BL 0x1C16DFC
	0x03E4F35C MOV X0, X20
	0x03E4F360 MOV X1, X31
	0x03E4F364 MOV X2, X31
	0x03E4F368 BL 0x3C3883C
	0x03E4F36C TBZ X0, 0x0, 0x3E4F380
	0x03E4F370 LDP X20, X19, [X31 + 0x10]
	0x03E4F374 MOV X0, X31
	0x03E4F378 LDP X30, X21, [X31], #0x20
	0x03E4F37C RET
	0x03E4F380 LDR X0, [X19 + 0xA8]
	0x03E4F384 CBZ X0, 0x3E4F3A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x59A000
	006 Move X20, 0x2A5000
	007 Move W8, [X21+2125]
	008 Move X20, [X20+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2A5000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2125], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call Application.get_platform
	026 Compare W0, 0
	027 JumpIfEqual {36}
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call Application.get_platform
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 8
	037 Move W8, 2
	038 Move W9, [X19+136]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 And W31, W9, W8
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0

Method: System.Void Read(UnityEngine.UIElements.PanelEventHandler self, UnityEngine.EventSystems.PointerEventData eventData, UnityEngine.UIElements.PanelEventHandler/PointerEventType eventType)

Disassembly:
	0x03E4EBE8 MOVZ W8, 0x1
	0x03E4EBEC STRB W8, [X0 + 0x10]
	0x03E4EBF0 RET
	0x03E4EBF4 LDRB W0, [X0 + 0x10]
	0x03E4EBF8 RET
	0x03E4EBFC MOV X1, X31
	0x03E4EC00 B 0x33BDD8C
	0x03E4EC04 STR X30, [X31 - 0x10]!
	0x03E4EC08 LDR X8, [X0 + 0x18]
	0x03E4EC0C CBZ X8, 0x3E4EC1C
	0x03E4EC10 LDR X0, [X8 + 0x28]
	0x03E4EC14 LDR X30, [X31], #0x10
	0x03E4EC18 RET
	0x03E4EC1C BL 0x1C16F20
	0x03E4EC20 STR X30, [X31 - 0x10]!
	0x03E4EC24 LDR X8, [X0 + 0x18]
	0x03E4EC28 CBZ X8, 0x3E4EC38
	0x03E4EC2C LDR X0, [X8 + 0x40]
	0x03E4EC30 LDR X30, [X31], #0x10
	0x03E4EC34 RET
	0x03E4EC38 BL 0x1C16F20
	0x03E4EC3C STR X30, [X31 - 0x10]!
	0x03E4EC40 MOV X2, X0
	0x03E4EC44 LDR X0, [X0 + 0x18]
	0x03E4EC48 CBZ X0, 0x3E4EC54
	0x03E4EC4C LDR X30, [X31], #0x10
	0x03E4EC50 B 0x3E4EC58
	0x03E4EC54 BL 0x1C16F20
	0x03E4EC58 STR X30, [X31 - 0x40]!
	0x03E4EC5C STP X24, X23, [X31 + 0x10]
	0x03E4EC60 STP X22, X21, [X31 + 0x20]
	0x03E4EC64 STP X20, X19, [X31 + 0x30]
	0x03E4EC68 ADRP X22, 0x59A000
	0x03E4EC6C LDRB W8, [X22 + 0x85D]
	0x03E4EC70 MOV X21, X2
	0x03E4EC74 MOV X19, X1
	0x03E4EC78 MOV X20, X0
	0x03E4EC7C TBNZ X8, 0x0, 0x3E4ECDC
	0x03E4EC80 ADRP X0, 0x2A5000
	0x03E4EC84 LDR X0, [X0 + 0xA28]
	0x03E4EC88 BL 0x1C16CF4
	0x03E4EC8C ADRP X0, 0x31D000
	0x03E4EC90 LDR X0, [X0 + 0x7B8]
	0x03E4EC94 BL 0x1C16CF4
	0x03E4EC98 ADRP X0, 0x31D000
	0x03E4EC9C LDR X0, [X0 + 0x7C0]
	0x03E4ECA0 BL 0x1C16CF4
	0x03E4ECA4 ADRP X0, 0x2CD000
	0x03E4ECA8 LDR X0, [X0 + 0x9F8]
	0x03E4ECAC BL 0x1C16CF4
	0x03E4ECB0 ADRP X0, 0x2A5000
	0x03E4ECB4 LDR X0, [X0 + 0x598]
	0x03E4ECB8 BL 0x1C16CF4
	0x03E4ECBC ADRP X0, 0x31D000
	0x03E4ECC0 LDR X0, [X0 + 0x7C8]
	0x03E4ECC4 BL 0x1C16CF4
	0x03E4ECC8 ADRP X0, 0x31D000
	0x03E4ECCC LDR X0, [X0 + 0x7D0]
	0x03E4ECD0 BL 0x1C16CF4
	0x03E4ECD4 MOVZ W8, 0x1
	0x03E4ECD8 STRB W8, [X22 + 0x85D]
	0x03E4ECDC LDRB W8, [X20 + 0x49]
	0x03E4ECE0 CBZ W8, 0x3E4ED1C
	0x03E4ECE4 ADRP X8, 0x31D000
	0x03E4ECE8 LDR X8, [X8 + 0x7C8]
	0x03E4ECEC ADRP X22, 0x31D000
	0x03E4ECF0 ADRP X21, 0x2A5000
	0x03E4ECF4 LDR X20, [X8]
	0x03E4ECF8 LDR X22, [X22 + 0x7D0]
	0x03E4ECFC LDR X21, [X21 + 0xA28]
	0x03E4ED00 CBZ X19, 0x3E4EE34
	0x03E4ED04 LDR X8, [X19]
	0x03E4ED08 MOV X0, X19
	0x03E4ED0C LDP X9, X1, [X8 + 0x168]
	0x03E4ED10 BLR X9
	0x03E4ED14 MOV X1, X0
	0x03E4ED18 B 0x3E4EE38
	0x03E4ED1C MOVZ W8, 0x1
	0x03E4ED20 STRB W8, [X20 + 0x49]
	0x03E4ED24 ADRP X8, 0x2A5000
	0x03E4ED28 LDR X8, [X8 + 0x598]
	0x03E4ED2C LDR X22, [X20 + 0x40]
	0x03E4ED30 LDR X0, [X8]
	0x03E4ED34 LDR W8, [X0 + 0xE0]
	0x03E4ED38 CBNZ W8, 0x3E4ED40
	0x03E4ED3C BL 0x1C16DFC
	0x03E4ED40 MOV X0, X19
	0x03E4ED44 MOV X1, X22
	0x03E4ED48 MOV X2, X31
	0x03E4ED4C BL 0x3C3883C
	0x03E4ED50 TBNZ X0, 0x0, 0x3E4EE1C
	0x03E4ED54 ADRP X23, 0x2CD000
	0x03E4ED58 LDR X23, [X23 + 0x9F8]
	0x03E4ED5C LDR X22, [X20 + 0x40]
	0x03E4ED60 LDR X0, [X23]
	0x03E4ED64 LDR W8, [X0 + 0xE0]
	0x03E4ED68 CBNZ W8, 0x3E4ED70
	0x03E4ED6C BL 0x1C16DFC
	0x03E4ED70 ADRP X24, 0x59A000
	0x03E4ED74 LDRB W8, [X24 + 0x8D1]
	0x03E4ED78 CBNZ W8, 0x3E4ED90
	0x03E4ED7C ADRP X0, 0x2CD000
	0x03E4ED80 LDR X0, [X0 + 0x9F8]
	0x03E4ED84 BL 0x1C16CF4
	0x03E4ED88 MOVZ W8, 0x1
	0x03E4ED8C STRB W8, [X24 + 0x8D1]
	0x03E4ED90 LDR X0, [X23]
	0x03E4ED94 LDR W8, [X0 + 0xE0]
	0x03E4ED98 CBNZ W8, 0x3E4EDA4
	0x03E4ED9C BL 0x1C16DFC
	0x03E4EDA0 LDR X0, [X23]
	0x03E4EDA4 ADRP X9, 0x31D000
	0x03E4EDA8 LDR X8, [X0 + 0xB8]
	0x03E4EDAC LDR X9, [X9 + 0x7B8]
	0x03E4EDB0 MOV X0, X22
	0x03E4EDB4 MOV X1, X21
	0x03E4EDB8 LDR X2, [X8 + 0x70]
	0x03E4EDBC LDR X3, [X9]
	0x03E4EDC0 BL 0x21DD088
	0x03E4EDC4 STR X19, [X20 + 0x40]
	0x03E4EDC8 ADRP X22, 0x59A000
	0x03E4EDCC LDRB W8, [X22 + 0x8D2]
	0x03E4EDD0 CBNZ W8, 0x3E4EDE8
	0x03E4EDD4 ADRP X0, 0x2CD000
	0x03E4EDD8 LDR X0, [X0 + 0x9F8]
	0x03E4EDDC BL 0x1C16CF4
	0x03E4EDE0 MOVZ W8, 0x1
	0x03E4EDE4 STRB W8, [X22 + 0x8D2]
	0x03E4EDE8 LDR X0, [X23]
	0x03E4EDEC LDR W8, [X0 + 0xE0]
	0x03E4EDF0 CBNZ W8, 0x3E4EDFC
	0x03E4EDF4 BL 0x1C16DFC
	0x03E4EDF8 LDR X0, [X23]
	0x03E4EDFC ADRP X9, 0x31D000
	0x03E4EE00 LDR X8, [X0 + 0xB8]
	0x03E4EE04 LDR X9, [X9 + 0x7C0]
	0x03E4EE08 MOV X0, X19
	0x03E4EE0C MOV X1, X21
	0x03E4EE10 LDR X2, [X8 + 0x68]
	0x03E4EE14 LDR X3, [X9]
	0x03E4EE18 BL 0x21DD088
	0x03E4EE1C STRB W31, [X20 + 0x49]
	0x03E4EE20 LDP X20, X19, [X31 + 0x30]
	0x03E4EE24 LDP X22, X21, [X31 + 0x20]
	0x03E4EE28 LDP X24, X23, [X31 + 0x10]
	0x03E4EE2C LDR X30, [X31], #0x40
	0x03E4EE30 RET
	0x03E4EE34 MOV X1, X31
	0x03E4EE38 LDR X2, [X22]
	0x03E4EE3C MOV X0, X20
	0x03E4EE40 MOV X3, X31
	0x03E4EE44 BL 0x32274B8
	0x03E4EE48 LDR X8, [X21]
	0x03E4EE4C MOV X19, X0
	0x03E4EE50 LDR W9, [X8 + 0xE0]
	0x03E4EE54 CBNZ W9, 0x3E4EE60
	0x03E4EE58 MOV X0, X8
	0x03E4EE5C BL 0x1C16DFC
	0x03E4EE60 MOV X0, X19
	0x03E4EE64 LDP X20, X19, [X31 + 0x30]
	0x03E4EE68 LDP X22, X21, [X31 + 0x20]
	0x03E4EE6C LDP X24, X23, [X31 + 0x10]
	0x03E4EE70 MOV X1, X31
	0x03E4EE74 LDR X30, [X31], #0x40
	0x03E4EE78 B 0x3C0649C
	0x03E4EE7C LDR X0, [X0 + 0x20]
	0x03E4EE80 RET
	0x03E4EE84 STR X1, [X0 + 0x20]
	0x03E4EE88 RET
	0x03E4EE8C LDR X0, [X0 + 0x30]
	0x03E4EE90 RET
	0x03E4EE94 STR X1, [X0 + 0x30]
	0x03E4EE98 RET
	0x03E4EE9C LDR X0, [X0 + 0x38]
	0x03E4EEA0 RET
	0x03E4EEA4 STR X1, [X0 + 0x38]
	0x03E4EEA8 RET
	0x03E4EEAC LDR X0, [X0 + 0x40]
	0x03E4EEB0 RET
	0x03E4EEB4 STR X1, [X0 + 0x40]
	0x03E4EEB8 RET
	0x03E4EEBC LDR X0, [X0 + 0x48]
	0x03E4EEC0 RET
	0x03E4EEC4 STR X1, [X0 + 0x48]
	0x03E4EEC8 RET
	0x03E4EECC ADD X1, X0, 0x50
	0x03E4EED0 MOVZ W2, 0x50
	0x03E4EED4 MOV X0, X8
	0x03E4EED8 B 0x3EB1AC0
	0x03E4EEDC STR X30, [X31 - 0x10]!
	0x03E4EEE0 ADD X0, X0, 0x50
	0x03E4EEE4 MOVZ W2, 0x50
	0x03E4EEE8 BL 0x3EB1B30
	0x03E4EEEC LDR X30, [X31], #0x10
	0x03E4EEF0 RET
	0x03E4EEF4 ADD X1, X0, 0xA0
	0x03E4EEF8 MOVZ W2, 0x50
	0x03E4EEFC MOV X0, X8
	0x03E4EF00 B 0x3EB1AC0
	0x03E4EF04 STR X30, [X31 - 0x10]!
	0x03E4EF08 ADD X0, X0, 0xA0
	0x03E4EF0C MOVZ W2, 0x50
	0x03E4EF10 BL 0x3EB1B30
	0x03E4EF14 LDR X30, [X31], #0x10
	0x03E4EF18 RET
	0x03E4EF1C LDRB W0, [X0 + 0xF8]
	0x03E4EF20 RET
	0x03E4EF24 AND W8, W1, 0x1
	0x03E4EF28 STRB W8, [X0 + 0xF8]
	0x03E4EF2C RET
	0x03E4EF30 LDR W0, [X0 + 0xFC]
	0x03E4EF34 RET
	0x03E4EF38 STR W1, [X0 + 0xFC]
	0x03E4EF3C RET
	0x03E4EF40 LDR W0, [X0 + 0x100]
	0x03E4EF44 RET
	0x03E4EF48 STR W1, [X0 + 0x100]
	0x03E4EF4C RET
	0x03E4EF50 LDR V0, [X0 + 0x104]
	0x03E4EF54 LDR V1, [X0 + 0x108]
	0x03E4EF58 RET
	0x03E4EF5C STR S0, [X0 + 0x104]
	0x03E4EF60 STR S1, [X0 + 0x108]
	0x03E4EF64 RET
	0x03E4EF68 LDR V0, [X0 + 0x10C]
	0x03E4EF6C LDR V1, [X0 + 0x110]
	0x03E4EF70 RET
	0x03E4EF74 STR S0, [X0 + 0x10C]
	0x03E4EF78 STR S1, [X0 + 0x110]
	0x03E4EF7C RET
	0x03E4EF80 LDR V0, [X0 + 0x114]
	0x03E4EF84 LDR V1, [X0 + 0x118]
	0x03E4EF88 RET
	0x03E4EF8C STR S0, [X0 + 0x114]
	0x03E4EF90 STR S1, [X0 + 0x118]
	0x03E4EF94 RET
	0x03E4EF98 LDR V0, [X0 + 0x11C]
	0x03E4EF9C LDR V1, [X0 + 0x120]
	0x03E4EFA0 LDR V2, [X0 + 0x124]
	0x03E4EFA4 RET
	0x03E4EFA8 STR S0, [X0 + 0x11C]
	0x03E4EFAC STR S1, [X0 + 0x120]
	0x03E4EFB0 STR S2, [X0 + 0x124]
	0x03E4EFB4 RET
	0x03E4EFB8 LDR V0, [X0 + 0x128]
	0x03E4EFBC LDR V1, [X0 + 0x12C]
	0x03E4EFC0 LDR V2, [X0 + 0x130]
	0x03E4EFC4 RET
	0x03E4EFC8 STR S0, [X0 + 0x128]
	0x03E4EFCC STR S1, [X0 + 0x12C]
	0x03E4EFD0 STR S2, [X0 + 0x130]
	0x03E4EFD4 RET
	0x03E4EFD8 LDR V0, [X0 + 0x134]
	0x03E4EFDC RET
	0x03E4EFE0 STR S0, [X0 + 0x134]
	0x03E4EFE4 RET
	0x03E4EFE8 LDR W0, [X0 + 0x138]
	0x03E4EFEC RET
	0x03E4EFF0 STR W1, [X0 + 0x138]
	0x03E4EFF4 RET
	0x03E4EFF8 LDR V0, [X0 + 0x13C]
	0x03E4EFFC LDR V1, [X0 + 0x140]
	0x03E4F000 RET
	0x03E4F004 STR S0, [X0 + 0x13C]
	0x03E4F008 STR S1, [X0 + 0x140]
	0x03E4F00C RET
	0x03E4F010 LDRB W0, [X0 + 0x144]
	0x03E4F014 RET
	0x03E4F018 AND W8, W1, 0x1
	0x03E4F01C STRB W8, [X0 + 0x144]
	0x03E4F020 RET
	0x03E4F024 LDRB W0, [X0 + 0x145]
	0x03E4F028 RET
	0x03E4F02C AND W8, W1, 0x1
	0x03E4F030 STRB W8, [X0 + 0x145]
	0x03E4F034 RET
	0x03E4F038 LDR W0, [X0 + 0x148]
	0x03E4F03C RET
	0x03E4F040 STR W1, [X0 + 0x148]
	0x03E4F044 RET
	0x03E4F048 LDR V0, [X0 + 0x14C]
	0x03E4F04C RET
	0x03E4F050 STR S0, [X0 + 0x14C]
	0x03E4F054 RET
	0x03E4F058 LDR V0, [X0 + 0x150]
	0x03E4F05C RET
	0x03E4F060 STR S0, [X0 + 0x150]
	0x03E4F064 RET
	0x03E4F068 LDR V0, [X0 + 0x154]
	0x03E4F06C RET
	0x03E4F070 STR S0, [X0 + 0x154]
	0x03E4F074 RET
	0x03E4F078 LDR V0, [X0 + 0x158]
	0x03E4F07C RET
	0x03E4F080 STR S0, [X0 + 0x158]
	0x03E4F084 RET
	0x03E4F088 LDR V0, [X0 + 0x15C]
	0x03E4F08C RET
	0x03E4F090 STR S0, [X0 + 0x15C]
	0x03E4F094 RET
	0x03E4F098 LDR V0, [X0 + 0x160]
	0x03E4F09C LDR V1, [X0 + 0x164]
	0x03E4F0A0 RET
	0x03E4F0A4 STR S0, [X0 + 0x160]
	0x03E4F0A8 STR S1, [X0 + 0x164]

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x59B000
	014 Move W8, [X23+2126]
	015 Move W21, W3
	016 Move X22, X2
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x315000
	024 Move X0, [X0+2264]
	025 Call 0x1C17CF4
	026 Move X0, 0x30A000
	027 Move X0, [X0+1096]
	028 Call 0x1C17CF4
	029 Move X0, 0x31E000
	030 Move X0, [X0+1944]
	031 Call 0x1C17CF4
	032 Move X0, 0x2CE000
	033 Move X0, [X0+2392]
	034 Call 0x1C17CF4
	035 Move X0, 0x2CF000
	036 Move X0, [X0+3664]
	037 Call 0x1C17CF4
	038 Move X0, 0x2CF000
	039 Move X0, [X0+3672]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+2126], W8
	043 Compare X20, 0
	044 JumpIfEqual {342}
	045 Call PanelEventHandler.get_eventSystem, X0
	046 Compare X0, 0
	047 JumpIfEqual {342}
	048 Move X0, [X0+40]
	049 Compare X0, 0
	050 JumpIfEqual {342}
	051 Move X8, [X0]
	052 Move X24, 0x2CF000
	053 Move X1, X22
	054 Move X9, [X8+728]
	055 Move X2, [X8+736]
	056 Move X24, [X24+3664]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move [X19+16], W0
	059 Move W23, W0
	060 Move X0, [X24]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X24]
	066 Move X8, [X0+184]
	067 Move W9, [X8+12]
	068 Move W10, [X8+16]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add W9, W10, W9
	071 NotImplemented "Instruction CSET not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 And W23, W10, W9
	075 Move TEMP, X23
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {89}
	079 Move X23, 0x2CF000
	080 Move X23, [X23+3672]
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X23]
	087 Move X8, [X0+184]
	088 Add X8, X8, 8
	089 Move W9, [X0+224]
	090 Move W25, [X19+16]
	091 Compare W9, 0
	092 JumpIfNotEqual {96}
	093 Call 0x1C17DFC
	094 Move X8, [X24]
	095 Move X8, [X8+184]
	096 Move X26, 0x2CF000
	097 Move W9, [X8+20]
	098 Move W8, [X8+24]
	099 Move X26, [X26+3672]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X26]
	102 Add W8, W8, W9
	103 NotImplemented "Instruction CSET not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W11, [X0+224]
	106 NotImplemented "Instruction CSET not yet implemented."
	107 And W25, W10, W8
	108 Compare W11, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X26]
	112 Move X8, [X0+184]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X9, X8, 16
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSET not yet implemented."
	118 NotImplemented "Instruction BIC not yet implemented."
	119 Move TEMP, X9
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {342}
	123 Move X8, [X8]
	124 Move W23, [X19+16]
	125 Move [X19+24], X8
	126 Move X0, [X24]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X24]
	132 Move X8, [X0+184]
	133 Move W9, [X8+8]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W9, [X0+224]
	136 Move W23, [X19+16]
	137 Compare W9, 0
	138 JumpIfNotEqual {142}
	139 Call 0x1C17DFC
	140 Move X0, [X24]
	141 Move X8, [X0+184]
	142 Move W9, [X8+12]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W8, 1
	145 Move W9, [X0+224]
	146 Move W23, [X19+16]
	147 Compare W9, 0
	148 JumpIfNotEqual {152}
	149 Call 0x1C17DFC
	150 Move X8, [X24]
	151 Move X8, [X8+184]
	152 Move W8, [X8+20]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CSET not yet implemented."
	155 Move X0, X31
	156 Move [X19+32], W8
	157 Call Screen.get_height
	158 Move W23, W0
	159 Move X0, X22
	160 Move X1, X31
	161 Call MultipleDisplayUtilities.GetRelativeMousePositionForRaycast, X0
	162 Move W8, 0x7F800000
	163 Move V8, V0
	164 Move S0, W8
	165 NotImplemented "Instruction FCVTZS not yet implemented."
	166 NotImplemented "Instruction FCMP not yet implemented."
	167 Move W8, 0x80000000
	168 NotImplemented "Instruction CSEL not yet implemented."
	169 Move V9, V2
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move V10, V1
	172 Move X25, 0x30A000
	173 Move X25, [X25+1096]
	174 Move X0, [X25]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X25]
	180 Move X8, [X0+184]
	181 Move X8, [X8]
	182 Compare X8, 0
	183 JumpIfEqual {342}
	184 Move W9, [X8+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move W9, [X0+224]
	187 Compare W9, 0
	188 JumpIfNotEqual {195}
	189 Call 0x1C17DFC
	190 Move X8, [X25]
	191 Move X8, [X8+184]
	192 Move X8, [X8]
	193 Compare X8, 0
	194 JumpIfEqual {342}
	195 Move W9, [X8+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add X8, X8, W24
	198 Move X0, [X8+32]
	199 Compare X0, 0
	200 JumpIfEqual {342}
	201 Move X1, X31
	202 Call Display.get_systemHeight, X0
	203 Move W23, W0
	204 Compare X22, 0
	205 JumpIfEqual {342}
	206 Move V1, [X22+272]
	207 Move V0, [X22+268]
	208 NotImplemented "Instruction SCVTF not yet implemented."
	209 Subtract S2, S2, S10
	210 NotImplemented "Instruction FNEG not yet implemented."
	211 Add X8, X22, 332
	212 Move [X19+52], S9
	213 Move [X19+60], S8
	214 Move [X19+44], S8
	215 Move [X19+52], S2
	216 Move [X19+60], S2
	217 Move [X19+68], S9
	218 Move [X19+68], S0
	219 Move [X19+76], S1
	220 Move [X19+76], W31
	221 Move [X19+80], W31
	222 Move V0, [X8]
	223 Move X24, 0x2CE000
	224 Move [X19+88], V0
	225 Move V0, [X22+348]
	226 Move [X19+104], S0
	227 Move V0, [X22+352]
	228 Move [X19+108], D0
	229 Move W9, [X22+360]
	230 Move [X19+116], W9
	231 Move V0, [X8+32]
	232 Move [X19+120], D0
	233 Move V0, [X8+40]
	234 Move X8, 0x31E000
	235 Move X8, [X8+1944]
	236 Move [X19+128], D0
	237 Move X8, [X8]
	238 Move X8, [X8+184]
	239 Move W8, [X8]
	240 Move X24, [X24+2392]
	241 Move [X19+136], W8
	242 Compare W21, 0
	243 JumpIfEqual {286}
	244 Move W8, [X22+328]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 NotImplemented "Instruction BIC not yet implemented."
	247 Move [X19+36], W23
	248 Move W8, [X22+312]
	249 Move [X19+84], W8
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, X31
	252 Call Time.get_unscaledTime
	253 Move X21, 0x315000
	254 Move X21, [X21+2264]
	255 Move V9, [X20+48]
	256 Move V8, V0
	257 Move X0, [X21]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X20, 0x59A000
	263 Move W8, [X20+2023]
	264 Compare W8, 0
	265 JumpIfNotEqual {271}
	266 Move X0, 0x315000
	267 Move X0, [X0+2264]
	268 Call 0x1C17CF4
	269 Move W8, 1
	270 Move [X20+2023], W8
	271 Move X0, [X21]
	272 Move W8, [X0+224]
	273 Compare W8, 0
	274 JumpIfNotEqual {277}
	275 Call 0x1C17DFC
	276 Move X0, [X21]
	277 Move X8, [X0+184]
	278 Move V0, [X8]
	279 Move X8, -53882880
	280 Move V1, [X8+1040]
	281 NotImplemented "Instruction SCVTF not yet implemented."
	282 Multiply S0, S0, S1
	283 Add S0, S9, S0
	284 NotImplemented "Instruction FCMP not yet implemented."
	285 Move W8, 1
	286 Move TEMP, 0
	287 Not TEMP
	288 Move W8, TEMP
	289 Move [X19+36], W8
	290 Move [X19+84], W31
	291 Move X0, [X24]
	292 Move W20, [X19+16]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Move W0, W20
	298 Move W1, W23
	299 Move X2, X31
	300 Call PointerDeviceState.ReleaseButton, X0, X1
	301 Move W8, [X19+84]
	302 Add W8, W8, 1
	303 Move [X19+84], W8
	304 Move X0, [X24]
	305 Move W20, [X19+16]
	306 Move W21, [X19+36]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move W0, W20
	312 Move W1, W21
	313 Move X2, X31
	314 Call PointerDeviceState.PressButton, X0, X1
	315 Move W8, [X19+84]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 NotImplemented "Instruction CSINC not yet implemented."
	318 Move [X19+84], W8
	319 Move X0, [X24]
	320 Move W20, [X19+16]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move W0, W20
	326 Move X1, X31
	327 Call PointerDeviceState.GetPressedButtons, X0
	328 Move [X19+40], W0
	329 Move X20, [X31+80]
	330 Move X19, [X31+88]
	331 Move X22, [X31+64]
	332 Move X21, [X31+72]
	333 Move X24, [X31+48]
	334 Move X23, [X31+56]
	335 Move X26, [X31+32]
	336 Move X25, [X31+40]
	337 Move X30, [X31+24]
	338 Move D9, [X31+8]
	339 Move D8, [X31+16]
	340 Move V10, [X31+96]
	341 Return 
	342 Call 0x1C17F20
	343 Call 0x1C17F28

Method: System.Void SetPosition(UnityEngine.Vector3 positionOverride, UnityEngine.Vector3 deltaOverride)

Disassembly:
	0x03E4F0AC RET
	0x03E4F0B0 LDR W0, [X0 + 0x168]
	0x03E4F0B4 RET
	0x03E4F0B8 STR W1, [X0 + 0x168]
	0x03E4F0BC RET
	0x03E4F0C0 LDR V0, [X0 + 0x16C]

ISIL:
	001 Move [X0+44], S0
	002 Move [X0+52], S1
	003 Move [X0+52], S2
	004 Move [X0+60], S0
	005 Move [X0+60], S1
	006 Move [X0+68], S2
	007 Move [X0+68], S3
	008 Move [X0+76], S4
	009 Move [X0+76], S5
	010 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E4F158 LDR X0, [X0 + 0x548]
	0x03E4F15C BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <Read>g__InRange|90_0(System.Int32 i, System.Int32 start, System.Int32 count)

Disassembly:
	0x03E4F388 LDR X8, [X0]
	0x03E4F38C LDP X20, X19, [X31 + 0x10]
	0x03E4F390 LDR X2, [X8 + 0x258]
	0x03E4F394 LDR X1, [X8 + 0x260]
	0x03E4F398 LDP X30, X21, [X31], #0x20
	0x03E4F39C BR X2
	0x03E4F3A0 BL 0x1C16F20

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Add W8, W2, W1
	003 NotImplemented "Instruction CSET not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 And W0, W9, W8
	007 Return X0

