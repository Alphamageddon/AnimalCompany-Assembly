Type: Unity.Burst.Unsafe

Method: T Read(System.Void* source)

Disassembly:
	0x022A6EE8 CBNZ X8, 0x22A6EF4
	0x022A6EEC MOV X0, X2
	0x022A6EF0 BL 0x1C5C6E0
	0x022A6EF4 MOV X0, X19
	0x022A6EF8 MOV X1, X20
	0x022A6EFC LDP X20, X19, [X31 + 0x10]
	0x022A6F00 MOVZ W2, 0xB8
	0x022A6F04 LDR X30, [X31], #0x20
	0x022A6F08 B 0x3EB1B30
	0x022A6F0C STR X30, [X31 - 0x20]!
	0x022A6F10 STP X20, X19, [X31 + 0x10]
	0x022A6F14 LDR X8, [X2 + 0x38]
	0x022A6F18 MOV X19, X1
	0x022A6F1C MOV X20, X0
	0x022A6F20 CBNZ X8, 0x22A6F2C
	0x022A6F24 MOV X0, X2
	0x022A6F28 BL 0x1C5C6E0
	0x022A6F2C MOV X0, X19
	0x022A6F30 MOV X1, X20
	0x022A6F34 LDP X20, X19, [X31 + 0x10]
	0x022A6F38 MOVZ W2, 0x98
	0x022A6F3C LDR X30, [X31], #0x20
	0x022A6F40 B 0x3EB1B30
	0x022A6F44 STR X30, [X31 - 0x20]!
	0x022A6F48 STP X20, X19, [X31 + 0x10]
	0x022A6F4C LDR X8, [X2 + 0x38]
	0x022A6F50 MOV X19, X1
	0x022A6F54 MOV X20, X0
	0x022A6F58 CBNZ X8, 0x22A6F64
	0x022A6F5C MOV X0, X2
	0x022A6F60 BL 0x1C5C6E0
	0x022A6F64 MOV X0, X19
	0x022A6F68 MOV X1, X20
	0x022A6F6C LDP X20, X19, [X31 + 0x10]
	0x022A6F70 MOVZ W2, 0x118
	0x022A6F74 LDR X30, [X31], #0x20
	0x022A6F78 B 0x3EB1B30
	0x022A6F7C STR X30, [X31 - 0x20]!
	0x022A6F80 STP X20, X19, [X31 + 0x10]
	0x022A6F84 LDR X8, [X2 + 0x38]
	0x022A6F88 MOV X19, X1
	0x022A6F8C MOV X20, X0
	0x022A6F90 CBNZ X8, 0x22A6F9C

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X19, X1
	013 Move X20, X0
	014 Move [X29-8], X8
	015 Move X8, [X2+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {22}
	018 Move X0, X2
	019 Move X21, X2
	020 Call 0x1C5D6E0
	021 Move X8, [X21+56]
	022 Move X8, [X8]
	023 Move W21, [X8+252]
	024 Add X8, X31, 0
	025 Add X9, X21, 15
	026 And X9, X9, 0x1FFFFFFFF
	027 Subtract X22, X8, X9
	028 Add X31, X22, 0
	029 Move X0, X22
	030 Move X1, X20
	031 Move X2, X21
	032 Call 0x3EB2AC0
	033 Move X0, X19
	034 Move X1, X22
	035 Move X2, X21
	036 Call 0x3EB2AC0
	037 Move X8, [X23+40]
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X31, X29, 0
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X23, [X31+16]
	046 Move X29, [X31+64]
	047 Move X30, [X31+72]
	048 Return X0
	049 Call 0x3EB2B20

Method: T ReadUnaligned(System.Void* source)

Disassembly:
	0x022A7040 BL 0x1C5C6E0
	0x022A7044 MOV X0, X19
	0x022A7048 MOV X1, X20
	0x022A704C LDP X20, X19, [X31 + 0x10]
	0x022A7050 MOVZ W2, 0xB8
	0x022A7054 LDR X30, [X31], #0x20
	0x022A7058 B 0x3EB1B30
	0x022A705C STR X30, [X31 - 0x20]!
	0x022A7060 STP X20, X19, [X31 + 0x10]
	0x022A7064 LDR X8, [X2 + 0x38]
	0x022A7068 MOV X19, X1
	0x022A706C MOV X20, X0
	0x022A7070 CBNZ X8, 0x22A707C
	0x022A7074 MOV X0, X2
	0x022A7078 BL 0x1C5C6E0
	0x022A707C MOV X0, X19
	0x022A7080 MOV X1, X20
	0x022A7084 LDP X20, X19, [X31 + 0x10]
	0x022A7088 MOVZ W2, 0x118
	0x022A708C LDR X30, [X31], #0x20
	0x022A7090 B 0x3EB1B30
	0x022A7094 STR X30, [X31 - 0x20]!
	0x022A7098 STP X20, X19, [X31 + 0x10]
	0x022A709C LDR X8, [X2 + 0x38]
	0x022A70A0 MOV X19, X1
	0x022A70A4 MOV X20, X0
	0x022A70A8 CBNZ X8, 0x22A70B4
	0x022A70AC MOV X0, X2
	0x022A70B0 BL 0x1C5C6E0
	0x022A70B4 MOV X0, X19
	0x022A70B8 MOV X1, X20
	0x022A70BC LDP X20, X19, [X31 + 0x10]
	0x022A70C0 MOVZ W2, 0xE0
	0x022A70C4 LDR X30, [X31], #0x20
	0x022A70C8 B 0x3EB1B30
	0x022A70CC STR X30, [X31 - 0x20]!
	0x022A70D0 STP X20, X19, [X31 + 0x10]
	0x022A70D4 LDR X8, [X2 + 0x38]
	0x022A70D8 MOV X19, X1
	0x022A70DC MOV X20, X0
	0x022A70E0 CBNZ X8, 0x22A70EC
	0x022A70E4 MOV X0, X2
	0x022A70E8 BL 0x1C5C6E0

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X19, X1
	013 Move X20, X0
	014 Move [X29-8], X8
	015 Move X8, [X2+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {22}
	018 Move X0, X2
	019 Move X21, X2
	020 Call 0x1C5D6E0
	021 Move X8, [X21+56]
	022 Move X8, [X8]
	023 Move W21, [X8+252]
	024 Add X8, X31, 0
	025 Add X9, X21, 15
	026 And X9, X9, 0x1FFFFFFFF
	027 Subtract X22, X8, X9
	028 Add X31, X22, 0
	029 Move X0, X22
	030 Move X1, X20
	031 Move X2, X21
	032 Call 0x3EB2AC0
	033 Move X0, X19
	034 Move X1, X22
	035 Move X2, X21
	036 Call 0x3EB2AC0
	037 Move X8, [X23+40]
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X31, X29, 0
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X23, [X31+16]
	046 Move X29, [X31+64]
	047 Move X30, [X31+72]
	048 Return X0
	049 Call 0x3EB2B20

Method: T ReadUnaligned(ref System.Byte source)

Disassembly:
	0x022A6F94 MOV X0, X2
	0x022A6F98 BL 0x1C5C6E0
	0x022A6F9C MOV X0, X19
	0x022A6FA0 MOV X1, X20
	0x022A6FA4 LDP X20, X19, [X31 + 0x10]
	0x022A6FA8 MOVZ W2, 0x90
	0x022A6FAC LDR X30, [X31], #0x20
	0x022A6FB0 B 0x3EB1B30
	0x022A6FB4 STR X30, [X31 - 0x20]!
	0x022A6FB8 STP X20, X19, [X31 + 0x10]
	0x022A6FBC LDR X8, [X2 + 0x38]
	0x022A6FC0 MOV X19, X1
	0x022A6FC4 MOV X20, X0
	0x022A6FC8 CBNZ X8, 0x22A6FD4
	0x022A6FCC MOV X0, X2
	0x022A6FD0 BL 0x1C5C6E0
	0x022A6FD4 MOV X0, X19
	0x022A6FD8 MOV X1, X20
	0x022A6FDC LDP X20, X19, [X31 + 0x10]
	0x022A6FE0 MOVZ W2, 0xB8
	0x022A6FE4 LDR X30, [X31], #0x20
	0x022A6FE8 B 0x3EB1B30
	0x022A6FEC STR X30, [X31 - 0x20]!
	0x022A6FF0 STP X20, X19, [X31 + 0x10]
	0x022A6FF4 LDR X8, [X2 + 0x38]
	0x022A6FF8 MOV X19, X1
	0x022A6FFC MOV X20, X0
	0x022A7000 CBNZ X8, 0x22A700C
	0x022A7004 MOV X0, X2
	0x022A7008 BL 0x1C5C6E0
	0x022A700C MOV X0, X19
	0x022A7010 MOV X1, X20
	0x022A7014 LDP X20, X19, [X31 + 0x10]
	0x022A7018 MOVZ W2, 0x58
	0x022A701C LDR X30, [X31], #0x20
	0x022A7020 B 0x3EB1B30
	0x022A7024 STR X30, [X31 - 0x20]!
	0x022A7028 STP X20, X19, [X31 + 0x10]
	0x022A702C LDR X8, [X2 + 0x38]
	0x022A7030 MOV X19, X1
	0x022A7034 MOV X20, X0
	0x022A7038 CBNZ X8, 0x22A7044
	0x022A703C MOV X0, X2

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X23+40]
	012 Move X19, X1
	013 Move X20, X0
	014 Move [X29-8], X8
	015 Move X8, [X2+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {22}
	018 Move X0, X2
	019 Move X21, X2
	020 Call 0x1C5D6E0
	021 Move X8, [X21+56]
	022 Move X8, [X8]
	023 Move W21, [X8+252]
	024 Add X8, X31, 0
	025 Add X9, X21, 15
	026 And X9, X9, 0x1FFFFFFFF
	027 Subtract X22, X8, X9
	028 Add X31, X22, 0
	029 Move X0, X22
	030 Move X1, X20
	031 Move X2, X21
	032 Call 0x3EB2AC0
	033 Move X0, X19
	034 Move X1, X22
	035 Move X2, X21
	036 Call 0x3EB2AC0
	037 Move X8, [X23+40]
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X31, X29, 0
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X23, [X31+16]
	046 Move X29, [X31+64]
	047 Move X30, [X31+72]
	048 Return X0
	049 Call 0x3EB2B20

Method: System.Void Write(System.Void* destination, T value)

Disassembly:
	0x022A725C TBNZ X8, 0x0, 0x22A7264
	0x022A7260 BL 0x1C5C684
	0x022A7264 MOV X1, X22
	0x022A7268 MOV X2, X31
	0x022A726C BL 0x199D30C
	0x022A7270 LDR X8, [X19 + 0x38]
	0x022A7274 MOV X19, X0
	0x022A7278 LDR X8, [X8]
	0x022A727C LDRB W9, [X8 + 0x135]
	0x022A7280 TBNZ X9, 0x0, 0x22A7290
	0x022A7284 MOV X0, X8
	0x022A7288 BL 0x1C5C684
	0x022A728C MOV X8, X0
	0x022A7290 MOV X0, X8
	0x022A7294 MOV X1, X20
	0x022A7298 MOV X2, X31
	0x022A729C BL 0x199D30C
	0x022A72A0 LDR X8, [X25 + 0x28]
	0x022A72A4 LDUR X9, [X29 - 0x8]
	0x022A72A8 CMP X19, X0
	0x022A72AC CSET W0, EQ
	0x022A72B0 CMP X8, X9
	0x022A72B4 B.NE 0x22A72D4
	0x022A72B8 ADD X31, X29, 0x0
	0x022A72BC LDP X20, X19, [X31 + 0x40]
	0x022A72C0 LDP X22, X21, [X31 + 0x30]
	0x022A72C4 LDP X24, X23, [X31 + 0x20]
	0x022A72C8 LDP X26, X25, [X31 + 0x10]
	0x022A72CC LDP X29, X30, [X31], #0x50
	0x022A72D0 RET
	0x022A72D4 BL 0x3EB1B20
	0x022A72D8 STP X30, X19, [X31 - 0x10]!
	0x022A72DC LDR X8, [X1 + 0x38]
	0x022A72E0 MOV W19, W0
	0x022A72E4 CBNZ X8, 0x22A72F0
	0x022A72E8 MOV X0, X1
	0x022A72EC BL 0x1C5C6E0
	0x022A72F0 MOV W0, W19
	0x022A72F4 LDP X30, X19, [X31], #0x10
	0x022A72F8 RET
	0x022A72FC STR X30, [X31 - 0x20]!
	0x022A7300 STP X20, X19, [X31 + 0x10]
	0x022A7304 LDR X8, [X1 + 0x38]
	0x022A7308 MOV X19, X0
	0x022A730C CBNZ X8, 0x22A7320
	0x022A7310 MOV X0, X1
	0x022A7314 MOV X20, X1
	0x022A7318 BL 0x1C5C6E0
	0x022A731C LDR X8, [X20 + 0x38]
	0x022A7320 STR W31, [X31 + 0xC]
	0x022A7324 LDR X2, [X8 + 0x8]
	0x022A7328 ADD X1, X31, 0xC

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move [X29-8], X8
	017 Move [X29-16], X1
	018 Move X8, [X2+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X8, [X8]
	025 Add X9, X31, 0
	026 Move W22, [X8+252]
	027 Add X10, X22, 15
	028 And X10, X10, 0x1FFFFFFFF
	029 Subtract X23, X9, X10
	030 Add X31, X23, 0
	031 Move W8, [X8+40]
	032 Move X0, X23
	033 Move X2, X22
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X8, X29, 16
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Call 0x3EB2AC0
	038 Move X0, X20
	039 Move X1, X23
	040 Move X2, X22
	041 Call 0x3EB2AC0
	042 Move X8, [X19+56]
	043 Move X0, [X8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X24+40]
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X31, X29, 0
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X29, [X31+64]
	061 Move X30, [X31+72]
	062 Return 
	063 Call 0x3EB2B20

Method: System.Void WriteUnaligned(System.Void* destination, T value)

Disassembly:
	0x022A73FC TBNZ X8, 0x0, 0x22A7404
	0x022A7400 BL 0x1C5C684
	0x022A7404 LDR X8, [X24 + 0x28]
	0x022A7408 LDUR X9, [X29 - 0x8]
	0x022A740C CMP X8, X9
	0x022A7410 B.NE 0x22A742C
	0x022A7414 ADD X31, X29, 0x0
	0x022A7418 LDP X20, X19, [X31 + 0x30]
	0x022A741C LDP X22, X21, [X31 + 0x20]
	0x022A7420 LDP X24, X23, [X31 + 0x10]
	0x022A7424 LDP X29, X30, [X31], #0x40
	0x022A7428 RET
	0x022A742C BL 0x3EB1B20
	0x022A7430 STR X30, [X31 - 0x10]!
	0x022A7434 MOV X8, X0
	0x022A7438 MOVZ W2, 0xC4
	0x022A743C MOV X0, X1
	0x022A7440 MOV X1, X8
	0x022A7444 BL 0x3EB1B30
	0x022A7448 LDR X30, [X31], #0x10
	0x022A744C RET
	0x022A7450 STR X30, [X31 - 0x10]!
	0x022A7454 MOV X8, X0
	0x022A7458 MOVZ W2, 0xB8
	0x022A745C MOV X0, X1
	0x022A7460 MOV X1, X8
	0x022A7464 BL 0x3EB1B30
	0x022A7468 LDR X30, [X31], #0x10
	0x022A746C RET
	0x022A7470 STR X30, [X31 - 0x10]!
	0x022A7474 MOV X8, X0
	0x022A7478 MOVZ W2, 0x98
	0x022A747C MOV X0, X1
	0x022A7480 MOV X1, X8
	0x022A7484 BL 0x3EB1B30
	0x022A7488 LDR X30, [X31], #0x10
	0x022A748C RET
	0x022A7490 STR X30, [X31 - 0x10]!
	0x022A7494 MOV X8, X0
	0x022A7498 MOVZ W2, 0x118
	0x022A749C MOV X0, X1
	0x022A74A0 MOV X1, X8
	0x022A74A4 BL 0x3EB1B30
	0x022A74A8 LDR X30, [X31], #0x10
	0x022A74AC RET
	0x022A74B0 STR X30, [X31 - 0x10]!
	0x022A74B4 MOV X8, X0
	0x022A74B8 MOVZ W2, 0x90
	0x022A74BC MOV X0, X1
	0x022A74C0 MOV X1, X8
	0x022A74C4 BL 0x3EB1B30
	0x022A74C8 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move [X29-8], X8
	017 Move [X29-16], X1
	018 Move X8, [X2+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X8, [X8]
	025 Add X9, X31, 0
	026 Move W22, [X8+252]
	027 Add X10, X22, 15
	028 And X10, X10, 0x1FFFFFFFF
	029 Subtract X23, X9, X10
	030 Add X31, X23, 0
	031 Move W8, [X8+40]
	032 Move X0, X23
	033 Move X2, X22
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X8, X29, 16
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Call 0x3EB2AC0
	038 Move X0, X20
	039 Move X1, X23
	040 Move X2, X22
	041 Call 0x3EB2AC0
	042 Move X8, [X19+56]
	043 Move X0, [X8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X24+40]
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X31, X29, 0
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X29, [X31+64]
	061 Move X30, [X31+72]
	062 Return 
	063 Call 0x3EB2B20

Method: System.Void WriteUnaligned(ref System.Byte destination, T value)

Disassembly:
	0x022A732C MOV X0, X19
	0x022A7330 LDR X8, [X2]
	0x022A7334 BLR X8
	0x022A7338 LDR W0, [X31 + 0xC]
	0x022A733C LDP X20, X19, [X31 + 0x10]
	0x022A7340 LDR X30, [X31], #0x20
	0x022A7344 RET
	0x022A7348 LDR V0, [X0]
	0x022A734C STR V0, [X1]
	0x022A7350 RET
	0x022A7354 LDR X8, [X0 + 0x30]
	0x022A7358 LDP V1, V0, [X0 + 0x10]
	0x022A735C LDR V2, [X0]
	0x022A7360 STR X8, [X1 + 0x30]
	0x022A7364 STP V1, V0, [X1 + 0x10]
	0x022A7368 STR V2, [X1]
	0x022A736C RET
	0x022A7370 STP X29, X30, [X31 - 0x40]!
	0x022A7374 STP X24, X23, [X31 + 0x10]
	0x022A7378 STP X22, X21, [X31 + 0x20]
	0x022A737C STP X20, X19, [X31 + 0x30]
	0x022A7380 ADD X29, X31, 0x0
	0x022A7384 SUB X31, X31, 0x10
	0x022A7388 MRS X24, 0xC000
	0x022A738C LDR X8, [X24 + 0x28]
	0x022A7390 MOV X19, X2
	0x022A7394 MOV X20, X1
	0x022A7398 MOV X21, X0
	0x022A739C STUR X8, [X29 - 0x8]
	0x022A73A0 LDR X8, [X2 + 0x38]
	0x022A73A4 CBNZ X8, 0x22A73B4
	0x022A73A8 MOV X0, X19
	0x022A73AC BL 0x1C5C6E0
	0x022A73B0 LDR X8, [X19 + 0x38]
	0x022A73B4 LDR X8, [X8 + 0x8]
	0x022A73B8 LDR W22, [X8 + 0xFC]
	0x022A73BC ADD X8, X31, 0x0
	0x022A73C0 ADD X9, X22, 0xF
	0x022A73C4 AND X9, X9, 0x1FFFFFFFF
	0x022A73C8 SUB X23, X8, X9
	0x022A73CC ADD X31, X23, 0x0
	0x022A73D0 MOV X0, X23
	0x022A73D4 MOV X1, X21
	0x022A73D8 MOV X2, X22
	0x022A73DC BL 0x3EB1AC0
	0x022A73E0 MOV X0, X20
	0x022A73E4 MOV X1, X23
	0x022A73E8 MOV X2, X22
	0x022A73EC BL 0x3EB1AC0
	0x022A73F0 LDR X8, [X19 + 0x38]
	0x022A73F4 LDR X0, [X8 + 0x8]
	0x022A73F8 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move [X29-8], X8
	017 Move [X29-16], X1
	018 Move X8, [X2+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X8, [X8]
	025 Add X9, X31, 0
	026 Move W22, [X8+252]
	027 Add X10, X22, 15
	028 And X10, X10, 0x1FFFFFFFF
	029 Subtract X23, X9, X10
	030 Add X31, X23, 0
	031 Move W8, [X8+40]
	032 Move X0, X23
	033 Move X2, X22
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X8, X29, 16
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Call 0x3EB2AC0
	038 Move X0, X20
	039 Move X1, X23
	040 Move X2, X22
	041 Call 0x3EB2AC0
	042 Move X8, [X19+56]
	043 Move X0, [X8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X24+40]
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X31, X29, 0
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X29, [X31+64]
	061 Move X30, [X31+72]
	062 Return 
	063 Call 0x3EB2B20

Method: System.Void Copy(System.Void* destination, ref T source)

Disassembly:
	0x022A6E10 RET
	0x022A6E14 STR X30, [X31 - 0x20]!
	0x022A6E18 STP X20, X19, [X31 + 0x10]
	0x022A6E1C LDR X8, [X2 + 0x38]
	0x022A6E20 MOV X19, X1
	0x022A6E24 MOV X20, X0
	0x022A6E28 CBNZ X8, 0x22A6E34
	0x022A6E2C MOV X0, X2
	0x022A6E30 BL 0x1C5C6E0
	0x022A6E34 LDR X8, [X20 + 0x30]
	0x022A6E38 LDP V1, V0, [X20 + 0x10]
	0x022A6E3C LDR V2, [X20]
	0x022A6E40 STR X8, [X19 + 0x30]
	0x022A6E44 STP V1, V0, [X19 + 0x10]
	0x022A6E48 STR V2, [X19]
	0x022A6E4C LDP X20, X19, [X31 + 0x10]
	0x022A6E50 LDR X30, [X31], #0x20
	0x022A6E54 RET
	0x022A6E58 STP X30, X21, [X31 - 0x20]!
	0x022A6E5C STP X20, X19, [X31 + 0x10]
	0x022A6E60 LDR X8, [X2 + 0x38]
	0x022A6E64 MOV X19, X1
	0x022A6E68 MOV X20, X0
	0x022A6E6C CBNZ X8, 0x22A6E80
	0x022A6E70 MOV X0, X2
	0x022A6E74 MOV X21, X2
	0x022A6E78 BL 0x1C5C6E0
	0x022A6E7C LDR X8, [X21 + 0x38]
	0x022A6E80 LDR X2, [X8 + 0x8]
	0x022A6E84 MOV X0, X20
	0x022A6E88 MOV X1, X19
	0x022A6E8C LDP X20, X19, [X31 + 0x10]
	0x022A6E90 LDR X3, [X2]
	0x022A6E94 LDP X30, X21, [X31], #0x20
	0x022A6E98 BR X3
	0x022A6E9C STR X30, [X31 - 0x20]!
	0x022A6EA0 STP X20, X19, [X31 + 0x10]
	0x022A6EA4 LDR X8, [X2 + 0x38]
	0x022A6EA8 MOV X19, X1
	0x022A6EAC MOV X20, X0
	0x022A6EB0 CBNZ X8, 0x22A6EBC
	0x022A6EB4 MOV X0, X2
	0x022A6EB8 BL 0x1C5C6E0
	0x022A6EBC MOV X0, X19
	0x022A6EC0 MOV X1, X20
	0x022A6EC4 LDP X20, X19, [X31 + 0x10]
	0x022A6EC8 MOVZ W2, 0xC4
	0x022A6ECC LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move [X29-8], X8
	017 Move X8, [X2+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, [X19+56]
	023 Move X8, [X8+8]
	024 Move W22, [X8+252]
	025 Add X8, X31, 0
	026 Add X9, X22, 15
	027 And X9, X9, 0x1FFFFFFFF
	028 Subtract X23, X8, X9
	029 Add X31, X23, 0
	030 Move X0, X23
	031 Move X1, X20
	032 Move X2, X22
	033 Call 0x3EB2AC0
	034 Move X0, X21
	035 Move X1, X23
	036 Move X2, X22
	037 Call 0x3EB2AC0
	038 Move X8, [X19+56]
	039 Move X0, [X8+8]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X8, [X24+40]
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X31, X29, 0
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X29, [X31+64]
	057 Move X30, [X31+72]
	058 Return 
	059 Call 0x3EB2B20

Method: System.Void Copy(ref T destination, System.Void* source)

Disassembly:
	0x022A6D50 MOV X21, X2
	0x022A6D54 BL 0x1C5C6E0
	0x022A6D58 LDR X8, [X21 + 0x38]
	0x022A6D5C LDR X8, [X8]
	0x022A6D60 SXTW X9, W19
	0x022A6D64 LDRSW X8, [X8 + 0xFC]
	0x022A6D68 NOP
	0x022A6D6C MADD X0, X8, X9, X20
	0x022A6D70 LDP X20, X19, [X31 + 0x10]
	0x022A6D74 LDP X30, X21, [X31], #0x20
	0x022A6D78 RET
	0x022A6D7C RET
	0x022A6D80 RET
	0x022A6D84 RET
	0x022A6D88 RET
	0x022A6D8C RET
	0x022A6D90 RET
	0x022A6D94 RET
	0x022A6D98 RET
	0x022A6D9C RET
	0x022A6DA0 RET
	0x022A6DA4 RET
	0x022A6DA8 RET
	0x022A6DAC RET
	0x022A6DB0 RET
	0x022A6DB4 RET
	0x022A6DB8 RET
	0x022A6DBC RET
	0x022A6DC0 RET
	0x022A6DC4 RET
	0x022A6DC8 RET
	0x022A6DCC RET
	0x022A6DD0 RET
	0x022A6DD4 RET
	0x022A6DD8 RET
	0x022A6DDC RET
	0x022A6DE0 STR X30, [X31 - 0x20]!
	0x022A6DE4 STP X20, X19, [X31 + 0x10]
	0x022A6DE8 LDR X8, [X2 + 0x38]
	0x022A6DEC MOV X19, X1
	0x022A6DF0 MOV X20, X0
	0x022A6DF4 CBNZ X8, 0x22A6E00
	0x022A6DF8 MOV X0, X2
	0x022A6DFC BL 0x1C5C6E0
	0x022A6E00 LDR V0, [X20]
	0x022A6E04 STR V0, [X19]
	0x022A6E08 LDP X20, X19, [X31 + 0x10]
	0x022A6E0C LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move [X29-8], X8
	017 Move X8, [X2+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, [X19+56]
	023 Move X8, [X8+8]
	024 Move W22, [X8+252]
	025 Add X8, X31, 0
	026 Add X9, X22, 15
	027 And X9, X9, 0x1FFFFFFFF
	028 Subtract X23, X8, X9
	029 Add X31, X23, 0
	030 Move X0, X23
	031 Move X1, X20
	032 Move X2, X22
	033 Call 0x3EB2AC0
	034 Move X0, X21
	035 Move X1, X23
	036 Move X2, X22
	037 Call 0x3EB2AC0
	038 Move X8, [X19+56]
	039 Move X0, [X8+8]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X8, [X24+40]
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X31, X29, 0
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X29, [X31+64]
	057 Move X30, [X31+72]
	058 Return 
	059 Call 0x3EB2B20

Method: System.Void* AsPointer(ref T value)

Disassembly:
	0x022A6D3C LDR X8, [X2 + 0x38]

ISIL:
	001 Return X0

Method: System.Int32 SizeOf()

Disassembly:
	0x022A70EC MOV X0, X19
	0x022A70F0 MOV X1, X20
	0x022A70F4 LDP X20, X19, [X31 + 0x10]
	0x022A70F8 MOVZ W2, 0x68
	0x022A70FC LDR X30, [X31], #0x20
	0x022A7100 B 0x3EB1B30
	0x022A7104 STR X30, [X31 - 0x20]!
	0x022A7108 STP X20, X19, [X31 + 0x10]
	0x022A710C LDR X8, [X2 + 0x38]
	0x022A7110 MOV X19, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Compare X8, 0
	005 JumpIfNotEqual {9}
	006 Move X19, X0
	007 Call 0x1C5D6E0
	008 Move X8, [X19+56]
	009 Move X8, [X8]
	010 Move W0, [X8+252]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0

Method: System.Void CopyBlock(System.Void* destination, System.Void* source, System.UInt32 byteCount)

Disassembly:
	0x0371F858 B.EQ 0x371F8F0
	0x0371F85C LDRB W9, [X19 + 0x27]

ISIL:
	001 Move W2, W2
	002 Call 0x3EB2AC0
	003 Return 

Method: System.Void CopyBlock(ref System.Byte destination, ref System.Byte source, System.UInt32 byteCount)

Disassembly:
	0x0371F860 CMP W8, 0x18
	0x0371F864 STRB W9, [X0 + 0x37]

ISIL:
	001 Move W2, W2
	002 Call 0x3EB2AC0
	003 Return 

Method: System.Void CopyBlockUnaligned(System.Void* destination, System.Void* source, System.UInt32 byteCount)

Disassembly:
	0x0371F868 B.LS 0x371F8F0
	0x0371F86C LDRB W9, [X19 + 0x28]

ISIL:
	001 Move W2, W2
	002 Call 0x3EB2AC0
	003 Return 

Method: System.Void CopyBlockUnaligned(ref System.Byte destination, ref System.Byte source, System.UInt32 byteCount)

Disassembly:
	0x0371F870 CMP W8, 0x19
	0x0371F874 STRB W9, [X0 + 0x38]

ISIL:
	001 Move W2, W2
	002 Call 0x3EB2AC0
	003 Return 

Method: System.Void InitBlock(System.Void* startAddress, System.Byte value, System.UInt32 byteCount)

Disassembly:
	0x0371F878 B.EQ 0x371F8F0
	0x0371F87C LDRB W9, [X19 + 0x29]

ISIL:
	001 Move W2, W2
	002 Call 0x3EB2B10
	003 Return 

Method: System.Void InitBlock(ref System.Byte startAddress, System.Byte value, System.UInt32 byteCount)

Disassembly:
	0x0371F880 CMP W8, 0x1A
	0x0371F884 STRB W9, [X0 + 0x39]

ISIL:
	001 Move W2, W2
	002 Call 0x3EB2B10
	003 Return 

Method: System.Void InitBlockUnaligned(System.Void* startAddress, System.Byte value, System.UInt32 byteCount)

Disassembly:
	0x0371F888 B.LS 0x371F8F0
	0x0371F88C LDRB W9, [X19 + 0x2A]

ISIL:
	001 Move W2, W2
	002 Call 0x3EB2B10
	003 Return 

Method: System.Void InitBlockUnaligned(ref System.Byte startAddress, System.Byte value, System.UInt32 byteCount)

Disassembly:
	0x0371F890 CMP W8, 0x1B
	0x0371F894 STRB W9, [X0 + 0x3A]

ISIL:
	001 Move W2, W2
	002 Call 0x3EB2B10
	003 Return 

Method: T As(System.Object o)

Disassembly:
	0x022A6D34 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Return X0

Method: T AsRef(System.Void* source)

Disassembly:
	0x022A6D44 MOV X20, X0

ISIL:
	001 Return X0

Method: T AsRef(ref T source)

Disassembly:
	0x022A6D40 MOV W19, W1

ISIL:
	001 Return X0

Method: TTo As(ref TFrom source)

Disassembly:
	0x022A6D38 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Return X0

Method: T Unbox(System.Object box)

Disassembly:
	0x022A71F0 MOV X23, X0
	0x022A71F4 STUR X8, [X29 - 0x8]
	0x022A71F8 LDR X26, [X2 + 0x38]
	0x022A71FC CBNZ X26, 0x22A720C
	0x022A7200 MOV X0, X19
	0x022A7204 BL 0x1C5C6E0
	0x022A7208 LDR X26, [X19 + 0x38]
	0x022A720C LDR X8, [X26]
	0x022A7210 LDR W24, [X8 + 0xFC]
	0x022A7214 ADD X8, X31, 0x0
	0x022A7218 ADD X9, X24, 0xF
	0x022A721C AND X9, X9, 0x1FFFFFFFF
	0x022A7220 SUB X22, X8, X9
	0x022A7224 ADD X31, X22, 0x0
	0x022A7228 ADD X8, X31, 0x0
	0x022A722C SUB X20, X8, X9
	0x022A7230 ADD X31, X20, 0x0
	0x022A7234 MOV X0, X22
	0x022A7238 MOV X1, X23
	0x022A723C MOV X2, X24
	0x022A7240 BL 0x3EB1AC0
	0x022A7244 MOV X0, X20
	0x022A7248 MOV X1, X21
	0x022A724C MOV X2, X24
	0x022A7250 BL 0x3EB1AC0
	0x022A7254 LDR X0, [X26]
	0x022A7258 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X1, [X8]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Compare X19, 0
	022 JumpIfEqual {33}
	023 Move X8, [X19]
	024 Move X9, [X1+64]
	025 Move X0, X19
	026 Move X8, [X8+64]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call 0x1C17E08
	032 Return X0
	033 Call 0x1C17F20
	034 Call 0x1C181E0

Method: T Add(ref T source, System.Int32 elementOffset)

Disassembly:
	0x022A6C4C LDR X8, [X0 + 0x38]
	0x022A6C50 CBNZ X8, 0x22A6C58
	0x022A6C54 BL 0x1C5C6E0
	0x022A6C58 MOVZ W0, 0x4
	0x022A6C5C LDR X30, [X31], #0x10
	0x022A6C60 RET
	0x022A6C64 STR X30, [X31 - 0x10]!
	0x022A6C68 LDR X8, [X0 + 0x38]
	0x022A6C6C CBNZ X8, 0x22A6C74
	0x022A6C70 BL 0x1C5C6E0
	0x022A6C74 MOVZ W0, 0x4
	0x022A6C78 LDR X30, [X31], #0x10
	0x022A6C7C RET
	0x022A6C80 STR X30, [X31 - 0x10]!
	0x022A6C84 LDR X8, [X0 + 0x38]
	0x022A6C88 CBNZ X8, 0x22A6C90
	0x022A6C8C BL 0x1C5C6E0
	0x022A6C90 MOVZ W0, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move W19, W1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X8, [X8+8]
	015 Move X9, W19
	016 Move W8, [X8+252]
	017 NotImplemented "Instruction NOP not yet implemented."
	018 NotImplemented "Instruction MADD not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0

Method: System.Void* Add(System.Void* source, System.Int32 elementOffset)

Disassembly:
	0x022A6CD8 LDR X8, [X0 + 0x38]
	0x022A6CDC CBNZ X8, 0x22A6CE4
	0x022A6CE0 BL 0x1C5C6E0
	0x022A6CE4 MOVZ W0, 0x4
	0x022A6CE8 LDR X30, [X31], #0x10
	0x022A6CEC RET
	0x022A6CF0 STR X30, [X31 - 0x10]!
	0x022A6CF4 LDR X8, [X0 + 0x38]
	0x022A6CF8 CBNZ X8, 0x22A6D00
	0x022A6CFC BL 0x1C5C6E0
	0x022A6D00 MOVZ W0, 0x4
	0x022A6D04 LDR X30, [X31], #0x10
	0x022A6D08 RET
	0x022A6D0C STR X30, [X31 - 0x10]!
	0x022A6D10 LDR X8, [X0 + 0x38]
	0x022A6D14 CBNZ X8, 0x22A6D1C
	0x022A6D18 BL 0x1C5C6E0
	0x022A6D1C MOVZ W0, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move W19, W1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X8, [X8]
	015 Move X9, W19
	016 Move W8, [X8+252]
	017 NotImplemented "Instruction NOP not yet implemented."
	018 NotImplemented "Instruction MADD not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0

Method: T Add(ref T source, System.IntPtr elementOffset)

Disassembly:
	0x022A6C94 LDR X30, [X31], #0x10
	0x022A6C98 RET
	0x022A6C9C STR X30, [X31 - 0x10]!
	0x022A6CA0 LDR X8, [X0 + 0x38]
	0x022A6CA4 CBNZ X8, 0x22A6CAC
	0x022A6CA8 BL 0x1C5C6E0
	0x022A6CAC MOVZ W0, 0x4
	0x022A6CB0 LDR X30, [X31], #0x10
	0x022A6CB4 RET
	0x022A6CB8 STR X30, [X31 - 0x10]!
	0x022A6CBC LDR X8, [X0 + 0x38]
	0x022A6CC0 CBNZ X8, 0x22A6CC8
	0x022A6CC4 BL 0x1C5C6E0
	0x022A6CC8 MOVZ W0, 0x4
	0x022A6CCC LDR X30, [X31], #0x10
	0x022A6CD0 RET
	0x022A6CD4 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X8, [X8+8]
	015 NotImplemented "Instruction LDRSW not yet implemented."
	016 NotImplemented "Instruction NOP not yet implemented."
	017 NotImplemented "Instruction MADD not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return X0

Method: T AddByteOffset(ref T source, System.IntPtr byteOffset)

Disassembly:
	0x022A6D20 LDR X30, [X31], #0x10
	0x022A6D24 RET

ISIL:
	001 Add X0, X0, X1
	002 Return X0

Method: T Subtract(ref T source, System.Int32 elementOffset)

Disassembly:
	0x022A7114 MOV X20, X0
	0x022A7118 CBNZ X8, 0x22A7124
	0x022A711C MOV X0, X2
	0x022A7120 BL 0x1C5C6E0
	0x022A7124 MOV X0, X19
	0x022A7128 MOV X1, X20
	0x022A712C LDP X20, X19, [X31 + 0x10]
	0x022A7130 MOVZ W2, 0x88
	0x022A7134 LDR X30, [X31], #0x20
	0x022A7138 B 0x3EB1B30
	0x022A713C STR X30, [X31 - 0x20]!
	0x022A7140 STP X20, X19, [X31 + 0x10]
	0x022A7144 LDR X8, [X2 + 0x38]
	0x022A7148 MOV X19, X1
	0x022A714C MOV X20, X0
	0x022A7150 CBNZ X8, 0x22A715C
	0x022A7154 MOV X0, X2
	0x022A7158 BL 0x1C5C6E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move W19, W1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X8, [X8+8]
	015 Move X9, W19
	016 Move W8, [X8+252]
	017 NotImplemented "Instruction NOP not yet implemented."
	018 NotImplemented "Instruction MSUB not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0

Method: System.Void* Subtract(System.Void* source, System.Int32 elementOffset)

Disassembly:
	0x022A71A0 MOV X0, X20
	0x022A71A4 MOV X1, X19
	0x022A71A8 LDP X20, X19, [X31 + 0x10]
	0x022A71AC LDR X3, [X2]
	0x022A71B0 LDP X30, X21, [X31], #0x20
	0x022A71B4 BR X3
	0x022A71B8 CMP W0, W1
	0x022A71BC CSET W0, EQ
	0x022A71C0 RET
	0x022A71C4 STP X29, X30, [X31 - 0x50]!
	0x022A71C8 STP X26, X25, [X31 + 0x10]
	0x022A71CC STP X24, X23, [X31 + 0x20]
	0x022A71D0 STP X22, X21, [X31 + 0x30]
	0x022A71D4 STP X20, X19, [X31 + 0x40]
	0x022A71D8 ADD X29, X31, 0x0
	0x022A71DC SUB X31, X31, 0x10
	0x022A71E0 MRS X25, 0xC000
	0x022A71E4 LDR X8, [X25 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move W19, W1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X8, [X8]
	015 Move X9, W19
	016 Move W8, [X8+252]
	017 NotImplemented "Instruction NOP not yet implemented."
	018 NotImplemented "Instruction MSUB not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0

Method: T Subtract(ref T source, System.IntPtr elementOffset)

Disassembly:
	0x022A715C MOV X0, X19
	0x022A7160 MOV X1, X20
	0x022A7164 LDP X20, X19, [X31 + 0x10]
	0x022A7168 MOVZ W2, 0xB0
	0x022A716C LDR X30, [X31], #0x20
	0x022A7170 B 0x3EB1B30
	0x022A7174 STP X30, X21, [X31 - 0x20]!
	0x022A7178 STP X20, X19, [X31 + 0x10]
	0x022A717C LDR X8, [X2 + 0x38]
	0x022A7180 MOV X19, X1
	0x022A7184 MOV X20, X0
	0x022A7188 CBNZ X8, 0x22A719C
	0x022A718C MOV X0, X2
	0x022A7190 MOV X21, X2
	0x022A7194 BL 0x1C5C6E0
	0x022A7198 LDR X8, [X21 + 0x38]
	0x022A719C LDR X2, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X8, [X8+8]
	015 NotImplemented "Instruction LDRSW not yet implemented."
	016 NotImplemented "Instruction NOP not yet implemented."
	017 NotImplemented "Instruction MSUB not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return X0

Method: T SubtractByteOffset(ref T source, System.IntPtr byteOffset)

Disassembly:
	0x022A71E8 MOV X19, X2
	0x022A71EC MOV X21, X1

ISIL:
	001 Subtract X0, X0, X1
	002 Return X0

Method: System.IntPtr ByteOffset(ref T origin, ref T target)

Disassembly:
	0x022A6D48 CBNZ X8, 0x22A6D5C
	0x022A6D4C MOV X0, X2

ISIL:
	001 Subtract X0, X1, X0
	002 Return X0

Method: System.Boolean AreSame(ref T left, ref T right)

Disassembly:
	0x022A6D28 MOVZ W8, 0x74
	0x022A6D2C SMADDL X0, X1, X8, X0
	0x022A6D30 RET

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean IsAddressGreaterThan(ref T left, ref T right)

Disassembly:
	0x022A6ED0 B 0x3EB1B30
	0x022A6ED4 STR X30, [X31 - 0x20]!
	0x022A6ED8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean IsAddressLessThan(ref T left, ref T right)

Disassembly:
	0x022A6EDC LDR X8, [X2 + 0x38]
	0x022A6EE0 MOV X19, X1
	0x022A6EE4 MOV X20, X0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

