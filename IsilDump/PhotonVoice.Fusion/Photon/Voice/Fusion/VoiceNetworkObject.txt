Type: Photon.Voice.Fusion.VoiceNetworkObject

Method: Photon.Voice.ILogger get_Logger()

Disassembly:
	0x0358A720 BL 0x3E5F00C
	0x0358A724 CBZ X0, 0x358A778
	0x0358A728 MOV X0, X19
	0x0358A72C MOV X1, X31
	0x0358A730 BL 0x3E5F00C
	0x0358A734 CBZ X0, 0x358A824
	0x0358A738 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+128]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Photon.Voice.Unity.VoiceLogger get_VoiceLogger()

Disassembly:
	0x0358A73C BL 0x3E5DE60
	0x0358A740 CBZ X0, 0x358A824
	0x0358A744 ADRP X21, 0xBAC000
	0x0358A748 ADRP X22, 0xB74000
	0x0358A74C LDR X21, [X21 + 0xA80]
	0x0358A750 LDR X22, [X22 + 0xCD8]
	0x0358A754 MOVZ W1, 0xA

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+128]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: Photon.Voice.Unity.Recorder get_RecorderInUse()

Disassembly:
	0x0358A758 MOV X2, X31
	0x0358A75C BL 0x322BC38

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_RecorderInUse(Photon.Voice.Unity.Recorder value)

Disassembly:
	0x0358A760 LDR X1, [X21]
	0x0358A764 LDR X3, [X22]

ISIL:
	001 Move [X0+144], X1
	002 Return 

Method: Photon.Voice.Unity.Speaker get_SpeakerInUse()

Disassembly:
	0x0358A768 MOV X2, X0
	0x0358A76C MOV X0, X20

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_SpeakerInUse(Photon.Voice.Unity.Speaker value)

Disassembly:
	0x0358A770 MOV X4, X31
	0x0358A774 BL 0x32277C4

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: System.Boolean get_IsSpeaking()

Disassembly:
	0x0358A778 MOV X0, X19
	0x0358A77C MOV X1, X31
	0x0358A780 BL 0x3E5F3A8
	0x0358A784 MOV X20, X0
	0x0358A788 MOV X0, X19
	0x0358A78C MOV X1, X31
	0x0358A790 BL 0x3E5F54C
	0x0358A794 MOV W21, W0
	0x0358A798 MOV X0, X19
	0x0358A79C MOV X1, X31
	0x0358A7A0 BL 0x3E5F54C
	0x0358A7A4 MOV W23, W0
	0x0358A7A8 MOV X0, X19
	0x0358A7AC MOV X1, X31
	0x0358A7B0 BL 0x3E5F588
	0x0358A7B4 MOV X22, X0
	0x0358A7B8 MOV X0, X19
	0x0358A7BC MOV X1, X31
	0x0358A7C0 BL 0x3E5F00C
	0x0358A7C4 CBZ X0, 0x358A824
	0x0358A7C8 ADRP X19, 0xB92000
	0x0358A7CC LDR X19, [X19 + 0xB80]
	0x0358A7D0 MOV X1, X31
	0x0358A7D4 BL 0x3E5DE60
	0x0358A7D8 LDR X8, [X19]
	0x0358A7DC MOV X19, X0
	0x0358A7E0 MOV X0, X8
	0x0358A7E4 BL 0x1C16F10
	0x0358A7E8 CMP W21, 0x3
	0x0358A7EC CSET W2, EQ
	0x0358A7F0 CMP W23, 0x2
	0x0358A7F4 CSET W3, EQ
	0x0358A7F8 MOV X1, X20
	0x0358A7FC MOV X4, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE56000
	006 Move X20, 0xB6A000
	007 Move W8, [X21+3860]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3860], W8
	019 Move X0, [X20]
	020 Move X20, [X19+152]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {43}
	033 Move X0, [X19+152]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Speaker.get_IsPlaying, X0
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Boolean get_IsRecording()

Disassembly:
	0x0358A800 MOV X5, X19
	0x0358A804 MOV X24, X0
	0x0358A808 BL 0x358A828
	0x0358A80C MOV X0, X24
	0x0358A810 LDP X20, X19, [X31 + 0x30]
	0x0358A814 LDP X22, X21, [X31 + 0x20]
	0x0358A818 LDP X24, X23, [X31 + 0x10]
	0x0358A81C LDR X30, [X31], #0x40
	0x0358A820 RET
	0x0358A824 BL 0x1C16F20
	0x0358A828 STR X30, [X31 - 0x50]!
	0x0358A82C STP X26, X25, [X31 + 0x10]
	0x0358A830 STP X24, X23, [X31 + 0x20]
	0x0358A834 STP X22, X21, [X31 + 0x30]
	0x0358A838 STP X20, X19, [X31 + 0x40]
	0x0358A83C ADRP X25, 0xE55000
	0x0358A840 ADRP X26, 0xB69000
	0x0358A844 LDRB W8, [X25 + 0xF26]
	0x0358A848 LDR X26, [X26 + 0x7D0]
	0x0358A84C MOV X19, X5
	0x0358A850 MOV X20, X4
	0x0358A854 MOV W23, W3
	0x0358A858 MOV W24, W2
	0x0358A85C MOV X22, X1
	0x0358A860 MOV X21, X0
	0x0358A864 TBNZ X8, 0x0, 0x358A87C
	0x0358A868 ADRP X0, 0xB69000
	0x0358A86C LDR X0, [X0 + 0x7D0]
	0x0358A870 BL 0x1C16CF4
	0x0358A874 MOVZ W8, 0x1
	0x0358A878 STRB W8, [X25 + 0xF26]
	0x0358A87C LDR X0, [X26]
	0x0358A880 LDR W8, [X0 + 0xE0]
	0x0358A884 CBNZ W8, 0x358A88C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE56000
	006 Move X20, 0xB6A000
	007 Move W8, [X21+3861]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3861], W8
	019 Move X0, [X20]
	020 Move X20, [X19+144]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {43}
	033 Move X0, [X19+144]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Recorder.get_IsCurrentlyTransmitting, X0
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Boolean get_IsLocal()

Disassembly:
	0x0358A888 BL 0x1C16DFC
	0x0358A88C MOV X0, X21
	0x0358A890 MOV X1, X22
	0x0358A894 MOV X2, X31
	0x0358A898 AND W24, W24, 0x1
	0x0358A89C AND W23, W23, 0x1
	0x0358A8A0 BL 0x33B2C70
	0x0358A8A4 STRB W24, [X21 + 0x8C]
	0x0358A8A8 STRB W23, [X21 + 0x8D]
	0x0358A8AC STR X20, [X21 + 0x90]
	0x0358A8B0 STR X19, [X21 + 0xA0]
	0x0358A8B4 LDP X20, X19, [X31 + 0x40]
	0x0358A8B8 LDP X22, X21, [X31 + 0x30]
	0x0358A8BC LDP X24, X23, [X31 + 0x20]
	0x0358A8C0 LDP X26, X25, [X31 + 0x10]
	0x0358A8C4 LDR X30, [X31], #0x50
	0x0358A8C8 RET
	0x0358A8CC STR X30, [X31 - 0x30]!
	0x0358A8D0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {25}
	007 Move X1, X31
	008 Call NetworkRunner.get_Topology, X0
	009 Move X8, [X19+64]
	010 Compare X8, 0
	011 JumpIfEqual {25}
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, X8
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call NetworkObject.get_HasStateAuthority, X0
	018 Return X0
	019 Move X0, X8
	020 Move X1, X31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call NetworkObject.get_HasInputAuthority, X0
	024 Return X0
	025 Call 0x1C17F20

Method: System.Void SetupRecorder()

Disassembly:
	0x0358A8D4 STP X20, X19, [X31 + 0x20]
	0x0358A8D8 ADRP X21, 0xE55000
	0x0358A8DC LDRB W8, [X21 + 0xF20]
	0x0358A8E0 MOV X19, X1
	0x0358A8E4 MOV W20, W0
	0x0358A8E8 TBZ X8, 0x0, 0x358A964
	0x0358A8EC TBZ X20, 0x0, 0x358A9A0
	0x0358A8F0 ADRP X8, 0xBAC000
	0x0358A8F4 LDR X8, [X8 + 0xA88]
	0x0358A8F8 ADRP X22, 0xB69000
	0x0358A8FC ADRP X21, 0xBAC000
	0x0358A900 ADRP X20, 0xBAC000
	0x0358A904 LDR X0, [X8]
	0x0358A908 LDR X22, [X22 + 0x788]
	0x0358A90C LDR X21, [X21 + 0xA90]
	0x0358A910 LDR X20, [X20 + 0xA98]
	0x0358A914 MOV X1, X19
	0x0358A918 MOV X2, X31
	0x0358A91C BL 0x321EFD0
	0x0358A920 LDR X8, [X22]
	0x0358A924 MOV X19, X0
	0x0358A928 LDR W9, [X8 + 0xE0]
	0x0358A92C CBNZ W9, 0x358A938
	0x0358A930 MOV X0, X8
	0x0358A934 BL 0x1C16DFC
	0x0358A938 LDR X3, [X21]
	0x0358A93C LDR X4, [X20]
	0x0358A940 MOV X1, X19
	0x0358A944 LDP X20, X19, [X31 + 0x20]
	0x0358A948 LDP X22, X21, [X31 + 0x10]
	0x0358A94C MOVZ W0, 0x4
	0x0358A950 MOVZ W5, 0x49
	0x0358A954 MOV X2, X31
	0x0358A958 MOV X6, X31
	0x0358A95C LDR X30, [X31], #0x30
	0x0358A960 B 0x35C2014
	0x0358A964 ADRP X0, 0xB69000
	0x0358A968 LDR X0, [X0 + 0x788]
	0x0358A96C BL 0x1C16CF4
	0x0358A970 ADRP X0, 0xBAC000
	0x0358A974 LDR X0, [X0 + 0xA90]
	0x0358A978 BL 0x1C16CF4
	0x0358A97C ADRP X0, 0xBAC000
	0x0358A980 LDR X0, [X0 + 0xA98]
	0x0358A984 BL 0x1C16CF4
	0x0358A988 ADRP X0, 0xBAC000
	0x0358A98C LDR X0, [X0 + 0xA88]
	0x0358A990 BL 0x1C16CF4
	0x0358A994 MOVZ W8, 0x1
	0x0358A998 STRB W8, [X21 + 0xF20]
	0x0358A99C TBNZ X20, 0x0, 0x358A8F0
	0x0358A9A0 LDP X20, X19, [X31 + 0x20]
	0x0358A9A4 LDP X22, X21, [X31 + 0x10]
	0x0358A9A8 LDR X30, [X31], #0x30
	0x0358A9AC RET
	0x0358A9B0 B 0x358A570
	0x0358A9B4 LDR W8, [X0 + 0x10]
	0x0358A9B8 ADD W8, W8, 0x3
	0x0358A9BC CMP W8, 0x5
	0x0358A9C0 B.HI 0x358A9DC
	0x0358A9C4 MOVZ W9, 0x1
	0x0358A9C8 LSLV W8, W9, W8
	0x0358A9CC MOVZ W9, 0x31
	0x0358A9D0 ANDS W31, W8, W9, 0x0
	0x0358A9D4 B.EQ 0x358A9DC
	0x0358A9D8 B 0x358AF54
	0x0358A9DC RET
	0x0358A9E0 SUB X31, X31, 0x50
	0x0358A9E4 STR D8, [X31 + 0x20]
	0x0358A9E8 STR X30, [X31 + 0x28]
	0x0358A9EC STP X22, X21, [X31 + 0x30]
	0x0358A9F0 STP X20, X19, [X31 + 0x40]
	0x0358A9F4 ADRP X20, 0xE55000
	0x0358A9F8 LDRB W8, [X20 + 0xF21]
	0x0358A9FC MOV X19, X0
	0x0358AA00 STR X0, [X31 + 0x18]
	0x0358AA04 TBNZ X8, 0x0, 0x358AA58
	0x0358AA08 ADRP X0, 0xB6B000
	0x0358AA0C LDR X0, [X0 + 0xA60]
	0x0358AA10 BL 0x1C16CF4
	0x0358AA14 ADRP X0, 0xB6C000
	0x0358AA18 LDR X0, [X0 + 0xC30]
	0x0358AA1C BL 0x1C16CF4
	0x0358AA20 ADRP X0, 0xBAC000
	0x0358AA24 LDR X0, [X0 + 0xAA0]
	0x0358AA28 BL 0x1C16CF4
	0x0358AA2C ADRP X0, 0xBAC000
	0x0358AA30 LDR X0, [X0 + 0xAA8]
	0x0358AA34 BL 0x1C16CF4
	0x0358AA38 ADRP X0, 0xBAC000
	0x0358AA3C LDR X0, [X0 + 0xAB0]
	0x0358AA40 BL 0x1C16CF4
	0x0358AA44 ADRP X0, 0xBAC000
	0x0358AA48 LDR X0, [X0 + 0xAB8]
	0x0358AA4C BL 0x1C16CF4
	0x0358AA50 MOVZ W8, 0x1
	0x0358AA54 STRB W8, [X20 + 0xF21]
	0x0358AA58 ADD X8, X31, 0x18
	0x0358AA5C STR X8, [X31 + 0x10]
	0x0358AA60 LDR W8, [X19 + 0x10]
	0x0358AA64 CMP W8, 0x2
	0x0358AA68 B.EQ 0x358AB50
	0x0358AA6C CMP W8, 0x1
	0x0358AA70 B.EQ 0x358AA8C
	0x0358AA74 CBNZ W8, 0x358AD08
	0x0358AA78 LDR X0, [X19 + 0x20]
	0x0358AA7C MOVN W8, 0x0
	0x0358AA80 STR W8, [X19 + 0x10]
	0x0358AA84 STR W31, [X19 + 0x30]
	0x0358AA88 B 0x358AC08
	0x0358AA8C LDR X0, [X19 + 0x38]
	0x0358AA90 MOVN W8, 0x2
	0x0358AA94 STR W8, [X19 + 0x10]
	0x0358AA98 BL 0x358AE80
	0x0358AA9C LDR X8, [X31 + 0x18]
	0x0358AAA0 MOV X19, X0
	0x0358AAA4 LDR X0, [X8 + 0x38]
	0x0358AAA8 LDR X1, [X8 + 0x20]
	0x0358AAAC BL 0x358AEDC
	0x0358AAB0 LDR X9, [X31 + 0x18]
	0x0358AAB4 LDR X8, [X9 + 0x20]
	0x0358AAB8 TBZ X0, 0x0, 0x358AC38
	0x0358AABC CBZ X8, 0x358AD34
	0x0358AAC0 LDR X0, [X9 + 0x38]
	0x0358AAC4 CBZ X0, 0x358AD3C
	0x0358AAC8 LDRB W22, [X8 + 0x58]
	0x0358AACC LDP X20, X21, [X8 + 0x10]
	0x0358AAD0 MOV X1, X31
	0x0358AAD4 BL 0x3E5F588
	0x0358AAD8 ADRP X8, 0xB6B000
	0x0358AADC LDR X8, [X8 + 0xA60]
	0x0358AAE0 STR X0, [X31]
	0x0358AAE4 LDR X8, [X8]
	0x0358AAE8 ADD X1, X31, 0x0
	0x0358AAEC MOV X0, X8
	0x0358AAF0 BL 0x1C16E04
	0x0358AAF4 ADRP X8, 0xBAC000
	0x0358AAF8 LDR X8, [X8 + 0xAA0]
	0x0358AAFC MOV X3, X0
	0x0358AB00 LDR X0, [X8]
	0x0358AB04 MOV X1, X20
	0x0358AB08 MOV X2, X21
	0x0358AB0C MOV X4, X31
	0x0358AB10 BL 0x3227C18
	0x0358AB14 MOV X1, X0
	0x0358AB18 CMP W22, 0x0
	0x0358AB1C CSET W0, NE
	0x0358AB20 MOV W2, W31
	0x0358AB24 BL 0x358A8CC
	0x0358AB28 LDR X8, [X31 + 0x18]
	0x0358AB2C LDR X8, [X8 + 0x28]
	0x0358AB30 CBZ X8, 0x358AD40
	0x0358AB34 LDR X0, [X8 + 0x40]
	0x0358AB38 LDR X9, [X8 + 0x18]
	0x0358AB3C LDR X3, [X8 + 0x28]
	0x0358AB40 MOV X1, X31
	0x0358AB44 MOV X2, X19
	0x0358AB48 BLR X9
	0x0358AB4C B 0x358AD00
	0x0358AB50 LDR W9, [X19 + 0x30]
	0x0358AB54 LDR X8, [X19 + 0x20]
	0x0358AB58 MOVN W10, 0x2
	0x0358AB5C STR W10, [X19 + 0x10]
	0x0358AB60 ADD W9, W9, 0x1
	0x0358AB64 STR W9, [X19 + 0x30]
	0x0358AB68 CBZ X8, 0x358AD28
	0x0358AB6C LDR X20, [X8 + 0x50]
	0x0358AB70 CBZ X20, 0x358ABA4
	0x0358AB74 LDR X0, [X19 + 0x38]
	0x0358AB78 BL 0x358A6B8
	0x0358AB7C MOV X1, X0
	0x0358AB80 LDR X8, [X31 + 0x18]
	0x0358AB84 LDR X0, [X20 + 0x40]
	0x0358AB88 LDR X9, [X20 + 0x18]
	0x0358AB8C LDR X3, [X20 + 0x28]
	0x0358AB90 LDR W2, [X8 + 0x30]
	0x0358AB94 BLR X9
	0x0358AB98 LDR X8, [X31 + 0x18]
	0x0358AB9C LDR X8, [X8 + 0x20]
	0x0358ABA0 CBZ X8, 0x358AD30
	0x0358ABA4 LDRB W19, [X8 + 0x58]
	0x0358ABA8 LDP X1, X3, [X8 + 0x10]
	0x0358ABAC ADRP X8, 0xBAC000
	0x0358ABB0 LDR X8, [X8 + 0xAB8]
	0x0358ABB4 ADRP X9, 0xBAC000
	0x0358ABB8 LDR X9, [X9 + 0xAB0]
	0x0358ABBC LDR X0, [X8]
	0x0358ABC0 LDR X2, [X9]
	0x0358ABC4 MOV X4, X31
	0x0358ABC8 BL 0x32277C4
	0x0358ABCC MOV X1, X0
	0x0358ABD0 CMP W19, 0x0
	0x0358ABD4 CSET W0, NE
	0x0358ABD8 MOV W2, W31
	0x0358ABDC BL 0x358A8CC
	0x0358ABE0 LDR X0, [X31 + 0x18]
	0x0358ABE4 BL 0x358AF54
	0x0358ABE8 LDR X8, [X31 + 0x18]
	0x0358ABEC LDR X0, [X8 + 0x20]
	0x0358ABF0 STR X31, [X8 + 0x38]
	0x0358ABF4 CBZ X0, 0x358AD2C
	0x0358ABF8 LDR W8, [X8 + 0x30]
	0x0358ABFC LDR W9, [X0 + 0x48]
	0x0358AC00 CMP W8, W9
	0x0358AC04 B.GT 0x358AD08
	0x0358AC08 BL 0x358A604
	0x0358AC0C LDR X8, [X31 + 0x18]
	0x0358AC10 MOVN W9, 0x2
	0x0358AC14 LDR X1, [X8 + 0x20]
	0x0358AC18 STR X0, [X8 + 0x38]
	0x0358AC1C STR W9, [X8 + 0x10]
	0x0358AC20 BL 0x358AE14

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE56000
	008 Move X21, 0xBAD000
	009 Move W8, [X20+3862]
	010 Move X21, [X21+2584]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0xB6A000
	017 Move X0, [X0+2504]
	018 Call 0x1C17CF4
	019 Move X0, 0xBAD000
	020 Move X0, [X0+2584]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6F000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6A000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0xBAD000
	029 Move X0, [X0+2592]
	030 Call 0x1C17CF4
	031 Move X0, 0xBAD000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3862], W8
	036 Move X1, [X21]
	037 Move X0, X19
	038 Call 0x21A553C, X0
	039 Compare X0, 0
	040 JumpIfEqual {254}
	041 Move X8, [X0+24]
	042 Move X20, X0
	043 Compare X8, 0
	044 JumpIfEqual {101}
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X19+128]
	047 Compare X9, 0
	048 JumpIfEqual {254}
	049 Move X8, 0xB6A000
	050 Move X8, [X8+2504]
	051 Move X21, [X9+24]
	052 Move X22, [X8]
	053 Move X8, [X22+56]
	054 Compare X8, 0
	055 JumpIfNotEqual {59}
	056 Move X0, X22
	057 Call 0x1C5D6E0
	058 Move X8, [X22+56]
	059 Move X0, [X8+16]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X8, [X22+56]
	071 Move X0, [X8+16]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Compare X21, 0
	079 JumpIfEqual {254}
	080 Move X10, 0xB6F000
	081 Move X11, 0xBAD000
	082 Move X9, [X0+184]
	083 Move X10, [X10+840]
	084 Move X8, [X21]
	085 Move X11, [X11+2592]
	086 Move X22, [X9]
	087 Move X1, [X10]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move X23, [X11]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 1
	099 Move X0, X21
	100 Call 0x1C5D788
	101 Move X20, X31
	102 Move W9, [X10]
	103 Add W9, W9, 1
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X4, [X0+8]
	108 Move W1, 2
	109 Move X0, X21
	110 Move X2, X23
	111 Move X3, X22
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, [X20+24]
	114 Compare W8, 0
	115 JumpIfEqual {255}
	116 Move X20, [X20+32]
	117 Move X22, 0xB6A000
	118 Move X22, [X22+1432]
	119 Move X0, [X22]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X31
	125 Move X1, X20
	126 Move X2, X31
	127 Call Object.op_Equality, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {153}
	132 Move X8, [X19+136]
	133 Compare X8, 0
	134 JumpIfEqual {254}
	135 Move X0, [X22]
	136 Move X21, [X8+128]
	137 Move W9, [X0+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X31
	142 Move X1, X21
	143 Move X2, X31
	144 Call Object.op_Inequality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {153}
	149 Move X8, [X19+136]
	150 Compare X8, 0
	151 JumpIfEqual {254}
	152 Move X20, [X8+128]
	153 Move X0, [X22]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X31
	159 Move X1, X20
	160 Move X2, X31
	161 Call Object.op_Equality, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {221}
	166 Move X9, [X19+128]
	167 Compare X9, 0
	168 JumpIfEqual {254}
	169 Move X8, 0xB6A000
	170 Move X8, [X8+2504]
	171 Move X21, [X9+24]
	172 Move X22, [X8]
	173 Move X8, [X22+56]
	174 Compare X8, 0
	175 JumpIfNotEqual {179}
	176 Move X0, X22
	177 Call 0x1C5D6E0
	178 Move X8, [X22+56]
	179 Move X0, [X8+16]
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X8, [X22+56]
	191 Move X0, [X8+16]
	192 Move W8, [X0+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {198}
	197 Call 0x1C5D684
	198 Compare X21, 0
	199 JumpIfEqual {254}
	200 Move X10, 0xB6F000
	201 Move X11, 0xBAD000
	202 Move X9, [X0+184]
	203 Move X10, [X10+840]
	204 Move X8, [X21]
	205 Move X11, [X11+2600]
	206 Move X22, [X9]
	207 Move X1, [X10]
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Move X23, [X11]
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X21
	220 Call 0x1C5D788
	221 Move X0, X19
	222 Call VoiceNetworkObject.GetUserData, X0
	223 Compare X20, 0
	224 JumpIfEqual {254}
	225 Move X1, X0
	226 Move X0, X20
	227 Move X2, X31
	228 Call Recorder.set_UserData, X0, X1
	229 Move X0, [X19+136]
	230 Compare X0, 0
	231 JumpIfEqual {254}
	232 Move X1, X20
	233 Move X2, X31
	234 Call VoiceConnection.AddRecorder, X0, X1
	235 Move W9, [X10]
	236 Add W9, W9, 1
	237 Add X8, X8, W9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X4, [X0+8]
	241 Move W1, 2
	242 Move X0, X21
	243 Move X2, X23
	244 Move X3, X22
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Move [X19+144], X20
	247 Move X20, [X31+32]
	248 Move X19, [X31+40]
	249 Move X22, [X31+16]
	250 Move X21, [X31+24]
	251 Move X30, [X31+48]
	252 Move X23, [X31+56]
	253 Return 
	254 Call 0x1C17F20
	255 Call 0x1C17F28

Method: System.Void SetupSpeaker()

Disassembly:
	0x0358AC8C B 0x358AD0C
	0x0358AC90 LDR X0, [X9 + 0x38]
	0x0358AC94 BL 0x358A6B8
	0x0358AC98 LDR X8, [X31 + 0x18]
	0x0358AC9C LDR X8, [X8 + 0x20]
	0x0358ACA0 CBZ X8, 0x358AD44
	0x0358ACA4 LDRB W21, [X8 + 0x58]
	0x0358ACA8 LDP X2, X3, [X8 + 0x10]
	0x0358ACAC ADRP X8, 0xBAC000
	0x0358ACB0 LDR X8, [X8 + 0xAA8]
	0x0358ACB4 MOV X20, X0
	0x0358ACB8 LDR X0, [X8]
	0x0358ACBC MOV X1, X20
	0x0358ACC0 MOV X4, X31
	0x0358ACC4 BL 0x3227C18
	0x0358ACC8 MOV X1, X0
	0x0358ACCC CMP W21, 0x0
	0x0358ACD0 CSET W0, NE
	0x0358ACD4 MOV W2, W31
	0x0358ACD8 BL 0x358A8CC
	0x0358ACDC LDR X8, [X31 + 0x18]
	0x0358ACE0 LDR X8, [X8 + 0x28]
	0x0358ACE4 CBZ X8, 0x358AD48
	0x0358ACE8 LDR X0, [X8 + 0x40]
	0x0358ACEC LDR X9, [X8 + 0x18]
	0x0358ACF0 LDR X3, [X8 + 0x28]
	0x0358ACF4 MOV X1, X20
	0x0358ACF8 MOV X2, X19
	0x0358ACFC BLR X9
	0x0358AD00 LDR X0, [X31 + 0x18]
	0x0358AD04 BL 0x358AF54
	0x0358AD08 MOV W8, W31
	0x0358AD0C LDP X20, X19, [X31 + 0x40]
	0x0358AD10 LDP X22, X21, [X31 + 0x30]
	0x0358AD14 LDR X30, [X31 + 0x28]
	0x0358AD18 LDR V8, [X31 + 0x20]
	0x0358AD1C MOV W0, W8
	0x0358AD20 ADD X31, X31, 0x50
	0x0358AD24 RET
	0x0358AD28 BL 0x1C16F20
	0x0358AD2C BL 0x1C16F20
	0x0358AD30 BL 0x1C16F20
	0x0358AD34 BL 0x1C16F20
	0x0358AD38 BL 0x1C16F20
	0x0358AD3C BL 0x1C16F20
	0x0358AD40 BL 0x1C16F20
	0x0358AD44 BL 0x1C16F20
	0x0358AD48 BL 0x1C16F20
	0x0358AD4C B 0x358ADA4
	0x0358AD50 B 0x358ADA4
	0x0358AD54 B 0x358ADA4
	0x0358AD58 B 0x358ADA4
	0x0358AD5C B 0x358ADA4
	0x0358AD60 B 0x358ADA4
	0x0358AD64 B 0x358ADA4
	0x0358AD68 B 0x358ADA4
	0x0358AD6C B 0x358ADA4
	0x0358AD70 B 0x358ADA4
	0x0358AD74 B 0x358ADA4
	0x0358AD78 B 0x358ADA4
	0x0358AD7C B 0x358ADA4
	0x0358AD80 B 0x358ADA4
	0x0358AD84 B 0x358ADA4
	0x0358AD88 B 0x358ADA4
	0x0358AD8C B 0x358ADA4
	0x0358AD90 B 0x358ADA4
	0x0358AD94 B 0x358ADA4
	0x0358AD98 B 0x358ADA4
	0x0358AD9C B 0x358ADA4
	0x0358ADA0 B 0x358ADA4
	0x0358ADA4 CMP W1, 0x1
	0x0358ADA8 B.NE 0x358ADD8
	0x0358ADAC BL 0x3EB1AD0
	0x0358ADB0 LDR X19, [X0]
	0x0358ADB4 STR X19, [X31 + 0x8]
	0x0358ADB8 BL 0x3EB1AE0
	0x0358ADBC CBZ X19, 0x358AD08
	0x0358ADC0 ADD X8, X31, 0x8
	0x0358ADC4 ADD X0, X8, 0x8
	0x0358ADC8 BL 0x1BC0EC4
	0x0358ADCC MOV X0, X19
	0x0358ADD0 BL 0x1C16F18
	0x0358ADD4 CBNZ X19, 0x358ADDC
	0x0358ADD8 BL 0x1D2C690
	0x0358ADDC LDR X0, [X31 + 0x18]
	0x0358ADE0 LDR W8, [X0 + 0x10]
	0x0358ADE4 ADD W8, W8, 0x3
	0x0358ADE8 CMP W8, 0x5
	0x0358ADEC B.HI 0x358AE08
	0x0358ADF0 MOVZ W9, 0x1
	0x0358ADF4 LSLV W8, W9, W8
	0x0358ADF8 MOVZ W9, 0x31
	0x0358ADFC ANDS W31, W8, W9, 0x0
	0x0358AE00 B.EQ 0x358AE08
	0x0358AE04 BL 0x358AF54
	0x0358AE08 MOV X0, X19
	0x0358AE0C BL 0x1C16F18
	0x0358AE10 BL 0x1990590
	0x0358AE14 STR X30, [X31 - 0x30]!
	0x0358AE18 STP X22, X21, [X31 + 0x10]
	0x0358AE1C STP X20, X19, [X31 + 0x20]
	0x0358AE20 ADRP X21, 0xE55000
	0x0358AE24 ADRP X22, 0xBAC000
	0x0358AE28 LDRB W8, [X21 + 0xF4B]
	0x0358AE2C LDR X22, [X22 + 0xAC0]
	0x0358AE30 MOV X19, X1
	0x0358AE34 MOV X20, X0
	0x0358AE38 TBNZ X8, 0x0, 0x358AE50
	0x0358AE3C ADRP X0, 0xBAC000
	0x0358AE40 LDR X0, [X0 + 0xAC0]
	0x0358AE44 BL 0x1C16CF4
	0x0358AE48 MOVZ W8, 0x1
	0x0358AE4C STRB W8, [X21 + 0xF4B]
	0x0358AE50 LDR X0, [X22]
	0x0358AE54 BL 0x1C16F10
	0x0358AE58 MOV X1, X31
	0x0358AE5C MOV X21, X0
	0x0358AE60 BL 0x33BDD8C
	0x0358AE64 STR W31, [X21 + 0x10]
	0x0358AE68 STP X19, X20, [X21 + 0x20]
	0x0358AE6C MOV X0, X21
	0x0358AE70 LDP X20, X19, [X31 + 0x20]
	0x0358AE74 LDP X22, X21, [X31 + 0x10]
	0x0358AE78 LDR X30, [X31], #0x30
	0x0358AE7C RET
	0x0358AE80 STP X30, X21, [X31 - 0x20]!
	0x0358AE84 STP X20, X19, [X31 + 0x10]
	0x0358AE88 ADRP X20, 0xE55000
	0x0358AE8C ADRP X21, 0xBAC000
	0x0358AE90 LDRB W8, [X20 + 0xF4D]
	0x0358AE94 LDR X21, [X21 + 0xAC8]
	0x0358AE98 MOV X19, X0
	0x0358AE9C TBNZ X8, 0x0, 0x358AEB4
	0x0358AEA0 ADRP X0, 0xBAC000
	0x0358AEA4 LDR X0, [X0 + 0xAC8]
	0x0358AEA8 BL 0x1C16CF4
	0x0358AEAC MOVZ W8, 0x1
	0x0358AEB0 STRB W8, [X20 + 0xF4D]
	0x0358AEB4 LDR X0, [X21]
	0x0358AEB8 BL 0x1C16F10
	0x0358AEBC MOV X1, X31
	0x0358AEC0 MOV X20, X0
	0x0358AEC4 BL 0x33BDD8C
	0x0358AEC8 STR X19, [X20 + 0x10]
	0x0358AECC MOV X0, X20
	0x0358AED0 LDP X20, X19, [X31 + 0x10]
	0x0358AED4 LDP X30, X21, [X31], #0x20
	0x0358AED8 RET
	0x0358AEDC STR X30, [X31 - 0x20]!
	0x0358AEE0 STP X20, X19, [X31 + 0x10]
	0x0358AEE4 CBZ X0, 0x358AF50
	0x0358AEE8 MOV X19, X1
	0x0358AEEC MOV X1, X31
	0x0358AEF0 MOV X20, X0
	0x0358AEF4 BL 0x3E5F920
	0x0358AEF8 TBZ X0, 0x0, 0x358AF10
	0x0358AEFC MOV X0, X20
	0x0358AF00 MOV X1, X31
	0x0358AF04 BL 0x3E5F54C
	0x0358AF08 CMP W0, 0x2
	0x0358AF0C B.NE 0x358AF20
	0x0358AF10 MOV W0, W31
	0x0358AF14 LDP X20, X19, [X31 + 0x10]
	0x0358AF18 LDR X30, [X31], #0x20
	0x0358AF1C RET
	0x0358AF20 MOV X0, X20
	0x0358AF24 MOV X1, X31
	0x0358AF28 BL 0x3E5F54C
	0x0358AF2C CMP W0, 0x3
	0x0358AF30 B.NE 0x358AF48
	0x0358AF34 CBZ X19, 0x358AF50
	0x0358AF38 LDRB W8, [X19 + 0x68]
	0x0358AF3C CMP W8, 0x0
	0x0358AF40 CSET W0, NE
	0x0358AF44 B 0x358AF14
	0x0358AF48 MOVZ W0, 0x1
	0x0358AF4C B 0x358AF14
	0x0358AF50 BL 0x1C16F20
	0x0358AF54 STR X30, [X31 - 0x20]!
	0x0358AF58 STP X20, X19, [X31 + 0x10]
	0x0358AF5C ADRP X19, 0xE55000
	0x0358AF60 LDRB W8, [X19 + 0xF22]
	0x0358AF64 MOV X20, X0
	0x0358AF68 TBNZ X8, 0x0, 0x358AF80
	0x0358AF6C ADRP X0, 0xB69000
	0x0358AF70 LDR X0, [X0 + 0xE00]
	0x0358AF74 BL 0x1C16CF4
	0x0358AF78 MOVZ W8, 0x1
	0x0358AF7C STRB W8, [X19 + 0xF22]
	0x0358AF80 LDR X19, [X20 + 0x38]
	0x0358AF84 MOVN W8, 0x0
	0x0358AF88 STR W8, [X20 + 0x10]
	0x0358AF8C CBZ X19, 0x358AFD8
	0x0358AF90 ADRP X10, 0xB69000
	0x0358AF94 LDR X8, [X19]
	0x0358AF98 LDR X10, [X10 + 0xE00]
	0x0358AF9C LDRH W9, [X8 + 0x12E]
	0x0358AFA0 LDR X1, [X10]
	0x0358AFA4 CBZ X9, 0x358AFC8
	0x0358AFA8 LDR X10, [X8 + 0xB0]
	0x0358AFAC ADD X10, X10, 0x8
	0x0358AFB0 LDUR X11, [X10 - 0x8]
	0x0358AFB4 CMP X11, X1
	0x0358AFB8 B.EQ 0x358AFE4
	0x0358AFBC SUBS X9, X9, 0x1
	0x0358AFC0 ADD X10, X10, 0x10
	0x0358AFC4 B.NE 0x358AFB0
	0x0358AFC8 MOV X0, X19
	0x0358AFCC MOV W2, W31
	0x0358AFD0 BL 0x1C5C788
	0x0358AFD4 B 0x358AFF0
	0x0358AFD8 LDP X20, X19, [X31 + 0x10]
	0x0358AFDC LDR X30, [X31], #0x20
	0x0358AFE0 RET
	0x0358AFE4 LDRSW X9, [X10]
	0x0358AFE8 ADD X8, X8, X9, 0x4, LSL
	0x0358AFEC ADD X0, X8, 0x138
	0x0358AFF0 LDP X2, X1, [X0]
	0x0358AFF4 MOV X0, X19
	0x0358AFF8 LDP X20, X19, [X31 + 0x10]
	0x0358AFFC LDR X30, [X31], #0x20
	0x0358B000 BR X2
	0x0358B004 LDR X0, [X0 + 0x18]
	0x0358B008 RET
	0x0358B00C STP X30, X19, [X31 - 0x10]!
	0x0358B010 ADRP X0, 0xB68000
	0x0358B014 LDR X0, [X0 + 0xB40]
	0x0358B018 BL 0x1C16D08
	0x0358B01C BL 0x1C16F10
	0x0358B020 MOV X1, X31
	0x0358B024 MOV X19, X0
	0x0358B028 BL 0x3380310
	0x0358B02C ADRP X0, 0xBAB000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xE56000
	010 Move X21, 0xBAD000
	011 Move W8, [X20+3863]
	012 Move X21, [X21+2608]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xB6A000
	019 Move X0, [X0+2504]
	020 Call 0x1C17CF4
	021 Move X0, 0xBAD000
	022 Move X0, [X0+2608]
	023 Call 0x1C17CF4
	024 Move X0, 0xB6F000
	025 Move X0, [X0+840]
	026 Call 0x1C17CF4
	027 Move X0, 0xB6A000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0xBAD000
	031 Move X0, [X0+2616]
	032 Call 0x1C17CF4
	033 Move X0, 0xBAD000
	034 Move X0, [X0+2624]
	035 Call 0x1C17CF4
	036 Move X0, 0xBAD000
	037 Move X0, [X0+2632]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+3863], W8
	041 Move X2, [X21]
	042 Move W1, 1
	043 Move X0, X19
	044 Call 0x21A55B8, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {274}
	047 Move X25, 0xB6A000
	048 Move X24, 0xB6F000
	049 Move X8, [X0+24]
	050 Move X25, [X25+2504]
	051 Move X24, [X24+840]
	052 Compare X8, 0
	053 JumpIfEqual {109}
	054 Compare W8, 0
	055 JumpIfEqual {275}
	056 Move X20, [X0+32]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, [X19+128]
	059 Compare X9, 0
	060 JumpIfEqual {274}
	061 Move X22, [X25]
	062 Move X21, [X9+24]
	063 Move X8, [X22+56]
	064 Compare X8, 0
	065 JumpIfNotEqual {69}
	066 Move X0, X22
	067 Call 0x1C5D6E0
	068 Move X8, [X22+56]
	069 Move X0, [X8+16]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X8, [X22+56]
	081 Move X0, [X8+16]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Compare X21, 0
	089 JumpIfEqual {274}
	090 Move X10, 0xBAD000
	091 Move X9, [X0+184]
	092 Move X8, [X21]
	093 Move X1, [X24]
	094 Move X10, [X10+2624]
	095 Move X22, [X9]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Move X23, [X10]
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 1
	107 Move X0, X21
	108 Call 0x1C5D788
	109 Move X20, X31
	110 Move W9, [X10]
	111 Add W9, W9, 1
	112 Add X8, X8, W9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X4, [X0+8]
	116 Move W1, 2
	117 Move X0, X21
	118 Move X2, X23
	119 Move X3, X22
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X22, 0xB6A000
	122 Move X22, [X22+1432]
	123 Move X0, [X22]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X31
	129 Move X1, X20
	130 Move X2, X31
	131 Call Object.op_Equality, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {165}
	136 Move X8, [X19+136]
	137 Compare X8, 0
	138 JumpIfEqual {274}
	139 Move X0, [X22]
	140 Move X21, [X8+112]
	141 Move W9, [X0+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X31
	146 Move X1, X21
	147 Move X2, X31
	148 Call Object.op_Inequality, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {165}
	153 Move X20, [X19+136]
	154 Move X0, X19
	155 Move X1, X31
	156 Call Component.get_gameObject, X0
	157 Compare X20, 0
	158 JumpIfEqual {274}
	159 Move X1, X0
	160 Move X0, X20
	161 Move W2, W31
	162 Move X3, X31
	163 Call VoiceConnection.InstantiateSpeakerPrefab, X0, X1, X2
	164 Move X20, X0
	165 Move X0, [X22]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X31
	171 Move X1, X20
	172 Move X2, X31
	173 Call Object.op_Equality, X0, X1
	174 Move X9, [X19+128]
	175 Compare X9, 0
	176 JumpIfEqual {274}
	177 Move X22, [X25]
	178 Move X21, [X9+24]
	179 Move W23, W0
	180 Move X8, [X22+56]
	181 Compare X8, 0
	182 JumpIfNotEqual {186}
	183 Move X0, X22
	184 Call 0x1C5D6E0
	185 Move X8, [X22+56]
	186 Move X0, [X8+16]
	187 Move W8, [X0+309]
	188 Move TEMP, X8
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {193}
	192 Call 0x1C5D684
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X8, [X22+56]
	198 Move X0, [X8+16]
	199 Move W8, [X0+309]
	200 Move TEMP, X8
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {205}
	204 Call 0x1C5D684
	205 Compare X21, 0
	206 JumpIfEqual {274}
	207 Move X8, [X0+184]
	208 Move X1, [X24]
	209 Move X22, [X8]
	210 Move TEMP, X23
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {230}
	214 Move X10, 0xBAD000
	215 Move X8, [X21]
	216 Move X10, [X10+2616]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Move X23, [X10]
	219 Compare X9, 0
	220 JumpIfEqual {227}
	221 Move X10, [X8+176]
	222 Add X10, X10, 8
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Subtract X9, X9, 1
	226 Add X10, X10, 16
	227 Move W2, 1
	228 Move X0, X21
	229 Call 0x1C5D788
	230 Move X10, 0xBAD000
	231 Move X8, [X21]
	232 Move X10, [X10+2632]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Move X23, [X10]
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move W2, 1
	244 Move X0, X21
	245 Call 0x1C5D788
	246 Move W9, [X10]
	247 Add W9, W9, 1
	248 Add X8, X8, W9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X4, [X0+8]
	252 Move W1, 1
	253 Move W9, [X10]
	254 Add W9, W9, 1
	255 Add X8, X8, W9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X4, [X0+8]
	259 Move W1, 3
	260 Move X0, X21
	261 Move X2, X23
	262 Move X3, X22
	263 NotImplemented "Instruction BLR not yet implemented."
	264 Move [X19+152], X20
	265 Move X20, [X31+48]
	266 Move X19, [X31+56]
	267 Move X22, [X31+32]
	268 Move X21, [X31+40]
	269 Move X24, [X31+16]
	270 Move X23, [X31+24]
	271 Move X30, [X31+64]
	272 Move X25, [X31+72]
	273 Return 
	274 Call 0x1C17F20
	275 Call 0x1C17F28

Method: System.Object GetUserData()

Disassembly:
	0x0358AC24 LDR X9, [X31 + 0x18]
	0x0358AC28 MOVZ W8, 0x1
	0x0358AC2C STR X0, [X9 + 0x18]
	0x0358AC30 STR W8, [X9 + 0x10]
	0x0358AC34 B 0x358AD0C
	0x0358AC38 CBZ X8, 0x358AD38
	0x0358AC3C LDRB W10, [X8 + 0xB0]
	0x0358AC40 CBNZ W10, 0x358AC90
	0x0358AC44 LDR W10, [X9 + 0x30]
	0x0358AC48 LDR W11, [X8 + 0x48]
	0x0358AC4C CMP W10, W11
	0x0358AC50 B.GE 0x358AC90
	0x0358AC54 LDR V8, [X8 + 0x4C]
	0x0358AC58 ADRP X8, 0xB6C000
	0x0358AC5C LDR X8, [X8 + 0xC30]
	0x0358AC60 LDR X0, [X8]
	0x0358AC64 BL 0x1C16F10
	0x0358AC68 MOV X19, X0
	0x0358AC6C MOV V0.16B, V8.16B
	0x0358AC70 MOV X1, X31
	0x0358AC74 BL 0x3C3A634
	0x0358AC78 LDR X8, [X31 + 0x18]
	0x0358AC7C MOVZ W9, 0x2
	0x0358AC80 STR X19, [X8 + 0x18]
	0x0358AC84 STR W9, [X8 + 0x10]
	0x0358AC88 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE56000
	005 Move W8, [X20+3864]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB6D000
	012 Move X0, [X0+920]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3864], W8
	016 Move X8, [X19+64]
	017 Compare X8, 0
	018 JumpIfEqual {33}
	019 Move X9, [X8+32]
	020 Move X8, 0xB6D000
	021 Move X8, [X8+920]
	022 Compare X9, 0
	023 JumpIfEqual {25}
	024 Move W9, [X9]
	025 Move X0, [X8]
	026 Add X1, X31, 8
	027 Move [X31+8], W9
	028 Call 0x1C17E04
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Void Spawned()

Disassembly:
	0x0358B030 LDR X0, [X0 + 0xAD0]
	0x0358B034 BL 0x1C16D08
	0x0358B038 MOV X1, X0
	0x0358B03C MOV X0, X19
	0x0358B040 BL 0x1C16DEC
	0x0358B044 LDR X0, [X0 + 0x18]
	0x0358B048 RET
	0x0358B04C LDRB W0, [X0 + 0x8C]
	0x0358B050 RET
	0x0358B054 AND W8, W1, 0x1
	0x0358B058 STRB W8, [X0 + 0x8C]
	0x0358B05C RET
	0x0358B060 LDRB W0, [X0 + 0x8D]
	0x0358B064 RET
	0x0358B068 AND W8, W1, 0x1
	0x0358B06C STRB W8, [X0 + 0x8D]
	0x0358B070 RET
	0x0358B074 LDR X0, [X0 + 0x90]
	0x0358B078 RET
	0x0358B07C STR X1, [X0 + 0x90]
	0x0358B080 RET
	0x0358B084 LDR X0, [X0 + 0x98]
	0x0358B088 RET
	0x0358B08C STR X1, [X0 + 0x98]
	0x0358B090 RET
	0x0358B094 LDR X0, [X0 + 0xA0]
	0x0358B098 RET
	0x0358B09C STR X1, [X0 + 0xA0]
	0x0358B0A0 RET
	0x0358B0A4 STP X30, X21, [X31 - 0x20]!
	0x0358B0A8 STP X20, X19, [X31 + 0x10]
	0x0358B0AC ADRP X20, 0xE54000
	0x0358B0B0 ADRP X21, 0xB68000
	0x0358B0B4 LDRB W8, [X20 + 0xF23]
	0x0358B0B8 LDR X21, [X21 + 0x7D0]
	0x0358B0BC MOV X19, X0
	0x0358B0C0 TBNZ X8, 0x0, 0x358B0D8
	0x0358B0C4 ADRP X0, 0xB68000
	0x0358B0C8 LDR X0, [X0 + 0x7D0]
	0x0358B0CC BL 0x1C16CF4
	0x0358B0D0 MOVZ W8, 0x1
	0x0358B0D4 STRB W8, [X20 + 0xF23]
	0x0358B0D8 LDR X0, [X21]
	0x0358B0DC LDR W8, [X0 + 0xE0]
	0x0358B0E0 CBNZ W8, 0x358B0E8
	0x0358B0E4 BL 0x1C16DFC
	0x0358B0E8 MOV X0, X19
	0x0358B0EC LDP X20, X19, [X31 + 0x10]
	0x0358B0F0 MOV X1, X31
	0x0358B0F4 LDP X30, X21, [X31], #0x20
	0x0358B0F8 B 0x33B2C54
	0x0358B0FC STR X30, [X31 - 0x30]!
	0x0358B100 STP X22, X21, [X31 + 0x10]
	0x0358B104 STP X20, X19, [X31 + 0x20]
	0x0358B108 ADRP X21, 0xE54000
	0x0358B10C ADRP X22, 0xB68000
	0x0358B110 LDRB W8, [X21 + 0xF24]
	0x0358B114 LDR X22, [X22 + 0x7D0]
	0x0358B118 MOV X19, X1
	0x0358B11C MOV X20, X0
	0x0358B120 TBNZ X8, 0x0, 0x358B138
	0x0358B124 ADRP X0, 0xB68000
	0x0358B128 LDR X0, [X0 + 0x7D0]
	0x0358B12C BL 0x1C16CF4
	0x0358B130 MOVZ W8, 0x1
	0x0358B134 STRB W8, [X21 + 0xF24]
	0x0358B138 LDR X0, [X22]
	0x0358B13C LDR W8, [X0 + 0xE0]
	0x0358B140 CBNZ W8, 0x358B148
	0x0358B144 BL 0x1C16DFC
	0x0358B148 MOV X0, X20
	0x0358B14C MOV X1, X19
	0x0358B150 LDP X20, X19, [X31 + 0x20]
	0x0358B154 LDP X22, X21, [X31 + 0x10]
	0x0358B158 MOV X2, X31
	0x0358B15C LDR X30, [X31], #0x30
	0x0358B160 B 0x33B2C70
	0x0358B164 STP X30, X23, [X31 - 0x30]!
	0x0358B168 STP X22, X21, [X31 + 0x10]
	0x0358B16C STP X20, X19, [X31 + 0x20]
	0x0358B170 ADRP X23, 0xE54000
	0x0358B174 ADRP X22, 0xB68000
	0x0358B178 LDRB W8, [X23 + 0xF25]
	0x0358B17C LDR X22, [X22 + 0x7D0]
	0x0358B180 MOV X20, X2
	0x0358B184 MOV X21, X1
	0x0358B188 MOV X19, X0
	0x0358B18C TBNZ X8, 0x0, 0x358B1A4
	0x0358B190 ADRP X0, 0xB68000
	0x0358B194 LDR X0, [X0 + 0x7D0]
	0x0358B198 BL 0x1C16CF4
	0x0358B19C MOVZ W8, 0x1
	0x0358B1A0 STRB W8, [X23 + 0xF25]
	0x0358B1A4 MOV X0, X21
	0x0358B1A8 MOV X1, X20
	0x0358B1AC MOV X2, X31
	0x0358B1B0 BL 0x3227C5C
	0x0358B1B4 LDR X8, [X22]
	0x0358B1B8 MOV X20, X0
	0x0358B1BC LDR W9, [X8 + 0xE0]
	0x0358B1C0 CBNZ W9, 0x358B1CC
	0x0358B1C4 MOV X0, X8
	0x0358B1C8 BL 0x1C16DFC
	0x0358B1CC MOV X0, X19
	0x0358B1D0 MOV X1, X20
	0x0358B1D4 LDP X20, X19, [X31 + 0x20]
	0x0358B1D8 LDP X22, X21, [X31 + 0x10]
	0x0358B1DC MOV X2, X31
	0x0358B1E0 LDP X30, X23, [X31], #0x30
	0x0358B1E4 B 0x33B2C70
	0x0358B1E8 LDR X0, [X0 + 0x10]
	0x0358B1EC RET
	0x0358B1F0 STR X1, [X0 + 0x10]
	0x0358B1F4 RET
	0x0358B1F8 LDR X0, [X0 + 0x18]
	0x0358B1FC RET
	0x0358B200 STR X1, [X0 + 0x18]
	0x0358B204 RET
	0x0358B208 LDR X0, [X0 + 0x20]
	0x0358B20C RET
	0x0358B210 STR X1, [X0 + 0x20]
	0x0358B214 RET
	0x0358B218 LDR X0, [X0 + 0x28]
	0x0358B21C RET
	0x0358B220 STR X1, [X0 + 0x28]
	0x0358B224 RET
	0x0358B228 LDR X0, [X0 + 0x30]
	0x0358B22C RET
	0x0358B230 STR X1, [X0 + 0x30]
	0x0358B234 RET
	0x0358B238 LDR X0, [X0 + 0x38]
	0x0358B23C RET
	0x0358B240 STR X1, [X0 + 0x38]
	0x0358B244 RET
	0x0358B248 LDR X0, [X0 + 0x40]
	0x0358B24C RET
	0x0358B250 STR X1, [X0 + 0x40]
	0x0358B254 RET
	0x0358B258 LDR W0, [X0 + 0x48]
	0x0358B25C RET
	0x0358B260 STR W1, [X0 + 0x48]
	0x0358B264 RET
	0x0358B268 LDR V0, [X0 + 0x4C]
	0x0358B26C RET
	0x0358B270 STR S0, [X0 + 0x4C]
	0x0358B274 RET
	0x0358B278 LDR X0, [X0 + 0x50]
	0x0358B27C RET
	0x0358B280 STR X1, [X0 + 0x50]
	0x0358B284 RET
	0x0358B288 LDRB W0, [X0 + 0x58]
	0x0358B28C RET
	0x0358B290 AND W8, W1, 0x1
	0x0358B294 STRB W8, [X0 + 0x58]
	0x0358B298 RET
	0x0358B29C LDURH W0, [X0 + 0x59]
	0x0358B2A0 RET
	0x0358B2A4 STURH W1, [X0 + 0x59]
	0x0358B2A8 RET
	0x0358B2AC LDURH W0, [X0 + 0x5B]
	0x0358B2B0 RET
	0x0358B2B4 STURH W1, [X0 + 0x5B]
	0x0358B2B8 RET
	0x0358B2BC LDR X0, [X0 + 0x60]
	0x0358B2C0 RET
	0x0358B2C4 STR X1, [X0 + 0x60]
	0x0358B2C8 RET
	0x0358B2CC LDRB W0, [X0 + 0x68]
	0x0358B2D0 RET
	0x0358B2D4 AND W8, W1, 0x1
	0x0358B2D8 STRB W8, [X0 + 0x68]
	0x0358B2DC RET
	0x0358B2E0 LDR X0, [X0 + 0x70]
	0x0358B2E4 RET
	0x0358B2E8 STR X1, [X0 + 0x70]
	0x0358B2EC RET
	0x0358B2F0 LDR X0, [X0 + 0x78]
	0x0358B2F4 RET
	0x0358B2F8 STR X1, [X0 + 0x78]
	0x0358B2FC RET
	0x0358B300 LDR X0, [X0 + 0x80]
	0x0358B304 RET
	0x0358B308 STR X1, [X0 + 0x80]
	0x0358B30C RET
	0x0358B310 LDR X0, [X0 + 0x88]
	0x0358B314 RET
	0x0358B318 STR X1, [X0 + 0x88]
	0x0358B31C RET
	0x0358B320 LDR X0, [X0 + 0x90]
	0x0358B324 RET
	0x0358B328 STR X1, [X0 + 0x90]
	0x0358B32C RET
	0x0358B330 LDR X0, [X0 + 0x98]
	0x0358B334 RET
	0x0358B338 STR X1, [X0 + 0x98]
	0x0358B33C RET
	0x0358B340 STR X30, [X31 - 0x20]!
	0x0358B344 STP X20, X19, [X31 + 0x10]
	0x0358B348 ADRP X20, 0xE54000
	0x0358B34C LDRB W8, [X20 + 0xF27]
	0x0358B350 MOV X19, X0
	0x0358B354 TBNZ X8, 0x0, 0x358B378
	0x0358B358 ADRP X0, 0xB69000
	0x0358B35C LDR X0, [X0 + 0x6C0]
	0x0358B360 BL 0x1C16CF4
	0x0358B364 ADRP X0, 0xB69000
	0x0358B368 LDR X0, [X0 + 0x6D0]
	0x0358B36C BL 0x1C16CF4
	0x0358B370 MOVZ W8, 0x1
	0x0358B374 STRB W8, [X20 + 0xF27]
	0x0358B378 LDR X20, [X19 + 0xA0]
	0x0358B37C CBNZ X20, 0x358B3A8
	0x0358B380 ADRP X8, 0xB69000
	0x0358B384 LDR X8, [X8 + 0x6D0]
	0x0358B388 LDR X0, [X8]
	0x0358B38C BL 0x1C16F10
	0x0358B390 ADRP X8, 0xB69000
	0x0358B394 LDR X8, [X8 + 0x6C0]
	0x0358B398 MOV X20, X0
	0x0358B39C LDR X1, [X8]
	0x0358B3A0 BL 0x2AA4804
	0x0358B3A4 STR X20, [X19 + 0xA0]
	0x0358B3A8 MOV X0, X20
	0x0358B3AC LDP X20, X19, [X31 + 0x10]
	0x0358B3B0 LDR X30, [X31], #0x20
	0x0358B3B4 RET
	0x0358B3B8 STR X1, [X0 + 0xA0]
	0x0358B3BC RET
	0x0358B3C0 LDR X0, [X0 + 0xA8]
	0x0358B3C4 RET
	0x0358B3C8 STR X1, [X0 + 0xA8]
	0x0358B3CC RET
	0x0358B3D0 LDR X0, [X0 + 0xA8]
	0x0358B3D4 CBZ X0, 0x358B3E0
	0x0358B3D8 MOV X1, X31
	0x0358B3DC B 0x3E5F87C
	0x0358B3E0 FMOV S0, W31
	0x0358B3E4 RET
	0x0358B3E8 LDR X0, [X0 + 0xA8]
	0x0358B3EC CBZ X0, 0x358B3F8
	0x0358B3F0 MOV X1, X31
	0x0358B3F4 B 0x3E5FA48
	0x0358B3F8 RET
	0x0358B3FC LDR X0, [X0 + 0xA8]
	0x0358B400 CBZ X0, 0x358B40C
	0x0358B404 MOV X1, X31
	0x0358B408 B 0x3E5F9A4
	0x0358B40C FMOV S0, W31
	0x0358B410 RET
	0x0358B414 LDR X0, [X0 + 0xA8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE55000
	008 Move W8, [X20+3865]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0xB69000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xBAC000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0xB6E000
	021 Move X0, [X0+840]
	022 Call 0x1C17CF4
	023 Move X0, 0xB69000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0xBAC000
	027 Move X0, [X0+2640]
	028 Call 0x1C17CF4
	029 Move X0, 0xBAC000
	030 Move X0, [X0+2648]
	031 Call 0x1C17CF4
	032 Move X0, 0xBAC000
	033 Move X0, [X0+2656]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3865], W8
	037 Move X0, [X19+128]
	038 Compare X0, 0
	039 JumpIfEqual {305}
	040 Move X1, X19
	041 Move X2, X31
	042 Call VoiceComponentImpl.Awake, X0, X1
	043 Move X0, [X19+56]
	044 Compare X0, 0
	045 JumpIfEqual {305}
	046 Move X8, 0xBAC000
	047 Move X8, [X8+1728]
	048 Move X23, 0xB69000
	049 Move X1, [X8]
	050 Move X23, [X23+1432]
	051 Call 0x21A4894, X0
	052 Move [X19+136], X0
	053 Move X0, X19
	054 Call VoiceNetworkObject.get_IsLocal, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {199}
	059 Move X0, X19
	060 Call VoiceNetworkObject.SetupRecorder, X0
	061 Move X0, [X23]
	062 Move X20, [X19+144]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {127}
	075 Move X9, [X19+128]
	076 Compare X9, 0
	077 JumpIfEqual {305}
	078 Move X8, 0xB69000
	079 Move X8, [X8+2504]
	080 Move X20, [X9+24]
	081 Move X21, [X8]
	082 Move X8, [X21+56]
	083 Compare X8, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X21
	086 Call 0x1C5D6E0
	087 Move X8, [X21+56]
	088 Move X0, [X8+16]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, [X21+56]
	100 Move X0, [X8+16]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Compare X20, 0
	108 JumpIfEqual {305}
	109 Move X10, 0xB6E000
	110 Move X11, 0xBAC000
	111 Move X9, [X0+184]
	112 Move X10, [X10+840]
	113 Move X8, [X20]
	114 Move X11, [X11+2656]
	115 Move X21, [X9]
	116 Move X1, [X10]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Move X22, [X11]
	119 Compare X9, 0
	120 JumpIfEqual {185}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move X8, [X19+144]
	128 Compare X8, 0
	129 JumpIfEqual {305}
	130 Move W8, [X8+107]
	131 Compare W8, 0
	132 JumpIfNotEqual {199}
	133 Move X9, [X19+128]
	134 Compare X9, 0
	135 JumpIfEqual {305}
	136 Move X8, 0xB69000
	137 Move X8, [X8+2504]
	138 Move X20, [X9+24]
	139 Move X21, [X8]
	140 Move X8, [X21+56]
	141 Compare X8, 0
	142 JumpIfNotEqual {146}
	143 Move X0, X21
	144 Call 0x1C5D6E0
	145 Move X8, [X21+56]
	146 Move X0, [X8+16]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X8, [X21+56]
	158 Move X0, [X8+16]
	159 Move W8, [X0+309]
	160 Move TEMP, X8
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {165}
	164 Call 0x1C5D684
	165 Compare X20, 0
	166 JumpIfEqual {305}
	167 Move X10, 0xB6E000
	168 Move X11, 0xBAC000
	169 Move X9, [X0+184]
	170 Move X10, [X10+840]
	171 Move X8, [X20]
	172 Move X11, [X11+2648]
	173 Move X21, [X9]
	174 Move X1, [X10]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Move X22, [X11]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move W2, 1
	186 Move X0, X20
	187 Call 0x1C5D788
	188 Move W9, [X10]
	189 Add W9, W9, 1
	190 Add X8, X8, W9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X4, [X0+8]
	194 Move W1, 2
	195 Move X0, X20
	196 Move X2, X22
	197 Move X3, X21
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move X0, X19
	200 Call VoiceNetworkObject.SetupSpeaker, X0
	201 Move X0, [X23]
	202 Move X20, [X19+152]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X20
	208 Move X1, X31
	209 Move X2, X31
	210 Call Object.op_Equality, X0, X1
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {270}
	215 Move X9, [X19+128]
	216 Compare X9, 0
	217 JumpIfEqual {305}
	218 Move X8, 0xB69000
	219 Move X8, [X8+2504]
	220 Move X19, [X9+24]
	221 Move X20, [X8]
	222 Move X8, [X20+56]
	223 Compare X8, 0
	224 JumpIfNotEqual {228}
	225 Move X0, X20
	226 Call 0x1C5D6E0
	227 Move X8, [X20+56]
	228 Move X0, [X8+16]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X8, [X20+56]
	240 Move X0, [X8+16]
	241 Move W8, [X0+309]
	242 Move TEMP, X8
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {247}
	246 Call 0x1C5D684
	247 Compare X19, 0
	248 JumpIfEqual {305}
	249 Move X10, 0xB6E000
	250 Move X11, 0xBAC000
	251 Move X9, [X0+184]
	252 Move X10, [X10+840]
	253 Move X8, [X19]
	254 Move X11, [X11+2640]
	255 Move X20, [X9]
	256 Move X1, [X10]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Move X21, [X11]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move W2, 1
	268 Move X0, X19
	269 Call 0x1C5D788
	270 Move X20, [X19+136]
	271 Move X21, [X19+152]
	272 Move X0, X19
	273 Call VoiceNetworkObject.GetUserData, X0
	274 Compare X20, 0
	275 JumpIfEqual {305}
	276 Move X2, X0
	277 Move X0, X20
	278 Move X1, X21
	279 Move X20, [X31+32]
	280 Move X19, [X31+40]
	281 Move X22, [X31+16]
	282 Move X21, [X31+24]
	283 Move X3, X31
	284 Move X30, [X31+48]
	285 Move X23, [X31+56]
	286 Call VoiceConnection.AddSpeaker, X0, X1, X2
	287 Return 
	288 Move W9, [X10]
	289 Add W9, W9, 1
	290 Add X8, X8, W9
	291 Add X0, X8, 312
	292 Move X5, [X0]
	293 Move X4, [X0+8]
	294 Move X0, X19
	295 Move X2, X21
	296 Move X3, X20
	297 Move X20, [X31+32]
	298 Move X19, [X31+40]
	299 Move X22, [X31+16]
	300 Move X21, [X31+24]
	301 Move W1, 2
	302 Move X30, [X31+48]
	303 Move X23, [X31+56]
	304 CallNoReturn X5
	305 Call 0x1C17F20

Method: System.Void Despawned(Fusion.NetworkRunner runner, System.Boolean hasState)

Disassembly:
	0x0358B418 CBZ X0, 0x358B424
	0x0358B41C MOV X1, X31
	0x0358B420 B 0x3E5FA84
	0x0358B424 RET
	0x0358B428 SUB X31, X31, 0x30
	0x0358B42C STP X30, X21, [X31 + 0x10]
	0x0358B430 STP X20, X19, [X31 + 0x20]
	0x0358B434 ADRP X21, 0xE54000
	0x0358B438 LDRB W8, [X21 + 0xF28]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+136]
	004 Compare X0, 0
	005 JumpIfEqual {11}
	006 Move X1, [X8+144]
	007 Move X2, X31
	008 Move X30, [X31+16]
	009 Call VoiceConnection.RemoveRecorder, X0, X1
	010 Return 
	011 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0358B43C MOV X19, X1
	0x0358B440 MOV X20, X0
	0x0358B444 TBNZ X8, 0x0, 0x358B45C
	0x0358B448 ADRP X0, 0xB9D000
	0x0358B44C LDR X0, [X0 + 0x4F8]
	0x0358B450 BL 0x1C16CF4
	0x0358B454 MOVZ W8, 0x1
	0x0358B458 STRB W8, [X21 + 0xF28]
	0x0358B45C STR X31, [X31 + 0x8]
	0x0358B460 LDR X0, [X20 + 0xA8]
	0x0358B464 CBZ X0, 0x358B478
	0x0358B468 MOV X1, X19
	0x0358B46C MOV X2, X31
	0x0358B470 BL 0x3E5FC8C
	0x0358B474 B 0x358B4A0
	0x0358B478 MOV X0, X20
	0x0358B47C BL 0x358B340
	0x0358B480 CBZ X0, 0x358B4B0
	0x0358B484 ADRP X8, 0xB9D000
	0x0358B488 LDR X8, [X8 + 0x4F8]
	0x0358B48C ADD X2, X31, 0x8
	0x0358B490 MOV X1, X19
	0x0358B494 LDR X3, [X8]
	0x0358B498 BL 0x2AA6B2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE55000
	006 Move X21, 0xBAC000
	007 Move W8, [X20+3866]
	008 Move X21, [X21+224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBAC000
	015 Move X0, [X0+224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3866], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call VoiceComponentImpl..ctor, X0
	024 Move [X19+128], X20
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call NetworkBehaviour..ctor, X0
	032 Return 

Method: System.Void CopyBackingFieldsToState(System.Boolean param_0)

Disassembly:
	0x0358B49C LDR X0, [X31 + 0x8]

ISIL:
	001 Return 

Method: System.Void CopyStateToBackingFields()

Disassembly:
	0x0358B4A0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Return 

