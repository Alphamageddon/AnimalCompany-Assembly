Type: Unity.Properties.TypeUtility/TypeConstructor`1

Method: System.Boolean Unity.Properties.TypeUtility.ITypeConstructor.get_CanBeInstantiated()

Disassembly:
	0x02711454 LDUR X11, [X10 - 0x8]
	0x02711458 CMP X11, X1
	0x0271145C B.EQ 0x27114C8
	0x02711460 SUBS X9, X9, 0x1
	0x02711464 ADD X10, X10, 0x10
	0x02711468 B.NE 0x2711454
	0x0271146C MOV X0, X21
	0x02711470 MOV W2, W31
	0x02711474 BL 0x1C5C788
	0x02711478 B 0x27114D4
	0x0271147C LDR X8, [X21 + 0x18]
	0x02711480 CBZ X8, 0x27114E4
	0x02711484 LDR X9, [X8 + 0x18]
	0x02711488 LDR X0, [X8 + 0x40]
	0x0271148C LDR X1, [X8 + 0x28]
	0x02711490 ADD X8, X31, 0x8
	0x02711494 BLR X9
	0x02711498 LDUR V0, [X31 + 0x8]
	0x0271149C LDR X8, [X31 + 0x18]
	0x027114A0 LDP X22, X21, [X31 + 0x50]
	0x027114A4 LDP X30, X23, [X31 + 0x40]
	0x027114A8 STR V0, [X31 + 0x2]
	0x027114AC LDR V0, [X31 + 0x2]
	0x027114B0 STR X8, [X20 + 0x10]
	0x027114B4 STR X8, [X31 + 0x30]
	0x027114B8 STR V0, [X20]
	0x027114BC LDP X20, X19, [X31 + 0x60]
	0x027114C0 ADD X31, X31, 0x70
	0x027114C4 RET
	0x027114C8 LDRSW X9, [X10]
	0x027114CC ADD X8, X8, X9, 0x4, LSL
	0x027114D0 ADD X0, X8, 0x138
	0x027114D4 LDP X9, X1, [X0]
	0x027114D8 ADD X8, X31, 0x8
	0x027114DC MOV X0, X21
	0x027114E0 B 0x2711494
	0x027114E4 LDR X8, [X19 + 0x20]
	0x027114E8 ADRP X0, 0x19E2000
	0x027114EC LDR X8, [X8 + 0xC0]
	0x027114F0 LDR X20, [X8 + 0x30]
	0x027114F4 LDR X0, [X0 + 0x6C0]
	0x027114F8 BL 0x1C16D08
	0x027114FC BL 0x19903D0
	0x02711500 MOV X0, X20
	0x02711504 MOV X1, X31
	0x02711508 BL 0x338C698
	0x0271150C MOV X20, X0
	0x02711510 BL 0x19903C0
	0x02711514 LDR X8, [X20]
	0x02711518 MOV X0, X20
	0x0271151C LDP X9, X1, [X8 + 0x1A8]
	0x02711520 BLR X9
	0x02711524 MOV X20, X0
	0x02711528 ADRP X0, 0x1A0C000
	0x0271152C LDR X0, [X0 + 0x980]
	0x02711530 BL 0x1C16D08
	0x02711534 MOV X21, X0
	0x02711538 ADRP X0, 0x1A0C000
	0x0271153C LDR X0, [X0 + 0x988]
	0x02711540 BL 0x1C16D08
	0x02711544 MOV X2, X0
	0x02711548 MOV X0, X21
	0x0271154C MOV X1, X20
	0x02711550 MOV X3, X31
	0x02711554 BL 0x32274B8
	0x02711558 MOV X20, X0
	0x0271155C ADRP X0, 0x19E2000
	0x02711560 LDR X0, [X0 + 0x5B0]
	0x02711564 BL 0x1C16D08
	0x02711568 BL 0x1C16F10
	0x0271156C MOV X1, X20
	0x02711570 MOV X2, X31
	0x02711574 MOV X21, X0
	0x02711578 BL 0x337DF1C
	0x0271157C MOV X0, X21
	0x02711580 MOV X1, X19
	0x02711584 BL 0x1C16DEC
	0x02711588 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1CCA000
	006 Move W8, [X20+1520]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x1A0D000
	013 Move X0, [X0+2408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1520], W8
	017 Move X8, [X19+16]
	018 Compare X8, 0
	019 JumpIfEqual {21}
	020 Move W0, 1
	021 Move X20, [X19+32]
	022 Compare X20, 0
	023 JumpIfEqual {74}
	024 Move X21, 0x1A0D000
	025 Move X8, [X20]
	026 Move X21, [X21+2408]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X21]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move X0, X20
	038 Move W2, W31
	039 Call 0x1C5D788
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 Add X8, X8, X9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W0, W31
	049 Move X20, [X19+32]
	050 Compare X20, 0
	051 JumpIfEqual {82}
	052 Move X8, [X20]
	053 Move X1, [X21]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X20
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X19+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0271158C SUB X31, X31, 0x60
	0x02711590 STR X30, [X31 + 0x40]
	0x02711594 STP X20, X19, [X31 + 0x50]
	0x02711598 CBZ X0, 0x2711658
	0x0271159C LDR X8, [X1 + 0x20]
	0x027115A0 MOV X19, X1
	0x027115A4 MOV X20, X0
	0x027115A8 LDR X8, [X8 + 0xC0]
	0x027115AC LDR X1, [X8 + 0x78]
	0x027115B0 LDRB W8, [X1 + 0x135]
	0x027115B4 TBNZ X8, 0x0, 0x27115C4
	0x027115B8 MOV X0, X1
	0x027115BC BL 0x1C5C684
	0x027115C0 MOV X1, X0
	0x027115C4 LDR X8, [X20]
	0x027115C8 LDRH W9, [X8 + 0x12E]
	0x027115CC CBZ X9, 0x27115F0
	0x027115D0 LDR X10, [X8 + 0xB0]
	0x027115D4 ADD X10, X10, 0x8
	0x027115D8 LDUR X11, [X10 - 0x8]
	0x027115DC CMP X11, X1
	0x027115E0 B.EQ 0x2711600
	0x027115E4 SUBS X9, X9, 0x1
	0x027115E8 ADD X10, X10, 0x10
	0x027115EC B.NE 0x27115D8
	0x027115F0 MOV X0, X20
	0x027115F4 MOV W2, W31
	0x027115F8 BL 0x1C5C788
	0x027115FC B 0x271160C
	0x02711600 LDRSW X9, [X10]
	0x02711604 ADD X8, X8, X9, 0x4, LSL
	0x02711608 ADD X0, X8, 0x138
	0x0271160C LDP X9, X1, [X0]
	0x02711610 ADD X8, X31, 0x0
	0x02711614 MOV X0, X20
	0x02711618 BLR X9
	0x0271161C LDR X8, [X31 + 0x10]
	0x02711620 LDR V0, [X31]
	0x02711624 ADD X1, X31, 0x0
	0x02711628 STR X8, [X31 + 0x30]
	0x0271162C STR V0, [X31 + 0x2]
	0x02711630 STR V0, [X31]
	0x02711634 STR X8, [X31 + 0x10]
	0x02711638 LDR X8, [X19 + 0x20]
	0x0271163C LDR X8, [X8 + 0xC0]
	0x02711640 LDR X0, [X8 + 0x58]
	0x02711644 BL 0x1C16E04
	0x02711648 LDP X20, X19, [X31 + 0x50]
	0x0271164C LDR X30, [X31 + 0x40]
	0x02711650 ADD X31, X31, 0x60
	0x02711654 RET
	0x02711658 BL 0x1C16F20
	0x0271165C STP X30, X21, [X31 - 0x20]!
	0x02711660 STP X20, X19, [X31 + 0x10]
	0x02711664 ADRP X20, 0x1CC9000
	0x02711668 LDRB W8, [X20 + 0x5FA]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1CCA000
	007 Move X21, 0x1A0C000
	008 Move W8, [X22+1521]
	009 Move X21, [X21+712]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1A0C000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1521], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, [X20+32]
	030 Move X8, [X8+192]
	031 Move X0, [X8+24]
	032 Call 0x223C2FC
	033 Move X8, [X20+32]
	034 Move X21, X0
	035 Move X8, [X8+192]
	036 Move X1, [X8+16]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X0, X21
	046 Call 0x1C17E00
	047 Move [X19+32], X0
	048 Move X8, [X20+32]
	049 Move X8, [X8+192]
	050 Move X1, [X8+16]
	051 Move W8, [X1+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {59}
	056 Move X0, X1
	057 Call 0x1C5D684
	058 Move X1, X0
	059 Move X0, X21
	060 Call 0x1C17E00
	061 Move X8, [X20+32]
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X8, [X8+192]
	068 Move X1, [X8+40]
	069 Move X30, [X31+48]

Method: System.Void SetImplicitConstructor()

Disassembly:
	0x0271166C MOV X19, X0
	0x02711670 TBNZ X8, 0x0, 0x2711688
	0x02711674 ADRP X0, 0x1A0C000
	0x02711678 LDR X0, [X0 + 0x968]
	0x0271167C BL 0x1C16CF4
	0x02711680 MOVZ W8, 0x1
	0x02711684 STRB W8, [X20 + 0x5FA]
	0x02711688 LDR X8, [X19 + 0x10]
	0x0271168C CBZ X8, 0x2711698
	0x02711690 MOVZ W0, 0x1
	0x02711694 B 0x2711784
	0x02711698 LDR X20, [X19 + 0x20]
	0x0271169C CBZ X20, 0x2711778
	0x027116A0 ADRP X21, 0x1A0C000
	0x027116A4 LDR X8, [X20]
	0x027116A8 LDR X21, [X21 + 0x968]
	0x027116AC LDRH W9, [X8 + 0x12E]
	0x027116B0 LDR X1, [X21]
	0x027116B4 CBZ X9, 0x27116D8
	0x027116B8 LDR X10, [X8 + 0xB0]
	0x027116BC ADD X10, X10, 0x8
	0x027116C0 LDUR X11, [X10 - 0x8]
	0x027116C4 CMP X11, X1
	0x027116C8 B.EQ 0x27116E8
	0x027116CC SUBS X9, X9, 0x1
	0x027116D0 ADD X10, X10, 0x10
	0x027116D4 B.NE 0x27116C0
	0x027116D8 MOV X0, X20
	0x027116DC MOV W2, W31
	0x027116E0 BL 0x1C5C788
	0x027116E4 B 0x27116F4
	0x027116E8 LDRSW X9, [X10]
	0x027116EC ADD X8, X8, X9, 0x4, LSL
	0x027116F0 ADD X0, X8, 0x138
	0x027116F4 LDP X8, X1, [X0]
	0x027116F8 MOV X0, X20
	0x027116FC BLR X8
	0x02711700 CMP W0, 0x2
	0x02711704 B.NE 0x2711710
	0x02711708 MOV W0, W31
	0x0271170C B 0x2711784
	0x02711710 LDR X20, [X19 + 0x20]
	0x02711714 CBZ X20, 0x2711790
	0x02711718 LDR X8, [X20]
	0x0271171C LDR X1, [X21]
	0x02711720 LDRH W9, [X8 + 0x12E]
	0x02711724 CBZ X9, 0x2711748
	0x02711728 LDR X10, [X8 + 0xB0]
	0x0271172C ADD X10, X10, 0x8
	0x02711730 LDUR X11, [X10 - 0x8]
	0x02711734 CMP X11, X1
	0x02711738 B.EQ 0x2711758
	0x0271173C SUBS X9, X9, 0x1
	0x02711740 ADD X10, X10, 0x10
	0x02711744 B.NE 0x2711730
	0x02711748 MOV X0, X20
	0x0271174C MOV W2, W31
	0x02711750 BL 0x1C5C788
	0x02711754 B 0x2711764
	0x02711758 LDRSW X9, [X10]
	0x0271175C ADD X8, X8, X9, 0x4, LSL
	0x02711760 ADD X0, X8, 0x138
	0x02711764 LDP X8, X1, [X0]
	0x02711768 MOV X0, X20
	0x0271176C BLR X8
	0x02711770 CMP W0, 0x1
	0x02711774 B.EQ 0x2711784
	0x02711778 LDR X8, [X19 + 0x18]
	0x0271177C CMP X8, 0x0
	0x02711780 CSET W0, NE
	0x02711784 LDP X20, X19, [X31 + 0x10]
	0x02711788 LDP X30, X21, [X31], #0x20
	0x0271178C RET
	0x02711790 BL 0x1C16F20
	0x02711794 STR X30, [X31 - 0x30]!
	0x02711798 STP X22, X21, [X31 + 0x10]
	0x0271179C STP X20, X19, [X31 + 0x20]
	0x027117A0 ADRP X22, 0x1CC9000
	0x027117A4 ADRP X21, 0x1A0B000
	0x027117A8 LDRB W8, [X22 + 0x5FB]
	0x027117AC LDR X21, [X21 + 0x2C8]
	0x027117B0 MOV X20, X1
	0x027117B4 MOV X19, X0
	0x027117B8 TBNZ X8, 0x0, 0x27117D0
	0x027117BC ADRP X0, 0x1A0B000
	0x027117C0 LDR X0, [X0 + 0x2C8]
	0x027117C4 BL 0x1C16CF4
	0x027117C8 MOVZ W8, 0x1
	0x027117CC STRB W8, [X22 + 0x5FB]
	0x027117D0 MOV X0, X19
	0x027117D4 MOV X1, X31
	0x027117D8 BL 0x33BDD8C
	0x027117DC LDR X0, [X21]
	0x027117E0 LDR W8, [X0 + 0xE0]
	0x027117E4 CBNZ W8, 0x27117EC
	0x027117E8 BL 0x1C16DFC
	0x027117EC LDR X8, [X20 + 0x20]
	0x027117F0 LDR X8, [X8 + 0xC0]
	0x027117F4 LDR X0, [X8 + 0x18]
	0x027117F8 BL 0x223B58C
	0x027117FC LDR X8, [X20 + 0x20]
	0x02711800 MOV X21, X0
	0x02711804 LDR X8, [X8 + 0xC0]
	0x02711808 LDR X1, [X8 + 0x10]
	0x0271180C LDRB W8, [X1 + 0x135]
	0x02711810 TBNZ X8, 0x0, 0x2711820
	0x02711814 MOV X0, X1
	0x02711818 BL 0x1C5C684
	0x0271181C MOV X1, X0
	0x02711820 MOV X0, X21
	0x02711824 BL 0x1C16E00
	0x02711828 STR X0, [X19 + 0x20]
	0x0271182C LDR X8, [X20 + 0x20]
	0x02711830 LDR X8, [X8 + 0xC0]
	0x02711834 LDR X1, [X8 + 0x10]
	0x02711838 LDRB W8, [X1 + 0x135]
	0x0271183C TBNZ X8, 0x0, 0x271184C
	0x02711840 MOV X0, X1
	0x02711844 BL 0x1C5C684
	0x02711848 MOV X1, X0
	0x0271184C MOV X0, X21
	0x02711850 BL 0x1C16E00
	0x02711854 LDR X8, [X20 + 0x20]
	0x02711858 MOV X0, X19
	0x0271185C LDP X20, X19, [X31 + 0x20]
	0x02711860 LDP X22, X21, [X31 + 0x10]
	0x02711864 LDR X8, [X8 + 0xC0]
	0x02711868 LDR X1, [X8 + 0x28]
	0x0271186C LDR X30, [X31], #0x30
	0x02711870 B 0x2711874
	0x02711874 STR X30, [X31 - 0x30]!
	0x02711878 STP X22, X21, [X31 + 0x10]
	0x0271187C STP X20, X19, [X31 + 0x20]
	0x02711880 ADRP X21, 0x1CC9000
	0x02711884 ADRP X22, 0x19E2000
	0x02711888 LDRB W8, [X21 + 0x5FC]
	0x0271188C LDR X22, [X22 + 0x6C0]
	0x02711890 MOV X20, X1
	0x02711894 MOV X19, X0
	0x02711898 TBNZ X8, 0x0, 0x27118D4
	0x0271189C ADRP X0, 0x1A0C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CCA000
	007 Move X22, 0x19E3000
	008 Move W8, [X21+1522]
	009 Move X22, [X22+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x1A0D000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x1A0D000
	020 Move X0, [X0+2424]
	021 Call 0x1C17CF4
	022 Move X0, 0x1A0A000
	023 Move X0, [X0+728]
	024 Call 0x1C17CF4
	025 Move X0, 0x19E3000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1522], W8
	030 Move X8, [X20+32]
	031 Move X0, [X22]
	032 Move X8, [X8+192]
	033 Move W9, [X0+224]
	034 Move X21, [X8+48]
	035 Compare W9, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X21
	039 Move X1, X31
	040 Call Type.GetTypeFromHandle, X0
	041 Compare X0, 0
	042 JumpIfEqual {179}
	043 Move X1, X31
	044 Move X21, X0
	045 Call Type.get_IsValueType, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {68}
	050 Move X8, [X20+32]
	051 Move X8, [X8+192]
	052 Move X0, [X8+8]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Call 0x1C17F10
	060 Move X8, [X20+32]
	061 Move X8, [X8+192]
	062 Move X2, [X8+56]
	063 Move X3, [X8+64]
	064 Move X1, X31
	065 Move X20, X0
	066 Call Func`1<Bounds>..ctor, X0, X1, X2
	067 Move [X19+24], X20
	068 Move X0, X21
	069 Move X1, X31
	070 Call Type.get_IsAbstract, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {81}
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return 
	081 Move X8, 0x1A0A000
	082 Move X0, [X22]
	083 Move X8, [X8+728]
	084 Move W9, [X0+224]
	085 Move X22, [X8]
	086 Compare W9, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X22
	090 Move X1, X31
	091 Call Type.GetTypeFromHandle, X0
	092 Compare X0, 0
	093 JumpIfEqual {179}
	094 Move X8, [X0]
	095 Move X1, X21
	096 Move X9, [X8+680]
	097 Move X2, [X8+688]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {116}
	103 Move X8, [X20+32]
	104 Move X8, [X8+192]
	105 Move X0, [X8+8]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Call 0x1C17F10
	113 Move X8, [X20+32]
	114 Move X8, [X8+192]
	115 Move X2, [X8+72]
	116 Move X8, 0x1A0D000
	117 Move X8, [X8+2416]
	118 Move X22, [X8]
	119 Move X8, [X22+56]
	120 Compare X8, 0
	121 JumpIfNotEqual {125}
	122 Move X0, X22
	123 Call 0x1C5D6E0
	124 Move X8, [X22+56]
	125 Move X0, [X8+16]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X8, [X22+56]
	137 Move X0, [X8+16]
	138 Move W8, [X0+309]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {144}
	143 Call 0x1C5D684
	144 Move X8, [X0+184]
	145 Move X0, X21
	146 Move X2, X31
	147 Move X1, [X8]
	148 Call Type.GetConstructor, X0, X1
	149 Move X8, 0x1A0D000
	150 Move X8, [X8+2424]
	151 Move X21, X0
	152 Move X8, [X8]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X0, X31
	159 Move X1, X21
	160 Move X2, X31
	161 Call ConstructorInfo.op_Inequality, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {75}
	166 Move X8, [X20+32]
	167 Move X8, [X8+192]
	168 Move X0, [X8+8]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Call 0x1C17F10
	176 Move X8, [X20+32]
	177 Move X8, [X8+192]
	178 Move X2, [X8+80]
	179 Call 0x1C17F20

Method: T CreateValueTypeInstance()

Disassembly:
	0x027118A0 LDR X0, [X0 + 0x970]
	0x027118A4 BL 0x1C16CF4
	0x027118A8 ADRP X0, 0x1A0C000

ISIL:
	001 Move [X8], X31
	002 Move [X8+8], X31
	003 Move [X8+16], X31
	004 Return X0

Method: T CreateScriptableObjectInstance()

Disassembly:
	0x027118AC LDR X0, [X0 + 0x978]
	0x027118B0 BL 0x1C16CF4
	0x027118B4 ADRP X0, 0x1A09000
	0x027118B8 LDR X0, [X0 + 0x2D8]
	0x027118BC BL 0x1C16CF4
	0x027118C0 ADRP X0, 0x19E2000
	0x027118C4 LDR X0, [X0 + 0x6C0]
	0x027118C8 BL 0x1C16CF4
	0x027118CC MOVZ W8, 0x1
	0x027118D0 STRB W8, [X21 + 0x5FC]
	0x027118D4 LDR X8, [X20 + 0x20]
	0x027118D8 LDR X0, [X22]
	0x027118DC LDR X8, [X8 + 0xC0]
	0x027118E0 LDR W9, [X0 + 0xE0]
	0x027118E4 LDR X21, [X8 + 0x30]
	0x027118E8 CBNZ W9, 0x27118F0
	0x027118EC BL 0x1C16DFC
	0x027118F0 MOV X0, X21
	0x027118F4 MOV X1, X31
	0x027118F8 BL 0x338C698
	0x027118FC CBZ X0, 0x2711AA4
	0x02711900 MOV X1, X31
	0x02711904 MOV X21, X0
	0x02711908 BL 0x33970C4
	0x0271190C TBZ X0, 0x0, 0x2711950
	0x02711910 LDR X8, [X20 + 0x20]
	0x02711914 LDR X8, [X8 + 0xC0]
	0x02711918 LDR X0, [X8 + 0x8]
	0x0271191C LDRB W8, [X0 + 0x135]
	0x02711920 TBNZ X8, 0x0, 0x2711928
	0x02711924 BL 0x1C5C684
	0x02711928 BL 0x1C16F10
	0x0271192C LDR X8, [X20 + 0x20]
	0x02711930 LDR X8, [X8 + 0xC0]
	0x02711934 LDR X2, [X8 + 0x38]
	0x02711938 LDR X3, [X8 + 0x40]
	0x0271193C MOV X1, X31
	0x02711940 MOV X20, X0
	0x02711944 BL 0x2D27460
	0x02711948 STR X20, [X19 + 0x18]
	0x0271194C B 0x2711960
	0x02711950 MOV X0, X21
	0x02711954 MOV X1, X31
	0x02711958 BL 0x339703C
	0x0271195C TBZ X0, 0x0, 0x2711970
	0x02711960 LDP X20, X19, [X31 + 0x20]
	0x02711964 LDP X22, X21, [X31 + 0x10]
	0x02711968 LDR X30, [X31], #0x30
	0x0271196C RET
	0x02711970 ADRP X8, 0x1A09000
	0x02711974 LDR X0, [X22]
	0x02711978 LDR X8, [X8 + 0x2D8]
	0x0271197C LDR W9, [X0 + 0xE0]
	0x02711980 LDR X22, [X8]
	0x02711984 CBNZ W9, 0x271198C
	0x02711988 BL 0x1C16DFC
	0x0271198C MOV X0, X22
	0x02711990 MOV X1, X31
	0x02711994 BL 0x338C698
	0x02711998 CBZ X0, 0x2711AA4
	0x0271199C LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1CCA000
	006 Move W9, [X21+1523]
	007 Move X20, X0
	008 Move X19, X8
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x19E3000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1523], W8
	018 Move X0, [X20+32]
	019 Move X21, 0x19E3000
	020 Move W8, [X0+309]
	021 Move X21, [X21+1728]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X21]
	028 Move X9, [X0+192]
	029 Move W10, [X8+224]
	030 Move X21, [X9+48]
	031 Compare W10, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X21
	036 Move X1, X31
	037 Call Type.GetTypeFromHandle, X0
	038 Move X1, X31
	039 Call ScriptableObject.CreateInstance, X0
	040 Move X8, [X20+32]
	041 Move X20, X0
	042 Move W9, [X8+309]
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, X0
	050 Move X8, [X8+192]
	051 Move X1, [X8+88]
	052 Move W8, [X1+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X1
	058 Call 0x1C5D684
	059 Move X1, X0
	060 Compare X20, 0
	061 JumpIfEqual {77}
	062 Move X8, [X20]
	063 Move X9, [X1+64]
	064 Move X0, X20
	065 Move X8, [X8+64]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Call 0x1C17E08
	068 Move V0, [X0]
	069 Move X8, [X0+16]
	070 Move [X19], V0
	071 Move [X19+16], X8
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return X0
	077 Call 0x1C17F20
	078 Call 0x1C181E0

Method: T CreateClassInstance()

Disassembly:
	0x027119A0 MOV X1, X21
	0x027119A4 LDR X9, [X8 + 0x2A8]
	0x027119A8 LDR X2, [X8 + 0x2B0]
	0x027119AC BLR X9
	0x027119B0 TBZ X0, 0x0, 0x27119E0
	0x027119B4 LDR X8, [X20 + 0x20]
	0x027119B8 LDR X8, [X8 + 0xC0]
	0x027119BC LDR X0, [X8 + 0x8]
	0x027119C0 LDRB W8, [X0 + 0x135]
	0x027119C4 TBNZ X8, 0x0, 0x27119CC
	0x027119C8 BL 0x1C5C684
	0x027119CC BL 0x1C16F10
	0x027119D0 LDR X8, [X20 + 0x20]
	0x027119D4 LDR X8, [X8 + 0xC0]
	0x027119D8 LDR X2, [X8 + 0x48]
	0x027119DC B 0x2711938
	0x027119E0 ADRP X8, 0x1A0C000
	0x027119E4 LDR X8, [X8 + 0x970]
	0x027119E8 LDR X22, [X8]
	0x027119EC LDR X8, [X22 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X0, [X0+32]
	005 Move X19, X8
	006 Move W9, [X0+309]
	007 Move TEMP, X9
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+96]
	014 Add X8, X31, 8
	015 Call Activator.CreateInstance
	016 Move X8, [X31+24]
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 Move [X19+16], X8
	019 Move [X19], V0
	020 Move X30, [X31+64]
	021 Move X19, [X31+72]
	022 Move [X31+48], X8
	023 Move [X31+2], V0
	024 Add X31, X31, 80
	025 Return X0

Method: System.Void SetExplicitConstructor(System.Func`1<T> constructor)

Disassembly:
	0x027119F0 CBNZ X8, 0x2711A00
	0x027119F4 MOV X0, X22

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: T Unity.Properties.TypeUtility.ITypeConstructor<T>.Instantiate()

Disassembly:
	0x027119F8 BL 0x1C5C6E0
	0x027119FC LDR X8, [X22 + 0x38]
	0x02711A00 LDR X0, [X8 + 0x10]
	0x02711A04 LDRB W8, [X0 + 0x135]
	0x02711A08 TBNZ X8, 0x0, 0x2711A10
	0x02711A0C BL 0x1C5C684
	0x02711A10 LDR W8, [X0 + 0xE0]
	0x02711A14 CBNZ W8, 0x2711A1C
	0x02711A18 BL 0x1C16DFC
	0x02711A1C LDR X8, [X22 + 0x38]
	0x02711A20 LDR X0, [X8 + 0x10]
	0x02711A24 LDRB W8, [X0 + 0x135]
	0x02711A28 TBNZ X8, 0x0, 0x2711A30
	0x02711A2C BL 0x1C5C684
	0x02711A30 LDR X8, [X0 + 0xB8]
	0x02711A34 MOV X0, X21
	0x02711A38 MOV X2, X31
	0x02711A3C LDR X1, [X8]
	0x02711A40 BL 0x3397418
	0x02711A44 ADRP X8, 0x1A0C000
	0x02711A48 LDR X8, [X8 + 0x978]
	0x02711A4C MOV X21, X0
	0x02711A50 LDR X8, [X8]
	0x02711A54 LDR W9, [X8 + 0xE0]
	0x02711A58 CBNZ W9, 0x2711A64
	0x02711A5C MOV X0, X8
	0x02711A60 BL 0x1C16DFC
	0x02711A64 MOV X0, X31
	0x02711A68 MOV X1, X21
	0x02711A6C MOV X2, X31
	0x02711A70 BL 0x32CC854
	0x02711A74 TBZ X0, 0x0, 0x2711960
	0x02711A78 LDR X8, [X20 + 0x20]
	0x02711A7C LDR X8, [X8 + 0xC0]
	0x02711A80 LDR X0, [X8 + 0x8]
	0x02711A84 LDRB W8, [X0 + 0x135]
	0x02711A88 TBNZ X8, 0x0, 0x2711A90
	0x02711A8C BL 0x1C5C684
	0x02711A90 BL 0x1C16F10
	0x02711A94 LDR X8, [X20 + 0x20]
	0x02711A98 LDR X8, [X8 + 0xC0]
	0x02711A9C LDR X2, [X8 + 0x50]
	0x02711AA0 B 0x2711938
	0x02711AA4 BL 0x1C16F20
	0x02711AA8 FMOV S0, W31
	0x02711AAC FMOV S1, W31
	0x02711AB0 FMOV S2, W31
	0x02711AB4 FMOV S3, W31
	0x02711AB8 RET
	0x02711ABC STR X30, [X31 - 0x20]!
	0x02711AC0 STP X20, X19, [X31 + 0x10]
	0x02711AC4 ADRP X20, 0x1CC9000
	0x02711AC8 LDRB W8, [X20 + 0x5FD]
	0x02711ACC MOV X19, X0
	0x02711AD0 TBNZ X8, 0x0, 0x2711AE8
	0x02711AD4 ADRP X0, 0x19E2000
	0x02711AD8 LDR X0, [X0 + 0x6C0]
	0x02711ADC BL 0x1C16CF4
	0x02711AE0 MOVZ W8, 0x1
	0x02711AE4 STRB W8, [X20 + 0x5FD]
	0x02711AE8 LDR X0, [X19 + 0x20]
	0x02711AEC ADRP X20, 0x19E2000
	0x02711AF0 LDRB W8, [X0 + 0x135]
	0x02711AF4 LDR X20, [X20 + 0x6C0]
	0x02711AF8 TBNZ X8, 0x0, 0x2711B00
	0x02711AFC BL 0x1C5C684
	0x02711B00 LDR X8, [X20]
	0x02711B04 LDR X9, [X0 + 0xC0]
	0x02711B08 LDR W10, [X8 + 0xE0]
	0x02711B0C LDR X20, [X9 + 0x30]
	0x02711B10 CBNZ W10, 0x2711B1C
	0x02711B14 MOV X0, X8
	0x02711B18 BL 0x1C16DFC
	0x02711B1C MOV X0, X20
	0x02711B20 MOV X1, X31
	0x02711B24 BL 0x338C698
	0x02711B28 MOV X1, X31
	0x02711B2C BL 0x3C36DE8
	0x02711B30 LDR X8, [X19 + 0x20]
	0x02711B34 MOV X19, X0
	0x02711B38 LDRB W9, [X8 + 0x135]
	0x02711B3C TBNZ X9, 0x0, 0x2711B4C
	0x02711B40 MOV X0, X8
	0x02711B44 BL 0x1C5C684
	0x02711B48 MOV X8, X0
	0x02711B4C LDR X8, [X8 + 0xC0]
	0x02711B50 LDR X1, [X8 + 0x58]
	0x02711B54 LDRB W8, [X1 + 0x135]
	0x02711B58 TBNZ X8, 0x0, 0x2711B68
	0x02711B5C MOV X0, X1
	0x02711B60 BL 0x1C5C684
	0x02711B64 MOV X1, X0
	0x02711B68 CBZ X19, 0x2711B9C
	0x02711B6C LDR X8, [X19]
	0x02711B70 LDR X9, [X1 + 0x40]
	0x02711B74 MOV X0, X19
	0x02711B78 LDR X8, [X8 + 0x40]
	0x02711B7C CMP X8, X9
	0x02711B80 B.NE 0x2711BA0
	0x02711B84 BL 0x1C16E08
	0x02711B88 LDP S0, S1, [X0]
	0x02711B8C LDP S2, S3, [X0 + 0x8]
	0x02711B90 LDP X20, X19, [X31 + 0x10]
	0x02711B94 LDR X30, [X31], #0x20
	0x02711B98 RET
	0x02711B9C BL 0x1C16F20
	0x02711BA0 BL 0x1C171E0
	0x02711BA4 STR X30, [X31 - 0x10]!
	0x02711BA8 LDR X0, [X0 + 0x20]
	0x02711BAC LDRB W8, [X0 + 0x135]
	0x02711BB0 TBNZ X8, 0x0, 0x2711BB8
	0x02711BB4 BL 0x1C5C684
	0x02711BB8 LDR X8, [X0 + 0xC0]
	0x02711BBC LDR X0, [X8 + 0x60]
	0x02711BC0 LDR X30, [X31], #0x10
	0x02711BC4 B 0x22784A0
	0x02711BC8 STR X1, [X0 + 0x10]
	0x02711BCC RET
	0x02711BD0 STR X30, [X31 - 0x30]!
	0x02711BD4 STP X22, X21, [X31 + 0x10]
	0x02711BD8 STP X20, X19, [X31 + 0x20]
	0x02711BDC ADRP X21, 0x1CC9000
	0x02711BE0 LDRB W8, [X21 + 0x5FE]
	0x02711BE4 MOV X19, X1
	0x02711BE8 MOV X20, X0
	0x02711BEC TBNZ X8, 0x0, 0x2711C04
	0x02711BF0 ADRP X0, 0x1A0C000
	0x02711BF4 LDR X0, [X0 + 0x968]
	0x02711BF8 BL 0x1C16CF4
	0x02711BFC MOVZ W8, 0x1
	0x02711C00 STRB W8, [X21 + 0x5FE]
	0x02711C04 LDR X8, [X20 + 0x10]
	0x02711C08 CBNZ X8, 0x2711D50
	0x02711C0C LDR X21, [X20 + 0x20]
	0x02711C10 CBZ X21, 0x2711D48
	0x02711C14 ADRP X22, 0x1A0C000
	0x02711C18 LDR X8, [X21]
	0x02711C1C LDR X22, [X22 + 0x968]
	0x02711C20 LDRH W9, [X8 + 0x12E]
	0x02711C24 LDR X1, [X22]
	0x02711C28 CBZ X9, 0x2711C4C
	0x02711C2C LDR X10, [X8 + 0xB0]
	0x02711C30 ADD X10, X10, 0x8
	0x02711C34 LDUR X11, [X10 - 0x8]
	0x02711C38 CMP X11, X1
	0x02711C3C B.EQ 0x2711C5C
	0x02711C40 SUBS X9, X9, 0x1
	0x02711C44 ADD X10, X10, 0x10
	0x02711C48 B.NE 0x2711C34
	0x02711C4C MOV X0, X21
	0x02711C50 MOV W2, W31
	0x02711C54 BL 0x1C5C788
	0x02711C58 B 0x2711C68
	0x02711C5C LDRSW X9, [X10]
	0x02711C60 ADD X8, X8, X9, 0x4, LSL
	0x02711C64 ADD X0, X8, 0x138
	0x02711C68 LDP X8, X1, [X0]
	0x02711C6C MOV X0, X21
	0x02711C70 BLR X8
	0x02711C74 CMP W0, 0x2
	0x02711C78 B.EQ 0x2711D84
	0x02711C7C LDR X21, [X20 + 0x20]
	0x02711C80 CBZ X21, 0x2711E28
	0x02711C84 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x1CCA000
	009 Move W9, [X22+1524]
	010 Move X19, X1
	011 Move X21, X0
	012 Move X20, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1A0D000
	018 Move X0, [X0+2408]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1524], W8
	022 Move X8, [X21+16]
	023 Compare X8, 0
	024 JumpIfNotEqual {107}
	025 Move X22, [X21+32]
	026 Compare X22, 0
	027 JumpIfEqual {104}
	028 Move X23, 0x1A0D000
	029 Move X8, [X22]
	030 Move X23, [X23+2408]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X23]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move X0, X22
	042 Move W2, W31
	043 Call 0x1C5D788
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Add X8, X8, X9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X22
	050 NotImplemented "Instruction BLR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X22, [X21+32]
	053 Compare X22, 0
	054 JumpIfEqual {176}
	055 Move X8, [X22]
	056 Move X1, [X23]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X22
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X22
	075 NotImplemented "Instruction BLR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X21, [X21+32]
	078 Compare X21, 0
	079 JumpIfEqual {176}
	080 Move X8, [X19+32]
	081 Move X8, [X8+192]
	082 Move X1, [X8+16]
	083 Move W8, [X1+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {91}
	088 Move X0, X1
	089 Call 0x1C5D684
	090 Move X1, X0
	091 Move X8, [X21]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X21
	102 Move W2, W31
	103 Call 0x1C5D788
	104 Move X8, [X21+24]
	105 Compare X8, 0
	106 JumpIfEqual {134}
	107 Move X9, [X8+24]
	108 Move X0, [X8+64]
	109 Move X1, [X8+40]
	110 Add X8, X31, 8
	111 NotImplemented "Instruction BLR not yet implemented."
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 Move X8, [X31+24]
	114 Move X22, [X31+80]
	115 Move X21, [X31+88]
	116 Move X30, [X31+64]
	117 Move X23, [X31+72]
	118 Move [X31+2], V0
	119 Move V0, [X31+2]
	120 Move [X20+16], X8
	121 Move [X31+48], X8
	122 Move [X20], V0
	123 Move X20, [X31+96]
	124 Move X19, [X31+104]
	125 Add X31, X31, 112
	126 Return X0
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X9, [X0]
	131 Move X1, [X0+8]
	132 Add X8, X31, 8
	133 Move X0, X21
	134 Move X8, [X19+32]
	135 Move X0, 0x19E3000
	136 Move X8, [X8+192]
	137 Move X20, [X8+48]
	138 Move X0, [X0+1728]
	139 Call 0x1C17D08
	140 Call 0x19913D0
	141 Move X0, X20
	142 Move X1, X31
	143 Call Type.GetTypeFromHandle, X0
	144 Move X20, X0
	145 Call 0x19913C0
	146 Move X8, [X20]
	147 Move X0, X20
	148 Move X9, [X8+424]
	149 Move X1, [X8+432]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X20, X0
	152 Move X0, 0x1A0D000
	153 Move X0, [X0+2432]
	154 Call 0x1C17D08
	155 Move X21, X0
	156 Move X0, 0x1A0D000
	157 Move X0, [X0+2440]
	158 Call 0x1C17D08
	159 Move X2, X0
	160 Move X0, X21
	161 Move X1, X20
	162 Move X3, X31
	163 Call String.Concat, X0, X1, X2
	164 Move X20, X0
	165 Move X0, 0x19E3000
	166 Move X0, [X0+1456]
	167 Call 0x1C17D08
	168 Call 0x1C17F10
	169 Move X1, X20
	170 Move X2, X31
	171 Move X21, X0
	172 Call InvalidOperationException..ctor, X0, X1
	173 Move X0, X21
	174 Move X1, X19
	175 Call 0x1C17DEC
	176 Call 0x1C17F20

Method: System.Object Unity.Properties.TypeUtility.ITypeConstructor.Instantiate()

Disassembly:
	0x02711C88 LDR X1, [X22]
	0x02711C8C LDRH W9, [X8 + 0x12E]
	0x02711C90 CBZ X9, 0x2711CB4
	0x02711C94 LDR X10, [X8 + 0xB0]
	0x02711C98 ADD X10, X10, 0x8
	0x02711C9C LDUR X11, [X10 - 0x8]
	0x02711CA0 CMP X11, X1
	0x02711CA4 B.EQ 0x2711CC4
	0x02711CA8 SUBS X9, X9, 0x1
	0x02711CAC ADD X10, X10, 0x10
	0x02711CB0 B.NE 0x2711C9C
	0x02711CB4 MOV X0, X21
	0x02711CB8 MOV W2, W31
	0x02711CBC BL 0x1C5C788
	0x02711CC0 B 0x2711CD0
	0x02711CC4 LDRSW X9, [X10]
	0x02711CC8 ADD X8, X8, X9, 0x4, LSL
	0x02711CCC ADD X0, X8, 0x138
	0x02711CD0 LDP X8, X1, [X0]
	0x02711CD4 MOV X0, X21
	0x02711CD8 BLR X8
	0x02711CDC CMP W0, 0x1
	0x02711CE0 B.NE 0x2711D48
	0x02711CE4 LDR X20, [X20 + 0x20]
	0x02711CE8 CBZ X20, 0x2711E28
	0x02711CEC LDR X8, [X19 + 0x20]
	0x02711CF0 LDR X8, [X8 + 0xC0]
	0x02711CF4 LDR X1, [X8 + 0x10]
	0x02711CF8 LDRB W8, [X1 + 0x135]
	0x02711CFC TBNZ X8, 0x0, 0x2711D0C
	0x02711D00 MOV X0, X1
	0x02711D04 BL 0x1C5C684
	0x02711D08 MOV X1, X0
	0x02711D0C LDR X8, [X20]
	0x02711D10 LDRH W9, [X8 + 0x12E]
	0x02711D14 CBZ X9, 0x2711D38
	0x02711D18 LDR X10, [X8 + 0xB0]
	0x02711D1C ADD X10, X10, 0x8
	0x02711D20 LDUR X11, [X10 - 0x8]
	0x02711D24 CMP X11, X1
	0x02711D28 B.EQ 0x2711D6C
	0x02711D2C SUBS X9, X9, 0x1
	0x02711D30 ADD X10, X10, 0x10
	0x02711D34 B.NE 0x2711D20
	0x02711D38 MOV X0, X20
	0x02711D3C MOV W2, W31
	0x02711D40 BL 0x1C5C788
	0x02711D44 B 0x2711D78
	0x02711D48 LDR X8, [X20 + 0x18]
	0x02711D4C CBZ X8, 0x2711D84
	0x02711D50 LDR X2, [X8 + 0x18]
	0x02711D54 LDR X0, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Compare X0, 0
	006 JumpIfEqual {57}
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X20, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+120]
	012 Move W8, [X1+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X1
	018 Call 0x1C5D684
	019 Move X1, X0
	020 Move X8, [X20]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Compare X9, 0
	023 JumpIfEqual {30}
	024 Move X10, [X8+176]
	025 Add X10, X10, 8
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract X9, X9, 1
	029 Add X10, X10, 16
	030 Move X0, X20
	031 Move W2, W31
	032 Call 0x1C5D788
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Add X8, X8, X9
	035 Add X0, X8, 312
	036 Move X9, [X0]
	037 Move X1, [X0+8]
	038 Add X8, X31, 0
	039 Move X0, X20
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X31+16]
	042 Move V0, [X31]
	043 Add X1, X31, 0
	044 Move [X31+48], X8
	045 Move [X31+2], V0
	046 Move [X31], V0
	047 Move [X31+16], X8
	048 Move X8, [X19+32]
	049 Move X8, [X8+192]
	050 Move X0, [X8+88]
	051 Call 0x1C17E04
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X30, [X31+64]
	055 Add X31, X31, 96
	056 Return X0
	057 Call 0x1C17F20

