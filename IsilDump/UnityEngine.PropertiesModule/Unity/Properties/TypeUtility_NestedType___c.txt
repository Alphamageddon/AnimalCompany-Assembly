Type: Unity.Properties.TypeUtility/<>c

Method: System.Void .cctor()

Disassembly:
	0x03C93D48 MOV X19, X0
	0x03C93D4C TBNZ X8, 0x0, 0x3C93DAC
	0x03C93D50 ADRP X0, 0x4CD000
	0x03C93D54 LDR X0, [X0 + 0xD30]
	0x03C93D58 BL 0x1C16CF4
	0x03C93D5C ADRP X0, 0x4CD000
	0x03C93D60 LDR X0, [X0 + 0xD38]
	0x03C93D64 BL 0x1C16CF4
	0x03C93D68 ADRP X0, 0x4CD000
	0x03C93D6C LDR X0, [X0 + 0xD40]
	0x03C93D70 BL 0x1C16CF4
	0x03C93D74 ADRP X0, 0x4CD000
	0x03C93D78 LDR X0, [X0 + 0xD28]
	0x03C93D7C BL 0x1C16CF4
	0x03C93D80 ADRP X0, 0x4CD000
	0x03C93D84 LDR X0, [X0 + 0xD48]
	0x03C93D88 BL 0x1C16CF4
	0x03C93D8C ADRP X0, 0x4CD000
	0x03C93D90 LDR X0, [X0 + 0xD50]
	0x03C93D94 BL 0x1C16CF4
	0x03C93D98 ADRP X0, 0x4CD000
	0x03C93D9C LDR X0, [X0 + 0xD58]
	0x03C93DA0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x755000
	005 Move X20, 0x4CE000
	006 Move W8, [X19+129]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4CE000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+129], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C93DA4 MOVZ W8, 0x1
	0x03C93DA8 STRB W8, [X21 + 0xCB]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Text.StringBuilder <.cctor>b__11_0()

Disassembly:
	0x03C93DAC LDR X0, [X20]
	0x03C93DB0 ADRP X25, 0x4CD000
	0x03C93DB4 ADRP X20, 0x4CD000
	0x03C93DB8 ADRP X21, 0x4CD000
	0x03C93DBC ADRP X24, 0x4CD000
	0x03C93DC0 ADRP X23, 0x4CD000
	0x03C93DC4 ADRP X22, 0x4CD000
	0x03C93DC8 LDR X25, [X25 + 0xD40]
	0x03C93DCC LDR X20, [X20 + 0xD48]
	0x03C93DD0 LDR W8, [X0 + 0xE0]
	0x03C93DD4 LDR X21, [X21 + 0xD38]
	0x03C93DD8 LDR X24, [X24 + 0xD50]
	0x03C93DDC LDR X23, [X23 + 0xD30]
	0x03C93DE0 LDR X22, [X22 + 0xD58]
	0x03C93DE4 CBNZ W8, 0x3C93DEC
	0x03C93DE8 BL 0x1C16DFC
	0x03C93DEC LDR X1, [X25]
	0x03C93DF0 MOV X0, X19
	0x03C93DF4 BL 0x299F08C
	0x03C93DF8 LDR X0, [X20]
	0x03C93DFC BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x755000
	005 Move X20, 0x461000
	006 Move W8, [X19+130]
	007 Move X20, [X20+2288]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x461000
	013 Move X0, [X0+2288]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+130], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call StringBuilder..ctor, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Void <.cctor>b__11_1(System.Text.StringBuilder sb)

Disassembly:
	0x03C93E00 MOV X20, X0
	0x03C93E04 BL 0x3C94E78
	0x03C93E08 LDR X2, [X21]
	0x03C93E0C MOV X0, X19
	0x03C93E10 MOV X1, X20
	0x03C93E14 BL 0x212E728

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call StringBuilder.Clear, X0
	006 Return 
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.String <.cctor>b__11_2()

Disassembly:
	0x03C93E18 LDR X0, [X24]
	0x03C93E1C BL 0x1C16F10
	0x03C93E20 MOV X20, X0
	0x03C93E24 BL 0x3C94F18
	0x03C93E28 LDR X2, [X21]
	0x03C93E2C MOV X0, X19
	0x03C93E30 MOV X1, X20
	0x03C93E34 BL 0x212E728
	0x03C93E38 LDR X0, [X23]
	0x03C93E3C BL 0x1C16F10
	0x03C93E40 MOV X20, X0
	0x03C93E44 BL 0x3C94FB8
	0x03C93E48 LDR X2, [X21]
	0x03C93E4C MOV X0, X19
	0x03C93E50 MOV X1, X20
	0x03C93E54 BL 0x212E728
	0x03C93E58 LDR X0, [X22]
	0x03C93E5C BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x755000
	005 Move X20, 0x463000
	006 Move W8, [X19+131]
	007 Move X20, [X20+632]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x463000
	013 Move X0, [X0+632]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+131], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

