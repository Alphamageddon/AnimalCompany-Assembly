Type: Unity.Properties.TypeTraits`1

Method: System.Boolean get_IsValueType()

Disassembly:
	0x02718894 LDP X20, X19, [X31 + 0x20]
	0x02718898 LDP X22, X21, [X31 + 0x10]
	0x0271889C STRB W9, [X8 + 0xF]
	0x027188A0 LDP X30, X23, [X31], #0x30
	0x027188A4 RET
	0x027188A8 BL 0x1C16F20
	0x027188AC STP X30, X19, [X31 - 0x10]!
	0x027188B0 MOV X19, X0
	0x027188B4 LDR X0, [X0 + 0x20]
	0x027188B8 LDRB W8, [X0 + 0x135]
	0x027188BC TBNZ X8, 0x0, 0x27188C4
	0x027188C0 BL 0x1C5C684
	0x027188C4 LDR X8, [X0 + 0xC0]
	0x027188C8 LDR X0, [X8 + 0x8]
	0x027188CC LDRB W8, [X0 + 0x135]
	0x027188D0 TBNZ X8, 0x0, 0x27188D8
	0x027188D4 BL 0x1C5C684
	0x027188D8 LDR W8, [X0 + 0xE0]
	0x027188DC CBNZ W8, 0x27188E4
	0x027188E0 BL 0x1C16DFC
	0x027188E4 LDR X0, [X19 + 0x20]
	0x027188E8 LDRB W8, [X0 + 0x135]
	0x027188EC TBNZ X8, 0x0, 0x27188F4
	0x027188F0 BL 0x1C5C684
	0x027188F4 LDR X8, [X0 + 0xC0]
	0x027188F8 LDR X0, [X8 + 0x8]
	0x027188FC LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsPrimitive()

Disassembly:
	0x02718900 TBNZ X8, 0x0, 0x2718908
	0x02718904 BL 0x1C5C684
	0x02718908 LDR X8, [X0 + 0xB8]
	0x0271890C LDRB W0, [X8]
	0x02718910 LDP X30, X19, [X31], #0x10
	0x02718914 RET
	0x02718918 STP X30, X19, [X31 - 0x10]!
	0x0271891C MOV X19, X0
	0x02718920 LDR X0, [X0 + 0x20]
	0x02718924 LDRB W8, [X0 + 0x135]
	0x02718928 TBNZ X8, 0x0, 0x2718930
	0x0271892C BL 0x1C5C684
	0x02718930 LDR X8, [X0 + 0xC0]
	0x02718934 LDR X0, [X8 + 0x8]
	0x02718938 LDRB W8, [X0 + 0x135]
	0x0271893C TBNZ X8, 0x0, 0x2718944
	0x02718940 BL 0x1C5C684
	0x02718944 LDR W8, [X0 + 0xE0]
	0x02718948 CBNZ W8, 0x2718950
	0x0271894C BL 0x1C16DFC
	0x02718950 LDR X0, [X19 + 0x20]
	0x02718954 LDRB W8, [X0 + 0x135]
	0x02718958 TBNZ X8, 0x0, 0x2718960
	0x0271895C BL 0x1C5C684
	0x02718960 LDR X8, [X0 + 0xC0]
	0x02718964 LDR X0, [X8 + 0x8]
	0x02718968 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+1]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsInterface()

Disassembly:
	0x0271896C TBNZ X8, 0x0, 0x2718974
	0x02718970 BL 0x1C5C684
	0x02718974 LDR X8, [X0 + 0xB8]
	0x02718978 LDRB W0, [X8 + 0x1]
	0x0271897C LDP X30, X19, [X31], #0x10
	0x02718980 RET
	0x02718984 STP X30, X19, [X31 - 0x10]!
	0x02718988 MOV X19, X0
	0x0271898C LDR X0, [X0 + 0x20]
	0x02718990 LDRB W8, [X0 + 0x135]
	0x02718994 TBNZ X8, 0x0, 0x271899C
	0x02718998 BL 0x1C5C684
	0x0271899C LDR X8, [X0 + 0xC0]
	0x027189A0 LDR X0, [X8 + 0x8]
	0x027189A4 LDRB W8, [X0 + 0x135]
	0x027189A8 TBNZ X8, 0x0, 0x27189B0
	0x027189AC BL 0x1C5C684
	0x027189B0 LDR W8, [X0 + 0xE0]
	0x027189B4 CBNZ W8, 0x27189BC
	0x027189B8 BL 0x1C16DFC
	0x027189BC LDR X0, [X19 + 0x20]
	0x027189C0 LDRB W8, [X0 + 0x135]
	0x027189C4 TBNZ X8, 0x0, 0x27189CC
	0x027189C8 BL 0x1C5C684
	0x027189CC LDR X8, [X0 + 0xC0]
	0x027189D0 LDR X0, [X8 + 0x8]
	0x027189D4 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+2]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsAbstract()

Disassembly:
	0x027189D8 TBNZ X8, 0x0, 0x27189E0
	0x027189DC BL 0x1C5C684
	0x027189E0 LDR X8, [X0 + 0xB8]
	0x027189E4 LDRB W0, [X8 + 0x2]
	0x027189E8 LDP X30, X19, [X31], #0x10
	0x027189EC RET
	0x027189F0 STP X30, X19, [X31 - 0x10]!
	0x027189F4 MOV X19, X0
	0x027189F8 LDR X0, [X0 + 0x20]
	0x027189FC LDRB W8, [X0 + 0x135]
	0x02718A00 TBNZ X8, 0x0, 0x2718A08
	0x02718A04 BL 0x1C5C684
	0x02718A08 LDR X8, [X0 + 0xC0]
	0x02718A0C LDR X0, [X8 + 0x8]
	0x02718A10 LDRB W8, [X0 + 0x135]
	0x02718A14 TBNZ X8, 0x0, 0x2718A1C
	0x02718A18 BL 0x1C5C684
	0x02718A1C LDR W8, [X0 + 0xE0]
	0x02718A20 CBNZ W8, 0x2718A28
	0x02718A24 BL 0x1C16DFC
	0x02718A28 LDR X0, [X19 + 0x20]
	0x02718A2C LDRB W8, [X0 + 0x135]
	0x02718A30 TBNZ X8, 0x0, 0x2718A38
	0x02718A34 BL 0x1C5C684
	0x02718A38 LDR X8, [X0 + 0xC0]
	0x02718A3C LDR X0, [X8 + 0x8]
	0x02718A40 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+3]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsArray()

Disassembly:
	0x02718A44 TBNZ X8, 0x0, 0x2718A4C
	0x02718A48 BL 0x1C5C684
	0x02718A4C LDR X8, [X0 + 0xB8]
	0x02718A50 LDRB W0, [X8 + 0x3]
	0x02718A54 LDP X30, X19, [X31], #0x10
	0x02718A58 RET
	0x02718A5C STP X30, X19, [X31 - 0x10]!
	0x02718A60 MOV X19, X0
	0x02718A64 LDR X0, [X0 + 0x20]
	0x02718A68 LDRB W8, [X0 + 0x135]
	0x02718A6C TBNZ X8, 0x0, 0x2718A74
	0x02718A70 BL 0x1C5C684
	0x02718A74 LDR X8, [X0 + 0xC0]
	0x02718A78 LDR X0, [X8 + 0x8]
	0x02718A7C LDRB W8, [X0 + 0x135]
	0x02718A80 TBNZ X8, 0x0, 0x2718A88
	0x02718A84 BL 0x1C5C684
	0x02718A88 LDR W8, [X0 + 0xE0]
	0x02718A8C CBNZ W8, 0x2718A94
	0x02718A90 BL 0x1C16DFC
	0x02718A94 LDR X0, [X19 + 0x20]
	0x02718A98 LDRB W8, [X0 + 0x135]
	0x02718A9C TBNZ X8, 0x0, 0x2718AA4
	0x02718AA0 BL 0x1C5C684
	0x02718AA4 LDR X8, [X0 + 0xC0]
	0x02718AA8 LDR X0, [X8 + 0x8]
	0x02718AAC LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+4]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsEnum()

Disassembly:
	0x02718AB0 TBNZ X8, 0x0, 0x2718AB8
	0x02718AB4 BL 0x1C5C684
	0x02718AB8 LDR X8, [X0 + 0xB8]
	0x02718ABC LDRB W0, [X8 + 0x4]
	0x02718AC0 LDP X30, X19, [X31], #0x10
	0x02718AC4 RET
	0x02718AC8 STP X30, X19, [X31 - 0x10]!
	0x02718ACC MOV X19, X0
	0x02718AD0 LDR X0, [X0 + 0x20]
	0x02718AD4 LDRB W8, [X0 + 0x135]
	0x02718AD8 TBNZ X8, 0x0, 0x2718AE0
	0x02718ADC BL 0x1C5C684
	0x02718AE0 LDR X8, [X0 + 0xC0]
	0x02718AE4 LDR X0, [X8 + 0x8]
	0x02718AE8 LDRB W8, [X0 + 0x135]
	0x02718AEC TBNZ X8, 0x0, 0x2718AF4
	0x02718AF0 BL 0x1C5C684
	0x02718AF4 LDR W8, [X0 + 0xE0]
	0x02718AF8 CBNZ W8, 0x2718B00
	0x02718AFC BL 0x1C16DFC
	0x02718B00 LDR X0, [X19 + 0x20]
	0x02718B04 LDRB W8, [X0 + 0x135]
	0x02718B08 TBNZ X8, 0x0, 0x2718B10
	0x02718B0C BL 0x1C5C684
	0x02718B10 LDR X8, [X0 + 0xC0]
	0x02718B14 LDR X0, [X8 + 0x8]
	0x02718B18 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+6]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsNullable()

Disassembly:
	0x02718B1C TBNZ X8, 0x0, 0x2718B24
	0x02718B20 BL 0x1C5C684
	0x02718B24 LDR X8, [X0 + 0xB8]
	0x02718B28 LDRB W0, [X8 + 0x6]
	0x02718B2C LDP X30, X19, [X31], #0x10
	0x02718B30 RET
	0x02718B34 STP X30, X19, [X31 - 0x10]!
	0x02718B38 MOV X19, X0
	0x02718B3C LDR X0, [X0 + 0x20]
	0x02718B40 LDRB W8, [X0 + 0x135]
	0x02718B44 TBNZ X8, 0x0, 0x2718B4C
	0x02718B48 BL 0x1C5C684
	0x02718B4C LDR X8, [X0 + 0xC0]
	0x02718B50 LDR X0, [X8 + 0x8]
	0x02718B54 LDRB W8, [X0 + 0x135]
	0x02718B58 TBNZ X8, 0x0, 0x2718B60
	0x02718B5C BL 0x1C5C684
	0x02718B60 LDR W8, [X0 + 0xE0]
	0x02718B64 CBNZ W8, 0x2718B6C
	0x02718B68 BL 0x1C16DFC
	0x02718B6C LDR X0, [X19 + 0x20]
	0x02718B70 LDRB W8, [X0 + 0x135]
	0x02718B74 TBNZ X8, 0x0, 0x2718B7C
	0x02718B78 BL 0x1C5C684
	0x02718B7C LDR X8, [X0 + 0xC0]
	0x02718B80 LDR X0, [X8 + 0x8]
	0x02718B84 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+8]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsObject()

Disassembly:
	0x02718B88 TBNZ X8, 0x0, 0x2718B90
	0x02718B8C BL 0x1C5C684
	0x02718B90 LDR X8, [X0 + 0xB8]
	0x02718B94 LDRB W0, [X8 + 0x8]
	0x02718B98 LDP X30, X19, [X31], #0x10
	0x02718B9C RET
	0x02718BA0 STP X30, X19, [X31 - 0x10]!
	0x02718BA4 MOV X19, X0
	0x02718BA8 LDR X0, [X0 + 0x20]
	0x02718BAC LDRB W8, [X0 + 0x135]
	0x02718BB0 TBNZ X8, 0x0, 0x2718BB8
	0x02718BB4 BL 0x1C5C684
	0x02718BB8 LDR X8, [X0 + 0xC0]
	0x02718BBC LDR X0, [X8 + 0x8]
	0x02718BC0 LDRB W8, [X0 + 0x135]
	0x02718BC4 TBNZ X8, 0x0, 0x2718BCC
	0x02718BC8 BL 0x1C5C684
	0x02718BCC LDR W8, [X0 + 0xE0]
	0x02718BD0 CBNZ W8, 0x2718BD8
	0x02718BD4 BL 0x1C16DFC
	0x02718BD8 LDR X0, [X19 + 0x20]
	0x02718BDC LDRB W8, [X0 + 0x135]
	0x02718BE0 TBNZ X8, 0x0, 0x2718BE8
	0x02718BE4 BL 0x1C5C684
	0x02718BE8 LDR X8, [X0 + 0xC0]
	0x02718BEC LDR X0, [X8 + 0x8]
	0x02718BF0 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+9]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsString()

Disassembly:
	0x02718BF4 TBNZ X8, 0x0, 0x2718BFC
	0x02718BF8 BL 0x1C5C684
	0x02718BFC LDR X8, [X0 + 0xB8]
	0x02718C00 LDRB W0, [X8 + 0x9]
	0x02718C04 LDP X30, X19, [X31], #0x10
	0x02718C08 RET
	0x02718C0C STP X30, X19, [X31 - 0x10]!
	0x02718C10 MOV X19, X0
	0x02718C14 LDR X0, [X0 + 0x20]
	0x02718C18 LDRB W8, [X0 + 0x135]
	0x02718C1C TBNZ X8, 0x0, 0x2718C24
	0x02718C20 BL 0x1C5C684
	0x02718C24 LDR X8, [X0 + 0xC0]
	0x02718C28 LDR X0, [X8 + 0x8]
	0x02718C2C LDRB W8, [X0 + 0x135]
	0x02718C30 TBNZ X8, 0x0, 0x2718C38
	0x02718C34 BL 0x1C5C684
	0x02718C38 LDR W8, [X0 + 0xE0]
	0x02718C3C CBNZ W8, 0x2718C44
	0x02718C40 BL 0x1C16DFC
	0x02718C44 LDR X0, [X19 + 0x20]
	0x02718C48 LDRB W8, [X0 + 0x135]
	0x02718C4C TBNZ X8, 0x0, 0x2718C54
	0x02718C50 BL 0x1C5C684
	0x02718C54 LDR X8, [X0 + 0xC0]
	0x02718C58 LDR X0, [X8 + 0x8]
	0x02718C5C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+10]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsContainer()

Disassembly:
	0x02718C60 TBNZ X8, 0x0, 0x2718C68
	0x02718C64 BL 0x1C5C684
	0x02718C68 LDR X8, [X0 + 0xB8]
	0x02718C6C LDRB W0, [X8 + 0xA]
	0x02718C70 LDP X30, X19, [X31], #0x10
	0x02718C74 RET
	0x02718C78 STP X30, X19, [X31 - 0x10]!
	0x02718C7C MOV X19, X0
	0x02718C80 LDR X0, [X0 + 0x20]
	0x02718C84 LDRB W8, [X0 + 0x135]
	0x02718C88 TBNZ X8, 0x0, 0x2718C90
	0x02718C8C BL 0x1C5C684
	0x02718C90 LDR X8, [X0 + 0xC0]
	0x02718C94 LDR X0, [X8 + 0x8]
	0x02718C98 LDRB W8, [X0 + 0x135]
	0x02718C9C TBNZ X8, 0x0, 0x2718CA4
	0x02718CA0 BL 0x1C5C684
	0x02718CA4 LDR W8, [X0 + 0xE0]
	0x02718CA8 CBNZ W8, 0x2718CB0
	0x02718CAC BL 0x1C16DFC
	0x02718CB0 LDR X0, [X19 + 0x20]
	0x02718CB4 LDRB W8, [X0 + 0x135]
	0x02718CB8 TBNZ X8, 0x0, 0x2718CC0
	0x02718CBC BL 0x1C5C684
	0x02718CC0 LDR X8, [X0 + 0xC0]
	0x02718CC4 LDR X0, [X8 + 0x8]
	0x02718CC8 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+11]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_CanBeNull()

Disassembly:
	0x02718CCC TBNZ X8, 0x0, 0x2718CD4
	0x02718CD0 BL 0x1C5C684
	0x02718CD4 LDR X8, [X0 + 0xB8]
	0x02718CD8 LDRB W0, [X8 + 0xB]
	0x02718CDC LDP X30, X19, [X31], #0x10
	0x02718CE0 RET
	0x02718CE4 STP X30, X19, [X31 - 0x10]!
	0x02718CE8 MOV X19, X0
	0x02718CEC LDR X0, [X0 + 0x20]
	0x02718CF0 LDRB W8, [X0 + 0x135]
	0x02718CF4 TBNZ X8, 0x0, 0x2718CFC
	0x02718CF8 BL 0x1C5C684
	0x02718CFC LDR X8, [X0 + 0xC0]
	0x02718D00 LDR X0, [X8 + 0x8]
	0x02718D04 LDRB W8, [X0 + 0x135]
	0x02718D08 TBNZ X8, 0x0, 0x2718D10
	0x02718D0C BL 0x1C5C684
	0x02718D10 LDR W8, [X0 + 0xE0]
	0x02718D14 CBNZ W8, 0x2718D1C
	0x02718D18 BL 0x1C16DFC
	0x02718D1C LDR X0, [X19 + 0x20]
	0x02718D20 LDRB W8, [X0 + 0x135]
	0x02718D24 TBNZ X8, 0x0, 0x2718D2C
	0x02718D28 BL 0x1C5C684
	0x02718D2C LDR X8, [X0 + 0xC0]
	0x02718D30 LDR X0, [X8 + 0x8]
	0x02718D34 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+12]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Boolean get_IsAbstractOrInterface()

Disassembly:
	0x02718D38 TBNZ X8, 0x0, 0x2718D40
	0x02718D3C BL 0x1C5C684
	0x02718D40 LDR X8, [X0 + 0xB8]
	0x02718D44 LDRB W0, [X8 + 0xC]
	0x02718D48 LDP X30, X19, [X31], #0x10
	0x02718D4C RET
	0x02718D50 STP X30, X19, [X31 - 0x10]!
	0x02718D54 MOV X19, X0
	0x02718D58 LDR X0, [X0 + 0x20]
	0x02718D5C LDRB W8, [X0 + 0x135]
	0x02718D60 TBNZ X8, 0x0, 0x2718D68
	0x02718D64 BL 0x1C5C684
	0x02718D68 LDR X8, [X0 + 0xC0]
	0x02718D6C LDR X0, [X8 + 0x8]
	0x02718D70 LDRB W8, [X0 + 0x135]
	0x02718D74 TBNZ X8, 0x0, 0x2718D7C
	0x02718D78 BL 0x1C5C684
	0x02718D7C LDR W8, [X0 + 0xE0]
	0x02718D80 CBNZ W8, 0x2718D88
	0x02718D84 BL 0x1C16DFC
	0x02718D88 LDR X0, [X19 + 0x20]
	0x02718D8C LDRB W8, [X0 + 0x135]
	0x02718D90 TBNZ X8, 0x0, 0x2718D98
	0x02718D94 BL 0x1C5C684
	0x02718D98 LDR X8, [X0 + 0xC0]
	0x02718D9C LDR X0, [X8 + 0x8]
	0x02718DA0 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move W0, [X8+14]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Void .cctor()

Disassembly:
	0x02718DA4 TBNZ X8, 0x0, 0x2718DAC
	0x02718DA8 BL 0x1C5C684
	0x02718DAC LDR X8, [X0 + 0xB8]
	0x02718DB0 LDRB W0, [X8 + 0xE]
	0x02718DB4 LDP X30, X19, [X31], #0x10
	0x02718DB8 RET
	0x02718DBC STP X30, X23, [X31 - 0x30]!
	0x02718DC0 STP X22, X21, [X31 + 0x10]
	0x02718DC4 STP X20, X19, [X31 + 0x20]
	0x02718DC8 ADRP X20, 0x1CC2000
	0x02718DCC LDRB W8, [X20 + 0x630]
	0x02718DD0 MOV X19, X0
	0x02718DD4 TBNZ X8, 0x0, 0x2718E28
	0x02718DD8 ADRP X0, 0x1A05000
	0x02718DDC LDR X0, [X0 + 0x990]
	0x02718DE0 BL 0x1C16CF4
	0x02718DE4 ADRP X0, 0x1A05000
	0x02718DE8 LDR X0, [X0 + 0x998]
	0x02718DEC BL 0x1C16CF4
	0x02718DF0 ADRP X0, 0x1A03000
	0x02718DF4 LDR X0, [X0 + 0x7F8]
	0x02718DF8 BL 0x1C16CF4
	0x02718DFC ADRP X0, 0x19E5000
	0x02718E00 LDR X0, [X0 + 0x968]
	0x02718E04 BL 0x1C16CF4
	0x02718E08 ADRP X0, 0x1A03000
	0x02718E0C LDR X0, [X0 + 0xB60]
	0x02718E10 BL 0x1C16CF4
	0x02718E14 ADRP X0, 0x19DB000
	0x02718E18 LDR X0, [X0 + 0x6C0]
	0x02718E1C BL 0x1C16CF4
	0x02718E20 MOVZ W8, 0x1
	0x02718E24 STRB W8, [X20 + 0x630]
	0x02718E28 LDR X0, [X19 + 0x20]!
	0x02718E2C ADRP X23, 0x19DB000
	0x02718E30 LDRB W8, [X0 + 0x135]
	0x02718E34 LDR X23, [X23 + 0x6C0]
	0x02718E38 TBNZ X8, 0x0, 0x2718E40
	0x02718E3C BL 0x1C5C684
	0x02718E40 LDR X8, [X23]
	0x02718E44 LDR X9, [X0 + 0xC0]
	0x02718E48 LDR W10, [X8 + 0xE0]
	0x02718E4C LDR X20, [X9 + 0x10]
	0x02718E50 CBNZ W10, 0x2718E5C
	0x02718E54 MOV X0, X8
	0x02718E58 BL 0x1C16DFC
	0x02718E5C MOV X0, X20
	0x02718E60 MOV X1, X31
	0x02718E64 BL 0x338C698
	0x02718E68 CBZ X0, 0x27198C0
	0x02718E6C MOV X1, X31
	0x02718E70 MOV X20, X0
	0x02718E74 BL 0x33970C4
	0x02718E78 LDR X8, [X19]
	0x02718E7C AND W21, W0, 0x1
	0x02718E80 LDRB W9, [X8 + 0x135]
	0x02718E84 TBNZ X9, 0x0, 0x2718E94
	0x02718E88 MOV X0, X8
	0x02718E8C BL 0x1C5C684
	0x02718E90 MOV X8, X0
	0x02718E94 LDR X8, [X8 + 0xC0]
	0x02718E98 LDR X0, [X8 + 0x8]
	0x02718E9C LDRB W8, [X0 + 0x135]
	0x02718EA0 TBNZ X8, 0x0, 0x2718EA8
	0x02718EA4 BL 0x1C5C684
	0x02718EA8 LDR X8, [X0 + 0xB8]
	0x02718EAC MOV X0, X20
	0x02718EB0 MOV X1, X31
	0x02718EB4 STRB W21, [X8]
	0x02718EB8 BL 0x3397374
	0x02718EBC LDR X8, [X19]
	0x02718EC0 AND W21, W0, 0x1
	0x02718EC4 LDRB W9, [X8 + 0x135]
	0x02718EC8 TBNZ X9, 0x0, 0x2718ED8
	0x02718ECC MOV X0, X8
	0x02718ED0 BL 0x1C5C684
	0x02718ED4 MOV X8, X0
	0x02718ED8 LDR X8, [X8 + 0xC0]
	0x02718EDC LDR X0, [X8 + 0x8]
	0x02718EE0 LDRB W8, [X0 + 0x135]
	0x02718EE4 TBNZ X8, 0x0, 0x2718EEC
	0x02718EE8 BL 0x1C5C684
	0x02718EEC LDR X8, [X0 + 0xB8]
	0x02718EF0 MOV X0, X20
	0x02718EF4 MOV X1, X31
	0x02718EF8 STRB W21, [X8 + 0x1]
	0x02718EFC BL 0x33962E8
	0x02718F00 LDR X8, [X19]
	0x02718F04 AND W21, W0, 0x1
	0x02718F08 LDRB W9, [X8 + 0x135]
	0x02718F0C TBNZ X9, 0x0, 0x2718F1C
	0x02718F10 MOV X0, X8
	0x02718F14 BL 0x1C5C684
	0x02718F18 MOV X8, X0
	0x02718F1C LDR X8, [X8 + 0xC0]
	0x02718F20 LDR X0, [X8 + 0x8]
	0x02718F24 LDRB W8, [X0 + 0x135]
	0x02718F28 TBNZ X8, 0x0, 0x2718F30
	0x02718F2C BL 0x1C5C684
	0x02718F30 LDR X8, [X0 + 0xB8]
	0x02718F34 MOV X0, X20
	0x02718F38 MOV X1, X31
	0x02718F3C STRB W21, [X8 + 0x2]
	0x02718F40 BL 0x339703C
	0x02718F44 LDR X8, [X19]
	0x02718F48 AND W21, W0, 0x1
	0x02718F4C LDRB W9, [X8 + 0x135]
	0x02718F50 TBNZ X9, 0x0, 0x2718F60
	0x02718F54 MOV X0, X8
	0x02718F58 BL 0x1C5C684
	0x02718F5C MOV X8, X0
	0x02718F60 LDR X8, [X8 + 0xC0]
	0x02718F64 LDR X0, [X8 + 0x8]
	0x02718F68 LDRB W8, [X0 + 0x135]
	0x02718F6C TBNZ X8, 0x0, 0x2718F74
	0x02718F70 BL 0x1C5C684
	0x02718F74 LDR X8, [X0 + 0xB8]
	0x02718F78 MOV X0, X20
	0x02718F7C MOV X1, X31
	0x02718F80 STRB W21, [X8 + 0x3]
	0x02718F84 BL 0x3396BF8
	0x02718F88 LDR X8, [X19]
	0x02718F8C AND W21, W0, 0x1
	0x02718F90 LDRB W9, [X8 + 0x135]
	0x02718F94 TBNZ X9, 0x0, 0x2718FA4
	0x02718F98 MOV X0, X8
	0x02718F9C BL 0x1C5C684
	0x02718FA0 MOV X8, X0
	0x02718FA4 LDR X8, [X8 + 0xC0]
	0x02718FA8 LDR X0, [X8 + 0x8]
	0x02718FAC LDRB W8, [X0 + 0x135]
	0x02718FB0 TBNZ X8, 0x0, 0x2718FB8
	0x02718FB4 BL 0x1C5C684
	0x02718FB8 LDR X8, [X0 + 0xB8]
	0x02718FBC MOV X0, X20
	0x02718FC0 STRB W21, [X8 + 0x4]
	0x02718FC4 LDR X8, [X20]
	0x02718FC8 LDR X9, [X8 + 0x588]
	0x02718FCC LDR X1, [X8 + 0x590]
	0x02718FD0 BLR X9
	0x02718FD4 LDR X8, [X19]
	0x02718FD8 AND W21, W0, 0x1
	0x02718FDC LDRB W9, [X8 + 0x135]
	0x02718FE0 TBNZ X9, 0x0, 0x2718FF0
	0x02718FE4 MOV X0, X8
	0x02718FE8 BL 0x1C5C684
	0x02718FEC MOV X8, X0
	0x02718FF0 LDR X8, [X8 + 0xC0]
	0x02718FF4 LDR X0, [X8 + 0x8]
	0x02718FF8 LDRB W8, [X0 + 0x135]
	0x02718FFC TBNZ X8, 0x0, 0x2719004
	0x02719000 BL 0x1C5C684
	0x02719004 LDR X8, [X0 + 0xB8]
	0x02719008 STRB W21, [X8 + 0x6]
	0x0271900C LDR X0, [X19]
	0x02719010 LDRB W8, [X0 + 0x135]
	0x02719014 TBNZ X8, 0x0, 0x271901C
	0x02719018 BL 0x1C5C684
	0x0271901C LDR X8, [X0 + 0xC0]
	0x02719020 LDR X21, [X8 + 0x18]
	0x02719024 LDR X0, [X21 + 0x20]
	0x02719028 LDRB W8, [X0 + 0x135]
	0x0271902C TBNZ X8, 0x0, 0x2719034
	0x02719030 BL 0x1C5C684
	0x02719034 LDR X8, [X0 + 0xC0]
	0x02719038 LDR X0, [X8 + 0x8]
	0x0271903C LDRB W8, [X0 + 0x135]
	0x02719040 TBNZ X8, 0x0, 0x2719048
	0x02719044 BL 0x1C5C684
	0x02719048 LDR W8, [X0 + 0xE0]
	0x0271904C CBNZ W8, 0x2719054
	0x02719050 BL 0x1C16DFC
	0x02719054 LDR X0, [X21 + 0x20]
	0x02719058 LDRB W8, [X0 + 0x135]
	0x0271905C TBNZ X8, 0x0, 0x2719064
	0x02719060 BL 0x1C5C684
	0x02719064 LDR X8, [X0 + 0xC0]
	0x02719068 LDR X0, [X8 + 0x8]
	0x0271906C LDRB W8, [X0 + 0x135]
	0x02719070 TBNZ X8, 0x0, 0x2719078
	0x02719074 BL 0x1C5C684
	0x02719078 LDR X8, [X0 + 0xB8]
	0x0271907C LDRB W8, [X8 + 0x6]
	0x02719080 CBZ W8, 0x27190A4
	0x02719084 ADRP X8, 0x1A04000
	0x02719088 LDR X8, [X8 + 0x990]
	0x0271908C MOV X0, X20
	0x02719090 LDR X1, [X8]
	0x02719094 BL 0x21A891C
	0x02719098 CMP X0, 0x0
	0x0271909C CSET W21, NE
	0x027190A0 B 0x27190A8
	0x027190A4 MOV W21, W31
	0x027190A8 LDR X0, [X19]
	0x027190AC LDRB W8, [X0 + 0x135]
	0x027190B0 TBNZ X8, 0x0, 0x27190B8
	0x027190B4 BL 0x1C5C684
	0x027190B8 LDR X8, [X0 + 0xC0]
	0x027190BC LDR X0, [X8 + 0x8]
	0x027190C0 LDRB W8, [X0 + 0x135]
	0x027190C4 TBNZ X8, 0x0, 0x27190CC
	0x027190C8 BL 0x1C5C684
	0x027190CC LDR X8, [X0 + 0xB8]
	0x027190D0 STRB W21, [X8 + 0x7]
	0x027190D4 LDR X0, [X19]
	0x027190D8 LDRB W8, [X0 + 0x135]
	0x027190DC TBNZ X8, 0x0, 0x27190E4
	0x027190E0 BL 0x1C5C684
	0x027190E4 LDR X8, [X23]
	0x027190E8 LDR X9, [X0 + 0xC0]
	0x027190EC LDR W10, [X8 + 0xE0]
	0x027190F0 LDR X21, [X9 + 0x10]
	0x027190F4 CBNZ W10, 0x2719100
	0x027190F8 MOV X0, X8
	0x027190FC BL 0x1C16DFC
	0x02719100 MOV X0, X21
	0x02719104 MOV X1, X31
	0x02719108 BL 0x338C698
	0x0271910C MOV X1, X31
	0x02719110 BL 0x3380420
	0x02719114 MOV X1, X31
	0x02719118 MOV X2, X31
	0x0271911C BL 0x3395F0C
	0x02719120 LDR X8, [X19]
	0x02719124 AND W21, W0, 0x1
	0x02719128 LDRB W9, [X8 + 0x135]
	0x0271912C TBNZ X9, 0x0, 0x271913C
	0x02719130 MOV X0, X8
	0x02719134 BL 0x1C5C684
	0x02719138 MOV X8, X0
	0x0271913C LDR X8, [X8 + 0xC0]
	0x02719140 LDR X0, [X8 + 0x8]
	0x02719144 LDRB W8, [X0 + 0x135]
	0x02719148 TBNZ X8, 0x0, 0x2719150
	0x0271914C BL 0x1C5C684
	0x02719150 LDR X8, [X0 + 0xB8]
	0x02719154 STRB W21, [X8 + 0x8]
	0x02719158 LDR X0, [X19]
	0x0271915C LDRB W8, [X0 + 0x135]
	0x02719160 TBNZ X8, 0x0, 0x2719168
	0x02719164 BL 0x1C5C684
	0x02719168 LDR X8, [X0 + 0xC0]
	0x0271916C LDR X21, [X8 + 0x20]
	0x02719170 LDR X0, [X21 + 0x20]
	0x02719174 LDRB W8, [X0 + 0x135]
	0x02719178 TBNZ X8, 0x0, 0x2719180
	0x0271917C BL 0x1C5C684
	0x02719180 LDR X8, [X0 + 0xC0]
	0x02719184 LDR X0, [X8 + 0x8]
	0x02719188 LDRB W8, [X0 + 0x135]
	0x0271918C TBNZ X8, 0x0, 0x2719194
	0x02719190 BL 0x1C5C684
	0x02719194 LDR W8, [X0 + 0xE0]
	0x02719198 CBNZ W8, 0x27191A0
	0x0271919C BL 0x1C16DFC
	0x027191A0 LDR X0, [X21 + 0x20]
	0x027191A4 LDRB W8, [X0 + 0x135]
	0x027191A8 TBNZ X8, 0x0, 0x27191B0
	0x027191AC BL 0x1C5C684
	0x027191B0 LDR X8, [X0 + 0xC0]
	0x027191B4 LDR X0, [X8 + 0x8]
	0x027191B8 LDRB W8, [X0 + 0x135]
	0x027191BC TBNZ X8, 0x0, 0x27191C4
	0x027191C0 BL 0x1C5C684
	0x027191C4 LDR X8, [X0 + 0xB8]
	0x027191C8 LDRB W8, [X8 + 0x4]
	0x027191CC CBZ W8, 0x2719228
	0x027191D0 LDR X0, [X19]
	0x027191D4 LDRB W8, [X0 + 0x135]
	0x027191D8 TBNZ X8, 0x0, 0x27191E0
	0x027191DC BL 0x1C5C684
	0x027191E0 LDR X8, [X23]
	0x027191E4 LDR X9, [X0 + 0xC0]
	0x027191E8 LDR W10, [X8 + 0xE0]
	0x027191EC LDR X21, [X9 + 0x10]
	0x027191F0 CBNZ W10, 0x27191FC
	0x027191F4 MOV X0, X8
	0x027191F8 BL 0x1C16DFC
	0x027191FC MOV X0, X21
	0x02719200 MOV X1, X31
	0x02719204 BL 0x338C698
	0x02719208 CBZ X0, 0x27198C0
	0x0271920C LDR X8, [X0]
	0x02719210 LDR X9, [X8 + 0x438]
	0x02719214 LDR X1, [X8 + 0x440]
	0x02719218 BLR X9
	0x0271921C CMP W0, 0x1
	0x02719220 CSET W21, NE
	0x02719224 B 0x271922C
	0x02719228 MOV W21, W31
	0x0271922C LDR X0, [X19]
	0x02719230 LDRB W8, [X0 + 0x135]
	0x02719234 TBNZ X8, 0x0, 0x271923C
	0x02719238 BL 0x1C5C684
	0x0271923C LDR X8, [X0 + 0xC0]
	0x02719240 ADRP X22, 0x19E4000
	0x02719244 LDR X0, [X8 + 0x8]
	0x02719248 LDRB W8, [X0 + 0x135]
	0x0271924C LDR X22, [X22 + 0x968]
	0x02719250 TBNZ X8, 0x0, 0x2719258
	0x02719254 BL 0x1C5C684
	0x02719258 LDR X8, [X0 + 0xB8]
	0x0271925C STRB W21, [X8 + 0x5]
	0x02719260 LDR X0, [X23]
	0x02719264 LDR X21, [X22]
	0x02719268 LDR W8, [X0 + 0xE0]
	0x0271926C CBNZ W8, 0x2719274
	0x02719270 BL 0x1C16DFC
	0x02719274 MOV X0, X21
	0x02719278 MOV X1, X31
	0x0271927C BL 0x338C698
	0x02719280 MOV X1, X0
	0x02719284 MOV X0, X20
	0x02719288 MOV X2, X31
	0x0271928C BL 0x3395194
	0x02719290 LDR X8, [X19]
	0x02719294 AND W21, W0, 0x1
	0x02719298 LDRB W9, [X8 + 0x135]
	0x0271929C TBNZ X9, 0x0, 0x27192AC
	0x027192A0 MOV X0, X8
	0x027192A4 BL 0x1C5C684
	0x027192A8 MOV X8, X0
	0x027192AC LDR X8, [X8 + 0xC0]
	0x027192B0 ADRP X22, 0x1A02000
	0x027192B4 LDR X0, [X8 + 0x8]
	0x027192B8 LDRB W8, [X0 + 0x135]
	0x027192BC LDR X22, [X22 + 0xB60]
	0x027192C0 TBNZ X8, 0x0, 0x27192C8
	0x027192C4 BL 0x1C5C684
	0x027192C8 LDR X8, [X0 + 0xB8]
	0x027192CC MOV X1, X31
	0x027192D0 STRB W21, [X8 + 0x9]
	0x027192D4 LDR X0, [X22]
	0x027192D8 BL 0x338C698
	0x027192DC MOV X1, X0
	0x027192E0 MOV X0, X20
	0x027192E4 MOV X2, X31
	0x027192E8 BL 0x3395194
	0x027192EC LDR X8, [X19]
	0x027192F0 AND W21, W0, 0x1
	0x027192F4 LDRB W9, [X8 + 0x135]
	0x027192F8 TBNZ X9, 0x0, 0x2719308
	0x027192FC MOV X0, X8
	0x02719300 BL 0x1C5C684
	0x02719304 MOV X8, X0
	0x02719308 LDR X8, [X8 + 0xC0]
	0x0271930C LDR X0, [X8 + 0x8]
	0x02719310 LDRB W8, [X0 + 0x135]
	0x02719314 TBNZ X8, 0x0, 0x271931C
	0x02719318 BL 0x1C5C684
	0x0271931C LDR X8, [X0 + 0xB8]
	0x02719320 MOV X0, X20
	0x02719324 MOV X1, X31
	0x02719328 STRB W21, [X8 + 0xA]
	0x0271932C BL 0x3C91284
	0x02719330 LDR X8, [X19]
	0x02719334 AND W21, W0, 0x1
	0x02719338 LDRB W9, [X8 + 0x135]
	0x0271933C TBNZ X9, 0x0, 0x271934C
	0x02719340 MOV X0, X8
	0x02719344 BL 0x1C5C684
	0x02719348 MOV X8, X0
	0x0271934C LDR X8, [X8 + 0xC0]
	0x02719350 LDR X0, [X8 + 0x8]
	0x02719354 LDRB W8, [X0 + 0x135]
	0x02719358 TBNZ X8, 0x0, 0x2719360
	0x0271935C BL 0x1C5C684
	0x02719360 LDR X8, [X0 + 0xB8]
	0x02719364 STRB W21, [X8 + 0xB]
	0x02719368 LDR X0, [X19]
	0x0271936C LDRB W8, [X0 + 0x135]
	0x02719370 TBNZ X8, 0x0, 0x2719378
	0x02719374 BL 0x1C5C684
	0x02719378 LDR X8, [X0 + 0xC0]
	0x0271937C LDR X21, [X8 + 0x28]
	0x02719380 LDR X0, [X21 + 0x20]
	0x02719384 LDRB W8, [X0 + 0x135]
	0x02719388 TBNZ X8, 0x0, 0x2719390
	0x0271938C BL 0x1C5C684
	0x02719390 LDR X8, [X0 + 0xC0]
	0x02719394 LDR X0, [X8 + 0x8]
	0x02719398 LDRB W8, [X0 + 0x135]
	0x0271939C TBNZ X8, 0x0, 0x27193A4
	0x027193A0 BL 0x1C5C684
	0x027193A4 LDR W8, [X0 + 0xE0]
	0x027193A8 CBNZ W8, 0x27193B0
	0x027193AC BL 0x1C16DFC
	0x027193B0 LDR X0, [X21 + 0x20]
	0x027193B4 LDRB W8, [X0 + 0x135]
	0x027193B8 TBNZ X8, 0x0, 0x27193C0
	0x027193BC BL 0x1C5C684
	0x027193C0 LDR X8, [X0 + 0xC0]
	0x027193C4 LDR X0, [X8 + 0x8]
	0x027193C8 LDRB W8, [X0 + 0x135]
	0x027193CC TBNZ X8, 0x0, 0x27193D4
	0x027193D0 BL 0x1C5C684
	0x027193D4 LDR X8, [X19]
	0x027193D8 LDR X9, [X0 + 0xB8]
	0x027193DC LDRB W10, [X8 + 0x135]
	0x027193E0 LDRB W21, [X9]
	0x027193E4 TBNZ X10, 0x0, 0x27193F4
	0x027193E8 MOV X0, X8
	0x027193EC BL 0x1C5C684
	0x027193F0 MOV X8, X0
	0x027193F4 LDR X8, [X8 + 0xC0]
	0x027193F8 LDR X0, [X8 + 0x8]
	0x027193FC LDRB W8, [X0 + 0x135]
	0x02719400 TBNZ X8, 0x0, 0x2719408
	0x02719404 BL 0x1C5C684
	0x02719408 LDR X8, [X0 + 0xB8]
	0x0271940C EOR W9, W21, 0x1
	0x02719410 STRB W9, [X8 + 0xC]
	0x02719414 LDR X0, [X19]
	0x02719418 LDRB W8, [X0 + 0x135]
	0x0271941C TBNZ X8, 0x0, 0x2719424
	0x02719420 BL 0x1C5C684
	0x02719424 LDR X8, [X0 + 0xC0]
	0x02719428 LDR X21, [X8 + 0x30]
	0x0271942C LDR X0, [X21 + 0x20]
	0x02719430 LDRB W8, [X0 + 0x135]
	0x02719434 TBNZ X8, 0x0, 0x271943C
	0x02719438 BL 0x1C5C684
	0x0271943C LDR X8, [X0 + 0xC0]
	0x02719440 LDR X0, [X8 + 0x8]
	0x02719444 LDRB W8, [X0 + 0x135]
	0x02719448 TBNZ X8, 0x0, 0x2719450
	0x0271944C BL 0x1C5C684
	0x02719450 LDR W8, [X0 + 0xE0]
	0x02719454 CBNZ W8, 0x271945C
	0x02719458 BL 0x1C16DFC
	0x0271945C LDR X0, [X21 + 0x20]
	0x02719460 LDRB W8, [X0 + 0x135]
	0x02719464 TBNZ X8, 0x0, 0x271946C
	0x02719468 BL 0x1C5C684
	0x0271946C LDR X8, [X0 + 0xC0]
	0x02719470 LDR X0, [X8 + 0x8]
	0x02719474 LDRB W8, [X0 + 0x135]
	0x02719478 TBNZ X8, 0x0, 0x2719480
	0x0271947C BL 0x1C5C684
	0x02719480 LDR X8, [X0 + 0xB8]
	0x02719484 LDRB W8, [X8 + 0x1]
	0x02719488 CBZ W8, 0x2719494
	0x0271948C MOVZ W21, 0x1
	0x02719490 B 0x2719510
	0x02719494 LDR X0, [X19]
	0x02719498 LDRB W8, [X0 + 0x135]
	0x0271949C TBNZ X8, 0x0, 0x27194A4
	0x027194A0 BL 0x1C5C684
	0x027194A4 LDR X8, [X0 + 0xC0]
	0x027194A8 LDR X21, [X8 + 0x38]
	0x027194AC LDR X0, [X21 + 0x20]
	0x027194B0 LDRB W8, [X0 + 0x135]
	0x027194B4 TBNZ X8, 0x0, 0x27194BC
	0x027194B8 BL 0x1C5C684
	0x027194BC LDR X8, [X0 + 0xC0]
	0x027194C0 LDR X0, [X8 + 0x8]
	0x027194C4 LDRB W8, [X0 + 0x135]
	0x027194C8 TBNZ X8, 0x0, 0x27194D0
	0x027194CC BL 0x1C5C684
	0x027194D0 LDR W8, [X0 + 0xE0]
	0x027194D4 CBNZ W8, 0x27194DC
	0x027194D8 BL 0x1C16DFC
	0x027194DC LDR X0, [X21 + 0x20]
	0x027194E0 LDRB W8, [X0 + 0x135]
	0x027194E4 TBNZ X8, 0x0, 0x27194EC
	0x027194E8 BL 0x1C5C684
	0x027194EC LDR X8, [X0 + 0xC0]
	0x027194F0 LDR X0, [X8 + 0x8]
	0x027194F4 LDRB W8, [X0 + 0x135]
	0x027194F8 TBNZ X8, 0x0, 0x2719500
	0x027194FC BL 0x1C5C684
	0x02719500 LDR X8, [X0 + 0xB8]
	0x02719504 LDRB W8, [X8 + 0xA]
	0x02719508 CMP W8, 0x0
	0x0271950C CSET W21, NE
	0x02719510 LDR X0, [X19]
	0x02719514 LDRB W8, [X0 + 0x135]
	0x02719518 TBNZ X8, 0x0, 0x2719520
	0x0271951C BL 0x1C5C684
	0x02719520 LDR X8, [X0 + 0xC0]
	0x02719524 LDR X0, [X8 + 0x8]
	0x02719528 LDRB W8, [X0 + 0x135]
	0x0271952C TBNZ X8, 0x0, 0x2719534
	0x02719530 BL 0x1C5C684
	0x02719534 LDR X8, [X0 + 0xB8]
	0x02719538 STRB W21, [X8 + 0xD]
	0x0271953C LDR X0, [X19]
	0x02719540 LDRB W8, [X0 + 0x135]
	0x02719544 TBNZ X8, 0x0, 0x271954C
	0x02719548 BL 0x1C5C684
	0x0271954C LDR X8, [X0 + 0xC0]
	0x02719550 LDR X21, [X8 + 0x40]
	0x02719554 LDR X0, [X21 + 0x20]
	0x02719558 LDRB W8, [X0 + 0x135]
	0x0271955C TBNZ X8, 0x0, 0x2719564
	0x02719560 BL 0x1C5C684
	0x02719564 LDR X8, [X0 + 0xC0]
	0x02719568 LDR X0, [X8 + 0x8]
	0x0271956C LDRB W8, [X0 + 0x135]
	0x02719570 TBNZ X8, 0x0, 0x2719578
	0x02719574 BL 0x1C5C684
	0x02719578 LDR W8, [X0 + 0xE0]
	0x0271957C CBNZ W8, 0x2719584
	0x02719580 BL 0x1C16DFC
	0x02719584 LDR X0, [X21 + 0x20]
	0x02719588 LDRB W8, [X0 + 0x135]
	0x0271958C TBNZ X8, 0x0, 0x2719594
	0x02719590 BL 0x1C5C684
	0x02719594 LDR X8, [X0 + 0xC0]
	0x02719598 LDR X0, [X8 + 0x8]
	0x0271959C LDRB W8, [X0 + 0x135]
	0x027195A0 TBNZ X8, 0x0, 0x27195A8
	0x027195A4 BL 0x1C5C684
	0x027195A8 LDR X8, [X0 + 0xB8]
	0x027195AC LDRB W8, [X8 + 0x3]
	0x027195B0 CBZ W8, 0x27195BC
	0x027195B4 MOVZ W21, 0x1
	0x027195B8 B 0x2719638
	0x027195BC LDR X0, [X19]
	0x027195C0 LDRB W8, [X0 + 0x135]
	0x027195C4 TBNZ X8, 0x0, 0x27195CC
	0x027195C8 BL 0x1C5C684
	0x027195CC LDR X8, [X0 + 0xC0]
	0x027195D0 LDR X21, [X8 + 0x48]
	0x027195D4 LDR X0, [X21 + 0x20]
	0x027195D8 LDRB W8, [X0 + 0x135]
	0x027195DC TBNZ X8, 0x0, 0x27195E4
	0x027195E0 BL 0x1C5C684
	0x027195E4 LDR X8, [X0 + 0xC0]
	0x027195E8 LDR X0, [X8 + 0x8]
	0x027195EC LDRB W8, [X0 + 0x135]
	0x027195F0 TBNZ X8, 0x0, 0x27195F8
	0x027195F4 BL 0x1C5C684
	0x027195F8 LDR W8, [X0 + 0xE0]
	0x027195FC CBNZ W8, 0x2719604
	0x02719600 BL 0x1C16DFC
	0x02719604 LDR X0, [X21 + 0x20]
	0x02719608 LDRB W8, [X0 + 0x135]
	0x0271960C TBNZ X8, 0x0, 0x2719614
	0x02719610 BL 0x1C5C684
	0x02719614 LDR X8, [X0 + 0xC0]
	0x02719618 LDR X0, [X8 + 0x8]
	0x0271961C LDRB W8, [X0 + 0x135]
	0x02719620 TBNZ X8, 0x0, 0x2719628
	0x02719624 BL 0x1C5C684
	0x02719628 LDR X8, [X0 + 0xB8]
	0x0271962C LDRB W8, [X8 + 0x2]
	0x02719630 CMP W8, 0x0
	0x02719634 CSET W21, NE
	0x02719638 LDR X0, [X19]
	0x0271963C LDRB W8, [X0 + 0x135]
	0x02719640 TBNZ X8, 0x0, 0x2719648
	0x02719644 BL 0x1C5C684
	0x02719648 LDR X8, [X0 + 0xC0]
	0x0271964C LDR X0, [X8 + 0x8]
	0x02719650 LDRB W8, [X0 + 0x135]
	0x02719654 TBNZ X8, 0x0, 0x271965C
	0x02719658 BL 0x1C5C684
	0x0271965C LDR X8, [X0 + 0xB8]
	0x02719660 STRB W21, [X8 + 0xE]
	0x02719664 LDR X0, [X19]
	0x02719668 LDRB W8, [X0 + 0x135]
	0x0271966C TBNZ X8, 0x0, 0x2719674
	0x02719670 BL 0x1C5C684
	0x02719674 LDR X8, [X0 + 0xC0]
	0x02719678 LDR X21, [X8 + 0x50]
	0x0271967C LDR X0, [X21 + 0x20]
	0x02719680 LDRB W8, [X0 + 0x135]
	0x02719684 TBNZ X8, 0x0, 0x271968C
	0x02719688 BL 0x1C5C684
	0x0271968C LDR X8, [X0 + 0xC0]
	0x02719690 LDR X0, [X8 + 0x8]
	0x02719694 LDRB W8, [X0 + 0x135]
	0x02719698 TBNZ X8, 0x0, 0x27196A0
	0x0271969C BL 0x1C5C684
	0x027196A0 LDR W8, [X0 + 0xE0]
	0x027196A4 CBNZ W8, 0x27196AC
	0x027196A8 BL 0x1C16DFC
	0x027196AC LDR X0, [X21 + 0x20]
	0x027196B0 LDRB W8, [X0 + 0x135]
	0x027196B4 TBNZ X8, 0x0, 0x27196BC
	0x027196B8 BL 0x1C5C684
	0x027196BC LDR X8, [X0 + 0xC0]
	0x027196C0 LDR X0, [X8 + 0x8]
	0x027196C4 LDRB W8, [X0 + 0x135]
	0x027196C8 TBNZ X8, 0x0, 0x27196D0
	0x027196CC BL 0x1C5C684
	0x027196D0 LDR X8, [X19]
	0x027196D4 LDR X9, [X0 + 0xB8]
	0x027196D8 LDRB W10, [X8 + 0x135]
	0x027196DC LDRB W21, [X9 + 0xC]
	0x027196E0 TBNZ X10, 0x0, 0x27196F0
	0x027196E4 MOV X0, X8
	0x027196E8 BL 0x1C5C684
	0x027196EC MOV X8, X0
	0x027196F0 LDR X8, [X8 + 0xC0]
	0x027196F4 LDR X22, [X8 + 0x58]
	0x027196F8 LDR X0, [X22 + 0x20]
	0x027196FC LDRB W8, [X0 + 0x135]
	0x02719700 TBNZ X8, 0x0, 0x2719708
	0x02719704 BL 0x1C5C684
	0x02719708 LDR X8, [X0 + 0xC0]
	0x0271970C LDR X0, [X8 + 0x8]
	0x02719710 LDRB W8, [X0 + 0x135]
	0x02719714 TBNZ X8, 0x0, 0x271971C
	0x02719718 BL 0x1C5C684
	0x0271971C LDR W8, [X0 + 0xE0]
	0x02719720 CBNZ W8, 0x2719728
	0x02719724 BL 0x1C16DFC
	0x02719728 LDR X0, [X22 + 0x20]
	0x0271972C LDRB W8, [X0 + 0x135]
	0x02719730 TBNZ X8, 0x0, 0x2719738
	0x02719734 BL 0x1C5C684
	0x02719738 LDR X8, [X0 + 0xC0]
	0x0271973C LDR X0, [X8 + 0x8]
	0x02719740 LDRB W8, [X0 + 0x135]
	0x02719744 TBNZ X8, 0x0, 0x271974C
	0x02719748 BL 0x1C5C684
	0x0271974C LDR X8, [X19]
	0x02719750 LDR X9, [X0 + 0xB8]
	0x02719754 LDRB W10, [X8 + 0x135]
	0x02719758 LDRB W22, [X9 + 0x8]
	0x0271975C TBNZ X10, 0x0, 0x271976C
	0x02719760 MOV X0, X8
	0x02719764 BL 0x1C5C684
	0x02719768 MOV X8, X0
	0x0271976C LDR X8, [X8 + 0xC0]
	0x02719770 ORR W21, W22, W21, 0x0
	0x02719774 LDR X0, [X8 + 0x8]
	0x02719778 LDRB W8, [X0 + 0x135]
	0x0271977C TBNZ X8, 0x0, 0x2719784
	0x02719780 BL 0x1C5C684
	0x02719784 LDR X8, [X0 + 0xB8]
	0x02719788 MOV X0, X20
	0x0271978C STRB W21, [X8 + 0xC]
	0x02719790 LDR X8, [X20]
	0x02719794 LDR X9, [X8 + 0x3C8]
	0x02719798 LDR X1, [X8 + 0x3D0]
	0x0271979C BLR X9
	0x027197A0 TBZ X0, 0x0, 0x2719800
	0x027197A4 LDR X8, [X20]
	0x027197A8 MOV X0, X20
	0x027197AC LDR X9, [X8 + 0x448]
	0x027197B0 LDR X1, [X8 + 0x450]
	0x027197B4 BLR X9
	0x027197B8 ADRP X9, 0x1A04000
	0x027197BC LDR X8, [X23]
	0x027197C0 LDR X9, [X9 + 0x998]
	0x027197C4 MOV X21, X0
	0x027197C8 LDR W10, [X8 + 0xE0]
	0x027197CC LDR X22, [X9]
	0x027197D0 CBNZ W10, 0x27197DC
	0x027197D4 MOV X0, X8
	0x027197D8 BL 0x1C16DFC
	0x027197DC MOV X0, X22
	0x027197E0 MOV X1, X31
	0x027197E4 BL 0x338C698
	0x027197E8 MOV X1, X0
	0x027197EC MOV X0, X21
	0x027197F0 MOV X2, X31
	0x027197F4 BL 0x3395194
	0x027197F8 MOV W21, W0
	0x027197FC B 0x2719804
	0x02719800 MOV W21, W31
	0x02719804 LDR X0, [X19]
	0x02719808 LDRB W8, [X0 + 0x135]
	0x0271980C TBNZ X8, 0x0, 0x2719814
	0x02719810 BL 0x1C5C684
	0x02719814 LDR X8, [X0 + 0xC0]
	0x02719818 ADRP X22, 0x1A02000
	0x0271981C LDR X0, [X8 + 0x8]
	0x02719820 LDRB W8, [X0 + 0x135]
	0x02719824 LDR X22, [X22 + 0x7F8]
	0x02719828 TBNZ X8, 0x0, 0x2719830
	0x0271982C BL 0x1C5C684
	0x02719830 LDR X8, [X0 + 0xB8]
	0x02719834 AND W9, W21, 0x1
	0x02719838 STRB W9, [X8 + 0x10]
	0x0271983C LDR X0, [X23]
	0x02719840 LDR X21, [X22]
	0x02719844 LDR W8, [X0 + 0xE0]
	0x02719848 CBNZ W8, 0x2719850
	0x0271984C BL 0x1C16DFC
	0x02719850 MOV X0, X21
	0x02719854 MOV X1, X31
	0x02719858 BL 0x338C698
	0x0271985C CBZ X0, 0x27198C0
	0x02719860 LDR X8, [X0]
	0x02719864 MOV X1, X20
	0x02719868 LDR X9, [X8 + 0x2A8]
	0x0271986C LDR X2, [X8 + 0x2B0]
	0x02719870 BLR X9
	0x02719874 LDR X8, [X19]
	0x02719878 MOV W19, W0
	0x0271987C LDRB W9, [X8 + 0x135]
	0x02719880 TBNZ X9, 0x0, 0x2719890
	0x02719884 MOV X0, X8
	0x02719888 BL 0x1C5C684
	0x0271988C MOV X8, X0
	0x02719890 LDR X8, [X8 + 0xC0]
	0x02719894 LDR X0, [X8 + 0x8]
	0x02719898 LDRB W8, [X0 + 0x135]
	0x0271989C TBNZ X8, 0x0, 0x27198A4
	0x027198A0 BL 0x1C5C684
	0x027198A4 LDR X8, [X0 + 0xB8]
	0x027198A8 AND W9, W19, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1CC3000
	008 Move W8, [X20+1583]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x1A06000
	015 Move X0, [X0+2448]
	016 Call 0x1C17CF4
	017 Move X0, 0x1A06000
	018 Move X0, [X0+2456]
	019 Call 0x1C17CF4
	020 Move X0, 0x1A04000
	021 Move X0, [X0+2040]
	022 Call 0x1C17CF4
	023 Move X0, 0x19E6000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A04000
	027 Move X0, [X0+2912]
	028 Call 0x1C17CF4
	029 Move X0, 0x19DC000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1583], W8
	034 Add X19, X19, 32
	035 Move X0, [X19]
	036 Move X23, 0x19DC000
	037 Move W8, [X0+309]
	038 Move X23, [X23+1728]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X23]
	045 Move X9, [X0+192]
	046 Move W10, [X8+224]
	047 Move X20, [X9+16]
	048 Compare W10, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Compare X0, 0
	056 JumpIfEqual {988}
	057 Move X1, X31
	058 Move X20, X0
	059 Call Type.get_IsValueType, X0
	060 Move X8, [X19]
	061 And W21, W0, 1
	062 Move W9, [X8+309]
	063 Move TEMP, X9
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X8
	068 Call 0x1C5D684
	069 Move X8, X0
	070 Move X8, [X8+192]
	071 Move X0, [X8+8]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, [X0+184]
	079 Move X0, X20
	080 Move X1, X31
	081 Move [X8], W21
	082 Call Type.get_IsPrimitive, X0
	083 Move X8, [X19]
	084 And W21, W0, 1
	085 Move W9, [X8+309]
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Move X0, X8
	091 Call 0x1C5D684
	092 Move X8, X0
	093 Move X8, [X8+192]
	094 Move X0, [X8+8]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move X8, [X0+184]
	102 Move X0, X20
	103 Move X1, X31
	104 Move [X8+1], W21
	105 Call Type.get_IsInterface, X0
	106 Move X8, [X19]
	107 And W21, W0, 1
	108 Move W9, [X8+309]
	109 Move TEMP, X9
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {116}
	113 Move X0, X8
	114 Call 0x1C5D684
	115 Move X8, X0
	116 Move X8, [X8+192]
	117 Move X0, [X8+8]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+184]
	125 Move X0, X20
	126 Move X1, X31
	127 Move [X8+2], W21
	128 Call Type.get_IsAbstract, X0
	129 Move X8, [X19]
	130 And W21, W0, 1
	131 Move W9, [X8+309]
	132 Move TEMP, X9
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {139}
	136 Move X0, X8
	137 Call 0x1C5D684
	138 Move X8, X0
	139 Move X8, [X8+192]
	140 Move X0, [X8+8]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move X8, [X0+184]
	148 Move X0, X20
	149 Move X1, X31
	150 Move [X8+3], W21
	151 Call Type.get_IsArray, X0
	152 Move X8, [X19]
	153 And W21, W0, 1
	154 Move W9, [X8+309]
	155 Move TEMP, X9
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {162}
	159 Move X0, X8
	160 Call 0x1C5D684
	161 Move X8, X0
	162 Move X8, [X8+192]
	163 Move X0, [X8+8]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move X8, [X0+184]
	171 Move X0, X20
	172 Move [X8+4], W21
	173 Move X8, [X20]
	174 Move X9, [X8+1416]
	175 Move X1, [X8+1424]
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X8, [X19]
	178 And W21, W0, 1
	179 Move W9, [X8+309]
	180 Move TEMP, X9
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {187}
	184 Move X0, X8
	185 Call 0x1C5D684
	186 Move X8, X0
	187 Move X8, [X8+192]
	188 Move X0, [X8+8]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move X8, [X0+184]
	196 Move [X8+6], W21
	197 Move X0, [X19]
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move X8, [X0+192]
	205 Move X21, [X8+24]
	206 Move X0, [X21+32]
	207 Move W8, [X0+309]
	208 Move TEMP, X8
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfEqual {213}
	212 Call 0x1C5D684
	213 Move X8, [X0+192]
	214 Move X0, [X8+8]
	215 Move W8, [X0+309]
	216 Move TEMP, X8
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {221}
	220 Call 0x1C5D684
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X0, [X21+32]
	226 Move W8, [X0+309]
	227 Move TEMP, X8
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {232}
	231 Call 0x1C5D684
	232 Move X8, [X0+192]
	233 Move X0, [X8+8]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Move X8, [X0+184]
	241 Move W8, [X8+6]
	242 Compare W8, 0
	243 JumpIfEqual {251}
	244 Move X8, 0x1A05000
	245 Move X8, [X8+2448]
	246 Move X0, X20
	247 Move X1, [X8]
	248 Call 0x21A991C, X0
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CSET not yet implemented."
	251 Move W21, W31
	252 Move X0, [X19]
	253 Move W8, [X0+309]
	254 Move TEMP, X8
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfEqual {259}
	258 Call 0x1C5D684
	259 Move X8, [X0+192]
	260 Move X0, [X8+8]
	261 Move W8, [X0+309]
	262 Move TEMP, X8
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfEqual {267}
	266 Call 0x1C5D684
	267 Move X8, [X0+184]
	268 Move [X8+7], W21
	269 Move X0, [X19]
	270 Move W8, [X0+309]
	271 Move TEMP, X8
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {276}
	275 Call 0x1C5D684
	276 Move X8, [X23]
	277 Move X9, [X0+192]
	278 Move W10, [X8+224]
	279 Move X21, [X9+16]
	280 Compare W10, 0
	281 JumpIfNotEqual {284}
	282 Move X0, X8
	283 Call 0x1C17DFC
	284 Move X0, X21
	285 Move X1, X31
	286 Call Type.GetTypeFromHandle, X0
	287 Move X1, X31
	288 Call Nullable.GetUnderlyingType, X0
	289 Move X1, X31
	290 Move X2, X31
	291 Call Type.op_Inequality, X0, X1
	292 Move X8, [X19]
	293 And W21, W0, 1
	294 Move W9, [X8+309]
	295 Move TEMP, X9
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfEqual {302}
	299 Move X0, X8
	300 Call 0x1C5D684
	301 Move X8, X0
	302 Move X8, [X8+192]
	303 Move X0, [X8+8]
	304 Move W8, [X0+309]
	305 Move TEMP, X8
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfEqual {310}
	309 Call 0x1C5D684
	310 Move X8, [X0+184]
	311 Move [X8+8], W21
	312 Move X0, [X19]
	313 Move W8, [X0+309]
	314 Move TEMP, X8
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfEqual {319}
	318 Call 0x1C5D684
	319 Move X8, [X0+192]
	320 Move X21, [X8+32]
	321 Move X0, [X21+32]
	322 Move W8, [X0+309]
	323 Move TEMP, X8
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfEqual {328}
	327 Call 0x1C5D684
	328 Move X8, [X0+192]
	329 Move X0, [X8+8]
	330 Move W8, [X0+309]
	331 Move TEMP, X8
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfEqual {336}
	335 Call 0x1C5D684
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X0, [X21+32]
	341 Move W8, [X0+309]
	342 Move TEMP, X8
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfEqual {347}
	346 Call 0x1C5D684
	347 Move X8, [X0+192]
	348 Move X0, [X8+8]
	349 Move W8, [X0+309]
	350 Move TEMP, X8
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfEqual {355}
	354 Call 0x1C5D684
	355 Move X8, [X0+184]
	356 Move W8, [X8+4]
	357 Compare W8, 0
	358 JumpIfEqual {385}
	359 Move X0, [X19]
	360 Move W8, [X0+309]
	361 Move TEMP, X8
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfEqual {366}
	365 Call 0x1C5D684
	366 Move X8, [X23]
	367 Move X9, [X0+192]
	368 Move W10, [X8+224]
	369 Move X21, [X9+16]
	370 Compare W10, 0
	371 JumpIfNotEqual {374}
	372 Move X0, X8
	373 Call 0x1C17DFC
	374 Move X0, X21
	375 Move X1, X31
	376 Call Type.GetTypeFromHandle, X0
	377 Compare X0, 0
	378 JumpIfEqual {988}
	379 Move X8, [X0]
	380 Move X9, [X8+1080]
	381 Move X1, [X8+1088]
	382 NotImplemented "Instruction BLR not yet implemented."
	383 NotImplemented "Instruction CMP not yet implemented."
	384 NotImplemented "Instruction CSET not yet implemented."
	385 Move W21, W31
	386 Move X0, [X19]
	387 Move W8, [X0+309]
	388 Move TEMP, X8
	389 And TEMP, TEMP, 1
	390 Compare TEMP, 1
	391 JumpIfEqual {393}
	392 Call 0x1C5D684
	393 Move X8, [X0+192]
	394 Move X22, 0x19E5000
	395 Move X0, [X8+8]
	396 Move W8, [X0+309]
	397 Move X22, [X22+2408]
	398 Move TEMP, X8
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfEqual {403}
	402 Call 0x1C5D684
	403 Move X8, [X0+184]
	404 Move [X8+5], W21
	405 Move X0, [X23]
	406 Move X21, [X22]
	407 Move W8, [X0+224]
	408 Compare W8, 0
	409 JumpIfNotEqual {411}
	410 Call 0x1C17DFC
	411 Move X0, X21
	412 Move X1, X31
	413 Call Type.GetTypeFromHandle, X0
	414 Move X1, X0
	415 Move X0, X20
	416 Move X2, X31
	417 Call Type.op_Equality, X0, X1
	418 Move X8, [X19]
	419 And W21, W0, 1
	420 Move W9, [X8+309]
	421 Move TEMP, X9
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfEqual {428}
	425 Move X0, X8
	426 Call 0x1C5D684
	427 Move X8, X0
	428 Move X8, [X8+192]
	429 Move X22, 0x1A03000
	430 Move X0, [X8+8]
	431 Move W8, [X0+309]
	432 Move X22, [X22+2912]
	433 Move TEMP, X8
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfEqual {438}
	437 Call 0x1C5D684
	438 Move X8, [X0+184]
	439 Move X1, X31
	440 Move [X8+9], W21
	441 Move X0, [X22]
	442 Call Type.GetTypeFromHandle, X0
	443 Move X1, X0
	444 Move X0, X20
	445 Move X2, X31
	446 Call Type.op_Equality, X0, X1
	447 Move X8, [X19]
	448 And W21, W0, 1
	449 Move W9, [X8+309]
	450 Move TEMP, X9
	451 And TEMP, TEMP, 1
	452 Compare TEMP, 1
	453 JumpIfEqual {457}
	454 Move X0, X8
	455 Call 0x1C5D684
	456 Move X8, X0
	457 Move X8, [X8+192]
	458 Move X0, [X8+8]
	459 Move W8, [X0+309]
	460 Move TEMP, X8
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfEqual {465}
	464 Call 0x1C5D684
	465 Move X8, [X0+184]
	466 Move X0, X20
	467 Move X1, X31
	468 Move [X8+10], W21
	469 Call TypeTraits.IsContainer, X0
	470 Move X8, [X19]
	471 And W21, W0, 1
	472 Move W9, [X8+309]
	473 Move TEMP, X9
	474 And TEMP, TEMP, 1
	475 Compare TEMP, 1
	476 JumpIfEqual {480}
	477 Move X0, X8
	478 Call 0x1C5D684
	479 Move X8, X0
	480 Move X8, [X8+192]
	481 Move X0, [X8+8]
	482 Move W8, [X0+309]
	483 Move TEMP, X8
	484 And TEMP, TEMP, 1
	485 Compare TEMP, 1
	486 JumpIfEqual {488}
	487 Call 0x1C5D684
	488 Move X8, [X0+184]
	489 Move [X8+11], W21
	490 Move X0, [X19]
	491 Move W8, [X0+309]
	492 Move TEMP, X8
	493 And TEMP, TEMP, 1
	494 Compare TEMP, 1
	495 JumpIfEqual {497}
	496 Call 0x1C5D684
	497 Move X8, [X0+192]
	498 Move X21, [X8+40]
	499 Move X0, [X21+32]
	500 Move W8, [X0+309]
	501 Move TEMP, X8
	502 And TEMP, TEMP, 1
	503 Compare TEMP, 1
	504 JumpIfEqual {506}
	505 Call 0x1C5D684
	506 Move X8, [X0+192]
	507 Move X0, [X8+8]
	508 Move W8, [X0+309]
	509 Move TEMP, X8
	510 And TEMP, TEMP, 1
	511 Compare TEMP, 1
	512 JumpIfEqual {514}
	513 Call 0x1C5D684
	514 Move W8, [X0+224]
	515 Compare W8, 0
	516 JumpIfNotEqual {518}
	517 Call 0x1C17DFC
	518 Move X0, [X21+32]
	519 Move W8, [X0+309]
	520 Move TEMP, X8
	521 And TEMP, TEMP, 1
	522 Compare TEMP, 1
	523 JumpIfEqual {525}
	524 Call 0x1C5D684
	525 Move X8, [X0+192]
	526 Move X0, [X8+8]
	527 Move W8, [X0+309]
	528 Move TEMP, X8
	529 And TEMP, TEMP, 1
	530 Compare TEMP, 1
	531 JumpIfEqual {533}
	532 Call 0x1C5D684
	533 Move X8, [X19]
	534 Move X9, [X0+184]
	535 Move W10, [X8+309]
	536 Move W21, [X9]
	537 Move TEMP, X10
	538 And TEMP, TEMP, 1
	539 Compare TEMP, 1
	540 JumpIfEqual {544}
	541 Move X0, X8
	542 Call 0x1C5D684
	543 Move X8, X0
	544 Move X8, [X8+192]
	545 Move X0, [X8+8]
	546 Move W8, [X0+309]
	547 Move TEMP, X8
	548 And TEMP, TEMP, 1
	549 Compare TEMP, 1
	550 JumpIfEqual {552}
	551 Call 0x1C5D684
	552 Move X8, [X0+184]
	553 Xor W9, W21, 1
	554 Move [X8+12], W9
	555 Move X0, [X19]
	556 Move W8, [X0+309]
	557 Move TEMP, X8
	558 And TEMP, TEMP, 1
	559 Compare TEMP, 1
	560 JumpIfEqual {562}
	561 Call 0x1C5D684
	562 Move X8, [X0+192]
	563 Move X21, [X8+48]
	564 Move X0, [X21+32]
	565 Move W8, [X0+309]
	566 Move TEMP, X8
	567 And TEMP, TEMP, 1
	568 Compare TEMP, 1
	569 JumpIfEqual {571}
	570 Call 0x1C5D684
	571 Move X8, [X0+192]
	572 Move X0, [X8+8]
	573 Move W8, [X0+309]
	574 Move TEMP, X8
	575 And TEMP, TEMP, 1
	576 Compare TEMP, 1
	577 JumpIfEqual {579}
	578 Call 0x1C5D684
	579 Move W8, [X0+224]
	580 Compare W8, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Move X0, [X21+32]
	584 Move W8, [X0+309]
	585 Move TEMP, X8
	586 And TEMP, TEMP, 1
	587 Compare TEMP, 1
	588 JumpIfEqual {590}
	589 Call 0x1C5D684
	590 Move X8, [X0+192]
	591 Move X0, [X8+8]
	592 Move W8, [X0+309]
	593 Move TEMP, X8
	594 And TEMP, TEMP, 1
	595 Compare TEMP, 1
	596 JumpIfEqual {598}
	597 Call 0x1C5D684
	598 Move X8, [X0+184]
	599 Move W8, [X8+1]
	600 Compare W8, 0
	601 JumpIfEqual {603}
	602 Move W21, 1
	603 Move X0, [X19]
	604 Move W8, [X0+309]
	605 Move TEMP, X8
	606 And TEMP, TEMP, 1
	607 Compare TEMP, 1
	608 JumpIfEqual {610}
	609 Call 0x1C5D684
	610 Move X8, [X0+192]
	611 Move X21, [X8+56]
	612 Move X0, [X21+32]
	613 Move W8, [X0+309]
	614 Move TEMP, X8
	615 And TEMP, TEMP, 1
	616 Compare TEMP, 1
	617 JumpIfEqual {619}
	618 Call 0x1C5D684
	619 Move X8, [X0+192]
	620 Move X0, [X8+8]
	621 Move W8, [X0+309]
	622 Move TEMP, X8
	623 And TEMP, TEMP, 1
	624 Compare TEMP, 1
	625 JumpIfEqual {627}
	626 Call 0x1C5D684
	627 Move W8, [X0+224]
	628 Compare W8, 0
	629 JumpIfNotEqual {631}
	630 Call 0x1C17DFC
	631 Move X0, [X21+32]
	632 Move W8, [X0+309]
	633 Move TEMP, X8
	634 And TEMP, TEMP, 1
	635 Compare TEMP, 1
	636 JumpIfEqual {638}
	637 Call 0x1C5D684
	638 Move X8, [X0+192]
	639 Move X0, [X8+8]
	640 Move W8, [X0+309]
	641 Move TEMP, X8
	642 And TEMP, TEMP, 1
	643 Compare TEMP, 1
	644 JumpIfEqual {646}
	645 Call 0x1C5D684
	646 Move X8, [X0+184]
	647 Move W8, [X8+10]
	648 NotImplemented "Instruction CMP not yet implemented."
	649 NotImplemented "Instruction CSET not yet implemented."
	650 Move X0, [X19]
	651 Move W8, [X0+309]
	652 Move TEMP, X8
	653 And TEMP, TEMP, 1
	654 Compare TEMP, 1
	655 JumpIfEqual {657}
	656 Call 0x1C5D684
	657 Move X8, [X0+192]
	658 Move X0, [X8+8]
	659 Move W8, [X0+309]
	660 Move TEMP, X8
	661 And TEMP, TEMP, 1
	662 Compare TEMP, 1
	663 JumpIfEqual {665}
	664 Call 0x1C5D684
	665 Move X8, [X0+184]
	666 Move [X8+13], W21
	667 Move X0, [X19]
	668 Move W8, [X0+309]
	669 Move TEMP, X8
	670 And TEMP, TEMP, 1
	671 Compare TEMP, 1
	672 JumpIfEqual {674}
	673 Call 0x1C5D684
	674 Move X8, [X0+192]
	675 Move X21, [X8+64]
	676 Move X0, [X21+32]
	677 Move W8, [X0+309]
	678 Move TEMP, X8
	679 And TEMP, TEMP, 1
	680 Compare TEMP, 1
	681 JumpIfEqual {683}
	682 Call 0x1C5D684
	683 Move X8, [X0+192]
	684 Move X0, [X8+8]
	685 Move W8, [X0+309]
	686 Move TEMP, X8
	687 And TEMP, TEMP, 1
	688 Compare TEMP, 1
	689 JumpIfEqual {691}
	690 Call 0x1C5D684
	691 Move W8, [X0+224]
	692 Compare W8, 0
	693 JumpIfNotEqual {695}
	694 Call 0x1C17DFC
	695 Move X0, [X21+32]
	696 Move W8, [X0+309]
	697 Move TEMP, X8
	698 And TEMP, TEMP, 1
	699 Compare TEMP, 1
	700 JumpIfEqual {702}
	701 Call 0x1C5D684
	702 Move X8, [X0+192]
	703 Move X0, [X8+8]
	704 Move W8, [X0+309]
	705 Move TEMP, X8
	706 And TEMP, TEMP, 1
	707 Compare TEMP, 1
	708 JumpIfEqual {710}
	709 Call 0x1C5D684
	710 Move X8, [X0+184]
	711 Move W8, [X8+3]
	712 Compare W8, 0
	713 JumpIfEqual {715}
	714 Move W21, 1
	715 Move X0, [X19]
	716 Move W8, [X0+309]
	717 Move TEMP, X8
	718 And TEMP, TEMP, 1
	719 Compare TEMP, 1
	720 JumpIfEqual {722}
	721 Call 0x1C5D684
	722 Move X8, [X0+192]
	723 Move X21, [X8+72]
	724 Move X0, [X21+32]
	725 Move W8, [X0+309]
	726 Move TEMP, X8
	727 And TEMP, TEMP, 1
	728 Compare TEMP, 1
	729 JumpIfEqual {731}
	730 Call 0x1C5D684
	731 Move X8, [X0+192]
	732 Move X0, [X8+8]
	733 Move W8, [X0+309]
	734 Move TEMP, X8
	735 And TEMP, TEMP, 1
	736 Compare TEMP, 1
	737 JumpIfEqual {739}
	738 Call 0x1C5D684
	739 Move W8, [X0+224]
	740 Compare W8, 0
	741 JumpIfNotEqual {743}
	742 Call 0x1C17DFC
	743 Move X0, [X21+32]
	744 Move W8, [X0+309]
	745 Move TEMP, X8
	746 And TEMP, TEMP, 1
	747 Compare TEMP, 1
	748 JumpIfEqual {750}
	749 Call 0x1C5D684
	750 Move X8, [X0+192]
	751 Move X0, [X8+8]
	752 Move W8, [X0+309]
	753 Move TEMP, X8
	754 And TEMP, TEMP, 1
	755 Compare TEMP, 1
	756 JumpIfEqual {758}
	757 Call 0x1C5D684
	758 Move X8, [X0+184]
	759 Move W8, [X8+2]
	760 NotImplemented "Instruction CMP not yet implemented."
	761 NotImplemented "Instruction CSET not yet implemented."
	762 Move X0, [X19]
	763 Move W8, [X0+309]
	764 Move TEMP, X8
	765 And TEMP, TEMP, 1
	766 Compare TEMP, 1
	767 JumpIfEqual {769}
	768 Call 0x1C5D684
	769 Move X8, [X0+192]
	770 Move X0, [X8+8]
	771 Move W8, [X0+309]
	772 Move TEMP, X8
	773 And TEMP, TEMP, 1
	774 Compare TEMP, 1
	775 JumpIfEqual {777}
	776 Call 0x1C5D684
	777 Move X8, [X0+184]
	778 Move [X8+14], W21
	779 Move X0, [X19]
	780 Move W8, [X0+309]
	781 Move TEMP, X8
	782 And TEMP, TEMP, 1
	783 Compare TEMP, 1
	784 JumpIfEqual {786}
	785 Call 0x1C5D684
	786 Move X8, [X0+192]
	787 Move X21, [X8+80]
	788 Move X0, [X21+32]
	789 Move W8, [X0+309]
	790 Move TEMP, X8
	791 And TEMP, TEMP, 1
	792 Compare TEMP, 1
	793 JumpIfEqual {795}
	794 Call 0x1C5D684
	795 Move X8, [X0+192]
	796 Move X0, [X8+8]
	797 Move W8, [X0+309]
	798 Move TEMP, X8
	799 And TEMP, TEMP, 1
	800 Compare TEMP, 1
	801 JumpIfEqual {803}
	802 Call 0x1C5D684
	803 Move W8, [X0+224]
	804 Compare W8, 0
	805 JumpIfNotEqual {807}
	806 Call 0x1C17DFC
	807 Move X0, [X21+32]
	808 Move W8, [X0+309]
	809 Move TEMP, X8
	810 And TEMP, TEMP, 1
	811 Compare TEMP, 1
	812 JumpIfEqual {814}
	813 Call 0x1C5D684
	814 Move X8, [X0+192]
	815 Move X0, [X8+8]
	816 Move W8, [X0+309]
	817 Move TEMP, X8
	818 And TEMP, TEMP, 1
	819 Compare TEMP, 1
	820 JumpIfEqual {822}
	821 Call 0x1C5D684
	822 Move X8, [X19]
	823 Move X9, [X0+184]
	824 Move W10, [X8+309]
	825 Move W21, [X9+12]
	826 Move TEMP, X10
	827 And TEMP, TEMP, 1
	828 Compare TEMP, 1
	829 JumpIfEqual {833}
	830 Move X0, X8
	831 Call 0x1C5D684
	832 Move X8, X0
	833 Move X8, [X8+192]
	834 Move X22, [X8+88]
	835 Move X0, [X22+32]
	836 Move W8, [X0+309]
	837 Move TEMP, X8
	838 And TEMP, TEMP, 1
	839 Compare TEMP, 1
	840 JumpIfEqual {842}
	841 Call 0x1C5D684
	842 Move X8, [X0+192]
	843 Move X0, [X8+8]
	844 Move W8, [X0+309]
	845 Move TEMP, X8
	846 And TEMP, TEMP, 1
	847 Compare TEMP, 1
	848 JumpIfEqual {850}
	849 Call 0x1C5D684
	850 Move W8, [X0+224]
	851 Compare W8, 0
	852 JumpIfNotEqual {854}
	853 Call 0x1C17DFC
	854 Move X0, [X22+32]
	855 Move W8, [X0+309]
	856 Move TEMP, X8
	857 And TEMP, TEMP, 1
	858 Compare TEMP, 1
	859 JumpIfEqual {861}
	860 Call 0x1C5D684
	861 Move X8, [X0+192]
	862 Move X0, [X8+8]
	863 Move W8, [X0+309]
	864 Move TEMP, X8
	865 And TEMP, TEMP, 1
	866 Compare TEMP, 1
	867 JumpIfEqual {869}
	868 Call 0x1C5D684
	869 Move X8, [X19]
	870 Move X9, [X0+184]
	871 Move W10, [X8+309]
	872 Move W22, [X9+8]
	873 Move TEMP, X10
	874 And TEMP, TEMP, 1
	875 Compare TEMP, 1
	876 JumpIfEqual {880}
	877 Move X0, X8
	878 Call 0x1C5D684
	879 Move X8, X0
	880 Move X8, [X8+192]
	881 Or W21, W22, W21
	882 Move X0, [X8+8]
	883 Move W8, [X0+309]
	884 Move TEMP, X8
	885 And TEMP, TEMP, 1
	886 Compare TEMP, 1
	887 JumpIfEqual {889}
	888 Call 0x1C5D684
	889 Move X8, [X0+184]
	890 Move X0, X20
	891 Move [X8+12], W21
	892 Move X8, [X20]
	893 Move X9, [X8+968]
	894 Move X1, [X8+976]
	895 NotImplemented "Instruction BLR not yet implemented."
	896 Move TEMP, X0
	897 And TEMP, TEMP, 1
	898 Compare TEMP, 1
	899 JumpIfNotEqual {923}
	900 Move X8, [X20]
	901 Move X0, X20
	902 Move X9, [X8+1096]
	903 Move X1, [X8+1104]
	904 NotImplemented "Instruction BLR not yet implemented."
	905 Move X9, 0x1A05000
	906 Move X8, [X23]
	907 Move X9, [X9+2456]
	908 Move X21, X0
	909 Move W10, [X8+224]
	910 Move X22, [X9]
	911 Compare W10, 0
	912 JumpIfNotEqual {915}
	913 Move X0, X8
	914 Call 0x1C17DFC
	915 Move X0, X22
	916 Move X1, X31
	917 Call Type.GetTypeFromHandle, X0
	918 Move X1, X0
	919 Move X0, X21
	920 Move X2, X31
	921 Call Type.op_Equality, X0, X1
	922 Move W21, W0
	923 Move W21, W31
	924 Move X0, [X19]
	925 Move W8, [X0+309]
	926 Move TEMP, X8
	927 And TEMP, TEMP, 1
	928 Compare TEMP, 1
	929 JumpIfEqual {931}
	930 Call 0x1C5D684
	931 Move X8, [X0+192]
	932 Move X22, 0x1A03000
	933 Move X0, [X8+8]
	934 Move W8, [X0+309]
	935 Move X22, [X22+2040]
	936 Move TEMP, X8
	937 And TEMP, TEMP, 1
	938 Compare TEMP, 1
	939 JumpIfEqual {941}
	940 Call 0x1C5D684
	941 Move X8, [X0+184]
	942 And W9, W21, 1
	943 Move [X8+16], W9
	944 Move X0, [X23]
	945 Move X21, [X22]
	946 Move W8, [X0+224]
	947 Compare W8, 0
	948 JumpIfNotEqual {950}
	949 Call 0x1C17DFC
	950 Move X0, X21
	951 Move X1, X31
	952 Call Type.GetTypeFromHandle, X0
	953 Compare X0, 0
	954 JumpIfEqual {988}
	955 Move X8, [X0]
	956 Move X1, X20
	957 Move X9, [X8+680]
	958 Move X2, [X8+688]
	959 NotImplemented "Instruction BLR not yet implemented."
	960 Move X8, [X19]
	961 Move W19, W0
	962 Move W9, [X8+309]
	963 Move TEMP, X9
	964 And TEMP, TEMP, 1
	965 Compare TEMP, 1
	966 JumpIfEqual {970}
	967 Move X0, X8
	968 Call 0x1C5D684
	969 Move X8, X0
	970 Move X8, [X8+192]
	971 Move X0, [X8+8]
	972 Move W8, [X0+309]
	973 Move TEMP, X8
	974 And TEMP, TEMP, 1
	975 Compare TEMP, 1
	976 JumpIfEqual {978}
	977 Call 0x1C5D684
	978 Move X8, [X0+184]
	979 And W9, W19, 1
	980 Move X20, [X31+32]
	981 Move X19, [X31+40]
	982 Move X22, [X31+16]
	983 Move X21, [X31+24]
	984 Move [X8+15], W9
	985 Move X30, [X31+48]
	986 Move X23, [X31+56]
	987 Return 
	988 Call 0x1C17F20

