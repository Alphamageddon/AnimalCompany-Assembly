Type: Unity.Properties.Internal.ReflectedPropertyBag`1

Method: System.Void AddProperty(Unity.Properties.Property`2<TContainer, TValue> property)

Disassembly:
	0x02136244 LDR X0, [X8 + 0x10]
	0x02136248 LDRB W9, [X0 + 0x135]
	0x0213624C TBNZ X9, 0x0, 0x2136258
	0x02136250 BL 0x1C5C684
	0x02136254 LDR X8, [X19 + 0x38]
	0x02136258 LDR X8, [X8 + 0x8]
	0x0213625C LDR X9, [X0 + 0xB8]
	0x02136260 LDRB W10, [X8 + 0x135]
	0x02136264 LDR X22, [X9]
	0x02136268 TBNZ X10, 0x0, 0x2136278
	0x0213626C MOV X0, X8
	0x02136270 BL 0x1C5C684
	0x02136274 MOV X8, X0
	0x02136278 MOV X0, X8
	0x0213627C BL 0x1C16F10
	0x02136280 LDR X8, [X19 + 0x38]
	0x02136284 MOV X1, X22
	0x02136288 MOV X21, X0
	0x0213628C LDP X2, X3, [X8 + 0x18]
	0x02136290 LDR X8, [X3]
	0x02136294 BLR X8
	0x02136298 LDR X8, [X19 + 0x38]
	0x0213629C LDR X0, [X8 + 0x10]
	0x021362A0 LDRB W8, [X0 + 0x135]
	0x021362A4 TBNZ X8, 0x0, 0x21362AC
	0x021362A8 BL 0x1C5C684
	0x021362AC LDR X8, [X0 + 0xB8]
	0x021362B0 STR X21, [X8 + 0x8]
	0x021362B4 LDR X8, [X19 + 0x38]
	0x021362B8 LDR X0, [X8 + 0x10]
	0x021362BC LDRB W8, [X0 + 0x135]
	0x021362C0 TBNZ X8, 0x0, 0x21362C8
	0x021362C4 BL 0x1C5C684
	0x021362C8 LDR X8, [X19 + 0x38]
	0x021362CC MOV X0, X20
	0x021362D0 MOV X1, X21
	0x021362D4 LDR X2, [X8 + 0x28]
	0x021362D8 LDR X8, [X2]
	0x021362DC BLR X8
	0x021362E0 LDR X8, [X19 + 0x38]
	0x021362E4 LDP X20, X19, [X31 + 0x20]
	0x021362E8 LDP X22, X21, [X31 + 0x10]
	0x021362EC LDR X1, [X8 + 0x38]
	0x021362F0 LDR X2, [X1]
	0x021362F4 LDR X30, [X31], #0x30
	0x021362F8 BR X2
	0x021362FC STP X30, X25, [X31 - 0x40]!
	0x02136300 STP X24, X23, [X31 + 0x10]
	0x02136304 STP X22, X21, [X31 + 0x20]
	0x02136308 STP X20, X19, [X31 + 0x30]
	0x0213630C LDR X8, [X5 + 0x38]
	0x02136310 MOV X20, X5
	0x02136314 MOV X19, X4
	0x02136318 MOV X25, X3
	0x0213631C MOV X23, X2
	0x02136320 MOV X24, X1
	0x02136324 MOV X21, X0
	0x02136328 CBNZ X8, 0x213634C
	0x0213632C ADRP X0, 0x1FE5000
	0x02136330 LDR X0, [X0 + 0x718]
	0x02136334 BL 0x1C16CF4
	0x02136338 LDR X8, [X20 + 0x38]
	0x0213633C CBNZ X8, 0x213634C
	0x02136340 MOV X0, X20
	0x02136344 BL 0x1C5C6E0
	0x02136348 LDR X8, [X20 + 0x38]
	0x0213634C LDR X0, [X8 + 0x10]
	0x02136350 LDRB W8, [X0 + 0x135]
	0x02136354 TBNZ X8, 0x0, 0x213635C
	0x02136358 BL 0x1C5C684
	0x0213635C BL 0x1C16F10
	0x02136360 LDR X8, [X20 + 0x38]
	0x02136364 MOV X1, X21
	0x02136368 MOV X2, X19
	0x0213636C MOV X22, X0
	0x02136370 LDR X3, [X8 + 0x18]
	0x02136374 BL 0x2D25AD8
	0x02136378 LDR X8, [X20 + 0x38]
	0x0213637C LDR X0, [X8 + 0x30]
	0x02136380 LDRB W8, [X0 + 0x135]
	0x02136384 TBNZ X8, 0x0, 0x213638C
	0x02136388 BL 0x1C5C684
	0x0213638C LDR W8, [X0 + 0xE0]
	0x02136390 CBNZ W8, 0x2136398
	0x02136394 BL 0x1C16DFC
	0x02136398 LDR X8, [X20 + 0x38]
	0x0213639C LDR X0, [X8 + 0x30]
	0x021363A0 LDRB W8, [X0 + 0x135]
	0x021363A4 TBNZ X8, 0x0, 0x21363AC
	0x021363A8 BL 0x1C5C684
	0x021363AC CBZ X25, 0x2136484
	0x021363B0 LDR X8, [X0 + 0xB8]
	0x021363B4 LDR X9, [X25 + 0x18]
	0x021363B8 LDR X0, [X25 + 0x40]
	0x021363BC LDR X6, [X25 + 0x28]
	0x021363C0 LDR X4, [X8]
	0x021363C4 MOV X1, X21
	0x021363C8 MOV X2, X24
	0x021363CC MOV X3, X23
	0x021363D0 MOV X5, X22
	0x021363D4 BLR X9
	0x021363D8 CBZ X0, 0x2136484
	0x021363DC ADRP X10, 0x1FE5000
	0x021363E0 LDR X8, [X0]
	0x021363E4 LDR X10, [X10 + 0x718]
	0x021363E8 MOV X23, X0
	0x021363EC LDRH W9, [X8 + 0x12E]
	0x021363F0 LDR X1, [X10]
	0x021363F4 CBZ X9, 0x2136418
	0x021363F8 LDR X10, [X8 + 0xB0]
	0x021363FC ADD X10, X10, 0x8
	0x02136400 LDUR X11, [X10 - 0x8]
	0x02136404 CMP X11, X1
	0x02136408 B.EQ 0x2136428
	0x0213640C SUBS X9, X9, 0x1
	0x02136410 ADD X10, X10, 0x10
	0x02136414 B.NE 0x2136400
	0x02136418 MOVZ W2, 0x3
	0x0213641C MOV X0, X23
	0x02136420 BL 0x1C5C788
	0x02136424 B 0x2136438
	0x02136428 LDR W9, [X10]
	0x0213642C ADD W9, W9, 0x3
	0x02136430 ADD X8, X8, W9, 0x4, SXTW
	0x02136434 ADD X0, X8, 0x138
	0x02136438 LDP X8, X1, [X0]
	0x0213643C MOV X0, X23
	0x02136440 BLR X8
	0x02136444 TBZ X0, 0x0, 0x213646C
	0x02136448 CBZ X22, 0x2136484
	0x0213644C LDR X8, [X20 + 0x38]
	0x02136450 MOV X0, X22
	0x02136454 MOV X1, X21
	0x02136458 MOV X2, X19
	0x0213645C LDR X5, [X8 + 0x40]
	0x02136460 MOV X3, X23
	0x02136464 MOV W4, W31
	0x02136468 BL 0x2D25D30
	0x0213646C MOV X0, X22
	0x02136470 LDP X20, X19, [X31 + 0x30]
	0x02136474 LDP X22, X21, [X31 + 0x20]
	0x02136478 LDP X24, X23, [X31 + 0x10]
	0x0213647C LDP X30, X25, [X31], #0x40
	0x02136480 RET
	0x02136484 BL 0x1C16F20
	0x02136488 STR X30, [X31 - 0x40]!
	0x0213648C STP X24, X23, [X31 + 0x10]
	0x02136490 STP X22, X21, [X31 + 0x20]
	0x02136494 STP X20, X19, [X31 + 0x30]
	0x02136498 LDR X8, [X5 + 0x38]
	0x0213649C MOV X19, X4
	0x021364A0 MOV X20, X3
	0x021364A4 MOV X21, X2
	0x021364A8 MOV X22, X1
	0x021364AC MOV X24, X0
	0x021364B0 CBNZ X8, 0x21364C4
	0x021364B4 MOV X0, X5
	0x021364B8 MOV X23, X5
	0x021364BC BL 0x1C5C6E0
	0x021364C0 LDR X8, [X23 + 0x38]
	0x021364C4 LDR W5, [X24 + 0x20]
	0x021364C8 LDR X6, [X8 + 0x10]
	0x021364CC MOV X0, X22
	0x021364D0 MOV X1, X21
	0x021364D4 MOV X3, X20
	0x021364D8 MOV X4, X19
	0x021364DC LDP X20, X19, [X31 + 0x30]
	0x021364E0 LDP X22, X21, [X31 + 0x20]
	0x021364E4 LDP X24, X23, [X31 + 0x10]
	0x021364E8 MOV X2, X31
	0x021364EC LDR X30, [X31], #0x40
	0x021364F0 B 0x21364F4
	0x021364F4 STR X30, [X31 - 0x50]!
	0x021364F8 STP X26, X25, [X31 + 0x10]
	0x021364FC STP X24, X23, [X31 + 0x20]
	0x02136500 STP X22, X21, [X31 + 0x30]
	0x02136504 STP X20, X19, [X31 + 0x40]
	0x02136508 LDR X8, [X6 + 0x38]
	0x0213650C MOV X19, X6
	0x02136510 MOV W24, W5
	0x02136514 MOV X21, X4
	0x02136518 MOV X22, X3
	0x0213651C MOV X25, X2
	0x02136520 MOV X26, X1
	0x02136524 MOV X23, X0
	0x02136528 CBNZ X8, 0x2136570
	0x0213652C ADRP X0, 0x1FE5000
	0x02136530 LDR X0, [X0 + 0x720]
	0x02136534 BL 0x1C16CF4
	0x02136538 ADRP X0, 0x1FE5000
	0x0213653C LDR X0, [X0 + 0x728]
	0x02136540 BL 0x1C16CF4
	0x02136544 ADRP X0, 0x1FE5000
	0x02136548 LDR X0, [X0 + 0x718]
	0x0213654C BL 0x1C16CF4
	0x02136550 ADRP X0, 0x1FE5000
	0x02136554 LDR X0, [X0 + 0x730]
	0x02136558 BL 0x1C16CF4
	0x0213655C LDR X8, [X19 + 0x38]
	0x02136560 CBNZ X8, 0x2136570
	0x02136564 MOV X0, X19
	0x02136568 BL 0x1C5C6E0
	0x0213656C LDR X8, [X19 + 0x38]
	0x02136570 LDR X0, [X8]
	0x02136574 LDRB W8, [X0 + 0x135]
	0x02136578 TBNZ X8, 0x0, 0x2136580
	0x0213657C BL 0x1C5C684
	0x02136580 BL 0x1C16F10
	0x02136584 LDR X8, [X19 + 0x38]
	0x02136588 MOV X20, X0
	0x0213658C LDR X1, [X8 + 0x8]
	0x02136590 BL 0x2377730
	0x02136594 CBZ X20, 0x2136828
	0x02136598 STP X26, X25, [X20 + 0x10]
	0x0213659C CBZ X23, 0x213682C
	0x021365A0 CBNZ X26, 0x21365A8
	0x021365A4 CBZ X25, 0x213684C
	0x021365A8 MOVZ W1, 0x1
	0x021365AC MOV W0, W24
	0x021365B0 MOV X2, X31
	0x021365B4 BL 0x33F9780
	0x021365B8 LDR X0, [X19 + 0x20]
	0x021365BC LDRB W8, [X0 + 0x135]
	0x021365C0 TBNZ X8, 0x0, 0x21365C8
	0x021365C4 BL 0x1C5C684
	0x021365C8 LDR X8, [X0 + 0xC0]
	0x021365CC LDR X0, [X8 + 0x28]
	0x021365D0 LDRB W8, [X0 + 0x135]
	0x021365D4 TBNZ X8, 0x0, 0x21365DC
	0x021365D8 BL 0x1C5C684
	0x021365DC BL 0x1C16F10
	0x021365E0 LDR X8, [X19 + 0x20]
	0x021365E4 MOV X25, X0
	0x021365E8 LDRB W9, [X8 + 0x135]
	0x021365EC TBNZ X9, 0x0, 0x21365FC
	0x021365F0 MOV X0, X8
	0x021365F4 BL 0x1C5C684
	0x021365F8 MOV X8, X0
	0x021365FC LDR X8, [X8 + 0xC0]
	0x02136600 MOV X0, X25
	0x02136604 MOV X1, X21
	0x02136608 MOV W2, W24
	0x0213660C LDR X3, [X8 + 0x60]
	0x02136610 BL 0x269EC84
	0x02136614 STR X25, [X20 + 0x20]
	0x02136618 ADRP X26, 0x1FE5000
	0x0213661C LDR X26, [X26 + 0x728]
	0x02136620 LDR X0, [X26]
	0x02136624 LDR W8, [X0 + 0xE0]
	0x02136628 CBNZ W8, 0x2136630
	0x0213662C BL 0x1C16DFC
	0x02136630 MOV X0, X31
	0x02136634 BL 0x33EE5CC
	0x02136638 TBZ X0, 0x0, 0x213669C
	0x0213663C ADRP X9, 0x1FE5000
	0x02136640 LDR X8, [X23]
	0x02136644 LDR X24, [X20 + 0x20]
	0x02136648 LDR X9, [X9 + 0x730]
	0x0213664C MOV X0, X23
	0x02136650 LDR X25, [X9]
	0x02136654 LDP X9, X1, [X8 + 0x168]
	0x02136658 BLR X9
	0x0213665C MOV X1, X0
	0x02136660 MOV X0, X25
	0x02136664 MOV X2, X31
	0x02136668 BL 0x321B938
	0x0213666C LDR X8, [X26]
	0x02136670 MOV X25, X0
	0x02136674 LDR W9, [X8 + 0xE0]
	0x02136678 CBNZ W9, 0x2136684
	0x0213667C MOV X0, X8
	0x02136680 BL 0x1C16DFC
	0x02136684 MOV W0, W31

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X24+40]
	014 Move X20, X2
	015 Move X19, X1
	016 Move X21, X0
	017 Move [X29-8], X8
	018 Move X8, [X2+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {56}
	021 Move X0, 0x1FBE000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x1FE6000
	025 Move X0, [X0+1760]
	026 Call 0x1C17CF4
	027 Move X0, 0x1FBE000
	028 Move X0, [X0+2760]
	029 Call 0x1C17CF4
	030 Move X0, 0x1FE6000
	031 Move X0, [X0+1768]
	032 Call 0x1C17CF4
	033 Move X0, 0x1FBE000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0x1FE6000
	037 Move X0, [X0+1776]
	038 Call 0x1C17CF4
	039 Move X0, 0x1FE6000
	040 Move X0, [X0+1784]
	041 Call 0x1C17CF4
	042 Move X0, 0x1FE6000
	043 Move X0, [X0+1792]
	044 Call 0x1C17CF4
	045 Move X0, 0x1FE6000
	046 Move X0, [X0+1800]
	047 Call 0x1C17CF4
	048 Move X0, 0x1FE6000
	049 Move X0, [X0+1808]
	050 Call 0x1C17CF4
	051 Move X8, [X20+56]
	052 Compare X8, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X20
	055 Call 0x1C5D6E0
	056 Move X8, [X20+32]
	057 Move X8, [X8+192]
	058 Move X8, [X8]
	059 Move W23, [X8+252]
	060 Add X8, X31, 0
	061 Add X9, X23, 15
	062 And X9, X9, 0x1FFFFFFFF
	063 Subtract X22, X8, X9
	064 Add X31, X22, 0
	065 Move X0, X22
	066 Move W1, W31
	067 Move X2, X23
	068 Call 0x3EB2B10
	069 Move X0, X22
	070 Move W1, W31
	071 Move X2, X23
	072 Move [X29-16], X31
	073 Call 0x3EB2B10
	074 Compare X19, 0
	075 JumpIfEqual {287}
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move X9, [X8+424]
	079 Move X1, [X8+432]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare X21, 0
	082 JumpIfEqual {287}
	083 Move X8, [X20+32]
	084 Move X2, X0
	085 Subtract X3, X29, 16
	086 Move X0, X21
	087 Move X8, [X8+192]
	088 Move X1, X22
	089 Move X4, [X8+8]
	090 Move X8, [X4]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {115}
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 Compare X21, 0
	098 JumpIfEqual {287}
	099 Move X23, 0x1FE6000
	100 Move X8, [X21]
	101 Move X23, [X23+1760]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X1, [X23]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X21
	113 Move W2, W31
	114 Call 0x1C5D788
	115 Move X8, [X20+56]
	116 Move X0, X21
	117 Move X1, X19
	118 Move X2, [X8+32]
	119 Move X8, [X2]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X25, 0x1FBE000
	129 Move X25, [X25+1728]
	130 Move X9, [X20+56]
	131 Move X21, X0
	132 Move X8, [X25]
	133 Move X22, [X9+16]
	134 Move W10, [X8+224]
	135 Compare W10, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move X0, X22
	140 Move X1, X31
	141 Call Type.GetTypeFromHandle, X0
	142 Move X1, X0
	143 Move X0, X21
	144 Move X2, X31
	145 Call Type.op_Equality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {273}
	150 Move X8, 0x1FBE000
	151 Move X8, [X8+2760]
	152 Move W1, 9
	153 Move X0, [X8]
	154 Call 0x1C17D6C
	155 Compare X0, 0
	156 JumpIfEqual {287}
	157 Move W8, [X0+24]
	158 Move X21, X0
	159 Compare W8, 0
	160 JumpIfEqual {288}
	161 Move X8, 0x1FE6000
	162 Move X8, [X8+1808]
	163 Move X8, [X8]
	164 Move [X21+32], X8
	165 Move X8, [X20+32]
	166 Move X0, [X25]
	167 Move X8, [X8+192]
	168 Move W9, [X0+224]
	169 Move X22, [X8+32]
	170 Compare W9, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X22
	174 Move X1, X31
	175 Call Type.GetTypeFromHandle, X0
	176 Move X8, 0x1FE6000
	177 Move X8, [X8+1768]
	178 Move X22, X0
	179 Move X8, [X8]
	180 Move W9, [X8+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {185}
	183 Move X0, X8
	184 Call 0x1C17DFC
	185 Move X0, X22
	186 Move X1, X31
	187 Call TypeUtility.GetTypeDisplayName, X0
	188 Move W8, [X21+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X21+40], X0
	192 Move X8, 0x1FE6000
	193 Move X8, [X8+1800]
	194 Move X0, X19
	195 Move X8, [X8]
	196 Move [X21+48], X8
	197 Move X8, [X19]
	198 Move X9, [X8+424]
	199 Move X1, [X8+432]
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move W8, [X21+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X21+56], X0
	205 Move X8, 0x1FE6000
	206 Move X8, [X8+1776]
	207 Move X8, [X8]
	208 Move [X21+64], X8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 Compare X22, 0
	211 JumpIfEqual {287}
	212 Move X8, [X22]
	213 Move X1, [X23]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move X0, X22
	224 Move W2, W31
	225 Call 0x1C5D788
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Add X8, X8, X9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X22
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X1, X31
	234 Call TypeUtility.GetTypeDisplayName, X0
	235 Move W8, [X21+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X21+72], X0
	239 Move X8, 0x1FE6000
	240 Move X8, [X8+1792]
	241 Move X0, X19
	242 Move X8, [X8]
	243 Move [X21+80], X8
	244 Move X8, [X20+56]
	245 Move X1, [X8+24]
	246 Move X8, [X1]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move X1, X31
	249 Call TypeUtility.GetTypeDisplayName, X0
	250 Move W8, [X21+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move [X21+88], X0
	254 Move X8, 0x1FE6000
	255 Move X8, [X8+1784]
	256 Move X0, X21
	257 Move X1, X31
	258 Move X8, [X8]
	259 Move [X21+96], X8
	260 Call String.Concat, X0
	261 Move X8, 0x1FBE000
	262 Move X8, [X8+2600]
	263 Move X19, X0
	264 Move X8, [X8]
	265 Move W9, [X8+224]
	266 Compare W9, 0
	267 JumpIfNotEqual {270}
	268 Move X0, X8
	269 Call 0x1C17DFC
	270 Move X0, X19
	271 Move X1, X31
	272 Call Debug.LogWarning, X0
	273 Move X8, [X24+40]
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Add X31, X29, 0
	277 Move X20, [X31+64]
	278 Move X19, [X31+72]
	279 Move X22, [X31+48]
	280 Move X21, [X31+56]
	281 Move X24, [X31+32]
	282 Move X23, [X31+40]
	283 Move X25, [X31+16]
	284 Move X29, [X31+80]
	285 Move X30, [X31+88]
	286 Return 
	287 Call 0x1C17F20
	288 Call 0x1C17F28
	289 Call 0x3EB2B20

Method: System.Void .ctor()

Disassembly:
	0x025C5CA4 MOV X2, X22
	0x025C5CA8 LDR X8, [X27 + 0xC0]
	0x025C5CAC LDR X8, [X8 + 0x10]
	0x025C5CB0 LDR W8, [X8 + 0x28]
	0x025C5CB4 CMP W8, 0x0
	0x025C5CB8 SUB X8, X29, 0x20
	0x025C5CBC CSEL X1, X20, X8, LT
	0x025C5CC0 BL 0x3EB1AC0
	0x025C5CC4 CBZ X25, 0x25C5FD0
	0x025C5CC8 LDR X8, [X27 + 0xC0]
	0x025C5CCC LDP X9, X1, [X8 + 0x10]
	0x025C5CD0 MOV X8, X24
	0x025C5CD4 LDR W9, [X9 + 0x28]
	0x025C5CD8 LDR X0, [X1]
	0x025C5CDC TBNZ X9, 0x1F, 0x25C5CE4
	0x025C5CE0 LDR X8, [X24]
	0x025C5CE4 STUR X8, [X29 - 0x18]
	0x025C5CE8 LDR X8, [X1 + 0x10]
	0x025C5CEC SUB X3, X29, 0x18
	0x025C5CF0 SUB X4, X29, 0xC
	0x025C5CF4 MOV X2, X25
	0x025C5CF8 BLR X8
	0x025C5CFC LDURB W8, [X29 - 0xC]
	0x025C5D00 CBNZ W8, 0x25C5E08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+56]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Move X8, [X19+32]
	023 Move X0, X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+192]
	027 Move X1, [X8+48]
	028 Move X2, [X1]
	029 Move X30, [X31+32]
	030 CallNoReturn X2

