Type: Unity.Properties.Internal.ReflectedPropertyBagProvider

Method: System.Void .ctor()

Disassembly:
	0x03C96308 LDR X0, [X0 + 0xE00]
	0x03C9630C BL 0x1C16CF4
	0x03C96310 MOVZ W8, 0x1
	0x03C96314 STRB W8, [X19 + 0xDE]
	0x03C96318 LDR X19, [X20 + 0x40]
	0x03C9631C MOVN W8, 0x0
	0x03C96320 STR W8, [X20 + 0x10]
	0x03C96324 CBZ X19, 0x3C96370
	0x03C96328 ADRP X10, 0x45D000
	0x03C9632C LDR X8, [X19]
	0x03C96330 LDR X10, [X10 + 0xE00]
	0x03C96334 LDRH W9, [X8 + 0x12E]
	0x03C96338 LDR X1, [X10]
	0x03C9633C CBZ X9, 0x3C96360
	0x03C96340 LDR X10, [X8 + 0xB0]
	0x03C96344 ADD X10, X10, 0x8
	0x03C96348 LDUR X11, [X10 - 0x8]
	0x03C9634C CMP X11, X1
	0x03C96350 B.EQ 0x3C9637C
	0x03C96354 SUBS X9, X9, 0x1
	0x03C96358 ADD X10, X10, 0x10
	0x03C9635C B.NE 0x3C96348
	0x03C96360 MOV X0, X19
	0x03C96364 MOV W2, W31
	0x03C96368 BL 0x1C5C788
	0x03C9636C B 0x3C96388
	0x03C96370 LDP X20, X19, [X31 + 0x10]
	0x03C96374 LDR X30, [X31], #0x20
	0x03C96378 RET
	0x03C9637C LDRSW X9, [X10]
	0x03C96380 ADD X8, X8, X9, 0x4, LSL
	0x03C96384 ADD X0, X8, 0x138
	0x03C96388 LDP X2, X1, [X0]
	0x03C9638C MOV X0, X19
	0x03C96390 LDP X20, X19, [X31 + 0x10]
	0x03C96394 LDR X30, [X31], #0x20
	0x03C96398 BR X2
	0x03C9639C LDR X0, [X0 + 0x18]
	0x03C963A0 RET
	0x03C963A4 STP X30, X19, [X31 - 0x10]!
	0x03C963A8 ADRP X0, 0x45D000
	0x03C963AC LDR X0, [X0 + 0xB40]
	0x03C963B0 BL 0x1C16D08
	0x03C963B4 BL 0x1C16F10
	0x03C963B8 MOV X1, X31
	0x03C963BC MOV X19, X0
	0x03C963C0 BL 0x3380310
	0x03C963C4 ADRP X0, 0x4CA000
	0x03C963C8 LDR X0, [X0 + 0xEC8]
	0x03C963CC BL 0x1C16D08
	0x03C963D0 MOV X1, X0
	0x03C963D4 MOV X0, X19
	0x03C963D8 BL 0x1C16DEC
	0x03C963DC LDR X0, [X0 + 0x18]
	0x03C963E0 RET
	0x03C963E4 STR X30, [X31 - 0x20]!
	0x03C963E8 STP X20, X19, [X31 + 0x10]
	0x03C963EC ADRP X20, 0x751000
	0x03C963F0 LDRB W8, [X20 + 0xDF]
	0x03C963F4 MOV X19, X0
	0x03C963F8 TBNZ X8, 0x0, 0x3C96410
	0x03C963FC ADRP X0, 0x4CA000
	0x03C96400 LDR X0, [X0 + 0xE78]
	0x03C96404 BL 0x1C16CF4
	0x03C96408 MOVZ W8, 0x1
	0x03C9640C STRB W8, [X20 + 0xDF]
	0x03C96410 LDR W8, [X19 + 0x10]
	0x03C96414 ADDS W31, W8, 0x2
	0x03C96418 B.NE 0x3C9643C
	0x03C9641C LDR W20, [X19 + 0x20]
	0x03C96420 MOV X0, X31
	0x03C96424 BL 0x33C151C
	0x03C96428 CMP W20, W0
	0x03C9642C B.NE 0x3C9643C
	0x03C96430 STR W31, [X19 + 0x10]
	0x03C96434 MOV X20, X19
	0x03C96438 B 0x3C96468
	0x03C9643C ADRP X8, 0x4CA000
	0x03C96440 LDR X8, [X8 + 0xE78]
	0x03C96444 LDR X0, [X8]
	0x03C96448 BL 0x1C16F10
	0x03C9644C MOV X1, X31
	0x03C96450 MOV X20, X0
	0x03C96454 BL 0x33BDD8C
	0x03C96458 MOV X0, X31
	0x03C9645C STR W31, [X20 + 0x10]
	0x03C96460 BL 0x33C151C
	0x03C96464 STR W0, [X20 + 0x20]
	0x03C96468 LDR X8, [X19 + 0x30]
	0x03C9646C MOV X0, X20
	0x03C96470 STR X8, [X20 + 0x28]
	0x03C96474 LDP X20, X19, [X31 + 0x10]
	0x03C96478 LDR X30, [X31], #0x20
	0x03C9647C RET
	0x03C96480 B 0x3C963E4
	0x03C96484 STP X30, X21, [X31 - 0x20]!
	0x03C96488 STP X20, X19, [X31 + 0x10]
	0x03C9648C MOV X20, X1
	0x03C96490 MOV X1, X31
	0x03C96494 MOV X19, X2
	0x03C96498 MOV X21, X0
	0x03C9649C BL 0x33A51F0
	0x03C964A0 STP X20, X19, [X21 + 0x10]
	0x03C964A4 LDP X20, X19, [X31 + 0x10]
	0x03C964A8 LDP X30, X21, [X31], #0x20
	0x03C964AC RET
	0x03C964B0 MOV X1, X31
	0x03C964B4 B 0x33A51F0
	0x03C964B8 MOV X1, X31
	0x03C964BC B 0x33A51F0
	0x03C964C0 MOV X1, X31
	0x03C964C4 B 0x33A51F0
	0x03C964C8 STR X1, [X0 + 0x10]
	0x03C964CC RET
	0x03C964D0 STR X1, [X0 + 0x18]
	0x03C964D4 RET
	0x03C964D8 STR X30, [X31 - 0x30]!
	0x03C964DC STP X22, X21, [X31 + 0x10]
	0x03C964E0 STP X20, X19, [X31 + 0x20]
	0x03C964E4 ADRP X22, 0x751000
	0x03C964E8 ADRP X21, 0x4CA000
	0x03C964EC LDRB W8, [X22 + 0xE1]
	0x03C964F0 LDR X21, [X21 + 0xED0]
	0x03C964F4 MOV X20, X1
	0x03C964F8 MOV X19, X0
	0x03C964FC TBNZ X8, 0x0, 0x3C96514
	0x03C96500 ADRP X0, 0x4CA000
	0x03C96504 LDR X0, [X0 + 0xED0]
	0x03C96508 BL 0x1C16CF4
	0x03C9650C MOVZ W8, 0x1
	0x03C96510 STRB W8, [X22 + 0xE1]
	0x03C96514 MOV X0, X19
	0x03C96518 MOV X1, X31
	0x03C9651C BL 0x33A51F0
	0x03C96520 STR X20, [X19 + 0x10]
	0x03C96524 LDR X0, [X21]
	0x03C96528 MOV X1, X20
	0x03C9652C MOV X2, X31
	0x03C96530 BL 0x321B938
	0x03C96534 STR X0, [X19 + 0x18]
	0x03C96538 LDP X20, X19, [X31 + 0x20]
	0x03C9653C LDP X22, X21, [X31 + 0x10]
	0x03C96540 LDR X30, [X31], #0x30
	0x03C96544 RET
	0x03C96548 STP X30, X21, [X31 - 0x20]!
	0x03C9654C STP X20, X19, [X31 + 0x10]
	0x03C96550 MOV X20, X1
	0x03C96554 MOV X1, X31
	0x03C96558 MOV X19, X2
	0x03C9655C MOV X21, X0
	0x03C96560 BL 0x33A51F0
	0x03C96564 STP X20, X19, [X21 + 0x10]
	0x03C96568 LDP X20, X19, [X31 + 0x10]
	0x03C9656C LDP X30, X21, [X31], #0x20
	0x03C96570 RET
	0x03C96574 STR X30, [X31 - 0x30]!
	0x03C96578 STP X22, X21, [X31 + 0x10]
	0x03C9657C STP X20, X19, [X31 + 0x20]
	0x03C96580 ADRP X21, 0x751000
	0x03C96584 ADRP X22, 0x45F000
	0x03C96588 LDRB W8, [X21 + 0xE2]
	0x03C9658C LDR X22, [X22 + 0xC48]
	0x03C96590 MOV X19, X1
	0x03C96594 MOV X20, X0
	0x03C96598 TBNZ X8, 0x0, 0x3C965B0
	0x03C9659C ADRP X0, 0x45F000
	0x03C965A0 LDR X0, [X0 + 0xC48]
	0x03C965A4 BL 0x1C16CF4
	0x03C965A8 MOVZ W8, 0x1
	0x03C965AC STRB W8, [X21 + 0xE2]
	0x03C965B0 LDR X0, [X22]
	0x03C965B4 LDR W8, [X0 + 0xE0]
	0x03C965B8 CBNZ W8, 0x3C965C0
	0x03C965BC BL 0x1C16DFC
	0x03C965C0 MOV X0, X31
	0x03C965C4 BL 0x3338524
	0x03C965C8 CBZ X0, 0x3C965F8
	0x03C965CC LDR X8, [X0]
	0x03C965D0 LDR X9, [X8 + 0x218]
	0x03C965D4 LDR X1, [X8 + 0x220]
	0x03C965D8 BLR X9
	0x03C965DC MOV X1, X20
	0x03C965E0 MOV X2, X19
	0x03C965E4 LDP X20, X19, [X31 + 0x20]
	0x03C965E8 LDP X22, X21, [X31 + 0x10]
	0x03C965EC MOV X3, X31
	0x03C965F0 LDR X30, [X31], #0x30
	0x03C965F4 B 0x3227E0C
	0x03C965F8 BL 0x1C16F20
	0x03C965FC MOV X1, X31
	0x03C96600 B 0x33A51F0
	0x03C96604 MOV X1, X31
	0x03C96608 B 0x33A51F0
	0x03C9660C STR X1, [X0 + 0x10]
	0x03C96610 RET
	0x03C96614 STR X1, [X0 + 0x18]
	0x03C96618 RET
	0x03C9661C AND W8, W1, 0x1
	0x03C96620 STRB W8, [X0 + 0x20]
	0x03C96624 RET
	0x03C96628 STR X30, [X31 - 0x20]!
	0x03C9662C STP X20, X19, [X31 + 0x10]
	0x03C96630 MOV X19, X1
	0x03C96634 MOV X1, X31
	0x03C96638 MOV X20, X0
	0x03C9663C BL 0x33A51F0
	0x03C96640 MOVZ W8, 0x1
	0x03C96644 STR X19, [X20 + 0x10]
	0x03C96648 STRB W8, [X20 + 0x20]
	0x03C9664C LDP X20, X19, [X31 + 0x10]
	0x03C96650 LDR X30, [X31], #0x20
	0x03C96654 RET
	0x03C96658 STP X30, X21, [X31 - 0x20]!
	0x03C9665C STP X20, X19, [X31 + 0x10]
	0x03C96660 MOV X20, X1
	0x03C96664 MOV X1, X31
	0x03C96668 MOV X19, X2
	0x03C9666C MOV X21, X0
	0x03C96670 BL 0x33A51F0
	0x03C96674 STP X20, X19, [X21 + 0x10]
	0x03C96678 LDP X20, X19, [X31 + 0x10]
	0x03C9667C MOVZ W8, 0x1
	0x03C96680 STRB W8, [X21 + 0x20]
	0x03C96684 LDP X30, X21, [X31], #0x20
	0x03C96688 RET
	0x03C9668C STR X1, [X0 + 0x10]
	0x03C96690 RET
	0x03C96694 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x752000
	011 Move X23, 0x4CB000
	012 Move X24, 0x45E000
	013 Move W8, [X20+214]
	014 Move X23, [X23+3592]
	015 Move X24, [X24+1728]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {68}
	021 Move X0, 0x4CB000
	022 Move X0, [X0+3600]
	023 Call 0x1C17CF4
	024 Move X0, 0x4CB000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0x4CB000
	028 Move X0, [X0+3592]
	029 Call 0x1C17CF4
	030 Move X0, 0x45E000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0x4CB000
	034 Move X0, [X0+3616]
	035 Call 0x1C17CF4
	036 Move X0, 0x4CB000
	037 Move X0, [X0+3624]
	038 Call 0x1C17CF4
	039 Move X0, 0x4CB000
	040 Move X0, [X0+3632]
	041 Call 0x1C17CF4
	042 Move X0, 0x4CB000
	043 Move X0, [X0+3640]
	044 Call 0x1C17CF4
	045 Move X0, 0x4CB000
	046 Move X0, [X0+3648]
	047 Call 0x1C17CF4
	048 Move X0, 0x4CB000
	049 Move X0, [X0+3656]
	050 Call 0x1C17CF4
	051 Move X0, 0x4CB000
	052 Move X0, [X0+3664]
	053 Call 0x1C17CF4
	054 Move X0, 0x4CB000
	055 Move X0, [X0+3672]
	056 Call 0x1C17CF4
	057 Move X0, 0x4CB000
	058 Move X0, [X0+3680]
	059 Call 0x1C17CF4
	060 Move X0, 0x4CB000
	061 Move X0, [X0+3688]
	062 Call 0x1C17CF4
	063 Move X0, 0x4CB000
	064 Move X0, [X0+3696]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+214], W8
	068 Move X0, X19
	069 Move X1, X31
	070 Call Object..ctor, X0
	071 Move X0, [X24]
	072 Move X20, [X23]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Call Type.GetTypeFromHandle, X0
	080 Compare X0, 0
	081 JumpIfEqual {254}
	082 Move X8, 0x4CB000
	083 Move X8, [X8+3648]
	084 Move W2, 36
	085 Move X3, X31
	086 Move X1, [X8]
	087 Call Type.GetMethod, X0, X1, X2
	088 Move [X19+16], X0
	089 Move X0, [X23]
	090 Move X1, X31
	091 Call Type.GetTypeFromHandle, X0
	092 Compare X0, 0
	093 JumpIfEqual {254}
	094 Move X8, [X0]
	095 Move X25, 0x4CB000
	096 Move W1, 20
	097 Move X9, [X8+1880]
	098 Move X2, [X8+1888]
	099 Move X25, [X25+3624]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X25]
	102 Move X20, X0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {109}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, [X25]
	109 Move X9, [X8+184]
	110 Move X26, 0x4CB000
	111 Move X21, [X9+8]
	112 Move X26, [X26+3600]
	113 Compare X21, 0
	114 JumpIfNotEqual {137}
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {121}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X8, [X25]
	121 Move X9, 0x4CB000
	122 Move X8, [X8+184]
	123 Move X9, [X9+3608]
	124 Move X22, [X8]
	125 Move X0, [X9]
	126 Call 0x1C17F10
	127 Move X8, 0x4CB000
	128 Move X8, [X8+3616]
	129 Move X1, X22
	130 Move X3, X31
	131 Move X21, X0
	132 Move X2, [X8]
	133 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	134 Move X8, [X25]
	135 Move X8, [X8+184]
	136 Move [X8+8], X21
	137 Move X2, [X26]
	138 Move X0, X20
	139 Move X1, X21
	140 Call Enumerable.First, X0, X1
	141 Move [X19+24], X0
	142 Move X0, [X24]
	143 Move X20, [X23]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X0, X20
	149 Move X1, X31
	150 Call Type.GetTypeFromHandle, X0
	151 Compare X0, 0
	152 JumpIfEqual {254}
	153 Move X8, 0x4CB000
	154 Move X8, [X8+3640]
	155 Move W2, 36
	156 Move X3, X31
	157 Move X1, [X8]
	158 Call Type.GetMethod, X0, X1, X2
	159 Move [X19+32], X0
	160 Move X0, [X23]
	161 Move X1, X31
	162 Call Type.GetTypeFromHandle, X0
	163 Compare X0, 0
	164 JumpIfEqual {254}
	165 Move X8, 0x4CB000
	166 Move X8, [X8+3632]
	167 Move W2, 36
	168 Move X3, X31
	169 Move X1, [X8]
	170 Call Type.GetMethod, X0, X1, X2
	171 Move [X19+40], X0
	172 Move X0, [X23]
	173 Move X1, X31
	174 Call Type.GetTypeFromHandle, X0
	175 Compare X0, 0
	176 JumpIfEqual {254}
	177 Move X8, 0x4CB000
	178 Move X8, [X8+3696]
	179 Move W2, 36
	180 Move X3, X31
	181 Move X1, [X8]
	182 Call Type.GetMethod, X0, X1, X2
	183 Move [X19+48], X0
	184 Move X0, [X23]
	185 Move X1, X31
	186 Call Type.GetTypeFromHandle, X0
	187 Compare X0, 0
	188 JumpIfEqual {254}
	189 Move X8, 0x4CB000
	190 Move X8, [X8+3688]
	191 Move W2, 36
	192 Move X3, X31
	193 Move X1, [X8]
	194 Call Type.GetMethod, X0, X1, X2
	195 Move [X19+56], X0
	196 Move X0, [X23]
	197 Move X1, X31
	198 Call Type.GetTypeFromHandle, X0
	199 Compare X0, 0
	200 JumpIfEqual {254}
	201 Move X8, 0x4CB000
	202 Move X8, [X8+3656]
	203 Move W2, 36
	204 Move X3, X31
	205 Move X1, [X8]
	206 Call Type.GetMethod, X0, X1, X2
	207 Move [X19+64], X0
	208 Move X0, [X23]
	209 Move X1, X31
	210 Call Type.GetTypeFromHandle, X0
	211 Compare X0, 0
	212 JumpIfEqual {254}
	213 Move X8, 0x4CB000
	214 Move X8, [X8+3672]
	215 Move W2, 36
	216 Move X3, X31
	217 Move X1, [X8]
	218 Call Type.GetMethod, X0, X1, X2
	219 Move [X19+72], X0
	220 Move X0, [X23]
	221 Move X1, X31
	222 Call Type.GetTypeFromHandle, X0
	223 Compare X0, 0
	224 JumpIfEqual {254}
	225 Move X8, 0x4CB000
	226 Move X8, [X8+3664]
	227 Move W2, 36
	228 Move X3, X31
	229 Move X1, [X8]
	230 Call Type.GetMethod, X0, X1, X2
	231 Move [X19+80], X0
	232 Move X0, [X23]
	233 Move X1, X31
	234 Call Type.GetTypeFromHandle, X0
	235 Compare X0, 0
	236 JumpIfEqual {254}
	237 Move X8, 0x4CB000
	238 Move X8, [X8+3680]
	239 Move W2, 36
	240 Move X3, X31
	241 Move X1, [X8]
	242 Call Type.GetMethod, X0, X1, X2
	243 Move [X19+88], X0
	244 Move X20, [X31+64]
	245 Move X19, [X31+72]
	246 Move X22, [X31+48]
	247 Move X21, [X31+56]
	248 Move X24, [X31+32]
	249 Move X23, [X31+40]
	250 Move X26, [X31+16]
	251 Move X25, [X31+24]
	252 Move X30, [X31+80]
	253 Return 
	254 Call 0x1C17F20

Method: Unity.Properties.IPropertyBag CreatePropertyBag(System.Type type)

Disassembly:
	0x03C96698 STP X20, X19, [X31 + 0x10]
	0x03C9669C ADRP X21, 0x751000
	0x03C966A0 LDRB W8, [X21 + 0xE3]
	0x03C966A4 MOV X19, X1
	0x03C966A8 MOV X20, X0
	0x03C966AC TBNZ X8, 0x0, 0x3C966C4
	0x03C966B0 ADRP X0, 0x45D000
	0x03C966B4 LDR X0, [X0 + 0x988]
	0x03C966B8 BL 0x1C16CF4
	0x03C966BC MOVZ W8, 0x1
	0x03C966C0 STRB W8, [X21 + 0xE3]
	0x03C966C4 MOV X0, X20
	0x03C966C8 MOV X1, X31
	0x03C966CC BL 0x33A51F0
	0x03C966D0 CBZ X19, 0x3C96700
	0x03C966D4 ADRP X8, 0x45D000
	0x03C966D8 LDR X8, [X8 + 0x988]
	0x03C966DC MOV X0, X19
	0x03C966E0 MOV X2, X31
	0x03C966E4 LDR X1, [X8]
	0x03C966E8 BL 0x321BA08
	0x03C966EC TBNZ X0, 0x0, 0x3C96734
	0x03C966F0 STR X19, [X20 + 0x10]
	0x03C966F4 LDP X20, X19, [X31 + 0x10]
	0x03C966F8 LDP X30, X21, [X31], #0x20
	0x03C966FC RET
	0x03C96700 ADRP X0, 0x462000
	0x03C96704 LDR X0, [X0 + 0x528]
	0x03C96708 BL 0x1C16D08
	0x03C9670C BL 0x1C16F10
	0x03C96710 MOV X19, X0
	0x03C96714 ADRP X0, 0x4A7000
	0x03C96718 LDR X0, [X0 + 0xFA8]
	0x03C9671C BL 0x1C16D08
	0x03C96720 MOV X1, X0
	0x03C96724 MOV X0, X19
	0x03C96728 MOV X2, X31
	0x03C9672C BL 0x330E100
	0x03C96730 B 0x3C96778
	0x03C96734 ADRP X0, 0x465000
	0x03C96738 LDR X0, [X0 + 0x578]
	0x03C9673C BL 0x1C16D08
	0x03C96740 BL 0x1C16F10
	0x03C96744 MOV X19, X0
	0x03C96748 ADRP X0, 0x4CA000
	0x03C9674C LDR X0, [X0 + 0xED8]
	0x03C96750 BL 0x1C16D08
	0x03C96754 MOV X20, X0
	0x03C96758 ADRP X0, 0x4A7000
	0x03C9675C LDR X0, [X0 + 0xFA8]
	0x03C96760 BL 0x1C16D08
	0x03C96764 MOV X2, X0
	0x03C96768 MOV X0, X19
	0x03C9676C MOV X1, X20
	0x03C96770 MOV X3, X31
	0x03C96774 BL 0x330E16C
	0x03C96778 ADRP X0, 0x4CA000
	0x03C9677C LDR X0, [X0 + 0xEE0]
	0x03C96780 BL 0x1C16D08
	0x03C96784 MOV X1, X0
	0x03C96788 MOV X0, X19
	0x03C9678C BL 0x1C16DEC
	0x03C96790 STR X1, [X0 + 0x10]
	0x03C96794 RET
	0x03C96798 STP X30, X21, [X31 - 0x20]!
	0x03C9679C STP X20, X19, [X31 + 0x10]
	0x03C967A0 ADRP X21, 0x751000
	0x03C967A4 LDRB W8, [X21 + 0xE4]
	0x03C967A8 MOV X19, X1
	0x03C967AC MOV X20, X0
	0x03C967B0 TBNZ X8, 0x0, 0x3C967C8
	0x03C967B4 ADRP X0, 0x45D000
	0x03C967B8 LDR X0, [X0 + 0x988]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x752000
	007 Move W8, [X21+215]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4CB000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x466000
	018 Move X0, [X0+3168]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+215], W8
	022 Compare X20, 0
	023 JumpIfEqual {83}
	024 Move X8, [X20]
	025 Move X0, X20
	026 Move X9, [X8+984]
	027 Move X1, [X8+992]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Move X0, X31
	034 Move X8, 0x466000
	035 Move X21, [X19+24]
	036 Move X8, [X8+3168]
	037 Move W1, 1
	038 Move X0, [X8]
	039 Call 0x1C17D6C
	040 Compare X0, 0
	041 JumpIfEqual {83}
	042 Move X8, [X0]
	043 Move X22, X0
	044 Move X0, X20
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {84}
	049 Move W8, [X22+24]
	050 Compare W8, 0
	051 JumpIfEqual {87}
	052 Move [X22+32], X20
	053 Compare X21, 0
	054 JumpIfEqual {83}
	055 Move X8, [X21]
	056 Move X0, X21
	057 Move X1, X22
	058 Move X9, [X8+984]
	059 Move X2, [X8+992]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X0, 0
	062 JumpIfEqual {83}
	063 Move X1, X19
	064 Move X2, X31
	065 Move X3, X31
	066 Call MethodBase.Invoke, X0, X1, X2
	067 Compare X0, 0
	068 JumpIfEqual {77}
	069 Move X8, 0x4CB000
	070 Move X8, [X8+2600]
	071 Move X19, X0
	072 Move X20, [X8]
	073 Move X1, X20
	074 Call 0x1C17E00
	075 Compare X0, 0
	076 JumpIfEqual {88}
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return X0
	083 Call 0x1C17F20
	084 Call 0x1C17F44
	085 Move X1, X31
	086 Call 0x1C17DEC
	087 Call 0x1C17F28
	088 Move X0, X19
	089 Move X1, X20
	090 Call 0x1C181E0

Method: Unity.Properties.IPropertyBag`1<TContainer> CreatePropertyBag()

Disassembly:
	0x0223F910 ADD X0, X31, 0x20
	0x0223F914 MOV X2, X31
	0x0223F918 BL 0x3C91080
	0x0223F91C ADRP X8, 0x1EDD000
	0x0223F920 LDR V0, [X31 + 0x2]
	0x0223F924 LDR X8, [X8 + 0x3B0]
	0x0223F928 STR V0, [X31 + 0x1]
	0x0223F92C LDR X0, [X8]
	0x0223F930 ADD X1, X31, 0x10
	0x0223F934 BL 0x1C16E04
	0x0223F938 B 0x223F770
	0x0223F93C MOV X20, X31
	0x0223F940 CBZ X22, 0x223F9A4
	0x0223F944 ADRP X10, 0x1EB4000
	0x0223F948 LDR X8, [X22]
	0x0223F94C LDR X10, [X10 + 0xE00]
	0x0223F950 LDRH W9, [X8 + 0x12E]
	0x0223F954 LDR X1, [X10]
	0x0223F958 CBZ X9, 0x223F97C
	0x0223F95C LDR X10, [X8 + 0xB0]
	0x0223F960 ADD X10, X10, 0x8
	0x0223F964 LDUR X11, [X10 - 0x8]
	0x0223F968 CMP X11, X1
	0x0223F96C B.EQ 0x223F98C
	0x0223F970 SUBS X9, X9, 0x1
	0x0223F974 ADD X10, X10, 0x10
	0x0223F978 B.NE 0x223F964
	0x0223F97C MOV X0, X22
	0x0223F980 MOV W2, W31
	0x0223F984 BL 0x1C5C788
	0x0223F988 B 0x223F998
	0x0223F98C LDRSW X9, [X10]
	0x0223F990 ADD X8, X8, X9, 0x4, LSL
	0x0223F994 ADD X0, X8, 0x138
	0x0223F998 LDP X8, X1, [X0]
	0x0223F99C MOV X0, X22
	0x0223F9A0 BLR X8
	0x0223F9A4 CBZ X20, 0x223F1CC
	0x0223F9A8 MOV X0, X20
	0x0223F9AC BL 0x1C16F18
	0x0223F9B0 BL 0x1C16F20
	0x0223F9B4 ADRP X0, 0x1EB4000
	0x0223F9B8 LDR X0, [X0 + 0x5B0]
	0x0223F9BC BL 0x1C16D08
	0x0223F9C0 BL 0x1C16F10
	0x0223F9C4 MOV X19, X0
	0x0223F9C8 MOV X1, X31
	0x0223F9CC BL 0x337DEC0
	0x0223F9D0 LDR X1, [X31 + 0x8]
	0x0223F9D4 MOV X0, X19
	0x0223F9D8 BL 0x1C16DEC
	0x0223F9DC BL 0x1C16F20
	0x0223F9E0 BL 0x1C16F28
	0x0223F9E4 BL 0x1C16F20
	0x0223F9E8 BL 0x1C16F28
	0x0223F9EC BL 0x1C16F20
	0x0223F9F0 BL 0x1C16F44
	0x0223F9F4 MOV X1, X31
	0x0223F9F8 BL 0x1C16DEC
	0x0223F9FC BL 0x1C16F20
	0x0223FA00 BL 0x1C16F20
	0x0223FA04 BL 0x1C16F28
	0x0223FA08 BL 0x1C16F28
	0x0223FA0C ADRP X0, 0x1EB4000
	0x0223FA10 LDR X0, [X0 + 0x5B0]
	0x0223FA14 BL 0x1C16D08
	0x0223FA18 BL 0x1C16F10
	0x0223FA1C MOV X19, X0
	0x0223FA20 ADRP X0, 0x1EDD000
	0x0223FA24 LDR X0, [X0 + 0x400]
	0x0223FA28 BL 0x1C16D08
	0x0223FA2C MOV X1, X0
	0x0223FA30 MOV X0, X19
	0x0223FA34 MOV X2, X31
	0x0223FA38 BL 0x337DF1C
	0x0223FA3C MOV X0, X19
	0x0223FA40 MOV X1, X20
	0x0223FA44 BL 0x1C16DEC
	0x0223FA48 BL 0x1C16F44
	0x0223FA4C MOV X1, X31
	0x0223FA50 BL 0x1C16DEC
	0x0223FA54 BL 0x1C16F44
	0x0223FA58 MOV X1, X31
	0x0223FA5C BL 0x1C16DEC
	0x0223FA60 BL 0x1C16F44
	0x0223FA64 MOV X1, X31
	0x0223FA68 BL 0x1C16DEC
	0x0223FA6C BL 0x1C16F28
	0x0223FA70 BL 0x1C16F44
	0x0223FA74 MOV X1, X31
	0x0223FA78 BL 0x1C16DEC
	0x0223FA7C ADRP X0, 0x1EB4000
	0x0223FA80 LDR X0, [X0 + 0x5B0]
	0x0223FA84 BL 0x1C16D08
	0x0223FA88 BL 0x1C16F10
	0x0223FA8C MOV X19, X0
	0x0223FA90 ADRP X0, 0x1EDD000
	0x0223FA94 LDR X0, [X0 + 0x408]
	0x0223FA98 B 0x223FA28
	0x0223FA9C BL 0x1C16F20
	0x0223FAA0 B 0x223FAF4
	0x0223FAA4 B 0x223FAF4
	0x0223FAA8 B 0x223FAF4
	0x0223FAAC B 0x223FAF4
	0x0223FAB0 B 0x223FAF4
	0x0223FAB4 B 0x223FAF4
	0x0223FAB8 B 0x223FAF4
	0x0223FABC B 0x223FAF4
	0x0223FAC0 B 0x223FAF4
	0x0223FAC4 B 0x223FAF4
	0x0223FAC8 B 0x223FAF4
	0x0223FACC B 0x223FAF4
	0x0223FAD0 B 0x223FAF4
	0x0223FAD4 B 0x223FAF4
	0x0223FAD8 B 0x223FAF4
	0x0223FADC B 0x223FAF4
	0x0223FAE0 B 0x223FAF4
	0x0223FAE4 B 0x223FAF4
	0x0223FAE8 B 0x223FAF4
	0x0223FAEC B 0x223FAF4
	0x0223FAF0 B 0x223FAF4
	0x0223FAF4 MOV X19, X0
	0x0223FAF8 CMP W1, 0x1
	0x0223FAFC B.NE 0x223FB14
	0x0223FB00 MOV X0, X19
	0x0223FB04 BL 0x3EB1AD0
	0x0223FB08 LDR X20, [X0]
	0x0223FB0C BL 0x3EB1AE0
	0x0223FB10 B 0x223F940
	0x0223FB14 MOV X20, X31
	0x0223FB18 B 0x223FB20
	0x0223FB1C MOV X19, X0
	0x0223FB20 CBZ X22, 0x223FB84
	0x0223FB24 ADRP X10, 0x1EB4000
	0x0223FB28 LDR X8, [X22]
	0x0223FB2C LDR X10, [X10 + 0xE00]
	0x0223FB30 LDRH W9, [X8 + 0x12E]
	0x0223FB34 LDR X1, [X10]
	0x0223FB38 CBZ X9, 0x223FB5C
	0x0223FB3C LDR X10, [X8 + 0xB0]
	0x0223FB40 ADD X10, X10, 0x8
	0x0223FB44 LDUR X11, [X10 - 0x8]
	0x0223FB48 CMP X11, X1
	0x0223FB4C B.EQ 0x223FB6C
	0x0223FB50 SUBS X9, X9, 0x1
	0x0223FB54 ADD X10, X10, 0x10
	0x0223FB58 B.NE 0x223FB44
	0x0223FB5C MOV X0, X22
	0x0223FB60 MOV W2, W31
	0x0223FB64 BL 0x1C5C788
	0x0223FB68 B 0x223FB78
	0x0223FB6C LDRSW X9, [X10]
	0x0223FB70 ADD X8, X8, X9, 0x4, LSL
	0x0223FB74 ADD X0, X8, 0x138
	0x0223FB78 LDP X8, X1, [X0]
	0x0223FB7C MOV X0, X22
	0x0223FB80 BLR X8
	0x0223FB84 CBNZ X20, 0x223FB90
	0x0223FB88 MOV X0, X19
	0x0223FB8C BL 0x1D2C690
	0x0223FB90 MOV X0, X20
	0x0223FB94 BL 0x1C16F18
	0x0223FB98 BL 0x1990590
	0x0223FB9C STP X30, X19, [X31 - 0x10]!
	0x0223FBA0 LDR X8, [X1 + 0x38]
	0x0223FBA4 MOV X19, X1
	0x0223FBA8 CBNZ X8, 0x223FBB8
	0x0223FBAC MOV X0, X19
	0x0223FBB0 BL 0x1C5C6E0
	0x0223FBB4 LDR X8, [X19 + 0x38]
	0x0223FBB8 LDR X0, [X8]
	0x0223FBBC LDRB W8, [X0 + 0x135]
	0x0223FBC0 TBNZ X8, 0x0, 0x223FBC8
	0x0223FBC4 BL 0x1C5C684
	0x0223FBC8 BL 0x1C16F10
	0x0223FBCC LDR X8, [X19 + 0x38]
	0x0223FBD0 MOV X19, X0
	0x0223FBD4 LDR X1, [X8 + 0x8]
	0x0223FBD8 LDR X8, [X1]
	0x0223FBDC BLR X8
	0x0223FBE0 MOV X0, X19
	0x0223FBE4 LDP X30, X19, [X31], #0x10
	0x0223FBE8 RET
	0x0223FBEC STR X30, [X31 - 0x30]!
	0x0223FBF0 STP X22, X21, [X31 + 0x10]
	0x0223FBF4 STP X20, X19, [X31 + 0x20]
	0x0223FBF8 LDR X8, [X2 + 0x38]
	0x0223FBFC MOV X19, X2
	0x0223FC00 MOV W21, W1
	0x0223FC04 MOV X20, X0
	0x0223FC08 CBNZ X8, 0x223FC2C
	0x0223FC0C ADRP X0, 0x1EB4000
	0x0223FC10 LDR X0, [X0 + 0x6C0]
	0x0223FC14 BL 0x1C16CF4
	0x0223FC18 LDR X8, [X19 + 0x38]
	0x0223FC1C CBNZ X8, 0x223FC2C
	0x0223FC20 MOV X0, X19
	0x0223FC24 BL 0x1C5C6E0
	0x0223FC28 LDR X8, [X19 + 0x38]
	0x0223FC2C ADRP X9, 0x1EB4000
	0x0223FC30 LDR X9, [X9 + 0x6C0]
	0x0223FC34 LDR X22, [X8]
	0x0223FC38 LDR X0, [X9]
	0x0223FC3C LDR W9, [X0 + 0xE0]
	0x0223FC40 CBNZ W9, 0x223FC48
	0x0223FC44 BL 0x1C16DFC
	0x0223FC48 MOV X0, X22
	0x0223FC4C MOV X1, X31
	0x0223FC50 BL 0x338C698
	0x0223FC54 CBZ X20, 0x223FCE0
	0x0223FC58 LDR X8, [X20]
	0x0223FC5C MOV X1, X0
	0x0223FC60 AND W2, W21, 0x1
	0x0223FC64 MOV X0, X20
	0x0223FC68 LDR X9, [X8 + 0x208]
	0x0223FC6C LDR X3, [X8 + 0x210]
	0x0223FC70 BLR X9
	0x0223FC74 CBZ X0, 0x223FCE0
	0x0223FC78 LDR X8, [X0 + 0x18]
	0x0223FC7C CBZ X8, 0x223FCE4
	0x0223FC80 CMP W8, 0x2
	0x0223FC84 B.GE 0x223FD64
	0x0223FC88 CBZ W8, 0x223FDD8
	0x0223FC8C LDR X8, [X19 + 0x38]
	0x0223FC90 LDR X20, [X0 + 0x20]
	0x0223FC94 LDR X19, [X8 + 0x8]
	0x0223FC98 LDRB W8, [X19 + 0x135]
	0x0223FC9C TBNZ X8, 0x0, 0x223FCAC
	0x0223FCA0 MOV X0, X19
	0x0223FCA4 BL 0x1C5C684
	0x0223FCA8 MOV X19, X0
	0x0223FCAC CBZ X20, 0x223FCCC
	0x0223FCB0 MOV X0, X20
	0x0223FCB4 MOV X1, X19
	0x0223FCB8 BL 0x1C16E00
	0x0223FCBC CBNZ X0, 0x223FCD0
	0x0223FCC0 MOV X0, X20
	0x0223FCC4 MOV X1, X19
	0x0223FCC8 BL 0x1C171E0
	0x0223FCCC MOV X0, X31
	0x0223FCD0 LDP X20, X19, [X31 + 0x20]
	0x0223FCD4 LDP X22, X21, [X31 + 0x10]
	0x0223FCD8 LDR X30, [X31], #0x30
	0x0223FCDC RET
	0x0223FCE0 BL 0x1C16F20
	0x0223FCE4 LDR X8, [X19 + 0x38]
	0x0223FCE8 ADRP X0, 0x1EB4000
	0x0223FCEC LDR X21, [X8]
	0x0223FCF0 LDR X0, [X0 + 0x6C0]
	0x0223FCF4 BL 0x1C16D08
	0x0223FCF8 BL 0x19903D0
	0x0223FCFC MOV X0, X21
	0x0223FD00 MOV X1, X31
	0x0223FD04 BL 0x338C698
	0x0223FD08 MOV X21, X0
	0x0223FD0C ADRP X0, 0x1EDD000
	0x0223FD10 LDR X0, [X0 + 0x410]
	0x0223FD14 BL 0x1C16D08
	0x0223FD18 MOV X1, X20
	0x0223FD1C MOV X2, X21
	0x0223FD20 MOV X3, X31
	0x0223FD24 BL 0x3227BD4
	0x0223FD28 MOV X20, X0
	0x0223FD2C ADRP X0, 0x1EBC000
	0x0223FD30 LDR X0, [X0 + 0x760]
	0x0223FD34 BL 0x1C16D08
	0x0223FD38 BL 0x1C16F10
	0x0223FD3C MOV X21, X0
	0x0223FD40 ADRP X0, 0x1EDD000
	0x0223FD44 LDR X0, [X0 + 0x418]
	0x0223FD48 BL 0x1C16D08
	0x0223FD4C MOV X1, X0
	0x0223FD50 MOV X0, X21
	0x0223FD54 MOV X2, X20
	0x0223FD58 MOV X3, X31
	0x0223FD5C BL 0x3311888
	0x0223FD60 B 0x223FDCC
	0x0223FD64 LDR X8, [X19 + 0x38]
	0x0223FD68 ADRP X0, 0x1EB4000
	0x0223FD6C LDR X21, [X8]
	0x0223FD70 LDR X0, [X0 + 0x6C0]
	0x0223FD74 BL 0x1C16D08
	0x0223FD78 BL 0x19903D0
	0x0223FD7C MOV X0, X21
	0x0223FD80 MOV X1, X31
	0x0223FD84 BL 0x338C698
	0x0223FD88 MOV X21, X0
	0x0223FD8C ADRP X0, 0x1EDD000
	0x0223FD90 LDR X0, [X0 + 0x420]
	0x0223FD94 BL 0x1C16D08
	0x0223FD98 MOV X1, X20
	0x0223FD9C MOV X2, X21
	0x0223FDA0 MOV X3, X31
	0x0223FDA4 BL 0x3227BD4
	0x0223FDA8 MOV X20, X0
	0x0223FDAC ADRP X0, 0x1EB4000
	0x0223FDB0 LDR X0, [X0 + 0x5B0]
	0x0223FDB4 BL 0x1C16D08
	0x0223FDB8 BL 0x1C16F10
	0x0223FDBC MOV X1, X20
	0x0223FDC0 MOV X2, X31
	0x0223FDC4 MOV X21, X0
	0x0223FDC8 BL 0x337DF1C
	0x0223FDCC MOV X0, X21
	0x0223FDD0 MOV X1, X19
	0x0223FDD4 BL 0x1C16DEC
	0x0223FDD8 BL 0x1C16F28
	0x0223FDDC SUB X31, X31, 0x80
	0x0223FDE0 STP X29, X30, [X31 + 0x20]
	0x0223FDE4 STP X28, X27, [X31 + 0x30]
	0x0223FDE8 STP X26, X25, [X31 + 0x40]
	0x0223FDEC STP X24, X23, [X31 + 0x50]
	0x0223FDF0 STP X22, X21, [X31 + 0x60]
	0x0223FDF4 STP X20, X19, [X31 + 0x70]
	0x0223FDF8 LDR X8, [X2 + 0x38]
	0x0223FDFC MOV X20, X2
	0x0223FE00 MOV X21, X1
	0x0223FE04 MOV X19, X0
	0x0223FE08 CBNZ X8, 0x223FE94
	0x0223FE0C ADRP X0, 0x1EB4000
	0x0223FE10 LDR X0, [X0 + 0x9C8]
	0x0223FE14 BL 0x1C16CF4
	0x0223FE18 ADRP X0, 0x1EDD000
	0x0223FE1C LDR X0, [X0 + 0x428]
	0x0223FE20 BL 0x1C16CF4
	0x0223FE24 ADRP X0, 0x1EB9000
	0x0223FE28 LDR X0, [X0 + 0x348]
	0x0223FE2C BL 0x1C16CF4
	0x0223FE30 ADRP X0, 0x1EB4000
	0x0223FE34 LDR X0, [X0 + 0xAC8]
	0x0223FE38 BL 0x1C16CF4
	0x0223FE3C ADRP X0, 0x1EB4000
	0x0223FE40 LDR X0, [X0 + 0x6C0]
	0x0223FE44 BL 0x1C16CF4
	0x0223FE48 ADRP X0, 0x1EDD000
	0x0223FE4C LDR X0, [X0 + 0x430]
	0x0223FE50 BL 0x1C16CF4
	0x0223FE54 ADRP X0, 0x1EDD000
	0x0223FE58 LDR X0, [X0 + 0x438]
	0x0223FE5C BL 0x1C16CF4
	0x0223FE60 ADRP X0, 0x1EDD000
	0x0223FE64 LDR X0, [X0 + 0x440]
	0x0223FE68 BL 0x1C16CF4
	0x0223FE6C ADRP X0, 0x1EDD000
	0x0223FE70 LDR X0, [X0 + 0x448]
	0x0223FE74 BL 0x1C16CF4
	0x0223FE78 ADRP X0, 0x1EB6000
	0x0223FE7C LDR X0, [X0 + 0x260]
	0x0223FE80 BL 0x1C16CF4
	0x0223FE84 LDR X8, [X20 + 0x38]
	0x0223FE88 CBNZ X8, 0x223FE94
	0x0223FE8C MOV X0, X20
	0x0223FE90 BL 0x1C5C6E0
	0x0223FE94 ADRP X26, 0x1EB4000
	0x0223FE98 LDR X22, [X19 + 0x10]
	0x0223FE9C LDR X26, [X26 + 0xAC8]
	0x0223FEA0 MOVZ W1, 0x6
	0x0223FEA4 LDR X0, [X26]
	0x0223FEA8 BL 0x1C16D6C
	0x0223FEAC CBZ X0, 0x224026C
	0x0223FEB0 LDR W8, [X0 + 0x18]
	0x0223FEB4 MOV X23, X0
	0x0223FEB8 CBZ W8, 0x2240268
	0x0223FEBC LDR X9, [X19 + 0x48]
	0x0223FEC0 CMP W8, 0x1
	0x0223FEC4 STR X9, [X23 + 0x20]
	0x0223FEC8 B.EQ 0x2240268
	0x0223FECC ADRP X8, 0x1EDD000
	0x0223FED0 LDR X8, [X8 + 0x448]
	0x0223FED4 ADRP X25, 0x1EDD000
	0x0223FED8 MOVN X10, 0x0
	0x0223FEDC ADD X0, X31, 0x8
	0x0223FEE0 LDR X8, [X8]
	0x0223FEE4 LDR X25, [X25 + 0x428]
	0x0223FEE8 MOV X1, X31
	0x0223FEEC STR X8, [X23 + 0x28]
	0x0223FEF0 LDR X8, [X25]
	0x0223FEF4 LDR W9, [X19 + 0x18]
	0x0223FEF8 STP X8, X10, [X31 + 0x8]
	0x0223FEFC STR W9, [X31 + 0x18]
	0x0223FF00 BL 0x33B162C
	0x0223FF04 LDR W8, [X23 + 0x18]
	0x0223FF08 CMP W8, 0x2
	0x0223FF0C B.LS 0x2240268
	0x0223FF10 CMP W8, 0x3
	0x0223FF14 STR X0, [X23 + 0x30]
	0x0223FF18 B.EQ 0x2240268
	0x0223FF1C ADRP X8, 0x1EDD000
	0x0223FF20 LDR X8, [X8 + 0x430]
	0x0223FF24 ADRP X29, 0x1EB4000
	0x0223FF28 LDR X8, [X8]
	0x0223FF2C STR X8, [X23 + 0x38]
	0x0223FF30 LDR X29, [X29 + 0x6C0]
	0x0223FF34 LDR X8, [X20 + 0x38]
	0x0223FF38 LDR X0, [X29]
	0x0223FF3C LDR X24, [X8]
	0x0223FF40 LDR W9, [X0 + 0xE0]
	0x0223FF44 CBNZ W9, 0x223FF4C
	0x0223FF48 BL 0x1C16DFC
	0x0223FF4C MOV X0, X24
	0x0223FF50 MOV X1, X31
	0x0223FF54 BL 0x338C698
	0x0223FF58 CBZ X0, 0x223FF68
	0x0223FF5C LDR X8, [X0]
	0x0223FF60 LDP X9, X1, [X8 + 0x168]
	0x0223FF64 BLR X9
	0x0223FF68 LDR W8, [X23 + 0x18]
	0x0223FF6C CMP W8, 0x4
	0x0223FF70 B.LS 0x2240268
	0x0223FF74 CMP W8, 0x5
	0x0223FF78 STR X0, [X23 + 0x40]
	0x0223FF7C B.EQ 0x2240268
	0x0223FF80 ADRP X8, 0x1EB6000
	0x0223FF84 LDR X8, [X8 + 0x260]
	0x0223FF88 MOV X0, X23
	0x0223FF8C MOV X1, X31
	0x0223FF90 LDR X8, [X8]
	0x0223FF94 STR X8, [X23 + 0x48]
	0x0223FF98 BL 0x32278CC
	0x0223FF9C ADRP X27, 0x1EB4000
	0x0223FFA0 LDR X27, [X27 + 0x9C8]
	0x0223FFA4 MOV X23, X0
	0x0223FFA8 LDR X24, [X27]
	0x0223FFAC LDR X8, [X24 + 0x38]
	0x0223FFB0 CBNZ X8, 0x223FFC0
	0x0223FFB4 MOV X0, X24
	0x0223FFB8 BL 0x1C5C6E0
	0x0223FFBC LDR X8, [X24 + 0x38]
	0x0223FFC0 LDR X0, [X8 + 0x10]
	0x0223FFC4 LDRB W8, [X0 + 0x135]
	0x0223FFC8 TBNZ X8, 0x0, 0x223FFD0
	0x0223FFCC BL 0x1C5C684
	0x0223FFD0 LDR W8, [X0 + 0xE0]
	0x0223FFD4 CBNZ W8, 0x223FFDC
	0x0223FFD8 BL 0x1C16DFC
	0x0223FFDC LDR X8, [X24 + 0x38]
	0x0223FFE0 LDR X0, [X8 + 0x10]
	0x0223FFE4 LDRB W8, [X0 + 0x135]
	0x0223FFE8 TBNZ X8, 0x0, 0x223FFF0
	0x0223FFEC BL 0x1C5C684
	0x0223FFF0 CBZ X22, 0x224026C
	0x0223FFF4 ADRP X28, 0x1EB9000
	0x0223FFF8 LDR X9, [X0 + 0xB8]
	0x0223FFFC LDR X8, [X22]
	0x02240000 LDR X28, [X28 + 0x348]
	0x02240004 LDR X24, [X9]
	0x02240008 LDRH W9, [X8 + 0x12E]
	0x0224000C LDR X1, [X28]
	0x02240010 CBZ X9, 0x2240034
	0x02240014 LDR X10, [X8 + 0xB0]
	0x02240018 ADD X10, X10, 0x8
	0x0224001C LDUR X11, [X10 - 0x8]
	0x02240020 CMP X11, X1
	0x02240024 B.EQ 0x2240044
	0x02240028 SUBS X9, X9, 0x1
	0x0224002C ADD X10, X10, 0x10
	0x02240030 B.NE 0x224001C
	0x02240034 MOVZ W2, 0x1
	0x02240038 MOV X0, X22
	0x0224003C BL 0x1C5C788
	0x02240040 B 0x2240054
	0x02240044 LDR W9, [X10]
	0x02240048 ADD W9, W9, 0x1
	0x0224004C ADD X8, X8, W9, 0x4, SXTW
	0x02240050 ADD X0, X8, 0x138
	0x02240054 LDP X8, X4, [X0]
	0x02240058 MOVZ W1, 0x3
	0x0224005C MOV X0, X22
	0x02240060 MOV X2, X23
	0x02240064 MOV X3, X24
	0x02240068 BLR X8
	0x0224006C LDR W8, [X19 + 0x18]
	0x02240070 LDR X22, [X19 + 0x10]
	0x02240074 CMP W8, 0xB
	0x02240078 B.NE 0x22400B4
	0x0224007C LDR X8, [X20 + 0x38]
	0x02240080 LDR X0, [X8 + 0x10]
	0x02240084 LDRB W8, [X0 + 0x135]
	0x02240088 TBNZ X8, 0x0, 0x2240090
	0x0224008C BL 0x1C5C684
	0x02240090 BL 0x1C16F10
	0x02240094 LDR X8, [X20 + 0x38]
	0x02240098 MOV X1, X21
	0x0224009C MOV X2, X22
	0x022400A0 MOV X20, X0
	0x022400A4 LDR X3, [X8 + 0x18]
	0x022400A8 BL 0x29B109C
	0x022400AC STR X20, [X19 + 0x8]
	0x022400B0 B 0x2240248
	0x022400B4 LDR X0, [X26]
	0x022400B8 MOVZ W1, 0x5
	0x022400BC BL 0x1C16D6C
	0x022400C0 CBZ X0, 0x224026C
	0x022400C4 LDR W8, [X0 + 0x18]
	0x022400C8 MOV X21, X0
	0x022400CC CBZ W8, 0x2240268
	0x022400D0 LDR X9, [X19 + 0x48]
	0x022400D4 CMP W8, 0x1
	0x022400D8 STR X9, [X21 + 0x20]
	0x022400DC B.EQ 0x2240268
	0x022400E0 ADRP X8, 0x1EDC000
	0x022400E4 LDR X8, [X8 + 0x440]
	0x022400E8 LDR X8, [X8]
	0x022400EC STR X8, [X21 + 0x28]
	0x022400F0 LDR X0, [X29]
	0x022400F4 LDR X8, [X20 + 0x38]
	0x022400F8 LDR W9, [X0 + 0xE0]
	0x022400FC LDR X20, [X8]
	0x02240100 CBNZ W9, 0x2240108
	0x02240104 BL 0x1C16DFC
	0x02240108 MOV X0, X20
	0x0224010C MOV X1, X31
	0x02240110 BL 0x338C698
	0x02240114 CBZ X0, 0x2240124
	0x02240118 LDR X8, [X0]
	0x0224011C LDP X9, X1, [X8 + 0x168]
	0x02240120 BLR X9
	0x02240124 LDR W8, [X21 + 0x18]
	0x02240128 CMP W8, 0x2
	0x0224012C B.LS 0x2240268
	0x02240130 CMP W8, 0x3
	0x02240134 STR X0, [X21 + 0x30]
	0x02240138 B.EQ 0x2240268
	0x0224013C ADRP X8, 0x1EDC000
	0x02240140 LDR X8, [X8 + 0x438]
	0x02240144 MOVN X10, 0x0
	0x02240148 ADD X0, X31, 0x8
	0x0224014C MOV X1, X31
	0x02240150 LDR X8, [X8]
	0x02240154 STR X8, [X21 + 0x38]
	0x02240158 LDR X8, [X25]
	0x0224015C LDR W9, [X19 + 0x18]
	0x02240160 STP X8, X10, [X31 + 0x8]
	0x02240164 STR W9, [X31 + 0x18]
	0x02240168 BL 0x33B162C
	0x0224016C LDR W8, [X21 + 0x18]
	0x02240170 CMP W8, 0x4
	0x02240174 B.LS 0x2240268
	0x02240178 STR X0, [X21 + 0x40]
	0x0224017C MOV X0, X21
	0x02240180 MOV X1, X31
	0x02240184 BL 0x32278CC
	0x02240188 LDR X20, [X27]
	0x0224018C MOV X19, X0
	0x02240190 LDR X8, [X20 + 0x38]
	0x02240194 CBNZ X8, 0x22401A4
	0x02240198 MOV X0, X20
	0x0224019C BL 0x1C5C6E0
	0x022401A0 LDR X8, [X20 + 0x38]
	0x022401A4 LDR X0, [X8 + 0x10]
	0x022401A8 LDRB W8, [X0 + 0x135]
	0x022401AC TBNZ X8, 0x0, 0x22401B4
	0x022401B0 BL 0x1C5C684
	0x022401B4 LDR W8, [X0 + 0xE0]
	0x022401B8 CBNZ W8, 0x22401C0
	0x022401BC BL 0x1C16DFC
	0x022401C0 LDR X8, [X20 + 0x38]
	0x022401C4 LDR X0, [X8 + 0x10]
	0x022401C8 LDRB W8, [X0 + 0x135]
	0x022401CC TBNZ X8, 0x0, 0x22401D4
	0x022401D0 BL 0x1C5C684
	0x022401D4 CBZ X22, 0x224026C
	0x022401D8 LDR X9, [X0 + 0xB8]
	0x022401DC LDR X8, [X22]
	0x022401E0 LDR X1, [X28]
	0x022401E4 LDR X20, [X9]
	0x022401E8 LDRH W9, [X8 + 0x12E]
	0x022401EC CBZ X9, 0x2240210
	0x022401F0 LDR X10, [X8 + 0xB0]
	0x022401F4 ADD X10, X10, 0x8
	0x022401F8 LDUR X11, [X10 - 0x8]
	0x022401FC CMP X11, X1
	0x02240200 B.EQ 0x2240220
	0x02240204 SUBS X9, X9, 0x1
	0x02240208 ADD X10, X10, 0x10
	0x0224020C B.NE 0x22401F8
	0x02240210 MOVZ W2, 0x1
	0x02240214 MOV X0, X22
	0x02240218 BL 0x1C5C788
	0x0224021C B 0x2240230
	0x02240220 LDR W9, [X10]
	0x02240224 ADD W9, W9, 0x1
	0x02240228 ADD X8, X8, W9, 0x4, SXTW
	0x0224022C ADD X0, X8, 0x138
	0x02240230 LDP X8, X4, [X0]
	0x02240234 MOVZ W1, 0x1
	0x02240238 MOV X0, X22
	0x0224023C MOV X2, X19
	0x02240240 MOV X3, X20
	0x02240244 BLR X8
	0x02240248 LDP X20, X19, [X31 + 0x70]
	0x0224024C LDP X22, X21, [X31 + 0x60]
	0x02240250 LDP X24, X23, [X31 + 0x50]
	0x02240254 LDP X26, X25, [X31 + 0x40]
	0x02240258 LDP X28, X27, [X31 + 0x30]
	0x0224025C LDP X29, X30, [X31 + 0x20]
	0x02240260 ADD X31, X31, 0x80
	0x02240264 RET
	0x02240268 BL 0x1C16F28
	0x0224026C BL 0x1C16F20
	0x02240270 SUB X31, X31, 0x80
	0x02240274 STP X29, X30, [X31 + 0x20]
	0x02240278 STP X28, X27, [X31 + 0x30]
	0x0224027C STP X26, X25, [X31 + 0x40]
	0x02240280 STP X24, X23, [X31 + 0x50]
	0x02240284 STP X22, X21, [X31 + 0x60]
	0x02240288 STP X20, X19, [X31 + 0x70]
	0x0224028C LDR X8, [X2 + 0x38]
	0x02240290 MOV X20, X2
	0x02240294 MOV X21, X1
	0x02240298 MOV X19, X0
	0x0224029C CBNZ X8, 0x2240328
	0x022402A0 ADRP X0, 0x1EB3000
	0x022402A4 LDR X0, [X0 + 0x9C8]
	0x022402A8 BL 0x1C16CF4
	0x022402AC ADRP X0, 0x1EDC000
	0x022402B0 LDR X0, [X0 + 0x428]
	0x022402B4 BL 0x1C16CF4
	0x022402B8 ADRP X0, 0x1EB8000
	0x022402BC LDR X0, [X0 + 0x348]
	0x022402C0 BL 0x1C16CF4
	0x022402C4 ADRP X0, 0x1EB3000
	0x022402C8 LDR X0, [X0 + 0xAC8]
	0x022402CC BL 0x1C16CF4
	0x022402D0 ADRP X0, 0x1EB3000
	0x022402D4 LDR X0, [X0 + 0x6C0]
	0x022402D8 BL 0x1C16CF4
	0x022402DC ADRP X0, 0x1EDC000
	0x022402E0 LDR X0, [X0 + 0x430]
	0x022402E4 BL 0x1C16CF4
	0x022402E8 ADRP X0, 0x1EDC000
	0x022402EC LDR X0, [X0 + 0x438]
	0x022402F0 BL 0x1C16CF4
	0x022402F4 ADRP X0, 0x1EDC000
	0x022402F8 LDR X0, [X0 + 0x440]
	0x022402FC BL 0x1C16CF4
	0x02240300 ADRP X0, 0x1EDC000
	0x02240304 LDR X0, [X0 + 0x448]
	0x02240308 BL 0x1C16CF4
	0x0224030C ADRP X0, 0x1EB5000
	0x02240310 LDR X0, [X0 + 0x260]
	0x02240314 BL 0x1C16CF4
	0x02240318 LDR X8, [X20 + 0x38]
	0x0224031C CBNZ X8, 0x2240328
	0x02240320 MOV X0, X20
	0x02240324 BL 0x1C5C6E0
	0x02240328 ADRP X26, 0x1EB3000
	0x0224032C LDR X22, [X19 + 0x10]
	0x02240330 LDR X26, [X26 + 0xAC8]
	0x02240334 MOVZ W1, 0x6
	0x02240338 LDR X0, [X26]
	0x0224033C BL 0x1C16D6C
	0x02240340 CBZ X0, 0x2240700
	0x02240344 LDR W8, [X0 + 0x18]
	0x02240348 MOV X23, X0
	0x0224034C CBZ W8, 0x22406FC
	0x02240350 LDR X9, [X19 + 0x48]
	0x02240354 CMP W8, 0x1
	0x02240358 STR X9, [X23 + 0x20]
	0x0224035C B.EQ 0x22406FC
	0x02240360 ADRP X8, 0x1EDC000
	0x02240364 LDR X8, [X8 + 0x448]
	0x02240368 ADRP X25, 0x1EDC000
	0x0224036C MOVN X10, 0x0
	0x02240370 ADD X0, X31, 0x8
	0x02240374 LDR X8, [X8]
	0x02240378 LDR X25, [X25 + 0x428]
	0x0224037C MOV X1, X31
	0x02240380 STR X8, [X23 + 0x28]
	0x02240384 LDR X8, [X25]
	0x02240388 LDR W9, [X19 + 0x18]
	0x0224038C STP X8, X10, [X31 + 0x8]
	0x02240390 STR W9, [X31 + 0x18]
	0x02240394 BL 0x33B162C
	0x02240398 LDR W8, [X23 + 0x18]
	0x0224039C CMP W8, 0x2
	0x022403A0 B.LS 0x22406FC
	0x022403A4 CMP W8, 0x3
	0x022403A8 STR X0, [X23 + 0x30]
	0x022403AC B.EQ 0x22406FC
	0x022403B0 ADRP X8, 0x1EDC000
	0x022403B4 LDR X8, [X8 + 0x430]
	0x022403B8 ADRP X29, 0x1EB3000
	0x022403BC LDR X8, [X8]
	0x022403C0 STR X8, [X23 + 0x38]
	0x022403C4 LDR X29, [X29 + 0x6C0]
	0x022403C8 LDR X8, [X20 + 0x38]
	0x022403CC LDR X0, [X29]
	0x022403D0 LDR X24, [X8]
	0x022403D4 LDR W9, [X0 + 0xE0]
	0x022403D8 CBNZ W9, 0x22403E0
	0x022403DC BL 0x1C16DFC
	0x022403E0 MOV X0, X24
	0x022403E4 MOV X1, X31
	0x022403E8 BL 0x338C698
	0x022403EC CBZ X0, 0x22403FC
	0x022403F0 LDR X8, [X0]
	0x022403F4 LDP X9, X1, [X8 + 0x168]
	0x022403F8 BLR X9
	0x022403FC LDR W8, [X23 + 0x18]
	0x02240400 CMP W8, 0x4
	0x02240404 B.LS 0x22406FC
	0x02240408 CMP W8, 0x5
	0x0224040C STR X0, [X23 + 0x40]
	0x02240410 B.EQ 0x22406FC
	0x02240414 ADRP X8, 0x1EB5000
	0x02240418 LDR X8, [X8 + 0x260]
	0x0224041C MOV X0, X23
	0x02240420 MOV X1, X31
	0x02240424 LDR X8, [X8]
	0x02240428 STR X8, [X23 + 0x48]
	0x0224042C BL 0x32278CC
	0x02240430 ADRP X27, 0x1EB3000
	0x02240434 LDR X27, [X27 + 0x9C8]
	0x02240438 MOV X23, X0
	0x0224043C LDR X24, [X27]
	0x02240440 LDR X8, [X24 + 0x38]
	0x02240444 CBNZ X8, 0x2240454
	0x02240448 MOV X0, X24
	0x0224044C BL 0x1C5C6E0
	0x02240450 LDR X8, [X24 + 0x38]
	0x02240454 LDR X0, [X8 + 0x10]
	0x02240458 LDRB W8, [X0 + 0x135]
	0x0224045C TBNZ X8, 0x0, 0x2240464
	0x02240460 BL 0x1C5C684
	0x02240464 LDR W8, [X0 + 0xE0]
	0x02240468 CBNZ W8, 0x2240470
	0x0224046C BL 0x1C16DFC
	0x02240470 LDR X8, [X24 + 0x38]
	0x02240474 LDR X0, [X8 + 0x10]
	0x02240478 LDRB W8, [X0 + 0x135]
	0x0224047C TBNZ X8, 0x0, 0x2240484
	0x02240480 BL 0x1C5C684
	0x02240484 CBZ X22, 0x2240700
	0x02240488 ADRP X28, 0x1EB8000
	0x0224048C LDR X9, [X0 + 0xB8]
	0x02240490 LDR X8, [X22]
	0x02240494 LDR X28, [X28 + 0x348]
	0x02240498 LDR X24, [X9]
	0x0224049C LDRH W9, [X8 + 0x12E]
	0x022404A0 LDR X1, [X28]
	0x022404A4 CBZ X9, 0x22404C8
	0x022404A8 LDR X10, [X8 + 0xB0]
	0x022404AC ADD X10, X10, 0x8
	0x022404B0 LDUR X11, [X10 - 0x8]
	0x022404B4 CMP X11, X1
	0x022404B8 B.EQ 0x22404D8
	0x022404BC SUBS X9, X9, 0x1
	0x022404C0 ADD X10, X10, 0x10
	0x022404C4 B.NE 0x22404B0
	0x022404C8 MOVZ W2, 0x1
	0x022404CC MOV X0, X22
	0x022404D0 BL 0x1C5C788
	0x022404D4 B 0x22404E8
	0x022404D8 LDR W9, [X10]
	0x022404DC ADD W9, W9, 0x1
	0x022404E0 ADD X8, X8, W9, 0x4, SXTW
	0x022404E4 ADD X0, X8, 0x138
	0x022404E8 LDP X8, X4, [X0]
	0x022404EC MOVZ W1, 0x3
	0x022404F0 MOV X0, X22
	0x022404F4 MOV X2, X23
	0x022404F8 MOV X3, X24
	0x022404FC BLR X8
	0x02240500 LDR W8, [X19 + 0x18]
	0x02240504 LDR X22, [X19 + 0x10]
	0x02240508 CMP W8, 0xB
	0x0224050C B.NE 0x2240548
	0x02240510 LDR X8, [X20 + 0x38]
	0x02240514 LDR X0, [X8 + 0x10]
	0x02240518 LDRB W8, [X0 + 0x135]
	0x0224051C TBNZ X8, 0x0, 0x2240524
	0x02240520 BL 0x1C5C684
	0x02240524 BL 0x1C16F10
	0x02240528 LDR X8, [X20 + 0x38]
	0x0224052C MOV X1, X21
	0x02240530 MOV X2, X22
	0x02240534 MOV X20, X0
	0x02240538 LDR X3, [X8 + 0x18]
	0x0224053C BL 0x29B17CC
	0x02240540 STR X20, [X19 + 0x8]
	0x02240544 B 0x22406DC
	0x02240548 LDR X0, [X26]
	0x0224054C MOVZ W1, 0x5
	0x02240550 BL 0x1C16D6C
	0x02240554 CBZ X0, 0x2240700
	0x02240558 LDR W8, [X0 + 0x18]
	0x0224055C MOV X21, X0
	0x02240560 CBZ W8, 0x22406FC
	0x02240564 LDR X9, [X19 + 0x48]
	0x02240568 CMP W8, 0x1
	0x0224056C STR X9, [X21 + 0x20]
	0x02240570 B.EQ 0x22406FC
	0x02240574 ADRP X8, 0x1EDC000
	0x02240578 LDR X8, [X8 + 0x440]
	0x0224057C LDR X8, [X8]
	0x02240580 STR X8, [X21 + 0x28]
	0x02240584 LDR X0, [X29]
	0x02240588 LDR X8, [X20 + 0x38]
	0x0224058C LDR W9, [X0 + 0xE0]
	0x02240590 LDR X20, [X8]
	0x02240594 CBNZ W9, 0x224059C
	0x02240598 BL 0x1C16DFC
	0x0224059C MOV X0, X20
	0x022405A0 MOV X1, X31
	0x022405A4 BL 0x338C698
	0x022405A8 CBZ X0, 0x22405B8
	0x022405AC LDR X8, [X0]
	0x022405B0 LDP X9, X1, [X8 + 0x168]
	0x022405B4 BLR X9
	0x022405B8 LDR W8, [X21 + 0x18]
	0x022405BC CMP W8, 0x2
	0x022405C0 B.LS 0x22406FC
	0x022405C4 CMP W8, 0x3
	0x022405C8 STR X0, [X21 + 0x30]
	0x022405CC B.EQ 0x22406FC
	0x022405D0 ADRP X8, 0x1EDC000
	0x022405D4 LDR X8, [X8 + 0x438]
	0x022405D8 MOVN X10, 0x0
	0x022405DC ADD X0, X31, 0x8
	0x022405E0 MOV X1, X31
	0x022405E4 LDR X8, [X8]
	0x022405E8 STR X8, [X21 + 0x38]
	0x022405EC LDR X8, [X25]
	0x022405F0 LDR W9, [X19 + 0x18]
	0x022405F4 STP X8, X10, [X31 + 0x8]
	0x022405F8 STR W9, [X31 + 0x18]
	0x022405FC BL 0x33B162C
	0x02240600 LDR W8, [X21 + 0x18]
	0x02240604 CMP W8, 0x4
	0x02240608 B.LS 0x22406FC
	0x0224060C STR X0, [X21 + 0x40]
	0x02240610 MOV X0, X21
	0x02240614 MOV X1, X31
	0x02240618 BL 0x32278CC
	0x0224061C LDR X20, [X27]
	0x02240620 MOV X19, X0
	0x02240624 LDR X8, [X20 + 0x38]
	0x02240628 CBNZ X8, 0x2240638
	0x0224062C MOV X0, X20
	0x02240630 BL 0x1C5C6E0
	0x02240634 LDR X8, [X20 + 0x38]
	0x02240638 LDR X0, [X8 + 0x10]
	0x0224063C LDRB W8, [X0 + 0x135]
	0x02240640 TBNZ X8, 0x0, 0x2240648
	0x02240644 BL 0x1C5C684
	0x02240648 LDR W8, [X0 + 0xE0]
	0x0224064C CBNZ W8, 0x2240654
	0x02240650 BL 0x1C16DFC
	0x02240654 LDR X8, [X20 + 0x38]
	0x02240658 LDR X0, [X8 + 0x10]
	0x0224065C LDRB W8, [X0 + 0x135]
	0x02240660 TBNZ X8, 0x0, 0x2240668
	0x02240664 BL 0x1C5C684
	0x02240668 CBZ X22, 0x2240700
	0x0224066C LDR X9, [X0 + 0xB8]
	0x02240670 LDR X8, [X22]
	0x02240674 LDR X1, [X28]
	0x02240678 LDR X20, [X9]
	0x0224067C LDRH W9, [X8 + 0x12E]
	0x02240680 CBZ X9, 0x22406A4
	0x02240684 LDR X10, [X8 + 0xB0]
	0x02240688 ADD X10, X10, 0x8
	0x0224068C LDUR X11, [X10 - 0x8]
	0x02240690 CMP X11, X1
	0x02240694 B.EQ 0x22406B4
	0x02240698 SUBS X9, X9, 0x1
	0x0224069C ADD X10, X10, 0x10
	0x022406A0 B.NE 0x224068C
	0x022406A4 MOVZ W2, 0x1
	0x022406A8 MOV X0, X22
	0x022406AC BL 0x1C5C788
	0x022406B0 B 0x22406C4
	0x022406B4 LDR W9, [X10]
	0x022406B8 ADD W9, W9, 0x1
	0x022406BC ADD X8, X8, W9, 0x4, SXTW
	0x022406C0 ADD X0, X8, 0x138
	0x022406C4 LDP X8, X4, [X0]
	0x022406C8 MOVZ W1, 0x1
	0x022406CC MOV X0, X22
	0x022406D0 MOV X2, X19
	0x022406D4 MOV X3, X20
	0x022406D8 BLR X8
	0x022406DC LDP X20, X19, [X31 + 0x70]
	0x022406E0 LDP X22, X21, [X31 + 0x60]
	0x022406E4 LDP X24, X23, [X31 + 0x50]
	0x022406E8 LDP X26, X25, [X31 + 0x40]
	0x022406EC LDP X28, X27, [X31 + 0x30]
	0x022406F0 LDP X29, X30, [X31 + 0x20]
	0x022406F4 ADD X31, X31, 0x80
	0x022406F8 RET
	0x022406FC BL 0x1C16F28
	0x02240700 BL 0x1C16F20
	0x02240704 SUB X31, X31, 0x80
	0x02240708 STP X29, X30, [X31 + 0x20]
	0x0224070C STP X28, X27, [X31 + 0x30]
	0x02240710 STP X26, X25, [X31 + 0x40]
	0x02240714 STP X24, X23, [X31 + 0x50]
	0x02240718 STP X22, X21, [X31 + 0x60]
	0x0224071C STP X20, X19, [X31 + 0x70]
	0x02240720 LDR X8, [X2 + 0x38]
	0x02240724 MOV X20, X2
	0x02240728 MOV X21, X1
	0x0224072C MOV X19, X0
	0x02240730 CBNZ X8, 0x22407BC
	0x02240734 ADRP X0, 0x1EB3000
	0x02240738 LDR X0, [X0 + 0x9C8]
	0x0224073C BL 0x1C16CF4
	0x02240740 ADRP X0, 0x1EDC000
	0x02240744 LDR X0, [X0 + 0x428]
	0x02240748 BL 0x1C16CF4
	0x0224074C ADRP X0, 0x1EB8000
	0x02240750 LDR X0, [X0 + 0x348]
	0x02240754 BL 0x1C16CF4
	0x02240758 ADRP X0, 0x1EB3000
	0x0224075C LDR X0, [X0 + 0xAC8]
	0x02240760 BL 0x1C16CF4
	0x02240764 ADRP X0, 0x1EB3000
	0x02240768 LDR X0, [X0 + 0x6C0]
	0x0224076C BL 0x1C16CF4
	0x02240770 ADRP X0, 0x1EDC000
	0x02240774 LDR X0, [X0 + 0x430]
	0x02240778 BL 0x1C16CF4
	0x0224077C ADRP X0, 0x1EDC000
	0x02240780 LDR X0, [X0 + 0x438]
	0x02240784 BL 0x1C16CF4
	0x02240788 ADRP X0, 0x1EDC000
	0x0224078C LDR X0, [X0 + 0x440]
	0x02240790 BL 0x1C16CF4
	0x02240794 ADRP X0, 0x1EDC000
	0x02240798 LDR X0, [X0 + 0x448]
	0x0224079C BL 0x1C16CF4
	0x022407A0 ADRP X0, 0x1EB5000
	0x022407A4 LDR X0, [X0 + 0x260]
	0x022407A8 BL 0x1C16CF4
	0x022407AC LDR X8, [X20 + 0x38]
	0x022407B0 CBNZ X8, 0x22407BC
	0x022407B4 MOV X0, X20
	0x022407B8 BL 0x1C5C6E0
	0x022407BC ADRP X26, 0x1EB3000
	0x022407C0 LDR X22, [X19 + 0x10]
	0x022407C4 LDR X26, [X26 + 0xAC8]
	0x022407C8 MOVZ W1, 0x6
	0x022407CC LDR X0, [X26]
	0x022407D0 BL 0x1C16D6C
	0x022407D4 CBZ X0, 0x2240B98
	0x022407D8 LDR W8, [X0 + 0x18]
	0x022407DC MOV X23, X0
	0x022407E0 CBZ W8, 0x2240B94
	0x022407E4 LDR X9, [X19 + 0x48]
	0x022407E8 CMP W8, 0x1
	0x022407EC STR X9, [X23 + 0x20]
	0x022407F0 B.EQ 0x2240B94
	0x022407F4 ADRP X8, 0x1EDC000
	0x022407F8 LDR X8, [X8 + 0x448]
	0x022407FC ADRP X25, 0x1EDC000
	0x02240800 MOVN X10, 0x0
	0x02240804 ADD X0, X31, 0x8
	0x02240808 LDR X8, [X8]
	0x0224080C LDR X25, [X25 + 0x428]
	0x02240810 MOV X1, X31
	0x02240814 STR X8, [X23 + 0x28]
	0x02240818 LDR X8, [X25]
	0x0224081C LDR W9, [X19 + 0x18]
	0x02240820 STP X8, X10, [X31 + 0x8]
	0x02240824 STR W9, [X31 + 0x18]
	0x02240828 BL 0x33B162C
	0x0224082C LDR W8, [X23 + 0x18]
	0x02240830 CMP W8, 0x2
	0x02240834 B.LS 0x2240B94
	0x02240838 CMP W8, 0x3
	0x0224083C STR X0, [X23 + 0x30]
	0x02240840 B.EQ 0x2240B94
	0x02240844 ADRP X8, 0x1EDC000
	0x02240848 LDR X8, [X8 + 0x430]
	0x0224084C ADRP X29, 0x1EB3000
	0x02240850 LDR X8, [X8]
	0x02240854 STR X8, [X23 + 0x38]
	0x02240858 LDR X29, [X29 + 0x6C0]
	0x0224085C LDR X8, [X20 + 0x38]
	0x02240860 LDR X0, [X29]
	0x02240864 LDR X24, [X8]
	0x02240868 LDR W9, [X0 + 0xE0]
	0x0224086C CBNZ W9, 0x2240874
	0x02240870 BL 0x1C16DFC
	0x02240874 MOV X0, X24
	0x02240878 MOV X1, X31
	0x0224087C BL 0x338C698
	0x02240880 CBZ X0, 0x2240890
	0x02240884 LDR X8, [X0]
	0x02240888 LDP X9, X1, [X8 + 0x168]
	0x0224088C BLR X9
	0x02240890 LDR W8, [X23 + 0x18]
	0x02240894 CMP W8, 0x4
	0x02240898 B.LS 0x2240B94
	0x0224089C CMP W8, 0x5
	0x022408A0 STR X0, [X23 + 0x40]
	0x022408A4 B.EQ 0x2240B94
	0x022408A8 ADRP X8, 0x1EB5000
	0x022408AC LDR X8, [X8 + 0x260]
	0x022408B0 MOV X0, X23
	0x022408B4 MOV X1, X31
	0x022408B8 LDR X8, [X8]
	0x022408BC STR X8, [X23 + 0x48]
	0x022408C0 BL 0x32278CC
	0x022408C4 ADRP X27, 0x1EB3000
	0x022408C8 LDR X27, [X27 + 0x9C8]
	0x022408CC MOV X23, X0
	0x022408D0 LDR X24, [X27]
	0x022408D4 LDR X8, [X24 + 0x38]
	0x022408D8 CBNZ X8, 0x22408E8
	0x022408DC MOV X0, X24
	0x022408E0 BL 0x1C5C6E0
	0x022408E4 LDR X8, [X24 + 0x38]
	0x022408E8 LDR X0, [X8 + 0x10]
	0x022408EC LDRB W8, [X0 + 0x135]
	0x022408F0 TBNZ X8, 0x0, 0x22408F8
	0x022408F4 BL 0x1C5C684
	0x022408F8 LDR W8, [X0 + 0xE0]
	0x022408FC CBNZ W8, 0x2240904
	0x02240900 BL 0x1C16DFC
	0x02240904 LDR X8, [X24 + 0x38]
	0x02240908 LDR X0, [X8 + 0x10]
	0x0224090C LDRB W8, [X0 + 0x135]
	0x02240910 TBNZ X8, 0x0, 0x2240918
	0x02240914 BL 0x1C5C684
	0x02240918 CBZ X22, 0x2240B98
	0x0224091C ADRP X28, 0x1EB8000
	0x02240920 LDR X9, [X0 + 0xB8]
	0x02240924 LDR X8, [X22]
	0x02240928 LDR X28, [X28 + 0x348]
	0x0224092C LDR X24, [X9]
	0x02240930 LDRH W9, [X8 + 0x12E]
	0x02240934 LDR X1, [X28]
	0x02240938 CBZ X9, 0x224095C
	0x0224093C LDR X10, [X8 + 0xB0]
	0x02240940 ADD X10, X10, 0x8
	0x02240944 LDUR X11, [X10 - 0x8]
	0x02240948 CMP X11, X1
	0x0224094C B.EQ 0x224096C
	0x02240950 SUBS X9, X9, 0x1
	0x02240954 ADD X10, X10, 0x10
	0x02240958 B.NE 0x2240944
	0x0224095C MOVZ W2, 0x1
	0x02240960 MOV X0, X22
	0x02240964 BL 0x1C5C788
	0x02240968 B 0x224097C
	0x0224096C LDR W9, [X10]
	0x02240970 ADD W9, W9, 0x1
	0x02240974 ADD X8, X8, W9, 0x4, SXTW
	0x02240978 ADD X0, X8, 0x138
	0x0224097C LDP X8, X4, [X0]
	0x02240980 MOVZ W1, 0x3
	0x02240984 MOV X0, X22
	0x02240988 MOV X2, X23
	0x0224098C MOV X3, X24
	0x02240990 BLR X8
	0x02240994 LDR W8, [X19 + 0x18]
	0x02240998 LDR X22, [X19 + 0x10]
	0x0224099C CMP W8, 0xB
	0x022409A0 B.NE 0x22409E0
	0x022409A4 LDR X8, [X20 + 0x38]
	0x022409A8 LDR X0, [X8 + 0x10]
	0x022409AC LDRB W8, [X0 + 0x135]
	0x022409B0 TBNZ X8, 0x0, 0x22409B8
	0x022409B4 BL 0x1C5C684
	0x022409B8 BL 0x1C16F10
	0x022409BC LDR X8, [X20 + 0x38]
	0x022409C0 MOV X1, X21
	0x022409C4 MOV X2, X22
	0x022409C8 MOV X20, X0
	0x022409CC LDR X3, [X8 + 0x18]
	0x022409D0 LDR X8, [X3]
	0x022409D4 BLR X8
	0x022409D8 STR X20, [X19 + 0x8]
	0x022409DC B 0x2240B74
	0x022409E0 LDR X0, [X26]
	0x022409E4 MOVZ W1, 0x5
	0x022409E8 BL 0x1C16D6C
	0x022409EC CBZ X0, 0x2240B98
	0x022409F0 LDR W8, [X0 + 0x18]
	0x022409F4 MOV X21, X0
	0x022409F8 CBZ W8, 0x2240B94
	0x022409FC LDR X9, [X19 + 0x48]
	0x02240A00 CMP W8, 0x1
	0x02240A04 STR X9, [X21 + 0x20]
	0x02240A08 B.EQ 0x2240B94
	0x02240A0C ADRP X8, 0x1EDC000
	0x02240A10 LDR X8, [X8 + 0x440]
	0x02240A14 LDR X8, [X8]
	0x02240A18 STR X8, [X21 + 0x28]
	0x02240A1C LDR X0, [X29]
	0x02240A20 LDR X8, [X20 + 0x38]
	0x02240A24 LDR W9, [X0 + 0xE0]
	0x02240A28 LDR X20, [X8]
	0x02240A2C CBNZ W9, 0x2240A34
	0x02240A30 BL 0x1C16DFC
	0x02240A34 MOV X0, X20
	0x02240A38 MOV X1, X31
	0x02240A3C BL 0x338C698
	0x02240A40 CBZ X0, 0x2240A50
	0x02240A44 LDR X8, [X0]
	0x02240A48 LDP X9, X1, [X8 + 0x168]
	0x02240A4C BLR X9
	0x02240A50 LDR W8, [X21 + 0x18]
	0x02240A54 CMP W8, 0x2
	0x02240A58 B.LS 0x2240B94
	0x02240A5C CMP W8, 0x3
	0x02240A60 STR X0, [X21 + 0x30]
	0x02240A64 B.EQ 0x2240B94
	0x02240A68 ADRP X8, 0x1EDC000
	0x02240A6C LDR X8, [X8 + 0x438]
	0x02240A70 MOVN X10, 0x0
	0x02240A74 ADD X0, X31, 0x8
	0x02240A78 MOV X1, X31
	0x02240A7C LDR X8, [X8]
	0x02240A80 STR X8, [X21 + 0x38]
	0x02240A84 LDR X8, [X25]
	0x02240A88 LDR W9, [X19 + 0x18]
	0x02240A8C STP X8, X10, [X31 + 0x8]
	0x02240A90 STR W9, [X31 + 0x18]
	0x02240A94 BL 0x33B162C
	0x02240A98 LDR W8, [X21 + 0x18]
	0x02240A9C CMP W8, 0x4
	0x02240AA0 B.LS 0x2240B94
	0x02240AA4 STR X0, [X21 + 0x40]
	0x02240AA8 MOV X0, X21
	0x02240AAC MOV X1, X31
	0x02240AB0 BL 0x32278CC
	0x02240AB4 LDR X20, [X27]
	0x02240AB8 MOV X19, X0
	0x02240ABC LDR X8, [X20 + 0x38]
	0x02240AC0 CBNZ X8, 0x2240AD0
	0x02240AC4 MOV X0, X20
	0x02240AC8 BL 0x1C5C6E0
	0x02240ACC LDR X8, [X20 + 0x38]
	0x02240AD0 LDR X0, [X8 + 0x10]
	0x02240AD4 LDRB W8, [X0 + 0x135]
	0x02240AD8 TBNZ X8, 0x0, 0x2240AE0
	0x02240ADC BL 0x1C5C684
	0x02240AE0 LDR W8, [X0 + 0xE0]
	0x02240AE4 CBNZ W8, 0x2240AEC
	0x02240AE8 BL 0x1C16DFC
	0x02240AEC LDR X8, [X20 + 0x38]
	0x02240AF0 LDR X0, [X8 + 0x10]
	0x02240AF4 LDRB W8, [X0 + 0x135]
	0x02240AF8 TBNZ X8, 0x0, 0x2240B00
	0x02240AFC BL 0x1C5C684
	0x02240B00 CBZ X22, 0x2240B98
	0x02240B04 LDR X9, [X0 + 0xB8]
	0x02240B08 LDR X8, [X22]
	0x02240B0C LDR X1, [X28]
	0x02240B10 LDR X20, [X9]
	0x02240B14 LDRH W9, [X8 + 0x12E]
	0x02240B18 CBZ X9, 0x2240B3C
	0x02240B1C LDR X10, [X8 + 0xB0]
	0x02240B20 ADD X10, X10, 0x8
	0x02240B24 LDUR X11, [X10 - 0x8]
	0x02240B28 CMP X11, X1
	0x02240B2C B.EQ 0x2240B4C
	0x02240B30 SUBS X9, X9, 0x1
	0x02240B34 ADD X10, X10, 0x10
	0x02240B38 B.NE 0x2240B24
	0x02240B3C MOVZ W2, 0x1
	0x02240B40 MOV X0, X22
	0x02240B44 BL 0x1C5C788
	0x02240B48 B 0x2240B5C
	0x02240B4C LDR W9, [X10]
	0x02240B50 ADD W9, W9, 0x1
	0x02240B54 ADD X8, X8, W9, 0x4, SXTW
	0x02240B58 ADD X0, X8, 0x138
	0x02240B5C LDP X8, X4, [X0]
	0x02240B60 MOVZ W1, 0x1
	0x02240B64 MOV X0, X22
	0x02240B68 MOV X2, X19
	0x02240B6C MOV X3, X20
	0x02240B70 BLR X8
	0x02240B74 LDP X20, X19, [X31 + 0x70]
	0x02240B78 LDP X22, X21, [X31 + 0x60]
	0x02240B7C LDP X24, X23, [X31 + 0x50]
	0x02240B80 LDP X26, X25, [X31 + 0x40]
	0x02240B84 LDP X28, X27, [X31 + 0x30]
	0x02240B88 LDP X29, X30, [X31 + 0x20]
	0x02240B8C ADD X31, X31, 0x80
	0x02240B90 RET
	0x02240B94 BL 0x1C16F28
	0x02240B98 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X27, X1
	015 Add X27, X27, 56
	016 Move X8, [X27]
	017 Move X20, X1
	018 Move X19, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {93}
	021 Move X0, 0x1EDE000
	022 Move X0, [X0+904]
	023 Call 0x1C17CF4
	024 Move X0, 0x1EDE000
	025 Move X0, [X0+912]
	026 Call 0x1C17CF4
	027 Move X0, 0x1EDE000
	028 Move X0, [X0+920]
	029 Call 0x1C17CF4
	030 Move X0, 0x1EDE000
	031 Move X0, [X0+928]
	032 Call 0x1C17CF4
	033 Move X0, 0x1EDE000
	034 Move X0, [X0+936]
	035 Call 0x1C17CF4
	036 Move X0, 0x1EDE000
	037 Move X0, [X0+944]
	038 Call 0x1C17CF4
	039 Move X0, 0x1EDE000
	040 Move X0, [X0+952]
	041 Call 0x1C17CF4
	042 Move X0, 0x1EDE000
	043 Move X0, [X0+960]
	044 Call 0x1C17CF4
	045 Move X0, 0x1EB5000
	046 Move X0, [X0+3584]
	047 Call 0x1C17CF4
	048 Move X0, 0x1EDE000
	049 Move X0, [X0+968]
	050 Call 0x1C17CF4
	051 Move X0, 0x1EDE000
	052 Move X0, [X0+976]
	053 Call 0x1C17CF4
	054 Move X0, 0x1EB5000
	055 Move X0, [X0+3608]
	056 Call 0x1C17CF4
	057 Move X0, 0x1EDE000
	058 Move X0, [X0+984]
	059 Call 0x1C17CF4
	060 Move X0, 0x1EDE000
	061 Move X0, [X0+896]
	062 Call 0x1C17CF4
	063 Move X0, 0x1EDE000
	064 Move X0, [X0+992]
	065 Call 0x1C17CF4
	066 Move X0, 0x1EDE000
	067 Move X0, [X0+1000]
	068 Call 0x1C17CF4
	069 Move X0, 0x1EDE000
	070 Move X0, [X0+32]
	071 Call 0x1C17CF4
	072 Move X0, 0x1EB5000
	073 Move X0, [X0+2512]
	074 Call 0x1C17CF4
	075 Move X0, 0x1EDE000
	076 Move X0, [X0+1008]
	077 Call 0x1C17CF4
	078 Move X0, 0x1EDE000
	079 Move X0, [X0+1016]
	080 Call 0x1C17CF4
	081 Move X0, 0x1EBD000
	082 Move X0, [X0+3168]
	083 Call 0x1C17CF4
	084 Move X0, 0x1EB5000
	085 Move X0, [X0+1728]
	086 Call 0x1C17CF4
	087 Move X8, [X27]
	088 Compare X8, 0
	089 JumpIfNotEqual {93}
	090 Move X0, X20
	091 Call 0x1C5D6E0
	092 Move X8, [X20+56]
	093 Move X0, [X8+8]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X8, [X27]
	105 Move X0, [X8]
	106 Move X8, [X0]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {1256}
	112 Move X8, [X27]
	113 Move X0, [X8+8]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X8, [X27]
	125 Move X0, [X8+16]
	126 Move X8, [X0]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {1256}
	132 Move X28, 0x1EB5000
	133 Move X28, [X28+1728]
	134 Move X8, [X27]
	135 Move X0, [X28]
	136 Move X21, [X8+24]
	137 Move W9, [X0+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X21
	142 Move X1, X31
	143 Call Type.GetTypeFromHandle, X0
	144 Compare X0, 0
	145 JumpIfEqual {1233}
	146 Move X1, X31
	147 Call Type.get_IsArray, X0
	148 Move X8, [X28]
	149 Move X9, [X27]
	150 Move W21, W0
	151 Move W10, [X8+224]
	152 Move X22, [X9+24]
	153 Compare W10, 0
	154 JumpIfNotEqual {157}
	155 Move X0, X8
	156 Call 0x1C17DFC
	157 Move X0, X22
	158 Move X1, X31
	159 Call Type.GetTypeFromHandle, X0
	160 Compare X0, 0
	161 JumpIfEqual {1233}
	162 Move X8, [X0]
	163 Move TEMP, X21
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {197}
	167 Move X9, [X8+1080]
	168 Move X1, [X8+1088]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X8, 0x1EBD000
	172 Move X20, [X19+64]
	173 Move X8, [X8+3168]
	174 Move W1, 1
	175 Move X0, [X8]
	176 Call 0x1C17D6C
	177 Move X8, [X28]
	178 Move X9, [X27]
	179 Move X21, X0
	180 Move W10, [X8+224]
	181 Move X22, [X9+24]
	182 Compare W10, 0
	183 JumpIfNotEqual {186}
	184 Move X0, X8
	185 Call 0x1C17DFC
	186 Move X0, X22
	187 Move X1, X31
	188 Call Type.GetTypeFromHandle, X0
	189 Compare X0, 0
	190 JumpIfEqual {1233}
	191 Move X8, [X0]
	192 Move X9, [X8+1064]
	193 Move X1, [X8+1072]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X21, 0
	196 JumpIfNotEqual {325}
	197 Move X9, [X8+968]
	198 Move X1, [X8+976]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {240}
	204 Move X0, [X28]
	205 Move X8, [X27]
	206 Move W9, [X0+224]
	207 Move X21, [X8+24]
	208 Compare W9, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X0, X21
	212 Move X1, X31
	213 Call Type.GetTypeFromHandle, X0
	214 Compare X0, 0
	215 JumpIfEqual {1233}
	216 Move X8, [X0]
	217 Move X9, [X8+1096]
	218 Move X1, [X8+1104]
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, 0x1EDE000
	221 Move X8, [X8+32]
	222 Move X21, X0
	223 Move X1, X31
	224 Move X8, [X8]
	225 Move X0, X8
	226 Call Type.GetTypeFromHandle, X0
	227 Compare X21, 0
	228 JumpIfEqual {1233}
	229 Move X8, [X21]
	230 Move X1, X0
	231 Move X0, X21
	232 Move X9, [X8+680]
	233 Move X2, [X8+688]
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {240}
	239 Move X20, [X19+72]
	240 Move X0, [X28]
	241 Move X8, [X27]
	242 Move W9, [X0+224]
	243 Move X21, [X8+24]
	244 Compare W9, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 Move X0, X21
	248 Move X1, X31
	249 Call Type.GetTypeFromHandle, X0
	250 Compare X0, 0
	251 JumpIfEqual {1233}
	252 Move X8, [X0]
	253 Move X9, [X8+968]
	254 Move X1, [X8+976]
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {340}
	260 Move X0, [X28]
	261 Move X8, [X27]
	262 Move W9, [X0+224]
	263 Move X21, [X8+24]
	264 Compare W9, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Move X0, X21
	268 Move X1, X31
	269 Call Type.GetTypeFromHandle, X0
	270 Compare X0, 0
	271 JumpIfEqual {1233}
	272 Move X8, [X0]
	273 Move X9, [X8+1096]
	274 Move X1, [X8+1104]
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Move X8, 0x1EDE000
	277 Move X8, [X8+952]
	278 Move X21, X0
	279 Move X1, X31
	280 Move X8, [X8]
	281 Move X0, X8
	282 Call Type.GetTypeFromHandle, X0
	283 Compare X21, 0
	284 JumpIfEqual {1233}
	285 Move X8, [X21]
	286 Move X1, X0
	287 Move X0, X21
	288 Move X9, [X8+680]
	289 Move X2, [X8+688]
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {340}
	295 Move X20, [X19+80]
	296 Move X8, 0x1EBD000
	297 Move X8, [X8+3168]
	298 Move W1, 1
	299 Move X0, [X8]
	300 Call 0x1C17D6C
	301 Move X8, [X28]
	302 Move X9, [X27]
	303 Move X21, X0
	304 Move W10, [X8+224]
	305 Move X22, [X9+24]
	306 Compare W10, 0
	307 JumpIfNotEqual {310}
	308 Move X0, X8
	309 Call 0x1C17DFC
	310 Move X0, X22
	311 Move X1, X31
	312 Call Type.GetTypeFromHandle, X0
	313 Compare X0, 0
	314 JumpIfEqual {1233}
	315 Move X8, [X0]
	316 Move X9, [X8+1128]
	317 Move X1, [X8+1136]
	318 NotImplemented "Instruction BLR not yet implemented."
	319 Move X8, 0x1EDE000
	320 Move X8, [X8+920]
	321 Move X1, [X8]
	322 Call Enumerable.First, X0
	323 Compare X21, 0
	324 JumpIfEqual {1233}
	325 Move X22, X0
	326 Compare X0, 0
	327 JumpIfEqual {334}
	328 Move X8, [X21]
	329 Move X0, X22
	330 Move X1, [X8+64]
	331 Call 0x1C17E00
	332 Compare X0, 0
	333 JumpIfEqual {1281}
	334 Move W8, [X21+24]
	335 Compare W8, 0
	336 JumpIfEqual {1280}
	337 Move [X21+32], X22
	338 Compare X20, 0
	339 JumpIfNotEqual {625}
	340 Move X0, [X28]
	341 Move X8, [X27]
	342 Move W9, [X0+224]
	343 Move X21, [X8+24]
	344 Compare W9, 0
	345 JumpIfNotEqual {347}
	346 Call 0x1C17DFC
	347 Move X0, X21
	348 Move X1, X31
	349 Call Type.GetTypeFromHandle, X0
	350 Compare X0, 0
	351 JumpIfEqual {1233}
	352 Move X8, [X0]
	353 Move X9, [X8+968]
	354 Move X1, [X8+976]
	355 NotImplemented "Instruction BLR not yet implemented."
	356 Move TEMP, X0
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfNotEqual {453}
	360 Move X0, [X28]
	361 Move X8, [X27]
	362 Move W9, [X0+224]
	363 Move X21, [X8+24]
	364 Compare W9, 0
	365 JumpIfNotEqual {367}
	366 Call 0x1C17DFC
	367 Move X0, X21
	368 Move X1, X31
	369 Call Type.GetTypeFromHandle, X0
	370 Compare X0, 0
	371 JumpIfEqual {1233}
	372 Move X8, [X0]
	373 Move X9, [X8+1096]
	374 Move X1, [X8+1104]
	375 NotImplemented "Instruction BLR not yet implemented."
	376 Move X8, 0x1EDE000
	377 Move X8, [X8+904]
	378 Move X21, X0
	379 Move X1, X31
	380 Move X8, [X8]
	381 Move X0, X8
	382 Call Type.GetTypeFromHandle, X0
	383 Compare X21, 0
	384 JumpIfEqual {1233}
	385 Move X8, [X21]
	386 Move X1, X0
	387 Move X0, X21
	388 Move X9, [X8+680]
	389 Move X2, [X8+688]
	390 NotImplemented "Instruction BLR not yet implemented."
	391 Move TEMP, X0
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfNotEqual {453}
	395 Move X8, 0x1EBD000
	396 Move X20, [X19+88]
	397 Move X8, [X8+3168]
	398 Move W1, 2
	399 Move X0, [X8]
	400 Call 0x1C17D6C
	401 Move X8, [X28]
	402 Move X9, [X27]
	403 Move X21, X0
	404 Move W10, [X8+224]
	405 Move X22, [X9+24]
	406 Compare W10, 0
	407 JumpIfNotEqual {410}
	408 Move X0, X8
	409 Call 0x1C17DFC
	410 Move X0, X22
	411 Move X1, X31
	412 Call Type.GetTypeFromHandle, X0
	413 Compare X0, 0
	414 JumpIfEqual {1233}
	415 Move X8, [X0]
	416 Move X9, [X8+1128]
	417 Move X1, [X8+1136]
	418 NotImplemented "Instruction BLR not yet implemented."
	419 Move X8, 0x1EDE000
	420 Move X8, [X8+920]
	421 Move X1, [X8]
	422 Call Enumerable.First, X0
	423 Compare X21, 0
	424 JumpIfEqual {1233}
	425 Move X22, X0
	426 Compare X0, 0
	427 JumpIfEqual {434}
	428 Move X8, [X21]
	429 Move X0, X22
	430 Move X1, [X8+64]
	431 Call 0x1C17E00
	432 Compare X0, 0
	433 JumpIfEqual {1281}
	434 Move W8, [X21+24]
	435 Compare W8, 0
	436 JumpIfEqual {1280}
	437 Move [X21+32], X22
	438 Move X8, [X27]
	439 Move X1, X31
	440 Move X0, [X8+24]
	441 Call Type.GetTypeFromHandle, X0
	442 Compare X0, 0
	443 JumpIfEqual {1233}
	444 Move X8, [X0]
	445 Move X9, [X8+1128]
	446 Move X1, [X8+1136]
	447 NotImplemented "Instruction BLR not yet implemented."
	448 Move X8, 0x1EDE000
	449 Move X8, [X8+912]
	450 Move W1, 1
	451 Move X2, [X8]
	452 Call Enumerable.ElementAt, X0, X1
	453 Move X0, [X28]
	454 Move X8, [X27]
	455 Move W9, [X0+224]
	456 Move X21, [X8+24]
	457 Compare W9, 0
	458 JumpIfNotEqual {460}
	459 Call 0x1C17DFC
	460 Move X0, X21
	461 Move X1, X31
	462 Call Type.GetTypeFromHandle, X0
	463 Compare X0, 0
	464 JumpIfEqual {1233}
	465 Move X8, [X0]
	466 Move X9, [X8+968]
	467 Move X1, [X8+976]
	468 NotImplemented "Instruction BLR not yet implemented."
	469 Move TEMP, X0
	470 And TEMP, TEMP, 1
	471 Compare TEMP, 1
	472 JumpIfNotEqual {509}
	473 Move X0, [X28]
	474 Move X8, [X27]
	475 Move W9, [X0+224]
	476 Move X21, [X8+24]
	477 Compare W9, 0
	478 JumpIfNotEqual {480}
	479 Call 0x1C17DFC
	480 Move X0, X21
	481 Move X1, X31
	482 Call Type.GetTypeFromHandle, X0
	483 Compare X0, 0
	484 JumpIfEqual {1233}
	485 Move X8, [X0]
	486 Move X9, [X8+1096]
	487 Move X1, [X8+1104]
	488 NotImplemented "Instruction BLR not yet implemented."
	489 Move X8, 0x1EDE000
	490 Move X8, [X8+984]
	491 Move X21, X0
	492 Move X1, X31
	493 Move X8, [X8]
	494 Move X0, X8
	495 Call Type.GetTypeFromHandle, X0
	496 Compare X21, 0
	497 JumpIfEqual {1233}
	498 Move X8, [X21]
	499 Move X1, X0
	500 Move X0, X21
	501 Move X9, [X8+680]
	502 Move X2, [X8+688]
	503 NotImplemented "Instruction BLR not yet implemented."
	504 Move TEMP, X0
	505 And TEMP, TEMP, 1
	506 Compare TEMP, 1
	507 JumpIfNotEqual {509}
	508 Move X20, [X19+32]
	509 Move X0, [X28]
	510 Move X8, [X27]
	511 Move W9, [X0+224]
	512 Move X21, [X8+24]
	513 Compare W9, 0
	514 JumpIfNotEqual {516}
	515 Call 0x1C17DFC
	516 Move X0, X21
	517 Move X1, X31
	518 Call Type.GetTypeFromHandle, X0
	519 Compare X0, 0
	520 JumpIfEqual {1233}
	521 Move X8, [X0]
	522 Move X9, [X8+968]
	523 Move X1, [X8+976]
	524 NotImplemented "Instruction BLR not yet implemented."
	525 Move TEMP, X0
	526 And TEMP, TEMP, 1
	527 Compare TEMP, 1
	528 JumpIfNotEqual {683}
	529 Move X0, [X28]
	530 Move X8, [X27]
	531 Move W9, [X0+224]
	532 Move X21, [X8+24]
	533 Compare W9, 0
	534 JumpIfNotEqual {536}
	535 Call 0x1C17DFC
	536 Move X0, X21
	537 Move X1, X31
	538 Call Type.GetTypeFromHandle, X0
	539 Compare X0, 0
	540 JumpIfEqual {1233}
	541 Move X8, [X0]
	542 Move X9, [X8+1096]
	543 Move X1, [X8+1104]
	544 NotImplemented "Instruction BLR not yet implemented."
	545 Move X8, 0x1EDD000
	546 Move X8, [X8+992]
	547 Move X21, X0
	548 Move X1, X31
	549 Move X8, [X8]
	550 Move X0, X8
	551 Call Type.GetTypeFromHandle, X0
	552 Compare X21, 0
	553 JumpIfEqual {1233}
	554 Move X8, [X21]
	555 Move X1, X0
	556 Move X0, X21
	557 Move X9, [X8+680]
	558 Move X2, [X8+688]
	559 NotImplemented "Instruction BLR not yet implemented."
	560 Move TEMP, X0
	561 And TEMP, TEMP, 1
	562 Compare TEMP, 1
	563 JumpIfNotEqual {683}
	564 Move X20, [X19+40]
	565 Move X8, 0x1EBC000
	566 Move X8, [X8+3168]
	567 Move W1, 2
	568 Move X0, [X8]
	569 Call 0x1C17D6C
	570 Move X8, [X28]
	571 Move X9, [X27]
	572 Move X21, X0
	573 Move W10, [X8+224]
	574 Move X22, [X9+24]
	575 Compare W10, 0
	576 JumpIfNotEqual {579}
	577 Move X0, X8
	578 Call 0x1C17DFC
	579 Move X0, X22
	580 Move X1, X31
	581 Call Type.GetTypeFromHandle, X0
	582 Compare X21, 0
	583 JumpIfEqual {1233}
	584 Move X22, X0
	585 Compare X0, 0
	586 JumpIfEqual {593}
	587 Move X8, [X21]
	588 Move X0, X22
	589 Move X1, [X8+64]
	590 Call 0x1C17E00
	591 Compare X0, 0
	592 JumpIfEqual {1281}
	593 Move W8, [X21+24]
	594 Compare W8, 0
	595 JumpIfEqual {1280}
	596 Move [X21+32], X22
	597 Move X8, [X27]
	598 Move X1, X31
	599 Move X0, [X8+24]
	600 Call Type.GetTypeFromHandle, X0
	601 Compare X0, 0
	602 JumpIfEqual {1233}
	603 Move X8, [X0]
	604 Move X9, [X8+1128]
	605 Move X1, [X8+1136]
	606 NotImplemented "Instruction BLR not yet implemented."
	607 Move X8, 0x1EDD000
	608 Move X8, [X8+920]
	609 Move X1, [X8]
	610 Call Enumerable.First, X0
	611 Move X22, X0
	612 Compare X0, 0
	613 JumpIfEqual {620}
	614 Move X8, [X21]
	615 Move X0, X22
	616 Move X1, [X8+64]
	617 Call 0x1C17E00
	618 Compare X0, 0
	619 JumpIfEqual {1281}
	620 Move W8, [X21+24]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Move [X21+40], X22
	623 Compare X20, 0
	624 JumpIfEqual {1233}
	625 Move X8, [X20]
	626 Move X0, X20
	627 Move X1, X21
	628 Move X9, [X8+984]
	629 Move X2, [X8+992]
	630 NotImplemented "Instruction BLR not yet implemented."
	631 Move X8, 0x1EB4000
	632 Move X8, [X8+2512]
	633 Move X20, X0
	634 Move W1, W31
	635 Move X8, [X8]
	636 Move X0, X8
	637 Call 0x1C17D6C
	638 Compare X20, 0
	639 JumpIfEqual {1233}
	640 Move X2, X0
	641 Move X0, X20
	642 Move X1, X19
	643 Move X3, X31
	644 Call MethodBase.Invoke, X0, X1, X2
	645 Move X8, [X27]
	646 Move X20, X0
	647 Move X19, [X8+32]
	648 Move W8, [X19+309]
	649 Move TEMP, X8
	650 And TEMP, TEMP, 1
	651 Compare TEMP, 1
	652 JumpIfEqual {656}
	653 Move X0, X19
	654 Call 0x1C5D684
	655 Move X19, X0
	656 Compare X20, 0
	657 JumpIfEqual {667}
	658 Move X0, X20
	659 Move X1, X19
	660 Call 0x1C17E00
	661 Move X21, X0
	662 Compare X0, 0
	663 JumpIfNotEqual {668}
	664 Move X0, X20
	665 Move X1, X19
	666 Call 0x1C181E0
	667 Move X21, X31
	668 Move X0, X21
	669 Move X20, [X31+128]
	670 Move X19, [X31+136]
	671 Move X22, [X31+112]
	672 Move X21, [X31+120]
	673 Move X24, [X31+96]
	674 Move X23, [X31+104]
	675 Move X26, [X31+80]
	676 Move X25, [X31+88]
	677 Move X28, [X31+64]
	678 Move X27, [X31+72]
	679 Move X29, [X31+48]
	680 Move X30, [X31+56]
	681 Add X31, X31, 144
	682 Return X0
	683 Move X0, [X28]
	684 Move X8, [X27]
	685 Move W9, [X0+224]
	686 Move X21, [X8+24]
	687 Compare W9, 0
	688 JumpIfNotEqual {690}
	689 Call 0x1C17DFC
	690 Move X0, X21
	691 Move X1, X31
	692 Call Type.GetTypeFromHandle, X0
	693 Compare X0, 0
	694 JumpIfEqual {1233}
	695 Move X8, [X0]
	696 Move X9, [X8+968]
	697 Move X1, [X8+976]
	698 NotImplemented "Instruction BLR not yet implemented."
	699 Move TEMP, X0
	700 And TEMP, TEMP, 1
	701 Compare TEMP, 1
	702 JumpIfNotEqual {826}
	703 Move X0, [X28]
	704 Move X8, [X27]
	705 Move W9, [X0+224]
	706 Move X21, [X8+24]
	707 Compare W9, 0
	708 JumpIfNotEqual {710}
	709 Call 0x1C17DFC
	710 Move X0, X21
	711 Move X1, X31
	712 Call Type.GetTypeFromHandle, X0
	713 Compare X0, 0
	714 JumpIfEqual {1233}
	715 Move X8, [X0]
	716 Move X9, [X8+1096]
	717 Move X1, [X8+1104]
	718 NotImplemented "Instruction BLR not yet implemented."
	719 Move X8, 0x1EDD000
	720 Move X8, [X8+960]
	721 Move X21, X0
	722 Move X1, X31
	723 Move X8, [X8]
	724 Move X0, X8
	725 Call Type.GetTypeFromHandle, X0
	726 Compare X21, 0
	727 JumpIfEqual {1233}
	728 Move X8, [X21]
	729 Move X1, X0
	730 Move X0, X21
	731 Move X9, [X8+680]
	732 Move X2, [X8+688]
	733 NotImplemented "Instruction BLR not yet implemented."
	734 Move TEMP, X0
	735 And TEMP, TEMP, 1
	736 Compare TEMP, 1
	737 JumpIfNotEqual {826}
	738 Move X8, 0x1EBC000
	739 Move X20, [X19+48]
	740 Move X8, [X8+3168]
	741 Move W1, 3
	742 Move X0, [X8]
	743 Call 0x1C17D6C
	744 Move X8, [X28]
	745 Move X9, [X27]
	746 Move X21, X0
	747 Move W10, [X8+224]
	748 Move X22, [X9+24]
	749 Compare W10, 0
	750 JumpIfNotEqual {753}
	751 Move X0, X8
	752 Call 0x1C17DFC
	753 Move X0, X22
	754 Move X1, X31
	755 Call Type.GetTypeFromHandle, X0
	756 Compare X21, 0
	757 JumpIfEqual {1233}
	758 Move X22, X0
	759 Compare X0, 0
	760 JumpIfEqual {767}
	761 Move X8, [X21]
	762 Move X0, X22
	763 Move X1, [X8+64]
	764 Call 0x1C17E00
	765 Compare X0, 0
	766 JumpIfEqual {1281}
	767 Move W8, [X21+24]
	768 Compare W8, 0
	769 JumpIfEqual {1280}
	770 Move [X21+32], X22
	771 Move X8, [X27]
	772 Move X1, X31
	773 Move X0, [X8+24]
	774 Call Type.GetTypeFromHandle, X0
	775 Compare X0, 0
	776 JumpIfEqual {1233}
	777 Move X8, [X0]
	778 Move X9, [X8+1128]
	779 Move X1, [X8+1136]
	780 NotImplemented "Instruction BLR not yet implemented."
	781 Move X8, 0x1EDD000
	782 Move X8, [X8+920]
	783 Move X1, [X8]
	784 Call Enumerable.First, X0
	785 Move X22, X0
	786 Compare X0, 0
	787 JumpIfEqual {794}
	788 Move X8, [X21]
	789 Move X0, X22
	790 Move X1, [X8+64]
	791 Call 0x1C17E00
	792 Compare X0, 0
	793 JumpIfEqual {1281}
	794 Move W8, [X21+24]
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move [X21+40], X22
	797 Move X8, [X27]
	798 Move X1, X31
	799 Move X0, [X8+24]
	800 Call Type.GetTypeFromHandle, X0
	801 Compare X0, 0
	802 JumpIfEqual {1233}
	803 Move X8, [X0]
	804 Move X9, [X8+1128]
	805 Move X1, [X8+1136]
	806 NotImplemented "Instruction BLR not yet implemented."
	807 Move X8, 0x1EDD000
	808 Move X8, [X8+912]
	809 Move W1, 1
	810 Move X2, [X8]
	811 Call Enumerable.ElementAt, X0, X1
	812 Move X22, X0
	813 Compare X0, 0
	814 JumpIfEqual {821}
	815 Move X8, [X21]
	816 Move X0, X22
	817 Move X1, [X8+64]
	818 Call 0x1C17E00
	819 Compare X0, 0
	820 JumpIfEqual {1281}
	821 Move W8, [X21+24]
	822 NotImplemented "Instruction CMP not yet implemented."
	823 Move [X21+48], X22
	824 Compare X20, 0
	825 JumpIfNotEqual {625}
	826 Move X0, [X28]
	827 Move X8, [X27]
	828 Move W9, [X0+224]
	829 Move X21, [X8+24]
	830 Compare W9, 0
	831 JumpIfNotEqual {833}
	832 Call 0x1C17DFC
	833 Move X0, X21
	834 Move X1, X31
	835 Call Type.GetTypeFromHandle, X0
	836 Compare X0, 0
	837 JumpIfEqual {1233}
	838 Move X8, [X0]
	839 Move X9, [X8+968]
	840 Move X1, [X8+976]
	841 NotImplemented "Instruction BLR not yet implemented."
	842 Move X8, [X27]
	843 Move TEMP, X0
	844 And TEMP, TEMP, 1
	845 Compare TEMP, 1
	846 JumpIfNotEqual {935}
	847 Move X0, [X28]
	848 Move X21, [X8+24]
	849 Move W9, [X0+224]
	850 Compare W9, 0
	851 JumpIfNotEqual {853}
	852 Call 0x1C17DFC
	853 Move X0, X21
	854 Move X1, X31
	855 Call Type.GetTypeFromHandle, X0
	856 Compare X0, 0
	857 JumpIfEqual {1233}
	858 Move X8, [X0]
	859 Move X9, [X8+1096]
	860 Move X1, [X8+1104]
	861 NotImplemented "Instruction BLR not yet implemented."
	862 Move X8, 0x1EDD000
	863 Move X8, [X8+1000]
	864 Move X21, X0
	865 Move X1, X31
	866 Move X8, [X8]
	867 Move X0, X8
	868 Call Type.GetTypeFromHandle, X0
	869 Compare X21, 0
	870 JumpIfEqual {1233}
	871 Move X8, [X21]
	872 Move X1, X0
	873 Move X0, X21
	874 Move X9, [X8+680]
	875 Move X2, [X8+688]
	876 NotImplemented "Instruction BLR not yet implemented."
	877 Move X8, [X27]
	878 Move TEMP, X0
	879 And TEMP, TEMP, 1
	880 Compare TEMP, 1
	881 JumpIfNotEqual {935}
	882 Move X0, [X28]
	883 Move X20, [X8+24]
	884 Move W9, [X0+224]
	885 Compare W9, 0
	886 JumpIfNotEqual {888}
	887 Call 0x1C17DFC
	888 Move X0, X20
	889 Move X1, X31
	890 Call Type.GetTypeFromHandle, X0
	891 Compare X0, 0
	892 JumpIfEqual {1233}
	893 Move X8, [X0]
	894 Move X9, [X8+1128]
	895 Move X1, [X8+1136]
	896 NotImplemented "Instruction BLR not yet implemented."
	897 Move X8, 0x1EDD000
	898 Move X8, [X8+928]
	899 Move X1, [X8]
	900 Call Enumerable.ToArray, X0
	901 Move X8, 0x1EBC000
	902 Move X20, [X19+56]
	903 Move X8, [X8+3168]
	904 Move X22, X0
	905 Move W1, 2
	906 Move X8, [X8]
	907 Move X0, X8
	908 Call 0x1C17D6C
	909 Compare X22, 0
	910 JumpIfEqual {1233}
	911 Move W8, [X22+24]
	912 Compare W8, 0
	913 JumpIfEqual {1280}
	914 Move X21, X0
	915 Compare X0, 0
	916 JumpIfEqual {1233}
	917 Move X23, [X22+32]
	918 Compare X23, 0
	919 JumpIfEqual {926}
	920 Move X8, [X21]
	921 Move X0, X23
	922 Move X1, [X8+64]
	923 Call 0x1C17E00
	924 Compare X0, 0
	925 JumpIfEqual {1281}
	926 Move W8, [X21+24]
	927 Compare W8, 0
	928 JumpIfEqual {1280}
	929 Move [X21+32], X23
	930 Move W9, [X22+24]
	931 NotImplemented "Instruction CMP not yet implemented."
	932 Move X22, [X22+40]
	933 Compare X22, 0
	934 JumpIfNotEqual {614}
	935 Move X0, [X8+40]
	936 Move W8, [X0+309]
	937 Move TEMP, X8
	938 And TEMP, TEMP, 1
	939 Compare TEMP, 1
	940 JumpIfEqual {942}
	941 Call 0x1C5D684
	942 Call 0x1C17F10
	943 Move X8, [X27]
	944 Move X21, X0
	945 Move X1, [X8+48]
	946 Move X8, [X1]
	947 NotImplemented "Instruction BLR not yet implemented."
	948 Move X0, [X28]
	949 Move X8, [X27]
	950 Move W9, [X0+224]
	951 Move X22, [X8+24]
	952 Compare W9, 0
	953 JumpIfNotEqual {955}
	954 Call 0x1C17DFC
	955 Move X0, X22
	956 Move X1, X31
	957 Call Type.GetTypeFromHandle, X0
	958 Move X1, X31
	959 Call ReflectedPropertyBagProvider.GetPropertyMembers, X0
	960 Compare X0, 0
	961 JumpIfEqual {1233}
	962 Move X10, 0x1EDD000
	963 Move X8, [X0]
	964 Move X10, [X10+968]
	965 Move X22, X0
	966 NotImplemented "Instruction LDRH not yet implemented."
	967 Move X1, [X10]
	968 Compare X9, 0
	969 JumpIfEqual {976}
	970 Move X10, [X8+176]
	971 Add X10, X10, 8
	972 NotImplemented "Instruction LDUR not yet implemented."
	973 NotImplemented "Instruction CMP not yet implemented."
	974 Subtract X9, X9, 1
	975 Add X10, X10, 16
	976 Move X0, X22
	977 Move W2, W31
	978 Call 0x1C5D788
	979 NotImplemented "Instruction LDRSW not yet implemented."
	980 Add X8, X8, X9
	981 Add X0, X8, 312
	982 Move X8, [X0]
	983 Move X1, [X0+8]
	984 Move X0, X22
	985 Move [X31+8], X20
	986 NotImplemented "Instruction BLR not yet implemented."
	987 Move X22, X0
	988 Compare X0, 0
	989 JumpIfEqual {1291}
	990 Move X29, 0x1EB4000
	991 Move X20, 0x1EB4000
	992 Move X29, [X29+3608]
	993 Move X20, [X20+2512]
	994 Move X8, [X22]
	995 Move X1, [X29]
	996 NotImplemented "Instruction LDRH not yet implemented."
	997 Compare X9, 0
	998 JumpIfEqual {1005}
	999 Move X10, [X8+176]
	1000 Add X10, X10, 8
	1001 NotImplemented "Instruction LDUR not yet implemented."
	1002 NotImplemented "Instruction CMP not yet implemented."
	1003 Subtract X9, X9, 1
	1004 Add X10, X10, 16
	1005 Move X0, X22
	1006 Move W2, W31
	1007 Call 0x1C5D788
	1008 NotImplemented "Instruction LDRSW not yet implemented."
	1009 Add X8, X8, X9
	1010 Add X0, X8, 312
	1011 Move X8, [X0]
	1012 Move X1, [X0+8]
	1013 Move X0, X22
	1014 NotImplemented "Instruction BLR not yet implemented."
	1015 Move TEMP, X0
	1016 And TEMP, TEMP, 1
	1017 Compare TEMP, 1
	1018 JumpIfNotEqual {1203}
	1019 Move X8, [X22]
	1020 Move X10, 0x1EDD000
	1021 NotImplemented "Instruction LDRH not yet implemented."
	1022 Move X10, [X10+976]
	1023 Move X1, [X10]
	1024 Compare X9, 0
	1025 JumpIfEqual {1032}
	1026 Move X10, [X8+176]
	1027 Add X10, X10, 8
	1028 NotImplemented "Instruction LDUR not yet implemented."
	1029 NotImplemented "Instruction CMP not yet implemented."
	1030 Subtract X9, X9, 1
	1031 Add X10, X10, 16
	1032 Move X0, X22
	1033 Move W2, W31
	1034 Call 0x1C5D788
	1035 NotImplemented "Instruction LDRSW not yet implemented."
	1036 Add X8, X8, X9
	1037 Add X0, X8, 312
	1038 Move X8, [X0]
	1039 Move X1, [X0+8]
	1040 Move X0, X22
	1041 NotImplemented "Instruction BLR not yet implemented."
	1042 Move X1, X0
	1043 Compare X1, 0
	1044 JumpIfEqual {1234}
	1045 Move X9, 0x1EDD000
	1046 Move X8, [X1]
	1047 Move X9, [X9+936]
	1048 Move X10, [X9]
	1049 Move W9, [X8+304]
	1050 Move W11, [X10+304]
	1051 NotImplemented "Instruction CMP not yet implemented."
	1052 Move X12, [X8+200]
	1053 Add X11, X12, X11
	1054 NotImplemented "Instruction LDUR not yet implemented."
	1055 NotImplemented "Instruction CMP not yet implemented."
	1056 Move X10, 0x1EDD000
	1057 Move X10, [X10+1008]
	1058 Move X10, [X10]
	1059 Move W11, [X10+304]
	1060 NotImplemented "Instruction CMP not yet implemented."
	1061 Move X8, [X8+200]
	1062 Add X8, X8, X11
	1063 NotImplemented "Instruction LDUR not yet implemented."
	1064 NotImplemented "Instruction CMP not yet implemented."
	1065 Move [X31+32], X31
	1066 Move [X31+40], X31
	1067 Add X0, X31, 32
	1068 Move X2, X31
	1069 Call PropertyMember..ctor, X0, X1
	1070 Move X8, 0x1EDD000
	1071 Move V0, [X31+2]
	1072 Move X8, [X8+1016]
	1073 Move [X31+1], V0
	1074 Move X0, [X8]
	1075 Add X1, X31, 16
	1076 Call 0x1C17E04
	1077 Move X8, 0x1EBC000
	1078 Move X24, [X19+16]
	1079 Move X8, [X8+3168]
	1080 Move X23, X0
	1081 Move X0, [X8]
	1082 Move W1, 2
	1083 Call 0x1C17D6C
	1084 Move X25, X0
	1085 Move X0, [X28]
	1086 Move X8, [X27]
	1087 Move W9, [X0+224]
	1088 Move X26, [X8+24]
	1089 Compare W9, 0
	1090 JumpIfNotEqual {1092}
	1091 Call 0x1C17DFC
	1092 Move X0, X26
	1093 Move X1, X31
	1094 Call Type.GetTypeFromHandle, X0
	1095 Compare X25, 0
	1096 JumpIfEqual {1246}
	1097 Move X26, X0
	1098 Compare X0, 0
	1099 JumpIfEqual {1106}
	1100 Move X8, [X25]
	1101 Move X1, [X8+64]
	1102 Move X0, X26
	1103 Call 0x1C17E00
	1104 Compare X0, 0
	1105 JumpIfEqual {1274}
	1106 Move W8, [X25+24]
	1107 Compare W8, 0
	1108 JumpIfEqual {1245}
	1109 Move [X25+32], X26
	1110 Compare X23, 0
	1111 JumpIfEqual {1244}
	1112 Move X8, [X23]
	1113 Move X10, 0x1EDD000
	1114 NotImplemented "Instruction LDRH not yet implemented."
	1115 Move X10, [X10+896]
	1116 Move X1, [X10]
	1117 Compare X9, 0
	1118 JumpIfEqual {1125}
	1119 Move X10, [X8+176]
	1120 Add X10, X10, 8
	1121 NotImplemented "Instruction LDUR not yet implemented."
	1122 NotImplemented "Instruction CMP not yet implemented."
	1123 Subtract X9, X9, 1
	1124 Add X10, X10, 16
	1125 Move W2, 2
	1126 Move X0, X23
	1127 Call 0x1C5D788
	1128 Move W9, [X10]
	1129 Add W9, W9, 2
	1130 Add X8, X8, W9
	1131 Add X0, X8, 312
	1132 Move X8, [X0]
	1133 Move X1, [X0+8]
	1134 Move X0, X23
	1135 NotImplemented "Instruction BLR not yet implemented."
	1136 Move X26, X0
	1137 Compare X0, 0
	1138 JumpIfEqual {1145}
	1139 Move X8, [X25]
	1140 Move X1, [X8+64]
	1141 Move X0, X26
	1142 Call 0x1C17E00
	1143 Compare X0, 0
	1144 JumpIfEqual {1271}
	1145 Move W8, [X25+24]
	1146 NotImplemented "Instruction CMP not yet implemented."
	1147 Move [X25+40], X26
	1148 Compare X24, 0
	1149 JumpIfEqual {1252}
	1150 Move X8, [X24]
	1151 Move X9, [X8+984]
	1152 Move X2, [X8+992]
	1153 Move X0, X24
	1154 Move X1, X25
	1155 NotImplemented "Instruction BLR not yet implemented."
	1156 Move X24, X0
	1157 Move X0, [X20]
	1158 Move W1, 2
	1159 Call 0x1C17D6C
	1160 Move X25, X0
	1161 Compare X0, 0
	1162 JumpIfEqual {1248}
	1163 Move X8, [X25]
	1164 Move X1, [X8+64]
	1165 Move X0, X23
	1166 Call 0x1C17E00
	1167 Compare X0, 0
	1168 JumpIfEqual {1249}
	1169 Move W8, [X25+24]
	1170 Compare W8, 0
	1171 JumpIfEqual {1247}
	1172 Move [X25+32], X23
	1173 Compare X21, 0
	1174 JumpIfEqual {1182}
	1175 Move X8, [X25]
	1176 Move X1, [X8+64]
	1177 Move X0, X21
	1178 Call 0x1C17E00
	1179 Compare X0, 0
	1180 JumpIfEqual {1277}
	1181 Move W8, [X25+24]
	1182 NotImplemented "Instruction CMP not yet implemented."
	1183 Move [X25+40], X21
	1184 Compare X24, 0
	1185 JumpIfEqual {1253}
	1186 Move X0, X24
	1187 Move X1, X19
	1188 Move X2, X25
	1189 Move X3, X31
	1190 Call MethodBase.Invoke, X0, X1, X2
	1191 Move [X31+32], X31
	1192 Move [X31+40], X31
	1193 Add X0, X31, 32
	1194 Move X2, X31
	1195 Call FieldMember..ctor, X0, X1
	1196 Move X8, 0x1EDD000
	1197 Move V0, [X31+2]
	1198 Move X8, [X8+944]
	1199 Move [X31+1], V0
	1200 Move X0, [X8]
	1201 Add X1, X31, 16
	1202 Call 0x1C17E04
	1203 Move X20, X31
	1204 Compare X22, 0
	1205 JumpIfEqual {1229}
	1206 Move X10, 0x1EB4000
	1207 Move X8, [X22]
	1208 Move X10, [X10+3584]
	1209 NotImplemented "Instruction LDRH not yet implemented."
	1210 Move X1, [X10]
	1211 Compare X9, 0
	1212 JumpIfEqual {1219}
	1213 Move X10, [X8+176]
	1214 Add X10, X10, 8
	1215 NotImplemented "Instruction LDUR not yet implemented."
	1216 NotImplemented "Instruction CMP not yet implemented."
	1217 Subtract X9, X9, 1
	1218 Add X10, X10, 16
	1219 Move X0, X22
	1220 Move W2, W31
	1221 Call 0x1C5D788
	1222 NotImplemented "Instruction LDRSW not yet implemented."
	1223 Add X8, X8, X9
	1224 Add X0, X8, 312
	1225 Move X8, [X0]
	1226 Move X1, [X0+8]
	1227 Move X0, X22
	1228 NotImplemented "Instruction BLR not yet implemented."
	1229 Compare X20, 0
	1230 JumpIfEqual {668}
	1231 Move X0, X20
	1232 Call 0x1C17F18
	1233 Call 0x1C17F20
	1234 Move X0, 0x1EB4000
	1235 Move X0, [X0+1456]
	1236 Call 0x1C17D08
	1237 Call 0x1C17F10
	1238 Move X19, X0
	1239 Move X1, X31
	1240 Call InvalidOperationException..ctor, X0
	1241 Move X1, [X31+8]
	1242 Move X0, X19
	1243 Call 0x1C17DEC
	1244 Call 0x1C17F20
	1245 Call 0x1C17F28
	1246 Call 0x1C17F20
	1247 Call 0x1C17F28
	1248 Call 0x1C17F20
	1249 Call 0x1C17F44
	1250 Move X1, X31
	1251 Call 0x1C17DEC
	1252 Call 0x1C17F20
	1253 Call 0x1C17F20
	1254 Call 0x1C17F28
	1255 Call 0x1C17F28
	1256 Move X0, 0x1EB4000
	1257 Move X0, [X0+1456]
	1258 Call 0x1C17D08
	1259 Call 0x1C17F10
	1260 Move X19, X0
	1261 Move X0, 0x1EDD000
	1262 Move X0, [X0+1024]
	1263 Call 0x1C17D08
	1264 Move X1, X0
	1265 Move X0, X19
	1266 Move X2, X31
	1267 Call InvalidOperationException..ctor, X0, X1
	1268 Move X0, X19
	1269 Move X1, X20
	1270 Call 0x1C17DEC
	1271 Call 0x1C17F44
	1272 Move X1, X31
	1273 Call 0x1C17DEC
	1274 Call 0x1C17F44
	1275 Move X1, X31
	1276 Call 0x1C17DEC
	1277 Call 0x1C17F44
	1278 Move X1, X31
	1279 Call 0x1C17DEC
	1280 Call 0x1C17F28
	1281 Call 0x1C17F44
	1282 Move X1, X31
	1283 Call 0x1C17DEC
	1284 Move X0, 0x1EB4000
	1285 Move X0, [X0+1456]
	1286 Call 0x1C17D08
	1287 Call 0x1C17F10
	1288 Move X19, X0
	1289 Move X0, 0x1EDD000
	1290 Move X0, [X0+1032]
	1291 Call 0x1C17F20
	1292 Move X19, X0
	1293 NotImplemented "Instruction CMP not yet implemented."
	1294 Move X0, X19
	1295 Call 0x3EB2AD0
	1296 Move X20, [X0]
	1297 Call 0x3EB2AE0
	1298 Move X20, X31
	1299 Move X19, X0
	1300 Compare X22, 0
	1301 JumpIfEqual {1325}
	1302 Move X10, 0x1EB4000
	1303 Move X8, [X22]
	1304 Move X10, [X10+3584]
	1305 NotImplemented "Instruction LDRH not yet implemented."
	1306 Move X1, [X10]
	1307 Compare X9, 0
	1308 JumpIfEqual {1315}
	1309 Move X10, [X8+176]
	1310 Add X10, X10, 8
	1311 NotImplemented "Instruction LDUR not yet implemented."
	1312 NotImplemented "Instruction CMP not yet implemented."
	1313 Subtract X9, X9, 1
	1314 Add X10, X10, 16
	1315 Move X0, X22
	1316 Move W2, W31
	1317 Call 0x1C5D788
	1318 NotImplemented "Instruction LDRSW not yet implemented."
	1319 Add X8, X8, X9
	1320 Add X0, X8, 312
	1321 Move X8, [X0]
	1322 Move X1, [X0+8]
	1323 Move X0, X22
	1324 NotImplemented "Instruction BLR not yet implemented."
	1325 Compare X20, 0
	1326 JumpIfNotEqual {1329}
	1327 Move X0, X19
	1328 Call 0x1D2D690
	1329 Move X0, X20
	1330 Call 0x1C17F18
	1331 Call 0x1991590

Method: System.Void CreateProperty(Unity.Properties.IMemberInfo member, Unity.Properties.Internal.ReflectedPropertyBag`1<TContainer> propertyBag)

Disassembly:
	0x0223F7A8 MOV X0, X26
	0x0223F7AC MOV X1, X31
	0x0223F7B0 BL 0x338C698
	0x0223F7B4 CBZ X25, 0x223F9E4
	0x0223F7B8 MOV X26, X0
	0x0223F7BC CBZ X0, 0x223F7D4
	0x0223F7C0 LDR X8, [X25]
	0x0223F7C4 LDR X1, [X8 + 0x40]
	0x0223F7C8 MOV X0, X26
	0x0223F7CC BL 0x1C16E00
	0x0223F7D0 CBZ X0, 0x223FA54
	0x0223F7D4 LDR W8, [X25 + 0x18]
	0x0223F7D8 CBZ W8, 0x223F9E0
	0x0223F7DC STR X26, [X25 + 0x20]
	0x0223F7E0 CBZ X23, 0x223F9DC
	0x0223F7E4 LDR X8, [X23]
	0x0223F7E8 ADRP X10, 0x1EDD000
	0x0223F7EC LDRH W9, [X8 + 0x12E]
	0x0223F7F0 LDR X10, [X10 + 0x380]
	0x0223F7F4 LDR X1, [X10]
	0x0223F7F8 CBZ X9, 0x223F81C
	0x0223F7FC LDR X10, [X8 + 0xB0]
	0x0223F800 ADD X10, X10, 0x8
	0x0223F804 LDUR X11, [X10 - 0x8]
	0x0223F808 CMP X11, X1
	0x0223F80C B.EQ 0x223F82C
	0x0223F810 SUBS X9, X9, 0x1
	0x0223F814 ADD X10, X10, 0x10
	0x0223F818 B.NE 0x223F804
	0x0223F81C MOVZ W2, 0x2
	0x0223F820 MOV X0, X23
	0x0223F824 BL 0x1C5C788
	0x0223F828 B 0x223F83C
	0x0223F82C LDR W9, [X10]
	0x0223F830 ADD W9, W9, 0x2
	0x0223F834 ADD X8, X8, W9, 0x4, SXTW
	0x0223F838 ADD X0, X8, 0x138
	0x0223F83C LDP X8, X1, [X0]
	0x0223F840 MOV X0, X23
	0x0223F844 BLR X8
	0x0223F848 MOV X26, X0
	0x0223F84C CBZ X0, 0x223F864
	0x0223F850 LDR X8, [X25]
	0x0223F854 LDR X1, [X8 + 0x40]
	0x0223F858 MOV X0, X26
	0x0223F85C BL 0x1C16E00
	0x0223F860 CBZ X0, 0x223FA48
	0x0223F864 LDR W8, [X25 + 0x18]
	0x0223F868 CMP W8, 0x1
	0x0223F86C B.LS 0x223FA08
	0x0223F870 STR X26, [X25 + 0x28]
	0x0223F874 CBZ X24, 0x223F9FC
	0x0223F878 LDR X8, [X24]
	0x0223F87C LDR X9, [X8 + 0x3D8]
	0x0223F880 LDR X2, [X8 + 0x3E0]
	0x0223F884 MOV X0, X24
	0x0223F888 MOV X1, X25
	0x0223F88C BLR X9
	0x0223F890 MOV X24, X0
	0x0223F894 LDR X0, [X20]
	0x0223F898 MOVZ W1, 0x2
	0x0223F89C BL 0x1C16D6C
	0x0223F8A0 MOV X25, X0
	0x0223F8A4 CBZ X0, 0x223F9EC
	0x0223F8A8 LDR X8, [X25]
	0x0223F8AC LDR X1, [X8 + 0x40]
	0x0223F8B0 MOV X0, X23
	0x0223F8B4 BL 0x1C16E00
	0x0223F8B8 CBZ X0, 0x223F9F0
	0x0223F8BC LDR W8, [X25 + 0x18]
	0x0223F8C0 CBZ W8, 0x223F9E8
	0x0223F8C4 STR X23, [X25 + 0x20]
	0x0223F8C8 CBZ X21, 0x223F8E4
	0x0223F8CC LDR X8, [X25]
	0x0223F8D0 LDR X1, [X8 + 0x40]
	0x0223F8D4 MOV X0, X21
	0x0223F8D8 BL 0x1C16E00
	0x0223F8DC CBZ X0, 0x223FA60
	0x0223F8E0 LDR W8, [X25 + 0x18]
	0x0223F8E4 CMP W8, 0x1
	0x0223F8E8 B.LS 0x223FA04
	0x0223F8EC STR X21, [X25 + 0x28]
	0x0223F8F0 CBZ X24, 0x223FA00
	0x0223F8F4 MOV X0, X24
	0x0223F8F8 MOV X1, X19
	0x0223F8FC MOV X2, X25
	0x0223F900 MOV X3, X31
	0x0223F904 BL 0x32CE4E0
	0x0223F908 B 0x223F620
	0x0223F90C STP X31, X31, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X20, X3
	009 Move X19, X2
	010 Move X21, X1
	011 Compare X8, 0
	012 JumpIfNotEqual {25}
	013 Move X0, 0x1EDE000
	014 Move X0, [X0+896]
	015 Call 0x1C17CF4
	016 Move X0, 0x1EB5000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Move X8, [X20+56]
	025 Move X9, 0x1EB5000
	026 Move X9, [X9+1728]
	027 Move X22, [X8]
	028 Move X0, [X9]
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X22
	034 Move X1, X31
	035 Call Type.GetTypeFromHandle, X0
	036 Compare X0, 0
	037 JumpIfEqual {110}
	038 Move X1, X31
	039 Call Type.get_IsPointer, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {51}
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Return 
	051 Compare X21, 0
	052 JumpIfEqual {110}
	053 Move X10, 0x1EDE000
	054 Move X8, [X21]
	055 Move X10, [X10+896]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X21
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X21
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, [X20+56]
	077 Move X22, X0
	078 Move X8, [X8+16]
	079 Move W9, [X8+309]
	080 Move TEMP, X9
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {87}
	084 Move X0, X8
	085 Call 0x1C5D684
	086 Move X8, X0
	087 Move X0, X8
	088 Call 0x1C17F10
	089 Move X8, [X20+56]
	090 Move X1, X21
	091 Move X2, X22
	092 Move X23, X0
	093 Move X3, [X8+24]
	094 Move X8, [X3]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Compare X19, 0
	097 JumpIfEqual {110}
	098 Move X8, [X20+56]
	099 Move X0, X19
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X2, [X8+32]
	105 Move X1, X23
	106 Move X3, [X2]
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 CallNoReturn X3
	110 Call 0x1C17F20

Method: Unity.Properties.IPropertyBag`1<TList> CreateIndexedCollectionPropertyBag()

Disassembly:
	0x0223F668 ADD X0, X8, 0x138
	0x0223F66C LDP X8, X1, [X0]
	0x0223F670 MOV X0, X22
	0x0223F674 BLR X8
	0x0223F678 TBZ X0, 0x0, 0x223F93C
	0x0223F67C LDR X8, [X22]
	0x0223F680 ADRP X10, 0x1EDD000
	0x0223F684 LDRH W9, [X8 + 0x12E]
	0x0223F688 LDR X10, [X10 + 0x3D0]
	0x0223F68C LDR X1, [X10]
	0x0223F690 CBZ X9, 0x223F6B4
	0x0223F694 LDR X10, [X8 + 0xB0]
	0x0223F698 ADD X10, X10, 0x8
	0x0223F69C LDUR X11, [X10 - 0x8]
	0x0223F6A0 CMP X11, X1
	0x0223F6A4 B.EQ 0x223F6C4
	0x0223F6A8 SUBS X9, X9, 0x1
	0x0223F6AC ADD X10, X10, 0x10
	0x0223F6B0 B.NE 0x223F69C
	0x0223F6B4 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move X19, X0
	020 Move X1, [X8+8]
	021 Move X8, [X1]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: Unity.Properties.IPropertyBag`1<TSet> CreateSetPropertyBag()

Disassembly:
	0x02240B9C STP X30, X23, [X31 - 0x30]!
	0x02240BA0 STP X22, X21, [X31 + 0x10]
	0x02240BA4 STP X20, X19, [X31 + 0x20]
	0x02240BA8 LDR X8, [X4 + 0x38]
	0x02240BAC MOV X20, X4
	0x02240BB0 MOV X19, X3
	0x02240BB4 MOV W21, W2
	0x02240BB8 MOV W22, W1
	0x02240BBC MOV X23, X0
	0x02240BC0 CBNZ X8, 0x2240BD0
	0x02240BC4 MOV X0, X20
	0x02240BC8 BL 0x1C5C6E0
	0x02240BCC LDR X8, [X20 + 0x38]
	0x02240BD0 LDR X0, [X8 + 0x8]
	0x02240BD4 LDRB W8, [X0 + 0x135]
	0x02240BD8 TBNZ X8, 0x0, 0x2240BE0
	0x02240BDC BL 0x1C5C684
	0x02240BE0 CBZ X23, 0x2240C0C
	0x02240BE4 LDR X8, [X23]
	0x02240BE8 LDRB W9, [X0 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move X19, X0
	020 Move X1, [X8+8]
	021 Move X8, [X1]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: Unity.Properties.IPropertyBag`1<TDictionary> CreateKeyValueCollectionPropertyBag()

Disassembly:
	0x0223F6B8 MOV W2, W31
	0x0223F6BC BL 0x1C5C788
	0x0223F6C0 B 0x223F6D0
	0x0223F6C4 LDRSW X9, [X10]
	0x0223F6C8 ADD X8, X8, X9, 0x4, LSL
	0x0223F6CC ADD X0, X8, 0x138
	0x0223F6D0 LDP X8, X1, [X0]
	0x0223F6D4 MOV X0, X22
	0x0223F6D8 BLR X8
	0x0223F6DC MOV X1, X0
	0x0223F6E0 CBZ X1, 0x223F9B4
	0x0223F6E4 ADRP X9, 0x1EDD000
	0x0223F6E8 LDR X8, [X1]
	0x0223F6EC LDR X9, [X9 + 0x3A8]
	0x0223F6F0 LDR X10, [X9]
	0x0223F6F4 LDRB W9, [X8 + 0x130]
	0x0223F6F8 LDRB W11, [X10 + 0x130]
	0x0223F6FC CMP W9, W11
	0x0223F700 B.CC 0x223F718
	0x0223F704 LDR X12, [X8 + 0xC8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move X19, X0
	020 Move X1, [X8+8]
	021 Move X8, [X1]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: Unity.Properties.IPropertyBag`1<System.Collections.Generic.KeyValuePair`2<TKey, TValue>> CreateKeyValuePairPropertyBag()

Disassembly:
	0x0223F708 ADD X11, X12, X11, 0x3, LSL
	0x0223F70C LDUR X11, [X11 - 0x8]
	0x0223F710 CMP X11, X10
	0x0223F714 B.EQ 0x223F90C
	0x0223F718 ADRP X10, 0x1EDD000
	0x0223F71C LDR X10, [X10 + 0x3F0]
	0x0223F720 LDR X10, [X10]
	0x0223F724 LDRB W11, [X10 + 0x130]
	0x0223F728 CMP W9, W11
	0x0223F72C B.CC 0x223F9B4
	0x0223F730 LDR X8, [X8 + 0xC8]
	0x0223F734 ADD X8, X8, X11, 0x3, LSL
	0x0223F738 LDUR X8, [X8 - 0x8]
	0x0223F73C CMP X8, X10
	0x0223F740 B.NE 0x223F9B4
	0x0223F744 STP X31, X31, [X31 + 0x20]
	0x0223F748 ADD X0, X31, 0x20
	0x0223F74C MOV X2, X31
	0x0223F750 BL 0x3C91258
	0x0223F754 ADRP X8, 0x1EDD000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move X19, X0
	020 Move X1, [X8+8]
	021 Move X8, [X1]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: Unity.Properties.IPropertyBag`1<TElement[]> CreateArrayPropertyBag()

Disassembly:
	0x0223F578 LDR W9, [X0 + 0xE0]
	0x0223F57C LDR X22, [X8 + 0x18]
	0x0223F580 CBNZ W9, 0x223F588
	0x0223F584 BL 0x1C16DFC
	0x0223F588 MOV X0, X22
	0x0223F58C MOV X1, X31
	0x0223F590 BL 0x338C698
	0x0223F594 MOV X1, X31
	0x0223F598 BL 0x3C957C4
	0x0223F59C CBZ X0, 0x223F9B0
	0x0223F5A0 ADRP X10, 0x1EDD000
	0x0223F5A4 LDR X8, [X0]
	0x0223F5A8 LDR X10, [X10 + 0x3C8]
	0x0223F5AC MOV X22, X0
	0x0223F5B0 LDRH W9, [X8 + 0x12E]
	0x0223F5B4 LDR X1, [X10]
	0x0223F5B8 CBZ X9, 0x223F5DC
	0x0223F5BC LDR X10, [X8 + 0xB0]
	0x0223F5C0 ADD X10, X10, 0x8
	0x0223F5C4 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move X19, X0
	020 Move X1, [X8+8]
	021 Move X8, [X1]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: Unity.Properties.IPropertyBag`1<System.Collections.Generic.List`1<TElement>> CreateListPropertyBag()

Disassembly:
	0x0223F758 LDR V0, [X31 + 0x2]
	0x0223F75C LDR X8, [X8 + 0x3F8]
	0x0223F760 STR V0, [X31 + 0x1]
	0x0223F764 LDR X0, [X8]
	0x0223F768 ADD X1, X31, 0x10
	0x0223F76C BL 0x1C16E04
	0x0223F770 ADRP X8, 0x1EBC000
	0x0223F774 LDR X24, [X19 + 0x10]
	0x0223F778 LDR X8, [X8 + 0xC60]
	0x0223F77C MOV X23, X0
	0x0223F780 LDR X0, [X8]
	0x0223F784 MOVZ W1, 0x2
	0x0223F788 BL 0x1C16D6C
	0x0223F78C MOV X25, X0
	0x0223F790 LDR X0, [X28]
	0x0223F794 LDR X8, [X27]
	0x0223F798 LDR W9, [X0 + 0xE0]
	0x0223F79C LDR X26, [X8 + 0x18]
	0x0223F7A0 CBNZ W9, 0x223F7A8
	0x0223F7A4 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move X19, X0
	020 Move X1, [X8+8]
	021 Move X8, [X1]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: Unity.Properties.IPropertyBag`1<System.Collections.Generic.HashSet`1<TElement>> CreateHashSetPropertyBag()

Disassembly:
	0x0223F618 LDR X29, [X29 + 0xE18]
	0x0223F61C LDR X20, [X20 + 0x9D0]
	0x0223F620 LDR X8, [X22]
	0x0223F624 LDR X1, [X29]
	0x0223F628 LDRH W9, [X8 + 0x12E]
	0x0223F62C CBZ X9, 0x223F650
	0x0223F630 LDR X10, [X8 + 0xB0]
	0x0223F634 ADD X10, X10, 0x8
	0x0223F638 LDUR X11, [X10 - 0x8]
	0x0223F63C CMP X11, X1
	0x0223F640 B.EQ 0x223F660
	0x0223F644 SUBS X9, X9, 0x1
	0x0223F648 ADD X10, X10, 0x10
	0x0223F64C B.NE 0x223F638
	0x0223F650 MOV X0, X22
	0x0223F654 MOV W2, W31
	0x0223F658 BL 0x1C5C788
	0x0223F65C B 0x223F66C
	0x0223F660 LDRSW X9, [X10]
	0x0223F664 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move X19, X0
	020 Move X1, [X8+8]
	021 Move X8, [X1]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: Unity.Properties.IPropertyBag`1<System.Collections.Generic.Dictionary`2<TKey, TValue>> CreateDictionaryPropertyBag()

Disassembly:
	0x0223F5C8 CMP X11, X1
	0x0223F5CC B.EQ 0x223F5EC
	0x0223F5D0 SUBS X9, X9, 0x1
	0x0223F5D4 ADD X10, X10, 0x10
	0x0223F5D8 B.NE 0x223F5C4
	0x0223F5DC MOV X0, X22
	0x0223F5E0 MOV W2, W31
	0x0223F5E4 BL 0x1C5C788
	0x0223F5E8 B 0x223F5F8
	0x0223F5EC LDRSW X9, [X10]
	0x0223F5F0 ADD X8, X8, X9, 0x4, LSL
	0x0223F5F4 ADD X0, X8, 0x138
	0x0223F5F8 LDP X8, X1, [X0]
	0x0223F5FC MOV X0, X22
	0x0223F600 STR X20, [X31 + 0x8]
	0x0223F604 BLR X8
	0x0223F608 MOV X22, X0
	0x0223F60C CBZ X0, 0x223FA9C
	0x0223F610 ADRP X29, 0x1EB4000
	0x0223F614 ADRP X20, 0x1EB4000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X1
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move X19, X0
	020 Move X1, [X8+8]
	021 Move X8, [X1]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Reflection.MemberInfo> GetPropertyMembers(System.Type type)

Disassembly:
	0x03C967C4 STRB W8, [X21 + 0xE4]
	0x03C967C8 MOV X0, X20
	0x03C967CC MOV X1, X31
	0x03C967D0 BL 0x33A51F0
	0x03C967D4 CBZ X19, 0x3C96804
	0x03C967D8 ADRP X8, 0x45D000
	0x03C967DC LDR X8, [X8 + 0x988]
	0x03C967E0 MOV X0, X19
	0x03C967E4 MOV X2, X31
	0x03C967E8 LDR X1, [X8]
	0x03C967EC BL 0x321BA08
	0x03C967F0 TBNZ X0, 0x0, 0x3C96838
	0x03C967F4 STR X19, [X20 + 0x10]
	0x03C967F8 LDP X20, X19, [X31 + 0x10]
	0x03C967FC LDP X30, X21, [X31], #0x20
	0x03C96800 RET
	0x03C96804 ADRP X0, 0x462000
	0x03C96808 LDR X0, [X0 + 0x528]
	0x03C9680C BL 0x1C16D08
	0x03C96810 BL 0x1C16F10
	0x03C96814 MOV X19, X0
	0x03C96818 ADRP X0, 0x465000
	0x03C9681C LDR X0, [X0 + 0x588]
	0x03C96820 BL 0x1C16D08
	0x03C96824 MOV X1, X0
	0x03C96828 MOV X0, X19
	0x03C9682C MOV X2, X31
	0x03C96830 BL 0x330E100

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x752000
	006 Move X21, 0x4CB000
	007 Move W8, [X20+216]
	008 Move X21, [X21+3704]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4CB000
	015 Move X0, [X0+3704]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+216], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+48], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Boolean IsValidMember(System.Reflection.MemberInfo memberInfo)

Disassembly:
	0x03C96868 MOV X2, X0
	0x03C9686C MOV X0, X19
	0x03C96870 MOV X1, X20
	0x03C96874 MOV X3, X31
	0x03C96878 BL 0x330E16C
	0x03C9687C ADRP X0, 0x4CA000
	0x03C96880 LDR X0, [X0 + 0xEF0]
	0x03C96884 BL 0x1C16D08
	0x03C96888 MOV X1, X0
	0x03C9688C MOV X0, X19
	0x03C96890 BL 0x1C16DEC
	0x03C96894 AND W8, W1, 0x1
	0x03C96898 STRB W8, [X0 + 0x10]
	0x03C9689C RET
	0x03C968A0 STP X30, X19, [X31 - 0x10]!
	0x03C968A4 MOV X1, X31
	0x03C968A8 MOV X19, X0
	0x03C968AC BL 0x33A51F0
	0x03C968B0 MOVZ W8, 0x1
	0x03C968B4 STRB W8, [X19 + 0x10]
	0x03C968B8 LDP X30, X19, [X31], #0x10
	0x03C968BC RET
	0x03C968C0 STR X1, [X0 + 0x10]
	0x03C968C4 RET
	0x03C968C8 AND W8, W1, 0x1
	0x03C968CC STRB W8, [X0 + 0x18]
	0x03C968D0 RET
	0x03C968D4 AND W8, W1, 0x1
	0x03C968D8 STRB W8, [X0 + 0x19]
	0x03C968DC RET
	0x03C968E0 AND W8, W1, 0x1
	0x03C968E4 STRB W8, [X0 + 0x1A]
	0x03C968E8 RET
	0x03C968EC AND W8, W1, 0x1
	0x03C968F0 STRB W8, [X0 + 0x1B]
	0x03C968F4 RET
	0x03C968F8 MOV X1, X31
	0x03C968FC B 0x33A51F0
	0x03C96900 STP X30, X21, [X31 - 0x20]!
	0x03C96904 STP X20, X19, [X31 + 0x10]
	0x03C96908 ADRP X21, 0x751000
	0x03C9690C LDRB W8, [X21 + 0xE5]
	0x03C96910 MOV X19, X1
	0x03C96914 MOV X20, X0
	0x03C96918 TBNZ X8, 0x0, 0x3C96930
	0x03C9691C ADRP X0, 0x45D000
	0x03C96920 LDR X0, [X0 + 0x988]
	0x03C96924 BL 0x1C16CF4
	0x03C96928 MOVZ W8, 0x1
	0x03C9692C STRB W8, [X21 + 0xE5]
	0x03C96930 MOV X0, X20
	0x03C96934 MOV X1, X31
	0x03C96938 BL 0x33A51F0
	0x03C9693C CBZ X19, 0x3C9696C
	0x03C96940 ADRP X8, 0x45D000
	0x03C96944 LDR X8, [X8 + 0x988]
	0x03C96948 MOV X0, X19
	0x03C9694C MOV X2, X31
	0x03C96950 LDR X1, [X8]
	0x03C96954 BL 0x321BA08
	0x03C96958 TBNZ X0, 0x0, 0x3C969A0
	0x03C9695C STR X19, [X20 + 0x10]
	0x03C96960 LDP X20, X19, [X31 + 0x10]
	0x03C96964 LDP X30, X21, [X31], #0x20
	0x03C96968 RET
	0x03C9696C ADRP X0, 0x462000
	0x03C96970 LDR X0, [X0 + 0x528]
	0x03C96974 BL 0x1C16D08
	0x03C96978 BL 0x1C16F10
	0x03C9697C MOV X19, X0
	0x03C96980 ADRP X0, 0x465000
	0x03C96984 LDR X0, [X0 + 0x588]
	0x03C96988 BL 0x1C16D08
	0x03C9698C MOV X1, X0
	0x03C96990 MOV X0, X19
	0x03C96994 MOV X2, X31
	0x03C96998 BL 0x330E100
	0x03C9699C B 0x3C969E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x752000
	005 Move W8, [X20+217]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x487000
	012 Move X0, [X0+936]
	013 Call 0x1C17CF4
	014 Move X0, 0x487000
	015 Move X0, [X0+1008]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+217], W8
	019 Compare X19, 0
	020 JumpIfEqual {76}
	021 Move X9, 0x487000
	022 Move X9, [X9+936]
	023 Move X8, [X19]
	024 Move X10, [X9]
	025 Move W9, [X8+304]
	026 Move W11, [X10+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X12, [X8+200]
	029 Add X11, X12, X11
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X10, 0x487000
	033 Move X10, [X10+1008]
	034 Move X10, [X10]
	035 Move W11, [X10+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X8+200]
	038 Add X9, X9, X11
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, [X8+648]
	042 Move X1, [X8+656]
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X1, X0
	046 Move X0, X31
	047 Move X2, X31
	048 Call MethodInfo.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {76}
	053 Move X8, [X19]
	054 Move X0, X19
	055 Move X9, [X8+648]
	056 Move X1, [X8+656]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Compare X0, 0
	059 JumpIfEqual {89}
	060 Move X1, X31
	061 Call MethodBase.get_IsStatic, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {76}
	066 Move X8, [X19]
	067 Move X9, [X8+584]
	068 Move X1, [X8+592]
	069 Move X0, X19
	070 Move X1, X31
	071 Call FieldInfo.get_IsStatic, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {81}
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move W0, W31
	079 Move X30, [X31+32]
	080 Return X0
	081 Move X8, [X19]
	082 Move X9, [X8+600]
	083 Move X1, [X8+608]
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Call 0x1C17F20

Method: System.Boolean IsValidPropertyType(System.Type type)

Disassembly:
	0x03C969A0 ADRP X0, 0x465000
	0x03C969A4 LDR X0, [X0 + 0x578]
	0x03C969A8 BL 0x1C16D08
	0x03C969AC BL 0x1C16F10
	0x03C969B0 MOV X19, X0
	0x03C969B4 ADRP X0, 0x4CA000
	0x03C969B8 LDR X0, [X0 + 0xEE8]
	0x03C969BC BL 0x1C16D08
	0x03C969C0 MOV X20, X0
	0x03C969C4 ADRP X0, 0x465000
	0x03C969C8 LDR X0, [X0 + 0x588]
	0x03C969CC BL 0x1C16D08
	0x03C969D0 MOV X2, X0
	0x03C969D4 MOV X0, X19
	0x03C969D8 MOV X1, X20
	0x03C969DC MOV X3, X31
	0x03C969E0 BL 0x330E16C
	0x03C969E4 ADRP X0, 0x4CA000
	0x03C969E8 LDR X0, [X0 + 0xEF8]
	0x03C969EC BL 0x1C16D08
	0x03C969F0 MOV X1, X0
	0x03C969F4 MOV X0, X19
	0x03C969F8 BL 0x1C16DEC
	0x03C969FC STR X30, [X31 - 0x20]!
	0x03C96A00 STP X20, X19, [X31 + 0x10]
	0x03C96A04 MOV W19, W2
	0x03C96A08 MOV X20, X0
	0x03C96A0C BL 0x3C96900
	0x03C96A10 AND W8, W19, 0x1
	0x03C96A14 STRB W8, [X20 + 0x19]
	0x03C96A18 LDP X20, X19, [X31 + 0x10]
	0x03C96A1C LDR X30, [X31], #0x20
	0x03C96A20 RET
	0x03C96A24 STP X30, X21, [X31 - 0x20]!
	0x03C96A28 STP X20, X19, [X31 + 0x10]
	0x03C96A2C MOV W19, W3
	0x03C96A30 MOV W20, W2
	0x03C96A34 MOV X21, X0
	0x03C96A38 BL 0x3C96900
	0x03C96A3C AND W8, W20, 0x1
	0x03C96A40 AND W9, W19, 0x1
	0x03C96A44 LDP X20, X19, [X31 + 0x10]
	0x03C96A48 STRB W8, [X21 + 0x19]
	0x03C96A4C STRB W9, [X21 + 0x18]
	0x03C96A50 LDP X30, X21, [X31], #0x20
	0x03C96A54 RET
	0x03C96A58 STR W1, [X0 + 0x1C]
	0x03C96A5C RET
	0x03C96A60 MOV X1, X31
	0x03C96A64 B 0x33A51F0
	0x03C96A68 B 0x3C96900
	0x03C96A6C STP X30, X21, [X31 - 0x20]!
	0x03C96A70 STP X20, X19, [X31 + 0x10]
	0x03C96A74 MOV W19, W3
	0x03C96A78 MOV W20, W2
	0x03C96A7C MOV X21, X0
	0x03C96A80 BL 0x3C96900
	0x03C96A84 AND W8, W20, 0x1
	0x03C96A88 STR W19, [X21 + 0x1C]
	0x03C96A8C LDP X20, X19, [X31 + 0x10]
	0x03C96A90 STRB W8, [X21 + 0x19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x752000
	005 Move W8, [X20+218]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x468000
	012 Move X0, [X0+2440]
	013 Call 0x1C17CF4
	014 Move X0, 0x468000
	015 Move X0, [X0+2480]
	016 Call 0x1C17CF4
	017 Move X0, 0x4CB000
	018 Move X0, [X0+3712]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+218], W8
	022 Compare X19, 0
	023 JumpIfEqual {74}
	024 Move X0, X19
	025 Move X1, X31
	026 Call Type.get_IsPointer, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {32}
	031 Move W0, W31
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+968]
	035 Move X1, [X8+976]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {69}
	041 Move X8, [X19]
	042 Move X0, X19
	043 Move X9, [X8+1128]
	044 Move X1, [X8+1136]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, 0x468000
	047 Move X8, [X8+2480]
	048 Move X19, X0
	049 Move X8, [X8]
	050 Move X0, X8
	051 Call 0x1C17F10
	052 Move X8, 0x4CB000
	053 Move X8, [X8+3712]
	054 Move X1, X31
	055 Move X3, X31
	056 Move X20, X0
	057 Move X2, [X8]
	058 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	059 Move X8, 0x468000
	060 Move X8, [X8+2440]
	061 Move X0, X19
	062 Move X1, X20
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X2, [X8]
	066 Move X30, [X31+32]
	067 Call Enumerable.All, X0, X1
	068 Return X0
	069 Move W0, 1
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Return X0
	074 Call 0x1C17F20

