Type: Unity.Properties.Internal.ReflectedPropertyBagProvider/<>c

Method: System.Void .cctor()

Disassembly:
	0x03C96A94 LDP X30, X21, [X31], #0x20
	0x03C96A98 RET
	0x03C96A9C STR X30, [X31 - 0x30]!
	0x03C96AA0 STP X22, X21, [X31 + 0x10]
	0x03C96AA4 STP X20, X19, [X31 + 0x20]
	0x03C96AA8 MOV W19, W4
	0x03C96AAC MOV W20, W3
	0x03C96AB0 MOV W21, W2
	0x03C96AB4 MOV X22, X0
	0x03C96AB8 BL 0x3C96900
	0x03C96ABC AND W8, W21, 0x1
	0x03C96AC0 AND W9, W19, 0x1
	0x03C96AC4 STRB W8, [X22 + 0x19]
	0x03C96AC8 STRB W9, [X22 + 0x18]
	0x03C96ACC STR W20, [X22 + 0x1C]
	0x03C96AD0 LDP X20, X19, [X31 + 0x20]
	0x03C96AD4 LDP X22, X21, [X31 + 0x10]
	0x03C96AD8 LDR X30, [X31], #0x30
	0x03C96ADC RET
	0x03C96AE0 MOV X1, X31
	0x03C96AE4 B 0x33A51F0
	0x03C96AE8 STR X1, [X0 + 0x10]
	0x03C96AEC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x752000
	005 Move X20, 0x4CB000
	006 Move W8, [X19+219]
	007 Move X20, [X20+3624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4CB000
	013 Move X0, [X0+3624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+219], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C96AF0 STR X1, [X0 + 0x18]
	0x03C96AF4 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <.ctor>b__10_0(System.Reflection.MethodInfo x)

Disassembly:
	0x03C96AF8 STR W1, [X0 + 0x20]
	0x03C96AFC RET
	0x03C96B00 STP X30, X19, [X31 - 0x10]!
	0x03C96B04 MOV X1, X31
	0x03C96B08 MOV X19, X0
	0x03C96B0C BL 0x33A51F0
	0x03C96B10 STR W31, [X19 + 0x20]
	0x03C96B14 LDP X30, X19, [X31], #0x10
	0x03C96B18 RET
	0x03C96B1C STR X30, [X31 - 0x20]!
	0x03C96B20 STP X20, X19, [X31 + 0x10]
	0x03C96B24 MOV W19, W1
	0x03C96B28 MOV X1, X31
	0x03C96B2C MOV X20, X0
	0x03C96B30 BL 0x33A51F0
	0x03C96B34 STR W19, [X20 + 0x20]
	0x03C96B38 LDP X20, X19, [X31 + 0x10]
	0x03C96B3C LDR X30, [X31], #0x20
	0x03C96B40 RET
	0x03C96B44 STP X30, X21, [X31 - 0x20]!
	0x03C96B48 STP X20, X19, [X31 + 0x10]
	0x03C96B4C ADRP X21, 0x751000
	0x03C96B50 LDRB W8, [X21 + 0xE6]
	0x03C96B54 MOV X19, X1
	0x03C96B58 MOV X20, X0
	0x03C96B5C TBNZ X8, 0x0, 0x3C96B74
	0x03C96B60 ADRP X0, 0x45D000
	0x03C96B64 LDR X0, [X0 + 0x988]
	0x03C96B68 BL 0x1C16CF4
	0x03C96B6C MOVZ W8, 0x1
	0x03C96B70 STRB W8, [X21 + 0xE6]
	0x03C96B74 MOV X0, X20
	0x03C96B78 MOV X1, X31
	0x03C96B7C BL 0x33A51F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x752000
	005 Move W8, [X20+220]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4CB000
	012 Move X0, [X0+3720]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+220], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X8, [X19]
	019 Move X20, 0x4CB000
	020 Move X0, X19
	021 Move X9, [X8+424]
	022 Move X1, [X8+432]
	023 Move X20, [X20+3720]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X1, [X20]
	026 Move X2, X31
	027 Call String.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {40}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X2, [X8+728]
	037 Move X1, [X8+736]
	038 Move X30, [X31+32]
	039 CallNoReturn X2
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move W0, W31
	043 Move X30, [X31+32]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Int32 <GetPropertyMembers>b__22_0(System.Reflection.MemberInfo x)

Disassembly:
	0x03C96B80 CBZ X19, 0x3C96BB4
	0x03C96B84 ADRP X8, 0x45D000
	0x03C96B88 LDR X8, [X8 + 0x988]
	0x03C96B8C MOV X0, X19
	0x03C96B90 MOV X2, X31
	0x03C96B94 LDR X1, [X8]
	0x03C96B98 BL 0x321BA08
	0x03C96B9C TBNZ X0, 0x0, 0x3C96BE8
	0x03C96BA0 STR W31, [X20 + 0x20]
	0x03C96BA4 STR X19, [X20 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move X2, [X8+568]
	007 Move X8, [X8+576]
	008 Move X1, X8
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

