Type: Unity.Properties.Property`2

Method: System.String get_Name()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type DeclaredValueType()

Disassembly:
	0x024EA260 B 0x24EA274
	0x024EA264 LDR W9, [X10]
	0x024EA268 ADD W9, W9, 0x1
	0x024EA26C ADD X8, X8, W9, 0x4, SXTW
	0x024EA270 ADD X0, X8, 0x138
	0x024EA274 LDP X3, X2, [X0]
	0x024EA278 MOV X0, X20
	0x024EA27C MOV X1, X19
	0x024EA280 LDP X20, X19, [X31 + 0x10]
	0x024EA284 LDP X30, X21, [X31], #0x20
	0x024EA288 BR X3
	0x024EA28C BL 0x1C16F20
	0x024EA290 STR X30, [X31 - 0x30]!
	0x024EA294 STP X22, X21, [X31 + 0x10]
	0x024EA298 STP X20, X19, [X31 + 0x20]
	0x024EA29C ADRP X21, 0x1EEF000
	0x024EA2A0 LDRB W8, [X21 + 0xC72]
	0x024EA2A4 MOV X19, X1
	0x024EA2A8 MOV X20, X0
	0x024EA2AC TBNZ X8, 0x0, 0x24EA2F4
	0x024EA2B0 ADRP X0, 0x1C33000
	0x024EA2B4 LDR X0, [X0 + 0x28]
	0x024EA2B8 BL 0x1C16CF4
	0x024EA2BC ADRP X0, 0x1C33000
	0x024EA2C0 LDR X0, [X0 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1EF0000
	006 Move X20, 0x1C0A000
	007 Move W8, [X21+3173]
	008 Move X20, [X20+1728]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1C0A000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3173], W8
	019 Move X8, [X19+32]
	020 Move X0, [X20]
	021 Move X8, [X8+192]
	022 Move W9, [X0+224]
	023 Move X19, [X8]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Type.GetTypeFromHandle, X0
	034 Return X0

Method: System.Void AddAttribute(System.Attribute attribute)

Disassembly:
	0x024EA2C4 BL 0x1C16CF4
	0x024EA2C8 ADRP X0, 0x1C33000
	0x024EA2CC LDR X0, [X0 + 0x38]
	0x024EA2D0 BL 0x1C16CF4
	0x024EA2D4 ADRP X0, 0x1C33000
	0x024EA2D8 LDR X0, [X0 + 0x40]
	0x024EA2DC BL 0x1C16CF4
	0x024EA2E0 ADRP X0, 0x1C09000
	0x024EA2E4 LDR X0, [X0 + 0x6C0]
	0x024EA2E8 BL 0x1C16CF4
	0x024EA2EC MOVZ W8, 0x1
	0x024EA2F0 STRB W8, [X21 + 0xC72]
	0x024EA2F4 CBZ X19, 0x24EA3C4
	0x024EA2F8 ADRP X21, 0x1C33000
	0x024EA2FC ADRP X22, 0x1C09000
	0x024EA300 LDR X21, [X21 + 0x28]
	0x024EA304 LDR X22, [X22 + 0x6C0]
	0x024EA308 MOV X0, X19
	0x024EA30C MOV X1, X31
	0x024EA310 BL 0x33BE520
	0x024EA314 LDR X8, [X22]
	0x024EA318 LDR X22, [X21]
	0x024EA31C MOV X21, X0
	0x024EA320 LDR W9, [X8 + 0xE0]
	0x024EA324 CBNZ W9, 0x24EA330
	0x024EA328 MOV X0, X8
	0x024EA32C BL 0x1C16DFC
	0x024EA330 MOV X0, X22
	0x024EA334 MOV X1, X31
	0x024EA338 BL 0x338C698
	0x024EA33C MOV X1, X0
	0x024EA340 MOV X0, X21
	0x024EA344 MOV X2, X31
	0x024EA348 BL 0x3395194
	0x024EA34C TBNZ X0, 0x0, 0x24EA3C4
	0x024EA350 LDR X21, [X20 + 0x10]
	0x024EA354 CBNZ X21, 0x24EA384
	0x024EA358 ADRP X8, 0x1C33000
	0x024EA35C LDR X8, [X8 + 0x40]
	0x024EA360 LDR X0, [X8]
	0x024EA364 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1EF0000
	006 Move W8, [X21+3174]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1C34000
	014 Move X0, [X0+32]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3174], W8
	018 Compare X20, 0
	019 JumpIfEqual {48}
	020 Move X10, 0x1C34000
	021 Move X8, [X20]
	022 Move X10, [X10+32]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X3, [X0]
	040 Move X2, [X0+8]
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X3
	048 Call 0x1C17F20

Method: System.Void AddAttributes(System.Collections.Generic.IEnumerable`1<System.Attribute> attributes)

Disassembly:
	0x024EA368 ADRP X8, 0x1C33000
	0x024EA36C LDR X8, [X8 + 0x38]
	0x024EA370 MOV X21, X0
	0x024EA374 LDR X1, [X8]
	0x024EA378 BL 0x301B7C4
	0x024EA37C STR X21, [X20 + 0x10]
	0x024EA380 CBZ X21, 0x24EA3F8
	0x024EA384 ADRP X9, 0x1C33000
	0x024EA388 LDR X9, [X9 + 0x30]
	0x024EA38C LDR W10, [X21 + 0x1C]
	0x024EA390 LDR X8, [X21 + 0x10]
	0x024EA394 LDR X9, [X9]
	0x024EA398 ADD W10, W10, 0x1
	0x024EA39C STR W10, [X21 + 0x1C]
	0x024EA3A0 CBZ X8, 0x24EA3F8
	0x024EA3A4 LDRSW X10, [X21 + 0x18]
	0x024EA3A8 LDR W11, [X8 + 0x18]
	0x024EA3AC CMP W10, W11
	0x024EA3B0 B.CS 0x24EA3D4
	0x024EA3B4 ADD W9, W10, 0x1
	0x024EA3B8 ADD X8, X8, X10, 0x3, LSL
	0x024EA3BC STR W9, [X21 + 0x18]
	0x024EA3C0 STR X19, [X8 + 0x20]
	0x024EA3C4 LDP X20, X19, [X31 + 0x20]
	0x024EA3C8 LDP X22, X21, [X31 + 0x10]
	0x024EA3CC LDR X30, [X31], #0x30
	0x024EA3D0 RET
	0x024EA3D4 LDR X8, [X9 + 0x20]
	0x024EA3D8 MOV X0, X21
	0x024EA3DC MOV X1, X19
	0x024EA3E0 LDP X20, X19, [X31 + 0x20]
	0x024EA3E4 LDR X8, [X8 + 0xC0]
	0x024EA3E8 LDP X22, X21, [X31 + 0x10]
	0x024EA3EC LDR X2, [X8 + 0x70]
	0x024EA3F0 LDR X30, [X31], #0x30
	0x024EA3F4 B 0x301BF90
	0x024EA3F8 BL 0x1C16F20
	0x024EA3FC STP X29, X30, [X31 - 0x60]!
	0x024EA400 STP X28, X27, [X31 + 0x10]
	0x024EA404 STP X26, X25, [X31 + 0x20]
	0x024EA408 STP X24, X23, [X31 + 0x30]
	0x024EA40C STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1EF0000
	006 Move W8, [X21+3175]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1C34000
	014 Move X0, [X0+32]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3175], W8
	018 Compare X20, 0
	019 JumpIfEqual {49}
	020 Move X10, 0x1C34000
	021 Move X8, [X20]
	022 Move X10, [X10+32]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X20
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X3, [X0]
	041 Move X2, [X0+8]
	042 Move X0, X20
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 CallNoReturn X3
	049 Call 0x1C17F20

Method: System.Void Unity.Properties.Internal.IAttributes.AddAttribute(System.Attribute attribute)

Disassembly:
	0x024EA410 STP X20, X19, [X31 + 0x50]
	0x024EA414 ADRP X21, 0x1EEF000
	0x024EA418 LDRB W8, [X21 + 0xC73]
	0x024EA41C MOV X19, X1
	0x024EA420 MOV X20, X0
	0x024EA424 TBNZ X8, 0x0, 0x24EA49C
	0x024EA428 ADRP X0, 0x1C33000
	0x024EA42C LDR X0, [X0 + 0x28]
	0x024EA430 BL 0x1C16CF4
	0x024EA434 ADRP X0, 0x1C09000
	0x024EA438 LDR X0, [X0 + 0xE00]
	0x024EA43C BL 0x1C16CF4
	0x024EA440 ADRP X0, 0x1C33000
	0x024EA444 LDR X0, [X0 + 0x48]
	0x024EA448 BL 0x1C16CF4
	0x024EA44C ADRP X0, 0x1C33000
	0x024EA450 LDR X0, [X0 + 0x50]
	0x024EA454 BL 0x1C16CF4
	0x024EA458 ADRP X0, 0x1C09000
	0x024EA45C LDR X0, [X0 + 0xE18]
	0x024EA460 BL 0x1C16CF4
	0x024EA464 ADRP X0, 0x1C33000
	0x024EA468 LDR X0, [X0 + 0x30]
	0x024EA46C BL 0x1C16CF4
	0x024EA470 ADRP X0, 0x1C33000
	0x024EA474 LDR X0, [X0 + 0x38]
	0x024EA478 BL 0x1C16CF4
	0x024EA47C ADRP X0, 0x1C33000
	0x024EA480 LDR X0, [X0 + 0x40]
	0x024EA484 BL 0x1C16CF4
	0x024EA488 ADRP X0, 0x1C09000
	0x024EA48C LDR X0, [X0 + 0x6C0]
	0x024EA490 BL 0x1C16CF4
	0x024EA494 MOVZ W8, 0x1
	0x024EA498 STRB W8, [X21 + 0xC73]
	0x024EA49C LDR X8, [X20 + 0x10]
	0x024EA4A0 CBNZ X8, 0x24EA4CC
	0x024EA4A4 ADRP X8, 0x1C33000
	0x024EA4A8 LDR X8, [X8 + 0x40]
	0x024EA4AC LDR X0, [X8]
	0x024EA4B0 BL 0x1C16F10
	0x024EA4B4 ADRP X8, 0x1C33000
	0x024EA4B8 LDR X8, [X8 + 0x38]
	0x024EA4BC MOV X21, X0
	0x024EA4C0 LDR X1, [X8]
	0x024EA4C4 BL 0x301B7C4
	0x024EA4C8 STR X21, [X20 + 0x10]
	0x024EA4CC CBZ X19, 0x24EA74C
	0x024EA4D0 ADRP X10, 0x1C33000
	0x024EA4D4 LDR X8, [X19]
	0x024EA4D8 LDR X10, [X10 + 0x48]
	0x024EA4DC LDRH W9, [X8 + 0x12E]
	0x024EA4E0 LDR X1, [X10]
	0x024EA4E4 CBZ X9, 0x24EA508
	0x024EA4E8 LDR X10, [X8 + 0xB0]
	0x024EA4EC ADD X10, X10, 0x8
	0x024EA4F0 LDUR X11, [X10 - 0x8]
	0x024EA4F4 CMP X11, X1
	0x024EA4F8 B.EQ 0x24EA518
	0x024EA4FC SUBS X9, X9, 0x1
	0x024EA500 ADD X10, X10, 0x10
	0x024EA504 B.NE 0x24EA4F0
	0x024EA508 MOV X0, X19
	0x024EA50C MOV W2, W31
	0x024EA510 BL 0x1C5C788
	0x024EA514 B 0x24EA524
	0x024EA518 LDRSW X9, [X10]
	0x024EA51C ADD X8, X8, X9, 0x4, LSL
	0x024EA520 ADD X0, X8, 0x138
	0x024EA524 LDP X8, X1, [X0]
	0x024EA528 ADRP X24, 0x1C09000
	0x024EA52C LDR X24, [X24 + 0xE00]
	0x024EA530 MOV X0, X19
	0x024EA534 BLR X8
	0x024EA538 MOV X19, X0
	0x024EA53C CBZ X0, 0x24EA750
	0x024EA540 ADRP X25, 0x1C09000
	0x024EA544 ADRP X26, 0x1C33000
	0x024EA548 ADRP X27, 0x1C33000
	0x024EA54C ADRP X28, 0x1C09000
	0x024EA550 ADRP X29, 0x1C33000
	0x024EA554 LDR X25, [X25 + 0xE18]
	0x024EA558 LDR X26, [X26 + 0x50]
	0x024EA55C LDR X27, [X27 + 0x28]
	0x024EA560 LDR X28, [X28 + 0x6C0]
	0x024EA564 LDR X29, [X29 + 0x30]
	0x024EA568 LDR X8, [X19]
	0x024EA56C LDR X1, [X25]
	0x024EA570 LDRH W9, [X8 + 0x12E]
	0x024EA574 CBZ X9, 0x24EA598
	0x024EA578 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EF0000
	007 Move W8, [X21+3176]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x1C34000
	015 Move X0, [X0+40]
	016 Call 0x1C17CF4
	017 Move X0, 0x1C34000
	018 Move X0, [X0+48]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C34000
	021 Move X0, [X0+56]
	022 Call 0x1C17CF4
	023 Move X0, 0x1C34000
	024 Move X0, [X0+64]
	025 Call 0x1C17CF4
	026 Move X0, 0x1C0A000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3176], W8
	031 Compare X19, 0
	032 JumpIfEqual {90}
	033 Move X21, 0x1C34000
	034 Move X22, 0x1C0A000
	035 Move X21, [X21+40]
	036 Move X22, [X22+1728]
	037 Move X0, X19
	038 Move X1, X31
	039 Call "il2cpp_vm_object_is_inst", X0
	040 Move X8, [X22]
	041 Move X22, [X21]
	042 Move X21, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X22
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X1, X0
	052 Move X0, X21
	053 Move X2, X31
	054 Call Type.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {90}
	059 Move X21, [X20+16]
	060 Compare X21, 0
	061 JumpIfNotEqual {74}
	062 Move X8, 0x1C34000
	063 Move X8, [X8+64]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X8, 0x1C34000
	067 Move X8, [X8+56]
	068 Move X21, X0
	069 Move X1, [X8]
	070 Call List`1<Object>..ctor, X0
	071 Move [X20+16], X21
	072 Compare X21, 0
	073 JumpIfEqual {108}
	074 Move X9, 0x1C34000
	075 Move X9, [X9+48]
	076 Move W10, [X21+28]
	077 Move X8, [X21+16]
	078 Move X9, [X9]
	079 Add W10, W10, 1
	080 Move [X21+28], W10
	081 Compare X8, 0
	082 JumpIfEqual {108}
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Move W11, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W9, W10, 1
	087 Add X8, X8, X10
	088 Move [X21+24], W9
	089 Move [X8+32], X19
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return 
	096 Move X8, [X9+32]
	097 Move X0, X21
	098 Move X1, X19
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X8, [X8+192]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X2, [X8+112]
	105 Move X30, [X31+48]
	106 Call List`1<Object>.AddWithResize, X0, X1
	107 Return 
	108 Call 0x1C17F20

Method: System.Void Unity.Properties.Internal.IAttributes.AddAttributes(System.Collections.Generic.IEnumerable`1<System.Attribute> attributes)

Disassembly:
	0x024EA57C ADD X10, X10, 0x8
	0x024EA580 LDUR X11, [X10 - 0x8]
	0x024EA584 CMP X11, X1
	0x024EA588 B.EQ 0x24EA5A8
	0x024EA58C SUBS X9, X9, 0x1
	0x024EA590 ADD X10, X10, 0x10
	0x024EA594 B.NE 0x24EA580
	0x024EA598 MOV X0, X19
	0x024EA59C MOV W2, W31
	0x024EA5A0 BL 0x1C5C788
	0x024EA5A4 B 0x24EA5B4
	0x024EA5A8 LDRSW X9, [X10]
	0x024EA5AC ADD X8, X8, X9, 0x4, LSL
	0x024EA5B0 ADD X0, X8, 0x138
	0x024EA5B4 LDP X8, X1, [X0]
	0x024EA5B8 MOV X0, X19
	0x024EA5BC BLR X8
	0x024EA5C0 TBZ X0, 0x0, 0x24EA6C4
	0x024EA5C4 LDR X8, [X19]
	0x024EA5C8 LDR X1, [X26]
	0x024EA5CC LDRH W9, [X8 + 0x12E]
	0x024EA5D0 CBZ X9, 0x24EA5F4
	0x024EA5D4 LDR X10, [X8 + 0xB0]
	0x024EA5D8 ADD X10, X10, 0x8
	0x024EA5DC LDUR X11, [X10 - 0x8]
	0x024EA5E0 CMP X11, X1
	0x024EA5E4 B.EQ 0x24EA604
	0x024EA5E8 SUBS X9, X9, 0x1
	0x024EA5EC ADD X10, X10, 0x10
	0x024EA5F0 B.NE 0x24EA5DC
	0x024EA5F4 MOV X0, X19
	0x024EA5F8 MOV W2, W31
	0x024EA5FC BL 0x1C5C788
	0x024EA600 B 0x24EA610
	0x024EA604 LDRSW X9, [X10]
	0x024EA608 ADD X8, X8, X9, 0x4, LSL
	0x024EA60C ADD X0, X8, 0x138
	0x024EA610 LDP X8, X1, [X0]
	0x024EA614 MOV X0, X19
	0x024EA618 BLR X8
	0x024EA61C MOV X21, X0
	0x024EA620 CBZ X0, 0x24EA568
	0x024EA624 MOV X0, X21
	0x024EA628 MOV X1, X31
	0x024EA62C BL 0x33BE520
	0x024EA630 MOV X22, X0
	0x024EA634 LDR X0, [X28]
	0x024EA638 LDR X23, [X27]
	0x024EA63C LDR W8, [X0 + 0xE0]
	0x024EA640 CBNZ W8, 0x24EA648
	0x024EA644 BL 0x1C16DFC
	0x024EA648 MOV X0, X23
	0x024EA64C MOV X1, X31
	0x024EA650 BL 0x338C698
	0x024EA654 MOV X1, X0
	0x024EA658 MOV X0, X22
	0x024EA65C MOV X2, X31
	0x024EA660 BL 0x3395194
	0x024EA664 TBNZ X0, 0x0, 0x24EA568
	0x024EA668 LDR X0, [X20 + 0x10]
	0x024EA66C CBZ X0, 0x24EA744
	0x024EA670 LDR W10, [X0 + 0x1C]
	0x024EA674 LDR X8, [X0 + 0x10]
	0x024EA678 LDR X9, [X29]
	0x024EA67C ADD W10, W10, 0x1
	0x024EA680 STR W10, [X0 + 0x1C]
	0x024EA684 CBZ X8, 0x24EA748
	0x024EA688 LDRSW X10, [X0 + 0x18]
	0x024EA68C LDR W11, [X8 + 0x18]
	0x024EA690 CMP W10, W11
	0x024EA694 B.CS 0x24EA6AC
	0x024EA698 ADD W9, W10, 0x1
	0x024EA69C ADD X8, X8, X10, 0x3, LSL
	0x024EA6A0 STR W9, [X0 + 0x18]
	0x024EA6A4 STR X21, [X8 + 0x20]
	0x024EA6A8 B 0x24EA568
	0x024EA6AC LDR X8, [X9 + 0x20]
	0x024EA6B0 LDR X8, [X8 + 0xC0]
	0x024EA6B4 LDR X2, [X8 + 0x70]
	0x024EA6B8 MOV X1, X21
	0x024EA6BC BL 0x301BF90
	0x024EA6C0 B 0x24EA568
	0x024EA6C4 MOV X20, X31
	0x024EA6C8 CBZ X19, 0x24EA724
	0x024EA6CC LDR X8, [X19]
	0x024EA6D0 LDR X1, [X24]
	0x024EA6D4 LDRH W9, [X8 + 0x12E]
	0x024EA6D8 CBZ X9, 0x24EA6FC
	0x024EA6DC LDR X10, [X8 + 0xB0]
	0x024EA6E0 ADD X10, X10, 0x8
	0x024EA6E4 LDUR X11, [X10 - 0x8]
	0x024EA6E8 CMP X11, X1
	0x024EA6EC B.EQ 0x24EA70C
	0x024EA6F0 SUBS X9, X9, 0x1
	0x024EA6F4 ADD X10, X10, 0x10
	0x024EA6F8 B.NE 0x24EA6E4
	0x024EA6FC MOV X0, X19
	0x024EA700 MOV W2, W31
	0x024EA704 BL 0x1C5C788
	0x024EA708 B 0x24EA718
	0x024EA70C LDRSW X9, [X10]
	0x024EA710 ADD X8, X8, X9, 0x4, LSL
	0x024EA714 ADD X0, X8, 0x138
	0x024EA718 LDP X8, X1, [X0]
	0x024EA71C MOV X0, X19
	0x024EA720 BLR X8
	0x024EA724 CBNZ X20, 0x24EA754
	0x024EA728 LDP X20, X19, [X31 + 0x50]
	0x024EA72C LDP X22, X21, [X31 + 0x40]
	0x024EA730 LDP X24, X23, [X31 + 0x30]
	0x024EA734 LDP X26, X25, [X31 + 0x20]
	0x024EA738 LDP X28, X27, [X31 + 0x10]
	0x024EA73C LDP X29, X30, [X31], #0x60
	0x024EA740 RET
	0x024EA744 BL 0x1C16F20
	0x024EA748 BL 0x1C16F20
	0x024EA74C BL 0x1C16F20
	0x024EA750 BL 0x1C16F20
	0x024EA754 MOV X0, X20
	0x024EA758 BL 0x1C16F18
	0x024EA75C B 0x24EA77C
	0x024EA760 B 0x24EA77C
	0x024EA764 B 0x24EA77C
	0x024EA768 B 0x24EA77C
	0x024EA76C B 0x24EA77C
	0x024EA770 B 0x24EA77C
	0x024EA774 B 0x24EA77C
	0x024EA778 B 0x24EA77C
	0x024EA77C CMP W1, 0x1
	0x024EA780 B.NE 0x24EA794
	0x024EA784 BL 0x3EB1AD0
	0x024EA788 LDR X20, [X0]
	0x024EA78C BL 0x3EB1AE0
	0x024EA790 B 0x24EA6C8
	0x024EA794 MOV X21, X0
	0x024EA798 MOV X20, X31
	0x024EA79C B 0x24EA7A4
	0x024EA7A0 MOV X21, X0
	0x024EA7A4 CBZ X19, 0x24EA800
	0x024EA7A8 LDR X8, [X19]
	0x024EA7AC LDR X1, [X24]
	0x024EA7B0 LDRH W9, [X8 + 0x12E]
	0x024EA7B4 CBZ X9, 0x24EA7D8
	0x024EA7B8 LDR X10, [X8 + 0xB0]
	0x024EA7BC ADD X10, X10, 0x8
	0x024EA7C0 LDUR X11, [X10 - 0x8]
	0x024EA7C4 CMP X11, X1
	0x024EA7C8 B.EQ 0x24EA7E8
	0x024EA7CC SUBS X9, X9, 0x1
	0x024EA7D0 ADD X10, X10, 0x10
	0x024EA7D4 B.NE 0x24EA7C0
	0x024EA7D8 MOV X0, X19
	0x024EA7DC MOV W2, W31
	0x024EA7E0 BL 0x1C5C788
	0x024EA7E4 B 0x24EA7F4
	0x024EA7E8 LDRSW X9, [X10]
	0x024EA7EC ADD X8, X8, X9, 0x4, LSL
	0x024EA7F0 ADD X0, X8, 0x138
	0x024EA7F4 LDP X8, X1, [X0]
	0x024EA7F8 MOV X0, X19
	0x024EA7FC BLR X8
	0x024EA800 CBNZ X20, 0x24EA80C
	0x024EA804 MOV X0, X21
	0x024EA808 BL 0x1D2C690
	0x024EA80C MOV X0, X20
	0x024EA810 BL 0x1C16F18
	0x024EA814 BL 0x1990590
	0x024EA818 MOV X1, X31
	0x024EA81C B 0x33BDD8C
	0x024EA820 STP X30, X21, [X31 - 0x20]!
	0x024EA824 STP X20, X19, [X31 + 0x10]
	0x024EA828 ADRP X21, 0x1EEF000
	0x024EA82C ADRP X20, 0x1C09000
	0x024EA830 LDRB W8, [X21 + 0xC74]
	0x024EA834 LDR X20, [X20 + 0x6C0]
	0x024EA838 MOV X19, X1
	0x024EA83C TBNZ X8, 0x0, 0x24EA854
	0x024EA840 ADRP X0, 0x1C09000
	0x024EA844 LDR X0, [X0 + 0x6C0]
	0x024EA848 BL 0x1C16CF4
	0x024EA84C MOVZ W8, 0x1
	0x024EA850 STRB W8, [X21 + 0xC74]
	0x024EA854 LDR X8, [X19 + 0x20]
	0x024EA858 LDR X0, [X20]
	0x024EA85C LDR X8, [X8 + 0xC0]
	0x024EA860 LDR W9, [X0 + 0xE0]
	0x024EA864 LDR X19, [X8]
	0x024EA868 CBNZ W9, 0x24EA870
	0x024EA86C BL 0x1C16DFC
	0x024EA870 MOV X0, X19
	0x024EA874 LDP X20, X19, [X31 + 0x10]
	0x024EA878 MOV X1, X31
	0x024EA87C LDP X30, X21, [X31], #0x20
	0x024EA880 B 0x338C698
	0x024EA884 STP X30, X21, [X31 - 0x20]!
	0x024EA888 STP X20, X19, [X31 + 0x10]
	0x024EA88C ADRP X21, 0x1EEF000
	0x024EA890 LDRB W8, [X21 + 0xC75]
	0x024EA894 MOV X19, X1
	0x024EA898 MOV X20, X0
	0x024EA89C TBNZ X8, 0x0, 0x24EA8B4
	0x024EA8A0 ADRP X0, 0x1C33000
	0x024EA8A4 LDR X0, [X0 + 0x20]
	0x024EA8A8 BL 0x1C16CF4
	0x024EA8AC MOVZ W8, 0x1
	0x024EA8B0 STRB W8, [X21 + 0xC75]
	0x024EA8B4 CBZ X20, 0x24EA924
	0x024EA8B8 ADRP X10, 0x1C33000
	0x024EA8BC LDR X8, [X20]
	0x024EA8C0 LDR X10, [X10 + 0x20]
	0x024EA8C4 LDRH W9, [X8 + 0x12E]
	0x024EA8C8 LDR X1, [X10]
	0x024EA8CC CBZ X9, 0x24EA8F0
	0x024EA8D0 LDR X10, [X8 + 0xB0]
	0x024EA8D4 ADD X10, X10, 0x8
	0x024EA8D8 LDUR X11, [X10 - 0x8]
	0x024EA8DC CMP X11, X1
	0x024EA8E0 B.EQ 0x24EA900
	0x024EA8E4 SUBS X9, X9, 0x1
	0x024EA8E8 ADD X10, X10, 0x10
	0x024EA8EC B.NE 0x24EA8D8
	0x024EA8F0 MOV X0, X20
	0x024EA8F4 MOV W2, W31
	0x024EA8F8 BL 0x1C5C788
	0x024EA8FC B 0x24EA90C
	0x024EA900 LDRSW X9, [X10]
	0x024EA904 ADD X8, X8, X9, 0x4, LSL
	0x024EA908 ADD X0, X8, 0x138
	0x024EA90C LDP X3, X2, [X0]
	0x024EA910 MOV X0, X20
	0x024EA914 MOV X1, X19
	0x024EA918 LDP X20, X19, [X31 + 0x10]
	0x024EA91C LDP X30, X21, [X31], #0x20
	0x024EA920 BR X3
	0x024EA924 BL 0x1C16F20
	0x024EA928 STP X30, X21, [X31 - 0x20]!
	0x024EA92C STP X20, X19, [X31 + 0x10]
	0x024EA930 ADRP X21, 0x1EEF000
	0x024EA934 LDRB W8, [X21 + 0xC76]
	0x024EA938 MOV X19, X1
	0x024EA93C MOV X20, X0
	0x024EA940 TBNZ X8, 0x0, 0x24EA958
	0x024EA944 ADRP X0, 0x1C33000
	0x024EA948 LDR X0, [X0 + 0x20]
	0x024EA94C BL 0x1C16CF4
	0x024EA950 MOVZ W8, 0x1
	0x024EA954 STRB W8, [X21 + 0xC76]
	0x024EA958 CBZ X20, 0x24EA9CC
	0x024EA95C ADRP X10, 0x1C33000
	0x024EA960 LDR X8, [X20]
	0x024EA964 LDR X10, [X10 + 0x20]
	0x024EA968 LDRH W9, [X8 + 0x12E]
	0x024EA96C LDR X1, [X10]
	0x024EA970 CBZ X9, 0x24EA994
	0x024EA974 LDR X10, [X8 + 0xB0]
	0x024EA978 ADD X10, X10, 0x8
	0x024EA97C LDUR X11, [X10 - 0x8]
	0x024EA980 CMP X11, X1
	0x024EA984 B.EQ 0x24EA9A4
	0x024EA988 SUBS X9, X9, 0x1
	0x024EA98C ADD X10, X10, 0x10
	0x024EA990 B.NE 0x24EA97C
	0x024EA994 MOVZ W2, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x1EF0000
	014 Move W8, [X21+3177]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x1C34000
	022 Move X0, [X0+40]
	023 Call 0x1C17CF4
	024 Move X0, 0x1C0A000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x1C34000
	028 Move X0, [X0+72]
	029 Call 0x1C17CF4
	030 Move X0, 0x1C34000
	031 Move X0, [X0+80]
	032 Call 0x1C17CF4
	033 Move X0, 0x1C0A000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0x1C34000
	037 Move X0, [X0+48]
	038 Call 0x1C17CF4
	039 Move X0, 0x1C34000
	040 Move X0, [X0+56]
	041 Call 0x1C17CF4
	042 Move X0, 0x1C34000
	043 Move X0, [X0+64]
	044 Call 0x1C17CF4
	045 Move X0, 0x1C0A000
	046 Move X0, [X0+1728]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+3177], W8
	050 Move X8, [X20+16]
	051 Compare X8, 0
	052 JumpIfNotEqual {63}
	053 Move X8, 0x1C34000
	054 Move X8, [X8+64]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, 0x1C34000
	058 Move X8, [X8+56]
	059 Move X21, X0
	060 Move X1, [X8]
	061 Call List`1<Object>..ctor, X0
	062 Move [X20+16], X21
	063 Compare X19, 0
	064 JumpIfEqual {236}
	065 Move X10, 0x1C34000
	066 Move X8, [X19]
	067 Move X10, [X10+72]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X1, [X10]
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X24, 0x1C0A000
	087 Move X24, [X24+3584]
	088 Move X0, X19
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X19, X0
	091 Compare X0, 0
	092 JumpIfEqual {237}
	093 Move X25, 0x1C0A000
	094 Move X26, 0x1C34000
	095 Move X27, 0x1C34000
	096 Move X28, 0x1C0A000
	097 Move X29, 0x1C34000
	098 Move X25, [X25+3608]
	099 Move X26, [X26+80]
	100 Move X27, [X27+40]
	101 Move X28, [X28+1728]
	102 Move X29, [X29+48]
	103 Move X8, [X19]
	104 Move X1, [X25]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X19
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {195}
	128 Move X8, [X19]
	129 Move X1, [X26]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X19
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X19
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X21, X0
	150 Compare X0, 0
	151 JumpIfEqual {103}
	152 Move X0, X21
	153 Move X1, X31
	154 Call "il2cpp_vm_object_is_inst", X0
	155 Move X22, X0
	156 Move X0, [X28]
	157 Move X23, [X27]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X23
	163 Move X1, X31
	164 Call Type.GetTypeFromHandle, X0
	165 Move X1, X0
	166 Move X0, X22
	167 Move X2, X31
	168 Call Type.op_Equality, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {103}
	173 Move X0, [X20+16]
	174 Compare X0, 0
	175 JumpIfEqual {234}
	176 Move W10, [X0+28]
	177 Move X8, [X0+16]
	178 Move X9, [X29]
	179 Add W10, W10, 1
	180 Move [X0+28], W10
	181 Compare X8, 0
	182 JumpIfEqual {235}
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Move W11, [X8+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Add W9, W10, 1
	187 Add X8, X8, X10
	188 Move [X0+24], W9
	189 Move [X8+32], X21
	190 Move X8, [X9+32]
	191 Move X8, [X8+192]
	192 Move X2, [X8+112]
	193 Move X1, X21
	194 Call List`1<Object>.AddWithResize, X0, X1
	195 Move X20, X31
	196 Compare X19, 0
	197 JumpIfEqual {219}
	198 Move X8, [X19]
	199 Move X1, [X24]
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X19
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X1, [X0+8]
	217 Move X0, X19
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Compare X20, 0
	220 JumpIfNotEqual {238}
	221 Move X20, [X31+80]
	222 Move X19, [X31+88]
	223 Move X22, [X31+64]
	224 Move X21, [X31+72]
	225 Move X24, [X31+48]
	226 Move X23, [X31+56]
	227 Move X26, [X31+32]
	228 Move X25, [X31+40]
	229 Move X28, [X31+16]
	230 Move X27, [X31+24]
	231 Move X29, [X31+96]
	232 Move X30, [X31+104]
	233 Return 
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Move X0, X20
	239 Call 0x1C17F18
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Call 0x3EB2AD0
	242 Move X20, [X0]
	243 Call 0x3EB2AE0
	244 Move X21, X0
	245 Move X20, X31
	246 Move X21, X0
	247 Compare X19, 0
	248 JumpIfEqual {270}
	249 Move X8, [X19]
	250 Move X1, [X24]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X19
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X19
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X20, 0
	271 JumpIfNotEqual {274}
	272 Move X0, X21
	273 Call 0x1D2D690
	274 Move X0, X20
	275 Call 0x1C17F18
	276 Call 0x1991590

Method: System.Boolean HasAttribute()

Disassembly:
	0x0213610C LDR X8, [X0]
	0x02136110 BLR X8
	0x02136114 LDR X8, [X19 + 0x20]
	0x02136118 MOV X22, X0
	0x0213611C ADD X9, X8, 0x135
	0x02136120 LDRH W9, [X9]
	0x02136124 TBNZ X9, 0x0, 0x2136140
	0x02136128 MOV X0, X8
	0x0213612C BL 0x1C5C684
	0x02136130 LDR X8, [X19 + 0x20]
	0x02136134 ADD X9, X8, 0x135
	0x02136138 LDRH W9, [X9]
	0x0213613C B 0x2136144
	0x02136140 MOV X0, X8
	0x02136144 LDR X10, [X0 + 0xC0]
	0x02136148 LDR X10, [X10 + 0x28]
	0x0213614C LDR X23, [X10]
	0x02136150 TBNZ X9, 0x0, 0x2136160
	0x02136154 MOV X0, X8
	0x02136158 BL 0x1C5C684
	0x0213615C MOV X8, X0
	0x02136160 LDR X8, [X8 + 0xC0]
	0x02136164 LDR X0, [X8 + 0x28]
	0x02136168 BLR X23
	0x0213616C CMP W21, 0x0
	0x02136170 MOVZ W8, 0x10
	0x02136174 MOV W2, W0
	0x02136178 CSEL W3, W8, W21, EQ
	0x0213617C MOV X0, X22
	0x02136180 MOV X1, X20
	0x02136184 MOV X4, X31
	0x02136188 BL 0x37025C8
	0x0213618C LDR X8, [X19 + 0x20]
	0x02136190 MOV X19, X0
	0x02136194 LDRB W9, [X8 + 0x135]
	0x02136198 TBNZ X9, 0x0, 0x21361A4
	0x0213619C MOV X0, X8
	0x021361A0 BL 0x1C5C684
	0x021361A4 MOV X0, X19
	0x021361A8 LDP X20, X19, [X31 + 0x20]
	0x021361AC LDP X22, X21, [X31 + 0x10]
	0x021361B0 LDP X30, X23, [X31], #0x30
	0x021361B4 RET
	0x021361B8 STR X30, [X31 - 0x30]!
	0x021361BC STP X22, X21, [X31 + 0x10]
	0x021361C0 STP X20, X19, [X31 + 0x20]
	0x021361C4 LDR X8, [X1 + 0x38]
	0x021361C8 MOV X19, X1
	0x021361CC MOV X20, X0
	0x021361D0 CBNZ X8, 0x21361E0
	0x021361D4 MOV X0, X19
	0x021361D8 BL 0x1C5C6E0
	0x021361DC LDR X8, [X19 + 0x38]
	0x021361E0 LDR X0, [X8 + 0x10]
	0x021361E4 LDR X20, [X20 + 0x40]
	0x021361E8 LDRB W8, [X0 + 0x135]
	0x021361EC TBNZ X8, 0x0, 0x21361F4
	0x021361F0 BL 0x1C5C684
	0x021361F4 LDR W8, [X0 + 0xE0]
	0x021361F8 CBNZ W8, 0x2136200
	0x021361FC BL 0x1C16DFC
	0x02136200 LDR X8, [X19 + 0x38]
	0x02136204 LDR X0, [X8 + 0x10]
	0x02136208 LDRB W8, [X0 + 0x135]
	0x0213620C TBNZ X8, 0x0, 0x2136214
	0x02136210 BL 0x1C5C684
	0x02136214 LDR X8, [X0 + 0xB8]
	0x02136218 LDR X21, [X8 + 0x8]
	0x0213621C CBNZ X21, 0x21362C8
	0x02136220 LDR X8, [X19 + 0x38]
	0x02136224 LDR X0, [X8 + 0x10]
	0x02136228 LDRB W8, [X0 + 0x135]
	0x0213622C TBNZ X8, 0x0, 0x2136234
	0x02136230 BL 0x1C5C684
	0x02136234 LDR W8, [X0 + 0xE0]
	0x02136238 CBNZ W8, 0x2136240
	0x0213623C BL 0x1C16DFC
	0x02136240 LDR X8, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X1+56]
	011 Move X19, X1
	012 Move X20, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {35}
	015 Move X0, 0x1FE6000
	016 Move X0, [X0+1744]
	017 Call 0x1C17CF4
	018 Move X0, 0x1FE6000
	019 Move X0, [X0+1752]
	020 Call 0x1C17CF4
	021 Move X0, 0x1FC5000
	022 Move X0, [X0+1520]
	023 Call 0x1C17CF4
	024 Move X0, 0x1FBF000
	025 Move X0, [X0+1136]
	026 Call 0x1C17CF4
	027 Move X0, 0x1FC1000
	028 Move X0, [X0+3832]
	029 Call 0x1C17CF4
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X19
	034 Call 0x1C5D6E0
	035 Move X24, 0x1FBF000
	036 Move X25, 0x1FE6000
	037 Move X24, [X24+1136]
	038 Move X25, [X25+1752]
	039 Move X23, X31
	040 Move W21, W31
	041 Move X8, X23
	042 Move X23, [X20+16]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 Compare X23, 0
	046 JumpIfEqual {83}
	047 Compare X8, 0
	048 JumpIfEqual {94}
	049 Move W1, [X8+24]
	050 Move X2, [X24]
	051 Add X0, X31, 8
	052 Move [X31+8], X31
	053 Call Nullable`1<Int32>..ctor, X0, X1
	054 Move W8, [X31+8]
	055 Move W0, W31
	056 Compare W8, 0
	057 JumpIfEqual {84}
	058 Move W8, [X31+12]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X20+16]
	061 Compare X0, 0
	062 JumpIfEqual {94}
	063 Move X2, [X25]
	064 Move W1, W21
	065 Call List`1<Object>.get_Item, X0, X1
	066 Move X8, [X19+56]
	067 Move X22, X0
	068 Move X1, [X8]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X0, X22
	078 Call 0x1C17E00
	079 Add W21, W21, 1
	080 Compare X0, 0
	081 JumpIfEqual {41}
	082 Move W0, 1
	083 Move W0, W31
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X30, [X31+16]
	091 Move X25, [X31+24]
	092 Add X31, X31, 80
	093 Return X0
	094 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x024EA998 MOV X0, X20
	0x024EA99C BL 0x1C5C788

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

