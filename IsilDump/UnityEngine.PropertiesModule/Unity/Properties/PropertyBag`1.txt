Type: Unity.Properties.PropertyBag`1

Method: System.Void .cctor()

Disassembly:
	0x024E6774 BL 0x337DF1C
	0x024E6778 MOV X0, X21
	0x024E677C MOV X1, X19
	0x024E6780 BL 0x1C16DEC
	0x024E6784 STR X30, [X31 - 0x30]!
	0x024E6788 STP X22, X21, [X31 + 0x10]
	0x024E678C STP X20, X19, [X31 + 0x20]
	0x024E6790 ADRP X21, 0x1EF3000
	0x024E6794 ADRP X22, 0x1C36000
	0x024E6798 LDRB W8, [X21 + 0xC4F]
	0x024E679C LDR X22, [X22 + 0x2C8]
	0x024E67A0 MOV X20, X1
	0x024E67A4 MOV X19, X0
	0x024E67A8 TBNZ X8, 0x0, 0x24E67C0
	0x024E67AC ADRP X0, 0x1C36000
	0x024E67B0 LDR X0, [X0 + 0x2C8]
	0x024E67B4 BL 0x1C16CF4
	0x024E67B8 MOVZ W8, 0x1
	0x024E67BC STRB W8, [X21 + 0xC4F]
	0x024E67C0 LDR X0, [X22]
	0x024E67C4 LDR W8, [X0 + 0xE0]
	0x024E67C8 CBNZ W8, 0x24E67D0
	0x024E67CC BL 0x1C16DFC
	0x024E67D0 LDR X8, [X20 + 0x20]
	0x024E67D4 MOV X0, X19
	0x024E67D8 LDP X20, X19, [X31 + 0x20]
	0x024E67DC LDP X22, X21, [X31 + 0x10]
	0x024E67E0 LDR X8, [X8 + 0xC0]
	0x024E67E4 LDR X1, [X8 + 0x8]
	0x024E67E8 LDR X30, [X31], #0x30
	0x024E67EC B 0x22391B4
	0x024E67F0 STR X30, [X31 - 0x20]!
	0x024E67F4 STP X20, X19, [X31 + 0x10]
	0x024E67F8 MOV X20, X2
	0x024E67FC CBZ X1, 0x24E6884
	0x024E6800 LDR X8, [X20 + 0x20]
	0x024E6804 MOV X19, X1
	0x024E6808 LDR X9, [X8 + 0xC0]
	0x024E680C LDR X8, [X1]
	0x024E6810 LDR X20, [X9 + 0x18]
	0x024E6814 LDRH W9, [X8 + 0x12E]
	0x024E6818 LDR X1, [X20 + 0x20]
	0x024E681C LDRH W2, [X20 + 0x50]
	0x024E6820 CBZ X9, 0x24E6844
	0x024E6824 LDR X10, [X8 + 0xB0]
	0x024E6828 ADD X10, X10, 0x8
	0x024E682C LDUR X11, [X10 - 0x8]
	0x024E6830 CMP X11, X1
	0x024E6834 B.EQ 0x24E6850
	0x024E6838 SUBS X9, X9, 0x1
	0x024E683C ADD X10, X10, 0x10
	0x024E6840 B.NE 0x24E682C
	0x024E6844 MOV X0, X19
	0x024E6848 BL 0x1C5C788
	0x024E684C B 0x24E6860
	0x024E6850 LDR W9, [X10]
	0x024E6854 ADD W9, W9, W2
	0x024E6858 ADD X8, X8, W9, 0x4, SXTW
	0x024E685C ADD X0, X8, 0x138
	0x024E6860 LDR X0, [X0 + 0x8]
	0x024E6864 MOV X1, X20
	0x024E6868 BL 0x1C16DF8
	0x024E686C MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1EF4000
	006 Move W8, [X20+3138]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x1C0E000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3138], W8
	017 Move X0, [X19+32]
	018 Move X20, 0x1C0E000
	019 Move W8, [X0+309]
	020 Move X20, [X20+1728]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X20]
	027 Move X9, [X0+192]
	028 Move W10, [X8+224]
	029 Move X20, [X9]
	030 Compare W10, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Move X1, X31
	038 Call TypeTraits.IsContainer, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {48}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Move X0, [X19+32]
	049 Call 0x199C99C
	050 Move X8, [X0+192]
	051 Move X0, 0x1C0E000
	052 Move X20, [X8]
	053 Move X0, [X0+1728]
	054 Call 0x1C17D08
	055 Call 0x19913D0
	056 Move X0, X20
	057 Move X1, X31
	058 Call Type.GetTypeFromHandle, X0
	059 Move X20, X0
	060 Move X0, 0x1C38000
	061 Move X0, [X0+16]
	062 Call 0x1C17D08
	063 Move X1, X20
	064 Move X2, X31
	065 Call String.Format, X0, X1
	066 Move X20, X0
	067 Move X0, 0x1C0E000
	068 Move X0, [X0+1456]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X1, X20
	072 Move X2, X31
	073 Move X21, X0
	074 Call InvalidOperationException..ctor, X0, X1
	075 Move X0, X21
	076 Move X1, X19
	077 Call 0x1C17DEC

Method: System.Void Unity.Properties.Internal.IPropertyBagRegister.Register()

Disassembly:
	0x024E6870 LDR X2, [X0 + 0x8]
	0x024E6874 MOV X0, X19
	0x024E6878 LDP X20, X19, [X31 + 0x10]
	0x024E687C LDR X30, [X31], #0x20
	0x024E6880 BR X2
	0x024E6884 ADRP X0, 0x1C12000
	0x024E6888 LDR X0, [X0 + 0x528]
	0x024E688C BL 0x1C16D08
	0x024E6890 BL 0x1C16F10
	0x024E6894 MOV X19, X0
	0x024E6898 ADRP X0, 0x1C37000
	0x024E689C LDR X0, [X0 + 0x18]
	0x024E68A0 BL 0x1C16D08
	0x024E68A4 MOV X1, X0
	0x024E68A8 MOV X0, X19
	0x024E68AC MOV X2, X31
	0x024E68B0 BL 0x330E100
	0x024E68B4 MOV X0, X19
	0x024E68B8 MOV X1, X20
	0x024E68BC BL 0x1C16DEC
	0x024E68C0 LDR X8, [X0]
	0x024E68C4 LDP X2, X1, [X8 + 0x1B8]
	0x024E68C8 BR X2
	0x024E68CC LDR X8, [X0]
	0x024E68D0 LDP X2, X1, [X8 + 0x1C8]
	0x024E68D4 BR X2
	0x024E68D8 LDR W0, [X0 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EF4000
	007 Move X22, 0x1C37000
	008 Move W8, [X21+3139]
	009 Move X22, [X22+712]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1C37000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3139], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20+32]
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X8, [X8+192]
	033 Move X1, [X8+8]
	034 Move X30, [X31+48]
	035 Call 0x2237FC4, X0
	036 Return 

Method: System.Void Accept(Unity.Properties.ITypeVisitor visitor)

Disassembly:
	0x024E68DC RET
	0x024E68E0 FMOV S0, W31
	0x024E68E4 FMOV S1, W31
	0x024E68E8 RET
	0x024E68EC MOV X1, X31
	0x024E68F0 STR W31, [X0 + 0x10]
	0x024E68F4 B 0x33BDD8C
	0x024E68F8 STP X30, X21, [X31 - 0x20]!
	0x024E68FC STP X20, X19, [X31 + 0x10]
	0x024E6900 ADRP X20, 0x1EF3000
	0x024E6904 LDRB W8, [X20 + 0xC50]
	0x024E6908 MOV X19, X0
	0x024E690C TBNZ X8, 0x0, 0x24E6924
	0x024E6910 ADRP X0, 0x1C0D000
	0x024E6914 LDR X0, [X0 + 0x6C0]
	0x024E6918 BL 0x1C16CF4
	0x024E691C MOVZ W8, 0x1
	0x024E6920 STRB W8, [X20 + 0xC50]
	0x024E6924 LDR X0, [X19 + 0x20]
	0x024E6928 ADRP X20, 0x1C0D000
	0x024E692C LDRB W8, [X0 + 0x135]
	0x024E6930 LDR X20, [X20 + 0x6C0]
	0x024E6934 TBNZ X8, 0x0, 0x24E693C
	0x024E6938 BL 0x1C5C684
	0x024E693C LDR X8, [X20]
	0x024E6940 LDR X9, [X0 + 0xC0]
	0x024E6944 LDR W10, [X8 + 0xE0]
	0x024E6948 LDR X20, [X9]
	0x024E694C CBNZ W10, 0x24E6958
	0x024E6950 MOV X0, X8
	0x024E6954 BL 0x1C16DFC
	0x024E6958 MOV X0, X20
	0x024E695C MOV X1, X31
	0x024E6960 BL 0x338C698
	0x024E6964 MOV X1, X31
	0x024E6968 BL 0x3C91284
	0x024E696C TBZ X0, 0x0, 0x24E697C
	0x024E6970 LDP X20, X19, [X31 + 0x10]
	0x024E6974 LDP X30, X21, [X31], #0x20
	0x024E6978 RET
	0x024E697C LDR X0, [X19 + 0x20]
	0x024E6980 BL 0x199B99C
	0x024E6984 LDR X8, [X0 + 0xC0]
	0x024E6988 ADRP X0, 0x1C0D000
	0x024E698C LDR X20, [X8]
	0x024E6990 LDR X0, [X0 + 0x6C0]
	0x024E6994 BL 0x1C16D08
	0x024E6998 BL 0x19903D0
	0x024E699C MOV X0, X20
	0x024E69A0 MOV X1, X31
	0x024E69A4 BL 0x338C698
	0x024E69A8 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X2
	005 Compare X1, 0
	006 JumpIfEqual {39}
	007 Move X8, [X20+32]
	008 Move X19, X1
	009 Move X9, [X8+192]
	010 Move X8, [X1]
	011 Move X20, [X9+24]
	012 NotImplemented "Instruction LDRH not yet implemented."
	013 Move X1, [X20+32]
	014 NotImplemented "Instruction LDRH not yet implemented."
	015 Compare X9, 0
	016 JumpIfEqual {23}
	017 Move X10, [X8+176]
	018 Add X10, X10, 8
	019 NotImplemented "Instruction LDUR not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Subtract X9, X9, 1
	022 Add X10, X10, 16
	023 Move X0, X19
	024 Call 0x1C5D788
	025 Move W9, [X10]
	026 Add W9, W9, W2
	027 Add X8, X8, W9
	028 Add X0, X8, 312
	029 Move X0, [X0+8]
	030 Move X1, X20
	031 Call 0x1C17DF8
	032 Move X1, X0
	033 Move X2, [X0+8]
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 CallNoReturn X2
	039 Move X0, 0x1C13000
	040 Move X0, [X0+1320]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0x1C38000
	045 Move X0, [X0+24]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call ArgumentNullException..ctor, X0, X1
	051 Move X0, X19
	052 Move X1, X20
	053 Call 0x1C17DEC

Method: Unity.Properties.InstantiationKind Unity.Properties.IConstructor.get_InstantiationKind()

Disassembly:
	0x024E69AC ADRP X0, 0x1C37000
	0x024E69B0 LDR X0, [X0 + 0x10]
	0x024E69B4 BL 0x1C16D08

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+440]
	003 Move X1, [X8+448]
	004 CallNoReturn X2

Method: TContainer Unity.Properties.IConstructor<TContainer>.Instantiate()

Disassembly:
	0x024E69B8 MOV X1, X20
	0x024E69BC MOV X2, X31
	0x024E69C0 BL 0x321EFD0
	0x024E69C4 MOV X20, X0
	0x024E69C8 ADRP X0, 0x1C0D000
	0x024E69CC LDR X0, [X0 + 0x5B0]
	0x024E69D0 BL 0x1C16D08
	0x024E69D4 BL 0x1C16F10
	0x024E69D8 MOV X1, X20
	0x024E69DC MOV X2, X31
	0x024E69E0 MOV X21, X0
	0x024E69E4 BL 0x337DF1C
	0x024E69E8 MOV X0, X21
	0x024E69EC MOV X1, X19
	0x024E69F0 BL 0x1C16DEC
	0x024E69F4 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X9, [X0]
	005 Move X19, X8
	006 Add X8, X31, 8
	007 Move X10, [X9+456]
	008 Move X1, [X9+464]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X8, [X31+24]
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move [X19+16], X8
	013 Move [X19], V0
	014 Move X30, [X31+64]
	015 Move X19, [X31+72]
	016 Move [X31+48], X8
	017 Move [X31+2], V0
	018 Add X31, X31, 80
	019 Return X0

Method: Unity.Properties.InstantiationKind get_InstantiationKind()

Disassembly:
	0x024E69F8 STP X22, X21, [X31 + 0x10]
	0x024E69FC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: TContainer Instantiate()

Disassembly:
	0x024E6A00 ADRP X21, 0x1EF3000
	0x024E6A04 ADRP X22, 0x1C36000
	0x024E6A08 LDRB W8, [X21 + 0xC51]

ISIL:
	001 Move [X8], X31
	002 Move [X8+8], X31
	003 Move [X8+16], X31
	004 Return X0

Method: System.Void .ctor()

Disassembly:
	0x024E6A0C LDR X22, [X22 + 0x2C8]
	0x024E6A10 MOV X20, X1
	0x024E6A14 MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Move [X0+16], W31
	003 Call Object..ctor, X0
	004 Return 

