Type: Unity.Properties.TypeUtility

Method: System.Void .cctor()

Disassembly:
	0x03C923C4 LDR X30, [X31], #0x30
	0x03C923C8 RET
	0x03C923CC STP X30, X21, [X31 - 0x20]!
	0x03C923D0 STP X20, X19, [X31 + 0x10]
	0x03C923D4 ADRP X20, 0x755000
	0x03C923D8 ADRP X21, 0x48A000
	0x03C923DC LDRB W8, [X20 + 0x7D]
	0x03C923E0 LDR X21, [X21 + 0x2C8]
	0x03C923E4 MOV X19, X0
	0x03C923E8 TBNZ X8, 0x0, 0x3C92454
	0x03C923EC ADRP X0, 0x48A000
	0x03C923F0 LDR X0, [X0 + 0x7D0]
	0x03C923F4 BL 0x1C16CF4
	0x03C923F8 ADRP X0, 0x4CE000
	0x03C923FC LDR X0, [X0 + 0xA28]
	0x03C92400 BL 0x1C16CF4
	0x03C92404 ADRP X0, 0x48A000
	0x03C92408 LDR X0, [X0 + 0x7B8]
	0x03C9240C BL 0x1C16CF4
	0x03C92410 ADRP X0, 0x4CE000
	0x03C92414 LDR X0, [X0 + 0xA30]
	0x03C92418 BL 0x1C16CF4
	0x03C9241C ADRP X0, 0x48A000
	0x03C92420 LDR X0, [X0 + 0x2C8]
	0x03C92424 BL 0x1C16CF4
	0x03C92428 ADRP X0, 0x4CE000
	0x03C9242C LDR X0, [X0 + 0xA38]
	0x03C92430 BL 0x1C16CF4
	0x03C92434 ADRP X0, 0x469000
	0x03C92438 LDR X0, [X0 + 0xC60]
	0x03C9243C BL 0x1C16CF4
	0x03C92440 ADRP X0, 0x489000
	0x03C92444 LDR X0, [X0 + 0x6E8]
	0x03C92448 BL 0x1C16CF4
	0x03C9244C MOVZ W8, 0x1
	0x03C92450 STRB W8, [X20 + 0x7D]
	0x03C92454 LDR X0, [X21]
	0x03C92458 LDR W8, [X0 + 0xE0]
	0x03C9245C CBNZ W8, 0x3C92464
	0x03C92460 BL 0x1C16DFC
	0x03C92464 MOV X0, X19
	0x03C92468 BL 0x3C92644
	0x03C9246C CBZ X0, 0x3C924D8
	0x03C92470 ADRP X8, 0x4CE000
	0x03C92474 LDR X8, [X8 + 0xA38]
	0x03C92478 MOV X20, X0
	0x03C9247C ADRP X21, 0x4CE000
	0x03C92480 LDR X0, [X8]
	0x03C92484 LDR X21, [X21 + 0xA28]
	0x03C92488 BL 0x1C16F10
	0x03C9248C MOV X1, X31
	0x03C92490 MOV X19, X0
	0x03C92494 BL 0x33BDD8C
	0x03C92498 LDR X8, [X20]
	0x03C9249C LDR X1, [X21]
	0x03C924A0 LDRH W9, [X8 + 0x12E]
	0x03C924A4 CBZ X9, 0x3C924C8
	0x03C924A8 LDR X10, [X8 + 0xB0]
	0x03C924AC ADD X10, X10, 0x8
	0x03C924B0 LDUR X11, [X10 - 0x8]
	0x03C924B4 CMP X11, X1
	0x03C924B8 B.EQ 0x3C92554
	0x03C924BC SUBS X9, X9, 0x1
	0x03C924C0 ADD X10, X10, 0x10
	0x03C924C4 B.NE 0x3C924B0
	0x03C924C8 MOV X0, X20
	0x03C924CC MOV W2, W31
	0x03C924D0 BL 0x1C5C788
	0x03C924D4 B 0x3C92560
	0x03C924D8 CBZ X19, 0x3C92630
	0x03C924DC LDR X8, [X19]
	0x03C924E0 MOV X0, X19
	0x03C924E4 LDR X9, [X8 + 0x288]
	0x03C924E8 LDR X1, [X8 + 0x290]
	0x03C924EC BLR X9
	0x03C924F0 TBZ X0, 0x0, 0x3C92588
	0x03C924F4 ADRP X8, 0x4CE000
	0x03C924F8 LDR X8, [X8 + 0xA30]
	0x03C924FC LDR X0, [X8]
	0x03C92500 BL 0x1C16F10
	0x03C92504 MOV X1, X31
	0x03C92508 MOV X20, X0
	0x03C9250C BL 0x33BDD8C
	0x03C92510 ADRP X21, 0x489000
	0x03C92514 LDR X21, [X21 + 0x6E8]
	0x03C92518 LDR X0, [X21]
	0x03C9251C LDR W8, [X0 + 0xE0]
	0x03C92520 CBNZ W8, 0x3C9252C
	0x03C92524 BL 0x1C16DFC
	0x03C92528 LDR X0, [X21]
	0x03C9252C LDR X8, [X0 + 0xB8]
	0x03C92530 LDR X0, [X8]
	0x03C92534 CBZ X0, 0x3C92630
	0x03C92538 ADRP X8, 0x48A000
	0x03C9253C LDR X8, [X8 + 0x7D0]
	0x03C92540 MOV X1, X19
	0x03C92544 MOV X2, X20
	0x03C92548 LDR X3, [X8]
	0x03C9254C BL 0x2986C5C
	0x03C92550 B 0x3C92578
	0x03C92554 LDRSW X9, [X10]
	0x03C92558 ADD X8, X8, X9, 0x4, LSL
	0x03C9255C ADD X0, X8, 0x138
	0x03C92560 LDP X8, X2, [X0]
	0x03C92564 MOV X0, X20
	0x03C92568 MOV X1, X19
	0x03C9256C BLR X8
	0x03C92570 CBZ X19, 0x3C92630
	0x03C92574 LDR X20, [X19 + 0x10]
	0x03C92578 MOV X0, X20
	0x03C9257C LDP X20, X19, [X31 + 0x10]
	0x03C92580 LDP X30, X21, [X31], #0x20
	0x03C92584 RET
	0x03C92588 ADRP X20, 0x489000
	0x03C9258C LDR X20, [X20 + 0x6E8]
	0x03C92590 LDR X0, [X20]
	0x03C92594 LDR W8, [X0 + 0xE0]
	0x03C92598 CBNZ W8, 0x3C925A4
	0x03C9259C BL 0x1C16DFC
	0x03C925A0 LDR X0, [X20]
	0x03C925A4 ADRP X9, 0x469000
	0x03C925A8 LDR X8, [X0 + 0xB8]
	0x03C925AC LDR X9, [X9 + 0xC60]
	0x03C925B0 MOVZ W1, 0x1
	0x03C925B4 LDR X20, [X8 + 0x8]
	0x03C925B8 LDR X0, [X9]
	0x03C925BC BL 0x1C16D6C
	0x03C925C0 CBZ X0, 0x3C92630
	0x03C925C4 LDR X8, [X0]
	0x03C925C8 MOV X21, X0
	0x03C925CC MOV X0, X19
	0x03C925D0 LDR X1, [X8 + 0x40]
	0x03C925D4 BL 0x1C16E00
	0x03C925D8 CBZ X0, 0x3C92634
	0x03C925DC LDR W8, [X21 + 0x18]
	0x03C925E0 CBZ W8, 0x3C92640
	0x03C925E4 STR X19, [X21 + 0x20]
	0x03C925E8 CBZ X20, 0x3C92630
	0x03C925EC LDR X8, [X20]
	0x03C925F0 MOV X0, X20
	0x03C925F4 MOV X1, X21
	0x03C925F8 LDR X9, [X8 + 0x3D8]
	0x03C925FC LDR X2, [X8 + 0x3E0]
	0x03C92600 BLR X9
	0x03C92604 CBZ X0, 0x3C92630
	0x03C92608 MOV X1, X31
	0x03C9260C MOV X2, X31
	0x03C92610 MOV X3, X31
	0x03C92614 BL 0x32CE4E0
	0x03C92618 ADRP X8, 0x48A000
	0x03C9261C LDR X8, [X8 + 0x7B8]
	0x03C92620 LDP X20, X19, [X31 + 0x10]
	0x03C92624 LDR X1, [X8]
	0x03C92628 LDP X30, X21, [X31], #0x20
	0x03C9262C B 0x1C16E00
	0x03C92630 BL 0x1C16F20
	0x03C92634 BL 0x1C16F44
	0x03C92638 MOV X1, X31
	0x03C9263C BL 0x1C16DEC
	0x03C92640 BL 0x1C16F28
	0x03C92644 SUB X31, X31, 0x30
	0x03C92648 STP X30, X21, [X31 + 0x10]
	0x03C9264C STP X20, X19, [X31 + 0x20]
	0x03C92650 ADRP X20, 0x755000
	0x03C92654 ADRP X21, 0x48A000
	0x03C92658 LDRB W8, [X20 + 0xD5]
	0x03C9265C LDR X21, [X21 + 0x2C8]
	0x03C92660 MOV X19, X0
	0x03C92664 TBNZ X8, 0x0, 0x3C926B8
	0x03C92668 ADRP X0, 0x4CE000
	0x03C9266C LDR X0, [X0 + 0xA40]
	0x03C92670 BL 0x1C16CF4
	0x03C92674 ADRP X0, 0x4CE000
	0x03C92678 LDR X0, [X0 + 0xA48]
	0x03C9267C BL 0x1C16CF4
	0x03C92680 ADRP X0, 0x4CE000
	0x03C92684 LDR X0, [X0 + 0xA50]
	0x03C92688 BL 0x1C16CF4
	0x03C9268C ADRP X0, 0x48A000
	0x03C92690 LDR X0, [X0 + 0x2C8]
	0x03C92694 BL 0x1C16CF4
	0x03C92698 ADRP X0, 0x46B000
	0x03C9269C LDR X0, [X0 + 0x968]
	0x03C926A0 BL 0x1C16CF4
	0x03C926A4 ADRP X0, 0x461000
	0x03C926A8 LDR X0, [X0 + 0x6C0]
	0x03C926AC BL 0x1C16CF4
	0x03C926B0 MOVZ W8, 0x1
	0x03C926B4 STRB W8, [X20 + 0xD5]
	0x03C926B8 LDR X0, [X21]
	0x03C926BC STR X31, [X31 + 0x8]
	0x03C926C0 LDR W8, [X0 + 0xE0]
	0x03C926C4 CBNZ W8, 0x3C926D0
	0x03C926C8 BL 0x1C16DFC
	0x03C926CC LDR X0, [X21]
	0x03C926D0 LDR X8, [X0 + 0xB8]
	0x03C926D4 LDR X0, [X8]
	0x03C926D8 CBZ X0, 0x3C928C4
	0x03C926DC ADRP X8, 0x4CE000
	0x03C926E0 LDR X8, [X8 + 0xA48]
	0x03C926E4 ADD X2, X31, 0x8
	0x03C926E8 MOV X1, X19
	0x03C926EC LDR X3, [X8]
	0x03C926F0 BL 0x2985A04
	0x03C926F4 TBZ X0, 0x0, 0x3C92700
	0x03C926F8 LDR X0, [X31 + 0x8]
	0x03C926FC B 0x3C92898
	0x03C92700 MOV X0, X19
	0x03C92704 BL 0x3C91284
	0x03C92708 TBZ X0, 0x0, 0x3C92894
	0x03C9270C CBZ X19, 0x3C928C4
	0x03C92710 MOV X0, X19
	0x03C92714 MOV X1, X31
	0x03C92718 BL 0x3396BF8
	0x03C9271C TBZ X0, 0x0, 0x3C9273C
	0x03C92720 LDR X8, [X19]
	0x03C92724 MOV X0, X19
	0x03C92728 LDR X9, [X8 + 0x438]
	0x03C9272C LDR X1, [X8 + 0x440]
	0x03C92730 BLR X9
	0x03C92734 CMP W0, 0x1
	0x03C92738 B.NE 0x3C92894
	0x03C9273C MOV X0, X19
	0x03C92740 MOV X1, X31
	0x03C92744 BL 0x33962E8
	0x03C92748 MOV W8, W0
	0x03C9274C MOV X0, X31
	0x03C92750 TBNZ X8, 0x0, 0x3C92898
	0x03C92754 MOV X0, X19
	0x03C92758 MOV X1, X31
	0x03C9275C BL 0x339703C
	0x03C92760 MOV W8, W0
	0x03C92764 MOV X0, X31
	0x03C92768 TBNZ X8, 0x0, 0x3C92898
	0x03C9276C ADRP X8, 0x461000
	0x03C92770 LDR X8, [X8 + 0x6C0]
	0x03C92774 LDR X0, [X8]
	0x03C92778 ADRP X8, 0x46B000
	0x03C9277C LDR X8, [X8 + 0x968]
	0x03C92780 LDR W9, [X0 + 0xE0]
	0x03C92784 LDR X20, [X8]
	0x03C92788 CBNZ W9, 0x3C92790
	0x03C9278C BL 0x1C16DFC
	0x03C92790 MOV X0, X20
	0x03C92794 MOV X1, X31
	0x03C92798 BL 0x338C698
	0x03C9279C MOV X1, X0
	0x03C927A0 MOV X0, X19
	0x03C927A4 MOV X2, X31
	0x03C927A8 BL 0x3395194
	0x03C927AC MOV W8, W0
	0x03C927B0 MOV X0, X31
	0x03C927B4 TBNZ X8, 0x0, 0x3C92898
	0x03C927B8 LDR X0, [X21]
	0x03C927BC LDR W8, [X0 + 0xE0]
	0x03C927C0 CBNZ W8, 0x3C927CC
	0x03C927C4 BL 0x1C16DFC
	0x03C927C8 LDR X0, [X21]
	0x03C927CC LDR X8, [X0 + 0xB8]
	0x03C927D0 LDR X9, [X8 + 0x18]
	0x03C927D4 CBZ X9, 0x3C92894
	0x03C927D8 LDR W9, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, 0x756000
	015 Move X24, 0x4CF000
	016 Move X19, 0x4CF000
	017 Move X22, 0x48A000
	018 Move X23, 0x4CF000
	019 Move X24, [X24+2400]
	020 Move X19, [X19+2408]
	021 Move W8, [X25+121]
	022 Move X22, [X22+1768]
	023 Move X23, [X23+2416]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {87}
	028 Move X0, 0x4CF000
	029 Move X0, [X0+2424]
	030 Call 0x1C17CF4
	031 Move X0, 0x4CF000
	032 Move X0, [X0+2408]
	033 Call 0x1C17CF4
	034 Move X0, 0x4CF000
	035 Move X0, [X0+2432]
	036 Call 0x1C17CF4
	037 Move X0, 0x4CF000
	038 Move X0, [X0+2440]
	039 Call 0x1C17CF4
	040 Move X0, 0x4CF000
	041 Move X0, [X0+2400]
	042 Call 0x1C17CF4
	043 Move X0, 0x4CF000
	044 Move X0, [X0+2448]
	045 Call 0x1C17CF4
	046 Move X0, 0x466000
	047 Move X0, [X0+4040]
	048 Call 0x1C17CF4
	049 Move X0, 0x4CF000
	050 Move X0, [X0+2456]
	051 Call 0x1C17CF4
	052 Move X0, 0x4CF000
	053 Move X0, [X0+2464]
	054 Call 0x1C17CF4
	055 Move X0, 0x468000
	056 Move X0, [X0+3264]
	057 Call 0x1C17CF4
	058 Move X0, 0x4CF000
	059 Move X0, [X0+2472]
	060 Call 0x1C17CF4
	061 Move X0, 0x4CF000
	062 Move X0, [X0+2480]
	063 Call 0x1C17CF4
	064 Move X0, 0x48A000
	065 Move X0, [X0+1768]
	066 Call 0x1C17CF4
	067 Move X0, 0x462000
	068 Move X0, [X0+1728]
	069 Call 0x1C17CF4
	070 Move X0, 0x4CF000
	071 Move X0, [X0+2488]
	072 Call 0x1C17CF4
	073 Move X0, 0x4CF000
	074 Move X0, [X0+2496]
	075 Call 0x1C17CF4
	076 Move X0, 0x4CF000
	077 Move X0, [X0+2504]
	078 Call 0x1C17CF4
	079 Move X0, 0x4CF000
	080 Move X0, [X0+2416]
	081 Call 0x1C17CF4
	082 Move X0, 0x4CF000
	083 Move X0, [X0+2512]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X25+121], W8
	087 Move X28, 0x4CF000
	088 Move X20, 0x4CF000
	089 Move X27, 0x4CF000
	090 Move X21, 0x4CF000
	091 Move X26, 0x4CF000
	092 Move X25, 0x4CF000
	093 Move X29, 0x466000
	094 Move X28, [X28+2448]
	095 Move X20, [X20+2488]
	096 Move X27, [X27+2424]
	097 Move X21, [X21+2496]
	098 Move X26, [X26+2464]
	099 Move X25, [X25+2456]
	100 Move X29, [X29+4040]
	101 Move X0, [X24]
	102 Move X24, 0x4CF000
	103 Move X24, [X24+2472]
	104 Call 0x1C17F10
	105 Move X1, [X19]
	106 Move X19, X0
	107 Call ConcurrentDictionary`2<Object, Object>..ctor, X0
	108 Move X8, [X22]
	109 Move X8, [X8+184]
	110 Move [X8], X19
	111 Move X8, 0x468000
	112 Move X8, [X8+3264]
	113 Move X0, [X8]
	114 Call 0x1C17F10
	115 Move X1, X31
	116 Move X19, X0
	117 Call Object..ctor, X0
	118 Move X8, [X22]
	119 Move X8, [X8+184]
	120 Move [X8+32], X19
	121 Move X8, 0x4CF000
	122 Move X8, [X8+2440]
	123 Move X0, [X8]
	124 Call 0x1C17F10
	125 Move X8, 0x4CF000
	126 Move X8, [X8+2432]
	127 Move X19, X0
	128 Move X1, [X8]
	129 Call ConcurrentDictionary`2<Object, Object>..ctor, X0
	130 Move X8, [X22]
	131 Move X8, [X8+184]
	132 Move [X8+16], X19
	133 Move X0, [X23]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {139}
	137 Call 0x1C17DFC
	138 Move X0, [X23]
	139 Move X8, [X0+184]
	140 Move X0, [X28]
	141 Move X19, [X8]
	142 Call 0x1C17F10
	143 Move X2, [X20]
	144 Move X1, X19
	145 Move X3, X31
	146 Move X20, X0
	147 Call Func`1<Object>..ctor, X0, X1, X2
	148 Move X8, [X23]
	149 Move X0, [X27]
	150 Move X8, [X8+184]
	151 Move X19, [X8]
	152 Call 0x1C17F10
	153 Move X2, [X21]
	154 Move X1, X19
	155 Move X3, X31
	156 Move X21, X0
	157 Call Action`1<Object>..ctor, X0, X1, X2
	158 Move X0, [X26]
	159 Call 0x1C17F10
	160 Move X8, [X25]
	161 Move W5, 1
	162 Move W6, 10
	163 Move W7, 0x2710
	164 Move X1, X20
	165 Move X2, X31
	166 Move X3, X21
	167 Move X4, X31
	168 Move X19, X0
	169 Move [X31], X8
	170 Call 0x249418C, X0, X1, X2, X3, X4, X5, X6, X7
	171 Move X8, [X22]
	172 Move X8, [X8+184]
	173 Move [X8+24], X19
	174 Move X8, [X23]
	175 Move X0, [X29]
	176 Move X8, [X8+184]
	177 Move X19, [X8]
	178 Call 0x1C17F10
	179 Move X8, 0x4CF000
	180 Move X8, [X8+2504]
	181 Move X1, X19
	182 Move X3, X31
	183 Move X20, X0
	184 Move X2, [X8]
	185 Call Func`1<Object>..ctor, X0, X1, X2
	186 Move X1, [X24]
	187 Move X0, X20
	188 Call 0x22A1A9C, X0
	189 Move X8, 0x462000
	190 Move X8, [X8+1728]
	191 Move X9, 0x4CF000
	192 Move X0, [X8]
	193 Move W8, [X0+224]
	194 Move X9, [X9+2480]
	195 Move X19, [X9]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X0, X19
	200 Move X1, X31
	201 Call Type.GetTypeFromHandle, X0
	202 Compare X0, 0
	203 JumpIfEqual {274}
	204 Move X8, [X0]
	205 Move W1, 40
	206 Move X9, [X8+1880]
	207 Move X2, [X8+1888]
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {274}
	211 Move W8, [X0+24]
	212 Move X19, X0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X23, 0x4CF000
	215 Move X23, [X23+2512]
	216 Move W21, W31
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Add X8, X19, W21
	219 Move X20, [X8+32]
	220 Compare X20, 0
	221 JumpIfEqual {274}
	222 Move X8, [X20]
	223 Move X0, X20
	224 Move X9, [X8+424]
	225 Move X1, [X8+432]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X1, [X23]
	228 Move X2, X31
	229 Call String.op_Inequality, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {243}
	234 Move X8, [X20]
	235 Move X0, X20
	236 Move X9, [X8+728]
	237 Move X1, [X8+736]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {249}
	243 Move W8, [X19+24]
	244 Add W21, W21, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X8, [X22]
	247 Move X8, [X8+184]
	248 Move X20, [X8+8]
	249 Move X8, [X22]
	250 Move X8, [X8+184]
	251 Move [X8+8], X20
	252 Move X0, X31
	253 Move X1, X20
	254 Move X2, X31
	255 Call MethodInfo.op_Equality, X0, X1
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {276}
	260 Move X20, [X31+96]
	261 Move X19, [X31+104]
	262 Move X22, [X31+80]
	263 Move X21, [X31+88]
	264 Move X24, [X31+64]
	265 Move X23, [X31+72]
	266 Move X26, [X31+48]
	267 Move X25, [X31+56]
	268 Move X28, [X31+32]
	269 Move X27, [X31+40]
	270 Move X29, [X31+16]
	271 Move X30, [X31+24]
	272 Add X31, X31, 112
	273 Return 
	274 Call 0x1C17F20
	275 Call 0x1C17F28
	276 Move X0, 0x4CF000
	277 Move X0, [X0+2520]
	278 Call 0x1C17D08
	279 Call 0x1C17F10
	280 Move X1, X31
	281 Move X19, X0
	282 Call InvalidProgramException..ctor, X0
	283 Move X0, 0x4CF000
	284 Move X0, [X0+2528]
	285 Call 0x1C17D08
	286 Move X1, X0
	287 Move X0, X19
	288 Call 0x1C17DEC

Method: System.String GetTypeDisplayName(System.Type type)

Disassembly:
	0x03C927DC CBNZ W9, 0x3C927EC
	0x03C927E0 BL 0x1C16DFC
	0x03C927E4 LDR X8, [X21]
	0x03C927E8 LDR X8, [X8 + 0xB8]
	0x03C927EC LDR X0, [X8 + 0x18]
	0x03C927F0 CBZ X0, 0x3C928C4
	0x03C927F4 MOV X1, X19
	0x03C927F8 BL 0x3C95698
	0x03C927FC STR X0, [X31 + 0x8]
	0x03C92800 CBZ X0, 0x3C9285C
	0x03C92804 ADRP X20, 0x4CE000
	0x03C92808 LDR X20, [X20 + 0xA50]
	0x03C9280C LDR X1, [X20]
	0x03C92810 BL 0x1C16E00
	0x03C92814 CBZ X0, 0x3C926F8
	0x03C92818 LDR X8, [X0]
	0x03C9281C LDR X1, [X20]
	0x03C92820 MOV X19, X0
	0x03C92824 LDRH W9, [X8 + 0x12E]
	0x03C92828 CBZ X9, 0x3C9284C
	0x03C9282C LDR X10, [X8 + 0xB0]
	0x03C92830 ADD X10, X10, 0x8
	0x03C92834 LDUR X11, [X10 - 0x8]
	0x03C92838 CMP X11, X1
	0x03C9283C B.EQ 0x3C928A8
	0x03C92840 SUBS X9, X9, 0x1
	0x03C92844 ADD X10, X10, 0x10
	0x03C92848 B.NE 0x3C92834
	0x03C9284C MOV X0, X19
	0x03C92850 MOV W2, W31
	0x03C92854 BL 0x1C5C788
	0x03C92858 B 0x3C928B4
	0x03C9285C LDR X0, [X21]
	0x03C92860 LDR W8, [X0 + 0xE0]
	0x03C92864 CBNZ W8, 0x3C92870
	0x03C92868 BL 0x1C16DFC
	0x03C9286C LDR X0, [X21]
	0x03C92870 LDR X8, [X0 + 0xB8]
	0x03C92874 LDR X0, [X8]
	0x03C92878 CBZ X0, 0x3C928C4
	0x03C9287C ADRP X8, 0x4CE000
	0x03C92880 LDR X8, [X8 + 0xA40]
	0x03C92884 MOV X1, X19
	0x03C92888 MOV X2, X31
	0x03C9288C LDR X3, [X8]
	0x03C92890 BL 0x298539C
	0x03C92894 MOV X0, X31
	0x03C92898 LDP X20, X19, [X31 + 0x20]
	0x03C9289C LDP X30, X21, [X31 + 0x10]
	0x03C928A0 ADD X31, X31, 0x30
	0x03C928A4 RET
	0x03C928A8 LDRSW X9, [X10]
	0x03C928AC ADD X8, X8, X9, 0x4, LSL
	0x03C928B0 ADD X0, X8, 0x138
	0x03C928B4 LDP X8, X1, [X0]
	0x03C928B8 MOV X0, X19
	0x03C928BC BLR X8
	0x03C928C0 B 0x3C926F8
	0x03C928C4 BL 0x1C16F20
	0x03C928C8 MOV X1, X31
	0x03C928CC B 0x33BDD8C
	0x03C928D0 MOV X1, X31
	0x03C928D4 B 0x33BDD8C
	0x03C928D8 SUB X31, X31, 0x30
	0x03C928DC STP X30, X21, [X31 + 0x10]
	0x03C928E0 STP X20, X19, [X31 + 0x20]
	0x03C928E4 ADRP X21, 0x755000
	0x03C928E8 ADRP X20, 0x489000
	0x03C928EC LDRB W8, [X21 + 0x7E]
	0x03C928F0 LDR X20, [X20 + 0x6E8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x756000
	007 Move X21, 0x48A000
	008 Move W8, [X20+122]
	009 Move X21, [X21+1768]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x4CF000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move X0, 0x4CF000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move X0, 0x48A000
	022 Move X0, [X0+1768]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+122], W8
	026 Move X0, [X21]
	027 Move [X31+8], X31
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X0+184]
	034 Move X0, [X8+16]
	035 Compare X0, 0
	036 JumpIfEqual {85}
	037 Move X8, 0x4CF000
	038 Move X8, [X8+2536]
	039 Add X2, X31, 8
	040 Move X1, X19
	041 Move X3, [X8]
	042 Call ConcurrentDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {78}
	047 Move [X31+4], W31
	048 Compare X19, 0
	049 JumpIfEqual {85}
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move X9, [X8+1128]
	053 Move X1, [X8+1136]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X21]
	056 Move X20, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Add X2, X31, 4
	063 Move X0, X19
	064 Move X1, X20
	065 Call TypeUtility.GetTypeDisplayName, X0, X1, X2
	066 Move X8, [X21]
	067 Move [X31+8], X0
	068 Move X2, X0
	069 Move X8, [X8+184]
	070 Move X0, [X8+16]
	071 Compare X0, 0
	072 JumpIfEqual {85}
	073 Move X8, 0x4CF000
	074 Move X8, [X8+2544]
	075 Move X1, X19
	076 Move X3, [X8]
	077 Call ConcurrentDictionary`2<Object, Object>.set_Item, X0, X1, X2
	078 Move X0, [X31+8]
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X30, [X31+16]
	082 Move X21, [X31+24]
	083 Add X31, X31, 48
	084 Return X0
	085 Call 0x1C17F20

Method: System.String GetTypeDisplayName(System.Type type, System.Collections.Generic.IReadOnlyList`1<System.Type> args, ref System.Int32 argIndex)

Disassembly:
	0x03C928F4 MOV X19, X0
	0x03C928F8 TBNZ X8, 0x0, 0x3C9291C
	0x03C928FC ADRP X0, 0x4CE000
	0x03C92900 LDR X0, [X0 + 0xA58]
	0x03C92904 BL 0x1C16CF4
	0x03C92908 ADRP X0, 0x489000
	0x03C9290C LDR X0, [X0 + 0x6E8]
	0x03C92910 BL 0x1C16CF4
	0x03C92914 MOVZ W8, 0x1
	0x03C92918 STRB W8, [X21 + 0x7E]
	0x03C9291C LDR X0, [X20]
	0x03C92920 STR X31, [X31 + 0x8]
	0x03C92924 LDR W8, [X0 + 0xE0]
	0x03C92928 CBNZ W8, 0x3C92934
	0x03C9292C BL 0x1C16DFC
	0x03C92930 LDR X0, [X20]
	0x03C92934 LDR X8, [X0 + 0xB8]
	0x03C92938 LDR X0, [X8]
	0x03C9293C CBZ X0, 0x3C9298C
	0x03C92940 ADRP X8, 0x4CE000
	0x03C92944 LDR X8, [X8 + 0xA58]
	0x03C92948 ADD X2, X31, 0x8
	0x03C9294C MOV X1, X19
	0x03C92950 LDR X3, [X8]
	0x03C92954 BL 0x2985A04
	0x03C92958 TBZ X0, 0x0, 0x3C92964
	0x03C9295C LDR X0, [X31 + 0x8]
	0x03C92960 B 0x3C9297C
	0x03C92964 LDR X0, [X20]
	0x03C92968 LDR W8, [X0 + 0xE0]
	0x03C9296C CBNZ W8, 0x3C92974
	0x03C92970 BL 0x1C16DFC
	0x03C92974 MOV X0, X19
	0x03C92978 BL 0x3C923CC
	0x03C9297C LDP X20, X19, [X31 + 0x20]
	0x03C92980 LDP X30, X21, [X31 + 0x10]
	0x03C92984 ADD X31, X31, 0x30
	0x03C92988 RET
	0x03C9298C BL 0x1C16F20
	0x03C92990 STP X30, X21, [X31 - 0x20]!
	0x03C92994 STP X20, X19, [X31 + 0x10]
	0x03C92998 ADRP X20, 0x755000
	0x03C9299C ADRP X21, 0x489000
	0x03C929A0 LDRB W8, [X20 + 0x7F]
	0x03C929A4 LDR X21, [X21 + 0x6E8]
	0x03C929A8 MOV X19, X0
	0x03C929AC TBNZ X8, 0x0, 0x3C929D0
	0x03C929B0 ADRP X0, 0x48A000
	0x03C929B4 LDR X0, [X0 + 0x7B8]
	0x03C929B8 BL 0x1C16CF4
	0x03C929BC ADRP X0, 0x489000
	0x03C929C0 LDR X0, [X0 + 0x6E8]
	0x03C929C4 BL 0x1C16CF4
	0x03C929C8 MOVZ W8, 0x1
	0x03C929CC STRB W8, [X20 + 0x7F]
	0x03C929D0 LDR X0, [X21]
	0x03C929D4 LDR W8, [X0 + 0xE0]
	0x03C929D8 CBNZ W8, 0x3C929E0
	0x03C929DC BL 0x1C16DFC
	0x03C929E0 MOV X0, X19
	0x03C929E4 BL 0x3C928D8
	0x03C929E8 CBZ X0, 0x3C92A58
	0x03C929EC ADRP X10, 0x48A000
	0x03C929F0 LDR X8, [X0]
	0x03C929F4 LDR X10, [X10 + 0x7B8]
	0x03C929F8 MOV X19, X0
	0x03C929FC LDRH W9, [X8 + 0x12E]
	0x03C92A00 LDR X1, [X10]
	0x03C92A04 CBZ X9, 0x3C92A28
	0x03C92A08 LDR X10, [X8 + 0xB0]
	0x03C92A0C ADD X10, X10, 0x8
	0x03C92A10 LDUR X11, [X10 - 0x8]
	0x03C92A14 CMP X11, X1
	0x03C92A18 B.EQ 0x3C92A38
	0x03C92A1C SUBS X9, X9, 0x1
	0x03C92A20 ADD X10, X10, 0x10
	0x03C92A24 B.NE 0x3C92A10
	0x03C92A28 MOV X0, X19
	0x03C92A2C MOV W2, W31
	0x03C92A30 BL 0x1C5C788
	0x03C92A34 B 0x3C92A44
	0x03C92A38 LDRSW X9, [X10]
	0x03C92A3C ADD X8, X8, X9, 0x4, LSL
	0x03C92A40 ADD X0, X8, 0x138
	0x03C92A44 LDP X2, X1, [X0]
	0x03C92A48 MOV X0, X19
	0x03C92A4C LDP X20, X19, [X31 + 0x10]
	0x03C92A50 LDP X30, X21, [X31], #0x20
	0x03C92A54 BR X2
	0x03C92A58 BL 0x1C16F20
	0x03C92A5C STP X30, X21, [X31 - 0x20]!
	0x03C92A60 STP X20, X19, [X31 + 0x10]
	0x03C92A64 CBZ X0, 0x3C92A90
	0x03C92A68 LDR X8, [X0]
	0x03C92A6C MOV X21, X1
	0x03C92A70 MOV X20, X0
	0x03C92A74 LDR X9, [X8 + 0x2A8]
	0x03C92A78 LDR X2, [X8 + 0x2B0]
	0x03C92A7C BLR X9
	0x03C92A80 TBZ X0, 0x0, 0x3C92A94
	0x03C92A84 LDP X20, X19, [X31 + 0x10]
	0x03C92A88 LDP X30, X21, [X31], #0x20
	0x03C92A8C RET
	0x03C92A90 BL 0x1C16F20
	0x03C92A94 ADRP X0, 0x461000
	0x03C92A98 LDR X0, [X0 + 0xAC8]
	0x03C92A9C BL 0x1C16D08
	0x03C92AA0 MOVZ W1, 0x5
	0x03C92AA4 BL 0x1C16D6C
	0x03C92AA8 MOV X19, X0
	0x03C92AAC BL 0x19903C0
	0x03C92AB0 ADRP X0, 0x4CE000
	0x03C92AB4 LDR X0, [X0 + 0xA60]
	0x03C92AB8 BL 0x1C16D08
	0x03C92ABC MOV X2, X0
	0x03C92AC0 MOV X0, X19
	0x03C92AC4 MOV X1, X31
	0x03C92AC8 BL 0x1993444
	0x03C92ACC MOV X0, X21
	0x03C92AD0 BL 0x19903C0
	0x03C92AD4 LDR X8, [X21]
	0x03C92AD8 MOV X0, X21
	0x03C92ADC LDP X9, X1, [X8 + 0x1A8]
	0x03C92AE0 BLR X9
	0x03C92AE4 MOV X21, X0
	0x03C92AE8 MOV X0, X19
	0x03C92AEC BL 0x19903C0
	0x03C92AF0 MOVZ W1, 0x1
	0x03C92AF4 MOV X0, X19
	0x03C92AF8 MOV X2, X21
	0x03C92AFC BL 0x1993444
	0x03C92B00 MOV X0, X19
	0x03C92B04 BL 0x19903C0
	0x03C92B08 ADRP X0, 0x4CE000
	0x03C92B0C LDR X0, [X0 + 0xA68]
	0x03C92B10 BL 0x1C16D08
	0x03C92B14 MOV X2, X0
	0x03C92B18 MOVZ W1, 0x2
	0x03C92B1C MOV X0, X19
	0x03C92B20 BL 0x1993444
	0x03C92B24 MOV X0, X20
	0x03C92B28 BL 0x19903C0
	0x03C92B2C LDR X8, [X20]
	0x03C92B30 MOV X0, X20
	0x03C92B34 LDP X9, X1, [X8 + 0x1A8]
	0x03C92B38 BLR X9
	0x03C92B3C MOV X20, X0
	0x03C92B40 MOV X0, X19
	0x03C92B44 BL 0x19903C0
	0x03C92B48 MOVZ W1, 0x3
	0x03C92B4C MOV X0, X19
	0x03C92B50 MOV X2, X20
	0x03C92B54 BL 0x1993444
	0x03C92B58 MOV X0, X19
	0x03C92B5C BL 0x19903C0
	0x03C92B60 ADRP X0, 0x4CE000
	0x03C92B64 LDR X0, [X0 + 0xA70]
	0x03C92B68 BL 0x1C16D08
	0x03C92B6C MOV X2, X0
	0x03C92B70 MOVZ W1, 0x4
	0x03C92B74 MOV X0, X19
	0x03C92B78 BL 0x1993444
	0x03C92B7C MOV X0, X19
	0x03C92B80 MOV X1, X31
	0x03C92B84 BL 0x32278CC
	0x03C92B88 MOV X19, X0
	0x03C92B8C ADRP X0, 0x469000
	0x03C92B90 LDR X0, [X0 + 0x578]
	0x03C92B94 BL 0x1C16D08
	0x03C92B98 BL 0x1C16F10
	0x03C92B9C MOV X1, X19
	0x03C92BA0 MOV X2, X31
	0x03C92BA4 MOV X20, X0
	0x03C92BA8 BL 0x3314A68
	0x03C92BAC ADRP X0, 0x4CE000
	0x03C92BB0 LDR X0, [X0 + 0xA78]
	0x03C92BB4 BL 0x1C16D08
	0x03C92BB8 MOV X1, X0
	0x03C92BBC MOV X0, X20
	0x03C92BC0 BL 0x1C16DEC
	0x03C92BC4 STP X30, X21, [X31 - 0x20]!
	0x03C92BC8 STP X20, X19, [X31 + 0x10]
	0x03C92BCC ADRP X21, 0x755000
	0x03C92BD0 LDRB W8, [X21 + 0x80]
	0x03C92BD4 MOV X19, X1
	0x03C92BD8 MOV X20, X0
	0x03C92BDC TBNZ X8, 0x0, 0x3C92BF4
	0x03C92BE0 ADRP X0, 0x48A000
	0x03C92BE4 LDR X0, [X0 + 0x7B8]
	0x03C92BE8 BL 0x1C16CF4
	0x03C92BEC MOVZ W8, 0x1
	0x03C92BF0 STRB W8, [X21 + 0x80]
	0x03C92BF4 CBZ X20, 0x3C92C68
	0x03C92BF8 ADRP X10, 0x48A000
	0x03C92BFC LDR X8, [X20]
	0x03C92C00 LDR X10, [X10 + 0x7B8]
	0x03C92C04 LDRH W9, [X8 + 0x12E]
	0x03C92C08 LDR X1, [X10]
	0x03C92C0C CBZ X9, 0x3C92C30
	0x03C92C10 LDR X10, [X8 + 0xB0]
	0x03C92C14 ADD X10, X10, 0x8
	0x03C92C18 LDUR X11, [X10 - 0x8]
	0x03C92C1C CMP X11, X1
	0x03C92C20 B.EQ 0x3C92C40
	0x03C92C24 SUBS X9, X9, 0x1
	0x03C92C28 ADD X10, X10, 0x10
	0x03C92C2C B.NE 0x3C92C18
	0x03C92C30 MOV X0, X20
	0x03C92C34 MOV W2, W31
	0x03C92C38 BL 0x1C5C788
	0x03C92C3C B 0x3C92C4C
	0x03C92C40 LDRSW X9, [X10]
	0x03C92C44 ADD X8, X8, X9, 0x4, LSL
	0x03C92C48 ADD X0, X8, 0x138
	0x03C92C4C LDP X8, X1, [X0]
	0x03C92C50 MOV X0, X20
	0x03C92C54 BLR X8
	0x03C92C58 TBZ X0, 0x0, 0x3C92C6C
	0x03C92C5C LDP X20, X19, [X31 + 0x10]
	0x03C92C60 LDP X30, X21, [X31], #0x20
	0x03C92C64 RET
	0x03C92C68 BL 0x1C16F20
	0x03C92C6C MOV X0, X19
	0x03C92C70 BL 0x19903C0
	0x03C92C74 LDR X8, [X19]
	0x03C92C78 MOV X0, X19
	0x03C92C7C LDP X9, X1, [X8 + 0x1A8]
	0x03C92C80 BLR X9
	0x03C92C84 MOV X19, X0
	0x03C92C88 ADRP X0, 0x48A000
	0x03C92C8C LDR X0, [X0 + 0x7C0]
	0x03C92C90 BL 0x1C16D08
	0x03C92C94 MOV X20, X0
	0x03C92C98 ADRP X0, 0x48A000
	0x03C92C9C LDR X0, [X0 + 0x7C8]
	0x03C92CA0 BL 0x1C16D08
	0x03C92CA4 MOV X2, X0
	0x03C92CA8 MOV X0, X20
	0x03C92CAC MOV X1, X19
	0x03C92CB0 MOV X3, X31
	0x03C92CB4 BL 0x32274B8
	0x03C92CB8 MOV X19, X0
	0x03C92CBC ADRP X0, 0x461000
	0x03C92CC0 LDR X0, [X0 + 0x5B0]
	0x03C92CC4 BL 0x1C16D08
	0x03C92CC8 BL 0x1C16F10
	0x03C92CCC MOV X1, X19
	0x03C92CD0 MOV X2, X31
	0x03C92CD4 MOV X20, X0
	0x03C92CD8 BL 0x337DF1C
	0x03C92CDC ADRP X0, 0x4CE000
	0x03C92CE0 LDR X0, [X0 + 0xA80]
	0x03C92CE4 BL 0x1C16D08
	0x03C92CE8 MOV X1, X0
	0x03C92CEC MOV X0, X20
	0x03C92CF0 BL 0x1C16DEC
	0x03C92CF4 MOV W0, W31
	0x03C92CF8 RET
	0x03C92CFC STP X30, X19, [X31 - 0x10]!
	0x03C92D00 ADRP X0, 0x461000
	0x03C92D04 LDR X0, [X0 + 0x5B0]
	0x03C92D08 BL 0x1C16D08
	0x03C92D0C BL 0x1C16F10
	0x03C92D10 MOV X19, X0
	0x03C92D14 ADRP X0, 0x4CE000
	0x03C92D18 LDR X0, [X0 + 0xA88]
	0x03C92D1C BL 0x1C16D08
	0x03C92D20 MOV X1, X0
	0x03C92D24 MOV X0, X19
	0x03C92D28 MOV X2, X31
	0x03C92D2C BL 0x337DF1C
	0x03C92D30 ADRP X0, 0x4CE000
	0x03C92D34 LDR X0, [X0 + 0xA90]
	0x03C92D38 BL 0x1C16D08
	0x03C92D3C MOV X1, X0
	0x03C92D40 MOV X0, X19
	0x03C92D44 BL 0x1C16DEC
	0x03C92D48 STR X30, [X31 - 0x20]!
	0x03C92D4C STP X20, X19, [X31 + 0x10]
	0x03C92D50 ADRP X19, 0x755000
	0x03C92D54 ADRP X20, 0x4CE000
	0x03C92D58 LDRB W8, [X19 + 0x81]
	0x03C92D5C LDR X20, [X20 + 0x970]
	0x03C92D60 TBNZ X8, 0x0, 0x3C92D78
	0x03C92D64 ADRP X0, 0x4CE000
	0x03C92D68 LDR X0, [X0 + 0x970]
	0x03C92D6C BL 0x1C16CF4
	0x03C92D70 MOVZ W8, 0x1
	0x03C92D74 STRB W8, [X19 + 0x81]
	0x03C92D78 LDR X0, [X20]
	0x03C92D7C BL 0x1C16F10
	0x03C92D80 MOV X1, X31
	0x03C92D84 MOV X19, X0
	0x03C92D88 BL 0x33BDD8C
	0x03C92D8C LDR X8, [X20]
	0x03C92D90 LDR X8, [X8 + 0xB8]
	0x03C92D94 STR X19, [X8]
	0x03C92D98 LDP X20, X19, [X31 + 0x10]
	0x03C92D9C LDR X30, [X31], #0x20
	0x03C92DA0 RET
	0x03C92DA4 MOV X1, X31
	0x03C92DA8 B 0x33BDD8C
	0x03C92DAC STR X30, [X31 - 0x20]!
	0x03C92DB0 STP X20, X19, [X31 + 0x10]
	0x03C92DB4 ADRP X19, 0x755000
	0x03C92DB8 ADRP X20, 0x461000
	0x03C92DBC LDRB W8, [X19 + 0x82]
	0x03C92DC0 LDR X20, [X20 + 0x8F0]
	0x03C92DC4 TBNZ X8, 0x0, 0x3C92DDC
	0x03C92DC8 ADRP X0, 0x461000
	0x03C92DCC LDR X0, [X0 + 0x8F0]
	0x03C92DD0 BL 0x1C16CF4
	0x03C92DD4 MOVZ W8, 0x1
	0x03C92DD8 STRB W8, [X19 + 0x82]
	0x03C92DDC LDR X0, [X20]
	0x03C92DE0 BL 0x1C16F10
	0x03C92DE4 MOV X1, X31
	0x03C92DE8 MOV X19, X0
	0x03C92DEC BL 0x3231AC4
	0x03C92DF0 MOV X0, X19
	0x03C92DF4 LDP X20, X19, [X31 + 0x10]
	0x03C92DF8 LDR X30, [X31], #0x20
	0x03C92DFC RET
	0x03C92E00 CBZ X1, 0x3C92E10
	0x03C92E04 MOV X0, X1
	0x03C92E08 MOV X1, X31
	0x03C92E0C B 0x3232AC0
	0x03C92E10 STR X30, [X31 - 0x10]!
	0x03C92E14 BL 0x1C16F20
	0x03C92E18 STR X30, [X31 - 0x20]!
	0x03C92E1C STP X20, X19, [X31 + 0x10]
	0x03C92E20 ADRP X19, 0x755000
	0x03C92E24 ADRP X20, 0x463000
	0x03C92E28 LDRB W8, [X19 + 0x83]
	0x03C92E2C LDR X20, [X20 + 0x278]
	0x03C92E30 TBNZ X8, 0x0, 0x3C92E48
	0x03C92E34 ADRP X0, 0x463000
	0x03C92E38 LDR X0, [X0 + 0x278]
	0x03C92E3C BL 0x1C16CF4
	0x03C92E40 MOVZ W8, 0x1
	0x03C92E44 STRB W8, [X19 + 0x83]
	0x03C92E48 LDR X8, [X20]
	0x03C92E4C LDP X20, X19, [X31 + 0x10]
	0x03C92E50 LDR X8, [X8 + 0xB8]
	0x03C92E54 LDR X0, [X8]
	0x03C92E58 LDR X30, [X31], #0x20
	0x03C92E5C RET
	0x03C92E60 STP X29, X30, [X31 - 0x60]!
	0x03C92E64 STP X28, X27, [X31 + 0x10]
	0x03C92E68 STP X26, X25, [X31 + 0x20]
	0x03C92E6C STP X24, X23, [X31 + 0x30]
	0x03C92E70 STP X22, X21, [X31 + 0x40]
	0x03C92E74 STP X20, X19, [X31 + 0x50]
	0x03C92E78 ADRP X19, 0x755000
	0x03C92E7C ADRP X21, 0x4CE000
	0x03C92E80 ADRP X20, 0x4CE000
	0x03C92E84 ADRP X29, 0x4CE000
	0x03C92E88 ADRP X28, 0x4CE000
	0x03C92E8C ADRP X27, 0x4CE000
	0x03C92E90 ADRP X26, 0x4CE000
	0x03C92E94 ADRP X25, 0x4CE000
	0x03C92E98 ADRP X24, 0x4CE000
	0x03C92E9C ADRP X23, 0x4CE000
	0x03C92EA0 ADRP X22, 0x4CE000
	0x03C92EA4 LDR X21, [X21 + 0xA98]
	0x03C92EA8 LDR X20, [X20 + 0xAA0]
	0x03C92EAC LDR X29, [X29 + 0xAA8]
	0x03C92EB0 LDR X28, [X28 + 0xAB0]
	0x03C92EB4 LDR X27, [X27 + 0xAB8]
	0x03C92EB8 LDR X26, [X26 + 0xAC0]
	0x03C92EBC LDR X25, [X25 + 0xAC8]
	0x03C92EC0 LDR X24, [X24 + 0xAD0]
	0x03C92EC4 LDR X23, [X23 + 0xAD8]
	0x03C92EC8 LDR X22, [X22 + 0xAE0]
	0x03C92ECC LDRB W8, [X19 + 0x84]
	0x03C92ED0 TBNZ X8, 0x0, 0x3C92FE4
	0x03C92ED4 ADRP X0, 0x4CE000
	0x03C92ED8 LDR X0, [X0 + 0xAE8]
	0x03C92EDC BL 0x1C16CF4
	0x03C92EE0 ADRP X0, 0x4CE000
	0x03C92EE4 LDR X0, [X0 + 0xAF0]
	0x03C92EE8 BL 0x1C16CF4
	0x03C92EEC ADRP X0, 0x4CE000
	0x03C92EF0 LDR X0, [X0 + 0xA98]
	0x03C92EF4 BL 0x1C16CF4
	0x03C92EF8 ADRP X0, 0x4CE000
	0x03C92EFC LDR X0, [X0 + 0xAF8]
	0x03C92F00 BL 0x1C16CF4
	0x03C92F04 ADRP X0, 0x4CE000
	0x03C92F08 LDR X0, [X0 + 0xB00]
	0x03C92F0C BL 0x1C16CF4
	0x03C92F10 ADRP X0, 0x4CE000
	0x03C92F14 LDR X0, [X0 + 0xAA0]
	0x03C92F18 BL 0x1C16CF4
	0x03C92F1C ADRP X0, 0x4CE000
	0x03C92F20 LDR X0, [X0 + 0xB08]
	0x03C92F24 BL 0x1C16CF4
	0x03C92F28 ADRP X0, 0x4CE000
	0x03C92F2C LDR X0, [X0 + 0xB10]
	0x03C92F30 BL 0x1C16CF4
	0x03C92F34 ADRP X0, 0x4CE000
	0x03C92F38 LDR X0, [X0 + 0xAE0]
	0x03C92F3C BL 0x1C16CF4
	0x03C92F40 ADRP X0, 0x4CE000
	0x03C92F44 LDR X0, [X0 + 0xAB0]
	0x03C92F48 BL 0x1C16CF4
	0x03C92F4C ADRP X0, 0x4CE000
	0x03C92F50 LDR X0, [X0 + 0xB18]
	0x03C92F54 BL 0x1C16CF4
	0x03C92F58 ADRP X0, 0x4CE000
	0x03C92F5C LDR X0, [X0 + 0xAC0]
	0x03C92F60 BL 0x1C16CF4
	0x03C92F64 ADRP X0, 0x4CE000
	0x03C92F68 LDR X0, [X0 + 0xAD0]
	0x03C92F6C BL 0x1C16CF4
	0x03C92F70 ADRP X0, 0x4CE000
	0x03C92F74 LDR X0, [X0 + 0xB20]
	0x03C92F78 BL 0x1C16CF4
	0x03C92F7C ADRP X0, 0x4CE000
	0x03C92F80 LDR X0, [X0 + 0xB28]
	0x03C92F84 BL 0x1C16CF4
	0x03C92F88 ADRP X0, 0x4CE000
	0x03C92F8C LDR X0, [X0 + 0xB30]
	0x03C92F90 BL 0x1C16CF4
	0x03C92F94 ADRP X0, 0x4CE000
	0x03C92F98 LDR X0, [X0 + 0xB38]
	0x03C92F9C BL 0x1C16CF4
	0x03C92FA0 ADRP X0, 0x4CE000
	0x03C92FA4 LDR X0, [X0 + 0xAD8]
	0x03C92FA8 BL 0x1C16CF4
	0x03C92FAC ADRP X0, 0x4CE000
	0x03C92FB0 LDR X0, [X0 + 0xAA8]
	0x03C92FB4 BL 0x1C16CF4
	0x03C92FB8 ADRP X0, 0x4CE000
	0x03C92FBC LDR X0, [X0 + 0xB40]
	0x03C92FC0 BL 0x1C16CF4
	0x03C92FC4 ADRP X0, 0x4CE000
	0x03C92FC8 LDR X0, [X0 + 0xAB8]
	0x03C92FCC BL 0x1C16CF4
	0x03C92FD0 ADRP X0, 0x4CE000
	0x03C92FD4 LDR X0, [X0 + 0xAC8]
	0x03C92FD8 BL 0x1C16CF4
	0x03C92FDC MOVZ W8, 0x1
	0x03C92FE0 STRB W8, [X19 + 0x84]
	0x03C92FE4 LDR X0, [X21]
	0x03C92FE8 BL 0x1C16F10
	0x03C92FEC MOV X19, X0
	0x03C92FF0 BL 0x3C93190
	0x03C92FF4 LDR X1, [X20]
	0x03C92FF8 MOV X0, X19
	0x03C92FFC BL 0x2236BD8
	0x03C93000 LDR X0, [X29]
	0x03C93004 BL 0x1C16F10
	0x03C93008 MOV X19, X0
	0x03C9300C BL 0x3C932F0
	0x03C93010 LDR X1, [X28]
	0x03C93014 MOV X0, X19
	0x03C93018 BL 0x2236D68
	0x03C9301C LDR X0, [X27]
	0x03C93020 BL 0x1C16F10
	0x03C93024 MOV X19, X0
	0x03C93028 BL 0x3C933E0
	0x03C9302C LDR X1, [X26]
	0x03C93030 MOV X0, X19
	0x03C93034 BL 0x2236E30
	0x03C93038 LDR X0, [X25]
	0x03C9303C BL 0x1C16F10
	0x03C93040 MOV X19, X0
	0x03C93044 BL 0x3C9350C
	0x03C93048 LDR X1, [X24]
	0x03C9304C MOV X0, X19
	0x03C93050 BL 0x2236EF8
	0x03C93054 LDR X0, [X23]
	0x03C93058 BL 0x1C16F10
	0x03C9305C MOV X19, X0
	0x03C93060 BL 0x3C9366C
	0x03C93064 LDR X1, [X22]
	0x03C93068 MOV X0, X19
	0x03C9306C BL 0x2236DCC
	0x03C93070 ADRP X8, 0x4CD000
	0x03C93074 LDR X8, [X8 + 0xB40]
	0x03C93078 LDR X0, [X8]
	0x03C9307C BL 0x1C16F10
	0x03C93080 MOV X19, X0
	0x03C93084 BL 0x3C9375C
	0x03C93088 ADRP X8, 0x4CD000
	0x03C9308C LDR X8, [X8 + 0xB18]
	0x03C93090 MOV X0, X19
	0x03C93094 LDR X1, [X8]
	0x03C93098 BL 0x2236E94
	0x03C9309C ADRP X8, 0x4CD000
	0x03C930A0 LDR X8, [X8 + 0xB30]
	0x03C930A4 LDR X0, [X8]
	0x03C930A8 BL 0x1C16F10
	0x03C930AC MOV X19, X0
	0x03C930B0 BL 0x3C93888
	0x03C930B4 ADRP X8, 0x4CD000
	0x03C930B8 LDR X8, [X8 + 0xB10]
	0x03C930BC MOV X0, X19
	0x03C930C0 LDR X1, [X8]
	0x03C930C4 BL 0x2236CA0
	0x03C930C8 ADRP X8, 0x4CD000
	0x03C930CC LDR X8, [X8 + 0xB28]
	0x03C930D0 LDR X0, [X8]
	0x03C930D4 BL 0x1C16F10
	0x03C930D8 MOV X19, X0
	0x03C930DC BL 0x3C939E8
	0x03C930E0 ADRP X8, 0x4CD000
	0x03C930E4 LDR X8, [X8 + 0xB08]
	0x03C930E8 MOV X0, X19
	0x03C930EC LDR X1, [X8]
	0x03C930F0 BL 0x2236D04
	0x03C930F4 ADRP X8, 0x4CD000
	0x03C930F8 LDR X8, [X8 + 0xAF0]
	0x03C930FC LDR X0, [X8]
	0x03C93100 BL 0x1C16F10
	0x03C93104 MOV X19, X0
	0x03C93108 BL 0x3C93B48
	0x03C9310C ADRP X8, 0x4CD000
	0x03C93110 LDR X8, [X8 + 0xB00]
	0x03C93114 MOV X0, X19
	0x03C93118 LDR X1, [X8]
	0x03C9311C BL 0x2236B10
	0x03C93120 ADRP X8, 0x4CD000
	0x03C93124 LDR X8, [X8 + 0xAE8]
	0x03C93128 LDR X0, [X8]
	0x03C9312C BL 0x1C16F10
	0x03C93130 MOV X19, X0
	0x03C93134 BL 0x3C93C38
	0x03C93138 ADRP X8, 0x4CD000
	0x03C9313C LDR X8, [X8 + 0xAF8]
	0x03C93140 MOV X0, X19
	0x03C93144 LDR X1, [X8]
	0x03C93148 BL 0x2236B74
	0x03C9314C ADRP X8, 0x4CD000
	0x03C93150 LDR X8, [X8 + 0xB38]
	0x03C93154 LDR X0, [X8]
	0x03C93158 BL 0x1C16F10
	0x03C9315C MOV X19, X0
	0x03C93160 BL 0x3C93D28
	0x03C93164 ADRP X8, 0x4CD000
	0x03C93168 LDR X8, [X8 + 0xB20]
	0x03C9316C MOV X0, X19
	0x03C93170 LDP X20, X19, [X31 + 0x50]
	0x03C93174 LDP X22, X21, [X31 + 0x40]
	0x03C93178 LDR X1, [X8]
	0x03C9317C LDP X24, X23, [X31 + 0x30]
	0x03C93180 LDP X26, X25, [X31 + 0x20]
	0x03C93184 LDP X28, X27, [X31 + 0x10]
	0x03C93188 LDP X29, X30, [X31], #0x60
	0x03C9318C B 0x2236C3C
	0x03C93190 STP X30, X25, [X31 - 0x40]!
	0x03C93194 STP X24, X23, [X31 + 0x10]
	0x03C93198 STP X22, X21, [X31 + 0x20]
	0x03C9319C STP X20, X19, [X31 + 0x30]
	0x03C931A0 ADRP X21, 0x754000
	0x03C931A4 ADRP X20, 0x4CD000
	0x03C931A8 LDRB W8, [X21 + 0x85]
	0x03C931AC LDR X20, [X20 + 0xB48]
	0x03C931B0 MOV X19, X0
	0x03C931B4 TBNZ X8, 0x0, 0x3C93214
	0x03C931B8 ADRP X0, 0x4CD000
	0x03C931BC LDR X0, [X0 + 0xB50]
	0x03C931C0 BL 0x1C16CF4
	0x03C931C4 ADRP X0, 0x4CD000
	0x03C931C8 LDR X0, [X0 + 0xB58]
	0x03C931CC BL 0x1C16CF4
	0x03C931D0 ADRP X0, 0x4CD000
	0x03C931D4 LDR X0, [X0 + 0xB60]
	0x03C931D8 BL 0x1C16CF4
	0x03C931DC ADRP X0, 0x4CD000
	0x03C931E0 LDR X0, [X0 + 0xB68]
	0x03C931E4 BL 0x1C16CF4
	0x03C931E8 ADRP X0, 0x4CD000
	0x03C931EC LDR X0, [X0 + 0xB48]
	0x03C931F0 BL 0x1C16CF4
	0x03C931F4 ADRP X0, 0x4CD000
	0x03C931F8 LDR X0, [X0 + 0xB70]
	0x03C931FC BL 0x1C16CF4
	0x03C93200 ADRP X0, 0x4CD000
	0x03C93204 LDR X0, [X0 + 0xB78]
	0x03C93208 BL 0x1C16CF4
	0x03C9320C MOVZ W8, 0x1
	0x03C93210 STRB W8, [X21 + 0x85]
	0x03C93214 LDR X0, [X20]
	0x03C93218 ADRP X25, 0x4CD000
	0x03C9321C ADRP X20, 0x4CD000
	0x03C93220 ADRP X21, 0x4CD000
	0x03C93224 ADRP X24, 0x4CD000
	0x03C93228 ADRP X23, 0x4CD000
	0x03C9322C ADRP X22, 0x4CD000
	0x03C93230 LDR X25, [X25 + 0xB68]
	0x03C93234 LDR X20, [X20 + 0xB78]
	0x03C93238 LDR W8, [X0 + 0xE0]
	0x03C9323C LDR X21, [X21 + 0xB60]
	0x03C93240 LDR X24, [X24 + 0xB70]
	0x03C93244 LDR X23, [X23 + 0xB58]
	0x03C93248 LDR X22, [X22 + 0xB50]
	0x03C9324C CBNZ W8, 0x3C93254
	0x03C93250 BL 0x1C16DFC
	0x03C93254 LDR X1, [X25]
	0x03C93258 MOV X0, X19
	0x03C9325C BL 0x299EE9C
	0x03C93260 LDR X0, [X20]
	0x03C93264 BL 0x1C16F10
	0x03C93268 MOV X20, X0
	0x03C9326C BL 0x3C93E88
	0x03C93270 LDR X2, [X21]
	0x03C93274 MOV X0, X19
	0x03C93278 MOV X1, X20
	0x03C9327C BL 0x212E670
	0x03C93280 LDR X0, [X24]
	0x03C93284 BL 0x1C16F10
	0x03C93288 MOV X20, X0
	0x03C9328C BL 0x3C93ED0
	0x03C93290 LDR X2, [X21]
	0x03C93294 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X24, 0x756000
	015 Move X21, 0x489000
	016 Move X23, 0x462000
	017 Move W8, [X24+123]
	018 Move X21, [X21+3456]
	019 Move X23, [X23+1728]
	020 Move X19, X2
	021 Move X20, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {128}
	027 Move X0, 0x48B000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move X0, 0x489000
	031 Move X0, [X0+3432]
	032 Call 0x1C17CF4
	033 Move X0, 0x489000
	034 Move X0, [X0+3440]
	035 Call 0x1C17CF4
	036 Move X0, 0x48A000
	037 Move X0, [X0+2680]
	038 Call 0x1C17CF4
	039 Move X0, 0x4CF000
	040 Move X0, [X0+2552]
	041 Call 0x1C17CF4
	042 Move X0, 0x4CF000
	043 Move X0, [X0+2560]
	044 Call 0x1C17CF4
	045 Move X0, 0x489000
	046 Move X0, [X0+3448]
	047 Call 0x1C17CF4
	048 Move X0, 0x489000
	049 Move X0, [X0+3456]
	050 Call 0x1C17CF4
	051 Move X0, 0x489000
	052 Move X0, [X0+3464]
	053 Call 0x1C17CF4
	054 Move X0, 0x4CF000
	055 Move X0, [X0+2568]
	056 Call 0x1C17CF4
	057 Move X0, 0x4CF000
	058 Move X0, [X0+2576]
	059 Call 0x1C17CF4
	060 Move X0, 0x48A000
	061 Move X0, [X0+2688]
	062 Call 0x1C17CF4
	063 Move X0, 0x48A000
	064 Move X0, [X0+2912]
	065 Call 0x1C17CF4
	066 Move X0, 0x48A000
	067 Move X0, [X0+1768]
	068 Call 0x1C17CF4
	069 Move X0, 0x462000
	070 Move X0, [X0+1728]
	071 Call 0x1C17CF4
	072 Move X0, 0x489000
	073 Move X0, [X0+3480]
	074 Call 0x1C17CF4
	075 Move X0, 0x489000
	076 Move X0, [X0+3488]
	077 Call 0x1C17CF4
	078 Move X0, 0x489000
	079 Move X0, [X0+3496]
	080 Call 0x1C17CF4
	081 Move X0, 0x4B5000
	082 Move X0, [X0+1536]
	083 Call 0x1C17CF4
	084 Move X0, 0x4B5000
	085 Move X0, [X0+1544]
	086 Call 0x1C17CF4
	087 Move X0, 0x48C000
	088 Move X0, [X0+1144]
	089 Call 0x1C17CF4
	090 Move X0, 0x48C000
	091 Move X0, [X0+2744]
	092 Call 0x1C17CF4
	093 Move X0, 0x4B5000
	094 Move X0, [X0+1552]
	095 Call 0x1C17CF4
	096 Move X0, 0x4B5000
	097 Move X0, [X0+1560]
	098 Call 0x1C17CF4
	099 Move X0, 0x4CF000
	100 Move X0, [X0+2584]
	101 Call 0x1C17CF4
	102 Move X0, 0x462000
	103 Move X0, [X0+2104]
	104 Call 0x1C17CF4
	105 Move X0, 0x4CF000
	106 Move X0, [X0+2592]
	107 Call 0x1C17CF4
	108 Move X0, 0x4B5000
	109 Move X0, [X0+1576]
	110 Call 0x1C17CF4
	111 Move X0, 0x4B5000
	112 Move X0, [X0+1584]
	113 Call 0x1C17CF4
	114 Move X0, 0x4B5000
	115 Move X0, [X0+1592]
	116 Call 0x1C17CF4
	117 Move X0, 0x4B5000
	118 Move X0, [X0+1600]
	119 Call 0x1C17CF4
	120 Move X0, 0x48C000
	121 Move X0, [X0+1168]
	122 Call 0x1C17CF4
	123 Move X0, 0x46B000
	124 Move X0, [X0+1936]
	125 Call 0x1C17CF4
	126 Move W8, 1
	127 Move [X24+123], W8
	128 Move X0, [X23]
	129 Move [X31+56], X31
	130 Move [X31+52], W31
	131 Move [X31+40], X31
	132 Move [X31+36], W31
	133 Move W8, [X0+224]
	134 Move X21, [X21]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X21
	139 Move X1, X31
	140 Call Type.GetTypeFromHandle, X0
	141 Move X1, X0
	142 Move X0, X22
	143 Move X2, X31
	144 Call Type.op_Equality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {151}
	149 Move X8, 0x4B5000
	150 Move X8, [X8+1544]
	151 Move X8, 0x489000
	152 Move X0, [X23]
	153 Move X8, [X8+3488]
	154 Move W9, [X0+224]
	155 Move X21, [X8]
	156 Compare W9, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, X21
	160 Move X1, X31
	161 Call Type.GetTypeFromHandle, X0
	162 Move X1, X0
	163 Move X0, X22
	164 Move X2, X31
	165 Call Type.op_Equality, X0, X1
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {172}
	170 Move X8, 0x4B5000
	171 Move X8, [X8+1592]
	172 Move X8, 0x489000
	173 Move X0, [X23]
	174 Move X8, [X8+3448]
	175 Move W9, [X0+224]
	176 Move X21, [X8]
	177 Compare W9, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X21
	181 Move X1, X31
	182 Call Type.GetTypeFromHandle, X0
	183 Move X1, X0
	184 Move X0, X22
	185 Move X2, X31
	186 Call Type.op_Equality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {193}
	191 Move X8, 0x48C000
	192 Move X8, [X8+1144]
	193 Move X8, 0x489000
	194 Move X0, [X23]
	195 Move X8, [X8+3480]
	196 Move W9, [X0+224]
	197 Move X21, [X8]
	198 Compare W9, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X21
	202 Move X1, X31
	203 Call Type.GetTypeFromHandle, X0
	204 Move X1, X0
	205 Move X0, X22
	206 Move X2, X31
	207 Call Type.op_Equality, X0, X1
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {214}
	212 Move X8, 0x4B5000
	213 Move X8, [X8+1552]
	214 Move X8, 0x489000
	215 Move X0, [X23]
	216 Move X8, [X8+3432]
	217 Move W9, [X0+224]
	218 Move X21, [X8]
	219 Compare W9, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X0, X21
	223 Move X1, X31
	224 Call Type.GetTypeFromHandle, X0
	225 Move X1, X0
	226 Move X0, X22
	227 Move X2, X31
	228 Call Type.op_Equality, X0, X1
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {235}
	233 Move X8, 0x4B5000
	234 Move X8, [X8+1584]
	235 Move X8, 0x489000
	236 Move X0, [X23]
	237 Move X8, [X8+3440]
	238 Move W9, [X0+224]
	239 Move X21, [X8]
	240 Compare W9, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X21
	244 Move X1, X31
	245 Call Type.GetTypeFromHandle, X0
	246 Move X1, X0
	247 Move X0, X22
	248 Move X2, X31
	249 Call Type.op_Equality, X0, X1
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {256}
	254 Move X8, 0x4B5000
	255 Move X8, [X8+1560]
	256 Move X8, 0x48B000
	257 Move X0, [X23]
	258 Move X8, [X8+584]
	259 Move W9, [X0+224]
	260 Move X21, [X8]
	261 Compare W9, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move X0, X21
	265 Move X1, X31
	266 Call Type.GetTypeFromHandle, X0
	267 Move X1, X0
	268 Move X0, X22
	269 Move X2, X31
	270 Call Type.op_Equality, X0, X1
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {277}
	275 Move X8, 0x4CF000
	276 Move X8, [X8+2584]
	277 Move X8, 0x489000
	278 Move X0, [X23]
	279 Move X8, [X8+3464]
	280 Move W9, [X0+224]
	281 Move X21, [X8]
	282 Compare W9, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X0, X21
	286 Move X1, X31
	287 Call Type.GetTypeFromHandle, X0
	288 Move X1, X0
	289 Move X0, X22
	290 Move X2, X31
	291 Call Type.op_Equality, X0, X1
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {298}
	296 Move X8, 0x4B5000
	297 Move X8, [X8+1576]
	298 Move X8, 0x489000
	299 Move X0, [X23]
	300 Move X8, [X8+3496]
	301 Move W9, [X0+224]
	302 Move X21, [X8]
	303 Compare W9, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X21
	307 Move X1, X31
	308 Call Type.GetTypeFromHandle, X0
	309 Move X1, X0
	310 Move X0, X22
	311 Move X2, X31
	312 Call Type.op_Equality, X0, X1
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfNotEqual {319}
	317 Move X8, 0x4B5000
	318 Move X8, [X8+1600]
	319 Move X8, 0x48A000
	320 Move X0, [X23]
	321 Move X8, [X8+2688]
	322 Move W9, [X0+224]
	323 Move X21, [X8]
	324 Compare W9, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, X21
	328 Move X1, X31
	329 Call Type.GetTypeFromHandle, X0
	330 Move X1, X0
	331 Move X0, X22
	332 Move X2, X31
	333 Call Type.op_Equality, X0, X1
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {340}
	338 Move X8, 0x48C000
	339 Move X8, [X8+1168]
	340 Move X8, 0x48A000
	341 Move X0, [X23]
	342 Move X8, [X8+2680]
	343 Move W9, [X0+224]
	344 Move X21, [X8]
	345 Compare W9, 0
	346 JumpIfNotEqual {348}
	347 Call 0x1C17DFC
	348 Move X0, X21
	349 Move X1, X31
	350 Call Type.GetTypeFromHandle, X0
	351 Move X1, X0
	352 Move X0, X22
	353 Move X2, X31
	354 Call Type.op_Equality, X0, X1
	355 Move TEMP, X0
	356 And TEMP, TEMP, 1
	357 Compare TEMP, 1
	358 JumpIfNotEqual {361}
	359 Move X8, 0x4B5000
	360 Move X8, [X8+1536]
	361 Move X8, 0x48A000
	362 Move X0, [X23]
	363 Move X8, [X8+2912]
	364 Move W9, [X0+224]
	365 Move X21, [X8]
	366 Compare W9, 0
	367 JumpIfNotEqual {369}
	368 Call 0x1C17DFC
	369 Move X0, X21
	370 Move X1, X31
	371 Call Type.GetTypeFromHandle, X0
	372 Move X1, X0
	373 Move X0, X22
	374 Move X2, X31
	375 Call Type.op_Equality, X0, X1
	376 Move TEMP, X0
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfNotEqual {398}
	380 Move X8, 0x48C000
	381 Move X8, [X8+2744]
	382 Move X21, [X8]
	383 Move X0, X21
	384 Move X20, [X31+144]
	385 Move X19, [X31+152]
	386 Move X22, [X31+128]
	387 Move X21, [X31+136]
	388 Move X24, [X31+112]
	389 Move X23, [X31+120]
	390 Move X26, [X31+96]
	391 Move X25, [X31+104]
	392 Move X28, [X31+80]
	393 Move X27, [X31+88]
	394 Move X29, [X31+64]
	395 Move X30, [X31+72]
	396 Add X31, X31, 160
	397 Return X0
	398 Compare X22, 0
	399 JumpIfEqual {639}
	400 Move X8, [X22]
	401 Move X0, X22
	402 Move X9, [X8+424]
	403 Move X1, [X8+432]
	404 NotImplemented "Instruction BLR not yet implemented."
	405 Move X8, [X22]
	406 Move X21, X0
	407 Move X0, X22
	408 Move X9, [X8+936]
	409 Move X1, [X8+944]
	410 NotImplemented "Instruction BLR not yet implemented."
	411 Move TEMP, X0
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfEqual {383}
	415 Move X0, X22
	416 Move X1, X31
	417 Call Type.get_IsNested, X0
	418 Move TEMP, X0
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfNotEqual {447}
	422 Move X8, [X22]
	423 Move X0, X22
	424 Move X9, [X8+440]
	425 Move X1, [X8+448]
	426 NotImplemented "Instruction BLR not yet implemented."
	427 Move X8, 0x48A000
	428 Move X8, [X8+1768]
	429 Move X23, X0
	430 Move X8, [X8]
	431 Move W9, [X8+224]
	432 Compare W9, 0
	433 JumpIfNotEqual {436}
	434 Move X0, X8
	435 Call 0x1C17DFC
	436 Move X0, X23
	437 Move X1, X20
	438 Move X2, X19
	439 Call TypeUtility.GetTypeDisplayName, X0, X1, X2
	440 Move X8, 0x46B000
	441 Move X8, [X8+1936]
	442 Move X2, X21
	443 Move X3, X31
	444 Move X1, [X8]
	445 Call String.Concat, X0, X1, X2
	446 Move X21, X0
	447 Move X8, [X22]
	448 Move X0, X22
	449 Move X9, [X8+968]
	450 Move X1, [X8+976]
	451 NotImplemented "Instruction BLR not yet implemented."
	452 Move TEMP, X0
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfNotEqual {383}
	456 Compare X21, 0
	457 JumpIfEqual {639}
	458 Move W1, 96
	459 Move X0, X21
	460 Move X2, X31
	461 Call String.IndexOf, X0, X1
	462 Move X8, [X22]
	463 Move W23, W0
	464 Move X0, X22
	465 Move X9, [X8+1128]
	466 Move X1, [X8+1136]
	467 NotImplemented "Instruction BLR not yet implemented."
	468 Compare X0, 0
	469 JumpIfEqual {639}
	470 Move TEMP, X23
	471 And TEMP, TEMP, -2147483648
	472 Compare TEMP, -2147483648
	473 JumpIfEqual {486}
	474 Add W1, W23, 1
	475 Move X0, X21
	476 Move X2, X31
	477 Call String.Substring, X0, X1
	478 Move X1, X31
	479 Call Int32.Parse, X0
	480 Move W22, W0
	481 Move X0, X21
	482 Move W1, W23
	483 Move X2, X31
	484 Call String.Remove, X0, X1
	485 Move X21, X0
	486 Move W22, [X0+24]
	487 Move X26, 0x48A000
	488 Move X26, [X26+1768]
	489 Move [X31+56], X31
	490 Move X0, [X26]
	491 Move W8, [X0+224]
	492 Compare W8, 0
	493 JumpIfNotEqual {496}
	494 Call 0x1C17DFC
	495 Move X0, [X26]
	496 Move X8, [X0+184]
	497 Move X23, [X8+32]
	498 Move [X31+52], W31
	499 Add X1, X31, 52
	500 Move X0, X23
	501 Move X2, X31
	502 Call Monitor.Enter, X0, X1
	503 Move X0, [X26]
	504 Move W8, [X0+224]
	505 Compare W8, 0
	506 JumpIfNotEqual {509}
	507 Call 0x1C17DFC
	508 Move X0, [X26]
	509 Move X8, [X0+184]
	510 Move X0, [X8+24]
	511 Compare X0, 0
	512 JumpIfEqual {643}
	513 Move X8, 0x4CF000
	514 Move X8, [X8+2568]
	515 Move X1, [X8]
	516 Call 0x24942C0, X0
	517 Move X25, X31
	518 Move [X31+56], X0
	519 Move W24, 19
	520 Move W8, [X31+52]
	521 Compare W8, 0
	522 JumpIfEqual {526}
	523 Move X0, X23
	524 Move X1, X31
	525 Call Monitor.Exit, X0
	526 Compare X25, 0
	527 JumpIfNotEqual {641}
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Compare W24, 0
	530 JumpIfNotEqual {383}
	531 Add X8, X31, 40
	532 Add X9, X31, 36
	533 Add X10, X31, 56
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move [X31], X31
	536 Move [X31+8], X8
	537 Move [X31+16], X9
	538 Move [X31+24], X10
	539 Compare X20, 0
	540 JumpIfEqual {645}
	541 Move X27, 0x4CE000
	542 Move X28, 0x4CE000
	543 Move X29, 0x461000
	544 Move W23, [X19]
	545 Move X27, [X27+2552]
	546 Move X28, [X28+2560]
	547 Move X29, [X29+2104]
	548 Move W25, W31
	549 Move X8, [X20]
	550 Move X1, [X27]
	551 NotImplemented "Instruction LDRH not yet implemented."
	552 Compare X9, 0
	553 JumpIfEqual {560}
	554 Move X10, [X8+176]
	555 Add X10, X10, 8
	556 NotImplemented "Instruction LDUR not yet implemented."
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Subtract X9, X9, 1
	559 Add X10, X10, 16
	560 Move X0, X20
	561 Move W2, W31
	562 Call 0x1C5D788
	563 NotImplemented "Instruction LDRSW not yet implemented."
	564 Add X8, X8, X9
	565 Add X0, X8, 312
	566 Move X8, [X0]
	567 Move X1, [X0+8]
	568 Move X0, X20
	569 NotImplemented "Instruction BLR not yet implemented."
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Compare W25, 0
	572 JumpIfEqual {579}
	573 Move X0, [X31+56]
	574 Compare X0, 0
	575 JumpIfEqual {640}
	576 Move X1, [X29]
	577 Move X2, X31
	578 Call StringBuilder.Append, X0, X1
	579 Move X8, [X20]
	580 Move X23, [X31+56]
	581 Move W24, [X19]
	582 Move X1, [X28]
	583 NotImplemented "Instruction LDRH not yet implemented."
	584 Compare X9, 0
	585 JumpIfEqual {592}
	586 Move X10, [X8+176]
	587 Add X10, X10, 8
	588 NotImplemented "Instruction LDUR not yet implemented."
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Subtract X9, X9, 1
	591 Add X10, X10, 16
	592 Move X0, X20
	593 Move W2, W31
	594 Call 0x1C5D788
	595 NotImplemented "Instruction LDRSW not yet implemented."
	596 Add X8, X8, X9
	597 Add X0, X8, 312
	598 Move X8, [X0]
	599 Move X2, [X0+8]
	600 Move X0, X20
	601 Move W1, W24
	602 NotImplemented "Instruction BLR not yet implemented."
	603 Move X24, X0
	604 Move X0, [X26]
	605 Move W8, [X0+224]
	606 Compare W8, 0
	607 JumpIfNotEqual {609}
	608 Call 0x1C17DFC
	609 Move X0, X24
	610 Call TypeUtility.GetTypeDisplayName, X0
	611 Move X1, X0
	612 Compare X23, 0
	613 JumpIfEqual {638}
	614 Move X0, X23
	615 Move X2, X31
	616 Call StringBuilder.Append, X0, X1
	617 Move W8, [X19]
	618 Add W25, W25, 1
	619 NotImplemented "Instruction CMP not yet implemented."
	620 Add W23, W8, 1
	621 Move [X19], W23
	622 Move X0, [X31+56]
	623 Compare X0, 0
	624 JumpIfEqual {644}
	625 Move X1, X31
	626 Call StringBuilder.get_Length, X0
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Move X8, 0x4CE000
	629 Move X2, [X31+56]
	630 Move X8, [X8+2592]
	631 Move X0, [X8]
	632 Move X1, X21
	633 Move X3, X31
	634 Call String.Format, X0, X1, X2
	635 Move X21, X0
	636 Add X0, X31, 0
	637 Call 0x1C0E4B0
	638 Call 0x1C17F20
	639 Call 0x1C17F20
	640 Call 0x1C17F20
	641 Move X0, X25
	642 Call 0x1C17F18
	643 Call 0x1C17F20
	644 Call 0x1C17F20
	645 Call 0x1C17F20
	646 Move X24, X0
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Move X0, X24
	649 Call 0x3EB2AD0
	650 Move X25, [X0]
	651 Call 0x3EB2AE0
	652 Move W24, W31
	653 Move X25, X31
	654 Move X24, X0
	655 Move W8, [X31+52]
	656 Compare W8, 0
	657 JumpIfEqual {661}
	658 Move X0, X23
	659 Move X1, X31
	660 Call Monitor.Exit, X0
	661 Compare X25, 0
	662 JumpIfEqual {675}
	663 Move X0, X25
	664 Call 0x1C17F18
	665 Move X24, X0
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move X0, X24
	668 Call 0x3EB2AD0
	669 Move X8, [X0]
	670 Move [X31], X8
	671 Call 0x3EB2AE0
	672 Move X24, X0
	673 Add X0, X31, 0
	674 Call 0x1C0E4B0
	675 Move X0, X24
	676 Call 0x1D2D690
	677 Call 0x1991590

Method: System.Type GetRootType(System.Type type)

Disassembly:
	0x03C93298 MOV X1, X20
	0x03C9329C BL 0x212E670
	0x03C932A0 LDR X0, [X23]
	0x03C932A4 BL 0x1C16F10
	0x03C932A8 MOV X20, X0
	0x03C932AC BL 0x3C93F18
	0x03C932B0 LDR X2, [X21]
	0x03C932B4 MOV X0, X19
	0x03C932B8 MOV X1, X20
	0x03C932BC BL 0x212E670
	0x03C932C0 LDR X0, [X22]
	0x03C932C4 BL 0x1C16F10
	0x03C932C8 MOV X20, X0
	0x03C932CC BL 0x3C93F60
	0x03C932D0 LDR X2, [X21]
	0x03C932D4 MOV X0, X19
	0x03C932D8 MOV X1, X20
	0x03C932DC LDP X20, X19, [X31 + 0x30]
	0x03C932E0 LDP X22, X21, [X31 + 0x20]
	0x03C932E4 LDP X24, X23, [X31 + 0x10]
	0x03C932E8 LDP X30, X25, [X31], #0x40
	0x03C932EC B 0x212E670
	0x03C932F0 STP X30, X23, [X31 - 0x30]!
	0x03C932F4 STP X22, X21, [X31 + 0x10]
	0x03C932F8 STP X20, X19, [X31 + 0x20]
	0x03C932FC ADRP X21, 0x754000
	0x03C93300 ADRP X20, 0x4CD000
	0x03C93304 LDRB W8, [X21 + 0x8E]
	0x03C93308 LDR X20, [X20 + 0xB80]
	0x03C9330C MOV X19, X0
	0x03C93310 TBNZ X8, 0x0, 0x3C93358
	0x03C93314 ADRP X0, 0x4CD000
	0x03C93318 LDR X0, [X0 + 0xB88]
	0x03C9331C BL 0x1C16CF4
	0x03C93320 ADRP X0, 0x4CD000
	0x03C93324 LDR X0, [X0 + 0xB90]
	0x03C93328 BL 0x1C16CF4
	0x03C9332C ADRP X0, 0x4CD000
	0x03C93330 LDR X0, [X0 + 0xB80]
	0x03C93334 BL 0x1C16CF4
	0x03C93338 ADRP X0, 0x4CD000
	0x03C9333C LDR X0, [X0 + 0xB98]
	0x03C93340 BL 0x1C16CF4
	0x03C93344 ADRP X0, 0x4CD000
	0x03C93348 LDR X0, [X0 + 0xBA0]
	0x03C9334C BL 0x1C16CF4
	0x03C93350 MOVZ W8, 0x1
	0x03C93354 STRB W8, [X21 + 0x8E]
	0x03C93358 LDR X0, [X20]
	0x03C9335C ADRP X23, 0x4CD000
	0x03C93360 ADRP X20, 0x4CD000
	0x03C93364 ADRP X21, 0x4CD000
	0x03C93368 ADRP X22, 0x4CD000
	0x03C9336C LDR W8, [X0 + 0xE0]
	0x03C93370 LDR X23, [X23 + 0xB90]
	0x03C93374 LDR X20, [X20 + 0xB98]
	0x03C93378 LDR X21, [X21 + 0xB88]
	0x03C9337C LDR X22, [X22 + 0xBA0]
	0x03C93380 CBNZ W8, 0x3C93388
	0x03C93384 BL 0x1C16DFC
	0x03C93388 LDR X1, [X23]
	0x03C9338C MOV X0, X19
	0x03C93390 BL 0x299F65C
	0x03C93394 LDR X0, [X20]
	0x03C93398 BL 0x1C16F10
	0x03C9339C MOV X20, X0
	0x03C933A0 BL 0x3C940A8
	0x03C933A4 LDR X2, [X21]
	0x03C933A8 MOV X0, X19
	0x03C933AC MOV X1, X20
	0x03C933B0 BL 0x212E950
	0x03C933B4 LDR X0, [X22]
	0x03C933B8 BL 0x1C16F10
	0x03C933BC MOV X20, X0
	0x03C933C0 BL 0x3C940F0
	0x03C933C4 LDR X2, [X21]
	0x03C933C8 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x755000
	007 Move W8, [X20+124]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x46B000
	014 Move X0, [X0+2408]
	015 Call 0x1C17CF4
	016 Move X0, 0x461000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X0, 0x499000
	020 Move X0, [X0+1160]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+124], W8
	024 Compare X19, 0
	025 JumpIfEqual {89}
	026 Move X0, X19
	027 Move X1, X31
	028 Call Type.get_IsInterface, X0
	029 Move W8, W0
	030 Move X0, X31
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {91}
	035 Move X0, X19
	036 Move X1, X31
	037 Call Type.get_IsValueType, X0
	038 Move X8, 0x461000
	039 Move X8, [X8+1728]
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {47}
	044 Move X0, [X8]
	045 Move X8, 0x499000
	046 Move X8, [X8+1160]
	047 Move X0, [X8]
	048 Move X8, 0x46B000
	049 Move X8, [X8+2408]
	050 Move W9, [X0+224]
	051 Move X20, [X8]
	052 Compare W9, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Call Type.GetTypeFromHandle, X0
	058 Move X22, 0x461000
	059 Move X22, [X22+1728]
	060 Move X20, X0
	061 Move X8, [X19]
	062 Move X0, X19
	063 Move X9, [X8+2072]
	064 Move X1, [X8+2080]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X22]
	067 Move X21, X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X21
	075 Move X2, X31
	076 Call Type.op_Inequality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {90}
	081 Move X8, [X19]
	082 Move X0, X19
	083 Move X9, [X8+2072]
	084 Move X1, [X8+2080]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X19, X0
	087 Compare X0, 0
	088 JumpIfNotEqual {61}
	089 Call 0x1C17F20
	090 Move X0, X19
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Return X0

Method: Unity.Properties.TypeUtility/ITypeConstructor CreateTypeConstructor(System.Type type)

Disassembly:
	0x03C933CC MOV X1, X20
	0x03C933D0 LDP X20, X19, [X31 + 0x20]
	0x03C933D4 LDP X22, X21, [X31 + 0x10]
	0x03C933D8 LDP X30, X23, [X31], #0x30
	0x03C933DC B 0x212E950
	0x03C933E0 STR X30, [X31 - 0x40]!
	0x03C933E4 STP X24, X23, [X31 + 0x10]
	0x03C933E8 STP X22, X21, [X31 + 0x20]
	0x03C933EC STP X20, X19, [X31 + 0x30]
	0x03C933F0 ADRP X21, 0x754000
	0x03C933F4 ADRP X20, 0x4CD000
	0x03C933F8 LDRB W8, [X21 + 0x93]
	0x03C933FC LDR X20, [X20 + 0xBA8]
	0x03C93400 MOV X19, X0
	0x03C93404 TBNZ X8, 0x0, 0x3C93458
	0x03C93408 ADRP X0, 0x4CD000
	0x03C9340C LDR X0, [X0 + 0xBB0]
	0x03C93410 BL 0x1C16CF4
	0x03C93414 ADRP X0, 0x4CD000
	0x03C93418 LDR X0, [X0 + 0xBB8]
	0x03C9341C BL 0x1C16CF4
	0x03C93420 ADRP X0, 0x4CD000
	0x03C93424 LDR X0, [X0 + 0xBA8]
	0x03C93428 BL 0x1C16CF4
	0x03C9342C ADRP X0, 0x4CD000
	0x03C93430 LDR X0, [X0 + 0xBC0]
	0x03C93434 BL 0x1C16CF4
	0x03C93438 ADRP X0, 0x4CD000
	0x03C9343C LDR X0, [X0 + 0xBC8]
	0x03C93440 BL 0x1C16CF4
	0x03C93444 ADRP X0, 0x4CD000
	0x03C93448 LDR X0, [X0 + 0xBD0]
	0x03C9344C BL 0x1C16CF4
	0x03C93450 MOVZ W8, 0x1
	0x03C93454 STRB W8, [X21 + 0x93]
	0x03C93458 LDR X0, [X20]
	0x03C9345C ADRP X24, 0x4CD000
	0x03C93460 ADRP X20, 0x4CD000
	0x03C93464 ADRP X21, 0x4CD000
	0x03C93468 ADRP X23, 0x4CD000
	0x03C9346C ADRP X22, 0x4CD000
	0x03C93470 LDR X24, [X24 + 0xBB8]
	0x03C93474 LDR W8, [X0 + 0xE0]
	0x03C93478 LDR X20, [X20 + 0xBC0]
	0x03C9347C LDR X21, [X21 + 0xBB0]
	0x03C93480 LDR X23, [X23 + 0xBC8]
	0x03C93484 LDR X22, [X22 + 0xBD0]
	0x03C93488 CBNZ W8, 0x3C93490
	0x03C9348C BL 0x1C16DFC
	0x03C93490 LDR X1, [X24]
	0x03C93494 MOV X0, X19
	0x03C93498 BL 0x299FA3C
	0x03C9349C LDR X0, [X20]
	0x03C934A0 BL 0x1C16F10
	0x03C934A4 MOV X20, X0
	0x03C934A8 BL 0x3C941B8
	0x03C934AC LDR X2, [X21]
	0x03C934B0 MOV X0, X19
	0x03C934B4 MOV X1, X20
	0x03C934B8 BL 0x212EAC0
	0x03C934BC LDR X0, [X23]
	0x03C934C0 BL 0x1C16F10
	0x03C934C4 MOV X20, X0
	0x03C934C8 BL 0x3C94200
	0x03C934CC LDR X2, [X21]
	0x03C934D0 MOV X0, X19
	0x03C934D4 MOV X1, X20
	0x03C934D8 BL 0x212EAC0
	0x03C934DC LDR X0, [X22]
	0x03C934E0 BL 0x1C16F10
	0x03C934E4 MOV X20, X0
	0x03C934E8 BL 0x3C94248
	0x03C934EC LDR X2, [X21]
	0x03C934F0 MOV X0, X19
	0x03C934F4 MOV X1, X20
	0x03C934F8 LDP X20, X19, [X31 + 0x30]
	0x03C934FC LDP X22, X21, [X31 + 0x20]
	0x03C93500 LDP X24, X23, [X31 + 0x10]
	0x03C93504 LDR X30, [X31], #0x40
	0x03C93508 B 0x212EAC0
	0x03C9350C STP X30, X25, [X31 - 0x40]!
	0x03C93510 STP X24, X23, [X31 + 0x10]
	0x03C93514 STP X22, X21, [X31 + 0x20]
	0x03C93518 STP X20, X19, [X31 + 0x30]
	0x03C9351C ADRP X21, 0x754000
	0x03C93520 ADRP X20, 0x4CD000
	0x03C93524 LDRB W8, [X21 + 0x9A]
	0x03C93528 LDR X20, [X20 + 0xBD8]
	0x03C9352C MOV X19, X0
	0x03C93530 TBNZ X8, 0x0, 0x3C93590
	0x03C93534 ADRP X0, 0x4CD000
	0x03C93538 LDR X0, [X0 + 0xBE0]
	0x03C9353C BL 0x1C16CF4
	0x03C93540 ADRP X0, 0x4CD000
	0x03C93544 LDR X0, [X0 + 0xBE8]
	0x03C93548 BL 0x1C16CF4
	0x03C9354C ADRP X0, 0x4CD000
	0x03C93550 LDR X0, [X0 + 0xBD8]
	0x03C93554 BL 0x1C16CF4
	0x03C93558 ADRP X0, 0x4CD000
	0x03C9355C LDR X0, [X0 + 0xBF0]
	0x03C93560 BL 0x1C16CF4
	0x03C93564 ADRP X0, 0x4CD000
	0x03C93568 LDR X0, [X0 + 0xBF8]
	0x03C9356C BL 0x1C16CF4
	0x03C93570 ADRP X0, 0x4CD000
	0x03C93574 LDR X0, [X0 + 0xC00]
	0x03C93578 BL 0x1C16CF4
	0x03C9357C ADRP X0, 0x4CD000
	0x03C93580 LDR X0, [X0 + 0xC08]
	0x03C93584 BL 0x1C16CF4
	0x03C93588 MOVZ W8, 0x1
	0x03C9358C STRB W8, [X21 + 0x9A]
	0x03C93590 LDR X0, [X20]
	0x03C93594 ADRP X25, 0x4CD000
	0x03C93598 ADRP X20, 0x4CD000
	0x03C9359C ADRP X21, 0x4CD000
	0x03C935A0 ADRP X24, 0x4CD000
	0x03C935A4 ADRP X23, 0x4CD000
	0x03C935A8 ADRP X22, 0x4CD000
	0x03C935AC LDR X25, [X25 + 0xBE8]
	0x03C935B0 LDR X20, [X20 + 0xBF8]
	0x03C935B4 LDR W8, [X0 + 0xE0]
	0x03C935B8 LDR X21, [X21 + 0xBE0]
	0x03C935BC LDR X24, [X24 + 0xC00]
	0x03C935C0 LDR X23, [X23 + 0xC08]
	0x03C935C4 LDR X22, [X22 + 0xBF0]
	0x03C935C8 CBNZ W8, 0x3C935D0
	0x03C935CC BL 0x1C16DFC
	0x03C935D0 LDR X1, [X25]
	0x03C935D4 MOV X0, X19
	0x03C935D8 BL 0x299FE1C
	0x03C935DC LDR X0, [X20]
	0x03C935E0 BL 0x1C16F10
	0x03C935E4 MOV X20, X0
	0x03C935E8 BL 0x3C94350
	0x03C935EC LDR X2, [X21]
	0x03C935F0 MOV X0, X19
	0x03C935F4 MOV X1, X20
	0x03C935F8 BL 0x212EC30
	0x03C935FC LDR X0, [X24]
	0x03C93600 BL 0x1C16F10
	0x03C93604 MOV X20, X0
	0x03C93608 BL 0x3C94398
	0x03C9360C LDR X2, [X21]
	0x03C93610 MOV X0, X19
	0x03C93614 MOV X1, X20
	0x03C93618 BL 0x212EC30
	0x03C9361C LDR X0, [X23]
	0x03C93620 BL 0x1C16F10
	0x03C93624 MOV X20, X0
	0x03C93628 BL 0x3C943E0
	0x03C9362C LDR X2, [X21]
	0x03C93630 MOV X0, X19
	0x03C93634 MOV X1, X20
	0x03C93638 BL 0x212EC30
	0x03C9363C LDR X0, [X22]
	0x03C93640 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x755000
	006 Move X21, 0x48A000
	007 Move W8, [X20+125]
	008 Move X21, [X21+712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x48A000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move X0, 0x4CE000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x48A000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0x4CE000
	024 Move X0, [X0+2608]
	025 Call 0x1C17CF4
	026 Move X0, 0x48A000
	027 Move X0, [X0+712]
	028 Call 0x1C17CF4
	029 Move X0, 0x4CE000
	030 Move X0, [X0+2616]
	031 Call 0x1C17CF4
	032 Move X0, 0x469000
	033 Move X0, [X0+3168]
	034 Call 0x1C17CF4
	035 Move X0, 0x489000
	036 Move X0, [X0+1768]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+125], W8
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Call PropertyBagStore.GetPropertyBag, X0
	047 Compare X0, 0
	048 JumpIfEqual {73}
	049 Move X8, 0x4CE000
	050 Move X8, [X8+2616]
	051 Move X20, X0
	052 Move X21, 0x4CE000
	053 Move X0, [X8]
	054 Move X21, [X21+2600]
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X19, X0
	058 Call Object..ctor, X0
	059 Move X8, [X20]
	060 Move X1, [X21]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X20
	071 Move W2, W31
	072 Call 0x1C5D788
	073 Compare X19, 0
	074 JumpIfEqual {177}
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+648]
	078 Move X1, [X8+656]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {126}
	084 Move X8, 0x4CE000
	085 Move X8, [X8+2608]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move X1, X31
	089 Move X20, X0
	090 Call Object..ctor, X0
	091 Move X21, 0x489000
	092 Move X21, [X21+1768]
	093 Move X0, [X21]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X21]
	099 Move X8, [X0+184]
	100 Move X0, [X8]
	101 Compare X0, 0
	102 JumpIfEqual {177}
	103 Move X8, 0x48A000
	104 Move X8, [X8+2000]
	105 Move X1, X19
	106 Move X2, X20
	107 Move X3, [X8]
	108 Call ConcurrentDictionary`2<Object, Object>.set_Item, X0, X1, X2
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X2, [X0+8]
	114 Move X0, X20
	115 Move X1, X19
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Compare X19, 0
	118 JumpIfEqual {177}
	119 Move X20, [X19+16]
	120 Move X0, X20
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X30, [X31+32]
	124 Move X21, [X31+40]
	125 Return X0
	126 Move X20, 0x489000
	127 Move X20, [X20+1768]
	128 Move X0, [X20]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1C17DFC
	133 Move X0, [X20]
	134 Move X9, 0x469000
	135 Move X8, [X0+184]
	136 Move X9, [X9+3168]
	137 Move W1, 1
	138 Move X20, [X8+8]
	139 Move X0, [X9]
	140 Call 0x1C17D6C
	141 Compare X0, 0
	142 JumpIfEqual {177}
	143 Move X8, [X0]
	144 Move X21, X0
	145 Move X0, X19
	146 Move X1, [X8+64]
	147 Call 0x1C17E00
	148 Compare X0, 0
	149 JumpIfEqual {178}
	150 Move W8, [X21+24]
	151 Compare W8, 0
	152 JumpIfEqual {181}
	153 Move [X21+32], X19
	154 Compare X20, 0
	155 JumpIfEqual {177}
	156 Move X8, [X20]
	157 Move X0, X20
	158 Move X1, X21
	159 Move X9, [X8+984]
	160 Move X2, [X8+992]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X0, 0
	163 JumpIfEqual {177}
	164 Move X1, X31
	165 Move X2, X31
	166 Move X3, X31
	167 Call MethodBase.Invoke, X0, X1, X2
	168 Move X8, 0x48A000
	169 Move X8, [X8+1976]
	170 Move X20, [X31+16]
	171 Move X19, [X31+24]
	172 Move X1, [X8]
	173 Move X30, [X31+32]
	174 Move X21, [X31+40]
	175 Call 0x1C17E00
	176 Return X0
	177 Call 0x1C17F20
	178 Call 0x1C17F44
	179 Move X1, X31
	180 Call 0x1C17DEC
	181 Call 0x1C17F28

Method: Unity.Properties.TypeUtility/ITypeConstructor`1<T> CreateTypeConstructor()

Disassembly:
	0x0229FFB0 MOV X0, X24
	0x0229FFB4 MOV W2, W31
	0x0229FFB8 BL 0x1C5C788
	0x0229FFBC B 0x229FFCC
	0x0229FFC0 LDRSW X9, [X10]
	0x0229FFC4 ADD X8, X8, X9, 0x4, LSL
	0x0229FFC8 ADD X0, X8, 0x138
	0x0229FFCC STUR X21, [X29 - 0x10]
	0x0229FFD0 LDR X1, [X0 + 0x8]
	0x0229FFD4 SUB X3, X29, 0x10
	0x0229FFD8 MOV X2, X24
	0x0229FFDC MOV X4, X21
	0x0229FFE0 LDP X0, X8, [X1 + 0x8]
	0x0229FFE4 BLR X8
	0x0229FFE8 MOV X0, X22
	0x0229FFEC MOV X1, X21
	0x0229FFF0 MOV X2, X20
	0x0229FFF4 BL 0x3EB1AC0
	0x0229FFF8 MOV X0, X21
	0x0229FFFC MOV X1, X22
	0x022A0000 MOV X2, X20
	0x022A0004 BL 0x3EB1AC0
	0x022A0008 MOV X0, X19
	0x022A000C MOV X1, X21
	0x022A0010 MOV X2, X20
	0x022A0014 BL 0x3EB1AC0
	0x022A0018 LDR X8, [X25 + 0x28]
	0x022A001C LDUR X9, [X29 - 0x8]
	0x022A0020 CMP X8, X9
	0x022A0024 B.NE 0x22A0048
	0x022A0028 ADD X31, X29, 0x0
	0x022A002C LDP X20, X19, [X31 + 0x40]
	0x022A0030 LDP X22, X21, [X31 + 0x30]
	0x022A0034 LDP X24, X23, [X31 + 0x20]
	0x022A0038 LDR X25, [X31 + 0x10]
	0x022A003C LDP X29, X30, [X31], #0x50
	0x022A0040 RET
	0x022A0044 BL 0x1C16F20
	0x022A0048 BL 0x3EB1B20
	0x022A004C STP X29, X30, [X31 - 0x60]!
	0x022A0050 STR X27, [X31 + 0x10]
	0x022A0054 STP X26, X25, [X31 + 0x20]
	0x022A0058 STP X24, X23, [X31 + 0x30]
	0x022A005C STP X22, X21, [X31 + 0x40]
	0x022A0060 STP X20, X19, [X31 + 0x50]
	0x022A0064 ADD X29, X31, 0x0
	0x022A0068 SUB X31, X31, 0x10
	0x022A006C MRS X27, 0xC000
	0x022A0070 LDR X8, [X27 + 0x28]
	0x022A0074 MOV X20, X2
	0x022A0078 MOV X19, X1
	0x022A007C MOV X24, X0
	0x022A0080 STUR X8, [X29 - 0x8]
	0x022A0084 LDR X8, [X2 + 0x38]
	0x022A0088 CBNZ X8, 0x22A00C4
	0x022A008C ADRP X0, 0x1E7C000
	0x022A0090 LDR X0, [X0 + 0x7B8]
	0x022A0094 BL 0x1C16CF4
	0x022A0098 ADRP X0, 0x1E7B000
	0x022A009C LDR X0, [X0 + 0x6E8]
	0x022A00A0 BL 0x1C16CF4
	0x022A00A4 ADRP X0, 0x1E53000
	0x022A00A8 LDR X0, [X0 + 0x6C0]
	0x022A00AC BL 0x1C16CF4
	0x022A00B0 LDR X8, [X20 + 0x38]
	0x022A00B4 CBNZ X8, 0x22A00C4
	0x022A00B8 MOV X0, X20
	0x022A00BC BL 0x1C5C6E0
	0x022A00C0 LDR X8, [X20 + 0x38]
	0x022A00C4 LDR X8, [X8 + 0x8]
	0x022A00C8 LDR W21, [X8 + 0xFC]
	0x022A00CC ADD X8, X31, 0x0
	0x022A00D0 ADD X9, X21, 0xF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+56]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {24}
	009 Move X0, 0x1E7E000
	010 Move X0, [X0+2000]
	011 Call 0x1C17CF4
	012 Move X0, 0x1E7D000
	013 Move X0, [X0+1768]
	014 Call 0x1C17CF4
	015 Move X0, 0x1E55000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X0, [X8]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Call 0x1C17F10
	032 Move X8, [X19+56]
	033 Move X20, X0
	034 Move X1, [X8+8]
	035 Call 0x271158C, X0
	036 Move X8, [X19+56]
	037 Move X0, [X8+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+184]
	045 Move [X8], X20
	046 Move X8, [X19+56]
	047 Move X0, [X8+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X21, 0x1E7C000
	055 Move X21, [X21+1768]
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X21]
	062 Move X9, 0x1E54000
	063 Move X8, [X0+184]
	064 Move X9, [X9+1728]
	065 Move X0, [X9]
	066 Move X9, [X19+56]
	067 Move X19, [X8]
	068 Move W8, [X0+224]
	069 Move X21, [X9+40]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move X1, X31
	075 Call Type.GetTypeFromHandle, X0
	076 Compare X19, 0
	077 JumpIfEqual {91}
	078 Move X8, 0x1E7D000
	079 Move X8, [X8+2000]
	080 Move X1, X0
	081 Move X0, X19
	082 Move X2, X20
	083 Move X3, [X8]
	084 Call ConcurrentDictionary`2<Object, Object>.set_Item, X0, X1, X2
	085 Move X0, X20
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Return X0
	091 Call 0x1C17F20

Method: Unity.Properties.TypeUtility/ITypeConstructor GetTypeConstructor(System.Type type)

Disassembly:
	0x03C938D8 LDR X0, [X0 + 0xC80]
	0x03C938DC BL 0x1C16CF4
	0x03C938E0 ADRP X0, 0x4CD000
	0x03C938E4 LDR X0, [X0 + 0xC88]
	0x03C938E8 BL 0x1C16CF4
	0x03C938EC ADRP X0, 0x4CD000
	0x03C938F0 LDR X0, [X0 + 0xC90]
	0x03C938F4 BL 0x1C16CF4
	0x03C938F8 ADRP X0, 0x4CD000
	0x03C938FC LDR X0, [X0 + 0xC98]
	0x03C93900 BL 0x1C16CF4
	0x03C93904 MOVZ W8, 0x1
	0x03C93908 STRB W8, [X21 + 0xAF]
	0x03C9390C LDR X0, [X20]
	0x03C93910 ADRP X25, 0x4CD000
	0x03C93914 ADRP X20, 0x4CD000
	0x03C93918 ADRP X21, 0x4CD000
	0x03C9391C ADRP X24, 0x4CD000
	0x03C93920 ADRP X23, 0x4CD000
	0x03C93924 ADRP X22, 0x4CD000
	0x03C93928 LDR X25, [X25 + 0xC78]
	0x03C9392C LDR X20, [X20 + 0xC90]
	0x03C93930 LDR W8, [X0 + 0xE0]
	0x03C93934 LDR X21, [X21 + 0xC70]
	0x03C93938 LDR X24, [X24 + 0xC98]
	0x03C9393C LDR X23, [X23 + 0xC88]
	0x03C93940 LDR X22, [X22 + 0xC80]
	0x03C93944 CBNZ W8, 0x3C9394C
	0x03C93948 BL 0x1C16DFC
	0x03C9394C LDR X1, [X25]
	0x03C93950 MOV X0, X19
	0x03C93954 BL 0x299F27C
	0x03C93958 LDR X0, [X20]
	0x03C9395C BL 0x1C16F10
	0x03C93960 MOV X20, X0
	0x03C93964 BL 0x3C94818
	0x03C93968 LDR X2, [X21]
	0x03C9396C MOV X0, X19
	0x03C93970 MOV X1, X20
	0x03C93974 BL 0x212E7E0
	0x03C93978 LDR X0, [X24]
	0x03C9397C BL 0x1C16F10
	0x03C93980 MOV X20, X0
	0x03C93984 BL 0x3C94860
	0x03C93988 LDR X2, [X21]
	0x03C9398C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x755000
	007 Move X20, 0x489000
	008 Move W8, [X21+126]
	009 Move X20, [X20+1768]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4CE000
	016 Move X0, [X0+2648]
	017 Call 0x1C17CF4
	018 Move X0, 0x489000
	019 Move X0, [X0+1768]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+126], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {58}
	034 Move X8, 0x4CE000
	035 Move X8, [X8+2648]
	036 Add X2, X31, 8
	037 Move X1, X19
	038 Move X3, [X8]
	039 Call ConcurrentDictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {45}
	044 Move X0, [X31+8]
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Call TypeUtility.CreateTypeConstructor, X0
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Add X31, X31, 48
	057 Return X0
	058 Call 0x1C17F20

Method: Unity.Properties.TypeUtility/ITypeConstructor`1<T> GetTypeConstructor()

Disassembly:
	0x022A0D64 ADD X0, X8, 0x138
	0x022A0D68 LDP X8, X1, [X0]
	0x022A0D6C MOV X0, X23
	0x022A0D70 BLR X8
	0x022A0D74 TBZ X0, 0x0, 0x22A0DD0
	0x022A0D78 LDR X8, [X19 + 0x38]
	0x022A0D7C LDR X1, [X8 + 0x8]
	0x022A0D80 LDRB W8, [X1 + 0x135]
	0x022A0D84 TBNZ X8, 0x0, 0x22A0D94
	0x022A0D88 MOV X0, X1
	0x022A0D8C BL 0x1C5C684
	0x022A0D90 MOV X1, X0
	0x022A0D94 LDR X8, [X23]
	0x022A0D98 LDRH W9, [X8 + 0x12E]
	0x022A0D9C CBZ X9, 0x22A0DC0
	0x022A0DA0 LDR X10, [X8 + 0xB0]
	0x022A0DA4 ADD X10, X10, 0x8
	0x022A0DA8 LDUR X11, [X10 - 0x8]
	0x022A0DAC CMP X11, X1
	0x022A0DB0 B.EQ 0x22A0DE8
	0x022A0DB4 SUBS X9, X9, 0x1
	0x022A0DB8 ADD X10, X10, 0x10
	0x022A0DBC B.NE 0x22A0DA8
	0x022A0DC0 MOV X0, X23
	0x022A0DC4 MOV W2, W31
	0x022A0DC8 BL 0x1C5C788
	0x022A0DCC B 0x22A0DF4
	0x022A0DD0 MOV X0, X20
	0x022A0DD4 MOV W1, W31
	0x022A0DD8 MOV X2, X21
	0x022A0DDC BL 0x3EB1B10
	0x022A0DE0 MOV W0, W31
	0x022A0DE4 B 0x22A0E38
	0x022A0DE8 LDRSW X9, [X10]
	0x022A0DEC ADD X8, X8, X9, 0x4, LSL
	0x022A0DF0 ADD X0, X8, 0x138
	0x022A0DF4 STUR X22, [X29 - 0x10]
	0x022A0DF8 LDR X1, [X0 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {16}
	007 Move X0, 0x1E7C000
	008 Move X0, [X0+1768]
	009 Call 0x1C17CF4
	010 Move X8, [X19+56]
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move X8, [X19+56]
	016 Move X0, [X8+16]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X0+184]
	024 Move X8, [X8]
	025 Compare X8, 0
	026 JumpIfEqual {40}
	027 Move X8, [X19+56]
	028 Move X0, [X8+16]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+184]
	036 Move X0, [X8]
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Return X0
	040 Move X8, 0x1E7C000
	041 Move X8, [X8+1768]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X8, [X19+56]
	048 Move X0, [X8+24]
	049 Move X30, [X31+16]
	050 Move X19, [X31+24]
	051 Call TypeUtility.CreateTypeConstructor
	052 Return X0

Method: System.Boolean CanBeInstantiated(System.Type type)

Disassembly:
	0x03C93990 MOV X1, X20
	0x03C93994 BL 0x212E7E0
	0x03C93998 LDR X0, [X23]
	0x03C9399C BL 0x1C16F10
	0x03C939A0 MOV X20, X0
	0x03C939A4 BL 0x3C948A8
	0x03C939A8 LDR X2, [X21]
	0x03C939AC MOV X0, X19
	0x03C939B0 MOV X1, X20
	0x03C939B4 BL 0x212E7E0
	0x03C939B8 LDR X0, [X22]
	0x03C939BC BL 0x1C16F10
	0x03C939C0 MOV X20, X0
	0x03C939C4 BL 0x3C948F0
	0x03C939C8 LDR X2, [X21]
	0x03C939CC MOV X0, X19
	0x03C939D0 MOV X1, X20
	0x03C939D4 LDP X20, X19, [X31 + 0x30]
	0x03C939D8 LDP X22, X21, [X31 + 0x20]
	0x03C939DC LDP X24, X23, [X31 + 0x10]
	0x03C939E0 LDP X30, X25, [X31], #0x40
	0x03C939E4 B 0x212E7E0
	0x03C939E8 STP X30, X25, [X31 - 0x40]!
	0x03C939EC STP X24, X23, [X31 + 0x10]
	0x03C939F0 STP X22, X21, [X31 + 0x20]
	0x03C939F4 STP X20, X19, [X31 + 0x30]
	0x03C939F8 ADRP X21, 0x754000
	0x03C939FC ADRP X20, 0x4CD000
	0x03C93A00 LDRB W8, [X21 + 0xB8]
	0x03C93A04 LDR X20, [X20 + 0xCA0]
	0x03C93A08 MOV X19, X0
	0x03C93A0C TBNZ X8, 0x0, 0x3C93A6C
	0x03C93A10 ADRP X0, 0x4CD000
	0x03C93A14 LDR X0, [X0 + 0xCA8]
	0x03C93A18 BL 0x1C16CF4
	0x03C93A1C ADRP X0, 0x4CD000
	0x03C93A20 LDR X0, [X0 + 0xCB0]
	0x03C93A24 BL 0x1C16CF4
	0x03C93A28 ADRP X0, 0x4CD000
	0x03C93A2C LDR X0, [X0 + 0xCA0]
	0x03C93A30 BL 0x1C16CF4
	0x03C93A34 ADRP X0, 0x4CD000
	0x03C93A38 LDR X0, [X0 + 0xCB8]
	0x03C93A3C BL 0x1C16CF4
	0x03C93A40 ADRP X0, 0x4CD000
	0x03C93A44 LDR X0, [X0 + 0xCC0]
	0x03C93A48 BL 0x1C16CF4
	0x03C93A4C ADRP X0, 0x4CD000
	0x03C93A50 LDR X0, [X0 + 0xCC8]
	0x03C93A54 BL 0x1C16CF4
	0x03C93A58 ADRP X0, 0x4CD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x755000
	006 Move X21, 0x489000
	007 Move W8, [X20+127]
	008 Move X21, [X21+1768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x48A000
	015 Move X0, [X0+1976]
	016 Call 0x1C17CF4
	017 Move X0, 0x489000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+127], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Call TypeUtility.GetTypeConstructor, X0
	029 Compare X0, 0
	030 JumpIfEqual {59}
	031 Move X10, 0x48A000
	032 Move X8, [X0]
	033 Move X10, [X10+1976]
	034 Move X19, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X19
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X2, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 CallNoReturn X2
	059 Call 0x1C17F20

Method: System.Boolean CanBeInstantiated()

Disassembly:
	0x0229FD94 LDR X0, [X8 + 0x10]
	0x0229FD98 LDRB W8, [X0 + 0x135]
	0x0229FD9C TBNZ X8, 0x0, 0x229FDA4
	0x0229FDA0 BL 0x1C5C684
	0x0229FDA4 LDR X8, [X0 + 0xB8]
	0x0229FDA8 LDR X8, [X8]
	0x0229FDAC CBZ X8, 0x229FDD4
	0x0229FDB0 LDR X8, [X19 + 0x38]
	0x0229FDB4 LDR X0, [X8 + 0x10]
	0x0229FDB8 LDRB W8, [X0 + 0x135]
	0x0229FDBC TBNZ X8, 0x0, 0x229FDC4
	0x0229FDC0 BL 0x1C5C684
	0x0229FDC4 LDR X8, [X0 + 0xB8]
	0x0229FDC8 LDR X0, [X8]
	0x0229FDCC LDP X30, X19, [X31], #0x10
	0x0229FDD0 RET
	0x0229FDD4 ADRP X8, 0x1E7C000
	0x0229FDD8 LDR X8, [X8 + 0x6E8]
	0x0229FDDC LDR X0, [X8]
	0x0229FDE0 LDR W8, [X0 + 0xE0]
	0x0229FDE4 CBNZ W8, 0x229FDEC
	0x0229FDE8 BL 0x1C16DFC
	0x0229FDEC LDR X8, [X19 + 0x38]
	0x0229FDF0 LDR X0, [X8 + 0x18]
	0x0229FDF4 LDP X30, X19, [X31], #0x10
	0x0229FDF8 B 0x229F31C
	0x0229FDFC STP X30, X19, [X31 - 0x10]!
	0x0229FE00 LDR X8, [X0 + 0x38]
	0x0229FE04 MOV X19, X0
	0x0229FE08 CBNZ X8, 0x229FE2C
	0x0229FE0C ADRP X0, 0x1E7C000
	0x0229FE10 LDR X0, [X0 + 0x6E8]
	0x0229FE14 BL 0x1C16CF4
	0x0229FE18 LDR X8, [X19 + 0x38]
	0x0229FE1C CBNZ X8, 0x229FE2C
	0x0229FE20 MOV X0, X19
	0x0229FE24 BL 0x1C5C6E0
	0x0229FE28 LDR X8, [X19 + 0x38]
	0x0229FE2C LDR X0, [X8 + 0x10]
	0x0229FE30 LDRB W8, [X0 + 0x135]
	0x0229FE34 TBNZ X8, 0x0, 0x229FE3C
	0x0229FE38 BL 0x1C5C684
	0x0229FE3C LDR X8, [X0 + 0xB8]
	0x0229FE40 LDR X8, [X8]
	0x0229FE44 CBZ X8, 0x229FE6C
	0x0229FE48 LDR X8, [X19 + 0x38]
	0x0229FE4C LDR X0, [X8 + 0x10]
	0x0229FE50 LDRB W8, [X0 + 0x135]
	0x0229FE54 TBNZ X8, 0x0, 0x229FE5C
	0x0229FE58 BL 0x1C5C684
	0x0229FE5C LDR X8, [X0 + 0xB8]
	0x0229FE60 LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {18}
	007 Move X0, 0x1E7E000
	008 Move X0, [X0+1976]
	009 Call 0x1C17CF4
	010 Move X0, 0x1E7D000
	011 Move X0, [X0+1768]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, 0x1E7D000
	019 Move X8, [X8+1768]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X8, [X19+56]
	026 Move X0, [X8]
	027 Move X8, [X0]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {57}
	031 Move X10, 0x1E7E000
	032 Move X8, [X0]
	033 Move X10, [X10+1976]
	034 Move X19, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X19
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X2, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 Move X30, [X31+16]
	055 Move X19, [X31+24]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Void SetExplicitInstantiationMethod(System.Func`1<T> constructor)

Disassembly:
	0x022A1A9C B.LS 0x22A1FE8
	0x022A1AA0 LDR X8, [X31 + 0x40]
	0x022A1AA4 LDR V0, [X31 + 0x3]
	0x022A1AA8 STR X8, [X22 + 0x48]
	0x022A1AAC STUR V0, [X22 + 0x38]
	0x022A1AB0 LDR X0, [X31 + 0x178]
	0x022A1AB4 CBZ X0, 0x22A1FE4
	0x022A1AB8 LDR X2, [X23]
	0x022A1ABC MOV W1, W31
	0x022A1AC0 BL 0x304F2B0
	0x022A1AC4 CBZ X1, 0x22A1FE4
	0x022A1AC8 MOV X0, X1
	0x022A1ACC MOV X1, X31
	0x022A1AD0 BL 0x3E057F0
	0x022A1AD4 CBZ X0, 0x22A1FE4
	0x022A1AD8 LDR W8, [X0 + 0x18]
	0x022A1ADC CBZ W8, 0x22A1FE8
	0x022A1AE0 LDR X0, [X0 + 0x20]
	0x022A1AE4 CBZ X0, 0x22A1FE4
	0x022A1AE8 MOV X1, X31
	0x022A1AEC BL 0x3E05D14
	0x022A1AF0 MOV X21, X0
	0x022A1AF4 ADD X8, X31, 0x18
	0x022A1AF8 MOV X0, X20
	0x022A1AFC MOV X1, X31
	0x022A1B00 BL 0x3E067F8
	0x022A1B04 LDUR V0, [X31 + 0x18]
	0x022A1B08 LDR X8, [X31 + 0x28]
	0x022A1B0C STR V0, [X31 + 0xD]
	0x022A1B10 STR X8, [X31 + 0xE0]
	0x022A1B14 CBZ X21, 0x22A1FE4
	0x022A1B18 LDR V0, [X31 + 0xD]
	0x022A1B1C LDR X8, [X31 + 0xE0]
	0x022A1B20 STR V0, [X31]
	0x022A1B24 STR X8, [X31 + 0x10]
	0x022A1B28 LDR W8, [X21 + 0x18]
	0x022A1B2C CMP W8, 0x2
	0x022A1B30 B.LS 0x22A1FE8
	0x022A1B34 LDR X8, [X31 + 0x10]
	0x022A1B38 LDR V0, [X31]
	0x022A1B3C STR X8, [X21 + 0x60]
	0x022A1B40 STR V0, [X21 + 0x5]
	0x022A1B44 B 0x22A1F4C
	0x022A1B48 CBZ X20, 0x22A1E5C
	0x022A1B4C LDR X2, [X9]
	0x022A1B50 ADD X0, X8, 0x60
	0x022A1B54 MOV X1, X22
	0x022A1B58 BL 0x272520C
	0x022A1B5C STP X0, X1, [X31 + 0x170]
	0x022A1B60 CBZ X1, 0x22A1FE4
	0x022A1B64 ADRP X22, 0x1E7B000
	0x022A1B68 LDR X22, [X22 + 0x828]
	0x022A1B6C MOV X0, X1
	0x022A1B70 MOV W1, W31
	0x022A1B74 LDR X2, [X22]
	0x022A1B78 BL 0x304F2B0
	0x022A1B7C CBZ X1, 0x22A1FE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X21, X1
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {18}
	010 Move X0, 0x1E7B000
	011 Move X0, [X0+1768]
	012 Call 0x1C17CF4
	013 Move X8, [X21+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X21
	017 Call 0x1C5D6E0
	018 Move X8, 0x1E7B000
	019 Move X8, [X8+1768]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X8, [X21+56]
	026 Move X0, [X8]
	027 Call 0x22A0D64
	028 Compare X0, 0
	029 JumpIfEqual {67}
	030 Move X8, [X21+56]
	031 Move X20, X0
	032 Move X1, [X8+8]
	033 Move W8, [X1+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X1
	039 Call 0x1C5D684
	040 Move X1, X0
	041 Move X8, [X20]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 1
	052 Move X0, X20
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 1
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X3, [X0]
	059 Move X2, [X0+8]
	060 Move X0, X20
	061 Move X1, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 CallNoReturn X3
	067 Call 0x1C17F20

Method: T Instantiate()

Disassembly:
	0x022A0E98 STUR X8, [X29 - 0x8]
	0x022A0E9C LDR X8, [X2 + 0x38]
	0x022A0EA0 CBNZ X8, 0x22A0EDC
	0x022A0EA4 ADRP X0, 0x1E7C000
	0x022A0EA8 LDR X0, [X0 + 0x7B8]
	0x022A0EAC BL 0x1C16CF4
	0x022A0EB0 ADRP X0, 0x1E7B000
	0x022A0EB4 LDR X0, [X0 + 0x6E8]
	0x022A0EB8 BL 0x1C16CF4
	0x022A0EBC ADRP X0, 0x1E53000
	0x022A0EC0 LDR X0, [X0 + 0x6C0]
	0x022A0EC4 BL 0x1C16CF4
	0x022A0EC8 LDR X8, [X20 + 0x38]
	0x022A0ECC CBNZ X8, 0x22A0EDC
	0x022A0ED0 MOV X0, X20
	0x022A0ED4 BL 0x1C5C6E0
	0x022A0ED8 LDR X8, [X20 + 0x38]
	0x022A0EDC LDR X9, [X8 + 0x10]
	0x022A0EE0 LDR W21, [X9 + 0xFC]
	0x022A0EE4 ADD X9, X31, 0x0
	0x022A0EE8 ADD X10, X21, 0xF
	0x022A0EEC AND X10, X10, 0x1FFFFFFFF
	0x022A0EF0 SUB X22, X9, X10
	0x022A0EF4 ADD X31, X22, 0x0
	0x022A0EF8 ADRP X9, 0x1E53000
	0x022A0EFC LDR X9, [X9 + 0x6C0]
	0x022A0F00 LDR X24, [X8]
	0x022A0F04 LDR X0, [X9]
	0x022A0F08 LDR W9, [X0 + 0xE0]
	0x022A0F0C CBNZ W9, 0x22A0F14
	0x022A0F10 BL 0x1C16DFC
	0x022A0F14 MOV X0, X24
	0x022A0F18 MOV X1, X31
	0x022A0F1C BL 0x338C698
	0x022A0F20 CBZ X0, 0x22A10D4
	0x022A0F24 LDR X8, [X0]
	0x022A0F28 MOV X1, X23
	0x022A0F2C LDR X9, [X8 + 0x2A8]
	0x022A0F30 LDR X2, [X8 + 0x2B0]
	0x022A0F34 BLR X9
	0x022A0F38 TBZ X0, 0x0, 0x22A0FB0
	0x022A0F3C ADRP X8, 0x1E7B000
	0x022A0F40 LDR X8, [X8 + 0x6E8]
	0x022A0F44 LDR X0, [X8]
	0x022A0F48 LDR W8, [X0 + 0xE0]
	0x022A0F4C CBNZ W8, 0x22A0F54
	0x022A0F50 BL 0x1C16DFC
	0x022A0F54 MOV X0, X23
	0x022A0F58 MOV X1, X31
	0x022A0F5C BL 0x3C928D8
	0x022A0F60 CBZ X0, 0x22A10D4
	0x022A0F64 ADRP X24, 0x1E7C000
	0x022A0F68 LDR X8, [X0]
	0x022A0F6C LDR X24, [X24 + 0x7B8]
	0x022A0F70 MOV X23, X0
	0x022A0F74 LDRH W9, [X8 + 0x12E]
	0x022A0F78 LDR X1, [X24]
	0x022A0F7C CBZ X9, 0x22A0FA0
	0x022A0F80 LDR X10, [X8 + 0xB0]
	0x022A0F84 ADD X10, X10, 0x8
	0x022A0F88 LDUR X11, [X10 - 0x8]
	0x022A0F8C CMP X11, X1
	0x022A0F90 B.EQ 0x22A0FC4
	0x022A0F94 SUBS X9, X9, 0x1
	0x022A0F98 ADD X10, X10, 0x10
	0x022A0F9C B.NE 0x22A0F88
	0x022A0FA0 MOV X0, X23
	0x022A0FA4 MOV W2, W31
	0x022A0FA8 BL 0x1C5C788
	0x022A0FAC B 0x22A0FD0
	0x022A0FB0 MOV X0, X19
	0x022A0FB4 MOV W1, W31
	0x022A0FB8 MOV X2, X21
	0x022A0FBC BL 0x3EB1B10
	0x022A0FC0 B 0x22A1020
	0x022A0FC4 LDRSW X9, [X10]
	0x022A0FC8 ADD X8, X8, X9, 0x4, LSL
	0x022A0FCC ADD X0, X8, 0x138
	0x022A0FD0 LDP X8, X1, [X0]
	0x022A0FD4 MOV X0, X23
	0x022A0FD8 BLR X8
	0x022A0FDC TBZ X0, 0x0, 0x22A1020
	0x022A0FE0 LDR X8, [X23]
	0x022A0FE4 LDR X1, [X24]
	0x022A0FE8 LDRH W9, [X8 + 0x12E]
	0x022A0FEC CBZ X9, 0x22A1010
	0x022A0FF0 LDR X10, [X8 + 0xB0]
	0x022A0FF4 ADD X10, X10, 0x8
	0x022A0FF8 LDUR X11, [X10 - 0x8]
	0x022A0FFC CMP X11, X1
	0x022A1000 B.EQ 0x22A1038
	0x022A1004 SUBS X9, X9, 0x1
	0x022A1008 ADD X10, X10, 0x10
	0x022A100C B.NE 0x22A0FF8
	0x022A1010 MOVZ W2, 0x1
	0x022A1014 MOV X0, X23
	0x022A1018 BL 0x1C5C788
	0x022A101C B 0x22A1048
	0x022A1020 MOV X0, X19
	0x022A1024 MOV W1, W31
	0x022A1028 MOV X2, X21
	0x022A102C BL 0x3EB1B10
	0x022A1030 MOV W0, W31
	0x022A1034 B 0x22A10A8
	0x022A1038 LDR W9, [X10]
	0x022A103C ADD W9, W9, 0x1
	0x022A1040 ADD X8, X8, W9, 0x4, SXTW
	0x022A1044 ADD X0, X8, 0x138
	0x022A1048 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X23, X1
	015 Move X19, X0
	016 Move [X29-8], X8
	017 Move X24, [X1+56]
	018 Compare X24, 0
	019 JumpIfNotEqual {29}
	020 Move X0, 0x1E7C000
	021 Move X0, [X0+1768]
	022 Call 0x1C17CF4
	023 Move X24, [X23+56]
	024 Compare X24, 0
	025 JumpIfNotEqual {29}
	026 Move X0, X23
	027 Call 0x1C5D6E0
	028 Move X24, [X23+56]
	029 Move X8, [X24+32]
	030 Move W20, [X8+252]
	031 Add X8, X31, 0
	032 Add X9, X20, 15
	033 And X9, X9, 0x1FFFFFFFF
	034 Subtract X21, X8, X9
	035 Add X31, X21, 0
	036 Add X8, X31, 0
	037 Subtract X22, X8, X9
	038 Add X31, X22, 0
	039 Move X0, X22
	040 Move W1, W31
	041 Move X2, X20
	042 Call 0x3EB2B10
	043 Move X8, 0x1E7C000
	044 Move X8, [X8+1768]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X24, [X23+56]
	051 Move X0, [X24]
	052 Move X8, [X0]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X23+56]
	055 Move X24, X0
	056 Move X1, [X8+16]
	057 Move X8, [X1]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X24, 0
	060 JumpIfEqual {121}
	061 Move X8, [X23+56]
	062 Move X1, [X8+8]
	063 Move W8, [X1+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Move X0, X1
	069 Call 0x1C5D684
	070 Move X1, X0
	071 Move X8, [X24]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X24
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move [X29-16], X21
	088 Move X1, [X0+8]
	089 Subtract X3, X29, 16
	090 Move X2, X24
	091 Move X4, X21
	092 Move X0, [X1+8]
	093 Move X8, [X1+16]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X0, X22
	096 Move X1, X21
	097 Move X2, X20
	098 Call 0x3EB2AC0
	099 Move X0, X21
	100 Move X1, X22
	101 Move X2, X20
	102 Call 0x3EB2AC0
	103 Move X0, X19
	104 Move X1, X21
	105 Move X2, X20
	106 Call 0x3EB2AC0
	107 Move X8, [X25+40]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X31, X29, 0
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X25, [X31+16]
	118 Move X29, [X31+80]
	119 Move X30, [X31+88]
	120 Return X0
	121 Call 0x1C17F20
	122 Call 0x3EB2B20

Method: System.Boolean TryInstantiate(out T instance)

Disassembly:
	0x022A1C68 CBZ W8, 0x22A1FE8
	0x022A1C6C LDR X0, [X0 + 0x20]
	0x022A1C70 CBZ X0, 0x22A1FE4
	0x022A1C74 MOV X1, X31
	0x022A1C78 BL 0x3E05D14
	0x022A1C7C MOV X21, X0
	0x022A1C80 ADD X8, X31, 0xD0
	0x022A1C84 MOV X0, X20
	0x022A1C88 MOV X1, X31
	0x022A1C8C BL 0x3E067F8
	0x022A1C90 LDR V0, [X31 + 0xD]
	0x022A1C94 LDR X8, [X31 + 0xE0]
	0x022A1C98 STR V0, [X31 + 0x13]
	0x022A1C9C STR X8, [X31 + 0x140]
	0x022A1CA0 CBZ X21, 0x22A1FE4
	0x022A1CA4 LDR V0, [X31 + 0x13]
	0x022A1CA8 LDR X8, [X31 + 0x140]
	0x022A1CAC STR V0, [X31 + 0xB]
	0x022A1CB0 STR X8, [X31 + 0xC0]
	0x022A1CB4 LDR W8, [X21 + 0x18]
	0x022A1CB8 CMP W8, 0x1
	0x022A1CBC B.LS 0x22A1FE8
	0x022A1CC0 LDR X8, [X31 + 0xC0]
	0x022A1CC4 LDR V0, [X31 + 0xB]
	0x022A1CC8 STR X8, [X21 + 0x48]
	0x022A1CCC STUR V0, [X21 + 0x38]
	0x022A1CD0 B 0x22A1F4C
	0x022A1CD4 LDR X2, [X9]
	0x022A1CD8 ADD X0, X8, 0x50
	0x022A1CDC MOV X1, X22
	0x022A1CE0 BL 0x272520C
	0x022A1CE4 STP X0, X1, [X31 + 0x170]
	0x022A1CE8 CBZ X1, 0x22A1FE4
	0x022A1CEC ADRP X22, 0x1E7B000
	0x022A1CF0 LDR X22, [X22 + 0x828]
	0x022A1CF4 MOV X0, X1
	0x022A1CF8 MOV W1, W31
	0x022A1CFC LDR X2, [X22]
	0x022A1D00 BL 0x304F2B0
	0x022A1D04 CBZ X1, 0x22A1FE4
	0x022A1D08 MOV X0, X1
	0x022A1D0C MOV X1, X31
	0x022A1D10 BL 0x3E057F0
	0x022A1D14 CBZ X0, 0x22A1FE4
	0x022A1D18 LDR W8, [X0 + 0x18]
	0x022A1D1C CBZ W8, 0x22A1FE8
	0x022A1D20 LDR X0, [X0 + 0x20]
	0x022A1D24 CBZ X0, 0x22A1FE4
	0x022A1D28 MOV X1, X31
	0x022A1D2C BL 0x3E05D14
	0x022A1D30 LDR X8, [X19 + 0x38]
	0x022A1D34 MOV X20, X0
	0x022A1D38 LDR X8, [X8 + 0x18]
	0x022A1D3C LDRB W9, [X8 + 0x135]
	0x022A1D40 TBNZ X9, 0x0, 0x22A1D50
	0x022A1D44 MOV X0, X8
	0x022A1D48 BL 0x1C5C684
	0x022A1D4C MOV X8, X0
	0x022A1D50 LDR W9, [X8 + 0xE0]
	0x022A1D54 CBNZ W9, 0x22A1D60
	0x022A1D58 MOV X0, X8
	0x022A1D5C BL 0x1C16DFC
	0x022A1D60 LDR X8, [X19 + 0x38]
	0x022A1D64 LDR X0, [X8 + 0x18]
	0x022A1D68 LDRB W8, [X0 + 0x135]
	0x022A1D6C TBNZ X8, 0x0, 0x22A1D74
	0x022A1D70 BL 0x1C5C684
	0x022A1D74 LDR X8, [X0 + 0xB8]
	0x022A1D78 MOV X1, X31
	0x022A1D7C LDR X0, [X8]
	0x022A1D80 ADD X8, X31, 0x130
	0x022A1D84 BL 0x3E06828
	0x022A1D88 LDR V0, [X31 + 0x13]
	0x022A1D8C LDR X8, [X31 + 0x140]
	0x022A1D90 STR V0, [X31 + 0x15]
	0x022A1D94 STR X8, [X31 + 0x160]
	0x022A1D98 CBZ X20, 0x22A1FE4
	0x022A1D9C LDR V0, [X31 + 0x15]
	0x022A1DA0 LDR X8, [X31 + 0x160]
	0x022A1DA4 STR V0, [X31 + 0x9]
	0x022A1DA8 STR X8, [X31 + 0xA0]
	0x022A1DAC LDR W8, [X20 + 0x18]
	0x022A1DB0 CBZ W8, 0x22A1FE8
	0x022A1DB4 LDR X8, [X31 + 0xA0]
	0x022A1DB8 LDR V0, [X31 + 0x9]
	0x022A1DBC STR X8, [X20 + 0x30]
	0x022A1DC0 STR V0, [X20 + 0x2]
	0x022A1DC4 LDR X0, [X31 + 0x178]
	0x022A1DC8 CBZ X0, 0x22A1FE4
	0x022A1DCC LDR X2, [X22]
	0x022A1DD0 MOV W1, W31
	0x022A1DD4 BL 0x304F2B0
	0x022A1DD8 CBZ X1, 0x22A1FE4
	0x022A1DDC MOV X0, X1
	0x022A1DE0 MOV X1, X31
	0x022A1DE4 BL 0x3E057F0
	0x022A1DE8 CBZ X0, 0x22A1FE4
	0x022A1DEC LDR W8, [X0 + 0x18]
	0x022A1DF0 CBZ W8, 0x22A1FE8
	0x022A1DF4 LDR X0, [X0 + 0x20]
	0x022A1DF8 CBZ X0, 0x22A1FE4
	0x022A1DFC MOV X1, X31
	0x022A1E00 BL 0x3E05D14
	0x022A1E04 MOV X20, X0
	0x022A1E08 ADD X8, X31, 0xD0
	0x022A1E0C MOV X0, X21
	0x022A1E10 MOV X1, X31
	0x022A1E14 BL 0x3E06810
	0x022A1E18 LDR V0, [X31 + 0xD]
	0x022A1E1C LDR X8, [X31 + 0xE0]
	0x022A1E20 STR V0, [X31 + 0x13]
	0x022A1E24 STR X8, [X31 + 0x140]
	0x022A1E28 CBZ X20, 0x22A1FE4
	0x022A1E2C LDR V0, [X31 + 0x13]
	0x022A1E30 LDR X8, [X31 + 0x140]
	0x022A1E34 STR V0, [X31 + 0x7]
	0x022A1E38 STR X8, [X31 + 0x80]
	0x022A1E3C LDR W8, [X20 + 0x18]
	0x022A1E40 CMP W8, 0x1
	0x022A1E44 B.LS 0x22A1FE8
	0x022A1E48 LDR X8, [X31 + 0x80]
	0x022A1E4C LDR V0, [X31 + 0x7]
	0x022A1E50 STR X8, [X20 + 0x48]
	0x022A1E54 STUR V0, [X20 + 0x38]
	0x022A1E58 B 0x22A1F4C
	0x022A1E5C LDR X2, [X9]
	0x022A1E60 ADD X0, X8, 0x40
	0x022A1E64 MOV X1, X22

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X19, X1
	014 Move X20, X0
	015 Move [X29-8], X8
	016 Move X8, [X1+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {31}
	019 Move X0, 0x1E7C000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move X0, 0x1E7B000
	023 Move X0, [X0+1768]
	024 Call 0x1C17CF4
	025 Move X8, [X19+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X19
	029 Call 0x1C5D6E0
	030 Move X8, [X19+56]
	031 Move X9, [X8+32]
	032 Move W21, [X9+252]
	033 Add X9, X31, 0
	034 Add X10, X21, 15
	035 And X10, X10, 0x1FFFFFFFF
	036 Subtract X22, X9, X10
	037 Add X31, X22, 0
	038 Move X9, 0x1E7B000
	039 Move X9, [X9+1768]
	040 Move X0, [X9]
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X8, [X19+56]
	046 Move X0, [X8]
	047 Move X8, [X0]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X0, 0
	050 JumpIfEqual {144}
	051 Move X10, 0x1E7C000
	052 Move X8, [X0]
	053 Move X10, [X10+1976]
	054 Move X23, X0
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X23
	066 Move W2, W31
	067 Call 0x1C5D788
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X23
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {102}
	079 Move X8, [X19+56]
	080 Move X1, [X8+8]
	081 Move W8, [X1+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Move X0, X1
	087 Call 0x1C5D684
	088 Move X1, X0
	089 Move X8, [X23]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X23
	100 Move W2, W31
	101 Call 0x1C5D788
	102 Move X0, X20
	103 Move W1, W31
	104 Move X2, X21
	105 Call 0x3EB2B10
	106 Move W0, W31
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move [X29-16], X22
	111 Move X1, [X0+8]
	112 Subtract X3, X29, 16
	113 Move X2, X23
	114 Move X4, X22
	115 Move X0, [X1+8]
	116 Move X8, [X1+16]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X0, X20
	119 Move X1, X22
	120 Move X2, X21
	121 Call 0x3EB2AC0
	122 Move X8, [X19+56]
	123 Move X0, [X8+32]
	124 Move W8, [X0+309]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {130}
	129 Call 0x1C5D684
	130 Move W0, 1
	131 Move X8, [X24+40]
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X31, X29, 0
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Move X22, [X31+32]
	138 Move X21, [X31+40]
	139 Move X24, [X31+16]
	140 Move X23, [X31+24]
	141 Move X29, [X31+64]
	142 Move X30, [X31+72]
	143 Return X0
	144 Call 0x1C17F20
	145 Call 0x3EB2B20

Method: T Instantiate(System.Type derivedType)

Disassembly:
	0x022A104C MOV X0, X23
	0x022A1050 BLR X8
	0x022A1054 LDR X8, [X20 + 0x38]
	0x022A1058 MOV X23, X0
	0x022A105C LDR X1, [X8 + 0x10]
	0x022A1060 LDRB W8, [X1 + 0x135]
	0x022A1064 TBNZ X8, 0x0, 0x22A1074
	0x022A1068 MOV X0, X1
	0x022A106C BL 0x1C5C684
	0x022A1070 MOV X1, X0
	0x022A1074 MOV X0, X23
	0x022A1078 MOV X2, X22
	0x022A107C BL 0x1C16E10
	0x022A1080 MOV X1, X0
	0x022A1084 MOV X0, X19
	0x022A1088 MOV X2, X21
	0x022A108C BL 0x3EB1AC0
	0x022A1090 LDR X8, [X20 + 0x38]
	0x022A1094 LDR X0, [X8 + 0x10]
	0x022A1098 LDRB W8, [X0 + 0x135]
	0x022A109C TBNZ X8, 0x0, 0x22A10A4
	0x022A10A0 BL 0x1C5C684
	0x022A10A4 MOVZ W0, 0x1
	0x022A10A8 LDR X8, [X25 + 0x28]
	0x022A10AC LDUR X9, [X29 - 0x8]
	0x022A10B0 CMP X8, X9
	0x022A10B4 B.NE 0x22A10D8
	0x022A10B8 ADD X31, X29, 0x0
	0x022A10BC LDP X20, X19, [X31 + 0x40]
	0x022A10C0 LDP X22, X21, [X31 + 0x30]
	0x022A10C4 LDP X24, X23, [X31 + 0x20]
	0x022A10C8 LDR X25, [X31 + 0x10]
	0x022A10CC LDP X29, X30, [X31], #0x50
	0x022A10D0 RET
	0x022A10D4 BL 0x1C16F20
	0x022A10D8 BL 0x3EB1B20
	0x022A10DC STP X29, X30, [X31 - 0x50]!
	0x022A10E0 STP X26, X25, [X31 + 0x10]
	0x022A10E4 STP X24, X23, [X31 + 0x20]
	0x022A10E8 STP X22, X21, [X31 + 0x30]
	0x022A10EC STP X20, X19, [X31 + 0x40]
	0x022A10F0 ADD X29, X31, 0x0
	0x022A10F4 SUB X31, X31, 0x20
	0x022A10F8 MRS X25, 0xC000
	0x022A10FC LDR X8, [X25 + 0x28]
	0x022A1100 MOV X20, X2
	0x022A1104 MOV X19, X1
	0x022A1108 MOV W22, W0
	0x022A110C STUR X8, [X29 - 0x8]
	0x022A1110 LDR X8, [X2 + 0x38]
	0x022A1114 CBNZ X8, 0x22A1144
	0x022A1118 ADRP X0, 0x1E7B000
	0x022A111C LDR X0, [X0 + 0x2C8]
	0x022A1120 BL 0x1C16CF4
	0x022A1124 ADRP X0, 0x1E52000
	0x022A1128 LDR X0, [X0 + 0x6C0]
	0x022A112C BL 0x1C16CF4
	0x022A1130 LDR X8, [X20 + 0x38]
	0x022A1134 CBNZ X8, 0x22A1144
	0x022A1138 MOV X0, X20
	0x022A113C BL 0x1C5C6E0
	0x022A1140 LDR X8, [X20 + 0x38]
	0x022A1144 LDR X9, [X8 + 0x8]
	0x022A1148 LDR W21, [X9 + 0xFC]
	0x022A114C ADD X9, X31, 0x0
	0x022A1150 ADD X10, X21, 0xF
	0x022A1154 AND X10, X10, 0x1FFFFFFFF
	0x022A1158 SUB X23, X9, X10
	0x022A115C ADD X31, X23, 0x0
	0x022A1160 TBNZ X22, 0x1F, 0x22A1328
	0x022A1164 ADRP X9, 0x1E7B000
	0x022A1168 LDR X9, [X9 + 0x2C8]
	0x022A116C LDR X0, [X9]
	0x022A1170 LDR W9, [X0 + 0xE0]
	0x022A1174 CBNZ W9, 0x22A1180
	0x022A1178 BL 0x1C16DFC
	0x022A117C LDR X8, [X20 + 0x38]
	0x022A1180 LDR X0, [X8 + 0x10]
	0x022A1184 LDR X8, [X0]
	0x022A1188 BLR X8
	0x022A118C LDR X8, [X20 + 0x38]
	0x022A1190 MOV X24, X0
	0x022A1194 LDR X1, [X8 + 0x20]
	0x022A1198 LDRB W8, [X1 + 0x135]
	0x022A119C TBNZ X8, 0x0, 0x22A11AC
	0x022A11A0 MOV X0, X1
	0x022A11A4 BL 0x1C5C684
	0x022A11A8 MOV X1, X0
	0x022A11AC MOV X0, X24
	0x022A11B0 BL 0x1C16E00
	0x022A11B4 CBZ X0, 0x22A12A8
	0x022A11B8 LDR X8, [X20 + 0x38]
	0x022A11BC MOV X24, X0
	0x022A11C0 LDR X1, [X8 + 0x20]
	0x022A11C4 LDRB W8, [X1 + 0x135]
	0x022A11C8 TBNZ X8, 0x0, 0x22A11D8
	0x022A11CC MOV X0, X1
	0x022A11D0 BL 0x1C5C684
	0x022A11D4 MOV X1, X0
	0x022A11D8 STUR W22, [X29 - 0xC]
	0x022A11DC LDR X8, [X24]
	0x022A11E0 LDRH W9, [X8 + 0x12E]
	0x022A11E4 CBZ X9, 0x22A1208
	0x022A11E8 LDR X10, [X8 + 0xB0]
	0x022A11EC ADD X10, X10, 0x8
	0x022A11F0 LDUR X11, [X10 - 0x8]
	0x022A11F4 CMP X11, X1
	0x022A11F8 B.EQ 0x22A1218
	0x022A11FC SUBS X9, X9, 0x1
	0x022A1200 ADD X10, X10, 0x10
	0x022A1204 B.NE 0x22A11F0
	0x022A1208 MOV X0, X24
	0x022A120C MOV W2, W31
	0x022A1210 BL 0x1C5C788
	0x022A1214 B 0x22A1224
	0x022A1218 LDRSW X9, [X10]
	0x022A121C ADD X8, X8, X9, 0x4, LSL
	0x022A1220 ADD X0, X8, 0x138
	0x022A1224 SUB X8, X29, 0xC
	0x022A1228 STP X8, X23, [X29 - 0x20]
	0x022A122C LDR X1, [X0 + 0x8]
	0x022A1230 LDP X0, X8, [X1 + 0x8]
	0x022A1234 SUB X3, X29, 0x20
	0x022A1238 MOV X2, X24
	0x022A123C MOV X4, X23
	0x022A1240 BLR X8
	0x022A1244 MOV X0, X19
	0x022A1248 MOV X1, X23
	0x022A124C MOV X2, X21
	0x022A1250 BL 0x3EB1AC0
	0x022A1254 LDR X8, [X20 + 0x38]
	0x022A1258 LDR X0, [X8 + 0x8]
	0x022A125C LDRB W8, [X0 + 0x135]
	0x022A1260 TBNZ X8, 0x0, 0x22A1268
	0x022A1264 BL 0x1C5C684
	0x022A1268 MOVZ W0, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 16
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X27+40]
	016 Move X20, X2
	017 Move X19, X1
	018 Move X24, X0
	019 Move [X29-8], X8
	020 Move X8, [X2+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {38}
	023 Move X0, 0x1E7C000
	024 Move X0, [X0+1976]
	025 Call 0x1C17CF4
	026 Move X0, 0x1E7B000
	027 Move X0, [X0+1768]
	028 Call 0x1C17CF4
	029 Move X0, 0x1E53000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X8, [X20+56]
	033 Compare X8, 0
	034 JumpIfNotEqual {38}
	035 Move X0, X20
	036 Call 0x1C5D6E0
	037 Move X8, [X20+56]
	038 Move X8, [X8+8]
	039 Move W21, [X8+252]
	040 Add X8, X31, 0
	041 Add X9, X21, 15
	042 And X9, X9, 0x1FFFFFFFF
	043 Subtract X22, X8, X9
	044 Add X31, X22, 0
	045 Add X8, X31, 0
	046 Subtract X23, X8, X9
	047 Add X31, X23, 0
	048 Move X0, X23
	049 Move W1, W31
	050 Move X2, X21
	051 Call 0x3EB2B10
	052 Move X8, 0x1E7B000
	053 Move X8, [X8+1768]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X24
	060 Move X1, X31
	061 Call TypeUtility.GetTypeConstructor, X0
	062 Move X8, 0x1E53000
	063 Move X8, [X8+1728]
	064 Move X9, [X20+56]
	065 Move X25, X0
	066 Move X8, [X8]
	067 Move X26, [X9]
	068 Move W10, [X8+224]
	069 Compare W10, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X26
	074 Move X1, X31
	075 Call Type.GetTypeFromHandle, X0
	076 Move X1, X24
	077 Move X2, X31
	078 Call TypeUtility.CheckIsAssignableFrom, X0, X1
	079 Move X0, X25
	080 Move X1, X24
	081 Move X2, X31
	082 Call TypeUtility.CheckCanBeInstantiated, X0, X1
	083 Compare X25, 0
	084 JumpIfEqual {151}
	085 Move X10, 0x1E7C000
	086 Move X8, [X25]
	087 Move X10, [X10+1976]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move X1, [X10]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 1
	099 Move X0, X25
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 1
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X25
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X8, [X20+56]
	110 Move X20, X0
	111 Move X1, [X8+8]
	112 Move W8, [X1+309]
	113 Move TEMP, X8
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {120}
	117 Move X0, X1
	118 Call 0x1C5D684
	119 Move X1, X0
	120 Move X0, X20
	121 Move X2, X22
	122 Call 0x1C17E10
	123 Move X1, X0
	124 Move X0, X23
	125 Move X2, X21
	126 Call 0x3EB2AC0
	127 Move X0, X22
	128 Move X1, X23
	129 Move X2, X21
	130 Call 0x3EB2AC0
	131 Move X0, X19
	132 Move X1, X22
	133 Move X2, X21
	134 Call 0x3EB2AC0
	135 Move X8, [X27+40]
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Add X31, X29, 0
	139 Move X20, [X31+80]
	140 Move X19, [X31+88]
	141 Move X22, [X31+64]
	142 Move X21, [X31+72]
	143 Move X24, [X31+48]
	144 Move X23, [X31+56]
	145 Move X26, [X31+32]
	146 Move X25, [X31+40]
	147 Move X27, [X31+16]
	148 Move X29, [X31+96]
	149 Move X30, [X31+104]
	150 Return X0
	151 Call 0x1C17F20
	152 Call 0x3EB2B20

Method: System.Boolean TryInstantiate(System.Type derivedType, out T value)

Disassembly:
	0x022A1E68 BL 0x272520C
	0x022A1E6C STP X0, X1, [X31 + 0x170]
	0x022A1E70 CBZ X1, 0x22A1FE4
	0x022A1E74 ADRP X8, 0x1E7B000
	0x022A1E78 LDR X8, [X8 + 0x828]
	0x022A1E7C MOV X0, X1
	0x022A1E80 MOV W1, W31
	0x022A1E84 LDR X2, [X8]
	0x022A1E88 BL 0x304F2B0
	0x022A1E8C CBZ X1, 0x22A1FE4
	0x022A1E90 MOV X0, X1
	0x022A1E94 MOV X1, X31
	0x022A1E98 BL 0x3E057F0
	0x022A1E9C CBZ X0, 0x22A1FE4
	0x022A1EA0 LDR W8, [X0 + 0x18]
	0x022A1EA4 CBZ W8, 0x22A1FE8
	0x022A1EA8 LDR X0, [X0 + 0x20]
	0x022A1EAC CBZ X0, 0x22A1FE4
	0x022A1EB0 MOV X1, X31
	0x022A1EB4 BL 0x3E05D14
	0x022A1EB8 LDR X8, [X19 + 0x38]
	0x022A1EBC MOV X20, X0
	0x022A1EC0 LDR X8, [X8 + 0x18]
	0x022A1EC4 LDRB W9, [X8 + 0x135]
	0x022A1EC8 TBNZ X9, 0x0, 0x22A1ED8
	0x022A1ECC MOV X0, X8
	0x022A1ED0 BL 0x1C5C684
	0x022A1ED4 MOV X8, X0
	0x022A1ED8 LDR W9, [X8 + 0xE0]
	0x022A1EDC CBNZ W9, 0x22A1EE8
	0x022A1EE0 MOV X0, X8
	0x022A1EE4 BL 0x1C16DFC
	0x022A1EE8 LDR X8, [X19 + 0x38]
	0x022A1EEC LDR X0, [X8 + 0x18]
	0x022A1EF0 LDRB W8, [X0 + 0x135]
	0x022A1EF4 TBNZ X8, 0x0, 0x22A1EFC
	0x022A1EF8 BL 0x1C5C684
	0x022A1EFC LDR X8, [X0 + 0xB8]
	0x022A1F00 MOV X1, X31
	0x022A1F04 LDR X0, [X8]
	0x022A1F08 ADD X8, X31, 0x130
	0x022A1F0C BL 0x3E06828
	0x022A1F10 LDR V0, [X31 + 0x13]
	0x022A1F14 LDR X8, [X31 + 0x140]
	0x022A1F18 STR V0, [X31 + 0x15]
	0x022A1F1C STR X8, [X31 + 0x160]
	0x022A1F20 CBZ X20, 0x22A1FE4
	0x022A1F24 LDR V0, [X31 + 0x15]
	0x022A1F28 LDR X8, [X31 + 0x160]
	0x022A1F2C STR V0, [X31 + 0x11]
	0x022A1F30 STR X8, [X31 + 0x120]
	0x022A1F34 LDR W8, [X20 + 0x18]
	0x022A1F38 CBZ W8, 0x22A1FE8
	0x022A1F3C LDR X8, [X31 + 0x120]
	0x022A1F40 LDR V0, [X31 + 0x11]
	0x022A1F44 STR X8, [X20 + 0x30]
	0x022A1F48 STR V0, [X20 + 0x2]
	0x022A1F4C ADRP X8, 0x1E7B000
	0x022A1F50 LDR X8, [X8 + 0x838]
	0x022A1F54 ADD X0, X31, 0x170
	0x022A1F58 LDR X1, [X8]
	0x022A1F5C BL 0x2725340
	0x022A1F60 LDR X8, [X19 + 0x38]
	0x022A1F64 MOV X20, X0
	0x022A1F68 LDR X1, [X8 + 0x8]
	0x022A1F6C LDRB W8, [X1 + 0x135]
	0x022A1F70 TBNZ X8, 0x0, 0x22A1F80
	0x022A1F74 MOV X0, X1
	0x022A1F78 BL 0x1C5C684
	0x022A1F7C MOV X1, X0
	0x022A1F80 MOV X0, X20
	0x022A1F84 BL 0x1C16E00
	0x022A1F88 LDR X8, [X19 + 0x38]
	0x022A1F8C MOV X20, X0
	0x022A1F90 LDR X19, [X8 + 0x8]
	0x022A1F94 LDRB W8, [X19 + 0x135]
	0x022A1F98 TBNZ X8, 0x0, 0x22A1FA8
	0x022A1F9C MOV X0, X19
	0x022A1FA0 BL 0x1C5C684
	0x022A1FA4 MOV X19, X0
	0x022A1FA8 CBZ X20, 0x22A1FC8
	0x022A1FAC MOV X0, X20
	0x022A1FB0 MOV X1, X19
	0x022A1FB4 BL 0x1C16E00
	0x022A1FB8 CBNZ X0, 0x22A1FCC
	0x022A1FBC MOV X0, X20
	0x022A1FC0 MOV X1, X19
	0x022A1FC4 BL 0x1C171E0
	0x022A1FC8 MOV X0, X31
	0x022A1FCC LDP X20, X19, [X31 + 0x1B0]
	0x022A1FD0 LDP X22, X21, [X31 + 0x1A0]
	0x022A1FD4 LDP X30, X23, [X31 + 0x190]
	0x022A1FD8 LDR X29, [X31 + 0x180]
	0x022A1FDC ADD X31, X31, 0x1C0
	0x022A1FE0 RET
	0x022A1FE4 BL 0x1C16F20
	0x022A1FE8 BL 0x1C16F28
	0x022A1FEC STR X30, [X31 - 0x20]!
	0x022A1FF0 STP X20, X19, [X31 + 0x10]
	0x022A1FF4 LDR X8, [X2 + 0x38]
	0x022A1FF8 MOV X19, X2
	0x022A1FFC MOV X20, X1
	0x022A2000 CBNZ X8, 0x22A200C
	0x022A2004 MOV X0, X19
	0x022A2008 BL 0x1C5C6E0
	0x022A200C CBZ X20, 0x22A2028
	0x022A2010 LDR X8, [X19 + 0x38]
	0x022A2014 MOV X0, X20
	0x022A2018 LDP X20, X19, [X31 + 0x10]
	0x022A201C LDR X1, [X8]
	0x022A2020 LDR X30, [X31], #0x20
	0x022A2024 B 0x21E51FC
	0x022A2028 BL 0x1C16F20
	0x022A202C STR X30, [X31 - 0x30]!
	0x022A2030 STP X22, X21, [X31 + 0x10]
	0x022A2034 STP X20, X19, [X31 + 0x20]
	0x022A2038 LDR X8, [X1 + 0x38]
	0x022A203C MOV X19, X1
	0x022A2040 MOV X20, X0
	0x022A2044 CBNZ X8, 0x22A2080
	0x022A2048 ADRP X0, 0x1E7A000
	0x022A204C LDR X0, [X0 + 0x858]
	0x022A2050 BL 0x1C16CF4
	0x022A2054 ADRP X0, 0x1E51000
	0x022A2058 LDR X0, [X0 + 0xA58]
	0x022A205C BL 0x1C16CF4
	0x022A2060 ADRP X0, 0x1E51000
	0x022A2064 LDR X0, [X0 + 0x598]
	0x022A2068 BL 0x1C16CF4
	0x022A206C LDR X8, [X19 + 0x38]
	0x022A2070 CBNZ X8, 0x22A2080
	0x022A2074 MOV X0, X19
	0x022A2078 BL 0x1C5C6E0
	0x022A207C LDR X8, [X19 + 0x38]
	0x022A2080 LDR X1, [X8]
	0x022A2084 LDRB W8, [X1 + 0x135]
	0x022A2088 TBNZ X8, 0x0, 0x22A2098
	0x022A208C MOV X0, X1
	0x022A2090 BL 0x1C5C684
	0x022A2094 MOV X1, X0
	0x022A2098 MOV X0, X20
	0x022A209C BL 0x1C16E00
	0x022A20A0 LDR X8, [X19 + 0x38]
	0x022A20A4 MOV X22, X0
	0x022A20A8 LDR X21, [X8]
	0x022A20AC LDRB W8, [X21 + 0x135]
	0x022A20B0 TBNZ X8, 0x0, 0x22A20C0
	0x022A20B4 MOV X0, X21
	0x022A20B8 BL 0x1C5C684
	0x022A20BC MOV X21, X0
	0x022A20C0 CBZ X22, 0x22A20E0
	0x022A20C4 MOV X0, X22
	0x022A20C8 MOV X1, X21
	0x022A20CC BL 0x1C16E00
	0x022A20D0 CBNZ X0, 0x22A2208
	0x022A20D4 MOV X0, X22
	0x022A20D8 MOV X1, X21

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X20, X2
	015 Move X19, X1
	016 Move X23, X0
	017 Move [X29-8], X8
	018 Move X8, [X2+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {36}
	021 Move X0, 0x1E7C000
	022 Move X0, [X0+1976]
	023 Call 0x1C17CF4
	024 Move X0, 0x1E7B000
	025 Move X0, [X0+1768]
	026 Call 0x1C17CF4
	027 Move X0, 0x1E53000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X8, [X20+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {36}
	033 Move X0, X20
	034 Call 0x1C5D6E0
	035 Move X8, [X20+56]
	036 Move X9, [X8+16]
	037 Move W21, [X9+252]
	038 Add X9, X31, 0
	039 Add X10, X21, 15
	040 And X10, X10, 0x1FFFFFFFF
	041 Subtract X22, X9, X10
	042 Add X31, X22, 0
	043 Move X9, 0x1E53000
	044 Move X9, [X9+1728]
	045 Move X24, [X8]
	046 Move X0, [X9]
	047 Move W9, [X0+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X24
	052 Move X1, X31
	053 Call Type.GetTypeFromHandle, X0
	054 Compare X0, 0
	055 JumpIfEqual {177}
	056 Move X8, [X0]
	057 Move X1, X23
	058 Move X9, [X8+680]
	059 Move X2, [X8+688]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {94}
	065 Move X8, 0x1E7B000
	066 Move X8, [X8+1768]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X23
	073 Move X1, X31
	074 Call TypeUtility.GetTypeConstructor, X0
	075 Compare X0, 0
	076 JumpIfEqual {177}
	077 Move X24, 0x1E7C000
	078 Move X8, [X0]
	079 Move X24, [X24+1976]
	080 Move X23, X0
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X1, [X24]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X23
	092 Move W2, W31
	093 Call 0x1C5D788
	094 Move X0, X19
	095 Move W1, W31
	096 Move X2, X21
	097 Call 0x3EB2B10
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X23
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {123}
	109 Move X8, [X23]
	110 Move X1, [X24]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move W2, 1
	121 Move X0, X23
	122 Call 0x1C5D788
	123 Move X0, X19
	124 Move W1, W31
	125 Move X2, X21
	126 Call 0x3EB2B10
	127 Move W0, W31
	128 Move W9, [X10]
	129 Add W9, W9, 1
	130 Add X8, X8, W9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X23
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, [X20+56]
	137 Move X23, X0
	138 Move X1, [X8+16]
	139 Move W8, [X1+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {147}
	144 Move X0, X1
	145 Call 0x1C5D684
	146 Move X1, X0
	147 Move X0, X23
	148 Move X2, X22
	149 Call 0x1C17E10
	150 Move X1, X0
	151 Move X0, X19
	152 Move X2, X21
	153 Call 0x3EB2AC0
	154 Move X8, [X20+56]
	155 Move X0, [X8+16]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move W0, 1
	163 Move X8, [X25+40]
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add X31, X29, 0
	167 Move X20, [X31+64]
	168 Move X19, [X31+72]
	169 Move X22, [X31+48]
	170 Move X21, [X31+56]
	171 Move X24, [X31+32]
	172 Move X23, [X31+40]
	173 Move X25, [X31+16]
	174 Move X29, [X31+80]
	175 Move X30, [X31+88]
	176 Return X0
	177 Call 0x1C17F20
	178 Call 0x3EB2B20

Method: TArray InstantiateArray(System.Int32 count = 0)

Disassembly:
	0x022A126C B 0x22A133C
	0x022A1270 CMP W1, 0x1
	0x022A1274 MOV X24, X0
	0x022A1278 B.NE 0x22A13FC
	0x022A127C MOV X0, X24
	0x022A1280 BL 0x3EB1AD0
	0x022A1284 MOV X24, X0
	0x022A1288 ADRP X0, 0x1E58000
	0x022A128C LDR X0, [X0 + 0xCC0]
	0x022A1290 BL 0x1C16D08
	0x022A1294 LDR X8, [X24]
	0x022A1298 LDR X1, [X8]
	0x022A129C BL 0x1C17270
	0x022A12A0 TBZ X0, 0x0, 0x22A13D4
	0x022A12A4 BL 0x3EB1AE0
	0x022A12A8 ADRP X26, 0x1E52000
	0x022A12AC LDR X26, [X26 + 0x6C0]
	0x022A12B0 LDR X8, [X20 + 0x38]
	0x022A12B4 LDR X0, [X26]
	0x022A12B8 LDR X24, [X8 + 0x30]
	0x022A12BC LDR W9, [X0 + 0xE0]
	0x022A12C0 CBNZ W9, 0x22A12C8
	0x022A12C4 BL 0x1C16DFC
	0x022A12C8 MOV X0, X24
	0x022A12CC MOV X1, X31
	0x022A12D0 BL 0x338C698
	0x022A12D4 CBZ X0, 0x22A13CC
	0x022A12D8 MOV X1, X31
	0x022A12DC MOV X24, X0
	0x022A12E0 BL 0x3396BF8
	0x022A12E4 TBZ X0, 0x0, 0x22A1328
	0x022A12E8 LDR X8, [X24]
	0x022A12EC MOV X0, X24
	0x022A12F0 LDR X9, [X8 + 0x428]
	0x022A12F4 LDR X1, [X8 + 0x430]
	0x022A12F8 BLR X9
	0x022A12FC LDR X8, [X26]
	0x022A1300 MOV X24, X0
	0x022A1304 LDR W9, [X8 + 0xE0]
	0x022A1308 CBNZ W9, 0x22A1314
	0x022A130C MOV X0, X8
	0x022A1310 BL 0x1C16DFC
	0x022A1314 MOV X0, X31
	0x022A1318 MOV X1, X24
	0x022A131C MOV X2, X31
	0x022A1320 BL 0x3395194
	0x022A1324 TBZ X0, 0x0, 0x22A1368
	0x022A1328 MOV X0, X19
	0x022A132C MOV W1, W31
	0x022A1330 MOV X2, X21
	0x022A1334 BL 0x3EB1B10
	0x022A1338 MOV W0, W31
	0x022A133C LDR X8, [X25 + 0x28]
	0x022A1340 LDUR X9, [X29 - 0x8]
	0x022A1344 CMP X8, X9
	0x022A1348 B.NE 0x22A13D0
	0x022A134C ADD X31, X29, 0x0
	0x022A1350 LDP X20, X19, [X31 + 0x40]
	0x022A1354 LDP X22, X21, [X31 + 0x30]
	0x022A1358 LDP X24, X23, [X31 + 0x20]
	0x022A135C LDP X26, X25, [X31 + 0x10]
	0x022A1360 LDP X29, X30, [X31], #0x50
	0x022A1364 RET
	0x022A1368 MOV X0, X24
	0x022A136C MOV W1, W22
	0x022A1370 MOV X2, X31
	0x022A1374 BL 0x33A2DF8
	0x022A1378 LDR X8, [X20 + 0x38]
	0x022A137C MOV X22, X0
	0x022A1380 LDR X1, [X8 + 0x8]
	0x022A1384 LDRB W8, [X1 + 0x135]
	0x022A1388 TBNZ X8, 0x0, 0x22A1398
	0x022A138C MOV X0, X1
	0x022A1390 BL 0x1C5C684
	0x022A1394 MOV X1, X0
	0x022A1398 MOV X0, X22
	0x022A139C MOV X2, X23
	0x022A13A0 BL 0x1C16E10
	0x022A13A4 MOV X1, X0
	0x022A13A8 MOV X0, X19
	0x022A13AC MOV X2, X21
	0x022A13B0 BL 0x3EB1AC0
	0x022A13B4 LDR X8, [X20 + 0x38]
	0x022A13B8 LDR X0, [X8 + 0x8]
	0x022A13BC LDRB W8, [X0 + 0x135]
	0x022A13C0 TBNZ X8, 0x0, 0x22A1268
	0x022A13C4 BL 0x1C5C684
	0x022A13C8 B 0x22A1268
	0x022A13CC BL 0x1C16F20
	0x022A13D0 BL 0x3EB1B20
	0x022A13D4 MOVZ W0, 0x8
	0x022A13D8 BL 0x3EB1AF0
	0x022A13DC LDR X8, [X24]
	0x022A13E0 STR X8, [X0]
	0x022A13E4 ADRP X1, 0x1C13000
	0x022A13E8 ADD X1, X1, 0xE58
	0x022A13EC MOV X2, X31
	0x022A13F0 BL 0x3EB1B00
	0x022A13F4 MOV X24, X0
	0x022A13F8 BL 0x3EB1AE0
	0x022A13FC MOV X0, X24
	0x022A1400 BL 0x1D2C690
	0x022A1404 BL 0x1990590
	0x022A1408 STP X29, X30, [X31 - 0x50]!
	0x022A140C STR X25, [X31 + 0x10]
	0x022A1410 STP X24, X23, [X31 + 0x20]
	0x022A1414 STP X22, X21, [X31 + 0x30]
	0x022A1418 STP X20, X19, [X31 + 0x40]
	0x022A141C ADD X29, X31, 0x0
	0x022A1420 SUB X31, X31, 0x10
	0x022A1424 STP X3, X4, [X29 - 0x10]
	0x022A1428 LDR X8, [X5 + 0x38]
	0x022A142C MOV X23, X5
	0x022A1430 MOV X20, X4
	0x022A1434 MOV X22, X3
	0x022A1438 MOV X25, X2
	0x022A143C MOV X24, X1
	0x022A1440 MOV X19, X0
	0x022A1444 CBNZ X8, 0x22A147C
	0x022A1448 ADRP X0, 0x1E7B000
	0x022A144C LDR X0, [X0 + 0x810]
	0x022A1450 BL 0x1C16CF4
	0x022A1454 ADRP X0, 0x1E7B000
	0x022A1458 LDR X0, [X0 + 0x818]
	0x022A145C BL 0x1C16CF4
	0x022A1460 ADRP X0, 0x1E7B000
	0x022A1464 LDR X0, [X0 + 0x820]
	0x022A1468 BL 0x1C16CF4
	0x022A146C LDR X8, [X23 + 0x38]
	0x022A1470 CBNZ X8, 0x22A147C
	0x022A1474 MOV X0, X23
	0x022A1478 BL 0x1C5C6E0
	0x022A147C ADD X8, X31, 0x0
	0x022A1480 SUB X21, X8, 0x10
	0x022A1484 ADD X31, X21, 0x0
	0x022A1488 STUR X31, [X8 - 0x10]
	0x022A148C CBZ X25, 0x22A154C
	0x022A1490 LDR X8, [X23 + 0x38]
	0x022A1494 MOV X0, X25
	0x022A1498 LDR X1, [X8 + 0x8]
	0x022A149C BL 0x2D42F24
	0x022A14A0 STR X0, [X21]
	0x022A14A4 CBZ X24, 0x22A154C
	0x022A14A8 LDR X8, [X23 + 0x38]
	0x022A14AC MOV X0, X24
	0x022A14B0 LDR X1, [X8 + 0x18]
	0x022A14B4 BL 0x2D42D34
	0x022A14B8 ADRP X8, 0x1E7B000
	0x022A14BC LDR X8, [X8 + 0x810]
	0x022A14C0 MOV X23, X0
	0x022A14C4 MOV X0, X22
	0x022A14C8 MOV X1, X20
	0x022A14CC LDR X2, [X8]
	0x022A14D0 BL 0x22232A0
	0x022A14D4 ADRP X8, 0x1E7B000
	0x022A14D8 LDR X8, [X8 + 0x818]
	0x022A14DC MOV X20, X0
	0x022A14E0 SUB X0, X29, 0x10
	0x022A14E4 LDR X1, [X8]
	0x022A14E8 BL 0x24050AC
	0x022A14EC ADRP X8, 0x1E7B000
	0x022A14F0 LDR X8, [X8 + 0x820]
	0x022A14F4 LDR X19, [X19 + 0x20]
	0x022A14F8 MOV W22, W0
	0x022A14FC LDR X8, [X8]
	0x022A1500 LDR W9, [X8 + 0xE0]
	0x022A1504 CBNZ W9, 0x22A1510
	0x022A1508 MOV X0, X8
	0x022A150C BL 0x1C16DFC
	0x022A1510 MOVZ W2, 0x1
	0x022A1514 MOV X0, X23
	0x022A1518 MOV X1, X21
	0x022A151C MOV X3, X20
	0x022A1520 MOV W4, W22
	0x022A1524 MOV X5, X19
	0x022A1528 MOV X6, X31
	0x022A152C BL 0x3D1F760
	0x022A1530 ADD X31, X29, 0x0
	0x022A1534 LDP X20, X19, [X31 + 0x40]
	0x022A1538 LDP X22, X21, [X31 + 0x30]
	0x022A153C LDP X24, X23, [X31 + 0x20]
	0x022A1540 LDR X25, [X31 + 0x10]
	0x022A1544 LDP X29, X30, [X31], #0x50
	0x022A1548 RET
	0x022A154C BL 0x1C16F20
	0x022A1550 STP X29, X30, [X31 - 0x50]!
	0x022A1554 STR X25, [X31 + 0x10]
	0x022A1558 STP X24, X23, [X31 + 0x20]
	0x022A155C STP X22, X21, [X31 + 0x30]
	0x022A1560 STP X20, X19, [X31 + 0x40]
	0x022A1564 ADD X29, X31, 0x0
	0x022A1568 SUB X31, X31, 0x10
	0x022A156C STP X3, X4, [X29 - 0x10]
	0x022A1570 LDR X8, [X5 + 0x38]
	0x022A1574 MOV X24, X5
	0x022A1578 MOV X20, X4
	0x022A157C MOV X22, X3
	0x022A1580 MOV X25, X2
	0x022A1584 MOV X23, X1
	0x022A1588 MOV X19, X0
	0x022A158C CBNZ X8, 0x22A15C4
	0x022A1590 ADRP X0, 0x1E7B000
	0x022A1594 LDR X0, [X0 + 0x810]
	0x022A1598 BL 0x1C16CF4
	0x022A159C ADRP X0, 0x1E7B000
	0x022A15A0 LDR X0, [X0 + 0x818]
	0x022A15A4 BL 0x1C16CF4
	0x022A15A8 ADRP X0, 0x1E7B000
	0x022A15AC LDR X0, [X0 + 0x820]
	0x022A15B0 BL 0x1C16CF4
	0x022A15B4 LDR X8, [X24 + 0x38]
	0x022A15B8 CBNZ X8, 0x22A15C4
	0x022A15BC MOV X0, X24
	0x022A15C0 BL 0x1C5C6E0
	0x022A15C4 ADD X8, X31, 0x0
	0x022A15C8 SUB X21, X8, 0x10
	0x022A15CC ADD X31, X21, 0x0
	0x022A15D0 STUR X31, [X8 - 0x10]
	0x022A15D4 CBZ X25, 0x22A169C
	0x022A15D8 LDR X8, [X24 + 0x38]
	0x022A15DC MOV X0, X25
	0x022A15E0 LDR X1, [X8 + 0x8]
	0x022A15E4 LDR X8, [X1]
	0x022A15E8 BLR X8
	0x022A15EC STR X0, [X21]
	0x022A15F0 CBZ X23, 0x22A169C
	0x022A15F4 LDR X8, [X24 + 0x38]
	0x022A15F8 MOV X0, X23
	0x022A15FC LDR X1, [X8 + 0x18]
	0x022A1600 LDR X8, [X1]
	0x022A1604 BLR X8
	0x022A1608 ADRP X8, 0x1E7B000
	0x022A160C LDR X8, [X8 + 0x810]
	0x022A1610 MOV X23, X0
	0x022A1614 MOV X0, X22
	0x022A1618 MOV X1, X20
	0x022A161C LDR X2, [X8]
	0x022A1620 BL 0x22232A0
	0x022A1624 ADRP X8, 0x1E7B000
	0x022A1628 LDR X8, [X8 + 0x818]
	0x022A162C MOV X20, X0
	0x022A1630 SUB X0, X29, 0x10
	0x022A1634 LDR X1, [X8]
	0x022A1638 BL 0x24050AC
	0x022A163C ADRP X8, 0x1E7B000
	0x022A1640 LDR X8, [X8 + 0x820]
	0x022A1644 LDR X19, [X19 + 0x20]
	0x022A1648 MOV W22, W0
	0x022A164C LDR X8, [X8]
	0x022A1650 LDR W9, [X8 + 0xE0]
	0x022A1654 CBNZ W9, 0x22A1660
	0x022A1658 MOV X0, X8
	0x022A165C BL 0x1C16DFC
	0x022A1660 MOVZ W2, 0x1
	0x022A1664 MOV X0, X23
	0x022A1668 MOV X1, X21
	0x022A166C MOV X3, X20
	0x022A1670 MOV W4, W22
	0x022A1674 MOV X5, X19
	0x022A1678 MOV X6, X31
	0x022A167C BL 0x3D1F760
	0x022A1680 ADD X31, X29, 0x0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 32
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X19, X2
	017 Move X20, X1
	018 Move W24, W0
	019 Move [X29-8], X8
	020 Move X25, [X2+56]
	021 Compare X25, 0
	022 JumpIfNotEqual {35}
	023 Move X0, 0x1E7C000
	024 Move X0, [X0+712]
	025 Call 0x1C17CF4
	026 Move X0, 0x1E53000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X25, [X19+56]
	030 Compare X25, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X19
	033 Call 0x1C5D6E0
	034 Move X25, [X19+56]
	035 Move X8, [X25+32]
	036 Move W21, [X8+252]
	037 Add X8, X31, 0
	038 Add X9, X21, 15
	039 And X9, X9, 0x1FFFFFFFF
	040 Subtract X22, X8, X9
	041 Add X31, X22, 0
	042 Add X8, X31, 0
	043 Subtract X23, X8, X9
	044 Add X31, X23, 0
	045 Move X0, X23
	046 Move W1, W31
	047 Move X2, X21
	048 Call 0x3EB2B10
	049 Move TEMP, X24
	050 And TEMP, TEMP, -2147483648
	051 Compare TEMP, -2147483648
	052 JumpIfEqual {206}
	053 Move X8, 0x1E7C000
	054 Move X8, [X8+712]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X25, [X19+56]
	061 Move X0, [X25]
	062 Move X8, [X0]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X19+56]
	065 Move X25, X0
	066 Move X1, [X8+16]
	067 Move W8, [X1+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X1
	073 Call 0x1C5D684
	074 Move X1, X0
	075 Move X0, X25
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {104}
	079 Move X8, [X19+56]
	080 Move X25, X0
	081 Move X1, [X8+16]
	082 Move W8, [X1+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X1
	088 Call 0x1C5D684
	089 Move X1, X0
	090 Move [X29-12], W24
	091 Move X8, [X25]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X25
	102 Move W2, W31
	103 Call 0x1C5D788
	104 Move X27, 0x1E53000
	105 Move X27, [X27+1728]
	106 Move X8, [X19+56]
	107 Move X0, [X27]
	108 Move X25, [X8+40]
	109 Move W9, [X0+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X25
	114 Move X1, X31
	115 Call Type.GetTypeFromHandle, X0
	116 Compare X0, 0
	117 JumpIfEqual {230}
	118 Move X1, X31
	119 Move X25, X0
	120 Call Type.get_IsArray, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {231}
	125 Move X8, [X25]
	126 Move X0, X25
	127 Move X9, [X8+1064]
	128 Move X1, [X8+1072]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X27]
	131 Move X25, X0
	132 Move W9, [X8+224]
	133 Compare W9, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Move X0, X31
	138 Move X1, X25
	139 Move X2, X31
	140 Call Type.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {254}
	145 Move X0, X25
	146 Move W1, W24
	147 Move X2, X31
	148 Call Array.CreateInstance, X0, X1
	149 Move X8, [X19+56]
	150 Move X19, X0
	151 Move X1, [X8+32]
	152 Move W8, [X1+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {160}
	157 Move X0, X1
	158 Call 0x1C5D684
	159 Move X1, X0
	160 Move X0, X19
	161 Move X2, X22
	162 Call 0x1C17E10
	163 Move X1, X0
	164 Move X0, X23
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Subtract X8, X29, 12
	169 Move [X29-32], X8
	170 Move [X29-24], X22
	171 Move X1, [X0+8]
	172 Subtract X3, X29, 32
	173 Move X2, X25
	174 Move X4, X22
	175 Move X0, [X1+8]
	176 Move X8, [X1+16]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X0, X23
	179 Move X1, X22
	180 Move X2, X21
	181 Call 0x3EB2AC0
	182 Move X0, X22
	183 Move X1, X23
	184 Move X2, X21
	185 Call 0x3EB2AC0
	186 Move X0, X20
	187 Move X1, X22
	188 Move X2, X21
	189 Call 0x3EB2AC0
	190 Move X8, [X26+40]
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Add X31, X29, 0
	194 Move X20, [X31+80]
	195 Move X19, [X31+88]
	196 Move X22, [X31+64]
	197 Move X21, [X31+72]
	198 Move X24, [X31+48]
	199 Move X23, [X31+56]
	200 Move X26, [X31+32]
	201 Move X25, [X31+40]
	202 Move X27, [X31+16]
	203 Move X29, [X31+96]
	204 Move X30, [X31+104]
	205 Return X0
	206 Move [X29-32], W24
	207 Move X0, 0x1E53000
	208 Move X0, [X0+1880]
	209 Call 0x1C17D08
	210 Subtract X1, X29, 32
	211 Call 0x1C17E04
	212 Move X20, X0
	213 Move X0, 0x1E7C000
	214 Move X0, [X0+2008]
	215 Call 0x1C17D08
	216 Move X21, X0
	217 Move X0, 0x1E7C000
	218 Move X0, [X0+2016]
	219 Call 0x1C17D08
	220 Move X22, X0
	221 Move X0, 0x1E7B000
	222 Move X0, [X0+1608]
	223 Call 0x1C17D08
	224 Move X2, X0
	225 Move X0, X21
	226 Move X1, X22
	227 Move X3, X20
	228 Move X4, X31
	229 Call String.Format, X0, X1, X2, X3
	230 Call 0x1C17F20
	231 Move X8, [X19+56]
	232 Move X0, 0x1E53000
	233 Move X20, [X8+40]
	234 Move X0, [X0+1728]
	235 Call 0x1C17D08
	236 Call 0x19913D0
	237 Move X0, X20
	238 Move X1, X31
	239 Call Type.GetTypeFromHandle, X0
	240 Move X20, X0
	241 Call 0x19913C0
	242 Move X8, [X20]
	243 Move X0, X20
	244 Move X9, [X8+424]
	245 Move X1, [X8+432]
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X20, X0
	248 Move X0, 0x1E7C000
	249 Move X0, [X0+2024]
	250 Call 0x1C17D08
	251 Move X21, X0
	252 Move X0, 0x1E7C000
	253 Move X0, [X0+2032]
	254 Move X8, [X19+56]
	255 Move X0, 0x1E53000
	256 Move X20, [X8+40]
	257 Move X0, [X0+1728]
	258 Call 0x1C17D08
	259 Call 0x19913D0
	260 Move X0, X20
	261 Move X1, X31
	262 Call Type.GetTypeFromHandle, X0
	263 Move X20, X0
	264 Call 0x19913C0
	265 Move X8, [X20]
	266 Move X0, X20
	267 Move X9, [X8+424]
	268 Move X1, [X8+432]
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X20, X0
	271 Move X0, 0x1E7C000
	272 Move X0, [X0+2024]
	273 Call 0x1C17D08
	274 Move X21, X0
	275 Move X0, 0x1E7C000
	276 Move X0, [X0+2040]
	277 Call 0x1C17D08
	278 Move X2, X0
	279 Move X0, X21
	280 Move X1, X20
	281 Move X3, X31
	282 Call String.Concat, X0, X1, X2
	283 Move X20, X0
	284 Move X0, 0x1E5B000
	285 Move X0, [X0+1400]
	286 Call 0x1C17D08
	287 Call 0x1C17F10
	288 Move X1, X20
	289 Move X2, X31
	290 Move X21, X0
	291 Call ArgumentException..ctor, X0, X1
	292 Move X0, X21
	293 Move X1, X19
	294 Call 0x1C17DEC
	295 Call 0x3EB2B20

Method: System.Boolean TryInstantiateArray(System.Int32 count, out TArray instance)

Disassembly:
	0x022A20DC BL 0x1C171E0
	0x022A20E0 ADRP X22, 0x1E51000
	0x022A20E4 LDR X22, [X22 + 0x598]
	0x022A20E8 LDR X0, [X22]
	0x022A20EC LDR W8, [X0 + 0xE0]
	0x022A20F0 CBNZ W8, 0x22A20F8
	0x022A20F4 BL 0x1C16DFC
	0x022A20F8 MOV X0, X20
	0x022A20FC MOV X1, X31
	0x022A2100 MOV X2, X31
	0x022A2104 BL 0x3C354F8
	0x022A2108 MOV W8, W0
	0x022A210C MOV X0, X31
	0x022A2110 TBZ X8, 0x0, 0x22A2208
	0x022A2114 CBZ X20, 0x22A2134
	0x022A2118 ADRP X8, 0x1E51000
	0x022A211C LDR X8, [X8 + 0xA58]
	0x022A2120 LDR X9, [X20]
	0x022A2124 LDR X8, [X8]
	0x022A2128 CMP X9, X8
	0x022A212C CSEL X21, X20, X31, EQ
	0x022A2130 B 0x22A2138
	0x022A2134 MOV X21, X31
	0x022A2138 LDR X0, [X22]
	0x022A213C LDR W8, [X0 + 0xE0]
	0x022A2140 CBNZ W8, 0x22A2148
	0x022A2144 BL 0x1C16DFC
	0x022A2148 MOV X0, X21
	0x022A214C MOV X1, X31
	0x022A2150 MOV X2, X31
	0x022A2154 BL 0x3C354F8
	0x022A2158 TBZ X0, 0x0, 0x22A217C
	0x022A215C CBZ X21, 0x22A2218
	0x022A2160 LDR X8, [X19 + 0x38]
	0x022A2164 MOV X0, X21
	0x022A2168 LDP X20, X19, [X31 + 0x20]
	0x022A216C LDP X22, X21, [X31 + 0x10]
	0x022A2170 LDR X1, [X8 + 0x8]
	0x022A2174 LDR X30, [X31], #0x30
	0x022A2178 B 0x21E52E4
	0x022A217C CBZ X20, 0x22A21BC
	0x022A2180 ADRP X8, 0x1E7A000
	0x022A2184 LDR X8, [X8 + 0x858]
	0x022A2188 LDR X9, [X20]
	0x022A218C LDR X8, [X8]
	0x022A2190 LDRB W11, [X9 + 0x130]
	0x022A2194 LDRB W10, [X8 + 0x130]
	0x022A2198 CMP W11, W10
	0x022A219C B.CS 0x22A21A8
	0x022A21A0 MOV X20, X31
	0x022A21A4 B 0x22A21BC
	0x022A21A8 LDR X9, [X9 + 0xC8]
	0x022A21AC ADD X9, X9, X10, 0x3, LSL
	0x022A21B0 LDUR X9, [X9 - 0x8]
	0x022A21B4 CMP X9, X8
	0x022A21B8 CSEL X20, X20, X31, EQ
	0x022A21BC LDR X0, [X22]
	0x022A21C0 LDR W8, [X0 + 0xE0]
	0x022A21C4 CBNZ W8, 0x22A21CC
	0x022A21C8 BL 0x1C16DFC
	0x022A21CC MOV X0, X20
	0x022A21D0 MOV X1, X31
	0x022A21D4 MOV X2, X31
	0x022A21D8 BL 0x3C354F8
	0x022A21DC MOV W8, W0
	0x022A21E0 MOV X0, X31
	0x022A21E4 TBZ X8, 0x0, 0x22A2208
	0x022A21E8 CBZ X20, 0x22A2218
	0x022A21EC LDR X8, [X19 + 0x38]
	0x022A21F0 MOV X0, X20
	0x022A21F4 LDP X20, X19, [X31 + 0x20]
	0x022A21F8 LDP X22, X21, [X31 + 0x10]
	0x022A21FC LDR X1, [X8 + 0x10]
	0x022A2200 LDR X30, [X31], #0x30
	0x022A2204 B 0x21A3894
	0x022A2208 LDP X20, X19, [X31 + 0x20]
	0x022A220C LDP X22, X21, [X31 + 0x10]
	0x022A2210 LDR X30, [X31], #0x30
	0x022A2214 RET
	0x022A2218 BL 0x1C16F20
	0x022A221C STP X29, X30, [X31 - 0x60]!
	0x022A2220 STP X28, X27, [X31 + 0x10]
	0x022A2224 STP X26, X25, [X31 + 0x20]
	0x022A2228 STP X24, X23, [X31 + 0x30]
	0x022A222C STP X22, X21, [X31 + 0x40]
	0x022A2230 STP X20, X19, [X31 + 0x50]
	0x022A2234 ADD X29, X31, 0x0
	0x022A2238 SUB X31, X31, 0x50
	0x022A223C MRS X8, 0xC000
	0x022A2240 STUR X8, [X29 - 0x50]
	0x022A2244 LDR X8, [X8 + 0x28]
	0x022A2248 MOV X19, X1
	0x022A224C MOV X20, X0
	0x022A2250 STUR X8, [X29 - 0x8]
	0x022A2254 LDR X21, [X1 + 0x38]
	0x022A2258 CBNZ X21, 0x22A227C
	0x022A225C ADRP X0, 0x1E51000
	0x022A2260 LDR X0, [X0 + 0x598]
	0x022A2264 BL 0x1C16CF4
	0x022A2268 LDR X21, [X19 + 0x38]
	0x022A226C CBNZ X21, 0x22A227C
	0x022A2270 MOV X0, X19
	0x022A2274 BL 0x1C5C6E0
	0x022A2278 LDR X21, [X19 + 0x38]
	0x022A227C LDR X0, [X21 + 0x28]
	0x022A2280 LDR X8, [X21 + 0x40]
	0x022A2284 LDR W27, [X0 + 0xFC]
	0x022A2288 LDRB W9, [X0 + 0x135]
	0x022A228C LDR W24, [X8 + 0xFC]
	0x022A2290 MOV W8, W27
	0x022A2294 TBNZ X9, 0x0, 0x22A22A4
	0x022A2298 BL 0x1C5C684
	0x022A229C LDR W8, [X0 + 0xFC]
	0x022A22A0 LDR X21, [X19 + 0x38]
	0x022A22A4 ADD W8, W8, 0x10
	0x022A22A8 ADD X8, X8, 0xF
	0x022A22AC ADD X9, X31, 0x0
	0x022A22B0 AND X8, X8, 0x1FFFFFFFF
	0x022A22B4 SUB X22, X9, X8
	0x022A22B8 ADD X31, X22, 0x0
	0x022A22BC ADD X9, X27, 0xF
	0x022A22C0 ADD X8, X31, 0x0
	0x022A22C4 AND X9, X9, 0x1FFFFFFFF
	0x022A22C8 SUB X28, X8, X9
	0x022A22CC ADD X31, X28, 0x0
	0x022A22D0 ADD X10, X24, 0xF
	0x022A22D4 ADD X8, X31, 0x0
	0x022A22D8 AND X26, X10, 0x1FFFFFFFF
	0x022A22DC SUB X25, X8, X26
	0x022A22E0 ADD X31, X25, 0x0
	0x022A22E4 ADD X8, X31, 0x0
	0x022A22E8 SUB X23, X8, X9
	0x022A22EC ADD X31, X23, 0x0
	0x022A22F0 MOV X0, X23
	0x022A22F4 MOV W1, W31
	0x022A22F8 MOV X2, X27
	0x022A22FC BL 0x3EB1B10
	0x022A2300 ADD X8, X31, 0x0
	0x022A2304 SUB X26, X8, X26
	0x022A2308 ADD X31, X26, 0x0
	0x022A230C MOV X0, X26
	0x022A2310 MOV W1, W31
	0x022A2314 MOV X2, X24
	0x022A2318 BL 0x3EB1B10
	0x022A231C STP X31, X31, [X29 - 0x30]
	0x022A2320 STUR X31, [X29 - 0x20]
	0x022A2324 LDR X0, [X21 + 0x8]
	0x022A2328 LDRB W8, [X0 + 0x135]
	0x022A232C TBNZ X8, 0x0, 0x22A2334
	0x022A2330 BL 0x1C5C684
	0x022A2334 LDR W8, [X0 + 0xE0]
	0x022A2338 CBNZ W8, 0x22A2340
	0x022A233C BL 0x1C16DFC
	0x022A2340 LDR X8, [X19 + 0x38]
	0x022A2344 LDR X0, [X8]
	0x022A2348 BL 0x28F81C4
	0x022A234C CBZ X20, 0x22A25B8
	0x022A2350 LDR X8, [X19 + 0x38]
	0x022A2354 MOV X21, X0
	0x022A2358 SUB X3, X29, 0x18
	0x022A235C MOV X2, X20
	0x022A2360 LDR X1, [X8 + 0x20]
	0x022A2364 MOV X4, X28
	0x022A2368 LDR X0, [X1]
	0x022A236C STUR X28, [X29 - 0x18]
	0x022A2370 LDR X8, [X1 + 0x10]
	0x022A2374 BLR X8
	0x022A2378 MOV X0, X23
	0x022A237C MOV X1, X28
	0x022A2380 MOV X2, X27
	0x022A2384 BL 0x3EB1AC0
	0x022A2388 ADRP X28, 0x1E51000
	0x022A238C LDR X28, [X28 + 0x598]
	0x022A2390 LDR X8, [X19 + 0x38]
	0x022A2394 LDR X1, [X8 + 0x68]
	0x022A2398 LDR X8, [X1]
	0x022A239C MOV X0, X23
	0x022A23A0 BLR X8
	0x022A23A4 TBZ X0, 0x0, 0x22A2484
	0x022A23A8 LDR X8, [X19 + 0x38]
	0x022A23AC LDR X1, [X8 + 0x30]
	0x022A23B0 LDR X0, [X1]
	0x022A23B4 STUR X25, [X29 - 0x18]
	0x022A23B8 LDR X8, [X1 + 0x10]
	0x022A23BC SUB X3, X29, 0x18
	0x022A23C0 MOV X2, X23
	0x022A23C4 MOV X4, X25
	0x022A23C8 BLR X8
	0x022A23CC MOV X0, X26
	0x022A23D0 MOV X1, X25
	0x022A23D4 MOV X2, X24
	0x022A23D8 BL 0x3EB1AC0
	0x022A23DC LDR X8, [X19 + 0x38]
	0x022A23E0 LDR X1, [X8 + 0x48]
	0x022A23E4 LDR X0, [X1]
	0x022A23E8 LDR X8, [X1 + 0x10]
	0x022A23EC SUB X4, X29, 0x10
	0x022A23F0 MOV X2, X26
	0x022A23F4 MOV X3, X31
	0x022A23F8 BLR X8
	0x022A23FC LDR X0, [X28]
	0x022A2400 LDUR X27, [X29 - 0x10]
	0x022A2404 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 32
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X20, X2
	016 Move X19, X1
	017 Move W22, W0
	018 Move [X29-8], X8
	019 Move X8, [X2+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {34}
	022 Move X0, 0x1E7B000
	023 Move X0, [X0+712]
	024 Call 0x1C17CF4
	025 Move X0, 0x1E52000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X8, [X20+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X20
	032 Call 0x1C5D6E0
	033 Move X8, [X20+56]
	034 Move X9, [X8+8]
	035 Move W21, [X9+252]
	036 Add X9, X31, 0
	037 Add X10, X21, 15
	038 And X10, X10, 0x1FFFFFFFF
	039 Subtract X23, X9, X10
	040 Add X31, X23, 0
	041 Move TEMP, X22
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfEqual {179}
	045 Move X9, 0x1E7B000
	046 Move X9, [X9+712]
	047 Move X0, [X9]
	048 Move W9, [X0+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X8, [X20+56]
	053 Move X0, [X8+16]
	054 Move X8, [X0]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X20+56]
	057 Move X24, X0
	058 Move X1, [X8+32]
	059 Move W8, [X1+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X1
	065 Call 0x1C5D684
	066 Move X1, X0
	067 Move X0, X24
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {138}
	071 Move X8, [X20+56]
	072 Move X24, X0
	073 Move X1, [X8+32]
	074 Move W8, [X1+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {82}
	079 Move X0, X1
	080 Call 0x1C5D684
	081 Move X1, X0
	082 Move [X29-12], W22
	083 Move X8, [X24]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move X0, X24
	094 Move W2, W31
	095 Call 0x1C5D788
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Add X8, X8, X9
	098 Add X0, X8, 312
	099 Subtract X8, X29, 12
	100 Move [X29-32], X8
	101 Move [X29-24], X23
	102 Move X1, [X0+8]
	103 Move X0, [X1+8]
	104 Move X8, [X1+16]
	105 Subtract X3, X29, 32
	106 Move X2, X24
	107 Move X4, X23
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X0, X19
	110 Move X1, X23
	111 Move X2, X21
	112 Call 0x3EB2AC0
	113 Move X8, [X20+56]
	114 Move X0, [X8+8]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move W0, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X24, X0
	124 Move X0, X24
	125 Call 0x3EB2AD0
	126 Move X24, X0
	127 Move X0, 0x1E58000
	128 Move X0, [X0+3264]
	129 Call 0x1C17D08
	130 Move X8, [X24]
	131 Move X1, [X8]
	132 Call 0x1C18270
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {231}
	137 Call 0x3EB2AE0
	138 Move X26, 0x1E52000
	139 Move X26, [X26+1728]
	140 Move X8, [X20+56]
	141 Move X0, [X26]
	142 Move X24, [X8+48]
	143 Move W9, [X0+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X24
	148 Move X1, X31
	149 Call Type.GetTypeFromHandle, X0
	150 Compare X0, 0
	151 JumpIfEqual {229}
	152 Move X1, X31
	153 Move X24, X0
	154 Call Type.get_IsArray, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {179}
	159 Move X8, [X24]
	160 Move X0, X24
	161 Move X9, [X8+1064]
	162 Move X1, [X8+1072]
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X8, [X26]
	165 Move X24, X0
	166 Move W9, [X8+224]
	167 Compare W9, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Move X0, X31
	172 Move X1, X24
	173 Move X2, X31
	174 Call Type.op_Equality, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {199}
	179 Move X0, X19
	180 Move W1, W31
	181 Move X2, X21
	182 Call 0x3EB2B10
	183 Move W0, W31
	184 Move X8, [X25+40]
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Add X31, X29, 0
	188 Move X20, [X31+64]
	189 Move X19, [X31+72]
	190 Move X22, [X31+48]
	191 Move X21, [X31+56]
	192 Move X24, [X31+32]
	193 Move X23, [X31+40]
	194 Move X26, [X31+16]
	195 Move X25, [X31+24]
	196 Move X29, [X31+80]
	197 Move X30, [X31+88]
	198 Return X0
	199 Move X0, X24
	200 Move W1, W22
	201 Move X2, X31
	202 Call Array.CreateInstance, X0, X1
	203 Move X8, [X20+56]
	204 Move X22, X0
	205 Move X1, [X8+8]
	206 Move W8, [X1+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {214}
	211 Move X0, X1
	212 Call 0x1C5D684
	213 Move X1, X0
	214 Move X0, X22
	215 Move X2, X23
	216 Call 0x1C17E10
	217 Move X1, X0
	218 Move X0, X19
	219 Move X2, X21
	220 Call 0x3EB2AC0
	221 Move X8, [X20+56]
	222 Move X0, [X8+8]
	223 Move W8, [X0+309]
	224 Move TEMP, X8
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {121}
	228 Call 0x1C5D684
	229 Call 0x1C17F20
	230 Call 0x3EB2B20
	231 Move W0, 8
	232 Call 0x3EB2AF0
	233 Move X8, [X24]
	234 Move [X0], X8
	235 Move X1, 0x1C13000
	236 Add X1, X1, 3672
	237 Move X2, X31
	238 Call 0x3EB2B00
	239 Move X24, X0
	240 Call 0x3EB2AE0
	241 Move X0, X24
	242 Call 0x1D2D690
	243 Call 0x1991590

Method: TArray InstantiateArray(System.Type derivedType, System.Int32 count = 0)

Disassembly:
	0x022A1684 LDP X20, X19, [X31 + 0x40]
	0x022A1688 LDP X22, X21, [X31 + 0x30]
	0x022A168C LDP X24, X23, [X31 + 0x20]
	0x022A1690 LDR X25, [X31 + 0x10]
	0x022A1694 LDP X29, X30, [X31], #0x50
	0x022A1698 RET
	0x022A169C BL 0x1C16F20
	0x022A16A0 STP X30, X21, [X31 - 0x20]!
	0x022A16A4 STP X20, X19, [X31 + 0x10]
	0x022A16A8 LDR X8, [X2 + 0x38]
	0x022A16AC MOV W19, W1
	0x022A16B0 MOV X20, X0
	0x022A16B4 CBNZ X8, 0x22A16C8
	0x022A16B8 MOV X0, X2
	0x022A16BC MOV X21, X2
	0x022A16C0 BL 0x1C5C6E0
	0x022A16C4 LDR X8, [X21 + 0x38]
	0x022A16C8 LDR X3, [X8 + 0x8]
	0x022A16CC MOV X0, X20
	0x022A16D0 MOV W2, W19
	0x022A16D4 LDP X20, X19, [X31 + 0x10]
	0x022A16D8 MOVZ W1, 0x10
	0x022A16DC LDP X30, X21, [X31], #0x20
	0x022A16E0 B 0x2222C80
	0x022A16E4 STP X30, X21, [X31 - 0x20]!
	0x022A16E8 STP X20, X19, [X31 + 0x10]
	0x022A16EC LDR X8, [X2 + 0x38]
	0x022A16F0 MOV W19, W1
	0x022A16F4 MOV X20, X0
	0x022A16F8 CBNZ X8, 0x22A170C
	0x022A16FC MOV X0, X2
	0x022A1700 MOV X21, X2
	0x022A1704 BL 0x1C5C6E0
	0x022A1708 LDR X8, [X21 + 0x38]
	0x022A170C LDR X3, [X8 + 0x8]
	0x022A1710 MOV X0, X20
	0x022A1714 MOV W2, W19
	0x022A1718 LDP X20, X19, [X31 + 0x10]
	0x022A171C MOVZ W1, 0x2
	0x022A1720 LDP X30, X21, [X31], #0x20
	0x022A1724 B 0x2222D84
	0x022A1728 STP X30, X21, [X31 - 0x20]!
	0x022A172C STP X20, X19, [X31 + 0x10]
	0x022A1730 LDR X8, [X2 + 0x38]
	0x022A1734 MOV W19, W1
	0x022A1738 MOV X20, X0
	0x022A173C CBNZ X8, 0x22A1750
	0x022A1740 MOV X0, X2
	0x022A1744 MOV X21, X2
	0x022A1748 BL 0x1C5C6E0
	0x022A174C LDR X8, [X21 + 0x38]
	0x022A1750 LDR X3, [X8 + 0x8]
	0x022A1754 MOV X0, X20
	0x022A1758 MOV W2, W19
	0x022A175C LDP X20, X19, [X31 + 0x10]
	0x022A1760 MOVZ W1, 0x40
	0x022A1764 LDP X30, X21, [X31], #0x20
	0x022A1768 B 0x2223090
	0x022A176C STP X30, X21, [X31 - 0x20]!
	0x022A1770 STP X20, X19, [X31 + 0x10]
	0x022A1774 LDR X8, [X2 + 0x38]
	0x022A1778 MOV X20, X2
	0x022A177C MOV W19, W1
	0x022A1780 MOV X21, X0
	0x022A1784 CBNZ X8, 0x22A1794
	0x022A1788 MOV X0, X20
	0x022A178C BL 0x1C5C6E0
	0x022A1790 LDR X8, [X20 + 0x38]
	0x022A1794 LDR X0, [X8]
	0x022A1798 LDR X8, [X0]
	0x022A179C BLR X8
	0x022A17A0 LDR X8, [X20 + 0x38]
	0x022A17A4 MOV W2, W19
	0x022A17A8 LDP X20, X19, [X31 + 0x10]
	0x022A17AC MOV W1, W0
	0x022A17B0 LDR X3, [X8 + 0x8]
	0x022A17B4 MOV X0, X21
	0x022A17B8 LDR X4, [X3]
	0x022A17BC LDP X30, X21, [X31], #0x20
	0x022A17C0 BR X4
	0x022A17C4 SUB X31, X31, 0x1C0
	0x022A17C8 STR X29, [X31 + 0x180]
	0x022A17CC STP X30, X23, [X31 + 0x190]
	0x022A17D0 STP X22, X21, [X31 + 0x1A0]
	0x022A17D4 STP X20, X19, [X31 + 0x1B0]
	0x022A17D8 LDR X8, [X3 + 0x38]
	0x022A17DC MOV X19, X3
	0x022A17E0 MOV X20, X2
	0x022A17E4 MOV X21, X1
	0x022A17E8 MOV X22, X0
	0x022A17EC CBNZ X8, 0x22A1858
	0x022A17F0 ADRP X0, 0x1E7B000
	0x022A17F4 LDR X0, [X0 + 0x828]
	0x022A17F8 BL 0x1C16CF4
	0x022A17FC ADRP X0, 0x1E52000
	0x022A1800 LDR X0, [X0 + 0x6C0]
	0x022A1804 BL 0x1C16CF4
	0x022A1808 ADRP X0, 0x1E7B000
	0x022A180C LDR X0, [X0 + 0x830]
	0x022A1810 BL 0x1C16CF4
	0x022A1814 ADRP X0, 0x1E7B000
	0x022A1818 LDR X0, [X0 + 0x838]
	0x022A181C BL 0x1C16CF4
	0x022A1820 ADRP X0, 0x1E7B000
	0x022A1824 LDR X0, [X0 + 0x840]
	0x022A1828 BL 0x1C16CF4
	0x022A182C ADRP X0, 0x1E7B000
	0x022A1830 LDR X0, [X0 + 0x848]
	0x022A1834 BL 0x1C16CF4
	0x022A1838 ADRP X0, 0x1E7B000
	0x022A183C LDR X0, [X0 + 0x850]
	0x022A1840 BL 0x1C16CF4
	0x022A1844 LDR X8, [X19 + 0x38]
	0x022A1848 CBNZ X8, 0x22A1858
	0x022A184C MOV X0, X19
	0x022A1850 BL 0x1C5C6E0
	0x022A1854 LDR X8, [X19 + 0x38]
	0x022A1858 ADRP X9, 0x1E52000
	0x022A185C LDR X9, [X9 + 0x6C0]
	0x022A1860 STP X31, X31, [X31 + 0x170]
	0x022A1864 LDR X23, [X8]
	0x022A1868 LDR X0, [X9]
	0x022A186C LDR W9, [X0 + 0xE0]
	0x022A1870 CBNZ W9, 0x22A1878
	0x022A1874 BL 0x1C16DFC
	0x022A1878 MOV X0, X23
	0x022A187C MOV X1, X31
	0x022A1880 BL 0x338C698
	0x022A1884 ADRP X8, 0x1E7B000
	0x022A1888 LDR X8, [X8 + 0x850]
	0x022A188C MOV X23, X0
	0x022A1890 MOV X1, X31
	0x022A1894 LDR X8, [X8]
	0x022A1898 MOV X0, X8
	0x022A189C BL 0x338C698
	0x022A18A0 MOV X1, X0
	0x022A18A4 MOV X0, X23
	0x022A18A8 MOV X2, X31
	0x022A18AC BL 0x3395194
	0x022A18B0 TBZ X0, 0x0, 0x22A18E4
	0x022A18B4 ADRP X8, 0x1E7B000
	0x022A18B8 LDR X8, [X8 + 0x830]
	0x022A18BC LDR X0, [X8]
	0x022A18C0 LDR W8, [X0 + 0xE0]
	0x022A18C4 CBNZ W8, 0x22A18CC
	0x022A18C8 BL 0x1C16DFC
	0x022A18CC MOV X0, X22
	0x022A18D0 MOV X1, X21
	0x022A18D4 MOV X2, X20
	0x022A18D8 MOV X3, X31
	0x022A18DC BL 0x3E19D90
	0x022A18E0 B 0x22A1F60
	0x022A18E4 ADRP X23, 0x1E7B000
	0x022A18E8 LDR X23, [X23 + 0x830]
	0x022A18EC LDR X0, [X23]
	0x022A18F0 LDR W8, [X0 + 0xE0]
	0x022A18F4 CBNZ W8, 0x22A18FC
	0x022A18F8 BL 0x1C16DFC
	0x022A18FC ADRP X8, 0x1E7B000
	0x022A1900 LDR X8, [X8 + 0x848]
	0x022A1904 LDR X0, [X8]
	0x022A1908 LDR W8, [X0 + 0xE0]
	0x022A190C CBNZ W8, 0x22A1914
	0x022A1910 BL 0x1C16DFC
	0x022A1914 LDR X8, [X23]
	0x022A1918 ADRP X9, 0x1E7B000
	0x022A191C LDR X8, [X8 + 0xB8]
	0x022A1920 LDR X9, [X9 + 0x840]
	0x022A1924 CBZ X21, 0x22A1B48
	0x022A1928 CBZ X20, 0x22A1CD4
	0x022A192C LDR X2, [X9]
	0x022A1930 ADD X0, X8, 0x70
	0x022A1934 MOV X1, X22
	0x022A1938 BL 0x272520C
	0x022A193C STP X0, X1, [X31 + 0x170]
	0x022A1940 CBZ X1, 0x22A1FE4
	0x022A1944 ADRP X23, 0x1E7B000
	0x022A1948 LDR X23, [X23 + 0x828]
	0x022A194C MOV X0, X1
	0x022A1950 MOV W1, W31
	0x022A1954 LDR X2, [X23]
	0x022A1958 BL 0x304F2B0
	0x022A195C CBZ X1, 0x22A1FE4
	0x022A1960 MOV X0, X1
	0x022A1964 MOV X1, X31
	0x022A1968 BL 0x3E057F0
	0x022A196C CBZ X0, 0x22A1FE4
	0x022A1970 LDR W8, [X0 + 0x18]
	0x022A1974 CBZ W8, 0x22A1FE8
	0x022A1978 LDR X0, [X0 + 0x20]
	0x022A197C CBZ X0, 0x22A1FE4
	0x022A1980 MOV X1, X31
	0x022A1984 BL 0x3E05D14
	0x022A1988 LDR X8, [X19 + 0x38]
	0x022A198C MOV X22, X0
	0x022A1990 LDR X8, [X8 + 0x18]
	0x022A1994 LDRB W9, [X8 + 0x135]
	0x022A1998 TBNZ X9, 0x0, 0x22A19A8
	0x022A199C MOV X0, X8
	0x022A19A0 BL 0x1C5C684
	0x022A19A4 MOV X8, X0
	0x022A19A8 LDR W9, [X8 + 0xE0]
	0x022A19AC CBNZ W9, 0x22A19B8
	0x022A19B0 MOV X0, X8
	0x022A19B4 BL 0x1C16DFC
	0x022A19B8 LDR X8, [X19 + 0x38]
	0x022A19BC LDR X0, [X8 + 0x18]
	0x022A19C0 LDRB W8, [X0 + 0x135]
	0x022A19C4 TBNZ X8, 0x0, 0x22A19CC
	0x022A19C8 BL 0x1C5C684
	0x022A19CC LDR X8, [X0 + 0xB8]
	0x022A19D0 MOV X1, X31
	0x022A19D4 LDR X0, [X8]
	0x022A19D8 ADD X8, X31, 0x130
	0x022A19DC BL 0x3E06828
	0x022A19E0 LDR V0, [X31 + 0x13]
	0x022A19E4 LDR X8, [X31 + 0x140]
	0x022A19E8 STR V0, [X31 + 0x15]
	0x022A19EC STR X8, [X31 + 0x160]
	0x022A19F0 CBZ X22, 0x22A1FE4
	0x022A19F4 LDR V0, [X31 + 0x15]
	0x022A19F8 LDR X8, [X31 + 0x160]
	0x022A19FC STR V0, [X31 + 0x5]
	0x022A1A00 STR X8, [X31 + 0x60]
	0x022A1A04 LDR W8, [X22 + 0x18]
	0x022A1A08 CBZ W8, 0x22A1FE8
	0x022A1A0C LDR X8, [X31 + 0x60]
	0x022A1A10 LDR V0, [X31 + 0x5]
	0x022A1A14 STR X8, [X22 + 0x30]
	0x022A1A18 STR V0, [X22 + 0x2]
	0x022A1A1C LDR X0, [X31 + 0x178]
	0x022A1A20 CBZ X0, 0x22A1FE4
	0x022A1A24 LDR X2, [X23]
	0x022A1A28 MOV W1, W31
	0x022A1A2C BL 0x304F2B0
	0x022A1A30 CBZ X1, 0x22A1FE4
	0x022A1A34 MOV X0, X1
	0x022A1A38 MOV X1, X31
	0x022A1A3C BL 0x3E057F0
	0x022A1A40 CBZ X0, 0x22A1FE4
	0x022A1A44 LDR W8, [X0 + 0x18]
	0x022A1A48 CBZ W8, 0x22A1FE8
	0x022A1A4C LDR X0, [X0 + 0x20]
	0x022A1A50 CBZ X0, 0x22A1FE4
	0x022A1A54 MOV X1, X31
	0x022A1A58 BL 0x3E05D14
	0x022A1A5C MOV X22, X0
	0x022A1A60 ADD X8, X31, 0xD0
	0x022A1A64 MOV X0, X21
	0x022A1A68 MOV X1, X31
	0x022A1A6C BL 0x3E06810
	0x022A1A70 LDR V0, [X31 + 0xD]
	0x022A1A74 LDR X8, [X31 + 0xE0]
	0x022A1A78 STR V0, [X31 + 0x13]
	0x022A1A7C STR X8, [X31 + 0x140]
	0x022A1A80 CBZ X22, 0x22A1FE4
	0x022A1A84 LDR V0, [X31 + 0x13]
	0x022A1A88 LDR X8, [X31 + 0x140]
	0x022A1A8C STR V0, [X31 + 0x3]
	0x022A1A90 STR X8, [X31 + 0x40]
	0x022A1A94 LDR W8, [X22 + 0x18]
	0x022A1A98 CMP W8, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 32
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X19, X3
	017 Move X20, X2
	018 Move W24, W1
	019 Move [X29-8], X8
	020 Move X8, [X3+56]
	021 Move X25, X0
	022 Compare X8, 0
	023 JumpIfNotEqual {36}
	024 Move X0, 0x1E7C000
	025 Move X0, [X0+712]
	026 Call 0x1C17CF4
	027 Move X0, 0x1E53000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {36}
	033 Move X0, X19
	034 Call 0x1C5D6E0
	035 Move X8, [X19+56]
	036 Move X8, [X8+16]
	037 Move W21, [X8+252]
	038 Add X8, X31, 0
	039 Add X9, X21, 15
	040 And X9, X9, 0x1FFFFFFFF
	041 Subtract X22, X8, X9
	042 Add X31, X22, 0
	043 Add X8, X31, 0
	044 Subtract X23, X8, X9
	045 Add X31, X23, 0
	046 Move X0, X23
	047 Move W1, W31
	048 Move X2, X21
	049 Call 0x3EB2B10
	050 Move TEMP, X24
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {206}
	054 Move X8, 0x1E7C000
	055 Move X8, [X8+712]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X25
	062 Move X1, X31
	063 Call PropertyBagStore.GetPropertyBag, X0
	064 Move X8, [X19+56]
	065 Move X25, X0
	066 Move X1, [X8]
	067 Move W8, [X1+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X1
	073 Call 0x1C5D684
	074 Move X1, X0
	075 Move X0, X25
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {104}
	079 Move X8, [X19+56]
	080 Move X25, X0
	081 Move X1, [X8]
	082 Move W8, [X1+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X1
	088 Call 0x1C5D684
	089 Move X1, X0
	090 Move [X29-12], W24
	091 Move X8, [X25]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X25
	102 Move W2, W31
	103 Call 0x1C5D788
	104 Move X27, 0x1E53000
	105 Move X27, [X27+1728]
	106 Move X8, [X19+56]
	107 Move X0, [X27]
	108 Move X25, [X8+24]
	109 Move W9, [X0+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X25
	114 Move X1, X31
	115 Call Type.GetTypeFromHandle, X0
	116 Compare X0, 0
	117 JumpIfEqual {230}
	118 Move X1, X31
	119 Move X25, X0
	120 Call Type.get_IsArray, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {231}
	125 Move X8, [X25]
	126 Move X0, X25
	127 Move X9, [X8+1064]
	128 Move X1, [X8+1072]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X27]
	131 Move X25, X0
	132 Move W9, [X8+224]
	133 Compare W9, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Move X0, X31
	138 Move X1, X25
	139 Move X2, X31
	140 Call Type.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {254}
	145 Move X0, X25
	146 Move W1, W24
	147 Move X2, X31
	148 Call Array.CreateInstance, X0, X1
	149 Move X8, [X19+56]
	150 Move X19, X0
	151 Move X1, [X8+16]
	152 Move W8, [X1+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {160}
	157 Move X0, X1
	158 Call 0x1C5D684
	159 Move X1, X0
	160 Move X0, X19
	161 Move X2, X22
	162 Call 0x1C17E10
	163 Move X1, X0
	164 Move X0, X23
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Subtract X8, X29, 12
	169 Move [X29-32], X8
	170 Move [X29-24], X22
	171 Move X1, [X0+8]
	172 Subtract X3, X29, 32
	173 Move X2, X25
	174 Move X4, X22
	175 Move X0, [X1+8]
	176 Move X8, [X1+16]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X0, X23
	179 Move X1, X22
	180 Move X2, X21
	181 Call 0x3EB2AC0
	182 Move X0, X22
	183 Move X1, X23
	184 Move X2, X21
	185 Call 0x3EB2AC0
	186 Move X0, X20
	187 Move X1, X22
	188 Move X2, X21
	189 Call 0x3EB2AC0
	190 Move X8, [X26+40]
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Add X31, X29, 0
	194 Move X20, [X31+80]
	195 Move X19, [X31+88]
	196 Move X22, [X31+64]
	197 Move X21, [X31+72]
	198 Move X24, [X31+48]
	199 Move X23, [X31+56]
	200 Move X26, [X31+32]
	201 Move X25, [X31+40]
	202 Move X27, [X31+16]
	203 Move X29, [X31+96]
	204 Move X30, [X31+104]
	205 Return X0
	206 Move [X29-32], W24
	207 Move X0, 0x1E53000
	208 Move X0, [X0+1880]
	209 Call 0x1C17D08
	210 Subtract X1, X29, 32
	211 Call 0x1C17E04
	212 Move X20, X0
	213 Move X0, 0x1E7C000
	214 Move X0, [X0+2048]
	215 Call 0x1C17D08
	216 Move X21, X0
	217 Move X0, 0x1E7C000
	218 Move X0, [X0+2016]
	219 Call 0x1C17D08
	220 Move X22, X0
	221 Move X0, 0x1E7B000
	222 Move X0, [X0+1608]
	223 Call 0x1C17D08
	224 Move X2, X0
	225 Move X0, X21
	226 Move X1, X22
	227 Move X3, X20
	228 Move X4, X31
	229 Call String.Format, X0, X1, X2, X3
	230 Call 0x1C17F20
	231 Move X8, [X19+56]
	232 Move X0, 0x1E53000
	233 Move X20, [X8+24]
	234 Move X0, [X0+1728]
	235 Call 0x1C17D08
	236 Call 0x19913D0
	237 Move X0, X20
	238 Move X1, X31
	239 Call Type.GetTypeFromHandle, X0
	240 Move X20, X0
	241 Call 0x19913C0
	242 Move X8, [X20]
	243 Move X0, X20
	244 Move X9, [X8+424]
	245 Move X1, [X8+432]
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X20, X0
	248 Move X0, 0x1E7C000
	249 Move X0, [X0+2056]
	250 Call 0x1C17D08
	251 Move X21, X0
	252 Move X0, 0x1E7C000
	253 Move X0, [X0+2032]
	254 Move X8, [X19+56]
	255 Move X0, 0x1E53000
	256 Move X20, [X8+24]
	257 Move X0, [X0+1728]
	258 Call 0x1C17D08
	259 Call 0x19913D0
	260 Move X0, X20
	261 Move X1, X31
	262 Call Type.GetTypeFromHandle, X0
	263 Move X20, X0
	264 Call 0x19913C0
	265 Move X8, [X20]
	266 Move X0, X20
	267 Move X9, [X8+424]
	268 Move X1, [X8+432]
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move X20, X0
	271 Move X0, 0x1E7C000
	272 Move X0, [X0+2056]
	273 Call 0x1C17D08
	274 Move X21, X0
	275 Move X0, 0x1E7C000
	276 Move X0, [X0+2040]
	277 Call 0x1C17D08
	278 Move X2, X0
	279 Move X0, X21
	280 Move X1, X20
	281 Move X3, X31
	282 Call String.Concat, X0, X1, X2
	283 Move X20, X0
	284 Move X0, 0x1E5B000
	285 Move X0, [X0+1400]
	286 Call 0x1C17D08
	287 Call 0x1C17F10
	288 Move X1, X20
	289 Move X2, X31
	290 Move X21, X0
	291 Call ArgumentException..ctor, X0, X1
	292 Move X0, X21
	293 Move X1, X19
	294 Call 0x1C17DEC
	295 Call 0x3EB2B20

Method: System.Void CheckIsAssignableFrom(System.Type type, System.Type derivedType)

Disassembly:
	0x03C93A5C LDR X0, [X0 + 0xCD0]
	0x03C93A60 BL 0x1C16CF4
	0x03C93A64 MOVZ W8, 0x1
	0x03C93A68 STRB W8, [X21 + 0xB8]
	0x03C93A6C LDR X0, [X20]
	0x03C93A70 ADRP X25, 0x4CD000
	0x03C93A74 ADRP X20, 0x4CD000
	0x03C93A78 ADRP X21, 0x4CD000
	0x03C93A7C ADRP X24, 0x4CD000
	0x03C93A80 ADRP X23, 0x4CD000
	0x03C93A84 ADRP X22, 0x4CD000
	0x03C93A88 LDR X25, [X25 + 0xCB0]
	0x03C93A8C LDR X20, [X20 + 0xCC8]
	0x03C93A90 LDR W8, [X0 + 0xE0]
	0x03C93A94 LDR X21, [X21 + 0xCA8]
	0x03C93A98 LDR X24, [X24 + 0xCD0]
	0x03C93A9C LDR X23, [X23 + 0xCC0]
	0x03C93AA0 LDR X22, [X22 + 0xCB8]
	0x03C93AA4 CBNZ W8, 0x3C93AAC
	0x03C93AA8 BL 0x1C16DFC
	0x03C93AAC LDR X1, [X25]
	0x03C93AB0 MOV X0, X19
	0x03C93AB4 BL 0x299F46C
	0x03C93AB8 LDR X0, [X20]
	0x03C93ABC BL 0x1C16F10
	0x03C93AC0 MOV X20, X0
	0x03C93AC4 BL 0x3C94A38
	0x03C93AC8 LDR X2, [X21]
	0x03C93ACC MOV X0, X19
	0x03C93AD0 MOV X1, X20
	0x03C93AD4 BL 0x212E898
	0x03C93AD8 LDR X0, [X24]
	0x03C93ADC BL 0x1C16F10
	0x03C93AE0 MOV X20, X0
	0x03C93AE4 BL 0x3C94A80
	0x03C93AE8 LDR X2, [X21]
	0x03C93AEC MOV X0, X19
	0x03C93AF0 MOV X1, X20
	0x03C93AF4 BL 0x212E898
	0x03C93AF8 LDR X0, [X23]
	0x03C93AFC BL 0x1C16F10
	0x03C93B00 MOV X20, X0
	0x03C93B04 BL 0x3C94AC8
	0x03C93B08 LDR X2, [X21]
	0x03C93B0C MOV X0, X19
	0x03C93B10 MOV X1, X20
	0x03C93B14 BL 0x212E898
	0x03C93B18 LDR X0, [X22]
	0x03C93B1C BL 0x1C16F10
	0x03C93B20 MOV X20, X0
	0x03C93B24 BL 0x3C94B10
	0x03C93B28 LDR X2, [X21]
	0x03C93B2C MOV X0, X19
	0x03C93B30 MOV X1, X20
	0x03C93B34 LDP X20, X19, [X31 + 0x30]
	0x03C93B38 LDP X22, X21, [X31 + 0x20]
	0x03C93B3C LDP X24, X23, [X31 + 0x10]
	0x03C93B40 LDP X30, X25, [X31], #0x40
	0x03C93B44 B 0x212E898
	0x03C93B48 STP X30, X23, [X31 - 0x30]!
	0x03C93B4C STP X22, X21, [X31 + 0x10]
	0x03C93B50 STP X20, X19, [X31 + 0x20]
	0x03C93B54 ADRP X21, 0x754000
	0x03C93B58 ADRP X20, 0x4CD000
	0x03C93B5C LDRB W8, [X21 + 0xC1]
	0x03C93B60 LDR X20, [X20 + 0xCD8]
	0x03C93B64 MOV X19, X0
	0x03C93B68 TBNZ X8, 0x0, 0x3C93BB0
	0x03C93B6C ADRP X0, 0x4CD000
	0x03C93B70 LDR X0, [X0 + 0xCE0]
	0x03C93B74 BL 0x1C16CF4
	0x03C93B78 ADRP X0, 0x4CD000
	0x03C93B7C LDR X0, [X0 + 0xCE8]
	0x03C93B80 BL 0x1C16CF4
	0x03C93B84 ADRP X0, 0x4CD000
	0x03C93B88 LDR X0, [X0 + 0xCF0]
	0x03C93B8C BL 0x1C16CF4
	0x03C93B90 ADRP X0, 0x4CD000
	0x03C93B94 LDR X0, [X0 + 0xCD8]
	0x03C93B98 BL 0x1C16CF4
	0x03C93B9C ADRP X0, 0x4CD000
	0x03C93BA0 LDR X0, [X0 + 0xCF8]
	0x03C93BA4 BL 0x1C16CF4
	0x03C93BA8 MOVZ W8, 0x1
	0x03C93BAC STRB W8, [X21 + 0xC1]
	0x03C93BB0 LDR X0, [X20]
	0x03C93BB4 ADRP X23, 0x4CD000
	0x03C93BB8 ADRP X20, 0x4CD000
	0x03C93BBC ADRP X21, 0x4CD000
	0x03C93BC0 ADRP X22, 0x4CD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {22}
	007 Move X8, [X0]
	008 Move X21, X1
	009 Move X20, X0
	010 Move X9, [X8+680]
	011 Move X2, [X8+688]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {23}
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Return 
	022 Call 0x1C17F20
	023 Move X0, 0x461000
	024 Move X0, [X0+2760]
	025 Call 0x1C17D08
	026 Move W1, 5
	027 Call 0x1C17D6C
	028 Move X19, X0
	029 Call 0x19913C0
	030 Move X0, 0x4CE000
	031 Move X0, [X0+2656]
	032 Call 0x1C17D08
	033 Move X2, X0
	034 Move X0, X19
	035 Move X1, X31
	036 Call 0x1994444
	037 Move X0, X21
	038 Call 0x19913C0
	039 Move X8, [X21]
	040 Move X0, X21
	041 Move X9, [X8+424]
	042 Move X1, [X8+432]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X21, X0
	045 Move X0, X19
	046 Call 0x19913C0
	047 Move W1, 1
	048 Move X0, X19
	049 Move X2, X21
	050 Call 0x1994444
	051 Move X0, X19
	052 Call 0x19913C0
	053 Move X0, 0x4CE000
	054 Move X0, [X0+2664]
	055 Call 0x1C17D08
	056 Move X2, X0
	057 Move W1, 2
	058 Move X0, X19
	059 Call 0x1994444
	060 Move X0, X20
	061 Call 0x19913C0
	062 Move X8, [X20]
	063 Move X0, X20
	064 Move X9, [X8+424]
	065 Move X1, [X8+432]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X20, X0
	068 Move X0, X19
	069 Call 0x19913C0
	070 Move W1, 3
	071 Move X0, X19
	072 Move X2, X20
	073 Call 0x1994444
	074 Move X0, X19
	075 Call 0x19913C0
	076 Move X0, 0x4CE000
	077 Move X0, [X0+2672]
	078 Call 0x1C17D08
	079 Move X2, X0
	080 Move W1, 4
	081 Move X0, X19
	082 Call 0x1994444
	083 Move X0, X19
	084 Move X1, X31
	085 Call String.Concat, X0
	086 Move X19, X0
	087 Move X0, 0x469000
	088 Move X0, [X0+1400]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X1, X19
	092 Move X2, X31
	093 Move X20, X0
	094 Call ArgumentException..ctor, X0, X1
	095 Move X0, 0x4CE000
	096 Move X0, [X0+2680]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X20
	100 Call 0x1C17DEC

Method: System.Void CheckCanBeInstantiated(Unity.Properties.TypeUtility/ITypeConstructor`1<T> constructor)

Disassembly:
	0x0229FE64 LDP X30, X19, [X31], #0x10
	0x0229FE68 RET
	0x0229FE6C ADRP X8, 0x1E7C000
	0x0229FE70 LDR X8, [X8 + 0x6E8]
	0x0229FE74 LDR X0, [X8]
	0x0229FE78 LDR W8, [X0 + 0xE0]
	0x0229FE7C CBNZ W8, 0x229FE84
	0x0229FE80 BL 0x1C16DFC
	0x0229FE84 LDR X8, [X19 + 0x38]
	0x0229FE88 LDR X0, [X8 + 0x18]
	0x0229FE8C LDR X1, [X0]
	0x0229FE90 LDP X30, X19, [X31], #0x10
	0x0229FE94 BR X1
	0x0229FE98 STP X29, X30, [X31 - 0x50]!
	0x0229FE9C STR X25, [X31 + 0x10]
	0x0229FEA0 STP X24, X23, [X31 + 0x20]
	0x0229FEA4 STP X22, X21, [X31 + 0x30]
	0x0229FEA8 STP X20, X19, [X31 + 0x40]
	0x0229FEAC ADD X29, X31, 0x0
	0x0229FEB0 SUB X31, X31, 0x10
	0x0229FEB4 MRS X25, 0xC000
	0x0229FEB8 LDR X8, [X25 + 0x28]
	0x0229FEBC MOV X23, X1
	0x0229FEC0 MOV X19, X0
	0x0229FEC4 STUR X8, [X29 - 0x8]
	0x0229FEC8 LDR X24, [X1 + 0x38]
	0x0229FECC CBNZ X24, 0x229FEF0
	0x0229FED0 ADRP X0, 0x1E7C000
	0x0229FED4 LDR X0, [X0 + 0x6E8]
	0x0229FED8 BL 0x1C16CF4
	0x0229FEDC LDR X24, [X23 + 0x38]
	0x0229FEE0 CBNZ X24, 0x229FEF0
	0x0229FEE4 MOV X0, X23
	0x0229FEE8 BL 0x1C5C6E0
	0x0229FEEC LDR X24, [X23 + 0x38]
	0x0229FEF0 LDR X8, [X24 + 0x20]
	0x0229FEF4 LDR W20, [X8 + 0xFC]
	0x0229FEF8 ADD X8, X31, 0x0
	0x0229FEFC ADD X9, X20, 0xF
	0x0229FF00 AND X9, X9, 0x1FFFFFFFF
	0x0229FF04 SUB X21, X8, X9
	0x0229FF08 ADD X31, X21, 0x0
	0x0229FF0C ADD X8, X31, 0x0
	0x0229FF10 SUB X22, X8, X9
	0x0229FF14 ADD X31, X22, 0x0
	0x0229FF18 MOV X0, X22
	0x0229FF1C MOV W1, W31
	0x0229FF20 MOV X2, X20
	0x0229FF24 BL 0x3EB1B10
	0x0229FF28 ADRP X8, 0x1E7C000
	0x0229FF2C LDR X8, [X8 + 0x6E8]
	0x0229FF30 LDR X0, [X8]
	0x0229FF34 LDR W8, [X0 + 0xE0]
	0x0229FF38 CBNZ W8, 0x229FF44
	0x0229FF3C BL 0x1C16DFC
	0x0229FF40 LDR X24, [X23 + 0x38]
	0x0229FF44 LDR X0, [X24]
	0x0229FF48 LDR X8, [X0]
	0x0229FF4C BLR X8
	0x0229FF50 LDR X8, [X23 + 0x38]
	0x0229FF54 MOV X24, X0
	0x0229FF58 LDR X1, [X8 + 0x10]
	0x0229FF5C LDR X8, [X1]
	0x0229FF60 BLR X8
	0x0229FF64 CBZ X24, 0x22A0044
	0x0229FF68 LDR X8, [X23 + 0x38]
	0x0229FF6C LDR X1, [X8 + 0x8]
	0x0229FF70 LDRB W8, [X1 + 0x135]
	0x0229FF74 TBNZ X8, 0x0, 0x229FF84
	0x0229FF78 MOV X0, X1
	0x0229FF7C BL 0x1C5C684
	0x0229FF80 MOV X1, X0
	0x0229FF84 LDR X8, [X24]
	0x0229FF88 LDRH W9, [X8 + 0x12E]
	0x0229FF8C CBZ X9, 0x229FFB0
	0x0229FF90 LDR X10, [X8 + 0xB0]
	0x0229FF94 ADD X10, X10, 0x8
	0x0229FF98 LDUR X11, [X10 - 0x8]
	0x0229FF9C CMP X11, X1
	0x0229FFA0 B.EQ 0x229FFC0
	0x0229FFA4 SUBS X9, X9, 0x1
	0x0229FFA8 ADD X10, X10, 0x10
	0x0229FFAC B.NE 0x229FF98

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {18}
	010 Move X0, 0x1E7E000
	011 Move X0, [X0+1976]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move X10, 0x1E7E000
	021 Move X8, [X20]
	022 Move X10, [X10+1976]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {53}
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20
	053 Move X8, [X19+56]
	054 Move X0, 0x1E55000
	055 Move X20, [X8+8]
	056 Move X0, [X0+1728]
	057 Call 0x1C17D08
	058 Call 0x19913D0
	059 Move X0, X20
	060 Move X1, X31
	061 Call Type.GetTypeFromHandle, X0
	062 Move X20, X0
	063 Call 0x19913C0
	064 Move X8, [X20]
	065 Move X0, X20
	066 Move X9, [X8+424]
	067 Move X1, [X8+432]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X20, X0
	070 Move X0, 0x1E7E000
	071 Move X0, [X0+1984]
	072 Call 0x1C17D08
	073 Move X21, X0
	074 Move X0, 0x1E7E000
	075 Move X0, [X0+1992]
	076 Call 0x1C17D08
	077 Move X2, X0
	078 Move X0, X21
	079 Move X1, X20
	080 Move X3, X31
	081 Call String.Concat, X0, X1, X2
	082 Move X20, X0
	083 Move X0, 0x1E55000
	084 Move X0, [X0+1456]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X1, X20
	088 Move X2, X31
	089 Move X21, X0
	090 Call InvalidOperationException..ctor, X0, X1
	091 Move X0, X21
	092 Move X1, X19
	093 Call 0x1C17DEC

Method: System.Void CheckCanBeInstantiated(Unity.Properties.TypeUtility/ITypeConstructor constructor, System.Type type)

Disassembly:
	0x03C93BC4 LDR W8, [X0 + 0xE0]
	0x03C93BC8 LDR X23, [X23 + 0xCF0]
	0x03C93BCC LDR X20, [X20 + 0xCE0]
	0x03C93BD0 LDR X21, [X21 + 0xCE8]
	0x03C93BD4 LDR X22, [X22 + 0xCF8]
	0x03C93BD8 CBNZ W8, 0x3C93BE0
	0x03C93BDC BL 0x1C16DFC
	0x03C93BE0 LDR X1, [X23]
	0x03C93BE4 MOV X0, X19
	0x03C93BE8 BL 0x299EABC
	0x03C93BEC LDR X0, [X20]
	0x03C93BF0 BL 0x1C16F10
	0x03C93BF4 MOV X20, X0
	0x03C93BF8 BL 0x3C94C58
	0x03C93BFC LDR X2, [X21]
	0x03C93C00 MOV X0, X19
	0x03C93C04 MOV X1, X20
	0x03C93C08 BL 0x212E500
	0x03C93C0C LDR X0, [X22]
	0x03C93C10 BL 0x1C16F10
	0x03C93C14 MOV X20, X0
	0x03C93C18 BL 0x3C94CA0
	0x03C93C1C LDR X2, [X21]
	0x03C93C20 MOV X0, X19
	0x03C93C24 MOV X1, X20
	0x03C93C28 LDP X20, X19, [X31 + 0x20]
	0x03C93C2C LDP X22, X21, [X31 + 0x10]
	0x03C93C30 LDP X30, X23, [X31], #0x30
	0x03C93C34 B 0x212E500
	0x03C93C38 STP X30, X23, [X31 - 0x30]!
	0x03C93C3C STP X22, X21, [X31 + 0x10]
	0x03C93C40 STP X20, X19, [X31 + 0x20]
	0x03C93C44 ADRP X21, 0x754000
	0x03C93C48 ADRP X20, 0x4CD000
	0x03C93C4C LDRB W8, [X21 + 0xC6]
	0x03C93C50 LDR X20, [X20 + 0xD00]
	0x03C93C54 MOV X19, X0
	0x03C93C58 TBNZ X8, 0x0, 0x3C93CA0
	0x03C93C5C ADRP X0, 0x4CD000
	0x03C93C60 LDR X0, [X0 + 0xD08]
	0x03C93C64 BL 0x1C16CF4
	0x03C93C68 ADRP X0, 0x4CD000
	0x03C93C6C LDR X0, [X0 + 0xD10]
	0x03C93C70 BL 0x1C16CF4
	0x03C93C74 ADRP X0, 0x4CD000
	0x03C93C78 LDR X0, [X0 + 0xD00]
	0x03C93C7C BL 0x1C16CF4
	0x03C93C80 ADRP X0, 0x4CD000
	0x03C93C84 LDR X0, [X0 + 0xD18]
	0x03C93C88 BL 0x1C16CF4
	0x03C93C8C ADRP X0, 0x4CD000
	0x03C93C90 LDR X0, [X0 + 0xD20]
	0x03C93C94 BL 0x1C16CF4
	0x03C93C98 MOVZ W8, 0x1
	0x03C93C9C STRB W8, [X21 + 0xC6]
	0x03C93CA0 LDR X0, [X20]
	0x03C93CA4 ADRP X23, 0x4CD000
	0x03C93CA8 ADRP X20, 0x4CD000
	0x03C93CAC ADRP X21, 0x4CD000
	0x03C93CB0 ADRP X22, 0x4CD000
	0x03C93CB4 LDR W8, [X0 + 0xE0]
	0x03C93CB8 LDR X23, [X23 + 0xD10]
	0x03C93CBC LDR X20, [X20 + 0xD18]
	0x03C93CC0 LDR X21, [X21 + 0xD08]
	0x03C93CC4 LDR X22, [X22 + 0xD20]
	0x03C93CC8 CBNZ W8, 0x3C93CD0
	0x03C93CCC BL 0x1C16DFC
	0x03C93CD0 LDR X1, [X23]
	0x03C93CD4 MOV X0, X19
	0x03C93CD8 BL 0x299ECAC
	0x03C93CDC LDR X0, [X20]
	0x03C93CE0 BL 0x1C16F10
	0x03C93CE4 MOV X20, X0
	0x03C93CE8 BL 0x3C94D68
	0x03C93CEC LDR X2, [X21]
	0x03C93CF0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x755000
	006 Move W8, [X21+128]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x48A000
	014 Move X0, [X0+1976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+128], W8
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move X10, 0x48A000
	021 Move X8, [X20]
	022 Move X10, [X10+1976]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {53}
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20
	053 Move X0, X19
	054 Call 0x19913C0
	055 Move X8, [X19]
	056 Move X0, X19
	057 Move X9, [X8+424]
	058 Move X1, [X8+432]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X19, X0
	061 Move X0, 0x48A000
	062 Move X0, [X0+1984]
	063 Call 0x1C17D08
	064 Move X20, X0
	065 Move X0, 0x48A000
	066 Move X0, [X0+1992]
	067 Call 0x1C17D08
	068 Move X2, X0
	069 Move X0, X20
	070 Move X1, X19
	071 Move X3, X31
	072 Call String.Concat, X0, X1, X2
	073 Move X19, X0
	074 Move X0, 0x461000
	075 Move X0, [X0+1456]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X1, X19
	079 Move X2, X31
	080 Move X20, X0
	081 Call InvalidOperationException..ctor, X0, X1
	082 Move X0, 0x4CE000
	083 Move X0, [X0+2688]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X20
	087 Call 0x1C17DEC

