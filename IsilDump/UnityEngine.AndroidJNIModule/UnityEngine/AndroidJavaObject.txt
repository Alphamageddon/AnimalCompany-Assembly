Type: UnityEngine.AndroidJavaObject

Method: System.Void .ctor(System.String className, System.String[] args)

Disassembly:
	0x03BF2D7C RET
	0x03BF2D80 MOV X0, X31
	0x03BF2D84 CMP W8, 0x4
	0x03BF2D88 B.LS 0x3BF2E08
	0x03BF2D8C CMP W8, 0x5
	0x03BF2D90 STR X0, [X22 + 0x40]
	0x03BF2D94 B.EQ 0x3BF2E08
	0x03BF2D98 ADRP X9, 0x56C000
	0x03BF2D9C LDR X9, [X9 + 0x610]
	0x03BF2DA0 CMP W8, 0x6
	0x03BF2DA4 LDR X9, [X9]
	0x03BF2DA8 STR X9, [X22 + 0x48]
	0x03BF2DAC B.LS 0x3BF2E08
	0x03BF2DB0 ADRP X20, 0x501000
	0x03BF2DB4 LDR X20, [X20 + 0xA28]
	0x03BF2DB8 MOV X0, X22
	0x03BF2DBC MOV X1, X31
	0x03BF2DC0 STR X19, [X22 + 0x50]
	0x03BF2DC4 BL 0x32278CC
	0x03BF2DC8 LDR X8, [X20]
	0x03BF2DCC MOV X19, X0
	0x03BF2DD0 LDR W9, [X8 + 0xE0]
	0x03BF2DD4 CBNZ W9, 0x3BF2DE0
	0x03BF2DD8 MOV X0, X8
	0x03BF2DDC BL 0x1C16DFC
	0x03BF2DE0 MOV X0, X19
	0x03BF2DE4 LDP X20, X19, [X31 + 0x50]
	0x03BF2DE8 LDP X22, X21, [X31 + 0x40]
	0x03BF2DEC LDP X24, X23, [X31 + 0x30]
	0x03BF2DF0 LDP X26, X25, [X31 + 0x20]
	0x03BF2DF4 LDP X28, X27, [X31 + 0x10]
	0x03BF2DF8 MOV X1, X31
	0x03BF2DFC LDR X30, [X31], #0x60
	0x03BF2E00 B 0x3C06048
	0x03BF2E04 BL 0x1C16F20
	0x03BF2E08 BL 0x1C16F28
	0x03BF2E0C STP X30, X21, [X31 - 0x20]!
	0x03BF2E10 STP X20, X19, [X31 + 0x10]
	0x03BF2E14 LDR X8, [X0]
	0x03BF2E18 MOV X19, X0
	0x03BF2E1C LDP X9, X2, [X8 + 0x188]
	0x03BF2E20 MOVZ W1, 0x1
	0x03BF2E24 BLR X9
	0x03BF2E28 MOV X0, X19
	0x03BF2E2C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7F2000
	008 Move X22, 0x502000
	009 Move W8, [X23+1910]
	010 Move X22, [X22+2512]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x502000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1910], W8
	023 Move X0, X21
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move X0, [X22]
	027 Move W1, 1
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {55}
	031 Move X22, X0
	032 Compare X20, 0
	033 JumpIfEqual {40}
	034 Move X8, [X22]
	035 Move X0, X20
	036 Move X1, [X8+64]
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {57}
	040 Move W8, [X22+24]
	041 Compare W8, 0
	042 JumpIfEqual {56}
	043 Move [X22+32], X20
	044 Move X0, X21
	045 Move X1, X19
	046 Move X2, X22
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call AndroidJavaObject._AndroidJavaObject, X0, X1, X2
	054 Return 
	055 Call 0x1C17F20
	056 Call 0x1C17F28
	057 Call 0x1C17F44
	058 Move X1, X31
	059 Call 0x1C17DEC

Method: System.Void .ctor(System.String className, UnityEngine.AndroidJavaObject[] args)

Disassembly:
	0x03BF2F28 BL 0x3BEBA40
	0x03BF2F2C MOV X0, X20
	0x03BF2F30 LDP X20, X19, [X31 + 0x10]
	0x03BF2F34 LDP X30, X21, [X31], #0x20
	0x03BF2F38 RET
	0x03BF2F3C CMP W1, 0x1
	0x03BF2F40 MOV X21, X0
	0x03BF2F44 B.NE 0x3BF2F6C
	0x03BF2F48 MOV X0, X21
	0x03BF2F4C BL 0x3EB1AD0
	0x03BF2F50 LDR X20, [X0]
	0x03BF2F54 BL 0x3EB1AE0
	0x03BF2F58 MOV X0, X19
	0x03BF2F5C BL 0x3BEBA40
	0x03BF2F60 CBZ X20, 0x3BF2F2C
	0x03BF2F64 MOV X0, X20
	0x03BF2F68 BL 0x1C16F18
	0x03BF2F6C MOV X20, X31
	0x03BF2F70 B 0x3BF2F78
	0x03BF2F74 MOV X21, X0
	0x03BF2F78 MOV X0, X19
	0x03BF2F7C BL 0x3BEBA40
	0x03BF2F80 CBNZ X20, 0x3BF2F8C
	0x03BF2F84 MOV X0, X21
	0x03BF2F88 BL 0x1D2C690
	0x03BF2F8C MOV X0, X20
	0x03BF2F90 BL 0x1C16F18
	0x03BF2F94 BL 0x1990590
	0x03BF2F98 STR X30, [X31 - 0x30]!
	0x03BF2F9C STP X22, X21, [X31 + 0x10]
	0x03BF2FA0 STP X20, X19, [X31 + 0x20]
	0x03BF2FA4 ADRP X21, 0x7F1000
	0x03BF2FA8 ADRP X22, 0x56C000
	0x03BF2FAC LDRB W8, [X21 + 0x787]
	0x03BF2FB0 LDR X22, [X22 + 0x618]
	0x03BF2FB4 MOV X20, X1
	0x03BF2FB8 MOV X19, X0
	0x03BF2FBC TBNZ X8, 0x0, 0x3BF2FE0
	0x03BF2FC0 ADRP X0, 0x56C000
	0x03BF2FC4 LDR X0, [X0 + 0x588]
	0x03BF2FC8 BL 0x1C16CF4
	0x03BF2FCC ADRP X0, 0x56C000
	0x03BF2FD0 LDR X0, [X0 + 0x618]
	0x03BF2FD4 BL 0x1C16CF4
	0x03BF2FD8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7F2000
	008 Move X22, 0x502000
	009 Move W8, [X23+1911]
	010 Move X22, [X22+2512]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x502000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1911], W8
	023 Move X0, X21
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move X0, [X22]
	027 Move W1, 1
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {55}
	031 Move X22, X0
	032 Compare X20, 0
	033 JumpIfEqual {40}
	034 Move X8, [X22]
	035 Move X0, X20
	036 Move X1, [X8+64]
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {57}
	040 Move W8, [X22+24]
	041 Compare W8, 0
	042 JumpIfEqual {56}
	043 Move [X22+32], X20
	044 Move X0, X21
	045 Move X1, X19
	046 Move X2, X22
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call AndroidJavaObject._AndroidJavaObject, X0, X1, X2
	054 Return 
	055 Call 0x1C17F20
	056 Call 0x1C17F28
	057 Call 0x1C17F44
	058 Move X1, X31
	059 Call 0x1C17DEC

Method: System.Void .ctor(System.String className, UnityEngine.AndroidJavaClass[] args)

Disassembly:
	0x03BF2FDC STRB W8, [X21 + 0x787]
	0x03BF2FE0 LDR X0, [X22]
	0x03BF2FE4 MOV X1, X20
	0x03BF2FE8 MOV X2, X31
	0x03BF2FEC BL 0x321B938
	0x03BF2FF0 MOV X1, X0
	0x03BF2FF4 BL 0x3BF2AEC
	0x03BF2FF8 CBZ X20, 0x3BF3050
	0x03BF2FFC ADRP X21, 0x56C000
	0x03BF3000 LDR X21, [X21 + 0x588]
	0x03BF3004 MOVZ W1, 0x2E
	0x03BF3008 MOVZ W2, 0x2F
	0x03BF300C MOV X0, X20
	0x03BF3010 MOV X3, X31
	0x03BF3014 BL 0x32296D0
	0x03BF3018 BL 0x3BE5BAC
	0x03BF301C LDR X8, [X21]
	0x03BF3020 MOV X20, X0
	0x03BF3024 MOV X0, X8
	0x03BF3028 BL 0x1C16F10
	0x03BF302C MOV X1, X20
	0x03BF3030 MOV X21, X0
	0x03BF3034 BL 0x3BEEED8
	0x03BF3038 STP X31, X21, [X19 + 0x10]
	0x03BF303C MOV X0, X20
	0x03BF3040 LDP X20, X19, [X31 + 0x20]
	0x03BF3044 LDP X22, X21, [X31 + 0x10]
	0x03BF3048 LDR X30, [X31], #0x30
	0x03BF304C B 0x3BEBA40
	0x03BF3050 BL 0x1C16F20
	0x03BF3054 CBZ X0, 0x3BF3060
	0x03BF3058 MOV X1, X31
	0x03BF305C B 0x3397374
	0x03BF3060 STR X30, [X31 - 0x10]!
	0x03BF3064 BL 0x1C16F20
	0x03BF3068 STR X30, [X31 - 0x10]!
	0x03BF306C CBZ X0, 0x3BF3084
	0x03BF3070 LDR X8, [X0]
	0x03BF3074 LDR X3, [X8 + 0x2A8]
	0x03BF3078 LDR X2, [X8 + 0x2B0]
	0x03BF307C LDR X30, [X31], #0x10
	0x03BF3080 BR X3
	0x03BF3084 BL 0x1C16F20
	0x03BF3088 STP X30, X21, [X31 - 0x20]!
	0x03BF308C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7F2000
	008 Move X22, 0x502000
	009 Move W8, [X23+1912]
	010 Move X22, [X22+2512]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x501000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1912], W8
	023 Move X0, X21
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move X0, [X22]
	027 Move W1, 1
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {55}
	031 Move X22, X0
	032 Compare X20, 0
	033 JumpIfEqual {40}
	034 Move X8, [X22]
	035 Move X0, X20
	036 Move X1, [X8+64]
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {57}
	040 Move W8, [X22+24]
	041 Compare W8, 0
	042 JumpIfEqual {56}
	043 Move [X22+32], X20
	044 Move X0, X21
	045 Move X1, X19
	046 Move X2, X22
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call AndroidJavaObject._AndroidJavaObject, X0, X1, X2
	054 Return 
	055 Call 0x1C17F20
	056 Call 0x1C17F28
	057 Call 0x1C17F44
	058 Move X1, X31
	059 Call 0x1C17DEC

Method: System.Void .ctor(System.String className, UnityEngine.AndroidJavaProxy[] args)

Disassembly:
	0x03BF3090 MOV X20, X2
	0x03BF3094 MOV X21, X1
	0x03BF3098 BL 0x3BE5BAC
	0x03BF309C MOV X19, X0
	0x03BF30A0 MOV X1, X21
	0x03BF30A4 MOV X2, X20
	0x03BF30A8 BL 0x3BE5C4C
	0x03BF30AC MOV X20, X0
	0x03BF30B0 MOV X0, X19
	0x03BF30B4 BL 0x3BEBA40
	0x03BF30B8 MOV X0, X20
	0x03BF30BC LDP X20, X19, [X31 + 0x10]
	0x03BF30C0 LDP X30, X21, [X31], #0x20
	0x03BF30C4 RET
	0x03BF30C8 CMP W1, 0x1
	0x03BF30CC MOV X21, X0
	0x03BF30D0 B.NE 0x3BF30F8
	0x03BF30D4 MOV X0, X21
	0x03BF30D8 BL 0x3EB1AD0
	0x03BF30DC LDR X20, [X0]
	0x03BF30E0 BL 0x3EB1AE0
	0x03BF30E4 MOV X0, X19
	0x03BF30E8 BL 0x3BEBA40
	0x03BF30EC CBZ X20, 0x3BF30B8
	0x03BF30F0 MOV X0, X20
	0x03BF30F4 BL 0x1C16F18
	0x03BF30F8 MOV X20, X31
	0x03BF30FC B 0x3BF3104
	0x03BF3100 MOV X21, X0
	0x03BF3104 MOV X0, X19
	0x03BF3108 BL 0x3BEBA40
	0x03BF310C CBNZ X20, 0x3BF3118
	0x03BF3110 MOV X0, X21
	0x03BF3114 BL 0x1D2C690
	0x03BF3118 MOV X0, X20
	0x03BF311C BL 0x1C16F18
	0x03BF3120 BL 0x1990590
	0x03BF3124 STP X30, X21, [X31 - 0x20]!
	0x03BF3128 STP X20, X19, [X31 + 0x10]
	0x03BF312C MOV X20, X2
	0x03BF3130 MOV X21, X1
	0x03BF3134 BL 0x3BE5BAC
	0x03BF3138 MOV X19, X0
	0x03BF313C MOV X1, X21
	0x03BF3140 MOV X2, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7F1000
	008 Move X22, 0x501000
	009 Move W8, [X23+1913]
	010 Move X22, [X22+2512]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x501000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1913], W8
	023 Move X0, X21
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move X0, [X22]
	027 Move W1, 1
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {55}
	031 Move X22, X0
	032 Compare X20, 0
	033 JumpIfEqual {40}
	034 Move X8, [X22]
	035 Move X0, X20
	036 Move X1, [X8+64]
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {57}
	040 Move W8, [X22+24]
	041 Compare W8, 0
	042 JumpIfEqual {56}
	043 Move [X22+32], X20
	044 Move X0, X21
	045 Move X1, X19
	046 Move X2, X22
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call AndroidJavaObject._AndroidJavaObject, X0, X1, X2
	054 Return 
	055 Call 0x1C17F20
	056 Call 0x1C17F28
	057 Call 0x1C17F44
	058 Move X1, X31
	059 Call 0x1C17DEC

Method: System.Void .ctor(System.String className, UnityEngine.AndroidJavaRunnable[] args)

Disassembly:
	0x03BF3144 BL 0x3BE61F8
	0x03BF3148 MOV X20, X0
	0x03BF314C MOV X0, X19
	0x03BF3150 BL 0x3BEBA40
	0x03BF3154 MOV X0, X20
	0x03BF3158 LDP X20, X19, [X31 + 0x10]
	0x03BF315C LDP X30, X21, [X31], #0x20
	0x03BF3160 RET
	0x03BF3164 CMP W1, 0x1
	0x03BF3168 MOV X21, X0
	0x03BF316C B.NE 0x3BF3194
	0x03BF3170 MOV X0, X21
	0x03BF3174 BL 0x3EB1AD0
	0x03BF3178 LDR X20, [X0]
	0x03BF317C BL 0x3EB1AE0
	0x03BF3180 MOV X0, X19
	0x03BF3184 BL 0x3BEBA40
	0x03BF3188 CBZ X20, 0x3BF3154
	0x03BF318C MOV X0, X20
	0x03BF3190 BL 0x1C16F18
	0x03BF3194 MOV X20, X31
	0x03BF3198 B 0x3BF31A0
	0x03BF319C MOV X21, X0
	0x03BF31A0 MOV X0, X19
	0x03BF31A4 BL 0x3BEBA40
	0x03BF31A8 CBNZ X20, 0x3BF31B4
	0x03BF31AC MOV X0, X21
	0x03BF31B0 BL 0x1D2C690
	0x03BF31B4 MOV X0, X20
	0x03BF31B8 BL 0x1C16F18
	0x03BF31BC BL 0x1990590
	0x03BF31C0 STR X30, [X31 - 0x30]!
	0x03BF31C4 STP X22, X21, [X31 + 0x10]
	0x03BF31C8 STP X20, X19, [X31 + 0x20]
	0x03BF31CC ADRP X19, 0x7F0000
	0x03BF31D0 ADRP X22, 0x542000
	0x03BF31D4 LDRB W8, [X19 + 0x789]
	0x03BF31D8 LDR X22, [X22 + 0xEE8]
	0x03BF31DC MOV X20, X1
	0x03BF31E0 MOV X21, X0
	0x03BF31E4 TBNZ X8, 0x0, 0x3BF3208
	0x03BF31E8 ADRP X0, 0x529000
	0x03BF31EC LDR X0, [X0 + 0x6A0]
	0x03BF31F0 BL 0x1C16CF4
	0x03BF31F4 ADRP X0, 0x542000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7F1000
	008 Move X22, 0x501000
	009 Move W8, [X23+1914]
	010 Move X22, [X22+2512]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x501000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1914], W8
	023 Move X0, X21
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move X0, [X22]
	027 Move W1, 1
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {55}
	031 Move X22, X0
	032 Compare X20, 0
	033 JumpIfEqual {40}
	034 Move X8, [X22]
	035 Move X0, X20
	036 Move X1, [X8+64]
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {57}
	040 Move W8, [X22+24]
	041 Compare W8, 0
	042 JumpIfEqual {56}
	043 Move [X22+32], X20
	044 Move X0, X21
	045 Move X1, X19
	046 Move X2, X22
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call AndroidJavaObject._AndroidJavaObject, X0, X1, X2
	054 Return 
	055 Call 0x1C17F20
	056 Call 0x1C17F28
	057 Call 0x1C17F44
	058 Move X1, X31
	059 Call 0x1C17DEC

Method: System.Void .ctor(System.String className, System.Object[] args)

Disassembly:
	0x03BF31F8 LDR X0, [X0 + 0xEE8]
	0x03BF31FC BL 0x1C16CF4
	0x03BF3200 MOVZ W8, 0x1
	0x03BF3204 STRB W8, [X19 + 0x789]
	0x03BF3208 LDR X0, [X22]
	0x03BF320C MOVZ W1, 0x2
	0x03BF3210 BL 0x1C16D6C
	0x03BF3214 MOV X19, X0
	0x03BF3218 CBZ X0, 0x3BF32AC
	0x03BF321C LDR W8, [X19 + 0x18]
	0x03BF3220 CBZ W8, 0x3BF32B4
	0x03BF3224 STR X21, [X19 + 0x20]
	0x03BF3228 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move X1, X20
	011 Move X2, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X0, X21
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call AndroidJavaObject._AndroidJavaObject, X0, X1, X2
	018 Return 

Method: System.Void .ctor(System.IntPtr jobject)

Disassembly:
	0x03BF2930 CBZ X9, 0x3BF29A8
	0x03BF2934 ADRP X8, 0x52A000
	0x03BF2938 LDR X8, [X8 + 0xA10]
	0x03BF293C LDR X0, [X8]
	0x03BF2940 BL 0x1C16F10
	0x03BF2944 MOV X1, X31
	0x03BF2948 MOV X20, X0
	0x03BF294C BL 0x33BDD8C
	0x03BF2950 LDR X8, [X19 + 0x10]
	0x03BF2954 CBZ X8, 0x3BF29DC
	0x03BF2958 ADRP X23, 0x56C000
	0x03BF295C LDR X23, [X23 + 0x588]
	0x03BF2960 LDR X22, [X8 + 0x18]
	0x03BF2964 LDR X0, [X23]
	0x03BF2968 BL 0x1C16F10
	0x03BF296C MOV X1, X22
	0x03BF2970 MOV X21, X0
	0x03BF2974 BL 0x3BEEED8
	0x03BF2978 CBZ X20, 0x3BF29DC
	0x03BF297C STR X21, [X20 + 0x10]
	0x03BF2980 LDR X8, [X19 + 0x18]
	0x03BF2984 CBZ X8, 0x3BF29DC
	0x03BF2988 LDR X0, [X23]
	0x03BF298C LDR X19, [X8 + 0x18]
	0x03BF2990 BL 0x1C16F10
	0x03BF2994 MOV X1, X19
	0x03BF2998 MOV X21, X0
	0x03BF299C BL 0x3BEEED8
	0x03BF29A0 STR X21, [X20 + 0x18]
	0x03BF29A4 B 0x3BF29C8
	0x03BF29A8 LDR X19, [X8 + 0x18]
	0x03BF29AC ADRP X8, 0x501000
	0x03BF29B0 LDR X8, [X8 + 0x990]
	0x03BF29B4 LDR X0, [X8]
	0x03BF29B8 BL 0x1C16F10
	0x03BF29BC MOV X1, X19
	0x03BF29C0 MOV X20, X0
	0x03BF29C4 BL 0x3BF2A28
	0x03BF29C8 MOV X0, X20
	0x03BF29CC LDP X20, X19, [X31 + 0x20]
	0x03BF29D0 LDP X22, X21, [X31 + 0x10]
	0x03BF29D4 LDP X30, X23, [X31], #0x30
	0x03BF29D8 RET
	0x03BF29DC BL 0x1C16F20
	0x03BF29E0 ADRP X0, 0x501000
	0x03BF29E4 LDR X0, [X0 + 0x7D0]
	0x03BF29E8 BL 0x1C16D08
	0x03BF29EC BL 0x1C16F10
	0x03BF29F0 MOV X19, X0
	0x03BF29F4 ADRP X0, 0x56C000
	0x03BF29F8 LDR X0, [X0 + 0x5E8]
	0x03BF29FC BL 0x1C16D08
	0x03BF2A00 MOV X1, X0
	0x03BF2A04 MOV X0, X19
	0x03BF2A08 MOV X2, X31
	0x03BF2A0C BL 0x33B2C70
	0x03BF2A10 ADRP X0, 0x56C000
	0x03BF2A14 LDR X0, [X0 + 0x5F0]
	0x03BF2A18 BL 0x1C16D08
	0x03BF2A1C MOV X1, X0
	0x03BF2A20 MOV X0, X19
	0x03BF2A24 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7F2000
	008 Move W8, [X21+1915]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x56D000
	016 Move X0, [X0+1416]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1915], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Move X0, X20
	024 Move X1, X31
	025 Move X2, X31
	026 Call IntPtr.op_Equality, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {58}
	031 Move X23, 0x56D000
	032 Move X23, [X23+1416]
	033 Move X0, X20
	034 Call AndroidJNISafe.GetObjectClass, X0
	035 Move X8, [X23]
	036 Move X21, X0
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move X1, X20
	040 Move X22, X0
	041 Call GlobalJavaObjectRef..ctor, X0, X1
	042 Move [X19+16], X22
	043 Move X0, [X23]
	044 Call 0x1C17F10
	045 Move X1, X21
	046 Move X20, X0
	047 Call GlobalJavaObjectRef..ctor, X0, X1
	048 Move [X19+24], X20
	049 Move X0, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Call AndroidJNISafe.DeleteLocalRef, X0
	057 Return 
	058 Move X0, 0x502000
	059 Move X0, [X0+2000]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0x56D000
	064 Move X0, [X0+1424]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call Exception..ctor, X0, X1
	070 Move X0, 0x56D000
	071 Move X0, [X0+1432]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Call 0x1C17DEC

Method: System.Void .ctor(System.IntPtr clazz, System.IntPtr constructorID, System.Object[] args)

Disassembly:
	0x03BF322C BL 0x3BEBA98
	0x03BF3230 LDR W8, [X19 + 0x18]
	0x03BF3234 CMP W8, 0x1
	0x03BF3238 B.LS 0x3BF32C0
	0x03BF323C ADRP X20, 0x529000
	0x03BF3240 LDR X20, [X20 + 0x6A0]
	0x03BF3244 STR X0, [X19 + 0x28]
	0x03BF3248 LDR X0, [X20]
	0x03BF324C LDR W8, [X0 + 0xE0]
	0x03BF3250 CBNZ W8, 0x3BF325C
	0x03BF3254 BL 0x1C16DFC
	0x03BF3258 LDR X0, [X20]
	0x03BF325C LDR X8, [X0 + 0xB8]
	0x03BF3260 LDR X9, [X8]
	0x03BF3264 CBZ X9, 0x3BF32C4
	0x03BF3268 LDR X0, [X9 + 0x18]
	0x03BF326C LDR X1, [X8 + 0x8]
	0x03BF3270 MOV X2, X19
	0x03BF3274 BL 0x3BECD40
	0x03BF3278 MOV X21, X0
	0x03BF327C MOV X20, X31
	0x03BF3280 LDR W8, [X19 + 0x18]
	0x03BF3284 CMP W8, 0x1
	0x03BF3288 B.LS 0x3BF32B0
	0x03BF328C LDR X0, [X19 + 0x28]
	0x03BF3290 BL 0x3BEBA40
	0x03BF3294 CBNZ X20, 0x3BF32B8
	0x03BF3298 MOV X0, X21
	0x03BF329C LDP X20, X19, [X31 + 0x20]
	0x03BF32A0 LDP X22, X21, [X31 + 0x10]
	0x03BF32A4 LDR X30, [X31], #0x30
	0x03BF32A8 RET
	0x03BF32AC BL 0x1C16F20
	0x03BF32B0 BL 0x1C16F28
	0x03BF32B4 BL 0x1C16F28

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7F1000
	009 Move X23, 0x56C000
	010 Move W8, [X24+1916]
	011 Move X23, [X23+1416]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x56C000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1916], W8
	025 Move X0, X21
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X23]
	029 Call 0x1C17F10
	030 Move X1, X22
	031 Move X23, X0
	032 Call GlobalJavaObjectRef..ctor, X0, X1
	033 Move [X21+24], X23
	034 Move X0, X21
	035 Move X1, X20
	036 Move X2, X19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]

Method: System.Void Dispose()

Disassembly:
	0x03BF28C4 LDR X8, [X0 + 0x18]
	0x03BF28C8 CBZ X8, 0x3BF28D8
	0x03BF28CC LDR X0, [X8 + 0x18]
	0x03BF28D0 LDR X30, [X31], #0x10
	0x03BF28D4 RET
	0x03BF28D8 BL 0x1C16F20
	0x03BF28DC STP X30, X23, [X31 - 0x30]!
	0x03BF28E0 STP X22, X21, [X31 + 0x10]
	0x03BF28E4 STP X20, X19, [X31 + 0x20]
	0x03BF28E8 ADRP X20, 0x7F1000
	0x03BF28EC LDRB W8, [X20 + 0x77E]
	0x03BF28F0 MOV X19, X0
	0x03BF28F4 TBNZ X8, 0x0, 0x3BF2924
	0x03BF28F8 ADRP X0, 0x501000
	0x03BF28FC LDR X0, [X0 + 0x990]
	0x03BF2900 BL 0x1C16CF4
	0x03BF2904 ADRP X0, 0x52A000
	0x03BF2908 LDR X0, [X0 + 0xA10]
	0x03BF290C BL 0x1C16CF4
	0x03BF2910 ADRP X0, 0x56C000
	0x03BF2914 LDR X0, [X0 + 0x588]
	0x03BF2918 BL 0x1C16CF4
	0x03BF291C MOVZ W8, 0x1
	0x03BF2920 STRB W8, [X20 + 0x77E]
	0x03BF2924 LDR X8, [X19 + 0x18]
	0x03BF2928 CBZ X8, 0x3BF29E0
	0x03BF292C LDR X9, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7F2000
	006 Move X20, 0x509000
	007 Move W8, [X21+1917]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x509000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1917], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Call(System.String methodName, T[] args)

Disassembly:
	0x0227BCBC MOV X1, X31
	0x0227BCC0 BL 0x3BEBA40
	0x0227BCC4 CBNZ X21, 0x227BCD0
	0x0227BCC8 MOV X0, X20
	0x0227BCCC BL 0x1D2C690
	0x0227BCD0 MOV X0, X21
	0x0227BCD4 BL 0x1C16F18
	0x0227BCD8 BL 0x1990590
	0x0227BCDC SUB X31, X31, 0x30
	0x0227BCE0 STP X30, X21, [X31 + 0x10]
	0x0227BCE4 STP X20, X19, [X31 + 0x20]
	0x0227BCE8 LDR X8, [X1 + 0x38]
	0x0227BCEC MOV X20, X1
	0x0227BCF0 MOV X19, X0
	0x0227BCF4 CBNZ X8, 0x227BD00
	0x0227BCF8 MOV X0, X20
	0x0227BCFC BL 0x1C5C6E0
	0x0227BD00 MOV X0, X19
	0x0227BD04 MOV X1, X31
	0x0227BD08 MOV X2, X31
	0x0227BD0C BL 0x33BE5B0
	0x0227BD10 TBZ X0, 0x0, 0x227BD1C
	0x0227BD14 MOV W20, W31
	0x0227BD18 B 0x227BD90
	0x0227BD1C LDR X8, [X20 + 0x38]
	0x0227BD20 LDR X1, [X8 + 0x8]
	0x0227BD24 MOV X0, X19
	0x0227BD28 BL 0x227A050
	0x0227BD2C STR W0, [X31 + 0xC]
	0x0227BD30 LDR X8, [X20 + 0x38]
	0x0227BD34 LDR X0, [X8]
	0x0227BD38 ADD X1, X31, 0xC
	0x0227BD3C BL 0x1C16E04
	0x0227BD40 LDR X8, [X20 + 0x38]
	0x0227BD44 MOV X21, X0
	0x0227BD48 LDR X1, [X8]
	0x0227BD4C LDRB W8, [X1 + 0x135]
	0x0227BD50 TBNZ X8, 0x0, 0x227BD60
	0x0227BD54 MOV X0, X1
	0x0227BD58 BL 0x1C5C684
	0x0227BD5C MOV X1, X0
	0x0227BD60 CBZ X21, 0x227BDA4
	0x0227BD64 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x215F000
	008 Move X23, 0x1E79000
	009 Move W8, [X22+2177]
	010 Move X23, [X23+2512]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1E79000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2177], W8
	023 Move X0, [X23]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {53}
	028 Move X22, X0
	029 Compare X21, 0
	030 JumpIfEqual {37}
	031 Move X8, [X22]
	032 Move X0, X21
	033 Move X1, [X8+64]
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {55}
	037 Move W8, [X22+24]
	038 Compare W8, 0
	039 JumpIfEqual {54}
	040 Move [X22+32], X21
	041 Move X0, X20
	042 Move X1, X19
	043 Move X2, X22
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X3, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call AndroidJavaObject._Call, X0, X1, X2
	052 Return 
	053 Call 0x1C17F20
	054 Call 0x1C17F28
	055 Call 0x1C17F44
	056 Move X1, X31
	057 Call 0x1C17DEC

Method: System.Void Call(System.IntPtr methodID, T[] args)

Disassembly:
	0x0227BC10 LDRB W8, [X1 + 0x135]
	0x0227BC14 TBNZ X8, 0x0, 0x227BC24
	0x0227BC18 MOV X0, X1
	0x0227BC1C BL 0x1C5C684
	0x0227BC20 MOV X1, X0
	0x0227BC24 CBZ X21, 0x227BC68
	0x0227BC28 LDR X8, [X21]
	0x0227BC2C LDR X9, [X1 + 0x40]
	0x0227BC30 LDR X8, [X8 + 0x40]
	0x0227BC34 CMP X8, X9
	0x0227BC38 B.NE 0x227BC6C
	0x0227BC3C MOV X0, X21
	0x0227BC40 BL 0x1C16E08
	0x0227BC44 LDRH W20, [X0]
	0x0227BC48 MOV X0, X19
	0x0227BC4C MOV X1, X31
	0x0227BC50 BL 0x3BEBA40
	0x0227BC54 MOV W0, W20
	0x0227BC58 LDP X20, X19, [X31 + 0x20]
	0x0227BC5C LDP X30, X21, [X31 + 0x10]
	0x0227BC60 ADD X31, X31, 0x30
	0x0227BC64 RET
	0x0227BC68 BL 0x1C16F20
	0x0227BC6C MOV X0, X21
	0x0227BC70 BL 0x1C171E0
	0x0227BC74 B 0x227BC78
	0x0227BC78 MOV X20, X0
	0x0227BC7C CMP W1, 0x1
	0x0227BC80 B.NE 0x227BCAC
	0x0227BC84 MOV X0, X20
	0x0227BC88 BL 0x3EB1AD0
	0x0227BC8C LDR X21, [X0]
	0x0227BC90 BL 0x3EB1AE0
	0x0227BC94 MOV X0, X19
	0x0227BC98 MOV X1, X31
	0x0227BC9C BL 0x3BEBA40
	0x0227BCA0 CBZ X21, 0x227BBD8
	0x0227BCA4 MOV X0, X21
	0x0227BCA8 BL 0x1C16F18
	0x0227BCAC MOV X21, X31
	0x0227BCB0 B 0x227BCB8
	0x0227BCB4 MOV X20, X0
	0x0227BCB8 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x215F000
	008 Move X23, 0x1E79000
	009 Move W8, [X22+2176]
	010 Move X23, [X23+2512]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1E79000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2176], W8
	023 Move X0, [X23]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {53}
	028 Move X22, X0
	029 Compare X21, 0
	030 JumpIfEqual {37}
	031 Move X8, [X22]
	032 Move X0, X21
	033 Move X1, [X8+64]
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {55}
	037 Move W8, [X22+24]
	038 Compare W8, 0
	039 JumpIfEqual {54}
	040 Move [X22+32], X21
	041 Move X0, X20
	042 Move X1, X19
	043 Move X2, X22
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X3, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call AndroidJavaObject._Call, X0, X1, X2
	052 Return 
	053 Call 0x1C17F20
	054 Call 0x1C17F28
	055 Call 0x1C17F44
	056 Move X1, X31
	057 Call 0x1C17DEC

Method: System.Void Call(System.String methodName, System.Object[] args)

Disassembly:
	0x03BF3494 BL 0x1C16F28

ISIL:
No ISIL was generated
Method: System.Void Call(System.IntPtr methodID, System.Object[] args)

Disassembly:
	0x03BF34F8 BL 0x1C16F20

ISIL:
No ISIL was generated
Method: System.Void CallStatic(System.String methodName, T[] args)

Disassembly:
	0x0227C434 MOV X0, X26
	0x0227C438 MOV X2, X25
	0x0227C43C BL 0x1C16E10
	0x0227C440 MOV X1, X0
	0x0227C444 MOV X0, X23
	0x0227C448 MOV X2, X20
	0x0227C44C BL 0x3EB1AC0
	0x0227C450 MOV X0, X21
	0x0227C454 MOV X1, X31
	0x0227C458 BL 0x3BEBA40
	0x0227C45C MOV X0, X22
	0x0227C460 MOV X1, X23
	0x0227C464 MOV X2, X20
	0x0227C468 BL 0x3EB1AC0
	0x0227C46C MOV X0, X19
	0x0227C470 MOV X1, X22
	0x0227C474 MOV X2, X20
	0x0227C478 BL 0x3EB1AC0
	0x0227C47C LDR X8, [X27 + 0x28]
	0x0227C480 LDUR X9, [X29 - 0x8]
	0x0227C484 CMP X8, X9
	0x0227C488 B.NE 0x227C4AC
	0x0227C48C ADD X31, X29, 0x0
	0x0227C490 LDP X20, X19, [X31 + 0x50]
	0x0227C494 LDP X22, X21, [X31 + 0x40]
	0x0227C498 LDP X24, X23, [X31 + 0x30]
	0x0227C49C LDP X26, X25, [X31 + 0x20]
	0x0227C4A0 LDR X27, [X31 + 0x10]
	0x0227C4A4 LDP X29, X30, [X31], #0x60
	0x0227C4A8 RET
	0x0227C4AC BL 0x3EB1B20
	0x0227C4B0 B 0x227C4B8
	0x0227C4B4 B 0x227C4B8
	0x0227C4B8 MOV X24, X0
	0x0227C4BC CMP W1, 0x1
	0x0227C4C0 B.NE 0x227C4EC
	0x0227C4C4 MOV X0, X24
	0x0227C4C8 BL 0x3EB1AD0
	0x0227C4CC LDR X25, [X0]
	0x0227C4D0 BL 0x3EB1AE0
	0x0227C4D4 MOV X0, X21
	0x0227C4D8 MOV X1, X31
	0x0227C4DC BL 0x3BEBA40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x215E000
	008 Move X23, 0x1E78000
	009 Move W8, [X22+2179]
	010 Move X23, [X23+2512]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1E78000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2179], W8
	023 Move X0, [X23]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {53}
	028 Move X22, X0
	029 Compare X21, 0
	030 JumpIfEqual {37}
	031 Move X8, [X22]
	032 Move X0, X21
	033 Move X1, [X8+64]
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {55}
	037 Move W8, [X22+24]
	038 Compare W8, 0
	039 JumpIfEqual {54}
	040 Move [X22+32], X21
	041 Move X0, X20
	042 Move X1, X19
	043 Move X2, X22
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X3, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call AndroidJavaObject._CallStatic, X0, X1, X2
	052 Return 
	053 Call 0x1C17F20
	054 Call 0x1C17F28
	055 Call 0x1C17F44
	056 Move X1, X31
	057 Call 0x1C17DEC

Method: System.Void CallStatic(System.IntPtr methodID, T[] args)

Disassembly:
	0x0227C388 MOV X2, X20
	0x0227C38C BL 0x3EB1B10
	0x0227C390 MOV X0, X21
	0x0227C394 MOV X1, X31
	0x0227C398 MOV X2, X31
	0x0227C39C BL 0x33BE5B0
	0x0227C3A0 TBZ X0, 0x0, 0x227C3D8
	0x0227C3A4 MOV X0, X26
	0x0227C3A8 MOV W1, W31
	0x0227C3AC MOV X2, X20
	0x0227C3B0 BL 0x3EB1B10
	0x0227C3B4 MOV X0, X22
	0x0227C3B8 MOV X1, X26
	0x0227C3BC MOV X2, X20
	0x0227C3C0 BL 0x3EB1AC0
	0x0227C3C4 MOV X0, X23
	0x0227C3C8 MOV X1, X22
	0x0227C3CC MOV X2, X20
	0x0227C3D0 BL 0x3EB1AC0
	0x0227C3D4 B 0x227C45C
	0x0227C3D8 LDR X8, [X24 + 0x38]
	0x0227C3DC LDR X1, [X8 + 0x8]
	0x0227C3E0 SUB X8, X29, 0x10
	0x0227C3E4 LDR X0, [X1]
	0x0227C3E8 STP X22, X21, [X29 - 0x18]
	0x0227C3EC STUR X8, [X29 - 0x20]
	0x0227C3F0 LDR X8, [X1 + 0x10]
	0x0227C3F4 SUB X3, X29, 0x20
	0x0227C3F8 MOV X2, X31
	0x0227C3FC MOV X4, X22
	0x0227C400 BLR X8
	0x0227C404 LDR X8, [X24 + 0x38]
	0x0227C408 LDR X0, [X8]
	0x0227C40C MOV X1, X22
	0x0227C410 BL 0x1C16E04
	0x0227C414 LDR X8, [X24 + 0x38]
	0x0227C418 MOV X26, X0
	0x0227C41C LDR X1, [X8]
	0x0227C420 LDRB W8, [X1 + 0x135]
	0x0227C424 TBNZ X8, 0x0, 0x227C434
	0x0227C428 MOV X0, X1
	0x0227C42C BL 0x1C5C684
	0x0227C430 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x215E000
	008 Move X23, 0x1E78000
	009 Move W8, [X22+2178]
	010 Move X23, [X23+2512]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1E78000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2178], W8
	023 Move X0, [X23]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {53}
	028 Move X22, X0
	029 Compare X21, 0
	030 JumpIfEqual {37}
	031 Move X8, [X22]
	032 Move X0, X21
	033 Move X1, [X8+64]
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {55}
	037 Move W8, [X22+24]
	038 Compare W8, 0
	039 JumpIfEqual {54}
	040 Move [X22+32], X21
	041 Move X0, X20
	042 Move X1, X19
	043 Move X2, X22
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X3, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call AndroidJavaObject._CallStatic, X0, X1, X2
	052 Return 
	053 Call 0x1C17F20
	054 Call 0x1C17F28
	055 Call 0x1C17F44
	056 Move X1, X31
	057 Call 0x1C17DEC

Method: System.Void CallStatic(System.String methodName, System.Object[] args)

Disassembly:
	0x03BF3690 BL 0x1C16F28

ISIL:
No ISIL was generated
Method: System.Void CallStatic(System.IntPtr methodID, System.Object[] args)

Disassembly:
	0x03BF36F4 BL 0x1C16F20

ISIL:
No ISIL was generated
Method: FieldType Get(System.String fieldName)

Disassembly:
	0x0227D51C TBNZ X8, 0x0, 0x227D52C
	0x0227D520 MOV X0, X1
	0x0227D524 BL 0x1C5C684
	0x0227D528 MOV X1, X0
	0x0227D52C CBZ X22, 0x227DB28
	0x0227D530 LDR X8, [X22]
	0x0227D534 LDR X9, [X1 + 0x40]
	0x0227D538 LDR X8, [X8 + 0x40]
	0x0227D53C CMP X8, X9
	0x0227D540 B.NE 0x227DB2C
	0x0227D544 MOV X0, X22
	0x0227D548 BL 0x1C16E08
	0x0227D54C B 0x227DA3C
	0x0227D550 ADRP X8, 0x1E9F000
	0x0227D554 LDR X0, [X26]
	0x0227D558 LDR X8, [X8 + 0x6A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call 0x22C0DBC, X0, X1
	022 Return X0

Method: FieldType Get(System.IntPtr fieldID)

Disassembly:
	0x0227D55C LDR W9, [X0 + 0xE0]
	0x0227D560 LDR X25, [X8]
	0x0227D564 CBNZ W9, 0x227D56C
	0x0227D568 BL 0x1C16DFC
	0x0227D56C MOV X0, X25
	0x0227D570 MOV X1, X31
	0x0227D574 BL 0x338C698
	0x0227D578 LDR X8, [X28]
	0x0227D57C MOV X25, X0
	0x0227D580 LDR X0, [X8]
	0x0227D584 MOV X1, X31
	0x0227D588 BL 0x338C698
	0x0227D58C MOV X26, X0
	0x0227D590 LDR X0, [X27]
	0x0227D594 LDR W8, [X0 + 0xE0]
	0x0227D598 CBNZ W8, 0x227D5A0
	0x0227D59C BL 0x1C16DFC
	0x0227D5A0 MOV X0, X25
	0x0227D5A4 MOV X1, X26
	0x0227D5A8 MOV X2, X31
	0x0227D5AC BL 0x3BF3068
	0x0227D5B0 TBZ X0, 0x0, 0x227DAC4
	0x0227D5B4 LDR X0, [X23 + 0x10]
	0x0227D5B8 MOV X1, X31
	0x0227D5BC BL 0x3BEF01C
	0x0227D5C0 MOV X1, X22
	0x0227D5C4 MOV X2, X20
	0x0227D5C8 MOV X3, X21
	0x0227D5CC MOV X4, X31
	0x0227D5D0 BL 0x3BEE140
	0x0227D5D4 LDR X8, [X28]
	0x0227D5D8 LDR X1, [X8 + 0x10]
	0x0227D5DC BL 0x227B7E4
	0x0227D5E0 MOV W22, W0
	0x0227D5E4 B 0x227DA48
	0x0227D5E8 MOV X0, X22
	0x0227D5EC MOV X1, X31
	0x0227D5F0 BL 0x3BF1A28
	0x0227D5F4 LDR X8, [X28]
	0x0227D5F8 MOV X22, X0
	0x0227D5FC LDR X1, [X8 + 0x8]
	0x0227D600 LDRB W8, [X1 + 0x135]
	0x0227D604 TBNZ X8, 0x0, 0x227D614
	0x0227D608 MOV X0, X1
	0x0227D60C BL 0x1C5C684
	0x0227D610 MOV X1, X0
	0x0227D614 CBZ X22, 0x227DB1C
	0x0227D618 LDR X8, [X22]
	0x0227D61C LDR X9, [X1 + 0x40]
	0x0227D620 LDR X8, [X8 + 0x40]
	0x0227D624 CMP X8, X9
	0x0227D628 B.NE 0x227DB20
	0x0227D62C MOV X0, X22
	0x0227D630 BL 0x1C16E08
	0x0227D634 B 0x227DA3C
	0x0227D638 LDR X0, [X26]
	0x0227D63C LDR X8, [X28]
	0x0227D640 LDR W9, [X0 + 0xE0]
	0x0227D644 LDR X24, [X8]
	0x0227D648 CBNZ W9, 0x227D650
	0x0227D64C BL 0x1C16DFC
	0x0227D650 MOV X0, X24
	0x0227D654 MOV X1, X31
	0x0227D658 BL 0x338C698
	0x0227D65C ADRP X8, 0x1E9D000
	0x0227D660 LDR X8, [X8 + 0xD78]
	0x0227D664 MOV X24, X0

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 32
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move [X29-8], X8
	019 Move X26, [X3+56]
	020 Compare X26, 0
	021 JumpIfNotEqual {26}
	022 Move X0, X3
	023 Move X22, X3
	024 Call 0x1C5D6E0
	025 Move X26, [X22+56]
	026 Move X8, [X26+8]
	027 Move W22, [X8+252]
	028 Add X8, X31, 0
	029 Add X9, X22, 15
	030 And X9, X9, 0x1FFFFFFFF
	031 Subtract X23, X8, X9
	032 Add X31, X23, 0
	033 Add X8, X31, 0
	034 Subtract X24, X8, X9
	035 Add X31, X24, 0
	036 Move X0, X24
	037 Move W1, W31
	038 Move X2, X22
	039 Call 0x3EB2B10
	040 Move X1, [X26]
	041 Subtract X8, X29, 16
	042 Subtract X3, X29, 32
	043 Move X2, X20
	044 Move X0, [X1]
	045 Move [X29-24], X23
	046 Move [X29-16], X21
	047 Move [X29-32], X8
	048 Move X8, [X1+16]
	049 Move X4, X23
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, X24
	052 Move X1, X23
	053 Move X2, X22
	054 Call 0x3EB2AC0
	055 Move X0, X23
	056 Move X1, X24
	057 Move X2, X22
	058 Call 0x3EB2AC0
	059 Move X0, X19
	060 Move X1, X23
	061 Move X2, X22
	062 Call 0x3EB2AC0
	063 Move X8, [X25+40]
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X31, X29, 0
	067 Move X20, [X31+64]
	068 Move X19, [X31+72]
	069 Move X22, [X31+48]
	070 Move X21, [X31+56]
	071 Move X24, [X31+32]
	072 Move X23, [X31+40]
	073 Move X26, [X31+16]
	074 Move X25, [X31+24]
	075 Move X29, [X31+80]
	076 Move X30, [X31+88]
	077 Return X0
	078 Call 0x3EB2B20

Method: System.Void Set(System.String fieldName, FieldType val)

Disassembly:
	0x0227DADC CBNZ W8, 0x227DAE4
	0x0227DAE0 BL 0x1C16DFC
	0x0227DAE4 MOV X0, X22
	0x0227DAE8 MOV X1, X31
	0x0227DAEC BL 0x338C698
	0x0227DAF0 MOV X23, X0
	0x0227DAF4 CBNZ X0, 0x227DB4C
	0x0227DAF8 ADRP X0, 0x1E9F000
	0x0227DAFC LDR X0, [X0 + 0x6C8]
	0x0227DB00 BL 0x1C16D08
	0x0227DB04 MOV X22, X0
	0x0227DB08 MOV X23, X31
	0x0227DB0C B 0x227DB70
	0x0227DB10 BL 0x1C16F20
	0x0227DB14 MOV X0, X22
	0x0227DB18 BL 0x1C171E0
	0x0227DB1C BL 0x1C16F20
	0x0227DB20 MOV X0, X22
	0x0227DB24 BL 0x1C171E0
	0x0227DB28 BL 0x1C16F20
	0x0227DB2C MOV X0, X22
	0x0227DB30 BL 0x1C171E0
	0x0227DB34 BL 0x1C16F20
	0x0227DB38 MOV X0, X22
	0x0227DB3C BL 0x1C171E0
	0x0227DB40 BL 0x1C16F20
	0x0227DB44 MOV X0, X22
	0x0227DB48 BL 0x1C171E0
	0x0227DB4C ADRP X0, 0x1E9F000
	0x0227DB50 LDR X0, [X0 + 0x6C8]
	0x0227DB54 BL 0x1C16D08
	0x0227DB58 LDR X8, [X23]
	0x0227DB5C MOV X22, X0
	0x0227DB60 LDP X9, X1, [X8 + 0x168]
	0x0227DB64 MOV X0, X23
	0x0227DB68 BLR X9
	0x0227DB6C MOV X23, X0
	0x0227DB70 ADRP X0, 0x1E7E000
	0x0227DB74 LDR X0, [X0 + 0x9B0]
	0x0227DB78 BL 0x1C16D08
	0x0227DB7C MOV X2, X0
	0x0227DB80 MOV X0, X22
	0x0227DB84 MOV X1, X23
	0x0227DB88 MOV X3, X31
	0x0227DB8C BL 0x32274B8
	0x0227DB90 MOV X22, X0
	0x0227DB94 ADRP X0, 0x1E76000
	0x0227DB98 LDR X0, [X0 + 0x7D0]
	0x0227DB9C BL 0x1C16D08
	0x0227DBA0 BL 0x1C16F10
	0x0227DBA4 MOV X23, X0
	0x0227DBA8 MOV X1, X22
	0x0227DBAC MOV X2, X31
	0x0227DBB0 BL 0x33B2C70

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 32
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X22, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move [X29-8], X8
	017 Move [X29-32], X2
	018 Move X24, [X3+56]
	019 Compare X24, 0
	020 JumpIfNotEqual {25}
	021 Move X0, X3
	022 Move X21, X3
	023 Call 0x1C5D6E0
	024 Move X24, [X21+56]
	025 Move X8, [X24]
	026 Add X9, X31, 0
	027 Move W2, [X8+252]
	028 Add X10, X2, 15
	029 And X10, X10, 0x1FFFFFFFF
	030 Subtract X21, X9, X10
	031 Add X31, X21, 0
	032 Move W8, [X8+40]
	033 Move X0, X21
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X8, X29, 32
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Call 0x3EB2AC0
	038 Move X8, [X24]
	039 Move X1, [X24+8]
	040 Move W8, [X8+40]
	041 Move X0, [X1]
	042 Move TEMP, X8
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {47}
	046 Move X21, [X21]
	047 Move [X29-24], X20
	048 Move [X29-16], X21
	049 Move X8, [X1+16]
	050 Subtract X3, X29, 24
	051 Move X2, X19
	052 Move X4, X21
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X23+40]
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X31, X29, 0
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X29, [X31+64]
	065 Move X30, [X31+72]
	066 Return 
	067 Call 0x3EB2B20

Method: System.Void Set(System.IntPtr fieldID, FieldType val)

Disassembly:
	0x0227D9FC LDR X8, [X28]
	0x0227DA00 MOV X22, X0
	0x0227DA04 LDR X1, [X8 + 0x8]
	0x0227DA08 LDRB W8, [X1 + 0x135]
	0x0227DA0C TBNZ X8, 0x0, 0x227DA1C
	0x0227DA10 MOV X0, X1
	0x0227DA14 BL 0x1C5C684
	0x0227DA18 MOV X1, X0
	0x0227DA1C CBZ X22, 0x227DBD8
	0x0227DA20 LDR X8, [X22]
	0x0227DA24 LDR X9, [X1 + 0x40]
	0x0227DA28 LDR X8, [X8 + 0x40]
	0x0227DA2C CMP X8, X9
	0x0227DA30 B.NE 0x227DBDC
	0x0227DA34 MOV X0, X22
	0x0227DA38 BL 0x1C16E08
	0x0227DA3C LDRB W8, [X0]
	0x0227DA40 CMP W8, 0x0
	0x0227DA44 CSET W22, NE
	0x0227DA48 MOV X0, X19
	0x0227DA4C MOV X1, X20
	0x0227DA50 MOV X2, X21
	0x0227DA54 MOV X3, X31
	0x0227DA58 BL 0x3BE49F8
	0x0227DA5C LDUR X8, [X29 - 0x18]
	0x0227DA60 LDR X8, [X8 + 0x28]
	0x0227DA64 LDUR X9, [X29 - 0x8]
	0x0227DA68 CMP X8, X9
	0x0227DA6C B.NE 0x227DBE4
	0x0227DA70 AND W0, W22, 0x1
	0x0227DA74 ADD X31, X29, 0x0
	0x0227DA78 LDP X20, X19, [X31 + 0x50]
	0x0227DA7C LDP X22, X21, [X31 + 0x40]
	0x0227DA80 LDP X24, X23, [X31 + 0x30]
	0x0227DA84 LDP X26, X25, [X31 + 0x20]
	0x0227DA88 LDP X28, X27, [X31 + 0x10]
	0x0227DA8C LDP X29, X30, [X31], #0x60
	0x0227DA90 RET
	0x0227DA94 BL 0x1C16F20
	0x0227DA98 BL 0x1C16F20
	0x0227DA9C MOV X0, X22
	0x0227DAA0 BL 0x1C171E0
	0x0227DAA4 MOV X0, X22
	0x0227DAA8 BL 0x1C171E0
	0x0227DAAC BL 0x1C16F20
	0x0227DAB0 MOV X0, X22
	0x0227DAB4 BL 0x1C171E0
	0x0227DAB8 BL 0x1C16F20
	0x0227DABC MOV X0, X22
	0x0227DAC0 BL 0x1C171E0
	0x0227DAC4 LDR X8, [X28]
	0x0227DAC8 LDR X22, [X8]
	0x0227DACC ADRP X0, 0x1E76000
	0x0227DAD0 LDR X0, [X0 + 0x6C0]
	0x0227DAD4 BL 0x1C16D08
	0x0227DAD8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 48
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X22, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move [X29-8], X8
	017 Move [X29-40], X2
	018 Move X24, [X3+56]
	019 Compare X24, 0
	020 JumpIfNotEqual {25}
	021 Move X0, X3
	022 Move X21, X3
	023 Call 0x1C5D6E0
	024 Move X24, [X21+56]
	025 Move X8, [X24]
	026 Add X9, X31, 0
	027 Move W2, [X8+252]
	028 Add X10, X2, 15
	029 And X10, X10, 0x1FFFFFFFF
	030 Subtract X21, X9, X10
	031 Add X31, X21, 0
	032 Move W8, [X8+40]
	033 Move X0, X21
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X8, X29, 40
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Call 0x3EB2AC0
	038 Move X8, [X24]
	039 Move X1, [X24+8]
	040 Move W8, [X8+40]
	041 Move X0, [X1]
	042 Move TEMP, X8
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {47}
	046 Move X21, [X21]
	047 Subtract X8, X29, 16
	048 Move [X29-24], X21
	049 Move [X29-16], X20
	050 Move [X29-32], X8
	051 Move X8, [X1+16]
	052 Subtract X3, X29, 32
	053 Move X2, X19
	054 Move X4, X21
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X23+40]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X31, X29, 0
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X29, [X31+64]
	067 Move X30, [X31+72]
	068 Return 
	069 Call 0x3EB2B20

Method: FieldType GetStatic(System.String fieldName)

Disassembly:
	0x0227D76C MOV X3, X21
	0x0227D770 MOV X4, X31
	0x0227D774 BL 0x3BE6638
	0x0227D778 ADRP X8, 0x1E78000
	0x0227D77C LDR X8, [X8 + 0xA60]
	0x0227D780 STUR X0, [X29 - 0x10]
	0x0227D784 LDR X8, [X8]
	0x0227D788 SUB X1, X29, 0x10
	0x0227D78C MOV X0, X8
	0x0227D790 BL 0x1C16E04
	0x0227D794 LDR X8, [X28]
	0x0227D798 MOV X22, X0
	0x0227D79C LDR X1, [X8 + 0x8]
	0x0227D7A0 LDRB W8, [X1 + 0x135]
	0x0227D7A4 TBNZ X8, 0x0, 0x227D7B4
	0x0227D7A8 MOV X0, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X2, [X8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Call 0x22C2528, X0, X1
	022 Return X0

Method: FieldType GetStatic(System.IntPtr fieldID)

Disassembly:
	0x0227D7EC BL 0x1C16DFC
	0x0227D7F0 MOV X0, X24
	0x0227D7F4 MOV X1, X31
	0x0227D7F8 BL 0x338C698
	0x0227D7FC ADRP X8, 0x1E9E000
	0x0227D800 LDR X8, [X8 + 0xA80]
	0x0227D804 MOV X24, X0
	0x0227D808 LDR X0, [X8]
	0x0227D80C MOV X1, X31
	0x0227D810 BL 0x338C698
	0x0227D814 MOV X1, X0
	0x0227D818 MOV X0, X24
	0x0227D81C MOV X2, X31
	0x0227D820 BL 0x3395194
	0x0227D824 TBZ X0, 0x0, 0x227D8A4
	0x0227D828 LDR X0, [X23 + 0x10]
	0x0227D82C MOV X1, X31
	0x0227D830 BL 0x3BEF01C
	0x0227D834 MOV X1, X22
	0x0227D838 MOV X2, X20
	0x0227D83C MOV X3, X21
	0x0227D840 MOV X4, X31
	0x0227D844 BL 0x3BE6738
	0x0227D848 ADRP X8, 0x1E76000
	0x0227D84C LDR X8, [X8 + 0xA90]
	0x0227D850 STUR S0, [X29 - 0x10]
	0x0227D854 LDR X0, [X8]
	0x0227D858 SUB X1, X29, 0x10
	0x0227D85C BL 0x1C16E04
	0x0227D860 LDR X8, [X28]
	0x0227D864 MOV X22, X0
	0x0227D868 LDR X1, [X8 + 0x8]
	0x0227D86C LDRB W8, [X1 + 0x135]
	0x0227D870 TBNZ X8, 0x0, 0x227D880
	0x0227D874 MOV X0, X1
	0x0227D878 BL 0x1C5C684
	0x0227D87C MOV X1, X0
	0x0227D880 CBZ X22, 0x227DBC0
	0x0227D884 LDR X8, [X22]
	0x0227D888 LDR X9, [X1 + 0x40]
	0x0227D88C LDR X8, [X8 + 0x40]
	0x0227D890 CMP X8, X9
	0x0227D894 B.NE 0x227DBC4
	0x0227D898 MOV X0, X22
	0x0227D89C BL 0x1C16E08
	0x0227D8A0 B 0x227DA3C
	0x0227D8A4 LDR X0, [X26]
	0x0227D8A8 LDR X8, [X28]
	0x0227D8AC LDR W9, [X0 + 0xE0]
	0x0227D8B0 LDR X24, [X8]
	0x0227D8B4 CBNZ W9, 0x227D8BC
	0x0227D8B8 BL 0x1C16DFC
	0x0227D8BC MOV X0, X24
	0x0227D8C0 MOV X1, X31
	0x0227D8C4 BL 0x338C698
	0x0227D8C8 ADRP X8, 0x1E9E000
	0x0227D8CC LDR X8, [X8 + 0xA78]
	0x0227D8D0 MOV X24, X0
	0x0227D8D4 LDR X0, [X8]
	0x0227D8D8 MOV X1, X31
	0x0227D8DC BL 0x338C698
	0x0227D8E0 MOV X1, X0
	0x0227D8E4 MOV X0, X24
	0x0227D8E8 MOV X2, X31
	0x0227D8EC BL 0x3395194
	0x0227D8F0 TBZ X0, 0x0, 0x227D970
	0x0227D8F4 LDR X0, [X23 + 0x10]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 32
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move [X29-8], X8
	019 Move X26, [X3+56]
	020 Compare X26, 0
	021 JumpIfNotEqual {26}
	022 Move X0, X3
	023 Move X22, X3
	024 Call 0x1C5D6E0
	025 Move X26, [X22+56]
	026 Move X8, [X26+8]
	027 Move W22, [X8+252]
	028 Add X8, X31, 0
	029 Add X9, X22, 15
	030 And X9, X9, 0x1FFFFFFFF
	031 Subtract X23, X8, X9
	032 Add X31, X23, 0
	033 Add X8, X31, 0
	034 Subtract X24, X8, X9
	035 Add X31, X24, 0
	036 Move X0, X24
	037 Move W1, W31
	038 Move X2, X22
	039 Call 0x3EB2B10
	040 Move X1, [X26]
	041 Subtract X8, X29, 16
	042 Subtract X3, X29, 32
	043 Move X2, X20
	044 Move X0, [X1]
	045 Move [X29-24], X23
	046 Move [X29-16], X21
	047 Move [X29-32], X8
	048 Move X8, [X1+16]
	049 Move X4, X23
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, X24
	052 Move X1, X23
	053 Move X2, X22
	054 Call 0x3EB2AC0
	055 Move X0, X23
	056 Move X1, X24
	057 Move X2, X22
	058 Call 0x3EB2AC0
	059 Move X0, X19
	060 Move X1, X23
	061 Move X2, X22
	062 Call 0x3EB2AC0
	063 Move X8, [X25+40]
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X31, X29, 0
	067 Move X20, [X31+64]
	068 Move X19, [X31+72]
	069 Move X22, [X31+48]
	070 Move X21, [X31+56]
	071 Move X24, [X31+32]
	072 Move X23, [X31+40]
	073 Move X26, [X31+16]
	074 Move X25, [X31+24]
	075 Move X29, [X31+80]
	076 Move X30, [X31+88]
	077 Return X0
	078 Call 0x3EB2B20

Method: System.Void SetStatic(System.String fieldName, FieldType val)

Disassembly:
	0x0227DC94 B 0x227DD80
	0x0227DC98 B 0x227DD80
	0x0227DC9C B 0x227DD80
	0x0227DCA0 B 0x227DD80
	0x0227DCA4 B 0x227DD80
	0x0227DCA8 B 0x227DD80
	0x0227DCAC B 0x227DD80
	0x0227DCB0 B 0x227DD80
	0x0227DCB4 B 0x227DD80
	0x0227DCB8 B 0x227DD80
	0x0227DCBC B 0x227DD80
	0x0227DCC0 B 0x227DD80
	0x0227DCC4 B 0x227DD80
	0x0227DCC8 B 0x227DD80
	0x0227DCCC B 0x227DD80
	0x0227DCD0 B 0x227DD80
	0x0227DCD4 B 0x227DD80
	0x0227DCD8 B 0x227DD80
	0x0227DCDC B 0x227DD80
	0x0227DCE0 B 0x227DD80
	0x0227DCE4 B 0x227DD80
	0x0227DCE8 B 0x227DD80
	0x0227DCEC B 0x227DD80
	0x0227DCF0 B 0x227DD80
	0x0227DCF4 B 0x227DD80
	0x0227DCF8 B 0x227DD80
	0x0227DCFC B 0x227DD80
	0x0227DD00 B 0x227DD80
	0x0227DD04 B 0x227DD80
	0x0227DD08 B 0x227DD80
	0x0227DD0C B 0x227DD80
	0x0227DD10 B 0x227DD80
	0x0227DD14 B 0x227DD80
	0x0227DD18 B 0x227DD80
	0x0227DD1C B 0x227DD80
	0x0227DD20 B 0x227DD80
	0x0227DD24 B 0x227DD80
	0x0227DD28 B 0x227DD80
	0x0227DD2C B 0x227DD80
	0x0227DD30 B 0x227DD80
	0x0227DD34 B 0x227DD80
	0x0227DD38 B 0x227DD80
	0x0227DD3C B 0x227DD80
	0x0227DD40 B 0x227DD80
	0x0227DD44 B 0x227DD80
	0x0227DD48 B 0x227DD80
	0x0227DD4C B 0x227DD80
	0x0227DD50 B 0x227DD80
	0x0227DD54 B 0x227DD80
	0x0227DD58 B 0x227DD80
	0x0227DD5C B 0x227DD80
	0x0227DD60 B 0x227DD80
	0x0227DD64 B 0x227DD80
	0x0227DD68 B 0x227DD80

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 32
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X22, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move [X29-8], X8
	017 Move [X29-32], X2
	018 Move X24, [X3+56]
	019 Compare X24, 0
	020 JumpIfNotEqual {25}
	021 Move X0, X3
	022 Move X21, X3
	023 Call 0x1C5D6E0
	024 Move X24, [X21+56]
	025 Move X8, [X24]
	026 Add X9, X31, 0
	027 Move W2, [X8+252]
	028 Add X10, X2, 15
	029 And X10, X10, 0x1FFFFFFFF
	030 Subtract X21, X9, X10
	031 Add X31, X21, 0
	032 Move W8, [X8+40]
	033 Move X0, X21
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X8, X29, 32
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Call 0x3EB2AC0
	038 Move X8, [X24]
	039 Move X1, [X24+8]
	040 Move W8, [X8+40]
	041 Move X0, [X1]
	042 Move TEMP, X8
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {47}
	046 Move X21, [X21]
	047 Move [X29-24], X20
	048 Move [X29-16], X21
	049 Move X8, [X1+16]
	050 Subtract X3, X29, 24
	051 Move X2, X19
	052 Move X4, X21
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X23+40]
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X31, X29, 0
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X29, [X31+64]
	065 Move X30, [X31+72]
	066 Return 
	067 Call 0x3EB2B20

Method: System.Void SetStatic(System.IntPtr fieldID, FieldType val)

Disassembly:
	0x0227DBB4 MOV X0, X23
	0x0227DBB8 MOV X1, X24
	0x0227DBBC BL 0x1C16DEC
	0x0227DBC0 BL 0x1C16F20
	0x0227DBC4 MOV X0, X22
	0x0227DBC8 BL 0x1C171E0
	0x0227DBCC BL 0x1C16F20
	0x0227DBD0 MOV X0, X22
	0x0227DBD4 BL 0x1C171E0
	0x0227DBD8 BL 0x1C16F20
	0x0227DBDC MOV X0, X22
	0x0227DBE0 BL 0x1C171E0
	0x0227DBE4 BL 0x3EB1B20
	0x0227DBE8 B 0x227DD80
	0x0227DBEC B 0x227DD80
	0x0227DBF0 B 0x227DD80
	0x0227DBF4 B 0x227DD80
	0x0227DBF8 B 0x227DD80
	0x0227DBFC MOV X22, X0
	0x0227DC00 B 0x227DD84
	0x0227DC04 B 0x227DD80
	0x0227DC08 B 0x227DD80
	0x0227DC0C B 0x227DD80
	0x0227DC10 B 0x227DD80
	0x0227DC14 B 0x227DD80
	0x0227DC18 B 0x227DD80
	0x0227DC1C B 0x227DD80
	0x0227DC20 B 0x227DD80
	0x0227DC24 B 0x227DD80
	0x0227DC28 B 0x227DD80
	0x0227DC2C B 0x227DD80
	0x0227DC30 B 0x227DD80
	0x0227DC34 B 0x227DD80
	0x0227DC38 B 0x227DD80
	0x0227DC3C B 0x227DD80
	0x0227DC40 B 0x227DD80
	0x0227DC44 B 0x227DD80
	0x0227DC48 B 0x227DD80
	0x0227DC4C B 0x227DD80
	0x0227DC50 B 0x227DD80
	0x0227DC54 B 0x227DD80
	0x0227DC58 B 0x227DD80
	0x0227DC5C B 0x227DD80
	0x0227DC60 B 0x227DD80
	0x0227DC64 B 0x227DD80
	0x0227DC68 B 0x227DD80
	0x0227DC6C B 0x227DD80
	0x0227DC70 B 0x227DD80
	0x0227DC74 B 0x227DD80
	0x0227DC78 B 0x227DD80
	0x0227DC7C B 0x227DD80
	0x0227DC80 B 0x227DD80
	0x0227DC84 B 0x227DD80
	0x0227DC88 B 0x227DD80
	0x0227DC8C B 0x227DD80
	0x0227DC90 B 0x227DD80

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 48
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X22, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move [X29-8], X8
	017 Move [X29-40], X2
	018 Move X24, [X3+56]
	019 Compare X24, 0
	020 JumpIfNotEqual {25}
	021 Move X0, X3
	022 Move X21, X3
	023 Call 0x1C5D6E0
	024 Move X24, [X21+56]
	025 Move X8, [X24]
	026 Add X9, X31, 0
	027 Move W2, [X8+252]
	028 Add X10, X2, 15
	029 And X10, X10, 0x1FFFFFFFF
	030 Subtract X21, X9, X10
	031 Add X31, X21, 0
	032 Move W8, [X8+40]
	033 Move X0, X21
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X8, X29, 40
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Call 0x3EB2AC0
	038 Move X8, [X24]
	039 Move X1, [X24+8]
	040 Move W8, [X8+40]
	041 Move X0, [X1]
	042 Move TEMP, X8
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {47}
	046 Move X21, [X21]
	047 Subtract X8, X29, 16
	048 Move [X29-24], X21
	049 Move [X29-16], X20
	050 Move [X29-32], X8
	051 Move X8, [X1+16]
	052 Subtract X3, X29, 32
	053 Move X2, X19
	054 Move X4, X21
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X23+40]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X31, X29, 0
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X24, [X31+16]
	065 Move X23, [X31+24]
	066 Move X29, [X31+64]
	067 Move X30, [X31+72]
	068 Return 
	069 Call 0x3EB2B20

Method: System.IntPtr GetRawObject()

Disassembly:
	0x03BF2AE4 MOV X0, X19
	0x03BF2AE8 BL 0x1C16DEC
	0x03BF2AEC STP X30, X21, [X31 - 0x20]!
	0x03BF2AF0 STP X20, X19, [X31 + 0x10]
	0x03BF2AF4 ADRP X20, 0x7F1000
	0x03BF2AF8 ADRP X21, 0x52A000

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+24]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.IntPtr GetRawClass()

Disassembly:
	0x03BF38A4 CBZ X0, 0x3BF392C
	0x03BF38A8 LDR W8, [X0 + 0x18]
	0x03BF38AC MOV X19, X0
	0x03BF38B0 CBZ W8, 0x3BF3928
	0x03BF38B4 ADD X0, X31, 0x8
	0x03BF38B8 MOV X1, X31
	0x03BF38BC STR X21, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: UnityEngine.AndroidJavaObject CloneReference()

Disassembly:
	0x03BF38DC ADRP X21, 0x529000
	0x03BF38E0 LDR X21, [X21 + 0x6A0]
	0x03BF38E4 STR X20, [X19 + 0x30]
	0x03BF38E8 LDR X0, [X21]
	0x03BF38EC LDR W8, [X0 + 0xE0]
	0x03BF38F0 CBNZ W8, 0x3BF38FC
	0x03BF38F4 BL 0x1C16DFC
	0x03BF38F8 LDR X0, [X21]
	0x03BF38FC LDR X8, [X0 + 0xB8]
	0x03BF3900 LDR X9, [X8]
	0x03BF3904 CBZ X9, 0x3BF392C
	0x03BF3908 LDR X0, [X9 + 0x18]
	0x03BF390C LDR X1, [X8 + 0x28]
	0x03BF3910 MOV X2, X19
	0x03BF3914 BL 0x3BECD40
	0x03BF3918 LDP X20, X19, [X31 + 0x20]
	0x03BF391C LDP X22, X21, [X31 + 0x10]
	0x03BF3920 LDR X30, [X31], #0x30
	0x03BF3924 RET
	0x03BF3928 BL 0x1C16F28
	0x03BF392C BL 0x1C16F20
	0x03BF3930 STP X29, X30, [X31 - 0x60]!
	0x03BF3934 STP X28, X27, [X31 + 0x10]
	0x03BF3938 STP X26, X25, [X31 + 0x20]
	0x03BF393C STP X24, X23, [X31 + 0x30]
	0x03BF3940 STP X22, X21, [X31 + 0x40]
	0x03BF3944 STP X20, X19, [X31 + 0x50]
	0x03BF3948 ADRP X20, 0x7F0000
	0x03BF394C ADRP X22, 0x56B000
	0x03BF3950 ADRP X19, 0x56B000
	0x03BF3954 ADRP X21, 0x529000
	0x03BF3958 ADRP X29, 0x56B000
	0x03BF395C ADRP X23, 0x56B000
	0x03BF3960 ADRP X27, 0x56B000
	0x03BF3964 ADRP X28, 0x56B000
	0x03BF3968 ADRP X25, 0x56B000
	0x03BF396C ADRP X26, 0x56B000
	0x03BF3970 ADRP X24, 0x56B000
	0x03BF3974 LDR X22, [X22 + 0x620]
	0x03BF3978 LDR X19, [X19 + 0x588]
	0x03BF397C LDR X21, [X21 + 0x6A0]
	0x03BF3980 LDR X29, [X29 + 0x628]
	0x03BF3984 LDR X23, [X23 + 0x630]
	0x03BF3988 LDR X27, [X27 + 0x638]
	0x03BF398C LDR X28, [X28 + 0x640]
	0x03BF3990 LDR X25, [X25 + 0x648]
	0x03BF3994 LDR X26, [X26 + 0x650]
	0x03BF3998 LDR X24, [X24 + 0x658]
	0x03BF399C LDRB W8, [X20 + 0x790]
	0x03BF39A0 TBNZ X8, 0x0, 0x3BF3A84
	0x03BF39A4 ADRP X0, 0x529000
	0x03BF39A8 LDR X0, [X0 + 0x6A0]
	0x03BF39AC BL 0x1C16CF4
	0x03BF39B0 ADRP X0, 0x56B000
	0x03BF39B4 LDR X0, [X0 + 0x588]
	0x03BF39B8 BL 0x1C16CF4
	0x03BF39BC ADRP X0, 0x56B000
	0x03BF39C0 LDR X0, [X0 + 0x660]
	0x03BF39C4 BL 0x1C16CF4
	0x03BF39C8 ADRP X0, 0x56B000
	0x03BF39CC LDR X0, [X0 + 0x658]
	0x03BF39D0 BL 0x1C16CF4
	0x03BF39D4 ADRP X0, 0x56B000
	0x03BF39D8 LDR X0, [X0 + 0x640]
	0x03BF39DC BL 0x1C16CF4
	0x03BF39E0 ADRP X0, 0x56B000
	0x03BF39E4 LDR X0, [X0 + 0x648]
	0x03BF39E8 BL 0x1C16CF4
	0x03BF39EC ADRP X0, 0x56B000
	0x03BF39F0 LDR X0, [X0 + 0x668]
	0x03BF39F4 BL 0x1C16CF4
	0x03BF39F8 ADRP X0, 0x56B000
	0x03BF39FC LDR X0, [X0 + 0x638]
	0x03BF3A00 BL 0x1C16CF4
	0x03BF3A04 ADRP X0, 0x56B000
	0x03BF3A08 LDR X0, [X0 + 0x670]
	0x03BF3A0C BL 0x1C16CF4
	0x03BF3A10 ADRP X0, 0x56B000
	0x03BF3A14 LDR X0, [X0 + 0x678]
	0x03BF3A18 BL 0x1C16CF4
	0x03BF3A1C ADRP X0, 0x56B000
	0x03BF3A20 LDR X0, [X0 + 0x630]
	0x03BF3A24 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x7F1000
	008 Move W8, [X20+1918]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x501000
	015 Move X0, [X0+2448]
	016 Call 0x1C17CF4
	017 Move X0, 0x52A000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move X0, 0x56C000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1918], W8
	025 Move X8, [X19+24]
	026 Compare X8, 0
	027 JumpIfEqual {79}
	028 Move X9, [X19+16]
	029 Compare X9, 0
	030 JumpIfEqual {62}
	031 Move X8, 0x52A000
	032 Move X8, [X8+2576]
	033 Move X0, [X8]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X20, X0
	037 Call Object..ctor, X0
	038 Move X8, [X19+16]
	039 Compare X8, 0
	040 JumpIfEqual {78}
	041 Move X23, 0x56C000
	042 Move X23, [X23+1416]
	043 Move X22, [X8+24]
	044 Move X0, [X23]
	045 Call 0x1C17F10
	046 Move X1, X22
	047 Move X21, X0
	048 Call GlobalJavaObjectRef..ctor, X0, X1
	049 Compare X20, 0
	050 JumpIfEqual {78}
	051 Move [X20+16], X21
	052 Move X8, [X19+24]
	053 Compare X8, 0
	054 JumpIfEqual {78}
	055 Move X0, [X23]
	056 Move X19, [X8+24]
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X21, X0
	060 Call GlobalJavaObjectRef..ctor, X0, X1
	061 Move [X20+24], X21
	062 Move X19, [X8+24]
	063 Move X8, 0x501000
	064 Move X8, [X8+2448]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X20, X0
	069 Call AndroidJavaClass..ctor, X0, X1
	070 Move X0, X20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Return X0
	078 Call 0x1C17F20
	079 Move X0, 0x501000
	080 Move X0, [X0+2000]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0x56C000
	085 Move X0, [X0+1512]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call Exception..ctor, X0, X1
	091 Move X0, 0x56C000
	092 Move X0, [X0+1520]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Call 0x1C17DEC

Method: ReturnType Call(System.String methodName, T[] args)

Disassembly:
	0x0227BEEC MOV X21, X0
	0x0227BEF0 CMP W1, 0x1
	0x0227BEF4 B.NE 0x227BF24
	0x0227BEF8 MOV X0, X21
	0x0227BEFC BL 0x3EB1AD0
	0x0227BF00 LDR X20, [X0]
	0x0227BF04 BL 0x3EB1AE0
	0x0227BF08 MOV X0, X19
	0x0227BF0C MOV X1, X31
	0x0227BF10 BL 0x3BEBA40
	0x0227BF14 MOV X21, X31
	0x0227BF18 CBZ X20, 0x227BEC8
	0x0227BF1C MOV X0, X20
	0x0227BF20 BL 0x1C16F18
	0x0227BF24 MOV X20, X31
	0x0227BF28 B 0x227BF30
	0x0227BF2C MOV X21, X0
	0x0227BF30 MOV X0, X19
	0x0227BF34 MOV X1, X31
	0x0227BF38 BL 0x3BEBA40
	0x0227BF3C CBNZ X20, 0x227BF48
	0x0227BF40 MOV X0, X21
	0x0227BF44 BL 0x1D2C690
	0x0227BF48 MOV X0, X20
	0x0227BF4C BL 0x1C16F18
	0x0227BF50 BL 0x1990590
	0x0227BF54 STR X30, [X31 - 0x30]!
	0x0227BF58 STP X22, X21, [X31 + 0x10]
	0x0227BF5C STP X20, X19, [X31 + 0x20]
	0x0227BF60 LDR X8, [X1 + 0x38]
	0x0227BF64 MOV X21, X1
	0x0227BF68 MOV X19, X0
	0x0227BF6C CBNZ X8, 0x227BF78
	0x0227BF70 MOV X0, X21
	0x0227BF74 BL 0x1C5C6E0
	0x0227BF78 MOV X0, X19
	0x0227BF7C MOV X1, X31
	0x0227BF80 MOV X2, X31
	0x0227BF84 BL 0x33BE5B0
	0x0227BF88 MOV X22, X31
	0x0227BF8C TBNZ X0, 0x0, 0x227BFF4
	0x0227BF90 LDR X8, [X21 + 0x38]
	0x0227BF94 LDR X1, [X8 + 0x8]
	0x0227BF98 MOV X0, X19
	0x0227BF9C BL 0x227A0C0
	0x0227BFA0 LDR X8, [X21 + 0x38]
	0x0227BFA4 MOV X20, X0
	0x0227BFA8 LDR X21, [X8]
	0x0227BFAC LDRB W8, [X21 + 0x135]
	0x0227BFB0 TBNZ X8, 0x0, 0x227BFC0
	0x0227BFB4 MOV X0, X21
	0x0227BFB8 BL 0x1C5C684
	0x0227BFBC MOV X21, X0
	0x0227BFC0 CBZ X20, 0x227BFE4
	0x0227BFC4 MOV X0, X20
	0x0227BFC8 MOV X1, X21
	0x0227BFCC BL 0x1C16E00
	0x0227BFD0 MOV X22, X0
	0x0227BFD4 CBNZ X0, 0x227BFE8
	0x0227BFD8 MOV X0, X20
	0x0227BFDC MOV X1, X21
	0x0227BFE0 BL 0x1C171E0
	0x0227BFE4 MOV X22, X31
	0x0227BFE8 MOV X0, X19
	0x0227BFEC MOV X1, X31
	0x0227BFF0 BL 0x3BEBA40
	0x0227BFF4 MOV X0, X22
	0x0227BFF8 LDP X20, X19, [X31 + 0x20]
	0x0227BFFC LDP X22, X21, [X31 + 0x10]
	0x0227C000 LDR X30, [X31], #0x30
	0x0227C004 RET
	0x0227C008 CMP W1, 0x1
	0x0227C00C MOV X21, X0
	0x0227C010 B.NE 0x227C040
	0x0227C014 MOV X0, X21
	0x0227C018 BL 0x3EB1AD0
	0x0227C01C LDR X20, [X0]
	0x0227C020 BL 0x3EB1AE0
	0x0227C024 MOV X0, X19
	0x0227C028 MOV X1, X31
	0x0227C02C BL 0x3BEBA40
	0x0227C030 MOV X22, X31
	0x0227C034 CBZ X20, 0x227BFF4
	0x0227C038 MOV X0, X20
	0x0227C03C BL 0x1C16F18
	0x0227C040 MOV X20, X31
	0x0227C044 B 0x227C04C
	0x0227C048 MOV X21, X0
	0x0227C04C MOV X0, X19
	0x0227C050 MOV X1, X31
	0x0227C054 BL 0x3BEBA40
	0x0227C058 CBNZ X20, 0x227C064
	0x0227C05C MOV X0, X21
	0x0227C060 BL 0x1D2C690
	0x0227C064 MOV X0, X20
	0x0227C068 BL 0x1C16F18

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X22, X4
	018 Move X19, X3
	019 Move X23, X2
	020 Move [X29-8], X8
	021 Move X8, [X4+56]
	022 Move X21, X1
	023 Move X20, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {35}
	026 Move X0, 0x1E79000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X8, [X22+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X22
	033 Call 0x1C5D6E0
	034 Move X8, [X22+56]
	035 Move X8, [X8+16]
	036 Move W24, [X8+252]
	037 Add X8, X31, 0
	038 Add X9, X24, 15
	039 And X9, X9, 0x1FFFFFFFF
	040 Subtract X25, X8, X9
	041 Add X31, X25, 0
	042 Add X8, X31, 0
	043 Subtract X26, X8, X9
	044 Add X31, X26, 0
	045 Move X0, X26
	046 Move W1, W31
	047 Move X2, X24
	048 Call 0x3EB2B10
	049 Move X8, 0x1E79000
	050 Move X8, [X8+2512]
	051 Move W1, 1
	052 Move X0, [X8]
	053 Call 0x1C17D6C
	054 Compare X0, 0
	055 JumpIfEqual {109}
	056 Move X27, X0
	057 Compare X23, 0
	058 JumpIfEqual {65}
	059 Move X8, [X27]
	060 Move X0, X23
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {111}
	065 Move W8, [X27+24]
	066 Compare W8, 0
	067 JumpIfEqual {110}
	068 Move [X27+32], X23
	069 Move X8, [X22+56]
	070 Subtract X3, X29, 32
	071 Move X2, X20
	072 Move X4, X25
	073 Move X1, [X8+8]
	074 Move X0, [X1]
	075 Move [X29-32], X21
	076 Move [X29-24], X27
	077 Move [X29-16], X25
	078 Move X8, [X1+16]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X0, X26
	081 Move X1, X25
	082 Move X2, X24
	083 Call 0x3EB2AC0
	084 Move X0, X25
	085 Move X1, X26
	086 Move X2, X24
	087 Call 0x3EB2AC0
	088 Move X0, X19
	089 Move X1, X25
	090 Move X2, X24
	091 Call 0x3EB2AC0
	092 Move X8, [X28+40]
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X31, X29, 0
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X22, [X31+64]
	099 Move X21, [X31+72]
	100 Move X24, [X31+48]
	101 Move X23, [X31+56]
	102 Move X26, [X31+32]
	103 Move X25, [X31+40]
	104 Move X28, [X31+16]
	105 Move X27, [X31+24]
	106 Move X29, [X31+96]
	107 Move X30, [X31+104]
	108 Return X0
	109 Call 0x1C17F20
	110 Call 0x1C17F28
	111 Call 0x1C17F44
	112 Move X1, X31
	113 Call 0x1C17DEC
	114 Call 0x3EB2B20

Method: ReturnType Call(System.IntPtr methodID, T[] args)

Disassembly:
	0x0227BD68 LDR X9, [X1 + 0x40]
	0x0227BD6C LDR X8, [X8 + 0x40]
	0x0227BD70 CMP X8, X9
	0x0227BD74 B.NE 0x227BDA8
	0x0227BD78 MOV X0, X21
	0x0227BD7C BL 0x1C16E08
	0x0227BD80 LDR W20, [X0]
	0x0227BD84 MOV X0, X19
	0x0227BD88 MOV X1, X31
	0x0227BD8C BL 0x3BEBA40
	0x0227BD90 MOV W0, W20
	0x0227BD94 LDP X20, X19, [X31 + 0x20]
	0x0227BD98 LDP X30, X21, [X31 + 0x10]
	0x0227BD9C ADD X31, X31, 0x30
	0x0227BDA0 RET
	0x0227BDA4 BL 0x1C16F20
	0x0227BDA8 MOV X0, X21
	0x0227BDAC BL 0x1C171E0
	0x0227BDB0 B 0x227BDB4
	0x0227BDB4 MOV X20, X0
	0x0227BDB8 CMP W1, 0x1
	0x0227BDBC B.NE 0x227BDE8
	0x0227BDC0 MOV X0, X20
	0x0227BDC4 BL 0x3EB1AD0
	0x0227BDC8 LDR X21, [X0]
	0x0227BDCC BL 0x3EB1AE0
	0x0227BDD0 MOV X0, X19
	0x0227BDD4 MOV X1, X31
	0x0227BDD8 BL 0x3BEBA40
	0x0227BDDC CBZ X21, 0x227BD14
	0x0227BDE0 MOV X0, X21
	0x0227BDE4 BL 0x1C16F18
	0x0227BDE8 MOV X21, X31
	0x0227BDEC B 0x227BDF4
	0x0227BDF0 MOV X20, X0
	0x0227BDF4 MOV X0, X19
	0x0227BDF8 MOV X1, X31
	0x0227BDFC BL 0x3BEBA40
	0x0227BE00 CBNZ X21, 0x227BE0C
	0x0227BE04 MOV X0, X20
	0x0227BE08 BL 0x1D2C690
	0x0227BE0C MOV X0, X21
	0x0227BE10 BL 0x1C16F18
	0x0227BE14 BL 0x1990590
	0x0227BE18 SUB X31, X31, 0x30
	0x0227BE1C STP X30, X21, [X31 + 0x10]
	0x0227BE20 STP X20, X19, [X31 + 0x20]
	0x0227BE24 LDR X8, [X1 + 0x38]
	0x0227BE28 MOV X20, X1
	0x0227BE2C MOV X19, X0
	0x0227BE30 CBNZ X8, 0x227BE3C
	0x0227BE34 MOV X0, X20
	0x0227BE38 BL 0x1C5C6E0
	0x0227BE3C MOV X0, X19
	0x0227BE40 MOV X1, X31
	0x0227BE44 MOV X2, X31
	0x0227BE48 BL 0x33BE5B0
	0x0227BE4C MOV X21, X31
	0x0227BE50 TBNZ X0, 0x0, 0x227BEC8
	0x0227BE54 LDR X8, [X20 + 0x38]
	0x0227BE58 LDR X1, [X8 + 0x8]
	0x0227BE5C MOV X0, X19
	0x0227BE60 BL 0x227A088
	0x0227BE64 STR X0, [X31 + 0x8]
	0x0227BE68 LDR X8, [X20 + 0x38]
	0x0227BE6C LDR X0, [X8]
	0x0227BE70 ADD X1, X31, 0x8
	0x0227BE74 BL 0x1C16E04
	0x0227BE78 LDR X8, [X20 + 0x38]
	0x0227BE7C MOV X21, X0
	0x0227BE80 LDR X1, [X8]
	0x0227BE84 LDRB W8, [X1 + 0x135]
	0x0227BE88 TBNZ X8, 0x0, 0x227BE98
	0x0227BE8C MOV X0, X1
	0x0227BE90 BL 0x1C5C684
	0x0227BE94 MOV X1, X0
	0x0227BE98 CBZ X21, 0x227BEDC
	0x0227BE9C LDR X8, [X21]
	0x0227BEA0 LDR X9, [X1 + 0x40]
	0x0227BEA4 LDR X8, [X8 + 0x40]
	0x0227BEA8 CMP X8, X9
	0x0227BEAC B.NE 0x227BEE0
	0x0227BEB0 MOV X0, X21
	0x0227BEB4 BL 0x1C16E08
	0x0227BEB8 LDR X21, [X0]
	0x0227BEBC MOV X0, X19
	0x0227BEC0 MOV X1, X31
	0x0227BEC4 BL 0x3BEBA40
	0x0227BEC8 MOV X0, X21
	0x0227BECC LDP X20, X19, [X31 + 0x20]
	0x0227BED0 LDP X30, X21, [X31 + 0x10]
	0x0227BED4 ADD X31, X31, 0x30
	0x0227BED8 RET
	0x0227BEDC BL 0x1C16F20
	0x0227BEE0 MOV X0, X21
	0x0227BEE4 BL 0x1C171E0
	0x0227BEE8 B 0x227BEEC

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X22, X4
	018 Move X19, X3
	019 Move X24, X2
	020 Move [X29-8], X8
	021 Move X8, [X4+56]
	022 Move X21, X1
	023 Move X20, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {35}
	026 Move X0, 0x1E79000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X8, [X22+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X22
	033 Call 0x1C5D6E0
	034 Move X8, [X22+56]
	035 Move X8, [X8+16]
	036 Move W23, [X8+252]
	037 Add X8, X31, 0
	038 Add X9, X23, 15
	039 And X9, X9, 0x1FFFFFFFF
	040 Subtract X25, X8, X9
	041 Add X31, X25, 0
	042 Add X8, X31, 0
	043 Subtract X26, X8, X9
	044 Add X31, X26, 0
	045 Move X0, X26
	046 Move W1, W31
	047 Move X2, X23
	048 Call 0x3EB2B10
	049 Move X8, 0x1E79000
	050 Move X8, [X8+2512]
	051 Move W1, 1
	052 Move X0, [X8]
	053 Call 0x1C17D6C
	054 Compare X0, 0
	055 JumpIfEqual {111}
	056 Move X27, X0
	057 Compare X24, 0
	058 JumpIfEqual {65}
	059 Move X8, [X27]
	060 Move X0, X24
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {113}
	065 Move W8, [X27+24]
	066 Compare W8, 0
	067 JumpIfEqual {112}
	068 Move [X27+32], X24
	069 Move X8, [X22+56]
	070 Subtract X3, X29, 40
	071 Move X2, X20
	072 Move X4, X25
	073 Move X1, [X8+8]
	074 Subtract X8, X29, 16
	075 Move X0, [X1]
	076 Move [X29-24], X25
	077 Move [X29-16], X21
	078 Move [X29-40], X8
	079 Move [X29-32], X27
	080 Move X8, [X1+16]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X0, X26
	083 Move X1, X25
	084 Move X2, X23
	085 Call 0x3EB2AC0
	086 Move X0, X25
	087 Move X1, X26
	088 Move X2, X23
	089 Call 0x3EB2AC0
	090 Move X0, X19
	091 Move X1, X25
	092 Move X2, X23
	093 Call 0x3EB2AC0
	094 Move X8, [X28+40]
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X31, X29, 0
	098 Move X20, [X31+80]
	099 Move X19, [X31+88]
	100 Move X22, [X31+64]
	101 Move X21, [X31+72]
	102 Move X24, [X31+48]
	103 Move X23, [X31+56]
	104 Move X26, [X31+32]
	105 Move X25, [X31+40]
	106 Move X28, [X31+16]
	107 Move X27, [X31+24]
	108 Move X29, [X31+96]
	109 Move X30, [X31+104]
	110 Return X0
	111 Call 0x1C17F20
	112 Call 0x1C17F28
	113 Call 0x1C17F44
	114 Move X1, X31
	115 Call 0x1C17DEC
	116 Call 0x3EB2B20

Method: ReturnType Call(System.String methodName, System.Object[] args)

Disassembly:
	0x0227B714 BL 0x1C16D6C
	0x0227B718 CBZ X0, 0x227B7CC
	0x0227B71C MOV X27, X0
	0x0227B720 CBZ X23, 0x227B738
	0x0227B724 LDR X8, [X27]
	0x0227B728 MOV X0, X23
	0x0227B72C LDR X1, [X8 + 0x40]
	0x0227B730 BL 0x1C16E00
	0x0227B734 CBZ X0, 0x227B7D4
	0x0227B738 LDR W8, [X27 + 0x18]
	0x0227B73C CBZ W8, 0x227B7D0
	0x0227B740 STR X23, [X27 + 0x20]
	0x0227B744 LDR X8, [X22 + 0x38]
	0x0227B748 SUB X3, X29, 0x20
	0x0227B74C MOV X2, X20
	0x0227B750 MOV X4, X25
	0x0227B754 LDR X1, [X8 + 0x8]
	0x0227B758 LDR X0, [X1]
	0x0227B75C STP X21, X27, [X29 - 0x20]
	0x0227B760 STUR X25, [X29 - 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {16}
	012 Move X0, X3
	013 Move X22, X3
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X3, [X8]
	017 Move X0, X21
	018 Move X1, X20
	019 Move X2, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Call 0x227EDFC, X0, X1, X2
	026 Return X0

Method: ReturnType Call(System.IntPtr methodID, System.Object[] args)

Disassembly:
	0x0227B9E4 LDP X20, X19, [X31 + 0x20]
	0x0227B9E8 LDP X30, X21, [X31 + 0x10]
	0x0227B9EC ADD X31, X31, 0x30
	0x0227B9F0 RET
	0x0227B9F4 BL 0x1C16F20
	0x0227B9F8 MOV X0, X21
	0x0227B9FC BL 0x1C171E0
	0x0227BA00 B 0x227BA04
	0x0227BA04 MOV X20, X0
	0x0227BA08 CMP W1, 0x1
	0x0227BA0C B.NE 0x227BA38
	0x0227BA10 MOV X0, X20
	0x0227BA14 BL 0x3EB1AD0
	0x0227BA18 LDR X21, [X0]
	0x0227BA1C BL 0x3EB1AE0
	0x0227BA20 MOV X0, X19
	0x0227BA24 MOV X1, X31
	0x0227BA28 BL 0x3BEBA40
	0x0227BA2C CBZ X21, 0x227B964
	0x0227BA30 MOV X0, X21
	0x0227BA34 BL 0x1C16F18
	0x0227BA38 MOV X21, X31
	0x0227BA3C B 0x227BA44
	0x0227BA40 MOV X20, X0
	0x0227BA44 MOV X0, X19
	0x0227BA48 MOV X1, X31
	0x0227BA4C BL 0x3BEBA40
	0x0227BA50 CBNZ X21, 0x227BA5C
	0x0227BA54 MOV X0, X20
	0x0227BA58 BL 0x1D2C690
	0x0227BA5C MOV X0, X21
	0x0227BA60 BL 0x1C16F18
	0x0227BA64 BL 0x1990590
	0x0227BA68 STR D8, [X31 - 0x30]!
	0x0227BA6C STP X30, X21, [X31 + 0x10]
	0x0227BA70 STP X20, X19, [X31 + 0x20]
	0x0227BA74 LDR X8, [X1 + 0x38]
	0x0227BA78 MOV X20, X1
	0x0227BA7C MOV X19, X0
	0x0227BA80 CBNZ X8, 0x227BA8C
	0x0227BA84 MOV X0, X20
	0x0227BA88 BL 0x1C5C6E0
	0x0227BA8C MOV X0, X19
	0x0227BA90 MOV X1, X31
	0x0227BA94 MOV X2, X31
	0x0227BA98 BL 0x33BE5B0
	0x0227BA9C FMOV D8, X31
	0x0227BAA0 TBNZ X0, 0x0, 0x227BB18
	0x0227BAA4 LDR X8, [X20 + 0x38]
	0x0227BAA8 LDR X1, [X8 + 0x8]
	0x0227BAAC MOV X0, X19
	0x0227BAB0 BL 0x2279FE0
	0x0227BAB4 STR D0, [X31 + 0x8]
	0x0227BAB8 LDR X8, [X20 + 0x38]
	0x0227BABC LDR X0, [X8]
	0x0227BAC0 ADD X1, X31, 0x8
	0x0227BAC4 BL 0x1C16E04
	0x0227BAC8 LDR X8, [X20 + 0x38]
	0x0227BACC MOV X21, X0
	0x0227BAD0 LDR X1, [X8]
	0x0227BAD4 LDRB W8, [X1 + 0x135]
	0x0227BAD8 TBNZ X8, 0x0, 0x227BAE8
	0x0227BADC MOV X0, X1
	0x0227BAE0 BL 0x1C5C684
	0x0227BAE4 MOV X1, X0
	0x0227BAE8 CBZ X21, 0x227BB2C
	0x0227BAEC LDR X8, [X21]
	0x0227BAF0 LDR X9, [X1 + 0x40]
	0x0227BAF4 LDR X8, [X8 + 0x40]
	0x0227BAF8 CMP X8, X9

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 48
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X19, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move [X29-8], X8
	020 Move X27, [X4+56]
	021 Move X20, X0
	022 Compare X27, 0
	023 JumpIfNotEqual {28}
	024 Move X0, X4
	025 Move X23, X4
	026 Call 0x1C5D6E0
	027 Move X27, [X23+56]
	028 Move X8, [X27+8]
	029 Move W23, [X8+252]
	030 Add X8, X31, 0
	031 Add X9, X23, 15
	032 And X9, X9, 0x1FFFFFFFF
	033 Subtract X24, X8, X9
	034 Add X31, X24, 0
	035 Add X8, X31, 0
	036 Subtract X25, X8, X9
	037 Add X31, X25, 0
	038 Move X0, X25
	039 Move W1, W31
	040 Move X2, X23
	041 Call 0x3EB2B10
	042 Move X1, [X27]
	043 Subtract X8, X29, 16
	044 Subtract X3, X29, 40
	045 Move X2, X20
	046 Move X0, [X1]
	047 Move [X29-24], X24
	048 Move [X29-16], X22
	049 Move [X29-40], X8
	050 Move [X29-32], X21
	051 Move X8, [X1+16]
	052 Move X4, X24
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X0, X25
	055 Move X1, X24
	056 Move X2, X23
	057 Call 0x3EB2AC0
	058 Move X0, X24
	059 Move X1, X25
	060 Move X2, X23
	061 Call 0x3EB2AC0
	062 Move X0, X19
	063 Move X1, X24
	064 Move X2, X23
	065 Call 0x3EB2AC0
	066 Move X8, [X26+40]
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X31, X29, 0
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X27, [X31+16]
	079 Move X29, [X31+96]
	080 Move X30, [X31+104]
	081 Return X0
	082 Call 0x3EB2B20

Method: ReturnType CallStatic(System.String methodName, T[] args)

Disassembly:
	0x0227C664 BL 0x3EB1B20
	0x0227C668 STP X29, X30, [X31 - 0x50]!
	0x0227C66C STP X26, X25, [X31 + 0x10]
	0x0227C670 STP X24, X23, [X31 + 0x20]
	0x0227C674 STP X22, X21, [X31 + 0x30]
	0x0227C678 STP X20, X19, [X31 + 0x40]
	0x0227C67C ADD X29, X31, 0x0
	0x0227C680 SUB X31, X31, 0x20
	0x0227C684 MRS X25, 0xC000
	0x0227C688 LDR X8, [X25 + 0x28]
	0x0227C68C MOV X19, X2
	0x0227C690 MOV X21, X1
	0x0227C694 MOV X20, X0
	0x0227C698 STUR X8, [X29 - 0x8]
	0x0227C69C LDR X26, [X3 + 0x38]
	0x0227C6A0 CBNZ X26, 0x227C6B4
	0x0227C6A4 MOV X0, X3
	0x0227C6A8 MOV X22, X3
	0x0227C6AC BL 0x1C5C6E0
	0x0227C6B0 LDR X26, [X22 + 0x38]
	0x0227C6B4 LDR X8, [X26 + 0x8]
	0x0227C6B8 LDR W22, [X8 + 0xFC]
	0x0227C6BC ADD X8, X31, 0x0
	0x0227C6C0 ADD X9, X22, 0xF
	0x0227C6C4 AND X9, X9, 0x1FFFFFFFF
	0x0227C6C8 SUB X23, X8, X9
	0x0227C6CC ADD X31, X23, 0x0
	0x0227C6D0 ADD X8, X31, 0x0
	0x0227C6D4 SUB X24, X8, X9
	0x0227C6D8 ADD X31, X24, 0x0
	0x0227C6DC MOV X0, X24
	0x0227C6E0 MOV W1, W31
	0x0227C6E4 MOV X2, X22
	0x0227C6E8 BL 0x3EB1B10
	0x0227C6EC LDR X1, [X26]
	0x0227C6F0 SUB X3, X29, 0x18
	0x0227C6F4 MOV X2, X20
	0x0227C6F8 MOV X4, X23
	0x0227C6FC LDR X0, [X1]
	0x0227C700 STP X21, X23, [X29 - 0x18]
	0x0227C704 LDR X8, [X1 + 0x10]
	0x0227C708 BLR X8
	0x0227C70C MOV X0, X24
	0x0227C710 MOV X1, X23
	0x0227C714 MOV X2, X22
	0x0227C718 BL 0x3EB1AC0
	0x0227C71C MOV X0, X23
	0x0227C720 MOV X1, X24
	0x0227C724 MOV X2, X22
	0x0227C728 BL 0x3EB1AC0
	0x0227C72C MOV X0, X19
	0x0227C730 MOV X1, X23
	0x0227C734 MOV X2, X22
	0x0227C738 BL 0x3EB1AC0
	0x0227C73C LDR X8, [X25 + 0x28]
	0x0227C740 LDUR X9, [X29 - 0x8]
	0x0227C744 CMP X8, X9
	0x0227C748 B.NE 0x227C768
	0x0227C74C ADD X31, X29, 0x0
	0x0227C750 LDP X20, X19, [X31 + 0x40]
	0x0227C754 LDP X22, X21, [X31 + 0x30]
	0x0227C758 LDP X24, X23, [X31 + 0x20]
	0x0227C75C LDP X26, X25, [X31 + 0x10]
	0x0227C760 LDP X29, X30, [X31], #0x50
	0x0227C764 RET
	0x0227C768 BL 0x3EB1B20
	0x0227C76C STP X30, X21, [X31 - 0x20]!
	0x0227C770 STP X20, X19, [X31 + 0x10]
	0x0227C774 LDR X8, [X2 + 0x38]
	0x0227C778 MOV X19, X1
	0x0227C77C MOV X20, X0
	0x0227C780 CBNZ X8, 0x227C794
	0x0227C784 MOV X0, X2
	0x0227C788 MOV X21, X2
	0x0227C78C BL 0x1C5C6E0
	0x0227C790 LDR X8, [X21 + 0x38]
	0x0227C794 LDR X2, [X8]
	0x0227C798 MOV X0, X20
	0x0227C79C MOV X1, X19
	0x0227C7A0 LDP X20, X19, [X31 + 0x10]
	0x0227C7A4 LDP X30, X21, [X31], #0x20
	0x0227C7A8 B 0x22C1528
	0x0227C7AC STP X30, X21, [X31 - 0x20]!
	0x0227C7B0 STP X20, X19, [X31 + 0x10]
	0x0227C7B4 LDR X8, [X2 + 0x38]
	0x0227C7B8 MOV X19, X1
	0x0227C7BC MOV X20, X0
	0x0227C7C0 CBNZ X8, 0x227C7D4
	0x0227C7C4 MOV X0, X2
	0x0227C7C8 MOV X21, X2
	0x0227C7CC BL 0x1C5C6E0
	0x0227C7D0 LDR X8, [X21 + 0x38]
	0x0227C7D4 LDR X2, [X8]
	0x0227C7D8 MOV X0, X20
	0x0227C7DC MOV X1, X19
	0x0227C7E0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X22, X4
	018 Move X19, X3
	019 Move X23, X2
	020 Move [X29-8], X8
	021 Move X8, [X4+56]
	022 Move X21, X1
	023 Move X20, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {35}
	026 Move X0, 0x1E78000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X8, [X22+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X22
	033 Call 0x1C5D6E0
	034 Move X8, [X22+56]
	035 Move X8, [X8+16]
	036 Move W24, [X8+252]
	037 Add X8, X31, 0
	038 Add X9, X24, 15
	039 And X9, X9, 0x1FFFFFFFF
	040 Subtract X25, X8, X9
	041 Add X31, X25, 0
	042 Add X8, X31, 0
	043 Subtract X26, X8, X9
	044 Add X31, X26, 0
	045 Move X0, X26
	046 Move W1, W31
	047 Move X2, X24
	048 Call 0x3EB2B10
	049 Move X8, 0x1E78000
	050 Move X8, [X8+2512]
	051 Move W1, 1
	052 Move X0, [X8]
	053 Call 0x1C17D6C
	054 Compare X0, 0
	055 JumpIfEqual {109}
	056 Move X27, X0
	057 Compare X23, 0
	058 JumpIfEqual {65}
	059 Move X8, [X27]
	060 Move X0, X23
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {111}
	065 Move W8, [X27+24]
	066 Compare W8, 0
	067 JumpIfEqual {110}
	068 Move [X27+32], X23
	069 Move X8, [X22+56]
	070 Subtract X3, X29, 32
	071 Move X2, X20
	072 Move X4, X25
	073 Move X1, [X8+8]
	074 Move X0, [X1]
	075 Move [X29-32], X21
	076 Move [X29-24], X27
	077 Move [X29-16], X25
	078 Move X8, [X1+16]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X0, X26
	081 Move X1, X25
	082 Move X2, X24
	083 Call 0x3EB2AC0
	084 Move X0, X25
	085 Move X1, X26
	086 Move X2, X24
	087 Call 0x3EB2AC0
	088 Move X0, X19
	089 Move X1, X25
	090 Move X2, X24
	091 Call 0x3EB2AC0
	092 Move X8, [X28+40]
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X31, X29, 0
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X22, [X31+64]
	099 Move X21, [X31+72]
	100 Move X24, [X31+48]
	101 Move X23, [X31+56]
	102 Move X26, [X31+32]
	103 Move X25, [X31+40]
	104 Move X28, [X31+16]
	105 Move X27, [X31+24]
	106 Move X29, [X31+96]
	107 Move X30, [X31+104]
	108 Return X0
	109 Call 0x1C17F20
	110 Call 0x1C17F28
	111 Call 0x1C17F44
	112 Move X1, X31
	113 Call 0x1C17DEC
	114 Call 0x3EB2B20

Method: ReturnType CallStatic(System.IntPtr methodID, T[] args)

Disassembly:
	0x0227C4E0 CBZ X25, 0x227C45C
	0x0227C4E4 MOV X0, X25
	0x0227C4E8 BL 0x1C16F18
	0x0227C4EC MOV X25, X31
	0x0227C4F0 B 0x227C4F8
	0x0227C4F4 MOV X24, X0
	0x0227C4F8 MOV X0, X21
	0x0227C4FC MOV X1, X31
	0x0227C500 BL 0x3BEBA40
	0x0227C504 CBNZ X25, 0x227C510
	0x0227C508 MOV X0, X24
	0x0227C50C BL 0x1D2C690
	0x0227C510 MOV X0, X25
	0x0227C514 BL 0x1C16F18
	0x0227C518 BL 0x1990590
	0x0227C51C STP X30, X21, [X31 - 0x20]!
	0x0227C520 STP X20, X19, [X31 + 0x10]
	0x0227C524 LDR X8, [X2 + 0x38]
	0x0227C528 MOV X19, X1
	0x0227C52C MOV X20, X0
	0x0227C530 CBNZ X8, 0x227C544
	0x0227C534 MOV X0, X2
	0x0227C538 MOV X21, X2
	0x0227C53C BL 0x1C5C6E0
	0x0227C540 LDR X8, [X21 + 0x38]
	0x0227C544 LDR X2, [X8]
	0x0227C548 MOV X0, X20
	0x0227C54C MOV X1, X19
	0x0227C550 LDP X20, X19, [X31 + 0x10]
	0x0227C554 LDP X30, X21, [X31], #0x20
	0x0227C558 B 0x22BFDBC
	0x0227C55C STP X29, X30, [X31 - 0x50]!
	0x0227C560 STP X26, X25, [X31 + 0x10]
	0x0227C564 STP X24, X23, [X31 + 0x20]
	0x0227C568 STP X22, X21, [X31 + 0x30]
	0x0227C56C STP X20, X19, [X31 + 0x40]
	0x0227C570 ADD X29, X31, 0x0
	0x0227C574 SUB X31, X31, 0x20
	0x0227C578 MRS X25, 0xC000
	0x0227C57C LDR X8, [X25 + 0x28]
	0x0227C580 MOV X19, X2
	0x0227C584 MOV X21, X1
	0x0227C588 MOV X20, X0
	0x0227C58C STUR X8, [X29 - 0x8]
	0x0227C590 LDR X26, [X3 + 0x38]
	0x0227C594 CBNZ X26, 0x227C5A8
	0x0227C598 MOV X0, X3
	0x0227C59C MOV X22, X3
	0x0227C5A0 BL 0x1C5C6E0
	0x0227C5A4 LDR X26, [X22 + 0x38]
	0x0227C5A8 LDR X8, [X26 + 0x8]
	0x0227C5AC LDR W22, [X8 + 0xFC]
	0x0227C5B0 ADD X8, X31, 0x0
	0x0227C5B4 ADD X9, X22, 0xF
	0x0227C5B8 AND X9, X9, 0x1FFFFFFFF
	0x0227C5BC SUB X23, X8, X9
	0x0227C5C0 ADD X31, X23, 0x0
	0x0227C5C4 ADD X8, X31, 0x0
	0x0227C5C8 SUB X24, X8, X9
	0x0227C5CC ADD X31, X24, 0x0
	0x0227C5D0 MOV X0, X24
	0x0227C5D4 MOV W1, W31
	0x0227C5D8 MOV X2, X22
	0x0227C5DC BL 0x3EB1B10
	0x0227C5E0 LDR X1, [X26]
	0x0227C5E4 SUB X8, X29, 0x10
	0x0227C5E8 SUB X3, X29, 0x20
	0x0227C5EC MOV X2, X20
	0x0227C5F0 LDR X0, [X1]
	0x0227C5F4 STP X23, X21, [X29 - 0x18]
	0x0227C5F8 STUR X8, [X29 - 0x20]
	0x0227C5FC LDR X8, [X1 + 0x10]
	0x0227C600 MOV X4, X23
	0x0227C604 BLR X8
	0x0227C608 MOV X0, X24
	0x0227C60C MOV X1, X23
	0x0227C610 MOV X2, X22
	0x0227C614 BL 0x3EB1AC0
	0x0227C618 MOV X0, X23
	0x0227C61C MOV X1, X24
	0x0227C620 MOV X2, X22
	0x0227C624 BL 0x3EB1AC0
	0x0227C628 MOV X0, X19
	0x0227C62C MOV X1, X23
	0x0227C630 MOV X2, X22
	0x0227C634 BL 0x3EB1AC0
	0x0227C638 LDR X8, [X25 + 0x28]
	0x0227C63C LDUR X9, [X29 - 0x8]
	0x0227C640 CMP X8, X9
	0x0227C644 B.NE 0x227C664
	0x0227C648 ADD X31, X29, 0x0
	0x0227C64C LDP X20, X19, [X31 + 0x40]
	0x0227C650 LDP X22, X21, [X31 + 0x30]
	0x0227C654 LDP X24, X23, [X31 + 0x20]
	0x0227C658 LDP X26, X25, [X31 + 0x10]
	0x0227C65C LDP X29, X30, [X31], #0x50
	0x0227C660 RET

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X22, X4
	018 Move X19, X3
	019 Move X24, X2
	020 Move [X29-8], X8
	021 Move X8, [X4+56]
	022 Move X21, X1
	023 Move X20, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {35}
	026 Move X0, 0x1E78000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X8, [X22+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X22
	033 Call 0x1C5D6E0
	034 Move X8, [X22+56]
	035 Move X8, [X8+16]
	036 Move W23, [X8+252]
	037 Add X8, X31, 0
	038 Add X9, X23, 15
	039 And X9, X9, 0x1FFFFFFFF
	040 Subtract X25, X8, X9
	041 Add X31, X25, 0
	042 Add X8, X31, 0
	043 Subtract X26, X8, X9
	044 Add X31, X26, 0
	045 Move X0, X26
	046 Move W1, W31
	047 Move X2, X23
	048 Call 0x3EB2B10
	049 Move X8, 0x1E78000
	050 Move X8, [X8+2512]
	051 Move W1, 1
	052 Move X0, [X8]
	053 Call 0x1C17D6C
	054 Compare X0, 0
	055 JumpIfEqual {111}
	056 Move X27, X0
	057 Compare X24, 0
	058 JumpIfEqual {65}
	059 Move X8, [X27]
	060 Move X0, X24
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {113}
	065 Move W8, [X27+24]
	066 Compare W8, 0
	067 JumpIfEqual {112}
	068 Move [X27+32], X24
	069 Move X8, [X22+56]
	070 Subtract X3, X29, 40
	071 Move X2, X20
	072 Move X4, X25
	073 Move X1, [X8+8]
	074 Subtract X8, X29, 16
	075 Move X0, [X1]
	076 Move [X29-24], X25
	077 Move [X29-16], X21
	078 Move [X29-40], X8
	079 Move [X29-32], X27
	080 Move X8, [X1+16]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X0, X26
	083 Move X1, X25
	084 Move X2, X23
	085 Call 0x3EB2AC0
	086 Move X0, X25
	087 Move X1, X26
	088 Move X2, X23
	089 Call 0x3EB2AC0
	090 Move X0, X19
	091 Move X1, X25
	092 Move X2, X23
	093 Call 0x3EB2AC0
	094 Move X8, [X28+40]
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X31, X29, 0
	098 Move X20, [X31+80]
	099 Move X19, [X31+88]
	100 Move X22, [X31+64]
	101 Move X21, [X31+72]
	102 Move X24, [X31+48]
	103 Move X23, [X31+56]
	104 Move X26, [X31+32]
	105 Move X25, [X31+40]
	106 Move X28, [X31+16]
	107 Move X27, [X31+24]
	108 Move X29, [X31+96]
	109 Move X30, [X31+104]
	110 Return X0
	111 Call 0x1C17F20
	112 Call 0x1C17F28
	113 Call 0x1C17F44
	114 Move X1, X31
	115 Call 0x1C17DEC
	116 Call 0x3EB2B20

Method: ReturnType CallStatic(System.String methodName, System.Object[] args)

Disassembly:
	0x0227C06C BL 0x1990590
	0x0227C070 SUB X31, X31, 0x30
	0x0227C074 STP X30, X21, [X31 + 0x10]
	0x0227C078 STP X20, X19, [X31 + 0x20]
	0x0227C07C LDR X8, [X1 + 0x38]
	0x0227C080 MOV X20, X1
	0x0227C084 MOV X19, X0
	0x0227C088 CBNZ X8, 0x227C094
	0x0227C08C MOV X0, X20
	0x0227C090 BL 0x1C5C6E0
	0x0227C094 MOV X0, X19
	0x0227C098 MOV X1, X31
	0x0227C09C MOV X2, X31
	0x0227C0A0 BL 0x33BE5B0
	0x0227C0A4 TBZ X0, 0x0, 0x227C0B0
	0x0227C0A8 MOV W20, W31
	0x0227C0AC B 0x227C124
	0x0227C0B0 LDR X8, [X20 + 0x38]
	0x0227C0B4 LDR X1, [X8 + 0x8]
	0x0227C0B8 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {16}
	012 Move X0, X3
	013 Move X22, X3
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X3, [X8]
	017 Move X0, X21
	018 Move X1, X20
	019 Move X2, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Call 0x2289848, X0, X1, X2
	026 Return X0

Method: ReturnType CallStatic(System.IntPtr methodID, System.Object[] args)

Disassembly:
	0x0227C15C LDR X21, [X0]
	0x0227C160 BL 0x3EB1AE0
	0x0227C164 MOV X0, X19
	0x0227C168 MOV X1, X31
	0x0227C16C BL 0x3BEBA40
	0x0227C170 CBZ X21, 0x227C0A8
	0x0227C174 MOV X0, X21
	0x0227C178 BL 0x1C16F18
	0x0227C17C MOV X21, X31
	0x0227C180 B 0x227C188
	0x0227C184 MOV X20, X0
	0x0227C188 MOV X0, X19
	0x0227C18C MOV X1, X31
	0x0227C190 BL 0x3BEBA40
	0x0227C194 CBNZ X21, 0x227C1A0
	0x0227C198 MOV X0, X20
	0x0227C19C BL 0x1D2C690
	0x0227C1A0 MOV X0, X21
	0x0227C1A4 BL 0x1C16F18
	0x0227C1A8 BL 0x1990590
	0x0227C1AC STR D8, [X31 - 0x30]!
	0x0227C1B0 STP X30, X21, [X31 + 0x10]
	0x0227C1B4 STP X20, X19, [X31 + 0x20]
	0x0227C1B8 LDR X8, [X1 + 0x38]
	0x0227C1BC MOV X20, X1
	0x0227C1C0 MOV X19, X0
	0x0227C1C4 CBNZ X8, 0x227C1D0
	0x0227C1C8 MOV X0, X20
	0x0227C1CC BL 0x1C5C6E0
	0x0227C1D0 MOV X0, X19
	0x0227C1D4 MOV X1, X31
	0x0227C1D8 MOV X2, X31
	0x0227C1DC BL 0x33BE5B0
	0x0227C1E0 FMOV S8, W31
	0x0227C1E4 TBNZ X0, 0x0, 0x227C25C
	0x0227C1E8 LDR X8, [X20 + 0x38]
	0x0227C1EC LDR X1, [X8 + 0x8]
	0x0227C1F0 MOV X0, X19
	0x0227C1F4 BL 0x227A130
	0x0227C1F8 STR S0, [X31 + 0xC]
	0x0227C1FC LDR X8, [X20 + 0x38]
	0x0227C200 LDR X0, [X8]
	0x0227C204 ADD X1, X31, 0xC
	0x0227C208 BL 0x1C16E04
	0x0227C20C LDR X8, [X20 + 0x38]
	0x0227C210 MOV X21, X0
	0x0227C214 LDR X1, [X8]
	0x0227C218 LDRB W8, [X1 + 0x135]
	0x0227C21C TBNZ X8, 0x0, 0x227C22C
	0x0227C220 MOV X0, X1
	0x0227C224 BL 0x1C5C684
	0x0227C228 MOV X1, X0
	0x0227C22C CBZ X21, 0x227C270
	0x0227C230 LDR X8, [X21]
	0x0227C234 LDR X9, [X1 + 0x40]
	0x0227C238 LDR X8, [X8 + 0x40]
	0x0227C23C CMP X8, X9
	0x0227C240 B.NE 0x227C274
	0x0227C244 MOV X0, X21
	0x0227C248 BL 0x1C16E08
	0x0227C24C LDR V8, [X0]
	0x0227C250 MOV X0, X19
	0x0227C254 MOV X1, X31
	0x0227C258 BL 0x3BEBA40
	0x0227C25C LDP X20, X19, [X31 + 0x20]
	0x0227C260 LDP X30, X21, [X31 + 0x10]
	0x0227C264 MOV V0.16B, V8.16B
	0x0227C268 LDR V8, [X31], #0x30
	0x0227C26C RET
	0x0227C270 BL 0x1C16F20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 48
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X19, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move [X29-8], X8
	020 Move X27, [X4+56]
	021 Move X20, X0
	022 Compare X27, 0
	023 JumpIfNotEqual {28}
	024 Move X0, X4
	025 Move X23, X4
	026 Call 0x1C5D6E0
	027 Move X27, [X23+56]
	028 Move X8, [X27+8]
	029 Move W23, [X8+252]
	030 Add X8, X31, 0
	031 Add X9, X23, 15
	032 And X9, X9, 0x1FFFFFFFF
	033 Subtract X24, X8, X9
	034 Add X31, X24, 0
	035 Add X8, X31, 0
	036 Subtract X25, X8, X9
	037 Add X31, X25, 0
	038 Move X0, X25
	039 Move W1, W31
	040 Move X2, X23
	041 Call 0x3EB2B10
	042 Move X1, [X27]
	043 Subtract X8, X29, 16
	044 Subtract X3, X29, 40
	045 Move X2, X20
	046 Move X0, [X1]
	047 Move [X29-24], X24
	048 Move [X29-16], X22
	049 Move [X29-40], X8
	050 Move [X29-32], X21
	051 Move X8, [X1+16]
	052 Move X4, X24
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X0, X25
	055 Move X1, X24
	056 Move X2, X23
	057 Call 0x3EB2AC0
	058 Move X0, X24
	059 Move X1, X25
	060 Move X2, X23
	061 Call 0x3EB2AC0
	062 Move X0, X19
	063 Move X1, X24
	064 Move X2, X23
	065 Call 0x3EB2AC0
	066 Move X8, [X26+40]
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X31, X29, 0
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X27, [X31+16]
	079 Move X29, [X31+96]
	080 Move X30, [X31+104]
	081 Return X0
	082 Call 0x3EB2B20

Method: System.Void DebugPrint(System.String msg)

Disassembly:
	0x03BF3AEC LDR X0, [X22]
	0x03BF3AF0 LDR X1, [X25]
	0x03BF3AF4 LDR X2, [X26]
	0x03BF3AF8 BL 0x3BF3088
	0x03BF3AFC LDR X8, [X21]
	0x03BF3B00 LDR X8, [X8 + 0xB8]
	0x03BF3B04 STR X0, [X8 + 0x18]
	0x03BF3B08 ADRP X8, 0x56B000
	0x03BF3B0C LDR X0, [X22]
	0x03BF3B10 LDR X8, [X8 + 0x670]
	0x03BF3B14 LDR X2, [X24]
	0x03BF3B18 LDR X1, [X8]
	0x03BF3B1C BL 0x3BF3088
	0x03BF3B20 LDR X8, [X21]
	0x03BF3B24 LDR X8, [X8 + 0xB8]
	0x03BF3B28 STR X0, [X8 + 0x20]
	0x03BF3B2C ADRP X8, 0x56B000
	0x03BF3B30 LDR X0, [X22]
	0x03BF3B34 LDR X8, [X8 + 0x668]
	0x03BF3B38 LDR X1, [X8]
	0x03BF3B3C ADRP X8, 0x56B000
	0x03BF3B40 LDR X8, [X8 + 0x688]
	0x03BF3B44 LDR X2, [X8]
	0x03BF3B48 BL 0x3BF3088
	0x03BF3B4C LDR X8, [X21]
	0x03BF3B50 LDR X8, [X8 + 0xB8]
	0x03BF3B54 STR X0, [X8 + 0x28]
	0x03BF3B58 ADRP X8, 0x56B000
	0x03BF3B5C LDR X0, [X22]
	0x03BF3B60 LDR X8, [X8 + 0x690]
	0x03BF3B64 LDR X1, [X8]
	0x03BF3B68 ADRP X8, 0x56B000
	0x03BF3B6C LDR X8, [X8 + 0x698]
	0x03BF3B70 LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7F1000
	006 Move X21, 0x52A000
	007 Move W8, [X20+1919]
	008 Move X21, [X21+2576]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x52A000
	015 Move X0, [X0+2576]
	016 Call 0x1C17CF4
	017 Move X0, 0x501000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1919], W8
	022 Move X8, [X21]
	023 Move X8, [X8+184]
	024 Move W8, [X8]
	025 Compare W8, 0
	026 JumpIfEqual {42}
	027 Move X8, 0x501000
	028 Move X8, [X8+2600]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call Debug.Log, X0
	041 Return 
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void DebugPrint(System.String call, System.String methodName, System.String signature, System.Object[] args)

Disassembly:
	0x03BF3B74 BL 0x3BF3088
	0x03BF3B78 LDR X8, [X21]
	0x03BF3B7C LDR X8, [X8 + 0xB8]
	0x03BF3B80 STR X0, [X8 + 0x30]
	0x03BF3B84 ADRP X8, 0x56B000
	0x03BF3B88 LDR X8, [X8 + 0x678]
	0x03BF3B8C LDR X0, [X8]
	0x03BF3B90 ADRP X8, 0x56B000
	0x03BF3B94 LDR X8, [X8 + 0x660]
	0x03BF3B98 LDR X1, [X8]
	0x03BF3B9C ADRP X8, 0x56B000
	0x03BF3BA0 LDR X8, [X8 + 0x680]
	0x03BF3BA4 LDR X2, [X8]
	0x03BF3BA8 BL 0x3BF3124
	0x03BF3BAC LDR X8, [X21]
	0x03BF3BB0 LDP X20, X19, [X31 + 0x50]
	0x03BF3BB4 LDP X22, X21, [X31 + 0x40]
	0x03BF3BB8 LDP X24, X23, [X31 + 0x30]
	0x03BF3BBC LDR X8, [X8 + 0xB8]
	0x03BF3BC0 LDP X26, X25, [X31 + 0x20]
	0x03BF3BC4 LDP X28, X27, [X31 + 0x10]
	0x03BF3BC8 STR X0, [X8 + 0x38]
	0x03BF3BCC LDP X29, X30, [X31], #0x60
	0x03BF3BD0 RET
	0x03BF3BD4 STR X30, [X31 - 0x30]!
	0x03BF3BD8 STP X22, X21, [X31 + 0x10]
	0x03BF3BDC STP X20, X19, [X31 + 0x20]
	0x03BF3BE0 ADRP X22, 0x7F0000
	0x03BF3BE4 LDR X8, [X22 + 0x2E0]
	0x03BF3BE8 MOV X20, X2
	0x03BF3BEC MOV X21, X1
	0x03BF3BF0 MOV X19, X0
	0x03BF3BF4 CBNZ X8, 0x3BF3C0C
	0x03BF3BF8 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03BF3BFC ADD X0, X0, 0x7FA
	0x03BF3C00 BL 0x1C16CB8
	0x03BF3C04 MOV X8, X0
	0x03BF3C08 STR X0, [X22 + 0x2E0]
	0x03BF3C0C MOV X0, X21
	0x03BF3C10 BLR X8
	0x03BF3C14 MOV X1, X0
	0x03BF3C18 CBZ X19, 0x3BF3C40
	0x03BF3C1C LDR X8, [X19]
	0x03BF3C20 LDP X9, X3, [X8 + 0x198]
	0x03BF3C24 MOV X0, X19
	0x03BF3C28 MOV X2, X20
	0x03BF3C2C BLR X9
	0x03BF3C30 LDP X20, X19, [X31 + 0x20]
	0x03BF3C34 LDP X22, X21, [X31 + 0x10]
	0x03BF3C38 LDR X30, [X31], #0x30
	0x03BF3C3C RET
	0x03BF3C40 BL 0x1C16F20
	0x03BF3C44 B 0x3BF3C4C
	0x03BF3C48 B 0x3BF3C4C
	0x03BF3C4C MOV X20, X0
	0x03BF3C50 CMP W1, 0x1
	0x03BF3C54 B.NE 0x3BF3CF4
	0x03BF3C58 MOV X0, X20
	0x03BF3C5C BL 0x3EB1AD0
	0x03BF3C60 MOV X20, X0
	0x03BF3C64 ADRP X0, 0x500000
	0x03BF3C68 LDR X0, [X0 + 0x7D0]
	0x03BF3C6C BL 0x1C16D08
	0x03BF3C70 LDR X8, [X20]
	0x03BF3C74 LDR X1, [X8]
	0x03BF3C78 BL 0x1C17270
	0x03BF3C7C TBZ X0, 0x0, 0x3BF3CC8
	0x03BF3C80 LDR X20, [X20]
	0x03BF3C84 BL 0x3EB1AE0
	0x03BF3C88 CBZ X19, 0x3BF3CE8
	0x03BF3C8C MOV X0, X19
	0x03BF3C90 BL 0x3BF09A0
	0x03BF3C94 MOV X19, X0
	0x03BF3C98 ADRP X0, 0x529000
	0x03BF3C9C LDR X0, [X0 + 0x6A0]
	0x03BF3CA0 BL 0x1C16D08
	0x03BF3CA4 LDR W8, [X0 + 0xE0]
	0x03BF3CA8 CBNZ W8, 0x3BF3CB0
	0x03BF3CAC BL 0x1C16DFC
	0x03BF3CB0 MOV X0, X19
	0x03BF3CB4 MOV X1, X20
	0x03BF3CB8 MOV W2, W31
	0x03BF3CBC BL 0x3BF0A98
	0x03BF3CC0 MOV X0, X31
	0x03BF3CC4 B 0x3BF3C30
	0x03BF3CC8 MOVZ W0, 0x8
	0x03BF3CCC BL 0x3EB1AF0
	0x03BF3CD0 LDR X8, [X20]
	0x03BF3CD4 STR X8, [X0]
	0x03BF3CD8 ADRP X1, 0x2C1000
	0x03BF3CDC ADD X1, X1, 0xE58
	0x03BF3CE0 MOV X2, X31
	0x03BF3CE4 BL 0x3EB1B00
	0x03BF3CE8 BL 0x1C16F20
	0x03BF3CEC MOV X20, X0
	0x03BF3CF0 BL 0x3EB1AE0
	0x03BF3CF4 MOV X0, X20
	0x03BF3CF8 BL 0x1D2C690
	0x03BF3CFC BL 0x1990590
	0x03BF3D00 SUB X31, X31, 0x70
	0x03BF3D04 STP X29, X30, [X31 + 0x10]
	0x03BF3D08 STP X28, X27, [X31 + 0x20]
	0x03BF3D0C STP X26, X25, [X31 + 0x30]
	0x03BF3D10 STP X24, X23, [X31 + 0x40]
	0x03BF3D14 STP X22, X21, [X31 + 0x50]
	0x03BF3D18 STP X20, X19, [X31 + 0x60]
	0x03BF3D1C ADRP X20, 0x7F0000
	0x03BF3D20 LDRB W8, [X20 + 0x794]
	0x03BF3D24 MOV X19, X0
	0x03BF3D28 TBNZ X8, 0x0, 0x3BF3EF0
	0x03BF3D2C ADRP X0, 0x56B000
	0x03BF3D30 LDR X0, [X0 + 0x6A0]
	0x03BF3D34 BL 0x1C16CF4
	0x03BF3D38 ADRP X0, 0x500000
	0x03BF3D3C LDR X0, [X0 + 0x990]
	0x03BF3D40 BL 0x1C16CF4
	0x03BF3D44 ADRP X0, 0x529000
	0x03BF3D48 LDR X0, [X0 + 0xA08]
	0x03BF3D4C BL 0x1C16CF4
	0x03BF3D50 ADRP X0, 0x56B000
	0x03BF3D54 LDR X0, [X0 + 0x6A8]
	0x03BF3D58 BL 0x1C16CF4
	0x03BF3D5C ADRP X0, 0x56B000
	0x03BF3D60 LDR X0, [X0 + 0x6B0]
	0x03BF3D64 BL 0x1C16CF4
	0x03BF3D68 ADRP X0, 0x500000
	0x03BF3D6C LDR X0, [X0 + 0x9A0]
	0x03BF3D70 BL 0x1C16CF4
	0x03BF3D74 ADRP X0, 0x542000
	0x03BF3D78 LDR X0, [X0 + 0xE58]
	0x03BF3D7C BL 0x1C16CF4
	0x03BF3D80 ADRP X0, 0x500000
	0x03BF3D84 LDR X0, [X0 + 0x9A8]
	0x03BF3D88 BL 0x1C16CF4
	0x03BF3D8C ADRP X0, 0x500000
	0x03BF3D90 LDR X0, [X0 + 0x9C8]
	0x03BF3D94 BL 0x1C16CF4
	0x03BF3D98 ADRP X0, 0x502000
	0x03BF3D9C LDR X0, [X0 + 0x9B8]
	0x03BF3DA0 BL 0x1C16CF4
	0x03BF3DA4 ADRP X0, 0x509000
	0x03BF3DA8 LDR X0, [X0 + 0x8D8]
	0x03BF3DAC BL 0x1C16CF4
	0x03BF3DB0 ADRP X0, 0x531000
	0x03BF3DB4 LDR X0, [X0 + 0x830]
	0x03BF3DB8 BL 0x1C16CF4
	0x03BF3DBC ADRP X0, 0x528000
	0x03BF3DC0 LDR X0, [X0 + 0x820]
	0x03BF3DC4 BL 0x1C16CF4
	0x03BF3DC8 ADRP X0, 0x501000
	0x03BF3DCC LDR X0, [X0 + 0xE58]
	0x03BF3DD0 BL 0x1C16CF4
	0x03BF3DD4 ADRP X0, 0x500000
	0x03BF3DD8 LDR X0, [X0 + 0x758]
	0x03BF3DDC BL 0x1C16CF4
	0x03BF3DE0 ADRP X0, 0x531000
	0x03BF3DE4 LDR X0, [X0 + 0x838]
	0x03BF3DE8 BL 0x1C16CF4
	0x03BF3DEC ADRP X0, 0x500000
	0x03BF3DF0 LDR X0, [X0 + 0x9D0]
	0x03BF3DF4 BL 0x1C16CF4
	0x03BF3DF8 ADRP X0, 0x52F000
	0x03BF3DFC LDR X0, [X0 + 0x708]
	0x03BF3E00 BL 0x1C16CF4
	0x03BF3E04 ADRP X0, 0x500000
	0x03BF3E08 LDR X0, [X0 + 0x638]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x7F1000
	013 Move X24, 0x52A000
	014 Move W8, [X23+1920]
	015 Move X24, [X24+2576]
	016 Move X22, X4
	017 Move X19, X3
	018 Move X20, X2
	019 Move X21, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0x52A000
	025 Move X0, [X0+2576]
	026 Call 0x1C17CF4
	027 Move X0, 0x501000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x501000
	031 Move X0, [X0+2288]
	032 Call 0x1C17CF4
	033 Move X0, 0x501000
	034 Move X0, [X0+2760]
	035 Call 0x1C17CF4
	036 Move X0, 0x56C000
	037 Move X0, [X0+1544]
	038 Call 0x1C17CF4
	039 Move X0, 0x501000
	040 Move X0, [X0+2104]
	041 Call 0x1C17CF4
	042 Move X0, 0x56C000
	043 Move X0, [X0+1552]
	044 Call 0x1C17CF4
	045 Move X0, 0x50C000
	046 Move X0, [X0+3288]
	047 Call 0x1C17CF4
	048 Move X0, 0x508000
	049 Move X0, [X0+3416]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X23+1920], W8
	053 Move X8, [X24]
	054 Move X8, [X8+184]
	055 Move W8, [X8]
	056 Compare W8, 0
	057 JumpIfEqual {135}
	058 Move X8, 0x501000
	059 Move X8, [X8+2288]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X23, X0
	064 Call StringBuilder..ctor, X0
	065 Compare X22, 0
	066 JumpIfEqual {184}
	067 Move X8, [X22+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X27, 0x501000
	070 Move X28, 0x508000
	071 Move X27, [X27+2104]
	072 Move X28, [X28+3416]
	073 Move X25, X31
	074 And X8, X8, 0
	075 Add X26, X22, 32
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare X23, 0
	078 JumpIfEqual {184}
	079 Move X1, [X27]
	080 Move X24, [X26]
	081 Move X0, X23
	082 Move X2, X31
	083 Call StringBuilder.Append, X0, X1
	084 Compare X24, 0
	085 JumpIfEqual {96}
	086 Move X0, X24
	087 Move X1, X31
	088 Call "il2cpp_vm_object_is_inst", X0
	089 Compare X0, 0
	090 JumpIfEqual {184}
	091 Move X8, [X0]
	092 Move X9, [X8+360]
	093 Move X1, [X8+368]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X1, X0
	096 Move X1, [X28]
	097 Move X0, X23
	098 Move X2, X31
	099 Call StringBuilder.Append, X0, X1
	100 Move W8, [X22+24]
	101 Add X25, X25, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0x501000
	104 Move X8, [X8+2760]
	105 Move W1, 7
	106 Move X0, [X8]
	107 Call 0x1C17D6C
	108 Compare X0, 0
	109 JumpIfEqual {184}
	110 Move X8, [X0+24]
	111 Move X22, X0
	112 Compare W8, 0
	113 JumpIfEqual {185}
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X22+32], X21
	116 Move X9, 0x56C000
	117 Move X9, [X9+1544]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, [X9]
	120 Move [X22+40], X9
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X22+48], X20
	123 Move X9, 0x50C000
	124 Move X9, [X9+3288]
	125 Move X9, [X9]
	126 Move [X22+56], X9
	127 Compare X23, 0
	128 JumpIfEqual {147}
	129 Move X8, [X23]
	130 Move X0, X23
	131 Move X9, [X8+360]
	132 Move X1, [X8+368]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X8, [X22+24]
	135 Move X20, [X31+80]
	136 Move X19, [X31+88]
	137 Move X22, [X31+64]
	138 Move X21, [X31+72]
	139 Move X24, [X31+48]
	140 Move X23, [X31+56]
	141 Move X26, [X31+32]
	142 Move X25, [X31+40]
	143 Move X28, [X31+16]
	144 Move X27, [X31+24]
	145 Move X30, [X31+96]
	146 Return 
	147 Move X0, X31
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X22+64], X0
	151 Move X9, 0x56C000
	152 Move X9, [X9+1552]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X9, [X9]
	155 Move [X22+72], X9
	156 Move X20, 0x501000
	157 Move X20, [X20+2600]
	158 Move X0, X22
	159 Move X1, X31
	160 Move [X22+80], X19
	161 Call String.Concat, X0
	162 Move X8, [X20]
	163 Move X19, X0
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X0, X19
	170 Move X20, [X31+80]
	171 Move X19, [X31+88]
	172 Move X22, [X31+64]
	173 Move X21, [X31+72]
	174 Move X24, [X31+48]
	175 Move X23, [X31+56]
	176 Move X26, [X31+32]
	177 Move X25, [X31+40]
	178 Move X28, [X31+16]
	179 Move X27, [X31+24]
	180 Move X1, X31
	181 Move X30, [X31+96]
	182 Call Debug.Log, X0
	183 Return 
	184 Call 0x1C17F20
	185 Call 0x1C17F28

Method: System.Void _AndroidJavaObject(System.String className, System.Object[] args)

Disassembly:
	0x03BF2E38 B 0x33CB4DC
	0x03BF2E3C CMP W1, 0x1
	0x03BF2E40 MOV X21, X0
	0x03BF2E44 B.NE 0x3BF2E74
	0x03BF2E48 MOV X0, X21
	0x03BF2E4C BL 0x3EB1AD0
	0x03BF2E50 LDR X20, [X0]
	0x03BF2E54 BL 0x3EB1AE0
	0x03BF2E58 MOV X0, X19
	0x03BF2E5C MOV X1, X31
	0x03BF2E60 BL 0x33CB4DC
	0x03BF2E64 CBNZ X20, 0x3BF2E7C
	0x03BF2E68 LDP X20, X19, [X31 + 0x10]
	0x03BF2E6C LDP X30, X21, [X31], #0x20
	0x03BF2E70 RET
	0x03BF2E74 MOV X20, X31
	0x03BF2E78 B 0x3BF2E88
	0x03BF2E7C MOV X0, X20
	0x03BF2E80 BL 0x1C16F18
	0x03BF2E84 MOV X21, X0
	0x03BF2E88 MOV X0, X19
	0x03BF2E8C MOV X1, X31
	0x03BF2E90 BL 0x33CB4DC
	0x03BF2E94 CBNZ X20, 0x3BF2EA0
	0x03BF2E98 MOV X0, X21
	0x03BF2E9C BL 0x1D2C690
	0x03BF2EA0 MOV X0, X20
	0x03BF2EA4 BL 0x1C16F18
	0x03BF2EA8 BL 0x1990590
	0x03BF2EAC STP X30, X19, [X31 - 0x10]!
	0x03BF2EB0 MOV X19, X0
	0x03BF2EB4 LDR X0, [X0 + 0x10]
	0x03BF2EB8 CBZ X0, 0x3BF2EC4
	0x03BF2EBC BL 0x3BEEFDC
	0x03BF2EC0 STR X31, [X19 + 0x10]
	0x03BF2EC4 LDR X0, [X19 + 0x18]
	0x03BF2EC8 CBZ X0, 0x3BF2ED4
	0x03BF2ECC BL 0x3BEEFDC
	0x03BF2ED0 STR X31, [X19 + 0x18]
	0x03BF2ED4 LDP X30, X19, [X31], #0x10
	0x03BF2ED8 RET
	0x03BF2EDC STP X30, X21, [X31 - 0x20]!
	0x03BF2EE0 STP X20, X19, [X31 + 0x10]
	0x03BF2EE4 ADRP X20, 0x7F1000
	0x03BF2EE8 ADRP X21, 0x501000
	0x03BF2EEC LDRB W8, [X20 + 0x786]
	0x03BF2EF0 LDR X21, [X21 + 0x990]
	0x03BF2EF4 MOV X19, X0
	0x03BF2EF8 TBNZ X8, 0x0, 0x3BF2F10
	0x03BF2EFC ADRP X0, 0x501000
	0x03BF2F00 LDR X0, [X0 + 0x990]
	0x03BF2F04 BL 0x1C16CF4
	0x03BF2F08 MOVZ W8, 0x1
	0x03BF2F0C STRB W8, [X20 + 0x786]
	0x03BF2F10 LDR X0, [X21]
	0x03BF2F14 BL 0x1C16F10
	0x03BF2F18 MOV X20, X0
	0x03BF2F1C MOV X1, X19
	0x03BF2F20 BL 0x3BF2A28
	0x03BF2F24 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x7F2000
	008 Move X23, 0x56D000
	009 Move W8, [X22+1921]
	010 Move X23, [X23+1480]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x56D000
	019 Move X0, [X0+1416]
	020 Call 0x1C17CF4
	021 Move X0, 0x56D000
	022 Move X0, [X0+1480]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1921], W8
	026 Move X0, [X23]
	027 Move X1, X21
	028 Move X2, X31
	029 Call String.Concat, X0, X1
	030 Move X1, X0
	031 Call AndroidJavaObject.DebugPrint, X0, X1
	032 Compare X21, 0
	033 JumpIfEqual {72}
	034 Move X22, 0x56D000
	035 Move X22, [X22+1416]
	036 Move W1, 46
	037 Move W2, 47
	038 Move X0, X21
	039 Move X3, X31
	040 Call String.Replace, X0, X1, X2
	041 Call AndroidJNISafe.FindClass, X0
	042 Move X8, [X22]
	043 Move X21, X0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X21
	047 Move X22, X0
	048 Call GlobalJavaObjectRef..ctor, X0, X1
	049 Move X0, X21
	050 Move [X20+24], X22
	051 Call AndroidJNISafe.DeleteLocalRef, X0
	052 Move X8, [X20+24]
	053 Compare X8, 0
	054 JumpIfEqual {72}
	055 Move X21, [X8+24]
	056 Move X0, X19
	057 Call _AndroidJNIHelper.GetSignature, X0
	058 Move X1, X0
	059 Move X0, X21
	060 Call _AndroidJNIHelper.GetConstructorID, X0, X1
	061 Move X1, X0
	062 Move X0, X20
	063 Move X2, X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Call AndroidJavaObject._AndroidJavaObject, X0, X1, X2
	071 Return 
	072 Call 0x1C17F20

Method: System.Void _AndroidJavaObject(System.IntPtr constructorID, System.Object[] args)

Disassembly:
	0x03BF32B8 MOV X0, X20
	0x03BF32BC BL 0x1C16F18
	0x03BF32C0 BL 0x1C16F28
	0x03BF32C4 BL 0x1C16F20
	0x03BF32C8 B 0x3BF32D8
	0x03BF32CC B 0x3BF32D8
	0x03BF32D0 B 0x3BF32D8
	0x03BF32D4 B 0x3BF32D8
	0x03BF32D8 MOV X21, X0
	0x03BF32DC CMP W1, 0x1
	0x03BF32E0 B.NE 0x3BF3300
	0x03BF32E4 MOV X0, X21
	0x03BF32E8 BL 0x3EB1AD0
	0x03BF32EC LDR X20, [X0]
	0x03BF32F0 BL 0x3EB1AE0
	0x03BF32F4 CBZ X19, 0x3BF3308
	0x03BF32F8 MOV X21, X31
	0x03BF32FC B 0x3BF3280
	0x03BF3300 MOV X20, X31
	0x03BF3304 B 0x3BF3310
	0x03BF3308 BL 0x1C16F20
	0x03BF330C MOV X21, X0
	0x03BF3310 CBNZ X19, 0x3BF3318
	0x03BF3314 BL 0x1C16F20
	0x03BF3318 LDR W8, [X19 + 0x18]
	0x03BF331C CMP W8, 0x1
	0x03BF3320 B.LS 0x3BF3338
	0x03BF3324 LDR X0, [X19 + 0x28]
	0x03BF3328 BL 0x3BEBA40
	0x03BF332C CBNZ X20, 0x3BF333C
	0x03BF3330 MOV X0, X21
	0x03BF3334 BL 0x1D2C690
	0x03BF3338 BL 0x1C16F28
	0x03BF333C MOV X0, X20
	0x03BF3340 BL 0x1C16F18
	0x03BF3344 BL 0x1990590
	0x03BF3348 STR X30, [X31 - 0x40]!
	0x03BF334C STP X24, X23, [X31 + 0x10]
	0x03BF3350 STP X22, X21, [X31 + 0x20]
	0x03BF3354 STP X20, X19, [X31 + 0x30]
	0x03BF3358 ADRP X19, 0x7F0000
	0x03BF335C ADRP X24, 0x542000
	0x03BF3360 LDRB W8, [X19 + 0x78A]
	0x03BF3364 LDR X24, [X24 + 0xEE8]
	0x03BF3368 MOV W20, W3
	0x03BF336C MOV X21, X2
	0x03BF3370 MOV X22, X1
	0x03BF3374 MOV X23, X0
	0x03BF3378 TBNZ X8, 0x0, 0x3BF339C
	0x03BF337C ADRP X0, 0x529000
	0x03BF3380 LDR X0, [X0 + 0x6A0]
	0x03BF3384 BL 0x1C16CF4
	0x03BF3388 ADRP X0, 0x542000
	0x03BF338C LDR X0, [X0 + 0xEE8]
	0x03BF3390 BL 0x1C16CF4
	0x03BF3394 MOVZ W8, 0x1
	0x03BF3398 STRB W8, [X19 + 0x78A]
	0x03BF339C LDR X0, [X24]
	0x03BF33A0 MOVZ W1, 0x4
	0x03BF33A4 BL 0x1C16D6C
	0x03BF33A8 MOV X19, X0
	0x03BF33AC CBZ X0, 0x3BF3484
	0x03BF33B0 LDR W8, [X19 + 0x18]
	0x03BF33B4 CBZ W8, 0x3BF3488
	0x03BF33B8 STR X23, [X19 + 0x20]
	0x03BF33BC MOV X0, X22
	0x03BF33C0 BL 0x3BEBA98
	0x03BF33C4 LDR W8, [X19 + 0x18]
	0x03BF33C8 CMP W8, 0x1
	0x03BF33CC B.LS 0x3BF3494
	0x03BF33D0 STR X0, [X19 + 0x28]
	0x03BF33D4 MOV X0, X21
	0x03BF33D8 BL 0x3BEBA98
	0x03BF33DC LDR W8, [X19 + 0x18]
	0x03BF33E0 CMP W8, 0x2
	0x03BF33E4 B.LS 0x3BF3498
	0x03BF33E8 CMP W8, 0x3
	0x03BF33EC STR X0, [X19 + 0x30]
	0x03BF33F0 B.EQ 0x3BF349C
	0x03BF33F4 AND W8, W20, 0x1
	0x03BF33F8 ADRP X20, 0x529000
	0x03BF33FC LDR X20, [X20 + 0x6A0]
	0x03BF3400 STRB W8, [X19 + 0x38]
	0x03BF3404 LDR X0, [X20]
	0x03BF3408 LDR W8, [X0 + 0xE0]
	0x03BF340C CBNZ W8, 0x3BF3418
	0x03BF3410 BL 0x1C16DFC
	0x03BF3414 LDR X0, [X20]
	0x03BF3418 LDR X8, [X0 + 0xB8]
	0x03BF341C LDR X9, [X8]
	0x03BF3420 CBZ X9, 0x3BF34A0
	0x03BF3424 LDR X0, [X9 + 0x18]
	0x03BF3428 LDR X1, [X8 + 0x10]
	0x03BF342C MOV X2, X19
	0x03BF3430 BL 0x3BECD40
	0x03BF3434 MOV X21, X0
	0x03BF3438 MOV X20, X31
	0x03BF343C LDR W8, [X19 + 0x18]
	0x03BF3440 CMP W8, 0x1
	0x03BF3444 B.LS 0x3BF3480
	0x03BF3448 LDR X0, [X19 + 0x28]
	0x03BF344C BL 0x3BEBA40
	0x03BF3450 LDR W8, [X19 + 0x18]
	0x03BF3454 CMP W8, 0x2
	0x03BF3458 B.LS 0x3BF3480
	0x03BF345C LDR X0, [X19 + 0x30]
	0x03BF3460 BL 0x3BEBA40
	0x03BF3464 CBNZ X20, 0x3BF348C
	0x03BF3468 MOV X0, X21
	0x03BF346C LDP X20, X19, [X31 + 0x30]
	0x03BF3470 LDP X22, X21, [X31 + 0x20]
	0x03BF3474 LDP X24, X23, [X31 + 0x10]
	0x03BF3478 LDR X30, [X31], #0x40
	0x03BF347C RET
	0x03BF3480 BL 0x1C16F28
	0x03BF3484 BL 0x1C16F20
	0x03BF3488 BL 0x1C16F28
	0x03BF348C MOV X0, X20
	0x03BF3490 BL 0x1C16F18

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X20, 0x7F1000
	015 Move X19, X2
	016 Move X23, X1
	017 Move [X29-8], X8
	018 Move W8, [X20+1922]
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x56C000
	025 Move X0, [X0+1488]
	026 Call 0x1C17CF4
	027 Move X0, 0x56C000
	028 Move X0, [X0+1416]
	029 Call 0x1C17CF4
	030 Move X0, 0x52A000
	031 Move X0, [X0+1720]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1922], W8
	035 Compare X19, 0
	036 JumpIfEqual {51}
	037 Move X21, [X19+24]
	038 Compare X21, 0
	039 JumpIfEqual {52}
	040 Move X8, X21
	041 ShiftRight X8, 32
	042 And X8, X8, 0x7FFFFFFF
	043 NotImplemented "Instruction SBFM not yet implemented."
	044 Compare X8, 0
	045 JumpIfEqual {53}
	046 Add X9, X2, 15
	047 Add X8, X31, 0
	048 And X9, X9, 0xFFFFFFFF
	049 Subtract X20, X8, X9
	050 Add X31, X20, 0
	051 Move X21, X31
	052 Move X20, X31
	053 Move X20, X31
	054 Move X0, X20
	055 Move W1, W31
	056 Call 0x3EB2B10
	057 Move TEMP, X21
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfNotEqual {63}
	061 Move X0, X31
	062 Call ThrowHelper.ThrowArgumentOutOfRangeException
	063 And X21, X21, 0
	064 Move X0, X19
	065 Move X1, X20
	066 Move X2, X21
	067 Call AndroidJNIHelper.CreateJNIArgArray, X0, X1
	068 Move X8, [X22+24]
	069 Compare X8, 0
	070 JumpIfEqual {105}
	071 Move X0, [X8+24]
	072 Move X1, X23
	073 Move X2, X20
	074 Move X3, X21
	075 Call AndroidJNISafe.NewObject, X0, X1, X2
	076 Move X8, 0x56C000
	077 Move X8, [X8+1416]
	078 Move X23, X0
	079 Move X0, [X8]
	080 Call 0x1C17F10
	081 Move X24, X0
	082 Move X1, X23
	083 Call GlobalJavaObjectRef..ctor, X0, X1
	084 Move [X22+16], X24
	085 Move X0, X23
	086 Call AndroidJNISafe.DeleteLocalRef, X0
	087 Move X0, X19
	088 Move X1, X20
	089 Move X2, X21
	090 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	091 Move X8, [X25+40]
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X31, X29, 0
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X24, [X31+32]
	100 Move X23, [X31+40]
	101 Move X25, [X31+16]
	102 Move X29, [X31+80]
	103 Move X30, [X31+88]
	104 Return 
	105 Call 0x1C17F20
	106 Call 0x3EB2B20
	107 Move X22, X0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, X22
	110 Call 0x3EB2AD0
	111 Move X23, [X0]
	112 Call 0x3EB2AE0
	113 Move X0, X19
	114 Move X1, X20
	115 Move X2, X21
	116 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	117 Compare X23, 0
	118 JumpIfEqual {91}
	119 Move X0, X23
	120 Call 0x1C17F18
	121 Move X23, X31
	122 Move X22, X0
	123 Move X0, X19
	124 Move X1, X20
	125 Move X2, X21
	126 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	127 Compare X23, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X22
	130 Call 0x1D2D690
	131 Move X0, X23
	132 Call 0x1C17F18
	133 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03BF2E30 MOV X1, X31
	0x03BF2E34 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void Finalize()

Disassembly:
	0x03BF3E0C BL 0x1C16CF4
	0x03BF3E10 ADRP X0, 0x500000
	0x03BF3E14 LDR X0, [X0 + 0xAC8]
	0x03BF3E18 BL 0x1C16CF4
	0x03BF3E1C ADRP X0, 0x553000
	0x03BF3E20 LDR X0, [X0 + 0x600]
	0x03BF3E24 BL 0x1C16CF4
	0x03BF3E28 ADRP X0, 0x553000
	0x03BF3E2C LDR X0, [X0 + 0x608]
	0x03BF3E30 BL 0x1C16CF4
	0x03BF3E34 ADRP X0, 0x52A000
	0x03BF3E38 LDR X0, [X0 + 0x478]
	0x03BF3E3C BL 0x1C16CF4
	0x03BF3E40 ADRP X0, 0x56B000
	0x03BF3E44 LDR X0, [X0 + 0x2E0]
	0x03BF3E48 BL 0x1C16CF4
	0x03BF3E4C ADRP X0, 0x553000
	0x03BF3E50 LDR X0, [X0 + 0x618]
	0x03BF3E54 BL 0x1C16CF4
	0x03BF3E58 ADRP X0, 0x56B000
	0x03BF3E5C LDR X0, [X0 + 0x578]
	0x03BF3E60 BL 0x1C16CF4
	0x03BF3E64 ADRP X0, 0x56B000
	0x03BF3E68 LDR X0, [X0 + 0x2E8]
	0x03BF3E6C BL 0x1C16CF4
	0x03BF3E70 ADRP X0, 0x56B000
	0x03BF3E74 LDR X0, [X0 + 0x510]
	0x03BF3E78 BL 0x1C16CF4
	0x03BF3E7C ADRP X0, 0x56B000
	0x03BF3E80 LDR X0, [X0 + 0x6B8]
	0x03BF3E84 BL 0x1C16CF4
	0x03BF3E88 ADRP X0, 0x56B000
	0x03BF3E8C LDR X0, [X0 + 0x6C0]
	0x03BF3E90 BL 0x1C16CF4
	0x03BF3E94 ADRP X0, 0x56B000
	0x03BF3E98 LDR X0, [X0 + 0x6C8]
	0x03BF3E9C BL 0x1C16CF4
	0x03BF3EA0 ADRP X0, 0x56B000
	0x03BF3EA4 LDR X0, [X0 + 0x6D0]
	0x03BF3EA8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+392]
	008 Move X2, [X8+400]
	009 Move W1, 1
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X1, X31
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Object.Finalize, X0
	018 Return 
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X21, X0
	021 Move X0, X21
	022 Call 0x3EB2AD0
	023 Move X20, [X0]
	024 Call 0x3EB2AE0
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.Finalize, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 
	035 Move X20, X31
	036 Move X0, X20
	037 Call 0x1C17F18
	038 Move X21, X0
	039 Move X0, X19
	040 Move X1, X31
	041 Call Object.Finalize, X0
	042 Compare X20, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X21
	045 Call 0x1D2D690
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1991590

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03BF3EAC ADRP X0, 0x56B000
	0x03BF3EB0 LDR X0, [X0 + 0x6D8]
	0x03BF3EB4 BL 0x1C16CF4
	0x03BF3EB8 ADRP X0, 0x553000
	0x03BF3EBC LDR X0, [X0 + 0x628]
	0x03BF3EC0 BL 0x1C16CF4
	0x03BF3EC4 ADRP X0, 0x553000
	0x03BF3EC8 LDR X0, [X0 + 0x630]
	0x03BF3ECC BL 0x1C16CF4
	0x03BF3ED0 ADRP X0, 0x52A000
	0x03BF3ED4 LDR X0, [X0 + 0x490]
	0x03BF3ED8 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Call GlobalJavaObjectRef.Dispose, X0
	008 Move [X19+16], X31
	009 Move X0, [X19+24]
	010 Compare X0, 0
	011 JumpIfEqual {14}
	012 Call GlobalJavaObjectRef.Dispose, X0
	013 Move [X19+24], X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void _Call(System.String methodName, System.Object[] args)

Disassembly:
	0x03BF3498 BL 0x1C16F28
	0x03BF349C BL 0x1C16F28
	0x03BF34A0 BL 0x1C16F20
	0x03BF34A4 B 0x3BF34BC
	0x03BF34A8 B 0x3BF34BC
	0x03BF34AC B 0x3BF34BC
	0x03BF34B0 B 0x3BF34BC
	0x03BF34B4 B 0x3BF34BC
	0x03BF34B8 B 0x3BF34BC
	0x03BF34BC MOV X21, X0
	0x03BF34C0 CMP W1, 0x1
	0x03BF34C4 B.NE 0x3BF34E4
	0x03BF34C8 MOV X0, X21
	0x03BF34CC BL 0x3EB1AD0
	0x03BF34D0 LDR X20, [X0]
	0x03BF34D4 BL 0x3EB1AE0
	0x03BF34D8 CBZ X19, 0x3BF34EC
	0x03BF34DC MOV X21, X31
	0x03BF34E0 B 0x3BF343C
	0x03BF34E4 MOV X20, X31
	0x03BF34E8 B 0x3BF34F4
	0x03BF34EC BL 0x1C16F20
	0x03BF34F0 MOV X21, X0
	0x03BF34F4 CBNZ X19, 0x3BF34FC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+24]
	007 Compare X8, 0
	008 JumpIfEqual {30}
	009 Move X22, [X8+24]
	010 Move X20, X0
	011 Move X0, X2
	012 Move X19, X2
	013 Move X21, X1
	014 Call _AndroidJNIHelper.GetSignature, X0
	015 Move X2, X0
	016 Move X0, X22
	017 Move X1, X21
	018 Move W3, W31
	019 Call _AndroidJNIHelper.GetMethodID, X0, X1, X2, X3
	020 Move X1, X0
	021 Move X0, X20
	022 Move X2, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Call AndroidJavaObject._Call, X0, X1, X2
	029 Return 
	030 Call 0x1C17F20

Method: System.Void _Call(System.IntPtr methodID, System.Object[] args)

Disassembly:
	0x03BF34FC LDR W8, [X19 + 0x18]
	0x03BF3500 CMP W8, 0x1
	0x03BF3504 B.LS 0x3BF3530
	0x03BF3508 LDR X0, [X19 + 0x28]
	0x03BF350C BL 0x3BEBA40
	0x03BF3510 LDR W8, [X19 + 0x18]
	0x03BF3514 CMP W8, 0x2
	0x03BF3518 B.LS 0x3BF3534
	0x03BF351C LDR X0, [X19 + 0x30]
	0x03BF3520 BL 0x3BEBA40
	0x03BF3524 CBNZ X20, 0x3BF3538
	0x03BF3528 MOV X0, X21
	0x03BF352C BL 0x1D2C690
	0x03BF3530 BL 0x1C16F28
	0x03BF3534 BL 0x1C16F28
	0x03BF3538 MOV X0, X20
	0x03BF353C BL 0x1C16F18
	0x03BF3540 BL 0x1990590
	0x03BF3544 STR X30, [X31 - 0x40]!
	0x03BF3548 STP X24, X23, [X31 + 0x10]
	0x03BF354C STP X22, X21, [X31 + 0x20]
	0x03BF3550 STP X20, X19, [X31 + 0x30]
	0x03BF3554 ADRP X19, 0x7F0000
	0x03BF3558 ADRP X24, 0x542000
	0x03BF355C LDRB W8, [X19 + 0x78B]
	0x03BF3560 LDR X24, [X24 + 0xEE8]
	0x03BF3564 MOV W20, W3
	0x03BF3568 MOV X21, X2
	0x03BF356C MOV X22, X1
	0x03BF3570 MOV X23, X0
	0x03BF3574 TBNZ X8, 0x0, 0x3BF3598
	0x03BF3578 ADRP X0, 0x529000
	0x03BF357C LDR X0, [X0 + 0x6A0]
	0x03BF3580 BL 0x1C16CF4
	0x03BF3584 ADRP X0, 0x542000
	0x03BF3588 LDR X0, [X0 + 0xEE8]
	0x03BF358C BL 0x1C16CF4
	0x03BF3590 MOVZ W8, 0x1
	0x03BF3594 STRB W8, [X19 + 0x78B]
	0x03BF3598 LDR X0, [X24]
	0x03BF359C MOVZ W1, 0x4
	0x03BF35A0 BL 0x1C16D6C
	0x03BF35A4 MOV X19, X0
	0x03BF35A8 CBZ X0, 0x3BF3680
	0x03BF35AC LDR W8, [X19 + 0x18]
	0x03BF35B0 CBZ W8, 0x3BF3684
	0x03BF35B4 STR X23, [X19 + 0x20]
	0x03BF35B8 MOV X0, X22
	0x03BF35BC BL 0x3BEBA98
	0x03BF35C0 LDR W8, [X19 + 0x18]
	0x03BF35C4 CMP W8, 0x1
	0x03BF35C8 B.LS 0x3BF3690
	0x03BF35CC STR X0, [X19 + 0x28]
	0x03BF35D0 MOV X0, X21
	0x03BF35D4 BL 0x3BEBA98
	0x03BF35D8 LDR W8, [X19 + 0x18]
	0x03BF35DC CMP W8, 0x2
	0x03BF35E0 B.LS 0x3BF3694
	0x03BF35E4 CMP W8, 0x3
	0x03BF35E8 STR X0, [X19 + 0x30]
	0x03BF35EC B.EQ 0x3BF3698
	0x03BF35F0 AND W8, W20, 0x1
	0x03BF35F4 ADRP X20, 0x529000
	0x03BF35F8 LDR X20, [X20 + 0x6A0]
	0x03BF35FC STRB W8, [X19 + 0x38]
	0x03BF3600 LDR X0, [X20]
	0x03BF3604 LDR W8, [X0 + 0xE0]
	0x03BF3608 CBNZ W8, 0x3BF3614
	0x03BF360C BL 0x1C16DFC
	0x03BF3610 LDR X0, [X20]
	0x03BF3614 LDR X8, [X0 + 0xB8]
	0x03BF3618 LDR X9, [X8]
	0x03BF361C CBZ X9, 0x3BF369C
	0x03BF3620 LDR X0, [X9 + 0x18]
	0x03BF3624 LDR X1, [X8 + 0x18]
	0x03BF3628 MOV X2, X19
	0x03BF362C BL 0x3BECD40
	0x03BF3630 MOV X21, X0
	0x03BF3634 MOV X20, X31
	0x03BF3638 LDR W8, [X19 + 0x18]
	0x03BF363C CMP W8, 0x1
	0x03BF3640 B.LS 0x3BF367C
	0x03BF3644 LDR X0, [X19 + 0x28]
	0x03BF3648 BL 0x3BEBA40
	0x03BF364C LDR W8, [X19 + 0x18]
	0x03BF3650 CMP W8, 0x2
	0x03BF3654 B.LS 0x3BF367C
	0x03BF3658 LDR X0, [X19 + 0x30]
	0x03BF365C BL 0x3BEBA40
	0x03BF3660 CBNZ X20, 0x3BF3688
	0x03BF3664 MOV X0, X21
	0x03BF3668 LDP X20, X19, [X31 + 0x30]
	0x03BF366C LDP X22, X21, [X31 + 0x20]
	0x03BF3670 LDP X24, X23, [X31 + 0x10]
	0x03BF3674 LDR X30, [X31], #0x40
	0x03BF3678 RET
	0x03BF367C BL 0x1C16F28
	0x03BF3680 BL 0x1C16F20
	0x03BF3684 BL 0x1C16F28
	0x03BF3688 MOV X0, X20
	0x03BF368C BL 0x1C16F18

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X20, 0x7F1000
	014 Move X19, X2
	015 Move X22, X1
	016 Move [X29-8], X8
	017 Move W8, [X20+1923]
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x56C000
	024 Move X0, [X0+1496]
	025 Call 0x1C17CF4
	026 Move X0, 0x52A000
	027 Move X0, [X0+1720]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1923], W8
	031 Compare X19, 0
	032 JumpIfEqual {47}
	033 Move X21, [X19+24]
	034 Compare X21, 0
	035 JumpIfEqual {48}
	036 Move X8, X21
	037 ShiftRight X8, 32
	038 And X8, X8, 0x7FFFFFFF
	039 NotImplemented "Instruction SBFM not yet implemented."
	040 Compare X8, 0
	041 JumpIfEqual {49}
	042 Add X9, X2, 15
	043 Add X8, X31, 0
	044 And X9, X9, 0xFFFFFFFF
	045 Subtract X20, X8, X9
	046 Add X31, X20, 0
	047 Move X21, X31
	048 Move X20, X31
	049 Move X20, X31
	050 Move X0, X20
	051 Move W1, W31
	052 Call 0x3EB2B10
	053 Move TEMP, X21
	054 And TEMP, TEMP, -2147483648
	055 Compare TEMP, -2147483648
	056 JumpIfNotEqual {59}
	057 Move X0, X31
	058 Call ThrowHelper.ThrowArgumentOutOfRangeException
	059 And X21, X21, 0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X2, X21
	063 Call AndroidJNIHelper.CreateJNIArgArray, X0, X1
	064 Move X8, [X23+16]
	065 Compare X8, 0
	066 JumpIfEqual {89}
	067 Move X0, [X8+24]
	068 Move X1, X22
	069 Move X2, X20
	070 Move X3, X21
	071 Call AndroidJNISafe.CallVoidMethod, X0, X1, X2
	072 Move X0, X19
	073 Move X1, X20
	074 Move X2, X21
	075 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	076 Move X8, [X24+40]
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X31, X29, 0
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X29, [X31+64]
	087 Move X30, [X31+72]
	088 Return 
	089 Call 0x1C17F20
	090 Call 0x3EB2B20
	091 Move X23, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X23
	094 Call 0x3EB2AD0
	095 Move X22, [X0]
	096 Call 0x3EB2AE0
	097 Move X0, X19
	098 Move X1, X20
	099 Move X2, X21
	100 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	101 Compare X22, 0
	102 JumpIfEqual {76}
	103 Move X0, X22
	104 Call 0x1C17F18
	105 Move X22, X31
	106 Move X23, X0
	107 Move X0, X19
	108 Move X1, X20
	109 Move X2, X21
	110 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	111 Compare X22, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X23
	114 Call 0x1D2D690
	115 Move X0, X22
	116 Call 0x1C17F18
	117 Call 0x1991590

Method: ReturnType _Call(System.String methodName, System.Object[] args)

Disassembly:
	0x0227EDFC B 0x227EE7C
	0x0227EE00 B 0x227EE7C
	0x0227EE04 B 0x227EE7C
	0x0227EE08 B 0x227EE7C
	0x0227EE0C B 0x227EE7C
	0x0227EE10 B 0x227EE7C
	0x0227EE14 B 0x227EE7C
	0x0227EE18 B 0x227EE7C
	0x0227EE1C B 0x227EE7C
	0x0227EE20 B 0x227EE7C
	0x0227EE24 B 0x227EE7C
	0x0227EE28 B 0x227EE7C
	0x0227EE2C B 0x227EE7C
	0x0227EE30 B 0x227EE7C
	0x0227EE34 B 0x227EE7C
	0x0227EE38 B 0x227EE7C
	0x0227EE3C B 0x227EE7C
	0x0227EE40 B 0x227EE7C
	0x0227EE44 B 0x227EE7C
	0x0227EE48 B 0x227EE7C
	0x0227EE4C B 0x227EE7C
	0x0227EE50 B 0x227EE7C
	0x0227EE54 B 0x227EE7C
	0x0227EE58 B 0x227EE7C
	0x0227EE5C B 0x227EE7C
	0x0227EE60 B 0x227EE7C
	0x0227EE64 B 0x227EE7C
	0x0227EE68 B 0x227EE7C
	0x0227EE6C B 0x227EE7C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X20, X3
	008 Move X19, X2
	009 Move X22, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X20
	014 Call 0x1C5D6E0
	015 Move X0, [X21+24]
	016 Move X1, X31
	017 Call GlobalJavaObjectRef.op_Implicit, X0
	018 Move X8, [X20+56]
	019 Move X1, X22
	020 Move X2, X19
	021 Move W3, W31
	022 Move X4, [X8]
	023 Call 0x227B364, X0, X1, X2, X3
	024 Move X8, [X20+56]
	025 Move X1, X0
	026 Move X0, X21
	027 Move X2, X19
	028 Move X3, [X8+8]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call 0x227DD6C, X0, X1, X2
	035 Return X0

Method: ReturnType _Call(System.IntPtr methodID, System.Object[] args)

Disassembly:
	0x0227DD6C B 0x227DD80
	0x0227DD70 B 0x227DD80
	0x0227DD74 B 0x227DD80
	0x0227DD78 B 0x227DD80
	0x0227DD7C B 0x227DD80
	0x0227DD80 MOV X22, X0
	0x0227DD84 CMP W1, 0x1
	0x0227DD88 B.NE 0x227DDBC
	0x0227DD8C MOV X0, X22
	0x0227DD90 BL 0x3EB1AD0
	0x0227DD94 LDR X23, [X0]
	0x0227DD98 BL 0x3EB1AE0
	0x0227DD9C MOV X0, X19
	0x0227DDA0 MOV X1, X20
	0x0227DDA4 MOV X2, X21
	0x0227DDA8 MOV X3, X31
	0x0227DDAC BL 0x3BE49F8
	0x0227DDB0 CBNZ X23, 0x227DDC4
	0x0227DDB4 MOV W22, W31
	0x0227DDB8 B 0x227DA5C
	0x0227DDBC MOV X23, X31
	0x0227DDC0 B 0x227DDD0
	0x0227DDC4 MOV X0, X23
	0x0227DDC8 BL 0x1C16F18
	0x0227DDCC MOV X22, X0
	0x0227DDD0 MOV X0, X19
	0x0227DDD4 MOV X1, X20
	0x0227DDD8 MOV X2, X21
	0x0227DDDC MOV X3, X31
	0x0227DDE0 BL 0x3BE49F8
	0x0227DDE4 CBNZ X23, 0x227DDF0
	0x0227DDE8 MOV X0, X22
	0x0227DDEC BL 0x1D2C690
	0x0227DDF0 MOV X0, X23
	0x0227DDF4 BL 0x1C16F18
	0x0227DDF8 BL 0x1990590
	0x0227DDFC STR X30, [X31 - 0x30]!
	0x0227DE00 STP X22, X21, [X31 + 0x10]
	0x0227DE04 STP X20, X19, [X31 + 0x20]
	0x0227DE08 LDR X8, [X3 + 0x38]
	0x0227DE0C MOV X20, X3
	0x0227DE10 MOV X19, X2
	0x0227DE14 MOV X22, X1
	0x0227DE18 MOV X21, X0
	0x0227DE1C CBNZ X8, 0x227DE28
	0x0227DE20 MOV X0, X20
	0x0227DE24 BL 0x1C5C6E0
	0x0227DE28 LDR X0, [X21 + 0x18]
	0x0227DE2C MOV X1, X31
	0x0227DE30 BL 0x3BEF01C
	0x0227DE34 LDR X8, [X20 + 0x38]
	0x0227DE38 MOV X1, X22
	0x0227DE3C MOV X2, X19
	0x0227DE40 MOV W3, W31
	0x0227DE44 LDR X4, [X8]
	0x0227DE48 BL 0x227A364
	0x0227DE4C LDR X8, [X20 + 0x38]
	0x0227DE50 MOV X1, X0
	0x0227DE54 MOV X0, X21
	0x0227DE58 MOV X2, X19
	0x0227DE5C LDR X3, [X8 + 0x8]
	0x0227DE60 LDP X20, X19, [X31 + 0x20]
	0x0227DE64 LDP X22, X21, [X31 + 0x10]
	0x0227DE68 LDR X30, [X31], #0x30
	0x0227DE6C B 0x227CD6C
	0x0227DE70 STP X29, X30, [X31 - 0x60]!
	0x0227DE74 STP X28, X27, [X31 + 0x10]
	0x0227DE78 STP X26, X25, [X31 + 0x20]
	0x0227DE7C STP X24, X23, [X31 + 0x30]
	0x0227DE80 STP X22, X21, [X31 + 0x40]
	0x0227DE84 STP X20, X19, [X31 + 0x50]
	0x0227DE88 ADD X29, X31, 0x0
	0x0227DE8C SUB X31, X31, 0x20
	0x0227DE90 MRS X8, 0xC000
	0x0227DE94 STUR X8, [X29 - 0x18]
	0x0227DE98 LDR X8, [X8 + 0x28]
	0x0227DE9C MOV X28, X3
	0x0227DEA0 MOV X24, X3
	0x0227DEA4 MOV X19, X2
	0x0227DEA8 STUR X8, [X29 - 0x8]
	0x0227DEAC LDR X8, [X28 + 0x38]!
	0x0227DEB0 MOV X22, X1
	0x0227DEB4 MOV X23, X0
	0x0227DEB8 CBNZ X8, 0x227E008
	0x0227DEBC ADRP X0, 0x1E9F000
	0x0227DEC0 LDR X0, [X0 + 0x690]
	0x0227DEC4 BL 0x1C16CF4
	0x0227DEC8 ADRP X0, 0x1E9F000
	0x0227DECC LDR X0, [X0 + 0x698]
	0x0227DED0 BL 0x1C16CF4
	0x0227DED4 ADRP X0, 0x1E9F000
	0x0227DED8 LDR X0, [X0 + 0x6A0]
	0x0227DEDC BL 0x1C16CF4
	0x0227DEE0 ADRP X0, 0x1E9F000
	0x0227DEE4 LDR X0, [X0 + 0x248]
	0x0227DEE8 BL 0x1C16CF4
	0x0227DEEC ADRP X0, 0x1E76000
	0x0227DEF0 LDR X0, [X0 + 0xB58]
	0x0227DEF4 BL 0x1C16CF4
	0x0227DEF8 ADRP X0, 0x1E9D000
	0x0227DEFC LDR X0, [X0 + 0xD68]
	0x0227DF00 BL 0x1C16CF4
	0x0227DF04 ADRP X0, 0x1E77000
	0x0227DF08 LDR X0, [X0 + 0x9D8]
	0x0227DF0C BL 0x1C16CF4
	0x0227DF10 ADRP X0, 0x1E9D000
	0x0227DF14 LDR X0, [X0 + 0xD70]
	0x0227DF18 BL 0x1C16CF4
	0x0227DF1C ADRP X0, 0x1E78000
	0x0227DF20 LDR X0, [X0 + 0x170]
	0x0227DF24 BL 0x1C16CF4
	0x0227DF28 ADRP X0, 0x1E76000
	0x0227DF2C LDR X0, [X0 + 0xA28]
	0x0227DF30 BL 0x1C16CF4
	0x0227DF34 ADRP X0, 0x1E9E000
	0x0227DF38 LDR X0, [X0 + 0xA78]
	0x0227DF3C BL 0x1C16CF4
	0x0227DF40 ADRP X0, 0x1E79000
	0x0227DF44 LDR X0, [X0 + 0x978]
	0x0227DF48 BL 0x1C16CF4
	0x0227DF4C ADRP X0, 0x1E9D000
	0x0227DF50 LDR X0, [X0 + 0xD78]
	0x0227DF54 BL 0x1C16CF4
	0x0227DF58 ADRP X0, 0x1E7A000
	0x0227DF5C LDR X0, [X0 + 0x628]
	0x0227DF60 BL 0x1C16CF4
	0x0227DF64 ADRP X0, 0x1E9D000
	0x0227DF68 LDR X0, [X0 + 0xD80]
	0x0227DF6C BL 0x1C16CF4
	0x0227DF70 ADRP X0, 0x1E76000
	0x0227DF74 LDR X0, [X0 + 0x758]
	0x0227DF78 BL 0x1C16CF4
	0x0227DF7C ADRP X0, 0x1E9D000
	0x0227DF80 LDR X0, [X0 + 0xD88]
	0x0227DF84 BL 0x1C16CF4
	0x0227DF88 ADRP X0, 0x1E78000
	0x0227DF8C LDR X0, [X0 + 0xA60]
	0x0227DF90 BL 0x1C16CF4
	0x0227DF94 ADRP X0, 0x1E9F000
	0x0227DF98 LDR X0, [X0 + 0x6A8]
	0x0227DF9C BL 0x1C16CF4
	0x0227DFA0 ADRP X0, 0x1E9D000
	0x0227DFA4 LDR X0, [X0 + 0xD90]
	0x0227DFA8 BL 0x1C16CF4
	0x0227DFAC ADRP X0, 0x1E9F000
	0x0227DFB0 LDR X0, [X0 + 0x6B0]
	0x0227DFB4 BL 0x1C16CF4
	0x0227DFB8 ADRP X0, 0x1E9E000
	0x0227DFBC LDR X0, [X0 + 0xA80]
	0x0227DFC0 BL 0x1C16CF4
	0x0227DFC4 ADRP X0, 0x1E76000
	0x0227DFC8 LDR X0, [X0 + 0xA90]
	0x0227DFCC BL 0x1C16CF4
	0x0227DFD0 ADRP X0, 0x1E9F000
	0x0227DFD4 LDR X0, [X0 + 0x6B8]
	0x0227DFD8 BL 0x1C16CF4
	0x0227DFDC ADRP X0, 0x1E9E000
	0x0227DFE0 LDR X0, [X0 + 0xB60]
	0x0227DFE4 BL 0x1C16CF4
	0x0227DFE8 ADRP X0, 0x1E76000
	0x0227DFEC LDR X0, [X0 + 0x6C0]
	0x0227DFF0 BL 0x1C16CF4
	0x0227DFF4 ADRP X0, 0x1E9F000
	0x0227DFF8 LDR X0, [X0 + 0x6C0]
	0x0227DFFC BL 0x1C16CF4
	0x0227E000 LDR X8, [X24 + 0x38]
	0x0227E004 CBZ X8, 0x227E058
	0x0227E008 CBZ X19, 0x227E064
	0x0227E00C LDR X21, [X19 + 0x18]
	0x0227E010 CBZ X21, 0x227E068
	0x0227E014 UBFM X8, X21, 0x20, 0x1F
	0x0227E018 SBFM X2, X21, 0x3D, 0x1F
	0x0227E01C CBZ X8, 0x227E038
	0x0227E020 ADD X9, X2, 0xF
	0x0227E024 ADD X8, X31, 0x0
	0x0227E028 AND X9, X9, 0xFFFFFFFF
	0x0227E02C SUB X20, X8, X9
	0x0227E030 ADD X31, X20, 0x0
	0x0227E034 B 0x227E03C
	0x0227E038 MOV X20, X31
	0x0227E03C MOV X0, X20
	0x0227E040 MOV W1, W31
	0x0227E044 BL 0x3EB1B10
	0x0227E048 TBZ X21, 0x1F, 0x227E06C
	0x0227E04C MOV X0, X31
	0x0227E050 BL 0x339D6EC
	0x0227E054 B 0x227E06C
	0x0227E058 MOV X0, X24
	0x0227E05C BL 0x1C5C6E0
	0x0227E060 CBNZ X19, 0x227E00C
	0x0227E064 MOV X21, X31
	0x0227E068 MOV X20, X31
	0x0227E06C AND X21, X21, 0x0
	0x0227E070 MOV X0, X19
	0x0227E074 MOV X1, X20
	0x0227E078 MOV X2, X21
	0x0227E07C MOV X3, X31
	0x0227E080 BL 0x3BE4724
	0x0227E084 ADRP X26, 0x1E75000
	0x0227E088 LDR X26, [X26 + 0x6C0]
	0x0227E08C LDR X8, [X28]
	0x0227E090 LDR X0, [X26]
	0x0227E094 LDR X25, [X8]
	0x0227E098 LDR W9, [X0 + 0xE0]
	0x0227E09C CBNZ W9, 0x227E0A4
	0x0227E0A0 BL 0x1C16DFC
	0x0227E0A4 MOV X0, X25
	0x0227E0A8 MOV X1, X31
	0x0227E0AC BL 0x338C698
	0x0227E0B0 ADRP X27, 0x1E9E000
	0x0227E0B4 LDR X27, [X27 + 0x6A0]
	0x0227E0B8 MOV X25, X0
	0x0227E0BC LDR X0, [X27]
	0x0227E0C0 LDR W8, [X0 + 0xE0]
	0x0227E0C4 CBNZ W8, 0x227E0CC
	0x0227E0C8 BL 0x1C16DFC
	0x0227E0CC MOV X0, X25
	0x0227E0D0 MOV X1, X31
	0x0227E0D4 BL 0x3BF3054
	0x0227E0D8 MOV W8, W0
	0x0227E0DC LDR X9, [X28]
	0x0227E0E0 LDR X0, [X26]
	0x0227E0E4 LDR X25, [X9]
	0x0227E0E8 LDR W9, [X0 + 0xE0]
	0x0227E0EC TBZ X8, 0x0, 0x227E1B0
	0x0227E0F0 CBNZ W9, 0x227E0F8
	0x0227E0F4 BL 0x1C16DFC
	0x0227E0F8 MOV X0, X25
	0x0227E0FC MOV X1, X31
	0x0227E100 BL 0x338C698
	0x0227E104 ADRP X8, 0x1E9C000
	0x0227E108 LDR X8, [X8 + 0xD80]
	0x0227E10C MOV X24, X0
	0x0227E110 LDR X0, [X8]
	0x0227E114 MOV X1, X31
	0x0227E118 BL 0x338C698
	0x0227E11C MOV X1, X0
	0x0227E120 MOV X0, X24
	0x0227E124 MOV X2, X31
	0x0227E128 BL 0x3395194
	0x0227E12C TBZ X0, 0x0, 0x227E254
	0x0227E130 LDR X0, [X23 + 0x10]
	0x0227E134 MOV X1, X31
	0x0227E138 BL 0x3BEF01C
	0x0227E13C MOV X1, X22
	0x0227E140 MOV X2, X20
	0x0227E144 MOV X3, X21
	0x0227E148 MOV X4, X31
	0x0227E14C BL 0x3BE6538
	0x0227E150 ADRP X8, 0x1E75000
	0x0227E154 LDR X8, [X8 + 0x758]
	0x0227E158 STUR W0, [X29 - 0x10]
	0x0227E15C LDR X8, [X8]
	0x0227E160 SUB X1, X29, 0x10
	0x0227E164 MOV X0, X8
	0x0227E168 BL 0x1C16E04
	0x0227E16C LDR X8, [X28]
	0x0227E170 MOV X22, X0
	0x0227E174 LDR X1, [X8 + 0x8]
	0x0227E178 LDRB W8, [X1 + 0x135]
	0x0227E17C TBNZ X8, 0x0, 0x227E18C
	0x0227E180 MOV X0, X1
	0x0227E184 BL 0x1C5C684
	0x0227E188 MOV X1, X0
	0x0227E18C CBZ X22, 0x227EB94
	0x0227E190 LDR X8, [X22]
	0x0227E194 LDR X9, [X1 + 0x40]
	0x0227E198 LDR X8, [X8 + 0x40]
	0x0227E19C CMP X8, X9
	0x0227E1A0 B.NE 0x227EBA0
	0x0227E1A4 MOV X0, X22
	0x0227E1A8 BL 0x1C16E08
	0x0227E1AC B 0x227EB40
	0x0227E1B0 CBNZ W9, 0x227E1B8
	0x0227E1B4 BL 0x1C16DFC
	0x0227E1B8 MOV X0, X25
	0x0227E1BC MOV X1, X31
	0x0227E1C0 BL 0x338C698
	0x0227E1C4 ADRP X8, 0x1E9D000
	0x0227E1C8 LDR X8, [X8 + 0xB60]
	0x0227E1CC MOV X25, X0
	0x0227E1D0 LDR X0, [X8]
	0x0227E1D4 MOV X1, X31
	0x0227E1D8 BL 0x338C698
	0x0227E1DC MOV X1, X0
	0x0227E1E0 MOV X0, X25
	0x0227E1E4 MOV X2, X31
	0x0227E1E8 BL 0x3395194
	0x0227E1EC TBZ X0, 0x0, 0x227E328
	0x0227E1F0 LDR X0, [X23 + 0x10]
	0x0227E1F4 MOV X1, X31
	0x0227E1F8 BL 0x3BEF01C
	0x0227E1FC MOV X1, X22
	0x0227E200 MOV X2, X20
	0x0227E204 MOV X3, X21
	0x0227E208 MOV X4, X31
	0x0227E20C BL 0x3BEE1B8
	0x0227E210 LDR X8, [X28]
	0x0227E214 MOV X22, X0
	0x0227E218 LDR X1, [X8 + 0x8]
	0x0227E21C LDRB W8, [X1 + 0x135]
	0x0227E220 TBNZ X8, 0x0, 0x227E230
	0x0227E224 MOV X0, X1
	0x0227E228 BL 0x1C5C684
	0x0227E22C MOV X1, X0
	0x0227E230 CBZ X22, 0x227EB90
	0x0227E234 LDR X8, [X22]
	0x0227E238 LDR X9, [X1 + 0x40]
	0x0227E23C LDR X8, [X8 + 0x40]
	0x0227E240 CMP X8, X9
	0x0227E244 B.NE 0x227EB98
	0x0227E248 MOV X0, X22
	0x0227E24C BL 0x1C16E08
	0x0227E250 B 0x227EB40
	0x0227E254 LDR X0, [X26]
	0x0227E258 LDR X8, [X28]
	0x0227E25C LDR W9, [X0 + 0xE0]
	0x0227E260 LDR X24, [X8]
	0x0227E264 CBNZ W9, 0x227E26C
	0x0227E268 BL 0x1C16DFC
	0x0227E26C MOV X0, X24
	0x0227E270 MOV X1, X31
	0x0227E274 BL 0x338C698
	0x0227E278 ADRP X8, 0x1E9E000
	0x0227E27C LDR X8, [X8 + 0x248]
	0x0227E280 MOV X24, X0
	0x0227E284 LDR X0, [X8]
	0x0227E288 MOV X1, X31
	0x0227E28C BL 0x338C698
	0x0227E290 MOV X1, X0
	0x0227E294 MOV X0, X24
	0x0227E298 MOV X2, X31
	0x0227E29C BL 0x3395194
	0x0227E2A0 TBZ X0, 0x0, 0x227E3FC
	0x0227E2A4 LDR X0, [X23 + 0x10]
	0x0227E2A8 MOV X1, X31
	0x0227E2AC BL 0x3BEF01C
	0x0227E2B0 MOV X1, X22
	0x0227E2B4 MOV X2, X20
	0x0227E2B8 MOV X3, X21
	0x0227E2BC MOV X4, X31
	0x0227E2C0 BL 0x3BE6A54
	0x0227E2C4 ADRP X8, 0x1E75000
	0x0227E2C8 LDR X8, [X8 + 0xB58]
	0x0227E2CC AND W9, W0, 0x1
	0x0227E2D0 STURB W9, [X29 - 0x10]
	0x0227E2D4 LDR X8, [X8]
	0x0227E2D8 SUB X1, X29, 0x10
	0x0227E2DC MOV X0, X8
	0x0227E2E0 BL 0x1C16E04
	0x0227E2E4 LDR X8, [X28]
	0x0227E2E8 MOV X22, X0
	0x0227E2EC LDR X1, [X8 + 0x8]
	0x0227E2F0 LDRB W8, [X1 + 0x135]
	0x0227E2F4 TBNZ X8, 0x0, 0x227E304
	0x0227E2F8 MOV X0, X1
	0x0227E2FC BL 0x1C5C684
	0x0227E300 MOV X1, X0
	0x0227E304 CBZ X22, 0x227EBA8
	0x0227E308 LDR X8, [X22]
	0x0227E30C LDR X9, [X1 + 0x40]
	0x0227E310 LDR X8, [X8 + 0x40]
	0x0227E314 CMP X8, X9
	0x0227E318 B.NE 0x227EBAC
	0x0227E31C MOV X0, X22
	0x0227E320 BL 0x1C16E08
	0x0227E324 B 0x227EB40
	0x0227E328 LDR X0, [X26]
	0x0227E32C LDR X8, [X28]
	0x0227E330 LDR W9, [X0 + 0xE0]
	0x0227E334 LDR X25, [X8]
	0x0227E338 CBNZ W9, 0x227E340
	0x0227E33C BL 0x1C16DFC
	0x0227E340 MOV X0, X25
	0x0227E344 MOV X1, X31
	0x0227E348 BL 0x338C698
	0x0227E34C ADRP X8, 0x1E9E000
	0x0227E350 LDR X8, [X8 + 0x690]
	0x0227E354 MOV X25, X0
	0x0227E358 LDR X0, [X8]
	0x0227E35C MOV X1, X31
	0x0227E360 BL 0x338C698
	0x0227E364 MOV X1, X0
	0x0227E368 MOV X0, X25
	0x0227E36C MOV X2, X31
	0x0227E370 BL 0x3395194
	0x0227E374 TBZ X0, 0x0, 0x227E4F8
	0x0227E378 LDR X0, [X23 + 0x10]
	0x0227E37C MOV X1, X31
	0x0227E380 BL 0x3BEF01C
	0x0227E384 MOV X1, X22
	0x0227E388 MOV X2, X20
	0x0227E38C MOV X3, X21
	0x0227E390 MOV X4, X31
	0x0227E394 BL 0x3BEE140
	0x0227E398 MOV X22, X0
	0x0227E39C MOV X1, X31
	0x0227E3A0 MOV X2, X31
	0x0227E3A4 BL 0x33BE5B0
	0x0227E3A8 TBNZ X0, 0x0, 0x227E57C
	0x0227E3AC MOV X0, X22
	0x0227E3B0 MOV X1, X31
	0x0227E3B4 BL 0x3BF2EDC
	0x0227E3B8 LDR X8, [X28]
	0x0227E3BC MOV X22, X0
	0x0227E3C0 LDR X1, [X8 + 0x8]
	0x0227E3C4 LDRB W8, [X1 + 0x135]
	0x0227E3C8 TBNZ X8, 0x0, 0x227E3D8
	0x0227E3CC MOV X0, X1
	0x0227E3D0 BL 0x1C5C684
	0x0227E3D4 MOV X1, X0
	0x0227E3D8 CBZ X22, 0x227EBB4
	0x0227E3DC LDR X8, [X22]
	0x0227E3E0 LDR X9, [X1 + 0x40]
	0x0227E3E4 LDR X8, [X8 + 0x40]
	0x0227E3E8 CMP X8, X9
	0x0227E3EC B.NE 0x227EBB8
	0x0227E3F0 MOV X0, X22
	0x0227E3F4 BL 0x1C16E08
	0x0227E3F8 B 0x227EB40
	0x0227E3FC LDR X0, [X26]
	0x0227E400 LDR X8, [X28]
	0x0227E404 LDR W9, [X0 + 0xE0]
	0x0227E408 LDR X24, [X8]
	0x0227E40C CBNZ W9, 0x227E414
	0x0227E410 BL 0x1C16DFC
	0x0227E414 MOV X0, X24
	0x0227E418 MOV X1, X31
	0x0227E41C BL 0x338C698
	0x0227E420 ADRP X8, 0x1E9C000
	0x0227E424 LDR X8, [X8 + 0xD68]
	0x0227E428 MOV X24, X0
	0x0227E42C LDR X0, [X8]
	0x0227E430 MOV X1, X31
	0x0227E434 BL 0x338C698
	0x0227E438 MOV X1, X0
	0x0227E43C MOV X0, X24
	0x0227E440 MOV X2, X31
	0x0227E444 BL 0x3395194
	0x0227E448 TBZ X0, 0x0, 0x227E584
	0x0227E44C ADRP X8, 0x1E75000
	0x0227E450 LDR X8, [X8 + 0xA28]
	0x0227E454 LDR X0, [X8]
	0x0227E458 LDR W8, [X0 + 0xE0]
	0x0227E45C CBNZ W8, 0x227E464
	0x0227E460 BL 0x1C16DFC
	0x0227E464 ADRP X8, 0x1E9E000
	0x0227E468 LDR X8, [X8 + 0x6C0]
	0x0227E46C LDR X0, [X8]
	0x0227E470 MOV X1, X31
	0x0227E474 BL 0x3C06A04
	0x0227E478 LDR X0, [X23 + 0x10]
	0x0227E47C MOV X1, X31
	0x0227E480 BL 0x3BEF01C
	0x0227E484 MOV X1, X22
	0x0227E488 MOV X2, X20
	0x0227E48C MOV X3, X21
	0x0227E490 MOV X4, X31
	0x0227E494 BL 0x3BE6338
	0x0227E498 ADRP X8, 0x1E76000
	0x0227E49C LDR X8, [X8 + 0x9D8]
	0x0227E4A0 STURB W0, [X29 - 0x10]
	0x0227E4A4 LDR X8, [X8]
	0x0227E4A8 SUB X1, X29, 0x10
	0x0227E4AC MOV X0, X8
	0x0227E4B0 BL 0x1C16E04
	0x0227E4B4 LDR X8, [X28]
	0x0227E4B8 MOV X22, X0
	0x0227E4BC LDR X1, [X8 + 0x8]
	0x0227E4C0 LDRB W8, [X1 + 0x135]
	0x0227E4C4 TBNZ X8, 0x0, 0x227E4D4
	0x0227E4C8 MOV X0, X1
	0x0227E4CC BL 0x1C5C684
	0x0227E4D0 MOV X1, X0
	0x0227E4D4 CBZ X22, 0x227EC0C
	0x0227E4D8 LDR X8, [X22]
	0x0227E4DC LDR X9, [X1 + 0x40]
	0x0227E4E0 LDR X8, [X8 + 0x40]
	0x0227E4E4 CMP X8, X9
	0x0227E4E8 B.NE 0x227EC10
	0x0227E4EC MOV X0, X22
	0x0227E4F0 BL 0x1C16E08
	0x0227E4F4 B 0x227EB40
	0x0227E4F8 LDR X0, [X26]
	0x0227E4FC LDR X8, [X28]
	0x0227E500 LDR W9, [X0 + 0xE0]
	0x0227E504 LDR X25, [X8]
	0x0227E508 CBNZ W9, 0x227E510
	0x0227E50C BL 0x1C16DFC
	0x0227E510 MOV X0, X25
	0x0227E514 MOV X1, X31
	0x0227E518 BL 0x338C698
	0x0227E51C ADRP X8, 0x1E9E000
	0x0227E520 LDR X8, [X8 + 0x698]
	0x0227E524 MOV X25, X0
	0x0227E528 LDR X0, [X8]
	0x0227E52C MOV X1, X31
	0x0227E530 BL 0x338C698
	0x0227E534 MOV X1, X0
	0x0227E538 MOV X0, X25
	0x0227E53C MOV X2, X31
	0x0227E540 BL 0x3395194
	0x0227E544 TBZ X0, 0x0, 0x227E654
	0x0227E548 LDR X0, [X23 + 0x10]
	0x0227E54C MOV X1, X31
	0x0227E550 BL 0x3BEF01C
	0x0227E554 MOV X1, X22
	0x0227E558 MOV X2, X20
	0x0227E55C MOV X3, X21
	0x0227E560 MOV X4, X31
	0x0227E564 BL 0x3BEE140
	0x0227E568 MOV X22, X0
	0x0227E56C MOV X1, X31
	0x0227E570 MOV X2, X31
	0x0227E574 BL 0x33BE5B0
	0x0227E578 TBZ X0, 0x0, 0x227E6EC
	0x0227E57C MOV W22, W31
	0x0227E580 B 0x227EB44
	0x0227E584 LDR X0, [X26]
	0x0227E588 LDR X8, [X28]
	0x0227E58C LDR W9, [X0 + 0xE0]
	0x0227E590 LDR X24, [X8]
	0x0227E594 CBNZ W9, 0x227E59C
	0x0227E598 BL 0x1C16DFC
	0x0227E59C MOV X0, X24
	0x0227E5A0 MOV X1, X31
	0x0227E5A4 BL 0x338C698
	0x0227E5A8 ADRP X8, 0x1E9C000
	0x0227E5AC LDR X8, [X8 + 0xD90]
	0x0227E5B0 MOV X24, X0
	0x0227E5B4 LDR X0, [X8]
	0x0227E5B8 MOV X1, X31
	0x0227E5BC BL 0x338C698
	0x0227E5C0 MOV X1, X0
	0x0227E5C4 MOV X0, X24
	0x0227E5C8 MOV X2, X31
	0x0227E5CC BL 0x3395194
	0x0227E5D0 TBZ X0, 0x0, 0x227E73C
	0x0227E5D4 LDR X0, [X23 + 0x10]
	0x0227E5D8 MOV X1, X31
	0x0227E5DC BL 0x3BEF01C
	0x0227E5E0 MOV X1, X22
	0x0227E5E4 MOV X2, X20
	0x0227E5E8 MOV X3, X21
	0x0227E5EC MOV X4, X31
	0x0227E5F0 BL 0x3BE6338
	0x0227E5F4 ADRP X8, 0x1E9E000
	0x0227E5F8 LDR X8, [X8 + 0x6B0]
	0x0227E5FC STURB W0, [X29 - 0x10]
	0x0227E600 LDR X8, [X8]
	0x0227E604 SUB X1, X29, 0x10
	0x0227E608 MOV X0, X8
	0x0227E60C BL 0x1C16E04
	0x0227E610 LDR X8, [X28]
	0x0227E614 MOV X22, X0
	0x0227E618 LDR X1, [X8 + 0x8]
	0x0227E61C LDRB W8, [X1 + 0x135]
	0x0227E620 TBNZ X8, 0x0, 0x227E630
	0x0227E624 MOV X0, X1
	0x0227E628 BL 0x1C5C684
	0x0227E62C MOV X1, X0
	0x0227E630 CBZ X22, 0x227EC24
	0x0227E634 LDR X8, [X22]
	0x0227E638 LDR X9, [X1 + 0x40]
	0x0227E63C LDR X8, [X8 + 0x40]
	0x0227E640 CMP X8, X9
	0x0227E644 B.NE 0x227EC28
	0x0227E648 MOV X0, X22
	0x0227E64C BL 0x1C16E08
	0x0227E650 B 0x227EB40
	0x0227E654 ADRP X8, 0x1E9E000
	0x0227E658 LDR X0, [X26]
	0x0227E65C LDR X8, [X8 + 0x6A8]
	0x0227E660 LDR W9, [X0 + 0xE0]
	0x0227E664 LDR X25, [X8]
	0x0227E668 CBNZ W9, 0x227E670
	0x0227E66C BL 0x1C16DFC
	0x0227E670 MOV X0, X25
	0x0227E674 MOV X1, X31
	0x0227E678 BL 0x338C698
	0x0227E67C LDR X8, [X28]
	0x0227E680 MOV X25, X0
	0x0227E684 LDR X0, [X8]
	0x0227E688 MOV X1, X31
	0x0227E68C BL 0x338C698
	0x0227E690 MOV X26, X0
	0x0227E694 LDR X0, [X27]
	0x0227E698 LDR W8, [X0 + 0xE0]
	0x0227E69C CBNZ W8, 0x227E6A4
	0x0227E6A0 BL 0x1C16DFC
	0x0227E6A4 MOV X0, X25
	0x0227E6A8 MOV X1, X26
	0x0227E6AC MOV X2, X31
	0x0227E6B0 BL 0x3BF3068
	0x0227E6B4 TBZ X0, 0x0, 0x227EBC0
	0x0227E6B8 LDR X0, [X23 + 0x10]
	0x0227E6BC MOV X1, X31
	0x0227E6C0 BL 0x3BEF01C
	0x0227E6C4 MOV X1, X22
	0x0227E6C8 MOV X2, X20
	0x0227E6CC MOV X3, X21
	0x0227E6D0 MOV X4, X31
	0x0227E6D4 BL 0x3BEE140
	0x0227E6D8 LDR X8, [X28]
	0x0227E6DC LDR X1, [X8 + 0x10]
	0x0227E6E0 BL 0x227B92C
	0x0227E6E4 MOV W22, W0
	0x0227E6E8 B 0x227EB44
	0x0227E6EC MOV X0, X22
	0x0227E6F0 MOV X1, X31
	0x0227E6F4 BL 0x3BF1A28
	0x0227E6F8 LDR X8, [X28]
	0x0227E6FC MOV X22, X0
	0x0227E700 LDR X1, [X8 + 0x8]
	0x0227E704 LDRB W8, [X1 + 0x135]
	0x0227E708 TBNZ X8, 0x0, 0x227E718
	0x0227E70C MOV X0, X1
	0x0227E710 BL 0x1C5C684
	0x0227E714 MOV X1, X0
	0x0227E718 CBZ X22, 0x227EC18
	0x0227E71C LDR X8, [X22]
	0x0227E720 LDR X9, [X1 + 0x40]
	0x0227E724 LDR X8, [X8 + 0x40]
	0x0227E728 CMP X8, X9
	0x0227E72C B.NE 0x227EC1C
	0x0227E730 MOV X0, X22
	0x0227E734 BL 0x1C16E08
	0x0227E738 B 0x227EB40
	0x0227E73C LDR X0, [X26]
	0x0227E740 LDR X8, [X28]
	0x0227E744 LDR W9, [X0 + 0xE0]
	0x0227E748 LDR X24, [X8]
	0x0227E74C CBNZ W9, 0x227E754
	0x0227E750 BL 0x1C16DFC
	0x0227E754 MOV X0, X24
	0x0227E758 MOV X1, X31
	0x0227E75C BL 0x338C698
	0x0227E760 ADRP X8, 0x1E9C000
	0x0227E764 LDR X8, [X8 + 0xD78]
	0x0227E768 MOV X24, X0
	0x0227E76C LDR X0, [X8]
	0x0227E770 MOV X1, X31
	0x0227E774 BL 0x338C698
	0x0227E778 MOV X1, X0
	0x0227E77C MOV X0, X24
	0x0227E780 MOV X2, X31
	0x0227E784 BL 0x3395194
	0x0227E788 TBZ X0, 0x0, 0x227E80C
	0x0227E78C LDR X0, [X23 + 0x10]
	0x0227E790 MOV X1, X31
	0x0227E794 BL 0x3BEF01C
	0x0227E798 MOV X1, X22
	0x0227E79C MOV X2, X20
	0x0227E7A0 MOV X3, X21
	0x0227E7A4 MOV X4, X31
	0x0227E7A8 BL 0x3BE6438
	0x0227E7AC ADRP X8, 0x1E79000
	0x0227E7B0 LDR X8, [X8 + 0x628]
	0x0227E7B4 STURH W0, [X29 - 0x10]
	0x0227E7B8 LDR X8, [X8]
	0x0227E7BC SUB X1, X29, 0x10
	0x0227E7C0 MOV X0, X8
	0x0227E7C4 BL 0x1C16E04
	0x0227E7C8 LDR X8, [X28]
	0x0227E7CC MOV X22, X0
	0x0227E7D0 LDR X1, [X8 + 0x8]
	0x0227E7D4 LDRB W8, [X1 + 0x135]
	0x0227E7D8 TBNZ X8, 0x0, 0x227E7E8
	0x0227E7DC MOV X0, X1
	0x0227E7E0 BL 0x1C5C684
	0x0227E7E4 MOV X1, X0
	0x0227E7E8 CBZ X22, 0x227EC30
	0x0227E7EC LDR X8, [X22]
	0x0227E7F0 LDR X9, [X1 + 0x40]
	0x0227E7F4 LDR X8, [X8 + 0x40]
	0x0227E7F8 CMP X8, X9
	0x0227E7FC B.NE 0x227EC34
	0x0227E800 MOV X0, X22
	0x0227E804 BL 0x1C16E08
	0x0227E808 B 0x227EB40
	0x0227E80C LDR X0, [X26]
	0x0227E810 LDR X8, [X28]
	0x0227E814 LDR W9, [X0 + 0xE0]
	0x0227E818 LDR X24, [X8]
	0x0227E81C CBNZ W9, 0x227E824
	0x0227E820 BL 0x1C16DFC
	0x0227E824 MOV X0, X24
	0x0227E828 MOV X1, X31
	0x0227E82C BL 0x338C698
	0x0227E830 ADRP X8, 0x1E9C000
	0x0227E834 LDR X8, [X8 + 0xD88]
	0x0227E838 MOV X24, X0
	0x0227E83C LDR X0, [X8]
	0x0227E840 MOV X1, X31
	0x0227E844 BL 0x338C698
	0x0227E848 MOV X1, X0
	0x0227E84C MOV X0, X24
	0x0227E850 MOV X2, X31
	0x0227E854 BL 0x3395194
	0x0227E858 TBZ X0, 0x0, 0x227E8DC
	0x0227E85C LDR X0, [X23 + 0x10]
	0x0227E860 MOV X1, X31
	0x0227E864 BL 0x3BEF01C
	0x0227E868 MOV X1, X22
	0x0227E86C MOV X2, X20
	0x0227E870 MOV X3, X21
	0x0227E874 MOV X4, X31
	0x0227E878 BL 0x3BE6638
	0x0227E87C ADRP X8, 0x1E77000
	0x0227E880 LDR X8, [X8 + 0xA60]
	0x0227E884 STUR X0, [X29 - 0x10]
	0x0227E888 LDR X8, [X8]
	0x0227E88C SUB X1, X29, 0x10
	0x0227E890 MOV X0, X8
	0x0227E894 BL 0x1C16E04
	0x0227E898 LDR X8, [X28]
	0x0227E89C MOV X22, X0
	0x0227E8A0 LDR X1, [X8 + 0x8]
	0x0227E8A4 LDRB W8, [X1 + 0x135]
	0x0227E8A8 TBNZ X8, 0x0, 0x227E8B8
	0x0227E8AC MOV X0, X1
	0x0227E8B0 BL 0x1C5C684
	0x0227E8B4 MOV X1, X0
	0x0227E8B8 CBZ X22, 0x227EC3C
	0x0227E8BC LDR X8, [X22]
	0x0227E8C0 LDR X9, [X1 + 0x40]
	0x0227E8C4 LDR X8, [X8 + 0x40]
	0x0227E8C8 CMP X8, X9
	0x0227E8CC B.NE 0x227EC40
	0x0227E8D0 MOV X0, X22
	0x0227E8D4 BL 0x1C16E08
	0x0227E8D8 B 0x227EB40
	0x0227E8DC LDR X0, [X26]
	0x0227E8E0 LDR X8, [X28]
	0x0227E8E4 LDR W9, [X0 + 0xE0]
	0x0227E8E8 LDR X24, [X8]
	0x0227E8EC CBNZ W9, 0x227E8F4
	0x0227E8F0 BL 0x1C16DFC
	0x0227E8F4 MOV X0, X24
	0x0227E8F8 MOV X1, X31
	0x0227E8FC BL 0x338C698
	0x0227E900 ADRP X8, 0x1E9D000
	0x0227E904 LDR X8, [X8 + 0xA80]
	0x0227E908 MOV X24, X0
	0x0227E90C LDR X0, [X8]
	0x0227E910 MOV X1, X31
	0x0227E914 BL 0x338C698
	0x0227E918 MOV X1, X0
	0x0227E91C MOV X0, X24
	0x0227E920 MOV X2, X31
	0x0227E924 BL 0x3395194
	0x0227E928 TBZ X0, 0x0, 0x227E9A8
	0x0227E92C LDR X0, [X23 + 0x10]
	0x0227E930 MOV X1, X31
	0x0227E934 BL 0x3BEF01C
	0x0227E938 MOV X1, X22
	0x0227E93C MOV X2, X20
	0x0227E940 MOV X3, X21
	0x0227E944 MOV X4, X31
	0x0227E948 BL 0x3BE6738
	0x0227E94C ADRP X8, 0x1E75000
	0x0227E950 LDR X8, [X8 + 0xA90]
	0x0227E954 STUR S0, [X29 - 0x10]
	0x0227E958 LDR X0, [X8]
	0x0227E95C SUB X1, X29, 0x10
	0x0227E960 BL 0x1C16E04
	0x0227E964 LDR X8, [X28]
	0x0227E968 MOV X22, X0
	0x0227E96C LDR X1, [X8 + 0x8]
	0x0227E970 LDRB W8, [X1 + 0x135]
	0x0227E974 TBNZ X8, 0x0, 0x227E984
	0x0227E978 MOV X0, X1
	0x0227E97C BL 0x1C5C684
	0x0227E980 MOV X1, X0
	0x0227E984 CBZ X22, 0x227ECBC
	0x0227E988 LDR X8, [X22]
	0x0227E98C LDR X9, [X1 + 0x40]
	0x0227E990 LDR X8, [X8 + 0x40]
	0x0227E994 CMP X8, X9
	0x0227E998 B.NE 0x227ECC0
	0x0227E99C MOV X0, X22
	0x0227E9A0 BL 0x1C16E08
	0x0227E9A4 B 0x227EB40
	0x0227E9A8 LDR X0, [X26]
	0x0227E9AC LDR X8, [X28]
	0x0227E9B0 LDR W9, [X0 + 0xE0]
	0x0227E9B4 LDR X24, [X8]
	0x0227E9B8 CBNZ W9, 0x227E9C0
	0x0227E9BC BL 0x1C16DFC
	0x0227E9C0 MOV X0, X24
	0x0227E9C4 MOV X1, X31
	0x0227E9C8 BL 0x338C698
	0x0227E9CC ADRP X8, 0x1E9D000
	0x0227E9D0 LDR X8, [X8 + 0xA78]
	0x0227E9D4 MOV X24, X0
	0x0227E9D8 LDR X0, [X8]
	0x0227E9DC MOV X1, X31
	0x0227E9E0 BL 0x338C698
	0x0227E9E4 MOV X1, X0
	0x0227E9E8 MOV X0, X24
	0x0227E9EC MOV X2, X31
	0x0227E9F0 BL 0x3395194
	0x0227E9F4 TBZ X0, 0x0, 0x227EA74
	0x0227E9F8 LDR X0, [X23 + 0x10]
	0x0227E9FC MOV X1, X31
	0x0227EA00 BL 0x3BEF01C
	0x0227EA04 MOV X1, X22
	0x0227EA08 MOV X2, X20
	0x0227EA0C MOV X3, X21
	0x0227EA10 MOV X4, X31
	0x0227EA14 BL 0x3BE6844
	0x0227EA18 ADRP X8, 0x1E78000
	0x0227EA1C LDR X8, [X8 + 0x978]
	0x0227EA20 STUR D0, [X29 - 0x10]
	0x0227EA24 LDR X0, [X8]
	0x0227EA28 SUB X1, X29, 0x10
	0x0227EA2C BL 0x1C16E04
	0x0227EA30 LDR X8, [X28]
	0x0227EA34 MOV X22, X0
	0x0227EA38 LDR X1, [X8 + 0x8]
	0x0227EA3C LDRB W8, [X1 + 0x135]
	0x0227EA40 TBNZ X8, 0x0, 0x227EA50
	0x0227EA44 MOV X0, X1
	0x0227EA48 BL 0x1C5C684
	0x0227EA4C MOV X1, X0
	0x0227EA50 CBZ X22, 0x227ECC8
	0x0227EA54 LDR X8, [X22]
	0x0227EA58 LDR X9, [X1 + 0x40]
	0x0227EA5C LDR X8, [X8 + 0x40]
	0x0227EA60 CMP X8, X9
	0x0227EA64 B.NE 0x227ECCC
	0x0227EA68 MOV X0, X22
	0x0227EA6C BL 0x1C16E08
	0x0227EA70 B 0x227EB40
	0x0227EA74 LDR X0, [X26]
	0x0227EA78 LDR X8, [X28]
	0x0227EA7C LDR W9, [X0 + 0xE0]
	0x0227EA80 LDR X24, [X8]
	0x0227EA84 CBNZ W9, 0x227EA8C
	0x0227EA88 BL 0x1C16DFC
	0x0227EA8C MOV X0, X24
	0x0227EA90 MOV X1, X31
	0x0227EA94 BL 0x338C698
	0x0227EA98 ADRP X8, 0x1E9C000
	0x0227EA9C LDR X8, [X8 + 0xD70]
	0x0227EAA0 MOV X24, X0
	0x0227EAA4 LDR X0, [X8]
	0x0227EAA8 MOV X1, X31
	0x0227EAAC BL 0x338C698
	0x0227EAB0 MOV X1, X0
	0x0227EAB4 MOV X0, X24
	0x0227EAB8 MOV X2, X31
	0x0227EABC BL 0x3395194
	0x0227EAC0 TBZ X0, 0x0, 0x227E57C
	0x0227EAC4 LDR X0, [X23 + 0x10]
	0x0227EAC8 MOV X1, X31
	0x0227EACC BL 0x3BEF01C
	0x0227EAD0 MOV X1, X22
	0x0227EAD4 MOV X2, X20
	0x0227EAD8 MOV X3, X21
	0x0227EADC MOV X4, X31
	0x0227EAE0 BL 0x3BE6950
	0x0227EAE4 ADRP X8, 0x1E77000
	0x0227EAE8 LDR X8, [X8 + 0x170]
	0x0227EAEC STURH W0, [X29 - 0x10]
	0x0227EAF0 LDR X8, [X8]
	0x0227EAF4 SUB X1, X29, 0x10
	0x0227EAF8 MOV X0, X8
	0x0227EAFC BL 0x1C16E04
	0x0227EB00 LDR X8, [X28]
	0x0227EB04 MOV X22, X0
	0x0227EB08 LDR X1, [X8 + 0x8]
	0x0227EB0C LDRB W8, [X1 + 0x135]
	0x0227EB10 TBNZ X8, 0x0, 0x227EB20
	0x0227EB14 MOV X0, X1
	0x0227EB18 BL 0x1C5C684
	0x0227EB1C MOV X1, X0
	0x0227EB20 CBZ X22, 0x227ECD4
	0x0227EB24 LDR X8, [X22]
	0x0227EB28 LDR X9, [X1 + 0x40]
	0x0227EB2C LDR X8, [X8 + 0x40]
	0x0227EB30 CMP X8, X9
	0x0227EB34 B.NE 0x227ECD8
	0x0227EB38 MOV X0, X22
	0x0227EB3C BL 0x1C16E08
	0x0227EB40 LDRH W22, [X0]
	0x0227EB44 MOV X0, X19
	0x0227EB48 MOV X1, X20
	0x0227EB4C MOV X2, X21
	0x0227EB50 MOV X3, X31
	0x0227EB54 BL 0x3BE49F8
	0x0227EB58 LDUR X8, [X29 - 0x18]
	0x0227EB5C LDR X8, [X8 + 0x28]
	0x0227EB60 LDUR X9, [X29 - 0x8]
	0x0227EB64 CMP X8, X9
	0x0227EB68 B.NE 0x227ECE0
	0x0227EB6C MOV W0, W22
	0x0227EB70 ADD X31, X29, 0x0
	0x0227EB74 LDP X20, X19, [X31 + 0x50]
	0x0227EB78 LDP X22, X21, [X31 + 0x40]
	0x0227EB7C LDP X24, X23, [X31 + 0x30]
	0x0227EB80 LDP X26, X25, [X31 + 0x20]
	0x0227EB84 LDP X28, X27, [X31 + 0x10]
	0x0227EB88 LDP X29, X30, [X31], #0x60
	0x0227EB8C RET
	0x0227EB90 BL 0x1C16F20
	0x0227EB94 BL 0x1C16F20
	0x0227EB98 MOV X0, X22
	0x0227EB9C BL 0x1C171E0
	0x0227EBA0 MOV X0, X22
	0x0227EBA4 BL 0x1C171E0
	0x0227EBA8 BL 0x1C16F20
	0x0227EBAC MOV X0, X22
	0x0227EBB0 BL 0x1C171E0
	0x0227EBB4 BL 0x1C16F20
	0x0227EBB8 MOV X0, X22
	0x0227EBBC BL 0x1C171E0
	0x0227EBC0 LDR X8, [X28]
	0x0227EBC4 LDR X22, [X8]
	0x0227EBC8 ADRP X0, 0x1E75000
	0x0227EBCC LDR X0, [X0 + 0x6C0]
	0x0227EBD0 BL 0x1C16D08
	0x0227EBD4 LDR W8, [X0 + 0xE0]
	0x0227EBD8 CBNZ W8, 0x227EBE0
	0x0227EBDC BL 0x1C16DFC
	0x0227EBE0 MOV X0, X22
	0x0227EBE4 MOV X1, X31
	0x0227EBE8 BL 0x338C698
	0x0227EBEC MOV X23, X0
	0x0227EBF0 CBNZ X0, 0x227EC48
	0x0227EBF4 ADRP X0, 0x1E9E000
	0x0227EBF8 LDR X0, [X0 + 0x6C8]
	0x0227EBFC BL 0x1C16D08
	0x0227EC00 MOV X22, X0
	0x0227EC04 MOV X23, X31
	0x0227EC08 B 0x227EC6C
	0x0227EC0C BL 0x1C16F20
	0x0227EC10 MOV X0, X22
	0x0227EC14 BL 0x1C171E0
	0x0227EC18 BL 0x1C16F20
	0x0227EC1C MOV X0, X22
	0x0227EC20 BL 0x1C171E0
	0x0227EC24 BL 0x1C16F20
	0x0227EC28 MOV X0, X22
	0x0227EC2C BL 0x1C171E0
	0x0227EC30 BL 0x1C16F20
	0x0227EC34 MOV X0, X22
	0x0227EC38 BL 0x1C171E0
	0x0227EC3C BL 0x1C16F20
	0x0227EC40 MOV X0, X22
	0x0227EC44 BL 0x1C171E0
	0x0227EC48 ADRP X0, 0x1E9E000
	0x0227EC4C LDR X0, [X0 + 0x6C8]
	0x0227EC50 BL 0x1C16D08
	0x0227EC54 LDR X8, [X23]
	0x0227EC58 MOV X22, X0
	0x0227EC5C LDP X9, X1, [X8 + 0x168]
	0x0227EC60 MOV X0, X23
	0x0227EC64 BLR X9
	0x0227EC68 MOV X23, X0
	0x0227EC6C ADRP X0, 0x1E7D000
	0x0227EC70 LDR X0, [X0 + 0x9B0]
	0x0227EC74 BL 0x1C16D08
	0x0227EC78 MOV X2, X0
	0x0227EC7C MOV X0, X22
	0x0227EC80 MOV X1, X23
	0x0227EC84 MOV X3, X31
	0x0227EC88 BL 0x32274B8
	0x0227EC8C MOV X22, X0
	0x0227EC90 ADRP X0, 0x1E75000
	0x0227EC94 LDR X0, [X0 + 0x7D0]
	0x0227EC98 BL 0x1C16D08
	0x0227EC9C BL 0x1C16F10
	0x0227ECA0 MOV X23, X0
	0x0227ECA4 MOV X1, X22
	0x0227ECA8 MOV X2, X31
	0x0227ECAC BL 0x33B2C70
	0x0227ECB0 MOV X0, X23
	0x0227ECB4 MOV X1, X24
	0x0227ECB8 BL 0x1C16DEC
	0x0227ECBC BL 0x1C16F20
	0x0227ECC0 MOV X0, X22
	0x0227ECC4 BL 0x1C171E0
	0x0227ECC8 BL 0x1C16F20
	0x0227ECCC MOV X0, X22
	0x0227ECD0 BL 0x1C171E0
	0x0227ECD4 BL 0x1C16F20
	0x0227ECD8 MOV X0, X22
	0x0227ECDC BL 0x1C171E0
	0x0227ECE0 BL 0x3EB1B20
	0x0227ECE4 B 0x227EE7C
	0x0227ECE8 B 0x227EE7C
	0x0227ECEC B 0x227EE7C
	0x0227ECF0 B 0x227EE7C
	0x0227ECF4 B 0x227EE7C
	0x0227ECF8 MOV X22, X0
	0x0227ECFC B 0x227EE80
	0x0227ED00 B 0x227EE7C
	0x0227ED04 B 0x227EE7C
	0x0227ED08 B 0x227EE7C
	0x0227ED0C B 0x227EE7C
	0x0227ED10 B 0x227EE7C
	0x0227ED14 B 0x227EE7C
	0x0227ED18 B 0x227EE7C
	0x0227ED1C B 0x227EE7C
	0x0227ED20 B 0x227EE7C
	0x0227ED24 B 0x227EE7C
	0x0227ED28 B 0x227EE7C
	0x0227ED2C B 0x227EE7C
	0x0227ED30 B 0x227EE7C
	0x0227ED34 B 0x227EE7C
	0x0227ED38 B 0x227EE7C
	0x0227ED3C B 0x227EE7C
	0x0227ED40 B 0x227EE7C
	0x0227ED44 B 0x227EE7C
	0x0227ED48 B 0x227EE7C
	0x0227ED4C B 0x227EE7C
	0x0227ED50 B 0x227EE7C
	0x0227ED54 B 0x227EE7C
	0x0227ED58 B 0x227EE7C
	0x0227ED5C B 0x227EE7C
	0x0227ED60 B 0x227EE7C
	0x0227ED64 B 0x227EE7C
	0x0227ED68 B 0x227EE7C
	0x0227ED6C B 0x227EE7C
	0x0227ED70 B 0x227EE7C
	0x0227ED74 B 0x227EE7C
	0x0227ED78 B 0x227EE7C
	0x0227ED7C B 0x227EE7C
	0x0227ED80 B 0x227EE7C
	0x0227ED84 B 0x227EE7C
	0x0227ED88 B 0x227EE7C
	0x0227ED8C B 0x227EE7C
	0x0227ED90 B 0x227EE7C
	0x0227ED94 B 0x227EE7C
	0x0227ED98 B 0x227EE7C
	0x0227ED9C B 0x227EE7C
	0x0227EDA0 B 0x227EE7C
	0x0227EDA4 B 0x227EE7C
	0x0227EDA8 B 0x227EE7C
	0x0227EDAC B 0x227EE7C
	0x0227EDB0 B 0x227EE7C
	0x0227EDB4 B 0x227EE7C
	0x0227EDB8 B 0x227EE7C
	0x0227EDBC B 0x227EE7C
	0x0227EDC0 B 0x227EE7C
	0x0227EDC4 B 0x227EE7C
	0x0227EDC8 B 0x227EE7C
	0x0227EDCC B 0x227EE7C
	0x0227EDD0 B 0x227EE7C
	0x0227EDD4 B 0x227EE7C
	0x0227EDD8 B 0x227EE7C
	0x0227EDDC B 0x227EE7C
	0x0227EDE0 B 0x227EE7C
	0x0227EDE4 B 0x227EE7C
	0x0227EDE8 B 0x227EE7C
	0x0227EDEC B 0x227EE7C
	0x0227EDF0 B 0x227EE7C
	0x0227EDF4 B 0x227EE7C
	0x0227EDF8 B 0x227EE7C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-24], X8
	017 Move X8, [X8+40]
	018 Move X28, X3
	019 Move X24, X3
	020 Move X19, X2
	021 Move [X29-8], X8
	022 Add X28, X28, 56
	023 Move X8, [X28]
	024 Move X22, X1
	025 Move X23, X0
	026 Compare X8, 0
	027 JumpIfNotEqual {112}
	028 Move X0, 0x1EA0000
	029 Move X0, [X0+1680]
	030 Call 0x1C17CF4
	031 Move X0, 0x1EA0000
	032 Move X0, [X0+1688]
	033 Call 0x1C17CF4
	034 Move X0, 0x1EA0000
	035 Move X0, [X0+1696]
	036 Call 0x1C17CF4
	037 Move X0, 0x1EA0000
	038 Move X0, [X0+584]
	039 Call 0x1C17CF4
	040 Move X0, 0x1E77000
	041 Move X0, [X0+2904]
	042 Call 0x1C17CF4
	043 Move X0, 0x1E9E000
	044 Move X0, [X0+3432]
	045 Call 0x1C17CF4
	046 Move X0, 0x1E78000
	047 Move X0, [X0+2520]
	048 Call 0x1C17CF4
	049 Move X0, 0x1E9E000
	050 Move X0, [X0+3440]
	051 Call 0x1C17CF4
	052 Move X0, 0x1E79000
	053 Move X0, [X0+368]
	054 Call 0x1C17CF4
	055 Move X0, 0x1E77000
	056 Move X0, [X0+2600]
	057 Call 0x1C17CF4
	058 Move X0, 0x1E9F000
	059 Move X0, [X0+2680]
	060 Call 0x1C17CF4
	061 Move X0, 0x1E7A000
	062 Move X0, [X0+2424]
	063 Call 0x1C17CF4
	064 Move X0, 0x1E9E000
	065 Move X0, [X0+3448]
	066 Call 0x1C17CF4
	067 Move X0, 0x1E7B000
	068 Move X0, [X0+1576]
	069 Call 0x1C17CF4
	070 Move X0, 0x1E9E000
	071 Move X0, [X0+3456]
	072 Call 0x1C17CF4
	073 Move X0, 0x1E77000
	074 Move X0, [X0+1880]
	075 Call 0x1C17CF4
	076 Move X0, 0x1E9E000
	077 Move X0, [X0+3464]
	078 Call 0x1C17CF4
	079 Move X0, 0x1E79000
	080 Move X0, [X0+2656]
	081 Call 0x1C17CF4
	082 Move X0, 0x1EA0000
	083 Move X0, [X0+1704]
	084 Call 0x1C17CF4
	085 Move X0, 0x1E9E000
	086 Move X0, [X0+3472]
	087 Call 0x1C17CF4
	088 Move X0, 0x1EA0000
	089 Move X0, [X0+1712]
	090 Call 0x1C17CF4
	091 Move X0, 0x1E9F000
	092 Move X0, [X0+2688]
	093 Call 0x1C17CF4
	094 Move X0, 0x1E77000
	095 Move X0, [X0+2704]
	096 Call 0x1C17CF4
	097 Move X0, 0x1EA0000
	098 Move X0, [X0+1720]
	099 Call 0x1C17CF4
	100 Move X0, 0x1E9F000
	101 Move X0, [X0+2912]
	102 Call 0x1C17CF4
	103 Move X0, 0x1E77000
	104 Move X0, [X0+1728]
	105 Call 0x1C17CF4
	106 Move X0, 0x1EA0000
	107 Move X0, [X0+1728]
	108 Call 0x1C17CF4
	109 Move X8, [X24+56]
	110 Compare X8, 0
	111 JumpIfEqual {138}
	112 Compare X19, 0
	113 JumpIfEqual {142}
	114 Move X21, [X19+24]
	115 Compare X21, 0
	116 JumpIfEqual {143}
	117 Move X8, X21
	118 ShiftRight X8, 32
	119 And X8, X8, 0x7FFFFFFF
	120 NotImplemented "Instruction SBFM not yet implemented."
	121 Compare X8, 0
	122 JumpIfEqual {128}
	123 Add X9, X2, 15
	124 Add X8, X31, 0
	125 And X9, X9, 0xFFFFFFFF
	126 Subtract X20, X8, X9
	127 Add X31, X20, 0
	128 Move X20, X31
	129 Move X0, X20
	130 Move W1, W31
	131 Call 0x3EB2B10
	132 Move TEMP, X21
	133 And TEMP, TEMP, -2147483648
	134 Compare TEMP, -2147483648
	135 JumpIfNotEqual {144}
	136 Move X0, X31
	137 Call ThrowHelper.ThrowArgumentOutOfRangeException
	138 Move X0, X24
	139 Call 0x1C5D6E0
	140 Compare X19, 0
	141 JumpIfNotEqual {114}
	142 Move X21, X31
	143 Move X20, X31
	144 And X21, X21, 0
	145 Move X0, X19
	146 Move X1, X20
	147 Move X2, X21
	148 Move X3, X31
	149 Call AndroidJNIHelper.CreateJNIArgArray, X0, X1
	150 Move X26, 0x1E77000
	151 Move X26, [X26+1728]
	152 Move X8, [X28]
	153 Move X0, [X26]
	154 Move X25, [X8]
	155 Move W9, [X0+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, X25
	160 Move X1, X31
	161 Call Type.GetTypeFromHandle, X0
	162 Move X27, 0x1EA0000
	163 Move X27, [X27+1696]
	164 Move X25, X0
	165 Move X0, [X27]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X25
	171 Move X1, X31
	172 Call AndroidReflection.IsPrimitive, X0
	173 Move W8, W0
	174 Move X9, [X28]
	175 Move X0, [X26]
	176 Move X25, [X9]
	177 Move W9, [X0+224]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {236}
	182 Compare W9, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X25
	186 Move X1, X31
	187 Call Type.GetTypeFromHandle, X0
	188 Move X8, 0x1E9D000
	189 Move X8, [X8+3456]
	190 Move X24, X0
	191 Move X0, [X8]
	192 Move X1, X31
	193 Call Type.GetTypeFromHandle, X0
	194 Move X1, X0
	195 Move X0, X24
	196 Move X2, X31
	197 Call Type.op_Equality, X0, X1
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {283}
	202 Move X0, [X23+16]
	203 Move X1, X31
	204 Call GlobalJavaObjectRef.op_Implicit, X0
	205 Move X1, X22
	206 Move X2, X20
	207 Move X3, X21
	208 Move X4, X31
	209 Call AndroidJNISafe.CallIntMethod, X0, X1, X2
	210 Move X8, 0x1E76000
	211 Move X8, [X8+1880]
	212 Move [X29-16], W0
	213 Move X8, [X8]
	214 Subtract X1, X29, 16
	215 Move X0, X8
	216 Call 0x1C17E04
	217 Move X8, [X28]
	218 Move X22, X0
	219 Move X1, [X8+8]
	220 Move W8, [X1+309]
	221 Move TEMP, X8
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {228}
	225 Move X0, X1
	226 Call 0x1C5D684
	227 Move X1, X0
	228 Compare X22, 0
	229 JumpIfEqual {953}
	230 Move X8, [X22]
	231 Move X9, [X1+64]
	232 Move X8, [X8+64]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X0, X22
	235 Call 0x1C17E08
	236 Compare W9, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X25
	240 Move X1, X31
	241 Call Type.GetTypeFromHandle, X0
	242 Move X8, 0x1E9E000
	243 Move X8, [X8+2912]
	244 Move X25, X0
	245 Move X0, [X8]
	246 Move X1, X31
	247 Call Type.GetTypeFromHandle, X0
	248 Move X1, X0
	249 Move X0, X25
	250 Move X2, X31
	251 Call Type.op_Equality, X0, X1
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {342}
	256 Move X0, [X23+16]
	257 Move X1, X31
	258 Call GlobalJavaObjectRef.op_Implicit, X0
	259 Move X1, X22
	260 Move X2, X20
	261 Move X3, X21
	262 Move X4, X31
	263 Call AndroidJNISafe.CallStringMethod, X0, X1, X2
	264 Move X8, [X28]
	265 Move X22, X0
	266 Move X1, [X8+8]
	267 Move W8, [X1+309]
	268 Move TEMP, X8
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {275}
	272 Move X0, X1
	273 Call 0x1C5D684
	274 Move X1, X0
	275 Compare X22, 0
	276 JumpIfEqual {952}
	277 Move X8, [X22]
	278 Move X9, [X1+64]
	279 Move X8, [X8+64]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, X22
	282 Call 0x1C17E08
	283 Move X0, [X26]
	284 Move X8, [X28]
	285 Move W9, [X0+224]
	286 Move X24, [X8]
	287 Compare W9, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X0, X24
	291 Move X1, X31
	292 Call Type.GetTypeFromHandle, X0
	293 Move X8, 0x1E9F000
	294 Move X8, [X8+584]
	295 Move X24, X0
	296 Move X0, [X8]
	297 Move X1, X31
	298 Call Type.GetTypeFromHandle, X0
	299 Move X1, X0
	300 Move X0, X24
	301 Move X2, X31
	302 Call Type.op_Equality, X0, X1
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {404}
	307 Move X0, [X23+16]
	308 Move X1, X31
	309 Call GlobalJavaObjectRef.op_Implicit, X0
	310 Move X1, X22
	311 Move X2, X20
	312 Move X3, X21
	313 Move X4, X31
	314 Call AndroidJNISafe.CallBooleanMethod, X0, X1, X2
	315 Move X8, 0x1E76000
	316 Move X8, [X8+2904]
	317 And W9, W0, 1
	318 NotImplemented "Instruction STURB not yet implemented."
	319 Move X8, [X8]
	320 Subtract X1, X29, 16
	321 Move X0, X8
	322 Call 0x1C17E04
	323 Move X8, [X28]
	324 Move X22, X0
	325 Move X1, [X8+8]
	326 Move W8, [X1+309]
	327 Move TEMP, X8
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {334}
	331 Move X0, X1
	332 Call 0x1C5D684
	333 Move X1, X0
	334 Compare X22, 0
	335 JumpIfEqual {958}
	336 Move X8, [X22]
	337 Move X9, [X1+64]
	338 Move X8, [X8+64]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X0, X22
	341 Call 0x1C17E08
	342 Move X0, [X26]
	343 Move X8, [X28]
	344 Move W9, [X0+224]
	345 Move X25, [X8]
	346 Compare W9, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, X25
	350 Move X1, X31
	351 Call Type.GetTypeFromHandle, X0
	352 Move X8, 0x1E9F000
	353 Move X8, [X8+1680]
	354 Move X25, X0
	355 Move X0, [X8]
	356 Move X1, X31
	357 Call Type.GetTypeFromHandle, X0
	358 Move X1, X0
	359 Move X0, X25
	360 Move X2, X31
	361 Call Type.op_Equality, X0, X1
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {474}
	366 Move X0, [X23+16]
	367 Move X1, X31
	368 Call GlobalJavaObjectRef.op_Implicit, X0
	369 Move X1, X22
	370 Move X2, X20
	371 Move X3, X21
	372 Move X4, X31
	373 Call AndroidJNISafe.CallObjectMethod, X0, X1, X2
	374 Move X22, X0
	375 Move X1, X31
	376 Move X2, X31
	377 Call IntPtr.op_Equality, X0, X1
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfEqual {514}
	382 Move X0, X22
	383 Move X1, X31
	384 Call AndroidJavaObject.AndroidJavaClassDeleteLocalRef, X0
	385 Move X8, [X28]
	386 Move X22, X0
	387 Move X1, [X8+8]
	388 Move W8, [X1+309]
	389 Move TEMP, X8
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfEqual {396}
	393 Move X0, X1
	394 Call 0x1C5D684
	395 Move X1, X0
	396 Compare X22, 0
	397 JumpIfEqual {961}
	398 Move X8, [X22]
	399 Move X9, [X1+64]
	400 Move X8, [X8+64]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move X0, X22
	403 Call 0x1C17E08
	404 Move X0, [X26]
	405 Move X8, [X28]
	406 Move W9, [X0+224]
	407 Move X24, [X8]
	408 Compare W9, 0
	409 JumpIfNotEqual {411}
	410 Call 0x1C17DFC
	411 Move X0, X24
	412 Move X1, X31
	413 Call Type.GetTypeFromHandle, X0
	414 Move X8, 0x1E9D000
	415 Move X8, [X8+3432]
	416 Move X24, X0
	417 Move X0, [X8]
	418 Move X1, X31
	419 Call Type.GetTypeFromHandle, X0
	420 Move X1, X0
	421 Move X0, X24
	422 Move X2, X31
	423 Call Type.op_Equality, X0, X1
	424 Move TEMP, X0
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfNotEqual {515}
	428 Move X8, 0x1E76000
	429 Move X8, [X8+2600]
	430 Move X0, [X8]
	431 Move W8, [X0+224]
	432 Compare W8, 0
	433 JumpIfNotEqual {435}
	434 Call 0x1C17DFC
	435 Move X8, 0x1E9F000
	436 Move X8, [X8+1728]
	437 Move X0, [X8]
	438 Move X1, X31
	439 Call Debug.LogWarning, X0
	440 Move X0, [X23+16]
	441 Move X1, X31
	442 Call GlobalJavaObjectRef.op_Implicit, X0
	443 Move X1, X22
	444 Move X2, X20
	445 Move X3, X21
	446 Move X4, X31
	447 Call AndroidJNISafe.CallSByteMethod, X0, X1, X2
	448 Move X8, 0x1E77000
	449 Move X8, [X8+2520]
	450 NotImplemented "Instruction STURB not yet implemented."
	451 Move X8, [X8]
	452 Subtract X1, X29, 16
	453 Move X0, X8
	454 Call 0x1C17E04
	455 Move X8, [X28]
	456 Move X22, X0
	457 Move X1, [X8+8]
	458 Move W8, [X1+309]
	459 Move TEMP, X8
	460 And TEMP, TEMP, 1
	461 Compare TEMP, 1
	462 JumpIfEqual {466}
	463 Move X0, X1
	464 Call 0x1C5D684
	465 Move X1, X0
	466 Compare X22, 0
	467 JumpIfEqual {984}
	468 Move X8, [X22]
	469 Move X9, [X1+64]
	470 Move X8, [X8+64]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X0, X22
	473 Call 0x1C17E08
	474 Move X0, [X26]
	475 Move X8, [X28]
	476 Move W9, [X0+224]
	477 Move X25, [X8]
	478 Compare W9, 0
	479 JumpIfNotEqual {481}
	480 Call 0x1C17DFC
	481 Move X0, X25
	482 Move X1, X31
	483 Call Type.GetTypeFromHandle, X0
	484 Move X8, 0x1E9F000
	485 Move X8, [X8+1688]
	486 Move X25, X0
	487 Move X0, [X8]
	488 Move X1, X31
	489 Call Type.GetTypeFromHandle, X0
	490 Move X1, X0
	491 Move X0, X25
	492 Move X2, X31
	493 Call Type.op_Equality, X0, X1
	494 Move TEMP, X0
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {573}
	498 Move X0, [X23+16]
	499 Move X1, X31
	500 Call GlobalJavaObjectRef.op_Implicit, X0
	501 Move X1, X22
	502 Move X2, X20
	503 Move X3, X21
	504 Move X4, X31
	505 Call AndroidJNISafe.CallObjectMethod, X0, X1, X2
	506 Move X22, X0
	507 Move X1, X31
	508 Move X2, X31
	509 Call IntPtr.op_Equality, X0, X1
	510 Move TEMP, X0
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfNotEqual {615}
	514 Move W22, W31
	515 Move X0, [X26]
	516 Move X8, [X28]
	517 Move W9, [X0+224]
	518 Move X24, [X8]
	519 Compare W9, 0
	520 JumpIfNotEqual {522}
	521 Call 0x1C17DFC
	522 Move X0, X24
	523 Move X1, X31
	524 Call Type.GetTypeFromHandle, X0
	525 Move X8, 0x1E9D000
	526 Move X8, [X8+3472]
	527 Move X24, X0
	528 Move X0, [X8]
	529 Move X1, X31
	530 Call Type.GetTypeFromHandle, X0
	531 Move X1, X0
	532 Move X0, X24
	533 Move X2, X31
	534 Call Type.op_Equality, X0, X1
	535 Move TEMP, X0
	536 And TEMP, TEMP, 1
	537 Compare TEMP, 1
	538 JumpIfNotEqual {637}
	539 Move X0, [X23+16]
	540 Move X1, X31
	541 Call GlobalJavaObjectRef.op_Implicit, X0
	542 Move X1, X22
	543 Move X2, X20
	544 Move X3, X21
	545 Move X4, X31
	546 Call AndroidJNISafe.CallSByteMethod, X0, X1, X2
	547 Move X8, 0x1E9F000
	548 Move X8, [X8+1712]
	549 NotImplemented "Instruction STURB not yet implemented."
	550 Move X8, [X8]
	551 Subtract X1, X29, 16
	552 Move X0, X8
	553 Call 0x1C17E04
	554 Move X8, [X28]
	555 Move X22, X0
	556 Move X1, [X8+8]
	557 Move W8, [X1+309]
	558 Move TEMP, X8
	559 And TEMP, TEMP, 1
	560 Compare TEMP, 1
	561 JumpIfEqual {565}
	562 Move X0, X1
	563 Call 0x1C5D684
	564 Move X1, X0
	565 Compare X22, 0
	566 JumpIfEqual {990}
	567 Move X8, [X22]
	568 Move X9, [X1+64]
	569 Move X8, [X8+64]
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Move X0, X22
	572 Call 0x1C17E08
	573 Move X8, 0x1E9F000
	574 Move X0, [X26]
	575 Move X8, [X8+1704]
	576 Move W9, [X0+224]
	577 Move X25, [X8]
	578 Compare W9, 0
	579 JumpIfNotEqual {581}
	580 Call 0x1C17DFC
	581 Move X0, X25
	582 Move X1, X31
	583 Call Type.GetTypeFromHandle, X0
	584 Move X8, [X28]
	585 Move X25, X0
	586 Move X0, [X8]
	587 Move X1, X31
	588 Call Type.GetTypeFromHandle, X0
	589 Move X26, X0
	590 Move X0, [X27]
	591 Move W8, [X0+224]
	592 Compare W8, 0
	593 JumpIfNotEqual {595}
	594 Call 0x1C17DFC
	595 Move X0, X25
	596 Move X1, X26
	597 Move X2, X31
	598 Call AndroidReflection.IsAssignableFrom, X0, X1
	599 Move TEMP, X0
	600 And TEMP, TEMP, 1
	601 Compare TEMP, 1
	602 JumpIfNotEqual {964}
	603 Move X0, [X23+16]
	604 Move X1, X31
	605 Call GlobalJavaObjectRef.op_Implicit, X0
	606 Move X1, X22
	607 Move X2, X20
	608 Move X3, X21
	609 Move X4, X31
	610 Call AndroidJNISafe.CallObjectMethod, X0, X1, X2
	611 Move X8, [X28]
	612 Move X1, [X8+16]
	613 Call 0x227C7E4, X0
	614 Move W22, W0
	615 Move X0, X22
	616 Move X1, X31
	617 Call AndroidJavaObject.AndroidJavaObjectDeleteLocalRef, X0
	618 Move X8, [X28]
	619 Move X22, X0
	620 Move X1, [X8+8]
	621 Move W8, [X1+309]
	622 Move TEMP, X8
	623 And TEMP, TEMP, 1
	624 Compare TEMP, 1
	625 JumpIfEqual {629}
	626 Move X0, X1
	627 Call 0x1C5D684
	628 Move X1, X0
	629 Compare X22, 0
	630 JumpIfEqual {987}
	631 Move X8, [X22]
	632 Move X9, [X1+64]
	633 Move X8, [X8+64]
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Move X0, X22
	636 Call 0x1C17E08
	637 Move X0, [X26]
	638 Move X8, [X28]
	639 Move W9, [X0+224]
	640 Move X24, [X8]
	641 Compare W9, 0
	642 JumpIfNotEqual {644}
	643 Call 0x1C17DFC
	644 Move X0, X24
	645 Move X1, X31
	646 Call Type.GetTypeFromHandle, X0
	647 Move X8, 0x1E9D000
	648 Move X8, [X8+3448]
	649 Move X24, X0
	650 Move X0, [X8]
	651 Move X1, X31
	652 Call Type.GetTypeFromHandle, X0
	653 Move X1, X0
	654 Move X0, X24
	655 Move X2, X31
	656 Call Type.op_Equality, X0, X1
	657 Move TEMP, X0
	658 And TEMP, TEMP, 1
	659 Compare TEMP, 1
	660 JumpIfNotEqual {695}
	661 Move X0, [X23+16]
	662 Move X1, X31
	663 Call GlobalJavaObjectRef.op_Implicit, X0
	664 Move X1, X22
	665 Move X2, X20
	666 Move X3, X21
	667 Move X4, X31
	668 Call AndroidJNISafe.CallShortMethod, X0, X1, X2
	669 Move X8, 0x1E7A000
	670 Move X8, [X8+1576]
	671 NotImplemented "Instruction STURH not yet implemented."
	672 Move X8, [X8]
	673 Subtract X1, X29, 16
	674 Move X0, X8
	675 Call 0x1C17E04
	676 Move X8, [X28]
	677 Move X22, X0
	678 Move X1, [X8+8]
	679 Move W8, [X1+309]
	680 Move TEMP, X8
	681 And TEMP, TEMP, 1
	682 Compare TEMP, 1
	683 JumpIfEqual {687}
	684 Move X0, X1
	685 Call 0x1C5D684
	686 Move X1, X0
	687 Compare X22, 0
	688 JumpIfEqual {993}
	689 Move X8, [X22]
	690 Move X9, [X1+64]
	691 Move X8, [X8+64]
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Move X0, X22
	694 Call 0x1C17E08
	695 Move X0, [X26]
	696 Move X8, [X28]
	697 Move W9, [X0+224]
	698 Move X24, [X8]
	699 Compare W9, 0
	700 JumpIfNotEqual {702}
	701 Call 0x1C17DFC
	702 Move X0, X24
	703 Move X1, X31
	704 Call Type.GetTypeFromHandle, X0
	705 Move X8, 0x1E9D000
	706 Move X8, [X8+3464]
	707 Move X24, X0
	708 Move X0, [X8]
	709 Move X1, X31
	710 Call Type.GetTypeFromHandle, X0
	711 Move X1, X0
	712 Move X0, X24
	713 Move X2, X31
	714 Call Type.op_Equality, X0, X1
	715 Move TEMP, X0
	716 And TEMP, TEMP, 1
	717 Compare TEMP, 1
	718 JumpIfNotEqual {753}
	719 Move X0, [X23+16]
	720 Move X1, X31
	721 Call GlobalJavaObjectRef.op_Implicit, X0
	722 Move X1, X22
	723 Move X2, X20
	724 Move X3, X21
	725 Move X4, X31
	726 Call AndroidJNISafe.CallLongMethod, X0, X1, X2
	727 Move X8, 0x1E78000
	728 Move X8, [X8+2656]
	729 Move [X29-16], X0
	730 Move X8, [X8]
	731 Subtract X1, X29, 16
	732 Move X0, X8
	733 Call 0x1C17E04
	734 Move X8, [X28]
	735 Move X22, X0
	736 Move X1, [X8+8]
	737 Move W8, [X1+309]
	738 Move TEMP, X8
	739 And TEMP, TEMP, 1
	740 Compare TEMP, 1
	741 JumpIfEqual {745}
	742 Move X0, X1
	743 Call 0x1C5D684
	744 Move X1, X0
	745 Compare X22, 0
	746 JumpIfEqual {996}
	747 Move X8, [X22]
	748 Move X9, [X1+64]
	749 Move X8, [X8+64]
	750 NotImplemented "Instruction CMP not yet implemented."
	751 Move X0, X22
	752 Call 0x1C17E08
	753 Move X0, [X26]
	754 Move X8, [X28]
	755 Move W9, [X0+224]
	756 Move X24, [X8]
	757 Compare W9, 0
	758 JumpIfNotEqual {760}
	759 Call 0x1C17DFC
	760 Move X0, X24
	761 Move X1, X31
	762 Call Type.GetTypeFromHandle, X0
	763 Move X8, 0x1E9E000
	764 Move X8, [X8+2688]
	765 Move X24, X0
	766 Move X0, [X8]
	767 Move X1, X31
	768 Call Type.GetTypeFromHandle, X0
	769 Move X1, X0
	770 Move X0, X24
	771 Move X2, X31
	772 Call Type.op_Equality, X0, X1
	773 Move TEMP, X0
	774 And TEMP, TEMP, 1
	775 Compare TEMP, 1
	776 JumpIfNotEqual {810}
	777 Move X0, [X23+16]
	778 Move X1, X31
	779 Call GlobalJavaObjectRef.op_Implicit, X0
	780 Move X1, X22
	781 Move X2, X20
	782 Move X3, X21
	783 Move X4, X31
	784 Call AndroidJNISafe.CallFloatMethod, X0, X1, X2
	785 Move X8, 0x1E76000
	786 Move X8, [X8+2704]
	787 Move [X29-16], S0
	788 Move X0, [X8]
	789 Subtract X1, X29, 16
	790 Call 0x1C17E04
	791 Move X8, [X28]
	792 Move X22, X0
	793 Move X1, [X8+8]
	794 Move W8, [X1+309]
	795 Move TEMP, X8
	796 And TEMP, TEMP, 1
	797 Compare TEMP, 1
	798 JumpIfEqual {802}
	799 Move X0, X1
	800 Call 0x1C5D684
	801 Move X1, X0
	802 Compare X22, 0
	803 JumpIfEqual {1029}
	804 Move X8, [X22]
	805 Move X9, [X1+64]
	806 Move X8, [X8+64]
	807 NotImplemented "Instruction CMP not yet implemented."
	808 Move X0, X22
	809 Call 0x1C17E08
	810 Move X0, [X26]
	811 Move X8, [X28]
	812 Move W9, [X0+224]
	813 Move X24, [X8]
	814 Compare W9, 0
	815 JumpIfNotEqual {817}
	816 Call 0x1C17DFC
	817 Move X0, X24
	818 Move X1, X31
	819 Call Type.GetTypeFromHandle, X0
	820 Move X8, 0x1E9E000
	821 Move X8, [X8+2680]
	822 Move X24, X0
	823 Move X0, [X8]
	824 Move X1, X31
	825 Call Type.GetTypeFromHandle, X0
	826 Move X1, X0
	827 Move X0, X24
	828 Move X2, X31
	829 Call Type.op_Equality, X0, X1
	830 Move TEMP, X0
	831 And TEMP, TEMP, 1
	832 Compare TEMP, 1
	833 JumpIfNotEqual {867}
	834 Move X0, [X23+16]
	835 Move X1, X31
	836 Call GlobalJavaObjectRef.op_Implicit, X0
	837 Move X1, X22
	838 Move X2, X20
	839 Move X3, X21
	840 Move X4, X31
	841 Call AndroidJNISafe.CallDoubleMethod, X0, X1, X2
	842 Move X8, 0x1E79000
	843 Move X8, [X8+2424]
	844 Move [X29-16], D0
	845 Move X0, [X8]
	846 Subtract X1, X29, 16
	847 Call 0x1C17E04
	848 Move X8, [X28]
	849 Move X22, X0
	850 Move X1, [X8+8]
	851 Move W8, [X1+309]
	852 Move TEMP, X8
	853 And TEMP, TEMP, 1
	854 Compare TEMP, 1
	855 JumpIfEqual {859}
	856 Move X0, X1
	857 Call 0x1C5D684
	858 Move X1, X0
	859 Compare X22, 0
	860 JumpIfEqual {1032}
	861 Move X8, [X22]
	862 Move X9, [X1+64]
	863 Move X8, [X8+64]
	864 NotImplemented "Instruction CMP not yet implemented."
	865 Move X0, X22
	866 Call 0x1C17E08
	867 Move X0, [X26]
	868 Move X8, [X28]
	869 Move W9, [X0+224]
	870 Move X24, [X8]
	871 Compare W9, 0
	872 JumpIfNotEqual {874}
	873 Call 0x1C17DFC
	874 Move X0, X24
	875 Move X1, X31
	876 Call Type.GetTypeFromHandle, X0
	877 Move X8, 0x1E9D000
	878 Move X8, [X8+3440]
	879 Move X24, X0
	880 Move X0, [X8]
	881 Move X1, X31
	882 Call Type.GetTypeFromHandle, X0
	883 Move X1, X0
	884 Move X0, X24
	885 Move X2, X31
	886 Call Type.op_Equality, X0, X1
	887 Move TEMP, X0
	888 And TEMP, TEMP, 1
	889 Compare TEMP, 1
	890 JumpIfNotEqual {514}
	891 Move X0, [X23+16]
	892 Move X1, X31
	893 Call GlobalJavaObjectRef.op_Implicit, X0
	894 Move X1, X22
	895 Move X2, X20
	896 Move X3, X21
	897 Move X4, X31
	898 Call AndroidJNISafe.CallCharMethod, X0, X1, X2
	899 Move X8, 0x1E78000
	900 Move X8, [X8+368]
	901 NotImplemented "Instruction STURH not yet implemented."
	902 Move X8, [X8]
	903 Subtract X1, X29, 16
	904 Move X0, X8
	905 Call 0x1C17E04
	906 Move X8, [X28]
	907 Move X22, X0
	908 Move X1, [X8+8]
	909 Move W8, [X1+309]
	910 Move TEMP, X8
	911 And TEMP, TEMP, 1
	912 Compare TEMP, 1
	913 JumpIfEqual {917}
	914 Move X0, X1
	915 Call 0x1C5D684
	916 Move X1, X0
	917 Compare X22, 0
	918 JumpIfEqual {1035}
	919 Move X8, [X22]
	920 Move X9, [X1+64]
	921 Move X8, [X8+64]
	922 NotImplemented "Instruction CMP not yet implemented."
	923 Move X0, X22
	924 Call 0x1C17E08
	925 Move W8, [X0]
	926 NotImplemented "Instruction CMP not yet implemented."
	927 NotImplemented "Instruction CSET not yet implemented."
	928 Move X0, X19
	929 Move X1, X20
	930 Move X2, X21
	931 Move X3, X31
	932 Call AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	933 NotImplemented "Instruction LDUR not yet implemented."
	934 Move X8, [X8+40]
	935 NotImplemented "Instruction LDUR not yet implemented."
	936 NotImplemented "Instruction CMP not yet implemented."
	937 And W0, W22, 1
	938 Add X31, X29, 0
	939 Move X20, [X31+80]
	940 Move X19, [X31+88]
	941 Move X22, [X31+64]
	942 Move X21, [X31+72]
	943 Move X24, [X31+48]
	944 Move X23, [X31+56]
	945 Move X26, [X31+32]
	946 Move X25, [X31+40]
	947 Move X28, [X31+16]
	948 Move X27, [X31+24]
	949 Move X29, [X31+96]
	950 Move X30, [X31+104]
	951 Return X0
	952 Call 0x1C17F20
	953 Call 0x1C17F20
	954 Move X0, X22
	955 Call 0x1C181E0
	956 Move X0, X22
	957 Call 0x1C181E0
	958 Call 0x1C17F20
	959 Move X0, X22
	960 Call 0x1C181E0
	961 Call 0x1C17F20
	962 Move X0, X22
	963 Call 0x1C181E0
	964 Move X8, [X28]
	965 Move X22, [X8]
	966 Move X0, 0x1E76000
	967 Move X0, [X0+1728]
	968 Call 0x1C17D08
	969 Move W8, [X0+224]
	970 Compare W8, 0
	971 JumpIfNotEqual {973}
	972 Call 0x1C17DFC
	973 Move X0, X22
	974 Move X1, X31
	975 Call Type.GetTypeFromHandle, X0
	976 Move X23, X0
	977 Compare X0, 0
	978 JumpIfNotEqual {999}
	979 Move X0, 0x1E9F000
	980 Move X0, [X0+1736]
	981 Call 0x1C17D08
	982 Move X22, X0
	983 Move X23, X31
	984 Call 0x1C17F20
	985 Move X0, X22
	986 Call 0x1C181E0
	987 Call 0x1C17F20
	988 Move X0, X22
	989 Call 0x1C181E0
	990 Call 0x1C17F20
	991 Move X0, X22
	992 Call 0x1C181E0
	993 Call 0x1C17F20
	994 Move X0, X22
	995 Call 0x1C181E0
	996 Call 0x1C17F20
	997 Move X0, X22
	998 Call 0x1C181E0
	999 Move X0, 0x1E9F000
	1000 Move X0, [X0+1736]
	1001 Call 0x1C17D08
	1002 Move X8, [X23]
	1003 Move X22, X0
	1004 Move X9, [X8+360]
	1005 Move X1, [X8+368]
	1006 Move X0, X23
	1007 NotImplemented "Instruction BLR not yet implemented."
	1008 Move X23, X0
	1009 Move X0, 0x1E7E000
	1010 Move X0, [X0+2480]
	1011 Call 0x1C17D08
	1012 Move X2, X0
	1013 Move X0, X22
	1014 Move X1, X23
	1015 Move X3, X31
	1016 Call String.Concat, X0, X1, X2
	1017 Move X22, X0
	1018 Move X0, 0x1E76000
	1019 Move X0, [X0+2000]
	1020 Call 0x1C17D08
	1021 Call 0x1C17F10
	1022 Move X23, X0
	1023 Move X1, X22
	1024 Move X2, X31
	1025 Call Exception..ctor, X0, X1
	1026 Move X0, X23
	1027 Move X1, X24
	1028 Call 0x1C17DEC
	1029 Call 0x1C17F20
	1030 Move X0, X22
	1031 Call 0x1C181E0
	1032 Call 0x1C17F20
	1033 Move X0, X22
	1034 Call 0x1C181E0
	1035 Call 0x1C17F20
	1036 Move X0, X22
	1037 Call 0x1C181E0
	1038 Call 0x3EB2B20
	1039 Move X22, X0
	1040 Move X22, X0
	1041 NotImplemented "Instruction CMP not yet implemented."
	1042 Move X0, X22
	1043 Call 0x3EB2AD0
	1044 Move X23, [X0]
	1045 Call 0x3EB2AE0
	1046 Move X0, X19
	1047 Move X1, X20
	1048 Move X2, X21
	1049 Move X3, X31
	1050 Call AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	1051 Compare X23, 0
	1052 JumpIfNotEqual {1055}
	1053 Move W22, W31
	1054 Move X23, X31
	1055 Move X0, X23
	1056 Call 0x1C17F18
	1057 Move X22, X0
	1058 Move X0, X19
	1059 Move X1, X20
	1060 Move X2, X21
	1061 Move X3, X31
	1062 Call AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	1063 Compare X23, 0
	1064 JumpIfNotEqual {1067}
	1065 Move X0, X22
	1066 Call 0x1D2D690
	1067 Move X0, X23
	1068 Call 0x1C17F18
	1069 Call 0x1991590

Method: FieldType _Get(System.String fieldName)

Disassembly:
	0x022C0DBC BL 0x1C16E04
	0x022C0DC0 LDR X8, [X24]
	0x022C0DC4 MOV X19, X0
	0x022C0DC8 LDR X1, [X8 + 0x8]
	0x022C0DCC LDRB W8, [X1 + 0x135]
	0x022C0DD0 TBNZ X8, 0x0, 0x22C0DE0
	0x022C0DD4 MOV X0, X1
	0x022C0DD8 BL 0x1C5C684
	0x022C0DDC MOV X1, X0
	0x022C0DE0 CBNZ X19, 0x22C1118
	0x022C0DE4 BL 0x1C16F20
	0x022C0DE8 ADRP X8, 0x1E5B000
	0x022C0DEC LDR X8, [X8 + 0xB60]
	0x022C0DF0 MOV X1, X31
	0x022C0DF4 LDR X0, [X8]
	0x022C0DF8 BL 0x338C698
	0x022C0DFC MOV X1, X0
	0x022C0E00 MOV X0, X22
	0x022C0E04 MOV X2, X31
	0x022C0E08 BL 0x3395194
	0x022C0E0C TBZ X0, 0x0, 0x22C0EB0
	0x022C0E10 LDR X0, [X20 + 0x18]
	0x022C0E14 MOV X1, X31
	0x022C0E18 BL 0x3BEF01C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X21, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move X0, [X20+24]
	014 Move X1, X31
	015 Call GlobalJavaObjectRef.op_Implicit, X0
	016 Move X8, [X19+56]
	017 Move X1, X21
	018 Move W2, W31
	019 Move X3, [X8]
	020 Call AndroidJNIHelper.GetFieldID, X0, X1, X2
	021 Move X8, [X19+56]
	022 Move X1, X0
	023 Move X0, X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8+8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x22C0420, X0, X1
	030 Return X0

Method: FieldType _Get(System.IntPtr fieldID)

Disassembly:
	0x022C0420 MOV X19, X0
	0x022C0424 MOV X1, X31
	0x022C0428 LDR X8, [X8]
	0x022C042C MOV X0, X8
	0x022C0430 BL 0x338C698
	0x022C0434 MOV X1, X0
	0x022C0438 MOV X0, X19
	0x022C043C MOV X2, X31
	0x022C0440 BL 0x3395194
	0x022C0444 TBZ X0, 0x0, 0x22C0598
	0x022C0448 LDUR X8, [X29 - 0x50]
	0x022C044C MOV X1, X31
	0x022C0450 LDR X0, [X8 + 0x10]
	0x022C0454 BL 0x3BEF01C
	0x022C0458 LDUR X1, [X29 - 0x48]
	0x022C045C MOV X2, X31
	0x022C0460 BL 0x3BED9B8
	0x022C0464 MOV X1, X31
	0x022C0468 MOV X2, X31
	0x022C046C MOV X19, X0
	0x022C0470 BL 0x33BE5B0
	0x022C0474 TBZ X0, 0x0, 0x22C0670
	0x022C0478 MOV X0, X25
	0x022C047C MOV W1, W31
	0x022C0480 MOV X2, X20
	0x022C0484 BL 0x3EB1B10
	0x022C0488 LDUR X23, [X29 - 0x38]
	0x022C048C MOV X1, X25
	0x022C0490 MOV X2, X20
	0x022C0494 MOV X0, X23
	0x022C0498 BL 0x3EB1AC0
	0x022C049C MOV X0, X27
	0x022C04A0 MOV X1, X23
	0x022C04A4 MOV X2, X20
	0x022C04A8 BL 0x3EB1AC0
	0x022C04AC LDP X22, X21, [X29 - 0x30]
	0x022C04B0 LDUR X24, [X29 - 0x40]
	0x022C04B4 B 0x22C06C0
	0x022C04B8 MOV X0, X19
	0x022C04BC MOV X1, X31
	0x022C04C0 BL 0x3BF2EDC
	0x022C04C4 LDR X8, [X26]
	0x022C04C8 MOV X19, X0
	0x022C04CC LDR X1, [X8 + 0x8]
	0x022C04D0 LDRB W8, [X1 + 0x135]
	0x022C04D4 TBNZ X8, 0x0, 0x22C04E4
	0x022C04D8 MOV X0, X1
	0x022C04DC BL 0x1C5C684
	0x022C04E0 MOV X1, X0
	0x022C04E4 LDP X24, X23, [X29 - 0x40]
	0x022C04E8 LDP X22, X21, [X29 - 0x30]
	0x022C04EC MOV X0, X19
	0x022C04F0 MOV X2, X23
	0x022C04F4 BL 0x1C16E10
	0x022C04F8 MOV X1, X0
	0x022C04FC MOV X0, X28
	0x022C0500 MOV X2, X20
	0x022C0504 BL 0x3EB1AC0
	0x022C0508 MOV X0, X24
	0x022C050C MOV X1, X28
	0x022C0510 B 0x22C0230
	0x022C0514 LDR X0, [X22]
	0x022C0518 LDR X8, [X26]
	0x022C051C LDR W9, [X0 + 0xE0]
	0x022C0520 LDR X19, [X8]
	0x022C0524 CBNZ W9, 0x22C052C
	0x022C0528 BL 0x1C16DFC
	0x022C052C MOV X0, X19
	0x022C0530 MOV X1, X31
	0x022C0534 BL 0x338C698
	0x022C0538 ADRP X8, 0x1E5A000
	0x022C053C LDR X8, [X8 + 0xD90]
	0x022C0540 MOV X19, X0
	0x022C0544 MOV X1, X31
	0x022C0548 LDR X8, [X8]
	0x022C054C MOV X0, X8
	0x022C0550 BL 0x338C698
	0x022C0554 MOV X1, X0
	0x022C0558 MOV X0, X19
	0x022C055C MOV X2, X31
	0x022C0560 BL 0x3395194
	0x022C0564 TBZ X0, 0x0, 0x22C06CC
	0x022C0568 LDUR X8, [X29 - 0x50]
	0x022C056C MOV X1, X31
	0x022C0570 LDR X0, [X8 + 0x10]
	0x022C0574 BL 0x3BEF01C
	0x022C0578 LDUR X1, [X29 - 0x48]
	0x022C057C MOV X2, X31
	0x022C0580 BL 0x3BEDE68
	0x022C0584 ADRP X8, 0x1E5C000
	0x022C0588 LDR X8, [X8 + 0x6B0]
	0x022C058C LDR X8, [X8]
	0x022C0590 STURB W0, [X29 - 0x20]
	0x022C0594 B 0x22C01E8
	0x022C0598 ADRP X8, 0x1E5C000
	0x022C059C LDR X0, [X22]
	0x022C05A0 LDR X8, [X8 + 0x6A8]
	0x022C05A4 LDR W9, [X0 + 0xE0]
	0x022C05A8 LDR X19, [X8]
	0x022C05AC CBNZ W9, 0x22C05B4
	0x022C05B0 BL 0x1C16DFC
	0x022C05B4 MOV X0, X19
	0x022C05B8 MOV X1, X31
	0x022C05BC BL 0x338C698
	0x022C05C0 LDR X8, [X26]
	0x022C05C4 MOV X19, X0
	0x022C05C8 MOV X1, X31
	0x022C05CC LDR X8, [X8]
	0x022C05D0 MOV X0, X8
	0x022C05D4 BL 0x338C698
	0x022C05D8 LDR X8, [X21]
	0x022C05DC MOV X23, X0
	0x022C05E0 LDR W9, [X8 + 0xE0]
	0x022C05E4 CBNZ W9, 0x22C05F0
	0x022C05E8 MOV X0, X8
	0x022C05EC BL 0x1C16DFC
	0x022C05F0 MOV X0, X19
	0x022C05F4 MOV X1, X23
	0x022C05F8 MOV X2, X31
	0x022C05FC BL 0x3BF3068
	0x022C0600 TBZ X0, 0x0, 0x22C097C
	0x022C0604 LDUR X8, [X29 - 0x50]
	0x022C0608 MOV X1, X31
	0x022C060C LDR X0, [X8 + 0x10]
	0x022C0610 BL 0x3BEF01C
	0x022C0614 LDUR X1, [X29 - 0x48]
	0x022C0618 MOV X2, X31
	0x022C061C BL 0x3BED9B8
	0x022C0620 LDR X8, [X26]
	0x022C0624 LDUR X23, [X29 - 0x38]
	0x022C0628 SUB X9, X29, 0x10
	0x022C062C SUB X3, X29, 0x20
	0x022C0630 LDR X1, [X8 + 0x10]
	0x022C0634 MOV X2, X31
	0x022C0638 MOV X4, X23
	0x022C063C LDR X8, [X1]
	0x022C0640 STUR X9, [X29 - 0x20]
	0x022C0644 STP X23, X0, [X29 - 0x18]
	0x022C0648 LDR X9, [X1 + 0x10]
	0x022C064C MOV X0, X8
	0x022C0650 BLR X9
	0x022C0654 LDUR X24, [X29 - 0x40]
	0x022C0658 MOV X1, X23
	0x022C065C MOV X2, X20
	0x022C0660 MOV X0, X24
	0x022C0664 BL 0x3EB1AC0
	0x022C0668 LDP X22, X21, [X29 - 0x30]
	0x022C066C B 0x22C0238
	0x022C0670 MOV X0, X19
	0x022C0674 MOV X1, X31
	0x022C0678 BL 0x3BF1A28
	0x022C067C LDR X8, [X26]
	0x022C0680 MOV X19, X0
	0x022C0684 LDR X1, [X8 + 0x8]
	0x022C0688 LDRB W8, [X1 + 0x135]
	0x022C068C TBNZ X8, 0x0, 0x22C069C
	0x022C0690 MOV X0, X1
	0x022C0694 BL 0x1C5C684
	0x022C0698 MOV X1, X0
	0x022C069C LDP X24, X23, [X29 - 0x40]
	0x022C06A0 LDP X22, X21, [X29 - 0x30]
	0x022C06A4 MOV X0, X19
	0x022C06A8 MOV X2, X23
	0x022C06AC BL 0x1C16E10
	0x022C06B0 MOV X1, X0
	0x022C06B4 MOV X0, X27
	0x022C06B8 MOV X2, X20
	0x022C06BC BL 0x3EB1AC0
	0x022C06C0 MOV X0, X24
	0x022C06C4 MOV X1, X27
	0x022C06C8 B 0x22C0230
	0x022C06CC LDR X0, [X22]
	0x022C06D0 LDR X8, [X26]
	0x022C06D4 LDR W9, [X0 + 0xE0]
	0x022C06D8 LDR X19, [X8]
	0x022C06DC CBNZ W9, 0x22C06E4
	0x022C06E0 BL 0x1C16DFC
	0x022C06E4 MOV X0, X19
	0x022C06E8 MOV X1, X31
	0x022C06EC BL 0x338C698
	0x022C06F0 ADRP X8, 0x1E5A000
	0x022C06F4 LDR X8, [X8 + 0xD78]
	0x022C06F8 MOV X19, X0
	0x022C06FC MOV X1, X31
	0x022C0700 LDR X8, [X8]
	0x022C0704 MOV X0, X8
	0x022C0708 BL 0x338C698
	0x022C070C MOV X1, X0
	0x022C0710 MOV X0, X19
	0x022C0714 MOV X2, X31
	0x022C0718 BL 0x3395194
	0x022C071C TBZ X0, 0x0, 0x22C0750
	0x022C0720 LDUR X8, [X29 - 0x50]
	0x022C0724 MOV X1, X31
	0x022C0728 LDR X0, [X8 + 0x10]
	0x022C072C BL 0x3BEF01C
	0x022C0730 LDUR X1, [X29 - 0x48]
	0x022C0734 MOV X2, X31
	0x022C0738 BL 0x3BEDDC0
	0x022C073C ADRP X8, 0x1E37000
	0x022C0740 LDR X8, [X8 + 0x628]
	0x022C0744 LDR X8, [X8]
	0x022C0748 STURH W0, [X29 - 0x20]
	0x022C074C B 0x22C01E8
	0x022C0750 LDR X0, [X22]
	0x022C0754 LDR X8, [X26]
	0x022C0758 LDR W9, [X0 + 0xE0]
	0x022C075C LDR X19, [X8]
	0x022C0760 CBNZ W9, 0x22C0768
	0x022C0764 BL 0x1C16DFC
	0x022C0768 MOV X0, X19
	0x022C076C MOV X1, X31
	0x022C0770 BL 0x338C698
	0x022C0774 ADRP X8, 0x1E5A000
	0x022C0778 LDR X8, [X8 + 0xD88]
	0x022C077C MOV X19, X0
	0x022C0780 MOV X1, X31
	0x022C0784 LDR X8, [X8]
	0x022C0788 MOV X0, X8
	0x022C078C BL 0x338C698
	0x022C0790 MOV X1, X0
	0x022C0794 MOV X0, X19
	0x022C0798 MOV X2, X31
	0x022C079C BL 0x3395194
	0x022C07A0 TBZ X0, 0x0, 0x22C07D0
	0x022C07A4 LDUR X8, [X29 - 0x50]
	0x022C07A8 MOV X1, X31
	0x022C07AC LDR X0, [X8 + 0x10]
	0x022C07B0 BL 0x3BEF01C
	0x022C07B4 LDUR X1, [X29 - 0x48]
	0x022C07B8 MOV X2, X31
	0x022C07BC BL 0x3BEDD18
	0x022C07C0 ADRP X8, 0x1E35000
	0x022C07C4 LDR X8, [X8 + 0xA60]
	0x022C07C8 STUR X0, [X29 - 0x20]
	0x022C07CC B 0x22C01E4
	0x022C07D0 LDR X0, [X22]
	0x022C07D4 LDR X8, [X26]
	0x022C07D8 LDR W9, [X0 + 0xE0]
	0x022C07DC LDR X19, [X8]
	0x022C07E0 CBNZ W9, 0x22C07E8
	0x022C07E4 BL 0x1C16DFC
	0x022C07E8 MOV X0, X19
	0x022C07EC MOV X1, X31
	0x022C07F0 BL 0x338C698
	0x022C07F4 ADRP X8, 0x1E5B000
	0x022C07F8 LDR X8, [X8 + 0xA80]
	0x022C07FC MOV X19, X0
	0x022C0800 MOV X1, X31
	0x022C0804 LDR X8, [X8]
	0x022C0808 MOV X0, X8
	0x022C080C BL 0x338C698
	0x022C0810 MOV X1, X0
	0x022C0814 MOV X0, X19
	0x022C0818 MOV X2, X31
	0x022C081C BL 0x3395194
	0x022C0820 TBZ X0, 0x0, 0x22C0850
	0x022C0824 LDUR X8, [X29 - 0x50]
	0x022C0828 MOV X1, X31
	0x022C082C LDR X0, [X8 + 0x10]
	0x022C0830 BL 0x3BEF01C
	0x022C0834 LDUR X1, [X29 - 0x48]
	0x022C0838 MOV X2, X31
	0x022C083C BL 0x3BEDC64
	0x022C0840 ADRP X8, 0x1E33000
	0x022C0844 LDR X8, [X8 + 0xA90]
	0x022C0848 STUR S0, [X29 - 0x20]
	0x022C084C B 0x22C08CC
	0x022C0850 LDR X0, [X22]
	0x022C0854 LDR X8, [X26]
	0x022C0858 LDR W9, [X0 + 0xE0]
	0x022C085C LDR X19, [X8]
	0x022C0860 CBNZ W9, 0x22C0868
	0x022C0864 BL 0x1C16DFC
	0x022C0868 MOV X0, X19
	0x022C086C MOV X1, X31
	0x022C0870 BL 0x338C698
	0x022C0874 ADRP X8, 0x1E5B000
	0x022C0878 LDR X8, [X8 + 0xA78]
	0x022C087C MOV X19, X0
	0x022C0880 MOV X1, X31
	0x022C0884 LDR X8, [X8]
	0x022C0888 MOV X0, X8
	0x022C088C BL 0x338C698
	0x022C0890 MOV X1, X0
	0x022C0894 MOV X0, X19
	0x022C0898 MOV X2, X31
	0x022C089C BL 0x3395194
	0x022C08A0 TBZ X0, 0x0, 0x22C08D8
	0x022C08A4 LDUR X8, [X29 - 0x50]
	0x022C08A8 MOV X1, X31
	0x022C08AC LDR X0, [X8 + 0x10]
	0x022C08B0 BL 0x3BEF01C
	0x022C08B4 LDUR X1, [X29 - 0x48]
	0x022C08B8 MOV X2, X31
	0x022C08BC BL 0x3BEDBB0
	0x022C08C0 ADRP X8, 0x1E36000
	0x022C08C4 LDR X8, [X8 + 0x978]
	0x022C08C8 STUR D0, [X29 - 0x20]
	0x022C08CC LDR X0, [X8]
	0x022C08D0 SUB X1, X29, 0x20
	0x022C08D4 B 0x22C01F0
	0x022C08D8 LDR X0, [X22]
	0x022C08DC LDR X8, [X26]
	0x022C08E0 LDR W9, [X0 + 0xE0]
	0x022C08E4 LDR X19, [X8]
	0x022C08E8 CBNZ W9, 0x22C08F0
	0x022C08EC BL 0x1C16DFC
	0x022C08F0 MOV X0, X19
	0x022C08F4 MOV X1, X31
	0x022C08F8 BL 0x338C698
	0x022C08FC ADRP X8, 0x1E5A000
	0x022C0900 LDR X8, [X8 + 0xD70]
	0x022C0904 MOV X19, X0
	0x022C0908 MOV X1, X31
	0x022C090C LDR X8, [X8]
	0x022C0910 MOV X0, X8
	0x022C0914 BL 0x338C698
	0x022C0918 MOV X1, X0
	0x022C091C MOV X0, X19
	0x022C0920 MOV X2, X31
	0x022C0924 BL 0x3395194
	0x022C0928 TBZ X0, 0x0, 0x22C0954
	0x022C092C LDUR X8, [X29 - 0x50]
	0x022C0930 MOV X1, X31
	0x022C0934 LDR X0, [X8 + 0x10]
	0x022C0938 BL 0x3BEF01C
	0x022C093C LDUR X1, [X29 - 0x48]
	0x022C0940 MOV X2, X31
	0x022C0944 BL 0x3BEDB08
	0x022C0948 ADRP X8, 0x1E35000
	0x022C094C LDR X8, [X8 + 0x170]
	0x022C0950 B 0x22C0744
	0x022C0954 MOV X0, X25
	0x022C0958 MOV W1, W31
	0x022C095C MOV X2, X20
	0x022C0960 BL 0x3EB1B10
	0x022C0964 LDUR X23, [X29 - 0x38]
	0x022C0968 MOV X1, X25
	0x022C096C MOV X2, X20
	0x022C0970 MOV X0, X23
	0x022C0974 BL 0x3EB1AC0
	0x022C0978 B 0x22C0654
	0x022C097C LDR X8, [X26]
	0x022C0980 ADRP X0, 0x1E33000
	0x022C0984 LDR X19, [X8]
	0x022C0988 LDR X0, [X0 + 0x6C0]
	0x022C098C BL 0x1C16D08
	0x022C0990 LDR W8, [X0 + 0xE0]
	0x022C0994 CBNZ W8, 0x22C099C
	0x022C0998 BL 0x1C16DFC
	0x022C099C MOV X0, X19
	0x022C09A0 MOV X1, X31
	0x022C09A4 BL 0x338C698
	0x022C09A8 MOV X20, X0
	0x022C09AC ADRP X0, 0x1E5C000
	0x022C09B0 LDR X0, [X0 + 0xAA8]
	0x022C09B4 BL 0x1C16D08
	0x022C09B8 MOV X19, X0
	0x022C09BC MOV X21, X31
	0x022C09C0 CBZ X20, 0x22C09D8
	0x022C09C4 LDR X8, [X20]
	0x022C09C8 MOV X0, X20
	0x022C09CC LDP X9, X1, [X8 + 0x168]
	0x022C09D0 BLR X9
	0x022C09D4 MOV X21, X0
	0x022C09D8 ADRP X0, 0x1E3B000
	0x022C09DC LDR X0, [X0 + 0x9B0]
	0x022C09E0 BL 0x1C16D08
	0x022C09E4 MOV X2, X0
	0x022C09E8 MOV X0, X19
	0x022C09EC MOV X1, X21
	0x022C09F0 MOV X3, X31
	0x022C09F4 BL 0x32274B8
	0x022C09F8 MOV X19, X0
	0x022C09FC ADRP X0, 0x1E33000
	0x022C0A00 LDR X0, [X0 + 0x7D0]
	0x022C0A04 BL 0x1C16D08
	0x022C0A08 BL 0x1C16F10
	0x022C0A0C MOV X1, X19
	0x022C0A10 MOV X2, X31
	0x022C0A14 MOV X20, X0
	0x022C0A18 BL 0x33B2C70
	0x022C0A1C MOV X0, X20
	0x022C0A20 MOV X1, X24
	0x022C0A24 BL 0x1C16DEC
	0x022C0A28 BL 0x3EB1B20
	0x022C0A2C STP X29, X30, [X31 - 0x50]!
	0x022C0A30 STP X26, X25, [X31 + 0x10]
	0x022C0A34 STP X24, X23, [X31 + 0x20]
	0x022C0A38 STP X22, X21, [X31 + 0x30]
	0x022C0A3C STP X20, X19, [X31 + 0x40]
	0x022C0A40 ADD X29, X31, 0x0
	0x022C0A44 SUB X31, X31, 0x20
	0x022C0A48 MRS X26, 0xC000
	0x022C0A4C LDR X8, [X26 + 0x28]
	0x022C0A50 MOV X23, X3
	0x022C0A54 MOV X19, X2
	0x022C0A58 MOV X24, X1
	0x022C0A5C STUR X8, [X29 - 0x8]
	0x022C0A60 LDR X8, [X3 + 0x38]
	0x022C0A64 MOV X21, X0
	0x022C0A68 CBNZ X8, 0x22C0A78
	0x022C0A6C MOV X0, X23
	0x022C0A70 BL 0x1C5C6E0
	0x022C0A74 LDR X8, [X23 + 0x38]
	0x022C0A78 LDR X8, [X8 + 0x10]
	0x022C0A7C LDR W20, [X8 + 0xFC]
	0x022C0A80 ADD X8, X31, 0x0
	0x022C0A84 ADD X9, X20, 0xF
	0x022C0A88 AND X9, X9, 0x1FFFFFFFF
	0x022C0A8C SUB X22, X8, X9
	0x022C0A90 ADD X31, X22, 0x0
	0x022C0A94 ADD X8, X31, 0x0
	0x022C0A98 SUB X25, X8, X9
	0x022C0A9C ADD X31, X25, 0x0
	0x022C0AA0 MOV X0, X25
	0x022C0AA4 MOV W1, W31
	0x022C0AA8 MOV X2, X20
	0x022C0AAC BL 0x3EB1B10
	0x022C0AB0 LDR X0, [X21 + 0x18]
	0x022C0AB4 MOV X1, X31
	0x022C0AB8 BL 0x3BEF01C
	0x022C0ABC LDR X8, [X23 + 0x38]
	0x022C0AC0 MOV X1, X24
	0x022C0AC4 MOV W2, W31
	0x022C0AC8 LDR X3, [X8]
	0x022C0ACC LDR X8, [X3]
	0x022C0AD0 BLR X8
	0x022C0AD4 LDR X8, [X23 + 0x38]
	0x022C0AD8 SUB X9, X29, 0x10
	0x022C0ADC SUB X3, X29, 0x20
	0x022C0AE0 MOV X2, X21
	0x022C0AE4 LDR X1, [X8 + 0x8]
	0x022C0AE8 MOV X4, X22
	0x022C0AEC LDR X8, [X1]
	0x022C0AF0 STP X22, X0, [X29 - 0x18]
	0x022C0AF4 STUR X9, [X29 - 0x20]
	0x022C0AF8 LDR X9, [X1 + 0x10]
	0x022C0AFC MOV X0, X8
	0x022C0B00 BLR X9
	0x022C0B04 MOV X0, X25
	0x022C0B08 MOV X1, X22
	0x022C0B0C MOV X2, X20
	0x022C0B10 BL 0x3EB1AC0
	0x022C0B14 MOV X0, X22
	0x022C0B18 MOV X1, X25
	0x022C0B1C MOV X2, X20
	0x022C0B20 BL 0x3EB1AC0
	0x022C0B24 MOV X0, X19
	0x022C0B28 MOV X1, X22
	0x022C0B2C MOV X2, X20
	0x022C0B30 BL 0x3EB1AC0
	0x022C0B34 LDR X8, [X26 + 0x28]
	0x022C0B38 LDUR X9, [X29 - 0x8]
	0x022C0B3C CMP X8, X9
	0x022C0B40 B.NE 0x22C0B60
	0x022C0B44 ADD X31, X29, 0x0
	0x022C0B48 LDP X20, X19, [X31 + 0x40]
	0x022C0B4C LDP X22, X21, [X31 + 0x30]
	0x022C0B50 LDP X24, X23, [X31 + 0x20]
	0x022C0B54 LDP X26, X25, [X31 + 0x10]
	0x022C0B58 LDP X29, X30, [X31], #0x50
	0x022C0B5C RET
	0x022C0B60 BL 0x3EB1B20
	0x022C0B64 STR X30, [X31 - 0x50]!
	0x022C0B68 STP X26, X25, [X31 + 0x10]
	0x022C0B6C STP X24, X23, [X31 + 0x20]
	0x022C0B70 STP X22, X21, [X31 + 0x30]
	0x022C0B74 STP X20, X19, [X31 + 0x40]
	0x022C0B78 MOV X24, X2
	0x022C0B7C LDR X8, [X24 + 0x38]!
	0x022C0B80 MOV X21, X2
	0x022C0B84 MOV X19, X1
	0x022C0B88 MOV X20, X0
	0x022C0B8C CBNZ X8, 0x22C0CDC
	0x022C0B90 ADRP X0, 0x1E5C000
	0x022C0B94 LDR X0, [X0 + 0x690]
	0x022C0B98 BL 0x1C16CF4
	0x022C0B9C ADRP X0, 0x1E5C000
	0x022C0BA0 LDR X0, [X0 + 0x698]
	0x022C0BA4 BL 0x1C16CF4
	0x022C0BA8 ADRP X0, 0x1E5C000
	0x022C0BAC LDR X0, [X0 + 0x6A0]
	0x022C0BB0 BL 0x1C16CF4
	0x022C0BB4 ADRP X0, 0x1E5C000
	0x022C0BB8 LDR X0, [X0 + 0x248]
	0x022C0BBC BL 0x1C16CF4
	0x022C0BC0 ADRP X0, 0x1E33000
	0x022C0BC4 LDR X0, [X0 + 0xB58]
	0x022C0BC8 BL 0x1C16CF4
	0x022C0BCC ADRP X0, 0x1E5A000
	0x022C0BD0 LDR X0, [X0 + 0xD68]
	0x022C0BD4 BL 0x1C16CF4
	0x022C0BD8 ADRP X0, 0x1E34000
	0x022C0BDC LDR X0, [X0 + 0x9D8]
	0x022C0BE0 BL 0x1C16CF4
	0x022C0BE4 ADRP X0, 0x1E5A000
	0x022C0BE8 LDR X0, [X0 + 0xD70]
	0x022C0BEC BL 0x1C16CF4
	0x022C0BF0 ADRP X0, 0x1E35000
	0x022C0BF4 LDR X0, [X0 + 0x170]
	0x022C0BF8 BL 0x1C16CF4
	0x022C0BFC ADRP X0, 0x1E33000
	0x022C0C00 LDR X0, [X0 + 0xA28]
	0x022C0C04 BL 0x1C16CF4
	0x022C0C08 ADRP X0, 0x1E5B000
	0x022C0C0C LDR X0, [X0 + 0xA78]
	0x022C0C10 BL 0x1C16CF4
	0x022C0C14 ADRP X0, 0x1E36000
	0x022C0C18 LDR X0, [X0 + 0x978]
	0x022C0C1C BL 0x1C16CF4
	0x022C0C20 ADRP X0, 0x1E5A000
	0x022C0C24 LDR X0, [X0 + 0xD78]
	0x022C0C28 BL 0x1C16CF4
	0x022C0C2C ADRP X0, 0x1E37000
	0x022C0C30 LDR X0, [X0 + 0x628]
	0x022C0C34 BL 0x1C16CF4
	0x022C0C38 ADRP X0, 0x1E5A000
	0x022C0C3C LDR X0, [X0 + 0xD80]
	0x022C0C40 BL 0x1C16CF4
	0x022C0C44 ADRP X0, 0x1E33000
	0x022C0C48 LDR X0, [X0 + 0x758]
	0x022C0C4C BL 0x1C16CF4
	0x022C0C50 ADRP X0, 0x1E5A000
	0x022C0C54 LDR X0, [X0 + 0xD88]
	0x022C0C58 BL 0x1C16CF4
	0x022C0C5C ADRP X0, 0x1E35000
	0x022C0C60 LDR X0, [X0 + 0xA60]
	0x022C0C64 BL 0x1C16CF4
	0x022C0C68 ADRP X0, 0x1E5C000
	0x022C0C6C LDR X0, [X0 + 0x6A8]
	0x022C0C70 BL 0x1C16CF4
	0x022C0C74 ADRP X0, 0x1E5A000
	0x022C0C78 LDR X0, [X0 + 0xD90]
	0x022C0C7C BL 0x1C16CF4
	0x022C0C80 ADRP X0, 0x1E5C000
	0x022C0C84 LDR X0, [X0 + 0x6B0]
	0x022C0C88 BL 0x1C16CF4
	0x022C0C8C ADRP X0, 0x1E5B000
	0x022C0C90 LDR X0, [X0 + 0xA80]
	0x022C0C94 BL 0x1C16CF4
	0x022C0C98 ADRP X0, 0x1E33000
	0x022C0C9C LDR X0, [X0 + 0xA90]
	0x022C0CA0 BL 0x1C16CF4
	0x022C0CA4 ADRP X0, 0x1E5B000
	0x022C0CA8 LDR X0, [X0 + 0xB60]
	0x022C0CAC BL 0x1C16CF4
	0x022C0CB0 ADRP X0, 0x1E33000
	0x022C0CB4 LDR X0, [X0 + 0x6C0]
	0x022C0CB8 BL 0x1C16CF4
	0x022C0CBC ADRP X0, 0x1E5C000
	0x022C0CC0 LDR X0, [X0 + 0xAA0]
	0x022C0CC4 BL 0x1C16CF4
	0x022C0CC8 LDR X8, [X21 + 0x38]
	0x022C0CCC CBNZ X8, 0x22C0CDC
	0x022C0CD0 MOV X0, X21
	0x022C0CD4 BL 0x1C5C6E0
	0x022C0CD8 LDR X8, [X21 + 0x38]
	0x022C0CDC ADRP X25, 0x1E33000
	0x022C0CE0 LDR X25, [X25 + 0x6C0]
	0x022C0CE4 LDR X22, [X8]
	0x022C0CE8 LDR X0, [X25]
	0x022C0CEC LDR W9, [X0 + 0xE0]
	0x022C0CF0 CBNZ W9, 0x22C0CF8
	0x022C0CF4 BL 0x1C16DFC
	0x022C0CF8 MOV X0, X22
	0x022C0CFC MOV X1, X31
	0x022C0D00 BL 0x338C698
	0x022C0D04 ADRP X26, 0x1E5C000
	0x022C0D08 LDR X26, [X26 + 0x6A0]
	0x022C0D0C MOV X22, X0
	0x022C0D10 LDR X8, [X26]
	0x022C0D14 LDR W9, [X8 + 0xE0]
	0x022C0D18 CBNZ W9, 0x22C0D24
	0x022C0D1C MOV X0, X8
	0x022C0D20 BL 0x1C16DFC
	0x022C0D24 MOV X0, X22
	0x022C0D28 MOV X1, X31
	0x022C0D2C BL 0x3BF3054
	0x022C0D30 LDR X8, [X25]
	0x022C0D34 LDR X9, [X24]
	0x022C0D38 MOV W23, W0
	0x022C0D3C LDR W10, [X8 + 0xE0]
	0x022C0D40 LDR X22, [X9]
	0x022C0D44 CBNZ W10, 0x22C0D50
	0x022C0D48 MOV X0, X8
	0x022C0D4C BL 0x1C16DFC
	0x022C0D50 MOV X0, X22
	0x022C0D54 MOV X1, X31
	0x022C0D58 BL 0x338C698
	0x022C0D5C MOV X22, X0
	0x022C0D60 TBZ X23, 0x0, 0x22C0DE8
	0x022C0D64 ADRP X8, 0x1E5A000
	0x022C0D68 LDR X8, [X8 + 0xD80]
	0x022C0D6C MOV X1, X31
	0x022C0D70 LDR X0, [X8]
	0x022C0D74 BL 0x338C698
	0x022C0D78 MOV X1, X0
	0x022C0D7C MOV X0, X22
	0x022C0D80 MOV X2, X31
	0x022C0D84 BL 0x3395194
	0x022C0D88 TBZ X0, 0x0, 0x22C0E2C
	0x022C0D8C LDR X0, [X20 + 0x18]
	0x022C0D90 MOV X1, X31
	0x022C0D94 BL 0x3BEF01C
	0x022C0D98 MOV X1, X19
	0x022C0D9C MOV X2, X31
	0x022C0DA0 BL 0x3BECBB8
	0x022C0DA4 ADRP X8, 0x1E33000
	0x022C0DA8 LDR X8, [X8 + 0x758]
	0x022C0DAC STR W0, [X31 + 0x8]
	0x022C0DB0 ADD X1, X31, 0x8
	0x022C0DB4 LDR X8, [X8]
	0x022C0DB8 MOV X0, X8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, X2
	011 Add X24, X24, 56
	012 Move X8, [X24]
	013 Move X21, X2
	014 Move X19, X1
	015 Move X20, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {102}
	018 Move X0, 0x1E5D000
	019 Move X0, [X0+1680]
	020 Call 0x1C17CF4
	021 Move X0, 0x1E5D000
	022 Move X0, [X0+1688]
	023 Call 0x1C17CF4
	024 Move X0, 0x1E5D000
	025 Move X0, [X0+1696]
	026 Call 0x1C17CF4
	027 Move X0, 0x1E5D000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move X0, 0x1E34000
	031 Move X0, [X0+2904]
	032 Call 0x1C17CF4
	033 Move X0, 0x1E5B000
	034 Move X0, [X0+3432]
	035 Call 0x1C17CF4
	036 Move X0, 0x1E35000
	037 Move X0, [X0+2520]
	038 Call 0x1C17CF4
	039 Move X0, 0x1E5B000
	040 Move X0, [X0+3440]
	041 Call 0x1C17CF4
	042 Move X0, 0x1E36000
	043 Move X0, [X0+368]
	044 Call 0x1C17CF4
	045 Move X0, 0x1E34000
	046 Move X0, [X0+2600]
	047 Call 0x1C17CF4
	048 Move X0, 0x1E5C000
	049 Move X0, [X0+2680]
	050 Call 0x1C17CF4
	051 Move X0, 0x1E37000
	052 Move X0, [X0+2424]
	053 Call 0x1C17CF4
	054 Move X0, 0x1E5B000
	055 Move X0, [X0+3448]
	056 Call 0x1C17CF4
	057 Move X0, 0x1E38000
	058 Move X0, [X0+1576]
	059 Call 0x1C17CF4
	060 Move X0, 0x1E5B000
	061 Move X0, [X0+3456]
	062 Call 0x1C17CF4
	063 Move X0, 0x1E34000
	064 Move X0, [X0+1880]
	065 Call 0x1C17CF4
	066 Move X0, 0x1E5B000
	067 Move X0, [X0+3464]
	068 Call 0x1C17CF4
	069 Move X0, 0x1E36000
	070 Move X0, [X0+2656]
	071 Call 0x1C17CF4
	072 Move X0, 0x1E5D000
	073 Move X0, [X0+1704]
	074 Call 0x1C17CF4
	075 Move X0, 0x1E5B000
	076 Move X0, [X0+3472]
	077 Call 0x1C17CF4
	078 Move X0, 0x1E5D000
	079 Move X0, [X0+1712]
	080 Call 0x1C17CF4
	081 Move X0, 0x1E5C000
	082 Move X0, [X0+2688]
	083 Call 0x1C17CF4
	084 Move X0, 0x1E34000
	085 Move X0, [X0+2704]
	086 Call 0x1C17CF4
	087 Move X0, 0x1E5C000
	088 Move X0, [X0+2912]
	089 Call 0x1C17CF4
	090 Move X0, 0x1E34000
	091 Move X0, [X0+1728]
	092 Call 0x1C17CF4
	093 Move X0, 0x1E5D000
	094 Move X0, [X0+2720]
	095 Call 0x1C17CF4
	096 Move X8, [X21+56]
	097 Compare X8, 0
	098 JumpIfNotEqual {102}
	099 Move X0, X21
	100 Call 0x1C5D6E0
	101 Move X8, [X21+56]
	102 Move X25, 0x1E34000
	103 Move X25, [X25+1728]
	104 Move X22, [X8]
	105 Move X0, [X25]
	106 Move W9, [X0+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X22
	111 Move X1, X31
	112 Call Type.GetTypeFromHandle, X0
	113 Move X26, 0x1E5D000
	114 Move X26, [X26+1696]
	115 Move X22, X0
	116 Move X8, [X26]
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move X0, X22
	123 Move X1, X31
	124 Call AndroidReflection.IsPrimitive, X0
	125 Move X8, [X25]
	126 Move X9, [X24]
	127 Move W23, W0
	128 Move W10, [X8+224]
	129 Move X22, [X9]
	130 Compare W10, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X0, X22
	135 Move X1, X31
	136 Call Type.GetTypeFromHandle, X0
	137 Move X22, X0
	138 Move TEMP, X23
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {164}
	142 Move X8, 0x1E5B000
	143 Move X8, [X8+3456]
	144 Move X1, X31
	145 Move X0, [X8]
	146 Call Type.GetTypeFromHandle, X0
	147 Move X1, X0
	148 Move X0, X22
	149 Move X2, X31
	150 Call Type.op_Equality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {183}
	155 Move X0, [X20+16]
	156 Move X1, X31
	157 Call GlobalJavaObjectRef.op_Implicit, X0
	158 Move X1, X19
	159 Move X2, X31
	160 Call AndroidJNISafe.GetIntField, X0, X1
	161 Move X8, 0x1E34000
	162 Move X8, [X8+1880]
	163 Move [X31+8], W0
	164 Move X8, 0x1E5C000
	165 Move X8, [X8+2912]
	166 Move X1, X31
	167 Move X0, [X8]
	168 Call Type.GetTypeFromHandle, X0
	169 Move X1, X0
	170 Move X0, X22
	171 Move X2, X31
	172 Call Type.op_Equality, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {254}
	177 Move X0, [X20+16]
	178 Move X1, X31
	179 Call GlobalJavaObjectRef.op_Implicit, X0
	180 Move X1, X19
	181 Move X2, X31
	182 Call AndroidJNISafe.GetStringField, X0, X1
	183 Move X0, [X25]
	184 Move X8, [X24]
	185 Move W9, [X0+224]
	186 Move X21, [X8]
	187 Compare W9, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X21
	191 Move X1, X31
	192 Call Type.GetTypeFromHandle, X0
	193 Move X8, 0x1E5D000
	194 Move X8, [X8+584]
	195 Move X21, X0
	196 Move X1, X31
	197 Move X8, [X8]
	198 Move X0, X8
	199 Call Type.GetTypeFromHandle, X0
	200 Move X1, X0
	201 Move X0, X21
	202 Move X2, X31
	203 Call Type.op_Equality, X0, X1
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {298}
	208 Move X0, [X20+16]
	209 Move X1, X31
	210 Call GlobalJavaObjectRef.op_Implicit, X0
	211 Move X1, X19
	212 Move X2, X31
	213 Call AndroidJNISafe.GetBooleanField, X0, X1
	214 Move X8, 0x1E34000
	215 Move X8, [X8+2904]
	216 And W9, W0, 1
	217 Move [X31+8], W9
	218 Move X8, [X8]
	219 Add X1, X31, 8
	220 Move X0, X8
	221 Call 0x1C17E04
	222 Move X8, [X24]
	223 Move X20, X0
	224 Move X19, [X8+8]
	225 Move W8, [X19+309]
	226 Move TEMP, X8
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {233}
	230 Move X0, X19
	231 Call 0x1C5D684
	232 Move X19, X0
	233 Compare X20, 0
	234 JumpIfEqual {243}
	235 Move X0, X20
	236 Move X1, X19
	237 Call 0x1C17E00
	238 Compare X0, 0
	239 JumpIfNotEqual {244}
	240 Move X0, X20
	241 Move X1, X19
	242 Call 0x1C181E0
	243 Move X0, X31
	244 Move X20, [X31+64]
	245 Move X19, [X31+72]
	246 Move X22, [X31+48]
	247 Move X21, [X31+56]
	248 Move X24, [X31+32]
	249 Move X23, [X31+40]
	250 Move X26, [X31+16]
	251 Move X25, [X31+24]
	252 Move X30, [X31+80]
	253 Return X0
	254 Move X0, [X25]
	255 Move X8, [X24]
	256 Move W9, [X0+224]
	257 Move X22, [X8]
	258 Compare W9, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X0, X22
	262 Move X1, X31
	263 Call Type.GetTypeFromHandle, X0
	264 Move X8, 0x1E5D000
	265 Move X8, [X8+1680]
	266 Move X22, X0
	267 Move X1, X31
	268 Move X8, [X8]
	269 Move X0, X8
	270 Call Type.GetTypeFromHandle, X0
	271 Move X1, X0
	272 Move X0, X22
	273 Move X2, X31
	274 Call Type.op_Equality, X0, X1
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {343}
	279 Move X0, [X20+16]
	280 Move X1, X31
	281 Call GlobalJavaObjectRef.op_Implicit, X0
	282 Move X1, X19
	283 Move X2, X31
	284 Call AndroidJNISafe.GetObjectField, X0, X1
	285 Move X1, X31
	286 Move X2, X31
	287 Move X19, X0
	288 Call IntPtr.op_Equality, X0, X1
	289 Move W8, W0
	290 Move X0, X31
	291 Move TEMP, X8
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfEqual {244}
	295 Move X0, X19
	296 Move X1, X31
	297 Call AndroidJavaObject.AndroidJavaClassDeleteLocalRef, X0
	298 Move X0, [X25]
	299 Move X8, [X24]
	300 Move W9, [X0+224]
	301 Move X21, [X8]
	302 Compare W9, 0
	303 JumpIfNotEqual {305}
	304 Call 0x1C17DFC
	305 Move X0, X21
	306 Move X1, X31
	307 Call Type.GetTypeFromHandle, X0
	308 Move X8, 0x1E5B000
	309 Move X8, [X8+3432]
	310 Move X21, X0
	311 Move X1, X31
	312 Move X8, [X8]
	313 Move X0, X8
	314 Call Type.GetTypeFromHandle, X0
	315 Move X1, X0
	316 Move X0, X21
	317 Move X2, X31
	318 Call Type.op_Equality, X0, X1
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {387}
	323 Move X8, 0x1E34000
	324 Move X8, [X8+2600]
	325 Move X0, [X8]
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X8, 0x1E5D000
	331 Move X8, [X8+2720]
	332 Move X1, X31
	333 Move X0, [X8]
	334 Call Debug.LogWarning, X0
	335 Move X0, [X20+16]
	336 Move X1, X31
	337 Call GlobalJavaObjectRef.op_Implicit, X0
	338 Move X1, X19
	339 Move X2, X31
	340 Call AndroidJNISafe.GetSByteField, X0, X1
	341 Move X8, 0x1E35000
	342 Move X8, [X8+2520]
	343 Move X0, [X25]
	344 Move X8, [X24]
	345 Move W9, [X0+224]
	346 Move X22, [X8]
	347 Compare W9, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X0, X22
	351 Move X1, X31
	352 Call Type.GetTypeFromHandle, X0
	353 Move X8, 0x1E5D000
	354 Move X8, [X8+1688]
	355 Move X22, X0
	356 Move X1, X31
	357 Move X8, [X8]
	358 Move X0, X8
	359 Call Type.GetTypeFromHandle, X0
	360 Move X1, X0
	361 Move X0, X22
	362 Move X2, X31
	363 Call Type.op_Equality, X0, X1
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {422}
	368 Move X0, [X20+16]
	369 Move X1, X31
	370 Call GlobalJavaObjectRef.op_Implicit, X0
	371 Move X1, X19
	372 Move X2, X31
	373 Call AndroidJNISafe.GetObjectField, X0, X1
	374 Move X1, X31
	375 Move X2, X31
	376 Move X19, X0
	377 Call IntPtr.op_Equality, X0, X1
	378 Move W8, W0
	379 Move X0, X31
	380 Move TEMP, X8
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfEqual {244}
	384 Move X0, X19
	385 Move X1, X31
	386 Call AndroidJavaObject.AndroidJavaObjectDeleteLocalRef, X0
	387 Move X0, [X25]
	388 Move X8, [X24]
	389 Move W9, [X0+224]
	390 Move X21, [X8]
	391 Compare W9, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Move X0, X21
	395 Move X1, X31
	396 Call Type.GetTypeFromHandle, X0
	397 Move X8, 0x1E5B000
	398 Move X8, [X8+3472]
	399 Move X21, X0
	400 Move X1, X31
	401 Move X8, [X8]
	402 Move X0, X8
	403 Call Type.GetTypeFromHandle, X0
	404 Move X1, X0
	405 Move X0, X21
	406 Move X2, X31
	407 Call Type.op_Equality, X0, X1
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {473}
	412 Move X0, [X20+16]
	413 Move X1, X31
	414 Call GlobalJavaObjectRef.op_Implicit, X0
	415 Move X1, X19
	416 Move X2, X31
	417 Call AndroidJNISafe.GetSByteField, X0, X1
	418 Move X8, 0x1E5D000
	419 Move X8, [X8+1712]
	420 Move X8, [X8]
	421 Move [X31+8], W0
	422 Move X8, 0x1E5D000
	423 Move X0, [X25]
	424 Move X8, [X8+1704]
	425 Move W9, [X0+224]
	426 Move X22, [X8]
	427 Compare W9, 0
	428 JumpIfNotEqual {430}
	429 Call 0x1C17DFC
	430 Move X0, X22
	431 Move X1, X31
	432 Call Type.GetTypeFromHandle, X0
	433 Move X8, [X24]
	434 Move X22, X0
	435 Move X1, X31
	436 Move X8, [X8]
	437 Move X0, X8
	438 Call Type.GetTypeFromHandle, X0
	439 Move X8, [X26]
	440 Move X23, X0
	441 Move W9, [X8+224]
	442 Compare W9, 0
	443 JumpIfNotEqual {446}
	444 Move X0, X8
	445 Call 0x1C17DFC
	446 Move X0, X22
	447 Move X1, X23
	448 Move X2, X31
	449 Call AndroidReflection.IsAssignableFrom, X0, X1
	450 Move TEMP, X0
	451 And TEMP, TEMP, 1
	452 Compare TEMP, 1
	453 JumpIfNotEqual {647}
	454 Move X0, [X20+16]
	455 Move X1, X31
	456 Call GlobalJavaObjectRef.op_Implicit, X0
	457 Move X1, X19
	458 Move X2, X31
	459 Call AndroidJNISafe.GetObjectField, X0, X1
	460 Move X8, [X24]
	461 Move X20, [X31+64]
	462 Move X19, [X31+72]
	463 Move X22, [X31+48]
	464 Move X21, [X31+56]
	465 Move X24, [X31+32]
	466 Move X23, [X31+40]
	467 Move X1, [X8+16]
	468 Move X26, [X31+16]
	469 Move X25, [X31+24]
	470 Move X30, [X31+80]
	471 Call AndroidJavaObject.FromJavaArrayDeleteLocalRef, X0
	472 Return X0
	473 Move X0, [X25]
	474 Move X8, [X24]
	475 Move W9, [X0+224]
	476 Move X21, [X8]
	477 Compare W9, 0
	478 JumpIfNotEqual {480}
	479 Call 0x1C17DFC
	480 Move X0, X21
	481 Move X1, X31
	482 Call Type.GetTypeFromHandle, X0
	483 Move X8, 0x1E5B000
	484 Move X8, [X8+3448]
	485 Move X21, X0
	486 Move X1, X31
	487 Move X8, [X8]
	488 Move X0, X8
	489 Call Type.GetTypeFromHandle, X0
	490 Move X1, X0
	491 Move X0, X21
	492 Move X2, X31
	493 Call Type.op_Equality, X0, X1
	494 Move TEMP, X0
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {508}
	498 Move X0, [X20+16]
	499 Move X1, X31
	500 Call GlobalJavaObjectRef.op_Implicit, X0
	501 Move X1, X19
	502 Move X2, X31
	503 Call AndroidJNISafe.GetShortField, X0, X1
	504 Move X8, 0x1E38000
	505 Move X8, [X8+1576]
	506 Move X8, [X8]
	507 NotImplemented "Instruction STRH not yet implemented."
	508 Move X0, [X25]
	509 Move X8, [X24]
	510 Move W9, [X0+224]
	511 Move X21, [X8]
	512 Compare W9, 0
	513 JumpIfNotEqual {515}
	514 Call 0x1C17DFC
	515 Move X0, X21
	516 Move X1, X31
	517 Call Type.GetTypeFromHandle, X0
	518 Move X8, 0x1E5B000
	519 Move X8, [X8+3464]
	520 Move X21, X0
	521 Move X1, X31
	522 Move X8, [X8]
	523 Move X0, X8
	524 Call Type.GetTypeFromHandle, X0
	525 Move X1, X0
	526 Move X0, X21
	527 Move X2, X31
	528 Call Type.op_Equality, X0, X1
	529 Move TEMP, X0
	530 And TEMP, TEMP, 1
	531 Compare TEMP, 1
	532 JumpIfNotEqual {542}
	533 Move X0, [X20+16]
	534 Move X1, X31
	535 Call GlobalJavaObjectRef.op_Implicit, X0
	536 Move X1, X19
	537 Move X2, X31
	538 Call AndroidJNISafe.GetLongField, X0, X1
	539 Move X8, 0x1E36000
	540 Move X8, [X8+2656]
	541 Move [X31+8], X0
	542 Move X0, [X25]
	543 Move X8, [X24]
	544 Move W9, [X0+224]
	545 Move X21, [X8]
	546 Compare W9, 0
	547 JumpIfNotEqual {549}
	548 Call 0x1C17DFC
	549 Move X0, X21
	550 Move X1, X31
	551 Call Type.GetTypeFromHandle, X0
	552 Move X8, 0x1E5C000
	553 Move X8, [X8+2688]
	554 Move X21, X0
	555 Move X1, X31
	556 Move X8, [X8]
	557 Move X0, X8
	558 Call Type.GetTypeFromHandle, X0
	559 Move X1, X0
	560 Move X0, X21
	561 Move X2, X31
	562 Call Type.op_Equality, X0, X1
	563 Move TEMP, X0
	564 And TEMP, TEMP, 1
	565 Compare TEMP, 1
	566 JumpIfNotEqual {576}
	567 Move X0, [X20+16]
	568 Move X1, X31
	569 Call GlobalJavaObjectRef.op_Implicit, X0
	570 Move X1, X19
	571 Move X2, X31
	572 Call AndroidJNISafe.GetFloatField, X0, X1
	573 Move X8, 0x1E34000
	574 Move X8, [X8+2704]
	575 Move [X31+8], S0
	576 Move X0, [X25]
	577 Move X8, [X24]
	578 Move W9, [X0+224]
	579 Move X21, [X8]
	580 Compare W9, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Move X0, X21
	584 Move X1, X31
	585 Call Type.GetTypeFromHandle, X0
	586 Move X8, 0x1E5C000
	587 Move X8, [X8+2680]
	588 Move X21, X0
	589 Move X1, X31
	590 Move X8, [X8]
	591 Move X0, X8
	592 Call Type.GetTypeFromHandle, X0
	593 Move X1, X0
	594 Move X0, X21
	595 Move X2, X31
	596 Call Type.op_Equality, X0, X1
	597 Move TEMP, X0
	598 And TEMP, TEMP, 1
	599 Compare TEMP, 1
	600 JumpIfNotEqual {612}
	601 Move X0, [X20+16]
	602 Move X1, X31
	603 Call GlobalJavaObjectRef.op_Implicit, X0
	604 Move X1, X19
	605 Move X2, X31
	606 Call AndroidJNISafe.GetDoubleField, X0, X1
	607 Move X8, 0x1E37000
	608 Move X8, [X8+2424]
	609 Move [X31+8], D0
	610 Move X0, [X8]
	611 Add X1, X31, 8
	612 Move X0, [X25]
	613 Move X8, [X24]
	614 Move W9, [X0+224]
	615 Move X21, [X8]
	616 Compare W9, 0
	617 JumpIfNotEqual {619}
	618 Call 0x1C17DFC
	619 Move X0, X21
	620 Move X1, X31
	621 Call Type.GetTypeFromHandle, X0
	622 Move X8, 0x1E5B000
	623 Move X8, [X8+3440]
	624 Move X21, X0
	625 Move X1, X31
	626 Move X8, [X8]
	627 Move X0, X8
	628 Call Type.GetTypeFromHandle, X0
	629 Move X1, X0
	630 Move X0, X21
	631 Move X2, X31
	632 Call Type.op_Equality, X0, X1
	633 Move W8, W0
	634 Move X0, X31
	635 Move TEMP, X8
	636 And TEMP, TEMP, 1
	637 Compare TEMP, 1
	638 JumpIfNotEqual {244}
	639 Move X0, [X20+16]
	640 Move X1, X31
	641 Call GlobalJavaObjectRef.op_Implicit, X0
	642 Move X1, X19
	643 Move X2, X31
	644 Call AndroidJNISafe.GetCharField, X0, X1
	645 Move X8, 0x1E36000
	646 Move X8, [X8+368]
	647 Move X8, [X24]
	648 Move X0, 0x1E34000
	649 Move X19, [X8]
	650 Move X0, [X0+1728]
	651 Call 0x1C17D08
	652 Move W8, [X0+224]
	653 Compare W8, 0
	654 JumpIfNotEqual {656}
	655 Call 0x1C17DFC
	656 Move X0, X19
	657 Move X1, X31
	658 Call Type.GetTypeFromHandle, X0
	659 Move X20, X0
	660 Move X0, 0x1E5D000
	661 Move X0, [X0+2728]
	662 Call 0x1C17D08
	663 Move X19, X0
	664 Move X22, X31
	665 Compare X20, 0
	666 JumpIfEqual {673}
	667 Move X8, [X20]
	668 Move X0, X20
	669 Move X9, [X8+360]
	670 Move X1, [X8+368]
	671 NotImplemented "Instruction BLR not yet implemented."
	672 Move X22, X0
	673 Move X0, 0x1E3C000
	674 Move X0, [X0+2480]
	675 Call 0x1C17D08
	676 Move X2, X0
	677 Move X0, X19
	678 Move X1, X22
	679 Move X3, X31
	680 Call String.Concat, X0, X1, X2
	681 Move X19, X0
	682 Move X0, 0x1E34000
	683 Move X0, [X0+2000]
	684 Call 0x1C17D08
	685 Call 0x1C17F10
	686 Move X1, X19
	687 Move X2, X31
	688 Move X20, X0
	689 Call Exception..ctor, X0, X1
	690 Move X0, X20
	691 Move X1, X21
	692 Call 0x1C17DEC

Method: System.Void _Set(System.String fieldName, FieldType val)

Disassembly:
	0x022C4C70 B 0x22C45F8
	0x022C4C74 BL 0x1C171E0
	0x022C4C78 BL 0x1C16F20
	0x022C4C7C MOV X0, X2
	0x022C4C80 BL 0x1C171E0
	0x022C4C84 ADRP X0, 0x1E2F000
	0x022C4C88 LDR X19, [X19]
	0x022C4C8C LDR X0, [X0 + 0x6C0]
	0x022C4C90 BL 0x1C16D08
	0x022C4C94 LDR W8, [X0 + 0xE0]
	0x022C4C98 CBNZ W8, 0x22C4CA0
	0x022C4C9C BL 0x1C16DFC
	0x022C4CA0 MOV X0, X19
	0x022C4CA4 MOV X1, X31
	0x022C4CA8 BL 0x338C698
	0x022C4CAC MOV X20, X0
	0x022C4CB0 ADRP X0, 0x1E58000
	0x022C4CB4 LDR X0, [X0 + 0xAA8]
	0x022C4CB8 BL 0x1C16D08
	0x022C4CBC MOV X19, X0
	0x022C4CC0 MOV X21, X31
	0x022C4CC4 CBZ X20, 0x22C4CDC
	0x022C4CC8 LDR X8, [X20]
	0x022C4CCC MOV X0, X20
	0x022C4CD0 LDP X9, X1, [X8 + 0x168]
	0x022C4CD4 BLR X9
	0x022C4CD8 MOV X21, X0
	0x022C4CDC ADRP X0, 0x1E37000
	0x022C4CE0 LDR X0, [X0 + 0x9B0]
	0x022C4CE4 BL 0x1C16D08
	0x022C4CE8 MOV X2, X0
	0x022C4CEC MOV X0, X19
	0x022C4CF0 MOV X1, X21
	0x022C4CF4 MOV X3, X31
	0x022C4CF8 BL 0x32274B8
	0x022C4CFC MOV X19, X0
	0x022C4D00 ADRP X0, 0x1E2F000
	0x022C4D04 LDR X0, [X0 + 0x7D0]
	0x022C4D08 BL 0x1C16D08
	0x022C4D0C BL 0x1C16F10
	0x022C4D10 MOV X1, X19
	0x022C4D14 MOV X2, X31
	0x022C4D18 MOV X20, X0
	0x022C4D1C BL 0x33B2C70
	0x022C4D20 MOV X0, X20
	0x022C4D24 MOV X1, X24
	0x022C4D28 BL 0x1C16DEC
	0x022C4D2C BL 0x3EB1B20
	0x022C4D30 STP X29, X30, [X31 - 0x50]!
	0x022C4D34 STR X25, [X31 + 0x10]
	0x022C4D38 STP X24, X23, [X31 + 0x20]
	0x022C4D3C STP X22, X21, [X31 + 0x30]
	0x022C4D40 STP X20, X19, [X31 + 0x40]
	0x022C4D44 ADD X29, X31, 0x0
	0x022C4D48 SUB X31, X31, 0x30
	0x022C4D4C MRS X25, 0xC000
	0x022C4D50 LDR X8, [X25 + 0x28]
	0x022C4D54 MOV X22, X3
	0x022C4D58 MOV X21, X2
	0x022C4D5C MOV X23, X1
	0x022C4D60 STUR X8, [X29 - 0x8]
	0x022C4D64 STUR X2, [X29 - 0x28]
	0x022C4D68 LDR X8, [X3 + 0x38]
	0x022C4D6C MOV X19, X0
	0x022C4D70 CBNZ X8, 0x22C4D80
	0x022C4D74 MOV X0, X22
	0x022C4D78 BL 0x1C5C6E0
	0x022C4D7C LDR X8, [X22 + 0x38]
	0x022C4D80 LDR X8, [X8 + 0x8]
	0x022C4D84 LDR W24, [X8 + 0xFC]
	0x022C4D88 ADD X8, X31, 0x0

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 48
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X22, X3
	015 Move X21, X2
	016 Move X23, X1
	017 Move [X29-8], X8
	018 Move [X29-40], X2
	019 Move X8, [X3+56]
	020 Move X19, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X22
	024 Call 0x1C5D6E0
	025 Move X8, [X22+56]
	026 Move X8, [X8+8]
	027 Move W24, [X8+252]
	028 Add X8, X31, 0
	029 Add X9, X24, 15
	030 And X9, X9, 0x1FFFFFFFF
	031 Subtract X20, X8, X9
	032 Add X31, X20, 0
	033 Move X0, [X19+24]
	034 Move X1, X31
	035 Call GlobalJavaObjectRef.op_Implicit, X0
	036 Move X8, [X22+56]
	037 Move X1, X23
	038 Move W2, W31
	039 Move X3, [X8]
	040 Move X8, [X3]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X22, [X22+56]
	043 Move X23, X0
	044 Move X0, X20
	045 Move X2, X24
	046 Move X8, [X22+8]
	047 Move W8, [X8+40]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X8, X29, 40
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x3EB2AC0
	052 Move X8, [X22+8]
	053 Move X1, [X22+16]
	054 Move W8, [X8+40]
	055 Move X0, [X1]
	056 Move TEMP, X8
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfEqual {61}
	060 Move X20, [X20]
	061 Subtract X8, X29, 16
	062 Move [X29-24], X20
	063 Move [X29-16], X23
	064 Move [X29-32], X8
	065 Move X8, [X1+16]
	066 Subtract X3, X29, 32
	067 Move X2, X19
	068 Move X4, X20
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X25+40]
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X31, X29, 0
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X25, [X31+16]
	081 Move X29, [X31+80]
	082 Move X30, [X31+88]
	083 Return 
	084 Call 0x3EB2B20

Method: System.Void _Set(System.IntPtr fieldID, FieldType val)

Disassembly:
	0x022C3CCC ADD X9, X24, 0xF
	0x022C3CD0 AND X9, X9, 0x1FFFFFFFF
	0x022C3CD4 SUB X20, X8, X9
	0x022C3CD8 ADD X31, X20, 0x0
	0x022C3CDC LDR X0, [X19 + 0x18]
	0x022C3CE0 MOV X1, X31
	0x022C3CE4 BL 0x3BEF01C
	0x022C3CE8 LDR X8, [X22 + 0x38]
	0x022C3CEC MOV X1, X23
	0x022C3CF0 MOV W2, W31
	0x022C3CF4 LDR X3, [X8]
	0x022C3CF8 LDR X8, [X3]
	0x022C3CFC BLR X8
	0x022C3D00 LDR X22, [X22 + 0x38]
	0x022C3D04 MOV X23, X0
	0x022C3D08 MOV X0, X20
	0x022C3D0C MOV X2, X24
	0x022C3D10 LDR X8, [X22 + 0x8]
	0x022C3D14 LDR W8, [X8 + 0x28]
	0x022C3D18 CMP W8, 0x0
	0x022C3D1C SUB X8, X29, 0x28
	0x022C3D20 CSEL X1, X21, X8, LT
	0x022C3D24 BL 0x3EB1AC0
	0x022C3D28 LDP X8, X1, [X22 + 0x8]
	0x022C3D2C LDR W8, [X8 + 0x28]
	0x022C3D30 LDR X0, [X1]
	0x022C3D34 TBNZ X8, 0x1F, 0x22C3D3C
	0x022C3D38 LDR X20, [X20]
	0x022C3D3C SUB X8, X29, 0x10
	0x022C3D40 STP X20, X23, [X29 - 0x18]
	0x022C3D44 STUR X8, [X29 - 0x20]
	0x022C3D48 LDR X8, [X1 + 0x10]
	0x022C3D4C SUB X3, X29, 0x20
	0x022C3D50 MOV X2, X19
	0x022C3D54 MOV X4, X20
	0x022C3D58 BLR X8
	0x022C3D5C LDR X8, [X25 + 0x28]
	0x022C3D60 LDUR X9, [X29 - 0x8]
	0x022C3D64 CMP X8, X9
	0x022C3D68 B.NE 0x22C3D88
	0x022C3D6C ADD X31, X29, 0x0
	0x022C3D70 LDP X20, X19, [X31 + 0x40]
	0x022C3D74 LDP X22, X21, [X31 + 0x30]
	0x022C3D78 LDP X24, X23, [X31 + 0x20]
	0x022C3D7C LDR X25, [X31 + 0x10]
	0x022C3D80 LDP X29, X30, [X31], #0x50
	0x022C3D84 RET
	0x022C3D88 BL 0x3EB1B20
	0x022C3D8C STP X29, X30, [X31 - 0x60]!
	0x022C3D90 STP X28, X27, [X31 + 0x10]
	0x022C3D94 STP X26, X25, [X31 + 0x20]
	0x022C3D98 STP X24, X23, [X31 + 0x30]
	0x022C3D9C STP X22, X21, [X31 + 0x40]
	0x022C3DA0 STP X20, X19, [X31 + 0x50]
	0x022C3DA4 ADD X29, X31, 0x0
	0x022C3DA8 SUB X31, X31, 0x20
	0x022C3DAC MRS X8, 0xC000
	0x022C3DB0 STP X1, X8, [X29 - 0x20]
	0x022C3DB4 LDR X8, [X8 + 0x28]
	0x022C3DB8 MOV X28, X3
	0x022C3DBC MOV X24, X3
	0x022C3DC0 MOV X21, X2
	0x022C3DC4 STUR X8, [X29 - 0x8]
	0x022C3DC8 STUR X2, [X29 - 0x10]
	0x022C3DCC LDR X8, [X28 + 0x38]!
	0x022C3DD0 MOV X23, X0
	0x022C3DD4 CBNZ X8, 0x22C3F6C
	0x022C3DD8 ADRP X0, 0x1E59000
	0x022C3DDC LDR X0, [X0 + 0x690]
	0x022C3DE0 BL 0x1C16CF4
	0x022C3DE4 ADRP X0, 0x1E30000
	0x022C3DE8 LDR X0, [X0 + 0x990]
	0x022C3DEC BL 0x1C16CF4
	0x022C3DF0 ADRP X0, 0x1E59000
	0x022C3DF4 LDR X0, [X0 + 0x698]
	0x022C3DF8 BL 0x1C16CF4
	0x022C3DFC ADRP X0, 0x1E59000
	0x022C3E00 LDR X0, [X0 + 0xA10]
	0x022C3E04 BL 0x1C16CF4
	0x022C3E08 ADRP X0, 0x1E59000
	0x022C3E0C LDR X0, [X0 + 0xAB0]
	0x022C3E10 BL 0x1C16CF4
	0x022C3E14 ADRP X0, 0x1E59000
	0x022C3E18 LDR X0, [X0 + 0xAB8]
	0x022C3E1C BL 0x1C16CF4
	0x022C3E20 ADRP X0, 0x1E59000
	0x022C3E24 LDR X0, [X0 + 0x6A0]
	0x022C3E28 BL 0x1C16CF4
	0x022C3E2C ADRP X0, 0x1E59000
	0x022C3E30 LDR X0, [X0 + 0x248]
	0x022C3E34 BL 0x1C16CF4
	0x022C3E38 ADRP X0, 0x1E30000
	0x022C3E3C LDR X0, [X0 + 0xB58]
	0x022C3E40 BL 0x1C16CF4
	0x022C3E44 ADRP X0, 0x1E57000
	0x022C3E48 LDR X0, [X0 + 0xD68]
	0x022C3E4C BL 0x1C16CF4
	0x022C3E50 ADRP X0, 0x1E31000
	0x022C3E54 LDR X0, [X0 + 0x9D8]
	0x022C3E58 BL 0x1C16CF4
	0x022C3E5C ADRP X0, 0x1E57000
	0x022C3E60 LDR X0, [X0 + 0xD70]
	0x022C3E64 BL 0x1C16CF4
	0x022C3E68 ADRP X0, 0x1E32000
	0x022C3E6C LDR X0, [X0 + 0x170]
	0x022C3E70 BL 0x1C16CF4
	0x022C3E74 ADRP X0, 0x1E30000
	0x022C3E78 LDR X0, [X0 + 0xA28]
	0x022C3E7C BL 0x1C16CF4
	0x022C3E80 ADRP X0, 0x1E58000
	0x022C3E84 LDR X0, [X0 + 0xA78]
	0x022C3E88 BL 0x1C16CF4
	0x022C3E8C ADRP X0, 0x1E33000
	0x022C3E90 LDR X0, [X0 + 0x978]
	0x022C3E94 BL 0x1C16CF4
	0x022C3E98 ADRP X0, 0x1E57000
	0x022C3E9C LDR X0, [X0 + 0xD78]
	0x022C3EA0 BL 0x1C16CF4
	0x022C3EA4 ADRP X0, 0x1E34000
	0x022C3EA8 LDR X0, [X0 + 0x628]
	0x022C3EAC BL 0x1C16CF4
	0x022C3EB0 ADRP X0, 0x1E57000
	0x022C3EB4 LDR X0, [X0 + 0xD80]
	0x022C3EB8 BL 0x1C16CF4
	0x022C3EBC ADRP X0, 0x1E30000
	0x022C3EC0 LDR X0, [X0 + 0x758]
	0x022C3EC4 BL 0x1C16CF4
	0x022C3EC8 ADRP X0, 0x1E57000
	0x022C3ECC LDR X0, [X0 + 0xD88]
	0x022C3ED0 BL 0x1C16CF4
	0x022C3ED4 ADRP X0, 0x1E32000
	0x022C3ED8 LDR X0, [X0 + 0xA60]
	0x022C3EDC BL 0x1C16CF4
	0x022C3EE0 ADRP X0, 0x1E59000
	0x022C3EE4 LDR X0, [X0 + 0x6A8]
	0x022C3EE8 BL 0x1C16CF4
	0x022C3EEC ADRP X0, 0x1E30000
	0x022C3EF0 LDR X0, [X0 + 0xEF0]
	0x022C3EF4 BL 0x1C16CF4
	0x022C3EF8 ADRP X0, 0x1E57000
	0x022C3EFC LDR X0, [X0 + 0xD90]
	0x022C3F00 BL 0x1C16CF4
	0x022C3F04 ADRP X0, 0x1E59000
	0x022C3F08 LDR X0, [X0 + 0x6B0]
	0x022C3F0C BL 0x1C16CF4
	0x022C3F10 ADRP X0, 0x1E58000
	0x022C3F14 LDR X0, [X0 + 0xA80]
	0x022C3F18 BL 0x1C16CF4
	0x022C3F1C ADRP X0, 0x1E30000
	0x022C3F20 LDR X0, [X0 + 0xA90]
	0x022C3F24 BL 0x1C16CF4
	0x022C3F28 ADRP X0, 0x1E58000
	0x022C3F2C LDR X0, [X0 + 0xB60]
	0x022C3F30 BL 0x1C16CF4
	0x022C3F34 ADRP X0, 0x1E32000
	0x022C3F38 LDR X0, [X0 + 0x278]
	0x022C3F3C BL 0x1C16CF4
	0x022C3F40 ADRP X0, 0x1E30000
	0x022C3F44 LDR X0, [X0 + 0x6C0]
	0x022C3F48 BL 0x1C16CF4
	0x022C3F4C ADRP X0, 0x1E59000
	0x022C3F50 LDR X0, [X0 + 0xAC0]
	0x022C3F54 BL 0x1C16CF4
	0x022C3F58 LDR X8, [X28]
	0x022C3F5C CBNZ X8, 0x22C3F6C
	0x022C3F60 MOV X0, X24
	0x022C3F64 BL 0x1C5C6E0
	0x022C3F68 LDR X8, [X24 + 0x38]
	0x022C3F6C LDP X25, X9, [X8]
	0x022C3F70 LDR W22, [X9 + 0xFC]
	0x022C3F74 ADD X9, X31, 0x0
	0x022C3F78 ADD X10, X22, 0xF
	0x022C3F7C AND X10, X10, 0x1FFFFFFFF
	0x022C3F80 SUB X20, X9, X10
	0x022C3F84 ADD X31, X20, 0x0
	0x022C3F88 ADRP X19, 0x1E30000
	0x022C3F8C LDR X19, [X19 + 0x6C0]
	0x022C3F90 LDR X0, [X19]
	0x022C3F94 LDR W9, [X0 + 0xE0]
	0x022C3F98 CBNZ W9, 0x22C3FA0
	0x022C3F9C BL 0x1C16DFC
	0x022C3FA0 MOV X0, X25
	0x022C3FA4 MOV X1, X31
	0x022C3FA8 BL 0x338C698
	0x022C3FAC ADRP X27, 0x1E59000
	0x022C3FB0 LDR X27, [X27 + 0x6A0]
	0x022C3FB4 MOV X25, X0
	0x022C3FB8 LDR X8, [X27]
	0x022C3FBC LDR W9, [X8 + 0xE0]
	0x022C3FC0 CBNZ W9, 0x22C3FCC
	0x022C3FC4 MOV X0, X8
	0x022C3FC8 BL 0x1C16DFC
	0x022C3FCC MOV X0, X25
	0x022C3FD0 MOV X1, X31
	0x022C3FD4 BL 0x3BF3054
	0x022C3FD8 LDR X8, [X19]
	0x022C3FDC LDR X9, [X28]
	0x022C3FE0 MOV W26, W0
	0x022C3FE4 LDR W10, [X8 + 0xE0]
	0x022C3FE8 LDR X25, [X9]
	0x022C3FEC CBNZ W10, 0x22C3FF8
	0x022C3FF0 MOV X0, X8
	0x022C3FF4 BL 0x1C16DFC
	0x022C3FF8 MOV X0, X25
	0x022C3FFC MOV X1, X31
	0x022C4000 BL 0x338C698
	0x022C4004 MOV X25, X0
	0x022C4008 TBZ X26, 0x0, 0x22C40B4
	0x022C400C ADRP X8, 0x1E56000
	0x022C4010 LDR X8, [X8 + 0xD80]
	0x022C4014 MOV X1, X31
	0x022C4018 LDR X0, [X8]
	0x022C401C BL 0x338C698
	0x022C4020 MOV X1, X0
	0x022C4024 MOV X0, X25
	0x022C4028 MOV X2, X31
	0x022C402C BL 0x3395194
	0x022C4030 TBZ X0, 0x0, 0x22C4150
	0x022C4034 LDR X0, [X23 + 0x18]
	0x022C4038 MOV X1, X31
	0x022C403C BL 0x3BEF01C
	0x022C4040 LDR X19, [X28]
	0x022C4044 MOV X23, X0
	0x022C4048 MOV X0, X20
	0x022C404C MOV X2, X22
	0x022C4050 LDR X8, [X19 + 0x8]
	0x022C4054 LDR W8, [X8 + 0x28]
	0x022C4058 CMP W8, 0x0
	0x022C405C SUB X8, X29, 0x10
	0x022C4060 CSEL X1, X21, X8, LT
	0x022C4064 BL 0x3EB1AC0
	0x022C4068 LDR X0, [X19 + 0x8]
	0x022C406C MOV X1, X20
	0x022C4070 BL 0x1C16E04
	0x022C4074 CBZ X0, 0x22C4C78
	0x022C4078 ADRP X8, 0x1E2F000
	0x022C407C LDR X8, [X8 + 0x758]
	0x022C4080 LDR X9, [X0]
	0x022C4084 LDR X1, [X8]
	0x022C4088 LDR X8, [X9 + 0x40]
	0x022C408C LDR X9, [X1 + 0x40]
	0x022C4090 CMP X8, X9
	0x022C4094 B.NE 0x22C4C74
	0x022C4098 BL 0x1C16E08
	0x022C409C LDR W2, [X0]
	0x022C40A0 LDUR X1, [X29 - 0x20]
	0x022C40A4 MOV X0, X23
	0x022C40A8 MOV X3, X31
	0x022C40AC BL 0x3BEC4FC
	0x022C40B0 B 0x22C45F8
	0x022C40B4 ADRP X8, 0x1E57000
	0x022C40B8 LDR X8, [X8 + 0xB60]
	0x022C40BC MOV X1, X31
	0x022C40C0 LDR X0, [X8]
	0x022C40C4 BL 0x338C698
	0x022C40C8 MOV X1, X0
	0x022C40CC MOV X0, X25
	0x022C40D0 MOV X2, X31
	0x022C40D4 BL 0x3395194
	0x022C40D8 TBZ X0, 0x0, 0x22C4224
	0x022C40DC LDR X0, [X23 + 0x18]
	0x022C40E0 MOV X1, X31
	0x022C40E4 BL 0x3BEF01C
	0x022C40E8 LDR X19, [X28]
	0x022C40EC MOV X23, X0
	0x022C40F0 MOV X0, X20
	0x022C40F4 MOV X2, X22
	0x022C40F8 LDR X8, [X19 + 0x8]
	0x022C40FC LDR W8, [X8 + 0x28]
	0x022C4100 CMP W8, 0x0
	0x022C4104 SUB X8, X29, 0x10
	0x022C4108 CSEL X1, X21, X8, LT
	0x022C410C BL 0x3EB1AC0
	0x022C4110 LDR X0, [X19 + 0x8]
	0x022C4114 MOV X1, X20
	0x022C4118 BL 0x1C16E04
	0x022C411C MOV X2, X0
	0x022C4120 CBZ X0, 0x22C413C
	0x022C4124 ADRP X8, 0x1E31000
	0x022C4128 LDR X8, [X8 + 0x278]
	0x022C412C LDR X1, [X8]
	0x022C4130 LDR X8, [X2]
	0x022C4134 CMP X8, X1
	0x022C4138 B.NE 0x22C4C7C
	0x022C413C LDUR X1, [X29 - 0x20]
	0x022C4140 MOV X0, X23
	0x022C4144 MOV X3, X31
	0x022C4148 BL 0x3BEBF1C
	0x022C414C B 0x22C45F8
	0x022C4150 LDR X0, [X19]
	0x022C4154 LDR X8, [X28]
	0x022C4158 LDR W9, [X0 + 0xE0]
	0x022C415C LDR X24, [X8]
	0x022C4160 CBNZ W9, 0x22C4168
	0x022C4164 BL 0x1C16DFC
	0x022C4168 MOV X0, X24
	0x022C416C MOV X1, X31
	0x022C4170 BL 0x338C698
	0x022C4174 ADRP X8, 0x1E58000
	0x022C4178 LDR X8, [X8 + 0x248]
	0x022C417C MOV X24, X0
	0x022C4180 MOV X1, X31
	0x022C4184 LDR X8, [X8]
	0x022C4188 MOV X0, X8
	0x022C418C BL 0x338C698
	0x022C4190 MOV X1, X0
	0x022C4194 MOV X0, X24
	0x022C4198 MOV X2, X31
	0x022C419C BL 0x3395194
	0x022C41A0 TBZ X0, 0x0, 0x22C4330
	0x022C41A4 LDR X0, [X23 + 0x18]
	0x022C41A8 MOV X1, X31
	0x022C41AC BL 0x3BEF01C
	0x022C41B0 LDR X19, [X28]
	0x022C41B4 MOV X23, X0
	0x022C41B8 MOV X0, X20
	0x022C41BC MOV X2, X22
	0x022C41C0 LDR X8, [X19 + 0x8]
	0x022C41C4 LDR W8, [X8 + 0x28]
	0x022C41C8 CMP W8, 0x0
	0x022C41CC SUB X8, X29, 0x10
	0x022C41D0 CSEL X1, X21, X8, LT
	0x022C41D4 BL 0x3EB1AC0
	0x022C41D8 LDR X0, [X19 + 0x8]
	0x022C41DC MOV X1, X20
	0x022C41E0 BL 0x1C16E04
	0x022C41E4 CBZ X0, 0x22C4C78
	0x022C41E8 ADRP X8, 0x1E2F000
	0x022C41EC LDR X8, [X8 + 0xB58]
	0x022C41F0 LDR X9, [X0]
	0x022C41F4 LDR X1, [X8]
	0x022C41F8 LDR X8, [X9 + 0x40]
	0x022C41FC LDR X9, [X1 + 0x40]
	0x022C4200 CMP X8, X9
	0x022C4204 B.NE 0x22C4C74
	0x022C4208 BL 0x1C16E08
	0x022C420C LDRB W2, [X0]
	0x022C4210 LDUR X1, [X29 - 0x20]
	0x022C4214 MOV X0, X23
	0x022C4218 MOV X3, X31
	0x022C421C BL 0x3BEC440
	0x022C4220 B 0x22C45F8
	0x022C4224 LDR X0, [X19]
	0x022C4228 LDR X8, [X28]
	0x022C422C LDR W9, [X0 + 0xE0]
	0x022C4230 LDR X25, [X8]
	0x022C4234 CBNZ W9, 0x22C423C
	0x022C4238 BL 0x1C16DFC
	0x022C423C MOV X0, X25
	0x022C4240 MOV X1, X31
	0x022C4244 BL 0x338C698
	0x022C4248 ADRP X8, 0x1E58000
	0x022C424C LDR X8, [X8 + 0x690]
	0x022C4250 MOV X25, X0
	0x022C4254 MOV X1, X31
	0x022C4258 LDR X8, [X8]
	0x022C425C MOV X0, X8
	0x022C4260 BL 0x338C698
	0x022C4264 MOV X1, X0
	0x022C4268 MOV X0, X25
	0x022C426C MOV X2, X31
	0x022C4270 BL 0x3395194
	0x022C4274 TBZ X0, 0x0, 0x22C4400
	0x022C4278 LDR X0, [X23 + 0x18]
	0x022C427C MOV X1, X31
	0x022C4280 BL 0x3BEF01C
	0x022C4284 LDR X24, [X28]
	0x022C4288 SUB X19, X29, 0x10
	0x022C428C MOV X23, X0
	0x022C4290 MOV X0, X20
	0x022C4294 LDR X8, [X24 + 0x8]
	0x022C4298 MOV X2, X22
	0x022C429C LDR W8, [X8 + 0x28]
	0x022C42A0 CMP W8, 0x0
	0x022C42A4 CSEL X1, X21, X19, LT
	0x022C42A8 BL 0x3EB1AC0
	0x022C42AC LDR X0, [X24 + 0x8]
	0x022C42B0 MOV X1, X20
	0x022C42B4 BL 0x1C16ED4
	0x022C42B8 MOV X2, X31
	0x022C42BC TBZ X0, 0x0, 0x22C4514
	0x022C42C0 LDR X21, [X28]
	0x022C42C4 LDUR X9, [X29 - 0x10]
	0x022C42C8 MOV X0, X20
	0x022C42CC MOV X2, X22
	0x022C42D0 LDR X8, [X21 + 0x8]
	0x022C42D4 LDR W8, [X8 + 0x28]
	0x022C42D8 CMP W8, 0x0
	0x022C42DC CSEL X1, X9, X19, LT
	0x022C42E0 BL 0x3EB1AC0
	0x022C42E4 LDR X0, [X21 + 0x8]
	0x022C42E8 MOV X1, X20
	0x022C42EC BL 0x1C16E04
	0x022C42F0 CBZ X0, 0x22C4C78
	0x022C42F4 ADRP X9, 0x1E2F000
	0x022C42F8 LDR X9, [X9 + 0x990]
	0x022C42FC LDR X8, [X0]
	0x022C4300 LDR X1, [X9]
	0x022C4304 LDRB W10, [X8 + 0x130]
	0x022C4308 LDRB W9, [X1 + 0x130]
	0x022C430C CMP W10, W9
	0x022C4310 B.CC 0x22C4C74
	0x022C4314 LDR X8, [X8 + 0xC8]
	0x022C4318 ADD X8, X8, X9, 0x3, LSL
	0x022C431C LDUR X8, [X8 - 0x8]
	0x022C4320 CMP X8, X1
	0x022C4324 B.NE 0x22C4C74
	0x022C4328 LDR X0, [X0 + 0x18]
	0x022C432C B 0x22C4508
	0x022C4330 LDR X0, [X19]
	0x022C4334 LDR X8, [X28]
	0x022C4338 LDR W9, [X0 + 0xE0]
	0x022C433C LDR X24, [X8]
	0x022C4340 CBNZ W9, 0x22C4348
	0x022C4344 BL 0x1C16DFC
	0x022C4348 MOV X0, X24
	0x022C434C MOV X1, X31
	0x022C4350 BL 0x338C698
	0x022C4354 ADRP X8, 0x1E56000
	0x022C4358 LDR X8, [X8 + 0xD68]
	0x022C435C MOV X24, X0
	0x022C4360 MOV X1, X31
	0x022C4364 LDR X8, [X8]
	0x022C4368 MOV X0, X8
	0x022C436C BL 0x338C698
	0x022C4370 MOV X1, X0
	0x022C4374 MOV X0, X24
	0x022C4378 MOV X2, X31
	0x022C437C BL 0x3395194
	0x022C4380 TBZ X0, 0x0, 0x22C4528
	0x022C4384 ADRP X8, 0x1E2F000
	0x022C4388 LDR X8, [X8 + 0xA28]
	0x022C438C LDR X0, [X8]
	0x022C4390 LDR W8, [X0 + 0xE0]
	0x022C4394 CBNZ W8, 0x22C439C
	0x022C4398 BL 0x1C16DFC
	0x022C439C ADRP X8, 0x1E58000
	0x022C43A0 LDR X8, [X8 + 0xAC0]
	0x022C43A4 MOV X1, X31
	0x022C43A8 LDR X0, [X8]
	0x022C43AC BL 0x3C06A04
	0x022C43B0 LDR X0, [X23 + 0x18]
	0x022C43B4 MOV X1, X31
	0x022C43B8 BL 0x3BEF01C
	0x022C43BC LDR X19, [X28]
	0x022C43C0 MOV X23, X0
	0x022C43C4 MOV X0, X20
	0x022C43C8 MOV X2, X22
	0x022C43CC LDR X8, [X19 + 0x8]
	0x022C43D0 LDR W8, [X8 + 0x28]
	0x022C43D4 CMP W8, 0x0
	0x022C43D8 SUB X8, X29, 0x10
	0x022C43DC CSEL X1, X21, X8, LT
	0x022C43E0 BL 0x3EB1AC0
	0x022C43E4 LDR X0, [X19 + 0x8]
	0x022C43E8 MOV X1, X20
	0x022C43EC BL 0x1C16E04
	0x022C43F0 CBZ X0, 0x22C4C78
	0x022C43F4 ADRP X8, 0x1E30000
	0x022C43F8 LDR X8, [X8 + 0x9D8]
	0x022C43FC B 0x22C45C8
	0x022C4400 LDR X0, [X19]
	0x022C4404 LDR X8, [X28]
	0x022C4408 LDR W9, [X0 + 0xE0]
	0x022C440C LDR X25, [X8]
	0x022C4410 CBNZ W9, 0x22C4418
	0x022C4414 BL 0x1C16DFC
	0x022C4418 MOV X0, X25
	0x022C441C MOV X1, X31
	0x022C4420 BL 0x338C698
	0x022C4424 ADRP X8, 0x1E58000
	0x022C4428 LDR X8, [X8 + 0x698]
	0x022C442C MOV X25, X0
	0x022C4430 MOV X1, X31
	0x022C4434 LDR X8, [X8]
	0x022C4438 MOV X0, X8
	0x022C443C BL 0x338C698
	0x022C4440 MOV X1, X0
	0x022C4444 MOV X0, X25
	0x022C4448 MOV X2, X31
	0x022C444C BL 0x3395194
	0x022C4450 TBZ X0, 0x0, 0x22C462C
	0x022C4454 LDR X0, [X23 + 0x18]
	0x022C4458 MOV X1, X31
	0x022C445C BL 0x3BEF01C
	0x022C4460 LDR X24, [X28]
	0x022C4464 SUB X19, X29, 0x10
	0x022C4468 MOV X23, X0
	0x022C446C MOV X0, X20
	0x022C4470 LDR X8, [X24 + 0x8]
	0x022C4474 MOV X2, X22
	0x022C4478 LDR W8, [X8 + 0x28]
	0x022C447C CMP W8, 0x0
	0x022C4480 CSEL X1, X21, X19, LT
	0x022C4484 BL 0x3EB1AC0
	0x022C4488 LDR X0, [X24 + 0x8]
	0x022C448C MOV X1, X20
	0x022C4490 BL 0x1C16ED4
	0x022C4494 MOV X2, X31
	0x022C4498 TBZ X0, 0x0, 0x22C4514
	0x022C449C LDR X21, [X28]
	0x022C44A0 LDUR X9, [X29 - 0x10]
	0x022C44A4 MOV X0, X20
	0x022C44A8 MOV X2, X22
	0x022C44AC LDR X8, [X21 + 0x8]
	0x022C44B0 LDR W8, [X8 + 0x28]
	0x022C44B4 CMP W8, 0x0
	0x022C44B8 CSEL X1, X9, X19, LT
	0x022C44BC BL 0x3EB1AC0
	0x022C44C0 LDR X0, [X21 + 0x8]
	0x022C44C4 MOV X1, X20
	0x022C44C8 BL 0x1C16E04
	0x022C44CC CBZ X0, 0x22C4C78
	0x022C44D0 ADRP X9, 0x1E58000
	0x022C44D4 LDR X9, [X9 + 0xA10]
	0x022C44D8 LDR X8, [X0]
	0x022C44DC LDR X1, [X9]
	0x022C44E0 LDRB W10, [X8 + 0x130]
	0x022C44E4 LDRB W9, [X1 + 0x130]
	0x022C44E8 CMP W10, W9
	0x022C44EC B.CC 0x22C4C74
	0x022C44F0 LDR X8, [X8 + 0xC8]
	0x022C44F4 ADD X8, X8, X9, 0x3, LSL
	0x022C44F8 LDUR X8, [X8 - 0x8]
	0x022C44FC CMP X8, X1
	0x022C4500 B.NE 0x22C4C74
	0x022C4504 LDR X0, [X0 + 0x10]
	0x022C4508 MOV X1, X31
	0x022C450C BL 0x3BEF01C
	0x022C4510 MOV X2, X0
	0x022C4514 LDUR X1, [X29 - 0x20]
	0x022C4518 MOV X0, X23
	0x022C451C MOV X3, X31
	0x022C4520 BL 0x3BEBE60
	0x022C4524 B 0x22C45F8
	0x022C4528 LDR X0, [X19]
	0x022C452C LDR X8, [X28]
	0x022C4530 LDR W9, [X0 + 0xE0]
	0x022C4534 LDR X24, [X8]
	0x022C4538 CBNZ W9, 0x22C4540
	0x022C453C BL 0x1C16DFC
	0x022C4540 MOV X0, X24
	0x022C4544 MOV X1, X31
	0x022C4548 BL 0x338C698
	0x022C454C ADRP X8, 0x1E56000
	0x022C4550 LDR X8, [X8 + 0xD90]
	0x022C4554 MOV X24, X0
	0x022C4558 MOV X1, X31
	0x022C455C LDR X8, [X8]
	0x022C4560 MOV X0, X8
	0x022C4564 BL 0x338C698
	0x022C4568 MOV X1, X0
	0x022C456C MOV X0, X24
	0x022C4570 MOV X2, X31
	0x022C4574 BL 0x3395194
	0x022C4578 TBZ X0, 0x0, 0x22C4754
	0x022C457C LDR X0, [X23 + 0x18]
	0x022C4580 MOV X1, X31
	0x022C4584 BL 0x3BEF01C
	0x022C4588 LDR X19, [X28]
	0x022C458C MOV X23, X0
	0x022C4590 MOV X0, X20
	0x022C4594 MOV X2, X22
	0x022C4598 LDR X8, [X19 + 0x8]
	0x022C459C LDR W8, [X8 + 0x28]
	0x022C45A0 CMP W8, 0x0
	0x022C45A4 SUB X8, X29, 0x10
	0x022C45A8 CSEL X1, X21, X8, LT
	0x022C45AC BL 0x3EB1AC0
	0x022C45B0 LDR X0, [X19 + 0x8]
	0x022C45B4 MOV X1, X20
	0x022C45B8 BL 0x1C16E04
	0x022C45BC CBZ X0, 0x22C4C78
	0x022C45C0 ADRP X8, 0x1E58000
	0x022C45C4 LDR X8, [X8 + 0x6B0]
	0x022C45C8 LDR X9, [X0]
	0x022C45CC LDR X1, [X8]
	0x022C45D0 LDR X8, [X9 + 0x40]
	0x022C45D4 LDR X9, [X1 + 0x40]
	0x022C45D8 CMP X8, X9
	0x022C45DC B.NE 0x22C4C74
	0x022C45E0 BL 0x1C16E08
	0x022C45E4 LDRB W2, [X0]
	0x022C45E8 LDUR X1, [X29 - 0x20]
	0x022C45EC MOV X0, X23
	0x022C45F0 MOV X3, X31
	0x022C45F4 BL 0x3BEC384
	0x022C45F8 LDUR X8, [X29 - 0x18]
	0x022C45FC LDR X8, [X8 + 0x28]
	0x022C4600 LDUR X9, [X29 - 0x8]
	0x022C4604 CMP X8, X9
	0x022C4608 B.NE 0x22C4D2C
	0x022C460C ADD X31, X29, 0x0
	0x022C4610 LDP X20, X19, [X31 + 0x50]
	0x022C4614 LDP X22, X21, [X31 + 0x40]
	0x022C4618 LDP X24, X23, [X31 + 0x30]
	0x022C461C LDP X26, X25, [X31 + 0x20]
	0x022C4620 LDP X28, X27, [X31 + 0x10]
	0x022C4624 LDP X29, X30, [X31], #0x60
	0x022C4628 RET
	0x022C462C ADRP X8, 0x1E58000
	0x022C4630 LDR X0, [X19]
	0x022C4634 LDR X8, [X8 + 0xAB0]
	0x022C4638 LDR W9, [X0 + 0xE0]
	0x022C463C LDR X25, [X8]
	0x022C4640 CBNZ W9, 0x22C4648
	0x022C4644 BL 0x1C16DFC
	0x022C4648 MOV X0, X25
	0x022C464C MOV X1, X31
	0x022C4650 BL 0x338C698
	0x022C4654 LDR X8, [X28]
	0x022C4658 MOV X25, X0
	0x022C465C MOV X1, X31
	0x022C4660 LDR X8, [X8]
	0x022C4664 MOV X0, X8
	0x022C4668 BL 0x338C698
	0x022C466C LDR X8, [X27]
	0x022C4670 MOV X26, X0
	0x022C4674 LDR W9, [X8 + 0xE0]
	0x022C4678 CBNZ W9, 0x22C4684
	0x022C467C MOV X0, X8
	0x022C4680 BL 0x1C16DFC
	0x022C4684 MOV X0, X25
	0x022C4688 MOV X1, X26
	0x022C468C MOV X2, X31
	0x022C4690 BL 0x3BF3068
	0x022C4694 TBZ X0, 0x0, 0x22C4828
	0x022C4698 LDR X0, [X23 + 0x18]
	0x022C469C MOV X1, X31
	0x022C46A0 BL 0x3BEF01C
	0x022C46A4 LDR X24, [X28]
	0x022C46A8 SUB X19, X29, 0x10
	0x022C46AC MOV X23, X0
	0x022C46B0 MOV X0, X20
	0x022C46B4 LDR X8, [X24 + 0x8]
	0x022C46B8 MOV X2, X22
	0x022C46BC LDR W8, [X8 + 0x28]
	0x022C46C0 CMP W8, 0x0
	0x022C46C4 CSEL X1, X21, X19, LT
	0x022C46C8 BL 0x3EB1AC0
	0x022C46CC LDR X0, [X24 + 0x8]
	0x022C46D0 MOV X1, X20
	0x022C46D4 BL 0x1C16ED4
	0x022C46D8 MOV X2, X31
	0x022C46DC TBZ X0, 0x0, 0x22C4514
	0x022C46E0 LDR X21, [X28]
	0x022C46E4 LDUR X9, [X29 - 0x10]
	0x022C46E8 MOV X0, X20
	0x022C46EC MOV X2, X22
	0x022C46F0 LDR X8, [X21 + 0x8]
	0x022C46F4 LDR W8, [X8 + 0x28]
	0x022C46F8 CMP W8, 0x0
	0x022C46FC CSEL X1, X9, X19, LT
	0x022C4700 BL 0x3EB1AC0
	0x022C4704 LDR X0, [X21 + 0x8]
	0x022C4708 MOV X1, X20
	0x022C470C BL 0x1C16E04
	0x022C4710 CBZ X0, 0x22C4C78
	0x022C4714 ADRP X9, 0x1E58000
	0x022C4718 LDR X9, [X9 + 0xAB8]
	0x022C471C LDR X8, [X0]
	0x022C4720 LDR X1, [X9]
	0x022C4724 LDRB W10, [X8 + 0x130]
	0x022C4728 LDRB W9, [X1 + 0x130]
	0x022C472C CMP W10, W9
	0x022C4730 B.CC 0x22C4C74
	0x022C4734 LDR X8, [X8 + 0xC8]
	0x022C4738 ADD X8, X8, X9, 0x3, LSL
	0x022C473C LDUR X8, [X8 - 0x8]
	0x022C4740 CMP X8, X1
	0x022C4744 B.NE 0x22C4C74
	0x022C4748 MOV X1, X31
	0x022C474C BL 0x3BF09A0
	0x022C4750 B 0x22C4510
	0x022C4754 LDR X0, [X19]
	0x022C4758 LDR X8, [X28]
	0x022C475C LDR W9, [X0 + 0xE0]
	0x022C4760 LDR X24, [X8]
	0x022C4764 CBNZ W9, 0x22C476C
	0x022C4768 BL 0x1C16DFC
	0x022C476C MOV X0, X24
	0x022C4770 MOV X1, X31
	0x022C4774 BL 0x338C698
	0x022C4778 ADRP X8, 0x1E56000
	0x022C477C LDR X8, [X8 + 0xD78]
	0x022C4780 MOV X24, X0
	0x022C4784 MOV X1, X31
	0x022C4788 LDR X8, [X8]
	0x022C478C MOV X0, X8
	0x022C4790 BL 0x338C698
	0x022C4794 MOV X1, X0
	0x022C4798 MOV X0, X24
	0x022C479C MOV X2, X31
	0x022C47A0 BL 0x3395194
	0x022C47A4 TBZ X0, 0x0, 0x22C4924
	0x022C47A8 LDR X0, [X23 + 0x18]
	0x022C47AC MOV X1, X31
	0x022C47B0 BL 0x3BEF01C
	0x022C47B4 LDR X19, [X28]
	0x022C47B8 MOV X23, X0
	0x022C47BC MOV X0, X20
	0x022C47C0 MOV X2, X22
	0x022C47C4 LDR X8, [X19 + 0x8]
	0x022C47C8 LDR W8, [X8 + 0x28]
	0x022C47CC CMP W8, 0x0
	0x022C47D0 SUB X8, X29, 0x10
	0x022C47D4 CSEL X1, X21, X8, LT
	0x022C47D8 BL 0x3EB1AC0
	0x022C47DC LDR X0, [X19 + 0x8]
	0x022C47E0 MOV X1, X20
	0x022C47E4 BL 0x1C16E04
	0x022C47E8 CBZ X0, 0x22C4C78
	0x022C47EC ADRP X8, 0x1E33000
	0x022C47F0 LDR X8, [X8 + 0x628]
	0x022C47F4 LDR X9, [X0]
	0x022C47F8 LDR X1, [X8]
	0x022C47FC LDR X8, [X9 + 0x40]
	0x022C4800 LDR X9, [X1 + 0x40]
	0x022C4804 CMP X8, X9
	0x022C4808 B.NE 0x22C4C74
	0x022C480C BL 0x1C16E08
	0x022C4810 LDRH W2, [X0]
	0x022C4814 LDUR X1, [X29 - 0x20]
	0x022C4818 MOV X0, X23
	0x022C481C MOV X3, X31
	0x022C4820 BL 0x3BEC2C8
	0x022C4824 B 0x22C45F8
	0x022C4828 ADRP X8, 0x1E58000
	0x022C482C LDR X0, [X19]
	0x022C4830 LDR X8, [X8 + 0x6A8]
	0x022C4834 LDR W9, [X0 + 0xE0]
	0x022C4838 LDR X25, [X8]
	0x022C483C CBNZ W9, 0x22C4844
	0x022C4840 BL 0x1C16DFC
	0x022C4844 MOV X0, X25
	0x022C4848 MOV X1, X31
	0x022C484C BL 0x338C698
	0x022C4850 LDR X8, [X28]
	0x022C4854 MOV X25, X0
	0x022C4858 MOV X1, X31
	0x022C485C LDR X8, [X8]
	0x022C4860 MOV X0, X8
	0x022C4864 BL 0x338C698
	0x022C4868 LDR X8, [X27]
	0x022C486C MOV X26, X0
	0x022C4870 LDR W9, [X8 + 0xE0]
	0x022C4874 CBNZ W9, 0x22C4880
	0x022C4878 MOV X0, X8
	0x022C487C BL 0x1C16DFC
	0x022C4880 MOV X0, X25
	0x022C4884 MOV X1, X26
	0x022C4888 MOV X2, X31
	0x022C488C BL 0x3BF3068
	0x022C4890 LDR X19, [X28]
	0x022C4894 TBZ X0, 0x0, 0x22C4C84
	0x022C4898 LDR X8, [X19 + 0x8]
	0x022C489C MOV X0, X20
	0x022C48A0 MOV X2, X22
	0x022C48A4 LDR W8, [X8 + 0x28]
	0x022C48A8 CMP W8, 0x0
	0x022C48AC SUB X8, X29, 0x10
	0x022C48B0 CSEL X1, X21, X8, LT
	0x022C48B4 BL 0x3EB1AC0
	0x022C48B8 LDR X0, [X19 + 0x8]
	0x022C48BC MOV X1, X20
	0x022C48C0 BL 0x1C16E04
	0x022C48C4 CBZ X0, 0x22C48FC
	0x022C48C8 ADRP X9, 0x1E2F000
	0x022C48CC LDR X9, [X9 + 0xEF0]
	0x022C48D0 LDR X8, [X0]
	0x022C48D4 LDR X1, [X9]
	0x022C48D8 LDRB W10, [X8 + 0x130]
	0x022C48DC LDRB W9, [X1 + 0x130]
	0x022C48E0 CMP W10, W9
	0x022C48E4 B.CC 0x22C4C74
	0x022C48E8 LDR X8, [X8 + 0xC8]
	0x022C48EC ADD X8, X8, X9, 0x3, LSL
	0x022C48F0 LDUR X8, [X8 - 0x8]
	0x022C48F4 CMP X8, X1
	0x022C48F8 B.NE 0x22C4C74
	0x022C48FC MOV X1, X31
	0x022C4900 BL 0x3BE3540
	0x022C4904 LDR X8, [X23 + 0x18]
	0x022C4908 MOV X20, X0
	0x022C490C MOV X1, X31
	0x022C4910 MOV X0, X8
	0x022C4914 BL 0x3BEF01C
	0x022C4918 LDUR X1, [X29 - 0x20]
	0x022C491C MOV X2, X20
	0x022C4920 B 0x22C451C
	0x022C4924 LDR X0, [X19]
	0x022C4928 LDR X8, [X28]
	0x022C492C LDR W9, [X0 + 0xE0]
	0x022C4930 LDR X24, [X8]
	0x022C4934 CBNZ W9, 0x22C493C
	0x022C4938 BL 0x1C16DFC
	0x022C493C MOV X0, X24
	0x022C4940 MOV X1, X31
	0x022C4944 BL 0x338C698
	0x022C4948 ADRP X8, 0x1E56000
	0x022C494C LDR X8, [X8 + 0xD88]
	0x022C4950 MOV X24, X0
	0x022C4954 MOV X1, X31
	0x022C4958 LDR X8, [X8]
	0x022C495C MOV X0, X8
	0x022C4960 BL 0x338C698
	0x022C4964 MOV X1, X0
	0x022C4968 MOV X0, X24
	0x022C496C MOV X2, X31
	0x022C4970 BL 0x3395194
	0x022C4974 TBZ X0, 0x0, 0x22C49F8
	0x022C4978 LDR X0, [X23 + 0x18]
	0x022C497C MOV X1, X31
	0x022C4980 BL 0x3BEF01C
	0x022C4984 LDR X19, [X28]
	0x022C4988 MOV X23, X0
	0x022C498C MOV X0, X20
	0x022C4990 MOV X2, X22
	0x022C4994 LDR X8, [X19 + 0x8]
	0x022C4998 LDR W8, [X8 + 0x28]
	0x022C499C CMP W8, 0x0
	0x022C49A0 SUB X8, X29, 0x10
	0x022C49A4 CSEL X1, X21, X8, LT
	0x022C49A8 BL 0x3EB1AC0
	0x022C49AC LDR X0, [X19 + 0x8]
	0x022C49B0 MOV X1, X20
	0x022C49B4 BL 0x1C16E04
	0x022C49B8 CBZ X0, 0x22C4C78
	0x022C49BC ADRP X8, 0x1E31000
	0x022C49C0 LDR X8, [X8 + 0xA60]
	0x022C49C4 LDR X9, [X0]
	0x022C49C8 LDR X1, [X8]
	0x022C49CC LDR X8, [X9 + 0x40]
	0x022C49D0 LDR X9, [X1 + 0x40]
	0x022C49D4 CMP X8, X9
	0x022C49D8 B.NE 0x22C4C74
	0x022C49DC BL 0x1C16E08
	0x022C49E0 LDR X2, [X0]
	0x022C49E4 LDUR X1, [X29 - 0x20]
	0x022C49E8 MOV X0, X23
	0x022C49EC MOV X3, X31
	0x022C49F0 BL 0x3BEC20C
	0x022C49F4 B 0x22C45F8
	0x022C49F8 LDR X0, [X19]
	0x022C49FC LDR X8, [X28]
	0x022C4A00 LDR W9, [X0 + 0xE0]
	0x022C4A04 LDR X24, [X8]
	0x022C4A08 CBNZ W9, 0x22C4A10
	0x022C4A0C BL 0x1C16DFC
	0x022C4A10 MOV X0, X24
	0x022C4A14 MOV X1, X31
	0x022C4A18 BL 0x338C698
	0x022C4A1C ADRP X8, 0x1E57000
	0x022C4A20 LDR X8, [X8 + 0xA80]
	0x022C4A24 MOV X24, X0
	0x022C4A28 MOV X1, X31
	0x022C4A2C LDR X8, [X8]
	0x022C4A30 MOV X0, X8
	0x022C4A34 BL 0x338C698
	0x022C4A38 MOV X1, X0
	0x022C4A3C MOV X0, X24
	0x022C4A40 MOV X2, X31
	0x022C4A44 BL 0x3395194
	0x022C4A48 TBZ X0, 0x0, 0x22C4ACC
	0x022C4A4C LDR X0, [X23 + 0x18]
	0x022C4A50 MOV X1, X31
	0x022C4A54 BL 0x3BEF01C
	0x022C4A58 LDR X19, [X28]
	0x022C4A5C MOV X23, X0
	0x022C4A60 MOV X0, X20
	0x022C4A64 MOV X2, X22
	0x022C4A68 LDR X8, [X19 + 0x8]
	0x022C4A6C LDR W8, [X8 + 0x28]
	0x022C4A70 CMP W8, 0x0
	0x022C4A74 SUB X8, X29, 0x10
	0x022C4A78 CSEL X1, X21, X8, LT
	0x022C4A7C BL 0x3EB1AC0
	0x022C4A80 LDR X0, [X19 + 0x8]
	0x022C4A84 MOV X1, X20
	0x022C4A88 BL 0x1C16E04
	0x022C4A8C CBZ X0, 0x22C4C78
	0x022C4A90 ADRP X8, 0x1E2F000
	0x022C4A94 LDR X8, [X8 + 0xA90]
	0x022C4A98 LDR X9, [X0]
	0x022C4A9C LDR X1, [X8]
	0x022C4AA0 LDR X8, [X9 + 0x40]
	0x022C4AA4 LDR X9, [X1 + 0x40]
	0x022C4AA8 CMP X8, X9
	0x022C4AAC B.NE 0x22C4C74
	0x022C4AB0 BL 0x1C16E08
	0x022C4AB4 LDR V0, [X0]
	0x022C4AB8 LDUR X1, [X29 - 0x20]
	0x022C4ABC MOV X0, X23
	0x022C4AC0 MOV X2, X31
	0x022C4AC4 BL 0x3BEC150
	0x022C4AC8 B 0x22C45F8
	0x022C4ACC LDR X0, [X19]
	0x022C4AD0 LDR X8, [X28]
	0x022C4AD4 LDR W9, [X0 + 0xE0]
	0x022C4AD8 LDR X24, [X8]
	0x022C4ADC CBNZ W9, 0x22C4AE4
	0x022C4AE0 BL 0x1C16DFC
	0x022C4AE4 MOV X0, X24
	0x022C4AE8 MOV X1, X31
	0x022C4AEC BL 0x338C698
	0x022C4AF0 ADRP X8, 0x1E57000
	0x022C4AF4 LDR X8, [X8 + 0xA78]
	0x022C4AF8 MOV X24, X0
	0x022C4AFC MOV X1, X31
	0x022C4B00 LDR X8, [X8]
	0x022C4B04 MOV X0, X8
	0x022C4B08 BL 0x338C698
	0x022C4B0C MOV X1, X0
	0x022C4B10 MOV X0, X24
	0x022C4B14 MOV X2, X31
	0x022C4B18 BL 0x3395194
	0x022C4B1C TBZ X0, 0x0, 0x22C4BA0
	0x022C4B20 LDR X0, [X23 + 0x18]
	0x022C4B24 MOV X1, X31
	0x022C4B28 BL 0x3BEF01C
	0x022C4B2C LDR X19, [X28]
	0x022C4B30 MOV X23, X0
	0x022C4B34 MOV X0, X20
	0x022C4B38 MOV X2, X22
	0x022C4B3C LDR X8, [X19 + 0x8]
	0x022C4B40 LDR W8, [X8 + 0x28]
	0x022C4B44 CMP W8, 0x0
	0x022C4B48 SUB X8, X29, 0x10
	0x022C4B4C CSEL X1, X21, X8, LT
	0x022C4B50 BL 0x3EB1AC0
	0x022C4B54 LDR X0, [X19 + 0x8]
	0x022C4B58 MOV X1, X20
	0x022C4B5C BL 0x1C16E04
	0x022C4B60 CBZ X0, 0x22C4C78
	0x022C4B64 ADRP X8, 0x1E32000
	0x022C4B68 LDR X8, [X8 + 0x978]
	0x022C4B6C LDR X9, [X0]
	0x022C4B70 LDR X1, [X8]
	0x022C4B74 LDR X8, [X9 + 0x40]
	0x022C4B78 LDR X9, [X1 + 0x40]
	0x022C4B7C CMP X8, X9
	0x022C4B80 B.NE 0x22C4C74
	0x022C4B84 BL 0x1C16E08
	0x022C4B88 LDR V0, [X0]
	0x022C4B8C LDUR X1, [X29 - 0x20]
	0x022C4B90 MOV X0, X23
	0x022C4B94 MOV X2, X31
	0x022C4B98 BL 0x3BEC094
	0x022C4B9C B 0x22C45F8
	0x022C4BA0 LDR X0, [X19]
	0x022C4BA4 LDR X8, [X28]
	0x022C4BA8 LDR W9, [X0 + 0xE0]
	0x022C4BAC LDR X24, [X8]
	0x022C4BB0 CBNZ W9, 0x22C4BB8
	0x022C4BB4 BL 0x1C16DFC
	0x022C4BB8 MOV X0, X24
	0x022C4BBC MOV X1, X31
	0x022C4BC0 BL 0x338C698
	0x022C4BC4 ADRP X8, 0x1E56000
	0x022C4BC8 LDR X8, [X8 + 0xD70]
	0x022C4BCC MOV X24, X0
	0x022C4BD0 MOV X1, X31
	0x022C4BD4 LDR X8, [X8]
	0x022C4BD8 MOV X0, X8
	0x022C4BDC BL 0x338C698
	0x022C4BE0 MOV X1, X0
	0x022C4BE4 MOV X0, X24
	0x022C4BE8 MOV X2, X31
	0x022C4BEC BL 0x3395194
	0x022C4BF0 TBZ X0, 0x0, 0x22C45F8
	0x022C4BF4 LDR X0, [X23 + 0x18]
	0x022C4BF8 MOV X1, X31
	0x022C4BFC BL 0x3BEF01C
	0x022C4C00 LDR X19, [X28]
	0x022C4C04 MOV X23, X0
	0x022C4C08 MOV X0, X20
	0x022C4C0C MOV X2, X22
	0x022C4C10 LDR X8, [X19 + 0x8]
	0x022C4C14 LDR W8, [X8 + 0x28]
	0x022C4C18 CMP W8, 0x0
	0x022C4C1C SUB X8, X29, 0x10
	0x022C4C20 CSEL X1, X21, X8, LT
	0x022C4C24 BL 0x3EB1AC0
	0x022C4C28 LDR X0, [X19 + 0x8]
	0x022C4C2C MOV X1, X20
	0x022C4C30 BL 0x1C16E04
	0x022C4C34 CBZ X0, 0x22C4C78
	0x022C4C38 ADRP X8, 0x1E31000
	0x022C4C3C LDR X8, [X8 + 0x170]
	0x022C4C40 LDR X9, [X0]
	0x022C4C44 LDR X1, [X8]
	0x022C4C48 LDR X8, [X9 + 0x40]
	0x022C4C4C LDR X9, [X1 + 0x40]
	0x022C4C50 CMP X8, X9
	0x022C4C54 B.NE 0x22C4C74
	0x022C4C58 BL 0x1C16E08
	0x022C4C5C LDRH W2, [X0]
	0x022C4C60 LDUR X1, [X29 - 0x20]
	0x022C4C64 MOV X0, X23
	0x022C4C68 MOV X3, X31
	0x022C4C6C BL 0x3BEBFD8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-32], X1
	017 Move [X29-24], X8
	018 Move X8, [X8+40]
	019 Move X28, X3
	020 Move X24, X3
	021 Move X21, X2
	022 Move [X29-8], X8
	023 Move [X29-16], X2
	024 Add X28, X28, 56
	025 Move X8, [X28]
	026 Move X23, X0
	027 Compare X8, 0
	028 JumpIfNotEqual {131}
	029 Move X0, 0x1E5A000
	030 Move X0, [X0+1680]
	031 Call 0x1C17CF4
	032 Move X0, 0x1E31000
	033 Move X0, [X0+2448]
	034 Call 0x1C17CF4
	035 Move X0, 0x1E5A000
	036 Move X0, [X0+1688]
	037 Call 0x1C17CF4
	038 Move X0, 0x1E5A000
	039 Move X0, [X0+2576]
	040 Call 0x1C17CF4
	041 Move X0, 0x1E5A000
	042 Move X0, [X0+2736]
	043 Call 0x1C17CF4
	044 Move X0, 0x1E5A000
	045 Move X0, [X0+2744]
	046 Call 0x1C17CF4
	047 Move X0, 0x1E5A000
	048 Move X0, [X0+1696]
	049 Call 0x1C17CF4
	050 Move X0, 0x1E5A000
	051 Move X0, [X0+584]
	052 Call 0x1C17CF4
	053 Move X0, 0x1E31000
	054 Move X0, [X0+2904]
	055 Call 0x1C17CF4
	056 Move X0, 0x1E58000
	057 Move X0, [X0+3432]
	058 Call 0x1C17CF4
	059 Move X0, 0x1E32000
	060 Move X0, [X0+2520]
	061 Call 0x1C17CF4
	062 Move X0, 0x1E58000
	063 Move X0, [X0+3440]
	064 Call 0x1C17CF4
	065 Move X0, 0x1E33000
	066 Move X0, [X0+368]
	067 Call 0x1C17CF4
	068 Move X0, 0x1E31000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0x1E59000
	072 Move X0, [X0+2680]
	073 Call 0x1C17CF4
	074 Move X0, 0x1E34000
	075 Move X0, [X0+2424]
	076 Call 0x1C17CF4
	077 Move X0, 0x1E58000
	078 Move X0, [X0+3448]
	079 Call 0x1C17CF4
	080 Move X0, 0x1E35000
	081 Move X0, [X0+1576]
	082 Call 0x1C17CF4
	083 Move X0, 0x1E58000
	084 Move X0, [X0+3456]
	085 Call 0x1C17CF4
	086 Move X0, 0x1E31000
	087 Move X0, [X0+1880]
	088 Call 0x1C17CF4
	089 Move X0, 0x1E58000
	090 Move X0, [X0+3464]
	091 Call 0x1C17CF4
	092 Move X0, 0x1E33000
	093 Move X0, [X0+2656]
	094 Call 0x1C17CF4
	095 Move X0, 0x1E5A000
	096 Move X0, [X0+1704]
	097 Call 0x1C17CF4
	098 Move X0, 0x1E31000
	099 Move X0, [X0+3824]
	100 Call 0x1C17CF4
	101 Move X0, 0x1E58000
	102 Move X0, [X0+3472]
	103 Call 0x1C17CF4
	104 Move X0, 0x1E5A000
	105 Move X0, [X0+1712]
	106 Call 0x1C17CF4
	107 Move X0, 0x1E59000
	108 Move X0, [X0+2688]
	109 Call 0x1C17CF4
	110 Move X0, 0x1E31000
	111 Move X0, [X0+2704]
	112 Call 0x1C17CF4
	113 Move X0, 0x1E59000
	114 Move X0, [X0+2912]
	115 Call 0x1C17CF4
	116 Move X0, 0x1E33000
	117 Move X0, [X0+632]
	118 Call 0x1C17CF4
	119 Move X0, 0x1E31000
	120 Move X0, [X0+1728]
	121 Call 0x1C17CF4
	122 Move X0, 0x1E5A000
	123 Move X0, [X0+2752]
	124 Call 0x1C17CF4
	125 Move X8, [X28]
	126 Compare X8, 0
	127 JumpIfNotEqual {131}
	128 Move X0, X24
	129 Call 0x1C5D6E0
	130 Move X8, [X24+56]
	131 Move X25, [X8]
	132 Move X9, [X8+8]
	133 Move W22, [X9+252]
	134 Add X9, X31, 0
	135 Add X10, X22, 15
	136 And X10, X10, 0x1FFFFFFFF
	137 Subtract X20, X9, X10
	138 Add X31, X20, 0
	139 Move X19, 0x1E31000
	140 Move X19, [X19+1728]
	141 Move X0, [X19]
	142 Move W9, [X0+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X25
	147 Move X1, X31
	148 Call Type.GetTypeFromHandle, X0
	149 Move X27, 0x1E5A000
	150 Move X27, [X27+1696]
	151 Move X25, X0
	152 Move X8, [X27]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X0, X25
	159 Move X1, X31
	160 Call AndroidReflection.IsPrimitive, X0
	161 Move X8, [X19]
	162 Move X9, [X28]
	163 Move W26, W0
	164 Move W10, [X8+224]
	165 Move X25, [X9]
	166 Compare W10, 0
	167 JumpIfNotEqual {170}
	168 Move X0, X8
	169 Call 0x1C17DFC
	170 Move X0, X25
	171 Move X1, X31
	172 Call Type.GetTypeFromHandle, X0
	173 Move X25, X0
	174 Move TEMP, X26
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {222}
	178 Move X8, 0x1E58000
	179 Move X8, [X8+3456]
	180 Move X1, X31
	181 Move X0, [X8]
	182 Call Type.GetTypeFromHandle, X0
	183 Move X1, X0
	184 Move X0, X25
	185 Move X2, X31
	186 Call Type.op_Equality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {263}
	191 Move X0, [X23+16]
	192 Move X1, X31
	193 Call GlobalJavaObjectRef.op_Implicit, X0
	194 Move X19, [X28]
	195 Move X23, X0
	196 Move X0, X20
	197 Move X2, X22
	198 Move X8, [X19+8]
	199 Move W8, [X8+40]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X8, X29, 16
	202 NotImplemented "Instruction CSEL not yet implemented."
	203 Call 0x3EB2AC0
	204 Move X0, [X19+8]
	205 Move X1, X20
	206 Call 0x1C17E04
	207 Compare X0, 0
	208 JumpIfEqual {1028}
	209 Move X8, 0x1E31000
	210 Move X8, [X8+1880]
	211 Move X9, [X0]
	212 Move X1, [X8]
	213 Move X8, [X9+64]
	214 Move X9, [X1+64]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Call 0x1C17E08
	217 Move W2, [X0]
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 Move X0, X23
	220 Move X3, X31
	221 Call AndroidJNISafe.SetIntField, X0, X1, X2
	222 Move X8, 0x1E59000
	223 Move X8, [X8+2912]
	224 Move X1, X31
	225 Move X0, [X8]
	226 Call Type.GetTypeFromHandle, X0
	227 Move X1, X0
	228 Move X0, X25
	229 Move X2, X31
	230 Call Type.op_Equality, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {319}
	235 Move X0, [X23+16]
	236 Move X1, X31
	237 Call GlobalJavaObjectRef.op_Implicit, X0
	238 Move X19, [X28]
	239 Move X23, X0
	240 Move X0, X20
	241 Move X2, X22
	242 Move X8, [X19+8]
	243 Move W8, [X8+40]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X8, X29, 16
	246 NotImplemented "Instruction CSEL not yet implemented."
	247 Call 0x3EB2AC0
	248 Move X0, [X19+8]
	249 Move X1, X20
	250 Call 0x1C17E04
	251 Move X2, X0
	252 Compare X0, 0
	253 JumpIfEqual {259}
	254 Move X8, 0x1E32000
	255 Move X8, [X8+632]
	256 Move X1, [X8]
	257 Move X8, [X2]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 Move X0, X23
	261 Move X3, X31
	262 Call AndroidJNISafe.SetStringField, X0, X1, X2
	263 Move X0, [X19]
	264 Move X8, [X28]
	265 Move W9, [X0+224]
	266 Move X24, [X8]
	267 Compare W9, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X0, X24
	271 Move X1, X31
	272 Call Type.GetTypeFromHandle, X0
	273 Move X8, 0x1E59000
	274 Move X8, [X8+584]
	275 Move X24, X0
	276 Move X1, X31
	277 Move X8, [X8]
	278 Move X0, X8
	279 Call Type.GetTypeFromHandle, X0
	280 Move X1, X0
	281 Move X0, X24
	282 Move X2, X31
	283 Call Type.op_Equality, X0, X1
	284 Move TEMP, X0
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfNotEqual {391}
	288 Move X0, [X23+16]
	289 Move X1, X31
	290 Call GlobalJavaObjectRef.op_Implicit, X0
	291 Move X19, [X28]
	292 Move X23, X0
	293 Move X0, X20
	294 Move X2, X22
	295 Move X8, [X19+8]
	296 Move W8, [X8+40]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Subtract X8, X29, 16
	299 NotImplemented "Instruction CSEL not yet implemented."
	300 Call 0x3EB2AC0
	301 Move X0, [X19+8]
	302 Move X1, X20
	303 Call 0x1C17E04
	304 Compare X0, 0
	305 JumpIfEqual {1028}
	306 Move X8, 0x1E30000
	307 Move X8, [X8+2904]
	308 Move X9, [X0]
	309 Move X1, [X8]
	310 Move X8, [X9+64]
	311 Move X9, [X1+64]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Call 0x1C17E08
	314 Move W2, [X0]
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 Move X0, X23
	317 Move X3, X31
	318 Call AndroidJNISafe.SetBooleanField, X0, X1, X2
	319 Move X0, [X19]
	320 Move X8, [X28]
	321 Move W9, [X0+224]
	322 Move X25, [X8]
	323 Compare W9, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X0, X25
	327 Move X1, X31
	328 Call Type.GetTypeFromHandle, X0
	329 Move X8, 0x1E59000
	330 Move X8, [X8+1680]
	331 Move X25, X0
	332 Move X1, X31
	333 Move X8, [X8]
	334 Move X0, X8
	335 Call Type.GetTypeFromHandle, X0
	336 Move X1, X0
	337 Move X0, X25
	338 Move X2, X31
	339 Call Type.op_Equality, X0, X1
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {448}
	344 Move X0, [X23+16]
	345 Move X1, X31
	346 Call GlobalJavaObjectRef.op_Implicit, X0
	347 Move X24, [X28]
	348 Subtract X19, X29, 16
	349 Move X23, X0
	350 Move X0, X20
	351 Move X8, [X24+8]
	352 Move X2, X22
	353 Move W8, [X8+40]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 NotImplemented "Instruction CSEL not yet implemented."
	356 Call 0x3EB2AC0
	357 Move X0, [X24+8]
	358 Move X1, X20
	359 Call 0x1C17ED4
	360 Move X2, X31
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {523}
	365 Move X21, [X28]
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Move X0, X20
	368 Move X2, X22
	369 Move X8, [X21+8]
	370 Move W8, [X8+40]
	371 NotImplemented "Instruction CMP not yet implemented."
	372 NotImplemented "Instruction CSEL not yet implemented."
	373 Call 0x3EB2AC0
	374 Move X0, [X21+8]
	375 Move X1, X20
	376 Call 0x1C17E04
	377 Compare X0, 0
	378 JumpIfEqual {1028}
	379 Move X9, 0x1E30000
	380 Move X9, [X9+2448]
	381 Move X8, [X0]
	382 Move X1, [X9]
	383 Move W10, [X8+304]
	384 Move W9, [X1+304]
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X8, [X8+200]
	387 Add X8, X8, X9
	388 NotImplemented "Instruction LDUR not yet implemented."
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X0, [X0+24]
	391 Move X0, [X19]
	392 Move X8, [X28]
	393 Move W9, [X0+224]
	394 Move X24, [X8]
	395 Compare W9, 0
	396 JumpIfNotEqual {398}
	397 Call 0x1C17DFC
	398 Move X0, X24
	399 Move X1, X31
	400 Call Type.GetTypeFromHandle, X0
	401 Move X8, 0x1E57000
	402 Move X8, [X8+3432]
	403 Move X24, X0
	404 Move X1, X31
	405 Move X8, [X8]
	406 Move X0, X8
	407 Call Type.GetTypeFromHandle, X0
	408 Move X1, X0
	409 Move X0, X24
	410 Move X2, X31
	411 Call Type.op_Equality, X0, X1
	412 Move TEMP, X0
	413 And TEMP, TEMP, 1
	414 Compare TEMP, 1
	415 JumpIfNotEqual {527}
	416 Move X8, 0x1E30000
	417 Move X8, [X8+2600]
	418 Move X0, [X8]
	419 Move W8, [X0+224]
	420 Compare W8, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move X8, 0x1E59000
	424 Move X8, [X8+2752]
	425 Move X1, X31
	426 Move X0, [X8]
	427 Call Debug.LogWarning, X0
	428 Move X0, [X23+16]
	429 Move X1, X31
	430 Call GlobalJavaObjectRef.op_Implicit, X0
	431 Move X19, [X28]
	432 Move X23, X0
	433 Move X0, X20
	434 Move X2, X22
	435 Move X8, [X19+8]
	436 Move W8, [X8+40]
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Subtract X8, X29, 16
	439 NotImplemented "Instruction CSEL not yet implemented."
	440 Call 0x3EB2AC0
	441 Move X0, [X19+8]
	442 Move X1, X20
	443 Call 0x1C17E04
	444 Compare X0, 0
	445 JumpIfEqual {1028}
	446 Move X8, 0x1E31000
	447 Move X8, [X8+2520]
	448 Move X0, [X19]
	449 Move X8, [X28]
	450 Move W9, [X0+224]
	451 Move X25, [X8]
	452 Compare W9, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move X0, X25
	456 Move X1, X31
	457 Call Type.GetTypeFromHandle, X0
	458 Move X8, 0x1E59000
	459 Move X8, [X8+1688]
	460 Move X25, X0
	461 Move X1, X31
	462 Move X8, [X8]
	463 Move X0, X8
	464 Call Type.GetTypeFromHandle, X0
	465 Move X1, X0
	466 Move X0, X25
	467 Move X2, X31
	468 Call Type.op_Equality, X0, X1
	469 Move TEMP, X0
	470 And TEMP, TEMP, 1
	471 Compare TEMP, 1
	472 JumpIfNotEqual {601}
	473 Move X0, [X23+16]
	474 Move X1, X31
	475 Call GlobalJavaObjectRef.op_Implicit, X0
	476 Move X24, [X28]
	477 Subtract X19, X29, 16
	478 Move X23, X0
	479 Move X0, X20
	480 Move X8, [X24+8]
	481 Move X2, X22
	482 Move W8, [X8+40]
	483 NotImplemented "Instruction CMP not yet implemented."
	484 NotImplemented "Instruction CSEL not yet implemented."
	485 Call 0x3EB2AC0
	486 Move X0, [X24+8]
	487 Move X1, X20
	488 Call 0x1C17ED4
	489 Move X2, X31
	490 Move TEMP, X0
	491 And TEMP, TEMP, 1
	492 Compare TEMP, 1
	493 JumpIfNotEqual {523}
	494 Move X21, [X28]
	495 NotImplemented "Instruction LDUR not yet implemented."
	496 Move X0, X20
	497 Move X2, X22
	498 Move X8, [X21+8]
	499 Move W8, [X8+40]
	500 NotImplemented "Instruction CMP not yet implemented."
	501 NotImplemented "Instruction CSEL not yet implemented."
	502 Call 0x3EB2AC0
	503 Move X0, [X21+8]
	504 Move X1, X20
	505 Call 0x1C17E04
	506 Compare X0, 0
	507 JumpIfEqual {1028}
	508 Move X9, 0x1E59000
	509 Move X9, [X9+2576]
	510 Move X8, [X0]
	511 Move X1, [X9]
	512 Move W10, [X8+304]
	513 Move W9, [X1+304]
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move X8, [X8+200]
	516 Add X8, X8, X9
	517 NotImplemented "Instruction LDUR not yet implemented."
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X0, [X0+16]
	520 Move X1, X31
	521 Call GlobalJavaObjectRef.op_Implicit, X0
	522 Move X2, X0
	523 NotImplemented "Instruction LDUR not yet implemented."
	524 Move X0, X23
	525 Move X3, X31
	526 Call AndroidJNISafe.SetObjectField, X0, X1, X2
	527 Move X0, [X19]
	528 Move X8, [X28]
	529 Move W9, [X0+224]
	530 Move X24, [X8]
	531 Compare W9, 0
	532 JumpIfNotEqual {534}
	533 Call 0x1C17DFC
	534 Move X0, X24
	535 Move X1, X31
	536 Call Type.GetTypeFromHandle, X0
	537 Move X8, 0x1E57000
	538 Move X8, [X8+3472]
	539 Move X24, X0
	540 Move X1, X31
	541 Move X8, [X8]
	542 Move X0, X8
	543 Call Type.GetTypeFromHandle, X0
	544 Move X1, X0
	545 Move X0, X24
	546 Move X2, X31
	547 Call Type.op_Equality, X0, X1
	548 Move TEMP, X0
	549 And TEMP, TEMP, 1
	550 Compare TEMP, 1
	551 JumpIfNotEqual {681}
	552 Move X0, [X23+16]
	553 Move X1, X31
	554 Call GlobalJavaObjectRef.op_Implicit, X0
	555 Move X19, [X28]
	556 Move X23, X0
	557 Move X0, X20
	558 Move X2, X22
	559 Move X8, [X19+8]
	560 Move W8, [X8+40]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Subtract X8, X29, 16
	563 NotImplemented "Instruction CSEL not yet implemented."
	564 Call 0x3EB2AC0
	565 Move X0, [X19+8]
	566 Move X1, X20
	567 Call 0x1C17E04
	568 Compare X0, 0
	569 JumpIfEqual {1028}
	570 Move X8, 0x1E59000
	571 Move X8, [X8+1712]
	572 Move X9, [X0]
	573 Move X1, [X8]
	574 Move X8, [X9+64]
	575 Move X9, [X1+64]
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Call 0x1C17E08
	578 Move W2, [X0]
	579 NotImplemented "Instruction LDUR not yet implemented."
	580 Move X0, X23
	581 Move X3, X31
	582 Call AndroidJNISafe.SetSByteField, X0, X1, X2
	583 NotImplemented "Instruction LDUR not yet implemented."
	584 Move X8, [X8+40]
	585 NotImplemented "Instruction LDUR not yet implemented."
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Add X31, X29, 0
	588 Move X20, [X31+80]
	589 Move X19, [X31+88]
	590 Move X22, [X31+64]
	591 Move X21, [X31+72]
	592 Move X24, [X31+48]
	593 Move X23, [X31+56]
	594 Move X26, [X31+32]
	595 Move X25, [X31+40]
	596 Move X28, [X31+16]
	597 Move X27, [X31+24]
	598 Move X29, [X31+96]
	599 Move X30, [X31+104]
	600 Return 
	601 Move X8, 0x1E59000
	602 Move X0, [X19]
	603 Move X8, [X8+2736]
	604 Move W9, [X0+224]
	605 Move X25, [X8]
	606 Compare W9, 0
	607 JumpIfNotEqual {609}
	608 Call 0x1C17DFC
	609 Move X0, X25
	610 Move X1, X31
	611 Call Type.GetTypeFromHandle, X0
	612 Move X8, [X28]
	613 Move X25, X0
	614 Move X1, X31
	615 Move X8, [X8]
	616 Move X0, X8
	617 Call Type.GetTypeFromHandle, X0
	618 Move X8, [X27]
	619 Move X26, X0
	620 Move W9, [X8+224]
	621 Compare W9, 0
	622 JumpIfNotEqual {625}
	623 Move X0, X8
	624 Call 0x1C17DFC
	625 Move X0, X25
	626 Move X1, X26
	627 Move X2, X31
	628 Call AndroidReflection.IsAssignableFrom, X0, X1
	629 Move TEMP, X0
	630 And TEMP, TEMP, 1
	631 Compare TEMP, 1
	632 JumpIfNotEqual {737}
	633 Move X0, [X23+16]
	634 Move X1, X31
	635 Call GlobalJavaObjectRef.op_Implicit, X0
	636 Move X24, [X28]
	637 Subtract X19, X29, 16
	638 Move X23, X0
	639 Move X0, X20
	640 Move X8, [X24+8]
	641 Move X2, X22
	642 Move W8, [X8+40]
	643 NotImplemented "Instruction CMP not yet implemented."
	644 NotImplemented "Instruction CSEL not yet implemented."
	645 Call 0x3EB2AC0
	646 Move X0, [X24+8]
	647 Move X1, X20
	648 Call 0x1C17ED4
	649 Move X2, X31
	650 Move TEMP, X0
	651 And TEMP, TEMP, 1
	652 Compare TEMP, 1
	653 JumpIfNotEqual {523}
	654 Move X21, [X28]
	655 NotImplemented "Instruction LDUR not yet implemented."
	656 Move X0, X20
	657 Move X2, X22
	658 Move X8, [X21+8]
	659 Move W8, [X8+40]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 NotImplemented "Instruction CSEL not yet implemented."
	662 Call 0x3EB2AC0
	663 Move X0, [X21+8]
	664 Move X1, X20
	665 Call 0x1C17E04
	666 Compare X0, 0
	667 JumpIfEqual {1028}
	668 Move X9, 0x1E59000
	669 Move X9, [X9+2744]
	670 Move X8, [X0]
	671 Move X1, [X9]
	672 Move W10, [X8+304]
	673 Move W9, [X1+304]
	674 NotImplemented "Instruction CMP not yet implemented."
	675 Move X8, [X8+200]
	676 Add X8, X8, X9
	677 NotImplemented "Instruction LDUR not yet implemented."
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move X1, X31
	680 Call AndroidJavaProxy.GetRawProxy, X0
	681 Move X0, [X19]
	682 Move X8, [X28]
	683 Move W9, [X0+224]
	684 Move X24, [X8]
	685 Compare W9, 0
	686 JumpIfNotEqual {688}
	687 Call 0x1C17DFC
	688 Move X0, X24
	689 Move X1, X31
	690 Call Type.GetTypeFromHandle, X0
	691 Move X8, 0x1E57000
	692 Move X8, [X8+3448]
	693 Move X24, X0
	694 Move X1, X31
	695 Move X8, [X8]
	696 Move X0, X8
	697 Call Type.GetTypeFromHandle, X0
	698 Move X1, X0
	699 Move X0, X24
	700 Move X2, X31
	701 Call Type.op_Equality, X0, X1
	702 Move TEMP, X0
	703 And TEMP, TEMP, 1
	704 Compare TEMP, 1
	705 JumpIfNotEqual {803}
	706 Move X0, [X23+16]
	707 Move X1, X31
	708 Call GlobalJavaObjectRef.op_Implicit, X0
	709 Move X19, [X28]
	710 Move X23, X0
	711 Move X0, X20
	712 Move X2, X22
	713 Move X8, [X19+8]
	714 Move W8, [X8+40]
	715 NotImplemented "Instruction CMP not yet implemented."
	716 Subtract X8, X29, 16
	717 NotImplemented "Instruction CSEL not yet implemented."
	718 Call 0x3EB2AC0
	719 Move X0, [X19+8]
	720 Move X1, X20
	721 Call 0x1C17E04
	722 Compare X0, 0
	723 JumpIfEqual {1028}
	724 Move X8, 0x1E34000
	725 Move X8, [X8+1576]
	726 Move X9, [X0]
	727 Move X1, [X8]
	728 Move X8, [X9+64]
	729 Move X9, [X1+64]
	730 NotImplemented "Instruction CMP not yet implemented."
	731 Call 0x1C17E08
	732 NotImplemented "Instruction LDRH not yet implemented."
	733 NotImplemented "Instruction LDUR not yet implemented."
	734 Move X0, X23
	735 Move X3, X31
	736 Call AndroidJNISafe.SetShortField, X0, X1, X2
	737 Move X8, 0x1E59000
	738 Move X0, [X19]
	739 Move X8, [X8+1704]
	740 Move W9, [X0+224]
	741 Move X25, [X8]
	742 Compare W9, 0
	743 JumpIfNotEqual {745}
	744 Call 0x1C17DFC
	745 Move X0, X25
	746 Move X1, X31
	747 Call Type.GetTypeFromHandle, X0
	748 Move X8, [X28]
	749 Move X25, X0
	750 Move X1, X31
	751 Move X8, [X8]
	752 Move X0, X8
	753 Call Type.GetTypeFromHandle, X0
	754 Move X8, [X27]
	755 Move X26, X0
	756 Move W9, [X8+224]
	757 Compare W9, 0
	758 JumpIfNotEqual {761}
	759 Move X0, X8
	760 Call 0x1C17DFC
	761 Move X0, X25
	762 Move X1, X26
	763 Move X2, X31
	764 Call AndroidReflection.IsAssignableFrom, X0, X1
	765 Move X19, [X28]
	766 Move TEMP, X0
	767 And TEMP, TEMP, 1
	768 Compare TEMP, 1
	769 JumpIfNotEqual {1031}
	770 Move X8, [X19+8]
	771 Move X0, X20
	772 Move X2, X22
	773 Move W8, [X8+40]
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Subtract X8, X29, 16
	776 NotImplemented "Instruction CSEL not yet implemented."
	777 Call 0x3EB2AC0
	778 Move X0, [X19+8]
	779 Move X1, X20
	780 Call 0x1C17E04
	781 Compare X0, 0
	782 JumpIfEqual {794}
	783 Move X9, 0x1E30000
	784 Move X9, [X9+3824]
	785 Move X8, [X0]
	786 Move X1, [X9]
	787 Move W10, [X8+304]
	788 Move W9, [X1+304]
	789 NotImplemented "Instruction CMP not yet implemented."
	790 Move X8, [X8+200]
	791 Add X8, X8, X9
	792 NotImplemented "Instruction LDUR not yet implemented."
	793 NotImplemented "Instruction CMP not yet implemented."
	794 Move X1, X31
	795 Call AndroidJNIHelper.ConvertToJNIArray, X0
	796 Move X8, [X23+16]
	797 Move X20, X0
	798 Move X1, X31
	799 Move X0, X8
	800 Call GlobalJavaObjectRef.op_Implicit, X0
	801 NotImplemented "Instruction LDUR not yet implemented."
	802 Move X2, X20
	803 Move X0, [X19]
	804 Move X8, [X28]
	805 Move W9, [X0+224]
	806 Move X24, [X8]
	807 Compare W9, 0
	808 JumpIfNotEqual {810}
	809 Call 0x1C17DFC
	810 Move X0, X24
	811 Move X1, X31
	812 Call Type.GetTypeFromHandle, X0
	813 Move X8, 0x1E57000
	814 Move X8, [X8+3464]
	815 Move X24, X0
	816 Move X1, X31
	817 Move X8, [X8]
	818 Move X0, X8
	819 Call Type.GetTypeFromHandle, X0
	820 Move X1, X0
	821 Move X0, X24
	822 Move X2, X31
	823 Call Type.op_Equality, X0, X1
	824 Move TEMP, X0
	825 And TEMP, TEMP, 1
	826 Compare TEMP, 1
	827 JumpIfNotEqual {859}
	828 Move X0, [X23+16]
	829 Move X1, X31
	830 Call GlobalJavaObjectRef.op_Implicit, X0
	831 Move X19, [X28]
	832 Move X23, X0
	833 Move X0, X20
	834 Move X2, X22
	835 Move X8, [X19+8]
	836 Move W8, [X8+40]
	837 NotImplemented "Instruction CMP not yet implemented."
	838 Subtract X8, X29, 16
	839 NotImplemented "Instruction CSEL not yet implemented."
	840 Call 0x3EB2AC0
	841 Move X0, [X19+8]
	842 Move X1, X20
	843 Call 0x1C17E04
	844 Compare X0, 0
	845 JumpIfEqual {1028}
	846 Move X8, 0x1E32000
	847 Move X8, [X8+2656]
	848 Move X9, [X0]
	849 Move X1, [X8]
	850 Move X8, [X9+64]
	851 Move X9, [X1+64]
	852 NotImplemented "Instruction CMP not yet implemented."
	853 Call 0x1C17E08
	854 Move X2, [X0]
	855 NotImplemented "Instruction LDUR not yet implemented."
	856 Move X0, X23
	857 Move X3, X31
	858 Call AndroidJNISafe.SetLongField, X0, X1, X2
	859 Move X0, [X19]
	860 Move X8, [X28]
	861 Move W9, [X0+224]
	862 Move X24, [X8]
	863 Compare W9, 0
	864 JumpIfNotEqual {866}
	865 Call 0x1C17DFC
	866 Move X0, X24
	867 Move X1, X31
	868 Call Type.GetTypeFromHandle, X0
	869 Move X8, 0x1E58000
	870 Move X8, [X8+2688]
	871 Move X24, X0
	872 Move X1, X31
	873 Move X8, [X8]
	874 Move X0, X8
	875 Call Type.GetTypeFromHandle, X0
	876 Move X1, X0
	877 Move X0, X24
	878 Move X2, X31
	879 Call Type.op_Equality, X0, X1
	880 Move TEMP, X0
	881 And TEMP, TEMP, 1
	882 Compare TEMP, 1
	883 JumpIfNotEqual {915}
	884 Move X0, [X23+16]
	885 Move X1, X31
	886 Call GlobalJavaObjectRef.op_Implicit, X0
	887 Move X19, [X28]
	888 Move X23, X0
	889 Move X0, X20
	890 Move X2, X22
	891 Move X8, [X19+8]
	892 Move W8, [X8+40]
	893 NotImplemented "Instruction CMP not yet implemented."
	894 Subtract X8, X29, 16
	895 NotImplemented "Instruction CSEL not yet implemented."
	896 Call 0x3EB2AC0
	897 Move X0, [X19+8]
	898 Move X1, X20
	899 Call 0x1C17E04
	900 Compare X0, 0
	901 JumpIfEqual {1028}
	902 Move X8, 0x1E30000
	903 Move X8, [X8+2704]
	904 Move X9, [X0]
	905 Move X1, [X8]
	906 Move X8, [X9+64]
	907 Move X9, [X1+64]
	908 NotImplemented "Instruction CMP not yet implemented."
	909 Call 0x1C17E08
	910 Move V0, [X0]
	911 NotImplemented "Instruction LDUR not yet implemented."
	912 Move X0, X23
	913 Move X2, X31
	914 Call AndroidJNISafe.SetFloatField, X0, X1, V0
	915 Move X0, [X19]
	916 Move X8, [X28]
	917 Move W9, [X0+224]
	918 Move X24, [X8]
	919 Compare W9, 0
	920 JumpIfNotEqual {922}
	921 Call 0x1C17DFC
	922 Move X0, X24
	923 Move X1, X31
	924 Call Type.GetTypeFromHandle, X0
	925 Move X8, 0x1E58000
	926 Move X8, [X8+2680]
	927 Move X24, X0
	928 Move X1, X31
	929 Move X8, [X8]
	930 Move X0, X8
	931 Call Type.GetTypeFromHandle, X0
	932 Move X1, X0
	933 Move X0, X24
	934 Move X2, X31
	935 Call Type.op_Equality, X0, X1
	936 Move TEMP, X0
	937 And TEMP, TEMP, 1
	938 Compare TEMP, 1
	939 JumpIfNotEqual {971}
	940 Move X0, [X23+16]
	941 Move X1, X31
	942 Call GlobalJavaObjectRef.op_Implicit, X0
	943 Move X19, [X28]
	944 Move X23, X0
	945 Move X0, X20
	946 Move X2, X22
	947 Move X8, [X19+8]
	948 Move W8, [X8+40]
	949 NotImplemented "Instruction CMP not yet implemented."
	950 Subtract X8, X29, 16
	951 NotImplemented "Instruction CSEL not yet implemented."
	952 Call 0x3EB2AC0
	953 Move X0, [X19+8]
	954 Move X1, X20
	955 Call 0x1C17E04
	956 Compare X0, 0
	957 JumpIfEqual {1028}
	958 Move X8, 0x1E33000
	959 Move X8, [X8+2424]
	960 Move X9, [X0]
	961 Move X1, [X8]
	962 Move X8, [X9+64]
	963 Move X9, [X1+64]
	964 NotImplemented "Instruction CMP not yet implemented."
	965 Call 0x1C17E08
	966 Move V0, [X0]
	967 NotImplemented "Instruction LDUR not yet implemented."
	968 Move X0, X23
	969 Move X2, X31
	970 Call AndroidJNISafe.SetDoubleField, X0, X1, V0
	971 Move X0, [X19]
	972 Move X8, [X28]
	973 Move W9, [X0+224]
	974 Move X24, [X8]
	975 Compare W9, 0
	976 JumpIfNotEqual {978}
	977 Call 0x1C17DFC
	978 Move X0, X24
	979 Move X1, X31
	980 Call Type.GetTypeFromHandle, X0
	981 Move X8, 0x1E57000
	982 Move X8, [X8+3440]
	983 Move X24, X0
	984 Move X1, X31
	985 Move X8, [X8]
	986 Move X0, X8
	987 Call Type.GetTypeFromHandle, X0
	988 Move X1, X0
	989 Move X0, X24
	990 Move X2, X31
	991 Call Type.op_Equality, X0, X1
	992 Move TEMP, X0
	993 And TEMP, TEMP, 1
	994 Compare TEMP, 1
	995 JumpIfNotEqual {583}
	996 Move X0, [X23+16]
	997 Move X1, X31
	998 Call GlobalJavaObjectRef.op_Implicit, X0
	999 Move X19, [X28]
	1000 Move X23, X0
	1001 Move X0, X20
	1002 Move X2, X22
	1003 Move X8, [X19+8]
	1004 Move W8, [X8+40]
	1005 NotImplemented "Instruction CMP not yet implemented."
	1006 Subtract X8, X29, 16
	1007 NotImplemented "Instruction CSEL not yet implemented."
	1008 Call 0x3EB2AC0
	1009 Move X0, [X19+8]
	1010 Move X1, X20
	1011 Call 0x1C17E04
	1012 Compare X0, 0
	1013 JumpIfEqual {1028}
	1014 Move X8, 0x1E32000
	1015 Move X8, [X8+368]
	1016 Move X9, [X0]
	1017 Move X1, [X8]
	1018 Move X8, [X9+64]
	1019 Move X9, [X1+64]
	1020 NotImplemented "Instruction CMP not yet implemented."
	1021 Call 0x1C17E08
	1022 NotImplemented "Instruction LDRH not yet implemented."
	1023 NotImplemented "Instruction LDUR not yet implemented."
	1024 Move X0, X23
	1025 Move X3, X31
	1026 Call AndroidJNISafe.SetCharField, X0, X1, X2
	1027 Call 0x1C181E0
	1028 Call 0x1C17F20
	1029 Move X0, X2
	1030 Call 0x1C181E0
	1031 Move X0, 0x1E30000
	1032 Move X19, [X19]
	1033 Move X0, [X0+1728]
	1034 Call 0x1C17D08
	1035 Move W8, [X0+224]
	1036 Compare W8, 0
	1037 JumpIfNotEqual {1039}
	1038 Call 0x1C17DFC
	1039 Move X0, X19
	1040 Move X1, X31
	1041 Call Type.GetTypeFromHandle, X0
	1042 Move X20, X0
	1043 Move X0, 0x1E59000
	1044 Move X0, [X0+2728]
	1045 Call 0x1C17D08
	1046 Move X19, X0
	1047 Move X21, X31
	1048 Compare X20, 0
	1049 JumpIfEqual {1056}
	1050 Move X8, [X20]
	1051 Move X0, X20
	1052 Move X9, [X8+360]
	1053 Move X1, [X8+368]
	1054 NotImplemented "Instruction BLR not yet implemented."
	1055 Move X21, X0
	1056 Move X0, 0x1E38000
	1057 Move X0, [X0+2480]
	1058 Call 0x1C17D08
	1059 Move X2, X0
	1060 Move X0, X19
	1061 Move X1, X21
	1062 Move X3, X31
	1063 Call String.Concat, X0, X1, X2
	1064 Move X19, X0
	1065 Move X0, 0x1E30000
	1066 Move X0, [X0+2000]
	1067 Call 0x1C17D08
	1068 Call 0x1C17F10
	1069 Move X1, X19
	1070 Move X2, X31
	1071 Move X20, X0
	1072 Call Exception..ctor, X0, X1
	1073 Move X0, X20
	1074 Move X1, X24
	1075 Call 0x1C17DEC
	1076 Call 0x3EB2B20

Method: System.Void _CallStatic(System.String methodName, System.Object[] args)

Disassembly:
	0x03BF3694 BL 0x1C16F28
	0x03BF3698 BL 0x1C16F28
	0x03BF369C BL 0x1C16F20
	0x03BF36A0 B 0x3BF36B8
	0x03BF36A4 B 0x3BF36B8
	0x03BF36A8 B 0x3BF36B8
	0x03BF36AC B 0x3BF36B8
	0x03BF36B0 B 0x3BF36B8
	0x03BF36B4 B 0x3BF36B8
	0x03BF36B8 MOV X21, X0
	0x03BF36BC CMP W1, 0x1
	0x03BF36C0 B.NE 0x3BF36E0
	0x03BF36C4 MOV X0, X21
	0x03BF36C8 BL 0x3EB1AD0
	0x03BF36CC LDR X20, [X0]
	0x03BF36D0 BL 0x3EB1AE0
	0x03BF36D4 CBZ X19, 0x3BF36E8
	0x03BF36D8 MOV X21, X31
	0x03BF36DC B 0x3BF3638
	0x03BF36E0 MOV X20, X31
	0x03BF36E4 B 0x3BF36F0
	0x03BF36E8 BL 0x1C16F20
	0x03BF36EC MOV X21, X0
	0x03BF36F0 CBNZ X19, 0x3BF36F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+24]
	007 Compare X8, 0
	008 JumpIfEqual {30}
	009 Move X22, [X8+24]
	010 Move X20, X0
	011 Move X0, X2
	012 Move X19, X2
	013 Move X21, X1
	014 Call _AndroidJNIHelper.GetSignature, X0
	015 Move X2, X0
	016 Move W3, 1
	017 Move X0, X22
	018 Move X1, X21
	019 Call _AndroidJNIHelper.GetMethodID, X0, X1, X2, X3
	020 Move X1, X0
	021 Move X0, X20
	022 Move X2, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Call AndroidJavaObject._CallStatic, X0, X1, X2
	029 Return 
	030 Call 0x1C17F20

Method: System.Void _CallStatic(System.IntPtr methodID, System.Object[] args)

Disassembly:
	0x03BF36F8 LDR W8, [X19 + 0x18]
	0x03BF36FC CMP W8, 0x1
	0x03BF3700 B.LS 0x3BF372C
	0x03BF3704 LDR X0, [X19 + 0x28]
	0x03BF3708 BL 0x3BEBA40
	0x03BF370C LDR W8, [X19 + 0x18]
	0x03BF3710 CMP W8, 0x2
	0x03BF3714 B.LS 0x3BF3730
	0x03BF3718 LDR X0, [X19 + 0x30]
	0x03BF371C BL 0x3BEBA40
	0x03BF3720 CBNZ X20, 0x3BF3734
	0x03BF3724 MOV X0, X21
	0x03BF3728 BL 0x1D2C690
	0x03BF372C BL 0x1C16F28
	0x03BF3730 BL 0x1C16F28
	0x03BF3734 MOV X0, X20
	0x03BF3738 BL 0x1C16F18
	0x03BF373C BL 0x1990590
	0x03BF3740 STP X30, X21, [X31 - 0x20]!
	0x03BF3744 STP X20, X19, [X31 + 0x10]
	0x03BF3748 ADRP X21, 0x7F0000
	0x03BF374C ADRP X20, 0x529000
	0x03BF3750 LDRB W8, [X21 + 0x78C]
	0x03BF3754 LDR X20, [X20 + 0x6A0]
	0x03BF3758 MOV X19, X0
	0x03BF375C TBNZ X8, 0x0, 0x3BF3774
	0x03BF3760 ADRP X0, 0x529000
	0x03BF3764 LDR X0, [X0 + 0x6A0]
	0x03BF3768 BL 0x1C16CF4
	0x03BF376C MOVZ W8, 0x1
	0x03BF3770 STRB W8, [X21 + 0x78C]
	0x03BF3774 LDR X0, [X20]
	0x03BF3778 LDR W8, [X0 + 0xE0]
	0x03BF377C CBNZ W8, 0x3BF3788
	0x03BF3780 BL 0x1C16DFC
	0x03BF3784 LDR X0, [X20]
	0x03BF3788 LDR X8, [X0 + 0xB8]
	0x03BF378C MOV X0, X19
	0x03BF3790 LDP X20, X19, [X31 + 0x10]
	0x03BF3794 MOV X2, X31
	0x03BF3798 LDR X1, [X8 + 0x38]
	0x03BF379C LDP X30, X21, [X31], #0x20
	0x03BF37A0 B 0x3BEE0D8
	0x03BF37A4 STP X30, X21, [X31 - 0x20]!
	0x03BF37A8 STP X20, X19, [X31 + 0x10]
	0x03BF37AC ADRP X19, 0x7F0000
	0x03BF37B0 ADRP X21, 0x542000
	0x03BF37B4 LDRB W8, [X19 + 0x78D]
	0x03BF37B8 LDR X21, [X21 + 0xEE8]
	0x03BF37BC MOV X20, X0
	0x03BF37C0 TBNZ X8, 0x0, 0x3BF37E4
	0x03BF37C4 ADRP X0, 0x529000
	0x03BF37C8 LDR X0, [X0 + 0x6A0]
	0x03BF37CC BL 0x1C16CF4
	0x03BF37D0 ADRP X0, 0x542000
	0x03BF37D4 LDR X0, [X0 + 0xEE8]
	0x03BF37D8 BL 0x1C16CF4
	0x03BF37DC MOVZ W8, 0x1
	0x03BF37E0 STRB W8, [X19 + 0x78D]
	0x03BF37E4 LDR X0, [X21]
	0x03BF37E8 MOVZ W1, 0x1
	0x03BF37EC BL 0x1C16D6C
	0x03BF37F0 CBZ X0, 0x3BF3844
	0x03BF37F4 LDR W8, [X0 + 0x18]
	0x03BF37F8 MOV X19, X0
	0x03BF37FC CBZ W8, 0x3BF3848
	0x03BF3800 ADRP X21, 0x529000
	0x03BF3804 LDR X21, [X21 + 0x6A0]
	0x03BF3808 STR X20, [X19 + 0x20]
	0x03BF380C LDR X0, [X21]
	0x03BF3810 LDR W8, [X0 + 0xE0]
	0x03BF3814 CBNZ W8, 0x3BF3820
	0x03BF3818 BL 0x1C16DFC
	0x03BF381C LDR X0, [X21]
	0x03BF3820 LDR X8, [X0 + 0xB8]
	0x03BF3824 LDR X9, [X8]
	0x03BF3828 CBZ X9, 0x3BF3844
	0x03BF382C LDR X0, [X9 + 0x18]
	0x03BF3830 LDR X1, [X8 + 0x20]
	0x03BF3834 MOV X2, X19
	0x03BF3838 LDP X20, X19, [X31 + 0x10]
	0x03BF383C LDP X30, X21, [X31], #0x20
	0x03BF3840 B 0x3BECDA8
	0x03BF3844 BL 0x1C16F20
	0x03BF3848 BL 0x1C16F28
	0x03BF384C STR X30, [X31 - 0x30]!
	0x03BF3850 STP X22, X21, [X31 + 0x10]
	0x03BF3854 STP X20, X19, [X31 + 0x20]
	0x03BF3858 ADRP X19, 0x7F0000
	0x03BF385C STR X1, [X31 + 0x8]
	0x03BF3860 ADRP X22, 0x542000
	0x03BF3864 LDRB W8, [X19 + 0x78E]
	0x03BF3868 LDR X22, [X22 + 0xEE8]
	0x03BF386C MOV X20, X2
	0x03BF3870 MOV X21, X0
	0x03BF3874 TBNZ X8, 0x0, 0x3BF3898
	0x03BF3878 ADRP X0, 0x529000
	0x03BF387C LDR X0, [X0 + 0x6A0]
	0x03BF3880 BL 0x1C16CF4
	0x03BF3884 ADRP X0, 0x542000
	0x03BF3888 LDR X0, [X0 + 0xEE8]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X20, 0x7F1000
	014 Move X19, X2
	015 Move X22, X1
	016 Move [X29-8], X8
	017 Move W8, [X20+1924]
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x56C000
	024 Move X0, [X0+1504]
	025 Call 0x1C17CF4
	026 Move X0, 0x52A000
	027 Move X0, [X0+1720]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1924], W8
	031 Compare X19, 0
	032 JumpIfEqual {47}
	033 Move X21, [X19+24]
	034 Compare X21, 0
	035 JumpIfEqual {48}
	036 Move X8, X21
	037 ShiftRight X8, 32
	038 And X8, X8, 0x7FFFFFFF
	039 NotImplemented "Instruction SBFM not yet implemented."
	040 Compare X8, 0
	041 JumpIfEqual {49}
	042 Add X9, X2, 15
	043 Add X8, X31, 0
	044 And X9, X9, 0xFFFFFFFF
	045 Subtract X20, X8, X9
	046 Add X31, X20, 0
	047 Move X21, X31
	048 Move X20, X31
	049 Move X20, X31
	050 Move X0, X20
	051 Move W1, W31
	052 Call 0x3EB2B10
	053 Move TEMP, X21
	054 And TEMP, TEMP, -2147483648
	055 Compare TEMP, -2147483648
	056 JumpIfNotEqual {59}
	057 Move X0, X31
	058 Call ThrowHelper.ThrowArgumentOutOfRangeException
	059 And X21, X21, 0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X2, X21
	063 Call AndroidJNIHelper.CreateJNIArgArray, X0, X1
	064 Move X8, [X23+24]
	065 Compare X8, 0
	066 JumpIfEqual {89}
	067 Move X0, [X8+24]
	068 Move X1, X22
	069 Move X2, X20
	070 Move X3, X21
	071 Call AndroidJNISafe.CallStaticVoidMethod, X0, X1, X2
	072 Move X0, X19
	073 Move X1, X20
	074 Move X2, X21
	075 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	076 Move X8, [X24+40]
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X31, X29, 0
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X29, [X31+64]
	087 Move X30, [X31+72]
	088 Return 
	089 Call 0x1C17F20
	090 Call 0x3EB2B20
	091 Move X23, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X23
	094 Call 0x3EB2AD0
	095 Move X22, [X0]
	096 Call 0x3EB2AE0
	097 Move X0, X19
	098 Move X1, X20
	099 Move X2, X21
	100 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	101 Compare X22, 0
	102 JumpIfEqual {76}
	103 Move X0, X22
	104 Call 0x1C17F18
	105 Move X22, X31
	106 Move X23, X0
	107 Move X0, X19
	108 Move X1, X20
	109 Move X2, X21
	110 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	111 Compare X22, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X23
	114 Call 0x1D2D690
	115 Move X0, X22
	116 Call 0x1C17F18
	117 Call 0x1991590

Method: ReturnType _CallStatic(System.String methodName, System.Object[] args)

Disassembly:
	0x02289848 B 0x22898C8
	0x0228984C B 0x22898C8
	0x02289850 B 0x22898C8
	0x02289854 B 0x22898C8
	0x02289858 B 0x22898C8
	0x0228985C B 0x22898C8
	0x02289860 B 0x22898C8
	0x02289864 B 0x22898C8
	0x02289868 B 0x22898C8
	0x0228986C B 0x22898C8
	0x02289870 B 0x22898C8
	0x02289874 B 0x22898C8
	0x02289878 B 0x22898C8
	0x0228987C B 0x22898C8
	0x02289880 B 0x22898C8
	0x02289884 B 0x22898C8
	0x02289888 B 0x22898C8
	0x0228988C B 0x22898C8
	0x02289890 B 0x22898C8
	0x02289894 B 0x22898C8
	0x02289898 B 0x22898C8
	0x0228989C B 0x22898C8
	0x022898A0 B 0x22898C8
	0x022898A4 B 0x22898C8
	0x022898A8 B 0x22898C8
	0x022898AC B 0x22898C8
	0x022898B0 B 0x22898C8
	0x022898B4 B 0x22898C8
	0x022898B8 B 0x22898C8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X20, X3
	008 Move X19, X2
	009 Move X22, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X20
	014 Call 0x1C5D6E0
	015 Move X0, [X21+24]
	016 Move X1, X31
	017 Call GlobalJavaObjectRef.op_Implicit, X0
	018 Move X8, [X20+56]
	019 Move W3, 1
	020 Move X1, X22
	021 Move X2, X19
	022 Move X4, [X8]
	023 Call 0x227B364, X0, X1, X2, X3
	024 Move X8, [X20+56]
	025 Move X1, X0
	026 Move X0, X21
	027 Move X2, X19
	028 Move X3, [X8+8]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call 0x22887B8, X0, X1, X2
	035 Return X0

Method: ReturnType _CallStatic(System.IntPtr methodID, System.Object[] args)

Disassembly:
	0x022887B8 B 0x22887CC
	0x022887BC B 0x22887CC
	0x022887C0 B 0x22887CC
	0x022887C4 B 0x22887CC
	0x022887C8 B 0x22887CC
	0x022887CC MOV X22, X0
	0x022887D0 CMP W1, 0x1
	0x022887D4 B.NE 0x2288808
	0x022887D8 MOV X0, X22
	0x022887DC BL 0x3EB1AD0
	0x022887E0 LDR X23, [X0]
	0x022887E4 BL 0x3EB1AE0
	0x022887E8 MOV X0, X19
	0x022887EC MOV X1, X20
	0x022887F0 MOV X2, X21
	0x022887F4 MOV X3, X31
	0x022887F8 BL 0x3BE49F8
	0x022887FC CBNZ X23, 0x2288810
	0x02288800 MOV W22, W31
	0x02288804 B 0x22884A8
	0x02288808 MOV X23, X31
	0x0228880C B 0x228881C
	0x02288810 MOV X0, X23
	0x02288814 BL 0x1C16F18
	0x02288818 MOV X22, X0
	0x0228881C MOV X0, X19
	0x02288820 MOV X1, X20
	0x02288824 MOV X2, X21
	0x02288828 MOV X3, X31
	0x0228882C BL 0x3BE49F8
	0x02288830 CBNZ X23, 0x228883C
	0x02288834 MOV X0, X22
	0x02288838 BL 0x1D2C690
	0x0228883C MOV X0, X23
	0x02288840 BL 0x1C16F18
	0x02288844 BL 0x1990590
	0x02288848 STR X30, [X31 - 0x30]!
	0x0228884C STP X22, X21, [X31 + 0x10]
	0x02288850 STP X20, X19, [X31 + 0x20]
	0x02288854 LDR X8, [X3 + 0x38]
	0x02288858 MOV X20, X3
	0x0228885C MOV X19, X2
	0x02288860 MOV X22, X1
	0x02288864 MOV X21, X0
	0x02288868 CBNZ X8, 0x2288874
	0x0228886C MOV X0, X20
	0x02288870 BL 0x1C5C6E0
	0x02288874 LDR X0, [X21 + 0x18]
	0x02288878 MOV X1, X31
	0x0228887C BL 0x3BEF01C
	0x02288880 LDR X8, [X20 + 0x38]
	0x02288884 MOVZ W3, 0x1
	0x02288888 MOV X1, X22
	0x0228888C MOV X2, X19
	0x02288890 LDR X4, [X8]
	0x02288894 BL 0x227A364
	0x02288898 LDR X8, [X20 + 0x38]
	0x0228889C MOV X1, X0
	0x022888A0 MOV X0, X21
	0x022888A4 MOV X2, X19
	0x022888A8 LDR X3, [X8 + 0x8]
	0x022888AC LDP X20, X19, [X31 + 0x20]
	0x022888B0 LDP X22, X21, [X31 + 0x10]
	0x022888B4 LDR X30, [X31], #0x30
	0x022888B8 B 0x22877B8
	0x022888BC STP X29, X30, [X31 - 0x60]!
	0x022888C0 STP X28, X27, [X31 + 0x10]
	0x022888C4 STP X26, X25, [X31 + 0x20]
	0x022888C8 STP X24, X23, [X31 + 0x30]
	0x022888CC STP X22, X21, [X31 + 0x40]
	0x022888D0 STP X20, X19, [X31 + 0x50]
	0x022888D4 ADD X29, X31, 0x0
	0x022888D8 SUB X31, X31, 0x20
	0x022888DC MRS X8, 0xC000
	0x022888E0 STUR X8, [X29 - 0x18]
	0x022888E4 LDR X8, [X8 + 0x28]
	0x022888E8 MOV X28, X3
	0x022888EC MOV X24, X3
	0x022888F0 MOV X19, X2
	0x022888F4 STUR X8, [X29 - 0x8]
	0x022888F8 LDR X8, [X28 + 0x38]!
	0x022888FC MOV X22, X1
	0x02288900 MOV X23, X0
	0x02288904 CBNZ X8, 0x2288A54
	0x02288908 ADRP X0, 0x1E94000
	0x0228890C LDR X0, [X0 + 0x690]
	0x02288910 BL 0x1C16CF4
	0x02288914 ADRP X0, 0x1E94000
	0x02288918 LDR X0, [X0 + 0x698]
	0x0228891C BL 0x1C16CF4
	0x02288920 ADRP X0, 0x1E94000
	0x02288924 LDR X0, [X0 + 0x6A0]
	0x02288928 BL 0x1C16CF4
	0x0228892C ADRP X0, 0x1E94000
	0x02288930 LDR X0, [X0 + 0x248]
	0x02288934 BL 0x1C16CF4
	0x02288938 ADRP X0, 0x1E6B000
	0x0228893C LDR X0, [X0 + 0xB58]
	0x02288940 BL 0x1C16CF4
	0x02288944 ADRP X0, 0x1E92000
	0x02288948 LDR X0, [X0 + 0xD68]
	0x0228894C BL 0x1C16CF4
	0x02288950 ADRP X0, 0x1E6C000
	0x02288954 LDR X0, [X0 + 0x9D8]
	0x02288958 BL 0x1C16CF4
	0x0228895C ADRP X0, 0x1E92000
	0x02288960 LDR X0, [X0 + 0xD70]
	0x02288964 BL 0x1C16CF4
	0x02288968 ADRP X0, 0x1E6D000
	0x0228896C LDR X0, [X0 + 0x170]
	0x02288970 BL 0x1C16CF4
	0x02288974 ADRP X0, 0x1E6B000
	0x02288978 LDR X0, [X0 + 0xA28]
	0x0228897C BL 0x1C16CF4
	0x02288980 ADRP X0, 0x1E93000
	0x02288984 LDR X0, [X0 + 0xA78]
	0x02288988 BL 0x1C16CF4
	0x0228898C ADRP X0, 0x1E6E000
	0x02288990 LDR X0, [X0 + 0x978]
	0x02288994 BL 0x1C16CF4
	0x02288998 ADRP X0, 0x1E92000
	0x0228899C LDR X0, [X0 + 0xD78]
	0x022889A0 BL 0x1C16CF4
	0x022889A4 ADRP X0, 0x1E6F000
	0x022889A8 LDR X0, [X0 + 0x628]
	0x022889AC BL 0x1C16CF4
	0x022889B0 ADRP X0, 0x1E92000
	0x022889B4 LDR X0, [X0 + 0xD80]
	0x022889B8 BL 0x1C16CF4
	0x022889BC ADRP X0, 0x1E6B000
	0x022889C0 LDR X0, [X0 + 0x758]
	0x022889C4 BL 0x1C16CF4
	0x022889C8 ADRP X0, 0x1E92000
	0x022889CC LDR X0, [X0 + 0xD88]
	0x022889D0 BL 0x1C16CF4
	0x022889D4 ADRP X0, 0x1E6D000
	0x022889D8 LDR X0, [X0 + 0xA60]
	0x022889DC BL 0x1C16CF4
	0x022889E0 ADRP X0, 0x1E94000
	0x022889E4 LDR X0, [X0 + 0x6A8]
	0x022889E8 BL 0x1C16CF4
	0x022889EC ADRP X0, 0x1E92000
	0x022889F0 LDR X0, [X0 + 0xD90]
	0x022889F4 BL 0x1C16CF4
	0x022889F8 ADRP X0, 0x1E94000
	0x022889FC LDR X0, [X0 + 0x6B0]
	0x02288A00 BL 0x1C16CF4
	0x02288A04 ADRP X0, 0x1E93000
	0x02288A08 LDR X0, [X0 + 0xA80]
	0x02288A0C BL 0x1C16CF4
	0x02288A10 ADRP X0, 0x1E6B000
	0x02288A14 LDR X0, [X0 + 0xA90]
	0x02288A18 BL 0x1C16CF4
	0x02288A1C ADRP X0, 0x1E94000
	0x02288A20 LDR X0, [X0 + 0x6B8]
	0x02288A24 BL 0x1C16CF4
	0x02288A28 ADRP X0, 0x1E93000
	0x02288A2C LDR X0, [X0 + 0xB60]
	0x02288A30 BL 0x1C16CF4
	0x02288A34 ADRP X0, 0x1E6B000
	0x02288A38 LDR X0, [X0 + 0x6C0]
	0x02288A3C BL 0x1C16CF4
	0x02288A40 ADRP X0, 0x1E94000
	0x02288A44 LDR X0, [X0 + 0x6C0]
	0x02288A48 BL 0x1C16CF4
	0x02288A4C LDR X8, [X24 + 0x38]
	0x02288A50 CBZ X8, 0x2288AA4
	0x02288A54 CBZ X19, 0x2288AB0
	0x02288A58 LDR X21, [X19 + 0x18]
	0x02288A5C CBZ X21, 0x2288AB4
	0x02288A60 UBFM X8, X21, 0x20, 0x1F
	0x02288A64 SBFM X2, X21, 0x3D, 0x1F
	0x02288A68 CBZ X8, 0x2288A84
	0x02288A6C ADD X9, X2, 0xF
	0x02288A70 ADD X8, X31, 0x0
	0x02288A74 AND X9, X9, 0xFFFFFFFF
	0x02288A78 SUB X20, X8, X9
	0x02288A7C ADD X31, X20, 0x0
	0x02288A80 B 0x2288A88
	0x02288A84 MOV X20, X31
	0x02288A88 MOV X0, X20
	0x02288A8C MOV W1, W31
	0x02288A90 BL 0x3EB1B10
	0x02288A94 TBZ X21, 0x1F, 0x2288AB8
	0x02288A98 MOV X0, X31
	0x02288A9C BL 0x339D6EC
	0x02288AA0 B 0x2288AB8
	0x02288AA4 MOV X0, X24
	0x02288AA8 BL 0x1C5C6E0
	0x02288AAC CBNZ X19, 0x2288A58
	0x02288AB0 MOV X21, X31
	0x02288AB4 MOV X20, X31
	0x02288AB8 AND X21, X21, 0x0
	0x02288ABC MOV X0, X19
	0x02288AC0 MOV X1, X20
	0x02288AC4 MOV X2, X21
	0x02288AC8 MOV X3, X31
	0x02288ACC BL 0x3BE4724
	0x02288AD0 ADRP X26, 0x1E6B000
	0x02288AD4 LDR X26, [X26 + 0x6C0]
	0x02288AD8 LDR X8, [X28]
	0x02288ADC LDR X0, [X26]
	0x02288AE0 LDR X25, [X8]
	0x02288AE4 LDR W9, [X0 + 0xE0]
	0x02288AE8 CBNZ W9, 0x2288AF0
	0x02288AEC BL 0x1C16DFC
	0x02288AF0 MOV X0, X25
	0x02288AF4 MOV X1, X31
	0x02288AF8 BL 0x338C698
	0x02288AFC ADRP X27, 0x1E94000
	0x02288B00 LDR X27, [X27 + 0x6A0]
	0x02288B04 MOV X25, X0
	0x02288B08 LDR X0, [X27]
	0x02288B0C LDR W8, [X0 + 0xE0]
	0x02288B10 CBNZ W8, 0x2288B18
	0x02288B14 BL 0x1C16DFC
	0x02288B18 MOV X0, X25
	0x02288B1C MOV X1, X31
	0x02288B20 BL 0x3BF3054
	0x02288B24 MOV W8, W0
	0x02288B28 LDR X9, [X28]
	0x02288B2C LDR X0, [X26]
	0x02288B30 LDR X25, [X9]
	0x02288B34 LDR W9, [X0 + 0xE0]
	0x02288B38 TBZ X8, 0x0, 0x2288BFC
	0x02288B3C CBNZ W9, 0x2288B44
	0x02288B40 BL 0x1C16DFC
	0x02288B44 MOV X0, X25
	0x02288B48 MOV X1, X31
	0x02288B4C BL 0x338C698
	0x02288B50 ADRP X8, 0x1E92000
	0x02288B54 LDR X8, [X8 + 0xD80]
	0x02288B58 MOV X24, X0
	0x02288B5C LDR X0, [X8]
	0x02288B60 MOV X1, X31
	0x02288B64 BL 0x338C698
	0x02288B68 MOV X1, X0
	0x02288B6C MOV X0, X24
	0x02288B70 MOV X2, X31
	0x02288B74 BL 0x3395194
	0x02288B78 TBZ X0, 0x0, 0x2288CA0
	0x02288B7C LDR X0, [X23 + 0x18]
	0x02288B80 MOV X1, X31
	0x02288B84 BL 0x3BEF01C
	0x02288B88 MOV X1, X22
	0x02288B8C MOV X2, X20
	0x02288B90 MOV X3, X21
	0x02288B94 MOV X4, X31
	0x02288B98 BL 0x3BED1E8
	0x02288B9C ADRP X8, 0x1E6B000
	0x02288BA0 LDR X8, [X8 + 0x758]
	0x02288BA4 STUR W0, [X29 - 0x10]
	0x02288BA8 LDR X8, [X8]
	0x02288BAC SUB X1, X29, 0x10
	0x02288BB0 MOV X0, X8
	0x02288BB4 BL 0x1C16E04
	0x02288BB8 LDR X8, [X28]
	0x02288BBC MOV X22, X0
	0x02288BC0 LDR X1, [X8 + 0x8]
	0x02288BC4 LDRB W8, [X1 + 0x135]
	0x02288BC8 TBNZ X8, 0x0, 0x2288BD8
	0x02288BCC MOV X0, X1
	0x02288BD0 BL 0x1C5C684
	0x02288BD4 MOV X1, X0
	0x02288BD8 CBZ X22, 0x22895E0
	0x02288BDC LDR X8, [X22]
	0x02288BE0 LDR X9, [X1 + 0x40]
	0x02288BE4 LDR X8, [X8 + 0x40]
	0x02288BE8 CMP X8, X9
	0x02288BEC B.NE 0x22895EC
	0x02288BF0 MOV X0, X22
	0x02288BF4 BL 0x1C16E08
	0x02288BF8 B 0x228958C
	0x02288BFC CBNZ W9, 0x2288C04
	0x02288C00 BL 0x1C16DFC
	0x02288C04 MOV X0, X25
	0x02288C08 MOV X1, X31
	0x02288C0C BL 0x338C698
	0x02288C10 ADRP X8, 0x1E93000
	0x02288C14 LDR X8, [X8 + 0xB60]
	0x02288C18 MOV X25, X0
	0x02288C1C LDR X0, [X8]
	0x02288C20 MOV X1, X31
	0x02288C24 BL 0x338C698
	0x02288C28 MOV X1, X0
	0x02288C2C MOV X0, X25
	0x02288C30 MOV X2, X31
	0x02288C34 BL 0x3395194
	0x02288C38 TBZ X0, 0x0, 0x2288D74
	0x02288C3C LDR X0, [X23 + 0x18]
	0x02288C40 MOV X1, X31
	0x02288C44 BL 0x3BEF01C
	0x02288C48 MOV X1, X22
	0x02288C4C MOV X2, X20
	0x02288C50 MOV X3, X21
	0x02288C54 MOV X4, X31
	0x02288C58 BL 0x3BECE10
	0x02288C5C LDR X8, [X28]
	0x02288C60 MOV X22, X0
	0x02288C64 LDR X1, [X8 + 0x8]
	0x02288C68 LDRB W8, [X1 + 0x135]
	0x02288C6C TBNZ X8, 0x0, 0x2288C7C
	0x02288C70 MOV X0, X1
	0x02288C74 BL 0x1C5C684
	0x02288C78 MOV X1, X0
	0x02288C7C CBZ X22, 0x22895DC
	0x02288C80 LDR X8, [X22]
	0x02288C84 LDR X9, [X1 + 0x40]
	0x02288C88 LDR X8, [X8 + 0x40]
	0x02288C8C CMP X8, X9
	0x02288C90 B.NE 0x22895E4
	0x02288C94 MOV X0, X22
	0x02288C98 BL 0x1C16E08
	0x02288C9C B 0x228958C
	0x02288CA0 LDR X0, [X26]
	0x02288CA4 LDR X8, [X28]
	0x02288CA8 LDR W9, [X0 + 0xE0]
	0x02288CAC LDR X24, [X8]
	0x02288CB0 CBNZ W9, 0x2288CB8
	0x02288CB4 BL 0x1C16DFC
	0x02288CB8 MOV X0, X24
	0x02288CBC MOV X1, X31
	0x02288CC0 BL 0x338C698
	0x02288CC4 ADRP X8, 0x1E94000
	0x02288CC8 LDR X8, [X8 + 0x248]
	0x02288CCC MOV X24, X0
	0x02288CD0 LDR X0, [X8]
	0x02288CD4 MOV X1, X31
	0x02288CD8 BL 0x338C698
	0x02288CDC MOV X1, X0
	0x02288CE0 MOV X0, X24
	0x02288CE4 MOV X2, X31
	0x02288CE8 BL 0x3395194
	0x02288CEC TBZ X0, 0x0, 0x2288E48
	0x02288CF0 LDR X0, [X23 + 0x18]
	0x02288CF4 MOV X1, X31
	0x02288CF8 BL 0x3BEF01C
	0x02288CFC MOV X1, X22
	0x02288D00 MOV X2, X20
	0x02288D04 MOV X3, X21
	0x02288D08 MOV X4, X31
	0x02288D0C BL 0x3BED170
	0x02288D10 ADRP X8, 0x1E6B000
	0x02288D14 LDR X8, [X8 + 0xB58]
	0x02288D18 AND W9, W0, 0x1
	0x02288D1C STURB W9, [X29 - 0x10]
	0x02288D20 LDR X8, [X8]
	0x02288D24 SUB X1, X29, 0x10
	0x02288D28 MOV X0, X8
	0x02288D2C BL 0x1C16E04
	0x02288D30 LDR X8, [X28]
	0x02288D34 MOV X22, X0
	0x02288D38 LDR X1, [X8 + 0x8]
	0x02288D3C LDRB W8, [X1 + 0x135]
	0x02288D40 TBNZ X8, 0x0, 0x2288D50
	0x02288D44 MOV X0, X1
	0x02288D48 BL 0x1C5C684
	0x02288D4C MOV X1, X0
	0x02288D50 CBZ X22, 0x22895F4
	0x02288D54 LDR X8, [X22]
	0x02288D58 LDR X9, [X1 + 0x40]
	0x02288D5C LDR X8, [X8 + 0x40]
	0x02288D60 CMP X8, X9
	0x02288D64 B.NE 0x22895F8
	0x02288D68 MOV X0, X22
	0x02288D6C BL 0x1C16E08
	0x02288D70 B 0x228958C
	0x02288D74 LDR X0, [X26]
	0x02288D78 LDR X8, [X28]
	0x02288D7C LDR W9, [X0 + 0xE0]
	0x02288D80 LDR X25, [X8]
	0x02288D84 CBNZ W9, 0x2288D8C
	0x02288D88 BL 0x1C16DFC
	0x02288D8C MOV X0, X25
	0x02288D90 MOV X1, X31
	0x02288D94 BL 0x338C698
	0x02288D98 ADRP X8, 0x1E94000
	0x02288D9C LDR X8, [X8 + 0x690]
	0x02288DA0 MOV X25, X0
	0x02288DA4 LDR X0, [X8]
	0x02288DA8 MOV X1, X31
	0x02288DAC BL 0x338C698
	0x02288DB0 MOV X1, X0
	0x02288DB4 MOV X0, X25
	0x02288DB8 MOV X2, X31
	0x02288DBC BL 0x3395194
	0x02288DC0 TBZ X0, 0x0, 0x2288F44
	0x02288DC4 LDR X0, [X23 + 0x18]
	0x02288DC8 MOV X1, X31
	0x02288DCC BL 0x3BEF01C
	0x02288DD0 MOV X1, X22
	0x02288DD4 MOV X2, X20
	0x02288DD8 MOV X3, X21
	0x02288DDC MOV X4, X31
	0x02288DE0 BL 0x3BE5D04
	0x02288DE4 MOV X22, X0
	0x02288DE8 MOV X1, X31
	0x02288DEC MOV X2, X31
	0x02288DF0 BL 0x33BE5B0
	0x02288DF4 TBNZ X0, 0x0, 0x2288FC8
	0x02288DF8 MOV X0, X22
	0x02288DFC MOV X1, X31
	0x02288E00 BL 0x3BF2EDC
	0x02288E04 LDR X8, [X28]
	0x02288E08 MOV X22, X0
	0x02288E0C LDR X1, [X8 + 0x8]
	0x02288E10 LDRB W8, [X1 + 0x135]
	0x02288E14 TBNZ X8, 0x0, 0x2288E24
	0x02288E18 MOV X0, X1
	0x02288E1C BL 0x1C5C684
	0x02288E20 MOV X1, X0
	0x02288E24 CBZ X22, 0x2289600
	0x02288E28 LDR X8, [X22]
	0x02288E2C LDR X9, [X1 + 0x40]
	0x02288E30 LDR X8, [X8 + 0x40]
	0x02288E34 CMP X8, X9
	0x02288E38 B.NE 0x2289604
	0x02288E3C MOV X0, X22
	0x02288E40 BL 0x1C16E08
	0x02288E44 B 0x228958C
	0x02288E48 LDR X0, [X26]
	0x02288E4C LDR X8, [X28]
	0x02288E50 LDR W9, [X0 + 0xE0]
	0x02288E54 LDR X24, [X8]
	0x02288E58 CBNZ W9, 0x2288E60
	0x02288E5C BL 0x1C16DFC
	0x02288E60 MOV X0, X24
	0x02288E64 MOV X1, X31
	0x02288E68 BL 0x338C698
	0x02288E6C ADRP X8, 0x1E92000
	0x02288E70 LDR X8, [X8 + 0xD68]
	0x02288E74 MOV X24, X0
	0x02288E78 LDR X0, [X8]
	0x02288E7C MOV X1, X31
	0x02288E80 BL 0x338C698
	0x02288E84 MOV X1, X0
	0x02288E88 MOV X0, X24
	0x02288E8C MOV X2, X31
	0x02288E90 BL 0x3395194
	0x02288E94 TBZ X0, 0x0, 0x2288FD0
	0x02288E98 ADRP X8, 0x1E6B000
	0x02288E9C LDR X8, [X8 + 0xA28]
	0x02288EA0 LDR X0, [X8]
	0x02288EA4 LDR W8, [X0 + 0xE0]
	0x02288EA8 CBNZ W8, 0x2288EB0
	0x02288EAC BL 0x1C16DFC
	0x02288EB0 ADRP X8, 0x1E94000
	0x02288EB4 LDR X8, [X8 + 0x6C0]
	0x02288EB8 LDR X0, [X8]
	0x02288EBC MOV X1, X31
	0x02288EC0 BL 0x3C06A04
	0x02288EC4 LDR X0, [X23 + 0x18]
	0x02288EC8 MOV X1, X31
	0x02288ECC BL 0x3BEF01C
	0x02288ED0 MOV X1, X22
	0x02288ED4 MOV X2, X20
	0x02288ED8 MOV X3, X21
	0x02288EDC MOV X4, X31
	0x02288EE0 BL 0x3BED0F8
	0x02288EE4 ADRP X8, 0x1E6C000
	0x02288EE8 LDR X8, [X8 + 0x9D8]
	0x02288EEC STURB W0, [X29 - 0x10]
	0x02288EF0 LDR X8, [X8]
	0x02288EF4 SUB X1, X29, 0x10
	0x02288EF8 MOV X0, X8
	0x02288EFC BL 0x1C16E04
	0x02288F00 LDR X8, [X28]
	0x02288F04 MOV X22, X0
	0x02288F08 LDR X1, [X8 + 0x8]
	0x02288F0C LDRB W8, [X1 + 0x135]
	0x02288F10 TBNZ X8, 0x0, 0x2288F20
	0x02288F14 MOV X0, X1
	0x02288F18 BL 0x1C5C684
	0x02288F1C MOV X1, X0
	0x02288F20 CBZ X22, 0x2289658
	0x02288F24 LDR X8, [X22]
	0x02288F28 LDR X9, [X1 + 0x40]
	0x02288F2C LDR X8, [X8 + 0x40]
	0x02288F30 CMP X8, X9
	0x02288F34 B.NE 0x228965C
	0x02288F38 MOV X0, X22
	0x02288F3C BL 0x1C16E08
	0x02288F40 B 0x228958C
	0x02288F44 LDR X0, [X26]
	0x02288F48 LDR X8, [X28]
	0x02288F4C LDR W9, [X0 + 0xE0]
	0x02288F50 LDR X25, [X8]
	0x02288F54 CBNZ W9, 0x2288F5C
	0x02288F58 BL 0x1C16DFC
	0x02288F5C MOV X0, X25
	0x02288F60 MOV X1, X31
	0x02288F64 BL 0x338C698
	0x02288F68 ADRP X8, 0x1E94000
	0x02288F6C LDR X8, [X8 + 0x698]
	0x02288F70 MOV X25, X0
	0x02288F74 LDR X0, [X8]
	0x02288F78 MOV X1, X31
	0x02288F7C BL 0x338C698
	0x02288F80 MOV X1, X0
	0x02288F84 MOV X0, X25
	0x02288F88 MOV X2, X31
	0x02288F8C BL 0x3395194
	0x02288F90 TBZ X0, 0x0, 0x22890A0
	0x02288F94 LDR X0, [X23 + 0x18]
	0x02288F98 MOV X1, X31
	0x02288F9C BL 0x3BEF01C
	0x02288FA0 MOV X1, X22
	0x02288FA4 MOV X2, X20
	0x02288FA8 MOV X3, X21
	0x02288FAC MOV X4, X31
	0x02288FB0 BL 0x3BE5D04
	0x02288FB4 MOV X22, X0
	0x02288FB8 MOV X1, X31
	0x02288FBC MOV X2, X31
	0x02288FC0 BL 0x33BE5B0
	0x02288FC4 TBZ X0, 0x0, 0x2289138
	0x02288FC8 MOV W22, W31
	0x02288FCC B 0x2289590
	0x02288FD0 LDR X0, [X26]
	0x02288FD4 LDR X8, [X28]
	0x02288FD8 LDR W9, [X0 + 0xE0]
	0x02288FDC LDR X24, [X8]
	0x02288FE0 CBNZ W9, 0x2288FE8
	0x02288FE4 BL 0x1C16DFC
	0x02288FE8 MOV X0, X24
	0x02288FEC MOV X1, X31
	0x02288FF0 BL 0x338C698
	0x02288FF4 ADRP X8, 0x1E92000
	0x02288FF8 LDR X8, [X8 + 0xD90]
	0x02288FFC MOV X24, X0
	0x02289000 LDR X0, [X8]
	0x02289004 MOV X1, X31
	0x02289008 BL 0x338C698
	0x0228900C MOV X1, X0
	0x02289010 MOV X0, X24
	0x02289014 MOV X2, X31
	0x02289018 BL 0x3395194
	0x0228901C TBZ X0, 0x0, 0x2289188
	0x02289020 LDR X0, [X23 + 0x18]
	0x02289024 MOV X1, X31
	0x02289028 BL 0x3BEF01C
	0x0228902C MOV X1, X22
	0x02289030 MOV X2, X20
	0x02289034 MOV X3, X21
	0x02289038 MOV X4, X31
	0x0228903C BL 0x3BED0F8
	0x02289040 ADRP X8, 0x1E93000
	0x02289044 LDR X8, [X8 + 0x6B0]
	0x02289048 STURB W0, [X29 - 0x10]
	0x0228904C LDR X8, [X8]
	0x02289050 SUB X1, X29, 0x10
	0x02289054 MOV X0, X8
	0x02289058 BL 0x1C16E04
	0x0228905C LDR X8, [X28]
	0x02289060 MOV X22, X0
	0x02289064 LDR X1, [X8 + 0x8]
	0x02289068 LDRB W8, [X1 + 0x135]
	0x0228906C TBNZ X8, 0x0, 0x228907C
	0x02289070 MOV X0, X1
	0x02289074 BL 0x1C5C684
	0x02289078 MOV X1, X0
	0x0228907C CBZ X22, 0x2289670
	0x02289080 LDR X8, [X22]
	0x02289084 LDR X9, [X1 + 0x40]
	0x02289088 LDR X8, [X8 + 0x40]
	0x0228908C CMP X8, X9
	0x02289090 B.NE 0x2289674
	0x02289094 MOV X0, X22
	0x02289098 BL 0x1C16E08
	0x0228909C B 0x228958C
	0x022890A0 ADRP X8, 0x1E93000
	0x022890A4 LDR X0, [X26]
	0x022890A8 LDR X8, [X8 + 0x6A8]
	0x022890AC LDR W9, [X0 + 0xE0]
	0x022890B0 LDR X25, [X8]
	0x022890B4 CBNZ W9, 0x22890BC
	0x022890B8 BL 0x1C16DFC
	0x022890BC MOV X0, X25
	0x022890C0 MOV X1, X31
	0x022890C4 BL 0x338C698
	0x022890C8 LDR X8, [X28]
	0x022890CC MOV X25, X0
	0x022890D0 LDR X0, [X8]
	0x022890D4 MOV X1, X31
	0x022890D8 BL 0x338C698
	0x022890DC MOV X26, X0
	0x022890E0 LDR X0, [X27]
	0x022890E4 LDR W8, [X0 + 0xE0]
	0x022890E8 CBNZ W8, 0x22890F0
	0x022890EC BL 0x1C16DFC
	0x022890F0 MOV X0, X25
	0x022890F4 MOV X1, X26
	0x022890F8 MOV X2, X31
	0x022890FC BL 0x3BF3068
	0x02289100 TBZ X0, 0x0, 0x228960C
	0x02289104 LDR X0, [X23 + 0x18]
	0x02289108 MOV X1, X31
	0x0228910C BL 0x3BEF01C
	0x02289110 MOV X1, X22
	0x02289114 MOV X2, X20
	0x02289118 MOV X3, X21
	0x0228911C MOV X4, X31
	0x02289120 BL 0x3BE5D04
	0x02289124 LDR X8, [X28]
	0x02289128 LDR X1, [X8 + 0x10]
	0x0228912C BL 0x227BCDC
	0x02289130 MOV W22, W0
	0x02289134 B 0x2289590
	0x02289138 MOV X0, X22
	0x0228913C MOV X1, X31
	0x02289140 BL 0x3BF1A28
	0x02289144 LDR X8, [X28]
	0x02289148 MOV X22, X0
	0x0228914C LDR X1, [X8 + 0x8]
	0x02289150 LDRB W8, [X1 + 0x135]
	0x02289154 TBNZ X8, 0x0, 0x2289164
	0x02289158 MOV X0, X1
	0x0228915C BL 0x1C5C684
	0x02289160 MOV X1, X0
	0x02289164 CBZ X22, 0x2289664
	0x02289168 LDR X8, [X22]
	0x0228916C LDR X9, [X1 + 0x40]
	0x02289170 LDR X8, [X8 + 0x40]
	0x02289174 CMP X8, X9
	0x02289178 B.NE 0x2289668
	0x0228917C MOV X0, X22
	0x02289180 BL 0x1C16E08
	0x02289184 B 0x228958C
	0x02289188 LDR X0, [X26]
	0x0228918C LDR X8, [X28]
	0x02289190 LDR W9, [X0 + 0xE0]
	0x02289194 LDR X24, [X8]
	0x02289198 CBNZ W9, 0x22891A0
	0x0228919C BL 0x1C16DFC
	0x022891A0 MOV X0, X24
	0x022891A4 MOV X1, X31
	0x022891A8 BL 0x338C698
	0x022891AC ADRP X8, 0x1E91000
	0x022891B0 LDR X8, [X8 + 0xD78]
	0x022891B4 MOV X24, X0
	0x022891B8 LDR X0, [X8]
	0x022891BC MOV X1, X31
	0x022891C0 BL 0x338C698
	0x022891C4 MOV X1, X0
	0x022891C8 MOV X0, X24
	0x022891CC MOV X2, X31
	0x022891D0 BL 0x3395194
	0x022891D4 TBZ X0, 0x0, 0x2289258
	0x022891D8 LDR X0, [X23 + 0x18]
	0x022891DC MOV X1, X31
	0x022891E0 BL 0x3BEF01C
	0x022891E4 MOV X1, X22
	0x022891E8 MOV X2, X20
	0x022891EC MOV X3, X21
	0x022891F0 MOV X4, X31
	0x022891F4 BL 0x3BED080
	0x022891F8 ADRP X8, 0x1E6E000
	0x022891FC LDR X8, [X8 + 0x628]
	0x02289200 STURH W0, [X29 - 0x10]
	0x02289204 LDR X8, [X8]
	0x02289208 SUB X1, X29, 0x10
	0x0228920C MOV X0, X8
	0x02289210 BL 0x1C16E04
	0x02289214 LDR X8, [X28]
	0x02289218 MOV X22, X0
	0x0228921C LDR X1, [X8 + 0x8]
	0x02289220 LDRB W8, [X1 + 0x135]
	0x02289224 TBNZ X8, 0x0, 0x2289234
	0x02289228 MOV X0, X1
	0x0228922C BL 0x1C5C684
	0x02289230 MOV X1, X0
	0x02289234 CBZ X22, 0x228967C
	0x02289238 LDR X8, [X22]
	0x0228923C LDR X9, [X1 + 0x40]
	0x02289240 LDR X8, [X8 + 0x40]
	0x02289244 CMP X8, X9
	0x02289248 B.NE 0x2289680
	0x0228924C MOV X0, X22
	0x02289250 BL 0x1C16E08
	0x02289254 B 0x228958C
	0x02289258 LDR X0, [X26]
	0x0228925C LDR X8, [X28]
	0x02289260 LDR W9, [X0 + 0xE0]
	0x02289264 LDR X24, [X8]
	0x02289268 CBNZ W9, 0x2289270
	0x0228926C BL 0x1C16DFC
	0x02289270 MOV X0, X24
	0x02289274 MOV X1, X31
	0x02289278 BL 0x338C698
	0x0228927C ADRP X8, 0x1E91000
	0x02289280 LDR X8, [X8 + 0xD88]
	0x02289284 MOV X24, X0
	0x02289288 LDR X0, [X8]
	0x0228928C MOV X1, X31
	0x02289290 BL 0x338C698
	0x02289294 MOV X1, X0
	0x02289298 MOV X0, X24
	0x0228929C MOV X2, X31
	0x022892A0 BL 0x3395194
	0x022892A4 TBZ X0, 0x0, 0x2289328
	0x022892A8 LDR X0, [X23 + 0x18]
	0x022892AC MOV X1, X31
	0x022892B0 BL 0x3BEF01C
	0x022892B4 MOV X1, X22
	0x022892B8 MOV X2, X20
	0x022892BC MOV X3, X21
	0x022892C0 MOV X4, X31
	0x022892C4 BL 0x3BED008
	0x022892C8 ADRP X8, 0x1E6C000
	0x022892CC LDR X8, [X8 + 0xA60]
	0x022892D0 STUR X0, [X29 - 0x10]
	0x022892D4 LDR X8, [X8]
	0x022892D8 SUB X1, X29, 0x10
	0x022892DC MOV X0, X8
	0x022892E0 BL 0x1C16E04
	0x022892E4 LDR X8, [X28]
	0x022892E8 MOV X22, X0
	0x022892EC LDR X1, [X8 + 0x8]
	0x022892F0 LDRB W8, [X1 + 0x135]
	0x022892F4 TBNZ X8, 0x0, 0x2289304
	0x022892F8 MOV X0, X1
	0x022892FC BL 0x1C5C684
	0x02289300 MOV X1, X0
	0x02289304 CBZ X22, 0x2289688
	0x02289308 LDR X8, [X22]
	0x0228930C LDR X9, [X1 + 0x40]
	0x02289310 LDR X8, [X8 + 0x40]
	0x02289314 CMP X8, X9
	0x02289318 B.NE 0x228968C
	0x0228931C MOV X0, X22
	0x02289320 BL 0x1C16E08
	0x02289324 B 0x228958C
	0x02289328 LDR X0, [X26]
	0x0228932C LDR X8, [X28]
	0x02289330 LDR W9, [X0 + 0xE0]
	0x02289334 LDR X24, [X8]
	0x02289338 CBNZ W9, 0x2289340
	0x0228933C BL 0x1C16DFC
	0x02289340 MOV X0, X24
	0x02289344 MOV X1, X31
	0x02289348 BL 0x338C698
	0x0228934C ADRP X8, 0x1E92000
	0x02289350 LDR X8, [X8 + 0xA80]
	0x02289354 MOV X24, X0
	0x02289358 LDR X0, [X8]
	0x0228935C MOV X1, X31
	0x02289360 BL 0x338C698
	0x02289364 MOV X1, X0
	0x02289368 MOV X0, X24
	0x0228936C MOV X2, X31
	0x02289370 BL 0x3395194
	0x02289374 TBZ X0, 0x0, 0x22893F4
	0x02289378 LDR X0, [X23 + 0x18]
	0x0228937C MOV X1, X31
	0x02289380 BL 0x3BEF01C
	0x02289384 MOV X1, X22
	0x02289388 MOV X2, X20
	0x0228938C MOV X3, X21
	0x02289390 MOV X4, X31
	0x02289394 BL 0x3BECF84
	0x02289398 ADRP X8, 0x1E6A000
	0x0228939C LDR X8, [X8 + 0xA90]
	0x022893A0 STUR S0, [X29 - 0x10]
	0x022893A4 LDR X0, [X8]
	0x022893A8 SUB X1, X29, 0x10
	0x022893AC BL 0x1C16E04
	0x022893B0 LDR X8, [X28]
	0x022893B4 MOV X22, X0
	0x022893B8 LDR X1, [X8 + 0x8]
	0x022893BC LDRB W8, [X1 + 0x135]
	0x022893C0 TBNZ X8, 0x0, 0x22893D0
	0x022893C4 MOV X0, X1
	0x022893C8 BL 0x1C5C684
	0x022893CC MOV X1, X0
	0x022893D0 CBZ X22, 0x2289708
	0x022893D4 LDR X8, [X22]
	0x022893D8 LDR X9, [X1 + 0x40]
	0x022893DC LDR X8, [X8 + 0x40]
	0x022893E0 CMP X8, X9
	0x022893E4 B.NE 0x228970C
	0x022893E8 MOV X0, X22
	0x022893EC BL 0x1C16E08
	0x022893F0 B 0x228958C
	0x022893F4 LDR X0, [X26]
	0x022893F8 LDR X8, [X28]
	0x022893FC LDR W9, [X0 + 0xE0]
	0x02289400 LDR X24, [X8]
	0x02289404 CBNZ W9, 0x228940C
	0x02289408 BL 0x1C16DFC
	0x0228940C MOV X0, X24
	0x02289410 MOV X1, X31
	0x02289414 BL 0x338C698
	0x02289418 ADRP X8, 0x1E92000
	0x0228941C LDR X8, [X8 + 0xA78]
	0x02289420 MOV X24, X0
	0x02289424 LDR X0, [X8]
	0x02289428 MOV X1, X31
	0x0228942C BL 0x338C698
	0x02289430 MOV X1, X0
	0x02289434 MOV X0, X24
	0x02289438 MOV X2, X31
	0x0228943C BL 0x3395194
	0x02289440 TBZ X0, 0x0, 0x22894C0
	0x02289444 LDR X0, [X23 + 0x18]
	0x02289448 MOV X1, X31
	0x0228944C BL 0x3BEF01C
	0x02289450 MOV X1, X22
	0x02289454 MOV X2, X20
	0x02289458 MOV X3, X21
	0x0228945C MOV X4, X31
	0x02289460 BL 0x3BECF00
	0x02289464 ADRP X8, 0x1E6D000
	0x02289468 LDR X8, [X8 + 0x978]
	0x0228946C STUR D0, [X29 - 0x10]
	0x02289470 LDR X0, [X8]
	0x02289474 SUB X1, X29, 0x10
	0x02289478 BL 0x1C16E04
	0x0228947C LDR X8, [X28]
	0x02289480 MOV X22, X0
	0x02289484 LDR X1, [X8 + 0x8]
	0x02289488 LDRB W8, [X1 + 0x135]
	0x0228948C TBNZ X8, 0x0, 0x228949C
	0x02289490 MOV X0, X1
	0x02289494 BL 0x1C5C684
	0x02289498 MOV X1, X0
	0x0228949C CBZ X22, 0x2289714
	0x022894A0 LDR X8, [X22]
	0x022894A4 LDR X9, [X1 + 0x40]
	0x022894A8 LDR X8, [X8 + 0x40]
	0x022894AC CMP X8, X9
	0x022894B0 B.NE 0x2289718
	0x022894B4 MOV X0, X22
	0x022894B8 BL 0x1C16E08
	0x022894BC B 0x228958C
	0x022894C0 LDR X0, [X26]
	0x022894C4 LDR X8, [X28]
	0x022894C8 LDR W9, [X0 + 0xE0]
	0x022894CC LDR X24, [X8]
	0x022894D0 CBNZ W9, 0x22894D8
	0x022894D4 BL 0x1C16DFC
	0x022894D8 MOV X0, X24
	0x022894DC MOV X1, X31
	0x022894E0 BL 0x338C698
	0x022894E4 ADRP X8, 0x1E91000
	0x022894E8 LDR X8, [X8 + 0xD70]
	0x022894EC MOV X24, X0
	0x022894F0 LDR X0, [X8]
	0x022894F4 MOV X1, X31
	0x022894F8 BL 0x338C698
	0x022894FC MOV X1, X0
	0x02289500 MOV X0, X24
	0x02289504 MOV X2, X31
	0x02289508 BL 0x3395194
	0x0228950C TBZ X0, 0x0, 0x2288FC8
	0x02289510 LDR X0, [X23 + 0x18]
	0x02289514 MOV X1, X31
	0x02289518 BL 0x3BEF01C
	0x0228951C MOV X1, X22
	0x02289520 MOV X2, X20
	0x02289524 MOV X3, X21
	0x02289528 MOV X4, X31
	0x0228952C BL 0x3BECE88
	0x02289530 ADRP X8, 0x1E6C000
	0x02289534 LDR X8, [X8 + 0x170]
	0x02289538 STURH W0, [X29 - 0x10]
	0x0228953C LDR X8, [X8]
	0x02289540 SUB X1, X29, 0x10
	0x02289544 MOV X0, X8
	0x02289548 BL 0x1C16E04
	0x0228954C LDR X8, [X28]
	0x02289550 MOV X22, X0
	0x02289554 LDR X1, [X8 + 0x8]
	0x02289558 LDRB W8, [X1 + 0x135]
	0x0228955C TBNZ X8, 0x0, 0x228956C
	0x02289560 MOV X0, X1
	0x02289564 BL 0x1C5C684
	0x02289568 MOV X1, X0
	0x0228956C CBZ X22, 0x2289720
	0x02289570 LDR X8, [X22]
	0x02289574 LDR X9, [X1 + 0x40]
	0x02289578 LDR X8, [X8 + 0x40]
	0x0228957C CMP X8, X9
	0x02289580 B.NE 0x2289724
	0x02289584 MOV X0, X22
	0x02289588 BL 0x1C16E08
	0x0228958C LDR W22, [X0]
	0x02289590 MOV X0, X19
	0x02289594 MOV X1, X20
	0x02289598 MOV X2, X21
	0x0228959C MOV X3, X31
	0x022895A0 BL 0x3BE49F8
	0x022895A4 LDUR X8, [X29 - 0x18]
	0x022895A8 LDR X8, [X8 + 0x28]
	0x022895AC LDUR X9, [X29 - 0x8]
	0x022895B0 CMP X8, X9
	0x022895B4 B.NE 0x228972C
	0x022895B8 MOV W0, W22
	0x022895BC ADD X31, X29, 0x0
	0x022895C0 LDP X20, X19, [X31 + 0x50]
	0x022895C4 LDP X22, X21, [X31 + 0x40]
	0x022895C8 LDP X24, X23, [X31 + 0x30]
	0x022895CC LDP X26, X25, [X31 + 0x20]
	0x022895D0 LDP X28, X27, [X31 + 0x10]
	0x022895D4 LDP X29, X30, [X31], #0x60
	0x022895D8 RET
	0x022895DC BL 0x1C16F20
	0x022895E0 BL 0x1C16F20
	0x022895E4 MOV X0, X22
	0x022895E8 BL 0x1C171E0
	0x022895EC MOV X0, X22
	0x022895F0 BL 0x1C171E0
	0x022895F4 BL 0x1C16F20
	0x022895F8 MOV X0, X22
	0x022895FC BL 0x1C171E0
	0x02289600 BL 0x1C16F20
	0x02289604 MOV X0, X22
	0x02289608 BL 0x1C171E0
	0x0228960C LDR X8, [X28]
	0x02289610 LDR X22, [X8]
	0x02289614 ADRP X0, 0x1E6A000
	0x02289618 LDR X0, [X0 + 0x6C0]
	0x0228961C BL 0x1C16D08
	0x02289620 LDR W8, [X0 + 0xE0]
	0x02289624 CBNZ W8, 0x228962C
	0x02289628 BL 0x1C16DFC
	0x0228962C MOV X0, X22
	0x02289630 MOV X1, X31
	0x02289634 BL 0x338C698
	0x02289638 MOV X23, X0
	0x0228963C CBNZ X0, 0x2289694
	0x02289640 ADRP X0, 0x1E93000
	0x02289644 LDR X0, [X0 + 0x6C8]
	0x02289648 BL 0x1C16D08
	0x0228964C MOV X22, X0
	0x02289650 MOV X23, X31
	0x02289654 B 0x22896B8
	0x02289658 BL 0x1C16F20
	0x0228965C MOV X0, X22
	0x02289660 BL 0x1C171E0
	0x02289664 BL 0x1C16F20
	0x02289668 MOV X0, X22
	0x0228966C BL 0x1C171E0
	0x02289670 BL 0x1C16F20
	0x02289674 MOV X0, X22
	0x02289678 BL 0x1C171E0
	0x0228967C BL 0x1C16F20
	0x02289680 MOV X0, X22
	0x02289684 BL 0x1C171E0
	0x02289688 BL 0x1C16F20
	0x0228968C MOV X0, X22
	0x02289690 BL 0x1C171E0
	0x02289694 ADRP X0, 0x1E93000
	0x02289698 LDR X0, [X0 + 0x6C8]
	0x0228969C BL 0x1C16D08
	0x022896A0 LDR X8, [X23]
	0x022896A4 MOV X22, X0
	0x022896A8 LDP X9, X1, [X8 + 0x168]
	0x022896AC MOV X0, X23
	0x022896B0 BLR X9
	0x022896B4 MOV X23, X0
	0x022896B8 ADRP X0, 0x1E72000
	0x022896BC LDR X0, [X0 + 0x9B0]
	0x022896C0 BL 0x1C16D08
	0x022896C4 MOV X2, X0
	0x022896C8 MOV X0, X22
	0x022896CC MOV X1, X23
	0x022896D0 MOV X3, X31
	0x022896D4 BL 0x32274B8
	0x022896D8 MOV X22, X0
	0x022896DC ADRP X0, 0x1E6A000
	0x022896E0 LDR X0, [X0 + 0x7D0]
	0x022896E4 BL 0x1C16D08
	0x022896E8 BL 0x1C16F10
	0x022896EC MOV X23, X0
	0x022896F0 MOV X1, X22
	0x022896F4 MOV X2, X31
	0x022896F8 BL 0x33B2C70
	0x022896FC MOV X0, X23
	0x02289700 MOV X1, X24
	0x02289704 BL 0x1C16DEC
	0x02289708 BL 0x1C16F20
	0x0228970C MOV X0, X22
	0x02289710 BL 0x1C171E0
	0x02289714 BL 0x1C16F20
	0x02289718 MOV X0, X22
	0x0228971C BL 0x1C171E0
	0x02289720 BL 0x1C16F20
	0x02289724 MOV X0, X22
	0x02289728 BL 0x1C171E0
	0x0228972C BL 0x3EB1B20
	0x02289730 B 0x22898C8
	0x02289734 B 0x22898C8
	0x02289738 B 0x22898C8
	0x0228973C B 0x22898C8
	0x02289740 B 0x22898C8
	0x02289744 MOV X22, X0
	0x02289748 B 0x22898CC
	0x0228974C B 0x22898C8
	0x02289750 B 0x22898C8
	0x02289754 B 0x22898C8
	0x02289758 B 0x22898C8
	0x0228975C B 0x22898C8
	0x02289760 B 0x22898C8
	0x02289764 B 0x22898C8
	0x02289768 B 0x22898C8
	0x0228976C B 0x22898C8
	0x02289770 B 0x22898C8
	0x02289774 B 0x22898C8
	0x02289778 B 0x22898C8
	0x0228977C B 0x22898C8
	0x02289780 B 0x22898C8
	0x02289784 B 0x22898C8
	0x02289788 B 0x22898C8
	0x0228978C B 0x22898C8
	0x02289790 B 0x22898C8
	0x02289794 B 0x22898C8
	0x02289798 B 0x22898C8
	0x0228979C B 0x22898C8
	0x022897A0 B 0x22898C8
	0x022897A4 B 0x22898C8
	0x022897A8 B 0x22898C8
	0x022897AC B 0x22898C8
	0x022897B0 B 0x22898C8
	0x022897B4 B 0x22898C8
	0x022897B8 B 0x22898C8
	0x022897BC B 0x22898C8
	0x022897C0 B 0x22898C8
	0x022897C4 B 0x22898C8
	0x022897C8 B 0x22898C8
	0x022897CC B 0x22898C8
	0x022897D0 B 0x22898C8
	0x022897D4 B 0x22898C8
	0x022897D8 B 0x22898C8
	0x022897DC B 0x22898C8
	0x022897E0 B 0x22898C8
	0x022897E4 B 0x22898C8
	0x022897E8 B 0x22898C8
	0x022897EC B 0x22898C8
	0x022897F0 B 0x22898C8
	0x022897F4 B 0x22898C8
	0x022897F8 B 0x22898C8
	0x022897FC B 0x22898C8
	0x02289800 B 0x22898C8
	0x02289804 B 0x22898C8
	0x02289808 B 0x22898C8
	0x0228980C B 0x22898C8
	0x02289810 B 0x22898C8
	0x02289814 B 0x22898C8
	0x02289818 B 0x22898C8
	0x0228981C B 0x22898C8
	0x02289820 B 0x22898C8
	0x02289824 B 0x22898C8
	0x02289828 B 0x22898C8
	0x0228982C B 0x22898C8
	0x02289830 B 0x22898C8
	0x02289834 B 0x22898C8
	0x02289838 B 0x22898C8
	0x0228983C B 0x22898C8
	0x02289840 B 0x22898C8
	0x02289844 B 0x22898C8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-24], X8
	017 Move X8, [X8+40]
	018 Move X28, X3
	019 Move X24, X3
	020 Move X19, X2
	021 Move [X29-8], X8
	022 Add X28, X28, 56
	023 Move X8, [X28]
	024 Move X22, X1
	025 Move X23, X0
	026 Compare X8, 0
	027 JumpIfNotEqual {112}
	028 Move X0, 0x1E95000
	029 Move X0, [X0+1680]
	030 Call 0x1C17CF4
	031 Move X0, 0x1E95000
	032 Move X0, [X0+1688]
	033 Call 0x1C17CF4
	034 Move X0, 0x1E95000
	035 Move X0, [X0+1696]
	036 Call 0x1C17CF4
	037 Move X0, 0x1E95000
	038 Move X0, [X0+584]
	039 Call 0x1C17CF4
	040 Move X0, 0x1E6C000
	041 Move X0, [X0+2904]
	042 Call 0x1C17CF4
	043 Move X0, 0x1E93000
	044 Move X0, [X0+3432]
	045 Call 0x1C17CF4
	046 Move X0, 0x1E6D000
	047 Move X0, [X0+2520]
	048 Call 0x1C17CF4
	049 Move X0, 0x1E93000
	050 Move X0, [X0+3440]
	051 Call 0x1C17CF4
	052 Move X0, 0x1E6E000
	053 Move X0, [X0+368]
	054 Call 0x1C17CF4
	055 Move X0, 0x1E6C000
	056 Move X0, [X0+2600]
	057 Call 0x1C17CF4
	058 Move X0, 0x1E94000
	059 Move X0, [X0+2680]
	060 Call 0x1C17CF4
	061 Move X0, 0x1E6F000
	062 Move X0, [X0+2424]
	063 Call 0x1C17CF4
	064 Move X0, 0x1E93000
	065 Move X0, [X0+3448]
	066 Call 0x1C17CF4
	067 Move X0, 0x1E70000
	068 Move X0, [X0+1576]
	069 Call 0x1C17CF4
	070 Move X0, 0x1E93000
	071 Move X0, [X0+3456]
	072 Call 0x1C17CF4
	073 Move X0, 0x1E6C000
	074 Move X0, [X0+1880]
	075 Call 0x1C17CF4
	076 Move X0, 0x1E93000
	077 Move X0, [X0+3464]
	078 Call 0x1C17CF4
	079 Move X0, 0x1E6E000
	080 Move X0, [X0+2656]
	081 Call 0x1C17CF4
	082 Move X0, 0x1E95000
	083 Move X0, [X0+1704]
	084 Call 0x1C17CF4
	085 Move X0, 0x1E93000
	086 Move X0, [X0+3472]
	087 Call 0x1C17CF4
	088 Move X0, 0x1E95000
	089 Move X0, [X0+1712]
	090 Call 0x1C17CF4
	091 Move X0, 0x1E94000
	092 Move X0, [X0+2688]
	093 Call 0x1C17CF4
	094 Move X0, 0x1E6C000
	095 Move X0, [X0+2704]
	096 Call 0x1C17CF4
	097 Move X0, 0x1E95000
	098 Move X0, [X0+1720]
	099 Call 0x1C17CF4
	100 Move X0, 0x1E94000
	101 Move X0, [X0+2912]
	102 Call 0x1C17CF4
	103 Move X0, 0x1E6C000
	104 Move X0, [X0+1728]
	105 Call 0x1C17CF4
	106 Move X0, 0x1E95000
	107 Move X0, [X0+1728]
	108 Call 0x1C17CF4
	109 Move X8, [X24+56]
	110 Compare X8, 0
	111 JumpIfEqual {138}
	112 Compare X19, 0
	113 JumpIfEqual {142}
	114 Move X21, [X19+24]
	115 Compare X21, 0
	116 JumpIfEqual {143}
	117 Move X8, X21
	118 ShiftRight X8, 32
	119 And X8, X8, 0x7FFFFFFF
	120 NotImplemented "Instruction SBFM not yet implemented."
	121 Compare X8, 0
	122 JumpIfEqual {128}
	123 Add X9, X2, 15
	124 Add X8, X31, 0
	125 And X9, X9, 0xFFFFFFFF
	126 Subtract X20, X8, X9
	127 Add X31, X20, 0
	128 Move X20, X31
	129 Move X0, X20
	130 Move W1, W31
	131 Call 0x3EB2B10
	132 Move TEMP, X21
	133 And TEMP, TEMP, -2147483648
	134 Compare TEMP, -2147483648
	135 JumpIfNotEqual {144}
	136 Move X0, X31
	137 Call ThrowHelper.ThrowArgumentOutOfRangeException
	138 Move X0, X24
	139 Call 0x1C5D6E0
	140 Compare X19, 0
	141 JumpIfNotEqual {114}
	142 Move X21, X31
	143 Move X20, X31
	144 And X21, X21, 0
	145 Move X0, X19
	146 Move X1, X20
	147 Move X2, X21
	148 Move X3, X31
	149 Call AndroidJNIHelper.CreateJNIArgArray, X0, X1
	150 Move X26, 0x1E6C000
	151 Move X26, [X26+1728]
	152 Move X8, [X28]
	153 Move X0, [X26]
	154 Move X25, [X8]
	155 Move W9, [X0+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, X25
	160 Move X1, X31
	161 Call Type.GetTypeFromHandle, X0
	162 Move X27, 0x1E95000
	163 Move X27, [X27+1696]
	164 Move X25, X0
	165 Move X0, [X27]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X25
	171 Move X1, X31
	172 Call AndroidReflection.IsPrimitive, X0
	173 Move W8, W0
	174 Move X9, [X28]
	175 Move X0, [X26]
	176 Move X25, [X9]
	177 Move W9, [X0+224]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {236}
	182 Compare W9, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X25
	186 Move X1, X31
	187 Call Type.GetTypeFromHandle, X0
	188 Move X8, 0x1E93000
	189 Move X8, [X8+3456]
	190 Move X24, X0
	191 Move X0, [X8]
	192 Move X1, X31
	193 Call Type.GetTypeFromHandle, X0
	194 Move X1, X0
	195 Move X0, X24
	196 Move X2, X31
	197 Call Type.op_Equality, X0, X1
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {283}
	202 Move X0, [X23+24]
	203 Move X1, X31
	204 Call GlobalJavaObjectRef.op_Implicit, X0
	205 Move X1, X22
	206 Move X2, X20
	207 Move X3, X21
	208 Move X4, X31
	209 Call AndroidJNISafe.CallStaticIntMethod, X0, X1, X2
	210 Move X8, 0x1E6C000
	211 Move X8, [X8+1880]
	212 Move [X29-16], W0
	213 Move X8, [X8]
	214 Subtract X1, X29, 16
	215 Move X0, X8
	216 Call 0x1C17E04
	217 Move X8, [X28]
	218 Move X22, X0
	219 Move X1, [X8+8]
	220 Move W8, [X1+309]
	221 Move TEMP, X8
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {228}
	225 Move X0, X1
	226 Call 0x1C5D684
	227 Move X1, X0
	228 Compare X22, 0
	229 JumpIfEqual {953}
	230 Move X8, [X22]
	231 Move X9, [X1+64]
	232 Move X8, [X8+64]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X0, X22
	235 Call 0x1C17E08
	236 Compare W9, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X25
	240 Move X1, X31
	241 Call Type.GetTypeFromHandle, X0
	242 Move X8, 0x1E94000
	243 Move X8, [X8+2912]
	244 Move X25, X0
	245 Move X0, [X8]
	246 Move X1, X31
	247 Call Type.GetTypeFromHandle, X0
	248 Move X1, X0
	249 Move X0, X25
	250 Move X2, X31
	251 Call Type.op_Equality, X0, X1
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {342}
	256 Move X0, [X23+24]
	257 Move X1, X31
	258 Call GlobalJavaObjectRef.op_Implicit, X0
	259 Move X1, X22
	260 Move X2, X20
	261 Move X3, X21
	262 Move X4, X31
	263 Call AndroidJNISafe.CallStaticStringMethod, X0, X1, X2
	264 Move X8, [X28]
	265 Move X22, X0
	266 Move X1, [X8+8]
	267 Move W8, [X1+309]
	268 Move TEMP, X8
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {275}
	272 Move X0, X1
	273 Call 0x1C5D684
	274 Move X1, X0
	275 Compare X22, 0
	276 JumpIfEqual {952}
	277 Move X8, [X22]
	278 Move X9, [X1+64]
	279 Move X8, [X8+64]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, X22
	282 Call 0x1C17E08
	283 Move X0, [X26]
	284 Move X8, [X28]
	285 Move W9, [X0+224]
	286 Move X24, [X8]
	287 Compare W9, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X0, X24
	291 Move X1, X31
	292 Call Type.GetTypeFromHandle, X0
	293 Move X8, 0x1E95000
	294 Move X8, [X8+584]
	295 Move X24, X0
	296 Move X0, [X8]
	297 Move X1, X31
	298 Call Type.GetTypeFromHandle, X0
	299 Move X1, X0
	300 Move X0, X24
	301 Move X2, X31
	302 Call Type.op_Equality, X0, X1
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {404}
	307 Move X0, [X23+24]
	308 Move X1, X31
	309 Call GlobalJavaObjectRef.op_Implicit, X0
	310 Move X1, X22
	311 Move X2, X20
	312 Move X3, X21
	313 Move X4, X31
	314 Call AndroidJNISafe.CallStaticBooleanMethod, X0, X1, X2
	315 Move X8, 0x1E6C000
	316 Move X8, [X8+2904]
	317 And W9, W0, 1
	318 NotImplemented "Instruction STURB not yet implemented."
	319 Move X8, [X8]
	320 Subtract X1, X29, 16
	321 Move X0, X8
	322 Call 0x1C17E04
	323 Move X8, [X28]
	324 Move X22, X0
	325 Move X1, [X8+8]
	326 Move W8, [X1+309]
	327 Move TEMP, X8
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfEqual {334}
	331 Move X0, X1
	332 Call 0x1C5D684
	333 Move X1, X0
	334 Compare X22, 0
	335 JumpIfEqual {958}
	336 Move X8, [X22]
	337 Move X9, [X1+64]
	338 Move X8, [X8+64]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X0, X22
	341 Call 0x1C17E08
	342 Move X0, [X26]
	343 Move X8, [X28]
	344 Move W9, [X0+224]
	345 Move X25, [X8]
	346 Compare W9, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, X25
	350 Move X1, X31
	351 Call Type.GetTypeFromHandle, X0
	352 Move X8, 0x1E95000
	353 Move X8, [X8+1680]
	354 Move X25, X0
	355 Move X0, [X8]
	356 Move X1, X31
	357 Call Type.GetTypeFromHandle, X0
	358 Move X1, X0
	359 Move X0, X25
	360 Move X2, X31
	361 Call Type.op_Equality, X0, X1
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {474}
	366 Move X0, [X23+24]
	367 Move X1, X31
	368 Call GlobalJavaObjectRef.op_Implicit, X0
	369 Move X1, X22
	370 Move X2, X20
	371 Move X3, X21
	372 Move X4, X31
	373 Call AndroidJNISafe.CallStaticObjectMethod, X0, X1, X2
	374 Move X22, X0
	375 Move X1, X31
	376 Move X2, X31
	377 Call IntPtr.op_Equality, X0, X1
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfEqual {514}
	382 Move X0, X22
	383 Move X1, X31
	384 Call AndroidJavaObject.AndroidJavaClassDeleteLocalRef, X0
	385 Move X8, [X28]
	386 Move X22, X0
	387 Move X1, [X8+8]
	388 Move W8, [X1+309]
	389 Move TEMP, X8
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfEqual {396}
	393 Move X0, X1
	394 Call 0x1C5D684
	395 Move X1, X0
	396 Compare X22, 0
	397 JumpIfEqual {961}
	398 Move X8, [X22]
	399 Move X9, [X1+64]
	400 Move X8, [X8+64]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move X0, X22
	403 Call 0x1C17E08
	404 Move X0, [X26]
	405 Move X8, [X28]
	406 Move W9, [X0+224]
	407 Move X24, [X8]
	408 Compare W9, 0
	409 JumpIfNotEqual {411}
	410 Call 0x1C17DFC
	411 Move X0, X24
	412 Move X1, X31
	413 Call Type.GetTypeFromHandle, X0
	414 Move X8, 0x1E93000
	415 Move X8, [X8+3432]
	416 Move X24, X0
	417 Move X0, [X8]
	418 Move X1, X31
	419 Call Type.GetTypeFromHandle, X0
	420 Move X1, X0
	421 Move X0, X24
	422 Move X2, X31
	423 Call Type.op_Equality, X0, X1
	424 Move TEMP, X0
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfNotEqual {515}
	428 Move X8, 0x1E6C000
	429 Move X8, [X8+2600]
	430 Move X0, [X8]
	431 Move W8, [X0+224]
	432 Compare W8, 0
	433 JumpIfNotEqual {435}
	434 Call 0x1C17DFC
	435 Move X8, 0x1E95000
	436 Move X8, [X8+1728]
	437 Move X0, [X8]
	438 Move X1, X31
	439 Call Debug.LogWarning, X0
	440 Move X0, [X23+24]
	441 Move X1, X31
	442 Call GlobalJavaObjectRef.op_Implicit, X0
	443 Move X1, X22
	444 Move X2, X20
	445 Move X3, X21
	446 Move X4, X31
	447 Call AndroidJNISafe.CallStaticSByteMethod, X0, X1, X2
	448 Move X8, 0x1E6D000
	449 Move X8, [X8+2520]
	450 NotImplemented "Instruction STURB not yet implemented."
	451 Move X8, [X8]
	452 Subtract X1, X29, 16
	453 Move X0, X8
	454 Call 0x1C17E04
	455 Move X8, [X28]
	456 Move X22, X0
	457 Move X1, [X8+8]
	458 Move W8, [X1+309]
	459 Move TEMP, X8
	460 And TEMP, TEMP, 1
	461 Compare TEMP, 1
	462 JumpIfEqual {466}
	463 Move X0, X1
	464 Call 0x1C5D684
	465 Move X1, X0
	466 Compare X22, 0
	467 JumpIfEqual {984}
	468 Move X8, [X22]
	469 Move X9, [X1+64]
	470 Move X8, [X8+64]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X0, X22
	473 Call 0x1C17E08
	474 Move X0, [X26]
	475 Move X8, [X28]
	476 Move W9, [X0+224]
	477 Move X25, [X8]
	478 Compare W9, 0
	479 JumpIfNotEqual {481}
	480 Call 0x1C17DFC
	481 Move X0, X25
	482 Move X1, X31
	483 Call Type.GetTypeFromHandle, X0
	484 Move X8, 0x1E95000
	485 Move X8, [X8+1688]
	486 Move X25, X0
	487 Move X0, [X8]
	488 Move X1, X31
	489 Call Type.GetTypeFromHandle, X0
	490 Move X1, X0
	491 Move X0, X25
	492 Move X2, X31
	493 Call Type.op_Equality, X0, X1
	494 Move TEMP, X0
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {573}
	498 Move X0, [X23+24]
	499 Move X1, X31
	500 Call GlobalJavaObjectRef.op_Implicit, X0
	501 Move X1, X22
	502 Move X2, X20
	503 Move X3, X21
	504 Move X4, X31
	505 Call AndroidJNISafe.CallStaticObjectMethod, X0, X1, X2
	506 Move X22, X0
	507 Move X1, X31
	508 Move X2, X31
	509 Call IntPtr.op_Equality, X0, X1
	510 Move TEMP, X0
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfNotEqual {615}
	514 Move W22, W31
	515 Move X0, [X26]
	516 Move X8, [X28]
	517 Move W9, [X0+224]
	518 Move X24, [X8]
	519 Compare W9, 0
	520 JumpIfNotEqual {522}
	521 Call 0x1C17DFC
	522 Move X0, X24
	523 Move X1, X31
	524 Call Type.GetTypeFromHandle, X0
	525 Move X8, 0x1E93000
	526 Move X8, [X8+3472]
	527 Move X24, X0
	528 Move X0, [X8]
	529 Move X1, X31
	530 Call Type.GetTypeFromHandle, X0
	531 Move X1, X0
	532 Move X0, X24
	533 Move X2, X31
	534 Call Type.op_Equality, X0, X1
	535 Move TEMP, X0
	536 And TEMP, TEMP, 1
	537 Compare TEMP, 1
	538 JumpIfNotEqual {637}
	539 Move X0, [X23+24]
	540 Move X1, X31
	541 Call GlobalJavaObjectRef.op_Implicit, X0
	542 Move X1, X22
	543 Move X2, X20
	544 Move X3, X21
	545 Move X4, X31
	546 Call AndroidJNISafe.CallStaticSByteMethod, X0, X1, X2
	547 Move X8, 0x1E95000
	548 Move X8, [X8+1712]
	549 NotImplemented "Instruction STURB not yet implemented."
	550 Move X8, [X8]
	551 Subtract X1, X29, 16
	552 Move X0, X8
	553 Call 0x1C17E04
	554 Move X8, [X28]
	555 Move X22, X0
	556 Move X1, [X8+8]
	557 Move W8, [X1+309]
	558 Move TEMP, X8
	559 And TEMP, TEMP, 1
	560 Compare TEMP, 1
	561 JumpIfEqual {565}
	562 Move X0, X1
	563 Call 0x1C5D684
	564 Move X1, X0
	565 Compare X22, 0
	566 JumpIfEqual {990}
	567 Move X8, [X22]
	568 Move X9, [X1+64]
	569 Move X8, [X8+64]
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Move X0, X22
	572 Call 0x1C17E08
	573 Move X8, 0x1E95000
	574 Move X0, [X26]
	575 Move X8, [X8+1704]
	576 Move W9, [X0+224]
	577 Move X25, [X8]
	578 Compare W9, 0
	579 JumpIfNotEqual {581}
	580 Call 0x1C17DFC
	581 Move X0, X25
	582 Move X1, X31
	583 Call Type.GetTypeFromHandle, X0
	584 Move X8, [X28]
	585 Move X25, X0
	586 Move X0, [X8]
	587 Move X1, X31
	588 Call Type.GetTypeFromHandle, X0
	589 Move X26, X0
	590 Move X0, [X27]
	591 Move W8, [X0+224]
	592 Compare W8, 0
	593 JumpIfNotEqual {595}
	594 Call 0x1C17DFC
	595 Move X0, X25
	596 Move X1, X26
	597 Move X2, X31
	598 Call AndroidReflection.IsAssignableFrom, X0, X1
	599 Move TEMP, X0
	600 And TEMP, TEMP, 1
	601 Compare TEMP, 1
	602 JumpIfNotEqual {964}
	603 Move X0, [X23+24]
	604 Move X1, X31
	605 Call GlobalJavaObjectRef.op_Implicit, X0
	606 Move X1, X22
	607 Move X2, X20
	608 Move X3, X21
	609 Move X4, X31
	610 Call AndroidJNISafe.CallStaticObjectMethod, X0, X1, X2
	611 Move X8, [X28]
	612 Move X1, [X8+16]
	613 Call 0x227C7E4, X0
	614 Move W22, W0
	615 Move X0, X22
	616 Move X1, X31
	617 Call AndroidJavaObject.AndroidJavaObjectDeleteLocalRef, X0
	618 Move X8, [X28]
	619 Move X22, X0
	620 Move X1, [X8+8]
	621 Move W8, [X1+309]
	622 Move TEMP, X8
	623 And TEMP, TEMP, 1
	624 Compare TEMP, 1
	625 JumpIfEqual {629}
	626 Move X0, X1
	627 Call 0x1C5D684
	628 Move X1, X0
	629 Compare X22, 0
	630 JumpIfEqual {987}
	631 Move X8, [X22]
	632 Move X9, [X1+64]
	633 Move X8, [X8+64]
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Move X0, X22
	636 Call 0x1C17E08
	637 Move X0, [X26]
	638 Move X8, [X28]
	639 Move W9, [X0+224]
	640 Move X24, [X8]
	641 Compare W9, 0
	642 JumpIfNotEqual {644}
	643 Call 0x1C17DFC
	644 Move X0, X24
	645 Move X1, X31
	646 Call Type.GetTypeFromHandle, X0
	647 Move X8, 0x1E92000
	648 Move X8, [X8+3448]
	649 Move X24, X0
	650 Move X0, [X8]
	651 Move X1, X31
	652 Call Type.GetTypeFromHandle, X0
	653 Move X1, X0
	654 Move X0, X24
	655 Move X2, X31
	656 Call Type.op_Equality, X0, X1
	657 Move TEMP, X0
	658 And TEMP, TEMP, 1
	659 Compare TEMP, 1
	660 JumpIfNotEqual {695}
	661 Move X0, [X23+24]
	662 Move X1, X31
	663 Call GlobalJavaObjectRef.op_Implicit, X0
	664 Move X1, X22
	665 Move X2, X20
	666 Move X3, X21
	667 Move X4, X31
	668 Call AndroidJNISafe.CallStaticShortMethod, X0, X1, X2
	669 Move X8, 0x1E6F000
	670 Move X8, [X8+1576]
	671 NotImplemented "Instruction STURH not yet implemented."
	672 Move X8, [X8]
	673 Subtract X1, X29, 16
	674 Move X0, X8
	675 Call 0x1C17E04
	676 Move X8, [X28]
	677 Move X22, X0
	678 Move X1, [X8+8]
	679 Move W8, [X1+309]
	680 Move TEMP, X8
	681 And TEMP, TEMP, 1
	682 Compare TEMP, 1
	683 JumpIfEqual {687}
	684 Move X0, X1
	685 Call 0x1C5D684
	686 Move X1, X0
	687 Compare X22, 0
	688 JumpIfEqual {993}
	689 Move X8, [X22]
	690 Move X9, [X1+64]
	691 Move X8, [X8+64]
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Move X0, X22
	694 Call 0x1C17E08
	695 Move X0, [X26]
	696 Move X8, [X28]
	697 Move W9, [X0+224]
	698 Move X24, [X8]
	699 Compare W9, 0
	700 JumpIfNotEqual {702}
	701 Call 0x1C17DFC
	702 Move X0, X24
	703 Move X1, X31
	704 Call Type.GetTypeFromHandle, X0
	705 Move X8, 0x1E92000
	706 Move X8, [X8+3464]
	707 Move X24, X0
	708 Move X0, [X8]
	709 Move X1, X31
	710 Call Type.GetTypeFromHandle, X0
	711 Move X1, X0
	712 Move X0, X24
	713 Move X2, X31
	714 Call Type.op_Equality, X0, X1
	715 Move TEMP, X0
	716 And TEMP, TEMP, 1
	717 Compare TEMP, 1
	718 JumpIfNotEqual {753}
	719 Move X0, [X23+24]
	720 Move X1, X31
	721 Call GlobalJavaObjectRef.op_Implicit, X0
	722 Move X1, X22
	723 Move X2, X20
	724 Move X3, X21
	725 Move X4, X31
	726 Call AndroidJNISafe.CallStaticLongMethod, X0, X1, X2
	727 Move X8, 0x1E6D000
	728 Move X8, [X8+2656]
	729 Move [X29-16], X0
	730 Move X8, [X8]
	731 Subtract X1, X29, 16
	732 Move X0, X8
	733 Call 0x1C17E04
	734 Move X8, [X28]
	735 Move X22, X0
	736 Move X1, [X8+8]
	737 Move W8, [X1+309]
	738 Move TEMP, X8
	739 And TEMP, TEMP, 1
	740 Compare TEMP, 1
	741 JumpIfEqual {745}
	742 Move X0, X1
	743 Call 0x1C5D684
	744 Move X1, X0
	745 Compare X22, 0
	746 JumpIfEqual {996}
	747 Move X8, [X22]
	748 Move X9, [X1+64]
	749 Move X8, [X8+64]
	750 NotImplemented "Instruction CMP not yet implemented."
	751 Move X0, X22
	752 Call 0x1C17E08
	753 Move X0, [X26]
	754 Move X8, [X28]
	755 Move W9, [X0+224]
	756 Move X24, [X8]
	757 Compare W9, 0
	758 JumpIfNotEqual {760}
	759 Call 0x1C17DFC
	760 Move X0, X24
	761 Move X1, X31
	762 Call Type.GetTypeFromHandle, X0
	763 Move X8, 0x1E93000
	764 Move X8, [X8+2688]
	765 Move X24, X0
	766 Move X0, [X8]
	767 Move X1, X31
	768 Call Type.GetTypeFromHandle, X0
	769 Move X1, X0
	770 Move X0, X24
	771 Move X2, X31
	772 Call Type.op_Equality, X0, X1
	773 Move TEMP, X0
	774 And TEMP, TEMP, 1
	775 Compare TEMP, 1
	776 JumpIfNotEqual {810}
	777 Move X0, [X23+24]
	778 Move X1, X31
	779 Call GlobalJavaObjectRef.op_Implicit, X0
	780 Move X1, X22
	781 Move X2, X20
	782 Move X3, X21
	783 Move X4, X31
	784 Call AndroidJNISafe.CallStaticFloatMethod, X0, X1, X2
	785 Move X8, 0x1E6B000
	786 Move X8, [X8+2704]
	787 Move [X29-16], S0
	788 Move X0, [X8]
	789 Subtract X1, X29, 16
	790 Call 0x1C17E04
	791 Move X8, [X28]
	792 Move X22, X0
	793 Move X1, [X8+8]
	794 Move W8, [X1+309]
	795 Move TEMP, X8
	796 And TEMP, TEMP, 1
	797 Compare TEMP, 1
	798 JumpIfEqual {802}
	799 Move X0, X1
	800 Call 0x1C5D684
	801 Move X1, X0
	802 Compare X22, 0
	803 JumpIfEqual {1029}
	804 Move X8, [X22]
	805 Move X9, [X1+64]
	806 Move X8, [X8+64]
	807 NotImplemented "Instruction CMP not yet implemented."
	808 Move X0, X22
	809 Call 0x1C17E08
	810 Move X0, [X26]
	811 Move X8, [X28]
	812 Move W9, [X0+224]
	813 Move X24, [X8]
	814 Compare W9, 0
	815 JumpIfNotEqual {817}
	816 Call 0x1C17DFC
	817 Move X0, X24
	818 Move X1, X31
	819 Call Type.GetTypeFromHandle, X0
	820 Move X8, 0x1E93000
	821 Move X8, [X8+2680]
	822 Move X24, X0
	823 Move X0, [X8]
	824 Move X1, X31
	825 Call Type.GetTypeFromHandle, X0
	826 Move X1, X0
	827 Move X0, X24
	828 Move X2, X31
	829 Call Type.op_Equality, X0, X1
	830 Move TEMP, X0
	831 And TEMP, TEMP, 1
	832 Compare TEMP, 1
	833 JumpIfNotEqual {867}
	834 Move X0, [X23+24]
	835 Move X1, X31
	836 Call GlobalJavaObjectRef.op_Implicit, X0
	837 Move X1, X22
	838 Move X2, X20
	839 Move X3, X21
	840 Move X4, X31
	841 Call AndroidJNISafe.CallStaticDoubleMethod, X0, X1, X2
	842 Move X8, 0x1E6E000
	843 Move X8, [X8+2424]
	844 Move [X29-16], D0
	845 Move X0, [X8]
	846 Subtract X1, X29, 16
	847 Call 0x1C17E04
	848 Move X8, [X28]
	849 Move X22, X0
	850 Move X1, [X8+8]
	851 Move W8, [X1+309]
	852 Move TEMP, X8
	853 And TEMP, TEMP, 1
	854 Compare TEMP, 1
	855 JumpIfEqual {859}
	856 Move X0, X1
	857 Call 0x1C5D684
	858 Move X1, X0
	859 Compare X22, 0
	860 JumpIfEqual {1032}
	861 Move X8, [X22]
	862 Move X9, [X1+64]
	863 Move X8, [X8+64]
	864 NotImplemented "Instruction CMP not yet implemented."
	865 Move X0, X22
	866 Call 0x1C17E08
	867 Move X0, [X26]
	868 Move X8, [X28]
	869 Move W9, [X0+224]
	870 Move X24, [X8]
	871 Compare W9, 0
	872 JumpIfNotEqual {874}
	873 Call 0x1C17DFC
	874 Move X0, X24
	875 Move X1, X31
	876 Call Type.GetTypeFromHandle, X0
	877 Move X8, 0x1E92000
	878 Move X8, [X8+3440]
	879 Move X24, X0
	880 Move X0, [X8]
	881 Move X1, X31
	882 Call Type.GetTypeFromHandle, X0
	883 Move X1, X0
	884 Move X0, X24
	885 Move X2, X31
	886 Call Type.op_Equality, X0, X1
	887 Move TEMP, X0
	888 And TEMP, TEMP, 1
	889 Compare TEMP, 1
	890 JumpIfNotEqual {514}
	891 Move X0, [X23+24]
	892 Move X1, X31
	893 Call GlobalJavaObjectRef.op_Implicit, X0
	894 Move X1, X22
	895 Move X2, X20
	896 Move X3, X21
	897 Move X4, X31
	898 Call AndroidJNISafe.CallStaticCharMethod, X0, X1, X2
	899 Move X8, 0x1E6D000
	900 Move X8, [X8+368]
	901 NotImplemented "Instruction STURH not yet implemented."
	902 Move X8, [X8]
	903 Subtract X1, X29, 16
	904 Move X0, X8
	905 Call 0x1C17E04
	906 Move X8, [X28]
	907 Move X22, X0
	908 Move X1, [X8+8]
	909 Move W8, [X1+309]
	910 Move TEMP, X8
	911 And TEMP, TEMP, 1
	912 Compare TEMP, 1
	913 JumpIfEqual {917}
	914 Move X0, X1
	915 Call 0x1C5D684
	916 Move X1, X0
	917 Compare X22, 0
	918 JumpIfEqual {1035}
	919 Move X8, [X22]
	920 Move X9, [X1+64]
	921 Move X8, [X8+64]
	922 NotImplemented "Instruction CMP not yet implemented."
	923 Move X0, X22
	924 Call 0x1C17E08
	925 Move W8, [X0]
	926 NotImplemented "Instruction CMP not yet implemented."
	927 NotImplemented "Instruction CSET not yet implemented."
	928 Move X0, X19
	929 Move X1, X20
	930 Move X2, X21
	931 Move X3, X31
	932 Call AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	933 NotImplemented "Instruction LDUR not yet implemented."
	934 Move X8, [X8+40]
	935 NotImplemented "Instruction LDUR not yet implemented."
	936 NotImplemented "Instruction CMP not yet implemented."
	937 And W0, W22, 1
	938 Add X31, X29, 0
	939 Move X20, [X31+80]
	940 Move X19, [X31+88]
	941 Move X22, [X31+64]
	942 Move X21, [X31+72]
	943 Move X24, [X31+48]
	944 Move X23, [X31+56]
	945 Move X26, [X31+32]
	946 Move X25, [X31+40]
	947 Move X28, [X31+16]
	948 Move X27, [X31+24]
	949 Move X29, [X31+96]
	950 Move X30, [X31+104]
	951 Return X0
	952 Call 0x1C17F20
	953 Call 0x1C17F20
	954 Move X0, X22
	955 Call 0x1C181E0
	956 Move X0, X22
	957 Call 0x1C181E0
	958 Call 0x1C17F20
	959 Move X0, X22
	960 Call 0x1C181E0
	961 Call 0x1C17F20
	962 Move X0, X22
	963 Call 0x1C181E0
	964 Move X8, [X28]
	965 Move X22, [X8]
	966 Move X0, 0x1E6B000
	967 Move X0, [X0+1728]
	968 Call 0x1C17D08
	969 Move W8, [X0+224]
	970 Compare W8, 0
	971 JumpIfNotEqual {973}
	972 Call 0x1C17DFC
	973 Move X0, X22
	974 Move X1, X31
	975 Call Type.GetTypeFromHandle, X0
	976 Move X23, X0
	977 Compare X0, 0
	978 JumpIfNotEqual {999}
	979 Move X0, 0x1E94000
	980 Move X0, [X0+1736]
	981 Call 0x1C17D08
	982 Move X22, X0
	983 Move X23, X31
	984 Call 0x1C17F20
	985 Move X0, X22
	986 Call 0x1C181E0
	987 Call 0x1C17F20
	988 Move X0, X22
	989 Call 0x1C181E0
	990 Call 0x1C17F20
	991 Move X0, X22
	992 Call 0x1C181E0
	993 Call 0x1C17F20
	994 Move X0, X22
	995 Call 0x1C181E0
	996 Call 0x1C17F20
	997 Move X0, X22
	998 Call 0x1C181E0
	999 Move X0, 0x1E94000
	1000 Move X0, [X0+1736]
	1001 Call 0x1C17D08
	1002 Move X8, [X23]
	1003 Move X22, X0
	1004 Move X9, [X8+360]
	1005 Move X1, [X8+368]
	1006 Move X0, X23
	1007 NotImplemented "Instruction BLR not yet implemented."
	1008 Move X23, X0
	1009 Move X0, 0x1E73000
	1010 Move X0, [X0+2480]
	1011 Call 0x1C17D08
	1012 Move X2, X0
	1013 Move X0, X22
	1014 Move X1, X23
	1015 Move X3, X31
	1016 Call String.Concat, X0, X1, X2
	1017 Move X22, X0
	1018 Move X0, 0x1E6B000
	1019 Move X0, [X0+2000]
	1020 Call 0x1C17D08
	1021 Call 0x1C17F10
	1022 Move X23, X0
	1023 Move X1, X22
	1024 Move X2, X31
	1025 Call Exception..ctor, X0, X1
	1026 Move X0, X23
	1027 Move X1, X24
	1028 Call 0x1C17DEC
	1029 Call 0x1C17F20
	1030 Move X0, X22
	1031 Call 0x1C181E0
	1032 Call 0x1C17F20
	1033 Move X0, X22
	1034 Call 0x1C181E0
	1035 Call 0x1C17F20
	1036 Move X0, X22
	1037 Call 0x1C181E0
	1038 Call 0x3EB2B20
	1039 Move X22, X0
	1040 Move X22, X0
	1041 NotImplemented "Instruction CMP not yet implemented."
	1042 Move X0, X22
	1043 Call 0x3EB2AD0
	1044 Move X23, [X0]
	1045 Call 0x3EB2AE0
	1046 Move X0, X19
	1047 Move X1, X20
	1048 Move X2, X21
	1049 Move X3, X31
	1050 Call AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	1051 Compare X23, 0
	1052 JumpIfNotEqual {1055}
	1053 Move W22, W31
	1054 Move X23, X31
	1055 Move X0, X23
	1056 Call 0x1C17F18
	1057 Move X22, X0
	1058 Move X0, X19
	1059 Move X1, X20
	1060 Move X2, X21
	1061 Move X3, X31
	1062 Call AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	1063 Compare X23, 0
	1064 JumpIfNotEqual {1067}
	1065 Move X0, X22
	1066 Call 0x1D2D690
	1067 Move X0, X23
	1068 Call 0x1C17F18
	1069 Call 0x1991590

Method: FieldType _GetStatic(System.String fieldName)

Disassembly:
	0x022C2528 MOV X1, X31
	0x022C252C LDR X0, [X8]
	0x022C2530 BL 0x3C06A04
	0x022C2534 LDUR X8, [X29 - 0x50]
	0x022C2538 MOV X1, X31
	0x022C253C LDR X0, [X8 + 0x18]
	0x022C2540 BL 0x3BEF01C
	0x022C2544 LDUR X1, [X29 - 0x48]
	0x022C2548 MOV X2, X31
	0x022C254C BL 0x3BECA68
	0x022C2550 ADRP X8, 0x1E32000
	0x022C2554 LDR X8, [X8 + 0x9D8]
	0x022C2558 B 0x22C26F4
	0x022C255C LDR X0, [X22]
	0x022C2560 LDR X8, [X26]
	0x022C2564 LDR W9, [X0 + 0xE0]
	0x022C2568 LDR X19, [X8]
	0x022C256C CBNZ W9, 0x22C2574
	0x022C2570 BL 0x1C16DFC
	0x022C2574 MOV X0, X19
	0x022C2578 MOV X1, X31
	0x022C257C BL 0x338C698
	0x022C2580 ADRP X8, 0x1E5A000
	0x022C2584 LDR X8, [X8 + 0x698]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X21, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move X0, [X20+24]
	014 Move X1, X31
	015 Call GlobalJavaObjectRef.op_Implicit, X0
	016 Move X8, [X19+56]
	017 Move W2, 1
	018 Move X1, X21
	019 Move X3, [X8]
	020 Call 0x227B270, X0, X1, X2
	021 Move X8, [X19+56]
	022 Move X1, X0
	023 Move X0, X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8+8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x22C1B64, X0, X1
	030 Return X0

Method: FieldType _GetStatic(System.IntPtr fieldID)

Disassembly:
	0x022C1B64 LDR W9, [X0 + 0xE0]
	0x022C1B68 LDR X22, [X8]
	0x022C1B6C CBNZ W9, 0x22C1B74
	0x022C1B70 BL 0x1C16DFC
	0x022C1B74 MOV X0, X22
	0x022C1B78 MOV X1, X31
	0x022C1B7C BL 0x338C698
	0x022C1B80 LDR X8, [X24]
	0x022C1B84 MOV X22, X0
	0x022C1B88 MOV X1, X31
	0x022C1B8C LDR X8, [X8]
	0x022C1B90 MOV X0, X8
	0x022C1B94 BL 0x338C698
	0x022C1B98 LDR X8, [X26]
	0x022C1B9C MOV X23, X0
	0x022C1BA0 LDR W9, [X8 + 0xE0]
	0x022C1BA4 CBNZ W9, 0x22C1BB0
	0x022C1BA8 MOV X0, X8
	0x022C1BAC BL 0x1C16DFC
	0x022C1BB0 MOV X0, X22
	0x022C1BB4 MOV X1, X23
	0x022C1BB8 MOV X2, X31
	0x022C1BBC BL 0x3BF3068
	0x022C1BC0 TBZ X0, 0x0, 0x22C1E78
	0x022C1BC4 LDR X0, [X20 + 0x18]
	0x022C1BC8 MOV X1, X31
	0x022C1BCC BL 0x3BEF01C
	0x022C1BD0 MOV X1, X19
	0x022C1BD4 MOV X2, X31
	0x022C1BD8 BL 0x3BEC5B8
	0x022C1BDC LDR X8, [X24]
	0x022C1BE0 LDP X20, X19, [X31 + 0x40]
	0x022C1BE4 LDP X22, X21, [X31 + 0x30]
	0x022C1BE8 LDP X24, X23, [X31 + 0x20]
	0x022C1BEC LDR X1, [X8 + 0x10]
	0x022C1BF0 LDP X26, X25, [X31 + 0x10]
	0x022C1BF4 LDR X30, [X31], #0x50
	0x022C1BF8 B 0x227BF54
	0x022C1BFC LDR X0, [X25]
	0x022C1C00 LDR X8, [X24]
	0x022C1C04 LDR W9, [X0 + 0xE0]
	0x022C1C08 LDR X21, [X8]
	0x022C1C0C CBNZ W9, 0x22C1C14
	0x022C1C10 BL 0x1C16DFC
	0x022C1C14 MOV X0, X21
	0x022C1C18 MOV X1, X31
	0x022C1C1C BL 0x338C698
	0x022C1C20 ADRP X8, 0x1E59000
	0x022C1C24 LDR X8, [X8 + 0xD78]
	0x022C1C28 MOV X21, X0
	0x022C1C2C MOV X1, X31
	0x022C1C30 LDR X8, [X8]
	0x022C1C34 MOV X0, X8
	0x022C1C38 BL 0x338C698
	0x022C1C3C MOV X1, X0
	0x022C1C40 MOV X0, X21
	0x022C1C44 MOV X2, X31
	0x022C1C48 BL 0x3395194
	0x022C1C4C TBZ X0, 0x0, 0x22C1C7C
	0x022C1C50 LDR X0, [X20 + 0x18]
	0x022C1C54 MOV X1, X31
	0x022C1C58 BL 0x3BEF01C
	0x022C1C5C MOV X1, X19
	0x022C1C60 MOV X2, X31
	0x022C1C64 BL 0x3BEC9C0
	0x022C1C68 ADRP X8, 0x1E36000
	0x022C1C6C LDR X8, [X8 + 0x628]
	0x022C1C70 LDR X8, [X8]
	0x022C1C74 STRH W0, [X31 + 0x8]
	0x022C1C78 B 0x22C189C
	0x022C1C7C LDR X0, [X25]
	0x022C1C80 LDR X8, [X24]
	0x022C1C84 LDR W9, [X0 + 0xE0]
	0x022C1C88 LDR X21, [X8]
	0x022C1C8C CBNZ W9, 0x22C1C94
	0x022C1C90 BL 0x1C16DFC
	0x022C1C94 MOV X0, X21
	0x022C1C98 MOV X1, X31
	0x022C1C9C BL 0x338C698
	0x022C1CA0 ADRP X8, 0x1E59000
	0x022C1CA4 LDR X8, [X8 + 0xD88]
	0x022C1CA8 MOV X21, X0
	0x022C1CAC MOV X1, X31
	0x022C1CB0 LDR X8, [X8]
	0x022C1CB4 MOV X0, X8
	0x022C1CB8 BL 0x338C698
	0x022C1CBC MOV X1, X0
	0x022C1CC0 MOV X0, X21
	0x022C1CC4 MOV X2, X31
	0x022C1CC8 BL 0x3395194
	0x022C1CCC TBZ X0, 0x0, 0x22C1CF8
	0x022C1CD0 LDR X0, [X20 + 0x18]
	0x022C1CD4 MOV X1, X31
	0x022C1CD8 BL 0x3BEF01C
	0x022C1CDC MOV X1, X19
	0x022C1CE0 MOV X2, X31
	0x022C1CE4 BL 0x3BEC918
	0x022C1CE8 ADRP X8, 0x1E34000
	0x022C1CEC LDR X8, [X8 + 0xA60]
	0x022C1CF0 STR X0, [X31 + 0x8]
	0x022C1CF4 B 0x22C1898
	0x022C1CF8 LDR X0, [X25]
	0x022C1CFC LDR X8, [X24]
	0x022C1D00 LDR W9, [X0 + 0xE0]
	0x022C1D04 LDR X21, [X8]
	0x022C1D08 CBNZ W9, 0x22C1D10
	0x022C1D0C BL 0x1C16DFC
	0x022C1D10 MOV X0, X21
	0x022C1D14 MOV X1, X31
	0x022C1D18 BL 0x338C698
	0x022C1D1C ADRP X8, 0x1E5A000
	0x022C1D20 LDR X8, [X8 + 0xA80]
	0x022C1D24 MOV X21, X0
	0x022C1D28 MOV X1, X31
	0x022C1D2C LDR X8, [X8]
	0x022C1D30 MOV X0, X8
	0x022C1D34 BL 0x338C698
	0x022C1D38 MOV X1, X0
	0x022C1D3C MOV X0, X21
	0x022C1D40 MOV X2, X31
	0x022C1D44 BL 0x3395194
	0x022C1D48 TBZ X0, 0x0, 0x22C1D74
	0x022C1D4C LDR X0, [X20 + 0x18]
	0x022C1D50 MOV X1, X31
	0x022C1D54 BL 0x3BEF01C
	0x022C1D58 MOV X1, X19
	0x022C1D5C MOV X2, X31
	0x022C1D60 BL 0x3BEC864
	0x022C1D64 ADRP X8, 0x1E32000
	0x022C1D68 LDR X8, [X8 + 0xA90]
	0x022C1D6C STR S0, [X31 + 0x8]
	0x022C1D70 B 0x22C1DEC
	0x022C1D74 LDR X0, [X25]
	0x022C1D78 LDR X8, [X24]
	0x022C1D7C LDR W9, [X0 + 0xE0]
	0x022C1D80 LDR X21, [X8]
	0x022C1D84 CBNZ W9, 0x22C1D8C
	0x022C1D88 BL 0x1C16DFC
	0x022C1D8C MOV X0, X21
	0x022C1D90 MOV X1, X31
	0x022C1D94 BL 0x338C698
	0x022C1D98 ADRP X8, 0x1E5A000
	0x022C1D9C LDR X8, [X8 + 0xA78]
	0x022C1DA0 MOV X21, X0
	0x022C1DA4 MOV X1, X31
	0x022C1DA8 LDR X8, [X8]
	0x022C1DAC MOV X0, X8
	0x022C1DB0 BL 0x338C698
	0x022C1DB4 MOV X1, X0
	0x022C1DB8 MOV X0, X21
	0x022C1DBC MOV X2, X31
	0x022C1DC0 BL 0x3395194
	0x022C1DC4 TBZ X0, 0x0, 0x22C1DF8
	0x022C1DC8 LDR X0, [X20 + 0x18]
	0x022C1DCC MOV X1, X31
	0x022C1DD0 BL 0x3BEF01C
	0x022C1DD4 MOV X1, X19
	0x022C1DD8 MOV X2, X31
	0x022C1DDC BL 0x3BEC7B0
	0x022C1DE0 ADRP X8, 0x1E35000
	0x022C1DE4 LDR X8, [X8 + 0x978]
	0x022C1DE8 STR D0, [X31 + 0x8]
	0x022C1DEC LDR X0, [X8]
	0x022C1DF0 ADD X1, X31, 0x8
	0x022C1DF4 B 0x22C18A4
	0x022C1DF8 LDR X0, [X25]
	0x022C1DFC LDR X8, [X24]
	0x022C1E00 LDR W9, [X0 + 0xE0]
	0x022C1E04 LDR X21, [X8]
	0x022C1E08 CBNZ W9, 0x22C1E10
	0x022C1E0C BL 0x1C16DFC
	0x022C1E10 MOV X0, X21
	0x022C1E14 MOV X1, X31
	0x022C1E18 BL 0x338C698
	0x022C1E1C ADRP X8, 0x1E59000
	0x022C1E20 LDR X8, [X8 + 0xD70]
	0x022C1E24 MOV X21, X0
	0x022C1E28 MOV X1, X31
	0x022C1E2C LDR X8, [X8]
	0x022C1E30 MOV X0, X8
	0x022C1E34 BL 0x338C698
	0x022C1E38 MOV X1, X0
	0x022C1E3C MOV X0, X21
	0x022C1E40 MOV X2, X31
	0x022C1E44 BL 0x3395194
	0x022C1E48 MOV W8, W0
	0x022C1E4C MOV X0, X31
	0x022C1E50 TBZ X8, 0x0, 0x22C18EC
	0x022C1E54 LDR X0, [X20 + 0x18]
	0x022C1E58 MOV X1, X31
	0x022C1E5C BL 0x3BEF01C
	0x022C1E60 MOV X1, X19
	0x022C1E64 MOV X2, X31
	0x022C1E68 BL 0x3BEC708
	0x022C1E6C ADRP X8, 0x1E34000
	0x022C1E70 LDR X8, [X8 + 0x170]
	0x022C1E74 B 0x22C1C70
	0x022C1E78 LDR X8, [X24]
	0x022C1E7C ADRP X0, 0x1E32000
	0x022C1E80 LDR X19, [X8]
	0x022C1E84 LDR X0, [X0 + 0x6C0]
	0x022C1E88 BL 0x1C16D08
	0x022C1E8C LDR W8, [X0 + 0xE0]
	0x022C1E90 CBNZ W8, 0x22C1E98
	0x022C1E94 BL 0x1C16DFC
	0x022C1E98 MOV X0, X19
	0x022C1E9C MOV X1, X31
	0x022C1EA0 BL 0x338C698
	0x022C1EA4 MOV X20, X0
	0x022C1EA8 ADRP X0, 0x1E5B000
	0x022C1EAC LDR X0, [X0 + 0xAA8]
	0x022C1EB0 BL 0x1C16D08
	0x022C1EB4 MOV X19, X0
	0x022C1EB8 MOV X22, X31
	0x022C1EBC CBZ X20, 0x22C1ED4
	0x022C1EC0 LDR X8, [X20]
	0x022C1EC4 MOV X0, X20
	0x022C1EC8 LDP X9, X1, [X8 + 0x168]
	0x022C1ECC BLR X9
	0x022C1ED0 MOV X22, X0
	0x022C1ED4 ADRP X0, 0x1E3A000
	0x022C1ED8 LDR X0, [X0 + 0x9B0]
	0x022C1EDC BL 0x1C16D08
	0x022C1EE0 MOV X2, X0
	0x022C1EE4 MOV X0, X19
	0x022C1EE8 MOV X1, X22
	0x022C1EEC MOV X3, X31
	0x022C1EF0 BL 0x32274B8
	0x022C1EF4 MOV X19, X0
	0x022C1EF8 ADRP X0, 0x1E32000
	0x022C1EFC LDR X0, [X0 + 0x7D0]
	0x022C1F00 BL 0x1C16D08
	0x022C1F04 BL 0x1C16F10
	0x022C1F08 MOV X1, X19
	0x022C1F0C MOV X2, X31
	0x022C1F10 MOV X20, X0
	0x022C1F14 BL 0x33B2C70
	0x022C1F18 MOV X0, X20
	0x022C1F1C MOV X1, X21
	0x022C1F20 BL 0x1C16DEC
	0x022C1F24 STP X30, X21, [X31 - 0x20]!
	0x022C1F28 STP X20, X19, [X31 + 0x10]
	0x022C1F2C LDR X8, [X2 + 0x38]
	0x022C1F30 MOV X19, X2
	0x022C1F34 MOV X21, X1
	0x022C1F38 MOV X20, X0
	0x022C1F3C CBNZ X8, 0x22C1F48
	0x022C1F40 MOV X0, X19
	0x022C1F44 BL 0x1C5C6E0
	0x022C1F48 LDR X0, [X20 + 0x18]
	0x022C1F4C MOV X1, X31
	0x022C1F50 BL 0x3BEF01C
	0x022C1F54 LDR X8, [X19 + 0x38]
	0x022C1F58 MOVZ W2, 0x1
	0x022C1F5C MOV X1, X21
	0x022C1F60 LDR X3, [X8]
	0x022C1F64 BL 0x227A2C0
	0x022C1F68 LDR X8, [X19 + 0x38]
	0x022C1F6C MOV X1, X0
	0x022C1F70 MOV X0, X20
	0x022C1F74 LDP X20, X19, [X31 + 0x10]
	0x022C1F78 LDR X2, [X8 + 0x8]
	0x022C1F7C LDP X30, X21, [X31], #0x20
	0x022C1F80 B 0x22C1588
	0x022C1F84 STP X29, X30, [X31 - 0x60]!
	0x022C1F88 STP X28, X27, [X31 + 0x10]
	0x022C1F8C STP X26, X25, [X31 + 0x20]
	0x022C1F90 STP X24, X23, [X31 + 0x30]
	0x022C1F94 STP X22, X21, [X31 + 0x40]
	0x022C1F98 STP X20, X19, [X31 + 0x50]
	0x022C1F9C ADD X29, X31, 0x0
	0x022C1FA0 SUB X31, X31, 0x50
	0x022C1FA4 STUR X1, [X29 - 0x48]
	0x022C1FA8 MRS X8, 0xC000
	0x022C1FAC STP X2, X8, [X29 - 0x30]
	0x022C1FB0 LDR X8, [X8 + 0x28]
	0x022C1FB4 MOV X26, X3
	0x022C1FB8 MOV X24, X3
	0x022C1FBC STUR X8, [X29 - 0x8]
	0x022C1FC0 LDR X19, [X26 + 0x38]!
	0x022C1FC4 STUR X0, [X29 - 0x50]
	0x022C1FC8 CBNZ X19, 0x22C2118
	0x022C1FCC ADRP X0, 0x1E5B000
	0x022C1FD0 LDR X0, [X0 + 0x690]
	0x022C1FD4 BL 0x1C16CF4
	0x022C1FD8 ADRP X0, 0x1E5B000
	0x022C1FDC LDR X0, [X0 + 0x698]
	0x022C1FE0 BL 0x1C16CF4
	0x022C1FE4 ADRP X0, 0x1E5B000
	0x022C1FE8 LDR X0, [X0 + 0x6A0]
	0x022C1FEC BL 0x1C16CF4
	0x022C1FF0 ADRP X0, 0x1E5B000
	0x022C1FF4 LDR X0, [X0 + 0x248]
	0x022C1FF8 BL 0x1C16CF4
	0x022C1FFC ADRP X0, 0x1E32000
	0x022C2000 LDR X0, [X0 + 0xB58]
	0x022C2004 BL 0x1C16CF4
	0x022C2008 ADRP X0, 0x1E58000
	0x022C200C LDR X0, [X0 + 0xD68]
	0x022C2010 BL 0x1C16CF4
	0x022C2014 ADRP X0, 0x1E32000
	0x022C2018 LDR X0, [X0 + 0x9D8]
	0x022C201C BL 0x1C16CF4
	0x022C2020 ADRP X0, 0x1E58000
	0x022C2024 LDR X0, [X0 + 0xD70]
	0x022C2028 BL 0x1C16CF4
	0x022C202C ADRP X0, 0x1E33000
	0x022C2030 LDR X0, [X0 + 0x170]
	0x022C2034 BL 0x1C16CF4
	0x022C2038 ADRP X0, 0x1E31000
	0x022C203C LDR X0, [X0 + 0xA28]
	0x022C2040 BL 0x1C16CF4
	0x022C2044 ADRP X0, 0x1E59000
	0x022C2048 LDR X0, [X0 + 0xA78]
	0x022C204C BL 0x1C16CF4
	0x022C2050 ADRP X0, 0x1E34000
	0x022C2054 LDR X0, [X0 + 0x978]
	0x022C2058 BL 0x1C16CF4
	0x022C205C ADRP X0, 0x1E58000
	0x022C2060 LDR X0, [X0 + 0xD78]
	0x022C2064 BL 0x1C16CF4
	0x022C2068 ADRP X0, 0x1E35000
	0x022C206C LDR X0, [X0 + 0x628]
	0x022C2070 BL 0x1C16CF4
	0x022C2074 ADRP X0, 0x1E58000
	0x022C2078 LDR X0, [X0 + 0xD80]
	0x022C207C BL 0x1C16CF4
	0x022C2080 ADRP X0, 0x1E31000
	0x022C2084 LDR X0, [X0 + 0x758]
	0x022C2088 BL 0x1C16CF4
	0x022C208C ADRP X0, 0x1E58000
	0x022C2090 LDR X0, [X0 + 0xD88]
	0x022C2094 BL 0x1C16CF4
	0x022C2098 ADRP X0, 0x1E33000
	0x022C209C LDR X0, [X0 + 0xA60]
	0x022C20A0 BL 0x1C16CF4
	0x022C20A4 ADRP X0, 0x1E5A000
	0x022C20A8 LDR X0, [X0 + 0x6A8]
	0x022C20AC BL 0x1C16CF4
	0x022C20B0 ADRP X0, 0x1E58000
	0x022C20B4 LDR X0, [X0 + 0xD90]
	0x022C20B8 BL 0x1C16CF4
	0x022C20BC ADRP X0, 0x1E5A000
	0x022C20C0 LDR X0, [X0 + 0x6B0]
	0x022C20C4 BL 0x1C16CF4
	0x022C20C8 ADRP X0, 0x1E59000
	0x022C20CC LDR X0, [X0 + 0xA80]
	0x022C20D0 BL 0x1C16CF4
	0x022C20D4 ADRP X0, 0x1E31000
	0x022C20D8 LDR X0, [X0 + 0xA90]
	0x022C20DC BL 0x1C16CF4
	0x022C20E0 ADRP X0, 0x1E59000
	0x022C20E4 LDR X0, [X0 + 0xB60]
	0x022C20E8 BL 0x1C16CF4
	0x022C20EC ADRP X0, 0x1E31000
	0x022C20F0 LDR X0, [X0 + 0x6C0]
	0x022C20F4 BL 0x1C16CF4
	0x022C20F8 ADRP X0, 0x1E5A000
	0x022C20FC LDR X0, [X0 + 0xAA0]
	0x022C2100 BL 0x1C16CF4
	0x022C2104 LDR X19, [X24 + 0x38]
	0x022C2108 CBNZ X19, 0x22C2118
	0x022C210C MOV X0, X24
	0x022C2110 BL 0x1C5C6E0
	0x022C2114 LDR X19, [X24 + 0x38]
	0x022C2118 LDR X8, [X19 + 0x8]
	0x022C211C LDR W20, [X8 + 0xFC]
	0x022C2120 ADD X8, X31, 0x0
	0x022C2124 ADD X9, X20, 0xF
	0x022C2128 AND X21, X9, 0x1FFFFFFFF
	0x022C212C SUB X8, X8, X21
	0x022C2130 STUR X8, [X29 - 0x38]
	0x022C2134 ADD X31, X8, 0x0
	0x022C2138 ADD X8, X31, 0x0
	0x022C213C SUB X0, X8, X21
	0x022C2140 ADD X31, X0, 0x0
	0x022C2144 MOV W1, W31
	0x022C2148 MOV X2, X20
	0x022C214C STUR X0, [X29 - 0x40]
	0x022C2150 BL 0x3EB1B10
	0x022C2154 ADD X8, X31, 0x0
	0x022C2158 SUB X25, X8, X21
	0x022C215C ADD X31, X25, 0x0
	0x022C2160 MOV X0, X25
	0x022C2164 MOV W1, W31
	0x022C2168 MOV X2, X20
	0x022C216C BL 0x3EB1B10
	0x022C2170 ADD X8, X31, 0x0
	0x022C2174 SUB X28, X8, X21
	0x022C2178 ADD X31, X28, 0x0
	0x022C217C MOV X0, X28
	0x022C2180 MOV W1, W31
	0x022C2184 MOV X2, X20
	0x022C2188 BL 0x3EB1B10
	0x022C218C ADD X8, X31, 0x0
	0x022C2190 SUB X27, X8, X21
	0x022C2194 ADD X31, X27, 0x0
	0x022C2198 MOV X0, X27
	0x022C219C MOV W1, W31
	0x022C21A0 MOV X2, X20
	0x022C21A4 BL 0x3EB1B10
	0x022C21A8 ADRP X22, 0x1E31000
	0x022C21AC LDR X22, [X22 + 0x6C0]
	0x022C21B0 LDR X19, [X19]
	0x022C21B4 LDR X0, [X22]
	0x022C21B8 LDR W8, [X0 + 0xE0]
	0x022C21BC CBNZ W8, 0x22C21C4
	0x022C21C0 BL 0x1C16DFC
	0x022C21C4 MOV X0, X19
	0x022C21C8 MOV X1, X31
	0x022C21CC BL 0x338C698
	0x022C21D0 ADRP X21, 0x1E5A000
	0x022C21D4 LDR X21, [X21 + 0x6A0]
	0x022C21D8 MOV X19, X0
	0x022C21DC LDR X8, [X21]
	0x022C21E0 LDR W9, [X8 + 0xE0]
	0x022C21E4 CBNZ W9, 0x22C21F0
	0x022C21E8 MOV X0, X8
	0x022C21EC BL 0x1C16DFC
	0x022C21F0 MOV X0, X19
	0x022C21F4 MOV X1, X31
	0x022C21F8 BL 0x3BF3054
	0x022C21FC LDR X8, [X22]
	0x022C2200 LDR X9, [X26]
	0x022C2204 MOV W23, W0
	0x022C2208 LDR W10, [X8 + 0xE0]
	0x022C220C LDR X19, [X9]
	0x022C2210 CBNZ W10, 0x22C221C
	0x022C2214 MOV X0, X8
	0x022C2218 BL 0x1C16DFC
	0x022C221C MOV X0, X19
	0x022C2220 MOV X1, X31
	0x022C2224 BL 0x338C698
	0x022C2228 MOV X19, X0
	0x022C222C TBZ X23, 0x0, 0x22C2284
	0x022C2230 ADRP X8, 0x1E58000
	0x022C2234 LDR X8, [X8 + 0xD80]
	0x022C2238 MOV X1, X31
	0x022C223C LDR X0, [X8]
	0x022C2240 BL 0x338C698
	0x022C2244 MOV X1, X0
	0x022C2248 MOV X0, X19
	0x022C224C MOV X2, X31
	0x022C2250 BL 0x3395194
	0x022C2254 TBZ X0, 0x0, 0x22C22CC
	0x022C2258 LDUR X8, [X29 - 0x50]
	0x022C225C MOV X1, X31
	0x022C2260 LDR X0, [X8 + 0x18]
	0x022C2264 BL 0x3BEF01C
	0x022C2268 LDUR X1, [X29 - 0x48]
	0x022C226C MOV X2, X31
	0x022C2270 BL 0x3BECBB8
	0x022C2274 ADRP X8, 0x1E31000
	0x022C2278 LDR X8, [X8 + 0x758]
	0x022C227C STUR W0, [X29 - 0x20]
	0x022C2280 B 0x22C234C
	0x022C2284 ADRP X8, 0x1E59000
	0x022C2288 LDR X8, [X8 + 0xB60]
	0x022C228C MOV X1, X31
	0x022C2290 LDR X0, [X8]
	0x022C2294 BL 0x338C698
	0x022C2298 MOV X1, X0
	0x022C229C MOV X0, X19
	0x022C22A0 MOV X2, X31
	0x022C22A4 BL 0x3395194
	0x022C22A8 TBZ X0, 0x0, 0x22C23F0
	0x022C22AC LDUR X8, [X29 - 0x50]
	0x022C22B0 MOV X1, X31
	0x022C22B4 LDR X0, [X8 + 0x18]
	0x022C22B8 BL 0x3BEF01C
	0x022C22BC LDUR X1, [X29 - 0x48]
	0x022C22C0 MOV X2, X31
	0x022C22C4 BL 0x3BEC660
	0x022C22C8 B 0x22C235C
	0x022C22CC LDR X0, [X22]
	0x022C22D0 LDR X8, [X26]
	0x022C22D4 LDR W9, [X0 + 0xE0]
	0x022C22D8 LDR X19, [X8]
	0x022C22DC CBNZ W9, 0x22C22E4
	0x022C22E0 BL 0x1C16DFC
	0x022C22E4 MOV X0, X19
	0x022C22E8 MOV X1, X31
	0x022C22EC BL 0x338C698
	0x022C22F0 ADRP X8, 0x1E5A000
	0x022C22F4 LDR X8, [X8 + 0x248]
	0x022C22F8 MOV X19, X0
	0x022C22FC MOV X1, X31
	0x022C2300 LDR X8, [X8]
	0x022C2304 MOV X0, X8
	0x022C2308 BL 0x338C698
	0x022C230C MOV X1, X0
	0x022C2310 MOV X0, X19
	0x022C2314 MOV X2, X31
	0x022C2318 BL 0x3395194
	0x022C231C TBZ X0, 0x0, 0x22C24B4
	0x022C2320 LDUR X8, [X29 - 0x50]
	0x022C2324 MOV X1, X31
	0x022C2328 LDR X0, [X8 + 0x18]
	0x022C232C BL 0x3BEF01C
	0x022C2330 LDUR X1, [X29 - 0x48]
	0x022C2334 MOV X2, X31
	0x022C2338 BL 0x3BECB10
	0x022C233C ADRP X8, 0x1E31000
	0x022C2340 LDR X8, [X8 + 0xB58]
	0x022C2344 AND W9, W0, 0x1
	0x022C2348 STURB W9, [X29 - 0x20]
	0x022C234C LDR X8, [X8]
	0x022C2350 SUB X1, X29, 0x20
	0x022C2354 MOV X0, X8
	0x022C2358 BL 0x1C16E04
	0x022C235C LDR X8, [X26]
	0x022C2360 MOV X19, X0
	0x022C2364 LDR X1, [X8 + 0x8]
	0x022C2368 LDRB W8, [X1 + 0x135]
	0x022C236C TBNZ X8, 0x0, 0x22C237C
	0x022C2370 MOV X0, X1
	0x022C2374 BL 0x1C5C684
	0x022C2378 MOV X1, X0
	0x022C237C LDP X24, X23, [X29 - 0x40]
	0x022C2380 LDP X22, X21, [X29 - 0x30]
	0x022C2384 MOV X0, X19
	0x022C2388 MOV X2, X23
	0x022C238C BL 0x1C16E10
	0x022C2390 MOV X1, X0
	0x022C2394 MOV X0, X24
	0x022C2398 MOV X2, X20
	0x022C239C BL 0x3EB1AC0
	0x022C23A0 MOV X0, X23
	0x022C23A4 MOV X1, X24
	0x022C23A8 MOV X2, X20
	0x022C23AC BL 0x3EB1AC0
	0x022C23B0 MOV X0, X22
	0x022C23B4 MOV X1, X23
	0x022C23B8 MOV X2, X20
	0x022C23BC BL 0x3EB1AC0
	0x022C23C0 LDR X8, [X21 + 0x28]
	0x022C23C4 LDUR X9, [X29 - 0x8]
	0x022C23C8 CMP X8, X9
	0x022C23CC B.NE 0x22C2B90
	0x022C23D0 ADD X31, X29, 0x0
	0x022C23D4 LDP X20, X19, [X31 + 0x50]
	0x022C23D8 LDP X22, X21, [X31 + 0x40]
	0x022C23DC LDP X24, X23, [X31 + 0x30]
	0x022C23E0 LDP X26, X25, [X31 + 0x20]
	0x022C23E4 LDP X28, X27, [X31 + 0x10]
	0x022C23E8 LDP X29, X30, [X31], #0x60
	0x022C23EC RET
	0x022C23F0 LDR X0, [X22]
	0x022C23F4 LDR X8, [X26]
	0x022C23F8 LDR W9, [X0 + 0xE0]
	0x022C23FC LDR X19, [X8]
	0x022C2400 CBNZ W9, 0x22C2408
	0x022C2404 BL 0x1C16DFC
	0x022C2408 MOV X0, X19
	0x022C240C MOV X1, X31
	0x022C2410 BL 0x338C698
	0x022C2414 ADRP X8, 0x1E5A000
	0x022C2418 LDR X8, [X8 + 0x690]
	0x022C241C MOV X19, X0
	0x022C2420 MOV X1, X31
	0x022C2424 LDR X8, [X8]
	0x022C2428 MOV X0, X8
	0x022C242C BL 0x338C698
	0x022C2430 MOV X1, X0
	0x022C2434 MOV X0, X19
	0x022C2438 MOV X2, X31
	0x022C243C BL 0x3395194
	0x022C2440 TBZ X0, 0x0, 0x22C255C
	0x022C2444 LDUR X8, [X29 - 0x50]
	0x022C2448 MOV X1, X31
	0x022C244C LDR X0, [X8 + 0x18]
	0x022C2450 BL 0x3BEF01C
	0x022C2454 LDUR X1, [X29 - 0x48]
	0x022C2458 MOV X2, X31
	0x022C245C BL 0x3BEC5B8
	0x022C2460 MOV X1, X31
	0x022C2464 MOV X2, X31
	0x022C2468 MOV X19, X0
	0x022C246C BL 0x33BE5B0
	0x022C2470 TBZ X0, 0x0, 0x22C2620
	0x022C2474 MOV X0, X25
	0x022C2478 MOV W1, W31
	0x022C247C MOV X2, X20
	0x022C2480 BL 0x3EB1B10
	0x022C2484 LDUR X23, [X29 - 0x38]
	0x022C2488 MOV X1, X25
	0x022C248C MOV X2, X20
	0x022C2490 MOV X0, X23
	0x022C2494 BL 0x3EB1AC0
	0x022C2498 MOV X0, X28
	0x022C249C MOV X1, X23
	0x022C24A0 MOV X2, X20
	0x022C24A4 BL 0x3EB1AC0
	0x022C24A8 LDP X22, X21, [X29 - 0x30]
	0x022C24AC LDUR X24, [X29 - 0x40]
	0x022C24B0 B 0x22C2670
	0x022C24B4 LDR X0, [X22]
	0x022C24B8 LDR X8, [X26]
	0x022C24BC LDR W9, [X0 + 0xE0]
	0x022C24C0 LDR X19, [X8]
	0x022C24C4 CBNZ W9, 0x22C24CC
	0x022C24C8 BL 0x1C16DFC
	0x022C24CC MOV X0, X19
	0x022C24D0 MOV X1, X31
	0x022C24D4 BL 0x338C698
	0x022C24D8 ADRP X8, 0x1E58000
	0x022C24DC LDR X8, [X8 + 0xD68]
	0x022C24E0 MOV X19, X0
	0x022C24E4 MOV X1, X31
	0x022C24E8 LDR X8, [X8]
	0x022C24EC MOV X0, X8
	0x022C24F0 BL 0x338C698
	0x022C24F4 MOV X1, X0
	0x022C24F8 MOV X0, X19
	0x022C24FC MOV X2, X31
	0x022C2500 BL 0x3395194
	0x022C2504 TBZ X0, 0x0, 0x22C267C
	0x022C2508 ADRP X8, 0x1E31000
	0x022C250C LDR X8, [X8 + 0xA28]
	0x022C2510 LDR X0, [X8]
	0x022C2514 LDR W8, [X0 + 0xE0]
	0x022C2518 CBNZ W8, 0x22C2520
	0x022C251C BL 0x1C16DFC
	0x022C2520 ADRP X8, 0x1E5A000
	0x022C2524 LDR X8, [X8 + 0xAA0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, X2
	011 Add X24, X24, 56
	012 Move X8, [X24]
	013 Move X21, X2
	014 Move X19, X1
	015 Move X20, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {102}
	018 Move X0, 0x1E5C000
	019 Move X0, [X0+1680]
	020 Call 0x1C17CF4
	021 Move X0, 0x1E5C000
	022 Move X0, [X0+1688]
	023 Call 0x1C17CF4
	024 Move X0, 0x1E5C000
	025 Move X0, [X0+1696]
	026 Call 0x1C17CF4
	027 Move X0, 0x1E5C000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move X0, 0x1E33000
	031 Move X0, [X0+2904]
	032 Call 0x1C17CF4
	033 Move X0, 0x1E5A000
	034 Move X0, [X0+3432]
	035 Call 0x1C17CF4
	036 Move X0, 0x1E34000
	037 Move X0, [X0+2520]
	038 Call 0x1C17CF4
	039 Move X0, 0x1E5A000
	040 Move X0, [X0+3440]
	041 Call 0x1C17CF4
	042 Move X0, 0x1E35000
	043 Move X0, [X0+368]
	044 Call 0x1C17CF4
	045 Move X0, 0x1E33000
	046 Move X0, [X0+2600]
	047 Call 0x1C17CF4
	048 Move X0, 0x1E5B000
	049 Move X0, [X0+2680]
	050 Call 0x1C17CF4
	051 Move X0, 0x1E36000
	052 Move X0, [X0+2424]
	053 Call 0x1C17CF4
	054 Move X0, 0x1E5A000
	055 Move X0, [X0+3448]
	056 Call 0x1C17CF4
	057 Move X0, 0x1E37000
	058 Move X0, [X0+1576]
	059 Call 0x1C17CF4
	060 Move X0, 0x1E5A000
	061 Move X0, [X0+3456]
	062 Call 0x1C17CF4
	063 Move X0, 0x1E33000
	064 Move X0, [X0+1880]
	065 Call 0x1C17CF4
	066 Move X0, 0x1E5A000
	067 Move X0, [X0+3464]
	068 Call 0x1C17CF4
	069 Move X0, 0x1E35000
	070 Move X0, [X0+2656]
	071 Call 0x1C17CF4
	072 Move X0, 0x1E5C000
	073 Move X0, [X0+1704]
	074 Call 0x1C17CF4
	075 Move X0, 0x1E5A000
	076 Move X0, [X0+3472]
	077 Call 0x1C17CF4
	078 Move X0, 0x1E5C000
	079 Move X0, [X0+1712]
	080 Call 0x1C17CF4
	081 Move X0, 0x1E5B000
	082 Move X0, [X0+2688]
	083 Call 0x1C17CF4
	084 Move X0, 0x1E33000
	085 Move X0, [X0+2704]
	086 Call 0x1C17CF4
	087 Move X0, 0x1E5B000
	088 Move X0, [X0+2912]
	089 Call 0x1C17CF4
	090 Move X0, 0x1E33000
	091 Move X0, [X0+1728]
	092 Call 0x1C17CF4
	093 Move X0, 0x1E5C000
	094 Move X0, [X0+2720]
	095 Call 0x1C17CF4
	096 Move X8, [X21+56]
	097 Compare X8, 0
	098 JumpIfNotEqual {102}
	099 Move X0, X21
	100 Call 0x1C5D6E0
	101 Move X8, [X21+56]
	102 Move X25, 0x1E33000
	103 Move X25, [X25+1728]
	104 Move X22, [X8]
	105 Move X0, [X25]
	106 Move W9, [X0+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X22
	111 Move X1, X31
	112 Call Type.GetTypeFromHandle, X0
	113 Move X26, 0x1E5C000
	114 Move X26, [X26+1696]
	115 Move X22, X0
	116 Move X8, [X26]
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move X0, X22
	123 Move X1, X31
	124 Call AndroidReflection.IsPrimitive, X0
	125 Move X8, [X25]
	126 Move X9, [X24]
	127 Move W23, W0
	128 Move W10, [X8+224]
	129 Move X22, [X9]
	130 Compare W10, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X0, X22
	135 Move X1, X31
	136 Call Type.GetTypeFromHandle, X0
	137 Move X22, X0
	138 Move TEMP, X23
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {182}
	142 Move X8, 0x1E5A000
	143 Move X8, [X8+3456]
	144 Move X1, X31
	145 Move X0, [X8]
	146 Call Type.GetTypeFromHandle, X0
	147 Move X1, X0
	148 Move X0, X22
	149 Move X2, X31
	150 Call Type.op_Equality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {201}
	155 Move X0, [X20+24]
	156 Move X1, X31
	157 Call GlobalJavaObjectRef.op_Implicit, X0
	158 Move X1, X19
	159 Move X2, X31
	160 Call AndroidJNISafe.GetStaticIntField, X0, X1
	161 Move X8, 0x1E33000
	162 Move X8, [X8+1880]
	163 Move [X31+8], W0
	164 Add X1, X31, 8
	165 Move X8, [X8]
	166 Move X0, X8
	167 Call 0x1C17E04
	168 Move X8, [X24]
	169 Move X19, X0
	170 Move X1, [X8+8]
	171 Move W8, [X1+309]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {179}
	176 Move X0, X1
	177 Call 0x1C5D684
	178 Move X1, X0
	179 Compare X19, 0
	180 JumpIfNotEqual {415}
	181 Call 0x1C17F20
	182 Move X8, 0x1E5B000
	183 Move X8, [X8+2912]
	184 Move X1, X31
	185 Move X0, [X8]
	186 Call Type.GetTypeFromHandle, X0
	187 Move X1, X0
	188 Move X0, X22
	189 Move X2, X31
	190 Call Type.op_Equality, X0, X1
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {237}
	195 Move X0, [X20+24]
	196 Move X1, X31
	197 Call GlobalJavaObjectRef.op_Implicit, X0
	198 Move X1, X19
	199 Move X2, X31
	200 Call AndroidJNISafe.GetStaticStringField, X0, X1
	201 Move X0, [X25]
	202 Move X8, [X24]
	203 Move W9, [X0+224]
	204 Move X21, [X8]
	205 Compare W9, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X0, X21
	209 Move X1, X31
	210 Call Type.GetTypeFromHandle, X0
	211 Move X8, 0x1E5C000
	212 Move X8, [X8+584]
	213 Move X21, X0
	214 Move X1, X31
	215 Move X8, [X8]
	216 Move X0, X8
	217 Call Type.GetTypeFromHandle, X0
	218 Move X1, X0
	219 Move X0, X21
	220 Move X2, X31
	221 Call Type.op_Equality, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {279}
	226 Move X0, [X20+24]
	227 Move X1, X31
	228 Call GlobalJavaObjectRef.op_Implicit, X0
	229 Move X1, X19
	230 Move X2, X31
	231 Call AndroidJNISafe.GetStaticBooleanField, X0, X1
	232 Move X8, 0x1E33000
	233 Move X8, [X8+2904]
	234 And W9, W0, 1
	235 Move [X31+8], W9
	236 Move X8, [X8]
	237 Move X0, [X25]
	238 Move X8, [X24]
	239 Move W9, [X0+224]
	240 Move X22, [X8]
	241 Compare W9, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X0, X22
	245 Move X1, X31
	246 Call Type.GetTypeFromHandle, X0
	247 Move X8, 0x1E5C000
	248 Move X8, [X8+1680]
	249 Move X22, X0
	250 Move X1, X31
	251 Move X8, [X8]
	252 Move X0, X8
	253 Call Type.GetTypeFromHandle, X0
	254 Move X1, X0
	255 Move X0, X22
	256 Move X2, X31
	257 Call Type.op_Equality, X0, X1
	258 Move TEMP, X0
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfNotEqual {324}
	262 Move X0, [X20+24]
	263 Move X1, X31
	264 Call GlobalJavaObjectRef.op_Implicit, X0
	265 Move X1, X19
	266 Move X2, X31
	267 Call AndroidJNISafe.GetStaticObjectField, X0, X1
	268 Move X1, X31
	269 Move X2, X31
	270 Move X19, X0
	271 Call IntPtr.op_Equality, X0, X1
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfEqual {363}
	276 Move X0, X19
	277 Move X1, X31
	278 Call AndroidJavaObject.AndroidJavaClassDeleteLocalRef, X0
	279 Move X0, [X25]
	280 Move X8, [X24]
	281 Move W9, [X0+224]
	282 Move X21, [X8]
	283 Compare W9, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X0, X21
	287 Move X1, X31
	288 Call Type.GetTypeFromHandle, X0
	289 Move X8, 0x1E5A000
	290 Move X8, [X8+3432]
	291 Move X21, X0
	292 Move X1, X31
	293 Move X8, [X8]
	294 Move X0, X8
	295 Call Type.GetTypeFromHandle, X0
	296 Move X1, X0
	297 Move X0, X21
	298 Move X2, X31
	299 Call Type.op_Equality, X0, X1
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {364}
	304 Move X8, 0x1E33000
	305 Move X8, [X8+2600]
	306 Move X0, [X8]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X8, 0x1E5C000
	312 Move X8, [X8+2720]
	313 Move X1, X31
	314 Move X0, [X8]
	315 Call Debug.LogWarning, X0
	316 Move X0, [X20+24]
	317 Move X1, X31
	318 Call GlobalJavaObjectRef.op_Implicit, X0
	319 Move X1, X19
	320 Move X2, X31
	321 Call AndroidJNISafe.GetStaticSByteField, X0, X1
	322 Move X8, 0x1E34000
	323 Move X8, [X8+2520]
	324 Move X0, [X25]
	325 Move X8, [X24]
	326 Move W9, [X0+224]
	327 Move X22, [X8]
	328 Compare W9, 0
	329 JumpIfNotEqual {331}
	330 Call 0x1C17DFC
	331 Move X0, X22
	332 Move X1, X31
	333 Call Type.GetTypeFromHandle, X0
	334 Move X8, 0x1E5B000
	335 Move X8, [X8+1688]
	336 Move X22, X0
	337 Move X1, X31
	338 Move X8, [X8]
	339 Move X0, X8
	340 Call Type.GetTypeFromHandle, X0
	341 Move X1, X0
	342 Move X0, X22
	343 Move X2, X31
	344 Call Type.op_Equality, X0, X1
	345 Move TEMP, X0
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfNotEqual {432}
	349 Move X0, [X20+24]
	350 Move X1, X31
	351 Call GlobalJavaObjectRef.op_Implicit, X0
	352 Move X1, X19
	353 Move X2, X31
	354 Call AndroidJNISafe.GetStaticObjectField, X0, X1
	355 Move X1, X31
	356 Move X2, X31
	357 Move X19, X0
	358 Call IntPtr.op_Equality, X0, X1
	359 Move TEMP, X0
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfNotEqual {483}
	363 Move W0, W31
	364 Move X0, [X25]
	365 Move X8, [X24]
	366 Move W9, [X0+224]
	367 Move X21, [X8]
	368 Compare W9, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X0, X21
	372 Move X1, X31
	373 Call Type.GetTypeFromHandle, X0
	374 Move X8, 0x1E59000
	375 Move X8, [X8+3472]
	376 Move X21, X0
	377 Move X1, X31
	378 Move X8, [X8]
	379 Move X0, X8
	380 Call Type.GetTypeFromHandle, X0
	381 Move X1, X0
	382 Move X0, X21
	383 Move X2, X31
	384 Call Type.op_Equality, X0, X1
	385 Move TEMP, X0
	386 And TEMP, TEMP, 1
	387 Compare TEMP, 1
	388 JumpIfNotEqual {486}
	389 Move X0, [X20+24]
	390 Move X1, X31
	391 Call GlobalJavaObjectRef.op_Implicit, X0
	392 Move X1, X19
	393 Move X2, X31
	394 Call AndroidJNISafe.GetStaticSByteField, X0, X1
	395 Move X8, 0x1E5B000
	396 Move X8, [X8+1712]
	397 Move X8, [X8]
	398 Move [X31+8], W0
	399 Add X1, X31, 8
	400 Move X0, X8
	401 Call 0x1C17E04
	402 Move X8, [X24]
	403 Move X19, X0
	404 Move X1, [X8+8]
	405 Move W8, [X1+309]
	406 Move TEMP, X8
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {413}
	410 Move X0, X1
	411 Call 0x1C5D684
	412 Move X1, X0
	413 Compare X19, 0
	414 JumpIfEqual {181}
	415 Move X8, [X19]
	416 Move X9, [X1+64]
	417 Move X0, X19
	418 Move X8, [X8+64]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Call 0x1C17E08
	421 Move W0, [X0]
	422 Move X20, [X31+64]
	423 Move X19, [X31+72]
	424 Move X22, [X31+48]
	425 Move X21, [X31+56]
	426 Move X24, [X31+32]
	427 Move X23, [X31+40]
	428 Move X26, [X31+16]
	429 Move X25, [X31+24]
	430 Move X30, [X31+80]
	431 Return X0
	432 Move X8, 0x1E5B000
	433 Move X0, [X25]
	434 Move X8, [X8+1704]
	435 Move W9, [X0+224]
	436 Move X22, [X8]
	437 Compare W9, 0
	438 JumpIfNotEqual {440}
	439 Call 0x1C17DFC
	440 Move X0, X22
	441 Move X1, X31
	442 Call Type.GetTypeFromHandle, X0
	443 Move X8, [X24]
	444 Move X22, X0
	445 Move X1, X31
	446 Move X8, [X8]
	447 Move X0, X8
	448 Call Type.GetTypeFromHandle, X0
	449 Move X8, [X26]
	450 Move X23, X0
	451 Move W9, [X8+224]
	452 Compare W9, 0
	453 JumpIfNotEqual {456}
	454 Move X0, X8
	455 Call 0x1C17DFC
	456 Move X0, X22
	457 Move X1, X23
	458 Move X2, X31
	459 Call AndroidReflection.IsAssignableFrom, X0, X1
	460 Move TEMP, X0
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfNotEqual {659}
	464 Move X0, [X20+24]
	465 Move X1, X31
	466 Call GlobalJavaObjectRef.op_Implicit, X0
	467 Move X1, X19
	468 Move X2, X31
	469 Call AndroidJNISafe.GetStaticObjectField, X0, X1
	470 Move X8, [X24]
	471 Move X20, [X31+64]
	472 Move X19, [X31+72]
	473 Move X22, [X31+48]
	474 Move X21, [X31+56]
	475 Move X24, [X31+32]
	476 Move X23, [X31+40]
	477 Move X1, [X8+16]
	478 Move X26, [X31+16]
	479 Move X25, [X31+24]
	480 Move X30, [X31+80]
	481 Call AndroidJavaObject.FromJavaArrayDeleteLocalRef, X0
	482 Return X0
	483 Move X0, X19
	484 Move X1, X31
	485 Call AndroidJavaObject.AndroidJavaObjectDeleteLocalRef, X0
	486 Move X0, [X25]
	487 Move X8, [X24]
	488 Move W9, [X0+224]
	489 Move X21, [X8]
	490 Compare W9, 0
	491 JumpIfNotEqual {493}
	492 Call 0x1C17DFC
	493 Move X0, X21
	494 Move X1, X31
	495 Call Type.GetTypeFromHandle, X0
	496 Move X8, 0x1E59000
	497 Move X8, [X8+3448]
	498 Move X21, X0
	499 Move X1, X31
	500 Move X8, [X8]
	501 Move X0, X8
	502 Call Type.GetTypeFromHandle, X0
	503 Move X1, X0
	504 Move X0, X21
	505 Move X2, X31
	506 Call Type.op_Equality, X0, X1
	507 Move TEMP, X0
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfNotEqual {521}
	511 Move X0, [X20+24]
	512 Move X1, X31
	513 Call GlobalJavaObjectRef.op_Implicit, X0
	514 Move X1, X19
	515 Move X2, X31
	516 Call AndroidJNISafe.GetStaticShortField, X0, X1
	517 Move X8, 0x1E36000
	518 Move X8, [X8+1576]
	519 Move X8, [X8]
	520 NotImplemented "Instruction STRH not yet implemented."
	521 Move X0, [X25]
	522 Move X8, [X24]
	523 Move W9, [X0+224]
	524 Move X21, [X8]
	525 Compare W9, 0
	526 JumpIfNotEqual {528}
	527 Call 0x1C17DFC
	528 Move X0, X21
	529 Move X1, X31
	530 Call Type.GetTypeFromHandle, X0
	531 Move X8, 0x1E59000
	532 Move X8, [X8+3464]
	533 Move X21, X0
	534 Move X1, X31
	535 Move X8, [X8]
	536 Move X0, X8
	537 Call Type.GetTypeFromHandle, X0
	538 Move X1, X0
	539 Move X0, X21
	540 Move X2, X31
	541 Call Type.op_Equality, X0, X1
	542 Move TEMP, X0
	543 And TEMP, TEMP, 1
	544 Compare TEMP, 1
	545 JumpIfNotEqual {555}
	546 Move X0, [X20+24]
	547 Move X1, X31
	548 Call GlobalJavaObjectRef.op_Implicit, X0
	549 Move X1, X19
	550 Move X2, X31
	551 Call AndroidJNISafe.GetStaticLongField, X0, X1
	552 Move X8, 0x1E34000
	553 Move X8, [X8+2656]
	554 Move [X31+8], X0
	555 Move X0, [X25]
	556 Move X8, [X24]
	557 Move W9, [X0+224]
	558 Move X21, [X8]
	559 Compare W9, 0
	560 JumpIfNotEqual {562}
	561 Call 0x1C17DFC
	562 Move X0, X21
	563 Move X1, X31
	564 Call Type.GetTypeFromHandle, X0
	565 Move X8, 0x1E5A000
	566 Move X8, [X8+2688]
	567 Move X21, X0
	568 Move X1, X31
	569 Move X8, [X8]
	570 Move X0, X8
	571 Call Type.GetTypeFromHandle, X0
	572 Move X1, X0
	573 Move X0, X21
	574 Move X2, X31
	575 Call Type.op_Equality, X0, X1
	576 Move TEMP, X0
	577 And TEMP, TEMP, 1
	578 Compare TEMP, 1
	579 JumpIfNotEqual {589}
	580 Move X0, [X20+24]
	581 Move X1, X31
	582 Call GlobalJavaObjectRef.op_Implicit, X0
	583 Move X1, X19
	584 Move X2, X31
	585 Call AndroidJNISafe.GetStaticFloatField, X0, X1
	586 Move X8, 0x1E32000
	587 Move X8, [X8+2704]
	588 Move [X31+8], S0
	589 Move X0, [X25]
	590 Move X8, [X24]
	591 Move W9, [X0+224]
	592 Move X21, [X8]
	593 Compare W9, 0
	594 JumpIfNotEqual {596}
	595 Call 0x1C17DFC
	596 Move X0, X21
	597 Move X1, X31
	598 Call Type.GetTypeFromHandle, X0
	599 Move X8, 0x1E5A000
	600 Move X8, [X8+2680]
	601 Move X21, X0
	602 Move X1, X31
	603 Move X8, [X8]
	604 Move X0, X8
	605 Call Type.GetTypeFromHandle, X0
	606 Move X1, X0
	607 Move X0, X21
	608 Move X2, X31
	609 Call Type.op_Equality, X0, X1
	610 Move TEMP, X0
	611 And TEMP, TEMP, 1
	612 Compare TEMP, 1
	613 JumpIfNotEqual {625}
	614 Move X0, [X20+24]
	615 Move X1, X31
	616 Call GlobalJavaObjectRef.op_Implicit, X0
	617 Move X1, X19
	618 Move X2, X31
	619 Call AndroidJNISafe.GetStaticDoubleField, X0, X1
	620 Move X8, 0x1E35000
	621 Move X8, [X8+2424]
	622 Move [X31+8], D0
	623 Move X0, [X8]
	624 Add X1, X31, 8
	625 Move X0, [X25]
	626 Move X8, [X24]
	627 Move W9, [X0+224]
	628 Move X21, [X8]
	629 Compare W9, 0
	630 JumpIfNotEqual {632}
	631 Call 0x1C17DFC
	632 Move X0, X21
	633 Move X1, X31
	634 Call Type.GetTypeFromHandle, X0
	635 Move X8, 0x1E59000
	636 Move X8, [X8+3440]
	637 Move X21, X0
	638 Move X1, X31
	639 Move X8, [X8]
	640 Move X0, X8
	641 Call Type.GetTypeFromHandle, X0
	642 Move X1, X0
	643 Move X0, X21
	644 Move X2, X31
	645 Call Type.op_Equality, X0, X1
	646 Move TEMP, X0
	647 And TEMP, TEMP, 1
	648 Compare TEMP, 1
	649 JumpIfNotEqual {363}
	650 Move X0, [X20+24]
	651 Move X1, X31
	652 Call GlobalJavaObjectRef.op_Implicit, X0
	653 Move X1, X19
	654 Move X2, X31
	655 Call AndroidJNISafe.GetStaticCharField, X0, X1
	656 Move X8, 0x1E34000
	657 Move X8, [X8+368]
	658 Call 0x1C181E0
	659 Move X8, [X24]
	660 Move X0, 0x1E32000
	661 Move X19, [X8]
	662 Move X0, [X0+1728]
	663 Call 0x1C17D08
	664 Move W8, [X0+224]
	665 Compare W8, 0
	666 JumpIfNotEqual {668}
	667 Call 0x1C17DFC
	668 Move X0, X19
	669 Move X1, X31
	670 Call Type.GetTypeFromHandle, X0
	671 Move X20, X0
	672 Move X0, 0x1E5B000
	673 Move X0, [X0+2728]
	674 Call 0x1C17D08
	675 Move X19, X0
	676 Move X22, X31
	677 Compare X20, 0
	678 JumpIfEqual {685}
	679 Move X8, [X20]
	680 Move X0, X20
	681 Move X9, [X8+360]
	682 Move X1, [X8+368]
	683 NotImplemented "Instruction BLR not yet implemented."
	684 Move X22, X0
	685 Move X0, 0x1E3A000
	686 Move X0, [X0+2480]
	687 Call 0x1C17D08
	688 Move X2, X0
	689 Move X0, X19
	690 Move X1, X22
	691 Move X3, X31
	692 Call String.Concat, X0, X1, X2
	693 Move X19, X0
	694 Move X0, 0x1E32000
	695 Move X0, [X0+2000]
	696 Call 0x1C17D08
	697 Call 0x1C17F10
	698 Move X1, X19
	699 Move X2, X31
	700 Move X20, X0
	701 Call Exception..ctor, X0, X1
	702 Move X0, X20
	703 Move X1, X21
	704 Call 0x1C17DEC

Method: System.Void _SetStatic(System.String fieldName, FieldType val)

Disassembly:
	0x022C5D30 LDR W10, [X8 + 0xE0]
	0x022C5D34 CBNZ W10, 0x22C5D40
	0x022C5D38 MOV X0, X8
	0x022C5D3C BL 0x1C16DFC
	0x022C5D40 MOV X0, X21
	0x022C5D44 MOV X1, X31
	0x022C5D48 BL 0x338C698
	0x022C5D4C MOV X1, X0
	0x022C5D50 MOV X0, X20
	0x022C5D54 MOV X2, X31
	0x022C5D58 BL 0x3395F0C
	0x022C5D5C TBNZ X0, 0x0, 0x22C5D70
	0x022C5D60 LDP X20, X19, [X31 + 0x20]
	0x022C5D64 LDP X30, X21, [X31 + 0x10]
	0x022C5D68 ADD X31, X31, 0x30
	0x022C5D6C RET
	0x022C5D70 LDR X8, [X19 + 0x38]
	0x022C5D74 ADRP X0, 0x1E2E000
	0x022C5D78 LDR X21, [X8]
	0x022C5D7C LDR X0, [X0 + 0x6C0]
	0x022C5D80 BL 0x1C16D08
	0x022C5D84 BL 0x19903D0
	0x022C5D88 MOV X0, X21
	0x022C5D8C MOV X1, X31
	0x022C5D90 BL 0x338C698
	0x022C5D94 MOV X21, X0
	0x022C5D98 BL 0x19903C0
	0x022C5D9C LDR X8, [X21]
	0x022C5DA0 MOV X0, X21
	0x022C5DA4 LDR X9, [X8 + 0x2E8]
	0x022C5DA8 LDR X1, [X8 + 0x2F0]
	0x022C5DAC BLR X9
	0x022C5DB0 MOV X21, X0
	0x022C5DB4 MOV X0, X20
	0x022C5DB8 BL 0x19903C0
	0x022C5DBC LDR X8, [X20]
	0x022C5DC0 MOV X0, X20
	0x022C5DC4 LDR X9, [X8 + 0x2E8]
	0x022C5DC8 LDR X1, [X8 + 0x2F0]
	0x022C5DCC BLR X9
	0x022C5DD0 MOV X20, X0
	0x022C5DD4 ADRP X0, 0x1E57000
	0x022C5DD8 LDR X0, [X0 + 0xB00]
	0x022C5DDC BL 0x1C16D08
	0x022C5DE0 MOV X1, X21
	0x022C5DE4 MOV X2, X20
	0x022C5DE8 MOV X3, X31
	0x022C5DEC BL 0x3227BD4
	0x022C5DF0 MOV X20, X0
	0x022C5DF4 ADRP X0, 0x1E36000
	0x022C5DF8 LDR X0, [X0 + 0x578]
	0x022C5DFC BL 0x1C16D08
	0x022C5E00 BL 0x1C16F10
	0x022C5E04 MOV X1, X20
	0x022C5E08 MOV X2, X31
	0x022C5E0C MOV X21, X0
	0x022C5E10 BL 0x3314A68
	0x022C5E14 MOV X0, X21
	0x022C5E18 MOV X1, X19
	0x022C5E1C BL 0x1C16DEC
	0x022C5E20 SUB X31, X31, 0x30
	0x022C5E24 STP X30, X21, [X31 + 0x10]
	0x022C5E28 STP X20, X19, [X31 + 0x20]
	0x022C5E2C LDR X8, [X1 + 0x38]
	0x022C5E30 MOV X19, X1
	0x022C5E34 MOV X20, X0
	0x022C5E38 CBNZ X8, 0x22C5E70
	0x022C5E3C ADRP X0, 0x1E57000
	0x022C5E40 LDR X0, [X0 + 0xAF8]
	0x022C5E44 BL 0x1C16CF4
	0x022C5E48 ADRP X0, 0x1E57000

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 48
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X22, X3
	015 Move X21, X2
	016 Move X23, X1
	017 Move [X29-8], X8
	018 Move [X29-40], X2
	019 Move X8, [X3+56]
	020 Move X19, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X22
	024 Call 0x1C5D6E0
	025 Move X8, [X22+56]
	026 Move X8, [X8+8]
	027 Move W24, [X8+252]
	028 Add X8, X31, 0
	029 Add X9, X24, 15
	030 And X9, X9, 0x1FFFFFFFF
	031 Subtract X20, X8, X9
	032 Add X31, X20, 0
	033 Move X0, [X19+24]
	034 Move X1, X31
	035 Call GlobalJavaObjectRef.op_Implicit, X0
	036 Move X8, [X22+56]
	037 Move W2, 1
	038 Move X1, X23
	039 Move X3, [X8]
	040 Move X8, [X3]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X22, [X22+56]
	043 Move X23, X0
	044 Move X0, X20
	045 Move X2, X24
	046 Move X8, [X22+8]
	047 Move W8, [X8+40]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X8, X29, 40
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Call 0x3EB2AC0
	052 Move X8, [X22+8]
	053 Move X1, [X22+16]
	054 Move W8, [X8+40]
	055 Move X0, [X1]
	056 Move TEMP, X8
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfEqual {61}
	060 Move X20, [X20]
	061 Subtract X8, X29, 16
	062 Move [X29-24], X20
	063 Move [X29-16], X23
	064 Move [X29-32], X8
	065 Move X8, [X1+16]
	066 Subtract X3, X29, 32
	067 Move X2, X19
	068 Move X4, X20
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X25+40]
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X31, X29, 0
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X25, [X31+16]
	081 Move X29, [X31+80]
	082 Move X30, [X31+88]
	083 Return 
	084 Call 0x3EB2B20

Method: System.Void _SetStatic(System.IntPtr fieldID, FieldType val)

Disassembly:
	0x022C4D8C ADD X9, X24, 0xF
	0x022C4D90 AND X9, X9, 0x1FFFFFFFF
	0x022C4D94 SUB X20, X8, X9
	0x022C4D98 ADD X31, X20, 0x0
	0x022C4D9C LDR X0, [X19 + 0x18]
	0x022C4DA0 MOV X1, X31
	0x022C4DA4 BL 0x3BEF01C
	0x022C4DA8 LDR X8, [X22 + 0x38]
	0x022C4DAC MOVZ W2, 0x1
	0x022C4DB0 MOV X1, X23
	0x022C4DB4 LDR X3, [X8]
	0x022C4DB8 LDR X8, [X3]
	0x022C4DBC BLR X8
	0x022C4DC0 LDR X22, [X22 + 0x38]
	0x022C4DC4 MOV X23, X0
	0x022C4DC8 MOV X0, X20
	0x022C4DCC MOV X2, X24
	0x022C4DD0 LDR X8, [X22 + 0x8]
	0x022C4DD4 LDR W8, [X8 + 0x28]
	0x022C4DD8 CMP W8, 0x0
	0x022C4DDC SUB X8, X29, 0x28
	0x022C4DE0 CSEL X1, X21, X8, LT
	0x022C4DE4 BL 0x3EB1AC0
	0x022C4DE8 LDP X8, X1, [X22 + 0x8]
	0x022C4DEC LDR W8, [X8 + 0x28]
	0x022C4DF0 LDR X0, [X1]
	0x022C4DF4 TBNZ X8, 0x1F, 0x22C4DFC
	0x022C4DF8 LDR X20, [X20]
	0x022C4DFC SUB X8, X29, 0x10
	0x022C4E00 STP X20, X23, [X29 - 0x18]
	0x022C4E04 STUR X8, [X29 - 0x20]
	0x022C4E08 LDR X8, [X1 + 0x10]
	0x022C4E0C SUB X3, X29, 0x20
	0x022C4E10 MOV X2, X19
	0x022C4E14 MOV X4, X20
	0x022C4E18 BLR X8
	0x022C4E1C LDR X8, [X25 + 0x28]
	0x022C4E20 LDUR X9, [X29 - 0x8]
	0x022C4E24 CMP X8, X9
	0x022C4E28 B.NE 0x22C4E48
	0x022C4E2C ADD X31, X29, 0x0
	0x022C4E30 LDP X20, X19, [X31 + 0x40]
	0x022C4E34 LDP X22, X21, [X31 + 0x30]
	0x022C4E38 LDP X24, X23, [X31 + 0x20]
	0x022C4E3C LDR X25, [X31 + 0x10]
	0x022C4E40 LDP X29, X30, [X31], #0x50
	0x022C4E44 RET
	0x022C4E48 BL 0x3EB1B20
	0x022C4E4C SUB X31, X31, 0x40
	0x022C4E50 STR X30, [X31 + 0x10]
	0x022C4E54 STP X22, X21, [X31 + 0x20]
	0x022C4E58 STP X20, X19, [X31 + 0x30]
	0x022C4E5C LDR X8, [X3 + 0x38]
	0x022C4E60 MOV W19, W2
	0x022C4E64 MOV X20, X1
	0x022C4E68 MOV X21, X0
	0x022C4E6C CBNZ X8, 0x22C4E9C
	0x022C4E70 ADRP X0, 0x1E58000
	0x022C4E74 LDR X0, [X0 + 0xAC8]
	0x022C4E78 MOV X22, X3
	0x022C4E7C BL 0x1C16CF4
	0x022C4E80 ADRP X0, 0x1E58000
	0x022C4E84 LDR X0, [X0 + 0xAD0]
	0x022C4E88 BL 0x1C16CF4
	0x022C4E8C LDR X8, [X22 + 0x38]
	0x022C4E90 CBNZ X8, 0x22C4E9C
	0x022C4E94 MOV X0, X22
	0x022C4E98 BL 0x1C5C6E0
	0x022C4E9C STP X31, X31, [X31]
	0x022C4EA0 ADRP X8, 0x1E58000
	0x022C4EA4 LDR X8, [X8 + 0xAC8]
	0x022C4EA8 LDP X0, X1, [X21]
	0x022C4EAC LDR X2, [X8]
	0x022C4EB0 BL 0x22226CC
	0x022C4EB4 SBFM X8, X20, 0x3E, 0x1F
	0x022C4EB8 UBFM W9, W19, 0x1E, 0x1D
	0x022C4EBC ADD X8, X8, W9, 0x2, SXTW
	0x022C4EC0 ADD X1, X8, X0
	0x022C4EC4 ADD X0, X31, 0x0
	0x022C4EC8 MOVZ W2, 0x10
	0x022C4ECC MOV X3, X31
	0x022C4ED0 BL 0x3BFF954
	0x022C4ED4 LDP S0, S1, [X31]
	0x022C4ED8 LDP S2, S3, [X31 + 0x8]
	0x022C4EDC LDP X20, X19, [X31 + 0x30]
	0x022C4EE0 LDP X22, X21, [X31 + 0x20]
	0x022C4EE4 LDR X30, [X31 + 0x10]
	0x022C4EE8 ADD X31, X31, 0x40
	0x022C4EEC RET
	0x022C4EF0 STP X29, X30, [X31 - 0x60]!
	0x022C4EF4 STP X28, X27, [X31 + 0x10]
	0x022C4EF8 STP X26, X25, [X31 + 0x20]
	0x022C4EFC STP X24, X23, [X31 + 0x30]
	0x022C4F00 STP X22, X21, [X31 + 0x40]
	0x022C4F04 STP X20, X19, [X31 + 0x50]
	0x022C4F08 ADD X29, X31, 0x0
	0x022C4F0C SUB X31, X31, 0x10
	0x022C4F10 MRS X27, 0xC000
	0x022C4F14 LDR X8, [X27 + 0x28]
	0x022C4F18 MOV X19, X3
	0x022C4F1C MOV W20, W2
	0x022C4F20 MOV X21, X1
	0x022C4F24 STUR X8, [X29 - 0x8]
	0x022C4F28 LDR X26, [X4 + 0x38]
	0x022C4F2C MOV X23, X0
	0x022C4F30 CBNZ X26, 0x22C4F64
	0x022C4F34 ADRP X0, 0x1E58000
	0x022C4F38 LDR X0, [X0 + 0xAC8]
	0x022C4F3C MOV X22, X4
	0x022C4F40 BL 0x1C16CF4
	0x022C4F44 ADRP X0, 0x1E58000
	0x022C4F48 LDR X0, [X0 + 0xAD0]
	0x022C4F4C BL 0x1C16CF4
	0x022C4F50 LDR X26, [X22 + 0x38]
	0x022C4F54 CBNZ X26, 0x22C4F64
	0x022C4F58 MOV X0, X22
	0x022C4F5C BL 0x1C5C6E0
	0x022C4F60 LDR X26, [X22 + 0x38]
	0x022C4F64 LDR X8, [X26 + 0x8]
	0x022C4F68 LDR W22, [X8 + 0xFC]
	0x022C4F6C ADD X8, X31, 0x0
	0x022C4F70 ADD X9, X22, 0xF
	0x022C4F74 AND X9, X9, 0x1FFFFFFFF
	0x022C4F78 SUB X24, X8, X9
	0x022C4F7C ADD X31, X24, 0x0
	0x022C4F80 ADD X8, X31, 0x0
	0x022C4F84 SUB X25, X8, X9
	0x022C4F88 ADD X31, X25, 0x0
	0x022C4F8C MOV X0, X25
	0x022C4F90 MOV W1, W31
	0x022C4F94 MOV X2, X22
	0x022C4F98 BL 0x3EB1B10
	0x022C4F9C LDR X0, [X26]
	0x022C4FA0 LDR X8, [X0]
	0x022C4FA4 BLR X8
	0x022C4FA8 ADD W8, W0, 0x3
	0x022C4FAC CMP W0, 0x0
	0x022C4FB0 MOV W26, W0
	0x022C4FB4 CSEL W8, W8, W0, LT
	0x022C4FB8 MOV X0, X25
	0x022C4FBC MOV W1, W31
	0x022C4FC0 MOV X2, X22
	0x022C4FC4 SBFM W28, W8, 0x2, 0x1F
	0x022C4FC8 BL 0x3EB1B10
	0x022C4FCC ADRP X8, 0x1E58000
	0x022C4FD0 LDP X0, X1, [X23]
	0x022C4FD4 LDR X8, [X8 + 0xAC8]
	0x022C4FD8 LDR X2, [X8]
	0x022C4FDC BL 0x22226CC
	0x022C4FE0 SBFM X8, X21, 0x3E, 0x1F
	0x022C4FE4 MUL W9, W28, W20
	0x022C4FE8 ADD X8, X8, W9, 0x2, SXTW
	0x022C4FEC ADD X1, X8, X0
	0x022C4FF0 SXTW X2, W26
	0x022C4FF4 MOV X0, X25
	0x022C4FF8 MOV X3, X31
	0x022C4FFC BL 0x3BFF954
	0x022C5000 MOV X0, X24
	0x022C5004 MOV X1, X25
	0x022C5008 MOV X2, X22
	0x022C500C BL 0x3EB1AC0
	0x022C5010 MOV X0, X19
	0x022C5014 MOV X1, X24
	0x022C5018 MOV X2, X22
	0x022C501C BL 0x3EB1AC0
	0x022C5020 LDR X8, [X27 + 0x28]
	0x022C5024 LDUR X9, [X29 - 0x8]
	0x022C5028 CMP X8, X9
	0x022C502C B.NE 0x22C5050
	0x022C5030 ADD X31, X29, 0x0
	0x022C5034 LDP X20, X19, [X31 + 0x50]
	0x022C5038 LDP X22, X21, [X31 + 0x40]
	0x022C503C LDP X24, X23, [X31 + 0x30]
	0x022C5040 LDP X26, X25, [X31 + 0x20]
	0x022C5044 LDP X28, X27, [X31 + 0x10]
	0x022C5048 LDP X29, X30, [X31], #0x60
	0x022C504C RET
	0x022C5050 BL 0x3EB1B20
	0x022C5054 SUB X31, X31, 0x40
	0x022C5058 STR X30, [X31 + 0x10]
	0x022C505C STP X22, X21, [X31 + 0x20]
	0x022C5060 STP X20, X19, [X31 + 0x30]
	0x022C5064 STP S0, S1, [X31]
	0x022C5068 STP S2, S3, [X31 + 0x8]
	0x022C506C LDR X8, [X3 + 0x38]
	0x022C5070 MOV W19, W2
	0x022C5074 MOV X20, X1
	0x022C5078 MOV X22, X0
	0x022C507C CBNZ X8, 0x22C50AC
	0x022C5080 ADRP X0, 0x1E57000
	0x022C5084 LDR X0, [X0 + 0xAD8]
	0x022C5088 MOV X21, X3
	0x022C508C BL 0x1C16CF4
	0x022C5090 ADRP X0, 0x1E57000
	0x022C5094 LDR X0, [X0 + 0xAD0]
	0x022C5098 BL 0x1C16CF4
	0x022C509C LDR X8, [X21 + 0x38]
	0x022C50A0 CBNZ X8, 0x22C50AC
	0x022C50A4 MOV X0, X21
	0x022C50A8 BL 0x1C5C6E0
	0x022C50AC ADRP X8, 0x1E57000
	0x022C50B0 LDP X0, X1, [X22]
	0x022C50B4 LDR X8, [X8 + 0xAD8]
	0x022C50B8 LDR X2, [X8]
	0x022C50BC BL 0x22226A0
	0x022C50C0 SBFM X8, X20, 0x3E, 0x1F
	0x022C50C4 UBFM W9, W19, 0x1E, 0x1D
	0x022C50C8 ADD X8, X8, W9, 0x2, SXTW
	0x022C50CC ADD X0, X8, X0
	0x022C50D0 ADD X1, X31, 0x0
	0x022C50D4 MOVZ W2, 0x10
	0x022C50D8 MOV X3, X31
	0x022C50DC BL 0x3BFF954
	0x022C50E0 LDP X20, X19, [X31 + 0x30]
	0x022C50E4 LDP X22, X21, [X31 + 0x20]
	0x022C50E8 LDR X30, [X31 + 0x10]
	0x022C50EC ADD X31, X31, 0x40
	0x022C50F0 RET
	0x022C50F4 STP X30, X23, [X31 - 0x30]!
	0x022C50F8 STP X22, X21, [X31 + 0x10]
	0x022C50FC STP X20, X19, [X31 + 0x20]
	0x022C5100 LDR X8, [X4 + 0x38]
	0x022C5104 MOV W20, W3
	0x022C5108 MOV X21, X2
	0x022C510C MOV X19, X1
	0x022C5110 MOV X22, X0
	0x022C5114 CBNZ X8, 0x22C5148
	0x022C5118 ADRP X0, 0x1E57000
	0x022C511C LDR X0, [X0 + 0xAD8]
	0x022C5120 MOV X23, X4
	0x022C5124 BL 0x1C16CF4
	0x022C5128 ADRP X0, 0x1E57000
	0x022C512C LDR X0, [X0 + 0xAD0]
	0x022C5130 BL 0x1C16CF4
	0x022C5134 LDR X8, [X23 + 0x38]
	0x022C5138 CBNZ X8, 0x22C5148
	0x022C513C MOV X0, X23
	0x022C5140 BL 0x1C5C6E0
	0x022C5144 LDR X8, [X23 + 0x38]
	0x022C5148 LDR X0, [X8]
	0x022C514C LDR X8, [X0]
	0x022C5150 BLR X8
	0x022C5154 ADRP X9, 0x1E57000
	0x022C5158 MOV W23, W0
	0x022C515C ADD W8, W0, 0x3
	0x022C5160 LDP X0, X1, [X22]
	0x022C5164 LDR X9, [X9 + 0xAD8]
	0x022C5168 CMP W23, 0x0
	0x022C516C CSEL W8, W8, W23, LT
	0x022C5170 SBFM W22, W8, 0x2, 0x1F
	0x022C5174 LDR X2, [X9]
	0x022C5178 BL 0x22226A0
	0x022C517C SBFM X8, X21, 0x3E, 0x1F
	0x022C5180 MUL W9, W22, W20
	0x022C5184 MOV X1, X19
	0x022C5188 LDP X20, X19, [X31 + 0x20]
	0x022C518C LDP X22, X21, [X31 + 0x10]
	0x022C5190 ADD X8, X8, W9, 0x2, SXTW
	0x022C5194 ADD X0, X8, X0
	0x022C5198 SXTW X2, W23
	0x022C519C MOV X3, X31
	0x022C51A0 LDP X30, X23, [X31], #0x30
	0x022C51A4 B 0x3BFF954
	0x022C51A8 STR X30, [X31 - 0x40]!
	0x022C51AC STP X24, X23, [X31 + 0x10]
	0x022C51B0 STP X22, X21, [X31 + 0x20]
	0x022C51B4 STP X20, X19, [X31 + 0x30]
	0x022C51B8 LDR X8, [X4 + 0x38]
	0x022C51BC MOV W19, W3
	0x022C51C0 MOV X21, X2
	0x022C51C4 MOV X20, X1
	0x022C51C8 MOV X22, X0
	0x022C51CC CBNZ X8, 0x22C5200
	0x022C51D0 ADRP X0, 0x1E57000
	0x022C51D4 LDR X0, [X0 + 0xAD8]
	0x022C51D8 MOV X23, X4
	0x022C51DC BL 0x1C16CF4
	0x022C51E0 ADRP X0, 0x1E57000
	0x022C51E4 LDR X0, [X0 + 0xAD0]
	0x022C51E8 BL 0x1C16CF4
	0x022C51EC LDR X8, [X23 + 0x38]
	0x022C51F0 CBNZ X8, 0x22C5200
	0x022C51F4 MOV X0, X23
	0x022C51F8 BL 0x1C5C6E0
	0x022C51FC LDR X8, [X23 + 0x38]
	0x022C5200 LDR X0, [X8]
	0x022C5204 LDR X8, [X0]
	0x022C5208 BLR X8
	0x022C520C MOV W23, W0
	0x022C5210 CBZ X20, 0x22C5228
	0x022C5214 LDR W8, [X20 + 0x18]
	0x022C5218 ADD X9, X20, 0x20
	0x022C521C CMP W8, 0x0
	0x022C5220 CSEL X24, X31, X9, EQ
	0x022C5224 B 0x22C522C
	0x022C5228 MOV X24, X31
	0x022C522C ADRP X8, 0x1E57000
	0x022C5230 LDP X0, X1, [X22]
	0x022C5234 LDR X8, [X8 + 0xAD8]
	0x022C5238 LDR X2, [X8]
	0x022C523C BL 0x22226A0
	0x022C5240 CBZ X20, 0x22C528C
	0x022C5244 ADD W8, W23, 0x3
	0x022C5248 CMP W23, 0x0
	0x022C524C LDR W10, [X20 + 0x18]
	0x022C5250 CSEL W8, W8, W23, LT
	0x022C5254 SBFM W8, W8, 0x2, 0x1F
	0x022C5258 SBFM X9, X21, 0x3E, 0x1F
	0x022C525C MUL W8, W8, W19
	0x022C5260 ADD X8, X9, W8, 0x2, SXTW
	0x022C5264 MUL W9, W23, W10
	0x022C5268 MOV X1, X24
	0x022C526C LDP X20, X19, [X31 + 0x30]
	0x022C5270 LDP X22, X21, [X31 + 0x20]
	0x022C5274 LDP X24, X23, [X31 + 0x10]
	0x022C5278 ADD X0, X8, X0
	0x022C527C SXTW X2, W9
	0x022C5280 MOV X3, X31
	0x022C5284 LDR X30, [X31], #0x40
	0x022C5288 B 0x3BFF954
	0x022C528C BL 0x1C16F20
	0x022C5290 STR X30, [X31 - 0x40]!
	0x022C5294 STP X24, X23, [X31 + 0x10]
	0x022C5298 STP X22, X21, [X31 + 0x20]
	0x022C529C STP X20, X19, [X31 + 0x30]
	0x022C52A0 LDR X8, [X5 + 0x38]
	0x022C52A4 MOV X19, X5
	0x022C52A8 MOV X21, X4
	0x022C52AC MOV X22, X3
	0x022C52B0 MOV X20, X2
	0x022C52B4 MOV X23, X1
	0x022C52B8 MOV X24, X0
	0x022C52BC CBNZ X8, 0x22C52C8
	0x022C52C0 MOV X0, X19
	0x022C52C4 BL 0x1C5C6E0
	0x022C52C8 MOV X0, X24
	0x022C52CC MOV X1, X31
	0x022C52D0 BL 0x3BF8260
	0x022C52D4 CBZ X23, 0x22C52FC
	0x022C52D8 CBZ X22, 0x22C531C
	0x022C52DC CMP W21, W20
	0x022C52E0 B.LT 0x22C5350
	0x022C52E4 MOV W0, W20
	0x022C52E8 LDP X20, X19, [X31 + 0x30]
	0x022C52EC LDP X22, X21, [X31 + 0x20]
	0x022C52F0 LDP X24, X23, [X31 + 0x10]
	0x022C52F4 LDR X30, [X31], #0x40
	0x022C52F8 RET
	0x022C52FC ADRP X0, 0x1E39000
	0x022C5300 LDR X0, [X0 + 0xA18]
	0x022C5304 BL 0x1C16D08
	0x022C5308 BL 0x1C16F10
	0x022C530C MOV X20, X0
	0x022C5310 ADRP X0, 0x1E57000
	0x022C5314 LDR X0, [X0 + 0xAE0]
	0x022C5318 B 0x22C5338
	0x022C531C ADRP X0, 0x1E39000
	0x022C5320 LDR X0, [X0 + 0xA18]
	0x022C5324 BL 0x1C16D08
	0x022C5328 BL 0x1C16F10
	0x022C532C MOV X20, X0
	0x022C5330 ADRP X0, 0x1E57000
	0x022C5334 LDR X0, [X0 + 0xAE8]
	0x022C5338 BL 0x1C16D08
	0x022C533C MOV X1, X0
	0x022C5340 MOV X0, X20
	0x022C5344 MOV X2, X31
	0x022C5348 BL 0x33803F4
	0x022C534C B 0x22C5380
	0x022C5350 ADRP X0, 0x1E2E000
	0x022C5354 LDR X0, [X0 + 0x5B0]
	0x022C5358 BL 0x1C16D08
	0x022C535C BL 0x1C16F10
	0x022C5360 MOV X20, X0
	0x022C5364 ADRP X0, 0x1E57000
	0x022C5368 LDR X0, [X0 + 0xAF0]
	0x022C536C BL 0x1C16D08
	0x022C5370 MOV X1, X0
	0x022C5374 MOV X0, X20
	0x022C5378 MOV X2, X31
	0x022C537C BL 0x337DF1C
	0x022C5380 MOV X0, X20
	0x022C5384 MOV X1, X19
	0x022C5388 BL 0x1C16DEC
	0x022C538C STR X30, [X31 - 0x40]!
	0x022C5390 STP X24, X23, [X31 + 0x10]
	0x022C5394 STP X22, X21, [X31 + 0x20]
	0x022C5398 STP X20, X19, [X31 + 0x30]
	0x022C539C LDR X8, [X5 + 0x38]
	0x022C53A0 MOV X19, X5
	0x022C53A4 MOV X21, X4
	0x022C53A8 MOV X22, X3
	0x022C53AC MOV X20, X2
	0x022C53B0 MOV X23, X1
	0x022C53B4 MOV X24, X0
	0x022C53B8 CBNZ X8, 0x22C53C4
	0x022C53BC MOV X0, X19
	0x022C53C0 BL 0x1C5C6E0
	0x022C53C4 MOV X0, X24
	0x022C53C8 MOV X1, X31
	0x022C53CC BL 0x3BF8260
	0x022C53D0 CBZ X23, 0x22C53F8
	0x022C53D4 CBZ X22, 0x22C5418
	0x022C53D8 CMP W21, W20
	0x022C53DC B.LT 0x22C544C
	0x022C53E0 MOV W0, W20
	0x022C53E4 LDP X20, X19, [X31 + 0x30]
	0x022C53E8 LDP X22, X21, [X31 + 0x20]
	0x022C53EC LDP X24, X23, [X31 + 0x10]
	0x022C53F0 LDR X30, [X31], #0x40
	0x022C53F4 RET
	0x022C53F8 ADRP X0, 0x1E39000
	0x022C53FC LDR X0, [X0 + 0xA18]
	0x022C5400 BL 0x1C16D08
	0x022C5404 BL 0x1C16F10
	0x022C5408 MOV X20, X0
	0x022C540C ADRP X0, 0x1E57000
	0x022C5410 LDR X0, [X0 + 0xAE0]
	0x022C5414 B 0x22C5434
	0x022C5418 ADRP X0, 0x1E39000
	0x022C541C LDR X0, [X0 + 0xA18]
	0x022C5420 BL 0x1C16D08
	0x022C5424 BL 0x1C16F10
	0x022C5428 MOV X20, X0
	0x022C542C ADRP X0, 0x1E57000
	0x022C5430 LDR X0, [X0 + 0xAE8]
	0x022C5434 BL 0x1C16D08
	0x022C5438 MOV X1, X0
	0x022C543C MOV X0, X20
	0x022C5440 MOV X2, X31
	0x022C5444 BL 0x33803F4
	0x022C5448 B 0x22C547C
	0x022C544C ADRP X0, 0x1E2E000
	0x022C5450 LDR X0, [X0 + 0x5B0]
	0x022C5454 BL 0x1C16D08
	0x022C5458 BL 0x1C16F10
	0x022C545C MOV X20, X0
	0x022C5460 ADRP X0, 0x1E57000
	0x022C5464 LDR X0, [X0 + 0xAF0]
	0x022C5468 BL 0x1C16D08
	0x022C546C MOV X1, X0
	0x022C5470 MOV X0, X20
	0x022C5474 MOV X2, X31
	0x022C5478 BL 0x337DF1C
	0x022C547C MOV X0, X20
	0x022C5480 MOV X1, X19
	0x022C5484 BL 0x1C16DEC
	0x022C5488 SUB X31, X31, 0x40
	0x022C548C STP X2, X30, [X31 + 0x18]
	0x022C5490 STP X20, X19, [X31 + 0x30]
	0x022C5494 STP X4, X1, [X31 + 0x8]
	0x022C5498 STR X3, [X31]
	0x022C549C LDR X8, [X5 + 0x38]
	0x022C54A0 MOV X19, X5
	0x022C54A4 MOV X20, X0
	0x022C54A8 CBNZ X8, 0x22C54B4
	0x022C54AC MOV X0, X19
	0x022C54B0 BL 0x1C5C6E0
	0x022C54B4 MOV X0, X20
	0x022C54B8 MOV X1, X31
	0x022C54BC BL 0x3BF8260
	0x022C54C0 LDR X8, [X19 + 0x38]
	0x022C54C4 ADD X0, X31, 0x10
	0x022C54C8 LDR X1, [X8 + 0x8]
	0x022C54CC LDR X8, [X1]
	0x022C54D0 BLR X8
	0x022C54D4 TBZ X0, 0x0, 0x22C5548
	0x022C54D8 LDR X8, [X19 + 0x38]
	0x022C54DC ADD X0, X31, 0x0
	0x022C54E0 LDR X1, [X8 + 0x20]
	0x022C54E4 LDR X8, [X1]
	0x022C54E8 BLR X8
	0x022C54EC TBZ X0, 0x0, 0x22C5568
	0x022C54F0 LDR X8, [X19 + 0x38]
	0x022C54F4 ADD X0, X31, 0x0
	0x022C54F8 LDR X1, [X8 + 0x30]
	0x022C54FC LDR X8, [X1]
	0x022C5500 BLR X8
	0x022C5504 LDR X8, [X19 + 0x38]
	0x022C5508 MOV W20, W0
	0x022C550C ADD X0, X31, 0x10
	0x022C5510 LDR X1, [X8 + 0x38]
	0x022C5514 LDR X8, [X1]
	0x022C5518 BLR X8
	0x022C551C CMP W20, W0
	0x022C5520 B.LT 0x22C559C
	0x022C5524 LDR X8, [X19 + 0x38]
	0x022C5528 ADD X0, X31, 0x10
	0x022C552C LDR X1, [X8 + 0x38]
	0x022C5530 LDR X8, [X1]
	0x022C5534 BLR X8
	0x022C5538 LDP X20, X19, [X31 + 0x30]
	0x022C553C LDR X30, [X31 + 0x20]
	0x022C5540 ADD X31, X31, 0x40
	0x022C5544 RET
	0x022C5548 ADRP X0, 0x1E39000
	0x022C554C LDR X0, [X0 + 0xA18]
	0x022C5550 BL 0x1C16D08
	0x022C5554 BL 0x1C16F10
	0x022C5558 MOV X20, X0
	0x022C555C ADRP X0, 0x1E57000
	0x022C5560 LDR X0, [X0 + 0xAE0]
	0x022C5564 B 0x22C5584
	0x022C5568 ADRP X0, 0x1E39000
	0x022C556C LDR X0, [X0 + 0xA18]
	0x022C5570 BL 0x1C16D08
	0x022C5574 BL 0x1C16F10
	0x022C5578 MOV X20, X0
	0x022C557C ADRP X0, 0x1E57000
	0x022C5580 LDR X0, [X0 + 0xAE8]
	0x022C5584 BL 0x1C16D08
	0x022C5588 MOV X1, X0
	0x022C558C MOV X0, X20
	0x022C5590 MOV X2, X31
	0x022C5594 BL 0x33803F4
	0x022C5598 B 0x22C55CC
	0x022C559C ADRP X0, 0x1E2E000
	0x022C55A0 LDR X0, [X0 + 0x5B0]
	0x022C55A4 BL 0x1C16D08
	0x022C55A8 BL 0x1C16F10
	0x022C55AC MOV X20, X0
	0x022C55B0 ADRP X0, 0x1E57000
	0x022C55B4 LDR X0, [X0 + 0xAF0]
	0x022C55B8 BL 0x1C16D08
	0x022C55BC MOV X1, X0
	0x022C55C0 MOV X0, X20
	0x022C55C4 MOV X2, X31
	0x022C55C8 BL 0x337DF1C
	0x022C55CC MOV X0, X20
	0x022C55D0 MOV X1, X19
	0x022C55D4 BL 0x1C16DEC
	0x022C55D8 SUB X31, X31, 0x30
	0x022C55DC STP X30, X21, [X31 + 0x10]
	0x022C55E0 STP X20, X19, [X31 + 0x20]
	0x022C55E4 LDR X8, [X1 + 0x38]
	0x022C55E8 MOV X19, X1
	0x022C55EC MOV X20, X0
	0x022C55F0 CBNZ X8, 0x22C5628
	0x022C55F4 ADRP X0, 0x1E57000
	0x022C55F8 LDR X0, [X0 + 0xAF8]
	0x022C55FC BL 0x1C16CF4
	0x022C5600 ADRP X0, 0x1E57000
	0x022C5604 LDR X0, [X0 + 0x230]
	0x022C5608 BL 0x1C16CF4
	0x022C560C ADRP X0, 0x1E2E000
	0x022C5610 LDR X0, [X0 + 0x6C0]
	0x022C5614 BL 0x1C16CF4
	0x022C5618 LDR X8, [X19 + 0x38]
	0x022C561C CBNZ X8, 0x22C5628
	0x022C5620 MOV X0, X19
	0x022C5624 BL 0x1C5C6E0
	0x022C5628 ADRP X8, 0x1E57000
	0x022C562C LDR X8, [X8 + 0xAF8]
	0x022C5630 LDR X0, [X8]
	0x022C5634 LDR W8, [X0 + 0xE0]
	0x022C5638 CBNZ W8, 0x22C5640
	0x022C563C BL 0x1C16DFC
	0x022C5640 MOV X0, X20
	0x022C5644 MOV X1, X31
	0x022C5648 BL 0x3BF7F20
	0x022C564C ADRP X9, 0x1E57000
	0x022C5650 LDR X9, [X9 + 0x230]
	0x022C5654 MOV X8, X0
	0x022C5658 STP X8, X1, [X31]
	0x022C565C LDR X0, [X9]
	0x022C5660 LDR W8, [X0 + 0xE0]
	0x022C5664 CBNZ W8, 0x22C566C
	0x022C5668 BL 0x1C16DFC
	0x022C566C ADD X0, X31, 0x0
	0x022C5670 MOV X1, X31
	0x022C5674 BL 0x3C5E9E8
	0x022C5678 ADRP X8, 0x1E2E000
	0x022C567C LDR X8, [X8 + 0x6C0]
	0x022C5680 LDR X9, [X19 + 0x38]
	0x022C5684 MOV X20, X0
	0x022C5688 LDR X8, [X8]
	0x022C568C LDR X21, [X9]
	0x022C5690 LDR W10, [X8 + 0xE0]
	0x022C5694 CBNZ W10, 0x22C56A0
	0x022C5698 MOV X0, X8
	0x022C569C BL 0x1C16DFC
	0x022C56A0 MOV X0, X21
	0x022C56A4 MOV X1, X31
	0x022C56A8 BL 0x338C698
	0x022C56AC MOV X1, X0
	0x022C56B0 MOV X0, X20
	0x022C56B4 MOV X2, X31
	0x022C56B8 BL 0x3395F0C
	0x022C56BC TBNZ X0, 0x0, 0x22C56D0
	0x022C56C0 LDP X20, X19, [X31 + 0x20]
	0x022C56C4 LDP X30, X21, [X31 + 0x10]
	0x022C56C8 ADD X31, X31, 0x30
	0x022C56CC RET
	0x022C56D0 LDR X8, [X19 + 0x38]
	0x022C56D4 ADRP X0, 0x1E2E000
	0x022C56D8 LDR X21, [X8]
	0x022C56DC LDR X0, [X0 + 0x6C0]
	0x022C56E0 BL 0x1C16D08
	0x022C56E4 BL 0x19903D0
	0x022C56E8 MOV X0, X21
	0x022C56EC MOV X1, X31
	0x022C56F0 BL 0x338C698
	0x022C56F4 MOV X21, X0
	0x022C56F8 BL 0x19903C0
	0x022C56FC LDR X8, [X21]
	0x022C5700 MOV X0, X21
	0x022C5704 LDR X9, [X8 + 0x2E8]
	0x022C5708 LDR X1, [X8 + 0x2F0]
	0x022C570C BLR X9
	0x022C5710 MOV X21, X0
	0x022C5714 MOV X0, X20
	0x022C5718 BL 0x19903C0
	0x022C571C LDR X8, [X20]
	0x022C5720 MOV X0, X20
	0x022C5724 LDR X9, [X8 + 0x2E8]
	0x022C5728 LDR X1, [X8 + 0x2F0]
	0x022C572C BLR X9
	0x022C5730 MOV X20, X0
	0x022C5734 ADRP X0, 0x1E57000
	0x022C5738 LDR X0, [X0 + 0xB00]
	0x022C573C BL 0x1C16D08
	0x022C5740 MOV X1, X21
	0x022C5744 MOV X2, X20
	0x022C5748 MOV X3, X31
	0x022C574C BL 0x3227BD4
	0x022C5750 MOV X20, X0
	0x022C5754 ADRP X0, 0x1E36000
	0x022C5758 LDR X0, [X0 + 0x578]
	0x022C575C BL 0x1C16D08
	0x022C5760 BL 0x1C16F10
	0x022C5764 MOV X1, X20
	0x022C5768 MOV X2, X31
	0x022C576C MOV X21, X0
	0x022C5770 BL 0x3314A68
	0x022C5774 MOV X0, X21
	0x022C5778 MOV X1, X19
	0x022C577C BL 0x1C16DEC
	0x022C5780 SUB X31, X31, 0x30
	0x022C5784 STP X30, X21, [X31 + 0x10]
	0x022C5788 STP X20, X19, [X31 + 0x20]
	0x022C578C LDR X8, [X1 + 0x38]
	0x022C5790 MOV X19, X1
	0x022C5794 MOV X20, X0
	0x022C5798 CBNZ X8, 0x22C57D0
	0x022C579C ADRP X0, 0x1E57000
	0x022C57A0 LDR X0, [X0 + 0xAF8]
	0x022C57A4 BL 0x1C16CF4
	0x022C57A8 ADRP X0, 0x1E57000
	0x022C57AC LDR X0, [X0 + 0x230]
	0x022C57B0 BL 0x1C16CF4
	0x022C57B4 ADRP X0, 0x1E2E000
	0x022C57B8 LDR X0, [X0 + 0x6C0]
	0x022C57BC BL 0x1C16CF4
	0x022C57C0 LDR X8, [X19 + 0x38]
	0x022C57C4 CBNZ X8, 0x22C57D0
	0x022C57C8 MOV X0, X19
	0x022C57CC BL 0x1C5C6E0
	0x022C57D0 ADRP X8, 0x1E57000
	0x022C57D4 LDR X8, [X8 + 0xAF8]
	0x022C57D8 LDR X0, [X8]
	0x022C57DC LDR W8, [X0 + 0xE0]
	0x022C57E0 CBNZ W8, 0x22C57E8
	0x022C57E4 BL 0x1C16DFC
	0x022C57E8 MOV X0, X20
	0x022C57EC MOV X1, X31
	0x022C57F0 BL 0x3BF7F20
	0x022C57F4 ADRP X9, 0x1E57000
	0x022C57F8 LDR X9, [X9 + 0x230]
	0x022C57FC MOV X8, X0
	0x022C5800 STP X8, X1, [X31]
	0x022C5804 LDR X0, [X9]
	0x022C5808 LDR W8, [X0 + 0xE0]
	0x022C580C CBNZ W8, 0x22C5814
	0x022C5810 BL 0x1C16DFC
	0x022C5814 ADD X0, X31, 0x0
	0x022C5818 MOV X1, X31
	0x022C581C BL 0x3C5E9E8
	0x022C5820 ADRP X8, 0x1E2E000
	0x022C5824 LDR X8, [X8 + 0x6C0]
	0x022C5828 LDR X9, [X19 + 0x38]
	0x022C582C MOV X20, X0
	0x022C5830 LDR X8, [X8]
	0x022C5834 LDR X21, [X9]
	0x022C5838 LDR W10, [X8 + 0xE0]
	0x022C583C CBNZ W10, 0x22C5848
	0x022C5840 MOV X0, X8
	0x022C5844 BL 0x1C16DFC
	0x022C5848 MOV X0, X21
	0x022C584C MOV X1, X31
	0x022C5850 BL 0x338C698
	0x022C5854 MOV X1, X0
	0x022C5858 MOV X0, X20
	0x022C585C MOV X2, X31
	0x022C5860 BL 0x3395F0C
	0x022C5864 TBNZ X0, 0x0, 0x22C5878
	0x022C5868 LDP X20, X19, [X31 + 0x20]
	0x022C586C LDP X30, X21, [X31 + 0x10]
	0x022C5870 ADD X31, X31, 0x30
	0x022C5874 RET
	0x022C5878 LDR X8, [X19 + 0x38]
	0x022C587C ADRP X0, 0x1E2E000
	0x022C5880 LDR X21, [X8]
	0x022C5884 LDR X0, [X0 + 0x6C0]
	0x022C5888 BL 0x1C16D08
	0x022C588C BL 0x19903D0
	0x022C5890 MOV X0, X21
	0x022C5894 MOV X1, X31
	0x022C5898 BL 0x338C698
	0x022C589C MOV X21, X0
	0x022C58A0 BL 0x19903C0
	0x022C58A4 LDR X8, [X21]
	0x022C58A8 MOV X0, X21
	0x022C58AC LDR X9, [X8 + 0x2E8]
	0x022C58B0 LDR X1, [X8 + 0x2F0]
	0x022C58B4 BLR X9
	0x022C58B8 MOV X21, X0
	0x022C58BC MOV X0, X20
	0x022C58C0 BL 0x19903C0
	0x022C58C4 LDR X8, [X20]
	0x022C58C8 MOV X0, X20
	0x022C58CC LDR X9, [X8 + 0x2E8]
	0x022C58D0 LDR X1, [X8 + 0x2F0]
	0x022C58D4 BLR X9
	0x022C58D8 MOV X20, X0
	0x022C58DC ADRP X0, 0x1E57000
	0x022C58E0 LDR X0, [X0 + 0xB00]
	0x022C58E4 BL 0x1C16D08
	0x022C58E8 MOV X1, X21
	0x022C58EC MOV X2, X20
	0x022C58F0 MOV X3, X31
	0x022C58F4 BL 0x3227BD4
	0x022C58F8 MOV X20, X0
	0x022C58FC ADRP X0, 0x1E36000
	0x022C5900 LDR X0, [X0 + 0x578]
	0x022C5904 BL 0x1C16D08
	0x022C5908 BL 0x1C16F10
	0x022C590C MOV X1, X20
	0x022C5910 MOV X2, X31
	0x022C5914 MOV X21, X0
	0x022C5918 BL 0x3314A68
	0x022C591C MOV X0, X21
	0x022C5920 MOV X1, X19
	0x022C5924 BL 0x1C16DEC
	0x022C5928 SUB X31, X31, 0x30
	0x022C592C STP X30, X21, [X31 + 0x10]
	0x022C5930 STP X20, X19, [X31 + 0x20]
	0x022C5934 LDR X8, [X1 + 0x38]
	0x022C5938 MOV X19, X1
	0x022C593C MOV X20, X0
	0x022C5940 CBNZ X8, 0x22C5978
	0x022C5944 ADRP X0, 0x1E57000
	0x022C5948 LDR X0, [X0 + 0xAF8]
	0x022C594C BL 0x1C16CF4
	0x022C5950 ADRP X0, 0x1E57000
	0x022C5954 LDR X0, [X0 + 0x230]
	0x022C5958 BL 0x1C16CF4
	0x022C595C ADRP X0, 0x1E2E000
	0x022C5960 LDR X0, [X0 + 0x6C0]
	0x022C5964 BL 0x1C16CF4
	0x022C5968 LDR X8, [X19 + 0x38]
	0x022C596C CBNZ X8, 0x22C5978
	0x022C5970 MOV X0, X19
	0x022C5974 BL 0x1C5C6E0
	0x022C5978 ADRP X8, 0x1E57000
	0x022C597C LDR X8, [X8 + 0xAF8]
	0x022C5980 LDR X0, [X8]
	0x022C5984 LDR W8, [X0 + 0xE0]
	0x022C5988 CBNZ W8, 0x22C5990
	0x022C598C BL 0x1C16DFC
	0x022C5990 MOV X0, X20
	0x022C5994 MOV X1, X31
	0x022C5998 BL 0x3BF7F20
	0x022C599C ADRP X9, 0x1E57000
	0x022C59A0 LDR X9, [X9 + 0x230]
	0x022C59A4 MOV X8, X0
	0x022C59A8 STP X8, X1, [X31]
	0x022C59AC LDR X0, [X9]
	0x022C59B0 LDR W8, [X0 + 0xE0]
	0x022C59B4 CBNZ W8, 0x22C59BC
	0x022C59B8 BL 0x1C16DFC
	0x022C59BC ADD X0, X31, 0x0
	0x022C59C0 MOV X1, X31
	0x022C59C4 BL 0x3C5E9E8
	0x022C59C8 ADRP X8, 0x1E2E000
	0x022C59CC LDR X8, [X8 + 0x6C0]
	0x022C59D0 LDR X9, [X19 + 0x38]
	0x022C59D4 MOV X20, X0
	0x022C59D8 LDR X8, [X8]
	0x022C59DC LDR X21, [X9]
	0x022C59E0 LDR W10, [X8 + 0xE0]
	0x022C59E4 CBNZ W10, 0x22C59F0
	0x022C59E8 MOV X0, X8
	0x022C59EC BL 0x1C16DFC
	0x022C59F0 MOV X0, X21
	0x022C59F4 MOV X1, X31
	0x022C59F8 BL 0x338C698
	0x022C59FC MOV X1, X0
	0x022C5A00 MOV X0, X20
	0x022C5A04 MOV X2, X31
	0x022C5A08 BL 0x3395F0C
	0x022C5A0C TBNZ X0, 0x0, 0x22C5A20
	0x022C5A10 LDP X20, X19, [X31 + 0x20]
	0x022C5A14 LDP X30, X21, [X31 + 0x10]
	0x022C5A18 ADD X31, X31, 0x30
	0x022C5A1C RET
	0x022C5A20 LDR X8, [X19 + 0x38]
	0x022C5A24 ADRP X0, 0x1E2E000
	0x022C5A28 LDR X21, [X8]
	0x022C5A2C LDR X0, [X0 + 0x6C0]
	0x022C5A30 BL 0x1C16D08
	0x022C5A34 BL 0x19903D0
	0x022C5A38 MOV X0, X21
	0x022C5A3C MOV X1, X31
	0x022C5A40 BL 0x338C698
	0x022C5A44 MOV X21, X0
	0x022C5A48 BL 0x19903C0
	0x022C5A4C LDR X8, [X21]
	0x022C5A50 MOV X0, X21
	0x022C5A54 LDR X9, [X8 + 0x2E8]
	0x022C5A58 LDR X1, [X8 + 0x2F0]
	0x022C5A5C BLR X9
	0x022C5A60 MOV X21, X0
	0x022C5A64 MOV X0, X20
	0x022C5A68 BL 0x19903C0
	0x022C5A6C LDR X8, [X20]
	0x022C5A70 MOV X0, X20
	0x022C5A74 LDR X9, [X8 + 0x2E8]
	0x022C5A78 LDR X1, [X8 + 0x2F0]
	0x022C5A7C BLR X9
	0x022C5A80 MOV X20, X0
	0x022C5A84 ADRP X0, 0x1E57000
	0x022C5A88 LDR X0, [X0 + 0xB00]
	0x022C5A8C BL 0x1C16D08
	0x022C5A90 MOV X1, X21
	0x022C5A94 MOV X2, X20
	0x022C5A98 MOV X3, X31
	0x022C5A9C BL 0x3227BD4
	0x022C5AA0 MOV X20, X0
	0x022C5AA4 ADRP X0, 0x1E36000
	0x022C5AA8 LDR X0, [X0 + 0x578]
	0x022C5AAC BL 0x1C16D08
	0x022C5AB0 BL 0x1C16F10
	0x022C5AB4 MOV X1, X20
	0x022C5AB8 MOV X2, X31
	0x022C5ABC MOV X21, X0
	0x022C5AC0 BL 0x3314A68
	0x022C5AC4 MOV X0, X21
	0x022C5AC8 MOV X1, X19
	0x022C5ACC BL 0x1C16DEC
	0x022C5AD0 SUB X31, X31, 0x30
	0x022C5AD4 STP X30, X21, [X31 + 0x10]
	0x022C5AD8 STP X20, X19, [X31 + 0x20]
	0x022C5ADC LDR X8, [X1 + 0x38]
	0x022C5AE0 MOV X19, X1
	0x022C5AE4 MOV X20, X0
	0x022C5AE8 CBNZ X8, 0x22C5B20
	0x022C5AEC ADRP X0, 0x1E57000
	0x022C5AF0 LDR X0, [X0 + 0xAF8]
	0x022C5AF4 BL 0x1C16CF4
	0x022C5AF8 ADRP X0, 0x1E57000
	0x022C5AFC LDR X0, [X0 + 0x230]
	0x022C5B00 BL 0x1C16CF4
	0x022C5B04 ADRP X0, 0x1E2E000
	0x022C5B08 LDR X0, [X0 + 0x6C0]
	0x022C5B0C BL 0x1C16CF4
	0x022C5B10 LDR X8, [X19 + 0x38]
	0x022C5B14 CBNZ X8, 0x22C5B20
	0x022C5B18 MOV X0, X19
	0x022C5B1C BL 0x1C5C6E0
	0x022C5B20 ADRP X8, 0x1E57000
	0x022C5B24 LDR X8, [X8 + 0xAF8]
	0x022C5B28 LDR X0, [X8]
	0x022C5B2C LDR W8, [X0 + 0xE0]
	0x022C5B30 CBNZ W8, 0x22C5B38
	0x022C5B34 BL 0x1C16DFC
	0x022C5B38 MOV X0, X20
	0x022C5B3C MOV X1, X31
	0x022C5B40 BL 0x3BF7F20
	0x022C5B44 ADRP X9, 0x1E57000
	0x022C5B48 LDR X9, [X9 + 0x230]
	0x022C5B4C MOV X8, X0
	0x022C5B50 STP X8, X1, [X31]
	0x022C5B54 LDR X0, [X9]
	0x022C5B58 LDR W8, [X0 + 0xE0]
	0x022C5B5C CBNZ W8, 0x22C5B64
	0x022C5B60 BL 0x1C16DFC
	0x022C5B64 ADD X0, X31, 0x0
	0x022C5B68 MOV X1, X31
	0x022C5B6C BL 0x3C5E9E8
	0x022C5B70 ADRP X8, 0x1E2E000
	0x022C5B74 LDR X8, [X8 + 0x6C0]
	0x022C5B78 LDR X9, [X19 + 0x38]
	0x022C5B7C MOV X20, X0
	0x022C5B80 LDR X8, [X8]
	0x022C5B84 LDR X21, [X9]
	0x022C5B88 LDR W10, [X8 + 0xE0]
	0x022C5B8C CBNZ W10, 0x22C5B98
	0x022C5B90 MOV X0, X8
	0x022C5B94 BL 0x1C16DFC
	0x022C5B98 MOV X0, X21
	0x022C5B9C MOV X1, X31
	0x022C5BA0 BL 0x338C698
	0x022C5BA4 MOV X1, X0
	0x022C5BA8 MOV X0, X20
	0x022C5BAC MOV X2, X31
	0x022C5BB0 BL 0x3395F0C
	0x022C5BB4 TBNZ X0, 0x0, 0x22C5BC8
	0x022C5BB8 LDP X20, X19, [X31 + 0x20]
	0x022C5BBC LDP X30, X21, [X31 + 0x10]
	0x022C5BC0 ADD X31, X31, 0x30
	0x022C5BC4 RET
	0x022C5BC8 LDR X8, [X19 + 0x38]
	0x022C5BCC ADRP X0, 0x1E2E000
	0x022C5BD0 LDR X21, [X8]
	0x022C5BD4 LDR X0, [X0 + 0x6C0]
	0x022C5BD8 BL 0x1C16D08
	0x022C5BDC BL 0x19903D0
	0x022C5BE0 MOV X0, X21
	0x022C5BE4 MOV X1, X31
	0x022C5BE8 BL 0x338C698
	0x022C5BEC MOV X21, X0
	0x022C5BF0 BL 0x19903C0
	0x022C5BF4 LDR X8, [X21]
	0x022C5BF8 MOV X0, X21
	0x022C5BFC LDR X9, [X8 + 0x2E8]
	0x022C5C00 LDR X1, [X8 + 0x2F0]
	0x022C5C04 BLR X9
	0x022C5C08 MOV X21, X0
	0x022C5C0C MOV X0, X20
	0x022C5C10 BL 0x19903C0
	0x022C5C14 LDR X8, [X20]
	0x022C5C18 MOV X0, X20
	0x022C5C1C LDR X9, [X8 + 0x2E8]
	0x022C5C20 LDR X1, [X8 + 0x2F0]
	0x022C5C24 BLR X9
	0x022C5C28 MOV X20, X0
	0x022C5C2C ADRP X0, 0x1E57000
	0x022C5C30 LDR X0, [X0 + 0xB00]
	0x022C5C34 BL 0x1C16D08
	0x022C5C38 MOV X1, X21
	0x022C5C3C MOV X2, X20
	0x022C5C40 MOV X3, X31
	0x022C5C44 BL 0x3227BD4
	0x022C5C48 MOV X20, X0
	0x022C5C4C ADRP X0, 0x1E36000
	0x022C5C50 LDR X0, [X0 + 0x578]
	0x022C5C54 BL 0x1C16D08
	0x022C5C58 BL 0x1C16F10
	0x022C5C5C MOV X1, X20
	0x022C5C60 MOV X2, X31
	0x022C5C64 MOV X21, X0
	0x022C5C68 BL 0x3314A68
	0x022C5C6C MOV X0, X21
	0x022C5C70 MOV X1, X19
	0x022C5C74 BL 0x1C16DEC
	0x022C5C78 SUB X31, X31, 0x30
	0x022C5C7C STP X30, X21, [X31 + 0x10]
	0x022C5C80 STP X20, X19, [X31 + 0x20]
	0x022C5C84 LDR X8, [X1 + 0x38]
	0x022C5C88 MOV X19, X1
	0x022C5C8C MOV X20, X0
	0x022C5C90 CBNZ X8, 0x22C5CC8
	0x022C5C94 ADRP X0, 0x1E57000
	0x022C5C98 LDR X0, [X0 + 0xAF8]
	0x022C5C9C BL 0x1C16CF4
	0x022C5CA0 ADRP X0, 0x1E57000
	0x022C5CA4 LDR X0, [X0 + 0x230]
	0x022C5CA8 BL 0x1C16CF4
	0x022C5CAC ADRP X0, 0x1E2E000
	0x022C5CB0 LDR X0, [X0 + 0x6C0]
	0x022C5CB4 BL 0x1C16CF4
	0x022C5CB8 LDR X8, [X19 + 0x38]
	0x022C5CBC CBNZ X8, 0x22C5CC8
	0x022C5CC0 MOV X0, X19
	0x022C5CC4 BL 0x1C5C6E0
	0x022C5CC8 ADRP X8, 0x1E57000
	0x022C5CCC LDR X8, [X8 + 0xAF8]
	0x022C5CD0 LDR X0, [X8]
	0x022C5CD4 LDR W8, [X0 + 0xE0]
	0x022C5CD8 CBNZ W8, 0x22C5CE0
	0x022C5CDC BL 0x1C16DFC
	0x022C5CE0 MOV X0, X20
	0x022C5CE4 MOV X1, X31
	0x022C5CE8 BL 0x3BF7F20
	0x022C5CEC ADRP X9, 0x1E57000
	0x022C5CF0 LDR X9, [X9 + 0x230]
	0x022C5CF4 MOV X8, X0
	0x022C5CF8 STP X8, X1, [X31]
	0x022C5CFC LDR X0, [X9]
	0x022C5D00 LDR W8, [X0 + 0xE0]
	0x022C5D04 CBNZ W8, 0x22C5D0C
	0x022C5D08 BL 0x1C16DFC
	0x022C5D0C ADD X0, X31, 0x0
	0x022C5D10 MOV X1, X31
	0x022C5D14 BL 0x3C5E9E8
	0x022C5D18 ADRP X8, 0x1E2E000
	0x022C5D1C LDR X8, [X8 + 0x6C0]
	0x022C5D20 LDR X9, [X19 + 0x38]
	0x022C5D24 MOV X20, X0
	0x022C5D28 LDR X8, [X8]
	0x022C5D2C LDR X21, [X9]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-32], X1
	017 Move [X29-24], X8
	018 Move X8, [X8+40]
	019 Move X28, X3
	020 Move X24, X3
	021 Move X21, X2
	022 Move [X29-8], X8
	023 Move [X29-16], X2
	024 Add X28, X28, 56
	025 Move X8, [X28]
	026 Move X23, X0
	027 Compare X8, 0
	028 JumpIfNotEqual {131}
	029 Move X0, 0x1E59000
	030 Move X0, [X0+1680]
	031 Call 0x1C17CF4
	032 Move X0, 0x1E30000
	033 Move X0, [X0+2448]
	034 Call 0x1C17CF4
	035 Move X0, 0x1E59000
	036 Move X0, [X0+1688]
	037 Call 0x1C17CF4
	038 Move X0, 0x1E59000
	039 Move X0, [X0+2576]
	040 Call 0x1C17CF4
	041 Move X0, 0x1E59000
	042 Move X0, [X0+2736]
	043 Call 0x1C17CF4
	044 Move X0, 0x1E59000
	045 Move X0, [X0+2744]
	046 Call 0x1C17CF4
	047 Move X0, 0x1E59000
	048 Move X0, [X0+1696]
	049 Call 0x1C17CF4
	050 Move X0, 0x1E59000
	051 Move X0, [X0+584]
	052 Call 0x1C17CF4
	053 Move X0, 0x1E30000
	054 Move X0, [X0+2904]
	055 Call 0x1C17CF4
	056 Move X0, 0x1E57000
	057 Move X0, [X0+3432]
	058 Call 0x1C17CF4
	059 Move X0, 0x1E31000
	060 Move X0, [X0+2520]
	061 Call 0x1C17CF4
	062 Move X0, 0x1E57000
	063 Move X0, [X0+3440]
	064 Call 0x1C17CF4
	065 Move X0, 0x1E32000
	066 Move X0, [X0+368]
	067 Call 0x1C17CF4
	068 Move X0, 0x1E30000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0x1E58000
	072 Move X0, [X0+2680]
	073 Call 0x1C17CF4
	074 Move X0, 0x1E33000
	075 Move X0, [X0+2424]
	076 Call 0x1C17CF4
	077 Move X0, 0x1E57000
	078 Move X0, [X0+3448]
	079 Call 0x1C17CF4
	080 Move X0, 0x1E34000
	081 Move X0, [X0+1576]
	082 Call 0x1C17CF4
	083 Move X0, 0x1E57000
	084 Move X0, [X0+3456]
	085 Call 0x1C17CF4
	086 Move X0, 0x1E30000
	087 Move X0, [X0+1880]
	088 Call 0x1C17CF4
	089 Move X0, 0x1E57000
	090 Move X0, [X0+3464]
	091 Call 0x1C17CF4
	092 Move X0, 0x1E32000
	093 Move X0, [X0+2656]
	094 Call 0x1C17CF4
	095 Move X0, 0x1E59000
	096 Move X0, [X0+1704]
	097 Call 0x1C17CF4
	098 Move X0, 0x1E30000
	099 Move X0, [X0+3824]
	100 Call 0x1C17CF4
	101 Move X0, 0x1E57000
	102 Move X0, [X0+3472]
	103 Call 0x1C17CF4
	104 Move X0, 0x1E59000
	105 Move X0, [X0+1712]
	106 Call 0x1C17CF4
	107 Move X0, 0x1E58000
	108 Move X0, [X0+2688]
	109 Call 0x1C17CF4
	110 Move X0, 0x1E30000
	111 Move X0, [X0+2704]
	112 Call 0x1C17CF4
	113 Move X0, 0x1E58000
	114 Move X0, [X0+2912]
	115 Call 0x1C17CF4
	116 Move X0, 0x1E32000
	117 Move X0, [X0+632]
	118 Call 0x1C17CF4
	119 Move X0, 0x1E30000
	120 Move X0, [X0+1728]
	121 Call 0x1C17CF4
	122 Move X0, 0x1E59000
	123 Move X0, [X0+2752]
	124 Call 0x1C17CF4
	125 Move X8, [X28]
	126 Compare X8, 0
	127 JumpIfNotEqual {131}
	128 Move X0, X24
	129 Call 0x1C5D6E0
	130 Move X8, [X24+56]
	131 Move X25, [X8]
	132 Move X9, [X8+8]
	133 Move W22, [X9+252]
	134 Add X9, X31, 0
	135 Add X10, X22, 15
	136 And X10, X10, 0x1FFFFFFFF
	137 Subtract X20, X9, X10
	138 Add X31, X20, 0
	139 Move X19, 0x1E30000
	140 Move X19, [X19+1728]
	141 Move X0, [X19]
	142 Move W9, [X0+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X25
	147 Move X1, X31
	148 Call Type.GetTypeFromHandle, X0
	149 Move X27, 0x1E59000
	150 Move X27, [X27+1696]
	151 Move X25, X0
	152 Move X8, [X27]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X0, X25
	159 Move X1, X31
	160 Call AndroidReflection.IsPrimitive, X0
	161 Move X8, [X19]
	162 Move X9, [X28]
	163 Move W26, W0
	164 Move W10, [X8+224]
	165 Move X25, [X9]
	166 Compare W10, 0
	167 JumpIfNotEqual {170}
	168 Move X0, X8
	169 Call 0x1C17DFC
	170 Move X0, X25
	171 Move X1, X31
	172 Call Type.GetTypeFromHandle, X0
	173 Move X25, X0
	174 Move TEMP, X26
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {222}
	178 Move X8, 0x1E56000
	179 Move X8, [X8+3456]
	180 Move X1, X31
	181 Move X0, [X8]
	182 Call Type.GetTypeFromHandle, X0
	183 Move X1, X0
	184 Move X0, X25
	185 Move X2, X31
	186 Call Type.op_Equality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {263}
	191 Move X0, [X23+24]
	192 Move X1, X31
	193 Call GlobalJavaObjectRef.op_Implicit, X0
	194 Move X19, [X28]
	195 Move X23, X0
	196 Move X0, X20
	197 Move X2, X22
	198 Move X8, [X19+8]
	199 Move W8, [X8+40]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X8, X29, 16
	202 NotImplemented "Instruction CSEL not yet implemented."
	203 Call 0x3EB2AC0
	204 Move X0, [X19+8]
	205 Move X1, X20
	206 Call 0x1C17E04
	207 Compare X0, 0
	208 JumpIfEqual {1028}
	209 Move X8, 0x1E2F000
	210 Move X8, [X8+1880]
	211 Move X9, [X0]
	212 Move X1, [X8]
	213 Move X8, [X9+64]
	214 Move X9, [X1+64]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Call 0x1C17E08
	217 Move W2, [X0]
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 Move X0, X23
	220 Move X3, X31
	221 Call AndroidJNISafe.SetStaticIntField, X0, X1, X2
	222 Move X8, 0x1E57000
	223 Move X8, [X8+2912]
	224 Move X1, X31
	225 Move X0, [X8]
	226 Call Type.GetTypeFromHandle, X0
	227 Move X1, X0
	228 Move X0, X25
	229 Move X2, X31
	230 Call Type.op_Equality, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {319}
	235 Move X0, [X23+24]
	236 Move X1, X31
	237 Call GlobalJavaObjectRef.op_Implicit, X0
	238 Move X19, [X28]
	239 Move X23, X0
	240 Move X0, X20
	241 Move X2, X22
	242 Move X8, [X19+8]
	243 Move W8, [X8+40]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X8, X29, 16
	246 NotImplemented "Instruction CSEL not yet implemented."
	247 Call 0x3EB2AC0
	248 Move X0, [X19+8]
	249 Move X1, X20
	250 Call 0x1C17E04
	251 Move X2, X0
	252 Compare X0, 0
	253 JumpIfEqual {259}
	254 Move X8, 0x1E31000
	255 Move X8, [X8+632]
	256 Move X1, [X8]
	257 Move X8, [X2]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 Move X0, X23
	261 Move X3, X31
	262 Call AndroidJNISafe.SetStaticStringField, X0, X1, X2
	263 Move X0, [X19]
	264 Move X8, [X28]
	265 Move W9, [X0+224]
	266 Move X24, [X8]
	267 Compare W9, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X0, X24
	271 Move X1, X31
	272 Call Type.GetTypeFromHandle, X0
	273 Move X8, 0x1E58000
	274 Move X8, [X8+584]
	275 Move X24, X0
	276 Move X1, X31
	277 Move X8, [X8]
	278 Move X0, X8
	279 Call Type.GetTypeFromHandle, X0
	280 Move X1, X0
	281 Move X0, X24
	282 Move X2, X31
	283 Call Type.op_Equality, X0, X1
	284 Move TEMP, X0
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfNotEqual {391}
	288 Move X0, [X23+24]
	289 Move X1, X31
	290 Call GlobalJavaObjectRef.op_Implicit, X0
	291 Move X19, [X28]
	292 Move X23, X0
	293 Move X0, X20
	294 Move X2, X22
	295 Move X8, [X19+8]
	296 Move W8, [X8+40]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Subtract X8, X29, 16
	299 NotImplemented "Instruction CSEL not yet implemented."
	300 Call 0x3EB2AC0
	301 Move X0, [X19+8]
	302 Move X1, X20
	303 Call 0x1C17E04
	304 Compare X0, 0
	305 JumpIfEqual {1028}
	306 Move X8, 0x1E2F000
	307 Move X8, [X8+2904]
	308 Move X9, [X0]
	309 Move X1, [X8]
	310 Move X8, [X9+64]
	311 Move X9, [X1+64]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Call 0x1C17E08
	314 Move W2, [X0]
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 Move X0, X23
	317 Move X3, X31
	318 Call AndroidJNISafe.SetStaticBooleanField, X0, X1, X2
	319 Move X0, [X19]
	320 Move X8, [X28]
	321 Move W9, [X0+224]
	322 Move X25, [X8]
	323 Compare W9, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X0, X25
	327 Move X1, X31
	328 Call Type.GetTypeFromHandle, X0
	329 Move X8, 0x1E58000
	330 Move X8, [X8+1680]
	331 Move X25, X0
	332 Move X1, X31
	333 Move X8, [X8]
	334 Move X0, X8
	335 Call Type.GetTypeFromHandle, X0
	336 Move X1, X0
	337 Move X0, X25
	338 Move X2, X31
	339 Call Type.op_Equality, X0, X1
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {448}
	344 Move X0, [X23+24]
	345 Move X1, X31
	346 Call GlobalJavaObjectRef.op_Implicit, X0
	347 Move X24, [X28]
	348 Subtract X19, X29, 16
	349 Move X23, X0
	350 Move X0, X20
	351 Move X8, [X24+8]
	352 Move X2, X22
	353 Move W8, [X8+40]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 NotImplemented "Instruction CSEL not yet implemented."
	356 Call 0x3EB2AC0
	357 Move X0, [X24+8]
	358 Move X1, X20
	359 Call 0x1C17ED4
	360 Move X2, X31
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {523}
	365 Move X21, [X28]
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Move X0, X20
	368 Move X2, X22
	369 Move X8, [X21+8]
	370 Move W8, [X8+40]
	371 NotImplemented "Instruction CMP not yet implemented."
	372 NotImplemented "Instruction CSEL not yet implemented."
	373 Call 0x3EB2AC0
	374 Move X0, [X21+8]
	375 Move X1, X20
	376 Call 0x1C17E04
	377 Compare X0, 0
	378 JumpIfEqual {1028}
	379 Move X9, 0x1E2F000
	380 Move X9, [X9+2448]
	381 Move X8, [X0]
	382 Move X1, [X9]
	383 Move W10, [X8+304]
	384 Move W9, [X1+304]
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X8, [X8+200]
	387 Add X8, X8, X9
	388 NotImplemented "Instruction LDUR not yet implemented."
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X0, [X0+24]
	391 Move X0, [X19]
	392 Move X8, [X28]
	393 Move W9, [X0+224]
	394 Move X24, [X8]
	395 Compare W9, 0
	396 JumpIfNotEqual {398}
	397 Call 0x1C17DFC
	398 Move X0, X24
	399 Move X1, X31
	400 Call Type.GetTypeFromHandle, X0
	401 Move X8, 0x1E56000
	402 Move X8, [X8+3432]
	403 Move X24, X0
	404 Move X1, X31
	405 Move X8, [X8]
	406 Move X0, X8
	407 Call Type.GetTypeFromHandle, X0
	408 Move X1, X0
	409 Move X0, X24
	410 Move X2, X31
	411 Call Type.op_Equality, X0, X1
	412 Move TEMP, X0
	413 And TEMP, TEMP, 1
	414 Compare TEMP, 1
	415 JumpIfNotEqual {527}
	416 Move X8, 0x1E2F000
	417 Move X8, [X8+2600]
	418 Move X0, [X8]
	419 Move W8, [X0+224]
	420 Compare W8, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move X8, 0x1E58000
	424 Move X8, [X8+2752]
	425 Move X1, X31
	426 Move X0, [X8]
	427 Call Debug.LogWarning, X0
	428 Move X0, [X23+24]
	429 Move X1, X31
	430 Call GlobalJavaObjectRef.op_Implicit, X0
	431 Move X19, [X28]
	432 Move X23, X0
	433 Move X0, X20
	434 Move X2, X22
	435 Move X8, [X19+8]
	436 Move W8, [X8+40]
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Subtract X8, X29, 16
	439 NotImplemented "Instruction CSEL not yet implemented."
	440 Call 0x3EB2AC0
	441 Move X0, [X19+8]
	442 Move X1, X20
	443 Call 0x1C17E04
	444 Compare X0, 0
	445 JumpIfEqual {1028}
	446 Move X8, 0x1E30000
	447 Move X8, [X8+2520]
	448 Move X0, [X19]
	449 Move X8, [X28]
	450 Move W9, [X0+224]
	451 Move X25, [X8]
	452 Compare W9, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move X0, X25
	456 Move X1, X31
	457 Call Type.GetTypeFromHandle, X0
	458 Move X8, 0x1E58000
	459 Move X8, [X8+1688]
	460 Move X25, X0
	461 Move X1, X31
	462 Move X8, [X8]
	463 Move X0, X8
	464 Call Type.GetTypeFromHandle, X0
	465 Move X1, X0
	466 Move X0, X25
	467 Move X2, X31
	468 Call Type.op_Equality, X0, X1
	469 Move TEMP, X0
	470 And TEMP, TEMP, 1
	471 Compare TEMP, 1
	472 JumpIfNotEqual {601}
	473 Move X0, [X23+24]
	474 Move X1, X31
	475 Call GlobalJavaObjectRef.op_Implicit, X0
	476 Move X24, [X28]
	477 Subtract X19, X29, 16
	478 Move X23, X0
	479 Move X0, X20
	480 Move X8, [X24+8]
	481 Move X2, X22
	482 Move W8, [X8+40]
	483 NotImplemented "Instruction CMP not yet implemented."
	484 NotImplemented "Instruction CSEL not yet implemented."
	485 Call 0x3EB2AC0
	486 Move X0, [X24+8]
	487 Move X1, X20
	488 Call 0x1C17ED4
	489 Move X2, X31
	490 Move TEMP, X0
	491 And TEMP, TEMP, 1
	492 Compare TEMP, 1
	493 JumpIfNotEqual {523}
	494 Move X21, [X28]
	495 NotImplemented "Instruction LDUR not yet implemented."
	496 Move X0, X20
	497 Move X2, X22
	498 Move X8, [X21+8]
	499 Move W8, [X8+40]
	500 NotImplemented "Instruction CMP not yet implemented."
	501 NotImplemented "Instruction CSEL not yet implemented."
	502 Call 0x3EB2AC0
	503 Move X0, [X21+8]
	504 Move X1, X20
	505 Call 0x1C17E04
	506 Compare X0, 0
	507 JumpIfEqual {1028}
	508 Move X9, 0x1E58000
	509 Move X9, [X9+2576]
	510 Move X8, [X0]
	511 Move X1, [X9]
	512 Move W10, [X8+304]
	513 Move W9, [X1+304]
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move X8, [X8+200]
	516 Add X8, X8, X9
	517 NotImplemented "Instruction LDUR not yet implemented."
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X0, [X0+16]
	520 Move X1, X31
	521 Call GlobalJavaObjectRef.op_Implicit, X0
	522 Move X2, X0
	523 NotImplemented "Instruction LDUR not yet implemented."
	524 Move X0, X23
	525 Move X3, X31
	526 Call AndroidJNISafe.SetStaticObjectField, X0, X1, X2
	527 Move X0, [X19]
	528 Move X8, [X28]
	529 Move W9, [X0+224]
	530 Move X24, [X8]
	531 Compare W9, 0
	532 JumpIfNotEqual {534}
	533 Call 0x1C17DFC
	534 Move X0, X24
	535 Move X1, X31
	536 Call Type.GetTypeFromHandle, X0
	537 Move X8, 0x1E56000
	538 Move X8, [X8+3472]
	539 Move X24, X0
	540 Move X1, X31
	541 Move X8, [X8]
	542 Move X0, X8
	543 Call Type.GetTypeFromHandle, X0
	544 Move X1, X0
	545 Move X0, X24
	546 Move X2, X31
	547 Call Type.op_Equality, X0, X1
	548 Move TEMP, X0
	549 And TEMP, TEMP, 1
	550 Compare TEMP, 1
	551 JumpIfNotEqual {681}
	552 Move X0, [X23+24]
	553 Move X1, X31
	554 Call GlobalJavaObjectRef.op_Implicit, X0
	555 Move X19, [X28]
	556 Move X23, X0
	557 Move X0, X20
	558 Move X2, X22
	559 Move X8, [X19+8]
	560 Move W8, [X8+40]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Subtract X8, X29, 16
	563 NotImplemented "Instruction CSEL not yet implemented."
	564 Call 0x3EB2AC0
	565 Move X0, [X19+8]
	566 Move X1, X20
	567 Call 0x1C17E04
	568 Compare X0, 0
	569 JumpIfEqual {1028}
	570 Move X8, 0x1E58000
	571 Move X8, [X8+1712]
	572 Move X9, [X0]
	573 Move X1, [X8]
	574 Move X8, [X9+64]
	575 Move X9, [X1+64]
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Call 0x1C17E08
	578 Move W2, [X0]
	579 NotImplemented "Instruction LDUR not yet implemented."
	580 Move X0, X23
	581 Move X3, X31
	582 Call AndroidJNISafe.SetStaticSByteField, X0, X1, X2
	583 NotImplemented "Instruction LDUR not yet implemented."
	584 Move X8, [X8+40]
	585 NotImplemented "Instruction LDUR not yet implemented."
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Add X31, X29, 0
	588 Move X20, [X31+80]
	589 Move X19, [X31+88]
	590 Move X22, [X31+64]
	591 Move X21, [X31+72]
	592 Move X24, [X31+48]
	593 Move X23, [X31+56]
	594 Move X26, [X31+32]
	595 Move X25, [X31+40]
	596 Move X28, [X31+16]
	597 Move X27, [X31+24]
	598 Move X29, [X31+96]
	599 Move X30, [X31+104]
	600 Return 
	601 Move X8, 0x1E58000
	602 Move X0, [X19]
	603 Move X8, [X8+2736]
	604 Move W9, [X0+224]
	605 Move X25, [X8]
	606 Compare W9, 0
	607 JumpIfNotEqual {609}
	608 Call 0x1C17DFC
	609 Move X0, X25
	610 Move X1, X31
	611 Call Type.GetTypeFromHandle, X0
	612 Move X8, [X28]
	613 Move X25, X0
	614 Move X1, X31
	615 Move X8, [X8]
	616 Move X0, X8
	617 Call Type.GetTypeFromHandle, X0
	618 Move X8, [X27]
	619 Move X26, X0
	620 Move W9, [X8+224]
	621 Compare W9, 0
	622 JumpIfNotEqual {625}
	623 Move X0, X8
	624 Call 0x1C17DFC
	625 Move X0, X25
	626 Move X1, X26
	627 Move X2, X31
	628 Call AndroidReflection.IsAssignableFrom, X0, X1
	629 Move TEMP, X0
	630 And TEMP, TEMP, 1
	631 Compare TEMP, 1
	632 JumpIfNotEqual {737}
	633 Move X0, [X23+24]
	634 Move X1, X31
	635 Call GlobalJavaObjectRef.op_Implicit, X0
	636 Move X24, [X28]
	637 Subtract X19, X29, 16
	638 Move X23, X0
	639 Move X0, X20
	640 Move X8, [X24+8]
	641 Move X2, X22
	642 Move W8, [X8+40]
	643 NotImplemented "Instruction CMP not yet implemented."
	644 NotImplemented "Instruction CSEL not yet implemented."
	645 Call 0x3EB2AC0
	646 Move X0, [X24+8]
	647 Move X1, X20
	648 Call 0x1C17ED4
	649 Move X2, X31
	650 Move TEMP, X0
	651 And TEMP, TEMP, 1
	652 Compare TEMP, 1
	653 JumpIfNotEqual {523}
	654 Move X21, [X28]
	655 NotImplemented "Instruction LDUR not yet implemented."
	656 Move X0, X20
	657 Move X2, X22
	658 Move X8, [X21+8]
	659 Move W8, [X8+40]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 NotImplemented "Instruction CSEL not yet implemented."
	662 Call 0x3EB2AC0
	663 Move X0, [X21+8]
	664 Move X1, X20
	665 Call 0x1C17E04
	666 Compare X0, 0
	667 JumpIfEqual {1028}
	668 Move X9, 0x1E58000
	669 Move X9, [X9+2744]
	670 Move X8, [X0]
	671 Move X1, [X9]
	672 Move W10, [X8+304]
	673 Move W9, [X1+304]
	674 NotImplemented "Instruction CMP not yet implemented."
	675 Move X8, [X8+200]
	676 Add X8, X8, X9
	677 NotImplemented "Instruction LDUR not yet implemented."
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move X1, X31
	680 Call AndroidJavaProxy.GetRawProxy, X0
	681 Move X0, [X19]
	682 Move X8, [X28]
	683 Move W9, [X0+224]
	684 Move X24, [X8]
	685 Compare W9, 0
	686 JumpIfNotEqual {688}
	687 Call 0x1C17DFC
	688 Move X0, X24
	689 Move X1, X31
	690 Call Type.GetTypeFromHandle, X0
	691 Move X8, 0x1E56000
	692 Move X8, [X8+3448]
	693 Move X24, X0
	694 Move X1, X31
	695 Move X8, [X8]
	696 Move X0, X8
	697 Call Type.GetTypeFromHandle, X0
	698 Move X1, X0
	699 Move X0, X24
	700 Move X2, X31
	701 Call Type.op_Equality, X0, X1
	702 Move TEMP, X0
	703 And TEMP, TEMP, 1
	704 Compare TEMP, 1
	705 JumpIfNotEqual {803}
	706 Move X0, [X23+24]
	707 Move X1, X31
	708 Call GlobalJavaObjectRef.op_Implicit, X0
	709 Move X19, [X28]
	710 Move X23, X0
	711 Move X0, X20
	712 Move X2, X22
	713 Move X8, [X19+8]
	714 Move W8, [X8+40]
	715 NotImplemented "Instruction CMP not yet implemented."
	716 Subtract X8, X29, 16
	717 NotImplemented "Instruction CSEL not yet implemented."
	718 Call 0x3EB2AC0
	719 Move X0, [X19+8]
	720 Move X1, X20
	721 Call 0x1C17E04
	722 Compare X0, 0
	723 JumpIfEqual {1028}
	724 Move X8, 0x1E33000
	725 Move X8, [X8+1576]
	726 Move X9, [X0]
	727 Move X1, [X8]
	728 Move X8, [X9+64]
	729 Move X9, [X1+64]
	730 NotImplemented "Instruction CMP not yet implemented."
	731 Call 0x1C17E08
	732 NotImplemented "Instruction LDRH not yet implemented."
	733 NotImplemented "Instruction LDUR not yet implemented."
	734 Move X0, X23
	735 Move X3, X31
	736 Call AndroidJNISafe.SetStaticShortField, X0, X1, X2
	737 Move X8, 0x1E58000
	738 Move X0, [X19]
	739 Move X8, [X8+1704]
	740 Move W9, [X0+224]
	741 Move X25, [X8]
	742 Compare W9, 0
	743 JumpIfNotEqual {745}
	744 Call 0x1C17DFC
	745 Move X0, X25
	746 Move X1, X31
	747 Call Type.GetTypeFromHandle, X0
	748 Move X8, [X28]
	749 Move X25, X0
	750 Move X1, X31
	751 Move X8, [X8]
	752 Move X0, X8
	753 Call Type.GetTypeFromHandle, X0
	754 Move X8, [X27]
	755 Move X26, X0
	756 Move W9, [X8+224]
	757 Compare W9, 0
	758 JumpIfNotEqual {761}
	759 Move X0, X8
	760 Call 0x1C17DFC
	761 Move X0, X25
	762 Move X1, X26
	763 Move X2, X31
	764 Call AndroidReflection.IsAssignableFrom, X0, X1
	765 Move X19, [X28]
	766 Move TEMP, X0
	767 And TEMP, TEMP, 1
	768 Compare TEMP, 1
	769 JumpIfNotEqual {1031}
	770 Move X8, [X19+8]
	771 Move X0, X20
	772 Move X2, X22
	773 Move W8, [X8+40]
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Subtract X8, X29, 16
	776 NotImplemented "Instruction CSEL not yet implemented."
	777 Call 0x3EB2AC0
	778 Move X0, [X19+8]
	779 Move X1, X20
	780 Call 0x1C17E04
	781 Compare X0, 0
	782 JumpIfEqual {794}
	783 Move X9, 0x1E2F000
	784 Move X9, [X9+3824]
	785 Move X8, [X0]
	786 Move X1, [X9]
	787 Move W10, [X8+304]
	788 Move W9, [X1+304]
	789 NotImplemented "Instruction CMP not yet implemented."
	790 Move X8, [X8+200]
	791 Add X8, X8, X9
	792 NotImplemented "Instruction LDUR not yet implemented."
	793 NotImplemented "Instruction CMP not yet implemented."
	794 Move X1, X31
	795 Call AndroidJNIHelper.ConvertToJNIArray, X0
	796 Move X8, [X23+24]
	797 Move X20, X0
	798 Move X1, X31
	799 Move X0, X8
	800 Call GlobalJavaObjectRef.op_Implicit, X0
	801 NotImplemented "Instruction LDUR not yet implemented."
	802 Move X2, X20
	803 Move X0, [X19]
	804 Move X8, [X28]
	805 Move W9, [X0+224]
	806 Move X24, [X8]
	807 Compare W9, 0
	808 JumpIfNotEqual {810}
	809 Call 0x1C17DFC
	810 Move X0, X24
	811 Move X1, X31
	812 Call Type.GetTypeFromHandle, X0
	813 Move X8, 0x1E56000
	814 Move X8, [X8+3464]
	815 Move X24, X0
	816 Move X1, X31
	817 Move X8, [X8]
	818 Move X0, X8
	819 Call Type.GetTypeFromHandle, X0
	820 Move X1, X0
	821 Move X0, X24
	822 Move X2, X31
	823 Call Type.op_Equality, X0, X1
	824 Move TEMP, X0
	825 And TEMP, TEMP, 1
	826 Compare TEMP, 1
	827 JumpIfNotEqual {859}
	828 Move X0, [X23+24]
	829 Move X1, X31
	830 Call GlobalJavaObjectRef.op_Implicit, X0
	831 Move X19, [X28]
	832 Move X23, X0
	833 Move X0, X20
	834 Move X2, X22
	835 Move X8, [X19+8]
	836 Move W8, [X8+40]
	837 NotImplemented "Instruction CMP not yet implemented."
	838 Subtract X8, X29, 16
	839 NotImplemented "Instruction CSEL not yet implemented."
	840 Call 0x3EB2AC0
	841 Move X0, [X19+8]
	842 Move X1, X20
	843 Call 0x1C17E04
	844 Compare X0, 0
	845 JumpIfEqual {1028}
	846 Move X8, 0x1E31000
	847 Move X8, [X8+2656]
	848 Move X9, [X0]
	849 Move X1, [X8]
	850 Move X8, [X9+64]
	851 Move X9, [X1+64]
	852 NotImplemented "Instruction CMP not yet implemented."
	853 Call 0x1C17E08
	854 Move X2, [X0]
	855 NotImplemented "Instruction LDUR not yet implemented."
	856 Move X0, X23
	857 Move X3, X31
	858 Call AndroidJNISafe.SetStaticLongField, X0, X1, X2
	859 Move X0, [X19]
	860 Move X8, [X28]
	861 Move W9, [X0+224]
	862 Move X24, [X8]
	863 Compare W9, 0
	864 JumpIfNotEqual {866}
	865 Call 0x1C17DFC
	866 Move X0, X24
	867 Move X1, X31
	868 Call Type.GetTypeFromHandle, X0
	869 Move X8, 0x1E57000
	870 Move X8, [X8+2688]
	871 Move X24, X0
	872 Move X1, X31
	873 Move X8, [X8]
	874 Move X0, X8
	875 Call Type.GetTypeFromHandle, X0
	876 Move X1, X0
	877 Move X0, X24
	878 Move X2, X31
	879 Call Type.op_Equality, X0, X1
	880 Move TEMP, X0
	881 And TEMP, TEMP, 1
	882 Compare TEMP, 1
	883 JumpIfNotEqual {915}
	884 Move X0, [X23+24]
	885 Move X1, X31
	886 Call GlobalJavaObjectRef.op_Implicit, X0
	887 Move X19, [X28]
	888 Move X23, X0
	889 Move X0, X20
	890 Move X2, X22
	891 Move X8, [X19+8]
	892 Move W8, [X8+40]
	893 NotImplemented "Instruction CMP not yet implemented."
	894 Subtract X8, X29, 16
	895 NotImplemented "Instruction CSEL not yet implemented."
	896 Call 0x3EB2AC0
	897 Move X0, [X19+8]
	898 Move X1, X20
	899 Call 0x1C17E04
	900 Compare X0, 0
	901 JumpIfEqual {1028}
	902 Move X8, 0x1E2F000
	903 Move X8, [X8+2704]
	904 Move X9, [X0]
	905 Move X1, [X8]
	906 Move X8, [X9+64]
	907 Move X9, [X1+64]
	908 NotImplemented "Instruction CMP not yet implemented."
	909 Call 0x1C17E08
	910 Move V0, [X0]
	911 NotImplemented "Instruction LDUR not yet implemented."
	912 Move X0, X23
	913 Move X2, X31
	914 Call AndroidJNISafe.SetStaticFloatField, X0, X1, V0
	915 Move X0, [X19]
	916 Move X8, [X28]
	917 Move W9, [X0+224]
	918 Move X24, [X8]
	919 Compare W9, 0
	920 JumpIfNotEqual {922}
	921 Call 0x1C17DFC
	922 Move X0, X24
	923 Move X1, X31
	924 Call Type.GetTypeFromHandle, X0
	925 Move X8, 0x1E57000
	926 Move X8, [X8+2680]
	927 Move X24, X0
	928 Move X1, X31
	929 Move X8, [X8]
	930 Move X0, X8
	931 Call Type.GetTypeFromHandle, X0
	932 Move X1, X0
	933 Move X0, X24
	934 Move X2, X31
	935 Call Type.op_Equality, X0, X1
	936 Move TEMP, X0
	937 And TEMP, TEMP, 1
	938 Compare TEMP, 1
	939 JumpIfNotEqual {971}
	940 Move X0, [X23+24]
	941 Move X1, X31
	942 Call GlobalJavaObjectRef.op_Implicit, X0
	943 Move X19, [X28]
	944 Move X23, X0
	945 Move X0, X20
	946 Move X2, X22
	947 Move X8, [X19+8]
	948 Move W8, [X8+40]
	949 NotImplemented "Instruction CMP not yet implemented."
	950 Subtract X8, X29, 16
	951 NotImplemented "Instruction CSEL not yet implemented."
	952 Call 0x3EB2AC0
	953 Move X0, [X19+8]
	954 Move X1, X20
	955 Call 0x1C17E04
	956 Compare X0, 0
	957 JumpIfEqual {1028}
	958 Move X8, 0x1E32000
	959 Move X8, [X8+2424]
	960 Move X9, [X0]
	961 Move X1, [X8]
	962 Move X8, [X9+64]
	963 Move X9, [X1+64]
	964 NotImplemented "Instruction CMP not yet implemented."
	965 Call 0x1C17E08
	966 Move V0, [X0]
	967 NotImplemented "Instruction LDUR not yet implemented."
	968 Move X0, X23
	969 Move X2, X31
	970 Call AndroidJNISafe.SetStaticDoubleField, X0, X1, V0
	971 Move X0, [X19]
	972 Move X8, [X28]
	973 Move W9, [X0+224]
	974 Move X24, [X8]
	975 Compare W9, 0
	976 JumpIfNotEqual {978}
	977 Call 0x1C17DFC
	978 Move X0, X24
	979 Move X1, X31
	980 Call Type.GetTypeFromHandle, X0
	981 Move X8, 0x1E56000
	982 Move X8, [X8+3440]
	983 Move X24, X0
	984 Move X1, X31
	985 Move X8, [X8]
	986 Move X0, X8
	987 Call Type.GetTypeFromHandle, X0
	988 Move X1, X0
	989 Move X0, X24
	990 Move X2, X31
	991 Call Type.op_Equality, X0, X1
	992 Move TEMP, X0
	993 And TEMP, TEMP, 1
	994 Compare TEMP, 1
	995 JumpIfNotEqual {583}
	996 Move X0, [X23+24]
	997 Move X1, X31
	998 Call GlobalJavaObjectRef.op_Implicit, X0
	999 Move X19, [X28]
	1000 Move X23, X0
	1001 Move X0, X20
	1002 Move X2, X22
	1003 Move X8, [X19+8]
	1004 Move W8, [X8+40]
	1005 NotImplemented "Instruction CMP not yet implemented."
	1006 Subtract X8, X29, 16
	1007 NotImplemented "Instruction CSEL not yet implemented."
	1008 Call 0x3EB2AC0
	1009 Move X0, [X19+8]
	1010 Move X1, X20
	1011 Call 0x1C17E04
	1012 Compare X0, 0
	1013 JumpIfEqual {1028}
	1014 Move X8, 0x1E31000
	1015 Move X8, [X8+368]
	1016 Move X9, [X0]
	1017 Move X1, [X8]
	1018 Move X8, [X9+64]
	1019 Move X9, [X1+64]
	1020 NotImplemented "Instruction CMP not yet implemented."
	1021 Call 0x1C17E08
	1022 NotImplemented "Instruction LDRH not yet implemented."
	1023 NotImplemented "Instruction LDUR not yet implemented."
	1024 Move X0, X23
	1025 Move X3, X31
	1026 Call AndroidJNISafe.SetStaticCharField, X0, X1, X2
	1027 Call 0x1C181E0
	1028 Call 0x1C17F20
	1029 Move X0, X2
	1030 Call 0x1C181E0
	1031 Move X0, 0x1E2F000
	1032 Move X19, [X19]
	1033 Move X0, [X0+1728]
	1034 Call 0x1C17D08
	1035 Move W8, [X0+224]
	1036 Compare W8, 0
	1037 JumpIfNotEqual {1039}
	1038 Call 0x1C17DFC
	1039 Move X0, X19
	1040 Move X1, X31
	1041 Call Type.GetTypeFromHandle, X0
	1042 Move X20, X0
	1043 Move X0, 0x1E58000
	1044 Move X0, [X0+2728]
	1045 Call 0x1C17D08
	1046 Move X19, X0
	1047 Move X21, X31
	1048 Compare X20, 0
	1049 JumpIfEqual {1056}
	1050 Move X8, [X20]
	1051 Move X0, X20
	1052 Move X9, [X8+360]
	1053 Move X1, [X8+368]
	1054 NotImplemented "Instruction BLR not yet implemented."
	1055 Move X21, X0
	1056 Move X0, 0x1E37000
	1057 Move X0, [X0+2480]
	1058 Call 0x1C17D08
	1059 Move X2, X0
	1060 Move X0, X19
	1061 Move X1, X21
	1062 Move X3, X31
	1063 Call String.Concat, X0, X1, X2
	1064 Move X19, X0
	1065 Move X0, 0x1E2F000
	1066 Move X0, [X0+2000]
	1067 Call 0x1C17D08
	1068 Call 0x1C17F10
	1069 Move X1, X19
	1070 Move X2, X31
	1071 Move X20, X0
	1072 Call Exception..ctor, X0, X1
	1073 Move X0, X20
	1074 Move X1, X24
	1075 Call 0x1C17DEC
	1076 Call 0x3EB2B20

Method: UnityEngine.AndroidJavaObject AndroidJavaObjectDeleteLocalRef(System.IntPtr jobject)

Disassembly:
	0x03BF2A28 STP X30, X21, [X31 - 0x20]!
	0x03BF2A2C STP X20, X19, [X31 + 0x10]
	0x03BF2A30 ADRP X21, 0x7F1000
	0x03BF2A34 LDRB W8, [X21 + 0x788]
	0x03BF2A38 MOV X20, X1
	0x03BF2A3C MOV X19, X0
	0x03BF2A40 TBNZ X8, 0x0, 0x3BF2A58
	0x03BF2A44 ADRP X0, 0x56C000
	0x03BF2A48 LDR X0, [X0 + 0x588]
	0x03BF2A4C BL 0x1C16CF4
	0x03BF2A50 MOVZ W8, 0x1
	0x03BF2A54 STRB W8, [X21 + 0x788]
	0x03BF2A58 MOV X0, X19
	0x03BF2A5C MOV X1, X31
	0x03BF2A60 BL 0x33BDD8C
	0x03BF2A64 MOV X0, X20
	0x03BF2A68 MOV X1, X31
	0x03BF2A6C MOV X2, X31
	0x03BF2A70 BL 0x33BE5B0
	0x03BF2A74 TBNZ X0, 0x0, 0x3BF2AA4
	0x03BF2A78 ADRP X8, 0x56C000
	0x03BF2A7C LDR X8, [X8 + 0x588]
	0x03BF2A80 LDR X0, [X8]
	0x03BF2A84 BL 0x1C16F10
	0x03BF2A88 MOV X1, X20
	0x03BF2A8C MOV X21, X0
	0x03BF2A90 BL 0x3BEEED8
	0x03BF2A94 STP X31, X21, [X19 + 0x10]
	0x03BF2A98 LDP X20, X19, [X31 + 0x10]
	0x03BF2A9C LDP X30, X21, [X31], #0x20
	0x03BF2AA0 RET
	0x03BF2AA4 ADRP X0, 0x501000
	0x03BF2AA8 LDR X0, [X0 + 0x7D0]
	0x03BF2AAC BL 0x1C16D08
	0x03BF2AB0 BL 0x1C16F10
	0x03BF2AB4 MOV X19, X0
	0x03BF2AB8 ADRP X0, 0x56C000
	0x03BF2ABC LDR X0, [X0 + 0x5F8]
	0x03BF2AC0 BL 0x1C16D08
	0x03BF2AC4 MOV X1, X0
	0x03BF2AC8 MOV X0, X19
	0x03BF2ACC MOV X2, X31
	0x03BF2AD0 BL 0x33B2C70
	0x03BF2AD4 ADRP X0, 0x56C000
	0x03BF2AD8 LDR X0, [X0 + 0x600]
	0x03BF2ADC BL 0x1C16D08
	0x03BF2AE0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7F2000
	006 Move X21, 0x52B000
	007 Move W8, [X20+1925]
	008 Move X21, [X21+2576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x52B000
	015 Move X0, [X0+2576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1925], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Move X1, X19
	023 Call AndroidJavaObject..ctor, X0, X1
	024 Move X0, X19
	025 Call AndroidJNISafe.DeleteLocalRef, X0
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X21, X0
	034 Move X0, X21
	035 Call 0x3EB2AD0
	036 Move X20, [X0]
	037 Call 0x3EB2AE0
	038 Move X0, X19
	039 Call AndroidJNISafe.DeleteLocalRef, X0
	040 Compare X20, 0
	041 JumpIfEqual {26}
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Move X20, X31
	045 Move X21, X0
	046 Move X0, X19
	047 Call AndroidJNISafe.DeleteLocalRef, X0
	048 Compare X20, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X21
	051 Call 0x1D2D690
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Call 0x1991590

Method: UnityEngine.AndroidJavaClass AndroidJavaClassDeleteLocalRef(System.IntPtr jclass)

Disassembly:
	0x03BF3EDC ADRP X0, 0x545000
	0x03BF3EE0 LDR X0, [X0 + 0xF08]
	0x03BF3EE4 BL 0x1C16CF4
	0x03BF3EE8 MOVZ W8, 0x1
	0x03BF3EEC STRB W8, [X20 + 0x794]
	0x03BF3EF0 CBZ X19, 0x3BF4194
	0x03BF3EF4 ADRP X8, 0x500000
	0x03BF3EF8 LDR X8, [X8 + 0x990]
	0x03BF3EFC ADRP X20, 0x56B000
	0x03BF3F00 ADRP X24, 0x500000
	0x03BF3F04 LDR X0, [X8]
	0x03BF3F08 LDR X20, [X20 + 0x6D0]
	0x03BF3F0C LDR X24, [X24 + 0x9C8]
	0x03BF3F10 BL 0x1C16F10
	0x03BF3F14 LDR X21, [X20]
	0x03BF3F18 MOV X1, X31
	0x03BF3F1C MOV X20, X0
	0x03BF3F20 BL 0x33BDD8C
	0x03BF3F24 MOV X0, X20
	0x03BF3F28 MOV X1, X21
	0x03BF3F2C BL 0x3BF2F98
	0x03BF3F30 LDR X21, [X24]
	0x03BF3F34 LDR X8, [X21 + 0x38]
	0x03BF3F38 CBNZ X8, 0x3BF3F48
	0x03BF3F3C MOV X0, X21
	0x03BF3F40 BL 0x1C5C6E0
	0x03BF3F44 LDR X8, [X21 + 0x38]
	0x03BF3F48 LDR X0, [X8 + 0x10]
	0x03BF3F4C LDRB W8, [X0 + 0x135]
	0x03BF3F50 TBNZ X8, 0x0, 0x3BF3F58
	0x03BF3F54 BL 0x1C5C684
	0x03BF3F58 LDR W8, [X0 + 0xE0]
	0x03BF3F5C CBNZ W8, 0x3BF3F64
	0x03BF3F60 BL 0x1C16DFC
	0x03BF3F64 LDR X8, [X21 + 0x38]
	0x03BF3F68 ADRP X21, 0x56B000
	0x03BF3F6C ADRP X23, 0x500000
	0x03BF3F70 LDR X0, [X8 + 0x10]
	0x03BF3F74 LDRB W8, [X0 + 0x135]
	0x03BF3F78 LDR X21, [X21 + 0x2E0]
	0x03BF3F7C LDR X23, [X23 + 0x9A0]
	0x03BF3F80 TBNZ X8, 0x0, 0x3BF3F88
	0x03BF3F84 BL 0x1C5C684
	0x03BF3F88 LDR X8, [X0 + 0xB8]
	0x03BF3F8C LDR X1, [X21]
	0x03BF3F90 LDR X3, [X23]
	0x03BF3F94 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7F1000
	006 Move X21, 0x501000
	007 Move W8, [X20+1926]
	008 Move X21, [X21+2448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x501000
	015 Move X0, [X0+2448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1926], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Move X1, X19
	023 Call AndroidJavaClass..ctor, X0, X1
	024 Move X0, X19
	025 Call AndroidJNISafe.DeleteLocalRef, X0
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X21, X0
	034 Move X0, X21
	035 Call 0x3EB2AD0
	036 Move X20, [X0]
	037 Call 0x3EB2AE0
	038 Move X0, X19
	039 Call AndroidJNISafe.DeleteLocalRef, X0
	040 Compare X20, 0
	041 JumpIfEqual {26}
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Move X20, X31
	045 Move X21, X0
	046 Move X0, X19
	047 Call AndroidJNISafe.DeleteLocalRef, X0
	048 Compare X20, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X21
	051 Call 0x1D2D690
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Call 0x1991590

Method: ReturnType FromJavaArrayDeleteLocalRef(System.IntPtr jobject)

Disassembly:
	0x0227C7E4 LDP X30, X21, [X31], #0x20
	0x0227C7E8 B 0x22C1F24
	0x0227C7EC STP X29, X30, [X31 - 0x50]!
	0x0227C7F0 STP X26, X25, [X31 + 0x10]
	0x0227C7F4 STP X24, X23, [X31 + 0x20]
	0x0227C7F8 STP X22, X21, [X31 + 0x30]
	0x0227C7FC STP X20, X19, [X31 + 0x40]
	0x0227C800 ADD X29, X31, 0x0
	0x0227C804 SUB X31, X31, 0x20
	0x0227C808 MRS X25, 0xC000
	0x0227C80C LDR X8, [X25 + 0x28]
	0x0227C810 MOV X19, X2
	0x0227C814 MOV X21, X1
	0x0227C818 MOV X20, X0
	0x0227C81C STUR X8, [X29 - 0x8]
	0x0227C820 LDR X26, [X3 + 0x38]
	0x0227C824 CBNZ X26, 0x227C838
	0x0227C828 MOV X0, X3
	0x0227C82C MOV X22, X3
	0x0227C830 BL 0x1C5C6E0
	0x0227C834 LDR X26, [X22 + 0x38]
	0x0227C838 LDR X8, [X26 + 0x8]
	0x0227C83C LDR W22, [X8 + 0xFC]
	0x0227C840 ADD X8, X31, 0x0
	0x0227C844 ADD X9, X22, 0xF
	0x0227C848 AND X9, X9, 0x1FFFFFFFF
	0x0227C84C SUB X23, X8, X9
	0x0227C850 ADD X31, X23, 0x0
	0x0227C854 ADD X8, X31, 0x0
	0x0227C858 SUB X24, X8, X9
	0x0227C85C ADD X31, X24, 0x0
	0x0227C860 MOV X0, X24
	0x0227C864 MOV W1, W31
	0x0227C868 MOV X2, X22
	0x0227C86C BL 0x3EB1B10
	0x0227C870 LDR X1, [X26]
	0x0227C874 SUB X8, X29, 0x10
	0x0227C878 SUB X3, X29, 0x20
	0x0227C87C MOV X2, X20
	0x0227C880 LDR X0, [X1]
	0x0227C884 STP X23, X21, [X29 - 0x18]
	0x0227C888 STUR X8, [X29 - 0x20]
	0x0227C88C LDR X8, [X1 + 0x10]
	0x0227C890 MOV X4, X23
	0x0227C894 BLR X8
	0x0227C898 MOV X0, X24
	0x0227C89C MOV X1, X23
	0x0227C8A0 MOV X2, X22
	0x0227C8A4 BL 0x3EB1AC0
	0x0227C8A8 MOV X0, X23
	0x0227C8AC MOV X1, X24
	0x0227C8B0 MOV X2, X22
	0x0227C8B4 BL 0x3EB1AC0
	0x0227C8B8 MOV X0, X19
	0x0227C8BC MOV X1, X23
	0x0227C8C0 MOV X2, X22
	0x0227C8C4 BL 0x3EB1AC0
	0x0227C8C8 LDR X8, [X25 + 0x28]
	0x0227C8CC LDUR X9, [X29 - 0x8]
	0x0227C8D0 CMP X8, X9
	0x0227C8D4 B.NE 0x227C8F4
	0x0227C8D8 ADD X31, X29, 0x0
	0x0227C8DC LDP X20, X19, [X31 + 0x40]
	0x0227C8E0 LDP X22, X21, [X31 + 0x30]
	0x0227C8E4 LDP X24, X23, [X31 + 0x20]
	0x0227C8E8 LDP X26, X25, [X31 + 0x10]
	0x0227C8EC LDP X29, X30, [X31], #0x50
	0x0227C8F0 RET
	0x0227C8F4 BL 0x3EB1B20
	0x0227C8F8 STP X29, X30, [X31 - 0x50]!
	0x0227C8FC STP X26, X25, [X31 + 0x10]
	0x0227C900 STP X24, X23, [X31 + 0x20]
	0x0227C904 STP X22, X21, [X31 + 0x30]
	0x0227C908 STP X20, X19, [X31 + 0x40]
	0x0227C90C ADD X29, X31, 0x0
	0x0227C910 SUB X31, X31, 0x20
	0x0227C914 MRS X25, 0xC000
	0x0227C918 LDR X8, [X25 + 0x28]
	0x0227C91C MOV X19, X2
	0x0227C920 MOV X21, X1
	0x0227C924 MOV X20, X0
	0x0227C928 STUR X8, [X29 - 0x8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Move X0, X19
	014 Move X1, X31
	015 Move X2, X31
	016 Call IntPtr.op_Equality, X0, X1
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {22}
	021 Move W20, W31
	022 Move X8, [X20+56]
	023 Move X1, [X8+8]
	024 Move X0, X19
	025 Call 0x227AF70, X0
	026 And W8, W0, 1
	027 Move [X31+12], W8
	028 Move X8, [X20+56]
	029 Move X0, [X8]
	030 Add X1, X31, 12
	031 Call 0x1C17E04
	032 Move X8, [X20+56]
	033 Move X21, X0
	034 Move X1, [X8]
	035 Move W8, [X1+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {43}
	040 Move X0, X1
	041 Call 0x1C5D684
	042 Move X1, X0
	043 Compare X21, 0
	044 JumpIfEqual {64}
	045 Move X8, [X21]
	046 Move X9, [X1+64]
	047 Move X8, [X8+64]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X21
	050 Call 0x1C17E08
	051 Move W8, [X0]
	052 Move X0, X19
	053 Move X1, X31
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSET not yet implemented."
	056 Call AndroidJNISafe.DeleteLocalRef, X0
	057 Move W0, W20
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Add X31, X31, 48
	063 Return X0
	064 Call 0x1C17F20
	065 Move X0, X21
	066 Call 0x1C181E0
	067 Move X20, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X20
	070 Call 0x3EB2AD0
	071 Move X21, [X0]
	072 Call 0x3EB2AE0
	073 Move X0, X19
	074 Move X1, X31
	075 Call AndroidJNISafe.DeleteLocalRef, X0
	076 Compare X21, 0
	077 JumpIfEqual {21}
	078 Move X0, X21
	079 Call 0x1C17F18
	080 Move X21, X31
	081 Move X20, X0
	082 Move X0, X19
	083 Move X1, X31
	084 Call AndroidJNISafe.DeleteLocalRef, X0
	085 Compare X21, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X20
	088 Call 0x1D2D690
	089 Move X0, X21
	090 Call 0x1C17F18
	091 Call 0x1991590

Method: System.IntPtr _GetRawObject()

Disassembly:
	0x03BF388C BL 0x1C16CF4
	0x03BF3890 MOVZ W8, 0x1
	0x03BF3894 STRB W8, [X19 + 0x78E]
	0x03BF3898 LDR X0, [X22]
	0x03BF389C MOVZ W1, 0x3
	0x03BF38A0 BL 0x1C16D6C

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+24]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.IntPtr _GetRawClass()

Disassembly:
	0x03BF38C0 BL 0x33C6854
	0x03BF38C4 LDR W8, [X19 + 0x18]
	0x03BF38C8 CMP W8, 0x1
	0x03BF38CC B.LS 0x3BF3928
	0x03BF38D0 CMP W8, 0x2
	0x03BF38D4 STR X0, [X19 + 0x28]
	0x03BF38D8 B.EQ 0x3BF3928

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

