Type: UnityEngine.AndroidJavaProxy

Method: System.Void .ctor(System.String javaInterface)

Disassembly:
	0x03BF00B4 LDR X0, [X0 + 0x6B0]
	0x03BF00B8 BL 0x1C16CF4
	0x03BF00BC ADRP X0, 0x503000
	0x03BF00C0 LDR X0, [X0 + 0xA90]
	0x03BF00C4 BL 0x1C16CF4
	0x03BF00C8 ADRP X0, 0x505000
	0x03BF00CC LDR X0, [X0 + 0x278]
	0x03BF00D0 BL 0x1C16CF4
	0x03BF00D4 ADRP X0, 0x56E000
	0x03BF00D8 LDR X0, [X0 + 0x4F8]
	0x03BF00DC BL 0x1C16CF4
	0x03BF00E0 ADRP X0, 0x56E000
	0x03BF00E4 LDR X0, [X0 + 0x500]
	0x03BF00E8 BL 0x1C16CF4
	0x03BF00EC ADRP X0, 0x56E000
	0x03BF00F0 LDR X0, [X0 + 0x508]
	0x03BF00F4 BL 0x1C16CF4
	0x03BF00F8 ADRP X0, 0x56E000
	0x03BF00FC LDR X0, [X0 + 0x510]
	0x03BF0100 BL 0x1C16CF4
	0x03BF0104 ADRP X0, 0x56E000
	0x03BF0108 LDR X0, [X0 + 0x518]
	0x03BF010C BL 0x1C16CF4
	0x03BF0110 ADRP X0, 0x56E000
	0x03BF0114 LDR X0, [X0 + 0x520]
	0x03BF0118 BL 0x1C16CF4
	0x03BF011C ADRP X0, 0x56E000
	0x03BF0120 LDR X0, [X0 + 0x528]
	0x03BF0124 BL 0x1C16CF4
	0x03BF0128 ADRP X0, 0x56E000
	0x03BF012C LDR X0, [X0 + 0x530]
	0x03BF0130 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7F4000
	007 Move X22, 0x504000
	008 Move W8, [X21+1903]
	009 Move X22, [X22+2448]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x504000
	017 Move X0, [X0+2448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1903], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call Object..ctor, X0
	026 Move X0, X21
	027 Move X1, X20
	028 Call AndroidJavaClass._AndroidJavaClass, X0, X1
	029 Move X0, X19
	030 Move X1, X31
	031 Move [X19+24], X31
	032 Call Object..ctor, X0
	033 Move [X19+16], X21
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 

Method: System.Void .ctor(UnityEngine.AndroidJavaClass javaInterface)

Disassembly:
	0x03BF0624 CBZ W8, 0x3BF08F8
	0x03BF0628 STR X19, [X20 + 0x20]
	0x03BF062C ADRP X8, 0x52C000
	0x03BF0630 LDR X8, [X8 + 0xA10]
	0x03BF0634 LDR X0, [X8]
	0x03BF0638 BL 0x1C16F10
	0x03BF063C ADRP X8, 0x56E000
	0x03BF0640 LDR X8, [X8 + 0x508]
	0x03BF0644 LDR X21, [X8]
	0x03BF0648 MOV X1, X31
	0x03BF064C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Move [X0+24], X31
	008 Call Object..ctor, X0
	009 Move [X20+16], X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Void Finalize()

Disassembly:
	0x03BF0650 BL 0x33BDD8C
	0x03BF0654 MOV X0, X19
	0x03BF0658 MOV X1, X21
	0x03BF065C MOV X2, X20
	0x03BF0660 BL 0x3BF1E38
	0x03BF0664 MOV X0, X19
	0x03BF0668 LDP X20, X19, [X31 + 0x20]
	0x03BF066C LDP X30, X21, [X31 + 0x10]
	0x03BF0670 ADD X31, X31, 0x30
	0x03BF0674 RET
	0x03BF0678 MOV X0, X19
	0x03BF067C BL 0x3BE3544
	0x03BF0680 B 0x3BF068C
	0x03BF0684 MOV X0, X19
	0x03BF0688 BL 0x3BF09A0
	0x03BF068C LDP X20, X19, [X31 + 0x20]
	0x03BF0690 LDP X30, X21, [X31 + 0x10]
	0x03BF0694 ADD X31, X31, 0x30
	0x03BF0698 B 0x3BF1A28
	0x03BF069C ADRP X8, 0x503000
	0x03BF06A0 LDR X8, [X8 + 0x9D0]
	0x03BF06A4 MOVZ W1, 0x1
	0x03BF06A8 LDR X0, [X8]
	0x03BF06AC BL 0x1C16D6C
	0x03BF06B0 LDR X8, [X19]
	0x03BF06B4 LDR X1, [X21]
	0x03BF06B8 LDR X8, [X8 + 0x40]
	0x03BF06BC LDR X9, [X1 + 0x40]
	0x03BF06C0 CMP X8, X9
	0x03BF06C4 B.NE 0x3BF08F0
	0x03BF06C8 MOV X20, X0
	0x03BF06CC MOV X0, X19
	0x03BF06D0 BL 0x1C16E08
	0x03BF06D4 LDRH W8, [X0]
	0x03BF06D8 LDR X0, [X21]
	0x03BF06DC ADD X1, X31, 0x8
	0x03BF06E0 STRH W8, [X31 + 0x8]
	0x03BF06E4 BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+24]
	007 Call AndroidJNISafe.DeleteWeakGlobalRef, X0
	008 Move X0, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X1, X31
	012 Move X30, [X31+32]
	013 Move X21, [X31+40]
	014 Call Object.Finalize, X0
	015 Return 
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X21, X0
	018 Move X0, X21
	019 Call 0x3EB2AD0
	020 Move X20, [X0]
	021 Call 0x3EB2AE0
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object.Finalize, X0
	025 Compare X20, 0
	026 JumpIfNotEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 
	032 Move X20, X31
	033 Move X0, X20
	034 Call 0x1C17F18
	035 Move X21, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object.Finalize, X0
	039 Compare X20, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X21
	042 Call 0x1D2D690
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Call 0x1991590

Method: UnityEngine.AndroidJavaObject Invoke(System.String methodName, System.Object[] args)

Disassembly:
	0x03BF06E8 CBZ X20, 0x3BF08EC
	0x03BF06EC MOV X19, X0
	0x03BF06F0 CBZ X0, 0x3BF0708
	0x03BF06F4 LDR X8, [X20]
	0x03BF06F8 MOV X0, X19
	0x03BF06FC LDR X1, [X8 + 0x40]
	0x03BF0700 BL 0x1C16E00
	0x03BF0704 CBZ X0, 0x3BF08FC
	0x03BF0708 LDR W8, [X20 + 0x18]
	0x03BF070C CBZ W8, 0x3BF08F8
	0x03BF0710 STR X19, [X20 + 0x20]
	0x03BF0714 ADRP X8, 0x52C000
	0x03BF0718 LDR X8, [X8 + 0xA10]
	0x03BF071C LDR X0, [X8]
	0x03BF0720 BL 0x1C16F10
	0x03BF0724 ADRP X8, 0x56E000
	0x03BF0728 LDR X8, [X8 + 0x518]
	0x03BF072C B 0x3BF0644
	0x03BF0730 ADRP X8, 0x503000
	0x03BF0734 LDR X8, [X8 + 0x9D0]
	0x03BF0738 MOVZ W1, 0x1
	0x03BF073C LDR X0, [X8]
	0x03BF0740 BL 0x1C16D6C
	0x03BF0744 LDR X8, [X19]
	0x03BF0748 LDR X1, [X21]
	0x03BF074C LDR X8, [X8 + 0x40]
	0x03BF0750 LDR X9, [X1 + 0x40]
	0x03BF0754 CMP X8, X9
	0x03BF0758 B.NE 0x3BF08F0
	0x03BF075C MOV X20, X0
	0x03BF0760 MOV X0, X19
	0x03BF0764 BL 0x1C16E08
	0x03BF0768 LDR X8, [X0]
	0x03BF076C LDR X0, [X21]
	0x03BF0770 ADD X1, X31, 0x8
	0x03BF0774 STR X8, [X31 + 0x8]
	0x03BF0778 BL 0x1C16E04
	0x03BF077C CBZ X20, 0x3BF08EC
	0x03BF0780 MOV X19, X0
	0x03BF0784 CBZ X0, 0x3BF079C
	0x03BF0788 LDR X8, [X20]
	0x03BF078C MOV X0, X19
	0x03BF0790 LDR X1, [X8 + 0x40]
	0x03BF0794 BL 0x1C16E00
	0x03BF0798 CBZ X0, 0x3BF08FC
	0x03BF079C LDR W8, [X20 + 0x18]
	0x03BF07A0 CBZ W8, 0x3BF08F8
	0x03BF07A4 STR X19, [X20 + 0x20]
	0x03BF07A8 ADRP X8, 0x52C000
	0x03BF07AC LDR X8, [X8 + 0xA10]
	0x03BF07B0 LDR X0, [X8]
	0x03BF07B4 BL 0x1C16F10
	0x03BF07B8 ADRP X8, 0x56E000
	0x03BF07BC LDR X8, [X8 + 0x520]
	0x03BF07C0 B 0x3BF0644
	0x03BF07C4 ADRP X8, 0x503000
	0x03BF07C8 LDR X8, [X8 + 0x9D0]
	0x03BF07CC MOVZ W1, 0x1
	0x03BF07D0 LDR X0, [X8]
	0x03BF07D4 BL 0x1C16D6C
	0x03BF07D8 LDR X8, [X19]
	0x03BF07DC LDR X1, [X21]
	0x03BF07E0 LDR X8, [X8 + 0x40]
	0x03BF07E4 LDR X9, [X1 + 0x40]
	0x03BF07E8 CMP X8, X9
	0x03BF07EC B.NE 0x3BF08F0
	0x03BF07F0 MOV X20, X0
	0x03BF07F4 MOV X0, X19
	0x03BF07F8 BL 0x1C16E08
	0x03BF07FC LDR V0, [X0]
	0x03BF0800 LDR X0, [X21]
	0x03BF0804 ADD X1, X31, 0x8
	0x03BF0808 STR S0, [X31 + 0x8]
	0x03BF080C BL 0x1C16E04
	0x03BF0810 CBZ X20, 0x3BF08EC
	0x03BF0814 MOV X19, X0
	0x03BF0818 CBZ X0, 0x3BF0830
	0x03BF081C LDR X8, [X20]
	0x03BF0820 MOV X0, X19
	0x03BF0824 LDR X1, [X8 + 0x40]
	0x03BF0828 BL 0x1C16E00
	0x03BF082C CBZ X0, 0x3BF08FC
	0x03BF0830 LDR W8, [X20 + 0x18]
	0x03BF0834 CBZ W8, 0x3BF08F8
	0x03BF0838 STR X19, [X20 + 0x20]
	0x03BF083C ADRP X8, 0x52C000
	0x03BF0840 LDR X8, [X8 + 0xA10]
	0x03BF0844 LDR X0, [X8]
	0x03BF0848 BL 0x1C16F10
	0x03BF084C ADRP X8, 0x56E000
	0x03BF0850 LDR X8, [X8 + 0x4F8]
	0x03BF0854 B 0x3BF0644
	0x03BF0858 ADRP X8, 0x503000
	0x03BF085C LDR X8, [X8 + 0x9D0]
	0x03BF0860 MOVZ W1, 0x1
	0x03BF0864 LDR X0, [X8]
	0x03BF0868 BL 0x1C16D6C
	0x03BF086C LDR X8, [X19]
	0x03BF0870 LDR X1, [X21]
	0x03BF0874 LDR X8, [X8 + 0x40]
	0x03BF0878 LDR X9, [X1 + 0x40]
	0x03BF087C CMP X8, X9
	0x03BF0880 B.NE 0x3BF08F0
	0x03BF0884 MOV X20, X0
	0x03BF0888 MOV X0, X19
	0x03BF088C BL 0x1C16E08
	0x03BF0890 LDR V0, [X0]
	0x03BF0894 LDR X0, [X21]
	0x03BF0898 ADD X1, X31, 0x8
	0x03BF089C STR D0, [X31 + 0x8]
	0x03BF08A0 BL 0x1C16E04
	0x03BF08A4 CBZ X20, 0x3BF08EC
	0x03BF08A8 MOV X19, X0
	0x03BF08AC CBZ X0, 0x3BF08C4
	0x03BF08B0 LDR X8, [X20]
	0x03BF08B4 MOV X0, X19
	0x03BF08B8 LDR X1, [X8 + 0x40]
	0x03BF08BC BL 0x1C16E00
	0x03BF08C0 CBZ X0, 0x3BF08FC
	0x03BF08C4 LDR W8, [X20 + 0x18]
	0x03BF08C8 CBZ W8, 0x3BF08F8
	0x03BF08CC STR X19, [X20 + 0x20]
	0x03BF08D0 ADRP X8, 0x52C000
	0x03BF08D4 LDR X8, [X8 + 0xA10]
	0x03BF08D8 LDR X0, [X8]
	0x03BF08DC BL 0x1C16F10
	0x03BF08E0 ADRP X8, 0x56E000
	0x03BF08E4 LDR X8, [X8 + 0x530]
	0x03BF08E8 B 0x3BF0644
	0x03BF08EC BL 0x1C16F20
	0x03BF08F0 MOV X0, X19
	0x03BF08F4 BL 0x1C171E0
	0x03BF08F8 BL 0x1C16F28
	0x03BF08FC BL 0x1C16F44
	0x03BF0900 MOV X1, X31
	0x03BF0904 BL 0x1C16DEC
	0x03BF0908 MOV X0, X19
	0x03BF090C MOV X1, X31
	0x03BF0910 BL 0x33BE520
	0x03BF0914 MOV X20, X0
	0x03BF0918 ADRP X0, 0x56E000
	0x03BF091C LDR X0, [X0 + 0x2A8]
	0x03BF0920 BL 0x1C16D08
	0x03BF0924 MOV X19, X0
	0x03BF0928 MOV X21, X31
	0x03BF092C CBZ X20, 0x3BF0944
	0x03BF0930 LDR X8, [X20]
	0x03BF0934 MOV X0, X20
	0x03BF0938 LDP X9, X1, [X8 + 0x168]
	0x03BF093C BLR X9
	0x03BF0940 MOV X21, X0
	0x03BF0944 ADRP X0, 0x50B000
	0x03BF0948 LDR X0, [X0 + 0x9B0]
	0x03BF094C BL 0x1C16D08
	0x03BF0950 MOV X2, X0
	0x03BF0954 MOV X0, X19
	0x03BF0958 MOV X1, X21
	0x03BF095C MOV X3, X31
	0x03BF0960 BL 0x32274B8
	0x03BF0964 MOV X19, X0
	0x03BF0968 ADRP X0, 0x503000
	0x03BF096C LDR X0, [X0 + 0x7D0]
	0x03BF0970 BL 0x1C16D08
	0x03BF0974 BL 0x1C16F10
	0x03BF0978 MOV X1, X19
	0x03BF097C MOV X2, X31
	0x03BF0980 MOV X20, X0
	0x03BF0984 BL 0x33B2C70
	0x03BF0988 ADRP X0, 0x56E000
	0x03BF098C LDR X0, [X0 + 0x540]
	0x03BF0990 BL 0x1C16D08
	0x03BF0994 MOV X1, X0
	0x03BF0998 MOV X0, X20
	0x03BF099C BL 0x1C16DEC
	0x03BF09A0 STR X30, [X31 - 0x30]!
	0x03BF09A4 STP X22, X21, [X31 + 0x10]
	0x03BF09A8 STP X20, X19, [X31 + 0x20]
	0x03BF09AC MOV X19, X0
	0x03BF09B0 LDR X0, [X0 + 0x18]
	0x03BF09B4 MOV X1, X31
	0x03BF09B8 MOV X2, X31
	0x03BF09BC BL 0x33C5D2C
	0x03BF09C0 MOV X20, X31
	0x03BF09C4 TBZ X0, 0x0, 0x3BF0A38
	0x03BF09C8 ADRP X21, 0x7F3000
	0x03BF09CC LDR X8, [X21 + 0x260]
	0x03BF09D0 LDR X20, [X19 + 0x18]
	0x03BF09D4 CBNZ X8, 0x3BF09EC
	0x03BF09D8 ADRP X0, 0xFFFFFFFFFCF3A000
	0x03BF09DC ADD X0, X0, 0x235
	0x03BF09E0 BL 0x1C16CB8
	0x03BF09E4 MOV X8, X0
	0x03BF09E8 STR X0, [X21 + 0x260]
	0x03BF09EC MOV X0, X20
	0x03BF09F0 BLR X8
	0x03BF09F4 MOV X1, X31
	0x03BF09F8 MOV X2, X31
	0x03BF09FC MOV X20, X0
	0x03BF0A00 BL 0x33BE5B0
	0x03BF0A04 TBZ X0, 0x0, 0x3BF0A38
	0x03BF0A08 ADRP X22, 0x7F3000
	0x03BF0A0C LDR X8, [X22 + 0x258]
	0x03BF0A10 LDR X21, [X19 + 0x18]
	0x03BF0A14 CBNZ X8, 0x3BF0A2C
	0x03BF0A18 ADRP X0, 0xFFFFFFFFFCF2C000
	0x03BF0A1C ADD X0, X0, 0x766
	0x03BF0A20 BL 0x1C16CB8
	0x03BF0A24 MOV X8, X0
	0x03BF0A28 STR X0, [X22 + 0x258]
	0x03BF0A2C MOV X0, X21
	0x03BF0A30 BLR X8
	0x03BF0A34 STR X31, [X19 + 0x18]
	0x03BF0A38 MOV X0, X20
	0x03BF0A3C MOV X1, X31
	0x03BF0A40 MOV X2, X31
	0x03BF0A44 BL 0x33BE5B0
	0x03BF0A48 TBZ X0, 0x0, 0x3BF0A84
	0x03BF0A4C MOV X0, X19
	0x03BF0A50 BL 0x3BE339C
	0x03BF0A54 ADRP X21, 0x7F3000
	0x03BF0A58 LDR X8, [X21 + 0x250]
	0x03BF0A5C MOV X20, X0
	0x03BF0A60 CBNZ X8, 0x3BF0A78
	0x03BF0A64 ADRP X0, 0xFFFFFFFFFCF3C000
	0x03BF0A68 ADD X0, X0, 0x51
	0x03BF0A6C BL 0x1C16CB8
	0x03BF0A70 MOV X8, X0
	0x03BF0A74 STR X0, [X21 + 0x250]
	0x03BF0A78 MOV X0, X20
	0x03BF0A7C BLR X8
	0x03BF0A80 STR X0, [X19 + 0x18]
	0x03BF0A84 MOV X0, X20
	0x03BF0A88 LDP X20, X19, [X31 + 0x20]
	0x03BF0A8C LDP X22, X21, [X31 + 0x10]
	0x03BF0A90 LDR X30, [X31], #0x30
	0x03BF0A94 RET
	0x03BF0A98 SUB X31, X31, 0x40
	0x03BF0A9C STP X30, X23, [X31 + 0x10]
	0x03BF0AA0 STP X22, X21, [X31 + 0x20]
	0x03BF0AA4 STP X20, X19, [X31 + 0x30]
	0x03BF0AA8 ADRP X19, 0x7F3000
	0x03BF0AAC ADRP X23, 0x545000
	0x03BF0AB0 LDRB W8, [X19 + 0x78F]
	0x03BF0AB4 LDR X23, [X23 + 0xEE8]
	0x03BF0AB8 MOV W20, W2
	0x03BF0ABC MOV X21, X1
	0x03BF0AC0 MOV X22, X0
	0x03BF0AC4 TBNZ X8, 0x0, 0x3BF0AE8
	0x03BF0AC8 ADRP X0, 0x52C000
	0x03BF0ACC LDR X0, [X0 + 0x6A0]
	0x03BF0AD0 BL 0x1C16CF4
	0x03BF0AD4 ADRP X0, 0x545000
	0x03BF0AD8 LDR X0, [X0 + 0xEE8]
	0x03BF0ADC BL 0x1C16CF4
	0x03BF0AE0 MOVZ W8, 0x1
	0x03BF0AE4 STRB W8, [X19 + 0x78F]
	0x03BF0AE8 LDR X0, [X23]
	0x03BF0AEC MOVZ W1, 0x3
	0x03BF0AF0 BL 0x1C16D6C
	0x03BF0AF4 CBZ X0, 0x3BF0B9C
	0x03BF0AF8 LDR W8, [X0 + 0x18]
	0x03BF0AFC MOV X19, X0
	0x03BF0B00 CBZ W8, 0x3BF0B98
	0x03BF0B04 MOV X0, X21
	0x03BF0B08 MOV X1, X31
	0x03BF0B0C STR X22, [X19 + 0x20]
	0x03BF0B10 BL 0x32C0774
	0x03BF0B14 MOV X1, X31
	0x03BF0B18 BL 0x32C0980
	0x03BF0B1C STR X0, [X31 + 0x8]
	0x03BF0B20 ADD X0, X31, 0x8
	0x03BF0B24 MOV X1, X31
	0x03BF0B28 BL 0x33C6854
	0x03BF0B2C LDR W8, [X19 + 0x18]
	0x03BF0B30 CMP W8, 0x1
	0x03BF0B34 B.LS 0x3BF0B98
	0x03BF0B38 CMP W8, 0x2
	0x03BF0B3C STR X0, [X19 + 0x28]
	0x03BF0B40 B.EQ 0x3BF0B98
	0x03BF0B44 ADRP X21, 0x52C000
	0x03BF0B48 LDR X21, [X21 + 0x6A0]
	0x03BF0B4C AND W8, W20, 0x1
	0x03BF0B50 STRB W8, [X19 + 0x30]
	0x03BF0B54 LDR X0, [X21]
	0x03BF0B58 LDR W8, [X0 + 0xE0]
	0x03BF0B5C CBNZ W8, 0x3BF0B68
	0x03BF0B60 BL 0x1C16DFC
	0x03BF0B64 LDR X0, [X21]
	0x03BF0B68 LDR X8, [X0 + 0xB8]
	0x03BF0B6C LDR X9, [X8]
	0x03BF0B70 CBZ X9, 0x3BF0B9C
	0x03BF0B74 LDR X0, [X9 + 0x18]
	0x03BF0B78 LDR X1, [X8 + 0x30]
	0x03BF0B7C MOV X2, X19
	0x03BF0B80 BL 0x3BECC60
	0x03BF0B84 LDP X20, X19, [X31 + 0x30]
	0x03BF0B88 LDP X22, X21, [X31 + 0x20]
	0x03BF0B8C LDP X30, X23, [X31 + 0x10]
	0x03BF0B90 ADD X31, X31, 0x40
	0x03BF0B94 RET
	0x03BF0B98 BL 0x1C16F28
	0x03BF0B9C BL 0x1C16F20
	0x03BF0BA0 STP X30, X27, [X31 - 0x50]!
	0x03BF0BA4 STP X26, X25, [X31 + 0x10]
	0x03BF0BA8 STP X24, X23, [X31 + 0x20]
	0x03BF0BAC STP X22, X21, [X31 + 0x30]
	0x03BF0BB0 STP X20, X19, [X31 + 0x40]
	0x03BF0BB4 ADRP X22, 0x7F3000
	0x03BF0BB8 LDRB W8, [X22 + 0x771]
	0x03BF0BBC MOV X20, X2
	0x03BF0BC0 MOV X19, X1
	0x03BF0BC4 MOV X21, X0
	0x03BF0BC8 TBNZ X8, 0x0, 0x3BF0BEC
	0x03BF0BCC ADRP X0, 0x52C000
	0x03BF0BD0 LDR X0, [X0 + 0xA10]
	0x03BF0BD4 BL 0x1C16CF4
	0x03BF0BD8 ADRP X0, 0x503000
	0x03BF0BDC LDR X0, [X0 + 0x9D0]
	0x03BF0BE0 BL 0x1C16CF4
	0x03BF0BE4 MOVZ W8, 0x1
	0x03BF0BE8 STRB W8, [X22 + 0x771]
	0x03BF0BEC CBZ X20, 0x3BF0D04
	0x03BF0BF0 ADRP X8, 0x503000
	0x03BF0BF4 LDR X8, [X8 + 0x9D0]
	0x03BF0BF8 LDR W1, [X20 + 0x18]
	0x03BF0BFC LDR X0, [X8]
	0x03BF0C00 BL 0x1C16D6C
	0x03BF0C04 LDR X8, [X20 + 0x18]
	0x03BF0C08 MOV X22, X0
	0x03BF0C0C CMP W8, 0x1
	0x03BF0C10 B.LT 0x3BF0CD4
	0x03BF0C14 ADRP X25, 0x52C000
	0x03BF0C18 LDR X25, [X25 + 0xA10]
	0x03BF0C1C MOV X24, X31
	0x03BF0C20 AND X8, X8, 0x0
	0x03BF0C24 ADD X26, X22, 0x20
	0x03BF0C28 ADD X27, X20, 0x20
	0x03BF0C2C CMP X24, W8, UXTW
	0x03BF0C30 B.CS 0x3BF0D00
	0x03BF0C34 LDR X0, [X27, X24, LSL #3]
	0x03BF0C38 BL 0x3BF0D14
	0x03BF0C3C CBZ X22, 0x3BF0D04
	0x03BF0C40 MOV X23, X0
	0x03BF0C44 CBZ X0, 0x3BF0C9C
	0x03BF0C48 LDR X8, [X22]
	0x03BF0C4C MOV X0, X23
	0x03BF0C50 LDR X1, [X8 + 0x40]
	0x03BF0C54 BL 0x1C16E00
	0x03BF0C58 CBZ X0, 0x3BF0D08
	0x03BF0C5C LDR W8, [X22 + 0x18]
	0x03BF0C60 CMP X24, X8
	0x03BF0C64 B.CS 0x3BF0D00
	0x03BF0C68 STR X23, [X26, X24, LSL #3]
	0x03BF0C6C LDR X9, [X23]
	0x03BF0C70 LDR X8, [X25]
	0x03BF0C74 LDRB W11, [X9 + 0x130]
	0x03BF0C78 LDRB W10, [X8 + 0x130]
	0x03BF0C7C CMP W11, W10
	0x03BF0C80 B.CC 0x3BF0CAC
	0x03BF0C84 LDR X9, [X9 + 0xC8]
	0x03BF0C88 ADD X9, X9, X10, 0x3, LSL
	0x03BF0C8C LDUR X9, [X9 - 0x8]
	0x03BF0C90 CMP X9, X8
	0x03BF0C94 B.NE 0x3BF0CAC
	0x03BF0C98 B 0x3BF0CC4
	0x03BF0C9C LDR W8, [X22 + 0x18]
	0x03BF0CA0 CMP X24, X8
	0x03BF0CA4 B.CS 0x3BF0D00
	0x03BF0CA8 STR X23, [X26, X24, LSL #3]
	0x03BF0CAC LDR W8, [X20 + 0x18]
	0x03BF0CB0 CMP X24, X8
	0x03BF0CB4 B.CS 0x3BF0D00
	0x03BF0CB8 LDR X0, [X27, X24, LSL #3]
	0x03BF0CBC CBZ X0, 0x3BF0CC4
	0x03BF0CC0 BL 0x3BF18C4
	0x03BF0CC4 LDR W8, [X20 + 0x18]
	0x03BF0CC8 ADD X24, X24, 0x1
	0x03BF0CCC CMP X24, W8, SXTW
	0x03BF0CD0 B.LT 0x3BF0C2C
	0x03BF0CD4 LDR X8, [X21]
	0x03BF0CD8 MOV X0, X21
	0x03BF0CDC MOV X1, X19
	0x03BF0CE0 MOV X2, X22
	0x03BF0CE4 LDP X4, X3, [X8 + 0x178]
	0x03BF0CE8 LDP X20, X19, [X31 + 0x40]
	0x03BF0CEC LDP X22, X21, [X31 + 0x30]
	0x03BF0CF0 LDP X24, X23, [X31 + 0x20]
	0x03BF0CF4 LDP X26, X25, [X31 + 0x10]
	0x03BF0CF8 LDP X30, X27, [X31], #0x50
	0x03BF0CFC BR X4
	0x03BF0D00 BL 0x1C16F28
	0x03BF0D04 BL 0x1C16F20
	0x03BF0D08 BL 0x1C16F44
	0x03BF0D0C MOV X1, X31
	0x03BF0D10 BL 0x1C16DEC
	0x03BF0D14 STR X30, [X31 - 0x40]!
	0x03BF0D18 STP X24, X23, [X31 + 0x10]
	0x03BF0D1C STP X22, X21, [X31 + 0x20]
	0x03BF0D20 STP X20, X19, [X31 + 0x30]
	0x03BF0D24 ADRP X19, 0x7F3000
	0x03BF0D28 LDRB W8, [X19 + 0x795]
	0x03BF0D2C MOV X20, X0
	0x03BF0D30 TBNZ X8, 0x0, 0x3BF0F40
	0x03BF0D34 ADRP X0, 0x503000
	0x03BF0D38 LDR X0, [X0 + 0x990]
	0x03BF0D3C BL 0x1C16CF4
	0x03BF0D40 ADRP X0, 0x503000
	0x03BF0D44 LDR X0, [X0 + 0x9A0]
	0x03BF0D48 BL 0x1C16CF4
	0x03BF0D4C ADRP X0, 0x545000
	0x03BF0D50 LDR X0, [X0 + 0xE58]
	0x03BF0D54 BL 0x1C16CF4
	0x03BF0D58 ADRP X0, 0x56E000
	0x03BF0D5C LDR X0, [X0 + 0x548]
	0x03BF0D60 BL 0x1C16CF4
	0x03BF0D64 ADRP X0, 0x56E000
	0x03BF0D68 LDR X0, [X0 + 0x550]
	0x03BF0D6C BL 0x1C16CF4
	0x03BF0D70 ADRP X0, 0x56E000
	0x03BF0D74 LDR X0, [X0 + 0x558]
	0x03BF0D78 BL 0x1C16CF4
	0x03BF0D7C ADRP X0, 0x545000
	0x03BF0D80 LDR X0, [X0 + 0xE60]
	0x03BF0D84 BL 0x1C16CF4
	0x03BF0D88 ADRP X0, 0x56E000
	0x03BF0D8C LDR X0, [X0 + 0x560]
	0x03BF0D90 BL 0x1C16CF4
	0x03BF0D94 ADRP X0, 0x56E000
	0x03BF0D98 LDR X0, [X0 + 0x568]
	0x03BF0D9C BL 0x1C16CF4
	0x03BF0DA0 ADRP X0, 0x56E000
	0x03BF0DA4 LDR X0, [X0 + 0x570]
	0x03BF0DA8 BL 0x1C16CF4
	0x03BF0DAC ADRP X0, 0x503000
	0x03BF0DB0 LDR X0, [X0 + 0x9A8]
	0x03BF0DB4 BL 0x1C16CF4
	0x03BF0DB8 ADRP X0, 0x503000
	0x03BF0DBC LDR X0, [X0 + 0x9C8]
	0x03BF0DC0 BL 0x1C16CF4
	0x03BF0DC4 ADRP X0, 0x503000
	0x03BF0DC8 LDR X0, [X0 + 0xB58]
	0x03BF0DCC BL 0x1C16CF4
	0x03BF0DD0 ADRP X0, 0x505000
	0x03BF0DD4 LDR X0, [X0 + 0x170]
	0x03BF0DD8 BL 0x1C16CF4
	0x03BF0DDC ADRP X0, 0x506000
	0x03BF0DE0 LDR X0, [X0 + 0x978]
	0x03BF0DE4 BL 0x1C16CF4
	0x03BF0DE8 ADRP X0, 0x503000
	0x03BF0DEC LDR X0, [X0 + 0xE00]
	0x03BF0DF0 BL 0x1C16CF4
	0x03BF0DF4 ADRP X0, 0x507000
	0x03BF0DF8 LDR X0, [X0 + 0x628]
	0x03BF0DFC BL 0x1C16CF4
	0x03BF0E00 ADRP X0, 0x503000
	0x03BF0E04 LDR X0, [X0 + 0x758]
	0x03BF0E08 BL 0x1C16CF4
	0x03BF0E0C ADRP X0, 0x505000
	0x03BF0E10 LDR X0, [X0 + 0xA60]
	0x03BF0E14 BL 0x1C16CF4
	0x03BF0E18 ADRP X0, 0x52C000
	0x03BF0E1C LDR X0, [X0 + 0x6B0]
	0x03BF0E20 BL 0x1C16CF4
	0x03BF0E24 ADRP X0, 0x503000
	0x03BF0E28 LDR X0, [X0 + 0xA90]
	0x03BF0E2C BL 0x1C16CF4
	0x03BF0E30 ADRP X0, 0x56E000
	0x03BF0E34 LDR X0, [X0 + 0x400]
	0x03BF0E38 BL 0x1C16CF4
	0x03BF0E3C ADRP X0, 0x56E000
	0x03BF0E40 LDR X0, [X0 + 0x4F8]
	0x03BF0E44 BL 0x1C16CF4
	0x03BF0E48 ADRP X0, 0x56E000
	0x03BF0E4C LDR X0, [X0 + 0x3D0]
	0x03BF0E50 BL 0x1C16CF4
	0x03BF0E54 ADRP X0, 0x56E000
	0x03BF0E58 LDR X0, [X0 + 0x500]
	0x03BF0E5C BL 0x1C16CF4
	0x03BF0E60 ADRP X0, 0x56E000
	0x03BF0E64 LDR X0, [X0 + 0x420]
	0x03BF0E68 BL 0x1C16CF4
	0x03BF0E6C ADRP X0, 0x56E000
	0x03BF0E70 LDR X0, [X0 + 0x2E0]
	0x03BF0E74 BL 0x1C16CF4
	0x03BF0E78 ADRP X0, 0x56E000
	0x03BF0E7C LDR X0, [X0 + 0x508]
	0x03BF0E80 BL 0x1C16CF4
	0x03BF0E84 ADRP X0, 0x56E000
	0x03BF0E88 LDR X0, [X0 + 0x578]
	0x03BF0E8C BL 0x1C16CF4
	0x03BF0E90 ADRP X0, 0x56E000
	0x03BF0E94 LDR X0, [X0 + 0x490]
	0x03BF0E98 BL 0x1C16CF4
	0x03BF0E9C ADRP X0, 0x56E000
	0x03BF0EA0 LDR X0, [X0 + 0x3E0]
	0x03BF0EA4 BL 0x1C16CF4
	0x03BF0EA8 ADRP X0, 0x56E000
	0x03BF0EAC LDR X0, [X0 + 0x2E8]
	0x03BF0EB0 BL 0x1C16CF4
	0x03BF0EB4 ADRP X0, 0x56E000
	0x03BF0EB8 LDR X0, [X0 + 0x510]
	0x03BF0EBC BL 0x1C16CF4
	0x03BF0EC0 ADRP X0, 0x56E000
	0x03BF0EC4 LDR X0, [X0 + 0x430]
	0x03BF0EC8 BL 0x1C16CF4
	0x03BF0ECC ADRP X0, 0x56E000
	0x03BF0ED0 LDR X0, [X0 + 0x518]
	0x03BF0ED4 BL 0x1C16CF4
	0x03BF0ED8 ADRP X0, 0x56E000
	0x03BF0EDC LDR X0, [X0 + 0x3F0]
	0x03BF0EE0 BL 0x1C16CF4
	0x03BF0EE4 ADRP X0, 0x56E000
	0x03BF0EE8 LDR X0, [X0 + 0x440]
	0x03BF0EEC BL 0x1C16CF4
	0x03BF0EF0 ADRP X0, 0x56E000
	0x03BF0EF4 LDR X0, [X0 + 0x520]
	0x03BF0EF8 BL 0x1C16CF4
	0x03BF0EFC ADRP X0, 0x56E000
	0x03BF0F00 LDR X0, [X0 + 0x410]
	0x03BF0F04 BL 0x1C16CF4
	0x03BF0F08 ADRP X0, 0x56E000
	0x03BF0F0C LDR X0, [X0 + 0x528]
	0x03BF0F10 BL 0x1C16CF4
	0x03BF0F14 ADRP X0, 0x56E000
	0x03BF0F18 LDR X0, [X0 + 0x530]
	0x03BF0F1C BL 0x1C16CF4
	0x03BF0F20 ADRP X0, 0x56E000
	0x03BF0F24 LDR X0, [X0 + 0x538]
	0x03BF0F28 BL 0x1C16CF4
	0x03BF0F2C ADRP X0, 0x56E000
	0x03BF0F30 LDR X0, [X0 + 0x580]
	0x03BF0F34 BL 0x1C16CF4
	0x03BF0F38 MOVZ W8, 0x1
	0x03BF0F3C STRB W8, [X19 + 0x795]
	0x03BF0F40 CBZ X20, 0x3BF1684
	0x03BF0F44 ADRP X23, 0x503000
	0x03BF0F48 LDR X23, [X23 + 0x9C8]
	0x03BF0F4C LDR X19, [X23]
	0x03BF0F50 LDR X8, [X19 + 0x38]
	0x03BF0F54 CBNZ X8, 0x3BF0F64
	0x03BF0F58 MOV X0, X19
	0x03BF0F5C BL 0x1C5C6E0
	0x03BF0F60 LDR X8, [X19 + 0x38]
	0x03BF0F64 LDR X0, [X8 + 0x10]
	0x03BF0F68 LDRB W8, [X0 + 0x135]
	0x03BF0F6C TBNZ X8, 0x0, 0x3BF0F74
	0x03BF0F70 BL 0x1C5C684
	0x03BF0F74 LDR W8, [X0 + 0xE0]
	0x03BF0F78 CBNZ W8, 0x3BF0F80
	0x03BF0F7C BL 0x1C16DFC
	0x03BF0F80 LDR X8, [X19 + 0x38]
	0x03BF0F84 ADRP X21, 0x56E000
	0x03BF0F88 ADRP X19, 0x503000
	0x03BF0F8C LDR X0, [X8 + 0x10]
	0x03BF0F90 LDRB W8, [X0 + 0x135]
	0x03BF0F94 LDR X21, [X21 + 0x2E0]
	0x03BF0F98 LDR X19, [X19 + 0x9A0]
	0x03BF0F9C TBNZ X8, 0x0, 0x3BF0FA4
	0x03BF0FA0 BL 0x1C5C684
	0x03BF0FA4 LDR X8, [X0 + 0xB8]
	0x03BF0FA8 LDR X1, [X21]
	0x03BF0FAC LDR X3, [X19]
	0x03BF0FB0 ADRP X22, 0x503000
	0x03BF0FB4 LDR X2, [X8]
	0x03BF0FB8 LDR X22, [X22 + 0xE00]
	0x03BF0FBC MOV X0, X20
	0x03BF0FC0 BL 0x227A8F4
	0x03BF0FC4 LDR X21, [X23]
	0x03BF0FC8 MOV X19, X0
	0x03BF0FCC LDR X8, [X21 + 0x38]
	0x03BF0FD0 CBNZ X8, 0x3BF0FE0
	0x03BF0FD4 MOV X0, X21
	0x03BF0FD8 BL 0x1C5C6E0
	0x03BF0FDC LDR X8, [X21 + 0x38]
	0x03BF0FE0 LDR X0, [X8 + 0x10]
	0x03BF0FE4 LDRB W8, [X0 + 0x135]
	0x03BF0FE8 TBNZ X8, 0x0, 0x3BF0FF0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x7F4000
	015 Move W8, [X19+1904]
	016 Move X27, X2
	017 Move X26, X1
	018 Move X29, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x52D000
	024 Move X0, [X0+1696]
	025 Call 0x1C17CF4
	026 Move X0, 0x504000
	027 Move X0, [X0+2000]
	028 Call 0x1C17CF4
	029 Move X0, 0x504000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x50C000
	033 Move X0, [X0+3168]
	034 Call 0x1C17CF4
	035 Move X0, 0x504000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0x504000
	039 Move X0, [X0+2096]
	040 Call 0x1C17CF4
	041 Move X0, 0x50F000
	042 Move X0, [X0+784]
	043 Call 0x1C17CF4
	044 Move X0, 0x505000
	045 Move X0, [X0+1544]
	046 Call 0x1C17CF4
	047 Move X0, 0x506000
	048 Move X0, [X0+928]
	049 Call 0x1C17CF4
	050 Move X0, 0x56F000
	051 Move X0, [X0+1240]
	052 Call 0x1C17CF4
	053 Move X0, 0x50D000
	054 Move X0, [X0+1936]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X19+1904], W8
	058 Compare X27, 0
	059 JumpIfEqual {446}
	060 Move X8, 0x50C000
	061 Move X8, [X8+3168]
	062 Move W1, [X27+24]
	063 Move X0, [X8]
	064 Call 0x1C17D6C
	065 Move X8, [X27+24]
	066 Move X21, X0
	067 Move [X31+24], X26
	068 Move [X31+8], X27
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, X31
	071 Move W19, W31
	072 And X8, X8, 0
	073 Add X22, X27, 32
	074 Add X24, X21, 32
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X22]
	077 Compare X0, 0
	078 JumpIfEqual {96}
	079 Move X1, X31
	080 Call "il2cpp_vm_object_is_inst", X0
	081 Compare X21, 0
	082 JumpIfEqual {446}
	083 Move X23, X0
	084 Compare X0, 0
	085 JumpIfEqual {92}
	086 Move X8, [X21]
	087 Move X0, X23
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {418}
	092 Move W8, [X21+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X24], X23
	095 Move W8, [X27+24]
	096 Compare X21, 0
	097 JumpIfEqual {446}
	098 Move W9, [X21+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X24], X31
	101 Add W19, W19, 1
	102 Add X20, X20, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X29
	106 Move X1, X31
	107 Move [X31], X29
	108 Call "il2cpp_vm_object_is_inst", X0
	109 Compare X0, 0
	110 JumpIfEqual {449}
	111 Move X8, [X0]
	112 Move X9, [X8+1880]
	113 Move X2, [X8+1888]
	114 Move W1, 60
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X23, X0
	117 Compare X0, 0
	118 JumpIfEqual {450}
	119 Move W8, [X23+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X31+20], W31
	122 Move X20, 0x504000
	123 Move X20, [X20+1728]
	124 Move W28, W31
	125 Move X19, X31
	126 Add X29, X21, 32
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X8, X23, W28
	129 Move X24, [X8+32]
	130 Compare X24, 0
	131 JumpIfEqual {421}
	132 Move X8, [X24]
	133 Move X9, [X8+424]
	134 Move X1, [X8+432]
	135 Move X0, X24
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X1, X0
	138 Move X0, X26
	139 Move X2, X31
	140 Call String.op_Inequality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {218}
	145 Move X8, [X24]
	146 Move X1, [X8+592]
	147 Move X9, [X8+584]
	148 Move X0, X24
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X25, X0
	151 Compare X0, 0
	152 JumpIfEqual {423}
	153 Move W8, [X25+24]
	154 Move W9, [X27+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X27, X31
	158 Add X22, X25, 32
	159 Move W8, [X21+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, [X20]
	162 Move X26, [X29]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X0, X26
	168 Move X1, X31
	169 Move X2, X31
	170 Call Type.op_Equality, X0, X1
	171 Move W8, [X25+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 Invalid "Jump target not found in method."
	177 Move X0, [X22]
	178 Compare X0, 0
	179 JumpIfEqual {414}
	180 Move X8, [X0]
	181 Move X9, [X8+472]
	182 Move X1, [X8+480]
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Compare X0, 0
	185 JumpIfEqual {413}
	186 Move X1, X31
	187 Call Type.get_IsValueType, X0
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {212}
	192 Move X0, [X22]
	193 Compare X0, 0
	194 JumpIfEqual {417}
	195 Move X8, [X0]
	196 Move X9, [X8+472]
	197 Move X1, [X8+480]
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move W8, [X21+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Compare X0, 0
	202 JumpIfEqual {416}
	203 Move X8, [X0]
	204 Move X1, [X29]
	205 Move X9, [X8+680]
	206 Move X2, [X8+688]
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {219}
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X27, X27, 1
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move W8, [X31+20]
	216 Add W8, W8, 1
	217 Move [X31+20], W8
	218 Move X24, X19
	219 Move X24, X19
	220 Move X26, [X31+24]
	221 Move X27, [X31+8]
	222 Move W8, [X23+24]
	223 Add W28, W28, 1
	224 Move X19, X24
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X29
	227 Move X1, X31
	228 Call "il2cpp_vm_object_is_inst", X0
	229 Compare X0, 0
	230 JumpIfEqual {424}
	231 Move W2, 60
	232 Move X1, X26
	233 Move X3, X31
	234 Move X4, X21
	235 Move X5, X31
	236 Move X6, X31
	237 Call Type.GetMethod, X0, X1, X2, X3, X4, X5
	238 Move X24, X0
	239 Move X24, X31
	240 Move [X31+20], W31
	241 Move W8, [X31+20]
	242 Move X29, [X31]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, X24
	245 Move X1, X31
	246 Move X2, X31
	247 Call MethodInfo.op_Inequality, X0, X1
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {260}
	252 Compare X24, 0
	253 JumpIfEqual {447}
	254 Move X0, X24
	255 Move X1, X29
	256 Move X2, X27
	257 Move X3, X31
	258 Call MethodBase.Invoke, X0, X1, X2
	259 Call _AndroidJNIHelper.Box, X0
	260 Move X23, X31
	261 Move X19, 0x504000
	262 Move X19, [X19+2760]
	263 Move W1, [X27+24]
	264 Move X0, [X19]
	265 Call 0x1C17D6C
	266 Compare X0, 0
	267 JumpIfEqual {446}
	268 Move W8, [X0+24]
	269 Move X22, X0
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X27, 0x504000
	272 Move X28, 0x504000
	273 Move X27, [X27+1728]
	274 Move X28, [X28+2096]
	275 Move X20, X31
	276 Add X25, X22, 32
	277 Add X26, X21, 32
	278 Compare X21, 0
	279 JumpIfEqual {446}
	280 Move W8, [X21+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, [X27]
	283 Move X24, [X26]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X0, X24
	289 Move X1, X31
	290 Move X2, X31
	291 Call Type.op_Equality, X0, X1
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {299}
	296 Move W8, [X22+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X0, [X28]
	299 Move W8, [X21+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, [X26]
	302 Compare X0, 0
	303 JumpIfEqual {446}
	304 Move X8, [X0]
	305 Move X9, [X8+360]
	306 Move X1, [X8+368]
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move W8, [X22+24]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move [X25], X0
	311 Add X20, X20, 1
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Compare X23, 0
	314 JumpIfNotEqual {426}
	315 Move X0, X29
	316 Call AndroidJavaProxy.GetRawProxy, X0
	317 Move X8, [X19]
	318 Move X21, X0
	319 Move W1, 7
	320 Move X0, X8
	321 Call 0x1C17D6C
	322 Move X19, [X31+24]
	323 Compare X0, 0
	324 JumpIfEqual {446}
	325 Move W8, [X0+24]
	326 Move X23, X0
	327 Compare W8, 0
	328 JumpIfEqual {532}
	329 Move X8, 0x56F000
	330 Move X8, [X8+1240]
	331 Move X0, X29
	332 Move X1, X31
	333 Move X8, [X8]
	334 Move [X23+32], X8
	335 Call "il2cpp_vm_object_is_inst", X0
	336 Compare X0, 0
	337 JumpIfEqual {342}
	338 Move X8, [X0]
	339 Move X9, [X8+360]
	340 Move X1, [X8+368]
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move W8, [X23+24]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move [X23+40], X0
	346 Move X9, 0x50D000
	347 Move X9, [X9+1936]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X9, [X9]
	350 Move [X23+48], X9
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move [X23+56], X19
	353 Move X8, 0x50F000
	354 Move X8, [X8+784]
	355 Move X9, 0x506000
	356 Move X1, X22
	357 Move X2, X31
	358 Move X8, [X8]
	359 Move X9, [X9+928]
	360 Move [X23+64], X8
	361 Move X0, [X9]
	362 Call String.Join, X0, X1
	363 Move W8, [X23+24]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move [X23+72], X0
	367 Move X8, 0x505000
	368 Move X8, [X8+1544]
	369 Move X19, 0x504000
	370 Move X22, 0x52D000
	371 Move X0, X23
	372 Move X8, [X8]
	373 Move X19, [X19+2000]
	374 Move X22, [X22+1696]
	375 Move X1, X31
	376 Move [X23+80], X8
	377 Call String.Concat, X0
	378 Move X8, [X19]
	379 Move X20, X0
	380 Move X0, X8
	381 Call 0x1C17F10
	382 Move X1, X20
	383 Move X2, X31
	384 Move X19, X0
	385 Call Exception..ctor, X0, X1
	386 Move X0, [X22]
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move W2, 1
	392 Move X0, X21
	393 Move X1, X19
	394 Call AndroidReflection.SetNativeExceptionOnProxy, X0, X1, X2
	395 Move X0, X31
	396 Move X20, [X31+112]
	397 Move X19, [X31+120]
	398 Move X22, [X31+96]
	399 Move X21, [X31+104]
	400 Move X24, [X31+80]
	401 Move X23, [X31+88]
	402 Move X26, [X31+64]
	403 Move X25, [X31+72]
	404 Move X28, [X31+48]
	405 Move X27, [X31+56]
	406 Move X29, [X31+32]
	407 Move X30, [X31+40]
	408 Add X31, X31, 128
	409 Return X0
	410 Call 0x1C17F28
	411 Call 0x1C17F28
	412 Call 0x1C17F28
	413 Call 0x1C17F20
	414 Call 0x1C17F20
	415 Call 0x1C17F28
	416 Call 0x1C17F20
	417 Call 0x1C17F20
	418 Call 0x1C17F44
	419 Move X1, X31
	420 Call 0x1C17DEC
	421 Call 0x1C17F20
	422 Call 0x1C17F28
	423 Call 0x1C17F20
	424 Move [X31], X29
	425 Call 0x1C17F20
	426 Move X0, 0x504000
	427 Move X0, [X0+2760]
	428 Call 0x1C17D08
	429 Move W1, 6
	430 Call 0x1C17D6C
	431 Move X21, X0
	432 Move X0, X29
	433 Move X1, X31
	434 Call "il2cpp_vm_object_is_inst", X0
	435 Move X8, X0
	436 Move X0, X31
	437 Compare X8, 0
	438 JumpIfEqual {444}
	439 Move X9, [X8]
	440 Move X0, X8
	441 Move X10, [X9+360]
	442 Move X1, [X9+368]
	443 NotImplemented "Instruction BLR not yet implemented."
	444 Compare X21, 0
	445 JumpIfNotEqual {478}
	446 Call 0x1C17F20
	447 Move [X31], X29
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Call 0x1C17F20
	451 Move X0, 0x56F000
	452 Move X0, [X0+1248]
	453 Call 0x1C17D08
	454 Move X23, X0
	455 Move X0, 0x56F000
	456 Move X0, [X0+1256]
	457 Call 0x1C17D08
	458 Move X2, X0
	459 Move X1, [X31+24]
	460 Move X0, X23
	461 Move X3, X31
	462 Call String.Concat, X0, X1, X2
	463 Move X23, X0
	464 Move X0, 0x504000
	465 Move X0, [X0+2000]
	466 Call 0x1C17D08
	467 Call 0x1C17F10
	468 Move X24, X0
	469 Move X1, X23
	470 Move X2, X31
	471 Call Exception..ctor, X0, X1
	472 Move X0, 0x56F000
	473 Move X0, [X0+1264]
	474 Call 0x1C17D08
	475 Move X1, X0
	476 Move X0, X24
	477 Call 0x1C17DEC
	478 Move W8, [X21+24]
	479 Compare W8, 0
	480 JumpIfEqual {532}
	481 Move [X21+32], X0
	482 Move X0, 0x50D000
	483 Move X0, [X0+1936]
	484 Call 0x1C17D08
	485 Move W8, [X21+24]
	486 NotImplemented "Instruction CMP not yet implemented."
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move [X21+40], X0
	489 Move X8, [X31+24]
	490 Move X0, 0x50F000
	491 Move [X21+48], X8
	492 Move X0, [X0+784]
	493 Call 0x1C17D08
	494 Move W8, [X21+24]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move [X21+56], X0
	497 Move X0, 0x506000
	498 Move X0, [X0+928]
	499 Call 0x1C17D08
	500 Move X1, X22
	501 Move X2, X31
	502 Call String.Join, X0, X1
	503 Move W8, [X21+24]
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move [X21+64], X0
	506 Move X0, 0x505000
	507 Move X0, [X0+1544]
	508 Call 0x1C17D08
	509 Move X2, X0
	510 Move W1, 5
	511 Move X0, X21
	512 Call 0x1994444
	513 Move X0, X21
	514 Move X1, X31
	515 Call String.Concat, X0
	516 Move X19, X0
	517 Move X0, 0x534000
	518 Move X0, [X0+3936]
	519 Call 0x1C17D08
	520 Call 0x1C17F10
	521 Move X1, X19
	522 Move X2, X23
	523 Move X3, X31
	524 Move X20, X0
	525 Call TargetInvocationException..ctor, X0, X1, X2
	526 Move X0, 0x56F000
	527 Move X0, [X0+1264]
	528 Call 0x1C17D08
	529 Move X1, X0
	530 Move X0, X20
	531 Call 0x1C17DEC
	532 Call 0x1C17F28
	533 Move [X31], X29
	534 Move X23, X0
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move X0, X23
	537 Call 0x3EB2AD0
	538 Move X23, X0
	539 Move X0, 0x534000
	540 Move X0, [X0+3936]
	541 Call 0x1C17D08
	542 Move X8, [X23]
	543 Move X1, [X8]
	544 Call 0x1C18270
	545 Move TEMP, X0
	546 And TEMP, TEMP, 1
	547 Compare TEMP, 1
	548 JumpIfNotEqual {554}
	549 Move X19, [X23]
	550 Call 0x3EB2AE0
	551 Compare X19, 0
	552 JumpIfEqual {446}
	553 Move X23, [X19+40]
	554 Move X0, 0x504000
	555 Move X0, [X0+2000]
	556 Call 0x1C17D08
	557 Move X8, [X23]
	558 Move X1, [X8]
	559 Call 0x1C18270
	560 Move TEMP, X0
	561 And TEMP, TEMP, 1
	562 Compare TEMP, 1
	563 JumpIfNotEqual {568}
	564 Move X23, [X23]
	565 Call 0x3EB2AE0
	566 Move X29, [X31]
	567 Move X27, [X31+8]
	568 Move W0, 8
	569 Call 0x3EB2AF0
	570 Move X8, [X23]
	571 Move [X0], X8
	572 Move X1, 0x2C5000
	573 Add X1, X1, 3672
	574 Move X2, X31
	575 Call 0x3EB2B00
	576 Move X23, X0
	577 Call 0x3EB2AE0
	578 Move X0, X23
	579 Call 0x1D2D690
	580 Call 0x1991590

Method: UnityEngine.AndroidJavaObject Invoke(System.String methodName, UnityEngine.AndroidJavaObject[] javaArgs)

Disassembly:
	0x03BF1BA0 MOVZ W8, 0x1
	0x03BF1BA4 STRB W8, [X19 + 0x773]
	0x03BF1BA8 ADD X22, X31, 0x0
	0x03BF1BAC SUB X19, X22, 0x10
	0x03BF1BB0 ADD X31, X19, 0x0
	0x03BF1BB4 MOV X0, X20
	0x03BF1BB8 BL 0x3BF09A0
	0x03BF1BBC LDR X8, [X21]
	0x03BF1BC0 STUR X0, [X22 - 0x10]
	0x03BF1BC4 LDR W9, [X8 + 0xE0]
	0x03BF1BC8 CBNZ W9, 0x3BF1BD8
	0x03BF1BCC MOV X0, X8
	0x03BF1BD0 BL 0x1C16DFC
	0x03BF1BD4 LDR X8, [X21]
	0x03BF1BD8 LDR X8, [X8 + 0xB8]
	0x03BF1BDC LDR X9, [X8]
	0x03BF1BE0 CBZ X9, 0x3BF1C0C
	0x03BF1BE4 LDR X0, [X9 + 0x18]
	0x03BF1BE8 LDR X1, [X8 + 0x8]
	0x03BF1BEC MOVZ W3, 0x1
	0x03BF1BF0 MOV X2, X19
	0x03BF1BF4 BL 0x3BED1E8
	0x03BF1BF8 ADD X31, X29, 0x0
	0x03BF1BFC LDP X20, X19, [X31 + 0x20]
	0x03BF1C00 LDP X22, X21, [X31 + 0x10]
	0x03BF1C04 LDP X29, X30, [X31], #0x30
	0x03BF1C08 RET
	0x03BF1C0C BL 0x1C16F20
	0x03BF1C10 STR X30, [X31 - 0x20]!
	0x03BF1C14 STP X20, X19, [X31 + 0x10]
	0x03BF1C18 ADRP X20, 0x7F2000
	0x03BF1C1C LDRB W8, [X20 + 0x774]
	0x03BF1C20 MOV X19, X0
	0x03BF1C24 TBNZ X8, 0x0, 0x3BF1C3C
	0x03BF1C28 ADRP X0, 0x56D000
	0x03BF1C2C LDR X0, [X0 + 0x5A8]
	0x03BF1C30 BL 0x1C16CF4
	0x03BF1C34 MOVZ W8, 0x1
	0x03BF1C38 STRB W8, [X20 + 0x774]
	0x03BF1C3C ADRP X20, 0x56D000
	0x03BF1C40 LDR X20, [X20 + 0x5A8]
	0x03BF1C44 CBZ X19, 0x3BF1C5C
	0x03BF1C48 LDR X8, [X19]
	0x03BF1C4C MOV X0, X19
	0x03BF1C50 LDP X9, X1, [X8 + 0x168]
	0x03BF1C54 BLR X9
	0x03BF1C58 B 0x3BF1C60
	0x03BF1C5C MOV X0, X31
	0x03BF1C60 LDR X1, [X20]
	0x03BF1C64 LDP X20, X19, [X31 + 0x10]
	0x03BF1C68 MOV X2, X31
	0x03BF1C6C LDR X30, [X31], #0x20
	0x03BF1C70 B 0x321B938
	0x03BF1C74 STR X30, [X31 - 0x10]!
	0x03BF1C78 BL 0x3BF09A0
	0x03BF1C7C LDR X30, [X31], #0x10
	0x03BF1C80 B 0x3BF1A28
	0x03BF1C84 STR X30, [X31 - 0x30]!
	0x03BF1C88 STP X22, X21, [X31 + 0x10]
	0x03BF1C8C STP X20, X19, [X31 + 0x20]
	0x03BF1C90 ADRP X20, 0x7F2000
	0x03BF1C94 ADRP X22, 0x56D000
	0x03BF1C98 ADRP X19, 0x56D000
	0x03BF1C9C ADRP X21, 0x52B000
	0x03BF1CA0 LDRB W8, [X20 + 0x775]
	0x03BF1CA4 LDR X22, [X22 + 0x5B0]
	0x03BF1CA8 LDR X19, [X19 + 0x588]
	0x03BF1CAC LDR X21, [X21 + 0xAB8]
	0x03BF1CB0 TBNZ X8, 0x0, 0x3BF1CF8
	0x03BF1CB4 ADRP X0, 0x52B000
	0x03BF1CB8 LDR X0, [X0 + 0xAB8]
	0x03BF1CBC BL 0x1C16CF4
	0x03BF1CC0 ADRP X0, 0x56D000
	0x03BF1CC4 LDR X0, [X0 + 0x588]
	0x03BF1CC8 BL 0x1C16CF4
	0x03BF1CCC ADRP X0, 0x56D000
	0x03BF1CD0 LDR X0, [X0 + 0x5B8]
	0x03BF1CD4 BL 0x1C16CF4
	0x03BF1CD8 ADRP X0, 0x56D000
	0x03BF1CDC LDR X0, [X0 + 0x5B0]
	0x03BF1CE0 BL 0x1C16CF4
	0x03BF1CE4 ADRP X0, 0x56D000
	0x03BF1CE8 LDR X0, [X0 + 0x5C0]
	0x03BF1CEC BL 0x1C16CF4
	0x03BF1CF0 MOVZ W8, 0x1
	0x03BF1CF4 STRB W8, [X20 + 0x775]
	0x03BF1CF8 LDR X0, [X22]
	0x03BF1CFC BL 0x3BE5BAC
	0x03BF1D00 LDR X8, [X19]
	0x03BF1D04 MOV X19, X0
	0x03BF1D08 MOV X0, X8
	0x03BF1D0C BL 0x1C16F10
	0x03BF1D10 MOV X1, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x7F3000
	012 Move W8, [X22+1905]
	013 Move X20, X2
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x52C000
	021 Move X0, [X0+2576]
	022 Call 0x1C17CF4
	023 Move X0, 0x503000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1905], W8
	028 Compare X20, 0
	029 JumpIfEqual {100}
	030 Move X8, 0x503000
	031 Move X8, [X8+2512]
	032 Move W1, [X20+24]
	033 Move X0, [X8]
	034 Call 0x1C17D6C
	035 Move X8, [X20+24]
	036 Move X22, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X25, 0x52C000
	039 Move X25, [X25+2576]
	040 Move X24, X31
	041 And X8, X8, 0
	042 Add X26, X22, 32
	043 Add X27, X20, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X27]
	046 Call _AndroidJNIHelper.Unbox, X0
	047 Compare X22, 0
	048 JumpIfEqual {100}
	049 Move X23, X0
	050 Compare X0, 0
	051 JumpIfEqual {70}
	052 Move X8, [X22]
	053 Move X0, X23
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {101}
	058 Move W8, [X22+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X26], X23
	061 Move X9, [X23]
	062 Move X8, [X25]
	063 Move W11, [X9+304]
	064 Move W10, [X8+304]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, [X9+200]
	067 Add X9, X9, X10
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W8, [X22+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X26], X23
	073 Move W8, [X20+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X27]
	076 Compare X0, 0
	077 JumpIfEqual {79}
	078 Call AndroidJavaObject.Dispose, X0
	079 Move W8, [X20+24]
	080 Add X24, X24, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, [X21]
	083 Move X0, X21
	084 Move X1, X19
	085 Move X2, X22
	086 Move X4, [X8+376]
	087 Move X3, [X8+384]
	088 Move X20, [X31+64]
	089 Move X19, [X31+72]
	090 Move X22, [X31+48]
	091 Move X21, [X31+56]
	092 Move X24, [X31+32]
	093 Move X23, [X31+40]
	094 Move X26, [X31+16]
	095 Move X25, [X31+24]
	096 Move X30, [X31+80]
	097 Move X27, [X31+88]
	098 CallNoReturn X4
	099 Call 0x1C17F28
	100 Call 0x1C17F20
	101 Call 0x1C17F44
	102 Move X1, X31
	103 Call 0x1C17DEC

Method: System.IntPtr Invoke(System.String methodName, System.IntPtr javaArgs)

Disassembly:
	0x03BF0218 B.EQ 0x3BF07C4
	0x03BF021C ADRP X21, 0x506000
	0x03BF0220 LDR X21, [X21 + 0x978]
	0x03BF0224 LDR X9, [X21]
	0x03BF0228 CMP X8, X9
	0x03BF022C B.EQ 0x3BF0858
	0x03BF0230 ADRP X21, 0x505000
	0x03BF0234 LDR X21, [X21 + 0x170]
	0x03BF0238 LDR X9, [X21]
	0x03BF023C CMP X8, X9
	0x03BF0240 B.NE 0x3BF0908
	0x03BF0244 ADRP X8, 0x503000
	0x03BF0248 LDR X8, [X8 + 0x9D0]
	0x03BF024C MOVZ W1, 0x1
	0x03BF0250 LDR X0, [X8]
	0x03BF0254 BL 0x1C16D6C
	0x03BF0258 LDR X8, [X19]
	0x03BF025C LDR X1, [X21]
	0x03BF0260 LDR X8, [X8 + 0x40]
	0x03BF0264 LDR X9, [X1 + 0x40]
	0x03BF0268 CMP X8, X9
	0x03BF026C B.NE 0x3BF08F0
	0x03BF0270 MOV X20, X0
	0x03BF0274 MOV X0, X19
	0x03BF0278 BL 0x1C16E08
	0x03BF027C LDRH W8, [X0]
	0x03BF0280 LDR X0, [X21]
	0x03BF0284 ADD X1, X31, 0x8
	0x03BF0288 STRH W8, [X31 + 0x8]
	0x03BF028C BL 0x1C16E04
	0x03BF0290 CBZ X20, 0x3BF08EC
	0x03BF0294 MOV X19, X0
	0x03BF0298 CBZ X0, 0x3BF02B0
	0x03BF029C LDR X8, [X20]
	0x03BF02A0 MOV X0, X19
	0x03BF02A4 LDR X1, [X8 + 0x40]
	0x03BF02A8 BL 0x1C16E00
	0x03BF02AC CBZ X0, 0x3BF08FC
	0x03BF02B0 LDR W8, [X20 + 0x18]
	0x03BF02B4 CBZ W8, 0x3BF08F8
	0x03BF02B8 STR X19, [X20 + 0x20]
	0x03BF02BC ADRP X8, 0x52C000
	0x03BF02C0 LDR X8, [X8 + 0xA10]
	0x03BF02C4 LDR X0, [X8]
	0x03BF02C8 BL 0x1C16F10
	0x03BF02CC ADRP X8, 0x56E000
	0x03BF02D0 LDR X8, [X8 + 0x528]
	0x03BF02D4 B 0x3BF0644
	0x03BF02D8 ADRP X21, 0x505000
	0x03BF02DC LDR X21, [X21 + 0x278]
	0x03BF02E0 LDR X8, [X19]
	0x03BF02E4 LDR X9, [X21]
	0x03BF02E8 CMP X8, X9
	0x03BF02EC B.EQ 0x3BF0458
	0x03BF02F0 ADRP X9, 0x503000
	0x03BF02F4 LDR X9, [X9 + 0x990]
	0x03BF02F8 LDR X10, [X9]
	0x03BF02FC LDRB W9, [X8 + 0x130]
	0x03BF0300 LDRB W11, [X10 + 0x130]
	0x03BF0304 CMP W9, W11
	0x03BF0308 B.CC 0x3BF0320
	0x03BF030C LDR X12, [X8 + 0xC8]
	0x03BF0310 ADD X11, X12, X11, 0x3, LSL
	0x03BF0314 LDUR X11, [X11 - 0x8]
	0x03BF0318 CMP X11, X10
	0x03BF031C B.EQ 0x3BF0584
	0x03BF0320 ADRP X10, 0x52C000
	0x03BF0324 LDR X10, [X10 + 0xA10]
	0x03BF0328 LDR X10, [X10]
	0x03BF032C LDRB W11, [X10 + 0x130]
	0x03BF0330 CMP W9, W11
	0x03BF0334 B.CC 0x3BF034C
	0x03BF0338 LDR X12, [X8 + 0xC8]
	0x03BF033C ADD X11, X12, X11, 0x3, LSL
	0x03BF0340 LDUR X11, [X11 - 0x8]
	0x03BF0344 CMP X11, X10
	0x03BF0348 B.EQ 0x3BF0664
	0x03BF034C ADRP X10, 0x503000
	0x03BF0350 LDR X10, [X10 + 0xEF0]
	0x03BF0354 LDR X10, [X10]
	0x03BF0358 LDRB W11, [X10 + 0x130]
	0x03BF035C CMP W9, W11
	0x03BF0360 B.CC 0x3BF0378
	0x03BF0364 LDR X12, [X8 + 0xC8]
	0x03BF0368 ADD X11, X12, X11, 0x3, LSL
	0x03BF036C LDUR X11, [X11 - 0x8]
	0x03BF0370 CMP X11, X10
	0x03BF0374 B.EQ 0x3BF0678
	0x03BF0378 ADRP X10, 0x52C000
	0x03BF037C LDR X10, [X10 + 0xAB8]
	0x03BF0380 LDR X10, [X10]
	0x03BF0384 LDRB W11, [X10 + 0x130]
	0x03BF0388 CMP W9, W11
	0x03BF038C B.CC 0x3BF03A4
	0x03BF0390 LDR X9, [X8 + 0xC8]
	0x03BF0394 ADD X9, X9, X11, 0x3, LSL
	0x03BF0398 LDUR X9, [X9 - 0x8]
	0x03BF039C CMP X9, X10
	0x03BF03A0 B.EQ 0x3BF0684
	0x03BF03A4 ADRP X9, 0x56E000
	0x03BF03A8 LDR X9, [X9 + 0x298]
	0x03BF03AC MOV X0, X19
	0x03BF03B0 LDR X9, [X9]
	0x03BF03B4 CMP X8, X9
	0x03BF03B8 B.NE 0x3BF090C
	0x03BF03BC BL 0x3BE3344
	0x03BF03C0 B 0x3BF068C
	0x03BF03C4 ADRP X8, 0x503000
	0x03BF03C8 LDR X8, [X8 + 0x9D0]
	0x03BF03CC MOVZ W1, 0x1
	0x03BF03D0 LDR X0, [X8]
	0x03BF03D4 BL 0x1C16D6C
	0x03BF03D8 LDR X8, [X19]
	0x03BF03DC LDR X1, [X21]
	0x03BF03E0 LDR X8, [X8 + 0x40]
	0x03BF03E4 LDR X9, [X1 + 0x40]
	0x03BF03E8 CMP X8, X9
	0x03BF03EC B.NE 0x3BF08F0
	0x03BF03F0 MOV X20, X0
	0x03BF03F4 MOV X0, X19
	0x03BF03F8 BL 0x1C16E08
	0x03BF03FC LDR W8, [X0]
	0x03BF0400 LDR X0, [X21]
	0x03BF0404 ADD X1, X31, 0x8
	0x03BF0408 STR W8, [X31 + 0x8]
	0x03BF040C BL 0x1C16E04
	0x03BF0410 CBZ X20, 0x3BF08EC
	0x03BF0414 MOV X19, X0
	0x03BF0418 CBZ X0, 0x3BF0430
	0x03BF041C LDR X8, [X20]
	0x03BF0420 MOV X0, X19
	0x03BF0424 LDR X1, [X8 + 0x40]
	0x03BF0428 BL 0x1C16E00
	0x03BF042C CBZ X0, 0x3BF08FC
	0x03BF0430 LDR W8, [X20 + 0x18]
	0x03BF0434 CBZ W8, 0x3BF08F8
	0x03BF0438 STR X19, [X20 + 0x20]
	0x03BF043C ADRP X8, 0x52C000
	0x03BF0440 LDR X8, [X8 + 0xA10]
	0x03BF0444 LDR X0, [X8]
	0x03BF0448 BL 0x1C16F10
	0x03BF044C ADRP X8, 0x56E000
	0x03BF0450 LDR X8, [X8 + 0x538]
	0x03BF0454 B 0x3BF0644
	0x03BF0458 ADRP X8, 0x503000
	0x03BF045C LDR X8, [X8 + 0x9D0]
	0x03BF0460 MOVZ W1, 0x1
	0x03BF0464 LDR X0, [X8]
	0x03BF0468 BL 0x1C16D6C
	0x03BF046C CBZ X0, 0x3BF08EC
	0x03BF0470 LDR X1, [X21]
	0x03BF0474 LDR X8, [X19]
	0x03BF0478 CMP X8, X1
	0x03BF047C B.NE 0x3BF08F0
	0x03BF0480 LDR X8, [X0]
	0x03BF0484 MOV X20, X0
	0x03BF0488 MOV X0, X19
	0x03BF048C LDR X1, [X8 + 0x40]
	0x03BF0490 BL 0x1C16E00
	0x03BF0494 CBZ X0, 0x3BF08FC
	0x03BF0498 LDR X1, [X21]
	0x03BF049C LDR X8, [X19]
	0x03BF04A0 CMP X8, X1
	0x03BF04A4 B.NE 0x3BF08F0
	0x03BF04A8 LDR W8, [X20 + 0x18]
	0x03BF04AC CBZ W8, 0x3BF08F8
	0x03BF04B0 STR X19, [X20 + 0x20]
	0x03BF04B4 ADRP X8, 0x52C000
	0x03BF04B8 LDR X8, [X8 + 0xA10]
	0x03BF04BC LDR X0, [X8]
	0x03BF04C0 BL 0x1C16F10
	0x03BF04C4 ADRP X8, 0x56E000
	0x03BF04C8 LDR X8, [X8 + 0x510]
	0x03BF04CC B 0x3BF0644
	0x03BF04D0 ADRP X8, 0x503000
	0x03BF04D4 LDR X8, [X8 + 0x9D0]
	0x03BF04D8 MOVZ W1, 0x1
	0x03BF04DC LDR X0, [X8]
	0x03BF04E0 BL 0x1C16D6C
	0x03BF04E4 LDR X8, [X19]
	0x03BF04E8 LDR X1, [X21]
	0x03BF04EC LDR X8, [X8 + 0x40]
	0x03BF04F0 LDR X9, [X1 + 0x40]
	0x03BF04F4 CMP X8, X9
	0x03BF04F8 B.NE 0x3BF08F0
	0x03BF04FC MOV X20, X0
	0x03BF0500 MOV X0, X19
	0x03BF0504 BL 0x1C16E08
	0x03BF0508 LDRB W8, [X0]
	0x03BF050C LDR X0, [X21]
	0x03BF0510 ADD X1, X31, 0x8
	0x03BF0514 STRB W8, [X31 + 0x8]
	0x03BF0518 BL 0x1C16E04
	0x03BF051C CBZ X20, 0x3BF08EC
	0x03BF0520 MOV X19, X0
	0x03BF0524 CBZ X0, 0x3BF053C
	0x03BF0528 LDR X8, [X20]
	0x03BF052C MOV X0, X19
	0x03BF0530 LDR X1, [X8 + 0x40]
	0x03BF0534 BL 0x1C16E00
	0x03BF0538 CBZ X0, 0x3BF08FC
	0x03BF053C LDR W8, [X20 + 0x18]
	0x03BF0540 CBZ W8, 0x3BF08F8
	0x03BF0544 STR X19, [X20 + 0x20]
	0x03BF0548 ADRP X8, 0x52C000
	0x03BF054C LDR X8, [X8 + 0xA10]
	0x03BF0550 LDR X0, [X8]
	0x03BF0554 BL 0x1C16F10
	0x03BF0558 ADRP X8, 0x56E000
	0x03BF055C LDR X8, [X8 + 0x500]
	0x03BF0560 B 0x3BF0644
	0x03BF0564 ADRP X8, 0x503000
	0x03BF0568 LDR X8, [X8 + 0x9D0]
	0x03BF056C MOVZ W1, 0x1
	0x03BF0570 LDR X0, [X8]
	0x03BF0574 BL 0x1C16D6C
	0x03BF0578 ADRP X21, 0x52C000
	0x03BF057C LDR X21, [X21 + 0x6B0]
	0x03BF0580 B 0x3BF05C8
	0x03BF0584 LDR X8, [X19 + 0x18]
	0x03BF0588 CBZ X8, 0x3BF08EC
	0x03BF058C LDR X19, [X8 + 0x18]
	0x03BF0590 ADRP X8, 0x52C000
	0x03BF0594 LDR X8, [X8 + 0xA10]
	0x03BF0598 LDR X0, [X8]
	0x03BF059C BL 0x1C16F10
	0x03BF05A0 MOV X1, X19
	0x03BF05A4 MOV X20, X0
	0x03BF05A8 BL 0x3BF1930
	0x03BF05AC MOV X0, X20
	0x03BF05B0 B 0x3BF0668
	0x03BF05B4 ADRP X8, 0x503000
	0x03BF05B8 LDR X8, [X8 + 0x9D0]
	0x03BF05BC MOVZ W1, 0x1
	0x03BF05C0 LDR X0, [X8]
	0x03BF05C4 BL 0x1C16D6C
	0x03BF05C8 LDR X8, [X19]
	0x03BF05CC LDR X1, [X21]
	0x03BF05D0 LDR X8, [X8 + 0x40]
	0x03BF05D4 LDR X9, [X1 + 0x40]
	0x03BF05D8 CMP X8, X9
	0x03BF05DC B.NE 0x3BF08F0
	0x03BF05E0 MOV X20, X0
	0x03BF05E4 MOV X0, X19
	0x03BF05E8 BL 0x1C16E08
	0x03BF05EC LDRB W8, [X0]
	0x03BF05F0 LDR X0, [X21]
	0x03BF05F4 ADD X1, X31, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x7F4000
	010 Move W8, [X22+1906]
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x52D000
	019 Move X0, [X0+2568]
	020 Call 0x1C17CF4
	021 Move X0, 0x52D000
	022 Move X0, [X0+2576]
	023 Call 0x1C17CF4
	024 Move X0, 0x504000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x56F000
	028 Move X0, [X0+1232]
	029 Call 0x1C17CF4
	030 Move X0, 0x558000
	031 Move X0, [X0+688]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1906], W8
	035 Move X0, X21
	036 Move X1, X31
	037 Move X2, X31
	038 Call IntPtr.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {95}
	043 Move X0, X21
	044 Call AndroidJNISafe.GetArrayLength, X0
	045 Compare W0, 0
	046 JumpIfEqual {95}
	047 Move W24, W0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, 0x558000
	050 Move X8, [X8+688]
	051 Move X0, X20
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call String.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {133}
	059 Move X0, X21
	060 Move W1, W31
	061 Call AndroidJNISafe.GetObjectArrayElement, X0, X1
	062 Move X1, X31
	063 Move X2, X31
	064 Move X20, X0
	065 Call IntPtr.op_Equality, X0, X1
	066 Move X21, X31
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {78}
	071 Move X8, 0x52D000
	072 Move X8, [X8+2576]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X1, X20
	076 Move X21, X0
	077 Call AndroidJavaObject..ctor, X0, X1
	078 Move X8, [X19]
	079 Move X0, X19
	080 Move X1, X21
	081 Move X9, [X8+424]
	082 Move X2, [X8+432]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 And W0, W0, 1
	091 Move X30, [X31+64]
	092 Move X25, [X31+72]
	093 Call AndroidJNIHelper.Box, X0
	094 Return X0
	095 Move X8, 0x56F000
	096 Move X8, [X8+1232]
	097 Move X0, X20
	098 Move X2, X31
	099 Move X1, [X8]
	100 Call String.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {120}
	105 Move X8, [X19]
	106 Move X0, X19
	107 Move X9, [X8+440]
	108 Move X1, [X8+448]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Call AndroidJNIHelper.Box, X0
	119 Return X0
	120 Move X8, 0x52D000
	121 Move X8, [X8+2568]
	122 Move W1, W31
	123 Move X0, [X8]
	124 Call 0x1C17D6C
	125 Move X22, X0
	126 Move X8, 0x52D000
	127 Move X8, [X8+2568]
	128 Move W1, W24
	129 Move X0, [X8]
	130 Call 0x1C17D6C
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X22, X0
	133 Move X8, 0x52D000
	134 Move X8, [X8+2568]
	135 Move W1, 1
	136 Move X0, [X8]
	137 Call 0x1C17D6C
	138 Move X22, X0
	139 Move X23, X31
	140 Move W25, W24
	141 Move X0, X21
	142 Move W1, W23
	143 Call AndroidJNISafe.GetObjectArrayElement, X0, X1
	144 Move X1, X31
	145 Move X2, X31
	146 Move X24, X0
	147 Call IntPtr.op_Inequality, X0, X1
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {165}
	152 Move X0, X24
	153 Call AndroidJavaObject.AndroidJavaObjectDeleteLocalRef, X0
	154 Compare X22, 0
	155 JumpIfEqual {238}
	156 Move X24, X0
	157 Compare X0, 0
	158 JumpIfEqual {168}
	159 Move X8, [X22]
	160 Move X0, X24
	161 Move X1, [X8+64]
	162 Call 0x1C17E00
	163 Compare X0, 0
	164 JumpIfNotEqual {168}
	165 Compare X22, 0
	166 JumpIfEqual {238}
	167 Move X24, X31
	168 Move W8, [X22+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add X8, X22, X23
	171 Add X23, X23, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move [X8+32], X24
	174 Move X8, [X19]
	175 Move X0, X19
	176 Move X1, X20
	177 Move X2, X22
	178 Move X9, [X8+392]
	179 Move X3, [X8+400]
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Compare X0, 0
	182 JumpIfEqual {188}
	183 Move X8, [X0+16]
	184 Move X19, X0
	185 Compare X8, 0
	186 JumpIfEqual {189}
	187 Move X20, [X8+24]
	188 Move X21, X31
	189 Move X20, X31
	190 Move X21, 0x7F4000
	191 Move X8, [X21+608]
	192 Compare X8, 0
	193 JumpIfNotEqual {199}
	194 Move X0, -51138560
	195 Add X0, X0, 565
	196 Call 0x1C17CB8
	197 Move X8, X0
	198 Move [X21+608], X0
	199 Move X0, X20
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move X21, X0
	202 Move X20, X31
	203 Move X10, 0x504000
	204 Move X8, [X19]
	205 Move X10, [X10+3584]
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X1, [X10]
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X19
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X19
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Compare X20, 0
	227 JumpIfNotEqual {243}
	228 Move X0, X21
	229 Move X20, [X31+48]
	230 Move X19, [X31+56]
	231 Move X22, [X31+32]
	232 Move X21, [X31+40]
	233 Move X24, [X31+16]
	234 Move X23, [X31+24]
	235 Move X30, [X31+64]
	236 Move X25, [X31+72]
	237 Return X0
	238 Call 0x1C17F20
	239 Call 0x1C17F28
	240 Call 0x1C17F44
	241 Move X1, X31
	242 Call 0x1C17DEC
	243 Move X0, X20
	244 Call 0x1C17F18
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X21, X0
	247 Move X0, X21
	248 Call 0x3EB2AD0
	249 Move X20, [X0]
	250 Call 0x3EB2AE0
	251 Move X21, X31
	252 Move X20, X31
	253 Move X21, X0
	254 Move X10, 0x504000
	255 Move X8, [X19]
	256 Move X10, [X10+3584]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Move X1, [X10]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move X0, X19
	268 Move W2, W31
	269 Call 0x1C5D788
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Add X8, X8, X9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X19
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X20, 0
	278 JumpIfNotEqual {281}
	279 Move X0, X21
	280 Call 0x1D2D690
	281 Move X0, X20
	282 Call 0x1C17F18
	283 Call 0x1991590

Method: System.Boolean equals(UnityEngine.AndroidJavaObject obj)

Disassembly:
	0x03BF2AFC LDRB W8, [X20 + 0x77F]
	0x03BF2B00 LDR X21, [X21 + 0xA10]
	0x03BF2B04 MOV X19, X1
	0x03BF2B08 TBNZ X8, 0x0, 0x3BF2B2C
	0x03BF2B0C ADRP X0, 0x52A000
	0x03BF2B10 LDR X0, [X0 + 0xA10]
	0x03BF2B14 BL 0x1C16CF4
	0x03BF2B18 ADRP X0, 0x501000
	0x03BF2B1C LDR X0, [X0 + 0xA28]
	0x03BF2B20 BL 0x1C16CF4
	0x03BF2B24 MOVZ W8, 0x1
	0x03BF2B28 STRB W8, [X20 + 0x77F]
	0x03BF2B2C LDR X8, [X21]
	0x03BF2B30 LDR X8, [X8 + 0xB8]
	0x03BF2B34 LDRB W8, [X8]
	0x03BF2B38 CBZ W8, 0x3BF2B68
	0x03BF2B3C ADRP X8, 0x501000
	0x03BF2B40 LDR X8, [X8 + 0xA28]
	0x03BF2B44 LDR X0, [X8]
	0x03BF2B48 LDR W8, [X0 + 0xE0]
	0x03BF2B4C CBNZ W8, 0x3BF2B54
	0x03BF2B50 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {11}
	007 Move X8, [X1+16]
	008 Compare X8, 0
	009 JumpIfEqual {11}
	010 Move X19, [X8+24]
	011 Move X19, X31
	012 Move X21, 0x7F2000
	013 Move X2, [X21+624]
	014 Move X20, [X0+24]
	015 Compare X2, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51187712
	018 Add X0, X0, 1164
	019 Call 0x1C17CB8
	020 Move X2, X0
	021 Move [X21+624], X0
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 CallNoReturn X2

Method: System.Int32 hashCode()

Disassembly:
	0x03BF2B54 MOV X0, X19
	0x03BF2B58 LDP X20, X19, [X31 + 0x10]
	0x03BF2B5C MOV X1, X31
	0x03BF2B60 LDP X30, X21, [X31], #0x20
	0x03BF2B64 B 0x3C06048
	0x03BF2B68 LDP X20, X19, [X31 + 0x10]
	0x03BF2B6C LDP X30, X21, [X31], #0x20
	0x03BF2B70 RET
	0x03BF2B74 STR X30, [X31 - 0x60]!
	0x03BF2B78 STP X28, X27, [X31 + 0x10]
	0x03BF2B7C STP X26, X25, [X31 + 0x20]
	0x03BF2B80 STP X24, X23, [X31 + 0x30]
	0x03BF2B84 STP X22, X21, [X31 + 0x40]
	0x03BF2B88 STP X20, X19, [X31 + 0x50]
	0x03BF2B8C ADRP X23, 0x7F1000
	0x03BF2B90 ADRP X24, 0x52A000
	0x03BF2B94 LDRB W8, [X23 + 0x780]
	0x03BF2B98 LDR X24, [X24 + 0xA10]
	0x03BF2B9C MOV X22, X4
	0x03BF2BA0 MOV X19, X3
	0x03BF2BA4 MOV X20, X2
	0x03BF2BA8 MOV X21, X1
	0x03BF2BAC TBNZ X8, 0x0, 0x3BF2C24
	0x03BF2BB0 ADRP X0, 0x52A000
	0x03BF2BB4 LDR X0, [X0 + 0xA10]
	0x03BF2BB8 BL 0x1C16CF4
	0x03BF2BBC ADRP X0, 0x501000
	0x03BF2BC0 LDR X0, [X0 + 0xA28]
	0x03BF2BC4 BL 0x1C16CF4
	0x03BF2BC8 ADRP X0, 0x501000
	0x03BF2BCC LDR X0, [X0 + 0x8F0]
	0x03BF2BD0 BL 0x1C16CF4
	0x03BF2BD4 ADRP X0, 0x501000
	0x03BF2BD8 LDR X0, [X0 + 0xAC8]
	0x03BF2BDC BL 0x1C16CF4
	0x03BF2BE0 ADRP X0, 0x56C000
	0x03BF2BE4 LDR X0, [X0 + 0x608]
	0x03BF2BE8 BL 0x1C16CF4
	0x03BF2BEC ADRP X0, 0x501000
	0x03BF2BF0 LDR X0, [X0 + 0x838]
	0x03BF2BF4 BL 0x1C16CF4
	0x03BF2BF8 ADRP X0, 0x56C000
	0x03BF2BFC LDR X0, [X0 + 0x610]
	0x03BF2C00 BL 0x1C16CF4
	0x03BF2C04 ADRP X0, 0x50C000
	0x03BF2C08 LDR X0, [X0 + 0xCD8]
	0x03BF2C0C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Move X19, 0x7F2000
	009 Move X21, 0x52B000
	010 Move W8, [X19+1907]
	011 Move X21, [X21+2744]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x56D000
	018 Move X0, [X0+1440]
	019 Call 0x1C17CF4
	020 Move X0, 0x52B000
	021 Move X0, [X0+2744]
	022 Call 0x1C17CF4
	023 Move X0, 0x52B000
	024 Move X0, [X0+1720]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1907], W8
	028 Add X22, X31, 0
	029 Subtract X19, X22, 16
	030 Add X31, X19, 0
	031 Move X0, X20
	032 Call AndroidJavaProxy.GetRawProxy, X0
	033 Move X8, [X21]
	034 Move [X22-16], X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X8, [X21]
	041 Move X8, [X8+184]
	042 Move X9, [X8]
	043 Compare X9, 0
	044 JumpIfEqual {58}
	045 Move X0, [X9+24]
	046 Move X1, [X8+8]
	047 Move W3, 1
	048 Move X2, X19
	049 Call AndroidJNISafe.CallStaticIntMethod, X0, X1, X2
	050 Add X31, X29, 0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X29, [X31+48]
	056 Move X30, [X31+56]
	057 Return X0
	058 Call 0x1C17F20

Method: System.String toString()

Disassembly:
	0x03BF2C10 ADRP X0, 0x508000
	0x03BF2C14 LDR X0, [X0 + 0xD58]
	0x03BF2C18 BL 0x1C16CF4
	0x03BF2C1C MOVZ W8, 0x1
	0x03BF2C20 STRB W8, [X23 + 0x780]
	0x03BF2C24 LDR X8, [X24]
	0x03BF2C28 LDR X8, [X8 + 0xB8]
	0x03BF2C2C LDRB W8, [X8]
	0x03BF2C30 CBZ W8, 0x3BF2D64
	0x03BF2C34 ADRP X8, 0x501000
	0x03BF2C38 LDR X8, [X8 + 0x8F0]
	0x03BF2C3C LDR X0, [X8]
	0x03BF2C40 BL 0x1C16F10
	0x03BF2C44 MOV X1, X31
	0x03BF2C48 MOV X23, X0
	0x03BF2C4C BL 0x3231AC4
	0x03BF2C50 CBZ X22, 0x3BF2E04
	0x03BF2C54 LDR X8, [X22 + 0x18]
	0x03BF2C58 CMP W8, 0x1
	0x03BF2C5C B.LT 0x3BF2CE4
	0x03BF2C60 ADRP X27, 0x501000
	0x03BF2C64 ADRP X28, 0x508000
	0x03BF2C68 LDR X27, [X27 + 0x838]
	0x03BF2C6C LDR X28, [X28 + 0xD58]
	0x03BF2C70 MOV X25, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7F2000
	005 Move W8, [X20+1908]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x56D000
	012 Move X0, [X0+1448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1908], W8
	016 Move X20, 0x56D000
	017 Move X20, [X20+1448]
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+360]
	023 Move X1, [X8+368]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, X31
	026 Move X1, [X20]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Call String.Concat, X0, X1
	032 Return X0

Method: UnityEngine.AndroidJavaObject GetProxyObject()

Disassembly:
	0x03BF2C74 AND X8, X8, 0x0
	0x03BF2C78 ADD X26, X22, 0x20
	0x03BF2C7C CMP X25, W8, UXTW
	0x03BF2C80 B.CS 0x3BF2E08

ISIL:
	001 Move [X31-16], X30
	002 Call AndroidJavaProxy.GetRawProxy, X0
	003 Move X30, [X31+16]
	004 Call AndroidJavaObject.AndroidJavaObjectDeleteLocalRef, X0
	005 Return X0

Method: System.IntPtr GetRawProxy()

Disassembly:
	0x03BF19A0 BL 0x1C16F10
	0x03BF19A4 MOV X1, X20
	0x03BF19A8 MOV X22, X0
	0x03BF19AC BL 0x3BEEED8
	0x03BF19B0 STR X22, [X19 + 0x10]
	0x03BF19B4 LDR X0, [X23]
	0x03BF19B8 BL 0x1C16F10
	0x03BF19BC MOV X1, X21
	0x03BF19C0 MOV X20, X0
	0x03BF19C4 BL 0x3BEEED8
	0x03BF19C8 STR X20, [X19 + 0x18]
	0x03BF19CC MOV X0, X21
	0x03BF19D0 LDP X20, X19, [X31 + 0x20]
	0x03BF19D4 LDP X22, X21, [X31 + 0x10]
	0x03BF19D8 LDP X30, X23, [X31], #0x30
	0x03BF19DC B 0x3BEBA40
	0x03BF19E0 ADRP X0, 0x502000
	0x03BF19E4 LDR X0, [X0 + 0x7D0]
	0x03BF19E8 BL 0x1C16D08
	0x03BF19EC BL 0x1C16F10
	0x03BF19F0 MOV X19, X0
	0x03BF19F4 ADRP X0, 0x56D000
	0x03BF19F8 LDR X0, [X0 + 0x590]
	0x03BF19FC BL 0x1C16D08
	0x03BF1A00 MOV X1, X0
	0x03BF1A04 MOV X0, X19
	0x03BF1A08 MOV X2, X31
	0x03BF1A0C BL 0x33B2C70
	0x03BF1A10 ADRP X0, 0x56D000
	0x03BF1A14 LDR X0, [X0 + 0x598]
	0x03BF1A18 BL 0x1C16D08
	0x03BF1A1C MOV X1, X0
	0x03BF1A20 MOV X0, X19
	0x03BF1A24 BL 0x1C16DEC
	0x03BF1A28 STP X30, X21, [X31 - 0x20]!
	0x03BF1A2C STP X20, X19, [X31 + 0x10]
	0x03BF1A30 ADRP X20, 0x7F2000
	0x03BF1A34 ADRP X21, 0x52B000
	0x03BF1A38 LDRB W8, [X20 + 0x785]
	0x03BF1A3C LDR X21, [X21 + 0xA10]
	0x03BF1A40 MOV X19, X0
	0x03BF1A44 TBNZ X8, 0x0, 0x3BF1A5C
	0x03BF1A48 ADRP X0, 0x52B000
	0x03BF1A4C LDR X0, [X0 + 0xA10]
	0x03BF1A50 BL 0x1C16CF4
	0x03BF1A54 MOVZ W8, 0x1
	0x03BF1A58 STRB W8, [X20 + 0x785]
	0x03BF1A5C LDR X0, [X21]
	0x03BF1A60 BL 0x1C16F10
	0x03BF1A64 MOV X20, X0
	0x03BF1A68 MOV X1, X19
	0x03BF1A6C BL 0x3BF1930
	0x03BF1A70 MOV X0, X19
	0x03BF1A74 BL 0x3BEBA40
	0x03BF1A78 MOV X0, X20
	0x03BF1A7C LDP X20, X19, [X31 + 0x10]
	0x03BF1A80 LDP X30, X21, [X31], #0x20
	0x03BF1A84 RET
	0x03BF1A88 CMP W1, 0x1
	0x03BF1A8C MOV X21, X0
	0x03BF1A90 B.NE 0x3BF1AB8
	0x03BF1A94 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+24]
	008 Move X1, X31
	009 Move X2, X31
	010 Call IntPtr.op_Inequality, X0, X1
	011 Move X20, X31
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {49}
	016 Move X21, 0x7F3000
	017 Move X8, [X21+608]
	018 Move X20, [X19+24]
	019 Compare X8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51142656
	022 Add X0, X0, 565
	023 Call 0x1C17CB8
	024 Move X8, X0
	025 Move [X21+608], X0
	026 Move X0, X20
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X1, X31
	029 Move X2, X31
	030 Move X20, X0
	031 Call IntPtr.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Move X22, 0x7F3000
	037 Move X8, [X22+600]
	038 Move X21, [X19+24]
	039 Compare X8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, -51200000
	042 Add X0, X0, 1894
	043 Call 0x1C17CB8
	044 Move X8, X0
	045 Move [X22+600], X0
	046 Move X0, X21
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move [X19+24], X31
	049 Move X0, X20
	050 Move X1, X31
	051 Move X2, X31
	052 Call IntPtr.op_Equality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {72}
	057 Move X0, X19
	058 Call AndroidJNIHelper.CreateJavaProxy, X0
	059 Move X21, 0x7F3000
	060 Move X8, [X21+592]
	061 Move X20, X0
	062 Compare X8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, -51134464
	065 Add X0, X0, 81
	066 Call 0x1C17CB8
	067 Move X8, X0
	068 Move [X21+592], X0
	069 Move X0, X20
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move [X19+24], X0
	072 Move X0, X20
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03BF2C84 CBZ X23, 0x3BF2E04
	0x03BF2C88 LDR X1, [X27]
	0x03BF2C8C LDR X24, [X26, X25, LSL #3]
	0x03BF2C90 MOV X0, X23
	0x03BF2C94 MOV X2, X31
	0x03BF2C98 BL 0x32333E0
	0x03BF2C9C CBZ X24, 0x3BF2CC4
	0x03BF2CA0 MOV X0, X24
	0x03BF2CA4 MOV X1, X31
	0x03BF2CA8 BL 0x33BE520
	0x03BF2CAC CBZ X0, 0x3BF2E04
	0x03BF2CB0 LDR X8, [X0]
	0x03BF2CB4 LDP X9, X1, [X8 + 0x168]
	0x03BF2CB8 BLR X9
	0x03BF2CBC MOV X1, X0
	0x03BF2CC0 B 0x3BF2CC8
	0x03BF2CC4 LDR X1, [X28]
	0x03BF2CC8 MOV X0, X23
	0x03BF2CCC MOV X2, X31
	0x03BF2CD0 BL 0x32333E0
	0x03BF2CD4 LDR W8, [X22 + 0x18]
	0x03BF2CD8 ADD X25, X25, 0x1
	0x03BF2CDC CMP X25, W8, SXTW
	0x03BF2CE0 B.LT 0x3BF2C7C
	0x03BF2CE4 ADRP X8, 0x501000
	0x03BF2CE8 LDR X8, [X8 + 0xAC8]
	0x03BF2CEC MOVZ W1, 0x7
	0x03BF2CF0 LDR X0, [X8]
	0x03BF2CF4 BL 0x1C16D6C
	0x03BF2CF8 CBZ X0, 0x3BF2E04
	0x03BF2CFC LDR X8, [X0 + 0x18]
	0x03BF2D00 MOV X22, X0
	0x03BF2D04 CBZ W8, 0x3BF2E08
	0x03BF2D08 CMP W8, 0x1
	0x03BF2D0C STR X21, [X22 + 0x20]
	0x03BF2D10 B.EQ 0x3BF2E08
	0x03BF2D14 ADRP X9, 0x56C000
	0x03BF2D18 LDR X9, [X9 + 0x608]
	0x03BF2D1C CMP W8, 0x2
	0x03BF2D20 LDR X9, [X9]
	0x03BF2D24 STR X9, [X22 + 0x28]
	0x03BF2D28 B.LS 0x3BF2E08
	0x03BF2D2C CMP W8, 0x3
	0x03BF2D30 STR X20, [X22 + 0x30]
	0x03BF2D34 B.EQ 0x3BF2E08
	0x03BF2D38 ADRP X9, 0x50C000
	0x03BF2D3C LDR X9, [X9 + 0xCD8]
	0x03BF2D40 LDR X9, [X9]
	0x03BF2D44 STR X9, [X22 + 0x38]
	0x03BF2D48 CBZ X23, 0x3BF2D80
	0x03BF2D4C LDR X8, [X23]
	0x03BF2D50 MOV X0, X23
	0x03BF2D54 LDP X9, X1, [X8 + 0x168]
	0x03BF2D58 BLR X9
	0x03BF2D5C LDR X8, [X22 + 0x18]
	0x03BF2D60 B 0x3BF2D84
	0x03BF2D64 LDP X20, X19, [X31 + 0x50]
	0x03BF2D68 LDP X22, X21, [X31 + 0x40]
	0x03BF2D6C LDP X24, X23, [X31 + 0x30]
	0x03BF2D70 LDP X26, X25, [X31 + 0x20]
	0x03BF2D74 LDP X28, X27, [X31 + 0x10]
	0x03BF2D78 LDR X30, [X31], #0x60

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7F2000
	007 Move X22, 0x56D000
	008 Move X19, 0x56D000
	009 Move X21, 0x52B000
	010 Move W8, [X20+1909]
	011 Move X22, [X22+1456]
	012 Move X19, [X19+1416]
	013 Move X21, [X21+2744]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x52B000
	019 Move X0, [X0+2744]
	020 Call 0x1C17CF4
	021 Move X0, 0x56D000
	022 Move X0, [X0+1416]
	023 Call 0x1C17CF4
	024 Move X0, 0x56D000
	025 Move X0, [X0+1464]
	026 Call 0x1C17CF4
	027 Move X0, 0x56D000
	028 Move X0, [X0+1456]
	029 Call 0x1C17CF4
	030 Move X0, 0x56D000
	031 Move X0, [X0+1472]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1909], W8
	035 Move X0, [X22]
	036 Call AndroidJNISafe.FindClass, X0
	037 Move X8, [X19]
	038 Move X19, X0
	039 Move X0, X8
	040 Call 0x1C17F10
	041 Move X1, X19
	042 Move X20, X0
	043 Call GlobalJavaObjectRef..ctor, X0, X1
	044 Move X8, [X21]
	045 Move X8, [X8+184]
	046 Move [X8], X20
	047 Move X8, [X21]
	048 Move X8, [X8+184]
	049 Move X8, [X8]
	050 Compare X8, 0
	051 JumpIfEqual {70}
	052 Move X9, 0x56D000
	053 Move X10, 0x56D000
	054 Move X9, [X9+1464]
	055 Move X10, [X10+1472]
	056 Move X0, [X8+24]
	057 Move W3, 1
	058 Move X1, [X9]
	059 Move X2, [X10]
	060 Call _AndroidJNIHelper.GetMethodID, X0, X1, X2, X3
	061 Move X8, [X21]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X8, [X8+184]
	067 Move [X8+8], X0
	068 Move X30, [X31+48]
	069 Return 
	070 Call 0x1C17F20

