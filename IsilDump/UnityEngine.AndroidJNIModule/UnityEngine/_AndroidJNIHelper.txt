Type: UnityEngine._AndroidJNIHelper

Method: System.IntPtr CreateJavaProxy(System.IntPtr player, System.IntPtr delegateHandle, UnityEngine.AndroidJavaProxy proxy)

Disassembly:
	0x03BE44B8 CMP W9, W11
	0x03BE44BC B.CC 0x3BE44D4
	0x03BE44C0 LDR X9, [X8 + 0xC8]
	0x03BE44C4 ADD X9, X9, X11, 0x3, LSL
	0x03BE44C8 LDUR X9, [X9 - 0x8]
	0x03BE44CC CMP X9, X10
	0x03BE44D0 B.EQ 0x3BE45FC
	0x03BE44D4 ADRP X9, 0x57A000
	0x03BE44D8 LDR X9, [X9 + 0x298]
	0x03BE44DC LDR X9, [X9]
	0x03BE44E0 CMP X8, X9
	0x03BE44E4 B.NE 0x3BE4684
	0x03BE44E8 CMP X23, X27
	0x03BE44EC B.CS 0x3BE467C
	0x03BE44F0 MOV X0, X21
	0x03BE44F4 BL 0x3BE3344
	0x03BE44F8 B 0x3BE4528
	0x03BE44FC CMP X23, X27
	0x03BE4500 B.CS 0x3BE467C
	0x03BE4504 MOV X0, X21
	0x03BE4508 BL 0x1C16E08
	0x03BE450C LDR W8, [X0]
	0x03BE4510 STR W8, [X19]
	0x03BE4514 B 0x3BE45D0
	0x03BE4518 CMP X23, X27
	0x03BE451C B.CS 0x3BE467C
	0x03BE4520 MOV X0, X21
	0x03BE4524 BL 0x3BEBA98
	0x03BE4528 STR X0, [X19]
	0x03BE452C B 0x3BE45D0
	0x03BE4530 CMP X23, X27
	0x03BE4534 B.CC 0x3BE4590
	0x03BE4538 B 0x3BE467C
	0x03BE453C ADRP X8, 0x50F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x800000
	007 Move W8, [X22+1937]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x539000
	016 Move X0, [X0+1696]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1937], W8
	020 Compare X21, 0
	021 JumpIfEqual {46}
	022 Move X8, [X21+16]
	023 Compare X8, 0
	024 JumpIfEqual {46}
	025 Move X8, [X8+24]
	026 Compare X8, 0
	027 JumpIfEqual {46}
	028 Move X9, 0x539000
	029 Move X9, [X9+1696]
	030 Move X21, [X8+24]
	031 Move X0, [X9]
	032 Move W9, [X0+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X21
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call AndroidReflection.NewProxyInstance, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: System.IntPtr CreateJavaRunnable(UnityEngine.AndroidJavaRunnable jrunnable)

Disassembly:
	0x03BE4344 CMP X8, X9
	0x03BE4348 B.EQ 0x3BE44FC
	0x03BE434C ADRP X9, 0x50F000
	0x03BE4350 LDR X9, [X9 + 0xB58]
	0x03BE4354 LDR X9, [X9]
	0x03BE4358 CMP X8, X9
	0x03BE435C B.EQ 0x3BE4530
	0x03BE4360 ADRP X9, 0x510000
	0x03BE4364 LDR X9, [X9 + 0x9D8]
	0x03BE4368 LDR X9, [X9]
	0x03BE436C CMP X8, X9
	0x03BE4370 B.EQ 0x3BE453C
	0x03BE4374 ADRP X9, 0x538000
	0x03BE4378 LDR X9, [X9 + 0x6B0]
	0x03BE437C LDR X9, [X9]
	0x03BE4380 CMP X8, X9
	0x03BE4384 B.EQ 0x3BE4530
	0x03BE4388 ADRP X9, 0x513000
	0x03BE438C LDR X9, [X9 + 0x628]
	0x03BE4390 LDR X9, [X9]
	0x03BE4394 CMP X8, X9
	0x03BE4398 B.EQ 0x3BE43EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x800000
	006 Move X21, 0x57B000
	007 Move W8, [X20+1938]
	008 Move X21, [X21+600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x57B000
	015 Move X0, [X0+600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1938], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call AndroidJavaRunnableProxy..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: System.IntPtr InvokeJavaProxyMethod(UnityEngine.AndroidJavaProxy proxy, System.IntPtr jmethodName, System.IntPtr jargs)

Disassembly:
	0x03BF4BD4 B.NE 0x3BF4BF4
	0x03BF4BD8 MOV X0, X21
	0x03BF4BDC BL 0x3EB1AD0
	0x03BF4BE0 LDR X20, [X0]
	0x03BF4BE4 BL 0x3EB1AE0
	0x03BF4BE8 MOV W21, W31
	0x03BF4BEC CBNZ X19, 0x3BF4AF4
	0x03BF4BF0 B 0x3BF4B54
	0x03BF4BF4 MOV X20, X31
	0x03BF4BF8 B 0x3BF4C00
	0x03BF4BFC MOV X21, X0
	0x03BF4C00 CBZ X19, 0x3BF4C64
	0x03BF4C04 ADRP X10, 0x4FF000
	0x03BF4C08 LDR X8, [X19]
	0x03BF4C0C LDR X10, [X10 + 0xE00]
	0x03BF4C10 LDRH W9, [X8 + 0x12E]
	0x03BF4C14 LDR X1, [X10]
	0x03BF4C18 CBZ X9, 0x3BF4C3C
	0x03BF4C1C LDR X10, [X8 + 0xB0]
	0x03BF4C20 ADD X10, X10, 0x8
	0x03BF4C24 LDUR X11, [X10 - 0x8]
	0x03BF4C28 CMP X11, X1
	0x03BF4C2C B.EQ 0x3BF4C4C
	0x03BF4C30 SUBS X9, X9, 0x1
	0x03BF4C34 ADD X10, X10, 0x10
	0x03BF4C38 B.NE 0x3BF4C24
	0x03BF4C3C MOV X0, X19
	0x03BF4C40 MOV W2, W31
	0x03BF4C44 BL 0x1C5C788
	0x03BF4C48 B 0x3BF4C58
	0x03BF4C4C LDRSW X9, [X10]
	0x03BF4C50 ADD X8, X8, X9, 0x4, LSL
	0x03BF4C54 ADD X0, X8, 0x138
	0x03BF4C58 LDP X8, X1, [X0]
	0x03BF4C5C MOV X0, X19
	0x03BF4C60 BLR X8
	0x03BF4C64 CBNZ X20, 0x3BF4C70
	0x03BF4C68 MOV X0, X21
	0x03BF4C6C BL 0x1D2C690
	0x03BF4C70 MOV X0, X20
	0x03BF4C74 BL 0x1C16F18
	0x03BF4C78 BL 0x1990590
	0x03BF4C7C STP X30, X23, [X31 - 0x30]!
	0x03BF4C80 STP X22, X21, [X31 + 0x10]
	0x03BF4C84 STP X20, X19, [X31 + 0x20]
	0x03BF4C88 ADRP X23, 0x7EF000
	0x03BF4C8C ADRP X22, 0x528000
	0x03BF4C90 LDRB W8, [X23 + 0x7B1]
	0x03BF4C94 LDR X22, [X22 + 0xAB8]
	0x03BF4C98 MOV X19, X2
	0x03BF4C9C MOV X21, X1
	0x03BF4CA0 MOV X20, X0
	0x03BF4CA4 TBNZ X8, 0x0, 0x3BF4CC8
	0x03BF4CA8 ADRP X0, 0x528000
	0x03BF4CAC LDR X0, [X0 + 0xAB8]
	0x03BF4CB0 BL 0x1C16CF4
	0x03BF4CB4 ADRP X0, 0x56A000
	0x03BF4CB8 LDR X0, [X0 + 0x728]
	0x03BF4CBC BL 0x1C16CF4
	0x03BF4CC0 MOVZ W8, 0x1
	0x03BF4CC4 STRB W8, [X23 + 0x7B1]
	0x03BF4CC8 LDR X0, [X22]
	0x03BF4CCC ADRP X22, 0x56A000
	0x03BF4CD0 LDR W8, [X0 + 0xE0]
	0x03BF4CD4 LDR X22, [X22 + 0x728]
	0x03BF4CD8 CBNZ W8, 0x3BF4CE0
	0x03BF4CDC BL 0x1C16DFC
	0x03BF4CE0 LDR X1, [X22]
	0x03BF4CE4 MOV X0, X20
	0x03BF4CE8 BL 0x3BEF0B4
	0x03BF4CEC STP X21, X19, [X20 + 0x20]
	0x03BF4CF0 LDP X20, X19, [X31 + 0x20]
	0x03BF4CF4 LDP X22, X21, [X31 + 0x10]
	0x03BF4CF8 LDP X30, X23, [X31], #0x30
	0x03BF4CFC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7F0000
	007 Move X8, [X22+736]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51326976
	014 Add X0, X0, 2042
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+736], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X1, X0
	021 Compare X19, 0
	022 JumpIfEqual {35}
	023 Move X8, [X19]
	024 Move X9, [X8+408]
	025 Move X3, [X8+416]
	026 Move X0, X19
	027 Move X2, X20
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return X0
	035 Call 0x1C17F20
	036 Move X20, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X20
	039 Call 0x3EB2AD0
	040 Move X20, X0
	041 Move X0, 0x500000
	042 Move X0, [X0+2000]
	043 Call 0x1C17D08
	044 Move X8, [X20]
	045 Move X1, [X8]
	046 Call 0x1C18270
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {70}
	051 Move X20, [X20]
	052 Call 0x3EB2AE0
	053 Compare X19, 0
	054 JumpIfEqual {78}
	055 Move X0, X19
	056 Call AndroidJavaProxy.GetRawProxy, X0
	057 Move X19, X0
	058 Move X0, 0x529000
	059 Move X0, [X0+1696]
	060 Call 0x1C17D08
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X19
	066 Move X1, X20
	067 Move W2, W31
	068 Call AndroidReflection.SetNativeExceptionOnProxy, X0, X1, X2
	069 Move X0, X31
	070 Move W0, 8
	071 Call 0x3EB2AF0
	072 Move X8, [X20]
	073 Move [X0], X8
	074 Move X1, 0x2C1000
	075 Add X1, X1, 3672
	076 Move X2, X31
	077 Call 0x3EB2B00
	078 Call 0x1C17F20
	079 Move X20, X0
	080 Call 0x3EB2AE0
	081 Move X0, X20
	082 Call 0x1D2D690
	083 Call 0x1991590

Method: System.Void CreateJNIArgArray(System.Object[] args, System.Span`1<UnityEngine.jvalue> ret)

Disassembly:
	0x03BE51A4 BL 0x1C16DFC
	0x03BE51A8 MOV X0, X22
	0x03BE51AC MOV X1, X31
	0x03BE51B0 BL 0x338C698
	0x03BE51B4 LDR X8, [X19]
	0x03BE51B8 MOV X1, X0
	0x03BE51BC MOV X0, X19
	0x03BE51C0 LDR X9, [X8 + 0x8F8]
	0x03BE51C4 LDR X2, [X8 + 0x900]
	0x03BE51C8 BLR X9
	0x03BE51CC TBZ X0, 0x0, 0x3BE54D0
	0x03BE51D0 CMP X19, X20
	0x03BE51D4 B.EQ 0x3BE5374
	0x03BE51D8 ADRP X9, 0x537000
	0x03BE51DC LDR X9, [X9 + 0xA10]
	0x03BE51E0 LDR X8, [X20]
	0x03BE51E4 LDR X1, [X9]
	0x03BE51E8 LDRB W10, [X8 + 0x130]
	0x03BE51EC LDRB W9, [X1 + 0x130]
	0x03BE51F0 CMP W10, W9
	0x03BE51F4 B.CC 0x3BE56F8
	0x03BE51F8 LDR X8, [X8 + 0xC8]
	0x03BE51FC ADD X8, X8, X9, 0x3, LSL
	0x03BE5200 LDUR X8, [X8 - 0x8]
	0x03BE5204 CMP X8, X1
	0x03BE5208 B.NE 0x3BE56F8
	0x03BE520C ADRP X23, 0x50E000
	0x03BE5210 LDR X23, [X23 + 0x9C8]
	0x03BE5214 LDR X22, [X23]
	0x03BE5218 LDR X8, [X22 + 0x38]
	0x03BE521C CBNZ X8, 0x3BE522C
	0x03BE5220 MOV X0, X22
	0x03BE5224 BL 0x1C5C6E0
	0x03BE5228 LDR X8, [X22 + 0x38]
	0x03BE522C LDR X0, [X8 + 0x10]
	0x03BE5230 LDRB W8, [X0 + 0x135]
	0x03BE5234 TBNZ X8, 0x0, 0x3BE523C
	0x03BE5238 BL 0x1C5C684
	0x03BE523C LDR W8, [X0 + 0xE0]
	0x03BE5240 CBNZ W8, 0x3BE5248
	0x03BE5244 BL 0x1C16DFC
	0x03BE5248 LDR X8, [X22 + 0x38]
	0x03BE524C LDR X0, [X8 + 0x10]
	0x03BE5250 LDRB W8, [X0 + 0x135]
	0x03BE5254 TBNZ X8, 0x0, 0x3BE525C
	0x03BE5258 BL 0x1C5C684
	0x03BE525C ADRP X9, 0x579000
	0x03BE5260 ADRP X10, 0x50E000
	0x03BE5264 LDR X8, [X0 + 0xB8]
	0x03BE5268 LDR X9, [X9 + 0x2E0]
	0x03BE526C LDR X10, [X10 + 0x9A0]
	0x03BE5270 MOV X0, X20
	0x03BE5274 LDR X2, [X8]
	0x03BE5278 LDR X1, [X9]
	0x03BE527C LDR X3, [X10]
	0x03BE5280 BL 0x227A8F4
	0x03BE5284 LDR X23, [X23]
	0x03BE5288 MOV X22, X0
	0x03BE528C LDR X8, [X23 + 0x38]
	0x03BE5290 CBNZ X8, 0x3BE52A0
	0x03BE5294 MOV X0, X23
	0x03BE5298 BL 0x1C5C6E0
	0x03BE529C LDR X8, [X23 + 0x38]
	0x03BE52A0 LDR X0, [X8 + 0x10]
	0x03BE52A4 LDRB W8, [X0 + 0x135]
	0x03BE52A8 TBNZ X8, 0x0, 0x3BE52B0
	0x03BE52AC BL 0x1C5C684
	0x03BE52B0 LDR W8, [X0 + 0xE0]
	0x03BE52B4 CBNZ W8, 0x3BE52BC
	0x03BE52B8 BL 0x1C16DFC
	0x03BE52BC LDR X8, [X23 + 0x38]
	0x03BE52C0 LDR X0, [X8 + 0x10]
	0x03BE52C4 LDRB W8, [X0 + 0x135]
	0x03BE52C8 TBNZ X8, 0x0, 0x3BE52D0
	0x03BE52CC BL 0x1C5C684
	0x03BE52D0 CBZ X22, 0x3BE5818
	0x03BE52D4 ADRP X9, 0x579000
	0x03BE52D8 LDR X8, [X0 + 0xB8]
	0x03BE52DC LDR X9, [X9 + 0x2E8]
	0x03BE52E0 ADRP X10, 0x50E000
	0x03BE52E4 LDR X10, [X10 + 0x9A8]
	0x03BE52E8 LDR X2, [X8]
	0x03BE52EC LDR X1, [X9]
	0x03BE52F0 LDR X3, [X10]
	0x03BE52F4 MOV X0, X22
	0x03BE52F8 BL 0x227A8F4
	0x03BE52FC MOV X1, X0
	0x03BE5300 ADRP X8, 0x554000
	0x03BE5304 LDR X8, [X8 + 0xC20]
	0x03BE5308 ADRP X9, 0x517000
	0x03BE530C LDR X9, [X9 + 0x848]
	0x03BE5310 LDR X0, [X8]
	0x03BE5314 LDR X2, [X9]
	0x03BE5318 MOV X3, X31
	0x03BE531C BL 0x32274B8
	0x03BE5320 MOV W24, W31
	0x03BE5324 MOV X23, X31
	0x03BE5328 MOV X21, X0
	0x03BE532C ADRP X10, 0x50E000
	0x03BE5330 LDR X8, [X22]
	0x03BE5334 LDR X10, [X10 + 0xE00]
	0x03BE5338 LDRH W9, [X8 + 0x12E]
	0x03BE533C LDR X1, [X10]
	0x03BE5340 CBZ X9, 0x3BE5364
	0x03BE5344 LDR X10, [X8 + 0xB0]
	0x03BE5348 ADD X10, X10, 0x8
	0x03BE534C LDUR X11, [X10 - 0x8]
	0x03BE5350 CMP X11, X1
	0x03BE5354 B.EQ 0x3BE54B0
	0x03BE5358 SUBS X9, X9, 0x1
	0x03BE535C ADD X10, X10, 0x10
	0x03BE5360 B.NE 0x3BE534C
	0x03BE5364 MOV X0, X22
	0x03BE5368 MOV W2, W31
	0x03BE536C BL 0x1C5C788
	0x03BE5370 B 0x3BE54BC
	0x03BE5374 ADRP X8, 0x579000
	0x03BE5378 LDR X8, [X8 + 0x2D8]
	0x03BE537C LDR X21, [X8]
	0x03BE5380 MOV X0, X21
	0x03BE5384 LDP X20, X19, [X31 + 0x40]
	0x03BE5388 LDP X22, X21, [X31 + 0x30]
	0x03BE538C LDP X24, X23, [X31 + 0x20]
	0x03BE5390 LDP X26, X25, [X31 + 0x10]
	0x03BE5394 LDR X30, [X31], #0x50
	0x03BE5398 RET
	0x03BE539C ADRP X8, 0x535000
	0x03BE53A0 LDR X0, [X25]
	0x03BE53A4 LDR X8, [X8 + 0xD78]
	0x03BE53A8 LDR W9, [X0 + 0xE0]
	0x03BE53AC LDR X20, [X8]
	0x03BE53B0 CBNZ W9, 0x3BE53B8
	0x03BE53B4 BL 0x1C16DFC
	0x03BE53B8 MOV X0, X20
	0x03BE53BC MOV X1, X31
	0x03BE53C0 BL 0x338C698
	0x03BE53C4 LDR X8, [X19]
	0x03BE53C8 MOV X1, X0
	0x03BE53CC MOV X0, X19
	0x03BE53D0 LDR X9, [X8 + 0x8F8]
	0x03BE53D4 LDR X2, [X8 + 0x900]
	0x03BE53D8 BLR X9
	0x03BE53DC TBZ X0, 0x0, 0x3BE53EC
	0x03BE53E0 ADRP X8, 0x53F000
	0x03BE53E4 LDR X8, [X8 + 0x1D0]
	0x03BE53E8 B 0x3BE537C
	0x03BE53EC ADRP X8, 0x535000
	0x03BE53F0 LDR X0, [X25]
	0x03BE53F4 LDR X8, [X8 + 0xD88]
	0x03BE53F8 LDR W9, [X0 + 0xE0]
	0x03BE53FC LDR X20, [X8]
	0x03BE5400 CBNZ W9, 0x3BE5408
	0x03BE5404 BL 0x1C16DFC
	0x03BE5408 MOV X0, X20
	0x03BE540C MOV X1, X31
	0x03BE5410 BL 0x338C698
	0x03BE5414 LDR X8, [X19]
	0x03BE5418 MOV X1, X0
	0x03BE541C MOV X0, X19
	0x03BE5420 LDR X9, [X8 + 0x8F8]
	0x03BE5424 LDR X2, [X8 + 0x900]
	0x03BE5428 BLR X9
	0x03BE542C TBZ X0, 0x0, 0x3BE5460
	0x03BE5430 ADRP X8, 0x53A000
	0x03BE5434 LDR X8, [X8 + 0x350]
	0x03BE5438 B 0x3BE537C
	0x03BE543C LDRSW X9, [X10]
	0x03BE5440 ADD X8, X8, X9, 0x4, LSL
	0x03BE5444 ADD X0, X8, 0x138
	0x03BE5448 LDP X8, X1, [X0]
	0x03BE544C MOV X0, X22
	0x03BE5450 BLR X8
	0x03BE5454 CBNZ X23, 0x3BE5688
	0x03BE5458 CBNZ W24, 0x3BE4E94
	0x03BE545C B 0x3BE5380
	0x03BE5460 ADRP X8, 0x536000
	0x03BE5464 LDR X0, [X25]
	0x03BE5468 LDR X8, [X8 + 0xA80]
	0x03BE546C LDR W9, [X0 + 0xE0]
	0x03BE5470 LDR X20, [X8]
	0x03BE5474 CBNZ W9, 0x3BE547C
	0x03BE5478 BL 0x1C16DFC
	0x03BE547C MOV X0, X20
	0x03BE5480 MOV X1, X31
	0x03BE5484 BL 0x338C698
	0x03BE5488 LDR X8, [X19]
	0x03BE548C MOV X1, X0
	0x03BE5490 MOV X0, X19
	0x03BE5494 LDR X9, [X8 + 0x8F8]
	0x03BE5498 LDR X2, [X8 + 0x900]
	0x03BE549C BLR X9
	0x03BE54A0 TBZ X0, 0x0, 0x3BE55DC
	0x03BE54A4 ADRP X8, 0x546000
	0x03BE54A8 LDR X8, [X8 + 0xF48]
	0x03BE54AC B 0x3BE537C
	0x03BE54B0 LDRSW X9, [X10]
	0x03BE54B4 ADD X8, X8, X9, 0x4, LSL
	0x03BE54B8 ADD X0, X8, 0x138
	0x03BE54BC LDP X8, X1, [X0]
	0x03BE54C0 MOV X0, X22
	0x03BE54C4 BLR X8
	0x03BE54C8 CBNZ X23, 0x3BE5688
	0x03BE54CC CBZ W24, 0x3BE5380
	0x03BE54D0 ADRP X8, 0x537000
	0x03BE54D4 LDR X0, [X25]
	0x03BE54D8 LDR X8, [X8 + 0x6A8]
	0x03BE54DC LDR W9, [X0 + 0xE0]
	0x03BE54E0 LDR X21, [X8]
	0x03BE54E4 CBNZ W9, 0x3BE54EC
	0x03BE54E8 BL 0x1C16DFC
	0x03BE54EC MOV X0, X21
	0x03BE54F0 MOV X1, X31
	0x03BE54F4 BL 0x338C698
	0x03BE54F8 LDR X8, [X26]
	0x03BE54FC MOV X21, X0
	0x03BE5500 LDR W9, [X8 + 0xE0]
	0x03BE5504 CBNZ W9, 0x3BE5510
	0x03BE5508 MOV X0, X8
	0x03BE550C BL 0x1C16DFC
	0x03BE5510 CBZ X21, 0x3BE56AC
	0x03BE5514 LDR X8, [X21]
	0x03BE5518 MOV X0, X21
	0x03BE551C MOV X1, X19
	0x03BE5520 LDR X9, [X8 + 0x2A8]
	0x03BE5524 LDR X2, [X8 + 0x2B0]
	0x03BE5528 BLR X9
	0x03BE552C TBZ X0, 0x0, 0x3BE5694
	0x03BE5530 LDR X8, [X19]
	0x03BE5534 MOV X0, X19
	0x03BE5538 LDR X9, [X8 + 0x438]
	0x03BE553C LDR X1, [X8 + 0x440]
	0x03BE5540 BLR X9
	0x03BE5544 CMP W0, 0x1
	0x03BE5548 B.NE 0x3BE56B0
	0x03BE554C ADRP X8, 0x50E000
	0x03BE5550 LDR X8, [X8 + 0x8F0]
	0x03BE5554 LDR X0, [X8]
	0x03BE5558 BL 0x1C16F10
	0x03BE555C MOV X1, X31
	0x03BE5560 MOV X20, X0
	0x03BE5564 BL 0x3231AC4
	0x03BE5568 CBZ X20, 0x3BE56AC
	0x03BE556C MOVZ W1, 0x5B
	0x03BE5570 MOV X0, X20
	0x03BE5574 MOV X2, X31
	0x03BE5578 BL 0x3233D30
	0x03BE557C LDR X8, [X19]
	0x03BE5580 MOV X0, X19
	0x03BE5584 LDR X9, [X8 + 0x428]
	0x03BE5588 LDR X1, [X8 + 0x430]
	0x03BE558C BLR X9
	0x03BE5590 BL 0x3BE4AB0
	0x03BE5594 MOV X1, X0
	0x03BE5598 MOV X0, X20
	0x03BE559C MOV X2, X31
	0x03BE55A0 BL 0x32333E0
	0x03BE55A4 MOV X0, X20
	0x03BE55A8 MOV X1, X31
	0x03BE55AC BL 0x323260C
	0x03BE55B0 CMP W0, 0x1
	0x03BE55B4 B.LE 0x3BE567C
	0x03BE55B8 LDR X8, [X20]
	0x03BE55BC MOV X0, X20
	0x03BE55C0 LDP X20, X19, [X31 + 0x40]
	0x03BE55C4 LDP X22, X21, [X31 + 0x30]
	0x03BE55C8 LDP X2, X1, [X8 + 0x168]
	0x03BE55CC LDP X24, X23, [X31 + 0x20]
	0x03BE55D0 LDP X26, X25, [X31 + 0x10]
	0x03BE55D4 LDR X30, [X31], #0x50
	0x03BE55D8 BR X2
	0x03BE55DC ADRP X8, 0x536000
	0x03BE55E0 LDR X0, [X25]
	0x03BE55E4 LDR X8, [X8 + 0xA78]
	0x03BE55E8 LDR W9, [X0 + 0xE0]
	0x03BE55EC LDR X20, [X8]
	0x03BE55F0 CBNZ W9, 0x3BE55F8
	0x03BE55F4 BL 0x1C16DFC
	0x03BE55F8 MOV X0, X20
	0x03BE55FC MOV X1, X31
	0x03BE5600 BL 0x338C698
	0x03BE5604 LDR X8, [X19]
	0x03BE5608 MOV X1, X0
	0x03BE560C MOV X0, X19
	0x03BE5610 LDR X9, [X8 + 0x8F8]
	0x03BE5614 LDR X2, [X8 + 0x900]
	0x03BE5618 BLR X9
	0x03BE561C TBZ X0, 0x0, 0x3BE562C
	0x03BE5620 ADRP X8, 0x536000
	0x03BE5624 LDR X8, [X8 + 0xBE0]
	0x03BE5628 B 0x3BE537C
	0x03BE562C ADRP X8, 0x535000
	0x03BE5630 LDR X0, [X25]
	0x03BE5634 LDR X8, [X8 + 0xD70]
	0x03BE5638 LDR W9, [X0 + 0xE0]
	0x03BE563C LDR X20, [X8]
	0x03BE5640 CBNZ W9, 0x3BE5648
	0x03BE5644 BL 0x1C16DFC
	0x03BE5648 MOV X0, X20
	0x03BE564C MOV X1, X31
	0x03BE5650 BL 0x338C698
	0x03BE5654 LDR X8, [X19]
	0x03BE5658 MOV X1, X0
	0x03BE565C MOV X0, X19
	0x03BE5660 LDR X9, [X8 + 0x8F8]
	0x03BE5664 LDR X2, [X8 + 0x900]
	0x03BE5668 BLR X9
	0x03BE566C TBZ X0, 0x0, 0x3BE567C
	0x03BE5670 ADRP X8, 0x554000
	0x03BE5674 LDR X8, [X8 + 0xDC0]
	0x03BE5678 B 0x3BE537C
	0x03BE567C ADRP X8, 0x50E000
	0x03BE5680 LDR X8, [X8 + 0x988]
	0x03BE5684 B 0x3BE537C
	0x03BE5688 MOV X0, X23
	0x03BE568C BL 0x1C16F18
	0x03BE5690 BL 0x1C16F20
	0x03BE5694 ADRP X8, 0x50E000
	0x03BE5698 LDR X8, [X8 + 0xAC8]
	0x03BE569C MOVZ W1, 0x6
	0x03BE56A0 LDR X0, [X8]
	0x03BE56A4 BL 0x1C16D6C
	0x03BE56A8 CBNZ X0, 0x3BE5700
	0x03BE56AC BL 0x1C16F20
	0x03BE56B0 ADRP X0, 0x50E000
	0x03BE56B4 LDR X0, [X0 + 0x7D0]
	0x03BE56B8 BL 0x1C16D08
	0x03BE56BC BL 0x1C16F10
	0x03BE56C0 MOV X19, X0
	0x03BE56C4 ADRP X0, 0x579000
	0x03BE56C8 LDR X0, [X0 + 0x318]
	0x03BE56CC BL 0x1C16D08
	0x03BE56D0 MOV X1, X0
	0x03BE56D4 MOV X0, X19
	0x03BE56D8 MOV X2, X31
	0x03BE56DC BL 0x33B2C70
	0x03BE56E0 ADRP X0, 0x579000
	0x03BE56E4 LDR X0, [X0 + 0x320]
	0x03BE56E8 BL 0x1C16D08
	0x03BE56EC MOV X1, X0
	0x03BE56F0 MOV X0, X19
	0x03BE56F4 BL 0x1C16DEC
	0x03BE56F8 MOV X0, X20
	0x03BE56FC BL 0x1C171E0
	0x03BE5700 LDR W8, [X0 + 0x18]
	0x03BE5704 MOV X21, X0
	0x03BE5708 CBZ W8, 0x3BE5814
	0x03BE570C ADRP X8, 0x579000
	0x03BE5710 LDR X8, [X8 + 0x300]
	0x03BE5714 MOV X0, X19
	0x03BE5718 LDR X8, [X8]
	0x03BE571C STR X8, [X21 + 0x20]
	0x03BE5720 LDR X8, [X19]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x7FF000
	014 Move W8, [X22+1939]
	015 Move X21, X2
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {78}
	022 Move X0, 0x50F000
	023 Move X0, [X0+2448]
	024 Call 0x1C17CF4
	025 Move X0, 0x538000
	026 Move X0, [X0+2576]
	027 Call 0x1C17CF4
	028 Move X0, 0x538000
	029 Move X0, [X0+2744]
	030 Call 0x1C17CF4
	031 Move X0, 0x57A000
	032 Move X0, [X0+664]
	033 Call 0x1C17CF4
	034 Move X0, 0x538000
	035 Move X0, [X0+1696]
	036 Call 0x1C17CF4
	037 Move X0, 0x50F000
	038 Move X0, [X0+2904]
	039 Call 0x1C17CF4
	040 Move X0, 0x510000
	041 Move X0, [X0+2520]
	042 Call 0x1C17CF4
	043 Move X0, 0x511000
	044 Move X0, [X0+368]
	045 Call 0x1C17CF4
	046 Move X0, 0x50F000
	047 Move X0, [X0+2600]
	048 Call 0x1C17CF4
	049 Move X0, 0x512000
	050 Move X0, [X0+2424]
	051 Call 0x1C17CF4
	052 Move X0, 0x513000
	053 Move X0, [X0+1576]
	054 Call 0x1C17CF4
	055 Move X0, 0x50F000
	056 Move X0, [X0+1880]
	057 Call 0x1C17CF4
	058 Move X0, 0x511000
	059 Move X0, [X0+2656]
	060 Call 0x1C17CF4
	061 Move X0, 0x50F000
	062 Move X0, [X0+3824]
	063 Call 0x1C17CF4
	064 Move X0, 0x538000
	065 Move X0, [X0+1712]
	066 Call 0x1C17CF4
	067 Move X0, 0x50F000
	068 Move X0, [X0+2704]
	069 Call 0x1C17CF4
	070 Move X0, 0x511000
	071 Move X0, [X0+632]
	072 Call 0x1C17CF4
	073 Move X0, 0x57A000
	074 Move X0, [X0+672]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X22+1939], W8
	078 Compare X20, 0
	079 JumpIfEqual {286}
	080 Move X8, [X20+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X24, 0x538000
	083 Move X25, 0x50F000
	084 Move X29, 0x511000
	085 Move X28, 0x50F000
	086 Move X24, [X24+1696]
	087 Move X25, [X25+1880]
	088 Move X29, [X29+632]
	089 Move X28, [X28+2448]
	090 Move X23, X31
	091 And X27, X21, 0
	092 And X8, X8, 0
	093 Add X26, X20, 32
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X21, [X26]
	096 Compare X21, 0
	097 JumpIfEqual {157}
	098 Move X0, X21
	099 Move X1, X31
	100 Call "il2cpp_vm_object_is_inst", X0
	101 Move X8, [X24]
	102 Move X22, X0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Compare X22, 0
	109 JumpIfEqual {286}
	110 Move X0, X22
	111 Move X1, X31
	112 Call Type.get_IsPrimitive, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {159}
	117 Move X9, [X25]
	118 Move X8, [X21]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X9, 0x50F000
	121 Move X9, [X9+2904]
	122 Move X9, [X9]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, 0x510000
	125 Move X9, [X9+2520]
	126 Move X9, [X9]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X9, 0x538000
	129 Move X9, [X9+1712]
	130 Move X9, [X9]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X9, 0x513000
	133 Move X9, [X9+1576]
	134 Move X9, [X9]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X9, 0x511000
	137 Move X9, [X9+2656]
	138 Move X9, [X9]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, 0x50F000
	141 Move X9, [X9+2704]
	142 Move X9, [X9]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X9, 0x512000
	145 Move X9, [X9+2424]
	146 Move X9, [X9]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X9, 0x511000
	149 Move X9, [X9+368]
	150 Move X9, [X9]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X21
	154 Call 0x1C17E08
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 NotImplemented "Instruction STRH not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X19], X31
	159 Move X9, [X29]
	160 Move X8, [X21]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X10, [X28]
	163 Move W9, [X8+304]
	164 Move W11, [X10+304]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X12, [X8+200]
	167 Add X11, X12, X11
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X10, 0x538000
	171 Move X10, [X10+2576]
	172 Move X10, [X10]
	173 Move W11, [X10+304]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X12, [X8+200]
	176 Add X11, X12, X11
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X10, 0x50F000
	180 Move X10, [X10+3824]
	181 Move X10, [X10]
	182 Move W11, [X10+304]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X12, [X8+200]
	185 Add X11, X12, X11
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X10, 0x538000
	189 Move X10, [X10+2744]
	190 Move X10, [X10]
	191 Move W11, [X10+304]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X9, [X8+200]
	194 Add X9, X9, X11
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X9, 0x57A000
	198 Move X9, [X9+664]
	199 Move X9, [X9]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, X21
	203 Call _AndroidJNIHelper.CreateJavaRunnable, X0
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X0, X21
	206 Call 0x1C17E08
	207 Move W8, [X0]
	208 Move [X19], W8
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, X21
	211 Call AndroidJNISafe.NewString, X0
	212 Move [X19], X0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X8, 0x50F000
	215 Move X8, [X8+2600]
	216 Move X0, [X8]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X8, 0x57A000
	222 Move X8, [X8+672]
	223 Move X1, X31
	224 Move X0, [X8]
	225 Call Debug.LogWarning, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X9, 0x510000
	228 Move X8, [X21]
	229 Move X9, [X9+2520]
	230 Move X8, [X8+64]
	231 Move X1, [X9]
	232 Move X9, [X1+64]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X0, X21
	235 Call 0x1C17E08
	236 Move W8, [X0]
	237 Move [X19], W8
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X8, [X21+24]
	240 Compare X8, 0
	241 JumpIfNotEqual {246}
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X8, [X21+16]
	244 Compare X8, 0
	245 JumpIfEqual {247}
	246 Move X8, [X8+24]
	247 Move [X19], X8
	248 Move W8, [X20+24]
	249 Add X23, X23, 1
	250 Add X19, X19, 8
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, X21
	254 Call _AndroidJNIHelper.ConvertToJNIArray, X0
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, X21
	257 Call AndroidJavaProxy.GetRawProxy, X0
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X0, X21
	260 Call 0x1C17E08
	261 Move X8, [X0]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X0, X21
	264 Call 0x1C17E08
	265 Move V0, [X0]
	266 Move [X19], S0
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X0, X21
	269 Call 0x1C17E08
	270 Move V0, [X0]
	271 Move [X19], D0
	272 Move X20, [X31+80]
	273 Move X19, [X31+88]
	274 Move X22, [X31+64]
	275 Move X21, [X31+72]
	276 Move X24, [X31+48]
	277 Move X23, [X31+56]
	278 Move X26, [X31+32]
	279 Move X25, [X31+40]
	280 Move X28, [X31+16]
	281 Move X27, [X31+24]
	282 Move X29, [X31+96]
	283 Move X30, [X31+104]
	284 Return 
	285 Call 0x1C17F28
	286 Call 0x1C17F20
	287 Move X0, X21
	288 Move X1, X31
	289 Call "il2cpp_vm_object_is_inst", X0
	290 Move X20, X0
	291 Move X0, 0x57A000
	292 Move X0, [X0+680]
	293 Call 0x1C17D08
	294 Move X19, X0
	295 Move X21, X31
	296 Compare X20, 0
	297 JumpIfEqual {304}
	298 Move X8, [X20]
	299 Move X0, X20
	300 Move X9, [X8+360]
	301 Move X1, [X8+368]
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move X21, X0
	304 Move X0, 0x517000
	305 Move X0, [X0+2480]
	306 Call 0x1C17D08
	307 Move X2, X0
	308 Move X0, X19
	309 Move X1, X21
	310 Move X3, X31
	311 Call String.Concat, X0, X1, X2
	312 Move X19, X0
	313 Move X0, 0x50F000
	314 Move X0, [X0+2000]
	315 Call 0x1C17D08
	316 Call 0x1C17F10
	317 Move X1, X19
	318 Move X2, X31
	319 Move X20, X0
	320 Call Exception..ctor, X0, X1
	321 Move X0, 0x57A000
	322 Move X0, [X0+688]
	323 Call 0x1C17D08
	324 Move X1, X0
	325 Move X0, X20
	326 Call 0x1C17DEC
	327 Move X0, X21
	328 Call 0x1C181E0

Method: System.Object UnboxArray(UnityEngine.AndroidJavaObject obj)

Disassembly:
	0x03BF4D00 STR D8, [X31 - 0x60]!
	0x03BF4D04 STP X30, X27, [X31 + 0x10]
	0x03BF4D08 STP X26, X25, [X31 + 0x20]
	0x03BF4D0C STP X24, X23, [X31 + 0x30]
	0x03BF4D10 STP X22, X21, [X31 + 0x40]
	0x03BF4D14 STP X20, X19, [X31 + 0x50]
	0x03BF4D18 ADRP X27, 0x7EF000
	0x03BF4D1C ADRP X26, 0x500000
	0x03BF4D20 LDRB W8, [X27 + 0x7B2]
	0x03BF4D24 LDR X26, [X26 + 0xC50]
	0x03BF4D28 MOV W19, W6
	0x03BF4D2C MOV W25, W5
	0x03BF4D30 MOV X20, X4
	0x03BF4D34 MOV X22, X3
	0x03BF4D38 MOV W23, W2
	0x03BF4D3C MOV X24, X1
	0x03BF4D40 MOV X21, X0
	0x03BF4D44 TBNZ X8, 0x0, 0x3BF4D68
	0x03BF4D48 ADRP X0, 0x56A000
	0x03BF4D4C LDR X0, [X0 + 0x730]
	0x03BF4D50 BL 0x1C16CF4
	0x03BF4D54 ADRP X0, 0x500000
	0x03BF4D58 LDR X0, [X0 + 0xC50]
	0x03BF4D5C BL 0x1C16CF4
	0x03BF4D60 MOVZ W8, 0x1
	0x03BF4D64 STRB W8, [X27 + 0x7B2]
	0x03BF4D68 LDR X0, [X21 + 0x28]
	0x03BF4D6C LDR X2, [X26]
	0x03BF4D70 MOV X1, X24
	0x03BF4D74 BL 0x21BA5B0
	0x03BF4D78 TBZ X0, 0x0, 0x3BF4DF0
	0x03BF4D7C ADRP X8, 0x56A000
	0x03BF4D80 LDR X8, [X8 + 0x730]
	0x03BF4D84 LDR X0, [X8]
	0x03BF4D88 BL 0x1C16F10
	0x03BF4D8C MOVZ W8, 0x42C80000
	0x03BF4D90 SCVTF S0, W25
	0x03BF4D94 FMOV S1, W8
	0x03BF4D98 MOV X1, X31
	0x03BF4D9C MOV X26, X0
	0x03BF4DA0 FDIV S8, S0, S1
	0x03BF4DA4 BL 0x33BDD8C
	0x03BF4DA8 STR X24, [X26 + 0x10]
	0x03BF4DAC STR W23, [X26 + 0x18]
	0x03BF4DB0 STP X22, X20, [X26 + 0x20]
	0x03BF4DB4 STR S8, [X26 + 0x30]
	0x03BF4DB8 STR W19, [X26 + 0x34]
	0x03BF4DBC LDR X8, [X21 + 0x20]
	0x03BF4DC0 CBZ X8, 0x3BF4DF0
	0x03BF4DC4 LDR X3, [X8 + 0x18]
	0x03BF4DC8 LDR X0, [X8 + 0x40]
	0x03BF4DCC LDR X2, [X8 + 0x28]
	0x03BF4DD0 MOV X1, X26
	0x03BF4DD4 LDP X20, X19, [X31 + 0x50]
	0x03BF4DD8 LDP X22, X21, [X31 + 0x40]
	0x03BF4DDC LDP X24, X23, [X31 + 0x30]
	0x03BF4DE0 LDP X26, X25, [X31 + 0x20]
	0x03BF4DE4 LDP X30, X27, [X31 + 0x10]
	0x03BF4DE8 LDR V8, [X31], #0x60
	0x03BF4DEC BR X3
	0x03BF4DF0 LDP X20, X19, [X31 + 0x50]
	0x03BF4DF4 LDP X22, X21, [X31 + 0x40]
	0x03BF4DF8 LDP X24, X23, [X31 + 0x30]
	0x03BF4DFC LDP X26, X25, [X31 + 0x20]
	0x03BF4E00 LDP X30, X27, [X31 + 0x10]
	0x03BF4E04 LDR V8, [X31], #0x60
	0x03BF4E08 RET
	0x03BF4E0C STR X30, [X31 - 0x30]!
	0x03BF4E10 STP X22, X21, [X31 + 0x10]
	0x03BF4E14 STP X20, X19, [X31 + 0x20]
	0x03BF4E18 ADRP X22, 0x7EF000
	0x03BF4E1C ADRP X21, 0x528000
	0x03BF4E20 LDRB W8, [X22 + 0x7B3]
	0x03BF4E24 LDR X21, [X21 + 0xAB8]
	0x03BF4E28 MOV X19, X1
	0x03BF4E2C MOV X20, X0
	0x03BF4E30 TBNZ X8, 0x0, 0x3BF4E54
	0x03BF4E34 ADRP X0, 0x528000
	0x03BF4E38 LDR X0, [X0 + 0xAB8]
	0x03BF4E3C BL 0x1C16CF4
	0x03BF4E40 ADRP X0, 0x56A000
	0x03BF4E44 LDR X0, [X0 + 0x738]
	0x03BF4E48 BL 0x1C16CF4
	0x03BF4E4C MOVZ W8, 0x1
	0x03BF4E50 STRB W8, [X22 + 0x7B3]
	0x03BF4E54 LDR X0, [X21]
	0x03BF4E58 ADRP X21, 0x56A000
	0x03BF4E5C LDR W8, [X0 + 0xE0]
	0x03BF4E60 LDR X21, [X21 + 0x738]
	0x03BF4E64 CBNZ W8, 0x3BF4E6C
	0x03BF4E68 BL 0x1C16DFC
	0x03BF4E6C LDR X1, [X21]
	0x03BF4E70 MOV X0, X20
	0x03BF4E74 BL 0x3BEF0B4
	0x03BF4E78 STR X19, [X20 + 0x20]
	0x03BF4E7C LDP X20, X19, [X31 + 0x20]
	0x03BF4E80 LDP X22, X21, [X31 + 0x10]
	0x03BF4E84 LDR X30, [X31], #0x30
	0x03BF4E88 RET
	0x03BF4E8C STP X30, X21, [X31 - 0x20]!
	0x03BF4E90 STP X20, X19, [X31 + 0x10]
	0x03BF4E94 ADRP X21, 0x7EF000
	0x03BF4E98 LDRB W8, [X21 + 0x7B4]
	0x03BF4E9C MOV W19, W1
	0x03BF4EA0 MOV X20, X0
	0x03BF4EA4 TBNZ X8, 0x0, 0x3BF4EBC
	0x03BF4EA8 ADRP X0, 0x56A000
	0x03BF4EAC LDR X0, [X0 + 0x740]
	0x03BF4EB0 BL 0x1C16CF4
	0x03BF4EB4 MOVZ W8, 0x1
	0x03BF4EB8 STRB W8, [X21 + 0x7B4]
	0x03BF4EBC LDR X21, [X20 + 0x20]
	0x03BF4EC0 CBZ X21, 0x3BF4F04
	0x03BF4EC4 ADRP X8, 0x56A000
	0x03BF4EC8 LDR X8, [X8 + 0x740]
	0x03BF4ECC LDR X0, [X8]
	0x03BF4ED0 BL 0x1C16F10
	0x03BF4ED4 MOV X1, X31
	0x03BF4ED8 MOV X20, X0
	0x03BF4EDC AND W19, W19, 0x1
	0x03BF4EE0 BL 0x33BDD8C
	0x03BF4EE4 STRB W19, [X20 + 0x10]
	0x03BF4EE8 LDR X3, [X21 + 0x18]
	0x03BF4EEC LDR X0, [X21 + 0x40]
	0x03BF4EF0 LDR X2, [X21 + 0x28]
	0x03BF4EF4 MOV X1, X20
	0x03BF4EF8 LDP X20, X19, [X31 + 0x10]
	0x03BF4EFC LDP X30, X21, [X31], #0x20
	0x03BF4F00 BR X3
	0x03BF4F04 LDP X20, X19, [X31 + 0x10]
	0x03BF4F08 LDP X30, X21, [X31], #0x20
	0x03BF4F0C RET
	0x03BF4F10 STP X30, X25, [X31 - 0x40]!
	0x03BF4F14 STP X24, X23, [X31 + 0x10]
	0x03BF4F18 STP X22, X21, [X31 + 0x20]
	0x03BF4F1C STP X20, X19, [X31 + 0x30]
	0x03BF4F20 ADRP X23, 0x7EF000
	0x03BF4F24 ADRP X22, 0x528000
	0x03BF4F28 LDRB W8, [X23 + 0x7B5]
	0x03BF4F2C LDR X22, [X22 + 0xAB8]
	0x03BF4F30 MOV X20, X2
	0x03BF4F34 MOV X21, X1
	0x03BF4F38 MOV X19, X0
	0x03BF4F3C TBNZ X8, 0x0, 0x3BF4F84
	0x03BF4F40 ADRP X0, 0x528000
	0x03BF4F44 LDR X0, [X0 + 0xAB8]
	0x03BF4F48 BL 0x1C16CF4
	0x03BF4F4C ADRP X0, 0x53D000
	0x03BF4F50 LDR X0, [X0 + 0x308]
	0x03BF4F54 BL 0x1C16CF4
	0x03BF4F58 ADRP X0, 0x56A000
	0x03BF4F5C LDR X0, [X0 + 0x748]
	0x03BF4F60 BL 0x1C16CF4
	0x03BF4F64 ADRP X0, 0x56A000
	0x03BF4F68 LDR X0, [X0 + 0x750]
	0x03BF4F6C BL 0x1C16CF4
	0x03BF4F70 ADRP X0, 0x56A000
	0x03BF4F74 LDR X0, [X0 + 0x758]
	0x03BF4F78 BL 0x1C16CF4
	0x03BF4F7C MOVZ W8, 0x1
	0x03BF4F80 STRB W8, [X23 + 0x7B5]
	0x03BF4F84 LDR X0, [X22]
	0x03BF4F88 ADRP X25, 0x56A000
	0x03BF4F8C ADRP X24, 0x53D000
	0x03BF4F90 ADRP X23, 0x56A000
	0x03BF4F94 ADRP X22, 0x56A000
	0x03BF4F98 LDR W8, [X0 + 0xE0]
	0x03BF4F9C LDR X25, [X25 + 0x758]
	0x03BF4FA0 LDR X24, [X24 + 0x308]
	0x03BF4FA4 LDR X23, [X23 + 0x750]
	0x03BF4FA8 LDR X22, [X22 + 0x748]
	0x03BF4FAC CBNZ W8, 0x3BF4FB4
	0x03BF4FB0 BL 0x1C16DFC
	0x03BF4FB4 LDR X1, [X25]
	0x03BF4FB8 MOV X0, X19
	0x03BF4FBC BL 0x3BEF0B4
	0x03BF4FC0 STR X21, [X19 + 0x20]
	0x03BF4FC4 LDR X1, [X24]
	0x03BF4FC8 MOV X0, X20
	0x03BF4FCC BL 0x21D79F4
	0x03BF4FD0 STR X0, [X19 + 0x28]
	0x03BF4FD4 LDR X0, [X23]
	0x03BF4FD8 BL 0x1C16F10
	0x03BF4FDC LDR X1, [X22]
	0x03BF4FE0 MOV X20, X0
	0x03BF4FE4 BL 0x301B7C4
	0x03BF4FE8 STP X20, X31, [X19 + 0x30]
	0x03BF4FEC LDP X20, X19, [X31 + 0x30]
	0x03BF4FF0 LDP X22, X21, [X31 + 0x20]
	0x03BF4FF4 LDP X24, X23, [X31 + 0x10]
	0x03BF4FF8 LDP X30, X25, [X31], #0x40
	0x03BF4FFC RET
	0x03BF5000 SUB X31, X31, 0x90
	0x03BF5004 STP X29, X30, [X31 + 0x30]
	0x03BF5008 STP X28, X27, [X31 + 0x40]
	0x03BF500C STP X26, X25, [X31 + 0x50]
	0x03BF5010 STP X24, X23, [X31 + 0x60]
	0x03BF5014 STP X22, X21, [X31 + 0x70]
	0x03BF5018 STP X20, X19, [X31 + 0x80]
	0x03BF501C ADRP X21, 0x7EE000
	0x03BF5020 LDRB W8, [X21 + 0x7B6]
	0x03BF5024 MOV X20, X4
	0x03BF5028 MOV X22, X3
	0x03BF502C MOV X23, X2
	0x03BF5030 MOV X24, X1
	0x03BF5034 MOV X19, X0
	0x03BF5038 TBNZ X8, 0x0, 0x3BF50A4
	0x03BF503C ADRP X0, 0x569000
	0x03BF5040 LDR X0, [X0 + 0x760]
	0x03BF5044 BL 0x1C16CF4
	0x03BF5048 ADRP X0, 0x569000
	0x03BF504C LDR X0, [X0 + 0x768]
	0x03BF5050 BL 0x1C16CF4
	0x03BF5054 ADRP X0, 0x55D000
	0x03BF5058 LDR X0, [X0 + 0xD88]
	0x03BF505C BL 0x1C16CF4
	0x03BF5060 ADRP X0, 0x500000
	0x03BF5064 LDR X0, [X0 + 0xE78]
	0x03BF5068 BL 0x1C16CF4
	0x03BF506C ADRP X0, 0x569000
	0x03BF5070 LDR X0, [X0 + 0x770]
	0x03BF5074 BL 0x1C16CF4
	0x03BF5078 ADRP X0, 0x4FF000
	0x03BF507C LDR X0, [X0 + 0x1C8]
	0x03BF5080 BL 0x1C16CF4
	0x03BF5084 ADRP X0, 0x4FE000
	0x03BF5088 LDR X0, [X0 + 0x9D0]
	0x03BF508C BL 0x1C16CF4
	0x03BF5090 ADRP X0, 0x569000
	0x03BF5094 LDR X0, [X0 + 0x778]
	0x03BF5098 BL 0x1C16CF4
	0x03BF509C MOVZ W8, 0x1
	0x03BF50A0 STRB W8, [X21 + 0x7B6]
	0x03BF50A4 LDR X8, [X19 + 0x20]
	0x03BF50A8 CBZ X8, 0x3BF5274
	0x03BF50AC STR X24, [X31 + 0x8]
	0x03BF50B0 CBZ X23, 0x3BF535C
	0x03BF50B4 LDR X8, [X19 + 0x28]
	0x03BF50B8 CBZ X8, 0x3BF535C
	0x03BF50BC LDR X9, [X23 + 0x18]
	0x03BF50C0 LDR W8, [X8 + 0x18]
	0x03BF50C4 CMP W9, 0x1
	0x03BF50C8 STR W8, [X31 + 0x4]
	0x03BF50CC STR X9, [X31 + 0x10]
	0x03BF50D0 B.LT 0x3BF5200
	0x03BF50D4 LDR X8, [X31 + 0x10]
	0x03BF50D8 AND X8, X8, 0x0
	0x03BF50DC CBZ X8, 0x3BF51FC
	0x03BF50E0 SUB X9, X8, 0x1
	0x03BF50E4 ADD X8, X20, 0x20
	0x03BF50E8 MOV X28, X31
	0x03BF50EC STR X8, [X31 + 0x28]
	0x03BF50F0 ADD X8, X22, 0x20
	0x03BF50F4 ADD X26, X23, 0x20
	0x03BF50F8 STP X9, X8, [X31 + 0x18]
	0x03BF50FC CBZ X22, 0x3BF535C
	0x03BF5100 LDR W8, [X22 + 0x18]
	0x03BF5104 CMP X28, X8
	0x03BF5108 B.CS 0x3BF51FC
	0x03BF510C CBZ X20, 0x3BF535C
	0x03BF5110 LDR W8, [X20 + 0x18]
	0x03BF5114 CMP X28, X8
	0x03BF5118 B.CS 0x3BF51FC
	0x03BF511C LDR X8, [X31 + 0x20]
	0x03BF5120 LDR X24, [X19 + 0x30]
	0x03BF5124 LDR X29, [X26, X28, LSL #3]
	0x03BF5128 LDR W21, [X8, X28, LSL #2]
	0x03BF512C LDR X8, [X31 + 0x28]
	0x03BF5130 LDR W27, [X8, X28, LSL #2]
	0x03BF5134 ADRP X8, 0x569000
	0x03BF5138 LDR X8, [X8 + 0x760]
	0x03BF513C LDR X0, [X8]
	0x03BF5140 BL 0x1C16F10
	0x03BF5144 MOV X1, X31
	0x03BF5148 MOV X25, X0
	0x03BF514C BL 0x33BDD8C
	0x03BF5150 STR X29, [X25 + 0x10]
	0x03BF5154 STP W21, W27, [X25 + 0x18]
	0x03BF5158 CBZ X24, 0x3BF535C
	0x03BF515C ADRP X9, 0x569000
	0x03BF5160 LDR W10, [X24 + 0x1C]
	0x03BF5164 LDR X8, [X24 + 0x10]
	0x03BF5168 LDR X9, [X9 + 0x768]
	0x03BF516C ADD W10, W10, 0x1
	0x03BF5170 LDR X9, [X9]
	0x03BF5174 STR W10, [X24 + 0x1C]
	0x03BF5178 CBZ X8, 0x3BF535C
	0x03BF517C LDRSW X10, [X24 + 0x18]
	0x03BF5180 LDR W11, [X8 + 0x18]
	0x03BF5184 CMP W10, W11
	0x03BF5188 B.CS 0x3BF51A0
	0x03BF518C ADD W9, W10, 0x1
	0x03BF5190 ADD X8, X8, X10, 0x3, LSL
	0x03BF5194 STR W9, [X24 + 0x18]
	0x03BF5198 STR X25, [X8 + 0x20]
	0x03BF519C B 0x3BF51B8
	0x03BF51A0 LDR X8, [X9 + 0x20]
	0x03BF51A4 MOV X0, X24
	0x03BF51A8 MOV X1, X25
	0x03BF51AC LDR X8, [X8 + 0xC0]
	0x03BF51B0 LDR X2, [X8 + 0x70]
	0x03BF51B4 BL 0x301BF90
	0x03BF51B8 LDR W8, [X23 + 0x18]
	0x03BF51BC CMP X28, X8
	0x03BF51C0 B.CS 0x3BF51FC
	0x03BF51C4 LDR X0, [X19 + 0x28]
	0x03BF51C8 CBZ X0, 0x3BF535C
	0x03BF51CC ADRP X8, 0x55D000
	0x03BF51D0 LDR X1, [X26, X28, LSL #3]
	0x03BF51D4 LDR X8, [X8 + 0xD88]
	0x03BF51D8 LDR X2, [X8]
	0x03BF51DC BL 0x301D7A8
	0x03BF51E0 LDR X8, [X31 + 0x18]
	0x03BF51E4 CMP X8, X28
	0x03BF51E8 B.EQ 0x3BF5200
	0x03BF51EC LDR W8, [X23 + 0x18]
	0x03BF51F0 ADD X28, X28, 0x1
	0x03BF51F4 CMP X28, X8
	0x03BF51F8 B.CC 0x3BF50FC
	0x03BF51FC BL 0x1C16F28
	0x03BF5200 LDR X8, [X19 + 0x38]
	0x03BF5204 LDR X9, [X31 + 0x8]
	0x03BF5208 ADD X20, X8, X9
	0x03BF520C LDR X8, [X31 + 0x10]
	0x03BF5210 LDR W9, [X31 + 0x4]
	0x03BF5214 STR X20, [X19 + 0x38]
	0x03BF5218 CMP W9, W8
	0x03BF521C B.NE 0x3BF5294
	0x03BF5220 LDR X0, [X19 + 0x30]
	0x03BF5224 CBZ X0, 0x3BF535C
	0x03BF5228 ADRP X8, 0x569000
	0x03BF522C LDR X19, [X19 + 0x20]
	0x03BF5230 LDR X8, [X8 + 0x770]
	0x03BF5234 LDR X1, [X8]
	0x03BF5238 BL 0x301DDC4
	0x03BF523C CBZ X19, 0x3BF535C
	0x03BF5240 MOV X2, X0
	0x03BF5244 LDR X4, [X19 + 0x18]
	0x03BF5248 LDR X0, [X19 + 0x40]
	0x03BF524C LDR X3, [X19 + 0x28]
	0x03BF5250 MOV X1, X20
	0x03BF5254 LDP X20, X19, [X31 + 0x80]
	0x03BF5258 LDP X22, X21, [X31 + 0x70]
	0x03BF525C LDP X24, X23, [X31 + 0x60]
	0x03BF5260 LDP X26, X25, [X31 + 0x50]
	0x03BF5264 LDP X28, X27, [X31 + 0x40]
	0x03BF5268 LDP X29, X30, [X31 + 0x30]
	0x03BF526C ADD X31, X31, 0x90
	0x03BF5270 BR X4
	0x03BF5274 LDP X20, X19, [X31 + 0x80]
	0x03BF5278 LDP X22, X21, [X31 + 0x70]
	0x03BF527C LDP X24, X23, [X31 + 0x60]
	0x03BF5280 LDP X26, X25, [X31 + 0x50]
	0x03BF5284 LDP X28, X27, [X31 + 0x40]
	0x03BF5288 LDP X29, X30, [X31 + 0x30]
	0x03BF528C ADD X31, X31, 0x90
	0x03BF5290 RET
	0x03BF5294 BL 0x3BF48D8
	0x03BF5298 ADRP X8, 0x4FE000
	0x03BF529C LDR X8, [X8 + 0x9D0]
	0x03BF52A0 MOV X20, X0
	0x03BF52A4 MOVZ W1, 0x2
	0x03BF52A8 LDR X8, [X8]
	0x03BF52AC MOV X0, X8
	0x03BF52B0 BL 0x1C16D6C
	0x03BF52B4 LDR X8, [X19 + 0x28]
	0x03BF52B8 CBZ X8, 0x3BF535C
	0x03BF52BC ADRP X9, 0x500000
	0x03BF52C0 LDR X9, [X9 + 0xE78]
	0x03BF52C4 MOV X21, X0
	0x03BF52C8 MOV X0, X8
	0x03BF52CC LDR X1, [X9]
	0x03BF52D0 BL 0x301DDC4
	0x03BF52D4 CBZ X21, 0x3BF535C
	0x03BF52D8 MOV X22, X0
	0x03BF52DC CBZ X0, 0x3BF52F4
	0x03BF52E0 LDR X8, [X21]
	0x03BF52E4 MOV X0, X22
	0x03BF52E8 LDR X1, [X8 + 0x40]
	0x03BF52EC BL 0x1C16E00
	0x03BF52F0 CBZ X0, 0x3BF5360
	0x03BF52F4 LDR W8, [X21 + 0x18]
	0x03BF52F8 CBZ W8, 0x3BF51FC
	0x03BF52FC LDR X8, [X21]
	0x03BF5300 STR X22, [X21 + 0x20]
	0x03BF5304 MOV X0, X19
	0x03BF5308 LDR X1, [X8 + 0x40]
	0x03BF530C BL 0x1C16E00
	0x03BF5310 CBZ X0, 0x3BF5360
	0x03BF5314 LDR W8, [X21 + 0x18]
	0x03BF5318 CMP W8, 0x1
	0x03BF531C B.LS 0x3BF51FC
	0x03BF5320 STR X19, [X21 + 0x28]
	0x03BF5324 CBZ X20, 0x3BF535C
	0x03BF5328 ADRP X8, 0x569000
	0x03BF532C LDR X8, [X8 + 0x778]
	0x03BF5330 MOV X0, X20
	0x03BF5334 MOV X2, X21
	0x03BF5338 LDP X20, X19, [X31 + 0x80]
	0x03BF533C LDR X1, [X8]
	0x03BF5340 LDP X22, X21, [X31 + 0x70]
	0x03BF5344 LDP X24, X23, [X31 + 0x60]
	0x03BF5348 LDP X26, X25, [X31 + 0x50]
	0x03BF534C LDP X28, X27, [X31 + 0x40]
	0x03BF5350 LDP X29, X30, [X31 + 0x30]
	0x03BF5354 ADD X31, X31, 0x90
	0x03BF5358 B 0x3BF2498
	0x03BF535C BL 0x1C16F20
	0x03BF5360 BL 0x1C16F44
	0x03BF5364 MOV X1, X31
	0x03BF5368 BL 0x1C16DEC
	0x03BF536C STR X30, [X31 - 0x40]!
	0x03BF5370 STP X24, X23, [X31 + 0x10]
	0x03BF5374 STP X22, X21, [X31 + 0x20]
	0x03BF5378 STP X20, X19, [X31 + 0x30]
	0x03BF537C ADRP X21, 0x7EE000
	0x03BF5380 LDRB W8, [X21 + 0x7B7]
	0x03BF5384 MOV X19, X1
	0x03BF5388 MOV X20, X0
	0x03BF538C TBNZ X8, 0x0, 0x3BF53A4
	0x03BF5390 ADRP X0, 0x4FF000
	0x03BF5394 LDR X0, [X0 + 0xE68]
	0x03BF5398 BL 0x1C16CF4
	0x03BF539C MOVZ W8, 0x1
	0x03BF53A0 STRB W8, [X21 + 0x7B7]
	0x03BF53A4 ADRP X24, 0x4FF000
	0x03BF53A8 LDR X21, [X20 + 0x20]!
	0x03BF53AC LDR X24, [X24 + 0xE68]
	0x03BF53B0 MOV X0, X21
	0x03BF53B4 MOV X1, X19
	0x03BF53B8 MOV X2, X31
	0x03BF53BC BL 0x33C0DE4
	0x03BF53C0 CBZ X0, 0x3BF53E0
	0x03BF53C4 LDR X23, [X24]
	0x03BF53C8 MOV X22, X0
	0x03BF53CC MOV X1, X23
	0x03BF53D0 BL 0x1C16E00
	0x03BF53D4 MOV X1, X0
	0x03BF53D8 CBNZ X0, 0x3BF53E4
	0x03BF53DC B 0x3BF5410
	0x03BF53E0 MOV X1, X31
	0x03BF53E4 MOV X0, X20
	0x03BF53E8 MOV X2, X21
	0x03BF53EC BL 0x1C24138
	0x03BF53F0 CMP X21, X0
	0x03BF53F4 MOV X21, X0
	0x03BF53F8 B.NE 0x3BF53B0
	0x03BF53FC LDP X20, X19, [X31 + 0x30]
	0x03BF5400 LDP X22, X21, [X31 + 0x20]
	0x03BF5404 LDP X24, X23, [X31 + 0x10]
	0x03BF5408 LDR X30, [X31], #0x40
	0x03BF540C RET
	0x03BF5410 MOV X0, X22
	0x03BF5414 MOV X1, X23
	0x03BF5418 BL 0x1C171E0
	0x03BF541C STR X30, [X31 - 0x40]!
	0x03BF5420 STP X24, X23, [X31 + 0x10]
	0x03BF5424 STP X22, X21, [X31 + 0x20]
	0x03BF5428 STP X20, X19, [X31 + 0x30]
	0x03BF542C ADRP X21, 0x7EE000
	0x03BF5430 LDRB W8, [X21 + 0x7B8]
	0x03BF5434 MOV X19, X1
	0x03BF5438 MOV X20, X0
	0x03BF543C TBNZ X8, 0x0, 0x3BF5454
	0x03BF5440 ADRP X0, 0x4FF000
	0x03BF5444 LDR X0, [X0 + 0xE68]
	0x03BF5448 BL 0x1C16CF4
	0x03BF544C MOVZ W8, 0x1
	0x03BF5450 STRB W8, [X21 + 0x7B8]
	0x03BF5454 ADRP X24, 0x4FF000
	0x03BF5458 LDR X21, [X20 + 0x20]!
	0x03BF545C LDR X24, [X24 + 0xE68]
	0x03BF5460 MOV X0, X21
	0x03BF5464 MOV X1, X19
	0x03BF5468 MOV X2, X31
	0x03BF546C BL 0x33C0FDC
	0x03BF5470 CBZ X0, 0x3BF5490
	0x03BF5474 LDR X23, [X24]
	0x03BF5478 MOV X22, X0
	0x03BF547C MOV X1, X23
	0x03BF5480 BL 0x1C16E00
	0x03BF5484 MOV X1, X0
	0x03BF5488 CBNZ X0, 0x3BF5494
	0x03BF548C B 0x3BF54C0
	0x03BF5490 MOV X1, X31
	0x03BF5494 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x7F0000
	015 Move W8, [X20+1940]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {134}
	021 Move X0, 0x56B000
	022 Move X0, [X0+1696]
	023 Call 0x1C17CF4
	024 Move X0, 0x500000
	025 Move X0, [X0+2448]
	026 Call 0x1C17CF4
	027 Move X0, 0x529000
	028 Move X0, [X0+2568]
	029 Call 0x1C17CF4
	030 Move X0, 0x56B000
	031 Move X0, [X0+1704]
	032 Call 0x1C17CF4
	033 Move X0, 0x56B000
	034 Move X0, [X0+1712]
	035 Call 0x1C17CF4
	036 Move X0, 0x500000
	037 Move X0, [X0+2464]
	038 Call 0x1C17CF4
	039 Move X0, 0x542000
	040 Move X0, [X0+3672]
	041 Call 0x1C17CF4
	042 Move X0, 0x500000
	043 Move X0, [X0+2472]
	044 Call 0x1C17CF4
	045 Move X0, 0x500000
	046 Move X0, [X0+2504]
	047 Call 0x1C17CF4
	048 Move X0, 0x502000
	049 Move X0, [X0+2488]
	050 Call 0x1C17CF4
	051 Move X0, 0x509000
	052 Move X0, [X0+2264]
	053 Call 0x1C17CF4
	054 Move X0, 0x531000
	055 Move X0, [X0+2096]
	056 Call 0x1C17CF4
	057 Move X0, 0x528000
	058 Move X0, [X0+2080]
	059 Call 0x1C17CF4
	060 Move X0, 0x501000
	061 Move X0, [X0+3672]
	062 Call 0x1C17CF4
	063 Move X0, 0x500000
	064 Move X0, [X0+1880]
	065 Call 0x1C17CF4
	066 Move X0, 0x531000
	067 Move X0, [X0+2104]
	068 Call 0x1C17CF4
	069 Move X0, 0x500000
	070 Move X0, [X0+2512]
	071 Call 0x1C17CF4
	072 Move X0, 0x52F000
	073 Move X0, [X0+1800]
	074 Call 0x1C17CF4
	075 Move X0, 0x500000
	076 Move X0, [X0+1592]
	077 Call 0x1C17CF4
	078 Move X0, 0x500000
	079 Move X0, [X0+2760]
	080 Call 0x1C17CF4
	081 Move X0, 0x553000
	082 Move X0, [X0+1536]
	083 Call 0x1C17CF4
	084 Move X0, 0x553000
	085 Move X0, [X0+1544]
	086 Call 0x1C17CF4
	087 Move X0, 0x52A000
	088 Move X0, [X0+1144]
	089 Call 0x1C17CF4
	090 Move X0, 0x56B000
	091 Move X0, [X0+736]
	092 Call 0x1C17CF4
	093 Move X0, 0x553000
	094 Move X0, [X0+1560]
	095 Call 0x1C17CF4
	096 Move X0, 0x56B000
	097 Move X0, [X0+1400]
	098 Call 0x1C17CF4
	099 Move X0, 0x56B000
	100 Move X0, [X0+744]
	101 Call 0x1C17CF4
	102 Move X0, 0x56B000
	103 Move X0, [X0+1296]
	104 Call 0x1C17CF4
	105 Move X0, 0x56B000
	106 Move X0, [X0+1720]
	107 Call 0x1C17CF4
	108 Move X0, 0x56B000
	109 Move X0, [X0+1728]
	110 Call 0x1C17CF4
	111 Move X0, 0x56B000
	112 Move X0, [X0+1736]
	113 Call 0x1C17CF4
	114 Move X0, 0x56B000
	115 Move X0, [X0+1744]
	116 Call 0x1C17CF4
	117 Move X0, 0x56B000
	118 Move X0, [X0+1752]
	119 Call 0x1C17CF4
	120 Move X0, 0x553000
	121 Move X0, [X0+1576]
	122 Call 0x1C17CF4
	123 Move X0, 0x553000
	124 Move X0, [X0+1584]
	125 Call 0x1C17CF4
	126 Move X0, 0x52A000
	127 Move X0, [X0+1168]
	128 Call 0x1C17CF4
	129 Move X0, 0x545000
	130 Move X0, [X0+3848]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X20+1940], W8
	134 Compare X19, 0
	135 JumpIfEqual {347}
	136 Move X8, 0x500000
	137 Move X8, [X8+2448]
	138 Move X20, 0x56B000
	139 Move X24, 0x500000
	140 Move X0, [X8]
	141 Move X20, [X20+1744]
	142 Move X24, [X24+2504]
	143 Call 0x1C17F10
	144 Move X21, [X20]
	145 Move X1, X31
	146 Move X20, X0
	147 Call Object..ctor, X0
	148 Move X0, X20
	149 Move X1, X21
	150 Call AndroidJavaClass._AndroidJavaClass, X0, X1
	151 Move X21, [X24]
	152 Move X8, [X21+56]
	153 Compare X8, 0
	154 JumpIfNotEqual {158}
	155 Move X0, X21
	156 Call 0x1C5D6E0
	157 Move X8, [X21+56]
	158 Move X0, [X8+16]
	159 Move W8, [X0+309]
	160 Move TEMP, X8
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {165}
	164 Call 0x1C5D684
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X8, [X21+56]
	170 Move X21, 0x56B000
	171 Move X23, 0x500000
	172 Move X0, [X8+16]
	173 Move W8, [X0+309]
	174 Move X21, [X21+736]
	175 Move X23, [X23+2464]
	176 Move TEMP, X8
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {181}
	180 Call 0x1C5D684
	181 Move X8, [X0+184]
	182 Move X1, [X21]
	183 Move X3, [X23]
	184 Move X0, X19
	185 Move X2, [X8]
	186 Call AndroidJavaObject.Call, X0, X1, X2
	187 Move X22, [X24]
	188 Move X21, X0
	189 Move X8, [X22+56]
	190 Compare X8, 0
	191 JumpIfNotEqual {195}
	192 Move X0, X22
	193 Call 0x1C5D6E0
	194 Move X8, [X22+56]
	195 Move X0, [X8+16]
	196 Move W8, [X0+309]
	197 Move TEMP, X8
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {202}
	201 Call 0x1C5D684
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move X8, [X22+56]
	207 Move X0, [X8+16]
	208 Move W8, [X0+309]
	209 Move TEMP, X8
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfEqual {214}
	213 Call 0x1C5D684
	214 Compare X21, 0
	215 JumpIfEqual {532}
	216 Move X9, 0x56B000
	217 Move X8, [X0+184]
	218 Move X9, [X9+1720]
	219 Move X3, [X23]
	220 Move X0, X21
	221 Move X2, [X8]
	222 Move X1, [X9]
	223 Call AndroidJavaObject.Call, X0, X1, X2
	224 Move X21, [X24]
	225 Move X23, X0
	226 Move X8, [X21+56]
	227 Compare X8, 0
	228 JumpIfNotEqual {232}
	229 Move X0, X21
	230 Call 0x1C5D6E0
	231 Move X8, [X21+56]
	232 Move X0, [X8+16]
	233 Move W8, [X0+309]
	234 Move TEMP, X8
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {239}
	238 Call 0x1C5D684
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, [X21+56]
	244 Move X0, [X8+16]
	245 Move W8, [X0+309]
	246 Move TEMP, X8
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {251}
	250 Call 0x1C5D684
	251 Compare X23, 0
	252 JumpIfEqual {532}
	253 Move X9, 0x56A000
	254 Move X10, 0x4FF000
	255 Move X8, [X0+184]
	256 Move X9, [X9+744]
	257 Move X10, [X10+2472]
	258 Move X26, 0x4FF000
	259 Move X2, [X8]
	260 Move X1, [X9]
	261 Move X3, [X10]
	262 Move X26, [X26+2512]
	263 Move X0, X23
	264 Call AndroidJavaObject.Call, X0, X1, X2
	265 Move X8, [X26]
	266 Move X22, X0
	267 Move W1, 1
	268 Move X0, X8
	269 Call 0x1C17D6C
	270 Compare X0, 0
	271 JumpIfEqual {532}
	272 Move X8, [X0]
	273 Move X21, X0
	274 Move X0, X19
	275 Move X1, [X8+64]
	276 Call 0x1C17E00
	277 Compare X0, 0
	278 JumpIfEqual {534}
	279 Move W8, [X21+24]
	280 Compare W8, 0
	281 JumpIfEqual {533}
	282 Move [X21+32], X19
	283 Compare X20, 0
	284 JumpIfEqual {532}
	285 Move X8, 0x56A000
	286 Move X9, 0x56A000
	287 Move X8, [X8+1728]
	288 Move X9, [X9+1712]
	289 Move X0, X20
	290 Move X2, X21
	291 Move X1, [X8]
	292 Move X3, [X9]
	293 Call AndroidJavaObject.CallStatic, X0, X1, X2
	294 Move X24, [X24]
	295 Move W21, W0
	296 Move X8, [X24+56]
	297 Compare X8, 0
	298 JumpIfNotEqual {302}
	299 Move X0, X24
	300 Call 0x1C5D6E0
	301 Move X8, [X24+56]
	302 Move X0, [X8+16]
	303 Move W8, [X0+309]
	304 Move TEMP, X8
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfEqual {309}
	308 Call 0x1C5D684
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X8, [X24+56]
	314 Move X25, 0x56A000
	315 Move X24, 0x541000
	316 Move X0, [X8+16]
	317 Move W8, [X0+309]
	318 Move X25, [X25+1736]
	319 Move X24, [X24+3672]
	320 Move TEMP, X8
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfEqual {325}
	324 Call 0x1C5D684
	325 Move X8, [X0+184]
	326 Move X1, [X25]
	327 Move X3, [X24]
	328 Move X0, X23
	329 Move X2, [X8]
	330 Call 0x227B714, X0, X1, X2
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfNotEqual {348}
	335 Move X8, 0x552000
	336 Move X8, [X8+1544]
	337 Move X1, X22
	338 Move X2, X31
	339 Move X0, [X8]
	340 Call String.op_Equality, X0, X1
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {360}
	345 Move X8, 0x500000
	346 Move X8, [X8+3672]
	347 Move X22, X31
	348 Move X8, 0x56A000
	349 Move X8, [X8+1296]
	350 Move X1, X22
	351 Move X2, X31
	352 Move X0, [X8]
	353 Call String.op_Equality, X0, X1
	354 Move TEMP, X0
	355 And TEMP, TEMP, 1
	356 Compare TEMP, 1
	357 JumpIfNotEqual {372}
	358 Move X8, 0x4FF000
	359 Move X8, [X8+2760]
	360 Move X8, 0x544000
	361 Move X8, [X8+3848]
	362 Move X1, X22
	363 Move X2, X31
	364 Move X0, [X8]
	365 Call String.op_Equality, X0, X1
	366 Move TEMP, X0
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfNotEqual {460}
	370 Move X8, 0x501000
	371 Move X8, [X8+2488]
	372 Move X8, 0x56A000
	373 Move X8, [X8+1400]
	374 Move X1, X22
	375 Move X2, X31
	376 Move X0, [X8]
	377 Call String.op_Equality, X0, X1
	378 Move X8, 0x528000
	379 Move X9, 0x56A000
	380 Move X8, [X8+2568]
	381 Move X9, [X9+1696]
	382 And W31, W0, 1
	383 NotImplemented "Instruction CSEL not yet implemented."
	384 Move X0, [X8]
	385 Move W1, W21
	386 Call 0x1C17D6C
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Move X22, X0
	389 Move X27, 0x4FF000
	390 Move X28, 0x56A000
	391 Move X29, 0x56A000
	392 Move X27, [X27+1880]
	393 Move X28, [X28+1752]
	394 Move X29, [X29+1704]
	395 Move W23, W31
	396 Move X0, [X26]
	397 Move W1, 2
	398 Call 0x1C17D6C
	399 Compare X0, 0
	400 JumpIfEqual {532}
	401 Move X8, [X0]
	402 Move X24, X0
	403 Move X0, X19
	404 Move X1, [X8+64]
	405 Call 0x1C17E00
	406 Compare X0, 0
	407 JumpIfEqual {534}
	408 Move W8, [X24+24]
	409 Compare W8, 0
	410 JumpIfEqual {533}
	411 Move [X24+32], X19
	412 Move X0, [X27]
	413 Add X1, X31, 12
	414 Move [X31+12], W23
	415 Call 0x1C17E04
	416 Move X25, X0
	417 Compare X0, 0
	418 JumpIfEqual {425}
	419 Move X8, [X24]
	420 Move X0, X25
	421 Move X1, [X8+64]
	422 Call 0x1C17E00
	423 Compare X0, 0
	424 JumpIfEqual {534}
	425 Move W8, [X24+24]
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move [X24+40], X25
	428 Move X1, [X28]
	429 Move X3, [X29]
	430 Move X0, X20
	431 Move X2, X24
	432 Call AndroidJavaObject.CallStatic, X0, X1, X2
	433 Call _AndroidJNIHelper.Unbox, X0
	434 Compare X22, 0
	435 JumpIfEqual {532}
	436 Move X1, X0
	437 Move X0, X22
	438 Move W2, W23
	439 Move X3, X31
	440 Call Array.SetValue, X0, X1, X2
	441 Add W23, W23, 1
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move X0, X20
	444 Call AndroidJavaObject.Dispose, X0
	445 Move X0, X22
	446 Move X20, [X31+96]
	447 Move X19, [X31+104]
	448 Move X22, [X31+80]
	449 Move X21, [X31+88]
	450 Move X24, [X31+64]
	451 Move X23, [X31+72]
	452 Move X26, [X31+48]
	453 Move X25, [X31+56]
	454 Move X28, [X31+32]
	455 Move X27, [X31+40]
	456 Move X29, [X31+16]
	457 Move X30, [X31+24]
	458 Add X31, X31, 112
	459 Return X0
	460 Move X8, 0x552000
	461 Move X8, [X8+1584]
	462 Move X1, X22
	463 Move X2, X31
	464 Move X0, [X8]
	465 Call String.op_Equality, X0, X1
	466 Move TEMP, X0
	467 And TEMP, TEMP, 1
	468 Compare TEMP, 1
	469 JumpIfNotEqual {472}
	470 Move X8, 0x52E000
	471 Move X8, [X8+1800]
	472 Move X8, 0x529000
	473 Move X8, [X8+1144]
	474 Move X1, X22
	475 Move X2, X31
	476 Move X0, [X8]
	477 Call String.op_Equality, X0, X1
	478 Move TEMP, X0
	479 And TEMP, TEMP, 1
	480 Compare TEMP, 1
	481 JumpIfNotEqual {484}
	482 Move X8, 0x527000
	483 Move X8, [X8+2080]
	484 Move X8, 0x552000
	485 Move X8, [X8+1576]
	486 Move X1, X22
	487 Move X2, X31
	488 Move X0, [X8]
	489 Call String.op_Equality, X0, X1
	490 Move TEMP, X0
	491 And TEMP, TEMP, 1
	492 Compare TEMP, 1
	493 JumpIfNotEqual {496}
	494 Move X8, 0x530000
	495 Move X8, [X8+2104]
	496 Move X8, 0x529000
	497 Move X8, [X8+1168]
	498 Move X1, X22
	499 Move X2, X31
	500 Move X0, [X8]
	501 Call String.op_Equality, X0, X1
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {508}
	506 Move X8, 0x4FF000
	507 Move X8, [X8+1592]
	508 Move X8, 0x552000
	509 Move X8, [X8+1536]
	510 Move X1, X22
	511 Move X2, X31
	512 Move X0, [X8]
	513 Call String.op_Equality, X0, X1
	514 Move TEMP, X0
	515 And TEMP, TEMP, 1
	516 Compare TEMP, 1
	517 JumpIfNotEqual {520}
	518 Move X8, 0x530000
	519 Move X8, [X8+2096]
	520 Move X8, 0x552000
	521 Move X8, [X8+1560]
	522 Move X1, X22
	523 Move X2, X31
	524 Move X0, [X8]
	525 Call String.op_Equality, X0, X1
	526 Move TEMP, X0
	527 And TEMP, TEMP, 1
	528 Compare TEMP, 1
	529 JumpIfNotEqual {537}
	530 Move X8, 0x508000
	531 Move X8, [X8+2264]
	532 Call 0x1C17F20
	533 Call 0x1C17F28
	534 Call 0x1C17F44
	535 Move X1, X31
	536 Call 0x1C17DEC
	537 Move X0, 0x56A000
	538 Move X0, [X0+680]
	539 Call 0x1C17D08
	540 Move X19, X0
	541 Move X0, 0x507000
	542 Move X0, [X0+2480]
	543 Call 0x1C17D08
	544 Move X2, X0
	545 Move X0, X19
	546 Move X1, X22
	547 Move X3, X31
	548 Call String.Concat, X0, X1, X2
	549 Move X19, X0
	550 Move X0, 0x4FF000
	551 Move X0, [X0+2000]
	552 Call 0x1C17D08
	553 Call 0x1C17F10
	554 Move X1, X19
	555 Move X2, X31
	556 Move X20, X0
	557 Call Exception..ctor, X0, X1
	558 Move X0, 0x56A000
	559 Move X0, [X0+1760]
	560 Call 0x1C17D08
	561 Move X1, X0
	562 Move X0, X20
	563 Call 0x1C17DEC

Method: System.Object Unbox(UnityEngine.AndroidJavaObject obj)

Disassembly:
	0x03BF1D14 MOV X20, X0
	0x03BF1D18 BL 0x3BEEED8
	0x03BF1D1C LDR X8, [X21]
	0x03BF1D20 LDR X8, [X8 + 0xB8]
	0x03BF1D24 STR X20, [X8]
	0x03BF1D28 LDR X8, [X21]
	0x03BF1D2C LDR X8, [X8 + 0xB8]
	0x03BF1D30 LDR X8, [X8]
	0x03BF1D34 CBZ X8, 0x3BF1D78
	0x03BF1D38 ADRP X9, 0x56D000
	0x03BF1D3C ADRP X10, 0x56D000
	0x03BF1D40 LDR X9, [X9 + 0x5B8]
	0x03BF1D44 LDR X10, [X10 + 0x5C0]
	0x03BF1D48 LDR X0, [X8 + 0x18]
	0x03BF1D4C MOVZ W3, 0x1
	0x03BF1D50 LDR X1, [X9]
	0x03BF1D54 LDR X2, [X10]
	0x03BF1D58 BL 0x3BE2E24
	0x03BF1D5C LDR X8, [X21]
	0x03BF1D60 LDP X20, X19, [X31 + 0x20]
	0x03BF1D64 LDP X22, X21, [X31 + 0x10]
	0x03BF1D68 LDR X8, [X8 + 0xB8]
	0x03BF1D6C STR X0, [X8 + 0x8]
	0x03BF1D70 LDR X30, [X31], #0x30
	0x03BF1D74 RET
	0x03BF1D78 BL 0x1C16F20
	0x03BF1D7C STP X30, X23, [X31 - 0x30]!
	0x03BF1D80 STP X22, X21, [X31 + 0x10]
	0x03BF1D84 STP X20, X19, [X31 + 0x20]
	0x03BF1D88 ADRP X23, 0x7F2000
	0x03BF1D8C ADRP X22, 0x502000
	0x03BF1D90 LDRB W8, [X23 + 0x776]
	0x03BF1D94 LDR X22, [X22 + 0x9D0]
	0x03BF1D98 MOV X20, X2
	0x03BF1D9C MOV X19, X1
	0x03BF1DA0 MOV X21, X0
	0x03BF1DA4 TBNZ X8, 0x0, 0x3BF1DBC
	0x03BF1DA8 ADRP X0, 0x502000
	0x03BF1DAC LDR X0, [X0 + 0x9D0]
	0x03BF1DB0 BL 0x1C16CF4
	0x03BF1DB4 MOVZ W8, 0x1
	0x03BF1DB8 STRB W8, [X23 + 0x776]
	0x03BF1DBC MOV X0, X21
	0x03BF1DC0 MOV X1, X31
	0x03BF1DC4 BL 0x33BDD8C
	0x03BF1DC8 LDR X0, [X22]
	0x03BF1DCC MOVZ W1, 0x1
	0x03BF1DD0 BL 0x1C16D6C
	0x03BF1DD4 CBZ X0, 0x3BF1E1C
	0x03BF1DD8 MOV X22, X0
	0x03BF1DDC CBZ X20, 0x3BF1DF4
	0x03BF1DE0 LDR X8, [X22]
	0x03BF1DE4 MOV X0, X20
	0x03BF1DE8 LDR X1, [X8 + 0x40]
	0x03BF1DEC BL 0x1C16E00
	0x03BF1DF0 CBZ X0, 0x3BF1E24
	0x03BF1DF4 LDR W8, [X22 + 0x18]
	0x03BF1DF8 CBZ W8, 0x3BF1E20
	0x03BF1DFC STR X20, [X22 + 0x20]
	0x03BF1E00 MOV X0, X21
	0x03BF1E04 MOV X1, X19
	0x03BF1E08 MOV X2, X22
	0x03BF1E0C LDP X20, X19, [X31 + 0x20]
	0x03BF1E10 LDP X22, X21, [X31 + 0x10]
	0x03BF1E14 LDP X30, X23, [X31], #0x30
	0x03BF1E18 B 0x3BF1E38
	0x03BF1E1C BL 0x1C16F20
	0x03BF1E20 BL 0x1C16F28
	0x03BF1E24 BL 0x1C16F44
	0x03BF1E28 MOV X1, X31
	0x03BF1E2C BL 0x1C16DEC
	0x03BF1E30 MOV X1, X31
	0x03BF1E34 B 0x33BDD8C
	0x03BF1E38 STP X30, X23, [X31 - 0x30]!
	0x03BF1E3C STP X22, X21, [X31 + 0x10]
	0x03BF1E40 STP X20, X19, [X31 + 0x20]
	0x03BF1E44 ADRP X22, 0x7F2000
	0x03BF1E48 ADRP X23, 0x56D000
	0x03BF1E4C LDRB W8, [X22 + 0x781]
	0x03BF1E50 LDR X23, [X23 + 0x5C8]
	0x03BF1E54 MOV X19, X2
	0x03BF1E58 MOV X21, X1
	0x03BF1E5C MOV X20, X0
	0x03BF1E60 TBNZ X8, 0x0, 0x3BF1E84
	0x03BF1E64 ADRP X0, 0x56D000
	0x03BF1E68 LDR X0, [X0 + 0x588]
	0x03BF1E6C BL 0x1C16CF4
	0x03BF1E70 ADRP X0, 0x56D000
	0x03BF1E74 LDR X0, [X0 + 0x5C8]
	0x03BF1E78 BL 0x1C16CF4
	0x03BF1E7C MOVZ W8, 0x1
	0x03BF1E80 STRB W8, [X22 + 0x781]
	0x03BF1E84 LDR X0, [X23]
	0x03BF1E88 MOV X1, X21
	0x03BF1E8C MOV X2, X31
	0x03BF1E90 BL 0x321B938
	0x03BF1E94 MOV X1, X0
	0x03BF1E98 BL 0x3BF2AEC
	0x03BF1E9C CBZ X21, 0x3BF1F24
	0x03BF1EA0 ADRP X22, 0x56D000
	0x03BF1EA4 LDR X22, [X22 + 0x588]
	0x03BF1EA8 MOVZ W1, 0x2E
	0x03BF1EAC MOVZ W2, 0x2F
	0x03BF1EB0 MOV X0, X21
	0x03BF1EB4 MOV X3, X31
	0x03BF1EB8 BL 0x32296D0
	0x03BF1EBC BL 0x3BE5BAC
	0x03BF1EC0 LDR X8, [X22]
	0x03BF1EC4 MOV X21, X0
	0x03BF1EC8 MOV X0, X8
	0x03BF1ECC BL 0x1C16F10
	0x03BF1ED0 MOV X1, X21
	0x03BF1ED4 MOV X22, X0
	0x03BF1ED8 BL 0x3BEEED8
	0x03BF1EDC MOV X0, X21
	0x03BF1EE0 STR X22, [X20 + 0x18]
	0x03BF1EE4 BL 0x3BEBA40
	0x03BF1EE8 LDR X8, [X20 + 0x18]
	0x03BF1EEC CBZ X8, 0x3BF1F24
	0x03BF1EF0 LDR X21, [X8 + 0x18]
	0x03BF1EF4 MOV X0, X19
	0x03BF1EF8 BL 0x3BE5988
	0x03BF1EFC MOV X1, X0
	0x03BF1F00 MOV X0, X21
	0x03BF1F04 BL 0x3BE2BF0
	0x03BF1F08 MOV X1, X0
	0x03BF1F0C MOV X0, X20
	0x03BF1F10 MOV X2, X19
	0x03BF1F14 LDP X20, X19, [X31 + 0x20]
	0x03BF1F18 LDP X22, X21, [X31 + 0x10]
	0x03BF1F1C LDP X30, X23, [X31], #0x30
	0x03BF1F20 B 0x3BF22B8
	0x03BF1F24 BL 0x1C16F20
	0x03BF1F28 STP X30, X23, [X31 - 0x30]!
	0x03BF1F2C STP X22, X21, [X31 + 0x10]
	0x03BF1F30 STP X20, X19, [X31 + 0x20]
	0x03BF1F34 ADRP X23, 0x7F2000
	0x03BF1F38 ADRP X22, 0x502000
	0x03BF1F3C LDRB W8, [X23 + 0x777]
	0x03BF1F40 LDR X22, [X22 + 0x9D0]
	0x03BF1F44 MOV X20, X2
	0x03BF1F48 MOV X19, X1
	0x03BF1F4C MOV X21, X0
	0x03BF1F50 TBNZ X8, 0x0, 0x3BF1F68
	0x03BF1F54 ADRP X0, 0x502000
	0x03BF1F58 LDR X0, [X0 + 0x9D0]
	0x03BF1F5C BL 0x1C16CF4
	0x03BF1F60 MOVZ W8, 0x1
	0x03BF1F64 STRB W8, [X23 + 0x777]
	0x03BF1F68 MOV X0, X21
	0x03BF1F6C MOV X1, X31
	0x03BF1F70 BL 0x33BDD8C
	0x03BF1F74 LDR X0, [X22]
	0x03BF1F78 MOVZ W1, 0x1
	0x03BF1F7C BL 0x1C16D6C
	0x03BF1F80 CBZ X0, 0x3BF1FC8
	0x03BF1F84 MOV X22, X0
	0x03BF1F88 CBZ X20, 0x3BF1FA0
	0x03BF1F8C LDR X8, [X22]
	0x03BF1F90 MOV X0, X20
	0x03BF1F94 LDR X1, [X8 + 0x40]
	0x03BF1F98 BL 0x1C16E00
	0x03BF1F9C CBZ X0, 0x3BF1FD0
	0x03BF1FA0 LDR W8, [X22 + 0x18]
	0x03BF1FA4 CBZ W8, 0x3BF1FCC
	0x03BF1FA8 STR X20, [X22 + 0x20]
	0x03BF1FAC MOV X0, X21
	0x03BF1FB0 MOV X1, X19
	0x03BF1FB4 MOV X2, X22
	0x03BF1FB8 LDP X20, X19, [X31 + 0x20]
	0x03BF1FBC LDP X22, X21, [X31 + 0x10]
	0x03BF1FC0 LDP X30, X23, [X31], #0x30
	0x03BF1FC4 B 0x3BF1E38
	0x03BF1FC8 BL 0x1C16F20
	0x03BF1FCC BL 0x1C16F28
	0x03BF1FD0 BL 0x1C16F44
	0x03BF1FD4 MOV X1, X31
	0x03BF1FD8 BL 0x1C16DEC
	0x03BF1FDC STP X30, X23, [X31 - 0x30]!
	0x03BF1FE0 STP X22, X21, [X31 + 0x10]
	0x03BF1FE4 STP X20, X19, [X31 + 0x20]
	0x03BF1FE8 ADRP X23, 0x7F2000
	0x03BF1FEC ADRP X22, 0x502000
	0x03BF1FF0 LDRB W8, [X23 + 0x778]
	0x03BF1FF4 LDR X22, [X22 + 0x9D0]
	0x03BF1FF8 MOV X20, X2
	0x03BF1FFC MOV X19, X1
	0x03BF2000 MOV X21, X0
	0x03BF2004 TBNZ X8, 0x0, 0x3BF201C
	0x03BF2008 ADRP X0, 0x501000
	0x03BF200C LDR X0, [X0 + 0x9D0]
	0x03BF2010 BL 0x1C16CF4
	0x03BF2014 MOVZ W8, 0x1
	0x03BF2018 STRB W8, [X23 + 0x778]
	0x03BF201C MOV X0, X21
	0x03BF2020 MOV X1, X31
	0x03BF2024 BL 0x33BDD8C
	0x03BF2028 LDR X0, [X22]
	0x03BF202C MOVZ W1, 0x1
	0x03BF2030 BL 0x1C16D6C
	0x03BF2034 CBZ X0, 0x3BF207C
	0x03BF2038 MOV X22, X0
	0x03BF203C CBZ X20, 0x3BF2054
	0x03BF2040 LDR X8, [X22]
	0x03BF2044 MOV X0, X20
	0x03BF2048 LDR X1, [X8 + 0x40]
	0x03BF204C BL 0x1C16E00
	0x03BF2050 CBZ X0, 0x3BF2084
	0x03BF2054 LDR W8, [X22 + 0x18]
	0x03BF2058 CBZ W8, 0x3BF2080
	0x03BF205C STR X20, [X22 + 0x20]
	0x03BF2060 MOV X0, X21
	0x03BF2064 MOV X1, X19
	0x03BF2068 MOV X2, X22
	0x03BF206C LDP X20, X19, [X31 + 0x20]
	0x03BF2070 LDP X22, X21, [X31 + 0x10]
	0x03BF2074 LDP X30, X23, [X31], #0x30
	0x03BF2078 B 0x3BF1E38
	0x03BF207C BL 0x1C16F20
	0x03BF2080 BL 0x1C16F28
	0x03BF2084 BL 0x1C16F44
	0x03BF2088 MOV X1, X31
	0x03BF208C BL 0x1C16DEC
	0x03BF2090 STP X30, X23, [X31 - 0x30]!
	0x03BF2094 STP X22, X21, [X31 + 0x10]
	0x03BF2098 STP X20, X19, [X31 + 0x20]
	0x03BF209C ADRP X23, 0x7F1000
	0x03BF20A0 ADRP X22, 0x501000
	0x03BF20A4 LDRB W8, [X23 + 0x779]
	0x03BF20A8 LDR X22, [X22 + 0x9D0]
	0x03BF20AC MOV X20, X2
	0x03BF20B0 MOV X19, X1
	0x03BF20B4 MOV X21, X0
	0x03BF20B8 TBNZ X8, 0x0, 0x3BF20D0
	0x03BF20BC ADRP X0, 0x501000
	0x03BF20C0 LDR X0, [X0 + 0x9D0]
	0x03BF20C4 BL 0x1C16CF4
	0x03BF20C8 MOVZ W8, 0x1
	0x03BF20CC STRB W8, [X23 + 0x779]
	0x03BF20D0 MOV X0, X21
	0x03BF20D4 MOV X1, X31
	0x03BF20D8 BL 0x33BDD8C
	0x03BF20DC LDR X0, [X22]
	0x03BF20E0 MOVZ W1, 0x1
	0x03BF20E4 BL 0x1C16D6C
	0x03BF20E8 CBZ X0, 0x3BF2130
	0x03BF20EC MOV X22, X0
	0x03BF20F0 CBZ X20, 0x3BF2108
	0x03BF20F4 LDR X8, [X22]
	0x03BF20F8 MOV X0, X20
	0x03BF20FC LDR X1, [X8 + 0x40]
	0x03BF2100 BL 0x1C16E00
	0x03BF2104 CBZ X0, 0x3BF2138
	0x03BF2108 LDR W8, [X22 + 0x18]
	0x03BF210C CBZ W8, 0x3BF2134
	0x03BF2110 STR X20, [X22 + 0x20]
	0x03BF2114 MOV X0, X21
	0x03BF2118 MOV X1, X19
	0x03BF211C MOV X2, X22
	0x03BF2120 LDP X20, X19, [X31 + 0x20]
	0x03BF2124 LDP X22, X21, [X31 + 0x10]
	0x03BF2128 LDP X30, X23, [X31], #0x30
	0x03BF212C B 0x3BF1E38
	0x03BF2130 BL 0x1C16F20
	0x03BF2134 BL 0x1C16F28
	0x03BF2138 BL 0x1C16F44
	0x03BF213C MOV X1, X31
	0x03BF2140 BL 0x1C16DEC
	0x03BF2144 STP X30, X23, [X31 - 0x30]!
	0x03BF2148 STP X22, X21, [X31 + 0x10]
	0x03BF214C STP X20, X19, [X31 + 0x20]
	0x03BF2150 ADRP X23, 0x7F1000
	0x03BF2154 ADRP X22, 0x501000
	0x03BF2158 LDRB W8, [X23 + 0x77A]
	0x03BF215C LDR X22, [X22 + 0x9D0]
	0x03BF2160 MOV X20, X2
	0x03BF2164 MOV X19, X1
	0x03BF2168 MOV X21, X0
	0x03BF216C TBNZ X8, 0x0, 0x3BF2184
	0x03BF2170 ADRP X0, 0x501000
	0x03BF2174 LDR X0, [X0 + 0x9D0]
	0x03BF2178 BL 0x1C16CF4
	0x03BF217C MOVZ W8, 0x1
	0x03BF2180 STRB W8, [X23 + 0x77A]
	0x03BF2184 MOV X0, X21
	0x03BF2188 MOV X1, X31
	0x03BF218C BL 0x33BDD8C
	0x03BF2190 LDR X0, [X22]
	0x03BF2194 MOVZ W1, 0x1
	0x03BF2198 BL 0x1C16D6C
	0x03BF219C CBZ X0, 0x3BF21E4
	0x03BF21A0 MOV X22, X0
	0x03BF21A4 CBZ X20, 0x3BF21BC
	0x03BF21A8 LDR X8, [X22]
	0x03BF21AC MOV X0, X20
	0x03BF21B0 LDR X1, [X8 + 0x40]
	0x03BF21B4 BL 0x1C16E00
	0x03BF21B8 CBZ X0, 0x3BF21EC
	0x03BF21BC LDR W8, [X22 + 0x18]
	0x03BF21C0 CBZ W8, 0x3BF21E8
	0x03BF21C4 STR X20, [X22 + 0x20]
	0x03BF21C8 MOV X0, X21
	0x03BF21CC MOV X1, X19
	0x03BF21D0 MOV X2, X22
	0x03BF21D4 LDP X20, X19, [X31 + 0x20]
	0x03BF21D8 LDP X22, X21, [X31 + 0x10]
	0x03BF21DC LDP X30, X23, [X31], #0x30
	0x03BF21E0 B 0x3BF1E38
	0x03BF21E4 BL 0x1C16F20
	0x03BF21E8 BL 0x1C16F28
	0x03BF21EC BL 0x1C16F44
	0x03BF21F0 MOV X1, X31
	0x03BF21F4 BL 0x1C16DEC
	0x03BF21F8 STP X30, X21, [X31 - 0x20]!
	0x03BF21FC STP X20, X19, [X31 + 0x10]
	0x03BF2200 MOV X20, X1
	0x03BF2204 MOV X1, X31
	0x03BF2208 MOV X19, X2
	0x03BF220C MOV X21, X0
	0x03BF2210 BL 0x33BDD8C
	0x03BF2214 MOV X1, X20
	0x03BF2218 MOV X2, X19
	0x03BF221C LDP X20, X19, [X31 + 0x10]
	0x03BF2220 MOV X0, X21
	0x03BF2224 LDP X30, X21, [X31], #0x20
	0x03BF2228 B 0x3BF1E38
	0x03BF222C STR X30, [X31 - 0x40]!
	0x03BF2230 STP X24, X23, [X31 + 0x10]
	0x03BF2234 STP X22, X21, [X31 + 0x20]
	0x03BF2238 STP X20, X19, [X31 + 0x30]
	0x03BF223C ADRP X24, 0x7F1000
	0x03BF2240 ADRP X23, 0x56C000
	0x03BF2244 LDRB W8, [X24 + 0x77C]
	0x03BF2248 LDR X23, [X23 + 0x588]
	0x03BF224C MOV X19, X3
	0x03BF2250 MOV X20, X2
	0x03BF2254 MOV X22, X1
	0x03BF2258 MOV X21, X0
	0x03BF225C TBNZ X8, 0x0, 0x3BF2274
	0x03BF2260 ADRP X0, 0x56C000
	0x03BF2264 LDR X0, [X0 + 0x588]
	0x03BF2268 BL 0x1C16CF4
	0x03BF226C MOVZ W8, 0x1
	0x03BF2270 STRB W8, [X24 + 0x77C]
	0x03BF2274 MOV X0, X21
	0x03BF2278 MOV X1, X31
	0x03BF227C BL 0x33BDD8C
	0x03BF2280 LDR X0, [X23]
	0x03BF2284 BL 0x1C16F10
	0x03BF2288 MOV X1, X22
	0x03BF228C MOV X23, X0
	0x03BF2290 BL 0x3BEEED8
	0x03BF2294 STR X23, [X21 + 0x18]
	0x03BF2298 MOV X0, X21
	0x03BF229C MOV X1, X20
	0x03BF22A0 MOV X2, X19
	0x03BF22A4 LDP X20, X19, [X31 + 0x30]
	0x03BF22A8 LDP X22, X21, [X31 + 0x20]
	0x03BF22AC LDP X24, X23, [X31 + 0x10]
	0x03BF22B0 LDR X30, [X31], #0x40
	0x03BF22B4 B 0x3BF22B8
	0x03BF22B8 STP X29, X30, [X31 - 0x50]!
	0x03BF22BC STR X25, [X31 + 0x10]
	0x03BF22C0 STP X24, X23, [X31 + 0x20]
	0x03BF22C4 STP X22, X21, [X31 + 0x30]
	0x03BF22C8 STP X20, X19, [X31 + 0x40]
	0x03BF22CC ADD X29, X31, 0x0
	0x03BF22D0 SUB X31, X31, 0x10
	0x03BF22D4 MRS X25, 0xC000
	0x03BF22D8 LDR X8, [X25 + 0x28]
	0x03BF22DC ADRP X20, 0x7F1000
	0x03BF22E0 MOV X19, X2
	0x03BF22E4 MOV X23, X1
	0x03BF22E8 STUR X8, [X29 - 0x8]
	0x03BF22EC LDRB W8, [X20 + 0x782]
	0x03BF22F0 MOV X22, X0
	0x03BF22F4 TBNZ X8, 0x0, 0x3BF2324
	0x03BF22F8 ADRP X0, 0x56C000
	0x03BF22FC LDR X0, [X0 + 0x5D0]
	0x03BF2300 BL 0x1C16CF4
	0x03BF2304 ADRP X0, 0x56C000
	0x03BF2308 LDR X0, [X0 + 0x588]
	0x03BF230C BL 0x1C16CF4
	0x03BF2310 ADRP X0, 0x52A000
	0x03BF2314 LDR X0, [X0 + 0x6B8]
	0x03BF2318 BL 0x1C16CF4
	0x03BF231C MOVZ W8, 0x1
	0x03BF2320 STRB W8, [X20 + 0x782]
	0x03BF2324 CBZ X19, 0x3BF2354
	0x03BF2328 LDR X21, [X19 + 0x18]
	0x03BF232C CBZ X21, 0x3BF2358
	0x03BF2330 UBFM X8, X21, 0x20, 0x1F
	0x03BF2334 SBFM X2, X21, 0x3D, 0x1F
	0x03BF2338 CBZ X8, 0x3BF2360
	0x03BF233C ADD X9, X2, 0xF
	0x03BF2340 ADD X8, X31, 0x0
	0x03BF2344 AND X9, X9, 0xFFFFFFFF
	0x03BF2348 SUB X20, X8, X9
	0x03BF234C ADD X31, X20, 0x0
	0x03BF2350 B 0x3BF2364
	0x03BF2354 MOV X21, X31
	0x03BF2358 MOV X20, X31
	0x03BF235C B 0x3BF2380
	0x03BF2360 MOV X20, X31
	0x03BF2364 MOV X0, X20
	0x03BF2368 MOV W1, W31
	0x03BF236C BL 0x3EB1B10
	0x03BF2370 TBZ X21, 0x1F, 0x3BF237C
	0x03BF2374 MOV X0, X31
	0x03BF2378 BL 0x339D6EC
	0x03BF237C AND X21, X21, 0x0
	0x03BF2380 MOV X0, X19
	0x03BF2384 MOV X1, X20
	0x03BF2388 MOV X2, X21
	0x03BF238C BL 0x3BE4724
	0x03BF2390 LDR X8, [X22 + 0x18]
	0x03BF2394 CBZ X8, 0x3BF2414
	0x03BF2398 LDR X0, [X8 + 0x18]
	0x03BF239C MOV X1, X23
	0x03BF23A0 MOV X2, X20
	0x03BF23A4 MOV X3, X21
	0x03BF23A8 BL 0x3BEBDE8
	0x03BF23AC ADRP X8, 0x56C000
	0x03BF23B0 LDR X8, [X8 + 0x588]
	0x03BF23B4 MOV X23, X0
	0x03BF23B8 LDR X0, [X8]
	0x03BF23BC BL 0x1C16F10
	0x03BF23C0 MOV X24, X0
	0x03BF23C4 MOV X1, X23
	0x03BF23C8 BL 0x3BEEED8
	0x03BF23CC STR X24, [X22 + 0x10]
	0x03BF23D0 MOV X0, X23
	0x03BF23D4 BL 0x3BEBA40
	0x03BF23D8 MOV X0, X19
	0x03BF23DC MOV X1, X20
	0x03BF23E0 MOV X2, X21
	0x03BF23E4 BL 0x3BE48A0
	0x03BF23E8 LDR X8, [X25 + 0x28]
	0x03BF23EC LDUR X9, [X29 - 0x8]
	0x03BF23F0 CMP X8, X9
	0x03BF23F4 B.NE 0x3BF2418
	0x03BF23F8 ADD X31, X29, 0x0
	0x03BF23FC LDP X20, X19, [X31 + 0x40]
	0x03BF2400 LDP X22, X21, [X31 + 0x30]
	0x03BF2404 LDP X24, X23, [X31 + 0x20]
	0x03BF2408 LDR X25, [X31 + 0x10]
	0x03BF240C LDP X29, X30, [X31], #0x50
	0x03BF2410 RET
	0x03BF2414 BL 0x1C16F20
	0x03BF2418 BL 0x3EB1B20
	0x03BF241C B 0x3BF2428
	0x03BF2420 B 0x3BF2428
	0x03BF2424 B 0x3BF2428
	0x03BF2428 MOV X22, X0
	0x03BF242C CMP W1, 0x1
	0x03BF2430 B.NE 0x3BF2460
	0x03BF2434 MOV X0, X22
	0x03BF2438 BL 0x3EB1AD0
	0x03BF243C LDR X23, [X0]
	0x03BF2440 BL 0x3EB1AE0
	0x03BF2444 MOV X0, X19
	0x03BF2448 MOV X1, X20
	0x03BF244C MOV X2, X21
	0x03BF2450 BL 0x3BE48A0
	0x03BF2454 CBZ X23, 0x3BF23E8
	0x03BF2458 MOV X0, X23
	0x03BF245C BL 0x1C16F18
	0x03BF2460 MOV X23, X31
	0x03BF2464 B 0x3BF246C
	0x03BF2468 MOV X22, X0
	0x03BF246C MOV X0, X19
	0x03BF2470 MOV X1, X20
	0x03BF2474 MOV X2, X21
	0x03BF2478 BL 0x3BE48A0
	0x03BF247C CBNZ X23, 0x3BF2488
	0x03BF2480 MOV X0, X22
	0x03BF2484 BL 0x1D2C690
	0x03BF2488 MOV X0, X23
	0x03BF248C BL 0x1C16F18
	0x03BF2490 BL 0x1990590
	0x03BF2494 B 0x3BF2498
	0x03BF2498 STR X30, [X31 - 0x30]!
	0x03BF249C STP X22, X21, [X31 + 0x10]
	0x03BF24A0 STP X20, X19, [X31 + 0x20]
	0x03BF24A4 LDR X8, [X0 + 0x18]
	0x03BF24A8 CBZ X8, 0x3BF24F4
	0x03BF24AC LDR X22, [X8 + 0x18]
	0x03BF24B0 MOV X20, X0
	0x03BF24B4 MOV X0, X2
	0x03BF24B8 MOV X19, X2
	0x03BF24BC MOV X21, X1
	0x03BF24C0 BL 0x3BE5988
	0x03BF24C4 MOV X2, X0
	0x03BF24C8 MOV X0, X22
	0x03BF24CC MOV X1, X21
	0x03BF24D0 MOV W3, W31
	0x03BF24D4 BL 0x3BE2E24
	0x03BF24D8 MOV X1, X0
	0x03BF24DC MOV X0, X20
	0x03BF24E0 MOV X2, X19
	0x03BF24E4 LDP X20, X19, [X31 + 0x20]
	0x03BF24E8 LDP X22, X21, [X31 + 0x10]
	0x03BF24EC LDR X30, [X31], #0x30
	0x03BF24F0 B 0x3BF24FC
	0x03BF24F4 BL 0x1C16F20
	0x03BF24F8 B 0x3BF24FC
	0x03BF24FC STP X29, X30, [X31 - 0x40]!
	0x03BF2500 STP X24, X23, [X31 + 0x10]
	0x03BF2504 STP X22, X21, [X31 + 0x20]
	0x03BF2508 STP X20, X19, [X31 + 0x30]
	0x03BF250C ADD X29, X31, 0x0
	0x03BF2510 SUB X31, X31, 0x10
	0x03BF2514 MRS X24, 0xC000
	0x03BF2518 LDR X8, [X24 + 0x28]
	0x03BF251C ADRP X20, 0x7F1000
	0x03BF2520 MOV X19, X2
	0x03BF2524 MOV X22, X1
	0x03BF2528 STUR X8, [X29 - 0x8]
	0x03BF252C LDRB W8, [X20 + 0x783]
	0x03BF2530 MOV X23, X0
	0x03BF2534 TBNZ X8, 0x0, 0x3BF2558
	0x03BF2538 ADRP X0, 0x56C000
	0x03BF253C LDR X0, [X0 + 0x5D8]
	0x03BF2540 BL 0x1C16CF4
	0x03BF2544 ADRP X0, 0x52A000
	0x03BF2548 LDR X0, [X0 + 0x6B8]
	0x03BF254C BL 0x1C16CF4
	0x03BF2550 MOVZ W8, 0x1
	0x03BF2554 STRB W8, [X20 + 0x783]
	0x03BF2558 CBZ X19, 0x3BF2588
	0x03BF255C LDR X21, [X19 + 0x18]
	0x03BF2560 CBZ X21, 0x3BF258C
	0x03BF2564 UBFM X8, X21, 0x20, 0x1F
	0x03BF2568 SBFM X2, X21, 0x3D, 0x1F
	0x03BF256C CBZ X8, 0x3BF2594
	0x03BF2570 ADD X9, X2, 0xF
	0x03BF2574 ADD X8, X31, 0x0
	0x03BF2578 AND X9, X9, 0xFFFFFFFF
	0x03BF257C SUB X20, X8, X9
	0x03BF2580 ADD X31, X20, 0x0
	0x03BF2584 B 0x3BF2598
	0x03BF2588 MOV X21, X31
	0x03BF258C MOV X20, X31
	0x03BF2590 B 0x3BF25B4
	0x03BF2594 MOV X20, X31
	0x03BF2598 MOV X0, X20
	0x03BF259C MOV W1, W31
	0x03BF25A0 BL 0x3EB1B10
	0x03BF25A4 TBZ X21, 0x1F, 0x3BF25B0
	0x03BF25A8 MOV X0, X31
	0x03BF25AC BL 0x339D6EC
	0x03BF25B0 AND X21, X21, 0x0
	0x03BF25B4 MOV X0, X19
	0x03BF25B8 MOV X1, X20
	0x03BF25BC MOV X2, X21
	0x03BF25C0 BL 0x3BE4724
	0x03BF25C4 LDR X8, [X23 + 0x10]
	0x03BF25C8 CBZ X8, 0x3BF2618
	0x03BF25CC LDR X0, [X8 + 0x18]
	0x03BF25D0 MOV X1, X22
	0x03BF25D4 MOV X2, X20
	0x03BF25D8 MOV X3, X21
	0x03BF25DC BL 0x3BEE060
	0x03BF25E0 MOV X0, X19
	0x03BF25E4 MOV X1, X20
	0x03BF25E8 MOV X2, X21
	0x03BF25EC BL 0x3BE48A0
	0x03BF25F0 LDR X8, [X24 + 0x28]
	0x03BF25F4 LDUR X9, [X29 - 0x8]
	0x03BF25F8 CMP X8, X9
	0x03BF25FC B.NE 0x3BF261C
	0x03BF2600 ADD X31, X29, 0x0
	0x03BF2604 LDP X20, X19, [X31 + 0x30]
	0x03BF2608 LDP X22, X21, [X31 + 0x20]
	0x03BF260C LDP X24, X23, [X31 + 0x10]
	0x03BF2610 LDP X29, X30, [X31], #0x40
	0x03BF2614 RET
	0x03BF2618 BL 0x1C16F20
	0x03BF261C BL 0x3EB1B20
	0x03BF2620 B 0x3BF2624
	0x03BF2624 MOV X23, X0
	0x03BF2628 CMP W1, 0x1
	0x03BF262C B.NE 0x3BF265C
	0x03BF2630 MOV X0, X23
	0x03BF2634 BL 0x3EB1AD0
	0x03BF2638 LDR X22, [X0]
	0x03BF263C BL 0x3EB1AE0
	0x03BF2640 MOV X0, X19
	0x03BF2644 MOV X1, X20
	0x03BF2648 MOV X2, X21
	0x03BF264C BL 0x3BE48A0
	0x03BF2650 CBZ X22, 0x3BF25F0
	0x03BF2654 MOV X0, X22
	0x03BF2658 BL 0x1C16F18
	0x03BF265C MOV X22, X31
	0x03BF2660 B 0x3BF2668
	0x03BF2664 MOV X23, X0
	0x03BF2668 MOV X0, X19
	0x03BF266C MOV X1, X20
	0x03BF2670 MOV X2, X21
	0x03BF2674 BL 0x3BE48A0
	0x03BF2678 CBNZ X22, 0x3BF2684
	0x03BF267C MOV X0, X23
	0x03BF2680 BL 0x1D2C690
	0x03BF2684 MOV X0, X22
	0x03BF2688 BL 0x1C16F18
	0x03BF268C BL 0x1990590
	0x03BF2690 B 0x3BF2694
	0x03BF2694 STR X30, [X31 - 0x30]!
	0x03BF2698 STP X22, X21, [X31 + 0x10]
	0x03BF269C STP X20, X19, [X31 + 0x20]
	0x03BF26A0 LDR X8, [X0 + 0x18]
	0x03BF26A4 CBZ X8, 0x3BF26F0
	0x03BF26A8 LDR X22, [X8 + 0x18]
	0x03BF26AC MOV X20, X0
	0x03BF26B0 MOV X0, X2
	0x03BF26B4 MOV X19, X2
	0x03BF26B8 MOV X21, X1
	0x03BF26BC BL 0x3BE5988
	0x03BF26C0 MOV X2, X0
	0x03BF26C4 MOVZ W3, 0x1
	0x03BF26C8 MOV X0, X22
	0x03BF26CC MOV X1, X21
	0x03BF26D0 BL 0x3BE2E24
	0x03BF26D4 MOV X1, X0
	0x03BF26D8 MOV X0, X20
	0x03BF26DC MOV X2, X19
	0x03BF26E0 LDP X20, X19, [X31 + 0x20]
	0x03BF26E4 LDP X22, X21, [X31 + 0x10]
	0x03BF26E8 LDR X30, [X31], #0x30
	0x03BF26EC B 0x3BF26F8
	0x03BF26F0 BL 0x1C16F20
	0x03BF26F4 B 0x3BF26F8
	0x03BF26F8 STP X29, X30, [X31 - 0x40]!
	0x03BF26FC STP X24, X23, [X31 + 0x10]
	0x03BF2700 STP X22, X21, [X31 + 0x20]
	0x03BF2704 STP X20, X19, [X31 + 0x30]
	0x03BF2708 ADD X29, X31, 0x0
	0x03BF270C SUB X31, X31, 0x10
	0x03BF2710 MRS X24, 0xC000
	0x03BF2714 LDR X8, [X24 + 0x28]
	0x03BF2718 ADRP X20, 0x7F1000
	0x03BF271C MOV X19, X2
	0x03BF2720 MOV X22, X1
	0x03BF2724 STUR X8, [X29 - 0x8]
	0x03BF2728 LDRB W8, [X20 + 0x784]
	0x03BF272C MOV X23, X0
	0x03BF2730 TBNZ X8, 0x0, 0x3BF2754
	0x03BF2734 ADRP X0, 0x56C000
	0x03BF2738 LDR X0, [X0 + 0x5E0]
	0x03BF273C BL 0x1C16CF4
	0x03BF2740 ADRP X0, 0x52A000
	0x03BF2744 LDR X0, [X0 + 0x6B8]
	0x03BF2748 BL 0x1C16CF4
	0x03BF274C MOVZ W8, 0x1
	0x03BF2750 STRB W8, [X20 + 0x784]
	0x03BF2754 CBZ X19, 0x3BF2784
	0x03BF2758 LDR X21, [X19 + 0x18]
	0x03BF275C CBZ X21, 0x3BF2788
	0x03BF2760 UBFM X8, X21, 0x20, 0x1F
	0x03BF2764 SBFM X2, X21, 0x3D, 0x1F
	0x03BF2768 CBZ X8, 0x3BF2790
	0x03BF276C ADD X9, X2, 0xF
	0x03BF2770 ADD X8, X31, 0x0
	0x03BF2774 AND X9, X9, 0xFFFFFFFF
	0x03BF2778 SUB X20, X8, X9
	0x03BF277C ADD X31, X20, 0x0
	0x03BF2780 B 0x3BF2794
	0x03BF2784 MOV X21, X31
	0x03BF2788 MOV X20, X31
	0x03BF278C B 0x3BF27B0
	0x03BF2790 MOV X20, X31
	0x03BF2794 MOV X0, X20
	0x03BF2798 MOV W1, W31
	0x03BF279C BL 0x3EB1B10
	0x03BF27A0 TBZ X21, 0x1F, 0x3BF27AC
	0x03BF27A4 MOV X0, X31
	0x03BF27A8 BL 0x339D6EC
	0x03BF27AC AND X21, X21, 0x0
	0x03BF27B0 MOV X0, X19
	0x03BF27B4 MOV X1, X20
	0x03BF27B8 MOV X2, X21
	0x03BF27BC BL 0x3BE4724
	0x03BF27C0 LDR X8, [X23 + 0x18]
	0x03BF27C4 CBZ X8, 0x3BF2814
	0x03BF27C8 LDR X0, [X8 + 0x18]
	0x03BF27CC MOV X1, X22
	0x03BF27D0 MOV X2, X20
	0x03BF27D4 MOV X3, X21
	0x03BF27D8 BL 0x3BECCC8
	0x03BF27DC MOV X0, X19
	0x03BF27E0 MOV X1, X20
	0x03BF27E4 MOV X2, X21
	0x03BF27E8 BL 0x3BE48A0
	0x03BF27EC LDR X8, [X24 + 0x28]
	0x03BF27F0 LDUR X9, [X29 - 0x8]
	0x03BF27F4 CMP X8, X9
	0x03BF27F8 B.NE 0x3BF2818
	0x03BF27FC ADD X31, X29, 0x0
	0x03BF2800 LDP X20, X19, [X31 + 0x30]
	0x03BF2804 LDP X22, X21, [X31 + 0x20]
	0x03BF2808 LDP X24, X23, [X31 + 0x10]
	0x03BF280C LDP X29, X30, [X31], #0x40
	0x03BF2810 RET
	0x03BF2814 BL 0x1C16F20
	0x03BF2818 BL 0x3EB1B20
	0x03BF281C B 0x3BF2820
	0x03BF2820 MOV X23, X0
	0x03BF2824 CMP W1, 0x1
	0x03BF2828 B.NE 0x3BF2858
	0x03BF282C MOV X0, X23
	0x03BF2830 BL 0x3EB1AD0
	0x03BF2834 LDR X22, [X0]
	0x03BF2838 BL 0x3EB1AE0
	0x03BF283C MOV X0, X19
	0x03BF2840 MOV X1, X20
	0x03BF2844 MOV X2, X21
	0x03BF2848 BL 0x3BE48A0
	0x03BF284C CBZ X22, 0x3BF27EC
	0x03BF2850 MOV X0, X22
	0x03BF2854 BL 0x1C16F18
	0x03BF2858 MOV X22, X31
	0x03BF285C B 0x3BF2864
	0x03BF2860 MOV X23, X0
	0x03BF2864 MOV X0, X19
	0x03BF2868 MOV X1, X20
	0x03BF286C MOV X2, X21
	0x03BF2870 BL 0x3BE48A0
	0x03BF2874 CBNZ X22, 0x3BF2880
	0x03BF2878 MOV X0, X23
	0x03BF287C BL 0x1D2C690
	0x03BF2880 MOV X0, X22
	0x03BF2884 BL 0x1C16F18
	0x03BF2888 BL 0x1990590
	0x03BF288C LDR X8, [X0 + 0x10]
	0x03BF2890 CBZ X8, 0x3BF289C
	0x03BF2894 LDR X0, [X8 + 0x18]
	0x03BF2898 RET
	0x03BF289C MOV X0, X31
	0x03BF28A0 RET
	0x03BF28A4 STR X30, [X31 - 0x10]!
	0x03BF28A8 LDR X8, [X0 + 0x18]
	0x03BF28AC CBZ X8, 0x3BF28BC
	0x03BF28B0 LDR X0, [X8 + 0x18]
	0x03BF28B4 LDR X30, [X31], #0x10
	0x03BF28B8 RET
	0x03BF28BC BL 0x1C16F20
	0x03BF28C0 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x7F3000
	009 Move W8, [X19+1941]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {146}
	015 Move X0, 0x503000
	016 Move X0, [X0+2448]
	017 Call 0x1C17CF4
	018 Move X0, 0x503000
	019 Move X0, [X0+2464]
	020 Call 0x1C17CF4
	021 Move X0, 0x545000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move X0, 0x56E000
	025 Move X0, [X0+1352]
	026 Call 0x1C17CF4
	027 Move X0, 0x56E000
	028 Move X0, [X0+1360]
	029 Call 0x1C17CF4
	030 Move X0, 0x56E000
	031 Move X0, [X0+1368]
	032 Call 0x1C17CF4
	033 Move X0, 0x545000
	034 Move X0, [X0+3680]
	035 Call 0x1C17CF4
	036 Move X0, 0x56E000
	037 Move X0, [X0+1376]
	038 Call 0x1C17CF4
	039 Move X0, 0x56E000
	040 Move X0, [X0+1384]
	041 Call 0x1C17CF4
	042 Move X0, 0x56E000
	043 Move X0, [X0+1392]
	044 Call 0x1C17CF4
	045 Move X0, 0x503000
	046 Move X0, [X0+2472]
	047 Call 0x1C17CF4
	048 Move X0, 0x503000
	049 Move X0, [X0+2504]
	050 Call 0x1C17CF4
	051 Move X0, 0x503000
	052 Move X0, [X0+2904]
	053 Call 0x1C17CF4
	054 Move X0, 0x505000
	055 Move X0, [X0+368]
	056 Call 0x1C17CF4
	057 Move X0, 0x506000
	058 Move X0, [X0+2424]
	059 Call 0x1C17CF4
	060 Move X0, 0x503000
	061 Move X0, [X0+3584]
	062 Call 0x1C17CF4
	063 Move X0, 0x507000
	064 Move X0, [X0+1576]
	065 Call 0x1C17CF4
	066 Move X0, 0x503000
	067 Move X0, [X0+1880]
	068 Call 0x1C17CF4
	069 Move X0, 0x505000
	070 Move X0, [X0+2656]
	071 Call 0x1C17CF4
	072 Move X0, 0x52C000
	073 Move X0, [X0+1712]
	074 Call 0x1C17CF4
	075 Move X0, 0x503000
	076 Move X0, [X0+2704]
	077 Call 0x1C17CF4
	078 Move X0, 0x56E000
	079 Move X0, [X0+1024]
	080 Call 0x1C17CF4
	081 Move X0, 0x56E000
	082 Move X0, [X0+1272]
	083 Call 0x1C17CF4
	084 Move X0, 0x56E000
	085 Move X0, [X0+976]
	086 Call 0x1C17CF4
	087 Move X0, 0x56E000
	088 Move X0, [X0+1280]
	089 Call 0x1C17CF4
	090 Move X0, 0x56E000
	091 Move X0, [X0+1056]
	092 Call 0x1C17CF4
	093 Move X0, 0x56E000
	094 Move X0, [X0+736]
	095 Call 0x1C17CF4
	096 Move X0, 0x56E000
	097 Move X0, [X0+1288]
	098 Call 0x1C17CF4
	099 Move X0, 0x56E000
	100 Move X0, [X0+1400]
	101 Call 0x1C17CF4
	102 Move X0, 0x56E000
	103 Move X0, [X0+1168]
	104 Call 0x1C17CF4
	105 Move X0, 0x56E000
	106 Move X0, [X0+992]
	107 Call 0x1C17CF4
	108 Move X0, 0x56E000
	109 Move X0, [X0+744]
	110 Call 0x1C17CF4
	111 Move X0, 0x56E000
	112 Move X0, [X0+1296]
	113 Call 0x1C17CF4
	114 Move X0, 0x56E000
	115 Move X0, [X0+1072]
	116 Call 0x1C17CF4
	117 Move X0, 0x56E000
	118 Move X0, [X0+1304]
	119 Call 0x1C17CF4
	120 Move X0, 0x56E000
	121 Move X0, [X0+1008]
	122 Call 0x1C17CF4
	123 Move X0, 0x56E000
	124 Move X0, [X0+1088]
	125 Call 0x1C17CF4
	126 Move X0, 0x56E000
	127 Move X0, [X0+1312]
	128 Call 0x1C17CF4
	129 Move X0, 0x56E000
	130 Move X0, [X0+1040]
	131 Call 0x1C17CF4
	132 Move X0, 0x56E000
	133 Move X0, [X0+1320]
	134 Call 0x1C17CF4
	135 Move X0, 0x56E000
	136 Move X0, [X0+1328]
	137 Call 0x1C17CF4
	138 Move X0, 0x56E000
	139 Move X0, [X0+1336]
	140 Call 0x1C17CF4
	141 Move X0, 0x56E000
	142 Move X0, [X0+1408]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X19+1941], W8
	146 Compare X20, 0
	147 JumpIfEqual {720}
	148 Move X23, 0x503000
	149 Move X23, [X23+2504]
	150 Move X19, [X23]
	151 Move X8, [X19+56]
	152 Compare X8, 0
	153 JumpIfNotEqual {157}
	154 Move X0, X19
	155 Call 0x1C5D6E0
	156 Move X8, [X19+56]
	157 Move X0, [X8+16]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X8, [X19+56]
	169 Move X21, 0x56E000
	170 Move X19, 0x503000
	171 Move X0, [X8+16]
	172 Move W8, [X0+309]
	173 Move X21, [X21+736]
	174 Move X19, [X19+2464]
	175 Move TEMP, X8
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {180}
	179 Call 0x1C5D684
	180 Move X8, [X0+184]
	181 Move X1, [X21]
	182 Move X3, [X19]
	183 Move X22, 0x503000
	184 Move X2, [X8]
	185 Move X22, [X22+3584]
	186 Move X0, X20
	187 Call AndroidJavaObject.Call, X0, X1, X2
	188 Move X21, [X23]
	189 Move X19, X0
	190 Move X8, [X21+56]
	191 Compare X8, 0
	192 JumpIfNotEqual {196}
	193 Move X0, X21
	194 Call 0x1C5D6E0
	195 Move X8, [X21+56]
	196 Move X0, [X8+16]
	197 Move W8, [X0+309]
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {203}
	202 Call 0x1C5D684
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X8, [X21+56]
	208 Move X0, [X8+16]
	209 Move W8, [X0+309]
	210 Move TEMP, X8
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {215}
	214 Call 0x1C5D684
	215 Compare X19, 0
	216 JumpIfEqual {795}
	217 Move X9, 0x56D000
	218 Move X8, [X0+184]
	219 Move X9, [X9+744]
	220 Move X24, 0x502000
	221 Move X24, [X24+2472]
	222 Move X2, [X8]
	223 Move X1, [X9]
	224 Move X3, [X24]
	225 Move X0, X19
	226 Call AndroidJavaObject.Call, X0, X1, X2
	227 Move X8, 0x56D000
	228 Move X8, [X8+1336]
	229 Move X21, X0
	230 Move X0, [X8]
	231 Move X1, X21
	232 Move X2, X31
	233 Call String.op_Equality, X0, X1
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {281}
	238 Move X21, [X23]
	239 Move X8, [X21+56]
	240 Compare X8, 0
	241 JumpIfNotEqual {245}
	242 Move X0, X21
	243 Call 0x1C5D6E0
	244 Move X8, [X21+56]
	245 Move X0, [X8+16]
	246 Move W8, [X0+309]
	247 Move TEMP, X8
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {252}
	251 Call 0x1C5D684
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, [X21+56]
	257 Move X0, [X8+16]
	258 Move W8, [X0+309]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {264}
	263 Call 0x1C5D684
	264 Move X9, 0x56D000
	265 Move X8, [X0+184]
	266 Move X9, [X9+1008]
	267 Move X10, 0x544000
	268 Move X10, [X10+3680]
	269 Move X2, [X8]
	270 Move X1, [X9]
	271 Move X3, [X10]
	272 Move X0, X20
	273 Call AndroidJavaObject.Call, X0, X1, X2
	274 Move X8, 0x502000
	275 Move X8, [X8+1880]
	276 Move [X31+8], W0
	277 Move X8, [X8]
	278 Add X1, X31, 8
	279 Move X0, X8
	280 Call 0x1C17E04
	281 Move X8, 0x56D000
	282 Move X8, [X8+1280]
	283 Move X0, [X8]
	284 Move X1, X21
	285 Move X2, X31
	286 Call String.op_Equality, X0, X1
	287 Move TEMP, X0
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfNotEqual {335}
	291 Move X21, [X23]
	292 Move X8, [X21+56]
	293 Compare X8, 0
	294 JumpIfNotEqual {298}
	295 Move X0, X21
	296 Call 0x1C5D6E0
	297 Move X8, [X21+56]
	298 Move X0, [X8+16]
	299 Move W8, [X0+309]
	300 Move TEMP, X8
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {305}
	304 Call 0x1C5D684
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Move X8, [X21+56]
	310 Move X0, [X8+16]
	311 Move W8, [X0+309]
	312 Move TEMP, X8
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfEqual {317}
	316 Call 0x1C5D684
	317 Move X9, 0x56D000
	318 Move X8, [X0+184]
	319 Move X9, [X9+1088]
	320 Move X10, 0x544000
	321 Move X10, [X10+3672]
	322 Move X2, [X8]
	323 Move X1, [X9]
	324 Move X3, [X10]
	325 Move X0, X20
	326 Call 0x227B714, X0, X1, X2
	327 Move X8, 0x502000
	328 Move X8, [X8+2904]
	329 And W9, W0, 1
	330 Move [X31+8], W9
	331 Move X8, [X8]
	332 Add X1, X31, 8
	333 Move X0, X8
	334 Call 0x1C17E04
	335 Move X8, 0x56D000
	336 Move X8, [X8+1288]
	337 Move X0, [X8]
	338 Move X1, X21
	339 Move X2, X31
	340 Call String.op_Equality, X0, X1
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {388}
	345 Move X21, [X23]
	346 Move X8, [X21+56]
	347 Compare X8, 0
	348 JumpIfNotEqual {352}
	349 Move X0, X21
	350 Call 0x1C5D6E0
	351 Move X8, [X21+56]
	352 Move X0, [X8+16]
	353 Move W8, [X0+309]
	354 Move TEMP, X8
	355 And TEMP, TEMP, 1
	356 Compare TEMP, 1
	357 JumpIfEqual {359}
	358 Call 0x1C5D684
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X8, [X21+56]
	364 Move X0, [X8+16]
	365 Move W8, [X0+309]
	366 Move TEMP, X8
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfEqual {371}
	370 Call 0x1C5D684
	371 Move X9, 0x56D000
	372 Move X8, [X0+184]
	373 Move X9, [X9+976]
	374 Move X10, 0x56D000
	375 Move X10, [X10+1384]
	376 Move X2, [X8]
	377 Move X1, [X9]
	378 Move X3, [X10]
	379 Move X0, X20
	380 Call AndroidJavaObject.Call, X0, X1, X2
	381 Move X8, 0x52B000
	382 Move X8, [X8+1712]
	383 Move [X31+8], W0
	384 Move X8, [X8]
	385 Add X1, X31, 8
	386 Move X0, X8
	387 Call 0x1C17E04
	388 Move X8, 0x56D000
	389 Move X8, [X8+1304]
	390 Move X0, [X8]
	391 Move X1, X21
	392 Move X2, X31
	393 Call String.op_Equality, X0, X1
	394 Move TEMP, X0
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfNotEqual {441}
	398 Move X21, [X23]
	399 Move X8, [X21+56]
	400 Compare X8, 0
	401 JumpIfNotEqual {405}
	402 Move X0, X21
	403 Call 0x1C5D6E0
	404 Move X8, [X21+56]
	405 Move X0, [X8+16]
	406 Move W8, [X0+309]
	407 Move TEMP, X8
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfEqual {412}
	411 Call 0x1C5D684
	412 Move W8, [X0+224]
	413 Compare W8, 0
	414 JumpIfNotEqual {416}
	415 Call 0x1C17DFC
	416 Move X8, [X21+56]
	417 Move X0, [X8+16]
	418 Move W8, [X0+309]
	419 Move TEMP, X8
	420 And TEMP, TEMP, 1
	421 Compare TEMP, 1
	422 JumpIfEqual {424}
	423 Call 0x1C5D684
	424 Move X9, 0x56D000
	425 Move X8, [X0+184]
	426 Move X9, [X9+992]
	427 Move X10, 0x56D000
	428 Move X10, [X10+1368]
	429 Move X2, [X8]
	430 Move X1, [X9]
	431 Move X3, [X10]
	432 Move X0, X20
	433 Call AndroidJavaObject.Call, X0, X1, X2
	434 Move X8, 0x506000
	435 Move X8, [X8+1576]
	436 NotImplemented "Instruction STRH not yet implemented."
	437 Move X8, [X8]
	438 Add X1, X31, 8
	439 Move X0, X8
	440 Call 0x1C17E04
	441 Move X8, 0x56D000
	442 Move X8, [X8+1312]
	443 Move X0, [X8]
	444 Move X1, X21
	445 Move X2, X31
	446 Call String.op_Equality, X0, X1
	447 Move TEMP, X0
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfNotEqual {494}
	451 Move X21, [X23]
	452 Move X8, [X21+56]
	453 Compare X8, 0
	454 JumpIfNotEqual {458}
	455 Move X0, X21
	456 Call 0x1C5D6E0
	457 Move X8, [X21+56]
	458 Move X0, [X8+16]
	459 Move W8, [X0+309]
	460 Move TEMP, X8
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfEqual {465}
	464 Call 0x1C5D684
	465 Move W8, [X0+224]
	466 Compare W8, 0
	467 JumpIfNotEqual {469}
	468 Call 0x1C17DFC
	469 Move X8, [X21+56]
	470 Move X0, [X8+16]
	471 Move W8, [X0+309]
	472 Move TEMP, X8
	473 And TEMP, TEMP, 1
	474 Compare TEMP, 1
	475 JumpIfEqual {477}
	476 Call 0x1C5D684
	477 Move X9, 0x56D000
	478 Move X8, [X0+184]
	479 Move X9, [X9+1024]
	480 Move X10, 0x56D000
	481 Move X10, [X10+1376]
	482 Move X2, [X8]
	483 Move X1, [X9]
	484 Move X3, [X10]
	485 Move X0, X20
	486 Call AndroidJavaObject.Call, X0, X1, X2
	487 Move X8, 0x504000
	488 Move X8, [X8+2656]
	489 Move [X31+8], X0
	490 Move X8, [X8]
	491 Add X1, X31, 8
	492 Move X0, X8
	493 Call 0x1C17E04
	494 Move X8, 0x56D000
	495 Move X8, [X8+1272]
	496 Move X0, [X8]
	497 Move X1, X21
	498 Move X2, X31
	499 Call String.op_Equality, X0, X1
	500 Move TEMP, X0
	501 And TEMP, TEMP, 1
	502 Compare TEMP, 1
	503 JumpIfNotEqual {546}
	504 Move X21, [X23]
	505 Move X8, [X21+56]
	506 Compare X8, 0
	507 JumpIfNotEqual {511}
	508 Move X0, X21
	509 Call 0x1C5D6E0
	510 Move X8, [X21+56]
	511 Move X0, [X8+16]
	512 Move W8, [X0+309]
	513 Move TEMP, X8
	514 And TEMP, TEMP, 1
	515 Compare TEMP, 1
	516 JumpIfEqual {518}
	517 Call 0x1C5D684
	518 Move W8, [X0+224]
	519 Compare W8, 0
	520 JumpIfNotEqual {522}
	521 Call 0x1C17DFC
	522 Move X8, [X21+56]
	523 Move X0, [X8+16]
	524 Move W8, [X0+309]
	525 Move TEMP, X8
	526 And TEMP, TEMP, 1
	527 Compare TEMP, 1
	528 JumpIfEqual {530}
	529 Call 0x1C5D684
	530 Move X9, 0x56D000
	531 Move X8, [X0+184]
	532 Move X9, [X9+1040]
	533 Move X10, 0x56D000
	534 Move X10, [X10+1392]
	535 Move X2, [X8]
	536 Move X1, [X9]
	537 Move X3, [X10]
	538 Move X0, X20
	539 Call AndroidJavaObject.Call, X0, X1, X2
	540 Move X8, 0x502000
	541 Move X8, [X8+2704]
	542 Move [X31+8], S0
	543 Move X0, [X8]
	544 Add X1, X31, 8
	545 Call 0x1C17E04
	546 Move X8, 0x56D000
	547 Move X8, [X8+1328]
	548 Move X0, [X8]
	549 Move X1, X21
	550 Move X2, X31
	551 Call String.op_Equality, X0, X1
	552 Move TEMP, X0
	553 And TEMP, TEMP, 1
	554 Compare TEMP, 1
	555 JumpIfNotEqual {598}
	556 Move X21, [X23]
	557 Move X8, [X21+56]
	558 Compare X8, 0
	559 JumpIfNotEqual {563}
	560 Move X0, X21
	561 Call 0x1C5D6E0
	562 Move X8, [X21+56]
	563 Move X0, [X8+16]
	564 Move W8, [X0+309]
	565 Move TEMP, X8
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {570}
	569 Call 0x1C5D684
	570 Move W8, [X0+224]
	571 Compare W8, 0
	572 JumpIfNotEqual {574}
	573 Call 0x1C17DFC
	574 Move X8, [X21+56]
	575 Move X0, [X8+16]
	576 Move W8, [X0+309]
	577 Move TEMP, X8
	578 And TEMP, TEMP, 1
	579 Compare TEMP, 1
	580 JumpIfEqual {582}
	581 Call 0x1C5D684
	582 Move X9, 0x56D000
	583 Move X8, [X0+184]
	584 Move X9, [X9+1056]
	585 Move X10, 0x56D000
	586 Move X10, [X10+1360]
	587 Move X2, [X8]
	588 Move X1, [X9]
	589 Move X3, [X10]
	590 Move X0, X20
	591 Call AndroidJavaObject.Call, X0, X1, X2
	592 Move X8, 0x505000
	593 Move X8, [X8+2424]
	594 Move [X31+8], D0
	595 Move X0, [X8]
	596 Add X1, X31, 8
	597 Call 0x1C17E04
	598 Move X8, 0x56D000
	599 Move X8, [X8+1320]
	600 Move X0, [X8]
	601 Move X1, X21
	602 Move X2, X31
	603 Call String.op_Equality, X0, X1
	604 Move TEMP, X0
	605 And TEMP, TEMP, 1
	606 Compare TEMP, 1
	607 JumpIfNotEqual {651}
	608 Move X21, [X23]
	609 Move X8, [X21+56]
	610 Compare X8, 0
	611 JumpIfNotEqual {615}
	612 Move X0, X21
	613 Call 0x1C5D6E0
	614 Move X8, [X21+56]
	615 Move X0, [X8+16]
	616 Move W8, [X0+309]
	617 Move TEMP, X8
	618 And TEMP, TEMP, 1
	619 Compare TEMP, 1
	620 JumpIfEqual {622}
	621 Call 0x1C5D684
	622 Move W8, [X0+224]
	623 Compare W8, 0
	624 JumpIfNotEqual {626}
	625 Call 0x1C17DFC
	626 Move X8, [X21+56]
	627 Move X0, [X8+16]
	628 Move W8, [X0+309]
	629 Move TEMP, X8
	630 And TEMP, TEMP, 1
	631 Compare TEMP, 1
	632 JumpIfEqual {634}
	633 Call 0x1C5D684
	634 Move X9, 0x56D000
	635 Move X8, [X0+184]
	636 Move X9, [X9+1072]
	637 Move X10, 0x56D000
	638 Move X10, [X10+1352]
	639 Move X2, [X8]
	640 Move X1, [X9]
	641 Move X3, [X10]
	642 Move X0, X20
	643 Call AndroidJavaObject.Call, X0, X1, X2
	644 Move X8, 0x504000
	645 Move X8, [X8+368]
	646 NotImplemented "Instruction STRH not yet implemented."
	647 Move X8, [X8]
	648 Add X1, X31, 8
	649 Move X0, X8
	650 Call 0x1C17E04
	651 Move X8, 0x56D000
	652 Move X8, [X8+1296]
	653 Move X0, [X8]
	654 Move X1, X21
	655 Move X2, X31
	656 Call String.op_Equality, X0, X1
	657 Move TEMP, X0
	658 And TEMP, TEMP, 1
	659 Compare TEMP, 1
	660 JumpIfNotEqual {729}
	661 Move X21, [X23]
	662 Move X8, [X21+56]
	663 Compare X8, 0
	664 JumpIfNotEqual {668}
	665 Move X0, X21
	666 Call 0x1C5D6E0
	667 Move X8, [X21+56]
	668 Move X0, [X8+16]
	669 Move W8, [X0+309]
	670 Move TEMP, X8
	671 And TEMP, TEMP, 1
	672 Compare TEMP, 1
	673 JumpIfEqual {675}
	674 Call 0x1C5D684
	675 Move W8, [X0+224]
	676 Compare W8, 0
	677 JumpIfNotEqual {679}
	678 Call 0x1C17DFC
	679 Move X8, [X21+56]
	680 Move X0, [X8+16]
	681 Move W8, [X0+309]
	682 Move TEMP, X8
	683 And TEMP, TEMP, 1
	684 Compare TEMP, 1
	685 JumpIfEqual {687}
	686 Call 0x1C5D684
	687 Move X9, 0x56D000
	688 Move X8, [X0+184]
	689 Move X9, [X9+1168]
	690 Move X3, [X24]
	691 Move X2, [X8]
	692 Move X1, [X9]
	693 Move X0, X20
	694 Call AndroidJavaObject.Call, X0, X1, X2
	695 Move X20, X0
	696 Move X21, X31
	697 Move X8, [X19]
	698 Move X1, [X22]
	699 NotImplemented "Instruction LDRH not yet implemented."
	700 Compare X9, 0
	701 JumpIfEqual {708}
	702 Move X10, [X8+176]
	703 Add X10, X10, 8
	704 NotImplemented "Instruction LDUR not yet implemented."
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Subtract X9, X9, 1
	707 Add X10, X10, 16
	708 Move X0, X19
	709 Move W2, W31
	710 Call 0x1C5D788
	711 NotImplemented "Instruction LDRSW not yet implemented."
	712 Add X8, X8, X9
	713 Add X0, X8, 312
	714 Move X8, [X0]
	715 Move X1, [X0+8]
	716 Move X0, X19
	717 NotImplemented "Instruction BLR not yet implemented."
	718 Compare X21, 0
	719 JumpIfNotEqual {793}
	720 Move X0, X20
	721 Move X20, [X31+48]
	722 Move X19, [X31+56]
	723 Move X22, [X31+32]
	724 Move X21, [X31+40]
	725 Move X24, [X31+16]
	726 Move X23, [X31+24]
	727 Move X30, [X31+64]
	728 Return X0
	729 Move X8, 0x56D000
	730 Move X8, [X8+1400]
	731 Move X0, [X8]
	732 Move X1, X21
	733 Move X2, X31
	734 Call String.op_Equality, X0, X1
	735 Move TEMP, X0
	736 And TEMP, TEMP, 1
	737 Compare TEMP, 1
	738 JumpIfNotEqual {743}
	739 Move X8, [X20+16]
	740 Compare X8, 0
	741 JumpIfEqual {785}
	742 Move X21, [X8+24]
	743 Move X21, [X23]
	744 Move X8, [X21+56]
	745 Compare X8, 0
	746 JumpIfNotEqual {750}
	747 Move X0, X21
	748 Call 0x1C5D6E0
	749 Move X8, [X21+56]
	750 Move X0, [X8+16]
	751 Move W8, [X0+309]
	752 Move TEMP, X8
	753 And TEMP, TEMP, 1
	754 Compare TEMP, 1
	755 JumpIfEqual {757}
	756 Call 0x1C5D684
	757 Move W8, [X0+224]
	758 Compare W8, 0
	759 JumpIfNotEqual {761}
	760 Call 0x1C17DFC
	761 Move X8, [X21+56]
	762 Move X0, [X8+16]
	763 Move W8, [X0+309]
	764 Move TEMP, X8
	765 And TEMP, TEMP, 1
	766 Compare TEMP, 1
	767 JumpIfEqual {769}
	768 Call 0x1C5D684
	769 Move X9, 0x56D000
	770 Move X8, [X0+184]
	771 Move X9, [X9+1408]
	772 Move X10, 0x544000
	773 Move X10, [X10+3672]
	774 Move X2, [X8]
	775 Move X1, [X9]
	776 Move X3, [X10]
	777 Move X0, X19
	778 Call 0x227B714, X0, X1, X2
	779 Move TEMP, X0
	780 And TEMP, TEMP, 1
	781 Compare TEMP, 1
	782 JumpIfNotEqual {696}
	783 Move X0, X20
	784 Call _AndroidJNIHelper.UnboxArray, X0
	785 Move X21, X31
	786 Move X8, 0x502000
	787 Move X8, [X8+2448]
	788 Move X0, [X8]
	789 Call 0x1C17F10
	790 Move X20, X0
	791 Move X1, X21
	792 Call AndroidJavaClass..ctor, X0, X1
	793 Move X0, X21
	794 Call 0x1C17F18
	795 Call 0x1C17F20
	796 Move X20, X0
	797 NotImplemented "Instruction CMP not yet implemented."
	798 Move X0, X20
	799 Call 0x3EB2AD0
	800 Move X21, [X0]
	801 Call 0x3EB2AE0
	802 Move X20, X31
	803 Compare X19, 0
	804 JumpIfNotEqual {697}
	805 Move X21, X31
	806 Move X20, X0
	807 Compare X19, 0
	808 JumpIfEqual {830}
	809 Move X8, [X19]
	810 Move X1, [X22]
	811 NotImplemented "Instruction LDRH not yet implemented."
	812 Compare X9, 0
	813 JumpIfEqual {820}
	814 Move X10, [X8+176]
	815 Add X10, X10, 8
	816 NotImplemented "Instruction LDUR not yet implemented."
	817 NotImplemented "Instruction CMP not yet implemented."
	818 Subtract X9, X9, 1
	819 Add X10, X10, 16
	820 Move X0, X19
	821 Move W2, W31
	822 Call 0x1C5D788
	823 NotImplemented "Instruction LDRSW not yet implemented."
	824 Add X8, X8, X9
	825 Add X0, X8, 312
	826 Move X8, [X0]
	827 Move X1, [X0+8]
	828 Move X0, X19
	829 NotImplemented "Instruction BLR not yet implemented."
	830 Compare X21, 0
	831 JumpIfNotEqual {834}
	832 Move X0, X20
	833 Call 0x1D2D690
	834 Move X0, X21
	835 Call 0x1C17F18
	836 Call 0x1991590

Method: UnityEngine.AndroidJavaObject Box(System.Object obj)

Disassembly:
	0x03BF0FEC BL 0x1C5C684
	0x03BF0FF0 LDR W8, [X0 + 0xE0]
	0x03BF0FF4 CBNZ W8, 0x3BF0FFC
	0x03BF0FF8 BL 0x1C16DFC
	0x03BF0FFC LDR X8, [X21 + 0x38]
	0x03BF1000 LDR X0, [X8 + 0x10]
	0x03BF1004 LDRB W8, [X0 + 0x135]
	0x03BF1008 TBNZ X8, 0x0, 0x3BF1010
	0x03BF100C BL 0x1C5C684
	0x03BF1010 CBZ X19, 0x3BF1774
	0x03BF1014 ADRP X9, 0x56D000
	0x03BF1018 LDR X8, [X0 + 0xB8]
	0x03BF101C LDR X9, [X9 + 0x2E8]
	0x03BF1020 ADRP X24, 0x502000
	0x03BF1024 LDR X24, [X24 + 0x9A8]
	0x03BF1028 LDR X2, [X8]
	0x03BF102C LDR X1, [X9]
	0x03BF1030 LDR X3, [X24]
	0x03BF1034 MOV X0, X19
	0x03BF1038 BL 0x227A8F4
	0x03BF103C ADRP X8, 0x56D000
	0x03BF1040 LDR X8, [X8 + 0x538]
	0x03BF1044 MOV X21, X0
	0x03BF1048 LDR X0, [X8]
	0x03BF104C MOV X1, X21
	0x03BF1050 MOV X2, X31
	0x03BF1054 BL 0x321BA08
	0x03BF1058 TBZ X0, 0x0, 0x3BF10EC
	0x03BF105C LDR X21, [X23]
	0x03BF1060 LDR X8, [X21 + 0x38]
	0x03BF1064 CBNZ X8, 0x3BF1074
	0x03BF1068 MOV X0, X21
	0x03BF106C BL 0x1C5C6E0
	0x03BF1070 LDR X8, [X21 + 0x38]
	0x03BF1074 LDR X0, [X8 + 0x10]
	0x03BF1078 LDRB W8, [X0 + 0x135]
	0x03BF107C TBNZ X8, 0x0, 0x3BF1084
	0x03BF1080 BL 0x1C5C684
	0x03BF1084 LDR W8, [X0 + 0xE0]
	0x03BF1088 CBNZ W8, 0x3BF1090
	0x03BF108C BL 0x1C16DFC
	0x03BF1090 LDR X8, [X21 + 0x38]
	0x03BF1094 LDR X0, [X8 + 0x10]
	0x03BF1098 LDRB W8, [X0 + 0x135]
	0x03BF109C TBNZ X8, 0x0, 0x3BF10A4
	0x03BF10A0 BL 0x1C5C684
	0x03BF10A4 ADRP X9, 0x56D000
	0x03BF10A8 LDR X8, [X0 + 0xB8]
	0x03BF10AC LDR X9, [X9 + 0x3F0]
	0x03BF10B0 ADRP X10, 0x544000
	0x03BF10B4 LDR X10, [X10 + 0xE60]
	0x03BF10B8 LDR X2, [X8]
	0x03BF10BC LDR X1, [X9]
	0x03BF10C0 LDR X3, [X10]
	0x03BF10C4 MOV X0, X20
	0x03BF10C8 BL 0x227A854
	0x03BF10CC ADRP X8, 0x502000
	0x03BF10D0 LDR X8, [X8 + 0x758]
	0x03BF10D4 STR W0, [X31 + 0x8]
	0x03BF10D8 LDR X8, [X8]
	0x03BF10DC ADD X1, X31, 0x8
	0x03BF10E0 MOV X0, X8
	0x03BF10E4 BL 0x1C16E04
	0x03BF10E8 B 0x3BF1620
	0x03BF10EC ADRP X8, 0x56D000
	0x03BF10F0 LDR X8, [X8 + 0x500]
	0x03BF10F4 LDR X0, [X8]
	0x03BF10F8 MOV X1, X21
	0x03BF10FC MOV X2, X31
	0x03BF1100 BL 0x321BA08
	0x03BF1104 TBZ X0, 0x0, 0x3BF119C
	0x03BF1108 LDR X21, [X23]
	0x03BF110C LDR X8, [X21 + 0x38]
	0x03BF1110 CBNZ X8, 0x3BF1120
	0x03BF1114 MOV X0, X21
	0x03BF1118 BL 0x1C5C6E0
	0x03BF111C LDR X8, [X21 + 0x38]
	0x03BF1120 LDR X0, [X8 + 0x10]
	0x03BF1124 LDRB W8, [X0 + 0x135]
	0x03BF1128 TBNZ X8, 0x0, 0x3BF1130
	0x03BF112C BL 0x1C5C684
	0x03BF1130 LDR W8, [X0 + 0xE0]
	0x03BF1134 CBNZ W8, 0x3BF113C
	0x03BF1138 BL 0x1C16DFC
	0x03BF113C LDR X8, [X21 + 0x38]
	0x03BF1140 LDR X0, [X8 + 0x10]
	0x03BF1144 LDRB W8, [X0 + 0x135]
	0x03BF1148 TBNZ X8, 0x0, 0x3BF1150
	0x03BF114C BL 0x1C5C684
	0x03BF1150 ADRP X9, 0x56D000
	0x03BF1154 LDR X8, [X0 + 0xB8]
	0x03BF1158 LDR X9, [X9 + 0x440]
	0x03BF115C ADRP X10, 0x544000
	0x03BF1160 LDR X10, [X10 + 0xE58]
	0x03BF1164 LDR X2, [X8]
	0x03BF1168 LDR X1, [X9]
	0x03BF116C LDR X3, [X10]
	0x03BF1170 MOV X0, X20
	0x03BF1174 BL 0x227A714
	0x03BF1178 ADRP X8, 0x502000
	0x03BF117C LDR X8, [X8 + 0xB58]
	0x03BF1180 AND W9, W0, 0x1
	0x03BF1184 STRB W9, [X31 + 0x8]
	0x03BF1188 LDR X8, [X8]
	0x03BF118C ADD X1, X31, 0x8
	0x03BF1190 MOV X0, X8
	0x03BF1194 BL 0x1C16E04
	0x03BF1198 B 0x3BF1620
	0x03BF119C ADRP X8, 0x56D000
	0x03BF11A0 LDR X8, [X8 + 0x508]
	0x03BF11A4 LDR X0, [X8]
	0x03BF11A8 MOV X1, X21
	0x03BF11AC MOV X2, X31
	0x03BF11B0 BL 0x321BA08
	0x03BF11B4 TBZ X0, 0x0, 0x3BF1248
	0x03BF11B8 LDR X21, [X23]
	0x03BF11BC LDR X8, [X21 + 0x38]
	0x03BF11C0 CBNZ X8, 0x3BF11D0
	0x03BF11C4 MOV X0, X21
	0x03BF11C8 BL 0x1C5C6E0
	0x03BF11CC LDR X8, [X21 + 0x38]
	0x03BF11D0 LDR X0, [X8 + 0x10]
	0x03BF11D4 LDRB W8, [X0 + 0x135]
	0x03BF11D8 TBNZ X8, 0x0, 0x3BF11E0
	0x03BF11DC BL 0x1C5C684
	0x03BF11E0 LDR W8, [X0 + 0xE0]
	0x03BF11E4 CBNZ W8, 0x3BF11EC
	0x03BF11E8 BL 0x1C16DFC
	0x03BF11EC LDR X8, [X21 + 0x38]
	0x03BF11F0 LDR X0, [X8 + 0x10]
	0x03BF11F4 LDRB W8, [X0 + 0x135]
	0x03BF11F8 TBNZ X8, 0x0, 0x3BF1200
	0x03BF11FC BL 0x1C5C684
	0x03BF1200 ADRP X9, 0x56D000
	0x03BF1204 LDR X8, [X0 + 0xB8]
	0x03BF1208 LDR X9, [X9 + 0x3D0]
	0x03BF120C ADRP X10, 0x56D000
	0x03BF1210 LDR X10, [X10 + 0x568]
	0x03BF1214 LDR X2, [X8]
	0x03BF1218 LDR X1, [X9]
	0x03BF121C LDR X3, [X10]
	0x03BF1220 MOV X0, X20
	0x03BF1224 BL 0x227A944
	0x03BF1228 ADRP X8, 0x52B000
	0x03BF122C LDR X8, [X8 + 0x6B0]
	0x03BF1230 STRB W0, [X31 + 0x8]
	0x03BF1234 LDR X8, [X8]
	0x03BF1238 ADD X1, X31, 0x8
	0x03BF123C MOV X0, X8
	0x03BF1240 BL 0x1C16E04
	0x03BF1244 B 0x3BF1620
	0x03BF1248 ADRP X8, 0x56D000
	0x03BF124C LDR X8, [X8 + 0x518]
	0x03BF1250 LDR X0, [X8]
	0x03BF1254 MOV X1, X21
	0x03BF1258 MOV X2, X31
	0x03BF125C BL 0x321BA08
	0x03BF1260 TBZ X0, 0x0, 0x3BF12F4
	0x03BF1264 LDR X21, [X23]
	0x03BF1268 LDR X8, [X21 + 0x38]
	0x03BF126C CBNZ X8, 0x3BF127C
	0x03BF1270 MOV X0, X21
	0x03BF1274 BL 0x1C5C6E0
	0x03BF1278 LDR X8, [X21 + 0x38]
	0x03BF127C LDR X0, [X8 + 0x10]
	0x03BF1280 LDRB W8, [X0 + 0x135]
	0x03BF1284 TBNZ X8, 0x0, 0x3BF128C
	0x03BF1288 BL 0x1C5C684
	0x03BF128C LDR W8, [X0 + 0xE0]
	0x03BF1290 CBNZ W8, 0x3BF1298
	0x03BF1294 BL 0x1C16DFC
	0x03BF1298 LDR X8, [X21 + 0x38]
	0x03BF129C LDR X0, [X8 + 0x10]
	0x03BF12A0 LDRB W8, [X0 + 0x135]
	0x03BF12A4 TBNZ X8, 0x0, 0x3BF12AC
	0x03BF12A8 BL 0x1C5C684
	0x03BF12AC ADRP X9, 0x56D000
	0x03BF12B0 LDR X8, [X0 + 0xB8]
	0x03BF12B4 LDR X9, [X9 + 0x3E0]
	0x03BF12B8 ADRP X10, 0x56D000
	0x03BF12BC LDR X10, [X10 + 0x558]
	0x03BF12C0 LDR X2, [X8]
	0x03BF12C4 LDR X1, [X9]
	0x03BF12C8 LDR X3, [X10]
	0x03BF12CC MOV X0, X20
	0x03BF12D0 BL 0x227A804
	0x03BF12D4 ADRP X8, 0x506000
	0x03BF12D8 LDR X8, [X8 + 0x628]
	0x03BF12DC STRH W0, [X31 + 0x8]
	0x03BF12E0 LDR X8, [X8]
	0x03BF12E4 ADD X1, X31, 0x8
	0x03BF12E8 MOV X0, X8
	0x03BF12EC BL 0x1C16E04
	0x03BF12F0 B 0x3BF1620
	0x03BF12F4 ADRP X8, 0x56D000
	0x03BF12F8 LDR X8, [X8 + 0x520]
	0x03BF12FC LDR X0, [X8]
	0x03BF1300 MOV X1, X21
	0x03BF1304 MOV X2, X31
	0x03BF1308 BL 0x321BA08
	0x03BF130C TBZ X0, 0x0, 0x3BF13A0
	0x03BF1310 LDR X21, [X23]
	0x03BF1314 LDR X8, [X21 + 0x38]
	0x03BF1318 CBNZ X8, 0x3BF1328
	0x03BF131C MOV X0, X21
	0x03BF1320 BL 0x1C5C6E0
	0x03BF1324 LDR X8, [X21 + 0x38]
	0x03BF1328 LDR X0, [X8 + 0x10]
	0x03BF132C LDRB W8, [X0 + 0x135]
	0x03BF1330 TBNZ X8, 0x0, 0x3BF1338
	0x03BF1334 BL 0x1C5C684
	0x03BF1338 LDR W8, [X0 + 0xE0]
	0x03BF133C CBNZ W8, 0x3BF1344
	0x03BF1340 BL 0x1C16DFC
	0x03BF1344 LDR X8, [X21 + 0x38]
	0x03BF1348 LDR X0, [X8 + 0x10]
	0x03BF134C LDRB W8, [X0 + 0x135]
	0x03BF1350 TBNZ X8, 0x0, 0x3BF1358
	0x03BF1354 BL 0x1C5C684
	0x03BF1358 ADRP X9, 0x56D000
	0x03BF135C LDR X8, [X0 + 0xB8]
	0x03BF1360 LDR X9, [X9 + 0x400]
	0x03BF1364 ADRP X10, 0x56D000
	0x03BF1368 LDR X10, [X10 + 0x560]
	0x03BF136C LDR X2, [X8]
	0x03BF1370 LDR X1, [X9]
	0x03BF1374 LDR X3, [X10]
	0x03BF1378 MOV X0, X20
	0x03BF137C BL 0x227A8A4
	0x03BF1380 ADRP X8, 0x504000
	0x03BF1384 LDR X8, [X8 + 0xA60]
	0x03BF1388 STR X0, [X31 + 0x8]
	0x03BF138C LDR X8, [X8]
	0x03BF1390 ADD X1, X31, 0x8
	0x03BF1394 MOV X0, X8
	0x03BF1398 BL 0x1C16E04
	0x03BF139C B 0x3BF1620
	0x03BF13A0 ADRP X8, 0x56D000
	0x03BF13A4 LDR X8, [X8 + 0x4F8]
	0x03BF13A8 LDR X0, [X8]
	0x03BF13AC MOV X1, X21
	0x03BF13B0 MOV X2, X31
	0x03BF13B4 BL 0x321BA08
	0x03BF13B8 TBZ X0, 0x0, 0x3BF1448
	0x03BF13BC LDR X21, [X23]
	0x03BF13C0 LDR X8, [X21 + 0x38]
	0x03BF13C4 CBNZ X8, 0x3BF13D4
	0x03BF13C8 MOV X0, X21
	0x03BF13CC BL 0x1C5C6E0
	0x03BF13D0 LDR X8, [X21 + 0x38]
	0x03BF13D4 LDR X0, [X8 + 0x10]
	0x03BF13D8 LDRB W8, [X0 + 0x135]
	0x03BF13DC TBNZ X8, 0x0, 0x3BF13E4
	0x03BF13E0 BL 0x1C5C684
	0x03BF13E4 LDR W8, [X0 + 0xE0]
	0x03BF13E8 CBNZ W8, 0x3BF13F0
	0x03BF13EC BL 0x1C16DFC
	0x03BF13F0 LDR X8, [X21 + 0x38]
	0x03BF13F4 LDR X0, [X8 + 0x10]
	0x03BF13F8 LDRB W8, [X0 + 0x135]
	0x03BF13FC TBNZ X8, 0x0, 0x3BF1404
	0x03BF1400 BL 0x1C5C684
	0x03BF1404 ADRP X9, 0x56D000
	0x03BF1408 LDR X8, [X0 + 0xB8]
	0x03BF140C LDR X9, [X9 + 0x410]
	0x03BF1410 ADRP X10, 0x56D000
	0x03BF1414 LDR X10, [X10 + 0x570]
	0x03BF1418 LDR X2, [X8]
	0x03BF141C LDR X1, [X9]
	0x03BF1420 LDR X3, [X10]
	0x03BF1424 MOV X0, X20
	0x03BF1428 BL 0x227A994
	0x03BF142C ADRP X8, 0x502000
	0x03BF1430 LDR X8, [X8 + 0xA90]
	0x03BF1434 STR S0, [X31 + 0x8]
	0x03BF1438 LDR X0, [X8]
	0x03BF143C ADD X1, X31, 0x8
	0x03BF1440 BL 0x1C16E04
	0x03BF1444 B 0x3BF1620
	0x03BF1448 ADRP X8, 0x56D000
	0x03BF144C LDR X8, [X8 + 0x530]
	0x03BF1450 LDR X0, [X8]
	0x03BF1454 MOV X1, X21
	0x03BF1458 MOV X2, X31
	0x03BF145C BL 0x321BA08
	0x03BF1460 TBZ X0, 0x0, 0x3BF14F0
	0x03BF1464 LDR X21, [X23]
	0x03BF1468 LDR X8, [X21 + 0x38]
	0x03BF146C CBNZ X8, 0x3BF147C
	0x03BF1470 MOV X0, X21
	0x03BF1474 BL 0x1C5C6E0
	0x03BF1478 LDR X8, [X21 + 0x38]
	0x03BF147C LDR X0, [X8 + 0x10]
	0x03BF1480 LDRB W8, [X0 + 0x135]
	0x03BF1484 TBNZ X8, 0x0, 0x3BF148C
	0x03BF1488 BL 0x1C5C684
	0x03BF148C LDR W8, [X0 + 0xE0]
	0x03BF1490 CBNZ W8, 0x3BF1498
	0x03BF1494 BL 0x1C16DFC
	0x03BF1498 LDR X8, [X21 + 0x38]
	0x03BF149C LDR X0, [X8 + 0x10]
	0x03BF14A0 LDRB W8, [X0 + 0x135]
	0x03BF14A4 TBNZ X8, 0x0, 0x3BF14AC
	0x03BF14A8 BL 0x1C5C684
	0x03BF14AC ADRP X9, 0x56D000
	0x03BF14B0 LDR X8, [X0 + 0xB8]
	0x03BF14B4 LDR X9, [X9 + 0x420]
	0x03BF14B8 ADRP X10, 0x56D000
	0x03BF14BC LDR X10, [X10 + 0x550]
	0x03BF14C0 LDR X2, [X8]
	0x03BF14C4 LDR X1, [X9]
	0x03BF14C8 LDR X3, [X10]
	0x03BF14CC MOV X0, X20
	0x03BF14D0 BL 0x227A7B4
	0x03BF14D4 ADRP X8, 0x505000
	0x03BF14D8 LDR X8, [X8 + 0x978]
	0x03BF14DC STR D0, [X31 + 0x8]
	0x03BF14E0 LDR X0, [X8]
	0x03BF14E4 ADD X1, X31, 0x8
	0x03BF14E8 BL 0x1C16E04
	0x03BF14EC B 0x3BF1620
	0x03BF14F0 ADRP X8, 0x56D000
	0x03BF14F4 LDR X8, [X8 + 0x528]
	0x03BF14F8 LDR X0, [X8]
	0x03BF14FC MOV X1, X21
	0x03BF1500 MOV X2, X31
	0x03BF1504 BL 0x321BA08
	0x03BF1508 TBZ X0, 0x0, 0x3BF159C
	0x03BF150C LDR X21, [X23]
	0x03BF1510 LDR X8, [X21 + 0x38]
	0x03BF1514 CBNZ X8, 0x3BF1524
	0x03BF1518 MOV X0, X21
	0x03BF151C BL 0x1C5C6E0
	0x03BF1520 LDR X8, [X21 + 0x38]
	0x03BF1524 LDR X0, [X8 + 0x10]
	0x03BF1528 LDRB W8, [X0 + 0x135]
	0x03BF152C TBNZ X8, 0x0, 0x3BF1534
	0x03BF1530 BL 0x1C5C684
	0x03BF1534 LDR W8, [X0 + 0xE0]
	0x03BF1538 CBNZ W8, 0x3BF1540
	0x03BF153C BL 0x1C16DFC
	0x03BF1540 LDR X8, [X21 + 0x38]
	0x03BF1544 LDR X0, [X8 + 0x10]
	0x03BF1548 LDRB W8, [X0 + 0x135]
	0x03BF154C TBNZ X8, 0x0, 0x3BF1554
	0x03BF1550 BL 0x1C5C684
	0x03BF1554 ADRP X9, 0x56D000
	0x03BF1558 LDR X8, [X0 + 0xB8]
	0x03BF155C LDR X9, [X9 + 0x430]
	0x03BF1560 ADRP X10, 0x56D000
	0x03BF1564 LDR X10, [X10 + 0x548]
	0x03BF1568 LDR X2, [X8]
	0x03BF156C LDR X1, [X9]
	0x03BF1570 LDR X3, [X10]
	0x03BF1574 MOV X0, X20
	0x03BF1578 BL 0x227A764
	0x03BF157C ADRP X8, 0x504000
	0x03BF1580 LDR X8, [X8 + 0x170]
	0x03BF1584 STRH W0, [X31 + 0x8]
	0x03BF1588 LDR X8, [X8]
	0x03BF158C ADD X1, X31, 0x8
	0x03BF1590 MOV X0, X8
	0x03BF1594 BL 0x1C16E04
	0x03BF1598 B 0x3BF1620
	0x03BF159C ADRP X8, 0x56D000
	0x03BF15A0 LDR X8, [X8 + 0x510]
	0x03BF15A4 LDR X0, [X8]
	0x03BF15A8 MOV X1, X21
	0x03BF15AC MOV X2, X31
	0x03BF15B0 BL 0x321BA08
	0x03BF15B4 TBZ X0, 0x0, 0x3BF169C
	0x03BF15B8 LDR X21, [X23]
	0x03BF15BC LDR X8, [X21 + 0x38]
	0x03BF15C0 CBNZ X8, 0x3BF15D0
	0x03BF15C4 MOV X0, X21
	0x03BF15C8 BL 0x1C5C6E0
	0x03BF15CC LDR X8, [X21 + 0x38]
	0x03BF15D0 LDR X0, [X8 + 0x10]
	0x03BF15D4 LDRB W8, [X0 + 0x135]
	0x03BF15D8 TBNZ X8, 0x0, 0x3BF15E0
	0x03BF15DC BL 0x1C5C684
	0x03BF15E0 LDR W8, [X0 + 0xE0]
	0x03BF15E4 CBNZ W8, 0x3BF15EC
	0x03BF15E8 BL 0x1C16DFC
	0x03BF15EC LDR X8, [X21 + 0x38]
	0x03BF15F0 LDR X0, [X8 + 0x10]
	0x03BF15F4 LDRB W8, [X0 + 0x135]
	0x03BF15F8 TBNZ X8, 0x0, 0x3BF1600
	0x03BF15FC BL 0x1C5C684
	0x03BF1600 ADRP X9, 0x56D000
	0x03BF1604 LDR X8, [X0 + 0xB8]
	0x03BF1608 LDR X9, [X9 + 0x490]
	0x03BF160C LDR X3, [X24]
	0x03BF1610 LDR X2, [X8]
	0x03BF1614 LDR X1, [X9]
	0x03BF1618 MOV X0, X20
	0x03BF161C BL 0x227A8F4
	0x03BF1620 MOV X20, X0
	0x03BF1624 MOV X21, X31
	0x03BF1628 LDR X8, [X19]
	0x03BF162C LDR X1, [X22]
	0x03BF1630 LDRH W9, [X8 + 0x12E]
	0x03BF1634 CBZ X9, 0x3BF1658
	0x03BF1638 LDR X10, [X8 + 0xB0]
	0x03BF163C ADD X10, X10, 0x8
	0x03BF1640 LDUR X11, [X10 - 0x8]
	0x03BF1644 CMP X11, X1
	0x03BF1648 B.EQ 0x3BF1668
	0x03BF164C SUBS X9, X9, 0x1
	0x03BF1650 ADD X10, X10, 0x10
	0x03BF1654 B.NE 0x3BF1640
	0x03BF1658 MOV X0, X19
	0x03BF165C MOV W2, W31
	0x03BF1660 BL 0x1C5C788
	0x03BF1664 B 0x3BF1674
	0x03BF1668 LDRSW X9, [X10]
	0x03BF166C ADD X8, X8, X9, 0x4, LSL
	0x03BF1670 ADD X0, X8, 0x138
	0x03BF1674 LDP X8, X1, [X0]
	0x03BF1678 MOV X0, X19
	0x03BF167C BLR X8
	0x03BF1680 CBNZ X21, 0x3BF176C
	0x03BF1684 MOV X0, X20
	0x03BF1688 LDP X20, X19, [X31 + 0x30]
	0x03BF168C LDP X22, X21, [X31 + 0x20]
	0x03BF1690 LDP X24, X23, [X31 + 0x10]
	0x03BF1694 LDR X30, [X31], #0x40
	0x03BF1698 RET
	0x03BF169C ADRP X8, 0x56D000
	0x03BF16A0 LDR X8, [X8 + 0x578]
	0x03BF16A4 LDR X0, [X8]
	0x03BF16A8 MOV X1, X21
	0x03BF16AC MOV X2, X31
	0x03BF16B0 BL 0x321BA08
	0x03BF16B4 TBZ X0, 0x0, 0x3BF16C8
	0x03BF16B8 LDR X8, [X20 + 0x10]
	0x03BF16BC CBZ X8, 0x3BF1748
	0x03BF16C0 LDR X21, [X8 + 0x18]
	0x03BF16C4 B 0x3BF174C
	0x03BF16C8 LDR X21, [X23]
	0x03BF16CC LDR X8, [X21 + 0x38]
	0x03BF16D0 CBNZ X8, 0x3BF16E0
	0x03BF16D4 MOV X0, X21
	0x03BF16D8 BL 0x1C5C6E0
	0x03BF16DC LDR X8, [X21 + 0x38]
	0x03BF16E0 LDR X0, [X8 + 0x10]
	0x03BF16E4 LDRB W8, [X0 + 0x135]
	0x03BF16E8 TBNZ X8, 0x0, 0x3BF16F0
	0x03BF16EC BL 0x1C5C684
	0x03BF16F0 LDR W8, [X0 + 0xE0]
	0x03BF16F4 CBNZ W8, 0x3BF16FC
	0x03BF16F8 BL 0x1C16DFC
	0x03BF16FC LDR X8, [X21 + 0x38]
	0x03BF1700 LDR X0, [X8 + 0x10]
	0x03BF1704 LDRB W8, [X0 + 0x135]
	0x03BF1708 TBNZ X8, 0x0, 0x3BF1710
	0x03BF170C BL 0x1C5C684
	0x03BF1710 ADRP X9, 0x56D000
	0x03BF1714 LDR X8, [X0 + 0xB8]
	0x03BF1718 LDR X9, [X9 + 0x580]
	0x03BF171C ADRP X10, 0x544000
	0x03BF1720 LDR X10, [X10 + 0xE58]
	0x03BF1724 LDR X2, [X8]
	0x03BF1728 LDR X1, [X9]
	0x03BF172C LDR X3, [X10]
	0x03BF1730 MOV X0, X19
	0x03BF1734 BL 0x227A714
	0x03BF1738 TBZ X0, 0x0, 0x3BF1624
	0x03BF173C MOV X0, X20
	0x03BF1740 BL 0x3BF3D00
	0x03BF1744 B 0x3BF1620
	0x03BF1748 MOV X21, X31
	0x03BF174C ADRP X8, 0x502000
	0x03BF1750 LDR X8, [X8 + 0x990]
	0x03BF1754 LDR X0, [X8]
	0x03BF1758 BL 0x1C16F10
	0x03BF175C MOV X20, X0
	0x03BF1760 MOV X1, X21
	0x03BF1764 BL 0x3BF2A28
	0x03BF1768 B 0x3BF1624
	0x03BF176C MOV X0, X21
	0x03BF1770 BL 0x1C16F18
	0x03BF1774 BL 0x1C16F20
	0x03BF1778 B 0x3BF181C
	0x03BF177C B 0x3BF181C
	0x03BF1780 B 0x3BF181C
	0x03BF1784 B 0x3BF181C
	0x03BF1788 B 0x3BF181C
	0x03BF178C B 0x3BF181C
	0x03BF1790 B 0x3BF181C
	0x03BF1794 B 0x3BF181C
	0x03BF1798 B 0x3BF181C
	0x03BF179C B 0x3BF181C
	0x03BF17A0 B 0x3BF181C
	0x03BF17A4 B 0x3BF181C
	0x03BF17A8 B 0x3BF181C
	0x03BF17AC B 0x3BF181C
	0x03BF17B0 B 0x3BF181C
	0x03BF17B4 B 0x3BF181C
	0x03BF17B8 B 0x3BF181C
	0x03BF17BC B 0x3BF181C
	0x03BF17C0 B 0x3BF181C
	0x03BF17C4 B 0x3BF181C
	0x03BF17C8 B 0x3BF181C
	0x03BF17CC B 0x3BF181C
	0x03BF17D0 B 0x3BF181C
	0x03BF17D4 B 0x3BF181C
	0x03BF17D8 B 0x3BF181C
	0x03BF17DC B 0x3BF181C
	0x03BF17E0 B 0x3BF181C
	0x03BF17E4 B 0x3BF181C
	0x03BF17E8 B 0x3BF181C
	0x03BF17EC B 0x3BF181C
	0x03BF17F0 B 0x3BF181C
	0x03BF17F4 B 0x3BF181C
	0x03BF17F8 B 0x3BF181C
	0x03BF17FC B 0x3BF181C
	0x03BF1800 B 0x3BF181C
	0x03BF1804 B 0x3BF181C
	0x03BF1808 B 0x3BF181C
	0x03BF180C B 0x3BF181C
	0x03BF1810 B 0x3BF181C
	0x03BF1814 B 0x3BF181C
	0x03BF1818 B 0x3BF181C
	0x03BF181C MOV X20, X0
	0x03BF1820 CMP W1, 0x1
	0x03BF1824 B.NE 0x3BF1844
	0x03BF1828 MOV X0, X20
	0x03BF182C BL 0x3EB1AD0
	0x03BF1830 LDR X21, [X0]
	0x03BF1834 BL 0x3EB1AE0
	0x03BF1838 MOV X20, X31
	0x03BF183C CBNZ X19, 0x3BF1628
	0x03BF1840 B 0x3BF1680
	0x03BF1844 MOV X21, X31
	0x03BF1848 B 0x3BF1850
	0x03BF184C MOV X20, X0
	0x03BF1850 CBZ X19, 0x3BF18AC
	0x03BF1854 LDR X8, [X19]
	0x03BF1858 LDR X1, [X22]
	0x03BF185C LDRH W9, [X8 + 0x12E]
	0x03BF1860 CBZ X9, 0x3BF1884
	0x03BF1864 LDR X10, [X8 + 0xB0]
	0x03BF1868 ADD X10, X10, 0x8
	0x03BF186C LDUR X11, [X10 - 0x8]
	0x03BF1870 CMP X11, X1
	0x03BF1874 B.EQ 0x3BF1894
	0x03BF1878 SUBS X9, X9, 0x1
	0x03BF187C ADD X10, X10, 0x10
	0x03BF1880 B.NE 0x3BF186C
	0x03BF1884 MOV X0, X19
	0x03BF1888 MOV W2, W31
	0x03BF188C BL 0x1C5C788
	0x03BF1890 B 0x3BF18A0
	0x03BF1894 LDRSW X9, [X10]
	0x03BF1898 ADD X8, X8, X9, 0x4, LSL
	0x03BF189C ADD X0, X8, 0x138
	0x03BF18A0 LDP X8, X1, [X0]
	0x03BF18A4 MOV X0, X19
	0x03BF18A8 BLR X8
	0x03BF18AC CBNZ X21, 0x3BF18B8
	0x03BF18B0 MOV X0, X20
	0x03BF18B4 BL 0x1D2C690
	0x03BF18B8 MOV X0, X21
	0x03BF18BC BL 0x1C16F18
	0x03BF18C0 BL 0x1990590
	0x03BF18C4 STP X30, X21, [X31 - 0x20]!
	0x03BF18C8 STP X20, X19, [X31 + 0x10]
	0x03BF18CC ADRP X21, 0x7F2000
	0x03BF18D0 ADRP X20, 0x509000
	0x03BF18D4 LDRB W8, [X21 + 0x77D]
	0x03BF18D8 LDR X20, [X20 + 0xC10]
	0x03BF18DC MOV X19, X0
	0x03BF18E0 TBNZ X8, 0x0, 0x3BF18F8
	0x03BF18E4 ADRP X0, 0x509000
	0x03BF18E8 LDR X0, [X0 + 0xC10]
	0x03BF18EC BL 0x1C16CF4
	0x03BF18F0 MOVZ W8, 0x1
	0x03BF18F4 STRB W8, [X21 + 0x77D]
	0x03BF18F8 LDR X8, [X19]
	0x03BF18FC MOVZ W1, 0x1
	0x03BF1900 MOV X0, X19
	0x03BF1904 LDP X9, X2, [X8 + 0x188]
	0x03BF1908 BLR X9
	0x03BF190C LDR X0, [X20]
	0x03BF1910 LDR W8, [X0 + 0xE0]
	0x03BF1914 CBNZ W8, 0x3BF191C
	0x03BF1918 BL 0x1C16DFC
	0x03BF191C MOV X0, X19
	0x03BF1920 LDP X20, X19, [X31 + 0x10]
	0x03BF1924 MOV X1, X31
	0x03BF1928 LDP X30, X21, [X31], #0x20
	0x03BF192C B 0x33B3E9C
	0x03BF1930 STP X30, X23, [X31 - 0x30]!
	0x03BF1934 STP X22, X21, [X31 + 0x10]
	0x03BF1938 STP X20, X19, [X31 + 0x20]
	0x03BF193C ADRP X21, 0x7F2000
	0x03BF1940 LDRB W8, [X21 + 0x77B]
	0x03BF1944 MOV X20, X1
	0x03BF1948 MOV X19, X0
	0x03BF194C TBNZ X8, 0x0, 0x3BF1964
	0x03BF1950 ADRP X0, 0x56D000
	0x03BF1954 LDR X0, [X0 + 0x588]
	0x03BF1958 BL 0x1C16CF4
	0x03BF195C MOVZ W8, 0x1
	0x03BF1960 STRB W8, [X21 + 0x77B]
	0x03BF1964 MOV X0, X19
	0x03BF1968 MOV X1, X31
	0x03BF196C BL 0x33BDD8C
	0x03BF1970 MOV X0, X20
	0x03BF1974 MOV X1, X31
	0x03BF1978 MOV X2, X31
	0x03BF197C BL 0x33BE5B0
	0x03BF1980 TBNZ X0, 0x0, 0x3BF19E0
	0x03BF1984 ADRP X23, 0x56D000
	0x03BF1988 LDR X23, [X23 + 0x588]
	0x03BF198C MOV X0, X20
	0x03BF1990 BL 0x3BE6158
	0x03BF1994 LDR X8, [X23]
	0x03BF1998 MOV X21, X0
	0x03BF199C MOV X0, X8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7F4000
	007 Move W8, [X20+1942]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {93}
	013 Move X0, 0x503000
	014 Move X0, [X0+2448]
	015 Call 0x1C17CF4
	016 Move X0, 0x52C000
	017 Move X0, [X0+2576]
	018 Call 0x1C17CF4
	019 Move X0, 0x52C000
	020 Move X0, [X0+2744]
	021 Call 0x1C17CF4
	022 Move X0, 0x56E000
	023 Move X0, [X0+664]
	024 Call 0x1C17CF4
	025 Move X0, 0x52C000
	026 Move X0, [X0+1696]
	027 Call 0x1C17CF4
	028 Move X0, 0x503000
	029 Move X0, [X0+2904]
	030 Call 0x1C17CF4
	031 Move X0, 0x504000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move X0, 0x505000
	035 Move X0, [X0+368]
	036 Call 0x1C17CF4
	037 Move X0, 0x506000
	038 Move X0, [X0+2424]
	039 Call 0x1C17CF4
	040 Move X0, 0x507000
	041 Move X0, [X0+1576]
	042 Call 0x1C17CF4
	043 Move X0, 0x503000
	044 Move X0, [X0+1880]
	045 Call 0x1C17CF4
	046 Move X0, 0x505000
	047 Move X0, [X0+2656]
	048 Call 0x1C17CF4
	049 Move X0, 0x503000
	050 Move X0, [X0+2512]
	051 Call 0x1C17CF4
	052 Move X0, 0x503000
	053 Move X0, [X0+3824]
	054 Call 0x1C17CF4
	055 Move X0, 0x52C000
	056 Move X0, [X0+1712]
	057 Call 0x1C17CF4
	058 Move X0, 0x503000
	059 Move X0, [X0+2704]
	060 Call 0x1C17CF4
	061 Move X0, 0x505000
	062 Move X0, [X0+632]
	063 Call 0x1C17CF4
	064 Move X0, 0x56E000
	065 Move X0, [X0+1272]
	066 Call 0x1C17CF4
	067 Move X0, 0x56E000
	068 Move X0, [X0+1280]
	069 Call 0x1C17CF4
	070 Move X0, 0x56E000
	071 Move X0, [X0+1288]
	072 Call 0x1C17CF4
	073 Move X0, 0x56E000
	074 Move X0, [X0+1296]
	075 Call 0x1C17CF4
	076 Move X0, 0x56E000
	077 Move X0, [X0+1304]
	078 Call 0x1C17CF4
	079 Move X0, 0x56E000
	080 Move X0, [X0+1312]
	081 Call 0x1C17CF4
	082 Move X0, 0x56E000
	083 Move X0, [X0+1320]
	084 Call 0x1C17CF4
	085 Move X0, 0x56E000
	086 Move X0, [X0+1328]
	087 Call 0x1C17CF4
	088 Move X0, 0x56E000
	089 Move X0, [X0+1336]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X20+1942], W8
	093 Compare X19, 0
	094 JumpIfEqual {414}
	095 Move X20, 0x52C000
	096 Move X20, [X20+1696]
	097 Move X0, X19
	098 Move X1, X31
	099 Call "il2cpp_vm_object_is_inst", X0
	100 Move X8, [X20]
	101 Move X20, X0
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Compare X20, 0
	108 JumpIfEqual {588}
	109 Move X0, X20
	110 Move X1, X31
	111 Call Type.get_IsPrimitive, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {192}
	116 Move X21, 0x503000
	117 Move X21, [X21+1880]
	118 Move X8, [X19]
	119 Move X9, [X21]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X21, 0x503000
	122 Move X21, [X21+2904]
	123 Move X9, [X21]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X9, 0x504000
	126 Move X9, [X9+2520]
	127 Move X9, [X9]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X21, 0x52C000
	130 Move X21, [X21+1712]
	131 Move X9, [X21]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X21, 0x507000
	134 Move X21, [X21+1576]
	135 Move X9, [X21]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X21, 0x505000
	138 Move X21, [X21+2656]
	139 Move X9, [X21]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X21, 0x503000
	142 Move X21, [X21+2704]
	143 Move X9, [X21]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X21, 0x506000
	146 Move X21, [X21+2424]
	147 Move X9, [X21]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X21, 0x505000
	150 Move X21, [X21+368]
	151 Move X9, [X21]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X8, 0x503000
	154 Move X8, [X8+2512]
	155 Move W1, 1
	156 Move X0, [X8]
	157 Call 0x1C17D6C
	158 Move X8, [X19]
	159 Move X1, [X21]
	160 Move X8, [X8+64]
	161 Move X9, [X1+64]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X20, X0
	164 Move X0, X19
	165 Call 0x1C17E08
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Move X0, [X21]
	168 Add X1, X31, 8
	169 NotImplemented "Instruction STRH not yet implemented."
	170 Call 0x1C17E04
	171 Compare X20, 0
	172 JumpIfEqual {588}
	173 Move X19, X0
	174 Compare X0, 0
	175 JumpIfEqual {182}
	176 Move X8, [X20]
	177 Move X0, X19
	178 Move X1, [X8+64]
	179 Call 0x1C17E00
	180 Compare X0, 0
	181 JumpIfEqual {592}
	182 Move W8, [X20+24]
	183 Compare W8, 0
	184 JumpIfEqual {591}
	185 Move [X20+32], X19
	186 Move X8, 0x52C000
	187 Move X8, [X8+2576]
	188 Move X0, [X8]
	189 Call 0x1C17F10
	190 Move X8, 0x56E000
	191 Move X8, [X8+1320]
	192 Move X21, 0x505000
	193 Move X21, [X21+632]
	194 Move X8, [X19]
	195 Move X9, [X21]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X9, 0x503000
	198 Move X9, [X9+2448]
	199 Move X10, [X9]
	200 Move W9, [X8+304]
	201 Move W11, [X10+304]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X12, [X8+200]
	204 Add X11, X12, X11
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X10, 0x52C000
	208 Move X10, [X10+2576]
	209 Move X10, [X10]
	210 Move W11, [X10+304]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X12, [X8+200]
	213 Add X11, X12, X11
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X10, 0x503000
	217 Move X10, [X10+3824]
	218 Move X10, [X10]
	219 Move W11, [X10+304]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X12, [X8+200]
	222 Add X11, X12, X11
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X10, 0x52C000
	226 Move X10, [X10+2744]
	227 Move X10, [X10]
	228 Move W11, [X10+304]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X9, [X8+200]
	231 Add X9, X9, X11
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X9, 0x56E000
	235 Move X9, [X9+664]
	236 Move X0, X19
	237 Move X9, [X9]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Call _AndroidJNIHelper.CreateJavaRunnable, X0
	240 Move X8, 0x503000
	241 Move X8, [X8+2512]
	242 Move W1, 1
	243 Move X0, [X8]
	244 Call 0x1C17D6C
	245 Move X8, [X19]
	246 Move X1, [X21]
	247 Move X8, [X8+64]
	248 Move X9, [X1+64]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X20, X0
	251 Move X0, X19
	252 Call 0x1C17E08
	253 Move W8, [X0]
	254 Move X0, [X21]
	255 Add X1, X31, 8
	256 Move [X31+8], W8
	257 Call 0x1C17E04
	258 Compare X20, 0
	259 JumpIfEqual {588}
	260 Move X19, X0
	261 Compare X0, 0
	262 JumpIfEqual {269}
	263 Move X8, [X20]
	264 Move X0, X19
	265 Move X1, [X8+64]
	266 Call 0x1C17E00
	267 Compare X0, 0
	268 JumpIfEqual {592}
	269 Move W8, [X20+24]
	270 Compare W8, 0
	271 JumpIfEqual {591}
	272 Move [X20+32], X19
	273 Move X8, 0x52C000
	274 Move X8, [X8+2576]
	275 Move X0, [X8]
	276 Call 0x1C17F10
	277 Move X8, 0x56E000
	278 Move X8, [X8+1336]
	279 Move X8, 0x503000
	280 Move X8, [X8+2512]
	281 Move W1, 1
	282 Move X0, [X8]
	283 Call 0x1C17D6C
	284 Compare X0, 0
	285 JumpIfEqual {588}
	286 Move X1, [X21]
	287 Move X8, [X19]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X8, [X0]
	290 Move X20, X0
	291 Move X0, X19
	292 Move X1, [X8+64]
	293 Call 0x1C17E00
	294 Compare X0, 0
	295 JumpIfEqual {592}
	296 Move X1, [X21]
	297 Move X8, [X19]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move W8, [X20+24]
	300 Compare W8, 0
	301 JumpIfEqual {591}
	302 Move [X20+32], X19
	303 Move X8, 0x52C000
	304 Move X8, [X8+2576]
	305 Move X0, [X8]
	306 Call 0x1C17F10
	307 Move X8, 0x56E000
	308 Move X8, [X8+1296]
	309 Move X8, 0x503000
	310 Move X8, [X8+2512]
	311 Move W1, 1
	312 Move X0, [X8]
	313 Call 0x1C17D6C
	314 Move X8, [X19]
	315 Move X1, [X21]
	316 Move X8, [X8+64]
	317 Move X9, [X1+64]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X20, X0
	320 Move X0, X19
	321 Call 0x1C17E08
	322 Move W8, [X0]
	323 Move X0, [X21]
	324 Add X1, X31, 8
	325 Move [X31+8], W8
	326 Call 0x1C17E04
	327 Compare X20, 0
	328 JumpIfEqual {588}
	329 Move X19, X0
	330 Compare X0, 0
	331 JumpIfEqual {338}
	332 Move X8, [X20]
	333 Move X0, X19
	334 Move X1, [X8+64]
	335 Call 0x1C17E00
	336 Compare X0, 0
	337 JumpIfEqual {592}
	338 Move W8, [X20+24]
	339 Compare W8, 0
	340 JumpIfEqual {591}
	341 Move [X20+32], X19
	342 Move X8, 0x52C000
	343 Move X8, [X8+2576]
	344 Move X0, [X8]
	345 Call 0x1C17F10
	346 Move X8, 0x56E000
	347 Move X8, [X8+1280]
	348 Move X8, 0x503000
	349 Move X8, [X8+2512]
	350 Move W1, 1
	351 Move X0, [X8]
	352 Call 0x1C17D6C
	353 Move X21, 0x52C000
	354 Move X21, [X21+1712]
	355 Move X8, [X19+24]
	356 Compare X8, 0
	357 JumpIfEqual {588}
	358 Move X19, [X8+24]
	359 Move X8, 0x52C000
	360 Move X8, [X8+2576]
	361 Move X0, [X8]
	362 Call 0x1C17F10
	363 Move X1, X19
	364 Move X20, X0
	365 Call AndroidJavaObject..ctor, X0, X1
	366 Move X0, X20
	367 Move X8, 0x503000
	368 Move X8, [X8+2512]
	369 Move W1, 1
	370 Move X0, [X8]
	371 Call 0x1C17D6C
	372 Move X8, [X19]
	373 Move X1, [X21]
	374 Move X8, [X8+64]
	375 Move X9, [X1+64]
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move X20, X0
	378 Move X0, X19
	379 Call 0x1C17E08
	380 Move W8, [X0]
	381 Move X0, [X21]
	382 Add X1, X31, 8
	383 Move [X31+8], W8
	384 Call 0x1C17E04
	385 Compare X20, 0
	386 JumpIfEqual {588}
	387 Move X19, X0
	388 Compare X0, 0
	389 JumpIfEqual {396}
	390 Move X8, [X20]
	391 Move X0, X19
	392 Move X1, [X8+64]
	393 Call 0x1C17E00
	394 Compare X0, 0
	395 JumpIfEqual {592}
	396 Move W8, [X20+24]
	397 Compare W8, 0
	398 JumpIfEqual {591}
	399 Move [X20+32], X19
	400 Move X8, 0x52C000
	401 Move X8, [X8+2576]
	402 Move X0, [X8]
	403 Call 0x1C17F10
	404 Move X8, 0x56E000
	405 Move X8, [X8+1288]
	406 Move X21, [X8]
	407 Move X1, X31
	408 Move X19, X0
	409 Call Object..ctor, X0
	410 Move X0, X19
	411 Move X1, X21
	412 Move X2, X20
	413 Call AndroidJavaObject._AndroidJavaObject, X0, X1, X2
	414 Move X0, X19
	415 Move X20, [X31+32]
	416 Move X19, [X31+40]
	417 Move X30, [X31+16]
	418 Move X21, [X31+24]
	419 Add X31, X31, 48
	420 Return X0
	421 Move X0, X19
	422 Call _AndroidJNIHelper.ConvertToJNIArray, X0
	423 Move X0, X19
	424 Call AndroidJavaProxy.GetRawProxy, X0
	425 Move X20, [X31+32]
	426 Move X19, [X31+40]
	427 Move X30, [X31+16]
	428 Move X21, [X31+24]
	429 Add X31, X31, 48
	430 Call AndroidJavaObject.AndroidJavaObjectDeleteLocalRef, X0
	431 Return X0
	432 Move X8, 0x503000
	433 Move X8, [X8+2512]
	434 Move W1, 1
	435 Move X0, [X8]
	436 Call 0x1C17D6C
	437 Move X8, [X19]
	438 Move X1, [X21]
	439 Move X8, [X8+64]
	440 Move X9, [X1+64]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X20, X0
	443 Move X0, X19
	444 Call 0x1C17E08
	445 NotImplemented "Instruction LDRH not yet implemented."
	446 Move X0, [X21]
	447 Add X1, X31, 8
	448 NotImplemented "Instruction STRH not yet implemented."
	449 Call 0x1C17E04
	450 Compare X20, 0
	451 JumpIfEqual {588}
	452 Move X19, X0
	453 Compare X0, 0
	454 JumpIfEqual {461}
	455 Move X8, [X20]
	456 Move X0, X19
	457 Move X1, [X8+64]
	458 Call 0x1C17E00
	459 Compare X0, 0
	460 JumpIfEqual {592}
	461 Move W8, [X20+24]
	462 Compare W8, 0
	463 JumpIfEqual {591}
	464 Move [X20+32], X19
	465 Move X8, 0x52C000
	466 Move X8, [X8+2576]
	467 Move X0, [X8]
	468 Call 0x1C17F10
	469 Move X8, 0x56E000
	470 Move X8, [X8+1304]
	471 Move X8, 0x503000
	472 Move X8, [X8+2512]
	473 Move W1, 1
	474 Move X0, [X8]
	475 Call 0x1C17D6C
	476 Move X8, [X19]
	477 Move X1, [X21]
	478 Move X8, [X8+64]
	479 Move X9, [X1+64]
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move X20, X0
	482 Move X0, X19
	483 Call 0x1C17E08
	484 Move X8, [X0]
	485 Move X0, [X21]
	486 Add X1, X31, 8
	487 Move [X31+8], X8
	488 Call 0x1C17E04
	489 Compare X20, 0
	490 JumpIfEqual {588}
	491 Move X19, X0
	492 Compare X0, 0
	493 JumpIfEqual {500}
	494 Move X8, [X20]
	495 Move X0, X19
	496 Move X1, [X8+64]
	497 Call 0x1C17E00
	498 Compare X0, 0
	499 JumpIfEqual {592}
	500 Move W8, [X20+24]
	501 Compare W8, 0
	502 JumpIfEqual {591}
	503 Move [X20+32], X19
	504 Move X8, 0x52C000
	505 Move X8, [X8+2576]
	506 Move X0, [X8]
	507 Call 0x1C17F10
	508 Move X8, 0x56E000
	509 Move X8, [X8+1312]
	510 Move X8, 0x503000
	511 Move X8, [X8+2512]
	512 Move W1, 1
	513 Move X0, [X8]
	514 Call 0x1C17D6C
	515 Move X8, [X19]
	516 Move X1, [X21]
	517 Move X8, [X8+64]
	518 Move X9, [X1+64]
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move X20, X0
	521 Move X0, X19
	522 Call 0x1C17E08
	523 Move V0, [X0]
	524 Move X0, [X21]
	525 Add X1, X31, 8
	526 Move [X31+8], S0
	527 Call 0x1C17E04
	528 Compare X20, 0
	529 JumpIfEqual {588}
	530 Move X19, X0
	531 Compare X0, 0
	532 JumpIfEqual {539}
	533 Move X8, [X20]
	534 Move X0, X19
	535 Move X1, [X8+64]
	536 Call 0x1C17E00
	537 Compare X0, 0
	538 JumpIfEqual {592}
	539 Move W8, [X20+24]
	540 Compare W8, 0
	541 JumpIfEqual {591}
	542 Move [X20+32], X19
	543 Move X8, 0x52C000
	544 Move X8, [X8+2576]
	545 Move X0, [X8]
	546 Call 0x1C17F10
	547 Move X8, 0x56E000
	548 Move X8, [X8+1272]
	549 Move X8, 0x503000
	550 Move X8, [X8+2512]
	551 Move W1, 1
	552 Move X0, [X8]
	553 Call 0x1C17D6C
	554 Move X8, [X19]
	555 Move X1, [X21]
	556 Move X8, [X8+64]
	557 Move X9, [X1+64]
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Move X20, X0
	560 Move X0, X19
	561 Call 0x1C17E08
	562 Move V0, [X0]
	563 Move X0, [X21]
	564 Add X1, X31, 8
	565 Move [X31+8], D0
	566 Call 0x1C17E04
	567 Compare X20, 0
	568 JumpIfEqual {588}
	569 Move X19, X0
	570 Compare X0, 0
	571 JumpIfEqual {578}
	572 Move X8, [X20]
	573 Move X0, X19
	574 Move X1, [X8+64]
	575 Call 0x1C17E00
	576 Compare X0, 0
	577 JumpIfEqual {592}
	578 Move W8, [X20+24]
	579 Compare W8, 0
	580 JumpIfEqual {591}
	581 Move [X20+32], X19
	582 Move X8, 0x52C000
	583 Move X8, [X8+2576]
	584 Move X0, [X8]
	585 Call 0x1C17F10
	586 Move X8, 0x56E000
	587 Move X8, [X8+1328]
	588 Call 0x1C17F20
	589 Move X0, X19
	590 Call 0x1C181E0
	591 Call 0x1C17F28
	592 Call 0x1C17F44
	593 Move X1, X31
	594 Call 0x1C17DEC
	595 Move X0, X19
	596 Move X1, X31
	597 Call "il2cpp_vm_object_is_inst", X0
	598 Move X20, X0
	599 Move X0, 0x56E000
	600 Move X0, [X0+680]
	601 Call 0x1C17D08
	602 Move X19, X0
	603 Move X21, X31
	604 Compare X20, 0
	605 JumpIfEqual {612}
	606 Move X8, [X20]
	607 Move X0, X20
	608 Move X9, [X8+360]
	609 Move X1, [X8+368]
	610 NotImplemented "Instruction BLR not yet implemented."
	611 Move X21, X0
	612 Move X0, 0x50B000
	613 Move X0, [X0+2480]
	614 Call 0x1C17D08
	615 Move X2, X0
	616 Move X0, X19
	617 Move X1, X21
	618 Move X3, X31
	619 Call String.Concat, X0, X1, X2
	620 Move X19, X0
	621 Move X0, 0x503000
	622 Move X0, [X0+2000]
	623 Call 0x1C17D08
	624 Call 0x1C17F10
	625 Move X1, X19
	626 Move X2, X31
	627 Move X20, X0
	628 Call Exception..ctor, X0, X1
	629 Move X0, 0x56E000
	630 Move X0, [X0+1344]
	631 Call 0x1C17D08
	632 Move X1, X0
	633 Move X0, X20
	634 Call 0x1C17DEC

Method: System.Void DeleteJNIArgArray(System.Object[] args, System.Span`1<UnityEngine.jvalue> jniArgs)

Disassembly:
	0x03BE58A0 B 0x3BE58B0
	0x03BE58A4 LDRSW X9, [X10]
	0x03BE58A8 ADD X8, X8, X9, 0x4, LSL
	0x03BE58AC ADD X0, X8, 0x138
	0x03BE58B0 LDP X8, X1, [X0]
	0x03BE58B4 MOV X0, X22
	0x03BE58B8 BLR X8
	0x03BE58BC CBZ X23, 0x3BE5970
	0x03BE58C0 MOV X0, X23
	0x03BE58C4 BL 0x1C16F18
	0x03BE58C8 B 0x3BE58D0
	0x03BE58CC B 0x3BE58D0
	0x03BE58D0 MOV X24, X0
	0x03BE58D4 CMP W1, 0x1
	0x03BE58D8 B.NE 0x3BE58FC
	0x03BE58DC MOV X0, X24
	0x03BE58E0 BL 0x3EB1AD0
	0x03BE58E4 LDR X23, [X0]
	0x03BE58E8 BL 0x3EB1AE0
	0x03BE58EC MOV X21, X31
	0x03BE58F0 MOVZ W24, 0x1
	0x03BE58F4 CBNZ X22, 0x3BE5144
	0x03BE58F8 B 0x3BE5454
	0x03BE58FC MOV X23, X31
	0x03BE5900 B 0x3BE5908
	0x03BE5904 MOV X24, X0
	0x03BE5908 CBZ X22, 0x3BE596C
	0x03BE590C ADRP X10, 0x50E000
	0x03BE5910 LDR X8, [X22]
	0x03BE5914 LDR X10, [X10 + 0xE00]
	0x03BE5918 LDRH W9, [X8 + 0x12E]
	0x03BE591C LDR X1, [X10]
	0x03BE5920 CBZ X9, 0x3BE5944
	0x03BE5924 LDR X10, [X8 + 0xB0]
	0x03BE5928 ADD X10, X10, 0x8
	0x03BE592C LDUR X11, [X10 - 0x8]
	0x03BE5930 CMP X11, X1
	0x03BE5934 B.EQ 0x3BE5954
	0x03BE5938 SUBS X9, X9, 0x1
	0x03BE593C ADD X10, X10, 0x10
	0x03BE5940 B.NE 0x3BE592C
	0x03BE5944 MOV X0, X22
	0x03BE5948 MOV W2, W31
	0x03BE594C BL 0x1C5C788
	0x03BE5950 B 0x3BE5960
	0x03BE5954 LDRSW X9, [X10]
	0x03BE5958 ADD X8, X8, X9, 0x4, LSL
	0x03BE595C ADD X0, X8, 0x138
	0x03BE5960 LDP X8, X1, [X0]
	0x03BE5964 MOV X0, X22
	0x03BE5968 BLR X8
	0x03BE596C CBNZ X23, 0x3BE5978
	0x03BE5970 MOV X0, X24
	0x03BE5974 BL 0x1D2C690
	0x03BE5978 MOV X0, X23
	0x03BE597C BL 0x1C16F18
	0x03BE5980 BL 0x1990590
	0x03BE5984 B 0x3BE5988
	0x03BE5988 STR X30, [X31 - 0x30]!
	0x03BE598C STP X22, X21, [X31 + 0x10]
	0x03BE5990 STP X20, X19, [X31 + 0x20]
	0x03BE5994 ADRP X20, 0x7FE000
	0x03BE5998 LDRB W8, [X20 + 0x79D]
	0x03BE599C MOV X19, X0
	0x03BE59A0 TBNZ X8, 0x0, 0x3BE59D0
	0x03BE59A4 ADRP X0, 0x50E000
	0x03BE59A8 LDR X0, [X0 + 0x8F0]
	0x03BE59AC BL 0x1C16CF4
	0x03BE59B0 ADRP X0, 0x579000
	0x03BE59B4 LDR X0, [X0 + 0x338]
	0x03BE59B8 BL 0x1C16CF4
	0x03BE59BC ADRP X0, 0x579000
	0x03BE59C0 LDR X0, [X0 + 0x340]
	0x03BE59C4 BL 0x1C16CF4
	0x03BE59C8 MOVZ W8, 0x1
	0x03BE59CC STRB W8, [X20 + 0x79D]
	0x03BE59D0 CBZ X19, 0x3BE5A88
	0x03BE59D4 LDR W8, [X19 + 0x18]
	0x03BE59D8 CBZ W8, 0x3BE5A88
	0x03BE59DC ADRP X8, 0x50E000
	0x03BE59E0 LDR X8, [X8 + 0x8F0]
	0x03BE59E4 LDR X0, [X8]
	0x03BE59E8 BL 0x1C16F10
	0x03BE59EC MOV X1, X31
	0x03BE59F0 MOV X20, X0
	0x03BE59F4 BL 0x3231AC4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x7FF000
	012 Move W8, [X22+1943]
	013 Move X21, X2
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x538000
	021 Move X0, [X0+2744]
	022 Call 0x1C17CF4
	023 Move X0, 0x57A000
	024 Move X0, [X0+664]
	025 Call 0x1C17CF4
	026 Move X0, 0x50F000
	027 Move X0, [X0+3824]
	028 Call 0x1C17CF4
	029 Move X0, 0x511000
	030 Move X0, [X0+632]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1943], W8
	034 Compare X20, 0
	035 JumpIfEqual {80}
	036 Move X8, [X20+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X24, 0x511000
	039 Move X25, 0x57A000
	040 Move X26, 0x538000
	041 Move X27, 0x50F000
	042 Move X24, [X24+632]
	043 Move X25, [X25+664]
	044 Move X26, [X26+2744]
	045 Move X27, [X27+3824]
	046 Move X22, X31
	047 And X8, X8, 0
	048 And X21, X21, 0
	049 Add X23, X20, 32
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X23]
	052 Compare X9, 0
	053 JumpIfEqual {78}
	054 Move X10, [X24]
	055 Move X9, [X9]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X10, [X25]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X11, [X26]
	060 Move W10, [X9+304]
	061 Move W12, [X11+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X13, [X9+200]
	064 Add X12, X13, X12
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X11, [X27]
	068 Move W12, [X11+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9+200]
	071 Add X9, X9, X12
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X19]
	076 Call AndroidJNISafe.DeleteLocalRef, X0
	077 Move W8, [X20+24]
	078 Add X22, X22, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X26, [X31+16]
	087 Move X25, [X31+24]
	088 Move X30, [X31+80]
	089 Move X27, [X31+88]
	090 Return 
	091 Call 0x1C17F28

Method: System.IntPtr ConvertToJNIArray(System.Array array)

Disassembly:
	0x03BE4544 LDR X0, [X8]
	0x03BE4548 LDR W8, [X0 + 0xE0]
	0x03BE454C CBNZ W8, 0x3BE4554
	0x03BE4550 BL 0x1C16DFC
	0x03BE4554 ADRP X8, 0x57A000
	0x03BE4558 LDR X8, [X8 + 0x2A0]
	0x03BE455C MOV X1, X31
	0x03BE4560 LDR X0, [X8]
	0x03BE4564 BL 0x3C06A04
	0x03BE4568 CMP X23, X27
	0x03BE456C B.CS 0x3BE467C
	0x03BE4570 ADRP X9, 0x510000
	0x03BE4574 LDR X8, [X21]
	0x03BE4578 LDR X9, [X9 + 0x9D8]
	0x03BE457C LDR X8, [X8 + 0x40]
	0x03BE4580 LDR X1, [X9]
	0x03BE4584 LDR X9, [X1 + 0x40]
	0x03BE4588 CMP X8, X9
	0x03BE458C B.NE 0x3BE471C
	0x03BE4590 MOV X0, X21
	0x03BE4594 BL 0x1C16E08
	0x03BE4598 LDRB W8, [X0]
	0x03BE459C STRB W8, [X19]
	0x03BE45A0 B 0x3BE45D0
	0x03BE45A4 CMP X23, X27
	0x03BE45A8 B.CS 0x3BE467C
	0x03BE45AC LDR X8, [X21 + 0x18]
	0x03BE45B0 CBNZ X8, 0x3BE45C8
	0x03BE45B4 B 0x3BE4680
	0x03BE45B8 CMP X23, X27
	0x03BE45BC B.CS 0x3BE467C
	0x03BE45C0 LDR X8, [X21 + 0x10]
	0x03BE45C4 CBZ X8, 0x3BE45CC
	0x03BE45C8 LDR X8, [X8 + 0x18]
	0x03BE45CC STR X8, [X19]
	0x03BE45D0 LDR W8, [X20 + 0x18]
	0x03BE45D4 ADD X23, X23, 0x1
	0x03BE45D8 ADD X19, X19, 0x8
	0x03BE45DC CMP X23, W8, SXTW
	0x03BE45E0 B.LT 0x3BE42F4
	0x03BE45E4 B 0x3BE4660
	0x03BE45E8 CMP X23, X27
	0x03BE45EC B.CS 0x3BE467C
	0x03BE45F0 MOV X0, X21
	0x03BE45F4 BL 0x3BE3544
	0x03BE45F8 B 0x3BE4528
	0x03BE45FC CMP X23, X27
	0x03BE4600 B.CS 0x3BE467C
	0x03BE4604 MOV X0, X21
	0x03BE4608 BL 0x3BF09A0
	0x03BE460C B 0x3BE4528
	0x03BE4610 CMP X23, X27
	0x03BE4614 B.CS 0x3BE467C
	0x03BE4618 MOV X0, X21
	0x03BE461C BL 0x1C16E08
	0x03BE4620 LDR X8, [X0]
	0x03BE4624 B 0x3BE45CC
	0x03BE4628 CMP X23, X27
	0x03BE462C B.CS 0x3BE467C
	0x03BE4630 MOV X0, X21
	0x03BE4634 BL 0x1C16E08
	0x03BE4638 LDR V0, [X0]
	0x03BE463C STR S0, [X19]
	0x03BE4640 B 0x3BE45D0
	0x03BE4644 CMP X23, X27
	0x03BE4648 B.CS 0x3BE467C
	0x03BE464C MOV X0, X21
	0x03BE4650 BL 0x1C16E08
	0x03BE4654 LDR V0, [X0]
	0x03BE4658 STR D0, [X19]
	0x03BE465C B 0x3BE45D0
	0x03BE4660 LDP X20, X19, [X31 + 0x50]
	0x03BE4664 LDP X22, X21, [X31 + 0x40]
	0x03BE4668 LDP X24, X23, [X31 + 0x30]
	0x03BE466C LDP X26, X25, [X31 + 0x20]
	0x03BE4670 LDP X28, X27, [X31 + 0x10]
	0x03BE4674 LDP X29, X30, [X31], #0x60
	0x03BE4678 RET
	0x03BE467C BL 0x1C16F28
	0x03BE4680 BL 0x1C16F20
	0x03BE4684 MOV X0, X21
	0x03BE4688 MOV X1, X31
	0x03BE468C BL 0x33BE520
	0x03BE4690 MOV X20, X0
	0x03BE4694 ADRP X0, 0x57A000
	0x03BE4698 LDR X0, [X0 + 0x2A8]
	0x03BE469C BL 0x1C16D08
	0x03BE46A0 MOV X19, X0
	0x03BE46A4 MOV X21, X31
	0x03BE46A8 CBZ X20, 0x3BE46C0
	0x03BE46AC LDR X8, [X20]
	0x03BE46B0 MOV X0, X20
	0x03BE46B4 LDP X9, X1, [X8 + 0x168]
	0x03BE46B8 BLR X9
	0x03BE46BC MOV X21, X0
	0x03BE46C0 ADRP X0, 0x517000
	0x03BE46C4 LDR X0, [X0 + 0x9B0]
	0x03BE46C8 BL 0x1C16D08
	0x03BE46CC MOV X2, X0
	0x03BE46D0 MOV X0, X19
	0x03BE46D4 MOV X1, X21
	0x03BE46D8 MOV X3, X31
	0x03BE46DC BL 0x32274B8
	0x03BE46E0 MOV X19, X0
	0x03BE46E4 ADRP X0, 0x50F000
	0x03BE46E8 LDR X0, [X0 + 0x7D0]
	0x03BE46EC BL 0x1C16D08
	0x03BE46F0 BL 0x1C16F10
	0x03BE46F4 MOV X1, X19
	0x03BE46F8 MOV X2, X31
	0x03BE46FC MOV X20, X0
	0x03BE4700 BL 0x33B2C70
	0x03BE4704 ADRP X0, 0x57A000
	0x03BE4708 LDR X0, [X0 + 0x2B0]
	0x03BE470C BL 0x1C16D08
	0x03BE4710 MOV X1, X0
	0x03BE4714 MOV X0, X20
	0x03BE4718 BL 0x1C16DEC
	0x03BE471C MOV X0, X21
	0x03BE4720 BL 0x1C171E0
	0x03BE4724 STR X30, [X31 - 0x30]!
	0x03BE4728 STP X22, X21, [X31 + 0x10]
	0x03BE472C STP X20, X19, [X31 + 0x20]
	0x03BE4730 ADRP X22, 0x7FF000
	0x03BE4734 LDRB W8, [X22 + 0x184]
	0x03BE4738 MOV X19, X2
	0x03BE473C MOV X21, X1
	0x03BE4740 MOV X20, X0
	0x03BE4744 TBNZ X8, 0x0, 0x3BE475C
	0x03BE4748 ADRP X0, 0x57A000
	0x03BE474C LDR X0, [X0 + 0x2B8]
	0x03BE4750 BL 0x1C16CF4
	0x03BE4754 MOVZ W8, 0x1
	0x03BE4758 STRB W8, [X22 + 0x184]
	0x03BE475C CBZ X20, 0x3BE4788
	0x03BE4760 LDR W8, [X20 + 0x18]
	0x03BE4764 CMP W19, W8
	0x03BE4768 B.NE 0x3BE478C
	0x03BE476C MOV X0, X20
	0x03BE4770 MOV X1, X21
	0x03BE4774 MOV X2, X19
	0x03BE4778 LDP X20, X19, [X31 + 0x20]
	0x03BE477C LDP X22, X21, [X31 + 0x10]
	0x03BE4780 LDR X30, [X31], #0x30
	0x03BE4784 B 0x3BE41A4
	0x03BE4788 BL 0x1C16F20
	0x03BE478C MOV X0, X20
	0x03BE4790 BL 0x19903C0
	0x03BE4794 LDR X8, [X20 + 0x18]
	0x03BE4798 ADRP X20, 0x50F000
	0x03BE479C STR W8, [X31 + 0xC]
	0x03BE47A0 LDR X20, [X20 + 0x758]
	0x03BE47A4 MOV X0, X20
	0x03BE47A8 BL 0x1C16D08
	0x03BE47AC ADD X1, X31, 0xC
	0x03BE47B0 BL 0x1C16E04
	0x03BE47B4 MOV X21, X0
	0x03BE47B8 ADRP X0, 0x57A000
	0x03BE47BC LDR X0, [X0 + 0x2B8]
	0x03BE47C0 BL 0x1C16D08
	0x03BE47C4 MOV X0, X20
	0x03BE47C8 STR W19, [X31 + 0x8]
	0x03BE47CC BL 0x1C16D08
	0x03BE47D0 ADD X1, X31, 0x8
	0x03BE47D4 BL 0x1C16E04
	0x03BE47D8 MOV X19, X0
	0x03BE47DC ADRP X0, 0x57A000
	0x03BE47E0 LDR X0, [X0 + 0x2C0]
	0x03BE47E4 BL 0x1C16D08
	0x03BE47E8 MOV X1, X21
	0x03BE47EC MOV X2, X19
	0x03BE47F0 MOV X3, X31
	0x03BE47F4 BL 0x3227BD4
	0x03BE47F8 MOV X19, X0
	0x03BE47FC ADRP X0, 0x517000
	0x03BE4800 LDR X0, [X0 + 0x578]
	0x03BE4804 BL 0x1C16D08
	0x03BE4808 BL 0x1C16F10
	0x03BE480C MOV X1, X19
	0x03BE4810 MOV X2, X31
	0x03BE4814 MOV X20, X0
	0x03BE4818 BL 0x3314A68
	0x03BE481C ADRP X0, 0x57A000
	0x03BE4820 LDR X0, [X0 + 0x2C8]
	0x03BE4824 BL 0x1C16D08
	0x03BE4828 MOV X1, X0
	0x03BE482C MOV X0, X20
	0x03BE4830 BL 0x1C16DEC
	0x03BE4834 STR X30, [X31 - 0x30]!
	0x03BE4838 STP X22, X21, [X31 + 0x10]
	0x03BE483C STP X20, X19, [X31 + 0x20]
	0x03BE4840 ADRP X21, 0x7FF000
	0x03BE4844 ADRP X22, 0x57A000
	0x03BE4848 LDRB W8, [X21 + 0x185]
	0x03BE484C LDR X22, [X22 + 0x290]
	0x03BE4850 MOV X20, X1
	0x03BE4854 MOV X19, X0
	0x03BE4858 TBNZ X8, 0x0, 0x3BE4870
	0x03BE485C ADRP X0, 0x57A000
	0x03BE4860 LDR X0, [X0 + 0x290]
	0x03BE4864 BL 0x1C16CF4
	0x03BE4868 MOVZ W8, 0x1
	0x03BE486C STRB W8, [X21 + 0x185]
	0x03BE4870 LDR X1, [X22]
	0x03BE4874 MOV X0, X20
	0x03BE4878 BL 0x25FF670
	0x03BE487C MOV X2, X0
	0x03BE4880 MOV X0, X19
	0x03BE4884 LDP X20, X19, [X31 + 0x20]
	0x03BE4888 LDP X22, X21, [X31 + 0x10]
	0x03BE488C MOV X3, X1
	0x03BE4890 MOV X1, X2
	0x03BE4894 MOV X2, X3
	0x03BE4898 LDR X30, [X31], #0x30
	0x03BE489C B 0x3BE48A0
	0x03BE48A0 STP X30, X27, [X31 - 0x50]!
	0x03BE48A4 STP X26, X25, [X31 + 0x10]
	0x03BE48A8 STP X24, X23, [X31 + 0x20]
	0x03BE48AC STP X22, X21, [X31 + 0x30]
	0x03BE48B0 STP X20, X19, [X31 + 0x40]
	0x03BE48B4 ADRP X22, 0x7FF000
	0x03BE48B8 LDRB W8, [X22 + 0x797]
	0x03BE48BC MOV X21, X2
	0x03BE48C0 MOV X19, X1
	0x03BE48C4 MOV X20, X0
	0x03BE48C8 TBNZ X8, 0x0, 0x3BE4904
	0x03BE48CC ADRP X0, 0x538000
	0x03BE48D0 LDR X0, [X0 + 0xAB8]
	0x03BE48D4 BL 0x1C16CF4
	0x03BE48D8 ADRP X0, 0x57A000
	0x03BE48DC LDR X0, [X0 + 0x298]
	0x03BE48E0 BL 0x1C16CF4
	0x03BE48E4 ADRP X0, 0x50F000
	0x03BE48E8 LDR X0, [X0 + 0xEF0]
	0x03BE48EC BL 0x1C16CF4
	0x03BE48F0 ADRP X0, 0x511000
	0x03BE48F4 LDR X0, [X0 + 0x278]
	0x03BE48F8 BL 0x1C16CF4
	0x03BE48FC MOVZ W8, 0x1
	0x03BE4900 STRB W8, [X22 + 0x797]
	0x03BE4904 CBZ X20, 0x3BE49DC
	0x03BE4908 LDR X8, [X20 + 0x18]
	0x03BE490C CMP W8, 0x1
	0x03BE4910 B.LT 0x3BE49DC
	0x03BE4914 ADRP X24, 0x511000
	0x03BE4918 ADRP X25, 0x57A000
	0x03BE491C ADRP X26, 0x538000
	0x03BE4920 ADRP X27, 0x50F000
	0x03BE4924 LDR X24, [X24 + 0x278]
	0x03BE4928 LDR X25, [X25 + 0x298]
	0x03BE492C LDR X26, [X26 + 0xAB8]
	0x03BE4930 LDR X27, [X27 + 0xEF0]
	0x03BE4934 MOV X22, X31
	0x03BE4938 AND X8, X8, 0x0
	0x03BE493C AND X21, X21, 0x0
	0x03BE4940 ADD X23, X20, 0x20
	0x03BE4944 CMP X22, W8, UXTW
	0x03BE4948 B.CS 0x3BE49F4
	0x03BE494C LDR X9, [X23, X22, LSL #3]
	0x03BE4950 CBZ X9, 0x3BE49D0
	0x03BE4954 LDR X10, [X24]
	0x03BE4958 LDR X9, [X9]
	0x03BE495C CMP X9, X10
	0x03BE4960 B.EQ 0x3BE49BC
	0x03BE4964 LDR X10, [X25]
	0x03BE4968 CMP X9, X10
	0x03BE496C B.EQ 0x3BE49BC
	0x03BE4970 LDR X11, [X26]
	0x03BE4974 LDRB W10, [X9 + 0x130]
	0x03BE4978 LDRB W12, [X11 + 0x130]
	0x03BE497C CMP W10, W12
	0x03BE4980 B.CC 0x3BE4998
	0x03BE4984 LDR X13, [X9 + 0xC8]
	0x03BE4988 ADD X12, X13, X12, 0x3, LSL
	0x03BE498C LDUR X12, [X12 - 0x8]
	0x03BE4990 CMP X12, X11
	0x03BE4994 B.EQ 0x3BE49BC
	0x03BE4998 LDR X11, [X27]
	0x03BE499C LDRB W12, [X11 + 0x130]
	0x03BE49A0 CMP W10, W12
	0x03BE49A4 B.CC 0x3BE49D0
	0x03BE49A8 LDR X9, [X9 + 0xC8]
	0x03BE49AC ADD X9, X9, X12, 0x3, LSL
	0x03BE49B0 LDUR X9, [X9 - 0x8]
	0x03BE49B4 CMP X9, X11
	0x03BE49B8 B.NE 0x3BE49D0
	0x03BE49BC CMP X22, X21
	0x03BE49C0 B.CS 0x3BE49F4
	0x03BE49C4 LDR X0, [X19, X22, LSL #3]
	0x03BE49C8 BL 0x3BEBA40
	0x03BE49CC LDR W8, [X20 + 0x18]
	0x03BE49D0 ADD X22, X22, 0x1
	0x03BE49D4 CMP X22, W8, SXTW
	0x03BE49D8 B.LT 0x3BE4944
	0x03BE49DC LDP X20, X19, [X31 + 0x40]
	0x03BE49E0 LDP X22, X21, [X31 + 0x30]
	0x03BE49E4 LDP X24, X23, [X31 + 0x20]
	0x03BE49E8 LDP X26, X25, [X31 + 0x10]
	0x03BE49EC LDP X30, X27, [X31], #0x50
	0x03BE49F0 RET
	0x03BE49F4 BL 0x1C16F28
	0x03BE49F8 B 0x3BE48A0
	0x03BE49FC STP X30, X19, [X31 - 0x10]!
	0x03BE4A00 MOV X19, X0
	0x03BE4A04 MOV X0, X1
	0x03BE4A08 BL 0x3BE5988
	0x03BE4A0C MOV X1, X0
	0x03BE4A10 MOV X0, X19
	0x03BE4A14 LDP X30, X19, [X31], #0x10
	0x03BE4A18 B 0x3BE2BF0
	0x03BE4A1C STP X30, X19, [X31 - 0x10]!
	0x03BE4A20 MOV X19, X0
	0x03BE4A24 MOV X0, X1
	0x03BE4A28 BL 0x3BE5988
	0x03BE4A2C MOV X1, X0
	0x03BE4A30 MOV X0, X19
	0x03BE4A34 LDP X30, X19, [X31], #0x10
	0x03BE4A38 B 0x3BE2BF0
	0x03BE4A3C STP X30, X21, [X31 - 0x20]!
	0x03BE4A40 STP X20, X19, [X31 + 0x10]
	0x03BE4A44 MOV X21, X0
	0x03BE4A48 MOV X0, X2
	0x03BE4A4C MOV W19, W3
	0x03BE4A50 MOV X20, X1
	0x03BE4A54 BL 0x3BE5988
	0x03BE4A58 AND W3, W19, 0x1
	0x03BE4A5C MOV X1, X20
	0x03BE4A60 LDP X20, X19, [X31 + 0x10]
	0x03BE4A64 MOV X2, X0
	0x03BE4A68 MOV X0, X21
	0x03BE4A6C LDP X30, X21, [X31], #0x20
	0x03BE4A70 B 0x3BE2E24
	0x03BE4A74 STP X30, X21, [X31 - 0x20]!
	0x03BE4A78 STP X20, X19, [X31 + 0x10]
	0x03BE4A7C MOV X21, X0
	0x03BE4A80 MOV X0, X2
	0x03BE4A84 MOV W19, W3
	0x03BE4A88 MOV X20, X1
	0x03BE4A8C BL 0x3BE5988
	0x03BE4A90 AND W3, W19, 0x1
	0x03BE4A94 MOV X1, X20
	0x03BE4A98 LDP X20, X19, [X31 + 0x10]
	0x03BE4A9C MOV X2, X0
	0x03BE4AA0 MOV X0, X21
	0x03BE4AA4 LDP X30, X21, [X31], #0x20
	0x03BE4AA8 B 0x3BE2E24
	0x03BE4AAC B 0x3BE4AB0
	0x03BE4AB0 STR X30, [X31 - 0x50]!
	0x03BE4AB4 STP X26, X25, [X31 + 0x10]
	0x03BE4AB8 STP X24, X23, [X31 + 0x20]
	0x03BE4ABC STP X22, X21, [X31 + 0x30]
	0x03BE4AC0 STP X20, X19, [X31 + 0x40]
	0x03BE4AC4 ADRP X19, 0x7FF000
	0x03BE4AC8 LDRB W8, [X19 + 0x79C]
	0x03BE4ACC MOV X20, X0
	0x03BE4AD0 TBNZ X8, 0x0, 0x3BE4CF8
	0x03BE4AD4 ADRP X0, 0x538000
	0x03BE4AD8 LDR X0, [X0 + 0x690]
	0x03BE4ADC BL 0x1C16CF4
	0x03BE4AE0 ADRP X0, 0x50F000
	0x03BE4AE4 LDR X0, [X0 + 0x9A0]
	0x03BE4AE8 BL 0x1C16CF4
	0x03BE4AEC ADRP X0, 0x50F000
	0x03BE4AF0 LDR X0, [X0 + 0x9A8]
	0x03BE4AF4 BL 0x1C16CF4
	0x03BE4AF8 ADRP X0, 0x538000
	0x03BE4AFC LDR X0, [X0 + 0x698]
	0x03BE4B00 BL 0x1C16CF4
	0x03BE4B04 ADRP X0, 0x538000
	0x03BE4B08 LDR X0, [X0 + 0xA10]
	0x03BE4B0C BL 0x1C16CF4
	0x03BE4B10 ADRP X0, 0x538000
	0x03BE4B14 LDR X0, [X0 + 0xAB0]
	0x03BE4B18 BL 0x1C16CF4
	0x03BE4B1C ADRP X0, 0x538000
	0x03BE4B20 LDR X0, [X0 + 0xAB8]
	0x03BE4B24 BL 0x1C16CF4
	0x03BE4B28 ADRP X0, 0x57A000
	0x03BE4B2C LDR X0, [X0 + 0x2D0]
	0x03BE4B30 BL 0x1C16CF4
	0x03BE4B34 ADRP X0, 0x538000
	0x03BE4B38 LDR X0, [X0 + 0x6A0]
	0x03BE4B3C BL 0x1C16CF4
	0x03BE4B40 ADRP X0, 0x50F000
	0x03BE4B44 LDR X0, [X0 + 0x9C8]
	0x03BE4B48 BL 0x1C16CF4
	0x03BE4B4C ADRP X0, 0x538000
	0x03BE4B50 LDR X0, [X0 + 0x248]
	0x03BE4B54 BL 0x1C16CF4
	0x03BE4B58 ADRP X0, 0x536000
	0x03BE4B5C LDR X0, [X0 + 0xD68]
	0x03BE4B60 BL 0x1C16CF4
	0x03BE4B64 ADRP X0, 0x536000
	0x03BE4B68 LDR X0, [X0 + 0xD70]
	0x03BE4B6C BL 0x1C16CF4
	0x03BE4B70 ADRP X0, 0x50F000
	0x03BE4B74 LDR X0, [X0 + 0xA28]
	0x03BE4B78 BL 0x1C16CF4
	0x03BE4B7C ADRP X0, 0x537000
	0x03BE4B80 LDR X0, [X0 + 0xA78]
	0x03BE4B84 BL 0x1C16CF4
	0x03BE4B88 ADRP X0, 0x50F000
	0x03BE4B8C LDR X0, [X0 + 0xE00]
	0x03BE4B90 BL 0x1C16CF4
	0x03BE4B94 ADRP X0, 0x536000
	0x03BE4B98 LDR X0, [X0 + 0xD78]
	0x03BE4B9C BL 0x1C16CF4
	0x03BE4BA0 ADRP X0, 0x536000
	0x03BE4BA4 LDR X0, [X0 + 0xD80]
	0x03BE4BA8 BL 0x1C16CF4
	0x03BE4BAC ADRP X0, 0x536000
	0x03BE4BB0 LDR X0, [X0 + 0xD88]
	0x03BE4BB4 BL 0x1C16CF4
	0x03BE4BB8 ADRP X0, 0x538000
	0x03BE4BBC LDR X0, [X0 + 0x6A8]
	0x03BE4BC0 BL 0x1C16CF4
	0x03BE4BC4 ADRP X0, 0x536000
	0x03BE4BC8 LDR X0, [X0 + 0xD90]
	0x03BE4BCC BL 0x1C16CF4
	0x03BE4BD0 ADRP X0, 0x537000
	0x03BE4BD4 LDR X0, [X0 + 0xA80]
	0x03BE4BD8 BL 0x1C16CF4
	0x03BE4BDC ADRP X0, 0x50F000
	0x03BE4BE0 LDR X0, [X0 + 0x8F0]
	0x03BE4BE4 BL 0x1C16CF4
	0x03BE4BE8 ADRP X0, 0x50F000
	0x03BE4BEC LDR X0, [X0 + 0xAC8]
	0x03BE4BF0 BL 0x1C16CF4
	0x03BE4BF4 ADRP X0, 0x537000
	0x03BE4BF8 LDR X0, [X0 + 0xB60]
	0x03BE4BFC BL 0x1C16CF4
	0x03BE4C00 ADRP X0, 0x50F000
	0x03BE4C04 LDR X0, [X0 + 0x6C0]
	0x03BE4C08 BL 0x1C16CF4
	0x03BE4C0C ADRP X0, 0x540000
	0x03BE4C10 LDR X0, [X0 + 0x1D0]
	0x03BE4C14 BL 0x1C16CF4
	0x03BE4C18 ADRP X0, 0x53B000
	0x03BE4C1C LDR X0, [X0 + 0x350]
	0x03BE4C20 BL 0x1C16CF4
	0x03BE4C24 ADRP X0, 0x57A000
	0x03BE4C28 LDR X0, [X0 + 0x2D8]
	0x03BE4C2C BL 0x1C16CF4
	0x03BE4C30 ADRP X0, 0x544000
	0x03BE4C34 LDR X0, [X0 + 0x440]
	0x03BE4C38 BL 0x1C16CF4
	0x03BE4C3C ADRP X0, 0x57A000
	0x03BE4C40 LDR X0, [X0 + 0x2E0]
	0x03BE4C44 BL 0x1C16CF4
	0x03BE4C48 ADRP X0, 0x57A000
	0x03BE4C4C LDR X0, [X0 + 0x2E8]
	0x03BE4C50 BL 0x1C16CF4
	0x03BE4C54 ADRP X0, 0x57A000
	0x03BE4C58 LDR X0, [X0 + 0x2F0]
	0x03BE4C5C BL 0x1C16CF4
	0x03BE4C60 ADRP X0, 0x53B000
	0x03BE4C64 LDR X0, [X0 + 0x358]
	0x03BE4C68 BL 0x1C16CF4
	0x03BE4C6C ADRP X0, 0x555000
	0x03BE4C70 LDR X0, [X0 + 0xC20]
	0x03BE4C74 BL 0x1C16CF4
	0x03BE4C78 ADRP X0, 0x57A000
	0x03BE4C7C LDR X0, [X0 + 0x2F8]
	0x03BE4C80 BL 0x1C16CF4
	0x03BE4C84 ADRP X0, 0x518000
	0x03BE4C88 LDR X0, [X0 + 0x848]
	0x03BE4C8C BL 0x1C16CF4
	0x03BE4C90 ADRP X0, 0x57A000
	0x03BE4C94 LDR X0, [X0 + 0x300]
	0x03BE4C98 BL 0x1C16CF4
	0x03BE4C9C ADRP X0, 0x57A000
	0x03BE4CA0 LDR X0, [X0 + 0x308]
	0x03BE4CA4 BL 0x1C16CF4
	0x03BE4CA8 ADRP X0, 0x537000
	0x03BE4CAC LDR X0, [X0 + 0xBE0]
	0x03BE4CB0 BL 0x1C16CF4
	0x03BE4CB4 ADRP X0, 0x563000
	0x03BE4CB8 LDR X0, [X0 + 0x568]
	0x03BE4CBC BL 0x1C16CF4
	0x03BE4CC0 ADRP X0, 0x555000
	0x03BE4CC4 LDR X0, [X0 + 0xDC0]
	0x03BE4CC8 BL 0x1C16CF4
	0x03BE4CCC ADRP X0, 0x57A000
	0x03BE4CD0 LDR X0, [X0 + 0x310]
	0x03BE4CD4 BL 0x1C16CF4
	0x03BE4CD8 ADRP X0, 0x50F000
	0x03BE4CDC LDR X0, [X0 + 0x988]
	0x03BE4CE0 BL 0x1C16CF4
	0x03BE4CE4 ADRP X0, 0x547000
	0x03BE4CE8 LDR X0, [X0 + 0xF48]
	0x03BE4CEC BL 0x1C16CF4
	0x03BE4CF0 MOVZ W8, 0x1
	0x03BE4CF4 STRB W8, [X19 + 0x79C]
	0x03BE4CF8 CBZ X20, 0x3BE5374
	0x03BE4CFC ADRP X25, 0x50F000
	0x03BE4D00 LDR X25, [X25 + 0x6C0]
	0x03BE4D04 LDR X9, [X20]
	0x03BE4D08 ADRP X26, 0x538000
	0x03BE4D0C LDR X8, [X25]
	0x03BE4D10 LDRB W11, [X9 + 0x130]
	0x03BE4D14 LDRB W10, [X8 + 0x130]
	0x03BE4D18 LDR X26, [X26 + 0x6A0]
	0x03BE4D1C CMP W11, W10
	0x03BE4D20 B.CC 0x3BE4D38
	0x03BE4D24 LDR X9, [X9 + 0xC8]
	0x03BE4D28 ADD X9, X9, X10, 0x3, LSL
	0x03BE4D2C LDUR X9, [X9 - 0x8]
	0x03BE4D30 CMP X9, X8
	0x03BE4D34 B.EQ 0x3BE4F4C
	0x03BE4D38 MOV X0, X20
	0x03BE4D3C MOV X1, X31
	0x03BE4D40 BL 0x33BE520
	0x03BE4D44 MOV X19, X0
	0x03BE4D48 LDR X0, [X26]
	0x03BE4D4C LDR W8, [X0 + 0xE0]
	0x03BE4D50 CBNZ W8, 0x3BE4D58
	0x03BE4D54 BL 0x1C16DFC
	0x03BE4D58 CBZ X19, 0x3BE56AC
	0x03BE4D5C MOV X0, X19
	0x03BE4D60 MOV X1, X31
	0x03BE4D64 BL 0x3397374
	0x03BE4D68 TBZ X0, 0x0, 0x3BE4DBC
	0x03BE4D6C ADRP X8, 0x536000
	0x03BE4D70 LDR X0, [X25]
	0x03BE4D74 LDR X8, [X8 + 0xD80]
	0x03BE4D78 LDR W9, [X0 + 0xE0]
	0x03BE4D7C LDR X20, [X8]
	0x03BE4D80 CBNZ W9, 0x3BE4D88
	0x03BE4D84 BL 0x1C16DFC
	0x03BE4D88 MOV X0, X20
	0x03BE4D8C MOV X1, X31
	0x03BE4D90 BL 0x338C698
	0x03BE4D94 LDR X8, [X19]
	0x03BE4D98 MOV X1, X0
	0x03BE4D9C MOV X0, X19
	0x03BE4DA0 LDR X9, [X8 + 0x8F8]
	0x03BE4DA4 LDR X2, [X8 + 0x900]
	0x03BE4DA8 BLR X9
	0x03BE4DAC TBZ X0, 0x0, 0x3BE4E0C
	0x03BE4DB0 ADRP X8, 0x53B000
	0x03BE4DB4 LDR X8, [X8 + 0x358]
	0x03BE4DB8 B 0x3BE537C
	0x03BE4DBC ADRP X8, 0x537000
	0x03BE4DC0 LDR X0, [X25]
	0x03BE4DC4 LDR X8, [X8 + 0xB60]
	0x03BE4DC8 LDR W9, [X0 + 0xE0]
	0x03BE4DCC LDR X21, [X8]
	0x03BE4DD0 CBNZ W9, 0x3BE4DD8
	0x03BE4DD4 BL 0x1C16DFC
	0x03BE4DD8 MOV X0, X21
	0x03BE4DDC MOV X1, X31
	0x03BE4DE0 BL 0x338C698
	0x03BE4DE4 LDR X8, [X19]
	0x03BE4DE8 MOV X1, X0
	0x03BE4DEC MOV X0, X19
	0x03BE4DF0 LDR X9, [X8 + 0x8F8]
	0x03BE4DF4 LDR X2, [X8 + 0x900]
	0x03BE4DF8 BLR X9
	0x03BE4DFC TBZ X0, 0x0, 0x3BE4E5C
	0x03BE4E00 ADRP X8, 0x57A000
	0x03BE4E04 LDR X8, [X8 + 0x2F8]
	0x03BE4E08 B 0x3BE537C
	0x03BE4E0C ADRP X8, 0x538000
	0x03BE4E10 LDR X0, [X25]
	0x03BE4E14 LDR X8, [X8 + 0x248]
	0x03BE4E18 LDR W9, [X0 + 0xE0]
	0x03BE4E1C LDR X20, [X8]
	0x03BE4E20 CBNZ W9, 0x3BE4E28
	0x03BE4E24 BL 0x1C16DFC
	0x03BE4E28 MOV X0, X20
	0x03BE4E2C MOV X1, X31
	0x03BE4E30 BL 0x338C698
	0x03BE4E34 LDR X8, [X19]
	0x03BE4E38 MOV X1, X0
	0x03BE4E3C MOV X0, X19
	0x03BE4E40 LDR X9, [X8 + 0x8F8]
	0x03BE4E44 LDR X2, [X8 + 0x900]
	0x03BE4E48 BLR X9
	0x03BE4E4C TBZ X0, 0x0, 0x3BE4F54
	0x03BE4E50 ADRP X8, 0x544000
	0x03BE4E54 LDR X8, [X8 + 0x440]
	0x03BE4E58 B 0x3BE537C
	0x03BE4E5C ADRP X8, 0x538000
	0x03BE4E60 LDR X8, [X8 + 0xAB8]
	0x03BE4E64 LDR X9, [X20]
	0x03BE4E68 LDR X8, [X8]
	0x03BE4E6C LDRB W11, [X9 + 0x130]
	0x03BE4E70 LDRB W10, [X8 + 0x130]
	0x03BE4E74 CMP W11, W10
	0x03BE4E78 B.CC 0x3BE4E90
	0x03BE4E7C LDR X9, [X9 + 0xC8]
	0x03BE4E80 ADD X9, X9, X10, 0x3, LSL
	0x03BE4E84 LDUR X9, [X9 - 0x8]
	0x03BE4E88 CMP X9, X8
	0x03BE4E8C B.EQ 0x3BE5068
	0x03BE4E90 MOV X21, X31
	0x03BE4E94 CMP X19, X20
	0x03BE4E98 B.NE 0x3BE4EFC
	0x03BE4E9C ADRP X8, 0x538000
	0x03BE4EA0 LDR X0, [X25]
	0x03BE4EA4 LDR X8, [X8 + 0xAB0]
	0x03BE4EA8 LDR W9, [X0 + 0xE0]
	0x03BE4EAC LDR X22, [X8]
	0x03BE4EB0 CBNZ W9, 0x3BE4EB8
	0x03BE4EB4 BL 0x1C16DFC
	0x03BE4EB8 MOV X0, X22
	0x03BE4EBC MOV X1, X31
	0x03BE4EC0 BL 0x338C698
	0x03BE4EC4 LDR X8, [X26]
	0x03BE4EC8 MOV X22, X0
	0x03BE4ECC LDR W9, [X8 + 0xE0]
	0x03BE4ED0 CBNZ W9, 0x3BE4EDC
	0x03BE4ED4 MOV X0, X8
	0x03BE4ED8 BL 0x1C16DFC
	0x03BE4EDC CBZ X22, 0x3BE56AC
	0x03BE4EE0 LDR X8, [X22]
	0x03BE4EE4 MOV X0, X22
	0x03BE4EE8 MOV X1, X19
	0x03BE4EEC LDR X9, [X8 + 0x2A8]
	0x03BE4EF0 LDR X2, [X8 + 0x2B0]
	0x03BE4EF4 BLR X9
	0x03BE4EF8 TBNZ X0, 0x0, 0x3BE567C
	0x03BE4EFC ADRP X8, 0x57A000
	0x03BE4F00 LDR X0, [X25]
	0x03BE4F04 LDR X8, [X8 + 0x2D0]
	0x03BE4F08 LDR W9, [X0 + 0xE0]
	0x03BE4F0C LDR X22, [X8]
	0x03BE4F10 CBNZ W9, 0x3BE4F18
	0x03BE4F14 BL 0x1C16DFC
	0x03BE4F18 MOV X0, X22
	0x03BE4F1C MOV X1, X31
	0x03BE4F20 BL 0x338C698
	0x03BE4F24 LDR X8, [X19]
	0x03BE4F28 MOV X1, X0
	0x03BE4F2C MOV X0, X19
	0x03BE4F30 LDR X9, [X8 + 0x8F8]
	0x03BE4F34 LDR X2, [X8 + 0x900]
	0x03BE4F38 BLR X9
	0x03BE4F3C TBZ X0, 0x0, 0x3BE4FC8
	0x03BE4F40 ADRP X8, 0x57A000
	0x03BE4F44 LDR X8, [X8 + 0x308]
	0x03BE4F48 B 0x3BE537C
	0x03BE4F4C MOV X19, X20
	0x03BE4F50 B 0x3BE4D48
	0x03BE4F54 ADRP X8, 0x536000
	0x03BE4F58 LDR X0, [X25]
	0x03BE4F5C LDR X8, [X8 + 0xD68]
	0x03BE4F60 LDR W9, [X0 + 0xE0]
	0x03BE4F64 LDR X20, [X8]
	0x03BE4F68 CBNZ W9, 0x3BE4F70
	0x03BE4F6C BL 0x1C16DFC
	0x03BE4F70 MOV X0, X20
	0x03BE4F74 MOV X1, X31
	0x03BE4F78 BL 0x338C698
	0x03BE4F7C LDR X8, [X19]
	0x03BE4F80 MOV X1, X0
	0x03BE4F84 MOV X0, X19
	0x03BE4F88 LDR X9, [X8 + 0x8F8]
	0x03BE4F8C LDR X2, [X8 + 0x900]
	0x03BE4F90 BLR X9
	0x03BE4F94 TBZ X0, 0x0, 0x3BE5018
	0x03BE4F98 ADRP X8, 0x50F000
	0x03BE4F9C LDR X8, [X8 + 0xA28]
	0x03BE4FA0 LDR X0, [X8]
	0x03BE4FA4 LDR W8, [X0 + 0xE0]
	0x03BE4FA8 CBNZ W8, 0x3BE4FB0
	0x03BE4FAC BL 0x1C16DFC
	0x03BE4FB0 ADRP X8, 0x57A000
	0x03BE4FB4 LDR X8, [X8 + 0x310]
	0x03BE4FB8 MOV X1, X31
	0x03BE4FBC LDR X0, [X8]
	0x03BE4FC0 BL 0x3C06A04
	0x03BE4FC4 B 0x3BE505C
	0x03BE4FC8 ADRP X8, 0x538000
	0x03BE4FCC LDR X0, [X25]
	0x03BE4FD0 LDR X8, [X8 + 0x690]
	0x03BE4FD4 LDR W9, [X0 + 0xE0]
	0x03BE4FD8 LDR X22, [X8]
	0x03BE4FDC CBNZ W9, 0x3BE4FE4
	0x03BE4FE0 BL 0x1C16DFC
	0x03BE4FE4 MOV X0, X22
	0x03BE4FE8 MOV X1, X31
	0x03BE4FEC BL 0x338C698
	0x03BE4FF0 LDR X8, [X19]
	0x03BE4FF4 MOV X1, X0
	0x03BE4FF8 MOV X0, X19
	0x03BE4FFC LDR X9, [X8 + 0x8F8]
	0x03BE5000 LDR X2, [X8 + 0x900]
	0x03BE5004 BLR X9
	0x03BE5008 TBZ X0, 0x0, 0x3BE518C
	0x03BE500C ADRP X8, 0x579000
	0x03BE5010 LDR X8, [X8 + 0x2F0]
	0x03BE5014 B 0x3BE537C
	0x03BE5018 ADRP X8, 0x535000
	0x03BE501C LDR X0, [X25]
	0x03BE5020 LDR X8, [X8 + 0xD90]
	0x03BE5024 LDR W9, [X0 + 0xE0]
	0x03BE5028 LDR X20, [X8]
	0x03BE502C CBNZ W9, 0x3BE5034
	0x03BE5030 BL 0x1C16DFC
	0x03BE5034 MOV X0, X20
	0x03BE5038 MOV X1, X31
	0x03BE503C BL 0x338C698
	0x03BE5040 LDR X8, [X19]
	0x03BE5044 MOV X1, X0
	0x03BE5048 MOV X0, X19
	0x03BE504C LDR X9, [X8 + 0x8F8]
	0x03BE5050 LDR X2, [X8 + 0x900]
	0x03BE5054 BLR X9
	0x03BE5058 TBZ X0, 0x0, 0x3BE539C
	0x03BE505C ADRP X8, 0x562000
	0x03BE5060 LDR X8, [X8 + 0x568]
	0x03BE5064 B 0x3BE537C
	0x03BE5068 LDR X8, [X20 + 0x10]
	0x03BE506C CBZ X8, 0x3BE56AC
	0x03BE5070 LDR X8, [X8 + 0x18]
	0x03BE5074 CBZ X8, 0x3BE56AC
	0x03BE5078 LDR X21, [X8 + 0x18]
	0x03BE507C ADRP X8, 0x537000
	0x03BE5080 LDR X8, [X8 + 0xA10]
	0x03BE5084 LDR X0, [X8]
	0x03BE5088 BL 0x1C16F10
	0x03BE508C MOV X1, X21
	0x03BE5090 MOV X22, X0
	0x03BE5094 BL 0x3BF1930
	0x03BE5098 ADRP X8, 0x50E000
	0x03BE509C LDR X8, [X8 + 0x9C8]
	0x03BE50A0 LDR X21, [X8]
	0x03BE50A4 LDR X8, [X21 + 0x38]
	0x03BE50A8 CBNZ X8, 0x3BE50B8
	0x03BE50AC MOV X0, X21
	0x03BE50B0 BL 0x1C5C6E0
	0x03BE50B4 LDR X8, [X21 + 0x38]
	0x03BE50B8 LDR X0, [X8 + 0x10]
	0x03BE50BC LDRB W8, [X0 + 0x135]
	0x03BE50C0 TBNZ X8, 0x0, 0x3BE50C8
	0x03BE50C4 BL 0x1C5C684
	0x03BE50C8 LDR W8, [X0 + 0xE0]
	0x03BE50CC CBNZ W8, 0x3BE50D4
	0x03BE50D0 BL 0x1C16DFC
	0x03BE50D4 LDR X8, [X21 + 0x38]
	0x03BE50D8 LDR X0, [X8 + 0x10]
	0x03BE50DC LDRB W8, [X0 + 0x135]
	0x03BE50E0 TBNZ X8, 0x0, 0x3BE50E8
	0x03BE50E4 BL 0x1C5C684
	0x03BE50E8 CBZ X22, 0x3BE5690
	0x03BE50EC ADRP X9, 0x579000
	0x03BE50F0 LDR X8, [X0 + 0xB8]
	0x03BE50F4 LDR X9, [X9 + 0x2E8]
	0x03BE50F8 ADRP X10, 0x50E000
	0x03BE50FC LDR X10, [X10 + 0x9A8]
	0x03BE5100 LDR X2, [X8]
	0x03BE5104 LDR X1, [X9]
	0x03BE5108 LDR X3, [X10]
	0x03BE510C MOV X0, X22
	0x03BE5110 BL 0x227A8F4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x800000
	014 Move W8, [X20+1944]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {115}
	020 Move X0, 0x539000
	021 Move X0, [X0+2568]
	022 Call 0x1C17CF4
	023 Move X0, 0x539000
	024 Move X0, [X0+1688]
	025 Call 0x1C17CF4
	026 Move X0, 0x57B000
	027 Move X0, [X0+608]
	028 Call 0x1C17CF4
	029 Move X0, 0x539000
	030 Move X0, [X0+2736]
	031 Call 0x1C17CF4
	032 Move X0, 0x539000
	033 Move X0, [X0+1696]
	034 Call 0x1C17CF4
	035 Move X0, 0x512000
	036 Move X0, [X0+2488]
	037 Call 0x1C17CF4
	038 Move X0, 0x539000
	039 Move X0, [X0+584]
	040 Call 0x1C17CF4
	041 Move X0, 0x510000
	042 Move X0, [X0+1560]
	043 Call 0x1C17CF4
	044 Move X0, 0x537000
	045 Move X0, [X0+3432]
	046 Call 0x1C17CF4
	047 Move X0, 0x519000
	048 Move X0, [X0+2264]
	049 Call 0x1C17CF4
	050 Move X0, 0x537000
	051 Move X0, [X0+3440]
	052 Call 0x1C17CF4
	053 Move X0, 0x510000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0x541000
	057 Move X0, [X0+2096]
	058 Call 0x1C17CF4
	059 Move X0, 0x538000
	060 Move X0, [X0+2680]
	061 Call 0x1C17CF4
	062 Move X0, 0x538000
	063 Move X0, [X0+2080]
	064 Call 0x1C17CF4
	065 Move X0, 0x537000
	066 Move X0, [X0+3448]
	067 Call 0x1C17CF4
	068 Move X0, 0x511000
	069 Move X0, [X0+3672]
	070 Call 0x1C17CF4
	071 Move X0, 0x537000
	072 Move X0, [X0+3456]
	073 Call 0x1C17CF4
	074 Move X0, 0x541000
	075 Move X0, [X0+2104]
	076 Call 0x1C17CF4
	077 Move X0, 0x537000
	078 Move X0, [X0+3464]
	079 Call 0x1C17CF4
	080 Move X0, 0x549000
	081 Move X0, [X0+1096]
	082 Call 0x1C17CF4
	083 Move X0, 0x53F000
	084 Move X0, [X0+1800]
	085 Call 0x1C17CF4
	086 Move X0, 0x537000
	087 Move X0, [X0+3472]
	088 Call 0x1C17CF4
	089 Move X0, 0x510000
	090 Move X0, [X0+1592]
	091 Call 0x1C17CF4
	092 Move X0, 0x538000
	093 Move X0, [X0+2688]
	094 Call 0x1C17CF4
	095 Move X0, 0x510000
	096 Move X0, [X0+2760]
	097 Call 0x1C17CF4
	098 Move X0, 0x538000
	099 Move X0, [X0+2912]
	100 Call 0x1C17CF4
	101 Move X0, 0x510000
	102 Move X0, [X0+1728]
	103 Call 0x1C17CF4
	104 Move X0, 0x57B000
	105 Move X0, [X0+616]
	106 Call 0x1C17CF4
	107 Move X0, 0x57B000
	108 Move X0, [X0+624]
	109 Call 0x1C17CF4
	110 Move X0, 0x57B000
	111 Move X0, [X0+632]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X20+1944], W8
	115 Compare X19, 0
	116 JumpIfEqual {880}
	117 Move X0, X19
	118 Move X1, X31
	119 Call "il2cpp_vm_object_is_inst", X0
	120 Compare X0, 0
	121 JumpIfEqual {880}
	122 Move X8, [X0]
	123 Move X22, 0x539000
	124 Move X9, [X8+1064]
	125 Move X1, [X8+1072]
	126 Move X22, [X22+1696]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X8, [X22]
	129 Move X20, X0
	130 Move W9, [X8+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {135}
	133 Move X0, X8
	134 Call 0x1C17DFC
	135 Compare X20, 0
	136 JumpIfEqual {880}
	137 Move X0, X20
	138 Move X1, X31
	139 Call Type.get_IsPrimitive, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {187}
	144 Move X22, 0x510000
	145 Move X22, [X22+1728]
	146 Move X8, 0x537000
	147 Move X0, [X22]
	148 Move X8, [X8+3456]
	149 Move W9, [X0+224]
	150 Move X21, [X8]
	151 Compare W9, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X0, X21
	155 Move X1, X31
	156 Call Type.GetTypeFromHandle, X0
	157 Move X1, X0
	158 Move X0, X20
	159 Move X2, X31
	160 Call Type.op_Equality, X0, X1
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {272}
	165 Move X8, 0x511000
	166 Move X8, [X8+3672]
	167 Move X0, X19
	168 Move X20, [X8]
	169 Move X1, X20
	170 Call 0x1C17E00
	171 Compare X0, 0
	172 JumpIfEqual {884}
	173 Move X20, [X31+80]
	174 Move X19, [X31+88]
	175 Move X22, [X31+64]
	176 Move X21, [X31+72]
	177 Move X24, [X31+48]
	178 Move X23, [X31+56]
	179 Move X26, [X31+32]
	180 Move X25, [X31+40]
	181 Move X28, [X31+16]
	182 Move X27, [X31+24]
	183 Move X29, [X31+96]
	184 Move X30, [X31+104]
	185 Call AndroidJNISafe.ToIntArray, X0
	186 Return X0
	187 Move X23, 0x510000
	188 Move X23, [X23+1728]
	189 Move X8, 0x538000
	190 Move X0, [X23]
	191 Move X8, [X8+2912]
	192 Move W9, [X0+224]
	193 Move X21, [X8]
	194 Compare W9, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X0, X21
	198 Move X1, X31
	199 Call Type.GetTypeFromHandle, X0
	200 Move X1, X0
	201 Move X0, X20
	202 Move X2, X31
	203 Call Type.op_Equality, X0, X1
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {313}
	208 Move X8, 0x510000
	209 Move X8, [X8+2760]
	210 Move X0, X19
	211 Move X21, [X8]
	212 Move X1, X21
	213 Call 0x1C17E00
	214 Compare X0, 0
	215 JumpIfEqual {881}
	216 Move X20, X0
	217 Move X0, X19
	218 Move W1, W31
	219 Move X2, X31
	220 Call Array.GetLength, X0, X1
	221 Move X8, 0x57B000
	222 Move X8, [X8+616]
	223 Move W23, W0
	224 Move X8, [X8]
	225 Move X0, X8
	226 Call AndroidJNISafe.FindClass, X0
	227 Move X21, 0x800000
	228 Move X8, [X21+1672]
	229 Move X19, X0
	230 Compare X8, 0
	231 JumpIfNotEqual {237}
	232 Move X0, -51269632
	233 Add X0, X0, 2031
	234 Call 0x1C17CB8
	235 Move X8, X0
	236 Move [X21+1672], X0
	237 Move W0, W23
	238 Move X1, X19
	239 Move X2, X31
	240 NotImplemented "Instruction BLR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X21, X0
	243 Move W25, W23
	244 Move X23, -51277824
	245 Move X22, X31
	246 Add X26, X20, 32
	247 Move X27, 0x800000
	248 Add X23, X23, 3409
	249 Move W8, [X20+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, [X26]
	252 Call AndroidJNISafe.NewString, X0
	253 Move X8, [X27+1816]
	254 Move X24, X0
	255 Compare X8, 0
	256 JumpIfNotEqual {261}
	257 Move X0, X23
	258 Call 0x1C17CB8
	259 Move X8, X0
	260 Move [X27+1816], X0
	261 Move X0, X21
	262 Move W1, W22
	263 Move X2, X24
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move X0, X24
	266 Call AndroidJNISafe.DeleteLocalRef, X0
	267 Add X22, X22, 1
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X0, X19
	270 Call AndroidJNISafe.DeleteLocalRef, X0
	271 Move X0, X21
	272 Move X8, 0x539000
	273 Move X0, [X22]
	274 Move X8, [X8+584]
	275 Move W9, [X0+224]
	276 Move X21, [X8]
	277 Compare W9, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Move X0, X21
	281 Move X1, X31
	282 Call Type.GetTypeFromHandle, X0
	283 Move X1, X0
	284 Move X0, X20
	285 Move X2, X31
	286 Call Type.op_Equality, X0, X1
	287 Move TEMP, X0
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfNotEqual {428}
	291 Move X8, 0x512000
	292 Move X8, [X8+2488]
	293 Move X0, X19
	294 Move X20, [X8]
	295 Move X1, X20
	296 Call 0x1C17E00
	297 Compare X0, 0
	298 JumpIfEqual {884}
	299 Move X20, [X31+80]
	300 Move X19, [X31+88]
	301 Move X22, [X31+64]
	302 Move X21, [X31+72]
	303 Move X24, [X31+48]
	304 Move X23, [X31+56]
	305 Move X26, [X31+32]
	306 Move X25, [X31+40]
	307 Move X28, [X31+16]
	308 Move X27, [X31+24]
	309 Move X29, [X31+96]
	310 Move X30, [X31+104]
	311 Call AndroidJNISafe.ToBooleanArray, X0
	312 Return X0
	313 Move X8, 0x539000
	314 Move X0, [X23]
	315 Move X8, [X8+1688]
	316 Move W9, [X0+224]
	317 Move X21, [X8]
	318 Compare W9, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X21
	322 Move X1, X31
	323 Call Type.GetTypeFromHandle, X0
	324 Move X1, X0
	325 Move X0, X20
	326 Move X2, X31
	327 Call Type.op_Equality, X0, X1
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {481}
	332 Move X8, 0x539000
	333 Move X8, [X8+2568]
	334 Move X0, X19
	335 Move X21, [X8]
	336 Move X1, X21
	337 Call 0x1C17E00
	338 Compare X0, 0
	339 JumpIfEqual {881}
	340 Move X20, X0
	341 Move X0, X19
	342 Move W1, W31
	343 Move X2, X31
	344 Call Array.GetLength, X0, X1
	345 Move X8, 0x549000
	346 Move X8, [X8+1096]
	347 Move W22, W0
	348 Move W1, W22
	349 Move X8, [X8]
	350 Move X0, X8
	351 Call 0x1C17D6C
	352 Move X8, 0x57B000
	353 Move X8, [X8+632]
	354 Move X19, X0
	355 Move X8, [X8]
	356 Move X0, X8
	357 Call AndroidJNISafe.FindClass, X0
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X21, X0
	360 Move W26, W22
	361 Move X22, -51130368
	362 Move X25, X31
	363 Move X23, X31
	364 Add X27, X20, 32
	365 Add X28, X19, 32
	366 Move X29, 0x800000
	367 Add X22, X22, 1164
	368 Move W8, [X20+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X8, [X27]
	371 Compare X8, 0
	372 JumpIfEqual {419}
	373 Move X9, [X8+16]
	374 Compare X9, 0
	375 JumpIfEqual {377}
	376 Move X9, [X9+24]
	377 Compare X19, 0
	378 JumpIfEqual {880}
	379 Move W10, [X19+24]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move [X28], X9
	382 Move W9, [X20+24]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move X8, [X8+24]
	385 Compare X8, 0
	386 JumpIfEqual {880}
	387 Move X24, [X8+24]
	388 Move X0, X23
	389 Move X1, X31
	390 Move X2, X31
	391 Call IntPtr.op_Equality, X0, X1
	392 Move TEMP, X0
	393 And TEMP, TEMP, 1
	394 Compare TEMP, 1
	395 JumpIfEqual {425}
	396 Move X0, X23
	397 Move X1, X21
	398 Move X2, X31
	399 Call IntPtr.op_Inequality, X0, X1
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {424}
	404 Move X8, [X29+624]
	405 Compare X8, 0
	406 JumpIfNotEqual {411}
	407 Move X0, X22
	408 Call 0x1C17CB8
	409 Move X8, X0
	410 Move [X29+624], X0
	411 Move X0, X23
	412 Move X1, X24
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move X24, X21
	415 Move TEMP, X0
	416 And TEMP, TEMP, 1
	417 Compare TEMP, 1
	418 JumpIfEqual {424}
	419 Compare X19, 0
	420 JumpIfEqual {880}
	421 Move W8, [X19+24]
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move [X28], X31
	424 Move X24, X23
	425 Add X25, X25, 1
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X23, X24
	428 Move X8, 0x537000
	429 Move X0, [X22]
	430 Move X8, [X8+3432]
	431 Move W9, [X0+224]
	432 Move X21, [X8]
	433 Compare W9, 0
	434 JumpIfNotEqual {436}
	435 Call 0x1C17DFC
	436 Move X0, X21
	437 Move X1, X31
	438 Call Type.GetTypeFromHandle, X0
	439 Move X1, X0
	440 Move X0, X20
	441 Move X2, X31
	442 Call Type.op_Equality, X0, X1
	443 Move TEMP, X0
	444 And TEMP, TEMP, 1
	445 Compare TEMP, 1
	446 JumpIfNotEqual {631}
	447 Move X8, 0x510000
	448 Move X8, [X8+2600]
	449 Move X0, [X8]
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {454}
	453 Call 0x1C17DFC
	454 Move X8, 0x57B000
	455 Move X8, [X8+624]
	456 Move X1, X31
	457 Move X0, [X8]
	458 Call Debug.LogWarning, X0
	459 Move X8, 0x510000
	460 Move X8, [X8+1560]
	461 Move X0, X19
	462 Move X20, [X8]
	463 Move X1, X20
	464 Call 0x1C17E00
	465 Compare X0, 0
	466 JumpIfEqual {884}
	467 Move X20, [X31+80]
	468 Move X19, [X31+88]
	469 Move X22, [X31+64]
	470 Move X21, [X31+72]
	471 Move X24, [X31+48]
	472 Move X23, [X31+56]
	473 Move X26, [X31+32]
	474 Move X25, [X31+40]
	475 Move X28, [X31+16]
	476 Move X27, [X31+24]
	477 Move X29, [X31+96]
	478 Move X30, [X31+104]
	479 Call AndroidJNISafe.ToByteArray, X0
	480 Return X0
	481 Move X8, 0x539000
	482 Move X0, [X23]
	483 Move X8, [X8+2736]
	484 Move W9, [X0+224]
	485 Move X21, [X8]
	486 Compare W9, 0
	487 JumpIfNotEqual {489}
	488 Call 0x1C17DFC
	489 Move X0, X21
	490 Move X1, X31
	491 Call Type.GetTypeFromHandle, X0
	492 Move X8, [X22]
	493 Move X21, X0
	494 Move W9, [X8+224]
	495 Compare W9, 0
	496 JumpIfNotEqual {499}
	497 Move X0, X8
	498 Call 0x1C17DFC
	499 Compare X21, 0
	500 JumpIfEqual {880}
	501 Move X8, [X21]
	502 Move X0, X21
	503 Move X1, X20
	504 Move X9, [X8+680]
	505 Move X2, [X8+688]
	506 NotImplemented "Instruction BLR not yet implemented."
	507 Move TEMP, X0
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfNotEqual {887}
	511 Move X8, 0x57B000
	512 Move X8, [X8+608]
	513 Move X0, X19
	514 Move X21, [X8]
	515 Move X1, X21
	516 Call 0x1C17E00
	517 Compare X0, 0
	518 JumpIfEqual {881}
	519 Move X20, X0
	520 Move X0, X19
	521 Move W1, W31
	522 Move X2, X31
	523 Call Array.GetLength, X0, X1
	524 Move X8, 0x549000
	525 Move X8, [X8+1096]
	526 Move W22, W0
	527 Move W1, W22
	528 Move X8, [X8]
	529 Move X0, X8
	530 Call 0x1C17D6C
	531 Move X8, 0x57B000
	532 Move X8, [X8+632]
	533 Move X19, X0
	534 Move X8, [X8]
	535 Move X0, X8
	536 Call AndroidJNISafe.FindClass, X0
	537 NotImplemented "Instruction CMP not yet implemented."
	538 Move X21, X0
	539 Move W26, W22
	540 Move X22, -51130368
	541 Move X25, X31
	542 Move X23, X31
	543 Add X27, X20, 32
	544 Add X28, X19, 32
	545 Move X29, 0x800000
	546 Add X22, X22, 1164
	547 Move W8, [X20+24]
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Move X0, [X27]
	550 Compare X0, 0
	551 JumpIfEqual {601}
	552 Call AndroidJavaProxy.GetRawProxy, X0
	553 Compare X19, 0
	554 JumpIfEqual {880}
	555 Move W8, [X19+24]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Move [X28], X0
	558 Move W8, [X20+24]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 Move X8, [X27]
	561 Compare X8, 0
	562 JumpIfEqual {880}
	563 Move X8, [X8+16]
	564 Compare X8, 0
	565 JumpIfEqual {880}
	566 Move X8, [X8+24]
	567 Compare X8, 0
	568 JumpIfEqual {880}
	569 Move X24, [X8+24]
	570 Move X0, X23
	571 Move X1, X31
	572 Move X2, X31
	573 Call IntPtr.op_Equality, X0, X1
	574 Move TEMP, X0
	575 And TEMP, TEMP, 1
	576 Compare TEMP, 1
	577 JumpIfEqual {607}
	578 Move X0, X23
	579 Move X1, X21
	580 Move X2, X31
	581 Call IntPtr.op_Inequality, X0, X1
	582 Move TEMP, X0
	583 And TEMP, TEMP, 1
	584 Compare TEMP, 1
	585 JumpIfNotEqual {606}
	586 Move X8, [X29+624]
	587 Compare X8, 0
	588 JumpIfNotEqual {593}
	589 Move X0, X22
	590 Call 0x1C17CB8
	591 Move X8, X0
	592 Move [X29+624], X0
	593 Move X0, X23
	594 Move X1, X24
	595 NotImplemented "Instruction BLR not yet implemented."
	596 Move X24, X21
	597 Move TEMP, X0
	598 And TEMP, TEMP, 1
	599 Compare TEMP, 1
	600 JumpIfEqual {606}
	601 Compare X19, 0
	602 JumpIfEqual {880}
	603 Move W8, [X19+24]
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Move [X28], X31
	606 Move X24, X23
	607 Add X25, X25, 1
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Move X23, X24
	610 Move X24, X31
	611 Move X0, X19
	612 Move X1, X24
	613 Call AndroidJNISafe.ToObjectArray, X0, X1
	614 Move X19, X0
	615 Move X0, X21
	616 Call AndroidJNISafe.DeleteLocalRef, X0
	617 Move X0, X19
	618 Move X20, [X31+80]
	619 Move X19, [X31+88]
	620 Move X22, [X31+64]
	621 Move X21, [X31+72]
	622 Move X24, [X31+48]
	623 Move X23, [X31+56]
	624 Move X26, [X31+32]
	625 Move X25, [X31+40]
	626 Move X28, [X31+16]
	627 Move X27, [X31+24]
	628 Move X29, [X31+96]
	629 Move X30, [X31+104]
	630 Return X0
	631 Move X8, 0x537000
	632 Move X0, [X22]
	633 Move X8, [X8+3472]
	634 Move W9, [X0+224]
	635 Move X21, [X8]
	636 Compare W9, 0
	637 JumpIfNotEqual {639}
	638 Call 0x1C17DFC
	639 Move X0, X21
	640 Move X1, X31
	641 Call Type.GetTypeFromHandle, X0
	642 Move X1, X0
	643 Move X0, X20
	644 Move X2, X31
	645 Call Type.op_Equality, X0, X1
	646 Move TEMP, X0
	647 And TEMP, TEMP, 1
	648 Compare TEMP, 1
	649 JumpIfNotEqual {672}
	650 Move X8, 0x53F000
	651 Move X8, [X8+1800]
	652 Move X0, X19
	653 Move X20, [X8]
	654 Move X1, X20
	655 Call 0x1C17E00
	656 Compare X0, 0
	657 JumpIfEqual {884}
	658 Move X20, [X31+80]
	659 Move X19, [X31+88]
	660 Move X22, [X31+64]
	661 Move X21, [X31+72]
	662 Move X24, [X31+48]
	663 Move X23, [X31+56]
	664 Move X26, [X31+32]
	665 Move X25, [X31+40]
	666 Move X28, [X31+16]
	667 Move X27, [X31+24]
	668 Move X29, [X31+96]
	669 Move X30, [X31+104]
	670 Call AndroidJNISafe.ToSByteArray, X0
	671 Return X0
	672 Move X8, 0x537000
	673 Move X0, [X22]
	674 Move X8, [X8+3448]
	675 Move W9, [X0+224]
	676 Move X21, [X8]
	677 Compare W9, 0
	678 JumpIfNotEqual {680}
	679 Call 0x1C17DFC
	680 Move X0, X21
	681 Move X1, X31
	682 Call Type.GetTypeFromHandle, X0
	683 Move X1, X0
	684 Move X0, X20
	685 Move X2, X31
	686 Call Type.op_Equality, X0, X1
	687 Move TEMP, X0
	688 And TEMP, TEMP, 1
	689 Compare TEMP, 1
	690 JumpIfNotEqual {713}
	691 Move X8, 0x538000
	692 Move X8, [X8+2080]
	693 Move X0, X19
	694 Move X20, [X8]
	695 Move X1, X20
	696 Call 0x1C17E00
	697 Compare X0, 0
	698 JumpIfEqual {884}
	699 Move X20, [X31+80]
	700 Move X19, [X31+88]
	701 Move X22, [X31+64]
	702 Move X21, [X31+72]
	703 Move X24, [X31+48]
	704 Move X23, [X31+56]
	705 Move X26, [X31+32]
	706 Move X25, [X31+40]
	707 Move X28, [X31+16]
	708 Move X27, [X31+24]
	709 Move X29, [X31+96]
	710 Move X30, [X31+104]
	711 Call AndroidJNISafe.ToShortArray, X0
	712 Return X0
	713 Move X8, 0x537000
	714 Move X0, [X22]
	715 Move X8, [X8+3464]
	716 Move W9, [X0+224]
	717 Move X21, [X8]
	718 Compare W9, 0
	719 JumpIfNotEqual {721}
	720 Call 0x1C17DFC
	721 Move X0, X21
	722 Move X1, X31
	723 Call Type.GetTypeFromHandle, X0
	724 Move X1, X0
	725 Move X0, X20
	726 Move X2, X31
	727 Call Type.op_Equality, X0, X1
	728 Move TEMP, X0
	729 And TEMP, TEMP, 1
	730 Compare TEMP, 1
	731 JumpIfNotEqual {754}
	732 Move X8, 0x541000
	733 Move X8, [X8+2104]
	734 Move X0, X19
	735 Move X20, [X8]
	736 Move X1, X20
	737 Call 0x1C17E00
	738 Compare X0, 0
	739 JumpIfEqual {884}
	740 Move X20, [X31+80]
	741 Move X19, [X31+88]
	742 Move X22, [X31+64]
	743 Move X21, [X31+72]
	744 Move X24, [X31+48]
	745 Move X23, [X31+56]
	746 Move X26, [X31+32]
	747 Move X25, [X31+40]
	748 Move X28, [X31+16]
	749 Move X27, [X31+24]
	750 Move X29, [X31+96]
	751 Move X30, [X31+104]
	752 Call AndroidJNISafe.ToLongArray, X0
	753 Return X0
	754 Move X8, 0x538000
	755 Move X0, [X22]
	756 Move X8, [X8+2688]
	757 Move W9, [X0+224]
	758 Move X21, [X8]
	759 Compare W9, 0
	760 JumpIfNotEqual {762}
	761 Call 0x1C17DFC
	762 Move X0, X21
	763 Move X1, X31
	764 Call Type.GetTypeFromHandle, X0
	765 Move X1, X0
	766 Move X0, X20
	767 Move X2, X31
	768 Call Type.op_Equality, X0, X1
	769 Move TEMP, X0
	770 And TEMP, TEMP, 1
	771 Compare TEMP, 1
	772 JumpIfNotEqual {795}
	773 Move X8, 0x510000
	774 Move X8, [X8+1592]
	775 Move X0, X19
	776 Move X20, [X8]
	777 Move X1, X20
	778 Call 0x1C17E00
	779 Compare X0, 0
	780 JumpIfEqual {884}
	781 Move X20, [X31+80]
	782 Move X19, [X31+88]
	783 Move X22, [X31+64]
	784 Move X21, [X31+72]
	785 Move X24, [X31+48]
	786 Move X23, [X31+56]
	787 Move X26, [X31+32]
	788 Move X25, [X31+40]
	789 Move X28, [X31+16]
	790 Move X27, [X31+24]
	791 Move X29, [X31+96]
	792 Move X30, [X31+104]
	793 Call AndroidJNISafe.ToFloatArray, X0
	794 Return X0
	795 Move X8, 0x538000
	796 Move X0, [X22]
	797 Move X8, [X8+2680]
	798 Move W9, [X0+224]
	799 Move X21, [X8]
	800 Compare W9, 0
	801 JumpIfNotEqual {803}
	802 Call 0x1C17DFC
	803 Move X0, X21
	804 Move X1, X31
	805 Call Type.GetTypeFromHandle, X0
	806 Move X1, X0
	807 Move X0, X20
	808 Move X2, X31
	809 Call Type.op_Equality, X0, X1
	810 Move TEMP, X0
	811 And TEMP, TEMP, 1
	812 Compare TEMP, 1
	813 JumpIfNotEqual {836}
	814 Move X8, 0x541000
	815 Move X8, [X8+2096]
	816 Move X0, X19
	817 Move X20, [X8]
	818 Move X1, X20
	819 Call 0x1C17E00
	820 Compare X0, 0
	821 JumpIfEqual {884}
	822 Move X20, [X31+80]
	823 Move X19, [X31+88]
	824 Move X22, [X31+64]
	825 Move X21, [X31+72]
	826 Move X24, [X31+48]
	827 Move X23, [X31+56]
	828 Move X26, [X31+32]
	829 Move X25, [X31+40]
	830 Move X28, [X31+16]
	831 Move X27, [X31+24]
	832 Move X29, [X31+96]
	833 Move X30, [X31+104]
	834 Call AndroidJNISafe.ToDoubleArray, X0
	835 Return X0
	836 Move X8, 0x537000
	837 Move X0, [X22]
	838 Call 0x3EB29C4
	839 Return X0
	840 Move W9, [X0+224]
	841 Move X21, [X8]
	842 Compare W9, 0
	843 JumpIfNotEqual {845}
	844 Call 0x1C17DFC
	845 Move X0, X21
	846 Move X1, X31
	847 Call Type.GetTypeFromHandle, X0
	848 Move X1, X0
	849 Move X0, X20
	850 Move X2, X31
	851 Call Type.op_Equality, X0, X1
	852 Move X21, X31
	853 Move TEMP, X0
	854 And TEMP, TEMP, 1
	855 Compare TEMP, 1
	856 JumpIfNotEqual {271}
	857 Move X8, 0x518000
	858 Move X8, [X8+2264]
	859 Move X0, X19
	860 Move X20, [X8]
	861 Move X1, X20
	862 Call 0x1C17E00
	863 Compare X0, 0
	864 JumpIfEqual {884}
	865 Move X20, [X31+80]
	866 Move X19, [X31+88]
	867 Move X22, [X31+64]
	868 Move X21, [X31+72]
	869 Move X24, [X31+48]
	870 Move X23, [X31+56]
	871 Move X26, [X31+32]
	872 Move X25, [X31+40]
	873 Move X28, [X31+16]
	874 Move X27, [X31+24]
	875 Move X29, [X31+96]
	876 Move X30, [X31+104]
	877 Call AndroidJNISafe.ToCharArray, X0
	878 Return X0
	879 Call 0x1C17F28
	880 Call 0x1C17F20
	881 Move X0, X19
	882 Move X1, X21
	883 Call 0x1C181E0
	884 Move X0, X19
	885 Move X1, X20
	886 Call 0x1C181E0
	887 Move X0, 0x57A000
	888 Move X0, [X0+640]
	889 Call 0x1C17D08
	890 Move X8, [X20]
	891 Move X19, X0
	892 Move X0, X20
	893 Move X9, [X8+360]
	894 Move X1, [X8+368]
	895 NotImplemented "Instruction BLR not yet implemented."
	896 Move X20, X0
	897 Move X0, 0x517000
	898 Move X0, [X0+2480]
	899 Call 0x1C17D08
	900 Move X2, X0
	901 Move X0, X19
	902 Move X1, X20
	903 Move X3, X31
	904 Call String.Concat, X0, X1, X2
	905 Move X19, X0
	906 Move X0, 0x50F000
	907 Move X0, [X0+2000]
	908 Call 0x1C17D08
	909 Call 0x1C17F10
	910 Move X1, X19
	911 Move X2, X31
	912 Move X20, X0
	913 Call Exception..ctor, X0, X1
	914 Move X0, 0x57A000
	915 Move X0, [X0+648]
	916 Call 0x1C17D08
	917 Move X1, X0
	918 Move X0, X20
	919 Call 0x1C17DEC

Method: ArrayType ConvertFromJNIArray(System.IntPtr array)

Disassembly:
	0x022AF998 BL 0x1C16DFC
	0x022AF99C MOV X0, X22
	0x022AF9A0 MOV X1, X31
	0x022AF9A4 BL 0x338C698
	0x022AF9A8 MOV X1, X0
	0x022AF9AC MOV X0, X21
	0x022AF9B0 MOV X2, X31
	0x022AF9B4 BL 0x3395194
	0x022AF9B8 TBZ X0, 0x0, 0x22AFA94
	0x022AF9BC MOV X0, X20
	0x022AF9C0 MOV X1, X31
	0x022AF9C4 BL 0x3BEED78
	0x022AF9C8 ADRP X8, 0x1E44000
	0x022AF9CC LDR X8, [X8 + 0xAC8]
	0x022AF9D0 MOV W23, W0
	0x022AF9D4 MOV W1, W23
	0x022AF9D8 LDR X8, [X8]
	0x022AF9DC MOV X0, X8
	0x022AF9E0 BL 0x1C16D6C
	0x022AF9E4 CMP W23, 0x1
	0x022AF9E8 MOV X21, X0
	0x022AF9EC B.LT 0x22AFB8C
	0x022AF9F0 MOV X22, X31
	0x022AF9F4 MOV W24, W23
	0x022AF9F8 ADD X25, X21, 0x20
	0x022AF9FC MOV X0, X20
	0x022AFA00 MOV W1, W22
	0x022AFA04 MOV X2, X31
	0x022AFA08 BL 0x3BEADA0
	0x022AFA0C MOV X1, X31
	0x022AFA10 MOV X23, X0
	0x022AFA14 BL 0x3BEBB38
	0x022AFA18 CBZ X21, 0x22AFE30
	0x022AFA1C LDR W8, [X21 + 0x18]
	0x022AFA20 CMP X22, X8
	0x022AFA24 B.CS 0x22AFE34
	0x022AFA28 STR X0, [X25, X22, LSL #3]
	0x022AFA2C MOV X0, X23
	0x022AFA30 MOV X1, X31
	0x022AFA34 BL 0x3BEBA40
	0x022AFA38 ADD X22, X22, 0x1
	0x022AFA3C CMP X24, X22
	0x022AFA40 B.NE 0x22AF9FC
	0x022AFA44 B 0x22AFB8C
	0x022AFA48 ADRP X8, 0x1E6D000
	0x022AFA4C LDR X0, [X23]
	0x022AFA50 LDR X8, [X8 + 0x248]
	0x022AFA54 LDR W9, [X0 + 0xE0]
	0x022AFA58 LDR X22, [X8]
	0x022AFA5C CBNZ W9, 0x22AFA64
	0x022AFA60 BL 0x1C16DFC
	0x022AFA64 MOV X0, X22
	0x022AFA68 MOV X1, X31
	0x022AFA6C BL 0x338C698
	0x022AFA70 MOV X1, X0
	0x022AFA74 MOV X0, X21
	0x022AFA78 MOV X2, X31
	0x022AFA7C BL 0x3395194
	0x022AFA80 TBZ X0, 0x0, 0x22AFB94
	0x022AFA84 MOV X0, X20
	0x022AFA88 MOV X1, X31
	0x022AFA8C BL 0x3BEE690
	0x022AFA90 B 0x22AFDD4
	0x022AFA94 ADRP X8, 0x1E6D000
	0x022AFA98 LDR X0, [X23]
	0x022AFA9C LDR X8, [X8 + 0x698]
	0x022AFAA0 LDR W9, [X0 + 0xE0]
	0x022AFAA4 LDR X22, [X8]
	0x022AFAA8 CBNZ W9, 0x22AFAB0
	0x022AFAAC BL 0x1C16DFC
	0x022AFAB0 MOV X0, X22
	0x022AFAB4 MOV X1, X31
	0x022AFAB8 BL 0x338C698
	0x022AFABC MOV X1, X0
	0x022AFAC0 MOV X0, X21
	0x022AFAC4 MOV X2, X31
	0x022AFAC8 BL 0x3395194
	0x022AFACC TBZ X0, 0x0, 0x22AFE48
	0x022AFAD0 MOV X0, X20
	0x022AFAD4 MOV X1, X31
	0x022AFAD8 BL 0x3BEED78
	0x022AFADC ADRP X8, 0x1E6D000
	0x022AFAE0 LDR X8, [X8 + 0xA08]
	0x022AFAE4 MOV W23, W0
	0x022AFAE8 MOV W1, W23
	0x022AFAEC LDR X8, [X8]
	0x022AFAF0 MOV X0, X8
	0x022AFAF4 BL 0x1C16D6C
	0x022AFAF8 CMP W23, 0x1
	0x022AFAFC MOV X21, X0
	0x022AFB00 B.LT 0x22AFB8C
	0x022AFB04 ADRP X27, 0x1E6D000
	0x022AFB08 LDR X27, [X27 + 0xA10]
	0x022AFB0C MOV X22, X31
	0x022AFB10 MOV W25, W23
	0x022AFB14 ADD X26, X21, 0x20
	0x022AFB18 MOV X0, X20
	0x022AFB1C MOV W1, W22
	0x022AFB20 MOV X2, X31
	0x022AFB24 BL 0x3BEADA0
	0x022AFB28 LDR X8, [X27]
	0x022AFB2C MOV X23, X0
	0x022AFB30 MOV X0, X8
	0x022AFB34 BL 0x1C16F10
	0x022AFB38 MOV X1, X23
	0x022AFB3C MOV X2, X31
	0x022AFB40 MOV X24, X0
	0x022AFB44 BL 0x3BF1930
	0x022AFB48 CBZ X21, 0x22AFE30
	0x022AFB4C CBZ X24, 0x22AFB64
	0x022AFB50 LDR X8, [X21]
	0x022AFB54 MOV X0, X24
	0x022AFB58 LDR X1, [X8 + 0x40]
	0x022AFB5C BL 0x1C16E00
	0x022AFB60 CBZ X0, 0x22AFE38
	0x022AFB64 LDR W8, [X21 + 0x18]
	0x022AFB68 CMP X22, X8
	0x022AFB6C B.CS 0x22AFE34
	0x022AFB70 MOV X0, X23
	0x022AFB74 MOV X1, X31
	0x022AFB78 STR X24, [X26, X22, LSL #3]
	0x022AFB7C BL 0x3BEBA40
	0x022AFB80 ADD X22, X22, 0x1
	0x022AFB84 CMP X25, X22
	0x022AFB88 B.NE 0x22AFB18
	0x022AFB8C LDR X8, [X19 + 0x38]
	0x022AFB90 B 0x22AFDDC
	0x022AFB94 ADRP X8, 0x1E6B000
	0x022AFB98 LDR X0, [X23]
	0x022AFB9C LDR X8, [X8 + 0xD68]
	0x022AFBA0 LDR W9, [X0 + 0xE0]
	0x022AFBA4 LDR X22, [X8]
	0x022AFBA8 CBNZ W9, 0x22AFBB0
	0x022AFBAC BL 0x1C16DFC
	0x022AFBB0 MOV X0, X22
	0x022AFBB4 MOV X1, X31
	0x022AFBB8 BL 0x338C698
	0x022AFBBC MOV X1, X0
	0x022AFBC0 MOV X0, X21
	0x022AFBC4 MOV X2, X31
	0x022AFBC8 BL 0x3395194
	0x022AFBCC TBZ X0, 0x0, 0x22AFC0C
	0x022AFBD0 ADRP X8, 0x1E44000
	0x022AFBD4 LDR X8, [X8 + 0xA28]
	0x022AFBD8 LDR X0, [X8]
	0x022AFBDC LDR W8, [X0 + 0xE0]
	0x022AFBE0 CBNZ W8, 0x22AFBE8
	0x022AFBE4 BL 0x1C16DFC
	0x022AFBE8 ADRP X8, 0x1E6D000
	0x022AFBEC LDR X8, [X8 + 0xA18]
	0x022AFBF0 MOV X1, X31
	0x022AFBF4 LDR X0, [X8]
	0x022AFBF8 BL 0x3C06A04
	0x022AFBFC MOV X0, X20
	0x022AFC00 MOV X1, X31
	0x022AFC04 BL 0x3BEE550
	0x022AFC08 B 0x22AFDD4
	0x022AFC0C ADRP X8, 0x1E6B000
	0x022AFC10 LDR X0, [X23]
	0x022AFC14 LDR X8, [X8 + 0xD90]
	0x022AFC18 LDR W9, [X0 + 0xE0]
	0x022AFC1C LDR X22, [X8]
	0x022AFC20 CBNZ W9, 0x22AFC28
	0x022AFC24 BL 0x1C16DFC
	0x022AFC28 MOV X0, X22
	0x022AFC2C MOV X1, X31
	0x022AFC30 BL 0x338C698
	0x022AFC34 MOV X1, X0
	0x022AFC38 MOV X0, X21
	0x022AFC3C MOV X2, X31
	0x022AFC40 BL 0x3395194
	0x022AFC44 TBZ X0, 0x0, 0x22AFC58
	0x022AFC48 MOV X0, X20
	0x022AFC4C MOV X1, X31
	0x022AFC50 BL 0x3BEE5F0
	0x022AFC54 B 0x22AFDD4
	0x022AFC58 ADRP X8, 0x1E6B000
	0x022AFC5C LDR X0, [X23]
	0x022AFC60 LDR X8, [X8 + 0xD78]
	0x022AFC64 LDR W9, [X0 + 0xE0]
	0x022AFC68 LDR X22, [X8]
	0x022AFC6C CBNZ W9, 0x22AFC74
	0x022AFC70 BL 0x1C16DFC
	0x022AFC74 MOV X0, X22
	0x022AFC78 MOV X1, X31
	0x022AFC7C BL 0x338C698
	0x022AFC80 MOV X1, X0
	0x022AFC84 MOV X0, X21
	0x022AFC88 MOV X2, X31
	0x022AFC8C BL 0x3395194
	0x022AFC90 TBZ X0, 0x0, 0x22AFCA4
	0x022AFC94 MOV X0, X20
	0x022AFC98 MOV X1, X31
	0x022AFC9C BL 0x3BEE4B0
	0x022AFCA0 B 0x22AFDD4
	0x022AFCA4 ADRP X8, 0x1E6B000
	0x022AFCA8 LDR X0, [X23]
	0x022AFCAC LDR X8, [X8 + 0xD88]
	0x022AFCB0 LDR W9, [X0 + 0xE0]
	0x022AFCB4 LDR X22, [X8]
	0x022AFCB8 CBNZ W9, 0x22AFCC0
	0x022AFCBC BL 0x1C16DFC
	0x022AFCC0 MOV X0, X22
	0x022AFCC4 MOV X1, X31
	0x022AFCC8 BL 0x338C698
	0x022AFCCC MOV X1, X0
	0x022AFCD0 MOV X0, X21
	0x022AFCD4 MOV X2, X31
	0x022AFCD8 BL 0x3395194
	0x022AFCDC TBZ X0, 0x0, 0x22AFCF0
	0x022AFCE0 MOV X0, X20
	0x022AFCE4 MOV X1, X31
	0x022AFCE8 BL 0x3BEE410
	0x022AFCEC B 0x22AFDD4
	0x022AFCF0 ADRP X8, 0x1E6C000
	0x022AFCF4 LDR X0, [X23]
	0x022AFCF8 LDR X8, [X8 + 0xA80]
	0x022AFCFC LDR W9, [X0 + 0xE0]
	0x022AFD00 LDR X22, [X8]
	0x022AFD04 CBNZ W9, 0x22AFD0C
	0x022AFD08 BL 0x1C16DFC
	0x022AFD0C MOV X0, X22
	0x022AFD10 MOV X1, X31
	0x022AFD14 BL 0x338C698
	0x022AFD18 MOV X1, X0
	0x022AFD1C MOV X0, X21
	0x022AFD20 MOV X2, X31
	0x022AFD24 BL 0x3395194
	0x022AFD28 TBZ X0, 0x0, 0x22AFD3C
	0x022AFD2C MOV X0, X20
	0x022AFD30 MOV X1, X31
	0x022AFD34 BL 0x3BEE370
	0x022AFD38 B 0x22AFDD4
	0x022AFD3C ADRP X8, 0x1E6C000
	0x022AFD40 LDR X0, [X23]
	0x022AFD44 LDR X8, [X8 + 0xA78]
	0x022AFD48 LDR W9, [X0 + 0xE0]
	0x022AFD4C LDR X22, [X8]
	0x022AFD50 CBNZ W9, 0x22AFD58
	0x022AFD54 BL 0x1C16DFC
	0x022AFD58 MOV X0, X22
	0x022AFD5C MOV X1, X31
	0x022AFD60 BL 0x338C698
	0x022AFD64 MOV X1, X0
	0x022AFD68 MOV X0, X21
	0x022AFD6C MOV X2, X31
	0x022AFD70 BL 0x3395194
	0x022AFD74 TBZ X0, 0x0, 0x22AFD88
	0x022AFD78 MOV X0, X20
	0x022AFD7C MOV X1, X31
	0x022AFD80 BL 0x3BEE2D0
	0x022AFD84 B 0x22AFDD4
	0x022AFD88 ADRP X8, 0x1E6B000
	0x022AFD8C LDR X0, [X23]
	0x022AFD90 LDR X8, [X8 + 0xD70]
	0x022AFD94 LDR W9, [X0 + 0xE0]
	0x022AFD98 LDR X22, [X8]
	0x022AFD9C CBNZ W9, 0x22AFDA4
	0x022AFDA0 BL 0x1C16DFC
	0x022AFDA4 MOV X0, X22
	0x022AFDA8 MOV X1, X31
	0x022AFDAC BL 0x338C698
	0x022AFDB0 MOV X1, X0
	0x022AFDB4 MOV X0, X21
	0x022AFDB8 MOV X2, X31
	0x022AFDBC BL 0x3395194
	0x022AFDC0 FMOV D0, X31
	0x022AFDC4 TBZ X0, 0x0, 0x22AFE18
	0x022AFDC8 MOV X0, X20
	0x022AFDCC MOV X1, X31
	0x022AFDD0 BL 0x3BEE230
	0x022AFDD4 LDR X8, [X19 + 0x38]
	0x022AFDD8 MOV X21, X0
	0x022AFDDC LDR X1, [X8 + 0x8]
	0x022AFDE0 LDRB W8, [X1 + 0x135]
	0x022AFDE4 TBNZ X8, 0x0, 0x22AFDF4
	0x022AFDE8 MOV X0, X1
	0x022AFDEC BL 0x1C5C684
	0x022AFDF0 MOV X1, X0
	0x022AFDF4 CBZ X21, 0x22AFE30
	0x022AFDF8 LDR X8, [X21]
	0x022AFDFC LDR X9, [X1 + 0x40]
	0x022AFE00 MOV X0, X21
	0x022AFE04 LDR X8, [X8 + 0x40]
	0x022AFE08 CMP X8, X9
	0x022AFE0C B.NE 0x22AFE44
	0x022AFE10 BL 0x1C16E08
	0x022AFE14 LDR V0, [X0]
	0x022AFE18 LDP X20, X19, [X31 + 0x40]
	0x022AFE1C LDP X22, X21, [X31 + 0x30]
	0x022AFE20 LDP X24, X23, [X31 + 0x20]
	0x022AFE24 LDP X26, X25, [X31 + 0x10]
	0x022AFE28 LDP X30, X27, [X31], #0x50
	0x022AFE2C RET
	0x022AFE30 BL 0x1C16F20
	0x022AFE34 BL 0x1C16F28
	0x022AFE38 BL 0x1C16F44
	0x022AFE3C MOV X1, X31
	0x022AFE40 BL 0x1C16DEC
	0x022AFE44 BL 0x1C171E0
	0x022AFE48 ADRP X0, 0x1E6D000
	0x022AFE4C LDR X0, [X0 + 0xA20]
	0x022AFE50 BL 0x1C16D08
	0x022AFE54 MOV X20, X0
	0x022AFE58 CBZ X21, 0x22AFE70
	0x022AFE5C LDR X8, [X21]
	0x022AFE60 MOV X0, X21
	0x022AFE64 LDP X9, X1, [X8 + 0x168]
	0x022AFE68 BLR X9
	0x022AFE6C MOV X21, X0
	0x022AFE70 ADRP X0, 0x1E4C000
	0x022AFE74 LDR X0, [X0 + 0x9B0]
	0x022AFE78 BL 0x1C16D08
	0x022AFE7C MOV X2, X0
	0x022AFE80 MOV X0, X20
	0x022AFE84 MOV X1, X21
	0x022AFE88 MOV X3, X31
	0x022AFE8C BL 0x32274B8
	0x022AFE90 MOV X20, X0
	0x022AFE94 ADRP X0, 0x1E44000
	0x022AFE98 LDR X0, [X0 + 0x7D0]
	0x022AFE9C BL 0x1C16D08
	0x022AFEA0 BL 0x1C16F10
	0x022AFEA4 MOV X1, X20
	0x022AFEA8 MOV X2, X31
	0x022AFEAC MOV X21, X0
	0x022AFEB0 BL 0x33B2C70
	0x022AFEB4 MOV X0, X21
	0x022AFEB8 MOV X1, X19
	0x022AFEBC BL 0x1C16DEC
	0x022AFEC0 STP X30, X27, [X31 - 0x50]!
	0x022AFEC4 STP X26, X25, [X31 + 0x10]
	0x022AFEC8 STP X24, X23, [X31 + 0x20]
	0x022AFECC STP X22, X21, [X31 + 0x30]
	0x022AFED0 STP X20, X19, [X31 + 0x40]
	0x022AFED4 LDR X8, [X1 + 0x38]
	0x022AFED8 MOV X19, X1
	0x022AFEDC MOV X20, X0
	0x022AFEE0 CBNZ X8, 0x22AFFD0
	0x022AFEE4 ADRP X0, 0x1E6D000
	0x022AFEE8 LDR X0, [X0 + 0xA08]
	0x022AFEEC BL 0x1C16CF4
	0x022AFEF0 ADRP X0, 0x1E6D000
	0x022AFEF4 LDR X0, [X0 + 0x698]
	0x022AFEF8 BL 0x1C16CF4
	0x022AFEFC ADRP X0, 0x1E6D000
	0x022AFF00 LDR X0, [X0 + 0xA10]
	0x022AFF04 BL 0x1C16CF4
	0x022AFF08 ADRP X0, 0x1E6D000
	0x022AFF0C LDR X0, [X0 + 0x6A0]
	0x022AFF10 BL 0x1C16CF4
	0x022AFF14 ADRP X0, 0x1E6D000
	0x022AFF18 LDR X0, [X0 + 0x248]
	0x022AFF1C BL 0x1C16CF4
	0x022AFF20 ADRP X0, 0x1E6B000
	0x022AFF24 LDR X0, [X0 + 0xD68]
	0x022AFF28 BL 0x1C16CF4
	0x022AFF2C ADRP X0, 0x1E6B000
	0x022AFF30 LDR X0, [X0 + 0xD70]
	0x022AFF34 BL 0x1C16CF4
	0x022AFF38 ADRP X0, 0x1E44000
	0x022AFF3C LDR X0, [X0 + 0xA28]
	0x022AFF40 BL 0x1C16CF4
	0x022AFF44 ADRP X0, 0x1E6C000
	0x022AFF48 LDR X0, [X0 + 0xA78]
	0x022AFF4C BL 0x1C16CF4
	0x022AFF50 ADRP X0, 0x1E6B000
	0x022AFF54 LDR X0, [X0 + 0xD78]
	0x022AFF58 BL 0x1C16CF4
	0x022AFF5C ADRP X0, 0x1E6B000
	0x022AFF60 LDR X0, [X0 + 0xD80]
	0x022AFF64 BL 0x1C16CF4
	0x022AFF68 ADRP X0, 0x1E6B000
	0x022AFF6C LDR X0, [X0 + 0xD88]
	0x022AFF70 BL 0x1C16CF4
	0x022AFF74 ADRP X0, 0x1E6B000
	0x022AFF78 LDR X0, [X0 + 0xD90]
	0x022AFF7C BL 0x1C16CF4
	0x022AFF80 ADRP X0, 0x1E6C000
	0x022AFF84 LDR X0, [X0 + 0xA80]
	0x022AFF88 BL 0x1C16CF4
	0x022AFF8C ADRP X0, 0x1E44000
	0x022AFF90 LDR X0, [X0 + 0xAC8]
	0x022AFF94 BL 0x1C16CF4
	0x022AFF98 ADRP X0, 0x1E6C000
	0x022AFF9C LDR X0, [X0 + 0xB60]
	0x022AFFA0 BL 0x1C16CF4
	0x022AFFA4 ADRP X0, 0x1E44000
	0x022AFFA8 LDR X0, [X0 + 0x6C0]
	0x022AFFAC BL 0x1C16CF4
	0x022AFFB0 ADRP X0, 0x1E6D000
	0x022AFFB4 LDR X0, [X0 + 0xA18]
	0x022AFFB8 BL 0x1C16CF4
	0x022AFFBC LDR X8, [X19 + 0x38]
	0x022AFFC0 CBNZ X8, 0x22AFFD0
	0x022AFFC4 MOV X0, X19
	0x022AFFC8 BL 0x1C5C6E0
	0x022AFFCC LDR X8, [X19 + 0x38]
	0x022AFFD0 ADRP X23, 0x1E44000
	0x022AFFD4 LDR X23, [X23 + 0x6C0]
	0x022AFFD8 LDR X21, [X8]
	0x022AFFDC LDR X0, [X23]
	0x022AFFE0 LDR W9, [X0 + 0xE0]
	0x022AFFE4 CBNZ W9, 0x22AFFEC
	0x022AFFE8 BL 0x1C16DFC
	0x022AFFEC MOV X0, X21
	0x022AFFF0 MOV X1, X31
	0x022AFFF4 BL 0x338C698
	0x022AFFF8 CBZ X0, 0x22B053C
	0x022AFFFC LDR X8, [X0]
	0x022B0000 LDR X9, [X8 + 0x428]
	0x022B0004 LDR X1, [X8 + 0x430]
	0x022B0008 BLR X9
	0x022B000C ADRP X8, 0x1E6C000
	0x022B0010 LDR X8, [X8 + 0x6A0]
	0x022B0014 MOV X21, X0
	0x022B0018 LDR X8, [X8]
	0x022B001C LDR W9, [X8 + 0xE0]
	0x022B0020 CBNZ W9, 0x22B002C
	0x022B0024 MOV X0, X8
	0x022B0028 BL 0x1C16DFC
	0x022B002C MOV X0, X21
	0x022B0030 MOV X1, X31
	0x022B0034 BL 0x3BF3054
	0x022B0038 TBZ X0, 0x0, 0x22B0088
	0x022B003C ADRP X8, 0x1E6A000
	0x022B0040 LDR X0, [X23]
	0x022B0044 LDR X8, [X8 + 0xD80]
	0x022B0048 LDR W9, [X0 + 0xE0]
	0x022B004C LDR X22, [X8]
	0x022B0050 CBNZ W9, 0x22B0058
	0x022B0054 BL 0x1C16DFC
	0x022B0058 MOV X0, X22
	0x022B005C MOV X1, X31
	0x022B0060 BL 0x338C698
	0x022B0064 MOV X1, X0
	0x022B0068 MOV X0, X21
	0x022B006C MOV X2, X31
	0x022B0070 BL 0x3395194
	0x022B0074 TBZ X0, 0x0, 0x22B0150
	0x022B0078 MOV X0, X20
	0x022B007C MOV X1, X31
	0x022B0080 BL 0x3BEE730
	0x022B0084 B 0x22B04D8
	0x022B0088 ADRP X8, 0x1E6B000
	0x022B008C LDR X0, [X23]
	0x022B0090 LDR X8, [X8 + 0xB60]
	0x022B0094 LDR W9, [X0 + 0xE0]
	0x022B0098 LDR X22, [X8]
	0x022B009C CBNZ W9, 0x22B00A4
	0x022B00A0 BL 0x1C16DFC
	0x022B00A4 MOV X0, X22
	0x022B00A8 MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X1+56]
	012 Move X19, X1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {76}
	016 Move X0, 0x1E6E000
	017 Move X0, [X0+2568]
	018 Call 0x1C17CF4
	019 Move X0, 0x1E6E000
	020 Move X0, [X0+1688]
	021 Call 0x1C17CF4
	022 Move X0, 0x1E6E000
	023 Move X0, [X0+2576]
	024 Call 0x1C17CF4
	025 Move X0, 0x1E6E000
	026 Move X0, [X0+1696]
	027 Call 0x1C17CF4
	028 Move X0, 0x1E6E000
	029 Move X0, [X0+584]
	030 Call 0x1C17CF4
	031 Move X0, 0x1E6C000
	032 Move X0, [X0+3432]
	033 Call 0x1C17CF4
	034 Move X0, 0x1E6C000
	035 Move X0, [X0+3440]
	036 Call 0x1C17CF4
	037 Move X0, 0x1E45000
	038 Move X0, [X0+2600]
	039 Call 0x1C17CF4
	040 Move X0, 0x1E6D000
	041 Move X0, [X0+2680]
	042 Call 0x1C17CF4
	043 Move X0, 0x1E6C000
	044 Move X0, [X0+3448]
	045 Call 0x1C17CF4
	046 Move X0, 0x1E6C000
	047 Move X0, [X0+3456]
	048 Call 0x1C17CF4
	049 Move X0, 0x1E6C000
	050 Move X0, [X0+3464]
	051 Call 0x1C17CF4
	052 Move X0, 0x1E6C000
	053 Move X0, [X0+3472]
	054 Call 0x1C17CF4
	055 Move X0, 0x1E6D000
	056 Move X0, [X0+2688]
	057 Call 0x1C17CF4
	058 Move X0, 0x1E45000
	059 Move X0, [X0+2760]
	060 Call 0x1C17CF4
	061 Move X0, 0x1E6D000
	062 Move X0, [X0+2912]
	063 Call 0x1C17CF4
	064 Move X0, 0x1E45000
	065 Move X0, [X0+1728]
	066 Call 0x1C17CF4
	067 Move X0, 0x1E6E000
	068 Move X0, [X0+2584]
	069 Call 0x1C17CF4
	070 Move X8, [X19+56]
	071 Compare X8, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X19
	074 Call 0x1C5D6E0
	075 Move X8, [X19+56]
	076 Move X23, 0x1E45000
	077 Move X23, [X23+1728]
	078 Move X21, [X8]
	079 Move X0, [X23]
	080 Move W9, [X0+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Call Type.GetTypeFromHandle, X0
	087 Compare X0, 0
	088 JumpIfEqual {471}
	089 Move X8, [X0]
	090 Move X9, [X8+1064]
	091 Move X1, [X8+1072]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, 0x1E6E000
	094 Move X8, [X8+1696]
	095 Move X21, X0
	096 Move X8, [X8]
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, X21
	103 Move X1, X31
	104 Call AndroidReflection.IsPrimitive, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {131}
	109 Move X8, 0x1E6C000
	110 Move X0, [X23]
	111 Move X8, [X8+3456]
	112 Move W9, [X0+224]
	113 Move X22, [X8]
	114 Compare W9, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X22
	118 Move X1, X31
	119 Call Type.GetTypeFromHandle, X0
	120 Move X1, X0
	121 Move X0, X21
	122 Move X2, X31
	123 Call Type.op_Equality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {182}
	128 Move X0, X20
	129 Move X1, X31
	130 Call AndroidJNISafe.FromIntArray, X0
	131 Move X8, 0x1E6D000
	132 Move X0, [X23]
	133 Move X8, [X8+2912]
	134 Move W9, [X0+224]
	135 Move X22, [X8]
	136 Compare W9, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X22
	140 Move X1, X31
	141 Call Type.GetTypeFromHandle, X0
	142 Move X1, X0
	143 Move X0, X21
	144 Move X2, X31
	145 Call Type.op_Equality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {204}
	150 Move X0, X20
	151 Move X1, X31
	152 Call AndroidJNISafe.GetArrayLength, X0
	153 Move X8, 0x1E45000
	154 Move X8, [X8+2760]
	155 Move W23, W0
	156 Move W1, W23
	157 Move X8, [X8]
	158 Move X0, X8
	159 Call 0x1C17D6C
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X21, X0
	162 Move X22, X31
	163 Move W24, W23
	164 Add X25, X21, 32
	165 Move X0, X20
	166 Move W1, W22
	167 Move X2, X31
	168 Call AndroidJNI.GetObjectArrayElement, X0, X1
	169 Move X1, X31
	170 Move X23, X0
	171 Call AndroidJNISafe.GetStringChars, X0
	172 Compare X21, 0
	173 JumpIfEqual {471}
	174 Move W8, [X21+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move [X25], X0
	177 Move X0, X23
	178 Move X1, X31
	179 Call AndroidJNISafe.DeleteLocalRef, X0
	180 Add X22, X22, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, 0x1E6E000
	183 Move X0, [X23]
	184 Move X8, [X8+584]
	185 Move W9, [X0+224]
	186 Move X22, [X8]
	187 Compare W9, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X22
	191 Move X1, X31
	192 Call Type.GetTypeFromHandle, X0
	193 Move X1, X0
	194 Move X0, X21
	195 Move X2, X31
	196 Call Type.op_Equality, X0, X1
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {271}
	201 Move X0, X20
	202 Move X1, X31
	203 Call AndroidJNISafe.FromBooleanArray, X0
	204 Move X8, 0x1E6E000
	205 Move X0, [X23]
	206 Move X8, [X8+1688]
	207 Move W9, [X0+224]
	208 Move X22, [X8]
	209 Compare W9, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move X0, X22
	213 Move X1, X31
	214 Call Type.GetTypeFromHandle, X0
	215 Move X1, X0
	216 Move X0, X21
	217 Move X2, X31
	218 Call Type.op_Equality, X0, X1
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {477}
	223 Move X0, X20
	224 Move X1, X31
	225 Call AndroidJNISafe.GetArrayLength, X0
	226 Move X8, 0x1E6E000
	227 Move X8, [X8+2568]
	228 Move W23, W0
	229 Move W1, W23
	230 Move X8, [X8]
	231 Move X0, X8
	232 Call 0x1C17D6C
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X21, X0
	235 Move X27, 0x1E6E000
	236 Move X27, [X27+2576]
	237 Move X22, X31
	238 Move W25, W23
	239 Add X26, X21, 32
	240 Move X0, X20
	241 Move W1, W22
	242 Move X2, X31
	243 Call AndroidJNI.GetObjectArrayElement, X0, X1
	244 Move X8, [X27]
	245 Move X23, X0
	246 Move X0, X8
	247 Call 0x1C17F10
	248 Move X1, X23
	249 Move X2, X31
	250 Move X24, X0
	251 Call AndroidJavaObject..ctor, X0, X1
	252 Compare X21, 0
	253 JumpIfEqual {471}
	254 Compare X24, 0
	255 JumpIfEqual {262}
	256 Move X8, [X21]
	257 Move X0, X24
	258 Move X1, [X8+64]
	259 Call 0x1C17E00
	260 Compare X0, 0
	261 JumpIfEqual {473}
	262 Move W8, [X21+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X0, X23
	265 Move X1, X31
	266 Move [X26], X24
	267 Call AndroidJNISafe.DeleteLocalRef, X0
	268 Add X22, X22, 1
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X8, [X19+56]
	271 Move X8, 0x1E6C000
	272 Move X0, [X23]
	273 Move X8, [X8+3432]
	274 Move W9, [X0+224]
	275 Move X22, [X8]
	276 Compare W9, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X0, X22
	280 Move X1, X31
	281 Call Type.GetTypeFromHandle, X0
	282 Move X1, X0
	283 Move X0, X21
	284 Move X2, X31
	285 Call Type.op_Equality, X0, X1
	286 Move TEMP, X0
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfNotEqual {305}
	290 Move X8, 0x1E45000
	291 Move X8, [X8+2600]
	292 Move X0, [X8]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Move X8, 0x1E6E000
	298 Move X8, [X8+2584]
	299 Move X1, X31
	300 Move X0, [X8]
	301 Call Debug.LogWarning, X0
	302 Move X0, X20
	303 Move X1, X31
	304 Call AndroidJNISafe.FromByteArray, X0
	305 Move X8, 0x1E6C000
	306 Move X0, [X23]
	307 Move X8, [X8+3472]
	308 Move W9, [X0+224]
	309 Move X22, [X8]
	310 Compare W9, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X0, X22
	314 Move X1, X31
	315 Call Type.GetTypeFromHandle, X0
	316 Move X1, X0
	317 Move X0, X21
	318 Move X2, X31
	319 Call Type.op_Equality, X0, X1
	320 Move TEMP, X0
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfNotEqual {327}
	324 Move X0, X20
	325 Move X1, X31
	326 Call AndroidJNISafe.FromSByteArray, X0
	327 Move X8, 0x1E6C000
	328 Move X0, [X23]
	329 Move X8, [X8+3448]
	330 Move W9, [X0+224]
	331 Move X22, [X8]
	332 Compare W9, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X0, X22
	336 Move X1, X31
	337 Call Type.GetTypeFromHandle, X0
	338 Move X1, X0
	339 Move X0, X21
	340 Move X2, X31
	341 Call Type.op_Equality, X0, X1
	342 Move TEMP, X0
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfNotEqual {349}
	346 Move X0, X20
	347 Move X1, X31
	348 Call AndroidJNISafe.FromShortArray, X0
	349 Move X8, 0x1E6C000
	350 Move X0, [X23]
	351 Move X8, [X8+3464]
	352 Move W9, [X0+224]
	353 Move X22, [X8]
	354 Compare W9, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X0, X22
	358 Move X1, X31
	359 Call Type.GetTypeFromHandle, X0
	360 Move X1, X0
	361 Move X0, X21
	362 Move X2, X31
	363 Call Type.op_Equality, X0, X1
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {371}
	368 Move X0, X20
	369 Move X1, X31
	370 Call AndroidJNISafe.FromLongArray, X0
	371 Move X8, 0x1E6D000
	372 Move X0, [X23]
	373 Move X8, [X8+2688]
	374 Move W9, [X0+224]
	375 Move X22, [X8]
	376 Compare W9, 0
	377 JumpIfNotEqual {379}
	378 Call 0x1C17DFC
	379 Move X0, X22
	380 Move X1, X31
	381 Call Type.GetTypeFromHandle, X0
	382 Move X1, X0
	383 Move X0, X21
	384 Move X2, X31
	385 Call Type.op_Equality, X0, X1
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfNotEqual {393}
	390 Move X0, X20
	391 Move X1, X31
	392 Call AndroidJNISafe.FromFloatArray, X0
	393 Move X8, 0x1E6D000
	394 Move X0, [X23]
	395 Move X8, [X8+2680]
	396 Move W9, [X0+224]
	397 Move X22, [X8]
	398 Compare W9, 0
	399 JumpIfNotEqual {401}
	400 Call 0x1C17DFC
	401 Move X0, X22
	402 Move X1, X31
	403 Call Type.GetTypeFromHandle, X0
	404 Move X1, X0
	405 Move X0, X21
	406 Move X2, X31
	407 Call Type.op_Equality, X0, X1
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {415}
	412 Move X0, X20
	413 Move X1, X31
	414 Call AndroidJNISafe.FromDoubleArray, X0
	415 Move X8, 0x1E6C000
	416 Move X0, [X23]
	417 Move X8, [X8+3440]
	418 Move W9, [X0+224]
	419 Move X22, [X8]
	420 Compare W9, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move X0, X22
	424 Move X1, X31
	425 Call Type.GetTypeFromHandle, X0
	426 Move X1, X0
	427 Move X0, X21
	428 Move X2, X31
	429 Call Type.op_Equality, X0, X1
	430 Move TEMP, X0
	431 And TEMP, TEMP, 1
	432 Compare TEMP, 1
	433 JumpIfNotEqual {470}
	434 Move X0, X20
	435 Move X1, X31
	436 Call AndroidJNISafe.FromCharArray, X0
	437 Move X8, [X19+56]
	438 Move X21, X0
	439 Move X1, [X8+8]
	440 Move W8, [X1+309]
	441 Move TEMP, X8
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfEqual {448}
	445 Move X0, X1
	446 Call 0x1C5D684
	447 Move X1, X0
	448 Compare X21, 0
	449 JumpIfEqual {471}
	450 Move X8, [X21]
	451 Move X9, [X1+64]
	452 Move X0, X21
	453 Move X8, [X8+64]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Call 0x1C17E08
	456 Move W8, [X0]
	457 NotImplemented "Instruction CMP not yet implemented."
	458 NotImplemented "Instruction CSET not yet implemented."
	459 Move X20, [X31+64]
	460 Move X19, [X31+72]
	461 Move X22, [X31+48]
	462 Move X21, [X31+56]
	463 Move X24, [X31+32]
	464 Move X23, [X31+40]
	465 Move X26, [X31+16]
	466 Move X25, [X31+24]
	467 Move X30, [X31+80]
	468 Move X27, [X31+88]
	469 Return X0
	470 Move W0, W31
	471 Call 0x1C17F20
	472 Call 0x1C17F28
	473 Call 0x1C17F44
	474 Move X1, X31
	475 Call 0x1C17DEC
	476 Call 0x1C181E0
	477 Move X0, 0x1E6D000
	478 Move X0, [X0+2592]
	479 Call 0x1C17D08
	480 Move X20, X0
	481 Compare X21, 0
	482 JumpIfEqual {489}
	483 Move X8, [X21]
	484 Move X0, X21
	485 Move X9, [X8+360]
	486 Move X1, [X8+368]
	487 NotImplemented "Instruction BLR not yet implemented."
	488 Move X21, X0
	489 Move X0, 0x1E4C000
	490 Move X0, [X0+2480]
	491 Call 0x1C17D08
	492 Move X2, X0
	493 Move X0, X20
	494 Move X1, X21
	495 Move X3, X31
	496 Call String.Concat, X0, X1, X2
	497 Move X20, X0
	498 Move X0, 0x1E44000
	499 Move X0, [X0+2000]
	500 Call 0x1C17D08
	501 Call 0x1C17F10
	502 Move X1, X20
	503 Move X2, X31
	504 Move X21, X0
	505 Call Exception..ctor, X0, X1
	506 Move X0, X21
	507 Move X1, X19
	508 Call 0x1C17DEC

Method: System.IntPtr GetConstructorID(System.IntPtr jclass, System.Object[] args)

Disassembly:
	0x03BE5A1C AND X8, X8, 0x0
	0x03BE5A20 ADD X22, X19, 0x20
	0x03BE5A24 CMP X21, W8, UXTW
	0x03BE5A28 B.CS 0x3BE5AA4
	0x03BE5A2C LDR X0, [X22, X21, LSL #3]
	0x03BE5A30 BL 0x3BE4AB0
	0x03BE5A34 MOV X1, X0
	0x03BE5A38 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X1
	005 Call _AndroidJNIHelper.GetSignature, X0
	006 Move X1, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call _AndroidJNIHelper.GetConstructorID, X0, X1
	011 Return X0

Method: System.IntPtr GetMethodID(System.IntPtr jclass, System.String methodName, System.Object[] args, System.Boolean isStatic)

Disassembly:
	0x03BE5A74 LDP X20, X19, [X31 + 0x20]
	0x03BE5A78 LDP X22, X21, [X31 + 0x10]
	0x03BE5A7C LDP X2, X1, [X8 + 0x168]
	0x03BE5A80 LDR X30, [X31], #0x30
	0x03BE5A84 BR X2
	0x03BE5A88 ADRP X8, 0x579000
	0x03BE5A8C LDR X8, [X8 + 0x338]
	0x03BE5A90 LDP X20, X19, [X31 + 0x20]
	0x03BE5A94 LDP X22, X21, [X31 + 0x10]
	0x03BE5A98 LDR X0, [X8]
	0x03BE5A9C LDR X30, [X31], #0x30
	0x03BE5AA0 RET
	0x03BE5AA4 BL 0x1C16F28
	0x03BE5AA8 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, X2
	007 Move W19, W3
	008 Move X20, X1
	009 Call _AndroidJNIHelper.GetSignature, X0
	010 And W3, W19, 1
	011 Move X1, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X2, X0
	015 Move X0, X21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call _AndroidJNIHelper.GetMethodID, X0, X1, X2, X3
	019 Return X0

Method: System.IntPtr GetMethodID(System.IntPtr jclass, System.String methodName, System.Object[] args, System.Boolean isStatic)

Disassembly:
	0x022B437C CBZ X8, 0x22B4478
	0x022B4380 CBZ X21, 0x22B4484
	0x022B4384 LDR W8, [X21 + 0x18]
	0x022B4388 CBZ W8, 0x22B4484
	0x022B438C ADRP X8, 0x1E3F000
	0x022B4390 LDR X8, [X8 + 0x8F0]
	0x022B4394 LDR X0, [X8]
	0x022B4398 BL 0x1C16F10
	0x022B439C MOV X1, X31
	0x022B43A0 MOV X20, X0
	0x022B43A4 BL 0x3231AC4
	0x022B43A8 CBZ X20, 0x22B44E4
	0x022B43AC MOVZ W1, 0x28
	0x022B43B0 MOV X0, X20
	0x022B43B4 MOV X2, X31
	0x022B43B8 BL 0x3233D30
	0x022B43BC LDR X8, [X21 + 0x18]
	0x022B43C0 CMP W8, 0x1
	0x022B43C4 B.LT 0x22B4408
	0x022B43C8 MOV X22, X31
	0x022B43CC AND X8, X8, 0x0
	0x022B43D0 ADD X23, X21, 0x20
	0x022B43D4 CMP X22, W8, UXTW
	0x022B43D8 B.CS 0x22B44E0
	0x022B43DC LDR X0, [X23, X22, LSL #3]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W20, W3
	009 Move X22, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X1, [X8]
	019 Move X0, X22
	020 Call 0x22B4768, X0
	021 And W3, W20, 1
	022 Move X2, X0
	023 Move X0, X21
	024 Move X1, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X4, X31
	030 Move X30, [X31+48]
	031 Move X23, [X31+56]
	032 Call AndroidJNIHelper.GetMethodID, X0, X1, X2, X3
	033 Return X0

Method: System.IntPtr GetFieldID(System.IntPtr jclass, System.String fieldName, System.Boolean isStatic)

Disassembly:
	0x022B41B4 LDR X0, [X0 + 0x6C0]
	0x022B41B8 BL 0x1C16CF4
	0x022B41BC ADRP X0, 0x1E68000
	0x022B41C0 LDR X0, [X0 + 0xA28]
	0x022B41C4 BL 0x1C16CF4
	0x022B41C8 LDR X8, [X19 + 0x38]
	0x022B41CC CBZ X8, 0x22B42C8
	0x022B41D0 CBZ X21, 0x22B42D4
	0x022B41D4 LDR W8, [X21 + 0x18]
	0x022B41D8 CBZ W8, 0x22B42D4
	0x022B41DC ADRP X8, 0x1E3F000
	0x022B41E0 LDR X8, [X8 + 0x8F0]
	0x022B41E4 LDR X0, [X8]
	0x022B41E8 BL 0x1C16F10
	0x022B41EC MOV X1, X31
	0x022B41F0 MOV X20, X0
	0x022B41F4 BL 0x3231AC4
	0x022B41F8 CBZ X20, 0x22B4334
	0x022B41FC MOVZ W1, 0x28
	0x022B4200 MOV X0, X20
	0x022B4204 MOV X2, X31
	0x022B4208 BL 0x3233D30
	0x022B420C LDR X8, [X21 + 0x18]
	0x022B4210 CMP W8, 0x1
	0x022B4214 B.LT 0x22B4258
	0x022B4218 MOV X22, X31
	0x022B421C AND X8, X8, 0x0
	0x022B4220 ADD X23, X21, 0x20
	0x022B4224 CMP X22, W8, UXTW
	0x022B4228 B.CS 0x22B4330
	0x022B422C LDR X0, [X23, X22, LSL #3]
	0x022B4230 MOV X1, X31
	0x022B4234 BL 0x3BE4AB0
	0x022B4238 MOV X1, X0
	0x022B423C MOV X0, X20
	0x022B4240 MOV X2, X31
	0x022B4244 BL 0x32333E0
	0x022B4248 LDR W8, [X21 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move W20, W2
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {22}
	012 Move X0, 0x1E40000
	013 Move X0, [X0+1728]
	014 Move X22, X3
	015 Call 0x1C17CF4
	016 Move X8, [X22+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X22
	020 Call 0x1C5D6E0
	021 Move X8, [X22+56]
	022 Move X9, 0x1E40000
	023 Move X9, [X9+1728]
	024 Move X22, [X8]
	025 Move X0, [X9]
	026 Move W9, [X0+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X31
	032 Call Type.GetTypeFromHandle, X0
	033 Move X1, X31
	034 Call _AndroidJNIHelper.GetSignature, X0
	035 And W3, W20, 1
	036 Move X2, X0
	037 Move X0, X21
	038 Move X1, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X4, X31
	044 Move X30, [X31+48]
	045 Call AndroidJNIHelper.GetFieldID, X0, X1, X2, X3
	046 Return X0

Method: System.IntPtr GetConstructorID(System.IntPtr jclass, System.String signature)

Disassembly:
	0x03BE3BF0 BL 0x1C16DFC
	0x03BE3BF4 CBZ X21, 0x3BE4078
	0x03BE3BF8 LDR X8, [X21]
	0x03BE3BFC MOV X0, X21
	0x03BE3C00 MOV X1, X20
	0x03BE3C04 LDR X9, [X8 + 0x2A8]
	0x03BE3C08 LDR X2, [X8 + 0x2B0]
	0x03BE3C0C BLR X9
	0x03BE3C10 TBZ X0, 0x0, 0x3BE4094
	0x03BE3C14 ADRP X8, 0x57B000
	0x03BE3C18 LDR X8, [X8 + 0x260]
	0x03BE3C1C MOV X0, X19
	0x03BE3C20 LDR X21, [X8]
	0x03BE3C24 MOV X1, X21
	0x03BE3C28 BL 0x1C16E00
	0x03BE3C2C CBZ X0, 0x3BE407C
	0x03BE3C30 MOV X20, X0
	0x03BE3C34 MOV X0, X19
	0x03BE3C38 MOV W1, W31
	0x03BE3C3C MOV X2, X31
	0x03BE3C40 BL 0x33A0EDC
	0x03BE3C44 ADRP X8, 0x549000
	0x03BE3C48 LDR X8, [X8 + 0x448]
	0x03BE3C4C MOV W22, W0
	0x03BE3C50 MOV W1, W22
	0x03BE3C54 LDR X8, [X8]
	0x03BE3C58 MOV X0, X8
	0x03BE3C5C BL 0x1C16D6C
	0x03BE3C60 ADRP X8, 0x57B000
	0x03BE3C64 LDR X8, [X8 + 0x278]
	0x03BE3C68 MOV X19, X0
	0x03BE3C6C LDR X8, [X8]
	0x03BE3C70 MOV X0, X8
	0x03BE3C74 BL 0x3BE5BAC
	0x03BE3C78 CMP W22, 0x1
	0x03BE3C7C MOV X21, X0
	0x03BE3C80 B.LT 0x3BE3D7C
	0x03BE3C84 MOV W26, W22
	0x03BE3C88 ADRP X22, 0xFFFFFFFFFCF3D000
	0x03BE3C8C MOV X25, X31
	0x03BE3C90 MOV X23, X31
	0x03BE3C94 ADD X27, X20, 0x20
	0x03BE3C98 ADD X28, X19, 0x20
	0x03BE3C9C ADRP X29, 0x800000
	0x03BE3CA0 ADD X22, X22, 0x48C
	0x03BE3CA4 LDR W8, [X20 + 0x18]
	0x03BE3CA8 CMP X25, X8
	0x03BE3CAC B.CS 0x3BE4074
	0x03BE3CB0 LDR X0, [X27, X25, LSL #3]
	0x03BE3CB4 CBZ X0, 0x3BE3D50
	0x03BE3CB8 BL 0x3BF09A0
	0x03BE3CBC CBZ X19, 0x3BE4078
	0x03BE3CC0 LDR W8, [X19 + 0x18]
	0x03BE3CC4 CMP X25, X8
	0x03BE3CC8 B.CS 0x3BE4074
	0x03BE3CCC STR X0, [X28, X25, LSL #3]
	0x03BE3CD0 LDR W8, [X20 + 0x18]
	0x03BE3CD4 CMP X25, X8
	0x03BE3CD8 B.CS 0x3BE4074
	0x03BE3CDC LDR X8, [X27, X25, LSL #3]
	0x03BE3CE0 CBZ X8, 0x3BE4078
	0x03BE3CE4 LDR X8, [X8 + 0x10]
	0x03BE3CE8 CBZ X8, 0x3BE4078
	0x03BE3CEC LDR X8, [X8 + 0x18]
	0x03BE3CF0 CBZ X8, 0x3BE4078
	0x03BE3CF4 LDR X24, [X8 + 0x18]
	0x03BE3CF8 MOV X0, X23
	0x03BE3CFC MOV X1, X31
	0x03BE3D00 MOV X2, X31
	0x03BE3D04 BL 0x33BE5B0
	0x03BE3D08 TBNZ X0, 0x0, 0x3BE3D68
	0x03BE3D0C MOV X0, X23
	0x03BE3D10 MOV X1, X21
	0x03BE3D14 MOV X2, X31
	0x03BE3D18 BL 0x33C5D2C
	0x03BE3D1C TBZ X0, 0x0, 0x3BE3D64
	0x03BE3D20 LDR X8, [X29 + 0x270]
	0x03BE3D24 CBNZ X8, 0x3BE3D38
	0x03BE3D28 MOV X0, X22
	0x03BE3D2C BL 0x1C16CB8
	0x03BE3D30 MOV X8, X0
	0x03BE3D34 STR X0, [X29 + 0x270]
	0x03BE3D38 MOV X0, X23
	0x03BE3D3C MOV X1, X24
	0x03BE3D40 BLR X8
	0x03BE3D44 MOV X24, X21
	0x03BE3D48 TBNZ X0, 0x0, 0x3BE3D64
	0x03BE3D4C B 0x3BE3D68
	0x03BE3D50 CBZ X19, 0x3BE4078
	0x03BE3D54 LDR W8, [X19 + 0x18]
	0x03BE3D58 CMP X25, X8
	0x03BE3D5C B.CS 0x3BE4074
	0x03BE3D60 STR X31, [X28, X25, LSL #3]
	0x03BE3D64 MOV X24, X23
	0x03BE3D68 ADD X25, X25, 0x1
	0x03BE3D6C CMP X26, X25
	0x03BE3D70 MOV X23, X24
	0x03BE3D74 B.NE 0x3BE3CA4
	0x03BE3D78 B 0x3BE3D80
	0x03BE3D7C MOV X24, X31
	0x03BE3D80 MOV X0, X19
	0x03BE3D84 MOV X1, X24
	0x03BE3D88 BL 0x3BEE7D0
	0x03BE3D8C MOV X19, X0
	0x03BE3D90 MOV X0, X21
	0x03BE3D94 BL 0x3BEBA40
	0x03BE3D98 MOV X0, X19
	0x03BE3D9C LDP X20, X19, [X31 + 0x50]
	0x03BE3DA0 LDP X22, X21, [X31 + 0x40]
	0x03BE3DA4 LDP X24, X23, [X31 + 0x30]
	0x03BE3DA8 LDP X26, X25, [X31 + 0x20]
	0x03BE3DAC LDP X28, X27, [X31 + 0x10]
	0x03BE3DB0 LDP X29, X30, [X31], #0x60
	0x03BE3DB4 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x801000
	007 Move X22, 0x53A000
	008 Move W8, [X19+1945]
	009 Move X22, [X22+1696]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x53A000
	017 Move X0, [X0+1696]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1945], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X21
	027 Move X1, X20
	028 Call AndroidReflection.GetConstructorMember, X0, X1
	029 Move X19, X0
	030 Call AndroidJNISafe.FromReflectedMethod, X0
	031 Move X22, X0
	032 Move X0, X19
	033 Call AndroidJNISafe.DeleteLocalRef, X0
	034 Move X0, X22
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0
	041 Move X22, X0
	042 Move X22, X0
	043 Move X19, X31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X22
	046 Call 0x3EB2AD0
	047 Move X22, X0
	048 Move X0, 0x511000
	049 Move X0, [X0+2000]
	050 Call 0x1C17D08
	051 Move X8, [X22]
	052 Move X1, [X8]
	053 Call 0x1C18270
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {76}
	058 Move X22, [X22]
	059 Call 0x3EB2AE0
	060 Move X0, 0x57C000
	061 Move X0, [X0+560]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X21
	065 Move X2, X20
	066 Call AndroidJNISafe.GetMethodID, X0, X1, X2
	067 Move X20, X0
	068 Move X1, X31
	069 Move X2, X31
	070 Call IntPtr.op_Inequality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {84}
	075 Move X22, X20
	076 Move W0, 8
	077 Call 0x3EB2AF0
	078 Move X8, [X22]
	079 Move [X0], X8
	080 Move X1, 0x2D2000
	081 Add X1, X1, 3672
	082 Move X2, X31
	083 Call 0x3EB2B00
	084 Move X0, 0x57C000
	085 Move X0, [X0+568]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X22
	089 Call 0x1C17DEC
	090 Move X22, X0
	091 Move X22, X0
	092 Move X20, X1
	093 Move X22, X0
	094 Call 0x3EB2AE0
	095 Move W1, W20
	096 Move W8, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X22
	099 Call 0x3EB2AD0
	100 Move X20, [X0]
	101 Call 0x3EB2AE0
	102 Move X0, X19
	103 Call AndroidJNISafe.DeleteLocalRef, X0
	104 Compare X20, 0
	105 JumpIfNotEqual {108}
	106 Move X22, X31
	107 Move X20, X31
	108 Move X0, X20
	109 Call 0x1C17F18
	110 Move X22, X0
	111 Move X0, X19
	112 Call AndroidJNISafe.DeleteLocalRef, X0
	113 Compare X20, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X22
	116 Call 0x1D2D690
	117 Move X0, X20
	118 Call 0x1C17F18
	119 Call 0x1991590

Method: System.IntPtr GetMethodID(System.IntPtr jclass, System.String methodName, System.String signature, System.Boolean isStatic)

Disassembly:
	0x03BE3E24 LDP X29, X30, [X31], #0x60
	0x03BE3E28 B 0x3BEEB40
	0x03BE3E2C ADRP X8, 0x537000
	0x03BE3E30 LDR X0, [X22]
	0x03BE3E34 LDR X8, [X8 + 0xD78]
	0x03BE3E38 LDR W9, [X0 + 0xE0]
	0x03BE3E3C LDR X21, [X8]
	0x03BE3E40 CBNZ W9, 0x3BE3E48
	0x03BE3E44 BL 0x1C16DFC
	0x03BE3E48 MOV X0, X21
	0x03BE3E4C MOV X1, X31
	0x03BE3E50 BL 0x338C698
	0x03BE3E54 MOV X1, X0
	0x03BE3E58 MOV X0, X20
	0x03BE3E5C MOV X2, X31
	0x03BE3E60 BL 0x3395194
	0x03BE3E64 TBZ X0, 0x0, 0x3BE3EA0
	0x03BE3E68 ADRP X8, 0x538000
	0x03BE3E6C LDR X8, [X8 + 0x820]
	0x03BE3E70 MOV X0, X19
	0x03BE3E74 LDR X20, [X8]
	0x03BE3E78 MOV X1, X20
	0x03BE3E7C BL 0x1C16E00
	0x03BE3E80 CBZ X0, 0x3BE4088
	0x03BE3E84 LDP X20, X19, [X31 + 0x50]
	0x03BE3E88 LDP X22, X21, [X31 + 0x40]
	0x03BE3E8C LDP X24, X23, [X31 + 0x30]
	0x03BE3E90 LDP X26, X25, [X31 + 0x20]
	0x03BE3E94 LDP X28, X27, [X31 + 0x10]
	0x03BE3E98 LDP X29, X30, [X31], #0x60
	0x03BE3E9C B 0x3BEEA28
	0x03BE3EA0 ADRP X8, 0x537000
	0x03BE3EA4 LDR X0, [X22]
	0x03BE3EA8 LDR X8, [X8 + 0xD88]
	0x03BE3EAC LDR W9, [X0 + 0xE0]
	0x03BE3EB0 LDR X21, [X8]
	0x03BE3EB4 CBNZ W9, 0x3BE3EBC
	0x03BE3EB8 BL 0x1C16DFC
	0x03BE3EBC MOV X0, X21
	0x03BE3EC0 MOV X1, X31
	0x03BE3EC4 BL 0x338C698
	0x03BE3EC8 MOV X1, X0
	0x03BE3ECC MOV X0, X20
	0x03BE3ED0 MOV X2, X31
	0x03BE3ED4 BL 0x3395194
	0x03BE3ED8 TBZ X0, 0x0, 0x3BE3F14
	0x03BE3EDC ADRP X8, 0x541000
	0x03BE3EE0 LDR X8, [X8 + 0x838]
	0x03BE3EE4 MOV X0, X19
	0x03BE3EE8 LDR X20, [X8]
	0x03BE3EEC MOV X1, X20
	0x03BE3EF0 BL 0x1C16E00
	0x03BE3EF4 CBZ X0, 0x3BE4088
	0x03BE3EF8 LDP X20, X19, [X31 + 0x50]
	0x03BE3EFC LDP X22, X21, [X31 + 0x40]
	0x03BE3F00 LDP X24, X23, [X31 + 0x30]
	0x03BE3F04 LDP X26, X25, [X31 + 0x20]
	0x03BE3F08 LDP X28, X27, [X31 + 0x10]
	0x03BE3F0C LDP X29, X30, [X31], #0x60
	0x03BE3F10 B 0x3BEE9B0
	0x03BE3F14 ADRP X8, 0x538000
	0x03BE3F18 LDR X0, [X22]
	0x03BE3F1C LDR X8, [X8 + 0xA80]
	0x03BE3F20 LDR W9, [X0 + 0xE0]
	0x03BE3F24 LDR X21, [X8]
	0x03BE3F28 CBNZ W9, 0x3BE3F30
	0x03BE3F2C BL 0x1C16DFC
	0x03BE3F30 MOV X0, X21
	0x03BE3F34 MOV X1, X31
	0x03BE3F38 BL 0x338C698
	0x03BE3F3C MOV X1, X0
	0x03BE3F40 MOV X0, X20
	0x03BE3F44 MOV X2, X31
	0x03BE3F48 BL 0x3395194
	0x03BE3F4C TBZ X0, 0x0, 0x3BE3F88
	0x03BE3F50 ADRP X8, 0x510000
	0x03BE3F54 LDR X8, [X8 + 0x638]
	0x03BE3F58 MOV X0, X19
	0x03BE3F5C LDR X20, [X8]
	0x03BE3F60 MOV X1, X20
	0x03BE3F64 BL 0x1C16E00
	0x03BE3F68 CBZ X0, 0x3BE4088
	0x03BE3F6C LDP X20, X19, [X31 + 0x50]
	0x03BE3F70 LDP X22, X21, [X31 + 0x40]
	0x03BE3F74 LDP X24, X23, [X31 + 0x30]
	0x03BE3F78 LDP X26, X25, [X31 + 0x20]
	0x03BE3F7C LDP X28, X27, [X31 + 0x10]
	0x03BE3F80 LDP X29, X30, [X31], #0x60
	0x03BE3F84 B 0x3BEE938
	0x03BE3F88 ADRP X8, 0x538000
	0x03BE3F8C LDR X0, [X22]
	0x03BE3F90 LDR X8, [X8 + 0xA78]
	0x03BE3F94 LDR W9, [X0 + 0xE0]
	0x03BE3F98 LDR X21, [X8]
	0x03BE3F9C CBNZ W9, 0x3BE3FA4
	0x03BE3FA0 BL 0x1C16DFC
	0x03BE3FA4 MOV X0, X21
	0x03BE3FA8 MOV X1, X31
	0x03BE3FAC BL 0x338C698
	0x03BE3FB0 MOV X1, X0
	0x03BE3FB4 MOV X0, X20
	0x03BE3FB8 MOV X2, X31
	0x03BE3FBC BL 0x3395194
	0x03BE3FC0 TBZ X0, 0x0, 0x3BE3FFC
	0x03BE3FC4 ADRP X8, 0x541000
	0x03BE3FC8 LDR X8, [X8 + 0x830]
	0x03BE3FCC MOV X0, X19
	0x03BE3FD0 LDR X20, [X8]
	0x03BE3FD4 MOV X1, X20
	0x03BE3FD8 BL 0x1C16E00
	0x03BE3FDC CBZ X0, 0x3BE4088
	0x03BE3FE0 LDP X20, X19, [X31 + 0x50]
	0x03BE3FE4 LDP X22, X21, [X31 + 0x40]
	0x03BE3FE8 LDP X24, X23, [X31 + 0x30]
	0x03BE3FEC LDP X26, X25, [X31 + 0x20]
	0x03BE3FF0 LDP X28, X27, [X31 + 0x10]
	0x03BE3FF4 LDP X29, X30, [X31], #0x60
	0x03BE3FF8 B 0x3BEE8C0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x801000
	009 Move X24, 0x53A000
	010 Move W8, [X19+1946]
	011 Move X24, [X24+1696]
	012 Move W22, W3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x53A000
	021 Move X0, [X0+1696]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1946], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 And W3, W22, 1
	031 Move X0, X23
	032 Move X1, X21
	033 Move X2, X20
	034 Call AndroidReflection.GetMethodMember, X0, X1, X2, X3
	035 Move X19, X0
	036 Call AndroidJNISafe.FromReflectedMethod, X0
	037 Move X24, X0
	038 Move X0, X19
	039 Call AndroidJNISafe.DeleteLocalRef, X0
	040 Move X0, X24
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 Return X0
	049 Move X24, X0
	050 Move X24, X0
	051 Move X19, X31
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X24
	054 Call 0x3EB2AD0
	055 Move X24, X0
	056 Move X0, 0x511000
	057 Move X0, [X0+2000]
	058 Call 0x1C17D08
	059 Move X8, [X24]
	060 Move X1, [X8]
	061 Call 0x1C18270
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {82}
	066 Move X24, [X24]
	067 Call 0x3EB2AE0
	068 And W3, W22, 1
	069 Move X0, X23
	070 Move X1, X21
	071 Move X2, X20
	072 Call _AndroidJNIHelper.GetMethodIDFallback, X0, X1, X2, X3
	073 Move X20, X0
	074 Move X1, X31
	075 Move X2, X31
	076 Call IntPtr.op_Inequality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {90}
	081 Move X24, X20
	082 Move W0, 8
	083 Call 0x3EB2AF0
	084 Move X8, [X24]
	085 Move [X0], X8
	086 Move X1, 0x2D2000
	087 Add X1, X1, 3672
	088 Move X2, X31
	089 Call 0x3EB2B00
	090 Move X0, 0x57C000
	091 Move X0, [X0+576]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X24
	095 Call 0x1C17DEC
	096 Move X24, X0
	097 Move X24, X0
	098 Move X20, X1
	099 Move X24, X0
	100 Call 0x3EB2AE0
	101 Move W1, W20
	102 Move W8, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X24
	105 Call 0x3EB2AD0
	106 Move X20, [X0]
	107 Call 0x3EB2AE0
	108 Move X0, X19
	109 Call AndroidJNISafe.DeleteLocalRef, X0
	110 Compare X20, 0
	111 JumpIfNotEqual {114}
	112 Move X24, X31
	113 Move X20, X31
	114 Move X0, X20
	115 Call 0x1C17F18
	116 Move X24, X0
	117 Move X0, X19
	118 Call AndroidJNISafe.DeleteLocalRef, X0
	119 Compare X20, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X24
	122 Call 0x1D2D690
	123 Move X0, X20
	124 Call 0x1C17F18
	125 Call 0x1991590

Method: System.IntPtr GetMethodIDFallback(System.IntPtr jclass, System.String methodName, System.String signature, System.Boolean isStatic)

Disassembly:
	0x03BF5498 MOV X2, X21
	0x03BF549C BL 0x1C24138
	0x03BF54A0 CMP X21, X0
	0x03BF54A4 MOV X21, X0
	0x03BF54A8 B.NE 0x3BF5460
	0x03BF54AC LDP X20, X19, [X31 + 0x30]
	0x03BF54B0 LDP X22, X21, [X31 + 0x20]
	0x03BF54B4 LDP X24, X23, [X31 + 0x10]
	0x03BF54B8 LDR X30, [X31], #0x40
	0x03BF54BC RET
	0x03BF54C0 MOV X0, X22
	0x03BF54C4 MOV X1, X23
	0x03BF54C8 BL 0x1C171E0
	0x03BF54CC STR X30, [X31 - 0x40]!
	0x03BF54D0 STP X24, X23, [X31 + 0x10]
	0x03BF54D4 STP X22, X21, [X31 + 0x20]
	0x03BF54D8 STP X20, X19, [X31 + 0x30]
	0x03BF54DC ADRP X21, 0x7EE000
	0x03BF54E0 LDRB W8, [X21 + 0x7B9]
	0x03BF54E4 MOV X19, X1
	0x03BF54E8 MOV X20, X0
	0x03BF54EC TBNZ X8, 0x0, 0x3BF5504
	0x03BF54F0 ADRP X0, 0x4FF000
	0x03BF54F4 LDR X0, [X0 + 0xE68]
	0x03BF54F8 BL 0x1C16CF4
	0x03BF54FC MOVZ W8, 0x1
	0x03BF5500 STRB W8, [X21 + 0x7B9]
	0x03BF5504 ADRP X24, 0x4FF000
	0x03BF5508 LDR X21, [X20 + 0x28]!
	0x03BF550C LDR X24, [X24 + 0xE68]
	0x03BF5510 MOV X0, X21
	0x03BF5514 MOV X1, X19
	0x03BF5518 MOV X2, X31
	0x03BF551C BL 0x33C0DE4
	0x03BF5520 CBZ X0, 0x3BF5540
	0x03BF5524 LDR X23, [X24]
	0x03BF5528 MOV X22, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, X3
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {8}
	007 Call AndroidJNISafe.GetStaticMethodID, X0, X1, X2
	008 Call AndroidJNISafe.GetMethodID, X0, X1, X2
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X19, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, X19
	015 Call 0x3EB2AD0
	016 Move X19, X0
	017 Move X0, 0x4FF000
	018 Move X0, [X0+2000]
	019 Call 0x1C17D08
	020 Move X8, [X19]
	021 Move X1, [X8]
	022 Call 0x1C18270
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {29}
	027 Call 0x3EB2AE0
	028 Move X0, X31
	029 Move W0, 8
	030 Call 0x3EB2AF0
	031 Move X8, [X19]
	032 Move [X0], X8
	033 Move X1, 0x2C0000
	034 Add X1, X1, 3672
	035 Move X2, X31
	036 Call 0x3EB2B00
	037 Move X19, X0
	038 Call 0x3EB2AE0
	039 Move X0, X19
	040 Call 0x1D2D690
	041 Call 0x1991590

Method: System.IntPtr GetFieldID(System.IntPtr jclass, System.String fieldName, System.String signature, System.Boolean isStatic)

Disassembly:
	0x03BE4068 LDP X28, X27, [X31 + 0x10]
	0x03BE406C LDP X29, X30, [X31], #0x60
	0x03BE4070 B 0x3BEE848
	0x03BE4074 BL 0x1C16F28
	0x03BE4078 BL 0x1C16F20
	0x03BE407C MOV X0, X19
	0x03BE4080 MOV X1, X21
	0x03BE4084 BL 0x1C171E0
	0x03BE4088 MOV X0, X19
	0x03BE408C MOV X1, X20
	0x03BE4090 BL 0x1C171E0
	0x03BE4094 ADRP X0, 0x57A000
	0x03BE4098 LDR X0, [X0 + 0x280]
	0x03BE409C BL 0x1C16D08
	0x03BE40A0 LDR X8, [X20]
	0x03BE40A4 MOV X19, X0
	0x03BE40A8 MOV X0, X20
	0x03BE40AC LDP X9, X1, [X8 + 0x168]
	0x03BE40B0 BLR X9
	0x03BE40B4 MOV X20, X0
	0x03BE40B8 ADRP X0, 0x517000
	0x03BE40BC LDR X0, [X0 + 0x9B0]
	0x03BE40C0 BL 0x1C16D08
	0x03BE40C4 MOV X2, X0
	0x03BE40C8 MOV X0, X19
	0x03BE40CC MOV X1, X20
	0x03BE40D0 MOV X3, X31
	0x03BE40D4 BL 0x32274B8
	0x03BE40D8 MOV X19, X0
	0x03BE40DC ADRP X0, 0x50F000
	0x03BE40E0 LDR X0, [X0 + 0x7D0]
	0x03BE40E4 BL 0x1C16D08
	0x03BE40E8 BL 0x1C16F10
	0x03BE40EC MOV X1, X19
	0x03BE40F0 MOV X2, X31
	0x03BE40F4 MOV X20, X0
	0x03BE40F8 BL 0x33B2C70
	0x03BE40FC ADRP X0, 0x57A000
	0x03BE4100 LDR X0, [X0 + 0x288]
	0x03BE4104 BL 0x1C16D08
	0x03BE4108 MOV X1, X0
	0x03BE410C MOV X0, X20
	0x03BE4110 BL 0x1C16DEC
	0x03BE4114 STR X30, [X31 - 0x20]!
	0x03BE4118 STP X20, X19, [X31 + 0x10]
	0x03BE411C ADRP X20, 0x7FF000
	0x03BE4120 LDRB W8, [X20 + 0x183]
	0x03BE4124 MOV X19, X0
	0x03BE4128 TBNZ X8, 0x0, 0x3BE414C
	0x03BE412C ADRP X0, 0x57A000
	0x03BE4130 LDR X0, [X0 + 0x290]
	0x03BE4134 BL 0x1C16CF4
	0x03BE4138 ADRP X0, 0x551000
	0x03BE413C LDR X0, [X0 + 0xEE8]
	0x03BE4140 BL 0x1C16CF4
	0x03BE4144 MOVZ W8, 0x1
	0x03BE4148 STRB W8, [X20 + 0x183]
	0x03BE414C CBZ X19, 0x3BE41A0
	0x03BE4150 ADRP X8, 0x551000
	0x03BE4154 LDR X8, [X8 + 0xEE8]
	0x03BE4158 LDR W1, [X19 + 0x18]
	0x03BE415C ADRP X20, 0x57A000
	0x03BE4160 LDR X0, [X8]
	0x03BE4164 LDR X20, [X20 + 0x290]
	0x03BE4168 BL 0x1C16D6C
	0x03BE416C LDR X1, [X20]
	0x03BE4170 MOV X20, X0
	0x03BE4174 BL 0x25FF670
	0x03BE4178 MOV X2, X0
	0x03BE417C MOV X3, X1
	0x03BE4180 MOV X0, X19
	0x03BE4184 MOV X1, X2
	0x03BE4188 MOV X2, X3
	0x03BE418C BL 0x3BE41A4
	0x03BE4190 MOV X0, X20
	0x03BE4194 LDP X20, X19, [X31 + 0x10]
	0x03BE4198 LDR X30, [X31], #0x20
	0x03BE419C RET
	0x03BE41A0 BL 0x1C16F20
	0x03BE41A4 STP X29, X30, [X31 - 0x60]!
	0x03BE41A8 STP X28, X27, [X31 + 0x10]
	0x03BE41AC STP X26, X25, [X31 + 0x20]
	0x03BE41B0 STP X24, X23, [X31 + 0x30]
	0x03BE41B4 STP X22, X21, [X31 + 0x40]
	0x03BE41B8 STP X20, X19, [X31 + 0x50]
	0x03BE41BC ADRP X22, 0x7FF000
	0x03BE41C0 LDRB W8, [X22 + 0x793]
	0x03BE41C4 MOV X21, X2
	0x03BE41C8 MOV X19, X1
	0x03BE41CC MOV X20, X0
	0x03BE41D0 TBNZ X8, 0x0, 0x3BE42B4
	0x03BE41D4 ADRP X0, 0x50F000
	0x03BE41D8 LDR X0, [X0 + 0x990]
	0x03BE41DC BL 0x1C16CF4
	0x03BE41E0 ADRP X0, 0x538000
	0x03BE41E4 LDR X0, [X0 + 0xA10]
	0x03BE41E8 BL 0x1C16CF4
	0x03BE41EC ADRP X0, 0x538000
	0x03BE41F0 LDR X0, [X0 + 0xAB8]
	0x03BE41F4 BL 0x1C16CF4
	0x03BE41F8 ADRP X0, 0x57A000
	0x03BE41FC LDR X0, [X0 + 0x298]
	0x03BE4200 BL 0x1C16CF4
	0x03BE4204 ADRP X0, 0x538000
	0x03BE4208 LDR X0, [X0 + 0x6A0]
	0x03BE420C BL 0x1C16CF4
	0x03BE4210 ADRP X0, 0x50F000
	0x03BE4214 LDR X0, [X0 + 0xB58]
	0x03BE4218 BL 0x1C16CF4
	0x03BE421C ADRP X0, 0x510000
	0x03BE4220 LDR X0, [X0 + 0x9D8]
	0x03BE4224 BL 0x1C16CF4
	0x03BE4228 ADRP X0, 0x511000
	0x03BE422C LDR X0, [X0 + 0x170]
	0x03BE4230 BL 0x1C16CF4
	0x03BE4234 ADRP X0, 0x50F000
	0x03BE4238 LDR X0, [X0 + 0xA28]
	0x03BE423C BL 0x1C16CF4
	0x03BE4240 ADRP X0, 0x512000
	0x03BE4244 LDR X0, [X0 + 0x978]
	0x03BE4248 BL 0x1C16CF4
	0x03BE424C ADRP X0, 0x513000
	0x03BE4250 LDR X0, [X0 + 0x628]
	0x03BE4254 BL 0x1C16CF4
	0x03BE4258 ADRP X0, 0x50F000
	0x03BE425C LDR X0, [X0 + 0x758]
	0x03BE4260 BL 0x1C16CF4
	0x03BE4264 ADRP X0, 0x511000
	0x03BE4268 LDR X0, [X0 + 0xA60]
	0x03BE426C BL 0x1C16CF4
	0x03BE4270 ADRP X0, 0x50F000
	0x03BE4274 LDR X0, [X0 + 0xEF0]
	0x03BE4278 BL 0x1C16CF4
	0x03BE427C ADRP X0, 0x538000
	0x03BE4280 LDR X0, [X0 + 0x6B0]
	0x03BE4284 BL 0x1C16CF4
	0x03BE4288 ADRP X0, 0x50F000
	0x03BE428C LDR X0, [X0 + 0xA90]
	0x03BE4290 BL 0x1C16CF4
	0x03BE4294 ADRP X0, 0x511000
	0x03BE4298 LDR X0, [X0 + 0x278]
	0x03BE429C BL 0x1C16CF4
	0x03BE42A0 ADRP X0, 0x57A000
	0x03BE42A4 LDR X0, [X0 + 0x2A0]
	0x03BE42A8 BL 0x1C16CF4
	0x03BE42AC MOVZ W8, 0x1
	0x03BE42B0 STRB W8, [X22 + 0x793]
	0x03BE42B4 CBZ X20, 0x3BE4680
	0x03BE42B8 LDR X8, [X20 + 0x18]
	0x03BE42BC CMP W8, 0x1
	0x03BE42C0 B.LT 0x3BE4660
	0x03BE42C4 ADRP X24, 0x538000
	0x03BE42C8 ADRP X25, 0x50F000
	0x03BE42CC ADRP X29, 0x511000
	0x03BE42D0 ADRP X28, 0x50F000
	0x03BE42D4 LDR X24, [X24 + 0x6A0]
	0x03BE42D8 LDR X25, [X25 + 0x758]
	0x03BE42DC LDR X29, [X29 + 0x278]
	0x03BE42E0 LDR X28, [X28 + 0x990]
	0x03BE42E4 MOV X23, X31
	0x03BE42E8 AND X27, X21, 0x0
	0x03BE42EC AND X8, X8, 0x0
	0x03BE42F0 ADD X26, X20, 0x20
	0x03BE42F4 CMP X23, W8, UXTW
	0x03BE42F8 B.CS 0x3BE467C
	0x03BE42FC LDR X21, [X26, X23, LSL #3]
	0x03BE4300 CBZ X21, 0x3BE4408
	0x03BE4304 MOV X0, X21
	0x03BE4308 MOV X1, X31
	0x03BE430C BL 0x33BE520
	0x03BE4310 LDR X8, [X24]
	0x03BE4314 MOV X22, X0
	0x03BE4318 LDR W9, [X8 + 0xE0]
	0x03BE431C CBNZ W9, 0x3BE4328
	0x03BE4320 MOV X0, X8
	0x03BE4324 BL 0x1C16DFC
	0x03BE4328 CBZ X22, 0x3BE4680
	0x03BE432C MOV X0, X22
	0x03BE4330 MOV X1, X31
	0x03BE4334 BL 0x3397374
	0x03BE4338 TBZ X0, 0x0, 0x3BE4418
	0x03BE433C LDR X9, [X25]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x800000
	009 Move W8, [X23+1947]
	010 Move W22, W3
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x539000
	019 Move X0, [X0+1696]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1947], W8
	023 Move X23, 0x800000
	024 Move X24, 0x539000
	025 Move X8, [X23+544]
	026 Move X24, [X24+1696]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51113984
	030 Add X0, X0, 1617
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X23+544], X0
	034 Move W0, 10
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X0, [X24]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 And W3, W22, 1
	042 Move X0, X21
	043 Move X1, X19
	044 Move X2, X20
	045 Call AndroidReflection.GetFieldMember, X0, X1, X2, X3
	046 Move X23, X0
	047 Move TEMP, X22
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {59}
	051 Move X0, [X24]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X23
	057 Call AndroidReflection.GetFieldClass, X0
	058 Move X21, X0
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X23
	065 Call AndroidReflection.GetFieldSignature, X0
	066 Move X23, X31
	067 Move X20, X0
	068 Move TEMP, X22
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {97}
	072 Move X0, X21
	073 Move X1, X19
	074 Move X2, X20
	075 Call AndroidJNISafe.GetStaticFieldID, X0, X1, X2
	076 Move X23, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X23
	079 Call 0x3EB2AD0
	080 Move X23, X0
	081 Move X0, 0x510000
	082 Move X0, [X0+2000]
	083 Call 0x1C17D08
	084 Move X8, [X23]
	085 Move X1, [X8]
	086 Call 0x1C18270
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {164}
	091 Move X23, [X23]
	092 Call 0x3EB2AE0
	093 Move TEMP, X22
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {72}
	097 Move X0, X21
	098 Move X1, X19
	099 Move X2, X20
	100 Call AndroidJNISafe.GetFieldID, X0, X1, X2
	101 Move X21, X0
	102 Move X1, X31
	103 Move X2, X31
	104 Call IntPtr.op_Equality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {134}
	109 Move X19, X31
	110 Move X20, 0x800000
	111 Move X8, [X20+552]
	112 Compare X8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, -51261440
	115 Add X0, X0, 1989
	116 Call 0x1C17CB8
	117 Move X8, X0
	118 Move [X20+552], X0
	119 Move X0, X31
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Compare X19, 0
	122 JumpIfNotEqual {132}
	123 Move X0, X21
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Move X30, [X31+64]
	131 Return X0
	132 Move X0, X19
	133 Call 0x1C17F18
	134 Compare X23, 0
	135 JumpIfNotEqual {158}
	136 Move X0, 0x57B000
	137 Move X0, [X0+584]
	138 Call 0x1C17D08
	139 Move X1, X19
	140 Move X2, X20
	141 Move X3, X31
	142 Call String.Format, X0, X1, X2
	143 Move X19, X0
	144 Move X0, 0x510000
	145 Move X0, [X0+2000]
	146 Call 0x1C17D08
	147 Call 0x1C17F10
	148 Move X20, X0
	149 Move X1, X19
	150 Move X2, X31
	151 Call Exception..ctor, X0, X1
	152 Move X0, 0x57B000
	153 Move X0, [X0+592]
	154 Call 0x1C17D08
	155 Move X1, X0
	156 Move X0, X20
	157 Call 0x1C17DEC
	158 Move X0, 0x57B000
	159 Move X0, [X0+592]
	160 Call 0x1C17D08
	161 Move X1, X0
	162 Move X0, X23
	163 Call 0x1C17DEC
	164 Move W0, 8
	165 Call 0x3EB2AF0
	166 Move X8, [X23]
	167 Move [X0], X8
	168 Move X1, 0x2D1000
	169 Add X1, X1, 3672
	170 Move X2, X31
	171 Call 0x3EB2B00
	172 Move X23, X0
	173 Call 0x3EB2AE0
	174 Move X0, X23
	175 Call 0x1D2D690
	176 Move X23, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X23
	179 Call 0x3EB2AD0
	180 Move X19, [X0]
	181 Call 0x3EB2AE0
	182 Move X21, X31
	183 Move X19, X31
	184 Move X23, X0
	185 Move X20, 0x800000
	186 Move X8, [X20+552]
	187 Compare X8, 0
	188 JumpIfNotEqual {194}
	189 Move X0, -51261440
	190 Add X0, X0, 1989
	191 Call 0x1C17CB8
	192 Move X8, X0
	193 Move [X20+552], X0
	194 Move X0, X31
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X19, 0
	197 JumpIfEqual {174}
	198 Move X0, X19
	199 Call 0x1C17F18
	200 Call 0x1991590

Method: System.String GetSignature(System.Object obj)

Disassembly:
	0x03BE5AB0 STP X22, X21, [X31 + 0x10]
	0x03BE5AB4 STP X20, X19, [X31 + 0x20]
	0x03BE5AB8 ADRP X22, 0x7FE000
	0x03BE5ABC STR X0, [X31 + 0x8]
	0x03BE5AC0 ADRP X21, 0x579000
	0x03BE5AC4 LDRB W8, [X22 + 0x186]
	0x03BE5AC8 LDR X21, [X21 + 0x348]
	0x03BE5ACC MOV X20, X2
	0x03BE5AD0 MOV X19, X1
	0x03BE5AD4 TBNZ X8, 0x0, 0x3BE5AF8
	0x03BE5AD8 ADRP X0, 0x537000
	0x03BE5ADC LDR X0, [X0 + 0x6B8]
	0x03BE5AE0 BL 0x1C16CF4
	0x03BE5AE4 ADRP X0, 0x579000
	0x03BE5AE8 LDR X0, [X0 + 0x348]
	0x03BE5AEC BL 0x1C16CF4
	0x03BE5AF0 MOVZ W8, 0x1
	0x03BE5AF4 STRB W8, [X22 + 0x186]
	0x03BE5AF8 MOV X0, X19
	0x03BE5AFC BL 0x3BE5BAC
	0x03BE5B00 LDR X1, [X21]
	0x03BE5B04 MOV X19, X0
	0x03BE5B08 MOV X2, X20
	0x03BE5B0C BL 0x3BE5C4C
	0x03BE5B10 MOV X1, X0
	0x03BE5B14 ADD X2, X31, 0x8
	0x03BE5B18 MOVZ W3, 0x1
	0x03BE5B1C MOV X0, X19
	0x03BE5B20 BL 0x3BE5D04
	0x03BE5B24 MOV X20, X0
	0x03BE5B28 MOV X0, X19
	0x03BE5B2C BL 0x3BEBA40
	0x03BE5B30 MOV X0, X20
	0x03BE5B34 LDP X20, X19, [X31 + 0x20]
	0x03BE5B38 LDP X22, X21, [X31 + 0x10]
	0x03BE5B3C LDR X30, [X31], #0x30
	0x03BE5B40 RET
	0x03BE5B44 B 0x3BE5B48
	0x03BE5B48 MOV X20, X0
	0x03BE5B4C CMP W1, 0x1
	0x03BE5B50 B.NE 0x3BE5B78
	0x03BE5B54 MOV X0, X20
	0x03BE5B58 BL 0x3EB1AD0
	0x03BE5B5C LDR X21, [X0]
	0x03BE5B60 BL 0x3EB1AE0
	0x03BE5B64 MOV X0, X19
	0x03BE5B68 BL 0x3BEBA40
	0x03BE5B6C CBNZ X21, 0x3BE5B80
	0x03BE5B70 MOV X20, X31
	0x03BE5B74 B 0x3BE5B30
	0x03BE5B78 MOV X21, X31
	0x03BE5B7C B 0x3BE5B8C
	0x03BE5B80 MOV X0, X21
	0x03BE5B84 BL 0x1C16F18
	0x03BE5B88 MOV X20, X0
	0x03BE5B8C MOV X0, X19
	0x03BE5B90 BL 0x3BEBA40
	0x03BE5B94 CBNZ X21, 0x3BE5BA0
	0x03BE5B98 MOV X0, X20
	0x03BE5B9C BL 0x1D2C690
	0x03BE5BA0 MOV X0, X21
	0x03BE5BA4 BL 0x1C16F18
	0x03BE5BA8 BL 0x1990590
	0x03BE5BAC STR X30, [X31 - 0x20]!
	0x03BE5BB0 STP X20, X19, [X31 + 0x10]
	0x03BE5BB4 ADRP X20, 0x7FE000
	0x03BE5BB8 LDR X8, [X20 + 0x1B8]
	0x03BE5BBC MOV X19, X0
	0x03BE5BC0 CBNZ X8, 0x3BE5BD8
	0x03BE5BC4 ADRP X0, 0xFFFFFFFFFCF43000
	0x03BE5BC8 ADD X0, X0, 0xD9
	0x03BE5BCC BL 0x1C16CB8
	0x03BE5BD0 MOV X8, X0
	0x03BE5BD4 STR X0, [X20 + 0x1B8]
	0x03BE5BD8 MOV X0, X19
	0x03BE5BDC BLR X8
	0x03BE5BE0 MOV X19, X0
	0x03BE5BE4 BL 0x3BEB648
	0x03BE5BE8 MOV X0, X19
	0x03BE5BEC LDP X20, X19, [X31 + 0x10]
	0x03BE5BF0 LDR X30, [X31], #0x20
	0x03BE5BF4 RET
	0x03BE5BF8 CMP W1, 0x1
	0x03BE5BFC MOV X20, X0
	0x03BE5C00 B.NE 0x3BE5C24
	0x03BE5C04 MOV X0, X20
	0x03BE5C08 BL 0x3EB1AD0
	0x03BE5C0C LDR X19, [X0]
	0x03BE5C10 BL 0x3EB1AE0
	0x03BE5C14 BL 0x3BEB648
	0x03BE5C18 CBZ X19, 0x3BE5BE8
	0x03BE5C1C MOV X0, X19
	0x03BE5C20 BL 0x1C16F18
	0x03BE5C24 MOV X19, X31
	0x03BE5C28 B 0x3BE5C30
	0x03BE5C2C MOV X20, X0
	0x03BE5C30 BL 0x3BEB648
	0x03BE5C34 CBNZ X19, 0x3BE5C40
	0x03BE5C38 MOV X0, X20
	0x03BE5C3C BL 0x1D2C690
	0x03BE5C40 MOV X0, X19
	0x03BE5C44 BL 0x1C16F18
	0x03BE5C48 BL 0x1990590
	0x03BE5C4C STR X30, [X31 - 0x30]!
	0x03BE5C50 STP X22, X21, [X31 + 0x10]
	0x03BE5C54 STP X20, X19, [X31 + 0x20]
	0x03BE5C58 ADRP X22, 0x7FE000
	0x03BE5C5C LDR X8, [X22 + 0x2B8]
	0x03BE5C60 MOV X19, X2
	0x03BE5C64 MOV X20, X1
	0x03BE5C68 MOV X21, X0
	0x03BE5C6C CBNZ X8, 0x3BE5C84
	0x03BE5C70 ADRP X0, 0xFFFFFFFFFCF0B000
	0x03BE5C74 ADD X0, X0, 0x7C1
	0x03BE5C78 BL 0x1C16CB8
	0x03BE5C7C MOV X8, X0
	0x03BE5C80 STR X0, [X22 + 0x2B8]
	0x03BE5C84 MOV X0, X21
	0x03BE5C88 MOV X1, X20
	0x03BE5C8C MOV X2, X19
	0x03BE5C90 BLR X8
	0x03BE5C94 MOV X19, X0
	0x03BE5C98 BL 0x3BEB648
	0x03BE5C9C MOV X0, X19
	0x03BE5CA0 LDP X20, X19, [X31 + 0x20]
	0x03BE5CA4 LDP X22, X21, [X31 + 0x10]
	0x03BE5CA8 LDR X30, [X31], #0x30
	0x03BE5CAC RET
	0x03BE5CB0 CMP W1, 0x1
	0x03BE5CB4 MOV X20, X0
	0x03BE5CB8 B.NE 0x3BE5CDC
	0x03BE5CBC MOV X0, X20
	0x03BE5CC0 BL 0x3EB1AD0
	0x03BE5CC4 LDR X19, [X0]
	0x03BE5CC8 BL 0x3EB1AE0
	0x03BE5CCC BL 0x3BEB648
	0x03BE5CD0 CBZ X19, 0x3BE5C9C
	0x03BE5CD4 MOV X0, X19
	0x03BE5CD8 BL 0x1C16F18
	0x03BE5CDC MOV X19, X31
	0x03BE5CE0 B 0x3BE5CE8
	0x03BE5CE4 MOV X20, X0
	0x03BE5CE8 BL 0x3BEB648
	0x03BE5CEC CBNZ X19, 0x3BE5CF8
	0x03BE5CF0 MOV X0, X20
	0x03BE5CF4 BL 0x1D2C690
	0x03BE5CF8 MOV X0, X19
	0x03BE5CFC BL 0x1C16F18
	0x03BE5D00 BL 0x1990590
	0x03BE5D04 STR X30, [X31 - 0x20]!
	0x03BE5D08 STP X20, X19, [X31 + 0x10]
	0x03BE5D0C BL 0x3BE8D68
	0x03BE5D10 MOV X19, X0
	0x03BE5D14 BL 0x3BEB648
	0x03BE5D18 MOV X0, X19
	0x03BE5D1C LDP X20, X19, [X31 + 0x10]
	0x03BE5D20 LDR X30, [X31], #0x20
	0x03BE5D24 RET
	0x03BE5D28 CMP W1, 0x1
	0x03BE5D2C MOV X20, X0
	0x03BE5D30 B.NE 0x3BE5D54
	0x03BE5D34 MOV X0, X20
	0x03BE5D38 BL 0x3EB1AD0
	0x03BE5D3C LDR X19, [X0]
	0x03BE5D40 BL 0x3EB1AE0
	0x03BE5D44 BL 0x3BEB648
	0x03BE5D48 CBZ X19, 0x3BE5D18
	0x03BE5D4C MOV X0, X19
	0x03BE5D50 BL 0x1C16F18
	0x03BE5D54 MOV X19, X31
	0x03BE5D58 B 0x3BE5D60
	0x03BE5D5C MOV X20, X0
	0x03BE5D60 BL 0x3BEB648
	0x03BE5D64 CBNZ X19, 0x3BE5D70
	0x03BE5D68 MOV X0, X20
	0x03BE5D6C BL 0x1D2C690
	0x03BE5D70 MOV X0, X19
	0x03BE5D74 BL 0x1C16F18
	0x03BE5D78 BL 0x1990590
	0x03BE5D7C STR X30, [X31 - 0x30]!
	0x03BE5D80 STP X22, X21, [X31 + 0x10]
	0x03BE5D84 STP X20, X19, [X31 + 0x20]
	0x03BE5D88 ADRP X22, 0x7FE000
	0x03BE5D8C ADRP X20, 0x579000
	0x03BE5D90 ADRP X21, 0x579000
	0x03BE5D94 LDRB W8, [X22 + 0x187]
	0x03BE5D98 LDR X20, [X20 + 0x350]
	0x03BE5D9C LDR X21, [X21 + 0x358]
	0x03BE5DA0 MOV W19, W0
	0x03BE5DA4 TBNZ X8, 0x0, 0x3BE5DC8
	0x03BE5DA8 ADRP X0, 0x579000
	0x03BE5DAC LDR X0, [X0 + 0x350]
	0x03BE5DB0 BL 0x1C16CF4
	0x03BE5DB4 ADRP X0, 0x579000
	0x03BE5DB8 LDR X0, [X0 + 0x358]
	0x03BE5DBC BL 0x1C16CF4
	0x03BE5DC0 MOVZ W8, 0x1
	0x03BE5DC4 STRB W8, [X22 + 0x187]
	0x03BE5DC8 LDR X1, [X20]
	0x03BE5DCC LDR X2, [X21]
	0x03BE5DD0 AND X0, X19, 0xFF
	0x03BE5DD4 LDP X20, X19, [X31 + 0x20]
	0x03BE5DD8 LDP X22, X21, [X31 + 0x10]
	0x03BE5DDC LDR X30, [X31], #0x30
	0x03BE5DE0 B 0x3BE5AAC
	0x03BE5DE4 STR X30, [X31 - 0x30]!
	0x03BE5DE8 STP X22, X21, [X31 + 0x10]
	0x03BE5DEC STP X20, X19, [X31 + 0x20]
	0x03BE5DF0 ADRP X22, 0x7FE000
	0x03BE5DF4 ADRP X20, 0x579000
	0x03BE5DF8 ADRP X21, 0x579000
	0x03BE5DFC LDRB W8, [X22 + 0x188]
	0x03BE5E00 LDR X20, [X20 + 0x360]
	0x03BE5E04 LDR X21, [X21 + 0x368]
	0x03BE5E08 MOV W19, W0
	0x03BE5E0C TBNZ X8, 0x0, 0x3BE5E30
	0x03BE5E10 ADRP X0, 0x579000
	0x03BE5E14 LDR X0, [X0 + 0x360]
	0x03BE5E18 BL 0x1C16CF4
	0x03BE5E1C ADRP X0, 0x579000
	0x03BE5E20 LDR X0, [X0 + 0x368]
	0x03BE5E24 BL 0x1C16CF4
	0x03BE5E28 MOVZ W8, 0x1
	0x03BE5E2C STRB W8, [X22 + 0x188]
	0x03BE5E30 LDR X1, [X20]
	0x03BE5E34 LDR X2, [X21]
	0x03BE5E38 AND X0, X19, 0xFFFF
	0x03BE5E3C LDP X20, X19, [X31 + 0x20]
	0x03BE5E40 LDP X22, X21, [X31 + 0x10]
	0x03BE5E44 LDR X30, [X31], #0x30
	0x03BE5E48 B 0x3BE5AAC
	0x03BE5E4C STR X30, [X31 - 0x30]!
	0x03BE5E50 STP X22, X21, [X31 + 0x10]
	0x03BE5E54 STP X20, X19, [X31 + 0x20]
	0x03BE5E58 ADRP X22, 0x7FE000
	0x03BE5E5C ADRP X20, 0x579000
	0x03BE5E60 ADRP X21, 0x579000
	0x03BE5E64 LDRB W8, [X22 + 0x189]
	0x03BE5E68 LDR X20, [X20 + 0x370]
	0x03BE5E6C LDR X21, [X21 + 0x378]
	0x03BE5E70 MOV W19, W0
	0x03BE5E74 TBNZ X8, 0x0, 0x3BE5E98
	0x03BE5E78 ADRP X0, 0x579000
	0x03BE5E7C LDR X0, [X0 + 0x370]
	0x03BE5E80 BL 0x1C16CF4
	0x03BE5E84 ADRP X0, 0x579000
	0x03BE5E88 LDR X0, [X0 + 0x378]
	0x03BE5E8C BL 0x1C16CF4
	0x03BE5E90 MOVZ W8, 0x1
	0x03BE5E94 STRB W8, [X22 + 0x189]
	0x03BE5E98 LDR X1, [X20]
	0x03BE5E9C LDR X2, [X21]
	0x03BE5EA0 MOV W0, W19
	0x03BE5EA4 LDP X20, X19, [X31 + 0x20]
	0x03BE5EA8 LDP X22, X21, [X31 + 0x10]
	0x03BE5EAC LDR X30, [X31], #0x30
	0x03BE5EB0 B 0x3BE5AAC
	0x03BE5EB4 STR X30, [X31 - 0x30]!
	0x03BE5EB8 STP X22, X21, [X31 + 0x10]
	0x03BE5EBC STP X20, X19, [X31 + 0x20]
	0x03BE5EC0 ADRP X20, 0x7FE000
	0x03BE5EC4 ADRP X21, 0x579000
	0x03BE5EC8 ADRP X22, 0x579000
	0x03BE5ECC LDRB W8, [X20 + 0x18A]
	0x03BE5ED0 LDR X21, [X21 + 0x380]
	0x03BE5ED4 LDR X22, [X22 + 0x388]
	0x03BE5ED8 MOV X19, X0
	0x03BE5EDC TBNZ X8, 0x0, 0x3BE5F00
	0x03BE5EE0 ADRP X0, 0x579000
	0x03BE5EE4 LDR X0, [X0 + 0x380]
	0x03BE5EE8 BL 0x1C16CF4
	0x03BE5EEC ADRP X0, 0x579000
	0x03BE5EF0 LDR X0, [X0 + 0x388]
	0x03BE5EF4 BL 0x1C16CF4
	0x03BE5EF8 MOVZ W8, 0x1
	0x03BE5EFC STRB W8, [X20 + 0x18A]
	0x03BE5F00 LDR X1, [X21]
	0x03BE5F04 LDR X2, [X22]
	0x03BE5F08 MOV X0, X19
	0x03BE5F0C LDP X20, X19, [X31 + 0x20]
	0x03BE5F10 LDP X22, X21, [X31 + 0x10]
	0x03BE5F14 LDR X30, [X31], #0x30
	0x03BE5F18 B 0x3BE5AAC
	0x03BE5F1C STR D8, [X31 - 0x30]!
	0x03BE5F20 STP X30, X21, [X31 + 0x10]
	0x03BE5F24 STP X20, X19, [X31 + 0x20]
	0x03BE5F28 ADRP X21, 0x7FE000
	0x03BE5F2C ADRP X19, 0x579000
	0x03BE5F30 ADRP X20, 0x579000
	0x03BE5F34 LDRB W8, [X21 + 0x18B]
	0x03BE5F38 LDR X19, [X19 + 0x390]
	0x03BE5F3C LDR X20, [X20 + 0x398]
	0x03BE5F40 MOV V8.16B, V0.16B
	0x03BE5F44 TBNZ X8, 0x0, 0x3BE5F68
	0x03BE5F48 ADRP X0, 0x579000
	0x03BE5F4C LDR X0, [X0 + 0x398]
	0x03BE5F50 BL 0x1C16CF4
	0x03BE5F54 ADRP X0, 0x579000
	0x03BE5F58 LDR X0, [X0 + 0x390]
	0x03BE5F5C BL 0x1C16CF4
	0x03BE5F60 MOVZ W8, 0x1
	0x03BE5F64 STRB W8, [X21 + 0x18B]
	0x03BE5F68 LDR X1, [X19]
	0x03BE5F6C LDR X2, [X20]
	0x03BE5F70 LDP X20, X19, [X31 + 0x20]
	0x03BE5F74 LDP X30, X21, [X31 + 0x10]
	0x03BE5F78 FMOV W0, S8
	0x03BE5F7C LDR V8, [X31], #0x30
	0x03BE5F80 B 0x3BE5AAC
	0x03BE5F84 STR D8, [X31 - 0x30]!
	0x03BE5F88 STP X30, X21, [X31 + 0x10]
	0x03BE5F8C STP X20, X19, [X31 + 0x20]
	0x03BE5F90 ADRP X21, 0x7FE000
	0x03BE5F94 ADRP X19, 0x579000
	0x03BE5F98 ADRP X20, 0x579000
	0x03BE5F9C LDRB W8, [X21 + 0x18C]
	0x03BE5FA0 LDR X19, [X19 + 0x3A0]
	0x03BE5FA4 LDR X20, [X20 + 0x3A8]
	0x03BE5FA8 MOV V8.16B, V0.16B
	0x03BE5FAC TBNZ X8, 0x0, 0x3BE5FD0
	0x03BE5FB0 ADRP X0, 0x579000
	0x03BE5FB4 LDR X0, [X0 + 0x3A8]
	0x03BE5FB8 BL 0x1C16CF4
	0x03BE5FBC ADRP X0, 0x579000
	0x03BE5FC0 LDR X0, [X0 + 0x3A0]
	0x03BE5FC4 BL 0x1C16CF4
	0x03BE5FC8 MOVZ W8, 0x1
	0x03BE5FCC STRB W8, [X21 + 0x18C]
	0x03BE5FD0 LDR X1, [X19]
	0x03BE5FD4 LDR X2, [X20]
	0x03BE5FD8 LDP X20, X19, [X31 + 0x20]
	0x03BE5FDC LDP X30, X21, [X31 + 0x10]
	0x03BE5FE0 FMOV X0, D8
	0x03BE5FE4 LDR V8, [X31], #0x30
	0x03BE5FE8 B 0x3BE5AAC
	0x03BE5FEC STR X30, [X31 - 0x30]!
	0x03BE5FF0 STP X22, X21, [X31 + 0x10]
	0x03BE5FF4 STP X20, X19, [X31 + 0x20]
	0x03BE5FF8 ADRP X22, 0x7FE000
	0x03BE5FFC ADRP X20, 0x579000
	0x03BE6000 ADRP X21, 0x578000
	0x03BE6004 LDRB W8, [X22 + 0x18D]
	0x03BE6008 LDR X20, [X20 + 0x3B0]
	0x03BE600C B 0x3EB1744
	0x03BE6010 MOV W19, W0
	0x03BE6014 TBNZ X8, 0x0, 0x3BE6038
	0x03BE6018 ADRP X0, 0x578000
	0x03BE601C LDR X0, [X0 + 0x3B8]
	0x03BE6020 BL 0x1C16CF4
	0x03BE6024 ADRP X0, 0x578000
	0x03BE6028 LDR X0, [X0 + 0x3B0]
	0x03BE602C BL 0x1C16CF4
	0x03BE6030 MOVZ W8, 0x1
	0x03BE6034 STRB W8, [X22 + 0x18D]
	0x03BE6038 LDR X1, [X20]
	0x03BE603C LDR X2, [X21]
	0x03BE6040 AND X0, X19, 0xFFFF
	0x03BE6044 LDP X20, X19, [X31 + 0x20]
	0x03BE6048 LDP X22, X21, [X31 + 0x10]
	0x03BE604C LDR X30, [X31], #0x30
	0x03BE6050 B 0x3BE5AAC
	0x03BE6054 STR X30, [X31 - 0x30]!
	0x03BE6058 STP X22, X21, [X31 + 0x10]
	0x03BE605C STP X20, X19, [X31 + 0x20]
	0x03BE6060 ADRP X22, 0x7FD000
	0x03BE6064 ADRP X20, 0x578000
	0x03BE6068 ADRP X21, 0x578000
	0x03BE606C LDRB W8, [X22 + 0x18E]
	0x03BE6070 LDR X20, [X20 + 0x3C0]
	0x03BE6074 LDR X21, [X21 + 0x3C8]
	0x03BE6078 MOV W19, W0
	0x03BE607C TBNZ X8, 0x0, 0x3BE60A0
	0x03BE6080 ADRP X0, 0x578000
	0x03BE6084 LDR X0, [X0 + 0x3C8]
	0x03BE6088 BL 0x1C16CF4
	0x03BE608C ADRP X0, 0x578000
	0x03BE6090 LDR X0, [X0 + 0x3C0]
	0x03BE6094 BL 0x1C16CF4
	0x03BE6098 MOVZ W8, 0x1
	0x03BE609C STRB W8, [X22 + 0x18E]
	0x03BE60A0 LDR X1, [X20]
	0x03BE60A4 LDR X2, [X21]
	0x03BE60A8 AND X0, X19, 0x1
	0x03BE60AC LDP X20, X19, [X31 + 0x20]
	0x03BE60B0 LDP X22, X21, [X31 + 0x10]
	0x03BE60B4 LDR X30, [X31], #0x30
	0x03BE60B8 B 0x3BE5AAC
	0x03BE60BC STP X30, X21, [X31 - 0x20]!
	0x03BE60C0 STP X20, X19, [X31 + 0x10]
	0x03BE60C4 MOV X20, X2
	0x03BE60C8 MOV X21, X1
	0x03BE60CC BL 0x3BE6158
	0x03BE60D0 MOV X19, X0
	0x03BE60D4 MOV X1, X21
	0x03BE60D8 MOV X2, X20
	0x03BE60DC BL 0x3BE61F8
	0x03BE60E0 MOV X20, X0
	0x03BE60E4 MOV X0, X19
	0x03BE60E8 BL 0x3BEBA40
	0x03BE60EC MOV X0, X20
	0x03BE60F0 LDP X20, X19, [X31 + 0x10]
	0x03BE60F4 LDP X30, X21, [X31], #0x20
	0x03BE60F8 RET
	0x03BE60FC CMP W1, 0x1
	0x03BE6100 MOV X21, X0
	0x03BE6104 B.NE 0x3BE612C
	0x03BE6108 MOV X0, X21
	0x03BE610C BL 0x3EB1AD0
	0x03BE6110 LDR X20, [X0]
	0x03BE6114 BL 0x3EB1AE0
	0x03BE6118 MOV X0, X19
	0x03BE611C BL 0x3BEBA40
	0x03BE6120 CBZ X20, 0x3BE60EC
	0x03BE6124 MOV X0, X20
	0x03BE6128 BL 0x1C16F18
	0x03BE612C MOV X20, X31
	0x03BE6130 B 0x3BE6138
	0x03BE6134 MOV X21, X0
	0x03BE6138 MOV X0, X19
	0x03BE613C BL 0x3BEBA40
	0x03BE6140 CBNZ X20, 0x3BE614C
	0x03BE6144 MOV X0, X21
	0x03BE6148 BL 0x1D2C690
	0x03BE614C MOV X0, X20
	0x03BE6150 BL 0x1C16F18
	0x03BE6154 BL 0x1990590
	0x03BE6158 STR X30, [X31 - 0x20]!
	0x03BE615C STP X20, X19, [X31 + 0x10]
	0x03BE6160 ADRP X20, 0x7FD000
	0x03BE6164 LDR X8, [X20 + 0x298]
	0x03BE6168 MOV X19, X0
	0x03BE616C CBNZ X8, 0x3BE6184
	0x03BE6170 ADRP X0, 0xFFFFFFFFFCF46000
	0x03BE6174 ADD X0, X0, 0x89
	0x03BE6178 BL 0x1C16CB8
	0x03BE617C MOV X8, X0
	0x03BE6180 STR X0, [X20 + 0x298]
	0x03BE6184 MOV X0, X19
	0x03BE6188 BLR X8
	0x03BE618C MOV X19, X0
	0x03BE6190 BL 0x3BEB648
	0x03BE6194 MOV X0, X19
	0x03BE6198 LDP X20, X19, [X31 + 0x10]
	0x03BE619C LDR X30, [X31], #0x20
	0x03BE61A0 RET
	0x03BE61A4 CMP W1, 0x1
	0x03BE61A8 MOV X20, X0
	0x03BE61AC B.NE 0x3BE61D0
	0x03BE61B0 MOV X0, X20
	0x03BE61B4 BL 0x3EB1AD0
	0x03BE61B8 LDR X19, [X0]
	0x03BE61BC BL 0x3EB1AE0
	0x03BE61C0 BL 0x3BEB648
	0x03BE61C4 CBZ X19, 0x3BE6194
	0x03BE61C8 MOV X0, X19
	0x03BE61CC BL 0x1C16F18
	0x03BE61D0 MOV X19, X31
	0x03BE61D4 B 0x3BE61DC
	0x03BE61D8 MOV X20, X0
	0x03BE61DC BL 0x3BEB648
	0x03BE61E0 CBNZ X19, 0x3BE61EC
	0x03BE61E4 MOV X0, X20
	0x03BE61E8 BL 0x1D2C690
	0x03BE61EC MOV X0, X19
	0x03BE61F0 BL 0x1C16F18
	0x03BE61F4 BL 0x1990590
	0x03BE61F8 STR X30, [X31 - 0x30]!
	0x03BE61FC STP X22, X21, [X31 + 0x10]
	0x03BE6200 STP X20, X19, [X31 + 0x20]
	0x03BE6204 ADRP X22, 0x7FD000
	0x03BE6208 LDR X8, [X22 + 0x2A8]
	0x03BE620C MOV X19, X2
	0x03BE6210 MOV X20, X1
	0x03BE6214 MOV X21, X0
	0x03BE6218 CBNZ X8, 0x3BE6230
	0x03BE621C ADRP X0, 0xFFFFFFFFFCF12000
	0x03BE6220 ADD X0, X0, 0xAAE
	0x03BE6224 BL 0x1C16CB8
	0x03BE6228 MOV X8, X0
	0x03BE622C STR X0, [X22 + 0x2A8]
	0x03BE6230 MOV X0, X21
	0x03BE6234 MOV X1, X20
	0x03BE6238 MOV X2, X19
	0x03BE623C BLR X8
	0x03BE6240 MOV X19, X0
	0x03BE6244 BL 0x3BEB648
	0x03BE6248 MOV X0, X19
	0x03BE624C LDP X20, X19, [X31 + 0x20]
	0x03BE6250 LDP X22, X21, [X31 + 0x10]
	0x03BE6254 LDR X30, [X31], #0x30
	0x03BE6258 RET
	0x03BE625C CMP W1, 0x1
	0x03BE6260 MOV X20, X0
	0x03BE6264 B.NE 0x3BE6288
	0x03BE6268 MOV X0, X20
	0x03BE626C BL 0x3EB1AD0
	0x03BE6270 LDR X19, [X0]
	0x03BE6274 BL 0x3EB1AE0
	0x03BE6278 BL 0x3BEB648
	0x03BE627C CBZ X19, 0x3BE6248
	0x03BE6280 MOV X0, X19
	0x03BE6284 BL 0x1C16F18
	0x03BE6288 MOV X19, X31
	0x03BE628C B 0x3BE6294
	0x03BE6290 MOV X20, X0
	0x03BE6294 BL 0x3BEB648
	0x03BE6298 CBNZ X19, 0x3BE62A4
	0x03BE629C MOV X0, X20
	0x03BE62A0 BL 0x1D2C690
	0x03BE62A4 MOV X0, X19
	0x03BE62A8 BL 0x1C16F18
	0x03BE62AC BL 0x1990590
	0x03BE62B0 STP X30, X23, [X31 - 0x30]!
	0x03BE62B4 STP X22, X21, [X31 + 0x10]
	0x03BE62B8 STP X20, X19, [X31 + 0x20]
	0x03BE62BC ADRP X21, 0x7FD000
	0x03BE62C0 ADRP X22, 0x578000
	0x03BE62C4 ADRP X23, 0x578000
	0x03BE62C8 LDRB W8, [X21 + 0x18F]
	0x03BE62CC LDR X22, [X22 + 0x3D0]
	0x03BE62D0 LDR X23, [X23 + 0x3D8]
	0x03BE62D4 MOV X19, X1
	0x03BE62D8 MOV X20, X0
	0x03BE62DC TBNZ X8, 0x0, 0x3BE6300
	0x03BE62E0 ADRP X0, 0x578000
	0x03BE62E4 LDR X0, [X0 + 0x3D0]
	0x03BE62E8 BL 0x1C16CF4
	0x03BE62EC ADRP X0, 0x578000
	0x03BE62F0 LDR X0, [X0 + 0x3D8]
	0x03BE62F4 BL 0x1C16CF4
	0x03BE62F8 MOVZ W8, 0x1
	0x03BE62FC STRB W8, [X21 + 0x18F]
	0x03BE6300 LDR X1, [X22]
	0x03BE6304 LDR X2, [X23]
	0x03BE6308 MOV X0, X20
	0x03BE630C BL 0x3BE60BC
	0x03BE6310 MOV X1, X0
	0x03BE6314 MOV X0, X20
	0x03BE6318 MOV X2, X31
	0x03BE631C MOV X3, X31
	0x03BE6320 BL 0x3BE6338
	0x03BE6324 STRB W0, [X19]
	0x03BE6328 LDP X20, X19, [X31 + 0x20]
	0x03BE632C LDP X22, X21, [X31 + 0x10]
	0x03BE6330 LDP X30, X23, [X31], #0x30
	0x03BE6334 RET
	0x03BE6338 STR X30, [X31 - 0x20]!
	0x03BE633C STP X20, X19, [X31 + 0x10]
	0x03BE6340 BL 0x3BE7D94
	0x03BE6344 MOV W19, W0
	0x03BE6348 BL 0x3BEB648
	0x03BE634C MOV W0, W19
	0x03BE6350 LDP X20, X19, [X31 + 0x10]
	0x03BE6354 LDR X30, [X31], #0x20
	0x03BE6358 RET
	0x03BE635C CMP W1, 0x1
	0x03BE6360 MOV X20, X0
	0x03BE6364 B.NE 0x3BE6388
	0x03BE6368 MOV X0, X20
	0x03BE636C BL 0x3EB1AD0
	0x03BE6370 LDR X19, [X0]
	0x03BE6374 BL 0x3EB1AE0
	0x03BE6378 BL 0x3BEB648
	0x03BE637C CBZ X19, 0x3BE634C
	0x03BE6380 MOV X0, X19
	0x03BE6384 BL 0x1C16F18
	0x03BE6388 MOV X19, X31
	0x03BE638C B 0x3BE6394
	0x03BE6390 MOV X20, X0
	0x03BE6394 BL 0x3BEB648
	0x03BE6398 CBNZ X19, 0x3BE63A4
	0x03BE639C MOV X0, X20
	0x03BE63A0 BL 0x1D2C690
	0x03BE63A4 MOV X0, X19
	0x03BE63A8 BL 0x1C16F18
	0x03BE63AC BL 0x1990590
	0x03BE63B0 STP X30, X23, [X31 - 0x30]!
	0x03BE63B4 STP X22, X21, [X31 + 0x10]
	0x03BE63B8 STP X20, X19, [X31 + 0x20]
	0x03BE63BC ADRP X21, 0x7FD000
	0x03BE63C0 ADRP X22, 0x578000
	0x03BE63C4 ADRP X23, 0x578000
	0x03BE63C8 LDRB W8, [X21 + 0x190]
	0x03BE63CC LDR X22, [X22 + 0x3E0]
	0x03BE63D0 LDR X23, [X23 + 0x3E8]
	0x03BE63D4 MOV X19, X1
	0x03BE63D8 MOV X20, X0
	0x03BE63DC TBNZ X8, 0x0, 0x3BE6400
	0x03BE63E0 ADRP X0, 0x578000
	0x03BE63E4 LDR X0, [X0 + 0x3E0]
	0x03BE63E8 BL 0x1C16CF4
	0x03BE63EC ADRP X0, 0x578000
	0x03BE63F0 LDR X0, [X0 + 0x3E8]
	0x03BE63F4 BL 0x1C16CF4
	0x03BE63F8 MOVZ W8, 0x1
	0x03BE63FC STRB W8, [X21 + 0x190]
	0x03BE6400 LDR X1, [X22]
	0x03BE6404 LDR X2, [X23]
	0x03BE6408 MOV X0, X20
	0x03BE640C BL 0x3BE60BC
	0x03BE6410 MOV X1, X0
	0x03BE6414 MOV X0, X20
	0x03BE6418 MOV X2, X31
	0x03BE641C MOV X3, X31
	0x03BE6420 BL 0x3BE6438
	0x03BE6424 STRH W0, [X19]
	0x03BE6428 LDP X20, X19, [X31 + 0x20]
	0x03BE642C LDP X22, X21, [X31 + 0x10]
	0x03BE6430 LDP X30, X23, [X31], #0x30
	0x03BE6434 RET
	0x03BE6438 STR X30, [X31 - 0x20]!
	0x03BE643C STP X20, X19, [X31 + 0x10]
	0x03BE6440 BL 0x3BE7C3C
	0x03BE6444 MOV W19, W0
	0x03BE6448 BL 0x3BEB648
	0x03BE644C MOV W0, W19
	0x03BE6450 LDP X20, X19, [X31 + 0x10]
	0x03BE6454 LDR X30, [X31], #0x20
	0x03BE6458 RET
	0x03BE645C CMP W1, 0x1
	0x03BE6460 MOV X20, X0
	0x03BE6464 B.NE 0x3BE6488
	0x03BE6468 MOV X0, X20
	0x03BE646C BL 0x3EB1AD0
	0x03BE6470 LDR X19, [X0]
	0x03BE6474 BL 0x3EB1AE0
	0x03BE6478 BL 0x3BEB648
	0x03BE647C CBZ X19, 0x3BE644C
	0x03BE6480 MOV X0, X19
	0x03BE6484 BL 0x1C16F18
	0x03BE6488 MOV X19, X31
	0x03BE648C B 0x3BE6494
	0x03BE6490 MOV X20, X0
	0x03BE6494 BL 0x3BEB648
	0x03BE6498 CBNZ X19, 0x3BE64A4
	0x03BE649C MOV X0, X20
	0x03BE64A0 BL 0x1D2C690
	0x03BE64A4 MOV X0, X19
	0x03BE64A8 BL 0x1C16F18
	0x03BE64AC BL 0x1990590
	0x03BE64B0 STP X30, X23, [X31 - 0x30]!
	0x03BE64B4 STP X22, X21, [X31 + 0x10]
	0x03BE64B8 STP X20, X19, [X31 + 0x20]
	0x03BE64BC ADRP X21, 0x7FD000
	0x03BE64C0 ADRP X22, 0x578000
	0x03BE64C4 ADRP X23, 0x578000
	0x03BE64C8 LDRB W8, [X21 + 0x191]
	0x03BE64CC LDR X22, [X22 + 0x3F0]
	0x03BE64D0 LDR X23, [X23 + 0x3F8]
	0x03BE64D4 MOV X19, X1
	0x03BE64D8 MOV X20, X0
	0x03BE64DC TBNZ X8, 0x0, 0x3BE6500
	0x03BE64E0 ADRP X0, 0x578000
	0x03BE64E4 LDR X0, [X0 + 0x3F8]
	0x03BE64E8 BL 0x1C16CF4
	0x03BE64EC ADRP X0, 0x578000
	0x03BE64F0 LDR X0, [X0 + 0x3F0]
	0x03BE64F4 BL 0x1C16CF4
	0x03BE64F8 MOVZ W8, 0x1
	0x03BE64FC STRB W8, [X21 + 0x191]
	0x03BE6500 LDR X1, [X22]
	0x03BE6504 LDR X2, [X23]
	0x03BE6508 MOV X0, X20
	0x03BE650C BL 0x3BE60BC
	0x03BE6510 MOV X1, X0
	0x03BE6514 MOV X0, X20
	0x03BE6518 MOV X2, X31
	0x03BE651C MOV X3, X31
	0x03BE6520 BL 0x3BE6538
	0x03BE6524 STR W0, [X19]
	0x03BE6528 LDP X20, X19, [X31 + 0x20]
	0x03BE652C LDP X22, X21, [X31 + 0x10]
	0x03BE6530 LDP X30, X23, [X31], #0x30
	0x03BE6534 RET
	0x03BE6538 STR X30, [X31 - 0x20]!
	0x03BE653C STP X20, X19, [X31 + 0x10]
	0x03BE6540 BL 0x3BE7990
	0x03BE6544 MOV W19, W0
	0x03BE6548 BL 0x3BEB648
	0x03BE654C MOV W0, W19
	0x03BE6550 LDP X20, X19, [X31 + 0x10]
	0x03BE6554 LDR X30, [X31], #0x20
	0x03BE6558 RET
	0x03BE655C CMP W1, 0x1
	0x03BE6560 MOV X20, X0
	0x03BE6564 B.NE 0x3BE6588
	0x03BE6568 MOV X0, X20
	0x03BE656C BL 0x3EB1AD0
	0x03BE6570 LDR X19, [X0]
	0x03BE6574 BL 0x3EB1AE0
	0x03BE6578 BL 0x3BEB648
	0x03BE657C CBZ X19, 0x3BE654C
	0x03BE6580 MOV X0, X19
	0x03BE6584 BL 0x1C16F18
	0x03BE6588 MOV X19, X31
	0x03BE658C B 0x3BE6594
	0x03BE6590 MOV X20, X0
	0x03BE6594 BL 0x3BEB648
	0x03BE6598 CBNZ X19, 0x3BE65A4
	0x03BE659C MOV X0, X20
	0x03BE65A0 BL 0x1D2C690
	0x03BE65A4 MOV X0, X19
	0x03BE65A8 BL 0x1C16F18
	0x03BE65AC BL 0x1990590
	0x03BE65B0 STP X30, X23, [X31 - 0x30]!
	0x03BE65B4 STP X22, X21, [X31 + 0x10]
	0x03BE65B8 STP X20, X19, [X31 + 0x20]
	0x03BE65BC ADRP X21, 0x7FD000
	0x03BE65C0 ADRP X22, 0x578000
	0x03BE65C4 ADRP X23, 0x578000
	0x03BE65C8 LDRB W8, [X21 + 0x192]
	0x03BE65CC LDR X22, [X22 + 0x400]
	0x03BE65D0 LDR X23, [X23 + 0x408]
	0x03BE65D4 MOV X19, X1
	0x03BE65D8 MOV X20, X0
	0x03BE65DC TBNZ X8, 0x0, 0x3BE6600
	0x03BE65E0 ADRP X0, 0x578000
	0x03BE65E4 LDR X0, [X0 + 0x400]
	0x03BE65E8 BL 0x1C16CF4
	0x03BE65EC ADRP X0, 0x578000
	0x03BE65F0 LDR X0, [X0 + 0x408]
	0x03BE65F4 BL 0x1C16CF4
	0x03BE65F8 MOVZ W8, 0x1
	0x03BE65FC STRB W8, [X21 + 0x192]
	0x03BE6600 LDR X1, [X22]
	0x03BE6604 LDR X2, [X23]
	0x03BE6608 MOV X0, X20
	0x03BE660C BL 0x3BE60BC
	0x03BE6610 MOV X1, X0
	0x03BE6614 MOV X0, X20
	0x03BE6618 MOV X2, X31
	0x03BE661C MOV X3, X31
	0x03BE6620 BL 0x3BE6638
	0x03BE6624 STR X0, [X19]
	0x03BE6628 LDP X20, X19, [X31 + 0x20]
	0x03BE662C LDP X22, X21, [X31 + 0x10]
	0x03BE6630 LDP X30, X23, [X31], #0x30
	0x03BE6634 RET
	0x03BE6638 STR X30, [X31 - 0x20]!
	0x03BE663C STP X20, X19, [X31 + 0x10]
	0x03BE6640 BL 0x3BE82E4
	0x03BE6644 MOV X19, X0
	0x03BE6648 BL 0x3BEB648
	0x03BE664C MOV X0, X19
	0x03BE6650 LDP X20, X19, [X31 + 0x10]
	0x03BE6654 LDR X30, [X31], #0x20
	0x03BE6658 RET
	0x03BE665C CMP W1, 0x1
	0x03BE6660 MOV X20, X0
	0x03BE6664 B.NE 0x3BE6688
	0x03BE6668 MOV X0, X20
	0x03BE666C BL 0x3EB1AD0
	0x03BE6670 LDR X19, [X0]
	0x03BE6674 BL 0x3EB1AE0
	0x03BE6678 BL 0x3BEB648
	0x03BE667C CBZ X19, 0x3BE664C
	0x03BE6680 MOV X0, X19
	0x03BE6684 BL 0x1C16F18
	0x03BE6688 MOV X19, X31
	0x03BE668C B 0x3BE6694
	0x03BE6690 MOV X20, X0
	0x03BE6694 BL 0x3BEB648
	0x03BE6698 CBNZ X19, 0x3BE66A4
	0x03BE669C MOV X0, X20
	0x03BE66A0 BL 0x1D2C690
	0x03BE66A4 MOV X0, X19
	0x03BE66A8 BL 0x1C16F18
	0x03BE66AC BL 0x1990590
	0x03BE66B0 STP X30, X23, [X31 - 0x30]!
	0x03BE66B4 STP X22, X21, [X31 + 0x10]
	0x03BE66B8 STP X20, X19, [X31 + 0x20]
	0x03BE66BC ADRP X21, 0x7FD000
	0x03BE66C0 ADRP X22, 0x578000
	0x03BE66C4 ADRP X23, 0x578000
	0x03BE66C8 LDRB W8, [X21 + 0x193]
	0x03BE66CC LDR X22, [X22 + 0x410]
	0x03BE66D0 LDR X23, [X23 + 0x418]
	0x03BE66D4 MOV X19, X1
	0x03BE66D8 MOV X20, X0
	0x03BE66DC TBNZ X8, 0x0, 0x3BE6700
	0x03BE66E0 ADRP X0, 0x578000
	0x03BE66E4 LDR X0, [X0 + 0x418]
	0x03BE66E8 BL 0x1C16CF4
	0x03BE66EC ADRP X0, 0x578000
	0x03BE66F0 LDR X0, [X0 + 0x410]
	0x03BE66F4 BL 0x1C16CF4
	0x03BE66F8 MOVZ W8, 0x1
	0x03BE66FC STRB W8, [X21 + 0x193]
	0x03BE6700 LDR X1, [X22]
	0x03BE6704 LDR X2, [X23]
	0x03BE6708 MOV X0, X20
	0x03BE670C BL 0x3BE60BC
	0x03BE6710 MOV X1, X0
	0x03BE6714 MOV X0, X20
	0x03BE6718 MOV X2, X31
	0x03BE671C MOV X3, X31
	0x03BE6720 BL 0x3BE6738
	0x03BE6724 STR S0, [X19]
	0x03BE6728 LDP X20, X19, [X31 + 0x20]
	0x03BE672C LDP X22, X21, [X31 + 0x10]
	0x03BE6730 LDP X30, X23, [X31], #0x30
	0x03BE6734 RET
	0x03BE6738 STR D8, [X31 - 0x20]!
	0x03BE673C STR X30, [X31 + 0x8]
	0x03BE6740 STP X20, X19, [X31 + 0x10]
	0x03BE6744 BL 0x3BE803C
	0x03BE6748 MOV V8.16B, V0.16B
	0x03BE674C BL 0x3BEB648
	0x03BE6750 LDP X20, X19, [X31 + 0x10]
	0x03BE6754 LDR X30, [X31 + 0x8]
	0x03BE6758 MOV V0.16B, V8.16B
	0x03BE675C LDR V8, [X31], #0x20
	0x03BE6760 RET
	0x03BE6764 CMP W1, 0x1
	0x03BE6768 MOV X20, X0
	0x03BE676C B.NE 0x3BE6794
	0x03BE6770 MOV X0, X20
	0x03BE6774 BL 0x3EB1AD0
	0x03BE6778 LDR X19, [X0]
	0x03BE677C BL 0x3EB1AE0
	0x03BE6780 BL 0x3BEB648
	0x03BE6784 FMOV S8, W31
	0x03BE6788 CBZ X19, 0x3BE6750
	0x03BE678C MOV X0, X19
	0x03BE6790 BL 0x1C16F18
	0x03BE6794 MOV X19, X31
	0x03BE6798 B 0x3BE67A0
	0x03BE679C MOV X20, X0
	0x03BE67A0 BL 0x3BEB648
	0x03BE67A4 CBNZ X19, 0x3BE67B0
	0x03BE67A8 MOV X0, X20
	0x03BE67AC BL 0x1D2C690
	0x03BE67B0 MOV X0, X19
	0x03BE67B4 BL 0x1C16F18
	0x03BE67B8 BL 0x1990590
	0x03BE67BC STP X30, X23, [X31 - 0x30]!
	0x03BE67C0 STP X22, X21, [X31 + 0x10]
	0x03BE67C4 STP X20, X19, [X31 + 0x20]
	0x03BE67C8 ADRP X21, 0x7FD000
	0x03BE67CC ADRP X22, 0x578000
	0x03BE67D0 ADRP X23, 0x578000
	0x03BE67D4 LDRB W8, [X21 + 0x194]
	0x03BE67D8 LDR X22, [X22 + 0x420]
	0x03BE67DC LDR X23, [X23 + 0x428]
	0x03BE67E0 MOV X19, X1
	0x03BE67E4 MOV X20, X0
	0x03BE67E8 TBNZ X8, 0x0, 0x3BE680C
	0x03BE67EC ADRP X0, 0x578000
	0x03BE67F0 LDR X0, [X0 + 0x420]
	0x03BE67F4 BL 0x1C16CF4
	0x03BE67F8 ADRP X0, 0x578000
	0x03BE67FC LDR X0, [X0 + 0x428]
	0x03BE6800 BL 0x1C16CF4
	0x03BE6804 MOVZ W8, 0x1
	0x03BE6808 STRB W8, [X21 + 0x194]
	0x03BE680C LDR X1, [X22]
	0x03BE6810 LDR X2, [X23]
	0x03BE6814 MOV X0, X20
	0x03BE6818 BL 0x3BE60BC
	0x03BE681C MOV X1, X0
	0x03BE6820 MOV X0, X20
	0x03BE6824 MOV X2, X31
	0x03BE6828 MOV X3, X31
	0x03BE682C BL 0x3BE6844
	0x03BE6830 STR D0, [X19]
	0x03BE6834 LDP X20, X19, [X31 + 0x20]
	0x03BE6838 LDP X22, X21, [X31 + 0x10]
	0x03BE683C LDP X30, X23, [X31], #0x30
	0x03BE6840 RET
	0x03BE6844 STR D8, [X31 - 0x20]!
	0x03BE6848 STR X30, [X31 + 0x8]
	0x03BE684C STP X20, X19, [X31 + 0x10]
	0x03BE6850 BL 0x3BE8190
	0x03BE6854 MOV V8.16B, V0.16B
	0x03BE6858 BL 0x3BEB648
	0x03BE685C LDP X20, X19, [X31 + 0x10]
	0x03BE6860 LDR X30, [X31 + 0x8]
	0x03BE6864 MOV V0.16B, V8.16B
	0x03BE6868 LDR V8, [X31], #0x20
	0x03BE686C RET
	0x03BE6870 CMP W1, 0x1
	0x03BE6874 MOV X20, X0
	0x03BE6878 B.NE 0x3BE68A0
	0x03BE687C MOV X0, X20
	0x03BE6880 BL 0x3EB1AD0
	0x03BE6884 LDR X19, [X0]
	0x03BE6888 BL 0x3EB1AE0
	0x03BE688C BL 0x3BEB648
	0x03BE6890 FMOV D8, X31
	0x03BE6894 CBZ X19, 0x3BE685C
	0x03BE6898 MOV X0, X19
	0x03BE689C BL 0x1C16F18
	0x03BE68A0 MOV X19, X31
	0x03BE68A4 B 0x3BE68AC
	0x03BE68A8 MOV X20, X0
	0x03BE68AC BL 0x3BEB648
	0x03BE68B0 CBNZ X19, 0x3BE68BC
	0x03BE68B4 MOV X0, X20
	0x03BE68B8 BL 0x1D2C690
	0x03BE68BC MOV X0, X19
	0x03BE68C0 BL 0x1C16F18
	0x03BE68C4 BL 0x1990590
	0x03BE68C8 STP X30, X23, [X31 - 0x30]!
	0x03BE68CC STP X22, X21, [X31 + 0x10]
	0x03BE68D0 STP X20, X19, [X31 + 0x20]
	0x03BE68D4 ADRP X21, 0x7FD000
	0x03BE68D8 ADRP X22, 0x578000
	0x03BE68DC ADRP X23, 0x578000
	0x03BE68E0 LDRB W8, [X21 + 0x195]
	0x03BE68E4 LDR X22, [X22 + 0x430]
	0x03BE68E8 LDR X23, [X23 + 0x438]
	0x03BE68EC MOV X19, X1
	0x03BE68F0 MOV X20, X0
	0x03BE68F4 TBNZ X8, 0x0, 0x3BE6918
	0x03BE68F8 ADRP X0, 0x578000
	0x03BE68FC LDR X0, [X0 + 0x438]
	0x03BE6900 BL 0x1C16CF4
	0x03BE6904 ADRP X0, 0x578000
	0x03BE6908 LDR X0, [X0 + 0x430]
	0x03BE690C BL 0x1C16CF4
	0x03BE6910 MOVZ W8, 0x1
	0x03BE6914 STRB W8, [X21 + 0x195]
	0x03BE6918 LDR X1, [X22]
	0x03BE691C LDR X2, [X23]
	0x03BE6920 MOV X0, X20
	0x03BE6924 BL 0x3BE60BC
	0x03BE6928 MOV X1, X0
	0x03BE692C MOV X0, X20
	0x03BE6930 MOV X2, X31
	0x03BE6934 MOV X3, X31
	0x03BE6938 BL 0x3BE6950
	0x03BE693C STRH W0, [X19]
	0x03BE6940 LDP X20, X19, [X31 + 0x20]
	0x03BE6944 LDP X22, X21, [X31 + 0x10]
	0x03BE6948 LDP X30, X23, [X31], #0x30
	0x03BE694C RET
	0x03BE6950 STR X30, [X31 - 0x20]!
	0x03BE6954 STP X20, X19, [X31 + 0x10]
	0x03BE6958 BL 0x3BE7EE8
	0x03BE695C MOV W19, W0
	0x03BE6960 BL 0x3BEB648
	0x03BE6964 MOV W0, W19
	0x03BE6968 LDP X20, X19, [X31 + 0x10]
	0x03BE696C LDR X30, [X31], #0x20
	0x03BE6970 RET
	0x03BE6974 CMP W1, 0x1
	0x03BE6978 MOV X20, X0
	0x03BE697C B.NE 0x3BE69A0
	0x03BE6980 MOV X0, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x7FF000
	011 Move W8, [X19+1948]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {154}
	017 Move X0, 0x538000
	018 Move X0, [X0+1680]
	019 Call 0x1C17CF4
	020 Move X0, 0x50F000
	021 Move X0, [X0+2464]
	022 Call 0x1C17CF4
	023 Move X0, 0x50F000
	024 Move X0, [X0+2472]
	025 Call 0x1C17CF4
	026 Move X0, 0x538000
	027 Move X0, [X0+1688]
	028 Call 0x1C17CF4
	029 Move X0, 0x538000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0x538000
	033 Move X0, [X0+2736]
	034 Call 0x1C17CF4
	035 Move X0, 0x538000
	036 Move X0, [X0+2744]
	037 Call 0x1C17CF4
	038 Move X0, 0x57A000
	039 Move X0, [X0+720]
	040 Call 0x1C17CF4
	041 Move X0, 0x538000
	042 Move X0, [X0+1696]
	043 Call 0x1C17CF4
	044 Move X0, 0x50F000
	045 Move X0, [X0+2504]
	046 Call 0x1C17CF4
	047 Move X0, 0x538000
	048 Move X0, [X0+584]
	049 Call 0x1C17CF4
	050 Move X0, 0x536000
	051 Move X0, [X0+3432]
	052 Call 0x1C17CF4
	053 Move X0, 0x536000
	054 Move X0, [X0+3440]
	055 Call 0x1C17CF4
	056 Move X0, 0x50F000
	057 Move X0, [X0+2600]
	058 Call 0x1C17CF4
	059 Move X0, 0x537000
	060 Move X0, [X0+2680]
	061 Call 0x1C17CF4
	062 Move X0, 0x50F000
	063 Move X0, [X0+3584]
	064 Call 0x1C17CF4
	065 Move X0, 0x536000
	066 Move X0, [X0+3448]
	067 Call 0x1C17CF4
	068 Move X0, 0x536000
	069 Move X0, [X0+3456]
	070 Call 0x1C17CF4
	071 Move X0, 0x536000
	072 Move X0, [X0+3464]
	073 Call 0x1C17CF4
	074 Move X0, 0x538000
	075 Move X0, [X0+1704]
	076 Call 0x1C17CF4
	077 Move X0, 0x536000
	078 Move X0, [X0+3472]
	079 Call 0x1C17CF4
	080 Move X0, 0x537000
	081 Move X0, [X0+2688]
	082 Call 0x1C17CF4
	083 Move X0, 0x50F000
	084 Move X0, [X0+2288]
	085 Call 0x1C17CF4
	086 Move X0, 0x50F000
	087 Move X0, [X0+2760]
	088 Call 0x1C17CF4
	089 Move X0, 0x537000
	090 Move X0, [X0+2912]
	091 Call 0x1C17CF4
	092 Move X0, 0x50F000
	093 Move X0, [X0+1728]
	094 Call 0x1C17CF4
	095 Move X0, 0x540000
	096 Move X0, [X0+464]
	097 Call 0x1C17CF4
	098 Move X0, 0x53B000
	099 Move X0, [X0+848]
	100 Call 0x1C17CF4
	101 Move X0, 0x57A000
	102 Move X0, [X0+728]
	103 Call 0x1C17CF4
	104 Move X0, 0x544000
	105 Move X0, [X0+1088]
	106 Call 0x1C17CF4
	107 Move X0, 0x57A000
	108 Move X0, [X0+736]
	109 Call 0x1C17CF4
	110 Move X0, 0x57A000
	111 Move X0, [X0+744]
	112 Call 0x1C17CF4
	113 Move X0, 0x57A000
	114 Move X0, [X0+752]
	115 Call 0x1C17CF4
	116 Move X0, 0x53B000
	117 Move X0, [X0+856]
	118 Call 0x1C17CF4
	119 Move X0, 0x555000
	120 Move X0, [X0+3104]
	121 Call 0x1C17CF4
	122 Move X0, 0x57A000
	123 Move X0, [X0+760]
	124 Call 0x1C17CF4
	125 Move X0, 0x518000
	126 Move X0, [X0+2120]
	127 Call 0x1C17CF4
	128 Move X0, 0x57A000
	129 Move X0, [X0+768]
	130 Call 0x1C17CF4
	131 Move X0, 0x57A000
	132 Move X0, [X0+776]
	133 Call 0x1C17CF4
	134 Move X0, 0x537000
	135 Move X0, [X0+3040]
	136 Call 0x1C17CF4
	137 Move X0, 0x563000
	138 Move X0, [X0+1384]
	139 Call 0x1C17CF4
	140 Move X0, 0x555000
	141 Move X0, [X0+3520]
	142 Call 0x1C17CF4
	143 Move X0, 0x57A000
	144 Move X0, [X0+784]
	145 Call 0x1C17CF4
	146 Move X0, 0x50F000
	147 Move X0, [X0+2440]
	148 Call 0x1C17CF4
	149 Move X0, 0x547000
	150 Move X0, [X0+3912]
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X19+1948], W8
	154 Compare X20, 0
	155 JumpIfEqual {622}
	156 Move X25, 0x50F000
	157 Move X25, [X25+1728]
	158 Move X9, [X20]
	159 Move X26, 0x538000
	160 Move X8, [X25]
	161 Move W11, [X9+304]
	162 Move W10, [X8+304]
	163 Move X26, [X26+1696]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X9, [X9+200]
	166 Add X9, X9, X10
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X20
	170 Move X1, X31
	171 Call "il2cpp_vm_object_is_inst", X0
	172 Move X19, X0
	173 Move X0, [X26]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Compare X19, 0
	179 JumpIfEqual {862}
	180 Move X0, X19
	181 Move X1, X31
	182 Call Type.get_IsPrimitive, X0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {210}
	187 Move X8, 0x536000
	188 Move X0, [X25]
	189 Move X8, [X8+3456]
	190 Move W9, [X0+224]
	191 Move X20, [X8]
	192 Compare W9, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Move X0, X20
	196 Move X1, X31
	197 Call Type.GetTypeFromHandle, X0
	198 Move X8, [X19]
	199 Move X1, X0
	200 Move X0, X19
	201 Move X9, [X8+2296]
	202 Move X2, [X8+2304]
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {233}
	208 Move X8, 0x53B000
	209 Move X8, [X8+856]
	210 Move X8, 0x537000
	211 Move X0, [X25]
	212 Move X8, [X8+2912]
	213 Move W9, [X0+224]
	214 Move X21, [X8]
	215 Compare W9, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X0, X21
	219 Move X1, X31
	220 Call Type.GetTypeFromHandle, X0
	221 Move X8, [X19]
	222 Move X1, X0
	223 Move X0, X19
	224 Move X9, [X8+2296]
	225 Move X2, [X8+2304]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {256}
	231 Move X8, 0x57A000
	232 Move X8, [X8+760]
	233 Move X8, 0x538000
	234 Move X0, [X25]
	235 Move X8, [X8+584]
	236 Move W9, [X0+224]
	237 Move X20, [X8]
	238 Compare W9, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X0, X20
	242 Move X1, X31
	243 Call Type.GetTypeFromHandle, X0
	244 Move X8, [X19]
	245 Move X1, X0
	246 Move X0, X19
	247 Move X9, [X8+2296]
	248 Move X2, [X8+2304]
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {323}
	254 Move X8, 0x544000
	255 Move X8, [X8+1088]
	256 Move X8, 0x538000
	257 Move X8, [X8+2744]
	258 Move X9, [X20]
	259 Move X8, [X8]
	260 Move W11, [X9+304]
	261 Move W10, [X8+304]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X9, [X9+200]
	264 Add X9, X9, X10
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X21, X31
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X8, 0x538000
	270 Move X0, [X25]
	271 Move X8, [X8+2736]
	272 Move W9, [X0+224]
	273 Move X22, [X8]
	274 Compare W9, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X0, X22
	278 Move X1, X31
	279 Call Type.GetTypeFromHandle, X0
	280 Move X8, [X26]
	281 Move X22, X0
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Compare X22, 0
	288 JumpIfEqual {862}
	289 Move X8, [X22]
	290 Move X0, X22
	291 Move X1, X19
	292 Move X9, [X8+680]
	293 Move X2, [X8+688]
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfEqual {850}
	299 Move X8, 0x57A000
	300 Move X0, [X25]
	301 Move X8, [X8+720]
	302 Move W9, [X0+224]
	303 Move X22, [X8]
	304 Compare W9, 0
	305 JumpIfNotEqual {307}
	306 Call 0x1C17DFC
	307 Move X0, X22
	308 Move X1, X31
	309 Call Type.GetTypeFromHandle, X0
	310 Move X8, [X19]
	311 Move X1, X0
	312 Move X0, X19
	313 Move X9, [X8+2296]
	314 Move X2, [X8+2304]
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfNotEqual {356}
	320 Move X8, 0x57A000
	321 Move X8, [X8+776]
	322 Move X19, X20
	323 Move X8, 0x536000
	324 Move X0, [X25]
	325 Move X8, [X8+3432]
	326 Move W9, [X0+224]
	327 Move X20, [X8]
	328 Compare W9, 0
	329 JumpIfNotEqual {331}
	330 Call 0x1C17DFC
	331 Move X0, X20
	332 Move X1, X31
	333 Call Type.GetTypeFromHandle, X0
	334 Move X8, [X19]
	335 Move X1, X0
	336 Move X0, X19
	337 Move X9, [X8+2296]
	338 Move X2, [X8+2304]
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {379}
	344 Move X8, 0x50F000
	345 Move X8, [X8+2600]
	346 Move X0, [X8]
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X8, 0x57A000
	352 Move X8, [X8+784]
	353 Move X1, X31
	354 Move X0, [X8]
	355 Call Debug.LogWarning, X0
	356 Move X8, 0x538000
	357 Move X0, [X25]
	358 Move X8, [X8+1680]
	359 Move W9, [X0+224]
	360 Move X22, [X8]
	361 Compare W9, 0
	362 JumpIfNotEqual {364}
	363 Call 0x1C17DFC
	364 Move X0, X22
	365 Move X1, X31
	366 Call Type.GetTypeFromHandle, X0
	367 Move X8, [X19]
	368 Move X1, X0
	369 Move X0, X19
	370 Move X9, [X8+2296]
	371 Move X2, [X8+2304]
	372 NotImplemented "Instruction BLR not yet implemented."
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {484}
	377 Move X8, 0x579000
	378 Move X8, [X8+752]
	379 Move X8, 0x535000
	380 Move X0, [X25]
	381 Move X8, [X8+3472]
	382 Move W9, [X0+224]
	383 Move X20, [X8]
	384 Compare W9, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X0, X20
	388 Move X1, X31
	389 Call Type.GetTypeFromHandle, X0
	390 Move X8, [X19]
	391 Move X1, X0
	392 Move X0, X19
	393 Move X9, [X8+2296]
	394 Move X2, [X8+2304]
	395 NotImplemented "Instruction BLR not yet implemented."
	396 Move TEMP, X0
	397 And TEMP, TEMP, 1
	398 Compare TEMP, 1
	399 JumpIfNotEqual {636}
	400 Move X8, 0x562000
	401 Move X8, [X8+1384]
	402 Move X8, [X20+16]
	403 Compare X8, 0
	404 JumpIfEqual {862}
	405 Move X8, [X8+24]
	406 Compare X8, 0
	407 JumpIfEqual {862}
	408 Move X21, [X8+24]
	409 Move X8, 0x537000
	410 Move X8, [X8+2576]
	411 Move X0, [X8]
	412 Call 0x1C17F10
	413 Move X1, X21
	414 Move X22, X0
	415 Call AndroidJavaObject..ctor, X0, X1
	416 Move X8, 0x50E000
	417 Move X8, [X8+2504]
	418 Move X21, [X8]
	419 Move X8, [X21+56]
	420 Compare X8, 0
	421 JumpIfNotEqual {425}
	422 Move X0, X21
	423 Call 0x1C5D6E0
	424 Move X8, [X21+56]
	425 Move X0, [X8+16]
	426 Move W8, [X0+309]
	427 Move TEMP, X8
	428 And TEMP, TEMP, 1
	429 Compare TEMP, 1
	430 JumpIfEqual {432}
	431 Call 0x1C5D684
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {436}
	435 Call 0x1C17DFC
	436 Move X8, [X21+56]
	437 Move X0, [X8+16]
	438 Move W8, [X0+309]
	439 Move TEMP, X8
	440 And TEMP, TEMP, 1
	441 Compare TEMP, 1
	442 JumpIfEqual {444}
	443 Call 0x1C5D684
	444 Compare X22, 0
	445 JumpIfEqual {854}
	446 Move X9, 0x579000
	447 Move X8, [X0+184]
	448 Move X9, [X9+744]
	449 Move X10, 0x50E000
	450 Move X10, [X10+2472]
	451 Move X2, [X8]
	452 Move X1, [X9]
	453 Move X3, [X10]
	454 Move X0, X22
	455 Call AndroidJavaObject.Call, X0, X1, X2
	456 Move X1, X0
	457 Move X8, 0x554000
	458 Move X8, [X8+3104]
	459 Move X9, 0x517000
	460 Move X9, [X9+2120]
	461 Move X0, [X8]
	462 Move X2, [X9]
	463 Move X3, X31
	464 Call String.Concat, X0, X1, X2
	465 Move X21, X0
	466 Move W24, W31
	467 Move X23, X31
	468 Move X10, 0x50E000
	469 Move X8, [X22]
	470 Move X10, [X10+3584]
	471 NotImplemented "Instruction LDRH not yet implemented."
	472 Move X1, [X10]
	473 Compare X9, 0
	474 JumpIfEqual {481}
	475 Move X10, [X8+176]
	476 Add X10, X10, 8
	477 NotImplemented "Instruction LDUR not yet implemented."
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Subtract X9, X9, 1
	480 Add X10, X10, 16
	481 Move X0, X22
	482 Move W2, W31
	483 Call 0x1C5D788
	484 Move X8, 0x537000
	485 Move X0, [X25]
	486 Move X8, [X8+1688]
	487 Move W9, [X0+224]
	488 Move X22, [X8]
	489 Compare W9, 0
	490 JumpIfNotEqual {492}
	491 Call 0x1C17DFC
	492 Move X0, X22
	493 Move X1, X31
	494 Call Type.GetTypeFromHandle, X0
	495 Move X8, [X19]
	496 Move X1, X0
	497 Move X0, X19
	498 Move X9, [X8+2296]
	499 Move X2, [X8+2304]
	500 NotImplemented "Instruction BLR not yet implemented."
	501 Move TEMP, X0
	502 And TEMP, TEMP, 1
	503 Compare TEMP, 1
	504 JumpIfNotEqual {727}
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move X9, 0x537000
	507 Move X9, [X9+2576]
	508 Move X8, [X20]
	509 Move X1, [X9]
	510 Move W10, [X8+304]
	511 Move W9, [X1+304]
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Move X8, [X8+200]
	514 Add X8, X8, X9
	515 NotImplemented "Instruction LDUR not yet implemented."
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Move X23, 0x50E000
	518 Move X23, [X23+2504]
	519 Move X22, [X23]
	520 Move X8, [X22+56]
	521 Compare X8, 0
	522 JumpIfNotEqual {526}
	523 Move X0, X22
	524 Call 0x1C5D6E0
	525 Move X8, [X22+56]
	526 Move X0, [X8+16]
	527 Move W8, [X0+309]
	528 Move TEMP, X8
	529 And TEMP, TEMP, 1
	530 Compare TEMP, 1
	531 JumpIfEqual {533}
	532 Call 0x1C5D684
	533 Move W8, [X0+224]
	534 Compare W8, 0
	535 JumpIfNotEqual {537}
	536 Call 0x1C17DFC
	537 Move X8, [X22+56]
	538 Move X0, [X8+16]
	539 Move W8, [X0+309]
	540 Move TEMP, X8
	541 And TEMP, TEMP, 1
	542 Compare TEMP, 1
	543 JumpIfEqual {545}
	544 Call 0x1C5D684
	545 Move X9, 0x579000
	546 Move X10, 0x50E000
	547 Move X8, [X0+184]
	548 Move X9, [X9+736]
	549 Move X10, [X10+2464]
	550 Move X0, X20
	551 Move X2, [X8]
	552 Move X1, [X9]
	553 Move X3, [X10]
	554 Call AndroidJavaObject.Call, X0, X1, X2
	555 Move X23, [X23]
	556 Move X22, X0
	557 Move X8, [X23+56]
	558 Compare X8, 0
	559 JumpIfNotEqual {563}
	560 Move X0, X23
	561 Call 0x1C5D6E0
	562 Move X8, [X23+56]
	563 Move X0, [X8+16]
	564 Move W8, [X0+309]
	565 Move TEMP, X8
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {570}
	569 Call 0x1C5D684
	570 Move W8, [X0+224]
	571 Compare W8, 0
	572 JumpIfNotEqual {574}
	573 Call 0x1C17DFC
	574 Move X8, [X23+56]
	575 Move X0, [X8+16]
	576 Move W8, [X0+309]
	577 Move TEMP, X8
	578 And TEMP, TEMP, 1
	579 Compare TEMP, 1
	580 JumpIfEqual {582}
	581 Call 0x1C5D684
	582 Compare X22, 0
	583 JumpIfEqual {952}
	584 Move X9, 0x579000
	585 Move X8, [X0+184]
	586 Move X9, [X9+744]
	587 Move X10, 0x50E000
	588 Move X10, [X10+2472]
	589 Move X2, [X8]
	590 Move X1, [X9]
	591 Move X3, [X10]
	592 Move X0, X22
	593 Call AndroidJavaObject.Call, X0, X1, X2
	594 Move X1, X0
	595 Move X8, 0x554000
	596 Move X8, [X8+3104]
	597 Move X9, 0x517000
	598 Move X9, [X9+2120]
	599 Move X0, [X8]
	600 Move X2, [X9]
	601 Move X3, X31
	602 Call String.Concat, X0, X1, X2
	603 Move W24, W31
	604 Move X23, X31
	605 Move X21, X0
	606 Move X10, 0x50E000
	607 Move X8, [X22]
	608 Move X10, [X10+3584]
	609 NotImplemented "Instruction LDRH not yet implemented."
	610 Move X1, [X10]
	611 Compare X9, 0
	612 JumpIfEqual {619}
	613 Move X10, [X8+176]
	614 Add X10, X10, 8
	615 NotImplemented "Instruction LDUR not yet implemented."
	616 NotImplemented "Instruction CMP not yet implemented."
	617 Subtract X9, X9, 1
	618 Add X10, X10, 16
	619 Move X0, X22
	620 Move W2, W31
	621 Call 0x1C5D788
	622 Move X8, 0x579000
	623 Move X8, [X8+728]
	624 Move X21, [X8]
	625 Move X0, X21
	626 Move X20, [X31+64]
	627 Move X19, [X31+72]
	628 Move X22, [X31+48]
	629 Move X21, [X31+56]
	630 Move X24, [X31+32]
	631 Move X23, [X31+40]
	632 Move X26, [X31+16]
	633 Move X25, [X31+24]
	634 Move X30, [X31+80]
	635 Return X0
	636 Move X8, 0x535000
	637 Move X0, [X25]
	638 Move X8, [X8+3448]
	639 Move W9, [X0+224]
	640 Move X20, [X8]
	641 Compare W9, 0
	642 JumpIfNotEqual {644}
	643 Call 0x1C17DFC
	644 Move X0, X20
	645 Move X1, X31
	646 Call Type.GetTypeFromHandle, X0
	647 Move X8, [X19]
	648 Move X1, X0
	649 Move X0, X19
	650 Move X9, [X8+2296]
	651 Move X2, [X8+2304]
	652 NotImplemented "Instruction BLR not yet implemented."
	653 Move TEMP, X0
	654 And TEMP, TEMP, 1
	655 Compare TEMP, 1
	656 JumpIfNotEqual {659}
	657 Move X8, 0x53F000
	658 Move X8, [X8+464]
	659 Move X8, 0x535000
	660 Move X0, [X25]
	661 Move X8, [X8+3464]
	662 Move W9, [X0+224]
	663 Move X20, [X8]
	664 Compare W9, 0
	665 JumpIfNotEqual {667}
	666 Call 0x1C17DFC
	667 Move X0, X20
	668 Move X1, X31
	669 Call Type.GetTypeFromHandle, X0
	670 Move X8, [X19]
	671 Move X1, X0
	672 Move X0, X19
	673 Move X9, [X8+2296]
	674 Move X2, [X8+2304]
	675 NotImplemented "Instruction BLR not yet implemented."
	676 Move TEMP, X0
	677 And TEMP, TEMP, 1
	678 Compare TEMP, 1
	679 JumpIfNotEqual {693}
	680 Move X8, 0x53A000
	681 Move X8, [X8+848]
	682 NotImplemented "Instruction LDRSW not yet implemented."
	683 Add X8, X8, X9
	684 Add X0, X8, 312
	685 Move X8, [X0]
	686 Move X1, [X0+8]
	687 Move X0, X22
	688 NotImplemented "Instruction BLR not yet implemented."
	689 Compare X23, 0
	690 JumpIfNotEqual {852}
	691 Compare W24, 0
	692 JumpIfNotEqual {268}
	693 Move X8, 0x536000
	694 Move X0, [X25]
	695 Move X8, [X8+2688]
	696 Move W9, [X0+224]
	697 Move X20, [X8]
	698 Compare W9, 0
	699 JumpIfNotEqual {701}
	700 Call 0x1C17DFC
	701 Move X0, X20
	702 Move X1, X31
	703 Call Type.GetTypeFromHandle, X0
	704 Move X8, [X19]
	705 Move X1, X0
	706 Move X0, X19
	707 Move X9, [X8+2296]
	708 Move X2, [X8+2304]
	709 NotImplemented "Instruction BLR not yet implemented."
	710 Move TEMP, X0
	711 And TEMP, TEMP, 1
	712 Compare TEMP, 1
	713 JumpIfNotEqual {804}
	714 Move X8, 0x546000
	715 Move X8, [X8+3912]
	716 NotImplemented "Instruction LDRSW not yet implemented."
	717 Add X8, X8, X9
	718 Add X0, X8, 312
	719 Move X8, [X0]
	720 Move X1, [X0+8]
	721 Move X0, X22
	722 NotImplemented "Instruction BLR not yet implemented."
	723 Compare X23, 0
	724 JumpIfNotEqual {852}
	725 Compare W24, 0
	726 JumpIfEqual {625}
	727 Move X8, 0x537000
	728 Move X0, [X25]
	729 Move X8, [X8+1704]
	730 Move W9, [X0+224]
	731 Move X21, [X8]
	732 Compare W9, 0
	733 JumpIfNotEqual {735}
	734 Call 0x1C17DFC
	735 Move X0, X21
	736 Move X1, X31
	737 Call Type.GetTypeFromHandle, X0
	738 Move X8, [X26]
	739 Move X21, X0
	740 Move W9, [X8+224]
	741 Compare W9, 0
	742 JumpIfNotEqual {745}
	743 Move X0, X8
	744 Call 0x1C17DFC
	745 Compare X21, 0
	746 JumpIfEqual {862}
	747 Move X8, [X21]
	748 Move X0, X21
	749 Move X1, X19
	750 Move X9, [X8+680]
	751 Move X2, [X8+688]
	752 NotImplemented "Instruction BLR not yet implemented."
	753 Move TEMP, X0
	754 And TEMP, TEMP, 1
	755 Compare TEMP, 1
	756 JumpIfNotEqual {855}
	757 Move X8, [X19]
	758 Move X0, X19
	759 Move X9, [X8+1080]
	760 Move X1, [X8+1088]
	761 NotImplemented "Instruction BLR not yet implemented."
	762 NotImplemented "Instruction CMP not yet implemented."
	763 Move X8, 0x50E000
	764 Move X8, [X8+2288]
	765 Move X0, [X8]
	766 Call 0x1C17F10
	767 Move X1, X31
	768 Move X20, X0
	769 Call StringBuilder..ctor, X0
	770 Compare X20, 0
	771 JumpIfEqual {862}
	772 Move W1, 91
	773 Move X0, X20
	774 Move X2, X31
	775 Call StringBuilder.Append, X0, X1
	776 Move X8, [X19]
	777 Move X0, X19
	778 Move X9, [X8+1064]
	779 Move X1, [X8+1072]
	780 NotImplemented "Instruction BLR not yet implemented."
	781 Call _AndroidJNIHelper.GetSignature, X0
	782 Move X1, X0
	783 Move X0, X20
	784 Move X2, X31
	785 Call StringBuilder.Append, X0, X1
	786 Move X0, X20
	787 Move X1, X31
	788 Call StringBuilder.get_Length, X0
	789 NotImplemented "Instruction CMP not yet implemented."
	790 Move X8, [X20]
	791 Move X0, X20
	792 Move X20, [X31+64]
	793 Move X19, [X31+72]
	794 Move X22, [X31+48]
	795 Move X21, [X31+56]
	796 Move X2, [X8+360]
	797 Move X1, [X8+368]
	798 Move X24, [X31+32]
	799 Move X23, [X31+40]
	800 Move X26, [X31+16]
	801 Move X25, [X31+24]
	802 Move X30, [X31+80]
	803 CallNoReturn X2
	804 Move X8, 0x536000
	805 Move X0, [X25]
	806 Move X8, [X8+2680]
	807 Move W9, [X0+224]
	808 Move X20, [X8]
	809 Compare W9, 0
	810 JumpIfNotEqual {812}
	811 Call 0x1C17DFC
	812 Move X0, X20
	813 Move X1, X31
	814 Call Type.GetTypeFromHandle, X0
	815 Move X8, [X19]
	816 Move X1, X0
	817 Move X0, X19
	818 Move X9, [X8+2296]
	819 Move X2, [X8+2304]
	820 NotImplemented "Instruction BLR not yet implemented."
	821 Move TEMP, X0
	822 And TEMP, TEMP, 1
	823 Compare TEMP, 1
	824 JumpIfNotEqual {827}
	825 Move X8, 0x536000
	826 Move X8, [X8+3040]
	827 Move X8, 0x535000
	828 Move X0, [X25]
	829 Move X8, [X8+3440]
	830 Move W9, [X0+224]
	831 Move X20, [X8]
	832 Compare W9, 0
	833 JumpIfNotEqual {835}
	834 Call 0x1C17DFC
	835 Move X0, X20
	836 Move X1, X31
	837 Call Type.GetTypeFromHandle, X0
	838 Move X8, [X19]
	839 Move X1, X0
	840 Move X0, X19
	841 Move X9, [X8+2296]
	842 Move X2, [X8+2304]
	843 NotImplemented "Instruction BLR not yet implemented."
	844 Move TEMP, X0
	845 And TEMP, TEMP, 1
	846 Compare TEMP, 1
	847 JumpIfNotEqual {850}
	848 Move X8, 0x554000
	849 Move X8, [X8+3520]
	850 Move X8, 0x50E000
	851 Move X8, [X8+2440]
	852 Move X0, X23
	853 Call 0x1C17F18
	854 Call 0x1C17F20
	855 Move X8, 0x50E000
	856 Move X8, [X8+2760]
	857 Move W1, 6
	858 Move X0, [X8]
	859 Call 0x1C17D6C
	860 Compare X0, 0
	861 JumpIfNotEqual {883}
	862 Call 0x1C17F20
	863 Move X0, 0x50E000
	864 Move X0, [X0+2000]
	865 Call 0x1C17D08
	866 Call 0x1C17F10
	867 Move X19, X0
	868 Move X0, 0x579000
	869 Move X0, [X0+792]
	870 Call 0x1C17D08
	871 Move X1, X0
	872 Move X0, X19
	873 Move X2, X31
	874 Call Exception..ctor, X0, X1
	875 Move X0, 0x579000
	876 Move X0, [X0+800]
	877 Call 0x1C17D08
	878 Move X1, X0
	879 Move X0, X19
	880 Call 0x1C17DEC
	881 Move X0, X20
	882 Call 0x1C181E0
	883 Move W8, [X0+24]
	884 Move X21, X0
	885 Compare W8, 0
	886 JumpIfEqual {951}
	887 Move X8, 0x579000
	888 Move X8, [X8+768]
	889 Move X0, X19
	890 Move X8, [X8]
	891 Move [X21+32], X8
	892 Move X8, [X19]
	893 Move X9, [X8+360]
	894 Move X1, [X8+368]
	895 NotImplemented "Instruction BLR not yet implemented."
	896 Move W8, [X21+24]
	897 NotImplemented "Instruction CMP not yet implemented."
	898 Move [X21+40], X0
	899 Move X0, 0x579000
	900 Move X0, [X0+808]
	901 Call 0x1C17D08
	902 Move W8, [X21+24]
	903 NotImplemented "Instruction CMP not yet implemented."
	904 Move [X21+48], X0
	905 Move X8, [X20]
	906 Move X0, X20
	907 Move X9, [X8+360]
	908 Move X1, [X8+368]
	909 NotImplemented "Instruction BLR not yet implemented."
	910 Move W8, [X21+24]
	911 NotImplemented "Instruction CMP not yet implemented."
	912 Move [X21+56], X0
	913 Move X0, 0x542000
	914 Move X0, [X0+3888]
	915 Call 0x1C17D08
	916 Move W8, [X21+24]
	917 NotImplemented "Instruction CMP not yet implemented."
	918 Move [X21+64], X0
	919 Move X8, 0x561000
	920 Move X9, 0x579000
	921 Move X8, [X8+1112]
	922 Move X9, [X9+816]
	923 NotImplemented "Instruction CMP not yet implemented."
	924 NotImplemented "Instruction CSEL not yet implemented."
	925 Call 0x1C17D08
	926 Move X19, X0
	927 Move X0, X21
	928 Call 0x19913C0
	929 Move W1, 5
	930 Move X0, X21
	931 Move X2, X19
	932 Call 0x1994444
	933 Move X0, X21
	934 Move X1, X31
	935 Call String.Concat, X0
	936 Move X19, X0
	937 Move X0, 0x50E000
	938 Move X0, [X0+2000]
	939 Call 0x1C17D08
	940 Call 0x1C17F10
	941 Move X1, X19
	942 Move X2, X31
	943 Move X20, X0
	944 Call Exception..ctor, X0, X1
	945 Move X0, 0x579000
	946 Move X0, [X0+800]
	947 Call 0x1C17D08
	948 Move X1, X0
	949 Move X0, X20
	950 Call 0x1C17DEC
	951 Call 0x1C17F28
	952 Call 0x1C17F20
	953 Move X24, X0
	954 NotImplemented "Instruction CMP not yet implemented."
	955 Move X0, X24
	956 Call 0x3EB2AD0
	957 Move X23, [X0]
	958 Call 0x3EB2AE0
	959 Move W24, 1
	960 Compare X22, 0
	961 JumpIfNotEqual {606}
	962 Move X23, X31
	963 Move X24, X0
	964 Compare X22, 0
	965 JumpIfEqual {989}
	966 Move X10, 0x50E000
	967 Move X8, [X22]
	968 Move X10, [X10+3584]
	969 NotImplemented "Instruction LDRH not yet implemented."
	970 Move X1, [X10]
	971 Compare X9, 0
	972 JumpIfEqual {979}
	973 Move X10, [X8+176]
	974 Add X10, X10, 8
	975 NotImplemented "Instruction LDUR not yet implemented."
	976 NotImplemented "Instruction CMP not yet implemented."
	977 Subtract X9, X9, 1
	978 Add X10, X10, 16
	979 Move X0, X22
	980 Move W2, W31
	981 Call 0x1C5D788
	982 NotImplemented "Instruction LDRSW not yet implemented."
	983 Add X8, X8, X9
	984 Add X0, X8, 312
	985 Move X8, [X0]
	986 Move X1, [X0+8]
	987 Move X0, X22
	988 NotImplemented "Instruction BLR not yet implemented."
	989 Compare X23, 0
	990 JumpIfEqual {1032}
	991 Move X0, X23
	992 Call 0x1C17F18
	993 Move X24, X0
	994 NotImplemented "Instruction CMP not yet implemented."
	995 Move X0, X24
	996 Call 0x3EB2AD0
	997 Move X23, [X0]
	998 Call 0x3EB2AE0
	999 Move X21, X31
	1000 Move W24, 1
	1001 Compare X22, 0
	1002 JumpIfNotEqual {468}
	1003 Move X23, X31
	1004 Move X24, X0
	1005 Compare X22, 0
	1006 JumpIfEqual {1030}
	1007 Move X10, 0x50E000
	1008 Move X8, [X22]
	1009 Move X10, [X10+3584]
	1010 NotImplemented "Instruction LDRH not yet implemented."
	1011 Move X1, [X10]
	1012 Compare X9, 0
	1013 JumpIfEqual {1020}
	1014 Move X10, [X8+176]
	1015 Add X10, X10, 8
	1016 NotImplemented "Instruction LDUR not yet implemented."
	1017 NotImplemented "Instruction CMP not yet implemented."
	1018 Subtract X9, X9, 1
	1019 Add X10, X10, 16
	1020 Move X0, X22
	1021 Move W2, W31
	1022 Call 0x1C5D788
	1023 NotImplemented "Instruction LDRSW not yet implemented."
	1024 Add X8, X8, X9
	1025 Add X0, X8, 312
	1026 Move X8, [X0]
	1027 Move X1, [X0+8]
	1028 Move X0, X22
	1029 NotImplemented "Instruction BLR not yet implemented."
	1030 Compare X23, 0
	1031 JumpIfNotEqual {1034}
	1032 Move X0, X24
	1033 Call 0x1D2D690
	1034 Move X0, X23
	1035 Call 0x1C17F18
	1036 Call 0x1991590

Method: System.String GetSignature(System.Object[] args)

Disassembly:
	0x03BE6988 LDR X19, [X0]
	0x03BE698C BL 0x3EB1AE0
	0x03BE6990 BL 0x3BEB648
	0x03BE6994 CBZ X19, 0x3BE6964
	0x03BE6998 MOV X0, X19
	0x03BE699C BL 0x1C16F18
	0x03BE69A0 MOV X19, X31
	0x03BE69A4 B 0x3BE69AC
	0x03BE69A8 MOV X20, X0
	0x03BE69AC BL 0x3BEB648
	0x03BE69B0 CBNZ X19, 0x3BE69BC
	0x03BE69B4 MOV X0, X20
	0x03BE69B8 BL 0x1D2C690
	0x03BE69BC MOV X0, X19
	0x03BE69C0 BL 0x1C16F18
	0x03BE69C4 BL 0x1990590
	0x03BE69C8 STP X30, X23, [X31 - 0x30]!
	0x03BE69CC STP X22, X21, [X31 + 0x10]
	0x03BE69D0 STP X20, X19, [X31 + 0x20]
	0x03BE69D4 ADRP X21, 0x7FD000
	0x03BE69D8 ADRP X22, 0x578000
	0x03BE69DC ADRP X23, 0x578000
	0x03BE69E0 LDRB W8, [X21 + 0x196]
	0x03BE69E4 LDR X22, [X22 + 0x440]
	0x03BE69E8 LDR X23, [X23 + 0x448]
	0x03BE69EC MOV X19, X1
	0x03BE69F0 MOV X20, X0
	0x03BE69F4 TBNZ X8, 0x0, 0x3BE6A18
	0x03BE69F8 ADRP X0, 0x578000
	0x03BE69FC LDR X0, [X0 + 0x448]
	0x03BE6A00 BL 0x1C16CF4
	0x03BE6A04 ADRP X0, 0x578000
	0x03BE6A08 LDR X0, [X0 + 0x440]
	0x03BE6A0C BL 0x1C16CF4
	0x03BE6A10 MOVZ W8, 0x1
	0x03BE6A14 STRB W8, [X21 + 0x196]
	0x03BE6A18 LDR X1, [X22]
	0x03BE6A1C LDR X2, [X23]
	0x03BE6A20 MOV X0, X20
	0x03BE6A24 BL 0x3BE60BC
	0x03BE6A28 MOV X1, X0
	0x03BE6A2C MOV X0, X20
	0x03BE6A30 MOV X2, X31
	0x03BE6A34 MOV X3, X31
	0x03BE6A38 BL 0x3BE6A54
	0x03BE6A3C AND W8, W0, 0x1
	0x03BE6A40 STRB W8, [X19]
	0x03BE6A44 LDP X20, X19, [X31 + 0x20]
	0x03BE6A48 LDP X22, X21, [X31 + 0x10]
	0x03BE6A4C LDP X30, X23, [X31], #0x30
	0x03BE6A50 RET
	0x03BE6A54 STR X30, [X31 - 0x20]!
	0x03BE6A58 STP X20, X19, [X31 + 0x10]
	0x03BE6A5C BL 0x3BE7AE4
	0x03BE6A60 MOV W19, W0
	0x03BE6A64 BL 0x3BEB648
	0x03BE6A68 AND W0, W19, 0x1
	0x03BE6A6C LDP X20, X19, [X31 + 0x10]
	0x03BE6A70 LDR X30, [X31], #0x20
	0x03BE6A74 RET
	0x03BE6A78 CMP W1, 0x1
	0x03BE6A7C MOV X20, X0
	0x03BE6A80 B.NE 0x3BE6AA4
	0x03BE6A84 MOV X0, X20
	0x03BE6A88 BL 0x3EB1AD0
	0x03BE6A8C LDR X19, [X0]
	0x03BE6A90 BL 0x3EB1AE0
	0x03BE6A94 BL 0x3BEB648
	0x03BE6A98 CBZ X19, 0x3BE6A68
	0x03BE6A9C MOV X0, X19
	0x03BE6AA0 BL 0x1C16F18
	0x03BE6AA4 MOV X19, X31
	0x03BE6AA8 B 0x3BE6AB0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7FE000
	007 Move W8, [X20+1949]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x50E000
	014 Move X0, [X0+2288]
	015 Call 0x1C17CF4
	016 Move X0, 0x579000
	017 Move X0, [X0+824]
	018 Call 0x1C17CF4
	019 Move X0, 0x579000
	020 Move X0, [X0+832]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1949], W8
	024 Compare X19, 0
	025 JumpIfEqual {73}
	026 Move W8, [X19+24]
	027 Compare W8, 0
	028 JumpIfEqual {73}
	029 Move X8, 0x50E000
	030 Move X8, [X8+2288]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call StringBuilder..ctor, X0
	036 Compare X20, 0
	037 JumpIfEqual {83}
	038 Move W1, 40
	039 Move X0, X20
	040 Move X2, X31
	041 Call StringBuilder.Append, X0, X1
	042 Move X8, [X19+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X21, X31
	045 And X8, X8, 0
	046 Add X22, X19, 32
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X22]
	049 Call _AndroidJNIHelper.GetSignature, X0
	050 Move X1, X0
	051 Move X0, X20
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 Move W8, [X19+24]
	055 Add X21, X21, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, 0x579000
	058 Move X8, [X8+832]
	059 Move X0, X20
	060 Move X2, X31
	061 Move X1, [X8]
	062 Call StringBuilder.Append, X0, X1
	063 Move X8, [X20]
	064 Move X0, X20
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X2, [X8+360]
	070 Move X1, [X8+368]
	071 Move X30, [X31+48]
	072 CallNoReturn X2
	073 Move X8, 0x579000
	074 Move X8, [X8+824]
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X0, [X8]
	080 Move X30, [X31+48]
	081 Return X0
	082 Call 0x1C17F28
	083 Call 0x1C17F20

Method: System.String GetSignature(System.Object[] args)

Disassembly:
	0x022B4768 MOVZ W1, 0x29
	0x022B476C MOV X0, X20
	0x022B4770 MOV X2, X31
	0x022B4774 BL 0x3233D30
	0x022B4778 ADRP X8, 0x1E3F000
	0x022B477C LDR X8, [X8 + 0x6C0]
	0x022B4780 LDR X0, [X8]
	0x022B4784 LDR X8, [X19 + 0x38]
	0x022B4788 LDR W9, [X0 + 0xE0]
	0x022B478C LDR X19, [X8]
	0x022B4790 CBNZ W9, 0x22B4798
	0x022B4794 BL 0x1C16DFC
	0x022B4798 MOV X0, X19
	0x022B479C MOV X1, X31
	0x022B47A0 BL 0x338C698
	0x022B47A4 MOV X1, X31
	0x022B47A8 BL 0x3BE4AB0
	0x022B47AC MOV X1, X0
	0x022B47B0 MOV X0, X20
	0x022B47B4 MOV X2, X31
	0x022B47B8 BL 0x32333E0
	0x022B47BC LDR X8, [X20]
	0x022B47C0 MOV X0, X20
	0x022B47C4 LDP X20, X19, [X31 + 0x20]
	0x022B47C8 LDP X22, X21, [X31 + 0x10]
	0x022B47CC LDP X2, X1, [X8 + 0x168]
	0x022B47D0 LDP X30, X23, [X31], #0x30
	0x022B47D4 BR X2
	0x022B47D8 MOV X0, X19
	0x022B47DC BL 0x1C5C6E0
	0x022B47E0 CBNZ X21, 0x22B46E4
	0x022B47E4 ADRP X8, 0x1E3F000
	0x022B47E8 LDR X8, [X8 + 0x6C0]
	0x022B47EC LDR X0, [X8]
	0x022B47F0 LDR X8, [X19 + 0x38]
	0x022B47F4 LDR W9, [X0 + 0xE0]
	0x022B47F8 LDR X19, [X8]
	0x022B47FC CBNZ W9, 0x22B4804
	0x022B4800 BL 0x1C16DFC
	0x022B4804 MOV X0, X19
	0x022B4808 MOV X1, X31
	0x022B480C BL 0x338C698
	0x022B4810 MOV X1, X31
	0x022B4814 BL 0x3BE4AB0
	0x022B4818 ADRP X8, 0x1E68000
	0x022B481C LDR X8, [X8 + 0xA28]
	0x022B4820 LDP X20, X19, [X31 + 0x20]
	0x022B4824 LDP X22, X21, [X31 + 0x10]
	0x022B4828 MOV X1, X0
	0x022B482C LDR X8, [X8]
	0x022B4830 MOV X2, X31
	0x022B4834 MOV X0, X8
	0x022B4838 LDP X30, X23, [X31], #0x30
	0x022B483C B 0x321B938
	0x022B4840 BL 0x1C16F28
	0x022B4844 BL 0x1C16F20
	0x022B4848 STP X30, X23, [X31 - 0x30]!
	0x022B484C STP X22, X21, [X31 + 0x10]
	0x022B4850 STP X20, X19, [X31 + 0x20]
	0x022B4854 LDR X8, [X4 + 0x38]
	0x022B4858 MOV X22, X4
	0x022B485C MOV W19, W3
	0x022B4860 MOV W20, W2
	0x022B4864 MOV X21, X1
	0x022B4868 MOV X23, X0
	0x022B486C CBNZ X8, 0x22B488C
	0x022B4870 ADRP X0, 0x1E67000
	0x022B4874 LDR X0, [X0 + 0xA68]
	0x022B4878 BL 0x1C16CF4
	0x022B487C LDR X8, [X22 + 0x38]
	0x022B4880 CBNZ X8, 0x22B488C
	0x022B4884 MOV X0, X22
	0x022B4888 BL 0x1C5C6E0
	0x022B488C ADRP X8, 0x1E67000
	0x022B4890 LDR X8, [X8 + 0xA68]
	0x022B4894 LDR X23, [X23 + 0x10]
	0x022B4898 LDR X0, [X8]
	0x022B489C LDR W8, [X0 + 0xE0]
	0x022B48A0 CBNZ W8, 0x22B48A8
	0x022B48A4 BL 0x1C16DFC
	0x022B48A8 LDR X8, [X22 + 0x38]
	0x022B48AC MOV X1, X21
	0x022B48B0 MOV W2, W20
	0x022B48B4 MOV W3, W19
	0x022B48B8 LDR X4, [X8 + 0x8]
	0x022B48BC LDP X20, X19, [X31 + 0x20]
	0x022B48C0 LDP X22, X21, [X31 + 0x10]
	0x022B48C4 MOV X0, X23
	0x022B48C8 LDP X30, X23, [X31], #0x30
	0x022B48CC B 0x21DEBDC
	0x022B48D0 STP X30, X23, [X31 - 0x30]!
	0x022B48D4 STP X22, X21, [X31 + 0x10]
	0x022B48D8 STP X20, X19, [X31 + 0x20]
	0x022B48DC LDR X8, [X4 + 0x38]
	0x022B48E0 MOV X22, X4
	0x022B48E4 MOV W19, W3
	0x022B48E8 MOV W20, W2
	0x022B48EC MOV X21, X1
	0x022B48F0 MOV X23, X0
	0x022B48F4 CBNZ X8, 0x22B4914
	0x022B48F8 ADRP X0, 0x1E67000
	0x022B48FC LDR X0, [X0 + 0xA68]
	0x022B4900 BL 0x1C16CF4
	0x022B4904 LDR X8, [X22 + 0x38]
	0x022B4908 CBNZ X8, 0x22B4914
	0x022B490C MOV X0, X22
	0x022B4910 BL 0x1C5C6E0
	0x022B4914 ADRP X8, 0x1E67000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X1+56]
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {24}
	012 Move X0, 0x1E40000
	013 Move X0, [X0+2288]
	014 Call 0x1C17CF4
	015 Move X0, 0x1E40000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move X0, 0x1E69000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X8, [X19+56]
	022 Compare X8, 0
	023 JumpIfEqual {91}
	024 Compare X21, 0
	025 JumpIfEqual {95}
	026 Move W8, [X21+24]
	027 Compare W8, 0
	028 JumpIfEqual {95}
	029 Move X8, 0x1E40000
	030 Move X8, [X8+2288]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call StringBuilder..ctor, X0
	036 Compare X20, 0
	037 JumpIfEqual {124}
	038 Move W1, 40
	039 Move X0, X20
	040 Move X2, X31
	041 Call StringBuilder.Append, X0, X1
	042 Move X8, [X21+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, X31
	045 And X8, X8, 0
	046 Add X23, X21, 32
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X23]
	049 Move X1, X31
	050 Call _AndroidJNIHelper.GetSignature, X0
	051 Move X1, X0
	052 Move X0, X20
	053 Move X2, X31
	054 Call StringBuilder.Append, X0, X1
	055 Move W8, [X21+24]
	056 Add X22, X22, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W1, 41
	059 Move X0, X20
	060 Move X2, X31
	061 Call StringBuilder.Append, X0, X1
	062 Move X8, 0x1E40000
	063 Move X8, [X8+1728]
	064 Move X0, [X8]
	065 Move X8, [X19+56]
	066 Move W9, [X0+224]
	067 Move X19, [X8]
	068 Compare W9, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Move X1, X31
	073 Call Type.GetTypeFromHandle, X0
	074 Move X1, X31
	075 Call _AndroidJNIHelper.GetSignature, X0
	076 Move X1, X0
	077 Move X0, X20
	078 Move X2, X31
	079 Call StringBuilder.Append, X0, X1
	080 Move X8, [X20]
	081 Move X0, X20
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X2, [X8+360]
	087 Move X1, [X8+368]
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 CallNoReturn X2
	091 Move X0, X19
	092 Call 0x1C5D6E0
	093 Compare X21, 0
	094 JumpIfNotEqual {26}
	095 Move X8, 0x1E40000
	096 Move X8, [X8+1728]
	097 Move X0, [X8]
	098 Move X8, [X19+56]
	099 Move W9, [X0+224]
	100 Move X19, [X8]
	101 Compare W9, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X19
	105 Move X1, X31
	106 Call Type.GetTypeFromHandle, X0
	107 Move X1, X31
	108 Call _AndroidJNIHelper.GetSignature, X0
	109 Move X8, 0x1E69000
	110 Move X8, [X8+2600]
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X1, X0
	116 Move X8, [X8]
	117 Move X2, X31
	118 Move X0, X8
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Call String.Concat, X0, X1
	122 Return X0
	123 Call 0x1C17F28
	124 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BF552C MOV X1, X23
	0x03BF5530 BL 0x1C16E00

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

