Type: UnityEngine.AndroidJNIHelper

Method: System.Boolean get_debug()

Disassembly:
	0x03BE3B40 MOV X0, X20
	0x03BE3B44 MOV X2, X31
	0x03BE3B48 BL 0x3395194
	0x03BE3B4C TBZ X0, 0x0, 0x3BE3DB8
	0x03BE3B50 ADRP X8, 0x510000
	0x03BE3B54 LDR X8, [X8 + 0xA28]
	0x03BE3B58 LDR X0, [X8]
	0x03BE3B5C LDR W8, [X0 + 0xE0]
	0x03BE3B60 CBNZ W8, 0x3BE3B68
	0x03BE3B64 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x801000
	004 Move X0, [X19+368]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51290112
	008 Add X0, X0, 2692
	009 Call 0x1C17CB8
	010 Move [X19+368], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_debug(System.Boolean value)

Disassembly:
	0x03BE3B68 ADRP X8, 0x57B000
	0x03BE3B6C LDR X8, [X8 + 0x270]
	0x03BE3B70 MOV X1, X31
	0x03BE3B74 LDR X0, [X8]
	0x03BE3B78 BL 0x3C06A04
	0x03BE3B7C ADRP X8, 0x510000
	0x03BE3B80 LDR X8, [X8 + 0x618]
	0x03BE3B84 MOV X0, X19
	0x03BE3B88 LDR X20, [X8]
	0x03BE3B8C MOV X1, X20
	0x03BE3B90 BL 0x1C16E00
	0x03BE3B94 CBZ X0, 0x3BE4088
	0x03BE3B98 LDP X20, X19, [X31 + 0x50]
	0x03BE3B9C LDP X22, X21, [X31 + 0x40]
	0x03BE3BA0 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x801000
	005 Move X1, [X20+376]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51171328
	010 Add X0, X0, 3956
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+376], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.IntPtr GetConstructorID(System.IntPtr javaClass)

Disassembly:
	0x03BE3BA4 LDP X26, X25, [X31 + 0x20]
	0x03BE3BA8 LDP X28, X27, [X31 + 0x10]
	0x03BE3BAC LDP X29, X30, [X31], #0x60
	0x03BE3BB0 B 0x3BEEAA0
	0x03BE3BB4 ADRP X8, 0x539000
	0x03BE3BB8 LDR X0, [X23]
	0x03BE3BBC LDR X8, [X8 + 0xAB0]
	0x03BE3BC0 LDR W9, [X0 + 0xE0]
	0x03BE3BC4 LDR X21, [X8]
	0x03BE3BC8 CBNZ W9, 0x3BE3BD0
	0x03BE3BCC BL 0x1C16DFC
	0x03BE3BD0 MOV X0, X21
	0x03BE3BD4 MOV X1, X31
	0x03BE3BD8 BL 0x338C698
	0x03BE3BDC LDR X8, [X22]
	0x03BE3BE0 MOV X21, X0
	0x03BE3BE4 LDR W9, [X8 + 0xE0]
	0x03BE3BE8 CBNZ W9, 0x3BE3BF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x801000
	006 Move X21, 0x511000
	007 Move W8, [X20+384]
	008 Move X21, [X21+2440]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x511000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+384], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call _AndroidJNIHelper.GetConstructorID, X0, X1
	026 Return X0

Method: System.IntPtr GetConstructorID(System.IntPtr javaClass, System.String signature)

Disassembly:
	0x03BE3BEC MOV X0, X8

ISIL:
No ISIL was generated
Method: System.IntPtr GetMethodID(System.IntPtr javaClass, System.String methodName)

Disassembly:
	0x03BE3DB8 ADRP X8, 0x537000
	0x03BE3DBC LDR X0, [X22]
	0x03BE3DC0 LDR X8, [X8 + 0xD90]
	0x03BE3DC4 LDR W9, [X0 + 0xE0]
	0x03BE3DC8 LDR X21, [X8]
	0x03BE3DCC CBNZ W9, 0x3BE3DD4
	0x03BE3DD0 BL 0x1C16DFC
	0x03BE3DD4 MOV X0, X21
	0x03BE3DD8 MOV X1, X31
	0x03BE3DDC BL 0x338C698
	0x03BE3DE0 MOV X1, X0
	0x03BE3DE4 MOV X0, X20
	0x03BE3DE8 MOV X2, X31
	0x03BE3DEC BL 0x3395194
	0x03BE3DF0 TBZ X0, 0x0, 0x3BE3E2C
	0x03BE3DF4 ADRP X8, 0x53F000
	0x03BE3DF8 LDR X8, [X8 + 0x708]
	0x03BE3DFC MOV X0, X19
	0x03BE3E00 LDR X20, [X8]
	0x03BE3E04 MOV X1, X20
	0x03BE3E08 BL 0x1C16E00
	0x03BE3E0C CBZ X0, 0x3BE4088
	0x03BE3E10 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x801000
	007 Move X22, 0x511000
	008 Move W8, [X21+385]
	009 Move X22, [X22+2440]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x511000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+385], W8
	021 Move X2, [X22]
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move W3, W31
	029 Move X30, [X31+48]
	030 Call _AndroidJNIHelper.GetMethodID, X0, X1, X2, X3
	031 Return X0

Method: System.IntPtr GetMethodID(System.IntPtr javaClass, System.String methodName, System.String signature)

Disassembly:
	0x03BE3E1C LDP X26, X25, [X31 + 0x20]
	0x03BE3E20 LDP X28, X27, [X31 + 0x10]

ISIL:
	001 Move W3, W31

Method: System.IntPtr GetMethodID(System.IntPtr javaClass, System.String methodName, System.String signature, System.Boolean isStatic)

Disassembly:
	0x03BE3E14 LDP X22, X21, [X31 + 0x40]
	0x03BE3E18 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 And W3, W3, 1
	002 Call _AndroidJNIHelper.GetMethodID, X0, X1, X2, X3
	003 Return X0

Method: System.IntPtr GetFieldID(System.IntPtr javaClass, System.String fieldName)

Disassembly:
	0x03BE3FFC ADRP X8, 0x537000
	0x03BE4000 LDR X0, [X22]
	0x03BE4004 B 0x3EB19C4
	0x03BE4008 LDR W9, [X0 + 0xE0]
	0x03BE400C LDR X21, [X8]
	0x03BE4010 CBNZ W9, 0x3BE4018
	0x03BE4014 BL 0x1C16DFC
	0x03BE4018 MOV X0, X21
	0x03BE401C MOV X1, X31
	0x03BE4020 BL 0x338C698
	0x03BE4024 MOV X1, X0
	0x03BE4028 MOV X0, X20
	0x03BE402C MOV X2, X31
	0x03BE4030 BL 0x3395194
	0x03BE4034 MOV X21, X31
	0x03BE4038 TBZ X0, 0x0, 0x3BE38FC
	0x03BE403C ADRP X8, 0x518000
	0x03BE4040 LDR X8, [X8 + 0x8D8]
	0x03BE4044 MOV X0, X19
	0x03BE4048 LDR X20, [X8]
	0x03BE404C MOV X1, X20
	0x03BE4050 BL 0x1C16E00
	0x03BE4054 CBZ X0, 0x3BE4088

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x800000
	007 Move X22, 0x510000
	008 Move W8, [X21+386]
	009 Move X22, [X22+2440]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x510000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+386], W8
	021 Move X2, [X22]
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move W3, W31
	029 Move X30, [X31+48]
	030 Call _AndroidJNIHelper.GetFieldID, X0, X1, X2, X3
	031 Return X0

Method: System.IntPtr GetFieldID(System.IntPtr javaClass, System.String fieldName, System.String signature)

Disassembly:
	0x03BE4060 LDP X24, X23, [X31 + 0x30]
	0x03BE4064 LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move W3, W31

Method: System.IntPtr GetFieldID(System.IntPtr javaClass, System.String fieldName, System.String signature, System.Boolean isStatic)

Disassembly:
	0x03BE4058 LDP X20, X19, [X31 + 0x50]
	0x03BE405C LDP X22, X21, [X31 + 0x40]

ISIL:
	001 And W3, W3, 1
	002 Call _AndroidJNIHelper.GetFieldID, X0, X1, X2, X3
	003 Return X0

Method: System.IntPtr CreateJavaRunnable(UnityEngine.AndroidJavaRunnable jrunnable)

Disassembly:
	0x03BE4340 LDR X8, [X21]

ISIL:
No ISIL was generated
Method: System.IntPtr CreateJavaProxy(UnityEngine.AndroidJavaProxy proxy)

Disassembly:
	0x03BE439C ADRP X9, 0x511000
	0x03BE43A0 LDR X9, [X9 + 0xA60]
	0x03BE43A4 LDR X9, [X9]
	0x03BE43A8 CMP X8, X9
	0x03BE43AC B.EQ 0x3BE4610
	0x03BE43B0 ADRP X9, 0x50F000
	0x03BE43B4 LDR X9, [X9 + 0xA90]
	0x03BE43B8 LDR X9, [X9]
	0x03BE43BC CMP X8, X9
	0x03BE43C0 B.EQ 0x3BE4628
	0x03BE43C4 ADRP X9, 0x512000
	0x03BE43C8 LDR X9, [X9 + 0x978]
	0x03BE43CC LDR X9, [X9]
	0x03BE43D0 CMP X8, X9
	0x03BE43D4 B.EQ 0x3BE4644
	0x03BE43D8 ADRP X9, 0x511000
	0x03BE43DC LDR X9, [X9 + 0x170]
	0x03BE43E0 LDR X9, [X9]
	0x03BE43E4 CMP X8, X9
	0x03BE43E8 B.NE 0x3BE45D0
	0x03BE43EC CMP X23, X27
	0x03BE43F0 B.CS 0x3BE467C
	0x03BE43F4 MOV X0, X21
	0x03BE43F8 BL 0x1C16E08
	0x03BE43FC LDRH W8, [X0]
	0x03BE4400 STRH W8, [X19]
	0x03BE4404 B 0x3BE45D0
	0x03BE4408 CMP X23, X27
	0x03BE440C B.CS 0x3BE467C
	0x03BE4410 STR X31, [X19]
	0x03BE4414 B 0x3BE45D0
	0x03BE4418 LDR X9, [X29]
	0x03BE441C LDR X8, [X21]
	0x03BE4420 CMP X8, X9
	0x03BE4424 B.EQ 0x3BE4518
	0x03BE4428 LDR X10, [X28]
	0x03BE442C LDRB W9, [X8 + 0x130]
	0x03BE4430 LDRB W11, [X10 + 0x130]
	0x03BE4434 CMP W9, W11
	0x03BE4438 B.CC 0x3BE4450
	0x03BE443C LDR X12, [X8 + 0xC8]
	0x03BE4440 ADD X11, X12, X11, 0x3, LSL
	0x03BE4444 LDUR X11, [X11 - 0x8]
	0x03BE4448 CMP X11, X10
	0x03BE444C B.EQ 0x3BE45A4
	0x03BE4450 ADRP X10, 0x538000
	0x03BE4454 LDR X10, [X10 + 0xA10]
	0x03BE4458 LDR X10, [X10]
	0x03BE445C LDRB W11, [X10 + 0x130]
	0x03BE4460 CMP W9, W11
	0x03BE4464 B.CC 0x3BE447C
	0x03BE4468 LDR X12, [X8 + 0xC8]
	0x03BE446C ADD X11, X12, X11, 0x3, LSL
	0x03BE4470 LDUR X11, [X11 - 0x8]
	0x03BE4474 CMP X11, X10
	0x03BE4478 B.EQ 0x3BE45B8
	0x03BE447C ADRP X10, 0x50F000
	0x03BE4480 LDR X10, [X10 + 0xEF0]
	0x03BE4484 LDR X10, [X10]
	0x03BE4488 LDRB W11, [X10 + 0x130]
	0x03BE448C CMP W9, W11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call GCHandle.Alloc, X0
	007 Move X20, 0x800000
	008 Move X8, [X20+1960]
	009 Move [X31+8], X0
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51089408
	013 Add X0, X0, 682
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+1960], X0
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X20, X0
	019 Move X0, [X31+8]
	020 Move X1, X31
	021 Call GCHandle.ToIntPtr, X0
	022 Move X1, X0
	023 Move X0, X20
	024 Move X2, X19
	025 Call _AndroidJNIHelper.CreateJavaProxy, X0, X1, X2
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Move X19, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X19
	033 Call 0x3EB2AD0
	034 Move X19, X0
	035 Move X0, 0x516000
	036 Move X0, [X0+3264]
	037 Call 0x1C17D08
	038 Move X8, [X19]
	039 Move X1, [X8]
	040 Call 0x1C18270
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {52}
	045 Move X19, [X19]
	046 Call 0x3EB2AE0
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Call GCHandle.Free, X0
	050 Move X0, X19
	051 Call 0x1C17F18
	052 Move W0, 8
	053 Call 0x3EB2AF0
	054 Move X8, [X19]
	055 Move [X0], X8
	056 Move X1, 0x2D1000
	057 Add X1, X1, 3672
	058 Move X2, X31
	059 Call 0x3EB2B00
	060 Move X19, X0
	061 Call 0x3EB2AE0
	062 Move X0, X19
	063 Call 0x1D2D690
	064 Call 0x1991590

Method: System.IntPtr ConvertToJNIArray(System.Array array)

Disassembly:
	0x03BE4540 LDR X8, [X8 + 0xA28]

ISIL:
No ISIL was generated
Method: UnityEngine.jvalue[] CreateJNIArgArray(System.Object[] args)

Disassembly:
	0x03BE5114 MOV X1, X0
	0x03BE5118 ADRP X8, 0x554000
	0x03BE511C LDR X8, [X8 + 0xC20]
	0x03BE5120 ADRP X9, 0x517000
	0x03BE5124 LDR X9, [X9 + 0x848]
	0x03BE5128 LDR X0, [X8]
	0x03BE512C LDR X2, [X9]
	0x03BE5130 MOV X3, X31
	0x03BE5134 BL 0x32274B8
	0x03BE5138 MOV X21, X0
	0x03BE513C MOV W24, W31
	0x03BE5140 MOV X23, X31
	0x03BE5144 ADRP X10, 0x50E000
	0x03BE5148 LDR X8, [X22]
	0x03BE514C LDR X10, [X10 + 0xE00]
	0x03BE5150 LDRH W9, [X8 + 0x12E]
	0x03BE5154 LDR X1, [X10]
	0x03BE5158 CBZ X9, 0x3BE517C
	0x03BE515C LDR X10, [X8 + 0xB0]
	0x03BE5160 ADD X10, X10, 0x8
	0x03BE5164 LDUR X11, [X10 - 0x8]
	0x03BE5168 CMP X11, X1
	0x03BE516C B.EQ 0x3BE543C
	0x03BE5170 SUBS X9, X9, 0x1
	0x03BE5174 ADD X10, X10, 0x10
	0x03BE5178 B.NE 0x3BE5164
	0x03BE517C MOV X0, X22
	0x03BE5180 MOV W2, W31
	0x03BE5184 BL 0x1C5C788
	0x03BE5188 B 0x3BE5448
	0x03BE518C ADRP X8, 0x537000
	0x03BE5190 LDR X0, [X25]
	0x03BE5194 LDR X8, [X8 + 0x698]
	0x03BE5198 LDR W9, [X0 + 0xE0]
	0x03BE519C LDR X22, [X8]
	0x03BE51A0 CBNZ W9, 0x3BE51A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7FF000
	005 Move W8, [X20+387]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x57A000
	012 Move X0, [X0+656]
	013 Call 0x1C17CF4
	014 Move X0, 0x551000
	015 Move X0, [X0+3816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+387], W8
	019 Compare X19, 0
	020 JumpIfEqual {42}
	021 Move X8, 0x551000
	022 Move X8, [X8+3816]
	023 Move W1, [X19+24]
	024 Move X20, 0x57A000
	025 Move X0, [X8]
	026 Move X20, [X20+656]
	027 Call 0x1C17D6C
	028 Move X1, [X20]
	029 Move X20, X0
	030 Call Span`1<jvalue>.op_Implicit, X0
	031 Move X2, X0
	032 Move X3, X1
	033 Move X0, X19
	034 Move X1, X2
	035 Move X2, X3
	036 Call _AndroidJNIHelper.CreateJNIArgArray, X0, X1
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void CreateJNIArgArray(System.Object[] args, System.Span`1<UnityEngine.jvalue> jniArgs)

Disassembly:
	0x03BE5724 LDP X9, X1, [X8 + 0x168]
	0x03BE5728 BLR X9
	0x03BE572C LDR W8, [X21 + 0x18]
	0x03BE5730 CMP W8, 0x1
	0x03BE5734 B.LS 0x3BE5814
	0x03BE5738 STR X0, [X21 + 0x28]
	0x03BE573C ADRP X0, 0x579000
	0x03BE5740 LDR X0, [X0 + 0x328]
	0x03BE5744 BL 0x1C16D08
	0x03BE5748 LDR W8, [X21 + 0x18]
	0x03BE574C CMP W8, 0x2
	0x03BE5750 B.LS 0x3BE5814
	0x03BE5754 STR X0, [X21 + 0x30]
	0x03BE5758 LDR X8, [X20]
	0x03BE575C MOV X0, X20
	0x03BE5760 LDP X9, X1, [X8 + 0x168]
	0x03BE5764 BLR X9
	0x03BE5768 LDR W8, [X21 + 0x18]
	0x03BE576C CMP W8, 0x3
	0x03BE5770 B.LS 0x3BE5814
	0x03BE5774 STR X0, [X21 + 0x38]
	0x03BE5778 ADRP X0, 0x542000
	0x03BE577C LDR X0, [X0 + 0xF30]
	0x03BE5780 BL 0x1C16D08
	0x03BE5784 LDR W8, [X21 + 0x18]
	0x03BE5788 CMP W8, 0x4
	0x03BE578C B.LS 0x3BE5814
	0x03BE5790 STR X0, [X21 + 0x40]
	0x03BE5794 ADRP X8, 0x561000
	0x03BE5798 ADRP X9, 0x579000
	0x03BE579C LDR X8, [X8 + 0x458]
	0x03BE57A0 LDR X9, [X9 + 0x330]
	0x03BE57A4 CMP X19, X20
	0x03BE57A8 CSEL X0, X9, X8, EQ
	0x03BE57AC BL 0x1C16D08
	0x03BE57B0 MOV X19, X0
	0x03BE57B4 MOV X0, X21
	0x03BE57B8 BL 0x19903C0
	0x03BE57BC MOVZ W1, 0x5
	0x03BE57C0 MOV X0, X21
	0x03BE57C4 MOV X2, X19
	0x03BE57C8 BL 0x1993444
	0x03BE57CC MOV X0, X21
	0x03BE57D0 MOV X1, X31
	0x03BE57D4 BL 0x32278CC
	0x03BE57D8 MOV X19, X0
	0x03BE57DC ADRP X0, 0x50E000
	0x03BE57E0 LDR X0, [X0 + 0x7D0]
	0x03BE57E4 BL 0x1C16D08
	0x03BE57E8 BL 0x1C16F10
	0x03BE57EC MOV X1, X19
	0x03BE57F0 MOV X2, X31
	0x03BE57F4 MOV X20, X0
	0x03BE57F8 BL 0x33B2C70
	0x03BE57FC ADRP X0, 0x579000
	0x03BE5800 LDR X0, [X0 + 0x320]
	0x03BE5804 BL 0x1C16D08
	0x03BE5808 MOV X1, X0
	0x03BE580C MOV X0, X20
	0x03BE5810 BL 0x1C16DEC
	0x03BE5814 BL 0x1C16F28
	0x03BE5818 BL 0x1C16F20
	0x03BE581C B 0x3BE5824
	0x03BE5820 B 0x3BE5824
	0x03BE5824 MOV X24, X0
	0x03BE5828 CMP W1, 0x1
	0x03BE582C B.NE 0x3BE584C
	0x03BE5830 MOV X0, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7FF000
	007 Move W8, [X22+388]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x57A000
	016 Move X0, [X0+696]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+388], W8
	020 Compare X20, 0
	021 JumpIfEqual {34}
	022 Move W8, [X20+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X20
	025 Move X1, X21
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Call _AndroidJNIHelper.CreateJNIArgArray, X0, X1
	033 Return 
	034 Call 0x1C17F20
	035 Move X0, X20
	036 Call 0x19913C0
	037 Move X8, [X20+24]
	038 Move X20, 0x50F000
	039 Move [X31+12], W8
	040 Move X20, [X20+1880]
	041 Move X0, X20
	042 Call 0x1C17D08
	043 Add X1, X31, 12
	044 Call 0x1C17E04
	045 Move X21, X0
	046 Move X0, 0x57A000
	047 Move X0, [X0+696]
	048 Call 0x1C17D08
	049 Move X0, X20
	050 Move [X31+8], W19
	051 Call 0x1C17D08
	052 Add X1, X31, 8
	053 Call 0x1C17E04
	054 Move X19, X0
	055 Move X0, 0x57A000
	056 Move X0, [X0+704]
	057 Call 0x1C17D08
	058 Move X1, X21
	059 Move X2, X19
	060 Move X3, X31
	061 Call String.Format, X0, X1, X2
	062 Move X19, X0
	063 Move X0, 0x517000
	064 Move X0, [X0+1400]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X31
	069 Move X20, X0
	070 Call ArgumentException..ctor, X0, X1
	071 Move X0, 0x57A000
	072 Move X0, [X0+712]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC

Method: System.Void DeleteJNIArgArray(System.Object[] args, UnityEngine.jvalue[] jniArgs)

Disassembly:
	0x03BE5834 BL 0x3EB1AD0
	0x03BE5838 LDR X23, [X0]
	0x03BE583C BL 0x3EB1AE0
	0x03BE5840 MOVZ W24, 0x1
	0x03BE5844 CBNZ X22, 0x3BE532C
	0x03BE5848 B 0x3BE54C8
	0x03BE584C MOV X23, X31
	0x03BE5850 B 0x3BE5858
	0x03BE5854 MOV X24, X0
	0x03BE5858 CBZ X22, 0x3BE58BC
	0x03BE585C ADRP X10, 0x50E000
	0x03BE5860 LDR X8, [X22]
	0x03BE5864 LDR X10, [X10 + 0xE00]
	0x03BE5868 LDRH W9, [X8 + 0x12E]
	0x03BE586C LDR X1, [X10]
	0x03BE5870 CBZ X9, 0x3BE5894
	0x03BE5874 LDR X10, [X8 + 0xB0]
	0x03BE5878 ADD X10, X10, 0x8
	0x03BE587C LDUR X11, [X10 - 0x8]
	0x03BE5880 CMP X11, X1
	0x03BE5884 B.EQ 0x3BE58A4
	0x03BE5888 SUBS X9, X9, 0x1
	0x03BE588C ADD X10, X10, 0x10
	0x03BE5890 B.NE 0x3BE587C
	0x03BE5894 MOV X0, X22
	0x03BE5898 MOV W2, W31
	0x03BE589C BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7FF000
	007 Move X22, 0x57A000
	008 Move W8, [X21+389]
	009 Move X22, [X22+656]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x57A000
	017 Move X0, [X0+656]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+389], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call Span`1<jvalue>.op_Implicit, X0
	024 Move X2, X0
	025 Move X0, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X3, X1
	031 Move X1, X2
	032 Move X2, X3
	033 Move X30, [X31+48]

Method: System.Void DeleteJNIArgArray(System.Object[] args, System.Span`1<UnityEngine.jvalue> jniArgs)

Disassembly:
	0x03BE59F8 CBZ X20, 0x3BE5AA8

ISIL:
	001 Call _AndroidJNIHelper.DeleteJNIArgArray, X0, X1
	002 Return 

Method: System.IntPtr GetConstructorID(System.IntPtr jclass, System.Object[] args)

Disassembly:
	0x03BE59FC MOVZ W1, 0x28
	0x03BE5A00 MOV X0, X20
	0x03BE5A04 MOV X2, X31
	0x03BE5A08 BL 0x3233D30
	0x03BE5A0C LDR X8, [X19 + 0x18]
	0x03BE5A10 CMP W8, 0x1
	0x03BE5A14 B.LT 0x3BE5A54
	0x03BE5A18 MOV X21, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X1
	005 Call _AndroidJNIHelper.GetSignature, X0
	006 Move X1, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call _AndroidJNIHelper.GetConstructorID, X0, X1
	011 Return X0

Method: System.IntPtr GetMethodID(System.IntPtr jclass, System.String methodName, System.Object[] args, System.Boolean isStatic)

Disassembly:
	0x03BE5A3C MOV X2, X31
	0x03BE5A40 BL 0x32333E0
	0x03BE5A44 LDR W8, [X19 + 0x18]
	0x03BE5A48 ADD X21, X21, 0x1
	0x03BE5A4C CMP X21, W8, SXTW
	0x03BE5A50 B.LT 0x3BE5A24
	0x03BE5A54 ADRP X8, 0x579000
	0x03BE5A58 LDR X8, [X8 + 0x340]
	0x03BE5A5C MOV X0, X20
	0x03BE5A60 MOV X2, X31
	0x03BE5A64 LDR X1, [X8]
	0x03BE5A68 BL 0x32333E0
	0x03BE5A6C LDR X8, [X20]
	0x03BE5A70 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, X2
	007 Move W19, W3
	008 Move X20, X1
	009 Call _AndroidJNIHelper.GetSignature, X0
	010 And W3, W19, 1
	011 Move X1, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X2, X0
	015 Move X0, X21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call _AndroidJNIHelper.GetMethodID, X0, X1, X2, X3
	019 Return X0

Method: System.String GetSignature(System.Object obj)

Disassembly:
	0x03BE5AAC STR X30, [X31 - 0x30]!

ISIL:
No ISIL was generated
Method: System.String GetSignature(System.Object[] args)

Disassembly:
	0x03BE6984 BL 0x3EB1AD0

ISIL:
No ISIL was generated
Method: ArrayType ConvertFromJNIArray(System.IntPtr array)

Disassembly:
	0x0227AF70 ADD X8, X31, 0x0
	0x0227AF74 SUB X26, X8, X9
	0x0227AF78 ADD X31, X26, 0x0
	0x0227AF7C MOV X0, X26
	0x0227AF80 MOV W1, W31
	0x0227AF84 MOV X2, X24
	0x0227AF88 BL 0x3EB1B10
	0x0227AF8C ADRP X8, 0x1E79000
	0x0227AF90 LDR X8, [X8 + 0x9D0]
	0x0227AF94 MOVZ W1, 0x1
	0x0227AF98 LDR X0, [X8]
	0x0227AF9C BL 0x1C16D6C
	0x0227AFA0 CBZ X0, 0x227B054
	0x0227AFA4 MOV X27, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X1, [X8]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Call 0x22AF998, X0
	018 Return X0

Method: System.IntPtr GetMethodID(System.IntPtr jclass, System.String methodName, System.Object[] args, System.Boolean isStatic)

Disassembly:
	0x0227B364 ADD X31, X29, 0x0
	0x0227B368 LDP X20, X19, [X31 + 0x50]
	0x0227B36C LDP X22, X21, [X31 + 0x40]
	0x0227B370 LDP X24, X23, [X31 + 0x30]
	0x0227B374 LDP X26, X25, [X31 + 0x20]
	0x0227B378 LDR X27, [X31 + 0x10]
	0x0227B37C LDP X29, X30, [X31], #0x60
	0x0227B380 RET
	0x0227B384 BL 0x3EB1B20
	0x0227B388 STP X30, X23, [X31 - 0x30]!
	0x0227B38C STP X22, X21, [X31 + 0x10]
	0x0227B390 STP X20, X19, [X31 + 0x20]
	0x0227B394 ADRP X22, 0x215E000
	0x0227B398 ADRP X23, 0x1E78000
	0x0227B39C LDRB W8, [X22 + 0x882]
	0x0227B3A0 LDR X23, [X23 + 0x9D0]
	0x0227B3A4 MOV X21, X2
	0x0227B3A8 MOV X19, X1
	0x0227B3AC MOV X20, X0
	0x0227B3B0 TBNZ X8, 0x0, 0x227B3C8
	0x0227B3B4 ADRP X0, 0x1E78000
	0x0227B3B8 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W21, W3
	009 Move X19, X2
	010 Move X20, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X4, [X8]
	019 And W3, W21, 1
	020 Move X0, X22
	021 Move X1, X20
	022 Move X2, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Move X23, [X31+56]
	029 Call 0x22B437C, X0, X1, X2, X3
	030 Return X0

Method: System.IntPtr GetFieldID(System.IntPtr jclass, System.String fieldName, System.Boolean isStatic)

Disassembly:
	0x0227B270 BL 0x3EB1B20
	0x0227B274 STP X29, X30, [X31 - 0x60]!
	0x0227B278 STR X27, [X31 + 0x10]
	0x0227B27C STP X26, X25, [X31 + 0x20]
	0x0227B280 STP X24, X23, [X31 + 0x30]
	0x0227B284 STP X22, X21, [X31 + 0x40]
	0x0227B288 STP X20, X19, [X31 + 0x50]
	0x0227B28C ADD X29, X31, 0x0
	0x0227B290 SUB X31, X31, 0x20
	0x0227B294 MRS X26, 0xC000
	0x0227B298 LDR X8, [X26 + 0x28]
	0x0227B29C MOV X19, X3
	0x0227B2A0 MOV X21, X2
	0x0227B2A4 MOV X22, X1
	0x0227B2A8 STUR X8, [X29 - 0x8]
	0x0227B2AC LDR X27, [X4 + 0x38]
	0x0227B2B0 MOV X20, X0
	0x0227B2B4 CBNZ X27, 0x227B2C8
	0x0227B2B8 MOV X0, X4
	0x0227B2BC MOV X23, X4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move W20, W2
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {16}
	012 Move X0, X3
	013 Move X22, X3
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X3, [X8]
	017 And W2, W20, 1
	018 Move X0, X21
	019 Move X1, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Call 0x22B41B4, X0, X1, X2
	026 Return X0

Method: System.String GetSignature(System.Object[] args)

Disassembly:
	0x0227B6D8 ADD X9, X24, 0xF
	0x0227B6DC AND X9, X9, 0x1FFFFFFFF
	0x0227B6E0 SUB X25, X8, X9
	0x0227B6E4 ADD X31, X25, 0x0
	0x0227B6E8 ADD X8, X31, 0x0
	0x0227B6EC SUB X26, X8, X9
	0x0227B6F0 ADD X31, X26, 0x0
	0x0227B6F4 MOV X0, X26
	0x0227B6F8 MOV W1, W31
	0x0227B6FC MOV X2, X24
	0x0227B700 BL 0x3EB1B10
	0x0227B704 ADRP X8, 0x1E78000
	0x0227B708 LDR X8, [X8 + 0x9D0]
	0x0227B70C MOVZ W1, 0x1
	0x0227B710 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X1, [X8]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X2, [X1]
	017 Move X30, [X31+32]
	018 CallNoReturn X2

Method: System.IntPtr Box(UnityEngine.jvalue val, System.String boxedClass, System.String signature)

Disassembly:
	0x03BE6AAC MOV X20, X0
	0x03BE6AB0 BL 0x3BEB648
	0x03BE6AB4 CBNZ X19, 0x3BE6AC0
	0x03BE6AB8 MOV X0, X20
	0x03BE6ABC BL 0x1D2C690
	0x03BE6AC0 MOV X0, X19
	0x03BE6AC4 BL 0x1C16F18
	0x03BE6AC8 BL 0x1990590
	0x03BE6ACC STP X30, X19, [X31 - 0x10]!
	0x03BE6AD0 ADRP X19, 0x7FD000
	0x03BE6AD4 LDR X0, [X19 + 0x198]
	0x03BE6AD8 CBNZ X0, 0x3BE6AEC
	0x03BE6ADC ADRP X0, 0xFFFFFFFFFCF2F000
	0x03BE6AE0 ADD X0, X0, 0xFAC
	0x03BE6AE4 BL 0x1C16CB8
	0x03BE6AE8 STR X0, [X19 + 0x198]
	0x03BE6AEC LDP X30, X19, [X31], #0x10
	0x03BE6AF0 BR X0
	0x03BE6AF4 STP X30, X19, [X31 - 0x10]!
	0x03BE6AF8 ADRP X19, 0x7FD000
	0x03BE6AFC LDR X0, [X19 + 0x1A0]
	0x03BE6B00 CBNZ X0, 0x3BE6B14
	0x03BE6B04 ADRP X0, 0xFFFFFFFFFCF45000
	0x03BE6B08 ADD X0, X0, 0xFFE
	0x03BE6B0C BL 0x1C16CB8
	0x03BE6B10 STR X0, [X19 + 0x1A0]
	0x03BE6B14 LDP X30, X19, [X31], #0x10
	0x03BE6B18 BR X0
	0x03BE6B1C STP X30, X19, [X31 - 0x10]!
	0x03BE6B20 ADRP X19, 0x7FD000
	0x03BE6B24 LDR X0, [X19 + 0x1A8]
	0x03BE6B28 CBNZ X0, 0x3BE6B3C
	0x03BE6B2C ADRP X0, 0xFFFFFFFFFCF38000
	0x03BE6B30 ADD X0, X0, 0x3AB
	0x03BE6B34 BL 0x1C16CB8
	0x03BE6B38 STR X0, [X19 + 0x1A8]
	0x03BE6B3C LDP X30, X19, [X31], #0x10
	0x03BE6B40 BR X0
	0x03BE6B44 STP X30, X19, [X31 - 0x10]!
	0x03BE6B48 ADRP X19, 0x7FD000
	0x03BE6B4C LDR X0, [X19 + 0x1B0]
	0x03BE6B50 CBNZ X0, 0x3BE6B64
	0x03BE6B54 ADRP X0, 0xFFFFFFFFFCF46000
	0x03BE6B58 ADD X0, X0, 0x2C
	0x03BE6B5C BL 0x1C16CB8
	0x03BE6B60 STR X0, [X19 + 0x1B0]
	0x03BE6B64 LDP X30, X19, [X31], #0x10
	0x03BE6B68 BR X0
	0x03BE6B6C STR X30, [X31 - 0x20]!
	0x03BE6B70 STP X20, X19, [X31 + 0x10]
	0x03BE6B74 ADRP X20, 0x7FD000
	0x03BE6B78 LDR X1, [X20 + 0x1B8]
	0x03BE6B7C MOV X19, X0
	0x03BE6B80 CBNZ X1, 0x3BE6B98
	0x03BE6B84 ADRP X0, 0xFFFFFFFFFCF42000
	0x03BE6B88 ADD X0, X0, 0xD9
	0x03BE6B8C BL 0x1C16CB8
	0x03BE6B90 MOV X1, X0
	0x03BE6B94 STR X0, [X20 + 0x1B8]
	0x03BE6B98 MOV X0, X19
	0x03BE6B9C LDP X20, X19, [X31 + 0x10]
	0x03BE6BA0 LDR X30, [X31], #0x20
	0x03BE6BA4 BR X1
	0x03BE6BA8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7FE000
	007 Move [X31+8], X0
	008 Move X21, 0x579000
	009 Move W8, [X22+390]
	010 Move X21, [X21+840]
	011 Move X20, X2
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x537000
	018 Move X0, [X0+1720]
	019 Call 0x1C17CF4
	020 Move X0, 0x579000
	021 Move X0, [X0+840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+390], W8
	025 Move X0, X19
	026 Call AndroidJNISafe.FindClass, X0
	027 Move X1, [X21]
	028 Move X19, X0
	029 Move X2, X20
	030 Call AndroidJNISafe.GetStaticMethodID, X0, X1, X2
	031 Move X1, X0
	032 Add X2, X31, 8
	033 Move W3, 1
	034 Move X0, X19
	035 Call AndroidJNISafe.CallStaticObjectMethod, X0, X1, X2
	036 Move X20, X0
	037 Move X0, X19
	038 Call AndroidJNISafe.DeleteLocalRef, X0
	039 Move X0, X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return X0
	046 Move X20, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X20
	049 Call 0x3EB2AD0
	050 Move X21, [X0]
	051 Call 0x3EB2AE0
	052 Move X0, X19
	053 Call AndroidJNISafe.DeleteLocalRef, X0
	054 Compare X21, 0
	055 JumpIfNotEqual {58}
	056 Move X20, X31
	057 Move X21, X31
	058 Move X0, X21
	059 Call 0x1C17F18
	060 Move X20, X0
	061 Move X0, X19
	062 Call AndroidJNISafe.DeleteLocalRef, X0
	063 Compare X21, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X20
	066 Call 0x1D2D690
	067 Move X0, X21
	068 Call 0x1C17F18
	069 Call 0x1991590

Method: System.IntPtr Box(System.SByte value)

Disassembly:
	0x03BE6D7C LDR X30, [X31], #0x20
	0x03BE6D80 BR X1
	0x03BE6D84 STP X30, X21, [X31 - 0x20]!
	0x03BE6D88 STP X20, X19, [X31 + 0x10]
	0x03BE6D8C ADRP X21, 0x7FD000
	0x03BE6D90 LDR X2, [X21 + 0x1F8]
	0x03BE6D94 MOV X19, X1
	0x03BE6D98 MOV X20, X0
	0x03BE6D9C CBNZ X2, 0x3BE6DB4
	0x03BE6DA0 ADRP X0, 0xFFFFFFFFFCF44000
	0x03BE6DA4 ADD X0, X0, 0x1C5
	0x03BE6DA8 BL 0x1C16CB8
	0x03BE6DAC MOV X2, X0
	0x03BE6DB0 STR X0, [X21 + 0x1F8]
	0x03BE6DB4 MOV X0, X20
	0x03BE6DB8 MOV X1, X19
	0x03BE6DBC LDP X20, X19, [X31 + 0x10]
	0x03BE6DC0 LDP X30, X21, [X31], #0x20
	0x03BE6DC4 BR X2
	0x03BE6DC8 STP X30, X19, [X31 - 0x10]!
	0x03BE6DCC ADRP X19, 0x7FD000
	0x03BE6DD0 LDR X0, [X19 + 0x200]
	0x03BE6DD4 CBNZ X0, 0x3BE6DE8
	0x03BE6DD8 ADRP X0, 0xFFFFFFFFFCF18000
	0x03BE6DDC ADD X0, X0, 0x6E3
	0x03BE6DE0 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7FE000
	007 Move X20, 0x579000
	008 Move X21, 0x579000
	009 Move W8, [X22+391]
	010 Move X20, [X20+848]
	011 Move X21, [X21+856]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x579000
	018 Move X0, [X0+848]
	019 Call 0x1C17CF4
	020 Move X0, 0x579000
	021 Move X0, [X0+856]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+391], W8
	025 Move X1, [X20]
	026 Move X2, [X21]
	027 And X0, X19, 255
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call AndroidJNIHelper.Box, X0, X1, X2
	034 Return X0

Method: System.IntPtr Box(System.Int16 value)

Disassembly:
	0x03BE6DE4 STR X0, [X19 + 0x200]
	0x03BE6DE8 LDP X30, X19, [X31], #0x10
	0x03BE6DEC BR X0
	0x03BE6DF0 STP X30, X19, [X31 - 0x10]!
	0x03BE6DF4 ADRP X19, 0x7FD000
	0x03BE6DF8 LDR X0, [X19 + 0x208]
	0x03BE6DFC CBNZ X0, 0x3BE6E10
	0x03BE6E00 ADRP X0, 0xFFFFFFFFFCF14000
	0x03BE6E04 ADD X0, X0, 0xC84
	0x03BE6E08 BL 0x1C16CB8
	0x03BE6E0C STR X0, [X19 + 0x208]
	0x03BE6E10 LDP X30, X19, [X31], #0x10
	0x03BE6E14 BR X0
	0x03BE6E18 STP X30, X19, [X31 - 0x10]!
	0x03BE6E1C ADRP X19, 0x7FD000
	0x03BE6E20 LDR X0, [X19 + 0x210]
	0x03BE6E24 CBNZ X0, 0x3BE6E38
	0x03BE6E28 ADRP X0, 0xFFFFFFFFFCF18000
	0x03BE6E2C ADD X0, X0, 0x70F
	0x03BE6E30 BL 0x1C16CB8
	0x03BE6E34 STR X0, [X19 + 0x210]
	0x03BE6E38 LDP X30, X19, [X31], #0x10
	0x03BE6E3C BR X0
	0x03BE6E40 STR X30, [X31 - 0x20]!
	0x03BE6E44 STP X20, X19, [X31 + 0x10]
	0x03BE6E48 ADRP X20, 0x7FD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7FE000
	007 Move X20, 0x579000
	008 Move X21, 0x579000
	009 Move W8, [X22+392]
	010 Move X20, [X20+864]
	011 Move X21, [X21+872]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x579000
	018 Move X0, [X0+864]
	019 Call 0x1C17CF4
	020 Move X0, 0x579000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+392], W8
	025 Move X1, [X20]
	026 Move X2, [X21]
	027 And X0, X19, 0xFFFF
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call AndroidJNIHelper.Box, X0, X1, X2
	034 Return X0

Method: System.IntPtr Box(System.Int32 value)

Disassembly:
	0x03BE6E4C LDR X1, [X20 + 0x218]
	0x03BE6E50 MOV X19, X0
	0x03BE6E54 CBNZ X1, 0x3BE6E6C
	0x03BE6E58 ADRP X0, 0xFFFFFFFFFCF44000
	0x03BE6E5C ADD X0, X0, 0x203
	0x03BE6E60 BL 0x1C16CB8
	0x03BE6E64 MOV X1, X0
	0x03BE6E68 STR X0, [X20 + 0x218]
	0x03BE6E6C MOV X0, X19
	0x03BE6E70 LDP X20, X19, [X31 + 0x10]
	0x03BE6E74 LDR X30, [X31], #0x20
	0x03BE6E78 BR X1
	0x03BE6E7C STR X30, [X31 - 0x20]!
	0x03BE6E80 STP X20, X19, [X31 + 0x10]
	0x03BE6E84 ADRP X20, 0x7FD000
	0x03BE6E88 LDR X1, [X20 + 0x220]
	0x03BE6E8C MOV W19, W0
	0x03BE6E90 CBNZ X1, 0x3BE6EA8
	0x03BE6E94 ADRP X0, 0xFFFFFFFFFCF3E000
	0x03BE6E98 ADD X0, X0, 0x651
	0x03BE6E9C BL 0x1C16CB8
	0x03BE6EA0 MOV X1, X0
	0x03BE6EA4 STR X0, [X20 + 0x220]
	0x03BE6EA8 MOV W0, W19
	0x03BE6EAC LDP X20, X19, [X31 + 0x10]
	0x03BE6EB0 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7FE000
	007 Move X20, 0x579000
	008 Move X21, 0x579000
	009 Move W8, [X22+393]
	010 Move X20, [X20+880]
	011 Move X21, [X21+888]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x579000
	018 Move X0, [X0+880]
	019 Call 0x1C17CF4
	020 Move X0, 0x579000
	021 Move X0, [X0+888]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+393], W8
	025 Move X1, [X20]
	026 Move X2, [X21]
	027 Move W0, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call AndroidJNIHelper.Box, X0, X1, X2
	034 Return X0

Method: System.IntPtr Box(System.Int64 value)

Disassembly:
	0x03BE6EB4 BR X1
	0x03BE6EB8 STR X30, [X31 - 0x20]!
	0x03BE6EBC STP X20, X19, [X31 + 0x10]
	0x03BE6EC0 ADRP X20, 0x7FD000
	0x03BE6EC4 LDR X1, [X20 + 0x228]
	0x03BE6EC8 MOV X19, X0
	0x03BE6ECC CBNZ X1, 0x3BE6EE4
	0x03BE6ED0 ADRP X0, 0xFFFFFFFFFCF1A000
	0x03BE6ED4 ADD X0, X0, 0x7C5
	0x03BE6ED8 BL 0x1C16CB8
	0x03BE6EDC MOV X1, X0
	0x03BE6EE0 STR X0, [X20 + 0x228]
	0x03BE6EE4 MOV X0, X19
	0x03BE6EE8 LDP X20, X19, [X31 + 0x10]
	0x03BE6EEC LDR X30, [X31], #0x20
	0x03BE6EF0 BR X1
	0x03BE6EF4 STR X30, [X31 - 0x20]!
	0x03BE6EF8 STP X20, X19, [X31 + 0x10]
	0x03BE6EFC ADRP X20, 0x7FD000
	0x03BE6F00 LDR X1, [X20 + 0x230]
	0x03BE6F04 MOV X19, X0
	0x03BE6F08 CBNZ X1, 0x3BE6F20
	0x03BE6F0C ADRP X0, 0xFFFFFFFFFCF20000
	0x03BE6F10 ADD X0, X0, 0x9F3
	0x03BE6F14 BL 0x1C16CB8
	0x03BE6F18 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7FE000
	007 Move X21, 0x579000
	008 Move X22, 0x579000
	009 Move W8, [X20+394]
	010 Move X21, [X21+896]
	011 Move X22, [X22+904]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x579000
	018 Move X0, [X0+896]
	019 Call 0x1C17CF4
	020 Move X0, 0x579000
	021 Move X0, [X0+904]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+394], W8
	025 Move X1, [X21]
	026 Move X2, [X22]
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call AndroidJNIHelper.Box, X0, X1, X2
	034 Return X0

Method: System.IntPtr Box(System.Single value)

Disassembly:
	0x03BE6F1C STR X0, [X20 + 0x230]
	0x03BE6F20 MOV X0, X19
	0x03BE6F24 LDP X20, X19, [X31 + 0x10]
	0x03BE6F28 LDR X30, [X31], #0x20
	0x03BE6F2C BR X1
	0x03BE6F30 STR X30, [X31 - 0x20]!
	0x03BE6F34 STP X20, X19, [X31 + 0x10]
	0x03BE6F38 ADRP X20, 0x7FD000
	0x03BE6F3C LDR X1, [X20 + 0x238]
	0x03BE6F40 MOV X19, X0
	0x03BE6F44 CBNZ X1, 0x3BE6F5C
	0x03BE6F48 ADRP X0, 0xFFFFFFFFFCF3C000
	0x03BE6F4C ADD X0, X0, 0x995
	0x03BE6F50 BL 0x1C16CB8
	0x03BE6F54 MOV X1, X0
	0x03BE6F58 STR X0, [X20 + 0x238]
	0x03BE6F5C MOV X0, X19
	0x03BE6F60 LDP X20, X19, [X31 + 0x10]
	0x03BE6F64 LDR X30, [X31], #0x20
	0x03BE6F68 BR X1
	0x03BE6F6C STR X30, [X31 - 0x20]!
	0x03BE6F70 STP X20, X19, [X31 + 0x10]
	0x03BE6F74 ADRP X20, 0x7FD000
	0x03BE6F78 LDR X1, [X20 + 0x240]
	0x03BE6F7C MOV X19, X0
	0x03BE6F80 CBNZ X1, 0x3BE6F98

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7FE000
	007 Move X19, 0x579000
	008 Move X20, 0x579000
	009 Move W8, [X21+395]
	010 Move X19, [X19+912]
	011 Move X20, [X20+920]
	012 Move V8, V0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x579000
	018 Move X0, [X0+920]
	019 Call 0x1C17CF4
	020 Move X0, 0x579000
	021 Move X0, [X0+912]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+395], W8
	025 Move X1, [X19]
	026 Move X2, [X20]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Move W0, S8
	032 Move V8, [X31+48]
	033 Call AndroidJNIHelper.Box, X0, X1, X2
	034 Return X0

Method: System.IntPtr Box(System.Double value)

Disassembly:
	0x03BE6F84 ADRP X0, 0xFFFFFFFFFCF34000
	0x03BE6F88 ADD X0, X0, 0x41D
	0x03BE6F8C BL 0x1C16CB8
	0x03BE6F90 MOV X1, X0
	0x03BE6F94 STR X0, [X20 + 0x240]
	0x03BE6F98 MOV X0, X19
	0x03BE6F9C LDP X20, X19, [X31 + 0x10]
	0x03BE6FA0 LDR X30, [X31], #0x20
	0x03BE6FA4 BR X1
	0x03BE6FA8 STP X30, X19, [X31 - 0x10]!
	0x03BE6FAC ADRP X19, 0x7FD000
	0x03BE6FB0 LDR X0, [X19 + 0x248]
	0x03BE6FB4 CBNZ X0, 0x3BE6FC8
	0x03BE6FB8 ADRP X0, 0xFFFFFFFFFCF34000
	0x03BE6FBC ADD X0, X0, 0x459
	0x03BE6FC0 BL 0x1C16CB8
	0x03BE6FC4 STR X0, [X19 + 0x248]
	0x03BE6FC8 LDP X30, X19, [X31], #0x10
	0x03BE6FCC BR X0
	0x03BE6FD0 STR X30, [X31 - 0x20]!
	0x03BE6FD4 STP X20, X19, [X31 + 0x10]
	0x03BE6FD8 ADRP X20, 0x7FD000
	0x03BE6FDC LDR X1, [X20 + 0x250]
	0x03BE6FE0 MOV X19, X0
	0x03BE6FE4 CBNZ X1, 0x3BE6FFC
	0x03BE6FE8 ADRP X0, 0xFFFFFFFFFCF46000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7FE000
	007 Move X19, 0x579000
	008 Move X20, 0x579000
	009 Move W8, [X21+396]
	010 Move X19, [X19+928]
	011 Move X20, [X20+936]
	012 Move V8, V0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x579000
	018 Move X0, [X0+936]
	019 Call 0x1C17CF4
	020 Move X0, 0x579000
	021 Move X0, [X0+928]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+396], W8
	025 Move X1, [X19]
	026 Move X2, [X20]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Move X0, D8
	032 Move V8, [X31+48]
	033 Call AndroidJNIHelper.Box, X0, X1, X2
	034 Return X0

Method: System.IntPtr Box(System.Char value)

Disassembly:
	0x03BE6FEC ADD X0, X0, 0x51
	0x03BE6FF0 BL 0x1C16CB8
	0x03BE6FF4 MOV X1, X0
	0x03BE6FF8 STR X0, [X20 + 0x250]
	0x03BE6FFC MOV X0, X19
	0x03BE7000 LDP X20, X19, [X31 + 0x10]
	0x03BE7004 LDR X30, [X31], #0x20
	0x03BE7008 BR X1
	0x03BE700C STR X30, [X31 - 0x20]!
	0x03BE7010 STP X20, X19, [X31 + 0x10]
	0x03BE7014 ADRP X20, 0x7FC000
	0x03BE7018 LDR X1, [X20 + 0x258]
	0x03BE701C MOV X19, X0
	0x03BE7020 CBNZ X1, 0x3BE7038
	0x03BE7024 ADRP X0, 0xFFFFFFFFFCF35000
	0x03BE7028 ADD X0, X0, 0x766
	0x03BE702C BL 0x1C16CB8
	0x03BE7030 MOV X1, X0
	0x03BE7034 STR X0, [X20 + 0x258]
	0x03BE7038 MOV X0, X19
	0x03BE703C LDP X20, X19, [X31 + 0x10]
	0x03BE7040 LDR X30, [X31], #0x20
	0x03BE7044 BR X1
	0x03BE7048 STR X30, [X31 - 0x20]!
	0x03BE704C STP X20, X19, [X31 + 0x10]
	0x03BE7050 ADRP X20, 0x7FC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7FE000
	007 Move X20, 0x579000
	008 Move X21, 0x578000
	009 Move W8, [X22+397]
	010 Move X20, [X20+944]
	011 Call 0x3EB2744
	012 Return X0
	013 Move W19, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x578000
	019 Move X0, [X0+952]
	020 Call 0x1C17CF4
	021 Move X0, 0x578000
	022 Move X0, [X0+944]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+397], W8
	026 Move X1, [X20]
	027 Move X2, [X21]
	028 And X0, X19, 0xFFFF
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call AndroidJNIHelper.Box, X0, X1, X2
	035 Return X0

Method: System.IntPtr Box(System.Boolean value)

Disassembly:
	0x03BE7054 LDR X1, [X20 + 0x260]
	0x03BE7058 MOV X19, X0
	0x03BE705C CBNZ X1, 0x3BE7074
	0x03BE7060 ADRP X0, 0xFFFFFFFFFCF43000
	0x03BE7064 ADD X0, X0, 0x235
	0x03BE7068 BL 0x1C16CB8
	0x03BE706C MOV X1, X0
	0x03BE7070 STR X0, [X20 + 0x260]
	0x03BE7074 MOV X0, X19
	0x03BE7078 LDP X20, X19, [X31 + 0x10]
	0x03BE707C LDR X30, [X31], #0x20
	0x03BE7080 BR X1
	0x03BE7084 STR X30, [X31 - 0x20]!
	0x03BE7088 STP X20, X19, [X31 + 0x10]
	0x03BE708C ADRP X20, 0x7FC000
	0x03BE7090 LDR X1, [X20 + 0x268]
	0x03BE7094 MOV X19, X0
	0x03BE7098 CBNZ X1, 0x3BE70B0
	0x03BE709C ADRP X0, 0xFFFFFFFFFCF29000
	0x03BE70A0 ADD X0, X0, 0x96C
	0x03BE70A4 BL 0x1C16CB8
	0x03BE70A8 MOV X1, X0
	0x03BE70AC STR X0, [X20 + 0x268]
	0x03BE70B0 MOV X0, X19
	0x03BE70B4 LDP X20, X19, [X31 + 0x10]
	0x03BE70B8 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7FD000
	007 Move X20, 0x578000
	008 Move X21, 0x578000
	009 Move W8, [X22+398]
	010 Move X20, [X20+960]
	011 Move X21, [X21+968]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x578000
	018 Move X0, [X0+968]
	019 Call 0x1C17CF4
	020 Move X0, 0x578000
	021 Move X0, [X0+960]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+398], W8
	025 Move X1, [X20]
	026 Move X2, [X21]
	027 And X0, X19, 1
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call AndroidJNIHelper.Box, X0, X1, X2
	034 Return X0

Method: System.IntPtr GetUnboxMethod(System.IntPtr obj, System.String methodName, System.String signature)

Disassembly:
	0x03BE70BC BR X1
	0x03BE70C0 STP X30, X21, [X31 - 0x20]!
	0x03BE70C4 STP X20, X19, [X31 + 0x10]
	0x03BE70C8 ADRP X21, 0x7FC000
	0x03BE70CC LDR X2, [X21 + 0x270]
	0x03BE70D0 MOV X19, X1
	0x03BE70D4 MOV X20, X0
	0x03BE70D8 CBNZ X2, 0x3BE70F0
	0x03BE70DC ADRP X0, 0xFFFFFFFFFCF39000
	0x03BE70E0 ADD X0, X0, 0x48C
	0x03BE70E4 BL 0x1C16CB8
	0x03BE70E8 MOV X2, X0
	0x03BE70EC STR X0, [X21 + 0x270]
	0x03BE70F0 MOV X0, X20
	0x03BE70F4 MOV X1, X19
	0x03BE70F8 LDP X20, X19, [X31 + 0x10]
	0x03BE70FC LDP X30, X21, [X31], #0x20
	0x03BE7100 BR X2
	0x03BE7104 STR X30, [X31 - 0x20]!
	0x03BE7108 STP X20, X19, [X31 + 0x10]
	0x03BE710C ADRP X20, 0x7FC000
	0x03BE7110 LDR X1, [X20 + 0x278]
	0x03BE7114 MOV W19, W0
	0x03BE7118 CBNZ X1, 0x3BE7130
	0x03BE711C ADRP X0, 0xFFFFFFFFFCF27000
	0x03BE7120 ADD X0, X0, 0x8CB
	0x03BE7124 BL 0x1C16CB8
	0x03BE7128 MOV X1, X0
	0x03BE712C STR X0, [X20 + 0x278]
	0x03BE7130 MOV W0, W19
	0x03BE7134 LDP X20, X19, [X31 + 0x10]
	0x03BE7138 LDR X30, [X31], #0x20
	0x03BE713C BR X1
	0x03BE7140 STR X30, [X31 - 0x20]!
	0x03BE7144 STP X20, X19, [X31 + 0x10]
	0x03BE7148 ADRP X20, 0x7FC000
	0x03BE714C LDR X1, [X20 + 0x280]
	0x03BE7150 MOV X19, X0
	0x03BE7154 CBNZ X1, 0x3BE716C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move X21, X1
	007 Call AndroidJNISafe.GetObjectClass, X0
	008 Move X19, X0
	009 Move X1, X21
	010 Move X2, X20
	011 Call AndroidJNISafe.GetMethodID, X0, X1, X2
	012 Move X20, X0
	013 Move X0, X19
	014 Call AndroidJNISafe.DeleteLocalRef, X0
	015 Move X0, X20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Return X0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X21, X0
	023 Move X0, X21
	024 Call 0x3EB2AD0
	025 Move X20, [X0]
	026 Call 0x3EB2AE0
	027 Move X0, X19
	028 Call AndroidJNISafe.DeleteLocalRef, X0
	029 Compare X20, 0
	030 JumpIfEqual {15}
	031 Move X0, X20
	032 Call 0x1C17F18
	033 Move X20, X31
	034 Move X21, X0
	035 Move X0, X19
	036 Call AndroidJNISafe.DeleteLocalRef, X0
	037 Compare X20, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X21
	040 Call 0x1D2D690
	041 Move X0, X20
	042 Call 0x1C17F18
	043 Call 0x1991590

Method: System.Void Unbox(System.IntPtr obj, out System.SByte value)

Disassembly:
	0x03BE72B0 STR X0, [X22 + 0x290]
	0x03BE72B4 MOV X0, X21
	0x03BE72B8 MOV X1, X20
	0x03BE72BC MOV X2, X19
	0x03BE72C0 LDP X20, X19, [X31 + 0x20]
	0x03BE72C4 LDP X22, X21, [X31 + 0x10]
	0x03BE72C8 LDR X30, [X31], #0x30
	0x03BE72CC BR X3
	0x03BE72D0 STR X30, [X31 - 0x20]!
	0x03BE72D4 STP X20, X19, [X31 + 0x10]
	0x03BE72D8 ADRP X20, 0x7FC000
	0x03BE72DC LDR X1, [X20 + 0x298]
	0x03BE72E0 MOV X19, X0
	0x03BE72E4 CBNZ X1, 0x3BE72FC
	0x03BE72E8 ADRP X0, 0xFFFFFFFFFCF45000
	0x03BE72EC ADD X0, X0, 0x89
	0x03BE72F0 BL 0x1C16CB8
	0x03BE72F4 MOV X1, X0
	0x03BE72F8 STR X0, [X20 + 0x298]
	0x03BE72FC MOV X0, X19
	0x03BE7300 LDP X20, X19, [X31 + 0x10]
	0x03BE7304 LDR X30, [X31], #0x20
	0x03BE7308 BR X1
	0x03BE730C STP X30, X21, [X31 - 0x20]!
	0x03BE7310 STP X20, X19, [X31 + 0x10]
	0x03BE7314 ADRP X21, 0x7FC000
	0x03BE7318 LDR X2, [X21 + 0x2A0]
	0x03BE731C MOV X19, X1
	0x03BE7320 MOV X20, X0
	0x03BE7324 CBNZ X2, 0x3BE733C
	0x03BE7328 ADRP X0, 0xFFFFFFFFFCF25000
	0x03BE732C ADD X0, X0, 0x68D
	0x03BE7330 BL 0x1C16CB8
	0x03BE7334 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7FD000
	008 Move X22, 0x578000
	009 Move X23, 0x578000
	010 Move W8, [X21+399]
	011 Move X22, [X22+976]
	012 Move X23, [X23+984]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x578000
	020 Move X0, [X0+976]
	021 Call 0x1C17CF4
	022 Move X0, 0x578000
	023 Move X0, [X0+984]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+399], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Call AndroidJNIHelper.GetUnboxMethod, X0, X1, X2
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X31
	034 Move X3, X31
	035 Call AndroidJNISafe.CallSByteMethod, X0, X1, X2
	036 Move [X19], W0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void Unbox(System.IntPtr obj, out System.Int16 value)

Disassembly:
	0x03BE73B0 ADRP X22, 0x7FC000
	0x03BE73B4 LDR X3, [X22 + 0x2B0]
	0x03BE73B8 MOV X19, X2
	0x03BE73BC MOV X20, X1
	0x03BE73C0 MOV X21, X0
	0x03BE73C4 CBNZ X3, 0x3BE73DC
	0x03BE73C8 ADRP X0, 0xFFFFFFFFFCF23000
	0x03BE73CC ADD X0, X0, 0xBB8
	0x03BE73D0 BL 0x1C16CB8
	0x03BE73D4 MOV X3, X0
	0x03BE73D8 STR X0, [X22 + 0x2B0]
	0x03BE73DC MOV X0, X21
	0x03BE73E0 MOV X1, X20
	0x03BE73E4 MOV X2, X19
	0x03BE73E8 LDP X20, X19, [X31 + 0x20]
	0x03BE73EC LDP X22, X21, [X31 + 0x10]
	0x03BE73F0 LDR X30, [X31], #0x30
	0x03BE73F4 BR X3
	0x03BE73F8 STR X30, [X31 - 0x30]!
	0x03BE73FC STP X22, X21, [X31 + 0x10]
	0x03BE7400 STP X20, X19, [X31 + 0x20]
	0x03BE7404 ADRP X22, 0x7FC000
	0x03BE7408 LDR X3, [X22 + 0x2B8]
	0x03BE740C MOV X19, X2
	0x03BE7410 MOV X20, X1
	0x03BE7414 MOV X21, X0
	0x03BE7418 CBNZ X3, 0x3BE7430
	0x03BE741C ADRP X0, 0xFFFFFFFFFCF09000
	0x03BE7420 ADD X0, X0, 0x7C1
	0x03BE7424 BL 0x1C16CB8
	0x03BE7428 MOV X3, X0
	0x03BE742C STR X0, [X22 + 0x2B8]
	0x03BE7430 MOV X0, X21
	0x03BE7434 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7FD000
	008 Move X22, 0x578000
	009 Move X23, 0x578000
	010 Move W8, [X21+400]
	011 Move X22, [X22+992]
	012 Move X23, [X23+1000]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x578000
	020 Move X0, [X0+992]
	021 Call 0x1C17CF4
	022 Move X0, 0x578000
	023 Move X0, [X0+1000]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+400], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Call AndroidJNIHelper.GetUnboxMethod, X0, X1, X2
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X31
	034 Move X3, X31
	035 Call AndroidJNISafe.CallShortMethod, X0, X1, X2
	036 NotImplemented "Instruction STRH not yet implemented."
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void Unbox(System.IntPtr obj, out System.Int32 value)

Disassembly:
	0x03BE74B0 MOV X19, X0
	0x03BE74B4 CBNZ X1, 0x3BE74CC
	0x03BE74B8 ADRP X0, 0xFFFFFFFFFCF15000
	0x03BE74BC ADD X0, X0, 0xB01
	0x03BE74C0 BL 0x1C16CB8
	0x03BE74C4 MOV X1, X0
	0x03BE74C8 STR X0, [X20 + 0x2C8]
	0x03BE74CC MOV X0, X19
	0x03BE74D0 LDP X20, X19, [X31 + 0x10]
	0x03BE74D4 LDR X30, [X31], #0x20
	0x03BE74D8 BR X1
	0x03BE74DC STR X30, [X31 - 0x20]!
	0x03BE74E0 STP X20, X19, [X31 + 0x10]
	0x03BE74E4 ADRP X20, 0x7FC000
	0x03BE74E8 LDR X1, [X20 + 0x2C8]
	0x03BE74EC MOV X19, X0
	0x03BE74F0 CBNZ X1, 0x3BE7508
	0x03BE74F4 ADRP X0, 0xFFFFFFFFFCF15000
	0x03BE74F8 ADD X0, X0, 0xB01
	0x03BE74FC BL 0x1C16CB8
	0x03BE7500 MOV X1, X0
	0x03BE7504 STR X0, [X20 + 0x2C8]
	0x03BE7508 MOV X0, X19
	0x03BE750C LDP X20, X19, [X31 + 0x10]
	0x03BE7510 LDR X30, [X31], #0x20
	0x03BE7514 BR X1
	0x03BE7518 STR X30, [X31 - 0x20]!
	0x03BE751C STP X20, X19, [X31 + 0x10]
	0x03BE7520 ADRP X20, 0x7FC000
	0x03BE7524 LDR X1, [X20 + 0x2D0]
	0x03BE7528 MOV X19, X0
	0x03BE752C CBNZ X1, 0x3BE7544
	0x03BE7530 ADRP X0, 0xFFFFFFFFFCF1F000
	0x03BE7534 ADD X0, X0, 0xA27

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7FD000
	008 Move X22, 0x578000
	009 Move X23, 0x578000
	010 Move W8, [X21+401]
	011 Move X22, [X22+1008]
	012 Move X23, [X23+1016]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x578000
	020 Move X0, [X0+1016]
	021 Call 0x1C17CF4
	022 Move X0, 0x578000
	023 Move X0, [X0+1008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+401], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Call AndroidJNIHelper.GetUnboxMethod, X0, X1, X2
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X31
	034 Move X3, X31
	035 Call AndroidJNISafe.CallIntMethod, X0, X1, X2
	036 Move [X19], W0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void Unbox(System.IntPtr obj, out System.Int64 value)

Disassembly:
	0x03BE75B0 BL 0x1C16CB8
	0x03BE75B4 MOV X1, X0
	0x03BE75B8 STR X0, [X20 + 0x2E0]
	0x03BE75BC MOV X0, X19
	0x03BE75C0 LDP X20, X19, [X31 + 0x10]
	0x03BE75C4 LDR X30, [X31], #0x20
	0x03BE75C8 BR X1
	0x03BE75CC STR X30, [X31 - 0x20]!
	0x03BE75D0 STP X20, X19, [X31 + 0x10]
	0x03BE75D4 ADRP X20, 0x7FC000
	0x03BE75D8 LDR X1, [X20 + 0x2E8]
	0x03BE75DC MOV X19, X0
	0x03BE75E0 CBNZ X1, 0x3BE75F8
	0x03BE75E4 ADRP X0, 0xFFFFFFFFFCF25000
	0x03BE75E8 ADD X0, X0, 0x6CF
	0x03BE75EC BL 0x1C16CB8
	0x03BE75F0 MOV X1, X0
	0x03BE75F4 STR X0, [X20 + 0x2E8]
	0x03BE75F8 MOV X0, X19
	0x03BE75FC LDP X20, X19, [X31 + 0x10]
	0x03BE7600 LDR X30, [X31], #0x20
	0x03BE7604 BR X1
	0x03BE7608 STR X30, [X31 - 0x20]!
	0x03BE760C STP X20, X19, [X31 + 0x10]
	0x03BE7610 ADRP X20, 0x7FC000
	0x03BE7614 LDR X1, [X20 + 0x2F0]
	0x03BE7618 MOV X19, X0
	0x03BE761C CBNZ X1, 0x3BE7634
	0x03BE7620 ADRP X0, 0xFFFFFFFFFCF1D000
	0x03BE7624 ADD X0, X0, 0xAC5
	0x03BE7628 BL 0x1C16CB8
	0x03BE762C MOV X1, X0
	0x03BE7630 STR X0, [X20 + 0x2F0]
	0x03BE7634 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7FD000
	008 Move X22, 0x578000
	009 Move X23, 0x578000
	010 Move W8, [X21+402]
	011 Move X22, [X22+1024]
	012 Move X23, [X23+1032]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x578000
	020 Move X0, [X0+1024]
	021 Call 0x1C17CF4
	022 Move X0, 0x578000
	023 Move X0, [X0+1032]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+402], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Call AndroidJNIHelper.GetUnboxMethod, X0, X1, X2
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X31
	034 Move X3, X31
	035 Call AndroidJNISafe.CallLongMethod, X0, X1, X2
	036 Move [X19], X0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void Unbox(System.IntPtr obj, out System.Single value)

Disassembly:
	0x03BE76B0 MOVZ W8, 0x1
	0x03BE76B4 STRB W8, [X22 + 0x300]
	0x03BE76B8 CBZ X21, 0x3BE76C8
	0x03BE76BC LDR W3, [X21 + 0x18]
	0x03BE76C0 ADD X2, X21, 0x20
	0x03BE76C4 B 0x3BE76D0
	0x03BE76C8 MOV X2, X31
	0x03BE76CC MOV X3, X31
	0x03BE76D0 MOV X0, X20
	0x03BE76D4 MOV X1, X19
	0x03BE76D8 LDP X20, X19, [X31 + 0x20]
	0x03BE76DC LDP X22, X21, [X31 + 0x10]
	0x03BE76E0 LDR X30, [X31], #0x30
	0x03BE76E4 B 0x3BE76E8
	0x03BE76E8 SUB X31, X31, 0x40
	0x03BE76EC STP X3, X30, [X31 + 0x8]
	0x03BE76F0 STP X22, X21, [X31 + 0x20]
	0x03BE76F4 STP X20, X19, [X31 + 0x30]
	0x03BE76F8 ADRP X21, 0x7FC000
	0x03BE76FC STR X2, [X31]
	0x03BE7700 ADRP X22, 0x577000
	0x03BE7704 LDRB W8, [X21 + 0x301]
	0x03BE7708 LDR X22, [X22 + 0x458]
	0x03BE770C MOV X19, X1
	0x03BE7710 MOV X20, X0
	0x03BE7714 TBNZ X8, 0x0, 0x3BE772C
	0x03BE7718 ADRP X0, 0x577000
	0x03BE771C LDR X0, [X0 + 0x458]
	0x03BE7720 BL 0x1C16CF4
	0x03BE7724 MOVZ W8, 0x1
	0x03BE7728 STRB W8, [X21 + 0x301]
	0x03BE772C LDR X1, [X22]
	0x03BE7730 ADD X0, X31, 0x0
	0x03BE7734 BL 0x25FF02C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7FD000
	008 Move X22, 0x578000
	009 Move X23, 0x578000
	010 Move W8, [X21+403]
	011 Move X22, [X22+1040]
	012 Move X23, [X23+1048]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x578000
	020 Move X0, [X0+1048]
	021 Call 0x1C17CF4
	022 Move X0, 0x578000
	023 Move X0, [X0+1040]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+403], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Call AndroidJNIHelper.GetUnboxMethod, X0, X1, X2
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X31
	034 Move X3, X31
	035 Call AndroidJNISafe.CallFloatMethod, X0, X1, X2
	036 Move [X19], S0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void Unbox(System.IntPtr obj, out System.Double value)

Disassembly:
	0x03BE77BC MOV X1, X20
	0x03BE77C0 MOV X2, X19
	0x03BE77C4 LDP X20, X19, [X31 + 0x20]
	0x03BE77C8 LDP X22, X21, [X31 + 0x10]
	0x03BE77CC LDR X30, [X31], #0x30
	0x03BE77D0 BR X3
	0x03BE77D4 STR X30, [X31 - 0x30]!
	0x03BE77D8 STP X22, X21, [X31 + 0x10]
	0x03BE77DC STP X20, X19, [X31 + 0x20]
	0x03BE77E0 ADRP X22, 0x7FC000
	0x03BE77E4 LDRB W8, [X22 + 0x310]
	0x03BE77E8 MOV X21, X2
	0x03BE77EC MOV X19, X1
	0x03BE77F0 MOV X20, X0
	0x03BE77F4 TBNZ X8, 0x0, 0x3BE780C
	0x03BE77F8 ADRP X0, 0x577000
	0x03BE77FC LDR X0, [X0 + 0x450]
	0x03BE7800 BL 0x1C16CF4
	0x03BE7804 MOVZ W8, 0x1
	0x03BE7808 STRB W8, [X22 + 0x310]
	0x03BE780C CBZ X21, 0x3BE781C
	0x03BE7810 LDR W3, [X21 + 0x18]
	0x03BE7814 ADD X2, X21, 0x20
	0x03BE7818 B 0x3BE7824
	0x03BE781C MOV X2, X31
	0x03BE7820 MOV X3, X31
	0x03BE7824 MOV X0, X20
	0x03BE7828 MOV X1, X19
	0x03BE782C LDP X20, X19, [X31 + 0x20]
	0x03BE7830 LDP X22, X21, [X31 + 0x10]
	0x03BE7834 LDR X30, [X31], #0x30
	0x03BE7838 B 0x3BE783C
	0x03BE783C SUB X31, X31, 0x40
	0x03BE7840 STP X3, X30, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7FD000
	008 Move X22, 0x578000
	009 Move X23, 0x578000
	010 Move W8, [X21+404]
	011 Move X22, [X22+1056]
	012 Move X23, [X23+1064]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x578000
	020 Move X0, [X0+1056]
	021 Call 0x1C17CF4
	022 Move X0, 0x578000
	023 Move X0, [X0+1064]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+404], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Call AndroidJNIHelper.GetUnboxMethod, X0, X1, X2
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X31
	034 Move X3, X31
	035 Call AndroidJNISafe.CallDoubleMethod, X0, X1, X2
	036 Move [X19], D0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void Unbox(System.IntPtr obj, out System.Char value)

Disassembly:
	0x03BE78C8 LDR X30, [X31 + 0x10]
	0x03BE78CC ADD X31, X31, 0x40
	0x03BE78D0 RET
	0x03BE78D4 STR X30, [X31 - 0x30]!
	0x03BE78D8 STP X22, X21, [X31 + 0x10]
	0x03BE78DC STP X20, X19, [X31 + 0x20]
	0x03BE78E0 ADRP X22, 0x7FC000
	0x03BE78E4 LDR X3, [X22 + 0x318]
	0x03BE78E8 MOV X19, X2
	0x03BE78EC MOV X20, X1
	0x03BE78F0 MOV X21, X0
	0x03BE78F4 CBNZ X3, 0x3BE790C
	0x03BE78F8 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03BE78FC ADD X0, X0, 0xB21
	0x03BE7900 BL 0x1C16CB8
	0x03BE7904 MOV X3, X0
	0x03BE7908 STR X0, [X22 + 0x318]
	0x03BE790C MOV X0, X21
	0x03BE7910 MOV X1, X20
	0x03BE7914 MOV X2, X19
	0x03BE7918 LDP X20, X19, [X31 + 0x20]
	0x03BE791C LDP X22, X21, [X31 + 0x10]
	0x03BE7920 LDR X30, [X31], #0x30
	0x03BE7924 BR X3
	0x03BE7928 STR X30, [X31 - 0x30]!
	0x03BE792C STP X22, X21, [X31 + 0x10]
	0x03BE7930 STP X20, X19, [X31 + 0x20]
	0x03BE7934 ADRP X22, 0x7FC000
	0x03BE7938 LDRB W8, [X22 + 0x320]
	0x03BE793C MOV X21, X2
	0x03BE7940 MOV X19, X1
	0x03BE7944 MOV X20, X0
	0x03BE7948 TBNZ X8, 0x0, 0x3BE7960
	0x03BE794C ADRP X0, 0x577000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7FD000
	008 Move X22, 0x578000
	009 Move X23, 0x578000
	010 Move W8, [X21+405]
	011 Move X22, [X22+1072]
	012 Move X23, [X23+1080]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x578000
	020 Move X0, [X0+1080]
	021 Call 0x1C17CF4
	022 Move X0, 0x578000
	023 Move X0, [X0+1072]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+405], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Call AndroidJNIHelper.GetUnboxMethod, X0, X1, X2
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X31
	034 Move X3, X31
	035 Call AndroidJNISafe.CallCharMethod, X0, X1, X2
	036 NotImplemented "Instruction STRH not yet implemented."
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.Void Unbox(System.IntPtr obj, out System.Boolean value)

Disassembly:
	0x03BE79C8 BL 0x1C16CF4
	0x03BE79CC MOVZ W8, 0x1
	0x03BE79D0 STRB W8, [X21 + 0x321]
	0x03BE79D4 LDR X1, [X22]
	0x03BE79D8 ADD X0, X31, 0x0
	0x03BE79DC BL 0x25FF02C
	0x03BE79E0 ADRP X22, 0x7FC000
	0x03BE79E4 LDR X8, [X22 + 0x328]
	0x03BE79E8 MOV X21, X0
	0x03BE79EC CBNZ X8, 0x3BE7A04
	0x03BE79F0 ADRP X0, 0xFFFFFFFFFCF31000
	0x03BE79F4 ADD X0, X0, 0x1C0
	0x03BE79F8 BL 0x1C16CB8
	0x03BE79FC MOV X8, X0
	0x03BE7A00 STR X0, [X22 + 0x328]
	0x03BE7A04 MOV X0, X20
	0x03BE7A08 MOV X1, X19
	0x03BE7A0C MOV X2, X21
	0x03BE7A10 BLR X8
	0x03BE7A14 LDP X20, X19, [X31 + 0x30]
	0x03BE7A18 LDP X22, X21, [X31 + 0x20]
	0x03BE7A1C LDR X30, [X31 + 0x10]
	0x03BE7A20 ADD X31, X31, 0x40
	0x03BE7A24 RET
	0x03BE7A28 STR X30, [X31 - 0x30]!
	0x03BE7A2C STP X22, X21, [X31 + 0x10]
	0x03BE7A30 STP X20, X19, [X31 + 0x20]
	0x03BE7A34 ADRP X22, 0x7FC000
	0x03BE7A38 LDR X3, [X22 + 0x328]
	0x03BE7A3C MOV X19, X2
	0x03BE7A40 MOV X20, X1
	0x03BE7A44 MOV X21, X0
	0x03BE7A48 CBNZ X3, 0x3BE7A60
	0x03BE7A4C ADRP X0, 0xFFFFFFFFFCF31000
	0x03BE7A50 ADD X0, X0, 0x1C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7FD000
	008 Move X22, 0x578000
	009 Move X23, 0x578000
	010 Move W8, [X21+406]
	011 Move X22, [X22+1088]
	012 Move X23, [X23+1096]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x578000
	020 Move X0, [X0+1096]
	021 Call 0x1C17CF4
	022 Move X0, 0x578000
	023 Move X0, [X0+1088]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+406], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Call AndroidJNIHelper.GetUnboxMethod, X0, X1, X2
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X31
	034 Move X3, X31
	035 Call AndroidJNISafe.CallBooleanMethod, X0, X1, X2
	036 And W8, W0, 1
	037 Move [X19], W8
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Return 

