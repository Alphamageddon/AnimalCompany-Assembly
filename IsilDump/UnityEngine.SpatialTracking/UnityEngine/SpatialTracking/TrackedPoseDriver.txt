Type: UnityEngine.SpatialTracking.TrackedPoseDriver

Method: UnityEngine.SpatialTracking.TrackedPoseDriver/DeviceType get_deviceType()

Disassembly:
	0x03C98E50 CBZ X8, 0x3C98EC4
	0x03C98E54 LDR X9, [X8 + 0x18]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_deviceType(UnityEngine.SpatialTracking.TrackedPoseDriver/DeviceType value)

Disassembly:
	0x03C98E58 LDR X0, [X8 + 0x40]
	0x03C98E5C LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose get_poseSource()

Disassembly:
	0x03C98E60 BLR X9
	0x03C98E64 LDR X0, [X19]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_poseSource(UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose value)

Disassembly:
	0x03C98E68 LDR W8, [X0 + 0xE0]
	0x03C98E6C CBNZ W8, 0x3C98E78

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Boolean SetPoseSource(UnityEngine.SpatialTracking.TrackedPoseDriver/DeviceType deviceType, UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose pose)

Disassembly:
	0x03C98E70 BL 0x1C16DFC
	0x03C98E74 LDR X0, [X19]
	0x03C98E78 LDR X8, [X0 + 0xB8]
	0x03C98E7C LDR X9, [X8 + 0x8]
	0x03C98E80 CBZ X9, 0x3C98EB8
	0x03C98E84 LDR W9, [X0 + 0xE0]
	0x03C98E88 CBNZ W9, 0x3C98E98
	0x03C98E8C BL 0x1C16DFC
	0x03C98E90 LDR X8, [X19]
	0x03C98E94 LDR X8, [X8 + 0xB8]
	0x03C98E98 LDR X8, [X8 + 0x8]
	0x03C98E9C CBZ X8, 0x3C98EC4
	0x03C98EA0 LDR X2, [X8 + 0x18]
	0x03C98EA4 LDR X0, [X8 + 0x40]
	0x03C98EA8 LDR X1, [X8 + 0x28]
	0x03C98EAC LDP X20, X19, [X31 + 0x10]
	0x03C98EB0 LDR X30, [X31], #0x20
	0x03C98EB4 BR X2
	0x03C98EB8 LDP X20, X19, [X31 + 0x10]
	0x03C98EBC LDR X30, [X31], #0x20
	0x03C98EC0 RET
	0x03C98EC4 BL 0x1C16F20
	0x03C98EC8 STP X30, X21, [X31 - 0x20]!
	0x03C98ECC STP X20, X19, [X31 + 0x10]
	0x03C98ED0 ADRP X21, 0x74F000
	0x03C98ED4 LDRB W8, [X21 + 0x144]
	0x03C98ED8 MOV X19, X1
	0x03C98EDC MOV X20, X0
	0x03C98EE0 TBNZ X8, 0x0, 0x3C98F04
	0x03C98EE4 ADRP X0, 0x4C9000
	0x03C98EE8 LDR X0, [X0 + 0x18]
	0x03C98EEC BL 0x1C16CF4
	0x03C98EF0 ADRP X0, 0x483000
	0x03C98EF4 LDR X0, [X0 + 0xC0]
	0x03C98EF8 BL 0x1C16CF4
	0x03C98EFC MOVZ W8, 0x1
	0x03C98F00 STRB W8, [X21 + 0x144]
	0x03C98F04 CBZ X19, 0x3C98FC8
	0x03C98F08 STR X20, [X19 + 0x10]
	0x03C98F0C ADRP X21, 0x74F000
	0x03C98F10 ADRP X20, 0x483000
	0x03C98F14 LDR X8, [X21 + 0x100]
	0x03C98F18 LDR X20, [X20 + 0xC0]
	0x03C98F1C CBNZ X8, 0x3C98F34
	0x03C98F20 ADRP X0, 0xFFFFFFFFFCE8B000
	0x03C98F24 ADD X0, X0, 0x9D1
	0x03C98F28 BL 0x1C16CB8
	0x03C98F2C MOV X8, X0
	0x03C98F30 STR X0, [X21 + 0x100]
	0x03C98F34 MOV X0, X19
	0x03C98F38 MOV X1, X19
	0x03C98F3C BLR X8
	0x03C98F40 LDR X0, [X20]
	0x03C98F44 LDR W8, [X0 + 0xE0]
	0x03C98F48 CBNZ W8, 0x3C98F54
	0x03C98F4C BL 0x1C16DFC
	0x03C98F50 LDR X0, [X20]
	0x03C98F54 LDR X8, [X0 + 0xB8]
	0x03C98F58 LDR X0, [X8 + 0x10]
	0x03C98F5C CBZ X0, 0x3C98FC8
	0x03C98F60 ADRP X9, 0x4C9000
	0x03C98F64 LDR X9, [X9 + 0x18]
	0x03C98F68 LDR W10, [X0 + 0x1C]
	0x03C98F6C LDR X8, [X0 + 0x10]
	0x03C98F70 LDR X9, [X9]
	0x03C98F74 ADD W10, W10, 0x1
	0x03C98F78 STR W10, [X0 + 0x1C]
	0x03C98F7C CBZ X8, 0x3C98FC8
	0x03C98F80 LDRSW X10, [X0 + 0x18]
	0x03C98F84 LDR W11, [X8 + 0x18]
	0x03C98F88 CMP W10, W11
	0x03C98F8C B.CS 0x3C98FAC
	0x03C98F90 ADD W9, W10, 0x1
	0x03C98F94 ADD X8, X8, X10, 0x3, LSL
	0x03C98F98 STR W9, [X0 + 0x18]
	0x03C98F9C STR X19, [X8 + 0x20]
	0x03C98FA0 LDP X20, X19, [X31 + 0x10]
	0x03C98FA4 LDP X30, X21, [X31], #0x20
	0x03C98FA8 RET
	0x03C98FAC LDR X8, [X9 + 0x20]
	0x03C98FB0 MOV X1, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x750000
	009 Move X22, 0x4C9000
	010 Move W8, [X23+238]
	011 Move X22, [X22+3912]
	012 Move W19, W2
	013 Move W21, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x4C9000
	020 Move X0, [X0+4048]
	021 Call 0x1C17CF4
	022 Move X0, 0x4C9000
	023 Move X0, [X0+4056]
	024 Call 0x1C17CF4
	025 Move X0, 0x4C9000
	026 Move X0, [X0+4064]
	027 Call 0x1C17CF4
	028 Move X0, 0x4C9000
	029 Move X0, [X0+4072]
	030 Call 0x1C17CF4
	031 Move X0, 0x4C9000
	032 Move X0, [X0+3912]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+238], W8
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X22]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Compare X8, 0
	045 JumpIfEqual {91}
	046 Move W9, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W9, [X0+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {57}
	051 Call 0x1C17DFC
	052 Move X8, [X22]
	053 Move X8, [X8+184]
	054 Move X8, [X8]
	055 Compare X8, 0
	056 JumpIfEqual {91}
	057 Move X9, 0x4C9000
	058 Move X9, [X9+4064]
	059 Move X0, X8
	060 Move W1, W21
	061 Move X2, [X9]
	062 Call List`1<PoseData>.get_Item, X0, X1
	063 Compare X1, 0
	064 JumpIfEqual {91}
	065 Move W8, [X1+24]
	066 Move X22, X1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X24, 0x4C9000
	069 Move X24, [X24+4072]
	070 Move W23, W31
	071 Move X2, [X24]
	072 Move X0, X22
	073 Move W1, W23
	074 Call List`1<Int32Enum>.get_Item, X0, X1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W8, [X22+24]
	077 Add W23, W23, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W0, W31
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Return X0
	088 Move [X20+32], W21
	089 Move [X20+36], W19
	090 Move W0, 1
	091 Call 0x1C17F20

Method: UnityEngine.Experimental.XR.Interaction.BasePoseProvider get_poseProviderComponent()

Disassembly:
	0x03C98FB4 LDP X20, X19, [X31 + 0x10]
	0x03C98FB8 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_poseProviderComponent(UnityEngine.Experimental.XR.Interaction.BasePoseProvider value)

Disassembly:
	0x03C98FBC LDR X2, [X8 + 0x70]
	0x03C98FC0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: UnityEngine.SpatialTracking.PoseDataFlags GetPoseData(UnityEngine.SpatialTracking.TrackedPoseDriver/DeviceType device, UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose poseSource, out UnityEngine.Pose resultPose)

Disassembly:
	0x03C98FC4 B 0x301BF90
	0x03C98FC8 BL 0x1C16F20
	0x03C98FCC SUB X31, X31, 0x60
	0x03C98FD0 STP X30, X21, [X31 + 0x40]
	0x03C98FD4 STP X20, X19, [X31 + 0x50]
	0x03C98FD8 ADRP X19, 0x74F000
	0x03C98FDC ADRP X21, 0x483000
	0x03C98FE0 LDRB W8, [X19 + 0x145]
	0x03C98FE4 LDR X21, [X21 + 0xC0]
	0x03C98FE8 TBNZ X8, 0x0, 0x3C99054
	0x03C98FEC ADRP X0, 0x4C9000
	0x03C98FF0 LDR X0, [X0 + 0x20]
	0x03C98FF4 BL 0x1C16CF4
	0x03C98FF8 ADRP X0, 0x4C9000
	0x03C98FFC LDR X0, [X0 + 0x28]
	0x03C99000 BL 0x1C16CF4
	0x03C99004 ADRP X0, 0x4C8000
	0x03C99008 LDR X0, [X0 + 0x30]
	0x03C9900C BL 0x1C16CF4
	0x03C99010 ADRP X0, 0x4C8000
	0x03C99014 LDR X0, [X0 + 0x38]
	0x03C99018 BL 0x1C16CF4
	0x03C9901C ADRP X0, 0x4C8000
	0x03C99020 LDR X0, [X0 + 0x40]
	0x03C99024 BL 0x1C16CF4
	0x03C99028 ADRP X0, 0x4C8000
	0x03C9902C LDR X0, [X0 + 0x48]
	0x03C99030 BL 0x1C16CF4
	0x03C99034 ADRP X0, 0x4C8000
	0x03C99038 LDR X0, [X0 + 0x50]
	0x03C9903C BL 0x1C16CF4
	0x03C99040 ADRP X0, 0x482000
	0x03C99044 LDR X0, [X0 + 0xC0]
	0x03C99048 BL 0x1C16CF4
	0x03C9904C MOVZ W8, 0x1
	0x03C99050 STRB W8, [X19 + 0x145]
	0x03C99054 LDR X0, [X21]
	0x03C99058 STP X31, X31, [X31 + 0x20]
	0x03C9905C STR X31, [X31 + 0x30]
	0x03C99060 LDR W8, [X0 + 0xE0]
	0x03C99064 CBNZ W8, 0x3C99070
	0x03C99068 BL 0x1C16DFC
	0x03C9906C LDR X0, [X21]
	0x03C99070 LDR X8, [X0 + 0xB8]
	0x03C99074 LDR X0, [X8 + 0x10]
	0x03C99078 CBZ X0, 0x3C9919C
	0x03C9907C ADRP X8, 0x4C8000
	0x03C99080 LDR X8, [X8 + 0x50]
	0x03C99084 ADRP X20, 0x4C8000
	0x03C99088 ADRP X19, 0x4C8000
	0x03C9908C LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x750000
	008 Move X22, 0x45C000
	009 Move W8, [X23+239]
	010 Move X22, [X22+1432]
	011 Move X19, X3
	012 Move W20, W2
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x45C000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x4C9000
	022 Move X0, [X0+3976]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+239], W8
	026 Move X0, [X22]
	027 Move X22, [X21+40]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X22
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {54}
	040 Move X0, [X21+40]
	041 Compare X0, 0
	042 JumpIfEqual {71}
	043 Move X8, [X0]
	044 Move X1, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X3, [X8+376]
	050 Move X2, [X8+384]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 CallNoReturn X3
	054 Move X8, 0x4C8000
	055 Move X8, [X8+3976]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move W0, W20
	062 Move X1, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Call PoseDataSource.GetDataFromSource, X0, X1
	070 Return X0
	071 Call 0x1C17F20

Method: UnityEngine.SpatialTracking.TrackedPoseDriver/TrackingType get_trackingType()

Disassembly:
	0x03C99090 LDR X20, [X20 + 0x28]
	0x03C99094 LDR X19, [X19 + 0x20]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_trackingType(UnityEngine.SpatialTracking.TrackedPoseDriver/TrackingType value)

Disassembly:
	0x03C99098 ADD X8, X31, 0x8
	0x03C9909C BL 0x301CB58

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: UnityEngine.SpatialTracking.TrackedPoseDriver/UpdateType get_updateType()

Disassembly:
	0x03C990A0 LDUR V0, [X31 + 0x8]
	0x03C990A4 LDR X8, [X31 + 0x18]

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_updateType(UnityEngine.SpatialTracking.TrackedPoseDriver/UpdateType value)

Disassembly:
	0x03C990A8 STR V0, [X31 + 0x2]
	0x03C990AC STR X8, [X31 + 0x30]

ISIL:
	001 Move [X0+52], W1
	002 Return 

Method: System.Boolean get_UseRelativeTransform()

Disassembly:
	0x03C990B0 LDR X1, [X20]
	0x03C990B4 ADD X0, X31, 0x20

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_UseRelativeTransform(System.Boolean value)

Disassembly:
	0x03C990B8 BL 0x2BC4350
	0x03C990BC TBZ X0, 0x0, 0x3C990D0
	0x03C990C0 LDR X8, [X31 + 0x30]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: UnityEngine.Pose get_originPose()

Disassembly:
	0x03C990C4 CBZ X8, 0x3C99198
	0x03C990C8 STR X31, [X8 + 0x10]
	0x03C990CC B 0x3C990B0
	0x03C990D0 LDR X1, [X19]
	0x03C990D4 ADD X0, X31, 0x20

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+12], V0
	004 Move [X8], V1
	005 Return X0

Method: System.Void set_originPose(UnityEngine.Pose value)

Disassembly:
	0x03C990D8 BL 0x2BC434C
	0x03C990DC LDR X0, [X21]
	0x03C990E0 LDR W8, [X0 + 0xE0]
	0x03C990E4 CBNZ W8, 0x3C990F0
	0x03C990E8 BL 0x1C16DFC
	0x03C990EC LDR X0, [X21]
	0x03C990F0 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move W8, [X1+24]
	002 Move X9, [X1+16]
	003 Move V0, [X1]
	004 Move [X0+84], W8
	005 Move [X0+76], X9
	006 Move [X0+60], V0
	007 Return 

Method: System.Void CacheLocalPosition()

Disassembly:
	0x03C990F4 LDR X9, [X8 + 0x10]
	0x03C990F8 CBZ X9, 0x3C9919C
	0x03C990FC LDP W2, W10, [X9 + 0x18]
	0x03C99100 ADD W10, W10, 0x1
	0x03C99104 CMP W2, 0x1
	0x03C99108 STP W31, W10, [X9 + 0x18]
	0x03C9910C B.LT 0x3C99128
	0x03C99110 LDR X0, [X9 + 0x10]
	0x03C99114 MOV W1, W31
	0x03C99118 MOV X3, X31
	0x03C9911C BL 0x339FA34
	0x03C99120 LDR X8, [X21]
	0x03C99124 LDR X8, [X8 + 0xB8]
	0x03C99128 LDR X9, [X8 + 0x18]
	0x03C9912C CBZ X9, 0x3C9919C
	0x03C99130 LDP W2, W10, [X9 + 0x18]
	0x03C99134 ADD W10, W10, 0x1
	0x03C99138 CMP W2, 0x1
	0x03C9913C STP W31, W10, [X9 + 0x18]
	0x03C99140 B.LT 0x3C9915C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Component.get_transform, X0
	006 Compare X0, 0
	007 JumpIfEqual {27}
	008 Move X1, X31
	009 Call Transform.get_localPosition, X0
	010 Move X0, X19
	011 Move X1, X31
	012 Move [X19+60], S0
	013 Move [X19+68], S1
	014 Move [X19+68], S2
	015 Call Component.get_transform, X0
	016 Compare X0, 0
	017 JumpIfEqual {27}
	018 Move X1, X31
	019 Call Transform.get_localRotation, X0
	020 Move [X19+72], S0
	021 Move [X19+80], S1
	022 Move [X19+80], S2
	023 Move [X19+88], S3
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return 
	027 Call 0x1C17F20

Method: System.Void ResetToCachedLocalPosition()

Disassembly:
	0x03C99144 LDR X0, [X9 + 0x10]
	0x03C99148 MOV W1, W31
	0x03C9914C MOV X3, X31
	0x03C99150 BL 0x339FA34
	0x03C99154 LDR X8, [X21]
	0x03C99158 LDR X8, [X8 + 0xB8]
	0x03C9915C LDR X8, [X8 + 0x20]
	0x03C99160 CBZ X8, 0x3C9919C

ISIL:
	001 Move X8, [X0]
	002 Move S0, [X0+60]
	003 Move S1, [X0+64]
	004 Move S2, [X0+68]
	005 Move S3, [X0+72]
	006 Move S4, [X0+76]
	007 Move S5, [X0+80]
	008 Move V6, [X0+84]
	009 Move X3, [X8+488]
	010 Move X2, [X8+496]
	011 Move W1, 3
	012 CallNoReturn X3

Method: System.Void Awake()

Disassembly:
	0x03C99164 LDP W2, W9, [X8 + 0x18]

ISIL:
	001 Call TrackedPoseDriver.CacheLocalPosition, X0
	002 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x03C99168 ADD W9, W9, 0x1

ISIL:
	001 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03C9916C CMP W2, 0x1
	0x03C99170 STP W31, W9, [X8 + 0x18]
	0x03C99174 B.LT 0x3C99188
	0x03C99178 LDR X0, [X8 + 0x10]
	0x03C9917C MOV W1, W31
	0x03C99180 MOV X3, X31
	0x03C99184 BL 0x339FA34
	0x03C99188 LDP X20, X19, [X31 + 0x50]
	0x03C9918C LDP X30, X21, [X31 + 0x40]
	0x03C99190 ADD X31, X31, 0x60
	0x03C99194 RET
	0x03C99198 BL 0x1C16F20
	0x03C9919C BL 0x1C16F20
	0x03C991A0 B 0x3C991A4
	0x03C991A4 MOV X20, X0
	0x03C991A8 CMP W1, 0x1
	0x03C991AC B.NE 0x3C991E0
	0x03C991B0 MOV X0, X20
	0x03C991B4 BL 0x3EB1AD0
	0x03C991B8 LDR X19, [X0]
	0x03C991BC BL 0x3EB1AE0
	0x03C991C0 ADRP X8, 0x4C8000
	0x03C991C4 LDR X8, [X8 + 0x20]
	0x03C991C8 ADD X0, X31, 0x20
	0x03C991CC LDR X1, [X8]
	0x03C991D0 BL 0x2BC434C
	0x03C991D4 CBZ X19, 0x3C990DC
	0x03C991D8 MOV X0, X19
	0x03C991DC BL 0x1C16F18
	0x03C991E0 MOV X19, X31
	0x03C991E4 B 0x3C991EC
	0x03C991E8 MOV X20, X0
	0x03C991EC ADRP X8, 0x4C8000
	0x03C991F0 LDR X8, [X8 + 0x20]
	0x03C991F4 LDR X1, [X8]
	0x03C991F8 ADD X0, X31, 0x20
	0x03C991FC BL 0x2BC434C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x74F000
	006 Move X21, 0x482000
	007 Move W8, [X20+240]
	008 Move X21, [X21+3632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x45B000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0x482000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+240], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Compare X19, 0
	025 JumpIfEqual {47}
	026 Move X8, [X19]
	027 Move X21, 0x45B000
	028 Move X1, X19
	029 Move X3, X31
	030 Move X2, [X8+480]
	031 Move X21, [X21+2416]
	032 Move X20, X0
	033 Call UnityAction..ctor, X0, X1, X2
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call Application.add_onBeforeRender, X0
	046 Return 
	047 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03C99200 CBNZ X19, 0x3C9920C
	0x03C99204 MOV X0, X20
	0x03C99208 BL 0x1D2C690
	0x03C9920C MOV X0, X19
	0x03C99210 BL 0x1C16F18
	0x03C99214 BL 0x1990590
	0x03C99218 STP X30, X19, [X31 - 0x10]!
	0x03C9921C ADRP X19, 0x74E000
	0x03C99220 LDR X0, [X19 + 0x148]
	0x03C99224 CBNZ X0, 0x3C99238
	0x03C99228 ADRP X0, 0xFFFFFFFFFCE5A000
	0x03C9922C ADD X0, X0, 0xB61
	0x03C99230 BL 0x1C16CB8
	0x03C99234 STR X0, [X19 + 0x148]
	0x03C99238 LDP X30, X19, [X31], #0x10
	0x03C9923C BR X0
	0x03C99240 STR X30, [X31 - 0x50]!
	0x03C99244 STP X26, X25, [X31 + 0x10]
	0x03C99248 STP X24, X23, [X31 + 0x20]
	0x03C9924C STP X22, X21, [X31 + 0x30]
	0x03C99250 STP X20, X19, [X31 + 0x40]
	0x03C99254 ADRP X25, 0x74E000
	0x03C99258 ADRP X26, 0x4C8000
	0x03C9925C ADRP X19, 0x4C8000
	0x03C99260 ADRP X20, 0x482000
	0x03C99264 ADRP X24, 0x4C8000
	0x03C99268 ADRP X23, 0x4C8000
	0x03C9926C ADRP X22, 0x4C8000
	0x03C99270 ADRP X21, 0x4C8000
	0x03C99274 LDR X26, [X26 + 0x58]
	0x03C99278 LDR X19, [X19 + 0x60]
	0x03C9927C LDRB W8, [X25 + 0x150]
	0x03C99280 LDR X20, [X20 + 0xC0]
	0x03C99284 LDR X24, [X24 + 0x68]
	0x03C99288 LDR X23, [X23 + 0x70]
	0x03C9928C LDR X22, [X22 + 0x78]
	0x03C99290 LDR X21, [X21 + 0x80]
	0x03C99294 TBNZ X8, 0x0, 0x3C992F4
	0x03C99298 ADRP X0, 0x4C8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74F000
	006 Move X20, 0x482000
	007 Move W8, [X21+241]
	008 Move X20, [X20+3632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x45B000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0x482000
	018 Move X0, [X0+3632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+241], W8
	022 Move X0, X19
	023 Call TrackedPoseDriver.ResetToCachedLocalPosition, X0
	024 Move X0, [X20]
	025 Call 0x1C17F10
	026 Compare X19, 0
	027 JumpIfEqual {49}
	028 Move X8, [X19]
	029 Move X21, 0x45B000
	030 Move X1, X19
	031 Move X3, X31
	032 Move X2, [X8+480]
	033 Move X21, [X21+2416]
	034 Move X20, X0
	035 Call UnityAction..ctor, X0, X1, X2
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call Application.remove_onBeforeRender, X0
	048 Return 
	049 Call 0x1C17F20

Method: System.Void FixedUpdate()

Disassembly:
	0x03C9929C LDR X0, [X0 + 0x60]
	0x03C992A0 BL 0x1C16CF4
	0x03C992A4 ADRP X0, 0x4C8000
	0x03C992A8 LDR X0, [X0 + 0x70]
	0x03C992AC BL 0x1C16CF4
	0x03C992B0 ADRP X0, 0x4C8000
	0x03C992B4 LDR X0, [X0 + 0x80]

ISIL:
	001 Move W8, [X0+52]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, [X0]
	004 Move X2, [X8+504]
	005 Move X1, [X8+512]
	006 CallNoReturn X2
	007 Return 

Method: System.Void Update()

Disassembly:
	0x03C992B8 BL 0x1C16CF4
	0x03C992BC ADRP X0, 0x4C8000
	0x03C992C0 LDR X0, [X0 + 0x58]
	0x03C992C4 BL 0x1C16CF4
	0x03C992C8 ADRP X0, 0x4C8000
	0x03C992CC LDR X0, [X0 + 0x78]
	0x03C992D0 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0+52]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, [X0]
	004 Move X2, [X8+504]
	005 Move X1, [X8+512]
	006 CallNoReturn X2
	007 Return 

Method: System.Void OnBeforeRender()

Disassembly:
	0x03C992D4 ADRP X0, 0x4C8000
	0x03C992D8 LDR X0, [X0 + 0x68]
	0x03C992DC BL 0x1C16CF4
	0x03C992E0 ADRP X0, 0x482000
	0x03C992E4 LDR X0, [X0 + 0xC0]
	0x03C992E8 BL 0x1C16CF4
	0x03C992EC MOVZ W8, 0x1
	0x03C992F0 STRB W8, [X25 + 0x150]

ISIL:
	001 Move W8, [X0+52]
	002 Or W8, W8, 2
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0]
	005 Move X2, [X8+504]
	006 Move X1, [X8+512]
	007 CallNoReturn X2
	008 Return 

Method: System.Void SetLocalTransform(UnityEngine.Vector3 newPosition, UnityEngine.Quaternion newRotation, UnityEngine.SpatialTracking.PoseDataFlags poseFlags)

Disassembly:
	0x03C992F4 LDR X0, [X26]
	0x03C992F8 BL 0x1C16F10
	0x03C992FC LDR X1, [X19]
	0x03C99300 MOV X19, X0
	0x03C99304 BL 0x301B7C4
	0x03C99308 LDR X8, [X20]
	0x03C9930C LDR X8, [X8 + 0xB8]
	0x03C99310 STR X19, [X8 + 0x10]
	0x03C99314 LDR X0, [X24]
	0x03C99318 BL 0x1C16F10
	0x03C9931C LDR X1, [X23]
	0x03C99320 MOV X19, X0
	0x03C99324 BL 0x301B7C4
	0x03C99328 LDR X8, [X20]
	0x03C9932C LDR X8, [X8 + 0xB8]
	0x03C99330 STR X19, [X8 + 0x18]
	0x03C99334 LDR X0, [X22]
	0x03C99338 BL 0x1C16F10
	0x03C9933C LDR X1, [X21]
	0x03C99340 MOV X19, X0
	0x03C99344 BL 0x301B7C4
	0x03C99348 LDR X8, [X20]
	0x03C9934C LDR X8, [X8 + 0xB8]
	0x03C99350 STR X19, [X8 + 0x20]
	0x03C99354 ADRP X19, 0x74E000
	0x03C99358 LDR X0, [X19 + 0x148]
	0x03C9935C CBNZ X0, 0x3C99370
	0x03C99360 ADRP X0, 0xFFFFFFFFFCE5A000
	0x03C99364 ADD X0, X0, 0xB61
	0x03C99368 BL 0x1C16CB8
	0x03C9936C STR X0, [X19 + 0x148]
	0x03C99370 LDP X20, X19, [X31 + 0x40]
	0x03C99374 LDP X22, X21, [X31 + 0x30]
	0x03C99378 LDP X24, X23, [X31 + 0x20]
	0x03C9937C LDP X26, X25, [X31 + 0x10]
	0x03C99380 LDR X30, [X31], #0x50
	0x03C99384 BR X0
	0x03C99388 SUB X31, X31, 0x50
	0x03C9938C STR X30, [X31 + 0x20]
	0x03C99390 STP X22, X21, [X31 + 0x30]
	0x03C99394 STP X20, X19, [X31 + 0x40]
	0x03C99398 ADRP X21, 0x74E000
	0x03C9939C ADRP X20, 0x482000
	0x03C993A0 LDRB W8, [X21 + 0x151]
	0x03C993A4 LDR X20, [X20 + 0xC0]
	0x03C993A8 MOV X19, X0
	0x03C993AC TBNZ X8, 0x0, 0x3C993F4
	0x03C993B0 ADRP X0, 0x4C8000
	0x03C993B4 LDR X0, [X0 + 0x20]
	0x03C993B8 BL 0x1C16CF4
	0x03C993BC ADRP X0, 0x4C8000
	0x03C993C0 LDR X0, [X0 + 0x28]
	0x03C993C4 BL 0x1C16CF4
	0x03C993C8 ADRP X0, 0x4C8000
	0x03C993CC LDR X0, [X0 + 0x30]
	0x03C993D0 BL 0x1C16CF4
	0x03C993D4 ADRP X0, 0x4C8000

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move W8, [X0+48]
	012 Move W19, W1
	013 Move V8, V2
	014 Move V9, V1
	015 Move X20, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move V10, V0
	018 Move TEMP, X19
	019 And TEMP, TEMP, 2
	020 Compare TEMP, 2
	021 JumpIfNotEqual {38}
	022 Move X0, X20
	023 Move X1, X31
	024 Move V11, V6
	025 Move V12, V5
	026 Move V13, V4
	027 Move V14, V3
	028 Call Component.get_transform, X0
	029 Compare X0, 0
	030 JumpIfEqual {77}
	031 Move V0, V14
	032 Move V1, V13
	033 Move V2, V12
	034 Move V3, V11
	035 Move X1, X31
	036 Call Transform.set_localRotation, X0, X1
	037 Move W8, [X20+48]
	038 Compare W8, 0
	039 JumpIfEqual {41}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move TEMP, X19
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {56}
	045 Move X20, [X31+64]
	046 Move X19, [X31+72]
	047 Move X30, [X31+56]
	048 Move D9, [X31+40]
	049 Move D8, [X31+48]
	050 Move D11, [X31+24]
	051 Move D10, [X31+32]
	052 Move D13, [X31+8]
	053 Move D12, [X31+16]
	054 Move V14, [X31+80]
	055 Return 
	056 Move X0, X20
	057 Move X1, X31
	058 Call Component.get_transform, X0
	059 Compare X0, 0
	060 JumpIfEqual {77}
	061 Move V0, V10
	062 Move V1, V9
	063 Move V2, V8
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X30, [X31+56]
	067 Move D9, [X31+40]
	068 Move D8, [X31+48]
	069 Move D11, [X31+24]
	070 Move D10, [X31+32]
	071 Move D13, [X31+8]
	072 Move D12, [X31+16]
	073 Move X1, X31
	074 Move V14, [X31+80]
	075 Call Transform.set_localPosition, X0, X1
	076 Return 
	077 Call 0x1C17F20

Method: UnityEngine.Pose TransformPoseByOriginIfNeeded(UnityEngine.Pose pose)

Disassembly:
	0x03C993D8 LDR X0, [X0 + 0x50]
	0x03C993DC BL 0x1C16CF4
	0x03C993E0 ADRP X0, 0x482000
	0x03C993E4 LDR X0, [X0 + 0xC0]
	0x03C993E8 BL 0x1C16CF4
	0x03C993EC MOVZ W8, 0x1
	0x03C993F0 STRB W8, [X21 + 0x151]
	0x03C993F4 LDR X0, [X20]
	0x03C993F8 STP X31, X31, [X31 + 0x8]
	0x03C993FC STR X31, [X31 + 0x18]
	0x03C99400 LDR W8, [X0 + 0xE0]
	0x03C99404 CBNZ W8, 0x3C99410
	0x03C99408 BL 0x1C16DFC
	0x03C9940C LDR X0, [X20]
	0x03C99410 LDR X8, [X0 + 0xB8]
	0x03C99414 LDR X0, [X8 + 0x10]
	0x03C99418 CBZ X0, 0x3C9949C
	0x03C9941C ADRP X8, 0x4C8000
	0x03C99420 LDR X8, [X8 + 0x50]
	0x03C99424 ADRP X22, 0x4C8000
	0x03C99428 ADRP X21, 0x4C8000
	0x03C9942C LDR X1, [X8]
	0x03C99430 LDR X22, [X22 + 0x28]
	0x03C99434 LDR X21, [X21 + 0x20]
	0x03C99438 ADD X8, X31, 0x8
	0x03C9943C BL 0x301CB58
	0x03C99440 LDR X1, [X22]
	0x03C99444 ADD X0, X31, 0x8
	0x03C99448 BL 0x2BC4350
	0x03C9944C TBZ X0, 0x0, 0x3C99470
	0x03C99450 LDR X20, [X31 + 0x18]
	0x03C99454 CBZ X20, 0x3C99498
	0x03C99458 LDR X0, [X20 + 0x10]
	0x03C9945C MOV X1, X19
	0x03C99460 MOV X2, X31
	0x03C99464 BL 0x33BE5B0
	0x03C99468 TBZ X0, 0x0, 0x3C99440
	0x03C9946C B 0x3C99474
	0x03C99470 MOV X20, X31
	0x03C99474 LDR X1, [X21]
	0x03C99478 ADD X0, X31, 0x8
	0x03C9947C BL 0x2BC434C
	0x03C99480 MOV X0, X20
	0x03C99484 LDP X20, X19, [X31 + 0x40]
	0x03C99488 LDP X22, X21, [X31 + 0x30]
	0x03C9948C LDR X30, [X31 + 0x20]
	0x03C99490 ADD X31, X31, 0x50
	0x03C99494 RET

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x74F000
	008 Move W9, [X22+242]
	009 Move X20, X1
	010 Move X21, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x483000
	017 Move X0, [X0+1552]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+242], W8
	021 Move W8, [X21+56]
	022 Compare W8, 0
	023 JumpIfEqual {46}
	024 Move X8, 0x483000
	025 Move X8, [X8+1552]
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move X0, [X8]
	029 Move [X31+76], V0
	030 Move [X31+4], V1
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move V0, [X31+4]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Add X8, X31, 32
	038 Add X1, X31, 0
	039 Move X0, X20
	040 Move X2, X31
	041 Move [X31], V0
	042 Move [X31+12], V1
	043 Call Pose.GetTransformedBy, X0, X1
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move V1, [X31+2]
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move V1, [X20]
	048 Move [X19+12], V0
	049 Move [X19], V1
	050 Move X20, [X31+128]
	051 Move X19, [X31+136]
	052 Move X22, [X31+112]
	053 Move X21, [X31+120]
	054 Move X30, [X31+96]
	055 Add X31, X31, 144
	056 Return X0

Method: System.Boolean HasStereoCamera()

Disassembly:
	0x03C99498 BL 0x1C16F20
	0x03C9949C BL 0x1C16F20
	0x03C994A0 B 0x3C994A8
	0x03C994A4 B 0x3C994A8
	0x03C994A8 MOV X19, X0
	0x03C994AC CMP W1, 0x1
	0x03C994B0 B.NE 0x3C994DC
	0x03C994B4 MOV X0, X19
	0x03C994B8 BL 0x3EB1AD0
	0x03C994BC LDR X20, [X0]
	0x03C994C0 BL 0x3EB1AE0
	0x03C994C4 LDR X1, [X21]
	0x03C994C8 ADD X0, X31, 0x8
	0x03C994CC BL 0x2BC434C
	0x03C994D0 CBZ X20, 0x3C99480
	0x03C994D4 MOV X0, X20
	0x03C994D8 BL 0x1C16F18
	0x03C994DC MOV X20, X31
	0x03C994E0 B 0x3C994E8
	0x03C994E4 MOV X19, X0
	0x03C994E8 LDR X1, [X21]
	0x03C994EC ADD X0, X31, 0x8
	0x03C994F0 BL 0x2BC434C
	0x03C994F4 CBNZ X20, 0x3C99500
	0x03C994F8 MOV X0, X19
	0x03C994FC BL 0x1D2C690
	0x03C99500 MOV X0, X20
	0x03C99504 BL 0x1C16F18
	0x03C99508 BL 0x1990590
	0x03C9950C STP X30, X21, [X31 - 0x20]!
	0x03C99510 STP X20, X19, [X31 + 0x10]
	0x03C99514 ADRP X21, 0x74E000
	0x03C99518 ADRP X20, 0x482000
	0x03C9951C LDRB W8, [X21 + 0x153]
	0x03C99520 LDR X20, [X20 + 0xC0]
	0x03C99524 MOV X19, X0
	0x03C99528 TBNZ X8, 0x0, 0x3C9954C
	0x03C9952C ADRP X0, 0x4C8000
	0x03C99530 LDR X0, [X0 + 0x88]
	0x03C99534 BL 0x1C16CF4
	0x03C99538 ADRP X0, 0x482000
	0x03C9953C LDR X0, [X0 + 0xC0]
	0x03C99540 BL 0x1C16CF4
	0x03C99544 MOVZ W8, 0x1
	0x03C99548 STRB W8, [X21 + 0x153]
	0x03C9954C LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x74F000
	007 Move X22, 0x483000
	008 Move X20, 0x45B000
	009 Move W8, [X21+243]
	010 Move X22, [X22+712]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x483000
	018 Move X0, [X0+712]
	019 Call 0x1C17CF4
	020 Move X0, 0x45B000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+243], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4894, X0
	028 Move X8, [X20]
	029 Move X19, X0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {54}
	043 Compare X19, 0
	044 JumpIfEqual {61}
	045 Move X0, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X1, X31
	051 Move X30, [X31+48]
	052 Call Camera.get_stereoEnabled, X0
	053 Return X0
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move W0, W31
	059 Move X30, [X31+48]
	060 Return X0
	061 Call 0x1C17F20

Method: System.Void PerformUpdate()

Disassembly:
	0x03C99550 LDR W8, [X0 + 0xE0]
	0x03C99554 CBNZ W8, 0x3C99560
	0x03C99558 BL 0x1C16DFC
	0x03C9955C LDR X0, [X20]
	0x03C99560 LDR X8, [X0 + 0xB8]
	0x03C99564 LDR X0, [X8 + 0x18]
	0x03C99568 CBZ X0, 0x3C99588
	0x03C9956C ADRP X8, 0x4C8000
	0x03C99570 LDR X8, [X8 + 0x88]
	0x03C99574 MOV X1, X19
	0x03C99578 LDP X20, X19, [X31 + 0x10]
	0x03C9957C LDR X2, [X8]
	0x03C99580 LDP X30, X21, [X31], #0x20
	0x03C99584 B 0x301D7A8
	0x03C99588 BL 0x1C16F20
	0x03C9958C STP X30, X21, [X31 - 0x20]!
	0x03C99590 STP X20, X19, [X31 + 0x10]
	0x03C99594 ADRP X21, 0x74E000
	0x03C99598 LDRB W8, [X21 + 0x155]
	0x03C9959C MOV X19, X1
	0x03C995A0 MOV X20, X0
	0x03C995A4 TBNZ X8, 0x0, 0x3C995C8
	0x03C995A8 ADRP X0, 0x4C8000
	0x03C995AC LDR X0, [X0 + 0x90]
	0x03C995B0 BL 0x1C16CF4
	0x03C995B4 ADRP X0, 0x483000
	0x03C995B8 LDR X0, [X0 + 0x740]
	0x03C995BC BL 0x1C16CF4
	0x03C995C0 MOVZ W8, 0x1
	0x03C995C4 STRB W8, [X21 + 0x155]
	0x03C995C8 CBZ X19, 0x3C99660
	0x03C995CC ADRP X21, 0x483000
	0x03C995D0 LDR X21, [X21 + 0x740]
	0x03C995D4 STR X20, [X19 + 0x10]
	0x03C995D8 LDR X0, [X21]
	0x03C995DC LDR W8, [X0 + 0xE0]
	0x03C995E0 CBNZ W8, 0x3C995EC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X1, X31
	006 Move X19, X0
	007 Move [X31+64], X31
	008 Move [X31+72], X31
	009 Move [X31+88], W31
	010 Move [X31+80], X31
	011 Call Behaviour.get_enabled, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {44}
	016 Move W2, [X19+36]
	017 Add X3, X31, 64
	018 Move X0, X19
	019 Call TrackedPoseDriver.GetPoseData, X0, X1, X2, X3
	020 Compare W0, 0
	021 JumpIfEqual {44}
	022 Move V0, [X31+4]
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Move W20, W0
	025 Add X8, X31, 32
	026 Add X1, X31, 0
	027 Move X0, X19
	028 Move [X31], V0
	029 Move [X31+12], V1
	030 Call TrackedPoseDriver.TransformPoseByOriginIfNeeded, X0, X1
	031 Move X8, [X19]
	032 Move S0, [X31+32]
	033 Move S1, [X31+36]
	034 Move S2, [X31+40]
	035 Move S3, [X31+44]
	036 Move S4, [X31+48]
	037 Move S5, [X31+52]
	038 Move V6, [X31+56]
	039 Move X9, [X8+488]
	040 Move X2, [X8+496]
	041 Move X0, X19
	042 Move W1, W20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X20, [X31+112]
	045 Move X19, [X31+120]
	046 Move X30, [X31+96]
	047 Add X31, X31, 128
	048 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C995E4 BL 0x1C16DFC
	0x03C995E8 LDR X0, [X21]
	0x03C995EC LDR X8, [X0 + 0xB8]
	0x03C995F0 LDR X0, [X8]

ISIL:
	001 Move W8, 2
	002 Move X1, X31
	003 Move [X0+36], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

