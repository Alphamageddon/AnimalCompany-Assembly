Type: UnityEngine.SpatialTracking.PoseDataSource

Method: UnityEngine.SpatialTracking.PoseDataFlags GetNodePoseData(UnityEngine.XR.XRNode node, out UnityEngine.Pose resultPose)

Disassembly:
	0x03C98838 BL 0x1C16CF4
	0x03C9883C ADRP X0, 0x4C8000
	0x03C98840 LDR X0, [X0 + 0xFF8]
	0x03C98844 BL 0x1C16CF4
	0x03C98848 ADRP X0, 0x4C9000
	0x03C9884C LDR X0, [X0]
	0x03C98850 BL 0x1C16CF4
	0x03C98854 ADRP X0, 0x483000
	0x03C98858 LDR X0, [X0 + 0xC0]
	0x03C9885C BL 0x1C16CF4
	0x03C98860 MOVZ W8, 0x1
	0x03C98864 STRB W8, [X19 + 0x152]
	0x03C98868 ADRP X21, 0x483000
	0x03C9886C ADRP X22, 0x4C9000
	0x03C98870 LDR X21, [X21 + 0xC0]
	0x03C98874 LDR X22, [X22]
	0x03C98878 MOV W19, W31
	0x03C9887C LDR X0, [X21]
	0x03C98880 LDR W8, [X0 + 0xE0]
	0x03C98884 CBNZ W8, 0x3C98890
	0x03C98888 BL 0x1C16DFC
	0x03C9888C LDR X0, [X21]
	0x03C98890 LDR X8, [X0 + 0xB8]
	0x03C98894 LDR X8, [X8 + 0x10]
	0x03C98898 CBZ X8, 0x3C98968
	0x03C9889C LDR W9, [X8 + 0x18]
	0x03C988A0 CMP W19, W9
	0x03C988A4 B.GE 0x3C988F4
	0x03C988A8 LDR W9, [X0 + 0xE0]
	0x03C988AC CBNZ W9, 0x3C988C4
	0x03C988B0 BL 0x1C16DFC
	0x03C988B4 LDR X8, [X21]
	0x03C988B8 LDR X8, [X8 + 0xB8]
	0x03C988BC LDR X8, [X8 + 0x10]
	0x03C988C0 CBZ X8, 0x3C98968
	0x03C988C4 LDR X2, [X22]
	0x03C988C8 MOV X0, X8
	0x03C988CC MOV W1, W19
	0x03C988D0 BL 0x301BCCC
	0x03C988D4 CBZ X0, 0x3C98968
	0x03C988D8 LDR X0, [X0 + 0x10]
	0x03C988DC MOV X1, X20
	0x03C988E0 MOV X2, X31
	0x03C988E4 BL 0x33C5D2C
	0x03C988E8 TBZ X0, 0x0, 0x3C98904
	0x03C988EC ADD W19, W19, 0x1
	0x03C988F0 B 0x3C9887C
	0x03C988F4 LDP X20, X19, [X31 + 0x20]
	0x03C988F8 LDP X22, X21, [X31 + 0x10]
	0x03C988FC LDR X30, [X31], #0x30
	0x03C98900 RET
	0x03C98904 LDR X0, [X21]
	0x03C98908 LDR W8, [X0 + 0xE0]
	0x03C9890C CBNZ W8, 0x3C98918
	0x03C98910 BL 0x1C16DFC
	0x03C98914 LDR X0, [X21]
	0x03C98918 LDR X8, [X0 + 0xB8]
	0x03C9891C LDR X0, [X8 + 0x10]
	0x03C98920 CBZ X0, 0x3C98968
	0x03C98924 LDR X2, [X22]
	0x03C98928 MOV W1, W19
	0x03C9892C BL 0x301BCCC
	0x03C98930 CBZ X0, 0x3C98968
	0x03C98934 STR X31, [X0 + 0x10]
	0x03C98938 LDR X8, [X21]
	0x03C9893C LDR X8, [X8 + 0xB8]
	0x03C98940 LDR X0, [X8 + 0x10]
	0x03C98944 CBZ X0, 0x3C98968
	0x03C98948 ADRP X8, 0x4C8000
	0x03C9894C LDR X8, [X8 + 0xFF0]
	0x03C98950 MOV W1, W19
	0x03C98954 LDP X20, X19, [X31 + 0x20]
	0x03C98958 LDP X22, X21, [X31 + 0x10]
	0x03C9895C LDR X2, [X8]
	0x03C98960 LDR X30, [X31], #0x30
	0x03C98964 B 0x301DA48
	0x03C98968 BL 0x1C16F20
	0x03C9896C STR X30, [X31 - 0x20]!
	0x03C98970 STP X20, X19, [X31 + 0x10]
	0x03C98974 ADRP X20, 0x74F000
	0x03C98978 LDR X1, [X20 + 0x128]
	0x03C9897C MOV X19, X0
	0x03C98980 CBNZ X1, 0x3C98998
	0x03C98984 ADRP X0, 0xFFFFFFFFFCE77000
	0x03C98988 ADD X0, X0, 0xC1A
	0x03C9898C BL 0x1C16CB8
	0x03C98990 MOV X1, X0
	0x03C98994 STR X0, [X20 + 0x128]
	0x03C98998 MOV X0, X19
	0x03C9899C LDP X20, X19, [X31 + 0x10]
	0x03C989A0 LDR X30, [X31], #0x20
	0x03C989A4 BR X1
	0x03C989A8 STR X30, [X31 - 0x20]!
	0x03C989AC STP X20, X19, [X31 + 0x10]
	0x03C989B0 MOV X19, X0
	0x03C989B4 LDR X0, [X0 + 0x10]
	0x03C989B8 MOV X1, X31
	0x03C989BC MOV X2, X31
	0x03C989C0 BL 0x33C5D2C
	0x03C989C4 TBZ X0, 0x0, 0x3C989F8
	0x03C989C8 ADRP X20, 0x74F000
	0x03C989CC LDR X1, [X20 + 0x120]
	0x03C989D0 CBNZ X1, 0x3C989E8
	0x03C989D4 ADRP X0, 0xFFFFFFFFFCE91000
	0x03C989D8 ADD X0, X0, 0x20B
	0x03C989DC BL 0x1C16CB8
	0x03C989E0 MOV X1, X0
	0x03C989E4 STR X0, [X20 + 0x120]
	0x03C989E8 MOV X0, X19
	0x03C989EC LDP X20, X19, [X31 + 0x10]
	0x03C989F0 LDR X30, [X31], #0x20
	0x03C989F4 BR X1
	0x03C989F8 LDP X20, X19, [X31 + 0x10]
	0x03C989FC MOV W0, W31
	0x03C98A00 LDR X30, [X31], #0x20
	0x03C98A04 RET
	0x03C98A08 LDR X0, [X0 + 0x10]
	0x03C98A0C MOV X1, X31
	0x03C98A10 MOV X2, X31
	0x03C98A14 B 0x33C5D2C
	0x03C98A18 STR X30, [X31 - 0x20]!
	0x03C98A1C STP X20, X19, [X31 + 0x10]
	0x03C98A20 ADRP X20, 0x74F000
	0x03C98A24 LDR X1, [X20 + 0x120]
	0x03C98A28 MOV X19, X0
	0x03C98A2C CBNZ X1, 0x3C98A44
	0x03C98A30 ADRP X0, 0xFFFFFFFFFCE91000
	0x03C98A34 ADD X0, X0, 0x20B
	0x03C98A38 BL 0x1C16CB8
	0x03C98A3C MOV X1, X0
	0x03C98A40 STR X0, [X20 + 0x120]
	0x03C98A44 MOV X0, X19
	0x03C98A48 LDP X20, X19, [X31 + 0x10]
	0x03C98A4C LDR X30, [X31], #0x20
	0x03C98A50 BR X1
	0x03C98A54 MOV X1, X31
	0x03C98A58 B 0x33BDD8C
	0x03C98A5C STR X30, [X31 - 0x20]!
	0x03C98A60 STP X20, X19, [X31 + 0x10]
	0x03C98A64 ADRP X20, 0x74F000
	0x03C98A68 LDR X1, [X20 + 0x138]
	0x03C98A6C LDR X19, [X0 + 0x10]
	0x03C98A70 CBNZ X1, 0x3C98A88
	0x03C98A74 ADRP X0, 0xFFFFFFFFFCE7D000
	0x03C98A78 ADD X0, X0, 0x205
	0x03C98A7C BL 0x1C16CB8
	0x03C98A80 MOV X1, X0
	0x03C98A84 STR X0, [X20 + 0x138]
	0x03C98A88 MOV X0, X19
	0x03C98A8C LDP X20, X19, [X31 + 0x10]
	0x03C98A90 LDR X30, [X31], #0x20
	0x03C98A94 BR X1
	0x03C98A98 STR X30, [X31 - 0x20]!
	0x03C98A9C STP X20, X19, [X31 + 0x10]
	0x03C98AA0 ADRP X20, 0x74F000
	0x03C98AA4 LDR X1, [X20 + 0x138]
	0x03C98AA8 MOV X19, X0
	0x03C98AAC CBNZ X1, 0x3C98AC4
	0x03C98AB0 ADRP X0, 0xFFFFFFFFFCE7D000
	0x03C98AB4 ADD X0, X0, 0x205

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+352], X29
	003 Move [X31+360], X30
	004 Move [X31+368], X24
	005 Move [X31+376], X23
	006 Move [X31+384], X22
	007 Move [X31+392], X21
	008 Move [X31+400], X20
	009 Move [X31+408], X19
	010 Move X22, 0x750000
	011 Move X21, 0x4C9000
	012 Move W8, [X22+234]
	013 Move X21, [X21+3976]
	014 Move X19, X1
	015 Move W20, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x4C9000
	021 Move X0, [X0+3984]
	022 Call 0x1C17CF4
	023 Move X0, 0x4C9000
	024 Move X0, [X0+3992]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C9000
	027 Move X0, [X0+4000]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C9000
	030 Move X0, [X0+4008]
	031 Call 0x1C17CF4
	032 Move X0, 0x4C9000
	033 Move X0, [X0+3976]
	034 Call 0x1C17CF4
	035 Move X0, 0x484000
	036 Move X0, [X0+1552]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+234], W8
	040 Move X0, [X21]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+320], V0
	043 Move [X31+328], V0
	044 Move [X31+288], V0
	045 Move [X31+296], V0
	046 Move [X31+256], V0
	047 Move [X31+264], V0
	048 Move [X31+224], V0
	049 Move [X31+232], V0
	050 Move [X31+192], V0
	051 Move [X31+200], V0
	052 Move [X31+160], V0
	053 Move [X31+168], V0
	054 Move [X31+9], V0
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X1, X31
	062 Move X0, [X8]
	063 Call InputTracking.GetNodeStates, X0
	064 Move X8, [X21]
	065 Move X8, [X8+184]
	066 Move X0, [X8]
	067 Compare X0, 0
	068 JumpIfEqual {147}
	069 Move X8, 0x4C9000
	070 Move X8, [X8+4008]
	071 Move X24, 0x4C9000
	072 Move X23, 0x484000
	073 Move X22, 0x4C9000
	074 Move X1, [X8]
	075 Move X24, [X24+3992]
	076 Move X23, [X23+1552]
	077 Move X22, [X22+3984]
	078 Add X8, X31, 32
	079 Call List`1<XRNodeState>.GetEnumerator, X0
	080 Add X0, X31, 240
	081 Add X1, X31, 32
	082 Move W2, 112
	083 Add X21, X31, 240
	084 Call 0x3EB2AC0
	085 Add X21, X21, 16
	086 Move X1, [X24]
	087 Add X0, X31, 240
	088 Call Enumerator<XRNodeState>.MoveNext, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {116}
	093 Add X0, X31, 144
	094 Move W2, 96
	095 Move X1, X21
	096 Call 0x3EB2AC0
	097 Add X0, X31, 144
	098 Move X1, X31
	099 Call XRNodeState.get_nodeType, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X0, X31, 144
	102 Move X1, X19
	103 Move X2, X31
	104 Call XRNodeState.TryGetPosition, X0, X1
	105 And W20, W0, 1
	106 Add X1, X19, 12
	107 Add X0, X31, 144
	108 Move X2, X31
	109 Call XRNodeState.TryGetRotation, X0, X1
	110 Move X1, [X22]
	111 Or W8, W20, 2
	112 And W31, W0, 1
	113 Add X0, X31, 240
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Call Enumerator<XRNodeState>.Dispose, X0
	116 Move X1, [X22]
	117 Add X0, X31, 240
	118 Call Enumerator<XRNodeState>.Dispose, X0
	119 Move W20, W31
	120 Move X0, [X23]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Add X8, X31, 0
	126 Move X0, X31
	127 Call Pose.get_identity
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move V1, [X31]
	130 Move [X31+44], V0
	131 Move [X31+2], V1
	132 Move V0, [X31+2]
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 Move [X19], V0
	135 Move [X19+12], V1
	136 Move W0, W20
	137 Move X20, [X31+400]
	138 Move X19, [X31+408]
	139 Move X22, [X31+384]
	140 Move X21, [X31+392]
	141 Move X24, [X31+368]
	142 Move X23, [X31+376]
	143 Move X29, [X31+352]
	144 Move X30, [X31+360]
	145 Add X31, X31, 416
	146 Return X0
	147 Call 0x1C17F20
	148 Move X21, X0
	149 Move X21, X0
	150 Move W20, W31
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X21
	153 Call 0x3EB2AD0
	154 Move X22, [X0]
	155 Call 0x3EB2AE0
	156 Move X8, 0x4C9000
	157 Move X8, [X8+3984]
	158 Add X0, X31, 240
	159 Move X1, [X8]
	160 Call Enumerator<XRNodeState>.Dispose, X0
	161 Compare X22, 0
	162 JumpIfEqual {120}
	163 Move X0, X22
	164 Call 0x1C17F18
	165 Move X22, X31
	166 Move X21, X0
	167 Move X8, 0x4C9000
	168 Move X8, [X8+3984]
	169 Move X1, [X8]
	170 Add X0, X31, 240
	171 Call Enumerator<XRNodeState>.Dispose, X0
	172 Compare X22, 0
	173 JumpIfNotEqual {176}
	174 Move X0, X21
	175 Call 0x1D2D690
	176 Move X0, X22
	177 Call 0x1C17F18
	178 Call 0x1991590

Method: System.Boolean TryGetDataFromSource(UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose poseSource, out UnityEngine.Pose resultPose)

Disassembly:
	0x03C98AB8 BL 0x1C16CB8
	0x03C98ABC MOV X1, X0
	0x03C98AC0 STR X0, [X20 + 0x138]
	0x03C98AC4 MOV X0, X19
	0x03C98AC8 LDP X20, X19, [X31 + 0x10]
	0x03C98ACC LDR X30, [X31], #0x20
	0x03C98AD0 BR X1
	0x03C98AD4 LDR X8, [X0]
	0x03C98AD8 LDP X2, X1, [X8 + 0x198]
	0x03C98ADC BR X2
	0x03C98AE0 MOV X1, X31
	0x03C98AE4 B 0x33BDD8C
	0x03C98AE8 STR X30, [X31 - 0x20]!
	0x03C98AEC STP X20, X19, [X31 + 0x10]
	0x03C98AF0 ADRP X20, 0x74F000
	0x03C98AF4 LDR X1, [X20 + 0x130]
	0x03C98AF8 MOV X19, X0
	0x03C98AFC CBNZ X1, 0x3C98B14
	0x03C98B00 ADRP X0, 0xFFFFFFFFFCE91000
	0x03C98B04 ADD X0, X0, 0x238
	0x03C98B08 BL 0x1C16CB8
	0x03C98B0C MOV X1, X0
	0x03C98B10 STR X0, [X20 + 0x130]
	0x03C98B14 MOV X0, X19
	0x03C98B18 LDP X20, X19, [X31 + 0x10]
	0x03C98B1C LDR X30, [X31], #0x20
	0x03C98B20 BR X1
	0x03C98B24 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x750000
	007 Move X22, 0x4C9000
	008 Move W8, [X21+235]
	009 Move X22, [X22+3976]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4C9000
	017 Move X0, [X0+3976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+235], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Move X1, X19
	028 Call PoseDataSource.GetDataFromSource, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X30, [X31+48]
	036 Return X0

Method: UnityEngine.SpatialTracking.PoseDataFlags GetDataFromSource(UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose poseSource, out UnityEngine.Pose resultPose)

Disassembly:
	0x03C98B28 STP X20, X19, [X31 + 0x10]
	0x03C98B2C ADRP X20, 0x74F000
	0x03C98B30 ADRP X21, 0x483000
	0x03C98B34 LDRB W8, [X20 + 0x140]
	0x03C98B38 LDR X21, [X21 + 0xC0]
	0x03C98B3C MOV X19, X0
	0x03C98B40 TBNZ X8, 0x0, 0x3C98B58
	0x03C98B44 ADRP X0, 0x483000
	0x03C98B48 LDR X0, [X0 + 0xC0]
	0x03C98B4C BL 0x1C16CF4
	0x03C98B50 MOVZ W8, 0x1
	0x03C98B54 STRB W8, [X20 + 0x140]
	0x03C98B58 LDR X0, [X21]
	0x03C98B5C LDR W8, [X0 + 0xE0]
	0x03C98B60 CBNZ W8, 0x3C98B68
	0x03C98B64 BL 0x1C16DFC
	0x03C98B68 MOV X0, X19
	0x03C98B6C BL 0x3C98B98
	0x03C98B70 TBZ X0, 0x0, 0x3C98B8C
	0x03C98B74 LDR X8, [X19]
	0x03C98B78 MOV X0, X19
	0x03C98B7C LDP X20, X19, [X31 + 0x10]
	0x03C98B80 LDP X2, X1, [X8 + 0x1C8]
	0x03C98B84 LDP X30, X21, [X31], #0x20
	0x03C98B88 BR X2
	0x03C98B8C LDP X20, X19, [X31 + 0x10]
	0x03C98B90 LDP X30, X21, [X31], #0x20
	0x03C98B94 RET
	0x03C98B98 STP X30, X21, [X31 - 0x20]!
	0x03C98B9C STP X20, X19, [X31 + 0x10]
	0x03C98BA0 ADRP X21, 0x74F000
	0x03C98BA4 ADRP X20, 0x483000
	0x03C98BA8 LDRB W8, [X21 + 0x154]
	0x03C98BAC LDR X20, [X20 + 0xC0]
	0x03C98BB0 MOV X19, X0
	0x03C98BB4 TBNZ X8, 0x0, 0x3C98BD8
	0x03C98BB8 ADRP X0, 0x4C9000
	0x03C98BBC LDR X0, [X0 + 0x8]
	0x03C98BC0 BL 0x1C16CF4
	0x03C98BC4 ADRP X0, 0x483000
	0x03C98BC8 LDR X0, [X0 + 0xC0]
	0x03C98BCC BL 0x1C16CF4
	0x03C98BD0 MOVZ W8, 0x1
	0x03C98BD4 STRB W8, [X21 + 0x154]
	0x03C98BD8 LDR X0, [X20]
	0x03C98BDC LDR W8, [X0 + 0xE0]
	0x03C98BE0 CBNZ W8, 0x3C98BEC
	0x03C98BE4 BL 0x1C16DFC
	0x03C98BE8 LDR X0, [X20]
	0x03C98BEC LDR X8, [X0 + 0xB8]
	0x03C98BF0 LDR X0, [X8 + 0x20]
	0x03C98BF4 CBZ X0, 0x3C98C14
	0x03C98BF8 ADRP X8, 0x4C9000
	0x03C98BFC LDR X8, [X8 + 0x8]
	0x03C98C00 MOV X1, X19
	0x03C98C04 LDP X20, X19, [X31 + 0x10]
	0x03C98C08 LDR X2, [X8]
	0x03C98C0C LDP X30, X21, [X31], #0x20
	0x03C98C10 B 0x301D7A8
	0x03C98C14 BL 0x1C16F20
	0x03C98C18 MOV X1, X31
	0x03C98C1C B 0x33BDD8C
	0x03C98C20 LDR X0, [X0 + 0x10]
	0x03C98C24 RET
	0x03C98C28 LDR X8, [X0]
	0x03C98C2C LDP X2, X1, [X8 + 0x198]
	0x03C98C30 BR X2
	0x03C98C34 MOV X1, X31
	0x03C98C38 B 0x33BDD8C
	0x03C98C3C STP X30, X21, [X31 - 0x20]!
	0x03C98C40 STP X20, X19, [X31 + 0x10]
	0x03C98C44 ADRP X20, 0x74F000
	0x03C98C48 ADRP X21, 0x484000
	0x03C98C4C LDRB W8, [X20 + 0x141]
	0x03C98C50 LDR X21, [X21 + 0x740]
	0x03C98C54 MOV X19, X0
	0x03C98C58 TBNZ X8, 0x0, 0x3C98C70
	0x03C98C5C ADRP X0, 0x484000
	0x03C98C60 LDR X0, [X0 + 0x740]
	0x03C98C64 BL 0x1C16CF4
	0x03C98C68 MOVZ W8, 0x1
	0x03C98C6C STRB W8, [X20 + 0x141]
	0x03C98C70 LDR X0, [X21]
	0x03C98C74 LDR W8, [X0 + 0xE0]
	0x03C98C78 CBNZ W8, 0x3C98C80
	0x03C98C7C BL 0x1C16DFC
	0x03C98C80 MOV X0, X19
	0x03C98C84 LDP X20, X19, [X31 + 0x10]
	0x03C98C88 LDP X30, X21, [X31], #0x20
	0x03C98C8C B 0x3C98C90
	0x03C98C90 STP X30, X21, [X31 - 0x20]!
	0x03C98C94 STP X20, X19, [X31 + 0x10]
	0x03C98C98 ADRP X21, 0x74F000
	0x03C98C9C ADRP X20, 0x484000
	0x03C98CA0 LDRB W8, [X21 + 0x160]
	0x03C98CA4 LDR X20, [X20 + 0x740]
	0x03C98CA8 MOV X19, X0
	0x03C98CAC TBNZ X8, 0x0, 0x3C98CD0
	0x03C98CB0 ADRP X0, 0x4C9000
	0x03C98CB4 LDR X0, [X0 + 0x10]
	0x03C98CB8 BL 0x1C16CF4
	0x03C98CBC ADRP X0, 0x484000
	0x03C98CC0 LDR X0, [X0 + 0x740]
	0x03C98CC4 BL 0x1C16CF4
	0x03C98CC8 MOVZ W8, 0x1
	0x03C98CCC STRB W8, [X21 + 0x160]
	0x03C98CD0 LDR X0, [X20]
	0x03C98CD4 ADRP X21, 0x4C9000
	0x03C98CD8 LDR W8, [X0 + 0xE0]
	0x03C98CDC LDR X21, [X21 + 0x10]
	0x03C98CE0 CBNZ W8, 0x3C98CEC
	0x03C98CE4 BL 0x1C16DFC
	0x03C98CE8 LDR X0, [X20]
	0x03C98CEC LDR X8, [X0 + 0xB8]
	0x03C98CF0 LDR X2, [X21]
	0x03C98CF4 MOV X0, X19
	0x03C98CF8 LDP X20, X19, [X31 + 0x10]
	0x03C98CFC LDR X1, [X8 + 0x10]
	0x03C98D00 LDP X30, X21, [X31], #0x20
	0x03C98D04 B 0x229745C
	0x03C98D08 STR X30, [X31 - 0x20]!
	0x03C98D0C STP X20, X19, [X31 + 0x10]
	0x03C98D10 ADRP X20, 0x74F000
	0x03C98D14 ADRP X19, 0x483000
	0x03C98D18 LDRB W8, [X20 + 0x142]
	0x03C98D1C LDR X19, [X19 + 0xC0]
	0x03C98D20 TBNZ X8, 0x0, 0x3C98D38
	0x03C98D24 ADRP X0, 0x483000
	0x03C98D28 LDR X0, [X0 + 0xC0]
	0x03C98D2C BL 0x1C16CF4
	0x03C98D30 MOVZ W8, 0x1
	0x03C98D34 STRB W8, [X20 + 0x142]
	0x03C98D38 LDR X0, [X19]
	0x03C98D3C LDR W8, [X0 + 0xE0]
	0x03C98D40 CBNZ W8, 0x3C98D4C
	0x03C98D44 BL 0x1C16DFC
	0x03C98D48 LDR X0, [X19]
	0x03C98D4C LDR X8, [X0 + 0xB8]
	0x03C98D50 LDR X9, [X8 + 0x28]
	0x03C98D54 CBZ X9, 0x3C98D88
	0x03C98D58 LDR W9, [X0 + 0xE0]
	0x03C98D5C CBNZ W9, 0x3C98D6C
	0x03C98D60 BL 0x1C16DFC
	0x03C98D64 LDR X8, [X19]
	0x03C98D68 LDR X8, [X8 + 0xB8]
	0x03C98D6C LDR X8, [X8 + 0x28]
	0x03C98D70 CBZ X8, 0x3C98DE4
	0x03C98D74 LDR X9, [X8 + 0x18]
	0x03C98D78 LDR X0, [X8 + 0x40]
	0x03C98D7C LDR X1, [X8 + 0x28]
	0x03C98D80 BLR X9
	0x03C98D84 LDR X0, [X19]
	0x03C98D88 LDR W8, [X0 + 0xE0]
	0x03C98D8C CBNZ W8, 0x3C98D98
	0x03C98D90 BL 0x1C16DFC
	0x03C98D94 LDR X0, [X19]
	0x03C98D98 LDR X8, [X0 + 0xB8]
	0x03C98D9C LDR X8, [X8]
	0x03C98DA0 CBZ X8, 0x3C98DD8
	0x03C98DA4 LDR W8, [X0 + 0xE0]
	0x03C98DA8 CBNZ W8, 0x3C98DB4
	0x03C98DAC BL 0x1C16DFC
	0x03C98DB0 LDR X0, [X19]
	0x03C98DB4 LDR X8, [X0 + 0xB8]
	0x03C98DB8 LDR X8, [X8]
	0x03C98DBC CBZ X8, 0x3C98DE4
	0x03C98DC0 LDR X2, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0x750000
	007 Move W8, [X21+236]
	008 Move X19, X1
	009 Move W20, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x45C000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x45C000
	018 Move X0, [X0+2512]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C9000
	021 Move X0, [X0+3976]
	022 Call 0x1C17CF4
	023 Move X0, 0x484000
	024 Move X0, [X0+1552]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C9000
	027 Move X0, [X0+4016]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C9000
	030 Move X0, [X0+4024]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+236], W8
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, -51380224
	036 Move W8, W20
	037 Add X9, X9, 3762
	038 NotImplemented "Instruction ADR not yet implemented."
	039 Move W11, [X9]
	040 Add X10, X10, X11
	041 CallNoReturn X10
	042 Move X8, 0x4C9000
	043 Move X8, [X8+3976]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move W0, 2
	050 Move X8, 0x4C9000
	051 Move X8, [X8+3976]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move W0, W31
	058 Move X8, 0x4C9000
	059 Move X8, [X8+3976]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move W0, 1
	066 Move X8, 0x4C9000
	067 Move X8, [X8+3976]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move W0, 3
	074 Move X8, 0x4C9000
	075 Move X8, [X8+3976]
	076 Move X0, [X8]
	077 Move X8, 0x4C9000
	078 Move X8, [X8+3976]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W0, 5
	085 Move X8, 0x45C000
	086 Move X8, [X8+2512]
	087 Move W1, 1
	088 Move X0, [X8]
	089 Call 0x1C17D6C
	090 Move X8, 0x4C9000
	091 Move X8, [X8+4016]
	092 Move X21, X0
	093 Move TEMP, 0
	094 Not TEMP
	095 Move X9, TEMP
	096 Add X0, X31, 72
	097 Move X8, [X8]
	098 Move X1, X31
	099 Move [X31+88], W20
	100 Move [X31+72], X8
	101 Move [X31+80], X9
	102 Call Enum.ToString, X0
	103 Compare X21, 0
	104 JumpIfEqual {182}
	105 Move X20, X0
	106 Compare X0, 0
	107 JumpIfEqual {114}
	108 Move X8, [X21]
	109 Move X0, X20
	110 Move X1, [X8+64]
	111 Call 0x1C17E00
	112 Compare X0, 0
	113 JumpIfEqual {184}
	114 Move W8, [X21+24]
	115 Compare W8, 0
	116 JumpIfEqual {183}
	117 Move [X21+32], X20
	118 Move X8, 0x45C000
	119 Move X8, [X8+2600]
	120 Move X0, [X8]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X8, 0x4C9000
	126 Move X8, [X8+4024]
	127 Move X1, X21
	128 Move X2, X31
	129 Move X0, [X8]
	130 Call Debug.LogWarningFormat, X0, X1
	131 Move X8, 0x484000
	132 Move X8, [X8+1552]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Add X8, X31, 0
	139 Move X0, X31
	140 Call Pose.get_identity
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Move V1, [X31]
	143 Move W0, W31
	144 Move [X31+44], V0
	145 Move [X31+2], V1
	146 Move V0, [X31+2]
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Move [X19], V0
	149 Move [X19+12], V1
	150 Move X20, 0x4C9000
	151 Move X20, [X20+3976]
	152 Move X0, [X20]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move W0, 5
	158 Move X1, X19
	159 Call PoseDataSource.GetNodePoseData, X0, X1
	160 Compare W0, 0
	161 JumpIfEqual {168}
	162 Move X20, [X31+112]
	163 Move X19, [X31+120]
	164 Move X30, [X31+96]
	165 Move X21, [X31+104]
	166 Add X31, X31, 128
	167 Return X0
	168 Move X0, [X20]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move W0, 4
	174 Move X1, X19
	175 Move X20, [X31+112]
	176 Move X19, [X31+120]
	177 Move X30, [X31+96]
	178 Move X21, [X31+104]
	179 Add X31, X31, 128
	180 Call PoseDataSource.GetNodePoseData, X0, X1
	181 Return X0
	182 Call 0x1C17F20
	183 Call 0x1C17F28
	184 Call 0x1C17F44
	185 Move X1, X31
	186 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x03C98DC4 LDR X0, [X8 + 0x40]
	0x03C98DC8 LDR X1, [X8 + 0x28]
	0x03C98DCC LDP X20, X19, [X31 + 0x10]
	0x03C98DD0 LDR X30, [X31], #0x20
	0x03C98DD4 BR X2
	0x03C98DD8 LDP X20, X19, [X31 + 0x10]
	0x03C98DDC LDR X30, [X31], #0x20
	0x03C98DE0 RET
	0x03C98DE4 BL 0x1C16F20
	0x03C98DE8 STR X30, [X31 - 0x20]!
	0x03C98DEC STP X20, X19, [X31 + 0x10]
	0x03C98DF0 ADRP X20, 0x74F000
	0x03C98DF4 ADRP X19, 0x483000
	0x03C98DF8 LDRB W8, [X20 + 0x143]
	0x03C98DFC LDR X19, [X19 + 0xC0]
	0x03C98E00 TBNZ X8, 0x0, 0x3C98E18
	0x03C98E04 ADRP X0, 0x483000
	0x03C98E08 LDR X0, [X0 + 0xC0]
	0x03C98E0C BL 0x1C16CF4
	0x03C98E10 MOVZ W8, 0x1
	0x03C98E14 STRB W8, [X20 + 0x143]
	0x03C98E18 LDR X0, [X19]
	0x03C98E1C LDR W8, [X0 + 0xE0]
	0x03C98E20 CBNZ W8, 0x3C98E2C
	0x03C98E24 BL 0x1C16DFC
	0x03C98E28 LDR X0, [X19]
	0x03C98E2C LDR X8, [X0 + 0xB8]
	0x03C98E30 LDR X9, [X8 + 0x30]
	0x03C98E34 CBZ X9, 0x3C98E68
	0x03C98E38 LDR W9, [X0 + 0xE0]
	0x03C98E3C CBNZ W9, 0x3C98E4C
	0x03C98E40 BL 0x1C16DFC
	0x03C98E44 LDR X8, [X19]
	0x03C98E48 LDR X8, [X8 + 0xB8]
	0x03C98E4C LDR X8, [X8 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x750000
	007 Move X22, 0x4C9000
	008 Move X19, 0x4C9000
	009 Move X20, 0x4C9000
	010 Move W8, [X21+237]
	011 Move X22, [X22+4032]
	012 Move X19, [X19+4040]
	013 Move X20, [X20+3976]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x4C9000
	019 Move X0, [X0+4040]
	020 Call 0x1C17CF4
	021 Move X0, 0x4C9000
	022 Move X0, [X0+4032]
	023 Call 0x1C17CF4
	024 Move X0, 0x4C9000
	025 Move X0, [X0+3976]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+237], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<XRNodeState>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

