Type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/EaseAttachBurst_00000291$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B46E64 ADD W9, W9, 0x1
	0x03B46E68 ADD X8, X8, W9, 0x4, SXTW
	0x03B46E6C ADD X0, X8, 0x138
	0x03B46E70 LDP X8, X1, [X0]
	0x03B46E74 MOV X0, X21
	0x03B46E78 BLR X8
	0x03B46E7C ADRP X8, 0x5B0000
	0x03B46E80 LDR X8, [X8 + 0x408]
	0x03B46E84 MOV X21, X0
	0x03B46E88 LDR X8, [X8]
	0x03B46E8C MOV X0, X8
	0x03B46E90 BL 0x1C16F10
	0x03B46E94 ADRP X8, 0x614000
	0x03B46E98 LDR X8, [X8 + 0x900]
	0x03B46E9C MOV X1, X19
	0x03B46EA0 MOV X3, X31
	0x03B46EA4 MOV X22, X0
	0x03B46EA8 LDR X2, [X8]
	0x03B46EAC BL 0x2725C6C
	0x03B46EB0 CBZ X21, 0x3B47064
	0x03B46EB4 ADRP X8, 0x614000
	0x03B46EB8 LDR X8, [X8 + 0x200]
	0x03B46EBC MOV X0, X21
	0x03B46EC0 MOV X1, X22
	0x03B46EC4 LDR X2, [X8]
	0x03B46EC8 BL 0x2729BA4
	0x03B46ECC STR X20, [X19 + 0x50]
	0x03B46ED0 LDR X1, [X23]
	0x03B46ED4 MOV X0, X20
	0x03B46ED8 BL 0x1C16E00
	0x03B46EDC STR X0, [X19 + 0x58]
	0x03B46EE0 LDR X1, [X23]
	0x03B46EE4 MOV X0, X20
	0x03B46EE8 BL 0x1C16E00
	0x03B46EEC LDR X20, [X19 + 0x58]
	0x03B46EF0 CBZ X20, 0x3B47050
	0x03B46EF4 LDR X8, [X20]
	0x03B46EF8 LDR X1, [X23]
	0x03B46EFC LDRH W9, [X8 + 0x12E]
	0x03B46F00 CBZ X9, 0x3B46F24
	0x03B46F04 LDR X10, [X8 + 0xB0]
	0x03B46F08 ADD X10, X10, 0x8
	0x03B46F0C LDUR X11, [X10 - 0x8]
	0x03B46F10 CMP X11, X1
	0x03B46F14 B.EQ 0x3B46F34
	0x03B46F18 SUBS X9, X9, 0x1
	0x03B46F1C ADD X10, X10, 0x10
	0x03B46F20 B.NE 0x3B46F0C
	0x03B46F24 MOV X0, X20
	0x03B46F28 MOV W2, W31
	0x03B46F2C BL 0x1C5C788
	0x03B46F30 B 0x3B46F40
	0x03B46F34 LDRSW X9, [X10]
	0x03B46F38 ADD X8, X8, X9, 0x4, LSL
	0x03B46F3C ADD X0, X8, 0x138
	0x03B46F40 LDP X8, X1, [X0]
	0x03B46F44 MOV X0, X20
	0x03B46F48 BLR X8
	0x03B46F4C ADRP X8, 0x614000
	0x03B46F50 LDR X8, [X8 + 0x188]
	0x03B46F54 MOV X20, X0
	0x03B46F58 LDR X8, [X8]
	0x03B46F5C MOV X0, X8
	0x03B46F60 BL 0x1C16F10
	0x03B46F64 ADRP X8, 0x614000
	0x03B46F68 LDR X8, [X8 + 0x8F8]
	0x03B46F6C MOV X1, X19
	0x03B46F70 MOV X3, X31
	0x03B46F74 MOV X21, X0
	0x03B46F78 LDR X2, [X8]
	0x03B46F7C BL 0x2725C6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x89D000
	008 Move X23, 0x615000
	009 Move W8, [X20+2188]
	010 Move X23, [X23+1880]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5D6000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x615000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x615000
	023 Move X0, [X0+2216]
	024 Call 0x1C17CF4
	025 Move X0, 0x615000
	026 Move X0, [X0+2224]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2188], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x5D6000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x615000
	053 Move X8, [X8+2224]
	054 Move X21, [X8]
	055 Move X8, 0x615000
	056 Move X8, [X8+2216]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B46F80 CBZ X20, 0x3B47064
	0x03B46F84 ADRP X8, 0x614000
	0x03B46F88 LDR X8, [X8 + 0x1B0]
	0x03B46F8C MOV X0, X20
	0x03B46F90 MOV X1, X21
	0x03B46F94 LDR X2, [X8]
	0x03B46F98 BL 0x2729B68
	0x03B46F9C LDR X20, [X19 + 0x58]
	0x03B46FA0 CBZ X20, 0x3B47064
	0x03B46FA4 LDR X8, [X20]
	0x03B46FA8 LDR X1, [X23]
	0x03B46FAC LDRH W9, [X8 + 0x12E]
	0x03B46FB0 CBZ X9, 0x3B46FD4
	0x03B46FB4 LDR X10, [X8 + 0xB0]
	0x03B46FB8 ADD X10, X10, 0x8
	0x03B46FBC LDUR X11, [X10 - 0x8]
	0x03B46FC0 CMP X11, X1
	0x03B46FC4 B.EQ 0x3B46FE4
	0x03B46FC8 SUBS X9, X9, 0x1
	0x03B46FCC ADD X10, X10, 0x10
	0x03B46FD0 B.NE 0x3B46FBC
	0x03B46FD4 MOVZ W2, 0x1
	0x03B46FD8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x89D000
	005 Move X19, 0x615000
	006 Move W8, [X20+2189]
	007 Move X19, [X19+1880]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x615000
	013 Move X0, [X0+1880]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2189], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call EaseAttachBurst_00000291$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B46FDC BL 0x1C5C788
	0x03B46FE0 B 0x3B46FF4
	0x03B46FE4 LDR W9, [X10]
	0x03B46FE8 ADD W9, W9, 0x1
	0x03B46FEC ADD X8, X8, W9, 0x4, SXTW
	0x03B46FF0 ADD X0, X8, 0x138
	0x03B46FF4 LDP X8, X1, [X0]
	0x03B46FF8 MOV X0, X20
	0x03B46FFC BLR X8
	0x03B47000 ADRP X8, 0x5AF000
	0x03B47004 LDR X8, [X8 + 0x408]
	0x03B47008 MOV X20, X0
	0x03B4700C LDR X8, [X8]
	0x03B47010 MOV X0, X8
	0x03B47014 BL 0x1C16F10
	0x03B47018 ADRP X8, 0x613000
	0x03B4701C LDR X8, [X8 + 0x900]
	0x03B47020 MOV X1, X19
	0x03B47024 MOV X3, X31
	0x03B47028 MOV X21, X0
	0x03B4702C LDR X2, [X8]
	0x03B47030 BL 0x2725C6C
	0x03B47034 CBZ X20, 0x3B47064
	0x03B47038 ADRP X8, 0x5AF000
	0x03B4703C LDR X8, [X8 + 0x410]
	0x03B47040 MOV X0, X20
	0x03B47044 MOV X1, X21
	0x03B47048 LDR X2, [X8]
	0x03B4704C BL 0x2729B68
	0x03B47050 MOV X0, X19
	0x03B47054 LDP X20, X19, [X31 + 0x20]
	0x03B47058 LDP X22, X21, [X31 + 0x10]
	0x03B4705C LDP X30, X23, [X31], #0x30
	0x03B47060 B 0x3B46B38
	0x03B47064 BL 0x1C16F20
	0x03B47068 RET
	0x03B4706C STP X30, X21, [X31 - 0x20]!
	0x03B47070 STP X20, X19, [X31 + 0x10]
	0x03B47074 ADRP X21, 0x89B000
	0x03B47078 ADRP X20, 0x5AC000
	0x03B4707C LDRB W8, [X21 + 0x89A]
	0x03B47080 LDR X20, [X20 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x89D000
	006 Move X19, 0x615000
	007 Move X20, 0x5D6000
	008 Move W8, [X21+2190]
	009 Move X19, [X19+2232]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5D5000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x614000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x614000
	022 Move X0, [X0+2232]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2190], W8
	026 Move X0, [X20]
	027 Move X20, 0x614000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1880]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B47084 MOV X19, X0

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B47088 TBNZ X8, 0x0, 0x3B470A0

ISIL:
	001 Call EaseAttachBurst_00000291$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(ref UnityEngine.Pose targetPose, ref UnityEngine.Vector3 targetLocalScale, in UnityEngine.Pose rawTargetPose, in UnityEngine.Vector3 rawTargetLocalScale, System.Single deltaTime, System.Single attachEaseInTime, ref System.Single currentAttachEaseTime)

Disassembly:
	0x03B43FF8 LDR W9, [X8 + 0xE0]
	0x03B43FFC CBNZ W9, 0x3B44008
	0x03B44000 MOV X0, X8
	0x03B44004 BL 0x1C16DFC
	0x03B44008 MOV X0, X22
	0x03B4400C MOV X1, X21
	0x03B44010 MOV X2, X31
	0x03B44014 BL 0x3C3883C
	0x03B44018 TBZ X0, 0x0, 0x3B44064
	0x03B4401C MOV X0, X20
	0x03B44020 MOV X1, X31
	0x03B44024 BL 0x3C3EB78
	0x03B44028 CBZ X19, 0x3B440D8
	0x03B4402C MOV X0, X19
	0x03B44030 MOV X1, X31
	0x03B44034 BL 0x3C3EC04
	0x03B44038 MOV X0, X20
	0x03B4403C MOV X1, X31
	0x03B44040 BL 0x3C3F830
	0x03B44044 MOV X0, X19
	0x03B44048 LDP X20, X19, [X31 + 0x40]
	0x03B4404C LDP X22, X21, [X31 + 0x30]
	0x03B44050 LDP X30, X23, [X31 + 0x20]
	0x03B44054 LDP D9, D8, [X31 + 0x10]
	0x03B44058 MOV X1, X31
	0x03B4405C LDR V10, [X31], #0x50
	0x03B44060 B 0x3C3F8B8
	0x03B44064 MOV X0, X20
	0x03B44068 MOV X1, X31
	0x03B4406C BL 0x3C3F58C
	0x03B44070 MOV X0, X20
	0x03B44074 MOV X1, X31
	0x03B44078 MOV V8.16B, V0.16B
	0x03B4407C MOV V9.16B, V1.16B
	0x03B44080 MOV V10.16B, V2.16B
	0x03B44084 BL 0x3C3DEB4
	0x03B44088 CBZ X19, 0x3B440D8
	0x03B4408C MOV V4.16B, V0.16B
	0x03B44090 MOV V5.16B, V1.16B
	0x03B44094 MOV X0, X19
	0x03B44098 MOV V0.16B, V8.16B
	0x03B4409C MOV V1.16B, V9.16B
	0x03B440A0 LDP X20, X19, [X31 + 0x40]
	0x03B440A4 LDP X22, X21, [X31 + 0x30]
	0x03B440A8 LDP X30, X23, [X31 + 0x20]
	0x03B440AC LDP D9, D8, [X31 + 0x10]
	0x03B440B0 MOV V6.16B, V2.16B
	0x03B440B4 MOV V7.16B, V3.16B
	0x03B440B8 MOV V2.16B, V10.16B
	0x03B440BC MOV V3.16B, V4.16B
	0x03B440C0 MOV V4.16B, V5.16B
	0x03B440C4 MOV V5.16B, V6.16B
	0x03B440C8 MOV V6.16B, V7.16B
	0x03B440CC MOV X1, X31
	0x03B440D0 LDR V10, [X31], #0x50
	0x03B440D4 B 0x3C40000
	0x03B440D8 BL 0x1C16F20
	0x03B440DC STP X30, X21, [X31 - 0x20]!
	0x03B440E0 STP X20, X19, [X31 + 0x10]
	0x03B440E4 ADRP X21, 0x89E000
	0x03B440E8 LDRB W8, [X21 + 0x87B]
	0x03B440EC MOV X19, X1
	0x03B440F0 MOV X20, X0
	0x03B440F4 TBNZ X8, 0x0, 0x3B44118
	0x03B440F8 ADRP X0, 0x616000
	0x03B440FC LDR X0, [X0 + 0x7C0]
	0x03B44100 BL 0x1C16CF4
	0x03B44104 ADRP X0, 0x616000
	0x03B44108 LDR X0, [X0 + 0x7C8]
	0x03B4410C BL 0x1C16CF4
	0x03B44110 MOVZ W8, 0x1
	0x03B44114 STRB W8, [X21 + 0x87B]
	0x03B44118 LDRB W8, [X20 + 0x1E1]
	0x03B4411C CBZ W8, 0x3B44194
	0x03B44120 CBZ X19, 0x3B44184
	0x03B44124 ADRP X9, 0x616000
	0x03B44128 LDR X9, [X9 + 0x7C8]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x89F000
	012 Move X25, 0x5D8000
	013 Move W8, [X24+2191]
	014 Move X25, [X25+2120]
	015 Move X19, X4
	016 Move V8, V1
	017 Move V9, V0
	018 Move X20, X3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x5D8000
	027 Move X0, [X0+2120]
	028 Call 0x1C17CF4
	029 Move X0, 0x617000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0x617000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+2191], W8
	037 Move X0, [X25]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X31
	043 Call BurstCompiler.get_IsEnabled
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {77}
	048 Move X8, 0x617000
	049 Move X8, [X8+1880]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Call EaseAttachBurst_00000291$BurstDirectCall.GetFunctionPointer
	056 Compare X0, 0
	057 JumpIfEqual {77}
	058 Move X5, X0
	059 Move X0, X23
	060 Move X1, X22
	061 Move X2, X21
	062 Move X3, X20
	063 Move X4, X19
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X24, [X31+32]
	069 Move X23, [X31+40]
	070 Move X30, [X31+16]
	071 Move X25, [X31+24]
	072 Move V0, V9
	073 Move V1, V8
	074 Move D9, [X31+80]
	075 Move D8, [X31+88]
	076 CallNoReturn X5
	077 Move X8, 0x617000
	078 Move X8, [X8+1728]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X23
	085 Move X1, X22
	086 Move X2, X21
	087 Move X3, X20
	088 Move X4, X19
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X24, [X31+32]
	094 Move X23, [X31+40]
	095 Move X30, [X31+16]
	096 Move X25, [X31+24]
	097 Move V0, V9
	098 Move V1, V8
	099 Move X5, X31
	100 Move D9, [X31+80]
	101 Move D8, [X31+88]
	102 Call 0x3B48C48
	103 Return 

