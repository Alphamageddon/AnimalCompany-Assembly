Type: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase

Method: System.Single get_turnAmount()

Disassembly:
	0x03B81080 CBZ W8, 0x3B8119C
	0x03B81084 MOV X0, X19

ISIL:
	001 Move V0, [X0+72]
	002 Return V0

Method: System.Void set_turnAmount(System.Single value)

Disassembly:
	0x03B81088 MOV X1, X31
	0x03B8108C BL 0x3C32E90

ISIL:
	001 Move [X0+72], S0
	002 Return 

Method: System.Single get_debounceTime()

Disassembly:
	0x03B81090 CBZ X0, 0x3B81350
	0x03B81094 MOV X1, X31

ISIL:
	001 Move V0, [X0+76]
	002 Return V0

Method: System.Void set_debounceTime(System.Single value)

Disassembly:
	0x03B81098 BL 0x3C3F988
	0x03B8109C ADD X0, X31, 0xE0

ISIL:
	001 Move [X0+76], S0
	002 Return 

Method: System.Boolean get_enableTurnLeftRight()

Disassembly:
	0x03B810A0 MOV X1, X31
	0x03B810A4 MOV V9.16B, V0.16B

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_enableTurnLeftRight(System.Boolean value)

Disassembly:
	0x03B810A8 MOV V10.16B, V1.16B
	0x03B810AC MOV V8.16B, V2.16B
	0x03B810B0 BL 0x3C8E678

ISIL:
	001 And W8, W1, 1
	002 Move [X0+80], W8
	003 Return 

Method: System.Boolean get_enableTurnAround()

Disassembly:
	0x03B810B4 ADRP X21, 0x857000
	0x03B810B8 LDRB W8, [X21 + 0xA24]

ISIL:
	001 Move W0, [X0+81]
	002 Return X0

Method: System.Void set_enableTurnAround(System.Boolean value)

Disassembly:
	0x03B810BC MOV V11.16B, V0.16B
	0x03B810C0 MOV V12.16B, V1.16B
	0x03B810C4 MOV V13.16B, V2.16B

ISIL:
	001 And W8, W1, 1
	002 Move [X0+81], W8
	003 Return 

Method: System.Single get_delayTime()

Disassembly:
	0x03B810C8 CBNZ W8, 0x3B810E0
	0x03B810CC ADRP X0, 0x572000

ISIL:
	001 Move V0, [X0+84]
	002 Return V0

Method: System.Void set_delayTime(System.Single value)

Disassembly:
	0x03B810D0 LDR X0, [X0 + 0x5A8]
	0x03B810D4 BL 0x1C16CF4

ISIL:
	001 Move [X0+84], S0
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x03B810D8 MOVZ W8, 0x1
	0x03B810DC STRB W8, [X21 + 0xA24]
	0x03B810E0 ADRP X21, 0x572000
	0x03B810E4 LDR X21, [X21 + 0x5A8]
	0x03B810E8 FMUL S0, S9, S9
	0x03B810EC FMUL S1, S10, S10
	0x03B810F0 FADD S0, S0, S1
	0x03B810F4 LDR X0, [X21]
	0x03B810F8 FMUL S1, S8, S8
	0x03B810FC FADD S14, S1, S0
	0x03B81100 FMUL S0, S11, S11
	0x03B81104 LDR W8, [X0 + 0xE0]
	0x03B81108 FMUL S1, S12, S12
	0x03B8110C FADD S0, S0, S1
	0x03B81110 FMUL S1, S13, S13
	0x03B81114 FADD S15, S1, S0
	0x03B81118 CBNZ W8, 0x3B81120
	0x03B8111C BL 0x1C16DFC
	0x03B81120 ADRP X8, 0xFFFFFFFFFCF68000
	0x03B81124 LDR V1, [X8 + 0xFE8]
	0x03B81128 FMUL S0, S14, S15
	0x03B8112C FSQRT S0, S0
	0x03B81130 FCMP S0, S1
	0x03B81134 FMOV S1, W31
	0x03B81138 B.MI 0x3B81190
	0x03B8113C LDR X0, [X21]
	0x03B81140 FMUL S1, S9, S11
	0x03B81144 FMUL S2, S10, S12
	0x03B81148 FMUL S3, S8, S13
	0x03B8114C FADD S1, S1, S2
	0x03B81150 FADD S1, S3, S1
	0x03B81154 LDR W8, [X0 + 0xE0]
	0x03B81158 FDIV S0, S1, S0
	0x03B8115C FMOV S1, 1
	0x03B81160 FMOV S2, -1
	0x03B81164 FMIN S1, S0, S1
	0x03B81168 FCMP S0, S2
	0x03B8116C FCSEL S8, S1, S2, PL
	0x03B81170 CBNZ W8, 0x3B81178
	0x03B81174 BL 0x1C16DFC
	0x03B81178 FCVT S0, S8
	0x03B8117C BL 0x3EB1B80
	0x03B81180 ADRP X8, 0xFFFFFFFFFCF69000
	0x03B81184 LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x03B8118C FMUL S1, S0, S1
	0x03B81190 LDR V0, [X19 + 0x1E8]
	0x03B81194 FCMP S1, S0
	0x03B81198 B.GT 0x3B812F8
	0x03B8119C LDR W21, [X19 + 0x1D8]
	0x03B811A0 MOV X0, X31
	0x03B811A4 BL 0x3C3C6C4
	0x03B811A8 STR W31, [X31 + 0xC8]
	0x03B811AC STP X31, X31, [X31 + 0xB8]
	0x03B811B0 STR X31, [X31 + 0xB0]
	0x03B811B4 STR S0, [X31 + 0xCC]
	0x03B811B8 STR W21, [X31 + 0xD0]
	0x03B811BC ADRP X8, 0x5D9000
	0x03B811C0 LDR X8, [X8 + 0x368]
	0x03B811C4 LDR X9, [X20]
	0x03B811C8 LDR X8, [X8]
	0x03B811CC LDRB W11, [X9 + 0x130]
	0x03B811D0 LDRB W10, [X8 + 0x130]
	0x03B811D4 CMP W11, W10
	0x03B811D8 B.CC 0x3B811F0
	0x03B811DC LDR X9, [X9 + 0xC8]
	0x03B811E0 ADD X9, X9, X10, 0x3, LSL
	0x03B811E4 LDUR X9, [X9 - 0x8]
	0x03B811E8 CMP X9, X8
	0x03B811EC B.EQ 0x3B81320
	0x03B811F0 LDUR V0, [X22 + 0x1C]
	0x03B811F4 LDP V2, V1, [X31 + 0xE0]
	0x03B811F8 STUR V0, [X31 + 0x4C]
	0x03B811FC STP V2, V1, [X31 + 0x30]
	0x03B81200 LDR X8, [X19]
	0x03B81204 LDR V0, [X31 + 0x4]
	0x03B81208 LDUR V1, [X31 + 0x4C]
	0x03B8120C LDR X9, [X8 + 0x868]
	0x03B81210 STP V2, V0, [X31 + 0x110]
	0x03B81214 STUR V1, [X22 + 0x4C]
	0x03B81218 LDR X4, [X8 + 0x870]
	0x03B8121C ADD X2, X31, 0x110

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x862000
	007 Move X20, 0x573000
	008 Move W8, [X21+2768]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x573000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x573000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x573000
	022 Move X0, [X0+2704]
	023 Call 0x1C17CF4
	024 Move X0, 0x5DB000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2768], W8
	029 Move X0, X19
	030 Call LocomotionProvider.Awake, X0
	031 Move X0, [X20]
	032 Move X20, [X19+48]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {88}
	045 Move V0, [X19+84]
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move X8, [X19+48]
	048 Compare X8, 0
	049 JumpIfEqual {94}
	050 Move V1, [X8+44]
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X21, 0x573000
	053 Move X21, [X21+2704]
	054 Add X1, X31, 12
	055 Move [X31+12], S0
	056 Move X0, [X21]
	057 Call 0x1C17E04
	058 Move X8, [X19+48]
	059 Compare X8, 0
	060 JumpIfEqual {94}
	061 Move X20, X0
	062 Move V0, [X8+44]
	063 Move X0, [X21]
	064 Add X1, X31, 8
	065 Move [X31+8], S0
	066 Call 0x1C17E04
	067 Move X8, 0x5DB000
	068 Move X8, [X8+3616]
	069 Move X2, X0
	070 Move X1, X20
	071 Move X3, X31
	072 Move X8, [X8]
	073 Move X0, X8
	074 Call String.Format, X0, X1, X2
	075 Move X8, 0x573000
	076 Move X8, [X8+2600]
	077 Move X20, X0
	078 Move X8, [X8]
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X0, X20
	085 Move X1, X19
	086 Move X2, X31
	087 Call Debug.LogWarning, X0, X1
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X30, [X31+16]
	091 Move X21, [X31+24]
	092 Add X31, X31, 48
	093 Return 
	094 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03B81220 ADD X3, X31, 0xB0
	0x03B81224 MOV X0, X19
	0x03B81228 MOV X1, X20
	0x03B8122C BLR X9
	0x03B81230 TBZ X0, 0x0, 0x3B812F8
	0x03B81234 ADD X2, X31, 0xB0
	0x03B81238 MOV X0, X19
	0x03B8123C MOV X1, X20
	0x03B81240 BL 0x3B813D4
	0x03B81244 LDR X0, [X19 + 0x1D0]
	0x03B81248 LDP V0, V1, [X31 + 0xB0]
	0x03B8124C LDR W8, [X31 + 0xD0]
	0x03B81250 STP V0, V1, [X31]
	0x03B81254 STR W8, [X31 + 0x20]
	0x03B81258 CBZ X0, 0x3B81350
	0x03B8125C LDR X8, [X0]
	0x03B81260 LDP V0, V1, [X31]
	0x03B81264 LDR W9, [X31 + 0x20]
	0x03B81268 ADD X1, X31, 0x110
	0x03B8126C LDR X10, [X8 + 0x188]
	0x03B81270 STP V0, V1, [X31 + 0x110]
	0x03B81274 STR W9, [X31 + 0x130]
	0x03B81278 LDR X2, [X8 + 0x190]
	0x03B8127C BLR X10
	0x03B81280 TBZ X0, 0x0, 0x3B812F8
	0x03B81284 LDR X8, [X19 + 0x1F0]
	0x03B81288 CBZ X8, 0x3B812F8
	0x03B8128C LDR X0, [X19 + 0x1F8]
	0x03B81290 CBZ X0, 0x3B81350
	0x03B81294 ADRP X8, 0x5DA000
	0x03B81298 LDR X8, [X8 + 0xE30]
	0x03B8129C ADD X1, X31, 0xA0
	0x03B812A0 LDR X2, [X8]
	0x03B812A4 BL 0x2EF1058
	0x03B812A8 MOV X8, X1
	0x03B812AC LDR X1, [X31 + 0xA0]
	0x03B812B0 STP X0, X8, [X31 + 0x90]
	0x03B812B4 CBZ X1, 0x3B81354
	0x03B812B8 STP X20, X19, [X1 + 0x10]
	0x03B812BC LDR W8, [X31 + 0xD0]
	0x03B812C0 LDP V1, V0, [X31 + 0xB0]
	0x03B812C4 STR W8, [X1 + 0x40]
	0x03B812C8 STP V1, V0, [X1 + 0x20]
	0x03B812CC LDR X0, [X19 + 0x1F0]
	0x03B812D0 CBZ X0, 0x3B81358
	0x03B812D4 ADRP X8, 0x5DA000
	0x03B812D8 LDR X8, [X8 + 0xE40]
	0x03B812DC LDR X2, [X8]
	0x03B812E0 BL 0x2729DBC
	0x03B812E4 ADRP X8, 0x5DA000
	0x03B812E8 LDR X8, [X8 + 0xE38]
	0x03B812EC ADD X0, X31, 0x90
	0x03B812F0 LDR X1, [X8]
	0x03B812F4 BL 0x24A6DD0
	0x03B812F8 LDP X20, X19, [X31 + 0x1B0]
	0x03B812FC LDP X22, X21, [X31 + 0x1A0]
	0x03B81300 LDP X30, X23, [X31 + 0x190]
	0x03B81304 LDR X29, [X31 + 0x180]
	0x03B81308 LDP D9, D8, [X31 + 0x170]
	0x03B8130C LDP D11, D10, [X31 + 0x160]
	0x03B81310 LDP D13, D12, [X31 + 0x150]
	0x03B81314 LDP D15, D14, [X31 + 0x140]
	0x03B81318 ADD X31, X31, 0x1C0
	0x03B8131C RET
	0x03B81320 LDUR V0, [X22 + 0x1C]
	0x03B81324 LDP V2, V1, [X31 + 0xE0]
	0x03B81328 STUR V0, [X31 + 0x7C]
	0x03B8132C STP V2, V1, [X31 + 0x60]
	0x03B81330 LDR X8, [X19]
	0x03B81334 LDR V0, [X31 + 0x7]
	0x03B81338 LDUR V1, [X31 + 0x7C]
	0x03B8133C LDR X9, [X8 + 0x878]
	0x03B81340 STP V2, V0, [X31 + 0x110]
	0x03B81344 STUR V1, [X22 + 0x4C]
	0x03B81348 LDR X4, [X8 + 0x880]
	0x03B8134C B 0x3B8121C
	0x03B81350 BL 0x1C16F20
	0x03B81354 BL 0x1C16F20
	0x03B81358 BL 0x1C16F20
	0x03B8135C B 0x3B81360
	0x03B81360 MOV X20, X0
	0x03B81364 CMP W1, 0x1
	0x03B81368 B.NE 0x3B8139C
	0x03B8136C MOV X0, X20
	0x03B81370 BL 0x3EB1AD0
	0x03B81374 LDR X19, [X0]
	0x03B81378 BL 0x3EB1AE0
	0x03B8137C ADRP X8, 0x5DA000
	0x03B81380 LDR X8, [X8 + 0xE38]
	0x03B81384 ADD X0, X31, 0x90
	0x03B81388 LDR X1, [X8]
	0x03B8138C BL 0x24A6DD0
	0x03B81390 CBZ X19, 0x3B812F8
	0x03B81394 MOV X0, X19
	0x03B81398 BL 0x1C16F18
	0x03B8139C MOV X19, X31
	0x03B813A0 B 0x3B813A8
	0x03B813A4 MOV X20, X0
	0x03B813A8 ADRP X8, 0x5DA000
	0x03B813AC LDR X8, [X8 + 0xE38]
	0x03B813B0 LDR X1, [X8]
	0x03B813B4 ADD X0, X31, 0x90
	0x03B813B8 BL 0x24A6DD0
	0x03B813BC CBNZ X19, 0x3B813C8
	0x03B813C0 MOV X0, X20
	0x03B813C4 BL 0x1D2C690
	0x03B813C8 MOV X0, X19
	0x03B813CC BL 0x1C16F18
	0x03B813D0 BL 0x1990590
	0x03B813D4 SUB X31, X31, 0x50
	0x03B813D8 STR D10, [X31 + 0x10]
	0x03B813DC STP D9, D8, [X31 + 0x18]
	0x03B813E0 STR X30, [X31 + 0x28]
	0x03B813E4 STP X22, X21, [X31 + 0x30]
	0x03B813E8 STP X20, X19, [X31 + 0x40]
	0x03B813EC ADRP X22, 0x861000
	0x03B813F0 LDRB W8, [X22 + 0xAD6]
	0x03B813F4 MOV X19, X2
	0x03B813F8 MOV X21, X1
	0x03B813FC MOV X20, X0
	0x03B81400 TBNZ X8, 0x0, 0x3B81418
	0x03B81404 ADRP X0, 0x5DA000
	0x03B81408 LDR X0, [X0 + 0xE48]
	0x03B8140C BL 0x1C16CF4
	0x03B81410 MOVZ W8, 0x1
	0x03B81414 STRB W8, [X22 + 0xAD6]
	0x03B81418 STR W31, [X31 + 0x8]
	0x03B8141C STR X31, [X31]
	0x03B81420 LDRB W8, [X20 + 0x1DC]
	0x03B81424 CBZ W8, 0x3B814F0
	0x03B81428 LDR X0, [X20 + 0x200]
	0x03B8142C CBZ X0, 0x3B8150C
	0x03B81430 ADRP X8, 0x5DA000
	0x03B81434 LDR X8, [X8 + 0xE48]
	0x03B81438 ADD X2, X31, 0x0
	0x03B8143C MOV X1, X21
	0x03B81440 LDR X3, [X8]
	0x03B81444 BL 0x2AC2940
	0x03B81448 TBZ X0, 0x0, 0x3B814F0
	0x03B8144C LDR W8, [X19 + 0x20]
	0x03B81450 CMP W8, 0x1
	0x03B81454 B.EQ 0x3B814A0
	0x03B81458 CBNZ W8, 0x3B814F0
	0x03B8145C ADRP X20, 0x857000
	0x03B81460 LDP S8, S9, [X31]
	0x03B81464 LDRB W8, [X20 + 0x786]
	0x03B81468 LDR V10, [X31 + 0x8]
	0x03B8146C CBNZ W8, 0x3B81484
	0x03B81470 ADRP X0, 0x572000
	0x03B81474 LDR X0, [X0 + 0x5A0]
	0x03B81478 BL 0x1C16CF4
	0x03B8147C MOVZ W8, 0x1
	0x03B81480 STRB W8, [X20 + 0x786]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x862000
	007 Move W8, [X20+2769]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x573000
	014 Move X0, [X0+1448]
	015 Call 0x1C17CF4
	016 Move X0, 0x573000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2769], W8
	021 Move V8, [X19+92]
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move V9, [X19+76]
	024 Move X0, X31
	025 Call Time.get_time
	026 Add S1, S8, S9
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move [X19+92], W31
	029 Move W8, [X19+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X19+56], W31
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+392]
	035 Move X1, [X8+400]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+408]
	040 Move X1, [X8+416]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move V8, V0
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Move W8, [X19+56]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X19
	047 Move V0, V8
	048 Call SnapTurnProviderBase.StartTurn, X0, V0
	049 Move W8, [X19+56]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, 0x573000
	052 Move X8, [X8+1448]
	053 Move V9, [X19+88]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move X0, X19
	061 Call LocomotionProvider.BeginLocomotion, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {153}
	066 Move X8, [X19+48]
	067 Compare X8, 0
	068 JumpIfEqual {159}
	069 Move X9, 0x573000
	070 Move X9, [X9+1432]
	071 Move X20, [X8+48]
	072 Move X0, [X9]
	073 Move W9, [X0+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Move X2, X31
	080 Call Object.op_Inequality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {120}
	085 Compare X20, 0
	086 JumpIfEqual {159}
	087 Move V0, [X19+88]
	088 Move X0, X20
	089 Move X1, X31
	090 Call XROrigin.RotateAroundCameraUsingOriginUp, X0, V0
	091 Move X20, 0x859000
	092 Move W8, [X20+1450]
	093 Move V9, [X19+88]
	094 Compare W8, 0
	095 JumpIfNotEqual {101}
	096 Move X0, 0x57A000
	097 Move X0, [X0+1208]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+1450], W8
	101 Move X8, 0x57A000
	102 Move X8, [X8+1208]
	103 Move X9, -50946048
	104 Move V0, [X9+576]
	105 NotImplemented "Instruction FABS not yet implemented."
	106 Move X8, [X8]
	107 Move S2, W31
	108 NotImplemented "Instruction FMAXNM not yet implemented."
	109 Multiply S0, S1, S0
	110 Move X8, [X8+184]
	111 Move S1, 8
	112 Move V3, [X8]
	113 Multiply S1, S3, S1
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 NotImplemented "Instruction FCSEL not yet implemented."
	116 NotImplemented "Instruction FABD not yet implemented."
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Move W8, [X19+56]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W8, 3
	121 Move [X19+56], W8
	122 Move X0, X19
	123 Move [X19+88], W31
	124 Call LocomotionProvider.EndLocomotion, X0
	125 Move X20, 0x859000
	126 Move W8, [X20+1450]
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0x57A000
	130 Move X0, [X0+1208]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X20+1450], W8
	134 Move X8, 0x57A000
	135 Move X8, [X8+1208]
	136 Move X9, -50946048
	137 Move V0, [X9+576]
	138 NotImplemented "Instruction FABS not yet implemented."
	139 Move X8, [X8]
	140 Move S2, W31
	141 NotImplemented "Instruction FMAXNM not yet implemented."
	142 Multiply S0, S1, S0
	143 Move X8, [X8+184]
	144 Move S1, 8
	145 Move V3, [X8]
	146 Multiply S1, S3, S1
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 NotImplemented "Instruction FCSEL not yet implemented."
	149 NotImplemented "Instruction FABD not yet implemented."
	150 NotImplemented "Instruction FCMP not yet implemented."
	151 Move W8, 3
	152 Move [X19+56], W8
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X30, [X31+16]
	156 Move D9, [X31+48]
	157 Move D8, [X31+56]
	158 Return 
	159 Call 0x1C17F20

Method: UnityEngine.Vector2 ReadInput()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Single GetTurnAmount(UnityEngine.Vector2 input)

Disassembly:
	0x03B81560 MOVZ W8, 0x1
	0x03B81564 STRB W8, [X21 + 0xAD7]
	0x03B81568 MOV X0, X19
	0x03B8156C MOV W1, W20
	0x03B81570 MOV X2, X31
	0x03B81574 BL 0x3B3BC98
	0x03B81578 CMP W20, 0x1
	0x03B8157C B.NE 0x3B81658
	0x03B81580 LDRB W8, [X19 + 0x1DC]
	0x03B81584 CBZ W8, 0x3B81658
	0x03B81588 MOV X0, X19
	0x03B8158C MOV X1, X31
	0x03B81590 BL 0x3B3A698
	0x03B81594 CBZ X0, 0x3B81668
	0x03B81598 LDR W21, [X0 + 0x18]
	0x03B8159C CMP W21, 0x1
	0x03B815A0 B.LT 0x3B815E4
	0x03B815A4 ADRP X22, 0x5D9000
	0x03B815A8 LDR X22, [X22 + 0x158]
	0x03B815AC MOV W20, W31
	0x03B815B0 MOV X0, X19
	0x03B815B4 MOV X1, X31
	0x03B815B8 BL 0x3B3A698
	0x03B815BC CBZ X0, 0x3B81668
	0x03B815C0 LDR X2, [X22]
	0x03B815C4 MOV W1, W20
	0x03B815C8 BL 0x301BCCC
	0x03B815CC MOV X1, X0
	0x03B815D0 MOV X0, X19
	0x03B815D4 BL 0x3B8166C
	0x03B815D8 ADD W20, W20, 0x1
	0x03B815DC CMP W21, W20
	0x03B815E0 B.NE 0x3B815B0
	0x03B815E4 MOV X0, X19
	0x03B815E8 MOV X1, X31
	0x03B815EC BL 0x3B3A784
	0x03B815F0 CBZ X0, 0x3B81668
	0x03B815F4 LDR W22, [X0 + 0x18]
	0x03B815F8 CMP W22, 0x1
	0x03B815FC B.LT 0x3B81658
	0x03B81600 ADRP X23, 0x5D9000
	0x03B81604 LDR X23, [X23 + 0x170]
	0x03B81608 MOV W20, W31
	0x03B8160C MOV X0, X19
	0x03B81610 MOV X1, X31
	0x03B81614 BL 0x3B3A784
	0x03B81618 CBZ X0, 0x3B81668
	0x03B8161C LDR X2, [X23]
	0x03B81620 MOV W1, W20
	0x03B81624 BL 0x301BCCC
	0x03B81628 MOV X21, X0
	0x03B8162C MOV X0, X19
	0x03B81630 MOV X1, X21
	0x03B81634 MOV X2, X31
	0x03B81638 BL 0x3B3B448
	0x03B8163C TBNZ X0, 0x0, 0x3B8164C
	0x03B81640 MOV X0, X19
	0x03B81644 MOV X1, X21
	0x03B81648 BL 0x3B8166C

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x859000
	008 Move W8, [X20+1935]
	009 Move V9, V1
	010 Move V10, V0
	011 Move X19, X0
	012 Compare W8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, 0x57B000
	015 Move X0, [X0+3848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1935], W8
	019 Move X8, 0x57B000
	020 Move X8, [X8+3848]
	021 Move S8, W31
	022 Move X8, [X8]
	023 Move X8, [X8+184]
	024 Move S0, [X8]
	025 Move S1, [X8+4]
	026 Move X8, -50950144
	027 Move V2, [X8+3872]
	028 Subtract S0, S10, S0
	029 Subtract S1, S9, S1
	030 Multiply S0, S0, S0
	031 Multiply S1, S1, S1
	032 Add S0, S0, S1
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move V0, V10
	035 Move V1, V9
	036 Move X0, X31
	037 Call CardinalUtility.GetNearestCardinal, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X19+81]
	042 Compare W8, 0
	043 JumpIfEqual {55}
	044 Move W8, 0x43340000
	045 Move S8, W8
	046 Move W8, [X19+80]
	047 Compare W8, 0
	048 JumpIfEqual {55}
	049 Move V0, [X19+72]
	050 NotImplemented "Instruction FNEG not yet implemented."
	051 Move W8, [X19+80]
	052 Compare W8, 0
	053 JumpIfEqual {55}
	054 Move V8, [X19+72]
	055 Move V0, V8
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+24]
	059 Move D9, [X31+8]
	060 Move D8, [X31+16]
	061 Move V10, [X31+48]
	062 Return V0

Method: System.Void StartTurn(System.Single amount)

Disassembly:
	0x03B81484 ADRP X8, 0x572000
	0x03B81488 LDR X8, [X8 + 0x5A0]
	0x03B8148C LDR X8, [X8]
	0x03B81490 LDR X8, [X8 + 0xB8]
	0x03B81494 LDP S3, S4, [X8 + 0x18]
	0x03B81498 LDR V5, [X8 + 0x20]
	0x03B8149C B 0x3B814CC
	0x03B814A0 LDP S8, S9, [X31]
	0x03B814A4 LDR V10, [X31 + 0x8]
	0x03B814A8 MOV X0, X20
	0x03B814AC MOV X1, X31
	0x03B814B0 BL 0x3C32E90
	0x03B814B4 CBZ X0, 0x3B8150C
	0x03B814B8 MOV X1, X31
	0x03B814BC BL 0x3C3F988
	0x03B814C0 MOV V3.16B, V0.16B
	0x03B814C4 MOV V4.16B, V1.16B
	0x03B814C8 MOV V5.16B, V2.16B
	0x03B814CC MOV V0.16B, V8.16B
	0x03B814D0 MOV V1.16B, V9.16B
	0x03B814D4 MOV V2.16B, V10.16B
	0x03B814D8 MOV X0, X31
	0x03B814DC BL 0x3C2A810
	0x03B814E0 MOVZ W8, 0x2
	0x03B814E4 STP S0, S1, [X19 + 0xC]
	0x03B814E8 STP S2, S3, [X19 + 0x14]
	0x03B814EC STR W8, [X19 + 0x20]
	0x03B814F0 LDP X20, X19, [X31 + 0x40]
	0x03B814F4 LDP X22, X21, [X31 + 0x30]
	0x03B814F8 LDR X30, [X31 + 0x28]
	0x03B814FC LDP D9, D8, [X31 + 0x18]
	0x03B81500 LDR V10, [X31 + 0x10]
	0x03B81504 ADD X31, X31, 0x50
	0x03B81508 RET
	0x03B8150C BL 0x1C16F20
	0x03B81510 STP X30, X23, [X31 - 0x30]!
	0x03B81514 STP X22, X21, [X31 + 0x10]
	0x03B81518 STP X20, X19, [X31 + 0x20]
	0x03B8151C ADRP X21, 0x861000
	0x03B81520 LDRB W8, [X21 + 0xAD7]
	0x03B81524 MOV W20, W1
	0x03B81528 MOV X19, X0
	0x03B8152C TBNZ X8, 0x0, 0x3B81568
	0x03B81530 ADRP X0, 0x5D9000
	0x03B81534 LDR X0, [X0 + 0x168]
	0x03B81538 BL 0x1C16CF4
	0x03B8153C ADRP X0, 0x5D9000
	0x03B81540 LDR X0, [X0 + 0x150]
	0x03B81544 BL 0x1C16CF4
	0x03B81548 ADRP X0, 0x5D9000
	0x03B8154C LDR X0, [X0 + 0x158]
	0x03B81550 BL 0x1C16CF4
	0x03B81554 ADRP X0, 0x5D9000
	0x03B81558 LDR X0, [X0 + 0x170]
	0x03B8155C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x862000
	006 Move W8, [X20+2770]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x573000
	014 Move X0, [X0+1448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2770], W8
	018 Move V0, [X19+92]
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move X0, X19
	021 Call LocomotionProvider.CanBeginLocomotion, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {56}
	026 Move W8, [X19+56]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move W8, 1
	030 Move X0, X31
	031 Move [X19+56], W8
	032 Call Time.get_time
	033 Move [X19+96], S0
	034 Move X8, 0x573000
	035 Move X8, [X8+1448]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move [X19+88], S8
	043 Move V0, [X19+84]
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Move X0, X31
	046 Call Time.get_time
	047 Move V1, [X19+96]
	048 Move V2, [X19+84]
	049 Subtract S0, S0, S1
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move W8, 2
	052 Move X0, X31
	053 Move [X19+56], W8
	054 Call Time.get_time
	055 Move [X19+92], S0
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+8]
	059 Move V8, [X31+32]
	060 Return 

Method: System.Void FakeStartTurn(System.Boolean isLeft)

Disassembly:
	0x03B8164C ADD W20, W20, 0x1
	0x03B81650 CMP W22, W20
	0x03B81654 B.NE 0x3B8160C
	0x03B81658 LDP X20, X19, [X31 + 0x20]
	0x03B8165C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move V0, [X0+72]
	002 And W31, W1, 1
	003 NotImplemented "Instruction FNEG not yet implemented."
	004 NotImplemented "Instruction FCSEL not yet implemented."
	005 Call SnapTurnProviderBase.StartTurn, X0, V0
	006 Return 

Method: System.Void FakeStartTurnAround()

Disassembly:
	0x03B81660 LDP X30, X23, [X31], #0x30
	0x03B81664 RET
	0x03B81668 BL 0x1C16F20
	0x03B8166C STP D13, D12, [X31 - 0x60]!
	0x03B81670 STP D11, D10, [X31 + 0x10]
	0x03B81674 STP D9, D8, [X31 + 0x20]
	0x03B81678 STR X30, [X31 + 0x30]
	0x03B8167C STP X22, X21, [X31 + 0x40]
	0x03B81680 STP X20, X19, [X31 + 0x50]
	0x03B81684 ADRP X20, 0x861000
	0x03B81688 LDRB W8, [X20 + 0xADB]
	0x03B8168C MOV X19, X1
	0x03B81690 MOV X21, X0
	0x03B81694 TBNZ X8, 0x0, 0x3B816B8
	0x03B81698 ADRP X0, 0x5DA000
	0x03B8169C LDR X0, [X0 + 0xE50]
	0x03B816A0 BL 0x1C16CF4
	0x03B816A4 ADRP X0, 0x5D9000
	0x03B816A8 LDR X0, [X0 + 0x2F8]
	0x03B816AC BL 0x1C16CF4
	0x03B816B0 MOVZ W8, 0x1
	0x03B816B4 STRB W8, [X20 + 0xADB]
	0x03B816B8 CBZ X19, 0x3B81A74
	0x03B816BC ADRP X10, 0x5D9000
	0x03B816C0 LDR X8, [X19]
	0x03B816C4 LDR X10, [X10 + 0x2F8]
	0x03B816C8 LDRH W9, [X8 + 0x12E]
	0x03B816CC LDR X1, [X10]
	0x03B816D0 CBZ X9, 0x3B816F4
	0x03B816D4 LDR X10, [X8 + 0xB0]
	0x03B816D8 ADD X10, X10, 0x8
	0x03B816DC LDUR X11, [X10 - 0x8]
	0x03B816E0 CMP X11, X1
	0x03B816E4 B.EQ 0x3B81704
	0x03B816E8 SUBS X9, X9, 0x1
	0x03B816EC ADD X10, X10, 0x10
	0x03B816F0 B.NE 0x3B816DC
	0x03B816F4 MOVZ W2, 0x6
	0x03B816F8 MOV X0, X19
	0x03B816FC BL 0x1C5C788
	0x03B81700 B 0x3B81714
	0x03B81704 LDR W9, [X10]
	0x03B81708 ADD W9, W9, 0x6
	0x03B8170C ADD X8, X8, W9, 0x4, SXTW
	0x03B81710 ADD X0, X8, 0x138
	0x03B81714 LDP X8, X2, [X0]
	0x03B81718 MOV X0, X19
	0x03B8171C MOV X1, X21
	0x03B81720 BLR X8
	0x03B81724 LDR W8, [X21 + 0x1D8]
	0x03B81728 CMP W8, 0x1
	0x03B8172C B.EQ 0x3B81880
	0x03B81730 CBNZ W8, 0x3B819B8
	0x03B81734 CBZ X0, 0x3B81A74
	0x03B81738 LDR X20, [X21 + 0x200]
	0x03B8173C MOV X1, X31
	0x03B81740 BL 0x3C3FA04
	0x03B81744 ADRP X21, 0x857000
	0x03B81748 LDRB W8, [X21 + 0x786]
	0x03B8174C MOV V8.16B, V0.16B
	0x03B81750 MOV V9.16B, V1.16B
	0x03B81754 MOV V10.16B, V2.16B
	0x03B81758 CBNZ W8, 0x3B81770
	0x03B8175C ADRP X0, 0x572000
	0x03B81760 LDR X0, [X0 + 0x5A0]
	0x03B81764 BL 0x1C16CF4
	0x03B81768 MOVZ W8, 0x1
	0x03B8176C STRB W8, [X21 + 0x786]
	0x03B81770 ADRP X21, 0x572000
	0x03B81774 LDR X21, [X21 + 0x5A0]
	0x03B81778 ADRP X22, 0x857000
	0x03B8177C LDRB W9, [X22 + 0xE39]
	0x03B81780 LDR X8, [X21]
	0x03B81784 LDR X8, [X8 + 0xB8]
	0x03B81788 LDP S13, S12, [X8 + 0x18]
	0x03B8178C LDR V11, [X8 + 0x20]
	0x03B81790 CBNZ W9, 0x3B817A8
	0x03B81794 ADRP X0, 0x579000
	0x03B81798 LDR X0, [X0 + 0x4B8]
	0x03B8179C BL 0x1C16CF4
	0x03B817A0 MOVZ W8, 0x1
	0x03B817A4 STRB W8, [X22 + 0xE39]
	0x03B817A8 ADRP X8, 0x579000
	0x03B817AC LDR X8, [X8 + 0x4B8]
	0x03B817B0 FMUL S0, S13, S13
	0x03B817B4 FMUL S1, S12, S12
	0x03B817B8 FADD S0, S0, S1
	0x03B817BC LDR X8, [X8]
	0x03B817C0 FMUL S1, S11, S11
	0x03B817C4 FADD S0, S1, S0
	0x03B817C8 LDR X8, [X8 + 0xB8]
	0x03B817CC LDR V2, [X8]
	0x03B817D0 FCMP S0, S2
	0x03B817D4 B.MI 0x3B81810
	0x03B817D8 FMUL S1, S8, S13
	0x03B817DC FMUL S2, S9, S12
	0x03B817E0 FMUL S3, S10, S11
	0x03B817E4 FADD S1, S1, S2
	0x03B817E8 FADD S1, S3, S1
	0x03B817EC FMUL S2, S13, S1
	0x03B817F0 FMUL S3, S12, S1
	0x03B817F4 FMUL S1, S11, S1
	0x03B817F8 FDIV S2, S2, S0
	0x03B817FC FDIV S3, S3, S0
	0x03B81800 FDIV S0, S1, S0
	0x03B81804 FSUB S8, S8, S2
	0x03B81808 FSUB S9, S9, S3
	0x03B8180C FSUB S10, S10, S0
	0x03B81810 ADRP X22, 0x857000
	0x03B81814 LDRB W8, [X22 + 0x785]
	0x03B81818 CBNZ W8, 0x3B81830
	0x03B8181C ADRP X0, 0x572000
	0x03B81820 LDR X0, [X0 + 0x5A8]
	0x03B81824 BL 0x1C16CF4
	0x03B81828 MOVZ W8, 0x1
	0x03B8182C STRB W8, [X22 + 0x785]
	0x03B81830 ADRP X8, 0x572000
	0x03B81834 LDR X8, [X8 + 0x5A8]
	0x03B81838 LDR X0, [X8]
	0x03B8183C LDR W8, [X0 + 0xE0]
	0x03B81840 CBNZ W8, 0x3B81848
	0x03B81844 BL 0x1C16DFC
	0x03B81848 FMUL S0, S8, S8
	0x03B8184C FMUL S1, S9, S9
	0x03B81850 ADRP X8, 0xFFFFFFFFFCF69000
	0x03B81854 FADD S0, S0, S1
	0x03B81858 LDR V1, [X8 + 0x17C]
	0x03B8185C FMUL S2, S10, S10
	0x03B81860 FADD S0, S2, S0
	0x03B81864 FSQRT S2, S0
	0x03B81868 FCMP S2, S1
	0x03B8186C B.LE 0x3B819D4
	0x03B81870 FDIV S0, S8, S2
	0x03B81874 FDIV S1, S9, S2
	0x03B81878 FDIV S2, S10, S2
	0x03B8187C B 0x3B81A04
	0x03B81880 CBZ X0, 0x3B81A74
	0x03B81884 LDR X20, [X21 + 0x200]
	0x03B81888 MOV X1, X31
	0x03B8188C BL 0x3C3FA04
	0x03B81890 MOV X0, X21
	0x03B81894 MOV X1, X31
	0x03B81898 MOV V8.16B, V0.16B
	0x03B8189C MOV V9.16B, V1.16B
	0x03B818A0 MOV V10.16B, V2.16B
	0x03B818A4 BL 0x3C32E90
	0x03B818A8 CBZ X0, 0x3B81A74
	0x03B818AC MOV X1, X31
	0x03B818B0 BL 0x3C3F988
	0x03B818B4 ADRP X21, 0x857000
	0x03B818B8 LDRB W8, [X21 + 0xE39]
	0x03B818BC MOV V13.16B, V0.16B
	0x03B818C0 MOV V11.16B, V1.16B
	0x03B818C4 MOV V12.16B, V2.16B
	0x03B818C8 CBNZ W8, 0x3B818E0
	0x03B818CC ADRP X0, 0x579000
	0x03B818D0 LDR X0, [X0 + 0x4B8]
	0x03B818D4 BL 0x1C16CF4
	0x03B818D8 MOVZ W8, 0x1
	0x03B818DC STRB W8, [X21 + 0xE39]
	0x03B818E0 ADRP X8, 0x579000
	0x03B818E4 LDR X8, [X8 + 0x4B8]
	0x03B818E8 FMUL S0, S13, S13
	0x03B818EC FMUL S1, S11, S11
	0x03B818F0 FADD S0, S0, S1
	0x03B818F4 LDR X8, [X8]
	0x03B818F8 FMUL S1, S12, S12
	0x03B818FC FADD S0, S1, S0
	0x03B81900 LDR X8, [X8 + 0xB8]
	0x03B81904 LDR V2, [X8]
	0x03B81908 FCMP S0, S2
	0x03B8190C B.MI 0x3B81948
	0x03B81910 FMUL S1, S8, S13
	0x03B81914 FMUL S2, S9, S11
	0x03B81918 FMUL S3, S10, S12
	0x03B8191C FADD S1, S1, S2
	0x03B81920 FADD S1, S3, S1
	0x03B81924 FMUL S2, S13, S1
	0x03B81928 FMUL S3, S11, S1
	0x03B8192C FMUL S1, S12, S1
	0x03B81930 FDIV S2, S2, S0
	0x03B81934 FDIV S3, S3, S0
	0x03B81938 FDIV S0, S1, S0
	0x03B8193C FSUB S8, S8, S2
	0x03B81940 FSUB S9, S9, S3
	0x03B81944 FSUB S10, S10, S0
	0x03B81948 ADRP X21, 0x857000
	0x03B8194C LDRB W8, [X21 + 0x785]
	0x03B81950 CBNZ W8, 0x3B81968
	0x03B81954 ADRP X0, 0x572000
	0x03B81958 LDR X0, [X0 + 0x5A8]
	0x03B8195C BL 0x1C16CF4
	0x03B81960 MOVZ W8, 0x1
	0x03B81964 STRB W8, [X21 + 0x785]
	0x03B81968 ADRP X8, 0x572000
	0x03B8196C LDR X8, [X8 + 0x5A8]
	0x03B81970 LDR X0, [X8]
	0x03B81974 LDR W8, [X0 + 0xE0]
	0x03B81978 CBNZ W8, 0x3B81980
	0x03B8197C BL 0x1C16DFC
	0x03B81980 FMUL S0, S8, S8
	0x03B81984 FMUL S1, S9, S9
	0x03B81988 ADRP X8, 0xFFFFFFFFFCF69000
	0x03B8198C FADD S0, S0, S1
	0x03B81990 LDR V1, [X8 + 0x17C]
	0x03B81994 FMUL S2, S10, S10
	0x03B81998 FADD S0, S2, S0
	0x03B8199C FSQRT S2, S0
	0x03B819A0 FCMP S2, S1
	0x03B819A4 B.LE 0x3B81A38
	0x03B819A8 FDIV S0, S8, S2
	0x03B819AC FDIV S1, S9, S2
	0x03B819B0 FDIV S2, S10, S2
	0x03B819B4 B 0x3B81A70
	0x03B819B8 LDP X20, X19, [X31 + 0x50]
	0x03B819BC LDP X22, X21, [X31 + 0x40]
	0x03B819C0 LDR X30, [X31 + 0x30]
	0x03B819C4 LDP D9, D8, [X31 + 0x20]
	0x03B819C8 LDP D11, D10, [X31 + 0x10]
	0x03B819CC LDP D13, D12, [X31], #0x60
	0x03B819D0 RET
	0x03B819D4 ADRP X22, 0x857000
	0x03B819D8 LDRB W8, [X22 + 0x783]
	0x03B819DC CBNZ W8, 0x3B819F4
	0x03B819E0 ADRP X0, 0x572000
	0x03B819E4 LDR X0, [X0 + 0x5A0]
	0x03B819E8 BL 0x1C16CF4
	0x03B819EC MOVZ W8, 0x1
	0x03B819F0 STRB W8, [X22 + 0x783]
	0x03B819F4 LDR X8, [X21]
	0x03B819F8 LDR X8, [X8 + 0xB8]
	0x03B819FC LDP S0, S1, [X8]
	0x03B81A00 LDR V2, [X8 + 0x8]
	0x03B81A04 CBZ X20, 0x3B81A74
	0x03B81A08 ADRP X8, 0x5DA000
	0x03B81A0C LDR X8, [X8 + 0xE50]
	0x03B81A10 MOV X0, X20
	0x03B81A14 MOV X1, X19
	0x03B81A18 LDP X20, X19, [X31 + 0x50]
	0x03B81A1C LDR X2, [X8]
	0x03B81A20 LDP X22, X21, [X31 + 0x40]
	0x03B81A24 LDR X30, [X31 + 0x30]
	0x03B81A28 LDP D9, D8, [X31 + 0x20]
	0x03B81A2C LDP D11, D10, [X31 + 0x10]
	0x03B81A30 LDP D13, D12, [X31], #0x60
	0x03B81A34 B 0x2AC0ECC
	0x03B81A38 ADRP X21, 0x857000
	0x03B81A3C LDRB W8, [X21 + 0x783]
	0x03B81A40 CBNZ W8, 0x3B81A58
	0x03B81A44 ADRP X0, 0x572000
	0x03B81A48 LDR X0, [X0 + 0x5A0]
	0x03B81A4C BL 0x1C16CF4
	0x03B81A50 MOVZ W8, 0x1
	0x03B81A54 STRB W8, [X21 + 0x783]
	0x03B81A58 ADRP X8, 0x572000
	0x03B81A5C LDR X8, [X8 + 0x5A0]
	0x03B81A60 LDR X8, [X8]
	0x03B81A64 LDR X8, [X8 + 0xB8]
	0x03B81A68 LDP S0, S1, [X8]
	0x03B81A6C LDR V2, [X8 + 0x8]
	0x03B81A70 CBNZ X20, 0x3B81A08
	0x03B81A74 BL 0x1C16F20
	0x03B81A78 STR X30, [X31 - 0x20]!
	0x03B81A7C STP X20, X19, [X31 + 0x10]
	0x03B81A80 LDR W8, [X0 + 0x1E0]
	0x03B81A84 MOV X19, X0
	0x03B81A88 MOV X20, X1
	0x03B81A8C CMP W8, 0x1
	0x03B81A90 B.NE 0x3B81AB0
	0x03B81A94 CBZ X20, 0x3B81AC8
	0x03B81A98 MOV X0, X20
	0x03B81A9C MOV X1, X31
	0x03B81AA0 BL 0x3B6B904
	0x03B81AA4 MOV X1, X0
	0x03B81AA8 MOV X0, X19
	0x03B81AAC BL 0x3B80ED4
	0x03B81AB0 MOV X0, X19
	0x03B81AB4 MOV X1, X20
	0x03B81AB8 LDP X20, X19, [X31 + 0x10]
	0x03B81ABC MOV X2, X31
	0x03B81AC0 LDR X30, [X31], #0x20
	0x03B81AC4 B 0x3B3C940
	0x03B81AC8 BL 0x1C16F20
	0x03B81ACC STR X30, [X31 - 0x20]!
	0x03B81AD0 STP X20, X19, [X31 + 0x10]
	0x03B81AD4 LDR W8, [X0 + 0x1E0]
	0x03B81AD8 MOV X19, X0
	0x03B81ADC MOV X20, X1
	0x03B81AE0 CBNZ W8, 0x3B81B08
	0x03B81AE4 CBZ X20, 0x3B81B20
	0x03B81AE8 LDRB W8, [X20 + 0x28]
	0x03B81AEC CBNZ W8, 0x3B81B08
	0x03B81AF0 MOV X0, X20
	0x03B81AF4 MOV X1, X31
	0x03B81AF8 BL 0x3B6B9E0
	0x03B81AFC MOV X1, X0
	0x03B81B00 MOV X0, X19
	0x03B81B04 BL 0x3B80ED4
	0x03B81B08 MOV X0, X19
	0x03B81B0C MOV X1, X20
	0x03B81B10 LDP X20, X19, [X31 + 0x10]
	0x03B81B14 MOV X2, X31
	0x03B81B18 LDR X30, [X31], #0x20
	0x03B81B1C B 0x3B3CB5C
	0x03B81B20 BL 0x1C16F20
	0x03B81B24 STR X30, [X31 - 0x20]!
	0x03B81B28 STP X20, X19, [X31 + 0x10]
	0x03B81B2C LDR W8, [X0 + 0x1E0]
	0x03B81B30 MOV X19, X0
	0x03B81B34 MOV X20, X1
	0x03B81B38 CMP W8, 0x2
	0x03B81B3C B.NE 0x3B81B5C
	0x03B81B40 CBZ X20, 0x3B81B74
	0x03B81B44 MOV X0, X20
	0x03B81B48 MOV X1, X31
	0x03B81B4C BL 0x3B6BCAC
	0x03B81B50 MOV X1, X0
	0x03B81B54 MOV X0, X19
	0x03B81B58 BL 0x3B80ED4
	0x03B81B5C MOV X0, X19
	0x03B81B60 MOV X1, X20
	0x03B81B64 LDP X20, X19, [X31 + 0x10]
	0x03B81B68 MOV X2, X31
	0x03B81B6C LDR X30, [X31], #0x20
	0x03B81B70 B 0x3B3CEDC
	0x03B81B74 BL 0x1C16F20
	0x03B81B78 STR X30, [X31 - 0x20]!
	0x03B81B7C STP X20, X19, [X31 + 0x10]
	0x03B81B80 LDR W8, [X0 + 0x1E0]
	0x03B81B84 MOV X19, X0
	0x03B81B88 MOV X20, X1
	0x03B81B8C CMP W8, 0x3
	0x03B81B90 B.NE 0x3B81BB0
	0x03B81B94 CBZ X20, 0x3B81BC8
	0x03B81B98 MOV X0, X20
	0x03B81B9C MOV X1, X31
	0x03B81BA0 BL 0x3B6BDE4
	0x03B81BA4 MOV X1, X0
	0x03B81BA8 MOV X0, X19
	0x03B81BAC BL 0x3B80ED4
	0x03B81BB0 MOV X0, X19
	0x03B81BB4 MOV X1, X20
	0x03B81BB8 LDP X20, X19, [X31 + 0x10]
	0x03B81BBC MOV X2, X31
	0x03B81BC0 LDR X30, [X31], #0x20
	0x03B81BC4 B 0x3B3CF5C
	0x03B81BC8 BL 0x1C16F20
	0x03B81BCC SUB X31, X31, 0xA0
	0x03B81BD0 STP D15, D14, [X31 + 0x40]
	0x03B81BD4 STP D13, D12, [X31 + 0x50]
	0x03B81BD8 STP D11, D10, [X31 + 0x60]
	0x03B81BDC STP D9, D8, [X31 + 0x70]
	0x03B81BE0 STP X30, X21, [X31 + 0x80]
	0x03B81BE4 STP X20, X19, [X31 + 0x90]
	0x03B81BE8 ADRP X21, 0x861000
	0x03B81BEC LDRB W8, [X21 + 0xAD8]
	0x03B81BF0 MOV X20, X1
	0x03B81BF4 MOV X19, X0
	0x03B81BF8 TBNZ X8, 0x0, 0x3B81C1C
	0x03B81BFC ADRP X0, 0x572000
	0x03B81C00 LDR X0, [X0 + 0x598]
	0x03B81C04 BL 0x1C16CF4
	0x03B81C08 ADRP X0, 0x5D9000
	0x03B81C0C LDR X0, [X0 + 0x7C0]
	0x03B81C10 BL 0x1C16CF4
	0x03B81C14 MOVZ W8, 0x1
	0x03B81C18 STRB W8, [X21 + 0xAD8]
	0x03B81C1C MOVI V0.2D, 0x0
	0x03B81C20 MOV X0, X19
	0x03B81C24 MOV X1, X20
	0x03B81C28 MOV X2, X31
	0x03B81C2C STUR V0, [X31 + 0x2C]
	0x03B81C30 STP V0, V0, [X31 + 0x10]
	0x03B81C34 STR X31, [X31 + 0x8]
	0x03B81C38 BL 0x3B3B30C
	0x03B81C3C TBZ X0, 0x0, 0x3B81D08
	0x03B81C40 LDRB W8, [X19 + 0x1E4]
	0x03B81C44 CBZ W8, 0x3B81D00
	0x03B81C48 CBZ X20, 0x3B81D00
	0x03B81C4C ADRP X8, 0x5D9000
	0x03B81C50 LDR X8, [X8 + 0x7C0]
	0x03B81C54 LDR X9, [X20]
	0x03B81C58 LDR X8, [X8]
	0x03B81C5C LDRB W11, [X9 + 0x130]
	0x03B81C60 LDRB W10, [X8 + 0x130]
	0x03B81C64 CMP W11, W10
	0x03B81C68 B.CC 0x3B81D00
	0x03B81C6C LDR X9, [X9 + 0xC8]
	0x03B81C70 ADD X9, X9, X10, 0x3, LSL
	0x03B81C74 LDUR X9, [X9 - 0x8]
	0x03B81C78 CMP X9, X8
	0x03B81C7C CSEL X20, X20, X31, EQ
	0x03B81C80 B.NE 0x3B81D00
	0x03B81C84 ADRP X8, 0x572000
	0x03B81C88 LDR X8, [X8 + 0x598]
	0x03B81C8C LDR X0, [X8]
	0x03B81C90 LDR W8, [X0 + 0xE0]
	0x03B81C94 CBNZ W8, 0x3B81C9C
	0x03B81C98 BL 0x1C16DFC
	0x03B81C9C MOV X0, X20
	0x03B81CA0 MOV X1, X31
	0x03B81CA4 MOV X2, X31
	0x03B81CA8 BL 0x3C354F8
	0x03B81CAC TBZ X0, 0x0, 0x3B81D00
	0x03B81CB0 CBZ X20, 0x3B81E48
	0x03B81CB4 ADD X1, X31, 0x10
	0x03B81CB8 MOV X0, X20
	0x03B81CBC MOV X2, X31
	0x03B81CC0 BL 0x3B60908
	0x03B81CC4 TBZ X0, 0x0, 0x3B81D00
	0x03B81CC8 LDR X20, [X19 + 0x38]
	0x03B81CCC ADD X0, X31, 0x10
	0x03B81CD0 MOV X1, X31
	0x03B81CD4 BL 0x3C8E5C0
	0x03B81CD8 CBZ X20, 0x3B81E48
	0x03B81CDC MOV X1, X0
	0x03B81CE0 ADD X2, X31, 0x8
	0x03B81CE4 MOV X0, X20
	0x03B81CE8 MOV X3, X31
	0x03B81CEC BL 0x3B72C1C
	0x03B81CF0 TBZ X0, 0x0, 0x3B81D00
	0x03B81CF4 LDR X8, [X31 + 0x8]
	0x03B81CF8 CMP X8, X19
	0x03B81CFC B.EQ 0x3B81D2C
	0x03B81D00 MOVZ W0, 0x1
	0x03B81D04 B 0x3B81D0C
	0x03B81D08 MOV W0, W31
	0x03B81D0C LDP X20, X19, [X31 + 0x90]
	0x03B81D10 LDP X30, X21, [X31 + 0x80]
	0x03B81D14 LDP D9, D8, [X31 + 0x70]
	0x03B81D18 LDP D11, D10, [X31 + 0x60]
	0x03B81D1C LDP D13, D12, [X31 + 0x50]
	0x03B81D20 LDP D15, D14, [X31 + 0x40]
	0x03B81D24 ADD X31, X31, 0xA0
	0x03B81D28 RET
	0x03B81D2C MOV X0, X19
	0x03B81D30 MOV X1, X31
	0x03B81D34 BL 0x3C32E90
	0x03B81D38 CBZ X0, 0x3B81E48
	0x03B81D3C MOV X1, X31
	0x03B81D40 BL 0x3C3F988
	0x03B81D44 ADD X0, X31, 0x10
	0x03B81D48 MOV X1, X31
	0x03B81D4C MOV V9.16B, V0.16B
	0x03B81D50 MOV V10.16B, V1.16B
	0x03B81D54 MOV V8.16B, V2.16B
	0x03B81D58 BL 0x3C8E678
	0x03B81D5C ADRP X20, 0x857000
	0x03B81D60 LDRB W8, [X20 + 0xA24]
	0x03B81D64 MOV V11.16B, V0.16B
	0x03B81D68 MOV V12.16B, V1.16B
	0x03B81D6C MOV V13.16B, V2.16B
	0x03B81D70 CBNZ W8, 0x3B81D88
	0x03B81D74 ADRP X0, 0x572000
	0x03B81D78 LDR X0, [X0 + 0x5A8]
	0x03B81D7C BL 0x1C16CF4
	0x03B81D80 MOVZ W8, 0x1
	0x03B81D84 STRB W8, [X20 + 0xA24]
	0x03B81D88 ADRP X20, 0x572000
	0x03B81D8C LDR X20, [X20 + 0x5A8]
	0x03B81D90 FMUL S0, S9, S9
	0x03B81D94 FMUL S1, S10, S10
	0x03B81D98 FADD S0, S0, S1
	0x03B81D9C LDR X0, [X20]
	0x03B81DA0 FMUL S1, S8, S8
	0x03B81DA4 FADD S14, S1, S0
	0x03B81DA8 FMUL S0, S11, S11

ISIL:
	001 Move W8, 0x43340000
	002 Move S0, W8
	003 Call SnapTurnProviderBase.StartTurn, X0, V0
	004 Return 
	005 Subtract X31, X31, 208
	006 Move [X31+96], D15
	007 Move [X31+104], D14
	008 Move [X31+112], D13
	009 Move [X31+120], D12
	010 Move [X31+128], D11
	011 Move [X31+136], D10
	012 Move [X31+144], D9
	013 Move [X31+152], D8
	014 Move [X31+160], X30
	015 Move [X31+168], X23
	016 Move [X31+176], X22
	017 Move [X31+184], X21
	018 Move [X31+192], X20
	019 Move [X31+200], X19
	020 Move [X31+88], S5
	021 Move [X31+96], S1
	022 Move [X31+16], S3
	023 Move S3, [X2]
	024 Move S1, [X2+4]
	025 Move [X31+44], S2
	026 Move V2, [X2+8]
	027 Move V8, [X1]
	028 Move V9, [X1+8]
	029 Move V11, [X0]
	030 Move V12, [X0+8]
	031 Move [X31+84], S0
	032 Move V0, V3
	033 Move X0, X31
	034 Move X19, X3
	035 Move V10, V4
	036 Move X20, X2
	037 Call float3.op_Implicit, X0
	038 Move X21, 0x861000
	039 Move W8, [X21+1413]
	040 Move [X31+76], S1
	041 Move [X31+84], S0
	042 Move [X31+72], S2
	043 Compare W8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, 0x573000
	046 Move X0, [X0+1448]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1413], W8
	050 Move [X31+20], S10
	051 Move X22, 0x573000
	052 Move X22, [X22+1448]
	053 Move X0, [X22]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move S0, [X20]
	059 Move S1, [X20+4]
	060 Move V2, [X20+8]
	061 Move X0, X31
	062 Call float3.op_Implicit, X0
	063 Move W8, [X21+1413]
	064 Move V10, V0
	065 Move V13, V1
	066 Move V15, V2
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x573000
	070 Move X0, [X0+1448]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X21+1413], W8
	074 Move X0, [X22]
	075 Subtract V0, V8, V11
	076 Subtract S8, S9, S12
	077 Move [X31+3], V0
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move V0, [X31+3]
	083 Multiply S1, S10, S10
	084 Multiply S2, S13, S13
	085 Multiply S4, S15, S15
	086 Add S1, S1, S2
	087 Add S1, S4, S1
	088 Move S3, 1
	089 NotImplemented "Instruction FSQRT not yet implemented."
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Move S1, V0.S[1]
	092 Move V2, V8
	093 Move X0, X31
	094 Move [X31+24], S8
	095 Move [X31+32], S1
	096 Call float3.op_Implicit, X0
	097 Move W8, [X21+1413]
	098 Move V8, V0
	099 Move V9, V1
	100 Move V11, V2
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0x573000
	104 Move X0, [X0+1448]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X21+1413], W8
	108 Move X0, [X22]
	109 Multiply S14, S10, S12
	110 Multiply S13, S13, S12
	111 Multiply S10, S15, S12
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Multiply S1, S8, S8
	117 Multiply S2, S9, S9
	118 Multiply S0, S11, S11
	119 Add S1, S1, S2
	120 Add S0, S0, S1
	121 Move S3, 1
	122 NotImplemented "Instruction FSQRT not yet implemented."
	123 NotImplemented "Instruction FDIV not yet implemented."
	124 Multiply S12, S8, S0
	125 Multiply S8, S9, S0
	126 Multiply S15, S11, S0
	127 Move V0, V14
	128 Move V1, V13
	129 Move V2, V10
	130 Move X0, X31
	131 Move [X31+4], S14
	132 Move [X31+12], S13
	133 Move [X31+12], S10
	134 Call float3.op_Implicit, X0
	135 Move V11, V0
	136 Move V9, V1
	137 Move V10, V2
	138 Move V0, V12
	139 Move V1, V8
	140 Move V2, V15
	141 Move X0, X31
	142 Move [X31+32], S12
	143 Move [X31+40], S15
	144 Move [X31+40], S8
	145 Call float3.op_Implicit, X0
	146 Move X23, 0x858000
	147 Move W8, [X23+2596]
	148 Move V8, V0
	149 Move V14, V1
	150 Move V13, V2
	151 Compare W8, 0
	152 JumpIfNotEqual {158}
	153 Move X0, 0x573000
	154 Move X0, [X0+1448]
	155 Call 0x1C17CF4
	156 Move W8, 1
	157 Move [X23+2596], W8
	158 Move X0, [X22]
	159 Multiply S0, S11, S11
	160 Multiply S1, S9, S9
	161 Add S0, S0, S1
	162 Multiply S1, S10, S10
	163 Move W8, [X0+224]
	164 Add S15, S1, S0
	165 Multiply S0, S8, S8
	166 Multiply S1, S14, S14
	167 Add S0, S0, S1
	168 Multiply S1, S13, S13
	169 Move V12, V10
	170 Add S10, S1, S0
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X8, -50950144
	175 Move V1, [X8+4072]
	176 Multiply S0, S15, S10
	177 NotImplemented "Instruction FSQRT not yet implemented."
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 Move S1, W31
	180 Move X0, [X22]
	181 Multiply S1, S11, S8
	182 Multiply S2, S9, S14
	183 Multiply S3, S12, S13
	184 Add S1, S1, S2
	185 Add S1, S3, S1
	186 Move W8, [X0+224]
	187 NotImplemented "Instruction FDIV not yet implemented."
	188 Move S1, 1
	189 Move S2, -1
	190 NotImplemented "Instruction FMIN not yet implemented."
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 NotImplemented "Instruction FCSEL not yet implemented."
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 NotImplemented "Instruction FCVT not yet implemented."
	197 Call 0x3EB2B80
	198 Move X8, -50946048
	199 Move V1, [X8+1096]
	200 NotImplemented "Instruction INVALID not yet implemented."
	201 Multiply S1, S0, S1
	202 Move V0, [X31+92]
	203 NotImplemented "Instruction FCMP not yet implemented."
	204 Move W8, [X20+8]
	205 Move X9, [X20]
	206 Move [X19+8], W8
	207 Move [X19], X9
	208 Move S1, [X31+76]
	209 Move S0, [X31+80]
	210 Move V2, [X31+72]
	211 Move S10, [X31+84]
	212 Move S9, [X31+88]
	213 Multiply S0, S0, S0
	214 Multiply S1, S1, S1
	215 Multiply S2, S2, S2
	216 Add S0, S0, S1
	217 Add S0, S2, S0
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 NotImplemented "Instruction FSQRT not yet implemented."
	220 Move S0, [X31+32]
	221 Move S2, [X31+36]
	222 Move V1, [X31+40]
	223 Move X0, X31
	224 Multiply S0, S11, S0
	225 Multiply S1, S11, S1
	226 Multiply S2, S11, S2
	227 Call float3.op_Implicit, X0
	228 Move [X19], S0
	229 Move [X19+8], S1
	230 Move [X19+8], S2
	231 Move X20, [X31+192]
	232 Move X19, [X31+200]
	233 Move X22, [X31+176]
	234 Move X21, [X31+184]
	235 Move X30, [X31+160]
	236 Move X23, [X31+168]
	237 Move D9, [X31+144]
	238 Move D8, [X31+152]
	239 Move D11, [X31+128]
	240 Move D10, [X31+136]
	241 Move D13, [X31+112]
	242 Move D12, [X31+120]
	243 Move D15, [X31+96]
	244 Move D14, [X31+104]
	245 Add X31, X31, 208
	246 Return 
	247 Move V0, [X31+44]
	248 NotImplemented "Instruction FCMP not yet implemented."
	249 Move S2, [X31+24]
	250 Move S13, [X31+28]
	251 Move V0, [X31+3]
	252 Move X0, X31
	253 Move V1, V13
	254 Call float3.op_Implicit, X0
	255 Move W8, [X21+1413]
	256 Move V14, V0
	257 Move V12, V2
	258 Compare W8, 0
	259 JumpIfNotEqual {265}
	260 Move X0, 0x573000
	261 Move X0, [X0+1448]
	262 Call 0x1C17CF4
	263 Move W8, 1
	264 Move [X21+1413], W8
	265 Move X0, [X22]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Multiply S1, S14, S14
	271 Move S2, W31
	272 Multiply S0, S12, S12
	273 Add S1, S1, S2
	274 Add S0, S0, S1
	275 NotImplemented "Instruction FSQRT not yet implemented."
	276 NotImplemented "Instruction FCMP not yet implemented."
	277 Move W8, [X21+1413]
	278 Move S0, 0.5
	279 Move [X31+92], S12
	280 Multiply S12, S10, S0
	281 Multiply S0, S8, S8
	282 Multiply S9, S12, S0
	283 Subtract S10, S8, S13
	284 Compare W8, 0
	285 JumpIfNotEqual {291}
	286 Move X0, 0x573000
	287 Move X0, [X0+1448]
	288 Call 0x1C17CF4
	289 Move W8, 1
	290 Move [X21+1413], W8
	291 Move X0, [X22]
	292 NotImplemented "Instruction FDIV not yet implemented."
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 NotImplemented "Instruction FCMP not yet implemented."
	298 NotImplemented "Instruction FSQRT not yet implemented."
	299 Move W8, [X21+1413]
	300 Multiply S0, S12, S8
	301 Multiply S10, S8, S0
	302 NotImplemented "Instruction FNEG not yet implemented."
	303 Compare W8, 0
	304 JumpIfNotEqual {310}
	305 Move X0, 0x573000
	306 Move X0, [X0+1448]
	307 Call 0x1C17CF4
	308 Move W8, 1
	309 Move [X21+1413], W8
	310 Move X0, [X22]
	311 NotImplemented "Instruction FDIV not yet implemented."
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 NotImplemented "Instruction FSQRT not yet implemented."
	317 Move S12, W31
	318 Add S10, S9, S9
	319 NotImplemented "Instruction FDIV not yet implemented."
	320 Multiply S1, S12, S0
	321 Multiply S0, S0, S1
	322 Add S0, S13, S0
	323 Multiply S0, S10, S0
	324 NotImplemented "Instruction FDIV not yet implemented."
	325 Move W8, [X21+1413]
	326 Compare W8, 0
	327 JumpIfNotEqual {333}
	328 Move X0, 0x573000
	329 Move X0, [X0+1448]
	330 Call 0x1C17CF4
	331 Move W8, 1
	332 Move [X21+1413], W8
	333 Move X0, [X22]
	334 Move W8, [X0+224]
	335 Compare W8, 0
	336 JumpIfEqual {340}
	337 Multiply S0, S9, S9
	338 Add S0, S0, S0
	339 NotImplemented "Instruction FSQRT not yet implemented."
	340 Call 0x1C17DFC
	341 Move W8, [X21+1413]
	342 Multiply S0, S9, S9
	343 Add S0, S0, S0
	344 NotImplemented "Instruction FSQRT not yet implemented."
	345 Compare W8, 0
	346 JumpIfNotEqual {352}
	347 Move X0, 0x573000
	348 Move X0, [X0+1448]
	349 Call 0x1C17CF4
	350 Move W8, 1
	351 Move [X21+1413], W8
	352 Move X0, [X22]
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfEqual {357}
	356 Move W8, W31
	357 Call 0x1C17DFC
	358 Move W8, [X21+1413]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 NotImplemented "Instruction CSET not yet implemented."
	361 Multiply S0, S10, S10
	362 Multiply S1, S12, S12
	363 Move V3, [X20+4]
	364 Add S0, S0, S1
	365 NotImplemented "Instruction FSQRT not yet implemented."
	366 Move S4, 0.25
	367 NotImplemented "Instruction FABD not yet implemented."
	368 Multiply S1, S0, S4
	369 NotImplemented "Instruction FCMP not yet implemented."
	370 NotImplemented "Instruction FABD not yet implemented."
	371 NotImplemented "Instruction FCSEL not yet implemented."
	372 NotImplemented "Instruction FCMP not yet implemented."
	373 NotImplemented "Instruction FCSEL not yet implemented."
	374 NotImplemented "Instruction FCSEL not yet implemented."
	375 Compare W8, 0
	376 JumpIfEqual {382}
	377 Move X0, 0x573000
	378 Move X0, [X0+1448]
	379 Call 0x1C17CF4
	380 Move W8, 1
	381 Move [X21+1413], W8
	382 Move X0, [X22]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfEqual {387}
	386 Move W8, W31
	387 Call 0x1C17DFC
	388 Move W8, [X21+1413]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 NotImplemented "Instruction CSET not yet implemented."
	391 Multiply S0, S10, S10
	392 Multiply S1, S9, S9
	393 Add S12, S0, S1
	394 Compare W8, 0
	395 JumpIfEqual {401}
	396 Move X0, 0x573000
	397 Move X0, [X0+1448]
	398 Call 0x1C17CF4
	399 Move W8, 1
	400 Move [X21+1413], W8
	401 Move X0, [X22]
	402 NotImplemented "Instruction FSQRT not yet implemented."
	403 Move S13, 1
	404 Move W8, [X0+224]
	405 Compare W8, 0
	406 JumpIfEqual {408}
	407 Move W8, W31
	408 Call 0x1C17DFC
	409 Move W8, [X21+1413]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 NotImplemented "Instruction CSET not yet implemented."
	412 Move V0, [X31+16]
	413 Move W10, 0x7F800000
	414 NotImplemented "Instruction FDIV not yet implemented."
	415 Multiply S0, S11, S0
	416 Move W9, S0
	417 And W9, W9, 0x7FFFFFFF
	418 NotImplemented "Instruction FCMP not yet implemented."
	419 NotImplemented "Instruction CCMP not yet implemented."
	420 NotImplemented "Instruction FCSEL not yet implemented."
	421 Compare W8, 0
	422 JumpIfEqual {428}
	423 Move X0, 0x573000
	424 Move X0, [X0+1448]
	425 Call 0x1C17CF4
	426 Move W8, 1
	427 Move [X21+1413], W8
	428 Move X0, [X22]
	429 Multiply S10, S10, S13
	430 Move W8, [X0+224]
	431 Compare W8, 0
	432 JumpIfNotEqual {434}
	433 Call 0x1C17DFC
	434 Move V1, [X31+92]
	435 Move S0, 1
	436 NotImplemented "Instruction FDIV not yet implemented."
	437 Multiply S14, S14, S0
	438 Multiply S8, S1, S0
	439 Move S0, [X31+4]
	440 Move S1, [X31+8]
	441 Move V2, [X31+12]
	442 Move X0, X31
	443 Multiply S13, S9, S13
	444 Multiply S15, S10, S12
	445 Call float3.op_Implicit, X0
	446 Move W8, [X21+1413]
	447 Move V9, V1
	448 Move V10, V2
	449 Move [X31+92], S0
	450 Compare W8, 0
	451 JumpIfNotEqual {457}
	452 Move X0, 0x573000
	453 Move X0, [X0+1448]
	454 Call 0x1C17CF4
	455 Move W8, 1
	456 Move [X21+1413], W8
	457 Move X0, [X22]
	458 Multiply S13, S13, S12
	459 Multiply S14, S14, S15
	460 Multiply S8, S8, S15
	461 Move W8, [X0+224]
	462 Compare W8, 0
	463 JumpIfNotEqual {465}
	464 Call 0x1C17DFC
	465 Multiply S1, S14, S14
	466 Multiply S2, S13, S13
	467 Multiply S0, S8, S8
	468 Add S1, S2, S1
	469 Add S0, S0, S1
	470 Move S3, 1
	471 NotImplemented "Instruction FSQRT not yet implemented."
	472 NotImplemented "Instruction FDIV not yet implemented."
	473 Multiply S0, S14, S2
	474 Multiply S1, S13, S2
	475 Multiply S2, S8, S2
	476 Move X0, X31
	477 Call float3.op_Implicit, X0
	478 Move V13, [X31+20]
	479 Move V3, V0
	480 Move V0, [X31+92]
	481 Move V4, V1
	482 Move V5, V2
	483 Move V1, V9
	484 Move V2, V10
	485 Move V6, V13
	486 Move X0, X31
	487 Call Vector3.Slerp, X0, X1, V0
	488 Move W8, [X21+1413]
	489 Move V8, V0
	490 Move V9, V1
	491 Move V10, V2
	492 Compare W8, 0
	493 JumpIfNotEqual {499}
	494 Move X0, 0x573000
	495 Move X0, [X0+1448]
	496 Call 0x1C17CF4
	497 Move W8, 1
	498 Move [X21+1413], W8
	499 Move X0, [X22]
	500 Move W8, [X0+224]
	501 Compare W8, 0
	502 JumpIfNotEqual {504}
	503 Call 0x1C17DFC
	504 Subtract S0, S12, S11
	505 Multiply S0, S0, S13
	506 Add S0, S11, S0
	507 Multiply S1, S0, S8
	508 Multiply S2, S0, S9
	509 Multiply S0, S0, S10
	510 Move [X19], S1
	511 Move [X19+8], S2
	512 Move [X19+8], S0

Method: System.Void .ctor()

Disassembly:
	0x03B80CA0 MOV X0, X31
	0x03B80CA4 FMUL S13, S9, S13
	0x03B80CA8 FMUL S15, S10, S12
	0x03B80CAC BL 0x3887BE0
	0x03B80CB0 LDRB W8, [X21 + 0x585]
	0x03B80CB4 MOV V9.16B, V1.16B
	0x03B80CB8 MOV V10.16B, V2.16B

ISIL:
	001 Move X8, -50929664
	002 Move V0, [X8+1696]
	003 Move W8, 257
	004 Move X1, X31
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Move [X0+72], D0
	007 Call MonoBehaviour..ctor, X0
	008 Return 

