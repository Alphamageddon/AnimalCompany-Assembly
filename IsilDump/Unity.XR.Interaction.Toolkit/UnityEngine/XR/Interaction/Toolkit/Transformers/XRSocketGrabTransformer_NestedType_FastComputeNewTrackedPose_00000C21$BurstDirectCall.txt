Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRSocketGrabTransformer/FastComputeNewTrackedPose_00000C21$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03BB27B8 STR W1, [X0 + 0x10]
	0x03BB27BC RET
	0x03BB27C0 LDR V0, [X0 + 0x14]
	0x03BB27C4 RET
	0x03BB27C8 STR S0, [X0 + 0x14]
	0x03BB27CC RET
	0x03BB27D0 LDRB W0, [X0 + 0x18]
	0x03BB27D4 RET
	0x03BB27D8 AND W8, W1, 0x1
	0x03BB27DC STRB W8, [X0 + 0x18]
	0x03BB27E0 RET
	0x03BB27E4 LDR V0, [X0 + 0x1C]
	0x03BB27E8 RET
	0x03BB27EC STR S0, [X0 + 0x1C]
	0x03BB27F0 RET
	0x03BB27F4 ADRP X8, 0xFFFFFFFFFCF38000
	0x03BB27F8 LDR V0, [X0 + 0x1C]
	0x03BB27FC LDR V1, [X8 + 0x104]
	0x03BB2800 FMUL S0, S0, S1
	0x03BB2804 B 0x3EB1BD0
	0x03BB2808 MOVZ W8, 0x3
	0x03BB280C MOVZ W9, 0x1
	0x03BB2810 MOVZ W10, 0x42340000
	0x03BB2814 MOV X1, X31
	0x03BB2818 STR W8, [X0 + 0x10]
	0x03BB281C STRB W9, [X0 + 0x18]
	0x03BB2820 STR W10, [X0 + 0x1C]
	0x03BB2824 B 0x33BDD8C
	0x03BB2828 STP X30, X21, [X31 - 0x20]!
	0x03BB282C STP X20, X19, [X31 + 0x10]
	0x03BB2830 ADRP X20, 0x830000
	0x03BB2834 ADRP X21, 0x5AA000
	0x03BB2838 LDRB W8, [X20 + 0xCDB]
	0x03BB283C LDR X21, [X21 + 0xF50]
	0x03BB2840 MOV X19, X0
	0x03BB2844 TBNZ X8, 0x0, 0x3BB285C
	0x03BB2848 ADRP X0, 0x5AA000
	0x03BB284C LDR X0, [X0 + 0xF50]
	0x03BB2850 BL 0x1C16CF4
	0x03BB2854 MOVZ W8, 0x1
	0x03BB2858 STRB W8, [X20 + 0xCDB]
	0x03BB285C LDR X1, [X21]
	0x03BB2860 MOV X0, X19
	0x03BB2864 LDP X20, X19, [X31 + 0x10]
	0x03BB2868 LDP X30, X21, [X31], #0x20
	0x03BB286C B 0x29AE60C
	0x03BB2870 STR X30, [X31 - 0x30]!
	0x03BB2874 STP X22, X21, [X31 + 0x10]
	0x03BB2878 STP X20, X19, [X31 + 0x20]
	0x03BB287C ADRP X21, 0x830000
	0x03BB2880 ADRP X22, 0x5AA000
	0x03BB2884 LDRB W8, [X21 + 0xCDC]
	0x03BB2888 LDR X22, [X22 + 0xF58]
	0x03BB288C MOV X19, X1
	0x03BB2890 MOV X20, X0
	0x03BB2894 TBNZ X8, 0x0, 0x3BB28AC
	0x03BB2898 ADRP X0, 0x5AA000
	0x03BB289C LDR X0, [X0 + 0xF58]
	0x03BB28A0 BL 0x1C16CF4
	0x03BB28A4 MOVZ W8, 0x1
	0x03BB28A8 STRB W8, [X21 + 0xCDC]
	0x03BB28AC LDR X2, [X22]
	0x03BB28B0 MOV X0, X20
	0x03BB28B4 MOV X1, X19
	0x03BB28B8 LDP X20, X19, [X31 + 0x20]
	0x03BB28BC LDP X22, X21, [X31 + 0x10]
	0x03BB28C0 LDR X30, [X31], #0x30
	0x03BB28C4 B 0x29AD964
	0x03BB28C8 STR X30, [X31 - 0x30]!
	0x03BB28CC STP X22, X21, [X31 + 0x10]
	0x03BB28D0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x831000
	008 Move X23, 0x5AB000
	009 Move W8, [X20+3274]
	010 Move X23, [X23+3776]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x56A000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5AB000
	020 Move X0, [X0+3776]
	021 Call 0x1C17CF4
	022 Move X0, 0x5AB000
	023 Move X0, [X0+3824]
	024 Call 0x1C17CF4
	025 Move X0, 0x5AB000
	026 Move X0, [X0+3832]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3274], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x56A000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5AB000
	053 Move X8, [X8+3832]
	054 Move X21, [X8]
	055 Move X8, 0x5AB000
	056 Move X8, [X8+3824]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03BB28D4 ADRP X21, 0x830000
	0x03BB28D8 ADRP X22, 0x5AA000
	0x03BB28DC LDRB W8, [X21 + 0xCDD]
	0x03BB28E0 LDR X22, [X22 + 0xF60]
	0x03BB28E4 MOV X19, X1
	0x03BB28E8 MOV X20, X0
	0x03BB28EC TBNZ X8, 0x0, 0x3BB2904
	0x03BB28F0 ADRP X0, 0x5AA000
	0x03BB28F4 LDR X0, [X0 + 0xF60]
	0x03BB28F8 BL 0x1C16CF4
	0x03BB28FC MOVZ W8, 0x1
	0x03BB2900 STRB W8, [X21 + 0xCDD]
	0x03BB2904 LDR X2, [X22]
	0x03BB2908 MOV X0, X20
	0x03BB290C MOV X1, X19
	0x03BB2910 LDP X20, X19, [X31 + 0x20]
	0x03BB2914 LDP X22, X21, [X31 + 0x10]
	0x03BB2918 LDR X30, [X31], #0x30
	0x03BB291C B 0x29AD994
	0x03BB2920 LDR X0, [X0 + 0x20]
	0x03BB2924 RET
	0x03BB2928 STR X1, [X0 + 0x20]
	0x03BB292C B 0x3BB2930

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x831000
	005 Move X19, 0x5AB000
	006 Move W8, [X20+3275]
	007 Move X19, [X19+3776]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5AB000
	013 Move X0, [X0+3776]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3275], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call FastComputeNewTrackedPose_00000C21$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03BB2930 STP X30, X23, [X31 - 0x30]!
	0x03BB2934 STP X22, X21, [X31 + 0x10]
	0x03BB2938 STP X20, X19, [X31 + 0x20]
	0x03BB293C ADRP X20, 0x830000
	0x03BB2940 LDRB W8, [X20 + 0xCE8]
	0x03BB2944 MOV X19, X0
	0x03BB2948 TBNZ X8, 0x0, 0x3BB2978
	0x03BB294C ADRP X0, 0x5AA000
	0x03BB2950 LDR X0, [X0 + 0xF68]
	0x03BB2954 BL 0x1C16CF4
	0x03BB2958 ADRP X0, 0x541000
	0x03BB295C LDR X0, [X0 + 0x598]
	0x03BB2960 BL 0x1C16CF4
	0x03BB2964 ADRP X0, 0x5AA000
	0x03BB2968 LDR X0, [X0 + 0x9F8]
	0x03BB296C BL 0x1C16CF4
	0x03BB2970 MOVZ W8, 0x1
	0x03BB2974 STRB W8, [X20 + 0xCE8]
	0x03BB2978 LDR X8, [X19 + 0x38]
	0x03BB297C CBNZ X8, 0x3BB299C
	0x03BB2980 ADRP X8, 0x5AA000
	0x03BB2984 LDR X8, [X8 + 0x9F8]
	0x03BB2988 LDR X0, [X8]
	0x03BB298C BL 0x1C16F10
	0x03BB2990 MOV X20, X0
	0x03BB2994 BL 0x3BB45B4
	0x03BB2998 STR X20, [X19 + 0x38]
	0x03BB299C MOV X0, X19
	0x03BB29A0 BL 0x3BB2D10
	0x03BB29A4 MOV X21, X0
	0x03BB29A8 MOV X0, X19
	0x03BB29AC BL 0x3BB2DA4
	0x03BB29B0 LDR X8, [X19 + 0x30]
	0x03BB29B4 CBZ X8, 0x3BB2A80
	0x03BB29B8 ADRP X9, 0x5AA000
	0x03BB29BC LDR X9, [X9 + 0xF68]
	0x03BB29C0 ADRP X23, 0x541000
	0x03BB29C4 MOV X20, X0
	0x03BB29C8 MOV X0, X8
	0x03BB29CC LDR X1, [X9]
	0x03BB29D0 LDR X23, [X23 + 0x598]
	0x03BB29D4 BL 0x29AD9C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x831000
	006 Move X19, 0x5AB000
	007 Move X20, 0x56A000
	008 Move W8, [X21+3276]
	009 Move X19, [X19+3840]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x56A000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5AB000
	019 Move X0, [X0+3776]
	020 Call 0x1C17CF4
	021 Move X0, 0x5AB000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3276], W8
	026 Move X0, [X20]
	027 Move X20, 0x5AB000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+3776]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03BB29D8 LDR X8, [X23]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BB29DC MOV X22, X0

ISIL:
	001 Call FastComputeNewTrackedPose_00000C21$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 interactorAttachPos, in Unity.Mathematics.quaternion interactorAttachRot, in Unity.Mathematics.float3 positionOffset, in Unity.Mathematics.quaternion interactableRot, in Unity.Mathematics.quaternion interactableAttachRot, out Unity.Mathematics.float3 targetPos, out Unity.Mathematics.quaternion targetRot)

Disassembly:
	0x03BB19FC LDRB W21, [X2 + 0x52]
	0x03BB1A00 STR X0, [X0 + 0x40]
	0x03BB1A04 MOV X0, X2
	0x03BB1A08 BL 0x1C16D84
	0x03BB1A0C TBZ X0, 0x0, 0x3BB1A24
	0x03BB1A10 CMP W21, 0x3
	0x03BB1A14 B.NE 0x3BB1A40
	0x03BB1A18 ADRP X8, 0xFFFFFFFFFE04F000
	0x03BB1A1C ADD X8, X8, 0x994
	0x03BB1A20 B 0x3BB1A34
	0x03BB1A24 CMP W21, 0x2
	0x03BB1A28 B.NE 0x3BB1A3C
	0x03BB1A2C ADRP X8, 0xFFFFFFFFFE04F000
	0x03BB1A30 ADD X8, X8, 0x980
	0x03BB1A34 STR X8, [X19 + 0x18]
	0x03BB1A38 B 0x3BB1A50
	0x03BB1A3C CBZ X20, 0x3BB1A68
	0x03BB1A40 LDR X8, [X19 + 0x10]
	0x03BB1A44 LDR X9, [X19 + 0x20]
	0x03BB1A48 STR X8, [X19 + 0x18]
	0x03BB1A4C STR X9, [X19 + 0x40]
	0x03BB1A50 ADRP X8, 0xFFFFFFFFFE04F000
	0x03BB1A54 ADD X8, X8, 0x90C
	0x03BB1A58 STR X8, [X19 + 0x38]
	0x03BB1A5C LDP X20, X19, [X31 + 0x10]
	0x03BB1A60 LDP X30, X21, [X31], #0x20
	0x03BB1A64 RET
	0x03BB1A68 ADRP X1, 0xFFFFFFFFFCF6A000
	0x03BB1A6C ADD X1, X1, 0xEE3
	0x03BB1A70 MOV X0, X31
	0x03BB1A74 BL 0x1C16F3C
	0x03BB1A78 MOV X1, X31
	0x03BB1A7C BL 0x1C16DEC
	0x03BB1A80 LDR X8, [X0 + 0x40]
	0x03BB1A84 LDR X4, [X0 + 0x18]
	0x03BB1A88 LDR X3, [X0 + 0x28]
	0x03BB1A8C MOV X0, X8
	0x03BB1A90 BR X4
	0x03BB1A94 SUB X31, X31, 0x70
	0x03BB1A98 STR X30, [X31 + 0x20]
	0x03BB1A9C STP X26, X25, [X31 + 0x30]
	0x03BB1AA0 STP X24, X23, [X31 + 0x40]
	0x03BB1AA4 STP X22, X21, [X31 + 0x50]
	0x03BB1AA8 STP X20, X19, [X31 + 0x60]
	0x03BB1AAC ADRP X26, 0x831000
	0x03BB1AB0 STR S0, [X31 + 0x2C]
	0x03BB1AB4 ADRP X25, 0x56D000
	0x03BB1AB8 ADRP X24, 0x542000
	0x03BB1ABC LDRB W8, [X26 + 0xCCE]
	0x03BB1AC0 LDR X25, [X25 + 0x838]
	0x03BB1AC4 LDR X24, [X24 + 0xA90]
	0x03BB1AC8 MOV X19, X4
	0x03BB1ACC MOV X20, X3
	0x03BB1AD0 MOV X22, X2
	0x03BB1AD4 MOV X23, X1
	0x03BB1AD8 MOV X21, X0
	0x03BB1ADC TBNZ X8, 0x0, 0x3BB1B00
	0x03BB1AE0 ADRP X0, 0x542000
	0x03BB1AE4 LDR X0, [X0 + 0xA90]
	0x03BB1AE8 BL 0x1C16CF4
	0x03BB1AEC ADRP X0, 0x56D000
	0x03BB1AF0 LDR X0, [X0 + 0x838]
	0x03BB1AF4 BL 0x1C16CF4
	0x03BB1AF8 MOVZ W8, 0x1
	0x03BB1AFC STRB W8, [X26 + 0xCCE]
	0x03BB1B00 LDR X0, [X25]
	0x03BB1B04 MOV X1, X23
	0x03BB1B08 STP X31, X31, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x832000
	012 Move X27, 0x56B000
	013 Move W8, [X26+3277]
	014 Move X27, [X27+2120]
	015 Move X19, X6
	016 Move X20, X5
	017 Move X21, X4
	018 Move X22, X3
	019 Move X23, X2
	020 Move X24, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x56B000
	027 Move X0, [X0+2120]
	028 Call 0x1C17CF4
	029 Move X0, 0x5AC000
	030 Move X0, [X0+3776]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+3277], W8
	034 Move X0, [X27]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X31
	040 Call BurstCompiler.get_IsEnabled
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {74}
	045 Move X8, 0x5AC000
	046 Move X8, [X8+3776]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call FastComputeNewTrackedPose_00000C21$BurstDirectCall.GetFunctionPointer
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X7, X0
	056 Move X0, X25
	057 Move X1, X24
	058 Move X2, X23
	059 Move X3, X22
	060 Move X4, X21
	061 Move X5, X20
	062 Move X6, X19
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Move X27, [X31+88]
	073 CallNoReturn X7
	074 Move X0, X25
	075 Move X1, X24
	076 Move X2, X23
	077 Move X3, X22
	078 Move X4, X21
	079 Move X5, X20
	080 Move X6, X19
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X26, [X31+16]
	088 Move X25, [X31+24]
	089 Move X7, X31
	090 Move X30, [X31+80]
	091 Move X27, [X31+88]
	092 Call 0x3BCA044
	093 Return 

