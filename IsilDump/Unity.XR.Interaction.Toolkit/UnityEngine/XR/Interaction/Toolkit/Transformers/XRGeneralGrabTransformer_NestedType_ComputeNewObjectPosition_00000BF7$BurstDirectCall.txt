Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRGeneralGrabTransformer/ComputeNewObjectPosition_00000BF7$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03BAE588 SUB X31, X31, 0x60
	0x03BAE58C STP X30, X21, [X31 + 0x40]
	0x03BAE590 STP X20, X19, [X31 + 0x50]
	0x03BAE594 ADRP X21, 0x834000
	0x03BAE598 LDRB W8, [X21 + 0xCB3]
	0x03BAE59C MOV X20, X1
	0x03BAE5A0 MOV X19, X0
	0x03BAE5A4 TBNZ X8, 0x0, 0x3BAE5C8
	0x03BAE5A8 ADRP X0, 0x5AC000
	0x03BAE5AC LDR X0, [X0 + 0x168]
	0x03BAE5B0 BL 0x1C16CF4
	0x03BAE5B4 ADRP X0, 0x5AC000
	0x03BAE5B8 LDR X0, [X0 + 0x170]
	0x03BAE5BC BL 0x1C16CF4
	0x03BAE5C0 MOVZ W8, 0x1
	0x03BAE5C4 STRB W8, [X21 + 0xCB3]
	0x03BAE5C8 CBZ X20, 0x3BAE650
	0x03BAE5CC MOV X0, X20
	0x03BAE5D0 MOV X1, X31
	0x03BAE5D4 BL 0x3B3A784
	0x03BAE5D8 CBZ X0, 0x3BAE650
	0x03BAE5DC LDR W8, [X0 + 0x18]
	0x03BAE5E0 CMP W8, 0x1
	0x03BAE5E4 B.NE 0x3BAE640
	0x03BAE5E8 MOV X0, X20
	0x03BAE5EC MOV X1, X31
	0x03BAE5F0 BL 0x3B3A784
	0x03BAE5F4 CBZ X0, 0x3BAE650
	0x03BAE5F8 ADRP X8, 0x5AC000
	0x03BAE5FC LDR X8, [X8 + 0x170]
	0x03BAE600 MOV W1, W31
	0x03BAE604 LDR X2, [X8]
	0x03BAE608 BL 0x301BCCC
	0x03BAE60C MOV X1, X0
	0x03BAE610 ADD X8, X31, 0x0
	0x03BAE614 MOV X0, X19
	0x03BAE618 MOV X2, X20
	0x03BAE61C BL 0x3BAE654
	0x03BAE620 LDUR V0, [X31 + 0xC]
	0x03BAE624 LDR V1, [X31]
	0x03BAE628 STUR V0, [X31 + 0x2C]
	0x03BAE62C STR V1, [X31 + 0x2]
	0x03BAE630 LDR V0, [X31 + 0x2]
	0x03BAE634 LDUR V1, [X31 + 0x2C]
	0x03BAE638 STUR V0, [X19 + 0x28]
	0x03BAE63C STUR V1, [X19 + 0x34]
	0x03BAE640 LDP X20, X19, [X31 + 0x50]
	0x03BAE644 LDP X30, X21, [X31 + 0x40]
	0x03BAE648 ADD X31, X31, 0x60
	0x03BAE64C RET
	0x03BAE650 BL 0x1C16F20
	0x03BAE654 STR D14, [X31 - 0x70]!
	0x03BAE658 STP D13, D12, [X31 + 0x10]
	0x03BAE65C STP D11, D10, [X31 + 0x20]
	0x03BAE660 STP D9, D8, [X31 + 0x30]
	0x03BAE664 STP X30, X23, [X31 + 0x40]
	0x03BAE668 STP X22, X21, [X31 + 0x50]
	0x03BAE66C STP X20, X19, [X31 + 0x60]
	0x03BAE670 ADRP X23, 0x834000
	0x03BAE674 LDRB W9, [X23 + 0xCB4]
	0x03BAE678 MOV X21, X2
	0x03BAE67C MOV X22, X1
	0x03BAE680 MOV X20, X0
	0x03BAE684 MOV X19, X8
	0x03BAE688 TBNZ X9, 0x0, 0x3BAE6A0
	0x03BAE68C ADRP X0, 0x5AC000
	0x03BAE690 LDR X0, [X0 + 0x2F8]
	0x03BAE694 BL 0x1C16CF4
	0x03BAE698 MOVZ W8, 0x1
	0x03BAE69C STRB W8, [X23 + 0xCB4]
	0x03BAE6A0 CBZ X21, 0x3BAE8C8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x835000
	008 Move X23, 0x5AF000
	009 Move W8, [X20+3231]
	010 Move X23, [X23+3576]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x56E000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5AF000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move X0, 0x5AF000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move X0, 0x5AF000
	026 Move X0, [X0+3616]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3231], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x56E000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5AF000
	053 Move X8, [X8+3616]
	054 Move X21, [X8]
	055 Move X8, 0x5AF000
	056 Move X8, [X8+3608]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03BAE6A4 LDR X8, [X21]
	0x03BAE6A8 MOV X0, X21
	0x03BAE6AC MOV X1, X22
	0x03BAE6B0 LDR X9, [X8 + 0x5A8]
	0x03BAE6B4 LDR X2, [X8 + 0x5B0]
	0x03BAE6B8 BLR X9
	0x03BAE6BC LDR X8, [X20 + 0x20]
	0x03BAE6C0 CBZ X8, 0x3BAE8C8
	0x03BAE6C4 MOV X20, X0
	0x03BAE6C8 MOV X0, X8
	0x03BAE6CC MOV X1, X31
	0x03BAE6D0 BL 0x3C8EDF0
	0x03BAE6D4 CBZ X20, 0x3BAE8C8
	0x03BAE6D8 MOV X0, X20
	0x03BAE6DC MOV X1, X31
	0x03BAE6E0 MOV V8.16B, V0.16B
	0x03BAE6E4 MOV V9.16B, V1.16B
	0x03BAE6E8 MOV V10.16B, V2.16B
	0x03BAE6EC BL 0x3C3F58C
	0x03BAE6F0 FSUB S0, S8, S0
	0x03BAE6F4 FSUB S1, S9, S1
	0x03BAE6F8 FSUB S2, S10, S2
	0x03BAE6FC MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x835000
	005 Move X19, 0x5AF000
	006 Move W8, [X20+3232]
	007 Move X19, [X19+3576]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5AF000
	013 Move X0, [X0+3576]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3232], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call ComputeNewObjectPosition_00000BF7$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03BAE700 MOV X1, X31
	0x03BAE704 BL 0x3C408CC
	0x03BAE708 CBZ X22, 0x3BAE8C8
	0x03BAE70C ADRP X10, 0x5AC000
	0x03BAE710 LDR X8, [X22]
	0x03BAE714 LDR X10, [X10 + 0x2F8]
	0x03BAE718 MOV V8.16B, V0.16B
	0x03BAE71C MOV V9.16B, V1.16B
	0x03BAE720 LDRH W9, [X8 + 0x12E]
	0x03BAE724 LDR X1, [X10]
	0x03BAE728 MOV V10.16B, V2.16B
	0x03BAE72C CBZ X9, 0x3BAE750
	0x03BAE730 LDR X10, [X8 + 0xB0]
	0x03BAE734 ADD X10, X10, 0x8
	0x03BAE738 LDUR X11, [X10 - 0x8]
	0x03BAE73C CMP X11, X1
	0x03BAE740 B.EQ 0x3BAE760
	0x03BAE744 SUBS X9, X9, 0x1
	0x03BAE748 ADD X10, X10, 0x10
	0x03BAE74C B.NE 0x3BAE738
	0x03BAE750 MOVZ W2, 0x6
	0x03BAE754 MOV X0, X22
	0x03BAE758 BL 0x1C5C788
	0x03BAE75C B 0x3BAE770
	0x03BAE760 LDR W9, [X10]
	0x03BAE764 ADD W9, W9, 0x6
	0x03BAE768 ADD X8, X8, W9, 0x4, SXTW
	0x03BAE76C ADD X0, X8, 0x138
	0x03BAE770 LDP X8, X2, [X0]
	0x03BAE774 MOV X0, X22
	0x03BAE778 MOV X1, X21
	0x03BAE77C BLR X8
	0x03BAE780 CBZ X0, 0x3BAE8C8
	0x03BAE784 MOV X1, X31
	0x03BAE788 BL 0x3C40EA8
	0x03BAE78C MOV X0, X21
	0x03BAE790 MOV X1, X31
	0x03BAE794 MOV V11.16B, V0.16B
	0x03BAE798 MOV V12.16B, V1.16B
	0x03BAE79C MOV V13.16B, V2.16B
	0x03BAE7A0 BL 0x3C32E90
	0x03BAE7A4 CBZ X0, 0x3BAE8C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x835000
	006 Move X19, 0x5AF000
	007 Move X20, 0x56E000
	008 Move W8, [X21+3233]
	009 Move X19, [X19+3624]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x56E000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5AF000
	019 Move X0, [X0+3576]
	020 Call 0x1C17CF4
	021 Move X0, 0x5AF000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3233], W8
	026 Move X0, [X20]
	027 Move X20, 0x5AF000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+3576]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03BAE7A8 FMOV S0, 1

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BAE7AC FDIV S1, S0, S13

ISIL:
	001 Call ComputeNewObjectPosition_00000BF7$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 interactorPosition, in Unity.Mathematics.quaternion interactorRotation, in Unity.Mathematics.quaternion objectRotation, in Unity.Mathematics.float3 objectScale, System.Boolean trackRotation, in Unity.Mathematics.float3 offsetPosition, in Unity.Mathematics.float3 objectLocalGrabPoint, in Unity.Mathematics.float3 interactorLocalGrabPoint, out UnityEngine.Vector3 newPosition)

Disassembly:
	0x03BAC9D4 FMUL S5, S10, S6
	0x03BAC9D8 FMUL S7, S12, S4
	0x03BAC9DC FMUL S17, S6, S6
	0x03BAC9E0 FMUL S18, S4, S4
	0x03BAC9E4 FMUL S16, S13, S3
	0x03BAC9E8 FMUL S19, S3, S3
	0x03BAC9EC FADD S5, S5, S7
	0x03BAC9F0 FADD S7, S17, S18
	0x03BAC9F4 FADD S5, S16, S5
	0x03BAC9F8 FADD S7, S19, S7
	0x03BAC9FC FDIV S7, S5, S7
	0x03BACA00 FMUL S5, S6, S7
	0x03BACA04 FMUL S4, S4, S7
	0x03BACA08 FMUL S3, S3, S7
	0x03BACA0C TBZ X20, 0x0, 0x3BACABC
	0x03BACA10 FMOV S6, W31
	0x03BACA14 FMUL S16, S0, S6
	0x03BACA18 FMUL S17, S8, S6
	0x03BACA1C FMUL S18, S15, S6
	0x03BACA20 FSUB S16, S16, S18
	0x03BACA24 FSUB S18, S15, S17
	0x03BACA28 FSUB S17, S17, S0
	0x03BACA2C FADD S18, S18, S18
	0x03BACA30 FADD S17, S17, S17
	0x03BACA34 FADD S16, S16, S16
	0x03BACA38 FMUL S19, S23, S18
	0x03BACA3C FMUL S20, S23, S17
	0x03BACA40 FMUL S21, S23, S16
	0x03BACA44 FMUL S22, S0, S17
	0x03BACA48 FMUL S17, S8, S17
	0x03BACA4C FMUL S23, S8, S18
	0x03BACA50 FMUL S24, S15, S16
	0x03BACA54 FMUL S16, S0, S16
	0x03BACA58 FMOV S7, 1
	0x03BACA5C FMUL S18, S15, S18
	0x03BACA60 FADD S19, S19, S6
	0x03BACA64 FADD S6, S20, S6
	0x03BACA68 FSUB S17, S24, S17
	0x03BACA6C FSUB S16, S23, S16
	0x03BACA70 FADD S7, S21, S7
	0x03BACA74 FSUB S18, S22, S18
	0x03BACA78 FADD S17, S19, S17
	0x03BACA7C FADD S6, S6, S16
	0x03BACA80 FADD S7, S7, S18
	0x03BACA84 FMUL S16, S17, S10
	0x03BACA88 FMUL S18, S6, S12
	0x03BACA8C FMUL S20, S17, S17
	0x03BACA90 FMUL S21, S6, S6
	0x03BACA94 FMUL S19, S7, S13
	0x03BACA98 FMUL S22, S7, S7
	0x03BACA9C FADD S16, S16, S18
	0x03BACAA0 FADD S18, S20, S21
	0x03BACAA4 FADD S16, S19, S16
	0x03BACAA8 FADD S18, S22, S18
	0x03BACAAC FDIV S16, S16, S18
	0x03BACAB0 FMUL S14, S17, S16
	0x03BACAB4 FMUL S9, S6, S16
	0x03BACAB8 FMUL S11, S7, S16
	0x03BACABC FADD S2, S2, S5
	0x03BACAC0 FADD S1, S1, S4
	0x03BACAC4 FADD S0, S28, S3
	0x03BACAC8 FADD S2, S2, S14
	0x03BACACC FADD S1, S1, S9
	0x03BACAD0 FADD S0, S0, S11
	0x03BACAD4 STP S2, S1, [X31 + 0x50]
	0x03BACAD8 STR S0, [X31 + 0x58]
	0x03BACADC B 0x3BACDF4
	0x03BACAE0 TBZ X22, 0x0, 0x3BACB00
	0x03BACAE4 TBZ X20, 0x0, 0x3BACB00
	0x03BACAE8 ADD X0, X31, 0x60
	0x03BACAEC ADD X1, X31, 0x70
	0x03BACAF0 ADD X2, X31, 0x50
	0x03BACAF4 MOV X3, X31
	0x03BACAF8 BL 0x3B86E88
	0x03BACAFC B 0x3BACDF4
	0x03BACB00 ADRP X23, 0x82C000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x837000
	014 Move X29, 0x570000
	015 Move W8, [X28+3234]
	016 Move X27, [X31+96]
	017 Move X29, [X29+2120]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move W25, W4
	022 Move X22, X3
	023 Move X23, X2
	024 Move X24, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x570000
	031 Move X0, [X0+2120]
	032 Call 0x1C17CF4
	033 Move X0, 0x5B1000
	034 Move X0, [X0+3576]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X28+3234], W8
	038 Move X0, [X29]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call BurstCompiler.get_IsEnabled
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {82}
	049 Move X8, 0x5B1000
	050 Move X8, [X8+3576]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Call ComputeNewObjectPosition_00000BF7$BurstDirectCall.GetFunctionPointer
	057 Compare X0, 0
	058 JumpIfEqual {82}
	059 Move X8, X0
	060 And W4, W25, 1
	061 Move [X31+96], X27
	062 Move X0, X26
	063 Move X1, X24
	064 Move X2, X23
	065 Move X3, X22
	066 Move X5, X21
	067 Move X6, X20
	068 Move X7, X19
	069 Move X20, [X31+80]
	070 Move X19, [X31+88]
	071 Move X22, [X31+64]
	072 Move X21, [X31+72]
	073 Move X24, [X31+48]
	074 Move X23, [X31+56]
	075 Move X26, [X31+32]
	076 Move X25, [X31+40]
	077 Move X28, [X31+16]
	078 Move X27, [X31+24]
	079 Move X29, [X31+96]
	080 Move X30, [X31+104]
	081 CallNoReturn X8
	082 Move [X31+96], X27
	083 Move [X31+104], X31
	084 And W4, W25, 1
	085 Move X0, X26
	086 Move X1, X24
	087 Move X2, X23
	088 Move X3, X22
	089 Move X5, X21
	090 Move X6, X20
	091 Move X7, X19
	092 Move X20, [X31+80]
	093 Move X19, [X31+88]
	094 Move X22, [X31+64]
	095 Move X21, [X31+72]
	096 Move X24, [X31+48]
	097 Move X23, [X31+56]
	098 Move X26, [X31+32]
	099 Move X25, [X31+40]
	100 Move X28, [X31+16]
	101 Move X27, [X31+24]
	102 Move X29, [X31+96]
	103 Move X30, [X31+104]
	104 Call 0x3BAFB44
	105 Return 

