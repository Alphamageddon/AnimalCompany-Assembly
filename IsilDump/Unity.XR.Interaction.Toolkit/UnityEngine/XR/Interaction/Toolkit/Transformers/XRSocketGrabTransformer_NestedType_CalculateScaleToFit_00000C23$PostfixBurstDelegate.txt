Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRSocketGrabTransformer/CalculateScaleToFit_00000C23$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03BB2DBC MOV X19, X0
	0x03BB2DC0 TBNZ X8, 0x0, 0x3BB2DE4
	0x03BB2DC4 ADRP X0, 0x5AA000
	0x03BB2DC8 LDR X0, [X0 + 0xF90]
	0x03BB2DCC BL 0x1C16CF4
	0x03BB2DD0 ADRP X0, 0x541000
	0x03BB2DD4 LDR X0, [X0 + 0x598]
	0x03BB2DD8 BL 0x1C16CF4
	0x03BB2DDC MOVZ W8, 0x1
	0x03BB2DE0 STRB W8, [X21 + 0xCE7]
	0x03BB2DE4 LDR X0, [X20]
	0x03BB2DE8 LDR X20, [X19 + 0x28]
	0x03BB2DEC LDR W8, [X0 + 0xE0]
	0x03BB2DF0 CBNZ W8, 0x3BB2DF8
	0x03BB2DF4 BL 0x1C16DFC
	0x03BB2DF8 MOV X0, X20
	0x03BB2DFC MOV X1, X31
	0x03BB2E00 MOV X2, X31
	0x03BB2E04 BL 0x3C354F8
	0x03BB2E08 TBZ X0, 0x0, 0x3BB2E1C
	0x03BB2E0C LDR X0, [X19 + 0x28]
	0x03BB2E10 LDP X20, X19, [X31 + 0x10]
	0x03BB2E14 LDP X30, X21, [X31], #0x20
	0x03BB2E18 RET
	0x03BB2E1C ADRP X8, 0x5AA000
	0x03BB2E20 LDR X8, [X8 + 0xF90]
	0x03BB2E24 MOV X0, X19
	0x03BB2E28 LDP X20, X19, [X31 + 0x10]
	0x03BB2E2C LDR X1, [X8]
	0x03BB2E30 LDP X30, X21, [X31], #0x20
	0x03BB2E34 B 0x21A3AF8
	0x03BB2E38 STP X30, X21, [X31 - 0x20]!
	0x03BB2E3C STP X20, X19, [X31 + 0x10]
	0x03BB2E40 ADRP X21, 0x830000
	0x03BB2E44 ADRP X20, 0x541000
	0x03BB2E48 LDRB W8, [X21 + 0xCDF]
	0x03BB2E4C LDR X20, [X20 + 0x598]
	0x03BB2E50 MOV X19, X0
	0x03BB2E54 TBNZ X8, 0x0, 0x3BB2E84
	0x03BB2E58 ADRP X0, 0x5A9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33230848
	021 Add X8, X8, 2664
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33230848
	024 Add X8, X8, 2636
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33230848
	033 Add X8, X8, 2508
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50946048
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 boundsSize, in Unity.Mathematics.float3 fixedSize, in Unity.Mathematics.float3 initialScale, System.Single epsilon, out Unity.Mathematics.float3 newScale)

Disassembly:
	0x03BB2E5C LDR X0, [X0 + 0x238]
	0x03BB2E60 BL 0x1C16CF4
	0x03BB2E64 ADRP X0, 0x5AA000
	0x03BB2E68 LDR X0, [X0 + 0xF98]
	0x03BB2E6C BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+64]
	002 Move X6, [X0+24]
	003 Move X5, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X6

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 boundsSize, in Unity.Mathematics.float3 fixedSize, in Unity.Mathematics.float3 initialScale, System.Single epsilon, out Unity.Mathematics.float3 newScale, System.AsyncCallback param_5, System.Object param_6)

Disassembly:
	0x03BB2E70 ADRP X0, 0x541000
	0x03BB2E74 LDR X0, [X0 + 0x598]
	0x03BB2E78 BL 0x1C16CF4
	0x03BB2E7C MOVZ W8, 0x1
	0x03BB2E80 STRB W8, [X21 + 0xCDF]
	0x03BB2E84 MOV X0, X19
	0x03BB2E88 BL 0x3BB2930
	0x03BB2E8C LDR X0, [X20]
	0x03BB2E90 LDR X20, [X19 + 0x20]
	0x03BB2E94 LDR W8, [X0 + 0xE0]
	0x03BB2E98 CBNZ W8, 0x3BB2EA0
	0x03BB2E9C BL 0x1C16DFC
	0x03BB2EA0 MOV X0, X20
	0x03BB2EA4 MOV X1, X31
	0x03BB2EA8 MOV X2, X31
	0x03BB2EAC BL 0x3C354F8
	0x03BB2EB0 TBZ X0, 0x0, 0x3BB2F0C
	0x03BB2EB4 LDR X8, [X19 + 0x20]
	0x03BB2EB8 CBZ X8, 0x3BB2FC0
	0x03BB2EBC LDR X20, [X8 + 0x130]
	0x03BB2EC0 CBZ X20, 0x3BB2FC0
	0x03BB2EC4 ADRP X10, 0x5A9000
	0x03BB2EC8 LDR X8, [X20]
	0x03BB2ECC LDR X10, [X10 + 0x238]
	0x03BB2ED0 LDRH W9, [X8 + 0x12E]
	0x03BB2ED4 LDR X1, [X10]
	0x03BB2ED8 CBZ X9, 0x3BB2EFC
	0x03BB2EDC LDR X10, [X8 + 0xB0]
	0x03BB2EE0 ADD X10, X10, 0x8
	0x03BB2EE4 LDUR X11, [X10 - 0x8]
	0x03BB2EE8 CMP X11, X1
	0x03BB2EEC B.EQ 0x3BB2F18
	0x03BB2EF0 SUBS X9, X9, 0x1
	0x03BB2EF4 ADD X10, X10, 0x10
	0x03BB2EF8 B.NE 0x3BB2EE4
	0x03BB2EFC MOVZ W2, 0x1
	0x03BB2F00 MOV X0, X20
	0x03BB2F04 BL 0x1C5C788
	0x03BB2F08 B 0x3BB2F28
	0x03BB2F0C LDP X20, X19, [X31 + 0x10]
	0x03BB2F10 LDP X30, X21, [X31], #0x20
	0x03BB2F14 RET
	0x03BB2F18 LDR W9, [X10]
	0x03BB2F1C ADD W9, W9, 0x1
	0x03BB2F20 ADD X8, X8, W9, 0x4, SXTW
	0x03BB2F24 ADD X0, X8, 0x138
	0x03BB2F28 LDP X8, X2, [X0]
	0x03BB2F2C MOV X0, X20
	0x03BB2F30 MOV X1, X19
	0x03BB2F34 BLR X8
	0x03BB2F38 LDR X8, [X19 + 0x20]
	0x03BB2F3C CBZ X8, 0x3BB2FC0
	0x03BB2F40 LDR X20, [X8 + 0x140]
	0x03BB2F44 CBZ X20, 0x3BB2FC0
	0x03BB2F48 ADRP X10, 0x5AA000
	0x03BB2F4C LDR X8, [X20]
	0x03BB2F50 LDR X10, [X10 + 0xF98]
	0x03BB2F54 LDRH W9, [X8 + 0x12E]
	0x03BB2F58 LDR X1, [X10]
	0x03BB2F5C CBZ X9, 0x3BB2F80
	0x03BB2F60 LDR X10, [X8 + 0xB0]
	0x03BB2F64 ADD X10, X10, 0x8
	0x03BB2F68 LDUR X11, [X10 - 0x8]
	0x03BB2F6C CMP X11, X1
	0x03BB2F70 B.EQ 0x3BB2F90
	0x03BB2F74 SUBS X9, X9, 0x1
	0x03BB2F78 ADD X10, X10, 0x10
	0x03BB2F7C B.NE 0x3BB2F68
	0x03BB2F80 MOVZ W2, 0x1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X28, 0x831000
	014 Move [X31+60], S0
	015 Move X26, 0x56D000
	016 Move X27, 0x542000
	017 Move W8, [X28+3283]
	018 Move X26, [X26+2104]
	019 Move X27, [X27+2704]
	020 Move X19, X6
	021 Move X20, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move X21, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {39}
	031 Move X0, 0x542000
	032 Move X0, [X0+2704]
	033 Call 0x1C17CF4
	034 Move X0, 0x56D000
	035 Move X0, [X0+2104]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X28+3283], W8
	039 Move X0, [X26]
	040 Move X1, X25
	041 Move [X31+24], X31
	042 Move [X31+32], X31
	043 Move [X31+40], X31
	044 Call 0x1C17E04
	045 Move X8, [X26]
	046 Move [X31], X0
	047 Move X1, X24
	048 Move X0, X8
	049 Call 0x1C17E04
	050 Move X8, [X26]
	051 Move [X31+8], X0
	052 Move X1, X23
	053 Move X0, X8
	054 Call 0x1C17E04
	055 Move X8, [X27]
	056 Move [X31+16], X0
	057 Add X1, X31, 60
	058 Move X0, X8
	059 Call 0x1C17E04
	060 Move X8, [X26]
	061 Move [X31+24], X0
	062 Move X1, X22
	063 Move X0, X8
	064 Call 0x1C17E04
	065 Move [X31+32], X0
	066 Add X1, X31, 0
	067 Move X0, X21
	068 Move X2, X20
	069 Move X3, X19
	070 Call 0x1C17CB0
	071 Move X20, [X31+128]
	072 Move X19, [X31+136]
	073 Move X22, [X31+112]
	074 Move X21, [X31+120]
	075 Move X24, [X31+96]
	076 Move X23, [X31+104]
	077 Move X26, [X31+80]
	078 Move X25, [X31+88]
	079 Move X28, [X31+64]
	080 Move X27, [X31+72]
	081 Move X30, [X31+48]
	082 Add X31, X31, 144
	083 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03BB2F84 MOV X0, X20
	0x03BB2F88 BL 0x1C5C788
	0x03BB2F8C B 0x3BB2FA0

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

