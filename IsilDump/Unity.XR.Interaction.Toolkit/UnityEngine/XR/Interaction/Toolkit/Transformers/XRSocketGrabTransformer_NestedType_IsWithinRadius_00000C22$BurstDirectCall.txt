Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRSocketGrabTransformer/IsWithinRadius_00000C22$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03BB2B94 STR X0, [X19 + 0x20]
	0x03BB2B98 MOV X20, X0
	0x03BB2B9C LDR X0, [X21]
	0x03BB2BA0 LDR W8, [X0 + 0xE0]
	0x03BB2BA4 CBNZ W8, 0x3BB2BAC
	0x03BB2BA8 BL 0x1C16DFC
	0x03BB2BAC MOV X0, X20
	0x03BB2BB0 MOV X1, X31
	0x03BB2BB4 MOV X2, X31
	0x03BB2BB8 BL 0x3C3883C
	0x03BB2BBC TBZ X0, 0x0, 0x3BB2C00
	0x03BB2BC0 ADRP X8, 0x541000
	0x03BB2BC4 LDR X8, [X8 + 0xA28]
	0x03BB2BC8 LDR X0, [X8]
	0x03BB2BCC LDR W8, [X0 + 0xE0]
	0x03BB2BD0 CBNZ W8, 0x3BB2BD8
	0x03BB2BD4 BL 0x1C16DFC
	0x03BB2BD8 ADRP X8, 0x5AA000
	0x03BB2BDC LDR X8, [X8 + 0xF78]
	0x03BB2BE0 MOV X1, X19
	0x03BB2BE4 MOV X2, X31
	0x03BB2BE8 LDR X0, [X8]
	0x03BB2BEC BL 0x3C06B0C
	0x03BB2BF0 MOV X0, X19
	0x03BB2BF4 MOV W1, W31
	0x03BB2BF8 MOV X2, X31
	0x03BB2BFC BL 0x3C32410
	0x03BB2C00 LDR X0, [X21]
	0x03BB2C04 LDR X20, [X19 + 0x28]
	0x03BB2C08 LDR W8, [X0 + 0xE0]
	0x03BB2C0C CBNZ W8, 0x3BB2C14
	0x03BB2C10 BL 0x1C16DFC
	0x03BB2C14 MOV X0, X20
	0x03BB2C18 MOV X1, X31
	0x03BB2C1C MOV X2, X31
	0x03BB2C20 BL 0x3C3883C
	0x03BB2C24 TBZ X0, 0x0, 0x3BB2C9C
	0x03BB2C28 MOV X0, X19
	0x03BB2C2C BL 0x3BB2DA4
	0x03BB2C30 STR X0, [X19 + 0x28]
	0x03BB2C34 MOV X20, X0
	0x03BB2C38 LDR X0, [X21]
	0x03BB2C3C LDR W8, [X0 + 0xE0]
	0x03BB2C40 CBNZ W8, 0x3BB2C48
	0x03BB2C44 BL 0x1C16DFC
	0x03BB2C48 MOV X0, X20
	0x03BB2C4C MOV X1, X31
	0x03BB2C50 MOV X2, X31
	0x03BB2C54 BL 0x3C3883C
	0x03BB2C58 TBZ X0, 0x0, 0x3BB2C9C
	0x03BB2C5C ADRP X8, 0x541000
	0x03BB2C60 LDR X8, [X8 + 0xA28]
	0x03BB2C64 LDR X0, [X8]
	0x03BB2C68 LDR W8, [X0 + 0xE0]
	0x03BB2C6C CBNZ W8, 0x3BB2C74
	0x03BB2C70 BL 0x1C16DFC
	0x03BB2C74 ADRP X8, 0x5AA000
	0x03BB2C78 LDR X8, [X8 + 0xF80]
	0x03BB2C7C MOV X1, X19
	0x03BB2C80 MOV X2, X31
	0x03BB2C84 LDR X0, [X8]
	0x03BB2C88 BL 0x3C06B0C
	0x03BB2C8C MOV X0, X19
	0x03BB2C90 MOV W1, W31
	0x03BB2C94 MOV X2, X31
	0x03BB2C98 BL 0x3C32410
	0x03BB2C9C LDR X0, [X19 + 0x30]
	0x03BB2CA0 CBZ X0, 0x3BB2D0C
	0x03BB2CA4 ADRP X8, 0x5AA000
	0x03BB2CA8 LDR X8, [X8 + 0xF68]
	0x03BB2CAC LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x831000
	008 Move X23, 0x5AB000
	009 Move W8, [X20+3279]
	010 Move X23, [X23+3744]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x56A000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5AB000
	020 Move X0, [X0+3744]
	021 Call 0x1C17CF4
	022 Move X0, 0x5AB000
	023 Move X0, [X0+3848]
	024 Call 0x1C17CF4
	025 Move X0, 0x5AB000
	026 Move X0, [X0+3856]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3279], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x56A000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5AB000
	053 Move X8, [X8+3856]
	054 Move X21, [X8]
	055 Move X8, 0x5AB000
	056 Move X8, [X8+3848]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03BB2CB0 BL 0x29AD9C0
	0x03BB2CB4 CBZ X0, 0x3BB2CC4
	0x03BB2CB8 LDP X20, X19, [X31 + 0x10]
	0x03BB2CBC LDP X30, X21, [X31], #0x20
	0x03BB2CC0 RET
	0x03BB2CC4 ADRP X8, 0x541000
	0x03BB2CC8 LDR X8, [X8 + 0xA28]
	0x03BB2CCC LDR X0, [X8]
	0x03BB2CD0 LDR W8, [X0 + 0xE0]
	0x03BB2CD4 CBNZ W8, 0x3BB2CDC
	0x03BB2CD8 BL 0x1C16DFC
	0x03BB2CDC ADRP X8, 0x5AA000
	0x03BB2CE0 LDR X8, [X8 + 0xF70]
	0x03BB2CE4 MOV X1, X19
	0x03BB2CE8 MOV X2, X31
	0x03BB2CEC LDR X0, [X8]
	0x03BB2CF0 BL 0x3C06B0C
	0x03BB2CF4 MOV X0, X19
	0x03BB2CF8 LDP X20, X19, [X31 + 0x10]
	0x03BB2CFC MOV W1, W31
	0x03BB2D00 MOV X2, X31
	0x03BB2D04 LDP X30, X21, [X31], #0x20
	0x03BB2D08 B 0x3C32410

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x831000
	005 Move X19, 0x5AB000
	006 Move W8, [X20+3280]
	007 Move X19, [X19+3744]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5AB000
	013 Move X0, [X0+3744]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3280], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call IsWithinRadius_00000C22$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03BB2D0C BL 0x1C16F20
	0x03BB2D10 STP X30, X21, [X31 - 0x20]!
	0x03BB2D14 STP X20, X19, [X31 + 0x10]
	0x03BB2D18 ADRP X21, 0x830000
	0x03BB2D1C ADRP X20, 0x541000
	0x03BB2D20 LDRB W8, [X21 + 0xCE6]
	0x03BB2D24 LDR X20, [X20 + 0x598]
	0x03BB2D28 MOV X19, X0
	0x03BB2D2C TBNZ X8, 0x0, 0x3BB2D50
	0x03BB2D30 ADRP X0, 0x5AA000
	0x03BB2D34 LDR X0, [X0 + 0xF88]
	0x03BB2D38 BL 0x1C16CF4
	0x03BB2D3C ADRP X0, 0x541000
	0x03BB2D40 LDR X0, [X0 + 0x598]
	0x03BB2D44 BL 0x1C16CF4
	0x03BB2D48 MOVZ W8, 0x1
	0x03BB2D4C STRB W8, [X21 + 0xCE6]
	0x03BB2D50 LDR X0, [X20]
	0x03BB2D54 LDR X20, [X19 + 0x20]
	0x03BB2D58 LDR W8, [X0 + 0xE0]
	0x03BB2D5C CBNZ W8, 0x3BB2D64
	0x03BB2D60 BL 0x1C16DFC
	0x03BB2D64 MOV X0, X20
	0x03BB2D68 MOV X1, X31
	0x03BB2D6C MOV X2, X31
	0x03BB2D70 BL 0x3C354F8
	0x03BB2D74 TBZ X0, 0x0, 0x3BB2D88
	0x03BB2D78 LDR X0, [X19 + 0x20]
	0x03BB2D7C LDP X20, X19, [X31 + 0x10]
	0x03BB2D80 LDP X30, X21, [X31], #0x20
	0x03BB2D84 RET
	0x03BB2D88 ADRP X8, 0x5AA000
	0x03BB2D8C LDR X8, [X8 + 0xF88]
	0x03BB2D90 MOV X0, X19
	0x03BB2D94 LDP X20, X19, [X31 + 0x10]
	0x03BB2D98 LDR X1, [X8]
	0x03BB2D9C LDP X30, X21, [X31], #0x20
	0x03BB2DA0 B 0x21A3F50
	0x03BB2DA4 STP X30, X21, [X31 - 0x20]!
	0x03BB2DA8 STP X20, X19, [X31 + 0x10]
	0x03BB2DAC ADRP X21, 0x830000
	0x03BB2DB0 ADRP X20, 0x541000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x831000
	006 Move X19, 0x5AB000
	007 Move X20, 0x56A000
	008 Move W8, [X21+3281]
	009 Move X19, [X19+3864]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x56A000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5AB000
	019 Move X0, [X0+3744]
	020 Call 0x1C17CF4
	021 Move X0, 0x5AB000
	022 Move X0, [X0+3864]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3281], W8
	026 Move X0, [X20]
	027 Move X20, 0x5AB000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+3744]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03BB2DB4 LDRB W8, [X21 + 0xCE7]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BB2DB8 LDR X20, [X20 + 0x598]

ISIL:
	001 Call IsWithinRadius_00000C22$BurstDirectCall.Constructor
	002 Return 

Method: System.Boolean Invoke(in Unity.Mathematics.float3 a, in Unity.Mathematics.float3 b, System.Single radius)

Disassembly:
	0x03BB1B0C BL 0x1C16E04
	0x03BB1B10 LDR X8, [X25]
	0x03BB1B14 STR X0, [X31]
	0x03BB1B18 MOV X1, X22
	0x03BB1B1C MOV X0, X8
	0x03BB1B20 BL 0x1C16E04
	0x03BB1B24 LDR X8, [X24]
	0x03BB1B28 STR X0, [X31 + 0x8]
	0x03BB1B2C ADD X1, X31, 0x2C
	0x03BB1B30 MOV X0, X8
	0x03BB1B34 BL 0x1C16E04
	0x03BB1B38 STR X0, [X31 + 0x10]
	0x03BB1B3C ADD X1, X31, 0x0
	0x03BB1B40 MOV X0, X21
	0x03BB1B44 MOV X2, X20
	0x03BB1B48 MOV X3, X19
	0x03BB1B4C BL 0x1C16CB0
	0x03BB1B50 LDP X20, X19, [X31 + 0x60]
	0x03BB1B54 LDP X22, X21, [X31 + 0x50]
	0x03BB1B58 LDP X24, X23, [X31 + 0x40]
	0x03BB1B5C LDP X26, X25, [X31 + 0x30]
	0x03BB1B60 LDR X30, [X31 + 0x20]
	0x03BB1B64 ADD X31, X31, 0x70
	0x03BB1B68 RET
	0x03BB1B6C STR X30, [X31 - 0x10]!
	0x03BB1B70 MOV X0, X1
	0x03BB1B74 MOV X1, X31
	0x03BB1B78 BL 0x1C16CB4
	0x03BB1B7C CBZ X0, 0x3BB1B90
	0x03BB1B80 BL 0x1C16E08
	0x03BB1B84 LDRB W0, [X0]
	0x03BB1B88 LDR X30, [X31], #0x10
	0x03BB1B8C RET
	0x03BB1B90 BL 0x1C16F20
	0x03BB1B94 STP X30, X23, [X31 - 0x30]!
	0x03BB1B98 STP X22, X21, [X31 + 0x10]
	0x03BB1B9C STP X20, X19, [X31 + 0x20]
	0x03BB1BA0 ADRP X20, 0x831000
	0x03BB1BA4 ADRP X23, 0x5AB000
	0x03BB1BA8 LDRB W8, [X20 + 0xCCF]
	0x03BB1BAC LDR X23, [X23 + 0xEA0]
	0x03BB1BB0 MOV X19, X0
	0x03BB1BB4 TBNZ X8, 0x0, 0x3BB1BF0
	0x03BB1BB8 ADRP X0, 0x56A000
	0x03BB1BBC LDR X0, [X0 + 0x848]
	0x03BB1BC0 BL 0x1C16CF4
	0x03BB1BC4 ADRP X0, 0x5AB000
	0x03BB1BC8 LDR X0, [X0 + 0xEA0]
	0x03BB1BCC BL 0x1C16CF4
	0x03BB1BD0 ADRP X0, 0x5AB000
	0x03BB1BD4 LDR X0, [X0 + 0xF08]
	0x03BB1BD8 BL 0x1C16CF4
	0x03BB1BDC ADRP X0, 0x5AB000
	0x03BB1BE0 LDR X0, [X0 + 0xF10]
	0x03BB1BE4 BL 0x1C16CF4
	0x03BB1BE8 MOVZ W8, 0x1
	0x03BB1BEC STRB W8, [X20 + 0xCCF]
	0x03BB1BF0 LDR X8, [X23]
	0x03BB1BF4 LDR W9, [X8 + 0xE0]
	0x03BB1BF8 CBNZ W9, 0x3BB1C08
	0x03BB1BFC MOV X0, X8
	0x03BB1C00 BL 0x1C16DFC
	0x03BB1C04 LDR X8, [X23]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x832000
	008 Move X22, 0x56B000
	009 Move W8, [X21+3282]
	010 Move X22, [X22+2120]
	011 Move V8, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x56B000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0x5AC000
	022 Move X0, [X0+3744]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3282], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call BurstCompiler.get_IsEnabled
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {58}
	037 Move X8, 0x5AC000
	038 Move X8, [X8+3744]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Call IsWithinRadius_00000C22$BurstDirectCall.GetFunctionPointer
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move X2, X0
	048 Move X0, X20
	049 Move X1, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+8]
	055 Move V0, V8
	056 Move V8, [X31+48]
	057 CallNoReturn X2
	058 Move V0, [X20]
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move V2, [X19]
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Subtract S0, S0, S2
	067 Subtract V1, V1, V3
	068 Multiply S0, S0, S0
	069 NotImplemented "Instruction INVALID not yet implemented."
	070 Add S0, S0, S1
	071 Move S1, V1.S[1]
	072 Move X30, [X31+8]
	073 Add S0, S1, S0
	074 Multiply S1, S8, S8
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move V8, [X31+48]
	078 Return X0

