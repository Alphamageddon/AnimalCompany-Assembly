Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRSingleGrabFreeTransformer

Method: System.Void Process(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable, UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase, ref UnityEngine.Pose targetPose, ref UnityEngine.Vector3 localScale)

Disassembly:
	0x03BAFB20 LDR X2, [X8]
	0x03BAFB24 BL 0x2AC41CC
	0x03BAFB28 MOV W20, W0
	0x03BAFB2C TBNZ X0, 0x0, 0x3BAFD6C
	0x03BAFB30 LDR X22, [X21 + 0x40]
	0x03BAFB34 MOV V0.16B, V10.16B
	0x03BAFB38 MOV V1.16B, V9.16B

ISIL:
	001 Or W8, W2, 2
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X0, X1
	004 Move X1, X3
	005 Call XRSingleGrabFreeTransformer.UpdateTarget, X0, X1
	006 Return 
	007 Return 

Method: System.Void UpdateTarget(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable, ref UnityEngine.Pose targetPose)

Disassembly:
	0x03BAA344 LDR V2, [X20 + 0x6C]
	0x03BAA348 LDRB W21, [X21 + 0x20C]
	0x03BAA34C MOV X0, X31
	0x03BAA350 BL 0x3887BE4
	0x03BAA354 STP S0, S1, [X31 + 0x30]
	0x03BAA358 STR S2, [X31 + 0x38]
	0x03BAA35C LDP S0, S1, [X20 + 0xA8]
	0x03BAA360 LDR V2, [X20 + 0xB0]
	0x03BAA364 MOV X0, X31
	0x03BAA368 BL 0x3887BE4
	0x03BAA36C STP S0, S1, [X31 + 0x20]
	0x03BAA370 STR S2, [X31 + 0x28]
	0x03BAA374 LDP S0, S1, [X20 + 0x9C]
	0x03BAA378 LDR V2, [X20 + 0xA4]
	0x03BAA37C MOV X0, X31
	0x03BAA380 BL 0x3887BE4
	0x03BAA384 ADD X8, X31, 0x80
	0x03BAA388 ADD X0, X31, 0x70
	0x03BAA38C ADD X1, X31, 0x60
	0x03BAA390 ADD X2, X31, 0x50
	0x03BAA394 ADD X3, X31, 0x40
	0x03BAA398 ADD X5, X31, 0x30
	0x03BAA39C ADD X6, X31, 0x20
	0x03BAA3A0 ADD X7, X31, 0x10
	0x03BAA3A4 MOV W4, W21
	0x03BAA3A8 STP S0, S1, [X31 + 0x10]
	0x03BAA3AC STR S2, [X31 + 0x18]
	0x03BAA3B0 STR X8, [X31]
	0x03BAA3B4 BL 0x3BAB920
	0x03BAA3B8 LDR W2, [X20 + 0x15C]
	0x03BAA3BC LDR W3, [X20 + 0x158]
	0x03BAA3C0 ADD X1, X20, 0x48
	0x03BAA3C4 ADD X0, X31, 0x80
	0x03BAA3C8 BL 0x3BAA9E4
	0x03BAA3CC STP S0, S1, [X19]
	0x03BAA3D0 STR S2, [X19 + 0x8]
	0x03BAA3D4 LDP X20, X19, [X31 + 0xE0]
	0x03BAA3D8 LDP X22, X21, [X31 + 0xD0]
	0x03BAA3DC LDR X30, [X31 + 0xC0]
	0x03BAA3E0 ADD X31, X31, 0xF0
	0x03BAA3E4 RET
	0x03BAA3E8 BL 0x1C16F20
	0x03BAA3EC SUB X31, X31, 0x150
	0x03BAA3F0 STP D15, D14, [X31 + 0xC0]
	0x03BAA3F4 STP D13, D12, [X31 + 0xD0]
	0x03BAA3F8 STP D11, D10, [X31 + 0xE0]
	0x03BAA3FC STP D9, D8, [X31 + 0xF0]
	0x03BAA400 STR X29, [X31 + 0x100]
	0x03BAA404 STP X30, X25, [X31 + 0x110]
	0x03BAA408 STP X24, X23, [X31 + 0x120]
	0x03BAA40C STP X22, X21, [X31 + 0x130]
	0x03BAA410 STP X20, X19, [X31 + 0x140]
	0x03BAA414 ADRP X20, 0x838000
	0x03BAA418 LDRB W8, [X20 + 0xC94]
	0x03BAA41C MOV X21, X1
	0x03BAA420 MOV X19, X0
	0x03BAA424 TBNZ X8, 0x0, 0x3BAA454
	0x03BAA428 ADRP X0, 0x5B0000
	0x03BAA42C LDR X0, [X0 + 0x2F8]
	0x03BAA430 BL 0x1C16CF4
	0x03BAA434 ADRP X0, 0x5B2000
	0x03BAA438 LDR X0, [X0 + 0xDF0]
	0x03BAA43C BL 0x1C16CF4
	0x03BAA440 ADRP X0, 0x5B0000
	0x03BAA444 LDR X0, [X0 + 0x170]
	0x03BAA448 BL 0x1C16CF4
	0x03BAA44C MOVZ W8, 0x1
	0x03BAA450 STRB W8, [X20 + 0xC94]
	0x03BAA454 STR W31, [X31 + 0xB8]
	0x03BAA458 STR X31, [X31 + 0xB0]
	0x03BAA45C CBZ X21, 0x3BAA9E0
	0x03BAA460 MOV X0, X21
	0x03BAA464 MOV X1, X31
	0x03BAA468 BL 0x3B3A784
	0x03BAA46C CBZ X0, 0x3BAA9E0
	0x03BAA470 ADRP X8, 0x5B0000
	0x03BAA474 LDR X8, [X8 + 0x170]
	0x03BAA478 ADRP X25, 0x5B2000
	0x03BAA47C MOV W1, W31
	0x03BAA480 ADD X24, X31, 0x90
	0x03BAA484 LDR X2, [X8]
	0x03BAA488 LDR X25, [X25 + 0xDF0]
	0x03BAA48C BL 0x301BCCC
	0x03BAA490 MOV X23, X0
	0x03BAA494 MOV X0, X21
	0x03BAA498 MOV X1, X31
	0x03BAA49C BL 0x3C32E90
	0x03BAA4A0 LDR X8, [X21]
	0x03BAA4A4 MOV X20, X0
	0x03BAA4A8 MOV X0, X21
	0x03BAA4AC MOV X1, X23
	0x03BAA4B0 LDR X9, [X8 + 0x5A8]
	0x03BAA4B4 LDR X2, [X8 + 0x5B0]
	0x03BAA4B8 BLR X9
	0x03BAA4BC LDR X1, [X25]
	0x03BAA4C0 MOV X22, X0
	0x03BAA4C4 MOV X0, X23
	0x03BAA4C8 BL 0x1C16E00
	0x03BAA4CC STR X0, [X19 + 0x160]
	0x03BAA4D0 LDR X1, [X25]
	0x03BAA4D4 MOV X0, X23
	0x03BAA4D8 BL 0x1C16E00
	0x03BAA4DC LDR X8, [X19 + 0x160]
	0x03BAA4E0 MOV X0, X20
	0x03BAA4E4 MOV X1, X31
	0x03BAA4E8 CMP X8, 0x0
	0x03BAA4EC CSET W8, NE
	0x03BAA4F0 STRB W8, [X19 + 0x168]
	0x03BAA4F4 ADD X8, X31, 0x70
	0x03BAA4F8 BL 0x3B24724
	0x03BAA4FC LDUR V0, [X31 + 0x7C]
	0x03BAA500 LDR V1, [X31 + 0x7]
	0x03BAA504 STUR V0, [X24 + 0xC]
	0x03BAA508 STR V1, [X31 + 0x9]
	0x03BAA50C LDR V0, [X31 + 0x9]
	0x03BAA510 LDUR V1, [X24 + 0xC]
	0x03BAA514 STUR V0, [X19 + 0x48]
	0x03BAA518 STUR V1, [X19 + 0x54]
	0x03BAA51C CBZ X23, 0x3BAA9E0
	0x03BAA520 ADRP X10, 0x5B0000
	0x03BAA524 LDR X8, [X23]
	0x03BAA528 LDR X10, [X10 + 0x2F8]
	0x03BAA52C LDRH W9, [X8 + 0x12E]
	0x03BAA530 LDR X1, [X10]
	0x03BAA534 CBZ X9, 0x3BAA558
	0x03BAA538 LDR X10, [X8 + 0xB0]
	0x03BAA53C ADD X10, X10, 0x8
	0x03BAA540 LDUR X11, [X10 - 0x8]
	0x03BAA544 CMP X11, X1
	0x03BAA548 B.EQ 0x3BAA568
	0x03BAA54C SUBS X9, X9, 0x1
	0x03BAA550 ADD X10, X10, 0x10
	0x03BAA554 B.NE 0x3BAA540
	0x03BAA558 MOVZ W2, 0x6
	0x03BAA55C MOV X0, X23
	0x03BAA560 BL 0x1C5C788
	0x03BAA564 B 0x3BAA578
	0x03BAA568 LDR W9, [X10]
	0x03BAA56C ADD W9, W9, 0x6
	0x03BAA570 ADD X8, X8, W9, 0x4, SXTW
	0x03BAA574 ADD X0, X8, 0x138
	0x03BAA578 LDP X8, X2, [X0]
	0x03BAA57C MOV X0, X23
	0x03BAA580 MOV X1, X21
	0x03BAA584 BLR X8
	0x03BAA588 ADD X8, X31, 0x50
	0x03BAA58C MOV X1, X31
	0x03BAA590 BL 0x3B24724
	0x03BAA594 LDUR V0, [X31 + 0x5C]
	0x03BAA598 LDR V1, [X31 + 0x5]
	0x03BAA59C MOVZ W25, 0x1
	0x03BAA5A0 STUR V0, [X31 + 0x7C]
	0x03BAA5A4 STR V1, [X31 + 0x7]
	0x03BAA5A8 LDUR V0, [X31 + 0x7C]
	0x03BAA5AC LDR V1, [X31 + 0x7]
	0x03BAA5B0 STR X23, [X19 + 0xB8]
	0x03BAA5B4 STR W25, [X19 + 0xC0]
	0x03BAA5B8 STUR V0, [X19 + 0x8C]
	0x03BAA5BC STR V1, [X19 + 0x8]
	0x03BAA5C0 ADRP X23, 0x82E000
	0x03BAA5C4 LDRB W8, [X23 + 0x783]
	0x03BAA5C8 CBNZ W8, 0x3BAA5DC
	0x03BAA5CC ADRP X0, 0x549000
	0x03BAA5D0 LDR X0, [X0 + 0x5A0]
	0x03BAA5D4 BL 0x1C16CF4
	0x03BAA5D8 STRB W25, [X23 + 0x783]
	0x03BAA5DC ADRP X8, 0x549000
	0x03BAA5E0 LDR X8, [X8 + 0x5A0]
	0x03BAA5E4 ADRP X23, 0x82E000
	0x03BAA5E8 LDRB W9, [X23 + 0x793]
	0x03BAA5EC LDR X8, [X8]
	0x03BAA5F0 LDR X8, [X8 + 0xB8]
	0x03BAA5F4 LDP S0, S8, [X8]
	0x03BAA5F8 LDR V9, [X8 + 0x8]
	0x03BAA5FC STR S0, [X31 + 0x108]
	0x03BAA600 CBNZ W9, 0x3BAA618
	0x03BAA604 ADRP X0, 0x54A000
	0x03BAA608 LDR X0, [X0 + 0x5A8]
	0x03BAA60C BL 0x1C16CF4
	0x03BAA610 MOVZ W8, 0x1
	0x03BAA614 STRB W8, [X23 + 0x793]
	0x03BAA618 LDP S10, S1, [X19 + 0x54]
	0x03BAA61C LDRB W8, [X21 + 0x20C]
	0x03BAA620 LDP S2, S3, [X19 + 0x5C]
	0x03BAA624 CBZ W8, 0x3BAA70C
	0x03BAA628 LDR V4, [X19 + 0x8C]
	0x03BAA62C LDR V0, [X19 + 0x94]
	0x03BAA630 LDR V5, [X19 + 0x90]
	0x03BAA634 MOV X0, X31
	0x03BAA638 STR S9, [X31 + 0x10C]
	0x03BAA63C STP S4, S0, [X31]
	0x03BAA640 LDR V0, [X19 + 0x98]
	0x03BAA644 MOV V15.16B, V8.16B
	0x03BAA648 STP S5, S0, [X31 + 0x8]
	0x03BAA64C MOV V0.16B, V10.16B
	0x03BAA650 BL 0x3C2A260
	0x03BAA654 CBZ X22, 0x3BAA9E0
	0x03BAA658 MOV X0, X22
	0x03BAA65C MOV X1, X31
	0x03BAA660 MOV V10.16B, V0.16B
	0x03BAA664 MOV V9.16B, V1.16B
	0x03BAA668 MOV V8.16B, V2.16B
	0x03BAA66C MOV V11.16B, V3.16B
	0x03BAA670 BL 0x3C3DEB4
	0x03BAA674 FMUL S4, S11, S0
	0x03BAA678 FMUL S5, S10, S3
	0x03BAA67C FMUL S7, S8, S1
	0x03BAA680 FMUL S16, S11, S1

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0x839000
	015 Move W8, [X21+3254]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x5B1000
	023 Move X0, [X0+760]
	024 Call 0x1C17CF4
	025 Move X0, 0x5B1000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3254], W8
	030 Compare X20, 0
	031 JumpIfEqual {239}
	032 Move X0, X20
	033 Move X1, X31
	034 Call XRBaseInteractable.get_interactorsSelecting, X0
	035 Compare X0, 0
	036 JumpIfEqual {239}
	037 Move X8, 0x5B1000
	038 Move X8, [X8+368]
	039 Move W1, W31
	040 Move X2, [X8]
	041 Call List`1<Object>.get_Item, X0, X1
	042 Compare X0, 0
	043 JumpIfEqual {239}
	044 Move X10, 0x5B1000
	045 Move X8, [X0]
	046 Move X10, [X10+760]
	047 Move X21, X0
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X10]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move W2, 6
	059 Move X0, X21
	060 Call 0x1C5D788
	061 Move W9, [X10]
	062 Add W9, W9, 6
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X2, [X0+8]
	067 Move X0, X21
	068 Move X1, X20
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Add X8, X31, 48
	071 Move X1, X31
	072 Call TransformExtensions.GetWorldPose, X0
	073 Move V0, [X31+52]
	074 Move V1, [X31+48]
	075 Move X0, X20
	076 Move X1, X31
	077 Move [X31+44], S0
	078 Move V0, [X31+56]
	079 Move [X31+36], S1
	080 Move [X31+44], S0
	081 Move V1, [X31+60]
	082 Move V0, [X31+64]
	083 Move [X31+24], S1
	084 Move [X31+32], S0
	085 Move S0, [X31+68]
	086 Move S11, [X31+72]
	087 Move [X31+32], S0
	088 Call Component.get_transform, X0
	089 Add X8, X31, 48
	090 Move X1, X31
	091 Call TransformExtensions.GetWorldPose, X0
	092 Move X8, [X20]
	093 Move S8, [X31+48]
	094 Move S9, [X31+52]
	095 Move S10, [X31+56]
	096 Move S15, [X31+60]
	097 Move S14, [X31+64]
	098 Move S13, [X31+68]
	099 Move X9, [X8+1448]
	100 Move X2, [X8+1456]
	101 Move V12, [X31+72]
	102 Move X0, X20
	103 Move X1, X21
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Compare X0, 0
	106 JumpIfEqual {239}
	107 Move X1, X31
	108 Move X21, X0
	109 Call Transform.get_position, X0
	110 Move W8, [X20+524]
	111 Subtract S0, S8, S0
	112 Subtract S1, S9, S1
	113 Subtract S2, S10, S2
	114 Compare W8, 0
	115 JumpIfEqual {216}
	116 Move X0, X21
	117 Move X1, X31
	118 Call Transform.InverseTransformDirection, X0, X1
	119 Move [X31+16], S1
	120 Move [X31+24], S0
	121 Move [X31+12], S2
	122 Move V0, V15
	123 Move V1, V14
	124 Move V2, V13
	125 Move V3, V12
	126 Move X0, X31
	127 Call Quaternion.Inverse, X0
	128 Move X0, X21
	129 Move X1, X31
	130 Move V12, V0
	131 Move V13, V1
	132 Move V14, V2
	133 Move V15, V3
	134 Call Transform.get_rotation, X0
	135 Multiply S4, S15, S0
	136 Multiply S5, S12, S3
	137 Multiply S7, S14, S1
	138 Multiply S16, S15, S1
	139 Multiply S17, S13, S3
	140 Multiply S18, S14, S0
	141 Multiply S20, S12, S1
	142 Multiply S21, S12, S0
	143 Multiply S22, S13, S0
	144 Multiply S0, S13, S1
	145 Multiply S1, S15, S2
	146 Multiply S23, S15, S3
	147 Multiply S3, S14, S3
	148 Multiply S6, S13, S2
	149 Multiply S19, S12, S2
	150 Multiply S24, S14, S2
	151 Add S2, S4, S5
	152 Add S4, S16, S17
	153 Add S1, S1, S3
	154 Subtract S3, S23, S21
	155 Add S2, S6, S2
	156 Add S4, S18, S4
	157 Add S5, S20, S1
	158 Subtract S3, S3, S0
	159 Subtract S0, S2, S7
	160 Subtract S1, S4, S19
	161 Subtract S2, S5, S22
	162 Subtract S3, S3, S24
	163 Move X0, X31
	164 Call Quaternion.Inverse, X0
	165 Move S10, [X31+24]
	166 Move S9, [X31+28]
	167 Move V8, [X31+32]
	168 Move S5, [X31+16]
	169 Move S4, [X31+20]
	170 Move V6, [X31+12]
	171 Move V12, V0
	172 Move V13, V1
	173 Move V14, V2
	174 Move V15, V3
	175 Move V0, V10
	176 Move V1, V9
	177 Move V2, V8
	178 Move V3, V11
	179 Move X0, X31
	180 Call Quaternion.op_Multiply, X0, X1
	181 Move V3, [X31+36]
	182 Multiply S4, S10, S15
	183 Multiply S7, S11, S13
	184 Multiply S16, S9, S15
	185 Add S0, S3, S0
	186 Multiply S3, S11, S12
	187 Multiply S20, S10, S12
	188 Multiply S23, S11, S14
	189 Multiply S24, S11, S15
	190 Multiply S25, S8, S15
	191 Multiply S5, S9, S14
	192 Multiply S17, S8, S12
	193 Multiply S19, S10, S13
	194 Multiply S22, S9, S13
	195 Move [X19], S0
	196 Add S0, S3, S4
	197 Add S3, S7, S16
	198 Add S4, S23, S25
	199 Subtract S7, S24, S20
	200 Multiply S6, S8, S13
	201 Multiply S18, S10, S14
	202 Multiply S21, S9, S12
	203 Multiply S26, S8, S14
	204 Add S0, S5, S0
	205 Add S3, S17, S3
	206 Add S4, S19, S4
	207 Subtract S5, S7, S22
	208 Subtract S0, S0, S6
	209 Subtract S3, S3, S18
	210 Subtract S4, S4, S21
	211 Subtract S5, S5, S26
	212 Move [X19+12], S0
	213 Move [X19+20], S3
	214 Move [X19+20], S4
	215 Move [X19+28], S5
	216 Move V3, [X31+36]
	217 Add S0, S3, S0
	218 Move [X19], S0
	219 Move S0, [X31+40]
	220 Move S3, [X31+44]
	221 Move X30, [X31+144]
	222 Move X21, [X31+152]
	223 Move D9, [X31+128]
	224 Move D8, [X31+136]
	225 Move D11, [X31+112]
	226 Move D10, [X31+120]
	227 Add S0, S0, S2
	228 Add S1, S3, S1
	229 Move [X19+4], S1
	230 Move [X19+12], S0
	231 Move X20, [X31+160]
	232 Move X19, [X31+168]
	233 Move D13, [X31+96]
	234 Move D12, [X31+104]
	235 Move D15, [X31+80]
	236 Move D14, [X31+88]
	237 Add X31, X31, 176
	238 Return 
	239 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BAFB3C MOV V2.16B, V8.16B
	0x03BAFB40 MOV X0, X31
	0x03BAFB44 BL 0x3887BE4
	0x03BAFB48 CBZ X22, 0x3BAFD9C
	0x03BAFB4C ADRP X24, 0x5AD000
	0x03BAFB50 LDR X24, [X24 + 0xE88]
	0x03BAFB54 MOV X0, X22
	0x03BAFB58 MOV X1, X19
	0x03BAFB5C LDR X2, [X24]
	0x03BAFB60 BL 0x2AC3FA0
	0x03BAFB64 CBZ X19, 0x3BAFD9C
	0x03BAFB68 ADRP X23, 0x5AB000
	0x03BAFB6C LDR X8, [X19]
	0x03BAFB70 LDR X23, [X23 + 0x8D8]
	0x03BAFB74 LDRH W9, [X8 + 0x12E]
	0x03BAFB78 LDR X1, [X23]
	0x03BAFB7C CBZ X9, 0x3BAFBA0
	0x03BAFB80 LDR X10, [X8 + 0xB0]
	0x03BAFB84 ADD X10, X10, 0x8
	0x03BAFB88 LDUR X11, [X10 - 0x8]
	0x03BAFB8C CMP X11, X1
	0x03BAFB90 B.EQ 0x3BAFBB0
	0x03BAFB94 SUBS X9, X9, 0x1
	0x03BAFB98 ADD X10, X10, 0x10
	0x03BAFB9C B.NE 0x3BAFB88
	0x03BAFBA0 MOVZ W2, 0x6
	0x03BAFBA4 MOV X0, X19
	0x03BAFBA8 BL 0x1C5C788
	0x03BAFBAC B 0x3BAFBC0
	0x03BAFBB0 LDR W9, [X10]
	0x03BAFBB4 ADD W9, W9, 0x6
	0x03BAFBB8 ADD X8, X8, W9, 0x4, SXTW
	0x03BAFBBC ADD X0, X8, 0x138
	0x03BAFBC0 LDP X8, X1, [X0]
	0x03BAFBC4 MOV X0, X19
	0x03BAFBC8 BLR X8
	0x03BAFBCC CBZ X0, 0x3BAFD9C
	0x03BAFBD0 MOV X1, X31
	0x03BAFBD4 MOV X22, X0
	0x03BAFBD8 BL 0x3C3F58C
	0x03BAFBDC MOV X0, X22
	0x03BAFBE0 MOV X1, X31
	0x03BAFBE4 STP S1, S0, [X31]
	0x03BAFBE8 MOV V10.16B, V2.16B
	0x03BAFBEC BL 0x3C3DEB4
	0x03BAFBF0 ADRP X25, 0x829000
	0x03BAFBF4 LDRB W8, [X25 + 0x783]
	0x03BAFBF8 MOV V11.16B, V0.16B
	0x03BAFBFC MOV V12.16B, V1.16B
	0x03BAFC00 MOV V13.16B, V2.16B
	0x03BAFC04 MOV V14.16B, V3.16B
	0x03BAFC08 CBNZ W8, 0x3BAFC20
	0x03BAFC0C ADRP X0, 0x544000
	0x03BAFC10 LDR X0, [X0 + 0x5A0]
	0x03BAFC14 BL 0x1C16CF4
	0x03BAFC18 MOVZ W8, 0x1
	0x03BAFC1C STRB W8, [X25 + 0x783]
	0x03BAFC20 ADRP X8, 0x544000
	0x03BAFC24 LDR X8, [X8 + 0x5A0]
	0x03BAFC28 ADRP X25, 0x829000
	0x03BAFC2C LDRB W9, [X25 + 0x793]
	0x03BAFC30 LDR X8, [X8]
	0x03BAFC34 LDR X8, [X8 + 0xB8]
	0x03BAFC38 LDP S9, S8, [X8]
	0x03BAFC3C LDR V15, [X8 + 0x8]
	0x03BAFC40 CBNZ W9, 0x3BAFC58
	0x03BAFC44 ADRP X0, 0x545000
	0x03BAFC48 LDR X0, [X0 + 0x5A8]
	0x03BAFC4C BL 0x1C16CF4
	0x03BAFC50 MOVZ W8, 0x1
	0x03BAFC54 STRB W8, [X25 + 0x793]
	0x03BAFC58 ADRP X8, 0x545000
	0x03BAFC5C LDR X8, [X8 + 0x5A8]
	0x03BAFC60 MOV X0, X22
	0x03BAFC64 MOV V0.16B, V9.16B
	0x03BAFC68 MOV V1.16B, V8.16B
	0x03BAFC6C LDR X8, [X8]
	0x03BAFC70 MOV V2.16B, V15.16B
	0x03BAFC74 MOV X1, X31
	0x03BAFC78 LDR X8, [X8 + 0xB8]
	0x03BAFC7C LDP S3, S4, [X8]
	0x03BAFC80 LDP S5, S6, [X8 + 0x8]
	0x03BAFC84 BL 0x3C40000
	0x03BAFC88 LDR X8, [X19]
	0x03BAFC8C LDR X21, [X21 + 0x48]
	0x03BAFC90 LDR X1, [X23]
	0x03BAFC94 LDRH W9, [X8 + 0x12E]
	0x03BAFC98 CBZ X9, 0x3BAFCBC
	0x03BAFC9C LDR X10, [X8 + 0xB0]
	0x03BAFCA0 ADD X10, X10, 0x8
	0x03BAFCA4 LDUR X11, [X10 - 0x8]
	0x03BAFCA8 CMP X11, X1
	0x03BAFCAC B.EQ 0x3BAFCCC
	0x03BAFCB0 SUBS X9, X9, 0x1
	0x03BAFCB4 ADD X10, X10, 0x10
	0x03BAFCB8 B.NE 0x3BAFCA4
	0x03BAFCBC MOVZ W2, 0x6
	0x03BAFCC0 MOV X0, X19
	0x03BAFCC4 BL 0x1C5C788
	0x03BAFCC8 B 0x3BAFCDC
	0x03BAFCCC LDR W9, [X10]
	0x03BAFCD0 ADD W9, W9, 0x6
	0x03BAFCD4 ADD X8, X8, W9, 0x4, SXTW
	0x03BAFCD8 ADD X0, X8, 0x138
	0x03BAFCDC LDP X8, X1, [X0]
	0x03BAFCE0 MOV X0, X19
	0x03BAFCE4 BLR X8
	0x03BAFCE8 ADRP X8, 0x5AA000
	0x03BAFCEC LDR X8, [X8 + 0xB98]
	0x03BAFCF0 MOV X23, X0
	0x03BAFCF4 LDR X8, [X8]
	0x03BAFCF8 LDR W9, [X8 + 0xE0]
	0x03BAFCFC CBNZ W9, 0x3BAFD08
	0x03BAFD00 MOV X0, X8
	0x03BAFD04 BL 0x1C16DFC
	0x03BAFD08 ADD X8, X31, 0x8
	0x03BAFD0C MOV X0, X23
	0x03BAFD10 MOV X1, X31
	0x03BAFD14 BL 0x3B2219C
	0x03BAFD18 LDP S0, S1, [X31 + 0x14]
	0x03BAFD1C LDR V2, [X31 + 0x1C]
	0x03BAFD20 MOV X0, X31
	0x03BAFD24 FADD S0, S0, S0
	0x03BAFD28 FADD S1, S1, S1
	0x03BAFD2C FADD S2, S2, S2
	0x03BAFD30 BL 0x3887BE4
	0x03BAFD34 CBZ X21, 0x3BAFD9C
	0x03BAFD38 LDR X2, [X24]
	0x03BAFD3C MOV X0, X21
	0x03BAFD40 MOV X1, X19
	0x03BAFD44 BL 0x2AC3FA0
	0x03BAFD48 LDP S1, S0, [X31]
	0x03BAFD4C MOV X0, X22
	0x03BAFD50 MOV V2.16B, V10.16B
	0x03BAFD54 MOV V3.16B, V11.16B
	0x03BAFD58 MOV V4.16B, V12.16B
	0x03BAFD5C MOV V5.16B, V13.16B
	0x03BAFD60 MOV V6.16B, V14.16B
	0x03BAFD64 MOV X1, X31
	0x03BAFD68 BL 0x3C40000
	0x03BAFD6C ORN W8, W31, W20, 0x0
	0x03BAFD70 LDP X20, X19, [X31 + 0x90]
	0x03BAFD74 LDP X22, X21, [X31 + 0x80]
	0x03BAFD78 LDP X24, X23, [X31 + 0x70]
	0x03BAFD7C LDP X30, X25, [X31 + 0x60]
	0x03BAFD80 LDP D9, D8, [X31 + 0x50]
	0x03BAFD84 LDP D11, D10, [X31 + 0x40]
	0x03BAFD88 LDP D13, D12, [X31 + 0x30]
	0x03BAFD8C LDP D15, D14, [X31 + 0x20]
	0x03BAFD90 AND W0, W8, 0x1
	0x03BAFD94 ADD X31, X31, 0xA0
	0x03BAFD98 RET
	0x03BAFD9C BL 0x1C16F20
	0x03BAFDA0 SUB X31, X31, 0x70
	0x03BAFDA4 STR X30, [X31 + 0x30]
	0x03BAFDA8 STP X24, X23, [X31 + 0x40]
	0x03BAFDAC STP X22, X21, [X31 + 0x50]
	0x03BAFDB0 STP X20, X19, [X31 + 0x60]
	0x03BAFDB4 ADRP X24, 0x833000
	0x03BAFDB8 LDRB W8, [X24 + 0xCBA]
	0x03BAFDBC MOV X20, X4
	0x03BAFDC0 MOV X19, X3
	0x03BAFDC4 MOV W23, W2
	0x03BAFDC8 MOV X21, X1
	0x03BAFDCC MOV X22, X0
	0x03BAFDD0 TBNZ X8, 0x0, 0x3BAFDE8
	0x03BAFDD4 ADRP X0, 0x5AD000
	0x03BAFDD8 LDR X0, [X0 + 0xE90]
	0x03BAFDDC BL 0x1C16CF4
	0x03BAFDE0 MOVZ W8, 0x1
	0x03BAFDE4 STRB W8, [X24 + 0xCBA]
	0x03BAFDE8 ORR W8, W23, 0x2
	0x03BAFDEC CMP W8, 0x3
	0x03BAFDF0 STR W31, [X31 + 0x8]
	0x03BAFDF4 STR X31, [X31]
	0x03BAFDF8 B.NE 0x3BAFE98
	0x03BAFDFC LDR W8, [X22 + 0x18]
	0x03BAFE00 CBZ W8, 0x3BAFE84
	0x03BAFE04 LDR X0, [X22 + 0x40]
	0x03BAFE08 CBZ X0, 0x3BAFEB0
	0x03BAFE0C ADRP X23, 0x5AD000
	0x03BAFE10 LDR X23, [X23 + 0xE90]
	0x03BAFE14 MOV X1, X21
	0x03BAFE18 LDR X2, [X23]
	0x03BAFE1C BL 0x2AC3F28
	0x03BAFE20 STP S0, S1, [X31 + 0x20]
	0x03BAFE24 STR S2, [X31 + 0x28]
	0x03BAFE28 LDR X0, [X22 + 0x48]
	0x03BAFE2C CBZ X0, 0x3BAFEB0
	0x03BAFE30 LDR X2, [X23]
	0x03BAFE34 MOV X1, X21
	0x03BAFE38 BL 0x2AC3F28
	0x03BAFE3C ADD X2, X31, 0x20
	0x03BAFE40 MOV X0, X22
	0x03BAFE44 MOV X1, X21
	0x03BAFE48 STP S0, S1, [X31 + 0x10]
	0x03BAFE4C STR S2, [X31 + 0x18]
	0x03BAFE50 BL 0x3BAFF60
	0x03BAFE54 STP S0, S1, [X31]
	0x03BAFE58 STR S2, [X31 + 0x8]
	0x03BAFE5C LDR X1, [X22 + 0x38]
	0x03BAFE60 LDR V0, [X22 + 0x14]
	0x03BAFE64 ADD X2, X31, 0x20
	0x03BAFE68 ADD X3, X31, 0x10
	0x03BAFE6C ADD X4, X31, 0x0
	0x03BAFE70 MOV X0, X21
	0x03BAFE74 MOV X5, X19
	0x03BAFE78 MOV X6, X20
	0x03BAFE7C BL 0x3BB0094
	0x03BAFE80 B 0x3BAFE98
	0x03BAFE84 LDR X1, [X22 + 0x38]
	0x03BAFE88 LDR V0, [X22 + 0x14]
	0x03BAFE8C MOV X0, X21
	0x03BAFE90 MOV X2, X19
	0x03BAFE94 BL 0x3BAFEB4
	0x03BAFE98 LDP X20, X19, [X31 + 0x60]
	0x03BAFE9C LDP X22, X21, [X31 + 0x50]
	0x03BAFEA0 LDP X24, X23, [X31 + 0x40]
	0x03BAFEA4 LDR X30, [X31 + 0x30]
	0x03BAFEA8 ADD X31, X31, 0x70
	0x03BAFEAC RET
	0x03BAFEB0 BL 0x1C16F20
	0x03BAFEB4 SUB X31, X31, 0x60
	0x03BAFEB8 STR D8, [X31 + 0x40]
	0x03BAFEBC STP X30, X19, [X31 + 0x50]
	0x03BAFEC0 MOV X19, X2
	0x03BAFEC4 ADD X2, X31, 0x20
	0x03BAFEC8 MOV V8.16B, V0.16B
	0x03BAFECC STP X31, X31, [X31 + 0x20]
	0x03BAFED0 STR W31, [X31 + 0x38]
	0x03BAFED4 STR X31, [X31 + 0x30]
	0x03BAFED8 STR W31, [X31 + 0x18]
	0x03BAFEDC STR X31, [X31 + 0x10]
	0x03BAFEE0 STR W31, [X31 + 0x8]
	0x03BAFEE4 STR X31, [X31]
	0x03BAFEE8 BL 0x3BB0200
	0x03BAFEEC TBZ X0, 0x0, 0x3BAFF50
	0x03BAFEF0 LDP S0, S1, [X19]
	0x03BAFEF4 LDR V2, [X19 + 0x8]
	0x03BAFEF8 MOV X0, X31
	0x03BAFEFC BL 0x3887BE4
	0x03BAFF00 LDP S3, S4, [X31 + 0x20]
	0x03BAFF04 LDR V5, [X31 + 0x28]
	0x03BAFF08 STP S0, S1, [X31 + 0x10]
	0x03BAFF0C STR S2, [X31 + 0x18]
	0x03BAFF10 MOV V0.16B, V3.16B
	0x03BAFF14 MOV V1.16B, V4.16B
	0x03BAFF18 MOV V2.16B, V5.16B
	0x03BAFF1C MOV X0, X31
	0x03BAFF20 BL 0x3887BE4
	0x03BAFF24 STP S0, S1, [X31]
	0x03BAFF28 ADD X0, X31, 0x10
	0x03BAFF2C ADD X1, X31, 0x0
	0x03BAFF30 MOV V0.16B, V8.16B
	0x03BAFF34 STR S2, [X31 + 0x8]
	0x03BAFF38 BL 0x3BB0580
	0x03BAFF3C TBZ X0, 0x0, 0x3BAFF50
	0x03BAFF40 LDUR V0, [X31 + 0x2C]
	0x03BAFF44 LDR V1, [X31 + 0x2]
	0x03BAFF48 STUR V0, [X19 + 0xC]
	0x03BAFF4C STR V1, [X19]
	0x03BAFF50 LDP X30, X19, [X31 + 0x50]
	0x03BAFF54 LDR V8, [X31 + 0x40]
	0x03BAFF58 ADD X31, X31, 0x60
	0x03BAFF5C RET
	0x03BAFF60 SUB X31, X31, 0x70
	0x03BAFF64 STR X30, [X31 + 0x40]
	0x03BAFF68 STP X22, X21, [X31 + 0x50]
	0x03BAFF6C STP X20, X19, [X31 + 0x60]
	0x03BAFF70 ADRP X22, 0x833000
	0x03BAFF74 LDRB W8, [X22 + 0xCBD]
	0x03BAFF78 MOV X19, X2
	0x03BAFF7C MOV X21, X1
	0x03BAFF80 MOV X20, X0
	0x03BAFF84 TBNZ X8, 0x0, 0x3BAFFA8
	0x03BAFF88 ADRP X0, 0x5AD000
	0x03BAFF8C LDR X0, [X0 + 0xE98]
	0x03BAFF90 BL 0x1C16CF4
	0x03BAFF94 ADRP X0, 0x54B000
	0x03BAFF98 LDR X0, [X0 + 0x4B8]
	0x03BAFF9C BL 0x1C16CF4
	0x03BAFFA0 MOVZ W8, 0x1
	0x03BAFFA4 STRB W8, [X22 + 0xCBD]
	0x03BAFFA8 STR W31, [X31 + 0x38]
	0x03BAFFAC STR X31, [X31 + 0x30]
	0x03BAFFB0 STR W31, [X31 + 0x28]
	0x03BAFFB4 STR X31, [X31 + 0x20]
	0x03BAFFB8 STR W31, [X31 + 0x18]
	0x03BAFFBC STR X31, [X31 + 0x10]
	0x03BAFFC0 STR W31, [X31 + 0x8]
	0x03BAFFC4 STR X31, [X31]
	0x03BAFFC8 LDR W8, [X20 + 0x18]
	0x03BAFFCC CMP W8, 0x2
	0x03BAFFD0 B.EQ 0x3BB000C
	0x03BAFFD4 CMP W8, 0x1
	0x03BAFFD8 B.NE 0x3BB0074
	0x03BAFFDC LDUR V0, [X20 + 0x1C]
	0x03BAFFE0 LDR V1, [X20 + 0x24]
	0x03BAFFE4 ADD X1, X31, 0x20
	0x03BAFFE8 ADD X2, X31, 0x30
	0x03BAFFEC MOV X0, X19
	0x03BAFFF0 MOV X3, X31
	0x03BAFFF4 STR D0, [X31 + 0x20]
	0x03BAFFF8 STR S1, [X31 + 0x28]
	0x03BAFFFC BL 0x3B87CD0
	0x03BB0000 LDR V0, [X31 + 0x30]
	0x03BB0004 ADD X19, X31, 0x30
	0x03BB0008 B 0x3BB0078
	0x03BB000C LDR X0, [X20 + 0x48]
	0x03BB0010 CBZ X0, 0x3BB0090
	0x03BB0014 ADRP X8, 0x5AC000
	0x03BB0018 LDR X8, [X8 + 0xE98]
	0x03BB001C ADD X2, X31, 0x10
	0x03BB0020 MOV X1, X21
	0x03BB0024 LDR X3, [X8]
	0x03BB0028 BL 0x2AC5A14
	0x03BB002C TBZ X0, 0x0, 0x3BB0074
	0x03BB0030 ADRP X8, 0x54A000
	0x03BB0034 LDR V0, [X20 + 0x28]
	0x03BB0038 LDR V1, [X20 + 0x30]
	0x03BB003C LDR X8, [X8 + 0x4B8]
	0x03BB0040 ADD X0, X31, 0x10
	0x03BB0044 STR D0, [X31 + 0x20]
	0x03BB0048 STR S1, [X31 + 0x28]
	0x03BB004C LDR X8, [X8]
	0x03BB0050 ADD X1, X31, 0x20
	0x03BB0054 ADD X3, X31, 0x0
	0x03BB0058 MOV X2, X19
	0x03BB005C LDR X8, [X8 + 0xB8]
	0x03BB0060 LDR V0, [X8]
	0x03BB0064 BL 0x3BB0740
	0x03BB0068 LDR V0, [X31]
	0x03BB006C ADD X19, X31, 0x0
	0x03BB0070 B 0x3BB0078
	0x03BB0074 LDR V0, [X19]
	0x03BB0078 LDP S1, S2, [X19 + 0x4]
	0x03BB007C LDP X20, X19, [X31 + 0x60]
	0x03BB0080 LDP X22, X21, [X31 + 0x50]
	0x03BB0084 LDR X30, [X31 + 0x40]
	0x03BB0088 ADD X31, X31, 0x70
	0x03BB008C RET
	0x03BB0090 BL 0x1C16F20
	0x03BB0094 SUB X31, X31, 0x90
	0x03BB0098 STR D8, [X31 + 0x50]
	0x03BB009C STR X30, [X31 + 0x58]
	0x03BB00A0 STP X24, X23, [X31 + 0x60]
	0x03BB00A4 STP X22, X21, [X31 + 0x70]
	0x03BB00A8 STP X20, X19, [X31 + 0x80]
	0x03BB00AC MOV X22, X2
	0x03BB00B0 ADD X2, X31, 0x30
	0x03BB00B4 MOV X19, X6
	0x03BB00B8 MOV X21, X5
	0x03BB00BC MOV X20, X4
	0x03BB00C0 MOV X23, X3
	0x03BB00C4 MOV V8.16B, V0.16B
	0x03BB00C8 MOV X24, X0
	0x03BB00CC STP X31, X31, [X31 + 0x30]
	0x03BB00D0 STR W31, [X31 + 0x48]
	0x03BB00D4 STR X31, [X31 + 0x40]
	0x03BB00D8 STR W31, [X31 + 0x28]
	0x03BB00DC STR X31, [X31 + 0x20]
	0x03BB00E0 STR W31, [X31 + 0x18]
	0x03BB00E4 STR X31, [X31 + 0x10]
	0x03BB00E8 STR W31, [X31 + 0x8]
	0x03BB00EC STR X31, [X31]
	0x03BB00F0 BL 0x3BB0200
	0x03BB00F4 TBZ X0, 0x0, 0x3BB01E0
	0x03BB00F8 CBZ X24, 0x3BB01FC
	0x03BB00FC MOV X0, X24
	0x03BB0100 MOV X1, X31
	0x03BB0104 BL 0x3C32E90
	0x03BB0108 CBZ X0, 0x3BB01FC
	0x03BB010C MOV X1, X31
	0x03BB0110 BL 0x3C3F58C
	0x03BB0114 ADRP X8, 0xFFFFFFFFFCF3A000
	0x03BB0118 STP S0, S1, [X31 + 0x20]
	0x03BB011C LDR V0, [X8 + 0x330]
	0x03BB0120 ADD X0, X31, 0x20
	0x03BB0124 ADD X1, X31, 0x30
	0x03BB0128 MOV X2, X31
	0x03BB012C STR S2, [X31 + 0x28]
	0x03BB0130 BL 0x3B877F8
	0x03BB0134 MOV W24, W0
	0x03BB0138 MOV X0, X22
	0x03BB013C MOV X1, X20
	0x03BB0140 MOV X2, X23
	0x03BB0144 MOV V0.16B, V8.16B
	0x03BB0148 BL 0x3BB05F4
	0x03BB014C LDP S3, S1, [X21]
	0x03BB0150 LDR V2, [X21 + 0x8]
	0x03BB0154 ANDS W31, W24, 0x1
	0x03BB0158 FCSEL S8, S0, S8, NE
	0x03BB015C MOV V0.16B, V3.16B
	0x03BB0160 MOV X0, X31
	0x03BB0164 BL 0x3887BE4
	0x03BB0168 LDP S3, S4, [X31 + 0x30]
	0x03BB016C LDR V5, [X31 + 0x38]
	0x03BB0170 STP S0, S1, [X31 + 0x10]
	0x03BB0174 STR S2, [X31 + 0x18]
	0x03BB0178 MOV V0.16B, V3.16B
	0x03BB017C MOV V1.16B, V4.16B
	0x03BB0180 MOV V2.16B, V5.16B
	0x03BB0184 MOV X0, X31
	0x03BB0188 BL 0x3887BE4
	0x03BB018C STP S0, S1, [X31]
	0x03BB0190 ADD X0, X31, 0x10
	0x03BB0194 ADD X1, X31, 0x0
	0x03BB0198 MOV V0.16B, V8.16B
	0x03BB019C STR S2, [X31 + 0x8]
	0x03BB01A0 BL 0x3BB0580
	0x03BB01A4 TBZ X0, 0x0, 0x3BB01C8
	0x03BB01A8 LDUR V0, [X31 + 0x3C]
	0x03BB01AC LDR V1, [X31 + 0x3]
	0x03BB01B0 STUR V0, [X21 + 0xC]
	0x03BB01B4 STR V1, [X21]
	0x03BB01B8 TBZ X24, 0x0, 0x3BB01E0
	0x03BB01BC LDP S0, S1, [X20]
	0x03BB01C0 LDR V2, [X20 + 0x8]
	0x03BB01C4 B 0x3BB01D0
	0x03BB01C8 LDP S0, S1, [X22]
	0x03BB01CC LDR V2, [X22 + 0x8]
	0x03BB01D0 MOV X0, X31
	0x03BB01D4 BL 0x3887BE0
	0x03BB01D8 STP S0, S1, [X19]
	0x03BB01DC STR S2, [X19 + 0x8]
	0x03BB01E0 LDP X20, X19, [X31 + 0x80]
	0x03BB01E4 LDP X22, X21, [X31 + 0x70]
	0x03BB01E8 LDP X24, X23, [X31 + 0x60]
	0x03BB01EC LDR X30, [X31 + 0x58]
	0x03BB01F0 LDR V8, [X31 + 0x50]
	0x03BB01F4 ADD X31, X31, 0x90
	0x03BB01F8 RET
	0x03BB01FC BL 0x1C16F20
	0x03BB0200 SUB X31, X31, 0x110
	0x03BB0204 STP D11, D10, [X31 + 0xB0]
	0x03BB0208 STP D9, D8, [X31 + 0xC0]
	0x03BB020C STR X29, [X31 + 0xD0]
	0x03BB0210 STP X30, X23, [X31 + 0xE0]
	0x03BB0214 STP X22, X21, [X31 + 0xF0]
	0x03BB0218 STP X20, X19, [X31 + 0x100]
	0x03BB021C ADRP X23, 0x832000
	0x03BB0220 ADRP X22, 0x56B000
	0x03BB0224 LDRB W8, [X23 + 0xCBE]
	0x03BB0228 LDR X22, [X22 + 0x610]
	0x03BB022C MOV X19, X2
	0x03BB0230 MOV X20, X1
	0x03BB0234 MOV X21, X0
	0x03BB0238 TBNZ X8, 0x0, 0x3BB0274
	0x03BB023C ADRP X0, 0x5AA000
	0x03BB0240 LDR X0, [X0 + 0x2F8]
	0x03BB0244 BL 0x1C16CF4
	0x03BB0248 ADRP X0, 0x543000
	0x03BB024C LDR X0, [X0 + 0x598]
	0x03BB0250 BL 0x1C16CF4
	0x03BB0254 ADRP X0, 0x56B000
	0x03BB0258 LDR X0, [X0 + 0x610]
	0x03BB025C BL 0x1C16CF4
	0x03BB0260 ADRP X0, 0x5AA000
	0x03BB0264 LDR X0, [X0 + 0x6C0]
	0x03BB0268 BL 0x1C16CF4
	0x03BB026C MOVZ W8, 0x1
	0x03BB0270 STRB W8, [X23 + 0xCBE]
	0x03BB0274 LDR X0, [X22]
	0x03BB0278 STR W31, [X31 + 0xA8]
	0x03BB027C STP X31, X31, [X31 + 0x98]
	0x03BB0280 STR X31, [X31 + 0x90]
	0x03BB0284 STR W31, [X31 + 0x88]
	0x03BB0288 STP X31, X31, [X31 + 0x78]
	0x03BB028C STR X31, [X31 + 0x70]
	0x03BB0290 STR W31, [X31 + 0x68]
	0x03BB0294 STP X31, X31, [X31 + 0x58]
	0x03BB0298 STP X31, X31, [X31 + 0x48]
	0x03BB029C STR X31, [X31 + 0x40]
	0x03BB02A0 LDR W8, [X0 + 0xE0]
	0x03BB02A4 CBNZ W8, 0x3BB02AC
	0x03BB02A8 BL 0x1C16DFC
	0x03BB02AC ADRP X22, 0x543000
	0x03BB02B0 LDR X22, [X22 + 0x598]
	0x03BB02B4 ADD X8, X31, 0x0
	0x03BB02B8 MOV X0, X31
	0x03BB02BC BL 0x3C3E05C
	0x03BB02C0 LDUR V0, [X31 + 0xC]
	0x03BB02C4 LDR V1, [X31]
	0x03BB02C8 STUR V0, [X31 + 0x2C]
	0x03BB02CC STR V1, [X31 + 0x2]
	0x03BB02D0 LDUR V0, [X31 + 0x2C]
	0x03BB02D4 LDR V1, [X31 + 0x2]
	0x03BB02D8 STUR V0, [X19 + 0xC]
	0x03BB02DC STR V1, [X19]
	0x03BB02E0 CBZ X21, 0x3BB0320
	0x03BB02E4 ADRP X8, 0x5AA000
	0x03BB02E8 LDR X8, [X8 + 0x6C0]
	0x03BB02EC LDR X9, [X21]
	0x03BB02F0 LDR X8, [X8]
	0x03BB02F4 LDRB W11, [X9 + 0x130]
	0x03BB02F8 LDRB W10, [X8 + 0x130]
	0x03BB02FC CMP W11, W10
	0x03BB0300 B.CS 0x3BB030C
	0x03BB0304 MOV X21, X31
	0x03BB0308 B 0x3BB0320
	0x03BB030C LDR X9, [X9 + 0xC8]
	0x03BB0310 ADD X9, X9, X10, 0x3, LSL
	0x03BB0314 LDUR X9, [X9 - 0x8]
	0x03BB0318 CMP X9, X8
	0x03BB031C CSEL X21, X21, X31, EQ
	0x03BB0320 LDR X0, [X22]
	0x03BB0324 LDR W8, [X0 + 0xE0]
	0x03BB0328 CBNZ W8, 0x3BB0330
	0x03BB032C BL 0x1C16DFC
	0x03BB0330 MOV X0, X21
	0x03BB0334 MOV X1, X31
	0x03BB0338 MOV X2, X31
	0x03BB033C BL 0x3C3883C
	0x03BB0340 TBZ X0, 0x0, 0x3BB034C
	0x03BB0344 MOV W0, W31
	0x03BB0348 B 0x3BB055C
	0x03BB034C CBZ X20, 0x3BB057C
	0x03BB0350 ADRP X10, 0x5AA000
	0x03BB0354 LDR X8, [X20]
	0x03BB0358 LDR X10, [X10 + 0x2F8]
	0x03BB035C LDRH W9, [X8 + 0x12E]
	0x03BB0360 LDR X1, [X10]
	0x03BB0364 CBZ X9, 0x3BB0388
	0x03BB0368 LDR X10, [X8 + 0xB0]
	0x03BB036C ADD X10, X10, 0x8
	0x03BB0370 LDUR X11, [X10 - 0x8]
	0x03BB0374 CMP X11, X1
	0x03BB0378 B.EQ 0x3BB0398
	0x03BB037C SUBS X9, X9, 0x1
	0x03BB0380 ADD X10, X10, 0x10
	0x03BB0384 B.NE 0x3BB0370
	0x03BB0388 MOVZ W2, 0x6
	0x03BB038C MOV X0, X20
	0x03BB0390 BL 0x1C5C788
	0x03BB0394 B 0x3BB03A8
	0x03BB0398 LDR W9, [X10]
	0x03BB039C ADD W9, W9, 0x6
	0x03BB03A0 ADD X8, X8, W9, 0x4, SXTW
	0x03BB03A4 ADD X0, X8, 0x138
	0x03BB03A8 LDP X8, X2, [X0]
	0x03BB03AC MOV X0, X20
	0x03BB03B0 MOV X1, X21
	0x03BB03B4 BLR X8
	0x03BB03B8 CBZ X21, 0x3BB057C
	0x03BB03BC MOV X23, X0
	0x03BB03C0 MOV X0, X21
	0x03BB03C4 MOV X1, X31
	0x03BB03C8 BL 0x3C32E90
	0x03BB03CC LDR X8, [X21]
	0x03BB03D0 MOV X22, X0
	0x03BB03D4 MOV X0, X21
	0x03BB03D8 MOV X1, X20
	0x03BB03DC LDR X9, [X8 + 0x5A8]
	0x03BB03E0 LDR X2, [X8 + 0x5B0]
	0x03BB03E4 BLR X9
	0x03BB03E8 CBZ X22, 0x3BB057C
	0x03BB03EC MOV X20, X0
	0x03BB03F0 MOV X0, X22
	0x03BB03F4 MOV X1, X31
	0x03BB03F8 BL 0x3C3F58C
	0x03BB03FC CBZ X20, 0x3BB057C
	0x03BB0400 MOV X0, X20
	0x03BB0404 MOV X1, X31
	0x03BB0408 MOV V8.16B, V0.16B
	0x03BB040C MOV V9.16B, V1.16B
	0x03BB0410 MOV V11.16B, V2.16B
	0x03BB0414 BL 0x3C3F58C
	0x03BB0418 LDRB W8, [X21 + 0x20C]
	0x03BB041C FSUB S10, S8, S0
	0x03BB0420 FSUB S9, S9, S1
	0x03BB0424 FSUB S8, S11, S2
	0x03BB0428 CBZ W8, 0x3BB0534
	0x03BB042C MOV X0, X20
	0x03BB0430 MOV V0.16B, V10.16B
	0x03BB0434 MOV V1.16B, V9.16B
	0x03BB0438 MOV V2.16B, V8.16B
	0x03BB043C MOV X1, X31
	0x03BB0440 BL 0x3C408CC
	0x03BB0444 CBZ X23, 0x3BB057C
	0x03BB0448 MOV X0, X23
	0x03BB044C MOV X1, X31
	0x03BB0450 MOV V8.16B, V0.16B
	0x03BB0454 MOV V9.16B, V1.16B
	0x03BB0458 MOV V10.16B, V2.16B
	0x03BB045C BL 0x3C3F58C
	0x03BB0460 MOV X0, X31
	0x03BB0464 BL 0x3887BE4
	0x03BB0468 MOV X0, X23
	0x03BB046C MOV X1, X31
	0x03BB0470 STP S0, S1, [X31 + 0x80]
	0x03BB0474 STR S2, [X31 + 0x88]
	0x03BB0478 BL 0x3C3DEB4
	0x03BB047C MOV X0, X31
	0x03BB0480 BL 0x38BD218
	0x03BB0484 STP S0, S1, [X31 + 0x70]
	0x03BB0488 STP S2, S3, [X31 + 0x78]
	0x03BB048C MOV V0.16B, V8.16B
	0x03BB0490 MOV V1.16B, V9.16B
	0x03BB0494 MOV V2.16B, V10.16B
	0x03BB0498 MOV X0, X31
	0x03BB049C BL 0x3887BE4
	0x03BB04A0 MOV X0, X22
	0x03BB04A4 MOV X1, X31
	0x03BB04A8 STP S0, S1, [X31 + 0x60]
	0x03BB04AC STR S2, [X31 + 0x68]
	0x03BB04B0 BL 0x3C3DEB4
	0x03BB04B4 MOV X0, X31
	0x03BB04B8 BL 0x38BD218
	0x03BB04BC MOV X0, X20
	0x03BB04C0 MOV X1, X31
	0x03BB04C4 STP S0, S1, [X31 + 0x50]
	0x03BB04C8 STP S2, S3, [X31 + 0x58]
	0x03BB04CC BL 0x3C3DEB4
	0x03BB04D0 MOV X0, X31
	0x03BB04D4 BL 0x38BD218
	0x03BB04D8 ADD X0, X31, 0x80
	0x03BB04DC ADD X1, X31, 0x70
	0x03BB04E0 ADD X2, X31, 0x60
	0x03BB04E4 ADD X3, X31, 0x50
	0x03BB04E8 ADD X4, X31, 0x40
	0x03BB04EC ADD X5, X31, 0xA0
	0x03BB04F0 ADD X6, X31, 0x90
	0x03BB04F4 STP S0, S1, [X31 + 0x40]
	0x03BB04F8 STP S2, S3, [X31 + 0x48]
	0x03BB04FC BL 0x3BB07CC
	0x03BB0500 LDP S0, S1, [X31 + 0xA0]
	0x03BB0504 LDR V2, [X31 + 0xA8]
	0x03BB0508 MOV X0, X31
	0x03BB050C BL 0x3887BE0
	0x03BB0510 STP S0, S1, [X19]
	0x03BB0514 STR S2, [X19 + 0x8]
	0x03BB0518 LDP S0, S1, [X31 + 0x90]
	0x03BB051C LDP S2, S3, [X31 + 0x98]
	0x03BB0520 MOV X0, X31
	0x03BB0524 BL 0x38BD214
	0x03BB0528 STP S0, S1, [X19 + 0xC]
	0x03BB052C STP S2, S3, [X19 + 0x14]
	0x03BB0530 B 0x3BB0558
	0x03BB0534 CBZ X23, 0x3BB057C
	0x03BB0538 MOV X0, X23
	0x03BB053C MOV X1, X31
	0x03BB0540 BL 0x3C3F58C
	0x03BB0544 FADD S0, S10, S0
	0x03BB0548 FADD S1, S9, S1
	0x03BB054C FADD S2, S8, S2
	0x03BB0550 STP S0, S1, [X19]
	0x03BB0554 STR S2, [X19 + 0x8]
	0x03BB0558 MOVZ W0, 0x1
	0x03BB055C LDP X20, X19, [X31 + 0x100]
	0x03BB0560 LDP X22, X21, [X31 + 0xF0]
	0x03BB0564 LDP X30, X23, [X31 + 0xE0]
	0x03BB0568 LDR X29, [X31 + 0xD0]
	0x03BB056C LDP D9, D8, [X31 + 0xC0]
	0x03BB0570 LDP D11, D10, [X31 + 0xB0]
	0x03BB0574 ADD X31, X31, 0x110
	0x03BB0578 RET
	0x03BB057C BL 0x1C16F20
	0x03BB0580 STR D8, [X31 - 0x30]!
	0x03BB0584 STR X30, [X31 + 0x8]
	0x03BB0588 STP X22, X21, [X31 + 0x10]
	0x03BB058C STP X20, X19, [X31 + 0x20]
	0x03BB0590 ADRP X21, 0x832000
	0x03BB0594 ADRP X22, 0x5AC000
	0x03BB0598 LDRB W8, [X21 + 0xCC1]
	0x03BB059C LDR X22, [X22 + 0xEA0]
	0x03BB05A0 MOV V8.16B, V0.16B
	0x03BB05A4 MOV X19, X1
	0x03BB05A8 MOV X20, X0
	0x03BB05AC TBNZ X8, 0x0, 0x3BB05C4
	0x03BB05B0 ADRP X0, 0x5AC000
	0x03BB05B4 LDR X0, [X0 + 0xEA0]
	0x03BB05B8 BL 0x1C16CF4
	0x03BB05BC MOVZ W8, 0x1
	0x03BB05C0 STRB W8, [X21 + 0xCC1]
	0x03BB05C4 LDR X0, [X22]
	0x03BB05C8 LDR W8, [X0 + 0xE0]
	0x03BB05CC CBNZ W8, 0x3BB05D4
	0x03BB05D0 BL 0x1C16DFC
	0x03BB05D4 MOV X0, X20
	0x03BB05D8 MOV X1, X19
	0x03BB05DC LDP X20, X19, [X31 + 0x20]
	0x03BB05E0 LDP X22, X21, [X31 + 0x10]
	0x03BB05E4 LDR X30, [X31 + 0x8]
	0x03BB05E8 MOV V0.16B, V8.16B
	0x03BB05EC LDR V8, [X31], #0x30
	0x03BB05F0 B 0x3BB0B0C
	0x03BB05F4 STR D8, [X31 - 0x40]!
	0x03BB05F8 STP X30, X23, [X31 + 0x10]
	0x03BB05FC STP X22, X21, [X31 + 0x20]
	0x03BB0600 STP X20, X19, [X31 + 0x30]
	0x03BB0604 ADRP X22, 0x832000
	0x03BB0608 ADRP X23, 0x5AC000
	0x03BB060C LDRB W8, [X22 + 0xCBF]
	0x03BB0610 LDR X23, [X23 + 0xEA8]
	0x03BB0614 MOV V8.16B, V0.16B
	0x03BB0618 MOV X19, X2
	0x03BB061C MOV X20, X1
	0x03BB0620 MOV X21, X0
	0x03BB0624 TBNZ X8, 0x0, 0x3BB063C
	0x03BB0628 ADRP X0, 0x5AC000
	0x03BB062C LDR X0, [X0 + 0xEA8]
	0x03BB0630 BL 0x1C16CF4
	0x03BB0634 MOVZ W8, 0x1
	0x03BB0638 STRB W8, [X22 + 0xCBF]
	0x03BB063C LDR X0, [X23]
	0x03BB0640 LDR W8, [X0 + 0xE0]
	0x03BB0644 CBNZ W8, 0x3BB064C
	0x03BB0648 BL 0x1C16DFC
	0x03BB064C MOV X0, X21
	0x03BB0650 MOV X1, X20
	0x03BB0654 MOV X2, X19
	0x03BB0658 LDP X20, X19, [X31 + 0x30]
	0x03BB065C LDP X22, X21, [X31 + 0x20]
	0x03BB0660 LDP X30, X23, [X31 + 0x10]
	0x03BB0664 MOV V0.16B, V8.16B
	0x03BB0668 LDR V8, [X31], #0x40
	0x03BB066C B 0x3BB0868
	0x03BB0670 SUB X31, X31, 0x30
	0x03BB0674 STP X30, X21, [X31 + 0x10]
	0x03BB0678 STP X20, X19, [X31 + 0x20]
	0x03BB067C ADRP X21, 0x832000
	0x03BB0680 LDRB W8, [X21 + 0xCBB]
	0x03BB0684 MOV X19, X1
	0x03BB0688 MOV X20, X0
	0x03BB068C TBNZ X8, 0x0, 0x3BB06B0
	0x03BB0690 ADRP X0, 0x5AC000
	0x03BB0694 LDR X0, [X0 + 0xEB0]
	0x03BB0698 BL 0x1C16CF4
	0x03BB069C ADRP X0, 0x5AC000
	0x03BB06A0 LDR X0, [X0 + 0xE98]
	0x03BB06A4 BL 0x1C16CF4
	0x03BB06A8 MOVZ W8, 0x1
	0x03BB06AC STRB W8, [X21 + 0xCBB]
	0x03BB06B0 STR W31, [X31 + 0x8]
	0x03BB06B4 STR X31, [X31]
	0x03BB06B8 LDR X0, [X20 + 0x40]
	0x03BB06BC CBZ X0, 0x3BB073C
	0x03BB06C0 ADRP X8, 0x5AC000
	0x03BB06C4 LDR X8, [X8 + 0xE98]
	0x03BB06C8 ADD X2, X31, 0x0
	0x03BB06CC MOV X1, X19
	0x03BB06D0 LDR X3, [X8]
	0x03BB06D4 BL 0x2AC5A14
	0x03BB06D8 TBZ X0, 0x0, 0x3BB072C
	0x03BB06DC LDP S0, S1, [X31]
	0x03BB06E0 LDR V2, [X31 + 0x8]
	0x03BB06E4 MOV X0, X31
	0x03BB06E8 BL 0x3887BE0
	0x03BB06EC CBZ X19, 0x3BB073C
	0x03BB06F0 MOV X0, X19
	0x03BB06F4 MOV X1, X31
	0x03BB06F8 BL 0x3B40980
	0x03BB06FC LDR X0, [X20 + 0x40]
	0x03BB0700 CBZ X0, 0x3BB073C
	0x03BB0704 ADRP X21, 0x5AC000
	0x03BB0708 LDR X21, [X21 + 0xEB0]
	0x03BB070C MOV X1, X19
	0x03BB0710 LDR X2, [X21]
	0x03BB0714 BL 0x2AC5404
	0x03BB0718 LDR X0, [X20 + 0x48]
	0x03BB071C CBZ X0, 0x3BB073C
	0x03BB0720 LDR X2, [X21]
	0x03BB0724 MOV X1, X19
	0x03BB0728 BL 0x2AC5404
	0x03BB072C LDP X20, X19, [X31 + 0x20]
	0x03BB0730 LDP X30, X21, [X31 + 0x10]
	0x03BB0734 ADD X31, X31, 0x30
	0x03BB0738 RET
	0x03BB073C BL 0x1C16F20
	0x03BB0740 STR D8, [X31 - 0x40]!
	0x03BB0744 STR X30, [X31 + 0x8]
	0x03BB0748 STP X24, X23, [X31 + 0x10]
	0x03BB074C STP X22, X21, [X31 + 0x20]
	0x03BB0750 STP X20, X19, [X31 + 0x30]
	0x03BB0754 ADRP X23, 0x832000
	0x03BB0758 ADRP X24, 0x5AC000
	0x03BB075C LDRB W8, [X23 + 0xCC2]
	0x03BB0760 LDR X24, [X24 + 0xEB8]
	0x03BB0764 MOV X19, X3
	0x03BB0768 MOV V8.16B, V0.16B
	0x03BB076C MOV X20, X2
	0x03BB0770 MOV X21, X1
	0x03BB0774 MOV X22, X0
	0x03BB0778 TBNZ X8, 0x0, 0x3BB0790
	0x03BB077C ADRP X0, 0x5AC000
	0x03BB0780 LDR X0, [X0 + 0xEB8]
	0x03BB0784 BL 0x1C16CF4
	0x03BB0788 MOVZ W8, 0x1
	0x03BB078C STRB W8, [X23 + 0xCC2]
	0x03BB0790 LDR X0, [X24]
	0x03BB0794 LDR W8, [X0 + 0xE0]
	0x03BB0798 CBNZ W8, 0x3BB07A0
	0x03BB079C BL 0x1C16DFC
	0x03BB07A0 MOV X0, X22
	0x03BB07A4 MOV X1, X21
	0x03BB07A8 MOV X2, X20
	0x03BB07AC MOV X3, X19
	0x03BB07B0 LDP X20, X19, [X31 + 0x30]
	0x03BB07B4 LDP X22, X21, [X31 + 0x20]
	0x03BB07B8 LDP X24, X23, [X31 + 0x10]
	0x03BB07BC LDR X30, [X31 + 0x8]
	0x03BB07C0 MOV V0.16B, V8.16B
	0x03BB07C4 LDR V8, [X31], #0x40
	0x03BB07C8 B 0x3BB0C08
	0x03BB07CC STP X30, X27, [X31 - 0x50]!
	0x03BB07D0 STP X26, X25, [X31 + 0x10]
	0x03BB07D4 STP X24, X23, [X31 + 0x20]
	0x03BB07D8 STP X22, X21, [X31 + 0x30]
	0x03BB07DC STP X20, X19, [X31 + 0x40]
	0x03BB07E0 ADRP X26, 0x832000
	0x03BB07E4 ADRP X27, 0x5AC000
	0x03BB07E8 LDRB W8, [X26 + 0xCC0]
	0x03BB07EC LDR X27, [X27 + 0xEC0]
	0x03BB07F0 MOV X19, X6
	0x03BB07F4 MOV X20, X5
	0x03BB07F8 MOV X21, X4
	0x03BB07FC MOV X22, X3
	0x03BB0800 MOV X23, X2
	0x03BB0804 MOV X24, X1
	0x03BB0808 MOV X25, X0
	0x03BB080C TBNZ X8, 0x0, 0x3BB0824
	0x03BB0810 ADRP X0, 0x5AC000
	0x03BB0814 LDR X0, [X0 + 0xEC0]
	0x03BB0818 BL 0x1C16CF4
	0x03BB081C MOVZ W8, 0x1
	0x03BB0820 STRB W8, [X26 + 0xCC0]
	0x03BB0824 LDR X0, [X27]
	0x03BB0828 LDR W8, [X0 + 0xE0]
	0x03BB082C CBNZ W8, 0x3BB0834
	0x03BB0830 BL 0x1C16DFC
	0x03BB0834 MOV X0, X25
	0x03BB0838 MOV X1, X24
	0x03BB083C MOV X2, X23
	0x03BB0840 MOV X3, X22
	0x03BB0844 MOV X4, X21
	0x03BB0848 MOV X5, X20
	0x03BB084C MOV X6, X19
	0x03BB0850 LDP X20, X19, [X31 + 0x40]
	0x03BB0854 LDP X22, X21, [X31 + 0x30]
	0x03BB0858 LDP X24, X23, [X31 + 0x20]
	0x03BB085C LDP X26, X25, [X31 + 0x10]
	0x03BB0860 LDP X30, X27, [X31], #0x50
	0x03BB0864 B 0x3BB09FC
	0x03BB0868 SUB X31, X31, 0x50
	0x03BB086C STP D9, D8, [X31 + 0x10]
	0x03BB0870 STP X30, X23, [X31 + 0x20]
	0x03BB0874 STP X22, X21, [X31 + 0x30]
	0x03BB0878 STP X20, X19, [X31 + 0x40]
	0x03BB087C ADRP X22, 0x832000
	0x03BB0880 ADRP X23, 0x56B000
	0x03BB0884 LDRB W8, [X22 + 0xCC8]
	0x03BB0888 LDR X23, [X23 + 0x848]
	0x03BB088C MOV V8.16B, V0.16B
	0x03BB0890 MOV X19, X2
	0x03BB0894 MOV X20, X1
	0x03BB0898 MOV X21, X0
	0x03BB089C TBNZ X8, 0x0, 0x3BB08C0
	0x03BB08A0 ADRP X0, 0x56B000
	0x03BB08A4 LDR X0, [X0 + 0x848]
	0x03BB08A8 BL 0x1C16CF4
	0x03BB08AC ADRP X0, 0x5AC000
	0x03BB08B0 LDR X0, [X0 + 0xEA8]
	0x03BB08B4 BL 0x1C16CF4
	0x03BB08B8 MOVZ W8, 0x1
	0x03BB08BC STRB W8, [X22 + 0xCC8]
	0x03BB08C0 LDR X0, [X23]
	0x03BB08C4 LDR W8, [X0 + 0xE0]
	0x03BB08C8 CBNZ W8, 0x3BB08D0
	0x03BB08CC BL 0x1C16DFC
	0x03BB08D0 MOV X0, X31
	0x03BB08D4 BL 0x36FA670
	0x03BB08D8 TBZ X0, 0x0, 0x3BB0928
	0x03BB08DC ADRP X8, 0x5AC000
	0x03BB08E0 LDR X8, [X8 + 0xEA8]
	0x03BB08E4 LDR X0, [X8]
	0x03BB08E8 LDR W8, [X0 + 0xE0]
	0x03BB08EC CBNZ W8, 0x3BB08F4
	0x03BB08F0 BL 0x1C16DFC
	0x03BB08F4 BL 0x3BB14B0
	0x03BB08F8 CBZ X0, 0x3BB0928
	0x03BB08FC MOV X3, X0
	0x03BB0900 MOV X0, X21
	0x03BB0904 MOV X1, X20
	0x03BB0908 MOV X2, X19
	0x03BB090C MOV V0.16B, V8.16B
	0x03BB0910 LDP X20, X19, [X31 + 0x40]
	0x03BB0914 LDP X22, X21, [X31 + 0x30]
	0x03BB0918 LDP X30, X23, [X31 + 0x20]
	0x03BB091C LDP D9, D8, [X31 + 0x10]
	0x03BB0920 ADD X31, X31, 0x50
	0x03BB0924 BR X3
	0x03BB0928 STR W31, [X31 + 0x8]
	0x03BB092C STR X31, [X31]
	0x03BB0930 LDP S1, S0, [X19]
	0x03BB0934 LDR V2, [X19 + 0x8]
	0x03BB0938 MOVZ W22, 0x7F800000
	0x03BB093C ADD X2, X31, 0x0
	0x03BB0940 FMOV W8, S0
	0x03BB0944 AND W8, W8, 0x7FFFFFFF
	0x03BB0948 CMP W8, W22
	0x03BB094C FCCMP S1, S0, 0x0, LS
	0x03BB0950 FCSEL S0, S1, S0, GT
	0x03BB0954 FMOV W8, S2
	0x03BB0958 AND W8, W8, 0x7FFFFFFF
	0x03BB095C FCMP S0, S2
	0x03BB0960 CCMP W8, W22, 0x2, LE
	0x03BB0964 ADRP X8, 0xFFFFFFFFFCF3A000
	0x03BB0968 FCSEL S9, S0, S2, HI
	0x03BB096C LDR V0, [X8 + 0x240]
	0x03BB0970 MOV X0, X20
	0x03BB0974 MOV X1, X21
	0x03BB0978 MOV X3, X31
	0x03BB097C BL 0x3B87B2C
	0x03BB0980 LDR V0, [X31]
	0x03BB0984 LDR V1, [X19]
	0x03BB0988 LDR V2, [X31 + 0x8]
	0x03BB098C LDR V3, [X19 + 0x8]
	0x03BB0990 LDP X20, X19, [X31 + 0x40]
	0x00000000 INVALID
	0x03BB0998 MOV S1, V0.S[1]
	0x03BB099C FMOV W8, S1
	0x03BB09A0 AND W8, W8, 0x7FFFFFFF
	0x03BB09A4 CMP W8, W22
	0x03BB09A8 FMUL S2, S2, S3
	0x03BB09AC FCCMP S0, S1, 0x0, LS
	0x03BB09B0 FMOV W8, S2
	0x03BB09B4 FCSEL S0, S0, S1, GT
	0x03BB09B8 AND W8, W8, 0x7FFFFFFF
	0x03BB09BC FCMP S0, S2
	0x03BB09C0 CCMP W8, W22, 0x2, LE
	0x03BB09C4 FCSEL S0, S0, S2, HI
	0x03BB09C8 FMOV W8, S0
	0x03BB09CC AND W8, W8, 0x7FFFFFFF
	0x03BB09D0 CMP W8, W22
	0x03BB09D4 FCCMP S9, S0, 0x0, LS
	0x03BB09D8 FCSEL S0, S9, S0, GT
	0x03BB09DC FMOV S1, 0.5
	0x03BB09E0 FMUL S0, S0, S1
	0x03BB09E4 FADD S0, S0, S8
	0x03BB09E8 LDP X22, X21, [X31 + 0x30]
	0x03BB09EC LDP X30, X23, [X31 + 0x20]
	0x03BB09F0 LDP D9, D8, [X31 + 0x10]
	0x03BB09F4 ADD X31, X31, 0x50
	0x03BB09F8 RET
	0x03BB09FC STP X30, X27, [X31 - 0x50]!
	0x03BB0A00 STP X26, X25, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 
	004 Subtract X31, X31, 96
	005 Move [X31+16], D15
	006 Move [X31+24], D14
	007 Move [X31+32], D13
	008 Move [X31+40], D12
	009 Move [X31+48], D11
	010 Move [X31+56], D10
	011 Move [X31+64], D9
	012 Move [X31+72], D8
	013 Move [X31+80], X30
	014 Move [X31+88], X19
	015 Move S4, [X5]
	016 Move S5, [X5+4]
	017 Move V6, [X5+8]
	018 Move S7, [X3]
	019 Move S16, [X3+4]
	020 Move V17, [X3+8]
	021 Move S0, [X1]
	022 Move S1, [X1+4]
	023 Move S2, [X1+8]
	024 Move S3, [X1+12]
	025 Move S19, [X6]
	026 Move S20, [X6+4]
	027 Move V21, [X6+8]
	028 Move S18, [X7]
	029 Move S22, [X7+4]
	030 Move V23, [X7+8]
	031 Multiply S5, S5, S16
	032 Multiply S6, S6, S17
	033 Multiply S4, S4, S7
	034 Multiply S8, S6, S1
	035 Multiply S11, S5, S2
	036 Multiply S7, S7, S19
	037 Multiply S16, S16, S20
	038 Multiply S17, S17, S21
	039 Multiply S19, S0, S22
	040 Multiply S20, S1, S23
	041 Multiply S21, S2, S18
	042 Multiply S28, S1, S18
	043 Multiply S29, S2, S22
	044 Multiply S30, S0, S23
	045 Multiply S31, S5, S0
	046 Multiply S9, S4, S2
	047 Multiply S10, S4, S1
	048 Multiply S12, S0, S6
	049 Subtract S8, S8, S11
	050 Move S24, [X2]
	051 Move S25, [X2+4]
	052 Move S26, [X2+8]
	053 Move S27, [X2+12]
	054 Subtract S19, S19, S28
	055 Subtract S20, S20, S29
	056 Subtract S21, S21, S30
	057 Subtract S31, S31, S10
	058 Subtract S9, S9, S12
	059 Add S8, S8, S8
	060 Move [X31+4], S18
	061 Add S20, S20, S20
	062 Add S21, S21, S21
	063 Add S19, S19, S19
	064 Add S9, S9, S9
	065 Add S31, S31, S31
	066 Multiply S18, S3, S8
	067 Multiply S10, S3, S20
	068 Multiply S11, S3, S21
	069 Multiply S12, S3, S19
	070 Move [X31], S18
	071 Multiply S18, S3, S9
	072 Multiply S3, S3, S31
	073 Move [X31+8], S18
	074 Move [X31+16], S3
	075 Move V18, [X31+4]
	076 Multiply S28, S16, S24
	077 Multiply S29, S17, S25
	078 Multiply S30, S7, S26
	079 Multiply S13, S7, S25
	080 Multiply S14, S16, S26
	081 Multiply S15, S17, S24
	082 Subtract S28, S28, S13
	083 Subtract S29, S29, S14
	084 Subtract S30, S30, S15
	085 Multiply S13, S0, S21
	086 Multiply S14, S1, S19
	087 Multiply S15, S2, S20
	088 Multiply S20, S1, S20
	089 Multiply S21, S2, S21
	090 Multiply S19, S0, S19
	091 Add S29, S29, S29
	092 Add S30, S30, S30
	093 Add S28, S28, S28
	094 Multiply S3, S0, S9
	095 Multiply S9, S2, S9
	096 Multiply S2, S2, S8
	097 Multiply S8, S1, S8
	098 Multiply S1, S1, S31
	099 Multiply S0, S0, S31
	100 Add S18, S18, S10
	101 Add S22, S22, S11
	102 Add S23, S23, S12
	103 Subtract S20, S13, S20
	104 Subtract S21, S14, S21
	105 Subtract S19, S15, S19
	106 Multiply S31, S27, S29
	107 Multiply S10, S27, S30
	108 Multiply S11, S24, S30
	109 Multiply S30, S26, S30
	110 Multiply S26, S26, S29
	111 Multiply S29, S25, S29
	112 Multiply S25, S25, S28
	113 Multiply S24, S24, S28
	114 Subtract S0, S2, S0
	115 Add S2, S18, S21
	116 Add S18, S22, S19
	117 Add S19, S23, S20
	118 Subtract S21, S25, S30
	119 Move V22, [X31]
	120 Subtract S23, S26, S24
	121 Move S25, [X31+8]
	122 Move S26, [X31+12]
	123 Subtract S1, S1, S9
	124 Add S22, S4, S22
	125 Add S1, S22, S1
	126 Add S25, S5, S25
	127 Move S22, [X0]
	128 Move S24, [X0+4]
	129 Add S0, S25, S0
	130 Move V25, [X0+8]
	131 Multiply S27, S27, S28
	132 Subtract S3, S3, S8
	133 Add S26, S6, S26
	134 Add S7, S7, S31
	135 Add S16, S16, S10
	136 Add S17, S17, S27
	137 Subtract S20, S11, S29
	138 And W31, W4, 1
	139 Add S3, S26, S3
	140 Move X19, [X31+96]
	141 Add S7, S7, S21
	142 Add S16, S16, S23
	143 Add S17, S17, S20
	144 NotImplemented "Instruction FCSEL not yet implemented."
	145 NotImplemented "Instruction FCSEL not yet implemented."
	146 NotImplemented "Instruction FCSEL not yet implemented."
	147 Subtract S2, S2, S7
	148 Subtract S4, S18, S16
	149 Subtract S5, S19, S17
	150 Add S1, S22, S1
	151 Add S6, S24, S0
	152 Add S3, S25, S3
	153 Add S0, S1, S2
	154 Add S1, S6, S4
	155 Add S2, S3, S5
	156 Move X0, X31
	157 Call float3.op_Implicit, X0
	158 Move [X19], S0
	159 Move [X19+8], S1
	160 Move [X19+8], S2
	161 Move X30, [X31+80]
	162 Move X19, [X31+88]
	163 Move D9, [X31+64]
	164 Move D8, [X31+72]
	165 Move D11, [X31+48]
	166 Move D10, [X31+56]
	167 Move D13, [X31+32]
	168 Move D12, [X31+40]
	169 Move D15, [X31+16]
	170 Move D14, [X31+24]
	171 Add X31, X31, 96
	172 Return 
	173 Subtract X31, X31, 288
	174 Move [X31+144], D15
	175 Move [X31+152], D14
	176 Move [X31+160], D13
	177 Move [X31+168], D12
	178 Move [X31+176], D11
	179 Move [X31+184], D10
	180 Move [X31+192], D9
	181 Move [X31+200], D8
	182 Move [X31+208], X29
	183 Move [X31+216], X30
	184 Move [X31+224], X26
	185 Move [X31+232], X25
	186 Move [X31+240], X24
	187 Move [X31+248], X23
	188 Move [X31+256], X22
	189 Move [X31+264], X21
	190 Move [X31+272], X20
	191 Move [X31+280], X19
	192 Move X26, 0x834000
	193 Move W8, [X26+3256]
	194 Move X19, X6
	195 Move W20, W5
	196 Move W21, W4
	197 Move W22, W3
	198 Move W23, W2
	199 Move X24, X1
	200 Move X25, X0
	201 Compare W8, 0
	202 JumpIfNotEqual {208}
	203 Move X0, 0x570000
	204 Move X0, [X0+2104]
	205 Call 0x1C17CF4
	206 Move W8, 1
	207 Move [X26+3256], W8
	208 Move [X31+136], W31
	209 Move [X31+128], X31
	210 Move [X31+120], W31
	211 Move [X31+112], X31
	212 Move [X31+104], W31
	213 Move [X31+96], X31
	214 Move [X31+88], W31
	215 Move X26, 0x570000
	216 Move X26, [X26+2104]
	217 Move [X31+80], X31
	218 Move [X31+72], W31
	219 Move [X31+64], X31
	220 Move X8, [X26]
	221 Move X9, -51118080
	222 Move V0, [X9]
	223 Move X0, X31
	224 Move X8, [X8+184]
	225 Move S14, [X8]
	226 Move S9, [X8+4]
	227 Move V11, [X8+8]
	228 Move [X31+128], D0
	229 Move [X31+136], W31
	230 Move V0, [X25]
	231 Move V2, [X24]
	232 Move V1, [X25+8]
	233 Move V3, [X24+8]
	234 Subtract V0, V0, V2
	235 Subtract S2, S1, S3
	236 Move S1, V0.S[1]
	237 Call float3.op_Implicit, X0
	238 Move X8, [X26]
	239 Move [X31+112], S0
	240 Move [X31+120], S1
	241 Move [X31+120], S2
	242 Move V10, V0
	243 Move X8, [X8+184]
	244 Move V12, V1
	245 Move V13, V2
	246 Move X0, X31
	247 Move X9, [X8]
	248 Move W8, [X8+8]
	249 Move [X31+96], X9
	250 Move [X31+104], W8
	251 Move S0, [X24]
	252 Move S1, [X24+4]
	253 Move V2, [X24+8]
	254 Call float3.op_Implicit, X0
	255 Move S4, [X24+20]
	256 Move S3, [X24+24]
	257 Move [X31+56], S1
	258 Move [X31+64], S0
	259 Move S0, [X24+12]
	260 Move S1, [X24+16]
	261 Move [X31+52], S2
	262 Move V2, V4
	263 Move X0, X31
	264 Call quaternion.op_Implicit, X0
	265 Move V15, V1
	266 Move V8, V2
	267 Move V23, V3
	268 Compare W23, 0
	269 JumpIfEqual {323}
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move S18, [X31+56]
	272 Move S17, [X31+60]
	273 Move V19, [X31+52]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move V0, V11
	276 Move V2, V9
	277 Move V1, V14
	278 Move TEMP, X22
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfNotEqual {289}
	282 Move S0, W31
	283 Multiply S1, S12, S0
	284 Add S1, S10, S1
	285 Multiply S2, S13, S0
	286 Add S1, S2, S1
	287 Multiply S0, S1, S0
	288 Move V2, V0
	289 Move V3, V11
	290 Move V4, V9
	291 Move V5, V14
	292 Move TEMP, X21
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {303}
	296 Move S3, W31
	297 Multiply S4, S10, S3
	298 Add S4, S4, S12
	299 Multiply S5, S13, S3
	300 Add S4, S5, S4
	301 Multiply S3, S4, S3
	302 Move V5, V3
	303 Move TEMP, X20
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {314}
	307 Move S6, W31
	308 Multiply S7, S10, S6
	309 Multiply S16, S12, S6
	310 Add S7, S7, S16
	311 Add S11, S13, S7
	312 Multiply S9, S11, S6
	313 Move V14, V9
	314 Add S1, S1, S5
	315 Add S2, S2, S4
	316 Add S0, S0, S3
	317 Add S1, S1, S14
	318 Add S2, S2, S9
	319 Add S0, S0, S11
	320 Move [X31+96], S1
	321 Move [X31+104], S2
	322 Move [X31+104], S0
	323 Move V28, V11
	324 Move V1, V9
	325 Move V2, V14
	326 Move TEMP, X22
	327 And TEMP, TEMP, 1
	328 Compare TEMP, 1
	329 JumpIfNotEqual {373}
	330 Move S17, W31
	331 Multiply S2, S0, S17
	332 Multiply S3, S15, S17
	333 Multiply S4, S8, S17
	334 Subtract S5, S2, S15
	335 Subtract S3, S3, S4
	336 Subtract S2, S8, S2
	337 Add S3, S3, S3
	338 Add S2, S2, S2
	339 Add S4, S5, S5
	340 Move S1, 1
	341 Multiply S5, S23, S3
	342 Multiply S6, S23, S2
	343 Multiply S7, S23, S4
	344 Multiply S16, S0, S2
	345 Add S1, S5, S1
	346 Multiply S5, S15, S4
	347 Add S6, S6, S17
	348 Add S17, S7, S17
	349 Multiply S7, S8, S3
	350 Multiply S2, S8, S2
	351 Multiply S4, S0, S4
	352 Multiply S3, S15, S3
	353 Subtract S2, S5, S2
	354 Subtract S4, S7, S4
	355 Subtract S3, S16, S3
	356 Add S1, S1, S2
	357 Add S4, S6, S4
	358 Add S17, S17, S3
	359 Multiply S2, S1, S10
	360 Multiply S3, S4, S12
	361 Multiply S6, S1, S1
	362 Multiply S7, S4, S4
	363 Multiply S5, S17, S13
	364 Multiply S16, S17, S17
	365 Add S2, S2, S3
	366 Add S3, S6, S7
	367 Add S2, S5, S2
	368 Add S3, S16, S3
	369 NotImplemented "Instruction FDIV not yet implemented."
	370 Multiply S2, S1, S3
	371 Multiply S1, S4, S3
	372 Multiply S28, S17, S3
	373 Move V3, V11
	374 Move V4, V9
	375 Move V5, V14
	376 Move TEMP, X21
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfNotEqual {423}
	380 Move S3, W31
	381 Multiply S5, S15, S3
	382 Multiply S6, S8, S3
	383 Multiply S7, S0, S3
	384 Subtract S16, S0, S5
	385 Subtract S5, S5, S8
	386 Subtract S6, S6, S7
	387 Add S5, S5, S5
	388 Add S6, S6, S6
	389 Add S7, S16, S16
	390 Move S4, 1
	391 Multiply S16, S23, S5
	392 Multiply S17, S23, S6
	393 Multiply S18, S23, S7
	394 Multiply S19, S0, S6
	395 Add S4, S17, S4
	396 Multiply S17, S15, S7
	397 Add S16, S16, S3
	398 Add S3, S18, S3
	399 Multiply S18, S8, S5
	400 Multiply S6, S8, S6
	401 Multiply S7, S0, S7
	402 Multiply S5, S15, S5
	403 Subtract S6, S17, S6
	404 Subtract S7, S18, S7
	405 Subtract S5, S19, S5
	406 Add S6, S16, S6
	407 Add S4, S4, S7
	408 Add S3, S3, S5
	409 Multiply S5, S10, S6
	410 Multiply S7, S12, S4
	411 Multiply S17, S6, S6
	412 Multiply S18, S4, S4
	413 Multiply S16, S13, S3
	414 Multiply S19, S3, S3
	415 Add S5, S5, S7
	416 Add S7, S17, S18
	417 Add S5, S16, S5
	418 Add S7, S19, S7
	419 NotImplemented "Instruction FDIV not yet implemented."
	420 Multiply S5, S6, S7
	421 Multiply S4, S4, S7
	422 Multiply S3, S3, S7
	423 Move TEMP, X20
	424 And TEMP, TEMP, 1
	425 Compare TEMP, 1
	426 JumpIfNotEqual {470}
	427 Move S6, W31
	428 Multiply S16, S0, S6
	429 Multiply S17, S8, S6
	430 Multiply S18, S15, S6
	431 Subtract S16, S16, S18
	432 Subtract S18, S15, S17
	433 Subtract S17, S17, S0
	434 Add S18, S18, S18
	435 Add S17, S17, S17
	436 Add S16, S16, S16
	437 Multiply S19, S23, S18
	438 Multiply S20, S23, S17
	439 Multiply S21, S23, S16
	440 Multiply S22, S0, S17
	441 Multiply S17, S8, S17
	442 Multiply S23, S8, S18
	443 Multiply S24, S15, S16
	444 Multiply S16, S0, S16
	445 Move S7, 1
	446 Multiply S18, S15, S18
	447 Add S19, S19, S6
	448 Add S6, S20, S6
	449 Subtract S17, S24, S17
	450 Subtract S16, S23, S16
	451 Add S7, S21, S7
	452 Subtract S18, S22, S18
	453 Add S17, S19, S17
	454 Add S6, S6, S16
	455 Add S7, S7, S18
	456 Multiply S16, S17, S10
	457 Multiply S18, S6, S12
	458 Multiply S20, S17, S17
	459 Multiply S21, S6, S6
	460 Multiply S19, S7, S13
	461 Multiply S22, S7, S7
	462 Add S16, S16, S18
	463 Add S18, S20, S21
	464 Add S16, S19, S16
	465 Add S18, S22, S18
	466 NotImplemented "Instruction FDIV not yet implemented."
	467 Multiply S14, S17, S16
	468 Multiply S9, S6, S16
	469 Multiply S11, S7, S16
	470 Add S2, S2, S5
	471 Add S1, S1, S4
	472 Add S0, S28, S3
	473 Add S2, S2, S14
	474 Add S1, S1, S9
	475 Add S0, S0, S11
	476 Move [X31+96], S2
	477 Move [X31+104], S1
	478 Move [X31+104], S0
	479 Move TEMP, X22
	480 And TEMP, TEMP, 1
	481 Compare TEMP, 1
	482 JumpIfNotEqual {492}
	483 Move TEMP, X20
	484 And TEMP, TEMP, 1
	485 Compare TEMP, 1
	486 JumpIfNotEqual {492}
	487 Add X0, X31, 112
	488 Add X1, X31, 128
	489 Add X2, X31, 96
	490 Move X3, X31
	491 Call BurstMathUtility.ProjectOnPlane, X0, X1, X2
	492 Move X23, 0x829000
	493 Move W8, [X23+1923]
	494 Move [X31+44], S23
	495 Move [X31+52], S0
	496 Compare W8, 0
	497 JumpIfNotEqual {503}
	498 Move X0, 0x544000
	499 Move X0, [X0+1440]
	500 Call 0x1C17CF4
	501 Move W8, 1
	502 Move [X23+1923], W8
	503 Move X8, 0x544000
	504 Move X8, [X8+1440]
	505 Move X0, X31
	506 Move X8, [X8]
	507 Move X8, [X8+184]
	508 Move S0, [X8]
	509 Move S1, [X8+4]
	510 Move V2, [X8+8]
	511 Call float3.op_Implicit, X0
	512 Move S23, [X31+44]
	513 Move S28, [X31+48]
	514 Move V30, V11
	515 Move V21, V9
	516 Move V29, V9
	517 Move V31, V14
	518 Move TEMP, X22
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfNotEqual {565}
	522 Move S18, W31
	523 Multiply S6, S28, S18
	524 Multiply S3, S15, S18
	525 Multiply S4, S8, S18
	526 Subtract S5, S6, S15
	527 Subtract S3, S3, S4
	528 Subtract S4, S8, S6
	529 Add S3, S3, S3
	530 Add S19, S4, S4
	531 Add S4, S5, S5
	532 Move S17, 1
	533 Multiply S5, S23, S3
	534 Multiply S6, S23, S19
	535 Multiply S7, S23, S4
	536 Multiply S16, S28, S19
	537 Add S17, S5, S17
	538 Multiply S5, S15, S4
	539 Add S6, S6, S18
	540 Add S18, S7, S18
	541 Multiply S7, S8, S3
	542 Multiply S19, S8, S19
	543 Multiply S4, S28, S4
	544 Multiply S3, S15, S3
	545 Subtract S5, S5, S19
	546 Subtract S4, S7, S4
	547 Subtract S3, S16, S3
	548 Add S17, S17, S5
	549 Add S4, S6, S4
	550 Add S18, S18, S3
	551 Multiply S19, S17, S10
	552 Multiply S3, S4, S12
	553 Multiply S6, S17, S17
	554 Multiply S7, S4, S4
	555 Multiply S5, S18, S13
	556 Multiply S16, S18, S18
	557 Add S19, S19, S3
	558 Add S3, S6, S7
	559 Add S5, S5, S19
	560 Add S3, S16, S3
	561 NotImplemented "Instruction FDIV not yet implemented."
	562 Multiply S31, S17, S3
	563 Multiply S29, S4, S3
	564 Multiply S30, S18, S3
	565 Move TEMP, X21
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfNotEqual {619}
	569 Move S3, W31
	570 Multiply S6, S8, S3
	571 Multiply S7, S28, S3
	572 Multiply S5, S15, S3
	573 Multiply S16, S10, S3
	574 Subtract S6, S6, S7
	575 Multiply S17, S13, S3
	576 Subtract S18, S28, S5
	577 Subtract S5, S5, S8
	578 Add S7, S16, S12
	579 Add S6, S6, S6
	580 Move S4, 1
	581 Add S5, S5, S5
	582 Add S1, S17, S7
	583 Multiply S17, S23, S6
	584 Add S16, S18, S18
	585 Multiply S19, S28, S6
	586 Add S4, S17, S4
	587 Multiply S17, S15, S5
	588 Multiply S7, S23, S5
	589 Multiply S18, S23, S16
	590 Subtract S17, S19, S17
	591 Multiply S19, S15, S16
	592 Multiply S5, S8, S5
	593 Multiply S6, S8, S6
	594 Multiply S16, S28, S16
	595 Add S7, S7, S3
	596 Add S18, S18, S3
	597 Multiply S0, S1, S3
	598 Subtract S3, S19, S6
	599 Subtract S5, S5, S16
	600 Add S3, S7, S3
	601 Add S4, S4, S5
	602 Add S6, S18, S17
	603 Multiply S5, S10, S3
	604 Multiply S7, S12, S4
	605 Multiply S17, S3, S3
	606 Multiply S18, S4, S4
	607 Multiply S16, S13, S6
	608 Add S5, S5, S7
	609 Multiply S7, S6, S6
	610 Add S17, S17, S18
	611 Add S5, S16, S5
	612 Add S7, S7, S17
	613 NotImplemented "Instruction FDIV not yet implemented."
	614 Multiply S5, S3, S7
	615 Multiply S4, S4, S7
	616 Multiply S3, S6, S7
	617 Move V9, V0
	618 Move [X31], V1
	619 Move [X31], V1
	620 Move V3, V11
	621 Move V4, V21
	622 Move V5, V14
	623 Move V9, V2
	624 Move [X31+1], V0
	625 Move TEMP, X20
	626 And TEMP, TEMP, 1
	627 Compare TEMP, 1
	628 JumpIfNotEqual {672}
	629 Move S6, W31
	630 Multiply S16, S28, S6
	631 Multiply S17, S8, S6
	632 Multiply S18, S15, S6
	633 Subtract S16, S16, S18
	634 Subtract S18, S15, S17
	635 Subtract S17, S17, S28
	636 Add S18, S18, S18
	637 Add S17, S17, S17
	638 Add S16, S16, S16
	639 Multiply S19, S23, S18
	640 Multiply S20, S23, S17
	641 Multiply S21, S23, S16
	642 Multiply S22, S28, S17
	643 Multiply S17, S8, S17
	644 Multiply S23, S8, S18
	645 Multiply S24, S15, S16
	646 Multiply S16, S28, S16
	647 Move S7, 1
	648 Multiply S18, S15, S18
	649 Add S19, S19, S6
	650 Add S6, S20, S6
	651 Subtract S17, S24, S17
	652 Subtract S16, S23, S16
	653 Add S7, S21, S7
	654 Subtract S18, S22, S18
	655 Add S17, S19, S17
	656 Add S6, S6, S16
	657 Add S7, S7, S18
	658 Multiply S16, S17, S10
	659 Multiply S18, S6, S12
	660 Multiply S20, S17, S17
	661 Multiply S21, S6, S6
	662 Multiply S19, S7, S13
	663 Multiply S22, S7, S7
	664 Add S16, S16, S18
	665 Add S18, S20, S21
	666 Add S16, S19, S16
	667 Add S18, S22, S18
	668 NotImplemented "Instruction FDIV not yet implemented."
	669 Multiply S14, S17, S16
	670 Multiply S21, S6, S16
	671 Multiply S11, S7, S16
	672 Add S2, S31, S5
	673 Add S1, S29, S4
	674 Add S0, S30, S3
	675 Add S2, S2, S14
	676 Add S1, S1, S21
	677 Add S0, S0, S11
	678 Add X0, X31, 64
	679 Add X1, X31, 128
	680 Add X2, X31, 80
	681 Move X3, X31
	682 Move [X31+64], S2
	683 Move [X31+72], S1
	684 Move [X31+72], S0
	685 Call BurstMathUtility.ProjectOnPlane, X0, X1, X2
	686 Move V2, [X31]
	687 Move V3, [X31+16]
	688 Move V0, [X31+80]
	689 Move V1, [X31+88]
	690 Move V3.S[1], V2.S[0]
	691 Add V0, V3, V0
	692 Add S1, S9, S1
	693 Move [X31+96], D0
	694 Move [X31+104], S1
	695 Move S18, [X31+56]
	696 Move S17, [X31+60]
	697 Move V19, [X31+52]
	698 Move S0, [X31+96]
	699 Move S1, [X31+100]
	700 Move V2, [X31+104]
	701 Move X0, X31
	702 Add S0, S17, S0
	703 Add S1, S18, S1
	704 Add S2, S19, S2
	705 Call float3.op_Implicit, X0
	706 Move [X19], S0
	707 Move [X19+8], S1
	708 Move [X19+8], S2
	709 Move X20, [X31+272]
	710 Move X19, [X31+280]
	711 Move X22, [X31+256]
	712 Move X21, [X31+264]
	713 Move X24, [X31+240]
	714 Move X23, [X31+248]
	715 Move X26, [X31+224]
	716 Move X25, [X31+232]
	717 Move X29, [X31+208]
	718 Move X30, [X31+216]
	719 Move D9, [X31+192]
	720 Move D8, [X31+200]
	721 Move D11, [X31+176]
	722 Move D10, [X31+184]
	723 Move D13, [X31+160]
	724 Move D12, [X31+168]
	725 Move D15, [X31+144]
	726 Move D14, [X31+152]
	727 Add X31, X31, 288
	728 Return 
	729 Subtract X31, X31, 144
	730 Move [X31+48], D10
	731 Move [X31+64], D9
	732 Move [X31+72], D8
	733 Move [X31+80], X30
	734 Move [X31+88], X25
	735 Move [X31+96], X24
	736 Move [X31+104], X23
	737 Move [X31+112], X22
	738 Move [X31+120], X21
	739 Move [X31+128], X20
	740 Move [X31+136], X19
	741 Move X25, 0x833000
	742 Move W8, [X25+3257]
	743 Move X19, X5
	744 Move V8, V2
	745 Move V9, V1
	746 Move V10, V0
	747 Move X21, X4
	748 Move X20, X3
	749 Move W22, W2
	750 Move X24, X1
	751 Move X23, X0
	752 Compare W8, 0
	753 JumpIfNotEqual {759}
	754 Move X0, 0x56F000
	755 Move X0, [X0+2104]
	756 Call 0x1C17CF4
	757 Move W8, 1
	758 Move [X25+3257], W8
	759 Move [X31+24], W31
	760 Move [X31+16], X31
	761 Move W8, [X23+8]
	762 Move X9, [X23]
	763 Multiply S0, S10, S9
	764 Multiply S8, S0, S8
	765 Move [X19+8], W8
	766 Move [X19], X9
	767 Move [X31+32], S8
	768 Move [X31+40], S8
	769 Move [X31+40], S8
	770 Move S0, [X24]
	771 Move S1, [X24+4]
	772 Move V2, [X24+8]
	773 Move X0, X31
	774 Call float3.op_Implicit, X0
	775 Add X0, X31, 32
	776 Add X1, X31, 0
	777 Add X2, X31, 16
	778 Move X3, X31
	779 Move [X31], S0
	780 Move [X31+8], S1
	781 Move [X31+8], S2
	782 Call BurstMathUtility.Scale, X0, X1, X2
	783 Move S0, [X23]
	784 Move S1, [X23+4]
	785 Move V2, [X23+8]
	786 Move X0, X31
	787 Call float3.op_Implicit, X0
	788 Move S3, [X31+16]
	789 Move S4, [X31+20]
	790 Move V5, [X31+24]
	791 Add S3, S0, S3
	792 Add S1, S1, S4
	793 Add S2, S2, S5
	794 Move TEMP, X22
	795 And TEMP, TEMP, 1
	796 Compare TEMP, 1
	797 JumpIfNotEqual {804}
	798 NotImplemented "Instruction FCMP not yet implemented."
	799 Move V0, [X21]
	800 NotImplemented "Instruction FABS not yet implemented."
	801 NotImplemented "Instruction FABS not yet implemented."
	802 NotImplemented "Instruction FCMP not yet implemented."
	803 Move V4, [X21+4]
	804 Move X8, 0x56F000
	805 Move X8, [X8+2104]
	806 Move W9, 0x7F800000
	807 Move X8, [X8]
	808 Move X8, [X8+184]
	809 Move S0, [X8]
	810 Move S4, [X8+4]
	811 Move V5, [X8+8]
	812 Move W8, S0
	813 And W8, W8, 0x7FFFFFFF
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move W8, S4
	816 And W8, W8, 0x7FFFFFFF
	817 NotImplemented "Instruction FCCMP not yet implemented."
	818 NotImplemented "Instruction FCSEL not yet implemented."
	819 NotImplemented "Instruction CMP not yet implemented."
	820 Move W8, S5
	821 And W8, W8, 0x7FFFFFFF
	822 NotImplemented "Instruction FCCMP not yet implemented."
	823 NotImplemented "Instruction FCSEL not yet implemented."
	824 NotImplemented "Instruction CMP not yet implemented."
	825 NotImplemented "Instruction FCCMP not yet implemented."
	826 NotImplemented "Instruction FCSEL not yet implemented."
	827 Move X0, X31
	828 Call float3.op_Implicit, X0
	829 Move V4, V1
	830 Move V0, [X20]
	831 NotImplemented "Instruction FABS not yet implemented."
	832 NotImplemented "Instruction FABS not yet implemented."
	833 NotImplemented "Instruction FCMP not yet implemented."
	834 Move V4, [X20+4]
	835 Move W8, [X21+4]
	836 NotImplemented "Instruction FABS not yet implemented."
	837 And W9, W8, 0x7FFFFFFF
	838 Move S5, W9
	839 NotImplemented "Instruction FCMP not yet implemented."
	840 Move S4, W8
	841 Move W8, [X21+8]
	842 NotImplemented "Instruction FABS not yet implemented."
	843 And W8, W8, 0x7FFFFFFF
	844 Move S6, W8
	845 NotImplemented "Instruction FCMP not yet implemented."
	846 Move V2, [X21+8]
	847 Move W8, [X20+4]
	848 NotImplemented "Instruction FABS not yet implemented."
	849 And W9, W8, 0x7FFFFFFF
	850 Move S5, W9
	851 NotImplemented "Instruction FCMP not yet implemented."
	852 Move S4, W8
	853 Move W8, [X20+8]
	854 NotImplemented "Instruction FABS not yet implemented."
	855 And W8, W8, 0x7FFFFFFF
	856 Move S6, W8
	857 NotImplemented "Instruction FCMP not yet implemented."
	858 Move V0, V3
	859 Move V2, [X20+8]
	860 Move [X19], S0
	861 Move [X19+8], S4
	862 Move [X19+8], S2
	863 Move X20, [X31+128]
	864 Move X19, [X31+136]
	865 Move X22, [X31+112]
	866 Move X21, [X31+120]
	867 Move X24, [X31+96]
	868 Move X23, [X31+104]
	869 Move X30, [X31+80]
	870 Move X25, [X31+88]
	871 Move D9, [X31+64]
	872 Move D8, [X31+72]
	873 Move V10, [X31+48]
	874 Add X31, X31, 144
	875 Return 
	876 Move [X31-128], D13
	877 Move [X31-120], D12
	878 Move [X31+16], D11
	879 Move [X31+24], D10
	880 Move [X31+32], D9
	881 Move [X31+40], D8
	882 Move [X31+48], X30
	883 Move [X31+64], X26
	884 Move [X31+72], X25
	885 Move [X31+80], X24
	886 Move [X31+88], X23
	887 Move [X31+96], X22
	888 Move [X31+104], X21
	889 Move [X31+112], X20
	890 Move [X31+120], X19
	891 Move W8, [X1+8]
	892 Move X9, [X1]
	893 Move V8, V1
	894 Move V9, V0
	895 Move [X7+8], W8
	896 Move [X7], X9
	897 Move S0, [X3]
	898 Move S1, [X3+4]
	899 Move V2, [X3+8]
	900 Move X23, X0
	901 Move X0, X31
	902 Move X19, X7
	903 Move X22, X6
	904 Move X21, X5
	905 Move W20, W4
	906 Move X24, X2
	907 Call float3.op_Implicit, X0
	908 Move X25, 0x832000
	909 Move W8, [X25+1413]
	910 Move V11, V0
	911 Move V10, V1
	912 Move V12, V2
	913 Compare W8, 0
	914 JumpIfNotEqual {920}
	915 Move X0, 0x544000
	916 Move X0, [X0+1448]
	917 Call 0x1C17CF4
	918 Move W8, 1
	919 Move [X25+1413], W8
	920 Move X26, 0x544000
	921 Move X26, [X26+1448]
	922 Move X0, [X26]
	923 Move W8, [X0+224]
	924 Compare W8, 0
	925 JumpIfNotEqual {927}
	926 Call 0x1C17DFC
	927 Move S0, [X24]
	928 Move S1, [X24+4]
	929 Move V2, [X24+8]
	930 Multiply S4, S11, S11
	931 Multiply S5, S10, S10
	932 Multiply S3, S12, S12
	933 Add S4, S4, S5
	934 Move X0, X31
	935 Add S13, S3, S4
	936 Call float3.op_Implicit, X0
	937 Move W8, [X25+1413]
	938 Move V10, V0
	939 Move V11, V1
	940 Move V12, V2
	941 Compare W8, 0
	942 JumpIfNotEqual {948}
	943 Move X0, 0x544000
	944 Move X0, [X0+1448]
	945 Call 0x1C17CF4
	946 Move W8, 1
	947 Move [X25+1413], W8
	948 Move X0, [X26]
	949 NotImplemented "Instruction FSQRT not yet implemented."
	950 Move W8, [X0+224]
	951 Compare W8, 0
	952 JumpIfNotEqual {954}
	953 Call 0x1C17DFC
	954 Multiply S1, S10, S10
	955 Multiply S2, S11, S11
	956 Multiply S0, S12, S12
	957 Add S1, S1, S2
	958 Add S0, S0, S1
	959 NotImplemented "Instruction FSQRT not yet implemented."
	960 NotImplemented "Instruction FDIV not yet implemented."
	961 Move S0, 1
	962 NotImplemented "Instruction FCMP not yet implemented."
	963 Move S0, -1
	964 Add S0, S1, S0
	965 Multiply S0, S0, S9
	966 Subtract S0, S0, S8
	967 NotImplemented "Instruction FCMP not yet implemented."
	968 Move V1, [X23]
	969 Move V2, [X22]
	970 NotImplemented "Instruction LDUR not yet implemented."
	971 Move S4, 1
	972 Add S0, S0, S4
	973 Multiply S1, S0, S1
	974 NotImplemented "Instruction FABS not yet implemented."
	975 NotImplemented "Instruction FABS not yet implemented."
	976 NotImplemented "Instruction FCMP not yet implemented."
	977 NotImplemented "Instruction INVALID not yet implemented."
	978 Move W8, [X22+4]
	979 Move W9, S0
	980 And W9, W9, 0x7FFFFFFF
	981 Move S3, W9
	982 And W8, W8, 0x7FFFFFFF
	983 Move S4, W8
	984 NotImplemented "Instruction FCMP not yet implemented."
	985 Move W8, 1
	986 Move S0, 1
	987 NotImplemented "Instruction FDIV not yet implemented."
	988 Move S2, -1
	989 Add S1, S1, S2
	990 Multiply S1, S1, S9
	991 Subtract S1, S1, S8
	992 NotImplemented "Instruction FCMP not yet implemented."
	993 Move V3, [X23]
	994 Move V2, [X21]
	995 Add S1, S1, S0
	996 NotImplemented "Instruction LDUR not yet implemented."
	997 NotImplemented "Instruction FDIV not yet implemented."
	998 Multiply S1, S0, S3
	999 NotImplemented "Instruction FABS not yet implemented."
	1000 NotImplemented "Instruction FABS not yet implemented."
	1001 NotImplemented "Instruction FCMP not yet implemented."
	1002 NotImplemented "Instruction INVALID not yet implemented."
	1003 Move W8, [X21+4]
	1004 Move W9, S0
	1005 And W9, W9, 0x7FFFFFFF
	1006 Move S3, W9
	1007 And W8, W8, 0x7FFFFFFF
	1008 Move S4, W8
	1009 NotImplemented "Instruction FCMP not yet implemented."
	1010 Move W8, 1
	1011 Move W8, [X22+8]
	1012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1013 And W9, W9, 0x7FFFFFFF
	1014 Move S3, W9
	1015 And W8, W8, 0x7FFFFFFF
	1016 Move S4, W8
	1017 NotImplemented "Instruction FCMP not yet implemented."
	1018 NotImplemented "Instruction CSET not yet implemented."
	1019 And W31, W20, W8
	1020 NotImplemented "Instruction LDUR not yet implemented."
	1021 Move W8, [X21+8]
	1022 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1023 And W9, W9, 0x7FFFFFFF
	1024 Move S3, W9
	1025 And W8, W8, 0x7FFFFFFF
	1026 Move S4, W8
	1027 NotImplemented "Instruction FCMP not yet implemented."
	1028 NotImplemented "Instruction CSET not yet implemented."
	1029 And W31, W20, W8
	1030 NotImplemented "Instruction LDUR not yet implemented."
	1031 Move V1, V2
	1032 Move [X19], S1
	1033 Move [X19+4], D0
	1034 Move X20, [X31+112]
	1035 Move X19, [X31+120]
	1036 Move X22, [X31+96]
	1037 Move X21, [X31+104]
	1038 Move X24, [X31+80]
	1039 Move X23, [X31+88]
	1040 Move X26, [X31+64]
	1041 Move X25, [X31+72]
	1042 Move X30, [X31+48]
	1043 Move D9, [X31+32]
	1044 Move D8, [X31+40]
	1045 Move D11, [X31+16]
	1046 Move D10, [X31+24]
	1047 Move D13, [X31+128]
	1048 Move D12, [X31+136]
	1049 Return 

