Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRBaseGrabTransformer

Method: System.Boolean get_canProcess()

Disassembly:
	0x03BA9F7C B 0x3BA9F94
	0x03BA9F80 B.NE 0x3BA9F8C

ISIL:
	001 Move X1, X31
	002 Call Behaviour.get_isActiveAndEnabled, X0
	003 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.Transformers.XRBaseGrabTransformer/RegistrationMode get_registrationMode()

Disassembly:
	0x03BA9F84 STP S3, S12, [X19]
	0x03BA9F88 STR S15, [X19 + 0x8]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void Start()

Disassembly:
	0x03BA9F8C STP S8, S9, [X19 + 0xC]
	0x03BA9F90 STP S10, S11, [X19 + 0x14]
	0x03BA9F94 LDP X20, X19, [X31 + 0x100]
	0x03BA9F98 LDP X22, X21, [X31 + 0xF0]
	0x03BA9F9C LDP X24, X23, [X31 + 0xE0]
	0x03BA9FA0 LDP X30, X25, [X31 + 0xD0]
	0x03BA9FA4 LDR X29, [X31 + 0xC0]
	0x03BA9FA8 LDP D9, D8, [X31 + 0xB0]
	0x03BA9FAC LDP D11, D10, [X31 + 0xA0]
	0x03BA9FB0 LDP D13, D12, [X31 + 0x90]
	0x03BA9FB4 LDP D15, D14, [X31 + 0x80]
	0x03BA9FB8 ADD X31, X31, 0x110
	0x03BA9FBC RET
	0x03BA9FC0 BL 0x1C16F20
	0x03BA9FC4 MOVZ W8, 0x2
	0x03BA9FC8 MOV X1, X31
	0x03BA9FCC STR W8, [X0 + 0x24]
	0x03BA9FD0 B 0x3C36C30
	0x03BA9FD4 LDR W0, [X0 + 0x20]
	0x03BA9FD8 RET
	0x03BA9FDC STR W1, [X0 + 0x20]
	0x03BA9FE0 RET
	0x03BA9FE4 LDR W0, [X0 + 0x24]
	0x03BA9FE8 RET
	0x03BA9FEC STR W1, [X0 + 0x24]
	0x03BA9FF0 RET
	0x03BA9FF4 LDR W0, [X0 + 0x28]
	0x03BA9FF8 RET
	0x03BA9FFC STR W1, [X0 + 0x28]
	0x03BAA000 RET
	0x03BAA004 LDRB W0, [X0 + 0x2C]
	0x03BAA008 RET
	0x03BAA00C AND W8, W1, 0x1
	0x03BAA010 STRB W8, [X0 + 0x2C]
	0x03BAA014 RET
	0x03BAA018 LDRB W0, [X0 + 0x2D]
	0x03BAA01C RET
	0x03BAA020 AND W8, W1, 0x1
	0x03BAA024 STRB W8, [X0 + 0x2D]
	0x03BAA028 RET
	0x03BAA02C LDR V0, [X0 + 0x30]
	0x03BAA030 RET
	0x03BAA034 FMOV S1, W31
	0x03BAA038 FMAXNM S0, S0, S1
	0x03BAA03C STR S0, [X0 + 0x30]
	0x03BAA040 RET
	0x03BAA044 LDR V0, [X0 + 0x34]
	0x03BAA048 RET
	0x03BAA04C STR S0, [X0 + 0x34]
	0x03BAA050 RET
	0x03BAA054 LDRB W0, [X0 + 0x38]
	0x03BAA058 RET
	0x03BAA05C AND W8, W1, 0x1
	0x03BAA060 STRB W8, [X0 + 0x38]
	0x03BAA064 RET
	0x03BAA068 LDR V0, [X0 + 0x3C]
	0x03BAA06C RET
	0x03BAA070 LDR V2, [X0 + 0x128]
	0x03BAA074 LDR V3, [X0 + 0x130]
	0x03BAA078 FMOV S1, 1
	0x03BAA07C FMIN S0, S0, S1
	0x03BAA080 STR S0, [X0 + 0x3C]
	0x00000000 INVALID
	0x03BAA088 FMUL S0, S0, S3
	0x03BAA08C STR D1, [X0 + 0x140]
	0x03BAA090 STR S0, [X0 + 0x148]
	0x03BAA094 RET
	0x03BAA098 LDR V0, [X0 + 0x40]
	0x03BAA09C RET
	0x03BAA0A0 LDR V2, [X0 + 0x128]
	0x03BAA0A4 LDR V3, [X0 + 0x130]
	0x03BAA0A8 FMOV S1, 1
	0x03BAA0AC FMAX S0, S0, S1
	0x03BAA0B0 ADD X8, X0, 0x14C
	0x03BAA0B4 STR S0, [X0 + 0x40]
	0x00000000 INVALID
	0x03BAA0BC FMUL S0, S0, S3
	0x03BAA0C0 STR D1, [X8]
	0x03BAA0C4 STR S0, [X8 + 0x8]
	0x03BAA0C8 RET
	0x03BAA0CC LDR V0, [X0 + 0x44]
	0x03BAA0D0 RET
	0x03BAA0D4 STR S0, [X0 + 0x44]
	0x03BAA0D8 RET
	0x03BAA0DC MOVZ W0, 0x3
	0x03BAA0E0 RET
	0x03BAA0E4 STR X30, [X31 - 0x20]!
	0x03BAA0E8 STP X20, X19, [X31 + 0x10]
	0x03BAA0EC ADRP X20, 0x838000
	0x03BAA0F0 LDRB W8, [X20 + 0xC93]
	0x03BAA0F4 MOV X19, X0
	0x03BAA0F8 TBNZ X8, 0x0, 0x3BAA110
	0x03BAA0FC ADRP X0, 0x549000
	0x03BAA100 LDR X0, [X0 + 0x638]
	0x03BAA104 BL 0x1C16CF4
	0x03BAA108 MOVZ W8, 0x1
	0x03BAA10C STRB W8, [X20 + 0xC93]
	0x03BAA110 MOV X0, X19
	0x03BAA114 MOV X1, X31
	0x03BAA118 BL 0x3C32E90

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x83A000
	007 Move X20, 0x5B4000
	008 Move W8, [X21+3214]
	009 Move X20, [X20+3552]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5B4000
	016 Move X0, [X0+3552]
	017 Call 0x1C17CF4
	018 Move X0, 0x5B4000
	019 Move X0, [X0+3560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3214], W8
	023 Move X2, [X20]
	024 Add X1, X31, 8
	025 Move X0, X19
	026 Move [X31+8], X31
	027 Call 0x21A5990, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {119}
	032 Move X8, [X31+8]
	033 Compare X8, 0
	034 JumpIfEqual {125}
	035 Move X0, [X8+584]
	036 Compare X0, 0
	037 JumpIfEqual {125}
	038 Move X20, 0x5B4000
	039 Move X20, [X20+3560]
	040 Move X1, X19
	041 Move X2, [X20]
	042 Call List`1<Object>.Contains, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {119}
	047 Move X8, [X31+8]
	048 Compare X8, 0
	049 JumpIfEqual {125}
	050 Move X0, [X8+592]
	051 Compare X0, 0
	052 JumpIfEqual {125}
	053 Move X2, [X20]
	054 Move X1, X19
	055 Call List`1<Object>.Contains, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {119}
	060 Move X0, [X31+8]
	061 Compare X0, 0
	062 JumpIfEqual {125}
	063 Move X1, X31
	064 Call XRGrabInteractable.get_singleGrabTransformersCount, X0
	065 Subtract W20, W0, 1
	066 Move X0, [X31+8]
	067 Compare X0, 0
	068 JumpIfEqual {125}
	069 Move TEMP, X20
	070 And TEMP, TEMP, -2147483648
	071 Compare TEMP, -2147483648
	072 JumpIfEqual {78}
	073 Move W1, W20
	074 Move X2, X31
	075 Call XRGrabInteractable.GetSingleGrabTransformerAt, X0, X1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract W20, W20, 1
	078 Move X1, X31
	079 Call XRGrabInteractable.get_multipleGrabTransformersCount, X0
	080 Subtract W20, W0, 1
	081 Move TEMP, X20
	082 And TEMP, TEMP, -2147483648
	083 Compare TEMP, -2147483648
	084 JumpIfEqual {93}
	085 Move X0, [X31+8]
	086 Compare X0, 0
	087 JumpIfEqual {125}
	088 Move W1, W20
	089 Move X2, X31
	090 Call XRGrabInteractable.GetMultipleGrabTransformerAt, X0, X1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract W20, W20, 1
	093 Move X8, [X19]
	094 Move X0, X19
	095 Move X9, [X8+488]
	096 Move X1, [X8+496]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X31+8]
	102 Compare X0, 0
	103 JumpIfEqual {125}
	104 Move X1, X19
	105 Move X2, X31
	106 Call XRGrabInteractable.AddSingleGrabTransformer, X0, X1
	107 Move X0, [X31+8]
	108 Compare X0, 0
	109 JumpIfEqual {125}
	110 Move X1, X19
	111 Move X2, X31
	112 Call XRGrabInteractable.AddSingleGrabTransformer, X0, X1
	113 Move X0, [X31+8]
	114 Compare X0, 0
	115 JumpIfEqual {125}
	116 Move X1, X19
	117 Move X2, X31
	118 Call XRGrabInteractable.AddMultipleGrabTransformer, X0, X1
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X30, [X31+16]
	122 Move X21, [X31+24]
	123 Add X31, X31, 48
	124 Return 
	125 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03BAA11C CBZ X0, 0x3BAA1F4
	0x03BAA120 ADRP X20, 0x549000
	0x03BAA124 LDR X20, [X20 + 0x638]
	0x03BAA128 MOV X1, X31
	0x03BAA12C BL 0x3C3FBAC
	0x03BAA130 STR S0, [X19 + 0x128]
	0x03BAA134 STR S1, [X19 + 0x12C]
	0x03BAA138 STR S2, [X19 + 0x130]
	0x03BAA13C LDR X0, [X20]
	0x03BAA140 MOVZ W1, 0x3
	0x03BAA144 BL 0x1C16D6C
	0x03BAA148 CBZ X0, 0x3BAA1F4
	0x03BAA14C LDR X8, [X0 + 0x18]
	0x03BAA150 CBZ W8, 0x3BAA1F0
	0x03BAA154 LDR V0, [X19 + 0x128]
	0x03BAA158 CMP W8, 0x1
	0x03BAA15C FABS S3, S0
	0x03BAA160 STR S3, [X0 + 0x20]
	0x03BAA164 B.EQ 0x3BAA1F0
	0x03BAA168 LDR V0, [X19 + 0x12C]
	0x03BAA16C CMP W8, 0x2
	0x03BAA170 FABS S0, S0
	0x03BAA174 STR S0, [X0 + 0x24]
	0x03BAA178 B.LS 0x3BAA1F0
	0x03BAA17C LDR V1, [X19 + 0x130]
	0x03BAA180 CMP W8, 0x2
	0x03BAA184 FABS S1, S1
	0x03BAA188 STR S1, [X0 + 0x28]
	0x03BAA18C B.LT 0x3BAA1BC
	0x03BAA190 AND X8, X8, 0x0
	0x03BAA194 FCMP S0, S3
	0x03BAA198 FCSEL S3, S0, S3, GT
	0x03BAA19C SUBS X8, X8, 0x2
	0x03BAA1A0 B.EQ 0x3BAA1BC
	0x03BAA1A4 ADD X9, X0, 0x28

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x839000
	007 Move X20, 0x5B3000
	008 Move W8, [X21+3215]
	009 Move X20, [X20+3552]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5B3000
	016 Move X0, [X0+3552]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3215], W8
	020 Move X2, [X20]
	021 Add X1, X31, 8
	022 Move X0, X19
	023 Move [X31+8], X31
	024 Call 0x21A5990, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {41}
	029 Move X0, [X31+8]
	030 Compare X0, 0
	031 JumpIfEqual {47}
	032 Move X1, X19
	033 Move X2, X31
	034 Call XRGrabInteractable.RemoveSingleGrabTransformer, X0, X1
	035 Move X0, [X31+8]
	036 Compare X0, 0
	037 JumpIfEqual {47}
	038 Move X1, X19
	039 Move X2, X31
	040 Call XRGrabInteractable.RemoveMultipleGrabTransformer, X0, X1
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Add X31, X31, 48
	046 Return 
	047 Call 0x1C17F20

Method: System.Void OnLink(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable)

Disassembly:
	0x03BAA1A8 LDR V0, [X9], #0x4

ISIL:
	001 Return 

Method: System.Void OnGrab(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable)

Disassembly:
	0x03BAA1AC FCMP S0, S3

ISIL:
	001 Return 

Method: System.Void OnGrabCountChanged(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable, UnityEngine.Pose targetPose, UnityEngine.Vector3 localScale)

Disassembly:
	0x03BAA1B0 FCSEL S3, S0, S3, GT

ISIL:
	001 Return 

Method: System.Void Process(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable, UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase, ref UnityEngine.Pose targetPose, ref UnityEngine.Vector3 localScale)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OnUnlink(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable grabInteractable)

Disassembly:
	0x03BAA1B4 SUBS X8, X8, 0x1

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x03BAA1B8 B.NE 0x3BAA1A8
	0x03BAA1BC LDR V0, [X19 + 0x128]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

