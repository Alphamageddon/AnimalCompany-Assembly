Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRGeneralGrabTransformer/ComputeNewOneHandedScale_00000BFD$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03BAEE70 STR S2, [X31 + 0x78]
	0x03BAEE74 MOV V10.16B, V0.16B
	0x03BAEE78 LDR X8, [X8 + 0xB8]
	0x03BAEE7C MOV V12.16B, V1.16B
	0x03BAEE80 MOV V13.16B, V2.16B
	0x03BAEE84 MOV X0, X31
	0x03BAEE88 LDR X9, [X8]
	0x03BAEE8C LDR W8, [X8 + 0x8]
	0x03BAEE90 STR X9, [X31 + 0x60]
	0x03BAEE94 STR W8, [X31 + 0x68]
	0x03BAEE98 LDP S0, S1, [X24]
	0x03BAEE9C LDR V2, [X24 + 0x8]
	0x03BAEEA0 BL 0x3887BE4
	0x03BAEEA4 LDP S4, S3, [X24 + 0x14]
	0x03BAEEA8 STP S1, S0, [X31 + 0x38]
	0x03BAEEAC LDP S0, S1, [X24 + 0xC]
	0x03BAEEB0 STR S2, [X31 + 0x34]
	0x03BAEEB4 MOV V2.16B, V4.16B
	0x03BAEEB8 MOV X0, X31
	0x03BAEEBC BL 0x38BD218
	0x03BAEEC0 MOV V15.16B, V1.16B
	0x03BAEEC4 MOV V8.16B, V2.16B
	0x03BAEEC8 MOV V23.16B, V3.16B
	0x03BAEECC CBZ W23, 0x3BAEF84
	0x03BAEED0 CMP W23, 0x1
	0x03BAEED4 B.EQ 0x3BAF1D0
	0x03BAEED8 LDP S18, S17, [X31 + 0x38]
	0x03BAEEDC LDR V19, [X31 + 0x34]
	0x03BAEEE0 CMP W23, 0x2
	0x03BAEEE4 B.NE 0x3BAF4EC
	0x03BAEEE8 MOV V0.16B, V11.16B
	0x03BAEEEC MOV V2.16B, V9.16B
	0x03BAEEF0 MOV V1.16B, V14.16B
	0x03BAEEF4 TBZ X22, 0x0, 0x3BAEF14
	0x03BAEEF8 FMOV S0, W31
	0x03BAEEFC FMUL S1, S12, S0
	0x03BAEF00 FADD S1, S10, S1
	0x03BAEF04 FMUL S2, S13, S0
	0x03BAEF08 FADD S1, S2, S1
	0x03BAEF0C FMUL S0, S1, S0
	0x03BAEF10 MOV V2.16B, V0.16B
	0x03BAEF14 MOV V3.16B, V11.16B
	0x03BAEF18 MOV V4.16B, V9.16B
	0x03BAEF1C MOV V5.16B, V14.16B
	0x03BAEF20 TBZ X21, 0x0, 0x3BAEF40
	0x03BAEF24 FMOV S3, W31
	0x03BAEF28 FMUL S4, S10, S3
	0x03BAEF2C FADD S4, S4, S12
	0x03BAEF30 FMUL S5, S13, S3
	0x03BAEF34 FADD S4, S5, S4
	0x03BAEF38 FMUL S3, S4, S3
	0x03BAEF3C MOV V5.16B, V3.16B
	0x03BAEF40 TBZ X20, 0x0, 0x3BAEF60
	0x03BAEF44 FMOV S6, W31
	0x03BAEF48 FMUL S7, S10, S6
	0x03BAEF4C FMUL S16, S12, S6
	0x03BAEF50 FADD S7, S7, S16
	0x03BAEF54 FADD S11, S13, S7
	0x03BAEF58 FMUL S9, S11, S6
	0x03BAEF5C MOV V14.16B, V9.16B
	0x03BAEF60 FADD S1, S1, S5
	0x03BAEF64 FADD S2, S2, S4
	0x03BAEF68 FADD S0, S0, S3
	0x03BAEF6C FADD S1, S1, S14
	0x03BAEF70 FADD S2, S2, S9
	0x03BAEF74 FADD S0, S0, S11
	0x03BAEF78 STP S1, S2, [X31 + 0x60]
	0x03BAEF7C STR S0, [X31 + 0x68]
	0x03BAEF80 B 0x3BAF4EC
	0x03BAEF84 MOV V28.16B, V11.16B
	0x03BAEF88 MOV V1.16B, V9.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x835000
	008 Move X23, 0x5AF000
	009 Move W8, [X20+3241]
	010 Move X23, [X23+3592]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x56E000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5AF000
	020 Move X0, [X0+3592]
	021 Call 0x1C17CF4
	022 Move X0, 0x5AF000
	023 Move X0, [X0+3664]
	024 Call 0x1C17CF4
	025 Move X0, 0x5AF000
	026 Move X0, [X0+3672]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3241], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x56E000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5AF000
	053 Move X8, [X8+3672]
	054 Move X21, [X8]
	055 Move X8, 0x5AF000
	056 Move X8, [X8+3664]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03BAEF8C MOV V2.16B, V14.16B
	0x03BAEF90 TBZ X22, 0x0, 0x3BAF040
	0x03BAEF94 FMOV S17, W31
	0x03BAEF98 FMUL S2, S0, S17
	0x03BAEF9C FMUL S3, S15, S17
	0x03BAEFA0 FMUL S4, S8, S17
	0x03BAEFA4 FSUB S5, S2, S15
	0x03BAEFA8 FSUB S3, S3, S4
	0x03BAEFAC FSUB S2, S8, S2
	0x03BAEFB0 FADD S3, S3, S3
	0x03BAEFB4 FADD S2, S2, S2
	0x03BAEFB8 FADD S4, S5, S5
	0x03BAEFBC FMOV S1, 1
	0x03BAEFC0 FMUL S5, S23, S3
	0x03BAEFC4 FMUL S6, S23, S2
	0x03BAEFC8 FMUL S7, S23, S4
	0x03BAEFCC FMUL S16, S0, S2
	0x03BAEFD0 FADD S1, S5, S1
	0x03BAEFD4 FMUL S5, S15, S4
	0x03BAEFD8 FADD S6, S6, S17
	0x03BAEFDC FADD S17, S7, S17
	0x03BAEFE0 FMUL S7, S8, S3
	0x03BAEFE4 FMUL S2, S8, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x835000
	005 Move X19, 0x5AF000
	006 Move W8, [X20+3242]
	007 Move X19, [X19+3592]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5AF000
	013 Move X0, [X0+3592]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3242], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call ComputeNewOneHandedScale_00000BFD$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03BAEFE8 FMUL S4, S0, S4
	0x03BAEFEC FMUL S3, S15, S3
	0x03BAEFF0 FSUB S2, S5, S2
	0x03BAEFF4 FSUB S4, S7, S4
	0x03BAEFF8 FSUB S3, S16, S3
	0x03BAEFFC FADD S1, S1, S2
	0x03BAF000 FADD S4, S6, S4
	0x03BAF004 FADD S17, S17, S3
	0x03BAF008 FMUL S2, S1, S10
	0x03BAF00C FMUL S3, S4, S12
	0x03BAF010 FMUL S6, S1, S1
	0x03BAF014 FMUL S7, S4, S4
	0x03BAF018 FMUL S5, S17, S13
	0x03BAF01C FMUL S16, S17, S17
	0x03BAF020 FADD S2, S2, S3
	0x03BAF024 FADD S3, S6, S7
	0x03BAF028 FADD S2, S5, S2
	0x03BAF02C FADD S3, S16, S3
	0x03BAF030 FDIV S3, S2, S3
	0x03BAF034 FMUL S2, S1, S3
	0x03BAF038 FMUL S1, S4, S3
	0x03BAF03C FMUL S28, S17, S3
	0x03BAF040 MOV V3.16B, V11.16B
	0x03BAF044 MOV V4.16B, V9.16B
	0x03BAF048 MOV V5.16B, V14.16B
	0x03BAF04C TBZ X21, 0x0, 0x3BAF0FC
	0x03BAF050 FMOV S3, W31
	0x03BAF054 FMUL S5, S15, S3
	0x03BAF058 FMUL S6, S8, S3
	0x03BAF05C FMUL S7, S0, S3
	0x03BAF060 FSUB S16, S0, S5
	0x03BAF064 FSUB S5, S5, S8
	0x03BAF068 FSUB S6, S6, S7
	0x03BAF06C FADD S5, S5, S5
	0x03BAF070 FADD S6, S6, S6
	0x03BAF074 FADD S7, S16, S16
	0x03BAF078 FMOV S4, 1
	0x03BAF07C FMUL S16, S23, S5
	0x03BAF080 FMUL S17, S23, S6
	0x03BAF084 FMUL S18, S23, S7
	0x03BAF088 FMUL S19, S0, S6
	0x03BAF08C FADD S4, S17, S4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x835000
	006 Move X19, 0x5AF000
	007 Move X20, 0x56E000
	008 Move W8, [X21+3243]
	009 Move X19, [X19+3680]
	010 Call 0x3EB29AC
	011 Return 
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x56D000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5AE000
	020 Move X0, [X0+3592]
	021 Call 0x1C17CF4
	022 Move X0, 0x5AE000
	023 Move X0, [X0+3680]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3243], W8
	027 Move X0, [X20]
	028 Move X20, 0x5AE000
	029 Move X19, [X19]
	030 Move W8, [X0+224]
	031 Move X20, [X20+3592]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Call BurstCompiler.CompileILPPMethod2, X0
	038 Move X8, [X20]
	039 Move X19, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8+8], X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 

Method: System.Void Initialize()

Disassembly:
	0x03BAF090 FMUL S17, S15, S7

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BAF094 FADD S16, S16, S3

ISIL:
	001 Call ComputeNewOneHandedScale_00000BFD$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in UnityEngine.Vector3 currentScale, in UnityEngine.Vector3 initialScaleProportions, System.Boolean clampScale, in UnityEngine.Vector3 minScale, in UnityEngine.Vector3 maxScale, System.Single scaleDelta, System.Single deltaTime, System.Single scaleSpeed, out UnityEngine.Vector3 newScale)

Disassembly:
	0x03BAD180 FMUL S1, S10, S10
	0x03BAD184 FMUL S2, S11, S11
	0x03BAD188 FMUL S0, S12, S12
	0x03BAD18C FADD S1, S1, S2
	0x03BAD190 FADD S0, S0, S1
	0x03BAD194 FSQRT S0, S0
	0x03BAD198 FDIV S1, S13, S0
	0x03BAD19C FMOV S0, 1
	0x03BAD1A0 FCMP S1, S0
	0x03BAD1A4 B.LE 0x3BAD214
	0x03BAD1A8 FMOV S0, -1
	0x03BAD1AC FADD S0, S1, S0
	0x03BAD1B0 FMUL S0, S0, S9
	0x03BAD1B4 FSUB S0, S0, S8
	0x03BAD1B8 FCMP S0, 0x0
	0x03BAD1BC B.MI 0x3BAD2F4
	0x03BAD1C0 LDR V1, [X23]
	0x03BAD1C4 LDR V2, [X22]
	0x03BAD1C8 LDUR V3, [X23 + 0x4]
	0x03BAD1CC FMOV S4, 1
	0x03BAD1D0 FADD S0, S0, S4
	0x03BAD1D4 FMUL S1, S0, S1
	0x03BAD1D8 FABS S4, S1
	0x03BAD1DC FABS S5, S2
	0x03BAD1E0 FCMP S4, S5
	0x00000000 INVALID
	0x03BAD1E8 B.GT 0x3BAD20C
	0x03BAD1EC LDR W8, [X22 + 0x4]
	0x03BAD1F0 FMOV W9, S0
	0x03BAD1F4 AND W9, W9, 0x7FFFFFFF
	0x03BAD1F8 FMOV S3, W9
	0x03BAD1FC AND W8, W8, 0x7FFFFFFF
	0x03BAD200 FMOV S4, W8
	0x03BAD204 FCMP S3, S4
	0x03BAD208 B.LE 0x3BAD28C
	0x03BAD20C MOVZ W8, 0x1
	0x03BAD210 B 0x3BAD2AC
	0x03BAD214 B.PL 0x3BAD2F4
	0x03BAD218 FMOV S0, 1
	0x03BAD21C FDIV S1, S0, S1
	0x03BAD220 FMOV S2, -1
	0x03BAD224 FADD S1, S1, S2
	0x03BAD228 FMUL S1, S1, S9
	0x03BAD22C FSUB S1, S1, S8
	0x03BAD230 FCMP S1, 0x0
	0x03BAD234 B.MI 0x3BAD2F4
	0x03BAD238 LDR V3, [X23]
	0x03BAD23C LDR V2, [X21]
	0x03BAD240 FADD S1, S1, S0
	0x03BAD244 LDUR V4, [X23 + 0x4]
	0x03BAD248 FDIV S0, S0, S1
	0x03BAD24C FMUL S1, S0, S3
	0x03BAD250 FABS S3, S1
	0x03BAD254 FABS S5, S2
	0x03BAD258 FCMP S3, S5
	0x00000000 INVALID
	0x03BAD260 B.MI 0x3BAD284
	0x03BAD264 LDR W8, [X21 + 0x4]
	0x03BAD268 FMOV W9, S0
	0x03BAD26C AND W9, W9, 0x7FFFFFFF
	0x03BAD270 FMOV S3, W9
	0x03BAD274 AND W8, W8, 0x7FFFFFFF
	0x03BAD278 FMOV S4, W8
	0x03BAD27C FCMP S3, S4
	0x03BAD280 B.PL 0x3BAD2BC
	0x03BAD284 MOVZ W8, 0x1
	0x03BAD288 B 0x3BAD2DC
	0x03BAD28C LDR W8, [X22 + 0x8]
	0x03BAD290 UNIMPLEMENTED
	0x03BAD294 AND W9, W9, 0x7FFFFFFF
	0x03BAD298 FMOV S3, W9
	0x03BAD29C AND W8, W8, 0x7FFFFFFF
	0x03BAD2A0 FMOV S4, W8
	0x03BAD2A4 FCMP S3, S4
	0x03BAD2A8 CSET W8, GT
	0x03BAD2AC ANDS W31, W20, W8, 0x0
	0x03BAD2B0 B.EQ 0x3BAD2EC
	0x03BAD2B4 LDUR V0, [X22 + 0x4]
	0x03BAD2B8 B 0x3BAD2E8
	0x03BAD2BC LDR W8, [X21 + 0x8]

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0x836000
	014 Move X26, 0x56F000
	015 Move W8, [X25+3244]
	016 Move X26, [X26+2120]
	017 Move X19, X5
	018 Move V8, V2
	019 Move V9, V1
	020 Move V10, V0
	021 Move X20, X4
	022 Move X21, X3
	023 Move W24, W2
	024 Move X22, X1
	025 Move X23, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x56F000
	031 Move X0, [X0+2120]
	032 Call 0x1C17CF4
	033 Move X0, 0x5B0000
	034 Move X0, [X0+3592]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+3244], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call BurstCompiler.get_IsEnabled
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {82}
	049 Move X8, 0x5B0000
	050 Move X8, [X8+3592]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Call ComputeNewOneHandedScale_00000BFD$BurstDirectCall.GetFunctionPointer
	057 Compare X0, 0
	058 JumpIfEqual {82}
	059 Move X6, X0
	060 And W2, W24, 1
	061 Move X0, X23
	062 Move X1, X22
	063 Move X3, X21
	064 Move X4, X20
	065 Move V1, V9
	066 Move V2, V8
	067 Move X5, X19
	068 Move X20, [X31+80]
	069 Move X19, [X31+88]
	070 Move X22, [X31+64]
	071 Move X21, [X31+72]
	072 Move X24, [X31+48]
	073 Move X23, [X31+56]
	074 Move X26, [X31+32]
	075 Move X25, [X31+40]
	076 Move X30, [X31+24]
	077 Move D9, [X31+8]
	078 Move D8, [X31+16]
	079 Move V0, V10
	080 Move V10, [X31+96]
	081 CallNoReturn X6
	082 And W2, W24, 1
	083 Move X0, X23
	084 Move X1, X22
	085 Move X3, X21
	086 Move X4, X20
	087 Move V1, V9
	088 Move V2, V8
	089 Move X5, X19
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X30, [X31+24]
	099 Move D9, [X31+8]
	100 Move D8, [X31+16]
	101 Move V0, V10
	102 Move X6, X31
	103 Move V10, [X31+96]
	104 Call 0x3BB053C
	105 Return 

