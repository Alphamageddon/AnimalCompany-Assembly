Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRGeneralGrabTransformer/AdjustPositionForPermittedAxesBurst_00000BFB$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03BAE9F8 LDP S4, S5, [X20 + 0x28]
	0x03BAE9FC LDR V6, [X20 + 0x30]
	0x03BAEA00 MOV V0.16B, V8.16B
	0x03BAEA04 MOV V1.16B, V9.16B
	0x03BAEA08 MOV V2.16B, V10.16B
	0x03BAEA0C MOV V3.16B, V11.16B
	0x03BAEA10 MOV X0, X31
	0x03BAEA14 BL 0x3C2A9FC
	0x03BAEA18 FADD S0, S14, S0
	0x03BAEA1C FADD S1, S12, S1
	0x03BAEA20 FADD S2, S13, S2
	0x03BAEA24 STP S0, S1, [X19]
	0x03BAEA28 STR S2, [X19 + 0x8]
	0x03BAEA2C LDP S0, S3, [X20 + 0x34]
	0x03BAEA30 LDP S2, S1, [X20 + 0x3C]
	0x03BAEA34 FMUL S4, S11, S0
	0x03BAEA38 FMUL S5, S8, S1
	0x03BAEA3C FMUL S16, S11, S3
	0x03BAEA40 FMUL S17, S9, S1
	0x03BAEA44 FMUL S21, S8, S0
	0x03BAEA48 FMUL S22, S11, S2
	0x03BAEA4C FMUL S23, S11, S1
	0x03BAEA50 FMUL S1, S10, S1
	0x03BAEA54 FMUL S6, S9, S2
	0x03BAEA58 FMUL S7, S10, S3
	0x03BAEA5C FMUL S18, S10, S0
	0x03BAEA60 FMUL S20, S8, S3
	0x03BAEA64 FMUL S3, S9, S3
	0x03BAEA68 FADD S4, S4, S5
	0x03BAEA6C FADD S5, S16, S17
	0x03BAEA70 FADD S1, S22, S1
	0x03BAEA74 FSUB S16, S23, S21
	0x03BAEA78 FMUL S19, S8, S2
	0x03BAEA7C FMUL S0, S9, S0
	0x03BAEA80 FMUL S2, S10, S2
	0x03BAEA84 FADD S4, S6, S4
	0x03BAEA88 FADD S5, S18, S5
	0x03BAEA8C FADD S1, S20, S1
	0x03BAEA90 FSUB S3, S16, S3
	0x03BAEA94 FSUB S4, S4, S7
	0x03BAEA98 FSUB S5, S5, S19
	0x03BAEA9C FSUB S0, S1, S0
	0x03BAEAA0 FSUB S1, S3, S2
	0x03BAEAA4 STP S4, S5, [X19 + 0xC]
	0x03BAEAA8 STP S0, S1, [X19 + 0x14]
	0x03BAEAAC B 0x3BAEAF0
	0x03BAEAB0 LDR X8, [X21]
	0x03BAEAB4 MOV X0, X21
	0x03BAEAB8 MOV X1, X22
	0x03BAEABC LDR X9, [X8 + 0x5A8]
	0x03BAEAC0 LDR X2, [X8 + 0x5B0]
	0x03BAEAC4 BLR X9
	0x03BAEAC8 CBZ X0, 0x3BAEB14
	0x03BAEACC LDP S1, S2, [X20 + 0x2C]
	0x03BAEAD0 LDR V0, [X20 + 0x28]
	0x03BAEAD4 MOV X1, X31
	0x03BAEAD8 BL 0x3C40610
	0x03BAEADC FADD S0, S14, S0
	0x03BAEAE0 FADD S1, S12, S1
	0x03BAEAE4 FADD S2, S13, S2
	0x03BAEAE8 STP S0, S1, [X19]
	0x03BAEAEC STR S2, [X19 + 0x8]
	0x03BAEAF0 LDP X20, X19, [X31 + 0x70]
	0x03BAEAF4 LDP X22, X21, [X31 + 0x60]
	0x03BAEAF8 LDR X30, [X31 + 0x58]
	0x03BAEAFC LDP D9, D8, [X31 + 0x48]
	0x03BAEB00 LDP D11, D10, [X31 + 0x38]
	0x03BAEB04 LDP D13, D12, [X31 + 0x28]
	0x03BAEB08 LDR V14, [X31 + 0x20]
	0x03BAEB0C ADD X31, X31, 0x80
	0x03BAEB10 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x835000
	008 Move X23, 0x5AF000
	009 Move W8, [X20+3236]
	010 Move X23, [X23+3584]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5AF000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x5AF000
	020 Move X0, [X0+3640]
	021 Call 0x1C17CF4
	022 Move X0, 0x56E000
	023 Move X0, [X0+2120]
	024 Call 0x1C17CF4
	025 Move X0, 0x5AF000
	026 Move X0, [X0+3648]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3236], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x56E000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5AF000
	053 Move X8, [X8+3648]
	054 Move X21, [X8]
	055 Move X8, 0x5AF000
	056 Move X8, [X8+3640]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03BAEB14 BL 0x1C16F20
	0x03BAEB18 MOV X1, X31
	0x03BAEB1C B 0x3C36C30
	0x03BAEB20 ORR W8, W2, 0x2
	0x03BAEB24 CMP W8, 0x3
	0x03BAEB28 B.NE 0x3BAEB38
	0x03BAEB2C MOV X0, X1
	0x03BAEB30 MOV X1, X3
	0x03BAEB34 B 0x3BA9344
	0x03BAEB38 RET
	0x03BAEB3C MOV X1, X31
	0x03BAEB40 B 0x3C36C30
	0x03BAEB44 SUB X31, X31, 0x60
	0x03BAEB48 STP D15, D14, [X31 + 0x10]
	0x03BAEB4C STP D13, D12, [X31 + 0x20]
	0x03BAEB50 STP D11, D10, [X31 + 0x30]
	0x03BAEB54 STP D9, D8, [X31 + 0x40]
	0x03BAEB58 STP X30, X19, [X31 + 0x50]
	0x03BAEB5C LDP S4, S5, [X5]
	0x03BAEB60 LDR V6, [X5 + 0x8]
	0x03BAEB64 LDP S7, S16, [X3]
	0x03BAEB68 LDR V17, [X3 + 0x8]
	0x03BAEB6C LDP S0, S1, [X1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x835000
	005 Move X19, 0x5AF000
	006 Move W8, [X20+3237]
	007 Move X19, [X19+3584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5AF000
	013 Move X0, [X0+3584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3237], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call AdjustPositionForPermittedAxesBurst_00000BFB$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03BAEB70 LDP S2, S3, [X1 + 0x8]
	0x03BAEB74 LDP S19, S20, [X6]
	0x03BAEB78 LDR V21, [X6 + 0x8]
	0x03BAEB7C LDP S18, S22, [X7]
	0x03BAEB80 LDR V23, [X7 + 0x8]
	0x03BAEB84 FMUL S5, S5, S16
	0x03BAEB88 FMUL S6, S6, S17
	0x03BAEB8C FMUL S4, S4, S7
	0x03BAEB90 FMUL S8, S6, S1
	0x03BAEB94 FMUL S11, S5, S2
	0x03BAEB98 FMUL S7, S7, S19
	0x03BAEB9C FMUL S16, S16, S20
	0x03BAEBA0 FMUL S17, S17, S21
	0x03BAEBA4 FMUL S19, S0, S22
	0x03BAEBA8 FMUL S20, S1, S23
	0x03BAEBAC FMUL S21, S2, S18
	0x03BAEBB0 FMUL S28, S1, S18
	0x03BAEBB4 FMUL S29, S2, S22
	0x03BAEBB8 FMUL S30, S0, S23
	0x03BAEBBC FMUL S31, S5, S0
	0x03BAEBC0 FMUL S9, S4, S2
	0x03BAEBC4 FMUL S10, S4, S1
	0x03BAEBC8 FMUL S12, S0, S6
	0x03BAEBCC FSUB S8, S8, S11
	0x03BAEBD0 LDP S24, S25, [X2]
	0x03BAEBD4 LDP S26, S27, [X2 + 0x8]
	0x03BAEBD8 FSUB S19, S19, S28
	0x03BAEBDC FSUB S20, S20, S29
	0x03BAEBE0 FSUB S21, S21, S30
	0x03BAEBE4 FSUB S31, S31, S10
	0x03BAEBE8 FSUB S9, S9, S12
	0x03BAEBEC FADD S8, S8, S8
	0x03BAEBF0 STR S18, [X31 + 0x4]
	0x03BAEBF4 FADD S20, S20, S20
	0x03BAEBF8 FADD S21, S21, S21
	0x03BAEBFC FADD S19, S19, S19
	0x03BAEC00 FADD S9, S9, S9
	0x03BAEC04 FADD S31, S31, S31
	0x03BAEC08 FMUL S18, S3, S8
	0x03BAEC0C FMUL S10, S3, S20
	0x03BAEC10 FMUL S11, S3, S21
	0x03BAEC14 FMUL S12, S3, S19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x835000
	006 Move X19, 0x5AF000
	007 Move X20, 0x56E000
	008 Move W8, [X21+3238]
	009 Move X19, [X19+3656]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5AF000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x56E000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0x5AF000
	022 Move X0, [X0+3656]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3238], W8
	026 Move X0, [X20]
	027 Move X20, 0x5AF000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+3584]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03BAEC18 STR S18, [X31]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BAEC1C FMUL S18, S3, S9

ISIL:
	001 Call AdjustPositionForPermittedAxesBurst_00000BFB$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in UnityEngine.Vector3 targetPosition, in UnityEngine.Pose originalObjectPose, UnityEngine.XR.Interaction.Toolkit.Transformers.XRGeneralGrabTransformer/ConstrainedAxisDisplacementMode axisDisplacementMode, System.Boolean hasX, System.Boolean hasY, System.Boolean hasZ, out UnityEngine.Vector3 adjustedTargetPosition)

Disassembly:
	0x03BACC44 FMUL S17, S23, S6
	0x03BACC48 FADD S16, S18, S18
	0x03BACC4C FMUL S19, S28, S6
	0x03BACC50 FADD S4, S17, S4
	0x03BACC54 FMUL S17, S15, S5
	0x03BACC58 FMUL S7, S23, S5
	0x03BACC5C FMUL S18, S23, S16
	0x03BACC60 FSUB S17, S19, S17
	0x03BACC64 FMUL S19, S15, S16
	0x03BACC68 FMUL S5, S8, S5
	0x03BACC6C FMUL S6, S8, S6
	0x03BACC70 FMUL S16, S28, S16
	0x03BACC74 FADD S7, S7, S3
	0x03BACC78 FADD S18, S18, S3
	0x03BACC7C FMUL S0, S1, S3
	0x03BACC80 FSUB S3, S19, S6
	0x03BACC84 FSUB S5, S5, S16
	0x03BACC88 FADD S3, S7, S3
	0x03BACC8C FADD S4, S4, S5
	0x03BACC90 FADD S6, S18, S17
	0x03BACC94 FMUL S5, S10, S3
	0x03BACC98 FMUL S7, S12, S4
	0x03BACC9C FMUL S17, S3, S3
	0x03BACCA0 FMUL S18, S4, S4
	0x03BACCA4 FMUL S16, S13, S6
	0x03BACCA8 FADD S5, S5, S7
	0x03BACCAC FMUL S7, S6, S6
	0x03BACCB0 FADD S17, S17, S18
	0x03BACCB4 FADD S5, S16, S5
	0x03BACCB8 FADD S7, S7, S17
	0x03BACCBC FDIV S7, S5, S7
	0x03BACCC0 FMUL S5, S3, S7
	0x03BACCC4 FMUL S4, S4, S7
	0x03BACCC8 FMUL S3, S6, S7
	0x03BACCCC MOV V9.16B, V0.16B
	0x03BACCD0 STR V1, [X31]
	0x03BACCD4 B 0x3BACCEC
	0x03BACCD8 STR V1, [X31]
	0x03BACCDC MOV V3.16B, V11.16B
	0x03BACCE0 MOV V4.16B, V21.16B
	0x03BACCE4 MOV V5.16B, V14.16B
	0x03BACCE8 MOV V9.16B, V2.16B
	0x03BACCEC STR V0, [X31 + 0x1]
	0x03BACCF0 TBZ X20, 0x0, 0x3BACDA0
	0x03BACCF4 FMOV S6, W31
	0x03BACCF8 FMUL S16, S28, S6
	0x03BACCFC FMUL S17, S8, S6
	0x03BACD00 FMUL S18, S15, S6
	0x03BACD04 FSUB S16, S16, S18
	0x03BACD08 FSUB S18, S15, S17
	0x03BACD0C FSUB S17, S17, S28
	0x03BACD10 FADD S18, S18, S18
	0x03BACD14 FADD S17, S17, S17
	0x03BACD18 FADD S16, S16, S16
	0x03BACD1C FMUL S19, S23, S18
	0x03BACD20 FMUL S20, S23, S17
	0x03BACD24 FMUL S21, S23, S16
	0x03BACD28 FMUL S22, S28, S17
	0x03BACD2C FMUL S17, S8, S17
	0x03BACD30 FMUL S23, S8, S18
	0x03BACD34 FMUL S24, S15, S16
	0x03BACD38 FMUL S16, S28, S16
	0x03BACD3C FMOV S7, 1
	0x03BACD40 FMUL S18, S15, S18
	0x03BACD44 FADD S19, S19, S6
	0x03BACD48 FADD S6, S20, S6
	0x03BACD4C FSUB S17, S24, S17
	0x03BACD50 FSUB S16, S23, S16

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x837000
	012 Move X27, 0x570000
	013 Move W8, [X26+3239]
	014 Move X27, [X27+2120]
	015 Move X19, X6
	016 Move W22, W5
	017 Move W24, W4
	018 Move W25, W3
	019 Move W20, W2
	020 Move X21, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x5B1000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x570000
	030 Move X0, [X0+2120]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+3239], W8
	034 Move X0, [X27]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X31
	040 Call BurstCompiler.get_IsEnabled
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {74}
	045 Move X8, 0x5B1000
	046 Move X8, [X8+3584]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call AdjustPositionForPermittedAxesBurst_00000BFB$BurstDirectCall.GetFunctionPointer
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X7, X0
	056 And W3, W25, 1
	057 And W4, W24, 1
	058 And W5, W22, 1
	059 Move X0, X23
	060 Move X1, X21
	061 Move W2, W20
	062 Move X6, X19
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Move X27, [X31+88]
	073 CallNoReturn X7
	074 And W3, W25, 1
	075 And W4, W24, 1
	076 And W5, W22, 1
	077 Move X0, X23
	078 Move X1, X21
	079 Move W2, W20
	080 Move X6, X19
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X26, [X31+16]
	088 Move X25, [X31+24]
	089 Move X7, X31
	090 Move X30, [X31+80]
	091 Move X27, [X31+88]
	092 Call 0x3BAFD90
	093 Return 

