Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRGeneralGrabTransformer/ComputeNewTwoHandedScale_00000BFE$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03BAF304 FMUL S7, S28, S3
	0x03BAF308 FMUL S5, S15, S3
	0x03BAF30C FMUL S16, S10, S3
	0x03BAF310 FSUB S6, S6, S7
	0x03BAF314 FMUL S17, S13, S3
	0x03BAF318 FSUB S18, S28, S5
	0x03BAF31C FSUB S5, S5, S8
	0x03BAF320 FADD S7, S16, S12
	0x03BAF324 FADD S6, S6, S6
	0x03BAF328 FMOV S4, 1
	0x03BAF32C FADD S5, S5, S5
	0x03BAF330 FADD S1, S17, S7
	0x03BAF334 FMUL S17, S23, S6
	0x03BAF338 FADD S16, S18, S18
	0x03BAF33C FMUL S19, S28, S6
	0x03BAF340 FADD S4, S17, S4
	0x03BAF344 FMUL S17, S15, S5
	0x03BAF348 FMUL S7, S23, S5
	0x03BAF34C FMUL S18, S23, S16
	0x03BAF350 FSUB S17, S19, S17
	0x03BAF354 FMUL S19, S15, S16
	0x03BAF358 FMUL S5, S8, S5
	0x03BAF35C FMUL S6, S8, S6
	0x03BAF360 FMUL S16, S28, S16
	0x03BAF364 FADD S7, S7, S3
	0x03BAF368 FADD S18, S18, S3
	0x03BAF36C FMUL S0, S1, S3
	0x03BAF370 FSUB S3, S19, S6
	0x03BAF374 FSUB S5, S5, S16
	0x03BAF378 FADD S3, S7, S3
	0x03BAF37C FADD S4, S4, S5
	0x03BAF380 FADD S6, S18, S17
	0x03BAF384 FMUL S5, S10, S3
	0x03BAF388 FMUL S7, S12, S4
	0x03BAF38C FMUL S17, S3, S3
	0x03BAF390 FMUL S18, S4, S4
	0x03BAF394 FMUL S16, S13, S6
	0x03BAF398 FADD S5, S5, S7
	0x03BAF39C FMUL S7, S6, S6
	0x03BAF3A0 FADD S17, S17, S18
	0x03BAF3A4 FADD S5, S16, S5
	0x03BAF3A8 FADD S7, S7, S17
	0x03BAF3AC FDIV S7, S5, S7
	0x03BAF3B0 FMUL S5, S3, S7
	0x03BAF3B4 FMUL S4, S4, S7
	0x03BAF3B8 FMUL S3, S6, S7
	0x03BAF3BC MOV V9.16B, V0.16B
	0x03BAF3C0 STR V1, [X31]
	0x03BAF3C4 B 0x3BAF3DC
	0x03BAF3C8 STR V1, [X31]
	0x03BAF3CC MOV V3.16B, V11.16B
	0x03BAF3D0 MOV V4.16B, V21.16B
	0x03BAF3D4 MOV V5.16B, V14.16B
	0x03BAF3D8 MOV V9.16B, V2.16B
	0x03BAF3DC STR V0, [X31 + 0x1]
	0x03BAF3E0 TBZ X20, 0x0, 0x3BAF490
	0x03BAF3E4 FMOV S6, W31
	0x03BAF3E8 FMUL S16, S28, S6
	0x03BAF3EC FMUL S17, S8, S6
	0x03BAF3F0 FMUL S18, S15, S6
	0x03BAF3F4 FSUB S16, S16, S18
	0x03BAF3F8 FSUB S18, S15, S17
	0x03BAF3FC FSUB S17, S17, S28
	0x03BAF400 FADD S18, S18, S18
	0x03BAF404 FADD S17, S17, S17
	0x03BAF408 FADD S16, S16, S16
	0x03BAF40C FMUL S19, S23, S18
	0x03BAF410 FMUL S20, S23, S17
	0x03BAF414 FMUL S21, S23, S16
	0x03BAF418 FMUL S22, S28, S17
	0x03BAF41C FMUL S17, S8, S17

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x834000
	008 Move X23, 0x5AE000
	009 Move W8, [X20+3246]
	010 Move X23, [X23+3600]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x56D000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5AE000
	020 Move X0, [X0+3600]
	021 Call 0x1C17CF4
	022 Move X0, 0x5AE000
	023 Move X0, [X0+3688]
	024 Call 0x1C17CF4
	025 Move X0, 0x5AE000
	026 Move X0, [X0+3696]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3246], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x56D000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5AE000
	053 Move X8, [X8+3696]
	054 Move X21, [X8]
	055 Move X8, 0x5AE000
	056 Move X8, [X8+3688]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03BAF420 FMUL S23, S8, S18
	0x03BAF424 FMUL S24, S15, S16
	0x03BAF428 FMUL S16, S28, S16
	0x03BAF42C FMOV S7, 1
	0x03BAF430 FMUL S18, S15, S18
	0x03BAF434 FADD S19, S19, S6
	0x03BAF438 FADD S6, S20, S6
	0x03BAF43C FSUB S17, S24, S17
	0x03BAF440 FSUB S16, S23, S16
	0x03BAF444 FADD S7, S21, S7
	0x03BAF448 FSUB S18, S22, S18
	0x03BAF44C FADD S17, S19, S17
	0x03BAF450 FADD S6, S6, S16
	0x03BAF454 FADD S7, S7, S18
	0x03BAF458 FMUL S16, S17, S10
	0x03BAF45C FMUL S18, S6, S12
	0x03BAF460 FMUL S20, S17, S17
	0x03BAF464 FMUL S21, S6, S6
	0x03BAF468 FMUL S19, S7, S13
	0x03BAF46C FMUL S22, S7, S7
	0x03BAF470 FADD S16, S16, S18
	0x03BAF474 FADD S18, S20, S21
	0x03BAF478 FADD S16, S19, S16

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x834000
	005 Move X19, 0x5AE000
	006 Move W8, [X20+3247]
	007 Move X19, [X19+3600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5AE000
	013 Move X0, [X0+3600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3247], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call ComputeNewTwoHandedScale_00000BFE$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03BAF47C FADD S18, S22, S18
	0x03BAF480 FDIV S16, S16, S18
	0x03BAF484 FMUL S14, S17, S16
	0x03BAF488 FMUL S21, S6, S16
	0x03BAF48C FMUL S11, S7, S16
	0x03BAF490 FADD S2, S31, S5
	0x03BAF494 FADD S1, S29, S4
	0x03BAF498 FADD S0, S30, S3
	0x03BAF49C FADD S2, S2, S14
	0x03BAF4A0 FADD S1, S1, S21
	0x03BAF4A4 FADD S0, S0, S11
	0x03BAF4A8 ADD X0, X31, 0x40
	0x03BAF4AC ADD X1, X31, 0x80
	0x03BAF4B0 ADD X2, X31, 0x50
	0x03BAF4B4 MOV X3, X31
	0x03BAF4B8 STP S2, S1, [X31 + 0x40]
	0x03BAF4BC STR S0, [X31 + 0x48]
	0x03BAF4C0 BL 0x3B86E88
	0x03BAF4C4 LDP V2, V3, [X31]
	0x03BAF4C8 LDR V0, [X31 + 0x50]
	0x03BAF4CC LDR V1, [X31 + 0x58]
	0x03BAF4D0 MOV V3.S[1], V2.S[0]
	0x03BAF4D4 FADD V0.2S, V3.2S, V0.2S
	0x03BAF4D8 FADD S1, S9, S1
	0x03BAF4DC STR D0, [X31 + 0x60]
	0x03BAF4E0 STR S1, [X31 + 0x68]
	0x03BAF4E4 LDP S18, S17, [X31 + 0x38]
	0x03BAF4E8 LDR V19, [X31 + 0x34]
	0x03BAF4EC LDP S0, S1, [X31 + 0x60]
	0x03BAF4F0 LDR V2, [X31 + 0x68]
	0x03BAF4F4 MOV X0, X31
	0x03BAF4F8 FADD S0, S17, S0
	0x03BAF4FC FADD S1, S18, S1
	0x03BAF500 FADD S2, S19, S2
	0x03BAF504 BL 0x3887BE0
	0x03BAF508 STP S0, S1, [X19]
	0x03BAF50C STR S2, [X19 + 0x8]
	0x03BAF510 LDP X20, X19, [X31 + 0x110]
	0x03BAF514 LDP X22, X21, [X31 + 0x100]
	0x03BAF518 LDP X24, X23, [X31 + 0xF0]
	0x03BAF51C LDP X26, X25, [X31 + 0xE0]
	0x03BAF520 LDP X29, X30, [X31 + 0xD0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x834000
	006 Move X19, 0x5AE000
	007 Move X20, 0x56D000
	008 Move W8, [X21+3248]
	009 Move X19, [X19+3704]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x56D000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5AE000
	019 Move X0, [X0+3600]
	020 Call 0x1C17CF4
	021 Move X0, 0x5AE000
	022 Move X0, [X0+3704]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3248], W8
	026 Move X0, [X20]
	027 Move X20, 0x5AE000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+3600]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03BAF524 LDP D9, D8, [X31 + 0xC0]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BAF528 LDP D11, D10, [X31 + 0xB0]

ISIL:
	001 Call ComputeNewTwoHandedScale_00000BFE$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in UnityEngine.Vector3 startScale, in UnityEngine.Vector3 currentScale, in UnityEngine.Vector3 startHandleBar, in UnityEngine.Vector3 newHandleBar, System.Boolean clampScale, System.Single scaleMultiplier, System.Single thresholdMoveRatioForScale, in UnityEngine.Vector3 minScale, in UnityEngine.Vector3 maxScale, out UnityEngine.Vector3 newScale)

Disassembly:
	0x03BAD2C0 UNIMPLEMENTED
	0x03BAD2C4 AND W9, W9, 0x7FFFFFFF
	0x03BAD2C8 FMOV S3, W9
	0x03BAD2CC AND W8, W8, 0x7FFFFFFF
	0x03BAD2D0 FMOV S4, W8
	0x03BAD2D4 FCMP S3, S4
	0x03BAD2D8 CSET W8, MI
	0x03BAD2DC ANDS W31, W20, W8, 0x0
	0x03BAD2E0 B.EQ 0x3BAD2EC
	0x03BAD2E4 LDUR V0, [X21 + 0x4]
	0x03BAD2E8 MOV V1.16B, V2.16B
	0x03BAD2EC STR S1, [X19]
	0x03BAD2F0 STUR D0, [X19 + 0x4]
	0x03BAD2F4 LDP X20, X19, [X31 + 0x70]
	0x03BAD2F8 LDP X22, X21, [X31 + 0x60]
	0x03BAD2FC LDP X24, X23, [X31 + 0x50]
	0x03BAD300 LDP X26, X25, [X31 + 0x40]
	0x03BAD304 LDR X30, [X31 + 0x30]
	0x03BAD308 LDP D9, D8, [X31 + 0x20]
	0x03BAD30C LDP D11, D10, [X31 + 0x10]
	0x03BAD310 LDP D13, D12, [X31], #0x80
	0x03BAD314 RET
	0x03BAD318 STP X30, X21, [X31 - 0x20]!
	0x03BAD31C STP X20, X19, [X31 + 0x10]
	0x03BAD320 LDR X8, [X2 + 0x8]
	0x03BAD324 STP X1, X2, [X0 + 0x20]
	0x03BAD328 MOV X19, X0
	0x03BAD32C MOV X20, X1
	0x03BAD330 STR X8, [X0 + 0x10]
	0x03BAD334 LDRB W21, [X2 + 0x52]
	0x03BAD338 STR X0, [X0 + 0x40]
	0x03BAD33C MOV X0, X2
	0x03BAD340 BL 0x1C16D84
	0x03BAD344 TBZ X0, 0x0, 0x3BAD35C
	0x03BAD348 CMP W21, 0x9
	0x03BAD34C B.NE 0x3BAD378
	0x03BAD350 ADRP X8, 0xFFFFFFFFFE053000
	0x03BAD354 ADD X8, X8, 0x32C
	0x03BAD358 B 0x3BAD36C
	0x03BAD35C CMP W21, 0x8
	0x03BAD360 B.NE 0x3BAD374
	0x03BAD364 ADRP X8, 0xFFFFFFFFFE053000
	0x03BAD368 ADD X8, X8, 0x2F4
	0x03BAD36C STR X8, [X19 + 0x18]
	0x03BAD370 B 0x3BAD388
	0x03BAD374 CBZ X20, 0x3BAD3A0
	0x03BAD378 LDR X8, [X19 + 0x10]
	0x03BAD37C LDR X9, [X19 + 0x20]
	0x03BAD380 STR X8, [X19 + 0x18]
	0x03BAD384 STR X9, [X19 + 0x40]
	0x03BAD388 ADRP X8, 0xFFFFFFFFFE053000
	0x03BAD38C ADD X8, X8, 0x248
	0x03BAD390 STR X8, [X19 + 0x38]
	0x03BAD394 LDP X20, X19, [X31 + 0x10]
	0x03BAD398 LDP X30, X21, [X31], #0x20
	0x03BAD39C RET
	0x03BAD3A0 ADRP X1, 0xFFFFFFFFFCF6E000
	0x03BAD3A4 ADD X1, X1, 0xEE3
	0x03BAD3A8 MOV X0, X31
	0x03BAD3AC BL 0x1C16F3C
	0x03BAD3B0 MOV X1, X31
	0x03BAD3B4 BL 0x1C16DEC
	0x03BAD3B8 LDP X8, X9, [X31]
	0x03BAD3BC LDR X10, [X0 + 0x18]
	0x03BAD3C0 LDR X11, [X0 + 0x28]
	0x03BAD3C4 LDR X0, [X0 + 0x40]
	0x03BAD3C8 AND W5, W5, 0x1
	0x03BAD3CC STR X8, [X31]
	0x03BAD3D0 STP X9, X11, [X31 + 0x8]
	0x03BAD3D4 BR X10
	0x03BAD3D8 SUB X31, X31, 0xD0
	0x03BAD3DC STP X29, X30, [X31 + 0x70]
	0x03BAD3E0 STP X28, X27, [X31 + 0x80]
	0x03BAD3E4 STP X26, X25, [X31 + 0x90]
	0x03BAD3E8 STP X24, X23, [X31 + 0xA0]
	0x03BAD3EC STP X22, X21, [X31 + 0xB0]
	0x03BAD3F0 STP X20, X19, [X31 + 0xC0]
	0x03BAD3F4 LDR X8, [X31 + 0xE8]
	0x03BAD3F8 ADRP X21, 0x835000
	0x03BAD3FC ADRP X19, 0x571000
	0x03BAD400 ADRP X20, 0x54C000
	0x03BAD404 STP X0, X8, [X31 + 0x8]
	0x03BAD408 LDP X22, X8, [X31 + 0xD8]

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X27, 0x836000
	015 Move X28, 0x56F000
	016 Move W8, [X27+3249]
	017 Move X28, [X28+2120]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move V8, V1
	022 Move V9, V0
	023 Move W25, W4
	024 Move X22, X3
	025 Move X23, X2
	026 Move X24, X1
	027 Move X26, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x56F000
	033 Move X0, [X0+2120]
	034 Call 0x1C17CF4
	035 Move X0, 0x5B0000
	036 Move X0, [X0+3600]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X27+3249], W8
	040 Move X0, [X28]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call BurstCompiler.get_IsEnabled
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {86}
	051 Move X8, 0x5B0000
	052 Move X8, [X8+3600]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Call ComputeNewTwoHandedScale_00000BFE$BurstDirectCall.GetFunctionPointer
	059 Compare X0, 0
	060 JumpIfEqual {86}
	061 Move X8, X0
	062 And W4, W25, 1
	063 Move X0, X26
	064 Move X1, X24
	065 Move X2, X23
	066 Move X3, X22
	067 Move X5, X21
	068 Move X6, X20
	069 Move X7, X19
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X22, [X31+80]
	073 Move X21, [X31+88]
	074 Move X24, [X31+64]
	075 Move X23, [X31+72]
	076 Move X26, [X31+48]
	077 Move X25, [X31+56]
	078 Move X28, [X31+32]
	079 Move X27, [X31+40]
	080 Move X30, [X31+16]
	081 Move V0, V9
	082 Move V1, V8
	083 Move D9, [X31+112]
	084 Move D8, [X31+120]
	085 CallNoReturn X8
	086 And W4, W25, 1
	087 Move X0, X26
	088 Move X1, X24
	089 Move X2, X23
	090 Move X3, X22
	091 Move X5, X21
	092 Move X6, X20
	093 Move X7, X19
	094 Move X20, [X31+96]
	095 Move X19, [X31+104]
	096 Move X22, [X31+80]
	097 Move X21, [X31+88]
	098 Move X24, [X31+64]
	099 Move X23, [X31+72]
	100 Move X26, [X31+48]
	101 Move X25, [X31+56]
	102 Move X28, [X31+32]
	103 Move X27, [X31+40]
	104 Move X30, [X31+16]
	105 Move [X31+112], X31
	106 Move V0, V9
	107 Move V1, V8
	108 Move D9, [X31+112]
	109 Move D8, [X31+120]
	110 Call 0x3BB0768
	111 Return 

