Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRSocketGrabTransformer/IsWithinRadius_00000C22$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03BB29E0 LDR W9, [X8 + 0xE0]
	0x03BB29E4 CBNZ W9, 0x3BB29F0
	0x03BB29E8 MOV X0, X8
	0x03BB29EC BL 0x1C16DFC
	0x03BB29F0 MOV X0, X21
	0x03BB29F4 MOV X1, X31
	0x03BB29F8 MOV X2, X31
	0x03BB29FC BL 0x3C354F8
	0x03BB2A00 TBZ X0, 0x0, 0x3BB2A70
	0x03BB2A04 LDR X0, [X23]
	0x03BB2A08 LDR W8, [X0 + 0xE0]
	0x03BB2A0C CBNZ W8, 0x3BB2A14
	0x03BB2A10 BL 0x1C16DFC
	0x03BB2A14 MOV X0, X20
	0x03BB2A18 MOV X1, X31
	0x03BB2A1C MOV X2, X31
	0x03BB2A20 BL 0x3C354F8
	0x03BB2A24 CBZ X22, 0x3BB2A70
	0x03BB2A28 TBZ X0, 0x0, 0x3BB2A70
	0x03BB2A2C CBZ X21, 0x3BB2A80
	0x03BB2A30 LDR X8, [X21]
	0x03BB2A34 LDR X19, [X19 + 0x38]
	0x03BB2A38 MOV X0, X21
	0x03BB2A3C MOV X1, X31
	0x03BB2A40 LDR X9, [X8 + 0x5A8]
	0x03BB2A44 LDR X2, [X8 + 0x5B0]
	0x03BB2A48 BLR X9
	0x03BB2A4C CBZ X19, 0x3BB2A80
	0x03BB2A50 MOV X1, X0
	0x03BB2A54 MOV X0, X19
	0x03BB2A58 MOV X2, X22
	0x03BB2A5C MOV X3, X20
	0x03BB2A60 LDP X20, X19, [X31 + 0x20]
	0x03BB2A64 LDP X22, X21, [X31 + 0x10]
	0x03BB2A68 LDP X30, X23, [X31], #0x30
	0x03BB2A6C B 0x3BB47BC
	0x03BB2A70 LDP X20, X19, [X31 + 0x20]
	0x03BB2A74 LDP X22, X21, [X31 + 0x10]
	0x03BB2A78 LDP X30, X23, [X31], #0x30
	0x03BB2A7C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33230848
	021 Add X8, X8, 2452
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33230848
	024 Add X8, X8, 2432
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33230848
	033 Add X8, X8, 2316
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50946048
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Boolean Invoke(in Unity.Mathematics.float3 a, in Unity.Mathematics.float3 b, System.Single radius)

Disassembly:
	0x03BB2A80 BL 0x1C16F20
	0x03BB2A84 LDR X0, [X0 + 0x28]
	0x03BB2A88 RET
	0x03BB2A8C STR X1, [X0 + 0x28]
	0x03BB2A90 B 0x3BB2930

ISIL:
	001 Move X8, [X0+64]
	002 Move X4, [X0+24]
	003 Move X3, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X4

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 a, in Unity.Mathematics.float3 b, System.Single radius, System.AsyncCallback param_3, System.Object param_4)

Disassembly:
	0x03BB2A94 LDR X0, [X0 + 0x30]
	0x03BB2A98 RET
	0x03BB2A9C STR X1, [X0 + 0x30]
	0x03BB2AA0 B 0x3BB2930
	0x03BB2AA4 LDR X8, [X0 + 0x38]
	0x03BB2AA8 CBZ X8, 0x3BB2AB4
	0x03BB2AAC LDR X0, [X8 + 0x18]
	0x03BB2AB0 RET
	0x03BB2AB4 MOV X0, X31
	0x03BB2AB8 RET
	0x03BB2ABC STP X30, X19, [X31 - 0x10]!
	0x03BB2AC0 MOV X1, X31
	0x03BB2AC4 MOV X19, X0
	0x03BB2AC8 BL 0x3C32454
	0x03BB2ACC TBZ X0, 0x0, 0x3BB2AE0
	0x03BB2AD0 LDR X8, [X19 + 0x38]
	0x03BB2AD4 CMP X8, 0x0
	0x03BB2AD8 CSET W0, NE
	0x03BB2ADC B 0x3BB2AE4
	0x03BB2AE0 MOV W0, W31
	0x03BB2AE4 LDP X30, X19, [X31], #0x10
	0x03BB2AE8 RET
	0x03BB2AEC RET
	0x03BB2AF0 RET
	0x03BB2AF4 STP X30, X21, [X31 - 0x20]!
	0x03BB2AF8 STP X20, X19, [X31 + 0x10]
	0x03BB2AFC ADRP X20, 0x830000
	0x03BB2B00 ADRP X21, 0x541000
	0x03BB2B04 LDRB W8, [X20 + 0xCDE]
	0x03BB2B08 LDR X21, [X21 + 0x598]
	0x03BB2B0C MOV X19, X0
	0x03BB2B10 TBNZ X8, 0x0, 0x3BB2B64
	0x03BB2B14 ADRP X0, 0x5AA000
	0x03BB2B18 LDR X0, [X0 + 0xF68]
	0x03BB2B1C BL 0x1C16CF4
	0x03BB2B20 ADRP X0, 0x541000
	0x03BB2B24 LDR X0, [X0 + 0xA28]
	0x03BB2B28 BL 0x1C16CF4
	0x03BB2B2C ADRP X0, 0x541000
	0x03BB2B30 LDR X0, [X0 + 0x598]
	0x03BB2B34 BL 0x1C16CF4
	0x03BB2B38 ADRP X0, 0x5AA000
	0x03BB2B3C LDR X0, [X0 + 0xF70]
	0x03BB2B40 BL 0x1C16CF4
	0x03BB2B44 ADRP X0, 0x5AA000
	0x03BB2B48 LDR X0, [X0 + 0xF78]
	0x03BB2B4C BL 0x1C16CF4
	0x03BB2B50 ADRP X0, 0x5AA000
	0x03BB2B54 LDR X0, [X0 + 0xF80]
	0x03BB2B58 BL 0x1C16CF4
	0x03BB2B5C MOVZ W8, 0x1
	0x03BB2B60 STRB W8, [X20 + 0xCDE]
	0x03BB2B64 LDR X0, [X21]
	0x03BB2B68 LDR X20, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0x831000
	012 Move [X31+44], S0
	013 Move X25, 0x56D000
	014 Move X24, 0x542000
	015 Move W8, [X26+3278]
	016 Move X25, [X25+2104]
	017 Move X24, [X24+2704]
	018 Move X19, X4
	019 Move X20, X3
	020 Move X22, X2
	021 Move X23, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x542000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0x56D000
	031 Move X0, [X0+2104]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+3278], W8
	035 Move X0, [X25]
	036 Move X1, X23
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Call 0x1C17E04
	040 Move X8, [X25]
	041 Move [X31], X0
	042 Move X1, X22
	043 Move X0, X8
	044 Call 0x1C17E04
	045 Move X8, [X24]
	046 Move [X31+8], X0
	047 Add X1, X31, 44
	048 Move X0, X8
	049 Call 0x1C17E04
	050 Move [X31+16], X0
	051 Add X1, X31, 0
	052 Move X0, X21
	053 Move X2, X20
	054 Move X3, X19
	055 Call 0x1C17CB0
	056 Move X20, [X31+96]
	057 Move X19, [X31+104]
	058 Move X22, [X31+80]
	059 Move X21, [X31+88]
	060 Move X24, [X31+64]
	061 Move X23, [X31+72]
	062 Move X26, [X31+48]
	063 Move X25, [X31+56]
	064 Move X30, [X31+32]
	065 Add X31, X31, 112
	066 Return X0

Method: System.Boolean EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03BB2B6C LDR W8, [X0 + 0xE0]
	0x03BB2B70 CBNZ W8, 0x3BB2B78
	0x03BB2B74 BL 0x1C16DFC
	0x03BB2B78 MOV X0, X20
	0x03BB2B7C MOV X1, X31
	0x03BB2B80 MOV X2, X31
	0x03BB2B84 BL 0x3C3883C
	0x03BB2B88 TBZ X0, 0x0, 0x3BB2C00
	0x03BB2B8C MOV X0, X19
	0x03BB2B90 BL 0x3BB2D10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move W0, [X0]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

