Type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRSocketGrabTransformer/FastCalculateRadiusOffset_00000C20$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03BB21C8 STR X1, [X0 + 0x10]
	0x03BB21CC RET
	0x03BB21D0 LDRB W0, [X0 + 0x18]
	0x03BB21D4 RET
	0x03BB21D8 AND W8, W1, 0x1
	0x03BB21DC STRB W8, [X0 + 0x18]
	0x03BB21E0 RET
	0x03BB21E4 STR X30, [X31 - 0x20]!
	0x03BB21E8 STP X20, X19, [X31 + 0x10]
	0x03BB21EC MOV X19, X1
	0x03BB21F0 MOVZ W8, 0x1
	0x03BB21F4 MOV X1, X31
	0x03BB21F8 MOV X20, X0
	0x03BB21FC STRB W8, [X0 + 0x18]
	0x03BB2200 BL 0x33BDD8C
	0x03BB2204 CBZ X19, 0x3BB2218
	0x03BB2208 STR X19, [X20 + 0x10]
	0x03BB220C LDP X20, X19, [X31 + 0x10]
	0x03BB2210 LDR X30, [X31], #0x20
	0x03BB2214 RET
	0x03BB2218 ADRP X0, 0x549000
	0x03BB221C LDR X0, [X0 + 0x578]
	0x03BB2220 BL 0x1C16D08
	0x03BB2224 BL 0x1C16F10
	0x03BB2228 MOV X19, X0
	0x03BB222C ADRP X0, 0x5AA000
	0x03BB2230 LDR X0, [X0 + 0xF38]
	0x03BB2234 BL 0x1C16D08
	0x03BB2238 MOV X1, X0
	0x03BB223C MOV X0, X19
	0x03BB2240 MOV X2, X31
	0x03BB2244 BL 0x3314A68
	0x03BB2248 ADRP X0, 0x5AA000
	0x03BB224C LDR X0, [X0 + 0xF40]
	0x03BB2250 BL 0x1C16D08
	0x03BB2254 MOV X1, X0
	0x03BB2258 MOV X0, X19
	0x03BB225C BL 0x1C16DEC
	0x03BB2260 STR X30, [X31 - 0x10]!
	0x03BB2264 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33230848
	021 Add X8, X8, 1992
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33230848
	024 Add X8, X8, 1968
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33230848
	033 Add X8, X8, 1848
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50946048
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Single Invoke(in Unity.Mathematics.float3 initialScale, in Unity.Mathematics.float3 targetScale, in Unity.Mathematics.float3 initialBoundsSize, System.Single innerRadius)

Disassembly:
	0x03BB2268 CBZ X8, 0x3BB2280
	0x03BB226C LDR X4, [X8 + 0x18]
	0x03BB2270 LDR X0, [X8 + 0x40]
	0x03BB2274 LDR X3, [X8 + 0x28]
	0x03BB2278 LDR X30, [X31], #0x10

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 initialScale, in Unity.Mathematics.float3 targetScale, in Unity.Mathematics.float3 initialBoundsSize, System.Single innerRadius, System.AsyncCallback param_4, System.Object param_5)

Disassembly:
	0x03BB227C BR X4
	0x03BB2280 BL 0x1C16F20
	0x03BB2284 LDR X0, [X0 + 0x10]
	0x03BB2288 RET
	0x03BB228C STR X1, [X0 + 0x10]
	0x03BB2290 RET
	0x03BB2294 LDRB W0, [X0 + 0x18]
	0x03BB2298 RET
	0x03BB229C AND W8, W1, 0x1
	0x03BB22A0 STRB W8, [X0 + 0x18]
	0x03BB22A4 RET
	0x03BB22A8 STR X30, [X31 - 0x20]!
	0x03BB22AC STP X20, X19, [X31 + 0x10]
	0x03BB22B0 MOV X19, X1
	0x03BB22B4 MOVZ W8, 0x1
	0x03BB22B8 MOV X1, X31
	0x03BB22BC MOV X20, X0
	0x03BB22C0 STRB W8, [X0 + 0x18]
	0x03BB22C4 BL 0x33BDD8C
	0x03BB22C8 CBZ X19, 0x3BB22DC
	0x03BB22CC STR X19, [X20 + 0x10]
	0x03BB22D0 LDP X20, X19, [X31 + 0x10]
	0x03BB22D4 LDR X30, [X31], #0x20
	0x03BB22D8 RET
	0x03BB22DC ADRP X0, 0x549000
	0x03BB22E0 LDR X0, [X0 + 0x578]
	0x03BB22E4 BL 0x1C16D08
	0x03BB22E8 BL 0x1C16F10
	0x03BB22EC MOV X19, X0
	0x03BB22F0 ADRP X0, 0x5AA000
	0x03BB22F4 LDR X0, [X0 + 0xF38]
	0x03BB22F8 BL 0x1C16D08
	0x03BB22FC MOV X1, X0
	0x03BB2300 MOV X0, X19
	0x03BB2304 MOV X2, X31
	0x03BB2308 BL 0x3314A68
	0x03BB230C ADRP X0, 0x5AA000
	0x03BB2310 LDR X0, [X0 + 0xF48]
	0x03BB2314 BL 0x1C16D08
	0x03BB2318 MOV X1, X0
	0x03BB231C MOV X0, X19
	0x03BB2320 BL 0x1C16DEC
	0x03BB2324 STR X30, [X31 - 0x10]!
	0x03BB2328 LDR X8, [X0 + 0x10]
	0x03BB232C CBZ X8, 0x3BB2344
	0x03BB2330 LDR X4, [X8 + 0x18]
	0x03BB2334 LDR X0, [X8 + 0x40]
	0x03BB2338 LDR X3, [X8 + 0x28]
	0x03BB233C LDR X30, [X31], #0x10
	0x03BB2340 BR X4
	0x03BB2344 BL 0x1C16F20
	0x03BB2348 LDRB W0, [X0]
	0x03BB234C RET
	0x03BB2350 AND W8, W1, 0x1
	0x03BB2354 STRB W8, [X0]
	0x03BB2358 RET
	0x03BB235C LDP S0, S1, [X0 + 0x4]
	0x03BB2360 LDR V2, [X0 + 0xC]
	0x03BB2364 RET
	0x03BB2368 STP S0, S1, [X0 + 0x4]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X27, 0x831000
	013 Move [X31+44], S0
	014 Move X26, 0x56D000
	015 Move X25, 0x542000
	016 Move W8, [X27+3268]
	017 Move X26, [X26+2104]
	018 Move X25, [X25+2704]
	019 Move X19, X5
	020 Move X20, X4
	021 Move X22, X3
	022 Move X23, X2
	023 Move X24, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x542000
	030 Move X0, [X0+2704]
	031 Call 0x1C17CF4
	032 Move X0, 0x56D000
	033 Move X0, [X0+2104]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X27+3268], W8
	037 Move X0, [X26]
	038 Move X1, X24
	039 Move [X31+24], X31
	040 Move [X31+32], X31
	041 Call 0x1C17E04
	042 Move X8, [X26]
	043 Move [X31], X0
	044 Move X1, X23
	045 Move X0, X8
	046 Call 0x1C17E04
	047 Move X8, [X26]
	048 Move [X31+8], X0
	049 Move X1, X22
	050 Move X0, X8
	051 Call 0x1C17E04
	052 Move X8, [X25]
	053 Move [X31+16], X0
	054 Add X1, X31, 44
	055 Move X0, X8
	056 Call 0x1C17E04
	057 Move [X31+24], X0
	058 Add X1, X31, 0
	059 Move X0, X21
	060 Move X2, X20
	061 Move X3, X19
	062 Call 0x1C17CB0
	063 Move X20, [X31+112]
	064 Move X19, [X31+120]
	065 Move X22, [X31+96]
	066 Move X21, [X31+104]
	067 Move X24, [X31+80]
	068 Move X23, [X31+88]
	069 Move X26, [X31+64]
	070 Move X25, [X31+72]
	071 Move X30, [X31+48]
	072 Move X27, [X31+56]
	073 Add X31, X31, 128
	074 Return X0

Method: System.Single EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03BB236C STR S2, [X0 + 0xC]
	0x03BB2370 RET
	0x03BB2374 LDP S0, S1, [X0 + 0x10]
	0x03BB2378 LDR V2, [X0 + 0x18]
	0x03BB237C RET
	0x03BB2380 STP S0, S1, [X0 + 0x10]
	0x03BB2384 STR S2, [X0 + 0x18]
	0x03BB2388 RET
	0x03BB238C LDR V0, [X0 + 0x1C]
	0x03BB2390 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move V0, [X0]
	009 Move X30, [X31+16]
	010 Return V0
	011 Call 0x1C17F20

