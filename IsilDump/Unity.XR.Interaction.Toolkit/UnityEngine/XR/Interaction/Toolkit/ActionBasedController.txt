Type: UnityEngine.XR.Interaction.Toolkit.ActionBasedController

Method: UnityEngine.InputSystem.InputActionProperty get_positionAction()

Disassembly:
	0x03B330C0 LDP X20, X19, [X31 + 0x80]
	0x03B330C4 LDP X22, X21, [X31 + 0x70]
	0x03B330C8 LDP X24, X23, [X31 + 0x60]
	0x03B330CC LDP X26, X25, [X31 + 0x50]
	0x03B330D0 LDR X30, [X31 + 0x40]

ISIL:
	001 Move X9, [X0+184]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_positionAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B330D4 ADD X31, X31, 0x90
	0x03B330D8 RET
	0x03B330DC LDR X0, [X8 + 0x178]
	0x03B330E0 CBZ X0, 0x3B33114
	0x03B330E4 MOV X1, X31
	0x03B330E8 BL 0x3758A6C
	0x03B330EC AND W8, W0, 0x1
	0x03B330F0 STRB W8, [X19 + 0x1C]
	0x03B330F4 B 0x3B32EDC
	0x03B330F8 LDR X0, [X8 + 0x170]
	0x03B330FC CBZ X0, 0x3B33114
	0x03B33100 ADRP X8, 0x616000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 168
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_rotationAction()

Disassembly:
	0x03B331EC STR X30, [X31 + 0x60]
	0x03B331F0 STP X22, X21, [X31 + 0x70]
	0x03B331F4 STP X20, X19, [X31 + 0x80]
	0x03B331F8 ADRP X21, 0x8AF000
	0x03B331FC LDRB W8, [X21 + 0x7E8]

ISIL:
	001 Move X9, [X0+208]
	002 Move V0, [X0+12]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_rotationAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33200 MOV X19, X1
	0x03B33204 MOV X20, X0
	0x03B33208 TBNZ X8, 0x0, 0x3B33244
	0x03B3320C ADRP X0, 0x5C0000
	0x03B33210 LDR X0, [X0 + 0xA28]
	0x03B33214 BL 0x1C16CF4
	0x03B33218 ADRP X0, 0x5E8000
	0x03B3321C LDR X0, [X0 + 0x3C0]
	0x03B33220 BL 0x1C16CF4
	0x03B33224 ADRP X0, 0x5E7000
	0x03B33228 LDR X0, [X0 + 0xFE8]
	0x03B3322C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 192
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_isTrackedAction()

Disassembly:
	0x03B33230 ADRP X0, 0x626000
	0x03B33234 LDR X0, [X0 + 0xFE0]
	0x03B33238 BL 0x1C16CF4
	0x03B3323C MOVZ W8, 0x1
	0x03B33240 STRB W8, [X21 + 0x7E8]

ISIL:
	001 Move X9, [X0+232]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_isTrackedAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33244 CBZ X19, 0x3B33540
	0x03B33248 LDRB W8, [X20 + 0x241]
	0x03B3324C CBNZ W8, 0x3B33318
	0x03B33250 ADD X21, X20, 0x108
	0x03B33254 MOV X0, X21
	0x03B33258 MOV X1, X31
	0x03B3325C BL 0x3745120
	0x03B33260 CBNZ X0, 0x3B33284
	0x03B33264 ADD X0, X20, 0x138
	0x03B33268 MOV X1, X31
	0x03B3326C BL 0x3745120
	0x03B33270 CBNZ X0, 0x3B33284

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 216
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_trackingStateAction()

Disassembly:
	0x03B33274 ADD X0, X20, 0x168
	0x03B33278 MOV X1, X31
	0x03B3327C BL 0x3745120
	0x03B33280 CBZ X0, 0x3B33318
	0x03B33284 LDR X8, [X21 + 0x10]

ISIL:
	001 Move X9, [X0+256]
	002 Move V0, [X0+15]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_trackingStateAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33288 LDR V0, [X21]
	0x03B3328C ADD X0, X31, 0x40
	0x03B33290 STR X8, [X31 + 0x50]
	0x03B33294 STR V0, [X31 + 0x4]
	0x03B33298 BL 0x3B3311C
	0x03B3329C TBNZ X0, 0x0, 0x3B332E0
	0x03B332A0 ADD X8, X20, 0x138
	0x03B332A4 LDR X9, [X8 + 0x10]
	0x03B332A8 LDR V0, [X8]
	0x03B332AC ADD X0, X31, 0x20
	0x03B332B0 STR X9, [X31 + 0x30]
	0x03B332B4 STR V0, [X31 + 0x2]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 240
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_selectAction()

Disassembly:
	0x03B332B8 BL 0x3B3311C
	0x03B332BC TBNZ X0, 0x0, 0x3B332E0
	0x03B332C0 ADD X8, X20, 0x168
	0x03B332C4 LDR X9, [X8 + 0x10]
	0x03B332C8 LDR V0, [X8]
	0x03B332CC ADD X0, X31, 0x0

ISIL:
	001 Add X9, X0, 264
	002 Move X10, [X9+16]
	003 Move V0, [X9]
	004 Move [X8+16], X10
	005 Move [X8], V0
	006 Return X0

Method: System.Void set_selectAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B332D0 STR X9, [X31 + 0x10]
	0x03B332D4 STR V0, [X31]
	0x03B332D8 BL 0x3B3311C
	0x03B332DC TBZ X0, 0x0, 0x3B33310
	0x03B332E0 ADRP X8, 0x5C0000
	0x03B332E4 LDR X8, [X8 + 0xA28]
	0x03B332E8 LDR X0, [X8]
	0x03B332EC LDR W8, [X0 + 0xE0]
	0x03B332F0 CBNZ W8, 0x3B332F8
	0x03B332F4 BL 0x1C16DFC
	0x03B332F8 ADRP X8, 0x626000
	0x03B332FC LDR X8, [X8 + 0xFE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 264
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_selectActionValue()

Disassembly:
	0x03B33300 MOV X1, X20
	0x03B33304 MOV X2, X31
	0x03B33308 LDR X0, [X8]
	0x03B3330C BL 0x3C06B0C
	0x03B33310 MOVZ W8, 0x1

ISIL:
	001 Move X9, [X0+304]
	002 Move V0, [X0+18]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_selectActionValue(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33314 STRB W8, [X20 + 0x241]
	0x03B33318 ADD X0, X20, 0x120
	0x03B3331C MOV X1, X31
	0x03B33320 STURH W31, [X19 + 0x41]
	0x03B33324 STURH W31, [X19 + 0x49]
	0x03B33328 STURH W31, [X19 + 0x51]
	0x03B3332C BL 0x3745120
	0x03B33330 CBZ X0, 0x3B3334C
	0x03B33334 MOV X1, X31
	0x03B33338 MOV X21, X0
	0x03B3333C BL 0x37345CC
	0x03B33340 UBFM X8, X1, 0x20, 0x3F

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 288
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_activateAction()

Disassembly:
	0x03B33344 CMP W8, 0x0
	0x03B33348 B.GT 0x3B3335C
	0x03B3334C ADD X0, X20, 0x108
	0x03B33350 MOV X1, X31
	0x03B33354 BL 0x3745120
	0x03B33358 MOV X21, X0

ISIL:
	001 Add X9, X0, 312
	002 Move X10, [X9+16]
	003 Move V0, [X9]
	004 Move [X8+16], X10
	005 Move [X8], V0
	006 Return X0

Method: System.Void set_activateAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B3335C ADD X0, X20, 0x108
	0x03B33360 MOV X1, X31
	0x03B33364 BL 0x3745120
	0x03B33368 LDR X8, [X20]
	0x03B3336C MOV X1, X0
	0x03B33370 MOV X0, X20
	0x03B33374 LDR X9, [X8 + 0x258]
	0x03B33378 LDR X2, [X8 + 0x260]
	0x03B3337C BLR X9
	0x03B33380 LDR X8, [X20]
	0x03B33384 MOV W22, W0
	0x03B33388 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 312
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_activateActionValue()

Disassembly:
	0x03B3338C MOV X1, X21
	0x03B33390 LDR X9, [X8 + 0x268]
	0x03B33394 LDR X2, [X8 + 0x270]
	0x03B33398 BLR X9
	0x03B3339C LDRB W8, [X19 + 0x40]

ISIL:
	001 Move X9, [X0+352]
	002 Move V0, [X0+21]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_activateActionValue(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B333A0 AND W10, W22, 0x1
	0x03B333A4 EOR W9, W22, 0x1
	0x03B333A8 STRB W10, [X19 + 0x40]
	0x03B333AC CMP W8, 0x0
	0x03B333B0 CSET W8, NE
	0x03B333B4 CSET W10, EQ
	0x03B333B8 AND W10, W22, W10, 0x0
	0x03B333BC AND W8, W8, W9, 0x0
	0x03B333C0 ADD X0, X20, 0x150
	0x03B333C4 MOV X1, X31
	0x03B333C8 STR S0, [X19 + 0x3C]
	0x03B333CC STRB W10, [X19 + 0x41]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 336
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_uiPressAction()

Disassembly:
	0x03B333D0 STRB W8, [X19 + 0x42]
	0x03B333D4 BL 0x3745120
	0x03B333D8 CBZ X0, 0x3B333F4
	0x03B333DC MOV X1, X31
	0x03B333E0 MOV X21, X0
	0x03B333E4 BL 0x37345CC

ISIL:
	001 Add X9, X0, 360
	002 Move X10, [X9+16]
	003 Move V0, [X9]
	004 Move [X8+16], X10
	005 Move [X8], V0
	006 Return X0

Method: System.Void set_uiPressAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B333E8 UBFM X8, X1, 0x20, 0x3F
	0x03B333EC CMP W8, 0x0
	0x03B333F0 B.GT 0x3B33404
	0x03B333F4 ADD X0, X20, 0x138
	0x03B333F8 MOV X1, X31
	0x03B333FC BL 0x3745120
	0x03B33400 MOV X21, X0
	0x03B33404 ADD X0, X20, 0x138
	0x03B33408 MOV X1, X31
	0x03B3340C BL 0x3745120
	0x03B33410 LDR X8, [X20]
	0x03B33414 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 360
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_uiPressActionValue()

Disassembly:
	0x03B33418 MOV X0, X20
	0x03B3341C LDR X9, [X8 + 0x258]
	0x03B33420 LDR X2, [X8 + 0x260]
	0x03B33424 BLR X9
	0x03B33428 LDR X8, [X20]

ISIL:
	001 Move X9, [X0+400]
	002 Move V0, [X0+24]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_uiPressActionValue(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B3342C MOV W22, W0
	0x03B33430 MOV X0, X20
	0x03B33434 MOV X1, X21
	0x03B33438 LDR X9, [X8 + 0x268]
	0x03B3343C LDR X2, [X8 + 0x270]
	0x03B33440 BLR X9
	0x03B33444 LDRB W8, [X19 + 0x48]
	0x03B33448 AND W10, W22, 0x1
	0x03B3344C EOR W9, W22, 0x1
	0x03B33450 STRB W10, [X19 + 0x48]
	0x03B33454 CMP W8, 0x0
	0x03B33458 CSET W8, NE

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 384
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_uiScrollAction()

Disassembly:
	0x03B3345C CSET W10, EQ
	0x03B33460 AND W10, W22, W10, 0x0
	0x03B33464 AND W8, W8, W9, 0x0
	0x03B33468 ADD X0, X20, 0x180
	0x03B3346C MOV X1, X31
	0x03B33470 STR S0, [X19 + 0x44]

ISIL:
	001 Add X9, X0, 408
	002 Move X10, [X9+16]
	003 Move V0, [X9]
	004 Move [X8+16], X10
	005 Move [X8], V0
	006 Return X0

Method: System.Void set_uiScrollAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33474 STRB W10, [X19 + 0x49]
	0x03B33478 STRB W8, [X19 + 0x4A]
	0x03B3347C BL 0x3745120
	0x03B33480 CBZ X0, 0x3B3349C
	0x03B33484 MOV X1, X31
	0x03B33488 MOV X21, X0
	0x03B3348C BL 0x37345CC
	0x03B33490 UBFM X8, X1, 0x20, 0x3F
	0x03B33494 CMP W8, 0x0
	0x03B33498 B.GT 0x3B334AC
	0x03B3349C ADD X0, X20, 0x168
	0x03B334A0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 408
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_hapticDeviceAction()

Disassembly:
	0x03B334A4 BL 0x3745120
	0x03B334A8 MOV X21, X0
	0x03B334AC ADD X0, X20, 0x168
	0x03B334B0 MOV X1, X31
	0x03B334B4 BL 0x3745120

ISIL:
	001 Move X9, [X0+448]
	002 Move V0, [X0+27]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_hapticDeviceAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B334B8 LDR X8, [X20]
	0x03B334BC MOV X1, X0
	0x03B334C0 MOV X0, X20
	0x03B334C4 LDR X9, [X8 + 0x258]
	0x03B334C8 LDR X2, [X8 + 0x260]
	0x03B334CC BLR X9
	0x03B334D0 LDR X8, [X20]
	0x03B334D4 MOV W22, W0
	0x03B334D8 MOV X0, X20
	0x03B334DC MOV X1, X21
	0x03B334E0 LDR X9, [X8 + 0x268]
	0x03B334E4 LDR X2, [X8 + 0x270]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 432
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_rotateAnchorAction()

Disassembly:
	0x03B334E8 BLR X9
	0x03B334EC LDRB W8, [X19 + 0x50]
	0x03B334F0 AND W10, W22, 0x1
	0x03B334F4 EOR W9, W22, 0x1
	0x03B334F8 STRB W10, [X19 + 0x50]
	0x03B334FC CMP W8, 0x0

ISIL:
	001 Add X9, X0, 456
	002 Move X10, [X9+16]
	003 Move V0, [X9]
	004 Move [X8+16], X10
	005 Move [X8], V0
	006 Return X0

Method: System.Void set_rotateAnchorAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33500 CSET W8, NE
	0x03B33504 CSET W10, EQ
	0x03B33508 AND W10, W22, W10, 0x0
	0x03B3350C AND W8, W8, W9, 0x0
	0x03B33510 ADD X0, X20, 0x198
	0x03B33514 MOV X1, X31
	0x03B33518 STR S0, [X19 + 0x4C]
	0x03B3351C STRB W10, [X19 + 0x51]
	0x03B33520 STRB W8, [X19 + 0x52]
	0x03B33524 BL 0x3745120
	0x03B33528 CBZ X0, 0x3B33540
	0x03B3352C ADRP X8, 0x5E8000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 456
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_directionalAnchorRotationAction()

Disassembly:
	0x03B33530 LDR X8, [X8 + 0x3C0]
	0x03B33534 LDR X1, [X8]
	0x03B33538 BL 0x21F5E68
	0x03B3353C STP S0, S1, [X19 + 0x54]
	0x03B33540 LDP X20, X19, [X31 + 0x80]

ISIL:
	001 Move X9, [X0+496]
	002 Move V0, [X0+30]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_directionalAnchorRotationAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33544 LDP X22, X21, [X31 + 0x70]
	0x03B33548 LDR X30, [X31 + 0x60]
	0x03B3354C ADD X31, X31, 0x90
	0x03B33550 RET
	0x03B33554 RET
	0x03B33558 STURH W31, [X0 + 0x41]
	0x03B3355C STURH W31, [X0 + 0x49]
	0x03B33560 STURH W31, [X0 + 0x51]
	0x03B33564 RET
	0x03B33568 LDRB W8, [X0 + 0x4]
	0x03B3356C EOR W9, W1, 0x1
	0x03B33570 AND W10, W1, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 480
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_translateAnchorAction()

Disassembly:
	0x03B33574 STR S0, [X0]
	0x03B33578 CMP W8, 0x0
	0x03B3357C CSET W8, NE
	0x03B33580 CSET W11, EQ
	0x03B33584 AND W11, W11, W1, 0x0
	0x03B33588 AND W8, W8, W9, 0x0

ISIL:
	001 Add X9, X0, 504
	002 Move X10, [X9+16]
	003 Move V0, [X9]
	004 Move [X8+16], X10
	005 Move [X8], V0
	006 Return X0

Method: System.Void set_translateAnchorAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B3358C STRB W11, [X0 + 0x5]
	0x03B33590 STRB W8, [X0 + 0x6]
	0x03B33594 STRB W10, [X0 + 0x4]
	0x03B33598 RET
	0x03B3359C CBZ X1, 0x3B335C0
	0x03B335A0 STR X30, [X31 - 0x10]!
	0x03B335A4 MOV X0, X1
	0x03B335A8 MOV X1, X31
	0x03B335AC BL 0x3734774
	0x03B335B0 CMP W0, 0x3
	0x03B335B4 CSET W0, EQ
	0x03B335B8 LDR X30, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 504
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_scaleToggleAction()

Disassembly:
	0x03B335BC RET
	0x03B335C0 MOV W0, W31
	0x03B335C4 RET
	0x03B335C8 STP D9, D8, [X31 - 0x30]!
	0x03B335CC STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move X9, [X0+544]
	002 Move V0, [X0+33]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_scaleToggleAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B335D0 STP X20, X19, [X31 + 0x20]
	0x03B335D4 ADRP X21, 0x8AF000
	0x03B335D8 LDRB W8, [X21 + 0x7E9]
	0x03B335DC MOV X19, X1
	0x03B335E0 MOV X20, X0
	0x03B335E4 TBNZ X8, 0x0, 0x3B33620
	0x03B335E8 ADRP X0, 0x614000
	0x03B335EC LDR X0, [X0 + 0x860]
	0x03B335F0 BL 0x1C16CF4
	0x03B335F4 ADRP X0, 0x5C6000
	0x03B335F8 LDR X0, [X0 + 0x8C0]
	0x03B335FC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 528
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_scaleDeltaAction()

Disassembly:
	0x03B33600 ADRP X0, 0x5E8000
	0x03B33604 LDR X0, [X0 + 0x3C0]
	0x03B33608 BL 0x1C16CF4
	0x03B3360C ADRP X0, 0x614000
	0x03B33610 LDR X0, [X0 + 0x810]
	0x03B33614 BL 0x1C16CF4

ISIL:
	001 Add X9, X0, 552
	002 Move X10, [X9+16]
	003 Move V0, [X9]
	004 Move [X8+16], X10
	005 Move [X8], V0
	006 Return X0

Method: System.Void set_scaleDeltaAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33618 MOVZ W8, 0x1
	0x03B3361C STRB W8, [X21 + 0x7E9]
	0x03B33620 CBZ X19, 0x3B336D8
	0x03B33624 MOV X0, X19
	0x03B33628 MOV X1, X31
	0x03B3362C BL 0x3734B58
	0x03B33630 CBZ X0, 0x3B33668
	0x03B33634 ADRP X8, 0x614000
	0x03B33638 LDR X8, [X8 + 0x860]
	0x03B3363C LDR X9, [X0]
	0x03B33640 LDR X8, [X8]
	0x03B33644 LDRB W11, [X9 + 0x130]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 552
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedController.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03B33648 LDRB W10, [X8 + 0x130]
	0x03B3364C CMP W11, W10
	0x03B33650 B.CC 0x3B33668
	0x03B33654 LDR X9, [X9 + 0xC8]
	0x03B33658 ADD X9, X9, X10, 0x3, LSL
	0x03B3365C LDUR X9, [X9 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call XRBaseController.OnEnable, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call ActionBasedController.EnableAllDirectActions, X0
	009 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03B3390C ADRP X0, 0x627000
	0x03B33910 LDR X0, [X0 + 0x28]
	0x03B33914 BL 0x1C16CF4
	0x03B33918 ADRP X0, 0x615000
	0x03B3391C LDR X0, [X0 + 0xDE0]
	0x03B33920 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call XRBaseController.OnDisable, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call ActionBasedController.DisableAllDirectActions, X0
	009 Return 

Method: System.Void UpdateTrackingInput(UnityEngine.XR.Interaction.Toolkit.XRControllerState controllerState)

Disassembly:
	0x03B33BD0 MOV X3, X31
	0x03B33BD4 MOV X4, X31
	0x03B33BD8 MOV X5, X31
	0x03B33BDC MOV X7, X31
	0x03B33BE0 MOV X20, X0
	0x03B33BE4 BL 0x3734C54
	0x03B33BE8 ADD X0, X31, 0x110
	0x03B33BEC MOV X1, X20
	0x03B33BF0 MOV X2, X31
	0x03B33BF4 STP X31, X31, [X31 + 0x110]
	0x03B33BF8 STR X31, [X31 + 0x120]
	0x03B33BFC BL 0x3745288
	0x03B33C00 LDR X8, [X31 + 0x120]
	0x03B33C04 LDR V0, [X23 + 0x6]
	0x03B33C08 STR X8, [X19 + 0x130]
	0x03B33C0C STR V0, [X19 + 0x12]
	0x03B33C10 LDR X0, [X21]
	0x03B33C14 BL 0x1C16F10
	0x03B33C18 LDR X1, [X25]
	0x03B33C1C MOVZ W2, 0x1
	0x03B33C20 MOV X3, X31
	0x03B33C24 MOV X4, X31
	0x03B33C28 MOV X5, X31
	0x03B33C2C MOV X6, X31
	0x03B33C30 MOV X7, X31
	0x03B33C34 MOV X20, X0
	0x03B33C38 BL 0x3734C54
	0x03B33C3C ADD X0, X31, 0xF8
	0x03B33C40 MOV X1, X20
	0x03B33C44 MOV X2, X31
	0x03B33C48 STP X31, X31, [X31 + 0xF8]
	0x03B33C4C STR X31, [X31 + 0x108]
	0x03B33C50 BL 0x3745288
	0x03B33C54 LDR X8, [X31 + 0x108]
	0x03B33C58 LDUR V0, [X31 + 0xF8]
	0x03B33C5C ADD X9, X19, 0x138
	0x03B33C60 STR X8, [X9 + 0x10]
	0x03B33C64 STR V0, [X9]
	0x03B33C68 LDR X0, [X21]
	0x03B33C6C BL 0x1C16F10
	0x03B33C70 ADRP X8, 0x627000
	0x03B33C74 LDR X8, [X8 + 0x48]
	0x03B33C78 LDR X6, [X27]
	0x03B33C7C MOV W2, W31
	0x03B33C80 MOV X3, X31
	0x03B33C84 LDR X1, [X8]
	0x03B33C88 MOV X4, X31
	0x03B33C8C MOV X5, X31
	0x03B33C90 MOV X7, X31
	0x03B33C94 MOV X20, X0
	0x03B33C98 BL 0x3734C54
	0x03B33C9C ADD X0, X31, 0xE0
	0x03B33CA0 MOV X1, X20
	0x03B33CA4 MOV X2, X31
	0x03B33CA8 STP X31, X31, [X31 + 0xE0]
	0x03B33CAC STR X31, [X31 + 0xF0]
	0x03B33CB0 BL 0x3745288
	0x03B33CB4 LDR X8, [X31 + 0xF0]
	0x03B33CB8 LDR V0, [X23 + 0x3]
	0x03B33CBC STR X8, [X19 + 0x160]
	0x03B33CC0 STR V0, [X19 + 0x15]
	0x03B33CC4 LDR X0, [X21]
	0x03B33CC8 BL 0x1C16F10
	0x03B33CCC ADRP X8, 0x627000
	0x03B33CD0 LDR X8, [X8 + 0x50]
	0x03B33CD4 MOVZ W2, 0x1
	0x03B33CD8 MOV X3, X31
	0x03B33CDC MOV X4, X31
	0x03B33CE0 LDR X1, [X8]
	0x03B33CE4 MOV X5, X31
	0x03B33CE8 MOV X6, X31
	0x03B33CEC MOV X7, X31
	0x03B33CF0 MOV X20, X0
	0x03B33CF4 BL 0x3734C54
	0x03B33CF8 ADD X0, X31, 0xC8
	0x03B33CFC MOV X1, X20
	0x03B33D00 MOV X2, X31
	0x03B33D04 STP X31, X31, [X31 + 0xC8]
	0x03B33D08 STR X31, [X31 + 0xD8]
	0x03B33D0C BL 0x3745288
	0x03B33D10 LDR X8, [X31 + 0xD8]
	0x03B33D14 LDUR V0, [X31 + 0xC8]
	0x03B33D18 ADD X9, X19, 0x168
	0x03B33D1C STR X8, [X9 + 0x10]
	0x03B33D20 STR V0, [X9]
	0x03B33D24 LDR X0, [X21]
	0x03B33D28 BL 0x1C16F10
	0x03B33D2C ADRP X8, 0x627000
	0x03B33D30 LDR X8, [X8 + 0x40]
	0x03B33D34 LDR X6, [X27]
	0x03B33D38 MOV W2, W31
	0x03B33D3C MOV X3, X31
	0x03B33D40 LDR X1, [X8]
	0x03B33D44 MOV X4, X31
	0x03B33D48 MOV X5, X31
	0x03B33D4C MOV X7, X31
	0x03B33D50 MOV X20, X0
	0x03B33D54 BL 0x3734C54
	0x03B33D58 ADD X0, X31, 0xB0
	0x03B33D5C MOV X1, X20
	0x03B33D60 MOV X2, X31
	0x03B33D64 STP X31, X31, [X31 + 0xB0]
	0x03B33D68 STR X31, [X31 + 0xC0]
	0x03B33D6C BL 0x3745288
	0x03B33D70 LDR X8, [X31 + 0xC0]
	0x03B33D74 LDR V0, [X23]
	0x03B33D78 STR X8, [X19 + 0x190]
	0x03B33D7C STR V0, [X19 + 0x18]
	0x03B33D80 LDR X0, [X21]
	0x03B33D84 BL 0x1C16F10
	0x03B33D88 ADRP X8, 0x627000
	0x03B33D8C LDR X8, [X8 + 0x8]
	0x03B33D90 LDR X6, [X24]
	0x03B33D94 MOV W2, W31
	0x03B33D98 MOV X3, X31
	0x03B33D9C LDR X1, [X8]
	0x03B33DA0 MOV X4, X31
	0x03B33DA4 MOV X5, X31
	0x03B33DA8 MOV X7, X31
	0x03B33DAC MOV X20, X0
	0x03B33DB0 BL 0x3734C54
	0x03B33DB4 ADD X0, X31, 0x98
	0x03B33DB8 MOV X1, X20
	0x03B33DBC MOV X2, X31
	0x03B33DC0 STP X31, X31, [X31 + 0x98]
	0x03B33DC4 STR X31, [X31 + 0xA8]
	0x03B33DC8 BL 0x3745288
	0x03B33DCC LDR X8, [X31 + 0xA8]
	0x03B33DD0 LDUR V0, [X31 + 0x98]
	0x03B33DD4 ADD X9, X19, 0x198
	0x03B33DD8 STR X8, [X9 + 0x10]
	0x03B33DDC STR V0, [X9]
	0x03B33DE0 LDR X0, [X21]
	0x03B33DE4 BL 0x1C16F10
	0x03B33DE8 ADRP X8, 0x627000
	0x03B33DEC LDR X8, [X8 + 0x18]
	0x03B33DF0 MOVZ W2, 0x2
	0x03B33DF4 MOV X3, X31
	0x03B33DF8 MOV X4, X31
	0x03B33DFC LDR X1, [X8]
	0x03B33E00 MOV X5, X31
	0x03B33E04 MOV X6, X31
	0x03B33E08 MOV X7, X31
	0x03B33E0C MOV X20, X0
	0x03B33E10 BL 0x3734C54
	0x03B33E14 ADD X0, X31, 0x80
	0x03B33E18 MOV X1, X20
	0x03B33E1C MOV X2, X31
	0x03B33E20 STP X31, X31, [X31 + 0x80]
	0x03B33E24 STR X31, [X31 + 0x90]
	0x03B33E28 BL 0x3745288
	0x03B33E2C LDR X8, [X31 + 0x90]
	0x03B33E30 LDR V0, [X31 + 0x8]
	0x03B33E34 STR X8, [X19 + 0x1C0]
	0x03B33E38 STR V0, [X19 + 0x1B]
	0x03B33E3C LDR X0, [X21]
	0x03B33E40 BL 0x1C16F10
	0x03B33E44 ADRP X8, 0x627000
	0x03B33E48 LDR X8, [X8 + 0x58]
	0x03B33E4C LDR X6, [X24]
	0x03B33E50 MOV W2, W31
	0x03B33E54 MOV X3, X31
	0x03B33E58 LDR X1, [X8]
	0x03B33E5C MOV X4, X31
	0x03B33E60 MOV X5, X31
	0x03B33E64 MOV X7, X31
	0x03B33E68 MOV X20, X0
	0x03B33E6C BL 0x3734C54
	0x03B33E70 ADD X0, X31, 0x68
	0x03B33E74 MOV X1, X20
	0x03B33E78 MOV X2, X31
	0x03B33E7C STP X31, X31, [X31 + 0x68]
	0x03B33E80 STR X31, [X31 + 0x78]
	0x03B33E84 BL 0x3745288
	0x03B33E88 LDR X8, [X31 + 0x78]
	0x03B33E8C LDUR V0, [X31 + 0x68]
	0x03B33E90 ADD X9, X19, 0x1C8
	0x03B33E94 STR X8, [X9 + 0x10]
	0x03B33E98 STR V0, [X9]
	0x03B33E9C LDR X0, [X21]
	0x03B33EA0 BL 0x1C16F10
	0x03B33EA4 ADRP X8, 0x627000
	0x03B33EA8 LDR X8, [X8 + 0x20]
	0x03B33EAC LDR X6, [X24]
	0x03B33EB0 MOV W2, W31
	0x03B33EB4 MOV X3, X31
	0x03B33EB8 LDR X1, [X8]
	0x03B33EBC MOV X4, X31
	0x03B33EC0 MOV X5, X31
	0x03B33EC4 MOV X7, X31
	0x03B33EC8 MOV X20, X0
	0x03B33ECC BL 0x3734C54
	0x03B33ED0 ADD X0, X31, 0x50
	0x03B33ED4 MOV X1, X20
	0x03B33ED8 MOV X2, X31
	0x03B33EDC STP X31, X31, [X31 + 0x50]
	0x03B33EE0 STR X31, [X31 + 0x60]
	0x03B33EE4 BL 0x3745288
	0x03B33EE8 LDR X8, [X31 + 0x60]
	0x03B33EEC LDR V0, [X31 + 0x5]
	0x03B33EF0 STR X8, [X19 + 0x1F0]
	0x03B33EF4 STR V0, [X19 + 0x1E]
	0x03B33EF8 LDR X0, [X21]
	0x03B33EFC BL 0x1C16F10
	0x03B33F00 ADRP X8, 0x627000
	0x03B33F04 LDR X8, [X8 + 0x38]
	0x03B33F08 LDR X6, [X24]
	0x03B33F0C MOV W2, W31
	0x03B33F10 MOV X3, X31
	0x03B33F14 LDR X1, [X8]
	0x03B33F18 MOV X4, X31
	0x03B33F1C MOV X5, X31
	0x03B33F20 MOV X7, X31
	0x03B33F24 MOV X20, X0
	0x03B33F28 BL 0x3734C54
	0x03B33F2C ADD X0, X31, 0x38
	0x03B33F30 MOV X1, X20
	0x03B33F34 MOV X2, X31
	0x03B33F38 STP X31, X31, [X31 + 0x38]
	0x03B33F3C STR X31, [X31 + 0x48]
	0x03B33F40 BL 0x3745288
	0x03B33F44 LDR X8, [X31 + 0x48]
	0x03B33F48 LDUR V0, [X31 + 0x38]
	0x03B33F4C ADD X9, X19, 0x1F8
	0x03B33F50 STR X8, [X9 + 0x10]
	0x03B33F54 STR V0, [X9]
	0x03B33F58 LDR X0, [X21]
	0x03B33F5C BL 0x1C16F10
	0x03B33F60 ADRP X8, 0x627000
	0x03B33F64 LDR X8, [X8 + 0x30]
	0x03B33F68 MOVZ W2, 0x1
	0x03B33F6C MOV X3, X31
	0x03B33F70 MOV X4, X31
	0x03B33F74 LDR X1, [X8]
	0x03B33F78 MOV X5, X31
	0x03B33F7C MOV X6, X31
	0x03B33F80 MOV X7, X31
	0x03B33F84 MOV X20, X0
	0x03B33F88 BL 0x3734C54
	0x03B33F8C ADD X0, X31, 0x20
	0x03B33F90 MOV X1, X20
	0x03B33F94 MOV X2, X31
	0x03B33F98 STP X31, X31, [X31 + 0x20]
	0x03B33F9C STR X31, [X31 + 0x30]
	0x03B33FA0 BL 0x3745288
	0x03B33FA4 LDR X8, [X31 + 0x30]
	0x03B33FA8 LDR V0, [X31 + 0x2]
	0x03B33FAC STR X8, [X19 + 0x220]
	0x03B33FB0 STR V0, [X19 + 0x21]
	0x03B33FB4 LDR X0, [X21]
	0x03B33FB8 BL 0x1C16F10
	0x03B33FBC ADRP X8, 0x626000
	0x03B33FC0 LDR X8, [X8 + 0xFF8]
	0x03B33FC4 LDR X6, [X24]
	0x03B33FC8 MOV W2, W31
	0x03B33FCC MOV X3, X31
	0x03B33FD0 LDR X1, [X8]
	0x03B33FD4 MOV X4, X31
	0x03B33FD8 MOV X5, X31
	0x03B33FDC MOV X7, X31
	0x03B33FE0 MOV X20, X0
	0x03B33FE4 BL 0x3734C54
	0x03B33FE8 ADD X0, X31, 0x8
	0x03B33FEC MOV X1, X20
	0x03B33FF0 MOV X2, X31
	0x03B33FF4 STP X31, X31, [X31 + 0x8]
	0x03B33FF8 STR X31, [X31 + 0x18]
	0x03B33FFC BL 0x3745288
	0x03B34000 LDR X9, [X31 + 0x18]
	0x03B34004 LDUR V0, [X31 + 0x8]
	0x03B34008 ADD X8, X19, 0x228
	0x03B3400C MOVZ W10, 0x3F000000
	0x03B34010 MOVZ W11, 0x101
	0x03B34014 STR X9, [X8 + 0x10]
	0x03B34018 STR V0, [X8]
	0x03B3401C MOVZ W8, 0x1
	0x03B34020 MOV X0, X19
	0x03B34024 MOV X1, X31
	0x03B34028 STR W10, [X19 + 0x244]
	0x03B3402C STRH W11, [X19 + 0x24]
	0x03B34030 STRB W8, [X19 + 0x88]
	0x03B34034 STRB W8, [X19 + 0x99]
	0x03B34038 BL 0x3C36C30
	0x03B3403C ADD X31, X31, 0x1A0
	0x03B34040 LDP X20, X19, [X31 + 0x50]
	0x03B34044 LDP X22, X21, [X31 + 0x40]
	0x03B34048 LDP X24, X23, [X31 + 0x30]
	0x03B3404C LDP X26, X25, [X31 + 0x20]
	0x03B34050 LDP X28, X27, [X31 + 0x10]
	0x03B34054 LDP X29, X30, [X31], #0x60
	0x03B34058 RET
	0x03B3405C BL 0x1C16F20
	0x03B34060 MOVZ W8, 0x101
	0x03B34064 MOVZ W9, 0x1
	0x03B34068 MOV X1, X31
	0x03B3406C STRH W8, [X0 + 0x24]
	0x03B34070 STRB W9, [X0 + 0x88]
	0x03B34074 STRB W9, [X0 + 0x99]
	0x03B34078 B 0x3C36C30
	0x03B3407C LDR W0, [X0 + 0x20]
	0x03B34080 RET
	0x03B34084 STR W1, [X0 + 0x20]
	0x03B34088 RET
	0x03B3408C LDRB W0, [X0 + 0x24]
	0x03B34090 RET
	0x03B34094 AND W8, W1, 0x1
	0x03B34098 STRB W8, [X0 + 0x24]
	0x03B3409C RET
	0x03B340A0 LDRB W0, [X0 + 0x25]
	0x03B340A4 RET
	0x03B340A8 AND W8, W1, 0x1
	0x03B340AC STRB W8, [X0 + 0x25]
	0x03B340B0 RET
	0x03B340B4 LDR X0, [X0 + 0x28]
	0x03B340B8 RET
	0x03B340BC STR X1, [X0 + 0x28]
	0x03B340C0 RET
	0x03B340C4 LDR X0, [X0 + 0x30]
	0x03B340C8 RET
	0x03B340CC STR X30, [X31 - 0x30]!
	0x03B340D0 STP X22, X21, [X31 + 0x10]
	0x03B340D4 STP X20, X19, [X31 + 0x20]
	0x03B340D8 ADRP X22, 0x8AE000
	0x03B340DC ADRP X21, 0x5BF000
	0x03B340E0 LDRB W8, [X22 + 0x7EE]
	0x03B340E4 LDR X21, [X21 + 0x598]
	0x03B340E8 MOV X20, X1
	0x03B340EC MOV X19, X0
	0x03B340F0 TBNZ X8, 0x0, 0x3B34108
	0x03B340F4 ADRP X0, 0x5BF000
	0x03B340F8 LDR X0, [X0 + 0x598]
	0x03B340FC BL 0x1C16CF4
	0x03B34100 MOVZ W8, 0x1
	0x03B34104 STRB W8, [X22 + 0x7EE]
	0x03B34108 STR X20, [X19 + 0x30]
	0x03B3410C LDR X0, [X21]
	0x03B34110 LDR X20, [X19 + 0x38]
	0x03B34114 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X20, 0x8B0000
	012 Move W8, [X20+2023]
	013 Move X19, X1
	014 Move X24, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0x5C1000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x5E9000
	023 Move X0, [X0+112]
	024 Call 0x1C17CF4
	025 Move X0, 0x616000
	026 Move X0, [X0+3568]
	027 Call 0x1C17CF4
	028 Move X0, 0x616000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0x617000
	032 Move X0, [X0+752]
	033 Call 0x1C17CF4
	034 Move X0, 0x5E8000
	035 Move X0, [X0+4072]
	036 Call 0x1C17CF4
	037 Move X0, 0x627000
	038 Move X0, [X0+4048]
	039 Call 0x1C17CF4
	040 Move X0, 0x627000
	041 Move X0, [X0+4056]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2023], W8
	045 Compare X19, 0
	046 JumpIfEqual {362}
	047 Add X26, X24, 168
	048 Move X0, X26
	049 Move X1, X31
	050 Call InputActionProperty.get_action, X0
	051 Add X25, X24, 192
	052 Move X21, X0
	053 Move X0, X25
	054 Move X1, X31
	055 Call InputActionProperty.get_action, X0
	056 Move X20, X0
	057 Add X0, X24, 216
	058 Move X1, X31
	059 Call InputActionProperty.get_action, X0
	060 Move X22, X0
	061 Add X0, X24, 240
	062 Move X1, X31
	063 Call InputActionProperty.get_action, X0
	064 Move W8, [X24+576]
	065 Move X23, X0
	066 Compare W8, 0
	067 JumpIfNotEqual {106}
	068 Or X8, X21, X20
	069 Compare X8, 0
	070 JumpIfEqual {106}
	071 Move X8, [X26+16]
	072 Move V0, [X26]
	073 Add X0, X31, 32
	074 Move [X31+48], X8
	075 Move [X31+2], V0
	076 Call ActionBasedController.IsDisabledReferenceAction, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {91}
	081 Move X8, [X25+16]
	082 Move V0, [X25]
	083 Add X0, X31, 0
	084 Move [X31+16], X8
	085 Move [X31], V0
	086 Call ActionBasedController.IsDisabledReferenceAction, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {104}
	091 Move X8, 0x5C1000
	092 Move X8, [X8+2600]
	093 Move X0, [X8]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X8, 0x627000
	099 Move X8, [X8+4056]
	100 Move X1, X24
	101 Move X2, X31
	102 Move X0, [X8]
	103 Call Debug.LogWarning, X0, X1
	104 Move W8, 1
	105 Move [X24+576], W8
	106 Move [X19+28], W31
	107 Move [X19+24], W31
	108 Compare X22, 0
	109 JumpIfEqual {124}
	110 Move X0, X22
	111 Move X1, X31
	112 Call InputAction.get_bindings, X0
	113 Move X8, X1
	114 ShiftRight X8, 32
	115 And X8, X8, 0x7FFFFFFF
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X24]
	118 Move X0, X24
	119 Move X1, X22
	120 Move X9, [X8+600]
	121 Move X2, [X8+608]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 And W25, W0, 1
	124 Compare X23, 0
	125 JumpIfEqual {145}
	126 Move X0, X23
	127 Move X1, X31
	128 Call InputAction.get_activeControl, X0
	129 Compare X0, 0
	130 JumpIfEqual {145}
	131 Move X8, [X0+120]
	132 Compare X8, 0
	133 JumpIfEqual {145}
	134 Move X9, 0x627000
	135 Move X9, [X9+4048]
	136 Move X10, [X8]
	137 Move X9, [X9]
	138 Move W12, [X10+304]
	139 Move W11, [X9+304]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X10, [X10+200]
	142 Add X10, X10, X11
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Compare X21, 0
	146 JumpIfEqual {165}
	147 Move X0, X21
	148 Move X1, X31
	149 Call InputAction.get_activeControl, X0
	150 Compare X0, 0
	151 JumpIfEqual {165}
	152 Move X8, [X0+120]
	153 Compare X8, 0
	154 JumpIfEqual {162}
	155 Move X9, 0x627000
	156 Move X9, [X9+4048]
	157 Move X10, [X8]
	158 Move X9, [X9]
	159 Move W12, [X10+304]
	160 Move W11, [X9+304]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Compare X20, 0
	163 JumpIfNotEqual {167}
	164 Move X24, X31
	165 Compare X20, 0
	166 JumpIfEqual {191}
	167 Move X24, X31
	168 Move X0, X20
	169 Move X1, X31
	170 Call InputAction.get_activeControl, X0
	171 Compare X0, 0
	172 JumpIfEqual {199}
	173 Move X8, [X0+120]
	174 Compare X8, 0
	175 JumpIfEqual {199}
	176 Move X9, 0x627000
	177 Move X9, [X9+4048]
	178 Move X10, [X8]
	179 Move X9, [X9]
	180 Move W12, [X10+304]
	181 Move W11, [X9+304]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X10, [X10+200]
	184 Add X10, X10, X11
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CSEL not yet implemented."
	188 Compare X24, 0
	189 JumpIfNotEqual {202}
	190 Move W25, W31
	191 Move W25, W31
	192 Move X10, [X10+200]
	193 Add X10, X10, X11
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CSEL not yet implemented."
	197 Compare X20, 0
	198 JumpIfNotEqual {168}
	199 Move X26, X31
	200 Compare X24, 0
	201 JumpIfEqual {190}
	202 Move X0, [X24+376]
	203 Compare X0, 0
	204 JumpIfEqual {387}
	205 Move X1, X31
	206 Call ButtonControl.get_isPressed, X0
	207 And W25, W0, 1
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Compare X26, 0
	210 JumpIfEqual {217}
	211 Move X0, [X26+376]
	212 Compare X0, 0
	213 JumpIfEqual {387}
	214 Move X1, X31
	215 Call ButtonControl.get_isPressed, X0
	216 And W8, W0, 1
	217 Move W8, W31
	218 And W25, W8, W25
	219 Move [X19+28], W25
	220 Compare X23, 0
	221 JumpIfEqual {235}
	222 Move X0, X23
	223 Move X1, X31
	224 Call InputAction.get_bindings, X0
	225 Move X8, X1
	226 ShiftRight X8, 32
	227 And X8, X8, 0x7FFFFFFF
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X8, 0x5E9000
	230 Move X8, [X8+112]
	231 Move X0, X23
	232 Move X1, [X8]
	233 Call 0x21F6BCC, X0
	234 Move W22, W0
	235 Compare X22, 0
	236 JumpIfEqual {256}
	237 Move X0, X22
	238 Move X1, X31
	239 Call InputAction.get_activeControl, X0
	240 Compare X0, 0
	241 JumpIfEqual {256}
	242 Move X8, [X0+120]
	243 Compare X8, 0
	244 JumpIfEqual {256}
	245 Move X9, 0x627000
	246 Move X9, [X9+4048]
	247 Move X10, [X8]
	248 Move X9, [X9]
	249 Move W12, [X10+304]
	250 Move W11, [X9+304]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X10, [X10+200]
	253 Add X10, X10, X11
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Compare X21, 0
	257 JumpIfEqual {273}
	258 Move X0, X21
	259 Move X1, X31
	260 Call InputAction.get_activeControl, X0
	261 Compare X0, 0
	262 JumpIfEqual {273}
	263 Move X8, [X0+120]
	264 Compare X8, 0
	265 JumpIfEqual {273}
	266 Move X9, 0x627000
	267 Move X9, [X9+4048]
	268 Move X10, [X8]
	269 Move X9, [X9]
	270 Move W12, [X10+304]
	271 Move W11, [X9+304]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X23, X31
	274 Compare X20, 0
	275 JumpIfEqual {306}
	276 Move X0, X20
	277 Move X1, X31
	278 Call InputAction.get_activeControl, X0
	279 Compare X0, 0
	280 JumpIfEqual {306}
	281 Move X8, [X0+120]
	282 Compare X8, 0
	283 JumpIfEqual {306}
	284 Move X9, 0x627000
	285 Move X9, [X9+4048]
	286 Move X10, [X8]
	287 Move X9, [X9]
	288 Move W12, [X10+304]
	289 Move W11, [X9+304]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X10, [X10+200]
	292 Add X10, X10, X11
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 NotImplemented "Instruction CSEL not yet implemented."
	296 Compare X23, 0
	297 JumpIfNotEqual {309}
	298 Move W22, W31
	299 Move X10, [X10+200]
	300 Add X10, X10, X11
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 NotImplemented "Instruction CSEL not yet implemented."
	304 Compare X20, 0
	305 JumpIfNotEqual {276}
	306 Move X24, X31
	307 Compare X23, 0
	308 JumpIfEqual {298}
	309 Move X0, [X23+368]
	310 Compare X0, 0
	311 JumpIfEqual {387}
	312 Move X8, 0x616000
	313 Move X8, [X8+752]
	314 Move X1, [X8]
	315 Call InputControl`1<Int32>.ReadValue, X0
	316 Move W22, W0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Compare X24, 0
	319 JumpIfEqual {328}
	320 Move X0, [X24+368]
	321 Compare X0, 0
	322 JumpIfEqual {387}
	323 Move X8, 0x616000
	324 Move X8, [X8+752]
	325 Move X1, [X8]
	326 Call InputControl`1<Int32>.ReadValue, X0
	327 And W8, W0, 2
	328 Move W8, W31
	329 And W9, W22, 1
	330 Or W22, W8, W9
	331 Move [X19+24], W22
	332 Compare X21, 0
	333 JumpIfEqual {346}
	334 Move TEMP, X22
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {346}
	338 Move X8, 0x615000
	339 Move X8, [X8+3576]
	340 Move X0, X21
	341 Move X1, [X8]
	342 Call InputAction.ReadValue, X0
	343 Move [X19+32], S0
	344 Move [X19+40], S1
	345 Move [X19+40], S2
	346 Compare X20, 0
	347 JumpIfEqual {362}
	348 Move W8, [X19+24]
	349 Move TEMP, X8
	350 And TEMP, TEMP, 2
	351 Compare TEMP, 2
	352 JumpIfNotEqual {362}
	353 Move X8, 0x615000
	354 Move X8, [X8+3568]
	355 Move X0, X20
	356 Move X1, [X8]
	357 Call InputAction.ReadValue, X0
	358 Move [X19+44], S0
	359 Move [X19+52], S1
	360 Move [X19+52], S2
	361 Move [X19+60], S3
	362 Move X20, [X31+128]
	363 Move X19, [X31+136]
	364 Move X22, [X31+112]
	365 Move X21, [X31+120]
	366 Move X24, [X31+96]
	367 Move X23, [X31+104]
	368 Move X26, [X31+80]
	369 Move X25, [X31+88]
	370 Move X30, [X31+64]
	371 Add X31, X31, 144
	372 Return 
	373 Move X0, [X8+376]
	374 Compare X0, 0
	375 JumpIfEqual {387}
	376 Move X1, X31
	377 Call ButtonControl.get_isPressed, X0
	378 And W8, W0, 1
	379 Move [X19+28], W8
	380 Move X0, [X8+368]
	381 Compare X0, 0
	382 JumpIfEqual {387}
	383 Move X8, 0x616000
	384 Move X8, [X8+752]
	385 Move X1, [X8]
	386 Call InputControl`1<Int32>.ReadValue, X0
	387 Call 0x1C17F20

Method: System.Void UpdateInput(UnityEngine.XR.Interaction.Toolkit.XRControllerState controllerState)

Disassembly:
	0x03B341E8 MOVZ W8, 0x1
	0x03B341EC STRB W8, [X22 + 0x7EF]
	0x03B341F0 STRB W21, [X19 + 0x58]
	0x03B341F4 LDR X0, [X20]
	0x03B341F8 LDR X20, [X19 + 0x38]
	0x03B341FC LDR W8, [X0 + 0xE0]
	0x03B34200 CBNZ W8, 0x3B34208
	0x03B34204 BL 0x1C16DFC
	0x03B34208 MOV X0, X20
	0x03B3420C MOV X1, X31
	0x03B34210 MOV X2, X31
	0x03B34214 BL 0x3C354F8
	0x03B34218 TBZ X0, 0x0, 0x3B34250
	0x03B3421C LDR X0, [X19 + 0x38]
	0x03B34220 CBZ X0, 0x3B34260
	0x03B34224 MOV X1, X31
	0x03B34228 BL 0x3C32ECC
	0x03B3422C CBZ X0, 0x3B34260
	0x03B34230 LDRB W8, [X19 + 0x58]
	0x03B34234 LDP X20, X19, [X31 + 0x20]
	0x03B34238 LDP X22, X21, [X31 + 0x10]
	0x03B3423C MOV X2, X31
	0x03B34240 CMP W8, 0x0
	0x03B34244 CSET W1, EQ
	0x03B34248 LDR X30, [X31], #0x30
	0x03B3424C B 0x3C357B4
	0x03B34250 LDP X20, X19, [X31 + 0x20]
	0x03B34254 LDP X22, X21, [X31 + 0x10]
	0x03B34258 LDR X30, [X31], #0x30
	0x03B3425C RET
	0x03B34260 BL 0x1C16F20
	0x03B34264 LDUR X0, [X0 + 0x5C]
	0x03B34268 RET
	0x03B3426C LDUR X0, [X0 + 0x64]
	0x03B34270 RET
	0x03B34274 LDUR X0, [X0 + 0x6C]
	0x03B34278 RET
	0x03B3427C LDP S0, S1, [X0 + 0x74]
	0x03B34280 RET
	0x03B34284 STP X30, X19, [X31 - 0x10]!
	0x03B34288 MOV X19, X0
	0x03B3428C BL 0x3B3429C
	0x03B34290 LDR X0, [X19 + 0x80]
	0x03B34294 LDP X30, X19, [X31], #0x10
	0x03B34298 RET
	0x03B3429C STR X30, [X31 - 0x20]!
	0x03B342A0 STP X20, X19, [X31 + 0x10]
	0x03B342A4 ADRP X20, 0x8AE000
	0x03B342A8 LDRB W8, [X20 + 0x7F4]
	0x03B342AC MOV X19, X0
	0x03B342B0 TBNZ X8, 0x0, 0x3B342C8
	0x03B342B4 ADRP X0, 0x626000
	0x03B342B8 LDR X0, [X0 + 0x60]
	0x03B342BC BL 0x1C16CF4
	0x03B342C0 MOVZ W8, 0x1
	0x03B342C4 STRB W8, [X20 + 0x7F4]
	0x03B342C8 LDR X8, [X19 + 0x80]
	0x03B342CC CBNZ X8, 0x3B342F4
	0x03B342D0 LDRB W8, [X19 + 0x88]
	0x03B342D4 CBZ W8, 0x3B342F4
	0x03B342D8 ADRP X8, 0x626000
	0x03B342DC LDR X8, [X8 + 0x60]
	0x03B342E0 LDR X0, [X8]
	0x03B342E4 BL 0x1C16F10
	0x03B342E8 MOV X20, X0
	0x03B342EC BL 0x3B34640
	0x03B342F0 STR X20, [X19 + 0x80]
	0x03B342F4 LDP X20, X19, [X31 + 0x10]
	0x03B342F8 LDR X30, [X31], #0x20
	0x03B342FC RET
	0x03B34300 STR X1, [X0 + 0x80]
	0x03B34304 STRB W31, [X0 + 0x88]
	0x03B34308 RET
	0x03B3430C STP X30, X21, [X31 - 0x20]!
	0x03B34310 STP X20, X19, [X31 + 0x10]
	0x03B34314 ADRP X21, 0x8AE000
	0x03B34318 ADRP X20, 0x5BF000
	0x03B3431C LDRB W8, [X21 + 0x7F0]
	0x03B34320 LDR X20, [X20 + 0x598]
	0x03B34324 MOV X19, X0
	0x03B34328 TBNZ X8, 0x0, 0x3B34364
	0x03B3432C ADRP X0, 0x5BF000
	0x03B34330 LDR X0, [X0 + 0xA58]
	0x03B34334 BL 0x1C16CF4
	0x03B34338 ADRP X0, 0x5BF000
	0x03B3433C LDR X0, [X0 + 0x598]
	0x03B34340 BL 0x1C16CF4
	0x03B34344 ADRP X0, 0x626000
	0x03B34348 LDR X0, [X0 + 0x68]
	0x03B3434C BL 0x1C16CF4
	0x03B34350 ADRP X0, 0x5BF000
	0x03B34354 LDR X0, [X0 + 0xEC8]
	0x03B34358 BL 0x1C16CF4
	0x03B3435C MOVZ W8, 0x1
	0x03B34360 STRB W8, [X21 + 0x7F0]
	0x03B34364 LDR X0, [X20]
	0x03B34368 LDR X20, [X19 + 0x30]
	0x03B3436C LDR W8, [X0 + 0xE0]
	0x03B34370 CBNZ W8, 0x3B34378
	0x03B34374 BL 0x1C16DFC
	0x03B34378 MOV X0, X20
	0x03B3437C MOV X1, X31
	0x03B34380 MOV X2, X31
	0x03B34384 BL 0x3C3883C
	0x03B34388 TBZ X0, 0x0, 0x3B344D0
	0x03B3438C MOV X0, X19
	0x03B34390 MOV X1, X31
	0x03B34394 BL 0x3C32ECC
	0x03B34398 CBZ X0, 0x3B344DC
	0x03B3439C MOV X1, X31
	0x03B343A0 BL 0x3C389D4
	0x03B343A4 ADRP X8, 0x5BF000
	0x03B343A8 LDR X8, [X8 + 0xEC8]
	0x03B343AC ADRP X9, 0x626000
	0x03B343B0 LDR X9, [X9 + 0x68]
	0x03B343B4 MOV X1, X0
	0x03B343B8 LDR X8, [X8]
	0x03B343BC MOV X3, X31
	0x03B343C0 LDR X2, [X9]
	0x03B343C4 MOV X0, X8
	0x03B343C8 BL 0x32274B8
	0x03B343CC ADRP X8, 0x5BF000
	0x03B343D0 LDR X8, [X8 + 0xA58]
	0x03B343D4 MOV X21, X0
	0x03B343D8 LDR X8, [X8]
	0x03B343DC MOV X0, X8
	0x03B343E0 BL 0x1C16F10
	0x03B343E4 MOV X1, X21
	0x03B343E8 MOV X2, X31
	0x03B343EC MOV X20, X0
	0x03B343F0 BL 0x3C35934
	0x03B343F4 CBZ X20, 0x3B344DC
	0x03B343F8 MOV X0, X20
	0x03B343FC MOV X1, X31
	0x03B34400 BL 0x3C356F8
	0x03B34404 MOV X20, X0
	0x03B34408 STR X0, [X19 + 0x30]
	0x03B3440C MOV X0, X19
	0x03B34410 MOV X1, X31
	0x03B34414 BL 0x3C32E90
	0x03B34418 CBZ X20, 0x3B344DC
	0x03B3441C MOV X1, X0
	0x03B34420 MOV X0, X20
	0x03B34424 MOV W2, W31
	0x03B34428 MOV X3, X31
	0x03B3442C BL 0x3C3FEB8
	0x03B34430 ADRP X21, 0x8A4000
	0x03B34434 LDRB W8, [X21 + 0x783]
	0x03B34438 LDR X20, [X19 + 0x30]
	0x03B3443C CBNZ W8, 0x3B34454
	0x03B34440 ADRP X0, 0x5BF000
	0x03B34444 LDR X0, [X0 + 0x5A0]
	0x03B34448 BL 0x1C16CF4
	0x03B3444C MOVZ W8, 0x1
	0x03B34450 STRB W8, [X21 + 0x783]
	0x03B34454 CBZ X20, 0x3B344DC
	0x03B34458 ADRP X8, 0x5BF000
	0x03B3445C LDR X8, [X8 + 0x5A0]
	0x03B34460 MOV X0, X20
	0x03B34464 MOV X1, X31
	0x03B34468 LDR X8, [X8]
	0x03B3446C LDR X8, [X8 + 0xB8]
	0x03B34470 LDP S1, S2, [X8 + 0x4]
	0x03B34474 LDR V0, [X8]
	0x03B34478 BL 0x3C3EC04
	0x03B3447C ADRP X20, 0x8A4000
	0x03B34480 LDRB W8, [X20 + 0x793]
	0x03B34484 LDR X19, [X19 + 0x30]
	0x03B34488 CBNZ W8, 0x3B344A0
	0x03B3448C ADRP X0, 0x5C0000
	0x03B34490 LDR X0, [X0 + 0x5A8]
	0x03B34494 BL 0x1C16CF4
	0x03B34498 MOVZ W8, 0x1
	0x03B3449C STRB W8, [X20 + 0x793]
	0x03B344A0 CBZ X19, 0x3B344DC
	0x03B344A4 ADRP X8, 0x5C0000
	0x03B344A8 LDR X8, [X8 + 0x5A8]
	0x03B344AC MOV X0, X19
	0x03B344B0 LDP X20, X19, [X31 + 0x10]
	0x03B344B4 MOV X1, X31
	0x03B344B8 LDR X8, [X8]
	0x03B344BC LDR X8, [X8 + 0xB8]
	0x03B344C0 LDP S2, S3, [X8 + 0x8]
	0x03B344C4 LDP S0, S1, [X8]
	0x03B344C8 LDP X30, X21, [X31], #0x20
	0x03B344CC B 0x3C3F8B8
	0x03B344D0 LDP X20, X19, [X31 + 0x10]
	0x03B344D4 LDP X30, X21, [X31], #0x20
	0x03B344D8 RET
	0x03B344DC BL 0x1C16F20
	0x03B344E0 LDR X8, [X0]
	0x03B344E4 LDP X2, X1, [X8 + 0x1B8]
	0x03B344E8 BR X2
	0x03B344EC STR X30, [X31 - 0x30]!
	0x03B344F0 STP X22, X21, [X31 + 0x10]
	0x03B344F4 STP X20, X19, [X31 + 0x20]
	0x03B344F8 ADRP X20, 0x8AE000
	0x03B344FC ADRP X22, 0x5BF000
	0x03B34500 LDRB W8, [X20 + 0x7F3]
	0x03B34504 LDR X22, [X22 + 0x598]
	0x03B34508 MOV X19, X0
	0x03B3450C TBNZ X8, 0x0, 0x3B34530
	0x03B34510 ADRP X0, 0x5C3000
	0x03B34514 LDR X0, [X0 + 0x1D0]
	0x03B34518 BL 0x1C16CF4
	0x03B3451C ADRP X0, 0x5BF000
	0x03B34520 LDR X0, [X0 + 0x598]
	0x03B34524 BL 0x1C16CF4
	0x03B34528 MOVZ W8, 0x1
	0x03B3452C STRB W8, [X20 + 0x7F3]
	0x03B34530 LDR X0, [X22]
	0x03B34534 LDR X20, [X19 + 0x38]
	0x03B34538 LDR W8, [X0 + 0xE0]
	0x03B3453C CBNZ W8, 0x3B34544
	0x03B34540 BL 0x1C16DFC
	0x03B34544 MOV X0, X20
	0x03B34548 MOV X1, X31
	0x03B3454C MOV X2, X31
	0x03B34550 BL 0x3C3883C

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X21, 0x8AF000
	008 Move W8, [X21+2024]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x5C0000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E8000
	019 Move X0, [X0+960]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E7000
	022 Move X0, [X0+4072]
	023 Call 0x1C17CF4
	024 Move X0, 0x626000
	025 Move X0, [X0+4064]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2024], W8
	029 Compare X19, 0
	030 JumpIfEqual {243}
	031 Move W8, [X20+577]
	032 Compare W8, 0
	033 JumpIfNotEqual {97}
	034 Add X21, X20, 264
	035 Move X0, X21
	036 Move X1, X31
	037 Call InputActionProperty.get_action, X0
	038 Compare X0, 0
	039 JumpIfNotEqual {50}
	040 Add X0, X20, 312
	041 Move X1, X31
	042 Call InputActionProperty.get_action, X0
	043 Compare X0, 0
	044 JumpIfNotEqual {50}
	045 Add X0, X20, 360
	046 Move X1, X31
	047 Call InputActionProperty.get_action, X0
	048 Compare X0, 0
	049 JumpIfEqual {97}
	050 Move X8, [X21+16]
	051 Move V0, [X21]
	052 Add X0, X31, 64
	053 Move [X31+80], X8
	054 Move [X31+4], V0
	055 Call ActionBasedController.IsDisabledReferenceAction, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {82}
	060 Add X8, X20, 312
	061 Move X9, [X8+16]
	062 Move V0, [X8]
	063 Add X0, X31, 32
	064 Move [X31+48], X9
	065 Move [X31+2], V0
	066 Call ActionBasedController.IsDisabledReferenceAction, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {82}
	071 Add X8, X20, 360
	072 Move X9, [X8+16]
	073 Move V0, [X8]
	074 Add X0, X31, 0
	075 Move [X31+16], X9
	076 Move [X31], V0
	077 Call ActionBasedController.IsDisabledReferenceAction, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {95}
	082 Move X8, 0x5C0000
	083 Move X8, [X8+2600]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X8, 0x626000
	090 Move X8, [X8+4064]
	091 Move X1, X20
	092 Move X2, X31
	093 Move X0, [X8]
	094 Call Debug.LogWarning, X0, X1
	095 Move W8, 1
	096 Move [X20+577], W8
	097 Add X0, X20, 288
	098 Move X1, X31
	099 NotImplemented "Instruction STURH not yet implemented."
	100 NotImplemented "Instruction STURH not yet implemented."
	101 NotImplemented "Instruction STURH not yet implemented."
	102 Call InputActionProperty.get_action, X0
	103 Compare X0, 0
	104 JumpIfEqual {112}
	105 Move X1, X31
	106 Move X21, X0
	107 Call InputAction.get_bindings, X0
	108 Move X8, X1
	109 ShiftRight X8, 32
	110 And X8, X8, 0x7FFFFFFF
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X0, X20, 264
	113 Move X1, X31
	114 Call InputActionProperty.get_action, X0
	115 Move X21, X0
	116 Add X0, X20, 264
	117 Move X1, X31
	118 Call InputActionProperty.get_action, X0
	119 Move X8, [X20]
	120 Move X1, X0
	121 Move X0, X20
	122 Move X9, [X8+600]
	123 Move X2, [X8+608]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, [X20]
	126 Move W22, W0
	127 Move X0, X20
	128 Move X1, X21
	129 Move X9, [X8+616]
	130 Move X2, [X8+624]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move W8, [X19+64]
	133 And W10, W22, 1
	134 Xor W9, W22, 1
	135 Move [X19+64], W10
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CSET not yet implemented."
	138 NotImplemented "Instruction CSET not yet implemented."
	139 And W10, W22, W10
	140 And W8, W8, W9
	141 Add X0, X20, 336
	142 Move X1, X31
	143 Move [X19+60], S0
	144 Move [X19+65], W10
	145 Move [X19+66], W8
	146 Call InputActionProperty.get_action, X0
	147 Compare X0, 0
	148 JumpIfEqual {156}
	149 Move X1, X31
	150 Move X21, X0
	151 Call InputAction.get_bindings, X0
	152 Move X8, X1
	153 ShiftRight X8, 32
	154 And X8, X8, 0x7FFFFFFF
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X0, X20, 312
	157 Move X1, X31
	158 Call InputActionProperty.get_action, X0
	159 Move X21, X0
	160 Add X0, X20, 312
	161 Move X1, X31
	162 Call InputActionProperty.get_action, X0
	163 Move X8, [X20]
	164 Move X1, X0
	165 Move X0, X20
	166 Move X9, [X8+600]
	167 Move X2, [X8+608]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X8, [X20]
	170 Move W22, W0
	171 Move X0, X20
	172 Move X1, X21
	173 Move X9, [X8+616]
	174 Move X2, [X8+624]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move W8, [X19+72]
	177 And W10, W22, 1
	178 Xor W9, W22, 1
	179 Move [X19+72], W10
	180 NotImplemented "Instruction CMP not yet implemented."
	181 NotImplemented "Instruction CSET not yet implemented."
	182 NotImplemented "Instruction CSET not yet implemented."
	183 And W10, W22, W10
	184 And W8, W8, W9
	185 Add X0, X20, 384
	186 Move X1, X31
	187 Move [X19+68], S0
	188 Move [X19+73], W10
	189 Move [X19+74], W8
	190 Call InputActionProperty.get_action, X0
	191 Compare X0, 0
	192 JumpIfEqual {200}
	193 Move X1, X31
	194 Move X21, X0
	195 Call InputAction.get_bindings, X0
	196 Move X8, X1
	197 ShiftRight X8, 32
	198 And X8, X8, 0x7FFFFFFF
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add X0, X20, 360
	201 Move X1, X31
	202 Call InputActionProperty.get_action, X0
	203 Move X21, X0
	204 Add X0, X20, 360
	205 Move X1, X31
	206 Call InputActionProperty.get_action, X0
	207 Move X8, [X20]
	208 Move X1, X0
	209 Move X0, X20
	210 Move X9, [X8+600]
	211 Move X2, [X8+608]
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move X8, [X20]
	214 Move W22, W0
	215 Move X0, X20
	216 Move X1, X21
	217 Move X9, [X8+616]
	218 Move X2, [X8+624]
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move W8, [X19+80]
	221 And W10, W22, 1
	222 Xor W9, W22, 1
	223 Move [X19+80], W10
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CSET not yet implemented."
	226 NotImplemented "Instruction CSET not yet implemented."
	227 And W10, W22, W10
	228 And W8, W8, W9
	229 Add X0, X20, 408
	230 Move X1, X31
	231 Move [X19+76], S0
	232 Move [X19+81], W10
	233 Move [X19+82], W8
	234 Call InputActionProperty.get_action, X0
	235 Compare X0, 0
	236 JumpIfEqual {243}
	237 Move X8, 0x5E8000
	238 Move X8, [X8+960]
	239 Move X1, [X8]
	240 Call InputAction.ReadValue, X0
	241 Move [X19+84], S0
	242 Move [X19+92], S1
	243 Move X20, [X31+128]
	244 Move X19, [X31+136]
	245 Move X22, [X31+112]
	246 Move X21, [X31+120]
	247 Move X30, [X31+96]
	248 Add X31, X31, 144
	249 Return 

Method: System.Boolean IsPressed(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x03B3459C LDR W8, [X0 + 0xE0]
	0x03B345A0 CBNZ W8, 0x3B345A8
	0x03B345A4 BL 0x1C16DFC
	0x03B345A8 ADRP X8, 0x5C3000
	0x03B345AC LDR X8, [X8 + 0x1D0]
	0x03B345B0 MOV X0, X20
	0x03B345B4 MOV X1, X21
	0x03B345B8 LDR X2, [X8]
	0x03B345BC BL 0x222D488
	0x03B345C0 CBZ X0, 0x3B3463C
	0x03B345C4 MOV X1, X31

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {11}
	003 Move [X31-16], X30
	004 Move X0, X1
	005 Move X1, X31
	006 Call InputAction.get_phase, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Single ReadValue(UnityEngine.InputSystem.InputAction action)

Disassembly:
	0x03B345C8 BL 0x3C356F8
	0x03B345CC STR X0, [X19 + 0x38]
	0x03B345D0 LDR X0, [X22]
	0x03B345D4 LDR X20, [X19 + 0x38]
	0x03B345D8 LDR W8, [X0 + 0xE0]
	0x03B345DC CBNZ W8, 0x3B345E4
	0x03B345E0 BL 0x1C16DFC
	0x03B345E4 MOV X0, X20
	0x03B345E8 MOV X1, X31
	0x03B345EC MOV X2, X31
	0x03B345F0 BL 0x3C354F8
	0x03B345F4 TBZ X0, 0x0, 0x3B3462C
	0x03B345F8 LDR X0, [X19 + 0x38]
	0x03B345FC CBZ X0, 0x3B3463C
	0x03B34600 MOV X1, X31
	0x03B34604 BL 0x3C32ECC
	0x03B34608 CBZ X0, 0x3B3463C
	0x03B3460C LDRB W8, [X19 + 0x58]
	0x03B34610 LDP X20, X19, [X31 + 0x20]
	0x03B34614 LDP X22, X21, [X31 + 0x10]
	0x03B34618 MOV X2, X31
	0x03B3461C CMP W8, 0x0
	0x03B34620 CSET W1, EQ
	0x03B34624 LDR X30, [X31], #0x30
	0x03B34628 B 0x3C357B4
	0x03B3462C LDP X20, X19, [X31 + 0x20]
	0x03B34630 LDP X22, X21, [X31 + 0x10]
	0x03B34634 LDR X30, [X31], #0x30
	0x03B34638 RET
	0x03B3463C BL 0x1C16F20
	0x03B34640 SUB X31, X31, 0x40
	0x03B34644 STP D9, D8, [X31 + 0x10]
	0x03B34648 STR X30, [X31 + 0x20]
	0x03B3464C STP X20, X19, [X31 + 0x30]
	0x03B34650 ADRP X20, 0x8A4000
	0x03B34654 LDRB W8, [X20 + 0x783]
	0x03B34658 MOV X19, X0
	0x03B3465C CBNZ W8, 0x3B34674
	0x03B34660 ADRP X0, 0x5BF000
	0x03B34664 LDR X0, [X0 + 0x5A0]
	0x03B34668 BL 0x1C16CF4
	0x03B3466C MOVZ W8, 0x1
	0x03B34670 STRB W8, [X20 + 0x783]
	0x03B34674 ADRP X8, 0x5BF000
	0x03B34678 LDR X8, [X8 + 0x5A0]
	0x03B3467C ADRP X20, 0x8A4000
	0x03B34680 LDRB W9, [X20 + 0x793]
	0x03B34684 LDR X8, [X8]
	0x03B34688 LDR X8, [X8 + 0xB8]
	0x03B3468C LDR V9, [X8]
	0x03B34690 LDR V8, [X8 + 0x8]
	0x03B34694 CBNZ W9, 0x3B346AC
	0x03B34698 ADRP X0, 0x5C0000
	0x03B3469C LDR X0, [X0 + 0x5A8]
	0x03B346A0 BL 0x1C16CF4
	0x03B346A4 MOVZ W8, 0x1
	0x03B346A8 STRB W8, [X20 + 0x793]
	0x03B346AC ADRP X8, 0x5C0000
	0x03B346B0 LDR X8, [X8 + 0x5A8]
	0x03B346B4 MOV X0, X19
	0x03B346B8 MOV X1, X31
	0x03B346BC LDR X8, [X8]
	0x03B346C0 LDR X8, [X8 + 0xB8]
	0x03B346C4 LDR V0, [X8]
	0x03B346C8 STR V0, [X31]
	0x03B346CC BL 0x33BDD8C
	0x03B346D0 LDR V0, [X31]
	0x03B346D4 STR X31, [X19 + 0x10]
	0x03B346D8 STR D9, [X19 + 0x20]
	0x03B346DC STR S8, [X19 + 0x28]
	0x03B346E0 STUR V0, [X19 + 0x2C]
	0x03B346E4 STR W31, [X19 + 0x18]
	0x03B346E8 STRB W31, [X19 + 0x1C]
	0x03B346EC LDP X20, X19, [X31 + 0x30]
	0x03B346F0 LDR X30, [X31 + 0x20]
	0x03B346F4 LDP D9, D8, [X31 + 0x10]
	0x03B346F8 ADD X31, X31, 0x40
	0x03B346FC RET
	0x03B34700 STP X30, X21, [X31 - 0x20]!
	0x03B34704 STP X20, X19, [X31 + 0x10]
	0x03B34708 ADRP X21, 0x8AE000
	0x03B3470C ADRP X20, 0x5BF000
	0x03B34710 LDRB W8, [X21 + 0x7F5]
	0x03B34714 LDR X20, [X20 + 0x598]
	0x03B34718 MOV X19, X0
	0x03B3471C TBNZ X8, 0x0, 0x3B34734
	0x03B34720 ADRP X0, 0x5BF000
	0x03B34724 LDR X0, [X0 + 0x598]
	0x03B34728 BL 0x1C16CF4
	0x03B3472C MOVZ W8, 0x1
	0x03B34730 STRB W8, [X21 + 0x7F5]
	0x03B34734 LDR X0, [X20]
	0x03B34738 LDR X20, [X19 + 0x28]
	0x03B3473C LDR W8, [X0 + 0xE0]
	0x03B34740 CBNZ W8, 0x3B34748
	0x03B34744 BL 0x1C16DFC
	0x03B34748 MOV X0, X20
	0x03B3474C MOV X1, X31
	0x03B34750 MOV X2, X31
	0x03B34754 BL 0x3C354F8
	0x03B34758 TBZ X0, 0x0, 0x3B34774
	0x03B3475C LDR X0, [X19 + 0x28]
	0x03B34760 CBZ X0, 0x3B34784
	0x03B34764 LDP X20, X19, [X31 + 0x10]
	0x03B34768 MOV X1, X31
	0x03B3476C LDP X30, X21, [X31], #0x20
	0x03B34770 B 0x3C32ECC

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x8AF000
	008 Move W8, [X21+2025]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x614000
	016 Move X0, [X0+2144]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C6000
	019 Move X0, [X0+2240]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E8000
	022 Move X0, [X0+960]
	023 Call 0x1C17CF4
	024 Move X0, 0x614000
	025 Move X0, [X0+2064]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2025], W8
	029 Compare X19, 0
	030 JumpIfEqual {73}
	031 Move X0, X19
	032 Move X1, X31
	033 Call InputAction.get_activeControl, X0
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move X8, 0x614000
	037 Move X8, [X8+2144]
	038 Move X9, [X0]
	039 Move X8, [X8]
	040 Move W11, [X9+304]
	041 Move W10, [X8+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, [X9+200]
	044 Add X9, X9, X10
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X19
	048 Move X1, X31
	049 Call InputAction.get_activeControl, X0
	050 Compare X0, 0
	051 JumpIfEqual {63}
	052 Move X8, 0x614000
	053 Move X8, [X8+2064]
	054 Move X9, [X0]
	055 Move X8, [X8]
	056 Move W11, [X9+304]
	057 Move W10, [X8+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, [X9+200]
	060 Add X9, X9, X10
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X20]
	064 Move X0, X20
	065 Move X1, X19
	066 Move X9, [X8+600]
	067 Move X2, [X8+608]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 And W31, W0, 1
	070 Move S0, W31
	071 Move S1, 1
	072 NotImplemented "Instruction FCSEL not yet implemented."
	073 Move S0, W31
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Move X21, [X31+24]
	078 Move D9, [X31+48]
	079 Move D8, [X31+56]
	080 Return V0
	081 Move X8, 0x5C6000
	082 Move X8, [X8+2240]
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X30, [X31+16]
	087 Move X21, [X31+24]
	088 Move X1, [X8]
	089 Move D9, [X31+48]
	090 Move D8, [X31+56]
	091 Call InputAction.ReadValue, X0
	092 Return V0
	093 Move X8, 0x5E8000
	094 Move X8, [X8+960]
	095 Move X0, X19
	096 Move X1, [X8]
	097 Call InputAction.ReadValue, X0
	098 Move X19, 0x8A6000
	099 Move W8, [X19+2072]
	100 Move V8, V0
	101 Move V9, V1
	102 Compare W8, 0
	103 JumpIfNotEqual {109}
	104 Move X0, 0x5C0000
	105 Move X0, [X0+1448]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X19+2072], W8
	109 Move X8, 0x5C0000
	110 Move X8, [X8+1448]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Multiply S0, S8, S8
	117 Multiply S1, S9, S9
	118 Add S0, S0, S1
	119 NotImplemented "Instruction FSQRT not yet implemented."

Method: System.Boolean SendHapticImpulse(System.Single amplitude, System.Single duration)

Disassembly:
	0x03B34774 LDP X20, X19, [X31 + 0x10]
	0x03B34778 MOV X0, X31
	0x03B3477C LDP X30, X21, [X31], #0x20
	0x03B34780 RET
	0x03B34784 BL 0x1C16F20
	0x03B34788 STP X30, X19, [X31 - 0x10]!
	0x03B3478C LDRB W8, [X0 + 0x99]
	0x03B34790 MOV X19, X0
	0x03B34794 CBZ W8, 0x3B347AC
	0x03B34798 MOV X0, X19
	0x03B3479C BL 0x3B344EC
	0x03B347A0 MOV X0, X19
	0x03B347A4 BL 0x3B3429C
	0x03B347A8 STRB W31, [X19 + 0x99]
	0x03B347AC LDRB W8, [X19 + 0x24]
	0x03B347B0 CBZ W8, 0x3B347D4
	0x03B347B4 LDR W8, [X19 + 0x20]
	0x03B347B8 CMP W8, 0x1
	0x03B347BC B.HI 0x3B347D4
	0x03B347C0 LDR X8, [X19]
	0x03B347C4 LDR X1, [X19 + 0x80]
	0x03B347C8 MOV X0, X19
	0x03B347CC LDP X9, X2, [X8 + 0x1F8]
	0x03B347D0 BLR X9
	0x03B347D4 LDRB W8, [X19 + 0x25]
	0x03B347D8 CBZ W8, 0x3B34808
	0x03B347DC LDR X8, [X19]
	0x03B347E0 LDR X1, [X19 + 0x80]
	0x03B347E4 MOV X0, X19
	0x03B347E8 LDR X9, [X8 + 0x208]
	0x03B347EC LDR X2, [X8 + 0x210]
	0x03B347F0 BLR X9
	0x03B347F4 LDR X8, [X19]
	0x03B347F8 MOV X0, X19
	0x03B347FC LDR X9, [X8 + 0x218]
	0x03B34800 LDR X1, [X8 + 0x220]
	0x03B34804 BLR X9
	0x03B34808 LDR X8, [X19]
	0x03B3480C LDR X2, [X19 + 0x80]
	0x03B34810 MOVZ W1, 0x1
	0x03B34814 MOV X0, X19
	0x03B34818 LDP X4, X3, [X8 + 0x1E8]
	0x03B3481C LDP X30, X19, [X31], #0x10
	0x03B34820 BR X4
	0x03B34824 STP X30, X19, [X31 - 0x10]!
	0x03B34828 LDRB W8, [X0 + 0x24]
	0x03B3482C MOV X19, X0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8AF000
	007 Move W8, [X20+2026]
	008 Move V8, V1
	009 Move V9, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x626000
	016 Move X0, [X0+4072]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2026], W8
	020 Add X0, X19, 432
	021 Move X1, X31
	022 Call InputActionProperty.get_action, X0
	023 Compare X0, 0
	024 JumpIfEqual {49}
	025 Move X1, X31
	026 Call InputAction.get_activeControl, X0
	027 Compare X0, 0
	028 JumpIfEqual {49}
	029 Move X0, [X0+120]
	030 Compare X0, 0
	031 JumpIfEqual {49}
	032 Move X8, 0x626000
	033 Move X8, [X8+4072]
	034 Move X9, [X0]
	035 Move X8, [X8]
	036 Move W11, [X9+304]
	037 Move W10, [X8+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X9, [X9+200]
	040 Add X9, X9, X10
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W0, W31
	044 Move V0, V9
	045 Move V1, V8
	046 Move X1, X31
	047 Call XRControllerWithRumble.SendImpulse, X0, V0, V1
	048 Move W0, 1
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move D9, [X31+48]
	053 Move D8, [X31+56]
	054 Return X0

Method: System.Void EnableAllDirectActions()

Disassembly:
	0x03B336F4 MOV X0, X19
	0x03B336F8 LDP X20, X19, [X31 + 0x20]
	0x03B336FC LDP X30, X21, [X31 + 0x10]
	0x03B33700 LDR X1, [X8]
	0x03B33704 LDP D9, D8, [X31], #0x30
	0x03B33708 B 0x21F5D8C
	0x03B3370C ADRP X8, 0x5E8000
	0x03B33710 LDR X8, [X8 + 0x3C0]
	0x03B33714 MOV X0, X19
	0x03B33718 LDR X1, [X8]
	0x03B3371C BL 0x21F5E68
	0x03B33720 ADRP X19, 0x8A6000
	0x03B33724 LDRB W8, [X19 + 0x818]
	0x03B33728 MOV V8.16B, V0.16B
	0x03B3372C MOV V9.16B, V1.16B
	0x03B33730 CBNZ W8, 0x3B33748
	0x03B33734 ADRP X0, 0x5C0000
	0x03B33738 LDR X0, [X0 + 0x5A8]
	0x03B3373C BL 0x1C16CF4
	0x03B33740 MOVZ W8, 0x1
	0x03B33744 STRB W8, [X19 + 0x818]
	0x03B33748 ADRP X8, 0x5C0000
	0x03B3374C LDR X8, [X8 + 0x5A8]
	0x03B33750 LDR X0, [X8]
	0x03B33754 LDR W8, [X0 + 0xE0]
	0x03B33758 CBNZ W8, 0x3B33760
	0x03B3375C BL 0x1C16DFC
	0x03B33760 FMUL S0, S8, S8
	0x03B33764 FMUL S1, S9, S9
	0x03B33768 FADD S0, S0, S1
	0x03B3376C FSQRT S0, S0
	0x03B33770 B 0x3B336DC
	0x03B33774 STP D9, D8, [X31 - 0x30]!
	0x03B33778 STR X30, [X31 + 0x10]
	0x03B3377C STP X20, X19, [X31 + 0x20]
	0x03B33780 ADRP X20, 0x8AF000
	0x03B33784 LDRB W8, [X20 + 0x7EA]
	0x03B33788 MOV V8.16B, V1.16B
	0x03B3378C MOV V9.16B, V0.16B
	0x03B33790 MOV X19, X0
	0x03B33794 TBNZ X8, 0x0, 0x3B337AC
	0x03B33798 ADRP X0, 0x626000
	0x03B3379C LDR X0, [X0 + 0xFE8]
	0x03B337A0 BL 0x1C16CF4
	0x03B337A4 MOVZ W8, 0x1
	0x03B337A8 STRB W8, [X20 + 0x7EA]
	0x03B337AC ADD X0, X19, 0x1B0
	0x03B337B0 MOV X1, X31
	0x03B337B4 BL 0x3745120
	0x03B337B8 CBZ X0, 0x3B33820
	0x03B337BC MOV X1, X31
	0x03B337C0 BL 0x3734B58
	0x03B337C4 CBZ X0, 0x3B33820
	0x03B337C8 LDR X0, [X0 + 0x78]
	0x03B337CC CBZ X0, 0x3B33820
	0x03B337D0 ADRP X8, 0x626000
	0x03B337D4 LDR X8, [X8 + 0xFE8]
	0x03B337D8 LDR X9, [X0]
	0x03B337DC LDR X8, [X8]
	0x03B337E0 LDRB W11, [X9 + 0x130]
	0x03B337E4 LDRB W10, [X8 + 0x130]
	0x03B337E8 CMP W11, W10
	0x03B337EC B.CC 0x3B33804
	0x03B337F0 LDR X9, [X9 + 0xC8]
	0x03B337F4 ADD X9, X9, X10, 0x3, LSL
	0x03B337F8 LDUR X9, [X9 - 0x8]
	0x03B337FC CMP X9, X8
	0x03B33800 B.EQ 0x3B3380C
	0x03B33804 MOV W0, W31
	0x03B33808 B 0x3B33820
	0x03B3380C MOV V0.16B, V9.16B
	0x03B33810 MOV V1.16B, V8.16B
	0x03B33814 MOV X1, X31
	0x03B33818 BL 0x37DB848
	0x03B3381C MOVZ W0, 0x1
	0x03B33820 LDP X20, X19, [X31 + 0x20]
	0x03B33824 LDR X30, [X31 + 0x10]
	0x03B33828 LDP D9, D8, [X31], #0x30
	0x03B3382C RET
	0x03B33830 LDR V0, [X0 + 0x244]
	0x03B33834 RET
	0x03B33838 STR S0, [X0 + 0x244]
	0x03B3383C RET
	0x03B33840 STP X29, X30, [X31 - 0x60]!
	0x03B33844 STP X28, X27, [X31 + 0x10]
	0x03B33848 STP X26, X25, [X31 + 0x20]
	0x03B3384C STP X24, X23, [X31 + 0x30]
	0x03B33850 STP X22, X21, [X31 + 0x40]
	0x03B33854 STP X20, X19, [X31 + 0x50]
	0x03B33858 SUB X31, X31, 0x1A0
	0x03B3385C ADRP X27, 0x8AF000
	0x03B33860 ADRP X21, 0x5C4000
	0x03B33864 ADRP X20, 0x5C4000
	0x03B33868 ADRP X26, 0x615000
	0x03B3386C ADRP X24, 0x5CC000
	0x03B33870 ADRP X25, 0x615000
	0x03B33874 ADRP X22, 0x626000
	0x03B33878 LDR X21, [X21 + 0x3E0]
	0x03B3387C LDRB W8, [X27 + 0x7ED]
	0x03B33880 LDR X20, [X20 + 0x468]
	0x03B33884 LDR X26, [X26 + 0x688]
	0x03B33888 LDR X24, [X24 + 0xB8]
	0x03B3388C LDR X25, [X25 + 0x598]
	0x03B33890 LDR X22, [X22 + 0xFF0]
	0x03B33894 MOV X19, X0
	0x03B33898 ADD X23, X31, 0xB0
	0x03B3389C TBNZ X8, 0x0, 0x3B339BC
	0x03B338A0 ADRP X0, 0x5C4000
	0x03B338A4 LDR X0, [X0 + 0x3E0]
	0x03B338A8 BL 0x1C16CF4
	0x03B338AC ADRP X0, 0x626000
	0x03B338B0 LDR X0, [X0 + 0xFF8]
	0x03B338B4 BL 0x1C16CF4
	0x03B338B8 ADRP X0, 0x615000
	0x03B338BC LDR X0, [X0 + 0x598]
	0x03B338C0 BL 0x1C16CF4
	0x03B338C4 ADRP X0, 0x627000
	0x03B338C8 LDR X0, [X0]
	0x03B338CC BL 0x1C16CF4
	0x03B338D0 ADRP X0, 0x627000
	0x03B338D4 LDR X0, [X0 + 0x8]
	0x03B338D8 BL 0x1C16CF4
	0x03B338DC ADRP X0, 0x627000
	0x03B338E0 LDR X0, [X0 + 0x10]
	0x03B338E4 BL 0x1C16CF4
	0x03B338E8 ADRP X0, 0x5C4000
	0x03B338EC LDR X0, [X0 + 0x468]
	0x03B338F0 BL 0x1C16CF4
	0x03B338F4 ADRP X0, 0x627000
	0x03B338F8 LDR X0, [X0 + 0x18]
	0x03B338FC BL 0x1C16CF4
	0x03B33900 ADRP X0, 0x627000
	0x03B33904 LDR X0, [X0 + 0x20]
	0x03B33908 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Subtract X31, X31, 544
	005 Move X8, [X0+184]
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move X19, X0
	008 Add X0, X31, 512
	009 Move X1, X31
	010 Move [X31+528], X8
	011 Move [X31+32], V0
	012 Call InputActionPropertyExtensions.EnableDirectAction, X0
	013 Move X8, [X19+208]
	014 Move V0, [X19+12]
	015 Add X0, X31, 480
	016 Move X1, X31
	017 Move [X31+496], X8
	018 Move [X31+30], V0
	019 Call InputActionPropertyExtensions.EnableDirectAction, X0
	020 Move X8, [X19+232]
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Add X0, X31, 448
	023 Move X1, X31
	024 Move [X31+464], X8
	025 Move [X31+28], V0
	026 Call InputActionPropertyExtensions.EnableDirectAction, X0
	027 Move X8, [X19+256]
	028 Move V0, [X19+15]
	029 Add X0, X31, 416
	030 Move X1, X31
	031 Move [X31+432], X8
	032 Move [X31+26], V0
	033 Call InputActionPropertyExtensions.EnableDirectAction, X0
	034 Add X8, X19, 264
	035 Move X9, [X8+16]
	036 Move V0, [X8]
	037 Add X0, X31, 384
	038 Move X1, X31
	039 Move [X31+400], X9
	040 Move [X31+24], V0
	041 Call InputActionPropertyExtensions.EnableDirectAction, X0
	042 Move X8, [X19+304]
	043 Move V0, [X19+18]
	044 Add X0, X31, 352
	045 Move X1, X31
	046 Move [X31+368], X8
	047 Move [X31+22], V0
	048 Call InputActionPropertyExtensions.EnableDirectAction, X0
	049 Add X8, X19, 312
	050 Move X9, [X8+16]
	051 Move V0, [X8]
	052 Add X0, X31, 320
	053 Move X1, X31
	054 Move [X31+336], X9
	055 Move [X31+20], V0
	056 Call InputActionPropertyExtensions.EnableDirectAction, X0
	057 Move X8, [X19+352]
	058 Move V0, [X19+21]
	059 Add X0, X31, 288
	060 Move X1, X31
	061 Move [X31+304], X8
	062 Move [X31+18], V0
	063 Call InputActionPropertyExtensions.EnableDirectAction, X0
	064 Add X8, X19, 360
	065 Move X9, [X8+16]
	066 Move V0, [X8]
	067 Add X0, X31, 256
	068 Move X1, X31
	069 Move [X31+272], X9
	070 Move [X31+16], V0
	071 Call InputActionPropertyExtensions.EnableDirectAction, X0
	072 Move X8, [X19+400]
	073 Move V0, [X19+24]
	074 Add X0, X31, 224
	075 Move X1, X31
	076 Move [X31+240], X8
	077 Move [X31+14], V0
	078 Call InputActionPropertyExtensions.EnableDirectAction, X0
	079 Add X8, X19, 408
	080 Move X9, [X8+16]
	081 Move V0, [X8]
	082 Add X0, X31, 192
	083 Move X1, X31
	084 Move [X31+208], X9
	085 Move [X31+12], V0
	086 Call InputActionPropertyExtensions.EnableDirectAction, X0
	087 Move X8, [X19+448]
	088 Move V0, [X19+27]
	089 Add X0, X31, 160
	090 Move X1, X31
	091 Move [X31+176], X8
	092 Move [X31+10], V0
	093 Call InputActionPropertyExtensions.EnableDirectAction, X0
	094 Add X8, X19, 456
	095 Move X9, [X8+16]
	096 Move V0, [X8]
	097 Add X0, X31, 128
	098 Move X1, X31
	099 Move [X31+144], X9
	100 Move [X31+8], V0
	101 Call InputActionPropertyExtensions.EnableDirectAction, X0
	102 Move X8, [X19+496]
	103 Move V0, [X19+30]
	104 Add X0, X31, 96
	105 Move X1, X31
	106 Move [X31+112], X8
	107 Move [X31+6], V0
	108 Call InputActionPropertyExtensions.EnableDirectAction, X0
	109 Add X8, X19, 504
	110 Move X9, [X8+16]
	111 Move V0, [X8]
	112 Add X0, X31, 64
	113 Move X1, X31
	114 Move [X31+80], X9
	115 Move [X31+4], V0
	116 Call InputActionPropertyExtensions.EnableDirectAction, X0
	117 Move X8, [X19+544]
	118 Move V0, [X19+33]
	119 Add X0, X31, 32
	120 Move X1, X31
	121 Move [X31+48], X8
	122 Move [X31+2], V0
	123 Call InputActionPropertyExtensions.EnableDirectAction, X0
	124 Add X8, X19, 552
	125 Move X9, [X8+16]
	126 Move V0, [X8]
	127 Add X0, X31, 0
	128 Move X1, X31
	129 Move [X31+16], X9
	130 Move [X31], V0
	131 Call InputActionPropertyExtensions.EnableDirectAction, X0
	132 Add X31, X31, 544
	133 Move X30, [X31+16]
	134 Move X19, [X31+24]
	135 Move X29, [X31+32]
	136 Return 

Method: System.Void DisableAllDirectActions()

Disassembly:
	0x03B339B8 STRB W8, [X27 + 0x7ED]
	0x03B339BC LDR X0, [X21]
	0x03B339C0 BL 0x1C16F10
	0x03B339C4 LDR X1, [X20]
	0x03B339C8 LDR X6, [X26]
	0x03B339CC MOV W2, W31
	0x03B339D0 MOV X3, X31
	0x03B339D4 MOV X4, X31
	0x03B339D8 MOV X5, X31
	0x03B339DC MOV X7, X31
	0x03B339E0 MOV X20, X0
	0x03B339E4 BL 0x3734C54
	0x03B339E8 ADD X0, X31, 0x188
	0x03B339EC MOV X1, X20
	0x03B339F0 MOV X2, X31
	0x03B339F4 STP X31, X31, [X31 + 0x188]
	0x03B339F8 STR X31, [X31 + 0x198]
	0x03B339FC BL 0x3745288
	0x03B33A00 ADD X9, X31, 0x89
	0x03B33A04 LDR X8, [X31 + 0x198]
	0x03B33A08 LDUR V0, [X9 + 0xFF]
	0x03B33A0C STR X8, [X19 + 0xB8]
	0x03B33A10 STUR V0, [X19 + 0xA8]
	0x03B33A14 LDR X0, [X21]
	0x03B33A18 BL 0x1C16F10
	0x03B33A1C LDR X1, [X24]
	0x03B33A20 LDR X6, [X25]
	0x03B33A24 MOV W2, W31
	0x03B33A28 MOV X3, X31
	0x03B33A2C MOV X4, X31
	0x03B33A30 MOV X5, X31
	0x03B33A34 MOV X7, X31
	0x03B33A38 MOV X20, X0
	0x03B33A3C BL 0x3734C54
	0x03B33A40 ADD X0, X31, 0x170
	0x03B33A44 MOV X1, X20
	0x03B33A48 MOV X2, X31
	0x03B33A4C STP X31, X31, [X31 + 0x170]
	0x03B33A50 STR X31, [X31 + 0x180]
	0x03B33A54 BL 0x3745288
	0x03B33A58 LDR X8, [X31 + 0x180]
	0x03B33A5C LDR V0, [X23 + 0xC]
	0x03B33A60 STR X8, [X19 + 0xD0]
	0x03B33A64 STR V0, [X19 + 0xC]
	0x03B33A68 LDR X0, [X21]
	0x03B33A6C BL 0x1C16F10
	0x03B33A70 LDR X1, [X22]
	0x03B33A74 MOVZ W2, 0x1
	0x03B33A78 MOV X3, X31
	0x03B33A7C MOV X4, X31
	0x03B33A80 MOV X5, X31
	0x03B33A84 MOV X6, X31
	0x03B33A88 MOV X7, X31
	0x03B33A8C MOV X20, X0
	0x03B33A90 BL 0x3734C54
	0x03B33A94 CBZ X20, 0x3B3405C
	0x03B33A98 ADRP X22, 0x615000
	0x03B33A9C ADRP X29, 0x614000
	0x03B33AA0 ADRP X28, 0x627000
	0x03B33AA4 ADRP X26, 0x627000
	0x03B33AA8 ADRP X27, 0x5E8000
	0x03B33AAC ADRP X25, 0x627000
	0x03B33AB0 ADRP X24, 0x614000
	0x03B33AB4 LDR X22, [X22 + 0xDE0]
	0x03B33AB8 LDR X29, [X29 + 0x808]
	0x03B33ABC LDR X28, [X28]
	0x03B33AC0 LDR X26, [X26 + 0x10]
	0x03B33AC4 LDR X27, [X27 + 0x518]
	0x03B33AC8 LDR X25, [X25 + 0x28]
	0x03B33ACC LDR X24, [X24 + 0x800]
	0x03B33AD0 MOVZ W1, 0x1
	0x03B33AD4 MOV X0, X20
	0x03B33AD8 MOV X2, X31
	0x03B33ADC BL 0x3734C00
	0x03B33AE0 ADD X0, X31, 0x158
	0x03B33AE4 MOV X1, X20
	0x03B33AE8 MOV X2, X31
	0x03B33AEC STP X31, X31, [X31 + 0x158]
	0x03B33AF0 STR X31, [X31 + 0x168]
	0x03B33AF4 BL 0x3745288
	0x03B33AF8 ADD X9, X31, 0x59
	0x03B33AFC LDR X8, [X31 + 0x168]
	0x03B33B00 LDUR V0, [X9 + 0xFF]
	0x03B33B04 STR X8, [X19 + 0xE8]
	0x03B33B08 STUR V0, [X19 + 0xD8]
	0x03B33B0C LDR X0, [X21]
	0x03B33B10 BL 0x1C16F10
	0x03B33B14 LDR X1, [X22]
	0x03B33B18 LDR X6, [X29]
	0x03B33B1C MOV W2, W31
	0x03B33B20 MOV X3, X31
	0x03B33B24 MOV X4, X31
	0x03B33B28 MOV X5, X31
	0x03B33B2C MOV X7, X31
	0x03B33B30 MOV X20, X0
	0x03B33B34 BL 0x3734C54
	0x03B33B38 ADD X0, X31, 0x140
	0x03B33B3C MOV X1, X20
	0x03B33B40 MOV X2, X31
	0x03B33B44 STP X31, X31, [X31 + 0x140]
	0x03B33B48 STR X31, [X31 + 0x150]
	0x03B33B4C BL 0x3745288
	0x03B33B50 LDR X8, [X31 + 0x150]
	0x03B33B54 LDR V0, [X23 + 0x9]
	0x03B33B58 STR X8, [X19 + 0x100]
	0x03B33B5C STR V0, [X19 + 0xF]
	0x03B33B60 LDR X0, [X21]
	0x03B33B64 BL 0x1C16F10
	0x03B33B68 LDR X1, [X28]
	0x03B33B6C MOVZ W2, 0x1
	0x03B33B70 MOV X3, X31
	0x03B33B74 MOV X4, X31
	0x03B33B78 MOV X5, X31
	0x03B33B7C MOV X6, X31
	0x03B33B80 MOV X7, X31
	0x03B33B84 MOV X20, X0
	0x03B33B88 BL 0x3734C54
	0x03B33B8C ADD X0, X31, 0x128
	0x03B33B90 MOV X1, X20
	0x03B33B94 MOV X2, X31
	0x03B33B98 STP X31, X31, [X31 + 0x128]
	0x03B33B9C STR X31, [X31 + 0x138]
	0x03B33BA0 BL 0x3745288
	0x03B33BA4 ADD X9, X31, 0x29
	0x03B33BA8 LDR X8, [X31 + 0x138]
	0x03B33BAC LDUR V0, [X9 + 0xFF]
	0x03B33BB0 ADD X9, X19, 0x108
	0x03B33BB4 STR X8, [X9 + 0x10]
	0x03B33BB8 STR V0, [X9]
	0x03B33BBC LDR X0, [X21]
	0x03B33BC0 BL 0x1C16F10
	0x03B33BC4 LDR X1, [X26]
	0x03B33BC8 LDR X6, [X27]
	0x03B33BCC MOV W2, W31

ISIL:
	001 Move [X31-32], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Subtract X31, X31, 544
	005 Move X8, [X0+184]
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move X19, X0
	008 Add X0, X31, 512
	009 Move X1, X31
	010 Move [X31+528], X8
	011 Move [X31+32], V0
	012 Call InputActionPropertyExtensions.DisableDirectAction, X0
	013 Move X8, [X19+208]
	014 Move V0, [X19+12]
	015 Add X0, X31, 480
	016 Move X1, X31
	017 Move [X31+496], X8
	018 Move [X31+30], V0
	019 Call InputActionPropertyExtensions.DisableDirectAction, X0
	020 Move X8, [X19+232]
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Add X0, X31, 448
	023 Move X1, X31
	024 Move [X31+464], X8
	025 Move [X31+28], V0
	026 Call InputActionPropertyExtensions.DisableDirectAction, X0
	027 Move X8, [X19+256]
	028 Move V0, [X19+15]
	029 Add X0, X31, 416
	030 Move X1, X31
	031 Move [X31+432], X8
	032 Move [X31+26], V0
	033 Call InputActionPropertyExtensions.DisableDirectAction, X0
	034 Add X8, X19, 264
	035 Move X9, [X8+16]
	036 Move V0, [X8]
	037 Add X0, X31, 384
	038 Move X1, X31
	039 Move [X31+400], X9
	040 Move [X31+24], V0
	041 Call InputActionPropertyExtensions.DisableDirectAction, X0
	042 Move X8, [X19+304]
	043 Move V0, [X19+18]
	044 Add X0, X31, 352
	045 Move X1, X31
	046 Move [X31+368], X8
	047 Move [X31+22], V0
	048 Call InputActionPropertyExtensions.DisableDirectAction, X0
	049 Add X8, X19, 312
	050 Move X9, [X8+16]
	051 Move V0, [X8]
	052 Add X0, X31, 320
	053 Move X1, X31
	054 Move [X31+336], X9
	055 Move [X31+20], V0
	056 Call InputActionPropertyExtensions.DisableDirectAction, X0
	057 Move X8, [X19+352]
	058 Move V0, [X19+21]
	059 Add X0, X31, 288
	060 Move X1, X31
	061 Move [X31+304], X8
	062 Move [X31+18], V0
	063 Call InputActionPropertyExtensions.DisableDirectAction, X0
	064 Add X8, X19, 360
	065 Move X9, [X8+16]
	066 Move V0, [X8]
	067 Add X0, X31, 256
	068 Move X1, X31
	069 Move [X31+272], X9
	070 Move [X31+16], V0
	071 Call InputActionPropertyExtensions.DisableDirectAction, X0
	072 Move X8, [X19+400]
	073 Move V0, [X19+24]
	074 Add X0, X31, 224
	075 Move X1, X31
	076 Move [X31+240], X8
	077 Move [X31+14], V0
	078 Call InputActionPropertyExtensions.DisableDirectAction, X0
	079 Add X8, X19, 408
	080 Move X9, [X8+16]
	081 Move V0, [X8]
	082 Add X0, X31, 192
	083 Move X1, X31
	084 Move [X31+208], X9
	085 Move [X31+12], V0
	086 Call InputActionPropertyExtensions.DisableDirectAction, X0
	087 Move X8, [X19+448]
	088 Move V0, [X19+27]
	089 Add X0, X31, 160
	090 Move X1, X31
	091 Move [X31+176], X8
	092 Move [X31+10], V0
	093 Call InputActionPropertyExtensions.DisableDirectAction, X0
	094 Add X8, X19, 456
	095 Move X9, [X8+16]
	096 Move V0, [X8]
	097 Add X0, X31, 128
	098 Move X1, X31
	099 Move [X31+144], X9
	100 Move [X31+8], V0
	101 Call InputActionPropertyExtensions.DisableDirectAction, X0
	102 Move X8, [X19+496]
	103 Move V0, [X19+30]
	104 Add X0, X31, 96
	105 Move X1, X31
	106 Move [X31+112], X8
	107 Move [X31+6], V0
	108 Call InputActionPropertyExtensions.DisableDirectAction, X0
	109 Add X8, X19, 504
	110 Move X9, [X8+16]
	111 Move V0, [X8]
	112 Add X0, X31, 64
	113 Move X1, X31
	114 Move [X31+80], X9
	115 Move [X31+4], V0
	116 Call InputActionPropertyExtensions.DisableDirectAction, X0
	117 Move X8, [X19+544]
	118 Move V0, [X19+33]
	119 Add X0, X31, 32
	120 Move X1, X31
	121 Move [X31+48], X8
	122 Move [X31+2], V0
	123 Call InputActionPropertyExtensions.DisableDirectAction, X0
	124 Add X8, X19, 552
	125 Move X9, [X8+16]
	126 Move V0, [X8]
	127 Add X0, X31, 0
	128 Move X1, X31
	129 Move [X31+16], X9
	130 Move [X31], V0
	131 Call InputActionPropertyExtensions.DisableDirectAction, X0
	132 Add X31, X31, 544
	133 Move X30, [X31+16]
	134 Move X19, [X31+24]
	135 Move X29, [X31+32]
	136 Return 

Method: System.Void SetInputActionProperty(ref UnityEngine.InputSystem.InputActionProperty property, UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B33104 LDR X8, [X8 + 0x2F0]
	0x03B33108 LDR X1, [X8]
	0x03B3310C BL 0x2E00A18
	0x03B33110 B 0x3B32F08
	0x03B33114 BL 0x1C16F20
	0x03B33118 RET
	0x03B3311C STP X30, X21, [X31 - 0x20]!
	0x03B33120 STP X20, X19, [X31 + 0x10]
	0x03B33124 ADRP X21, 0x8AF000
	0x03B33128 ADRP X20, 0x5C0000
	0x03B3312C LDRB W8, [X21 + 0x7EC]
	0x03B33130 LDR X20, [X20 + 0x598]
	0x03B33134 MOV X19, X0
	0x03B33138 TBNZ X8, 0x0, 0x3B33150
	0x03B3313C ADRP X0, 0x5C0000
	0x03B33140 LDR X0, [X0 + 0x598]
	0x03B33144 BL 0x1C16CF4
	0x03B33148 MOVZ W8, 0x1
	0x03B3314C STRB W8, [X21 + 0x7EC]
	0x03B33150 MOV X0, X19
	0x03B33154 MOV X1, X31
	0x03B33158 BL 0x3745260
	0x03B3315C LDR X8, [X20]
	0x03B33160 MOV X20, X0
	0x03B33164 LDR W9, [X8 + 0xE0]
	0x03B33168 CBNZ W9, 0x3B33174
	0x03B3316C MOV X0, X8
	0x03B33170 BL 0x1C16DFC
	0x03B33174 MOV X0, X20
	0x03B33178 MOV X1, X31
	0x03B3317C MOV X2, X31
	0x03B33180 BL 0x3C354F8
	0x03B33184 TBZ X0, 0x0, 0x3B331D0
	0x03B33188 MOV X0, X19
	0x03B3318C MOV X1, X31
	0x03B33190 BL 0x3745260
	0x03B33194 CBZ X0, 0x3B331E4
	0x03B33198 MOV X1, X31
	0x03B3319C BL 0x37451B4
	0x03B331A0 CBZ X0, 0x3B331D0
	0x03B331A4 MOV X0, X19
	0x03B331A8 MOV X1, X31
	0x03B331AC BL 0x3745260
	0x03B331B0 CBZ X0, 0x3B331E4
	0x03B331B4 MOV X1, X31
	0x03B331B8 BL 0x37451B4
	0x03B331BC CBZ X0, 0x3B331E4
	0x03B331C0 MOV X1, X31
	0x03B331C4 BL 0x373485C
	0x03B331C8 EOR W8, W0, 0x1
	0x03B331CC B 0x3B331D4
	0x03B331D0 MOV W8, W31
	0x03B331D4 LDP X20, X19, [X31 + 0x10]
	0x03B331D8 AND W0, W8, 0x1
	0x03B331DC LDP X30, X21, [X31], #0x20
	0x03B331E0 RET
	0x03B331E4 BL 0x1C16F20
	0x03B331E8 SUB X31, X31, 0x90

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x8B0000
	009 Move X22, 0x5C1000
	010 Move W8, [X23+2027]
	011 Move X22, [X22+2416]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x5C1000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2027], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move X8, [X19+16]
	036 Move V0, [X19]
	037 Add X0, X31, 32
	038 Move X1, X31
	039 Move [X31+48], X8
	040 Move [X31+2], V0
	041 Call InputActionPropertyExtensions.DisableDirectAction, X0
	042 Move X8, [X21+16]
	043 Move V0, [X21]
	044 Move [X19+16], X8
	045 Move [X19], V0
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call Application.get_isPlaying
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {71}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Behaviour.get_isActiveAndEnabled, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {71}
	064 Move X8, [X19+16]
	065 Move V0, [X19]
	066 Add X0, X31, 0
	067 Move X1, X31
	068 Move [X31+16], X8
	069 Move [X31], V0
	070 Call InputActionPropertyExtensions.EnableDirectAction, X0
	071 Move X20, [X31+96]
	072 Move X19, [X31+104]
	073 Move X22, [X31+80]
	074 Move X21, [X31+88]
	075 Move X30, [X31+64]
	076 Move X23, [X31+72]
	077 Add X31, X31, 112
	078 Return 

Method: System.Boolean IsDisabledReferenceAction(UnityEngine.InputSystem.InputActionProperty property)

Disassembly:
	0x03B3411C BL 0x1C16DFC
	0x03B34120 MOV X0, X20
	0x03B34124 MOV X1, X31
	0x03B34128 MOV X2, X31
	0x03B3412C BL 0x3C354F8
	0x03B34130 TBZ X0, 0x0, 0x3B34154
	0x03B34134 LDR X0, [X19 + 0x38]
	0x03B34138 CBZ X0, 0x3B34164
	0x03B3413C LDR X1, [X19 + 0x30]
	0x03B34140 LDP X20, X19, [X31 + 0x20]
	0x03B34144 LDP X22, X21, [X31 + 0x10]
	0x03B34148 MOV X2, X31
	0x03B3414C LDR X30, [X31], #0x30
	0x03B34150 B 0x3C3FD20
	0x03B34154 LDP X20, X19, [X31 + 0x20]
	0x03B34158 LDP X22, X21, [X31 + 0x10]
	0x03B3415C LDR X30, [X31], #0x30
	0x03B34160 RET
	0x03B34164 BL 0x1C16F20
	0x03B34168 LDR X0, [X0 + 0x38]
	0x03B3416C RET
	0x03B34170 STR X1, [X0 + 0x38]
	0x03B34174 RET
	0x03B34178 LDRB W0, [X0 + 0x40]
	0x03B3417C RET
	0x03B34180 AND W8, W1, 0x1
	0x03B34184 STRB W8, [X0 + 0x40]
	0x03B34188 RET
	0x03B3418C LDR X0, [X0 + 0x48]
	0x03B34190 RET
	0x03B34194 STR X1, [X0 + 0x48]
	0x03B34198 RET
	0x03B3419C LDR X0, [X0 + 0x50]
	0x03B341A0 RET
	0x03B341A4 STR X1, [X0 + 0x50]
	0x03B341A8 RET
	0x03B341AC LDRB W0, [X0 + 0x58]
	0x03B341B0 RET
	0x03B341B4 STR X30, [X31 - 0x30]!
	0x03B341B8 STP X22, X21, [X31 + 0x10]
	0x03B341BC STP X20, X19, [X31 + 0x20]
	0x03B341C0 ADRP X22, 0x8AE000
	0x03B341C4 ADRP X20, 0x5BF000
	0x03B341C8 LDRB W8, [X22 + 0x7EF]
	0x03B341CC LDR X20, [X20 + 0x598]
	0x03B341D0 MOV X19, X0
	0x03B341D4 AND W21, W1, 0x1
	0x03B341D8 TBNZ X8, 0x0, 0x3B341F0
	0x03B341DC ADRP X0, 0x5BF000
	0x03B341E0 LDR X0, [X0 + 0x598]
	0x03B341E4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8AF000
	006 Move X20, 0x5C0000
	007 Move W8, [X21+2028]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5C0000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2028], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call InputActionProperty.get_reference, X0
	022 Move X8, [X20]
	023 Move X20, X0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {58}
	037 Move X0, X19
	038 Move X1, X31
	039 Call InputActionProperty.get_reference, X0
	040 Compare X0, 0
	041 JumpIfEqual {65}
	042 Move X1, X31
	043 Call InputActionReference.get_action, X0
	044 Compare X0, 0
	045 JumpIfEqual {58}
	046 Move X0, X19
	047 Move X1, X31
	048 Call InputActionProperty.get_reference, X0
	049 Compare X0, 0
	050 JumpIfEqual {65}
	051 Move X1, X31
	052 Call InputActionReference.get_action, X0
	053 Compare X0, 0
	054 JumpIfEqual {65}
	055 Move X1, X31
	056 Call InputAction.get_enabled, X0
	057 Xor W8, W0, 1
	058 Move W8, W31
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 And W0, W8, 1
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Single get_buttonPressPoint()

Disassembly:
	0x03B34830 CBZ W8, 0x3B34858
	0x03B34834 LDR W8, [X19 + 0x20]

ISIL:
	001 Move V0, [X0+580]
	002 Return V0

Method: System.Void set_buttonPressPoint(System.Single value)

Disassembly:
	0x03B34838 ORR W8, W8, 0x2
	0x03B3483C CMP W8, 0x2

ISIL:
	001 Move [X0+580], S0
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B34840 B.NE 0x3B34858
	0x03B34844 LDR X8, [X19]
	0x03B34848 LDR X1, [X19 + 0x80]
	0x03B3484C MOV X0, X19
	0x03B34850 LDP X9, X2, [X8 + 0x1F8]
	0x03B34854 BLR X9
	0x03B34858 LDR X8, [X19]
	0x03B3485C LDR X2, [X19 + 0x80]
	0x03B34860 MOVZ W1, 0x3
	0x03B34864 MOV X0, X19
	0x03B34868 LDP X4, X3, [X8 + 0x1E8]
	0x03B3486C LDP X30, X19, [X31], #0x10
	0x03B34870 BR X4
	0x03B34874 STP X30, X19, [X31 - 0x10]!
	0x03B34878 LDRB W8, [X0 + 0x24]
	0x03B3487C MOV X19, X0
	0x03B34880 CBZ W8, 0x3B348A4
	0x03B34884 LDR W8, [X19 + 0x20]
	0x03B34888 CMP W8, 0x3
	0x03B3488C B.NE 0x3B348A4
	0x03B34890 LDR X8, [X19]
	0x03B34894 LDR X1, [X19 + 0x80]
	0x03B34898 MOV X0, X19
	0x03B3489C LDP X9, X2, [X8 + 0x1F8]
	0x03B348A0 BLR X9
	0x03B348A4 LDR X8, [X19]
	0x03B348A8 LDR X2, [X19 + 0x80]
	0x03B348AC MOV X0, X19
	0x03B348B0 MOV W1, W31
	0x03B348B4 LDP X4, X3, [X8 + 0x1E8]
	0x03B348B8 LDP X30, X19, [X31], #0x10
	0x03B348BC BR X4
	0x03B348C0 STR X30, [X31 - 0x20]!
	0x03B348C4 STP X20, X19, [X31 + 0x10]
	0x03B348C8 CBZ X2, 0x3B34938
	0x03B348CC MOV X19, X2
	0x03B348D0 MOV X20, X0
	0x03B348D4 CBZ W1, 0x3B34908
	0x03B348D8 CMP W1, 0x3
	0x03B348DC B.EQ 0x3B34908
	0x03B348E0 CMP W1, 0x1
	0x03B348E4 B.NE 0x3B34938
	0x03B348E8 LDUR X8, [X19 + 0x3C]
	0x03B348EC STUR X8, [X20 + 0x5C]
	0x03B348F0 LDUR X8, [X19 + 0x44]
	0x03B348F4 STUR X8, [X20 + 0x64]
	0x03B348F8 LDUR X8, [X19 + 0x4C]
	0x03B348FC STUR X8, [X20 + 0x6C]
	0x03B34900 LDUR X8, [X19 + 0x54]
	0x03B34904 STUR X8, [X20 + 0x74]
	0x03B34908 LDR W8, [X19 + 0x18]
	0x03B3490C TBZ X8, 0x0, 0x3B34934
	0x03B34910 MOV X0, X20
	0x03B34914 MOV X1, X31
	0x03B34918 BL 0x3C32E90
	0x03B3491C CBZ X0, 0x3B3496C
	0x03B34920 LDP S1, S2, [X19 + 0x24]
	0x03B34924 LDR V0, [X19 + 0x20]
	0x03B34928 MOV X1, X31
	0x03B3492C BL 0x3C3EC04
	0x03B34930 LDR W8, [X19 + 0x18]
	0x03B34934 TBNZ X8, 0x1, 0x3B34944
	0x03B34938 LDP X20, X19, [X31 + 0x10]
	0x03B3493C LDR X30, [X31], #0x20
	0x03B34940 RET
	0x03B34944 MOV X0, X20
	0x03B34948 MOV X1, X31
	0x03B3494C BL 0x3C32E90
	0x03B34950 CBZ X0, 0x3B3496C
	0x03B34954 LDP S2, S3, [X19 + 0x34]
	0x03B34958 LDP S0, S1, [X19 + 0x2C]
	0x03B3495C LDP X20, X19, [X31 + 0x10]
	0x03B34960 MOV X1, X31
	0x03B34964 LDR X30, [X31], #0x20
	0x03B34968 B 0x3C3F8B8
	0x03B3496C BL 0x1C16F20
	0x03B34970 STR X30, [X31 - 0x30]!
	0x03B34974 STP X22, X21, [X31 + 0x10]
	0x03B34978 STP X20, X19, [X31 + 0x20]
	0x03B3497C ADRP X20, 0x8AE000
	0x03B34980 LDRB W8, [X20 + 0x7F6]
	0x03B34984 MOV X19, X0
	0x03B34988 TBNZ X8, 0x0, 0x3B349C4
	0x03B3498C ADRP X0, 0x626000
	0x03B34990 LDR X0, [X0 + 0x70]
	0x03B34994 BL 0x1C16CF4
	0x03B34998 ADRP X0, 0x5BF000
	0x03B3499C LDR X0, [X0 + 0xA28]
	0x03B349A0 BL 0x1C16CF4
	0x03B349A4 ADRP X0, 0x5BF000
	0x03B349A8 LDR X0, [X0 + 0x598]
	0x03B349AC BL 0x1C16CF4
	0x03B349B0 ADRP X0, 0x626000
	0x03B349B4 LDR X0, [X0 + 0x78]
	0x03B349B8 BL 0x1C16CF4
	0x03B349BC MOVZ W8, 0x1
	0x03B349C0 STRB W8, [X20 + 0x7F6]
	0x03B349C4 LDRB W8, [X19 + 0x40]
	0x03B349C8 CBZ W8, 0x3B34B20
	0x03B349CC ADRP X22, 0x5BF000
	0x03B349D0 LDR X22, [X22 + 0x598]
	0x03B349D4 LDR X20, [X19 + 0x38]
	0x03B349D8 LDR X0, [X22]
	0x03B349DC LDR W8, [X0 + 0xE0]
	0x03B349E0 CBNZ W8, 0x3B349E8
	0x03B349E4 BL 0x1C16DFC
	0x03B349E8 MOV X0, X20
	0x03B349EC MOV X1, X31
	0x03B349F0 MOV X2, X31
	0x03B349F4 BL 0x3C354F8
	0x03B349F8 TBZ X0, 0x0, 0x3B34B20
	0x03B349FC MOV X20, X19
	0x03B34A00 LDR X21, [X20 + 0x90]!
	0x03B34A04 LDR X0, [X22]
	0x03B34A08 LDR W8, [X0 + 0xE0]
	0x03B34A0C CBNZ W8, 0x3B34A14
	0x03B34A10 BL 0x1C16DFC
	0x03B34A14 MOV X0, X21
	0x03B34A18 MOV X1, X31
	0x03B34A1C MOV X2, X31
	0x03B34A20 BL 0x3C3883C
	0x03B34A24 TBNZ X0, 0x0, 0x3B34A7C
	0x03B34A28 LDR X0, [X20]
	0x03B34A2C CBZ X0, 0x3B34B30
	0x03B34A30 MOV X1, X31
	0x03B34A34 BL 0x3C32ECC
	0x03B34A38 LDR X8, [X19 + 0x38]
	0x03B34A3C CBZ X8, 0x3B34B30
	0x03B34A40 MOV X21, X0
	0x03B34A44 MOV X0, X8
	0x03B34A48 MOV X1, X31
	0x03B34A4C BL 0x3C32ECC
	0x03B34A50 LDR X8, [X22]
	0x03B34A54 MOV X22, X0
	0x03B34A58 LDR W9, [X8 + 0xE0]
	0x03B34A5C CBNZ W9, 0x3B34A68
	0x03B34A60 MOV X0, X8
	0x03B34A64 BL 0x1C16DFC
	0x03B34A68 MOV X0, X21
	0x03B34A6C MOV X1, X22
	0x03B34A70 MOV X2, X31
	0x03B34A74 BL 0x3C354F8
	0x03B34A78 TBZ X0, 0x0, 0x3B34A9C
	0x03B34A7C LDR X0, [X19 + 0x38]
	0x03B34A80 CBZ X0, 0x3B34B30
	0x03B34A84 ADRP X8, 0x626000
	0x03B34A88 LDR X8, [X8 + 0x70]
	0x03B34A8C MOV X1, X20
	0x03B34A90 LDR X2, [X8]
	0x03B34A94 BL 0x21A4990
	0x03B34A98 TBZ X0, 0x0, 0x3B34AB4
	0x03B34A9C LDRB W8, [X19 + 0x61]
	0x03B34AA0 CBZ W8, 0x3B34AF8
	0x03B34AA4 LDR X0, [X20]
	0x03B34AA8 CBZ X0, 0x3B34B30
	0x03B34AAC LDR X1, [X19 + 0x48]
	0x03B34AB0 B 0x3B34B0C
	0x03B34AB4 LDRB W8, [X19 + 0x98]
	0x03B34AB8 CBNZ W8, 0x3B34B20
	0x03B34ABC ADRP X8, 0x5BF000
	0x03B34AC0 LDR X8, [X8 + 0xA28]
	0x03B34AC4 LDR X0, [X8]
	0x03B34AC8 LDR W8, [X0 + 0xE0]
	0x03B34ACC CBNZ W8, 0x3B34AD4
	0x03B34AD0 BL 0x1C16DFC
	0x03B34AD4 ADRP X8, 0x626000
	0x03B34AD8 LDR X8, [X8 + 0x78]
	0x03B34ADC MOV X1, X19
	0x03B34AE0 MOV X2, X31
	0x03B34AE4 LDR X0, [X8]
	0x03B34AE8 BL 0x3C06B0C
	0x03B34AEC MOVZ W8, 0x1
	0x03B34AF0 STRB W8, [X19 + 0x98]
	0x03B34AF4 B 0x3B34B20
	0x03B34AF8 LDRB W8, [X19 + 0x62]
	0x03B34AFC CBZ W8, 0x3B34B20
	0x03B34B00 LDR X0, [X20]
	0x03B34B04 CBZ X0, 0x3B34B30
	0x03B34B08 LDR X1, [X19 + 0x50]
	0x03B34B0C LDP X20, X19, [X31 + 0x20]
	0x03B34B10 LDP X22, X21, [X31 + 0x10]
	0x03B34B14 MOV X2, X31
	0x03B34B18 LDR X30, [X31], #0x30
	0x03B34B1C B 0x3BF6338
	0x03B34B20 LDP X20, X19, [X31 + 0x20]
	0x03B34B24 LDP X22, X21, [X31 + 0x10]
	0x03B34B28 LDR X30, [X31], #0x30
	0x03B34B2C RET
	0x03B34B30 BL 0x1C16F20
	0x03B34B34 MOV W0, W31
	0x03B34B38 RET
	0x03B34B3C STR X30, [X31 - 0x20]!
	0x03B34B40 STP X20, X19, [X31 + 0x10]
	0x03B34B44 MOV X19, X1
	0x03B34B48 MOV X20, X0
	0x03B34B4C BL 0x3B3429C
	0x03B34B50 LDR X8, [X20 + 0x80]
	0x03B34B54 MOV W0, W31
	0x03B34B58 STR X8, [X19]
	0x03B34B5C LDP X20, X19, [X31 + 0x10]
	0x03B34B60 LDR X30, [X31], #0x20
	0x03B34B64 RET
	0x03B34B68 STR X1, [X0 + 0x80]
	0x03B34B6C STRB W31, [X0 + 0x88]
	0x03B34B70 RET
	0x03B34B74 LDR X0, [X0 + 0x30]
	0x03B34B78 RET
	0x03B34B7C B 0x3B340CC
	0x03B34B80 LDR V0, [X0 + 0x9C]
	0x03B34B84 RET
	0x03B34B88 STR S0, [X0 + 0x9C]
	0x03B34B8C RET
	0x03B34B90 LDR V0, [X0 + 0xA0]
	0x03B34B94 RET
	0x03B34B98 STR S0, [X0 + 0xA0]
	0x03B34B9C RET
	0x03B34BA0 LDR W0, [X0 + 0xA4]
	0x03B34BA4 RET
	0x03B34BA8 STR W1, [X0 + 0xA4]
	0x03B34BAC RET
	0x03B34BB0 LDR W0, [X0 + 0xAC]
	0x03B34BB4 RET
	0x03B34BB8 STR W1, [X0 + 0xAC]
	0x03B34BBC RET
	0x03B34BC0 LDR W0, [X0 + 0xB0]
	0x03B34BC4 RET
	0x03B34BC8 STR W1, [X0 + 0xB0]
	0x03B34BCC RET
	0x03B34BD0 LDR W0, [X0 + 0xB4]
	0x03B34BD4 RET
	0x03B34BD8 STR W1, [X0 + 0xB4]
	0x03B34BDC RET
	0x03B34BE0 LDR V0, [X0 + 0xB8]
	0x03B34BE4 RET
	0x03B34BE8 STR S0, [X0 + 0xB8]
	0x03B34BEC RET
	0x03B34BF0 LDR W0, [X0 + 0xBC]
	0x03B34BF4 RET
	0x03B34BF8 STR W1, [X0 + 0xBC]
	0x03B34BFC RET
	0x03B34C00 LDR W0, [X0 + 0xC0]
	0x03B34C04 RET
	0x03B34C08 STR W1, [X0 + 0xC0]
	0x03B34C0C RET
	0x03B34C10 LDR W0, [X0 + 0xC4]
	0x03B34C14 RET
	0x03B34C18 STR W1, [X0 + 0xC4]
	0x03B34C1C RET
	0x03B34C20 LDR W0, [X0 + 0xC8]
	0x03B34C24 RET
	0x03B34C28 STR W1, [X0 + 0xC8]
	0x03B34C2C RET
	0x03B34C30 LDR W0, [X0 + 0xCC]
	0x03B34C34 RET
	0x03B34C38 STR W1, [X0 + 0xCC]
	0x03B34C3C RET
	0x03B34C40 LDR X0, [X0 + 0xD0]
	0x03B34C44 RET
	0x03B34C48 STR X1, [X0 + 0xD0]
	0x03B34C4C RET
	0x03B34C50 STP X30, X19, [X31 - 0x10]!
	0x03B34C54 MOV X19, X0
	0x03B34C58 LDP W0, W8, [X0 + 0xA4]
	0x03B34C5C CMP W8, W0
	0x03B34C60 B.NE 0x3B34C80
	0x03B34C64 ADD X0, X19, 0xD8
	0x03B34C68 MOV X1, X31
	0x03B34C6C BL 0x3E63D7C
	0x03B34C70 TBZ X0, 0x0, 0x3B34C7C
	0x03B34C74 LDP X0, X1, [X19 + 0xD8]
	0x03B34C78 B 0x3B34C94
	0x03B34C7C LDR W0, [X19 + 0xA4]
	0x03B34C80 MOV X1, X31
	0x03B34C84 BL 0x3E64C08
	0x03B34C88 LDR W8, [X19 + 0xA4]
	0x03B34C8C STP X0, X1, [X19 + 0xD8]
	0x03B34C90 STR W8, [X19 + 0xA8]
	0x03B34C94 LDP X30, X19, [X31], #0x10
	0x03B34C98 RET
	0x03B34C9C SUB X31, X31, 0xA0
	0x03B34CA0 STR X30, [X31 + 0x70]
	0x03B34CA4 STP X22, X21, [X31 + 0x80]
	0x03B34CA8 STP X20, X19, [X31 + 0x90]
	0x03B34CAC ADRP X21, 0x8AE000
	0x03B34CB0 LDRB W8, [X21 + 0x7F7]
	0x03B34CB4 MOV X19, X1
	0x03B34CB8 MOV X20, X0
	0x03B34CBC TBNZ X8, 0x0, 0x3B34CE0
	0x03B34CC0 ADRP X0, 0x5C4000
	0x03B34CC4 LDR X0, [X0 + 0x158]
	0x03B34CC8 BL 0x1C16CF4
	0x03B34CCC ADRP X0, 0x5BF000
	0x03B34CD0 LDR X0, [X0 + 0x598]
	0x03B34CD4 BL 0x1C16CF4
	0x03B34CD8 MOVZ W8, 0x1
	0x03B34CDC STRB W8, [X21 + 0x7F7]
	0x03B34CE0 STRB W31, [X31 + 0x7C]
	0x03B34CE4 STP X31, X31, [X31 + 0x40]
	0x03B34CE8 STR W31, [X31 + 0x58]
	0x03B34CEC STR X31, [X31 + 0x50]
	0x03B34CF0 STR W31, [X31 + 0x78]
	0x03B34CF4 STR W31, [X31 + 0x38]
	0x03B34CF8 STP X31, X31, [X31 + 0x28]
	0x03B34CFC STR X31, [X31 + 0x20]
	0x03B34D00 CBZ X19, 0x3B34ED8
	0x03B34D04 ADRP X22, 0x5C4000
	0x03B34D08 ADRP X21, 0x5BF000
	0x03B34D0C LDR X22, [X22 + 0x158]
	0x03B34D10 LDR X21, [X21 + 0x598]
	0x03B34D14 MOV X0, X20
	0x03B34D18 BL 0x3B34C50
	0x03B34D1C MOV X8, X0
	0x03B34D20 LDR X0, [X22]
	0x03B34D24 STP X8, X1, [X31 + 0x60]
	0x03B34D28 LDR W8, [X0 + 0xE0]
	0x03B34D2C CBNZ W8, 0x3B34D38
	0x03B34D30 BL 0x1C16DFC
	0x03B34D34 LDR X0, [X22]
	0x03B34D38 LDR X8, [X0 + 0xB8]
	0x03B34D3C ADD X0, X31, 0x60
	0x03B34D40 ADD X2, X31, 0x7C
	0x03B34D44 MOV X3, X31
	0x03B34D48 LDR X1, [X8]
	0x03B34D4C BL 0x3E641D0
	0x03B34D50 LDRB W8, [X31 + 0x7C]
	0x03B34D54 STR W31, [X19 + 0x18]
	0x03B34D58 AND W8, W0, W8, 0x0
	0x03B34D5C STRB W8, [X19 + 0x1C]
	0x03B34D60 LDR X0, [X21]
	0x03B34D64 LDR X21, [X20 + 0xD0]
	0x03B34D68 LDR W8, [X0 + 0xE0]
	0x03B34D6C CBNZ W8, 0x3B34D74
	0x03B34D70 BL 0x1C16DFC
	0x03B34D74 MOV X0, X21
	0x03B34D78 MOV X1, X31
	0x03B34D7C MOV X2, X31
	0x03B34D80 BL 0x3C354F8
	0x03B34D84 TBZ X0, 0x0, 0x3B34DEC
	0x03B34D88 LDR X0, [X20 + 0xD0]
	0x03B34D8C CBZ X0, 0x3B34EEC
	0x03B34D90 LDR X8, [X0]
	0x03B34D94 ADD X1, X31, 0x40
	0x03B34D98 LDP X9, X2, [X8 + 0x178]
	0x03B34D9C BLR X9
	0x03B34DA0 TBZ X0, 0x0, 0x3B34DC0
	0x03B34DA4 LDR W8, [X31 + 0x48]
	0x03B34DA8 LDR W10, [X19 + 0x18]
	0x03B34DAC LDR X9, [X31 + 0x40]
	0x03B34DB0 STR W8, [X19 + 0x28]
	0x03B34DB4 ORR W8, W10, 0x1
	0x03B34DB8 STR X9, [X19 + 0x20]
	0x03B34DBC STR W8, [X19 + 0x18]
	0x03B34DC0 TBZ X0, 0x1, 0x3B34ED8
	0x03B34DC4 LDR V0, [X31 + 0x4]
	0x03B34DC8 LDUR V1, [X31 + 0x4C]
	0x03B34DCC STR V0, [X31]
	0x03B34DD0 STUR V1, [X31 + 0xC]
	0x03B34DD4 LDR W8, [X19 + 0x18]
	0x03B34DD8 LDUR V0, [X31 + 0xC]
	0x03B34DDC ORR W8, W8, 0x2
	0x03B34DE0 STUR V0, [X19 + 0x2C]
	0x03B34DE4 STR W8, [X19 + 0x18]
	0x03B34DE8 B 0x3B34ED8
	0x03B34DEC MOV X0, X20
	0x03B34DF0 BL 0x3B34C50
	0x03B34DF4 MOV X8, X0
	0x03B34DF8 LDR X0, [X22]
	0x03B34DFC STP X8, X1, [X31 + 0x60]
	0x03B34E00 LDR W8, [X0 + 0xE0]
	0x03B34E04 CBNZ W8, 0x3B34E10
	0x03B34E08 BL 0x1C16DFC
	0x03B34E0C LDR X0, [X22]
	0x03B34E10 LDR X8, [X0 + 0xB8]
	0x03B34E14 ADD X0, X31, 0x60
	0x03B34E18 ADD X2, X31, 0x78
	0x03B34E1C MOV X3, X31
	0x03B34E20 LDR X1, [X8 + 0x68]
	0x03B34E24 BL 0x3E646F8
	0x03B34E28 TBZ X0, 0x0, 0x3B34ED8
	0x03B34E2C LDR W8, [X31 + 0x78]
	0x03B34E30 STR W8, [X19 + 0x18]
	0x03B34E34 TBZ X8, 0x0, 0x3B34E88
	0x03B34E38 MOV X0, X20
	0x03B34E3C BL 0x3B34C50
	0x03B34E40 MOV X8, X0
	0x03B34E44 LDR X0, [X22]
	0x03B34E48 STP X8, X1, [X31 + 0x60]
	0x03B34E4C LDR W8, [X0 + 0xE0]
	0x03B34E50 CBNZ W8, 0x3B34E5C
	0x03B34E54 BL 0x1C16DFC
	0x03B34E58 LDR X0, [X22]
	0x03B34E5C LDR X8, [X0 + 0xB8]
	0x03B34E60 ADD X0, X31, 0x60
	0x03B34E64 ADD X2, X31, 0x30
	0x03B34E68 MOV X3, X31
	0x03B34E6C LDR X1, [X8 + 0x98]
	0x03B34E70 BL 0x3E644E8
	0x03B34E74 TBZ X0, 0x0, 0x3B34E88
	0x03B34E78 LDR W8, [X31 + 0x38]
	0x03B34E7C LDR X9, [X31 + 0x30]
	0x03B34E80 STR W8, [X19 + 0x28]
	0x03B34E84 STR X9, [X19 + 0x20]
	0x03B34E88 LDRB W8, [X31 + 0x78]
	0x03B34E8C TBZ X8, 0x1, 0x3B34ED8
	0x03B34E90 MOV X0, X20
	0x03B34E94 BL 0x3B34C50
	0x03B34E98 MOV X8, X0
	0x03B34E9C LDR X0, [X22]
	0x03B34EA0 STP X8, X1, [X31 + 0x60]
	0x03B34EA4 LDR W8, [X0 + 0xE0]
	0x03B34EA8 CBNZ W8, 0x3B34EB4
	0x03B34EAC BL 0x1C16DFC
	0x03B34EB0 LDR X0, [X22]
	0x03B34EB4 LDR X8, [X0 + 0xB8]
	0x03B34EB8 ADD X0, X31, 0x60
	0x03B34EBC ADD X2, X31, 0x20
	0x03B34EC0 MOV X3, X31
	0x03B34EC4 LDR X1, [X8 + 0x160]
	0x03B34EC8 BL 0x3E645F0
	0x03B34ECC TBZ X0, 0x0, 0x3B34ED8
	0x03B34ED0 LDR V0, [X31 + 0x2]
	0x03B34ED4 STUR V0, [X19 + 0x2C]
	0x03B34ED8 LDP X20, X19, [X31 + 0x90]
	0x03B34EDC LDP X22, X21, [X31 + 0x80]
	0x03B34EE0 LDR X30, [X31 + 0x70]
	0x03B34EE4 ADD X31, X31, 0xA0
	0x03B34EE8 RET
	0x03B34EEC BL 0x1C16F20
	0x03B34EF0 CBZ X1, 0x3B35040
	0x03B34EF4 STP X30, X21, [X31 - 0x20]!
	0x03B34EF8 STP X20, X19, [X31 + 0x10]
	0x03B34EFC STURH W31, [X1 + 0x41]
	0x03B34F00 STURH W31, [X1 + 0x49]
	0x03B34F04 STURH W31, [X1 + 0x51]
	0x03B34F08 LDR X8, [X0]
	0x03B34F0C MOV X19, X1
	0x03B34F10 LDR W1, [X0 + 0xAC]
	0x03B34F14 MOV X20, X0
	0x03B34F18 LDR X9, [X8 + 0x258]
	0x03B34F1C LDR X2, [X8 + 0x260]
	0x03B34F20 BLR X9
	0x03B34F24 LDR X8, [X20]
	0x03B34F28 LDR W1, [X20 + 0xAC]
	0x03B34F2C MOV W21, W0
	0x03B34F30 MOV X0, X20
	0x03B34F34 LDR X9, [X8 + 0x268]
	0x03B34F38 LDR X2, [X8 + 0x270]
	0x03B34F3C BLR X9
	0x03B34F40 LDRB W8, [X19 + 0x40]
	0x03B34F44 AND W9, W21, 0x1
	0x03B34F48 STRB W9, [X19 + 0x40]
	0x03B34F4C EOR W9, W21, 0x1
	0x03B34F50 CMP W8, 0x0
	0x03B34F54 CSET W8, EQ
	0x03B34F58 CSET W10, NE
	0x03B34F5C AND W8, W21, W8, 0x0
	0x03B34F60 AND W9, W10, W9, 0x0
	0x03B34F64 STR S0, [X19 + 0x3C]
	0x03B34F68 STRB W8, [X19 + 0x41]
	0x03B34F6C STRB W9, [X19 + 0x42]
	0x03B34F70 LDR X8, [X20]
	0x03B34F74 LDR W1, [X20 + 0xB0]
	0x03B34F78 MOV X0, X20
	0x03B34F7C LDR X9, [X8 + 0x258]
	0x03B34F80 LDR X2, [X8 + 0x260]
	0x03B34F84 BLR X9
	0x03B34F88 LDR X8, [X20]
	0x03B34F8C LDR W1, [X20 + 0xB0]
	0x03B34F90 MOV W21, W0
	0x03B34F94 MOV X0, X20
	0x03B34F98 LDR X9, [X8 + 0x268]
	0x03B34F9C LDR X2, [X8 + 0x270]
	0x03B34FA0 BLR X9
	0x03B34FA4 LDRB W8, [X19 + 0x48]
	0x03B34FA8 AND W9, W21, 0x1
	0x03B34FAC STRB W9, [X19 + 0x48]
	0x03B34FB0 EOR W9, W21, 0x1
	0x03B34FB4 CMP W8, 0x0
	0x03B34FB8 CSET W8, EQ
	0x03B34FBC CSET W10, NE
	0x03B34FC0 AND W8, W21, W8, 0x0
	0x03B34FC4 AND W9, W10, W9, 0x0
	0x03B34FC8 STR S0, [X19 + 0x44]
	0x03B34FCC STRB W8, [X19 + 0x49]
	0x03B34FD0 STRB W9, [X19 + 0x4A]
	0x03B34FD4 LDR X8, [X20]
	0x03B34FD8 LDR W1, [X20 + 0xB4]
	0x03B34FDC MOV X0, X20
	0x03B34FE0 LDR X9, [X8 + 0x258]
	0x03B34FE4 LDR X2, [X8 + 0x260]
	0x03B34FE8 BLR X9
	0x03B34FEC LDR X8, [X20]
	0x03B34FF0 LDR W1, [X20 + 0xB4]
	0x03B34FF4 MOV W21, W0
	0x03B34FF8 MOV X0, X20
	0x03B34FFC LDR X9, [X8 + 0x268]
	0x03B35000 LDR X2, [X8 + 0x270]
	0x03B35004 BLR X9
	0x03B35008 LDRB W8, [X19 + 0x50]
	0x03B3500C EOR W9, W21, 0x1
	0x03B35010 AND W10, W21, 0x1
	0x03B35014 STR S0, [X19 + 0x4C]
	0x03B35018 CMP W8, 0x0
	0x03B3501C CSET W8, NE
	0x03B35020 CSET W11, EQ
	0x03B35024 AND W11, W21, W11, 0x0
	0x03B35028 AND W8, W8, W9, 0x0
	0x03B3502C STRB W11, [X19 + 0x51]
	0x03B35030 STRB W8, [X19 + 0x52]
	0x03B35034 STRB W10, [X19 + 0x50]
	0x03B35038 LDP X20, X19, [X31 + 0x10]
	0x03B3503C LDP X30, X21, [X31], #0x20
	0x03B35040 RET
	0x03B35044 SUB X31, X31, 0x40
	0x03B35048 STR D8, [X31 + 0x10]
	0x03B3504C STR X30, [X31 + 0x18]
	0x03B35050 STP X22, X21, [X31 + 0x20]
	0x03B35054 STP X20, X19, [X31 + 0x30]
	0x03B35058 ADRP X21, 0x8AD000
	0x03B3505C ADRP X22, 0x5C4000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 416
	014 Move X27, 0x8AF000
	015 Move X21, 0x5C4000
	016 Move X20, 0x5C4000
	017 Move X26, 0x615000
	018 Move X24, 0x5CC000
	019 Move X25, 0x615000
	020 Move X22, 0x626000
	021 Move X21, [X21+992]
	022 Move W8, [X27+2029]
	023 Move X20, [X20+1128]
	024 Move X26, [X26+1672]
	025 Move X24, [X24+184]
	026 Move X25, [X25+1432]
	027 Move X22, [X22+4080]
	028 Move X19, X0
	029 Add X23, X31, 176
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {105}
	034 Move X0, 0x5C4000
	035 Move X0, [X0+992]
	036 Call 0x1C17CF4
	037 Move X0, 0x626000
	038 Move X0, [X0+4088]
	039 Call 0x1C17CF4
	040 Move X0, 0x615000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move X0, 0x627000
	044 Move X0, [X0]
	045 Call 0x1C17CF4
	046 Move X0, 0x627000
	047 Move X0, [X0+8]
	048 Call 0x1C17CF4
	049 Move X0, 0x627000
	050 Move X0, [X0+16]
	051 Call 0x1C17CF4
	052 Move X0, 0x5C4000
	053 Move X0, [X0+1128]
	054 Call 0x1C17CF4
	055 Move X0, 0x627000
	056 Move X0, [X0+24]
	057 Call 0x1C17CF4
	058 Move X0, 0x627000
	059 Move X0, [X0+32]
	060 Call 0x1C17CF4
	061 Move X0, 0x627000
	062 Move X0, [X0+40]
	063 Call 0x1C17CF4
	064 Move X0, 0x615000
	065 Move X0, [X0+3552]
	066 Call 0x1C17CF4
	067 Move X0, 0x5CC000
	068 Move X0, [X0+184]
	069 Call 0x1C17CF4
	070 Move X0, 0x627000
	071 Move X0, [X0+48]
	072 Call 0x1C17CF4
	073 Move X0, 0x615000
	074 Move X0, [X0+1672]
	075 Call 0x1C17CF4
	076 Move X0, 0x627000
	077 Move X0, [X0+56]
	078 Call 0x1C17CF4
	079 Move X0, 0x627000
	080 Move X0, [X0+64]
	081 Call 0x1C17CF4
	082 Move X0, 0x614000
	083 Move X0, [X0+2048]
	084 Call 0x1C17CF4
	085 Move X0, 0x614000
	086 Move X0, [X0+2056]
	087 Call 0x1C17CF4
	088 Move X0, 0x627000
	089 Move X0, [X0+72]
	090 Call 0x1C17CF4
	091 Move X0, 0x5E8000
	092 Move X0, [X0+1304]
	093 Call 0x1C17CF4
	094 Move X0, 0x627000
	095 Move X0, [X0+80]
	096 Call 0x1C17CF4
	097 Move X0, 0x626000
	098 Move X0, [X0+4080]
	099 Call 0x1C17CF4
	100 Move X0, 0x627000
	101 Move X0, [X0+88]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X27+2029], W8
	105 Move X0, [X21]
	106 Call 0x1C17F10
	107 Move X1, [X20]
	108 Move X6, [X26]
	109 Move W2, W31
	110 Move X3, X31
	111 Move X4, X31
	112 Move X5, X31
	113 Move X7, X31
	114 Move X20, X0
	115 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	116 Add X0, X31, 392
	117 Move X1, X20
	118 Move X2, X31
	119 Move [X31+392], X31
	120 Move [X31+400], X31
	121 Move [X31+408], X31
	122 Call InputActionProperty..ctor, X0, X1
	123 Add X9, X31, 137
	124 Move X8, [X31+408]
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 Move [X19+184], X8
	127 Move [X19+168], V0
	128 Move X0, [X21]
	129 Call 0x1C17F10
	130 Move X1, [X24]
	131 Move X6, [X25]
	132 Move W2, W31
	133 Move X3, X31
	134 Move X4, X31
	135 Move X5, X31
	136 Move X7, X31
	137 Move X20, X0
	138 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	139 Add X0, X31, 368
	140 Move X1, X20
	141 Move X2, X31
	142 Move [X31+368], X31
	143 Move [X31+376], X31
	144 Move [X31+384], X31
	145 Call InputActionProperty..ctor, X0, X1
	146 Move X8, [X31+384]
	147 Move V0, [X23+12]
	148 Move [X19+208], X8
	149 Move [X19+12], V0
	150 Move X0, [X21]
	151 Call 0x1C17F10
	152 Move X1, [X22]
	153 Move W2, 1
	154 Move X3, X31
	155 Move X4, X31
	156 Move X5, X31
	157 Move X6, X31
	158 Move X7, X31
	159 Move X20, X0
	160 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	161 Compare X20, 0
	162 JumpIfEqual {553}
	163 Move X22, 0x615000
	164 Move X29, 0x614000
	165 Move X28, 0x627000
	166 Move X26, 0x627000
	167 Move X27, 0x5E8000
	168 Move X25, 0x627000
	169 Move X24, 0x614000
	170 Move X22, [X22+3552]
	171 Move X29, [X29+2056]
	172 Move X28, [X28]
	173 Move X26, [X26+16]
	174 Move X27, [X27+1304]
	175 Move X25, [X25+40]
	176 Move X24, [X24+2048]
	177 Move W1, 1
	178 Move X0, X20
	179 Move X2, X31
	180 Call InputAction.set_wantsInitialStateCheck, X0, X1
	181 Add X0, X31, 344
	182 Move X1, X20
	183 Move X2, X31
	184 Move [X31+344], X31
	185 Move [X31+352], X31
	186 Move [X31+360], X31
	187 Call InputActionProperty..ctor, X0, X1
	188 Add X9, X31, 89
	189 Move X8, [X31+360]
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 Move [X19+232], X8
	192 Move [X19+216], V0
	193 Move X0, [X21]
	194 Call 0x1C17F10
	195 Move X1, [X22]
	196 Move X6, [X29]
	197 Move W2, W31
	198 Move X3, X31
	199 Move X4, X31
	200 Move X5, X31
	201 Move X7, X31
	202 Move X20, X0
	203 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	204 Add X0, X31, 320
	205 Move X1, X20
	206 Move X2, X31
	207 Move [X31+320], X31
	208 Move [X31+328], X31
	209 Move [X31+336], X31
	210 Call InputActionProperty..ctor, X0, X1
	211 Move X8, [X31+336]
	212 Move V0, [X23+9]
	213 Move [X19+256], X8
	214 Move [X19+15], V0
	215 Move X0, [X21]
	216 Call 0x1C17F10
	217 Move X1, [X28]
	218 Move W2, 1
	219 Move X3, X31
	220 Move X4, X31
	221 Move X5, X31
	222 Move X6, X31
	223 Move X7, X31
	224 Move X20, X0
	225 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	226 Add X0, X31, 296
	227 Move X1, X20
	228 Move X2, X31
	229 Move [X31+296], X31
	230 Move [X31+304], X31
	231 Move [X31+312], X31
	232 Call InputActionProperty..ctor, X0, X1
	233 Add X9, X31, 41
	234 Move X8, [X31+312]
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 Add X9, X19, 264
	237 Move [X9+16], X8
	238 Move [X9], V0
	239 Move X0, [X21]
	240 Call 0x1C17F10
	241 Move X1, [X26]
	242 Move X6, [X27]
	243 Move W2, W31
	244 Move X3, X31
	245 Move X4, X31
	246 Move X5, X31
	247 Move X7, X31
	248 Move X20, X0
	249 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	250 Add X0, X31, 272
	251 Move X1, X20
	252 Move X2, X31
	253 Move [X31+272], X31
	254 Move [X31+280], X31
	255 Move [X31+288], X31
	256 Call InputActionProperty..ctor, X0, X1
	257 Move X8, [X31+288]
	258 Move V0, [X23+6]
	259 Move [X19+304], X8
	260 Move [X19+18], V0
	261 Move X0, [X21]
	262 Call 0x1C17F10
	263 Move X1, [X25]
	264 Move W2, 1
	265 Move X3, X31
	266 Move X4, X31
	267 Move X5, X31
	268 Move X6, X31
	269 Move X7, X31
	270 Move X20, X0
	271 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	272 Add X0, X31, 248
	273 Move X1, X20
	274 Move X2, X31
	275 Move [X31+248], X31
	276 Move [X31+256], X31
	277 Move [X31+264], X31
	278 Call InputActionProperty..ctor, X0, X1
	279 Move X8, [X31+264]
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 Add X9, X19, 312
	282 Move [X9+16], X8
	283 Move [X9], V0
	284 Move X0, [X21]
	285 Call 0x1C17F10
	286 Move X8, 0x627000
	287 Move X8, [X8+72]
	288 Move X6, [X27]
	289 Move W2, W31
	290 Move X3, X31
	291 Move X1, [X8]
	292 Move X4, X31
	293 Move X5, X31
	294 Move X7, X31
	295 Move X20, X0
	296 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	297 Add X0, X31, 224
	298 Move X1, X20
	299 Move X2, X31
	300 Move [X31+224], X31
	301 Move [X31+232], X31
	302 Move [X31+240], X31
	303 Call InputActionProperty..ctor, X0, X1
	304 Move X8, [X31+240]
	305 Move V0, [X23+3]
	306 Move [X19+352], X8
	307 Move [X19+21], V0
	308 Move X0, [X21]
	309 Call 0x1C17F10
	310 Move X8, 0x627000
	311 Move X8, [X8+80]
	312 Move W2, 1
	313 Move X3, X31
	314 Move X4, X31
	315 Move X1, [X8]
	316 Move X5, X31
	317 Move X6, X31
	318 Move X7, X31
	319 Move X20, X0
	320 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	321 Add X0, X31, 200
	322 Move X1, X20
	323 Move X2, X31
	324 Move [X31+200], X31
	325 Move [X31+208], X31
	326 Move [X31+216], X31
	327 Call InputActionProperty..ctor, X0, X1
	328 Move X8, [X31+216]
	329 NotImplemented "Instruction LDUR not yet implemented."
	330 Add X9, X19, 360
	331 Move [X9+16], X8
	332 Move [X9], V0
	333 Move X0, [X21]
	334 Call 0x1C17F10
	335 Move X8, 0x627000
	336 Move X8, [X8+64]
	337 Move X6, [X27]
	338 Move W2, W31
	339 Move X3, X31
	340 Move X1, [X8]
	341 Move X4, X31
	342 Move X5, X31
	343 Move X7, X31
	344 Move X20, X0
	345 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	346 Add X0, X31, 176
	347 Move X1, X20
	348 Move X2, X31
	349 Move [X31+176], X31
	350 Move [X31+184], X31
	351 Move [X31+192], X31
	352 Call InputActionProperty..ctor, X0, X1
	353 Move X8, [X31+192]
	354 Move V0, [X23]
	355 Move [X19+400], X8
	356 Move [X19+24], V0
	357 Move X0, [X21]
	358 Call 0x1C17F10
	359 Move X8, 0x627000
	360 Move X8, [X8+8]
	361 Move X6, [X24]
	362 Move W2, W31
	363 Move X3, X31
	364 Move X1, [X8]
	365 Move X4, X31
	366 Move X5, X31
	367 Move X7, X31
	368 Move X20, X0
	369 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	370 Add X0, X31, 152
	371 Move X1, X20
	372 Move X2, X31
	373 Move [X31+152], X31
	374 Move [X31+160], X31
	375 Move [X31+168], X31
	376 Call InputActionProperty..ctor, X0, X1
	377 Move X8, [X31+168]
	378 NotImplemented "Instruction LDUR not yet implemented."
	379 Add X9, X19, 408
	380 Move [X9+16], X8
	381 Move [X9], V0
	382 Move X0, [X21]
	383 Call 0x1C17F10
	384 Move X8, 0x627000
	385 Move X8, [X8+24]
	386 Move W2, 2
	387 Move X3, X31
	388 Move X4, X31
	389 Move X1, [X8]
	390 Move X5, X31
	391 Move X6, X31
	392 Move X7, X31
	393 Move X20, X0
	394 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	395 Add X0, X31, 128
	396 Move X1, X20
	397 Move X2, X31
	398 Move [X31+128], X31
	399 Move [X31+136], X31
	400 Move [X31+144], X31
	401 Call InputActionProperty..ctor, X0, X1
	402 Move X8, [X31+144]
	403 Move V0, [X31+8]
	404 Move [X19+448], X8
	405 Move [X19+27], V0
	406 Move X0, [X21]
	407 Call 0x1C17F10
	408 Move X8, 0x627000
	409 Move X8, [X8+88]
	410 Move X6, [X24]
	411 Move W2, W31
	412 Move X3, X31
	413 Move X1, [X8]
	414 Move X4, X31
	415 Move X5, X31
	416 Move X7, X31
	417 Move X20, X0
	418 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	419 Add X0, X31, 104
	420 Move X1, X20
	421 Move X2, X31
	422 Move [X31+104], X31
	423 Move [X31+112], X31
	424 Move [X31+120], X31
	425 Call InputActionProperty..ctor, X0, X1
	426 Move X8, [X31+120]
	427 NotImplemented "Instruction LDUR not yet implemented."
	428 Add X9, X19, 456
	429 Move [X9+16], X8
	430 Move [X9], V0
	431 Move X0, [X21]
	432 Call 0x1C17F10
	433 Move X8, 0x627000
	434 Move X8, [X8+32]
	435 Move X6, [X24]
	436 Move W2, W31
	437 Move X3, X31
	438 Move X1, [X8]
	439 Move X4, X31
	440 Move X5, X31
	441 Move X7, X31
	442 Move X20, X0
	443 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	444 Add X0, X31, 80
	445 Move X1, X20
	446 Move X2, X31
	447 Move [X31+80], X31
	448 Move [X31+88], X31
	449 Move [X31+96], X31
	450 Call InputActionProperty..ctor, X0, X1
	451 Move X8, [X31+96]
	452 Move V0, [X31+5]
	453 Move [X19+496], X8
	454 Move [X19+30], V0
	455 Move X0, [X21]
	456 Call 0x1C17F10
	457 Move X8, 0x627000
	458 Move X8, [X8+56]
	459 Move X6, [X24]
	460 Move W2, W31
	461 Move X3, X31
	462 Move X1, [X8]
	463 Move X4, X31
	464 Move X5, X31
	465 Move X7, X31
	466 Move X20, X0
	467 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	468 Add X0, X31, 56
	469 Move X1, X20
	470 Move X2, X31
	471 Move [X31+56], X31
	472 Move [X31+64], X31
	473 Move [X31+72], X31
	474 Call InputActionProperty..ctor, X0, X1
	475 Move X8, [X31+72]
	476 NotImplemented "Instruction LDUR not yet implemented."
	477 Add X9, X19, 504
	478 Move [X9+16], X8
	479 Move [X9], V0
	480 Move X0, [X21]
	481 Call 0x1C17F10
	482 Move X8, 0x627000
	483 Move X8, [X8+48]
	484 Move W2, 1
	485 Move X3, X31
	486 Move X4, X31
	487 Move X1, [X8]
	488 Move X5, X31
	489 Move X6, X31
	490 Move X7, X31
	491 Move X20, X0
	492 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	493 Add X0, X31, 32
	494 Move X1, X20
	495 Move X2, X31
	496 Move [X31+32], X31
	497 Move [X31+40], X31
	498 Move [X31+48], X31
	499 Call InputActionProperty..ctor, X0, X1
	500 Move X8, [X31+48]
	501 Move V0, [X31+2]
	502 Move [X19+544], X8
	503 Move [X19+33], V0
	504 Move X0, [X21]
	505 Call 0x1C17F10
	506 Move X8, 0x626000
	507 Move X8, [X8+4088]
	508 Move X6, [X24]
	509 Move W2, W31
	510 Move X3, X31
	511 Move X1, [X8]
	512 Move X4, X31
	513 Move X5, X31
	514 Move X7, X31
	515 Move X20, X0
	516 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	517 Add X0, X31, 8
	518 Move X1, X20
	519 Move X2, X31
	520 Move [X31+8], X31
	521 Move [X31+16], X31
	522 Move [X31+24], X31
	523 Call InputActionProperty..ctor, X0, X1
	524 Move X9, [X31+24]
	525 NotImplemented "Instruction LDUR not yet implemented."
	526 Add X8, X19, 552
	527 Move W10, 0x3F000000
	528 Move W11, 257
	529 Move [X8+16], X9
	530 Move [X8], V0
	531 Move W8, 1
	532 Move X0, X19
	533 Move X1, X31
	534 Move [X19+580], W10
	535 NotImplemented "Instruction STRH not yet implemented."
	536 Move [X19+136], W8
	537 Move [X19+153], W8
	538 Call MonoBehaviour..ctor, X0
	539 Add X31, X31, 416
	540 Move X20, [X31+80]
	541 Move X19, [X31+88]
	542 Move X22, [X31+64]
	543 Move X21, [X31+72]
	544 Move X24, [X31+48]
	545 Move X23, [X31+56]
	546 Move X26, [X31+32]
	547 Move X25, [X31+40]
	548 Move X28, [X31+16]
	549 Move X27, [X31+24]
	550 Move X29, [X31+96]
	551 Move X30, [X31+104]
	552 Return 
	553 Call 0x1C17F20

