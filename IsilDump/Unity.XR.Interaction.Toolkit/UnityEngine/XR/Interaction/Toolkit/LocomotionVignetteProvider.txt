Type: UnityEngine.XR.Interaction.Toolkit.LocomotionVignetteProvider

Method: UnityEngine.XR.Interaction.Toolkit.LocomotionProvider get_locomotionProvider()

Disassembly:
	0x03B84758 B 0x3B84824
	0x03B8475C B 0x3B84824

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_locomotionProvider(UnityEngine.XR.Interaction.Toolkit.LocomotionProvider value)

Disassembly:
	0x03B84760 B 0x3B8476C
	0x03B84764 B 0x3B847C0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Boolean get_enabled()

Disassembly:
	0x03B84768 B 0x3B84824
	0x03B8476C MOV X20, X0

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_enabled(System.Boolean value)

Disassembly:
	0x03B84770 CMP W1, 0x1
	0x03B84774 B.NE 0x3B8479C
	0x03B84778 MOV X0, X20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+24], W8
	003 Return 

Method: System.Boolean get_overrideDefaultParameters()

Disassembly:
	0x03B8477C BL 0x3EB1AD0
	0x03B84780 LDR X21, [X0]

ISIL:
	001 Move W0, [X0+25]
	002 Return X0

Method: System.Void set_overrideDefaultParameters(System.Boolean value)

Disassembly:
	0x03B84784 BL 0x3EB1AE0
	0x03B84788 LDR X1, [X22]
	0x03B8478C ADD X0, X31, 0x40

ISIL:
	001 And W8, W1, 1
	002 Move [X0+25], W8
	003 Return 

Method: UnityEngine.XR.Interaction.Toolkit.VignetteParameters get_overrideParameters()

Disassembly:
	0x03B84790 BL 0x2BC434C
	0x03B84794 CBZ X21, 0x3B84318

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_overrideParameters(UnityEngine.XR.Interaction.Toolkit.VignetteParameters value)

Disassembly:
	0x03B84798 B 0x3B84858
	0x03B8479C MOV X21, X31

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.VignetteParameters get_vignetteParameters()

Disassembly:
	0x03B847A0 B 0x3B847A8
	0x03B847A4 MOV X20, X0
	0x03B847A8 LDR X1, [X22]
	0x03B847AC ADD X0, X31, 0x40
	0x03B847B0 BL 0x2BC434C
	0x03B847B4 CBZ X21, 0x3B84884

ISIL:
	001 Move W8, [X0+25]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X0+32]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B847B8 MOV X0, X21
	0x03B847BC BL 0x1C16F18
	0x03B847C0 MOV X20, X0
	0x03B847C4 CMP W1, 0x1
	0x03B847C8 B.NE 0x3B847F8
	0x03B847CC MOV X0, X20
	0x03B847D0 BL 0x3EB1AD0
	0x03B847D4 LDR X21, [X0]
	0x03B847D8 BL 0x3EB1AE0
	0x03B847DC ADRP X8, 0x5D7000
	0x03B847E0 LDR X8, [X8 + 0xEC0]
	0x03B847E4 ADD X0, X31, 0x20
	0x03B847E8 LDR X1, [X8]
	0x03B847EC BL 0x2BC434C
	0x03B847F0 CBZ X21, 0x3B84634
	0x03B847F4 B 0x3B84858
	0x03B847F8 MOV X21, X31
	0x03B847FC B 0x3B84804
	0x03B84800 MOV X20, X0
	0x03B84804 ADRP X8, 0x5D7000
	0x03B84808 LDR X8, [X8 + 0xEC0]
	0x03B8480C LDR X1, [X8]
	0x03B84810 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x85F000
	006 Move X21, 0x5D8000
	007 Move W8, [X20+2790]
	008 Move X21, [X21+3768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5D8000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2790], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call VignetteParameters..ctor, X0
	023 Move [X19+32], X20
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

