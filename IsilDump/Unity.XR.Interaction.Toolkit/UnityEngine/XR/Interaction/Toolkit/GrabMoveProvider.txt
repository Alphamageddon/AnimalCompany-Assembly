Type: UnityEngine.XR.Interaction.Toolkit.GrabMoveProvider

Method: UnityEngine.Transform get_controllerTransform()

Disassembly:
	0x03B7EF98 FSUB S15, S13, S11
	0x03B7EF9C LDR V11, [X19 + 0xB4]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_controllerTransform(UnityEngine.Transform value)

Disassembly:
	0x03B7EFA0 LDP S2, S8, [X19 + 0x9C]
	0x03B7EFA4 LDRB W8, [X23 + 0xA24]

ISIL:
	001 Move [X0+104], X1

Method: System.Boolean get_enableMoveWhileSelecting()

Disassembly:
	0x03B7F088 BL 0x3EB1B80
	0x03B7F08C ADRP X8, 0xFFFFFFFFFCF6B000

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Void set_enableMoveWhileSelecting(System.Boolean value)

Disassembly:
	0x03B7F090 LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x03B7F098 FMUL S1, S0, S1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+112], W8
	003 Return 

Method: System.Single get_moveFactor()

Disassembly:
	0x03B7F09C FNEG S0, S1
	0x03B7F0A0 FCMP S14, 0x0

ISIL:
	001 Move V0, [X0+116]
	002 Return V0

Method: System.Void set_moveFactor(System.Single value)

Disassembly:
	0x03B7F0A4 ADRP X23, 0x859000
	0x03B7F0A8 FCSEL S0, S1, S0, GE

ISIL:
	001 Move [X0+116], S0
	002 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_grabMoveAction()

Disassembly:
	0x03B7F0AC LDR V1, [X31 + 0x1C]
	0x03B7F0B0 LDRB W8, [X23 + 0x786]
	0x03B7F0B4 FADD S14, S1, S0
	0x03B7F0B8 CBNZ W8, 0x3B7F0D0
	0x03B7F0BC ADRP X0, 0x574000

ISIL:
	001 Move X9, [X0+136]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_grabMoveAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B7F0C0 LDR X0, [X0 + 0x5A0]
	0x03B7F0C4 BL 0x1C16CF4
	0x03B7F0C8 MOVZ W8, 0x1
	0x03B7F0CC STRB W8, [X23 + 0x786]
	0x03B7F0D0 LDR X8, [X21]
	0x03B7F0D4 MOV V0.16B, V14.16B
	0x03B7F0D8 MOV X0, X31
	0x03B7F0DC LDR X8, [X8 + 0xB8]
	0x03B7F0E0 LDP S1, S2, [X8 + 0x18]
	0x03B7F0E4 LDR V3, [X8 + 0x20]
	0x03B7F0E8 BL 0x3C2A758
	0x03B7F0EC CBZ X20, 0x3B7F230

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 120
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call GrabMoveProvider.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: System.Boolean get_canMove()

Disassembly:
	0x03B7F1D8 BL 0x1C16CF4
	0x03B7F1DC MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Void set_canMove(System.Boolean value)

Disassembly:
	0x03B7F1E0 STRB W8, [X19 + 0x85B]
	0x03B7F1E4 CBZ X20, 0x3B7F230
	0x03B7F1E8 LDR X8, [X21]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+144], W8
	003 Return 

Method: System.Void Awake()

Disassembly:
	0x03B7F1EC MOV X0, X20
	0x03B7F1F0 LDP X20, X19, [X31 + 0x80]
	0x03B7F1F4 LDP X22, X21, [X31 + 0x70]
	0x03B7F1F8 LDR X8, [X8 + 0xB8]
	0x03B7F1FC LDP X30, X23, [X31 + 0x60]
	0x03B7F200 LDP D11, D10, [X31 + 0x40]
	0x03B7F204 LDP D13, D12, [X31 + 0x30]
	0x03B7F208 LDP S1, S0, [X8 + 0x10]
	0x03B7F20C LDR V3, [X8 + 0xC]
	0x03B7F210 LDP D15, D14, [X31 + 0x20]
	0x03B7F214 MOV X1, X31
	0x03B7F218 FMUL S2, S8, S0
	0x03B7F21C FMUL S1, S8, S1
	0x03B7F220 FMUL S0, S8, S3
	0x03B7F224 LDP D9, D8, [X31 + 0x50]
	0x03B7F228 ADD X31, X31, 0x90
	0x03B7F22C B 0x3C3FC4C
	0x03B7F230 BL 0x1C16F20
	0x03B7F234 ADRP X10, 0xFFFFFFFFFCF6F000
	0x03B7F238 LDR V0, [X10 + 0x198]
	0x03B7F23C MOVZ W8, 0x1
	0x03B7F240 MOVZ W9, 0x3F800000
	0x03B7F244 MOVZ W11, 0x101
	0x03B7F248 MOV X1, X31
	0x03B7F24C STRB W8, [X0 + 0x78]
	0x03B7F250 STR W9, [X0 + 0x7C]
	0x03B7F254 STRB W8, [X0 + 0x81]
	0x03B7F258 STRB W8, [X0 + 0x48]
	0x03B7F25C STUR D0, [X0 + 0x84]
	0x03B7F260 STRH W11, [X0 + 0x4A]
	0x03B7F264 B 0x3C36C30
	0x03B7F268 LDR X0, [X0 + 0x30]
	0x03B7F26C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x864000
	006 Move X20, 0x575000
	007 Move W8, [X21+2736]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x575000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2736], W8
	019 Move X0, X19
	020 Call LocomotionProvider.Awake, X0
	021 Move X0, [X20]
	022 Move X20, [X19+104]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {39}
	035 Move X0, X19
	036 Move X1, X31
	037 Call Component.get_transform, X0
	038 Move [X19+104], X0
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call GrabMoveProvider.GatherControllerInteractors, X0
	045 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03B7F270 STR X1, [X0 + 0x30]
	0x03B7F274 RET
	0x03B7F278 LDR W0, [X0 + 0x38]
	0x03B7F27C RET
	0x03B7F280 STR W1, [X0 + 0x38]
	0x03B7F284 RET
	0x03B7F288 STP X30, X21, [X31 - 0x20]!
	0x03B7F28C STP X20, X19, [X31 + 0x10]
	0x03B7F290 ADRP X21, 0x863000
	0x03B7F294 ADRP X20, 0x574000
	0x03B7F298 LDRB W8, [X21 + 0xAC4]
	0x03B7F29C LDR X20, [X20 + 0x598]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X0+136]
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Add X0, X31, 0
	006 Move X1, X31
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call InputActionPropertyExtensions.EnableDirectAction, X0
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03B7F2A0 MOV X19, X0
	0x03B7F2A4 TBNZ X8, 0x0, 0x3B7F2BC
	0x03B7F2A8 ADRP X0, 0x574000
	0x03B7F2AC LDR X0, [X0 + 0x598]
	0x03B7F2B0 BL 0x1C16CF4
	0x03B7F2B4 MOVZ W8, 0x1
	0x03B7F2B8 STRB W8, [X21 + 0xAC4]
	0x03B7F2BC LDR X0, [X20]
	0x03B7F2C0 LDR X19, [X19 + 0x20]
	0x03B7F2C4 LDR W8, [X0 + 0xE0]
	0x03B7F2C8 CBNZ W8, 0x3B7F2D0
	0x03B7F2CC BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X0+136]
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Add X0, X31, 0
	006 Move X1, X31
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call InputActionPropertyExtensions.DisableDirectAction, X0
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.Vector3 ComputeDesiredMove(out System.Boolean attemptingMove)

Disassembly:
	0x03B7F2D0 MOV X0, X19
	0x03B7F2D4 LDP X20, X19, [X31 + 0x10]
	0x03B7F2D8 MOV X1, X31
	0x03B7F2DC MOV X2, X31
	0x03B7F2E0 LDP X30, X21, [X31], #0x20
	0x03B7F2E4 B 0x3C354F8
	0x03B7F2E8 STR X30, [X31 - 0x30]!
	0x03B7F2EC STP X22, X21, [X31 + 0x10]
	0x03B7F2F0 STP X20, X19, [X31 + 0x20]
	0x03B7F2F4 ADRP X21, 0x863000
	0x03B7F2F8 ADRP X22, 0x574000
	0x03B7F2FC LDRB W8, [X21 + 0xAC7]
	0x03B7F300 LDR X22, [X22 + 0x598]
	0x03B7F304 MOV X19, X1
	0x03B7F308 MOV X20, X0
	0x03B7F30C TBNZ X8, 0x0, 0x3B7F324
	0x03B7F310 ADRP X0, 0x574000
	0x03B7F314 LDR X0, [X0 + 0x598]
	0x03B7F318 BL 0x1C16CF4
	0x03B7F31C MOVZ W8, 0x1
	0x03B7F320 STRB W8, [X21 + 0xAC7]
	0x03B7F324 LDR X0, [X22]
	0x03B7F328 LDR W8, [X0 + 0xE0]
	0x03B7F32C CBNZ W8, 0x3B7F334
	0x03B7F330 BL 0x1C16DFC
	0x03B7F334 MOV X0, X19
	0x03B7F338 MOV X1, X31
	0x03B7F33C MOV X2, X31
	0x03B7F340 BL 0x3C3883C
	0x03B7F344 TBZ X0, 0x0, 0x3B7F350
	0x03B7F348 MOVZ W0, 0x2
	0x03B7F34C B 0x3B7F3C0
	0x03B7F350 LDR X0, [X22]
	0x03B7F354 LDR X21, [X20 + 0x20]
	0x03B7F358 LDR W8, [X0 + 0xE0]
	0x03B7F35C CBNZ W8, 0x3B7F364
	0x03B7F360 BL 0x1C16DFC
	0x03B7F364 MOV X0, X21
	0x03B7F368 MOV X1, X31
	0x03B7F36C MOV X2, X31
	0x03B7F370 BL 0x3C3883C
	0x03B7F374 TBZ X0, 0x0, 0x3B7F390
	0x03B7F378 MOV X0, X31
	0x03B7F37C STR X19, [X20 + 0x20]
	0x03B7F380 BL 0x3C3C6C4
	0x03B7F384 MOV W0, W31
	0x03B7F388 STR S0, [X20 + 0x28]
	0x03B7F38C B 0x3B7F3C0
	0x03B7F390 LDR X0, [X22]
	0x03B7F394 LDR X20, [X20 + 0x20]
	0x03B7F398 LDR W8, [X0 + 0xE0]
	0x03B7F39C CBNZ W8, 0x3B7F3A4
	0x03B7F3A0 BL 0x1C16DFC
	0x03B7F3A4 MOV X0, X20
	0x03B7F3A8 MOV X1, X19
	0x03B7F3AC MOV X2, X31
	0x03B7F3B0 BL 0x3C354F8
	0x03B7F3B4 ANDS W31, W0, 0x1
	0x03B7F3B8 MOVZ W8, 0x1
	0x03B7F3BC CINC W0, W8, EQ
	0x03B7F3C0 LDP X20, X19, [X31 + 0x20]
	0x03B7F3C4 LDP X22, X21, [X31 + 0x10]
	0x03B7F3C8 LDR X30, [X31], #0x30
	0x03B7F3CC RET
	0x03B7F3D0 STR X30, [X31 - 0x30]!
	0x03B7F3D4 STP X22, X21, [X31 + 0x10]
	0x03B7F3D8 STP X20, X19, [X31 + 0x20]
	0x03B7F3DC ADRP X21, 0x863000
	0x03B7F3E0 ADRP X22, 0x574000
	0x03B7F3E4 LDRB W8, [X21 + 0xAC8]
	0x03B7F3E8 LDR X22, [X22 + 0x598]
	0x03B7F3EC MOV X20, X1
	0x03B7F3F0 MOV X19, X0
	0x03B7F3F4 TBNZ X8, 0x0, 0x3B7F40C
	0x03B7F3F8 ADRP X0, 0x574000
	0x03B7F3FC LDR X0, [X0 + 0x598]
	0x03B7F400 BL 0x1C16CF4
	0x03B7F404 MOVZ W8, 0x1
	0x03B7F408 STRB W8, [X21 + 0xAC8]
	0x03B7F40C LDR X0, [X22]
	0x03B7F410 LDR W8, [X0 + 0xE0]
	0x03B7F414 CBNZ W8, 0x3B7F41C
	0x03B7F418 BL 0x1C16DFC
	0x03B7F41C MOV X0, X20
	0x03B7F420 MOV X1, X31
	0x03B7F424 MOV X2, X31
	0x03B7F428 BL 0x3C3883C
	0x03B7F42C TBNZ X0, 0x0, 0x3B7F490
	0x03B7F430 LDR X0, [X22]
	0x03B7F434 LDR X21, [X19 + 0x20]
	0x03B7F438 LDR W8, [X0 + 0xE0]
	0x03B7F43C CBNZ W8, 0x3B7F444
	0x03B7F440 BL 0x1C16DFC
	0x03B7F444 MOV X0, X21
	0x03B7F448 MOV X1, X31
	0x03B7F44C MOV X2, X31
	0x03B7F450 BL 0x3C3883C
	0x03B7F454 TBNZ X0, 0x0, 0x3B7F490

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x864000
	010 Move W8, [X21+2737]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x575000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2737], W8
	022 Move [X20], W31
	023 Move X8, [X19+48]
	024 Compare X8, 0
	025 JumpIfEqual {124}
	026 Move X8, [X8+48]
	027 Compare X8, 0
	028 JumpIfEqual {30}
	029 Move X21, [X8+56]
	030 Move X21, X31
	031 Move W8, [X19+144]
	032 Move W22, [X19+145]
	033 Compare W8, 0
	034 JumpIfEqual {52}
	035 Move X0, X19
	036 Call GrabMoveProvider.IsGrabbing, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {52}
	041 Move X8, 0x575000
	042 Move X8, [X8+1432]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Inequality, X0, X1
	052 Move W0, W31
	053 And W8, W0, 1
	054 Move [X19+145], W8
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {99}
	059 Move X0, [X19+104]
	060 Compare X0, 0
	061 JumpIfEqual {124}
	062 Move X1, X31
	063 Call Transform.get_localPosition, X0
	064 Move V10, V0
	065 Move V9, V1
	066 Move V8, V2
	067 Compare W22, 0
	068 JumpIfEqual {93}
	069 Move W8, 1
	070 Move [X20], W8
	071 Compare X21, 0
	072 JumpIfEqual {124}
	073 Move X0, X21
	074 Move X1, X31
	075 Call GameObject.get_transform, X0
	076 Compare X0, 0
	077 JumpIfEqual {124}
	078 Move S1, [X19+152]
	079 Move S0, [X19+156]
	080 Move V3, [X19+148]
	081 Move X1, X31
	082 Subtract S2, S0, S8
	083 Subtract S1, S1, S9
	084 Subtract S0, S3, S10
	085 Call Transform.TransformVector, X0, X1
	086 Move V3, [X19+116]
	087 Move [X19+148], S10
	088 Move [X19+156], S9
	089 Move [X19+156], S8
	090 Multiply S0, S0, S3
	091 Multiply S1, S1, S3
	092 Multiply S2, S2, S3
	093 Move W8, [X19+145]
	094 Compare W8, 0
	095 JumpIfEqual {69}
	096 Move [X19+148], S10
	097 Move [X19+156], S9
	098 Move [X19+156], S8
	099 Move X19, 0x85A000
	100 Move W8, [X19+1923]
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0x575000
	104 Move X0, [X0+1440]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X19+1923], W8
	108 Move X8, 0x575000
	109 Move X8, [X8+1440]
	110 Move X8, [X8]
	111 Move X8, [X8+184]
	112 Move S0, [X8]
	113 Move S1, [X8+4]
	114 Move V2, [X8+8]
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X30, [X31+24]
	120 Move D9, [X31+8]
	121 Move D8, [X31+16]
	122 Move V10, [X31+64]
	123 Return X0
	124 Call 0x1C17F20

Method: System.Boolean IsGrabbing()

Disassembly:
	0x03B7F458 LDR X0, [X22]
	0x03B7F45C LDR X21, [X19 + 0x20]
	0x03B7F460 LDR W8, [X0 + 0xE0]
	0x03B7F464 CBNZ W8, 0x3B7F46C
	0x03B7F468 BL 0x1C16DFC
	0x03B7F46C MOV X0, X21
	0x03B7F470 MOV X1, X20
	0x03B7F474 MOV X2, X31
	0x03B7F478 BL 0x3C3883C
	0x03B7F47C TBZ X0, 0x0, 0x3B7F490
	0x03B7F480 MOV W0, W31
	0x03B7F484 STR X31, [X19 + 0x20]
	0x03B7F488 STR W31, [X19 + 0x28]
	0x03B7F48C B 0x3B7F494
	0x03B7F490 MOVZ W0, 0x2
	0x03B7F494 LDP X20, X19, [X31 + 0x20]
	0x03B7F498 LDP X22, X21, [X31 + 0x10]
	0x03B7F49C LDR X30, [X31], #0x30
	0x03B7F4A0 RET
	0x03B7F4A4 STR X30, [X31 - 0x40]!
	0x03B7F4A8 STP X24, X23, [X31 + 0x10]
	0x03B7F4AC STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 120
	005 Move X1, X31
	006 Call InputActionProperty.get_action, X0
	007 Compare X0, 0
	008 JumpIfEqual {27}
	009 Move X1, X31
	010 Call InputAction.IsPressed, X0
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {19}
	015 Move W8, [X19+112]
	016 Compare W8, 0
	017 JumpIfEqual {20}
	018 Move W8, 1
	019 Move W8, W31
	020 Move X0, X19
	021 Call GrabMoveProvider.ControllerHasSelection, X0
	022 Xor W8, W0, 1
	023 And W0, W8, 1
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void GatherControllerInteractors()

Disassembly:
	0x03B7EFA8 LDP S5, S10, [X19 + 0xA4]
	0x03B7EFAC STR S13, [X31 + 0x4]
	0x03B7EFB0 FMOV S13, W31
	0x03B7EFB4 FMUL S12, S9, S0
	0x03B7EFB8 FMUL S14, S1, S13
	0x03B7EFBC STR S2, [X31 + 0x1C]
	0x03B7EFC0 CBNZ W8, 0x3B7EFE0
	0x03B7EFC4 ADRP X0, 0x575000
	0x03B7EFC8 LDR X0, [X0 + 0x5A8]
	0x03B7EFCC STR S5, [X31]
	0x03B7EFD0 BL 0x1C16CF4
	0x03B7EFD4 LDR V5, [X31]
	0x03B7EFD8 MOVZ W8, 0x1
	0x03B7EFDC STRB W8, [X23 + 0xA24]
	0x03B7EFE0 LDR X0, [X22]
	0x03B7EFE4 FMUL S0, S8, S8
	0x03B7EFE8 FMUL S1, S5, S5
	0x03B7EFEC FADD S0, S0, S1
	0x03B7EFF0 FMUL S1, S10, S10
	0x03B7EFF4 LDR W8, [X0 + 0xE0]
	0x03B7EFF8 FADD S14, S12, S14
	0x03B7EFFC FADD S12, S1, S0
	0x03B7F000 FMUL S0, S9, S9
	0x03B7F004 FADD S0, S0, S13
	0x03B7F008 FMUL S1, S15, S15
	0x03B7F00C FMUL S11, S15, S11
	0x03B7F010 FADD S13, S1, S0
	0x03B7F014 CBNZ W8, 0x3B7F024
	0x03B7F018 STR S5, [X31]
	0x03B7F01C BL 0x1C16DFC
	0x03B7F020 LDR V5, [X31]
	0x03B7F024 ADRP X8, 0xFFFFFFFFFCF6A000
	0x03B7F028 LDR V1, [X8 + 0xFE8]
	0x03B7F02C FMUL S0, S13, S12
	0x03B7F030 FSQRT S0, S0
	0x03B7F034 FADD S14, S11, S14
	0x03B7F038 FCMP S0, S1
	0x03B7F03C FMOV S1, W31
	0x03B7F040 B.MI 0x3B7F09C
	0x03B7F044 LDR X0, [X22]
	0x03B7F048 FMOV S2, W31
	0x03B7F04C FMUL S1, S9, S8
	0x03B7F050 FMUL S2, S5, S2
	0x03B7F054 FMUL S3, S15, S10
	0x03B7F058 FADD S1, S1, S2
	0x03B7F05C FADD S1, S3, S1
	0x03B7F060 LDR W8, [X0 + 0xE0]
	0x03B7F064 FMOV S4, 1
	0x03B7F068 FDIV S0, S1, S0
	0x03B7F06C FMOV S2, -1
	0x03B7F070 FMIN S1, S0, S4
	0x03B7F074 FCMP S0, S2
	0x03B7F078 FCSEL S8, S1, S2, PL
	0x03B7F07C CBNZ W8, 0x3B7F084
	0x03B7F080 BL 0x1C16DFC
	0x03B7F084 FCVT S0, S8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x865000
	005 Move W8, [X20+2738]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x5DE000
	012 Move X0, [X0+3528]
	013 Call 0x1C17CF4
	014 Move X0, 0x5DE000
	015 Move X0, [X0+3376]
	016 Call 0x1C17CF4
	017 Move X0, 0x576000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2738], W8
	022 Move X8, [X19+160]
	023 Compare X8, 0
	024 JumpIfEqual {71}
	025 Move W2, [X8+24]
	026 Move W9, [X8+28]
	027 Move X20, 0x576000
	028 Move X20, [X20+1432]
	029 Add W9, W9, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X8+24], W31
	032 Move [X8+28], W9
	033 Move X0, [X8+16]
	034 Move W1, W31
	035 Move X3, X31
	036 Call Array.Clear, X0, X1, X2
	037 Move X0, [X20]
	038 Move X20, [X19+104]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {67}
	051 Move X0, [X19+104]
	052 Compare X0, 0
	053 JumpIfEqual {71}
	054 Move X1, X31
	055 Call Component.get_transform, X0
	056 Compare X0, 0
	057 JumpIfEqual {71}
	058 Move X8, 0x5DD000
	059 Move X1, [X19+160]
	060 Move X8, [X8+3528]
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X2, [X8]
	064 Move X30, [X31+32]
	065 Call 0x21A5608, X0, X1
	066 Return 
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Return 
	071 Call 0x1C17F20

Method: System.Boolean ControllerHasSelection()

Disassembly:
	0x03B7F4B0 STP X20, X19, [X31 + 0x30]
	0x03B7F4B4 ADRP X21, 0x863000
	0x03B7F4B8 LDRB W8, [X21 + 0xAC2]
	0x03B7F4BC MOV X19, X1
	0x03B7F4C0 MOV X20, X0
	0x03B7F4C4 TBNZ X8, 0x0, 0x3B7F4DC
	0x03B7F4C8 ADRP X0, 0x5DC000
	0x03B7F4CC LDR X0, [X0 + 0xC78]
	0x03B7F4D0 BL 0x1C16CF4
	0x03B7F4D4 MOVZ W8, 0x1
	0x03B7F4D8 STRB W8, [X21 + 0xAC2]
	0x03B7F4DC ADRP X24, 0x5DC000
	0x03B7F4E0 LDR X21, [X20 + 0x40]!
	0x03B7F4E4 LDR X24, [X24 + 0xC78]
	0x03B7F4E8 MOV X0, X21
	0x03B7F4EC MOV X1, X19
	0x03B7F4F0 MOV X2, X31
	0x03B7F4F4 BL 0x33C0DE4
	0x03B7F4F8 CBZ X0, 0x3B7F518
	0x03B7F4FC LDR X23, [X24]
	0x03B7F500 MOV X22, X0
	0x03B7F504 MOV X1, X23
	0x03B7F508 BL 0x1C16E00
	0x03B7F50C MOV X1, X0
	0x03B7F510 CBNZ X0, 0x3B7F51C
	0x03B7F514 B 0x3B7F548
	0x03B7F518 MOV X1, X31
	0x03B7F51C MOV X0, X20
	0x03B7F520 MOV X2, X21
	0x03B7F524 BL 0x1C24138
	0x03B7F528 CMP X21, X0
	0x03B7F52C MOV X21, X0
	0x03B7F530 B.NE 0x3B7F4E8
	0x03B7F534 LDP X20, X19, [X31 + 0x30]
	0x03B7F538 LDP X22, X21, [X31 + 0x20]
	0x03B7F53C LDP X24, X23, [X31 + 0x10]
	0x03B7F540 LDR X30, [X31], #0x40
	0x03B7F544 RET
	0x03B7F548 MOV X0, X22
	0x03B7F54C MOV X1, X23
	0x03B7F550 BL 0x1C171E0
	0x03B7F554 STR X30, [X31 - 0x40]!
	0x03B7F558 STP X24, X23, [X31 + 0x10]
	0x03B7F55C STP X22, X21, [X31 + 0x20]
	0x03B7F560 STP X20, X19, [X31 + 0x30]
	0x03B7F564 ADRP X21, 0x863000
	0x03B7F568 LDRB W8, [X21 + 0xAC3]
	0x03B7F56C MOV X19, X1
	0x03B7F570 MOV X20, X0
	0x03B7F574 TBNZ X8, 0x0, 0x3B7F58C
	0x03B7F578 ADRP X0, 0x5DC000
	0x03B7F57C LDR X0, [X0 + 0xC78]
	0x03B7F580 BL 0x1C16CF4
	0x03B7F584 MOVZ W8, 0x1
	0x03B7F588 STRB W8, [X21 + 0xAC3]
	0x03B7F58C ADRP X24, 0x5DC000
	0x03B7F590 LDR X21, [X20 + 0x40]!
	0x03B7F594 LDR X24, [X24 + 0xC78]
	0x03B7F598 MOV X0, X21
	0x03B7F59C MOV X1, X19
	0x03B7F5A0 MOV X2, X31
	0x03B7F5A4 BL 0x33C0FDC
	0x03B7F5A8 CBZ X0, 0x3B7F5C8
	0x03B7F5AC LDR X23, [X24]
	0x03B7F5B0 MOV X22, X0
	0x03B7F5B4 MOV X1, X23
	0x03B7F5B8 BL 0x1C16E00
	0x03B7F5BC MOV X1, X0
	0x03B7F5C0 CBNZ X0, 0x3B7F5CC
	0x03B7F5C4 B 0x3B7F5F8
	0x03B7F5C8 MOV X1, X31
	0x03B7F5CC MOV X0, X20
	0x03B7F5D0 MOV X2, X21
	0x03B7F5D4 BL 0x1C24138
	0x03B7F5D8 CMP X21, X0
	0x03B7F5DC MOV X21, X0
	0x03B7F5E0 B.NE 0x3B7F598
	0x03B7F5E4 LDP X20, X19, [X31 + 0x30]
	0x03B7F5E8 LDP X22, X21, [X31 + 0x20]
	0x03B7F5EC LDP X24, X23, [X31 + 0x10]
	0x03B7F5F0 LDR X30, [X31], #0x40
	0x03B7F5F4 RET
	0x03B7F5F8 MOV X0, X22
	0x03B7F5FC MOV X1, X23
	0x03B7F600 BL 0x1C171E0
	0x03B7F604 LDR V0, [X0 + 0x2C]
	0x03B7F608 RET
	0x03B7F60C STR S0, [X0 + 0x2C]
	0x03B7F610 RET
	0x03B7F614 LDR X0, [X0 + 0x30]
	0x03B7F618 RET
	0x03B7F61C STR X1, [X0 + 0x30]
	0x03B7F620 RET
	0x03B7F624 STR X30, [X31 - 0x30]!
	0x03B7F628 STP X22, X21, [X31 + 0x10]
	0x03B7F62C STP X20, X19, [X31 + 0x20]
	0x03B7F630 ADRP X19, 0x863000
	0x03B7F634 ADRP X22, 0x574000
	0x03B7F638 LDRB W8, [X19 + 0xAC5]
	0x03B7F63C LDR X22, [X22 + 0x598]
	0x03B7F640 MOV X20, X0
	0x03B7F644 TBNZ X8, 0x0, 0x3B7F674
	0x03B7F648 ADRP X0, 0x5DB000
	0x03B7F64C LDR X0, [X0 + 0x978]
	0x03B7F650 BL 0x1C16CF4
	0x03B7F654 ADRP X0, 0x5DB000
	0x03B7F658 LDR X0, [X0 + 0xD00]
	0x03B7F65C BL 0x1C16CF4
	0x03B7F660 ADRP X0, 0x574000
	0x03B7F664 LDR X0, [X0 + 0x598]
	0x03B7F668 BL 0x1C16CF4
	0x03B7F66C MOVZ W8, 0x1
	0x03B7F670 STRB W8, [X19 + 0xAC5]
	0x03B7F674 MOV X19, X20
	0x03B7F678 LDR X21, [X19 + 0x30]!
	0x03B7F67C LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x864000
	009 Move W8, [X20+2739]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x5DD000
	016 Move X0, [X0+3536]
	017 Call 0x1C17CF4
	018 Move X0, 0x5DD000
	019 Move X0, [X0+3544]
	020 Call 0x1C17CF4
	021 Move X0, 0x5DD000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0x5DC000
	025 Move X0, [X0+808]
	026 Call 0x1C17CF4
	027 Move X0, 0x5DD000
	028 Move X0, [X0+3560]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2739], W8
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move X0, [X19+160]
	036 Compare X0, 0
	037 JumpIfEqual {103}
	038 Move X8, 0x5DD000
	039 Move X8, [X8+3560]
	040 Move X22, 0x5DD000
	041 Move X23, 0x5DC000
	042 Move X21, 0x5DD000
	043 Move X1, [X8]
	044 Move X22, [X22+3544]
	045 Move X23, [X23+808]
	046 Move X21, [X21+3536]
	047 Add X8, X31, 8
	048 Call List`1<Object>.GetEnumerator, X0
	049 Move X1, [X22]
	050 Add X0, X31, 8
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move W19, W0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {87}
	057 Move X20, [X31+24]
	058 Compare X20, 0
	059 JumpIfEqual {102}
	060 Move X8, [X20]
	061 Move X1, [X23]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 4
	072 Move X0, X20
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 4
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X20
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {49}
	086 Move W20, 4
	087 Move W20, 5
	088 Move X1, [X21]
	089 Add X0, X31, 8
	090 Call Enumerator<Object>.Dispose, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 And W0, W19, W8
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X30, [X31+32]
	099 Move X23, [X31+40]
	100 Add X31, X31, 80
	101 Return X0
	102 Call 0x1C17F20
	103 Call 0x1C17F20
	104 Move X19, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X19
	107 Call 0x3EB2AD0
	108 Move X20, [X0]
	109 Call 0x3EB2AE0
	110 Move X1, [X21]
	111 Add X0, X31, 8
	112 Call Enumerator<Object>.Dispose, X0
	113 Compare X20, 0
	114 JumpIfNotEqual {117}
	115 Move W19, W31
	116 Move X20, X31
	117 Move X0, X20
	118 Call 0x1C17F18
	119 Move X19, X0
	120 Move X1, [X21]
	121 Add X0, X31, 8
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X20, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X19
	126 Call 0x1D2D690
	127 Move X0, X20
	128 Call 0x1C17F18
	129 Call 0x1991590

Method: System.Void SetInputActionProperty(ref UnityEngine.InputSystem.InputActionProperty property, UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B7F0F0 MOV X0, X20
	0x03B7F0F4 MOV X1, X31
	0x03B7F0F8 BL 0x3C3F7AC
	0x03B7F0FC LDP S9, S8, [X31 + 0x14]
	0x03B7F100 LDP S10, S11, [X31 + 0xC]
	0x03B7F104 LDP S13, S12, [X31 + 0x4]
	0x03B7F108 LDRB W8, [X19 + 0x82]
	0x03B7F10C CBZ W8, 0x3B7F180
	0x03B7F110 ADRP X23, 0x859000
	0x03B7F114 LDRB W8, [X23 + 0x85C]
	0x03B7F118 CBNZ W8, 0x3B7F130
	0x03B7F11C ADRP X0, 0x574000
	0x03B7F120 LDR X0, [X0 + 0x5A8]
	0x03B7F124 BL 0x1C16CF4
	0x03B7F128 MOVZ W8, 0x1
	0x03B7F12C STRB W8, [X23 + 0x85C]
	0x03B7F130 LDR X0, [X22]
	0x03B7F134 FSUB S10, S8, S10
	0x03B7F138 FSUB S9, S9, S12
	0x03B7F13C FSUB S8, S11, S13
	0x03B7F140 LDR W8, [X0 + 0xE0]
	0x03B7F144 CBNZ W8, 0x3B7F14C
	0x03B7F148 BL 0x1C16DFC
	0x03B7F14C FMUL S0, S10, S10
	0x03B7F150 FMUL S1, S9, S9
	0x03B7F154 FADD S0, S0, S1
	0x03B7F158 FMUL S1, S8, S8
	0x03B7F15C FADD S0, S1, S0
	0x03B7F160 FSQRT S0, S0
	0x03B7F164 FCMP S0, 0x0
	0x03B7F168 B.NE 0x3B7F1A4
	0x03B7F16C CBZ X20, 0x3B7F230
	0x03B7F170 MOV X0, X20
	0x03B7F174 MOV X1, X31
	0x03B7F178 BL 0x3C3FBAC
	0x03B7F17C B 0x3B7F1B0
	0x03B7F180 LDP X20, X19, [X31 + 0x80]
	0x03B7F184 LDP X22, X21, [X31 + 0x70]
	0x03B7F188 LDP X30, X23, [X31 + 0x60]
	0x03B7F18C LDP D9, D8, [X31 + 0x50]
	0x03B7F190 LDP D11, D10, [X31 + 0x40]
	0x03B7F194 LDP D13, D12, [X31 + 0x30]
	0x03B7F198 LDP D15, D14, [X31 + 0x20]
	0x03B7F19C ADD X31, X31, 0x90
	0x03B7F1A0 RET
	0x03B7F1A4 LDP S2, S1, [X19 + 0xB8]
	0x03B7F1A8 FDIV S0, S1, S0
	0x03B7F1AC FMUL S0, S2, S0
	0x03B7F1B0 LDP S2, S1, [X19 + 0x84]
	0x03B7F1B4 ADRP X19, 0x859000
	0x03B7F1B8 LDRB W8, [X19 + 0x85B]
	0x03B7F1BC FCMP S0, S1
	0x03B7F1C0 FCSEL S1, S1, S0, GT
	0x03B7F1C4 FCMP S0, S2
	0x03B7F1C8 FCSEL S8, S1, S2, PL
	0x03B7F1CC CBNZ W8, 0x3B7F1E4
	0x03B7F1D0 ADRP X0, 0x574000
	0x03B7F1D4 LDR X0, [X0 + 0x5A0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x864000
	009 Move X22, 0x575000
	010 Move W8, [X23+2740]
	011 Move X22, [X22+2416]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x575000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2740], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move X8, [X19+16]
	036 Move V0, [X19]
	037 Add X0, X31, 32
	038 Move X1, X31
	039 Move [X31+48], X8
	040 Move [X31+2], V0
	041 Call InputActionPropertyExtensions.DisableDirectAction, X0
	042 Move X8, [X21+16]
	043 Move V0, [X21]
	044 Move [X19+16], X8
	045 Move [X19], V0
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call Application.get_isPlaying
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {71}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Behaviour.get_isActiveAndEnabled, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {71}
	064 Move X8, [X19+16]
	065 Move V0, [X19]
	066 Add X0, X31, 0
	067 Move X1, X31
	068 Move [X31+16], X8
	069 Move [X31], V0
	070 Call InputActionPropertyExtensions.EnableDirectAction, X0
	071 Move X20, [X31+96]
	072 Move X19, [X31+104]
	073 Move X22, [X31+80]
	074 Move X21, [X31+88]
	075 Move X30, [X31+64]
	076 Move X23, [X31+72]
	077 Add X31, X31, 112
	078 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B7F680 LDR W8, [X0 + 0xE0]
	0x03B7F684 CBNZ W8, 0x3B7F68C
	0x03B7F688 BL 0x1C16DFC
	0x03B7F68C MOV X0, X21
	0x03B7F690 MOV X1, X31
	0x03B7F694 MOV X2, X31
	0x03B7F698 BL 0x3C3883C
	0x03B7F69C TBZ X0, 0x0, 0x3B7F700
	0x03B7F6A0 ADRP X8, 0x5DB000
	0x03B7F6A4 LDR X8, [X8 + 0xD00]
	0x03B7F6A8 MOV X0, X20
	0x03B7F6AC LDR X1, [X8]
	0x03B7F6B0 BL 0x21A3F50
	0x03B7F6B4 STR X0, [X20 + 0x30]
	0x03B7F6B8 MOV X21, X0
	0x03B7F6BC LDR X0, [X22]
	0x03B7F6C0 LDR W8, [X0 + 0xE0]
	0x03B7F6C4 CBNZ W8, 0x3B7F6CC
	0x03B7F6C8 BL 0x1C16DFC
	0x03B7F6CC MOV X0, X21
	0x03B7F6D0 MOV X1, X31
	0x03B7F6D4 MOV X2, X31
	0x03B7F6D8 BL 0x3C3883C
	0x03B7F6DC TBZ X0, 0x0, 0x3B7F700
	0x03B7F6E0 ADRP X8, 0x5DB000
	0x03B7F6E4 LDR X8, [X8 + 0x978]
	0x03B7F6E8 MOV X0, X19
	0x03B7F6EC LDP X20, X19, [X31 + 0x20]
	0x03B7F6F0 LDP X22, X21, [X31 + 0x10]
	0x03B7F6F4 LDR X1, [X8]
	0x03B7F6F8 LDR X30, [X31], #0x30
	0x03B7F6FC B 0x295FA30
	0x03B7F700 LDP X20, X19, [X31 + 0x20]
	0x03B7F704 LDP X22, X21, [X31 + 0x10]
	0x03B7F708 LDR X30, [X31], #0x30
	0x03B7F70C RET
	0x03B7F710 STP X30, X21, [X31 - 0x20]!
	0x03B7F714 STP X20, X19, [X31 + 0x10]
	0x03B7F718 ADRP X21, 0x863000
	0x03B7F71C ADRP X20, 0x574000
	0x03B7F720 LDRB W8, [X21 + 0xAC6]
	0x03B7F724 LDR X20, [X20 + 0x598]
	0x03B7F728 MOV X19, X0
	0x03B7F72C TBNZ X8, 0x0, 0x3B7F744
	0x03B7F730 ADRP X0, 0x574000
	0x03B7F734 LDR X0, [X0 + 0x598]
	0x03B7F738 BL 0x1C16CF4
	0x03B7F73C MOVZ W8, 0x1
	0x03B7F740 STRB W8, [X21 + 0xAC6]
	0x03B7F744 LDR X0, [X20]
	0x03B7F748 LDR X20, [X19 + 0x20]
	0x03B7F74C LDR W8, [X0 + 0xE0]
	0x03B7F750 CBNZ W8, 0x3B7F758
	0x03B7F754 BL 0x1C16DFC
	0x03B7F758 MOV X0, X20
	0x03B7F75C MOV X1, X31
	0x03B7F760 MOV X2, X31
	0x03B7F764 BL 0x3C354F8
	0x03B7F768 TBZ X0, 0x0, 0x3B7F78C
	0x03B7F76C MOV X0, X31
	0x03B7F770 BL 0x3C3C6C4
	0x03B7F774 LDP S1, S2, [X19 + 0x28]
	0x03B7F778 FADD S1, S1, S2
	0x03B7F77C FCMP S0, S1
	0x03B7F780 B.LE 0x3B7F78C
	0x03B7F784 STR X31, [X19 + 0x20]
	0x03B7F788 STR W31, [X19 + 0x28]
	0x03B7F78C LDP X20, X19, [X31 + 0x10]
	0x03B7F790 LDP X30, X21, [X31], #0x20
	0x03B7F794 RET
	0x03B7F798 STR X31, [X0 + 0x20]
	0x03B7F79C STR W31, [X0 + 0x28]
	0x03B7F7A0 RET
	0x03B7F7A4 STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x864000
	010 Move X23, 0x579000
	011 Move X20, 0x5DD000
	012 Move X22, 0x5DC000
	013 Move X21, 0x5DD000
	014 Move W8, [X24+2741]
	015 Move X23, [X23+992]
	016 Move X20, [X20+3568]
	017 Move X22, [X22+632]
	018 Move X21, [X21+3392]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x579000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0x5DD000
	028 Move X0, [X0+3392]
	029 Call 0x1C17CF4
	030 Move X0, 0x5DC000
	031 Move X0, [X0+632]
	032 Call 0x1C17CF4
	033 Move X0, 0x5DD000
	034 Move X0, [X0+3568]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2741], W8
	038 Move W8, 0x3F800000
	039 Move [X19+116], W8
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X1, [X20]
	043 Move W2, 1
	044 Move X3, X31
	045 Move X4, X31
	046 Move X5, X31
	047 Move X6, X31
	048 Move X7, X31
	049 Move X20, X0
	050 Move W23, 1
	051 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	052 Add X0, X31, 8
	053 Move X1, X20
	054 Move X2, X31
	055 Move [X31+8], X31
	056 Move [X31+16], X31
	057 Move [X31+24], X31
	058 Call InputActionProperty..ctor, X0, X1
	059 Move X8, [X31+24]
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move [X19+144], W23
	062 Move [X19+136], X8
	063 Move [X19+120], V0
	064 Move X0, [X22]
	065 Call 0x1C17F10
	066 Move X1, [X21]
	067 Move X20, X0
	068 Call List`1<Object>..ctor, X0
	069 Move W8, 257
	070 Move X0, X19
	071 Move X1, X31
	072 Move [X19+160], X20
	073 Move [X19+72], W23
	074 NotImplemented "Instruction STRH not yet implemented."
	075 Call MonoBehaviour..ctor, X0
	076 Move X20, [X31+80]
	077 Move X19, [X31+88]
	078 Move X22, [X31+64]
	079 Move X21, [X31+72]
	080 Move X24, [X31+48]
	081 Move X23, [X31+56]
	082 Move X30, [X31+32]
	083 Add X31, X31, 96
	084 Return 

