Type: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousTurnProvider

Method: UnityEngine.InputSystem.InputActionProperty get_leftHandTurnAction()

Disassembly:
	0x03B7D2D4 LDR X0, [X0 + 0x4B8]
	0x03B7D2D8 BL 0x1C16CF4
	0x03B7D2DC MOVZ W8, 0x1
	0x03B7D2E0 STRB W8, [X20 + 0x5AA]
	0x03B7D2E4 ADRP X8, 0x57D000

ISIL:
	001 Move X9, [X0+96]
	002 Move V0, [X0+5]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_leftHandTurnAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B7D2E8 LDR X8, [X8 + 0x4B8]
	0x03B7D2EC ADRP X9, 0xFFFFFFFFFCF6D000
	0x03B7D2F0 LDR V0, [X9 + 0x240]
	0x03B7D2F4 FABS S1, S8
	0x03B7D2F8 LDR X8, [X8]
	0x03B7D2FC FMOV S2, W31
	0x03B7D300 FMAXNM S1, S1, S2
	0x03B7D304 FMUL S0, S1, S0
	0x03B7D308 LDR X8, [X8 + 0xB8]
	0x03B7D30C FMOV S1, 8
	0x03B7D310 LDR V3, [X8]
	0x03B7D314 FMUL S1, S3, S1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 80
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedContinuousTurnProvider.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_rightHandTurnAction()

Disassembly:
	0x03B7D400 LDR X8, [X8 + 0xF08]
	0x03B7D404 FMOV S10, W31
	0x03B7D408 LDR X8, [X8]
	0x03B7D40C LDR X8, [X8 + 0xB8]
	0x03B7D410 LDP S0, S1, [X8]

ISIL:
	001 Move X9, [X0+120]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_rightHandTurnAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B7D414 ADRP X8, 0xFFFFFFFFFCF6C000
	0x03B7D418 LDR V2, [X8 + 0xF20]
	0x03B7D41C FSUB S0, S8, S0
	0x03B7D420 FSUB S1, S9, S1
	0x03B7D424 FMUL S0, S0, S0
	0x03B7D428 FMUL S1, S1, S1
	0x03B7D42C FADD S0, S0, S1
	0x03B7D430 FCMP S0, S2
	0x03B7D434 B.MI 0x3B7D4BC
	0x03B7D438 MOV V0.16B, V8.16B
	0x03B7D43C MOV V1.16B, V9.16B
	0x03B7D440 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 104
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedContinuousTurnProvider.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03B7D444 BL 0x3BB9548
	0x03B7D448 AND W8, W0, 0xFFFFFFFE
	0x03B7D44C CMP W8, 0x2
	0x03B7D450 B.NE 0x3B7D4BC
	0x03B7D454 ADRP X20, 0x85C000
	0x03B7D458 LDRB W8, [X20 + 0x818]
	0x03B7D45C CBNZ W8, 0x3B7D474
	0x03B7D460 ADRP X0, 0x576000
	0x03B7D464 LDR X0, [X0 + 0x5A8]
	0x03B7D468 BL 0x1C16CF4
	0x03B7D46C MOVZ W8, 0x1
	0x03B7D470 STRB W8, [X20 + 0x818]
	0x03B7D474 ADRP X8, 0x576000
	0x03B7D478 LDR X8, [X8 + 0x5A8]
	0x03B7D47C LDR X0, [X8]
	0x03B7D480 LDR W8, [X0 + 0xE0]
	0x03B7D484 CBNZ W8, 0x3B7D48C
	0x03B7D488 BL 0x1C16DFC
	0x03B7D48C LDR V10, [X19 + 0x48]
	0x03B7D490 FMUL S0, S8, S8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X8, [X0+96]
	005 Move V0, [X0+5]
	006 Move X19, X0
	007 Add X0, X31, 32
	008 Move X1, X31
	009 Move [X31+48], X8
	010 Move [X31+2], V0
	011 Call InputActionPropertyExtensions.EnableDirectAction, X0
	012 Move X8, [X19+120]
	013 NotImplemented "Instruction LDUR not yet implemented."
	014 Add X0, X31, 0
	015 Move X1, X31
	016 Move [X31+16], X8
	017 Move [X31], V0
	018 Call InputActionPropertyExtensions.EnableDirectAction, X0
	019 Move X30, [X31+64]
	020 Move X19, [X31+72]
	021 Add X31, X31, 80
	022 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03B7D494 FMUL S1, S9, S9
	0x03B7D498 FADD S0, S0, S1
	0x03B7D49C MOV X0, X31
	0x03B7D4A0 FSQRT S9, S0
	0x03B7D4A4 BL 0x3C3C714
	0x03B7D4A8 FNEG S1, S10
	0x03B7D4AC FCMP S8, 0x0
	0x03B7D4B0 FCSEL S1, S10, S1, GE
	0x03B7D4B4 FMUL S0, S1, S0
	0x03B7D4B8 FMUL S10, S9, S0
	0x03B7D4BC LDP X20, X19, [X31 + 0x20]
	0x03B7D4C0 LDR X30, [X31 + 0x18]
	0x03B7D4C4 LDP D9, D8, [X31 + 0x8]
	0x03B7D4C8 MOV V0.16B, V10.16B
	0x03B7D4CC LDR V10, [X31], #0x30
	0x03B7D4D0 RET
	0x03B7D4D4 LDR W0, [X0 + 0x78]
	0x03B7D4D8 RET
	0x03B7D4DC STR W1, [X0 + 0x78]
	0x03B7D4E0 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X8, [X0+96]
	005 Move V0, [X0+5]
	006 Move X19, X0
	007 Add X0, X31, 32
	008 Move X1, X31
	009 Move [X31+48], X8
	010 Move [X31+2], V0
	011 Call InputActionPropertyExtensions.DisableDirectAction, X0
	012 Move X8, [X19+120]
	013 NotImplemented "Instruction LDUR not yet implemented."
	014 Add X0, X31, 0
	015 Move X1, X31
	016 Move [X31+16], X8
	017 Move [X31], V0
	018 Call InputActionPropertyExtensions.DisableDirectAction, X0
	019 Move X30, [X31+64]
	020 Move X19, [X31+72]
	021 Add X31, X31, 80
	022 Return 

Method: UnityEngine.Vector2 ReadInput()

Disassembly:
	0x03B7D4E4 LDR X0, [X0 + 0x80]
	0x03B7D4E8 RET
	0x03B7D4EC STR X1, [X0 + 0x80]
	0x03B7D4F0 RET
	0x03B7D4F4 LDR V0, [X0 + 0x88]
	0x03B7D4F8 RET
	0x03B7D4FC STR S0, [X0 + 0x88]
	0x03B7D500 RET
	0x03B7D504 LDR V0, [X0 + 0x8C]
	0x03B7D508 RET
	0x03B7D50C STR S0, [X0 + 0x8C]
	0x03B7D510 RET
	0x03B7D514 SUB X31, X31, 0x70
	0x03B7D518 STP D9, D8, [X31 + 0x20]
	0x03B7D51C STP X30, X25, [X31 + 0x30]
	0x03B7D520 STP X24, X23, [X31 + 0x40]
	0x03B7D524 STP X22, X21, [X31 + 0x50]
	0x03B7D528 STP X20, X19, [X31 + 0x60]
	0x03B7D52C ADRP X20, 0x865000
	0x03B7D530 LDRB W8, [X20 + 0xAAA]
	0x03B7D534 MOV X19, X0
	0x03B7D538 TBNZ X8, 0x0, 0x3B7D580
	0x03B7D53C ADRP X0, 0x5DE000
	0x03B7D540 LDR X0, [X0 + 0xD90]
	0x03B7D544 BL 0x1C16CF4
	0x03B7D548 ADRP X0, 0x5DE000
	0x03B7D54C LDR X0, [X0 + 0xD98]
	0x03B7D550 BL 0x1C16CF4
	0x03B7D554 ADRP X0, 0x5DE000
	0x03B7D558 LDR X0, [X0 + 0xDA0]
	0x03B7D55C BL 0x1C16CF4
	0x03B7D560 ADRP X0, 0x576000
	0x03B7D564 LDR X0, [X0 + 0x598]
	0x03B7D568 BL 0x1C16CF4
	0x03B7D56C ADRP X0, 0x5DE000
	0x03B7D570 LDR X0, [X0 + 0x2B0]
	0x03B7D574 BL 0x1C16CF4
	0x03B7D578 MOVZ W8, 0x1
	0x03B7D57C STRB W8, [X20 + 0xAAA]
	0x03B7D580 STP X31, X31, [X31 + 0x10]
	0x03B7D584 STR X31, [X31 + 0x8]
	0x03B7D588 LDR X8, [X19 + 0x80]
	0x03B7D58C CBZ X8, 0x3B7D6F8
	0x03B7D590 ADRP X21, 0x85C000
	0x03B7D594 LDRB W9, [X21 + 0x78F]
	0x03B7D598 LDR W20, [X8 + 0x18]
	0x03B7D59C CBNZ W9, 0x3B7D5B4
	0x03B7D5A0 ADRP X0, 0x57E000
	0x03B7D5A4 LDR X0, [X0 + 0xF08]
	0x03B7D5A8 BL 0x1C16CF4
	0x03B7D5AC MOVZ W8, 0x1
	0x03B7D5B0 STRB W8, [X21 + 0x78F]
	0x03B7D5B4 ADRP X8, 0x57E000
	0x03B7D5B8 LDR X8, [X8 + 0xF08]
	0x03B7D5BC LDR X8, [X8]
	0x03B7D5C0 LDR X8, [X8 + 0xB8]
	0x03B7D5C4 LDP S8, S9, [X8]
	0x03B7D5C8 CBZ W20, 0x3B7D6FC
	0x03B7D5CC ADRP X20, 0x5DE000
	0x03B7D5D0 LDR X20, [X20 + 0xD90]
	0x03B7D5D4 LDR X0, [X20]
	0x03B7D5D8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x866000
	008 Move W8, [X20+2722]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x59F000
	015 Move X0, [X0+960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2722], W8
	019 Move X20, 0x59F000
	020 Move X20, [X20+960]
	021 Add X0, X19, 80
	022 Move X1, X31
	023 Call InputActionProperty.get_action, X0
	024 Compare X0, 0
	025 JumpIfEqual {30}
	026 Move X1, [X20]
	027 Call InputAction.ReadValue, X0
	028 Move V8, V0
	029 Move V9, V1
	030 Move X21, 0x85D000
	031 Move W8, [X21+1935]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x57F000
	035 Move X0, [X0+3848]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1935], W8
	039 Move X8, 0x57F000
	040 Move X8, [X8+3848]
	041 Move X8, [X8]
	042 Move X8, [X8+184]
	043 Move S8, [X8]
	044 Move S9, [X8+4]
	045 Add X0, X19, 104
	046 Move X1, X31
	047 Call InputActionProperty.get_action, X0
	048 Compare X0, 0
	049 JumpIfEqual {52}
	050 Move X1, [X20]
	051 Call InputAction.ReadValue, X0
	052 Move X19, 0x85D000
	053 Move W8, [X19+1935]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x57F000
	057 Move X0, [X0+3848]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X19+1935], W8
	061 Move X8, 0x57F000
	062 Move X8, [X8+3848]
	063 Move X8, [X8]
	064 Move X8, [X8+184]
	065 Move S0, [X8]
	066 Move S1, [X8+4]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Add S0, S8, S0
	072 Add S1, S9, S1
	073 Move D9, [X31+48]
	074 Move D8, [X31+56]
	075 Return X0

Method: System.Void SetInputActionProperty(ref UnityEngine.InputSystem.InputActionProperty property, UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B7D318 FCMP S0, S1
	0x03B7D31C FCSEL S0, S0, S1, GT
	0x03B7D320 FABD S1, S2, S2
	0x03B7D324 FCMP S1, S0
	0x03B7D328 B.MI 0x3B7D3AC
	0x03B7D32C MOV X0, X19
	0x03B7D330 BL 0x3B7BDB4
	0x03B7D334 TBZ X0, 0x0, 0x3B7D3AC
	0x03B7D338 MOV X0, X19
	0x03B7D33C BL 0x3B7B060
	0x03B7D340 TBZ X0, 0x0, 0x3B7D3AC
	0x03B7D344 LDR X8, [X19 + 0x30]
	0x03B7D348 CBZ X8, 0x3B7D3BC
	0x03B7D34C ADRP X9, 0x576000
	0x03B7D350 LDR X9, [X9 + 0x598]
	0x03B7D354 LDR X20, [X8 + 0x30]
	0x03B7D358 LDR X0, [X9]
	0x03B7D35C LDR W9, [X0 + 0xE0]
	0x03B7D360 CBNZ W9, 0x3B7D368
	0x03B7D364 BL 0x1C16DFC
	0x03B7D368 MOV X0, X20
	0x03B7D36C MOV X1, X31
	0x03B7D370 MOV X2, X31
	0x03B7D374 BL 0x3C354F8
	0x03B7D378 TBZ X0, 0x0, 0x3B7D398
	0x03B7D37C MOVZ W8, 0x1
	0x03B7D380 STRB W8, [X19 + 0x4C]
	0x03B7D384 CBZ X20, 0x3B7D3BC
	0x03B7D388 MOV X0, X20
	0x03B7D38C MOV V0.16B, V8.16B
	0x03B7D390 MOV X1, X31
	0x03B7D394 BL 0x3B2FA64
	0x03B7D398 MOV X0, X19
	0x03B7D39C LDP X20, X19, [X31 + 0x10]
	0x03B7D3A0 LDR X30, [X31 + 0x8]
	0x03B7D3A4 LDR V8, [X31], #0x20
	0x03B7D3A8 B 0x3B7B484
	0x03B7D3AC LDP X20, X19, [X31 + 0x10]
	0x03B7D3B0 LDR X30, [X31 + 0x8]
	0x03B7D3B4 LDR V8, [X31], #0x20
	0x03B7D3B8 RET
	0x03B7D3BC BL 0x1C16F20
	0x03B7D3C0 STR D10, [X31 - 0x30]!
	0x03B7D3C4 STP D9, D8, [X31 + 0x8]
	0x03B7D3C8 STR X30, [X31 + 0x18]
	0x03B7D3CC STP X20, X19, [X31 + 0x20]
	0x03B7D3D0 ADRP X20, 0x85C000
	0x03B7D3D4 LDRB W8, [X20 + 0x78F]
	0x03B7D3D8 MOV V9.16B, V1.16B
	0x03B7D3DC MOV V8.16B, V0.16B
	0x03B7D3E0 MOV X19, X0
	0x03B7D3E4 CBNZ W8, 0x3B7D3FC
	0x03B7D3E8 ADRP X0, 0x57E000
	0x03B7D3EC LDR X0, [X0 + 0xF08]
	0x03B7D3F0 BL 0x1C16CF4
	0x03B7D3F4 MOVZ W8, 0x1
	0x03B7D3F8 STRB W8, [X20 + 0x78F]
	0x03B7D3FC ADRP X8, 0x57E000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x866000
	009 Move X22, 0x577000
	010 Move W8, [X23+2723]
	011 Move X22, [X22+2416]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x577000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2723], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move X8, [X19+16]
	036 Move V0, [X19]
	037 Add X0, X31, 32
	038 Move X1, X31
	039 Move [X31+48], X8
	040 Move [X31+2], V0
	041 Call InputActionPropertyExtensions.DisableDirectAction, X0
	042 Move X8, [X21+16]
	043 Move V0, [X21]
	044 Move [X19+16], X8
	045 Move [X19], V0
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call Application.get_isPlaying
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {71}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Behaviour.get_isActiveAndEnabled, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {71}
	064 Move X8, [X19+16]
	065 Move V0, [X19]
	066 Add X0, X31, 0
	067 Move X1, X31
	068 Move [X31+16], X8
	069 Move [X31], V0
	070 Call InputActionPropertyExtensions.EnableDirectAction, X0
	071 Move X20, [X31+96]
	072 Move X19, [X31+104]
	073 Move X22, [X31+80]
	074 Move X21, [X31+88]
	075 Move X30, [X31+64]
	076 Move X23, [X31+72]
	077 Add X31, X31, 112
	078 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B7D5DC CBNZ W8, 0x3B7D5E8
	0x03B7D5E0 BL 0x1C16DFC
	0x03B7D5E4 LDR X0, [X20]
	0x03B7D5E8 LDR X8, [X0 + 0xB8]
	0x03B7D5EC LDR X8, [X8]
	0x03B7D5F0 CBZ X8, 0x3B7D6F8
	0x03B7D5F4 LDRSW X9, [X19 + 0x78]
	0x03B7D5F8 LDR W10, [X8 + 0x18]
	0x03B7D5FC CMP W9, W10
	0x03B7D600 B.CS 0x3B7D720
	0x03B7D604 LDR X0, [X19 + 0x80]
	0x03B7D608 CBZ X0, 0x3B7D6F8
	0x03B7D60C ADD X8, X8, X9, 0x3, LSL
	0x03B7D610 ADRP X23, 0x5DE000
	0x03B7D614 ADRP X24, 0x5DE000
	0x03B7D618 ADRP X25, 0x576000
	0x03B7D61C LDR X21, [X8 + 0x20]
	0x03B7D620 LDR X23, [X23 + 0xDA0]
	0x03B7D624 LDR X24, [X24 + 0x2B0]
	0x03B7D628 LDR X25, [X25 + 0x598]
	0x03B7D62C MOV W20, W31
	0x03B7D630 LDR W8, [X0 + 0x18]
	0x03B7D634 CMP W20, W8
	0x03B7D638 B.GE 0x3B7D6FC
	0x03B7D63C LDR X2, [X23]
	0x03B7D640 MOV W1, W20
	0x03B7D644 BL 0x301BCCC
	0x03B7D648 CBZ X0, 0x3B7D664
	0x03B7D64C LDR X9, [X0]
	0x03B7D650 LDR X8, [X24]
	0x03B7D654 LDRB W11, [X9 + 0x130]
	0x03B7D658 LDRB W10, [X8 + 0x130]
	0x03B7D65C CMP W11, W10
	0x03B7D660 B.CS 0x3B7D66C
	0x03B7D664 MOV X22, X31
	0x03B7D668 B 0x3B7D680
	0x03B7D66C LDR X9, [X9 + 0xC8]
	0x03B7D670 ADD X9, X9, X10, 0x3, LSL
	0x03B7D674 LDUR X9, [X9 - 0x8]
	0x03B7D678 CMP X9, X8
	0x03B7D67C CSEL X22, X0, X31, EQ
	0x03B7D680 LDR X0, [X25]
	0x03B7D684 LDR W8, [X0 + 0xE0]
	0x03B7D688 CBNZ W8, 0x3B7D690
	0x03B7D68C BL 0x1C16DFC
	0x03B7D690 MOV X0, X22
	0x03B7D694 MOV X1, X31
	0x03B7D698 MOV X2, X31
	0x03B7D69C BL 0x3C354F8
	0x03B7D6A0 TBZ X0, 0x0, 0x3B7D6EC
	0x03B7D6A4 CBZ X22, 0x3B7D6F8
	0x03B7D6A8 LDRB W8, [X22 + 0x25]
	0x03B7D6AC CBZ W8, 0x3B7D6EC
	0x03B7D6B0 MOV X0, X22
	0x03B7D6B4 MOV X1, X31
	0x03B7D6B8 BL 0x3B34C50
	0x03B7D6BC STP X0, X1, [X31 + 0x8]
	0x03B7D6C0 ADD X0, X31, 0x8
	0x03B7D6C4 ADD X2, X31, 0x18
	0x03B7D6C8 MOV X1, X21
	0x03B7D6CC MOV X3, X31
	0x03B7D6D0 BL 0x3E643E0
	0x03B7D6D4 TBZ X0, 0x0, 0x3B7D6EC
	0x03B7D6D8 LDP S0, S1, [X31 + 0x18]
	0x03B7D6DC MOV X0, X19
	0x03B7D6E0 BL 0x3B7D724
	0x03B7D6E4 FADD S8, S8, S0
	0x03B7D6E8 FADD S9, S9, S1
	0x03B7D6EC LDR X0, [X19 + 0x80]
	0x03B7D6F0 ADD W20, W20, 0x1
	0x03B7D6F4 CBNZ X0, 0x3B7D630
	0x03B7D6F8 BL 0x1C16F20
	0x03B7D6FC MOV V0.16B, V8.16B
	0x03B7D700 MOV V1.16B, V9.16B
	0x03B7D704 LDP X20, X19, [X31 + 0x60]
	0x03B7D708 LDP X22, X21, [X31 + 0x50]
	0x03B7D70C LDP X24, X23, [X31 + 0x40]
	0x03B7D710 LDP X30, X25, [X31 + 0x30]
	0x03B7D714 LDP D9, D8, [X31 + 0x20]
	0x03B7D718 ADD X31, X31, 0x70
	0x03B7D71C RET
	0x03B7D720 BL 0x1C16F28
	0x03B7D724 STP D11, D10, [X31 - 0x40]!
	0x03B7D728 STP D9, D8, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0x866000
	010 Move X23, 0x57B000
	011 Move X20, 0x5DF000
	012 Move X21, 0x5CB000
	013 Move X22, 0x5DF000
	014 Move W8, [X24+2724]
	015 Move X23, [X23+992]
	016 Move X20, [X20+3456]
	017 Move X21, [X21+2048]
	018 Move X22, [X22+3464]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x57B000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0x5DF000
	028 Move X0, [X0+3464]
	029 Call 0x1C17CF4
	030 Move X0, 0x5DF000
	031 Move X0, [X0+3456]
	032 Call 0x1C17CF4
	033 Move X0, 0x5CB000
	034 Move X0, [X0+2048]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2724], W8
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X1, [X20]
	041 Move X6, [X21]
	042 Move W2, W31
	043 Move X3, X31
	044 Move X4, X31
	045 Move X5, X31
	046 Move X7, X31
	047 Move X20, X0
	048 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	049 Add X0, X31, 24
	050 Move X1, X20
	051 Move X2, X31
	052 Move [X31+24], X31
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Call InputActionProperty..ctor, X0, X1
	056 Move X8, [X31+40]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move [X19+96], X8
	059 Move [X19+5], V0
	060 Move X0, [X23]
	061 Call 0x1C17F10
	062 Move X1, [X22]
	063 Move X6, [X21]
	064 Move W2, W31
	065 Move X3, X31
	066 Move X4, X31
	067 Move X5, X31
	068 Move X7, X31
	069 Move X20, X0
	070 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	071 Add X0, X31, 0
	072 Move X1, X20
	073 Move X2, X31
	074 Move [X31], X31
	075 Move [X31+8], X31
	076 Move [X31+16], X31
	077 Call InputActionProperty..ctor, X0, X1
	078 Move X8, [X31+16]
	079 Move V0, [X31]
	080 Move W9, 0x42700000
	081 Move X0, X19
	082 Move X1, X31
	083 Move [X19+120], X8
	084 Move [X19+104], V0
	085 Move [X19+72], W9
	086 Call MonoBehaviour..ctor, X0
	087 Move X20, [X31+96]
	088 Move X19, [X31+104]
	089 Move X22, [X31+80]
	090 Move X21, [X31+88]
	091 Move X24, [X31+64]
	092 Move X23, [X31+72]
	093 Move X30, [X31+48]
	094 Add X31, X31, 112
	095 Return 

