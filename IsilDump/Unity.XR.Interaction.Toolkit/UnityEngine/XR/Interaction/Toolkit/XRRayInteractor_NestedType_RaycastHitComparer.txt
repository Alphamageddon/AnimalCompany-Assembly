Type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/RaycastHitComparer

Method: System.Int32 Compare(UnityEngine.RaycastHit a, UnityEngine.RaycastHit b)

Disassembly:
	0x03B660A0 LDR X8, [X20]
	0x03B660A4 LDR X10, [X10 + 0x8D8]
	0x03B660A8 LDRH W9, [X8 + 0x12E]
	0x03B660AC LDR X1, [X10]
	0x03B660B0 CBZ X9, 0x3B660D4
	0x03B660B4 LDR X10, [X8 + 0xB0]
	0x03B660B8 ADD X10, X10, 0x8
	0x03B660BC LDUR X11, [X10 - 0x8]
	0x03B660C0 CMP X11, X1
	0x03B660C4 B.EQ 0x3B660E4
	0x03B660C8 SUBS X9, X9, 0x1
	0x03B660CC ADD X10, X10, 0x10
	0x03B660D0 B.NE 0x3B660BC
	0x03B660D4 MOVZ W2, 0x6
	0x03B660D8 MOV X0, X20
	0x03B660DC BL 0x1C5C788
	0x03B660E0 B 0x3B660F4
	0x03B660E4 LDR W9, [X10]
	0x03B660E8 ADD W9, W9, 0x6
	0x03B660EC ADD X8, X8, W9, 0x4, SXTW
	0x03B660F0 ADD X0, X8, 0x138
	0x03B660F4 LDP X8, X1, [X0]
	0x03B660F8 MOV X0, X20
	0x03B660FC BLR X8
	0x03B66100 CBZ X0, 0x3B66270
	0x03B66104 LDR X8, [X24]
	0x03B66108 ADRP X9, 0x5F5000
	0x03B6610C MOVZ W1, 0x1
	0x03B66110 LDR X8, [X8 + 0xB8]
	0x03B66114 LDR X9, [X9 + 0x3C0]
	0x03B66118 LDR X2, [X8]
	0x03B6611C LDR X3, [X9]
	0x03B66120 BL 0x21A46E8
	0x03B66124 LDR X0, [X24]
	0x03B66128 LDR X8, [X0 + 0xB8]
	0x03B6612C LDR X8, [X8]
	0x03B66130 CBZ X8, 0x3B66270
	0x03B66134 LDR W9, [X8 + 0x18]
	0x03B66138 CBZ W9, 0x3B66250
	0x03B6613C LDR W9, [X0 + 0xE0]
	0x03B66140 CBNZ W9, 0x3B66158
	0x03B66144 BL 0x1C16DFC
	0x03B66148 LDR X8, [X24]
	0x03B6614C LDR X8, [X8 + 0xB8]
	0x03B66150 LDR X8, [X8]
	0x03B66154 CBZ X8, 0x3B66270
	0x03B66158 LDR W1, [X8 + 0x18]
	0x03B6615C ADRP X8, 0x5F5000
	0x03B66160 LDR X8, [X8 + 0x3E8]
	0x03B66164 LDR X0, [X8]
	0x03B66168 BL 0x1C16D6C
	0x03B6616C ADRP X26, 0x5F5000
	0x03B66170 ADRP X27, 0x5B9000
	0x03B66174 ADRP X28, 0x5F5000
	0x03B66178 LDR X26, [X26 + 0x3E0]
	0x03B6617C LDR X27, [X27 + 0x5A0]
	0x03B66180 LDR X28, [X28 + 0x3F0]
	0x03B66184 MOV X21, X0
	0x03B66188 MOV X22, X31
	0x03B6618C ADD X25, X0, 0x20
	0x03B66190 LDR X0, [X24]
	0x03B66194 LDR W8, [X0 + 0xE0]
	0x03B66198 CBNZ W8, 0x3B661A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x87D000
	007 Move X22, 0x58E000
	008 Move W8, [X21+2478]
	009 Move X22, [X22+1432]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x58E000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2478], W8
	021 Move X0, X20
	022 Move X1, X31
	023 Call RaycastHit.get_collider, X0
	024 Move X8, [X22]
	025 Move X21, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {42}
	039 Move X0, X20
	040 Move X1, X31
	041 Call RaycastHit.get_distance, X0
	042 Move TEMP, 0x80800000
	043 Not TEMP
	044 Move W8, TEMP
	045 Move S0, W8
	046 Move X0, X19
	047 Move X1, X31
	048 Move [X31+12], S0
	049 Call RaycastHit.get_collider, X0
	050 Move X8, [X22]
	051 Move X20, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {68}
	065 Move X0, X19
	066 Move X1, X31
	067 Call RaycastHit.get_distance, X0
	068 Move TEMP, 0x80800000
	069 Not TEMP
	070 Move W8, TEMP
	071 Move S0, W8
	072 Add X0, X31, 12
	073 Move X1, X31
	074 Call Single.CompareTo, X0, V0
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B6619C BL 0x1C16DFC
	0x03B661A0 LDR X0, [X24]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

