Type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRControllerState> get_frames()

Disassembly:
	0x03B36CB0 BL 0x3BB9958
	0x03B36CB4 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Double get_duration()

Disassembly:
	0x03B365B0 CMP W8, 0x0
	0x03B365B4 STR S0, [X21 + 0x30]
	0x03B365B8 LDR V0, [X31 + 0x58]
	0x03B365BC STRB W10, [X21 + 0x48]
	0x03B365C0 CSET W8, NE
	0x03B365C4 CSET W10, EQ
	0x03B365C8 CMP W11, 0x0
	0x03B365CC LDRB W11, [X21 + 0x50]
	0x03B365D0 EOR W9, W22, 0x1
	0x03B365D4 AND W8, W8, W9, 0x0
	0x03B365D8 AND W10, W10, W22, 0x0
	0x03B365DC CSET W9, NE
	0x03B365E0 CSET W12, EQ
	0x03B365E4 STR S0, [X21 + 0x34]
	0x03B365E8 LDR V0, [X31 + 0x5C]
	0x03B365EC STRB W8, [X21 + 0x42]
	0x03B365F0 EOR W8, W20, 0x1
	0x03B365F4 CMP W11, 0x0
	0x03B365F8 STRB W10, [X21 + 0x41]
	0x03B365FC AND W10, W12, W20, 0x0
	0x03B36600 AND W8, W9, W8, 0x0
	0x03B36604 EOR W11, W19, 0x1
	0x03B36608 STRB W10, [X21 + 0x49]
	0x03B3660C CSET W10, NE
	0x03B36610 STRB W8, [X21 + 0x4A]
	0x03B36614 CSET W8, EQ
	0x03B36618 AND W9, W19, 0x1
	0x03B3661C AND W8, W8, W19, 0x0
	0x03B36620 AND W10, W10, W11, 0x0
	0x03B36624 STR W23, [X21 + 0x18]
	0x03B36628 STRB W24, [X21 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8AD000
	005 Move W8, [X20+2049]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x625000
	012 Move X0, [X0+136]
	013 Call 0x1C17CF4
	014 Move X0, 0x625000
	015 Move X0, [X0+144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2049], W8
	019 Move X0, [X19+32]
	020 Compare X0, 0
	021 JumpIfEqual {38}
	022 Move W8, [X0+24]
	023 Compare W8, 0
	024 JumpIfEqual {33}
	025 Move X9, 0x625000
	026 Move X9, [X9+144]
	027 Subtract W1, W8, 1
	028 Move X2, [X9]
	029 Call List`1<Object>.get_Item, X0, X1
	030 Compare X0, 0
	031 JumpIfEqual {38}
	032 Move V0, [X0+16]
	033 Move D0, X31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return V0
	038 Call 0x1C17F20

Method: System.Void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()

Disassembly:
	0x03B36CB8 LDP X22, X21, [X31 + 0x50]
	0x03B36CBC LDP X30, X23, [X31 + 0x40]
	0x03B36CC0 ADD X31, X31, 0x70
	0x03B36CC4 RET
	0x03B36CC8 LDR X9, [X0 + 0xD0]
	0x03B36CCC LDR V0, [X0 + 0xC]
	0x03B36CD0 STR X9, [X8 + 0x10]
	0x03B36CD4 STR V0, [X8]
	0x03B36CD8 RET
	0x03B36CDC SUB X31, X31, 0x30
	0x03B36CE0 STR X30, [X31 + 0x20]
	0x03B36CE4 LDR X8, [X1 + 0x10]
	0x03B36CE8 LDR V0, [X1]
	0x03B36CEC ADD X1, X0, 0xC0
	0x03B36CF0 ADD X2, X31, 0x0
	0x03B36CF4 STR X8, [X31 + 0x10]
	0x03B36CF8 STR V0, [X31]
	0x03B36CFC BL 0x3B36BE0
	0x03B36D00 LDR X30, [X31 + 0x20]
	0x03B36D04 ADD X31, X31, 0x30
	0x03B36D08 RET
	0x03B36D0C LDR X9, [X0 + 0xE8]
	0x03B36D10 LDUR V0, [X0 + 0xD8]
	0x03B36D14 STR X9, [X8 + 0x10]
	0x03B36D18 STR V0, [X8]
	0x03B36D1C RET
	0x03B36D20 SUB X31, X31, 0x30
	0x03B36D24 STR X30, [X31 + 0x20]
	0x03B36D28 LDR X8, [X1 + 0x10]
	0x03B36D2C LDR V0, [X1]
	0x03B36D30 ADD X1, X0, 0xD8
	0x03B36D34 ADD X2, X31, 0x0
	0x03B36D38 STR X8, [X31 + 0x10]
	0x03B36D3C STR V0, [X31]
	0x03B36D40 BL 0x3B36BE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8AD000
	005 Move W8, [X20+2050]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x625000
	012 Move X0, [X0+136]
	013 Call 0x1C17CF4
	014 Move X0, 0x625000
	015 Move X0, [X0+144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2050], W8
	019 Move X0, [X19+32]
	020 Compare X0, 0
	021 JumpIfEqual {37}
	022 Move W8, [X0+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, 0x625000
	025 Move X8, [X8+144]
	026 Move W1, W31
	027 Move X2, [X8]
	028 Call List`1<Object>.get_Item, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {41}
	031 Move W8, [X0+65]
	032 Move [X19+24], W8
	033 Move W8, [X0+73]
	034 Move [X19+25], W8
	035 Move W8, [X0+81]
	036 Move [X19+26], W8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Call 0x1C17F20

Method: System.Void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()

Disassembly:
	0x03B36D44 LDR X30, [X31 + 0x20]

ISIL:
No ISIL was generated
Method: System.Void SetFrameDependentData()

Disassembly:
	0x03B36D48 ADD X31, X31, 0x30
	0x03B36D4C RET
	0x03B36D50 LDR X9, [X0 + 0x100]
	0x03B36D54 LDR V0, [X0 + 0xF]
	0x03B36D58 STR X9, [X8 + 0x10]
	0x03B36D5C STR V0, [X8]
	0x03B36D60 RET
	0x03B36D64 SUB X31, X31, 0x30
	0x03B36D68 STR X30, [X31 + 0x20]
	0x03B36D6C LDR X8, [X1 + 0x10]
	0x03B36D70 LDR V0, [X1]
	0x03B36D74 ADD X1, X0, 0xF0
	0x03B36D78 ADD X2, X31, 0x0
	0x03B36D7C STR X8, [X31 + 0x10]
	0x03B36D80 STR V0, [X31]
	0x03B36D84 BL 0x3B36BE0
	0x03B36D88 LDR X30, [X31 + 0x20]
	0x03B36D8C ADD X31, X31, 0x30
	0x03B36D90 RET
	0x03B36D94 ADD X9, X0, 0x108
	0x03B36D98 LDR X10, [X9 + 0x10]
	0x03B36D9C LDR V0, [X9]
	0x03B36DA0 STR X10, [X8 + 0x10]
	0x03B36DA4 STR V0, [X8]
	0x03B36DA8 RET
	0x03B36DAC SUB X31, X31, 0x30
	0x03B36DB0 STR X30, [X31 + 0x20]
	0x03B36DB4 LDR X8, [X1 + 0x10]
	0x03B36DB8 LDR V0, [X1]
	0x03B36DBC ADD X1, X0, 0x108
	0x03B36DC0 ADD X2, X31, 0x0
	0x03B36DC4 STR X8, [X31 + 0x10]
	0x03B36DC8 STR V0, [X31]
	0x03B36DCC BL 0x3B36BE0
	0x03B36DD0 LDR X30, [X31 + 0x20]
	0x03B36DD4 ADD X31, X31, 0x30
	0x03B36DD8 RET
	0x03B36DDC LDR X9, [X0 + 0x130]
	0x03B36DE0 LDR V0, [X0 + 0x12]
	0x03B36DE4 STR X9, [X8 + 0x10]
	0x03B36DE8 STR V0, [X8]
	0x03B36DEC RET
	0x03B36DF0 SUB X31, X31, 0x30
	0x03B36DF4 STR X30, [X31 + 0x20]
	0x03B36DF8 LDR X8, [X1 + 0x10]
	0x03B36DFC LDR V0, [X1]
	0x03B36E00 ADD X1, X0, 0x120
	0x03B36E04 ADD X2, X31, 0x0
	0x03B36E08 STR X8, [X31 + 0x10]
	0x03B36E0C STR V0, [X31]
	0x03B36E10 BL 0x3B36BE0
	0x03B36E14 LDR X30, [X31 + 0x20]
	0x03B36E18 ADD X31, X31, 0x30
	0x03B36E1C RET
	0x03B36E20 ADD X9, X0, 0x138
	0x03B36E24 LDR X10, [X9 + 0x10]
	0x03B36E28 LDR V0, [X9]
	0x03B36E2C STR X10, [X8 + 0x10]
	0x03B36E30 STR V0, [X8]
	0x03B36E34 RET
	0x03B36E38 SUB X31, X31, 0x30
	0x03B36E3C STR X30, [X31 + 0x20]
	0x03B36E40 LDR X8, [X1 + 0x10]
	0x03B36E44 LDR V0, [X1]
	0x03B36E48 ADD X1, X0, 0x138
	0x03B36E4C ADD X2, X31, 0x0
	0x03B36E50 STR X8, [X31 + 0x10]
	0x03B36E54 STR V0, [X31]
	0x03B36E58 BL 0x3B36BE0
	0x03B36E5C LDR X30, [X31 + 0x20]
	0x03B36E60 ADD X31, X31, 0x30
	0x03B36E64 RET
	0x03B36E68 LDR X9, [X0 + 0x160]
	0x03B36E6C LDR V0, [X0 + 0x15]
	0x03B36E70 STR X9, [X8 + 0x10]
	0x03B36E74 STR V0, [X8]
	0x03B36E78 RET
	0x03B36E7C SUB X31, X31, 0x30
	0x03B36E80 STR X30, [X31 + 0x20]
	0x03B36E84 LDR X8, [X1 + 0x10]
	0x03B36E88 LDR V0, [X1]
	0x03B36E8C ADD X1, X0, 0x150
	0x03B36E90 ADD X2, X31, 0x0
	0x03B36E94 STR X8, [X31 + 0x10]
	0x03B36E98 STR V0, [X31]
	0x03B36E9C BL 0x3B36BE0
	0x03B36EA0 LDR X30, [X31 + 0x20]
	0x03B36EA4 ADD X31, X31, 0x30
	0x03B36EA8 RET
	0x03B36EAC ADD X9, X0, 0x168
	0x03B36EB0 LDR X10, [X9 + 0x10]
	0x03B36EB4 LDR V0, [X9]
	0x03B36EB8 STR X10, [X8 + 0x10]
	0x03B36EBC STR V0, [X8]
	0x03B36EC0 RET
	0x03B36EC4 SUB X31, X31, 0x30
	0x03B36EC8 STR X30, [X31 + 0x20]
	0x03B36ECC LDR X8, [X1 + 0x10]
	0x03B36ED0 LDR V0, [X1]
	0x03B36ED4 ADD X1, X0, 0x168
	0x03B36ED8 ADD X2, X31, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8AD000
	007 Move W8, [X20+2051]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x625000
	014 Move X0, [X0+136]
	015 Call 0x1C17CF4
	016 Move X0, 0x625000
	017 Move X0, [X0+144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2051], W8
	021 Move X0, [X19+32]
	022 Compare X0, 0
	023 JumpIfEqual {108}
	024 Move W8, [X0+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X22, 0x625000
	027 Move X22, [X22+144]
	028 Move W1, W31
	029 Move X2, [X22]
	030 Call List`1<Object>.get_Item, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {107}
	033 Move W8, [X19+24]
	034 Move W9, [X0+64]
	035 Move [X0+66], W31
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move [X0+65], W8
	039 Move W8, [X19+25]
	040 Move W9, [X0+72]
	041 Move [X0+74], W31
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move [X0+73], W8
	045 Move W8, [X19+26]
	046 Move W9, [X0+80]
	047 Move [X0+82], W31
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move [X0+81], W8
	051 Move X0, [X19+32]
	052 Compare X0, 0
	053 JumpIfEqual {107}
	054 Move W21, 1
	055 Move W8, [X0+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X2, [X22]
	058 Move W1, W21
	059 Call List`1<Object>.get_Item, X0, X1
	060 Move X8, [X19+32]
	061 Compare X8, 0
	062 JumpIfEqual {107}
	063 Move X2, [X22]
	064 Subtract W21, W21, 1
	065 Move X20, X0
	066 Move X0, X8
	067 Move W1, W21
	068 Call List`1<Object>.get_Item, X0, X1
	069 Compare X20, 0
	070 JumpIfEqual {107}
	071 Compare X0, 0
	072 JumpIfEqual {107}
	073 Move W8, [X20+64]
	074 Move W9, [X0+64]
	075 Add W21, W21, 2
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 And W9, W9, W10
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Move W10, [X20+72]
	083 Move [X20+65], W8
	084 Move [X20+66], W9
	085 Move W8, [X0+72]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 And W8, W8, W9
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 Move W9, [X20+80]
	093 Move [X20+73], W10
	094 Move [X20+74], W8
	095 Move W8, [X0+80]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSET not yet implemented."
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 And W8, W8, W10
	102 Move [X20+81], W9
	103 Move [X20+82], W8
	104 Move X0, [X19+32]
	105 Compare X0, 0
	106 JumpIfNotEqual {55}
	107 Call 0x1C17F20
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+48]
	113 Return 

Method: System.Void AddRecordingFrame(UnityEngine.XR.Interaction.Toolkit.XRControllerState state)

Disassembly:
	0x03B36854 MOV X0, X21
	0x03B36858 LDR X1, [X8 + 0x40]
	0x03B3685C BL 0x1C16E00
	0x03B36860 CBZ X0, 0x3B3696C
	0x03B36864 LDR W8, [X20 + 0x18]
	0x03B36868 CMP W8, 0x4
	0x03B3686C B.LS 0x3B36968
	0x03B36870 STR X21, [X20 + 0x40]
	0x03B36874 LDRB W8, [X19 + 0x50]
	0x03B36878 LDR X0, [X22]
	0x03B3687C ADD X1, X31, 0x14
	0x03B36880 STRB W8, [X31 + 0x14]
	0x03B36884 BL 0x1C16E04
	0x03B36888 MOV X21, X0
	0x03B3688C CBZ X0, 0x3B368A4
	0x03B36890 LDR X8, [X20]
	0x03B36894 MOV X0, X21
	0x03B36898 LDR X1, [X8 + 0x40]
	0x03B3689C BL 0x1C16E00
	0x03B368A0 CBZ X0, 0x3B3696C
	0x03B368A4 LDR W8, [X20 + 0x18]
	0x03B368A8 CMP W8, 0x5
	0x03B368AC B.LS 0x3B36968
	0x03B368B0 STR X21, [X20 + 0x48]
	0x03B368B4 LDRB W8, [X19 + 0x1C]
	0x03B368B8 LDR X0, [X22]
	0x03B368BC ADD X1, X31, 0x10
	0x03B368C0 STRB W8, [X31 + 0x10]
	0x03B368C4 BL 0x1C16E04
	0x03B368C8 MOV X21, X0
	0x03B368CC CBZ X0, 0x3B368E4
	0x03B368D0 LDR X8, [X20]
	0x03B368D4 MOV X0, X21
	0x03B368D8 LDR X1, [X8 + 0x40]
	0x03B368DC BL 0x1C16E00
	0x03B368E0 CBZ X0, 0x3B3696C
	0x03B368E4 LDR W8, [X20 + 0x18]
	0x03B368E8 CMP W8, 0x6
	0x03B368EC B.LS 0x3B36968
	0x03B368F0 ADRP X8, 0x624000
	0x03B368F4 LDR X8, [X8 + 0xB8]
	0x03B368F8 STR X21, [X20 + 0x50]
	0x03B368FC LDR W9, [X19 + 0x18]
	0x03B36900 ADD X1, X31, 0xC
	0x03B36904 LDR X0, [X8]
	0x03B36908 STR W9, [X31 + 0xC]
	0x03B3690C BL 0x1C16E04
	0x03B36910 MOV X19, X0
	0x03B36914 CBZ X0, 0x3B3692C
	0x03B36918 LDR X8, [X20]
	0x03B3691C MOV X0, X19
	0x03B36920 LDR X1, [X8 + 0x40]
	0x03B36924 BL 0x1C16E00
	0x03B36928 CBZ X0, 0x3B3696C
	0x03B3692C LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8AD000
	007 Move X20, 0x625000
	008 Move W8, [X22+2052]
	009 Move X20, [X20+96]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x625000
	017 Move X0, [X0+160]
	018 Call 0x1C17CF4
	019 Move X0, 0x625000
	020 Move X0, [X0+96]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2052], W8
	024 Move X0, [X20]
	025 Move X19, [X19+32]
	026 Call 0x1C17F10
	027 Move X1, X21
	028 Move X20, X0
	029 Call XRControllerState..ctor, X0, X1
	030 Compare X19, 0
	031 JumpIfEqual {66}
	032 Move X9, 0x625000
	033 Move X9, [X9+160]
	034 Move W10, [X19+28]
	035 Move X8, [X19+16]
	036 Move X9, [X9]
	037 Add W10, W10, 1
	038 Move [X19+28], W10
	039 Compare X8, 0
	040 JumpIfEqual {66}
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Move W11, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W9, W10, 1
	045 Add X8, X8, X10
	046 Move [X19+24], W9
	047 Move [X8+32], X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Move X8, [X9+32]
	055 Move X0, X19
	056 Move X1, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X8, [X8+192]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X2, [X8+112]
	063 Move X30, [X31+48]
	064 Call List`1<Object>.AddWithResize, X0, X1
	065 Return 
	066 Call 0x1C17F20

Method: System.Void AddRecordingFrameNonAlloc(UnityEngine.XR.Interaction.Toolkit.XRControllerState state)

Disassembly:
	0x03B36F7C LDR W8, [X0 + 0xE0]
	0x03B36F80 CBNZ W8, 0x3B36F88
	0x03B36F84 BL 0x1C16DFC
	0x03B36F88 MOV X0, X20
	0x03B36F8C MOV X1, X31
	0x03B36F90 MOV X2, X31
	0x03B36F94 BL 0x3C3883C
	0x03B36F98 TBZ X0, 0x0, 0x3B37018
	0x03B36F9C MOV X0, X31
	0x03B36FA0 BL 0x3C047F8
	0x03B36FA4 STR X0, [X19 + 0x180]
	0x03B36FA8 MOV X20, X0
	0x03B36FAC LDR X0, [X21]
	0x03B36FB0 LDR W8, [X0 + 0xE0]
	0x03B36FB4 CBNZ W8, 0x3B36FBC
	0x03B36FB8 BL 0x1C16DFC
	0x03B36FBC MOV X0, X20
	0x03B36FC0 MOV X1, X31
	0x03B36FC4 MOV X2, X31
	0x03B36FC8 BL 0x3C3883C
	0x03B36FCC TBZ X0, 0x0, 0x3B37018
	0x03B36FD0 ADRP X8, 0x5BD000
	0x03B36FD4 LDR X8, [X8 + 0xA28]
	0x03B36FD8 LDR X0, [X8]
	0x03B36FDC LDR W8, [X0 + 0xE0]
	0x03B36FE0 CBNZ W8, 0x3B36FE8
	0x03B36FE4 BL 0x1C16DFC
	0x03B36FE8 ADRP X8, 0x624000
	0x03B36FEC LDR X8, [X8 + 0xC8]
	0x03B36FF0 MOV X1, X19
	0x03B36FF4 MOV X2, X31
	0x03B36FF8 LDR X0, [X8]
	0x03B36FFC BL 0x3C06B0C
	0x03B37000 MOV X0, X19
	0x03B37004 LDP X20, X19, [X31 + 0x10]
	0x03B37008 MOV W1, W31
	0x03B3700C MOV X2, X31
	0x03B37010 LDP X30, X21, [X31], #0x20
	0x03B37014 B 0x3C32410
	0x03B37018 LDP X20, X19, [X31 + 0x10]
	0x03B3701C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8AD000
	006 Move W8, [X21+2053]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x625000
	014 Move X0, [X0+160]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2053], W8
	018 Move X0, [X20+32]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0x625000
	022 Move X9, [X9+160]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void InitRecording()

Disassembly:
	0x03B36494 CSET W12, NE
	0x03B36498 STRB W10, [X21 + 0x42]
	0x03B3649C CSET W10, EQ
	0x03B364A0 AND W8, W12, W8, 0x0
	0x03B364A4 ANDS W12, W19, 0x1
	0x03B364A8 AND W9, W9, W22, 0x0
	0x03B364AC AND W10, W10, W20, 0x0
	0x03B364B0 FCSEL S0, S1, S0, NE
	0x03B364B4 CMP W11, 0x0
	0x03B364B8 STRB W9, [X21 + 0x41]
	0x03B364BC EOR W9, W19, 0x1
	0x03B364C0 STRB W10, [X21 + 0x49]
	0x03B364C4 STRB W8, [X21 + 0x4A]
	0x03B364C8 CSET W8, NE
	0x03B364CC CSET W10, EQ
	0x03B364D0 AND W10, W10, W19, 0x0
	0x03B364D4 AND W8, W8, W9, 0x0
	0x03B364D8 STR D15, [X21 + 0x10]
	0x03B364DC STP S14, S13, [X21 + 0x20]
	0x03B364E0 STP S12, S11, [X21 + 0x28]
	0x03B364E4 STP S10, S9, [X21 + 0x30]
	0x03B364E8 STR W23, [X21 + 0x18]
	0x03B364EC STRB W24, [X21 + 0x1C]
	0x03B364F0 STP S8, S2, [X21 + 0x38]
	0x03B364F4 STR S3, [X21 + 0x44]
	0x03B364F8 STR S0, [X21 + 0x4C]
	0x03B364FC STRB W10, [X21 + 0x51]
	0x03B36500 STRB W8, [X21 + 0x52]
	0x03B36504 STRB W12, [X21 + 0x50]
	0x03B36508 LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8AD000
	005 Move W8, [X20+2054]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x625000
	012 Move X0, [X0+128]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2054], W8
	016 Move X8, [X19+32]
	017 NotImplemented "Instruction STRH not yet implemented."
	018 Move [X19+26], W31
	019 Compare X8, 0
	020 JumpIfEqual {39}
	021 Move W2, [X8+24]
	022 Move W9, [X8+28]
	023 Add W9, W9, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move [X8+24], W31
	026 Move [X8+28], W9
	027 Move X0, [X8+16]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W1, W31
	031 Move X3, X31
	032 Move X30, [X31+32]
	033 Call Array.Clear, X0, X1, X2
	034 Return 
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 
	039 Call 0x1C17F20

Method: System.Void SaveRecording()

Disassembly:
	0x03B3650C LDP X22, X21, [X31 + 0x60]

ISIL:
	001 Return 

Method: System.Void AddRecordingFrame(System.Double time, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean selectActive, System.Boolean activateActive, System.Boolean pressActive)

Disassembly:
	0x03B37020 RET
	0x03B37024 STP X30, X19, [X31 - 0x10]!
	0x03B37028 MOV X19, X0
	0x03B3702C BL 0x3B32660
	0x03B37030 MOV X0, X19
	0x03B37034 LDP X30, X19, [X31], #0x10
	0x03B37038 B 0x3B3703C
	0x03B3703C SUB X31, X31, 0x140
	0x03B37040 STR X29, [X31 + 0x120]
	0x03B37044 STP X30, X19, [X31 + 0x130]
	0x03B37048 LDR X8, [X0 + 0xB8]
	0x03B3704C LDUR V0, [X0 + 0xA8]
	0x03B37050 MOV X19, X0
	0x03B37054 ADD X0, X31, 0x100
	0x03B37058 MOV X1, X31
	0x03B3705C STR X8, [X31 + 0x110]
	0x03B37060 STR V0, [X31 + 0x10]
	0x03B37064 BL 0x3BB9958
	0x03B37068 LDR X8, [X19 + 0xD0]
	0x03B3706C LDR V0, [X19 + 0xC]
	0x03B37070 ADD X0, X31, 0xE0
	0x03B37074 MOV X1, X31
	0x03B37078 STR X8, [X31 + 0xF0]
	0x03B3707C STR V0, [X31 + 0xE]
	0x03B37080 BL 0x3BB9958
	0x03B37084 LDR X8, [X19 + 0xE8]
	0x03B37088 LDUR V0, [X19 + 0xD8]
	0x03B3708C ADD X0, X31, 0xC0
	0x03B37090 MOV X1, X31
	0x03B37094 STR X8, [X31 + 0xD0]
	0x03B37098 STR V0, [X31 + 0xC]
	0x03B3709C BL 0x3BB9958
	0x03B370A0 LDR X8, [X19 + 0x100]
	0x03B370A4 LDR V0, [X19 + 0xF]
	0x03B370A8 ADD X0, X31, 0xA0
	0x03B370AC MOV X1, X31
	0x03B370B0 STR X8, [X31 + 0xB0]
	0x03B370B4 STR V0, [X31 + 0xA]
	0x03B370B8 BL 0x3BB9958
	0x03B370BC ADD X8, X19, 0x108
	0x03B370C0 LDR X9, [X8 + 0x10]
	0x03B370C4 LDR V0, [X8]
	0x03B370C8 ADD X0, X31, 0x80
	0x03B370CC MOV X1, X31
	0x03B370D0 STR X9, [X31 + 0x90]
	0x03B370D4 STR V0, [X31 + 0x8]
	0x03B370D8 BL 0x3BB9958
	0x03B370DC LDR X8, [X19 + 0x130]
	0x03B370E0 LDR V0, [X19 + 0x12]
	0x03B370E4 ADD X0, X31, 0x60
	0x03B370E8 MOV X1, X31
	0x03B370EC STR X8, [X31 + 0x70]
	0x03B370F0 STR V0, [X31 + 0x6]
	0x03B370F4 BL 0x3BB9958
	0x03B370F8 ADD X8, X19, 0x138
	0x03B370FC LDR X9, [X8 + 0x10]
	0x03B37100 LDR V0, [X8]

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X23, 0x8AC000
	017 Move X24, 0x624000
	018 Move W8, [X23+2055]
	019 Move X24, [X24+96]
	020 Move W20, W3
	021 Move W21, W2
	022 Move W22, W1
	023 Move V8, V7
	024 Move V9, V6
	025 Move V10, V5
	026 Move V11, V4
	027 Move V12, V3
	028 Move V13, V2
	029 Move V14, V1
	030 Move V15, V0
	031 Move X19, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X0, 0x624000
	037 Move X0, [X0+96]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2055], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 And W2, W22, 1
	044 And W3, W21, 1
	045 And W4, W20, 1
	046 Move W1, 3
	047 Move V0, V15
	048 Move V1, V14
	049 Move V2, V13
	050 Move V3, V12
	051 Move V4, V11
	052 Move V5, V10
	053 Move V6, V9
	054 Move V7, V8
	055 Move X23, X0
	056 Call XRControllerState..ctor, X0, V0, X1, X2, X3, X4, X5, X6
	057 Move X0, X19
	058 Move X1, X23
	059 Move X20, [X31+112]
	060 Move X19, [X31+120]
	061 Move X22, [X31+96]
	062 Move X21, [X31+104]
	063 Move X24, [X31+80]
	064 Move X23, [X31+88]
	065 Move X30, [X31+64]
	066 Move D9, [X31+48]
	067 Move D8, [X31+56]
	068 Move D11, [X31+32]
	069 Move D10, [X31+40]
	070 Move D13, [X31+16]
	071 Move D12, [X31+24]
	072 Move D15, [X31+128]
	073 Move D14, [X31+136]
	074 Call XRControllerRecording.AddRecordingFrameNonAlloc, X0, X1
	075 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B3723C STR V0, [X31 + 0x6]
	0x03B37240 BL 0x3BB99F0
	0x03B37244 ADD X8, X19, 0x138
	0x03B37248 LDR X9, [X8 + 0x10]
	0x03B3724C LDR V0, [X8]
	0x03B37250 ADD X0, X31, 0x40
	0x03B37254 MOV X1, X31
	0x03B37258 STR X9, [X31 + 0x50]
	0x03B3725C STR V0, [X31 + 0x4]
	0x03B37260 BL 0x3BB99F0
	0x03B37264 LDR X8, [X19 + 0x160]
	0x03B37268 LDR V0, [X19 + 0x15]
	0x03B3726C ADD X0, X31, 0x20
	0x03B37270 MOV X1, X31
	0x03B37274 STR X8, [X31 + 0x30]
	0x03B37278 STR V0, [X31 + 0x2]
	0x03B3727C BL 0x3BB99F0
	0x03B37280 ADD X8, X19, 0x168
	0x03B37284 LDR X9, [X8 + 0x10]
	0x03B37288 LDR V0, [X8]
	0x03B3728C ADD X0, X31, 0x0
	0x03B37290 MOV X1, X31
	0x03B37294 STR X9, [X31 + 0x10]
	0x03B37298 STR V0, [X31]
	0x03B3729C BL 0x3BB99F0
	0x03B372A0 LDP X30, X19, [X31 + 0x130]
	0x03B372A4 LDR X29, [X31 + 0x120]
	0x03B372A8 ADD X31, X31, 0x140
	0x03B372AC RET
	0x03B372B0 RET
	0x03B372B4 SUB X31, X31, 0xC0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8AC000
	007 Move X22, 0x624000
	008 Move X20, 0x624000
	009 Move W8, [X21+2056]
	010 Move X22, [X22+168]
	011 Move X20, [X20+176]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x624000
	018 Move X0, [X0+176]
	019 Call 0x1C17CF4
	020 Move X0, 0x624000
	021 Move X0, [X0+168]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2056], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+32], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call ScriptableObject..ctor, X0
	039 Return 

