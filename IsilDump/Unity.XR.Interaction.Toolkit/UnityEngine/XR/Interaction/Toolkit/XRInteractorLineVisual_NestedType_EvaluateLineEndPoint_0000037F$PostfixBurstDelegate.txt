Type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual/EvaluateLineEndPoint_0000037F$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B4E108 ADRP X20, 0x88A000
	0x03B4E10C LDRB W8, [X20 + 0x783]
	0x03B4E110 CBNZ W8, 0x3B4E128
	0x03B4E114 ADRP X0, 0x5A5000
	0x03B4E118 LDR X0, [X0 + 0x5A0]
	0x03B4E11C BL 0x1C16CF4
	0x03B4E120 MOVZ W8, 0x1
	0x03B4E124 STRB W8, [X20 + 0x783]
	0x03B4E128 LDR X8, [X22]
	0x03B4E12C LDR X8, [X8 + 0xB8]
	0x03B4E130 LDP S0, S1, [X8]
	0x03B4E134 LDR V2, [X8 + 0x8]
	0x03B4E138 ADRP X8, 0xFFFFFFFFFCF9B000
	0x03B4E13C FSUB S0, S8, S0
	0x03B4E140 FSUB S1, S9, S1
	0x03B4E144 FMUL S0, S0, S0
	0x03B4E148 FMUL S1, S1, S1
	0x03B4E14C FADD S0, S0, S1
	0x03B4E150 LDR V1, [X8 + 0xF20]
	0x03B4E154 FSUB S2, S10, S2
	0x03B4E158 FMUL S2, S2, S2
	0x03B4E15C FADD S0, S2, S0
	0x03B4E160 FCMP S0, S1
	0x03B4E164 B.MI 0x3B4E2A8
	0x03B4E168 LDR X0, [X19 + 0x60]
	0x03B4E16C CBZ X0, 0x3B4E38C
	0x03B4E170 MOV X1, X31
	0x03B4E174 BL 0x3C356F8
	0x03B4E178 LDP S3, S4, [X19 + 0x7C]
	0x03B4E17C LDR V5, [X19 + 0x84]
	0x03B4E180 MOV X20, X0
	0x03B4E184 MOV V0.16B, V8.16B
	0x03B4E188 MOV V1.16B, V9.16B
	0x03B4E18C MOV V2.16B, V10.16B
	0x03B4E190 B 0x3B4E290

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {23}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -32833536
	021 Add X8, X8, 3016
	022 Move [X19+24], X8
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X19+16]
	026 Move X9, [X19+32]
	027 Move [X19+24], X8
	028 Move [X19+64], X9
	029 Move X8, -32833536
	030 Add X8, X8, 2868
	031 Move [X19+56], X8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X1, -50536448
	038 Add X1, X1, 3811
	039 Move X0, X31
	040 Call 0x1C17F3C
	041 Move X1, X31
	042 Call 0x1C17DEC

Method: System.Boolean Invoke(System.Single targetLineLength, System.Boolean shouldSmoothPoint, in Unity.Mathematics.float3 unsmoothedTargetPoint, in Unity.Mathematics.float3 lastRenderPoint, ref Unity.Mathematics.float3 newRenderPoint, ref System.Single lineLength)

Disassembly:
	0x03B4E194 LDR X0, [X19 + 0x60]
	0x03B4E198 CBZ X0, 0x3B4E38C
	0x03B4E19C MOV X1, X31
	0x03B4E1A0 BL 0x3C356F8
	0x03B4E1A4 LDR X8, [X19 + 0x68]
	0x03B4E1A8 CBZ X8, 0x3B4E38C

ISIL:
	001 Move X8, [X0+64]
	002 Move X7, [X0+24]
	003 Move X6, [X0+40]
	004 And W1, W1, 1
	005 Move X0, X8
	006 CallNoReturn X7

Method: System.IAsyncResult BeginInvoke(System.Single targetLineLength, System.Boolean shouldSmoothPoint, in Unity.Mathematics.float3 unsmoothedTargetPoint, in Unity.Mathematics.float3 lastRenderPoint, ref Unity.Mathematics.float3 newRenderPoint, ref System.Single lineLength, System.AsyncCallback param_6, System.Object param_7)

Disassembly:
	0x03B4E1AC MOV X20, X0
	0x03B4E1B0 LDR X0, [X8 + 0x50]
	0x03B4E1B4 STR S10, [X31 + 0xC]
	0x03B4E1B8 CBZ X0, 0x3B4E38C
	0x03B4E1BC MOV X1, X31
	0x03B4E1C0 MOV V10.16B, V9.16B
	0x03B4E1C4 MOV V9.16B, V8.16B
	0x03B4E1C8 BL 0x3C3F58C
	0x03B4E1CC ADRP X23, 0x88A000
	0x03B4E1D0 LDP S14, S15, [X19 + 0x70]
	0x03B4E1D4 LDRB W8, [X23 + 0x785]
	0x03B4E1D8 LDR V8, [X19 + 0x78]
	0x03B4E1DC MOV V11.16B, V0.16B
	0x03B4E1E0 MOV V12.16B, V1.16B
	0x03B4E1E4 MOV V13.16B, V2.16B
	0x03B4E1E8 CBNZ W8, 0x3B4E200
	0x03B4E1EC ADRP X0, 0x5A5000
	0x03B4E1F0 LDR X0, [X0 + 0x5A8]
	0x03B4E1F4 BL 0x1C16CF4
	0x03B4E1F8 MOVZ W8, 0x1
	0x03B4E1FC STRB W8, [X23 + 0x785]
	0x03B4E200 LDR X0, [X21]
	0x03B4E204 FSUB S14, S11, S14
	0x03B4E208 FSUB S12, S12, S15
	0x03B4E20C FSUB S11, S13, S8
	0x03B4E210 LDR W8, [X0 + 0xE0]
	0x03B4E214 CBNZ W8, 0x3B4E21C
	0x03B4E218 BL 0x1C16DFC
	0x03B4E21C FMUL S0, S14, S14
	0x03B4E220 FMUL S1, S12, S12
	0x03B4E224 ADRP X8, 0xFFFFFFFFFCF9C000
	0x03B4E228 FADD S0, S0, S1
	0x03B4E22C LDR V1, [X8 + 0x17C]
	0x03B4E230 FMUL S2, S11, S11
	0x03B4E234 FADD S0, S2, S0
	0x03B4E238 FSQRT S0, S0
	0x03B4E23C FCMP S0, S1
	0x03B4E240 B.LE 0x3B4E254
	0x03B4E244 FDIV S3, S14, S0
	0x03B4E248 FDIV S4, S12, S0
	0x03B4E24C FDIV S5, S11, S0
	0x03B4E250 B 0x3B4E284
	0x03B4E254 ADRP X23, 0x88A000
	0x03B4E258 LDRB W8, [X23 + 0x783]
	0x03B4E25C CBNZ W8, 0x3B4E274
	0x03B4E260 ADRP X0, 0x5A5000
	0x03B4E264 LDR X0, [X0 + 0x5A0]
	0x03B4E268 BL 0x1C16CF4
	0x03B4E26C MOVZ W8, 0x1
	0x03B4E270 STRB W8, [X23 + 0x783]
	0x03B4E274 LDR X8, [X22]
	0x03B4E278 LDR X8, [X8 + 0xB8]
	0x03B4E27C LDP S3, S4, [X8]
	0x03B4E280 LDR V5, [X8 + 0x8]
	0x03B4E284 LDR V2, [X31 + 0xC]
	0x03B4E288 MOV V0.16B, V9.16B
	0x03B4E28C MOV V1.16B, V10.16B
	0x03B4E290 MOV X0, X31
	0x03B4E294 BL 0x3C2A810
	0x03B4E298 CBZ X20, 0x3B4E38C
	0x03B4E29C MOV X0, X20
	0x03B4E2A0 MOV X1, X31
	0x03B4E2A4 BL 0x3C3F7AC
	0x03B4E2A8 LDRB W8, [X19 + 0x34]
	0x03B4E2AC LDR V8, [X19 + 0x30]
	0x03B4E2B0 CBZ W8, 0x3B4E338
	0x03B4E2B4 LDR X8, [X19 + 0x68]
	0x03B4E2B8 CBZ X8, 0x3B4E38C
	0x03B4E2BC LDR X0, [X8 + 0x50]
	0x03B4E2C0 CBZ X0, 0x3B4E38C
	0x03B4E2C4 MOV X1, X31
	0x03B4E2C8 BL 0x3C3F58C
	0x03B4E2CC ADRP X20, 0x88A000
	0x03B4E2D0 LDP S12, S13, [X19 + 0x70]
	0x03B4E2D4 LDRB W8, [X20 + 0x85C]
	0x03B4E2D8 LDR V14, [X19 + 0x78]
	0x03B4E2DC MOV V9.16B, V0.16B
	0x03B4E2E0 MOV V10.16B, V1.16B
	0x03B4E2E4 MOV V11.16B, V2.16B
	0x03B4E2E8 CBNZ W8, 0x3B4E300
	0x03B4E2EC ADRP X0, 0x5A5000
	0x03B4E2F0 LDR X0, [X0 + 0x5A8]
	0x03B4E2F4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 And W8, W1, 1
	015 Move [X31+60], S0
	016 Move X29, 0x895000
	017 Move [X31+56], W8
	018 Move X26, 0x5A6000
	019 Move X28, 0x5A6000
	020 Move X27, 0x5D1000
	021 Move W9, [X29+2258]
	022 Move X26, [X26+2704]
	023 Move X28, [X28+2904]
	024 Move X27, [X27+2104]
	025 Move X19, X7
	026 Move X20, X6
	027 Move X22, X5
	028 Move X23, X4
	029 Move X24, X3
	030 Move X25, X2
	031 Move X21, X0
	032 Move TEMP, X9
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {47}
	036 Move X0, 0x5A6000
	037 Move X0, [X0+2904]
	038 Call 0x1C17CF4
	039 Move X0, 0x5A6000
	040 Move X0, [X0+2704]
	041 Call 0x1C17CF4
	042 Move X0, 0x5D1000
	043 Move X0, [X0+2104]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X29+2258], W8
	047 Move X0, [X26]
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Add X1, X31, 60
	050 Move [X31+48], X31
	051 Move [X31+16], V0
	052 Move [X31+24], V0
	053 Move [X31], V0
	054 Call 0x1C17E04
	055 Move X8, [X28]
	056 Move [X31], X0
	057 Add X1, X31, 56
	058 Move X0, X8
	059 Call 0x1C17E04
	060 Move X8, [X27]
	061 Move [X31+8], X0
	062 Move X1, X25
	063 Move X0, X8
	064 Call 0x1C17E04
	065 Move X8, [X27]
	066 Move [X31+16], X0
	067 Move X1, X24
	068 Move X0, X8
	069 Call 0x1C17E04
	070 Move X8, [X27]
	071 Move [X31+24], X0
	072 Move X1, X23
	073 Move X0, X8
	074 Call 0x1C17E04
	075 Move X8, [X26]
	076 Move [X31+32], X0
	077 Move X1, X22
	078 Move X0, X8
	079 Call 0x1C17E04
	080 Move [X31+40], X0
	081 Add X1, X31, 0
	082 Move X0, X21
	083 Move X2, X20
	084 Move X3, X19
	085 Call 0x1C17CB0
	086 Move X20, [X31+144]
	087 Move X19, [X31+152]
	088 Move X22, [X31+128]
	089 Move X21, [X31+136]
	090 Move X24, [X31+112]
	091 Move X23, [X31+120]
	092 Move X26, [X31+96]
	093 Move X25, [X31+104]
	094 Move X28, [X31+80]
	095 Move X27, [X31+88]
	096 Move X29, [X31+64]
	097 Move X30, [X31+72]
	098 Add X31, X31, 160
	099 Return X0

Method: System.Boolean EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B4E2F8 MOVZ W8, 0x1
	0x03B4E2FC STRB W8, [X20 + 0x85C]
	0x03B4E300 LDR X0, [X21]
	0x03B4E304 FSUB S12, S9, S12
	0x03B4E308 FSUB S10, S10, S13
	0x03B4E30C FSUB S9, S11, S14
	0x03B4E310 LDR W8, [X0 + 0xE0]
	0x03B4E314 CBNZ W8, 0x3B4E31C
	0x03B4E318 BL 0x1C16DFC
	0x03B4E31C FMUL S0, S12, S12

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move W0, [X0]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

