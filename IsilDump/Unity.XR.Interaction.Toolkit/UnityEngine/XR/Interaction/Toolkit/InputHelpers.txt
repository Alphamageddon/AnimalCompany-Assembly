Type: UnityEngine.XR.Interaction.Toolkit.InputHelpers

Method: System.Boolean IsPressed(UnityEngine.XR.InputDevice device, UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button button, out System.Boolean isPressed, System.Single pressThreshold = -1)

Disassembly:
	0x03B861AC CBZ X21, 0x3B860FC
	0x03B861B0 MOV X0, X21
	0x03B861B4 BL 0x1C16F18
	0x03B861B8 MOV X21, X31
	0x03B861BC B 0x3B861C4
	0x03B861C0 MOV X20, X0
	0x03B861C4 ADRP X8, 0x5D5000
	0x03B861C8 LDR X8, [X8 + 0xD8]
	0x03B861CC LDR X1, [X8]
	0x03B861D0 ADD X0, X31, 0x20
	0x03B861D4 BL 0x2BC434C
	0x03B861D8 CBNZ X21, 0x3B861E4
	0x03B861DC MOV X0, X20
	0x03B861E0 BL 0x1D2C690
	0x03B861E4 MOV X0, X21
	0x03B861E8 BL 0x1C16F18
	0x03B861EC BL 0x1990590
	0x03B861F0 STR D8, [X31 - 0x30]!
	0x03B861F4 STR X30, [X31 + 0x8]
	0x03B861F8 STP X22, X21, [X31 + 0x10]
	0x03B861FC STP X20, X19, [X31 + 0x20]
	0x03B86200 ADRP X22, 0x85C000
	0x03B86204 ADRP X21, 0x596000
	0x03B86208 LDRB W8, [X22 + 0xAF8]
	0x03B8620C LDR X21, [X21 + 0x4F8]
	0x03B86210 MOV X19, X1
	0x03B86214 MOV X20, X0
	0x03B86218 TBNZ X8, 0x0, 0x3B8623C
	0x03B8621C ADRP X0, 0x5D6000
	0x03B86220 LDR X0, [X0 + 0x60]
	0x03B86224 BL 0x1C16CF4
	0x03B86228 ADRP X0, 0x596000
	0x03B8622C LDR X0, [X0 + 0x4F8]
	0x03B86230 BL 0x1C16CF4
	0x03B86234 MOVZ W8, 0x1
	0x03B86238 STRB W8, [X22 + 0xAF8]
	0x03B8623C LDR X0, [X21]
	0x03B86240 LDR W8, [X0 + 0xE0]
	0x03B86244 CBNZ W8, 0x3B86250
	0x03B86248 BL 0x1C16DFC
	0x03B8624C LDR X0, [X21]
	0x03B86250 LDR X8, [X0 + 0xB8]
	0x03B86254 LDR X0, [X8]
	0x03B86258 CBZ X0, 0x3B862B8
	0x03B8625C ADRP X22, 0x5D6000
	0x03B86260 LDR X22, [X22 + 0x60]
	0x03B86264 MOV X1, X20
	0x03B86268 LDR X2, [X22]
	0x03B8626C BL 0x2AB4A08
	0x03B86270 LDR X8, [X21]
	0x03B86274 LDR X8, [X8 + 0xB8]
	0x03B86278 LDR X0, [X8]
	0x03B8627C CBZ X0, 0x3B862B8
	0x03B86280 LDR X2, [X22]
	0x03B86284 MOV X1, X19
	0x03B86288 MOV V8.16B, V0.16B
	0x03B8628C BL 0x2AB4A08
	0x03B86290 FCMP S8, S0
	0x03B86294 B.GT 0x3B862A0
	0x03B86298 CSINV W0, W31, W31, PL
	0x03B8629C B 0x3B862A4
	0x03B862A0 MOVZ W0, 0x1
	0x03B862A4 LDP X20, X19, [X31 + 0x20]
	0x03B862A8 LDP X22, X21, [X31 + 0x10]
	0x03B862AC LDR X30, [X31 + 0x8]
	0x03B862B0 LDR V8, [X31], #0x30
	0x03B862B4 RET
	0x03B862B8 BL 0x1C16F20
	0x03B862BC STR X30, [X31 - 0x40]!
	0x03B862C0 STP X24, X23, [X31 + 0x10]
	0x03B862C4 STP X22, X21, [X31 + 0x20]
	0x03B862C8 STP X20, X19, [X31 + 0x30]
	0x03B862CC ADRP X23, 0x85C000
	0x03B862D0 ADRP X24, 0x5D4000
	0x03B862D4 ADRP X19, 0x5D4000
	0x03B862D8 ADRP X20, 0x596000
	0x03B862DC ADRP X22, 0x5D6000
	0x03B862E0 ADRP X21, 0x5D6000
	0x03B862E4 LDRB W8, [X23 + 0xAF9]
	0x03B862E8 LDR X24, [X24 + 0xCA0]
	0x03B862EC LDR X19, [X19 + 0xC88]
	0x03B862F0 LDR X20, [X20 + 0x4F8]
	0x03B862F4 LDR X22, [X22 + 0x68]
	0x03B862F8 LDR X21, [X21 + 0x70]
	0x03B862FC TBNZ X8, 0x0, 0x3B86344
	0x03B86300 ADRP X0, 0x5D6000
	0x03B86304 LDR X0, [X0 + 0x68]
	0x03B86308 BL 0x1C16CF4
	0x03B8630C ADRP X0, 0x5D4000
	0x03B86310 LDR X0, [X0 + 0xC88]
	0x03B86314 BL 0x1C16CF4
	0x03B86318 ADRP X0, 0x5D4000
	0x03B8631C LDR X0, [X0 + 0xCA0]
	0x03B86320 BL 0x1C16CF4
	0x03B86324 ADRP X0, 0x5D6000
	0x03B86328 LDR X0, [X0 + 0x70]
	0x03B8632C BL 0x1C16CF4
	0x03B86330 ADRP X0, 0x596000
	0x03B86334 LDR X0, [X0 + 0x4F8]
	0x03B86338 BL 0x1C16CF4
	0x03B8633C MOVZ W8, 0x1
	0x03B86340 STRB W8, [X23 + 0xAF9]
	0x03B86344 LDR X0, [X24]
	0x03B86348 BL 0x1C16F10
	0x03B8634C LDR X1, [X19]
	0x03B86350 MOV X19, X0
	0x03B86354 BL 0x2AB41F4
	0x03B86358 LDR X8, [X20]
	0x03B8635C LDR X8, [X8 + 0xB8]
	0x03B86360 STR X19, [X8]
	0x03B86364 LDR X0, [X22]
	0x03B86368 BL 0x1C16F10
	0x03B8636C LDR X2, [X21]
	0x03B86370 MOV X1, X31
	0x03B86374 MOV X3, X31
	0x03B86378 MOV X19, X0
	0x03B8637C BL 0x295A080
	0x03B86380 LDR X8, [X20]
	0x03B86384 LDP X22, X21, [X31 + 0x20]
	0x03B86388 LDP X24, X23, [X31 + 0x10]
	0x03B8638C LDR X8, [X8 + 0xB8]
	0x03B86390 STR X19, [X8 + 0x8]
	0x03B86394 LDP X20, X19, [X31 + 0x30]
	0x03B86398 LDR X30, [X31], #0x40
	0x03B8639C RET
	0x03B863A0 STP X30, X21, [X31 - 0x20]!
	0x03B863A4 STP X20, X19, [X31 + 0x10]
	0x03B863A8 ADRP X21, 0x85C000
	0x03B863AC ADRP X20, 0x56D000
	0x03B863B0 LDRB W8, [X21 + 0xAFA]
	0x03B863B4 LDR X20, [X20 + 0xA28]
	0x03B863B8 MOV X19, X0
	0x03B863BC TBNZ X8, 0x0, 0x3B863F8
	0x03B863C0 ADRP X0, 0x56D000
	0x03B863C4 LDR X0, [X0 + 0xA28]
	0x03B863C8 BL 0x1C16CF4
	0x03B863CC ADRP X0, 0x5D1000
	0x03B863D0 LDR X0, [X0 + 0xB0]
	0x03B863D4 BL 0x1C16CF4
	0x03B863D8 ADRP X0, 0x56D000
	0x03B863DC LDR X0, [X0 + 0x598]
	0x03B863E0 BL 0x1C16CF4
	0x03B863E4 ADRP X0, 0x5D6000
	0x03B863E8 LDR X0, [X0 + 0x78]
	0x03B863EC BL 0x1C16CF4
	0x03B863F0 MOVZ W8, 0x1
	0x03B863F4 STRB W8, [X21 + 0xAFA]
	0x03B863F8 LDR X0, [X20]
	0x03B863FC ADRP X20, 0x5D6000
	0x03B86400 ADRP X21, 0x56D000
	0x03B86404 LDR W8, [X0 + 0xE0]
	0x03B86408 LDR X20, [X20 + 0x78]
	0x03B8640C LDR X21, [X21 + 0x598]
	0x03B86410 CBNZ W8, 0x3B86418
	0x03B86414 BL 0x1C16DFC
	0x03B86418 LDR X0, [X20]
	0x03B8641C MOV X1, X19
	0x03B86420 MOV X2, X31
	0x03B86424 BL 0x3C06B0C
	0x03B86428 LDR X0, [X21]
	0x03B8642C LDR X20, [X19 + 0x20]
	0x03B86430 LDR W8, [X0 + 0xE0]
	0x03B86434 CBNZ W8, 0x3B8643C
	0x03B86438 BL 0x1C16DFC
	0x03B8643C MOV X0, X20
	0x03B86440 MOV X1, X31
	0x03B86444 MOV X2, X31
	0x03B86448 BL 0x3C3883C
	0x03B8644C TBZ X0, 0x0, 0x3B86494
	0x03B86450 LDR X0, [X21]
	0x03B86454 LDR X20, [X19 + 0x58]
	0x03B86458 LDR W8, [X0 + 0xE0]
	0x03B8645C CBNZ W8, 0x3B86464
	0x03B86460 BL 0x1C16DFC
	0x03B86464 MOV X0, X20
	0x03B86468 MOV X1, X31
	0x03B8646C MOV X2, X31
	0x03B86470 BL 0x3C354F8
	0x03B86474 TBZ X0, 0x0, 0x3B86494
	0x03B86478 LDR X0, [X19 + 0x58]
	0x03B8647C CBZ X0, 0x3B864A8
	0x03B86480 ADRP X8, 0x5D1000
	0x03B86484 LDR X8, [X8 + 0xB0]
	0x03B86488 LDR X1, [X8]
	0x03B8648C BL 0x21E52E4
	0x03B86490 STR X0, [X19 + 0x20]
	0x03B86494 MOV X0, X19
	0x03B86498 LDP X20, X19, [X31 + 0x10]
	0x03B8649C MOV X1, X31
	0x03B864A0 LDP X30, X21, [X31], #0x20
	0x03B864A4 B 0x3B30230
	0x03B864A8 BL 0x1C16F20
	0x03B864AC LDR X0, [X0 + 0x38]
	0x03B864B0 RET
	0x03B864B4 STR X1, [X0 + 0x38]
	0x03B864B8 RET
	0x03B864BC LDR X0, [X0 + 0x58]
	0x03B864C0 RET
	0x03B864C4 STR X30, [X31 - 0x30]!
	0x03B864C8 STP X22, X21, [X31 + 0x10]
	0x03B864CC STP X20, X19, [X31 + 0x20]
	0x03B864D0 ADRP X22, 0x85C000
	0x03B864D4 ADRP X21, 0x56D000
	0x03B864D8 LDRB W8, [X22 + 0xAFB]
	0x03B864DC LDR X21, [X21 + 0x598]
	0x03B864E0 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], D8
	003 Move [X31+72], X30
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x85D000
	009 Move [X31+48], X0
	010 Move [X31+56], X1
	011 Move X21, 0x574000
	012 Move W8, [X22+2803]
	013 Move X21, [X21+2248]
	014 Move V8, V0
	015 Move X19, X3
	016 Move W20, W2
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x5D6000
	022 Move X0, [X0+3992]
	023 Call 0x1C17CF4
	024 Move X0, 0x5D6000
	025 Move X0, [X0+4000]
	026 Call 0x1C17CF4
	027 Move X0, 0x5D6000
	028 Move X0, [X0+4008]
	029 Call 0x1C17CF4
	030 Move X0, 0x574000
	031 Move X0, [X0+2248]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2803], W8
	035 Move X0, [X21]
	036 Move [X31+44], W31
	037 Move [X31+40], W31
	038 Move [X31+24], X31
	039 Move [X31+32], X31
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {210}
	051 Move W8, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X0, X31, 48
	054 Move X1, X31
	055 Call InputDevice.get_isValid, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {198}
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move X8, [X8]
	068 Compare X8, 0
	069 JumpIfEqual {210}
	070 Move W9, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X9, W20
	073 Add X9, X8, X9
	074 Move W8, [X9+40]
	075 Subtract W8, W8, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X1, [X9+32]
	078 Move X9, -50257920
	079 Add X9, X9, 3481
	080 NotImplemented "Instruction ADR not yet implemented."
	081 Move W11, [X9]
	082 Add X10, X10, X11
	083 CallNoReturn X10
	084 Move X8, 0x5D6000
	085 Move X8, [X8+4008]
	086 Add X0, X31, 0
	087 Move [X31], X31
	088 Move X2, [X8]
	089 Call 0x2E0E4D8, X0, X1
	090 Move X1, [X31]
	091 Add X0, X31, 48
	092 Add X2, X31, 44
	093 Move X3, X31
	094 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	095 Move W8, [X31+44]
	096 And W31, W0, 1
	097 NotImplemented "Instruction CSEL not yet implemented."
	098 Move X8, 0x5D6000
	099 Move X8, [X8+4000]
	100 Add X0, X31, 0
	101 Move [X31], X31
	102 Move X2, [X8]
	103 Call InputFeatureUsage`1<Single>..ctor, X0, X1
	104 Move X1, [X31]
	105 Add X0, X31, 48
	106 Add X2, X31, 40
	107 Move X3, X31
	108 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {198}
	113 Move X8, -50966528
	114 Move V0, [X8+188]
	115 Move V1, [X31+40]
	116 Move X8, 0x5D6000
	117 Move X8, [X8+3992]
	118 Add X0, X31, 0
	119 Move [X31], X31
	120 Move X2, [X8]
	121 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	122 Move X1, [X31]
	123 Add X0, X31, 48
	124 Add X2, X31, 32
	125 Move X3, X31
	126 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {198}
	131 Move X8, -50966528
	132 Move V0, [X8+188]
	133 Move V1, [X31+36]
	134 Move X8, 0x5D6000
	135 Move X8, [X8+3992]
	136 Add X0, X31, 0
	137 Move [X31], X31
	138 Move X2, [X8]
	139 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	140 Move X1, [X31]
	141 Add X0, X31, 48
	142 Add X2, X31, 24
	143 Move X3, X31
	144 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {198}
	149 Move X8, -50966528
	150 Move V0, [X8+188]
	151 Move V1, [X31+28]
	152 Move X8, 0x5D6000
	153 Move X8, [X8+3992]
	154 Add X0, X31, 0
	155 Move [X31], X31
	156 Move X2, [X8]
	157 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	158 Move X1, [X31]
	159 Add X0, X31, 48
	160 Add X2, X31, 16
	161 Move X3, X31
	162 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {198}
	167 Move X8, -50966528
	168 Move V0, [X8+188]
	169 Move V1, [X31+16]
	170 NotImplemented "Instruction FCMP not yet implemented."
	171 NotImplemented "Instruction FCSEL not yet implemented."
	172 NotImplemented "Instruction FNEG not yet implemented."
	173 NotImplemented "Instruction FCMP not yet implemented."
	174 NotImplemented "Instruction CSET not yet implemented."
	175 Move X8, 0x5D6000
	176 Move X8, [X8+3992]
	177 Add X0, X31, 0
	178 Move [X31], X31
	179 Move X2, [X8]
	180 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	181 Move X1, [X31]
	182 Add X0, X31, 48
	183 Add X2, X31, 8
	184 Move X3, X31
	185 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {198}
	190 Move X8, -50966528
	191 Move V0, [X8+188]
	192 Move V1, [X31+8]
	193 NotImplemented "Instruction FCMP not yet implemented."
	194 NotImplemented "Instruction FCSEL not yet implemented."
	195 NotImplemented "Instruction FCMP not yet implemented."
	196 NotImplemented "Instruction CSET not yet implemented."
	197 Move W0, 1
	198 Move W8, W31
	199 Move W0, W31
	200 Move [X19], W8
	201 Move X20, [X31+96]
	202 Move X19, [X31+104]
	203 Move X22, [X31+80]
	204 Move X21, [X31+88]
	205 Move X30, [X31+72]
	206 Move V8, [X31+64]
	207 And W0, W0, 1
	208 Add X31, X31, 112
	209 Return X0
	210 Call 0x1C17F20
	211 Move X0, 0x576000
	212 Move X0, [X0+1400]
	213 Call 0x1C17D08
	214 Call 0x1C17F10
	215 Move X19, X0
	216 Move X0, 0x5D6000
	217 Move X0, [X0+4016]
	218 Call 0x1C17D08
	219 Move X1, X0
	220 Move X0, X19
	221 Move X2, X31
	222 Call ArgumentException..ctor, X0, X1
	223 Move X0, 0x5D6000
	224 Move X0, [X0+4024]
	225 Call 0x1C17D08
	226 Move X1, X0
	227 Move X0, X19
	228 Call 0x1C17DEC
	229 Call 0x1C17F28

Method: System.Boolean TryReadSingleValue(UnityEngine.XR.InputDevice device, UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button button, out System.Single singleValue)

Disassembly:
	0x03B864E4 MOV X19, X0
	0x03B864E8 TBNZ X8, 0x0, 0x3B8650C
	0x03B864EC ADRP X0, 0x5D1000
	0x03B864F0 LDR X0, [X0 + 0xB0]
	0x03B864F4 BL 0x1C16CF4
	0x03B864F8 ADRP X0, 0x56D000
	0x03B864FC LDR X0, [X0 + 0x598]
	0x03B86500 BL 0x1C16CF4
	0x03B86504 MOVZ W8, 0x1
	0x03B86508 STRB W8, [X22 + 0xAFB]
	0x03B8650C STR X20, [X19 + 0x58]
	0x03B86510 LDR X0, [X21]
	0x03B86514 LDR W8, [X0 + 0xE0]
	0x03B86518 CBNZ W8, 0x3B86520
	0x03B8651C BL 0x1C16DFC
	0x03B86520 MOV X0, X20
	0x03B86524 MOV X1, X31
	0x03B86528 MOV X2, X31
	0x03B8652C BL 0x3C354F8
	0x03B86530 MOV W8, W0
	0x03B86534 MOV X0, X31
	0x03B86538 TBZ X8, 0x0, 0x3B86554
	0x03B8653C CBZ X20, 0x3B86568
	0x03B86540 ADRP X8, 0x5D1000
	0x03B86544 LDR X8, [X8 + 0xB0]
	0x03B86548 MOV X0, X20
	0x03B8654C LDR X1, [X8]
	0x03B86550 BL 0x21E52E4
	0x03B86554 STR X0, [X19 + 0x20]
	0x03B86558 LDP X20, X19, [X31 + 0x20]
	0x03B8655C LDP X22, X21, [X31 + 0x10]
	0x03B86560 LDR X30, [X31], #0x30
	0x03B86564 RET
	0x03B86568 BL 0x1C16F20
	0x03B8656C LDR X0, [X0 + 0x40]
	0x03B86570 RET
	0x03B86574 MOV X2, X31
	0x03B86578 B 0x3B2F228
	0x03B8657C LDR W0, [X0 + 0x48]
	0x03B86580 RET
	0x03B86584 MOV X2, X31
	0x03B86588 B 0x3B2F2C4
	0x03B8658C LDR V0, [X0 + 0x4C]
	0x03B86590 RET
	0x03B86594 MOV X1, X31
	0x03B86598 B 0x3B2F370
	0x03B8659C LDR W0, [X0 + 0x50]
	0x03B865A0 RET
	0x03B865A4 MOV X1, X31
	0x03B865A8 B 0x3B2F388
	0x03B865AC MOV X1, X31
	0x03B865B0 B 0x3B2F3DC
	0x03B865B4 MOV X1, X31
	0x03B865B8 B 0x3B2F430
	0x03B865BC MOV X1, X31
	0x03B865C0 B 0x3B2FA64
	0x03B865C4 MOV X1, X31
	0x03B865C8 B 0x3B2FBBC
	0x03B865CC MOV X1, X31
	0x03B865D0 B 0x3B2FD88
	0x03B865D4 MOV X1, X31
	0x03B865D8 B 0x3B2FFE8
	0x03B865DC STP X30, X21, [X31 - 0x20]!
	0x03B865E0 STP X20, X19, [X31 + 0x10]
	0x03B865E4 ADRP X20, 0x85C000
	0x03B865E8 ADRP X21, 0x5D3000
	0x03B865EC LDRB W8, [X20 + 0xAFC]
	0x03B865F0 LDR X21, [X21 + 0xE68]
	0x03B865F4 MOV X19, X0
	0x03B865F8 TBNZ X8, 0x0, 0x3B86610
	0x03B865FC ADRP X0, 0x5D3000
	0x03B86600 LDR X0, [X0 + 0xE68]
	0x03B86604 BL 0x1C16CF4
	0x03B86608 MOVZ W8, 0x1
	0x03B8660C STRB W8, [X20 + 0xAFC]
	0x03B86610 LDR X0, [X21]
	0x03B86614 LDR W8, [X0 + 0xE0]
	0x03B86618 CBNZ W8, 0x3B86620
	0x03B8661C BL 0x1C16DFC
	0x03B86620 MOV X0, X19
	0x03B86624 LDP X20, X19, [X31 + 0x10]
	0x03B86628 MOV X1, X31
	0x03B8662C LDP X30, X21, [X31], #0x20
	0x03B86630 B 0x3B30E24
	0x03B86634 STR X30, [X31 - 0x20]!
	0x03B86638 STP X20, X19, [X31 + 0x10]
	0x03B8663C ADRP X19, 0x85C000
	0x03B86640 ADRP X20, 0x5D6000
	0x03B86644 LDRB W8, [X19 + 0xAFD]
	0x03B86648 LDR X20, [X20 + 0x80]
	0x03B8664C TBNZ X8, 0x0, 0x3B86664
	0x03B86650 ADRP X0, 0x5D6000
	0x03B86654 LDR X0, [X0 + 0x80]
	0x03B86658 BL 0x1C16CF4
	0x03B8665C MOVZ W8, 0x1
	0x03B86660 STRB W8, [X19 + 0xAFD]
	0x03B86664 LDR X0, [X20]
	0x03B86668 LDP X20, X19, [X31 + 0x10]
	0x03B8666C LDR X30, [X31], #0x20
	0x03B86670 RET
	0x03B86674 SUB X31, X31, 0x50
	0x03B86678 STR D12, [X31 + 0x10]
	0x03B8667C STP D11, D10, [X31 + 0x18]
	0x03B86680 STP D9, D8, [X31 + 0x28]
	0x03B86684 STR X30, [X31 + 0x38]
	0x03B86688 STP X20, X19, [X31 + 0x40]
	0x03B8668C ADRP X20, 0x85B000
	0x03B86690 LDR V9, [X2]
	0x03B86694 LDR V10, [X2 + 0x8]
	0x03B86698 LDR V11, [X0]
	0x03B8669C LDRB W8, [X20 + 0x585]
	0x03B866A0 LDR V12, [X0 + 0x8]
	0x03B866A4 MOV V8.16B, V0.16B
	0x03B866A8 MOV X19, X1
	0x03B866AC CBNZ W8, 0x3B866C4
	0x03B866B0 ADRP X0, 0x56D000
	0x03B866B4 LDR X0, [X0 + 0x5A8]
	0x03B866B8 BL 0x1C16CF4
	0x03B866BC MOVZ W8, 0x1
	0x03B866C0 STRB W8, [X20 + 0x585]
	0x03B866C4 ADRP X8, 0x56D000
	0x03B866C8 LDR X8, [X8 + 0x5A8]
	0x03B866CC FSUB V11.2S, V9.2S, V11.2S
	0x03B866D0 FSUB S9, S10, S12
	0x03B866D4 LDR X0, [X8]
	0x03B866D8 LDR W8, [X0 + 0xE0]
	0x03B866DC CBNZ W8, 0x3B866E4
	0x03B866E0 BL 0x1C16DFC
	0x00000000 INVALID
	0x03B866E8 FMUL S0, S9, S9
	0x03B866EC FADDP S1, V1.2S
	0x03B866F0 FADD S0, S0, S1
	0x03B866F4 FMOV S2, 1
	0x03B866F8 FSQRT S0, S0
	0x03B866FC FDIV S0, S2, S0
	0x00000000 INVALID
	0x03B86704 FMUL S0, S9, S0
	0x03B86708 STR S0, [X31 + 0x8]
	0x03B8670C ADD X1, X31, 0x0
	0x03B86710 MOV X0, X19
	0x03B86714 MOV V0.16B, V8.16B
	0x03B86718 STR D1, [X31]
	0x03B8671C BL 0x3B86744
	0x03B86720 LDP X20, X19, [X31 + 0x40]
	0x03B86724 LDR X30, [X31 + 0x38]
	0x03B86728 LDP D9, D8, [X31 + 0x28]
	0x03B8672C LDP D11, D10, [X31 + 0x18]
	0x03B86730 LDR V12, [X31 + 0x10]
	0x03B86734 ORN W8, W31, W0, 0x0
	0x03B86738 AND W0, W8, 0x1
	0x03B8673C ADD X31, X31, 0x50
	0x03B86740 RET
	0x03B86744 STR D8, [X31 - 0x30]!
	0x03B86748 STP X30, X21, [X31 + 0x10]
	0x03B8674C STP X20, X19, [X31 + 0x20]
	0x03B86750 ADRP X21, 0x85B000
	0x03B86754 LDRB W8, [X21 + 0x564]
	0x03B86758 MOV V8.16B, V0.16B
	0x03B8675C MOV X19, X1
	0x03B86760 MOV X20, X0
	0x03B86764 CBNZ W8, 0x3B8677C
	0x03B86768 ADRP X0, 0x56D000
	0x03B8676C LDR X0, [X0 + 0x5A8]
	0x03B86770 BL 0x1C16CF4
	0x03B86774 MOVZ W8, 0x1
	0x03B86778 STRB W8, [X21 + 0x564]
	0x03B8677C ADRP X8, 0x56D000
	0x03B86780 LDR X8, [X8 + 0x5A8]
	0x03B86784 LDR X0, [X8]
	0x03B86788 LDR W8, [X0 + 0xE0]
	0x03B8678C CBNZ W8, 0x3B86794
	0x03B86790 BL 0x1C16DFC
	0x03B86794 ADRP X8, 0xFFFFFFFFFCF64000
	0x03B86798 LDR V0, [X8 + 0x104]
	0x03B8679C FMUL S0, S8, S0
	0x03B867A0 FCVT S0, S0
	0x03B867A4 BL 0x3EB1BF0
	0x03B867A8 LDR V1, [X19]
	0x03B867AC LDUR V2, [X19 + 0x4]
	0x03B867B0 LDR V3, [X20]
	0x03B867B4 LDUR V4, [X20 + 0x4]
	0x03B867B8 LDP X20, X19, [X31 + 0x20]
	0x03B867BC LDP X30, X21, [X31 + 0x10]
	0x03B867C0 FMUL S1, S1, S3
	0x00000000 INVALID
	0x03B867C8 FADD S1, S1, S2
	0x03B867CC MOV S2, V2.S[1]
	0x00000000 INVALID
	0x03B867D4 FADD S1, S2, S1
	0x03B867D8 FCMP S1, S0
	0x03B867DC CSET W0, GT
	0x03B867E0 LDR V8, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], D8
	003 Move [X31+72], X30
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x85D000
	009 Move [X31+48], X0
	010 Move [X31+56], X1
	011 Move X21, 0x574000
	012 Move W8, [X22+2804]
	013 Move X21, [X21+2248]
	014 Move X19, X3
	015 Move W20, W2
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x5D6000
	021 Move X0, [X0+3992]
	022 Call 0x1C17CF4
	023 Move X0, 0x5D6000
	024 Move X0, [X0+4000]
	025 Call 0x1C17CF4
	026 Move X0, 0x5D6000
	027 Move X0, [X0+4008]
	028 Call 0x1C17CF4
	029 Move X0, 0x574000
	030 Move X0, [X0+2248]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2804], W8
	034 Move X0, [X21]
	035 Move [X31+44], W31
	036 Move [X31+40], W31
	037 Move [X31+24], X31
	038 Move [X31+32], X31
	039 Move [X31+8], X31
	040 Move [X31+16], X31
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move X8, [X8]
	048 Compare X8, 0
	049 JumpIfEqual {196}
	050 Move W8, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X0, X31, 48
	053 Move X1, X31
	054 Call InputDevice.get_isValid, X0
	055 Move S8, W31
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {185}
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X21]
	066 Move X8, [X0+184]
	067 Move X8, [X8]
	068 Compare X8, 0
	069 JumpIfEqual {196}
	070 Move W9, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X9, W20
	073 Add X9, X8, X9
	074 Move W8, [X9+40]
	075 Subtract W8, W8, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X1, [X9+32]
	078 Move X9, -50257920
	079 Add X9, X9, 3487
	080 NotImplemented "Instruction ADR not yet implemented."
	081 Move W11, [X9]
	082 Add X10, X10, X11
	083 CallNoReturn X10
	084 Move X8, 0x5D6000
	085 Move X8, [X8+4008]
	086 Add X0, X31, 0
	087 Move [X31], X31
	088 Move X2, [X8]
	089 Call 0x2E0E4D8, X0, X1
	090 Move X1, [X31]
	091 Add X0, X31, 48
	092 Add X2, X31, 44
	093 Move X3, X31
	094 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {185}
	099 Move W8, [X31+44]
	100 Move S0, 1
	101 Move S1, W31
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction FCSEL not yet implemented."
	104 Move X8, 0x5D6000
	105 Move X8, [X8+4000]
	106 Add X0, X31, 0
	107 Move [X31], X31
	108 Move X2, [X8]
	109 Call InputFeatureUsage`1<Single>..ctor, X0, X1
	110 Move X1, [X31]
	111 Add X0, X31, 48
	112 Add X2, X31, 40
	113 Move X3, X31
	114 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	115 Move V0, [X31+40]
	116 And W31, W0, 1
	117 Move S1, W31
	118 NotImplemented "Instruction FCSEL not yet implemented."
	119 Move X8, 0x5D6000
	120 Move X8, [X8+3992]
	121 Add X0, X31, 0
	122 Move [X31], X31
	123 Move X2, [X8]
	124 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	125 Move X1, [X31]
	126 Add X0, X31, 48
	127 Add X2, X31, 32
	128 Move X3, X31
	129 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {185}
	134 Move V8, [X31+36]
	135 Move X8, 0x5D6000
	136 Move X8, [X8+3992]
	137 Add X0, X31, 0
	138 Move [X31], X31
	139 Move X2, [X8]
	140 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	141 Move X1, [X31]
	142 Add X0, X31, 48
	143 Add X2, X31, 24
	144 Move X3, X31
	145 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {185}
	150 Move V0, [X31+28]
	151 Move X8, 0x5D6000
	152 Move X8, [X8+3992]
	153 Add X0, X31, 0
	154 Move [X31], X31
	155 Move X2, [X8]
	156 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	157 Move X1, [X31]
	158 Add X0, X31, 48
	159 Add X2, X31, 16
	160 Move X3, X31
	161 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {185}
	166 Move V0, [X31+16]
	167 NotImplemented "Instruction FNEG not yet implemented."
	168 Move X8, 0x5D6000
	169 Move X8, [X8+3992]
	170 Add X0, X31, 0
	171 Move [X31], X31
	172 Move X2, [X8]
	173 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	174 Move X1, [X31]
	175 Add X0, X31, 48
	176 Add X2, X31, 8
	177 Move X3, X31
	178 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {185}
	183 Move V8, [X31+8]
	184 Move W0, 1
	185 Move W0, W31
	186 Move [X19], S8
	187 Move X20, [X31+96]
	188 Move X19, [X31+104]
	189 Move X22, [X31+80]
	190 Move X21, [X31+88]
	191 Move X30, [X31+72]
	192 Move V8, [X31+64]
	193 And W0, W0, 1
	194 Add X31, X31, 112
	195 Return X0
	196 Call 0x1C17F20
	197 Move X0, 0x576000
	198 Move X0, [X0+1400]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X19, X0
	202 Move X0, 0x5D6000
	203 Move X0, [X0+4032]
	204 Call 0x1C17D08
	205 Move X1, X0
	206 Move X0, X19
	207 Move X2, X31
	208 Call ArgumentException..ctor, X0, X1
	209 Move X0, 0x5D6000
	210 Move X0, [X0+4040]
	211 Call 0x1C17D08
	212 Move X1, X0
	213 Move X0, X19
	214 Call 0x1C17DEC
	215 Call 0x1C17F28

Method: System.Boolean TryReadAxis2DValue(UnityEngine.XR.InputDevice device, UnityEngine.XR.Interaction.Toolkit.InputHelpers/Axis2D axis2D, out UnityEngine.Vector2 value)

Disassembly:
	0x03B867E4 RET
	0x03B867E8 STR D12, [X31 - 0x40]!
	0x03B867EC STP D11, D10, [X31 + 0x10]
	0x03B867F0 STP D9, D8, [X31 + 0x20]
	0x03B867F4 STP X30, X19, [X31 + 0x30]
	0x03B867F8 ADRP X19, 0x85B000
	0x03B867FC LDR V9, [X1]
	0x03B86800 LDUR V10, [X1 + 0x4]
	0x03B86804 LDR V11, [X0]
	0x03B86808 LDRB W8, [X19 + 0x585]
	0x03B8680C LDUR V12, [X0 + 0x4]
	0x03B86810 MOV V8.16B, V0.16B
	0x03B86814 CBNZ W8, 0x3B8682C
	0x03B86818 ADRP X0, 0x56D000
	0x03B8681C LDR X0, [X0 + 0x5A8]
	0x03B86820 BL 0x1C16CF4
	0x03B86824 MOVZ W8, 0x1
	0x03B86828 STRB W8, [X19 + 0x585]
	0x03B8682C ADRP X8, 0x56D000
	0x03B86830 LDR X8, [X8 + 0x5A8]
	0x03B86834 FSUB S11, S9, S11
	0x03B86838 FSUB V9.2S, V10.2S, V12.2S
	0x03B8683C LDR X0, [X8]
	0x03B86840 LDR W8, [X0 + 0xE0]
	0x03B86844 CBNZ W8, 0x3B8684C
	0x03B86848 BL 0x1C16DFC
	0x03B8684C FMUL S0, S11, S11
	0x00000000 INVALID
	0x03B86854 FADD S0, S0, S1
	0x03B86858 MOV S1, V1.S[1]
	0x03B8685C FADD S0, S1, S0
	0x03B86860 FSQRT S0, S0
	0x03B86864 FCMP S0, S8
	0x03B86868 LDP X30, X19, [X31 + 0x30]
	0x03B8686C LDP D9, D8, [X31 + 0x20]
	0x03B86870 LDP D11, D10, [X31 + 0x10]
	0x03B86874 CSET W0, GT
	0x03B86878 LDR V12, [X31], #0x40
	0x03B8687C RET
	0x03B86880 STP X30, X23, [X31 - 0x30]!
	0x03B86884 STP X22, X21, [X31 + 0x10]
	0x03B86888 STP X20, X19, [X31 + 0x20]
	0x03B8688C ADRP X22, 0x85C000
	0x03B86890 ADRP X23, 0x5D6000
	0x03B86894 LDRB W8, [X22 + 0xAFE]
	0x03B86898 LDR X23, [X23 + 0x88]
	0x03B8689C MOV X19, X2
	0x03B868A0 MOV X20, X1
	0x03B868A4 MOV X21, X0
	0x03B868A8 TBNZ X8, 0x0, 0x3B868C0
	0x03B868AC ADRP X0, 0x5D6000
	0x03B868B0 LDR X0, [X0 + 0x88]
	0x03B868B4 BL 0x1C16CF4
	0x03B868B8 MOVZ W8, 0x1
	0x03B868BC STRB W8, [X22 + 0xAFE]
	0x03B868C0 LDR X0, [X23]
	0x03B868C4 LDR W8, [X0 + 0xE0]
	0x03B868C8 CBNZ W8, 0x3B868D0
	0x03B868CC BL 0x1C16DFC
	0x03B868D0 MOV X0, X21
	0x03B868D4 MOV X1, X20
	0x03B868D8 MOV X2, X19
	0x03B868DC LDP X20, X19, [X31 + 0x20]
	0x03B868E0 LDP X22, X21, [X31 + 0x10]
	0x03B868E4 LDP X30, X23, [X31], #0x30
	0x03B868E8 B 0x3B868EC
	0x03B868EC SUB X31, X31, 0x60
	0x03B868F0 STP X30, X23, [X31 + 0x30]
	0x03B868F4 STP X22, X21, [X31 + 0x40]
	0x03B868F8 STP X20, X19, [X31 + 0x50]
	0x03B868FC ADRP X22, 0x85C000
	0x03B86900 ADRP X23, 0x595000
	0x03B86904 LDRB W8, [X22 + 0xB12]
	0x03B86908 LDR X23, [X23 + 0x848]
	0x03B8690C MOV X19, X2
	0x03B86910 MOV X20, X1
	0x03B86914 MOV X21, X0
	0x03B86918 TBNZ X8, 0x0, 0x3B8693C
	0x03B8691C ADRP X0, 0x595000
	0x03B86920 LDR X0, [X0 + 0x848]
	0x03B86924 BL 0x1C16CF4
	0x03B86928 ADRP X0, 0x5D6000
	0x03B8692C LDR X0, [X0 + 0x88]
	0x03B86930 BL 0x1C16CF4
	0x03B86934 MOVZ W8, 0x1
	0x03B86938 STRB W8, [X22 + 0xB12]
	0x03B8693C LDR X0, [X23]
	0x03B86940 LDR W8, [X0 + 0xE0]
	0x03B86944 CBNZ W8, 0x3B8694C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x85D000
	009 Move [X31], X0
	010 Move X21, 0x574000
	011 Move W8, [X22+2805]
	012 Move X21, [X21+2248]
	013 Move X19, X3
	014 Move W20, W2
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x5D6000
	020 Move X0, [X0+3992]
	021 Call 0x1C17CF4
	022 Move X0, 0x574000
	023 Move X0, [X0+2248]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2805], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X0+184]
	034 Move X8, [X8+8]
	035 Compare X8, 0
	036 JumpIfEqual {85}
	037 Move W8, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X0, X31, 0
	040 Move X1, X31
	041 Call InputDevice.get_isValid, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {76}
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X8, [X8+8]
	054 Compare X8, 0
	055 JumpIfEqual {85}
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, 0x5D6000
	059 Move X9, [X9+3992]
	060 Add X8, X8, W20
	061 Move X1, [X8+32]
	062 Add X0, X31, 24
	063 Move X2, [X9]
	064 Move [X31+24], X31
	065 Call InputFeatureUsage`1<Vector2>..ctor, X0, X1
	066 Move X1, [X31+24]
	067 Add X0, X31, 0
	068 Move X2, X19
	069 Move X3, X31
	070 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {76}
	075 Move W0, 1
	076 Move W0, W31
	077 Move [X19], X31
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X30, [X31+16]
	083 Add X31, X31, 64
	084 Return X0
	085 Call 0x1C17F20
	086 Move X0, 0x576000
	087 Move X0, [X0+1400]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X19, X0
	091 Move X0, 0x5D6000
	092 Move X0, [X0+4048]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Move X2, X31
	097 Call ArgumentException..ctor, X0, X1
	098 Move X0, 0x5D6000
	099 Move X0, [X0+4056]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X19
	103 Call 0x1C17DEC
	104 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03B86948 BL 0x1C16DFC
	0x03B8694C MOV X0, X31
	0x03B86950 BL 0x36FA670
	0x03B86954 TBZ X0, 0x0, 0x3B8699C
	0x03B86958 ADRP X8, 0x5D6000
	0x03B8695C LDR X8, [X8 + 0x88]
	0x03B86960 LDR X0, [X8]
	0x03B86964 LDR W8, [X0 + 0xE0]
	0x03B86968 CBNZ W8, 0x3B86970
	0x03B8696C BL 0x1C16DFC
	0x03B86970 BL 0x3B88AA4
	0x03B86974 CBZ X0, 0x3B8699C
	0x03B86978 MOV X3, X0
	0x03B8697C MOV X0, X21
	0x03B86980 MOV X1, X20
	0x03B86984 MOV X2, X19
	0x03B86988 LDP X20, X19, [X31 + 0x50]
	0x03B8698C LDP X22, X21, [X31 + 0x40]
	0x03B86990 LDP X30, X23, [X31 + 0x30]
	0x03B86994 ADD X31, X31, 0x60
	0x03B86998 BR X3
	0x03B8699C STR W31, [X31 + 0x28]
	0x03B869A0 STR X31, [X31 + 0x20]
	0x03B869A4 LDP S0, S1, [X21]
	0x03B869A8 LDR V2, [X21 + 0x8]
	0x03B869AC MOV X0, X31
	0x03B869B0 BL 0x3887BE4
	0x03B869B4 STP S0, S1, [X31 + 0x10]
	0x03B869B8 STR S2, [X31 + 0x18]
	0x03B869BC LDP S0, S1, [X20]
	0x03B869C0 LDR V2, [X20 + 0x8]
	0x03B869C4 MOV X0, X31
	0x03B869C8 BL 0x3887BE4
	0x03B869CC ADD X0, X31, 0x10
	0x03B869D0 ADD X1, X31, 0x0
	0x03B869D4 ADD X2, X31, 0x20
	0x03B869D8 STP S0, S1, [X31]
	0x03B869DC STR S2, [X31 + 0x8]
	0x03B869E0 BL 0x3B86A10
	0x03B869E4 LDP S0, S1, [X31 + 0x20]
	0x03B869E8 LDR V2, [X31 + 0x28]
	0x03B869EC MOV X0, X31
	0x03B869F0 BL 0x3887BE0
	0x03B869F4 STP S0, S1, [X19]
	0x03B869F8 STR S2, [X19 + 0x8]
	0x03B869FC LDP X20, X19, [X31 + 0x50]
	0x03B86A00 LDP X22, X21, [X31 + 0x40]
	0x03B86A04 LDP X30, X23, [X31 + 0x30]
	0x03B86A08 ADD X31, X31, 0x60
	0x03B86A0C RET
	0x03B86A10 STP X30, X23, [X31 - 0x30]!
	0x03B86A14 STP X22, X21, [X31 + 0x10]
	0x03B86A18 STP X20, X19, [X31 + 0x20]
	0x03B86A1C ADRP X22, 0x85C000
	0x03B86A20 ADRP X23, 0x5D6000
	0x03B86A24 LDRB W8, [X22 + 0xAFF]
	0x03B86A28 LDR X23, [X23 + 0x90]
	0x03B86A2C MOV X19, X2
	0x03B86A30 MOV X20, X1
	0x03B86A34 MOV X21, X0
	0x03B86A38 TBNZ X8, 0x0, 0x3B86A50
	0x03B86A3C ADRP X0, 0x5D6000
	0x03B86A40 LDR X0, [X0 + 0x90]
	0x03B86A44 BL 0x1C16CF4
	0x03B86A48 MOVZ W8, 0x1
	0x03B86A4C STRB W8, [X22 + 0xAFF]
	0x03B86A50 LDR X0, [X23]
	0x03B86A54 LDR W8, [X0 + 0xE0]
	0x03B86A58 CBNZ W8, 0x3B86A60
	0x03B86A5C BL 0x1C16DFC
	0x03B86A60 MOV X0, X21
	0x03B86A64 MOV X1, X20
	0x03B86A68 MOV X2, X19
	0x03B86A6C LDP X20, X19, [X31 + 0x20]
	0x03B86A70 LDP X22, X21, [X31 + 0x10]
	0x03B86A74 LDP X30, X23, [X31], #0x30
	0x03B86A78 B 0x3B86A7C
	0x03B86A7C STP X30, X23, [X31 - 0x30]!
	0x03B86A80 STP X22, X21, [X31 + 0x10]
	0x03B86A84 STP X20, X19, [X31 + 0x20]
	0x03B86A88 ADRP X22, 0x85C000
	0x03B86A8C ADRP X23, 0x595000
	0x03B86A90 LDRB W8, [X22 + 0xB17]
	0x03B86A94 LDR X23, [X23 + 0x848]
	0x03B86A98 MOV X19, X2
	0x03B86A9C MOV X20, X1
	0x03B86AA0 MOV X21, X0
	0x03B86AA4 TBNZ X8, 0x0, 0x3B86AC8
	0x03B86AA8 ADRP X0, 0x595000
	0x03B86AAC LDR X0, [X0 + 0x848]
	0x03B86AB0 BL 0x1C16CF4
	0x03B86AB4 ADRP X0, 0x5D6000
	0x03B86AB8 LDR X0, [X0 + 0x90]
	0x03B86ABC BL 0x1C16CF4
	0x03B86AC0 MOVZ W8, 0x1
	0x03B86AC4 STRB W8, [X22 + 0xB17]
	0x03B86AC8 LDR X0, [X23]
	0x03B86ACC LDR W8, [X0 + 0xE0]
	0x03B86AD0 CBNZ W8, 0x3B86AD8
	0x03B86AD4 BL 0x1C16DFC
	0x03B86AD8 MOV X0, X31
	0x03B86ADC BL 0x36FA670
	0x03B86AE0 TBZ X0, 0x0, 0x3B86B24
	0x03B86AE4 ADRP X8, 0x5D6000
	0x03B86AE8 LDR X8, [X8 + 0x90]
	0x03B86AEC LDR X0, [X8]
	0x03B86AF0 LDR W8, [X0 + 0xE0]
	0x03B86AF4 CBNZ W8, 0x3B86AFC
	0x03B86AF8 BL 0x1C16DFC
	0x03B86AFC BL 0x3B88E50
	0x03B86B00 CBZ X0, 0x3B86B24
	0x03B86B04 MOV X3, X0
	0x03B86B08 MOV X0, X21
	0x03B86B0C MOV X1, X20
	0x03B86B10 MOV X2, X19
	0x03B86B14 LDP X20, X19, [X31 + 0x20]
	0x03B86B18 LDP X22, X21, [X31 + 0x10]
	0x03B86B1C LDP X30, X23, [X31], #0x30
	0x03B86B20 BR X3
	0x03B86B24 LDP S0, S1, [X21]
	0x03B86B28 LDP S2, S3, [X20]
	0x03B86B2C LDR V4, [X20 + 0x8]
	0x03B86B30 LDR V5, [X21 + 0x8]
	0x03B86B34 LDP X22, X21, [X31 + 0x10]
	0x03B86B38 FMUL S6, S0, S3
	0x03B86B3C FMUL S7, S1, S4
	0x03B86B40 FMUL S16, S5, S2
	0x03B86B44 FMUL S2, S1, S2
	0x03B86B48 FMUL S3, S5, S3
	0x03B86B4C FMUL S4, S0, S4
	0x03B86B50 FSUB S2, S6, S2
	0x03B86B54 FSUB S3, S7, S3
	0x03B86B58 FSUB S4, S16, S4
	0x03B86B5C FMUL S6, S1, S3
	0x03B86B60 FMUL S7, S0, S4
	0x03B86B64 FMUL S4, S5, S4
	0x03B86B68 FMUL S1, S1, S2
	0x03B86B6C FMUL S0, S0, S2
	0x03B86B70 FMUL S2, S5, S3
	0x03B86B74 FSUB S3, S6, S7
	0x03B86B78 FSUB S1, S4, S1
	0x03B86B7C FSUB S0, S0, S2
	0x03B86B80 STP S1, S0, [X19]
	0x03B86B84 STR S3, [X19 + 0x8]
	0x03B86B88 LDP X20, X19, [X31 + 0x20]
	0x03B86B8C LDP X30, X23, [X31], #0x30
	0x03B86B90 RET
	0x03B86B94 STP X30, X23, [X31 - 0x30]!
	0x03B86B98 STP X22, X21, [X31 + 0x10]
	0x03B86B9C STP X20, X19, [X31 + 0x20]
	0x03B86BA0 ADRP X22, 0x85C000
	0x03B86BA4 ADRP X23, 0x5D6000
	0x03B86BA8 LDRB W8, [X22 + 0xB00]
	0x03B86BAC LDR X23, [X23 + 0x98]
	0x03B86BB0 MOV X19, X2
	0x03B86BB4 MOV X20, X1
	0x03B86BB8 MOV X21, X0
	0x03B86BBC TBNZ X8, 0x0, 0x3B86BD4
	0x03B86BC0 ADRP X0, 0x5D6000
	0x03B86BC4 LDR X0, [X0 + 0x98]
	0x03B86BC8 BL 0x1C16CF4
	0x03B86BCC MOVZ W8, 0x1
	0x03B86BD0 STRB W8, [X22 + 0xB00]
	0x03B86BD4 LDR X0, [X23]
	0x03B86BD8 LDR W8, [X0 + 0xE0]
	0x03B86BDC CBNZ W8, 0x3B86BE4
	0x03B86BE0 BL 0x1C16DFC
	0x03B86BE4 MOV X0, X21
	0x03B86BE8 MOV X1, X20
	0x03B86BEC MOV X2, X19
	0x03B86BF0 LDP X20, X19, [X31 + 0x20]
	0x03B86BF4 LDP X22, X21, [X31 + 0x10]
	0x03B86BF8 LDP X30, X23, [X31], #0x30
	0x03B86BFC B 0x3B86C00
	0x03B86C00 SUB X31, X31, 0x60
	0x03B86C04 STP X30, X23, [X31 + 0x30]
	0x03B86C08 STP X22, X21, [X31 + 0x40]
	0x03B86C0C STP X20, X19, [X31 + 0x50]
	0x03B86C10 ADRP X22, 0x85C000
	0x03B86C14 ADRP X23, 0x595000
	0x03B86C18 LDRB W8, [X22 + 0xB1C]
	0x03B86C1C LDR X23, [X23 + 0x848]
	0x03B86C20 MOV X19, X2
	0x03B86C24 MOV X20, X1
	0x03B86C28 MOV X21, X0
	0x03B86C2C TBNZ X8, 0x0, 0x3B86C50
	0x03B86C30 ADRP X0, 0x595000
	0x03B86C34 LDR X0, [X0 + 0x848]
	0x03B86C38 BL 0x1C16CF4
	0x03B86C3C ADRP X0, 0x5D6000
	0x03B86C40 LDR X0, [X0 + 0x98]
	0x03B86C44 BL 0x1C16CF4
	0x03B86C48 MOVZ W8, 0x1
	0x03B86C4C STRB W8, [X22 + 0xB1C]
	0x03B86C50 LDR X0, [X23]
	0x03B86C54 LDR W8, [X0 + 0xE0]
	0x03B86C58 CBNZ W8, 0x3B86C60
	0x03B86C5C BL 0x1C16DFC
	0x03B86C60 MOV X0, X31
	0x03B86C64 BL 0x36FA670
	0x03B86C68 TBZ X0, 0x0, 0x3B86CB0
	0x03B86C6C ADRP X8, 0x5D6000
	0x03B86C70 LDR X8, [X8 + 0x98]
	0x03B86C74 LDR X0, [X8]
	0x03B86C78 LDR W8, [X0 + 0xE0]
	0x03B86C7C CBNZ W8, 0x3B86C84
	0x03B86C80 BL 0x1C16DFC
	0x03B86C84 BL 0x3B89210
	0x03B86C88 CBZ X0, 0x3B86CB0
	0x03B86C8C MOV X3, X0
	0x03B86C90 MOV X0, X21
	0x03B86C94 MOV X1, X20
	0x03B86C98 MOV X2, X19
	0x03B86C9C LDP X20, X19, [X31 + 0x50]
	0x03B86CA0 LDP X22, X21, [X31 + 0x40]
	0x03B86CA4 LDP X30, X23, [X31 + 0x30]
	0x03B86CA8 ADD X31, X31, 0x60
	0x03B86CAC BR X3
	0x03B86CB0 STP X31, X31, [X31 + 0x20]
	0x03B86CB4 LDP S0, S1, [X21]
	0x03B86CB8 LDR V2, [X21 + 0x8]
	0x03B86CBC MOV X0, X31
	0x03B86CC0 BL 0x3887BE4
	0x03B86CC4 STP S0, S1, [X31 + 0x10]
	0x03B86CC8 STR S2, [X31 + 0x18]
	0x03B86CCC LDP S0, S1, [X20]
	0x03B86CD0 LDR V2, [X20 + 0x8]
	0x03B86CD4 MOV X0, X31
	0x03B86CD8 BL 0x3887BE4
	0x03B86CDC ADD X0, X31, 0x10
	0x03B86CE0 ADD X1, X31, 0x0
	0x03B86CE4 ADD X2, X31, 0x20
	0x03B86CE8 STP S0, S1, [X31]
	0x03B86CEC STR S2, [X31 + 0x8]
	0x03B86CF0 BL 0x3B86D20
	0x03B86CF4 LDP S0, S1, [X31 + 0x20]
	0x03B86CF8 LDP S2, S3, [X31 + 0x28]
	0x03B86CFC MOV X0, X31
	0x03B86D00 BL 0x38BD214
	0x03B86D04 STP S0, S1, [X19]
	0x03B86D08 STP S2, S3, [X19 + 0x8]
	0x03B86D0C LDP X20, X19, [X31 + 0x50]
	0x03B86D10 LDP X22, X21, [X31 + 0x40]
	0x03B86D14 LDP X30, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x85D000
	007 Move X20, 0x5D6000
	008 Move W8, [X19+2806]
	009 Move X20, [X20+4064]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {73}
	014 Move X0, 0x5D6000
	015 Move X0, [X0+4064]
	016 Call 0x1C17CF4
	017 Move X0, 0x574000
	018 Move X0, [X0+2248]
	019 Call 0x1C17CF4
	020 Move X0, 0x56E000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x5D6000
	024 Move X0, [X0+4072]
	025 Call 0x1C17CF4
	026 Move X0, 0x5D6000
	027 Move X0, [X0+4080]
	028 Call 0x1C17CF4
	029 Move X0, 0x5D6000
	030 Move X0, [X0+4088]
	031 Call 0x1C17CF4
	032 Move X0, 0x5D7000
	033 Move X0, [X0]
	034 Call 0x1C17CF4
	035 Move X0, 0x5D7000
	036 Move X0, [X0+8]
	037 Call 0x1C17CF4
	038 Move X0, 0x5D7000
	039 Move X0, [X0+16]
	040 Call 0x1C17CF4
	041 Move X0, 0x5D7000
	042 Move X0, [X0+24]
	043 Call 0x1C17CF4
	044 Move X0, 0x5D7000
	045 Move X0, [X0+32]
	046 Call 0x1C17CF4
	047 Move X0, 0x5D7000
	048 Move X0, [X0+40]
	049 Call 0x1C17CF4
	050 Move X0, 0x5C4000
	051 Move X0, [X0+2544]
	052 Call 0x1C17CF4
	053 Move X0, 0x5D7000
	054 Move X0, [X0+48]
	055 Call 0x1C17CF4
	056 Move X0, 0x5D7000
	057 Move X0, [X0+56]
	058 Call 0x1C17CF4
	059 Move X0, 0x5D7000
	060 Move X0, [X0+64]
	061 Call 0x1C17CF4
	062 Move X0, 0x56E000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move X0, 0x5D7000
	066 Move X0, [X0+72]
	067 Call 0x1C17CF4
	068 Move X0, 0x5D7000
	069 Move X0, [X0+80]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X19+2806], W8
	073 Move X0, [X20]
	074 Move W1, 22
	075 Call 0x1C17D6C
	076 Compare X0, 0
	077 JumpIfEqual {254}
	078 Move W8, [X0+24]
	079 Compare W8, 0
	080 JumpIfEqual {253}
	081 Move X19, 0x56E000
	082 Move X19, [X19+2440]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X9, [X19]
	085 Move [X0+32], X9
	086 Move [X0+40], X31
	087 Move X9, 0x5D7000
	088 Move X9, [X9+48]
	089 Move W10, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X9, [X9]
	092 Move [X0+48], X9
	093 Move [X0+56], X10
	094 Move X9, 0x5C4000
	095 Move X9, [X9+2544]
	096 Move W10, 2
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, [X9]
	099 Move [X0+64], X9
	100 Move [X0+72], X10
	101 Move X9, 0x5D7000
	102 Move X9, [X9+40]
	103 Move W10, 2
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X9, [X9]
	106 Move [X0+80], X9
	107 Move [X0+88], X10
	108 Move X9, 0x5D7000
	109 Move X9, [X9+8]
	110 Move W10, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X9, [X9]
	113 Move [X0+96], X9
	114 Move [X0+104], X10
	115 Move X9, 0x5D7000
	116 Move X9, [X9+24]
	117 Move W10, 1
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, [X9]
	120 Move [X0+112], X9
	121 Move [X0+120], X10
	122 Move X9, 0x5D7000
	123 Move X9, [X9+16]
	124 Move W10, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X9, [X9]
	127 Move [X0+128], X9
	128 Move [X0+136], X10
	129 Move X9, 0x5D7000
	130 Move X9, [X9+80]
	131 Move W10, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X9, [X9]
	134 Move [X0+144], X9
	135 Move [X0+152], X10
	136 Move X9, 0x5D7000
	137 Move X9, [X9+72]
	138 Move W10, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, [X9]
	141 Move [X0+160], X9
	142 Move [X0+168], X10
	143 Move X9, 0x5D6000
	144 Move X9, [X9+4088]
	145 Move W10, 1
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X9, [X9]
	148 Move [X0+176], X9
	149 Move [X0+184], X10
	150 Move X9, 0x5D7000
	151 Move X9, [X9+64]
	152 Move W10, 1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X9, [X9]
	155 Move [X0+192], X9
	156 Move [X0+200], X10
	157 Move X9, 0x5D7000
	158 Move X9, [X9+56]
	159 Move W10, 1
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X9, [X9]
	162 Move [X0+208], X9
	163 Move [X0+216], X10
	164 Move X9, 0x5D6000
	165 Move X9, [X9+4080]
	166 Move W10, 1
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X9, [X9]
	169 Move [X0+224], X9
	170 Move [X0+232], X10
	171 Move X9, 0x5D6000
	172 Move X9, [X9+4072]
	173 Move W10, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X9, [X9]
	176 Move [X0+240], X9
	177 Move [X0+248], X10
	178 Move X20, 0x5D7000
	179 Move X20, [X20]
	180 Move W10, 3
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X9, [X20]
	183 Move [X0+256], X9
	184 Move [X0+264], X10
	185 Move X9, [X20]
	186 Move W10, 4
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X0+272], X9
	189 Move [X0+280], X10
	190 Move X9, [X20]
	191 Move W10, 5
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X0+288], X9
	194 Move [X0+296], X10
	195 Move X9, [X20]
	196 Move W10, 6
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move [X0+304], X9
	199 Move [X0+312], X10
	200 Move X21, 0x5D7000
	201 Move X21, [X21+32]
	202 Move W10, 3
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X9, [X21]
	205 Move [X0+320], X9
	206 Move [X0+328], X10
	207 Move X9, [X21]
	208 Move W10, 4
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move [X0+336], X9
	211 Move [X0+344], X10
	212 Move X9, [X21]
	213 Move W10, 5
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move [X0+352], X9
	216 Move [X0+360], X10
	217 Move X8, [X21]
	218 Move X22, 0x574000
	219 Move X22, [X22+2248]
	220 Move W9, 6
	221 Move [X0+368], X8
	222 Move [X0+376], X9
	223 Move X9, 0x56E000
	224 Move X8, [X22]
	225 Move W1, 3
	226 Move X8, [X8+184]
	227 Move X9, [X9+2760]
	228 Move [X8], X0
	229 Move X0, [X9]
	230 Call 0x1C17D6C
	231 Compare X0, 0
	232 JumpIfEqual {254}
	233 Move W8, [X0+24]
	234 Compare W8, 0
	235 JumpIfEqual {253}
	236 Move X9, [X19]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X0+32], X9
	239 Move X9, [X20]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move [X0+40], X9
	242 Move X8, [X21]
	243 Move X20, [X31+32]
	244 Move X19, [X31+40]
	245 Move [X0+48], X8
	246 Move X8, [X22]
	247 Move X22, [X31+16]
	248 Move X21, [X31+24]
	249 Move X8, [X8+184]
	250 Move [X8+8], X0
	251 Move X30, [X31+48]
	252 Return 
	253 Call 0x1C17F28
	254 Call 0x1C17F20

