Type: UnityEngine.XR.Interaction.Toolkit.XRRig

Method: System.Void Awake()

Disassembly:
	0x03B873A0 LDRB W8, [X22 + 0xB35]
	0x03B873A4 LDR X23, [X23 + 0x848]
	0x03B873A8 MOV X19, X2
	0x03B873AC MOV X20, X1
	0x03B873B0 MOV X21, X0
	0x03B873B4 TBNZ X8, 0x0, 0x3B873D8
	0x03B873B8 ADRP X0, 0x594000
	0x03B873BC LDR X0, [X0 + 0x848]
	0x03B873C0 BL 0x1C16CF4
	0x03B873C4 ADRP X0, 0x5D5000
	0x03B873C8 LDR X0, [X0 + 0xC0]
	0x03B873CC BL 0x1C16CF4
	0x03B873D0 MOVZ W8, 0x1
	0x03B873D4 STRB W8, [X22 + 0xB35]
	0x03B873D8 LDR X0, [X23]
	0x03B873DC LDR W8, [X0 + 0xE0]
	0x03B873E0 CBNZ W8, 0x3B873E8
	0x03B873E4 BL 0x1C16DFC
	0x03B873E8 MOV X0, X31
	0x03B873EC BL 0x36FA670
	0x03B873F0 TBZ X0, 0x0, 0x3B87438
	0x03B873F4 ADRP X8, 0x5D5000
	0x03B873F8 LDR X8, [X8 + 0xC0]
	0x03B873FC LDR X0, [X8]
	0x03B87400 LDR W8, [X0 + 0xE0]
	0x03B87404 CBNZ W8, 0x3B8740C
	0x03B87408 BL 0x1C16DFC
	0x03B8740C BL 0x3B8A4A8
	0x03B87410 CBZ X0, 0x3B87438
	0x03B87414 MOV X3, X0
	0x03B87418 MOV X0, X21
	0x03B8741C MOV X1, X20
	0x03B87420 MOV X2, X19
	0x03B87424 LDP X20, X19, [X31 + 0x50]
	0x03B87428 LDP X22, X21, [X31 + 0x40]
	0x03B8742C LDP X30, X23, [X31 + 0x30]
	0x03B87430 ADD X31, X31, 0x60
	0x03B87434 BR X3
	0x03B87438 STP X31, X31, [X31 + 0x20]
	0x03B8743C LDP S0, S1, [X21]
	0x03B87440 LDR V2, [X21 + 0x8]
	0x03B87444 MOV X0, X31
	0x03B87448 BL 0x3887BE4
	0x03B8744C STP S0, S1, [X31 + 0x10]
	0x03B87450 STR S2, [X31 + 0x18]
	0x03B87454 LDP S0, S1, [X20]
	0x03B87458 LDR V2, [X20 + 0x8]
	0x03B8745C MOV X0, X31
	0x03B87460 BL 0x3887BE4
	0x03B87464 ADD X0, X31, 0x10
	0x03B87468 ADD X1, X31, 0x0
	0x03B8746C ADD X2, X31, 0x20
	0x03B87470 STP S0, S1, [X31]
	0x03B87474 STR S2, [X31 + 0x8]
	0x03B87478 BL 0x3B871B4
	0x03B8747C LDP S0, S1, [X31 + 0x20]
	0x03B87480 LDP S2, S3, [X31 + 0x28]
	0x03B87484 MOV X0, X31
	0x03B87488 BL 0x38BD214
	0x03B8748C STP S0, S1, [X19]
	0x03B87490 STP S2, S3, [X19 + 0x8]
	0x03B87494 LDP X20, X19, [X31 + 0x50]
	0x03B87498 LDP X22, X21, [X31 + 0x40]
	0x03B8749C LDP X30, X23, [X31 + 0x30]
	0x03B874A0 ADD X31, X31, 0x60
	0x03B874A4 RET
	0x03B874A8 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x85C000
	006 Move X20, 0x56D000
	007 Move W8, [X21+2810]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x56D000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x5D1000
	018 Move X0, [X0+176]
	019 Call 0x1C17CF4
	020 Move X0, 0x56D000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x5D6000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2810], W8
	028 Move X0, [X20]
	029 Move X20, 0x5D6000
	030 Move X21, 0x56D000
	031 Move W8, [X0+224]
	032 Move X20, [X20+120]
	033 Move X21, [X21+1432]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X1, X19
	039 Move X2, X31
	040 Call Debug.LogWarning, X0, X1
	041 Move X0, [X21]
	042 Move X20, [X19+32]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {77}
	055 Move X0, [X21]
	056 Move X20, [X19+88]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Inequality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {77}
	069 Move X0, [X19+88]
	070 Compare X0, 0
	071 JumpIfEqual {85}
	072 Move X8, 0x5D1000
	073 Move X8, [X8+176]
	074 Move X1, [X8]
	075 Call 0x21E62E4, X0
	076 Move [X19+32], X0
	077 Move X0, X19
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X1, X31
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call XROrigin.Awake, X0
	084 Return 
	085 Call 0x1C17F20

Method: UnityEngine.GameObject get_rig()

Disassembly:
	0x03B874AC STP X22, X21, [X31 + 0x10]
	0x03B874B0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_rig(UnityEngine.GameObject value)

Disassembly:
	0x03B874B4 ADRP X22, 0x85B000
	0x03B874B8 ADRP X23, 0x5D5000

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: UnityEngine.GameObject get_cameraGameObject()

Disassembly:
	0x03B874BC LDRB W8, [X22 + 0xB06]
	0x03B874C0 LDR X23, [X23 + 0xC8]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_cameraGameObject(UnityEngine.GameObject value)

Disassembly:
	0x03B874C4 MOV X19, X2
	0x03B874C8 MOV X20, X1
	0x03B874CC MOV X21, X0
	0x03B874D0 TBNZ X8, 0x0, 0x3B874E8
	0x03B874D4 ADRP X0, 0x5D5000
	0x03B874D8 LDR X0, [X0 + 0xC8]
	0x03B874DC BL 0x1C16CF4
	0x03B874E0 MOVZ W8, 0x1
	0x03B874E4 STRB W8, [X22 + 0xB06]
	0x03B874E8 LDR X0, [X23]
	0x03B874EC LDR W8, [X0 + 0xE0]
	0x03B874F0 CBNZ W8, 0x3B874F8
	0x03B874F4 BL 0x1C16DFC
	0x03B874F8 MOV X0, X21
	0x03B874FC MOV X1, X20
	0x03B87500 MOV X2, X19
	0x03B87504 LDP X20, X19, [X31 + 0x20]
	0x03B87508 LDP X22, X21, [X31 + 0x10]
	0x03B8750C LDP X30, X23, [X31], #0x30
	0x03B87510 B 0x3B87514
	0x03B87514 STR D8, [X31 - 0x40]!
	0x03B87518 STP X30, X23, [X31 + 0x10]
	0x03B8751C STP X22, X21, [X31 + 0x20]
	0x03B87520 STP X20, X19, [X31 + 0x30]
	0x03B87524 ADRP X22, 0x85B000
	0x03B87528 ADRP X23, 0x594000
	0x03B8752C LDRB W8, [X22 + 0xB3A]
	0x03B87530 LDR X23, [X23 + 0x848]
	0x03B87534 MOV X19, X2
	0x03B87538 MOV X20, X1
	0x03B8753C MOV X21, X0
	0x03B87540 TBNZ X8, 0x0, 0x3B87564
	0x03B87544 ADRP X0, 0x5D5000
	0x03B87548 LDR X0, [X0 + 0xC8]
	0x03B8754C BL 0x1C16CF4
	0x03B87550 ADRP X0, 0x594000
	0x03B87554 LDR X0, [X0 + 0x848]
	0x03B87558 BL 0x1C16CF4
	0x03B8755C MOVZ W8, 0x1
	0x03B87560 STRB W8, [X22 + 0xB3A]
	0x03B87564 LDR X0, [X23]
	0x03B87568 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x85C000
	007 Move X21, 0x56D000
	008 Move W8, [X22+2811]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5D1000
	017 Move X0, [X0+176]
	018 Call 0x1C17CF4
	019 Move X0, 0x56D000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2811], W8
	024 Move [X19+88], X20
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Inequality, X0, X1
	034 Move W8, W0
	035 Move X0, X31
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {47}
	040 Compare X20, 0
	041 JumpIfEqual {54}
	042 Move X8, 0x5D1000
	043 Move X8, [X8+176]
	044 Move X0, X20
	045 Move X1, [X8]
	046 Call 0x21E62E4, X0
	047 Move [X19+32], X0
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20

Method: UnityEngine.GameObject get_cameraFloorOffsetObject()

Disassembly:
	0x03B8756C CBNZ W8, 0x3B87574
	0x03B87570 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_cameraFloorOffsetObject(UnityEngine.GameObject value)

Disassembly:
	0x03B87574 MOV X0, X31
	0x03B87578 BL 0x36FA670

ISIL:
	001 Move X2, X31
	002 Call XROrigin.set_CameraFloorOffsetObject, X0, X1
	003 Return 

Method: Unity.XR.CoreUtils.XROrigin/TrackingOriginMode get_requestedTrackingOriginMode()

Disassembly:
	0x03B8757C TBZ X0, 0x0, 0x3B875C4
	0x03B87580 ADRP X8, 0x5D5000

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_requestedTrackingOriginMode(Unity.XR.CoreUtils.XROrigin/TrackingOriginMode value)

Disassembly:
	0x03B87584 LDR X8, [X8 + 0xC8]
	0x03B87588 LDR X0, [X8]

ISIL:
	001 Move X2, X31
	002 Call XROrigin.set_RequestedTrackingOriginMode, X0, X1
	003 Return 

Method: System.Single get_cameraYOffset()

Disassembly:
	0x03B8758C LDR W8, [X0 + 0xE0]
	0x03B87590 CBNZ W8, 0x3B87598

ISIL:
	001 Move V0, [X0+76]
	002 Return V0

Method: System.Void set_cameraYOffset(System.Single value)

Disassembly:
	0x03B87594 BL 0x1C16DFC
	0x03B87598 BL 0x3B8A868

ISIL:
	001 Move X1, X31
	002 Call XROrigin.set_CameraYOffset, X0, V0
	003 Return 

Method: UnityEngine.XR.TrackingOriginModeFlags get_currentTrackingOriginMode()

Disassembly:
	0x03B8759C CBZ X0, 0x3B875C4
	0x03B875A0 MOV X3, X0

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: UnityEngine.Vector3 get_rigInCameraSpacePos()

Disassembly:
	0x03B875A4 MOV X0, X21
	0x03B875A8 MOV X1, X20

ISIL:
	001 Move X1, X31
	002 Call XROrigin.get_OriginInCameraSpacePos, X0
	003 Return X0

Method: UnityEngine.Vector3 get_cameraInRigSpacePos()

Disassembly:
	0x03B875AC MOV X2, X19
	0x03B875B0 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X1, X31
	002 Call XROrigin.get_CameraInOriginSpacePos, X0
	003 Return X0

Method: System.Single get_cameraInRigSpaceHeight()

Disassembly:
	0x03B875B4 LDP X22, X21, [X31 + 0x20]
	0x03B875B8 LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call XROrigin.get_CameraInOriginSpaceHeight, X0
	003 Return V0

Method: System.Boolean RotateAroundCameraUsingRigUp(System.Single angleDegrees)

Disassembly:
	0x03B875BC LDR V8, [X31], #0x40
	0x03B875C0 BR X3

ISIL:
	001 Move X1, X31
	002 Call XROrigin.RotateAroundCameraUsingOriginUp, X0, V0
	003 Return X0

Method: System.Boolean MatchRigUp(UnityEngine.Vector3 destinationUp)

Disassembly:
	0x03B875C4 LDP D0, D1, [X21]
	0x03B875C8 LDP D2, D3, [X20]

ISIL:
	001 Move X1, X31
	002 Call XROrigin.MatchOriginUp, X0, X1
	003 Return X0

Method: System.Boolean MatchRigUpCameraForward(UnityEngine.Vector3 destinationUp, UnityEngine.Vector3 destinationForward)

Disassembly:
	0x03B875CC ADRP X8, 0xFFFFFFFFFCF63000
	0x00000000 INVALID

ISIL:
	001 Move X1, X31
	002 Call XROrigin.MatchOriginUpCameraForward, X0, X1, X2
	003 Return X0

Method: System.Boolean MatchRigUpRigForward(UnityEngine.Vector3 destinationUp, UnityEngine.Vector3 destinationForward)

Disassembly:
	0x03B875D4 UNIMPLEMENTED
	0x00000000 INVALID

ISIL:
	001 Move X1, X31
	002 Call XROrigin.MatchOriginUpOriginForward, X0, X1, X2
	003 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B875DC FADD V0.2S, V0.2S, V2.2S
	0x03B875E0 UNIMPLEMENTED
	0x03B875E4 FADD V0.2S, V1.2S, V0.2S
	0x03B875E8 FADD V0.2S, V3.2S, V0.2S
	0x03B875EC LDR V1, [X8 + 0x1B4]
	0x03B875F0 FMOV W8, S0
	0x03B875F4 AND W8, W8, 0x7FFFFFFF
	0x03B875F8 FMOV S0, 1
	0x03B875FC FMOV S2, W8
	0x03B87600 FMINNM S8, S2, S0
	0x03B87604 FCMP S8, S1
	0x03B87608 FMOV S0, W31
	0x03B8760C B.GT 0x3B87664
	0x03B87610 ADRP X20, 0x85A000
	0x03B87614 LDRB W8, [X20 + 0x568]
	0x03B87618 CBNZ W8, 0x3B87630
	0x03B8761C ADRP X0, 0x56C000
	0x03B87620 LDR X0, [X0 + 0x5A8]
	0x03B87624 BL 0x1C16CF4
	0x03B87628 MOVZ W8, 0x1
	0x03B8762C STRB W8, [X20 + 0x568]
	0x03B87630 ADRP X8, 0x56C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x85C000
	006 Move X21, 0x5D3000
	007 Move W8, [X20+2812]
	008 Move X21, [X21+3688]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5D3000
	015 Move X0, [X0+3688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2812], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call XROrigin..ctor, X0
	031 Return 

