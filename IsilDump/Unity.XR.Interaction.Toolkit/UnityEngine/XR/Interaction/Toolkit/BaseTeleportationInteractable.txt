Type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable

Method: UnityEngine.XR.Interaction.Toolkit.TeleportationProvider get_teleportationProvider()

Disassembly:
	0x03B81DAC LDR W8, [X0 + 0xE0]
	0x03B81DB0 FMUL S1, S12, S12

ISIL:
	001 Move X0, [X0+464]
	002 Return X0

Method: System.Void set_teleportationProvider(UnityEngine.XR.Interaction.Toolkit.TeleportationProvider value)

Disassembly:
	0x03B81DB4 FADD S0, S0, S1
	0x03B81DB8 FMUL S1, S13, S13

ISIL:
	001 Move [X0+464], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.MatchOrientation get_matchOrientation()

Disassembly:
	0x03B81DBC FADD S15, S1, S0
	0x03B81DC0 CBNZ W8, 0x3B81DC8

ISIL:
	001 Move W0, [X0+472]
	002 Return X0

Method: System.Void set_matchOrientation(UnityEngine.XR.Interaction.Toolkit.MatchOrientation value)

Disassembly:
	0x03B81DC4 BL 0x1C16DFC
	0x03B81DC8 ADRP X8, 0xFFFFFFFFFCF68000

ISIL:
	001 Move [X0+472], W1
	002 Return 

Method: System.Boolean get_matchDirectionalInput()

Disassembly:
	0x03B81DCC LDR V1, [X8 + 0xFE8]
	0x03B81DD0 FMUL S0, S14, S15

ISIL:
	001 Move W0, [X0+476]
	002 Return X0

Method: System.Void set_matchDirectionalInput(System.Boolean value)

Disassembly:
	0x03B81DD4 FSQRT S0, S0
	0x03B81DD8 FCMP S0, S1
	0x03B81DDC FMOV S1, W31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+476], W8
	003 Return 

Method: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger get_teleportTrigger()

Disassembly:
	0x03B81DE0 B.MI 0x3B81E38
	0x03B81DE4 LDR X0, [X20]

ISIL:
	001 Move W0, [X0+480]
	002 Return X0

Method: System.Void set_teleportTrigger(UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/TeleportTrigger value)

Disassembly:
	0x03B81DE8 FMUL S1, S9, S11
	0x03B81DEC FMUL S2, S10, S12

ISIL:
	001 Move [X0+480], W1
	002 Return 

Method: System.Boolean get_filterSelectionByHitNormal()

Disassembly:
	0x03B81DF0 FMUL S3, S8, S13
	0x03B81DF4 FADD S1, S1, S2

ISIL:
	001 Move W0, [X0+484]
	002 Return X0

Method: System.Void set_filterSelectionByHitNormal(System.Boolean value)

Disassembly:
	0x03B81DF8 FADD S1, S3, S1
	0x03B81DFC LDR W8, [X0 + 0xE0]
	0x03B81E00 FDIV S0, S1, S0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+484], W8
	003 Return 

Method: System.Single get_upNormalToleranceDegrees()

Disassembly:
	0x03B81E04 FMOV S1, 1
	0x03B81E08 FMOV S2, -1

ISIL:
	001 Move V0, [X0+488]
	002 Return V0

Method: System.Void set_upNormalToleranceDegrees(System.Single value)

Disassembly:
	0x03B81E0C FMIN S1, S0, S1
	0x03B81E10 FCMP S0, S2

ISIL:
	001 Move [X0+488], S0
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.TeleportingEvent get_teleporting()

Disassembly:
	0x03B81E14 FCSEL S8, S1, S2, PL
	0x03B81E18 CBNZ W8, 0x3B81E20

ISIL:
	001 Move X0, [X0+496]
	002 Return X0

Method: System.Void set_teleporting(UnityEngine.XR.Interaction.Toolkit.TeleportingEvent value)

Disassembly:
	0x03B81E1C BL 0x1C16DFC
	0x03B81E20 FCVT S0, S8

ISIL:
	001 Move [X0+496], X1
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x03B81E24 BL 0x3EB1B80
	0x03B81E28 ADRP X8, 0xFFFFFFFFFCF69000
	0x03B81E2C LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x03B81E34 FMUL S1, S0, S1
	0x03B81E38 LDR V0, [X19 + 0x1E8]
	0x03B81E3C FCMP S1, S0
	0x03B81E40 CSET W0, LS
	0x03B81E44 B 0x3B81D0C
	0x03B81E48 BL 0x1C16F20
	0x03B81E4C SUB X31, X31, 0x70
	0x03B81E50 STR D10, [X31 + 0x20]
	0x03B81E54 STP D9, D8, [X31 + 0x28]
	0x03B81E58 STR X30, [X31 + 0x38]
	0x03B81E5C STP X24, X23, [X31 + 0x40]
	0x03B81E60 STP X22, X21, [X31 + 0x50]
	0x03B81E64 STP X20, X19, [X31 + 0x60]
	0x03B81E68 ADRP X20, 0x861000
	0x03B81E6C LDRB W8, [X20 + 0xAD9]
	0x03B81E70 MOV X19, X3
	0x03B81E74 MOV X21, X2
	0x03B81E78 MOV V8.16B, V2.16B
	0x03B81E7C MOV V9.16B, V1.16B
	0x03B81E80 MOV V10.16B, V0.16B
	0x03B81E84 MOV X22, X1
	0x03B81E88 MOV X23, X0
	0x03B81E8C TBNZ X8, 0x0, 0x3B81EBC
	0x03B81E90 ADRP X0, 0x5DA000
	0x03B81E94 LDR X0, [X0 + 0xE48]
	0x03B81E98 BL 0x1C16CF4
	0x03B81E9C ADRP X0, 0x575000
	0x03B81EA0 LDR X0, [X0 + 0xB58]
	0x03B81EA4 BL 0x1C16CF4
	0x03B81EA8 ADRP X0, 0x572000
	0x03B81EAC LDR X0, [X0 + 0x598]
	0x03B81EB0 BL 0x1C16CF4
	0x03B81EB4 MOVZ W8, 0x1
	0x03B81EB8 STRB W8, [X20 + 0xAD9]
	0x03B81EBC STR W31, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x862000
	006 Move X20, 0x573000
	007 Move W8, [X21+2772]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5DB000
	015 Move X0, [X0+3624]
	016 Call 0x1C17CF4
	017 Move X0, 0x573000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2772], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call XRBaseInteractable.Awake, X0
	025 Move X0, [X20]
	026 Move X20, [X19+464]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {49}
	039 Move X8, 0x5DB000
	040 Move X8, [X8+3624]
	041 Add X0, X19, 464
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, [X8]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call 0x2960A30, X0
	048 Return 
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 

Method: System.Void Reset()

Disassembly:
	0x03B81EC0 STR X31, [X31 + 0x10]
	0x03B81EC4 STP X31, X31, [X19]
	0x03B81EC8 STP S10, S9, [X21]

ISIL:
	001 Move W8, 1
	002 Move [X0+88], W8
	003 Return 

Method: System.Boolean GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.RaycastHit raycastHit, ref UnityEngine.XR.Interaction.Toolkit.TeleportRequest teleportRequest)

Disassembly:
	0x03B81ECC STR S8, [X21 + 0x8]
	0x03B81ED0 LDR X8, [X23 + 0x1D0]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void SendTeleportRequest(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B81ED4 CBZ X8, 0x3B820B0
	0x03B81ED8 LDR X8, [X8 + 0x30]
	0x03B81EDC CBZ X8, 0x3B820B0
	0x03B81EE0 LDR W9, [X23 + 0x1D8]
	0x03B81EE4 CMP W9, 0x3
	0x03B81EE8 B.HI 0x3B82090
	0x03B81EEC LDR X20, [X8 + 0x30]
	0x03B81EF0 ADRP X8, 0xFFFFFFFFFD016000
	0x03B81EF4 ADD X8, X8, 0xD90
	0x03B81EF8 ADR X10, 0x10
	0x03B81EFC LDRB W11, [X8, X9, LSL]
	0x03B81F00 ADD X10, X10, X11, 0x2, LSL
	0x03B81F04 BR X10
	0x03B81F08 ADRP X24, 0x857000
	0x03B81F0C LDRB W8, [X24 + 0x786]
	0x03B81F10 CBNZ W8, 0x3B81F28
	0x03B81F14 ADRP X0, 0x572000
	0x03B81F18 LDR X0, [X0 + 0x5A0]
	0x03B81F1C BL 0x1C16CF4
	0x03B81F20 MOVZ W8, 0x1
	0x03B81F24 STRB W8, [X24 + 0x786]
	0x03B81F28 ADRP X8, 0x572000
	0x03B81F2C LDR X8, [X8 + 0x5A0]
	0x03B81F30 LDR X8, [X8]
	0x03B81F34 LDR X8, [X8 + 0xB8]
	0x03B81F38 LDR V0, [X8 + 0x18]
	0x03B81F3C LDR V1, [X8 + 0x20]
	0x03B81F40 STR D0, [X21]
	0x03B81F44 STR S1, [X21 + 0x8]
	0x03B81F48 B 0x3B81F6C
	0x03B81F4C MOV X0, X23
	0x03B81F50 MOV X1, X31
	0x03B81F54 BL 0x3C32E90
	0x03B81F58 CBZ X0, 0x3B820B0
	0x03B81F5C MOV X1, X31
	0x03B81F60 BL 0x3C3F988
	0x03B81F64 STP S0, S1, [X21]
	0x03B81F68 STR S2, [X21 + 0x8]
	0x03B81F6C LDRB W8, [X23 + 0x1DC]
	0x03B81F70 CBZ W8, 0x3B81FA4
	0x03B81F74 LDR X0, [X23 + 0x200]
	0x03B81F78 CBZ X0, 0x3B820B0
	0x03B81F7C ADRP X8, 0x5DA000
	0x03B81F80 LDR X8, [X8 + 0xE48]
	0x03B81F84 ADD X2, X31, 0x10
	0x03B81F88 MOV X1, X22
	0x03B81F8C LDR X3, [X8]
	0x03B81F90 BL 0x2AC2940
	0x03B81F94 TBZ X0, 0x0, 0x3B81FA4
	0x03B81F98 LDP S0, S1, [X31 + 0x10]
	0x03B81F9C LDR V2, [X31 + 0x18]
	0x03B81FA0 B 0x3B82070
	0x03B81FA4 ADRP X8, 0x572000
	0x03B81FA8 LDR X8, [X8 + 0x598]
	0x03B81FAC LDR X0, [X8]
	0x03B81FB0 LDR W8, [X0 + 0xE0]
	0x03B81FB4 CBNZ W8, 0x3B81FBC
	0x03B81FB8 BL 0x1C16DFC
	0x03B81FBC MOV X0, X20
	0x03B81FC0 MOV X1, X31
	0x03B81FC4 MOV X2, X31
	0x03B81FC8 BL 0x3C354F8
	0x03B81FCC TBZ X0, 0x0, 0x3B82090
	0x03B81FD0 CBNZ X20, 0x3B82054
	0x03B81FD4 B 0x3B820B0
	0x03B81FD8 MOV X0, X23
	0x03B81FDC MOV X1, X31
	0x03B81FE0 BL 0x3C32E90
	0x03B81FE4 CBZ X0, 0x3B820B0
	0x03B81FE8 MOV X1, X31
	0x03B81FEC BL 0x3C3F988
	0x03B81FF0 STP S0, S1, [X21]
	0x03B81FF4 STR S2, [X21 + 0x8]
	0x03B81FF8 MOV X0, X23
	0x03B81FFC B 0x3B8205C
	0x03B82000 ADRP X8, 0x571000
	0x03B82004 LDR X8, [X8 + 0x598]
	0x03B82008 LDR X0, [X8]
	0x03B8200C LDR W8, [X0 + 0xE0]
	0x03B82010 CBNZ W8, 0x3B82018
	0x03B82014 BL 0x1C16DFC
	0x03B82018 MOV X0, X20
	0x03B8201C MOV X1, X31
	0x03B82020 MOV X2, X31
	0x03B82024 BL 0x3C354F8
	0x03B82028 TBZ X0, 0x0, 0x3B82090
	0x03B8202C CBZ X20, 0x3B820B0
	0x03B82030 LDR X0, [X20 + 0x38]
	0x03B82034 CBZ X0, 0x3B820B0
	0x03B82038 MOV X1, X31
	0x03B8203C BL 0x3C356F8
	0x03B82040 CBZ X0, 0x3B820B0
	0x03B82044 MOV X1, X31
	0x03B82048 BL 0x3C3F988
	0x03B8204C STP S0, S1, [X21]
	0x03B82050 STR S2, [X21 + 0x8]
	0x03B82054 LDR X0, [X20 + 0x20]
	0x03B82058 CBZ X0, 0x3B820B0
	0x03B8205C MOV X1, X31
	0x03B82060 BL 0x3C32E90
	0x03B82064 CBZ X0, 0x3B820B0
	0x03B82068 MOV X1, X31
	0x03B8206C BL 0x3C3FA04
	0x03B82070 ADRP X8, 0x574000
	0x03B82074 LDR X8, [X8 + 0xB58]
	0x03B82078 ADD X0, X31, 0x0
	0x03B8207C STP X31, X31, [X31]
	0x03B82080 LDR X1, [X8]
	0x03B82084 BL 0x243BFEC
	0x03B82088 LDR V0, [X31]
	0x03B8208C STR V0, [X19]
	0x03B82090 LDP X20, X19, [X31 + 0x60]
	0x03B82094 LDP X22, X21, [X31 + 0x50]
	0x03B82098 LDP X24, X23, [X31 + 0x40]
	0x03B8209C LDR X30, [X31 + 0x38]
	0x03B820A0 LDP D9, D8, [X31 + 0x28]
	0x03B820A4 LDR V10, [X31 + 0x20]
	0x03B820A8 ADD X31, X31, 0x70
	0x03B820AC RET
	0x03B820B0 BL 0x1C16F20
	0x03B820B4 SUB X31, X31, 0x70
	0x03B820B8 STR X30, [X31 + 0x60]
	0x03B820BC LDUR V0, [X2 + 0x1C]
	0x03B820C0 LDP V2, V1, [X2]
	0x03B820C4 ADD X2, X31, 0x30
	0x03B820C8 STUR V0, [X31 + 0x1C]
	0x03B820CC STP V2, V1, [X31]
	0x03B820D0 LDR X8, [X0]
	0x03B820D4 LDR V0, [X31 + 0x1]
	0x03B820D8 LDUR V1, [X31 + 0x1C]
	0x03B820DC LDR X9, [X8 + 0x868]
	0x03B820E0 STP V2, V0, [X31 + 0x30]
	0x03B820E4 STUR V1, [X31 + 0x4C]
	0x03B820E8 LDR X4, [X8 + 0x870]
	0x03B820EC BLR X9
	0x03B820F0 LDR X30, [X31 + 0x60]
	0x03B820F4 AND W0, W0, 0x1
	0x03B820F8 ADD X31, X31, 0x70
	0x03B820FC RET
	0x03B82100 STP X30, X27, [X31 - 0x50]!
	0x03B82104 STP X26, X25, [X31 + 0x10]
	0x03B82108 STP X24, X23, [X31 + 0x20]
	0x03B8210C STP X22, X21, [X31 + 0x30]
	0x03B82110 STP X20, X19, [X31 + 0x40]
	0x03B82114 ADRP X21, 0x860000
	0x03B82118 ADRP X20, 0x5D9000
	0x03B8211C ADRP X22, 0x5D9000
	0x03B82120 LDRB W8, [X21 + 0xADA]
	0x03B82124 LDR X20, [X20 + 0xE58]
	0x03B82128 LDR X22, [X22 + 0xE60]
	0x03B8212C MOV X19, X0
	0x03B82130 TBNZ X8, 0x0, 0x3B821A8
	0x03B82134 ADRP X0, 0x5D9000
	0x03B82138 LDR X0, [X0 + 0xE68]
	0x03B8213C BL 0x1C16CF4
	0x03B82140 ADRP X0, 0x5D9000
	0x03B82144 LDR X0, [X0 + 0xE70]
	0x03B82148 BL 0x1C16CF4
	0x03B8214C ADRP X0, 0x5D9000
	0x03B82150 LDR X0, [X0 + 0xE78]
	0x03B82154 BL 0x1C16CF4
	0x03B82158 ADRP X0, 0x5D9000
	0x03B8215C LDR X0, [X0 + 0xE80]
	0x03B82160 BL 0x1C16CF4
	0x03B82164 ADRP X0, 0x5D9000
	0x03B82168 LDR X0, [X0 + 0xE88]
	0x03B8216C BL 0x1C16CF4
	0x03B82170 ADRP X0, 0x5D9000
	0x03B82174 LDR X0, [X0 + 0xE58]
	0x03B82178 BL 0x1C16CF4
	0x03B8217C ADRP X0, 0x5D9000
	0x03B82180 LDR X0, [X0 + 0xE90]
	0x03B82184 BL 0x1C16CF4
	0x03B82188 ADRP X0, 0x5D9000
	0x03B8218C LDR X0, [X0 + 0xE60]
	0x03B82190 BL 0x1C16CF4
	0x03B82194 ADRP X0, 0x5D8000
	0x03B82198 LDR X0, [X0 + 0x438]
	0x03B8219C BL 0x1C16CF4
	0x03B821A0 MOVZ W8, 0x1
	0x03B821A4 STRB W8, [X21 + 0xADA]
	0x03B821A8 MOVZ W8, 0x41F00000
	0x03B821AC STR W8, [X19 + 0x1E8]
	0x03B821B0 LDR X0, [X20]
	0x03B821B4 BL 0x1C16F10
	0x03B821B8 MOV X1, X31
	0x03B821BC MOV X20, X0
	0x03B821C0 BL 0x3B6B678
	0x03B821C4 STR X20, [X19 + 0x1F0]
	0x03B821C8 LDR X0, [X22]
	0x03B821CC LDR W8, [X0 + 0xE0]
	0x03B821D0 CBNZ W8, 0x3B821DC
	0x03B821D4 BL 0x1C16DFC
	0x03B821D8 LDR X0, [X22]
	0x03B821DC LDR X8, [X0 + 0xB8]
	0x03B821E0 ADRP X27, 0x5D9000
	0x03B821E4 ADRP X26, 0x5D9000
	0x03B821E8 ADRP X25, 0x5D9000
	0x03B821EC ADRP X24, 0x5D9000
	0x03B821F0 ADRP X23, 0x5D8000
	0x03B821F4 LDR X27, [X27 + 0xE88]
	0x03B821F8 LDR X20, [X8 + 0x8]
	0x03B821FC LDR X26, [X26 + 0xE80]
	0x03B82200 LDR X25, [X25 + 0xE70]
	0x03B82204 LDR X24, [X24 + 0xE68]
	0x03B82208 LDR X23, [X23 + 0x438]
	0x03B8220C CBNZ X20, 0x3B82260
	0x03B82210 LDR W8, [X0 + 0xE0]
	0x03B82214 CBNZ W8, 0x3B82220
	0x03B82218 BL 0x1C16DFC
	0x03B8221C LDR X0, [X22]
	0x03B82220 ADRP X9, 0x5D9000
	0x03B82224 LDR X8, [X0 + 0xB8]
	0x03B82228 LDR X9, [X9 + 0xE78]
	0x03B8222C LDR X21, [X8]
	0x03B82230 LDR X0, [X9]
	0x03B82234 BL 0x1C16F10
	0x03B82238 ADRP X8, 0x5D9000
	0x03B8223C LDR X8, [X8 + 0xE90]
	0x03B82240 MOV X1, X21
	0x03B82244 MOV X3, X31
	0x03B82248 MOV X20, X0
	0x03B8224C LDR X2, [X8]
	0x03B82250 BL 0x2D27AA8
	0x03B82254 LDR X8, [X22]
	0x03B82258 LDR X8, [X8 + 0xB8]
	0x03B8225C STR X20, [X8 + 0x8]
	0x03B82260 LDR X0, [X27]
	0x03B82264 BL 0x1C16F10
	0x03B82268 LDR X7, [X26]
	0x03B8226C MOVZ W6, 0x2710
	0x03B82270 MOV X1, X20
	0x03B82274 MOV X2, X31
	0x03B82278 MOV X3, X31
	0x03B8227C MOV X4, X31
	0x03B82280 MOV W5, W31
	0x03B82284 MOV X21, X0
	0x03B82288 BL 0x2EF0EC8
	0x03B8228C STR X21, [X19 + 0x1F8]
	0x03B82290 LDR X0, [X25]
	0x03B82294 BL 0x1C16F10
	0x03B82298 LDR X1, [X24]
	0x03B8229C MOV X20, X0
	0x03B822A0 BL 0x2AC0630
	0x03B822A4 STR X20, [X19 + 0x200]
	0x03B822A8 LDR X0, [X23]
	0x03B822AC LDR W8, [X0 + 0xE0]
	0x03B822B0 CBNZ W8, 0x3B822B8
	0x03B822B4 BL 0x1C16DFC
	0x03B822B8 MOV X0, X19
	0x03B822BC LDP X20, X19, [X31 + 0x40]
	0x03B822C0 LDP X22, X21, [X31 + 0x30]
	0x03B822C4 LDP X24, X23, [X31 + 0x20]
	0x03B822C8 LDP X26, X25, [X31 + 0x10]
	0x03B822CC MOV X1, X31
	0x03B822D0 LDP X30, X27, [X31], #0x50
	0x03B822D4 B 0x3B3DB20
	0x03B822D8 STR X30, [X31 - 0x20]!
	0x03B822DC STP X20, X19, [X31 + 0x10]
	0x03B822E0 ADRP X19, 0x860000
	0x03B822E4 ADRP X20, 0x5D9000
	0x03B822E8 LDRB W8, [X19 + 0xADC]
	0x03B822EC LDR X20, [X20 + 0xE60]
	0x03B822F0 TBNZ X8, 0x0, 0x3B82308
	0x03B822F4 ADRP X0, 0x5D9000
	0x03B822F8 LDR X0, [X0 + 0xE60]
	0x03B822FC BL 0x1C16CF4
	0x03B82300 MOVZ W8, 0x1
	0x03B82304 STRB W8, [X19 + 0xADC]
	0x03B82308 LDR X0, [X20]
	0x03B8230C BL 0x1C16F10
	0x03B82310 MOV X1, X31
	0x03B82314 MOV X19, X0
	0x03B82318 BL 0x33BDD8C
	0x03B8231C LDR X8, [X20]
	0x03B82320 LDR X8, [X8 + 0xB8]
	0x03B82324 STR X19, [X8]
	0x03B82328 LDP X20, X19, [X31 + 0x10]
	0x03B8232C LDR X30, [X31], #0x20
	0x03B82330 RET
	0x03B82334 MOV X1, X31
	0x03B82338 B 0x33BDD8C
	0x03B8233C STR X30, [X31 - 0x20]!
	0x03B82340 STP X20, X19, [X31 + 0x10]
	0x03B82344 ADRP X19, 0x860000
	0x03B82348 ADRP X20, 0x5D9000
	0x03B8234C LDRB W8, [X19 + 0xADD]
	0x03B82350 LDR X20, [X20 + 0xE98]
	0x03B82354 TBNZ X8, 0x0, 0x3B8236C
	0x03B82358 ADRP X0, 0x5D9000
	0x03B8235C LDR X0, [X0 + 0xE98]
	0x03B82360 BL 0x1C16CF4
	0x03B82364 MOVZ W8, 0x1
	0x03B82368 STRB W8, [X19 + 0xADD]
	0x03B8236C LDR X0, [X20]
	0x03B82370 BL 0x1C16F10
	0x03B82374 MOV X1, X31
	0x03B82378 MOV X19, X0
	0x03B8237C BL 0x3B6B6E8
	0x03B82380 MOV X0, X19
	0x03B82384 LDP X20, X19, [X31 + 0x10]
	0x03B82388 LDR X30, [X31], #0x20
	0x03B8238C RET
	0x03B82390 LDR X0, [X0 + 0x208]
	0x03B82394 RET
	0x03B82398 STR X1, [X0 + 0x208]
	0x03B8239C RET
	0x03B823A0 STP X30, X21, [X31 - 0x20]!
	0x03B823A4 STP X20, X19, [X31 + 0x10]
	0x03B823A8 ADRP X21, 0x860000
	0x03B823AC ADRP X20, 0x571000
	0x03B823B0 LDRB W8, [X21 + 0xADE]
	0x03B823B4 LDR X20, [X20 + 0x598]
	0x03B823B8 MOV X19, X0
	0x03B823BC TBNZ X8, 0x0, 0x3B823D4
	0x03B823C0 ADRP X0, 0x571000
	0x03B823C4 LDR X0, [X0 + 0x598]
	0x03B823C8 BL 0x1C16CF4
	0x03B823CC MOVZ W8, 0x1
	0x03B823D0 STRB W8, [X21 + 0xADE]

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+320], D15
	003 Move [X31+328], D14
	004 Move [X31+336], D13
	005 Move [X31+344], D12
	006 Move [X31+352], D11
	007 Move [X31+360], D10
	008 Move [X31+368], D9
	009 Move [X31+376], D8
	010 Move [X31+384], X29
	011 Move [X31+400], X30
	012 Move [X31+408], X23
	013 Move [X31+416], X22
	014 Move [X31+424], X21
	015 Move [X31+432], X20
	016 Move [X31+440], X19
	017 Move X21, 0x862000
	018 Move W8, [X21+2773]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x5DB000
	026 Move X0, [X0+3624]
	027 Call 0x1C17CF4
	028 Move X0, 0x5DB000
	029 Move X0, [X0+3632]
	030 Call 0x1C17CF4
	031 Move X0, 0x573000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x5DB000
	035 Move X0, [X0+3640]
	036 Call 0x1C17CF4
	037 Move X0, 0x5DB000
	038 Move X0, [X0+3648]
	039 Call 0x1C17CF4
	040 Move X0, 0x5DA000
	041 Move X0, [X0+872]
	042 Call 0x1C17CF4
	043 Move X0, 0x5DA000
	044 Move X0, [X0+1984]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+2773], W8
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X31+208], W31
	050 Move [X31+160], X31
	051 Move [X31+168], X31
	052 Move [X31+176], V0
	053 Move [X31+184], V0
	054 Move [X31+144], X31
	055 Move [X31+152], X31
	056 Compare X20, 0
	057 JumpIfEqual {320}
	058 Move X23, 0x573000
	059 Move X23, [X23+1432]
	060 Move X21, [X19+464]
	061 Move X0, [X23]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Equality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {83}
	074 Move X8, 0x5DB000
	075 Move X8, [X8+3624]
	076 Add X0, X19, 464
	077 Move X1, [X8]
	078 Call 0x2960A30, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {320}
	083 Move X8, 0x5DA000
	084 Move X8, [X8+1984]
	085 Add X22, X31, 224
	086 NotImplemented "Instruction MOVI not yet implemented."
	087 Move [X22+28], V0
	088 Move [X31+224], V0
	089 Move [X31+232], V0
	090 Move X9, [X20]
	091 Move X8, [X8]
	092 Move W11, [X9+304]
	093 Move W10, [X8+304]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X9, [X9+200]
	096 Add X9, X9, X10
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, [X23]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X20
	105 Move X1, X31
	106 Move X2, X31
	107 Call Object.op_Inequality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {212}
	112 Add X1, X31, 224
	113 Move X0, X20
	114 Move X2, X31
	115 Call XRRayInteractor.TryGetCurrent3DRaycastHit, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {320}
	120 Move X21, [X19+56]
	121 Add X0, X31, 224
	122 Move X1, X31
	123 Call RaycastHit.get_collider, X0
	124 Compare X21, 0
	125 JumpIfEqual {351}
	126 Move X1, X0
	127 Add X2, X31, 168
	128 Move X0, X21
	129 Move X3, X31
	130 Call XRInteractionManager.TryGetInteractableForCollider, X0, X1, X2
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {320}
	135 Move X8, [X31+168]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W8, [X19+484]
	138 Compare W8, 0
	139 JumpIfEqual {212}
	140 Move X0, X19
	141 Move X1, X31
	142 Call Component.get_transform, X0
	143 Compare X0, 0
	144 JumpIfEqual {351}
	145 Move X1, X31
	146 Call Transform.get_up, X0
	147 Add X0, X31, 224
	148 Move X1, X31
	149 Move V9, V0
	150 Move V10, V1
	151 Move V8, V2
	152 Call RaycastHit.get_normal, X0
	153 Move X21, 0x857000
	154 Move W8, [X21+2596]
	155 Move V11, V0
	156 Move V12, V1
	157 Move V13, V2
	158 Compare W8, 0
	159 JumpIfNotEqual {165}
	160 Move X0, 0x572000
	161 Move X0, [X0+1448]
	162 Call 0x1C17CF4
	163 Move W8, 1
	164 Move [X21+2596], W8
	165 Move X21, 0x572000
	166 Move X21, [X21+1448]
	167 Multiply S0, S9, S9
	168 Multiply S1, S10, S10
	169 Add S0, S0, S1
	170 Move X0, [X21]
	171 Multiply S1, S8, S8
	172 Add S14, S1, S0
	173 Multiply S0, S11, S11
	174 Move W8, [X0+224]
	175 Multiply S1, S12, S12
	176 Add S0, S0, S1
	177 Multiply S1, S13, S13
	178 Add S15, S1, S0
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X8, -50954240
	183 Move V1, [X8+4072]
	184 Multiply S0, S14, S15
	185 NotImplemented "Instruction FSQRT not yet implemented."
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 Move S1, W31
	188 Move X0, [X21]
	189 Multiply S1, S9, S11
	190 Multiply S2, S10, S12
	191 Multiply S3, S8, S13
	192 Add S1, S1, S2
	193 Add S1, S3, S1
	194 Move W8, [X0+224]
	195 NotImplemented "Instruction FDIV not yet implemented."
	196 Move S1, 1
	197 Move S2, -1
	198 NotImplemented "Instruction FMIN not yet implemented."
	199 NotImplemented "Instruction FCMP not yet implemented."
	200 NotImplemented "Instruction FCSEL not yet implemented."
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 NotImplemented "Instruction FCVT not yet implemented."
	205 Call 0x3EB2B80
	206 Move X8, -50950144
	207 Move V1, [X8+1096]
	208 NotImplemented "Instruction INVALID not yet implemented."
	209 Multiply S1, S0, S1
	210 Move V0, [X19+488]
	211 NotImplemented "Instruction FCMP not yet implemented."
	212 Move W21, [X19+472]
	213 Move X0, X31
	214 Call Time.get_time
	215 Move [X31+200], W31
	216 Move [X31+184], X31
	217 Move [X31+192], X31
	218 Move [X31+176], X31
	219 Move [X31+204], S0
	220 Move [X31+208], W21
	221 Move X8, 0x5D9000
	222 Move X8, [X8+872]
	223 Move X9, [X20]
	224 Move X8, [X8]
	225 Move W11, [X9+304]
	226 Move W10, [X8+304]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X9, [X9+200]
	229 Add X9, X9, X10
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 Move V2, [X31+224]
	234 Move V1, [X31+240]
	235 Move [X31+76], V0
	236 Move [X31+48], V2
	237 Move [X31+56], V1
	238 Move X8, [X19]
	239 Move V0, [X31+4]
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 Move X9, [X8+2152]
	242 Move [X31+272], V2
	243 Move [X31+280], V0
	244 Move [X22+76], V1
	245 Move X4, [X8+2160]
	246 Add X2, X31, 272
	247 Add X3, X31, 176
	248 Move X0, X19
	249 Move X1, X20
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {320}
	255 Add X2, X31, 176
	256 Move X0, X19
	257 Move X1, X20
	258 Call BaseTeleportationInteractable.UpdateTeleportRequestRotation, X0, X1, X2
	259 Move X0, [X19+464]
	260 Move V0, [X31+176]
	261 Move V1, [X31+192]
	262 Move W8, [X31+208]
	263 Move [X31], V0
	264 Move [X31+8], V1
	265 Move [X31+32], W8
	266 Compare X0, 0
	267 JumpIfEqual {351}
	268 Move X8, [X0]
	269 Move V0, [X31]
	270 Move V1, [X31+16]
	271 Move W9, [X31+32]
	272 Add X1, X31, 272
	273 Move X10, [X8+392]
	274 Move [X31+272], V0
	275 Move [X31+280], V1
	276 Move [X31+304], W9
	277 Move X2, [X8+400]
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {320}
	283 Move X8, [X19+496]
	284 Compare X8, 0
	285 JumpIfEqual {320}
	286 Move X0, [X19+504]
	287 Compare X0, 0
	288 JumpIfEqual {351}
	289 Move X8, 0x5DA000
	290 Move X8, [X8+3632]
	291 Add X1, X31, 160
	292 Move X2, [X8]
	293 Call 0x2EF2058, X0, X1
	294 Move X8, X1
	295 Move X1, [X31+160]
	296 Move [X31+144], X0
	297 Move [X31+152], X8
	298 Compare X1, 0
	299 JumpIfEqual {352}
	300 Move [X1+16], X20
	301 Move [X1+24], X19
	302 Move W8, [X31+208]
	303 Move V1, [X31+176]
	304 Move V0, [X31+192]
	305 Move [X1+64], W8
	306 Move [X1+32], V1
	307 Move [X1+40], V0
	308 Move X0, [X19+496]
	309 Compare X0, 0
	310 JumpIfEqual {353}
	311 Move X8, 0x5DA000
	312 Move X8, [X8+3648]
	313 Move X2, [X8]
	314 Call UnityEvent`1<Object>.Invoke, X0, X1
	315 Move X8, 0x5DA000
	316 Move X8, [X8+3640]
	317 Add X0, X31, 144
	318 Move X1, [X8]
	319 Call 0x24A7DD0, X0
	320 Move X20, [X31+432]
	321 Move X19, [X31+440]
	322 Move X22, [X31+416]
	323 Move X21, [X31+424]
	324 Move X30, [X31+400]
	325 Move X23, [X31+408]
	326 Move X29, [X31+384]
	327 Move D9, [X31+368]
	328 Move D8, [X31+376]
	329 Move D11, [X31+352]
	330 Move D10, [X31+360]
	331 Move D13, [X31+336]
	332 Move D12, [X31+344]
	333 Move D15, [X31+320]
	334 Move D14, [X31+328]
	335 Add X31, X31, 448
	336 Return 
	337 NotImplemented "Instruction LDUR not yet implemented."
	338 Move V2, [X31+224]
	339 Move V1, [X31+240]
	340 Move [X31+124], V0
	341 Move [X31+96], V2
	342 Move [X31+104], V1
	343 Move X8, [X19]
	344 Move V0, [X31+7]
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 Move X9, [X8+2168]
	347 Move [X31+272], V2
	348 Move [X31+280], V0
	349 Move [X22+76], V1
	350 Move X4, [X8+2176]
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Move X20, X0
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move X0, X20
	357 Call 0x3EB2AD0
	358 Move X19, [X0]
	359 Call 0x3EB2AE0
	360 Move X8, 0x5DA000
	361 Move X8, [X8+3640]
	362 Add X0, X31, 144
	363 Move X1, [X8]
	364 Call 0x24A7DD0, X0
	365 Compare X19, 0
	366 JumpIfEqual {320}
	367 Move X0, X19
	368 Call 0x1C17F18
	369 Move X19, X31
	370 Move X20, X0
	371 Move X8, 0x5DA000
	372 Move X8, [X8+3640]
	373 Move X1, [X8]
	374 Add X0, X31, 144
	375 Call 0x24A7DD0, X0
	376 Compare X19, 0
	377 JumpIfNotEqual {380}
	378 Move X0, X20
	379 Call 0x1D2D690
	380 Move X0, X19
	381 Call 0x1C17F18
	382 Call 0x1991590

Method: System.Void UpdateTeleportRequestRotation(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, ref UnityEngine.XR.Interaction.Toolkit.TeleportRequest teleportRequest)

Disassembly:
	0x03B823D4 LDR X0, [X20]
	0x03B823D8 LDR X20, [X19 + 0x208]
	0x03B823DC LDR W8, [X0 + 0xE0]
	0x03B823E0 CBNZ W8, 0x3B823E8
	0x03B823E4 BL 0x1C16DFC
	0x03B823E8 MOV X0, X20
	0x03B823EC MOV X1, X31
	0x03B823F0 MOV X2, X31
	0x03B823F4 BL 0x3C3883C
	0x03B823F8 TBZ X0, 0x0, 0x3B8240C
	0x03B823FC MOV X0, X19
	0x03B82400 MOV X1, X31
	0x03B82404 BL 0x3C32E90
	0x03B82408 STR X0, [X19 + 0x208]
	0x03B8240C LDP X20, X19, [X31 + 0x10]
	0x03B82410 LDP X30, X21, [X31], #0x20
	0x03B82414 RET
	0x03B82418 STP X30, X19, [X31 - 0x10]!
	0x03B8241C MOV X1, X31
	0x03B82420 MOV X19, X0
	0x03B82424 BL 0x3C32E90
	0x03B82428 STR X0, [X19 + 0x208]
	0x03B8242C LDP X30, X19, [X31], #0x10
	0x03B82430 RET
	0x03B82434 STR D14, [X31 - 0x60]!
	0x03B82438 STP D13, D12, [X31 + 0x10]
	0x03B8243C STP D11, D10, [X31 + 0x20]
	0x03B82440 STP D9, D8, [X31 + 0x30]
	0x03B82444 STP X30, X21, [X31 + 0x40]
	0x03B82448 STP X20, X19, [X31 + 0x50]
	0x03B8244C ADRP X21, 0x860000
	0x03B82450 ADRP X20, 0x571000
	0x03B82454 LDRB W8, [X21 + 0xADF]
	0x03B82458 LDR X20, [X20 + 0x598]
	0x03B8245C MOV X19, X0
	0x03B82460 TBNZ X8, 0x0, 0x3B82484
	0x03B82464 ADRP X0, 0x5D9000
	0x03B82468 LDR X0, [X0 + 0xEA0]
	0x03B8246C BL 0x1C16CF4
	0x03B82470 ADRP X0, 0x571000
	0x03B82474 LDR X0, [X0 + 0x598]
	0x03B82478 BL 0x1C16CF4
	0x03B8247C MOVZ W8, 0x1
	0x03B82480 STRB W8, [X21 + 0xADF]
	0x03B82484 LDR X0, [X20]
	0x03B82488 LDR X20, [X19 + 0x208]
	0x03B8248C LDR W8, [X0 + 0xE0]
	0x03B82490 CBNZ W8, 0x3B82498
	0x03B82494 BL 0x1C16DFC
	0x03B82498 MOV X0, X20
	0x03B8249C MOV X1, X31
	0x03B824A0 MOV X2, X31
	0x03B824A4 BL 0x3C3883C
	0x03B824A8 TBZ X0, 0x0, 0x3B824C8
	0x03B824AC LDP X20, X19, [X31 + 0x50]
	0x03B824B0 LDP X30, X21, [X31 + 0x40]
	0x03B824B4 LDP D9, D8, [X31 + 0x30]
	0x03B824B8 LDP D11, D10, [X31 + 0x20]
	0x03B824BC LDP D13, D12, [X31 + 0x10]
	0x03B824C0 LDR V14, [X31], #0x60
	0x03B824C4 RET
	0x03B824C8 FMOV S0, W31
	0x03B824CC FMOV S1, W31
	0x03B824D0 FMOV S2, 1
	0x03B824D4 FMOV S3, 1
	0x03B824D8 MOV X0, X31
	0x03B824DC BL 0x3C0D030
	0x03B824E0 LDR X0, [X19 + 0x208]
	0x03B824E4 CBZ X0, 0x3B8257C
	0x03B824E8 MOV X1, X31
	0x03B824EC BL 0x3C3F58C
	0x03B824F0 LDR X0, [X19 + 0x208]
	0x03B824F4 CBZ X0, 0x3B8257C
	0x03B824F8 MOV X1, X31
	0x03B824FC MOV V8.16B, V0.16B
	0x03B82500 MOV V9.16B, V1.16B
	0x03B82504 MOV V10.16B, V2.16B
	0x03B82508 BL 0x3C3DEB4
	0x03B8250C ADRP X8, 0x5D9000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D10
	003 Move [X31+24], D9
	004 Move [X31+32], D8
	005 Move [X31+40], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x861000
	011 Move W8, [X22+2774]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x5DA000
	020 Move X0, [X0+3656]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2774], W8
	024 Move [X31+8], W31
	025 Move [X31], X31
	026 Move W8, [X20+476]
	027 Compare W8, 0
	028 JumpIfEqual {89}
	029 Move X0, [X20+512]
	030 Compare X0, 0
	031 JumpIfEqual {99}
	032 Move X8, 0x5DA000
	033 Move X8, [X8+3656]
	034 Add X2, X31, 0
	035 Move X1, X21
	036 Move X3, [X8]
	037 Call Dictionary`2<Object, Vector3>.TryGetValue, X0, X1, X2
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {89}
	042 Move W8, [X19+32]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare W8, 0
	045 JumpIfNotEqual {89}
	046 Move X20, 0x857000
	047 Move S8, [X31]
	048 Move S9, [X31+4]
	049 Move W8, [X20+1926]
	050 Move V10, [X31+8]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x572000
	054 Move X0, [X0+1440]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+1926], W8
	058 Move X8, 0x572000
	059 Move X8, [X8+1440]
	060 Move X8, [X8]
	061 Move X8, [X8+184]
	062 Move S3, [X8+24]
	063 Move S4, [X8+28]
	064 Move V5, [X8+32]
	065 Move S8, [X31]
	066 Move S9, [X31+4]
	067 Move V10, [X31+8]
	068 Move X0, X20
	069 Move X1, X31
	070 Call Component.get_transform, X0
	071 Compare X0, 0
	072 JumpIfEqual {99}
	073 Move X1, X31
	074 Call Transform.get_up, X0
	075 Move V3, V0
	076 Move V4, V1
	077 Move V5, V2
	078 Move V0, V8
	079 Move V1, V9
	080 Move V2, V10
	081 Move X0, X31
	082 Call Quaternion.LookRotation, X0, X1
	083 Move W8, 2
	084 Move [X19+12], S0
	085 Move [X19+20], S1
	086 Move [X19+20], S2
	087 Move [X19+28], S3
	088 Move [X19+32], W8
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X30, [X31+40]
	094 Move D9, [X31+24]
	095 Move D8, [X31+32]
	096 Move V10, [X31+16]
	097 Add X31, X31, 80
	098 Return 
	099 Call 0x1C17F20

Method: System.Void ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B82510 LDR X8, [X8 + 0xEA0]
	0x03B82514 MOV V11.16B, V0.16B
	0x03B82518 MOV V12.16B, V1.16B
	0x03B8251C MOV V13.16B, V2.16B
	0x03B82520 LDR X0, [X8]
	0x03B82524 MOV V14.16B, V3.16B
	0x03B82528 LDR W8, [X0 + 0xE0]
	0x03B8252C CBNZ W8, 0x3B82534
	0x03B82530 BL 0x1C16DFC
	0x03B82534 FMOV S7, 1
	0x03B82538 MOV V0.16B, V8.16B
	0x03B8253C MOV V1.16B, V9.16B
	0x03B82540 MOV V2.16B, V10.16B
	0x03B82544 MOV V3.16B, V11.16B
	0x03B82548 MOV V4.16B, V12.16B
	0x03B8254C MOV V5.16B, V13.16B
	0x03B82550 MOV V6.16B, V14.16B
	0x03B82554 BL 0x3B82580
	0x03B82558 LDR X0, [X19 + 0x208]
	0x03B8255C LDP X20, X19, [X31 + 0x50]
	0x03B82560 LDP X30, X21, [X31 + 0x40]
	0x03B82564 LDP D9, D8, [X31 + 0x30]
	0x03B82568 LDP D11, D10, [X31 + 0x20]
	0x03B8256C LDP D13, D12, [X31 + 0x10]
	0x03B82570 FMOV S0, 1
	0x03B82574 LDR V14, [X31], #0x60
	0x03B82578 B 0x3B82CB4
	0x03B8257C BL 0x1C16F20
	0x03B82580 SUB X31, X31, 0x80
	0x03B82584 STP D15, D14, [X31 + 0x30]
	0x03B82588 STP D13, D12, [X31 + 0x40]
	0x03B8258C STP D11, D10, [X31 + 0x50]
	0x03B82590 STP D9, D8, [X31 + 0x60]
	0x03B82594 STR X30, [X31 + 0x70]
	0x03B82598 MOV V10.16B, V0.16B
	0x03B8259C FMOV S0, 0.5
	0x03B825A0 MOV V12.16B, V6.16B
	0x03B825A4 MOV V11.16B, V5.16B
	0x03B825A8 FMUL S8, S7, S0
	0x03B825AC FNMUL S6, S7, S0
	0x03B825B0 MOV V13.16B, V4.16B
	0x03B825B4 MOV V14.16B, V3.16B
	0x03B825B8 MOV V9.16B, V2.16B
	0x03B825BC STP S1, S6, [X31 + 0x1C]
	0x03B825C0 FMOV S5, W31
	0x03B825C4 MOV V0.16B, V3.16B
	0x03B825C8 MOV V1.16B, V4.16B
	0x03B825CC MOV V2.16B, V11.16B
	0x03B825D0 MOV V3.16B, V12.16B
	0x03B825D4 MOV V4.16B, V8.16B
	0x03B825D8 MOV X0, X31
	0x03B825DC STR S7, [X31 + 0x7C]
	0x03B825E0 BL 0x3C2A9FC
	0x03B825E4 FADD S7, S10, S0
	0x03B825E8 MOV V15.16B, V10.16B
	0x03B825EC STR S10, [X31 + 0x78]
	0x03B825F0 LDR V10, [X31 + 0x1C]
	0x03B825F4 FMOV S5, W31
	0x03B825F8 MOV V3.16B, V12.16B
	0x03B825FC MOV V4.16B, V8.16B
	0x03B82600 FADD S0, S10, S1
	0x03B82604 STP S0, S7, [X31 + 0x8]
	0x03B82608 FADD S0, S9, S2
	0x03B8260C STR S0, [X31 + 0x4]
	0x03B82610 MOV V0.16B, V14.16B
	0x03B82614 MOV V1.16B, V13.16B
	0x03B82618 MOV V2.16B, V11.16B
	0x03B8261C MOV V6.16B, V8.16B
	0x03B82620 MOV X0, X31
	0x03B82624 STR S13, [X31 + 0x2C]
	0x03B82628 BL 0x3C2A9FC
	0x03B8262C FADD S3, S15, S0
	0x03B82630 FADD S4, S10, S1
	0x03B82634 FADD S5, S9, S2
	0x03B82638 LDP S1, S0, [X31 + 0x8]
	0x03B8263C LDR V2, [X31 + 0x4]
	0x03B82640 MOV X0, X31
	0x03B82644 BL 0x3C0CB04
	0x03B82648 FMOV S5, W31
	0x03B8264C MOV V0.16B, V14.16B
	0x03B82650 MOV V1.16B, V13.16B
	0x03B82654 MOV V2.16B, V11.16B
	0x03B82658 MOV V3.16B, V12.16B
	0x03B8265C MOV V4.16B, V8.16B
	0x03B82660 MOV V6.16B, V8.16B
	0x03B82664 MOV X0, X31
	0x03B82668 MOV V15.16B, V12.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x861000
	008 Move W8, [X21+2775]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x5D9000
	016 Move X0, [X0+360]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D9000
	019 Move X0, [X0+336]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D9000
	022 Move X0, [X0+344]
	023 Call 0x1C17CF4
	024 Move X0, 0x5D9000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2775], W8
	029 Move X0, X19
	030 Move W1, W20
	031 Move X2, X31
	032 Call XRBaseInteractable.ProcessInteractable, X0, X1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X19+476]
	035 Compare W8, 0
	036 JumpIfEqual {92}
	037 Move X0, X19
	038 Move X1, X31
	039 Call XRBaseInteractable.get_interactorsHovering, X0
	040 Compare X0, 0
	041 JumpIfEqual {99}
	042 Move W21, [X0+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, 0x5D9000
	045 Move X22, [X22+344]
	046 Move W20, W31
	047 Move X0, X19
	048 Move X1, X31
	049 Call XRBaseInteractable.get_interactorsHovering, X0
	050 Compare X0, 0
	051 JumpIfEqual {99}
	052 Move X2, [X22]
	053 Move W1, W20
	054 Call List`1<Object>.get_Item, X0, X1
	055 Move X1, X0
	056 Move X0, X19
	057 Call BaseTeleportationInteractable.<ProcessInteractable>g__CalculateTeleportForward|37_0, X0, X1
	058 Add W20, W20, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X19
	061 Move X1, X31
	062 Call XRBaseInteractable.get_interactorsSelecting, X0
	063 Compare X0, 0
	064 JumpIfEqual {99}
	065 Move W22, [X0+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X23, 0x5D9000
	068 Move X23, [X23+368]
	069 Move W20, W31
	070 Move X0, X19
	071 Move X1, X31
	072 Call XRBaseInteractable.get_interactorsSelecting, X0
	073 Compare X0, 0
	074 JumpIfEqual {99}
	075 Move X2, [X23]
	076 Move W1, W20
	077 Call List`1<Object>.get_Item, X0, X1
	078 Move X21, X0
	079 Move X0, X19
	080 Move X1, X21
	081 Move X2, X31
	082 Call XRBaseInteractable.IsHovered, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X19
	088 Move X1, X21
	089 Call BaseTeleportationInteractable.<ProcessInteractable>g__CalculateTeleportForward|37_0, X0, X1
	090 Add W20, W20, 1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Move X23, [X31+56]
	098 Return 
	099 Call 0x1C17F20

Method: System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B82A78 LDR V15, [X31 + 0x2C]
	0x03B82A7C MOV V2.16B, V13.16B
	0x03B82A80 LDR V13, [X31 + 0x28]
	0x03B82A84 LDR V5, [X31 + 0x7C]
	0x03B82A88 MOV V0.16B, V11.16B
	0x03B82A8C MOV V1.16B, V15.16B
	0x03B82A90 MOV V3.16B, V13.16B
	0x03B82A94 MOV V4.16B, V8.16B
	0x03B82A98 MOV V6.16B, V10.16B
	0x03B82A9C MOV X0, X31
	0x03B82AA0 BL 0x3C2A9FC
	0x03B82AA4 LDR V3, [X31 + 0x78]
	0x03B82AA8 LDR V12, [X31 + 0x14]
	0x03B82AAC FMOV S5, W31
	0x03B82AB0 MOV V4.16B, V8.16B
	0x03B82AB4 FADD S7, S3, S0
	0x03B82AB8 FADD S0, S14, S1
	0x03B82ABC STP S0, S7, [X31 + 0x8]
	0x03B82AC0 FADD S0, S9, S2
	0x03B82AC4 STR S0, [X31 + 0x4]
	0x03B82AC8 MOV V0.16B, V11.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+480]
	005 Move X19, X0
	006 Move X20, X1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Compare X20, 0
	009 JumpIfEqual {24}
	010 Move X0, X20
	011 Move X1, X31
	012 Call SelectEnterEventArgs.get_interactorObject, X0
	013 Move X1, X0
	014 Move X0, X19
	015 Call BaseTeleportationInteractable.SendTeleportRequest, X0, X1
	016 Move X0, X19
	017 Move X1, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, X31
	021 Move X30, [X31+32]
	022 Call XRBaseInteractable.OnSelectEntered, X0, X1
	023 Return 
	024 Call 0x1C17F20

Method: System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B82ACC MOV V1.16B, V15.16B
	0x03B82AD0 MOV V2.16B, V12.16B
	0x03B82AD4 MOV V3.16B, V13.16B
	0x03B82AD8 MOV V6.16B, V10.16B
	0x03B82ADC MOV X0, X31
	0x03B82AE0 BL 0x3C2A9FC
	0x03B82AE4 LDR V10, [X31 + 0x78]
	0x03B82AE8 FADD S4, S14, S1
	0x03B82AEC FADD S5, S9, S2
	0x03B82AF0 LDR V2, [X31 + 0x4]
	0x03B82AF4 FADD S3, S10, S0
	0x03B82AF8 LDP S1, S0, [X31 + 0x8]
	0x03B82AFC MOV X0, X31
	0x03B82B00 BL 0x3C0CB04
	0x03B82B04 LDR V5, [X31 + 0x7C]
	0x03B82B08 MOV V0.16B, V11.16B
	0x03B82B0C MOV V1.16B, V15.16B
	0x03B82B10 MOV V2.16B, V12.16B
	0x03B82B14 MOV V3.16B, V13.16B
	0x03B82B18 MOV V4.16B, V8.16B
	0x03B82B1C MOV V6.16B, V8.16B
	0x03B82B20 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+480]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfNotEqual {20}
	009 Compare X20, 0
	010 JumpIfEqual {28}
	011 Move W8, [X20+40]
	012 Compare W8, 0
	013 JumpIfNotEqual {20}
	014 Move X0, X20
	015 Move X1, X31
	016 Call SelectExitEventArgs.get_interactorObject, X0
	017 Move X1, X0
	018 Move X0, X19
	019 Call BaseTeleportationInteractable.SendTeleportRequest, X0, X1
	020 Move X0, X19
	021 Move X1, X20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, X31
	025 Move X30, [X31+32]
	026 Call XRBaseInteractable.OnSelectExited, X0, X1
	027 Return 
	028 Call 0x1C17F20

Method: System.Void OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args)

Disassembly:
	0x03B82B24 BL 0x3C2A9FC
	0x03B82B28 FADD S7, S10, S0
	0x03B82B2C FADD S0, S14, S1
	0x03B82B30 STP S0, S7, [X31 + 0x8]
	0x03B82B34 FADD S0, S9, S2
	0x03B82B38 STR S0, [X31 + 0x4]
	0x03B82B3C MOV V0.16B, V11.16B
	0x03B82B40 MOV V15.16B, V11.16B
	0x03B82B44 LDR V11, [X31 + 0x2C]
	0x03B82B48 FMOV S5, W31
	0x03B82B4C MOV V2.16B, V12.16B
	0x03B82B50 MOV V3.16B, V13.16B
	0x03B82B54 MOV V1.16B, V11.16B
	0x03B82B58 MOV V4.16B, V8.16B
	0x03B82B5C MOV V6.16B, V8.16B
	0x03B82B60 MOV X0, X31
	0x03B82B64 MOV V13.16B, V8.16B
	0x03B82B68 BL 0x3C2A9FC
	0x03B82B6C FADD S3, S10, S0
	0x03B82B70 FADD S4, S14, S1
	0x03B82B74 FADD S5, S9, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+480]
	005 Move X19, X0
	006 Move X20, X1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Compare X20, 0
	009 JumpIfEqual {24}
	010 Move X0, X20
	011 Move X1, X31
	012 Call ActivateEventArgs.get_interactorObject, X0
	013 Move X1, X0
	014 Move X0, X19
	015 Call BaseTeleportationInteractable.SendTeleportRequest, X0, X1
	016 Move X0, X19
	017 Move X1, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, X31
	021 Move X30, [X31+32]
	022 Call XRBaseInteractable.OnActivated, X0, X1
	023 Return 
	024 Call 0x1C17F20

Method: System.Void OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args)

Disassembly:
	0x03B82B78 LDP S1, S0, [X31 + 0x8]
	0x03B82B7C LDR V2, [X31 + 0x4]
	0x03B82B80 MOV X0, X31
	0x03B82B84 BL 0x3C0CB04
	0x03B82B88 LDR V9, [X31 + 0x28]
	0x03B82B8C LDR V10, [X31 + 0x20]
	0x03B82B90 LDR V5, [X31 + 0x7C]
	0x03B82B94 MOV V0.16B, V15.16B
	0x03B82B98 MOV V1.16B, V11.16B
	0x03B82B9C MOV V2.16B, V12.16B
	0x03B82BA0 MOV V3.16B, V9.16B
	0x03B82BA4 MOV V4.16B, V10.16B
	0x03B82BA8 MOV V6.16B, V13.16B
	0x03B82BAC MOV X0, X31
	0x03B82BB0 MOV V8.16B, V12.16B
	0x03B82BB4 BL 0x3C2A9FC
	0x03B82BB8 LDR V15, [X31 + 0x78]
	0x03B82BBC LDR V13, [X31 + 0x10]
	0x03B82BC0 LDR V11, [X31 + 0x18]
	0x03B82BC4 LDR V12, [X31 + 0x2C]
	0x03B82BC8 LDR V6, [X31 + 0x24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+480]
	005 Move X19, X0
	006 Move X20, X1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Compare X20, 0
	009 JumpIfEqual {24}
	010 Move X0, X20
	011 Move X1, X31
	012 Call DeactivateEventArgs.get_interactorObject, X0
	013 Move X1, X0
	014 Move X0, X19
	015 Call BaseTeleportationInteractable.SendTeleportRequest, X0, X1
	016 Move X0, X19
	017 Move X1, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, X31
	021 Move X30, [X31+32]
	022 Call XRBaseInteractable.OnDeactivated, X0, X1
	023 Return 
	024 Call 0x1C17F20

Method: System.Boolean IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B82BCC FADD S7, S15, S0
	0x03B82BD0 FADD S0, S14, S1
	0x03B82BD4 STP S0, S7, [X31 + 0x8]
	0x03B82BD8 FADD S0, S13, S2
	0x03B82BDC STR S0, [X31 + 0x4]
	0x03B82BE0 FMOV S5, W31
	0x03B82BE4 MOV V0.16B, V11.16B
	0x03B82BE8 MOV V1.16B, V12.16B
	0x03B82BEC MOV V2.16B, V8.16B
	0x03B82BF0 MOV V3.16B, V9.16B
	0x03B82BF4 MOV V4.16B, V10.16B
	0x03B82BF8 MOV X0, X31
	0x03B82BFC BL 0x3C2A9FC
	0x03B82C00 FADD S3, S15, S0
	0x03B82C04 FADD S4, S14, S1
	0x03B82C08 FADD S5, S13, S2
	0x03B82C0C LDP S1, S0, [X31 + 0x8]
	0x03B82C10 LDR V2, [X31 + 0x4]
	0x03B82C14 MOV X0, X31
	0x03B82C18 BL 0x3C0CB04
	0x03B82C1C LDR V5, [X31 + 0x7C]
	0x03B82C20 MOV V0.16B, V11.16B
	0x03B82C24 MOV V1.16B, V12.16B
	0x03B82C28 MOV V2.16B, V8.16B
	0x03B82C2C MOV V3.16B, V9.16B
	0x03B82C30 MOV V4.16B, V10.16B
	0x03B82C34 MOV V6.16B, V10.16B
	0x03B82C38 MOV X0, X31
	0x03B82C3C MOV V11.16B, V8.16B
	0x03B82C40 BL 0x3C2A9FC
	0x03B82C44 FADD S8, S15, S0
	0x03B82C48 FADD S0, S14, S1
	0x03B82C4C STR S0, [X31 + 0x7C]
	0x03B82C50 FADD S0, S13, S2
	0x03B82C54 STR S0, [X31 + 0x24]
	0x03B82C58 LDR V0, [X31 + 0x18]
	0x03B82C5C FMOV S5, W31
	0x03B82C60 MOV V1.16B, V12.16B
	0x03B82C64 MOV V2.16B, V11.16B
	0x03B82C68 MOV V3.16B, V9.16B
	0x03B82C6C MOV V4.16B, V10.16B
	0x03B82C70 MOV V6.16B, V10.16B
	0x03B82C74 MOV X0, X31
	0x03B82C78 BL 0x3C2A9FC
	0x03B82C7C FADD S3, S15, S0
	0x03B82C80 FADD S4, S14, S1
	0x03B82C84 FADD S5, S13, S2
	0x03B82C88 MOV V0.16B, V8.16B
	0x03B82C8C LDR V1, [X31 + 0x7C]
	0x03B82C90 LDR V2, [X31 + 0x24]
	0x03B82C94 LDR X30, [X31 + 0x70]
	0x03B82C98 LDP D9, D8, [X31 + 0x60]
	0x03B82C9C LDP D11, D10, [X31 + 0x50]
	0x03B82CA0 LDP D13, D12, [X31 + 0x40]
	0x03B82CA4 LDP D15, D14, [X31 + 0x30]
	0x03B82CA8 MOV X0, X31
	0x03B82CAC ADD X31, X31, 0x80
	0x03B82CB0 B 0x3C0CB04
	0x03B82CB4 STP D11, D10, [X31 - 0x40]!
	0x03B82CB8 STP D9, D8, [X31 + 0x10]
	0x03B82CBC STR X30, [X31 + 0x20]
	0x03B82CC0 STP X20, X19, [X31 + 0x30]
	0x03B82CC4 ADRP X20, 0x860000
	0x03B82CC8 LDRB W8, [X20 + 0xAF1]
	0x03B82CCC MOV V8.16B, V0.16B
	0x03B82CD0 MOV X19, X0
	0x03B82CD4 TBNZ X8, 0x0, 0x3B82CEC
	0x03B82CD8 ADRP X0, 0x5D9000
	0x03B82CDC LDR X0, [X0 + 0xEA0]
	0x03B82CE0 BL 0x1C16CF4
	0x03B82CE4 MOVZ W8, 0x1
	0x03B82CE8 STRB W8, [X20 + 0xAF1]
	0x03B82CEC CBZ X19, 0x3B82DFC
	0x03B82CF0 ADRP X20, 0x5D9000
	0x03B82CF4 LDR X20, [X20 + 0xEA0]
	0x03B82CF8 MOV X0, X19
	0x03B82CFC MOV X1, X31
	0x03B82D00 BL 0x3C3F58C
	0x03B82D04 LDR X0, [X20]
	0x03B82D08 MOV V9.16B, V0.16B
	0x03B82D0C MOV V10.16B, V1.16B
	0x03B82D10 MOV V11.16B, V2.16B
	0x03B82D14 LDR W8, [X0 + 0xE0]
	0x03B82D18 CBNZ W8, 0x3B82D24
	0x03B82D1C BL 0x1C16DFC
	0x03B82D20 LDR X0, [X20]
	0x03B82D24 LDR X8, [X0 + 0xB8]
	0x03B82D28 MOV X0, X31
	0x03B82D2C LDP S0, S1, [X8 + 0x20]
	0x03B82D30 LDP S2, S3, [X8 + 0x28]
	0x03B82D34 BL 0x3C0D030
	0x03B82D38 MOV X0, X19
	0x03B82D3C MOV X1, X31
	0x03B82D40 BL 0x3C3FA04
	0x03B82D44 FMUL S3, S0, S8
	0x03B82D48 FMUL S4, S1, S8
	0x03B82D4C FMUL S5, S2, S8
	0x03B82D50 MOV V0.16B, V9.16B
	0x03B82D54 MOV V1.16B, V10.16B
	0x03B82D58 MOV V2.16B, V11.16B
	0x03B82D5C MOV X0, X31
	0x03B82D60 BL 0x3C0D1C8
	0x03B82D64 LDR X8, [X20]
	0x03B82D68 MOV X0, X31
	0x03B82D6C LDR X8, [X8 + 0xB8]
	0x03B82D70 LDP S0, S1, [X8 + 0x10]
	0x03B82D74 LDP S2, S3, [X8 + 0x18]
	0x03B82D78 BL 0x3C0D030
	0x03B82D7C MOV X0, X19
	0x03B82D80 MOV X1, X31
	0x03B82D84 BL 0x3C3F988
	0x03B82D88 FMUL S3, S0, S8
	0x03B82D8C FMUL S4, S1, S8
	0x03B82D90 FMUL S5, S2, S8
	0x03B82D94 MOV V0.16B, V9.16B
	0x03B82D98 MOV V1.16B, V10.16B
	0x03B82D9C MOV V2.16B, V11.16B
	0x03B82DA0 MOV X0, X31
	0x03B82DA4 BL 0x3C0D1C8
	0x03B82DA8 LDR X8, [X20]
	0x03B82DAC MOV X0, X31
	0x03B82DB0 LDR X8, [X8 + 0xB8]
	0x03B82DB4 LDP S0, S1, [X8]
	0x03B82DB8 LDP S2, S3, [X8 + 0x8]
	0x03B82DBC BL 0x3C0D030
	0x03B82DC0 MOV X0, X19
	0x03B82DC4 MOV X1, X31
	0x03B82DC8 BL 0x3C3F90C
	0x03B82DCC FMUL S3, S0, S8
	0x03B82DD0 FMUL S4, S1, S8
	0x03B82DD4 FMUL S5, S2, S8
	0x03B82DD8 MOV V0.16B, V9.16B
	0x03B82DDC LDP X20, X19, [X31 + 0x30]
	0x03B82DE0 LDR X30, [X31 + 0x20]
	0x03B82DE4 LDP D9, D8, [X31 + 0x10]
	0x03B82DE8 MOV V1.16B, V10.16B
	0x03B82DEC MOV V2.16B, V11.16B
	0x03B82DF0 MOV X0, X31
	0x03B82DF4 LDP D11, D10, [X31], #0x40
	0x03B82DF8 B 0x3C0D1C8
	0x03B82DFC BL 0x1C16F20
	0x03B82E00 LDR X0, [X0 + 0x208]
	0x03B82E04 RET
	0x03B82E08 STR X30, [X31 - 0x30]!
	0x03B82E0C STP X22, X21, [X31 + 0x10]
	0x03B82E10 STP X20, X19, [X31 + 0x20]
	0x03B82E14 ADRP X22, 0x860000
	0x03B82E18 ADRP X21, 0x571000
	0x03B82E1C LDRB W8, [X22 + 0xAE0]
	0x03B82E20 LDR X21, [X21 + 0x598]
	0x03B82E24 MOV X19, X3
	0x03B82E28 MOV X20, X0
	0x03B82E2C TBNZ X8, 0x0, 0x3B82E44
	0x03B82E30 ADRP X0, 0x571000
	0x03B82E34 LDR X0, [X0 + 0x598]
	0x03B82E38 BL 0x1C16CF4
	0x03B82E3C MOVZ W8, 0x1
	0x03B82E40 STRB W8, [X22 + 0xAE0]
	0x03B82E44 LDR X0, [X21]
	0x03B82E48 LDR X21, [X20 + 0x208]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x861000
	015 Move W8, [X21+2776]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x572000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D9000
	026 Move X0, [X0+1984]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2776], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move X0, X19
	032 Move X1, X20
	033 Move X2, X31
	034 Move [X31+44], V0
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31+8], X31
	038 Call XRBaseInteractable.IsSelectableBy, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {103}
	043 Move W8, [X19+484]
	044 Compare W8, 0
	045 JumpIfEqual {102}
	046 Compare X20, 0
	047 JumpIfEqual {102}
	048 Move X8, 0x5D9000
	049 Move X8, [X8+1984]
	050 Move X9, [X20]
	051 Move X8, [X8]
	052 Move W11, [X9+304]
	053 Move W10, [X8+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X9+200]
	056 Add X9, X9, X10
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move X8, 0x572000
	061 Move X8, [X8+1432]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Inequality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {102}
	075 Compare X20, 0
	076 JumpIfEqual {191}
	077 Add X1, X31, 16
	078 Move X0, X20
	079 Move X2, X31
	080 Call XRRayInteractor.TryGetCurrent3DRaycastHit, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {102}
	085 Move X20, [X19+56]
	086 Add X0, X31, 16
	087 Move X1, X31
	088 Call RaycastHit.get_collider, X0
	089 Compare X20, 0
	090 JumpIfEqual {191}
	091 Move X1, X0
	092 Add X2, X31, 8
	093 Move X0, X20
	094 Move X3, X31
	095 Call XRInteractionManager.TryGetInteractableForCollider, X0, X1, X2
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {102}
	100 Move X8, [X31+8]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W0, 1
	103 Move W0, W31
	104 Move X20, [X31+144]
	105 Move X19, [X31+152]
	106 Move X30, [X31+128]
	107 Move X21, [X31+136]
	108 Move D9, [X31+112]
	109 Move D8, [X31+120]
	110 Move D11, [X31+96]
	111 Move D10, [X31+104]
	112 Move D13, [X31+80]
	113 Move D12, [X31+88]
	114 Move D15, [X31+64]
	115 Move D14, [X31+72]
	116 Add X31, X31, 160
	117 Return X0
	118 Move X0, X19
	119 Move X1, X31
	120 Call Component.get_transform, X0
	121 Compare X0, 0
	122 JumpIfEqual {191}
	123 Move X1, X31
	124 Call Transform.get_up, X0
	125 Add X0, X31, 16
	126 Move X1, X31
	127 Move V9, V0
	128 Move V10, V1
	129 Move V8, V2
	130 Call RaycastHit.get_normal, X0
	131 Move X20, 0x857000
	132 Move W8, [X20+2596]
	133 Move V11, V0
	134 Move V12, V1
	135 Move V13, V2
	136 Compare W8, 0
	137 JumpIfNotEqual {143}
	138 Move X0, 0x572000
	139 Move X0, [X0+1448]
	140 Call 0x1C17CF4
	141 Move W8, 1
	142 Move [X20+2596], W8
	143 Move X20, 0x572000
	144 Move X20, [X20+1448]
	145 Multiply S0, S9, S9
	146 Multiply S1, S10, S10
	147 Add S0, S0, S1
	148 Move X0, [X20]
	149 Multiply S1, S8, S8
	150 Add S14, S1, S0
	151 Multiply S0, S11, S11
	152 Move W8, [X0+224]
	153 Multiply S1, S12, S12
	154 Add S0, S0, S1
	155 Multiply S1, S13, S13
	156 Add S15, S1, S0
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X8, -50954240
	161 Move V1, [X8+4072]
	162 Multiply S0, S14, S15
	163 NotImplemented "Instruction FSQRT not yet implemented."
	164 NotImplemented "Instruction FCMP not yet implemented."
	165 Move S1, W31
	166 Move X0, [X20]
	167 Multiply S1, S9, S11
	168 Multiply S2, S10, S12
	169 Multiply S3, S8, S13
	170 Add S1, S1, S2
	171 Add S1, S3, S1
	172 Move W8, [X0+224]
	173 NotImplemented "Instruction FDIV not yet implemented."
	174 Move S1, 1
	175 Move S2, -1
	176 NotImplemented "Instruction FMIN not yet implemented."
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 NotImplemented "Instruction FCSEL not yet implemented."
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 NotImplemented "Instruction FCVT not yet implemented."
	183 Call 0x3EB2B80
	184 Move X8, -50950144
	185 Move V1, [X8+1096]
	186 NotImplemented "Instruction INVALID not yet implemented."
	187 Multiply S1, S0, S1
	188 Move V0, [X19+488]
	189 NotImplemented "Instruction FCMP not yet implemented."
	190 NotImplemented "Instruction CSET not yet implemented."
	191 Call 0x1C17F20

Method: System.Void GetReticleDirection(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.Vector3 hitNormal, out UnityEngine.Vector3 reticleUp, out System.Nullable`1<UnityEngine.Vector3> optionalReticleForward)

Disassembly:
	0x03B82E4C LDR W8, [X0 + 0xE0]
	0x03B82E50 CBNZ W8, 0x3B82E58
	0x03B82E54 BL 0x1C16DFC
	0x03B82E58 MOV X0, X21
	0x03B82E5C MOV X1, X31
	0x03B82E60 MOV X2, X31
	0x03B82E64 BL 0x3C3883C
	0x03B82E68 MOV W21, W0
	0x03B82E6C TBNZ X0, 0x0, 0x3B82EA0
	0x03B82E70 LDR X0, [X20 + 0x208]
	0x03B82E74 CBZ X0, 0x3B82EB8
	0x03B82E78 MOV X1, X31
	0x03B82E7C BL 0x3C3F58C
	0x03B82E80 STP S0, S1, [X19]
	0x03B82E84 STR S2, [X19 + 0x8]
	0x03B82E88 LDR X0, [X20 + 0x208]
	0x03B82E8C CBZ X0, 0x3B82EB8
	0x03B82E90 MOV X1, X31
	0x03B82E94 BL 0x3C3DEB4
	0x03B82E98 STP S0, S1, [X19 + 0xC]
	0x03B82E9C STP S2, S3, [X19 + 0x14]
	0x03B82EA0 ORN W8, W31, W21, 0x0
	0x03B82EA4 LDP X20, X19, [X31 + 0x20]
	0x03B82EA8 LDP X22, X21, [X31 + 0x10]
	0x03B82EAC AND W0, W8, 0x1
	0x03B82EB0 LDR X30, [X31], #0x30
	0x03B82EB4 RET
	0x03B82EB8 BL 0x1C16F20
	0x03B82EBC B 0x3B82100
	0x03B82EC0 STP X30, X23, [X31 - 0x30]!
	0x03B82EC4 STP X22, X21, [X31 + 0x10]
	0x03B82EC8 STP X20, X19, [X31 + 0x20]
	0x03B82ECC ADRP X23, 0x860000
	0x03B82ED0 ADRP X22, 0x571000
	0x03B82ED4 LDRB W8, [X23 + 0xAE1]
	0x03B82ED8 LDR X22, [X22 + 0x598]
	0x03B82EDC MOV X19, X3
	0x03B82EE0 MOV X21, X2
	0x03B82EE4 MOV X20, X0
	0x03B82EE8 TBNZ X8, 0x0, 0x3B82F00
	0x03B82EEC ADRP X0, 0x571000
	0x03B82EF0 LDR X0, [X0 + 0x598]
	0x03B82EF4 BL 0x1C16CF4
	0x03B82EF8 MOVZ W8, 0x1
	0x03B82EFC STRB W8, [X23 + 0xAE1]
	0x03B82F00 MOV X0, X21
	0x03B82F04 MOV X1, X31
	0x03B82F08 BL 0x3C8E5C0
	0x03B82F0C LDR X8, [X22]
	0x03B82F10 MOV X22, X0
	0x03B82F14 LDR W9, [X8 + 0xE0]
	0x03B82F18 CBNZ W9, 0x3B82F24
	0x03B82F1C MOV X0, X8
	0x03B82F20 BL 0x1C16DFC
	0x03B82F24 MOV X0, X22
	0x03B82F28 MOV X1, X31
	0x03B82F2C MOV X2, X31
	0x03B82F30 BL 0x3C3883C
	0x03B82F34 MOV W22, W0
	0x03B82F38 TBNZ X0, 0x0, 0x3B82F70
	0x03B82F3C MOV X0, X21
	0x03B82F40 MOV X1, X31
	0x03B82F44 BL 0x3C8E66C
	0x03B82F48 MOV X0, X20
	0x03B82F4C MOV X1, X31
	0x03B82F50 STP S0, S1, [X19]
	0x03B82F54 STR S2, [X19 + 0x8]
	0x03B82F58 BL 0x3C32E90
	0x03B82F5C CBZ X0, 0x3B82F88
	0x03B82F60 MOV X1, X31
	0x03B82F64 BL 0x3C3DEB4
	0x03B82F68 STP S0, S1, [X19 + 0xC]
	0x03B82F6C STP S2, S3, [X19 + 0x14]
	0x03B82F70 ORN W8, W31, W22, 0x0
	0x03B82F74 LDP X20, X19, [X31 + 0x20]
	0x03B82F78 LDP X22, X21, [X31 + 0x10]
	0x03B82F7C AND W0, W8, 0x1
	0x03B82F80 LDP X30, X23, [X31], #0x30
	0x03B82F84 RET
	0x03B82F88 BL 0x1C16F20
	0x03B82F8C B 0x3B82100
	0x03B82F90 LDR W9, [X0 + 0x68]
	0x03B82F94 LDUR V0, [X0 + 0x58]
	0x03B82F98 LDUR V1, [X0 + 0x48]
	0x03B82F9C STR W9, [X8 + 0x20]
	0x03B82FA0 STP V1, V0, [X8]
	0x03B82FA4 RET
	0x03B82FA8 LDR W8, [X1 + 0x20]
	0x03B82FAC LDP V1, V0, [X1]
	0x03B82FB0 STR W8, [X0 + 0x68]
	0x03B82FB4 STUR V0, [X0 + 0x58]
	0x03B82FB8 STUR V1, [X0 + 0x48]
	0x03B82FBC RET
	0x03B82FC0 LDRB W0, [X0 + 0x6C]
	0x03B82FC4 RET
	0x03B82FC8 AND W8, W1, 0x1
	0x03B82FCC STRB W8, [X0 + 0x6C]
	0x03B82FD0 RET
	0x03B82FD4 LDR V0, [X0 + 0x70]
	0x03B82FD8 RET
	0x03B82FDC STR S0, [X0 + 0x70]
	0x03B82FE0 RET
	0x03B82FE4 LDR W9, [X1 + 0x20]
	0x03B82FE8 LDP V1, V0, [X1]
	0x03B82FEC MOV X8, X0
	0x03B82FF0 MOVZ W10, 0x1
	0x03B82FF4 STR W9, [X0 + 0x68]
	0x03B82FF8 STUR V0, [X0 + 0x58]
	0x03B82FFC STUR V1, [X0 + 0x48]
	0x03B83000 MOVZ W0, 0x1
	0x03B83004 STRB W10, [X8 + 0x6C]
	0x03B83008 RET
	0x03B8300C SUB X31, X31, 0x30
	0x03B83010 STP X30, X21, [X31 + 0x10]
	0x03B83014 STP X20, X19, [X31 + 0x20]
	0x03B83018 ADRP X21, 0x85F000
	0x03B8301C ADRP X20, 0x570000
	0x03B83020 LDRB W8, [X21 + 0xAE2]
	0x03B83024 LDR X20, [X20 + 0x598]
	0x03B83028 MOV X19, X0
	0x03B8302C TBNZ X8, 0x0, 0x3B83068
	0x03B83030 ADRP X0, 0x570000
	0x03B83034 LDR X0, [X0 + 0xA28]
	0x03B83038 BL 0x1C16CF4
	0x03B8303C ADRP X0, 0x570000
	0x03B83040 LDR X0, [X0 + 0x598]
	0x03B83044 BL 0x1C16CF4
	0x03B83048 ADRP X0, 0x570000
	0x03B8304C LDR X0, [X0 + 0xA90]
	0x03B83050 BL 0x1C16CF4
	0x03B83054 ADRP X0, 0x5D8000
	0x03B83058 LDR X0, [X0 + 0xE20]
	0x03B8305C BL 0x1C16CF4
	0x03B83060 MOVZ W8, 0x1
	0x03B83064 STRB W8, [X21 + 0xAE2]
	0x03B83068 MOV X0, X19
	0x03B8306C MOV X1, X31
	0x03B83070 BL 0x3B7ACCC
	0x03B83074 LDR X0, [X20]
	0x03B83078 LDR X20, [X19 + 0x30]
	0x03B8307C LDR W8, [X0 + 0xE0]
	0x03B83080 CBNZ W8, 0x3B83088
	0x03B83084 BL 0x1C16DFC
	0x03B83088 MOV X0, X20
	0x03B8308C MOV X1, X31
	0x03B83090 MOV X2, X31
	0x03B83094 BL 0x3C354F8
	0x03B83098 TBZ X0, 0x0, 0x3B83144
	0x03B8309C LDR V0, [X19 + 0x70]
	0x03B830A0 FCMP S0, 0x0
	0x03B830A4 B.LE 0x3B83144
	0x03B830A8 LDR X8, [X19 + 0x30]
	0x03B830AC CBZ X8, 0x3B83154
	0x03B830B0 LDR V1, [X8 + 0x2C]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D10
	003 Move [X31+40], D9
	004 Move [X31+48], D8
	005 Move [X31+56], X30
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0x861000
	013 Move W8, [X20+2777]
	014 Move X19, X3
	015 Move X21, X2
	016 Move V8, V2
	017 Move V9, V1
	018 Move V10, V0
	019 Move X22, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x5DA000
	026 Move X0, [X0+3656]
	027 Call 0x1C17CF4
	028 Move X0, 0x575000
	029 Move X0, [X0+2904]
	030 Call 0x1C17CF4
	031 Move X0, 0x572000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2777], W8
	036 Move [X31+24], W31
	037 Move [X31+16], X31
	038 Move [X19], X31
	039 Move [X19+8], X31
	040 Move [X21], S10
	041 Move [X21+8], S9
	042 Move [X21+8], S8
	043 Move X8, [X23+464]
	044 Compare X8, 0
	045 JumpIfEqual {191}
	046 Move X8, [X8+48]
	047 Compare X8, 0
	048 JumpIfEqual {191}
	049 Move W9, [X23+472]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X20, [X8+48]
	052 Move X8, -50241536
	053 Add X8, X8, 3472
	054 NotImplemented "Instruction ADR not yet implemented."
	055 Move W11, [X8]
	056 Add X10, X10, X11
	057 CallNoReturn X10
	058 Move X24, 0x857000
	059 Move W8, [X24+1926]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x572000
	063 Move X0, [X0+1440]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X24+1926], W8
	067 Move X8, 0x572000
	068 Move X8, [X8+1440]
	069 Move X8, [X8]
	070 Move X8, [X8+184]
	071 Move V0, [X8+24]
	072 Move V1, [X8+32]
	073 Move [X21], D0
	074 Move [X21+8], S1
	075 Move X0, X23
	076 Move X1, X31
	077 Call Component.get_transform, X0
	078 Compare X0, 0
	079 JumpIfEqual {191}
	080 Move X1, X31
	081 Call Transform.get_up, X0
	082 Move [X21], S0
	083 Move [X21+8], S1
	084 Move [X21+8], S2
	085 Move W8, [X23+476]
	086 Compare W8, 0
	087 JumpIfEqual {104}
	088 Move X0, [X23+512]
	089 Compare X0, 0
	090 JumpIfEqual {191}
	091 Move X8, 0x5DA000
	092 Move X8, [X8+3656]
	093 Add X2, X31, 16
	094 Move X1, X22
	095 Move X3, [X8]
	096 Call Dictionary`2<Object, Vector3>.TryGetValue, X0, X1, X2
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {104}
	101 Move S0, [X31+16]
	102 Move S1, [X31+20]
	103 Move V2, [X31+24]
	104 Move X8, 0x572000
	105 Move X8, [X8+1432]
	106 Move X0, [X8]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X20
	112 Move X1, X31
	113 Move X2, X31
	114 Call Object.op_Inequality, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {179}
	119 Compare X20, 0
	120 JumpIfNotEqual {161}
	121 Move X0, X23
	122 Move X1, X31
	123 Call Component.get_transform, X0
	124 Compare X0, 0
	125 JumpIfEqual {191}
	126 Move X1, X31
	127 Call Transform.get_up, X0
	128 Move [X21], S0
	129 Move [X21+8], S1
	130 Move [X21+8], S2
	131 Move X0, X23
	132 Move X8, 0x571000
	133 Move X8, [X8+1432]
	134 Move X0, [X8]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X20
	140 Move X1, X31
	141 Move X2, X31
	142 Call Object.op_Inequality, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {179}
	147 Compare X20, 0
	148 JumpIfEqual {191}
	149 Move X0, [X20+56]
	150 Compare X0, 0
	151 JumpIfEqual {191}
	152 Move X1, X31
	153 Call GameObject.get_transform, X0
	154 Compare X0, 0
	155 JumpIfEqual {191}
	156 Move X1, X31
	157 Call Transform.get_up, X0
	158 Move [X21], S0
	159 Move [X21+8], S1
	160 Move [X21+8], S2
	161 Move X0, [X20+32]
	162 Compare X0, 0
	163 JumpIfEqual {191}
	164 Move X1, X31
	165 Call Component.get_transform, X0
	166 Compare X0, 0
	167 JumpIfEqual {191}
	168 Move X1, X31
	169 Call Transform.get_forward, X0
	170 Move X8, 0x574000
	171 Move X8, [X8+2904]
	172 Add X0, X31, 0
	173 Move [X31], X31
	174 Move [X31+8], X31
	175 Move X1, [X8]
	176 Call Nullable`1<Vector3>..ctor, X0, X1
	177 Move V0, [X31]
	178 Move [X19], V0
	179 Move X20, [X31+96]
	180 Move X19, [X31+104]
	181 Move X22, [X31+80]
	182 Move X21, [X31+88]
	183 Move X24, [X31+64]
	184 Move X23, [X31+72]
	185 Move X30, [X31+56]
	186 Move D9, [X31+40]
	187 Move D8, [X31+48]
	188 Move V10, [X31+32]
	189 Add X31, X31, 112
	190 Return 
	191 Call 0x1C17F20

Method: System.Boolean GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.RaycastHit raycastHit, ref UnityEngine.XR.Interaction.Toolkit.TeleportRequest teleportRequest)

Disassembly:
	0x03B830B4 FCMP S0, S1
	0x03B830B8 B.LE 0x3B83144
	0x03B830BC ADRP X21, 0x570000
	0x03B830C0 LDR X21, [X21 + 0xA90]
	0x03B830C4 ADD X1, X31, 0xC
	0x03B830C8 STR S0, [X31 + 0xC]
	0x03B830CC LDR X0, [X21]
	0x03B830D0 BL 0x1C16E04
	0x03B830D4 LDR X8, [X19 + 0x30]
	0x03B830D8 CBZ X8, 0x3B83154
	0x03B830DC MOV X20, X0
	0x03B830E0 LDR V0, [X8 + 0x2C]
	0x03B830E4 LDR X0, [X21]
	0x03B830E8 ADD X1, X31, 0x8
	0x03B830EC STR S0, [X31 + 0x8]
	0x03B830F0 BL 0x1C16E04
	0x03B830F4 ADRP X8, 0x5D8000
	0x03B830F8 LDR X8, [X8 + 0xE20]
	0x03B830FC MOV X2, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V2, [X2]
	005 Move V1, [X2+16]
	006 Add X2, X31, 48
	007 Move [X31+28], V0
	008 Move [X31], V2
	009 Move [X31+8], V1
	010 Move X8, [X0]
	011 Move V0, [X31+1]
	012 NotImplemented "Instruction LDUR not yet implemented."
	013 Move X9, [X8+2152]
	014 Move [X31+48], V2
	015 Move [X31+56], V0
	016 Move [X31+76], V1
	017 Move X4, [X8+2160]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X30, [X31+96]
	020 And W0, W0, 1
	021 Add X31, X31, 112
	022 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B83100 MOV X1, X20
	0x03B83104 MOV X3, X31
	0x03B83108 LDR X8, [X8]
	0x03B8310C MOV X0, X8
	0x03B83110 BL 0x3227BD4
	0x03B83114 ADRP X8, 0x570000
	0x03B83118 LDR X8, [X8 + 0xA28]
	0x03B8311C MOV X20, X0
	0x03B83120 LDR X8, [X8]
	0x03B83124 LDR W9, [X8 + 0xE0]
	0x03B83128 CBNZ W9, 0x3B83134
	0x03B8312C MOV X0, X8
	0x03B83130 BL 0x1C16DFC
	0x03B83134 MOV X0, X20
	0x03B83138 MOV X1, X19
	0x03B8313C MOV X2, X31
	0x03B83140 BL 0x3C06B0C
	0x03B83144 LDP X20, X19, [X31 + 0x20]
	0x03B83148 LDP X30, X21, [X31 + 0x10]
	0x03B8314C ADD X31, X31, 0x30
	0x03B83150 RET
	0x03B83154 BL 0x1C16F20
	0x03B83158 STR D14, [X31 - 0x60]!
	0x03B8315C STP D13, D12, [X31 + 0x8]
	0x03B83160 STP D11, D10, [X31 + 0x18]
	0x03B83164 STP D9, D8, [X31 + 0x28]
	0x03B83168 STR X30, [X31 + 0x38]
	0x03B8316C STP X22, X21, [X31 + 0x40]
	0x03B83170 STP X20, X19, [X31 + 0x50]
	0x03B83174 ADRP X20, 0x85F000
	0x03B83178 LDRB W8, [X20 + 0xAE3]
	0x03B8317C MOV X19, X0
	0x03B83180 TBNZ X8, 0x0, 0x3B83198
	0x03B83184 ADRP X0, 0x570000
	0x03B83188 LDR X0, [X0 + 0x598]
	0x03B8318C BL 0x1C16CF4
	0x03B83190 MOVZ W8, 0x1
	0x03B83194 STRB W8, [X20 + 0xAE3]
	0x03B83198 LDRB W8, [X19 + 0x6C]
	0x03B8319C CBZ W8, 0x3B83290
	0x03B831A0 LDRB W8, [X19 + 0x74]
	0x03B831A4 CBNZ W8, 0x3B831D0
	0x03B831A8 MOV X0, X19
	0x03B831AC MOV X1, X31
	0x03B831B0 BL 0x3B7B060
	0x03B831B4 TBZ X0, 0x0, 0x3B83464
	0x03B831B8 MOVZ W8, 0x1
	0x03B831BC MOV X0, X31
	0x03B831C0 STRB W8, [X19 + 0x74]
	0x03B831C4 STR W8, [X19 + 0x38]
	0x03B831C8 BL 0x3C3C6C4
	0x03B831CC STR S0, [X19 + 0x78]
	0x03B831D0 LDR V0, [X19 + 0x70]
	0x03B831D4 FCMP S0, 0x0
	0x03B831D8 B.LE 0x3B831F8
	0x03B831DC MOV X0, X31
	0x03B831E0 BL 0x3C3C6C4
	0x03B831E4 LDR V1, [X19 + 0x78]
	0x03B831E8 LDR V2, [X19 + 0x70]
	0x03B831EC FSUB S0, S0, S1
	0x03B831F0 FCMP S0, S2
	0x03B831F4 B.MI 0x3B83464
	0x03B831F8 LDR X8, [X19 + 0x30]
	0x03B831FC MOVZ W9, 0x2
	0x03B83200 STR W9, [X19 + 0x38]
	0x03B83204 CBZ X8, 0x3B83484
	0x03B83208 ADRP X9, 0x570000
	0x03B8320C LDR X9, [X9 + 0x598]
	0x03B83210 LDR X20, [X8 + 0x30]
	0x03B83214 LDR X0, [X9]
	0x03B83218 LDR W9, [X0 + 0xE0]
	0x03B8321C CBNZ W9, 0x3B83224
	0x03B83220 BL 0x1C16DFC
	0x03B83224 MOV X0, X20
	0x03B83228 MOV X1, X31
	0x03B8322C MOV X2, X31
	0x03B83230 BL 0x3C354F8
	0x03B83234 TBZ X0, 0x0, 0x3B83448
	0x03B83238 LDR W8, [X19 + 0x68]
	0x03B8323C CMP W8, 0x2
	0x03B83240 B.EQ 0x3B83298
	0x03B83244 CMP W8, 0x1
	0x03B83248 B.EQ 0x3B83378
	0x03B8324C CBNZ W8, 0x3B833E4
	0x03B83250 ADRP X21, 0x855000
	0x03B83254 LDRB W8, [X21 + 0x786]
	0x03B83258 CBNZ W8, 0x3B83270
	0x03B8325C ADRP X0, 0x570000
	0x03B83260 LDR X0, [X0 + 0x5A0]
	0x03B83264 BL 0x1C16CF4
	0x03B83268 MOVZ W8, 0x1
	0x03B8326C STRB W8, [X21 + 0x786]
	0x03B83270 CBZ X20, 0x3B83484
	0x03B83274 ADRP X8, 0x570000
	0x03B83278 LDR X8, [X8 + 0x5A0]
	0x03B8327C LDR X8, [X8]
	0x03B83280 LDR X8, [X8 + 0xB8]
	0x03B83284 LDP S1, S2, [X8 + 0x1C]
	0x03B83288 LDR V0, [X8 + 0x18]
	0x03B8328C B 0x3B833D4
	0x03B83290 STR W31, [X19 + 0x38]
	0x03B83294 B 0x3B83464
	0x03B83298 ADRP X21, 0x855000
	0x03B8329C LDP S8, S9, [X19 + 0x54]
	0x03B832A0 LDRB W8, [X21 + 0x786]
	0x03B832A4 LDP S11, S10, [X19 + 0x5C]
	0x03B832A8 CBNZ W8, 0x3B832C0
	0x03B832AC ADRP X0, 0x570000
	0x03B832B0 LDR X0, [X0 + 0x5A0]
	0x03B832B4 BL 0x1C16CF4
	0x03B832B8 MOVZ W8, 0x1
	0x03B832BC STRB W8, [X21 + 0x786]
	0x03B832C0 ADRP X21, 0x570000
	0x03B832C4 LDR X21, [X21 + 0x5A0]
	0x03B832C8 MOV V0.16B, V8.16B
	0x03B832CC MOV V1.16B, V9.16B
	0x03B832D0 MOV V2.16B, V11.16B
	0x03B832D4 LDR X8, [X21]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x860000
	012 Move X20, 0x5D9000
	013 Move X22, 0x5D9000
	014 Move W8, [X21+2778]
	015 Move X20, [X20+3672]
	016 Move X22, [X22+3680]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x5D9000
	023 Move X0, [X0+3688]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D9000
	026 Move X0, [X0+3696]
	027 Call 0x1C17CF4
	028 Move X0, 0x5D9000
	029 Move X0, [X0+3704]
	030 Call 0x1C17CF4
	031 Move X0, 0x5D9000
	032 Move X0, [X0+3712]
	033 Call 0x1C17CF4
	034 Move X0, 0x5D9000
	035 Move X0, [X0+3720]
	036 Call 0x1C17CF4
	037 Move X0, 0x5D9000
	038 Move X0, [X0+3672]
	039 Call 0x1C17CF4
	040 Move X0, 0x5D9000
	041 Move X0, [X0+3728]
	042 Call 0x1C17CF4
	043 Move X0, 0x5D9000
	044 Move X0, [X0+3680]
	045 Call 0x1C17CF4
	046 Move X0, 0x5D8000
	047 Move X0, [X0+1080]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+2778], W8
	051 Move W8, 0x41F00000
	052 Move [X19+488], W8
	053 Move X0, [X20]
	054 Call 0x1C17F10
	055 Move X1, X31
	056 Move X20, X0
	057 Call TeleportingEvent..ctor, X0
	058 Move [X19+496], X20
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move X27, 0x5D9000
	067 Move X26, 0x5D9000
	068 Move X25, 0x5D9000
	069 Move X24, 0x5D9000
	070 Move X23, 0x5D8000
	071 Move X27, [X27+3720]
	072 Move X20, [X8+8]
	073 Move X26, [X26+3712]
	074 Move X25, [X25+3696]
	075 Move X24, [X24+3688]
	076 Move X23, [X23+1080]
	077 Compare X20, 0
	078 JumpIfNotEqual {100}
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Move X9, 0x5D9000
	085 Move X8, [X0+184]
	086 Move X9, [X9+3704]
	087 Move X21, [X8]
	088 Move X0, [X9]
	089 Call 0x1C17F10
	090 Move X8, 0x5D9000
	091 Move X8, [X8+3728]
	092 Move X1, X21
	093 Move X3, X31
	094 Move X20, X0
	095 Move X2, [X8]
	096 Call Func`1<Object>..ctor, X0, X1, X2
	097 Move X8, [X22]
	098 Move X8, [X8+184]
	099 Move [X8+8], X20
	100 Move X0, [X27]
	101 Call 0x1C17F10
	102 Move X7, [X26]
	103 Move W6, 0x2710
	104 Move X1, X20
	105 Move X2, X31
	106 Move X3, X31
	107 Move X4, X31
	108 Move W5, W31
	109 Move X21, X0
	110 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	111 Move [X19+504], X21
	112 Move X0, [X25]
	113 Call 0x1C17F10
	114 Move X1, [X24]
	115 Move X20, X0
	116 Call Dictionary`2<Object, Vector3>..ctor, X0
	117 Move [X19+512], X20
	118 Move X0, [X23]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X19
	124 Move X20, [X31+64]
	125 Move X19, [X31+72]
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X24, [X31+32]
	129 Move X23, [X31+40]
	130 Move X26, [X31+16]
	131 Move X25, [X31+24]
	132 Move X1, X31
	133 Move X30, [X31+80]
	134 Move X27, [X31+88]
	135 Call XRBaseInteractable..ctor, X0
	136 Return 

Method: System.Void <ProcessInteractable>g__CalculateTeleportForward|37_0(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B8266C STR S8, [X31 + 0x24]
	0x03B82670 BL 0x3C2A9FC
	0x03B82674 LDR V10, [X31 + 0x78]
	0x03B82678 LDR V12, [X31 + 0x1C]
	0x03B8267C MOV V3.16B, V15.16B
	0x03B82680 FMOV S5, W31
	0x03B82684 FADD S7, S10, S0
	0x03B82688 FADD S0, S12, S1
	0x03B8268C MOV V1.16B, V13.16B
	0x03B82690 MOV V13.16B, V15.16B
	0x03B82694 LDR V15, [X31 + 0x20]
	0x03B82698 STP S0, S7, [X31 + 0x8]
	0x03B8269C FADD S0, S9, S2
	0x03B826A0 STR S0, [X31 + 0x4]
	0x03B826A4 MOV V0.16B, V14.16B
	0x03B826A8 MOV V2.16B, V11.16B
	0x03B826AC MOV V4.16B, V15.16B
	0x03B826B0 MOV V6.16B, V8.16B
	0x03B826B4 MOV X0, X31
	0x03B826B8 STR S11, [X31 + 0x14]
	0x03B826BC BL 0x3C2A9FC
	0x03B826C0 FADD S3, S10, S0
	0x03B826C4 FADD S4, S12, S1
	0x03B826C8 FADD S5, S9, S2
	0x03B826CC LDP S1, S0, [X31 + 0x8]
	0x03B826D0 LDR V2, [X31 + 0x4]
	0x03B826D4 MOV X0, X31
	0x03B826D8 BL 0x3C0CB04
	0x03B826DC LDR V8, [X31 + 0x2C]
	0x03B826E0 LDR V6, [X31 + 0x24]
	0x03B826E4 FMOV S5, W31
	0x03B826E8 MOV V0.16B, V14.16B
	0x03B826EC MOV V1.16B, V8.16B
	0x03B826F0 MOV V2.16B, V11.16B
	0x03B826F4 MOV V3.16B, V13.16B
	0x03B826F8 MOV V4.16B, V15.16B
	0x03B826FC MOV X0, X31
	0x03B82700 MOV V12.16B, V13.16B
	0x03B82704 BL 0x3C2A9FC
	0x03B82708 LDR V13, [X31 + 0x1C]
	0x03B8270C FADD S7, S10, S0
	0x03B82710 FMOV S5, W31
	0x03B82714 MOV V3.16B, V12.16B
	0x03B82718 FADD S0, S13, S1
	0x03B8271C STP S0, S7, [X31 + 0x8]
	0x03B82720 FADD S0, S9, S2
	0x03B82724 STR S0, [X31 + 0x4]
	0x03B82728 MOV V0.16B, V14.16B
	0x03B8272C MOV V1.16B, V8.16B
	0x03B82730 MOV V2.16B, V11.16B
	0x03B82734 MOV V4.16B, V15.16B
	0x03B82738 MOV V6.16B, V15.16B
	0x03B8273C MOV X0, X31
	0x03B82740 BL 0x3C2A9FC
	0x03B82744 FADD S3, S10, S0
	0x03B82748 FADD S4, S13, S1
	0x03B8274C FADD S5, S9, S2
	0x03B82750 LDP S1, S0, [X31 + 0x8]
	0x03B82754 LDR V2, [X31 + 0x4]
	0x03B82758 MOV X0, X31
	0x03B8275C MOV V11.16B, V10.16B
	0x03B82760 MOV V10.16B, V9.16B
	0x03B82764 STR S9, [X31 + 0x10]
	0x03B82768 BL 0x3C0CB04
	0x03B8276C LDR V15, [X31 + 0x14]
	0x03B82770 LDR V9, [X31 + 0x20]
	0x03B82774 FMOV S5, W31
	0x03B82778 MOV V0.16B, V14.16B
	0x03B8277C MOV V1.16B, V8.16B
	0x03B82780 MOV V2.16B, V15.16B
	0x03B82784 MOV V3.16B, V12.16B
	0x03B82788 MOV V4.16B, V9.16B
	0x03B8278C MOV V6.16B, V9.16B
	0x03B82790 MOV X0, X31
	0x03B82794 MOV V13.16B, V8.16B
	0x03B82798 MOV V8.16B, V12.16B
	0x03B8279C STR S12, [X31 + 0x28]
	0x03B827A0 BL 0x3C2A9FC
	0x03B827A4 LDR V12, [X31 + 0x1C]
	0x03B827A8 MOV V3.16B, V8.16B
	0x03B827AC LDR V8, [X31 + 0x24]
	0x03B827B0 FADD S7, S11, S0
	0x03B827B4 FADD S0, S12, S1
	0x03B827B8 STP S0, S7, [X31 + 0x8]
	0x03B827BC FADD S0, S10, S2
	0x03B827C0 STR S0, [X31 + 0x4]
	0x03B827C4 FMOV S5, W31
	0x03B827C8 MOV V0.16B, V14.16B
	0x03B827CC MOV V1.16B, V13.16B
	0x03B827D0 MOV V2.16B, V15.16B
	0x03B827D4 MOV V4.16B, V8.16B
	0x03B827D8 MOV V6.16B, V9.16B
	0x03B827DC MOV X0, X31
	0x03B827E0 MOV V13.16B, V15.16B
	0x03B827E4 BL 0x3C2A9FC
	0x03B827E8 FADD S3, S11, S0
	0x03B827EC FADD S4, S12, S1
	0x03B827F0 FADD S5, S10, S2
	0x03B827F4 LDP S1, S0, [X31 + 0x8]
	0x03B827F8 LDR V2, [X31 + 0x4]
	0x03B827FC MOV X0, X31
	0x03B82800 MOV V15.16B, V12.16B
	0x03B82804 BL 0x3C0CB04
	0x03B82808 MOV V10.16B, V14.16B
	0x03B8280C STR S14, [X31 + 0x18]
	0x03B82810 MOV V0.16B, V14.16B
	0x03B82814 LDP S14, S12, [X31 + 0x28]
	0x03B82818 LDR V11, [X31 + 0x7C]
	0x03B8281C MOV V2.16B, V13.16B
	0x03B82820 MOV V4.16B, V8.16B
	0x03B82824 MOV V1.16B, V12.16B
	0x03B82828 MOV V3.16B, V14.16B
	0x03B8282C MOV V5.16B, V11.16B
	0x03B82830 MOV V6.16B, V9.16B
	0x03B82834 MOV X0, X31
	0x03B82838 BL 0x3C2A9FC
	0x03B8283C LDR V13, [X31 + 0x78]
	0x03B82840 LDR V9, [X31 + 0x10]
	0x03B82844 MOV V3.16B, V14.16B
	0x03B82848 MOV V4.16B, V8.16B
	0x03B8284C FADD S7, S13, S0
	0x03B82850 FADD S0, S15, S1
	0x03B82854 MOV V1.16B, V12.16B
	0x03B82858 LDR V12, [X31 + 0x14]
	0x03B8285C STP S0, S7, [X31 + 0x8]
	0x03B82860 FADD S0, S9, S2
	0x03B82864 STR S0, [X31 + 0x4]
	0x03B82868 MOV V0.16B, V10.16B
	0x03B8286C MOV V2.16B, V12.16B
	0x03B82870 MOV V5.16B, V11.16B
	0x03B82874 MOV V6.16B, V8.16B
	0x03B82878 MOV X0, X31
	0x03B8287C MOV V14.16B, V11.16B
	0x03B82880 BL 0x3C2A9FC
	0x03B82884 FADD S3, S13, S0
	0x03B82888 FADD S4, S15, S1
	0x03B8288C FADD S5, S9, S2
	0x03B82890 LDP S1, S0, [X31 + 0x8]
	0x03B82894 LDR V2, [X31 + 0x4]
	0x03B82898 MOV X0, X31
	0x03B8289C MOV V10.16B, V13.16B
	0x03B828A0 MOV V11.16B, V15.16B
	0x03B828A4 BL 0x3C0CB04
	0x03B828A8 LDR V15, [X31 + 0x18]
	0x03B828AC LDR V13, [X31 + 0x2C]
	0x03B828B0 MOV V2.16B, V12.16B
	0x03B828B4 MOV V9.16B, V12.16B
	0x03B828B8 LDR V12, [X31 + 0x28]
	0x03B828BC MOV V0.16B, V15.16B
	0x03B828C0 MOV V1.16B, V13.16B
	0x03B828C4 MOV V4.16B, V8.16B
	0x03B828C8 MOV V3.16B, V12.16B
	0x03B828CC MOV V5.16B, V14.16B
	0x03B828D0 MOV V6.16B, V8.16B
	0x03B828D4 MOV X0, X31
	0x03B828D8 BL 0x3C2A9FC
	0x03B828DC FADD S7, S10, S0
	0x03B828E0 MOV V14.16B, V10.16B
	0x03B828E4 LDR V10, [X31 + 0x10]
	0x03B828E8 FADD S0, S11, S1
	0x03B828EC STP S0, S7, [X31 + 0x8]
	0x03B828F0 MOV V1.16B, V13.16B
	0x03B828F4 FADD S0, S10, S2
	0x03B828F8 STR S0, [X31 + 0x4]
	0x03B828FC MOV V0.16B, V15.16B
	0x03B82900 MOV V2.16B, V9.16B
	0x03B82904 LDR V9, [X31 + 0x20]
	0x03B82908 LDR V15, [X31 + 0x7C]
	0x03B8290C MOV V3.16B, V12.16B
	0x03B82910 MOV V6.16B, V8.16B
	0x03B82914 MOV V4.16B, V9.16B
	0x03B82918 MOV V5.16B, V15.16B
	0x03B8291C MOV X0, X31
	0x03B82920 BL 0x3C2A9FC
	0x03B82924 FADD S3, S14, S0
	0x03B82928 FADD S4, S11, S1
	0x03B8292C FADD S5, S10, S2
	0x03B82930 LDP S1, S0, [X31 + 0x8]
	0x03B82934 LDR V2, [X31 + 0x4]
	0x03B82938 MOV X0, X31
	0x03B8293C BL 0x3C0CB04
	0x03B82940 LDR V8, [X31 + 0x18]
	0x03B82944 MOV V12.16B, V13.16B
	0x03B82948 MOV V1.16B, V13.16B
	0x03B8294C LDR V13, [X31 + 0x14]
	0x03B82950 LDP S6, S14, [X31 + 0x24]
	0x03B82954 MOV V0.16B, V8.16B
	0x03B82958 MOV V4.16B, V9.16B
	0x03B8295C MOV V2.16B, V13.16B
	0x03B82960 MOV V3.16B, V14.16B
	0x03B82964 MOV V5.16B, V15.16B
	0x03B82968 MOV X0, X31
	0x03B8296C MOV V9.16B, V15.16B
	0x03B82970 BL 0x3C2A9FC
	0x03B82974 LDR V15, [X31 + 0x78]
	0x03B82978 MOV V3.16B, V14.16B
	0x03B8297C MOV V5.16B, V9.16B
	0x03B82980 MOV X0, X31
	0x03B82984 FADD S7, S15, S0
	0x03B82988 FADD S0, S11, S1
	0x03B8298C STP S0, S7, [X31 + 0x8]
	0x03B82990 FADD S0, S10, S2
	0x03B82994 LDR V10, [X31 + 0x20]
	0x03B82998 STR S0, [X31 + 0x4]
	0x03B8299C MOV V0.16B, V8.16B
	0x03B829A0 MOV V1.16B, V12.16B
	0x03B829A4 MOV V2.16B, V13.16B
	0x03B829A8 MOV V4.16B, V10.16B
	0x03B829AC MOV V6.16B, V10.16B
	0x03B829B0 MOV V12.16B, V13.16B
	0x03B829B4 BL 0x3C2A9FC
	0x03B829B8 FADD S3, S15, S0
	0x03B829BC LDP S0, S9, [X31 + 0xC]
	0x03B829C0 FADD S4, S11, S1
	0x03B829C4 MOV X0, X31
	0x03B829C8 FADD S5, S9, S2
	0x03B829CC LDP S2, S1, [X31 + 0x4]
	0x03B829D0 BL 0x3C0CB04
	0x03B829D4 MOV V13.16B, V8.16B
	0x03B829D8 MOV V0.16B, V8.16B
	0x03B829DC LDR V14, [X31 + 0x2C]
	0x03B829E0 MOV V2.16B, V12.16B
	0x03B829E4 MOV V8.16B, V12.16B
	0x03B829E8 LDR V12, [X31 + 0x28]
	0x03B829EC LDR V11, [X31 + 0x7C]
	0x03B829F0 MOV V1.16B, V14.16B
	0x03B829F4 MOV V4.16B, V10.16B
	0x03B829F8 MOV V3.16B, V12.16B
	0x03B829FC MOV V5.16B, V11.16B
	0x03B82A00 MOV V6.16B, V10.16B
	0x03B82A04 MOV X0, X31
	0x03B82A08 BL 0x3C2A9FC
	0x03B82A0C FADD S7, S15, S0
	0x03B82A10 LDR V15, [X31 + 0x1C]
	0x03B82A14 MOV V3.16B, V12.16B
	0x03B82A18 MOV V5.16B, V11.16B
	0x03B82A1C MOV V6.16B, V10.16B
	0x03B82A20 FADD S0, S15, S1
	0x03B82A24 STP S0, S7, [X31 + 0x8]
	0x03B82A28 FADD S0, S9, S2
	0x03B82A2C STR S0, [X31 + 0x4]
	0x03B82A30 MOV V0.16B, V13.16B
	0x03B82A34 MOV V2.16B, V8.16B
	0x03B82A38 MOV V13.16B, V8.16B
	0x03B82A3C LDR V8, [X31 + 0x24]
	0x03B82A40 MOV V1.16B, V14.16B
	0x03B82A44 MOV X0, X31
	0x03B82A48 MOV V4.16B, V8.16B
	0x03B82A4C BL 0x3C2A9FC
	0x03B82A50 LDR V3, [X31 + 0x78]
	0x03B82A54 FADD S4, S15, S1
	0x03B82A58 FADD S5, S9, S2
	0x03B82A5C LDR V2, [X31 + 0x4]
	0x03B82A60 FADD S3, S3, S0
	0x03B82A64 LDP S1, S0, [X31 + 0x8]
	0x03B82A68 MOV X0, X31
	0x03B82A6C MOV V14.16B, V15.16B
	0x03B82A70 BL 0x3C0CB04
	0x03B82A74 LDR V11, [X31 + 0x18]

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x861000
	013 Move W8, [X20+2779]
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x5DA000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move X0, 0x5D9000
	024 Move X0, [X0+760]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2779], W8
	028 Compare X19, 0
	029 JumpIfEqual {289}
	030 Move X10, 0x5D9000
	031 Move X8, [X19]
	032 Move X10, [X10+760]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 6
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 6
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X2, [X0+8]
	052 Move X0, X19
	053 Move X1, X21
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W8, [X21+472]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Compare W8, 0
	058 JumpIfNotEqual {225}
	059 Compare X0, 0
	060 JumpIfEqual {289}
	061 Move X20, [X21+512]
	062 Move X1, X31
	063 Call Transform.get_forward, X0
	064 Move X21, 0x857000
	065 Move W8, [X21+1926]
	066 Move V8, V0
	067 Move V9, V1
	068 Move V10, V2
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x572000
	072 Move X0, [X0+1440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X21+1926], W8
	076 Move X21, 0x572000
	077 Move X21, [X21+1440]
	078 Move X22, 0x857000
	079 Move W9, [X22+3641]
	080 Move X8, [X21]
	081 Move X8, [X8+184]
	082 Move S13, [X8+24]
	083 Move S12, [X8+28]
	084 Move V11, [X8+32]
	085 Compare W9, 0
	086 JumpIfNotEqual {92}
	087 Move X0, 0x579000
	088 Move X0, [X0+1208]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X22+3641], W8
	092 Move X8, 0x579000
	093 Move X8, [X8+1208]
	094 Multiply S0, S13, S13
	095 Multiply S1, S12, S12
	096 Add S0, S0, S1
	097 Move X8, [X8]
	098 Multiply S1, S11, S11
	099 Add S0, S1, S0
	100 Move X8, [X8+184]
	101 Move V2, [X8]
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Multiply S1, S8, S13
	104 Multiply S2, S9, S12
	105 Multiply S3, S10, S11
	106 Add S1, S1, S2
	107 Add S1, S3, S1
	108 Multiply S2, S13, S1
	109 Multiply S3, S12, S1
	110 Multiply S1, S11, S1
	111 NotImplemented "Instruction FDIV not yet implemented."
	112 NotImplemented "Instruction FDIV not yet implemented."
	113 NotImplemented "Instruction FDIV not yet implemented."
	114 Subtract S8, S8, S2
	115 Subtract S9, S9, S3
	116 Subtract S10, S10, S0
	117 Move X22, 0x857000
	118 Move W8, [X22+1925]
	119 Compare W8, 0
	120 JumpIfNotEqual {126}
	121 Move X0, 0x572000
	122 Move X0, [X0+1448]
	123 Call 0x1C17CF4
	124 Move W8, 1
	125 Move [X22+1925], W8
	126 Move X8, 0x572000
	127 Move X8, [X8+1448]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Multiply S0, S8, S8
	134 Multiply S1, S9, S9
	135 Move X8, -50950144
	136 Add S0, S0, S1
	137 Move V1, [X8+380]
	138 Multiply S2, S10, S10
	139 Add S0, S2, S0
	140 NotImplemented "Instruction FSQRT not yet implemented."
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 NotImplemented "Instruction FDIV not yet implemented."
	143 NotImplemented "Instruction FDIV not yet implemented."
	144 NotImplemented "Instruction FDIV not yet implemented."
	145 Compare X0, 0
	146 JumpIfEqual {289}
	147 Move X20, [X21+512]
	148 Move X1, X31
	149 Call Transform.get_forward, X0
	150 Move X0, X21
	151 Move X1, X31
	152 Move V8, V0
	153 Move V9, V1
	154 Move V10, V2
	155 Call Component.get_transform, X0
	156 Compare X0, 0
	157 JumpIfEqual {289}
	158 Move X1, X31
	159 Call Transform.get_up, X0
	160 Move X21, 0x857000
	161 Move W8, [X21+3641]
	162 Move V13, V0
	163 Move V11, V1
	164 Move V12, V2
	165 Compare W8, 0
	166 JumpIfNotEqual {172}
	167 Move X0, 0x579000
	168 Move X0, [X0+1208]
	169 Call 0x1C17CF4
	170 Move W8, 1
	171 Move [X21+3641], W8
	172 Move X8, 0x579000
	173 Move X8, [X8+1208]
	174 Multiply S0, S13, S13
	175 Multiply S1, S11, S11
	176 Add S0, S0, S1
	177 Move X8, [X8]
	178 Multiply S1, S12, S12
	179 Add S0, S1, S0
	180 Move X8, [X8+184]
	181 Move V2, [X8]
	182 NotImplemented "Instruction FCMP not yet implemented."
	183 Multiply S1, S8, S13
	184 Multiply S2, S9, S11
	185 Multiply S3, S10, S12
	186 Add S1, S1, S2
	187 Add S1, S3, S1
	188 Multiply S2, S13, S1
	189 Multiply S3, S11, S1
	190 Multiply S1, S12, S1
	191 NotImplemented "Instruction FDIV not yet implemented."
	192 NotImplemented "Instruction FDIV not yet implemented."
	193 NotImplemented "Instruction FDIV not yet implemented."
	194 Subtract S8, S8, S2
	195 Subtract S9, S9, S3
	196 Subtract S10, S10, S0
	197 Move X21, 0x857000
	198 Move W8, [X21+1925]
	199 Compare W8, 0
	200 JumpIfNotEqual {206}
	201 Move X0, 0x572000
	202 Move X0, [X0+1448]
	203 Call 0x1C17CF4
	204 Move W8, 1
	205 Move [X21+1925], W8
	206 Move X8, 0x572000
	207 Move X8, [X8+1448]
	208 Move X0, [X8]
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {213}
	212 Call 0x1C17DFC
	213 Multiply S0, S8, S8
	214 Multiply S1, S9, S9
	215 Move X8, -50950144
	216 Add S0, S0, S1
	217 Move V1, [X8+380]
	218 Multiply S2, S10, S10
	219 Add S0, S2, S0
	220 NotImplemented "Instruction FSQRT not yet implemented."
	221 NotImplemented "Instruction FCMP not yet implemented."
	222 NotImplemented "Instruction FDIV not yet implemented."
	223 NotImplemented "Instruction FDIV not yet implemented."
	224 NotImplemented "Instruction FDIV not yet implemented."
	225 Move X20, [X31+80]
	226 Move X19, [X31+88]
	227 Move X22, [X31+64]
	228 Move X21, [X31+72]
	229 Move X30, [X31+48]
	230 Move D9, [X31+32]
	231 Move D8, [X31+40]
	232 Move D11, [X31+16]
	233 Move D10, [X31+24]
	234 Move D13, [X31+96]
	235 Move D12, [X31+104]
	236 Return 
	237 Move X22, 0x857000
	238 Move W8, [X22+1923]
	239 Compare W8, 0
	240 JumpIfNotEqual {246}
	241 Move X0, 0x572000
	242 Move X0, [X0+1440]
	243 Call 0x1C17CF4
	244 Move W8, 1
	245 Move [X22+1923], W8
	246 Move X8, [X21]
	247 Move X8, [X8+184]
	248 Move S0, [X8]
	249 Move S1, [X8+4]
	250 Move V2, [X8+8]
	251 Compare X20, 0
	252 JumpIfEqual {289}
	253 Move X8, 0x5DA000
	254 Move X8, [X8+3664]
	255 Move X0, X20
	256 Move X1, X19
	257 Move X20, [X31+80]
	258 Move X19, [X31+88]
	259 Move X2, [X8]
	260 Move X22, [X31+64]
	261 Move X21, [X31+72]
	262 Move X30, [X31+48]
	263 Move D9, [X31+32]
	264 Move D8, [X31+40]
	265 Move D11, [X31+16]
	266 Move D10, [X31+24]
	267 Move D13, [X31+96]
	268 Move D12, [X31+104]
	269 Call Dictionary`2<Object, Vector3>.set_Item, X0, X1, X2
	270 Return 
	271 Move X21, 0x857000
	272 Move W8, [X21+1923]
	273 Compare W8, 0
	274 JumpIfNotEqual {280}
	275 Move X0, 0x572000
	276 Move X0, [X0+1440]
	277 Call 0x1C17CF4
	278 Move W8, 1
	279 Move [X21+1923], W8
	280 Move X8, 0x572000
	281 Move X8, [X8+1440]
	282 Move X8, [X8]
	283 Move X8, [X8+184]
	284 Move S0, [X8]
	285 Move S1, [X8+4]
	286 Move V2, [X8+8]
	287 Compare X20, 0
	288 JumpIfNotEqual {253}
	289 Call 0x1C17F20

