Type: UnityEngine.XR.Interaction.Toolkit.ActionBasedSnapTurnProvider

Method: UnityEngine.InputSystem.InputActionProperty get_leftHandSnapTurnAction()

Disassembly:
	0x03B8083C MOV V2.16B, V15.16B
	0x03B80840 MOV X0, X31
	0x03B80844 STP S12, S15, [X31 + 0x20]
	0x03B80848 STR S8, [X31 + 0x28]
	0x03B8084C BL 0x3887BE0

ISIL:
	001 Move X9, [X0+120]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_leftHandSnapTurnAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B80850 ADRP X23, 0x858000
	0x03B80854 LDRB W8, [X23 + 0xA24]
	0x03B80858 MOV V8.16B, V0.16B
	0x03B8085C MOV V14.16B, V1.16B
	0x03B80860 MOV V13.16B, V2.16B
	0x03B80864 CBNZ W8, 0x3B8087C
	0x03B80868 ADRP X0, 0x573000
	0x03B8086C LDR X0, [X0 + 0x5A8]
	0x03B80870 BL 0x1C16CF4
	0x03B80874 MOVZ W8, 0x1
	0x03B80878 STRB W8, [X23 + 0xA24]
	0x03B8087C LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 104
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedSnapTurnProvider.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_rightHandSnapTurnAction()

Disassembly:
	0x03B80968 FCMP S10, S9
	0x03B8096C FSQRT S11, S0
	0x03B80970 B.PL 0x3B809BC
	0x03B80974 LDP S0, S2, [X31 + 0x20]
	0x03B80978 LDR V1, [X31 + 0x28]

ISIL:
	001 Move X9, [X0+144]
	002 Move V0, [X0+8]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_rightHandSnapTurnAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B8097C MOV X0, X31
	0x03B80980 FMUL S0, S11, S0
	0x03B80984 FMUL S1, S11, S1
	0x03B80988 FMUL S2, S11, S2
	0x03B8098C BL 0x3887BE0
	0x03B80990 STP S0, S1, [X19]
	0x03B80994 STR S2, [X19 + 0x8]
	0x03B80998 LDP X20, X19, [X31 + 0xC0]
	0x03B8099C LDP X22, X21, [X31 + 0xB0]
	0x03B809A0 LDP X30, X23, [X31 + 0xA0]
	0x03B809A4 LDP D9, D8, [X31 + 0x90]
	0x03B809A8 LDP D11, D10, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 128
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedSnapTurnProvider.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03B809AC LDP D13, D12, [X31 + 0x70]
	0x03B809B0 LDP D15, D14, [X31 + 0x60]
	0x03B809B4 ADD X31, X31, 0xD0
	0x03B809B8 RET
	0x03B809BC LDR V0, [X31 + 0x2C]
	0x03B809C0 FCMP S11, S0
	0x03B809C4 B.MI 0x3B80934
	0x03B809C8 LDP S2, S13, [X31 + 0x18]
	0x03B809CC LDR V0, [X31 + 0x3]
	0x03B809D0 MOV X0, X31
	0x03B809D4 MOV V1.16B, V13.16B
	0x03B809D8 BL 0x3887BE4
	0x03B809DC LDRB W8, [X21 + 0x585]
	0x03B809E0 MOV V14.16B, V0.16B
	0x03B809E4 MOV V12.16B, V2.16B
	0x03B809E8 CBNZ W8, 0x3B80A00
	0x03B809EC ADRP X0, 0x573000
	0x03B809F0 LDR X0, [X0 + 0x5A8]
	0x03B809F4 BL 0x1C16CF4
	0x03B809F8 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X8, [X0+120]
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X19, X0
	007 Add X0, X31, 32
	008 Move X1, X31
	009 Move [X31+48], X8
	010 Move [X31+2], V0
	011 Call InputActionPropertyExtensions.EnableDirectAction, X0
	012 Move X8, [X19+144]
	013 Move V0, [X19+8]
	014 Add X0, X31, 0
	015 Move X1, X31
	016 Move [X31+16], X8
	017 Move [X31], V0
	018 Call InputActionPropertyExtensions.EnableDirectAction, X0
	019 Move X30, [X31+64]
	020 Move X19, [X31+72]
	021 Add X31, X31, 80
	022 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03B809FC STRB W8, [X21 + 0x585]
	0x03B80A00 LDR X0, [X22]
	0x03B80A04 LDR W8, [X0 + 0xE0]
	0x03B80A08 CBNZ W8, 0x3B80A10
	0x03B80A0C BL 0x1C16DFC
	0x03B80A10 FMUL S1, S14, S14
	0x03B80A14 FMOV S2, W31
	0x03B80A18 FMUL S0, S12, S12
	0x03B80A1C FADD S1, S1, S2
	0x03B80A20 FADD S0, S0, S1
	0x03B80A24 FSQRT S8, S0
	0x03B80A28 FCMP S8, S9
	0x03B80A2C B.MI 0x3B80934
	0x03B80A30 LDRB W8, [X21 + 0x585]
	0x03B80A34 FMOV S0, 0.5
	0x03B80A38 STR S12, [X31 + 0x5C]
	0x03B80A3C FMUL S12, S10, S0
	0x03B80A40 FMUL S0, S8, S8
	0x03B80A44 FMUL S9, S12, S0
	0x03B80A48 FSUB S10, S8, S13

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X8, [X0+120]
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X19, X0
	007 Add X0, X31, 32
	008 Move X1, X31
	009 Move [X31+48], X8
	010 Move [X31+2], V0
	011 Call InputActionPropertyExtensions.DisableDirectAction, X0
	012 Move X8, [X19+144]
	013 Move V0, [X19+8]
	014 Add X0, X31, 0
	015 Move X1, X31
	016 Move [X31+16], X8
	017 Move [X31], V0
	018 Call InputActionPropertyExtensions.DisableDirectAction, X0
	019 Move X30, [X31+64]
	020 Move X19, [X31+72]
	021 Add X31, X31, 80
	022 Return 

Method: UnityEngine.Vector2 ReadInput()

Disassembly:
	0x03B80A4C CBNZ W8, 0x3B80A64
	0x03B80A50 ADRP X0, 0x573000
	0x03B80A54 LDR X0, [X0 + 0x5A8]
	0x03B80A58 BL 0x1C16CF4
	0x03B80A5C MOVZ W8, 0x1
	0x03B80A60 STRB W8, [X21 + 0x585]
	0x03B80A64 LDR X0, [X22]
	0x03B80A68 FDIV S9, S9, S10
	0x03B80A6C LDR W8, [X0 + 0xE0]
	0x03B80A70 CBNZ W8, 0x3B80A78
	0x03B80A74 BL 0x1C16DFC
	0x03B80A78 FCMP S13, 0x0
	0x03B80A7C FSQRT S9, S9
	0x03B80A80 B.PL 0x3B80ACC
	0x03B80A84 LDRB W8, [X21 + 0x585]
	0x03B80A88 FMUL S0, S12, S8
	0x03B80A8C FMUL S10, S8, S0
	0x03B80A90 FNEG S12, S13
	0x03B80A94 CBNZ W8, 0x3B80AAC
	0x03B80A98 ADRP X0, 0x573000
	0x03B80A9C LDR X0, [X0 + 0x5A8]
	0x03B80AA0 BL 0x1C16CF4
	0x03B80AA4 MOVZ W8, 0x1
	0x03B80AA8 STRB W8, [X21 + 0x585]
	0x03B80AAC LDR X0, [X22]
	0x03B80AB0 FDIV S10, S10, S12
	0x03B80AB4 LDR W8, [X0 + 0xE0]
	0x03B80AB8 CBNZ W8, 0x3B80AC0
	0x03B80ABC BL 0x1C16DFC
	0x03B80AC0 FSQRT S10, S10
	0x03B80AC4 FMOV S12, W31
	0x03B80AC8 B 0x3B80AE8
	0x03B80ACC FADD S10, S9, S9
	0x03B80AD0 FDIV S0, S8, S10
	0x03B80AD4 FMUL S1, S12, S0
	0x03B80AD8 FMUL S0, S0, S1
	0x03B80ADC FADD S0, S13, S0
	0x03B80AE0 FMUL S0, S10, S0
	0x03B80AE4 FDIV S12, S0, S8
	0x03B80AE8 LDRB W8, [X21 + 0x585]
	0x03B80AEC CBNZ W8, 0x3B80B04
	0x03B80AF0 ADRP X0, 0x573000
	0x03B80AF4 LDR X0, [X0 + 0x5A8]
	0x03B80AF8 BL 0x1C16CF4
	0x03B80AFC MOVZ W8, 0x1
	0x03B80B00 STRB W8, [X21 + 0x585]
	0x03B80B04 LDR X0, [X22]
	0x03B80B08 LDR W8, [X0 + 0xE0]
	0x03B80B0C CBZ W8, 0x3B80B20
	0x03B80B10 FMUL S0, S9, S9
	0x03B80B14 FADD S0, S0, S0
	0x03B80B18 FSQRT S13, S0
	0x03B80B1C B 0x3B80B4C
	0x03B80B20 BL 0x1C16DFC
	0x03B80B24 LDRB W8, [X21 + 0x585]
	0x03B80B28 FMUL S0, S9, S9
	0x03B80B2C FADD S0, S0, S0
	0x03B80B30 FSQRT S13, S0
	0x03B80B34 CBNZ W8, 0x3B80B4C
	0x03B80B38 ADRP X0, 0x573000
	0x03B80B3C LDR X0, [X0 + 0x5A8]
	0x03B80B40 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x863000
	008 Move W8, [X20+2762]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x59C000
	015 Move X0, [X0+960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2762], W8
	019 Move X20, 0x59C000
	020 Move X20, [X20+960]
	021 Add X0, X19, 104
	022 Move X1, X31
	023 Call InputActionProperty.get_action, X0
	024 Compare X0, 0
	025 JumpIfEqual {30}
	026 Move X1, [X20]
	027 Call InputAction.ReadValue, X0
	028 Move V8, V0
	029 Move V9, V1
	030 Move X21, 0x85A000
	031 Move W8, [X21+1935]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x57C000
	035 Move X0, [X0+3848]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1935], W8
	039 Move X8, 0x57C000
	040 Move X8, [X8+3848]
	041 Move X8, [X8]
	042 Move X8, [X8+184]
	043 Move S8, [X8]
	044 Move S9, [X8+4]
	045 Add X0, X19, 128
	046 Move X1, X31
	047 Call InputActionProperty.get_action, X0
	048 Compare X0, 0
	049 JumpIfEqual {52}
	050 Move X1, [X20]
	051 Call InputAction.ReadValue, X0
	052 Move X19, 0x85A000
	053 Move W8, [X19+1935]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x57C000
	057 Move X0, [X0+3848]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X19+1935], W8
	061 Move X8, 0x57C000
	062 Move X8, [X8+3848]
	063 Move X8, [X8]
	064 Move X8, [X8+184]
	065 Move S0, [X8]
	066 Move S1, [X8+4]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Add S0, S8, S0
	072 Add S1, S9, S1
	073 Move D9, [X31+48]
	074 Move D8, [X31+56]
	075 Return X0

Method: System.Void SetInputActionProperty(ref UnityEngine.InputSystem.InputActionProperty property, UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B80880 FMUL S0, S11, S11
	0x03B80884 FMUL S1, S9, S9
	0x03B80888 FADD S0, S0, S1
	0x03B8088C FMUL S1, S10, S10
	0x03B80890 LDR W8, [X0 + 0xE0]
	0x03B80894 FADD S15, S1, S0
	0x03B80898 FMUL S0, S8, S8
	0x03B8089C FMUL S1, S14, S14
	0x03B808A0 FADD S0, S0, S1
	0x03B808A4 FMUL S1, S13, S13
	0x03B808A8 MOV V12.16B, V10.16B
	0x03B808AC FADD S10, S1, S0
	0x03B808B0 CBNZ W8, 0x3B808B8
	0x03B808B4 BL 0x1C16DFC
	0x03B808B8 ADRP X8, 0xFFFFFFFFFCF69000
	0x03B808BC LDR V1, [X8 + 0xFE8]
	0x03B808C0 FMUL S0, S15, S10
	0x03B808C4 FSQRT S0, S0
	0x03B808C8 FCMP S0, S1
	0x03B808CC FMOV S1, W31
	0x03B808D0 B.MI 0x3B80928
	0x03B808D4 LDR X0, [X22]
	0x03B808D8 FMUL S1, S11, S8
	0x03B808DC FMUL S2, S9, S14
	0x03B808E0 FMUL S3, S12, S13
	0x03B808E4 FADD S1, S1, S2
	0x03B808E8 FADD S1, S3, S1
	0x03B808EC LDR W8, [X0 + 0xE0]
	0x03B808F0 FDIV S0, S1, S0
	0x03B808F4 FMOV S1, 1
	0x03B808F8 FMOV S2, -1
	0x03B808FC FMIN S1, S0, S1
	0x03B80900 FCMP S0, S2
	0x03B80904 FCSEL S8, S1, S2, PL
	0x03B80908 CBNZ W8, 0x3B80910
	0x03B8090C BL 0x1C16DFC
	0x03B80910 FCVT S0, S8
	0x03B80914 BL 0x3EB1B80
	0x03B80918 ADRP X8, 0xFFFFFFFFFCF6A000
	0x03B8091C LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x03B80924 FMUL S1, S0, S1
	0x03B80928 LDR V0, [X31 + 0x5C]
	0x03B8092C FCMP S1, S0
	0x03B80930 B.LE 0x3B80948
	0x03B80934 LDR W8, [X20 + 0x8]
	0x03B80938 LDR X9, [X20]
	0x03B8093C STR W8, [X19 + 0x8]
	0x03B80940 STR X9, [X19]
	0x03B80944 B 0x3B80998
	0x03B80948 LDP S1, S0, [X31 + 0x4C]
	0x03B8094C LDR V2, [X31 + 0x48]
	0x03B80950 LDP S10, S9, [X31 + 0x54]
	0x03B80954 FMUL S0, S0, S0
	0x03B80958 FMUL S1, S1, S1
	0x03B8095C FMUL S2, S2, S2
	0x03B80960 FADD S0, S0, S1
	0x03B80964 FADD S0, S2, S0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x863000
	009 Move X22, 0x574000
	010 Move W8, [X23+2763]
	011 Move X22, [X22+2416]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x574000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2763], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move X8, [X19+16]
	036 Move V0, [X19]
	037 Add X0, X31, 32
	038 Move X1, X31
	039 Move [X31+48], X8
	040 Move [X31+2], V0
	041 Call InputActionPropertyExtensions.DisableDirectAction, X0
	042 Move X8, [X21+16]
	043 Move V0, [X21]
	044 Move [X19+16], X8
	045 Move [X19], V0
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call Application.get_isPlaying
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {71}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Behaviour.get_isActiveAndEnabled, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {71}
	064 Move X8, [X19+16]
	065 Move V0, [X19]
	066 Add X0, X31, 0
	067 Move X1, X31
	068 Move [X31+16], X8
	069 Move [X31], V0
	070 Call InputActionPropertyExtensions.EnableDirectAction, X0
	071 Move X20, [X31+96]
	072 Move X19, [X31+104]
	073 Move X22, [X31+80]
	074 Move X21, [X31+88]
	075 Move X30, [X31+64]
	076 Move X23, [X31+72]
	077 Add X31, X31, 112
	078 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B80B44 MOVZ W8, 0x1
	0x03B80B48 STRB W8, [X21 + 0x585]
	0x03B80B4C LDR X0, [X22]
	0x03B80B50 LDR W8, [X0 + 0xE0]
	0x03B80B54 CBZ W8, 0x3B80B60
	0x03B80B58 MOV W8, W31
	0x03B80B5C B 0x3B80B70
	0x03B80B60 BL 0x1C16DFC
	0x03B80B64 LDRB W8, [X21 + 0x585]
	0x03B80B68 CMP W8, 0x0
	0x03B80B6C CSET W8, EQ
	0x03B80B70 FMUL S0, S10, S10
	0x03B80B74 FMUL S1, S12, S12
	0x03B80B78 LDR V3, [X20 + 0x4]
	0x03B80B7C FADD S0, S0, S1
	0x03B80B80 FSQRT S0, S0
	0x03B80B84 FMOV S4, 0.25
	0x03B80B88 FABD S0, S0, S0
	0x03B80B8C FMUL S1, S0, S4
	0x03B80B90 FCMP S3, 0x0
	0x03B80B94 FABD S2, S13, S13
	0x03B80B98 FCSEL S0, S0, S1, HI
	0x03B80B9C FCMP S0, S2
	0x03B80BA0 FCSEL S10, S9, S10, GT
	0x03B80BA4 FCSEL S9, S9, S12, GT
	0x03B80BA8 CBZ W8, 0x3B80BC0
	0x03B80BAC ADRP X0, 0x573000
	0x03B80BB0 LDR X0, [X0 + 0x5A8]
	0x03B80BB4 BL 0x1C16CF4
	0x03B80BB8 MOVZ W8, 0x1
	0x03B80BBC STRB W8, [X21 + 0x585]
	0x03B80BC0 LDR X0, [X22]
	0x03B80BC4 LDR W8, [X0 + 0xE0]
	0x03B80BC8 CBZ W8, 0x3B80BD4
	0x03B80BCC MOV W8, W31
	0x03B80BD0 B 0x3B80BE4
	0x03B80BD4 BL 0x1C16DFC
	0x03B80BD8 LDRB W8, [X21 + 0x585]
	0x03B80BDC CMP W8, 0x0
	0x03B80BE0 CSET W8, EQ
	0x03B80BE4 FMUL S0, S10, S10
	0x03B80BE8 FMUL S1, S9, S9
	0x03B80BEC FADD S12, S0, S1
	0x03B80BF0 CBZ W8, 0x3B80C08
	0x03B80BF4 ADRP X0, 0x573000
	0x03B80BF8 LDR X0, [X0 + 0x5A8]
	0x03B80BFC BL 0x1C16CF4
	0x03B80C00 MOVZ W8, 0x1
	0x03B80C04 STRB W8, [X21 + 0x585]
	0x03B80C08 LDR X0, [X22]
	0x03B80C0C FSQRT S12, S12
	0x03B80C10 FMOV S13, 1
	0x03B80C14 LDR W8, [X0 + 0xE0]
	0x03B80C18 CBZ W8, 0x3B80C24
	0x03B80C1C MOV W8, W31
	0x03B80C20 B 0x3B80C34
	0x03B80C24 BL 0x1C16DFC
	0x03B80C28 LDRB W8, [X21 + 0x585]
	0x03B80C2C CMP W8, 0x0
	0x03B80C30 CSET W8, EQ
	0x03B80C34 LDR V0, [X31 + 0x10]
	0x03B80C38 MOVZ W10, 0x7F800000
	0x03B80C3C FDIV S13, S13, S12
	0x03B80C40 FMUL S0, S11, S0
	0x03B80C44 FMOV W9, S0
	0x03B80C48 AND W9, W9, 0x7FFFFFFF
	0x03B80C4C FCMP S12, S0
	0x03B80C50 CCMP W9, W10, 0x2, PL
	0x03B80C54 FCSEL S12, S12, S0, HI
	0x03B80C58 CBZ W8, 0x3B80C70
	0x03B80C5C ADRP X0, 0x573000
	0x03B80C60 LDR X0, [X0 + 0x5A8]
	0x03B80C64 BL 0x1C16CF4
	0x03B80C68 MOVZ W8, 0x1
	0x03B80C6C STRB W8, [X21 + 0x585]
	0x03B80C70 LDR X0, [X22]
	0x03B80C74 FMUL S10, S10, S13
	0x03B80C78 LDR W8, [X0 + 0xE0]
	0x03B80C7C CBNZ W8, 0x3B80C84
	0x03B80C80 BL 0x1C16DFC
	0x03B80C84 LDR V1, [X31 + 0x5C]
	0x03B80C88 FMOV S0, 1
	0x03B80C8C FDIV S0, S0, S8
	0x03B80C90 FMUL S14, S14, S0
	0x03B80C94 FMUL S8, S1, S0
	0x03B80C98 LDP S0, S1, [X31 + 0x4]
	0x03B80C9C LDR V2, [X31 + 0xC]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0x863000
	010 Move X23, 0x578000
	011 Move X20, 0x5DC000
	012 Move X21, 0x5C8000
	013 Move X22, 0x5DC000
	014 Move W8, [X24+2764]
	015 Move X23, [X23+992]
	016 Move X20, [X20+3592]
	017 Move X21, [X21+2048]
	018 Move X22, [X22+3600]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x578000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0x5DC000
	028 Move X0, [X0+3600]
	029 Call 0x1C17CF4
	030 Move X0, 0x5C8000
	031 Move X0, [X0+2048]
	032 Call 0x1C17CF4
	033 Move X0, 0x5DC000
	034 Move X0, [X0+3592]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2764], W8
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X1, [X20]
	041 Move X6, [X21]
	042 Move W2, W31
	043 Move X3, X31
	044 Move X4, X31
	045 Move X5, X31
	046 Move X7, X31
	047 Move X20, X0
	048 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	049 Add X0, X31, 24
	050 Move X1, X20
	051 Move X2, X31
	052 Move [X31+24], X31
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Call InputActionProperty..ctor, X0, X1
	056 Move X8, [X31+40]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move [X19+120], X8
	059 Move [X19+104], V0
	060 Move X0, [X23]
	061 Call 0x1C17F10
	062 Move X1, [X22]
	063 Move X6, [X21]
	064 Move W2, W31
	065 Move X3, X31
	066 Move X4, X31
	067 Move X5, X31
	068 Move X7, X31
	069 Move X20, X0
	070 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	071 Add X0, X31, 0
	072 Move X1, X20
	073 Move X2, X31
	074 Move [X31], X31
	075 Move [X31+8], X31
	076 Move [X31+16], X31
	077 Call InputActionProperty..ctor, X0, X1
	078 Move X9, -50929664
	079 Move V0, [X31]
	080 Move X8, [X31+16]
	081 Move V1, [X9+1696]
	082 Move W9, 257
	083 Move X0, X19
	084 Move X1, X31
	085 Move [X19+144], X8
	086 Move [X19+8], V0
	087 Move [X19+72], D1
	088 NotImplemented "Instruction STRH not yet implemented."
	089 Call MonoBehaviour..ctor, X0
	090 Move X20, [X31+96]
	091 Move X19, [X31+104]
	092 Move X22, [X31+80]
	093 Move X21, [X31+88]
	094 Move X24, [X31+64]
	095 Move X23, [X31+72]
	096 Move X30, [X31+48]
	097 Add X31, X31, 112
	098 Return 

