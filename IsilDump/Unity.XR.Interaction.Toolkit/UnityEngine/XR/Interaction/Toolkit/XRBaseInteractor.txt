Type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor

Method: System.Void add_registered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> value)

Disassembly:
	0x03B52B40 LDR V1, [X31]
	0x03B52B44 STUR V0, [X19 + 0xC]
	0x03B52B48 STR V1, [X19]
	0x03B52B4C LDP X20, X19, [X31 + 0x60]
	0x03B52B50 LDP X22, X21, [X31 + 0x50]
	0x03B52B54 LDR X30, [X31 + 0x40]
	0x03B52B58 ADD X31, X31, 0x70
	0x03B52B5C RET
	0x03B52B60 BL 0x1C16F20
	0x03B52B64 SUB X31, X31, 0x70
	0x03B52B68 STR X30, [X31 + 0x40]
	0x03B52B6C STP X22, X21, [X31 + 0x50]
	0x03B52B70 STP X20, X19, [X31 + 0x60]
	0x03B52B74 ADRP X22, 0x890000
	0x03B52B78 LDRB W9, [X22 + 0x909]
	0x03B52B7C MOV X20, X1
	0x03B52B80 MOV X21, X0
	0x03B52B84 MOV X19, X8
	0x03B52B88 TBNZ X9, 0x0, 0x3B52BAC
	0x03B52B8C ADRP X0, 0x608000
	0x03B52B90 LDR X0, [X0 + 0xD10]
	0x03B52B94 BL 0x1C16CF4
	0x03B52B98 ADRP X0, 0x5C9000
	0x03B52B9C LDR X0, [X0 + 0x610]
	0x03B52BA0 BL 0x1C16CF4
	0x03B52BA4 MOVZ W8, 0x1
	0x03B52BA8 STRB W8, [X22 + 0x909]
	0x03B52BAC STP X31, X31, [X31 + 0x20]
	0x03B52BB0 STR W31, [X31 + 0x38]
	0x03B52BB4 STR X31, [X31 + 0x30]
	0x03B52BB8 LDR X0, [X21 + 0xF0]
	0x03B52BBC CBZ X0, 0x3B52C30
	0x03B52BC0 ADRP X8, 0x608000
	0x03B52BC4 LDR X8, [X8 + 0xD10]
	0x03B52BC8 ADD X2, X31, 0x20
	0x03B52BCC MOV X1, X20
	0x03B52BD0 LDR X3, [X8]
	0x03B52BD4 BL 0x2AA9E10
	0x03B52BD8 TBZ X0, 0x0, 0x3B52BE8
	0x03B52BDC LDUR V0, [X31 + 0x2C]
	0x03B52BE0 LDR V1, [X31 + 0x2]
	0x03B52BE4 B 0x3B52C14
	0x03B52BE8 ADRP X8, 0x5C9000
	0x03B52BEC LDR X8, [X8 + 0x610]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x891000
	009 Move W8, [X21+2296]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x609000
	017 Move X0, [X0+3304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2296], W8
	021 Move X24, 0x609000
	022 Add X20, X20, 32
	023 Move X21, [X20]
	024 Move X24, [X24+3304]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_registered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> value)

Disassembly:
	0x03B52BF0 LDR X0, [X8]
	0x03B52BF4 LDR W8, [X0 + 0xE0]
	0x03B52BF8 CBNZ W8, 0x3B52C00
	0x03B52BFC BL 0x1C16DFC
	0x03B52C00 ADD X8, X31, 0x0
	0x03B52C04 MOV X0, X31
	0x03B52C08 BL 0x3C3E05C
	0x03B52C0C LDUR V0, [X31 + 0xC]
	0x03B52C10 LDR V1, [X31]
	0x03B52C14 STUR V0, [X19 + 0xC]
	0x03B52C18 STR V1, [X19]
	0x03B52C1C LDP X20, X19, [X31 + 0x60]
	0x03B52C20 LDP X22, X21, [X31 + 0x50]
	0x03B52C24 LDR X30, [X31 + 0x40]
	0x03B52C28 ADD X31, X31, 0x70
	0x03B52C2C RET
	0x03B52C30 BL 0x1C16F20
	0x03B52C34 RET
	0x03B52C38 LDRB W0, [X0 + 0x98]
	0x03B52C3C RET
	0x03B52C40 LDRB W0, [X0 + 0x99]
	0x03B52C44 RET
	0x03B52C48 LDR W0, [X0 + 0x144]
	0x03B52C4C RET
	0x03B52C50 STR W1, [X0 + 0x144]
	0x03B52C54 RET
	0x03B52C58 LDR X0, [X0 + 0x148]
	0x03B52C5C RET
	0x03B52C60 STR X1, [X0 + 0x148]
	0x03B52C64 RET
	0x03B52C68 MOVZ W0, 0x1
	0x03B52C6C RET
	0x03B52C70 MOVZ W0, 0x1
	0x03B52C74 RET
	0x03B52C78 STP X30, X21, [X31 - 0x20]!
	0x03B52C7C STP X20, X19, [X31 + 0x10]
	0x03B52C80 ADRP X21, 0x890000
	0x03B52C84 LDRB W8, [X21 + 0x90D]
	0x03B52C88 MOV X19, X1
	0x03B52C8C MOV X20, X0
	0x03B52C90 TBNZ X8, 0x0, 0x3B52CA8
	0x03B52C94 ADRP X0, 0x608000
	0x03B52C98 LDR X0, [X0 + 0xD18]
	0x03B52C9C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x891000
	009 Move W8, [X21+2297]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x609000
	017 Move X0, [X0+3304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2297], W8
	021 Move X24, 0x609000
	022 Add X20, X20, 32
	023 Move X21, [X20]
	024 Move X24, [X24+3304]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_unregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> value)

Disassembly:
	0x03B52CA0 MOVZ W8, 0x1
	0x03B52CA4 STRB W8, [X21 + 0x90D]
	0x03B52CA8 LDR X0, [X20 + 0xA0]
	0x03B52CAC CBZ X0, 0x3B52CCC
	0x03B52CB0 ADRP X8, 0x608000
	0x03B52CB4 LDR X8, [X8 + 0xD18]
	0x03B52CB8 MOV X1, X19
	0x03B52CBC LDP X20, X19, [X31 + 0x10]
	0x03B52CC0 LDR X2, [X8]
	0x03B52CC4 LDP X30, X21, [X31], #0x20
	0x03B52CC8 B 0x2D58148
	0x03B52CCC BL 0x1C16F20
	0x03B52CD0 STP X30, X21, [X31 - 0x20]!
	0x03B52CD4 STP X20, X19, [X31 + 0x10]
	0x03B52CD8 ADRP X21, 0x890000
	0x03B52CDC LDRB W8, [X21 + 0x90E]
	0x03B52CE0 MOV X19, X1
	0x03B52CE4 MOV X20, X0
	0x03B52CE8 TBNZ X8, 0x0, 0x3B52D00
	0x03B52CEC ADRP X0, 0x608000
	0x03B52CF0 LDR X0, [X0 + 0xD20]
	0x03B52CF4 BL 0x1C16CF4
	0x03B52CF8 MOVZ W8, 0x1
	0x03B52CFC STRB W8, [X21 + 0x90E]
	0x03B52D00 LDR X0, [X20 + 0xA8]
	0x03B52D04 CBZ X0, 0x3B52D24
	0x03B52D08 ADRP X8, 0x608000
	0x03B52D0C LDR X8, [X8 + 0xD20]
	0x03B52D10 MOV X1, X19
	0x03B52D14 LDP X20, X19, [X31 + 0x10]
	0x03B52D18 LDR X2, [X8]
	0x03B52D1C LDP X30, X21, [X31], #0x20
	0x03B52D20 B 0x2D58148
	0x03B52D24 BL 0x1C16F20
	0x03B52D28 STR X30, [X31 - 0x30]!
	0x03B52D2C STP X22, X21, [X31 + 0x10]
	0x03B52D30 STP X20, X19, [X31 + 0x20]
	0x03B52D34 ADRP X21, 0x890000
	0x03B52D38 ADRP X22, 0x608000
	0x03B52D3C LDRB W8, [X21 + 0x90F]
	0x03B52D40 LDR X22, [X22 + 0x148]
	0x03B52D44 MOV X20, X1
	0x03B52D48 MOV X19, X0
	0x03B52D4C TBNZ X8, 0x0, 0x3B52D64

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x891000
	009 Move W8, [X21+2298]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x609000
	017 Move X0, [X0+3312]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2298], W8
	021 Move X24, 0x609000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+3312]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_unregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> value)

Disassembly:
	0x03B52D50 ADRP X0, 0x608000
	0x03B52D54 LDR X0, [X0 + 0x148]
	0x03B52D58 BL 0x1C16CF4
	0x03B52D5C MOVZ W8, 0x1
	0x03B52D60 STRB W8, [X21 + 0x90F]
	0x03B52D64 LDR X1, [X22]
	0x03B52D68 MOV X0, X20
	0x03B52D6C BL 0x1C16E00
	0x03B52D70 CBZ X0, 0x3B52D8C
	0x03B52D74 MOV X1, X0
	0x03B52D78 MOV X0, X19
	0x03B52D7C LDP X20, X19, [X31 + 0x20]
	0x03B52D80 LDP X22, X21, [X31 + 0x10]
	0x03B52D84 LDR X30, [X31], #0x30
	0x03B52D88 B 0x3B52C78
	0x03B52D8C LDP X20, X19, [X31 + 0x20]
	0x03B52D90 LDP X22, X21, [X31 + 0x10]
	0x03B52D94 LDR X30, [X31], #0x30
	0x03B52D98 RET
	0x03B52D9C MOV X0, X31
	0x03B52DA0 RET
	0x03B52DA4 SUB X31, X31, 0xB0
	0x03B52DA8 STR D10, [X31 + 0x60]
	0x03B52DAC STP D9, D8, [X31 + 0x70]
	0x03B52DB0 STP X30, X23, [X31 + 0x80]
	0x03B52DB4 STP X22, X21, [X31 + 0x90]
	0x03B52DB8 STP X20, X19, [X31 + 0xA0]
	0x03B52DBC ADRP X22, 0x890000
	0x03B52DC0 ADRP X21, 0x5A1000
	0x03B52DC4 LDRB W8, [X22 + 0x911]
	0x03B52DC8 LDR X21, [X21 + 0x598]
	0x03B52DCC MOV X19, X1
	0x03B52DD0 MOV X20, X0
	0x03B52DD4 TBNZ X8, 0x0, 0x3B52E04
	0x03B52DD8 ADRP X0, 0x608000
	0x03B52DDC LDR X0, [X0 + 0xD28]
	0x03B52DE0 BL 0x1C16CF4
	0x03B52DE4 ADRP X0, 0x608000
	0x03B52DE8 LDR X0, [X0 + 0xD30]
	0x03B52DEC BL 0x1C16CF4
	0x03B52DF0 ADRP X0, 0x5A1000
	0x03B52DF4 LDR X0, [X0 + 0x598]
	0x03B52DF8 BL 0x1C16CF4
	0x03B52DFC MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x891000
	009 Move W8, [X21+2299]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x609000
	017 Move X0, [X0+3312]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2299], W8
	021 Move X24, 0x609000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+3312]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager get_interactionManager()

Disassembly:
	0x03B52E00 STRB W8, [X22 + 0x911]
	0x03B52E04 LDR X8, [X20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_interactionManager(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager value)

Disassembly:
	0x03B52E08 MOV X0, X20
	0x03B52E0C MOV X1, X19
	0x03B52E10 LDR X9, [X8 + 0x4B8]
	0x03B52E14 LDR X2, [X8 + 0x4C0]
	0x03B52E18 BLR X9
	0x03B52E1C LDR X8, [X21]
	0x03B52E20 MOV X21, X0
	0x03B52E24 LDR W9, [X8 + 0xE0]
	0x03B52E28 CBNZ W9, 0x3B52E34
	0x03B52E2C MOV X0, X8
	0x03B52E30 BL 0x1C16DFC
	0x03B52E34 MOV X0, X21
	0x03B52E38 MOV X1, X31
	0x03B52E3C MOV X2, X31
	0x03B52E40 BL 0x3C354F8
	0x03B52E44 LDR X22, [X20 + 0xE8]
	0x03B52E48 TBZ X0, 0x0, 0x3B52F98
	0x03B52E4C CBZ X21, 0x3B52FE0
	0x03B52E50 MOV X0, X21
	0x03B52E54 MOV X1, X31
	0x03B52E58 BL 0x3C3F58C
	0x03B52E5C MOV X0, X21
	0x03B52E60 MOV X1, X31
	0x03B52E64 MOV V8.16B, V0.16B
	0x03B52E68 MOV V9.16B, V1.16B
	0x03B52E6C MOV V10.16B, V2.16B
	0x03B52E70 BL 0x3C3DEB4
	0x03B52E74 MOV V4.16B, V0.16B
	0x03B52E78 MOV V5.16B, V1.16B
	0x03B52E7C MOV V6.16B, V2.16B
	0x03B52E80 MOV V7.16B, V3.16B
	0x03B52E84 ADD X0, X31, 0x20
	0x03B52E88 MOV V0.16B, V8.16B
	0x03B52E8C MOV V1.16B, V9.16B
	0x03B52E90 MOV V2.16B, V10.16B
	0x03B52E94 MOV V3.16B, V4.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x891000
	007 Move X21, 0x5A2000
	008 Move W8, [X22+2300]
	009 Move X21, [X21+2416]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5A2000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2300], W8
	021 Move [X19+48], X20
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call Application.get_isPlaying
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X0, X19
	034 Move X1, X31
	035 Call Behaviour.get_isActiveAndEnabled, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {46}
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup get_containingGroup()

Disassembly:
	0x03B52F64 ADD X2, X31, 0x40
	0x03B52F68 MOV X0, X20

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_containingGroup(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup value)

Disassembly:
	0x03B52F6C MOV X1, X19
	0x03B52F70 STR V0, [X31 + 0x4]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask get_interactionLayers()

Disassembly:
	0x03B52F74 STUR V1, [X31 + 0x4C]
	0x03B52F78 BL 0x2AA815C

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_interactionLayers(UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask value)

Disassembly:
	0x03B52F7C LDP X20, X19, [X31 + 0xA0]
	0x03B52F80 LDP X22, X21, [X31 + 0x90]

ISIL:
	001 Move [X0+68], X1
	002 Return 

Method: UnityEngine.Transform get_attachTransform()

Disassembly:
	0x03B52F84 LDP X30, X23, [X31 + 0x80]
	0x03B52F88 LDP D9, D8, [X31 + 0x70]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_attachTransform(UnityEngine.Transform value)

Disassembly:
	0x03B52F8C LDR V10, [X31 + 0x60]
	0x03B52F90 ADD X31, X31, 0xB0

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Boolean get_keepSelectedTargetValid()

Disassembly:
	0x03B52F94 RET
	0x03B52F98 CBZ X22, 0x3B52FE0

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_keepSelectedTargetValid(System.Boolean value)

Disassembly:
	0x03B52F9C ADRP X21, 0x608000
	0x03B52FA0 LDR X21, [X21 + 0xD28]
	0x03B52FA4 MOV X0, X22

ISIL:
	001 And W8, W1, 1
	002 Move [X0+88], W8
	003 Return 

Method: System.Boolean get_disableVisualsWhenBlockedInGroup()

Disassembly:
	0x03B52FA8 MOV X1, X19
	0x03B52FAC LDR X2, [X21]

ISIL:
	001 Move W0, [X0+89]
	002 Return X0

Method: System.Void set_disableVisualsWhenBlockedInGroup(System.Boolean value)

Disassembly:
	0x03B52FB0 BL 0x2AA97C4
	0x03B52FB4 LDR X0, [X20 + 0xF0]
	0x03B52FB8 CBZ X0, 0x3B52FE0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+89], W8
	003 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable get_startingSelectedInteractable()

Disassembly:
	0x03B52FBC LDR X2, [X21]
	0x03B52FC0 MOV X1, X19

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_startingSelectedInteractable(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable value)

Disassembly:
	0x03B52FC4 LDP X20, X19, [X31 + 0xA0]
	0x03B52FC8 LDP X22, X21, [X31 + 0x90]

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter get_startingTargetFilter()

Disassembly:
	0x03B52FCC LDP X30, X23, [X31 + 0x80]
	0x03B52FD0 LDP D9, D8, [X31 + 0x70]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_startingTargetFilter(UnityEngine.XR.Interaction.Toolkit.Filtering.XRBaseTargetFilter value)

Disassembly:
	0x03B52FD4 LDR V10, [X31 + 0x60]
	0x03B52FD8 ADD X31, X31, 0xB0

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent get_hoverEntered()

Disassembly:
	0x03B52FDC B 0x2AA97C4
	0x03B52FE0 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_hoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent value)

Disassembly:
	0x03B52FE4 SUB X31, X31, 0xD0
	0x03B52FE8 STP D15, D14, [X31 + 0x50]

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.HoverExitEvent get_hoverExited()

Disassembly:
	0x03B52FEC STP D13, D12, [X31 + 0x60]
	0x03B52FF0 STP D11, D10, [X31 + 0x70]

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_hoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEvent value)

Disassembly:
	0x03B52FF4 STP D9, D8, [X31 + 0x80]
	0x03B52FF8 STP X30, X25, [X31 + 0x90]

ISIL:
	001 Move [X0+120], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent get_selectEntered()

Disassembly:
	0x03B52FFC STP X24, X23, [X31 + 0xA0]
	0x03B53000 STP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_selectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent value)

Disassembly:
	0x03B53004 STP X20, X19, [X31 + 0xC0]
	0x03B53008 STR X31, [X31 + 0x48]

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.SelectExitEvent get_selectExited()

Disassembly:
	0x03B5300C LDR X8, [X0]
	0x03B53010 MOV X1, X31

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_selectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEvent value)

Disassembly:
	0x03B53014 MOV X19, X0
	0x03B53018 ADD X23, X0, 0x11C

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRTargetFilter get_targetFilter()

Disassembly:
	0x03B5301C LDR X9, [X8 + 0x4B8]
	0x03B53020 LDR X2, [X8 + 0x4C0]
	0x03B53024 BLR X9
	0x03B53028 MOV X20, X0
	0x03B5302C ADD X1, X31, 0x48
	0x03B53030 MOV X0, X19
	0x03B53034 BL 0x3B52330
	0x03B53038 LDRSW X24, [X19 + 0x154]
	0x03B5303C MOV W21, W0
	0x03B53040 CMP W24, 0x5
	0x03B53044 B.LE 0x3B530A8
	0x03B53048 MOV X0, X31
	0x03B5304C BL 0x3C3C764
	0x03B53050 LDR V13, [X19 + 0x150]
	0x03B53054 MOV V12.16B, V0.16B
	0x03B53058 TBZ X21, 0x0, 0x3B530D8
	0x03B5305C CBZ X20, 0x3B53428
	0x03B53060 LDR X21, [X31 + 0x48]
	0x03B53064 MOV X0, X20
	0x03B53068 MOV X1, X31
	0x03B5306C BL 0x3C3F58C
	0x03B53070 CBZ X21, 0x3B53428
	0x03B53074 MOV X0, X21
	0x03B53078 MOV X1, X31
	0x03B5307C BL 0x3C40B58
	0x03B53080 MOV X0, X20
	0x03B53084 MOV X1, X31
	0x03B53088 STR D0, [X31 + 0x30]
	0x03B5308C STR D1, [X31 + 0x20]
	0x03B53090 MOV V8.16B, V2.16B
	0x03B53094 BL 0x3C3F988
	0x03B53098 MOV X0, X21
	0x03B5309C MOV X1, X31
	0x03B530A0 BL 0x3C40A48
	0x03B530A4 B 0x3B53100
	0x03B530A8 LDR X25, [X19 + 0x158]
	0x03B530AC TBZ X21, 0x0, 0x3B532E0
	0x03B530B0 CBZ X20, 0x3B53428
	0x03B530B4 LDR X22, [X31 + 0x48]
	0x03B530B8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x890000
	005 Move W8, [X20+2301]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5A1000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2301], W8
	016 Move X20, [X19+144]
	017 Compare X20, 0
	018 JumpIfEqual {44}
	019 Move X9, 0x5A1000
	020 Move X9, [X9+1432]
	021 Move X8, [X20]
	022 Move X0, [X9]
	023 Move W10, [X8+304]
	024 Move W9, [X0+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X8+200]
	027 Add X8, X8, X9
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move X20, X31
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Move X20, [X19+144]
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return X0

Method: System.Void set_targetFilter(UnityEngine.XR.Interaction.Toolkit.Filtering.IXRTargetFilter value)

Disassembly:
	0x03B530BC MOV X1, X31
	0x03B530C0 BL 0x3C3F58C
	0x03B530C4 CBZ X22, 0x3B53428
	0x03B530C8 MOV X0, X22
	0x03B530CC MOV X1, X31
	0x03B530D0 BL 0x3C40B58
	0x03B530D4 B 0x3B532F0
	0x03B530D8 CBZ X20, 0x3B53428
	0x03B530DC MOV X0, X20
	0x03B530E0 MOV X1, X31
	0x03B530E4 BL 0x3C3F58C
	0x03B530E8 MOV X0, X20
	0x03B530EC MOV X1, X31
	0x03B530F0 STR D0, [X31 + 0x30]
	0x03B530F4 STR D1, [X31 + 0x20]
	0x03B530F8 MOV V8.16B, V2.16B
	0x03B530FC BL 0x3C3F988
	0x03B53100 LDR X9, [X19 + 0x158]
	0x03B53104 MOV V20.16B, V0.16B
	0x03B53108 MOV V21.16B, V1.16B
	0x03B5310C MOV V22.16B, V2.16B
	0x03B53110 CBZ X9, 0x3B53428
	0x03B53114 MOVZ W10, 0xAAAB
	0x03B53118 AND X8, X24, 0x0
	0x03B5311C MOVK W10, 0xAAAA0000
	0x03B53120 LDR W11, [X9 + 0x18]
	0x03B53124 MUL X8, X8, X10
	0x03B53128 UBFM X8, X8, 0x22, 0x3F
	0x03B5312C MOVZ W10, 0x6
	0x03B53130 MSUB W20, W8, W10, W24
	0x03B53134 CMP W20, W11
	0x03B53138 B.CS 0x3B5342C
	0x03B5313C LDR X8, [X19 + 0x160]
	0x03B53140 CBZ X8, 0x3B53428
	0x03B53144 LDR W10, [X8 + 0x18]
	0x03B53148 CMP W20, W10
	0x03B5314C B.CS 0x3B5342C
	0x03B53150 LDP V16, V1, [X31 + 0x20]
	0x03B53154 MOV W21, W20
	0x03B53158 MOVZ W10, 0xC
	0x03B5315C MADD X9, X21, X10, X9
	0x03B53160 LDR V0, [X19 + 0x168]
	0x03B53164 MOV V1.S[1], V16.S[0]
	0x03B53168 LDR V16, [X9 + 0x20]
	0x03B5316C MOVZ W10, 0xC
	0x03B53170 MADD X8, X21, X10, X8
	0x03B53174 FSUB S23, S12, S13
	0x03B53178 FSUB V16.2S, V0.2S, V16.2S
	0x03B5317C LDR V3, [X19 + 0x170]
	0x03B53180 LDR V2, [X19 + 0x174]
	0x03B53184 LDR V4, [X19 + 0x178]
	0x03B53188 LDR V5, [X19 + 0x17C]
	0x03B5318C LDR V17, [X9 + 0x28]
	0x03B53190 FADD V12.2S, V1.2S, V16.2S
	0x03B53194 LDP S1, S16, [X8 + 0x20]
	0x03B53198 LDR V18, [X8 + 0x28]
	0x03B5319C UNIMPLEMENTED
	0x03B531A0 FSUB V0.2S, V12.2S, V0.2S
	0x03B531A4 FMOV V6.2S, 0x0
	0x03B531A8 FMOV S7, 6
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B531B4 FSUB S19, S2, S1
	0x03B531B8 FDIV S0, S2, S7
	0x03B531BC FSUB S16, S4, S16
	0x03B531C0 FDIV S1, S4, S7
	0x03B531C4 FSUB S4, S5, S18
	0x03B531C8 FDIV S2, S5, S7
	0x03B531CC FSUB S5, S3, S17
	0x03B531D0 MOV V10.16B, V8.16B
	0x03B531D4 FADD S8, S8, S5
	0x03B531D8 FADD S13, S22, S4
	0x03B531DC FSUB S4, S8, S3
	0x03B531E0 FDIV S4, S4, S23
	0x03B531E4 FADD S15, S20, S19
	0x03B531E8 FADD S14, S21, S16
	0x03B531EC FDIV S4, S4, S7
	0x03B531F0 STR D6, [X23]
	0x03B531F4 FDIV S3, S15, S7
	0x03B531F8 STR S4, [X19 + 0x124]
	0x03B531FC FDIV S4, S14, S7
	0x03B53200 FDIV S5, S13, S7
	0x03B53204 MOV X0, X31
	0x03B53208 STR V23, [X31 + 0x1]
	0x03B5320C STP S20, S21, [X31 + 0x8]
	0x03B53210 MOV V11.16B, V22.16B
	0x03B53214 BL 0x3C2A1AC
	0x03B53218 MOV X0, X31
	0x03B5321C BL 0x3C2A60C
	0x03B53220 ADRP X8, 0xFFFFFFFFFCF97000
	0x03B53224 LDR V3, [X8 + 0x448]
	0x03B53228 MOV X0, X31
	0x03B5322C FMUL S0, S0, S3
	0x03B53230 FMUL S1, S1, S3
	0x03B53234 FMUL S2, S2, S3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x890000
	007 Move X22, 0x5A1000
	008 Move W8, [X21+2302]
	009 Move X22, [X22+2416]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5A1000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x608000
	020 Move X0, [X0+3320]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2302], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {56}
	035 Move X0, X19
	036 Call XRBaseInteractor.get_targetFilter, X0
	037 Compare X0, 0
	038 JumpIfEqual {66}
	039 Move X10, 0x608000
	040 Move X8, [X0]
	041 Move X10, [X10+3320]
	042 Move X21, X0
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 2
	054 Move X0, X21
	055 Call 0x1C5D788
	056 Move [X19+144], X20
	057 Move W9, [X10]
	058 Add W9, W9, 2
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X2, [X0+8]
	063 Move X0, X21
	064 Move X1, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X0, X19
	067 Move [X19+144], X20
	068 Call XRBaseInteractor.get_targetFilter, X0
	069 Compare X0, 0
	070 JumpIfEqual {88}
	071 Move X10, 0x608000
	072 Move X8, [X0]
	073 Move X10, [X10+3320]
	074 Move X20, X0
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X1, [X10]
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 1
	086 Move X0, X20
	087 Call 0x1C5D788
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 
	094 Move W9, [X10]
	095 Add W9, W9, 1
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X3, [X0]
	099 Move X2, [X0+8]
	100 Move X0, X20
	101 Move X1, X19
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 CallNoReturn X3

Method: System.Boolean get_allowHover()

Disassembly:
	0x03B53238 BL 0x3C2AB94
	0x03B5323C ADRP X10, 0xFFFFFFFFFCF97000

ISIL:
	001 Move W0, [X0+152]
	002 Return X0

Method: System.Void set_allowHover(System.Boolean value)

Disassembly:
	0x03B53240 MOV V0.S[1], V1.S[0]
	0x03B53244 LDR V1, [X10 + 0x104]
	0x03B53248 MOVZ W9, 0xFA35

ISIL:
	001 And W8, W1, 1
	002 Move [X0+152], W8
	003 Return 

Method: System.Boolean get_allowSelect()

Disassembly:
	0x03B5324C MOVK W9, 0x3C8E0000
	0x03B53250 LDR X8, [X19 + 0x158]

ISIL:
	001 Move W0, [X0+153]
	002 Return X0

Method: System.Void set_allowSelect(System.Boolean value)

Disassembly:
	0x03B53254 FMUL S1, S2, S1
	0x03B53258 LDR V2, [X31 + 0x1]
	0x03B5325C UNIMPLEMENTED

ISIL:
	001 And W8, W1, 1
	002 Move [X0+153], W8
	003 Return 

Method: System.Boolean get_isPerformingManualInteraction()

Disassembly:
	0x00000000 INVALID
	0x00000000 INVALID

ISIL:
	001 Move W0, [X0+154]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable> get_interactablesHovered()

Disassembly:
	0x03B4C178 STR W9, [X19 + 0x8C]
	0x03B4C17C STRB W8, [X19 + 0x90]
	0x03B4C180 STRB W8, [X19 + 0xC4]
	0x03B4C184 STR W10, [X19 + 0x120]
	0x03B4C188 LDR X20, [X22]
	0x03B4C18C LDR X8, [X20 + 0x38]
	0x03B4C190 CBNZ X8, 0x3B4C1A0
	0x03B4C194 MOV X0, X20
	0x03B4C198 BL 0x1C5C6E0
	0x03B4C19C LDR X8, [X20 + 0x38]
	0x03B4C1A0 LDR X0, [X8 + 0x10]
	0x03B4C1A4 LDRB W8, [X0 + 0x135]
	0x03B4C1A8 TBNZ X8, 0x0, 0x3B4C1B0
	0x03B4C1AC BL 0x1C5C684
	0x03B4C1B0 LDR W8, [X0 + 0xE0]
	0x03B4C1B4 CBNZ W8, 0x3B4C1BC
	0x03B4C1B8 BL 0x1C16DFC
	0x03B4C1BC LDR X8, [X20 + 0x38]
	0x03B4C1C0 ADRP X20, 0x5A9000
	0x03B4C1C4 LDR X0, [X8 + 0x10]
	0x03B4C1C8 LDRB W8, [X0 + 0x135]
	0x03B4C1CC LDR X20, [X20 + 0x9B0]
	0x03B4C1D0 TBNZ X8, 0x0, 0x3B4C1D8
	0x03B4C1D4 BL 0x1C5C684
	0x03B4C1D8 LDR X8, [X0 + 0xB8]
	0x03B4C1DC MOVN W9, 0x0
	0x03B4C1E0 MOVZ W1, 0x2
	0x03B4C1E4 LDR X8, [X8]
	0x03B4C1E8 STR W9, [X19 + 0x140]
	0x03B4C1EC STR W9, [X19 + 0x158]
	0x03B4C1F0 STR X8, [X19 + 0x128]
	0x03B4C1F4 LDR X0, [X20]
	0x03B4C1F8 BL 0x1C16D6C
	0x03B4C1FC ADRP X21, 0x88C000
	0x03B4C200 LDRB W8, [X21 + 0x783]
	0x03B4C204 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x897000
	005 Move W8, [X20+2303]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x60F000
	012 Move X0, [X0+2616]
	013 Call 0x1C17CF4
	014 Move X0, 0x60F000
	015 Move X0, [X0+2624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2303], W8
	019 Move X8, [X19+160]
	020 Compare X8, 0
	021 JumpIfEqual {41}
	022 Move X0, [X8+16]
	023 Compare X0, 0
	024 JumpIfEqual {36}
	025 Move X9, 0x60F000
	026 Move X9, [X9+2624]
	027 Move X8, [X0]
	028 Move X1, [X9]
	029 Move W10, [X8+304]
	030 Move W9, [X1+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X8+200]
	033 Add X8, X8, X9
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0
	040 Call 0x1C181E0
	041 Call 0x1C17F20

Method: System.Boolean get_hasHover()

Disassembly:
	0x03B4C11C STR D0, [X21 + 0x20]
	0x03B4C120 FMOV S0, 1
	0x03B4C124 STR X31, [X31]
	0x03B4C128 BL 0x3C26820
	0x03B4C12C LDR W8, [X21 + 0x18]
	0x03B4C130 CMP W8, 0x1
	0x03B4C134 B.LS 0x3B4C314
	0x03B4C138 LDR V0, [X31]
	0x03B4C13C ADRP X22, 0x60E000
	0x03B4C140 LDR X22, [X22 + 0xA80]
	0x03B4C144 MOV X0, X20
	0x03B4C148 MOV X1, X21
	0x03B4C14C MOV X2, X31
	0x03B4C150 STR D0, [X21 + 0x28]
	0x03B4C154 BL 0x3C26AD0
	0x03B4C158 FMOV V0.2S, 0x0
	0x03B4C15C MOVZ W8, 0x1
	0x03B4C160 MOVZ W9, 0x3F000000
	0x03B4C164 MOVN W10, 0x0
	0x03B4C168 STR X20, [X19 + 0x60]
	0x03B4C16C STUR D0, [X19 + 0x6C]
	0x03B4C170 STRB W8, [X19 + 0x88]
	0x03B4C174 STRB W8, [X19 + 0x8A]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x897000
	005 Move W8, [X20+2304]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x60F000
	012 Move X0, [X0+2608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2304], W8
	016 Move X0, [X19+160]
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, 0x60F000
	020 Move X8, [X8+2608]
	021 Move X1, [X8]
	022 Call 0x2D58B54, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> get_interactablesSelected()

Disassembly:
	0x03B515A0 LDR X0, [X0 + 0xCB0]
	0x03B515A4 BL 0x1C16CF4
	0x03B515A8 ADRP X0, 0x609000
	0x03B515AC LDR X0, [X0 + 0xC78]
	0x03B515B0 BL 0x1C16CF4
	0x03B515B4 ADRP X0, 0x609000
	0x03B515B8 LDR X0, [X0 + 0xC80]
	0x03B515BC BL 0x1C16CF4
	0x03B515C0 ADRP X0, 0x609000
	0x03B515C4 LDR X0, [X0 + 0xCB8]
	0x03B515C8 BL 0x1C16CF4
	0x03B515CC ADRP X0, 0x609000
	0x03B515D0 LDR X0, [X0 + 0xC70]
	0x03B515D4 BL 0x1C16CF4
	0x03B515D8 ADRP X0, 0x609000
	0x03B515DC LDR X0, [X0 + 0x490]
	0x03B515E0 BL 0x1C16CF4
	0x03B515E4 ADRP X0, 0x609000
	0x03B515E8 LDR X0, [X0 + 0x498]
	0x03B515EC BL 0x1C16CF4
	0x03B515F0 ADRP X0, 0x5A4000
	0x03B515F4 LDR X0, [X0 + 0x858]
	0x03B515F8 BL 0x1C16CF4
	0x03B515FC ADRP X0, 0x609000
	0x03B51600 LDR X0, [X0 + 0xC50]
	0x03B51604 BL 0x1C16CF4
	0x03B51608 ADRP X0, 0x609000
	0x03B5160C LDR X0, [X0 + 0xC58]
	0x03B51610 BL 0x1C16CF4
	0x03B51614 ADRP X0, 0x5A4000
	0x03B51618 LDR X0, [X0 + 0x850]
	0x03B5161C BL 0x1C16CF4
	0x03B51620 ADRP X0, 0x609000
	0x03B51624 LDR X0, [X0 + 0x4A0]
	0x03B51628 BL 0x1C16CF4
	0x03B5162C ADRP X0, 0x609000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x892000
	005 Move W8, [X20+2305]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x60A000
	012 Move X0, [X0+3008]
	013 Call 0x1C17CF4
	014 Move X0, 0x60A000
	015 Move X0, [X0+2840]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2305], W8
	019 Move X8, [X19+168]
	020 Compare X8, 0
	021 JumpIfEqual {41}
	022 Move X0, [X8+16]
	023 Compare X0, 0
	024 JumpIfEqual {36}
	025 Move X9, 0x60A000
	026 Move X9, [X9+2840]
	027 Move X8, [X0]
	028 Move X1, [X9]
	029 Move W10, [X8+304]
	030 Move W9, [X1+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X8+200]
	033 Add X8, X8, X9
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0
	040 Call 0x1C181E0
	041 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable get_firstInteractableSelected()

Disassembly:
	0x03B53268 FDIV S1, S1, S2
	0x03B5326C STR D0, [X19 + 0x128]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_firstInteractableSelected(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable value)

Disassembly:
	0x03B53270 STR S1, [X19 + 0x130]
	0x03B53274 CBZ X8, 0x3B53428

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Boolean get_hasSelection()

Disassembly:
	0x03B4C6D0 FADD S0, S0, S1
	0x03B4C6D4 FSQRT S11, S0
	0x03B4C6D8 TBZ X23, 0x0, 0x3B4C7B0
	0x03B4C6DC LDR V12, [X20]
	0x03B4C6E0 LDUR V13, [X20 + 0x4]
	0x03B4C6E4 LDR V14, [X22]
	0x03B4C6E8 LDRB W8, [X24 + 0x585]
	0x03B4C6EC LDUR V15, [X22 + 0x4]
	0x03B4C6F0 CBNZ W8, 0x3B4C708
	0x03B4C6F4 ADRP X0, 0x5A7000
	0x03B4C6F8 LDR X0, [X0 + 0x5A8]
	0x03B4C6FC BL 0x1C16CF4
	0x03B4C700 MOVZ W8, 0x1
	0x03B4C704 STRB W8, [X24 + 0x585]
	0x03B4C708 LDR X0, [X25]
	0x03B4C70C FSUB S14, S14, S12
	0x03B4C710 FSUB V12.2S, V15.2S, V13.2S
	0x03B4C714 LDR W8, [X0 + 0xE0]
	0x03B4C718 CBNZ W8, 0x3B4C720
	0x03B4C71C BL 0x1C16DFC
	0x03B4C720 FMUL S0, S14, S14
	0x00000000 INVALID
	0x03B4C728 FADD S0, S0, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x897000
	005 Move W8, [X20+2306]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x60F000
	012 Move X0, [X0+2656]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2306], W8
	016 Move X0, [X19+168]
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, 0x60F000
	020 Move X8, [X8+2656]
	021 Move X1, [X8]
	022 Call 0x2D58B54, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Boolean get_isInteractingWithUI()

Disassembly:
	0x03B53278 LDR W9, [X8 + 0x18]
	0x03B5327C CMP W20, W9

ISIL:
	001 Move W0, [X0+184]
	002 Return X0

Method: System.Void set_isInteractingWithUI(System.Boolean value)

Disassembly:
	0x03B53280 B.CS 0x3B5342C
	0x03B53284 LDR V1, [X31 + 0x3]
	0x03B53288 LDR V0, [X31 + 0x2]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+184], W8
	003 Return 

Method: System.Collections.Generic.List`1<UnityEngine.Object> get_startingHoverFilters()

Disassembly:
	0x03B5328C MOVZ W9, 0xC
	0x03B53290 MADD X8, X21, X9, X8

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Void set_startingHoverFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)

Disassembly:
	0x03B53294 STR S10, [X8 + 0x28]
	0x03B53298 STP S1, S0, [X8 + 0x20]

ISIL:
	001 Move [X0+192], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> get_hoverFilters()

Disassembly:
	0x03B5329C LDR X8, [X19 + 0x160]
	0x03B532A0 CBZ X8, 0x3B53428

ISIL:
	001 Move X0, [X0+200]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.Object> get_startingSelectFilters()

Disassembly:
	0x03B532A4 LDR W9, [X8 + 0x18]
	0x03B532A8 CMP W20, W9

ISIL:
	001 Move X0, [X0+208]
	002 Return X0

Method: System.Void set_startingSelectFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)

Disassembly:
	0x03B532AC B.CS 0x3B5342C
	0x03B532B0 LDR V1, [X31 + 0x8]

ISIL:
	001 Move [X0+208], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> get_selectFilters()

Disassembly:
	0x03B532B4 LDR V0, [X31 + 0xC]
	0x03B532B8 MOVZ W9, 0xC

ISIL:
	001 Move X0, [X0+216]
	002 Return X0

Method: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<System.Single> get_largestInteractionStrength()

Disassembly:
	0x03B532BC MADD X8, X21, X9, X8
	0x03B532C0 STR S11, [X8 + 0x28]

ISIL:
	001 Move X0, [X0+224]
	002 Return X0

Method: System.Boolean get_useAttachPointVelocity()

Disassembly:
	0x03B532C4 STP S1, S0, [X8 + 0x20]
	0x03B532C8 STR D12, [X19 + 0x168]

ISIL:
	001 Move W0, [X0+280]
	002 Return X0

Method: System.Void set_useAttachPointVelocity(System.Boolean value)

Disassembly:
	0x03B532CC STR S8, [X19 + 0x170]
	0x03B532D0 STR S15, [X19 + 0x174]
	0x03B532D4 STR S14, [X19 + 0x178]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+280], W8
	003 Return 

Method: UnityEngine.Vector3 GetAttachPointVelocity()

Disassembly:
	0x03B532D8 STR S13, [X19 + 0x17C]
	0x03B532DC B 0x3B533E8
	0x03B532E0 CBZ X20, 0x3B53428
	0x03B532E4 MOV X0, X20
	0x03B532E8 MOV X1, X31
	0x03B532EC BL 0x3C3F58C
	0x03B532F0 CBZ X25, 0x3B53428
	0x03B532F4 LDR W8, [X25 + 0x18]
	0x03B532F8 CMP W24, W8
	0x03B532FC B.CS 0x3B5342C
	0x03B53300 MOVZ W8, 0xC
	0x03B53304 MADD X8, X24, X8, X25
	0x03B53308 STP S0, S1, [X8 + 0x20]
	0x03B5330C STR S2, [X8 + 0x28]
	0x03B53310 LDR X8, [X19 + 0x158]
	0x03B53314 CBZ X8, 0x3B53428
	0x03B53318 LDRSW X22, [X19 + 0x154]
	0x03B5331C LDR W9, [X8 + 0x18]
	0x03B53320 CMP W22, W9
	0x03B53324 B.CS 0x3B5342C
	0x03B53328 MOVZ W9, 0xC
	0x03B5332C MADD X8, X22, X9, X8

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Add X1, X31, 8
	005 Move X19, X0
	006 Move [X31+8], X31
	007 Call XRBaseInteractor.TryGetXROrigin, X0, X1
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {20}
	012 Move X0, [X31+8]
	013 Compare X0, 0
	014 JumpIfEqual {27}
	015 Move V2, [X19+292]
	016 Move V1, [X19+288]
	017 Move V0, [X19+284]
	018 Move X1, X31
	019 Call Transform.TransformDirection, X0, X1
	020 Move V0, [X19+284]
	021 Move V1, [X19+288]
	022 Move V2, [X19+292]
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Add X31, X31, 32
	026 Return X0
	027 Call 0x1C17F20

Method: UnityEngine.Vector3 GetAttachPointAngularVelocity()

Disassembly:
	0x03B53458 BL 0x1C16CF4
	0x03B5345C MOVZ W8, 0x1
	0x03B53460 STRB W8, [X21 + 0x913]
	0x03B53464 STR W31, [X31 + 0xC]
	0x03B53468 LDR X0, [X20 + 0x100]
	0x03B5346C CBZ X0, 0x3B534A8
	0x03B53470 ADRP X8, 0x607000
	0x03B53474 LDR X8, [X8 + 0xD38]
	0x03B53478 ADD X2, X31, 0xC
	0x03B5347C MOV X1, X19
	0x03B53480 LDR X3, [X8]
	0x03B53484 BL 0x2AB64B4
	0x03B53488 LDR V0, [X31 + 0xC]
	0x03B5348C LDP X20, X19, [X31 + 0x20]
	0x03B53490 LDP X30, X21, [X31 + 0x10]
	0x03B53494 ANDS W31, W0, 0x1
	0x03B53498 FMOV S1, W31
	0x03B5349C FCSEL S0, S0, S1, NE
	0x03B534A0 ADD X31, X31, 0x30
	0x03B534A4 RET
	0x03B534A8 BL 0x1C16F20
	0x03B534AC LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Add X1, X31, 8
	005 Move X19, X0
	006 Move [X31+8], X31
	007 Call XRBaseInteractor.TryGetXROrigin, X0, X1
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {20}
	012 Move X0, [X31+8]
	013 Compare X0, 0
	014 JumpIfEqual {27}
	015 Move V2, [X19+304]
	016 Move V1, [X19+300]
	017 Move V0, [X19+296]
	018 Move X1, X31
	019 Call Transform.TransformDirection, X0, X1
	020 Move V0, [X19+296]
	021 Move V1, [X19+300]
	022 Move V2, [X19+304]
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Add X31, X31, 32
	026 Return X0
	027 Call 0x1C17F20

Method: System.Boolean TryGetXROrigin(out UnityEngine.Transform origin)

Disassembly:
	0x03B53330 LDR V0, [X19 + 0x168]
	0x03B53334 LDR V1, [X19 + 0x170]
	0x03B53338 LDR V2, [X8 + 0x20]
	0x03B5333C LDR V3, [X8 + 0x28]
	0x03B53340 LDR X24, [X19 + 0x160]
	0x03B53344 FADD V0.2S, V0.2S, V2.2S
	0x03B53348 FADD S1, S1, S3
	0x03B5334C STR D0, [X19 + 0x168]
	0x03B53350 STR S1, [X19 + 0x170]
	0x03B53354 TBZ X21, 0x0, 0x3B5337C
	0x03B53358 LDR X21, [X31 + 0x48]
	0x03B5335C MOV X0, X20
	0x03B53360 MOV X1, X31
	0x03B53364 BL 0x3C3F988
	0x03B53368 CBZ X21, 0x3B53428
	0x03B5336C MOV X0, X21
	0x03B53370 MOV X1, X31
	0x03B53374 BL 0x3C40A48
	0x03B53378 B 0x3B53388
	0x03B5337C MOV X0, X20
	0x03B53380 MOV X1, X31
	0x03B53384 BL 0x3C3F988
	0x03B53388 CBZ X24, 0x3B53428
	0x03B5338C LDR W8, [X24 + 0x18]
	0x03B53390 CMP W22, W8
	0x03B53394 B.CS 0x3B5342C
	0x03B53398 MOVZ W8, 0xC
	0x03B5339C MADD X8, X22, X8, X24
	0x03B533A0 STP S0, S1, [X8 + 0x20]
	0x03B533A4 STR S2, [X8 + 0x28]
	0x03B533A8 LDR X8, [X19 + 0x160]
	0x03B533AC CBZ X8, 0x3B53428
	0x03B533B0 LDRSW X9, [X19 + 0x154]
	0x03B533B4 LDR W10, [X8 + 0x18]
	0x03B533B8 CMP W9, W10
	0x03B533BC B.CS 0x3B5342C
	0x03B533C0 MOVZ W10, 0xC
	0x03B533C4 MADD X8, X9, X10, X8
	0x03B533C8 LDR V0, [X23 + 0x58]
	0x03B533CC LDR V1, [X19 + 0x17C]
	0x03B533D0 LDR V2, [X8 + 0x20]
	0x03B533D4 LDR V3, [X8 + 0x28]
	0x03B533D8 FADD V0.2S, V0.2S, V2.2S
	0x03B533DC FADD S1, S1, S3
	0x03B533E0 STR D0, [X23 + 0x58]
	0x03B533E4 STR S1, [X19 + 0x17C]
	0x03B533E8 MOV X0, X31
	0x03B533EC BL 0x3C3C764
	0x03B533F0 LDR W8, [X19 + 0x154]
	0x03B533F4 STR S0, [X19 + 0x150]
	0x03B533F8 LDP X22, X21, [X31 + 0xB0]
	0x03B533FC LDP X24, X23, [X31 + 0xA0]
	0x03B53400 ADD W8, W8, 0x1
	0x03B53404 STR W8, [X19 + 0x154]
	0x03B53408 LDP X20, X19, [X31 + 0xC0]
	0x03B5340C LDP X30, X25, [X31 + 0x90]
	0x03B53410 LDP D9, D8, [X31 + 0x80]
	0x03B53414 LDP D11, D10, [X31 + 0x70]
	0x03B53418 LDP D13, D12, [X31 + 0x60]
	0x03B5341C LDP D15, D14, [X31 + 0x50]
	0x03B53420 ADD X31, X31, 0xD0
	0x03B53424 RET
	0x03B53428 BL 0x1C16F20
	0x03B5342C BL 0x1C16F28
	0x03B53430 SUB X31, X31, 0x30
	0x03B53434 STP X30, X21, [X31 + 0x10]
	0x03B53438 STP X20, X19, [X31 + 0x20]
	0x03B5343C ADRP X21, 0x88F000
	0x03B53440 LDRB W8, [X21 + 0x913]
	0x03B53444 MOV X19, X1
	0x03B53448 MOV X20, X0
	0x03B5344C TBNZ X8, 0x0, 0x3B53464
	0x03B53450 ADRP X0, 0x607000
	0x03B53454 LDR X0, [X0 + 0xD38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x890000
	007 Move W8, [X21+2307]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x608000
	015 Move X0, [X0+3328]
	016 Call 0x1C17CF4
	017 Move X0, 0x5A1000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2307], W8
	022 Move W8, [X20+320]
	023 Compare W8, 0
	024 JumpIfEqual {27}
	025 Move X0, [X20+312]
	026 Move W8, 1
	027 Move W8, [X20+321]
	028 Compare W8, 0
	029 JumpIfEqual {32}
	030 Move X0, X31
	031 Move W8, W31
	032 Move X8, 0x608000
	033 Move X8, [X8+3328]
	034 Move X0, X20
	035 Move X1, [X8]
	036 Call 0x21A4F50, X0
	037 Move X22, 0x5A1000
	038 Move X22, [X22+1432]
	039 Move X21, X0
	040 Move X8, [X22]
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {78}
	054 Compare X21, 0
	055 JumpIfEqual {90}
	056 Move X0, [X22]
	057 Move X21, [X21+56]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X21
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {78}
	070 Compare X21, 0
	071 JumpIfEqual {90}
	072 Move X0, X21
	073 Move X1, X31
	074 Call GameObject.get_transform, X0
	075 Move W8, 1
	076 Move [X20+312], X0
	077 Move [X20+320], W8
	078 Move X0, X31
	079 Move W8, W31
	080 Move W9, 1
	081 Move [X20+321], W9
	082 Move [X19], X0
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move W0, W8
	088 Move X30, [X31+48]
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x03B534B0 LDR X3, [X8 + 0x628]

ISIL:
	001 Return 

Method: System.Void Awake()

Disassembly:
	0x03B50248 LDR X0, [X0 + 0x9D0]
	0x03B5024C BL 0x1C16CF4
	0x03B50250 ADRP X0, 0x60A000
	0x03B50254 LDR X0, [X0 + 0xBA0]
	0x03B50258 BL 0x1C16CF4
	0x03B5025C ADRP X0, 0x60A000
	0x03B50260 LDR X0, [X0 + 0xB60]
	0x03B50264 BL 0x1C16CF4
	0x03B50268 ADRP X0, 0x60A000
	0x03B5026C LDR X0, [X0 + 0xBA8]
	0x03B50270 BL 0x1C16CF4
	0x03B50274 ADRP X0, 0x60A000
	0x03B50278 LDR X0, [X0 + 0xBB0]
	0x03B5027C BL 0x1C16CF4
	0x03B50280 ADRP X0, 0x60A000
	0x03B50284 LDR X0, [X0 + 0x9D8]
	0x03B50288 BL 0x1C16CF4
	0x03B5028C ADRP X0, 0x60A000
	0x03B50290 LDR X0, [X0 + 0xBB8]
	0x03B50294 BL 0x1C16CF4
	0x03B50298 MOVZ W8, 0x1
	0x03B5029C STRB W8, [X21 + 0x8ED]
	0x03B502A0 STP X31, X31, [X31 + 0x30]
	0x03B502A4 STR X31, [X31 + 0x40]
	0x03B502A8 STP X31, X31, [X31 + 0x18]
	0x03B502AC STR X31, [X31 + 0x28]
	0x03B502B0 CBZ X19, 0x3B504E8
	0x03B502B4 LDP W2, W8, [X19 + 0x18]
	0x03B502B8 ADD W8, W8, 0x1
	0x03B502BC CMP W2, 0x1
	0x03B502C0 STP W31, W8, [X19 + 0x18]
	0x03B502C4 B.LT 0x3B502D8
	0x03B502C8 LDR X0, [X19 + 0x10]
	0x03B502CC MOV W1, W31
	0x03B502D0 MOV X3, X31
	0x03B502D4 BL 0x339FA34
	0x03B502D8 MOV X0, X20
	0x03B502DC BL 0x3B4B6D0
	0x03B502E0 TBZ X0, 0x0, 0x3B503F8
	0x03B502E4 MOV X0, X20
	0x03B502E8 BL 0x3B505A0
	0x03B502EC CBZ X0, 0x3B504E8
	0x03B502F0 ADRP X8, 0x60A000
	0x03B502F4 LDR X8, [X8 + 0xBB8]
	0x03B502F8 LDR X1, [X8]
	0x03B502FC ADD X8, X31, 0x0
	0x03B50300 BL 0x301CB58
	0x03B50304 LDR V0, [X31]
	0x03B50308 LDR X8, [X31 + 0x10]
	0x03B5030C ADRP X21, 0x60A000
	0x03B50310 ADRP X22, 0x60A000
	0x03B50314 LDR X21, [X21 + 0xB98]
	0x03B50318 LDR X22, [X22 + 0xB60]
	0x03B5031C STR V0, [X31 + 0x3]
	0x03B50320 STR X8, [X31 + 0x40]
	0x03B50324 ADRP X23, 0x60A000
	0x03B50328 LDR X23, [X23 + 0xBA8]
	0x03B5032C LDR X1, [X21]
	0x03B50330 ADD X0, X31, 0x30
	0x03B50334 BL 0x2BC4350
	0x03B50338 TBZ X0, 0x0, 0x3B503A4
	0x03B5033C LDR X0, [X31 + 0x40]
	0x03B50340 LDR X1, [X22]
	0x03B50344 BL 0x1C16E00
	0x03B50348 MOV X1, X0
	0x03B5034C CBZ X1, 0x3B5032C
	0x03B50350 LDR W10, [X19 + 0x1C]
	0x03B50354 LDR X8, [X19 + 0x10]
	0x03B50358 LDR X9, [X23]
	0x03B5035C ADD W10, W10, 0x1
	0x03B50360 STR W10, [X19 + 0x1C]
	0x03B50364 CBZ X8, 0x3B503B4
	0x03B50368 LDRSW X10, [X19 + 0x18]
	0x03B5036C LDR W11, [X8 + 0x18]
	0x03B50370 CMP W10, W11
	0x03B50374 B.CS 0x3B5038C
	0x03B50378 ADD W9, W10, 0x1
	0x03B5037C ADD X8, X8, X10, 0x3, LSL
	0x03B50380 STR W9, [X19 + 0x18]
	0x03B50384 STR X1, [X8 + 0x20]
	0x03B50388 B 0x3B5032C
	0x03B5038C LDR X8, [X9 + 0x20]
	0x03B50390 LDR X8, [X8 + 0xC0]
	0x03B50394 LDR X2, [X8 + 0x70]
	0x03B50398 MOV X0, X19
	0x03B5039C BL 0x301BF90
	0x03B503A0 B 0x3B5032C
	0x03B503A4 ADRP X8, 0x60A000
	0x03B503A8 LDR X8, [X8 + 0xB90]
	0x03B503AC ADD X0, X31, 0x30
	0x03B503B0 B 0x3B504C8
	0x03B503B4 BL 0x1C16F20
	0x03B503B8 B 0x3B503C4
	0x03B503BC B 0x3B503C4
	0x03B503C0 B 0x3B503C4
	0x03B503C4 MOV X21, X0
	0x03B503C8 CMP W1, 0x1
	0x03B503CC B.NE 0x3B504EC
	0x03B503D0 MOV X0, X21
	0x03B503D4 BL 0x3EB1AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x893000
	006 Move X20, 0x5A4000
	007 Move W8, [X21+2308]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x5A4000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x60B000
	018 Move X0, [X0+688]
	019 Call 0x1C17CF4
	020 Move X0, 0x60B000
	021 Move X0, [X0+696]
	022 Call 0x1C17CF4
	023 Move X0, 0x5A4000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x60B000
	027 Move X0, [X0+2872]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2308], W8
	031 Move X0, X19
	032 Call XRBaseInteractor.CreateAttachTransform, X0
	033 Move X0, [X20]
	034 Move X20, [X19+104]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {50}
	047 Move X1, [X19+104]
	048 Move X0, X19
	049 Call XRBaseInteractor.set_targetFilter, X0, X1
	050 Move X0, [X19+200]
	051 Compare X0, 0
	052 JumpIfEqual {117}
	053 Move X8, 0x60B000
	054 Move X8, [X8+688]
	055 Move X1, [X19+192]
	056 Move X2, X19
	057 Move X3, [X8]
	058 Call 0x212FF58, X0, X1, X2
	059 Move X0, [X19+216]
	060 Compare X0, 0
	061 JumpIfEqual {117}
	062 Move X8, 0x60B000
	063 Move X8, [X8+696]
	064 Move X1, [X19+208]
	065 Move X2, X19
	066 Move X3, [X8]
	067 Call 0x212FF58, X0, X1, X2
	068 Move X0, X19
	069 Call XRBaseInteractor.FindCreateInteractionManager, X0
	070 Move X0, [X19+384]
	071 Compare X0, 0
	072 JumpIfEqual {117}
	073 Move X1, X31
	074 Call UnityEventBase.GetPersistentEventCount, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X19+392]
	077 Compare X0, 0
	078 JumpIfEqual {117}
	079 Move X1, X31
	080 Call UnityEventBase.GetPersistentEventCount, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X19+400]
	083 Compare X0, 0
	084 JumpIfEqual {117}
	085 Move X1, X31
	086 Call UnityEventBase.GetPersistentEventCount, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X19+408]
	089 Compare X0, 0
	090 JumpIfEqual {117}
	091 Move X1, X31
	092 Call UnityEventBase.GetPersistentEventCount, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, 0x5A4000
	095 Move X8, [X8+2600]
	096 Move X20, 0x60B000
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Move X20, [X20+2872]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, [X20]
	104 Move X1, X19
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X2, X31
	108 Move X30, [X31+32]
	109 Move X21, [X31+40]
	110 Call Debug.LogWarning, X0, X1
	111 Return 
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move X30, [X31+32]
	115 Move X21, [X31+40]
	116 Return 
	117 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03B53710 STP X22, X21, [X31 + 0x10]
	0x03B53714 STP X20, X19, [X31 + 0x20]
	0x03B53718 ADRP X21, 0x88F000
	0x03B5371C LDRB W8, [X21 + 0x916]
	0x03B53720 MOV X19, X1
	0x03B53724 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call XRBaseInteractor.FindCreateInteractionManager, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call XRBaseInteractor.RegisterWithInteractionManager, X0
	009 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03B53728 TBNZ X8, 0x0, 0x3B53764

ISIL:
No ISIL was generated
Method: System.Void Start()

Disassembly:
	0x03B537B8 BL 0x3227C18
	0x03B537BC ADRP X8, 0x607000
	0x03B537C0 LDR X8, [X8 + 0xD40]
	0x03B537C4 MOV X1, X0
	0x03B537C8 MOV X2, X31
	0x03B537CC LDR X8, [X8]
	0x03B537D0 MOV X0, X8
	0x03B537D4 BL 0x321B938
	0x03B537D8 ADRP X8, 0x5A0000
	0x03B537DC LDR X8, [X8 + 0xA28]
	0x03B537E0 MOV X21, X0
	0x03B537E4 LDR X8, [X8]
	0x03B537E8 LDR W9, [X8 + 0xE0]
	0x03B537EC CBNZ W9, 0x3B537F8
	0x03B537F0 MOV X0, X8
	0x03B537F4 BL 0x1C16DFC
	0x03B537F8 MOV X0, X21
	0x03B537FC MOV X1, X20
	0x03B53800 MOV X2, X31
	0x03B53804 BL 0x3C06B0C
	0x03B53808 LDR X8, [X20 + 0x20]
	0x03B5380C CBZ X8, 0x3B53830
	0x03B53810 LDR X3, [X8 + 0x18]
	0x03B53814 LDR X0, [X8 + 0x40]
	0x03B53818 LDR X2, [X8 + 0x28]
	0x03B5381C MOV X1, X19
	0x03B53820 LDP X20, X19, [X31 + 0x20]
	0x03B53824 LDP X22, X21, [X31 + 0x10]
	0x03B53828 LDR X30, [X31], #0x30
	0x03B5382C BR X3
	0x03B53830 LDP X20, X19, [X31 + 0x20]
	0x03B53834 LDP X22, X21, [X31 + 0x10]
	0x03B53838 LDR X30, [X31], #0x30
	0x03B5383C RET
	0x03B53840 BL 0x1C16F20
	0x03B53844 STR X30, [X31 - 0x30]!
	0x03B53848 STP X22, X21, [X31 + 0x10]
	0x03B5384C STP X20, X19, [X31 + 0x20]
	0x03B53850 ADRP X21, 0x88F000
	0x03B53854 LDRB W8, [X21 + 0x917]
	0x03B53858 MOV X19, X1
	0x03B5385C MOV X20, X0
	0x03B53860 TBNZ X8, 0x0, 0x3B5389C
	0x03B53864 ADRP X0, 0x5A0000
	0x03B53868 LDR X0, [X0 + 0xA28]
	0x03B5386C BL 0x1C16CF4
	0x03B53870 ADRP X0, 0x5A0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x890000
	006 Move X21, 0x5A1000
	007 Move W8, [X20+2309]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5A1000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2309], W8
	019 Move X0, [X21]
	020 Move X20, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {60}
	033 Move X0, [X21]
	034 Move X20, [X19+96]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {60}
	047 Move X0, [X19+48]
	048 Compare X0, 0
	049 JumpIfEqual {65}
	050 Move X8, [X0]
	051 Move X2, [X19+96]
	052 Move X1, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X4, [X8+968]
	056 Move X3, [X8+976]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 CallNoReturn X4
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03B53874 LDR X0, [X0 + 0x598]
	0x03B53878 BL 0x1C16CF4
	0x03B5387C ADRP X0, 0x607000
	0x03B53880 LDR X0, [X0 + 0xD48]
	0x03B53884 BL 0x1C16CF4
	0x03B53888 ADRP X0, 0x607000
	0x03B5388C LDR X0, [X0 + 0x380]
	0x03B53890 BL 0x1C16CF4
	0x03B53894 MOVZ W8, 0x1
	0x03B53898 STRB W8, [X21 + 0x917]
	0x03B5389C CBZ X19, 0x3B53978
	0x03B538A0 ADRP X8, 0x5A0000
	0x03B538A4 LDR X8, [X8 + 0x598]
	0x03B538A8 LDR X21, [X19 + 0x10]
	0x03B538AC LDR X22, [X20 + 0x110]
	0x03B538B0 LDR X0, [X8]
	0x03B538B4 LDR W8, [X0 + 0xE0]
	0x03B538B8 CBNZ W8, 0x3B538C0
	0x03B538BC BL 0x1C16DFC
	0x03B538C0 MOV X0, X21
	0x03B538C4 MOV X1, X22
	0x03B538C8 MOV X2, X31
	0x03B538CC BL 0x3C354F8
	0x03B538D0 TBZ X0, 0x0, 0x3B53940
	0x03B538D4 ADRP X8, 0x607000
	0x03B538D8 LDR X2, [X20 + 0x110]
	0x03B538DC LDR X3, [X19 + 0x10]
	0x03B538E0 LDR X8, [X8 + 0x380]
	0x03B538E4 MOV X1, X20
	0x03B538E8 MOV X4, X31
	0x03B538EC LDR X0, [X8]
	0x03B538F0 BL 0x3227C18
	0x03B538F4 ADRP X8, 0x607000
	0x03B538F8 LDR X8, [X8 + 0xD48]
	0x03B538FC MOV X1, X0
	0x03B53900 MOV X2, X31
	0x03B53904 LDR X8, [X8]
	0x03B53908 MOV X0, X8
	0x03B5390C BL 0x321B938
	0x03B53910 ADRP X8, 0x5A0000
	0x03B53914 LDR X8, [X8 + 0xA28]
	0x03B53918 MOV X21, X0
	0x03B5391C LDR X8, [X8]
	0x03B53920 LDR W9, [X8 + 0xE0]
	0x03B53924 CBNZ W9, 0x3B53930
	0x03B53928 MOV X0, X8
	0x03B5392C BL 0x1C16DFC
	0x03B53930 MOV X0, X21
	0x03B53934 MOV X1, X20
	0x03B53938 MOV X2, X31
	0x03B5393C BL 0x3C06B0C
	0x03B53940 LDR X8, [X20 + 0x28]
	0x03B53944 CBZ X8, 0x3B53968
	0x03B53948 LDR X3, [X8 + 0x18]
	0x03B5394C LDR X0, [X8 + 0x40]
	0x03B53950 LDR X2, [X8 + 0x28]
	0x03B53954 MOV X1, X19
	0x03B53958 LDP X20, X19, [X31 + 0x20]
	0x03B5395C LDP X22, X21, [X31 + 0x10]
	0x03B53960 LDR X30, [X31], #0x30
	0x03B53964 BR X3
	0x03B53968 LDP X20, X19, [X31 + 0x20]
	0x03B5396C LDP X22, X21, [X31 + 0x10]
	0x03B53970 LDR X30, [X31], #0x30
	0x03B53974 RET
	0x03B53978 BL 0x1C16F20
	0x03B5397C STP X30, X21, [X31 - 0x20]!
	0x03B53980 STP X20, X19, [X31 + 0x10]
	0x03B53984 ADRP X21, 0x88F000
	0x03B53988 LDRB W8, [X21 + 0x919]
	0x03B5398C MOV X20, X1
	0x03B53990 MOV X19, X0
	0x03B53994 TBNZ X8, 0x0, 0x3B539AC
	0x03B53998 ADRP X0, 0x607000
	0x03B5399C LDR X0, [X0 + 0x3B0]
	0x03B539A0 BL 0x1C16CF4
	0x03B539A4 MOVZ W8, 0x1
	0x03B539A8 STRB W8, [X21 + 0x919]
	0x03B539AC LDR X0, [X19 + 0x70]
	0x03B539B0 CBZ X0, 0x3B539C8
	0x03B539B4 ADRP X8, 0x607000
	0x03B539B8 LDR X8, [X8 + 0x3B0]
	0x03B539BC MOV X1, X20
	0x03B539C0 LDR X2, [X8]
	0x03B539C4 BL 0x2729DBC
	0x03B539C8 CBZ X20, 0x3B539F8
	0x03B539CC MOV X0, X20
	0x03B539D0 MOV X1, X31
	0x03B539D4 BL 0x3B6B5EC
	0x03B539D8 LDR X8, [X19]
	0x03B539DC MOV X1, X0
	0x03B539E0 MOV X0, X19
	0x03B539E4 LDP X20, X19, [X31 + 0x10]
	0x03B539E8 LDR X3, [X8 + 0x668]
	0x03B539EC LDR X2, [X8 + 0x670]
	0x03B539F0 LDP X30, X21, [X31], #0x20
	0x03B539F4 BR X3
	0x03B539F8 BL 0x1C16F20
	0x03B539FC STP X30, X21, [X31 - 0x20]!
	0x03B53A00 STP X20, X19, [X31 + 0x10]
	0x03B53A04 ADRP X21, 0x88F000
	0x03B53A08 LDRB W8, [X21 + 0x91B]
	0x03B53A0C MOV X20, X1
	0x03B53A10 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x890000
	005 Move W8, [X20+2310]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x608000
	012 Move X0, [X0+2360]
	013 Call 0x1C17CF4
	014 Move X0, 0x608000
	015 Move X0, [X0+3320]
	016 Call 0x1C17CF4
	017 Move X0, 0x5A1000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2310], W8
	022 Move X0, X19
	023 Call XRBaseInteractor.get_targetFilter, X0
	024 Compare X0, 0
	025 JumpIfEqual {52}
	026 Move X10, 0x608000
	027 Move X8, [X0]
	028 Move X10, [X10+3320]
	029 Move X20, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 2
	041 Move X0, X20
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 2
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X2, [X0+8]
	049 Move X0, X20
	050 Move X1, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X20, [X19+56]
	053 Compare X20, 0
	054 JumpIfEqual {97}
	055 Move X9, 0x5A1000
	056 Move X9, [X9+1432]
	057 Move X8, [X20]
	058 Move X0, [X9]
	059 Move W10, [X8+304]
	060 Move W9, [X0+304]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X8+200]
	063 Add X8, X8, X9
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {97}
	078 Move X20, [X19+56]
	079 Compare X20, 0
	080 JumpIfEqual {113}
	081 Move X10, 0x608000
	082 Move X8, [X20]
	083 Move X10, [X10+2360]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move X1, [X10]
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 13
	095 Move X0, X20
	096 Call 0x1C5D788
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X30, [X31+32]
	100 Return 
	101 Move W9, [X10]
	102 Add W9, W9, 13
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X3, [X0]
	106 Move X2, [X0+8]
	107 Move X0, X20
	108 Move X1, X19
	109 Move X20, [X31+16]
	110 Move X19, [X31+24]
	111 Move X30, [X31+32]
	112 CallNoReturn X3
	113 Call 0x1C17F20

Method: UnityEngine.Transform GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B53A14 TBNZ X8, 0x0, 0x3B53A2C
	0x03B53A18 ADRP X0, 0x607000
	0x03B53A1C LDR X0, [X0 + 0x3D8]
	0x03B53A20 BL 0x1C16CF4
	0x03B53A24 MOVZ W8, 0x1
	0x03B53A28 STRB W8, [X21 + 0x91B]
	0x03B53A2C LDR X0, [X19 + 0x78]
	0x03B53A30 CBZ X0, 0x3B53A48
	0x03B53A34 ADRP X8, 0x607000
	0x03B53A38 LDR X8, [X8 + 0x3D8]
	0x03B53A3C MOV X1, X20
	0x03B53A40 LDR X2, [X8]
	0x03B53A44 BL 0x2729DBC
	0x03B53A48 CBZ X20, 0x3B53A78
	0x03B53A4C MOV X0, X20
	0x03B53A50 MOV X1, X31
	0x03B53A54 BL 0x3B6B5EC
	0x03B53A58 LDR X8, [X19]
	0x03B53A5C MOV X1, X0
	0x03B53A60 MOV X0, X19
	0x03B53A64 LDP X20, X19, [X31 + 0x10]
	0x03B53A68 LDR X3, [X8 + 0x688]
	0x03B53A6C LDR X2, [X8 + 0x690]
	0x03B53A70 LDP X30, X21, [X31], #0x20
	0x03B53A74 BR X3
	0x03B53A78 BL 0x1C16F20
	0x03B53A7C STP X30, X21, [X31 - 0x20]!
	0x03B53A80 STP X20, X19, [X31 + 0x10]
	0x03B53A84 ADRP X21, 0x88F000
	0x03B53A88 LDRB W8, [X21 + 0x91D]
	0x03B53A8C MOV X20, X1
	0x03B53A90 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x890000
	006 Move X20, 0x5A1000
	007 Move W8, [X21+2311]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5A1000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2311], W8
	019 Move X0, [X20]
	020 Move X20, [X19+80]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {39}
	033 Move X0, [X19+80]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call Component.get_transform, X0
	046 Return X0

Method: UnityEngine.Pose GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B53A94 TBNZ X8, 0x0, 0x3B53AAC
	0x03B53A98 ADRP X0, 0x607000
	0x03B53A9C LDR X0, [X0 + 0x3E8]
	0x03B53AA0 BL 0x1C16CF4
	0x03B53AA4 MOVZ W8, 0x1
	0x03B53AA8 STRB W8, [X21 + 0x91D]
	0x03B53AAC LDR X0, [X19 + 0x80]
	0x03B53AB0 CBZ X0, 0x3B53AC8
	0x03B53AB4 ADRP X8, 0x607000
	0x03B53AB8 LDR X8, [X8 + 0x3E8]
	0x03B53ABC MOV X1, X20
	0x03B53AC0 LDR X2, [X8]
	0x03B53AC4 BL 0x2729DBC
	0x03B53AC8 CBZ X20, 0x3B53AF8
	0x03B53ACC MOV X0, X20
	0x03B53AD0 MOV X1, X31
	0x03B53AD4 BL 0x3B6B5EC
	0x03B53AD8 LDR X8, [X19]
	0x03B53ADC MOV X1, X0
	0x03B53AE0 MOV X0, X19
	0x03B53AE4 LDP X20, X19, [X31 + 0x10]
	0x03B53AE8 LDR X3, [X8 + 0x6A8]
	0x03B53AEC LDR X2, [X8 + 0x6B0]
	0x03B53AF0 LDP X30, X21, [X31], #0x20
	0x03B53AF4 BR X3
	0x03B53AF8 BL 0x1C16F20
	0x03B53AFC STP X30, X21, [X31 - 0x20]!
	0x03B53B00 STP X20, X19, [X31 + 0x10]
	0x03B53B04 ADRP X21, 0x88F000
	0x03B53B08 LDRB W8, [X21 + 0x91F]
	0x03B53B0C MOV X20, X1
	0x03B53B10 MOV X19, X0
	0x03B53B14 TBNZ X8, 0x0, 0x3B53B44
	0x03B53B18 ADRP X0, 0x607000
	0x03B53B1C LDR X0, [X0 + 0xD50]
	0x03B53B20 BL 0x1C16CF4
	0x03B53B24 ADRP X0, 0x607000
	0x03B53B28 LDR X0, [X0 + 0xA60]
	0x03B53B2C BL 0x1C16CF4
	0x03B53B30 ADRP X0, 0x607000
	0x03B53B34 LDR X0, [X0 + 0x400]
	0x03B53B38 BL 0x1C16CF4
	0x03B53B3C MOVZ W8, 0x1
	0x03B53B40 STRB W8, [X21 + 0x91F]
	0x03B53B44 LDR X0, [X19 + 0x88]
	0x03B53B48 CBZ X0, 0x3B53B60
	0x03B53B4C ADRP X8, 0x607000
	0x03B53B50 LDR X8, [X8 + 0x400]
	0x03B53B54 MOV X1, X20
	0x03B53B58 LDR X2, [X8]
	0x03B53B5C BL 0x2729DBC
	0x03B53B60 CBZ X20, 0x3B53BE4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x890000
	008 Move W9, [X22+2312]
	009 Move X20, X1
	010 Move X21, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x608000
	017 Move X0, [X0+3344]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C9000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2312], W8
	024 Move [X31+32], X31
	025 Move [X31+40], X31
	026 Move [X31+56], W31
	027 Move [X31+48], X31
	028 Move X0, [X21+232]
	029 Compare X0, 0
	030 JumpIfEqual {64}
	031 Move X8, 0x608000
	032 Move X8, [X8+3344]
	033 Add X2, X31, 32
	034 Move X1, X20
	035 Move X3, [X8]
	036 Call Dictionary`2<Object, Pose>.TryGetValue, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {43}
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move V1, [X31+2]
	043 Move X8, 0x5C9000
	044 Move X8, [X8+1552]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 0
	051 Move X0, X31
	052 Call Pose.get_identity
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move V1, [X31]
	055 Move [X19+12], V0
	056 Move [X19], V1
	057 Move X20, [X31+96]
	058 Move X19, [X31+104]
	059 Move X22, [X31+80]
	060 Move X21, [X31+88]
	061 Move X30, [X31+64]
	062 Add X31, X31, 112
	063 Return X0
	064 Call 0x1C17F20

Method: UnityEngine.Pose GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B53B64 MOV X0, X20
	0x03B53B68 MOV X1, X31
	0x03B53B6C BL 0x3B6B5EC
	0x03B53B70 LDR X8, [X19]
	0x03B53B74 MOV X1, X0
	0x03B53B78 MOV X0, X19
	0x03B53B7C LDR X9, [X8 + 0x6C8]
	0x03B53B80 LDR X2, [X8 + 0x6D0]
	0x03B53B84 BLR X9
	0x03B53B88 LDR X0, [X19 + 0xA8]
	0x03B53B8C CBZ X0, 0x3B53BE4
	0x03B53B90 ADRP X8, 0x607000
	0x03B53B94 LDR X8, [X8 + 0xA60]
	0x03B53B98 LDR X1, [X8]
	0x03B53B9C BL 0x2D57B54
	0x03B53BA0 CBZ W0, 0x3B53BB0
	0x03B53BA4 LDP X20, X19, [X31 + 0x10]
	0x03B53BA8 LDP X30, X21, [X31], #0x20
	0x03B53BAC RET
	0x03B53BB0 LDR X0, [X19 + 0xE8]
	0x03B53BB4 STR X31, [X19 + 0xB0]
	0x03B53BB8 CBZ X0, 0x3B53BE4
	0x03B53BBC ADRP X20, 0x607000
	0x03B53BC0 LDR X20, [X20 + 0xD50]
	0x03B53BC4 LDR X1, [X20]
	0x03B53BC8 BL 0x2AA8440
	0x03B53BCC LDR X0, [X19 + 0xF0]
	0x03B53BD0 CBZ X0, 0x3B53BE4
	0x03B53BD4 LDR X1, [X20]
	0x03B53BD8 LDP X20, X19, [X31 + 0x10]
	0x03B53BDC LDP X30, X21, [X31], #0x20
	0x03B53BE0 B 0x2AA8440
	0x03B53BE4 BL 0x1C16F20
	0x03B53BE8 STP D9, D8, [X31 - 0x60]!
	0x03B53BEC STR X30, [X31 + 0x10]
	0x03B53BF0 STP X26, X25, [X31 + 0x20]
	0x03B53BF4 STP X24, X23, [X31 + 0x30]
	0x03B53BF8 STP X22, X21, [X31 + 0x40]
	0x03B53BFC STP X20, X19, [X31 + 0x50]
	0x03B53C00 ADRP X21, 0x88F000
	0x03B53C04 ADRP X20, 0x607000
	0x03B53C08 LDRB W8, [X21 + 0x920]
	0x03B53C0C LDR X20, [X20 + 0x368]
	0x03B53C10 MOV X19, X0
	0x03B53C14 TBNZ X8, 0x0, 0x3B53CA4
	0x03B53C18 ADRP X0, 0x607000
	0x03B53C1C LDR X0, [X0 + 0x440]
	0x03B53C20 BL 0x1C16CF4
	0x03B53C24 ADRP X0, 0x607000
	0x03B53C28 LDR X0, [X0 + 0xD58]
	0x03B53C2C BL 0x1C16CF4
	0x03B53C30 ADRP X0, 0x607000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x890000
	008 Move W9, [X22+2313]
	009 Move X20, X1
	010 Move X21, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x608000
	017 Move X0, [X0+3344]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C9000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2313], W8
	024 Move [X31+32], X31
	025 Move [X31+40], X31
	026 Move [X31+56], W31
	027 Move [X31+48], X31
	028 Move X0, [X21+240]
	029 Compare X0, 0
	030 JumpIfEqual {64}
	031 Move X8, 0x608000
	032 Move X8, [X8+3344]
	033 Add X2, X31, 32
	034 Move X1, X20
	035 Move X3, [X8]
	036 Call Dictionary`2<Object, Pose>.TryGetValue, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {43}
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move V1, [X31+2]
	043 Move X8, 0x5C9000
	044 Move X8, [X8+1552]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 0
	051 Move X0, X31
	052 Call Pose.get_identity
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move V1, [X31]
	055 Move [X19+12], V0
	056 Move [X19], V1
	057 Move X20, [X31+96]
	058 Move X19, [X31+104]
	059 Move X22, [X31+80]
	060 Move X21, [X31+88]
	061 Move X30, [X31+64]
	062 Add X31, X31, 112
	063 Return X0
	064 Call 0x1C17F20

Method: System.Void GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets)

Disassembly:
	0x03B53C34 LDR X0, [X0 + 0xD60]

ISIL:
	001 Return 

Method: System.Void FindCreateInteractionManager()

Disassembly:
	0x03B53688 MOV X3, X31
	0x03B5368C LDP X30, X21, [X31], #0x20
	0x03B53690 B 0x3B8DFE8
	0x03B53694 LDP X20, X19, [X31 + 0x10]
	0x03B53698 MOV W0, W31
	0x03B5369C LDP X30, X21, [X31], #0x20
	0x03B536A0 RET
	0x03B536A4 LDR X8, [X20]
	0x03B536A8 LDR X9, [X8 + 0x6F8]
	0x03B536AC LDR X2, [X8 + 0x700]
	0x03B536B0 B 0x3B53668
	0x03B536B4 MOV X8, X0
	0x03B536B8 LDR X0, [X0 + 0xD8]
	0x03B536BC MOV X2, X1
	0x03B536C0 MOV X1, X8
	0x03B536C4 MOV X3, X31
	0x03B536C8 B 0x3B8DFE8
	0x03B536CC LDR X8, [X0]
	0x03B536D0 LDR X3, [X8 + 0x5E8]
	0x03B536D4 LDR X2, [X8 + 0x5F0]
	0x03B536D8 BR X3
	0x03B536DC LDR X8, [X0]
	0x03B536E0 LDR X3, [X8 + 0x5F8]
	0x03B536E4 LDR X2, [X8 + 0x600]
	0x03B536E8 BR X3
	0x03B536EC LDR X8, [X0]
	0x03B536F0 LDR X3, [X8 + 0x608]
	0x03B536F4 LDR X2, [X8 + 0x610]
	0x03B536F8 BR X3
	0x03B536FC LDR X8, [X0]
	0x03B53700 LDR X3, [X8 + 0x618]
	0x03B53704 LDR X2, [X8 + 0x620]
	0x03B53708 BR X3
	0x03B5370C STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x890000
	006 Move X20, 0x5A1000
	007 Move W8, [X21+2314]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x608000
	015 Move X0, [X0+744]
	016 Call 0x1C17CF4
	017 Move X0, 0x5A1000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2314], W8
	022 Move X0, [X20]
	023 Move X20, [X19+48]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X8, 0x608000
	037 Move X8, [X8+744]
	038 Move X0, [X8]
	039 Call 0x29606C8
	040 Move [X19+48], X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 

Method: System.Void RegisterWithInteractionManager()

Disassembly:
	0x03B52E98 MOV V4.16B, V5.16B
	0x03B52E9C MOV V5.16B, V6.16B
	0x03B52EA0 MOV V6.16B, V7.16B
	0x03B52EA4 MOV X1, X31
	0x03B52EA8 STP X31, X31, [X31 + 0x20]
	0x03B52EAC STR W31, [X31 + 0x38]
	0x03B52EB0 STR X31, [X31 + 0x30]
	0x03B52EB4 BL 0x3C3DB6C
	0x03B52EB8 CBZ X22, 0x3B52FE0
	0x03B52EBC ADRP X23, 0x608000
	0x03B52EC0 LDR X23, [X23 + 0xD30]
	0x03B52EC4 LDR V0, [X31 + 0x2]
	0x03B52EC8 LDUR V1, [X31 + 0x2C]
	0x03B52ECC ADD X2, X31, 0x40
	0x03B52ED0 LDR X3, [X23]
	0x03B52ED4 MOV X0, X22
	0x03B52ED8 MOV X1, X19
	0x03B52EDC STR V0, [X31 + 0x4]
	0x03B52EE0 STUR V1, [X31 + 0x4C]
	0x03B52EE4 BL 0x2AA815C
	0x03B52EE8 LDR X20, [X20 + 0xF0]
	0x03B52EEC MOV X0, X21
	0x03B52EF0 MOV X1, X31
	0x03B52EF4 BL 0x3C3EB78
	0x03B52EF8 MOV X0, X21
	0x03B52EFC MOV X1, X31
	0x03B52F00 MOV V8.16B, V0.16B
	0x03B52F04 MOV V9.16B, V1.16B
	0x03B52F08 MOV V10.16B, V2.16B
	0x03B52F0C BL 0x3C3F830
	0x03B52F10 MOV V4.16B, V0.16B
	0x03B52F14 MOV V5.16B, V1.16B
	0x03B52F18 MOV V6.16B, V2.16B
	0x03B52F1C MOV V7.16B, V3.16B
	0x03B52F20 ADD X0, X31, 0x0
	0x03B52F24 MOV V0.16B, V8.16B
	0x03B52F28 MOV V1.16B, V9.16B
	0x03B52F2C MOV V2.16B, V10.16B
	0x03B52F30 MOV V3.16B, V4.16B
	0x03B52F34 MOV V4.16B, V5.16B
	0x03B52F38 MOV V5.16B, V6.16B
	0x03B52F3C MOV V6.16B, V7.16B
	0x03B52F40 MOV X1, X31
	0x03B52F44 STP X31, X31, [X31]
	0x03B52F48 STR W31, [X31 + 0x18]
	0x03B52F4C STR X31, [X31 + 0x10]
	0x03B52F50 BL 0x3C3DB6C
	0x03B52F54 CBZ X20, 0x3B52FE0
	0x03B52F58 LDR V0, [X31]
	0x03B52F5C LDUR V1, [X31 + 0xC]
	0x03B52F60 LDR X3, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x891000
	007 Move X22, 0x5A2000
	008 Move W8, [X20+2315]
	009 Move X22, [X22+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5A2000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2315], W8
	020 Move X0, [X22]
	021 Move X20, [X19+272]
	022 Move X21, [X19+48]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X21
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, X19
	036 Call XRBaseInteractor.UnregisterWithInteractionManager, X0
	037 Move X0, [X22]
	038 Move X20, [X19+48]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {61}
	051 Move X0, [X19+48]
	052 Compare X0, 0
	053 JumpIfEqual {67}
	054 Move X8, [X0]
	055 Move X1, X19
	056 Move X9, [X8+1224]
	057 Move X2, [X8+1232]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X19+48]
	060 Move [X19+272], X8
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void UnregisterWithInteractionManager()

Disassembly:
	0x03B5372C ADRP X0, 0x5A0000
	0x03B53730 LDR X0, [X0 + 0xA28]
	0x03B53734 BL 0x1C16CF4
	0x03B53738 ADRP X0, 0x5A0000
	0x03B5373C LDR X0, [X0 + 0x598]
	0x03B53740 BL 0x1C16CF4
	0x03B53744 ADRP X0, 0x607000
	0x03B53748 LDR X0, [X0 + 0xD40]
	0x03B5374C BL 0x1C16CF4
	0x03B53750 ADRP X0, 0x607000
	0x03B53754 LDR X0, [X0 + 0x378]
	0x03B53758 BL 0x1C16CF4
	0x03B5375C MOVZ W8, 0x1
	0x03B53760 STRB W8, [X21 + 0x916]
	0x03B53764 CBZ X19, 0x3B53840
	0x03B53768 ADRP X8, 0x5A0000
	0x03B5376C LDR X8, [X8 + 0x598]
	0x03B53770 LDR X21, [X19 + 0x10]
	0x03B53774 LDR X22, [X20 + 0x30]
	0x03B53778 LDR X0, [X8]
	0x03B5377C LDR W8, [X0 + 0xE0]
	0x03B53780 CBNZ W8, 0x3B53788
	0x03B53784 BL 0x1C16DFC
	0x03B53788 MOV X0, X21
	0x03B5378C MOV X1, X22
	0x03B53790 MOV X2, X31
	0x03B53794 BL 0x3C354F8
	0x03B53798 TBZ X0, 0x0, 0x3B53808
	0x03B5379C ADRP X8, 0x607000
	0x03B537A0 LDR X2, [X20 + 0x30]
	0x03B537A4 LDR X3, [X19 + 0x10]
	0x03B537A8 LDR X8, [X8 + 0x378]
	0x03B537AC MOV X1, X20
	0x03B537B0 MOV X4, X31
	0x03B537B4 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x890000
	006 Move X20, 0x5A1000
	007 Move W8, [X21+2316]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5A1000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2316], W8
	019 Move X0, [X20]
	020 Move X20, [X19+272]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {42}
	033 Move X0, [X19+272]
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move X8, [X0]
	037 Move X1, X19
	038 Move X9, [X8+1240]
	039 Move X2, [X8+1248]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move [X19+272], X31
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 
	047 Call 0x1C17F20

Method: System.Boolean get_isHoverActive()

Disassembly:
	0x03B53C38 BL 0x1C16CF4
	0x03B53C3C ADRP X0, 0x607000

ISIL:
	001 Move W0, [X0+152]
	002 Return X0

Method: System.Boolean get_isSelectActive()

Disassembly:
	0x03B53C40 LDR X0, [X0 + 0xBF0]
	0x03B53C44 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+153]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode get_targetPriorityMode()

Disassembly:
	0x03B53C48 ADRP X0, 0x607000
	0x03B53C4C LDR X0, [X0 + 0xA30]

ISIL:
	001 Move W0, [X0+324]
	002 Return X0

Method: System.Void set_targetPriorityMode(UnityEngine.XR.Interaction.Toolkit.TargetPriorityMode value)

Disassembly:
	0x03B53C50 BL 0x1C16CF4
	0x03B53C54 ADRP X0, 0x607000

ISIL:
	001 Move [X0+324], W1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> get_targetsForSelection()

Disassembly:
	0x03B53C58 LDR X0, [X0 + 0xA60]
	0x03B53C5C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+328]
	002 Return X0

Method: System.Void set_targetsForSelection(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable> value)

Disassembly:
	0x03B53C60 ADRP X0, 0x607000
	0x03B53C64 LDR X0, [X0 + 0xD68]

ISIL:
	001 Move [X0+328], X1
	002 Return 

Method: System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B53C68 BL 0x1C16CF4
	0x03B53C6C ADRP X0, 0x607000

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B53C70 LDR X0, [X0 + 0xD70]
	0x03B53C74 BL 0x1C16CF4

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B53C78 ADRP X0, 0x607000
	0x03B53C7C LDR X0, [X0 + 0xD78]
	0x03B53C80 BL 0x1C16CF4
	0x03B53C84 ADRP X0, 0x607000
	0x03B53C88 LDR X0, [X0 + 0xBD8]
	0x03B53C8C BL 0x1C16CF4
	0x03B53C90 ADRP X0, 0x607000
	0x03B53C94 LDR X0, [X0 + 0x368]
	0x03B53C98 BL 0x1C16CF4
	0x03B53C9C MOVZ W8, 0x1
	0x03B53CA0 STRB W8, [X21 + 0x920]
	0x03B53CA4 LDR X0, [X20]
	0x03B53CA8 LDR W8, [X0 + 0xE0]
	0x03B53CAC CBNZ W8, 0x3B53CB8
	0x03B53CB0 BL 0x1C16DFC
	0x03B53CB4 LDR X0, [X20]
	0x03B53CB8 LDR X8, [X0 + 0xB8]
	0x03B53CBC MOV X1, X31
	0x03B53CC0 MOV X2, X31
	0x03B53CC4 LDR X20, [X8]
	0x03B53CC8 MOV X0, X20
	0x03B53CCC BL 0x33C5D2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x890000
	006 Move W8, [X21+2317]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x608000
	014 Move X0, [X0+3352]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2317], W8
	018 Move X0, [X20+160]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x608000
	022 Move X8, [X8+3352]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x2D59148, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B53CD0 TBZ X0, 0x0, 0x3B53CE0
	0x03B53CD4 MOV X0, X20
	0x03B53CD8 MOV X1, X31
	0x03B53CDC BL 0x3BFE970
	0x03B53CE0 LDR X0, [X19 + 0x100]
	0x03B53CE4 CBZ X0, 0x3B53FB4
	0x03B53CE8 ADRP X8, 0x607000
	0x03B53CEC LDR X8, [X8 + 0xD58]
	0x03B53CF0 LDR X1, [X8]
	0x03B53CF4 BL 0x2AB4C18
	0x03B53CF8 LDR X0, [X19 + 0xA8]
	0x03B53CFC CBZ X0, 0x3B53FC0
	0x03B53D00 ADRP X8, 0x607000
	0x03B53D04 LDR X8, [X8 + 0xA60]
	0x03B53D08 LDR X1, [X8]
	0x03B53D0C BL 0x2D57B54
	0x03B53D10 ADRP X24, 0x607000
	0x03B53D14 ADRP X25, 0x607000
	0x03B53D18 LDR X24, [X24 + 0xBD8]
	0x03B53D1C LDR X25, [X25 + 0xD60]
	0x03B53D20 MOV W21, W0
	0x03B53D24 CMP W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x890000
	006 Move W8, [X21+2318]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x608000
	014 Move X0, [X0+3360]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2318], W8
	018 Move X0, [X20+168]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x608000
	022 Move X8, [X8+3360]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x2D59148, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B53D28 B.LT 0x3B53D98
	0x03B53D2C ADRP X26, 0x607000
	0x03B53D30 LDR X26, [X26 + 0xD70]
	0x03B53D34 MOV W22, W31
	0x03B53D38 FMOV S9, W31
	0x03B53D3C LDR X0, [X19 + 0xA8]
	0x03B53D40 CBZ X0, 0x3B53F98
	0x03B53D44 LDR X2, [X26]
	0x03B53D48 MOV W1, W22
	0x03B53D4C BL 0x2D57B78
	0x03B53D50 LDR X1, [X24]
	0x03B53D54 MOV X23, X0
	0x03B53D58 BL 0x1C16E00
	0x03B53D5C CBZ X0, 0x3B53D68
	0x03B53D60 MOV V8.16B, V9.16B
	0x03B53D64 B 0x3B53D84
	0x03B53D68 LDR X0, [X19 + 0x100]
	0x03B53D6C CBZ X0, 0x3B53FAC
	0x03B53D70 LDR X2, [X25]
	0x03B53D74 FMOV S8, 1
	0x03B53D78 FMOV S0, 1
	0x03B53D7C MOV X1, X23
	0x03B53D80 BL 0x2AB4A74
	0x03B53D84 ADD W22, W22, 0x1
	0x03B53D88 CMP W21, W22
	0x03B53D8C MOV V9.16B, V8.16B
	0x03B53D90 B.NE 0x3B53D3C
	0x03B53D94 B 0x3B53D9C
	0x03B53D98 FMOV S8, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x890000
	007 Move X22, 0x608000
	008 Move W8, [X21+2319]
	009 Move X22, [X22+328]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x608000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2319], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call 0x1C17E00
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 Move X1, X0
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call XRBaseInteractor.IsHovering, X0, X1
	034 Return X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Boolean IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B5203C BL 0x1C16CF4
	0x03B52040 MOVZ W8, 0x1
	0x03B52044 STRB W8, [X20 + 0x8FD]
	0x03B52048 LDR X20, [X19 + 0x90]
	0x03B5204C CBZ X20, 0x3B520AC
	0x03B52050 ADRP X9, 0x5A1000
	0x03B52054 LDR X9, [X9 + 0x598]
	0x03B52058 LDR X8, [X20]
	0x03B5205C LDR X0, [X9]
	0x03B52060 LDRB W10, [X8 + 0x130]
	0x03B52064 LDRB W9, [X0 + 0x130]
	0x03B52068 CMP W10, W9
	0x03B5206C B.CC 0x3B520AC
	0x03B52070 LDR X8, [X8 + 0xC8]
	0x03B52074 ADD X8, X8, X9, 0x3, LSL
	0x03B52078 LDUR X8, [X8 - 0x8]
	0x03B5207C CMP X8, X0
	0x03B52080 B.NE 0x3B520AC
	0x03B52084 LDR W8, [X0 + 0xE0]
	0x03B52088 CBNZ W8, 0x3B52090
	0x03B5208C BL 0x1C16DFC
	0x03B52090 MOV X0, X20
	0x03B52094 MOV X1, X31
	0x03B52098 MOV X2, X31
	0x03B5209C BL 0x3C3883C
	0x03B520A0 MOV X20, X31
	0x03B520A4 TBNZ X0, 0x0, 0x3B520AC
	0x03B520A8 LDR X20, [X19 + 0x90]
	0x03B520AC MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x891000
	007 Move X22, 0x609000
	008 Move W8, [X21+2320]
	009 Move X22, [X22+352]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x609000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2320], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call 0x1C17E00
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 Move X1, X0
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call XRBaseInteractor.IsSelecting, X0, X1
	034 Return X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Nullable`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType> get_selectedInteractableMovementTypeOverride()

Disassembly:
	0x03B53D9C LDR X0, [X19 + 0xA0]
	0x03B53DA0 CBZ X0, 0x3B53FC4

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Void CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B53DA4 ADRP X8, 0x607000
	0x03B53DA8 LDR X8, [X8 + 0xA30]
	0x03B53DAC LDR X1, [X8]
	0x03B53DB0 BL 0x2D57B54
	0x03B53DB4 MOV W21, W0
	0x03B53DB8 CMP W0, 0x1
	0x03B53DBC B.LT 0x3B53E24
	0x03B53DC0 ADRP X26, 0x607000
	0x03B53DC4 LDR X26, [X26 + 0xD68]
	0x03B53DC8 MOV W22, W31
	0x03B53DCC LDR X0, [X19 + 0xA0]
	0x03B53DD0 CBZ X0, 0x3B53F9C
	0x03B53DD4 LDR X2, [X26]
	0x03B53DD8 MOV W1, W22
	0x03B53DDC BL 0x2D57B78
	0x03B53DE0 LDR X1, [X24]
	0x03B53DE4 MOV X23, X0
	0x03B53DE8 BL 0x1C16E00
	0x03B53DEC CBNZ X0, 0x3B53E18
	0x03B53DF0 MOV X0, X19
	0x03B53DF4 MOV X1, X23
	0x03B53DF8 BL 0x3B5103C
	0x03B53DFC TBNZ X0, 0x0, 0x3B53E18
	0x03B53E00 LDR X0, [X19 + 0x100]
	0x03B53E04 CBZ X0, 0x3B53FB0
	0x03B53E08 LDR X2, [X25]
	0x03B53E0C FMOV S0, W31
	0x03B53E10 MOV X1, X23
	0x03B53E14 BL 0x2AB4A74
	0x03B53E18 ADD W22, W22, 0x1
	0x03B53E1C CMP W21, W22
	0x03B53E20 B.NE 0x3B53DCC
	0x03B53E24 LDR X0, [X19 + 0xF8]
	0x03B53E28 CBZ X0, 0x3B53FC8
	0x03B53E2C ADRP X8, 0x607000
	0x03B53E30 LDR X8, [X8 + 0xBF0]
	0x03B53E34 LDR X1, [X8]
	0x03B53E38 BL 0x2D57B54
	0x03B53E3C MOV W21, W0
	0x03B53E40 CMP W0, 0x1
	0x03B53E44 B.LT 0x3B53F10
	0x03B53E48 ADRP X26, 0x607000
	0x03B53E4C LDR X26, [X26 + 0xD78]
	0x03B53E50 MOV W22, W31
	0x03B53E54 MOV V9.16B, V8.16B
	0x03B53E58 LDR X0, [X19 + 0xF8]
	0x03B53E5C CBZ X0, 0x3B53FA4
	0x03B53E60 LDR X2, [X26]
	0x03B53E64 MOV W1, W22
	0x03B53E68 BL 0x2D57B78
	0x03B53E6C MOV X23, X0
	0x03B53E70 CBZ X0, 0x3B53FA8
	0x03B53E74 LDR X8, [X23]
	0x03B53E78 LDR X1, [X24]
	0x03B53E7C LDRH W9, [X8 + 0x12E]
	0x03B53E80 CBZ X9, 0x3B53EA4
	0x03B53E84 LDR X10, [X8 + 0xB0]
	0x03B53E88 ADD X10, X10, 0x8
	0x03B53E8C LDUR X11, [X10 - 0x8]
	0x03B53E90 CMP X11, X1
	0x03B53E94 B.EQ 0x3B53EB4
	0x03B53E98 SUBS X9, X9, 0x1
	0x03B53E9C ADD X10, X10, 0x10
	0x03B53EA0 B.NE 0x3B53E8C
	0x03B53EA4 MOVZ W2, 0x1
	0x03B53EA8 MOV X0, X23
	0x03B53EAC BL 0x1C5C788
	0x03B53EB0 B 0x3B53EC4
	0x03B53EB4 LDR W9, [X10]
	0x03B53EB8 ADD W9, W9, 0x1
	0x03B53EBC ADD X8, X8, W9, 0x4, SXTW
	0x03B53EC0 ADD X0, X8, 0x138
	0x03B53EC4 LDP X8, X2, [X0]
	0x03B53EC8 MOV X0, X23
	0x03B53ECC MOV X1, X19
	0x03B53ED0 BLR X8
	0x03B53ED4 LDR X0, [X19 + 0x100]
	0x03B53ED8 CBZ X0, 0x3B53FA0
	0x03B53EDC LDR X2, [X25]
	0x03B53EE0 MOV V8.16B, V0.16B
	0x03B53EE4 MOV X1, X23
	0x03B53EE8 BL 0x2AB4A74
	0x03B53EEC FCMP S9, S8
	0x03B53EF0 ADD W22, W22, 0x1
	0x03B53EF4 FCSEL S9, S9, S8, GT
	0x03B53EF8 CMP W22, W21
	0x03B53EFC B.NE 0x3B53E58
	0x03B53F00 MOV X21, X31
	0x03B53F04 MOVZ W22, 0xA
	0x03B53F08 MOV V8.16B, V9.16B
	0x03B53F0C B 0x3B53F18
	0x03B53F10 MOV X21, X31
	0x03B53F14 MOVZ W22, 0xA
	0x03B53F18 MOV X0, X20
	0x03B53F1C MOV X1, X31
	0x03B53F20 MOV X2, X31
	0x03B53F24 BL 0x33C5D2C
	0x03B53F28 TBZ X0, 0x0, 0x3B53F38
	0x03B53F2C MOV X0, X20
	0x03B53F30 MOV X1, X31
	0x03B53F34 BL 0x3BFEA0C
	0x03B53F38 CBNZ X21, 0x3B53FB8
	0x03B53F3C CMP W22, 0xA
	0x03B53F40 B.EQ 0x3B53F48
	0x03B53F44 CBNZ W22, 0x3B53F7C
	0x03B53F48 LDR X0, [X19 + 0xE0]
	0x03B53F4C CBZ X0, 0x3B53FCC
	0x03B53F50 ADRP X8, 0x607000
	0x03B53F54 LDR X8, [X8 + 0x440]
	0x03B53F58 LDP X20, X19, [X31 + 0x50]
	0x03B53F5C LDP X22, X21, [X31 + 0x40]
	0x03B53F60 LDP X24, X23, [X31 + 0x30]
	0x03B53F64 LDR X1, [X8]
	0x03B53F68 LDP X26, X25, [X31 + 0x20]
	0x03B53F6C LDR X30, [X31 + 0x10]
	0x03B53F70 MOV V0.16B, V8.16B
	0x03B53F74 LDP D9, D8, [X31], #0x60
	0x03B53F78 B 0x28CEFC0
	0x03B53F7C LDP X20, X19, [X31 + 0x50]
	0x03B53F80 LDP X22, X21, [X31 + 0x40]
	0x03B53F84 LDP X24, X23, [X31 + 0x30]
	0x03B53F88 LDP X26, X25, [X31 + 0x20]
	0x03B53F8C LDR X30, [X31 + 0x10]
	0x03B53F90 LDP D9, D8, [X31], #0x60
	0x03B53F94 RET
	0x03B53F98 BL 0x1C16F20
	0x03B53F9C BL 0x1C16F20
	0x03B53FA0 BL 0x1C16F20
	0x03B53FA4 BL 0x1C16F20
	0x03B53FA8 BL 0x1C16F20
	0x03B53FAC BL 0x1C16F20
	0x03B53FB0 BL 0x1C16F20
	0x03B53FB4 BL 0x1C16F20
	0x03B53FB8 MOV X0, X21
	0x03B53FBC BL 0x1C16F18
	0x03B53FC0 BL 0x1C16F20
	0x03B53FC4 BL 0x1C16F20
	0x03B53FC8 BL 0x1C16F20
	0x03B53FCC BL 0x1C16F20
	0x03B53FD0 B 0x3B54020
	0x03B53FD4 B 0x3B54020
	0x03B53FD8 B 0x3B54020
	0x03B53FDC B 0x3B54020
	0x03B53FE0 B 0x3B53FE8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D10
	003 Move [X31+112], D9
	004 Move [X31+120], D8
	005 Move [X31+128], X30
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X22, 0x890000
	012 Move X21, 0x5A1000
	013 Move W8, [X22+2321]
	014 Move X21, [X21+1432]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x608000
	022 Move X0, [X0+3368]
	023 Call 0x1C17CF4
	024 Move X0, 0x608000
	025 Move X0, [X0+3376]
	026 Call 0x1C17CF4
	027 Move X0, 0x5A1000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2321], W8
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X1, X19
	035 Move X9, [X8+1208]
	036 Move X2, [X8+1216]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X21]
	039 Move X21, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move X22, [X20+232]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {146}
	054 Compare X21, 0
	055 JumpIfEqual {171}
	056 Move X0, X21
	057 Move X1, X31
	058 Call Transform.get_position, X0
	059 Move X0, X21
	060 Move X1, X31
	061 Move V8, V0
	062 Move V9, V1
	063 Move V10, V2
	064 Call Transform.get_rotation, X0
	065 Move V4, V0
	066 Move V5, V1
	067 Move V6, V2
	068 Move V7, V3
	069 Add X0, X31, 32
	070 Move V0, V8
	071 Move V1, V9
	072 Move V2, V10
	073 Move V3, V4
	074 Move V4, V5
	075 Move V5, V6
	076 Move V6, V7
	077 Move X1, X31
	078 Move [X31+32], X31
	079 Move [X31+40], X31
	080 Move [X31+56], W31
	081 Move [X31+48], X31
	082 Call Pose..ctor, X0, X1, X2
	083 Compare X22, 0
	084 JumpIfEqual {171}
	085 Move X23, 0x608000
	086 Move X23, [X23+3376]
	087 Move V0, [X31+2]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Add X2, X31, 64
	090 Move X3, [X23]
	091 Move X0, X22
	092 Move X1, X19
	093 Move [X31+4], V0
	094 Move [X31+76], V1
	095 Call Dictionary`2<Object, Pose>.set_Item, X0, X1, X2
	096 Move X20, [X20+240]
	097 Move X0, X21
	098 Move X1, X31
	099 Call Transform.get_localPosition, X0
	100 Move X0, X21
	101 Move X1, X31
	102 Move V8, V0
	103 Move V9, V1
	104 Move V10, V2
	105 Call Transform.get_localRotation, X0
	106 Move V4, V0
	107 Move V5, V1
	108 Move V6, V2
	109 Move V7, V3
	110 Add X0, X31, 0
	111 Move V0, V8
	112 Move V1, V9
	113 Move V2, V10
	114 Move V3, V4
	115 Move V4, V5
	116 Move V5, V6
	117 Move V6, V7
	118 Move X1, X31
	119 Move [X31], X31
	120 Move [X31+8], X31
	121 Move [X31+24], W31
	122 Move [X31+16], X31
	123 Call Pose..ctor, X0, X1, X2
	124 Compare X20, 0
	125 JumpIfEqual {171}
	126 Move V0, [X31]
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 Move X3, [X23]
	129 Add X2, X31, 64
	130 Move X0, X20
	131 Move X1, X19
	132 Move [X31+4], V0
	133 Move [X31+76], V1
	134 Call Dictionary`2<Object, Pose>.set_Item, X0, X1, X2
	135 Move X20, [X31+160]
	136 Move X19, [X31+168]
	137 Move X22, [X31+144]
	138 Move X21, [X31+152]
	139 Move X30, [X31+128]
	140 Move X23, [X31+136]
	141 Move D9, [X31+112]
	142 Move D8, [X31+120]
	143 Move V10, [X31+96]
	144 Add X31, X31, 176
	145 Return 
	146 Compare X22, 0
	147 JumpIfEqual {171}
	148 Move X21, 0x608000
	149 Move X21, [X21+3368]
	150 Move X0, X22
	151 Move X1, X19
	152 Move X2, [X21]
	153 Call Dictionary`2<Object, Pose>.Remove, X0, X1
	154 Move X0, [X20+240]
	155 Compare X0, 0
	156 JumpIfEqual {171}
	157 Move X2, [X21]
	158 Move X1, X19
	159 Move X20, [X31+160]
	160 Move X19, [X31+168]
	161 Move X22, [X31+144]
	162 Move X21, [X31+152]
	163 Move X30, [X31+128]
	164 Move X23, [X31+136]
	165 Move D9, [X31+112]
	166 Move D8, [X31+120]
	167 Move V10, [X31+96]
	168 Add X31, X31, 176
	169 Call Dictionary`2<Object, Pose>.Remove, X0, X1
	170 Return 
	171 Call 0x1C17F20

Method: System.Void CreateAttachTransform()

Disassembly:
	0x03B534B4 LDR X2, [X8 + 0x630]
	0x03B534B8 BR X3
	0x03B534BC LDR X8, [X0]
	0x03B534C0 LDR X3, [X8 + 0x588]
	0x03B534C4 LDR X2, [X8 + 0x590]
	0x03B534C8 BR X3
	0x03B534CC LDR X8, [X0]
	0x03B534D0 LDR X3, [X8 + 0x598]
	0x03B534D4 LDR X2, [X8 + 0x5A0]
	0x03B534D8 BR X3
	0x03B534DC STP X30, X21, [X31 - 0x20]!
	0x03B534E0 STP X20, X19, [X31 + 0x10]
	0x03B534E4 ADRP X21, 0x88F000
	0x03B534E8 LDRB W8, [X21 + 0x914]
	0x03B534EC MOV X19, X1
	0x03B534F0 MOV X20, X0
	0x03B534F4 TBNZ X8, 0x0, 0x3B5350C
	0x03B534F8 ADRP X0, 0x607000
	0x03B534FC LDR X0, [X0 + 0x438]
	0x03B53500 BL 0x1C16CF4
	0x03B53504 MOVZ W8, 0x1
	0x03B53508 STRB W8, [X21 + 0x914]
	0x03B5350C CBZ X19, 0x3B53544
	0x03B53510 ADRP X8, 0x607000
	0x03B53514 LDR X8, [X8 + 0x438]
	0x03B53518 LDR X9, [X19]
	0x03B5351C LDR X8, [X8]
	0x03B53520 LDRB W11, [X9 + 0x130]
	0x03B53524 LDRB W10, [X8 + 0x130]
	0x03B53528 CMP W11, W10
	0x03B5352C B.CC 0x3B53544
	0x03B53530 LDR X9, [X9 + 0xC8]
	0x03B53534 ADD X9, X9, X10, 0x3, LSL
	0x03B53538 LDUR X9, [X9 - 0x8]
	0x03B5353C CMP X9, X8
	0x03B53540 B.EQ 0x3B5358C
	0x03B53544 LDR X8, [X20]
	0x03B53548 LDR X9, [X8 + 0x538]
	0x03B5354C LDR X2, [X8 + 0x540]
	0x03B53550 MOV X0, X20
	0x03B53554 MOV X1, X19
	0x03B53558 BLR X9
	0x03B5355C TBZ X0, 0x0, 0x3B5357C
	0x03B53560 LDR X0, [X20 + 0xC8]
	0x03B53564 MOV X1, X20
	0x03B53568 MOV X2, X19
	0x03B5356C LDP X20, X19, [X31 + 0x10]
	0x03B53570 MOV X3, X31
	0x03B53574 LDP X30, X21, [X31], #0x20
	0x03B53578 B 0x3B8DC80
	0x03B5357C LDP X20, X19, [X31 + 0x10]
	0x03B53580 MOV W0, W31
	0x03B53584 LDP X30, X21, [X31], #0x20
	0x03B53588 RET
	0x03B5358C LDR X8, [X20]
	0x03B53590 LDR X9, [X8 + 0x6E8]
	0x03B53594 LDR X2, [X8 + 0x6F0]
	0x03B53598 B 0x3B53550
	0x03B5359C MOV X8, X0
	0x03B535A0 LDR X0, [X0 + 0xC8]
	0x03B535A4 MOV X2, X1
	0x03B535A8 MOV X1, X8
	0x03B535AC MOV X3, X31
	0x03B535B0 B 0x3B8DC80
	0x03B535B4 LDR X8, [X0]
	0x03B535B8 LDR X3, [X8 + 0x5A8]
	0x03B535BC LDR X2, [X8 + 0x5B0]
	0x03B535C0 BR X3
	0x03B535C4 LDR X8, [X0]
	0x03B535C8 LDR X3, [X8 + 0x5B8]
	0x03B535CC LDR X2, [X8 + 0x5C0]
	0x03B535D0 BR X3
	0x03B535D4 LDR X8, [X0]
	0x03B535D8 LDR X3, [X8 + 0x5C8]
	0x03B535DC LDR X2, [X8 + 0x5D0]
	0x03B535E0 BR X3
	0x03B535E4 LDR X8, [X0]
	0x03B535E8 LDR X3, [X8 + 0x5D8]
	0x03B535EC LDR X2, [X8 + 0x5E0]
	0x03B535F0 BR X3
	0x03B535F4 STP X30, X21, [X31 - 0x20]!
	0x03B535F8 STP X20, X19, [X31 + 0x10]
	0x03B535FC ADRP X21, 0x88F000
	0x03B53600 LDRB W8, [X21 + 0x915]
	0x03B53604 MOV X19, X1
	0x03B53608 MOV X20, X0
	0x03B5360C TBNZ X8, 0x0, 0x3B53624
	0x03B53610 ADRP X0, 0x607000
	0x03B53614 LDR X0, [X0 + 0x438]
	0x03B53618 BL 0x1C16CF4
	0x03B5361C MOVZ W8, 0x1
	0x03B53620 STRB W8, [X21 + 0x915]
	0x03B53624 CBZ X19, 0x3B5365C
	0x03B53628 ADRP X8, 0x607000
	0x03B5362C LDR X8, [X8 + 0x438]
	0x03B53630 LDR X9, [X19]
	0x03B53634 LDR X8, [X8]
	0x03B53638 LDRB W11, [X9 + 0x130]
	0x03B5363C LDRB W10, [X8 + 0x130]
	0x03B53640 CMP W11, W10
	0x03B53644 B.CC 0x3B5365C
	0x03B53648 LDR X9, [X9 + 0xC8]
	0x03B5364C ADD X9, X9, X10, 0x3, LSL
	0x03B53650 LDUR X9, [X9 - 0x8]
	0x03B53654 CMP X9, X8
	0x03B53658 B.EQ 0x3B536A4
	0x03B5365C LDR X8, [X20]
	0x03B53660 LDR X9, [X8 + 0x548]
	0x03B53664 LDR X2, [X8 + 0x550]
	0x03B53668 MOV X0, X20
	0x03B5366C MOV X1, X19
	0x03B53670 BLR X9
	0x03B53674 TBZ X0, 0x0, 0x3B53694
	0x03B53678 LDR X0, [X20 + 0xD8]
	0x03B5367C MOV X1, X20
	0x03B53680 MOV X2, X19
	0x03B53684 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x890000
	006 Move X20, 0x5A1000
	007 Move W8, [X21+2322]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x5A1000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move X0, 0x5A1000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x608000
	021 Move X0, [X0+3336]
	022 Call 0x1C17CF4
	023 Move X0, 0x5A1000
	024 Move X0, [X0+3784]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2322], W8
	028 Move X0, [X20]
	029 Move X20, [X19+80]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {136}
	042 Move X0, X19
	043 Move X1, X31
	044 Call Component.get_gameObject, X0
	045 Compare X0, 0
	046 JumpIfEqual {141}
	047 Move X1, X31
	048 Call Object.get_name, X0
	049 Move X8, 0x5A1000
	050 Move X8, [X8+3784]
	051 Move X9, 0x608000
	052 Move X9, [X9+3336]
	053 Move X1, X0
	054 Move X8, [X8]
	055 Move X3, X31
	056 Move X2, [X9]
	057 Move X0, X8
	058 Call String.Concat, X0, X1, X2
	059 Move X8, 0x5A1000
	060 Move X8, [X8+2648]
	061 Move X21, X0
	062 Move X8, [X8]
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move X1, X21
	066 Move X2, X31
	067 Move X20, X0
	068 Call GameObject..ctor, X0, X1
	069 Compare X20, 0
	070 JumpIfEqual {141}
	071 Move X0, X20
	072 Move X1, X31
	073 Call GameObject.get_transform, X0
	074 Move X20, X0
	075 Move [X19+80], X0
	076 Move X0, X19
	077 Move X1, X31
	078 Call Component.get_transform, X0
	079 Compare X20, 0
	080 JumpIfEqual {141}
	081 Move X1, X0
	082 Move X0, X20
	083 Move W2, W31
	084 Move X3, X31
	085 Call Transform.SetParent, X0, X1, X2
	086 Move X21, 0x886000
	087 Move W8, [X21+1923]
	088 Move X20, [X19+80]
	089 Compare W8, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0x5A1000
	092 Move X0, [X0+1440]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X21+1923], W8
	096 Compare X20, 0
	097 JumpIfEqual {141}
	098 Move X8, 0x5A1000
	099 Move X8, [X8+1440]
	100 Move X0, X20
	101 Move X1, X31
	102 Move X8, [X8]
	103 Move X8, [X8+184]
	104 Move S1, [X8+4]
	105 Move S2, [X8+8]
	106 Move V0, [X8]
	107 Call Transform.set_localPosition, X0, X1
	108 Move X20, 0x886000
	109 Move W8, [X20+1939]
	110 Move X19, [X19+80]
	111 Compare W8, 0
	112 JumpIfNotEqual {118}
	113 Move X0, 0x5A2000
	114 Move X0, [X0+1448]
	115 Call 0x1C17CF4
	116 Move W8, 1
	117 Move [X20+1939], W8
	118 Compare X19, 0
	119 JumpIfEqual {141}
	120 Move X8, 0x5A2000
	121 Move X8, [X8+1448]
	122 Move X0, X19
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X1, X31
	126 Move X8, [X8]
	127 Move X8, [X8+184]
	128 Move S2, [X8+8]
	129 Move S3, [X8+12]
	130 Move S0, [X8]
	131 Move S1, [X8+4]
	132 Move X30, [X31+32]
	133 Move X21, [X31+40]
	134 Call Transform.set_localRotation, X0, X1
	135 Return 
	136 Move X20, [X31+16]
	137 Move X19, [X31+24]
	138 Move X30, [X31+32]
	139 Move X21, [X31+40]
	140 Return 
	141 Call 0x1C17F20

Method: System.Void PreprocessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B50590 BL 0x1D2C690
	0x03B50594 MOV X0, X19
	0x03B50598 BL 0x1C16F18
	0x03B5059C BL 0x1990590

ISIL:
	001 Move W8, [X0+280]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Call XRBaseInteractor.UpdateVelocityAndAngularVelocity, X0
	005 Return 
	006 Return 

Method: System.Void ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B506C0 ADRP X0, 0x60A000

ISIL:
	001 Return 

Method: System.Single GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B54430 LDR W0, [X0 + 0x40]
	0x03B54434 RET
	0x03B54438 STR W1, [X0 + 0x40]
	0x03B5443C RET
	0x03B54440 LDRB W8, [X0 + 0x98]
	0x03B54444 CBZ W8, 0x3B54458
	0x03B54448 LDRB W8, [X0 + 0x99]
	0x03B5444C CMP W8, 0x0
	0x03B54450 CSET W0, NE
	0x03B54454 RET
	0x03B54458 MOV W0, W31
	0x03B5445C RET
	0x03B54460 AND W8, W1, 0x1
	0x03B54464 STRB W8, [X0 + 0x98]
	0x03B54468 STRB W8, [X0 + 0x99]
	0x03B5446C RET
	0x03B54470 LDR X0, [X0 + 0x180]
	0x03B54474 RET
	0x03B54478 STR X1, [X0 + 0x180]
	0x03B5447C RET
	0x03B54480 LDR X0, [X0 + 0x188]
	0x03B54484 RET
	0x03B54488 STR X1, [X0 + 0x188]
	0x03B5448C RET
	0x03B54490 LDR X0, [X0 + 0x190]
	0x03B54494 RET
	0x03B54498 STR X1, [X0 + 0x190]
	0x03B5449C RET
	0x03B544A0 LDR X0, [X0 + 0x198]
	0x03B544A4 RET
	0x03B544A8 STR X1, [X0 + 0x198]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x88F000
	007 Move W8, [X21+2323]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x607000
	015 Move X0, [X0+3384]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2323], W8
	019 Move [X31+12], W31
	020 Move X0, [X20+256]
	021 Compare X0, 0
	022 JumpIfEqual {39}
	023 Move X8, 0x607000
	024 Move X8, [X8+3384]
	025 Add X2, X31, 12
	026 Move X1, X19
	027 Move X3, [X8]
	028 Call Dictionary`2<Object, Single>.TryGetValue, X0, X1, X2
	029 Move V0, [X31+12]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 Move S1, W31
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 Add X31, X31, 48
	038 Return V0
	039 Call 0x1C17F20

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B544AC RET
	0x03B544B0 LDR X0, [X0 + 0x180]
	0x03B544B4 RET
	0x03B544B8 LDR X0, [X0 + 0x188]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1576]
	003 Move X2, [X8+1584]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)

Disassembly:
	0x03B544BC RET
	0x03B544C0 LDR X0, [X0 + 0x190]
	0x03B544C4 RET
	0x03B544C8 LDR X0, [X0 + 0x198]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1416]
	003 Move X2, [X8+1424]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)

Disassembly:
	0x03B544CC RET
	0x03B544D0 RET
	0x03B544D4 STP X30, X21, [X31 - 0x20]!
	0x03B544D8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1432]
	003 Move X2, [X8+1440]
	004 CallNoReturn X3

Method: System.Boolean UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B544DC ADRP X21, 0x88E000
	0x03B544E0 LDRB W8, [X21 + 0x924]
	0x03B544E4 MOV X19, X1
	0x03B544E8 MOV X20, X0
	0x03B544EC TBNZ X8, 0x0, 0x3B54504
	0x03B544F0 ADRP X0, 0x606000
	0x03B544F4 LDR X0, [X0 + 0xDB0]
	0x03B544F8 BL 0x1C16CF4
	0x03B544FC MOVZ W8, 0x1
	0x03B54500 STRB W8, [X21 + 0x924]
	0x03B54504 LDR X0, [X20 + 0x180]
	0x03B54508 CBZ X0, 0x3B54528
	0x03B5450C ADRP X8, 0x606000
	0x03B54510 LDR X8, [X8 + 0xDB0]
	0x03B54514 MOV X1, X19
	0x03B54518 LDP X20, X19, [X31 + 0x10]
	0x03B5451C LDR X2, [X8]
	0x03B54520 LDP X30, X21, [X31], #0x20
	0x03B54524 B 0x2729DBC
	0x03B54528 LDP X20, X19, [X31 + 0x10]
	0x03B5452C LDP X30, X21, [X31], #0x20
	0x03B54530 RET
	0x03B54534 RET
	0x03B54538 STP X30, X21, [X31 - 0x20]!
	0x03B5453C STP X20, X19, [X31 + 0x10]
	0x03B54540 ADRP X21, 0x88E000
	0x03B54544 LDRB W8, [X21 + 0x925]
	0x03B54548 MOV X19, X1
	0x03B5454C MOV X20, X0
	0x03B54550 TBNZ X8, 0x0, 0x3B54568
	0x03B54554 ADRP X0, 0x606000
	0x03B54558 LDR X0, [X0 + 0xDB0]
	0x03B5455C BL 0x1C16CF4
	0x03B54560 MOVZ W8, 0x1
	0x03B54564 STRB W8, [X21 + 0x925]
	0x03B54568 LDR X0, [X20 + 0x188]
	0x03B5456C CBZ X0, 0x3B5458C
	0x03B54570 ADRP X8, 0x606000
	0x03B54574 LDR X8, [X8 + 0xDB0]
	0x03B54578 MOV X1, X19
	0x03B5457C LDP X20, X19, [X31 + 0x10]
	0x03B54580 LDR X2, [X8]
	0x03B54584 LDP X30, X21, [X31], #0x20
	0x03B54588 B 0x2729DBC
	0x03B5458C LDP X20, X19, [X31 + 0x10]
	0x03B54590 LDP X30, X21, [X31], #0x20
	0x03B54594 RET
	0x03B54598 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88F000
	006 Move W8, [X21+2324]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x607000
	014 Move X0, [X0+1080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2324], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x607000
	021 Move X8, [X8+1080]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20]
	032 Move X9, [X8+1336]
	033 Move X2, [X8+1344]
	034 Move X0, X20
	035 Move X1, X19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {51}
	041 Move X0, [X20+200]
	042 Move X1, X20
	043 Move X2, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X3, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call XRFilterUtility.Process, X0, X1, X2
	050 Return X0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move W0, W31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Move X8, [X20]
	058 Move X9, [X8+1768]
	059 Move X2, [X8+1776]

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B545B4 TBNZ X8, 0x0, 0x3B545CC
	0x03B545B8 ADRP X0, 0x606000
	0x03B545BC LDR X0, [X0 + 0xDB0]
	0x03B545C0 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1448]
	003 Move X2, [X8+1456]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B545C4 MOVZ W8, 0x1
	0x03B545C8 STRB W8, [X21 + 0x926]
	0x03B545CC LDR X0, [X20 + 0x190]
	0x03B545D0 CBZ X0, 0x3B545F0

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1464]
	003 Move X2, [X8+1472]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B545D4 ADRP X8, 0x606000
	0x03B545D8 LDR X8, [X8 + 0xDB0]
	0x03B545DC MOV X1, X19
	0x03B545E0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1480]
	003 Move X2, [X8+1488]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B545E4 LDR X2, [X8]
	0x03B545E8 LDP X30, X21, [X31], #0x20
	0x03B545EC B 0x2729DBC
	0x03B545F0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1496]
	003 Move X2, [X8+1504]
	004 CallNoReturn X3

Method: System.Boolean UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B545F4 LDP X30, X21, [X31], #0x20
	0x03B545F8 RET
	0x03B545FC RET
	0x03B54600 STP X30, X21, [X31 - 0x20]!
	0x03B54604 STP X20, X19, [X31 + 0x10]
	0x03B54608 ADRP X21, 0x88E000
	0x03B5460C LDRB W8, [X21 + 0x927]
	0x03B54610 MOV X19, X1
	0x03B54614 MOV X20, X0
	0x03B54618 TBNZ X8, 0x0, 0x3B54630
	0x03B5461C ADRP X0, 0x606000
	0x03B54620 LDR X0, [X0 + 0xDB0]
	0x03B54624 BL 0x1C16CF4
	0x03B54628 MOVZ W8, 0x1
	0x03B5462C STRB W8, [X21 + 0x927]
	0x03B54630 LDR X0, [X20 + 0x198]
	0x03B54634 CBZ X0, 0x3B54654
	0x03B54638 ADRP X8, 0x606000
	0x03B5463C LDR X8, [X8 + 0xDB0]
	0x03B54640 MOV X1, X19
	0x03B54644 LDP X20, X19, [X31 + 0x10]
	0x03B54648 LDR X2, [X8]
	0x03B5464C LDP X30, X21, [X31], #0x20
	0x03B54650 B 0x2729DBC
	0x03B54654 LDP X20, X19, [X31 + 0x10]
	0x03B54658 LDP X30, X21, [X31], #0x20
	0x03B5465C RET
	0x03B54660 STR X30, [X31 - 0x20]!
	0x03B54664 STP X20, X19, [X31 + 0x10]
	0x03B54668 ADRP X20, 0x88E000
	0x03B5466C LDRB W8, [X20 + 0x928]
	0x03B54670 MOV X19, X0
	0x03B54674 TBNZ X8, 0x0, 0x3B54698
	0x03B54678 ADRP X0, 0x606000
	0x03B5467C LDR X0, [X0 + 0x948]
	0x03B54680 BL 0x1C16CF4
	0x03B54684 ADRP X0, 0x606000
	0x03B54688 LDR X0, [X0 + 0x438]
	0x03B5468C BL 0x1C16CF4
	0x03B54690 MOVZ W8, 0x1
	0x03B54694 STRB W8, [X20 + 0x928]
	0x03B54698 MOV X0, X19
	0x03B5469C BL 0x3B4B6D0
	0x03B546A0 TBZ X0, 0x0, 0x3B546E8
	0x03B546A4 MOV X0, X19
	0x03B546A8 BL 0x3B505A0
	0x03B546AC CBZ X0, 0x3B54710
	0x03B546B0 ADRP X8, 0x606000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88F000
	006 Move W8, [X21+2325]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x607000
	014 Move X0, [X0+1080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2325], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x607000
	021 Move X8, [X8+1080]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20]
	032 Move X9, [X8+1352]
	033 Move X2, [X8+1360]
	034 Move X0, X20
	035 Move X1, X19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {51}
	041 Move X0, [X20+216]
	042 Move X1, X20
	043 Move X2, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X3, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call XRFilterUtility.Process, X0, X1, X2
	050 Return X0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move W0, W31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Move X8, [X20]
	058 Move X9, [X8+1784]
	059 Move X2, [X8+1792]

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B546CC LDR X8, [X8 + 0x438]
	0x03B546D0 LDR X9, [X0]
	0x03B546D4 LDR X8, [X8]
	0x03B546D8 LDRB W11, [X9 + 0x130]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1512]
	003 Move X2, [X8+1520]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B546DC LDRB W10, [X8 + 0x130]
	0x03B546E0 CMP W11, W10
	0x03B546E4 B.CS 0x3B546F8
	0x03B546E8 MOV X0, X31

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1528]
	003 Move X2, [X8+1536]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B546EC LDP X20, X19, [X31 + 0x10]
	0x03B546F0 LDR X30, [X31], #0x20
	0x03B546F4 RET
	0x03B546F8 LDR X9, [X9 + 0xC8]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1544]
	003 Move X2, [X8+1552]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B546FC ADD X9, X9, X10, 0x3, LSL
	0x03B54700 LDUR X9, [X9 - 0x8]
	0x03B54704 CMP X9, X8
	0x03B54708 CSEL X0, X0, X31, EQ

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1560]
	003 Move X2, [X8+1568]
	004 CallNoReturn X3

Method: System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)

Disassembly:
	0x03B5470C B 0x3B546EC
	0x03B54710 BL 0x1C16F20
	0x03B54714 STP X30, X21, [X31 - 0x20]!
	0x03B54718 STP X20, X19, [X31 + 0x10]
	0x03B5471C ADRP X21, 0x88E000
	0x03B54720 LDRB W8, [X21 + 0x929]
	0x03B54724 MOV X19, X1
	0x03B54728 MOV X20, X0
	0x03B5472C TBNZ X8, 0x0, 0x3B54744
	0x03B54730 ADRP X0, 0x606000
	0x03B54734 LDR X0, [X0 + 0xDB8]
	0x03B54738 BL 0x1C16CF4
	0x03B5473C MOVZ W8, 0x1
	0x03B54740 STRB W8, [X21 + 0x929]
	0x03B54744 MOV X0, X20
	0x03B54748 BL 0x3B505A0
	0x03B5474C CBZ X0, 0x3B54770
	0x03B54750 ADRP X8, 0x606000
	0x03B54754 LDR X8, [X8 + 0xDB8]
	0x03B54758 MOV X2, X19
	0x03B5475C LDP X20, X19, [X31 + 0x10]
	0x03B54760 MOV W1, W31
	0x03B54764 LDR X3, [X8]
	0x03B54768 LDP X30, X21, [X31], #0x20
	0x03B5476C B 0x301BD20
	0x03B54770 BL 0x1C16F20
	0x03B54774 LDR X0, [X0 + 0x1A0]
	0x03B54778 RET
	0x03B5477C STP X30, X21, [X31 - 0x20]!
	0x03B54780 STP X20, X19, [X31 + 0x10]
	0x03B54784 ADRP X21, 0x88E000
	0x03B54788 LDRB W8, [X21 + 0x92A]
	0x03B5478C MOV X19, X1
	0x03B54790 MOV X20, X0
	0x03B54794 TBNZ X8, 0x0, 0x3B547B8
	0x03B54798 ADRP X0, 0x606000
	0x03B5479C LDR X0, [X0 + 0xDC0]
	0x03B547A0 BL 0x1C16CF4
	0x03B547A4 ADRP X0, 0x606000
	0x03B547A8 LDR X0, [X0 + 0xDC8]
	0x03B547AC BL 0x1C16CF4
	0x03B547B0 MOVZ W8, 0x1
	0x03B547B4 STRB W8, [X21 + 0x92A]
	0x03B547B8 CBZ X19, 0x3B54800
	0x03B547BC LDP W2, W8, [X19 + 0x18]
	0x03B547C0 ADRP X21, 0x606000
	0x03B547C4 LDR X21, [X21 + 0xDC0]
	0x03B547C8 ADD W8, W8, 0x1
	0x03B547CC CMP W2, 0x1
	0x03B547D0 STP W31, W8, [X19 + 0x18]
	0x03B547D4 B.LT 0x3B547E8
	0x03B547D8 LDR X0, [X19 + 0x10]
	0x03B547DC MOV W1, W31
	0x03B547E0 MOV X3, X31
	0x03B547E4 BL 0x339FA34
	0x03B547E8 LDR X1, [X20 + 0x1A0]
	0x03B547EC LDR X2, [X21]
	0x03B547F0 MOV X0, X19
	0x03B547F4 LDP X20, X19, [X31 + 0x10]
	0x03B547F8 LDP X30, X21, [X31], #0x20
	0x03B547FC B 0x301C194
	0x03B54800 BL 0x1C16F20
	0x03B54804 RET
	0x03B54808 LDR X8, [X0]
	0x03B5480C LDR X3, [X8 + 0x538]
	0x03B54810 LDR X2, [X8 + 0x540]
	0x03B54814 BR X3
	0x03B54818 LDR X8, [X0]
	0x03B5481C LDR X3, [X8 + 0x548]
	0x03B54820 LDR X2, [X8 + 0x550]
	0x03B54824 BR X3
	0x03B54828 MOV W0, W31
	0x03B5482C RET
	0x03B54830 LDR X8, [X0]
	0x03B54834 LDR X3, [X8 + 0x638]
	0x03B54838 LDR X2, [X8 + 0x640]
	0x03B5483C BR X3
	0x03B54840 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x88F000
	007 Move W8, [X21+2326]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x5A0000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x5A0000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x607000
	021 Move X0, [X0+3392]
	022 Call 0x1C17CF4
	023 Move X0, 0x607000
	024 Move X0, [X0+888]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2326], W8
	028 Compare X19, 0
	029 JumpIfEqual {94}
	030 Move X8, 0x5A0000
	031 Move X8, [X8+1432]
	032 Move X21, [X19+16]
	033 Move X22, [X20+48]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X21
	040 Move X1, X22
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {75}
	047 Move X8, 0x607000
	048 Move X2, [X20+48]
	049 Move X3, [X19+16]
	050 Move X8, [X8+888]
	051 Move X1, X20
	052 Move X4, X31
	053 Move X0, [X8]
	054 Call String.Format, X0, X1, X2, X3
	055 Move X8, 0x607000
	056 Move X8, [X8+3392]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X8, [X8]
	060 Move X0, X8
	061 Call String.Concat, X0, X1
	062 Move X8, 0x5A0000
	063 Move X8, [X8+2600]
	064 Move X21, X0
	065 Move X8, [X8]
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X20
	073 Move X2, X31
	074 Call Debug.LogWarning, X0, X1
	075 Move X8, [X20+32]
	076 Compare X8, 0
	077 JumpIfEqual {88}
	078 Move X3, [X8+24]
	079 Move X0, [X8+64]
	080 Move X2, [X8+40]
	081 Move X1, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 CallNoReturn X3
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 
	094 Call 0x1C17F20

Method: System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)

Disassembly:
	0x03B54844 STP X20, X19, [X31 + 0x10]
	0x03B54848 ADRP X20, 0x88E000
	0x03B5484C ADRP X21, 0x606000
	0x03B54850 ADRP X19, 0x606000
	0x03B54854 LDRB W8, [X20 + 0x92C]
	0x03B54858 LDR X21, [X21 + 0xDD0]
	0x03B5485C LDR X19, [X19 + 0x368]
	0x03B54860 TBNZ X8, 0x0, 0x3B54884
	0x03B54864 ADRP X0, 0x606000
	0x03B54868 LDR X0, [X0 + 0x368]
	0x03B5486C BL 0x1C16CF4
	0x03B54870 ADRP X0, 0x606000
	0x03B54874 LDR X0, [X0 + 0xDD0]
	0x03B54878 BL 0x1C16CF4
	0x03B5487C MOVZ W8, 0x1
	0x03B54880 STRB W8, [X20 + 0x92C]
	0x03B54884 LDR X0, [X21]
	0x03B54888 MOVZ W1, 0x1
	0x03B5488C MOV W2, W31
	0x03B54890 MOV W3, W31
	0x03B54894 MOV X4, X31
	0x03B54898 BL 0x3BFE7FC
	0x03B5489C LDR X8, [X19]
	0x03B548A0 LDP X20, X19, [X31 + 0x10]
	0x03B548A4 LDR X8, [X8 + 0xB8]
	0x03B548A8 STR X0, [X8]
	0x03B548AC LDP X30, X21, [X31], #0x20
	0x03B548B0 RET
	0x03B548B4 MOV X1, X31
	0x03B548B8 B 0x3C32E90
	0x03B548BC LDRB W0, [X0 + 0x290]
	0x03B548C0 RET
	0x03B548C4 AND W8, W1, 0x1
	0x03B548C8 STRB W8, [X0 + 0x290]
	0x03B548CC RET
	0x03B548D0 LDRB W0, [X0 + 0x2C0]
	0x03B548D4 RET
	0x03B548D8 LDR W0, [X0 + 0x294]
	0x03B548DC RET
	0x03B548E0 STR W1, [X0 + 0x294]
	0x03B548E4 RET
	0x03B548E8 LDR W0, [X0 + 0x298]
	0x03B548EC RET
	0x03B548F0 STR W1, [X0 + 0x298]
	0x03B548F4 RET
	0x03B548F8 LDR X0, [X0 + 0x2A0]
	0x03B548FC RET
	0x03B54900 STP X30, X19, [X31 - 0x10]!
	0x03B54904 MOV X19, X0
	0x03B54908 BL 0x3B4F060
	0x03B5490C MOV X0, X19
	0x03B54910 MOV X1, X31
	0x03B54914 BL 0x3C32ECC
	0x03B54918 CBZ X0, 0x3B5495C
	0x03B5491C MOV X1, X31
	0x03B54920 BL 0x3C35BD8
	0x03B54924 AND X0, X0, 0x0
	0x03B54928 MOV X1, X31
	0x03B5492C BL 0x3C90E1C
	0x03B54930 LDR X8, [X19 + 0x2B0]
	0x03B54934 STR W0, [X19 + 0x2D0]
	0x03B54938 CBZ X8, 0x3B5495C
	0x03B5493C LDR X9, [X19 + 0x30]
	0x03B54940 MOV X0, X19
	0x03B54944 STR X9, [X8 + 0x20]
	0x03B54948 BL 0x3B54960
	0x03B5494C STR X0, [X19 + 0x2B8]
	0x03B54950 MOV X0, X19
	0x03B54954 LDP X30, X19, [X31], #0x10
	0x03B54958 B 0x3B549C0
	0x03B5495C BL 0x1C16F20
	0x03B54960 STP X30, X21, [X31 - 0x20]!
	0x03B54964 STP X20, X19, [X31 + 0x10]
	0x03B54968 ADRP X20, 0x88E000
	0x03B5496C ADRP X21, 0x606000
	0x03B54970 LDRB W8, [X20 + 0x930]
	0x03B54974 LDR X21, [X21 + 0xDD8]
	0x03B54978 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x88F000
	007 Move W8, [X21+2327]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x5A0000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x5A0000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x607000
	021 Move X0, [X0+3400]
	022 Call 0x1C17CF4
	023 Move X0, 0x607000
	024 Move X0, [X0+896]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2327], W8
	028 Compare X19, 0
	029 JumpIfEqual {94}
	030 Move X8, 0x5A0000
	031 Move X8, [X8+1432]
	032 Move X21, [X19+16]
	033 Move X22, [X20+272]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X21
	040 Move X1, X22
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {75}
	047 Move X8, 0x607000
	048 Move X2, [X20+272]
	049 Move X3, [X19+16]
	050 Move X8, [X8+896]
	051 Move X1, X20
	052 Move X4, X31
	053 Move X0, [X8]
	054 Call String.Format, X0, X1, X2, X3
	055 Move X8, 0x607000
	056 Move X8, [X8+3400]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X8, [X8]
	060 Move X0, X8
	061 Call String.Concat, X0, X1
	062 Move X8, 0x5A0000
	063 Move X8, [X8+2600]
	064 Move X21, X0
	065 Move X8, [X8]
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X20
	073 Move X2, X31
	074 Call Debug.LogWarning, X0, X1
	075 Move X8, [X20+40]
	076 Compare X8, 0
	077 JumpIfEqual {88}
	078 Move X3, [X8+24]
	079 Move X0, [X8+64]
	080 Move X2, [X8+40]
	081 Move X1, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 CallNoReturn X3
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 
	094 Call 0x1C17F20

Method: System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B51C1C BL 0x1C16CF4
	0x03B51C20 MOVZ W8, 0x1
	0x03B51C24 STRB W8, [X21 + 0x8F9]
	0x03B51C28 ADRP X24, 0x609000
	0x03B51C2C LDR X21, [X20 + 0x20]!
	0x03B51C30 LDR X24, [X24 + 0xCE8]
	0x03B51C34 MOV X0, X21
	0x03B51C38 MOV X1, X19
	0x03B51C3C MOV X2, X31
	0x03B51C40 BL 0x33C0FDC
	0x03B51C44 CBZ X0, 0x3B51C64
	0x03B51C48 LDR X23, [X24]
	0x03B51C4C MOV X22, X0
	0x03B51C50 MOV X1, X23
	0x03B51C54 BL 0x1C16E00
	0x03B51C58 MOV X1, X0
	0x03B51C5C CBNZ X0, 0x3B51C68
	0x03B51C60 B 0x3B51C94
	0x03B51C64 MOV X1, X31
	0x03B51C68 MOV X0, X20
	0x03B51C6C MOV X2, X21
	0x03B51C70 BL 0x1C24138
	0x03B51C74 CMP X21, X0
	0x03B51C78 MOV X21, X0
	0x03B51C7C B.NE 0x3B51C34
	0x03B51C80 LDP X20, X19, [X31 + 0x30]
	0x03B51C84 LDP X22, X21, [X31 + 0x20]
	0x03B51C88 LDP X24, X23, [X31 + 0x10]
	0x03B51C8C LDR X30, [X31], #0x40
	0x03B51C90 RET
	0x03B51C94 MOV X0, X22
	0x03B51C98 MOV X1, X23
	0x03B51C9C BL 0x1C171E0
	0x03B51CA0 STR X30, [X31 - 0x40]!
	0x03B51CA4 STP X24, X23, [X31 + 0x10]
	0x03B51CA8 STP X22, X21, [X31 + 0x20]
	0x03B51CAC STP X20, X19, [X31 + 0x30]
	0x03B51CB0 ADRP X21, 0x891000
	0x03B51CB4 LDRB W8, [X21 + 0x8FA]
	0x03B51CB8 MOV X19, X1
	0x03B51CBC MOV X20, X0
	0x03B51CC0 TBNZ X8, 0x0, 0x3B51CD8
	0x03B51CC4 ADRP X0, 0x609000
	0x03B51CC8 LDR X0, [X0 + 0xCF0]
	0x03B51CCC BL 0x1C16CF4
	0x03B51CD0 MOVZ W8, 0x1
	0x03B51CD4 STRB W8, [X21 + 0x8FA]
	0x03B51CD8 ADRP X24, 0x609000
	0x03B51CDC LDR X21, [X20 + 0x28]!
	0x03B51CE0 LDR X24, [X24 + 0xCF0]
	0x03B51CE4 MOV X0, X21
	0x03B51CE8 MOV X1, X19
	0x03B51CEC MOV X2, X31
	0x03B51CF0 BL 0x33C0DE4
	0x03B51CF4 CBZ X0, 0x3B51D14
	0x03B51CF8 LDR X23, [X24]
	0x03B51CFC MOV X22, X0
	0x03B51D00 MOV X1, X23
	0x03B51D04 BL 0x1C16E00
	0x03B51D08 MOV X1, X0
	0x03B51D0C CBNZ X0, 0x3B51D18
	0x03B51D10 B 0x3B51D44
	0x03B51D14 MOV X1, X31
	0x03B51D18 MOV X0, X20
	0x03B51D1C MOV X2, X21
	0x03B51D20 BL 0x1C24138
	0x03B51D24 CMP X21, X0
	0x03B51D28 MOV X21, X0
	0x03B51D2C B.NE 0x3B51CE4
	0x03B51D30 LDP X20, X19, [X31 + 0x30]
	0x03B51D34 LDP X22, X21, [X31 + 0x20]
	0x03B51D38 LDP X24, X23, [X31 + 0x10]
	0x03B51D3C LDR X30, [X31], #0x40
	0x03B51D40 RET
	0x03B51D44 MOV X0, X22
	0x03B51D48 MOV X1, X23
	0x03B51D4C BL 0x1C171E0
	0x03B51D50 STR X30, [X31 - 0x40]!
	0x03B51D54 STP X24, X23, [X31 + 0x10]
	0x03B51D58 STP X22, X21, [X31 + 0x20]
	0x03B51D5C STP X20, X19, [X31 + 0x30]
	0x03B51D60 ADRP X21, 0x891000
	0x03B51D64 LDRB W8, [X21 + 0x8FB]
	0x03B51D68 MOV X19, X1
	0x03B51D6C MOV X20, X0
	0x03B51D70 TBNZ X8, 0x0, 0x3B51D88
	0x03B51D74 ADRP X0, 0x609000
	0x03B51D78 LDR X0, [X0 + 0xCF0]
	0x03B51D7C BL 0x1C16CF4
	0x03B51D80 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x892000
	007 Move W8, [X21+2328]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x60A000
	015 Move X0, [X0+3016]
	016 Call 0x1C17CF4
	017 Move X0, 0x60A000
	018 Move X0, [X0+3064]
	019 Call 0x1C17CF4
	020 Move X0, 0x60A000
	021 Move X0, [X0+3032]
	022 Call 0x1C17CF4
	023 Move X0, 0x60A000
	024 Move X0, [X0+3072]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2328], W8
	028 Compare X20, 0
	029 JumpIfEqual {101}
	030 Move X21, [X19+160]
	031 Move X0, X20
	032 Move X1, X31
	033 Call HoverEnterEventArgs.get_interactableObject, X0
	034 Compare X21, 0
	035 JumpIfEqual {101}
	036 Move X8, 0x60A000
	037 Move X8, [X8+3064]
	038 Move X22, 0x60A000
	039 Move X1, X0
	040 Move X0, X21
	041 Move X2, [X8]
	042 Move X22, [X22+3032]
	043 Call 0x2D58DD8, X0, X1
	044 Move X0, X20
	045 Move X1, X31
	046 Call HoverEnterEventArgs.get_interactableObject, X0
	047 Move X1, [X22]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {59}
	051 Move X1, X0
	052 Move X0, [X19+248]
	053 Compare X0, 0
	054 JumpIfEqual {101}
	055 Move X8, 0x60A000
	056 Move X8, [X8+3016]
	057 Move X2, [X8]
	058 Call 0x2D58DD8, X0, X1
	059 Move X21, [X19+416]
	060 Move X0, X20
	061 Move X1, X31
	062 Call BaseInteractionEventArgs.get_interactable, X0
	063 Compare X21, 0
	064 JumpIfEqual {101}
	065 Move X9, 0x60A000
	066 Move X9, [X9+3072]
	067 Move W10, [X21+28]
	068 Move X8, [X21+16]
	069 Move X9, [X9]
	070 Add W10, W10, 1
	071 Move [X21+28], W10
	072 Compare X8, 0
	073 JumpIfEqual {101}
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Move W11, [X8+24]
	076 Move X1, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add W9, W10, 1
	079 Add X8, X8, X10
	080 Move [X21+24], W9
	081 Move [X8+32], X1
	082 Move X8, [X9+32]
	083 Move X0, X21
	084 Move X8, [X8+192]
	085 Move X2, [X8+112]
	086 Call List`1<Object>.AddWithResize, X0, X1
	087 Move X0, X20
	088 Move X1, X31
	089 Call BaseInteractionEventArgs.get_interactable, X0
	090 Move X8, [X19]
	091 Move X1, X0
	092 Move X0, X19
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X3, [X8+1624]
	096 Move X2, [X8+1632]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 CallNoReturn X3
	101 Call 0x1C17F20

Method: System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B5497C TBNZ X8, 0x0, 0x3B54994
	0x03B54980 ADRP X0, 0x606000
	0x03B54984 LDR X0, [X0 + 0xDD8]
	0x03B54988 BL 0x1C16CF4
	0x03B5498C MOVZ W8, 0x1
	0x03B54990 STRB W8, [X20 + 0x930]
	0x03B54994 LDR X0, [X21]
	0x03B54998 BL 0x1C16F10
	0x03B5499C MOV X1, X31
	0x03B549A0 MOV X20, X0
	0x03B549A4 BL 0x33BDD8C
	0x03B549A8 STR W31, [X20 + 0x10]
	0x03B549AC STR X19, [X20 + 0x20]
	0x03B549B0 MOV X0, X20
	0x03B549B4 LDP X20, X19, [X31 + 0x10]
	0x03B549B8 LDP X30, X21, [X31], #0x20
	0x03B549BC RET
	0x03B549C0 SUB X31, X31, 0x30
	0x03B549C4 STP X30, X21, [X31 + 0x10]
	0x03B549C8 STP X20, X19, [X31 + 0x20]
	0x03B549CC ADRP X21, 0x88E000
	0x03B549D0 ADRP X20, 0x5A3000
	0x03B549D4 LDRB W8, [X21 + 0x933]
	0x03B549D8 LDR X20, [X20 + 0x130]
	0x03B549DC MOV X19, X0
	0x03B549E0 TBNZ X8, 0x0, 0x3B54A28
	0x03B549E4 ADRP X0, 0x5C9000
	0x03B549E8 LDR X0, [X0 + 0xFD0]
	0x03B549EC BL 0x1C16CF4
	0x03B549F0 ADRP X0, 0x5A3000
	0x03B549F4 LDR X0, [X0 + 0x130]
	0x03B549F8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88F000
	006 Move W8, [X21+2329]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x607000
	014 Move X0, [X0+944]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2329], W8
	018 Move X0, [X19+112]
	019 Compare X0, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x607000
	022 Move X8, [X8+944]
	023 Move X1, X20
	024 Move X2, [X8]
	025 Call UnityEvent`1<Object>.Invoke, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {41}
	028 Move X0, X20
	029 Move X1, X31
	030 Call BaseInteractionEventArgs.get_interactable, X0
	031 Move X8, [X19]
	032 Move X1, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, [X8+1640]
	037 Move X2, [X8+1648]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Call 0x1C17F20

Method: System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B51EE0 CBNZ W8, 0x3B51EE8
	0x03B51EE4 BL 0x1C16DFC
	0x03B51EE8 MOV X0, X20
	0x03B51EEC MOV X1, X21
	0x03B51EF0 MOV X2, X31
	0x03B51EF4 BL 0x3C3883C
	0x03B51EF8 TBNZ X0, 0x0, 0x3B51F50
	0x03B51EFC MOV X0, X19
	0x03B51F00 BL 0x3B5272C
	0x03B51F04 LDR X0, [X22]
	0x03B51F08 LDR X20, [X19 + 0x30]
	0x03B51F0C LDR W8, [X0 + 0xE0]
	0x03B51F10 CBNZ W8, 0x3B51F18
	0x03B51F14 BL 0x1C16DFC
	0x03B51F18 MOV X0, X20
	0x03B51F1C MOV X1, X31
	0x03B51F20 MOV X2, X31
	0x03B51F24 BL 0x3C354F8
	0x03B51F28 TBZ X0, 0x0, 0x3B51F50
	0x03B51F2C LDR X0, [X19 + 0x30]
	0x03B51F30 CBZ X0, 0x3B51F60
	0x03B51F34 LDR X8, [X0]
	0x03B51F38 MOV X1, X19
	0x03B51F3C LDR X9, [X8 + 0x4C8]
	0x03B51F40 LDR X2, [X8 + 0x4D0]
	0x03B51F44 BLR X9
	0x03B51F48 LDR X8, [X19 + 0x30]
	0x03B51F4C STR X8, [X19 + 0x110]
	0x03B51F50 LDP X20, X19, [X31 + 0x20]
	0x03B51F54 LDP X22, X21, [X31 + 0x10]
	0x03B51F58 LDR X30, [X31], #0x30
	0x03B51F5C RET
	0x03B51F60 BL 0x1C16F20
	0x03B51F64 LDR X0, [X0 + 0x38]
	0x03B51F68 RET
	0x03B51F6C STR X1, [X0 + 0x38]
	0x03B51F70 RET
	0x03B51F74 LDUR X0, [X0 + 0x44]
	0x03B51F78 RET
	0x03B51F7C STUR X1, [X0 + 0x44]
	0x03B51F80 RET
	0x03B51F84 LDR X0, [X0 + 0x50]
	0x03B51F88 RET
	0x03B51F8C STR X1, [X0 + 0x50]
	0x03B51F90 RET
	0x03B51F94 LDRB W0, [X0 + 0x58]
	0x03B51F98 RET
	0x03B51F9C AND W8, W1, 0x1
	0x03B51FA0 STRB W8, [X0 + 0x58]
	0x03B51FA4 RET
	0x03B51FA8 LDRB W0, [X0 + 0x59]
	0x03B51FAC RET
	0x03B51FB0 AND W8, W1, 0x1
	0x03B51FB4 STRB W8, [X0 + 0x59]
	0x03B51FB8 RET
	0x03B51FBC LDR X0, [X0 + 0x60]
	0x03B51FC0 RET
	0x03B51FC4 STR X1, [X0 + 0x60]
	0x03B51FC8 RET
	0x03B51FCC LDR X0, [X0 + 0x68]
	0x03B51FD0 RET
	0x03B51FD4 STR X1, [X0 + 0x68]
	0x03B51FD8 RET
	0x03B51FDC LDR X0, [X0 + 0x70]
	0x03B51FE0 RET
	0x03B51FE4 STR X1, [X0 + 0x70]
	0x03B51FE8 RET
	0x03B51FEC LDR X0, [X0 + 0x78]
	0x03B51FF0 RET
	0x03B51FF4 STR X1, [X0 + 0x78]
	0x03B51FF8 RET
	0x03B51FFC LDR X0, [X0 + 0x80]
	0x03B52000 RET
	0x03B52004 STR X1, [X0 + 0x80]
	0x03B52008 RET
	0x03B5200C LDR X0, [X0 + 0x88]
	0x03B52010 RET
	0x03B52014 STR X1, [X0 + 0x88]
	0x03B52018 RET
	0x03B5201C STR X30, [X31 - 0x20]!
	0x03B52020 STP X20, X19, [X31 + 0x10]
	0x03B52024 ADRP X20, 0x890000
	0x03B52028 LDRB W8, [X20 + 0x8FD]
	0x03B5202C MOV X19, X0
	0x03B52030 TBNZ X8, 0x0, 0x3B52048
	0x03B52034 ADRP X0, 0x5A1000
	0x03B52038 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x892000
	006 Move W8, [X21+2330]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x60A000
	014 Move X0, [X0+3040]
	015 Call 0x1C17CF4
	016 Move X0, 0x60A000
	017 Move X0, [X0+3080]
	018 Call 0x1C17CF4
	019 Move X0, 0x60A000
	020 Move X0, [X0+3056]
	021 Call 0x1C17CF4
	022 Move X0, 0x60A000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move X0, 0x60A000
	026 Move X0, [X0+3088]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2330], W8
	030 Compare X20, 0
	031 JumpIfEqual {102}
	032 Move X21, [X19+160]
	033 Move X0, X20
	034 Move X1, X31
	035 Call HoverExitEventArgs.get_interactableObject, X0
	036 Compare X21, 0
	037 JumpIfEqual {102}
	038 Move X8, 0x60A000
	039 Move X8, [X8+3080]
	040 Move X1, X0
	041 Move X0, X21
	042 Move X2, [X8]
	043 Call 0x2D58E88, X0, X1
	044 Move X0, [X19+248]
	045 Compare X0, 0
	046 JumpIfEqual {102}
	047 Move X8, 0x60A000
	048 Move X8, [X8+3056]
	049 Move X1, [X8]
	050 Call 0x2D58B54, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X21, 0x60A000
	053 Move X21, [X21+3032]
	054 Move X0, X20
	055 Move X1, X31
	056 Call HoverExitEventArgs.get_interactableObject, X0
	057 Move X1, [X21]
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {77}
	061 Move X21, X0
	062 Move X0, X19
	063 Move X1, X21
	064 Call XRBaseInteractor.IsSelecting, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {77}
	069 Move X0, [X19+248]
	070 Compare X0, 0
	071 JumpIfEqual {102}
	072 Move X8, 0x60A000
	073 Move X8, [X8+3040]
	074 Move X1, X21
	075 Move X2, [X8]
	076 Call 0x2D58E88, X0, X1
	077 Move X21, [X19+416]
	078 Move X0, X20
	079 Move X1, X31
	080 Call BaseInteractionEventArgs.get_interactable, X0
	081 Compare X21, 0
	082 JumpIfEqual {102}
	083 Move X8, 0x60A000
	084 Move X8, [X8+3088]
	085 Move X1, X0
	086 Move X0, X21
	087 Move X2, [X8]
	088 Call List`1<Object>.Remove, X0, X1
	089 Move X0, X20
	090 Move X1, X31
	091 Call BaseInteractionEventArgs.get_interactable, X0
	092 Move X8, [X19]
	093 Move X1, X0
	094 Move X0, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X3, [X8+1656]
	098 Move X2, [X8+1664]
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 CallNoReturn X3
	102 Call 0x1C17F20

Method: System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B549FC ADRP X0, 0x59F000
	0x03B54A00 LDR X0, [X0 + 0xA28]
	0x03B54A04 BL 0x1C16CF4
	0x03B54A08 ADRP X0, 0x5A5000
	0x03B54A0C LDR X0, [X0 + 0xC8]
	0x03B54A10 BL 0x1C16CF4
	0x03B54A14 ADRP X0, 0x606000
	0x03B54A18 LDR X0, [X0 + 0xDE0]
	0x03B54A1C BL 0x1C16CF4
	0x03B54A20 MOVZ W8, 0x1
	0x03B54A24 STRB W8, [X21 + 0x933]
	0x03B54A28 LDR X2, [X20]
	0x03B54A2C ADD X1, X31, 0x8
	0x03B54A30 MOV X0, X19
	0x03B54A34 STR X31, [X31 + 0x8]
	0x03B54A38 BL 0x21A4990
	0x03B54A3C TBNZ X0, 0x0, 0x3B54B3C
	0x03B54A40 ADRP X8, 0x5C9000
	0x03B54A44 LDR X8, [X8 + 0xFD0]
	0x03B54A48 MOV X0, X19
	0x03B54A4C LDR X1, [X8]
	0x03B54A50 BL 0x21A43A8
	0x03B54A54 LDRB W8, [X19 + 0x290]
	0x03B54A58 MOV X20, X0
	0x03B54A5C CBZ W8, 0x3B54AC8
	0x03B54A60 CBZ X20, 0x3B54B50
	0x03B54A64 LDR W8, [X20 + 0x18]
	0x03B54A68 CMP W8, 0x1
	0x03B54A6C B.NE 0x3B54ACC
	0x03B54A70 LDR X0, [X20 + 0x20]
	0x03B54A74 CBZ X0, 0x3B54ACC
	0x03B54A78 ADRP X8, 0x5A5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88F000
	006 Move W8, [X21+2331]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x607000
	014 Move X0, [X0+984]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2331], W8
	018 Move X0, [X19+120]
	019 Compare X0, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x607000
	022 Move X8, [X8+984]
	023 Move X1, X20
	024 Move X2, [X8]
	025 Call UnityEvent`1<Object>.Invoke, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {41}
	028 Move X0, X20
	029 Move X1, X31
	030 Call BaseInteractionEventArgs.get_interactable, X0
	031 Move X8, [X19]
	032 Move X1, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, [X8+1672]
	037 Move X2, [X8+1680]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Call 0x1C17F20

Method: System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B51688 BL 0x3B68C08
	0x03B5168C MOVZ W25, 0x101
	0x03B51690 STUR X0, [X19 + 0x44]
	0x03B51694 STRH W25, [X19 + 0x58]
	0x03B51698 LDR X0, [X20]
	0x03B5169C BL 0x1C16F10
	0x03B516A0 MOV X1, X31
	0x03B516A4 MOV X20, X0
	0x03B516A8 BL 0x3B6B6F0
	0x03B516AC STR X20, [X19 + 0x70]
	0x03B516B0 LDR X0, [X24]
	0x03B516B4 BL 0x1C16F10
	0x03B516B8 MOV X1, X31
	0x03B516BC MOV X20, X0
	0x03B516C0 BL 0x3B6B7CC
	0x03B516C4 STR X20, [X19 + 0x78]
	0x03B516C8 LDR X0, [X23]
	0x03B516CC BL 0x1C16F10
	0x03B516D0 MOV X1, X31
	0x03B516D4 MOV X20, X0
	0x03B516D8 BL 0x3B6B8BC
	0x03B516DC STR X20, [X19 + 0x80]
	0x03B516E0 LDR X0, [X29]
	0x03B516E4 BL 0x1C16F10
	0x03B516E8 MOV X1, X31
	0x03B516EC MOV X20, X0
	0x03B516F0 BL 0x3B6B998
	0x03B516F4 STR X20, [X19 + 0x88]
	0x03B516F8 STRH W25, [X19 + 0x98]
	0x03B516FC LDR X0, [X28]
	0x03B51700 BL 0x1C16F10
	0x03B51704 LDR X2, [X27]
	0x03B51708 MOV W1, W31
	0x03B5170C MOV X20, X0
	0x03B51710 BL 0x2D57B9C
	0x03B51714 STR X20, [X19 + 0xA0]
	0x03B51718 LDR X0, [X26]
	0x03B5171C BL 0x1C16F10
	0x03B51720 ADRP X8, 0x609000
	0x03B51724 LDR X8, [X8 + 0xCA8]
	0x03B51728 MOV W1, W31
	0x03B5172C MOV X20, X0
	0x03B51730 LDR X2, [X8]
	0x03B51734 BL 0x2D57B9C
	0x03B51738 STR X20, [X19 + 0xA8]
	0x03B5173C LDR X0, [X22]
	0x03B51740 BL 0x1C16F10
	0x03B51744 LDR X1, [X21]
	0x03B51748 MOV X20, X0
	0x03B5174C BL 0x301B7C4
	0x03B51750 STR X20, [X19 + 0xC0]
	0x03B51754 ADRP X8, 0x609000
	0x03B51758 LDR X8, [X8 + 0x530]
	0x03B5175C LDR X0, [X8]
	0x03B51760 BL 0x1C16F10
	0x03B51764 ADRP X8, 0x609000
	0x03B51768 LDR X8, [X8 + 0x520]
	0x03B5176C MOV X20, X0
	0x03B51770 LDR X1, [X8]
	0x03B51774 BL 0x2D109CC
	0x03B51778 CBZ X20, 0x3B5199C
	0x03B5177C ADRP X8, 0x609000
	0x03B51780 LDR X8, [X8 + 0x598]
	0x03B51784 ADRP X23, 0x609000
	0x03B51788 ADRP X24, 0x609000
	0x03B5178C MOV X0, X20
	0x03B51790 LDR X2, [X8]
	0x03B51794 LDR X23, [X23 + 0x528]
	0x03B51798 LDR X24, [X24 + 0x518]
	0x03B5179C MOV W1, W31
	0x03B517A0 BL 0x25E89B0
	0x03B517A4 STR X20, [X19 + 0xC8]
	0x03B517A8 LDR X0, [X22]
	0x03B517AC BL 0x1C16F10
	0x03B517B0 LDR X1, [X21]
	0x03B517B4 MOV X20, X0
	0x03B517B8 BL 0x301B7C4
	0x03B517BC STR X20, [X19 + 0xD0]
	0x03B517C0 LDR X0, [X23]
	0x03B517C4 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x892000
	007 Move W8, [X21+2332]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x60A000
	015 Move X0, [X0+3016]
	016 Call 0x1C17CF4
	017 Move X0, 0x60A000
	018 Move X0, [X0+3024]
	019 Call 0x1C17CF4
	020 Move X0, 0x60A000
	021 Move X0, [X0+2656]
	022 Call 0x1C17CF4
	023 Move X0, 0x60A000
	024 Move X0, [X0+3032]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2332], W8
	028 Compare X20, 0
	029 JumpIfEqual {91}
	030 Move X21, [X19+168]
	031 Move X0, X20
	032 Move X1, X31
	033 Call SelectEnterEventArgs.get_interactableObject, X0
	034 Compare X21, 0
	035 JumpIfEqual {91}
	036 Move X8, 0x60A000
	037 Move X8, [X8+3024]
	038 Move X22, 0x60A000
	039 Move X1, X0
	040 Move X0, X21
	041 Move X2, [X8]
	042 Move X22, [X22+3032]
	043 Call 0x2D58DD8, X0, X1
	044 Move X0, X20
	045 Move X1, X31
	046 Call SelectEnterEventArgs.get_interactableObject, X0
	047 Move X1, [X22]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {59}
	051 Move X1, X0
	052 Move X0, [X19+248]
	053 Compare X0, 0
	054 JumpIfEqual {91}
	055 Move X8, 0x60A000
	056 Move X8, [X8+3016]
	057 Move X2, [X8]
	058 Call 0x2D58DD8, X0, X1
	059 Move X0, [X19+168]
	060 Compare X0, 0
	061 JumpIfEqual {91}
	062 Move X8, 0x60A000
	063 Move X8, [X8+2656]
	064 Move X1, [X8]
	065 Call 0x2D58B54, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X20
	068 Move X1, X31
	069 Call SelectEnterEventArgs.get_interactableObject, X0
	070 Move [X19+176], X0
	071 Move X0, X20
	072 Move X1, X31
	073 Call SelectEnterEventArgs.get_interactableObject, X0
	074 Move X1, X0
	075 Move X0, X19
	076 Call XRBaseInteractor.CaptureAttachPose, X0, X1
	077 Move X0, X20
	078 Move X1, X31
	079 Call BaseInteractionEventArgs.get_interactable, X0
	080 Move X8, [X19]
	081 Move X1, X0
	082 Move X0, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X3, [X8+1688]
	086 Move X2, [X8+1696]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 CallNoReturn X3
	091 Call 0x1C17F20

Method: System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B54A7C LDR X8, [X8 + 0xC8]
	0x03B54A80 LDR X9, [X0]
	0x03B54A84 LDR X8, [X8]
	0x03B54A88 LDRB W11, [X9 + 0x130]
	0x03B54A8C LDRB W10, [X8 + 0x130]
	0x03B54A90 CMP W11, W10
	0x03B54A94 B.CC 0x3B54ACC
	0x03B54A98 LDR X9, [X9 + 0xC8]
	0x03B54A9C ADD X9, X9, X10, 0x3, LSL
	0x03B54AA0 LDUR X9, [X9 - 0x8]
	0x03B54AA4 CMP X9, X8
	0x03B54AA8 B.NE 0x3B54ACC
	0x03B54AAC MOV W1, W31
	0x03B54AB0 MOV X2, X31
	0x03B54AB4 STR X0, [X19 + 0x2C8]
	0x03B54AB8 BL 0x3C8F748
	0x03B54ABC MOVZ W8, 0x1
	0x03B54AC0 STRB W8, [X19 + 0x2C0]
	0x03B54AC4 B 0x3B54B3C
	0x03B54AC8 CBZ X20, 0x3B54B50
	0x03B54ACC LDR W8, [X20 + 0x18]
	0x03B54AD0 CMP W8, 0x1
	0x03B54AD4 B.LT 0x3B54B0C
	0x03B54AD8 MOV W21, W31
	0x03B54ADC CMP W21, W8
	0x03B54AE0 B.CS 0x3B54B4C
	0x03B54AE4 ADD X8, X20, W21, 0x3, SXTW
	0x03B54AE8 LDR X0, [X8 + 0x20]
	0x03B54AEC CBZ X0, 0x3B54B50
	0x03B54AF0 MOV X1, X31
	0x03B54AF4 BL 0x3C8F78C
	0x03B54AF8 TBNZ X0, 0x0, 0x3B54B3C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88F000
	006 Move W8, [X21+2333]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x607000
	014 Move X0, [X0+1000]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2333], W8
	018 Move X0, [X19+128]
	019 Compare X0, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x607000
	022 Move X8, [X8+1000]
	023 Move X1, X20
	024 Move X2, [X8]
	025 Call UnityEvent`1<Object>.Invoke, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {41}
	028 Move X0, X20
	029 Move X1, X31
	030 Call BaseInteractionEventArgs.get_interactable, X0
	031 Move X8, [X19]
	032 Move X1, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, [X8+1704]
	037 Move X2, [X8+1712]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Call 0x1C17F20

Method: System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B519B4 ADRP X19, 0x609000
	0x03B519B8 ADRP X20, 0x609000
	0x03B519BC LDRB W8, [X21 + 0x8F4]
	0x03B519C0 LDR X22, [X22 + 0xCC8]
	0x03B519C4 LDR X19, [X19 + 0xCD0]
	0x03B519C8 LDR X20, [X20 + 0x3A8]
	0x03B519CC TBNZ X8, 0x0, 0x3B519FC
	0x03B519D0 ADRP X0, 0x609000
	0x03B519D4 LDR X0, [X0 + 0xCD0]
	0x03B519D8 BL 0x1C16CF4
	0x03B519DC ADRP X0, 0x609000
	0x03B519E0 LDR X0, [X0 + 0xCC8]
	0x03B519E4 BL 0x1C16CF4
	0x03B519E8 ADRP X0, 0x609000
	0x03B519EC LDR X0, [X0 + 0x3A8]
	0x03B519F0 BL 0x1C16CF4
	0x03B519F4 MOVZ W8, 0x1
	0x03B519F8 STRB W8, [X21 + 0x8F4]
	0x03B519FC LDR X0, [X22]
	0x03B51A00 BL 0x1C16F10
	0x03B51A04 LDR X1, [X19]
	0x03B51A08 MOV X19, X0
	0x03B51A0C BL 0x301B7C4
	0x03B51A10 LDR X8, [X20]
	0x03B51A14 LDP X22, X21, [X31 + 0x10]
	0x03B51A18 LDR X8, [X8 + 0xB8]
	0x03B51A1C STR X19, [X8]
	0x03B51A20 LDP X20, X19, [X31 + 0x20]
	0x03B51A24 LDR X30, [X31], #0x30
	0x03B51A28 RET
	0x03B51A2C MOV X1, X31
	0x03B51A30 B 0x3C32E90
	0x03B51A34 STR X30, [X31 - 0x20]!
	0x03B51A38 STP X20, X19, [X31 + 0x10]
	0x03B51A3C ADRP X19, 0x891000
	0x03B51A40 ADRP X20, 0x609000
	0x03B51A44 LDRB W8, [X19 + 0x8F5]
	0x03B51A48 LDR X20, [X20 + 0xC18]
	0x03B51A4C TBNZ X8, 0x0, 0x3B51A64
	0x03B51A50 ADRP X0, 0x609000
	0x03B51A54 LDR X0, [X0 + 0xC18]
	0x03B51A58 BL 0x1C16CF4
	0x03B51A5C MOVZ W8, 0x1
	0x03B51A60 STRB W8, [X19 + 0x8F5]
	0x03B51A64 LDR X0, [X20]
	0x03B51A68 BL 0x1C16F10
	0x03B51A6C MOV X1, X31
	0x03B51A70 MOV X19, X0
	0x03B51A74 BL 0x33BDD8C
	0x03B51A78 LDR X8, [X20]
	0x03B51A7C LDR X8, [X8 + 0xB8]
	0x03B51A80 STR X19, [X8]
	0x03B51A84 LDP X20, X19, [X31 + 0x10]
	0x03B51A88 LDR X30, [X31], #0x20
	0x03B51A8C RET
	0x03B51A90 MOV X1, X31
	0x03B51A94 B 0x33BDD8C
	0x03B51A98 STR X30, [X31 - 0x20]!
	0x03B51A9C STP X20, X19, [X31 + 0x10]
	0x03B51AA0 ADRP X19, 0x891000
	0x03B51AA4 ADRP X20, 0x609000
	0x03B51AA8 LDRB W8, [X19 + 0x8F6]
	0x03B51AAC LDR X20, [X20 + 0xCD8]
	0x03B51AB0 TBNZ X8, 0x0, 0x3B51AC8
	0x03B51AB4 ADRP X0, 0x609000
	0x03B51AB8 LDR X0, [X0 + 0xCD8]
	0x03B51ABC BL 0x1C16CF4
	0x03B51AC0 MOVZ W8, 0x1
	0x03B51AC4 STRB W8, [X19 + 0x8F6]
	0x03B51AC8 LDR X0, [X20]
	0x03B51ACC BL 0x1C16F10
	0x03B51AD0 MOV X1, X31
	0x03B51AD4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x892000
	006 Move W8, [X21+2334]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x60A000
	014 Move X0, [X0+3040]
	015 Call 0x1C17CF4
	016 Move X0, 0x60A000
	017 Move X0, [X0+3048]
	018 Call 0x1C17CF4
	019 Move X0, 0x60A000
	020 Move X0, [X0+3056]
	021 Call 0x1C17CF4
	022 Move X0, 0x60A000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2334], W8
	027 Compare X20, 0
	028 JumpIfEqual {87}
	029 Move X21, [X19+168]
	030 Move X0, X20
	031 Move X1, X31
	032 Call SelectExitEventArgs.get_interactableObject, X0
	033 Compare X21, 0
	034 JumpIfEqual {87}
	035 Move X8, 0x60A000
	036 Move X8, [X8+3048]
	037 Move X1, X0
	038 Move X0, X21
	039 Move X2, [X8]
	040 Call 0x2D58E88, X0, X1
	041 Move X0, [X19+248]
	042 Compare X0, 0
	043 JumpIfEqual {87}
	044 Move X8, 0x60A000
	045 Move X8, [X8+3056]
	046 Move X1, [X8]
	047 Call 0x2D58B54, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X21, 0x60A000
	050 Move X21, [X21+3032]
	051 Move X0, X20
	052 Move X1, X31
	053 Call SelectExitEventArgs.get_interactableObject, X0
	054 Move X1, [X21]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {74}
	058 Move X21, X0
	059 Move X0, X19
	060 Move X1, X21
	061 Call XRBaseInteractor.IsHovering, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {74}
	066 Move X0, [X19+248]
	067 Compare X0, 0
	068 JumpIfEqual {87}
	069 Move X8, 0x60A000
	070 Move X8, [X8+3040]
	071 Move X1, X21
	072 Move X2, [X8]
	073 Call 0x2D58E88, X0, X1
	074 Move X0, X20
	075 Move X1, X31
	076 Call BaseInteractionEventArgs.get_interactable, X0
	077 Move X8, [X19]
	078 Move X1, X0
	079 Move X0, X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X3, [X8+1720]
	083 Move X2, [X8+1728]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 CallNoReturn X3
	087 Call 0x1C17F20

Method: System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B54AFC LDR W8, [X20 + 0x18]
	0x03B54B00 ADD W21, W21, 0x1
	0x03B54B04 CMP W21, W8
	0x03B54B08 B.LT 0x3B54ADC
	0x03B54B0C ADRP X8, 0x59F000
	0x03B54B10 LDR X8, [X8 + 0xA28]
	0x03B54B14 LDR X0, [X8]
	0x03B54B18 LDR W8, [X0 + 0xE0]
	0x03B54B1C CBNZ W8, 0x3B54B24
	0x03B54B20 BL 0x1C16DFC
	0x03B54B24 ADRP X8, 0x606000
	0x03B54B28 LDR X8, [X8 + 0xDE0]
	0x03B54B2C MOV X1, X19
	0x03B54B30 MOV X2, X31
	0x03B54B34 LDR X0, [X8]
	0x03B54B38 BL 0x3C06B0C
	0x03B54B3C LDP X20, X19, [X31 + 0x20]
	0x03B54B40 LDP X30, X21, [X31 + 0x10]
	0x03B54B44 ADD X31, X31, 0x30
	0x03B54B48 RET
	0x03B54B4C BL 0x1C16F28
	0x03B54B50 BL 0x1C16F20
	0x03B54B54 STP X30, X23, [X31 - 0x30]!
	0x03B54B58 STP X22, X21, [X31 + 0x10]
	0x03B54B5C STP X20, X19, [X31 + 0x20]
	0x03B54B60 ADRP X20, 0x88E000
	0x03B54B64 ADRP X22, 0x606000
	0x03B54B68 ADRP X21, 0x606000
	0x03B54B6C LDRB W8, [X20 + 0x92D]
	0x03B54B70 LDR X22, [X22 + 0xDE8]
	0x03B54B74 LDR X21, [X21 + 0xDF0]
	0x03B54B78 MOV X19, X0
	0x03B54B7C TBNZ X8, 0x0, 0x3B54BAC
	0x03B54B80 ADRP X0, 0x606000
	0x03B54B84 LDR X0, [X0 + 0xDE8]
	0x03B54B88 BL 0x1C16CF4
	0x03B54B8C ADRP X0, 0x606000
	0x03B54B90 LDR X0, [X0 + 0xDF0]
	0x03B54B94 BL 0x1C16CF4
	0x03B54B98 ADRP X0, 0x606000
	0x03B54B9C LDR X0, [X0 + 0xDF8]
	0x03B54BA0 BL 0x1C16CF4
	0x03B54BA4 MOVZ W8, 0x1
	0x03B54BA8 STRB W8, [X20 + 0x92D]
	0x03B54BAC MOV X0, X19
	0x03B54BB0 BL 0x3B52688
	0x03B54BB4 MOV X0, X19
	0x03B54BB8 BL 0x3B51E98
	0x03B54BBC LDR X0, [X22]
	0x03B54BC0 LDR X20, [X19 + 0x2B0]
	0x03B54BC4 BL 0x1C16F10
	0x03B54BC8 LDR X2, [X21]
	0x03B54BCC MOV X1, X19
	0x03B54BD0 MOV X3, X31
	0x03B54BD4 MOV X21, X0
	0x03B54BD8 BL 0x2A6B948
	0x03B54BDC CBZ X20, 0x3B54C68
	0x03B54BE0 ADRP X23, 0x606000
	0x03B54BE4 LDR X23, [X23 + 0xDF8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88F000
	006 Move W8, [X21+2335]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x607000
	014 Move X0, [X0+3408]
	015 Call 0x1C17CF4
	016 Move X0, 0x607000
	017 Move X0, [X0+2656]
	018 Call 0x1C17CF4
	019 Move X0, 0x607000
	020 Move X0, [X0+1024]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2335], W8
	024 Move X0, [X19+136]
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move X8, 0x607000
	028 Move X8, [X8+1024]
	029 Move X1, X20
	030 Move X2, [X8]
	031 Call UnityEvent`1<Object>.Invoke, X0, X1
	032 Compare X20, 0
	033 JumpIfEqual {75}
	034 Move X0, X20
	035 Move X1, X31
	036 Call BaseInteractionEventArgs.get_interactable, X0
	037 Move X8, [X19]
	038 Move X1, X0
	039 Move X0, X19
	040 Move X9, [X8+1736]
	041 Move X2, [X8+1744]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X0, [X19+168]
	044 Compare X0, 0
	045 JumpIfEqual {75}
	046 Move X8, 0x607000
	047 Move X8, [X8+2656]
	048 Move X1, [X8]
	049 Call 0x2D58B54, X0
	050 Compare W0, 0
	051 JumpIfEqual {57}
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Move X0, [X19+232]
	058 Move [X19+176], X31
	059 Compare X0, 0
	060 JumpIfEqual {75}
	061 Move X20, 0x607000
	062 Move X20, [X20+3408]
	063 Move X1, [X20]
	064 Call Dictionary`2<Object, Pose>.Clear, X0
	065 Move X0, [X19+240]
	066 Compare X0, 0
	067 JumpIfEqual {75}
	068 Move X1, [X20]
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call Dictionary`2<Object, Pose>.Clear, X0
	074 Return 
	075 Call 0x1C17F20

Method: System.Void ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B54BE8 MOV X0, X20
	0x03B54BEC MOV X1, X21
	0x03B54BF0 MOV X2, X31
	0x03B54BF4 BL 0x3B900F0
	0x03B54BF8 LDR X0, [X22]
	0x03B54BFC LDR X20, [X19 + 0x2B0]
	0x03B54C00 BL 0x1C16F10
	0x03B54C04 LDR X2, [X23]
	0x03B54C08 MOV X1, X19
	0x03B54C0C MOV X3, X31
	0x03B54C10 MOV X21, X0
	0x03B54C14 BL 0x2A6B948
	0x03B54C18 CBZ X20, 0x3B54C68
	0x03B54C1C MOV X0, X20
	0x03B54C20 MOV X1, X21
	0x03B54C24 MOV X2, X31
	0x03B54C28 BL 0x3B90250
	0x03B54C2C MOV X0, X19
	0x03B54C30 BL 0x3B54C6C
	0x03B54C34 LDRB W8, [X19 + 0x2C0]
	0x03B54C38 CBZ W8, 0x3B54C4C
	0x03B54C3C LDP X20, X19, [X31 + 0x20]
	0x03B54C40 LDP X22, X21, [X31 + 0x10]
	0x03B54C44 LDP X30, X23, [X31], #0x30
	0x03B54C48 RET
	0x03B54C4C LDR X1, [X19 + 0x2B8]
	0x03B54C50 MOV X0, X19
	0x03B54C54 LDP X20, X19, [X31 + 0x20]
	0x03B54C58 LDP X22, X21, [X31 + 0x10]
	0x03B54C5C MOV X2, X31
	0x03B54C60 LDP X30, X23, [X31], #0x30
	0x03B54C64 B 0x3C366FC
	0x03B54C68 BL 0x1C16F20
	0x03B54C6C STR X30, [X31 - 0x20]!
	0x03B54C70 STP X20, X19, [X31 + 0x10]
	0x03B54C74 ADRP X20, 0x88E000
	0x03B54C78 LDRB W8, [X20 + 0x939]
	0x03B54C7C MOV X19, X0
	0x03B54C80 TBNZ X8, 0x0, 0x3B54CA4
	0x03B54C84 ADRP X0, 0x606000
	0x03B54C88 LDR X0, [X0 + 0x788]
	0x03B54C8C BL 0x1C16CF4
	0x03B54C90 ADRP X0, 0x606000
	0x03B54C94 LDR X0, [X0 + 0xE00]
	0x03B54C98 BL 0x1C16CF4
	0x03B54C9C MOVZ W8, 0x1
	0x03B54CA0 STRB W8, [X20 + 0x939]
	0x03B54CA4 LDR X8, [X19 + 0x2A0]
	0x03B54CA8 CBZ X8, 0x3B54D38
	0x03B54CAC LDP W2, W9, [X8 + 0x18]
	0x03B54CB0 ADD W9, W9, 0x1
	0x03B54CB4 CMP W2, 0x1
	0x03B54CB8 STP W31, W9, [X8 + 0x18]
	0x03B54CBC B.LT 0x3B54CD0
	0x03B54CC0 LDR X0, [X8 + 0x10]
	0x03B54CC4 MOV W1, W31
	0x03B54CC8 MOV X3, X31
	0x03B54CCC BL 0x339FA34
	0x03B54CD0 LDR X8, [X19 + 0x2F8]
	0x03B54CD4 CBZ X8, 0x3B54D38
	0x03B54CD8 LDP W2, W9, [X8 + 0x18]
	0x03B54CDC ADD W9, W9, 0x1
	0x03B54CE0 CMP W2, 0x1
	0x03B54CE4 STP W31, W9, [X8 + 0x18]
	0x03B54CE8 B.LT 0x3B54CFC
	0x03B54CEC LDR X0, [X8 + 0x10]
	0x03B54CF0 MOV W1, W31
	0x03B54CF4 MOV X3, X31
	0x03B54CF8 BL 0x339FA34
	0x03B54CFC LDR X0, [X19 + 0x2A8]
	0x03B54D00 MOVZ W8, 0x1
	0x03B54D04 STRH W8, [X19 + 0x2F0]
	0x03B54D08 CBZ X0, 0x3B54D38
	0x03B54D0C ADRP X8, 0x606000
	0x03B54D10 LDR X8, [X8 + 0x788]
	0x03B54D14 LDR X1, [X8]
	0x03B54D18 BL 0x2DBE450
	0x03B54D1C LDR X0, [X19 + 0x2B0]
	0x03B54D20 CBZ X0, 0x3B54D38
	0x03B54D24 LDR X1, [X19 + 0x2A8]
	0x03B54D28 LDP X20, X19, [X31 + 0x10]
	0x03B54D2C MOV X2, X31
	0x03B54D30 LDR X30, [X31], #0x20
	0x03B54D34 B 0x3B90FF0
	0x03B54D38 BL 0x1C16F20
	0x03B54D3C STP X30, X23, [X31 - 0x30]!
	0x03B54D40 STP X22, X21, [X31 + 0x10]
	0x03B54D44 STP X20, X19, [X31 + 0x20]
	0x03B54D48 ADRP X20, 0x88E000
	0x03B54D4C ADRP X22, 0x606000
	0x03B54D50 ADRP X21, 0x606000
	0x03B54D54 LDRB W8, [X20 + 0x92E]
	0x03B54D58 LDR X22, [X22 + 0xDE8]
	0x03B54D5C LDR X21, [X21 + 0xDF0]
	0x03B54D60 MOV X19, X0
	0x03B54D64 TBNZ X8, 0x0, 0x3B54D94
	0x03B54D68 ADRP X0, 0x606000
	0x03B54D6C LDR X0, [X0 + 0xDE8]
	0x03B54D70 BL 0x1C16CF4
	0x03B54D74 ADRP X0, 0x606000
	0x03B54D78 LDR X0, [X0 + 0xDF0]
	0x03B54D7C BL 0x1C16CF4
	0x03B54D80 ADRP X0, 0x606000
	0x03B54D84 LDR X0, [X0 + 0xDF8]
	0x03B54D88 BL 0x1C16CF4
	0x03B54D8C MOVZ W8, 0x1
	0x03B54D90 STRB W8, [X20 + 0x92E]
	0x03B54D94 MOV X0, X19
	0x03B54D98 BL 0x3B5272C
	0x03B54D9C LDR X0, [X22]
	0x03B54DA0 LDR X20, [X19 + 0x2B0]
	0x03B54DA4 BL 0x1C16F10
	0x03B54DA8 LDR X2, [X21]
	0x03B54DAC MOV X1, X19
	0x03B54DB0 MOV X3, X31
	0x03B54DB4 MOV X21, X0
	0x03B54DB8 BL 0x2A6B948
	0x03B54DBC CBZ X20, 0x3B54E48
	0x03B54DC0 ADRP X23, 0x606000
	0x03B54DC4 LDR X23, [X23 + 0xDF8]
	0x03B54DC8 MOV X0, X20
	0x03B54DCC MOV X1, X21
	0x03B54DD0 MOV X2, X31
	0x03B54DD4 BL 0x3B901A0
	0x03B54DD8 LDR X0, [X22]
	0x03B54DDC LDR X20, [X19 + 0x2B0]
	0x03B54DE0 BL 0x1C16F10
	0x03B54DE4 LDR X2, [X23]
	0x03B54DE8 MOV X1, X19
	0x03B54DEC MOV X3, X31
	0x03B54DF0 MOV X21, X0
	0x03B54DF4 BL 0x2A6B948
	0x03B54DF8 CBZ X20, 0x3B54E48
	0x03B54DFC MOV X0, X20
	0x03B54E00 MOV X1, X21
	0x03B54E04 MOV X2, X31
	0x03B54E08 BL 0x3B90300
	0x03B54E0C MOV X0, X19
	0x03B54E10 BL 0x3B54C6C
	0x03B54E14 LDRB W8, [X19 + 0x2C0]
	0x03B54E18 CBZ W8, 0x3B54E2C
	0x03B54E1C LDP X20, X19, [X31 + 0x20]
	0x03B54E20 LDP X22, X21, [X31 + 0x10]
	0x03B54E24 LDP X30, X23, [X31], #0x30
	0x03B54E28 RET
	0x03B54E2C LDR X1, [X19 + 0x2B8]
	0x03B54E30 MOV X0, X19
	0x03B54E34 LDP X20, X19, [X31 + 0x20]
	0x03B54E38 LDP X22, X21, [X31 + 0x10]
	0x03B54E3C MOV X2, X31
	0x03B54E40 LDP X30, X23, [X31], #0x30
	0x03B54E44 B 0x3C36834
	0x03B54E48 BL 0x1C16F20
	0x03B54E4C STR X30, [X31 - 0x10]!
	0x03B54E50 LDRB W8, [X0 + 0x2C0]
	0x03B54E54 CBZ W8, 0x3B54E60
	0x03B54E58 LDR X30, [X31], #0x10
	0x03B54E5C RET
	0x03B54E60 LDR X0, [X0 + 0x2B0]
	0x03B54E64 CBZ X0, 0x3B54E74
	0x03B54E68 MOV X2, X31
	0x03B54E6C LDR X30, [X31], #0x10
	0x03B54E70 B 0x3B903C0
	0x03B54E74 BL 0x1C16F20
	0x03B54E78 STP X30, X21, [X31 - 0x20]!
	0x03B54E7C STP X20, X19, [X31 + 0x10]
	0x03B54E80 ADRP X21, 0x88E000
	0x03B54E84 LDRB W8, [X21 + 0x92F]
	0x03B54E88 MOV X19, X1
	0x03B54E8C MOV X20, X0
	0x03B54E90 TBNZ X8, 0x0, 0x3B54EA8
	0x03B54E94 ADRP X0, 0x606000
	0x03B54E98 LDR X0, [X0 + 0x780]
	0x03B54E9C BL 0x1C16CF4
	0x03B54EA0 MOVZ W8, 0x1
	0x03B54EA4 STRB W8, [X21 + 0x92F]
	0x03B54EA8 LDRB W8, [X20 + 0x2C0]
	0x03B54EAC CBZ W8, 0x3B54EBC
	0x03B54EB0 LDP X20, X19, [X31 + 0x10]
	0x03B54EB4 LDP X30, X21, [X31], #0x20
	0x03B54EB8 RET
	0x03B54EBC LDR X0, [X20 + 0x2A8]
	0x03B54EC0 CBZ X0, 0x3B54EE0
	0x03B54EC4 ADRP X8, 0x606000
	0x03B54EC8 LDR X8, [X8 + 0x780]
	0x03B54ECC MOV X1, X19
	0x03B54ED0 LDP X20, X19, [X31 + 0x10]
	0x03B54ED4 LDR X2, [X8]
	0x03B54ED8 LDP X30, X21, [X31], #0x20
	0x03B54EDC B 0x2DBEF30
	0x03B54EE0 BL 0x1C16F20
	0x03B54EE4 STR X30, [X31 - 0x10]!
	0x03B54EE8 LDRB W8, [X0 + 0x2C0]
	0x03B54EEC CBZ W8, 0x3B54EF8
	0x03B54EF0 LDR X30, [X31], #0x10
	0x03B54EF4 RET
	0x03B54EF8 LDR X0, [X0 + 0x2B0]
	0x03B54EFC CBZ X0, 0x3B54F0C
	0x03B54F00 MOV X2, X31
	0x03B54F04 LDR X30, [X31], #0x10
	0x03B54F08 B 0x3B904F8
	0x03B54F0C BL 0x1C16F20
	0x03B54F10 STR X30, [X31 - 0x20]!
	0x03B54F14 STP X20, X19, [X31 + 0x10]
	0x03B54F18 MOV W19, W1
	0x03B54F1C MOV X1, X31
	0x03B54F20 MOV X20, X0
	0x03B54F24 BL 0x33BDD8C
	0x03B54F28 STR W19, [X20 + 0x10]
	0x03B54F2C LDP X20, X19, [X31 + 0x10]
	0x03B54F30 LDR X30, [X31], #0x20
	0x03B54F34 RET
	0x03B54F38 STR X30, [X31 - 0x20]!
	0x03B54F3C STP X20, X19, [X31 + 0x10]
	0x03B54F40 MOV W20, W1
	0x03B54F44 MOV X19, X0
	0x03B54F48 BL 0x3B4F4B8
	0x03B54F4C CMP W20, 0x1
	0x03B54F50 B.NE 0x3B54F6C
	0x03B54F54 LDRB W8, [X19 + 0x2C0]
	0x03B54F58 CBZ W8, 0x3B54F6C
	0x03B54F5C MOV X0, X19
	0x03B54F60 LDP X20, X19, [X31 + 0x10]
	0x03B54F64 LDR X30, [X31], #0x20
	0x03B54F68 B 0x3B54F78
	0x03B54F6C LDP X20, X19, [X31 + 0x10]
	0x03B54F70 LDR X30, [X31], #0x20
	0x03B54F74 RET
	0x03B54F78 SUB X31, X31, 0xC0
	0x03B54F7C STP D15, D14, [X31 + 0x40]
	0x03B54F80 STP D13, D12, [X31 + 0x50]
	0x03B54F84 STP D11, D10, [X31 + 0x60]
	0x03B54F88 STP D9, D8, [X31 + 0x70]
	0x03B54F8C STR X30, [X31 + 0x80]
	0x03B54F90 STP X24, X23, [X31 + 0x90]
	0x03B54F94 STP X22, X21, [X31 + 0xA0]
	0x03B54F98 STP X20, X19, [X31 + 0xB0]
	0x03B54F9C ADRP X20, 0x88E000
	0x03B54FA0 LDRB W8, [X20 + 0x932]
	0x03B54FA4 MOV X19, X0
	0x03B54FA8 TBNZ X8, 0x0, 0x3B54FCC
	0x03B54FAC ADRP X0, 0x606000
	0x03B54FB0 LDR X0, [X0 + 0x780]
	0x03B54FB4 BL 0x1C16CF4
	0x03B54FB8 ADRP X0, 0x606000
	0x03B54FBC LDR X0, [X0 + 0x788]
	0x03B54FC0 BL 0x1C16CF4
	0x03B54FC4 MOVZ W8, 0x1
	0x03B54FC8 STRB W8, [X20 + 0x932]
	0x03B54FCC STR W31, [X31 + 0x38]
	0x03B54FD0 STR X31, [X31 + 0x30]
	0x03B54FD4 STR W31, [X31 + 0x28]
	0x03B54FD8 STR X31, [X31 + 0x20]
	0x03B54FDC STR W31, [X31 + 0x18]
	0x03B54FE0 STR X31, [X31 + 0x10]
	0x03B54FE4 STR X31, [X31 + 0x88]
	0x03B54FE8 LDR X0, [X19 + 0x2A8]
	0x03B54FEC STRB W31, [X19 + 0x2F1]
	0x03B54FF0 CBZ X0, 0x3B5528C
	0x03B54FF4 ADRP X8, 0x606000
	0x03B54FF8 LDR X8, [X8 + 0x788]
	0x03B54FFC LDR X1, [X8]
	0x03B55000 BL 0x2DBE450
	0x03B55004 LDR X8, [X19]
	0x03B55008 MOV X0, X19
	0x03B5500C MOV X1, X31
	0x03B55010 LDR X9, [X8 + 0x4B8]
	0x03B55014 LDR X2, [X8 + 0x4C0]
	0x03B55018 BLR X9
	0x03B5501C LDR X8, [X19 + 0x2C8]
	0x03B55020 CBZ X8, 0x3B5528C
	0x03B55024 MOV X20, X0
	0x03B55028 MOV X0, X8
	0x03B5502C MOV X1, X31
	0x03B55030 BL 0x3C90084
	0x03B55034 CBZ X20, 0x3B5528C
	0x03B55038 MOV X0, X20
	0x03B5503C MOV X1, X31
	0x03B55040 BL 0x3C3DE4C
	0x03B55044 ADD X8, X19, 0x2D4
	0x03B55048 LDR W9, [X8 + 0x8]
	0x03B5504C LDR X8, [X8]
	0x03B55050 STP S0, S1, [X31 + 0x20]
	0x03B55054 STR S2, [X31 + 0x28]
	0x03B55058 STR W9, [X31 + 0x38]
	0x03B5505C STR X8, [X31 + 0x30]
	0x03B55060 LDR X0, [X19 + 0x2C8]
	0x03B55064 CBZ X0, 0x3B5528C
	0x03B55068 MOV X1, X31
	0x03B5506C MOV V8.16B, V0.16B
	0x03B55070 MOV V10.16B, V1.16B
	0x03B55074 MOV V9.16B, V2.16B
	0x03B55078 BL 0x3C90124
	0x03B5507C LDR X0, [X19 + 0x2C8]
	0x03B55080 CBZ X0, 0x3B5528C
	0x03B55084 MOV X1, X31
	0x03B55088 MOV V11.16B, V0.16B
	0x03B5508C BL 0x3C32E90
	0x03B55090 CBZ X0, 0x3B5528C
	0x03B55094 MOV X1, X31

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x88F000
	013 Move X20, 0x607000
	014 Move W8, [X21+2336]
	015 Move X20, [X20+872]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x607000
	022 Move X0, [X0+1088]
	023 Call 0x1C17CF4
	024 Move X0, 0x607000
	025 Move X0, [X0+3416]
	026 Call 0x1C17CF4
	027 Move X0, 0x607000
	028 Move X0, [X0+3424]
	029 Call 0x1C17CF4
	030 Move X0, 0x607000
	031 Move X0, [X0+3056]
	032 Call 0x1C17CF4
	033 Move X0, 0x607000
	034 Move X0, [X0+2608]
	035 Call 0x1C17CF4
	036 Move X0, 0x607000
	037 Move X0, [X0+2656]
	038 Call 0x1C17CF4
	039 Move X0, 0x607000
	040 Move X0, [X0+3432]
	041 Call 0x1C17CF4
	042 Move X0, 0x607000
	043 Move X0, [X0+3440]
	044 Call 0x1C17CF4
	045 Move X0, 0x607000
	046 Move X0, [X0+3448]
	047 Call 0x1C17CF4
	048 Move X0, 0x607000
	049 Move X0, [X0+3032]
	050 Call 0x1C17CF4
	051 Move X0, 0x607000
	052 Move X0, [X0+872]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+2336], W8
	056 Move X0, [X20]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X20]
	062 Move X8, [X0+184]
	063 Move X1, X31
	064 Move X2, X31
	065 Move X20, [X8]
	066 Move X0, X20
	067 Call IntPtr.op_Inequality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {75}
	072 Move X0, X20
	073 Move X1, X31
	074 Call ProfilerUnsafeUtility.BeginSample, X0
	075 Move X0, [X19+256]
	076 Compare X0, 0
	077 JumpIfEqual {278}
	078 Move X8, 0x607000
	079 Move X8, [X8+3416]
	080 Move X1, [X8]
	081 Call Dictionary`2<Object, Single>.Clear, X0
	082 Move X0, [X19+168]
	083 Compare X0, 0
	084 JumpIfEqual {281}
	085 Move X8, 0x607000
	086 Move X8, [X8+2656]
	087 Move X1, [X8]
	088 Call 0x2D58B54, X0
	089 Move X24, 0x607000
	090 Move X25, 0x607000
	091 Move X24, [X24+3032]
	092 Move X25, [X25+3424]
	093 Move W21, W0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X26, 0x607000
	096 Move X26, [X26+3440]
	097 Move W22, W31
	098 Move S9, W31
	099 Move X0, [X19+168]
	100 Compare X0, 0
	101 JumpIfEqual {271}
	102 Move X2, [X26]
	103 Move W1, W22
	104 Call 0x2D58B78, X0, X1
	105 Move X1, [X24]
	106 Move X23, X0
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {111}
	110 Move V8, V9
	111 Move X0, [X19+256]
	112 Compare X0, 0
	113 JumpIfEqual {276}
	114 Move X2, [X25]
	115 Move S8, 1
	116 Move S0, 1
	117 Move X1, X23
	118 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	119 Add W22, W22, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move V9, V8
	122 Move S8, W31
	123 Move X0, [X19+160]
	124 Compare X0, 0
	125 JumpIfEqual {282}
	126 Move X8, 0x607000
	127 Move X8, [X8+2608]
	128 Move X1, [X8]
	129 Call 0x2D58B54, X0
	130 Move W21, W0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X26, 0x607000
	133 Move X26, [X26+3432]
	134 Move W22, W31
	135 Move X0, [X19+160]
	136 Compare X0, 0
	137 JumpIfEqual {272}
	138 Move X2, [X26]
	139 Move W1, W22
	140 Call 0x2D58B78, X0, X1
	141 Move X1, [X24]
	142 Move X23, X0
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfNotEqual {160}
	146 Move X0, X19
	147 Move X1, X23
	148 Call XRBaseInteractor.IsSelecting, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {160}
	153 Move X0, [X19+256]
	154 Compare X0, 0
	155 JumpIfEqual {277}
	156 Move X2, [X25]
	157 Move S0, W31
	158 Move X1, X23
	159 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	160 Add W22, W22, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, [X19+248]
	163 Compare X0, 0
	164 JumpIfEqual {283}
	165 Move X8, 0x607000
	166 Move X8, [X8+3056]
	167 Move X1, [X8]
	168 Call 0x2D58B54, X0
	169 Move W21, W0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X26, 0x607000
	172 Move X26, [X26+3448]
	173 Move W22, W31
	174 Move V9, V8
	175 Move X0, [X19+248]
	176 Compare X0, 0
	177 JumpIfEqual {274}
	178 Move X2, [X26]
	179 Move W1, W22
	180 Call 0x2D58B78, X0, X1
	181 Move X23, X0
	182 Compare X0, 0
	183 JumpIfEqual {275}
	184 Move X8, [X23]
	185 Move X1, [X24]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 1
	196 Move X0, X23
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 1
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X2, [X0+8]
	204 Move X0, X23
	205 Move X1, X19
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X0, [X19+256]
	208 Compare X0, 0
	209 JumpIfEqual {273}
	210 Move X2, [X25]
	211 Move V8, V0
	212 Move X1, X23
	213 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	214 NotImplemented "Instruction FCMP not yet implemented."
	215 Add W22, W22, 1
	216 NotImplemented "Instruction FCSEL not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X21, X31
	219 Move W22, 10
	220 Move V8, V9
	221 Move X21, X31
	222 Move W22, 10
	223 Move X0, X20
	224 Move X1, X31
	225 Move X2, X31
	226 Call IntPtr.op_Inequality, X0, X1
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {234}
	231 Move X0, X20
	232 Move X1, X31
	233 Call ProfilerUnsafeUtility.EndSample, X0
	234 Compare X21, 0
	235 JumpIfNotEqual {279}
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Compare W22, 0
	238 JumpIfNotEqual {259}
	239 Move X0, [X19+224]
	240 Compare X0, 0
	241 JumpIfEqual {284}
	242 Move X8, 0x607000
	243 Move X8, [X8+1088]
	244 Move X20, [X31+80]
	245 Move X19, [X31+88]
	246 Move X22, [X31+64]
	247 Move X21, [X31+72]
	248 Move X24, [X31+48]
	249 Move X23, [X31+56]
	250 Move X1, [X8]
	251 Move X26, [X31+32]
	252 Move X25, [X31+40]
	253 Move X30, [X31+16]
	254 Move V0, V8
	255 Move D9, [X31+96]
	256 Move D8, [X31+104]
	257 Call BindableVariableBase`1<Single>.set_Value, X0, V0
	258 Return 
	259 Move X20, [X31+80]
	260 Move X19, [X31+88]
	261 Move X22, [X31+64]
	262 Move X21, [X31+72]
	263 Move X24, [X31+48]
	264 Move X23, [X31+56]
	265 Move X26, [X31+32]
	266 Move X25, [X31+40]
	267 Move X30, [X31+16]
	268 Move D9, [X31+96]
	269 Move D8, [X31+104]
	270 Return 
	271 Call 0x1C17F20
	272 Call 0x1C17F20
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Call 0x1C17F20
	279 Move X0, X21
	280 Call 0x1C17F18
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move S9, W31
	286 Move V9, V8
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Call 0x3EB2AD0
	289 Move X21, [X0]
	290 Call 0x3EB2AE0
	291 Move W22, W31
	292 Move X19, X0
	293 Move X21, X31
	294 Move X19, X0
	295 Move X0, X20
	296 Move X1, X31
	297 Move X2, X31
	298 Call IntPtr.op_Inequality, X0, X1
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {306}
	303 Move X0, X20
	304 Move X1, X31
	305 Call ProfilerUnsafeUtility.EndSample, X0
	306 Compare X21, 0
	307 JumpIfNotEqual {310}
	308 Move X0, X19
	309 Call 0x1D2D690
	310 Move X0, X21
	311 Call 0x1C17F18
	312 Call 0x1991590

Method: System.Void StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B55098 BL 0x3C40EA8
	0x03B5509C ADD X0, X31, 0x30
	0x03B550A0 ADD X1, X31, 0x20
	0x03B550A4 ADD X2, X31, 0x10
	0x03B550A8 ADD X3, X31, 0x8C
	0x03B550AC ADD X4, X31, 0x88
	0x03B550B0 MOV X5, X31
	0x03B550B4 FMUL S11, S11, S0
	0x03B550B8 BL 0x3B8C3C0
	0x03B550BC LDRB W8, [X19 + 0x2F0]
	0x03B550C0 ADD X20, X19, 0x2D0
	0x03B550C4 CBNZ W8, 0x3B551B0
	0x03B550C8 ADRP X8, 0xFFFFFFFFFCF95000
	0x03B550CC LDR V0, [X31 + 0x8C]
	0x03B550D0 LDR V1, [X8 + 0x410]
	0x03B550D4 FCMP S0, S1
	0x03B550D8 B.MI 0x3B551B0
	0x03B550DC LDR W0, [X19 + 0x294]
	0x03B550E0 LDP S12, S13, [X31 + 0x30]
	0x03B550E4 LDR V14, [X31 + 0x38]
	0x03B550E8 STP S8, S9, [X31 + 0x4]
	0x03B550EC LDP S15, S8, [X31 + 0x10]
	0x03B550F0 LDR V9, [X31 + 0x18]
	0x03B550F4 LDR X21, [X19 + 0x2E8]
	0x03B550F8 STR S10, [X31 + 0xC]
	0x03B550FC LDR V10, [X31 + 0x88]
	0x03B55100 MOV X1, X31
	0x03B55104 BL 0x3C35CB8
	0x03B55108 LDR W3, [X19 + 0x298]
	0x03B5510C MOV V5.16B, V8.16B
	0x03B55110 MOV V6.16B, V9.16B
	0x03B55114 LDP S8, S9, [X31 + 0x4]
	0x03B55118 MOV V7.16B, V10.16B
	0x03B5511C LDR V10, [X31 + 0xC]
	0x03B55120 MOV W2, W0
	0x03B55124 MOV X0, X20
	0x03B55128 MOV V0.16B, V12.16B
	0x03B5512C MOV V1.16B, V13.16B
	0x03B55130 MOV V2.16B, V14.16B
	0x03B55134 MOV V3.16B, V11.16B
	0x03B55138 MOV V4.16B, V15.16B
	0x03B5513C MOV X1, X21
	0x03B55140 MOV X4, X31
	0x03B55144 BL 0x3C8D8DC
	0x03B55148 CMP W0, 0x1
	0x03B5514C B.LT 0x3B55240
	0x03B55150 ADRP X24, 0x605000
	0x03B55154 LDR X24, [X24 + 0x780]
	0x03B55158 MOV X21, X31
	0x03B5515C MOV W22, W0
	0x03B55160 MOVZ W23, 0x20
	0x03B55164 LDR X8, [X19 + 0x2E8]
	0x03B55168 CBZ X8, 0x3B5528C
	0x03B5516C LDR W9, [X8 + 0x18]
	0x03B55170 CMP X21, X9
	0x03B55174 B.CS 0x3B55290
	0x03B55178 LDR X20, [X19 + 0x2A8]
	0x03B5517C ADD X0, X8, X23
	0x03B55180 MOV X1, X31
	0x03B55184 BL 0x3C8E5C0
	0x03B55188 CBZ X20, 0x3B5528C
	0x03B5518C LDR X2, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x88E000
	007 Move X21, 0x59F000
	008 Move W8, [X22+2337]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x59F000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x59F000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x606000
	023 Move X0, [X0+3456]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2337], W8
	027 Move X0, [X21]
	028 Move X21, [X19+48]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {60}
	041 Move X8, 0x59F000
	042 Move X8, [X8+2600]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X8, 0x606000
	049 Move X8, [X8+3456]
	050 Move X1, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X0, [X8]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call Debug.LogWarning, X0, X1
	059 Return 
	060 Move X0, [X19+48]
	061 Compare X0, 0
	062 JumpIfEqual {78}
	063 Move X8, [X0]
	064 Move X1, X19
	065 Move X2, X20
	066 Move X9, [X8+968]
	067 Move X3, [X8+976]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move W8, 1
	070 Move [X19+154], W8
	071 Move [X19+264], X20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return 
	078 Call 0x1C17F20

Method: System.Void EndManualInteraction()

Disassembly:
	0x03B55190 MOV X1, X0
	0x03B55194 MOV X0, X20
	0x03B55198 BL 0x2DBEF30
	0x03B5519C ADD X21, X21, 0x1
	0x03B551A0 CMP X22, X21
	0x03B551A4 ADD X23, X23, 0x2C
	0x03B551A8 B.NE 0x3B55164
	0x03B551AC B 0x3B55240
	0x03B551B0 LDR W0, [X19 + 0x294]
	0x03B551B4 LDP S12, S13, [X31 + 0x20]
	0x03B551B8 LDR V14, [X31 + 0x28]
	0x03B551BC LDR X21, [X19 + 0x2E0]
	0x03B551C0 MOV X1, X31
	0x03B551C4 BL 0x3C35CB8
	0x03B551C8 LDR W3, [X19 + 0x298]
	0x03B551CC MOV W2, W0
	0x03B551D0 MOV X0, X20
	0x03B551D4 MOV V0.16B, V12.16B
	0x03B551D8 MOV V1.16B, V13.16B
	0x03B551DC MOV V2.16B, V14.16B
	0x03B551E0 MOV V3.16B, V11.16B
	0x03B551E4 MOV X1, X21
	0x03B551E8 MOV X4, X31
	0x03B551EC BL 0x3C8D758
	0x03B551F0 CMP W0, 0x1
	0x03B551F4 B.LT 0x3B55240
	0x03B551F8 ADRP X22, 0x605000
	0x03B551FC LDR X22, [X22 + 0x780]
	0x03B55200 MOV X20, X31
	0x03B55204 MOV W21, W0
	0x03B55208 LDR X8, [X19 + 0x2E0]
	0x03B5520C CBZ X8, 0x3B5528C
	0x03B55210 LDR W9, [X8 + 0x18]
	0x03B55214 CMP X20, X9
	0x03B55218 B.CS 0x3B55290
	0x03B5521C LDR X0, [X19 + 0x2A8]
	0x03B55220 CBZ X0, 0x3B5528C
	0x03B55224 ADD X8, X8, X20, 0x3, LSL
	0x03B55228 LDR X1, [X8 + 0x20]
	0x03B5522C LDR X2, [X22]
	0x03B55230 BL 0x2DBEF30
	0x03B55234 ADD X20, X20, 0x1
	0x03B55238 CMP X21, X20
	0x03B5523C B.NE 0x3B55208
	0x03B55240 LDR X0, [X19 + 0x2B0]
	0x03B55244 CBZ X0, 0x3B5528C
	0x03B55248 LDR X1, [X19 + 0x2A8]
	0x03B5524C MOV X2, X31
	0x03B55250 BL 0x3B90FF0
	0x03B55254 STR S8, [X19 + 0x2D4]
	0x03B55258 STR S10, [X19 + 0x2D8]
	0x03B5525C STR S9, [X19 + 0x2DC]
	0x03B55260 STRB W31, [X19 + 0x2F0]
	0x03B55264 LDP X20, X19, [X31 + 0xB0]
	0x03B55268 LDP X22, X21, [X31 + 0xA0]
	0x03B5526C LDP X24, X23, [X31 + 0x90]
	0x03B55270 LDR X30, [X31 + 0x80]
	0x03B55274 LDP D9, D8, [X31 + 0x70]
	0x03B55278 LDP D11, D10, [X31 + 0x60]
	0x03B5527C LDP D13, D12, [X31 + 0x50]
	0x03B55280 LDP D15, D14, [X31 + 0x40]
	0x03B55284 ADD X31, X31, 0xC0
	0x03B55288 RET
	0x03B5528C BL 0x1C16F20
	0x03B55290 BL 0x1C16F28
	0x03B55294 STP X30, X21, [X31 - 0x20]!
	0x03B55298 STP X20, X19, [X31 + 0x10]
	0x03B5529C ADRP X21, 0x88D000
	0x03B552A0 LDRB W8, [X21 + 0x931]
	0x03B552A4 MOV W20, W1
	0x03B552A8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88E000
	006 Move X20, 0x59F000
	007 Move W8, [X21+2338]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x59F000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x59F000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x606000
	021 Move X0, [X0+3464]
	022 Call 0x1C17CF4
	023 Move X0, 0x606000
	024 Move X0, [X0+3472]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2338], W8
	028 Move X0, [X20]
	029 Move X20, [X19+48]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {51}
	042 Move X8, 0x59F000
	043 Move X8, [X8+2600]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X8, 0x606000
	050 Move X8, [X8+3464]
	051 Move W8, [X19+154]
	052 Compare W8, 0
	053 JumpIfEqual {70}
	054 Move X0, [X19+48]
	055 Compare X0, 0
	056 JumpIfEqual {88}
	057 Move X8, [X0]
	058 Move X2, [X19+264]
	059 Move X1, X19
	060 Move X9, [X8+984]
	061 Move X3, [X8+992]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move [X19+154], W31
	064 Move [X19+264], X31
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Move X8, 0x59F000
	071 Move X8, [X8+2600]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X8, 0x606000
	078 Move X8, [X8+3472]
	079 Move X0, [X8]
	080 Move X1, X19
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X2, X31
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Call Debug.LogWarning, X0, X1
	087 Return 
	088 Call 0x1C17F20

Method: System.Boolean ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B5459C STP X30, X21, [X31 - 0x20]!
	0x03B545A0 STP X20, X19, [X31 + 0x10]
	0x03B545A4 ADRP X21, 0x88E000
	0x03B545A8 LDRB W8, [X21 + 0x926]
	0x03B545AC MOV X19, X1
	0x03B545B0 MOV X20, X0

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+200]
	003 Move X2, X1
	004 Move X1, X8
	005 Move X3, X31
	006 Call XRFilterUtility.Process, X0, X1, X2
	007 Return X0

Method: System.Boolean ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B546B4 LDR X8, [X8 + 0x948]
	0x03B546B8 MOV W1, W31
	0x03B546BC LDR X2, [X8]
	0x03B546C0 BL 0x301BCCC
	0x03B546C4 CBZ X0, 0x3B546EC
	0x03B546C8 ADRP X8, 0x606000

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+216]
	003 Move X2, X1
	004 Move X1, X8
	005 Move X3, X31
	006 Call XRFilterUtility.Process, X0, X1, X2
	007 Return X0

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group)

Disassembly:
	0x03B552AC TBNZ X8, 0x0, 0x3B552C4
	0x03B552B0 ADRP X0, 0x605000
	0x03B552B4 LDR X0, [X0 + 0x788]
	0x03B552B8 BL 0x1C16CF4
	0x03B552BC MOVZ W8, 0x1
	0x03B552C0 STRB W8, [X21 + 0x931]
	0x03B552C4 MOV X0, X19
	0x03B552C8 MOV W1, W20
	0x03B552CC BL 0x3B4F5A0
	0x03B552D0 CBNZ W20, 0x3B552FC
	0x03B552D4 LDRB W8, [X19 + 0x2C0]
	0x03B552D8 CBNZ W8, 0x3B552FC
	0x03B552DC LDR X0, [X19 + 0x2A8]
	0x03B552E0 CBZ X0, 0x3B55308
	0x03B552E4 ADRP X8, 0x605000
	0x03B552E8 LDR X8, [X8 + 0x788]
	0x03B552EC LDP X20, X19, [X31 + 0x10]
	0x03B552F0 LDR X1, [X8]
	0x03B552F4 LDP X30, X21, [X31], #0x20
	0x03B552F8 B 0x2DBE450
	0x03B552FC LDP X20, X19, [X31 + 0x10]
	0x03B55300 LDP X30, X21, [X31], #0x20
	0x03B55304 RET
	0x03B55308 BL 0x1C16F20
	0x03B5530C STP X30, X23, [X31 - 0x30]!
	0x03B55310 STP X22, X21, [X31 + 0x10]
	0x03B55314 STP X20, X19, [X31 + 0x20]
	0x03B55318 ADRP X21, 0x88D000
	0x03B5531C LDRB W8, [X21 + 0x934]
	0x03B55320 MOV X19, X1
	0x03B55324 MOV X20, X0
	0x03B55328 TBNZ X8, 0x0, 0x3B55364
	0x03B5532C ADRP X0, 0x605000
	0x03B55330 LDR X0, [X0 + 0xCF8]
	0x03B55334 BL 0x1C16CF4
	0x03B55338 ADRP X0, 0x605000
	0x03B5533C LDR X0, [X0 + 0xE08]
	0x03B55340 BL 0x1C16CF4
	0x03B55344 ADRP X0, 0x605000
	0x03B55348 LDR X0, [X0 + 0xE00]
	0x03B5534C BL 0x1C16CF4
	0x03B55350 ADRP X0, 0x5C7000
	0x03B55354 LDR X0, [X0 + 0x4F8]
	0x03B55358 BL 0x1C16CF4
	0x03B5535C MOVZ W8, 0x1
	0x03B55360 STRB W8, [X21 + 0x934]
	0x03B55364 CBZ X19, 0x3B55518
	0x03B55368 LDP W2, W8, [X19 + 0x18]
	0x03B5536C ADD W8, W8, 0x1
	0x03B55370 CMP W2, 0x1
	0x03B55374 STP W31, W8, [X19 + 0x18]
	0x03B55378 B.LT 0x3B5538C
	0x03B5537C LDR X0, [X19 + 0x10]
	0x03B55380 MOV W1, W31
	0x03B55384 MOV X3, X31
	0x03B55388 BL 0x339FA34
	0x03B5538C MOV X0, X20
	0x03B55390 MOV X1, X31
	0x03B55394 BL 0x3C32454
	0x03B55398 TBZ X0, 0x0, 0x3B554D4
	0x03B5539C MOV X0, X20
	0x03B553A0 BL 0x3B5201C
	0x03B553A4 CBZ X0, 0x3B55454
	0x03B553A8 ADRP X23, 0x605000
	0x03B553AC LDR X8, [X0]
	0x03B553B0 LDR X23, [X23 + 0xCF8]
	0x03B553B4 MOV X21, X0
	0x03B553B8 LDRH W9, [X8 + 0x12E]
	0x03B553BC LDR X1, [X23]
	0x03B553C0 CBZ X9, 0x3B553E4
	0x03B553C4 LDR X10, [X8 + 0xB0]
	0x03B553C8 ADD X10, X10, 0x8
	0x03B553CC LDUR X11, [X10 - 0x8]
	0x03B553D0 CMP X11, X1
	0x03B553D4 B.EQ 0x3B553F4
	0x03B553D8 SUBS X9, X9, 0x1
	0x03B553DC ADD X10, X10, 0x10
	0x03B553E0 B.NE 0x3B553CC
	0x03B553E4 MOV X0, X21
	0x03B553E8 MOV W2, W31
	0x03B553EC BL 0x1C5C788
	0x03B553F0 B 0x3B55400
	0x03B553F4 LDRSW X9, [X10]
	0x03B553F8 ADD X8, X8, X9, 0x4, LSL
	0x03B553FC ADD X0, X8, 0x138
	0x03B55400 LDP X8, X1, [X0]
	0x03B55404 MOV X0, X21
	0x03B55408 BLR X8
	0x03B5540C TBZ X0, 0x0, 0x3B55454
	0x03B55410 LDR X8, [X21]
	0x03B55414 LDR X22, [X20 + 0x2A0]
	0x03B55418 LDR X1, [X23]
	0x03B5541C LDRH W9, [X8 + 0x12E]
	0x03B55420 CBZ X9, 0x3B55444
	0x03B55424 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88E000
	006 Move W8, [X21+2339]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x59F000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x606000
	017 Move X0, [X0+2360]
	018 Call 0x1C17CF4
	019 Move X0, 0x606000
	020 Move X0, [X0+3480]
	021 Call 0x1C17CF4
	022 Move X0, 0x606000
	023 Move X0, [X0+3488]
	024 Call 0x1C17CF4
	025 Move X0, 0x606000
	026 Move X0, [X0+3496]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2339], W8
	030 Move X21, 0x59F000
	031 Move X8, [X19+56]
	032 Move X21, [X21+2600]
	033 Compare X8, 0
	034 JumpIfEqual {43}
	035 Move X20, 0x606000
	036 Move X20, [X20+3488]
	037 Move X0, X19
	038 Move X1, X31
	039 Call Object.get_name, X0
	040 Move X1, [X20]
	041 Move X2, X31
	042 Call String.Concat, X0, X1
	043 Compare X20, 0
	044 JumpIfEqual {109}
	045 Move X10, 0x606000
	046 Move X8, [X20]
	047 Move X10, [X10+2360]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X10]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move W2, 15
	059 Move X0, X20
	060 Call 0x1C5D788
	061 Move W9, [X10]
	062 Add W9, W9, 15
	063 Add X8, X8, W9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X2, [X0+8]
	067 Move X0, X20
	068 Move X1, X19
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {80}
	074 Move [X19+56], X20
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 
	080 Move X0, X19
	081 Move X1, X31
	082 Call Object.get_name, X0
	083 Move X8, 0x606000
	084 Move X8, [X8+3496]
	085 Move X9, 0x606000
	086 Move X9, [X9+3480]
	087 Move X1, X0
	088 Move X8, [X8]
	089 Move X3, X31
	090 Move X2, [X9]
	091 Move X0, X8
	092 Call String.Concat, X0, X1, X2
	093 Move X8, [X21]
	094 Move X20, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X19
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move X2, X31
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Call Debug.LogError, X0, X1
	108 Return 
	109 Call 0x1C17F20

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember()

Disassembly:
	0x03B55428 ADD X10, X10, 0x8
	0x03B5542C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X0+56], X31
	002 Return 

Method: System.Void UpdateVelocityAndAngularVelocity()

Disassembly:
	0x03B53FE4 B 0x3B53FE8
	0x03B53FE8 FMOV S9, W31
	0x03B53FEC B 0x3B54034
	0x03B53FF0 B 0x3B54020
	0x03B53FF4 B 0x3B54020
	0x03B53FF8 B 0x3B54020
	0x03B53FFC B 0x3B54034
	0x03B54000 B 0x3B54034
	0x03B54004 B 0x3B54034
	0x03B54008 B 0x3B54034
	0x03B5400C B 0x3B54034
	0x03B54010 B 0x3B54034
	0x03B54014 B 0x3B54034
	0x03B54018 B 0x3B54020
	0x03B5401C B 0x3B54020
	0x03B54020 MOV V9.16B, V8.16B
	0x03B54024 B 0x3B54034
	0x03B54028 B 0x3B54034
	0x03B5402C B 0x3B54034
	0x03B54030 B 0x3B54034
	0x03B54034 CMP W1, 0x1
	0x03B54038 B.NE 0x3B54050
	0x03B5403C BL 0x3EB1AD0
	0x03B54040 LDR X21, [X0]
	0x03B54044 BL 0x3EB1AE0
	0x03B54048 MOV W22, W31
	0x03B5404C B 0x3B53F08
	0x03B54050 MOV X19, X0
	0x03B54054 MOV X21, X31
	0x03B54058 B 0x3B54060
	0x03B5405C MOV X19, X0
	0x03B54060 MOV X0, X20
	0x03B54064 MOV X1, X31
	0x03B54068 MOV X2, X31
	0x03B5406C BL 0x33C5D2C
	0x03B54070 TBZ X0, 0x0, 0x3B54080
	0x03B54074 MOV X0, X20
	0x03B54078 MOV X1, X31
	0x03B5407C BL 0x3BFEA0C
	0x03B54080 CBNZ X21, 0x3B5408C
	0x03B54084 MOV X0, X19
	0x03B54088 BL 0x1D2C690
	0x03B5408C MOV X0, X21
	0x03B54090 BL 0x1C16F18
	0x03B54094 BL 0x1990590
	0x03B54098 STR X30, [X31 - 0x30]!
	0x03B5409C STP X22, X21, [X31 + 0x10]
	0x03B540A0 STP X20, X19, [X31 + 0x20]
	0x03B540A4 ADRP X22, 0x88E000
	0x03B540A8 ADRP X21, 0x59F000
	0x03B540AC LDRB W8, [X22 + 0x921]
	0x03B540B0 LDR X21, [X21 + 0x598]
	0x03B540B4 MOV X20, X1
	0x03B540B8 MOV X19, X0
	0x03B540BC TBNZ X8, 0x0, 0x3B540EC
	0x03B540C0 ADRP X0, 0x59F000
	0x03B540C4 LDR X0, [X0 + 0xA28]
	0x03B540C8 BL 0x1C16CF4
	0x03B540CC ADRP X0, 0x59F000
	0x03B540D0 LDR X0, [X0 + 0x598]
	0x03B540D4 BL 0x1C16CF4
	0x03B540D8 ADRP X0, 0x606000
	0x03B540DC LDR X0, [X0 + 0xD80]
	0x03B540E0 BL 0x1C16CF4
	0x03B540E4 MOVZ W8, 0x1
	0x03B540E8 STRB W8, [X22 + 0x921]
	0x03B540EC LDR X0, [X21]
	0x03B540F0 LDR X21, [X19 + 0x30]
	0x03B540F4 LDR W8, [X0 + 0xE0]
	0x03B540F8 CBNZ W8, 0x3B54100
	0x03B540FC BL 0x1C16DFC
	0x03B54100 MOV X0, X21
	0x03B54104 MOV X1, X31
	0x03B54108 MOV X2, X31
	0x03B5410C BL 0x3C3883C
	0x03B54110 TBZ X0, 0x0, 0x3B54150
	0x03B54114 ADRP X8, 0x59F000
	0x03B54118 LDR X8, [X8 + 0xA28]
	0x03B5411C LDR X0, [X8]
	0x03B54120 LDR W8, [X0 + 0xE0]
	0x03B54124 CBNZ W8, 0x3B5412C
	0x03B54128 BL 0x1C16DFC
	0x03B5412C ADRP X8, 0x606000
	0x03B54130 LDR X8, [X8 + 0xD80]
	0x03B54134 MOV X1, X19
	0x03B54138 LDP X20, X19, [X31 + 0x20]
	0x03B5413C LDP X22, X21, [X31 + 0x10]
	0x03B54140 LDR X0, [X8]
	0x03B54144 MOV X2, X31
	0x03B54148 LDR X30, [X31], #0x30
	0x03B5414C B 0x3C06B0C
	0x03B54150 LDR X0, [X19 + 0x30]
	0x03B54154 CBZ X0, 0x3B5418C
	0x03B54158 LDR X8, [X0]
	0x03B5415C MOV X1, X19
	0x03B54160 MOV X2, X20
	0x03B54164 LDR X9, [X8 + 0x3C8]
	0x03B54168 LDR X3, [X8 + 0x3D0]
	0x03B5416C BLR X9
	0x03B54170 MOVZ W8, 0x1
	0x03B54174 STRB W8, [X19 + 0x9A]
	0x03B54178 STR X20, [X19 + 0x108]
	0x03B5417C LDP X20, X19, [X31 + 0x20]
	0x03B54180 LDP X22, X21, [X31 + 0x10]
	0x03B54184 LDR X30, [X31], #0x30
	0x03B54188 RET
	0x03B5418C BL 0x1C16F20
	0x03B54190 STP X30, X21, [X31 - 0x20]!
	0x03B54194 STP X20, X19, [X31 + 0x10]
	0x03B54198 ADRP X21, 0x88E000
	0x03B5419C ADRP X20, 0x59F000
	0x03B541A0 LDRB W8, [X21 + 0x922]
	0x03B541A4 LDR X20, [X20 + 0x598]
	0x03B541A8 MOV X19, X0
	0x03B541AC TBNZ X8, 0x0, 0x3B541E8
	0x03B541B0 ADRP X0, 0x59F000
	0x03B541B4 LDR X0, [X0 + 0xA28]
	0x03B541B8 BL 0x1C16CF4
	0x03B541BC ADRP X0, 0x59F000
	0x03B541C0 LDR X0, [X0 + 0x598]
	0x03B541C4 BL 0x1C16CF4
	0x03B541C8 ADRP X0, 0x606000
	0x03B541CC LDR X0, [X0 + 0xD88]
	0x03B541D0 BL 0x1C16CF4
	0x03B541D4 ADRP X0, 0x606000
	0x03B541D8 LDR X0, [X0 + 0xD90]
	0x03B541DC BL 0x1C16CF4
	0x03B541E0 MOVZ W8, 0x1
	0x03B541E4 STRB W8, [X21 + 0x922]
	0x03B541E8 LDR X0, [X20]
	0x03B541EC LDR X20, [X19 + 0x30]
	0x03B541F0 LDR W8, [X0 + 0xE0]
	0x03B541F4 CBNZ W8, 0x3B541FC
	0x03B541F8 BL 0x1C16DFC
	0x03B541FC MOV X0, X20
	0x03B54200 MOV X1, X31
	0x03B54204 MOV X2, X31
	0x03B54208 BL 0x3C3883C
	0x03B5420C TBZ X0, 0x0, 0x3B54234
	0x03B54210 ADRP X8, 0x59F000
	0x03B54214 LDR X8, [X8 + 0xA28]
	0x03B54218 LDR X0, [X8]
	0x03B5421C LDR W8, [X0 + 0xE0]
	0x03B54220 CBNZ W8, 0x3B54228
	0x03B54224 BL 0x1C16DFC
	0x03B54228 ADRP X8, 0x606000
	0x03B5422C LDR X8, [X8 + 0xD88]
	0x03B54230 B 0x3B54290
	0x03B54234 LDRB W8, [X19 + 0x9A]
	0x03B54238 CBZ W8, 0x3B54270
	0x03B5423C LDR X0, [X19 + 0x30]
	0x03B54240 CBZ X0, 0x3B542A8
	0x03B54244 LDR X8, [X0]
	0x03B54248 LDR X2, [X19 + 0x108]
	0x03B5424C MOV X1, X19
	0x03B54250 LDR X9, [X8 + 0x3D8]
	0x03B54254 LDR X3, [X8 + 0x3E0]
	0x03B54258 BLR X9
	0x03B5425C STRB W31, [X19 + 0x9A]
	0x03B54260 STR X31, [X19 + 0x108]
	0x03B54264 LDP X20, X19, [X31 + 0x10]
	0x03B54268 LDP X30, X21, [X31], #0x20
	0x03B5426C RET
	0x03B54270 ADRP X8, 0x59F000
	0x03B54274 LDR X8, [X8 + 0xA28]
	0x03B54278 LDR X0, [X8]
	0x03B5427C LDR W8, [X0 + 0xE0]
	0x03B54280 CBNZ W8, 0x3B54288
	0x03B54284 BL 0x1C16DFC
	0x03B54288 ADRP X8, 0x606000
	0x03B5428C LDR X8, [X8 + 0xD90]
	0x03B54290 LDR X0, [X8]
	0x03B54294 MOV X1, X19
	0x03B54298 LDP X20, X19, [X31 + 0x10]
	0x03B5429C MOV X2, X31
	0x03B542A0 LDP X30, X21, [X31], #0x20
	0x03B542A4 B 0x3C06B0C
	0x03B542A8 BL 0x1C16F20
	0x03B542AC STP X30, X21, [X31 - 0x20]!
	0x03B542B0 STP X20, X19, [X31 + 0x10]
	0x03B542B4 ADRP X21, 0x88E000
	0x03B542B8 LDRB W8, [X21 + 0x923]
	0x03B542BC MOV X20, X1
	0x03B542C0 MOV X19, X0
	0x03B542C4 TBNZ X8, 0x0, 0x3B5430C
	0x03B542C8 ADRP X0, 0x59F000
	0x03B542CC LDR X0, [X0 + 0xA28]
	0x03B542D0 BL 0x1C16CF4
	0x03B542D4 ADRP X0, 0x606000
	0x03B542D8 LDR X0, [X0 + 0x938]
	0x03B542DC BL 0x1C16CF4
	0x03B542E0 ADRP X0, 0x606000
	0x03B542E4 LDR X0, [X0 + 0xD98]
	0x03B542E8 BL 0x1C16CF4
	0x03B542EC ADRP X0, 0x606000
	0x03B542F0 LDR X0, [X0 + 0xDA0]
	0x03B542F4 BL 0x1C16CF4
	0x03B542F8 ADRP X0, 0x606000
	0x03B542FC LDR X0, [X0 + 0xDA8]
	0x03B54300 BL 0x1C16CF4
	0x03B54304 MOVZ W8, 0x1
	0x03B54308 STRB W8, [X21 + 0x923]
	0x03B5430C ADRP X21, 0x59F000
	0x03B54310 LDR X8, [X19 + 0x38]
	0x03B54314 LDR X21, [X21 + 0xA28]
	0x03B54318 CBZ X8, 0x3B54340
	0x03B5431C ADRP X20, 0x606000
	0x03B54320 LDR X20, [X20 + 0xDA0]
	0x03B54324 MOV X0, X19
	0x03B54328 MOV X1, X31
	0x03B5432C BL 0x3C389D4
	0x03B54330 LDR X1, [X20]
	0x03B54334 MOV X2, X31
	0x03B54338 BL 0x321B938
	0x03B5433C B 0x3B543F4
	0x03B54340 CBZ X20, 0x3B54424
	0x03B54344 ADRP X10, 0x606000
	0x03B54348 LDR X8, [X20]
	0x03B5434C LDR X10, [X10 + 0x938]
	0x03B54350 LDRH W9, [X8 + 0x12E]
	0x03B54354 LDR X1, [X10]
	0x03B54358 CBZ X9, 0x3B5437C
	0x03B5435C LDR X10, [X8 + 0xB0]
	0x03B54360 ADD X10, X10, 0x8
	0x03B54364 LDUR X11, [X10 - 0x8]
	0x03B54368 CMP X11, X1
	0x03B5436C B.EQ 0x3B5438C
	0x03B54370 SUBS X9, X9, 0x1
	0x03B54374 ADD X10, X10, 0x10
	0x03B54378 B.NE 0x3B54364
	0x03B5437C MOVZ W2, 0xF
	0x03B54380 MOV X0, X20
	0x03B54384 BL 0x1C5C788
	0x03B54388 B 0x3B5439C
	0x03B5438C LDR W9, [X10]
	0x03B54390 ADD W9, W9, 0xF
	0x03B54394 ADD X8, X8, W9, 0x4, SXTW
	0x03B54398 ADD X0, X8, 0x138
	0x03B5439C LDP X8, X2, [X0]
	0x03B543A0 MOV X0, X20
	0x03B543A4 MOV X1, X19
	0x03B543A8 BLR X8
	0x03B543AC TBZ X0, 0x0, 0x3B543C0
	0x03B543B0 STR X20, [X19 + 0x38]
	0x03B543B4 LDP X20, X19, [X31 + 0x10]
	0x03B543B8 LDP X30, X21, [X31], #0x20
	0x03B543BC RET
	0x03B543C0 MOV X0, X19
	0x03B543C4 MOV X1, X31
	0x03B543C8 BL 0x3C389D4
	0x03B543CC ADRP X8, 0x606000
	0x03B543D0 LDR X8, [X8 + 0xDA8]
	0x03B543D4 ADRP X9, 0x606000
	0x03B543D8 LDR X9, [X9 + 0xD98]
	0x03B543DC MOV X1, X0
	0x03B543E0 LDR X8, [X8]
	0x03B543E4 MOV X3, X31
	0x03B543E8 LDR X2, [X9]
	0x03B543EC MOV X0, X8
	0x03B543F0 BL 0x32274B8
	0x03B543F4 LDR X8, [X21]
	0x03B543F8 MOV X20, X0
	0x03B543FC LDR W9, [X8 + 0xE0]
	0x03B54400 CBNZ W9, 0x3B5440C
	0x03B54404 MOV X0, X8
	0x03B54408 BL 0x1C16DFC
	0x03B5440C MOV X0, X20
	0x03B54410 MOV X1, X19
	0x03B54414 LDP X20, X19, [X31 + 0x10]
	0x03B54418 MOV X2, X31
	0x03B5441C LDP X30, X21, [X31], #0x20
	0x03B54420 B 0x3C065A4
	0x03B54424 BL 0x1C16F20
	0x03B54428 STR X31, [X0 + 0x38]
	0x03B5442C RET

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X25
	012 Move [X31+160], X24
	013 Move [X31+168], X23
	014 Move [X31+176], X22
	015 Move [X31+184], X21
	016 Move [X31+192], X20
	017 Move [X31+200], X19
	018 Move [X31+72], X31
	019 Move X8, [X0]
	020 Move X1, X31
	021 Move X19, X0
	022 Add X23, X0, 284
	023 Move X9, [X8+1208]
	024 Move X2, [X8+1216]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X20, X0
	027 Add X1, X31, 72
	028 Move X0, X19
	029 Call XRBaseInteractor.TryGetXROrigin, X0, X1
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W21, W0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X31
	034 Call Time.get_unscaledTime
	035 Move V13, [X19+336]
	036 Move V12, V0
	037 Move TEMP, X21
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {77}
	041 Compare X20, 0
	042 JumpIfEqual {310}
	043 Move X21, [X31+72]
	044 Move X0, X20
	045 Move X1, X31
	046 Call Transform.get_position, X0
	047 Compare X21, 0
	048 JumpIfEqual {310}
	049 Move X0, X21
	050 Move X1, X31
	051 Call Transform.InverseTransformPoint, X0, X1
	052 Move X0, X20
	053 Move X1, X31
	054 Move [X31+48], D0
	055 Move [X31+32], D1
	056 Move V8, V2
	057 Call Transform.get_up, X0
	058 Move X0, X21
	059 Move X1, X31
	060 Call Transform.InverseTransformVector, X0, X1
	061 Move X25, [X19+344]
	062 Move TEMP, X21
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {214}
	066 Compare X20, 0
	067 JumpIfEqual {310}
	068 Move X22, [X31+72]
	069 Move X0, X20
	070 Move X1, X31
	071 Call Transform.get_position, X0
	072 Compare X22, 0
	073 JumpIfEqual {310}
	074 Move X0, X22
	075 Move X1, X31
	076 Call Transform.InverseTransformPoint, X0, X1
	077 Compare X20, 0
	078 JumpIfEqual {310}
	079 Move X0, X20
	080 Move X1, X31
	081 Call Transform.get_position, X0
	082 Move X0, X20
	083 Move X1, X31
	084 Move [X31+48], D0
	085 Move [X31+32], D1
	086 Move V8, V2
	087 Call Transform.get_up, X0
	088 Move X9, [X19+344]
	089 Move V20, V0
	090 Move V21, V1
	091 Move V22, V2
	092 Compare X9, 0
	093 JumpIfEqual {310}
	094 Move W10, 0xAAAB
	095 And X8, X24, 0
	096 NotImplemented "Instruction MOVK not yet implemented."
	097 Move W11, [X9+24]
	098 Multiply X8, X8, X10
	099 Move X8, X8
	100 ShiftRight X8, 34
	101 And X8, X8, 0x7FFFFFFF
	102 Move W10, 6
	103 NotImplemented "Instruction MSUB not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, [X19+352]
	106 Compare X8, 0
	107 JumpIfEqual {310}
	108 Move W10, [X8+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move V16, [X31+32]
	111 Move V1, [X31+48]
	112 Move W21, W20
	113 Move W10, 12
	114 NotImplemented "Instruction MADD not yet implemented."
	115 Move V0, [X19+360]
	116 Move V1.S[1], V16.S[0]
	117 Move V16, [X9+32]
	118 Move W10, 12
	119 NotImplemented "Instruction MADD not yet implemented."
	120 Subtract S23, S12, S13
	121 Subtract V16, V0, V16
	122 Move V3, [X19+368]
	123 Move V2, [X19+372]
	124 Move V4, [X19+376]
	125 Move V5, [X19+380]
	126 Move V17, [X9+40]
	127 Add V12, V1, V16
	128 Move S1, [X8+32]
	129 Move S16, [X8+36]
	130 Move V18, [X8+40]
	131 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	132 Subtract V0, V12, V0
	133 Move V6, 0
	134 Move S7, 6
	135 NotImplemented "Instruction INVALID not yet implemented."
	136 NotImplemented "Instruction INVALID not yet implemented."
	137 Subtract S19, S2, S1
	138 NotImplemented "Instruction FDIV not yet implemented."
	139 Subtract S16, S4, S16
	140 NotImplemented "Instruction FDIV not yet implemented."
	141 Subtract S4, S5, S18
	142 NotImplemented "Instruction FDIV not yet implemented."
	143 Subtract S5, S3, S17
	144 Move V10, V8
	145 Add S8, S8, S5
	146 Add S13, S22, S4
	147 Subtract S4, S8, S3
	148 NotImplemented "Instruction FDIV not yet implemented."
	149 Add S15, S20, S19
	150 Add S14, S21, S16
	151 NotImplemented "Instruction FDIV not yet implemented."
	152 Move [X23], D6
	153 NotImplemented "Instruction FDIV not yet implemented."
	154 Move [X19+292], S4
	155 NotImplemented "Instruction FDIV not yet implemented."
	156 NotImplemented "Instruction FDIV not yet implemented."
	157 Move X0, X31
	158 Move [X31+1], V23
	159 Move [X31+8], S20
	160 Move [X31+16], S21
	161 Move V11, V22
	162 Call Quaternion.FromToRotation, X0, X1
	163 Move X0, X31
	164 Call Quaternion.Internal_ToEulerRad, X0
	165 Move X8, -50761728
	166 Move V3, [X8+1096]
	167 Move X0, X31
	168 Multiply S0, S0, S3
	169 Multiply S1, S1, S3
	170 Multiply S2, S2, S3
	171 Call Quaternion.Internal_MakePositive, X0
	172 Move X10, -50761728
	173 Move V0.S[1], V1.S[0]
	174 Move V1, [X10+260]
	175 Move W9, 0xFA35
	176 NotImplemented "Instruction MOVK not yet implemented."
	177 Move X8, [X19+344]
	178 Multiply S1, S2, S1
	179 Move V2, [X31+1]
	180 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	181 NotImplemented "Instruction INVALID not yet implemented."
	182 NotImplemented "Instruction INVALID not yet implemented."
	183 NotImplemented "Instruction FDIV not yet implemented."
	184 Move [X19+296], D0
	185 Move [X19+304], S1
	186 Compare X8, 0
	187 JumpIfEqual {310}
	188 Move W9, [X8+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move V1, [X31+3]
	191 Move V0, [X31+2]
	192 Move W9, 12
	193 NotImplemented "Instruction MADD not yet implemented."
	194 Move [X8+40], S10
	195 Move [X8+32], S1
	196 Move [X8+40], S0
	197 Move X8, [X19+352]
	198 Compare X8, 0
	199 JumpIfEqual {310}
	200 Move W9, [X8+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move V1, [X31+8]
	203 Move V0, [X31+12]
	204 Move W9, 12
	205 NotImplemented "Instruction MADD not yet implemented."
	206 Move [X8+40], S11
	207 Move [X8+32], S1
	208 Move [X8+40], S0
	209 Move [X19+360], D12
	210 Move [X19+368], S8
	211 Move [X19+372], S15
	212 Move [X19+376], S14
	213 Move [X19+380], S13
	214 Compare X20, 0
	215 JumpIfEqual {310}
	216 Move X0, X20
	217 Move X1, X31
	218 Call Transform.get_position, X0
	219 Compare X25, 0
	220 JumpIfEqual {310}
	221 Move W8, [X25+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move W8, 12
	224 NotImplemented "Instruction MADD not yet implemented."
	225 Move [X8+32], S0
	226 Move [X8+40], S1
	227 Move [X8+40], S2
	228 Move X8, [X19+344]
	229 Compare X8, 0
	230 JumpIfEqual {310}
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Move W9, [X8+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move W9, 12
	235 NotImplemented "Instruction MADD not yet implemented."
	236 Move V0, [X19+360]
	237 Move V1, [X19+368]
	238 Move V2, [X8+32]
	239 Move V3, [X8+40]
	240 Move X24, [X19+352]
	241 Add V0, V0, V2
	242 Add S1, S1, S3
	243 Move [X19+360], D0
	244 Move [X19+368], S1
	245 Move TEMP, X21
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {258}
	249 Move X21, [X31+72]
	250 Move X0, X20
	251 Move X1, X31
	252 Call Transform.get_up, X0
	253 Compare X21, 0
	254 JumpIfEqual {310}
	255 Move X0, X21
	256 Move X1, X31
	257 Call Transform.InverseTransformVector, X0, X1
	258 Move X0, X20
	259 Move X1, X31
	260 Call Transform.get_up, X0
	261 Compare X24, 0
	262 JumpIfEqual {310}
	263 Move W8, [X24+24]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move W8, 12
	266 NotImplemented "Instruction MADD not yet implemented."
	267 Move [X8+32], S0
	268 Move [X8+40], S1
	269 Move [X8+40], S2
	270 Move X8, [X19+352]
	271 Compare X8, 0
	272 JumpIfEqual {310}
	273 NotImplemented "Instruction LDRSW not yet implemented."
	274 Move W10, [X8+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move W10, 12
	277 NotImplemented "Instruction MADD not yet implemented."
	278 Move V0, [X23+88]
	279 Move V1, [X19+380]
	280 Move V2, [X8+32]
	281 Move V3, [X8+40]
	282 Add V0, V0, V2
	283 Add S1, S1, S3
	284 Move [X23+88], D0
	285 Move [X19+380], S1
	286 Move X0, X31
	287 Call Time.get_unscaledTime
	288 Move W8, [X19+340]
	289 Move [X19+336], S0
	290 Move X22, [X31+176]
	291 Move X21, [X31+184]
	292 Move X24, [X31+160]
	293 Move X23, [X31+168]
	294 Add W8, W8, 1
	295 Move [X19+340], W8
	296 Move X20, [X31+192]
	297 Move X19, [X31+200]
	298 Move X30, [X31+144]
	299 Move X25, [X31+152]
	300 Move D9, [X31+128]
	301 Move D8, [X31+136]
	302 Move D11, [X31+112]
	303 Move D10, [X31+120]
	304 Move D13, [X31+96]
	305 Move D12, [X31+104]
	306 Move D15, [X31+80]
	307 Move D14, [X31+88]
	308 Add X31, X31, 208
	309 Return 
	310 Call 0x1C17F20
	311 Call 0x1C17F28

Method: UnityEngine.LayerMask get_interactionLayerMask()

Disassembly:
	0x03B55430 CMP X11, X1
	0x03B55434 B.EQ 0x3B554E4

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_interactionLayerMask(UnityEngine.LayerMask value)

Disassembly:
	0x03B55438 SUBS X9, X9, 0x1
	0x03B5543C ADD X10, X10, 0x10

ISIL:
	001 Move [X0+64], W1
	002 Return 

Method: System.Boolean get_enableInteractions()

Disassembly:
	0x03B55440 B.NE 0x3B5542C
	0x03B55444 MOVZ W2, 0x3
	0x03B55448 MOV X0, X21
	0x03B5544C BL 0x1C5C788
	0x03B55450 B 0x3B554F4
	0x03B55454 LDRB W8, [X20 + 0x2F1]
	0x03B55458 CBZ W8, 0x3B55480
	0x03B5545C ADRP X8, 0x605000

ISIL:
	001 Move W8, [X0+152]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X0+153]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Void set_enableInteractions(System.Boolean value)

Disassembly:
	0x03B55460 LDR X1, [X20 + 0x2F8]
	0x03B55464 LDR X8, [X8 + 0xE08]
	0x03B55468 MOV X0, X19
	0x03B5546C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+152], W8
	003 Move [X0+153], W8
	004 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverEntered()

Disassembly:
	0x03B55470 LDP X22, X21, [X31 + 0x10]
	0x03B55474 LDR X2, [X8]

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_onHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)

Disassembly:
	0x03B55478 LDP X30, X23, [X31], #0x30
	0x03B5547C B 0x301C194

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverExited()

Disassembly:
	0x03B55480 ADRP X8, 0x5C7000
	0x03B55484 LDR X8, [X8 + 0x4F8]

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_onHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)

Disassembly:
	0x03B55488 LDR X21, [X20 + 0x2A0]
	0x03B5548C LDR X22, [X20 + 0x2F8]

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectEntered()

Disassembly:
	0x03B55490 LDR X0, [X8]
	0x03B55494 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: System.Void set_onSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)

Disassembly:
	0x03B55498 CBNZ W8, 0x3B554A0
	0x03B5549C BL 0x1C16DFC

ISIL:
	001 Move [X0+400], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectExited()

Disassembly:
	0x03B554A0 MOV X0, X20
	0x03B554A4 MOV X1, X21

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void set_onSelectExited(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)

Disassembly:
	0x03B554A8 MOV X2, X22
	0x03B554AC MOV X3, X31

ISIL:
	001 Move [X0+408], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverEnter()

Disassembly:
	0x03B554B0 BL 0x3B85D24
	0x03B554B4 ADRP X8, 0x605000

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverExit()

Disassembly:
	0x03B554B8 LDR X1, [X20 + 0x2F8]
	0x03B554BC LDR X8, [X8 + 0xE08]

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectEnter()

Disassembly:
	0x03B554C0 MOV X0, X19
	0x03B554C4 LDR X2, [X8]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectExit()

Disassembly:
	0x03B554C8 BL 0x301C194
	0x03B554CC MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B554D0 STRB W8, [X20 + 0x2F1]

ISIL:
	001 Return 

Method: System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B554D4 LDP X20, X19, [X31 + 0x20]
	0x03B554D8 LDP X22, X21, [X31 + 0x10]
	0x03B554DC LDP X30, X23, [X31], #0x30
	0x03B554E0 RET
	0x03B554E4 LDR W9, [X10]
	0x03B554E8 ADD W9, W9, 0x3
	0x03B554EC ADD X8, X8, W9, 0x4, SXTW
	0x03B554F0 ADD X0, X8, 0x138
	0x03B554F4 LDP X5, X4, [X0]
	0x03B554F8 MOV X0, X21
	0x03B554FC MOV X1, X20
	0x03B55500 MOV X2, X22
	0x03B55504 MOV X3, X19
	0x03B55508 LDP X20, X19, [X31 + 0x20]
	0x03B5550C LDP X22, X21, [X31 + 0x10]
	0x03B55510 LDP X30, X23, [X31], #0x30
	0x03B55514 BR X5
	0x03B55518 BL 0x1C16F20
	0x03B5551C STR X30, [X31 - 0x20]!
	0x03B55520 STP X20, X19, [X31 + 0x10]
	0x03B55524 MOV X19, X1
	0x03B55528 MOV X20, X0
	0x03B5552C BL 0x3B4B6D0
	0x03B55530 TBZ X0, 0x0, 0x3B55548

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88E000
	006 Move W8, [X21+2340]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x606000
	014 Move X0, [X0+3504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2340], W8
	018 Move X0, [X20+384]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x606000
	022 Move X8, [X8+3504]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B55534 MOV X0, X20

ISIL:
	001 Return 

Method: System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B55538 MOV X1, X19
	0x03B5553C LDP X20, X19, [X31 + 0x10]
	0x03B55540 LDR X30, [X31], #0x20
	0x03B55544 B 0x3B5103C
	0x03B55548 LDP X20, X19, [X31 + 0x10]
	0x03B5554C MOVZ W0, 0x1
	0x03B55550 LDR X30, [X31], #0x20
	0x03B55554 RET
	0x03B55558 STR X30, [X31 - 0x20]!
	0x03B5555C STP X20, X19, [X31 + 0x10]
	0x03B55560 MOV X19, X1
	0x03B55564 MOV X20, X0
	0x03B55568 BL 0x3B4B6D0
	0x03B5556C TBZ X0, 0x0, 0x3B55584
	0x03B55570 MOV X0, X20
	0x03B55574 MOV X1, X19
	0x03B55578 LDP X20, X19, [X31 + 0x10]
	0x03B5557C LDR X30, [X31], #0x20
	0x03B55580 B 0x3B52CD0
	0x03B55584 LDP X20, X19, [X31 + 0x10]
	0x03B55588 MOVZ W0, 0x1
	0x03B5558C LDR X30, [X31], #0x20
	0x03B55590 RET
	0x03B55594 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88E000
	006 Move W8, [X21+2341]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x606000
	014 Move X0, [X0+3504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2341], W8
	018 Move X0, [X20+392]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x606000
	022 Move X8, [X8+3504]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B55598 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B5559C STP X22, X21, [X31 + 0x20]
	0x03B555A0 STP X20, X19, [X31 + 0x30]
	0x03B555A4 ADRP X21, 0x88D000
	0x03B555A8 LDRB W8, [X21 + 0x935]
	0x03B555AC MOV X19, X1
	0x03B555B0 MOV X20, X0
	0x03B555B4 TBNZ X8, 0x0, 0x3B555FC
	0x03B555B8 ADRP X0, 0x605000
	0x03B555BC LDR X0, [X0 + 0x248]
	0x03B555C0 BL 0x1C16CF4
	0x03B555C4 ADRP X0, 0x605000
	0x03B555C8 LDR X0, [X0 + 0x250]
	0x03B555CC BL 0x1C16CF4
	0x03B555D0 ADRP X0, 0x605000
	0x03B555D4 LDR X0, [X0 + 0xE10]
	0x03B555D8 BL 0x1C16CF4
	0x03B555DC ADRP X0, 0x605000
	0x03B555E0 LDR X0, [X0 + 0xE18]
	0x03B555E4 BL 0x1C16CF4
	0x03B555E8 ADRP X0, 0x605000
	0x03B555EC LDR X0, [X0 + 0xE20]
	0x03B555F0 BL 0x1C16CF4
	0x03B555F4 MOVZ W8, 0x1
	0x03B555F8 STRB W8, [X21 + 0x935]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88E000
	006 Move W8, [X21+2342]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x606000
	014 Move X0, [X0+3504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2342], W8
	018 Move X0, [X20+400]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x606000
	022 Move X8, [X8+3504]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B555FC MOV X0, X20

ISIL:
	001 Return 

Method: System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B55600 MOV X1, X19
	0x03B55604 BL 0x3B5370C
	0x03B55608 CBZ X19, 0x3B55708
	0x03B5560C ADRP X8, 0x605000
	0x03B55610 LDR X8, [X8 + 0x248]
	0x03B55614 ADRP X22, 0x605000
	0x03B55618 LDR X21, [X19 + 0x10]
	0x03B5561C LDR X0, [X8]
	0x03B55620 LDR X22, [X22 + 0xE10]
	0x03B55624 BL 0x1C16F10
	0x03B55628 LDR X2, [X22]
	0x03B5562C MOV X1, X20
	0x03B55630 MOV X3, X31
	0x03B55634 MOV X22, X0
	0x03B55638 BL 0x2A6B948
	0x03B5563C CBZ X21, 0x3B55708
	0x03B55640 ADRP X23, 0x605000
	0x03B55644 ADRP X24, 0x605000
	0x03B55648 LDR X23, [X23 + 0x250]
	0x03B5564C LDR X24, [X24 + 0xE18]
	0x03B55650 MOV X0, X21
	0x03B55654 MOV X1, X22
	0x03B55658 MOV X2, X31
	0x03B5565C BL 0x3B67A98

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88E000
	006 Move W8, [X21+2343]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x606000
	014 Move X0, [X0+3504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2343], W8
	018 Move X0, [X20+408]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x606000
	022 Move X8, [X8+3504]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable get_selectTarget()

Disassembly:
	0x03B55660 LDR X0, [X23]
	0x03B55664 LDR X21, [X19 + 0x10]
	0x03B55668 BL 0x1C16F10
	0x03B5566C LDR X2, [X24]
	0x03B55670 MOV X1, X20
	0x03B55674 MOV X3, X31
	0x03B55678 MOV X22, X0
	0x03B5567C BL 0x2A6B948
	0x03B55680 CBZ X21, 0x3B55708
	0x03B55684 MOV X0, X21
	0x03B55688 MOV X1, X22
	0x03B5568C MOV X2, X31
	0x03B55690 BL 0x3B67B48
	0x03B55694 LDR X0, [X20 + 0x2B0]
	0x03B55698 CBZ X0, 0x3B55708
	0x03B5569C LDR X8, [X19 + 0x10]
	0x03B556A0 STR X8, [X0 + 0x20]
	0x03B556A4 LDRB W8, [X20 + 0x2C0]
	0x03B556A8 CBZ W8, 0x3B556C0
	0x03B556AC LDP X20, X19, [X31 + 0x30]
	0x03B556B0 LDP X22, X21, [X31 + 0x20]
	0x03B556B4 LDP X24, X23, [X31 + 0x10]
	0x03B556B8 LDR X30, [X31], #0x40
	0x03B556BC RET
	0x03B556C0 MOV X1, X31
	0x03B556C4 BL 0x3B90790
	0x03B556C8 ADRP X8, 0x605000
	0x03B556CC LDR X8, [X8 + 0xE20]
	0x03B556D0 LDR X19, [X19 + 0x10]
	0x03B556D4 LDR X20, [X20 + 0x2A0]
	0x03B556D8 LDR X0, [X8]
	0x03B556DC LDR W8, [X0 + 0xE0]
	0x03B556E0 CBNZ W8, 0x3B556E8
	0x03B556E4 BL 0x1C16DFC
	0x03B556E8 MOV X0, X19
	0x03B556EC MOV X1, X20
	0x03B556F0 LDP X20, X19, [X31 + 0x30]
	0x03B556F4 LDP X22, X21, [X31 + 0x20]
	0x03B556F8 LDP X24, X23, [X31 + 0x10]
	0x03B556FC MOV X2, X31
	0x03B55700 LDR X30, [X31], #0x40
	0x03B55704 B 0x3B67BF8
	0x03B55708 BL 0x1C16F20
	0x03B5570C STR X30, [X31 - 0x40]!
	0x03B55710 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x88E000
	005 Move W8, [X20+2344]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x606000
	012 Move X0, [X0+2376]
	013 Call 0x1C17CF4
	014 Move X0, 0x606000
	015 Move X0, [X0+1080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2344], W8
	019 Move X0, X19
	020 Call XRBaseInteractor.get_hasSelection, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {43}
	025 Move X0, X19
	026 Call XRBaseInteractor.get_interactablesSelected, X0
	027 Compare X0, 0
	028 JumpIfEqual {53}
	029 Move X8, 0x606000
	030 Move X8, [X8+2376]
	031 Move W1, W31
	032 Move X2, [X8]
	033 Call List`1<Object>.get_Item, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {44}
	036 Move X8, 0x606000
	037 Move X8, [X8+1080]
	038 Move X9, [X0]
	039 Move X8, [X8]
	040 Move W11, [X9+304]
	041 Move W10, [X8+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Move X9, [X9+200]
	049 Add X9, X9, X10
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Call 0x1C17F20

Method: System.Void set_selectTarget(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable value)

Disassembly:
	0x03B55714 STP X22, X21, [X31 + 0x20]
	0x03B55718 STP X20, X19, [X31 + 0x30]
	0x03B5571C ADRP X21, 0x88D000
	0x03B55720 LDRB W8, [X21 + 0x936]
	0x03B55724 MOV X20, X1
	0x03B55728 MOV X19, X0
	0x03B5572C TBNZ X8, 0x0, 0x3B55768
	0x03B55730 ADRP X0, 0x605000
	0x03B55734 LDR X0, [X0 + 0x248]
	0x03B55738 BL 0x1C16CF4
	0x03B5573C ADRP X0, 0x605000
	0x03B55740 LDR X0, [X0 + 0x250]
	0x03B55744 BL 0x1C16CF4
	0x03B55748 ADRP X0, 0x605000
	0x03B5574C LDR X0, [X0 + 0xE10]
	0x03B55750 BL 0x1C16CF4
	0x03B55754 ADRP X0, 0x605000
	0x03B55758 LDR X0, [X0 + 0xE18]
	0x03B5575C BL 0x1C16CF4
	0x03B55760 MOVZ W8, 0x1
	0x03B55764 STRB W8, [X21 + 0x936]
	0x03B55768 MOV X0, X19
	0x03B5576C MOV X1, X20
	0x03B55770 BL 0x3B53844

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88E000
	006 Move W8, [X21+2345]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x606000
	014 Move X0, [X0+3512]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2345], W8
	018 Move X0, X20
	019 Call XRBaseInteractor.get_interactablesSelected, X0
	020 Compare X0, 0
	021 JumpIfEqual {33}
	022 Move X8, 0x606000
	023 Move X8, [X8+3512]
	024 Move X2, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X3, [X8]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call List`1<Object>.set_Item, X0, X1, X2
	032 Return 
	033 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> get_hoverTargets()

Disassembly:
	0x03B55774 CBZ X20, 0x3B55810
	0x03B55778 ADRP X8, 0x605000

ISIL:
	001 Move X0, [X0+416]
	002 Return X0

Method: System.Void GetHoverTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> targets)

Disassembly:
	0x03B5577C LDR X8, [X8 + 0x248]
	0x03B55780 ADRP X22, 0x605000
	0x03B55784 LDR X21, [X20 + 0x10]
	0x03B55788 LDR X0, [X8]
	0x03B5578C LDR X22, [X22 + 0xE10]
	0x03B55790 BL 0x1C16F10
	0x03B55794 LDR X2, [X22]
	0x03B55798 MOV X1, X19
	0x03B5579C MOV X3, X31
	0x03B557A0 MOV X22, X0
	0x03B557A4 BL 0x2A6B948
	0x03B557A8 CBZ X21, 0x3B55810
	0x03B557AC ADRP X23, 0x605000
	0x03B557B0 ADRP X24, 0x605000
	0x03B557B4 LDR X23, [X23 + 0x250]
	0x03B557B8 LDR X24, [X24 + 0xE18]
	0x03B557BC MOV X0, X21
	0x03B557C0 MOV X1, X22
	0x03B557C4 MOV X2, X31
	0x03B557C8 BL 0x3B67DE4
	0x03B557CC LDR X0, [X23]
	0x03B557D0 LDR X20, [X20 + 0x10]
	0x03B557D4 BL 0x1C16F10
	0x03B557D8 LDR X2, [X24]
	0x03B557DC MOV X1, X19
	0x03B557E0 MOV X3, X31
	0x03B557E4 MOV X21, X0
	0x03B557E8 BL 0x2A6B948
	0x03B557EC CBZ X20, 0x3B55810
	0x03B557F0 MOV X0, X20
	0x03B557F4 MOV X1, X21
	0x03B557F8 LDP X20, X19, [X31 + 0x30]
	0x03B557FC LDP X22, X21, [X31 + 0x20]
	0x03B55800 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x88E000
	006 Move W8, [X21+2346]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x606000
	014 Move X0, [X0+3520]
	015 Call 0x1C17CF4
	016 Move X0, 0x606000
	017 Move X0, [X0+3528]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2346], W8
	021 Compare X19, 0
	022 JumpIfEqual {44}
	023 Move W2, [X19+24]
	024 Move W8, [X19+28]
	025 Move X21, 0x606000
	026 Move X21, [X21+3520]
	027 Add W8, W8, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+24], W31
	030 Move [X19+28], W8
	031 Move X0, [X19+16]
	032 Move W1, W31
	033 Move X3, X31
	034 Call Array.Clear, X0, X1, X2
	035 Move X1, [X20+416]
	036 Move X2, [X21]
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call List`1<Object>.AddRange, X0, X1
	043 Return 
	044 Call 0x1C17F20

Method: System.Void GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> targets)

Disassembly:
	0x03B55804 MOV X2, X31

ISIL:
	001 Return 

Method: System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B55808 LDR X30, [X31], #0x40
	0x03B5580C B 0x3B67E94
	0x03B55810 BL 0x1C16F20
	0x03B55814 STR X30, [X31 - 0x20]!

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1336]
	003 Move X2, [X8+1344]
	004 CallNoReturn X3

Method: System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B55818 STP X20, X19, [X31 + 0x10]
	0x03B5581C CBZ X1, 0x3B55874
	0x03B55820 MOV X19, X0
	0x03B55824 LDR X0, [X0 + 0x2B0]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1352]
	003 Move X2, [X8+1360]
	004 CallNoReturn X3

Method: System.Boolean get_requireSelectExclusive()

Disassembly:
	0x03B55828 CBZ X0, 0x3B55874
	0x03B5582C LDR X20, [X1 + 0x18]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B55830 MOV X2, X31
	0x03B55834 MOV X1, X20
	0x03B55838 BL 0x3B90C78
	0x03B5583C LDR X0, [X19 + 0x2B0]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1592]
	003 Move X2, [X8+1600]
	004 CallNoReturn X3

Method: System.Void .ctor()

Disassembly:
	0x03B524A8 RET
	0x03B524AC BL 0x1C16F20
	0x03B524B0 RET
	0x03B524B4 STP X30, X21, [X31 - 0x20]!
	0x03B524B8 STP X20, X19, [X31 + 0x10]
	0x03B524BC ADRP X21, 0x890000
	0x03B524C0 ADRP X20, 0x5A1000
	0x03B524C4 LDRB W8, [X21 + 0x912]
	0x03B524C8 LDR X20, [X20 + 0x598]
	0x03B524CC MOV X19, X0
	0x03B524D0 TBNZ X8, 0x0, 0x3B5250C
	0x03B524D4 ADRP X0, 0x5A1000
	0x03B524D8 LDR X0, [X0 + 0xA58]
	0x03B524DC BL 0x1C16CF4
	0x03B524E0 ADRP X0, 0x5A1000
	0x03B524E4 LDR X0, [X0 + 0x598]
	0x03B524E8 BL 0x1C16CF4
	0x03B524EC ADRP X0, 0x608000
	0x03B524F0 LDR X0, [X0 + 0xD08]
	0x03B524F4 BL 0x1C16CF4
	0x03B524F8 ADRP X0, 0x5A1000
	0x03B524FC LDR X0, [X0 + 0xEC8]
	0x03B52500 BL 0x1C16CF4
	0x03B52504 MOVZ W8, 0x1
	0x03B52508 STRB W8, [X21 + 0x912]
	0x03B5250C LDR X0, [X20]
	0x03B52510 LDR X20, [X19 + 0x50]
	0x03B52514 LDR W8, [X0 + 0xE0]
	0x03B52518 CBNZ W8, 0x3B52520
	0x03B5251C BL 0x1C16DFC
	0x03B52520 MOV X0, X20
	0x03B52524 MOV X1, X31
	0x03B52528 MOV X2, X31
	0x03B5252C BL 0x3C3883C
	0x03B52530 TBZ X0, 0x0, 0x3B52678
	0x03B52534 MOV X0, X19
	0x03B52538 MOV X1, X31
	0x03B5253C BL 0x3C32ECC
	0x03B52540 CBZ X0, 0x3B52684
	0x03B52544 MOV X1, X31
	0x03B52548 BL 0x3C389D4
	0x03B5254C ADRP X8, 0x5A1000
	0x03B52550 LDR X8, [X8 + 0xEC8]
	0x03B52554 ADRP X9, 0x608000
	0x03B52558 LDR X9, [X9 + 0xD08]
	0x03B5255C MOV X1, X0
	0x03B52560 LDR X8, [X8]
	0x03B52564 MOV X3, X31
	0x03B52568 LDR X2, [X9]
	0x03B5256C MOV X0, X8
	0x03B52570 BL 0x32274B8
	0x03B52574 ADRP X8, 0x5A1000
	0x03B52578 LDR X8, [X8 + 0xA58]
	0x03B5257C MOV X21, X0
	0x03B52580 LDR X8, [X8]
	0x03B52584 MOV X0, X8
	0x03B52588 BL 0x1C16F10
	0x03B5258C MOV X1, X21
	0x03B52590 MOV X2, X31
	0x03B52594 MOV X20, X0
	0x03B52598 BL 0x3C35934
	0x03B5259C CBZ X20, 0x3B52684
	0x03B525A0 MOV X0, X20
	0x03B525A4 MOV X1, X31
	0x03B525A8 BL 0x3C356F8
	0x03B525AC MOV X20, X0
	0x03B525B0 STR X0, [X19 + 0x50]
	0x03B525B4 MOV X0, X19
	0x03B525B8 MOV X1, X31
	0x03B525BC BL 0x3C32E90
	0x03B525C0 CBZ X20, 0x3B52684
	0x03B525C4 MOV X1, X0
	0x03B525C8 MOV X0, X20
	0x03B525CC MOV W2, W31
	0x03B525D0 MOV X3, X31
	0x03B525D4 BL 0x3C3FEB8
	0x03B525D8 ADRP X21, 0x886000
	0x03B525DC LDRB W8, [X21 + 0x783]
	0x03B525E0 LDR X20, [X19 + 0x50]
	0x03B525E4 CBNZ W8, 0x3B525FC
	0x03B525E8 ADRP X0, 0x5A1000
	0x03B525EC LDR X0, [X0 + 0x5A0]
	0x03B525F0 BL 0x1C16CF4
	0x03B525F4 MOVZ W8, 0x1
	0x03B525F8 STRB W8, [X21 + 0x783]
	0x03B525FC CBZ X20, 0x3B52684
	0x03B52600 ADRP X8, 0x5A1000
	0x03B52604 LDR X8, [X8 + 0x5A0]
	0x03B52608 MOV X0, X20
	0x03B5260C MOV X1, X31
	0x03B52610 LDR X8, [X8]
	0x03B52614 LDR X8, [X8 + 0xB8]
	0x03B52618 LDP S1, S2, [X8 + 0x4]
	0x03B5261C LDR V0, [X8]
	0x03B52620 BL 0x3C3EC04
	0x03B52624 ADRP X20, 0x886000
	0x03B52628 LDRB W8, [X20 + 0x793]
	0x03B5262C LDR X19, [X19 + 0x50]
	0x03B52630 CBNZ W8, 0x3B52648
	0x03B52634 ADRP X0, 0x5A2000
	0x03B52638 LDR X0, [X0 + 0x5A8]
	0x03B5263C BL 0x1C16CF4
	0x03B52640 MOVZ W8, 0x1
	0x03B52644 STRB W8, [X20 + 0x793]
	0x03B52648 CBZ X19, 0x3B52684
	0x03B5264C ADRP X8, 0x5A2000
	0x03B52650 LDR X8, [X8 + 0x5A8]
	0x03B52654 MOV X0, X19
	0x03B52658 LDP X20, X19, [X31 + 0x10]
	0x03B5265C MOV X1, X31
	0x03B52660 LDR X8, [X8]
	0x03B52664 LDR X8, [X8 + 0xB8]
	0x03B52668 LDP S2, S3, [X8 + 0x8]
	0x03B5266C LDP S0, S1, [X8]
	0x03B52670 LDP X30, X21, [X31], #0x20
	0x03B52674 B 0x3C3F8B8
	0x03B52678 LDP X20, X19, [X31 + 0x10]
	0x03B5267C LDP X30, X21, [X31], #0x20
	0x03B52680 RET
	0x03B52684 BL 0x1C16F20
	0x03B52688 STP X30, X21, [X31 - 0x20]!
	0x03B5268C STP X20, X19, [X31 + 0x10]
	0x03B52690 ADRP X21, 0x890000
	0x03B52694 ADRP X20, 0x5A1000
	0x03B52698 LDRB W8, [X21 + 0x90A]
	0x03B5269C LDR X20, [X20 + 0x598]
	0x03B526A0 MOV X19, X0
	0x03B526A4 TBNZ X8, 0x0, 0x3B526C8
	0x03B526A8 ADRP X0, 0x608000
	0x03B526AC LDR X0, [X0 + 0x2E8]
	0x03B526B0 BL 0x1C16CF4
	0x03B526B4 ADRP X0, 0x5A1000
	0x03B526B8 LDR X0, [X0 + 0x598]
	0x03B526BC BL 0x1C16CF4
	0x03B526C0 MOVZ W8, 0x1
	0x03B526C4 STRB W8, [X21 + 0x90A]
	0x03B526C8 LDR X0, [X20]
	0x03B526CC LDR X20, [X19 + 0x30]
	0x03B526D0 LDR W8, [X0 + 0xE0]
	0x03B526D4 CBNZ W8, 0x3B526DC
	0x03B526D8 BL 0x1C16DFC
	0x03B526DC MOV X0, X20
	0x03B526E0 MOV X1, X31
	0x03B526E4 MOV X2, X31
	0x03B526E8 BL 0x3C354F8
	0x03B526EC TBNZ X0, 0x0, 0x3B52704
	0x03B526F0 ADRP X8, 0x608000
	0x03B526F4 LDR X8, [X8 + 0x2E8]
	0x03B526F8 LDR X0, [X8]
	0x03B526FC BL 0x295F6C8
	0x03B52700 STR X0, [X19 + 0x30]
	0x03B52704 LDP X20, X19, [X31 + 0x10]
	0x03B52708 LDP X30, X21, [X31], #0x20
	0x03B5270C RET
	0x03B52710 STP X30, X19, [X31 - 0x10]!
	0x03B52714 MOV X19, X0
	0x03B52718 BL 0x3B52688
	0x03B5271C MOV X0, X19
	0x03B52720 LDP X30, X19, [X31], #0x10
	0x03B52724 B 0x3B51E98
	0x03B52728 B 0x3B5272C
	0x03B5272C STP X30, X21, [X31 - 0x20]!
	0x03B52730 STP X20, X19, [X31 + 0x10]
	0x03B52734 ADRP X21, 0x890000
	0x03B52738 ADRP X20, 0x5A1000
	0x03B5273C LDRB W8, [X21 + 0x90C]
	0x03B52740 LDR X20, [X20 + 0x598]
	0x03B52744 MOV X19, X0
	0x03B52748 TBNZ X8, 0x0, 0x3B52760
	0x03B5274C ADRP X0, 0x5A1000
	0x03B52750 LDR X0, [X0 + 0x598]
	0x03B52754 BL 0x1C16CF4
	0x03B52758 MOVZ W8, 0x1
	0x03B5275C STRB W8, [X21 + 0x90C]
	0x03B52760 LDR X0, [X20]
	0x03B52764 LDR X20, [X19 + 0x110]
	0x03B52768 LDR W8, [X0 + 0xE0]
	0x03B5276C CBNZ W8, 0x3B52774
	0x03B52770 BL 0x1C16DFC
	0x03B52774 MOV X0, X20
	0x03B52778 MOV X1, X31
	0x03B5277C MOV X2, X31
	0x03B52780 BL 0x3C3883C
	0x03B52784 TBNZ X0, 0x0, 0x3B527A8
	0x03B52788 LDR X0, [X19 + 0x110]
	0x03B5278C CBZ X0, 0x3B527B4
	0x03B52790 LDR X8, [X0]
	0x03B52794 MOV X1, X19
	0x03B52798 LDR X9, [X8 + 0x4D8]
	0x03B5279C LDR X2, [X8 + 0x4E0]
	0x03B527A0 BLR X9
	0x03B527A4 STR X31, [X19 + 0x110]
	0x03B527A8 LDP X20, X19, [X31 + 0x10]
	0x03B527AC LDP X30, X21, [X31], #0x20
	0x03B527B0 RET
	0x03B527B4 BL 0x1C16F20
	0x03B527B8 STP X30, X21, [X31 - 0x20]!
	0x03B527BC STP X20, X19, [X31 + 0x10]
	0x03B527C0 ADRP X20, 0x890000
	0x03B527C4 ADRP X21, 0x5A1000
	0x03B527C8 LDRB W8, [X20 + 0x905]
	0x03B527CC LDR X21, [X21 + 0x598]
	0x03B527D0 MOV X19, X0
	0x03B527D4 TBNZ X8, 0x0, 0x3B527EC
	0x03B527D8 ADRP X0, 0x5A1000
	0x03B527DC LDR X0, [X0 + 0x598]
	0x03B527E0 BL 0x1C16CF4
	0x03B527E4 MOVZ W8, 0x1
	0x03B527E8 STRB W8, [X20 + 0x905]
	0x03B527EC LDR X0, [X21]
	0x03B527F0 LDR X20, [X19 + 0x30]
	0x03B527F4 LDR W8, [X0 + 0xE0]
	0x03B527F8 CBNZ W8, 0x3B52800
	0x03B527FC BL 0x1C16DFC
	0x03B52800 MOV X0, X20
	0x03B52804 MOV X1, X31
	0x03B52808 MOV X2, X31
	0x03B5280C BL 0x3C354F8
	0x03B52810 TBZ X0, 0x0, 0x3B52864
	0x03B52814 LDR X0, [X21]
	0x03B52818 LDR X20, [X19 + 0x60]
	0x03B5281C LDR W8, [X0 + 0xE0]
	0x03B52820 CBNZ W8, 0x3B52828
	0x03B52824 BL 0x1C16DFC
	0x03B52828 MOV X0, X20
	0x03B5282C MOV X1, X31
	0x03B52830 MOV X2, X31
	0x03B52834 BL 0x3C354F8
	0x03B52838 TBZ X0, 0x0, 0x3B52864
	0x03B5283C LDR X0, [X19 + 0x30]
	0x03B52840 CBZ X0, 0x3B52870
	0x03B52844 LDR X8, [X0]
	0x03B52848 LDR X2, [X19 + 0x60]
	0x03B5284C MOV X1, X19
	0x03B52850 LDP X20, X19, [X31 + 0x10]
	0x03B52854 LDR X4, [X8 + 0x3C8]
	0x03B52858 LDR X3, [X8 + 0x3D0]
	0x03B5285C LDP X30, X21, [X31], #0x20
	0x03B52860 BR X4
	0x03B52864 LDP X20, X19, [X31 + 0x10]
	0x03B52868 LDP X30, X21, [X31], #0x20
	0x03B5286C RET
	0x03B52870 BL 0x1C16F20
	0x03B52874 STR X30, [X31 - 0x20]!
	0x03B52878 STP X20, X19, [X31 + 0x10]
	0x03B5287C ADRP X20, 0x890000
	0x03B52880 LDRB W8, [X20 + 0x906]
	0x03B52884 MOV X19, X0
	0x03B52888 TBNZ X8, 0x0, 0x3B528B8
	0x03B5288C ADRP X0, 0x608000
	0x03B52890 LDR X0, [X0 + 0x938]
	0x03B52894 BL 0x1C16CF4
	0x03B52898 ADRP X0, 0x608000
	0x03B5289C LDR X0, [X0 + 0xCF8]
	0x03B528A0 BL 0x1C16CF4
	0x03B528A4 ADRP X0, 0x5A1000
	0x03B528A8 LDR X0, [X0 + 0x598]
	0x03B528AC BL 0x1C16CF4
	0x03B528B0 MOVZ W8, 0x1
	0x03B528B4 STRB W8, [X20 + 0x906]
	0x03B528B8 MOV X0, X19
	0x03B528BC BL 0x3B5201C
	0x03B528C0 CBZ X0, 0x3B52930
	0x03B528C4 ADRP X10, 0x608000
	0x03B528C8 LDR X8, [X0]
	0x03B528CC LDR X10, [X10 + 0xCF8]
	0x03B528D0 MOV X20, X0
	0x03B528D4 LDRH W9, [X8 + 0x12E]
	0x03B528D8 LDR X1, [X10]
	0x03B528DC CBZ X9, 0x3B52900
	0x03B528E0 LDR X10, [X8 + 0xB0]
	0x03B528E4 ADD X10, X10, 0x8
	0x03B528E8 LDUR X11, [X10 - 0x8]
	0x03B528EC CMP X11, X1
	0x03B528F0 B.EQ 0x3B52910
	0x03B528F4 SUBS X9, X9, 0x1
	0x03B528F8 ADD X10, X10, 0x10
	0x03B528FC B.NE 0x3B528E8
	0x03B52900 MOVZ W2, 0x2
	0x03B52904 MOV X0, X20
	0x03B52908 BL 0x1C5C788
	0x03B5290C B 0x3B52920
	0x03B52910 LDR W9, [X10]
	0x03B52914 ADD W9, W9, 0x2
	0x03B52918 ADD X8, X8, W9, 0x4, SXTW
	0x03B5291C ADD X0, X8, 0x138
	0x03B52920 LDP X8, X2, [X0]
	0x03B52924 MOV X0, X20
	0x03B52928 MOV X1, X19
	0x03B5292C BLR X8
	0x03B52930 LDR X20, [X19 + 0x38]
	0x03B52934 CBZ X20, 0x3B529DC
	0x03B52938 ADRP X9, 0x5A1000
	0x03B5293C LDR X9, [X9 + 0x598]
	0x03B52940 LDR X8, [X20]
	0x03B52944 LDR X0, [X9]
	0x03B52948 LDRB W10, [X8 + 0x130]
	0x03B5294C LDRB W9, [X0 + 0x130]
	0x03B52950 CMP W10, W9
	0x03B52954 B.CC 0x3B52994
	0x03B52958 LDR X8, [X8 + 0xC8]
	0x03B5295C ADD X8, X8, X9, 0x3, LSL
	0x03B52960 LDUR X8, [X8 - 0x8]
	0x03B52964 CMP X8, X0
	0x03B52968 B.NE 0x3B52994
	0x03B5296C LDR W8, [X0 + 0xE0]
	0x03B52970 CBNZ W8, 0x3B52978
	0x03B52974 BL 0x1C16DFC
	0x03B52978 MOV X0, X20
	0x03B5297C MOV X1, X31
	0x03B52980 MOV X2, X31
	0x03B52984 BL 0x3C354F8
	0x03B52988 TBZ X0, 0x0, 0x3B529DC
	0x03B5298C LDR X20, [X19 + 0x38]
	0x03B52990 CBZ X20, 0x3B52A10
	0x03B52994 ADRP X10, 0x608000
	0x03B52998 LDR X8, [X20]
	0x03B5299C LDR X10, [X10 + 0x938]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0x891000
	014 Move X20, 0x609000
	015 Move X24, 0x609000
	016 Move X23, 0x609000
	017 Move X29, 0x609000
	018 Move X28, 0x609000
	019 Move X27, 0x609000
	020 Move X26, 0x609000
	021 Move X22, 0x5A4000
	022 Move X21, 0x5A4000
	023 Move X20, [X20+1168]
	024 Move X24, [X24+1176]
	025 Move X23, [X23+1184]
	026 Move X29, [X29+1192]
	027 Move X28, [X28+3184]
	028 Move X27, [X27+3192]
	029 Move X26, [X26+3200]
	030 Move W8, [X25+2347]
	031 Move X22, [X22+2128]
	032 Move X21, [X21+2136]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {124}
	038 Move X0, 0x609000
	039 Move X0, [X0+1224]
	040 Call 0x1C17CF4
	041 Move X0, 0x609000
	042 Move X0, [X0+1232]
	043 Call 0x1C17CF4
	044 Move X0, 0x609000
	045 Move X0, [X0+3208]
	046 Call 0x1C17CF4
	047 Move X0, 0x609000
	048 Move X0, [X0+3216]
	049 Call 0x1C17CF4
	050 Move X0, 0x609000
	051 Move X0, [X0+3224]
	052 Call 0x1C17CF4
	053 Move X0, 0x609000
	054 Move X0, [X0+3232]
	055 Call 0x1C17CF4
	056 Move X0, 0x609000
	057 Move X0, [X0+1304]
	058 Call 0x1C17CF4
	059 Move X0, 0x609000
	060 Move X0, [X0+1312]
	061 Call 0x1C17CF4
	062 Move X0, 0x609000
	063 Move X0, [X0+1320]
	064 Call 0x1C17CF4
	065 Move X0, 0x609000
	066 Move X0, [X0+1328]
	067 Call 0x1C17CF4
	068 Move X0, 0x609000
	069 Move X0, [X0+3240]
	070 Call 0x1C17CF4
	071 Move X0, 0x609000
	072 Move X0, [X0+3248]
	073 Call 0x1C17CF4
	074 Move X0, 0x609000
	075 Move X0, [X0+3192]
	076 Call 0x1C17CF4
	077 Move X0, 0x609000
	078 Move X0, [X0+3200]
	079 Call 0x1C17CF4
	080 Move X0, 0x609000
	081 Move X0, [X0+3256]
	082 Call 0x1C17CF4
	083 Move X0, 0x609000
	084 Move X0, [X0+3184]
	085 Call 0x1C17CF4
	086 Move X0, 0x609000
	087 Move X0, [X0+1168]
	088 Call 0x1C17CF4
	089 Move X0, 0x609000
	090 Move X0, [X0+1176]
	091 Call 0x1C17CF4
	092 Move X0, 0x5A4000
	093 Move X0, [X0+2136]
	094 Call 0x1C17CF4
	095 Move X0, 0x609000
	096 Move X0, [X0+3152]
	097 Call 0x1C17CF4
	098 Move X0, 0x609000
	099 Move X0, [X0+3160]
	100 Call 0x1C17CF4
	101 Move X0, 0x5A4000
	102 Move X0, [X0+2128]
	103 Call 0x1C17CF4
	104 Move X0, 0x609000
	105 Move X0, [X0+1184]
	106 Call 0x1C17CF4
	107 Move X0, 0x609000
	108 Move X0, [X0+1192]
	109 Call 0x1C17CF4
	110 Move X0, 0x609000
	111 Move X0, [X0+1432]
	112 Call 0x1C17CF4
	113 Move X0, 0x609000
	114 Move X0, [X0+1440]
	115 Call 0x1C17CF4
	116 Move X0, 0x5A4000
	117 Move X0, [X0+2480]
	118 Call 0x1C17CF4
	119 Move X0, 0x609000
	120 Move X0, [X0+3264]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X25+2347], W8
	124 Move TEMP, 0
	125 Not TEMP
	126 Move W0, TEMP
	127 Move X1, X31
	128 Call LayerMask.op_Implicit, X0
	129 Move [X19+64], W0
	130 Move TEMP, 0
	131 Not TEMP
	132 Move W0, TEMP
	133 Move X1, X31
	134 Call InteractionLayerMask.op_Implicit, X0
	135 Move W25, 257
	136 Move [X19+68], X0
	137 NotImplemented "Instruction STRH not yet implemented."
	138 Move X0, [X20]
	139 Call 0x1C17F10
	140 Move X1, X31
	141 Move X20, X0
	142 Call HoverEnterEvent..ctor, X0
	143 Move [X19+112], X20
	144 Move X0, [X24]
	145 Call 0x1C17F10
	146 Move X1, X31
	147 Move X20, X0
	148 Call HoverExitEvent..ctor, X0
	149 Move [X19+120], X20
	150 Move X0, [X23]
	151 Call 0x1C17F10
	152 Move X1, X31
	153 Move X20, X0
	154 Call SelectEnterEvent..ctor, X0
	155 Move [X19+128], X20
	156 Move X0, [X29]
	157 Call 0x1C17F10
	158 Move X1, X31
	159 Move X20, X0
	160 Call SelectExitEvent..ctor, X0
	161 Move [X19+136], X20
	162 NotImplemented "Instruction STRH not yet implemented."
	163 Move X0, [X28]
	164 Call 0x1C17F10
	165 Move X2, [X27]
	166 Move W1, W31
	167 Move X20, X0
	168 Call 0x2D58B9C, X0, X1
	169 Move [X19+160], X20
	170 Move X0, [X26]
	171 Call 0x1C17F10
	172 Move X8, 0x609000
	173 Move X8, [X8+3240]
	174 Move W1, W31
	175 Move X20, X0
	176 Move X2, [X8]
	177 Call 0x2D58B9C, X0, X1
	178 Move [X19+168], X20
	179 Move X0, [X22]
	180 Call 0x1C17F10
	181 Move X1, [X21]
	182 Move X20, X0
	183 Call List`1<Object>..ctor, X0
	184 Move [X19+192], X20
	185 Move X8, 0x609000
	186 Move X8, [X8+1328]
	187 Move X0, [X8]
	188 Call 0x1C17F10
	189 Move X8, 0x609000
	190 Move X8, [X8+1312]
	191 Move X20, X0
	192 Move X1, [X8]
	193 Call 0x2D119CC, X0
	194 Compare X20, 0
	195 JumpIfEqual {340}
	196 Move X8, 0x609000
	197 Move X8, [X8+1432]
	198 Move X23, 0x609000
	199 Move X24, 0x609000
	200 Move X0, X20
	201 Move X2, [X8]
	202 Move X23, [X23+1320]
	203 Move X24, [X24+1304]
	204 Move W1, W31
	205 Call 0x25E99B0, X0, X1
	206 Move [X19+200], X20
	207 Move X0, [X22]
	208 Call 0x1C17F10
	209 Move X1, [X21]
	210 Move X20, X0
	211 Call List`1<Object>..ctor, X0
	212 Move [X19+208], X20
	213 Move X0, [X23]
	214 Call 0x1C17F10
	215 Move X1, [X24]
	216 Move X20, X0
	217 Call 0x2D119CC, X0
	218 Compare X20, 0
	219 JumpIfEqual {340}
	220 Move X8, 0x609000
	221 Move X8, [X8+1440]
	222 Move X29, 0x609000
	223 Move X21, 0x609000
	224 Move X22, 0x609000
	225 Move X25, 0x609000
	226 Move X28, 0x609000
	227 Move X27, 0x609000
	228 Move X26, 0x609000
	229 Move X24, 0x5A4000
	230 Move X29, [X29+1232]
	231 Move X21, [X21+1224]
	232 Move X22, [X22+3224]
	233 Move X25, [X25+3216]
	234 Move X28, [X28+3256]
	235 Move X27, [X27+3248]
	236 Move X26, [X26+3232]
	237 Move X24, [X24+2480]
	238 Move X2, [X8]
	239 Move X23, 0x609000
	240 Move X23, [X23+3264]
	241 Move X0, X20
	242 Move W1, W31
	243 Call 0x25E99B0, X0, X1
	244 Move [X19+216], X20
	245 Move X0, [X29]
	246 Call 0x1C17F10
	247 Move X4, [X21]
	248 Move S0, W31
	249 Move W1, 1
	250 Move X2, X31
	251 Move W3, W31
	252 Move X20, X0
	253 Call BindableVariable`1<Single>..ctor, X0, V0, X1, X2, X3
	254 Move [X19+224], X20
	255 Move X0, [X22]
	256 Call 0x1C17F10
	257 Move X1, [X25]
	258 Move X20, X0
	259 Call Dictionary`2<Object, Pose>..ctor, X0
	260 Move [X19+232], X20
	261 Move X0, [X22]
	262 Call 0x1C17F10
	263 Move X1, [X25]
	264 Move X20, X0
	265 Call Dictionary`2<Object, Pose>..ctor, X0
	266 Move [X19+240], X20
	267 Move X0, [X28]
	268 Call 0x1C17F10
	269 Move X2, [X27]
	270 Move W1, W31
	271 Move X20, X0
	272 Call 0x2D58B9C, X0, X1
	273 Move [X19+248], X20
	274 Move X0, [X26]
	275 Call 0x1C17F10
	276 Move X8, 0x609000
	277 Move X8, [X8+3208]
	278 Move X20, X0
	279 Move X1, [X8]
	280 Call Dictionary`2<Object, Single>..ctor, X0
	281 Move [X19+256], X20
	282 Move X0, [X24]
	283 Move W1, 6
	284 Call 0x1C17D6C
	285 Move [X19+344], X0
	286 Move X0, [X24]
	287 Move W1, 6
	288 Call 0x1C17D6C
	289 Move [X19+352], X0
	290 Move X0, [X23]
	291 Call 0x1C17F10
	292 Move X1, X31
	293 Move X20, X0
	294 Call XRInteractorEvent..ctor, X0
	295 Move [X19+384], X20
	296 Move X0, [X23]
	297 Call 0x1C17F10
	298 Move X1, X31
	299 Move X20, X0
	300 Call XRInteractorEvent..ctor, X0
	301 Move [X19+392], X20
	302 Move X0, [X23]
	303 Call 0x1C17F10
	304 Move X1, X31
	305 Move X20, X0
	306 Call XRInteractorEvent..ctor, X0
	307 Move [X19+400], X20
	308 Move X0, [X23]
	309 Call 0x1C17F10
	310 Move X1, X31
	311 Move X20, X0
	312 Call XRInteractorEvent..ctor, X0
	313 Move [X19+408], X20
	314 Move X8, 0x609000
	315 Move X8, [X8+3160]
	316 Move X0, [X8]
	317 Call 0x1C17F10
	318 Move X8, 0x609000
	319 Move X8, [X8+3152]
	320 Move X20, X0
	321 Move X1, [X8]
	322 Call List`1<Object>..ctor, X0
	323 Move [X19+416], X20
	324 Move X0, X19
	325 Move X20, [X31+80]
	326 Move X19, [X31+88]
	327 Move X22, [X31+64]
	328 Move X21, [X31+72]
	329 Move X24, [X31+48]
	330 Move X23, [X31+56]
	331 Move X26, [X31+32]
	332 Move X25, [X31+40]
	333 Move X28, [X31+16]
	334 Move X27, [X31+24]
	335 Move X1, X31
	336 Move X29, [X31+96]
	337 Move X30, [X31+104]
	338 Call MonoBehaviour..ctor, X0
	339 Return 
	340 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B55840 CBZ X0, 0x3B55874
	0x03B55844 MOV X1, X20
	0x03B55848 MOV X2, X31
	0x03B5584C BL 0x3B914F0
	0x03B55850 TBZ X0, 0x0, 0x3B55868
	0x03B55854 MOV X0, X19
	0x03B55858 MOV X1, X20
	0x03B5585C LDP X20, X19, [X31 + 0x10]
	0x03B55860 LDR X30, [X31], #0x20
	0x03B55864 B 0x3B55878
	0x03B55868 LDP X20, X19, [X31 + 0x10]
	0x03B5586C LDR X30, [X31], #0x20
	0x03B55870 RET
	0x03B55874 BL 0x1C16F20
	0x03B55878 STP X30, X21, [X31 - 0x20]!
	0x03B5587C STP X20, X19, [X31 + 0x10]
	0x03B55880 ADRP X21, 0x88D000
	0x03B55884 LDRB W8, [X21 + 0x937]
	0x03B55888 MOV X20, X1
	0x03B5588C MOV X19, X0
	0x03B55890 TBNZ X8, 0x0, 0x3B558B4
	0x03B55894 ADRP X0, 0x605000
	0x03B55898 LDR X0, [X0 + 0xE28]
	0x03B5589C BL 0x1C16CF4
	0x03B558A0 ADRP X0, 0x605000
	0x03B558A4 LDR X0, [X0 + 0xE30]
	0x03B558A8 BL 0x1C16CF4
	0x03B558AC MOVZ W8, 0x1
	0x03B558B0 STRB W8, [X21 + 0x937]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x88E000
	006 Move X21, 0x606000
	007 Move X19, 0x606000
	008 Move W8, [X20+2348]
	009 Move X21, [X21+3536]
	010 Move X19, [X19+872]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x606000
	016 Move X0, [X0+872]
	017 Call 0x1C17CF4
	018 Move X0, 0x606000
	019 Move X0, [X0+3536]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2348], W8
	023 Move X0, [X21]
	024 Move W1, 1
	025 Move W2, W31
	026 Move W3, W31
	027 Move X4, X31
	028 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	029 Move X8, [X19]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X8, [X8+184]
	033 Move [X8], X0
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: UnityEngine.Transform UnityEngine.XR.Interaction.Toolkit.IXRInteractor.get_transform()

Disassembly:
	0x03B558B4 LDR X0, [X19 + 0x2A0]
	0x03B558B8 CBZ X0, 0x3B55944

ISIL:
	001 Move X1, X31
	002 Call Component.get_transform, X0
	003 Return X0

