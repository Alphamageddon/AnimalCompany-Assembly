Type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual/ComputeNewRenderPoints_0000037E$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B4DEE0 CBNZ W8, 0x3B4DEE8
	0x03B4DEE4 BL 0x1C16DFC
	0x03B4DEE8 MOV X0, X20
	0x03B4DEEC MOV X1, X31
	0x03B4DEF0 MOV X2, X31
	0x03B4DEF4 BL 0x3C354F8
	0x03B4DEF8 ADRP X22, 0x5A6000
	0x03B4DEFC LDR X22, [X22 + 0x5A0]
	0x03B4DF00 TBZ X0, 0x0, 0x3B4DF8C
	0x03B4DF04 LDR X8, [X19 + 0x58]
	0x03B4DF08 CBZ X8, 0x3B4E38C
	0x03B4DF0C LDR X0, [X21]
	0x03B4DF10 LDR X20, [X8 + 0x38]
	0x03B4DF14 LDR W9, [X0 + 0xE0]
	0x03B4DF18 CBNZ W9, 0x3B4DF20
	0x03B4DF1C BL 0x1C16DFC
	0x03B4DF20 MOV X0, X20
	0x03B4DF24 MOV X1, X31
	0x03B4DF28 MOV X2, X31
	0x03B4DF2C BL 0x3C354F8
	0x03B4DF30 TBZ X0, 0x0, 0x3B4DF8C
	0x03B4DF34 LDR X8, [X19 + 0x58]
	0x03B4DF38 CBZ X8, 0x3B4E38C
	0x03B4DF3C LDR X0, [X8 + 0x38]
	0x03B4DF40 CBZ X0, 0x3B4E38C
	0x03B4DF44 MOV X1, X31
	0x03B4DF48 BL 0x3C356F8
	0x03B4DF4C CBZ X0, 0x3B4E38C
	0x03B4DF50 MOV X1, X31
	0x03B4DF54 BL 0x3C3F988
	0x03B4DF58 MOV V8.16B, V0.16B
	0x03B4DF5C MOV V9.16B, V1.16B
	0x03B4DF60 MOV V10.16B, V2.16B
	0x03B4DF64 B 0x3B4DFBC
	0x03B4DF68 LDP X20, X19, [X31 + 0x70]
	0x03B4DF6C LDP X22, X21, [X31 + 0x60]
	0x03B4DF70 LDP X30, X23, [X31 + 0x50]
	0x03B4DF74 LDP D9, D8, [X31 + 0x40]
	0x03B4DF78 LDP D11, D10, [X31 + 0x30]
	0x03B4DF7C LDP D13, D12, [X31 + 0x20]
	0x03B4DF80 LDP D15, D14, [X31 + 0x10]
	0x03B4DF84 ADD X31, X31, 0x80
	0x03B4DF88 RET
	0x03B4DF8C ADRP X20, 0x88B000
	0x03B4DF90 LDRB W8, [X20 + 0x786]
	0x03B4DF94 CBNZ W8, 0x3B4DFAC
	0x03B4DF98 ADRP X0, 0x5A6000
	0x03B4DF9C LDR X0, [X0 + 0x5A0]
	0x03B4DFA0 BL 0x1C16CF4
	0x03B4DFA4 MOVZ W8, 0x1
	0x03B4DFA8 STRB W8, [X20 + 0x786]
	0x03B4DFAC LDR X8, [X22]
	0x03B4DFB0 LDR X8, [X8 + 0xB8]
	0x03B4DFB4 LDP S8, S9, [X8 + 0x18]
	0x03B4DFB8 LDR V10, [X8 + 0x20]
	0x03B4DFBC ADRP X21, 0x5A6000
	0x03B4DFC0 LDRB W8, [X19 + 0x35]
	0x03B4DFC4 LDR X21, [X21 + 0x5A8]
	0x03B4DFC8 CBZ W8, 0x3B4E194
	0x03B4DFCC LDRB W8, [X19 + 0x8C]
	0x03B4DFD0 CBZ W8, 0x3B4E194
	0x03B4DFD4 LDP S0, S1, [X19 + 0x7C]
	0x03B4DFD8 LDR V2, [X19 + 0x84]
	0x03B4DFDC ADRP X20, 0x88C000
	0x03B4DFE0 LDRB W8, [X20 + 0x5AA]
	0x03B4DFE4 FMUL S0, S8, S0
	0x03B4DFE8 FMUL S1, S9, S1
	0x03B4DFEC FADD S0, S0, S1
	0x03B4DFF0 FMUL S1, S10, S2
	0x03B4DFF4 FADD S11, S1, S0
	0x03B4DFF8 FABS S12, S11

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x896000
	008 Move X23, 0x60E000
	009 Move W8, [X20+2254]
	010 Move X23, [X23+2600]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5CF000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x60E000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x60E000
	023 Move X0, [X0+2752]
	024 Call 0x1C17CF4
	025 Move X0, 0x60E000
	026 Move X0, [X0+2760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2254], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x5CF000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x60E000
	053 Move X8, [X8+2760]
	054 Move X21, [X8]
	055 Move X8, 0x60E000
	056 Move X8, [X8+2752]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B4DFFC CBNZ W8, 0x3B4E014
	0x03B4E000 ADRP X0, 0x5AC000
	0x03B4E004 LDR X0, [X0 + 0x4B8]
	0x03B4E008 BL 0x1C16CF4
	0x03B4E00C MOVZ W8, 0x1
	0x03B4E010 STRB W8, [X20 + 0x5AA]
	0x03B4E014 ADRP X20, 0x5AC000
	0x03B4E018 LDR X20, [X20 + 0x4B8]
	0x03B4E01C ADRP X9, 0xFFFFFFFFFCF9C000
	0x03B4E020 LDR V1, [X9 + 0x240]
	0x03B4E024 FMOV S0, 1
	0x03B4E028 LDR X8, [X20]
	0x03B4E02C FMOV S3, 8
	0x03B4E030 FMAXNM S4, S12, S0
	0x03B4E034 FMUL S1, S4, S1
	0x03B4E038 LDR X8, [X8 + 0xB8]
	0x03B4E03C FABD S0, S0, S0
	0x03B4E040 LDR V2, [X8]
	0x03B4E044 FMUL S2, S2, S3
	0x03B4E048 FCMP S1, S2
	0x03B4E04C FCSEL S1, S1, S2, GT
	0x03B4E050 FCMP S0, S1
	0x03B4E054 B.PL 0x3B4E080

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x895000
	005 Move X19, 0x60D000
	006 Move W8, [X20+2255]
	007 Move X19, [X19+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x60D000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2255], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call ComputeNewRenderPoints_0000037E$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B4E058 LDR X0, [X19 + 0x68]
	0x03B4E05C CBZ X0, 0x3B4E38C
	0x03B4E060 MOV X1, X31
	0x03B4E064 BL 0x3C32E90
	0x03B4E068 CBZ X0, 0x3B4E38C
	0x03B4E06C MOV X1, X31
	0x03B4E070 BL 0x3C3FA04
	0x03B4E074 FMUL S8, S11, S0
	0x03B4E078 FMUL S9, S11, S1
	0x03B4E07C FMUL S10, S11, S2
	0x03B4E080 ADRP X23, 0x88A000
	0x03B4E084 LDP S13, S11, [X19 + 0x7C]
	0x03B4E088 LDRB W8, [X23 + 0xE39]
	0x03B4E08C LDR V12, [X19 + 0x84]
	0x03B4E090 CBNZ W8, 0x3B4E0A8
	0x03B4E094 ADRP X0, 0x5AC000
	0x03B4E098 LDR X0, [X0 + 0x4B8]
	0x03B4E09C BL 0x1C16CF4
	0x03B4E0A0 MOVZ W8, 0x1
	0x03B4E0A4 STRB W8, [X23 + 0xE39]
	0x03B4E0A8 LDR X8, [X20]
	0x03B4E0AC FMUL S0, S13, S13
	0x03B4E0B0 FMUL S1, S11, S11
	0x03B4E0B4 FADD S0, S0, S1
	0x03B4E0B8 LDR X8, [X8 + 0xB8]
	0x03B4E0BC FMUL S1, S12, S12
	0x03B4E0C0 FADD S0, S1, S0
	0x03B4E0C4 LDR V2, [X8]
	0x03B4E0C8 FCMP S0, S2
	0x03B4E0CC B.MI 0x3B4E108
	0x03B4E0D0 FMUL S1, S8, S13
	0x03B4E0D4 FMUL S2, S9, S11
	0x03B4E0D8 FMUL S3, S10, S12
	0x03B4E0DC FADD S1, S1, S2
	0x03B4E0E0 FADD S1, S3, S1
	0x03B4E0E4 FMUL S2, S13, S1
	0x03B4E0E8 FMUL S3, S11, S1
	0x03B4E0EC FMUL S1, S12, S1
	0x03B4E0F0 FDIV S2, S2, S0
	0x03B4E0F4 FDIV S3, S3, S0
	0x03B4E0F8 FDIV S0, S1, S0
	0x03B4E0FC FSUB S8, S8, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x895000
	006 Move X19, 0x60D000
	007 Move X20, 0x5CE000
	008 Move W8, [X21+2256]
	009 Move X19, [X19+2768]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5CE000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x60D000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x60D000
	022 Move X0, [X0+2768]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2256], W8
	026 Move X0, [X20]
	027 Move X20, 0x60D000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+2600]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B4E100 FSUB S9, S9, S3

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B4E104 FSUB S10, S10, S0

ISIL:
	001 Call ComputeNewRenderPoints_0000037E$BurstDirectCall.Constructor
	002 Return 

Method: System.Int32 Invoke(System.Int32 numRenderPoints, System.Int32 numTargetPoints, System.Single targetLineLength, System.Boolean shouldSmoothPoints, System.Boolean shouldOverwritePoints, System.Single pointSmoothIncrement, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> targetPoints, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> previousRenderPoints, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> renderPoints)

Disassembly:
	0x03B4C830 ADD X31, X31, 0x90
	0x03B4C834 RET
	0x03B4C838 STP X30, X21, [X31 - 0x20]!
	0x03B4C83C STP X20, X19, [X31 + 0x10]
	0x03B4C840 LDR X8, [X2 + 0x8]
	0x03B4C844 STP X1, X2, [X0 + 0x20]
	0x03B4C848 MOV X19, X0
	0x03B4C84C MOV X20, X1
	0x03B4C850 STR X8, [X0 + 0x10]
	0x03B4C854 LDRB W21, [X2 + 0x52]
	0x03B4C858 STR X0, [X0 + 0x40]
	0x03B4C85C MOV X0, X2
	0x03B4C860 BL 0x1C16D84
	0x03B4C864 TBZ X0, 0x0, 0x3B4C880
	0x03B4C868 CMP W21, 0x6
	0x03B4C86C B.NE 0x3B4C884
	0x03B4C870 ADRP X8, 0xFFFFFFFFFE0B1000
	0x03B4C874 ADD X8, X8, 0x9E4
	0x03B4C878 STR X8, [X19 + 0x18]
	0x03B4C87C B 0x3B4C894
	0x03B4C880 CBZ X20, 0x3B4C8AC
	0x03B4C884 LDR X8, [X19 + 0x10]
	0x03B4C888 LDR X9, [X19 + 0x20]
	0x03B4C88C STR X8, [X19 + 0x18]
	0x03B4C890 STR X9, [X19 + 0x40]
	0x03B4C894 ADRP X8, 0xFFFFFFFFFE0B1000
	0x03B4C898 ADD X8, X8, 0x95C
	0x03B4C89C STR X8, [X19 + 0x38]
	0x03B4C8A0 LDP X20, X19, [X31 + 0x10]
	0x03B4C8A4 LDP X30, X21, [X31], #0x20
	0x03B4C8A8 RET
	0x03B4C8AC ADRP X1, 0xFFFFFFFFFCFCF000
	0x03B4C8B0 ADD X1, X1, 0xEE3
	0x03B4C8B4 MOV X0, X31
	0x03B4C8B8 BL 0x1C16F3C
	0x03B4C8BC MOV X1, X31
	0x03B4C8C0 BL 0x1C16DEC
	0x03B4C8C4 LDR X8, [X0 + 0x40]
	0x03B4C8C8 LDR X7, [X0 + 0x18]
	0x03B4C8CC LDR X6, [X0 + 0x28]
	0x03B4C8D0 MOV X0, X8
	0x03B4C8D4 BR X7
	0x03B4C8D8 SUB X31, X31, 0xA0
	0x03B4C8DC STP X29, X30, [X31 + 0x40]
	0x03B4C8E0 STP X28, X27, [X31 + 0x50]
	0x03B4C8E4 STP X26, X25, [X31 + 0x60]
	0x03B4C8E8 STP X24, X23, [X31 + 0x70]
	0x03B4C8EC STP X22, X21, [X31 + 0x80]
	0x03B4C8F0 STP X20, X19, [X31 + 0x90]
	0x03B4C8F4 STR W1, [X31 + 0x3C]
	0x03B4C8F8 STR S0, [X31 + 0x38]
	0x03B4C8FC ADRP X26, 0x896000
	0x03B4C900 ADRP X29, 0x5A7000
	0x03B4C904 ADRP X28, 0x5A7000
	0x03B4C908 ADRP X27, 0x5A7000
	0x03B4C90C LDRB W8, [X26 + 0x8C8]
	0x03B4C910 LDR X29, [X29 + 0x758]
	0x03B4C914 LDR X28, [X28 + 0xA90]
	0x03B4C918 LDR X27, [X27 + 0x5A0]
	0x03B4C91C MOV X19, X7
	0x03B4C920 MOV X20, X6
	0x03B4C924 MOV X22, X5
	0x03B4C928 MOV X23, X4
	0x03B4C92C MOV X24, X3
	0x03B4C930 MOV X25, X2
	0x03B4C934 MOV X21, X0
	0x03B4C938 TBNZ X8, 0x0, 0x3B4C974
	0x03B4C93C ADRP X0, 0x5A7000
	0x03B4C940 LDR X0, [X0 + 0x758]
	0x03B4C944 BL 0x1C16CF4
	0x03B4C948 ADRP X0, 0x60E000
	0x03B4C94C LDR X0, [X0 + 0xA98]
	0x03B4C950 BL 0x1C16CF4
	0x03B4C954 ADRP X0, 0x5A7000
	0x03B4C958 LDR X0, [X0 + 0xA90]
	0x03B4C95C BL 0x1C16CF4
	0x03B4C960 ADRP X0, 0x5A7000

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0x897000
	014 Move X27, 0x5D0000
	015 Move W8, [X26+2257]
	016 Move X27, [X27+2120]
	017 Move X19, X6
	018 Move X20, X5
	019 Move X21, X4
	020 Move V8, V1
	021 Move W23, W3
	022 Move W25, W2
	023 Move V9, V0
	024 Move W22, W1
	025 Move W24, W0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x5D0000
	031 Move X0, [X0+2120]
	032 Call 0x1C17CF4
	033 Move X0, 0x60F000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X26+2257], W8
	038 Move X0, [X27]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call BurstCompiler.get_IsEnabled
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {82}
	049 Move X8, 0x60F000
	050 Move X8, [X8+2600]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Call ComputeNewRenderPoints_0000037E$BurstDirectCall.GetFunctionPointer
	057 Compare X0, 0
	058 JumpIfEqual {82}
	059 Move X7, X0
	060 And W2, W25, 1
	061 And W3, W23, 1
	062 Move W0, W24
	063 Move W1, W22
	064 Move X4, X21
	065 Move X5, X20
	066 Move X6, X19
	067 Move X20, [X31+80]
	068 Move X19, [X31+88]
	069 Move X22, [X31+64]
	070 Move X21, [X31+72]
	071 Move X24, [X31+48]
	072 Move X23, [X31+56]
	073 Move X26, [X31+32]
	074 Move X25, [X31+40]
	075 Move X30, [X31+16]
	076 Move X27, [X31+24]
	077 Move V0, V9
	078 Move V1, V8
	079 Move D9, [X31+96]
	080 Move D8, [X31+104]
	081 CallNoReturn X7
	082 And W2, W25, 1
	083 And W3, W23, 1
	084 Move W0, W24
	085 Move W1, W22
	086 Move X4, X21
	087 Move X5, X20
	088 Move X6, X19
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X24, [X31+48]
	094 Move X23, [X31+56]
	095 Move X26, [X31+32]
	096 Move X25, [X31+40]
	097 Move X30, [X31+16]
	098 Move X27, [X31+24]
	099 Move V0, V9
	100 Move V1, V8
	101 Move X7, X31
	102 Move D9, [X31+96]
	103 Move D8, [X31+104]
	104 Call 0x3B65CB4
	105 Return X0

