Type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager

Method: System.Void add_interactionGroupRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> value)

Disassembly:
	0x03B6D23C MOV X0, X21
	0x03B6D240 BL 0x1C16F18
	0x03B6D244 BL 0x1C16F20
	0x03B6D248 BL 0x1C16F20
	0x03B6D24C MOV X20, X0
	0x03B6D250 STR X1, [X31]
	0x03B6D254 B 0x3B6D21C
	0x03B6D258 B 0x3B6D274
	0x03B6D25C B 0x3B6D274
	0x03B6D260 B 0x3B6D274
	0x03B6D264 B 0x3B6D274
	0x03B6D268 B 0x3B6D274
	0x03B6D26C B 0x3B6D274
	0x03B6D270 B 0x3B6D274
	0x03B6D274 MOV X20, X0
	0x03B6D278 CMP W1, 0x1
	0x03B6D27C B.NE 0x3B6D2B0
	0x03B6D280 MOV X0, X20
	0x03B6D284 BL 0x3EB1AD0
	0x03B6D288 LDR X21, [X0]
	0x03B6D28C BL 0x3EB1AE0
	0x03B6D290 ADRP X8, 0x5EE000
	0x03B6D294 LDR X8, [X8 + 0x608]
	0x03B6D298 ADD X0, X31, 0x40
	0x03B6D29C LDR X1, [X8]
	0x03B6D2A0 BL 0x2C0B1EC
	0x03B6D2A4 CBZ X21, 0x3B6D1C0
	0x03B6D2A8 MOV X0, X21
	0x03B6D2AC BL 0x1C16F18
	0x03B6D2B0 MOV X21, X31
	0x03B6D2B4 B 0x3B6D2BC
	0x03B6D2B8 MOV X20, X0
	0x03B6D2BC ADRP X8, 0x5EE000
	0x03B6D2C0 LDR X8, [X8 + 0x608]
	0x03B6D2C4 LDR X1, [X8]
	0x03B6D2C8 ADD X0, X31, 0x40
	0x03B6D2CC BL 0x2C0B1EC
	0x03B6D2D0 CBNZ X21, 0x3B6D2DC
	0x03B6D2D4 MOV X0, X20
	0x03B6D2D8 BL 0x1D2C690
	0x03B6D2DC MOV X0, X21
	0x03B6D2E0 BL 0x1C16F18
	0x03B6D2E4 BL 0x1990590
	0x03B6D2E8 SUB X31, X31, 0xD0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2567]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EE000
	017 Move X0, [X0+3792]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2567], W8
	021 Move X24, 0x5EE000
	022 Add X20, X20, 32
	023 Move X21, [X20]
	024 Move X24, [X24+3792]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_interactionGroupRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs> value)

Disassembly:
	0x03B6D2EC STP X29, X30, [X31 + 0x70]
	0x03B6D2F0 STP X28, X27, [X31 + 0x80]
	0x03B6D2F4 STP X26, X25, [X31 + 0x90]
	0x03B6D2F8 STP X24, X23, [X31 + 0xA0]
	0x03B6D2FC STP X22, X21, [X31 + 0xB0]
	0x03B6D300 STP X20, X19, [X31 + 0xC0]
	0x03B6D304 ADRP X20, 0x875000
	0x03B6D308 ADRP X24, 0x5ED000
	0x03B6D30C LDRB W8, [X20 + 0xA1B]
	0x03B6D310 LDR X24, [X24 + 0xE20]
	0x03B6D314 MOV X19, X0
	0x03B6D318 TBNZ X8, 0x0, 0x3B6D3F0
	0x03B6D31C ADRP X0, 0x5EE000
	0x03B6D320 LDR X0, [X0 + 0x658]
	0x03B6D324 BL 0x1C16CF4
	0x03B6D328 ADRP X0, 0x5EE000
	0x03B6D32C LDR X0, [X0 + 0x660]
	0x03B6D330 BL 0x1C16CF4
	0x03B6D334 ADRP X0, 0x5EE000
	0x03B6D338 LDR X0, [X0 + 0x668]
	0x03B6D33C BL 0x1C16CF4
	0x03B6D340 ADRP X0, 0x5EE000
	0x03B6D344 LDR X0, [X0 + 0x670]
	0x03B6D348 BL 0x1C16CF4
	0x03B6D34C ADRP X0, 0x5EE000
	0x03B6D350 LDR X0, [X0 + 0x678]
	0x03B6D354 BL 0x1C16CF4
	0x03B6D358 ADRP X0, 0x5EE000
	0x03B6D35C LDR X0, [X0 + 0x680]
	0x03B6D360 BL 0x1C16CF4
	0x03B6D364 ADRP X0, 0x5EE000
	0x03B6D368 LDR X0, [X0 + 0x688]
	0x03B6D36C BL 0x1C16CF4
	0x03B6D370 ADRP X0, 0x5EE000
	0x03B6D374 LDR X0, [X0 + 0x690]
	0x03B6D378 BL 0x1C16CF4
	0x03B6D37C ADRP X0, 0x5EE000
	0x03B6D380 LDR X0, [X0 + 0x698]
	0x03B6D384 BL 0x1C16CF4
	0x03B6D388 ADRP X0, 0x5EE000
	0x03B6D38C LDR X0, [X0 + 0x6A0]
	0x03B6D390 BL 0x1C16CF4
	0x03B6D394 ADRP X0, 0x5ED000
	0x03B6D398 LDR X0, [X0 + 0x320]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2568]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EE000
	017 Move X0, [X0+3792]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2568], W8
	021 Move X24, 0x5EE000
	022 Add X20, X20, 32
	023 Move X21, [X20]
	024 Move X24, [X24+3792]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_interactionGroupUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> value)

Disassembly:
	0x03B6D39C BL 0x1C16CF4
	0x03B6D3A0 ADRP X0, 0x5ED000
	0x03B6D3A4 LDR X0, [X0 + 0x938]
	0x03B6D3A8 BL 0x1C16CF4
	0x03B6D3AC ADRP X0, 0x5ED000
	0x03B6D3B0 LDR X0, [X0 + 0x328]
	0x03B6D3B4 BL 0x1C16CF4
	0x03B6D3B8 ADRP X0, 0x5EE000
	0x03B6D3BC LDR X0, [X0 + 0x6A8]
	0x03B6D3C0 BL 0x1C16CF4
	0x03B6D3C4 ADRP X0, 0x5EE000
	0x03B6D3C8 LDR X0, [X0 + 0x6B0]
	0x03B6D3CC BL 0x1C16CF4
	0x03B6D3D0 ADRP X0, 0x5EE000
	0x03B6D3D4 LDR X0, [X0 + 0xF8]
	0x03B6D3D8 BL 0x1C16CF4
	0x03B6D3DC ADRP X0, 0x5ED000
	0x03B6D3E0 LDR X0, [X0 + 0xE20]
	0x03B6D3E4 BL 0x1C16CF4
	0x03B6D3E8 MOVZ W8, 0x1
	0x03B6D3EC STRB W8, [X20 + 0xA1B]
	0x03B6D3F0 MOV X0, X19
	0x03B6D3F4 STP X31, X31, [X31 + 0x50]
	0x03B6D3F8 STR X31, [X31 + 0x60]
	0x03B6D3FC STP X31, X31, [X31 + 0x30]
	0x03B6D400 STR X31, [X31 + 0x40]
	0x03B6D404 BL 0x3B6CED0
	0x03B6D408 MOV X0, X19
	0x03B6D40C BL 0x3B6E270
	0x03B6D410 LDR X0, [X24]
	0x03B6D414 LDR W8, [X0 + 0xE0]
	0x03B6D418 CBNZ W8, 0x3B6D424
	0x03B6D41C BL 0x1C16DFC
	0x03B6D420 LDR X0, [X24]
	0x03B6D424 LDR X8, [X0 + 0xB8]
	0x03B6D428 MOV X1, X31
	0x03B6D42C MOV X2, X31
	0x03B6D430 LDR X21, [X8 + 0x10]
	0x03B6D434 MOV X0, X21
	0x03B6D438 BL 0x33C5D2C
	0x03B6D43C TBZ X0, 0x0, 0x3B6D44C
	0x03B6D440 MOV X0, X21
	0x03B6D444 MOV X1, X31
	0x03B6D448 BL 0x3BFE970

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2569]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EE000
	017 Move X0, [X0+3800]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2569], W8
	021 Move X24, 0x5EE000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+3800]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_interactionGroupUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs> value)

Disassembly:
	0x03B6D44C LDR X8, [X19]
	0x03B6D450 LDP X9, X2, [X8 + 0x1E8]
	0x03B6D454 MOVZ W1, 0x1
	0x03B6D458 MOV X0, X19
	0x03B6D45C BLR X9
	0x03B6D460 MOV X22, X31
	0x03B6D464 MOV X0, X21
	0x03B6D468 MOV X1, X31
	0x03B6D46C MOV X2, X31
	0x03B6D470 BL 0x33C5D2C
	0x03B6D474 TBZ X0, 0x0, 0x3B6D484
	0x03B6D478 MOV X0, X21
	0x03B6D47C MOV X1, X31
	0x03B6D480 BL 0x3BFEA0C
	0x03B6D484 CBNZ X22, 0x3B6DDE0
	0x03B6D488 LDR X8, [X19 + 0xA0]
	0x03B6D48C CBZ X8, 0x3B6DDBC
	0x03B6D490 LDR X0, [X8 + 0x10]
	0x03B6D494 CBZ X0, 0x3B6DDBC
	0x03B6D498 ADRP X8, 0x5EE000
	0x03B6D49C LDR X8, [X8 + 0x6B0]
	0x03B6D4A0 ADRP X23, 0x5EE000
	0x03B6D4A4 ADRP X28, 0x5EE000
	0x03B6D4A8 ADRP X29, 0x5ED000
	0x03B6D4AC ADRP X26, 0x5EE000
	0x03B6D4B0 ADRP X27, 0x5EE000
	0x03B6D4B4 LDR X23, [X23 + 0x678]
	0x03B6D4B8 LDR X28, [X28 + 0x698]
	0x03B6D4BC LDR X29, [X29 + 0x938]
	0x03B6D4C0 LDR X26, [X26 + 0x680]
	0x03B6D4C4 LDR X27, [X27 + 0x6A0]
	0x03B6D4C8 LDR X1, [X8]
	0x03B6D4CC ADD X8, X31, 0x18
	0x03B6D4D0 BL 0x301CB58
	0x03B6D4D4 LDUR V0, [X31 + 0x18]
	0x03B6D4D8 LDR X8, [X31 + 0x28]
	0x03B6D4DC STR V0, [X31 + 0x5]
	0x03B6D4E0 STR X8, [X31 + 0x60]
	0x03B6D4E4 LDR X1, [X23]
	0x03B6D4E8 ADD X0, X31, 0x50
	0x03B6D4EC BL 0x2BC4350
	0x03B6D4F0 TBZ X0, 0x0, 0x3B6D6E4
	0x03B6D4F4 LDR X0, [X19 + 0xA0]
	0x03B6D4F8 CBZ X0, 0x3B6DD94

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2570]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EE000
	017 Move X0, [X0+3800]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2570], W8
	021 Move X24, 0x5EE000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+3800]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_interactorRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> value)

Disassembly:
	0x03B6D4FC LDR X8, [X0]
	0x03B6D500 LDR X20, [X31 + 0x60]
	0x03B6D504 LDP X9, X2, [X8 + 0x188]
	0x03B6D508 MOV X1, X20
	0x03B6D50C BLR X9
	0x03B6D510 TBZ X0, 0x0, 0x3B6D4E4
	0x03B6D514 LDR X0, [X19 + 0xE0]
	0x03B6D518 CBZ X0, 0x3B6DD9C
	0x03B6D51C LDR X2, [X28]
	0x03B6D520 MOV X1, X20
	0x03B6D524 BL 0x2DBE4B0
	0x03B6D528 TBNZ X0, 0x0, 0x3B6D4E4
	0x03B6D52C LDR X0, [X24]
	0x03B6D530 LDR W8, [X0 + 0xE0]
	0x03B6D534 CBNZ W8, 0x3B6D540
	0x03B6D538 BL 0x1C16DFC
	0x03B6D53C LDR X0, [X24]
	0x03B6D540 LDR X8, [X0 + 0xB8]
	0x03B6D544 LDR X21, [X8 + 0x48]
	0x03B6D548 MOV X0, X21
	0x03B6D54C MOV X1, X31
	0x03B6D550 MOV X2, X31
	0x03B6D554 BL 0x33C5D2C
	0x03B6D558 TBZ X0, 0x0, 0x3B6D568
	0x03B6D55C MOV X0, X21
	0x03B6D560 MOV X1, X31
	0x03B6D564 BL 0x3BFE970
	0x03B6D568 LDR X8, [X19]
	0x03B6D56C LDR X9, [X8 + 0x318]
	0x03B6D570 LDR X2, [X8 + 0x320]
	0x03B6D574 MOV X0, X19
	0x03B6D578 MOV X1, X20
	0x03B6D57C BLR X9
	0x03B6D580 MOV X22, X31
	0x03B6D584 MOVZ W25, 0x5
	0x03B6D588 MOV X0, X21
	0x03B6D58C MOV X1, X31
	0x03B6D590 MOV X2, X31
	0x03B6D594 BL 0x33C5D2C
	0x03B6D598 TBZ X0, 0x0, 0x3B6D5A8
	0x03B6D59C MOV X0, X21
	0x03B6D5A0 MOV X1, X31
	0x03B6D5A4 BL 0x3BFEA0C
	0x03B6D5A8 CBNZ X22, 0x3B6DDA4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2571]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EE000
	017 Move X0, [X0+3304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2571], W8
	021 Move X24, 0x5EE000
	022 Add X20, X20, 48
	023 Move X21, [X20]
	024 Move X24, [X24+3304]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_interactorRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs> value)

Disassembly:
	0x03B6D5AC CMP W25, 0x5
	0x03B6D5B0 B.EQ 0x3B6D5B8
	0x03B6D5B4 CBNZ W25, 0x3B6DD5C
	0x03B6D5B8 LDR X0, [X24]
	0x03B6D5BC LDR W8, [X0 + 0xE0]
	0x03B6D5C0 CBNZ W8, 0x3B6D5CC
	0x03B6D5C4 BL 0x1C16DFC
	0x03B6D5C8 LDR X0, [X24]
	0x03B6D5CC LDR X8, [X0 + 0xB8]
	0x03B6D5D0 LDR X21, [X8 + 0x30]
	0x03B6D5D4 MOV X0, X21
	0x03B6D5D8 MOV X1, X31
	0x03B6D5DC MOV X2, X31
	0x03B6D5E0 BL 0x33C5D2C
	0x03B6D5E4 TBZ X0, 0x0, 0x3B6D5F4
	0x03B6D5E8 MOV X0, X21
	0x03B6D5EC MOV X1, X31
	0x03B6D5F0 BL 0x3BFE970
	0x03B6D5F4 CBZ X20, 0x3B6D690
	0x03B6D5F8 LDR X8, [X20]
	0x03B6D5FC LDR X1, [X29]
	0x03B6D600 LDRH W9, [X8 + 0x12E]
	0x03B6D604 CBZ X9, 0x3B6D628
	0x03B6D608 LDR X10, [X8 + 0xB0]
	0x03B6D60C ADD X10, X10, 0x8
	0x03B6D610 LDUR X11, [X10 - 0x8]
	0x03B6D614 CMP X11, X1
	0x03B6D618 B.EQ 0x3B6D638
	0x03B6D61C SUBS X9, X9, 0x1
	0x03B6D620 ADD X10, X10, 0x10
	0x03B6D624 B.NE 0x3B6D610
	0x03B6D628 MOVZ W2, 0x14
	0x03B6D62C MOV X0, X20
	0x03B6D630 BL 0x1C5C788
	0x03B6D634 B 0x3B6D648
	0x03B6D638 LDR W9, [X10]
	0x03B6D63C ADD W9, W9, 0x14
	0x03B6D640 ADD X8, X8, W9, 0x4, SXTW
	0x03B6D644 ADD X0, X8, 0x138
	0x03B6D648 LDP X8, X1, [X0]
	0x03B6D64C MOV X0, X20
	0x03B6D650 BLR X8
	0x03B6D654 MOV X20, X31
	0x03B6D658 MOVZ W25, 0x3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2572]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EE000
	017 Move X0, [X0+3304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2572], W8
	021 Move X24, 0x5EE000
	022 Add X20, X20, 48
	023 Move X21, [X20]
	024 Move X24, [X24+3304]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_interactorUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> value)

Disassembly:
	0x03B6D65C MOV X0, X21
	0x03B6D660 MOV X1, X31
	0x03B6D664 MOV X2, X31
	0x03B6D668 BL 0x33C5D2C
	0x03B6D66C TBZ X0, 0x0, 0x3B6D67C
	0x03B6D670 MOV X0, X21
	0x03B6D674 MOV X1, X31
	0x03B6D678 BL 0x3BFEA0C
	0x03B6D67C CBNZ X20, 0x3B6DDAC
	0x03B6D680 CMP W25, 0x3
	0x03B6D684 B.EQ 0x3B6D4E4
	0x03B6D688 CBZ W25, 0x3B6D4E4
	0x03B6D68C B 0x3B6DD5C
	0x03B6D690 BL 0x1C16F20
	0x03B6D694 B 0x3B6DF68
	0x03B6D698 CMP W1, 0x1
	0x03B6D69C STP X1, X0, [X31 + 0x8]
	0x03B6D6A0 B.NE 0x3B6DE20
	0x03B6D6A4 LDR X0, [X31 + 0x10]
	0x03B6D6A8 BL 0x3EB1AD0
	0x03B6D6AC LDR X22, [X0]
	0x03B6D6B0 BL 0x3EB1AE0
	0x03B6D6B4 MOV W25, W31
	0x03B6D6B8 B 0x3B6D588
	0x03B6D6BC CMP W1, 0x1
	0x03B6D6C0 MOV X22, X0
	0x03B6D6C4 STR X1, [X31 + 0x8]
	0x03B6D6C8 B.NE 0x3B6DDE8
	0x03B6D6CC MOV X0, X22
	0x03B6D6D0 BL 0x3EB1AD0
	0x03B6D6D4 LDR X20, [X0]
	0x03B6D6D8 BL 0x3EB1AE0
	0x03B6D6DC MOV W25, W31
	0x03B6D6E0 B 0x3B6D65C
	0x03B6D6E4 ADRP X8, 0x5EE000
	0x03B6D6E8 LDR X8, [X8 + 0x668]
	0x03B6D6EC ADD X0, X31, 0x50
	0x03B6D6F0 LDR X1, [X8]
	0x03B6D6F4 BL 0x2BC434C
	0x03B6D6F8 LDR X8, [X19 + 0x98]
	0x03B6D6FC CBZ X8, 0x3B6DDBC
	0x03B6D700 ADRP X25, 0x5EE000
	0x03B6D704 ADRP X29, 0x5ED000
	0x03B6D708 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2573]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EE000
	017 Move X0, [X0+3312]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2573], W8
	021 Move X24, 0x5EE000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+3312]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_interactorUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs> value)

Disassembly:
	0x03B6D70C LDR X25, [X25 + 0xF8]
	0x03B6D710 LDR X29, [X29 + 0x328]
	0x03B6D714 CBZ X0, 0x3B6DDBC
	0x03B6D718 ADRP X8, 0x5EE000
	0x03B6D71C LDR X8, [X8 + 0x6A8]
	0x03B6D720 LDR X1, [X8]
	0x03B6D724 ADD X8, X31, 0x18
	0x03B6D728 BL 0x301CB58
	0x03B6D72C LDUR V0, [X31 + 0x18]
	0x03B6D730 LDR X8, [X31 + 0x28]
	0x03B6D734 STR V0, [X31 + 0x3]
	0x03B6D738 STR X8, [X31 + 0x40]
	0x03B6D73C LDR X1, [X26]
	0x03B6D740 ADD X0, X31, 0x30
	0x03B6D744 BL 0x2BC4350
	0x03B6D748 TBZ X0, 0x0, 0x3B6DB94
	0x03B6D74C LDR X0, [X19 + 0x98]
	0x03B6D750 CBZ X0, 0x3B6DD98
	0x03B6D754 LDR X8, [X0]
	0x03B6D758 LDR X20, [X31 + 0x40]
	0x03B6D75C LDP X9, X2, [X8 + 0x188]
	0x03B6D760 MOV X1, X20
	0x03B6D764 BLR X9
	0x03B6D768 TBZ X0, 0x0, 0x3B6D73C
	0x03B6D76C LDR X0, [X19 + 0xD8]
	0x03B6D770 CBZ X0, 0x3B6DDA0
	0x03B6D774 LDR X2, [X27]
	0x03B6D778 MOV X1, X20
	0x03B6D77C BL 0x2DBE4B0
	0x03B6D780 TBNZ X0, 0x0, 0x3B6D73C
	0x03B6D784 LDR X0, [X24]
	0x03B6D788 LDR W8, [X0 + 0xE0]
	0x03B6D78C CBNZ W8, 0x3B6D798
	0x03B6D790 BL 0x1C16DFC
	0x03B6D794 LDR X0, [X24]
	0x03B6D798 LDR X8, [X0 + 0xB8]
	0x03B6D79C LDR X21, [X8 + 0x38]
	0x03B6D7A0 MOV X0, X21
	0x03B6D7A4 MOV X1, X31
	0x03B6D7A8 MOV X2, X31
	0x03B6D7AC BL 0x33C5D2C
	0x03B6D7B0 TBZ X0, 0x0, 0x3B6D7C0
	0x03B6D7B4 MOV X0, X21
	0x03B6D7B8 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2574]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EE000
	017 Move X0, [X0+3312]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2574], W8
	021 Move X24, 0x5EE000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+3312]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_interactableRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> value)

Disassembly:
	0x03B68A98 MOV X1, X31
	0x03B68A9C LDR X8, [X8 + 0xB8]
	0x03B68AA0 STR W0, [X8 + 0xC]
	0x03B68AA4 LDR X0, [X22]
	0x03B68AA8 BL 0x3C124EC
	0x03B68AAC LDR X8, [X19]
	0x03B68AB0 MOV X1, X31
	0x03B68AB4 LDR X8, [X8 + 0xB8]
	0x03B68AB8 STR W0, [X8 + 0x10]
	0x03B68ABC LDR X0, [X21]
	0x03B68AC0 BL 0x3C124EC
	0x03B68AC4 LDR X8, [X19]
	0x03B68AC8 MOV X1, X31
	0x03B68ACC LDR X8, [X8 + 0xB8]
	0x03B68AD0 STR W0, [X8 + 0x14]
	0x03B68AD4 LDR X0, [X20]
	0x03B68AD8 BL 0x3C124EC
	0x03B68ADC LDR X8, [X19]
	0x03B68AE0 LDP X20, X19, [X31 + 0x40]
	0x03B68AE4 LDP X22, X21, [X31 + 0x30]
	0x03B68AE8 LDP X24, X23, [X31 + 0x20]
	0x03B68AEC LDR X8, [X8 + 0xB8]
	0x03B68AF0 LDP X26, X25, [X31 + 0x10]
	0x03B68AF4 STR W0, [X8 + 0x18]
	0x03B68AF8 LDP X30, X27, [X31], #0x50
	0x03B68AFC RET
	0x03B68B00 RET
	0x03B68B04 STR X30, [X31 - 0x20]!
	0x03B68B08 STP X20, X19, [X31 + 0x10]
	0x03B68B0C ADRP X20, 0x87A000
	0x03B68B10 LDRB W8, [X20 + 0x9D0]
	0x03B68B14 MOV X19, X0
	0x03B68B18 TBNZ X8, 0x0, 0x3B68B30
	0x03B68B1C ADRP X0, 0x5F2000
	0x03B68B20 LDR X0, [X0 + 0x7C8]
	0x03B68B24 BL 0x1C16CF4
	0x03B68B28 MOVZ W8, 0x1
	0x03B68B2C STRB W8, [X20 + 0x9D0]
	0x03B68B30 LDR W8, [X19 + 0x10]
	0x03B68B34 CMP W8, 0x1
	0x03B68B38 B.EQ 0x3B68B4C
	0x03B68B3C CBNZ W8, 0x3B68BA4
	0x03B68B40 MOVN W8, 0x0
	0x03B68B44 STR W8, [X19 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x87B000
	009 Move W8, [X21+2575]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5F3000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2575], W8
	021 Move X24, 0x5F3000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+584]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_interactableRegistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> value)

Disassembly:
	0x03B68DE4 LDR W8, [X19 + 0x18]
	0x03B68DE8 LSLV W9, W23, W0
	0x03B68DEC ADDS W31, W0, 0x1
	0x03B68DF0 CSEL W9, W31, W9, EQ
	0x03B68DF4 ADD X21, X21, 0x1
	0x03B68DF8 CMP X21, W8, SXTW
	0x03B68DFC ORR W20, W9, W20, 0x0
	0x03B68E00 B.LT 0x3B68DD4
	0x03B68E04 B 0x3B68E0C
	0x03B68E08 MOV W20, W31
	0x03B68E0C MOV W0, W20
	0x03B68E10 LDP X20, X19, [X31 + 0x20]
	0x03B68E14 LDP X22, X21, [X31 + 0x10]
	0x03B68E18 LDP X30, X23, [X31], #0x30
	0x03B68E1C RET
	0x03B68E20 BL 0x1C16F28
	0x03B68E24 ADRP X0, 0x590000
	0x03B68E28 LDR X0, [X0 + 0x528]
	0x03B68E2C BL 0x1C16D08
	0x03B68E30 BL 0x1C16F10
	0x03B68E34 MOV X19, X0
	0x03B68E38 ADRP X0, 0x5F3000
	0x03B68E3C LDR X0, [X0 + 0x4C0]
	0x03B68E40 BL 0x1C16D08
	0x03B68E44 MOV X1, X0
	0x03B68E48 MOV X0, X19
	0x03B68E4C MOV X2, X31
	0x03B68E50 BL 0x330E100
	0x03B68E54 ADRP X0, 0x5F3000
	0x03B68E58 LDR X0, [X0 + 0x4C8]
	0x03B68E5C BL 0x1C16D08
	0x03B68E60 MOV X1, X0
	0x03B68E64 MOV X0, X19
	0x03B68E68 BL 0x1C16DEC
	0x03B68E6C LDR W8, [X0]
	0x03B68E70 STR W8, [X0 + 0x4]
	0x03B68E74 RET
	0x03B68E78 RET
	0x03B68E7C STR X30, [X31 - 0x10]!
	0x03B68E80 LDR X8, [X0 + 0x18]
	0x03B68E84 CBZ X8, 0x3B68EA8
	0x03B68E88 LDR W9, [X8 + 0x18]
	0x03B68E8C CMP W9, W1
	0x03B68E90 B.LS 0x3B68EAC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x87B000
	009 Move W8, [X21+2576]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5F3000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2576], W8
	021 Move X24, 0x5F3000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+584]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_interactableUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> value)

Disassembly:
	0x03B68B48 B 0x3B68B70
	0x03B68B4C LDR X8, [X19 + 0x20]
	0x03B68B50 MOVN W9, 0x0
	0x03B68B54 STR W9, [X19 + 0x10]
	0x03B68B58 CBZ X8, 0x3B68BB4
	0x03B68B5C LDR X0, [X8 + 0x208]
	0x03B68B60 CBZ X0, 0x3B68BB4
	0x03B68B64 LDR X1, [X8 + 0x200]
	0x03B68B68 MOV X2, X31
	0x03B68B6C BL 0x3B90FF0
	0x03B68B70 ADRP X20, 0x5F2000
	0x03B68B74 LDR X20, [X20 + 0x7C8]
	0x03B68B78 LDR X0, [X20]
	0x03B68B7C LDR W8, [X0 + 0xE0]
	0x03B68B80 CBNZ W8, 0x3B68B8C
	0x03B68B84 BL 0x1C16DFC
	0x03B68B88 LDR X0, [X20]
	0x03B68B8C LDR X8, [X0 + 0xB8]
	0x03B68B90 MOVZ W0, 0x1
	0x03B68B94 LDR X8, [X8 + 0x8]
	0x03B68B98 STR W0, [X19 + 0x10]
	0x03B68B9C STR X8, [X19 + 0x18]
	0x03B68BA0 B 0x3B68BA8
	0x03B68BA4 MOV W0, W31
	0x03B68BA8 LDP X20, X19, [X31 + 0x10]
	0x03B68BAC LDR X30, [X31], #0x20
	0x03B68BB0 RET
	0x03B68BB4 BL 0x1C16F20
	0x03B68BB8 LDR X0, [X0 + 0x18]
	0x03B68BBC RET
	0x03B68BC0 STP X30, X19, [X31 - 0x10]!
	0x03B68BC4 ADRP X0, 0x58B000
	0x03B68BC8 LDR X0, [X0 + 0xB40]
	0x03B68BCC BL 0x1C16D08
	0x03B68BD0 BL 0x1C16F10
	0x03B68BD4 MOV X1, X31
	0x03B68BD8 MOV X19, X0
	0x03B68BDC BL 0x3380310
	0x03B68BE0 ADRP X0, 0x5F3000
	0x03B68BE4 LDR X0, [X0 + 0x4B0]
	0x03B68BE8 BL 0x1C16D08
	0x03B68BEC MOV X1, X0
	0x03B68BF0 MOV X0, X19
	0x03B68BF4 BL 0x1C16DEC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x87B000
	009 Move W8, [X21+2577]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5F3000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2577], W8
	021 Move X24, 0x5F3000
	022 Add X20, X20, 72
	023 Move X21, [X20]
	024 Move X24, [X24+592]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_interactableUnregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> value)

Disassembly:
	0x03B68E94 ADD X8, X8, W1, 0x3, SXTW
	0x03B68E98 LDR X0, [X8 + 0x20]
	0x03B68E9C MOV X1, X31
	0x03B68EA0 LDR X30, [X31], #0x10
	0x03B68EA4 B 0x32277A8
	0x03B68EA8 BL 0x1C16F20
	0x03B68EAC BL 0x1C16F28
	0x03B68EB0 STR X30, [X31 - 0x10]!
	0x03B68EB4 LDR X8, [X0 + 0x18]
	0x03B68EB8 CBZ X8, 0x3B68ED8
	0x03B68EBC LDR W9, [X8 + 0x18]
	0x03B68EC0 CMP W9, W1
	0x03B68EC4 B.LS 0x3B68EDC
	0x03B68EC8 ADD X8, X8, W1, 0x3, SXTW
	0x03B68ECC STR X2, [X8 + 0x20]
	0x03B68ED0 LDR X30, [X31], #0x10
	0x03B68ED4 RET
	0x03B68ED8 BL 0x1C16F20
	0x03B68EDC BL 0x1C16F28
	0x03B68EE0 STP X30, X25, [X31 - 0x40]!
	0x03B68EE4 STP X24, X23, [X31 + 0x10]
	0x03B68EE8 STP X22, X21, [X31 + 0x20]
	0x03B68EEC STP X20, X19, [X31 + 0x30]
	0x03B68EF0 ADRP X22, 0x87A000
	0x03B68EF4 LDRB W8, [X22 + 0x9D3]
	0x03B68EF8 MOV X19, X2
	0x03B68EFC MOV X20, X1
	0x03B68F00 MOV X21, X0
	0x03B68F04 TBNZ X8, 0x0, 0x3B68F28
	0x03B68F08 ADRP X0, 0x58C000
	0x03B68F0C LDR X0, [X0 + 0xE10]
	0x03B68F10 BL 0x1C16CF4
	0x03B68F14 ADRP X0, 0x58C000
	0x03B68F18 LDR X0, [X0 + 0x1B8]
	0x03B68F1C BL 0x1C16CF4
	0x03B68F20 MOVZ W8, 0x1
	0x03B68F24 STRB W8, [X22 + 0x9D3]
	0x03B68F28 LDR X8, [X21 + 0x18]
	0x03B68F2C CBZ X8, 0x3B6902C
	0x03B68F30 ADRP X24, 0x58C000
	0x03B68F34 ADRP X25, 0x58C000
	0x03B68F38 LDR X24, [X24 + 0x1B8]
	0x03B68F3C LDR X25, [X25 + 0xE10]
	0x03B68F40 MOV X22, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x87B000
	009 Move W8, [X21+2578]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5F3000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2578], W8
	021 Move X24, 0x5F3000
	022 Add X20, X20, 72
	023 Move X21, [X20]
	024 Move X24, [X24+592]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_focusGained(System.Action`1<UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs> value)

Disassembly:
	0x03B6D7BC BL 0x3BFE970
	0x03B6D7C0 LDR X2, [X19 + 0xC8]
	0x03B6D7C4 MOV X0, X19
	0x03B6D7C8 MOV X1, X20
	0x03B6D7CC BL 0x3B6E2CC
	0x03B6D7D0 MOV X22, X31
	0x03B6D7D4 MOVZ W28, 0x9
	0x03B6D7D8 MOV X0, X21
	0x03B6D7DC MOV X1, X31
	0x03B6D7E0 MOV X2, X31
	0x03B6D7E4 BL 0x33C5D2C
	0x03B6D7E8 TBZ X0, 0x0, 0x3B6D7F8
	0x03B6D7EC MOV X0, X21
	0x03B6D7F0 MOV X1, X31
	0x03B6D7F4 BL 0x3BFEA0C
	0x03B6D7F8 CBNZ X22, 0x3B6DDB4
	0x03B6D7FC CMP W28, 0x9
	0x03B6D800 B.EQ 0x3B6D808
	0x03B6D804 CBNZ W28, 0x3B6DD40
	0x03B6D808 LDR X0, [X24]
	0x03B6D80C LDR X21, [X19 + 0xC8]
	0x03B6D810 LDR X22, [X19 + 0xE8]
	0x03B6D814 LDR W8, [X0 + 0xE0]
	0x03B6D818 CBNZ W8, 0x3B6D820
	0x03B6D81C BL 0x1C16DFC
	0x03B6D820 LDR X2, [X25]
	0x03B6D824 MOV X0, X21
	0x03B6D828 MOV X1, X22
	0x03B6D82C BL 0x22AD328
	0x03B6D830 LDR X1, [X29]
	0x03B6D834 MOV X0, X20
	0x03B6D838 BL 0x1C16E00
	0x03B6D83C ADRP X8, 0x5ED000
	0x03B6D840 LDR X8, [X8 + 0x320]
	0x03B6D844 MOV X21, X0
	0x03B6D848 LDR X1, [X8]
	0x03B6D84C MOV X0, X20
	0x03B6D850 BL 0x1C16E00
	0x03B6D854 MOV X20, X0
	0x03B6D858 CBZ X21, 0x3B6D8E0
	0x03B6D85C LDR X0, [X24]
	0x03B6D860 LDR W8, [X0 + 0xE0]
	0x03B6D864 CBNZ W8, 0x3B6D870
	0x03B6D868 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2579]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EF000
	017 Move X0, [X0+1472]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2579], W8
	021 Move X24, 0x5EF000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+1472]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_focusGained(System.Action`1<UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs> value)

Disassembly:
	0x03B6D86C LDR X0, [X24]
	0x03B6D870 LDR X8, [X0 + 0xB8]
	0x03B6D874 LDR X22, [X8 + 0x50]
	0x03B6D878 MOV X0, X22
	0x03B6D87C MOV X1, X31
	0x03B6D880 MOV X2, X31
	0x03B6D884 BL 0x33C5D2C
	0x03B6D888 TBZ X0, 0x0, 0x3B6D898
	0x03B6D88C MOV X0, X22
	0x03B6D890 MOV X1, X31
	0x03B6D894 BL 0x3BFE970
	0x03B6D898 LDR X2, [X19 + 0xC8]
	0x03B6D89C MOV X0, X19
	0x03B6D8A0 MOV X1, X21
	0x03B6D8A4 BL 0x3B6E5F4
	0x03B6D8A8 MOV X23, X31
	0x03B6D8AC MOVZ W28, 0xA
	0x03B6D8B0 MOV X0, X22
	0x03B6D8B4 MOV X1, X31
	0x03B6D8B8 MOV X2, X31
	0x03B6D8BC BL 0x33C5D2C
	0x03B6D8C0 TBZ X0, 0x0, 0x3B6D8D0
	0x03B6D8C4 MOV X0, X22
	0x03B6D8C8 MOV X1, X31
	0x03B6D8CC BL 0x3BFEA0C
	0x03B6D8D0 CBNZ X23, 0x3B6DDC0
	0x03B6D8D4 CMP W28, 0xA
	0x03B6D8D8 B.EQ 0x3B6D8E0
	0x03B6D8DC CBNZ W28, 0x3B6DD40
	0x03B6D8E0 CBZ X20, 0x3B6D96C
	0x03B6D8E4 LDR X0, [X24]
	0x03B6D8E8 LDR W8, [X0 + 0xE0]
	0x03B6D8EC CBNZ W8, 0x3B6D8F8
	0x03B6D8F0 BL 0x1C16DFC
	0x03B6D8F4 LDR X0, [X24]
	0x03B6D8F8 LDR X8, [X0 + 0xB8]
	0x03B6D8FC LDR X22, [X8 + 0x58]
	0x03B6D900 MOV X0, X22
	0x03B6D904 MOV X1, X31
	0x03B6D908 MOV X2, X31
	0x03B6D90C BL 0x33C5D2C
	0x03B6D910 TBZ X0, 0x0, 0x3B6D920
	0x03B6D914 MOV X0, X22
	0x03B6D918 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2580]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EF000
	017 Move X0, [X0+1472]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2580], W8
	021 Move X24, 0x5EF000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+1472]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_focusLost(System.Action`1<UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs> value)

Disassembly:
	0x03B6D91C BL 0x3BFE970
	0x03B6D920 LDR X2, [X19 + 0xC8]
	0x03B6D924 LDR X3, [X19 + 0xE8]
	0x03B6D928 MOV X0, X19
	0x03B6D92C MOV X1, X20
	0x03B6D930 BL 0x3B6E6B4
	0x03B6D934 MOV X23, X31
	0x03B6D938 MOVZ W28, 0xB
	0x03B6D93C MOV X0, X22
	0x03B6D940 MOV X1, X31
	0x03B6D944 MOV X2, X31
	0x03B6D948 BL 0x33C5D2C
	0x03B6D94C TBZ X0, 0x0, 0x3B6D95C
	0x03B6D950 MOV X0, X22
	0x03B6D954 MOV X1, X31
	0x03B6D958 BL 0x3BFEA0C
	0x03B6D95C CBNZ X23, 0x3B6DDC8
	0x03B6D960 CMP W28, 0xB
	0x03B6D964 B.EQ 0x3B6D96C
	0x03B6D968 CBNZ W28, 0x3B6DD40
	0x03B6D96C CBZ X21, 0x3B6D9F8
	0x03B6D970 LDR X0, [X24]
	0x03B6D974 LDR W8, [X0 + 0xE0]
	0x03B6D978 CBNZ W8, 0x3B6D984
	0x03B6D97C BL 0x1C16DFC
	0x03B6D980 LDR X0, [X24]
	0x03B6D984 LDR X8, [X0 + 0xB8]
	0x03B6D988 LDR X22, [X8 + 0x60]
	0x03B6D98C MOV X0, X22
	0x03B6D990 MOV X1, X31
	0x03B6D994 MOV X2, X31
	0x03B6D998 BL 0x33C5D2C
	0x03B6D99C TBZ X0, 0x0, 0x3B6D9AC
	0x03B6D9A0 MOV X0, X22
	0x03B6D9A4 MOV X1, X31
	0x03B6D9A8 BL 0x3BFE970
	0x03B6D9AC LDR X2, [X19 + 0xC8]
	0x03B6D9B0 LDR X3, [X19 + 0xE8]
	0x03B6D9B4 MOV X0, X19
	0x03B6D9B8 MOV X1, X21
	0x03B6D9BC BL 0x3B6E77C
	0x03B6D9C0 MOV X21, X31
	0x03B6D9C4 MOVZ W28, 0xC
	0x03B6D9C8 MOV X0, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2581]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EF000
	017 Move X0, [X0+1480]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2581], W8
	021 Move X24, 0x5EF000
	022 Add X20, X20, 88
	023 Move X21, [X20]
	024 Move X24, [X24+1480]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_focusLost(System.Action`1<UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs> value)

Disassembly:
	0x03B6D9CC MOV X1, X31
	0x03B6D9D0 MOV X2, X31
	0x03B6D9D4 BL 0x33C5D2C
	0x03B6D9D8 TBZ X0, 0x0, 0x3B6D9E8
	0x03B6D9DC MOV X0, X22
	0x03B6D9E0 MOV X1, X31
	0x03B6D9E4 BL 0x3BFEA0C
	0x03B6D9E8 CBNZ X21, 0x3B6DDD0
	0x03B6D9EC CMP W28, 0xC
	0x03B6D9F0 B.EQ 0x3B6D9F8
	0x03B6D9F4 CBNZ W28, 0x3B6DD40
	0x03B6D9F8 CBZ X20, 0x3B6D73C
	0x03B6D9FC LDR X0, [X24]
	0x03B6DA00 LDR W8, [X0 + 0xE0]
	0x03B6DA04 CBNZ W8, 0x3B6DA10
	0x03B6DA08 BL 0x1C16DFC
	0x03B6DA0C LDR X0, [X24]
	0x03B6DA10 LDR X8, [X0 + 0xB8]
	0x03B6DA14 LDR X21, [X8 + 0x68]
	0x03B6DA18 MOV X0, X21
	0x03B6DA1C MOV X1, X31
	0x03B6DA20 MOV X2, X31
	0x03B6DA24 BL 0x33C5D2C
	0x03B6DA28 TBZ X0, 0x0, 0x3B6DA38
	0x03B6DA2C MOV X0, X21
	0x03B6DA30 MOV X1, X31
	0x03B6DA34 BL 0x3BFE970
	0x03B6DA38 LDR X2, [X19 + 0xC8]
	0x03B6DA3C LDR X3, [X19 + 0xE8]
	0x03B6DA40 MOV X0, X19
	0x03B6DA44 MOV X1, X20
	0x03B6DA48 BL 0x3B6E844
	0x03B6DA4C MOV X20, X31
	0x03B6DA50 MOVZ W28, 0x7
	0x03B6DA54 MOV X0, X21
	0x03B6DA58 MOV X1, X31
	0x03B6DA5C MOV X2, X31
	0x03B6DA60 BL 0x33C5D2C
	0x03B6DA64 TBZ X0, 0x0, 0x3B6DA74
	0x03B6DA68 MOV X0, X21
	0x03B6DA6C MOV X1, X31
	0x03B6DA70 BL 0x3BFEA0C
	0x03B6DA74 CBNZ X20, 0x3B6DDD8
	0x03B6DA78 CMP W28, 0x7

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x876000
	009 Move W8, [X21+2582]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5EF000
	017 Move X0, [X0+1480]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2582], W8
	021 Move X24, 0x5EF000
	022 Add X20, X20, 88
	023 Move X21, [X20]
	024 Move X24, [X24+1480]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Collections.Generic.List`1<UnityEngine.Object> get_startingHoverFilters()

Disassembly:
	0x03B6DA7C B.EQ 0x3B6D73C
	0x03B6DA80 CBZ W28, 0x3B6D73C

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_startingHoverFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)

Disassembly:
	0x03B6DA84 B 0x3B6DD40
	0x03B6DA88 CMP W1, 0x1

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> get_hoverFilters()

Disassembly:
	0x03B6DA8C MOV X23, X0
	0x03B6DA90 B.NE 0x3B6DF2C

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.Object> get_startingSelectFilters()

Disassembly:
	0x03B6DA94 MOV X0, X23
	0x03B6DA98 BL 0x3EB1AD0

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_startingSelectFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)

Disassembly:
	0x03B6DA9C LDR X20, [X0]
	0x03B6DAA0 BL 0x3EB1AE0

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> get_selectFilters()

Disassembly:
	0x03B6DAA4 ADRP X25, 0x5EE000
	0x03B6DAA8 ADRP X29, 0x5ED000

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable get_lastFocused()

Disassembly:
	0x03B6DAAC LDR X25, [X25 + 0xF8]
	0x03B6DAB0 LDR X29, [X29 + 0x328]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_lastFocused(UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable value)

Disassembly:
	0x03B6DAB4 MOV W28, W31
	0x03B6DAB8 B 0x3B6DA54

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRInteractionManager> get_activeInteractionManagers()

Disassembly:
	0x03B6DABC CMP W1, 0x1
	0x03B6DAC0 MOV X23, X0
	0x03B6DAC4 STR X1, [X31 + 0x8]
	0x03B6DAC8 B.NE 0x3B6DEF4
	0x03B6DACC MOV X0, X23
	0x03B6DAD0 BL 0x3EB1AD0
	0x03B6DAD4 LDR X21, [X0]
	0x03B6DAD8 BL 0x3EB1AE0
	0x03B6DADC ADRP X25, 0x5EE000
	0x03B6DAE0 ADRP X29, 0x5ED000
	0x03B6DAE4 LDR X25, [X25 + 0xF8]
	0x03B6DAE8 LDR X29, [X29 + 0x328]
	0x03B6DAEC MOV W28, W31
	0x03B6DAF0 B 0x3B6D9C8
	0x03B6DAF4 CMP W1, 0x1
	0x03B6DAF8 STP X1, X0, [X31 + 0x8]
	0x03B6DAFC B.NE 0x3B6DEC0
	0x03B6DB00 LDR X0, [X31 + 0x10]
	0x03B6DB04 BL 0x3EB1AD0
	0x03B6DB08 LDR X23, [X0]
	0x03B6DB0C BL 0x3EB1AE0
	0x03B6DB10 ADRP X25, 0x5EE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x876000
	005 Move X19, 0x5EE000
	006 Move W8, [X20+2583]
	007 Move X19, [X19+3616]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5EE000
	013 Move X0, [X0+3616]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2583], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void Awake()

Disassembly:
	0x03B6DB14 ADRP X29, 0x5ED000
	0x03B6DB18 LDR X25, [X25 + 0xF8]
	0x03B6DB1C LDR X29, [X29 + 0x328]
	0x03B6DB20 MOV W28, W31
	0x03B6DB24 B 0x3B6D93C
	0x03B6DB28 CMP W1, 0x1
	0x03B6DB2C STP X1, X0, [X31 + 0x8]
	0x03B6DB30 B.NE 0x3B6DE8C
	0x03B6DB34 LDR X0, [X31 + 0x10]
	0x03B6DB38 BL 0x3EB1AD0
	0x03B6DB3C LDR X23, [X0]
	0x03B6DB40 BL 0x3EB1AE0
	0x03B6DB44 ADRP X25, 0x5EE000
	0x03B6DB48 ADRP X29, 0x5ED000
	0x03B6DB4C LDR X25, [X25 + 0xF8]
	0x03B6DB50 LDR X29, [X29 + 0x328]
	0x03B6DB54 MOV W28, W31
	0x03B6DB58 B 0x3B6D8B0
	0x03B6DB5C CMP W1, 0x1
	0x03B6DB60 MOV X23, X0
	0x03B6DB64 STR X1, [X31 + 0x8]
	0x03B6DB68 B.NE 0x3B6DE54
	0x03B6DB6C MOV X0, X23
	0x03B6DB70 BL 0x3EB1AD0
	0x03B6DB74 LDR X22, [X0]
	0x03B6DB78 BL 0x3EB1AE0
	0x03B6DB7C ADRP X25, 0x5EE000
	0x03B6DB80 ADRP X29, 0x5ED000
	0x03B6DB84 LDR X25, [X25 + 0xF8]
	0x03B6DB88 LDR X29, [X29 + 0x328]
	0x03B6DB8C MOV W28, W31
	0x03B6DB90 B 0x3B6D7D8
	0x03B6DB94 ADRP X8, 0x5EE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x876000
	005 Move W8, [X20+2584]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x5EE000
	012 Move X0, [X0+688]
	013 Call 0x1C17CF4
	014 Move X0, 0x5EE000
	015 Move X0, [X0+696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2584], W8
	019 Move X0, [X19+104]
	020 Compare X0, 0
	021 JumpIfEqual {41}
	022 Move X8, 0x5EE000
	023 Move X8, [X8+688]
	024 Move X1, [X19+96]
	025 Move X2, X19
	026 Move X3, [X8]
	027 Call 0x212FF58, X0, X1, X2
	028 Move X0, [X19+120]
	029 Compare X0, 0
	030 JumpIfEqual {41}
	031 Move X8, 0x5EE000
	032 Move X8, [X8+696]
	033 Move X1, [X19+112]
	034 Move X2, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X3, [X8]
	038 Move X30, [X31+32]
	039 Call 0x212FF58, X0, X1, X2
	040 Return 
	041 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03B6DB98 LDR X8, [X8 + 0x670]
	0x03B6DB9C ADD X0, X31, 0x30
	0x03B6DBA0 LDR X1, [X8]
	0x03B6DBA4 BL 0x2BC434C
	0x03B6DBA8 LDR X0, [X24]
	0x03B6DBAC LDR W8, [X0 + 0xE0]
	0x03B6DBB0 CBNZ W8, 0x3B6DBBC
	0x03B6DBB4 BL 0x1C16DFC
	0x03B6DBB8 LDR X0, [X24]
	0x03B6DBBC LDR X8, [X0 + 0xB8]
	0x03B6DBC0 MOV X1, X31
	0x03B6DBC4 MOV X2, X31
	0x03B6DBC8 LDR X21, [X8 + 0x18]
	0x03B6DBCC MOV X0, X21
	0x03B6DBD0 BL 0x33C5D2C
	0x03B6DBD4 TBZ X0, 0x0, 0x3B6DBE4
	0x03B6DBD8 MOV X0, X21
	0x03B6DBDC MOV X1, X31
	0x03B6DBE0 BL 0x3BFE970
	0x03B6DBE4 LDR X8, [X19]
	0x03B6DBE8 LDR X9, [X8 + 0x218]
	0x03B6DBEC LDR X2, [X8 + 0x220]
	0x03B6DBF0 MOVZ W1, 0x1
	0x03B6DBF4 MOV X0, X19
	0x03B6DBF8 BLR X9
	0x03B6DBFC MOV X22, X31
	0x03B6DC00 MOVZ W20, 0xE
	0x03B6DC04 MOV X0, X21
	0x03B6DC08 MOV X1, X31
	0x03B6DC0C MOV X2, X31
	0x03B6DC10 BL 0x33C5D2C
	0x03B6DC14 TBZ X0, 0x0, 0x3B6DC24
	0x03B6DC18 MOV X0, X21
	0x03B6DC1C MOV X1, X31
	0x03B6DC20 BL 0x3BFEA0C
	0x03B6DC24 CBNZ X22, 0x3B6DDE0
	0x03B6DC28 CMP W20, 0xE
	0x03B6DC2C B.EQ 0x3B6DC34
	0x03B6DC30 CBNZ W20, 0x3B6DD74
	0x03B6DC34 LDR X0, [X24]
	0x03B6DC38 LDR W8, [X0 + 0xE0]
	0x03B6DC3C CBNZ W8, 0x3B6DC48
	0x03B6DC40 BL 0x1C16DFC
	0x03B6DC44 LDR X0, [X24]
	0x03B6DC48 LDR X8, [X0 + 0xB8]
	0x03B6DC4C MOV X1, X31
	0x03B6DC50 MOV X2, X31
	0x03B6DC54 LDR X21, [X8 + 0x20]
	0x03B6DC58 MOV X0, X21
	0x03B6DC5C BL 0x33C5D2C
	0x03B6DC60 TBZ X0, 0x0, 0x3B6DC70
	0x03B6DC64 MOV X0, X21
	0x03B6DC68 MOV X1, X31
	0x03B6DC6C BL 0x3BFE970
	0x03B6DC70 LDR X8, [X19]
	0x03B6DC74 LDP X9, X2, [X8 + 0x1F8]
	0x03B6DC78 MOVZ W1, 0x1
	0x03B6DC7C MOV X0, X19
	0x03B6DC80 BLR X9
	0x03B6DC84 MOV X22, X31
	0x03B6DC88 MOVZ W20, 0xF
	0x03B6DC8C MOV X0, X21
	0x03B6DC90 MOV X1, X31
	0x03B6DC94 MOV X2, X31
	0x03B6DC98 BL 0x33C5D2C
	0x03B6DC9C TBZ X0, 0x0, 0x3B6DCAC
	0x03B6DCA0 MOV X0, X21
	0x03B6DCA4 MOV X1, X31
	0x03B6DCA8 BL 0x3BFEA0C
	0x03B6DCAC CBNZ X22, 0x3B6DDE0
	0x03B6DCB0 CMP W20, 0xF
	0x03B6DCB4 B.EQ 0x3B6DCBC
	0x03B6DCB8 CBNZ W20, 0x3B6DD74
	0x03B6DCBC LDR X0, [X24]
	0x03B6DCC0 LDR W8, [X0 + 0xE0]
	0x03B6DCC4 CBNZ W8, 0x3B6DCD0
	0x03B6DCC8 BL 0x1C16DFC
	0x03B6DCCC LDR X0, [X24]
	0x03B6DCD0 LDR X8, [X0 + 0xB8]
	0x03B6DCD4 MOV X1, X31
	0x03B6DCD8 MOV X2, X31
	0x03B6DCDC LDR X21, [X8 + 0x28]
	0x03B6DCE0 MOV X0, X21
	0x03B6DCE4 BL 0x33C5D2C
	0x03B6DCE8 TBZ X0, 0x0, 0x3B6DCF8
	0x03B6DCEC MOV X0, X21
	0x03B6DCF0 MOV X1, X31
	0x03B6DCF4 BL 0x3BFE970
	0x03B6DCF8 LDR X8, [X19]
	0x03B6DCFC LDR X9, [X8 + 0x208]
	0x03B6DD00 LDR X2, [X8 + 0x210]
	0x03B6DD04 MOVZ W1, 0x1
	0x03B6DD08 MOV X0, X19
	0x03B6DD0C BLR X9
	0x03B6DD10 MOV X19, X31
	0x03B6DD14 MOV X0, X21
	0x03B6DD18 MOV X1, X31
	0x03B6DD1C MOV X2, X31
	0x03B6DD20 BL 0x33C5D2C
	0x03B6DD24 TBZ X0, 0x0, 0x3B6DD34
	0x03B6DD28 MOV X0, X21
	0x03B6DD2C MOV X1, X31
	0x03B6DD30 BL 0x3BFEA0C
	0x03B6DD34 CBZ X19, 0x3B6DD74
	0x03B6DD38 MOV X0, X19
	0x03B6DD3C BL 0x1C16F18
	0x03B6DD40 ADRP X8, 0x5EE000
	0x03B6DD44 LDR X8, [X8 + 0x670]
	0x03B6DD48 ADD X0, X31, 0x30
	0x03B6DD4C LDR X1, [X8]
	0x03B6DD50 BL 0x2BC434C
	0x03B6DD54 CBNZ W28, 0x3B6DD74
	0x03B6DD58 B 0x3B6DBA8
	0x03B6DD5C ADRP X8, 0x5EE000
	0x03B6DD60 LDR X8, [X8 + 0x668]
	0x03B6DD64 ADD X0, X31, 0x50
	0x03B6DD68 LDR X1, [X8]
	0x03B6DD6C BL 0x2BC434C
	0x03B6DD70 CBZ W25, 0x3B6D6F8
	0x03B6DD74 LDP X20, X19, [X31 + 0xC0]
	0x03B6DD78 LDP X22, X21, [X31 + 0xB0]
	0x03B6DD7C LDP X24, X23, [X31 + 0xA0]
	0x03B6DD80 LDP X26, X25, [X31 + 0x90]
	0x03B6DD84 LDP X28, X27, [X31 + 0x80]
	0x03B6DD88 LDP X29, X30, [X31 + 0x70]
	0x03B6DD8C ADD X31, X31, 0xD0
	0x03B6DD90 RET
	0x03B6DD94 BL 0x1C16F20
	0x03B6DD98 BL 0x1C16F20
	0x03B6DD9C BL 0x1C16F20
	0x03B6DDA0 BL 0x1C16F20
	0x03B6DDA4 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x876000
	007 Move X20, 0x5EE000
	008 Move W8, [X21+2585]
	009 Move X20, [X20+3616]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x587000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0x587000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x5EF000
	022 Move X0, [X0+1488]
	023 Call 0x1C17CF4
	024 Move X0, 0x5EF000
	025 Move X0, [X0+1496]
	026 Call 0x1C17CF4
	027 Move X0, 0x5AE000
	028 Move X0, [X0+3632]
	029 Call 0x1C17CF4
	030 Move X0, 0x5EE000
	031 Move X0, [X0+3616]
	032 Call 0x1C17CF4
	033 Move X0, 0x5EF000
	034 Move X0, [X0+1504]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2585], W8
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X21, 0x876000
	044 Move W8, [X21+2771]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x5EE000
	048 Move X0, [X0+3616]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+2771], W8
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X20]
	058 Move X8, [X0+184]
	059 Move X8, [X8]
	060 Compare X8, 0
	061 JumpIfEqual {149}
	062 Move W8, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, 0x587000
	065 Move X8, [X8+2600]
	066 Move X22, 0x5EF000
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Move X22, [X22+1504]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, [X22]
	074 Move X1, X19
	075 Move X2, X31
	076 Call Debug.LogWarning, X0, X1
	077 Move X0, [X20]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move W8, [X21+2771]
	083 Compare W8, 0
	084 JumpIfNotEqual {90}
	085 Move X0, 0x5EE000
	086 Move X0, [X0+3616]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X21+2771], W8
	090 Move X0, [X20]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X20]
	096 Move X8, [X0+184]
	097 Move X0, [X8]
	098 Compare X0, 0
	099 JumpIfEqual {149}
	100 Move X9, 0x5EF000
	101 Move X9, [X9+1488]
	102 Move W10, [X0+28]
	103 Move X8, [X0+16]
	104 Move X9, [X9]
	105 Add W10, W10, 1
	106 Move [X0+28], W10
	107 Compare X8, 0
	108 JumpIfEqual {149}
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Move W11, [X8+24]
	111 Move X20, 0x5AE000
	112 Move X20, [X20+3632]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W9, W10, 1
	115 Add X8, X8, X10
	116 Move [X0+24], W9
	117 Move [X8+32], X19
	118 Move X8, [X9+32]
	119 Move X1, X19
	120 Move X8, [X8+192]
	121 Move X2, [X8+112]
	122 Call List`1<Object>.AddWithResize, X0, X1
	123 Move X0, [X20]
	124 Call 0x1C17F10
	125 Compare X19, 0
	126 JumpIfEqual {149}
	127 Move X8, [X19]
	128 Move X21, 0x587000
	129 Move X1, X19
	130 Move X3, X31
	131 Move X2, [X8+480]
	132 Move X21, [X21+2416]
	133 Move X20, X0
	134 Call UnityAction..ctor, X0, X1, X2
	135 Move X0, [X21]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X20
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X1, X31
	146 Move X30, [X31+48]
	147 Call Application.add_onBeforeRender, X0
	148 Return 
	149 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03B6DDA8 BL 0x1C16F18
	0x03B6DDAC MOV X0, X20
	0x03B6DDB0 BL 0x1C16F18
	0x03B6DDB4 MOV X0, X22
	0x03B6DDB8 BL 0x1C16F18
	0x03B6DDBC BL 0x1C16F20
	0x03B6DDC0 MOV X0, X23
	0x03B6DDC4 BL 0x1C16F18
	0x03B6DDC8 MOV X0, X23
	0x03B6DDCC BL 0x1C16F18
	0x03B6DDD0 MOV X0, X21
	0x03B6DDD4 BL 0x1C16F18
	0x03B6DDD8 MOV X0, X20
	0x03B6DDDC BL 0x1C16F18
	0x03B6DDE0 MOV X0, X22
	0x03B6DDE4 BL 0x1C16F18
	0x03B6DDE8 MOV X20, X31
	0x03B6DDEC MOV X0, X21
	0x03B6DDF0 MOV X1, X31
	0x03B6DDF4 MOV X2, X31
	0x03B6DDF8 BL 0x33C5D2C
	0x03B6DDFC TBZ X0, 0x0, 0x3B6DE0C
	0x03B6DE00 MOV X0, X21
	0x03B6DE04 MOV X1, X31
	0x03B6DE08 BL 0x3BFEA0C
	0x03B6DE0C LDR X1, [X31 + 0x8]
	0x03B6DE10 MOV X0, X22
	0x03B6DE14 CBZ X20, 0x3B6E200
	0x03B6DE18 MOV X0, X20
	0x03B6DE1C BL 0x1C16F18
	0x03B6DE20 MOV X22, X31
	0x03B6DE24 MOV X0, X21
	0x03B6DE28 MOV X1, X31
	0x03B6DE2C MOV X2, X31
	0x03B6DE30 BL 0x33C5D2C
	0x03B6DE34 TBZ X0, 0x0, 0x3B6DE44
	0x03B6DE38 MOV X0, X21
	0x03B6DE3C MOV X1, X31
	0x03B6DE40 BL 0x3BFEA0C
	0x03B6DE44 LDP X1, X0, [X31 + 0x8]
	0x03B6DE48 CBZ X22, 0x3B6E200
	0x03B6DE4C MOV X0, X22
	0x03B6DE50 BL 0x1C16F18
	0x03B6DE54 MOV X22, X31
	0x03B6DE58 MOV X0, X21
	0x03B6DE5C MOV X1, X31
	0x03B6DE60 MOV X2, X31
	0x03B6DE64 BL 0x33C5D2C
	0x03B6DE68 TBZ X0, 0x0, 0x3B6DE78
	0x03B6DE6C MOV X0, X21
	0x03B6DE70 MOV X1, X31
	0x03B6DE74 BL 0x3BFEA0C
	0x03B6DE78 LDR X1, [X31 + 0x8]
	0x03B6DE7C MOV X0, X23
	0x03B6DE80 CBZ X22, 0x3B6E198
	0x03B6DE84 MOV X0, X22
	0x03B6DE88 BL 0x1C16F18
	0x03B6DE8C MOV X23, X31
	0x03B6DE90 MOV X0, X22
	0x03B6DE94 MOV X1, X31
	0x03B6DE98 MOV X2, X31
	0x03B6DE9C BL 0x33C5D2C
	0x03B6DEA0 TBZ X0, 0x0, 0x3B6DEB0
	0x03B6DEA4 MOV X0, X22
	0x03B6DEA8 MOV X1, X31
	0x03B6DEAC BL 0x3BFEA0C
	0x03B6DEB0 LDP X1, X0, [X31 + 0x8]
	0x03B6DEB4 CBZ X23, 0x3B6E198
	0x03B6DEB8 MOV X0, X23
	0x03B6DEBC BL 0x1C16F18
	0x03B6DEC0 MOV X23, X31
	0x03B6DEC4 MOV X0, X22
	0x03B6DEC8 MOV X1, X31
	0x03B6DECC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x876000
	007 Move X21, 0x5AE000
	008 Move W8, [X20+2586]
	009 Move X21, [X21+3632]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x587000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0x5EF000
	019 Move X0, [X0+1512]
	020 Call 0x1C17CF4
	021 Move X0, 0x5AE000
	022 Move X0, [X0+3632]
	023 Call 0x1C17CF4
	024 Move X0, 0x5EE000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2586], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Compare X19, 0
	032 JumpIfEqual {86}
	033 Move X8, [X19]
	034 Move X22, 0x587000
	035 Move X21, 0x5EE000
	036 Move X1, X19
	037 Move X2, [X8+480]
	038 Move X22, [X22+2416]
	039 Move X21, [X21+3616]
	040 Move X3, X31
	041 Move X20, X0
	042 Call UnityAction..ctor, X0, X1, X2
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Call Application.remove_onBeforeRender, X0
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X20, 0x876000
	057 Move W8, [X20+2771]
	058 Compare W8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, 0x5EE000
	061 Move X0, [X0+3616]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+2771], W8
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, [X0+184]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {86}
	075 Move X8, 0x5EF000
	076 Move X8, [X8+1512]
	077 Move X1, X19
	078 Move X2, [X8]
	079 Call List`1<Object>.Remove, X0, X1
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03B6E2E8 MOV X21, X1
	0x03B6E2EC MOV X20, X0
	0x03B6E2F0 TBNZ X8, 0x0, 0x3B6E368
	0x03B6E2F4 ADRP X0, 0x5EC000
	0x03B6E2F8 LDR X0, [X0 + 0x2F8]
	0x03B6E2FC BL 0x1C16CF4
	0x03B6E300 ADRP X0, 0x5EC000
	0x03B6E304 LDR X0, [X0 + 0xDC8]
	0x03B6E308 BL 0x1C16CF4
	0x03B6E30C ADRP X0, 0x5EC000
	0x03B6E310 LDR X0, [X0 + 0xE00]
	0x03B6E314 BL 0x1C16CF4
	0x03B6E318 ADRP X0, 0x5ED000
	0x03B6E31C LDR X0, [X0 + 0x6B8]
	0x03B6E320 BL 0x1C16CF4
	0x03B6E324 ADRP X0, 0x5EC000
	0x03B6E328 LDR X0, [X0 + 0xE98]
	0x03B6E32C BL 0x1C16CF4
	0x03B6E330 ADRP X0, 0x5EC000
	0x03B6E334 LDR X0, [X0 + 0x368]
	0x03B6E338 BL 0x1C16CF4
	0x03B6E33C ADRP X0, 0x5ED000
	0x03B6E340 LDR X0, [X0 + 0xF8]
	0x03B6E344 BL 0x1C16CF4
	0x03B6E348 ADRP X0, 0x5ED000
	0x03B6E34C LDR X0, [X0 + 0x6C0]
	0x03B6E350 BL 0x1C16CF4
	0x03B6E354 ADRP X0, 0x5EC000
	0x03B6E358 LDR X0, [X0 + 0xE20]
	0x03B6E35C BL 0x1C16CF4
	0x03B6E360 MOVZ W8, 0x1
	0x03B6E364 STRB W8, [X22 + 0xA3A]
	0x03B6E368 CBZ X19, 0x3B6E580
	0x03B6E36C LDP W2, W8, [X19 + 0x18]
	0x03B6E370 ADD W8, W8, 0x1
	0x03B6E374 CMP W2, 0x1
	0x03B6E378 STP W31, W8, [X19 + 0x18]
	0x03B6E37C B.LT 0x3B6E390
	0x03B6E380 LDR X0, [X19 + 0x10]
	0x03B6E384 MOV W1, W31
	0x03B6E388 MOV X3, X31
	0x03B6E38C BL 0x339FA34
	0x03B6E390 CBZ X21, 0x3B6E580
	0x03B6E394 ADRP X10, 0x5EC000
	0x03B6E398 LDR X8, [X21]
	0x03B6E39C LDR X10, [X10 + 0x2F8]
	0x03B6E3A0 ADRP X22, 0x5EC000
	0x03B6E3A4 LDRH W9, [X8 + 0x12E]
	0x03B6E3A8 LDR X1, [X10]
	0x03B6E3AC LDR X22, [X22 + 0x368]
	0x03B6E3B0 CBZ X9, 0x3B6E3D4
	0x03B6E3B4 LDR X10, [X8 + 0xB0]
	0x03B6E3B8 ADD X10, X10, 0x8
	0x03B6E3BC LDUR X11, [X10 - 0x8]
	0x03B6E3C0 CMP X11, X1
	0x03B6E3C4 B.EQ 0x3B6E3E4
	0x03B6E3C8 SUBS X9, X9, 0x1
	0x03B6E3CC ADD X10, X10, 0x10
	0x03B6E3D0 B.NE 0x3B6E3BC
	0x03B6E3D4 MOVZ W2, 0x7
	0x03B6E3D8 MOV X0, X21
	0x03B6E3DC BL 0x1C5C788
	0x03B6E3E0 B 0x3B6E3F4
	0x03B6E3E4 LDR W9, [X10]
	0x03B6E3E8 ADD W9, W9, 0x7
	0x03B6E3EC ADD X8, X8, W9, 0x4, SXTW
	0x03B6E3F0 ADD X0, X8, 0x138
	0x03B6E3F4 LDP X8, X2, [X0]
	0x03B6E3F8 ADRP X23, 0x5EC000
	0x03B6E3FC LDR X23, [X23 + 0xE20]
	0x03B6E400 MOV X0, X21
	0x03B6E404 MOV X1, X19
	0x03B6E408 BLR X8
	0x03B6E40C LDR X9, [X21]
	0x03B6E410 LDR X8, [X22]
	0x03B6E414 LDRB W11, [X9 + 0x130]
	0x03B6E418 LDRB W10, [X8 + 0x130]
	0x03B6E41C CMP W11, W10
	0x03B6E420 B.CC 0x3B6E4EC
	0x03B6E424 LDR X9, [X9 + 0xC8]
	0x03B6E428 ADD X9, X9, X10, 0x3, LSL
	0x03B6E42C LDUR X9, [X9 - 0x8]
	0x03B6E430 CMP X9, X8
	0x03B6E434 B.NE 0x3B6E4EC
	0x03B6E438 MOV X24, X20
	0x03B6E43C LDR X22, [X24 + 0xE8]!
	0x03B6E440 CBZ X22, 0x3B6E580
	0x03B6E444 LDP W2, W8, [X22 + 0x18]
	0x03B6E448 ADD W8, W8, 0x1
	0x03B6E44C CMP W2, 0x0
	0x03B6E450 STP W31, W8, [X22 + 0x18]
	0x03B6E454 B.LE 0x3B6E46C
	0x03B6E458 LDR X0, [X22 + 0x10]
	0x03B6E45C MOV W1, W31
	0x03B6E460 MOV X3, X31
	0x03B6E464 BL 0x339FA34
	0x03B6E468 LDR X22, [X24]
	0x03B6E46C LDR X0, [X23]
	0x03B6E470 LDR W8, [X0 + 0xE0]
	0x03B6E474 CBNZ W8, 0x3B6E47C
	0x03B6E478 BL 0x1C16DFC
	0x03B6E47C ADRP X8, 0x5ED000
	0x03B6E480 LDR X8, [X8 + 0xF8]
	0x03B6E484 MOV X0, X19
	0x03B6E488 MOV X1, X22
	0x03B6E48C LDR X2, [X8]
	0x03B6E490 BL 0x22AD328
	0x03B6E494 LDR X1, [X24]
	0x03B6E498 CBZ X1, 0x3B6E580
	0x03B6E49C LDR W8, [X19 + 0x18]
	0x03B6E4A0 LDR W9, [X1 + 0x18]
	0x03B6E4A4 CMP W8, W9
	0x03B6E4A8 B.NE 0x3B6E4EC
	0x03B6E4AC LDR X8, [X21]
	0x03B6E4B0 MOV X0, X21
	0x03B6E4B4 LDR X9, [X8 + 0x6D8]
	0x03B6E4B8 LDR X2, [X8 + 0x6E0]
	0x03B6E4BC BLR X9
	0x03B6E4C0 LDR X0, [X23]
	0x03B6E4C4 LDR X21, [X24]
	0x03B6E4C8 LDR W8, [X0 + 0xE0]
	0x03B6E4CC CBNZ W8, 0x3B6E4D4
	0x03B6E4D0 BL 0x1C16DFC
	0x03B6E4D4 ADRP X8, 0x5ED000
	0x03B6E4D8 LDR X8, [X8 + 0x6C0]
	0x03B6E4DC MOV X0, X21
	0x03B6E4E0 MOV X1, X19
	0x03B6E4E4 LDR X2, [X8]
	0x03B6E4E8 BL 0x22AD328
	0x03B6E4EC LDR X0, [X23]
	0x03B6E4F0 LDR W8, [X0 + 0xE0]
	0x03B6E4F4 CBNZ W8, 0x3B6E500
	0x03B6E4F8 BL 0x1C16DFC
	0x03B6E4FC LDR X0, [X23]
	0x03B6E500 LDR X8, [X0 + 0xB8]
	0x03B6E504 MOV X1, X31
	0x03B6E508 MOV X2, X31
	0x03B6E50C LDR X21, [X8 + 0x40]
	0x03B6E510 MOV X0, X21
	0x03B6E514 BL 0x33C5D2C
	0x03B6E518 TBZ X0, 0x0, 0x3B6E528
	0x03B6E51C MOV X0, X21
	0x03B6E520 MOV X1, X31
	0x03B6E524 BL 0x3BFE970
	0x03B6E528 LDR X0, [X23]
	0x03B6E52C LDR W8, [X0 + 0xE0]
	0x03B6E530 CBNZ W8, 0x3B6E538
	0x03B6E534 BL 0x1C16DFC
	0x03B6E538 MOV X0, X20
	0x03B6E53C MOV X1, X19
	0x03B6E540 BL 0x3B67BF8
	0x03B6E544 MOV X19, X31
	0x03B6E548 MOV X0, X21
	0x03B6E54C MOV X1, X31
	0x03B6E550 MOV X2, X31
	0x03B6E554 BL 0x33C5D2C
	0x03B6E558 TBZ X0, 0x0, 0x3B6E568
	0x03B6E55C MOV X0, X21
	0x03B6E560 MOV X1, X31
	0x03B6E564 BL 0x3BFEA0C
	0x03B6E568 CBNZ X19, 0x3B6E584
	0x03B6E56C LDP X20, X19, [X31 + 0x30]
	0x03B6E570 LDP X22, X21, [X31 + 0x20]
	0x03B6E574 LDP X24, X23, [X31 + 0x10]
	0x03B6E578 LDR X30, [X31], #0x40
	0x03B6E57C RET
	0x03B6E580 BL 0x1C16F20
	0x03B6E584 MOV X0, X19
	0x03B6E588 BL 0x1C16F18
	0x03B6E58C B 0x3B6E590
	0x03B6E590 MOV X20, X0
	0x03B6E594 CMP W1, 0x1
	0x03B6E598 B.NE 0x3B6E5B0
	0x03B6E59C MOV X0, X20
	0x03B6E5A0 BL 0x3EB1AD0
	0x03B6E5A4 LDR X19, [X0]
	0x03B6E5A8 BL 0x3EB1AE0
	0x03B6E5AC B 0x3B6E548
	0x03B6E5B0 MOV X19, X31
	0x03B6E5B4 B 0x3B6E5BC
	0x03B6E5B8 MOV X20, X0
	0x03B6E5BC MOV X0, X21
	0x03B6E5C0 MOV X1, X31
	0x03B6E5C4 MOV X2, X31
	0x03B6E5C8 BL 0x33C5D2C
	0x03B6E5CC TBZ X0, 0x0, 0x3B6E5DC
	0x03B6E5D0 MOV X0, X21
	0x03B6E5D4 MOV X1, X31
	0x03B6E5D8 BL 0x3BFEA0C
	0x03B6E5DC CBNZ X19, 0x3B6E5E8
	0x03B6E5E0 MOV X0, X20
	0x03B6E5E4 BL 0x1D2C690
	0x03B6E5E8 MOV X0, X19
	0x03B6E5EC BL 0x1C16F18
	0x03B6E5F0 BL 0x1990590
	0x03B6E5F4 STR X30, [X31 - 0x30]!
	0x03B6E5F8 STP X22, X21, [X31 + 0x10]
	0x03B6E5FC STP X20, X19, [X31 + 0x20]
	0x03B6E600 ADRP X22, 0x874000
	0x03B6E604 LDRB W8, [X22 + 0xA40]
	0x03B6E608 MOV X21, X2
	0x03B6E60C MOV X19, X1
	0x03B6E610 MOV X20, X0
	0x03B6E614 TBNZ X8, 0x0, 0x3B6E62C
	0x03B6E618 ADRP X0, 0x5EC000
	0x03B6E61C LDR X0, [X0 + 0x368]
	0x03B6E620 BL 0x1C16CF4
	0x03B6E624 MOVZ W8, 0x1
	0x03B6E628 STRB W8, [X22 + 0xA40]
	0x03B6E62C LDR X8, [X20]
	0x03B6E630 MOV X0, X20
	0x03B6E634 MOV X1, X19
	0x03B6E638 MOV X2, X21
	0x03B6E63C LDR X9, [X8 + 0x338]
	0x03B6E640 LDR X3, [X8 + 0x340]
	0x03B6E644 BLR X9
	0x03B6E648 CBZ X19, 0x3B6E680
	0x03B6E64C ADRP X8, 0x5EC000
	0x03B6E650 LDR X8, [X8 + 0x368]
	0x03B6E654 LDR X9, [X19]
	0x03B6E658 LDR X8, [X8]
	0x03B6E65C LDRB W11, [X9 + 0x130]
	0x03B6E660 LDRB W10, [X8 + 0x130]
	0x03B6E664 CMP W11, W10
	0x03B6E668 B.CC 0x3B6E680
	0x03B6E66C LDR X9, [X9 + 0xC8]
	0x03B6E670 ADD X9, X9, X10, 0x3, LSL
	0x03B6E674 LDUR X9, [X9 - 0x8]
	0x03B6E678 CMP X9, X8
	0x03B6E67C B.EQ 0x3B6E690
	0x03B6E680 LDP X20, X19, [X31 + 0x20]
	0x03B6E684 LDP X22, X21, [X31 + 0x10]
	0x03B6E688 LDR X30, [X31], #0x30
	0x03B6E68C RET
	0x03B6E690 LDR X8, [X20]
	0x03B6E694 MOV X0, X20
	0x03B6E698 MOV X1, X19
	0x03B6E69C LDP X20, X19, [X31 + 0x20]
	0x03B6E6A0 LDR X3, [X8 + 0x508]
	0x03B6E6A4 LDR X2, [X8 + 0x510]
	0x03B6E6A8 LDP X22, X21, [X31 + 0x10]
	0x03B6E6AC LDR X30, [X31], #0x30
	0x03B6E6B0 BR X3
	0x03B6E6B4 STP X30, X23, [X31 - 0x30]!
	0x03B6E6B8 STP X22, X21, [X31 + 0x10]
	0x03B6E6BC STP X20, X19, [X31 + 0x20]
	0x03B6E6C0 ADRP X23, 0x874000
	0x03B6E6C4 LDRB W8, [X23 + 0xA46]
	0x03B6E6C8 MOV X19, X3
	0x03B6E6CC MOV X22, X2
	0x03B6E6D0 MOV X20, X1
	0x03B6E6D4 MOV X21, X0
	0x03B6E6D8 TBNZ X8, 0x0, 0x3B6E6F0
	0x03B6E6DC ADRP X0, 0x5EC000
	0x03B6E6E0 LDR X0, [X0 + 0x368]
	0x03B6E6E4 BL 0x1C16CF4
	0x03B6E6E8 MOVZ W8, 0x1
	0x03B6E6EC STRB W8, [X23 + 0xA46]
	0x03B6E6F0 LDR X8, [X21]
	0x03B6E6F4 MOV X0, X21
	0x03B6E6F8 MOV X1, X20
	0x03B6E6FC MOV X2, X22
	0x03B6E700 LDR X9, [X8 + 0x368]
	0x03B6E704 LDR X3, [X8 + 0x370]
	0x03B6E708 BLR X9
	0x03B6E70C CBZ X20, 0x3B6E744
	0x03B6E710 ADRP X8, 0x5EC000
	0x03B6E714 LDR X8, [X8 + 0x368]
	0x03B6E718 LDR X9, [X20]
	0x03B6E71C LDR X8, [X8]
	0x03B6E720 LDRB W11, [X9 + 0x130]
	0x03B6E724 LDRB W10, [X8 + 0x130]
	0x03B6E728 CMP W11, W10
	0x03B6E72C B.CC 0x3B6E744
	0x03B6E730 LDR X9, [X9 + 0xC8]
	0x03B6E734 ADD X9, X9, X10, 0x3, LSL
	0x03B6E738 LDUR X9, [X9 - 0x8]
	0x03B6E73C CMP X9, X8
	0x03B6E740 B.EQ 0x3B6E754
	0x03B6E744 LDP X20, X19, [X31 + 0x20]
	0x03B6E748 LDP X22, X21, [X31 + 0x10]
	0x03B6E74C LDP X30, X23, [X31], #0x30
	0x03B6E750 RET
	0x03B6E754 LDR X8, [X21]
	0x03B6E758 MOV X0, X21
	0x03B6E75C MOV X1, X20
	0x03B6E760 MOV X2, X19
	0x03B6E764 LDR X4, [X8 + 0x538]
	0x03B6E768 LDR X3, [X8 + 0x540]
	0x03B6E76C LDP X20, X19, [X31 + 0x20]
	0x03B6E770 LDP X22, X21, [X31 + 0x10]
	0x03B6E774 LDP X30, X23, [X31], #0x30
	0x03B6E778 BR X4
	0x03B6E77C STP X30, X23, [X31 - 0x30]!
	0x03B6E780 STP X22, X21, [X31 + 0x10]
	0x03B6E784 STP X20, X19, [X31 + 0x20]
	0x03B6E788 ADRP X23, 0x874000
	0x03B6E78C LDRB W8, [X23 + 0xA65]
	0x03B6E790 MOV X19, X3
	0x03B6E794 MOV X22, X2
	0x03B6E798 MOV X20, X1
	0x03B6E79C MOV X21, X0
	0x03B6E7A0 TBNZ X8, 0x0, 0x3B6E7B8
	0x03B6E7A4 ADRP X0, 0x5EC000
	0x03B6E7A8 LDR X0, [X0 + 0x368]
	0x03B6E7AC BL 0x1C16CF4
	0x03B6E7B0 MOVZ W8, 0x1
	0x03B6E7B4 STRB W8, [X23 + 0xA65]
	0x03B6E7B8 LDR X8, [X21]
	0x03B6E7BC MOV X0, X21
	0x03B6E7C0 MOV X1, X20
	0x03B6E7C4 MOV X2, X22
	0x03B6E7C8 LDR X9, [X8 + 0x488]
	0x03B6E7CC LDR X3, [X8 + 0x490]
	0x03B6E7D0 BLR X9
	0x03B6E7D4 CBZ X20, 0x3B6E80C
	0x03B6E7D8 ADRP X8, 0x5EC000
	0x03B6E7DC LDR X8, [X8 + 0x368]
	0x03B6E7E0 LDR X9, [X20]
	0x03B6E7E4 LDR X8, [X8]
	0x03B6E7E8 LDRB W11, [X9 + 0x130]
	0x03B6E7EC LDRB W10, [X8 + 0x130]
	0x03B6E7F0 CMP W11, W10
	0x03B6E7F4 B.CC 0x3B6E80C
	0x03B6E7F8 LDR X9, [X9 + 0xC8]
	0x03B6E7FC ADD X9, X9, X10, 0x3, LSL
	0x03B6E800 LDUR X9, [X9 - 0x8]
	0x03B6E804 CMP X9, X8
	0x03B6E808 B.EQ 0x3B6E81C
	0x03B6E80C LDP X20, X19, [X31 + 0x20]
	0x03B6E810 LDP X22, X21, [X31 + 0x10]
	0x03B6E814 LDP X30, X23, [X31], #0x30
	0x03B6E818 RET
	0x03B6E81C LDR X8, [X21]
	0x03B6E820 MOV X0, X21
	0x03B6E824 MOV X1, X20
	0x03B6E828 MOV X2, X19
	0x03B6E82C LDR X4, [X8 + 0x608]
	0x03B6E830 LDR X3, [X8 + 0x610]
	0x03B6E834 LDP X20, X19, [X31 + 0x20]
	0x03B6E838 LDP X22, X21, [X31 + 0x10]
	0x03B6E83C LDP X30, X23, [X31], #0x30
	0x03B6E840 BR X4
	0x03B6E844 STP X30, X23, [X31 - 0x30]!
	0x03B6E848 STP X22, X21, [X31 + 0x10]
	0x03B6E84C STP X20, X19, [X31 + 0x20]
	0x03B6E850 ADRP X23, 0x874000
	0x03B6E854 LDRB W8, [X23 + 0xA67]
	0x03B6E858 MOV X19, X3
	0x03B6E85C MOV X22, X2
	0x03B6E860 MOV X20, X1
	0x03B6E864 MOV X21, X0
	0x03B6E868 TBNZ X8, 0x0, 0x3B6E880
	0x03B6E86C ADRP X0, 0x5EC000
	0x03B6E870 LDR X0, [X0 + 0x368]
	0x03B6E874 BL 0x1C16CF4
	0x03B6E878 MOVZ W8, 0x1
	0x03B6E87C STRB W8, [X23 + 0xA67]
	0x03B6E880 LDR X8, [X21]
	0x03B6E884 MOV X0, X21
	0x03B6E888 MOV X1, X20
	0x03B6E88C MOV X2, X22
	0x03B6E890 LDR X9, [X8 + 0x498]
	0x03B6E894 LDR X3, [X8 + 0x4A0]
	0x03B6E898 BLR X9
	0x03B6E89C CBZ X20, 0x3B6E8D4
	0x03B6E8A0 ADRP X8, 0x5EC000
	0x03B6E8A4 LDR X8, [X8 + 0x368]
	0x03B6E8A8 LDR X9, [X20]
	0x03B6E8AC LDR X8, [X8]
	0x03B6E8B0 LDRB W11, [X9 + 0x130]
	0x03B6E8B4 LDRB W10, [X8 + 0x130]
	0x03B6E8B8 CMP W11, W10
	0x03B6E8BC B.CC 0x3B6E8D4
	0x03B6E8C0 LDR X9, [X9 + 0xC8]
	0x03B6E8C4 ADD X9, X9, X10, 0x3, LSL
	0x03B6E8C8 LDUR X9, [X9 - 0x8]
	0x03B6E8CC CMP X9, X8
	0x03B6E8D0 B.EQ 0x3B6E8E4
	0x03B6E8D4 LDP X20, X19, [X31 + 0x20]
	0x03B6E8D8 LDP X22, X21, [X31 + 0x10]
	0x03B6E8DC LDP X30, X23, [X31], #0x30
	0x03B6E8E0 RET
	0x03B6E8E4 LDR X8, [X21]
	0x03B6E8E8 MOV X0, X21
	0x03B6E8EC MOV X1, X20
	0x03B6E8F0 MOV X2, X19
	0x03B6E8F4 LDR X4, [X8 + 0x618]
	0x03B6E8F8 LDR X3, [X8 + 0x620]
	0x03B6E8FC LDP X20, X19, [X31 + 0x20]
	0x03B6E900 LDP X22, X21, [X31 + 0x10]
	0x03B6E904 LDP X30, X23, [X31], #0x30
	0x03B6E908 BR X4
	0x03B6E90C STR X30, [X31 - 0x30]!
	0x03B6E910 STP X22, X21, [X31 + 0x10]
	0x03B6E914 STP X20, X19, [X31 + 0x20]
	0x03B6E918 ADRP X20, 0x874000
	0x03B6E91C ADRP X22, 0x5EC000
	0x03B6E920 LDRB W8, [X20 + 0xA1C]
	0x03B6E924 LDR X22, [X22 + 0xE20]
	0x03B6E928 MOV X19, X0
	0x03B6E92C TBNZ X8, 0x0, 0x3B6E944
	0x03B6E930 ADRP X0, 0x5EC000
	0x03B6E934 LDR X0, [X0 + 0xE20]
	0x03B6E938 BL 0x1C16CF4
	0x03B6E93C MOVZ W8, 0x1
	0x03B6E940 STRB W8, [X20 + 0xA1C]
	0x03B6E944 MOV X0, X19
	0x03B6E948 BL 0x3B6E270
	0x03B6E94C LDR X0, [X22]
	0x03B6E950 LDR W8, [X0 + 0xE0]
	0x03B6E954 CBNZ W8, 0x3B6E960
	0x03B6E958 BL 0x1C16DFC
	0x03B6E95C LDR X0, [X22]
	0x03B6E960 LDR X8, [X0 + 0xB8]
	0x03B6E964 MOV X1, X31
	0x03B6E968 MOV X2, X31
	0x03B6E96C LDR X20, [X8 + 0x20]
	0x03B6E970 MOV X0, X20
	0x03B6E974 BL 0x33C5D2C
	0x03B6E978 TBZ X0, 0x0, 0x3B6E988
	0x03B6E97C MOV X0, X20
	0x03B6E980 MOV X1, X31
	0x03B6E984 BL 0x3BFE970
	0x03B6E988 LDR X8, [X19]
	0x03B6E98C LDP X9, X2, [X8 + 0x1F8]
	0x03B6E990 MOVZ W1, 0x2
	0x03B6E994 MOV X0, X19
	0x03B6E998 BLR X9
	0x03B6E99C MOV X21, X31
	0x03B6E9A0 MOV X0, X20
	0x03B6E9A4 MOV X1, X31
	0x03B6E9A8 MOV X2, X31
	0x03B6E9AC BL 0x33C5D2C
	0x03B6E9B0 TBZ X0, 0x0, 0x3B6E9C0
	0x03B6E9B4 MOV X0, X20
	0x03B6E9B8 MOV X1, X31
	0x03B6E9BC BL 0x3BFEA0C
	0x03B6E9C0 CBNZ X21, 0x3B6EA50
	0x03B6E9C4 LDR X0, [X22]
	0x03B6E9C8 LDR W8, [X0 + 0xE0]
	0x03B6E9CC CBNZ W8, 0x3B6E9D8
	0x03B6E9D0 BL 0x1C16DFC
	0x03B6E9D4 LDR X0, [X22]
	0x03B6E9D8 LDR X8, [X0 + 0xB8]
	0x03B6E9DC MOV X1, X31
	0x03B6E9E0 MOV X2, X31
	0x03B6E9E4 LDR X20, [X8 + 0x28]
	0x03B6E9E8 MOV X0, X20
	0x03B6E9EC BL 0x33C5D2C
	0x03B6E9F0 TBZ X0, 0x0, 0x3B6EA00
	0x03B6E9F4 MOV X0, X20
	0x03B6E9F8 MOV X1, X31
	0x03B6E9FC BL 0x3BFE970
	0x03B6EA00 LDR X8, [X19]
	0x03B6EA04 LDR X9, [X8 + 0x208]
	0x03B6EA08 LDR X2, [X8 + 0x210]
	0x03B6EA0C MOVZ W1, 0x2
	0x03B6EA10 MOV X0, X19
	0x03B6EA14 BLR X9
	0x03B6EA18 MOV X19, X31
	0x03B6EA1C MOV X0, X20
	0x03B6EA20 MOV X1, X31
	0x03B6EA24 MOV X2, X31
	0x03B6EA28 BL 0x33C5D2C
	0x03B6EA2C TBZ X0, 0x0, 0x3B6EA3C
	0x03B6EA30 MOV X0, X20
	0x03B6EA34 MOV X1, X31
	0x03B6EA38 BL 0x3BFEA0C
	0x03B6EA3C CBNZ X19, 0x3B6EA58
	0x03B6EA40 LDP X20, X19, [X31 + 0x20]
	0x03B6EA44 LDP X22, X21, [X31 + 0x10]
	0x03B6EA48 LDR X30, [X31], #0x30
	0x03B6EA4C RET
	0x03B6EA50 MOV X0, X21
	0x03B6EA54 BL 0x1C16F18
	0x03B6EA58 MOV X0, X19
	0x03B6EA5C BL 0x1C16F18
	0x03B6EA60 CMP W1, 0x1
	0x03B6EA64 MOV X21, X0
	0x03B6EA68 B.NE 0x3B6EA80
	0x03B6EA6C MOV X0, X21
	0x03B6EA70 BL 0x3EB1AD0
	0x03B6EA74 LDR X19, [X0]
	0x03B6EA78 BL 0x3EB1AE0
	0x03B6EA7C B 0x3B6EA1C
	0x03B6EA80 MOV X19, X31
	0x03B6EA84 B 0x3B6EA8C
	0x03B6EA88 MOV X21, X0
	0x03B6EA8C MOV X0, X20
	0x03B6EA90 MOV X1, X31
	0x03B6EA94 MOV X2, X31
	0x03B6EA98 BL 0x33C5D2C
	0x03B6EA9C TBZ X0, 0x0, 0x3B6EAAC
	0x03B6EAA0 MOV X0, X20
	0x03B6EAA4 MOV X1, X31
	0x03B6EAA8 BL 0x3BFEA0C
	0x03B6EAAC CBZ X19, 0x3B6EB14
	0x03B6EAB0 MOV X0, X19
	0x03B6EAB4 BL 0x1C16F18
	0x03B6EAB8 CMP W1, 0x1
	0x03B6EABC MOV X21, X0
	0x03B6EAC0 B.NE 0x3B6EAE0
	0x03B6EAC4 MOV X0, X21
	0x03B6EAC8 BL 0x3EB1AD0
	0x03B6EACC LDR X8, [X0]
	0x03B6EAD0 STR X8, [X31 + 0x8]
	0x03B6EAD4 BL 0x3EB1AE0
	0x03B6EAD8 LDR X21, [X31 + 0x8]
	0x03B6EADC B 0x3B6E9A0
	0x03B6EAE0 STR X31, [X31 + 0x8]
	0x03B6EAE4 B 0x3B6EAEC
	0x03B6EAE8 MOV X21, X0
	0x03B6EAEC MOV X0, X20
	0x03B6EAF0 MOV X1, X31
	0x03B6EAF4 MOV X2, X31
	0x03B6EAF8 BL 0x33C5D2C
	0x03B6EAFC TBZ X0, 0x0, 0x3B6EB0C
	0x03B6EB00 MOV X0, X20
	0x03B6EB04 MOV X1, X31
	0x03B6EB08 BL 0x3BFEA0C
	0x03B6EB0C LDR X8, [X31 + 0x8]
	0x03B6EB10 CBNZ X8, 0x3B6EB1C
	0x03B6EB14 MOV X0, X21
	0x03B6EB18 BL 0x1D2C690
	0x03B6EB1C LDR X0, [X31 + 0x8]
	0x03B6EB20 BL 0x1C16F18
	0x03B6EB24 BL 0x1990590
	0x03B6EB28 STR X30, [X31 - 0x30]!
	0x03B6EB2C STP X22, X21, [X31 + 0x10]
	0x03B6EB30 STP X20, X19, [X31 + 0x20]
	0x03B6EB34 ADRP X20, 0x874000
	0x03B6EB38 ADRP X22, 0x5EC000
	0x03B6EB3C LDRB W8, [X20 + 0xA1D]
	0x03B6EB40 LDR X22, [X22 + 0xE20]
	0x03B6EB44 MOV X19, X0
	0x03B6EB48 TBNZ X8, 0x0, 0x3B6EB60
	0x03B6EB4C ADRP X0, 0x5EC000
	0x03B6EB50 LDR X0, [X0 + 0xE20]
	0x03B6EB54 BL 0x1C16CF4
	0x03B6EB58 MOVZ W8, 0x1
	0x03B6EB5C STRB W8, [X20 + 0xA1D]
	0x03B6EB60 MOV X0, X19
	0x03B6EB64 BL 0x3B6E270
	0x03B6EB68 LDR X0, [X22]
	0x03B6EB6C LDR W8, [X0 + 0xE0]
	0x03B6EB70 CBNZ W8, 0x3B6EB7C
	0x03B6EB74 BL 0x1C16DFC
	0x03B6EB78 LDR X0, [X22]
	0x03B6EB7C LDR X8, [X0 + 0xB8]
	0x03B6EB80 MOV X1, X31
	0x03B6EB84 MOV X2, X31
	0x03B6EB88 LDR X20, [X8 + 0x20]
	0x03B6EB8C MOV X0, X20
	0x03B6EB90 BL 0x33C5D2C
	0x03B6EB94 TBZ X0, 0x0, 0x3B6EBA4
	0x03B6EB98 MOV X0, X20
	0x03B6EB9C MOV X1, X31
	0x03B6EBA0 BL 0x3BFE970
	0x03B6EBA4 LDR X8, [X19]
	0x03B6EBA8 LDP X9, X2, [X8 + 0x1F8]
	0x03B6EBAC MOV X0, X19
	0x03B6EBB0 MOV W1, W31
	0x03B6EBB4 BLR X9
	0x03B6EBB8 MOV X21, X31
	0x03B6EBBC MOV X0, X20
	0x03B6EBC0 MOV X1, X31
	0x03B6EBC4 MOV X2, X31
	0x03B6EBC8 BL 0x33C5D2C
	0x03B6EBCC TBZ X0, 0x0, 0x3B6EBDC
	0x03B6EBD0 MOV X0, X20
	0x03B6EBD4 MOV X1, X31
	0x03B6EBD8 BL 0x3BFEA0C
	0x03B6EBDC CBNZ X21, 0x3B6EC6C
	0x03B6EBE0 LDR X0, [X22]
	0x03B6EBE4 LDR W8, [X0 + 0xE0]
	0x03B6EBE8 CBNZ W8, 0x3B6EBF4
	0x03B6EBEC BL 0x1C16DFC
	0x03B6EBF0 LDR X0, [X22]
	0x03B6EBF4 LDR X8, [X0 + 0xB8]
	0x03B6EBF8 MOV X1, X31
	0x03B6EBFC MOV X2, X31
	0x03B6EC00 LDR X20, [X8 + 0x28]
	0x03B6EC04 MOV X0, X20
	0x03B6EC08 BL 0x33C5D2C
	0x03B6EC0C TBZ X0, 0x0, 0x3B6EC1C
	0x03B6EC10 MOV X0, X20
	0x03B6EC14 MOV X1, X31
	0x03B6EC18 BL 0x3BFE970
	0x03B6EC1C LDR X8, [X19]
	0x03B6EC20 LDR X9, [X8 + 0x208]
	0x03B6EC24 LDR X2, [X8 + 0x210]
	0x03B6EC28 MOV X0, X19
	0x03B6EC2C MOV W1, W31
	0x03B6EC30 BLR X9
	0x03B6EC34 MOV X19, X31
	0x03B6EC38 MOV X0, X20
	0x03B6EC3C MOV X1, X31
	0x03B6EC40 MOV X2, X31
	0x03B6EC44 BL 0x33C5D2C
	0x03B6EC48 TBZ X0, 0x0, 0x3B6EC58
	0x03B6EC4C MOV X0, X20
	0x03B6EC50 MOV X1, X31
	0x03B6EC54 BL 0x3BFEA0C
	0x03B6EC58 CBNZ X19, 0x3B6EC74
	0x03B6EC5C LDP X20, X19, [X31 + 0x20]
	0x03B6EC60 LDP X22, X21, [X31 + 0x10]
	0x03B6EC64 LDR X30, [X31], #0x30
	0x03B6EC68 RET
	0x03B6EC6C MOV X0, X21
	0x03B6EC70 BL 0x1C16F18
	0x03B6EC74 MOV X0, X19
	0x03B6EC78 BL 0x1C16F18
	0x03B6EC7C CMP W1, 0x1
	0x03B6EC80 MOV X21, X0
	0x03B6EC84 B.NE 0x3B6EC9C
	0x03B6EC88 MOV X0, X21
	0x03B6EC8C BL 0x3EB1AD0
	0x03B6EC90 LDR X19, [X0]
	0x03B6EC94 BL 0x3EB1AE0
	0x03B6EC98 B 0x3B6EC38
	0x03B6EC9C MOV X19, X31
	0x03B6ECA0 B 0x3B6ECA8
	0x03B6ECA4 MOV X21, X0
	0x03B6ECA8 MOV X0, X20
	0x03B6ECAC MOV X1, X31
	0x03B6ECB0 MOV X2, X31
	0x03B6ECB4 BL 0x33C5D2C
	0x03B6ECB8 TBZ X0, 0x0, 0x3B6ECC8
	0x03B6ECBC MOV X0, X20
	0x03B6ECC0 MOV X1, X31
	0x03B6ECC4 BL 0x3BFEA0C
	0x03B6ECC8 CBZ X19, 0x3B6ED30
	0x03B6ECCC MOV X0, X19
	0x03B6ECD0 BL 0x1C16F18
	0x03B6ECD4 CMP W1, 0x1
	0x03B6ECD8 MOV X21, X0
	0x03B6ECDC B.NE 0x3B6ECFC
	0x03B6ECE0 MOV X0, X21
	0x03B6ECE4 BL 0x3EB1AD0
	0x03B6ECE8 LDR X8, [X0]
	0x03B6ECEC STR X8, [X31 + 0x8]
	0x03B6ECF0 BL 0x3EB1AE0
	0x03B6ECF4 LDR X21, [X31 + 0x8]
	0x03B6ECF8 B 0x3B6EBBC
	0x03B6ECFC STR X31, [X31 + 0x8]
	0x03B6ED00 B 0x3B6ED08
	0x03B6ED04 MOV X21, X0
	0x03B6ED08 MOV X0, X20
	0x03B6ED0C MOV X1, X31
	0x03B6ED10 MOV X2, X31
	0x03B6ED14 BL 0x33C5D2C
	0x03B6ED18 TBZ X0, 0x0, 0x3B6ED28
	0x03B6ED1C MOV X0, X20
	0x03B6ED20 MOV X1, X31
	0x03B6ED24 BL 0x3BFEA0C
	0x03B6ED28 LDR X8, [X31 + 0x8]
	0x03B6ED2C CBNZ X8, 0x3B6ED38
	0x03B6ED30 MOV X0, X21
	0x03B6ED34 BL 0x1D2C690
	0x03B6ED38 LDR X0, [X31 + 0x8]
	0x03B6ED3C BL 0x1C16F18
	0x03B6ED40 BL 0x1990590
	0x03B6ED44 STR X30, [X31 - 0x30]!
	0x03B6ED48 STP X22, X21, [X31 + 0x10]
	0x03B6ED4C STP X20, X19, [X31 + 0x20]
	0x03B6ED50 ADRP X20, 0x874000
	0x03B6ED54 ADRP X22, 0x5EC000
	0x03B6ED58 LDRB W8, [X20 + 0xA1E]
	0x03B6ED5C LDR X22, [X22 + 0xE20]
	0x03B6ED60 MOV X19, X0
	0x03B6ED64 TBNZ X8, 0x0, 0x3B6ED7C
	0x03B6ED68 ADRP X0, 0x5EC000
	0x03B6ED6C LDR X0, [X0 + 0xE20]
	0x03B6ED70 BL 0x1C16CF4
	0x03B6ED74 MOVZ W8, 0x1
	0x03B6ED78 STRB W8, [X20 + 0xA1E]
	0x03B6ED7C MOV X0, X19
	0x03B6ED80 BL 0x3B6E270
	0x03B6ED84 LDR X0, [X22]
	0x03B6ED88 LDR W8, [X0 + 0xE0]
	0x03B6ED8C CBNZ W8, 0x3B6ED98
	0x03B6ED90 BL 0x1C16DFC
	0x03B6ED94 LDR X0, [X22]
	0x03B6ED98 LDR X8, [X0 + 0xB8]
	0x03B6ED9C MOV X1, X31
	0x03B6EDA0 MOV X2, X31
	0x03B6EDA4 LDR X20, [X8 + 0x20]
	0x03B6EDA8 MOV X0, X20
	0x03B6EDAC BL 0x33C5D2C
	0x03B6EDB0 TBZ X0, 0x0, 0x3B6EDC0
	0x03B6EDB4 MOV X0, X20
	0x03B6EDB8 MOV X1, X31
	0x03B6EDBC BL 0x3BFE970
	0x03B6EDC0 LDR X8, [X19]
	0x03B6EDC4 LDP X9, X2, [X8 + 0x1F8]
	0x03B6EDC8 MOVZ W1, 0x3
	0x03B6EDCC MOV X0, X19
	0x03B6EDD0 BLR X9
	0x03B6EDD4 MOV X21, X31
	0x03B6EDD8 MOV X0, X20
	0x03B6EDDC MOV X1, X31
	0x03B6EDE0 MOV X2, X31
	0x03B6EDE4 BL 0x33C5D2C
	0x03B6EDE8 TBZ X0, 0x0, 0x3B6EDF8
	0x03B6EDEC MOV X0, X20
	0x03B6EDF0 MOV X1, X31
	0x03B6EDF4 BL 0x3BFEA0C
	0x03B6EDF8 CBNZ X21, 0x3B6EE88
	0x03B6EDFC LDR X0, [X22]
	0x03B6EE00 LDR W8, [X0 + 0xE0]
	0x03B6EE04 CBNZ W8, 0x3B6EE10
	0x03B6EE08 BL 0x1C16DFC
	0x03B6EE0C LDR X0, [X22]
	0x03B6EE10 LDR X8, [X0 + 0xB8]
	0x03B6EE14 MOV X1, X31
	0x03B6EE18 MOV X2, X31
	0x03B6EE1C LDR X20, [X8 + 0x28]
	0x03B6EE20 MOV X0, X20
	0x03B6EE24 BL 0x33C5D2C
	0x03B6EE28 TBZ X0, 0x0, 0x3B6EE38
	0x03B6EE2C MOV X0, X20
	0x03B6EE30 MOV X1, X31
	0x03B6EE34 BL 0x3BFE970
	0x03B6EE38 LDR X8, [X19]
	0x03B6EE3C LDR X9, [X8 + 0x208]
	0x03B6EE40 LDR X2, [X8 + 0x210]
	0x03B6EE44 MOVZ W1, 0x3
	0x03B6EE48 MOV X0, X19
	0x03B6EE4C BLR X9
	0x03B6EE50 MOV X19, X31
	0x03B6EE54 MOV X0, X20
	0x03B6EE58 MOV X1, X31
	0x03B6EE5C MOV X2, X31
	0x03B6EE60 BL 0x33C5D2C
	0x03B6EE64 TBZ X0, 0x0, 0x3B6EE74
	0x03B6EE68 MOV X0, X20
	0x03B6EE6C MOV X1, X31
	0x03B6EE70 BL 0x3BFEA0C
	0x03B6EE74 CBNZ X19, 0x3B6EE90
	0x03B6EE78 LDP X20, X19, [X31 + 0x20]
	0x03B6EE7C LDP X22, X21, [X31 + 0x10]
	0x03B6EE80 LDR X30, [X31], #0x30
	0x03B6EE84 RET
	0x03B6EE88 MOV X0, X21
	0x03B6EE8C BL 0x1C16F18
	0x03B6EE90 MOV X0, X19
	0x03B6EE94 BL 0x1C16F18
	0x03B6EE98 CMP W1, 0x1
	0x03B6EE9C MOV X21, X0
	0x03B6EEA0 B.NE 0x3B6EEB8
	0x03B6EEA4 MOV X0, X21
	0x03B6EEA8 BL 0x3EB1AD0
	0x03B6EEAC LDR X19, [X0]
	0x03B6EEB0 BL 0x3EB1AE0
	0x03B6EEB4 B 0x3B6EE54
	0x03B6EEB8 MOV X19, X31
	0x03B6EEBC B 0x3B6EEC4
	0x03B6EEC0 MOV X21, X0
	0x03B6EEC4 MOV X0, X20
	0x03B6EEC8 MOV X1, X31
	0x03B6EECC MOV X2, X31
	0x03B6EED0 BL 0x33C5D2C
	0x03B6EED4 TBZ X0, 0x0, 0x3B6EEE4
	0x03B6EED8 MOV X0, X20
	0x03B6EEDC MOV X1, X31
	0x03B6EEE0 BL 0x3BFEA0C
	0x03B6EEE4 CBZ X19, 0x3B6EF4C
	0x03B6EEE8 MOV X0, X19
	0x03B6EEEC BL 0x1C16F18
	0x03B6EEF0 CMP W1, 0x1
	0x03B6EEF4 MOV X21, X0
	0x03B6EEF8 B.NE 0x3B6EF18
	0x03B6EEFC MOV X0, X21
	0x03B6EF00 BL 0x3EB1AD0
	0x03B6EF04 LDR X8, [X0]
	0x03B6EF08 STR X8, [X31 + 0x8]
	0x03B6EF0C BL 0x3EB1AE0
	0x03B6EF10 LDR X21, [X31 + 0x8]
	0x03B6EF14 B 0x3B6EDD8
	0x03B6EF18 STR X31, [X31 + 0x8]
	0x03B6EF1C B 0x3B6EF24
	0x03B6EF20 MOV X21, X0
	0x03B6EF24 MOV X0, X20
	0x03B6EF28 MOV X1, X31
	0x03B6EF2C MOV X2, X31
	0x03B6EF30 BL 0x33C5D2C
	0x03B6EF34 TBZ X0, 0x0, 0x3B6EF44
	0x03B6EF38 MOV X0, X20
	0x03B6EF3C MOV X1, X31
	0x03B6EF40 BL 0x3BFEA0C
	0x03B6EF44 LDR X8, [X31 + 0x8]
	0x03B6EF48 CBNZ X8, 0x3B6EF54
	0x03B6EF4C MOV X0, X21
	0x03B6EF50 BL 0x1D2C690
	0x03B6EF54 LDR X0, [X31 + 0x8]
	0x03B6EF58 BL 0x1C16F18
	0x03B6EF5C BL 0x1990590
	0x03B6EF60 SUB X31, X31, 0xC0
	0x03B6EF64 STP X29, X30, [X31 + 0x60]
	0x03B6EF68 STP X28, X27, [X31 + 0x70]
	0x03B6EF6C STP X26, X25, [X31 + 0x80]
	0x03B6EF70 STP X24, X23, [X31 + 0x90]
	0x03B6EF74 STP X22, X21, [X31 + 0xA0]
	0x03B6EF78 STP X20, X19, [X31 + 0xB0]
	0x03B6EF7C ADRP X21, 0x874000
	0x03B6EF80 LDRB W8, [X21 + 0xA1F]
	0x03B6EF84 MOV W19, W1
	0x03B6EF88 MOV X20, X0
	0x03B6EF8C TBNZ X8, 0x0, 0x3B6F040
	0x03B6EF90 ADRP X0, 0x5ED000
	0x03B6EF94 LDR X0, [X0 + 0x658]
	0x03B6EF98 BL 0x1C16CF4
	0x03B6EF9C ADRP X0, 0x5ED000
	0x03B6EFA0 LDR X0, [X0 + 0x660]
	0x03B6EFA4 BL 0x1C16CF4
	0x03B6EFA8 ADRP X0, 0x5ED000
	0x03B6EFAC LDR X0, [X0 + 0x668]
	0x03B6EFB0 BL 0x1C16CF4
	0x03B6EFB4 ADRP X0, 0x5ED000
	0x03B6EFB8 LDR X0, [X0 + 0x670]
	0x03B6EFBC BL 0x1C16CF4
	0x03B6EFC0 ADRP X0, 0x5ED000
	0x03B6EFC4 LDR X0, [X0 + 0x678]
	0x03B6EFC8 BL 0x1C16CF4
	0x03B6EFCC ADRP X0, 0x5ED000
	0x03B6EFD0 LDR X0, [X0 + 0x680]
	0x03B6EFD4 BL 0x1C16CF4
	0x03B6EFD8 ADRP X0, 0x5ED000
	0x03B6EFDC LDR X0, [X0 + 0x688]
	0x03B6EFE0 BL 0x1C16CF4
	0x03B6EFE4 ADRP X0, 0x5ED000
	0x03B6EFE8 LDR X0, [X0 + 0x690]
	0x03B6EFEC BL 0x1C16CF4
	0x03B6EFF0 ADRP X0, 0x5ED000
	0x03B6EFF4 LDR X0, [X0 + 0x698]
	0x03B6EFF8 BL 0x1C16CF4
	0x03B6EFFC ADRP X0, 0x5ED000
	0x03B6F000 LDR X0, [X0 + 0x6A0]
	0x03B6F004 BL 0x1C16CF4
	0x03B6F008 ADRP X0, 0x5EB000
	0x03B6F00C LDR X0, [X0 + 0x938]
	0x03B6F010 BL 0x1C16CF4
	0x03B6F014 ADRP X0, 0x5EB000
	0x03B6F018 LDR X0, [X0 + 0x2F8]
	0x03B6F01C BL 0x1C16CF4
	0x03B6F020 ADRP X0, 0x5EC000
	0x03B6F024 LDR X0, [X0 + 0x6A8]
	0x03B6F028 BL 0x1C16CF4
	0x03B6F02C ADRP X0, 0x5EC000
	0x03B6F030 LDR X0, [X0 + 0x6B0]
	0x03B6F034 BL 0x1C16CF4
	0x03B6F038 MOVZ W8, 0x1
	0x03B6F03C STRB W8, [X21 + 0xA1F]
	0x03B6F040 STP X31, X31, [X31 + 0x40]
	0x03B6F044 STR X31, [X31 + 0x50]
	0x03B6F048 STP X31, X31, [X31 + 0x20]
	0x03B6F04C STR X31, [X31 + 0x30]
	0x03B6F050 LDR X8, [X20 + 0xA0]
	0x03B6F054 CBZ X8, 0x3B6F2A8
	0x03B6F058 LDR X0, [X8 + 0x10]
	0x03B6F05C CBZ X0, 0x3B6F2A8
	0x03B6F060 ADRP X8, 0x5EC000
	0x03B6F064 LDR X8, [X8 + 0x6B0]
	0x03B6F068 ADRP X28, 0x5EC000
	0x03B6F06C ADRP X29, 0x5EC000
	0x03B6F070 ADRP X22, 0x5EB000
	0x03B6F074 ADRP X26, 0x5EC000
	0x03B6F078 ADRP X23, 0x5EC000
	0x03B6F07C ADRP X24, 0x5EC000
	0x03B6F080 LDR X28, [X28 + 0x678]
	0x03B6F084 LDR X29, [X29 + 0x698]
	0x03B6F088 LDR X22, [X22 + 0x938]
	0x03B6F08C LDR X26, [X26 + 0x6A8]
	0x03B6F090 LDR X23, [X23 + 0x680]
	0x03B6F094 LDR X24, [X24 + 0x6A0]
	0x03B6F098 LDR X1, [X8]
	0x03B6F09C ADRP X25, 0x5EB000
	0x03B6F0A0 ADRP X27, 0x5EC000
	0x03B6F0A4 LDR X25, [X25 + 0x2F8]
	0x03B6F0A8 LDR X27, [X27 + 0x668]
	0x03B6F0AC ADD X8, X31, 0x8
	0x03B6F0B0 BL 0x301CB58
	0x03B6F0B4 LDUR V0, [X31 + 0x8]
	0x03B6F0B8 LDR X8, [X31 + 0x18]
	0x03B6F0BC STR V0, [X31 + 0x4]
	0x03B6F0C0 STR X8, [X31 + 0x50]
	0x03B6F0C4 LDR X1, [X28]
	0x03B6F0C8 ADD X0, X31, 0x40
	0x03B6F0CC BL 0x2BC4350
	0x03B6F0D0 TBZ X0, 0x0, 0x3B6F174
	0x03B6F0D4 LDR X0, [X20 + 0xA0]
	0x03B6F0D8 CBZ X0, 0x3B6F290
	0x03B6F0DC LDR X8, [X0]
	0x03B6F0E0 LDR X21, [X31 + 0x50]
	0x03B6F0E4 LDP X9, X2, [X8 + 0x188]
	0x03B6F0E8 MOV X1, X21
	0x03B6F0EC BLR X9
	0x03B6F0F0 TBZ X0, 0x0, 0x3B6F0C4
	0x03B6F0F4 LDR X0, [X20 + 0xE0]
	0x03B6F0F8 CBZ X0, 0x3B6F298
	0x03B6F0FC LDR X2, [X29]
	0x03B6F100 MOV X1, X21
	0x03B6F104 BL 0x2DBE4B0
	0x03B6F108 TBNZ X0, 0x0, 0x3B6F0C4
	0x03B6F10C CBZ X21, 0x3B6F2A0
	0x03B6F110 LDR X8, [X21]
	0x03B6F114 LDR X1, [X22]
	0x03B6F118 LDRH W9, [X8 + 0x12E]
	0x03B6F11C CBZ X9, 0x3B6F140
	0x03B6F120 LDR X10, [X8 + 0xB0]
	0x03B6F124 ADD X10, X10, 0x8
	0x03B6F128 LDUR X11, [X10 - 0x8]
	0x03B6F12C CMP X11, X1
	0x03B6F130 B.EQ 0x3B6F150
	0x03B6F134 SUBS X9, X9, 0x1
	0x03B6F138 ADD X10, X10, 0x10
	0x03B6F13C B.NE 0x3B6F128
	0x03B6F140 MOVZ W2, 0x12
	0x03B6F144 MOV X0, X21
	0x03B6F148 BL 0x1C5C788
	0x03B6F14C B 0x3B6F160
	0x03B6F150 LDR W9, [X10]
	0x03B6F154 ADD W9, W9, 0x12
	0x03B6F158 ADD X8, X8, W9, 0x4, SXTW
	0x03B6F15C ADD X0, X8, 0x138
	0x03B6F160 LDP X8, X2, [X0]
	0x03B6F164 MOV X0, X21
	0x03B6F168 MOV W1, W19
	0x03B6F16C BLR X8
	0x03B6F170 B 0x3B6F0C4
	0x03B6F174 LDR X1, [X27]
	0x03B6F178 ADD X0, X31, 0x40
	0x03B6F17C BL 0x2BC434C
	0x03B6F180 LDR X8, [X20 + 0x98]
	0x03B6F184 CBZ X8, 0x3B6F2A8
	0x03B6F188 LDR X0, [X8 + 0x10]
	0x03B6F18C CBZ X0, 0x3B6F2A8
	0x03B6F190 LDR X1, [X26]
	0x03B6F194 ADD X8, X31, 0x8
	0x03B6F198 BL 0x301CB58
	0x03B6F19C LDUR V0, [X31 + 0x8]
	0x03B6F1A0 LDR X8, [X31 + 0x18]
	0x03B6F1A4 STR V0, [X31 + 0x2]
	0x03B6F1A8 STR X8, [X31 + 0x30]
	0x03B6F1AC LDR X1, [X23]
	0x03B6F1B0 ADD X0, X31, 0x20
	0x03B6F1B4 BL 0x2BC4350
	0x03B6F1B8 TBZ X0, 0x0, 0x3B6F25C
	0x03B6F1BC LDR X0, [X20 + 0x98]
	0x03B6F1C0 CBZ X0, 0x3B6F294
	0x03B6F1C4 LDR X8, [X0]
	0x03B6F1C8 LDR X21, [X31 + 0x30]
	0x03B6F1CC LDP X9, X2, [X8 + 0x188]
	0x03B6F1D0 MOV X1, X21
	0x03B6F1D4 BLR X9
	0x03B6F1D8 TBZ X0, 0x0, 0x3B6F1AC
	0x03B6F1DC LDR X0, [X20 + 0xD8]
	0x03B6F1E0 CBZ X0, 0x3B6F29C
	0x03B6F1E4 LDR X2, [X24]
	0x03B6F1E8 MOV X1, X21
	0x03B6F1EC BL 0x2DBE4B0
	0x03B6F1F0 TBNZ X0, 0x0, 0x3B6F1AC
	0x03B6F1F4 CBZ X21, 0x3B6F2A4
	0x03B6F1F8 LDR X8, [X21]
	0x03B6F1FC LDR X1, [X25]
	0x03B6F200 LDRH W9, [X8 + 0x12E]
	0x03B6F204 CBZ X9, 0x3B6F228
	0x03B6F208 LDR X10, [X8 + 0xB0]
	0x03B6F20C ADD X10, X10, 0x8
	0x03B6F210 LDUR X11, [X10 - 0x8]
	0x03B6F214 CMP X11, X1
	0x03B6F218 B.EQ 0x3B6F238
	0x03B6F21C SUBS X9, X9, 0x1
	0x03B6F220 ADD X10, X10, 0x10
	0x03B6F224 B.NE 0x3B6F210
	0x03B6F228 MOVZ W2, 0xA
	0x03B6F22C MOV X0, X21
	0x03B6F230 BL 0x1C5C788
	0x03B6F234 B 0x3B6F248
	0x03B6F238 LDR W9, [X10]
	0x03B6F23C ADD W9, W9, 0xA
	0x03B6F240 ADD X8, X8, W9, 0x4, SXTW
	0x03B6F244 ADD X0, X8, 0x138
	0x03B6F248 LDP X8, X2, [X0]
	0x03B6F24C MOV X0, X21
	0x03B6F250 MOV W1, W19
	0x03B6F254 BLR X8
	0x03B6F258 B 0x3B6F1AC
	0x03B6F25C ADRP X8, 0x5EC000
	0x03B6F260 LDR X8, [X8 + 0x670]
	0x03B6F264 ADD X0, X31, 0x20
	0x03B6F268 LDR X1, [X8]
	0x03B6F26C BL 0x2BC434C

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0x875000
	015 Move X24, 0x5ED000
	016 Move W8, [X20+2587]
	017 Move X24, [X24+3616]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {76}
	023 Move X0, 0x5EE000
	024 Move X0, [X0+1624]
	025 Call 0x1C17CF4
	026 Move X0, 0x5EE000
	027 Move X0, [X0+1632]
	028 Call 0x1C17CF4
	029 Move X0, 0x5EE000
	030 Move X0, [X0+1640]
	031 Call 0x1C17CF4
	032 Move X0, 0x5EE000
	033 Move X0, [X0+1648]
	034 Call 0x1C17CF4
	035 Move X0, 0x5EE000
	036 Move X0, [X0+1656]
	037 Call 0x1C17CF4
	038 Move X0, 0x5EE000
	039 Move X0, [X0+1664]
	040 Call 0x1C17CF4
	041 Move X0, 0x5EE000
	042 Move X0, [X0+1672]
	043 Call 0x1C17CF4
	044 Move X0, 0x5EE000
	045 Move X0, [X0+1680]
	046 Call 0x1C17CF4
	047 Move X0, 0x5EE000
	048 Move X0, [X0+1688]
	049 Call 0x1C17CF4
	050 Move X0, 0x5EE000
	051 Move X0, [X0+1696]
	052 Call 0x1C17CF4
	053 Move X0, 0x5ED000
	054 Move X0, [X0+800]
	055 Call 0x1C17CF4
	056 Move X0, 0x5ED000
	057 Move X0, [X0+2360]
	058 Call 0x1C17CF4
	059 Move X0, 0x5ED000
	060 Move X0, [X0+808]
	061 Call 0x1C17CF4
	062 Move X0, 0x5EE000
	063 Move X0, [X0+1704]
	064 Call 0x1C17CF4
	065 Move X0, 0x5EE000
	066 Move X0, [X0+1712]
	067 Call 0x1C17CF4
	068 Move X0, 0x5EE000
	069 Move X0, [X0+248]
	070 Call 0x1C17CF4
	071 Move X0, 0x5ED000
	072 Move X0, [X0+3616]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2587], W8
	076 Move X0, X19
	077 Move [X31+80], X31
	078 Move [X31+88], X31
	079 Move [X31+96], X31
	080 Move [X31+48], X31
	081 Move [X31+56], X31
	082 Move [X31+64], X31
	083 Call XRInteractionManager.ClearPriorityForSelectionMap, X0
	084 Move X0, X19
	085 Call XRInteractionManager.FlushRegistration, X0
	086 Move X0, [X24]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X24]
	092 Move X8, [X0+184]
	093 Move X1, X31
	094 Move X2, X31
	095 Move X21, [X8+16]
	096 Move X0, X21
	097 Call IntPtr.op_Inequality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {105}
	102 Move X0, X21
	103 Move X1, X31
	104 Call ProfilerUnsafeUtility.BeginSample, X0
	105 Move X8, [X19]
	106 Move X9, [X8+488]
	107 Move X2, [X8+496]
	108 Move W1, 1
	109 Move X0, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X22, X31
	112 Move X0, X21
	113 Move X1, X31
	114 Move X2, X31
	115 Call IntPtr.op_Inequality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {123}
	120 Move X0, X21
	121 Move X1, X31
	122 Call ProfilerUnsafeUtility.EndSample, X0
	123 Compare X22, 0
	124 JumpIfNotEqual {830}
	125 Move X8, [X19+160]
	126 Compare X8, 0
	127 JumpIfEqual {821}
	128 Move X0, [X8+16]
	129 Compare X0, 0
	130 JumpIfEqual {821}
	131 Move X8, 0x5EE000
	132 Move X8, [X8+1712]
	133 Move X23, 0x5EE000
	134 Move X28, 0x5EE000
	135 Move X29, 0x5ED000
	136 Move X26, 0x5EE000
	137 Move X27, 0x5EE000
	138 Move X23, [X23+1656]
	139 Move X28, [X28+1688]
	140 Move X29, [X29+2360]
	141 Move X26, [X26+1664]
	142 Move X27, [X27+1696]
	143 Move X1, [X8]
	144 Add X8, X31, 24
	145 Call List`1<Object>.GetEnumerator, X0
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Move X8, [X31+40]
	148 Move [X31+5], V0
	149 Move [X31+96], X8
	150 Move X1, [X23]
	151 Add X0, X31, 80
	152 Call Enumerator<Object>.MoveNext, X0
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {301}
	157 Move X0, [X19+160]
	158 Compare X0, 0
	159 JumpIfEqual {811}
	160 Move X8, [X0]
	161 Move X20, [X31+96]
	162 Move X9, [X8+392]
	163 Move X2, [X8+400]
	164 Move X1, X20
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {150}
	170 Move X0, [X19+224]
	171 Compare X0, 0
	172 JumpIfEqual {813}
	173 Move X2, [X28]
	174 Move X1, X20
	175 Call HashSet`1<Object>.Contains, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {150}
	180 Move X0, [X24]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {186}
	184 Call 0x1C17DFC
	185 Move X0, [X24]
	186 Move X8, [X0+184]
	187 Move X21, [X8+72]
	188 Move X0, X21
	189 Move X1, X31
	190 Move X2, X31
	191 Call IntPtr.op_Inequality, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {199}
	196 Move X0, X21
	197 Move X1, X31
	198 Call ProfilerUnsafeUtility.BeginSample, X0
	199 Move X8, [X19]
	200 Move X9, [X8+792]
	201 Move X2, [X8+800]
	202 Move X0, X19
	203 Move X1, X20
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X22, X31
	206 Move W25, 5
	207 Move X0, X21
	208 Move X1, X31
	209 Move X2, X31
	210 Call IntPtr.op_Inequality, X0, X1
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {218}
	215 Move X0, X21
	216 Move X1, X31
	217 Call ProfilerUnsafeUtility.EndSample, X0
	218 Compare X22, 0
	219 JumpIfNotEqual {815}
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Compare W25, 0
	222 JumpIfNotEqual {790}
	223 Move X0, [X24]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {229}
	227 Call 0x1C17DFC
	228 Move X0, [X24]
	229 Move X8, [X0+184]
	230 Move X21, [X8+48]
	231 Move X0, X21
	232 Move X1, X31
	233 Move X2, X31
	234 Call IntPtr.op_Inequality, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {242}
	239 Move X0, X21
	240 Move X1, X31
	241 Call ProfilerUnsafeUtility.BeginSample, X0
	242 Compare X20, 0
	243 JumpIfEqual {284}
	244 Move X8, [X20]
	245 Move X1, [X29]
	246 NotImplemented "Instruction LDRH not yet implemented."
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move W2, 20
	256 Move X0, X20
	257 Call 0x1C5D788
	258 Move W9, [X10]
	259 Add W9, W9, 20
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X20
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Move X20, X31
	267 Move W25, 3
	268 Move X0, X21
	269 Move X1, X31
	270 Move X2, X31
	271 Call IntPtr.op_Inequality, X0, X1
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfNotEqual {279}
	276 Move X0, X21
	277 Move X1, X31
	278 Call ProfilerUnsafeUtility.EndSample, X0
	279 Compare X20, 0
	280 JumpIfNotEqual {817}
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Compare W25, 0
	283 JumpIfEqual {150}
	284 Call 0x1C17F20
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move [X31+8], X1
	287 Move [X31+16], X0
	288 Move X0, [X31+16]
	289 Call 0x3EB2AD0
	290 Move X22, [X0]
	291 Call 0x3EB2AE0
	292 Move W25, W31
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X22, X0
	295 Move [X31+8], X1
	296 Move X0, X22
	297 Call 0x3EB2AD0
	298 Move X20, [X0]
	299 Call 0x3EB2AE0
	300 Move W25, W31
	301 Move X8, 0x5EE000
	302 Move X8, [X8+1640]
	303 Add X0, X31, 80
	304 Move X1, [X8]
	305 Call Enumerator<Object>.Dispose, X0
	306 Move X8, [X19+152]
	307 Compare X8, 0
	308 JumpIfEqual {821}
	309 Move X25, 0x5EE000
	310 Move X29, 0x5ED000
	311 Move X0, [X8+16]
	312 Move X25, [X25+248]
	313 Move X29, [X29+808]
	314 Compare X0, 0
	315 JumpIfEqual {821}
	316 Move X8, 0x5EE000
	317 Move X8, [X8+1704]
	318 Move X1, [X8]
	319 Add X8, X31, 24
	320 Call List`1<Object>.GetEnumerator, X0
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 Move X8, [X31+40]
	323 Move [X31+3], V0
	324 Move [X31+64], X8
	325 Move X1, [X26]
	326 Add X0, X31, 48
	327 Call Enumerator<Object>.MoveNext, X0
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {651}
	332 Move X0, [X19+152]
	333 Compare X0, 0
	334 JumpIfEqual {812}
	335 Move X8, [X0]
	336 Move X20, [X31+64]
	337 Move X9, [X8+392]
	338 Move X2, [X8+400]
	339 Move X1, X20
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {325}
	345 Move X0, [X19+216]
	346 Compare X0, 0
	347 JumpIfEqual {814}
	348 Move X2, [X27]
	349 Move X1, X20
	350 Call HashSet`1<Object>.Contains, X0, X1
	351 Move TEMP, X0
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfEqual {325}
	355 Move X0, [X24]
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {361}
	359 Call 0x1C17DFC
	360 Move X0, [X24]
	361 Move X8, [X0+184]
	362 Move X21, [X8+56]
	363 Move X0, X21
	364 Move X1, X31
	365 Move X2, X31
	366 Call IntPtr.op_Inequality, X0, X1
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {374}
	371 Move X0, X21
	372 Move X1, X31
	373 Call ProfilerUnsafeUtility.BeginSample, X0
	374 Move X2, [X19+200]
	375 Move X0, X19
	376 Move X1, X20
	377 Call XRInteractionManager.GetValidTargets, X0, X1, X2
	378 Move X22, X31
	379 Move W28, 9
	380 Move X0, X21
	381 Move X1, X31
	382 Move X2, X31
	383 Call IntPtr.op_Inequality, X0, X1
	384 Move TEMP, X0
	385 And TEMP, TEMP, 1
	386 Compare TEMP, 1
	387 JumpIfNotEqual {391}
	388 Move X0, X21
	389 Move X1, X31
	390 Call ProfilerUnsafeUtility.EndSample, X0
	391 Compare X22, 0
	392 JumpIfNotEqual {819}
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Compare W28, 0
	395 JumpIfNotEqual {783}
	396 Move X0, [X24]
	397 Move X21, [X19+200]
	398 Move X22, [X19+232]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X2, [X25]
	404 Move X0, X21
	405 Move X1, X22
	406 Call 0x22AE328, X0, X1
	407 Move X1, [X29]
	408 Move X0, X20
	409 Call 0x1C17E00
	410 Move X8, 0x5ED000
	411 Move X8, [X8+800]
	412 Move X21, X0
	413 Move X1, [X8]
	414 Move X0, X20
	415 Call 0x1C17E00
	416 Move X20, X0
	417 Compare X21, 0
	418 JumpIfEqual {460}
	419 Move X0, [X24]
	420 Move W8, [X0+224]
	421 Compare W8, 0
	422 JumpIfNotEqual {425}
	423 Call 0x1C17DFC
	424 Move X0, [X24]
	425 Move X8, [X0+184]
	426 Move X22, [X8+80]
	427 Move X0, X22
	428 Move X1, X31
	429 Move X2, X31
	430 Call IntPtr.op_Inequality, X0, X1
	431 Move TEMP, X0
	432 And TEMP, TEMP, 1
	433 Compare TEMP, 1
	434 JumpIfNotEqual {438}
	435 Move X0, X22
	436 Move X1, X31
	437 Call ProfilerUnsafeUtility.BeginSample, X0
	438 Move X2, [X19+200]
	439 Move X0, X19
	440 Move X1, X21
	441 Call XRInteractionManager.ClearInteractorSelectionInternal, X0, X1, X2
	442 Move X23, X31
	443 Move W28, 10
	444 Move X0, X22
	445 Move X1, X31
	446 Move X2, X31
	447 Call IntPtr.op_Inequality, X0, X1
	448 Move TEMP, X0
	449 And TEMP, TEMP, 1
	450 Compare TEMP, 1
	451 JumpIfNotEqual {455}
	452 Move X0, X22
	453 Move X1, X31
	454 Call ProfilerUnsafeUtility.EndSample, X0
	455 Compare X23, 0
	456 JumpIfNotEqual {822}
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Compare W28, 0
	459 JumpIfNotEqual {783}
	460 Compare X20, 0
	461 JumpIfEqual {504}
	462 Move X0, [X24]
	463 Move W8, [X0+224]
	464 Compare W8, 0
	465 JumpIfNotEqual {468}
	466 Call 0x1C17DFC
	467 Move X0, [X24]
	468 Move X8, [X0+184]
	469 Move X22, [X8+88]
	470 Move X0, X22
	471 Move X1, X31
	472 Move X2, X31
	473 Call IntPtr.op_Inequality, X0, X1
	474 Move TEMP, X0
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfNotEqual {481}
	478 Move X0, X22
	479 Move X1, X31
	480 Call ProfilerUnsafeUtility.BeginSample, X0
	481 Move X2, [X19+200]
	482 Move X3, [X19+232]
	483 Move X0, X19
	484 Move X1, X20
	485 Call XRInteractionManager.ClearInteractorHoverInternal, X0, X1, X2, X3
	486 Move X23, X31
	487 Move W28, 11
	488 Move X0, X22
	489 Move X1, X31
	490 Move X2, X31
	491 Call IntPtr.op_Inequality, X0, X1
	492 Move TEMP, X0
	493 And TEMP, TEMP, 1
	494 Compare TEMP, 1
	495 JumpIfNotEqual {499}
	496 Move X0, X22
	497 Move X1, X31
	498 Call ProfilerUnsafeUtility.EndSample, X0
	499 Compare X23, 0
	500 JumpIfNotEqual {824}
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Compare W28, 0
	503 JumpIfNotEqual {783}
	504 Compare X21, 0
	505 JumpIfEqual {548}
	506 Move X0, [X24]
	507 Move W8, [X0+224]
	508 Compare W8, 0
	509 JumpIfNotEqual {512}
	510 Call 0x1C17DFC
	511 Move X0, [X24]
	512 Move X8, [X0+184]
	513 Move X22, [X8+96]
	514 Move X0, X22
	515 Move X1, X31
	516 Move X2, X31
	517 Call IntPtr.op_Inequality, X0, X1
	518 Move TEMP, X0
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfNotEqual {525}
	522 Move X0, X22
	523 Move X1, X31
	524 Call ProfilerUnsafeUtility.BeginSample, X0
	525 Move X2, [X19+200]
	526 Move X3, [X19+232]
	527 Move X0, X19
	528 Move X1, X21
	529 Call XRInteractionManager.InteractorSelectValidTargetsInternal, X0, X1, X2, X3
	530 Move X21, X31
	531 Move W28, 12
	532 Move X0, X22
	533 Move X1, X31
	534 Move X2, X31
	535 Call IntPtr.op_Inequality, X0, X1
	536 Move TEMP, X0
	537 And TEMP, TEMP, 1
	538 Compare TEMP, 1
	539 JumpIfNotEqual {543}
	540 Move X0, X22
	541 Move X1, X31
	542 Call ProfilerUnsafeUtility.EndSample, X0
	543 Compare X21, 0
	544 JumpIfNotEqual {826}
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Compare W28, 0
	547 JumpIfNotEqual {783}
	548 Compare X20, 0
	549 JumpIfEqual {325}
	550 Move X0, [X24]
	551 Move W8, [X0+224]
	552 Compare W8, 0
	553 JumpIfNotEqual {556}
	554 Call 0x1C17DFC
	555 Move X0, [X24]
	556 Move X8, [X0+184]
	557 Move X21, [X8+104]
	558 Move X0, X21
	559 Move X1, X31
	560 Move X2, X31
	561 Call IntPtr.op_Inequality, X0, X1
	562 Move TEMP, X0
	563 And TEMP, TEMP, 1
	564 Compare TEMP, 1
	565 JumpIfNotEqual {569}
	566 Move X0, X21
	567 Move X1, X31
	568 Call ProfilerUnsafeUtility.BeginSample, X0
	569 Move X2, [X19+200]
	570 Move X3, [X19+232]
	571 Move X0, X19
	572 Move X1, X20
	573 Call XRInteractionManager.InteractorHoverValidTargetsInternal, X0, X1, X2, X3
	574 Move X20, X31
	575 Move W28, 7
	576 Move X0, X21
	577 Move X1, X31
	578 Move X2, X31
	579 Call IntPtr.op_Inequality, X0, X1
	580 Move TEMP, X0
	581 And TEMP, TEMP, 1
	582 Compare TEMP, 1
	583 JumpIfNotEqual {587}
	584 Move X0, X21
	585 Move X1, X31
	586 Call ProfilerUnsafeUtility.EndSample, X0
	587 Compare X20, 0
	588 JumpIfNotEqual {828}
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Compare W28, 0
	591 JumpIfEqual {325}
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Move X23, X0
	594 Move X0, X23
	595 Call 0x3EB2AD0
	596 Move X20, [X0]
	597 Call 0x3EB2AE0
	598 Move X25, 0x5EE000
	599 Move X29, 0x5ED000
	600 Move X25, [X25+248]
	601 Move X29, [X29+808]
	602 Move W28, W31
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Move X23, X0
	605 Move [X31+8], X1
	606 Move X0, X23
	607 Call 0x3EB2AD0
	608 Move X21, [X0]
	609 Call 0x3EB2AE0
	610 Move X25, 0x5EE000
	611 Move X29, 0x5ED000
	612 Move X25, [X25+248]
	613 Move X29, [X29+808]
	614 Move W28, W31
	615 NotImplemented "Instruction CMP not yet implemented."
	616 Move [X31+8], X1
	617 Move [X31+16], X0
	618 Move X0, [X31+16]
	619 Call 0x3EB2AD0
	620 Move X23, [X0]
	621 Call 0x3EB2AE0
	622 Move X25, 0x5EE000
	623 Move X29, 0x5ED000
	624 Move X25, [X25+248]
	625 Move X29, [X29+808]
	626 Move W28, W31
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Move [X31+8], X1
	629 Move [X31+16], X0
	630 Move X0, [X31+16]
	631 Call 0x3EB2AD0
	632 Move X23, [X0]
	633 Call 0x3EB2AE0
	634 Move X25, 0x5EE000
	635 Move X29, 0x5ED000
	636 Move X25, [X25+248]
	637 Move X29, [X29+808]
	638 Move W28, W31
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X23, X0
	641 Move [X31+8], X1
	642 Move X0, X23
	643 Call 0x3EB2AD0
	644 Move X22, [X0]
	645 Call 0x3EB2AE0
	646 Move X25, 0x5EE000
	647 Move X29, 0x5ED000
	648 Move X25, [X25+248]
	649 Move X29, [X29+808]
	650 Move W28, W31
	651 Move X8, 0x5EE000
	652 Move X8, [X8+1648]
	653 Add X0, X31, 48
	654 Move X1, [X8]
	655 Call Enumerator<Object>.Dispose, X0
	656 Move X0, [X24]
	657 Move W8, [X0+224]
	658 Compare W8, 0
	659 JumpIfNotEqual {662}
	660 Call 0x1C17DFC
	661 Move X0, [X24]
	662 Move X8, [X0+184]
	663 Move X1, X31
	664 Move X2, X31
	665 Move X21, [X8+24]
	666 Move X0, X21
	667 Call IntPtr.op_Inequality, X0, X1
	668 Move TEMP, X0
	669 And TEMP, TEMP, 1
	670 Compare TEMP, 1
	671 JumpIfNotEqual {675}
	672 Move X0, X21
	673 Move X1, X31
	674 Call ProfilerUnsafeUtility.BeginSample, X0
	675 Move X8, [X19]
	676 Move X9, [X8+536]
	677 Move X2, [X8+544]
	678 Move W1, 1
	679 Move X0, X19
	680 NotImplemented "Instruction BLR not yet implemented."
	681 Move X22, X31
	682 Move W20, 14
	683 Move X0, X21
	684 Move X1, X31
	685 Move X2, X31
	686 Call IntPtr.op_Inequality, X0, X1
	687 Move TEMP, X0
	688 And TEMP, TEMP, 1
	689 Compare TEMP, 1
	690 JumpIfNotEqual {694}
	691 Move X0, X21
	692 Move X1, X31
	693 Call ProfilerUnsafeUtility.EndSample, X0
	694 Compare X22, 0
	695 JumpIfNotEqual {830}
	696 NotImplemented "Instruction CMP not yet implemented."
	697 Compare W20, 0
	698 JumpIfNotEqual {797}
	699 Move X0, [X24]
	700 Move W8, [X0+224]
	701 Compare W8, 0
	702 JumpIfNotEqual {705}
	703 Call 0x1C17DFC
	704 Move X0, [X24]
	705 Move X8, [X0+184]
	706 Move X1, X31
	707 Move X2, X31
	708 Move X21, [X8+32]
	709 Move X0, X21
	710 Call IntPtr.op_Inequality, X0, X1
	711 Move TEMP, X0
	712 And TEMP, TEMP, 1
	713 Compare TEMP, 1
	714 JumpIfNotEqual {718}
	715 Move X0, X21
	716 Move X1, X31
	717 Call ProfilerUnsafeUtility.BeginSample, X0
	718 Move X8, [X19]
	719 Move X9, [X8+504]
	720 Move X2, [X8+512]
	721 Move W1, 1
	722 Move X0, X19
	723 NotImplemented "Instruction BLR not yet implemented."
	724 Move X22, X31
	725 Move W20, 15
	726 Move X0, X21
	727 Move X1, X31
	728 Move X2, X31
	729 Call IntPtr.op_Inequality, X0, X1
	730 Move TEMP, X0
	731 And TEMP, TEMP, 1
	732 Compare TEMP, 1
	733 JumpIfNotEqual {737}
	734 Move X0, X21
	735 Move X1, X31
	736 Call ProfilerUnsafeUtility.EndSample, X0
	737 Compare X22, 0
	738 JumpIfNotEqual {830}
	739 NotImplemented "Instruction CMP not yet implemented."
	740 Compare W20, 0
	741 JumpIfNotEqual {797}
	742 Move X0, [X24]
	743 Move W8, [X0+224]
	744 Compare W8, 0
	745 JumpIfNotEqual {748}
	746 Call 0x1C17DFC
	747 Move X0, [X24]
	748 Move X8, [X0+184]
	749 Move X1, X31
	750 Move X2, X31
	751 Move X21, [X8+40]
	752 Move X0, X21
	753 Call IntPtr.op_Inequality, X0, X1
	754 Move TEMP, X0
	755 And TEMP, TEMP, 1
	756 Compare TEMP, 1
	757 JumpIfNotEqual {761}
	758 Move X0, X21
	759 Move X1, X31
	760 Call ProfilerUnsafeUtility.BeginSample, X0
	761 Move X8, [X19]
	762 Move X9, [X8+520]
	763 Move X2, [X8+528]
	764 Move W1, 1
	765 Move X0, X19
	766 NotImplemented "Instruction BLR not yet implemented."
	767 Move X19, X31
	768 Move X0, X21
	769 Move X1, X31
	770 Move X2, X31
	771 Call IntPtr.op_Inequality, X0, X1
	772 Move TEMP, X0
	773 And TEMP, TEMP, 1
	774 Compare TEMP, 1
	775 JumpIfNotEqual {779}
	776 Move X0, X21
	777 Move X1, X31
	778 Call ProfilerUnsafeUtility.EndSample, X0
	779 Compare X19, 0
	780 JumpIfEqual {797}
	781 Move X0, X19
	782 Call 0x1C17F18
	783 Move X8, 0x5EE000
	784 Move X8, [X8+1648]
	785 Add X0, X31, 48
	786 Move X1, [X8]
	787 Call Enumerator<Object>.Dispose, X0
	788 Compare W28, 0
	789 JumpIfNotEqual {797}
	790 Move X8, 0x5EE000
	791 Move X8, [X8+1640]
	792 Add X0, X31, 80
	793 Move X1, [X8]
	794 Call Enumerator<Object>.Dispose, X0
	795 Compare W25, 0
	796 JumpIfEqual {306}
	797 Move X20, [X31+192]
	798 Move X19, [X31+200]
	799 Move X22, [X31+176]
	800 Move X21, [X31+184]
	801 Move X24, [X31+160]
	802 Move X23, [X31+168]
	803 Move X26, [X31+144]
	804 Move X25, [X31+152]
	805 Move X28, [X31+128]
	806 Move X27, [X31+136]
	807 Move X29, [X31+112]
	808 Move X30, [X31+120]
	809 Add X31, X31, 208
	810 Return 
	811 Call 0x1C17F20
	812 Call 0x1C17F20
	813 Call 0x1C17F20
	814 Call 0x1C17F20
	815 Move X0, X22
	816 Call 0x1C17F18
	817 Move X0, X20
	818 Call 0x1C17F18
	819 Move X0, X22
	820 Call 0x1C17F18
	821 Call 0x1C17F20
	822 Move X0, X23
	823 Call 0x1C17F18
	824 Move X0, X23
	825 Call 0x1C17F18
	826 Move X0, X21
	827 Call 0x1C17F18
	828 Move X0, X20
	829 Call 0x1C17F18
	830 Move X0, X22
	831 Call 0x1C17F18
	832 Move X20, X31
	833 Move X0, X21
	834 Move X1, X31
	835 Move X2, X31
	836 Call IntPtr.op_Inequality, X0, X1
	837 Move TEMP, X0
	838 And TEMP, TEMP, 1
	839 Compare TEMP, 1
	840 JumpIfNotEqual {844}
	841 Move X0, X21
	842 Move X1, X31
	843 Call ProfilerUnsafeUtility.EndSample, X0
	844 Move X1, [X31+8]
	845 Move X0, X22
	846 Compare X20, 0
	847 JumpIfEqual {1090}
	848 Move X0, X20
	849 Call 0x1C17F18
	850 Move X22, X31
	851 Move X0, X21
	852 Move X1, X31
	853 Move X2, X31
	854 Call IntPtr.op_Inequality, X0, X1
	855 Move TEMP, X0
	856 And TEMP, TEMP, 1
	857 Compare TEMP, 1
	858 JumpIfNotEqual {862}
	859 Move X0, X21
	860 Move X1, X31
	861 Call ProfilerUnsafeUtility.EndSample, X0
	862 Move X1, [X31+8]
	863 Move X0, [X31+16]
	864 Compare X22, 0
	865 JumpIfEqual {1090}
	866 Move X0, X22
	867 Call 0x1C17F18
	868 Move X22, X31
	869 Move X0, X21
	870 Move X1, X31
	871 Move X2, X31
	872 Call IntPtr.op_Inequality, X0, X1
	873 Move TEMP, X0
	874 And TEMP, TEMP, 1
	875 Compare TEMP, 1
	876 JumpIfNotEqual {880}
	877 Move X0, X21
	878 Move X1, X31
	879 Call ProfilerUnsafeUtility.EndSample, X0
	880 Move X1, [X31+8]
	881 Move X0, X23
	882 Compare X22, 0
	883 JumpIfEqual {1067}
	884 Move X0, X22
	885 Call 0x1C17F18
	886 Move X23, X31
	887 Move X0, X22
	888 Move X1, X31
	889 Move X2, X31
	890 Call IntPtr.op_Inequality, X0, X1
	891 Move TEMP, X0
	892 And TEMP, TEMP, 1
	893 Compare TEMP, 1
	894 JumpIfNotEqual {898}
	895 Move X0, X22
	896 Move X1, X31
	897 Call ProfilerUnsafeUtility.EndSample, X0
	898 Move X1, [X31+8]
	899 Move X0, [X31+16]
	900 Compare X23, 0
	901 JumpIfEqual {1067}
	902 Move X0, X23
	903 Call 0x1C17F18
	904 Move X23, X31
	905 Move X0, X22
	906 Move X1, X31
	907 Move X2, X31
	908 Call IntPtr.op_Inequality, X0, X1
	909 Move TEMP, X0
	910 And TEMP, TEMP, 1
	911 Compare TEMP, 1
	912 JumpIfNotEqual {916}
	913 Move X0, X22
	914 Move X1, X31
	915 Call ProfilerUnsafeUtility.EndSample, X0
	916 Move X1, [X31+8]
	917 Move X0, [X31+16]
	918 Compare X23, 0
	919 JumpIfEqual {1067}
	920 Move X0, X23
	921 Call 0x1C17F18
	922 Move X21, X31
	923 Move X0, X22
	924 Move X1, X31
	925 Move X2, X31
	926 Call IntPtr.op_Inequality, X0, X1
	927 Move TEMP, X0
	928 And TEMP, TEMP, 1
	929 Compare TEMP, 1
	930 JumpIfNotEqual {934}
	931 Move X0, X22
	932 Move X1, X31
	933 Call ProfilerUnsafeUtility.EndSample, X0
	934 Move X1, [X31+8]
	935 Move X0, X23
	936 Compare X21, 0
	937 JumpIfEqual {1067}
	938 Move X0, X21
	939 Call 0x1C17F18
	940 Move X22, X1
	941 Move X20, X31
	942 Move X0, X21
	943 Move X1, X31
	944 Move X2, X31
	945 Call IntPtr.op_Inequality, X0, X1
	946 Move TEMP, X0
	947 And TEMP, TEMP, 1
	948 Compare TEMP, 1
	949 JumpIfNotEqual {953}
	950 Move X0, X21
	951 Move X1, X31
	952 Call ProfilerUnsafeUtility.EndSample, X0
	953 Move X0, X23
	954 Move X1, X22
	955 Compare X20, 0
	956 JumpIfEqual {1067}
	957 Move X0, X20
	958 Call 0x1C17F18
	959 Move X22, X1
	960 Move X23, X0
	961 Move X23, X0
	962 Move [X31+8], X1
	963 Move [X31+8], X1
	964 Move [X31+16], X0
	965 Move [X31+8], X1
	966 Move [X31+16], X0
	967 Move X23, X0
	968 Move [X31+8], X1
	969 Move X22, X0
	970 Move [X31+8], X1
	971 Move [X31+8], X1
	972 Move [X31+16], X0
	973 NotImplemented "Instruction CMP not yet implemented."
	974 Move X20, X0
	975 Move X0, X20
	976 Call 0x3EB2AD0
	977 Move X19, [X0]
	978 Call 0x3EB2AE0
	979 Move X19, X31
	980 Move X20, X0
	981 Move X0, X21
	982 Move X1, X31
	983 Move X2, X31
	984 Call IntPtr.op_Inequality, X0, X1
	985 Move TEMP, X0
	986 And TEMP, TEMP, 1
	987 Compare TEMP, 1
	988 JumpIfNotEqual {992}
	989 Move X0, X21
	990 Move X1, X31
	991 Call ProfilerUnsafeUtility.EndSample, X0
	992 Compare X19, 0
	993 JumpIfEqual {1113}
	994 Move X0, X19
	995 Call 0x1C17F18
	996 NotImplemented "Instruction CMP not yet implemented."
	997 Move X20, X0
	998 Move X0, X20
	999 Call 0x3EB2AD0
	1000 Move X22, [X0]
	1001 Call 0x3EB2AE0
	1002 Move W20, W31
	1003 Move X22, X31
	1004 Move X20, X0
	1005 Move X0, X21
	1006 Move X1, X31
	1007 Move X2, X31
	1008 Call IntPtr.op_Inequality, X0, X1
	1009 Move TEMP, X0
	1010 And TEMP, TEMP, 1
	1011 Compare TEMP, 1
	1012 JumpIfNotEqual {1016}
	1013 Move X0, X21
	1014 Move X1, X31
	1015 Call ProfilerUnsafeUtility.EndSample, X0
	1016 Compare X22, 0
	1017 JumpIfEqual {1113}
	1018 Move X0, X22
	1019 Call 0x1C17F18
	1020 NotImplemented "Instruction CMP not yet implemented."
	1021 Move X20, X0
	1022 Move X0, X20
	1023 Call 0x3EB2AD0
	1024 Move X22, [X0]
	1025 Call 0x3EB2AE0
	1026 Move W20, W31
	1027 Move X22, X31
	1028 Move X20, X0
	1029 Move X0, X21
	1030 Move X1, X31
	1031 Move X2, X31
	1032 Call IntPtr.op_Inequality, X0, X1
	1033 Move TEMP, X0
	1034 And TEMP, TEMP, 1
	1035 Compare TEMP, 1
	1036 JumpIfNotEqual {1040}
	1037 Move X0, X21
	1038 Move X1, X31
	1039 Call ProfilerUnsafeUtility.EndSample, X0
	1040 Compare X22, 0
	1041 JumpIfEqual {1113}
	1042 Move X0, X22
	1043 Call 0x1C17F18
	1044 NotImplemented "Instruction CMP not yet implemented."
	1045 Move X20, X0
	1046 Move X0, X20
	1047 Call 0x3EB2AD0
	1048 Move X22, [X0]
	1049 Call 0x3EB2AE0
	1050 Move X22, X31
	1051 Move X20, X0
	1052 Move X0, X21
	1053 Move X1, X31
	1054 Move X2, X31
	1055 Call IntPtr.op_Inequality, X0, X1
	1056 Move TEMP, X0
	1057 And TEMP, TEMP, 1
	1058 Compare TEMP, 1
	1059 JumpIfNotEqual {1063}
	1060 Move X0, X21
	1061 Move X1, X31
	1062 Call ProfilerUnsafeUtility.EndSample, X0
	1063 Compare X22, 0
	1064 JumpIfEqual {1113}
	1065 Move X0, X22
	1066 Call 0x1C17F18
	1067 NotImplemented "Instruction CMP not yet implemented."
	1068 Call 0x3EB2AD0
	1069 Move X21, [X0]
	1070 Call 0x3EB2AE0
	1071 Move X8, 0x5ED000
	1072 Move X8, [X8+1648]
	1073 Add X0, X31, 48
	1074 Move X1, [X8]
	1075 Call Enumerator<Object>.Dispose, X0
	1076 Compare X21, 0
	1077 JumpIfEqual {656}
	1078 Move X20, X0
	1079 Move X21, X31
	1080 Move X20, X0
	1081 Move X8, 0x5ED000
	1082 Move X8, [X8+1648]
	1083 Move X1, [X8]
	1084 Add X0, X31, 48
	1085 Call Enumerator<Object>.Dispose, X0
	1086 Compare X21, 0
	1087 JumpIfEqual {1113}
	1088 Move X0, X21
	1089 Call 0x1C17F18
	1090 NotImplemented "Instruction CMP not yet implemented."
	1091 Call 0x3EB2AD0
	1092 Move X21, [X0]
	1093 Call 0x3EB2AE0
	1094 Move X8, 0x5ED000
	1095 Move X8, [X8+1640]
	1096 Add X0, X31, 80
	1097 Move X1, [X8]
	1098 Call Enumerator<Object>.Dispose, X0
	1099 Compare X21, 0
	1100 JumpIfEqual {306}
	1101 Move X0, X21
	1102 Call 0x1C17F18
	1103 Move X20, X0
	1104 Move X21, X31
	1105 Move X20, X0
	1106 Move X8, 0x5ED000
	1107 Move X8, [X8+1640]
	1108 Move X1, [X8]
	1109 Add X0, X31, 80
	1110 Call Enumerator<Object>.Dispose, X0
	1111 Compare X21, 0
	1112 JumpIfNotEqual {1115}
	1113 Move X0, X20
	1114 Call 0x1D2D690
	1115 Move X0, X21
	1116 Call 0x1C17F18
	1117 Call 0x1991590

Method: System.Void LateUpdate()

Disassembly:
	0x03B6F90C B.NE 0x3B6F8F8
	0x03B6F910 MOVZ W2, 0xA
	0x03B6F914 MOV X0, X21
	0x03B6F918 BL 0x1C5C788
	0x03B6F91C B 0x3B6F930
	0x03B6F920 LDR W9, [X10]
	0x03B6F924 ADD W9, W9, 0xA
	0x03B6F928 ADD X8, X8, W9, 0x4, SXTW
	0x03B6F92C ADD X0, X8, 0x138
	0x03B6F930 LDP X8, X2, [X0]
	0x03B6F934 MOV X0, X21
	0x03B6F938 MOV W1, W19
	0x03B6F93C BLR X8
	0x03B6F940 B 0x3B6F8AC
	0x03B6F944 LDR X1, [X22]
	0x03B6F948 ADD X0, X31, 0x20
	0x03B6F94C BL 0x2BC434C
	0x03B6F950 LDP X20, X19, [X31 + 0x70]
	0x03B6F954 LDP X22, X21, [X31 + 0x60]
	0x03B6F958 LDP X24, X23, [X31 + 0x50]
	0x03B6F95C LDR X30, [X31 + 0x40]
	0x03B6F960 ADD X31, X31, 0x80
	0x03B6F964 RET
	0x03B6F968 BL 0x1C16F20
	0x03B6F96C BL 0x1C16F20
	0x03B6F970 BL 0x1C16F20
	0x03B6F974 B 0x3B6F984
	0x03B6F978 B 0x3B6F984
	0x03B6F97C B 0x3B6F984
	0x03B6F980 B 0x3B6F984
	0x03B6F984 MOV X19, X0
	0x03B6F988 CMP W1, 0x1
	0x03B6F98C B.NE 0x3B6F9B8
	0x03B6F990 MOV X0, X19
	0x03B6F994 BL 0x3EB1AD0
	0x03B6F998 LDR X20, [X0]
	0x03B6F99C BL 0x3EB1AE0
	0x03B6F9A0 LDR X1, [X22]
	0x03B6F9A4 ADD X0, X31, 0x20
	0x03B6F9A8 BL 0x2BC434C
	0x03B6F9AC CBZ X20, 0x3B6F950
	0x03B6F9B0 MOV X0, X20
	0x03B6F9B4 BL 0x1C16F18
	0x03B6F9B8 MOV X20, X31
	0x03B6F9BC B 0x3B6F9C4
	0x03B6F9C0 MOV X19, X0
	0x03B6F9C4 LDR X1, [X22]
	0x03B6F9C8 ADD X0, X31, 0x20
	0x03B6F9CC BL 0x2BC434C
	0x03B6F9D0 CBNZ X20, 0x3B6F9DC
	0x03B6F9D4 MOV X0, X19
	0x03B6F9D8 BL 0x1D2C690
	0x03B6F9DC MOV X0, X20
	0x03B6F9E0 BL 0x1C16F18
	0x03B6F9E4 BL 0x1990590
	0x03B6F9E8 SUB X31, X31, 0xC0
	0x03B6F9EC STR X30, [X31 + 0x60]
	0x03B6F9F0 STP X28, X27, [X31 + 0x70]
	0x03B6F9F4 STP X26, X25, [X31 + 0x80]
	0x03B6F9F8 STP X24, X23, [X31 + 0x90]
	0x03B6F9FC STP X22, X21, [X31 + 0xA0]
	0x03B6FA00 STP X20, X19, [X31 + 0xB0]
	0x03B6FA04 ADRP X21, 0x873000
	0x03B6FA08 LDRB W8, [X21 + 0xA22]
	0x03B6FA0C MOV W19, W1
	0x03B6FA10 MOV X20, X0
	0x03B6FA14 TBNZ X8, 0x0, 0x3B6FAB0
	0x03B6FA18 ADRP X0, 0x5EC000
	0x03B6FA1C LDR X0, [X0 + 0x658]
	0x03B6FA20 BL 0x1C16CF4
	0x03B6FA24 ADRP X0, 0x5EC000
	0x03B6FA28 LDR X0, [X0 + 0x6C8]
	0x03B6FA2C BL 0x1C16CF4
	0x03B6FA30 ADRP X0, 0x5EC000
	0x03B6FA34 LDR X0, [X0 + 0x670]
	0x03B6FA38 BL 0x1C16CF4
	0x03B6FA3C ADRP X0, 0x5EC000
	0x03B6FA40 LDR X0, [X0 + 0xD8]
	0x03B6FA44 BL 0x1C16CF4
	0x03B6FA48 ADRP X0, 0x5EC000
	0x03B6FA4C LDR X0, [X0 + 0x680]
	0x03B6FA50 BL 0x1C16CF4
	0x03B6FA54 ADRP X0, 0x5EC000
	0x03B6FA58 LDR X0, [X0 + 0xE0]
	0x03B6FA5C BL 0x1C16CF4
	0x03B6FA60 ADRP X0, 0x5EC000
	0x03B6FA64 LDR X0, [X0 + 0xE8]
	0x03B6FA68 BL 0x1C16CF4
	0x03B6FA6C ADRP X0, 0x5EC000
	0x03B6FA70 LDR X0, [X0 + 0x690]
	0x03B6FA74 BL 0x1C16CF4
	0x03B6FA78 ADRP X0, 0x5EB000
	0x03B6FA7C LDR X0, [X0 + 0xBD8]
	0x03B6FA80 BL 0x1C16CF4
	0x03B6FA84 ADRP X0, 0x5EC000
	0x03B6FA88 LDR X0, [X0 + 0x6D0]
	0x03B6FA8C BL 0x1C16CF4
	0x03B6FA90 ADRP X0, 0x5EC000
	0x03B6FA94 LDR X0, [X0 + 0x6A8]
	0x03B6FA98 BL 0x1C16CF4
	0x03B6FA9C ADRP X0, 0x5EC000
	0x03B6FAA0 LDR X0, [X0 + 0xF0]
	0x03B6FAA4 BL 0x1C16CF4
	0x03B6FAA8 MOVZ W8, 0x1
	0x03B6FAAC STRB W8, [X21 + 0xA22]
	0x03B6FAB0 STP X31, X31, [X31 + 0x40]
	0x03B6FAB4 STR X31, [X31 + 0x50]
	0x03B6FAB8 STP X31, X31, [X31 + 0x20]
	0x03B6FABC STR X31, [X31 + 0x30]
	0x03B6FAC0 LDR X8, [X20 + 0xA8]
	0x03B6FAC4 CBZ X8, 0x3B6FCE8
	0x03B6FAC8 LDR X0, [X8 + 0x10]
	0x03B6FACC CBZ X0, 0x3B6FCE8
	0x03B6FAD0 ADRP X8, 0x5EC000
	0x03B6FAD4 LDR X8, [X8 + 0xF0]
	0x03B6FAD8 ADRP X22, 0x5EC000
	0x03B6FADC ADRP X28, 0x5EB000
	0x03B6FAE0 ADRP X26, 0x5EC000
	0x03B6FAE4 ADRP X24, 0x5EC000
	0x03B6FAE8 LDR X22, [X22 + 0xE0]
	0x03B6FAEC LDR X28, [X28 + 0xBD8]
	0x03B6FAF0 LDR X26, [X26 + 0x6A8]
	0x03B6FAF4 LDR X24, [X24 + 0x680]
	0x03B6FAF8 LDR X1, [X8]
	0x03B6FAFC ADRP X25, 0x5EC000
	0x03B6FB00 ADRP X23, 0x5EC000
	0x03B6FB04 ADRP X27, 0x5EC000
	0x03B6FB08 LDR X25, [X25 + 0x6D0]
	0x03B6FB0C LDR X23, [X23 + 0x670]
	0x03B6FB10 LDR X27, [X27 + 0xD8]
	0x03B6FB14 ADD X8, X31, 0x8
	0x03B6FB18 BL 0x301CB58
	0x03B6FB1C LDUR V0, [X31 + 0x8]
	0x03B6FB20 LDR X8, [X31 + 0x18]
	0x03B6FB24 STR V0, [X31 + 0x4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x874000
	007 Move X22, 0x5EC000
	008 Move W8, [X20+2588]
	009 Move X22, [X22+3616]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5EC000
	016 Move X0, [X0+3616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2588], W8
	020 Move X0, X19
	021 Call XRInteractionManager.FlushRegistration, X0
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X22]
	028 Move X8, [X0+184]
	029 Move X1, X31
	030 Move X2, X31
	031 Move X20, [X8+32]
	032 Move X0, X20
	033 Call IntPtr.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {41}
	038 Move X0, X20
	039 Move X1, X31
	040 Call ProfilerUnsafeUtility.BeginSample, X0
	041 Move X8, [X19]
	042 Move X9, [X8+504]
	043 Move X2, [X8+512]
	044 Move W1, 2
	045 Move X0, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X21, X31
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call IntPtr.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {59}
	056 Move X0, X20
	057 Move X1, X31
	058 Call ProfilerUnsafeUtility.EndSample, X0
	059 Compare X21, 0
	060 JumpIfNotEqual {106}
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X22]
	067 Move X8, [X0+184]
	068 Move X1, X31
	069 Move X2, X31
	070 Move X20, [X8+40]
	071 Move X0, X20
	072 Call IntPtr.op_Inequality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {80}
	077 Move X0, X20
	078 Move X1, X31
	079 Call ProfilerUnsafeUtility.BeginSample, X0
	080 Move X8, [X19]
	081 Move X9, [X8+520]
	082 Move X2, [X8+528]
	083 Move W1, 2
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X19, X31
	087 Move X0, X20
	088 Move X1, X31
	089 Move X2, X31
	090 Call IntPtr.op_Inequality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {98}
	095 Move X0, X20
	096 Move X1, X31
	097 Call ProfilerUnsafeUtility.EndSample, X0
	098 Compare X19, 0
	099 JumpIfNotEqual {108}
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return 
	106 Move X0, X21
	107 Call 0x1C17F18
	108 Move X0, X19
	109 Call 0x1C17F18
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X21, X0
	112 Move X0, X21
	113 Call 0x3EB2AD0
	114 Move X19, [X0]
	115 Call 0x3EB2AE0
	116 Move X19, X31
	117 Move X21, X0
	118 Move X0, X20
	119 Move X1, X31
	120 Move X2, X31
	121 Call IntPtr.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {129}
	126 Move X0, X20
	127 Move X1, X31
	128 Call ProfilerUnsafeUtility.EndSample, X0
	129 Compare X19, 0
	130 JumpIfEqual {157}
	131 Move X0, X19
	132 Call 0x1C17F18
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X21, X0
	135 Move X0, X21
	136 Call 0x3EB2AD0
	137 Move X8, [X0]
	138 Move [X31+8], X8
	139 Call 0x3EB2AE0
	140 Move X21, [X31+8]
	141 Move [X31+8], X31
	142 Move X21, X0
	143 Move X0, X20
	144 Move X1, X31
	145 Move X2, X31
	146 Call IntPtr.op_Inequality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {154}
	151 Move X0, X20
	152 Move X1, X31
	153 Call ProfilerUnsafeUtility.EndSample, X0
	154 Move X8, [X31+8]
	155 Compare X8, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X21
	158 Call 0x1D2D690
	159 Move X0, [X31+8]
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void FixedUpdate()

Disassembly:
	0x03B6FB28 STR X8, [X31 + 0x50]
	0x03B6FB2C LDR X1, [X22]
	0x03B6FB30 ADD X0, X31, 0x40
	0x03B6FB34 BL 0x2BC4350
	0x03B6FB38 TBZ X0, 0x0, 0x3B6FBD4
	0x03B6FB3C LDR X0, [X20 + 0xA8]
	0x03B6FB40 CBZ X0, 0x3B6FCE0
	0x03B6FB44 LDR X8, [X0]
	0x03B6FB48 LDR X21, [X31 + 0x50]
	0x03B6FB4C LDP X9, X2, [X8 + 0x188]
	0x03B6FB50 MOV X1, X21
	0x03B6FB54 BLR X9
	0x03B6FB58 TBZ X0, 0x0, 0x3B6FB2C
	0x03B6FB5C LDR X1, [X28]
	0x03B6FB60 MOV X0, X21
	0x03B6FB64 BL 0x1C16E00
	0x03B6FB68 MOV X21, X0
	0x03B6FB6C CBZ X0, 0x3B6FB2C
	0x03B6FB70 LDR X8, [X21]
	0x03B6FB74 LDR X1, [X28]
	0x03B6FB78 LDRH W9, [X8 + 0x12E]
	0x03B6FB7C CBZ X9, 0x3B6FBA0
	0x03B6FB80 LDR X10, [X8 + 0xB0]
	0x03B6FB84 ADD X10, X10, 0x8
	0x03B6FB88 LDUR X11, [X10 - 0x8]
	0x03B6FB8C CMP X11, X1
	0x03B6FB90 B.EQ 0x3B6FBB0
	0x03B6FB94 SUBS X9, X9, 0x1
	0x03B6FB98 ADD X10, X10, 0x10
	0x03B6FB9C B.NE 0x3B6FB88
	0x03B6FBA0 MOVZ W2, 0x2
	0x03B6FBA4 MOV X0, X21
	0x03B6FBA8 BL 0x1C5C788
	0x03B6FBAC B 0x3B6FBC0
	0x03B6FBB0 LDR W9, [X10]
	0x03B6FBB4 ADD W9, W9, 0x2
	0x03B6FBB8 ADD X8, X8, W9, 0x4, SXTW
	0x03B6FBBC ADD X0, X8, 0x138
	0x03B6FBC0 LDP X8, X2, [X0]
	0x03B6FBC4 MOV X0, X21
	0x03B6FBC8 MOV W1, W19
	0x03B6FBCC BLR X8
	0x03B6FBD0 B 0x3B6FB2C
	0x03B6FBD4 LDR X1, [X27]
	0x03B6FBD8 ADD X0, X31, 0x40
	0x03B6FBDC BL 0x2BC434C
	0x03B6FBE0 LDR X8, [X20 + 0x98]
	0x03B6FBE4 CBZ X8, 0x3B6FCE8
	0x03B6FBE8 LDR X0, [X8 + 0x10]
	0x03B6FBEC CBZ X0, 0x3B6FCE8
	0x03B6FBF0 LDR X1, [X26]
	0x03B6FBF4 ADD X8, X31, 0x8
	0x03B6FBF8 BL 0x301CB58
	0x03B6FBFC LDUR V0, [X31 + 0x8]
	0x03B6FC00 LDR X8, [X31 + 0x18]
	0x03B6FC04 STR V0, [X31 + 0x2]
	0x03B6FC08 STR X8, [X31 + 0x30]
	0x03B6FC0C LDR X1, [X24]
	0x03B6FC10 ADD X0, X31, 0x20
	0x03B6FC14 BL 0x2BC4350
	0x03B6FC18 TBZ X0, 0x0, 0x3B6FCB4
	0x03B6FC1C LDR X0, [X20 + 0x98]
	0x03B6FC20 CBZ X0, 0x3B6FCE4
	0x03B6FC24 LDR X8, [X0]
	0x03B6FC28 LDR X21, [X31 + 0x30]
	0x03B6FC2C LDP X9, X2, [X8 + 0x188]
	0x03B6FC30 MOV X1, X21
	0x03B6FC34 BLR X9
	0x03B6FC38 TBZ X0, 0x0, 0x3B6FC0C
	0x03B6FC3C LDR X1, [X25]
	0x03B6FC40 MOV X0, X21
	0x03B6FC44 BL 0x1C16E00
	0x03B6FC48 MOV X21, X0
	0x03B6FC4C CBZ X0, 0x3B6FC0C
	0x03B6FC50 LDR X8, [X21]
	0x03B6FC54 LDR X1, [X25]
	0x03B6FC58 LDRH W9, [X8 + 0x12E]
	0x03B6FC5C CBZ X9, 0x3B6FC80
	0x03B6FC60 LDR X10, [X8 + 0xB0]
	0x03B6FC64 ADD X10, X10, 0x8
	0x03B6FC68 LDUR X11, [X10 - 0x8]
	0x03B6FC6C CMP X11, X1
	0x03B6FC70 B.EQ 0x3B6FC90
	0x03B6FC74 SUBS X9, X9, 0x1
	0x03B6FC78 ADD X10, X10, 0x10
	0x03B6FC7C B.NE 0x3B6FC68
	0x03B6FC80 MOVZ W2, 0x2
	0x03B6FC84 MOV X0, X21
	0x03B6FC88 BL 0x1C5C788
	0x03B6FC8C B 0x3B6FCA0
	0x03B6FC90 LDR W9, [X10]
	0x03B6FC94 ADD W9, W9, 0x2
	0x03B6FC98 ADD X8, X8, W9, 0x4, SXTW
	0x03B6FC9C ADD X0, X8, 0x138
	0x03B6FCA0 LDP X8, X2, [X0]
	0x03B6FCA4 MOV X0, X21
	0x03B6FCA8 MOV W1, W19
	0x03B6FCAC BLR X8
	0x03B6FCB0 B 0x3B6FC0C
	0x03B6FCB4 LDR X1, [X23]
	0x03B6FCB8 ADD X0, X31, 0x20
	0x03B6FCBC BL 0x2BC434C
	0x03B6FCC0 LDP X20, X19, [X31 + 0xB0]
	0x03B6FCC4 LDP X22, X21, [X31 + 0xA0]
	0x03B6FCC8 LDP X24, X23, [X31 + 0x90]
	0x03B6FCCC LDP X26, X25, [X31 + 0x80]
	0x03B6FCD0 LDP X28, X27, [X31 + 0x70]
	0x03B6FCD4 LDR X30, [X31 + 0x60]
	0x03B6FCD8 ADD X31, X31, 0xC0
	0x03B6FCDC RET
	0x03B6FCE0 BL 0x1C16F20
	0x03B6FCE4 BL 0x1C16F20
	0x03B6FCE8 BL 0x1C16F20
	0x03B6FCEC B 0x3B6FD0C
	0x03B6FCF0 B 0x3B6FD64
	0x03B6FCF4 B 0x3B6FD0C
	0x03B6FCF8 B 0x3B6FD64
	0x03B6FCFC B 0x3B6FD0C
	0x03B6FD00 B 0x3B6FD0C
	0x03B6FD04 B 0x3B6FD64
	0x03B6FD08 B 0x3B6FD64
	0x03B6FD0C MOV X21, X0
	0x03B6FD10 CMP W1, 0x1
	0x03B6FD14 B.NE 0x3B6FD40
	0x03B6FD18 MOV X0, X21
	0x03B6FD1C BL 0x3EB1AD0
	0x03B6FD20 LDR X19, [X0]
	0x03B6FD24 BL 0x3EB1AE0
	0x03B6FD28 LDR X1, [X23]
	0x03B6FD2C ADD X0, X31, 0x20
	0x03B6FD30 BL 0x2BC434C
	0x03B6FD34 CBZ X19, 0x3B6FCC0
	0x03B6FD38 MOV X0, X19
	0x03B6FD3C BL 0x1C16F18
	0x03B6FD40 MOV X19, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x874000
	007 Move X22, 0x5EC000
	008 Move W8, [X20+2589]
	009 Move X22, [X22+3616]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5EC000
	016 Move X0, [X0+3616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2589], W8
	020 Move X0, X19
	021 Call XRInteractionManager.FlushRegistration, X0
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X22]
	028 Move X8, [X0+184]
	029 Move X1, X31
	030 Move X2, X31
	031 Move X20, [X8+32]
	032 Move X0, X20
	033 Call IntPtr.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {41}
	038 Move X0, X20
	039 Move X1, X31
	040 Call ProfilerUnsafeUtility.BeginSample, X0
	041 Move X8, [X19]
	042 Move X9, [X8+504]
	043 Move X2, [X8+512]
	044 Move X0, X19
	045 Move W1, W31
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X21, X31
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call IntPtr.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {59}
	056 Move X0, X20
	057 Move X1, X31
	058 Call ProfilerUnsafeUtility.EndSample, X0
	059 Compare X21, 0
	060 JumpIfNotEqual {106}
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X22]
	067 Move X8, [X0+184]
	068 Move X1, X31
	069 Move X2, X31
	070 Move X20, [X8+40]
	071 Move X0, X20
	072 Call IntPtr.op_Inequality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {80}
	077 Move X0, X20
	078 Move X1, X31
	079 Call ProfilerUnsafeUtility.BeginSample, X0
	080 Move X8, [X19]
	081 Move X9, [X8+520]
	082 Move X2, [X8+528]
	083 Move X0, X19
	084 Move W1, W31
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X19, X31
	087 Move X0, X20
	088 Move X1, X31
	089 Move X2, X31
	090 Call IntPtr.op_Inequality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {98}
	095 Move X0, X20
	096 Move X1, X31
	097 Call ProfilerUnsafeUtility.EndSample, X0
	098 Compare X19, 0
	099 JumpIfNotEqual {108}
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return 
	106 Move X0, X21
	107 Call 0x1C17F18
	108 Move X0, X19
	109 Call 0x1C17F18
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X21, X0
	112 Move X0, X21
	113 Call 0x3EB2AD0
	114 Move X19, [X0]
	115 Call 0x3EB2AE0
	116 Move X19, X31
	117 Move X21, X0
	118 Move X0, X20
	119 Move X1, X31
	120 Move X2, X31
	121 Call IntPtr.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {129}
	126 Move X0, X20
	127 Move X1, X31
	128 Call ProfilerUnsafeUtility.EndSample, X0
	129 Compare X19, 0
	130 JumpIfEqual {157}
	131 Move X0, X19
	132 Call 0x1C17F18
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X21, X0
	135 Move X0, X21
	136 Call 0x3EB2AD0
	137 Move X8, [X0]
	138 Move [X31+8], X8
	139 Call 0x3EB2AE0
	140 Move X21, [X31+8]
	141 Move [X31+8], X31
	142 Move X21, X0
	143 Move X0, X20
	144 Move X1, X31
	145 Move X2, X31
	146 Call IntPtr.op_Inequality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {154}
	151 Move X0, X20
	152 Move X1, X31
	153 Call ProfilerUnsafeUtility.EndSample, X0
	154 Move X8, [X31+8]
	155 Compare X8, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X21
	158 Call 0x1D2D690
	159 Move X0, [X31+8]
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void OnBeforeRender()

Disassembly:
	0x03B6FD44 B 0x3B6FD4C
	0x03B6FD48 MOV X21, X0
	0x03B6FD4C LDR X1, [X23]
	0x03B6FD50 ADD X0, X31, 0x20
	0x03B6FD54 BL 0x2BC434C
	0x03B6FD58 CBZ X19, 0x3B6FDB4
	0x03B6FD5C MOV X0, X19
	0x03B6FD60 BL 0x1C16F18
	0x03B6FD64 MOV X21, X0
	0x03B6FD68 CMP W1, 0x1
	0x03B6FD6C B.NE 0x3B6FD98
	0x03B6FD70 MOV X0, X21
	0x03B6FD74 BL 0x3EB1AD0
	0x03B6FD78 LDR X22, [X0]
	0x03B6FD7C BL 0x3EB1AE0
	0x03B6FD80 LDR X1, [X27]
	0x03B6FD84 ADD X0, X31, 0x40
	0x03B6FD88 BL 0x2BC434C
	0x03B6FD8C CBZ X22, 0x3B6FBE0
	0x03B6FD90 MOV X0, X22
	0x03B6FD94 BL 0x1C16F18
	0x03B6FD98 MOV X22, X31
	0x03B6FD9C B 0x3B6FDA4
	0x03B6FDA0 MOV X21, X0
	0x03B6FDA4 LDR X1, [X27]
	0x03B6FDA8 ADD X0, X31, 0x40
	0x03B6FDAC BL 0x2BC434C
	0x03B6FDB0 CBNZ X22, 0x3B6FDBC
	0x03B6FDB4 MOV X0, X21
	0x03B6FDB8 BL 0x1D2C690
	0x03B6FDBC MOV X0, X22
	0x03B6FDC0 BL 0x1C16F18
	0x03B6FDC4 BL 0x1990590
	0x03B6FDC8 STR X30, [X31 - 0x30]!
	0x03B6FDCC STP X22, X21, [X31 + 0x10]
	0x03B6FDD0 STP X20, X19, [X31 + 0x20]
	0x03B6FDD4 ADRP X22, 0x873000
	0x03B6FDD8 LDRB W8, [X22 + 0xA23]
	0x03B6FDDC MOV X19, X2
	0x03B6FDE0 MOV X20, X1
	0x03B6FDE4 MOV X21, X0
	0x03B6FDE8 TBNZ X8, 0x0, 0x3B6FE00
	0x03B6FDEC ADRP X0, 0x5EB000
	0x03B6FDF0 LDR X0, [X0 + 0x320]
	0x03B6FDF4 BL 0x1C16CF4
	0x03B6FDF8 MOVZ W8, 0x1
	0x03B6FDFC STRB W8, [X22 + 0xA23]
	0x03B6FE00 CBZ X20, 0x3B6FE9C
	0x03B6FE04 ADRP X10, 0x5EB000
	0x03B6FE08 LDR X8, [X20]
	0x03B6FE0C LDR X10, [X10 + 0x320]
	0x03B6FE10 LDRH W9, [X8 + 0x12E]
	0x03B6FE14 LDR X1, [X10]
	0x03B6FE18 CBZ X9, 0x3B6FE3C
	0x03B6FE1C LDR X10, [X8 + 0xB0]
	0x03B6FE20 ADD X10, X10, 0x8
	0x03B6FE24 LDUR X11, [X10 - 0x8]
	0x03B6FE28 CMP X11, X1
	0x03B6FE2C B.EQ 0x3B6FE4C
	0x03B6FE30 SUBS X9, X9, 0x1
	0x03B6FE34 ADD X10, X10, 0x10
	0x03B6FE38 B.NE 0x3B6FE24
	0x03B6FE3C MOVZ W2, 0x4
	0x03B6FE40 MOV X0, X20
	0x03B6FE44 BL 0x1C5C788
	0x03B6FE48 B 0x3B6FE5C
	0x03B6FE4C LDR W9, [X10]
	0x03B6FE50 ADD W9, W9, 0x4
	0x03B6FE54 ADD X8, X8, W9, 0x4, SXTW
	0x03B6FE58 ADD X0, X8, 0x138
	0x03B6FE5C LDP X8, X1, [X0]
	0x03B6FE60 MOV X0, X20
	0x03B6FE64 BLR X8
	0x03B6FE68 TBZ X0, 0x0, 0x3B6FE88
	0x03B6FE6C MOV X0, X21
	0x03B6FE70 MOV X1, X20
	0x03B6FE74 MOV X2, X19
	0x03B6FE78 LDP X20, X19, [X31 + 0x20]
	0x03B6FE7C LDP X22, X21, [X31 + 0x10]
	0x03B6FE80 LDR X30, [X31], #0x30
	0x03B6FE84 B 0x3B6FEA0
	0x03B6FE88 LDP X20, X19, [X31 + 0x20]
	0x03B6FE8C LDP X22, X21, [X31 + 0x10]
	0x03B6FE90 MOV W0, W31
	0x03B6FE94 LDR X30, [X31], #0x30
	0x03B6FE98 RET
	0x03B6FE9C BL 0x1C16F20
	0x03B6FEA0 STP X30, X23, [X31 - 0x30]!
	0x03B6FEA4 STP X22, X21, [X31 + 0x10]
	0x03B6FEA8 STP X20, X19, [X31 + 0x20]
	0x03B6FEAC ADRP X22, 0x873000
	0x03B6FEB0 ADRP X23, 0x5EB000
	0x03B6FEB4 LDRB W8, [X22 + 0xA24]
	0x03B6FEB8 LDR X23, [X23 + 0xE20]
	0x03B6FEBC MOV X20, X2
	0x03B6FEC0 MOV X19, X1
	0x03B6FEC4 MOV X21, X0
	0x03B6FEC8 TBNZ X8, 0x0, 0x3B6FEF8
	0x03B6FECC ADRP X0, 0x5EB000
	0x03B6FED0 LDR X0, [X0 + 0x148]
	0x03B6FED4 BL 0x1C16CF4
	0x03B6FED8 ADRP X0, 0x5EB000
	0x03B6FEDC LDR X0, [X0 + 0x320]
	0x03B6FEE0 BL 0x1C16CF4
	0x03B6FEE4 ADRP X0, 0x5EB000
	0x03B6FEE8 LDR X0, [X0 + 0xE20]
	0x03B6FEEC BL 0x1C16CF4
	0x03B6FEF0 MOVZ W8, 0x1
	0x03B6FEF4 STRB W8, [X22 + 0xA24]
	0x03B6FEF8 LDR X0, [X23]
	0x03B6FEFC LDR W8, [X0 + 0xE0]
	0x03B6FF00 CBNZ W8, 0x3B6FF08
	0x03B6FF04 BL 0x1C16DFC
	0x03B6FF08 MOV X0, X19
	0x03B6FF0C MOV X1, X20
	0x03B6FF10 BL 0x3B70030
	0x03B6FF14 TBZ X0, 0x0, 0x3B6FFEC
	0x03B6FF18 LDR X0, [X21 + 0x68]
	0x03B6FF1C MOV X1, X19
	0x03B6FF20 MOV X2, X20
	0x03B6FF24 MOV X3, X31
	0x03B6FF28 BL 0x3B8DC80
	0x03B6FF2C TBZ X0, 0x0, 0x3B6FFEC
	0x03B6FF30 CBZ X19, 0x3B7002C
	0x03B6FF34 ADRP X10, 0x5EB000
	0x03B6FF38 LDR X8, [X19]
	0x03B6FF3C LDR X10, [X10 + 0x320]
	0x03B6FF40 LDRH W9, [X8 + 0x12E]
	0x03B6FF44 LDR X1, [X10]
	0x03B6FF48 CBZ X9, 0x3B6FF6C
	0x03B6FF4C LDR X10, [X8 + 0xB0]
	0x03B6FF50 ADD X10, X10, 0x8
	0x03B6FF54 LDUR X11, [X10 - 0x8]
	0x03B6FF58 CMP X11, X1
	0x03B6FF5C B.EQ 0x3B6FF7C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x874000
	007 Move X22, 0x5EC000
	008 Move W8, [X20+2590]
	009 Move X22, [X22+3616]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5EC000
	016 Move X0, [X0+3616]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2590], W8
	020 Move X0, X19
	021 Call XRInteractionManager.FlushRegistration, X0
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X22]
	028 Move X8, [X0+184]
	029 Move X1, X31
	030 Move X2, X31
	031 Move X20, [X8+32]
	032 Move X0, X20
	033 Call IntPtr.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {41}
	038 Move X0, X20
	039 Move X1, X31
	040 Call ProfilerUnsafeUtility.BeginSample, X0
	041 Move X8, [X19]
	042 Move X9, [X8+504]
	043 Move X2, [X8+512]
	044 Move W1, 3
	045 Move X0, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X21, X31
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call IntPtr.op_Inequality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {59}
	056 Move X0, X20
	057 Move X1, X31
	058 Call ProfilerUnsafeUtility.EndSample, X0
	059 Compare X21, 0
	060 JumpIfNotEqual {106}
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X22]
	067 Move X8, [X0+184]
	068 Move X1, X31
	069 Move X2, X31
	070 Move X20, [X8+40]
	071 Move X0, X20
	072 Call IntPtr.op_Inequality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {80}
	077 Move X0, X20
	078 Move X1, X31
	079 Call ProfilerUnsafeUtility.BeginSample, X0
	080 Move X8, [X19]
	081 Move X9, [X8+520]
	082 Move X2, [X8+528]
	083 Move W1, 3
	084 Move X0, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X19, X31
	087 Move X0, X20
	088 Move X1, X31
	089 Move X2, X31
	090 Call IntPtr.op_Inequality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {98}
	095 Move X0, X20
	096 Move X1, X31
	097 Call ProfilerUnsafeUtility.EndSample, X0
	098 Compare X19, 0
	099 JumpIfNotEqual {108}
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return 
	106 Move X0, X21
	107 Call 0x1C17F18
	108 Move X0, X19
	109 Call 0x1C17F18
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X21, X0
	112 Move X0, X21
	113 Call 0x3EB2AD0
	114 Move X19, [X0]
	115 Call 0x3EB2AE0
	116 Move X19, X31
	117 Move X21, X0
	118 Move X0, X20
	119 Move X1, X31
	120 Move X2, X31
	121 Call IntPtr.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {129}
	126 Move X0, X20
	127 Move X1, X31
	128 Call ProfilerUnsafeUtility.EndSample, X0
	129 Compare X19, 0
	130 JumpIfEqual {157}
	131 Move X0, X19
	132 Call 0x1C17F18
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X21, X0
	135 Move X0, X21
	136 Call 0x3EB2AD0
	137 Move X8, [X0]
	138 Move [X31+8], X8
	139 Call 0x3EB2AE0
	140 Move X21, [X31+8]
	141 Move [X31+8], X31
	142 Move X21, X0
	143 Move X0, X20
	144 Move X1, X31
	145 Move X2, X31
	146 Call IntPtr.op_Inequality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {154}
	151 Move X0, X20
	152 Move X1, X31
	153 Call ProfilerUnsafeUtility.EndSample, X0
	154 Move X8, [X31+8]
	155 Compare X8, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X21
	158 Call 0x1D2D690
	159 Move X0, [X31+8]
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void PreprocessInteractors(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B6FF60 SUBS X9, X9, 0x1
	0x03B6FF64 ADD X10, X10, 0x10
	0x03B6FF68 B.NE 0x3B6FF54
	0x03B6FF6C MOVZ W2, 0x5
	0x03B6FF70 MOV X0, X19
	0x03B6FF74 BL 0x1C5C788
	0x03B6FF78 B 0x3B6FF8C
	0x03B6FF7C LDR W9, [X10]
	0x03B6FF80 ADD W9, W9, 0x5
	0x03B6FF84 ADD X8, X8, W9, 0x4, SXTW
	0x03B6FF88 ADD X0, X8, 0x138
	0x03B6FF8C LDP X8, X2, [X0]
	0x03B6FF90 MOV X0, X19
	0x03B6FF94 MOV X1, X20
	0x03B6FF98 BLR X8
	0x03B6FF9C TBZ X0, 0x0, 0x3B6FFEC
	0x03B6FFA0 CBZ X20, 0x3B7002C
	0x03B6FFA4 ADRP X10, 0x5EB000
	0x03B6FFA8 LDR X8, [X20]
	0x03B6FFAC LDR X10, [X10 + 0x148]
	0x03B6FFB0 LDRH W9, [X8 + 0x12E]
	0x03B6FFB4 LDR X1, [X10]
	0x03B6FFB8 CBZ X9, 0x3B6FFDC
	0x03B6FFBC LDR X10, [X8 + 0xB0]
	0x03B6FFC0 ADD X10, X10, 0x8
	0x03B6FFC4 LDUR X11, [X10 - 0x8]
	0x03B6FFC8 CMP X11, X1
	0x03B6FFCC B.EQ 0x3B70000
	0x03B6FFD0 SUBS X9, X9, 0x1
	0x03B6FFD4 ADD X10, X10, 0x10
	0x03B6FFD8 B.NE 0x3B6FFC4
	0x03B6FFDC MOVZ W2, 0x6
	0x03B6FFE0 MOV X0, X20
	0x03B6FFE4 BL 0x1C5C788
	0x03B6FFE8 B 0x3B70010
	0x03B6FFEC LDP X20, X19, [X31 + 0x20]
	0x03B6FFF0 LDP X22, X21, [X31 + 0x10]
	0x03B6FFF4 MOV W0, W31
	0x03B6FFF8 LDP X30, X23, [X31], #0x30
	0x03B6FFFC RET
	0x03B70000 LDR W9, [X10]
	0x03B70004 ADD W9, W9, 0x6
	0x03B70008 ADD X8, X8, W9, 0x4, SXTW
	0x03B7000C ADD X0, X8, 0x138
	0x03B70010 LDP X3, X2, [X0]
	0x03B70014 MOV X0, X20
	0x03B70018 MOV X1, X19
	0x03B7001C LDP X20, X19, [X31 + 0x20]
	0x03B70020 LDP X22, X21, [X31 + 0x10]
	0x03B70024 LDP X30, X23, [X31], #0x30
	0x03B70028 BR X3
	0x03B7002C BL 0x1C16F20
	0x03B70030 STP X30, X21, [X31 - 0x20]!
	0x03B70034 STP X20, X19, [X31 + 0x10]
	0x03B70038 ADRP X21, 0x872000
	0x03B7003C LDRB W8, [X21 + 0xA6A]
	0x03B70040 MOV X19, X1
	0x03B70044 MOV X20, X0
	0x03B70048 TBNZ X8, 0x0, 0x3B7006C
	0x03B7004C ADRP X0, 0x5EA000
	0x03B70050 LDR X0, [X0 + 0x8D8]
	0x03B70054 BL 0x1C16CF4
	0x03B70058 ADRP X0, 0x5EA000
	0x03B7005C LDR X0, [X0 + 0x2F8]
	0x03B70060 BL 0x1C16CF4
	0x03B70064 MOVZ W8, 0x1
	0x03B70068 STRB W8, [X21 + 0xA6A]
	0x03B7006C CBZ X20, 0x3B7015C
	0x03B70070 ADRP X10, 0x5EA000
	0x03B70074 LDR X8, [X20]
	0x03B70078 LDR X10, [X10 + 0x2F8]
	0x03B7007C LDRH W9, [X8 + 0x12E]
	0x03B70080 LDR X1, [X10]
	0x03B70084 CBZ X9, 0x3B700A8
	0x03B70088 LDR X10, [X8 + 0xB0]
	0x03B7008C ADD X10, X10, 0x8
	0x03B70090 LDUR X11, [X10 - 0x8]
	0x03B70094 CMP X11, X1
	0x03B70098 B.EQ 0x3B700B8
	0x03B7009C SUBS X9, X9, 0x1
	0x03B700A0 ADD X10, X10, 0x10
	0x03B700A4 B.NE 0x3B70090
	0x03B700A8 MOVZ W2, 0x4
	0x03B700AC MOV X0, X20
	0x03B700B0 BL 0x1C5C788
	0x03B700B4 B 0x3B700C8
	0x03B700B8 LDR W9, [X10]
	0x03B700BC ADD W9, W9, 0x4
	0x03B700C0 ADD X8, X8, W9, 0x4, SXTW
	0x03B700C4 ADD X0, X8, 0x138
	0x03B700C8 LDP X8, X1, [X0]
	0x03B700CC MOV X0, X20
	0x03B700D0 BLR X8
	0x03B700D4 CBZ X19, 0x3B7015C
	0x03B700D8 ADRP X10, 0x5EA000
	0x03B700DC LDR X8, [X19]
	0x03B700E0 LDR X10, [X10 + 0x8D8]
	0x03B700E4 MOV X20, X0
	0x03B700E8 LDRH W9, [X8 + 0x12E]
	0x03B700EC LDR X1, [X10]
	0x03B700F0 CBZ X9, 0x3B70114
	0x03B700F4 LDR X10, [X8 + 0xB0]
	0x03B700F8 ADD X10, X10, 0x8
	0x03B700FC LDUR X11, [X10 - 0x8]
	0x03B70100 CMP X11, X1
	0x03B70104 B.EQ 0x3B70124
	0x03B70108 SUBS X9, X9, 0x1
	0x03B7010C ADD X10, X10, 0x10
	0x03B70110 B.NE 0x3B700FC
	0x03B70114 MOVZ W2, 0x4
	0x03B70118 MOV X0, X19
	0x03B7011C BL 0x1C5C788
	0x03B70120 B 0x3B70134
	0x03B70124 LDR W9, [X10]
	0x03B70128 ADD W9, W9, 0x4
	0x03B7012C ADD X8, X8, W9, 0x4, SXTW
	0x03B70130 ADD X0, X8, 0x138
	0x03B70134 LDP X8, X1, [X0]
	0x03B70138 MOV X0, X19
	0x03B7013C BLR X8
	0x03B70140 AND X8, X0, X20, 0x0
	0x03B70144 LDP X20, X19, [X31 + 0x10]
	0x03B70148 UBFM X8, X8, 0x20, 0x3F
	0x03B7014C CMP X8, 0x0
	0x03B70150 CSET W0, NE
	0x03B70154 LDP X30, X21, [X31], #0x20
	0x03B70158 RET
	0x03B7015C BL 0x1C16F20
	0x03B70160 LDR X0, [X0 + 0x68]
	0x03B70164 MOV X3, X31
	0x03B70168 B 0x3B8DC80
	0x03B7016C STR X30, [X31 - 0x30]!
	0x03B70170 STP X22, X21, [X31 + 0x10]
	0x03B70174 STP X20, X19, [X31 + 0x20]
	0x03B70178 ADRP X22, 0x872000
	0x03B7017C LDRB W8, [X22 + 0xA25]
	0x03B70180 MOV X19, X2
	0x03B70184 MOV X20, X1
	0x03B70188 MOV X21, X0
	0x03B7018C TBNZ X8, 0x0, 0x3B701A4
	0x03B70190 ADRP X0, 0x5EA000
	0x03B70194 LDR X0, [X0 + 0x328]
	0x03B70198 BL 0x1C16CF4
	0x03B7019C MOVZ W8, 0x1
	0x03B701A0 STRB W8, [X22 + 0xA25]
	0x03B701A4 CBZ X20, 0x3B70240
	0x03B701A8 ADRP X10, 0x5EA000
	0x03B701AC LDR X8, [X20]
	0x03B701B0 LDR X10, [X10 + 0x328]
	0x03B701B4 LDRH W9, [X8 + 0x12E]
	0x03B701B8 LDR X1, [X10]
	0x03B701BC CBZ X9, 0x3B701E0
	0x03B701C0 LDR X10, [X8 + 0xB0]
	0x03B701C4 ADD X10, X10, 0x8
	0x03B701C8 LDUR X11, [X10 - 0x8]
	0x03B701CC CMP X11, X1
	0x03B701D0 B.EQ 0x3B701F0
	0x03B701D4 SUBS X9, X9, 0x1
	0x03B701D8 ADD X10, X10, 0x10
	0x03B701DC B.NE 0x3B701C8
	0x03B701E0 MOVZ W2, 0x5
	0x03B701E4 MOV X0, X20
	0x03B701E8 BL 0x1C5C788
	0x03B701EC B 0x3B70200
	0x03B701F0 LDR W9, [X10]
	0x03B701F4 ADD W9, W9, 0x5
	0x03B701F8 ADD X8, X8, W9, 0x4, SXTW
	0x03B701FC ADD X0, X8, 0x138
	0x03B70200 LDP X8, X1, [X0]
	0x03B70204 MOV X0, X20
	0x03B70208 BLR X8
	0x03B7020C TBZ X0, 0x0, 0x3B7022C
	0x03B70210 MOV X0, X21
	0x03B70214 MOV X1, X20
	0x03B70218 MOV X2, X19
	0x03B7021C LDP X20, X19, [X31 + 0x20]
	0x03B70220 LDP X22, X21, [X31 + 0x10]
	0x03B70224 LDR X30, [X31], #0x30
	0x03B70228 B 0x3B70244
	0x03B7022C LDP X20, X19, [X31 + 0x20]
	0x03B70230 LDP X22, X21, [X31 + 0x10]
	0x03B70234 MOV W0, W31
	0x03B70238 LDR X30, [X31], #0x30
	0x03B7023C RET
	0x03B70240 BL 0x1C16F20
	0x03B70244 STP X30, X23, [X31 - 0x30]!
	0x03B70248 STP X22, X21, [X31 + 0x10]
	0x03B7024C STP X20, X19, [X31 + 0x20]
	0x03B70250 ADRP X22, 0x872000
	0x03B70254 ADRP X23, 0x5EA000
	0x03B70258 LDRB W8, [X22 + 0xA26]
	0x03B7025C LDR X23, [X23 + 0xE20]
	0x03B70260 MOV X20, X2
	0x03B70264 MOV X19, X1
	0x03B70268 MOV X21, X0
	0x03B7026C TBNZ X8, 0x0, 0x3B7029C
	0x03B70270 ADRP X0, 0x5EA000
	0x03B70274 LDR X0, [X0 + 0x160]
	0x03B70278 BL 0x1C16CF4
	0x03B7027C ADRP X0, 0x5EA000
	0x03B70280 LDR X0, [X0 + 0x328]
	0x03B70284 BL 0x1C16CF4
	0x03B70288 ADRP X0, 0x5EA000
	0x03B7028C LDR X0, [X0 + 0xE20]
	0x03B70290 BL 0x1C16CF4
	0x03B70294 MOVZ W8, 0x1
	0x03B70298 STRB W8, [X22 + 0xA26]
	0x03B7029C LDR X0, [X23]
	0x03B702A0 LDR W8, [X0 + 0xE0]
	0x03B702A4 CBNZ W8, 0x3B702AC
	0x03B702A8 BL 0x1C16DFC
	0x03B702AC MOV X0, X19
	0x03B702B0 MOV X1, X20
	0x03B702B4 BL 0x3B70030
	0x03B702B8 TBZ X0, 0x0, 0x3B70390
	0x03B702BC LDR X0, [X21 + 0x78]
	0x03B702C0 MOV X1, X19
	0x03B702C4 MOV X2, X20
	0x03B702C8 MOV X3, X31
	0x03B702CC BL 0x3B8DFE8
	0x03B702D0 TBZ X0, 0x0, 0x3B70390
	0x03B702D4 CBZ X19, 0x3B703D0
	0x03B702D8 ADRP X10, 0x5EA000
	0x03B702DC LDR X8, [X19]
	0x03B702E0 LDR X10, [X10 + 0x328]
	0x03B702E4 LDRH W9, [X8 + 0x12E]
	0x03B702E8 LDR X1, [X10]
	0x03B702EC CBZ X9, 0x3B70310
	0x03B702F0 LDR X10, [X8 + 0xB0]
	0x03B702F4 ADD X10, X10, 0x8
	0x03B702F8 LDUR X11, [X10 - 0x8]
	0x03B702FC CMP X11, X1
	0x03B70300 B.EQ 0x3B70320
	0x03B70304 SUBS X9, X9, 0x1
	0x03B70308 ADD X10, X10, 0x10
	0x03B7030C B.NE 0x3B702F8
	0x03B70310 MOVZ W2, 0x7
	0x03B70314 MOV X0, X19
	0x03B70318 BL 0x1C5C788
	0x03B7031C B 0x3B70330
	0x03B70320 LDR W9, [X10]
	0x03B70324 ADD W9, W9, 0x7
	0x03B70328 ADD X8, X8, W9, 0x4, SXTW
	0x03B7032C ADD X0, X8, 0x138
	0x03B70330 LDP X8, X2, [X0]
	0x03B70334 MOV X0, X19
	0x03B70338 MOV X1, X20
	0x03B7033C BLR X8
	0x03B70340 TBZ X0, 0x0, 0x3B70390
	0x03B70344 CBZ X20, 0x3B703D0
	0x03B70348 ADRP X10, 0x5EA000
	0x03B7034C LDR X8, [X20]
	0x03B70350 LDR X10, [X10 + 0x160]
	0x03B70354 LDRH W9, [X8 + 0x12E]
	0x03B70358 LDR X1, [X10]
	0x03B7035C CBZ X9, 0x3B70380
	0x03B70360 LDR X10, [X8 + 0xB0]
	0x03B70364 ADD X10, X10, 0x8
	0x03B70368 LDUR X11, [X10 - 0x8]
	0x03B7036C CMP X11, X1
	0x03B70370 B.EQ 0x3B703A4
	0x03B70374 SUBS X9, X9, 0x1
	0x03B70378 ADD X10, X10, 0x10
	0x03B7037C B.NE 0x3B70368
	0x03B70380 MOVZ W2, 0x8
	0x03B70384 MOV X0, X20
	0x03B70388 BL 0x1C5C788
	0x03B7038C B 0x3B703B4
	0x03B70390 LDP X20, X19, [X31 + 0x20]
	0x03B70394 LDP X22, X21, [X31 + 0x10]
	0x03B70398 MOV W0, W31
	0x03B7039C LDP X30, X23, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X21, 0x874000
	015 Move W8, [X21+2591]
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x5ED000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x5ED000
	026 Move X0, [X0+1632]
	027 Call 0x1C17CF4
	028 Move X0, 0x5ED000
	029 Move X0, [X0+1640]
	030 Call 0x1C17CF4
	031 Move X0, 0x5ED000
	032 Move X0, [X0+1648]
	033 Call 0x1C17CF4
	034 Move X0, 0x5ED000
	035 Move X0, [X0+1656]
	036 Call 0x1C17CF4
	037 Move X0, 0x5ED000
	038 Move X0, [X0+1664]
	039 Call 0x1C17CF4
	040 Move X0, 0x5ED000
	041 Move X0, [X0+1672]
	042 Call 0x1C17CF4
	043 Move X0, 0x5ED000
	044 Move X0, [X0+1680]
	045 Call 0x1C17CF4
	046 Move X0, 0x5ED000
	047 Move X0, [X0+1688]
	048 Call 0x1C17CF4
	049 Move X0, 0x5ED000
	050 Move X0, [X0+1696]
	051 Call 0x1C17CF4
	052 Move X0, 0x5EB000
	053 Move X0, [X0+2360]
	054 Call 0x1C17CF4
	055 Move X0, 0x5EB000
	056 Move X0, [X0+760]
	057 Call 0x1C17CF4
	058 Move X0, 0x5EC000
	059 Move X0, [X0+1704]
	060 Call 0x1C17CF4
	061 Move X0, 0x5EC000
	062 Move X0, [X0+1712]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+2591], W8
	066 Move [X31+64], X31
	067 Move [X31+72], X31
	068 Move [X31+80], X31
	069 Move [X31+32], X31
	070 Move [X31+40], X31
	071 Move [X31+48], X31
	072 Move X8, [X20+160]
	073 Compare X8, 0
	074 JumpIfEqual {254}
	075 Move X0, [X8+16]
	076 Compare X0, 0
	077 JumpIfEqual {254}
	078 Move X8, 0x5EC000
	079 Move X8, [X8+1712]
	080 Move X28, 0x5EC000
	081 Move X29, 0x5EC000
	082 Move X22, 0x5EB000
	083 Move X26, 0x5EC000
	084 Move X23, 0x5EC000
	085 Move X24, 0x5EC000
	086 Move X28, [X28+1656]
	087 Move X29, [X29+1688]
	088 Move X22, [X22+2360]
	089 Move X26, [X26+1704]
	090 Move X23, [X23+1664]
	091 Move X24, [X24+1696]
	092 Move X1, [X8]
	093 Move X25, 0x5EB000
	094 Move X27, 0x5EC000
	095 Move X25, [X25+760]
	096 Move X27, [X27+1640]
	097 Add X8, X31, 8
	098 Call List`1<Object>.GetEnumerator, X0
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Move X8, [X31+24]
	101 Move [X31+4], V0
	102 Move [X31+80], X8
	103 Move X1, [X28]
	104 Add X0, X31, 64
	105 Call Enumerator<Object>.MoveNext, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {158}
	110 Move X0, [X20+160]
	111 Compare X0, 0
	112 JumpIfEqual {248}
	113 Move X8, [X0]
	114 Move X21, [X31+80]
	115 Move X9, [X8+392]
	116 Move X2, [X8+400]
	117 Move X1, X21
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {103}
	123 Move X0, [X20+224]
	124 Compare X0, 0
	125 JumpIfEqual {250}
	126 Move X2, [X29]
	127 Move X1, X21
	128 Call HashSet`1<Object>.Contains, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {103}
	133 Compare X21, 0
	134 JumpIfEqual {252}
	135 Move X8, [X21]
	136 Move X1, [X22]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move W2, 18
	147 Move X0, X21
	148 Call 0x1C5D788
	149 Move W9, [X10]
	150 Add W9, W9, 18
	151 Add X8, X8, W9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X2, [X0+8]
	155 Move X0, X21
	156 Move W1, W19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X1, [X27]
	159 Add X0, X31, 64
	160 Call Enumerator<Object>.Dispose, X0
	161 Move X8, [X20+152]
	162 Compare X8, 0
	163 JumpIfEqual {254}
	164 Move X0, [X8+16]
	165 Compare X0, 0
	166 JumpIfEqual {254}
	167 Move X1, [X26]
	168 Add X8, X31, 8
	169 Call List`1<Object>.GetEnumerator, X0
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 Move X8, [X31+24]
	172 Move [X31+2], V0
	173 Move [X31+48], X8
	174 Move X1, [X23]
	175 Add X0, X31, 32
	176 Call Enumerator<Object>.MoveNext, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {229}
	181 Move X0, [X20+152]
	182 Compare X0, 0
	183 JumpIfEqual {249}
	184 Move X8, [X0]
	185 Move X21, [X31+48]
	186 Move X9, [X8+392]
	187 Move X2, [X8+400]
	188 Move X1, X21
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {174}
	194 Move X0, [X20+216]
	195 Compare X0, 0
	196 JumpIfEqual {251}
	197 Move X2, [X24]
	198 Move X1, X21
	199 Call HashSet`1<Object>.Contains, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {174}
	204 Compare X21, 0
	205 JumpIfEqual {253}
	206 Move X8, [X21]
	207 Move X1, [X25]
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move W2, 10
	218 Move X0, X21
	219 Call 0x1C5D788
	220 Move W9, [X10]
	221 Add W9, W9, 10
	222 Add X8, X8, W9
	223 Add X0, X8, 312
	224 Move X8, [X0]
	225 Move X2, [X0+8]
	226 Move X0, X21
	227 Move W1, W19
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, 0x5EC000
	230 Move X8, [X8+1648]
	231 Add X0, X31, 32
	232 Move X1, [X8]
	233 Call Enumerator<Object>.Dispose, X0
	234 Move X20, [X31+176]
	235 Move X19, [X31+184]
	236 Move X22, [X31+160]
	237 Move X21, [X31+168]
	238 Move X24, [X31+144]
	239 Move X23, [X31+152]
	240 Move X26, [X31+128]
	241 Move X25, [X31+136]
	242 Move X28, [X31+112]
	243 Move X27, [X31+120]
	244 Move X29, [X31+96]
	245 Move X30, [X31+104]
	246 Add X31, X31, 192
	247 Return 
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Call 0x3EB2AD0
	257 Move X20, [X0]
	258 Call 0x3EB2AE0
	259 Move X8, 0x5EC000
	260 Move X8, [X8+1648]
	261 Add X0, X31, 32
	262 Move X1, [X8]
	263 Call Enumerator<Object>.Dispose, X0
	264 Compare X20, 0
	265 JumpIfEqual {234}
	266 Move X0, X20
	267 Call 0x1C17F18
	268 Move X19, X0
	269 Move X20, X31
	270 Move X19, X0
	271 Move X8, 0x5EC000
	272 Move X8, [X8+1648]
	273 Move X1, [X8]
	274 Add X0, X31, 32
	275 Call Enumerator<Object>.Dispose, X0
	276 Compare X20, 0
	277 JumpIfEqual {299}
	278 Move X0, X20
	279 Call 0x1C17F18
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Call 0x3EB2AD0
	282 Move X21, [X0]
	283 Call 0x3EB2AE0
	284 Move X1, [X27]
	285 Add X0, X31, 64
	286 Call Enumerator<Object>.Dispose, X0
	287 Compare X21, 0
	288 JumpIfEqual {161}
	289 Move X0, X21
	290 Call 0x1C17F18
	291 Move X19, X0
	292 Move X21, X31
	293 Move X19, X0
	294 Move X1, [X27]
	295 Add X0, X31, 64
	296 Call Enumerator<Object>.Dispose, X0
	297 Compare X21, 0
	298 JumpIfNotEqual {301}
	299 Move X0, X19
	300 Call 0x1D2D690
	301 Move X0, X21
	302 Call 0x1C17F18
	303 Call 0x1991590

Method: System.Void ProcessInteractors(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B703A0 RET
	0x03B703A4 LDR W9, [X10]
	0x03B703A8 ADD W9, W9, 0x8
	0x03B703AC ADD X8, X8, W9, 0x4, SXTW
	0x03B703B0 ADD X0, X8, 0x138
	0x03B703B4 LDP X3, X2, [X0]
	0x03B703B8 MOV X0, X20
	0x03B703BC MOV X1, X19
	0x03B703C0 LDP X20, X19, [X31 + 0x20]
	0x03B703C4 LDP X22, X21, [X31 + 0x10]
	0x03B703C8 LDP X30, X23, [X31], #0x30
	0x03B703CC BR X3
	0x03B703D0 BL 0x1C16F20
	0x03B703D4 LDR X0, [X0 + 0x78]
	0x03B703D8 MOV X3, X31
	0x03B703DC B 0x3B8DFE8
	0x03B703E0 B 0x3B703E4
	0x03B703E4 STP X30, X21, [X31 - 0x20]!
	0x03B703E8 STP X20, X19, [X31 + 0x10]
	0x03B703EC ADRP X21, 0x872000
	0x03B703F0 LDRB W8, [X21 + 0xA27]
	0x03B703F4 MOV X19, X2
	0x03B703F8 MOV X20, X1
	0x03B703FC TBNZ X8, 0x0, 0x3B70420
	0x03B70400 ADRP X0, 0x5EA000
	0x03B70404 LDR X0, [X0 + 0x130]
	0x03B70408 BL 0x1C16CF4
	0x03B7040C ADRP X0, 0x5EA000
	0x03B70410 LDR X0, [X0 + 0xE20]
	0x03B70414 BL 0x1C16CF4
	0x03B70418 MOVZ W8, 0x1
	0x03B7041C STRB W8, [X21 + 0xA27]
	0x03B70420 CBZ X19, 0x3B704C8
	0x03B70424 ADRP X10, 0x5EA000
	0x03B70428 LDR X8, [X19]
	0x03B7042C LDR X10, [X10 + 0x130]
	0x03B70430 LDRH W9, [X8 + 0x12E]
	0x03B70434 LDR X1, [X10]
	0x03B70438 CBZ X9, 0x3B7045C
	0x03B7043C LDR X10, [X8 + 0xB0]
	0x03B70440 ADD X10, X10, 0x8
	0x03B70444 LDUR X11, [X10 - 0x8]
	0x03B70448 CMP X11, X1
	0x03B7044C B.EQ 0x3B7046C
	0x03B70450 SUBS X9, X9, 0x1
	0x03B70454 ADD X10, X10, 0x10
	0x03B70458 B.NE 0x3B70444
	0x03B7045C MOVZ W2, 0x8
	0x03B70460 MOV X0, X19
	0x03B70464 BL 0x1C5C788
	0x03B70468 B 0x3B7047C
	0x03B7046C LDR W9, [X10]
	0x03B70470 ADD W9, W9, 0x8
	0x03B70474 ADD X8, X8, W9, 0x4, SXTW
	0x03B70478 ADD X0, X8, 0x138
	0x03B7047C LDP X8, X1, [X0]
	0x03B70480 MOV X0, X19
	0x03B70484 BLR X8
	0x03B70488 TBZ X0, 0x0, 0x3B704B8
	0x03B7048C ADRP X8, 0x5EA000
	0x03B70490 LDR X8, [X8 + 0xE20]
	0x03B70494 LDR X0, [X8]
	0x03B70498 LDR W8, [X0 + 0xE0]
	0x03B7049C CBNZ W8, 0x3B704A4
	0x03B704A0 BL 0x1C16DFC
	0x03B704A4 MOV X0, X20
	0x03B704A8 MOV X1, X19
	0x03B704AC LDP X20, X19, [X31 + 0x10]
	0x03B704B0 LDP X30, X21, [X31], #0x20
	0x03B704B4 B 0x3B70030
	0x03B704B8 LDP X20, X19, [X31 + 0x10]
	0x03B704BC MOV W0, W31
	0x03B704C0 LDP X30, X21, [X31], #0x20
	0x03B704C4 RET
	0x03B704C8 BL 0x1C16F20
	0x03B704CC SUB X31, X31, 0x40
	0x03B704D0 STR X30, [X31 + 0x10]
	0x03B704D4 STP X22, X21, [X31 + 0x20]
	0x03B704D8 STP X20, X19, [X31 + 0x30]
	0x03B704DC ADRP X21, 0x872000
	0x03B704E0 ADRP X22, 0x5EA000
	0x03B704E4 LDRB W8, [X21 + 0xA28]
	0x03B704E8 LDR X22, [X22 + 0x920]
	0x03B704EC MOV X20, X1
	0x03B704F0 MOV X19, X0
	0x03B704F4 TBNZ X8, 0x0, 0x3B70554
	0x03B704F8 ADRP X0, 0x583000
	0x03B704FC LDR X0, [X0 + 0xA28]
	0x03B70500 BL 0x1C16CF4
	0x03B70504 ADRP X0, 0x5EB000
	0x03B70508 LDR X0, [X0 + 0x6D8]
	0x03B7050C BL 0x1C16CF4
	0x03B70510 ADRP X0, 0x5EA000
	0x03B70514 LDR X0, [X0 + 0x920]
	0x03B70518 BL 0x1C16CF4
	0x03B7051C ADRP X0, 0x5EB000
	0x03B70520 LDR X0, [X0 + 0x6E0]
	0x03B70524 BL 0x1C16CF4
	0x03B70528 ADRP X0, 0x5EB000
	0x03B7052C LDR X0, [X0 + 0x6E8]
	0x03B70530 BL 0x1C16CF4
	0x03B70534 ADRP X0, 0x5EB000
	0x03B70538 LDR X0, [X0 + 0x6F0]
	0x03B7053C BL 0x1C16CF4
	0x03B70540 ADRP X0, 0x5EB000
	0x03B70544 LDR X0, [X0 + 0x6F8]
	0x03B70548 BL 0x1C16CF4
	0x03B7054C MOVZ W8, 0x1
	0x03B70550 STRB W8, [X21 + 0xA28]
	0x03B70554 LDR X1, [X22]
	0x03B70558 MOV X0, X20
	0x03B7055C STR X31, [X31 + 0x18]
	0x03B70560 STP X31, X31, [X31]
	0x03B70564 BL 0x1C16E00
	0x03B70568 MOV X21, X0
	0x03B7056C CBZ X0, 0x3B705F4
	0x03B70570 LDR X8, [X21]
	0x03B70574 LDR X1, [X22]
	0x03B70578 LDRH W9, [X8 + 0x12E]
	0x03B7057C CBZ X9, 0x3B705A0
	0x03B70580 LDR X10, [X8 + 0xB0]
	0x03B70584 ADD X10, X10, 0x8
	0x03B70588 LDUR X11, [X10 - 0x8]
	0x03B7058C CMP X11, X1
	0x03B70590 B.EQ 0x3B705B0
	0x03B70594 SUBS X9, X9, 0x1
	0x03B70598 ADD X10, X10, 0x10
	0x03B7059C B.NE 0x3B70588
	0x03B705A0 MOV X0, X21
	0x03B705A4 MOV W2, W31
	0x03B705A8 BL 0x1C5C788
	0x03B705AC B 0x3B705BC
	0x03B705B0 LDRSW X9, [X10]
	0x03B705B4 ADD X8, X8, X9, 0x4, LSL
	0x03B705B8 ADD X0, X8, 0x138
	0x03B705BC LDP X8, X1, [X0]
	0x03B705C0 MOV X0, X21
	0x03B705C4 BLR X8
	0x03B705C8 MOV X21, X0
	0x03B705CC CBZ X0, 0x3B705F4
	0x03B705D0 LDR X0, [X19 + 0xA0]
	0x03B705D4 CBZ X0, 0x3B70704
	0x03B705D8 LDR X8, [X0]
	0x03B705DC MOV X1, X21
	0x03B705E0 LDP X9, X2, [X8 + 0x178]
	0x03B705E4 BLR X9
	0x03B705E8 TBZ X0, 0x0, 0x3B70694
	0x03B705EC MOV W22, W31
	0x03B705F0 B 0x3B705F8
	0x03B705F4 MOVZ W22, 0x1
	0x03B705F8 LDR X0, [X19 + 0xA0]
	0x03B705FC CBZ X0, 0x3B70704
	0x03B70600 LDR X8, [X0]
	0x03B70604 MOV X1, X20
	0x03B70608 LDP X9, X2, [X8 + 0x198]
	0x03B7060C BLR X9
	0x03B70610 TBZ X0, 0x0, 0x3B706F0
	0x03B70614 TBNZ X22, 0x0, 0x3B70634
	0x03B70618 LDR X0, [X19 + 0xE0]
	0x03B7061C CBZ X0, 0x3B70704
	0x03B70620 ADRP X8, 0x5EB000
	0x03B70624 LDR X8, [X8 + 0x6D8]
	0x03B70628 MOV X1, X20
	0x03B7062C LDR X2, [X8]
	0x03B70630 BL 0x2DBEF30
	0x03B70634 LDR X0, [X19 + 0x138]
	0x03B70638 CBZ X0, 0x3B70704
	0x03B7063C ADRP X8, 0x5EB000
	0x03B70640 LDR X8, [X8 + 0x6E0]
	0x03B70644 ADD X1, X31, 0x18
	0x03B70648 LDR X2, [X8]
	0x03B7064C BL 0x2EF1058
	0x03B70650 MOV X8, X1
	0x03B70654 LDR X1, [X31 + 0x18]
	0x03B70658 STP X0, X8, [X31]
	0x03B7065C CBZ X1, 0x3B70708
	0x03B70660 STP X19, X20, [X1 + 0x10]
	0x03B70664 STR X21, [X1 + 0x20]
	0x03B70668 LDR X8, [X19]
	0x03B7066C LDR X9, [X8 + 0x268]
	0x03B70670 LDR X2, [X8 + 0x270]
	0x03B70674 MOV X0, X19
	0x03B70678 BLR X9
	0x03B7067C ADRP X8, 0x5EB000
	0x03B70680 LDR X8, [X8 + 0x6E8]
	0x03B70684 ADD X0, X31, 0x0
	0x03B70688 LDR X1, [X8]
	0x03B7068C BL 0x24A6DD0
	0x03B70690 B 0x3B706F0
	0x03B70694 ADRP X8, 0x5EB000
	0x03B70698 LDR X8, [X8 + 0x6F0]
	0x03B7069C MOV X1, X20
	0x03B706A0 MOV X2, X31
	0x03B706A4 LDR X0, [X8]
	0x03B706A8 BL 0x321EFD0
	0x03B706AC ADRP X8, 0x5EB000
	0x03B706B0 LDR X8, [X8 + 0x6F8]
	0x03B706B4 MOV X2, X31
	0x03B706B8 LDR X1, [X8]
	0x03B706BC BL 0x321B938
	0x03B706C0 ADRP X8, 0x583000
	0x03B706C4 LDR X8, [X8 + 0xA28]
	0x03B706C8 MOV X20, X0
	0x03B706CC LDR X8, [X8]
	0x03B706D0 LDR W9, [X8 + 0xE0]
	0x03B706D4 CBNZ W9, 0x3B706E0
	0x03B706D8 MOV X0, X8
	0x03B706DC BL 0x1C16DFC
	0x03B706E0 MOV X0, X20
	0x03B706E4 MOV X1, X19
	0x03B706E8 MOV X2, X31
	0x03B706EC BL 0x3C065A4
	0x03B706F0 LDP X20, X19, [X31 + 0x30]
	0x03B706F4 LDP X22, X21, [X31 + 0x20]
	0x03B706F8 LDR X30, [X31 + 0x10]
	0x03B706FC ADD X31, X31, 0x40
	0x03B70700 RET
	0x03B70704 BL 0x1C16F20
	0x03B70708 BL 0x1C16F20
	0x03B7070C B 0x3B70710
	0x03B70710 MOV X20, X0
	0x03B70714 CMP W1, 0x1
	0x03B70718 B.NE 0x3B7074C
	0x03B7071C MOV X0, X20
	0x03B70720 BL 0x3EB1AD0
	0x03B70724 LDR X19, [X0]
	0x03B70728 BL 0x3EB1AE0
	0x03B7072C ADRP X8, 0x5EB000
	0x03B70730 LDR X8, [X8 + 0x6E8]
	0x03B70734 ADD X0, X31, 0x0
	0x03B70738 LDR X1, [X8]
	0x03B7073C BL 0x24A6DD0
	0x03B70740 CBZ X19, 0x3B706F0
	0x03B70744 MOV X0, X19
	0x03B70748 BL 0x1C16F18
	0x03B7074C MOV X19, X31
	0x03B70750 B 0x3B70758
	0x03B70754 MOV X20, X0
	0x03B70758 ADRP X8, 0x5EB000
	0x03B7075C LDR X8, [X8 + 0x6E8]
	0x03B70760 LDR X1, [X8]
	0x03B70764 ADD X0, X31, 0x0
	0x03B70768 BL 0x24A6DD0
	0x03B7076C CBNZ X19, 0x3B70778
	0x03B70770 MOV X0, X20
	0x03B70774 BL 0x1D2C690
	0x03B70778 MOV X0, X19
	0x03B7077C BL 0x1C16F18
	0x03B70780 BL 0x1990590
	0x03B70784 STR X30, [X31 - 0x10]!
	0x03B70788 LDR X0, [X0 + 0xA0]
	0x03B7078C CBZ X0, 0x3B707A0
	0x03B70790 LDR X8, [X0]
	0x03B70794 LDP X3, X2, [X8 + 0x178]
	0x03B70798 LDR X30, [X31], #0x10
	0x03B7079C BR X3
	0x03B707A0 BL 0x1C16F20
	0x03B707A4 STP X30, X21, [X31 - 0x20]!
	0x03B707A8 STP X20, X19, [X31 + 0x10]
	0x03B707AC ADRP X21, 0x872000
	0x03B707B0 LDRB W8, [X21 + 0xA29]
	0x03B707B4 MOV X19, X1
	0x03B707B8 MOV X20, X0
	0x03B707BC TBNZ X8, 0x0, 0x3B707D4
	0x03B707C0 ADRP X0, 0x5EA000
	0x03B707C4 LDR X0, [X0 + 0x938]
	0x03B707C8 BL 0x1C16CF4
	0x03B707CC MOVZ W8, 0x1
	0x03B707D0 STRB W8, [X21 + 0xA29]
	0x03B707D4 CBZ X19, 0x3B70878
	0x03B707D8 LDR X21, [X19 + 0x18]
	0x03B707DC CBZ X21, 0x3B70878

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X21, 0x873000
	015 Move W8, [X21+2592]
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x5EC000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x5EC000
	026 Move X0, [X0+1632]
	027 Call 0x1C17CF4
	028 Move X0, 0x5EC000
	029 Move X0, [X0+1640]
	030 Call 0x1C17CF4
	031 Move X0, 0x5EC000
	032 Move X0, [X0+1648]
	033 Call 0x1C17CF4
	034 Move X0, 0x5EC000
	035 Move X0, [X0+1656]
	036 Call 0x1C17CF4
	037 Move X0, 0x5EC000
	038 Move X0, [X0+1664]
	039 Call 0x1C17CF4
	040 Move X0, 0x5EC000
	041 Move X0, [X0+1672]
	042 Call 0x1C17CF4
	043 Move X0, 0x5EC000
	044 Move X0, [X0+1680]
	045 Call 0x1C17CF4
	046 Move X0, 0x5EC000
	047 Move X0, [X0+1688]
	048 Call 0x1C17CF4
	049 Move X0, 0x5EC000
	050 Move X0, [X0+1696]
	051 Call 0x1C17CF4
	052 Move X0, 0x5EB000
	053 Move X0, [X0+2360]
	054 Call 0x1C17CF4
	055 Move X0, 0x5EB000
	056 Move X0, [X0+760]
	057 Call 0x1C17CF4
	058 Move X0, 0x5EC000
	059 Move X0, [X0+1704]
	060 Call 0x1C17CF4
	061 Move X0, 0x5EC000
	062 Move X0, [X0+1712]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+2592], W8
	066 Move [X31+64], X31
	067 Move [X31+72], X31
	068 Move [X31+80], X31
	069 Move [X31+32], X31
	070 Move [X31+40], X31
	071 Move [X31+48], X31
	072 Move X8, [X20+160]
	073 Compare X8, 0
	074 JumpIfEqual {254}
	075 Move X0, [X8+16]
	076 Compare X0, 0
	077 JumpIfEqual {254}
	078 Move X8, 0x5EC000
	079 Move X8, [X8+1712]
	080 Move X28, 0x5EC000
	081 Move X29, 0x5EC000
	082 Move X22, 0x5EB000
	083 Move X26, 0x5EC000
	084 Move X23, 0x5EC000
	085 Move X24, 0x5EC000
	086 Move X28, [X28+1656]
	087 Move X29, [X29+1688]
	088 Move X22, [X22+2360]
	089 Move X26, [X26+1704]
	090 Move X23, [X23+1664]
	091 Move X24, [X24+1696]
	092 Move X1, [X8]
	093 Move X25, 0x5EB000
	094 Move X27, 0x5EC000
	095 Move X25, [X25+760]
	096 Move X27, [X27+1640]
	097 Add X8, X31, 8
	098 Call List`1<Object>.GetEnumerator, X0
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Move X8, [X31+24]
	101 Move [X31+4], V0
	102 Move [X31+80], X8
	103 Move X1, [X28]
	104 Add X0, X31, 64
	105 Call Enumerator<Object>.MoveNext, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {158}
	110 Move X0, [X20+160]
	111 Compare X0, 0
	112 JumpIfEqual {248}
	113 Move X8, [X0]
	114 Move X21, [X31+80]
	115 Move X9, [X8+392]
	116 Move X2, [X8+400]
	117 Move X1, X21
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {103}
	123 Move X0, [X20+224]
	124 Compare X0, 0
	125 JumpIfEqual {250}
	126 Move X2, [X29]
	127 Move X1, X21
	128 Call HashSet`1<Object>.Contains, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {103}
	133 Compare X21, 0
	134 JumpIfEqual {252}
	135 Move X8, [X21]
	136 Move X1, [X22]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move W2, 19
	147 Move X0, X21
	148 Call 0x1C5D788
	149 Move W9, [X10]
	150 Add W9, W9, 19
	151 Add X8, X8, W9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X2, [X0+8]
	155 Move X0, X21
	156 Move W1, W19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X1, [X27]
	159 Add X0, X31, 64
	160 Call Enumerator<Object>.Dispose, X0
	161 Move X8, [X20+152]
	162 Compare X8, 0
	163 JumpIfEqual {254}
	164 Move X0, [X8+16]
	165 Compare X0, 0
	166 JumpIfEqual {254}
	167 Move X1, [X26]
	168 Add X8, X31, 8
	169 Call List`1<Object>.GetEnumerator, X0
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 Move X8, [X31+24]
	172 Move [X31+2], V0
	173 Move [X31+48], X8
	174 Move X1, [X23]
	175 Add X0, X31, 32
	176 Call Enumerator<Object>.MoveNext, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {229}
	181 Move X0, [X20+152]
	182 Compare X0, 0
	183 JumpIfEqual {249}
	184 Move X8, [X0]
	185 Move X21, [X31+48]
	186 Move X9, [X8+392]
	187 Move X2, [X8+400]
	188 Move X1, X21
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {174}
	194 Move X0, [X20+216]
	195 Compare X0, 0
	196 JumpIfEqual {251}
	197 Move X2, [X24]
	198 Move X1, X21
	199 Call HashSet`1<Object>.Contains, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {174}
	204 Compare X21, 0
	205 JumpIfEqual {253}
	206 Move X8, [X21]
	207 Move X1, [X25]
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move W2, 11
	218 Move X0, X21
	219 Call 0x1C5D788
	220 Move W9, [X10]
	221 Add W9, W9, 11
	222 Add X8, X8, W9
	223 Add X0, X8, 312
	224 Move X8, [X0]
	225 Move X2, [X0+8]
	226 Move X0, X21
	227 Move W1, W19
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, 0x5EC000
	230 Move X8, [X8+1648]
	231 Add X0, X31, 32
	232 Move X1, [X8]
	233 Call Enumerator<Object>.Dispose, X0
	234 Move X20, [X31+176]
	235 Move X19, [X31+184]
	236 Move X22, [X31+160]
	237 Move X21, [X31+168]
	238 Move X24, [X31+144]
	239 Move X23, [X31+152]
	240 Move X26, [X31+128]
	241 Move X25, [X31+136]
	242 Move X28, [X31+112]
	243 Move X27, [X31+120]
	244 Move X29, [X31+96]
	245 Move X30, [X31+104]
	246 Add X31, X31, 192
	247 Return 
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Call 0x3EB2AD0
	257 Move X20, [X0]
	258 Call 0x3EB2AE0
	259 Move X8, 0x5EC000
	260 Move X8, [X8+1648]
	261 Add X0, X31, 32
	262 Move X1, [X8]
	263 Call Enumerator<Object>.Dispose, X0
	264 Compare X20, 0
	265 JumpIfEqual {234}
	266 Move X0, X20
	267 Call 0x1C17F18
	268 Move X19, X0
	269 Move X20, X31
	270 Move X19, X0
	271 Move X8, 0x5EC000
	272 Move X8, [X8+1648]
	273 Move X1, [X8]
	274 Add X0, X31, 32
	275 Call Enumerator<Object>.Dispose, X0
	276 Compare X20, 0
	277 JumpIfEqual {299}
	278 Move X0, X20
	279 Call 0x1C17F18
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Call 0x3EB2AD0
	282 Move X21, [X0]
	283 Call 0x3EB2AE0
	284 Move X1, [X27]
	285 Add X0, X31, 64
	286 Call Enumerator<Object>.Dispose, X0
	287 Compare X21, 0
	288 JumpIfEqual {161}
	289 Move X0, X21
	290 Call 0x1C17F18
	291 Move X19, X0
	292 Move X21, X31
	293 Move X19, X0
	294 Move X1, [X27]
	295 Add X0, X31, 64
	296 Call Enumerator<Object>.Dispose, X0
	297 Compare X21, 0
	298 JumpIfNotEqual {301}
	299 Move X0, X19
	300 Call 0x1D2D690
	301 Move X0, X21
	302 Call 0x1C17F18
	303 Call 0x1991590

Method: System.Void ProcessInteractables(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B707E0 ADRP X10, 0x5EA000
	0x03B707E4 LDR X8, [X21]
	0x03B707E8 LDR X10, [X10 + 0x938]
	0x03B707EC LDRH W9, [X8 + 0x12E]
	0x03B707F0 LDR X1, [X10]
	0x03B707F4 CBZ X9, 0x3B70818
	0x03B707F8 LDR X10, [X8 + 0xB0]
	0x03B707FC ADD X10, X10, 0x8
	0x03B70800 LDUR X11, [X10 - 0x8]
	0x03B70804 CMP X11, X1
	0x03B70808 B.EQ 0x3B70828
	0x03B7080C SUBS X9, X9, 0x1
	0x03B70810 ADD X10, X10, 0x10
	0x03B70814 B.NE 0x3B70800
	0x03B70818 MOVZ W2, 0x8
	0x03B7081C MOV X0, X21
	0x03B70820 BL 0x1C5C788
	0x03B70824 B 0x3B70838
	0x03B70828 LDR W9, [X10]
	0x03B7082C ADD W9, W9, 0x8
	0x03B70830 ADD X8, X8, W9, 0x4, SXTW
	0x03B70834 ADD X0, X8, 0x138
	0x03B70838 LDP X8, X2, [X0]
	0x03B7083C MOV X0, X21
	0x03B70840 MOV X1, X19
	0x03B70844 BLR X8
	0x03B70848 LDR X8, [X20 + 0x20]
	0x03B7084C CBZ X8, 0x3B7086C
	0x03B70850 LDR X3, [X8 + 0x18]
	0x03B70854 LDR X0, [X8 + 0x40]
	0x03B70858 LDR X2, [X8 + 0x28]
	0x03B7085C MOV X1, X19
	0x03B70860 LDP X20, X19, [X31 + 0x10]
	0x03B70864 LDP X30, X21, [X31], #0x20
	0x03B70868 BR X3
	0x03B7086C LDP X20, X19, [X31 + 0x10]
	0x03B70870 LDP X30, X21, [X31], #0x20
	0x03B70874 RET
	0x03B70878 BL 0x1C16F20
	0x03B7087C SUB X31, X31, 0xA0
	0x03B70880 STP X30, X23, [X31 + 0x70]
	0x03B70884 STP X22, X21, [X31 + 0x80]
	0x03B70888 STP X20, X19, [X31 + 0x90]
	0x03B7088C ADRP X21, 0x872000
	0x03B70890 LDRB W8, [X21 + 0xA2A]
	0x03B70894 MOV X20, X1
	0x03B70898 MOV X19, X0
	0x03B7089C TBNZ X8, 0x0, 0x3B70980
	0x03B708A0 ADRP X0, 0x5EB000
	0x03B708A4 LDR X0, [X0 + 0x700]
	0x03B708A8 BL 0x1C16CF4
	0x03B708AC ADRP X0, 0x5EB000
	0x03B708B0 LDR X0, [X0 + 0x708]
	0x03B708B4 BL 0x1C16CF4
	0x03B708B8 ADRP X0, 0x583000
	0x03B708BC LDR X0, [X0 + 0xA28]
	0x03B708C0 BL 0x1C16CF4
	0x03B708C4 ADRP X0, 0x5EB000
	0x03B708C8 LDR X0, [X0 + 0x668]
	0x03B708CC BL 0x1C16CF4
	0x03B708D0 ADRP X0, 0x5EB000
	0x03B708D4 LDR X0, [X0 + 0x670]
	0x03B708D8 BL 0x1C16CF4
	0x03B708DC ADRP X0, 0x5EB000
	0x03B708E0 LDR X0, [X0 + 0x678]
	0x03B708E4 BL 0x1C16CF4
	0x03B708E8 ADRP X0, 0x5EB000
	0x03B708EC LDR X0, [X0 + 0x680]
	0x03B708F0 BL 0x1C16CF4
	0x03B708F4 ADRP X0, 0x5EB000
	0x03B708F8 LDR X0, [X0 + 0x688]
	0x03B708FC BL 0x1C16CF4
	0x03B70900 ADRP X0, 0x5EB000
	0x03B70904 LDR X0, [X0 + 0x690]
	0x03B70908 BL 0x1C16CF4
	0x03B7090C ADRP X0, 0x5EB000
	0x03B70910 LDR X0, [X0 + 0x710]
	0x03B70914 BL 0x1C16CF4
	0x03B70918 ADRP X0, 0x5EA000
	0x03B7091C LDR X0, [X0 + 0x920]
	0x03B70920 BL 0x1C16CF4
	0x03B70924 ADRP X0, 0x5EA000
	0x03B70928 LDR X0, [X0 + 0x938]
	0x03B7092C BL 0x1C16CF4
	0x03B70930 ADRP X0, 0x5EB000
	0x03B70934 LDR X0, [X0 + 0x718]
	0x03B70938 BL 0x1C16CF4
	0x03B7093C ADRP X0, 0x5EB000
	0x03B70940 LDR X0, [X0 + 0x6A8]
	0x03B70944 BL 0x1C16CF4
	0x03B70948 ADRP X0, 0x5EB000
	0x03B7094C LDR X0, [X0 + 0x6B0]
	0x03B70950 BL 0x1C16CF4
	0x03B70954 ADRP X0, 0x5EB000
	0x03B70958 LDR X0, [X0 + 0x720]
	0x03B7095C BL 0x1C16CF4
	0x03B70960 ADRP X0, 0x5EB000
	0x03B70964 LDR X0, [X0 + 0x728]
	0x03B70968 BL 0x1C16CF4
	0x03B7096C ADRP X0, 0x5EB000
	0x03B70970 LDR X0, [X0 + 0x730]
	0x03B70974 BL 0x1C16CF4
	0x03B70978 MOVZ W8, 0x1
	0x03B7097C STRB W8, [X21 + 0xA2A]
	0x03B70980 STP X31, X31, [X31 + 0x50]
	0x03B70984 STR X31, [X31 + 0x60]
	0x03B70988 STP X31, X31, [X31 + 0x30]
	0x03B7098C STR X31, [X31 + 0x40]
	0x03B70990 STP X31, X31, [X31 + 0x20]
	0x03B70994 STR X31, [X31 + 0x18]
	0x03B70998 LDR X0, [X19 + 0xA0]
	0x03B7099C CBZ X0, 0x3B70DB0
	0x03B709A0 LDR X8, [X0]
	0x03B709A4 MOV X1, X20
	0x03B709A8 LDP X9, X2, [X8 + 0x178]
	0x03B709AC BLR X9
	0x03B709B0 TBZ X0, 0x0, 0x3B70D9C
	0x03B709B4 CBZ X20, 0x3B70DB0
	0x03B709B8 ADRP X10, 0x5EA000
	0x03B709BC LDR X8, [X20]
	0x03B709C0 LDR X10, [X10 + 0x938]
	0x03B709C4 LDRH W9, [X8 + 0x12E]
	0x03B709C8 LDR X1, [X10]
	0x03B709CC CBZ X9, 0x3B709F0
	0x03B709D0 LDR X10, [X8 + 0xB0]
	0x03B709D4 ADD X10, X10, 0x8
	0x03B709D8 LDUR X11, [X10 - 0x8]
	0x03B709DC CMP X11, X1
	0x03B709E0 B.EQ 0x3B70A00
	0x03B709E4 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X21, 0x873000
	010 Move W8, [X21+2593]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x5EC000
	018 Move X0, [X0+1736]
	019 Call 0x1C17CF4
	020 Move X0, 0x5EC000
	021 Move X0, [X0+216]
	022 Call 0x1C17CF4
	023 Move X0, 0x5EC000
	024 Move X0, [X0+224]
	025 Call 0x1C17CF4
	026 Move X0, 0x5EC000
	027 Move X0, [X0+232]
	028 Call 0x1C17CF4
	029 Move X0, 0x5EB000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0x5EC000
	033 Move X0, [X0+240]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2593], W8
	037 Move [X31+32], X31
	038 Move [X31+40], X31
	039 Move [X31+48], X31
	040 Move X8, [X20+168]
	041 Compare X8, 0
	042 JumpIfEqual {120}
	043 Move X0, [X8+16]
	044 Compare X0, 0
	045 JumpIfEqual {120}
	046 Move X8, 0x5EC000
	047 Move X8, [X8+240]
	048 Move X23, 0x5EC000
	049 Move X24, 0x5EB000
	050 Move X22, 0x5EC000
	051 Move X1, [X8]
	052 Move X23, [X23+224]
	053 Move X24, [X24+2264]
	054 Move X22, [X22+216]
	055 Add X8, X31, 8
	056 Call List`1<Object>.GetEnumerator, X0
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move X8, [X31+24]
	059 Move [X31+2], V0
	060 Move [X31+48], X8
	061 Move X1, [X23]
	062 Add X0, X31, 32
	063 Call Enumerator<Object>.MoveNext, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {106}
	068 Move X0, [X20+168]
	069 Compare X0, 0
	070 JumpIfEqual {118}
	071 Move X8, [X0]
	072 Move X21, [X31+48]
	073 Move X9, [X8+392]
	074 Move X2, [X8+400]
	075 Move X1, X21
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {61}
	081 Compare X21, 0
	082 JumpIfEqual {119}
	083 Move X8, [X21]
	084 Move X1, [X24]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 10
	095 Move X0, X21
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, 10
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X2, [X0+8]
	103 Move X0, X21
	104 Move W1, W19
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X1, [X22]
	107 Add X0, X31, 32
	108 Call Enumerator<Object>.Dispose, X0
	109 Move X20, [X31+112]
	110 Move X19, [X31+120]
	111 Move X22, [X31+96]
	112 Move X21, [X31+104]
	113 Move X24, [X31+80]
	114 Move X23, [X31+88]
	115 Move X30, [X31+64]
	116 Add X31, X31, 128
	117 Return 
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Move X19, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X19
	124 Call 0x3EB2AD0
	125 Move X20, [X0]
	126 Call 0x3EB2AE0
	127 Move X1, [X22]
	128 Add X0, X31, 32
	129 Call Enumerator<Object>.Dispose, X0
	130 Compare X20, 0
	131 JumpIfEqual {109}
	132 Move X0, X20
	133 Call 0x1C17F18
	134 Move X20, X31
	135 Move X19, X0
	136 Move X1, [X22]
	137 Add X0, X31, 32
	138 Call Enumerator<Object>.Dispose, X0
	139 Compare X20, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X19
	142 Call 0x1D2D690
	143 Move X0, X20
	144 Call 0x1C17F18
	145 Call 0x1991590

Method: System.Void ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B709E8 ADD X10, X10, 0x10
	0x03B709EC B.NE 0x3B709D8
	0x03B709F0 MOVZ W2, 0x9
	0x03B709F4 MOV X0, X20
	0x03B709F8 BL 0x1C5C788
	0x03B709FC B 0x3B70A10
	0x03B70A00 LDR W9, [X10]
	0x03B70A04 ADD W9, W9, 0x9
	0x03B70A08 ADD X8, X8, W9, 0x4, SXTW
	0x03B70A0C ADD X0, X8, 0x138
	0x03B70A10 LDP X8, X1, [X0]
	0x03B70A14 MOV X0, X20
	0x03B70A18 BLR X8
	0x03B70A1C LDR X0, [X19 + 0xA0]
	0x03B70A20 CBZ X0, 0x3B70DB0
	0x03B70A24 ADRP X8, 0x5EB000
	0x03B70A28 LDR X8, [X8 + 0x700]
	0x03B70A2C LDR X1, [X8]
	0x03B70A30 BL 0x28B9738
	0x03B70A34 CMP W0, 0x1
	0x03B70A38 B.LT 0x3B70B90
	0x03B70A3C LDR X0, [X19 + 0xA0]
	0x03B70A40 CBZ X0, 0x3B70DB0
	0x03B70A44 LDR X8, [X0]
	0x03B70A48 LDR X1, [X19 + 0xF0]
	0x03B70A4C LDP X9, X2, [X8 + 0x1C8]
	0x03B70A50 BLR X9
	0x03B70A54 LDR X0, [X19 + 0xF0]
	0x03B70A58 CBZ X0, 0x3B70DB0
	0x03B70A5C ADRP X8, 0x5EB000
	0x03B70A60 LDR X8, [X8 + 0x6B0]
	0x03B70A64 LDR X1, [X8]
	0x03B70A68 ADD X8, X31, 0x0
	0x03B70A6C BL 0x301CB58
	0x03B70A70 LDR V0, [X31]
	0x03B70A74 LDR X8, [X31 + 0x10]
	0x03B70A78 ADRP X22, 0x5EB000
	0x03B70A7C LDR X22, [X22 + 0x678]
	0x03B70A80 STR V0, [X31 + 0x5]
	0x03B70A84 STR X8, [X31 + 0x60]
	0x03B70A88 ADRP X23, 0x5EA000
	0x03B70A8C LDR X23, [X23 + 0x920]
	0x03B70A90 LDR X1, [X22]
	0x03B70A94 ADD X0, X31, 0x50
	0x03B70A98 BL 0x2BC4350
	0x03B70A9C TBZ X0, 0x0, 0x3B70B7C
	0x03B70AA0 LDR X0, [X31 + 0x60]
	0x03B70AA4 LDR X1, [X23]
	0x03B70AA8 BL 0x1C16E00
	0x03B70AAC MOV X21, X0
	0x03B70AB0 CBZ X0, 0x3B70A90
	0x03B70AB4 LDR X8, [X21]
	0x03B70AB8 LDR X1, [X23]
	0x03B70ABC LDRH W9, [X8 + 0x12E]
	0x03B70AC0 CBZ X9, 0x3B70AE4
	0x03B70AC4 LDR X10, [X8 + 0xB0]
	0x03B70AC8 ADD X10, X10, 0x8
	0x03B70ACC LDUR X11, [X10 - 0x8]
	0x03B70AD0 CMP X11, X1
	0x03B70AD4 B.EQ 0x3B70AF4
	0x03B70AD8 SUBS X9, X9, 0x1
	0x03B70ADC ADD X10, X10, 0x10
	0x03B70AE0 B.NE 0x3B70ACC
	0x03B70AE4 MOV X0, X21
	0x03B70AE8 MOV W2, W31
	0x03B70AEC BL 0x1C5C788
	0x03B70AF0 B 0x3B70B00
	0x03B70AF4 LDRSW X9, [X10]
	0x03B70AF8 ADD X8, X8, X9, 0x4, LSL
	0x03B70AFC ADD X0, X8, 0x138
	0x03B70B00 LDP X8, X1, [X0]
	0x03B70B04 MOV X0, X21
	0x03B70B08 BLR X8
	0x03B70B0C CMP X0, X20
	0x03B70B10 B.NE 0x3B70A90
	0x03B70B14 ADRP X8, 0x5EB000
	0x03B70B18 LDR X8, [X8 + 0x730]
	0x03B70B1C LDR X0, [X8]
	0x03B70B20 MOV X1, X20
	0x03B70B24 MOV X2, X31
	0x03B70B28 BL 0x321EFD0
	0x03B70B2C ADRP X8, 0x5EB000
	0x03B70B30 LDR X8, [X8 + 0x728]
	0x03B70B34 LDR X1, [X8]
	0x03B70B38 MOV X2, X31
	0x03B70B3C BL 0x321B938
	0x03B70B40 ADRP X8, 0x583000
	0x03B70B44 LDR X8, [X8 + 0xA28]
	0x03B70B48 MOV X21, X0
	0x03B70B4C LDR X0, [X8]
	0x03B70B50 LDR W8, [X0 + 0xE0]
	0x03B70B54 CBNZ W8, 0x3B70B5C
	0x03B70B58 BL 0x1C16DFC
	0x03B70B5C MOV X0, X21
	0x03B70B60 MOV X1, X19
	0x03B70B64 MOV X2, X31
	0x03B70B68 BL 0x3C065A4
	0x03B70B6C ADRP X8, 0x5EB000
	0x03B70B70 LDR X8, [X8 + 0x668]
	0x03B70B74 ADD X0, X31, 0x50
	0x03B70B78 B 0x3B70CEC
	0x03B70B7C ADRP X8, 0x5EB000
	0x03B70B80 LDR X8, [X8 + 0x668]
	0x03B70B84 ADD X0, X31, 0x50
	0x03B70B88 LDR X1, [X8]
	0x03B70B8C BL 0x2BC434C
	0x03B70B90 LDR X0, [X19 + 0x98]
	0x03B70B94 CBZ X0, 0x3B70DB0
	0x03B70B98 ADRP X8, 0x5EB000
	0x03B70B9C LDR X8, [X8 + 0x708]
	0x03B70BA0 LDR X1, [X8]
	0x03B70BA4 BL 0x28B9738
	0x03B70BA8 CMP W0, 0x1
	0x03B70BAC B.LT 0x3B70D0C
	0x03B70BB0 LDR X0, [X19 + 0x98]
	0x03B70BB4 CBZ X0, 0x3B70DB0
	0x03B70BB8 LDR X8, [X0]
	0x03B70BBC LDR X1, [X19 + 0xF8]
	0x03B70BC0 LDP X9, X2, [X8 + 0x1C8]
	0x03B70BC4 BLR X9
	0x03B70BC8 LDR X0, [X19 + 0xF8]
	0x03B70BCC CBZ X0, 0x3B70DB0
	0x03B70BD0 ADRP X8, 0x5EB000
	0x03B70BD4 LDR X8, [X8 + 0x6A8]
	0x03B70BD8 LDR X1, [X8]
	0x03B70BDC ADD X8, X31, 0x0
	0x03B70BE0 BL 0x301CB58
	0x03B70BE4 LDR V0, [X31]
	0x03B70BE8 LDR X8, [X31 + 0x10]
	0x03B70BEC ADRP X22, 0x5EB000
	0x03B70BF0 LDR X22, [X22 + 0x680]
	0x03B70BF4 STR V0, [X31 + 0x3]
	0x03B70BF8 STR X8, [X31 + 0x40]
	0x03B70BFC ADRP X23, 0x5EA000
	0x03B70C00 LDR X23, [X23 + 0x920]
	0x03B70C04 LDR X1, [X22]
	0x03B70C08 ADD X0, X31, 0x30
	0x03B70C0C BL 0x2BC4350
	0x03B70C10 TBZ X0, 0x0, 0x3B70CF8
	0x03B70C14 LDR X0, [X31 + 0x40]
	0x03B70C18 LDR X1, [X23]
	0x03B70C1C BL 0x1C16E00
	0x03B70C20 MOV X21, X0
	0x03B70C24 CBZ X0, 0x3B70C04
	0x03B70C28 LDR X8, [X21]
	0x03B70C2C LDR X1, [X23]
	0x03B70C30 LDRH W9, [X8 + 0x12E]
	0x03B70C34 CBZ X9, 0x3B70C58
	0x03B70C38 LDR X10, [X8 + 0xB0]
	0x03B70C3C ADD X10, X10, 0x8
	0x03B70C40 LDUR X11, [X10 - 0x8]
	0x03B70C44 CMP X11, X1
	0x03B70C48 B.EQ 0x3B70C68
	0x03B70C4C SUBS X9, X9, 0x1
	0x03B70C50 ADD X10, X10, 0x10
	0x03B70C54 B.NE 0x3B70C40
	0x03B70C58 MOV X0, X21
	0x03B70C5C MOV W2, W31
	0x03B70C60 BL 0x1C5C788
	0x03B70C64 B 0x3B70C74
	0x03B70C68 LDRSW X9, [X10]
	0x03B70C6C ADD X8, X8, X9, 0x4, LSL
	0x03B70C70 ADD X0, X8, 0x138
	0x03B70C74 LDP X8, X1, [X0]
	0x03B70C78 MOV X0, X21
	0x03B70C7C BLR X8
	0x03B70C80 CMP X0, X20
	0x03B70C84 B.NE 0x3B70C04
	0x03B70C88 ADRP X8, 0x5EB000
	0x03B70C8C LDR X8, [X8 + 0x730]
	0x03B70C90 LDR X0, [X8]
	0x03B70C94 MOV X1, X20
	0x03B70C98 MOV X2, X31
	0x03B70C9C BL 0x321EFD0
	0x03B70CA0 ADRP X8, 0x5EB000
	0x03B70CA4 LDR X8, [X8 + 0x728]
	0x03B70CA8 LDR X1, [X8]
	0x03B70CAC MOV X2, X31
	0x03B70CB0 BL 0x321B938
	0x03B70CB4 ADRP X8, 0x583000
	0x03B70CB8 LDR X8, [X8 + 0xA28]
	0x03B70CBC MOV X21, X0
	0x03B70CC0 LDR X0, [X8]
	0x03B70CC4 LDR W8, [X0 + 0xE0]
	0x03B70CC8 CBNZ W8, 0x3B70CD0
	0x03B70CCC BL 0x1C16DFC
	0x03B70CD0 MOV X0, X21
	0x03B70CD4 MOV X1, X19
	0x03B70CD8 MOV X2, X31
	0x03B70CDC BL 0x3C065A4
	0x03B70CE0 ADRP X8, 0x5EB000
	0x03B70CE4 LDR X8, [X8 + 0x670]
	0x03B70CE8 ADD X0, X31, 0x30
	0x03B70CEC LDR X1, [X8]
	0x03B70CF0 BL 0x2BC434C
	0x03B70CF4 B 0x3B70D9C
	0x03B70CF8 ADRP X8, 0x5EB000
	0x03B70CFC LDR X8, [X8 + 0x670]
	0x03B70D00 ADD X0, X31, 0x30
	0x03B70D04 LDR X1, [X8]
	0x03B70D08 BL 0x2BC434C
	0x03B70D0C LDR X0, [X19 + 0xA0]
	0x03B70D10 CBZ X0, 0x3B70DB0
	0x03B70D14 LDR X8, [X0]
	0x03B70D18 MOV X1, X20
	0x03B70D1C LDP X9, X2, [X8 + 0x1A8]
	0x03B70D20 BLR X9
	0x03B70D24 TBZ X0, 0x0, 0x3B70D9C
	0x03B70D28 LDR X0, [X19 + 0xE0]
	0x03B70D2C CBZ X0, 0x3B70DB0
	0x03B70D30 ADRP X8, 0x5EB000
	0x03B70D34 LDR X8, [X8 + 0x710]
	0x03B70D38 MOV X1, X20
	0x03B70D3C LDR X2, [X8]
	0x03B70D40 BL 0x2DBE67C
	0x03B70D44 LDR X0, [X19 + 0x140]
	0x03B70D48 CBZ X0, 0x3B70DB0
	0x03B70D4C ADRP X8, 0x5EB000
	0x03B70D50 LDR X8, [X8 + 0x718]
	0x03B70D54 ADD X1, X31, 0x28
	0x03B70D58 LDR X2, [X8]
	0x03B70D5C BL 0x2EF1058
	0x03B70D60 MOV X8, X1
	0x03B70D64 LDR X1, [X31 + 0x28]
	0x03B70D68 STP X0, X8, [X31 + 0x18]
	0x03B70D6C CBZ X1, 0x3B70DB4
	0x03B70D70 STP X19, X20, [X1 + 0x10]
	0x03B70D74 LDR X8, [X19]
	0x03B70D78 LDR X9, [X8 + 0x288]
	0x03B70D7C LDR X2, [X8 + 0x290]
	0x03B70D80 MOV X0, X19
	0x03B70D84 BLR X9
	0x03B70D88 ADRP X8, 0x5EB000
	0x03B70D8C LDR X8, [X8 + 0x720]
	0x03B70D90 ADD X0, X31, 0x18
	0x03B70D94 LDR X1, [X8]
	0x03B70D98 BL 0x24A6DD0
	0x03B70D9C LDP X20, X19, [X31 + 0x90]
	0x03B70DA0 LDP X22, X21, [X31 + 0x80]
	0x03B70DA4 LDP X30, X23, [X31 + 0x70]
	0x03B70DA8 ADD X31, X31, 0xA0
	0x03B70DAC RET
	0x03B70DB0 BL 0x1C16F20
	0x03B70DB4 BL 0x1C16F20
	0x03B70DB8 B 0x3B70E3C
	0x03B70DBC B 0x3B70EA8
	0x03B70DC0 B 0x3B70DC4
	0x03B70DC4 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X21, 0x873000
	014 Move W8, [X21+2594]
	015 Move W19, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0x5EC000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x5EC000
	025 Move X0, [X0+1736]
	026 Call 0x1C17CF4
	027 Move X0, 0x5EC000
	028 Move X0, [X0+1648]
	029 Call 0x1C17CF4
	030 Move X0, 0x5EC000
	031 Move X0, [X0+216]
	032 Call 0x1C17CF4
	033 Move X0, 0x5EC000
	034 Move X0, [X0+1664]
	035 Call 0x1C17CF4
	036 Move X0, 0x5EC000
	037 Move X0, [X0+224]
	038 Call 0x1C17CF4
	039 Move X0, 0x5EC000
	040 Move X0, [X0+232]
	041 Call 0x1C17CF4
	042 Move X0, 0x5EC000
	043 Move X0, [X0+1680]
	044 Call 0x1C17CF4
	045 Move X0, 0x5EB000
	046 Move X0, [X0+3032]
	047 Call 0x1C17CF4
	048 Move X0, 0x5EC000
	049 Move X0, [X0+1744]
	050 Call 0x1C17CF4
	051 Move X0, 0x5EC000
	052 Move X0, [X0+1704]
	053 Call 0x1C17CF4
	054 Move X0, 0x5EC000
	055 Move X0, [X0+240]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+2594], W8
	059 Move [X31+64], X31
	060 Move [X31+72], X31
	061 Move [X31+80], X31
	062 Move [X31+32], X31
	063 Move [X31+40], X31
	064 Move [X31+48], X31
	065 Move X8, [X20+168]
	066 Compare X8, 0
	067 JumpIfEqual {226}
	068 Move X0, [X8+16]
	069 Compare X0, 0
	070 JumpIfEqual {226}
	071 Move X8, 0x5EC000
	072 Move X8, [X8+240]
	073 Move X22, 0x5EC000
	074 Move X28, 0x5EB000
	075 Move X26, 0x5EC000
	076 Move X24, 0x5EC000
	077 Move X22, [X22+224]
	078 Move X28, [X28+3032]
	079 Move X26, [X26+1704]
	080 Move X24, [X24+1664]
	081 Move X1, [X8]
	082 Move X25, 0x5EC000
	083 Move X23, 0x5EC000
	084 Move X27, 0x5EC000
	085 Move X25, [X25+1744]
	086 Move X23, [X23+1648]
	087 Move X27, [X27+216]
	088 Add X8, X31, 8
	089 Call List`1<Object>.GetEnumerator, X0
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 Move X8, [X31+24]
	092 Move [X31+4], V0
	093 Move [X31+80], X8
	094 Move X1, [X22]
	095 Add X0, X31, 64
	096 Call Enumerator<Object>.MoveNext, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {143}
	101 Move X0, [X20+168]
	102 Compare X0, 0
	103 JumpIfEqual {224}
	104 Move X8, [X0]
	105 Move X21, [X31+80]
	106 Move X9, [X8+392]
	107 Move X2, [X8+400]
	108 Move X1, X21
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {94}
	114 Move X1, [X28]
	115 Move X0, X21
	116 Call 0x1C17E00
	117 Move X21, X0
	118 Compare X0, 0
	119 JumpIfEqual {94}
	120 Move X8, [X21]
	121 Move X1, [X28]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move W2, 2
	132 Move X0, X21
	133 Call 0x1C5D788
	134 Move W9, [X10]
	135 Add W9, W9, 2
	136 Add X8, X8, W9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X2, [X0+8]
	140 Move X0, X21
	141 Move W1, W19
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, [X27]
	144 Add X0, X31, 64
	145 Call Enumerator<Object>.Dispose, X0
	146 Move X8, [X20+152]
	147 Compare X8, 0
	148 JumpIfEqual {226}
	149 Move X0, [X8+16]
	150 Compare X0, 0
	151 JumpIfEqual {226}
	152 Move X1, [X26]
	153 Add X8, X31, 8
	154 Call List`1<Object>.GetEnumerator, X0
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 Move X8, [X31+24]
	157 Move [X31+2], V0
	158 Move [X31+48], X8
	159 Move X1, [X24]
	160 Add X0, X31, 32
	161 Call Enumerator<Object>.MoveNext, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {208}
	166 Move X0, [X20+152]
	167 Compare X0, 0
	168 JumpIfEqual {225}
	169 Move X8, [X0]
	170 Move X21, [X31+48]
	171 Move X9, [X8+392]
	172 Move X2, [X8+400]
	173 Move X1, X21
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {159}
	179 Move X1, [X25]
	180 Move X0, X21
	181 Call 0x1C17E00
	182 Move X21, X0
	183 Compare X0, 0
	184 JumpIfEqual {159}
	185 Move X8, [X21]
	186 Move X1, [X25]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 2
	197 Move X0, X21
	198 Call 0x1C5D788
	199 Move W9, [X10]
	200 Add W9, W9, 2
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X2, [X0+8]
	205 Move X0, X21
	206 Move W1, W19
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X1, [X23]
	209 Add X0, X31, 32
	210 Call Enumerator<Object>.Dispose, X0
	211 Move X20, [X31+176]
	212 Move X19, [X31+184]
	213 Move X22, [X31+160]
	214 Move X21, [X31+168]
	215 Move X24, [X31+144]
	216 Move X23, [X31+152]
	217 Move X26, [X31+128]
	218 Move X25, [X31+136]
	219 Move X28, [X31+112]
	220 Move X27, [X31+120]
	221 Move X30, [X31+96]
	222 Add X31, X31, 192
	223 Return 
	224 Call 0x1C17F20
	225 Call 0x1C17F20
	226 Call 0x1C17F20
	227 Move X21, X0
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, X21
	230 Call 0x3EB2AD0
	231 Move X19, [X0]
	232 Call 0x3EB2AE0
	233 Move X1, [X23]
	234 Add X0, X31, 32
	235 Call Enumerator<Object>.Dispose, X0
	236 Compare X19, 0
	237 JumpIfEqual {211}
	238 Move X0, X19
	239 Call 0x1C17F18
	240 Move X19, X31
	241 Move X21, X0
	242 Move X1, [X23]
	243 Add X0, X31, 32
	244 Call Enumerator<Object>.Dispose, X0
	245 Compare X19, 0
	246 JumpIfEqual {269}
	247 Move X0, X19
	248 Call 0x1C17F18
	249 Move X21, X0
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, X21
	252 Call 0x3EB2AD0
	253 Move X22, [X0]
	254 Call 0x3EB2AE0
	255 Move X1, [X27]
	256 Add X0, X31, 64
	257 Call Enumerator<Object>.Dispose, X0
	258 Compare X22, 0
	259 JumpIfEqual {146}
	260 Move X0, X22
	261 Call 0x1C17F18
	262 Move X22, X31
	263 Move X21, X0
	264 Move X1, [X27]
	265 Add X0, X31, 64
	266 Call Enumerator<Object>.Dispose, X0
	267 Compare X22, 0
	268 JumpIfNotEqual {271}
	269 Move X0, X21
	270 Call 0x1D2D690
	271 Move X0, X22
	272 Call 0x1C17F18
	273 Call 0x1991590

Method: System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B70DC8 CMP W1, 0x1
	0x03B70DCC B.NE 0x3B70E00
	0x03B70DD0 MOV X0, X21
	0x03B70DD4 BL 0x3EB1AD0
	0x03B70DD8 LDR X19, [X0]
	0x03B70DDC BL 0x3EB1AE0
	0x03B70DE0 ADRP X8, 0x5EB000
	0x03B70DE4 LDR X8, [X8 + 0x720]
	0x03B70DE8 ADD X0, X31, 0x18
	0x03B70DEC LDR X1, [X8]
	0x03B70DF0 BL 0x24A6DD0
	0x03B70DF4 CBZ X19, 0x3B70D9C
	0x03B70DF8 MOV X0, X19
	0x03B70DFC BL 0x1C16F18
	0x03B70E00 MOV X19, X31
	0x03B70E04 B 0x3B70E0C
	0x03B70E08 MOV X21, X0
	0x03B70E0C ADRP X8, 0x5EB000
	0x03B70E10 LDR X8, [X8 + 0x720]
	0x03B70E14 LDR X1, [X8]
	0x03B70E18 ADD X0, X31, 0x18
	0x03B70E1C BL 0x24A6DD0
	0x03B70E20 CBZ X19, 0x3B70F08
	0x03B70E24 MOV X0, X19
	0x03B70E28 BL 0x1C16F18
	0x03B70E2C B 0x3B70E3C
	0x03B70E30 B 0x3B70EA8
	0x03B70E34 B 0x3B70E3C
	0x03B70E38 B 0x3B70E3C
	0x03B70E3C MOV X21, X0
	0x03B70E40 CMP W1, 0x1
	0x03B70E44 B.NE 0x3B70E74
	0x03B70E48 MOV X0, X21
	0x03B70E4C BL 0x3EB1AD0
	0x03B70E50 LDR X22, [X0]
	0x03B70E54 BL 0x3EB1AE0
	0x03B70E58 ADRP X8, 0x5EB000
	0x03B70E5C LDR X8, [X8 + 0x670]
	0x03B70E60 ADD X0, X31, 0x30
	0x03B70E64 LDR X1, [X8]
	0x03B70E68 BL 0x2BC434C
	0x03B70E6C CBZ X22, 0x3B70D0C
	0x03B70E70 B 0x3B70EDC
	0x03B70E74 MOV X22, X31
	0x03B70E78 B 0x3B70E80
	0x03B70E7C MOV X21, X0
	0x03B70E80 ADRP X8, 0x5EB000
	0x03B70E84 LDR X8, [X8 + 0x670]
	0x03B70E88 LDR X1, [X8]
	0x03B70E8C ADD X0, X31, 0x30
	0x03B70E90 BL 0x2BC434C
	0x03B70E94 CBZ X22, 0x3B70F08
	0x03B70E98 MOV X0, X22
	0x03B70E9C BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x873000
	007 Move W8, [X22+2595]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5EB000
	016 Move X0, [X0+800]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2595], W8
	020 Compare X20, 0
	021 JumpIfEqual {65}
	022 Move X10, 0x5EB000
	023 Move X8, [X20]
	024 Move X10, [X10+800]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 4
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 4
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {58}
	050 Move X0, X21
	051 Move X1, X20
	052 Move X2, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move W0, W31
	063 Move X30, [X31+48]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean IsHoverPossible(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B70EA0 B 0x3B70EA8
	0x03B70EA4 B 0x3B70EA8
	0x03B70EA8 MOV X21, X0
	0x03B70EAC CMP W1, 0x1
	0x03B70EB0 B.NE 0x3B70EE4
	0x03B70EB4 MOV X0, X21
	0x03B70EB8 BL 0x3EB1AD0
	0x03B70EBC LDR X22, [X0]
	0x03B70EC0 BL 0x3EB1AE0
	0x03B70EC4 ADRP X8, 0x5EB000
	0x03B70EC8 LDR X8, [X8 + 0x668]
	0x03B70ECC ADD X0, X31, 0x50
	0x03B70ED0 LDR X1, [X8]
	0x03B70ED4 BL 0x2BC434C
	0x03B70ED8 CBZ X22, 0x3B70B90
	0x03B70EDC MOV X0, X22
	0x03B70EE0 BL 0x1C16F18
	0x03B70EE4 MOV X22, X31
	0x03B70EE8 B 0x3B70EF0
	0x03B70EEC MOV X21, X0
	0x03B70EF0 ADRP X8, 0x5EB000
	0x03B70EF4 LDR X8, [X8 + 0x668]
	0x03B70EF8 LDR X1, [X8]
	0x03B70EFC ADD X0, X31, 0x50
	0x03B70F00 BL 0x2BC434C
	0x03B70F04 CBNZ X22, 0x3B70F10
	0x03B70F08 MOV X0, X21
	0x03B70F0C BL 0x1D2C690
	0x03B70F10 MOV X0, X22
	0x03B70F14 BL 0x1C16F18
	0x03B70F18 BL 0x1990590
	0x03B70F1C STP X30, X21, [X31 - 0x20]!
	0x03B70F20 STP X20, X19, [X31 + 0x10]
	0x03B70F24 ADRP X21, 0x872000
	0x03B70F28 LDRB W8, [X21 + 0xA2B]
	0x03B70F2C MOV X19, X1
	0x03B70F30 MOV X20, X0
	0x03B70F34 TBNZ X8, 0x0, 0x3B70F4C
	0x03B70F38 ADRP X0, 0x5EA000
	0x03B70F3C LDR X0, [X0 + 0x938]
	0x03B70F40 BL 0x1C16CF4
	0x03B70F44 MOVZ W8, 0x1
	0x03B70F48 STRB W8, [X21 + 0xA2B]
	0x03B70F4C CBZ X19, 0x3B70FF0
	0x03B70F50 LDR X21, [X19 + 0x18]
	0x03B70F54 CBZ X21, 0x3B70FF0
	0x03B70F58 ADRP X10, 0x5EA000
	0x03B70F5C LDR X8, [X21]
	0x03B70F60 LDR X10, [X10 + 0x938]
	0x03B70F64 LDRH W9, [X8 + 0x12E]
	0x03B70F68 LDR X1, [X10]
	0x03B70F6C CBZ X9, 0x3B70F90
	0x03B70F70 LDR X10, [X8 + 0xB0]
	0x03B70F74 ADD X10, X10, 0x8
	0x03B70F78 LDUR X11, [X10 - 0x8]
	0x03B70F7C CMP X11, X1
	0x03B70F80 B.EQ 0x3B70FA0
	0x03B70F84 SUBS X9, X9, 0x1
	0x03B70F88 ADD X10, X10, 0x10
	0x03B70F8C B.NE 0x3B70F78
	0x03B70F90 MOVZ W2, 0xA
	0x03B70F94 MOV X0, X21
	0x03B70F98 BL 0x1C5C788
	0x03B70F9C B 0x3B70FB0
	0x03B70FA0 LDR W9, [X10]
	0x03B70FA4 ADD W9, W9, 0xA
	0x03B70FA8 ADD X8, X8, W9, 0x4, SXTW
	0x03B70FAC ADD X0, X8, 0x138
	0x03B70FB0 LDP X8, X2, [X0]
	0x03B70FB4 MOV X0, X21
	0x03B70FB8 MOV X1, X19
	0x03B70FBC BLR X8
	0x03B70FC0 LDR X8, [X20 + 0x28]
	0x03B70FC4 CBZ X8, 0x3B70FE4
	0x03B70FC8 LDR X3, [X8 + 0x18]
	0x03B70FCC LDR X0, [X8 + 0x40]
	0x03B70FD0 LDR X2, [X8 + 0x28]
	0x03B70FD4 MOV X1, X19
	0x03B70FD8 LDP X20, X19, [X31 + 0x10]
	0x03B70FDC LDP X30, X21, [X31], #0x20
	0x03B70FE0 BR X3
	0x03B70FE4 LDP X20, X19, [X31 + 0x10]
	0x03B70FE8 LDP X30, X21, [X31], #0x20
	0x03B70FEC RET
	0x03B70FF0 BL 0x1C16F20
	0x03B70FF4 STR X30, [X31 - 0x10]!
	0x03B70FF8 LDR X0, [X0 + 0xA0]
	0x03B70FFC CBZ X0, 0x3B71010
	0x03B71000 LDR X8, [X0]
	0x03B71004 LDP X3, X2, [X8 + 0x1C8]
	0x03B71008 LDR X30, [X31], #0x10
	0x03B7100C BR X3
	0x03B71010 BL 0x1C16F20
	0x03B71014 SUB X31, X31, 0x70
	0x03B71018 STP X30, X23, [X31 + 0x40]
	0x03B7101C STP X22, X21, [X31 + 0x50]
	0x03B71020 STP X20, X19, [X31 + 0x60]
	0x03B71024 ADRP X21, 0x871000
	0x03B71028 LDRB W8, [X21 + 0xA2C]
	0x03B7102C MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x873000
	008 Move X23, 0x5EB000
	009 Move W8, [X22+2596]
	010 Move X23, [X23+3616]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5EB000
	019 Move X0, [X0+328]
	020 Call 0x1C17CF4
	021 Move X0, 0x5EB000
	022 Move X0, [X0+800]
	023 Call 0x1C17CF4
	024 Move X0, 0x5EB000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2596], W8
	029 Move X0, [X23]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X20
	036 Call XRInteractionManager.HasInteractionLayerOverlap, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {99}
	041 Move X0, [X21+104]
	042 Move X1, X19
	043 Move X2, X20
	044 Move X3, X31
	045 Call XRFilterUtility.Process, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {99}
	050 Compare X19, 0
	051 JumpIfEqual {122}
	052 Move X10, 0x5EB000
	053 Move X8, [X19]
	054 Move X10, [X10+800]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move W2, 5
	066 Move X0, X19
	067 Call 0x1C5D788
	068 Move W9, [X10]
	069 Add W9, W9, 5
	070 Add X8, X8, W9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X2, [X0+8]
	074 Move X0, X19
	075 Move X1, X20
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {99}
	081 Compare X20, 0
	082 JumpIfEqual {122}
	083 Move X10, 0x5EB000
	084 Move X8, [X20]
	085 Move X10, [X10+328]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 6
	097 Move X0, X20
	098 Call 0x1C5D788
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move W0, W31
	104 Move X30, [X31+48]
	105 Move X23, [X31+56]
	106 Return X0
	107 Move W9, [X10]
	108 Add W9, W9, 6
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X3, [X0]
	112 Move X2, [X0+8]
	113 Move X0, X20
	114 Move X1, X19
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 CallNoReturn X3
	122 Call 0x1C17F20

Method: System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B7116C ADD X0, X31, 0x20
	0x03B71170 BL 0x2BC434C
	0x03B71174 MOV X0, X20
	0x03B71178 LDP X20, X19, [X31 + 0x60]
	0x03B7117C LDP X22, X21, [X31 + 0x50]
	0x03B71180 LDP X30, X23, [X31 + 0x40]
	0x03B71184 ADD X31, X31, 0x70
	0x03B71188 RET
	0x03B7118C BL 0x1C16F20
	0x03B71190 BL 0x1C16F20
	0x03B71194 B 0x3B711A0
	0x03B71198 B 0x3B711A0
	0x03B7119C B 0x3B711A0
	0x03B711A0 MOV X19, X0
	0x03B711A4 CMP W1, 0x1
	0x03B711A8 B.NE 0x3B711D4
	0x03B711AC MOV X0, X19
	0x03B711B0 BL 0x3EB1AD0
	0x03B711B4 LDR X20, [X0]
	0x03B711B8 BL 0x3EB1AE0
	0x03B711BC LDR X1, [X21]
	0x03B711C0 ADD X0, X31, 0x20
	0x03B711C4 BL 0x2BC434C
	0x03B711C8 CBZ X20, 0x3B71174
	0x03B711CC MOV X0, X20
	0x03B711D0 BL 0x1C16F18
	0x03B711D4 MOV X20, X31
	0x03B711D8 B 0x3B711E0
	0x03B711DC MOV X19, X0
	0x03B711E0 LDR X1, [X21]
	0x03B711E4 ADD X0, X31, 0x20
	0x03B711E8 BL 0x2BC434C
	0x03B711EC CBNZ X20, 0x3B711F8
	0x03B711F0 MOV X0, X19
	0x03B711F4 BL 0x1D2C690
	0x03B711F8 MOV X0, X20
	0x03B711FC BL 0x1C16F18
	0x03B71200 BL 0x1990590
	0x03B71204 SUB X31, X31, 0x40
	0x03B71208 STR X30, [X31 + 0x10]
	0x03B7120C STP X22, X21, [X31 + 0x20]
	0x03B71210 STP X20, X19, [X31 + 0x30]
	0x03B71214 ADRP X21, 0x871000
	0x03B71218 ADRP X22, 0x5E9000
	0x03B7121C LDRB W8, [X21 + 0xA2D]
	0x03B71220 LDR X22, [X22 + 0x920]
	0x03B71224 MOV X20, X1
	0x03B71228 MOV X19, X0
	0x03B7122C TBNZ X8, 0x0, 0x3B7128C
	0x03B71230 ADRP X0, 0x582000
	0x03B71234 LDR X0, [X0 + 0xA28]
	0x03B71238 BL 0x1C16CF4
	0x03B7123C ADRP X0, 0x5EA000
	0x03B71240 LDR X0, [X0 + 0x738]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x872000
	007 Move W8, [X22+2597]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5EA000
	016 Move X0, [X0+808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2597], W8
	020 Compare X20, 0
	021 JumpIfEqual {65}
	022 Move X10, 0x5EA000
	023 Move X8, [X20]
	024 Move X10, [X10+808]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 5
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 5
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {58}
	050 Move X0, X21
	051 Move X1, X20
	052 Move X2, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move W0, W31
	063 Move X30, [X31+48]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean IsSelectPossible(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B71244 BL 0x1C16CF4
	0x03B71248 ADRP X0, 0x5E9000
	0x03B7124C LDR X0, [X0 + 0x920]
	0x03B71250 BL 0x1C16CF4
	0x03B71254 ADRP X0, 0x5EA000
	0x03B71258 LDR X0, [X0 + 0x740]
	0x03B7125C BL 0x1C16CF4
	0x03B71260 ADRP X0, 0x5EA000
	0x03B71264 LDR X0, [X0 + 0x748]
	0x03B71268 BL 0x1C16CF4
	0x03B7126C ADRP X0, 0x5EA000
	0x03B71270 LDR X0, [X0 + 0x6F0]
	0x03B71274 BL 0x1C16CF4
	0x03B71278 ADRP X0, 0x5EA000
	0x03B7127C LDR X0, [X0 + 0x6F8]
	0x03B71280 BL 0x1C16CF4
	0x03B71284 MOVZ W8, 0x1
	0x03B71288 STRB W8, [X21 + 0xA2D]
	0x03B7128C LDR X1, [X22]
	0x03B71290 MOV X0, X20
	0x03B71294 STR X31, [X31 + 0x18]
	0x03B71298 STP X31, X31, [X31]
	0x03B7129C BL 0x1C16E00
	0x03B712A0 MOV X21, X0
	0x03B712A4 CBZ X0, 0x3B7132C
	0x03B712A8 LDR X8, [X21]
	0x03B712AC LDR X1, [X22]
	0x03B712B0 LDRH W9, [X8 + 0x12E]
	0x03B712B4 CBZ X9, 0x3B712D8
	0x03B712B8 LDR X10, [X8 + 0xB0]
	0x03B712BC ADD X10, X10, 0x8
	0x03B712C0 LDUR X11, [X10 - 0x8]
	0x03B712C4 CMP X11, X1
	0x03B712C8 B.EQ 0x3B712E8
	0x03B712CC SUBS X9, X9, 0x1
	0x03B712D0 ADD X10, X10, 0x10
	0x03B712D4 B.NE 0x3B712C0
	0x03B712D8 MOV X0, X21
	0x03B712DC MOV W2, W31
	0x03B712E0 BL 0x1C5C788
	0x03B712E4 B 0x3B712F4
	0x03B712E8 LDRSW X9, [X10]
	0x03B712EC ADD X8, X8, X9, 0x4, LSL
	0x03B712F0 ADD X0, X8, 0x138
	0x03B712F4 LDP X8, X1, [X0]
	0x03B712F8 MOV X0, X21
	0x03B712FC BLR X8
	0x03B71300 MOV X21, X0
	0x03B71304 CBZ X0, 0x3B7132C
	0x03B71308 LDR X0, [X19 + 0xA0]
	0x03B7130C CBZ X0, 0x3B7143C
	0x03B71310 LDR X8, [X0]
	0x03B71314 MOV X1, X21
	0x03B71318 LDP X9, X2, [X8 + 0x178]
	0x03B7131C BLR X9
	0x03B71320 TBZ X0, 0x0, 0x3B713CC
	0x03B71324 MOV W22, W31
	0x03B71328 B 0x3B71330
	0x03B7132C MOVZ W22, 0x1
	0x03B71330 LDR X0, [X19 + 0x98]
	0x03B71334 CBZ X0, 0x3B7143C
	0x03B71338 LDR X8, [X0]
	0x03B7133C MOV X1, X20
	0x03B71340 LDP X9, X2, [X8 + 0x198]
	0x03B71344 BLR X9
	0x03B71348 TBZ X0, 0x0, 0x3B71428
	0x03B7134C TBNZ X22, 0x0, 0x3B7136C
	0x03B71350 LDR X0, [X19 + 0xD8]
	0x03B71354 CBZ X0, 0x3B7143C
	0x03B71358 ADRP X8, 0x5EA000
	0x03B7135C LDR X8, [X8 + 0x738]
	0x03B71360 MOV X1, X20
	0x03B71364 LDR X2, [X8]
	0x03B71368 BL 0x2DBEF30
	0x03B7136C LDR X0, [X19 + 0x148]
	0x03B71370 CBZ X0, 0x3B7143C
	0x03B71374 ADRP X8, 0x5EA000
	0x03B71378 LDR X8, [X8 + 0x740]
	0x03B7137C ADD X1, X31, 0x18
	0x03B71380 LDR X2, [X8]
	0x03B71384 BL 0x2EF1058
	0x03B71388 MOV X8, X1
	0x03B7138C LDR X1, [X31 + 0x18]
	0x03B71390 STP X0, X8, [X31]
	0x03B71394 CBZ X1, 0x3B71440
	0x03B71398 STP X19, X20, [X1 + 0x10]
	0x03B7139C STR X21, [X1 + 0x20]
	0x03B713A0 LDR X8, [X19]
	0x03B713A4 LDR X9, [X8 + 0x2A8]
	0x03B713A8 LDR X2, [X8 + 0x2B0]
	0x03B713AC MOV X0, X19
	0x03B713B0 BLR X9
	0x03B713B4 ADRP X8, 0x5EA000
	0x03B713B8 LDR X8, [X8 + 0x748]
	0x03B713BC ADD X0, X31, 0x0
	0x03B713C0 LDR X1, [X8]
	0x03B713C4 BL 0x24A6DD0
	0x03B713C8 B 0x3B71428
	0x03B713CC ADRP X8, 0x5EA000
	0x03B713D0 LDR X8, [X8 + 0x6F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x872000
	008 Move X23, 0x5EA000
	009 Move W8, [X22+2598]
	010 Move X23, [X23+3616]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5EA000
	019 Move X0, [X0+352]
	020 Call 0x1C17CF4
	021 Move X0, 0x5EA000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move X0, 0x5EA000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2598], W8
	029 Move X0, [X23]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X20
	036 Call XRInteractionManager.HasInteractionLayerOverlap, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {99}
	041 Move X0, [X21+120]
	042 Move X1, X19
	043 Move X2, X20
	044 Move X3, X31
	045 Call XRFilterUtility.Process, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {99}
	050 Compare X19, 0
	051 JumpIfEqual {122}
	052 Move X10, 0x5EA000
	053 Move X8, [X19]
	054 Move X10, [X10+808]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move W2, 7
	066 Move X0, X19
	067 Call 0x1C5D788
	068 Move W9, [X10]
	069 Add W9, W9, 7
	070 Add X8, X8, W9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X2, [X0+8]
	074 Move X0, X19
	075 Move X1, X20
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {99}
	081 Compare X20, 0
	082 JumpIfEqual {122}
	083 Move X10, 0x5EA000
	084 Move X8, [X20]
	085 Move X10, [X10+352]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 8
	097 Move X0, X20
	098 Call 0x1C5D788
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move W0, W31
	104 Move X30, [X31+48]
	105 Move X23, [X31+56]
	106 Return X0
	107 Move W9, [X10]
	108 Add W9, W9, 8
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X3, [X0]
	112 Move X2, [X0+8]
	113 Move X0, X20
	114 Move X1, X19
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 CallNoReturn X3
	122 Call 0x1C17F20

Method: System.Boolean CanFocus(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B713E0 BL 0x321EFD0

ISIL:
No ISIL was generated
Method: System.Boolean IsFocusPossible(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B713E4 ADRP X8, 0x5EA000
	0x03B713E8 LDR X8, [X8 + 0x6F8]
	0x03B713EC MOV X2, X31
	0x03B713F0 LDR X1, [X8]
	0x03B713F4 BL 0x321B938
	0x03B713F8 ADRP X8, 0x582000
	0x03B713FC LDR X8, [X8 + 0xA28]
	0x03B71400 MOV X20, X0
	0x03B71404 LDR X8, [X8]
	0x03B71408 LDR W9, [X8 + 0xE0]
	0x03B7140C CBNZ W9, 0x3B71418
	0x03B71410 MOV X0, X8
	0x03B71414 BL 0x1C16DFC
	0x03B71418 MOV X0, X20
	0x03B7141C MOV X1, X19
	0x03B71420 MOV X2, X31
	0x03B71424 BL 0x3C065A4
	0x03B71428 LDP X20, X19, [X31 + 0x30]
	0x03B7142C LDP X22, X21, [X31 + 0x20]
	0x03B71430 LDR X30, [X31 + 0x10]
	0x03B71434 ADD X31, X31, 0x40
	0x03B71438 RET
	0x03B7143C BL 0x1C16F20
	0x03B71440 BL 0x1C16F20
	0x03B71444 B 0x3B71448
	0x03B71448 MOV X20, X0
	0x03B7144C CMP W1, 0x1
	0x03B71450 B.NE 0x3B71484
	0x03B71454 MOV X0, X20
	0x03B71458 BL 0x3EB1AD0
	0x03B7145C LDR X19, [X0]
	0x03B71460 BL 0x3EB1AE0
	0x03B71464 ADRP X8, 0x5EA000
	0x03B71468 LDR X8, [X8 + 0x748]
	0x03B7146C ADD X0, X31, 0x0
	0x03B71470 LDR X1, [X8]
	0x03B71474 BL 0x24A6DD0
	0x03B71478 CBZ X19, 0x3B71428
	0x03B7147C MOV X0, X19
	0x03B71480 BL 0x1C16F18
	0x03B71484 MOV X19, X31
	0x03B71488 B 0x3B71490
	0x03B7148C MOV X20, X0
	0x03B71490 ADRP X8, 0x5EA000
	0x03B71494 LDR X8, [X8 + 0x748]
	0x03B71498 LDR X1, [X8]
	0x03B7149C ADD X0, X31, 0x0
	0x03B714A0 BL 0x24A6DD0
	0x03B714A4 CBNZ X19, 0x3B714B0
	0x03B714A8 MOV X0, X20
	0x03B714AC BL 0x1D2C690
	0x03B714B0 MOV X0, X19
	0x03B714B4 BL 0x1C16F18
	0x03B714B8 BL 0x1990590
	0x03B714BC STP X30, X21, [X31 - 0x20]!
	0x03B714C0 STP X20, X19, [X31 + 0x10]
	0x03B714C4 ADRP X21, 0x871000
	0x03B714C8 LDRB W8, [X21 + 0xA2E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x872000
	006 Move W8, [X21+2599]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5EA000
	014 Move X0, [X0+304]
	015 Call 0x1C17CF4
	016 Move X0, 0x5EA000
	017 Move X0, [X0+3616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2599], W8
	021 Compare X19, 0
	022 JumpIfEqual {72}
	023 Move X10, 0x5EA000
	024 Move X8, [X19]
	025 Move X10, [X10+304]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 8
	037 Move X0, X19
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 8
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {66}
	051 Move X8, 0x5EA000
	052 Move X8, [X8+3616]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X19
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call XRInteractionManager.HasInteractionLayerOverlap, X0, X1
	065 Return X0
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move W0, W31
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Return X0
	072 Call 0x1C17F20

Method: System.Void RegisterInteractionGroup(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup)

Disassembly:
	0x03B714CC MOV X19, X1
	0x03B714D0 MOV X20, X0
	0x03B714D4 TBNZ X8, 0x0, 0x3B714EC
	0x03B714D8 ADRP X0, 0x5E9000
	0x03B714DC LDR X0, [X0 + 0x2F8]
	0x03B714E0 BL 0x1C16CF4
	0x03B714E4 MOVZ W8, 0x1
	0x03B714E8 STRB W8, [X21 + 0xA2E]
	0x03B714EC CBZ X19, 0x3B71590
	0x03B714F0 LDR X21, [X19 + 0x18]
	0x03B714F4 CBZ X21, 0x3B71590
	0x03B714F8 ADRP X10, 0x5E9000
	0x03B714FC LDR X8, [X21]
	0x03B71500 LDR X10, [X10 + 0x2F8]
	0x03B71504 LDRH W9, [X8 + 0x12E]
	0x03B71508 LDR X1, [X10]
	0x03B7150C CBZ X9, 0x3B71530
	0x03B71510 LDR X10, [X8 + 0xB0]
	0x03B71514 ADD X10, X10, 0x8
	0x03B71518 LDUR X11, [X10 - 0x8]
	0x03B7151C CMP X11, X1
	0x03B71520 B.EQ 0x3B71540
	0x03B71524 SUBS X9, X9, 0x1
	0x03B71528 ADD X10, X10, 0x10
	0x03B7152C B.NE 0x3B71518
	0x03B71530 MOVZ W2, 0x8
	0x03B71534 MOV X0, X21
	0x03B71538 BL 0x1C5C788
	0x03B7153C B 0x3B71550
	0x03B71540 LDR W9, [X10]
	0x03B71544 ADD W9, W9, 0x8
	0x03B71548 ADD X8, X8, W9, 0x4, SXTW
	0x03B7154C ADD X0, X8, 0x138
	0x03B71550 LDP X8, X2, [X0]
	0x03B71554 MOV X0, X21
	0x03B71558 MOV X1, X19
	0x03B7155C BLR X8
	0x03B71560 LDR X8, [X20 + 0x30]
	0x03B71564 CBZ X8, 0x3B71584
	0x03B71568 LDR X3, [X8 + 0x18]
	0x03B7156C LDR X0, [X8 + 0x40]
	0x03B71570 LDR X2, [X8 + 0x28]
	0x03B71574 MOV X1, X19
	0x03B71578 LDP X20, X19, [X31 + 0x10]
	0x03B7157C LDP X30, X21, [X31], #0x20
	0x03B71580 BR X3
	0x03B71584 LDP X20, X19, [X31 + 0x10]
	0x03B71588 LDP X30, X21, [X31], #0x20
	0x03B7158C RET
	0x03B71590 BL 0x1C16F20
	0x03B71594 SUB X31, X31, 0x40
	0x03B71598 STP X30, X21, [X31 + 0x20]
	0x03B7159C STP X20, X19, [X31 + 0x30]
	0x03B715A0 ADRP X21, 0x871000
	0x03B715A4 LDRB W8, [X21 + 0xA2F]
	0x03B715A8 MOV X20, X1
	0x03B715AC MOV X19, X0
	0x03B715B0 TBNZ X8, 0x0, 0x3B71610
	0x03B715B4 ADRP X0, 0x5EA000
	0x03B715B8 LDR X0, [X0 + 0x750]
	0x03B715BC BL 0x1C16CF4
	0x03B715C0 ADRP X0, 0x5E9000
	0x03B715C4 LDR X0, [X0 + 0x320]
	0x03B715C8 BL 0x1C16CF4
	0x03B715CC ADRP X0, 0x5E9000
	0x03B715D0 LDR X0, [X0 + 0x2F8]
	0x03B715D4 BL 0x1C16CF4
	0x03B715D8 ADRP X0, 0x5E9000
	0x03B715DC LDR X0, [X0 + 0x328]
	0x03B715E0 BL 0x1C16CF4
	0x03B715E4 ADRP X0, 0x5EA000
	0x03B715E8 LDR X0, [X0 + 0x758]
	0x03B715EC BL 0x1C16CF4
	0x03B715F0 ADRP X0, 0x582000
	0x03B715F4 LDR X0, [X0 + 0x598]
	0x03B715F8 BL 0x1C16CF4
	0x03B715FC ADRP X0, 0x5EA000
	0x03B71600 LDR X0, [X0 + 0x760]
	0x03B71604 BL 0x1C16CF4
	0x03B71608 MOVZ W8, 0x1
	0x03B7160C STRB W8, [X21 + 0xA2F]
	0x03B71610 STP X31, X31, [X31 + 0x10]
	0x03B71614 STR X31, [X31 + 0x8]
	0x03B71618 LDR X0, [X19 + 0x98]
	0x03B7161C CBZ X0, 0x3B717E4
	0x03B71620 LDR X8, [X0]
	0x03B71624 MOV X1, X20
	0x03B71628 LDP X9, X2, [X8 + 0x178]
	0x03B7162C BLR X9
	0x03B71630 TBZ X0, 0x0, 0x3B717D4
	0x03B71634 CBZ X20, 0x3B717E4
	0x03B71638 ADRP X10, 0x5E9000
	0x03B7163C LDR X8, [X20]
	0x03B71640 LDR X10, [X10 + 0x2F8]
	0x03B71644 LDRH W9, [X8 + 0x12E]
	0x03B71648 LDR X1, [X10]
	0x03B7164C CBZ X9, 0x3B71670
	0x03B71650 LDR X10, [X8 + 0xB0]
	0x03B71654 ADD X10, X10, 0x8
	0x03B71658 LDUR X11, [X10 - 0x8]
	0x03B7165C CMP X11, X1
	0x03B71660 B.EQ 0x3B71680
	0x03B71664 SUBS X9, X9, 0x1
	0x03B71668 ADD X10, X10, 0x10
	0x03B7166C B.NE 0x3B71658
	0x03B71670 MOVZ W2, 0x5
	0x03B71674 MOV X0, X20
	0x03B71678 BL 0x1C5C788
	0x03B7167C B 0x3B71690
	0x03B71680 LDR W9, [X10]
	0x03B71684 ADD W9, W9, 0x5
	0x03B71688 ADD X8, X8, W9, 0x4, SXTW
	0x03B7168C ADD X0, X8, 0x138
	0x03B71690 LDP X8, X1, [X0]
	0x03B71694 MOV X0, X20
	0x03B71698 BLR X8
	0x03B7169C ADRP X8, 0x582000
	0x03B716A0 LDR X8, [X8 + 0x598]
	0x03B716A4 MOV X21, X0
	0x03B716A8 LDR X8, [X8]
	0x03B716AC LDR W9, [X8 + 0xE0]
	0x03B716B0 CBNZ W9, 0x3B716BC
	0x03B716B4 MOV X0, X8
	0x03B716B8 BL 0x1C16DFC
	0x03B716BC MOV X0, X21
	0x03B716C0 MOV X1, X31
	0x03B716C4 MOV X2, X31
	0x03B716C8 BL 0x3C3883C
	0x03B716CC TBNZ X0, 0x0, 0x3B716F0
	0x03B716D0 CBZ X21, 0x3B717E4
	0x03B716D4 MOV X0, X21
	0x03B716D8 MOV X1, X31
	0x03B716DC BL 0x3C32ECC
	0x03B716E0 CBZ X0, 0x3B717E4
	0x03B716E4 MOV X1, X31
	0x03B716E8 BL 0x3C357F8
	0x03B716EC TBZ X0, 0x0, 0x3B716FC
	0x03B716F0 MOV X0, X19
	0x03B716F4 MOV X1, X20
	0x03B716F8 BL 0x3B71884
	0x03B716FC ADRP X8, 0x5E9000
	0x03B71700 LDR X8, [X8 + 0x328]
	0x03B71704 MOV X0, X20
	0x03B71708 LDR X1, [X8]
	0x03B7170C BL 0x1C16E00
	0x03B71710 CBZ X0, 0x3B71720
	0x03B71714 MOV X1, X0
	0x03B71718 MOV X0, X19
	0x03B7171C BL 0x3B71A3C
	0x03B71720 ADRP X8, 0x5E9000
	0x03B71724 LDR X8, [X8 + 0x320]
	0x03B71728 MOV X0, X20
	0x03B7172C LDR X1, [X8]
	0x03B71730 BL 0x1C16E00
	0x03B71734 CBZ X0, 0x3B71744
	0x03B71738 MOV X1, X0
	0x03B7173C MOV X0, X19
	0x03B71740 BL 0x3B71AD4
	0x03B71744 LDR X0, [X19 + 0x98]
	0x03B71748 CBZ X0, 0x3B717E4
	0x03B7174C LDR X8, [X0]
	0x03B71750 MOV X1, X20
	0x03B71754 LDP X9, X2, [X8 + 0x1A8]
	0x03B71758 BLR X9
	0x03B7175C TBZ X0, 0x0, 0x3B717D4
	0x03B71760 LDR X0, [X19 + 0xD8]
	0x03B71764 CBZ X0, 0x3B717E4
	0x03B71768 ADRP X8, 0x5EA000
	0x03B7176C LDR X8, [X8 + 0x750]
	0x03B71770 MOV X1, X20
	0x03B71774 LDR X2, [X8]
	0x03B71778 BL 0x2DBE67C
	0x03B7177C LDR X0, [X19 + 0x150]
	0x03B71780 CBZ X0, 0x3B717E4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x872000
	008 Move X22, 0x5EA000
	009 Move W8, [X21+2600]
	010 Move X22, [X22+2336]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x583000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x5EB000
	021 Move X0, [X0+1752]
	022 Call 0x1C17CF4
	023 Move X0, 0x5EA000
	024 Move X0, [X0+2336]
	025 Call 0x1C17CF4
	026 Move X0, 0x5EB000
	027 Move X0, [X0+1760]
	028 Call 0x1C17CF4
	029 Move X0, 0x5EB000
	030 Move X0, [X0+1768]
	031 Call 0x1C17CF4
	032 Move X0, 0x5EB000
	033 Move X0, [X0+1776]
	034 Call 0x1C17CF4
	035 Move X0, 0x5EB000
	036 Move X0, [X0+1784]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+2600], W8
	040 Move X1, [X22]
	041 Move X0, X20
	042 Move [X31+24], X31
	043 Move [X31], X31
	044 Move [X31+8], X31
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfEqual {86}
	049 Move X8, [X21]
	050 Move X1, [X22]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X21
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X21, X0
	071 Compare X0, 0
	072 JumpIfEqual {86}
	073 Move X0, [X19+160]
	074 Compare X0, 0
	075 JumpIfEqual {169}
	076 Move X8, [X0]
	077 Move X1, X21
	078 Move X9, [X8+376]
	079 Move X2, [X8+384]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {138}
	085 Move W22, W31
	086 Move W22, 1
	087 Move X0, [X19+160]
	088 Compare X0, 0
	089 JumpIfEqual {169}
	090 Move X8, [X0]
	091 Move X1, X20
	092 Move X9, [X8+408]
	093 Move X2, [X8+416]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {162}
	099 Move TEMP, X22
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {111}
	103 Move X0, [X19+224]
	104 Compare X0, 0
	105 JumpIfEqual {169}
	106 Move X8, 0x5EB000
	107 Move X8, [X8+1752]
	108 Move X1, X20
	109 Move X2, [X8]
	110 Call HashSet`1<Object>.Add, X0, X1
	111 Move X0, [X19+312]
	112 Compare X0, 0
	113 JumpIfEqual {169}
	114 Move X8, 0x5EB000
	115 Move X8, [X8+1760]
	116 Add X1, X31, 24
	117 Move X2, [X8]
	118 Call 0x2EF2058, X0, X1
	119 Move X8, X1
	120 Move X1, [X31+24]
	121 Move [X31], X0
	122 Move [X31+8], X8
	123 Compare X1, 0
	124 JumpIfEqual {170}
	125 Move [X1+16], X19
	126 Move [X1+24], X20
	127 Move [X1+32], X21
	128 Move X8, [X19]
	129 Move X9, [X8+616]
	130 Move X2, [X8+624]
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, 0x5EB000
	134 Move X8, [X8+1768]
	135 Add X0, X31, 0
	136 Move X1, [X8]
	137 Call 0x24A7DD0, X0
	138 Move X8, 0x5EB000
	139 Move X8, [X8+1776]
	140 Move X1, X20
	141 Move X2, X31
	142 Move X0, [X8]
	143 Call String.Format, X0, X1
	144 Move X8, 0x5EB000
	145 Move X8, [X8+1784]
	146 Move X2, X31
	147 Move X1, [X8]
	148 Call String.Concat, X0, X1
	149 Move X8, 0x583000
	150 Move X8, [X8+2600]
	151 Move X20, X0
	152 Move X8, [X8]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X0, X20
	159 Move X1, X19
	160 Move X2, X31
	161 Call Debug.LogError, X0, X1
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X22, [X31+32]
	165 Move X21, [X31+40]
	166 Move X30, [X31+16]
	167 Add X31, X31, 64
	168 Return 
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Move X20, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X20
	174 Call 0x3EB2AD0
	175 Move X19, [X0]
	176 Call 0x3EB2AE0
	177 Move X8, 0x5EB000
	178 Move X8, [X8+1768]
	179 Add X0, X31, 0
	180 Move X1, [X8]
	181 Call 0x24A7DD0, X0
	182 Compare X19, 0
	183 JumpIfEqual {162}
	184 Move X0, X19
	185 Call 0x1C17F18
	186 Move X19, X31
	187 Move X20, X0
	188 Move X8, 0x5EB000
	189 Move X8, [X8+1768]
	190 Move X1, [X8]
	191 Add X0, X31, 0
	192 Call 0x24A7DD0, X0
	193 Compare X19, 0
	194 JumpIfNotEqual {197}
	195 Move X0, X20
	196 Call 0x1D2D690
	197 Move X0, X19
	198 Call 0x1C17F18
	199 Call 0x1991590

Method: System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractionGroupRegisteredEventArgs args)

Disassembly:
	0x03B717A4 CBZ X1, 0x3B717E8
	0x03B717A8 STP X19, X20, [X1 + 0x10]
	0x03B717AC LDR X8, [X19]
	0x03B717B0 LDR X9, [X8 + 0x2C8]
	0x03B717B4 LDR X2, [X8 + 0x2D0]
	0x03B717B8 MOV X0, X19
	0x03B717BC BLR X9
	0x03B717C0 ADRP X8, 0x5EA000
	0x03B717C4 LDR X8, [X8 + 0x760]
	0x03B717C8 ADD X0, X31, 0x8
	0x03B717CC LDR X1, [X8]
	0x03B717D0 BL 0x24A6DD0
	0x03B717D4 LDP X20, X19, [X31 + 0x30]
	0x03B717D8 LDP X30, X21, [X31 + 0x20]
	0x03B717DC ADD X31, X31, 0x40
	0x03B717E0 RET
	0x03B717E4 BL 0x1C16F20
	0x03B717E8 BL 0x1C16F20
	0x03B717EC B 0x3B717F0
	0x03B717F0 MOV X20, X0
	0x03B717F4 CMP W1, 0x1
	0x03B717F8 B.NE 0x3B7182C
	0x03B717FC MOV X0, X20
	0x03B71800 BL 0x3EB1AD0
	0x03B71804 LDR X19, [X0]
	0x03B71808 BL 0x3EB1AE0
	0x03B7180C ADRP X8, 0x5EA000
	0x03B71810 LDR X8, [X8 + 0x760]
	0x03B71814 ADD X0, X31, 0x8
	0x03B71818 LDR X1, [X8]
	0x03B7181C BL 0x24A6DD0
	0x03B71820 CBZ X19, 0x3B717D4
	0x03B71824 MOV X0, X19
	0x03B71828 BL 0x1C16F18
	0x03B7182C MOV X19, X31
	0x03B71830 B 0x3B71838
	0x03B71834 MOV X20, X0
	0x03B71838 ADRP X8, 0x5EA000
	0x03B7183C LDR X8, [X8 + 0x760]
	0x03B71840 LDR X1, [X8]
	0x03B71844 ADD X0, X31, 0x8
	0x03B71848 BL 0x24A6DD0
	0x03B7184C CBNZ X19, 0x3B71858
	0x03B71850 MOV X0, X20
	0x03B71854 BL 0x1D2C690
	0x03B71858 MOV X0, X19
	0x03B7185C BL 0x1C16F18
	0x03B71860 BL 0x1990590
	0x03B71864 STR X30, [X31 - 0x10]!
	0x03B71868 LDR X0, [X0 + 0x98]
	0x03B7186C CBZ X0, 0x3B71880
	0x03B71870 LDR X8, [X0]
	0x03B71874 LDP X3, X2, [X8 + 0x178]
	0x03B71878 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x872000
	006 Move W8, [X21+2601]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5EA000
	014 Move X0, [X0+2360]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2601], W8
	018 Compare X19, 0
	019 JumpIfEqual {65}
	020 Move X21, [X19+24]
	021 Compare X21, 0
	022 JumpIfEqual {65}
	023 Move X10, 0x5EA000
	024 Move X8, [X21]
	025 Move X10, [X10+2360]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 8
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 8
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X21
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X20+32]
	049 Compare X8, 0
	050 JumpIfEqual {60}
	051 Move X3, [X8+24]
	052 Move X0, [X8+64]
	053 Move X2, [X8+40]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 CallNoReturn X3
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void UnregisterInteractionGroup(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup)

Disassembly:
	0x03B7187C BR X3
	0x03B71880 BL 0x1C16F20
	0x03B71884 STR X30, [X31 - 0x30]!
	0x03B71888 STP X22, X21, [X31 + 0x10]
	0x03B7188C STP X20, X19, [X31 + 0x20]
	0x03B71890 ADRP X22, 0x871000
	0x03B71894 ADRP X21, 0x5E9000
	0x03B71898 LDRB W8, [X22 + 0xA3D]
	0x03B7189C LDR X21, [X21 + 0x920]
	0x03B718A0 MOV X20, X1
	0x03B718A4 MOV X19, X0
	0x03B718A8 TBNZ X8, 0x0, 0x3B718CC
	0x03B718AC ADRP X0, 0x5E9000
	0x03B718B0 LDR X0, [X0 + 0x920]
	0x03B718B4 BL 0x1C16CF4
	0x03B718B8 ADRP X0, 0x5E9000
	0x03B718BC LDR X0, [X0 + 0x938]
	0x03B718C0 BL 0x1C16CF4
	0x03B718C4 MOVZ W8, 0x1
	0x03B718C8 STRB W8, [X22 + 0xA3D]
	0x03B718CC LDR X1, [X21]
	0x03B718D0 MOV X0, X20
	0x03B718D4 BL 0x1C16E00
	0x03B718D8 CBZ X0, 0x3B719E8
	0x03B718DC LDR X8, [X0]
	0x03B718E0 LDR X1, [X21]
	0x03B718E4 MOV X20, X0
	0x03B718E8 LDRH W9, [X8 + 0x12E]
	0x03B718EC CBZ X9, 0x3B71910
	0x03B718F0 LDR X10, [X8 + 0xB0]
	0x03B718F4 ADD X10, X10, 0x8
	0x03B718F8 LDUR X11, [X10 - 0x8]
	0x03B718FC CMP X11, X1
	0x03B71900 B.EQ 0x3B71920
	0x03B71904 SUBS X9, X9, 0x1
	0x03B71908 ADD X10, X10, 0x10
	0x03B7190C B.NE 0x3B718F8
	0x03B71910 MOV X0, X20
	0x03B71914 MOV W2, W31
	0x03B71918 BL 0x1C5C788
	0x03B7191C B 0x3B7192C
	0x03B71920 LDRSW X9, [X10]
	0x03B71924 ADD X8, X8, X9, 0x4, LSL
	0x03B71928 ADD X0, X8, 0x138
	0x03B7192C LDP X8, X1, [X0]
	0x03B71930 MOV X0, X20
	0x03B71934 BLR X8
	0x03B71938 CBZ X0, 0x3B719E8
	0x03B7193C ADRP X21, 0x5E9000
	0x03B71940 LDR X8, [X0]
	0x03B71944 LDR X21, [X21 + 0x938]
	0x03B71948 MOV X20, X0
	0x03B7194C LDRH W9, [X8 + 0x12E]
	0x03B71950 LDR X1, [X21]
	0x03B71954 CBZ X9, 0x3B71978
	0x03B71958 LDR X10, [X8 + 0xB0]
	0x03B7195C ADD X10, X10, 0x8
	0x03B71960 LDUR X11, [X10 - 0x8]
	0x03B71964 CMP X11, X1
	0x03B71968 B.EQ 0x3B71988
	0x03B7196C SUBS X9, X9, 0x1
	0x03B71970 ADD X10, X10, 0x10
	0x03B71974 B.NE 0x3B71960
	0x03B71978 MOVZ W2, 0x7
	0x03B7197C MOV X0, X20
	0x03B71980 BL 0x1C5C788
	0x03B71984 B 0x3B71998
	0x03B71988 LDR W9, [X10]
	0x03B7198C ADD W9, W9, 0x7
	0x03B71990 ADD X8, X8, W9, 0x4, SXTW
	0x03B71994 ADD X0, X8, 0x138
	0x03B71998 LDP X8, X1, [X0]
	0x03B7199C MOV X0, X20
	0x03B719A0 BLR X8
	0x03B719A4 CBZ X0, 0x3B719E8
	0x03B719A8 LDR X8, [X20]
	0x03B719AC LDR X1, [X21]
	0x03B719B0 LDRH W9, [X8 + 0x12E]
	0x03B719B4 CBZ X9, 0x3B719D8
	0x03B719B8 LDR X10, [X8 + 0xB0]
	0x03B719BC ADD X10, X10, 0x8
	0x03B719C0 LDUR X11, [X10 - 0x8]
	0x03B719C4 CMP X11, X1
	0x03B719C8 B.EQ 0x3B719F8
	0x03B719CC SUBS X9, X9, 0x1
	0x03B719D0 ADD X10, X10, 0x10
	0x03B719D4 B.NE 0x3B719C0
	0x03B719D8 MOVZ W2, 0x7
	0x03B719DC MOV X0, X20
	0x03B719E0 BL 0x1C5C788
	0x03B719E4 B 0x3B71A08
	0x03B719E8 LDP X20, X19, [X31 + 0x20]
	0x03B719EC LDP X22, X21, [X31 + 0x10]
	0x03B719F0 LDR X30, [X31], #0x30
	0x03B719F4 RET
	0x03B719F8 LDR W9, [X10]
	0x03B719FC ADD W9, W9, 0x7
	0x03B71A00 ADD X8, X8, W9, 0x4, SXTW
	0x03B71A04 ADD X0, X8, 0x138
	0x03B71A08 LDP X8, X1, [X0]
	0x03B71A0C MOV X0, X20
	0x03B71A10 BLR X8
	0x03B71A14 LDR X8, [X19]
	0x03B71A18 MOV X2, X0
	0x03B71A1C MOV X0, X19
	0x03B71A20 MOV X1, X20
	0x03B71A24 LDR X4, [X8 + 0x3B8]
	0x03B71A28 LDR X3, [X8 + 0x3C0]
	0x03B71A2C LDP X20, X19, [X31 + 0x20]
	0x03B71A30 LDP X22, X21, [X31 + 0x10]
	0x03B71A34 LDR X30, [X31], #0x30
	0x03B71A38 BR X4
	0x03B71A3C STP X30, X21, [X31 - 0x20]!
	0x03B71A40 STP X20, X19, [X31 + 0x10]
	0x03B71A44 ADRP X21, 0x871000
	0x03B71A48 LDRB W8, [X21 + 0xA42]
	0x03B71A4C MOV X19, X1
	0x03B71A50 MOV X20, X0
	0x03B71A54 TBNZ X8, 0x0, 0x3B71A6C
	0x03B71A58 ADRP X0, 0x5E9000
	0x03B71A5C LDR X0, [X0 + 0x368]
	0x03B71A60 BL 0x1C16CF4
	0x03B71A64 MOVZ W8, 0x1
	0x03B71A68 STRB W8, [X21 + 0xA42]
	0x03B71A6C CBZ X19, 0x3B71AA4
	0x03B71A70 ADRP X8, 0x5E9000
	0x03B71A74 LDR X8, [X8 + 0x368]
	0x03B71A78 LDR X9, [X19]
	0x03B71A7C LDR X8, [X8]
	0x03B71A80 LDRB W11, [X9 + 0x130]
	0x03B71A84 LDRB W10, [X8 + 0x130]
	0x03B71A88 CMP W11, W10
	0x03B71A8C B.CC 0x3B71AA4
	0x03B71A90 LDR X9, [X9 + 0xC8]
	0x03B71A94 ADD X9, X9, X10, 0x3, LSL
	0x03B71A98 LDUR X9, [X9 - 0x8]
	0x03B71A9C CMP X9, X8
	0x03B71AA0 B.EQ 0x3B71AC4
	0x03B71AA4 LDR X8, [X20]
	0x03B71AA8 LDR X3, [X8 + 0x348]
	0x03B71AAC LDR X2, [X8 + 0x350]
	0x03B71AB0 MOV X0, X20
	0x03B71AB4 MOV X1, X19
	0x03B71AB8 LDP X20, X19, [X31 + 0x10]
	0x03B71ABC LDP X30, X21, [X31], #0x20
	0x03B71AC0 BR X3
	0x03B71AC4 LDR X8, [X20]
	0x03B71AC8 LDR X3, [X8 + 0x518]
	0x03B71ACC LDR X2, [X8 + 0x520]
	0x03B71AD0 B 0x3B71AB0
	0x03B71AD4 STP X30, X21, [X31 - 0x20]!
	0x03B71AD8 STP X20, X19, [X31 + 0x10]
	0x03B71ADC ADRP X21, 0x871000
	0x03B71AE0 LDRB W8, [X21 + 0xA48]
	0x03B71AE4 MOV X19, X1
	0x03B71AE8 MOV X20, X0
	0x03B71AEC TBNZ X8, 0x0, 0x3B71B04
	0x03B71AF0 ADRP X0, 0x5E9000
	0x03B71AF4 LDR X0, [X0 + 0x368]
	0x03B71AF8 BL 0x1C16CF4
	0x03B71AFC MOVZ W8, 0x1
	0x03B71B00 STRB W8, [X21 + 0xA48]
	0x03B71B04 CBZ X19, 0x3B71B3C
	0x03B71B08 ADRP X8, 0x5E9000
	0x03B71B0C LDR X8, [X8 + 0x368]
	0x03B71B10 LDR X9, [X19]
	0x03B71B14 LDR X8, [X8]
	0x03B71B18 LDRB W11, [X9 + 0x130]
	0x03B71B1C LDRB W10, [X8 + 0x130]
	0x03B71B20 CMP W11, W10
	0x03B71B24 B.CC 0x3B71B3C
	0x03B71B28 LDR X9, [X9 + 0xC8]
	0x03B71B2C ADD X9, X9, X10, 0x3, LSL
	0x03B71B30 LDUR X9, [X9 - 0x8]
	0x03B71B34 CMP X9, X8
	0x03B71B38 B.EQ 0x3B71B5C
	0x03B71B3C LDR X8, [X20]
	0x03B71B40 LDR X3, [X8 + 0x378]
	0x03B71B44 LDR X2, [X8 + 0x380]
	0x03B71B48 MOV X0, X20
	0x03B71B4C MOV X1, X19
	0x03B71B50 LDP X20, X19, [X31 + 0x10]
	0x03B71B54 LDP X30, X21, [X31], #0x20
	0x03B71B58 BR X3
	0x03B71B5C LDR X8, [X20]
	0x03B71B60 LDR X3, [X8 + 0x548]
	0x03B71B64 LDR X2, [X8 + 0x550]
	0x03B71B68 B 0x3B71B48
	0x03B71B6C STP X30, X21, [X31 - 0x20]!
	0x03B71B70 STP X20, X19, [X31 + 0x10]
	0x03B71B74 ADRP X21, 0x871000
	0x03B71B78 LDRB W8, [X21 + 0xA30]
	0x03B71B7C MOV X19, X1
	0x03B71B80 MOV X20, X0
	0x03B71B84 TBNZ X8, 0x0, 0x3B71B9C
	0x03B71B88 ADRP X0, 0x5E9000
	0x03B71B8C LDR X0, [X0 + 0x2F8]
	0x03B71B90 BL 0x1C16CF4
	0x03B71B94 MOVZ W8, 0x1
	0x03B71B98 STRB W8, [X21 + 0xA30]
	0x03B71B9C CBZ X19, 0x3B71C40
	0x03B71BA0 LDR X21, [X19 + 0x18]
	0x03B71BA4 CBZ X21, 0x3B71C40
	0x03B71BA8 ADRP X10, 0x5E9000
	0x03B71BAC LDR X8, [X21]
	0x03B71BB0 LDR X10, [X10 + 0x2F8]
	0x03B71BB4 LDRH W9, [X8 + 0x12E]
	0x03B71BB8 LDR X1, [X10]
	0x03B71BBC CBZ X9, 0x3B71BE0
	0x03B71BC0 LDR X10, [X8 + 0xB0]
	0x03B71BC4 ADD X10, X10, 0x8
	0x03B71BC8 LDUR X11, [X10 - 0x8]
	0x03B71BCC CMP X11, X1
	0x03B71BD0 B.EQ 0x3B71BF0
	0x03B71BD4 SUBS X9, X9, 0x1
	0x03B71BD8 ADD X10, X10, 0x10
	0x03B71BDC B.NE 0x3B71BC8
	0x03B71BE0 MOVZ W2, 0x9
	0x03B71BE4 MOV X0, X21
	0x03B71BE8 BL 0x1C5C788
	0x03B71BEC B 0x3B71C00
	0x03B71BF0 LDR W9, [X10]
	0x03B71BF4 ADD W9, W9, 0x9
	0x03B71BF8 ADD X8, X8, W9, 0x4, SXTW
	0x03B71BFC ADD X0, X8, 0x138
	0x03B71C00 LDP X8, X2, [X0]
	0x03B71C04 MOV X0, X21
	0x03B71C08 MOV X1, X19
	0x03B71C0C BLR X8
	0x03B71C10 LDR X8, [X20 + 0x38]
	0x03B71C14 CBZ X8, 0x3B71C34
	0x03B71C18 LDR X3, [X8 + 0x18]
	0x03B71C1C LDR X0, [X8 + 0x40]
	0x03B71C20 LDR X2, [X8 + 0x28]
	0x03B71C24 MOV X1, X19
	0x03B71C28 LDP X20, X19, [X31 + 0x10]
	0x03B71C2C LDP X30, X21, [X31], #0x20
	0x03B71C30 BR X3
	0x03B71C34 LDP X20, X19, [X31 + 0x10]
	0x03B71C38 LDP X30, X21, [X31], #0x20
	0x03B71C3C RET
	0x03B71C40 BL 0x1C16F20
	0x03B71C44 SUB X31, X31, 0xC0
	0x03B71C48 STP X29, X30, [X31 + 0x60]
	0x03B71C4C STP X28, X27, [X31 + 0x70]
	0x03B71C50 STP X26, X25, [X31 + 0x80]
	0x03B71C54 STP X24, X23, [X31 + 0x90]
	0x03B71C58 STP X22, X21, [X31 + 0xA0]
	0x03B71C5C STP X20, X19, [X31 + 0xB0]
	0x03B71C60 ADRP X21, 0x871000
	0x03B71C64 LDRB W8, [X21 + 0xA31]
	0x03B71C68 MOV X20, X1
	0x03B71C6C MOV X19, X0
	0x03B71C70 TBNZ X8, 0x0, 0x3B71D24
	0x03B71C74 ADRP X0, 0x582000
	0x03B71C78 LDR X0, [X0 + 0xA28]
	0x03B71C7C BL 0x1C16CF4
	0x03B71C80 ADRP X0, 0x5EA000
	0x03B71C84 LDR X0, [X0 + 0x768]
	0x03B71C88 BL 0x1C16CF4
	0x03B71C8C ADRP X0, 0x5EA000
	0x03B71C90 LDR X0, [X0 + 0x770]
	0x03B71C94 BL 0x1C16CF4
	0x03B71C98 ADRP X0, 0x5EA000
	0x03B71C9C LDR X0, [X0 + 0x778]
	0x03B71CA0 BL 0x1C16CF4
	0x03B71CA4 ADRP X0, 0x5EA000
	0x03B71CA8 LDR X0, [X0 + 0x780]
	0x03B71CAC BL 0x1C16CF4
	0x03B71CB0 ADRP X0, 0x5EA000
	0x03B71CB4 LDR X0, [X0 + 0x788]
	0x03B71CB8 BL 0x1C16CF4
	0x03B71CBC ADRP X0, 0x5E9000
	0x03B71CC0 LDR X0, [X0 + 0x8D8]
	0x03B71CC4 BL 0x1C16CF4
	0x03B71CC8 ADRP X0, 0x5EA000
	0x03B71CCC LDR X0, [X0 + 0x790]
	0x03B71CD0 BL 0x1C16CF4
	0x03B71CD4 ADRP X0, 0x5EA000
	0x03B71CD8 LDR X0, [X0 + 0x798]
	0x03B71CDC BL 0x1C16CF4
	0x03B71CE0 ADRP X0, 0x582000
	0x03B71CE4 LDR X0, [X0 + 0x598]
	0x03B71CE8 BL 0x1C16CF4
	0x03B71CEC ADRP X0, 0x5EA000
	0x03B71CF0 LDR X0, [X0 + 0x7A0]
	0x03B71CF4 BL 0x1C16CF4
	0x03B71CF8 ADRP X0, 0x5EA000
	0x03B71CFC LDR X0, [X0 + 0x7A8]
	0x03B71D00 BL 0x1C16CF4
	0x03B71D04 ADRP X0, 0x5EA000
	0x03B71D08 LDR X0, [X0 + 0x7B0]
	0x03B71D0C BL 0x1C16CF4
	0x03B71D10 ADRP X0, 0x5EA000
	0x03B71D14 LDR X0, [X0 + 0x7B8]
	0x03B71D18 BL 0x1C16CF4
	0x03B71D1C MOVZ W8, 0x1
	0x03B71D20 STRB W8, [X21 + 0xA31]
	0x03B71D24 STP X31, X31, [X31 + 0x40]
	0x03B71D28 STR X31, [X31 + 0x50]
	0x03B71D2C STP X31, X31, [X31 + 0x30]
	0x03B71D30 STP X31, X31, [X31 + 0x20]
	0x03B71D34 LDR X0, [X19 + 0xA8]
	0x03B71D38 CBZ X0, 0x3B71FA8
	0x03B71D3C LDR X8, [X0]
	0x03B71D40 MOV X1, X20
	0x03B71D44 LDP X9, X2, [X8 + 0x198]
	0x03B71D48 BLR X9
	0x03B71D4C TBZ X0, 0x0, 0x3B71F80
	0x03B71D50 CBZ X20, 0x3B71FA8
	0x03B71D54 ADRP X10, 0x5E9000
	0x03B71D58 LDR X8, [X20]
	0x03B71D5C LDR X10, [X10 + 0x8D8]
	0x03B71D60 LDRH W9, [X8 + 0x12E]
	0x03B71D64 LDR X1, [X10]
	0x03B71D68 CBZ X9, 0x3B71D8C
	0x03B71D6C LDR X10, [X8 + 0xB0]
	0x03B71D70 ADD X10, X10, 0x8
	0x03B71D74 LDUR X11, [X10 - 0x8]
	0x03B71D78 CMP X11, X1
	0x03B71D7C B.EQ 0x3B71D9C
	0x03B71D80 SUBS X9, X9, 0x1
	0x03B71D84 ADD X10, X10, 0x10
	0x03B71D88 B.NE 0x3B71D74
	0x03B71D8C MOVZ W2, 0x5
	0x03B71D90 MOV X0, X20
	0x03B71D94 BL 0x1C5C788
	0x03B71D98 B 0x3B71DAC
	0x03B71D9C LDR W9, [X10]
	0x03B71DA0 ADD W9, W9, 0x5
	0x03B71DA4 ADD X8, X8, W9, 0x4, SXTW
	0x03B71DA8 ADD X0, X8, 0x138
	0x03B71DAC LDP X8, X1, [X0]
	0x03B71DB0 MOV X0, X20
	0x03B71DB4 BLR X8
	0x03B71DB8 CBZ X0, 0x3B71FA8
	0x03B71DBC ADRP X8, 0x5EA000
	0x03B71DC0 LDR X8, [X8 + 0x798]
	0x03B71DC4 LDR X1, [X8]
	0x03B71DC8 ADD X8, X31, 0x8
	0x03B71DCC BL 0x301CB58
	0x03B71DD0 LDUR V0, [X31 + 0x8]
	0x03B71DD4 LDR X8, [X31 + 0x18]
	0x03B71DD8 ADRP X22, 0x5EA000
	0x03B71DDC ADRP X23, 0x582000
	0x03B71DE0 ADRP X24, 0x5EA000
	0x03B71DE4 ADRP X25, 0x5EA000
	0x03B71DE8 ADRP X26, 0x5EA000
	0x03B71DEC ADRP X27, 0x5EA000
	0x03B71DF0 ADRP X28, 0x582000
	0x03B71DF4 LDR X22, [X22 + 0x780]
	0x03B71DF8 LDR X23, [X23 + 0x598]
	0x03B71DFC LDR X24, [X24 + 0x770]
	0x03B71E00 LDR X25, [X25 + 0x7A8]
	0x03B71E04 LDR X26, [X26 + 0x7B8]
	0x03B71E08 LDR X27, [X27 + 0x7B0]
	0x03B71E0C LDR X28, [X28 + 0xA28]
	0x03B71E10 STR V0, [X31 + 0x4]
	0x03B71E14 STR X8, [X31 + 0x50]
	0x03B71E18 ADRP X29, 0x5EA000
	0x03B71E1C LDR X29, [X29 + 0x768]
	0x03B71E20 LDR X1, [X22]
	0x03B71E24 ADD X0, X31, 0x40
	0x03B71E28 BL 0x2BC4350
	0x03B71E2C TBZ X0, 0x0, 0x3B71F14
	0x03B71E30 LDR X0, [X23]
	0x03B71E34 LDR X21, [X31 + 0x50]
	0x03B71E38 LDR W8, [X0 + 0xE0]
	0x03B71E3C CBNZ W8, 0x3B71E44
	0x03B71E40 BL 0x1C16DFC
	0x03B71E44 MOV X0, X21
	0x03B71E48 MOV X1, X31
	0x03B71E4C MOV X2, X31
	0x03B71E50 BL 0x3C3883C
	0x03B71E54 TBNZ X0, 0x0, 0x3B71E20
	0x03B71E58 LDR X0, [X19 + 0x88]
	0x03B71E5C CBZ X0, 0x3B71FA0
	0x03B71E60 LDR X3, [X24]
	0x03B71E64 ADD X2, X31, 0x38
	0x03B71E68 MOV X1, X21
	0x03B71E6C BL 0x2AA6B2C
	0x03B71E70 TBZ X0, 0x0, 0x3B71ED4
	0x03B71E74 LDR X0, [X25]
	0x03B71E78 LDR X2, [X31 + 0x38]
	0x03B71E7C MOV X1, X21
	0x03B71E80 MOV X3, X20
	0x03B71E84 MOV X4, X31
	0x03B71E88 BL 0x3227C18
	0x03B71E8C MOV X1, X0
	0x03B71E90 LDR X0, [X26]
	0x03B71E94 LDR X2, [X27]
	0x03B71E98 MOV X3, X31
	0x03B71E9C BL 0x32274B8
	0x03B71EA0 MOV X21, X0
	0x03B71EA4 LDR X0, [X28]
	0x03B71EA8 LDR W8, [X0 + 0xE0]
	0x03B71EAC CBNZ W8, 0x3B71EB4
	0x03B71EB0 BL 0x1C16DFC
	0x03B71EB4 LDR X9, [X20]
	0x03B71EB8 LDR X8, [X23]
	0x03B71EBC LDRB W11, [X9 + 0x130]
	0x03B71EC0 LDRB W10, [X8 + 0x130]
	0x03B71EC4 CMP W11, W10
	0x03B71EC8 B.CS 0x3B71EF0
	0x03B71ECC MOV X1, X31
	0x03B71ED0 B 0x3B71F04
	0x03B71ED4 LDR X0, [X19 + 0x88]
	0x03B71ED8 CBZ X0, 0x3B71FA4
	0x03B71EDC LDR X3, [X29]
	0x03B71EE0 MOV X1, X21
	0x03B71EE4 MOV X2, X20
	0x03B71EE8 BL 0x2AA5098
	0x03B71EEC B 0x3B71E20
	0x03B71EF0 LDR X9, [X9 + 0xC8]
	0x03B71EF4 ADD X9, X9, X10, 0x3, LSL
	0x03B71EF8 LDUR X9, [X9 - 0x8]
	0x03B71EFC CMP X9, X8
	0x03B71F00 CSEL X1, X20, X31, EQ
	0x03B71F04 MOV X0, X21
	0x03B71F08 MOV X2, X31
	0x03B71F0C BL 0x3C06B0C
	0x03B71F10 B 0x3B71E20
	0x03B71F14 ADRP X8, 0x5EA000
	0x03B71F18 LDR X8, [X8 + 0x778]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X21, 0x872000
	009 Move W8, [X21+2602]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {72}
	016 Move X0, 0x5EB000
	017 Move X0, [X0+1792]
	018 Call 0x1C17CF4
	019 Move X0, 0x5EB000
	020 Move X0, [X0+1800]
	021 Call 0x1C17CF4
	022 Move X0, 0x583000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x5EB000
	026 Move X0, [X0+1640]
	027 Call 0x1C17CF4
	028 Move X0, 0x5EB000
	029 Move X0, [X0+1648]
	030 Call 0x1C17CF4
	031 Move X0, 0x5EB000
	032 Move X0, [X0+1656]
	033 Call 0x1C17CF4
	034 Move X0, 0x5EB000
	035 Move X0, [X0+1664]
	036 Call 0x1C17CF4
	037 Move X0, 0x5EB000
	038 Move X0, [X0+1672]
	039 Call 0x1C17CF4
	040 Move X0, 0x5EB000
	041 Move X0, [X0+1680]
	042 Call 0x1C17CF4
	043 Move X0, 0x5EB000
	044 Move X0, [X0+1808]
	045 Call 0x1C17CF4
	046 Move X0, 0x5EA000
	047 Move X0, [X0+2336]
	048 Call 0x1C17CF4
	049 Move X0, 0x5EA000
	050 Move X0, [X0+2360]
	051 Call 0x1C17CF4
	052 Move X0, 0x5EB000
	053 Move X0, [X0+1816]
	054 Call 0x1C17CF4
	055 Move X0, 0x5EB000
	056 Move X0, [X0+1704]
	057 Call 0x1C17CF4
	058 Move X0, 0x5EB000
	059 Move X0, [X0+1712]
	060 Call 0x1C17CF4
	061 Move X0, 0x5EB000
	062 Move X0, [X0+1824]
	063 Call 0x1C17CF4
	064 Move X0, 0x5EB000
	065 Move X0, [X0+1832]
	066 Call 0x1C17CF4
	067 Move X0, 0x5EB000
	068 Move X0, [X0+1840]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X21+2602], W8
	072 Move [X31+80], X31
	073 Move [X31+88], X31
	074 Move [X31+96], X31
	075 Move [X31+48], X31
	076 Move [X31+56], X31
	077 Move [X31+64], X31
	078 Move [X31+32], X31
	079 Move [X31+40], X31
	080 Move [X31+24], X31
	081 Move X0, [X19+160]
	082 Compare X0, 0
	083 JumpIfEqual {371}
	084 Move X8, [X0]
	085 Move X1, X20
	086 Move X9, [X8+376]
	087 Move X2, [X8+384]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {363}
	093 Compare X20, 0
	094 JumpIfEqual {371}
	095 Move X10, 0x5EA000
	096 Move X8, [X20]
	097 Move X10, [X10+2360]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X1, [X10]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move W2, 9
	109 Move X0, X20
	110 Call 0x1C5D788
	111 Move W9, [X10]
	112 Add W9, W9, 9
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X20
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X0, [X19+160]
	120 Compare X0, 0
	121 JumpIfEqual {371}
	122 Move X8, 0x5EB000
	123 Move X8, [X8+1792]
	124 Move X1, [X8]
	125 Call 0x28BA738, X0
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, [X19+160]
	128 Compare X0, 0
	129 JumpIfEqual {371}
	130 Move X8, [X0]
	131 Move X1, [X19+240]
	132 Move X9, [X8+456]
	133 Move X2, [X8+464]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X0, [X19+240]
	136 Compare X0, 0
	137 JumpIfEqual {371}
	138 Move X8, 0x5EB000
	139 Move X8, [X8+1712]
	140 Move X1, [X8]
	141 Add X8, X31, 0
	142 Call List`1<Object>.GetEnumerator, X0
	143 Move V0, [X31]
	144 Move X8, [X31+16]
	145 Move X22, 0x5EB000
	146 Move X22, [X22+1656]
	147 Move [X31+5], V0
	148 Move [X31+96], X8
	149 Move X23, 0x5EA000
	150 Move X23, [X23+2336]
	151 Move X1, [X22]
	152 Add X0, X31, 80
	153 Call Enumerator<Object>.MoveNext, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {212}
	158 Move X0, [X31+96]
	159 Move X1, [X23]
	160 Call 0x1C17E00
	161 Move X21, X0
	162 Compare X0, 0
	163 JumpIfEqual {151}
	164 Move X8, [X21]
	165 Move X1, [X23]
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X21
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X1, [X0+8]
	183 Move X0, X21
	184 NotImplemented "Instruction BLR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, 0x5EB000
	187 Move X8, [X8+1840]
	188 Move X0, [X8]
	189 Move X1, X20
	190 Move X2, X31
	191 Call String.Format, X0, X1
	192 Move X8, 0x5EB000
	193 Move X8, [X8+1832]
	194 Move X1, [X8]
	195 Move X2, X31
	196 Call String.Concat, X0, X1
	197 Move X8, 0x583000
	198 Move X8, [X8+2600]
	199 Move X21, X0
	200 Move X0, [X8]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X0, X21
	206 Move X1, X19
	207 Move X2, X31
	208 Call Debug.LogError, X0, X1
	209 Move X8, 0x5EB000
	210 Move X8, [X8+1640]
	211 Add X0, X31, 80
	212 Move X8, 0x5EB000
	213 Move X8, [X8+1640]
	214 Add X0, X31, 80
	215 Move X1, [X8]
	216 Call Enumerator<Object>.Dispose, X0
	217 Move X0, [X19+152]
	218 Compare X0, 0
	219 JumpIfEqual {371}
	220 Move X8, 0x5EB000
	221 Move X8, [X8+1800]
	222 Move X1, [X8]
	223 Call 0x28BA738, X0
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, [X19+152]
	226 Compare X0, 0
	227 JumpIfEqual {371}
	228 Move X8, [X0]
	229 Move X1, [X19+248]
	230 Move X9, [X8+456]
	231 Move X2, [X8+464]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X0, [X19+248]
	234 Compare X0, 0
	235 JumpIfEqual {371}
	236 Move X8, 0x5EB000
	237 Move X8, [X8+1704]
	238 Move X1, [X8]
	239 Add X8, X31, 0
	240 Call List`1<Object>.GetEnumerator, X0
	241 Move V0, [X31]
	242 Move X8, [X31+16]
	243 Move X22, 0x5EB000
	244 Move X22, [X22+1664]
	245 Move [X31+3], V0
	246 Move [X31+64], X8
	247 Move X23, 0x5EA000
	248 Move X23, [X23+2336]
	249 Move X1, [X22]
	250 Add X0, X31, 48
	251 Call Enumerator<Object>.MoveNext, X0
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {312}
	256 Move X0, [X31+64]
	257 Move X1, [X23]
	258 Call 0x1C17E00
	259 Move X21, X0
	260 Compare X0, 0
	261 JumpIfEqual {249}
	262 Move X8, [X21]
	263 Move X1, [X23]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move X0, X21
	274 Move W2, W31
	275 Call 0x1C5D788
	276 NotImplemented "Instruction LDRSW not yet implemented."
	277 Add X8, X8, X9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X1, [X0+8]
	281 Move X0, X21
	282 NotImplemented "Instruction BLR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X8, 0x5EB000
	285 Move X8, [X8+1840]
	286 Move X0, [X8]
	287 Move X1, X20
	288 Move X2, X31
	289 Call String.Format, X0, X1
	290 Move X8, 0x5EB000
	291 Move X8, [X8+1832]
	292 Move X1, [X8]
	293 Move X2, X31
	294 Call String.Concat, X0, X1
	295 Move X8, 0x583000
	296 Move X8, [X8+2600]
	297 Move X21, X0
	298 Move X0, [X8]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Move X0, X21
	304 Move X1, X19
	305 Move X2, X31
	306 Call Debug.LogError, X0, X1
	307 Move X8, 0x5EB000
	308 Move X8, [X8+1648]
	309 Add X0, X31, 48
	310 Move X1, [X8]
	311 Call Enumerator<Object>.Dispose, X0
	312 Move X8, 0x5EB000
	313 Move X8, [X8+1648]
	314 Add X0, X31, 48
	315 Move X1, [X8]
	316 Call Enumerator<Object>.Dispose, X0
	317 Move X0, [X19+160]
	318 Compare X0, 0
	319 JumpIfEqual {371}
	320 Move X8, [X0]
	321 Move X1, X20
	322 Move X9, [X8+424]
	323 Move X2, [X8+432]
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Move TEMP, X0
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfNotEqual {363}
	329 Move X0, [X19+224]
	330 Compare X0, 0
	331 JumpIfEqual {371}
	332 Move X8, 0x5EB000
	333 Move X8, [X8+1808]
	334 Move X1, X20
	335 Move X2, [X8]
	336 Call HashSet`1<Object>.Remove, X0, X1
	337 Move X0, [X19+320]
	338 Compare X0, 0
	339 JumpIfEqual {371}
	340 Move X8, 0x5EB000
	341 Move X8, [X8+1816]
	342 Add X1, X31, 40
	343 Move X2, [X8]
	344 Call 0x2EF2058, X0, X1
	345 Move X8, X1
	346 Move X1, [X31+40]
	347 Move [X31+24], X0
	348 Move [X31+32], X8
	349 Compare X1, 0
	350 JumpIfEqual {372}
	351 Move [X1+16], X19
	352 Move [X1+24], X20
	353 Move X8, [X19]
	354 Move X9, [X8+648]
	355 Move X2, [X8+656]
	356 Move X0, X19
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Move X8, 0x5EB000
	359 Move X8, [X8+1824]
	360 Add X0, X31, 24
	361 Move X1, [X8]
	362 Call 0x24A7DD0, X0
	363 Move X20, [X31+144]
	364 Move X19, [X31+152]
	365 Move X22, [X31+128]
	366 Move X21, [X31+136]
	367 Move X30, [X31+112]
	368 Move X23, [X31+120]
	369 Add X31, X31, 160
	370 Return 
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Move X21, X0
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Move X0, X21
	376 Call 0x3EB2AD0
	377 Move X19, [X0]
	378 Call 0x3EB2AE0
	379 Move X8, 0x5EB000
	380 Move X8, [X8+1824]
	381 Add X0, X31, 24
	382 Move X1, [X8]
	383 Call 0x24A7DD0, X0
	384 Compare X19, 0
	385 JumpIfEqual {363}
	386 Move X0, X19
	387 Call 0x1C17F18
	388 Move X19, X31
	389 Move X21, X0
	390 Move X8, 0x5EB000
	391 Move X8, [X8+1824]
	392 Move X1, [X8]
	393 Add X0, X31, 24
	394 Call 0x24A7DD0, X0
	395 Compare X19, 0
	396 JumpIfEqual {447}
	397 Move X0, X19
	398 Call 0x1C17F18
	399 Move X21, X0
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X0, X21
	402 Call 0x3EB2AD0
	403 Move X22, [X0]
	404 Call 0x3EB2AE0
	405 Move X8, 0x5EB000
	406 Move X8, [X8+1648]
	407 Add X0, X31, 48
	408 Move X1, [X8]
	409 Call Enumerator<Object>.Dispose, X0
	410 Compare X22, 0
	411 JumpIfEqual {317}
	412 Move X22, X31
	413 Move X21, X0
	414 Move X8, 0x5EB000
	415 Move X8, [X8+1648]
	416 Move X1, [X8]
	417 Add X0, X31, 48
	418 Call Enumerator<Object>.Dispose, X0
	419 Compare X22, 0
	420 JumpIfEqual {447}
	421 Move X0, X22
	422 Call 0x1C17F18
	423 Move X21, X0
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X0, X21
	426 Call 0x3EB2AD0
	427 Move X22, [X0]
	428 Call 0x3EB2AE0
	429 Move X8, 0x5EB000
	430 Move X8, [X8+1640]
	431 Add X0, X31, 80
	432 Move X1, [X8]
	433 Call Enumerator<Object>.Dispose, X0
	434 Compare X22, 0
	435 JumpIfEqual {217}
	436 Move X0, X22
	437 Call 0x1C17F18
	438 Move X22, X31
	439 Move X21, X0
	440 Move X8, 0x5EB000
	441 Move X8, [X8+1640]
	442 Move X1, [X8]
	443 Add X0, X31, 80
	444 Call Enumerator<Object>.Dispose, X0
	445 Compare X22, 0
	446 JumpIfNotEqual {449}
	447 Move X0, X21
	448 Call 0x1D2D690
	449 Move X0, X22
	450 Call 0x1C17F18
	451 Call 0x1991590

Method: System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractionGroupUnregisteredEventArgs args)

Disassembly:
	0x03B71F1C ADD X0, X31, 0x40
	0x03B71F20 LDR X1, [X8]
	0x03B71F24 BL 0x2BC434C
	0x03B71F28 LDR X0, [X19 + 0x158]
	0x03B71F2C CBZ X0, 0x3B71FA8
	0x03B71F30 ADRP X8, 0x5EA000
	0x03B71F34 LDR X8, [X8 + 0x790]
	0x03B71F38 ADD X1, X31, 0x30
	0x03B71F3C LDR X2, [X8]
	0x03B71F40 BL 0x2EF1058
	0x03B71F44 MOV X8, X1
	0x03B71F48 LDR X1, [X31 + 0x30]
	0x03B71F4C STP X0, X8, [X31 + 0x20]
	0x03B71F50 CBZ X1, 0x3B71FAC
	0x03B71F54 STP X19, X20, [X1 + 0x10]
	0x03B71F58 LDR X8, [X19]
	0x03B71F5C LDR X9, [X8 + 0x2E8]
	0x03B71F60 LDR X2, [X8 + 0x2F0]
	0x03B71F64 MOV X0, X19
	0x03B71F68 BLR X9
	0x03B71F6C ADRP X8, 0x5EA000
	0x03B71F70 LDR X8, [X8 + 0x7A0]
	0x03B71F74 ADD X0, X31, 0x20
	0x03B71F78 LDR X1, [X8]
	0x03B71F7C BL 0x24A6DD0
	0x03B71F80 LDP X20, X19, [X31 + 0xB0]
	0x03B71F84 LDP X22, X21, [X31 + 0xA0]
	0x03B71F88 LDP X24, X23, [X31 + 0x90]
	0x03B71F8C LDP X26, X25, [X31 + 0x80]
	0x03B71F90 LDP X28, X27, [X31 + 0x70]
	0x03B71F94 LDP X29, X30, [X31 + 0x60]
	0x03B71F98 ADD X31, X31, 0xC0
	0x03B71F9C RET
	0x03B71FA0 BL 0x1C16F20
	0x03B71FA4 BL 0x1C16F20
	0x03B71FA8 BL 0x1C16F20
	0x03B71FAC BL 0x1C16F20
	0x03B71FB0 B 0x3B71FB4
	0x03B71FB4 MOV X21, X0
	0x03B71FB8 CMP W1, 0x1
	0x03B71FBC B.NE 0x3B71FF0
	0x03B71FC0 MOV X0, X21
	0x03B71FC4 BL 0x3EB1AD0
	0x03B71FC8 LDR X19, [X0]
	0x03B71FCC BL 0x3EB1AE0
	0x03B71FD0 ADRP X8, 0x5EA000
	0x03B71FD4 LDR X8, [X8 + 0x7A0]
	0x03B71FD8 ADD X0, X31, 0x20
	0x03B71FDC LDR X1, [X8]
	0x03B71FE0 BL 0x24A6DD0
	0x03B71FE4 CBZ X19, 0x3B71F80
	0x03B71FE8 MOV X0, X19
	0x03B71FEC BL 0x1C16F18
	0x03B71FF0 MOV X19, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x872000
	006 Move W8, [X21+2603]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5EA000
	014 Move X0, [X0+2360]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2603], W8
	018 Compare X19, 0
	019 JumpIfEqual {65}
	020 Move X21, [X19+24]
	021 Compare X21, 0
	022 JumpIfEqual {65}
	023 Move X10, 0x5EA000
	024 Move X8, [X21]
	025 Move X10, [X10+2360]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 10
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 10
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X21
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X20+40]
	049 Compare X8, 0
	050 JumpIfEqual {60}
	051 Move X3, [X8+24]
	052 Move X0, [X8+64]
	053 Move X2, [X8+40]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 CallNoReturn X3
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void GetInteractionGroups(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> interactionGroups)

Disassembly:
	0x03B71FF4 B 0x3B71FFC
	0x03B71FF8 MOV X21, X0
	0x03B71FFC ADRP X8, 0x5EA000
	0x03B72000 LDR X8, [X8 + 0x7A0]
	0x03B72004 LDR X1, [X8]
	0x03B72008 ADD X0, X31, 0x20
	0x03B7200C BL 0x24A6DD0
	0x03B72010 CBZ X19, 0x3B720A0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+160]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+456]
	007 Move X2, [X8+464]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup GetInteractionGroup(System.String groupName)

Disassembly:
	0x03B72014 MOV X0, X19
	0x03B72018 BL 0x1C16F18
	0x03B7201C B 0x3B72040
	0x03B72020 B 0x3B72040
	0x03B72024 B 0x3B72040
	0x03B72028 B 0x3B72040
	0x03B7202C B 0x3B72040
	0x03B72030 B 0x3B72040
	0x03B72034 B 0x3B72040
	0x03B72038 B 0x3B72040
	0x03B7203C B 0x3B72040
	0x03B72040 MOV X21, X0
	0x03B72044 CMP W1, 0x1
	0x03B72048 B.NE 0x3B7207C
	0x03B7204C MOV X0, X21
	0x03B72050 BL 0x3EB1AD0
	0x03B72054 LDR X22, [X0]
	0x03B72058 BL 0x3EB1AE0
	0x03B7205C ADRP X8, 0x5E9000
	0x03B72060 LDR X8, [X8 + 0x778]
	0x03B72064 ADD X0, X31, 0x40
	0x03B72068 LDR X1, [X8]
	0x03B7206C BL 0x2BC434C
	0x03B72070 CBZ X22, 0x3B71F28
	0x03B72074 MOV X0, X22
	0x03B72078 BL 0x1C16F18
	0x03B7207C MOV X22, X31
	0x03B72080 B 0x3B72088
	0x03B72084 MOV X21, X0
	0x03B72088 ADRP X8, 0x5E9000
	0x03B7208C LDR X8, [X8 + 0x778]
	0x03B72090 LDR X1, [X8]
	0x03B72094 ADD X0, X31, 0x40
	0x03B72098 BL 0x2BC434C
	0x03B7209C CBNZ X22, 0x3B720A8
	0x03B720A0 MOV X0, X21
	0x03B720A4 BL 0x1D2C690
	0x03B720A8 MOV X0, X22
	0x03B720AC BL 0x1C16F18
	0x03B720B0 BL 0x1990590
	0x03B720B4 STP X30, X21, [X31 - 0x20]!
	0x03B720B8 STP X20, X19, [X31 + 0x10]
	0x03B720BC ADRP X21, 0x870000
	0x03B720C0 LDRB W8, [X21 + 0xA32]
	0x03B720C4 MOV X19, X1
	0x03B720C8 MOV X20, X0
	0x03B720CC TBNZ X8, 0x0, 0x3B720E4
	0x03B720D0 ADRP X0, 0x5E8000
	0x03B720D4 LDR X0, [X0 + 0x8D8]
	0x03B720D8 BL 0x1C16CF4
	0x03B720DC MOVZ W8, 0x1
	0x03B720E0 STRB W8, [X21 + 0xA32]
	0x03B720E4 CBZ X19, 0x3B72188
	0x03B720E8 LDR X21, [X19 + 0x18]
	0x03B720EC CBZ X21, 0x3B72188
	0x03B720F0 ADRP X10, 0x5E8000
	0x03B720F4 LDR X8, [X21]
	0x03B720F8 LDR X10, [X10 + 0x8D8]
	0x03B720FC LDRH W9, [X8 + 0x12E]
	0x03B72100 LDR X1, [X10]
	0x03B72104 CBZ X9, 0x3B72128
	0x03B72108 LDR X10, [X8 + 0xB0]
	0x03B7210C ADD X10, X10, 0x8
	0x03B72110 LDUR X11, [X10 - 0x8]
	0x03B72114 CMP X11, X1
	0x03B72118 B.EQ 0x3B72138
	0x03B7211C SUBS X9, X9, 0x1
	0x03B72120 ADD X10, X10, 0x10
	0x03B72124 B.NE 0x3B72110
	0x03B72128 MOVZ W2, 0x8
	0x03B7212C MOV X0, X21
	0x03B72130 BL 0x1C5C788
	0x03B72134 B 0x3B72148
	0x03B72138 LDR W9, [X10]
	0x03B7213C ADD W9, W9, 0x8
	0x03B72140 ADD X8, X8, W9, 0x4, SXTW
	0x03B72144 ADD X0, X8, 0x138
	0x03B72148 LDP X8, X2, [X0]
	0x03B7214C MOV X0, X21
	0x03B72150 MOV X1, X19
	0x03B72154 BLR X8
	0x03B72158 LDR X8, [X20 + 0x40]
	0x03B7215C CBZ X8, 0x3B7217C
	0x03B72160 LDR X3, [X8 + 0x18]
	0x03B72164 LDR X0, [X8 + 0x40]
	0x03B72168 LDR X2, [X8 + 0x28]
	0x03B7216C MOV X1, X19
	0x03B72170 LDP X20, X19, [X31 + 0x10]
	0x03B72174 LDP X30, X21, [X31], #0x20
	0x03B72178 BR X3
	0x03B7217C LDP X20, X19, [X31 + 0x10]
	0x03B72180 LDP X30, X21, [X31], #0x20
	0x03B72184 RET
	0x03B72188 BL 0x1C16F20
	0x03B7218C SUB X31, X31, 0xA0
	0x03B72190 STP X30, X25, [X31 + 0x60]
	0x03B72194 STP X24, X23, [X31 + 0x70]
	0x03B72198 STP X22, X21, [X31 + 0x80]
	0x03B7219C STP X20, X19, [X31 + 0x90]
	0x03B721A0 ADRP X21, 0x870000
	0x03B721A4 LDRB W8, [X21 + 0xA33]
	0x03B721A8 MOV X20, X1
	0x03B721AC MOV X19, X0
	0x03B721B0 TBNZ X8, 0x0, 0x3B72258
	0x03B721B4 ADRP X0, 0x5E9000
	0x03B721B8 LDR X0, [X0 + 0x7C0]
	0x03B721BC BL 0x1C16CF4
	0x03B721C0 ADRP X0, 0x5E9000
	0x03B721C4 LDR X0, [X0 + 0x770]
	0x03B721C8 BL 0x1C16CF4
	0x03B721CC ADRP X0, 0x5E9000
	0x03B721D0 LDR X0, [X0 + 0x778]
	0x03B721D4 BL 0x1C16CF4
	0x03B721D8 ADRP X0, 0x5E9000
	0x03B721DC LDR X0, [X0 + 0x780]
	0x03B721E0 BL 0x1C16CF4
	0x03B721E4 ADRP X0, 0x5E9000
	0x03B721E8 LDR X0, [X0 + 0x788]
	0x03B721EC BL 0x1C16CF4
	0x03B721F0 ADRP X0, 0x5E8000
	0x03B721F4 LDR X0, [X0 + 0x130]
	0x03B721F8 BL 0x1C16CF4
	0x03B721FC ADRP X0, 0x5E8000
	0x03B72200 LDR X0, [X0 + 0x148]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x871000
	009 Move W8, [X21+2604]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x5EA000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move X0, 0x5EA000
	020 Move X0, [X0+1640]
	021 Call 0x1C17CF4
	022 Move X0, 0x5EA000
	023 Move X0, [X0+1656]
	024 Call 0x1C17CF4
	025 Move X0, 0x5EA000
	026 Move X0, [X0+1672]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E9000
	029 Move X0, [X0+2360]
	030 Call 0x1C17CF4
	031 Move X0, 0x5EA000
	032 Move X0, [X0+1712]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+2604], W8
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move [X31+48], X31
	039 Move X8, [X20+160]
	040 Compare X8, 0
	041 JumpIfEqual {113}
	042 Move X0, [X8+16]
	043 Compare X0, 0
	044 JumpIfEqual {113}
	045 Move X8, 0x5EA000
	046 Move X8, [X8+1712]
	047 Move X22, 0x5EA000
	048 Move X23, 0x5E9000
	049 Move X21, 0x5EA000
	050 Move X1, [X8]
	051 Move X22, [X22+1656]
	052 Move X23, [X23+2360]
	053 Move X21, [X21+1640]
	054 Add X8, X31, 8
	055 Call List`1<Object>.GetEnumerator, X0
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move X8, [X31+24]
	058 Move [X31+2], V0
	059 Move [X31+48], X8
	060 Move X1, [X22]
	061 Add X0, X31, 32
	062 Call Enumerator<Object>.MoveNext, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {99}
	067 Move X20, [X31+48]
	068 Compare X20, 0
	069 JumpIfEqual {112}
	070 Move X8, [X20]
	071 Move X1, [X23]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 4
	082 Move X0, X20
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, 4
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X20
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X1, X19
	093 Move X2, X31
	094 Call String.op_Equality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {60}
	099 Move X20, X31
	100 Move X1, [X21]
	101 Add X0, X31, 32
	102 Call Enumerator<Object>.Dispose, X0
	103 Move X0, X20
	104 Move X20, [X31+96]
	105 Move X19, [X31+104]
	106 Move X22, [X31+80]
	107 Move X21, [X31+88]
	108 Move X30, [X31+64]
	109 Move X23, [X31+72]
	110 Add X31, X31, 112
	111 Return X0
	112 Call 0x1C17F20
	113 Call 0x1C17F20
	114 Move X19, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X19
	117 Call 0x3EB2AD0
	118 Move X20, [X0]
	119 Call 0x3EB2AE0
	120 Move X1, [X21]
	121 Add X0, X31, 32
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X20, 0
	124 JumpIfEqual {103}
	125 Move X0, X20
	126 Call 0x1C17F18
	127 Move X20, X31
	128 Move X19, X0
	129 Move X1, [X21]
	130 Add X0, X31, 32
	131 Call Enumerator<Object>.Dispose, X0
	132 Compare X20, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X19
	135 Call 0x1D2D690
	136 Move X0, X20
	137 Call 0x1C17F18
	138 Call 0x1991590

Method: System.Void RegisterInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B72204 BL 0x1C16CF4
	0x03B72208 ADRP X0, 0x5E8000
	0x03B7220C LDR X0, [X0 + 0x8D8]
	0x03B72210 BL 0x1C16CF4
	0x03B72214 ADRP X0, 0x5E8000
	0x03B72218 LDR X0, [X0 + 0x160]
	0x03B7221C BL 0x1C16CF4
	0x03B72220 ADRP X0, 0x5E9000
	0x03B72224 LDR X0, [X0 + 0x7C8]
	0x03B72228 BL 0x1C16CF4
	0x03B7222C ADRP X0, 0x5E9000
	0x03B72230 LDR X0, [X0 + 0x798]
	0x03B72234 BL 0x1C16CF4
	0x03B72238 ADRP X0, 0x581000
	0x03B7223C LDR X0, [X0 + 0x598]
	0x03B72240 BL 0x1C16CF4
	0x03B72244 ADRP X0, 0x5E9000
	0x03B72248 LDR X0, [X0 + 0x7D0]
	0x03B7224C BL 0x1C16CF4
	0x03B72250 MOVZ W8, 0x1
	0x03B72254 STRB W8, [X21 + 0xA33]
	0x03B72258 STP X31, X31, [X31 + 0x40]
	0x03B7225C STR X31, [X31 + 0x50]
	0x03B72260 STP X31, X31, [X31 + 0x30]
	0x03B72264 STP X31, X31, [X31 + 0x20]
	0x03B72268 LDR X0, [X19 + 0xA8]
	0x03B7226C CBZ X0, 0x3B724CC
	0x03B72270 LDR X8, [X0]
	0x03B72274 MOV X1, X20
	0x03B72278 LDP X9, X2, [X8 + 0x178]
	0x03B7227C BLR X9
	0x03B72280 TBZ X0, 0x0, 0x3B724B0
	0x03B72284 ADRP X8, 0x5E8000
	0x03B72288 LDR X8, [X8 + 0x130]
	0x03B7228C MOV X0, X20
	0x03B72290 LDR X1, [X8]
	0x03B72294 BL 0x1C16E00
	0x03B72298 CBZ X0, 0x3B722B4
	0x03B7229C LDR X8, [X19]
	0x03B722A0 MOV X1, X0
	0x03B722A4 MOV X0, X19
	0x03B722A8 LDR X9, [X8 + 0x328]
	0x03B722AC LDR X2, [X8 + 0x330]
	0x03B722B0 BLR X9
	0x03B722B4 ADRP X8, 0x5E8000
	0x03B722B8 LDR X8, [X8 + 0x160]
	0x03B722BC MOV X0, X20
	0x03B722C0 LDR X1, [X8]
	0x03B722C4 BL 0x1C16E00
	0x03B722C8 CBZ X0, 0x3B722D8
	0x03B722CC MOV X1, X0
	0x03B722D0 MOV X0, X19
	0x03B722D4 BL 0x3B72600
	0x03B722D8 ADRP X8, 0x5E8000
	0x03B722DC LDR X8, [X8 + 0x148]
	0x03B722E0 MOV X0, X20
	0x03B722E4 LDR X1, [X8]
	0x03B722E8 BL 0x1C16E00
	0x03B722EC CBZ X0, 0x3B722FC
	0x03B722F0 MOV X1, X0
	0x03B722F4 MOV X0, X19
	0x03B722F8 BL 0x3B72698
	0x03B722FC LDR X0, [X19 + 0xA8]
	0x03B72300 CBZ X0, 0x3B724CC
	0x03B72304 LDR X8, [X0]
	0x03B72308 MOV X1, X20
	0x03B7230C LDP X9, X2, [X8 + 0x1A8]
	0x03B72310 BLR X9
	0x03B72314 TBZ X0, 0x0, 0x3B724B0
	0x03B72318 CBZ X20, 0x3B724CC
	0x03B7231C ADRP X10, 0x5E8000
	0x03B72320 LDR X8, [X20]
	0x03B72324 LDR X10, [X10 + 0x8D8]
	0x03B72328 LDRH W9, [X8 + 0x12E]
	0x03B7232C LDR X1, [X10]
	0x03B72330 CBZ X9, 0x3B72354
	0x03B72334 LDR X10, [X8 + 0xB0]
	0x03B72338 ADD X10, X10, 0x8
	0x03B7233C LDUR X11, [X10 - 0x8]
	0x03B72340 CMP X11, X1
	0x03B72344 B.EQ 0x3B72364
	0x03B72348 SUBS X9, X9, 0x1
	0x03B7234C ADD X10, X10, 0x10
	0x03B72350 B.NE 0x3B7233C
	0x03B72354 MOVZ W2, 0x5
	0x03B72358 MOV X0, X20
	0x03B7235C BL 0x1C5C788
	0x03B72360 B 0x3B72374
	0x03B72364 LDR W9, [X10]
	0x03B72368 ADD W9, W9, 0x5
	0x03B7236C ADD X8, X8, W9, 0x4, SXTW
	0x03B72370 ADD X0, X8, 0x138
	0x03B72374 LDP X8, X1, [X0]
	0x03B72378 MOV X0, X20
	0x03B7237C BLR X8
	0x03B72380 CBZ X0, 0x3B724CC
	0x03B72384 ADRP X8, 0x5E9000
	0x03B72388 LDR X8, [X8 + 0x798]
	0x03B7238C LDR X1, [X8]
	0x03B72390 ADD X8, X31, 0x8
	0x03B72394 BL 0x301CB58
	0x03B72398 LDUR V0, [X31 + 0x8]
	0x03B7239C LDR X8, [X31 + 0x18]
	0x03B723A0 ADRP X22, 0x5E9000
	0x03B723A4 ADRP X23, 0x581000
	0x03B723A8 ADRP X24, 0x5E9000
	0x03B723AC LDR X22, [X22 + 0x780]
	0x03B723B0 LDR X23, [X23 + 0x598]
	0x03B723B4 LDR X24, [X24 + 0x770]
	0x03B723B8 STR V0, [X31 + 0x4]
	0x03B723BC STR X8, [X31 + 0x50]
	0x03B723C0 ADRP X25, 0x5E9000
	0x03B723C4 LDR X25, [X25 + 0x7C0]
	0x03B723C8 LDR X1, [X22]
	0x03B723CC ADD X0, X31, 0x40
	0x03B723D0 BL 0x2BC4350
	0x03B723D4 TBZ X0, 0x0, 0x3B72444
	0x03B723D8 LDR X0, [X23]
	0x03B723DC LDR X21, [X31 + 0x50]
	0x03B723E0 LDR W8, [X0 + 0xE0]
	0x03B723E4 CBNZ W8, 0x3B723EC
	0x03B723E8 BL 0x1C16DFC
	0x03B723EC MOV X0, X21
	0x03B723F0 MOV X1, X31
	0x03B723F4 MOV X2, X31
	0x03B723F8 BL 0x3C3883C
	0x03B723FC TBNZ X0, 0x0, 0x3B723C8
	0x03B72400 LDR X0, [X19 + 0x88]
	0x03B72404 CBZ X0, 0x3B724C8
	0x03B72408 LDR X3, [X24]
	0x03B7240C ADD X2, X31, 0x38
	0x03B72410 MOV X1, X21
	0x03B72414 BL 0x2AA6B2C
	0x03B72418 LDR X8, [X31 + 0x38]
	0x03B7241C CMP X8, X20
	0x03B72420 CSET W8, EQ
	0x03B72424 AND W8, W0, W8, 0x0
	0x03B72428 TBZ X8, 0x0, 0x3B723C8
	0x03B7242C LDR X0, [X19 + 0x88]
	0x03B72430 CBZ X0, 0x3B724D0
	0x03B72434 LDR X2, [X25]
	0x03B72438 MOV X1, X21
	0x03B7243C BL 0x2AA64F8
	0x03B72440 B 0x3B723C8
	0x03B72444 ADRP X8, 0x5E9000
	0x03B72448 LDR X8, [X8 + 0x778]
	0x03B7244C ADD X0, X31, 0x40
	0x03B72450 LDR X1, [X8]
	0x03B72454 BL 0x2BC434C
	0x03B72458 LDR X0, [X19 + 0x160]
	0x03B7245C CBZ X0, 0x3B724CC
	0x03B72460 ADRP X8, 0x5E9000
	0x03B72464 LDR X8, [X8 + 0x7C8]
	0x03B72468 ADD X1, X31, 0x30
	0x03B7246C LDR X2, [X8]
	0x03B72470 BL 0x2EF1058
	0x03B72474 MOV X8, X1
	0x03B72478 LDR X1, [X31 + 0x30]
	0x03B7247C STP X0, X8, [X31 + 0x20]
	0x03B72480 CBZ X1, 0x3B724D4
	0x03B72484 STP X19, X20, [X1 + 0x10]
	0x03B72488 LDR X8, [X19]
	0x03B7248C LDR X9, [X8 + 0x308]
	0x03B72490 LDR X2, [X8 + 0x310]
	0x03B72494 MOV X0, X19
	0x03B72498 BLR X9
	0x03B7249C ADRP X8, 0x5E9000
	0x03B724A0 LDR X8, [X8 + 0x7D0]
	0x03B724A4 ADD X0, X31, 0x20
	0x03B724A8 LDR X1, [X8]
	0x03B724AC BL 0x24A6DD0
	0x03B724B0 LDP X20, X19, [X31 + 0x90]
	0x03B724B4 LDP X22, X21, [X31 + 0x80]
	0x03B724B8 LDP X24, X23, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x871000
	008 Move X22, 0x5E9000
	009 Move W8, [X21+2605]
	010 Move X22, [X22+2336]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x582000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x5EA000
	021 Move X0, [X0+1848]
	022 Call 0x1C17CF4
	023 Move X0, 0x5E9000
	024 Move X0, [X0+2336]
	025 Call 0x1C17CF4
	026 Move X0, 0x5EA000
	027 Move X0, [X0+1856]
	028 Call 0x1C17CF4
	029 Move X0, 0x5EA000
	030 Move X0, [X0+1864]
	031 Call 0x1C17CF4
	032 Move X0, 0x5EA000
	033 Move X0, [X0+1776]
	034 Call 0x1C17CF4
	035 Move X0, 0x5EA000
	036 Move X0, [X0+1784]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+2605], W8
	040 Move X1, [X22]
	041 Move X0, X20
	042 Move [X31+24], X31
	043 Move [X31], X31
	044 Move [X31+8], X31
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfEqual {86}
	049 Move X8, [X21]
	050 Move X1, [X22]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X21
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X21, X0
	071 Compare X0, 0
	072 JumpIfEqual {86}
	073 Move X0, [X19+160]
	074 Compare X0, 0
	075 JumpIfEqual {169}
	076 Move X8, [X0]
	077 Move X1, X21
	078 Move X9, [X8+376]
	079 Move X2, [X8+384]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {138}
	085 Move W22, W31
	086 Move W22, 1
	087 Move X0, [X19+152]
	088 Compare X0, 0
	089 JumpIfEqual {169}
	090 Move X8, [X0]
	091 Move X1, X20
	092 Move X9, [X8+408]
	093 Move X2, [X8+416]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {162}
	099 Move TEMP, X22
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {111}
	103 Move X0, [X19+216]
	104 Compare X0, 0
	105 JumpIfEqual {169}
	106 Move X8, 0x5EA000
	107 Move X8, [X8+1848]
	108 Move X1, X20
	109 Move X2, [X8]
	110 Call HashSet`1<Object>.Add, X0, X1
	111 Move X0, [X19+328]
	112 Compare X0, 0
	113 JumpIfEqual {169}
	114 Move X8, 0x5EA000
	115 Move X8, [X8+1856]
	116 Add X1, X31, 24
	117 Move X2, [X8]
	118 Call 0x2EF2058, X0, X1
	119 Move X8, X1
	120 Move X1, [X31+24]
	121 Move [X31], X0
	122 Move [X31+8], X8
	123 Compare X1, 0
	124 JumpIfEqual {170}
	125 Move [X1+16], X19
	126 Move [X1+24], X20
	127 Move [X1+32], X21
	128 Move X8, [X19]
	129 Move X9, [X8+680]
	130 Move X2, [X8+688]
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, 0x5EA000
	134 Move X8, [X8+1864]
	135 Add X0, X31, 0
	136 Move X1, [X8]
	137 Call 0x24A7DD0, X0
	138 Move X8, 0x5EA000
	139 Move X8, [X8+1776]
	140 Move X1, X20
	141 Move X2, X31
	142 Move X0, [X8]
	143 Call String.Format, X0, X1
	144 Move X8, 0x5EA000
	145 Move X8, [X8+1784]
	146 Move X2, X31
	147 Move X1, [X8]
	148 Call String.Concat, X0, X1
	149 Move X8, 0x582000
	150 Move X8, [X8+2600]
	151 Move X20, X0
	152 Move X8, [X8]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X0, X20
	159 Move X1, X19
	160 Move X2, X31
	161 Call Debug.LogError, X0, X1
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X22, [X31+32]
	165 Move X21, [X31+40]
	166 Move X30, [X31+16]
	167 Add X31, X31, 64
	168 Return 
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Move X20, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X20
	174 Call 0x3EB2AD0
	175 Move X19, [X0]
	176 Call 0x3EB2AE0
	177 Move X8, 0x5EA000
	178 Move X8, [X8+1864]
	179 Add X0, X31, 0
	180 Move X1, [X8]
	181 Call 0x24A7DD0, X0
	182 Compare X19, 0
	183 JumpIfEqual {162}
	184 Move X0, X19
	185 Call 0x1C17F18
	186 Move X19, X31
	187 Move X20, X0
	188 Move X8, 0x5EA000
	189 Move X8, [X8+1864]
	190 Move X1, [X8]
	191 Add X0, X31, 0
	192 Call 0x24A7DD0, X0
	193 Compare X19, 0
	194 JumpIfNotEqual {197}
	195 Move X0, X20
	196 Call 0x1D2D690
	197 Move X0, X19
	198 Call 0x1C17F18
	199 Call 0x1991590

Method: System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)

Disassembly:
	0x03B724BC LDP X30, X25, [X31 + 0x60]
	0x03B724C0 ADD X31, X31, 0xA0
	0x03B724C4 RET
	0x03B724C8 BL 0x1C16F20
	0x03B724CC BL 0x1C16F20
	0x03B724D0 BL 0x1C16F20
	0x03B724D4 BL 0x1C16F20
	0x03B724D8 B 0x3B724DC
	0x03B724DC MOV X21, X0
	0x03B724E0 CMP W1, 0x1
	0x03B724E4 B.NE 0x3B72518
	0x03B724E8 MOV X0, X21
	0x03B724EC BL 0x3EB1AD0
	0x03B724F0 LDR X19, [X0]
	0x03B724F4 BL 0x3EB1AE0
	0x03B724F8 ADRP X8, 0x5E9000
	0x03B724FC LDR X8, [X8 + 0x7D0]
	0x03B72500 ADD X0, X31, 0x20
	0x03B72504 LDR X1, [X8]
	0x03B72508 BL 0x24A6DD0
	0x03B7250C CBZ X19, 0x3B724B0
	0x03B72510 MOV X0, X19
	0x03B72514 BL 0x1C16F18
	0x03B72518 MOV X19, X31
	0x03B7251C B 0x3B72524
	0x03B72520 MOV X21, X0
	0x03B72524 ADRP X8, 0x5E9000
	0x03B72528 LDR X8, [X8 + 0x7D0]
	0x03B7252C LDR X1, [X8]
	0x03B72530 ADD X0, X31, 0x20
	0x03B72534 BL 0x24A6DD0
	0x03B72538 CBZ X19, 0x3B725BC
	0x03B7253C MOV X0, X19
	0x03B72540 BL 0x1C16F18
	0x03B72544 B 0x3B7255C
	0x03B72548 B 0x3B7255C
	0x03B7254C B 0x3B7255C
	0x03B72550 B 0x3B7255C
	0x03B72554 B 0x3B7255C
	0x03B72558 B 0x3B7255C
	0x03B7255C MOV X21, X0
	0x03B72560 CMP W1, 0x1
	0x03B72564 B.NE 0x3B72598
	0x03B72568 MOV X0, X21
	0x03B7256C BL 0x3EB1AD0
	0x03B72570 LDR X22, [X0]
	0x03B72574 BL 0x3EB1AE0
	0x03B72578 ADRP X8, 0x5E9000
	0x03B7257C LDR X8, [X8 + 0x778]
	0x03B72580 ADD X0, X31, 0x40
	0x03B72584 LDR X1, [X8]
	0x03B72588 BL 0x2BC434C
	0x03B7258C CBZ X22, 0x3B72458
	0x03B72590 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x871000
	006 Move W8, [X21+2606]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5E9000
	014 Move X0, [X0+760]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2606], W8
	018 Compare X19, 0
	019 JumpIfEqual {65}
	020 Move X21, [X19+24]
	021 Compare X21, 0
	022 JumpIfEqual {65}
	023 Move X10, 0x5E9000
	024 Move X8, [X21]
	025 Move X10, [X10+760]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 8
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 8
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X21
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X20+48]
	049 Compare X8, 0
	050 JumpIfEqual {60}
	051 Move X3, [X8+24]
	052 Move X0, [X8+64]
	053 Move X2, [X8+40]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 CallNoReturn X3
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void UnregisterInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B72594 BL 0x1C16F18
	0x03B72598 MOV X22, X31
	0x03B7259C B 0x3B725A4
	0x03B725A0 MOV X21, X0
	0x03B725A4 ADRP X8, 0x5E9000
	0x03B725A8 LDR X8, [X8 + 0x778]
	0x03B725AC LDR X1, [X8]
	0x03B725B0 ADD X0, X31, 0x40
	0x03B725B4 BL 0x2BC434C
	0x03B725B8 CBNZ X22, 0x3B725C4
	0x03B725BC MOV X0, X21
	0x03B725C0 BL 0x1D2C690
	0x03B725C4 MOV X0, X22
	0x03B725C8 BL 0x1C16F18
	0x03B725CC BL 0x1990590
	0x03B725D0 STR X30, [X31 - 0x10]!
	0x03B725D4 LDR X0, [X0 + 0xA8]
	0x03B725D8 CBZ X0, 0x3B725EC
	0x03B725DC LDR X8, [X0]
	0x03B725E0 LDP X3, X2, [X8 + 0x178]
	0x03B725E4 LDR X30, [X31], #0x10
	0x03B725E8 BR X3
	0x03B725EC BL 0x1C16F20
	0x03B725F0 LDR X8, [X0]
	0x03B725F4 LDR X3, [X8 + 0x328]
	0x03B725F8 LDR X2, [X8 + 0x330]
	0x03B725FC BR X3
	0x03B72600 STP X30, X21, [X31 - 0x20]!
	0x03B72604 STP X20, X19, [X31 + 0x10]
	0x03B72608 ADRP X21, 0x870000
	0x03B7260C LDRB W8, [X21 + 0xA44]
	0x03B72610 MOV X19, X1
	0x03B72614 MOV X20, X0
	0x03B72618 TBNZ X8, 0x0, 0x3B72630
	0x03B7261C ADRP X0, 0x5E8000
	0x03B72620 LDR X0, [X0 + 0x438]
	0x03B72624 BL 0x1C16CF4
	0x03B72628 MOVZ W8, 0x1
	0x03B7262C STRB W8, [X21 + 0xA44]
	0x03B72630 CBZ X19, 0x3B72668
	0x03B72634 ADRP X8, 0x5E8000
	0x03B72638 LDR X8, [X8 + 0x438]
	0x03B7263C LDR X9, [X19]
	0x03B72640 LDR X8, [X8]
	0x03B72644 LDRB W11, [X9 + 0x130]
	0x03B72648 LDRB W10, [X8 + 0x130]
	0x03B7264C CMP W11, W10
	0x03B72650 B.CC 0x3B72668
	0x03B72654 LDR X9, [X9 + 0xC8]
	0x03B72658 ADD X9, X9, X10, 0x3, LSL
	0x03B7265C LDUR X9, [X9 - 0x8]
	0x03B72660 CMP X9, X8
	0x03B72664 B.EQ 0x3B72688
	0x03B72668 LDR X8, [X20]
	0x03B7266C LDR X3, [X8 + 0x358]
	0x03B72670 LDR X2, [X8 + 0x360]
	0x03B72674 MOV X0, X20
	0x03B72678 MOV X1, X19
	0x03B7267C LDP X20, X19, [X31 + 0x10]
	0x03B72680 LDP X30, X21, [X31], #0x20
	0x03B72684 BR X3
	0x03B72688 LDR X8, [X20]
	0x03B7268C LDR X3, [X8 + 0x528]
	0x03B72690 LDR X2, [X8 + 0x530]
	0x03B72694 B 0x3B72674
	0x03B72698 STP X30, X21, [X31 - 0x20]!
	0x03B7269C STP X20, X19, [X31 + 0x10]
	0x03B726A0 ADRP X21, 0x870000
	0x03B726A4 LDRB W8, [X21 + 0xA4A]
	0x03B726A8 MOV X19, X1
	0x03B726AC MOV X20, X0
	0x03B726B0 TBNZ X8, 0x0, 0x3B726C8
	0x03B726B4 ADRP X0, 0x5E8000
	0x03B726B8 LDR X0, [X0 + 0x438]
	0x03B726BC BL 0x1C16CF4
	0x03B726C0 MOVZ W8, 0x1
	0x03B726C4 STRB W8, [X21 + 0xA4A]
	0x03B726C8 CBZ X19, 0x3B72700
	0x03B726CC ADRP X8, 0x5E8000
	0x03B726D0 LDR X8, [X8 + 0x438]
	0x03B726D4 LDR X9, [X19]
	0x03B726D8 LDR X8, [X8]
	0x03B726DC LDRB W11, [X9 + 0x130]
	0x03B726E0 LDRB W10, [X8 + 0x130]
	0x03B726E4 CMP W11, W10
	0x03B726E8 B.CC 0x3B72700
	0x03B726EC LDR X9, [X9 + 0xC8]
	0x03B726F0 ADD X9, X9, X10, 0x3, LSL
	0x03B726F4 LDUR X9, [X9 - 0x8]
	0x03B726F8 CMP X9, X8
	0x03B726FC B.EQ 0x3B72720
	0x03B72700 LDR X8, [X20]
	0x03B72704 LDR X3, [X8 + 0x388]
	0x03B72708 LDR X2, [X8 + 0x390]
	0x03B7270C MOV X0, X20
	0x03B72710 MOV X1, X19
	0x03B72714 LDP X20, X19, [X31 + 0x10]
	0x03B72718 LDP X30, X21, [X31], #0x20
	0x03B7271C BR X3
	0x03B72720 LDR X8, [X20]
	0x03B72724 LDR X3, [X8 + 0x558]
	0x03B72728 LDR X2, [X8 + 0x560]
	0x03B7272C B 0x3B7270C
	0x03B72730 STP X30, X21, [X31 - 0x20]!
	0x03B72734 STP X20, X19, [X31 + 0x10]
	0x03B72738 ADRP X21, 0x870000
	0x03B7273C LDRB W8, [X21 + 0xA34]
	0x03B72740 MOV X19, X1
	0x03B72744 MOV X20, X0
	0x03B72748 TBNZ X8, 0x0, 0x3B72760
	0x03B7274C ADRP X0, 0x5E8000
	0x03B72750 LDR X0, [X0 + 0x8D8]
	0x03B72754 BL 0x1C16CF4
	0x03B72758 MOVZ W8, 0x1
	0x03B7275C STRB W8, [X21 + 0xA34]
	0x03B72760 CBZ X19, 0x3B72804
	0x03B72764 LDR X21, [X19 + 0x18]
	0x03B72768 CBZ X21, 0x3B72804
	0x03B7276C ADRP X10, 0x5E8000
	0x03B72770 LDR X8, [X21]
	0x03B72774 LDR X10, [X10 + 0x8D8]
	0x03B72778 LDRH W9, [X8 + 0x12E]
	0x03B7277C LDR X1, [X10]
	0x03B72780 CBZ X9, 0x3B727A4
	0x03B72784 LDR X10, [X8 + 0xB0]
	0x03B72788 ADD X10, X10, 0x8
	0x03B7278C LDUR X11, [X10 - 0x8]
	0x03B72790 CMP X11, X1
	0x03B72794 B.EQ 0x3B727B4
	0x03B72798 SUBS X9, X9, 0x1
	0x03B7279C ADD X10, X10, 0x10
	0x03B727A0 B.NE 0x3B7278C
	0x03B727A4 MOVZ W2, 0x9
	0x03B727A8 MOV X0, X21
	0x03B727AC BL 0x1C5C788
	0x03B727B0 B 0x3B727C4
	0x03B727B4 LDR W9, [X10]
	0x03B727B8 ADD W9, W9, 0x9
	0x03B727BC ADD X8, X8, W9, 0x4, SXTW
	0x03B727C0 ADD X0, X8, 0x138
	0x03B727C4 LDP X8, X2, [X0]
	0x03B727C8 MOV X0, X21
	0x03B727CC MOV X1, X19
	0x03B727D0 BLR X8
	0x03B727D4 LDR X8, [X20 + 0x48]
	0x03B727D8 CBZ X8, 0x3B727F8
	0x03B727DC LDR X3, [X8 + 0x18]
	0x03B727E0 LDR X0, [X8 + 0x40]
	0x03B727E4 LDR X2, [X8 + 0x28]
	0x03B727E8 MOV X1, X19
	0x03B727EC LDP X20, X19, [X31 + 0x10]
	0x03B727F0 LDP X30, X21, [X31], #0x20
	0x03B727F4 BR X3
	0x03B727F8 LDP X20, X19, [X31 + 0x10]
	0x03B727FC LDP X30, X21, [X31], #0x20
	0x03B72800 RET
	0x03B72804 BL 0x1C16F20
	0x03B72808 STR X30, [X31 - 0x30]!
	0x03B7280C STP X22, X21, [X31 + 0x10]
	0x03B72810 STP X20, X19, [X31 + 0x20]
	0x03B72814 ADRP X22, 0x870000
	0x03B72818 ADRP X21, 0x581000
	0x03B7281C LDRB W8, [X22 + 0xA35]
	0x03B72820 LDR X21, [X21 + 0x598]
	0x03B72824 MOV X19, X1
	0x03B72828 MOV X20, X0
	0x03B7282C TBNZ X8, 0x0, 0x3B7288C
	0x03B72830 ADRP X0, 0x581000
	0x03B72834 LDR X0, [X0 + 0xA28]
	0x03B72838 BL 0x1C16CF4
	0x03B7283C ADRP X0, 0x5E9000
	0x03B72840 LDR X0, [X0 + 0x7D8]
	0x03B72844 BL 0x1C16CF4
	0x03B72848 ADRP X0, 0x5E9000
	0x03B7284C LDR X0, [X0 + 0x7E0]
	0x03B72850 BL 0x1C16CF4
	0x03B72854 ADRP X0, 0x581000
	0x03B72858 LDR X0, [X0 + 0x598]
	0x03B7285C BL 0x1C16CF4
	0x03B72860 ADRP X0, 0x5E9000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x871000
	007 Move W8, [X21+2607]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x5EA000
	015 Move X0, [X0+1872]
	016 Call 0x1C17CF4
	017 Move X0, 0x5E9000
	018 Move X0, [X0+800]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E9000
	021 Move X0, [X0+760]
	022 Call 0x1C17CF4
	023 Move X0, 0x5E9000
	024 Move X0, [X0+808]
	025 Call 0x1C17CF4
	026 Move X0, 0x5EA000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x582000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x5EA000
	033 Move X0, [X0+1888]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2607], W8
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move [X31+8], X31
	040 Move X0, [X19+152]
	041 Compare X0, 0
	042 JumpIfEqual {183}
	043 Move X8, [X0]
	044 Move X1, X20
	045 Move X9, [X8+376]
	046 Move X2, [X8+384]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {177}
	052 Compare X20, 0
	053 JumpIfEqual {183}
	054 Move X10, 0x5E9000
	055 Move X8, [X20]
	056 Move X10, [X10+760]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 5
	068 Move X0, X20
	069 Call 0x1C5D788
	070 Move W9, [X10]
	071 Add W9, W9, 5
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X20
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, 0x582000
	079 Move X8, [X8+1432]
	080 Move X21, X0
	081 Move X8, [X8]
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X0, X21
	088 Move X1, X31
	089 Move X2, X31
	090 Call Object.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {108}
	095 Compare X21, 0
	096 JumpIfEqual {183}
	097 Move X0, X21
	098 Move X1, X31
	099 Call Component.get_gameObject, X0
	100 Compare X0, 0
	101 JumpIfEqual {183}
	102 Move X1, X31
	103 Call GameObject.get_activeSelf, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {111}
	108 Move X0, X19
	109 Move X1, X20
	110 Call XRInteractionManager.CancelInteractorFocusInternal, X0, X1
	111 Move X8, 0x5E9000
	112 Move X8, [X8+808]
	113 Move X0, X20
	114 Move X1, [X8]
	115 Call 0x1C17E00
	116 Compare X0, 0
	117 JumpIfEqual {121}
	118 Move X1, X0
	119 Move X0, X19
	120 Call XRInteractionManager.CancelInteractorSelectionInternal, X0, X1
	121 Move X8, 0x5E9000
	122 Move X8, [X8+800]
	123 Move X0, X20
	124 Move X1, [X8]
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {131}
	128 Move X1, X0
	129 Move X0, X19
	130 Call XRInteractionManager.CancelInteractorHoverInternal, X0, X1
	131 Move X0, [X19+152]
	132 Compare X0, 0
	133 JumpIfEqual {183}
	134 Move X8, [X0]
	135 Move X1, X20
	136 Move X9, [X8+424]
	137 Move X2, [X8+432]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {177}
	143 Move X0, [X19+216]
	144 Compare X0, 0
	145 JumpIfEqual {183}
	146 Move X8, 0x5EA000
	147 Move X8, [X8+1872]
	148 Move X1, X20
	149 Move X2, [X8]
	150 Call HashSet`1<Object>.Remove, X0, X1
	151 Move X0, [X19+336]
	152 Compare X0, 0
	153 JumpIfEqual {183}
	154 Move X8, 0x5EA000
	155 Move X8, [X8+1880]
	156 Add X1, X31, 24
	157 Move X2, [X8]
	158 Call 0x2EF2058, X0, X1
	159 Move X8, X1
	160 Move X1, [X31+24]
	161 Move [X31+8], X0
	162 Move [X31+16], X8
	163 Compare X1, 0
	164 JumpIfEqual {184}
	165 Move [X1+16], X19
	166 Move [X1+24], X20
	167 Move X8, [X19]
	168 Move X9, [X8+712]
	169 Move X2, [X8+720]
	170 Move X0, X19
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X8, 0x5EA000
	173 Move X8, [X8+1888]
	174 Add X0, X31, 8
	175 Move X1, [X8]
	176 Call 0x24A7DD0, X0
	177 Move X20, [X31+48]
	178 Move X19, [X31+56]
	179 Move X30, [X31+32]
	180 Move X21, [X31+40]
	181 Add X31, X31, 64
	182 Return 
	183 Call 0x1C17F20
	184 Call 0x1C17F20
	185 Move X20, X0
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X0, X20
	188 Call 0x3EB2AD0
	189 Move X19, [X0]
	190 Call 0x3EB2AE0
	191 Move X8, 0x5EA000
	192 Move X8, [X8+1888]
	193 Add X0, X31, 8
	194 Move X1, [X8]
	195 Call 0x24A7DD0, X0
	196 Compare X19, 0
	197 JumpIfEqual {177}
	198 Move X0, X19
	199 Call 0x1C17F18
	200 Move X19, X31
	201 Move X20, X0
	202 Move X8, 0x5EA000
	203 Move X8, [X8+1888]
	204 Move X1, [X8]
	205 Add X0, X31, 8
	206 Call 0x24A7DD0, X0
	207 Compare X19, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X20
	210 Call 0x1D2D690
	211 Move X0, X19
	212 Call 0x1C17F18
	213 Call 0x1991590

Method: System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)

Disassembly:
	0x03B72B6C BL 0x1C16D08
	0x03B72B70 BL 0x1C16F10
	0x03B72B74 MOV X19, X0
	0x03B72B78 ADRP X0, 0x5A9000
	0x03B72B7C LDR X0, [X0 + 0xA58]
	0x03B72B80 BL 0x1C16D08
	0x03B72B84 MOV X1, X0
	0x03B72B88 MOV X0, X19
	0x03B72B8C MOV X2, X31
	0x03B72B90 BL 0x330E100
	0x03B72B94 ADRP X0, 0x5E9000
	0x03B72B98 LDR X0, [X0 + 0x800]
	0x03B72B9C BL 0x1C16D08
	0x03B72BA0 MOV X1, X0
	0x03B72BA4 MOV X0, X19
	0x03B72BA8 BL 0x1C16DEC
	0x03B72BAC BL 0x1C16F20
	0x03B72BB0 STP X30, X19, [X31 - 0x10]!
	0x03B72BB4 CBZ X1, 0x3B72BD0
	0x03B72BB8 LDR X0, [X0 + 0xA8]
	0x03B72BBC CBZ X0, 0x3B72C18
	0x03B72BC0 LDR X8, [X0]
	0x03B72BC4 LDP X3, X2, [X8 + 0x1C8]
	0x03B72BC8 LDP X30, X19, [X31], #0x10
	0x03B72BCC BR X3
	0x03B72BD0 ADRP X0, 0x586000
	0x03B72BD4 LDR X0, [X0 + 0x528]
	0x03B72BD8 BL 0x1C16D08
	0x03B72BDC BL 0x1C16F10
	0x03B72BE0 MOV X19, X0
	0x03B72BE4 ADRP X0, 0x5A9000
	0x03B72BE8 LDR X0, [X0 + 0xA58]
	0x03B72BEC BL 0x1C16D08
	0x03B72BF0 MOV X1, X0
	0x03B72BF4 MOV X0, X19
	0x03B72BF8 MOV X2, X31
	0x03B72BFC BL 0x330E100
	0x03B72C00 ADRP X0, 0x5E9000
	0x03B72C04 LDR X0, [X0 + 0x808]
	0x03B72C08 BL 0x1C16D08
	0x03B72C0C MOV X1, X0
	0x03B72C10 MOV X0, X19
	0x03B72C14 BL 0x1C16DEC
	0x03B72C18 BL 0x1C16F20
	0x03B72C1C SUB X31, X31, 0x40
	0x03B72C20 STP X30, X23, [X31 + 0x10]
	0x03B72C24 STP X22, X21, [X31 + 0x20]
	0x03B72C28 STP X20, X19, [X31 + 0x30]
	0x03B72C2C ADRP X23, 0x870000
	0x03B72C30 ADRP X22, 0x581000
	0x03B72C34 LDRB W8, [X23 + 0xA37]
	0x03B72C38 LDR X22, [X22 + 0x598]
	0x03B72C3C MOV X19, X2
	0x03B72C40 MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x871000
	006 Move W8, [X21+2608]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5E9000
	014 Move X0, [X0+760]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2608], W8
	018 Compare X19, 0
	019 JumpIfEqual {65}
	020 Move X21, [X19+24]
	021 Compare X21, 0
	022 JumpIfEqual {65}
	023 Move X10, 0x5E9000
	024 Move X8, [X21]
	025 Move X10, [X10+760]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 9
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 9
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X21
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X20+56]
	049 Compare X8, 0
	050 JumpIfEqual {60}
	051 Move X3, [X8+24]
	052 Move X0, [X8+64]
	053 Move X2, [X8+40]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 CallNoReturn X3
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void RegisterInteractable(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B72C44 MOV X21, X0
	0x03B72C48 TBNZ X8, 0x0, 0x3B72C78
	0x03B72C4C ADRP X0, 0x5E9000
	0x03B72C50 LDR X0, [X0 + 0x7E0]
	0x03B72C54 BL 0x1C16CF4
	0x03B72C58 ADRP X0, 0x5E9000
	0x03B72C5C LDR X0, [X0 + 0x770]
	0x03B72C60 BL 0x1C16CF4
	0x03B72C64 ADRP X0, 0x581000
	0x03B72C68 LDR X0, [X0 + 0x598]
	0x03B72C6C BL 0x1C16CF4
	0x03B72C70 MOVZ W8, 0x1
	0x03B72C74 STRB W8, [X23 + 0xA37]
	0x03B72C78 STR X31, [X31 + 0x8]
	0x03B72C7C STR X31, [X19]
	0x03B72C80 LDR X0, [X22]
	0x03B72C84 LDR W8, [X0 + 0xE0]
	0x03B72C88 CBNZ W8, 0x3B72C90
	0x03B72C8C BL 0x1C16DFC
	0x03B72C90 MOV X0, X20
	0x03B72C94 MOV X1, X31
	0x03B72C98 MOV X2, X31
	0x03B72C9C BL 0x3C3883C
	0x03B72CA0 TBNZ X0, 0x0, 0x3B72D28
	0x03B72CA4 LDR X0, [X21 + 0x88]
	0x03B72CA8 CBZ X0, 0x3B72DA4
	0x03B72CAC ADRP X8, 0x5E9000
	0x03B72CB0 LDR X8, [X8 + 0x770]
	0x03B72CB4 MOV X1, X20
	0x03B72CB8 MOV X2, X19
	0x03B72CBC LDR X3, [X8]
	0x03B72CC0 BL 0x2AA6B2C
	0x03B72CC4 TBNZ X0, 0x0, 0x3B72D30
	0x03B72CC8 LDR X0, [X21 + 0x90]
	0x03B72CCC CBZ X0, 0x3B72DA4
	0x03B72CD0 ADRP X8, 0x5E9000
	0x03B72CD4 LDR X8, [X8 + 0x7E0]
	0x03B72CD8 ADD X2, X31, 0x8
	0x03B72CDC MOV X1, X20
	0x03B72CE0 LDR X3, [X8]
	0x03B72CE4 BL 0x2AA6B2C
	0x03B72CE8 TBZ X0, 0x0, 0x3B72D30
	0x03B72CEC LDR X0, [X22]
	0x03B72CF0 LDR X20, [X31 + 0x8]
	0x03B72CF4 LDR W8, [X0 + 0xE0]
	0x03B72CF8 CBNZ W8, 0x3B72D00
	0x03B72CFC BL 0x1C16DFC
	0x03B72D00 MOV X0, X20
	0x03B72D04 MOV X1, X31
	0x03B72D08 MOV X2, X31
	0x03B72D0C BL 0x3C354F8
	0x03B72D10 TBZ X0, 0x0, 0x3B72D30
	0x03B72D14 LDR X8, [X31 + 0x8]
	0x03B72D18 CBZ X8, 0x3B72DA4
	0x03B72D1C LDR X8, [X8 + 0x48]
	0x03B72D20 STR X8, [X19]
	0x03B72D24 CBNZ X8, 0x3B72D38
	0x03B72D28 MOV W0, W31
	0x03B72D2C B 0x3B72D6C
	0x03B72D30 LDR X8, [X19]
	0x03B72D34 CBZ X8, 0x3B72D28
	0x03B72D38 LDR X9, [X8]
	0x03B72D3C LDR X0, [X22]
	0x03B72D40 LDRB W11, [X9 + 0x130]
	0x03B72D44 LDRB W10, [X0 + 0x130]
	0x03B72D48 CMP W11, W10
	0x03B72D4C B.CC 0x3B72D68
	0x03B72D50 LDR X9, [X9 + 0xC8]
	0x03B72D54 ADD X9, X9, X10, 0x3, LSL
	0x03B72D58 LDUR X9, [X9 - 0x8]
	0x03B72D5C CMP X9, X0
	0x03B72D60 CSEL X19, X8, X31, EQ
	0x03B72D64 B.EQ 0x3B72D84
	0x03B72D68 MOVZ W0, 0x1
	0x03B72D6C LDP X20, X19, [X31 + 0x30]
	0x03B72D70 LDP X22, X21, [X31 + 0x20]
	0x03B72D74 LDP X30, X23, [X31 + 0x10]
	0x03B72D78 AND W0, W0, 0x1
	0x03B72D7C ADD X31, X31, 0x40
	0x03B72D80 RET
	0x03B72D84 LDR W8, [X0 + 0xE0]
	0x03B72D88 CBNZ W8, 0x3B72D90
	0x03B72D8C BL 0x1C16DFC
	0x03B72D90 MOV X0, X19
	0x03B72D94 MOV X1, X31
	0x03B72D98 MOV X2, X31
	0x03B72D9C BL 0x3C354F8
	0x03B72DA0 B 0x3B72D6C
	0x03B72DA4 BL 0x1C16F20
	0x03B72DA8 STR X30, [X31 - 0x40]!
	0x03B72DAC STP X24, X23, [X31 + 0x10]
	0x03B72DB0 STP X22, X21, [X31 + 0x20]
	0x03B72DB4 STP X20, X19, [X31 + 0x30]
	0x03B72DB8 ADRP X24, 0x870000
	0x03B72DBC ADRP X23, 0x581000
	0x03B72DC0 LDRB W8, [X24 + 0xA38]
	0x03B72DC4 LDR X23, [X23 + 0x598]
	0x03B72DC8 MOV X20, X3
	0x03B72DCC MOV X19, X2
	0x03B72DD0 MOV X21, X1
	0x03B72DD4 MOV X22, X0
	0x03B72DD8 TBNZ X8, 0x0, 0x3B72E08
	0x03B72DDC ADRP X0, 0x5E9000
	0x03B72DE0 LDR X0, [X0 + 0x7E0]
	0x03B72DE4 BL 0x1C16CF4
	0x03B72DE8 ADRP X0, 0x5E9000
	0x03B72DEC LDR X0, [X0 + 0x770]
	0x03B72DF0 BL 0x1C16CF4
	0x03B72DF4 ADRP X0, 0x581000
	0x03B72DF8 LDR X0, [X0 + 0x598]
	0x03B72DFC BL 0x1C16CF4
	0x03B72E00 MOVZ W8, 0x1
	0x03B72E04 STRB W8, [X24 + 0xA38]
	0x03B72E08 STR X31, [X19]
	0x03B72E0C STR X31, [X20]
	0x03B72E10 LDR X0, [X23]
	0x03B72E14 LDR W8, [X0 + 0xE0]
	0x03B72E18 CBNZ W8, 0x3B72E20
	0x03B72E1C BL 0x1C16DFC
	0x03B72E20 MOV X0, X21
	0x03B72E24 MOV X1, X31
	0x03B72E28 MOV X2, X31
	0x03B72E2C BL 0x3C3883C
	0x03B72E30 TBNZ X0, 0x0, 0x3B72F10
	0x03B72E34 LDR X0, [X22 + 0x88]
	0x03B72E38 CBZ X0, 0x3B72F54
	0x03B72E3C ADRP X8, 0x5E9000
	0x03B72E40 LDR X8, [X8 + 0x770]
	0x03B72E44 MOV X1, X21
	0x03B72E48 MOV X2, X19
	0x03B72E4C LDR X3, [X8]
	0x03B72E50 BL 0x2AA6B2C
	0x03B72E54 LDR X8, [X22 + 0x90]
	0x03B72E58 CBZ X8, 0x3B72F54
	0x03B72E5C ADRP X9, 0x5E9000
	0x03B72E60 LDR X9, [X9 + 0x7E0]
	0x03B72E64 MOV W22, W0
	0x03B72E68 MOV X0, X8
	0x03B72E6C MOV X1, X21
	0x03B72E70 LDR X3, [X9]
	0x03B72E74 MOV X2, X20
	0x03B72E78 BL 0x2AA6B2C
	0x03B72E7C TBZ X0, 0x0, 0x3B72EC8
	0x03B72E80 LDR X0, [X23]
	0x03B72E84 LDR X21, [X20]
	0x03B72E88 LDR W8, [X0 + 0xE0]
	0x03B72E8C CBNZ W8, 0x3B72E94
	0x03B72E90 BL 0x1C16DFC
	0x03B72E94 MOV X0, X21
	0x03B72E98 MOV X1, X31
	0x03B72E9C MOV X2, X31
	0x03B72EA0 BL 0x3C354F8
	0x03B72EA4 TBZ X0, 0x0, 0x3B72EC8
	0x03B72EA8 LDR X8, [X20]
	0x03B72EAC CBZ X8, 0x3B72F54
	0x03B72EB0 LDR X8, [X8 + 0x48]
	0x03B72EB4 TBZ X22, 0x0, 0x3B72F08
	0x03B72EB8 LDR X9, [X19]
	0x03B72EBC CMP X8, X9
	0x03B72EC0 B.EQ 0x3B72ECC
	0x03B72EC4 STR X31, [X20]
	0x03B72EC8 LDR X8, [X19]
	0x03B72ECC CBZ X8, 0x3B72F10
	0x03B72ED0 LDR X9, [X8]
	0x03B72ED4 LDR X0, [X23]
	0x03B72ED8 LDRB W11, [X9 + 0x130]
	0x03B72EDC LDRB W10, [X0 + 0x130]
	0x03B72EE0 CMP W11, W10
	0x03B72EE4 B.CC 0x3B72F00
	0x03B72EE8 LDR X9, [X9 + 0xC8]
	0x03B72EEC ADD X9, X9, X10, 0x3, LSL
	0x03B72EF0 LDUR X9, [X9 - 0x8]
	0x03B72EF4 CMP X9, X0
	0x03B72EF8 CSEL X19, X8, X31, EQ
	0x03B72EFC B.EQ 0x3B72F28
	0x03B72F00 MOVZ W0, 0x1
	0x03B72F04 B 0x3B72F14
	0x03B72F08 STR X8, [X19]
	0x03B72F0C CBNZ X8, 0x3B72ED0
	0x03B72F10 MOV W0, W31
	0x03B72F14 LDP X20, X19, [X31 + 0x30]
	0x03B72F18 LDP X22, X21, [X31 + 0x20]
	0x03B72F1C LDP X24, X23, [X31 + 0x10]
	0x03B72F20 LDR X30, [X31], #0x40
	0x03B72F24 RET
	0x03B72F28 LDR W8, [X0 + 0xE0]
	0x03B72F2C CBNZ W8, 0x3B72F34
	0x03B72F30 BL 0x1C16DFC
	0x03B72F34 MOV X0, X19
	0x03B72F38 LDP X20, X19, [X31 + 0x30]
	0x03B72F3C LDP X22, X21, [X31 + 0x20]
	0x03B72F40 LDP X24, X23, [X31 + 0x10]
	0x03B72F44 MOV X1, X31
	0x03B72F48 MOV X2, X31
	0x03B72F4C LDR X30, [X31], #0x40
	0x03B72F50 B 0x3C354F8
	0x03B72F54 BL 0x1C16F20
	0x03B72F58 STR X30, [X31 - 0x30]!
	0x03B72F5C STP X22, X21, [X31 + 0x10]
	0x03B72F60 STP X20, X19, [X31 + 0x20]
	0x03B72F64 ADRP X22, 0x870000
	0x03B72F68 LDRB W8, [X22 + 0xA39]
	0x03B72F6C MOV X19, X2
	0x03B72F70 MOV X20, X1
	0x03B72F74 MOV X21, X0
	0x03B72F78 TBNZ X8, 0x0, 0x3B72FA8
	0x03B72F7C ADRP X0, 0x5E9000
	0x03B72F80 LDR X0, [X0 + 0x810]
	0x03B72F84 BL 0x1C16CF4
	0x03B72F88 ADRP X0, 0x5E9000
	0x03B72F8C LDR X0, [X0 + 0x818]
	0x03B72F90 BL 0x1C16CF4
	0x03B72F94 ADRP X0, 0x5E9000
	0x03B72F98 LDR X0, [X0 + 0x820]
	0x03B72F9C BL 0x1C16CF4
	0x03B72FA0 MOVZ W8, 0x1
	0x03B72FA4 STRB W8, [X22 + 0xA39]
	0x03B72FA8 STR X31, [X31 + 0x8]
	0x03B72FAC LDR X0, [X21 + 0xC0]
	0x03B72FB0 CBZ X0, 0x3B7302C
	0x03B72FB4 ADRP X8, 0x5E9000
	0x03B72FB8 LDR X8, [X8 + 0x810]
	0x03B72FBC ADD X2, X31, 0x8
	0x03B72FC0 MOV X1, X20
	0x03B72FC4 LDR X3, [X8]
	0x03B72FC8 BL 0x2AA6B2C
	0x03B72FCC TBZ X0, 0x0, 0x3B73018
	0x03B72FD0 CBZ X19, 0x3B73010
	0x03B72FD4 LDP W2, W8, [X19 + 0x18]
	0x03B72FD8 ADD W8, W8, 0x1
	0x03B72FDC CMP W2, 0x1
	0x03B72FE0 STP W31, W8, [X19 + 0x18]
	0x03B72FE4 B.LT 0x3B72FF8
	0x03B72FE8 LDR X0, [X19 + 0x10]
	0x03B72FEC MOV W1, W31
	0x03B72FF0 MOV X3, X31
	0x03B72FF4 BL 0x339FA34
	0x03B72FF8 ADRP X8, 0x5E9000
	0x03B72FFC LDR X1, [X31 + 0x8]
	0x03B73000 B 0x3EB19A4
	0x03B73004 MOV X0, X19
	0x03B73008 LDR X2, [X8]
	0x03B7300C BL 0x301C194
	0x03B73010 MOVZ W0, 0x1
	0x03B73014 B 0x3B7301C
	0x03B73018 MOV W0, W31
	0x03B7301C LDP X20, X19, [X31 + 0x20]
	0x03B73020 LDP X22, X21, [X31 + 0x10]
	0x03B73024 LDR X30, [X31], #0x30
	0x03B73028 RET
	0x03B7302C BL 0x1C16F20
	0x03B73030 STR X30, [X31 - 0x50]!
	0x03B73034 STP X26, X25, [X31 + 0x10]
	0x03B73038 STP X24, X23, [X31 + 0x20]
	0x03B7303C STP X22, X21, [X31 + 0x30]
	0x03B73040 STP X20, X19, [X31 + 0x40]
	0x03B73044 ADRP X21, 0x86F000
	0x03B73048 LDRB W8, [X21 + 0xA3C]
	0x03B7304C MOV X19, X1
	0x03B73050 MOV X20, X0
	0x03B73054 TBNZ X8, 0x0, 0x3B73084
	0x03B73058 ADRP X0, 0x5E7000
	0x03B7305C LDR X0, [X0 + 0x938]
	0x03B73060 BL 0x1C16CF4
	0x03B73064 ADRP X0, 0x5E7000
	0x03B73068 LDR X0, [X0 + 0x160]
	0x03B7306C BL 0x1C16CF4
	0x03B73070 ADRP X0, 0x5E7000
	0x03B73074 LDR X0, [X0 + 0x328]
	0x03B73078 BL 0x1C16CF4
	0x03B7307C MOVZ W8, 0x1
	0x03B73080 STRB W8, [X21 + 0xA3C]
	0x03B73084 CBZ X19, 0x3B73314
	0x03B73088 ADRP X25, 0x5E7000
	0x03B7308C LDR X8, [X19]
	0x03B73090 LDR X25, [X25 + 0x938]
	0x03B73094 LDRH W9, [X8 + 0x12E]
	0x03B73098 LDR X1, [X25]
	0x03B7309C CBZ X9, 0x3B730C0
	0x03B730A0 LDR X10, [X8 + 0xB0]
	0x03B730A4 ADD X10, X10, 0x8
	0x03B730A8 LDUR X11, [X10 - 0x8]
	0x03B730AC CMP X11, X1
	0x03B730B0 B.EQ 0x3B730D0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X21, 0x871000
	015 Move W8, [X21+2609]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x582000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x5EA000
	026 Move X0, [X0+1896]
	027 Call 0x1C17CF4
	028 Move X0, 0x5EA000
	029 Move X0, [X0+1904]
	030 Call 0x1C17CF4
	031 Move X0, 0x5EA000
	032 Move X0, [X0+1912]
	033 Call 0x1C17CF4
	034 Move X0, 0x5EA000
	035 Move X0, [X0+1920]
	036 Call 0x1C17CF4
	037 Move X0, 0x5EA000
	038 Move X0, [X0+1928]
	039 Call 0x1C17CF4
	040 Move X0, 0x5E9000
	041 Move X0, [X0+2264]
	042 Call 0x1C17CF4
	043 Move X0, 0x5EA000
	044 Move X0, [X0+1936]
	045 Call 0x1C17CF4
	046 Move X0, 0x5EA000
	047 Move X0, [X0+1944]
	048 Call 0x1C17CF4
	049 Move X0, 0x582000
	050 Move X0, [X0+1432]
	051 Call 0x1C17CF4
	052 Move X0, 0x5EA000
	053 Move X0, [X0+1952]
	054 Call 0x1C17CF4
	055 Move X0, 0x5EA000
	056 Move X0, [X0+1960]
	057 Call 0x1C17CF4
	058 Move X0, 0x5EA000
	059 Move X0, [X0+1968]
	060 Call 0x1C17CF4
	061 Move X0, 0x5EA000
	062 Move X0, [X0+1976]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+2609], W8
	066 Move [X31+64], X31
	067 Move [X31+72], X31
	068 Move [X31+80], X31
	069 Move [X31+48], X31
	070 Move [X31+56], X31
	071 Move [X31+32], X31
	072 Move [X31+40], X31
	073 Move X0, [X19+168]
	074 Compare X0, 0
	075 JumpIfEqual {255}
	076 Move X8, [X0]
	077 Move X1, X20
	078 Move X9, [X8+408]
	079 Move X2, [X8+416]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {239}
	085 Compare X20, 0
	086 JumpIfEqual {255}
	087 Move X10, 0x5E9000
	088 Move X8, [X20]
	089 Move X10, [X10+2264]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move W2, 5
	101 Move X0, X20
	102 Call 0x1C5D788
	103 Move W9, [X10]
	104 Add W9, W9, 5
	105 Add X8, X8, W9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X20
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Compare X0, 0
	112 JumpIfEqual {255}
	113 Move X8, 0x5EA000
	114 Move X8, [X8+1944]
	115 Move X1, [X8]
	116 Add X8, X31, 8
	117 Call List`1<Object>.GetEnumerator, X0
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 Move X8, [X31+24]
	120 Move X22, 0x5EA000
	121 Move X23, 0x582000
	122 Move X24, 0x5EA000
	123 Move X25, 0x5EA000
	124 Move X26, 0x5EA000
	125 Move X27, 0x5EA000
	126 Move X28, 0x582000
	127 Move X22, [X22+1920]
	128 Move X23, [X23+1432]
	129 Move X24, [X24+1904]
	130 Move X25, [X25+1960]
	131 Move X26, [X26+1976]
	132 Move X27, [X27+1968]
	133 Move X28, [X28+2600]
	134 Move [X31+4], V0
	135 Move [X31+80], X8
	136 Move X29, 0x5EA000
	137 Move X29, [X29+1896]
	138 Move X1, [X22]
	139 Add X0, X31, 64
	140 Call Enumerator<Object>.MoveNext, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {208}
	145 Move X0, [X23]
	146 Move X21, [X31+80]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X21
	152 Move X1, X31
	153 Move X2, X31
	154 Call Object.op_Equality, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {138}
	159 Move X0, [X19+136]
	160 Compare X0, 0
	161 JumpIfEqual {253}
	162 Move X3, [X24]
	163 Add X2, X31, 56
	164 Move X1, X21
	165 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {193}
	170 Move X0, [X25]
	171 Move X2, [X31+56]
	172 Move X1, X21
	173 Move X3, X20
	174 Move X4, X31
	175 Call String.Format, X0, X1, X2, X3
	176 Move X1, X0
	177 Move X0, [X26]
	178 Move X2, [X27]
	179 Move X3, X31
	180 Call String.Concat, X0, X1, X2
	181 Move X21, X0
	182 Move X0, [X28]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X9, [X20]
	188 Move X8, [X23]
	189 Move W11, [X9+304]
	190 Move W10, [X8+304]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X1, X31
	193 Move X0, [X19+136]
	194 Compare X0, 0
	195 JumpIfEqual {254}
	196 Move X3, [X29]
	197 Move X1, X21
	198 Move X2, X20
	199 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	200 Move X9, [X9+200]
	201 Add X9, X9, X10
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSEL not yet implemented."
	205 Move X0, X21
	206 Move X2, X31
	207 Call Debug.LogWarning, X0, X1
	208 Move X8, 0x5EA000
	209 Move X8, [X8+1912]
	210 Add X0, X31, 64
	211 Move X1, [X8]
	212 Call Enumerator<Object>.Dispose, X0
	213 Move X0, [X19+344]
	214 Compare X0, 0
	215 JumpIfEqual {255}
	216 Move X8, 0x5EA000
	217 Move X8, [X8+1936]
	218 Add X1, X31, 48
	219 Move X2, [X8]
	220 Call 0x2EF2058, X0, X1
	221 Move X8, X1
	222 Move X1, [X31+48]
	223 Move [X31+32], X0
	224 Move [X31+40], X8
	225 Compare X1, 0
	226 JumpIfEqual {256}
	227 Move [X1+16], X19
	228 Move [X1+24], X20
	229 Move X8, [X19]
	230 Move X9, [X8+744]
	231 Move X2, [X8+752]
	232 Move X0, X19
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move X8, 0x5EA000
	235 Move X8, [X8+1952]
	236 Add X0, X31, 32
	237 Move X1, [X8]
	238 Call 0x24A7DD0, X0
	239 Move X20, [X31+176]
	240 Move X19, [X31+184]
	241 Move X22, [X31+160]
	242 Move X21, [X31+168]
	243 Move X24, [X31+144]
	244 Move X23, [X31+152]
	245 Move X26, [X31+128]
	246 Move X25, [X31+136]
	247 Move X28, [X31+112]
	248 Move X27, [X31+120]
	249 Move X29, [X31+96]
	250 Move X30, [X31+104]
	251 Add X31, X31, 192
	252 Return 
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 Call 0x1C17F20
	256 Call 0x1C17F20
	257 Move X21, X0
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X0, X21
	260 Call 0x3EB2AD0
	261 Move X19, [X0]
	262 Call 0x3EB2AE0
	263 Move X8, 0x5EA000
	264 Move X8, [X8+1952]
	265 Add X0, X31, 32
	266 Move X1, [X8]
	267 Call 0x24A7DD0, X0
	268 Compare X19, 0
	269 JumpIfEqual {239}
	270 Move X0, X19
	271 Call 0x1C17F18
	272 Move X19, X31
	273 Move X21, X0
	274 Move X8, 0x5EA000
	275 Move X8, [X8+1952]
	276 Move X1, [X8]
	277 Add X0, X31, 32
	278 Call 0x24A7DD0, X0
	279 Compare X19, 0
	280 JumpIfEqual {307}
	281 Move X0, X19
	282 Call 0x1C17F18
	283 Move X21, X0
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X0, X21
	286 Call 0x3EB2AD0
	287 Move X22, [X0]
	288 Call 0x3EB2AE0
	289 Move X8, 0x5E9000
	290 Move X8, [X8+1912]
	291 Add X0, X31, 64
	292 Move X1, [X8]
	293 Call Enumerator<Object>.Dispose, X0
	294 Compare X22, 0
	295 JumpIfEqual {213}
	296 Move X0, X22
	297 Call 0x1C17F18
	298 Move X22, X31
	299 Move X21, X0
	300 Move X8, 0x5E9000
	301 Move X8, [X8+1912]
	302 Move X1, [X8]
	303 Add X0, X31, 64
	304 Call Enumerator<Object>.Dispose, X0
	305 Compare X22, 0
	306 JumpIfNotEqual {309}
	307 Move X0, X21
	308 Call 0x1D2D690
	309 Move X0, X22
	310 Call 0x1C17F18
	311 Call 0x1991590

Method: System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)

Disassembly:
	0x03B730B4 SUBS X9, X9, 0x1
	0x03B730B8 ADD X10, X10, 0x10
	0x03B730BC B.NE 0x3B730A8
	0x03B730C0 MOVZ W2, 0x6
	0x03B730C4 MOV X0, X19
	0x03B730C8 BL 0x1C5C788
	0x03B730CC B 0x3B730E0
	0x03B730D0 LDR W9, [X10]
	0x03B730D4 ADD W9, W9, 0x6
	0x03B730D8 ADD X8, X8, W9, 0x4, SXTW
	0x03B730DC ADD X0, X8, 0x138
	0x03B730E0 LDP X8, X1, [X0]
	0x03B730E4 MOV X0, X19
	0x03B730E8 BLR X8
	0x03B730EC LDR X8, [X19]
	0x03B730F0 LDR X1, [X25]
	0x03B730F4 MOV X21, X0
	0x03B730F8 LDRH W9, [X8 + 0x12E]
	0x03B730FC CBZ X9, 0x3B73120
	0x03B73100 LDR X10, [X8 + 0xB0]
	0x03B73104 ADD X10, X10, 0x8
	0x03B73108 LDUR X11, [X10 - 0x8]
	0x03B7310C CMP X11, X1
	0x03B73110 B.EQ 0x3B73130
	0x03B73114 SUBS X9, X9, 0x1
	0x03B73118 ADD X10, X10, 0x10
	0x03B7311C B.NE 0x3B73108
	0x03B73120 MOVZ W2, 0x7
	0x03B73124 MOV X0, X19
	0x03B73128 BL 0x1C5C788
	0x03B7312C B 0x3B73140
	0x03B73130 LDR W9, [X10]
	0x03B73134 ADD W9, W9, 0x7
	0x03B73138 ADD X8, X8, W9, 0x4, SXTW
	0x03B7313C ADD X0, X8, 0x138
	0x03B73140 LDP X8, X1, [X0]
	0x03B73144 MOV X0, X19
	0x03B73148 BLR X8
	0x03B7314C CBZ X21, 0x3B73270
	0x03B73150 MOV X22, X0
	0x03B73154 CBZ X0, 0x3B73270
	0x03B73158 ADRP X26, 0x5E7000
	0x03B7315C LDR X26, [X26 + 0x328]
	0x03B73160 MOV X0, X21
	0x03B73164 LDR X1, [X26]
	0x03B73168 BL 0x1C16E00
	0x03B7316C ADRP X8, 0x5E7000
	0x03B73170 LDR X8, [X8 + 0x160]
	0x03B73174 MOV X23, X0
	0x03B73178 MOV X0, X22
	0x03B7317C LDR X1, [X8]
	0x03B73180 BL 0x1C16E00
	0x03B73184 CBZ X23, 0x3B73250
	0x03B73188 LDR X8, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x870000
	006 Move W8, [X21+2610]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5E8000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2610], W8
	018 Compare X19, 0
	019 JumpIfEqual {65}
	020 Move X21, [X19+24]
	021 Compare X21, 0
	022 JumpIfEqual {65}
	023 Move X10, 0x5E8000
	024 Move X8, [X21]
	025 Move X10, [X10+2264]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 8
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 8
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X21
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X20+64]
	049 Compare X8, 0
	050 JumpIfEqual {60}
	051 Move X3, [X8+24]
	052 Move X0, [X8+64]
	053 Move X2, [X8+40]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 CallNoReturn X3
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void UnregisterInteractable(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B7318C LDR X1, [X26]
	0x03B73190 MOV X24, X0
	0x03B73194 LDRH W9, [X8 + 0x12E]
	0x03B73198 CBZ X9, 0x3B731BC
	0x03B7319C LDR X10, [X8 + 0xB0]
	0x03B731A0 ADD X10, X10, 0x8
	0x03B731A4 LDUR X11, [X10 - 0x8]
	0x03B731A8 CMP X11, X1
	0x03B731AC B.EQ 0x3B731CC
	0x03B731B0 SUBS X9, X9, 0x1
	0x03B731B4 ADD X10, X10, 0x10
	0x03B731B8 B.NE 0x3B731A4
	0x03B731BC MOVZ W2, 0x5
	0x03B731C0 MOV X0, X23
	0x03B731C4 BL 0x1C5C788
	0x03B731C8 B 0x3B731DC
	0x03B731CC LDR W9, [X10]
	0x03B731D0 ADD W9, W9, 0x5
	0x03B731D4 ADD X8, X8, W9, 0x4, SXTW
	0x03B731D8 ADD X0, X8, 0x138
	0x03B731DC LDP X8, X1, [X0]
	0x03B731E0 MOV X0, X23
	0x03B731E4 BLR X8
	0x03B731E8 TBZ X0, 0x0, 0x3B73250
	0x03B731EC LDR X8, [X23]
	0x03B731F0 LDR X1, [X26]
	0x03B731F4 LDRH W9, [X8 + 0x12E]
	0x03B731F8 CBZ X9, 0x3B7321C
	0x03B731FC LDR X10, [X8 + 0xB0]
	0x03B73200 ADD X10, X10, 0x8
	0x03B73204 LDUR X11, [X10 - 0x8]
	0x03B73208 CMP X11, X1
	0x03B7320C B.EQ 0x3B7322C
	0x03B73210 SUBS X9, X9, 0x1
	0x03B73214 ADD X10, X10, 0x10
	0x03B73218 B.NE 0x3B73204
	0x03B7321C MOVZ W2, 0x8
	0x03B73220 MOV X0, X23
	0x03B73224 BL 0x1C5C788
	0x03B73228 B 0x3B7323C
	0x03B7322C LDR W9, [X10]
	0x03B73230 ADD W9, W9, 0x8
	0x03B73234 ADD X8, X8, W9, 0x4, SXTW
	0x03B73238 ADD X0, X8, 0x138
	0x03B7323C LDP X8, X2, [X0]
	0x03B73240 MOV X0, X23
	0x03B73244 MOV X1, X24
	0x03B73248 BLR X8
	0x03B7324C TBZ X0, 0x0, 0x3B73288
	0x03B73250 LDR X8, [X20]
	0x03B73254 MOV X0, X20
	0x03B73258 MOV X1, X21
	0x03B7325C MOV X2, X22
	0x03B73260 LDR X9, [X8 + 0x248]
	0x03B73264 LDR X3, [X8 + 0x250]
	0x03B73268 BLR X9
	0x03B7326C TBZ X0, 0x0, 0x3B73288
	0x03B73270 LDP X20, X19, [X31 + 0x40]
	0x03B73274 LDP X22, X21, [X31 + 0x30]
	0x03B73278 LDP X24, X23, [X31 + 0x20]
	0x03B7327C LDP X26, X25, [X31 + 0x10]
	0x03B73280 LDR X30, [X31], #0x50
	0x03B73284 RET
	0x03B73288 LDR X8, [X19]
	0x03B7328C LDR X1, [X25]
	0x03B73290 LDRH W9, [X8 + 0x12E]
	0x03B73294 CBZ X9, 0x3B732B8
	0x03B73298 LDR X10, [X8 + 0xB0]
	0x03B7329C ADD X10, X10, 0x8
	0x03B732A0 LDUR X11, [X10 - 0x8]
	0x03B732A4 CMP X11, X1
	0x03B732A8 B.EQ 0x3B732C8
	0x03B732AC SUBS X9, X9, 0x1
	0x03B732B0 ADD X10, X10, 0x10
	0x03B732B4 B.NE 0x3B732A0
	0x03B732B8 MOVZ W2, 0x7
	0x03B732BC MOV X0, X19
	0x03B732C0 BL 0x1C5C788
	0x03B732C4 B 0x3B732D8
	0x03B732C8 LDR W9, [X10]
	0x03B732CC ADD W9, W9, 0x7
	0x03B732D0 ADD X8, X8, W9, 0x4, SXTW
	0x03B732D4 ADD X0, X8, 0x138
	0x03B732D8 LDP X8, X1, [X0]
	0x03B732DC MOV X0, X19
	0x03B732E0 BLR X8
	0x03B732E4 LDR X8, [X20]
	0x03B732E8 MOV X2, X0
	0x03B732EC MOV X0, X20
	0x03B732F0 MOV X1, X19
	0x03B732F4 LDR X4, [X8 + 0x3A8]
	0x03B732F8 LDR X3, [X8 + 0x3B0]
	0x03B732FC LDP X20, X19, [X31 + 0x40]
	0x03B73300 LDP X22, X21, [X31 + 0x30]
	0x03B73304 LDP X24, X23, [X31 + 0x20]
	0x03B73308 LDP X26, X25, [X31 + 0x10]
	0x03B7330C LDR X30, [X31], #0x50
	0x03B73310 BR X4
	0x03B73314 BL 0x1C16F20
	0x03B73318 LDR X8, [X0]
	0x03B7331C LDR X4, [X8 + 0x3A8]
	0x03B73320 LDR X3, [X8 + 0x3B0]
	0x03B73324 BR X4
	0x03B73328 LDR X8, [X0]
	0x03B7332C LDR X4, [X8 + 0x3B8]
	0x03B73330 LDR X3, [X8 + 0x3C0]
	0x03B73334 BR X4
	0x03B73338 STP X30, X23, [X31 - 0x30]!
	0x03B7333C STP X22, X21, [X31 + 0x10]
	0x03B73340 STP X20, X19, [X31 + 0x20]
	0x03B73344 ADRP X21, 0x86F000
	0x03B73348 LDRB W8, [X21 + 0xA3E]
	0x03B7334C MOV X19, X1
	0x03B73350 MOV X20, X0
	0x03B73354 TBNZ X8, 0x0, 0x3B73384
	0x03B73358 ADRP X0, 0x5E7000
	0x03B7335C LDR X0, [X0 + 0x130]
	0x03B73360 BL 0x1C16CF4
	0x03B73364 ADRP X0, 0x5E7000
	0x03B73368 LDR X0, [X0 + 0x138]
	0x03B7336C BL 0x1C16CF4
	0x03B73370 ADRP X0, 0x5E7000
	0x03B73374 LDR X0, [X0 + 0x140]
	0x03B73378 BL 0x1C16CF4
	0x03B7337C MOVZ W8, 0x1
	0x03B73380 STRB W8, [X21 + 0xA3E]
	0x03B73384 CBZ X19, 0x3B734A4
	0x03B73388 ADRP X22, 0x5E7000
	0x03B7338C LDR X8, [X19]
	0x03B73390 LDR X22, [X22 + 0x130]
	0x03B73394 LDRH W9, [X8 + 0x12E]
	0x03B73398 LDR X1, [X22]
	0x03B7339C CBZ X9, 0x3B733C0
	0x03B733A0 LDR X10, [X8 + 0xB0]
	0x03B733A4 ADD X10, X10, 0x8
	0x03B733A8 LDUR X11, [X10 - 0x8]
	0x03B733AC CMP X11, X1
	0x03B733B0 B.EQ 0x3B733D0
	0x03B733B4 SUBS X9, X9, 0x1
	0x03B733B8 ADD X10, X10, 0x10
	0x03B733BC B.NE 0x3B733A8
	0x03B733C0 MOVZ W2, 0x4
	0x03B733C4 MOV X0, X19
	0x03B733C8 BL 0x1C5C788
	0x03B733CC B 0x3B733E0
	0x03B733D0 LDR W9, [X10]
	0x03B733D4 ADD W9, W9, 0x4
	0x03B733D8 ADD X8, X8, W9, 0x4, SXTW
	0x03B733DC ADD X0, X8, 0x138
	0x03B733E0 LDP X8, X1, [X0]
	0x03B733E4 MOV X0, X19
	0x03B733E8 BLR X8
	0x03B733EC CBZ X0, 0x3B734A4
	0x03B733F0 LDR W8, [X0 + 0x18]
	0x03B733F4 SUBS W21, W8, 0x1
	0x03B733F8 B.MI 0x3B73494
	0x03B733FC ADRP X23, 0x5E7000
	0x03B73400 LDR X23, [X23 + 0x140]
	0x03B73404 LDR X8, [X19]
	0x03B73408 LDR X1, [X22]
	0x03B7340C LDRH W9, [X8 + 0x12E]
	0x03B73410 CBZ X9, 0x3B73434
	0x03B73414 LDR X10, [X8 + 0xB0]
	0x03B73418 ADD X10, X10, 0x8
	0x03B7341C LDUR X11, [X10 - 0x8]
	0x03B73420 CMP X11, X1
	0x03B73424 B.EQ 0x3B73444
	0x03B73428 SUBS X9, X9, 0x1
	0x03B7342C ADD X10, X10, 0x10
	0x03B73430 B.NE 0x3B7341C
	0x03B73434 MOVZ W2, 0x4
	0x03B73438 MOV X0, X19
	0x03B7343C BL 0x1C5C788
	0x03B73440 B 0x3B73454
	0x03B73444 LDR W9, [X10]
	0x03B73448 ADD W9, W9, 0x4
	0x03B7344C ADD X8, X8, W9, 0x4, SXTW
	0x03B73450 ADD X0, X8, 0x138
	0x03B73454 LDP X8, X1, [X0]
	0x03B73458 MOV X0, X19
	0x03B7345C BLR X8
	0x03B73460 CBZ X0, 0x3B734A4
	0x03B73464 LDR X2, [X23]
	0x03B73468 MOV W1, W21
	0x03B7346C BL 0x301BCCC
	0x03B73470 LDR X8, [X20]
	0x03B73474 MOV X1, X0
	0x03B73478 MOV X0, X20
	0x03B7347C MOV X2, X19
	0x03B73480 LDR X9, [X8 + 0x3B8]
	0x03B73484 LDR X3, [X8 + 0x3C0]
	0x03B73488 BLR X9
	0x03B7348C SUBS W21, W21, 0x1
	0x03B73490 B.PL 0x3B73404
	0x03B73494 LDP X20, X19, [X31 + 0x20]
	0x03B73498 LDP X22, X21, [X31 + 0x10]
	0x03B7349C LDP X30, X23, [X31], #0x30
	0x03B734A0 RET
	0x03B734A4 BL 0x1C16F20
	0x03B734A8 SUB X31, X31, 0x80
	0x03B734AC STP X30, X25, [X31 + 0x40]
	0x03B734B0 STP X24, X23, [X31 + 0x50]
	0x03B734B4 STP X22, X21, [X31 + 0x60]
	0x03B734B8 STP X20, X19, [X31 + 0x70]
	0x03B734BC ADRP X22, 0x86F000
	0x03B734C0 LDRB W8, [X22 + 0xA3F]
	0x03B734C4 MOV X21, X2
	0x03B734C8 MOV X19, X1
	0x03B734CC MOV X20, X0
	0x03B734D0 TBNZ X8, 0x0, 0x3B73578
	0x03B734D4 ADRP X0, 0x5E8000
	0x03B734D8 LDR X0, [X0 + 0xD8]
	0x03B734DC BL 0x1C16CF4
	0x03B734E0 ADRP X0, 0x5E8000
	0x03B734E4 LDR X0, [X0 + 0xE0]
	0x03B734E8 BL 0x1C16CF4
	0x03B734EC ADRP X0, 0x5E8000
	0x03B734F0 LDR X0, [X0 + 0xE8]
	0x03B734F4 BL 0x1C16CF4
	0x03B734F8 ADRP X0, 0x5E8000
	0x03B734FC LDR X0, [X0 + 0x828]
	0x03B73500 BL 0x1C16CF4
	0x03B73504 ADRP X0, 0x5E8000
	0x03B73508 LDR X0, [X0 + 0x830]
	0x03B7350C BL 0x1C16CF4
	0x03B73510 ADRP X0, 0x5E8000
	0x03B73514 LDR X0, [X0 + 0x838]
	0x03B73518 BL 0x1C16CF4
	0x03B7351C ADRP X0, 0x5E7000
	0x03B73520 LDR X0, [X0 + 0x328]
	0x03B73524 BL 0x1C16CF4
	0x03B73528 ADRP X0, 0x5E8000
	0x03B7352C LDR X0, [X0 + 0x120]
	0x03B73530 BL 0x1C16CF4
	0x03B73534 ADRP X0, 0x5E8000
	0x03B73538 LDR X0, [X0 + 0x128]
	0x03B7353C BL 0x1C16CF4
	0x03B73540 ADRP X0, 0x5E8000
	0x03B73544 LDR X0, [X0 + 0xF0]
	0x03B73548 BL 0x1C16CF4
	0x03B7354C ADRP X0, 0x5E7000
	0x03B73550 LDR X0, [X0 + 0xE98]
	0x03B73554 BL 0x1C16CF4
	0x03B73558 ADRP X0, 0x5E7000
	0x03B7355C LDR X0, [X0 + 0x940]
	0x03B73560 BL 0x1C16CF4
	0x03B73564 ADRP X0, 0x5E7000
	0x03B73568 LDR X0, [X0 + 0x948]
	0x03B7356C BL 0x1C16CF4
	0x03B73570 MOVZ W8, 0x1
	0x03B73574 STRB W8, [X22 + 0xA3F]
	0x03B73578 STP X31, X31, [X31 + 0x20]
	0x03B7357C STR X31, [X31 + 0x30]
	0x03B73580 CBZ X19, 0x3B73824
	0x03B73584 ADRP X23, 0x5E7000
	0x03B73588 LDR X8, [X19]
	0x03B7358C LDR X23, [X23 + 0x328]
	0x03B73590 LDRH W9, [X8 + 0x12E]
	0x03B73594 LDR X1, [X23]
	0x03B73598 CBZ X9, 0x3B735BC
	0x03B7359C LDR X10, [X8 + 0xB0]
	0x03B735A0 ADD X10, X10, 0x8
	0x03B735A4 LDUR X11, [X10 - 0x8]
	0x03B735A8 CMP X11, X1
	0x03B735AC B.EQ 0x3B735CC
	0x03B735B0 SUBS X9, X9, 0x1
	0x03B735B4 ADD X10, X10, 0x10
	0x03B735B8 B.NE 0x3B735A4
	0x03B735BC MOVZ W2, 0x2
	0x03B735C0 MOV X0, X19
	0x03B735C4 BL 0x1C5C788
	0x03B735C8 B 0x3B735DC
	0x03B735CC LDR W9, [X10]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X21, 0x870000
	011 Move W8, [X21+2611]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {59}
	018 Move X0, 0x5E9000
	019 Move X0, [X0+1984]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E9000
	022 Move X0, [X0+1904]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E9000
	025 Move X0, [X0+1912]
	026 Call 0x1C17CF4
	027 Move X0, 0x5E9000
	028 Move X0, [X0+1920]
	029 Call 0x1C17CF4
	030 Move X0, 0x5E9000
	031 Move X0, [X0+1928]
	032 Call 0x1C17CF4
	033 Move X0, 0x5E8000
	034 Move X0, [X0+304]
	035 Call 0x1C17CF4
	036 Move X0, 0x5E8000
	037 Move X0, [X0+328]
	038 Call 0x1C17CF4
	039 Move X0, 0x5E8000
	040 Move X0, [X0+2264]
	041 Call 0x1C17CF4
	042 Move X0, 0x5E8000
	043 Move X0, [X0+352]
	044 Call 0x1C17CF4
	045 Move X0, 0x5E9000
	046 Move X0, [X0+1992]
	047 Call 0x1C17CF4
	048 Move X0, 0x5E9000
	049 Move X0, [X0+1944]
	050 Call 0x1C17CF4
	051 Move X0, 0x581000
	052 Move X0, [X0+1432]
	053 Call 0x1C17CF4
	054 Move X0, 0x5E9000
	055 Move X0, [X0+2000]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+2611], W8
	059 Move [X31+64], X31
	060 Move [X31+72], X31
	061 Move [X31+80], X31
	062 Move [X31+48], X31
	063 Move [X31+56], X31
	064 Move [X31+32], X31
	065 Move [X31+40], X31
	066 Move X0, [X19+168]
	067 Compare X0, 0
	068 JumpIfEqual {252}
	069 Move X8, [X0]
	070 Move X1, X20
	071 Move X9, [X8+376]
	072 Move X2, [X8+384]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {241}
	078 Move X8, 0x5E8000
	079 Move X8, [X8+304]
	080 Move X0, X20
	081 Move X1, [X8]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {91}
	085 Move X8, [X19]
	086 Move X1, X0
	087 Move X0, X19
	088 Move X9, [X8+808]
	089 Move X2, [X8+816]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, 0x5E8000
	092 Move X8, [X8+352]
	093 Move X0, X20
	094 Move X1, [X8]
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {101}
	098 Move X1, X0
	099 Move X0, X19
	100 Call XRInteractionManager.CancelInteractableSelectionInternal, X0, X1
	101 Move X8, 0x5E8000
	102 Move X8, [X8+328]
	103 Move X0, X20
	104 Move X1, [X8]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {111}
	108 Move X1, X0
	109 Move X0, X19
	110 Call XRInteractionManager.CancelInteractableHoverInternal, X0, X1
	111 Move X0, [X19+168]
	112 Compare X0, 0
	113 JumpIfEqual {252}
	114 Move X8, [X0]
	115 Move X1, X20
	116 Move X9, [X8+424]
	117 Move X2, [X8+432]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {241}
	123 Compare X20, 0
	124 JumpIfEqual {252}
	125 Move X10, 0x5E8000
	126 Move X8, [X20]
	127 Move X10, [X10+2264]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X1, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 5
	139 Move X0, X20
	140 Call 0x1C5D788
	141 Move W9, [X10]
	142 Add W9, W9, 5
	143 Add X8, X8, W9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X20
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {252}
	151 Move X8, 0x5E9000
	152 Move X8, [X8+1944]
	153 Move X1, [X8]
	154 Add X8, X31, 8
	155 Call List`1<Object>.GetEnumerator, X0
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 Move X8, [X31+24]
	158 Move X22, 0x5E9000
	159 Move X23, 0x581000
	160 Move X24, 0x5E9000
	161 Move X22, [X22+1920]
	162 Move X23, [X23+1432]
	163 Move X24, [X24+1904]
	164 Move [X31+4], V0
	165 Move [X31+80], X8
	166 Move X25, 0x5E9000
	167 Move X25, [X25+1984]
	168 Move X1, [X22]
	169 Add X0, X31, 64
	170 Call Enumerator<Object>.MoveNext, X0
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {210}
	175 Move X0, [X23]
	176 Move X21, [X31+80]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X21
	182 Move X1, X31
	183 Move X2, X31
	184 Call Object.op_Equality, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {168}
	189 Move X0, [X19+136]
	190 Compare X0, 0
	191 JumpIfEqual {251}
	192 Move X3, [X24]
	193 Add X2, X31, 56
	194 Move X1, X21
	195 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	196 Move X8, [X31+56]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CSET not yet implemented."
	199 And W8, W0, W8
	200 Move TEMP, X8
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {168}
	204 Move X0, [X19+136]
	205 Compare X0, 0
	206 JumpIfEqual {253}
	207 Move X2, [X25]
	208 Move X1, X21
	209 Call Dictionary`2<Object, Object>.Remove, X0, X1
	210 Move X8, 0x5E9000
	211 Move X8, [X8+1912]
	212 Add X0, X31, 64
	213 Move X1, [X8]
	214 Call Enumerator<Object>.Dispose, X0
	215 Move X0, [X19+352]
	216 Compare X0, 0
	217 JumpIfEqual {252}
	218 Move X8, 0x5E9000
	219 Move X8, [X8+1992]
	220 Add X1, X31, 48
	221 Move X2, [X8]
	222 Call 0x2EF2058, X0, X1
	223 Move X8, X1
	224 Move X1, [X31+48]
	225 Move [X31+32], X0
	226 Move [X31+40], X8
	227 Compare X1, 0
	228 JumpIfEqual {254}
	229 Move [X1+16], X19
	230 Move [X1+24], X20
	231 Move X8, [X19]
	232 Move X9, [X8+776]
	233 Move X2, [X8+784]
	234 Move X0, X19
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X8, 0x5E9000
	237 Move X8, [X8+2000]
	238 Add X0, X31, 32
	239 Move X1, [X8]
	240 Call 0x24A7DD0, X0
	241 Move X20, [X31+144]
	242 Move X19, [X31+152]
	243 Move X22, [X31+128]
	244 Move X21, [X31+136]
	245 Move X24, [X31+112]
	246 Move X23, [X31+120]
	247 Move X30, [X31+96]
	248 Move X25, [X31+104]
	249 Add X31, X31, 160
	250 Return 
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 Move X21, X0
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, X21
	258 Call 0x3EB2AD0
	259 Move X19, [X0]
	260 Call 0x3EB2AE0
	261 Move X8, 0x5E9000
	262 Move X8, [X8+2000]
	263 Add X0, X31, 32
	264 Move X1, [X8]
	265 Call 0x24A7DD0, X0
	266 Compare X19, 0
	267 JumpIfEqual {241}
	268 Move X0, X19
	269 Call 0x1C17F18
	270 Move X19, X31
	271 Move X21, X0
	272 Move X8, 0x5E9000
	273 Move X8, [X8+2000]
	274 Move X1, [X8]
	275 Add X0, X31, 32
	276 Call 0x24A7DD0, X0
	277 Compare X19, 0
	278 JumpIfEqual {305}
	279 Move X0, X19
	280 Call 0x1C17F18
	281 Move X21, X0
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X0, X21
	284 Call 0x3EB2AD0
	285 Move X22, [X0]
	286 Call 0x3EB2AE0
	287 Move X8, 0x5E9000
	288 Move X8, [X8+1912]
	289 Add X0, X31, 64
	290 Move X1, [X8]
	291 Call Enumerator<Object>.Dispose, X0
	292 Compare X22, 0
	293 JumpIfEqual {215}
	294 Move X0, X22
	295 Call 0x1C17F18
	296 Move X22, X31
	297 Move X21, X0
	298 Move X8, 0x5E9000
	299 Move X8, [X8+1912]
	300 Move X1, [X8]
	301 Add X0, X31, 64
	302 Call Enumerator<Object>.Dispose, X0
	303 Compare X22, 0
	304 JumpIfNotEqual {307}
	305 Move X0, X21
	306 Call 0x1D2D690
	307 Move X0, X22
	308 Call 0x1C17F18
	309 Call 0x1991590

Method: System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)

Disassembly:
	0x03B73730 LDR X1, [X8]
	0x03B73734 BL 0x2BC434C
	0x03B73738 LDR X0, [X20 + 0xB8]
	0x03B7373C CBZ X0, 0x3B73824
	0x03B73740 LDR W8, [X0 + 0x18]
	0x03B73744 SUBS W21, W8, 0x1
	0x03B73748 B.MI 0x3B73828
	0x03B7374C ADRP X24, 0x5E7000
	0x03B73750 ADRP X25, 0x5E8000
	0x03B73754 LDR X24, [X24 + 0x948]
	0x03B73758 LDR X25, [X25 + 0x838]
	0x03B7375C LDR X2, [X24]
	0x03B73760 MOV W1, W21
	0x03B73764 BL 0x301BCCC
	0x03B73768 LDR X8, [X20]
	0x03B7376C MOV X22, X0
	0x03B73770 MOV X0, X20
	0x03B73774 MOV X1, X19
	0x03B73778 LDR X9, [X8 + 0x238]
	0x03B7377C LDR X3, [X8 + 0x240]
	0x03B73780 MOV X2, X22
	0x03B73784 BLR X9
	0x03B73788 TBZ X0, 0x0, 0x3B73804
	0x03B7378C LDR X8, [X19]
	0x03B73790 LDR X1, [X23]
	0x03B73794 LDRH W9, [X8 + 0x12E]
	0x03B73798 CBZ X9, 0x3B737BC
	0x03B7379C LDR X10, [X8 + 0xB0]
	0x03B737A0 ADD X10, X10, 0x8
	0x03B737A4 LDUR X11, [X10 - 0x8]
	0x03B737A8 CMP X11, X1
	0x03B737AC B.EQ 0x3B737CC
	0x03B737B0 SUBS X9, X9, 0x1
	0x03B737B4 ADD X10, X10, 0x10
	0x03B737B8 B.NE 0x3B737A4
	0x03B737BC MOVZ W2, 0x6
	0x03B737C0 MOV X0, X19
	0x03B737C4 BL 0x1C5C788
	0x03B737C8 B 0x3B737DC
	0x03B737CC LDR W9, [X10]
	0x03B737D0 ADD W9, W9, 0x6
	0x03B737D4 ADD X8, X8, W9, 0x4, SXTW
	0x03B737D8 ADD X0, X8, 0x138
	0x03B737DC LDP X8, X1, [X0]
	0x03B737E0 MOV X0, X19
	0x03B737E4 BLR X8
	0x03B737E8 TBNZ X0, 0x0, 0x3B73814
	0x03B737EC LDR X0, [X20 + 0xD0]
	0x03B737F0 CBZ X0, 0x3B73824
	0x03B737F4 LDR X2, [X25]
	0x03B737F8 MOV X1, X22
	0x03B737FC BL 0x2DBE4B0
	0x03B73800 TBNZ X0, 0x0, 0x3B73814
	0x03B73804 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x870000
	006 Move W8, [X21+2612]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5E8000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2612], W8
	018 Compare X19, 0
	019 JumpIfEqual {65}
	020 Move X21, [X19+24]
	021 Compare X21, 0
	022 JumpIfEqual {65}
	023 Move X10, 0x5E8000
	024 Move X8, [X21]
	025 Move X10, [X10+2264]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 9
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 9
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X21
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X20+72]
	049 Compare X8, 0
	050 JumpIfEqual {60}
	051 Move X3, [X8+24]
	052 Move X0, [X8+64]
	053 Move X2, [X8+40]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 CallNoReturn X3
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void RegisterSnapVolume(UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume snapVolume)

Disassembly:
	0x03B73808 MOV X1, X19
	0x03B7380C MOV X2, X22
	0x03B73810 BL 0x3B738C0
	0x03B73814 SUBS W21, W21, 0x1
	0x03B73818 B.MI 0x3B73828
	0x03B7381C LDR X0, [X20 + 0xB8]
	0x03B73820 CBNZ X0, 0x3B7375C
	0x03B73824 BL 0x1C16F20
	0x03B73828 LDP X20, X19, [X31 + 0x70]
	0x03B7382C LDP X22, X21, [X31 + 0x60]
	0x03B73830 LDP X24, X23, [X31 + 0x50]
	0x03B73834 LDP X30, X25, [X31 + 0x40]
	0x03B73838 ADD X31, X31, 0x80
	0x03B7383C RET
	0x03B73840 BL 0x1C16F20
	0x03B73844 B 0x3B7384C
	0x03B73848 B 0x3B7384C
	0x03B7384C MOV X21, X0
	0x03B73850 CMP W1, 0x1
	0x03B73854 B.NE 0x3B73888
	0x03B73858 MOV X0, X21
	0x03B7385C BL 0x3EB1AD0
	0x03B73860 LDR X22, [X0]
	0x03B73864 BL 0x3EB1AE0
	0x03B73868 ADRP X8, 0x5E8000
	0x03B7386C LDR X8, [X8 + 0xD8]
	0x03B73870 ADD X0, X31, 0x20
	0x03B73874 LDR X1, [X8]
	0x03B73878 BL 0x2BC434C
	0x03B7387C CBZ X22, 0x3B73738
	0x03B73880 MOV X0, X22
	0x03B73884 BL 0x1C16F18
	0x03B73888 MOV X22, X31
	0x03B7388C B 0x3B73894
	0x03B73890 MOV X21, X0
	0x03B73894 ADRP X8, 0x5E8000
	0x03B73898 LDR X8, [X8 + 0xD8]
	0x03B7389C LDR X1, [X8]
	0x03B738A0 ADD X0, X31, 0x20
	0x03B738A4 BL 0x2BC434C
	0x03B738A8 CBNZ X22, 0x3B738B4
	0x03B738AC MOV X0, X21
	0x03B738B0 BL 0x1D2C690
	0x03B738B4 MOV X0, X22
	0x03B738B8 BL 0x1C16F18
	0x03B738BC BL 0x1990590
	0x03B738C0 STR X30, [X31 - 0x30]!
	0x03B738C4 STP X22, X21, [X31 + 0x10]
	0x03B738C8 STP X20, X19, [X31 + 0x20]
	0x03B738CC ADRP X22, 0x86F000
	0x03B738D0 LDRB W8, [X22 + 0xA51]
	0x03B738D4 MOV X19, X2
	0x03B738D8 MOV X20, X1
	0x03B738DC MOV X21, X0
	0x03B738E0 TBNZ X8, 0x0, 0x3B73904
	0x03B738E4 ADRP X0, 0x5E7000
	0x03B738E8 LDR X0, [X0 + 0x438]
	0x03B738EC BL 0x1C16CF4
	0x03B738F0 ADRP X0, 0x5E7000
	0x03B738F4 LDR X0, [X0 + 0x368]
	0x03B738F8 BL 0x1C16CF4
	0x03B738FC MOVZ W8, 0x1
	0x03B73900 STRB W8, [X22 + 0xA51]
	0x03B73904 CBZ X20, 0x3B7393C
	0x03B73908 ADRP X8, 0x5E7000
	0x03B7390C LDR X8, [X8 + 0x368]
	0x03B73910 LDR X9, [X20]
	0x03B73914 LDR X8, [X8]
	0x03B73918 LDRB W11, [X9 + 0x130]
	0x03B7391C LDRB W10, [X8 + 0x130]
	0x03B73920 CMP W11, W10
	0x03B73924 B.CC 0x3B7393C
	0x03B73928 LDR X9, [X9 + 0xC8]
	0x03B7392C ADD X9, X9, X10, 0x3, LSL
	0x03B73930 LDUR X9, [X9 - 0x8]
	0x03B73934 CMP X9, X8
	0x03B73938 B.EQ 0x3B73964
	0x03B7393C LDR X8, [X21]
	0x03B73940 LDR X4, [X8 + 0x3D8]
	0x03B73944 LDR X3, [X8 + 0x3E0]
	0x03B73948 MOV X0, X21
	0x03B7394C MOV X1, X20
	0x03B73950 MOV X2, X19
	0x03B73954 LDP X20, X19, [X31 + 0x20]
	0x03B73958 LDP X22, X21, [X31 + 0x10]
	0x03B7395C LDR X30, [X31], #0x30
	0x03B73960 BR X4
	0x03B73964 CBZ X19, 0x3B7393C
	0x03B73968 ADRP X8, 0x5E7000
	0x03B7396C LDR X8, [X8 + 0x438]
	0x03B73970 LDR X9, [X19]
	0x03B73974 LDR X8, [X8]
	0x03B73978 LDRB W11, [X9 + 0x130]
	0x03B7397C LDRB W10, [X8 + 0x130]
	0x03B73980 CMP W11, W10
	0x03B73984 B.CC 0x3B7393C
	0x03B73988 LDR X9, [X9 + 0xC8]
	0x03B7398C ADD X9, X9, X10, 0x3, LSL
	0x03B73990 LDUR X9, [X9 - 0x8]
	0x03B73994 CMP X9, X8
	0x03B73998 B.NE 0x3B7393C
	0x03B7399C LDR X8, [X21]
	0x03B739A0 LDR X4, [X8 + 0x578]
	0x03B739A4 LDR X3, [X8 + 0x580]
	0x03B739A8 B 0x3B73948
	0x03B739AC STP X30, X23, [X31 - 0x30]!
	0x03B739B0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x870000
	007 Move X21, 0x581000
	008 Move W8, [X22+2613]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x581000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E9000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0x5E9000
	023 Move X0, [X0+2016]
	024 Call 0x1C17CF4
	025 Move X0, 0x581000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E9000
	029 Move X0, [X0+1960]
	030 Call 0x1C17CF4
	031 Move X0, 0x5E9000
	032 Move X0, [X0+2024]
	033 Call 0x1C17CF4
	034 Move X0, 0x5E9000
	035 Move X0, [X0+1968]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2613], W8
	039 Move X0, [X21]
	040 Move [X31+8], X31
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {122}
	053 Compare X19, 0
	054 JumpIfEqual {128}
	055 Move X0, [X21]
	056 Move X21, [X19+48]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X21
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {122}
	069 Move X0, [X20+144]
	070 Compare X0, 0
	071 JumpIfEqual {128}
	072 Move X8, 0x5E9000
	073 Move X8, [X8+2016]
	074 Add X2, X31, 8
	075 Move X1, X21
	076 Move X3, [X8]
	077 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {113}
	082 Move X8, 0x5E9000
	083 Move X2, [X31+8]
	084 Move X8, [X8+1960]
	085 Move X1, X21
	086 Move X3, X19
	087 Move X4, X31
	088 Move X0, [X8]
	089 Call String.Format, X0, X1, X2, X3
	090 Move X8, 0x5E9000
	091 Move X8, [X8+2024]
	092 Move X9, 0x5E9000
	093 Move X9, [X9+1968]
	094 Move X1, X0
	095 Move X8, [X8]
	096 Move X3, X31
	097 Move X2, [X9]
	098 Move X0, X8
	099 Call String.Concat, X0, X1, X2
	100 Move X8, 0x581000
	101 Move X8, [X8+2600]
	102 Move X20, X0
	103 Move X8, [X8]
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X20
	110 Move X1, X19
	111 Move X2, X31
	112 Call Debug.LogWarning, X0, X1
	113 Move X0, [X20+144]
	114 Compare X0, 0
	115 JumpIfEqual {128}
	116 Move X8, 0x5E9000
	117 Move X8, [X8+2008]
	118 Move X1, X21
	119 Move X2, X19
	120 Move X3, [X8]
	121 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+48]
	127 Return 
	128 Call 0x1C17F20

Method: System.Void UnregisterSnapVolume(UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume snapVolume)

Disassembly:
	0x03B739B4 STP X20, X19, [X31 + 0x20]
	0x03B739B8 ADRP X21, 0x86F000
	0x03B739BC LDRB W8, [X21 + 0xA41]
	0x03B739C0 MOV X19, X1
	0x03B739C4 MOV X20, X0
	0x03B739C8 TBNZ X8, 0x0, 0x3B739F8
	0x03B739CC ADRP X0, 0x5E7000
	0x03B739D0 LDR X0, [X0 + 0x328]
	0x03B739D4 BL 0x1C16CF4
	0x03B739D8 ADRP X0, 0x5E7000
	0x03B739DC LDR X0, [X0 + 0x940]
	0x03B739E0 BL 0x1C16CF4
	0x03B739E4 ADRP X0, 0x5E7000
	0x03B739E8 LDR X0, [X0 + 0x948]
	0x03B739EC BL 0x1C16CF4
	0x03B739F0 MOVZ W8, 0x1
	0x03B739F4 STRB W8, [X21 + 0xA41]
	0x03B739F8 CBZ X19, 0x3B73B0C
	0x03B739FC ADRP X22, 0x5E7000
	0x03B73A00 LDR X8, [X19]
	0x03B73A04 LDR X22, [X22 + 0x328]
	0x03B73A08 LDRH W9, [X8 + 0x12E]
	0x03B73A0C LDR X1, [X22]
	0x03B73A10 CBZ X9, 0x3B73A34
	0x03B73A14 LDR X10, [X8 + 0xB0]
	0x03B73A18 ADD X10, X10, 0x8
	0x03B73A1C LDUR X11, [X10 - 0x8]
	0x03B73A20 CMP X11, X1
	0x03B73A24 B.EQ 0x3B73A44
	0x03B73A28 SUBS X9, X9, 0x1
	0x03B73A2C ADD X10, X10, 0x10
	0x03B73A30 B.NE 0x3B73A1C
	0x03B73A34 MOVZ W2, 0x2
	0x03B73A38 MOV X0, X19
	0x03B73A3C BL 0x1C5C788
	0x03B73A40 B 0x3B73A54
	0x03B73A44 LDR W9, [X10]
	0x03B73A48 ADD W9, W9, 0x2
	0x03B73A4C ADD X8, X8, W9, 0x4, SXTW
	0x03B73A50 ADD X0, X8, 0x138
	0x03B73A54 LDP X8, X1, [X0]
	0x03B73A58 MOV X0, X19
	0x03B73A5C BLR X8
	0x03B73A60 CBZ X0, 0x3B73B0C
	0x03B73A64 LDR W8, [X0 + 0x18]
	0x03B73A68 SUBS W21, W8, 0x1
	0x03B73A6C B.MI 0x3B73AFC
	0x03B73A70 ADRP X23, 0x5E7000
	0x03B73A74 LDR X23, [X23 + 0x948]
	0x03B73A78 LDR X8, [X19]
	0x03B73A7C LDR X1, [X22]
	0x03B73A80 LDRH W9, [X8 + 0x12E]
	0x03B73A84 CBZ X9, 0x3B73AA8
	0x03B73A88 LDR X10, [X8 + 0xB0]
	0x03B73A8C ADD X10, X10, 0x8
	0x03B73A90 LDUR X11, [X10 - 0x8]
	0x03B73A94 CMP X11, X1
	0x03B73A98 B.EQ 0x3B73AB8
	0x03B73A9C SUBS X9, X9, 0x1
	0x03B73AA0 ADD X10, X10, 0x10
	0x03B73AA4 B.NE 0x3B73A90
	0x03B73AA8 MOVZ W2, 0x2
	0x03B73AAC MOV X0, X19
	0x03B73AB0 BL 0x1C5C788
	0x03B73AB4 B 0x3B73AC8
	0x03B73AB8 LDR W9, [X10]
	0x03B73ABC ADD W9, W9, 0x2
	0x03B73AC0 ADD X8, X8, W9, 0x4, SXTW
	0x03B73AC4 ADD X0, X8, 0x138
	0x03B73AC8 LDP X8, X1, [X0]
	0x03B73ACC MOV X0, X19
	0x03B73AD0 BLR X8
	0x03B73AD4 CBZ X0, 0x3B73B0C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x870000
	007 Move X22, 0x581000
	008 Move W8, [X21+2614]
	009 Move X22, [X22+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x5E9000
	017 Move X0, [X0+2032]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E9000
	020 Move X0, [X0+2016]
	021 Call 0x1C17CF4
	022 Move X0, 0x581000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2614], W8
	027 Move X0, [X22]
	028 Move [X31+8], X31
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {92}
	041 Compare X20, 0
	042 JumpIfEqual {98}
	043 Move X0, [X22]
	044 Move X21, [X20+48]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Equality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {92}
	057 Move X0, [X19+144]
	058 Compare X0, 0
	059 JumpIfEqual {98}
	060 Move X8, 0x5E9000
	061 Move X8, [X8+2016]
	062 Add X2, X31, 8
	063 Move X1, X21
	064 Move X3, [X8]
	065 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {92}
	070 Move X0, [X22]
	071 Move X22, [X31+8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X22
	077 Move X1, X20
	078 Move X2, X31
	079 Call Object.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {92}
	084 Move X0, [X19+144]
	085 Compare X0, 0
	086 JumpIfEqual {98}
	087 Move X8, 0x5E9000
	088 Move X8, [X8+2032]
	089 Move X1, X21
	090 Move X2, [X8]
	091 Call Dictionary`2<Object, Object>.Remove, X0, X1
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Return 
	098 Call 0x1C17F20

Method: System.Void GetRegisteredInteractionGroups(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> results)

Disassembly:
	0x03B73AD8 LDR X2, [X23]
	0x03B73ADC MOV W1, W21
	0x03B73AE0 BL 0x301BCCC
	0x03B73AE4 MOV X2, X0
	0x03B73AE8 MOV X0, X20
	0x03B73AEC MOV X1, X19
	0x03B73AF0 BL 0x3B73B10
	0x03B73AF4 SUBS W21, W21, 0x1
	0x03B73AF8 B.PL 0x3B73A78
	0x03B73AFC LDP X20, X19, [X31 + 0x20]
	0x03B73B00 LDP X22, X21, [X31 + 0x10]
	0x03B73B04 LDP X30, X23, [X31], #0x30
	0x03B73B08 RET
	0x03B73B0C BL 0x1C16F20
	0x03B73B10 STR X30, [X31 - 0x30]!
	0x03B73B14 STP X22, X21, [X31 + 0x10]
	0x03B73B18 STP X20, X19, [X31 + 0x20]
	0x03B73B1C ADRP X22, 0x86F000
	0x03B73B20 LDRB W8, [X22 + 0xA53]
	0x03B73B24 MOV X19, X2
	0x03B73B28 MOV X20, X1
	0x03B73B2C MOV X21, X0
	0x03B73B30 TBNZ X8, 0x0, 0x3B73B54
	0x03B73B34 ADRP X0, 0x5E7000
	0x03B73B38 LDR X0, [X0 + 0x438]
	0x03B73B3C BL 0x1C16CF4
	0x03B73B40 ADRP X0, 0x5E7000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {14}
	005 Move X0, [X0+160]
	006 Compare X0, 0
	007 JumpIfEqual {32}
	008 Move X8, [X0]
	009 Move X3, [X8+456]
	010 Move X2, [X8+464]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X3
	014 Move X0, 0x586000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0x5A9000
	020 Move X0, [X0+2648]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0x5E9000
	027 Move X0, [X0+2040]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Call 0x1C17F20

Method: System.Void GetRegisteredInteractors(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> results)

Disassembly:
	0x03B73B44 LDR X0, [X0 + 0x368]
	0x03B73B48 BL 0x1C16CF4
	0x03B73B4C MOVZ W8, 0x1
	0x03B73B50 STRB W8, [X22 + 0xA53]
	0x03B73B54 CBZ X20, 0x3B73B8C
	0x03B73B58 ADRP X8, 0x5E7000
	0x03B73B5C LDR X8, [X8 + 0x368]
	0x03B73B60 LDR X9, [X20]
	0x03B73B64 LDR X8, [X8]
	0x03B73B68 LDRB W11, [X9 + 0x130]
	0x03B73B6C LDRB W10, [X8 + 0x130]
	0x03B73B70 CMP W11, W10
	0x03B73B74 B.CC 0x3B73B8C
	0x03B73B78 LDR X9, [X9 + 0xC8]
	0x03B73B7C ADD X9, X9, X10, 0x3, LSL
	0x03B73B80 LDUR X9, [X9 - 0x8]
	0x03B73B84 CMP X9, X8
	0x03B73B88 B.EQ 0x3B73BB4
	0x03B73B8C LDR X8, [X21]
	0x03B73B90 LDR X4, [X8 + 0x3E8]
	0x03B73B94 LDR X3, [X8 + 0x3F0]
	0x03B73B98 MOV X0, X21
	0x03B73B9C MOV X1, X20
	0x03B73BA0 MOV X2, X19
	0x03B73BA4 LDP X20, X19, [X31 + 0x20]
	0x03B73BA8 LDP X22, X21, [X31 + 0x10]
	0x03B73BAC LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {14}
	005 Move X0, [X0+152]
	006 Compare X0, 0
	007 JumpIfEqual {32}
	008 Move X8, [X0]
	009 Move X3, [X8+456]
	010 Move X2, [X8+464]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X3
	014 Move X0, 0x586000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0x5A9000
	020 Move X0, [X0+2648]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0x5E9000
	027 Move X0, [X0+2048]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Call 0x1C17F20

Method: System.Void GetRegisteredInteractables(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> results)

Disassembly:
	0x03B73BB0 BR X4
	0x03B73BB4 CBZ X19, 0x3B73B8C
	0x03B73BB8 ADRP X8, 0x5E7000
	0x03B73BBC LDR X8, [X8 + 0x438]
	0x03B73BC0 LDR X9, [X19]
	0x03B73BC4 LDR X8, [X8]
	0x03B73BC8 LDRB W11, [X9 + 0x130]
	0x03B73BCC LDRB W10, [X8 + 0x130]
	0x03B73BD0 CMP W11, W10
	0x03B73BD4 B.CC 0x3B73B8C
	0x03B73BD8 LDR X9, [X9 + 0xC8]
	0x03B73BDC ADD X9, X9, X10, 0x3, LSL
	0x03B73BE0 LDUR X9, [X9 - 0x8]
	0x03B73BE4 CMP X9, X8
	0x03B73BE8 B.NE 0x3B73B8C
	0x03B73BEC LDR X8, [X21]
	0x03B73BF0 LDR X4, [X8 + 0x588]
	0x03B73BF4 LDR X3, [X8 + 0x590]
	0x03B73BF8 B 0x3B73B98
	0x03B73BFC STP X30, X23, [X31 - 0x30]!
	0x03B73C00 STP X22, X21, [X31 + 0x10]
	0x03B73C04 STP X20, X19, [X31 + 0x20]
	0x03B73C08 ADRP X21, 0x86F000
	0x03B73C0C LDRB W8, [X21 + 0xA43]
	0x03B73C10 MOV X19, X1
	0x03B73C14 MOV X20, X0
	0x03B73C18 TBNZ X8, 0x0, 0x3B73C48

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {14}
	005 Move X0, [X0+168]
	006 Compare X0, 0
	007 JumpIfEqual {32}
	008 Move X8, [X0]
	009 Move X3, [X8+456]
	010 Move X2, [X8+464]
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X3
	014 Move X0, 0x586000
	015 Move X0, [X0+1320]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X19, X0
	019 Move X0, 0x5A9000
	020 Move X0, [X0+2648]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X19
	024 Move X2, X31
	025 Call ArgumentNullException..ctor, X0, X1
	026 Move X0, 0x5E9000
	027 Move X0, [X0+2056]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Call 0x1C17DEC
	032 Call 0x1C17F20

Method: System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup)

Disassembly:
	0x03B71784 ADRP X8, 0x5EA000
	0x03B71788 LDR X8, [X8 + 0x758]
	0x03B7178C ADD X1, X31, 0x18
	0x03B71790 LDR X2, [X8]
	0x03B71794 BL 0x2EF1058
	0x03B71798 MOV X8, X1
	0x03B7179C LDR X1, [X31 + 0x18]
	0x03B717A0 STP X0, X8, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+160]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+376]
	007 Move X2, [X8+384]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B72864 LDR X0, [X0 + 0x7A8]
	0x03B72868 BL 0x1C16CF4
	0x03B7286C ADRP X0, 0x5E9000
	0x03B72870 LDR X0, [X0 + 0x7E8]
	0x03B72874 BL 0x1C16CF4
	0x03B72878 ADRP X0, 0x5E9000
	0x03B7287C LDR X0, [X0 + 0x7B0]
	0x03B72880 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+152]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+376]
	007 Move X2, [X8+384]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B735D0 ADD W9, W9, 0x2
	0x03B735D4 ADD X8, X8, W9, 0x4, SXTW
	0x03B735D8 ADD X0, X8, 0x138
	0x03B735DC LDP X8, X1, [X0]
	0x03B735E0 MOV X0, X19
	0x03B735E4 BLR X8
	0x03B735E8 CBZ X0, 0x3B73824
	0x03B735EC LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+168]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+376]
	007 Move X2, [X8+384]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Boolean TryGetInteractableForCollider(UnityEngine.Collider interactableCollider, out UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B73C1C ADRP X0, 0x5E7000
	0x03B73C20 LDR X0, [X0 + 0x160]
	0x03B73C24 BL 0x1C16CF4
	0x03B73C28 ADRP X0, 0x5E7000
	0x03B73C2C LDR X0, [X0 + 0x168]
	0x03B73C30 BL 0x1C16CF4
	0x03B73C34 ADRP X0, 0x5E7000
	0x03B73C38 LDR X0, [X0 + 0x170]
	0x03B73C3C BL 0x1C16CF4
	0x03B73C40 MOVZ W8, 0x1
	0x03B73C44 STRB W8, [X21 + 0xA43]
	0x03B73C48 CBZ X19, 0x3B73D5C
	0x03B73C4C ADRP X22, 0x5E7000
	0x03B73C50 LDR X8, [X19]
	0x03B73C54 LDR X22, [X22 + 0x160]
	0x03B73C58 LDRH W9, [X8 + 0x12E]
	0x03B73C5C LDR X1, [X22]
	0x03B73C60 CBZ X9, 0x3B73C84
	0x03B73C64 LDR X10, [X8 + 0xB0]
	0x03B73C68 ADD X10, X10, 0x8
	0x03B73C6C LDUR X11, [X10 - 0x8]
	0x03B73C70 CMP X11, X1
	0x03B73C74 B.EQ 0x3B73C94
	0x03B73C78 SUBS X9, X9, 0x1
	0x03B73C7C ADD X10, X10, 0x10
	0x03B73C80 B.NE 0x3B73C6C
	0x03B73C84 MOVZ W2, 0x4
	0x03B73C88 MOV X0, X19
	0x03B73C8C BL 0x1C5C788
	0x03B73C90 B 0x3B73CA4
	0x03B73C94 LDR W9, [X10]
	0x03B73C98 ADD W9, W9, 0x4
	0x03B73C9C ADD X8, X8, W9, 0x4, SXTW
	0x03B73CA0 ADD X0, X8, 0x138
	0x03B73CA4 LDP X8, X1, [X0]
	0x03B73CA8 MOV X0, X19
	0x03B73CAC BLR X8
	0x03B73CB0 CBZ X0, 0x3B73D5C
	0x03B73CB4 LDR W8, [X0 + 0x18]
	0x03B73CB8 SUBS W21, W8, 0x1
	0x03B73CBC B.MI 0x3B73D4C
	0x03B73CC0 ADRP X23, 0x5E7000
	0x03B73CC4 LDR X23, [X23 + 0x170]
	0x03B73CC8 LDR X8, [X19]
	0x03B73CCC LDR X1, [X22]
	0x03B73CD0 LDRH W9, [X8 + 0x12E]
	0x03B73CD4 CBZ X9, 0x3B73CF8
	0x03B73CD8 LDR X10, [X8 + 0xB0]
	0x03B73CDC ADD X10, X10, 0x8
	0x03B73CE0 LDUR X11, [X10 - 0x8]
	0x03B73CE4 CMP X11, X1
	0x03B73CE8 B.EQ 0x3B73D08
	0x03B73CEC SUBS X9, X9, 0x1
	0x03B73CF0 ADD X10, X10, 0x10
	0x03B73CF4 B.NE 0x3B73CE0
	0x03B73CF8 MOVZ W2, 0x4
	0x03B73CFC MOV X0, X19
	0x03B73D00 BL 0x1C5C788
	0x03B73D04 B 0x3B73D18
	0x03B73D08 LDR W9, [X10]
	0x03B73D0C ADD W9, W9, 0x4
	0x03B73D10 ADD X8, X8, W9, 0x4, SXTW
	0x03B73D14 ADD X0, X8, 0x138
	0x03B73D18 LDP X8, X1, [X0]
	0x03B73D1C MOV X0, X19
	0x03B73D20 BLR X8
	0x03B73D24 CBZ X0, 0x3B73D5C
	0x03B73D28 LDR X2, [X23]
	0x03B73D2C MOV W1, W21
	0x03B73D30 BL 0x301BCCC
	0x03B73D34 MOV X1, X0
	0x03B73D38 MOV X0, X20
	0x03B73D3C MOV X2, X19
	0x03B73D40 BL 0x3B73B10
	0x03B73D44 SUBS W21, W21, 0x1
	0x03B73D48 B.PL 0x3B73CC8
	0x03B73D4C LDP X20, X19, [X31 + 0x20]
	0x03B73D50 LDP X22, X21, [X31 + 0x10]
	0x03B73D54 LDP X30, X23, [X31], #0x30
	0x03B73D58 RET
	0x03B73D5C BL 0x1C16F20
	0x03B73D60 SUB X31, X31, 0x80
	0x03B73D64 STR X30, [X31 + 0x40]
	0x03B73D68 STP X24, X23, [X31 + 0x50]
	0x03B73D6C STP X22, X21, [X31 + 0x60]
	0x03B73D70 STP X20, X19, [X31 + 0x70]
	0x03B73D74 ADRP X22, 0x86F000
	0x03B73D78 LDRB W8, [X22 + 0xA45]
	0x03B73D7C MOV X21, X2
	0x03B73D80 MOV X19, X1
	0x03B73D84 MOV X20, X0
	0x03B73D88 TBNZ X8, 0x0, 0x3B73E30
	0x03B73D8C ADRP X0, 0x5E8000
	0x03B73D90 LDR X0, [X0 + 0xD8]
	0x03B73D94 BL 0x1C16CF4
	0x03B73D98 ADRP X0, 0x5E8000
	0x03B73D9C LDR X0, [X0 + 0xE0]
	0x03B73DA0 BL 0x1C16CF4
	0x03B73DA4 ADRP X0, 0x5E8000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x870000
	009 Move X22, 0x581000
	010 Move W8, [X23+2615]
	011 Move X22, [X22+1432]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x5E9000
	020 Move X0, [X0+2016]
	021 Call 0x1C17CF4
	022 Move X0, 0x5E9000
	023 Move X0, [X0+1904]
	024 Call 0x1C17CF4
	025 Move X0, 0x581000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2615], W8
	030 Move [X31+8], X31
	031 Move [X19], X31
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {92}
	045 Move X0, [X21+136]
	046 Compare X0, 0
	047 JumpIfEqual {124}
	048 Move X8, 0x5E9000
	049 Move X8, [X8+1904]
	050 Move X1, X20
	051 Move X2, X19
	052 Move X3, [X8]
	053 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {93}
	058 Move X0, [X21+144]
	059 Compare X0, 0
	060 JumpIfEqual {124}
	061 Move X8, 0x5E9000
	062 Move X8, [X8+2016]
	063 Add X2, X31, 8
	064 Move X1, X20
	065 Move X3, [X8]
	066 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {93}
	071 Move X0, [X22]
	072 Move X20, [X31+8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Move X2, X31
	080 Call Object.op_Inequality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {93}
	085 Move X8, [X31+8]
	086 Compare X8, 0
	087 JumpIfEqual {124}
	088 Move X8, [X8+72]
	089 Move [X19], X8
	090 Compare X8, 0
	091 JumpIfNotEqual {96}
	092 Move W0, W31
	093 Move X8, [X19]
	094 Compare X8, 0
	095 JumpIfEqual {92}
	096 Move X9, [X8]
	097 Move X0, [X22]
	098 Move W11, [X9+304]
	099 Move W10, [X0+304]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, [X9+200]
	102 Add X9, X9, X10
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSEL not yet implemented."
	106 Move W0, 1
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X30, [X31+16]
	112 Move X23, [X31+24]
	113 And W0, W0, 1
	114 Add X31, X31, 64
	115 Return X0
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X19
	121 Move X1, X31
	122 Move X2, X31
	123 Call Object.op_Inequality, X0, X1
	124 Call 0x1C17F20

Method: System.Boolean TryGetInteractableForCollider(UnityEngine.Collider interactableCollider, out UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable, out UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume snapVolume)

Disassembly:
	0x03B73DA8 LDR X0, [X0 + 0xE8]
	0x03B73DAC BL 0x1C16CF4
	0x03B73DB0 ADRP X0, 0x5E8000
	0x03B73DB4 LDR X0, [X0 + 0x828]
	0x03B73DB8 BL 0x1C16CF4
	0x03B73DBC ADRP X0, 0x5E8000
	0x03B73DC0 LDR X0, [X0 + 0x830]
	0x03B73DC4 BL 0x1C16CF4
	0x03B73DC8 ADRP X0, 0x5E8000
	0x03B73DCC LDR X0, [X0 + 0x838]
	0x03B73DD0 BL 0x1C16CF4
	0x03B73DD4 ADRP X0, 0x5E7000
	0x03B73DD8 LDR X0, [X0 + 0x320]
	0x03B73DDC BL 0x1C16CF4
	0x03B73DE0 ADRP X0, 0x5E8000
	0x03B73DE4 LDR X0, [X0 + 0x138]
	0x03B73DE8 BL 0x1C16CF4
	0x03B73DEC ADRP X0, 0x5E8000
	0x03B73DF0 LDR X0, [X0 + 0x140]
	0x03B73DF4 BL 0x1C16CF4
	0x03B73DF8 ADRP X0, 0x5E8000
	0x03B73DFC LDR X0, [X0 + 0xF0]
	0x03B73E00 BL 0x1C16CF4
	0x03B73E04 ADRP X0, 0x5E7000
	0x03B73E08 LDR X0, [X0 + 0xE98]
	0x03B73E0C BL 0x1C16CF4
	0x03B73E10 ADRP X0, 0x5E7000
	0x03B73E14 LDR X0, [X0 + 0x928]
	0x03B73E18 BL 0x1C16CF4
	0x03B73E1C ADRP X0, 0x5E7000
	0x03B73E20 LDR X0, [X0 + 0x930]
	0x03B73E24 BL 0x1C16CF4
	0x03B73E28 MOVZ W8, 0x1
	0x03B73E2C STRB W8, [X22 + 0xA45]
	0x03B73E30 STP X31, X31, [X31 + 0x20]
	0x03B73E34 STR X31, [X31 + 0x30]
	0x03B73E38 CBZ X19, 0x3B7407C
	0x03B73E3C ADRP X23, 0x5E7000
	0x03B73E40 LDR X8, [X19]
	0x03B73E44 LDR X23, [X23 + 0x320]
	0x03B73E48 LDRH W9, [X8 + 0x12E]
	0x03B73E4C LDR X1, [X23]
	0x03B73E50 CBZ X9, 0x3B73E74
	0x03B73E54 LDR X10, [X8 + 0xB0]
	0x03B73E58 ADD X10, X10, 0x8
	0x03B73E5C LDUR X11, [X10 - 0x8]
	0x03B73E60 CMP X11, X1
	0x03B73E64 B.EQ 0x3B73E84
	0x03B73E68 SUBS X9, X9, 0x1
	0x03B73E6C ADD X10, X10, 0x10
	0x03B73E70 B.NE 0x3B73E5C
	0x03B73E74 MOVZ W2, 0x2
	0x03B73E78 MOV X0, X19
	0x03B73E7C BL 0x1C5C788
	0x03B73E80 B 0x3B73E94
	0x03B73E84 LDR W9, [X10]
	0x03B73E88 ADD W9, W9, 0x2
	0x03B73E8C ADD X8, X8, W9, 0x4, SXTW
	0x03B73E90 ADD X0, X8, 0x138
	0x03B73E94 LDP X8, X1, [X0]
	0x03B73E98 MOV X0, X19
	0x03B73E9C BLR X8
	0x03B73EA0 CBZ X0, 0x3B7407C
	0x03B73EA4 LDR W8, [X0 + 0x18]
	0x03B73EA8 CBZ W8, 0x3B74080
	0x03B73EAC LDR X22, [X20 + 0xB0]
	0x03B73EB0 CBZ X22, 0x3B7407C
	0x03B73EB4 LDP W2, W8, [X22 + 0x18]
	0x03B73EB8 ADD W8, W8, 0x1
	0x03B73EBC CMP W2, 0x1
	0x03B73EC0 STP W31, W8, [X22 + 0x18]
	0x03B73EC4 B.LT 0x3B73EDC
	0x03B73EC8 LDR X0, [X22 + 0x10]
	0x03B73ECC MOV W1, W31
	0x03B73ED0 MOV X3, X31
	0x03B73ED4 BL 0x339FA34
	0x03B73ED8 LDR X22, [X20 + 0xB0]
	0x03B73EDC LDR X8, [X19]
	0x03B73EE0 LDR X1, [X23]
	0x03B73EE4 LDRH W9, [X8 + 0x12E]
	0x03B73EE8 CBZ X9, 0x3B73F0C
	0x03B73EEC LDR X10, [X8 + 0xB0]
	0x03B73EF0 ADD X10, X10, 0x8
	0x03B73EF4 LDUR X11, [X10 - 0x8]
	0x03B73EF8 CMP X11, X1
	0x03B73EFC B.EQ 0x3B73F1C
	0x03B73F00 SUBS X9, X9, 0x1
	0x03B73F04 ADD X10, X10, 0x10
	0x03B73F08 B.NE 0x3B73EF4
	0x03B73F0C MOVZ W2, 0x2
	0x03B73F10 MOV X0, X19
	0x03B73F14 BL 0x1C5C788
	0x03B73F18 B 0x3B73F2C
	0x03B73F1C LDR W9, [X10]
	0x03B73F20 ADD W9, W9, 0x2
	0x03B73F24 ADD X8, X8, W9, 0x4, SXTW
	0x03B73F28 ADD X0, X8, 0x138
	0x03B73F2C LDP X8, X1, [X0]
	0x03B73F30 MOV X0, X19
	0x03B73F34 BLR X8
	0x03B73F38 CBZ X22, 0x3B7407C
	0x03B73F3C ADRP X8, 0x5E8000
	0x03B73F40 LDR X8, [X8 + 0x138]
	0x03B73F44 MOV X1, X0
	0x03B73F48 MOV X0, X22
	0x03B73F4C LDR X2, [X8]
	0x03B73F50 BL 0x301C194
	0x03B73F54 LDR X0, [X20 + 0xD0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x870000
	009 Move X23, 0x581000
	010 Move W8, [X24+2616]
	011 Move X23, [X23+1432]
	012 Move X20, X3
	013 Move X19, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x5E9000
	021 Move X0, [X0+2016]
	022 Call 0x1C17CF4
	023 Move X0, 0x5E9000
	024 Move X0, [X0+1904]
	025 Call 0x1C17CF4
	026 Move X0, 0x581000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+2616], W8
	031 Move [X19], X31
	032 Move [X20], X31
	033 Move X0, [X23]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X21
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {112}
	046 Move X0, [X22+136]
	047 Compare X0, 0
	048 JumpIfEqual {137}
	049 Move X8, 0x5E9000
	050 Move X8, [X8+1904]
	051 Move X1, X21
	052 Move X2, X19
	053 Move X3, [X8]
	054 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	055 Move X8, [X22+144]
	056 Compare X8, 0
	057 JumpIfEqual {137}
	058 Move X9, 0x5E9000
	059 Move X9, [X9+2016]
	060 Move W22, W0
	061 Move X0, X8
	062 Move X1, X21
	063 Move X3, [X9]
	064 Move X2, X20
	065 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {95}
	070 Move X0, [X23]
	071 Move X21, [X20]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {95}
	084 Move X8, [X20]
	085 Compare X8, 0
	086 JumpIfEqual {137}
	087 Move X8, [X8+72]
	088 Move TEMP, X22
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {109}
	092 Move X9, [X19]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X20], X31
	095 Move X8, [X19]
	096 Compare X8, 0
	097 JumpIfEqual {112}
	098 Move X9, [X8]
	099 Move X0, [X23]
	100 Move W11, [X9+304]
	101 Move W10, [X0+304]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X9, [X9+200]
	104 Add X9, X9, X10
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 Move W0, 1
	109 Move [X19], X8
	110 Compare X8, 0
	111 JumpIfNotEqual {98}
	112 Move W0, W31
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X30, [X31+64]
	120 Return X0
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X19
	126 Move X20, [X31+48]
	127 Move X19, [X31+56]
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X24, [X31+16]
	131 Move X23, [X31+24]
	132 Move X1, X31
	133 Move X2, X31
	134 Move X30, [X31+64]
	135 Call Object.op_Inequality, X0, X1
	136 Return X0
	137 Call 0x1C17F20

Method: System.Boolean IsHighestPriorityTarget(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable target, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor> interactors = null)

Disassembly:
	0x03B73F58 CBZ X0, 0x3B7407C
	0x03B73F5C ADRP X8, 0x5E8000
	0x03B73F60 LDR X8, [X8 + 0x830]
	0x03B73F64 LDR X1, [X8]
	0x03B73F68 BL 0x2DBE450
	0x03B73F6C CBZ X21, 0x3B7407C
	0x03B73F70 LDR W8, [X21 + 0x18]
	0x03B73F74 CMP W8, 0x1
	0x03B73F78 B.LT 0x3B73FF0
	0x03B73F7C ADRP X8, 0x5E8000
	0x03B73F80 LDR X8, [X8 + 0xF0]
	0x03B73F84 MOV X0, X21
	0x03B73F88 LDR X1, [X8]
	0x03B73F8C ADD X8, X31, 0x8
	0x03B73F90 BL 0x301CB58
	0x03B73F94 LDUR V0, [X31 + 0x8]
	0x03B73F98 LDR X8, [X31 + 0x18]
	0x03B73F9C ADRP X21, 0x5E8000
	0x03B73FA0 LDR X21, [X21 + 0xE0]
	0x03B73FA4 STR V0, [X31 + 0x2]
	0x03B73FA8 STR X8, [X31 + 0x30]
	0x03B73FAC ADRP X22, 0x5E8000
	0x03B73FB0 LDR X22, [X22 + 0x828]
	0x03B73FB4 LDR X1, [X21]
	0x03B73FB8 ADD X0, X31, 0x20
	0x03B73FBC BL 0x2BC4350
	0x03B73FC0 TBZ X0, 0x0, 0x3B73FDC
	0x03B73FC4 LDR X0, [X20 + 0xD0]
	0x03B73FC8 CBZ X0, 0x3B74098
	0x03B73FCC LDR X1, [X31 + 0x30]
	0x03B73FD0 LDR X2, [X22]
	0x03B73FD4 BL 0x2DBEF30
	0x03B73FD8 B 0x3B73FB4
	0x03B73FDC ADRP X8, 0x5E8000
	0x03B73FE0 LDR X8, [X8 + 0xD8]
	0x03B73FE4 ADD X0, X31, 0x20
	0x03B73FE8 LDR X1, [X8]
	0x03B73FEC BL 0x2BC434C
	0x03B73FF0 LDR X0, [X20 + 0xB0]
	0x03B73FF4 CBZ X0, 0x3B7407C
	0x03B73FF8 LDR W8, [X0 + 0x18]
	0x03B73FFC SUBS W21, W8, 0x1
	0x03B74000 B.MI 0x3B74080
	0x03B74004 ADRP X23, 0x5E6000
	0x03B74008 ADRP X24, 0x5E7000
	0x03B7400C LDR X23, [X23 + 0x930]
	0x03B74010 LDR X24, [X24 + 0x838]
	0x03B74014 LDR X2, [X23]
	0x03B74018 MOV W1, W21
	0x03B7401C BL 0x301BCCC
	0x03B74020 LDR X8, [X20]
	0x03B74024 MOV X22, X0
	0x03B74028 MOV X0, X20
	0x03B7402C MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x870000
	007 Move W8, [X22+2617]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E9000
	016 Move X0, [X0+2064]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E9000
	019 Move X0, [X0+2072]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E9000
	022 Move X0, [X0+2080]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2617], W8
	026 Move [X31+8], X31
	027 Move X0, [X21+192]
	028 Compare X0, 0
	029 JumpIfEqual {67}
	030 Move X8, 0x5E9000
	031 Move X8, [X8+2064]
	032 Add X2, X31, 8
	033 Move X1, X20
	034 Move X3, [X8]
	035 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {60}
	040 Compare X19, 0
	041 JumpIfEqual {59}
	042 Move W2, [X19+24]
	043 Move W8, [X19+28]
	044 Add W8, W8, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X19+24], W31
	047 Move [X19+28], W8
	048 Move X0, [X19+16]
	049 Move W1, W31
	050 Move X3, X31
	051 Call Array.Clear, X0, X1, X2
	052 Move X8, 0x5E9000
	053 Move X1, [X31+8]
	054 Call 0x3EB29A4
	055 Return X0
	056 Move X0, X19
	057 Move X2, [X8]
	058 Call List`1<Object>.AddRange, X0, X1
	059 Move W0, 1
	060 Move W0, W31
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return X0
	067 Call 0x1C17F20

Method: System.Void GetValidTargets(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets)

Disassembly:
	0x03B6F2CC B 0x3B6F2DC
	0x03B6F2D0 B 0x3B6F2DC
	0x03B6F2D4 B 0x3B6F340
	0x03B6F2D8 B 0x3B6F340
	0x03B6F2DC CMP W1, 0x1
	0x03B6F2E0 B.NE 0x3B6F310
	0x03B6F2E4 BL 0x3EB1AD0
	0x03B6F2E8 LDR X20, [X0]
	0x03B6F2EC BL 0x3EB1AE0
	0x03B6F2F0 ADRP X8, 0x5EC000
	0x03B6F2F4 LDR X8, [X8 + 0x670]
	0x03B6F2F8 ADD X0, X31, 0x20
	0x03B6F2FC LDR X1, [X8]
	0x03B6F300 BL 0x2BC434C
	0x03B6F304 CBZ X20, 0x3B6F270
	0x03B6F308 MOV X0, X20
	0x03B6F30C BL 0x1C16F18
	0x03B6F310 MOV X19, X0
	0x03B6F314 MOV X20, X31
	0x03B6F318 B 0x3B6F320
	0x03B6F31C MOV X19, X0
	0x03B6F320 ADRP X8, 0x5EC000
	0x03B6F324 LDR X8, [X8 + 0x670]
	0x03B6F328 LDR X1, [X8]
	0x03B6F32C ADD X0, X31, 0x20
	0x03B6F330 BL 0x2BC434C
	0x03B6F334 CBZ X20, 0x3B6F38C
	0x03B6F338 MOV X0, X20
	0x03B6F33C BL 0x1C16F18
	0x03B6F340 CMP W1, 0x1
	0x03B6F344 B.NE 0x3B6F36C
	0x03B6F348 BL 0x3EB1AD0
	0x03B6F34C LDR X21, [X0]
	0x03B6F350 BL 0x3EB1AE0
	0x03B6F354 LDR X1, [X27]
	0x03B6F358 ADD X0, X31, 0x40
	0x03B6F35C BL 0x2BC434C
	0x03B6F360 CBZ X21, 0x3B6F180
	0x03B6F364 MOV X0, X21
	0x03B6F368 BL 0x1C16F18
	0x03B6F36C MOV X19, X0
	0x03B6F370 MOV X21, X31
	0x03B6F374 B 0x3B6F37C
	0x03B6F378 MOV X19, X0
	0x03B6F37C LDR X1, [X27]
	0x03B6F380 ADD X0, X31, 0x40
	0x03B6F384 BL 0x2BC434C
	0x03B6F388 CBNZ X21, 0x3B6F394
	0x03B6F38C MOV X0, X19
	0x03B6F390 BL 0x1D2C690
	0x03B6F394 MOV X0, X21
	0x03B6F398 BL 0x1C16F18
	0x03B6F39C BL 0x1990590
	0x03B6F3A0 SUB X31, X31, 0xC0
	0x03B6F3A4 STP X29, X30, [X31 + 0x60]
	0x03B6F3A8 STP X28, X27, [X31 + 0x70]
	0x03B6F3AC STP X26, X25, [X31 + 0x80]
	0x03B6F3B0 STP X24, X23, [X31 + 0x90]
	0x03B6F3B4 STP X22, X21, [X31 + 0xA0]
	0x03B6F3B8 STP X20, X19, [X31 + 0xB0]
	0x03B6F3BC ADRP X21, 0x873000
	0x03B6F3C0 LDRB W8, [X21 + 0xA20]
	0x03B6F3C4 MOV W19, W1
	0x03B6F3C8 MOV X20, X0
	0x03B6F3CC TBNZ X8, 0x0, 0x3B6F480
	0x03B6F3D0 ADRP X0, 0x5EC000
	0x03B6F3D4 LDR X0, [X0 + 0x658]
	0x03B6F3D8 BL 0x1C16CF4
	0x03B6F3DC ADRP X0, 0x5EC000
	0x03B6F3E0 LDR X0, [X0 + 0x660]
	0x03B6F3E4 BL 0x1C16CF4
	0x03B6F3E8 ADRP X0, 0x5EC000
	0x03B6F3EC LDR X0, [X0 + 0x668]
	0x03B6F3F0 BL 0x1C16CF4
	0x03B6F3F4 ADRP X0, 0x5EC000
	0x03B6F3F8 LDR X0, [X0 + 0x670]
	0x03B6F3FC BL 0x1C16CF4
	0x03B6F400 ADRP X0, 0x5EC000
	0x03B6F404 LDR X0, [X0 + 0x678]
	0x03B6F408 BL 0x1C16CF4
	0x03B6F40C ADRP X0, 0x5EC000
	0x03B6F410 LDR X0, [X0 + 0x680]
	0x03B6F414 BL 0x1C16CF4
	0x03B6F418 ADRP X0, 0x5EC000
	0x03B6F41C LDR X0, [X0 + 0x688]
	0x03B6F420 BL 0x1C16CF4
	0x03B6F424 ADRP X0, 0x5EC000
	0x03B6F428 LDR X0, [X0 + 0x690]
	0x03B6F42C BL 0x1C16CF4
	0x03B6F430 ADRP X0, 0x5EC000
	0x03B6F434 LDR X0, [X0 + 0x698]
	0x03B6F438 BL 0x1C16CF4
	0x03B6F43C ADRP X0, 0x5EC000
	0x03B6F440 LDR X0, [X0 + 0x6A0]
	0x03B6F444 BL 0x1C16CF4
	0x03B6F448 ADRP X0, 0x5EB000
	0x03B6F44C LDR X0, [X0 + 0x938]
	0x03B6F450 BL 0x1C16CF4
	0x03B6F454 ADRP X0, 0x5EB000
	0x03B6F458 LDR X0, [X0 + 0x2F8]
	0x03B6F45C BL 0x1C16CF4
	0x03B6F460 ADRP X0, 0x5EC000
	0x03B6F464 LDR X0, [X0 + 0x6A8]
	0x03B6F468 BL 0x1C16CF4
	0x03B6F46C ADRP X0, 0x5EC000
	0x03B6F470 LDR X0, [X0 + 0x6B0]
	0x03B6F474 BL 0x1C16CF4
	0x03B6F478 MOVZ W8, 0x1
	0x03B6F47C STRB W8, [X21 + 0xA20]
	0x03B6F480 STP X31, X31, [X31 + 0x40]
	0x03B6F484 STR X31, [X31 + 0x50]
	0x03B6F488 STP X31, X31, [X31 + 0x20]
	0x03B6F48C STR X31, [X31 + 0x30]
	0x03B6F490 LDR X8, [X20 + 0xA0]
	0x03B6F494 CBZ X8, 0x3B6F6E8
	0x03B6F498 LDR X0, [X8 + 0x10]
	0x03B6F49C CBZ X0, 0x3B6F6E8
	0x03B6F4A0 ADRP X8, 0x5EC000
	0x03B6F4A4 LDR X8, [X8 + 0x6B0]
	0x03B6F4A8 ADRP X28, 0x5EC000
	0x03B6F4AC ADRP X29, 0x5EC000
	0x03B6F4B0 ADRP X22, 0x5EB000
	0x03B6F4B4 ADRP X26, 0x5EC000
	0x03B6F4B8 ADRP X23, 0x5EC000
	0x03B6F4BC ADRP X24, 0x5EC000
	0x03B6F4C0 LDR X28, [X28 + 0x678]
	0x03B6F4C4 LDR X29, [X29 + 0x698]
	0x03B6F4C8 LDR X22, [X22 + 0x938]
	0x03B6F4CC LDR X26, [X26 + 0x6A8]
	0x03B6F4D0 LDR X23, [X23 + 0x680]
	0x03B6F4D4 LDR X24, [X24 + 0x6A0]
	0x03B6F4D8 LDR X1, [X8]
	0x03B6F4DC ADRP X25, 0x5EB000
	0x03B6F4E0 ADRP X27, 0x5EC000
	0x03B6F4E4 LDR X25, [X25 + 0x2F8]
	0x03B6F4E8 LDR X27, [X27 + 0x668]
	0x03B6F4EC ADD X8, X31, 0x8
	0x03B6F4F0 BL 0x301CB58
	0x03B6F4F4 LDUR V0, [X31 + 0x8]
	0x03B6F4F8 LDR X8, [X31 + 0x18]
	0x03B6F4FC STR V0, [X31 + 0x4]
	0x03B6F500 STR X8, [X31 + 0x50]
	0x03B6F504 LDR X1, [X28]
	0x03B6F508 ADD X0, X31, 0x40
	0x03B6F50C BL 0x2BC4350
	0x03B6F510 TBZ X0, 0x0, 0x3B6F5B4
	0x03B6F514 LDR X0, [X20 + 0xA0]
	0x03B6F518 CBZ X0, 0x3B6F6D0
	0x03B6F51C LDR X8, [X0]
	0x03B6F520 LDR X21, [X31 + 0x50]
	0x03B6F524 LDP X9, X2, [X8 + 0x188]
	0x03B6F528 MOV X1, X21
	0x03B6F52C BLR X9
	0x03B6F530 TBZ X0, 0x0, 0x3B6F504
	0x03B6F534 LDR X0, [X20 + 0xE0]
	0x03B6F538 CBZ X0, 0x3B6F6D8
	0x03B6F53C LDR X2, [X29]
	0x03B6F540 MOV X1, X21
	0x03B6F544 BL 0x2DBE4B0
	0x03B6F548 TBNZ X0, 0x0, 0x3B6F504
	0x03B6F54C CBZ X21, 0x3B6F6E0
	0x03B6F550 LDR X8, [X21]
	0x03B6F554 LDR X1, [X22]
	0x03B6F558 LDRH W9, [X8 + 0x12E]
	0x03B6F55C CBZ X9, 0x3B6F580
	0x03B6F560 LDR X10, [X8 + 0xB0]
	0x03B6F564 ADD X10, X10, 0x8
	0x03B6F568 LDUR X11, [X10 - 0x8]
	0x03B6F56C CMP X11, X1
	0x03B6F570 B.EQ 0x3B6F590
	0x03B6F574 SUBS X9, X9, 0x1
	0x03B6F578 ADD X10, X10, 0x10
	0x03B6F57C B.NE 0x3B6F568
	0x03B6F580 MOVZ W2, 0x13
	0x03B6F584 MOV X0, X21
	0x03B6F588 BL 0x1C5C788
	0x03B6F58C B 0x3B6F5A0
	0x03B6F590 LDR W9, [X10]
	0x03B6F594 ADD W9, W9, 0x13
	0x03B6F598 ADD X8, X8, W9, 0x4, SXTW
	0x03B6F59C ADD X0, X8, 0x138
	0x03B6F5A0 LDP X8, X2, [X0]
	0x03B6F5A4 MOV X0, X21
	0x03B6F5A8 MOV W1, W19
	0x03B6F5AC BLR X8
	0x03B6F5B0 B 0x3B6F504
	0x03B6F5B4 LDR X1, [X27]
	0x03B6F5B8 ADD X0, X31, 0x40
	0x03B6F5BC BL 0x2BC434C
	0x03B6F5C0 LDR X8, [X20 + 0x98]
	0x03B6F5C4 CBZ X8, 0x3B6F6E8
	0x03B6F5C8 LDR X0, [X8 + 0x10]
	0x03B6F5CC CBZ X0, 0x3B6F6E8
	0x03B6F5D0 LDR X1, [X26]
	0x03B6F5D4 ADD X8, X31, 0x8
	0x03B6F5D8 BL 0x301CB58
	0x03B6F5DC LDUR V0, [X31 + 0x8]
	0x03B6F5E0 LDR X8, [X31 + 0x18]
	0x03B6F5E4 STR V0, [X31 + 0x2]
	0x03B6F5E8 STR X8, [X31 + 0x30]
	0x03B6F5EC LDR X1, [X23]
	0x03B6F5F0 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x874000
	009 Move W8, [X22+2618]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {46}
	017 Move X0, 0x5EC000
	018 Move X0, [X0+760]
	019 Call 0x1C17CF4
	020 Move X0, 0x5EC000
	021 Move X0, [X0+3528]
	022 Call 0x1C17CF4
	023 Move X0, 0x5EC000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x5ED000
	027 Move X0, [X0+1720]
	028 Call 0x1C17CF4
	029 Move X0, 0x5EC000
	030 Move X0, [X0+3736]
	031 Call 0x1C17CF4
	032 Move X0, 0x5EC000
	033 Move X0, [X0+872]
	034 Call 0x1C17CF4
	035 Move X0, 0x5ED000
	036 Move X0, [X0+248]
	037 Call 0x1C17CF4
	038 Move X0, 0x5ED000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0x5EC000
	042 Move X0, [X0+3616]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X22+2618], W8
	046 Compare X19, 0
	047 JumpIfEqual {197}
	048 Move W2, [X19+24]
	049 Move W8, [X19+28]
	050 Add W8, W8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X19+24], W31
	053 Move [X19+28], W8
	054 Move X0, [X19+16]
	055 Move W1, W31
	056 Move X3, X31
	057 Call Array.Clear, X0, X1, X2
	058 Compare X21, 0
	059 JumpIfEqual {197}
	060 Move X10, 0x5EC000
	061 Move X8, [X21]
	062 Move X10, [X10+760]
	063 Move X22, 0x5EC000
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Move X22, [X22+872]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move W2, 7
	076 Move X0, X21
	077 Call 0x1C5D788
	078 Move W9, [X10]
	079 Add W9, W9, 7
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X2, [X0+8]
	084 Move X23, 0x5EC000
	085 Move X23, [X23+3616]
	086 Move X0, X21
	087 Move X1, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X9, [X21]
	090 Move X8, [X22]
	091 Move W11, [X9+304]
	092 Move W10, [X8+304]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, [X9+200]
	095 Add X9, X9, X10
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X24, X20
	099 Add X24, X24, 232
	100 Move X22, [X24]
	101 Compare X22, 0
	102 JumpIfEqual {197}
	103 Move W2, [X22+24]
	104 Move W8, [X22+28]
	105 Add W8, W8, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X22+24], W31
	108 Move [X22+28], W8
	109 Move X0, [X22+16]
	110 Move W1, W31
	111 Move X3, X31
	112 Call Array.Clear, X0, X1, X2
	113 Move X22, [X24]
	114 Move X0, [X23]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X8, 0x5ED000
	120 Move X8, [X8+248]
	121 Move X0, X19
	122 Move X1, X22
	123 Move X2, [X8]
	124 Call 0x22AE328, X0, X1
	125 Move X1, [X24]
	126 Compare X1, 0
	127 JumpIfEqual {197}
	128 Move W8, [X19+24]
	129 Move W9, [X1+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, [X21]
	132 Move X0, X21
	133 Move X9, [X8+1752]
	134 Move X2, [X8+1760]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X0, [X23]
	137 Move X21, [X24]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X8, 0x5ED000
	143 Move X8, [X8+1728]
	144 Move X0, X21
	145 Move X1, X19
	146 Move X2, [X8]
	147 Call 0x22AE328, X0, X1
	148 Move X0, [X23]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {154}
	152 Call 0x1C17DFC
	153 Move X0, [X23]
	154 Move X8, [X0+184]
	155 Move X1, X31
	156 Move X2, X31
	157 Move X21, [X8+64]
	158 Move X0, X21
	159 Call IntPtr.op_Inequality, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {167}
	164 Move X0, X21
	165 Move X1, X31
	166 Call ProfilerUnsafeUtility.BeginSample, X0
	167 Move X0, [X23]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X0, X20
	173 Move X1, X19
	174 Call XRInteractionManager.RemoveAllUnregistered, X0, X1
	175 Move X19, X31
	176 Move X0, X21
	177 Move X1, X31
	178 Move X2, X31
	179 Call IntPtr.op_Inequality, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {187}
	184 Move X0, X21
	185 Move X1, X31
	186 Call ProfilerUnsafeUtility.EndSample, X0
	187 Compare X19, 0
	188 JumpIfNotEqual {198}
	189 Move X20, [X31+48]
	190 Move X19, [X31+56]
	191 Move X22, [X31+32]
	192 Move X21, [X31+40]
	193 Move X24, [X31+16]
	194 Move X23, [X31+24]
	195 Move X30, [X31+64]
	196 Return 
	197 Call 0x1C17F20
	198 Move X0, X19
	199 Call 0x1C17F18
	200 Move X20, X0
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, X20
	203 Call 0x3EB2AD0
	204 Move X19, [X0]
	205 Call 0x3EB2AE0
	206 Move X19, X31
	207 Move X20, X0
	208 Move X0, X21
	209 Move X1, X31
	210 Move X2, X31
	211 Call IntPtr.op_Inequality, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {219}
	216 Move X0, X21
	217 Move X1, X31
	218 Call ProfilerUnsafeUtility.EndSample, X0
	219 Compare X19, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X20
	222 Call 0x1D2D690
	223 Move X0, X19
	224 Call 0x1C17F18
	225 Call 0x1991590

Method: System.Int32 RemoveAllUnregistered(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager manager, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> interactables)

Disassembly:
	0x03B68BF8 LDR X0, [X0 + 0x18]
	0x03B68BFC RET
	0x03B68C00 UBFM X0, X0, 0x20, 0x3F
	0x03B68C04 RET
	0x03B68C08 MOV W0, W0
	0x03B68C0C BFM X0, X0, 0x20, 0x1F
	0x03B68C10 RET
	0x03B68C14 LDR W0, [X0 + 0x4]
	0x03B68C18 RET
	0x03B68C1C STP W1, W1, [X0]
	0x03B68C20 RET
	0x03B68C24 STR X30, [X31 - 0x20]!
	0x03B68C28 STP X20, X19, [X31 + 0x10]
	0x03B68C2C ADRP X20, 0x87A000
	0x03B68C30 LDRB W8, [X20 + 0x9D1]
	0x03B68C34 MOV W19, W0
	0x03B68C38 TBNZ X8, 0x0, 0x3B68C5C
	0x03B68C3C ADRP X0, 0x5F3000
	0x03B68C40 LDR X0, [X0 + 0x4B8]
	0x03B68C44 BL 0x1C16CF4
	0x03B68C48 ADRP X0, 0x58D000
	0x03B68C4C LDR X0, [X0 + 0x278]
	0x03B68C50 BL 0x1C16CF4
	0x03B68C54 MOVZ W8, 0x1
	0x03B68C58 STRB W8, [X20 + 0x9D1]
	0x03B68C5C CMP W19, 0x20
	0x03B68C60 B.CS 0x3B68C88
	0x03B68C64 ADRP X8, 0x5F3000
	0x03B68C68 LDR X8, [X8 + 0x4B8]
	0x03B68C6C LDR X0, [X8]
	0x03B68C70 BL 0x25D6BC4
	0x03B68C74 CBZ X0, 0x3B68CA8
	0x03B68C78 MOV W1, W19
	0x03B68C7C LDP X20, X19, [X31 + 0x10]
	0x03B68C80 LDR X30, [X31], #0x20
	0x03B68C84 B 0x3B68CAC
	0x03B68C88 ADRP X8, 0x58D000
	0x03B68C8C LDR X8, [X8 + 0x278]
	0x03B68C90 LDP X20, X19, [X31 + 0x10]
	0x03B68C94 LDR X8, [X8]
	0x03B68C98 LDR X8, [X8 + 0xB8]
	0x03B68C9C LDR X0, [X8]
	0x03B68CA0 LDR X30, [X31], #0x20
	0x03B68CA4 RET
	0x03B68CA8 BL 0x1C16F20
	0x03B68CAC STR X30, [X31 - 0x10]!
	0x03B68CB0 LDR X8, [X0 + 0x18]
	0x03B68CB4 CBZ X8, 0x3B68CD4
	0x03B68CB8 LDR W9, [X8 + 0x18]
	0x03B68CBC CMP W9, W1
	0x03B68CC0 B.LS 0x3B68CD8
	0x03B68CC4 ADD X8, X8, W1, 0x3, SXTW
	0x03B68CC8 LDR X0, [X8 + 0x20]
	0x03B68CCC LDR X30, [X31], #0x10
	0x03B68CD0 RET
	0x03B68CD4 BL 0x1C16F20
	0x03B68CD8 BL 0x1C16F28
	0x03B68CDC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x87B000
	010 Move W8, [X21+2619]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x5F4000
	018 Move X0, [X0+1048]
	019 Call 0x1C17CF4
	020 Move X0, 0x5F3000
	021 Move X0, [X0+3736]
	022 Call 0x1C17CF4
	023 Move X0, 0x5F3000
	024 Move X0, [X0+3744]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2619], W8
	028 Compare X19, 0
	029 JumpIfEqual {73}
	030 Move W8, [X19+24]
	031 Subtract W21, W8, 1
	032 Compare X20, 0
	033 JumpIfEqual {73}
	034 Move X24, 0x5F3000
	035 Move X25, 0x5F4000
	036 Move X24, [X24+3744]
	037 Move X25, [X25+1048]
	038 Move W22, W31
	039 Move X2, [X24]
	040 Move X23, [X20+168]
	041 Move X0, X19
	042 Move W1, W21
	043 Call List`1<Object>.get_Item, X0, X1
	044 Compare X23, 0
	045 JumpIfEqual {73}
	046 Move X8, [X23]
	047 Move X1, X0
	048 Move X0, X23
	049 Move X9, [X8+376]
	050 Move X2, [X8+384]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {61}
	056 Move X2, [X25]
	057 Move X0, X19
	058 Move W1, W21
	059 Call List`1<Object>.RemoveAt, X0, X1
	060 Add W22, W22, 1
	061 Subtract W21, W21, 1
	062 Move W22, W31
	063 Move W0, W22
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Move X25, [X31+72]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Void ClearInteractionGroupFocus(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup)

Disassembly:
	0x03B74030 LDR X9, [X8 + 0x228]
	0x03B74034 LDR X3, [X8 + 0x230]
	0x03B74038 MOV X2, X22
	0x03B7403C BLR X9
	0x03B74040 TBZ X0, 0x0, 0x3B7405C
	0x03B74044 LDR X0, [X20 + 0xD0]
	0x03B74048 CBZ X0, 0x3B7407C
	0x03B7404C LDR X2, [X24]
	0x03B74050 MOV X1, X22
	0x03B74054 BL 0x2DBE4B0
	0x03B74058 TBNZ X0, 0x0, 0x3B7406C
	0x03B7405C MOV X0, X20
	0x03B74060 MOV X1, X19
	0x03B74064 MOV X2, X22
	0x03B74068 BL 0x3B74118
	0x03B7406C SUBS W21, W21, 0x1
	0x03B74070 B.MI 0x3B74080
	0x03B74074 LDR X0, [X20 + 0xB0]
	0x03B74078 CBNZ X0, 0x3B74014
	0x03B7407C BL 0x1C16F20
	0x03B74080 LDP X20, X19, [X31 + 0x70]
	0x03B74084 LDP X22, X21, [X31 + 0x60]
	0x03B74088 LDP X24, X23, [X31 + 0x50]
	0x03B7408C LDR X30, [X31 + 0x40]
	0x03B74090 ADD X31, X31, 0x80
	0x03B74094 RET
	0x03B74098 BL 0x1C16F20
	0x03B7409C B 0x3B740A4
	0x03B740A0 B 0x3B740A4
	0x03B740A4 MOV X21, X0
	0x03B740A8 CMP W1, 0x1
	0x03B740AC B.NE 0x3B740E0
	0x03B740B0 MOV X0, X21
	0x03B740B4 BL 0x3EB1AD0
	0x03B740B8 LDR X22, [X0]
	0x03B740BC BL 0x3EB1AE0
	0x03B740C0 ADRP X8, 0x5E7000
	0x03B740C4 LDR X8, [X8 + 0xD8]
	0x03B740C8 ADD X0, X31, 0x20
	0x03B740CC LDR X1, [X8]
	0x03B740D0 BL 0x2BC434C
	0x03B740D4 CBZ X22, 0x3B73FF0
	0x03B740D8 MOV X0, X22
	0x03B740DC BL 0x1C16F18
	0x03B740E0 MOV X22, X31
	0x03B740E4 B 0x3B740EC
	0x03B740E8 MOV X21, X0
	0x03B740EC ADRP X8, 0x5E7000
	0x03B740F0 LDR X8, [X8 + 0xD8]
	0x03B740F4 LDR X1, [X8]
	0x03B740F8 ADD X0, X31, 0x20
	0x03B740FC BL 0x2BC434C
	0x03B74100 CBNZ X22, 0x3B7410C
	0x03B74104 MOV X0, X21
	0x03B74108 BL 0x1D2C690
	0x03B7410C MOV X0, X22
	0x03B74110 BL 0x1C16F18
	0x03B74114 BL 0x1990590
	0x03B74118 STR X30, [X31 - 0x30]!
	0x03B7411C STP X22, X21, [X31 + 0x10]
	0x03B74120 STP X20, X19, [X31 + 0x20]
	0x03B74124 ADRP X22, 0x86E000
	0x03B74128 LDRB W8, [X22 + 0xA57]
	0x03B7412C MOV X19, X2
	0x03B74130 MOV X20, X1
	0x03B74134 MOV X21, X0
	0x03B74138 TBNZ X8, 0x0, 0x3B7415C
	0x03B7413C ADRP X0, 0x5E6000
	0x03B74140 LDR X0, [X0 + 0x438]
	0x03B74144 BL 0x1C16CF4
	0x03B74148 ADRP X0, 0x5E6000
	0x03B7414C LDR X0, [X0 + 0x368]
	0x03B74150 BL 0x1C16CF4
	0x03B74154 MOVZ W8, 0x1
	0x03B74158 STRB W8, [X22 + 0xA57]
	0x03B7415C CBZ X20, 0x3B74194
	0x03B74160 ADRP X8, 0x5E6000
	0x03B74164 LDR X8, [X8 + 0x368]
	0x03B74168 LDR X9, [X20]
	0x03B7416C LDR X8, [X8]
	0x03B74170 LDRB W11, [X9 + 0x130]
	0x03B74174 LDRB W10, [X8 + 0x130]
	0x03B74178 CMP W11, W10
	0x03B7417C B.CC 0x3B74194
	0x03B74180 LDR X9, [X9 + 0xC8]
	0x03B74184 ADD X9, X9, X10, 0x3, LSL
	0x03B74188 LDUR X9, [X9 - 0x8]
	0x03B7418C CMP X9, X8
	0x03B74190 B.EQ 0x3B741BC
	0x03B74194 LDR X8, [X21]
	0x03B74198 LDR X4, [X8 + 0x408]
	0x03B7419C LDR X3, [X8 + 0x410]
	0x03B741A0 MOV X0, X21
	0x03B741A4 MOV X1, X20
	0x03B741A8 MOV X2, X19
	0x03B741AC LDP X20, X19, [X31 + 0x20]
	0x03B741B0 LDP X22, X21, [X31 + 0x10]
	0x03B741B4 LDR X30, [X31], #0x30
	0x03B741B8 BR X4
	0x03B741BC CBZ X19, 0x3B74194
	0x03B741C0 ADRP X8, 0x5E6000
	0x03B741C4 LDR X8, [X8 + 0x438]
	0x03B741C8 LDR X9, [X19]
	0x03B741CC LDR X8, [X8]
	0x03B741D0 LDRB W11, [X9 + 0x130]
	0x03B741D4 LDRB W10, [X8 + 0x130]
	0x03B741D8 CMP W11, W10
	0x03B741DC B.CC 0x3B74194
	0x03B741E0 LDR X9, [X9 + 0xC8]
	0x03B741E4 ADD X9, X9, X10, 0x3, LSL
	0x03B741E8 LDUR X9, [X9 - 0x8]
	0x03B741EC CMP X9, X8
	0x03B741F0 B.NE 0x3B74194
	0x03B741F4 LDR X8, [X21]
	0x03B741F8 LDR X4, [X8 + 0x5A8]
	0x03B741FC LDR X3, [X8 + 0x5B0]
	0x03B74200 B 0x3B741A0
	0x03B74204 STP X30, X23, [X31 - 0x30]!
	0x03B74208 STP X22, X21, [X31 + 0x10]
	0x03B7420C STP X20, X19, [X31 + 0x20]
	0x03B74210 ADRP X21, 0x86E000
	0x03B74214 LDRB W8, [X21 + 0xA47]
	0x03B74218 MOV X19, X1
	0x03B7421C MOV X20, X0
	0x03B74220 TBNZ X8, 0x0, 0x3B74250
	0x03B74224 ADRP X0, 0x5E6000
	0x03B74228 LDR X0, [X0 + 0x320]
	0x03B7422C BL 0x1C16CF4
	0x03B74230 ADRP X0, 0x5E6000
	0x03B74234 LDR X0, [X0 + 0x928]
	0x03B74238 BL 0x1C16CF4
	0x03B7423C ADRP X0, 0x5E6000
	0x03B74240 LDR X0, [X0 + 0x930]
	0x03B74244 BL 0x1C16CF4
	0x03B74248 MOVZ W8, 0x1
	0x03B7424C STRB W8, [X21 + 0xA47]
	0x03B74250 CBZ X19, 0x3B74364
	0x03B74254 ADRP X22, 0x5E6000
	0x03B74258 LDR X8, [X19]
	0x03B7425C LDR X22, [X22 + 0x320]
	0x03B74260 LDRH W9, [X8 + 0x12E]
	0x03B74264 LDR X1, [X22]
	0x03B74268 CBZ X9, 0x3B7428C
	0x03B7426C LDR X10, [X8 + 0xB0]
	0x03B74270 ADD X10, X10, 0x8
	0x03B74274 LDUR X11, [X10 - 0x8]
	0x03B74278 CMP X11, X1
	0x03B7427C B.EQ 0x3B7429C
	0x03B74280 SUBS X9, X9, 0x1
	0x03B74284 ADD X10, X10, 0x10
	0x03B74288 B.NE 0x3B74274
	0x03B7428C MOVZ W2, 0x2
	0x03B74290 MOV X0, X19
	0x03B74294 BL 0x1C5C788
	0x03B74298 B 0x3B742AC
	0x03B7429C LDR W9, [X10]
	0x03B742A0 ADD W9, W9, 0x2
	0x03B742A4 ADD X8, X8, W9, 0x4, SXTW
	0x03B742A8 ADD X0, X8, 0x138
	0x03B742AC LDP X8, X1, [X0]
	0x03B742B0 MOV X0, X19
	0x03B742B4 BLR X8
	0x03B742B8 CBZ X0, 0x3B74364
	0x03B742BC LDR W8, [X0 + 0x18]
	0x03B742C0 SUBS W21, W8, 0x1
	0x03B742C4 B.MI 0x3B74354
	0x03B742C8 ADRP X23, 0x5E6000
	0x03B742CC LDR X23, [X23 + 0x930]
	0x03B742D0 LDR X8, [X19]
	0x03B742D4 LDR X1, [X22]
	0x03B742D8 LDRH W9, [X8 + 0x12E]
	0x03B742DC CBZ X9, 0x3B74300
	0x03B742E0 LDR X10, [X8 + 0xB0]
	0x03B742E4 ADD X10, X10, 0x8
	0x03B742E8 LDUR X11, [X10 - 0x8]
	0x03B742EC CMP X11, X1
	0x03B742F0 B.EQ 0x3B74310
	0x03B742F4 SUBS X9, X9, 0x1
	0x03B742F8 ADD X10, X10, 0x10
	0x03B742FC B.NE 0x3B742E8
	0x03B74300 MOVZ W2, 0x2
	0x03B74304 MOV X0, X19
	0x03B74308 BL 0x1C5C788
	0x03B7430C B 0x3B74320
	0x03B74310 LDR W9, [X10]
	0x03B74314 ADD W9, W9, 0x2

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x86F000
	011 Move W8, [X21+2620]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5E7000
	019 Move X0, [X0+2360]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E7000
	022 Move X0, [X0+352]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E7000
	025 Move X0, [X0+808]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2620], W8
	029 Compare X19, 0
	030 JumpIfEqual {209}
	031 Move X25, 0x5E7000
	032 Move X8, [X19]
	033 Move X25, [X25+2360]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X25]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 6
	045 Move X0, X19
	046 Call 0x1C5D788
	047 Move W9, [X10]
	048 Add W9, W9, 6
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X19]
	056 Move X1, [X25]
	057 Move X21, X0
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 7
	068 Move X0, X19
	069 Call 0x1C5D788
	070 Move W9, [X10]
	071 Add W9, W9, 7
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X21, 0
	079 JumpIfEqual {161}
	080 Move X22, X0
	081 Compare X0, 0
	082 JumpIfEqual {161}
	083 Move X26, 0x5E7000
	084 Move X26, [X26+808]
	085 Move X0, X21
	086 Move X1, [X26]
	087 Call 0x1C17E00
	088 Move X8, 0x5E7000
	089 Move X8, [X8+352]
	090 Move X23, X0
	091 Move X0, X22
	092 Move X1, [X8]
	093 Call 0x1C17E00
	094 Compare X23, 0
	095 JumpIfEqual {150}
	096 Move X8, [X23]
	097 Move X1, [X26]
	098 Move X24, X0
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move W2, 5
	109 Move X0, X23
	110 Call 0x1C5D788
	111 Move W9, [X10]
	112 Add W9, W9, 5
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X23
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {150}
	123 Move X8, [X23]
	124 Move X1, [X26]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 8
	135 Move X0, X23
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 8
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X2, [X0+8]
	143 Move X0, X23
	144 Move X1, X24
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {171}
	150 Move X8, [X20]
	151 Move X0, X20
	152 Move X1, X21
	153 Move X2, X22
	154 Move X9, [X8+584]
	155 Move X3, [X8+592]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {171}
	161 Move X20, [X31+64]
	162 Move X19, [X31+72]
	163 Move X22, [X31+48]
	164 Move X21, [X31+56]
	165 Move X24, [X31+32]
	166 Move X23, [X31+40]
	167 Move X26, [X31+16]
	168 Move X25, [X31+24]
	169 Move X30, [X31+80]
	170 Return 
	171 Move X8, [X19]
	172 Move X1, [X25]
	173 NotImplemented "Instruction LDRH not yet implemented."
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move W2, 7
	183 Move X0, X19
	184 Call 0x1C5D788
	185 Move W9, [X10]
	186 Add W9, W9, 7
	187 Add X8, X8, W9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X19
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X8, [X20]
	194 Move X2, X0
	195 Move X0, X20
	196 Move X1, X19
	197 Move X4, [X8+936]
	198 Move X3, [X8+944]
	199 Move X20, [X31+64]
	200 Move X19, [X31+72]
	201 Move X22, [X31+48]
	202 Move X21, [X31+56]
	203 Move X24, [X31+32]
	204 Move X23, [X31+40]
	205 Move X26, [X31+16]
	206 Move X25, [X31+24]
	207 Move X30, [X31+80]
	208 CallNoReturn X4
	209 Call 0x1C17F20

Method: System.Void ClearInteractionGroupFocusInternal(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup)

Disassembly:
	0x03B6F2BC B 0x3B6F2DC
	0x03B6F2C0 B 0x3B6F2DC
	0x03B6F2C4 B 0x3B6F340
	0x03B6F2C8 B 0x3B6F340

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+792]
	003 Move X2, [X8+800]
	004 CallNoReturn X3

Method: System.Void CancelInteractorFocusInternal(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B72884 MOVZ W8, 0x1
	0x03B72888 STRB W8, [X22 + 0xA35]
	0x03B7288C LDR X0, [X21]
	0x03B72890 STR X31, [X31 + 0x8]
	0x03B72894 LDR W8, [X0 + 0xE0]
	0x03B72898 CBNZ W8, 0x3B728A0
	0x03B7289C BL 0x1C16DFC
	0x03B728A0 MOV X0, X19
	0x03B728A4 MOV X1, X31
	0x03B728A8 MOV X2, X31
	0x03B728AC BL 0x3C3883C
	0x03B728B0 TBNZ X0, 0x0, 0x3B729A0
	0x03B728B4 CBZ X19, 0x3B729B0
	0x03B728B8 LDR X0, [X21]
	0x03B728BC LDR X21, [X19 + 0x30]
	0x03B728C0 LDR W8, [X0 + 0xE0]
	0x03B728C4 CBNZ W8, 0x3B728CC
	0x03B728C8 BL 0x1C16DFC
	0x03B728CC MOV X0, X21
	0x03B728D0 MOV X1, X31
	0x03B728D4 MOV X2, X31
	0x03B728D8 BL 0x3C3883C
	0x03B728DC TBNZ X0, 0x0, 0x3B729A0
	0x03B728E0 LDR X0, [X20 + 0x90]
	0x03B728E4 CBZ X0, 0x3B729B0
	0x03B728E8 ADRP X8, 0x5E9000
	0x03B728EC LDR X8, [X8 + 0x7E0]
	0x03B728F0 ADD X2, X31, 0x8
	0x03B728F4 MOV X1, X21
	0x03B728F8 LDR X3, [X8]
	0x03B728FC BL 0x2AA6B2C
	0x03B72900 TBZ X0, 0x0, 0x3B72980
	0x03B72904 ADRP X8, 0x5E9000
	0x03B72908 LDR X2, [X31 + 0x8]
	0x03B7290C LDR X8, [X8 + 0x7A8]
	0x03B72910 MOV X1, X21
	0x03B72914 MOV X3, X19
	0x03B72918 MOV X4, X31
	0x03B7291C LDR X0, [X8]
	0x03B72920 BL 0x3227C18
	0x03B72924 ADRP X8, 0x5E9000
	0x03B72928 LDR X8, [X8 + 0x7E8]
	0x03B7292C ADRP X9, 0x5E9000
	0x03B72930 LDR X9, [X9 + 0x7B0]
	0x03B72934 MOV X1, X0
	0x03B72938 LDR X8, [X8]
	0x03B7293C MOV X3, X31
	0x03B72940 LDR X2, [X9]
	0x03B72944 MOV X0, X8
	0x03B72948 BL 0x32274B8
	0x03B7294C ADRP X8, 0x581000
	0x03B72950 LDR X8, [X8 + 0xA28]
	0x03B72954 MOV X20, X0
	0x03B72958 LDR X8, [X8]
	0x03B7295C LDR W9, [X8 + 0xE0]
	0x03B72960 CBNZ W9, 0x3B7296C
	0x03B72964 MOV X0, X8
	0x03B72968 BL 0x1C16DFC
	0x03B7296C MOV X0, X20
	0x03B72970 MOV X1, X19
	0x03B72974 MOV X2, X31
	0x03B72978 BL 0x3C06B0C
	0x03B7297C B 0x3B729A0
	0x03B72980 LDR X0, [X20 + 0x90]
	0x03B72984 CBZ X0, 0x3B729B0
	0x03B72988 ADRP X8, 0x5E9000
	0x03B7298C LDR X8, [X8 + 0x7D8]
	0x03B72990 MOV X1, X21
	0x03B72994 MOV X2, X19
	0x03B72998 LDR X3, [X8]
	0x03B7299C BL 0x2AA5098
	0x03B729A0 LDP X20, X19, [X31 + 0x20]
	0x03B729A4 LDP X22, X21, [X31 + 0x10]
	0x03B729A8 LDR X30, [X31], #0x30
	0x03B729AC RET
	0x03B729B0 BL 0x1C16F20
	0x03B729B4 STR X30, [X31 - 0x30]!
	0x03B729B8 STP X22, X21, [X31 + 0x10]
	0x03B729BC STP X20, X19, [X31 + 0x20]
	0x03B729C0 ADRP X21, 0x870000
	0x03B729C4 ADRP X22, 0x581000
	0x03B729C8 LDRB W8, [X21 + 0xA36]
	0x03B729CC LDR X22, [X22 + 0x598]
	0x03B729D0 MOV X20, X1
	0x03B729D4 MOV X19, X0
	0x03B729D8 TBNZ X8, 0x0, 0x3B72A08
	0x03B729DC ADRP X0, 0x5E9000
	0x03B729E0 LDR X0, [X0 + 0x7F0]
	0x03B729E4 BL 0x1C16CF4
	0x03B729E8 ADRP X0, 0x5E9000
	0x03B729EC LDR X0, [X0 + 0x7E0]
	0x03B729F0 BL 0x1C16CF4
	0x03B729F4 ADRP X0, 0x581000
	0x03B729F8 LDR X0, [X0 + 0x598]
	0x03B729FC BL 0x1C16CF4
	0x03B72A00 MOVZ W8, 0x1
	0x03B72A04 STRB W8, [X21 + 0xA36]
	0x03B72A08 LDR X0, [X22]
	0x03B72A0C STR X31, [X31 + 0x8]
	0x03B72A10 LDR W8, [X0 + 0xE0]
	0x03B72A14 CBNZ W8, 0x3B72A1C
	0x03B72A18 BL 0x1C16DFC
	0x03B72A1C MOV X0, X20
	0x03B72A20 MOV X1, X31
	0x03B72A24 MOV X2, X31
	0x03B72A28 BL 0x3C3883C
	0x03B72A2C TBNZ X0, 0x0, 0x3B72AC4
	0x03B72A30 CBZ X20, 0x3B72AD4
	0x03B72A34 LDR X0, [X22]
	0x03B72A38 LDR X21, [X20 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x871000
	007 Move X21, 0x5E9000
	008 Move W8, [X22+2621]
	009 Move X21, [X21+2336]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5E9000
	017 Move X0, [X0+2336]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E9000
	020 Move X0, [X0+2360]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2621], W8
	024 Move X1, [X21]
	025 Move X0, X20
	026 Call 0x1C17E00
	027 Compare X0, 0
	028 JumpIfEqual {94}
	029 Move X8, [X0]
	030 Move X1, [X21]
	031 Move X20, X0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move X0, X20
	042 Move W2, W31
	043 Call 0x1C5D788
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Add X8, X8, X9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X0, 0
	052 JumpIfEqual {94}
	053 Move X21, 0x5E9000
	054 Move X8, [X0]
	055 Move X21, [X21+2360]
	056 Move X20, X0
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X21]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 7
	068 Move X0, X20
	069 Call 0x1C5D788
	070 Move W9, [X10]
	071 Add W9, W9, 7
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X20
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {94}
	080 Move X8, [X20]
	081 Move X1, [X21]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 7
	092 Move X0, X20
	093 Call 0x1C5D788
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Return 
	100 Move W9, [X10]
	101 Add W9, W9, 7
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X20
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X8, [X19]
	109 Move X2, X0
	110 Move X0, X19
	111 Move X1, X20
	112 Move X4, [X8+952]
	113 Move X3, [X8+960]
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 CallNoReturn X4

Method: System.Void CancelInteractableFocus(UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B74338 BL 0x301BCCC
	0x03B7433C MOV X2, X0
	0x03B74340 MOV X0, X20
	0x03B74344 MOV X1, X19
	0x03B74348 BL 0x3B74368
	0x03B7434C SUBS W21, W21, 0x1
	0x03B74350 B.PL 0x3B742D0
	0x03B74354 LDP X20, X19, [X31 + 0x20]
	0x03B74358 LDP X22, X21, [X31 + 0x10]
	0x03B7435C LDP X30, X23, [X31], #0x30
	0x03B74360 RET
	0x03B74364 BL 0x1C16F20
	0x03B74368 STR X30, [X31 - 0x30]!
	0x03B7436C STP X22, X21, [X31 + 0x10]
	0x03B74370 STP X20, X19, [X31 + 0x20]
	0x03B74374 ADRP X22, 0x86E000
	0x03B74378 LDRB W8, [X22 + 0xA59]
	0x03B7437C MOV X19, X2
	0x03B74380 MOV X20, X1
	0x03B74384 MOV X21, X0
	0x03B74388 TBNZ X8, 0x0, 0x3B743AC
	0x03B7438C ADRP X0, 0x5E6000
	0x03B74390 LDR X0, [X0 + 0x438]
	0x03B74394 BL 0x1C16CF4
	0x03B74398 ADRP X0, 0x5E6000
	0x03B7439C LDR X0, [X0 + 0x368]
	0x03B743A0 BL 0x1C16CF4
	0x03B743A4 MOVZ W8, 0x1
	0x03B743A8 STRB W8, [X22 + 0xA59]
	0x03B743AC CBZ X20, 0x3B743E4
	0x03B743B0 ADRP X8, 0x5E6000
	0x03B743B4 LDR X8, [X8 + 0x368]
	0x03B743B8 LDR X9, [X20]
	0x03B743BC LDR X8, [X8]
	0x03B743C0 LDRB W11, [X9 + 0x130]
	0x03B743C4 LDRB W10, [X8 + 0x130]
	0x03B743C8 CMP W11, W10
	0x03B743CC B.CC 0x3B743E4
	0x03B743D0 LDR X9, [X9 + 0xC8]
	0x03B743D4 ADD X9, X9, X10, 0x3, LSL
	0x03B743D8 LDUR X9, [X9 - 0x8]
	0x03B743DC CMP X9, X8
	0x03B743E0 B.EQ 0x3B7440C
	0x03B743E4 LDR X8, [X21]
	0x03B743E8 LDR X4, [X8 + 0x418]
	0x03B743EC LDR X3, [X8 + 0x420]
	0x03B743F0 MOV X0, X21
	0x03B743F4 MOV X1, X20
	0x03B743F8 MOV X2, X19
	0x03B743FC LDP X20, X19, [X31 + 0x20]
	0x03B74400 LDP X22, X21, [X31 + 0x10]
	0x03B74404 LDR X30, [X31], #0x30
	0x03B74408 BR X4
	0x03B7440C CBZ X19, 0x3B743E4
	0x03B74410 ADRP X8, 0x5E6000
	0x03B74414 LDR X8, [X8 + 0x438]
	0x03B74418 LDR X9, [X19]
	0x03B7441C LDR X8, [X8]
	0x03B74420 LDRB W11, [X9 + 0x130]
	0x03B74424 LDRB W10, [X8 + 0x130]
	0x03B74428 CMP W11, W10
	0x03B7442C B.CC 0x3B743E4
	0x03B74430 LDR X9, [X9 + 0xC8]
	0x03B74434 ADD X9, X9, X10, 0x3, LSL
	0x03B74438 LDUR X9, [X9 - 0x8]
	0x03B7443C CMP X9, X8
	0x03B74440 B.NE 0x3B743E4
	0x03B74444 LDR X8, [X21]
	0x03B74448 LDR X4, [X8 + 0x5B8]
	0x03B7444C LDR X3, [X8 + 0x5C0]
	0x03B74450 B 0x3B743F0
	0x03B74454 STP X30, X23, [X31 - 0x30]!
	0x03B74458 STP X22, X21, [X31 + 0x10]
	0x03B7445C STP X20, X19, [X31 + 0x20]
	0x03B74460 ADRP X21, 0x86E000
	0x03B74464 LDRB W8, [X21 + 0xA49]
	0x03B74468 MOV X19, X1
	0x03B7446C MOV X20, X0
	0x03B74470 TBNZ X8, 0x0, 0x3B744A0
	0x03B74474 ADRP X0, 0x5E6000
	0x03B74478 LDR X0, [X0 + 0x148]
	0x03B7447C BL 0x1C16CF4
	0x03B74480 ADRP X0, 0x5E6000
	0x03B74484 LDR X0, [X0 + 0x150]
	0x03B74488 BL 0x1C16CF4
	0x03B7448C ADRP X0, 0x5E6000
	0x03B74490 LDR X0, [X0 + 0x158]
	0x03B74494 BL 0x1C16CF4
	0x03B74498 MOVZ W8, 0x1
	0x03B7449C STRB W8, [X21 + 0xA49]
	0x03B744A0 CBZ X19, 0x3B745B4
	0x03B744A4 ADRP X22, 0x5E6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x86F000
	008 Move W8, [X21+2622]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E7000
	016 Move X0, [X0+304]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E7000
	019 Move X0, [X0+312]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E7000
	022 Move X0, [X0+320]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2622], W8
	026 Compare X19, 0
	027 JumpIfEqual {100}
	028 Move X22, 0x5E7000
	029 Move X8, [X19]
	030 Move X22, [X22+304]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 4
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 4
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {100}
	054 Move W8, [X0+24]
	055 Subtract W21, W8, 1
	056 Move X23, 0x5E7000
	057 Move X23, [X23+320]
	058 Move X8, [X19]
	059 Move X1, [X22]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 4
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 4
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {100}
	082 Move X2, [X23]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X8, [X20]
	086 Move X1, X0
	087 Move X0, X20
	088 Move X2, X19
	089 Move X9, [X8+952]
	090 Move X3, [X8+960]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Subtract W21, W21, 1
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Return 
	100 Call 0x1C17F20

Method: System.Void CancelInteractableFocusInternal(UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B735F0 CBZ W8, 0x3B73828
	0x03B735F4 LDR X22, [X20 + 0xB8]
	0x03B735F8 CBZ X22, 0x3B73824
	0x03B735FC LDP W2, W8, [X22 + 0x18]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+808]
	003 Move X2, [X8+816]
	004 CallNoReturn X3

Method: System.Void ClearInteractorSelection(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)

Disassembly:
	0x03B744A8 LDR X8, [X19]
	0x03B744AC LDR X22, [X22 + 0x148]
	0x03B744B0 LDRH W9, [X8 + 0x12E]
	0x03B744B4 LDR X1, [X22]
	0x03B744B8 CBZ X9, 0x3B744DC
	0x03B744BC LDR X10, [X8 + 0xB0]
	0x03B744C0 ADD X10, X10, 0x8
	0x03B744C4 LDUR X11, [X10 - 0x8]
	0x03B744C8 CMP X11, X1
	0x03B744CC B.EQ 0x3B744EC
	0x03B744D0 SUBS X9, X9, 0x1
	0x03B744D4 ADD X10, X10, 0x10
	0x03B744D8 B.NE 0x3B744C4
	0x03B744DC MOVZ W2, 0x4
	0x03B744E0 MOV X0, X19
	0x03B744E4 BL 0x1C5C788
	0x03B744E8 B 0x3B744FC
	0x03B744EC LDR W9, [X10]
	0x03B744F0 ADD W9, W9, 0x4
	0x03B744F4 ADD X8, X8, W9, 0x4, SXTW
	0x03B744F8 ADD X0, X8, 0x138
	0x03B744FC LDP X8, X1, [X0]
	0x03B74500 MOV X0, X19
	0x03B74504 BLR X8
	0x03B74508 CBZ X0, 0x3B745B4
	0x03B7450C LDR W8, [X0 + 0x18]
	0x03B74510 SUBS W21, W8, 0x1
	0x03B74514 B.MI 0x3B745A4
	0x03B74518 ADRP X23, 0x5E6000
	0x03B7451C LDR X23, [X23 + 0x158]
	0x03B74520 LDR X8, [X19]
	0x03B74524 LDR X1, [X22]
	0x03B74528 LDRH W9, [X8 + 0x12E]
	0x03B7452C CBZ X9, 0x3B74550
	0x03B74530 LDR X10, [X8 + 0xB0]
	0x03B74534 ADD X10, X10, 0x8
	0x03B74538 LDUR X11, [X10 - 0x8]
	0x03B7453C CMP X11, X1
	0x03B74540 B.EQ 0x3B74560
	0x03B74544 SUBS X9, X9, 0x1
	0x03B74548 ADD X10, X10, 0x10
	0x03B7454C B.NE 0x3B74538
	0x03B74550 MOVZ W2, 0x4
	0x03B74554 MOV X0, X19
	0x03B74558 BL 0x1C5C788
	0x03B7455C B 0x3B74570
	0x03B74560 LDR W9, [X10]
	0x03B74564 ADD W9, W9, 0x4
	0x03B74568 ADD X8, X8, W9, 0x4, SXTW
	0x03B7456C ADD X0, X8, 0x138
	0x03B74570 LDP X8, X1, [X0]
	0x03B74574 MOV X0, X19
	0x03B74578 BLR X8
	0x03B7457C CBZ X0, 0x3B745B4
	0x03B74580 LDR X2, [X23]
	0x03B74584 MOV W1, W21
	0x03B74588 BL 0x301BCCC
	0x03B7458C MOV X1, X0
	0x03B74590 MOV X0, X20
	0x03B74594 MOV X2, X19
	0x03B74598 BL 0x3B74368
	0x03B7459C SUBS W21, W21, 0x1
	0x03B745A0 B.PL 0x3B74520
	0x03B745A4 LDP X20, X19, [X31 + 0x20]
	0x03B745A8 LDP X22, X21, [X31 + 0x10]
	0x03B745AC LDP X30, X23, [X31], #0x30
	0x03B745B0 RET
	0x03B745B4 BL 0x1C16F20
	0x03B745B8 SUB X31, X31, 0x50
	0x03B745BC STP X30, X23, [X31 + 0x20]
	0x03B745C0 STP X22, X21, [X31 + 0x30]
	0x03B745C4 STP X20, X19, [X31 + 0x40]
	0x03B745C8 ADRP X22, 0x86E000
	0x03B745CC ADRP X23, 0x5E6000
	0x03B745D0 LDRB W8, [X22 + 0xA4B]
	0x03B745D4 LDR X23, [X23 + 0x920]
	0x03B745D8 MOV X19, X2
	0x03B745DC MOV X21, X1
	0x03B745E0 MOV X20, X0
	0x03B745E4 TBNZ X8, 0x0, 0x3B74620
	0x03B745E8 ADRP X0, 0x5E6000
	0x03B745EC LDR X0, [X0 + 0x130]
	0x03B745F0 BL 0x1C16CF4
	0x03B745F4 ADRP X0, 0x5E6000
	0x03B745F8 LDR X0, [X0 + 0x920]
	0x03B745FC BL 0x1C16CF4
	0x03B74600 ADRP X0, 0x5E7000
	0x03B74604 LDR X0, [X0 + 0x840]
	0x03B74608 BL 0x1C16CF4
	0x03B7460C ADRP X0, 0x5E7000
	0x03B74610 LDR X0, [X0 + 0x848]
	0x03B74614 BL 0x1C16CF4
	0x03B74618 MOVZ W8, 0x1
	0x03B7461C STRB W8, [X22 + 0xA4B]
	0x03B74620 LDR X1, [X23]
	0x03B74624 MOV X0, X21
	0x03B74628 STP X31, X31, [X31 + 0x10]
	0x03B7462C STR X31, [X31 + 0x8]
	0x03B74630 BL 0x1C16E00
	0x03B74634 CBZ X0, 0x3B747A8
	0x03B74638 LDR X8, [X0]
	0x03B7463C LDR X1, [X23]
	0x03B74640 MOV X22, X0
	0x03B74644 LDRH W9, [X8 + 0x12E]
	0x03B74648 CBZ X9, 0x3B7466C
	0x03B7464C LDR X10, [X8 + 0xB0]
	0x03B74650 ADD X10, X10, 0x8
	0x03B74654 LDUR X11, [X10 - 0x8]
	0x03B74658 CMP X11, X1
	0x03B7465C B.EQ 0x3B7467C
	0x03B74660 SUBS X9, X9, 0x1
	0x03B74664 ADD X10, X10, 0x10
	0x03B74668 B.NE 0x3B74654
	0x03B7466C MOV X0, X22
	0x03B74670 MOV W2, W31
	0x03B74674 BL 0x1C5C788
	0x03B74678 B 0x3B74688
	0x03B7467C LDRSW X9, [X10]
	0x03B74680 ADD X8, X8, X9, 0x4, LSL
	0x03B74684 ADD X0, X8, 0x138
	0x03B74688 LDP X8, X1, [X0]
	0x03B7468C MOV X0, X22
	0x03B74690 BLR X8
	0x03B74694 CBZ X0, 0x3B747A8
	0x03B74698 LDR X8, [X20]
	0x03B7469C MOV X22, X0
	0x03B746A0 MOV X0, X20
	0x03B746A4 MOV X1, X21
	0x03B746A8 LDR X9, [X8 + 0x248]
	0x03B746AC LDR X3, [X8 + 0x250]
	0x03B746B0 MOV X2, X19
	0x03B746B4 BLR X9
	0x03B746B8 TBZ X0, 0x0, 0x3B747A8
	0x03B746BC CBZ X19, 0x3B747BC
	0x03B746C0 ADRP X10, 0x5E6000
	0x03B746C4 LDR X8, [X19]
	0x03B746C8 LDR X10, [X10 + 0x130]
	0x03B746CC LDRH W9, [X8 + 0x12E]
	0x03B746D0 LDR X1, [X10]
	0x03B746D4 CBZ X9, 0x3B746F8
	0x03B746D8 LDR X10, [X8 + 0xB0]
	0x03B746DC ADD X10, X10, 0x8
	0x03B746E0 LDUR X11, [X10 - 0x8]
	0x03B746E4 CMP X11, X1
	0x03B746E8 B.EQ 0x3B74708
	0x03B746EC SUBS X9, X9, 0x1
	0x03B746F0 ADD X10, X10, 0x10
	0x03B746F4 B.NE 0x3B746E0
	0x03B746F8 MOVZ W2, 0x6
	0x03B746FC MOV X0, X19
	0x03B74700 BL 0x1C5C788
	0x03B74704 B 0x3B74718
	0x03B74708 LDR W9, [X10]
	0x03B7470C ADD W9, W9, 0x6
	0x03B74710 ADD X8, X8, W9, 0x4, SXTW
	0x03B74714 ADD X0, X8, 0x138
	0x03B74718 LDP X8, X1, [X0]
	0x03B7471C MOV X0, X19
	0x03B74720 BLR X8
	0x03B74724 TBZ X0, 0x0, 0x3B74748
	0x03B74728 LDR X8, [X20]
	0x03B7472C MOV X0, X20
	0x03B74730 MOV X1, X22
	0x03B74734 MOV X2, X19
	0x03B74738 LDR X9, [X8 + 0x4A8]
	0x03B7473C LDR X3, [X8 + 0x4B0]
	0x03B74740 BLR X9
	0x03B74744 TBZ X0, 0x0, 0x3B747A8
	0x03B74748 LDR X0, [X20 + 0x108]
	0x03B7474C CBZ X0, 0x3B747BC
	0x03B74750 ADRP X8, 0x5E7000
	0x03B74754 LDR X8, [X8 + 0x840]
	0x03B74758 ADD X1, X31, 0x18
	0x03B7475C LDR X2, [X8]
	0x03B74760 BL 0x2EF1058
	0x03B74764 LDR X3, [X31 + 0x18]
	0x03B74768 STP X0, X1, [X31 + 0x8]
	0x03B7476C CBZ X3, 0x3B747C0
	0x03B74770 STP X21, X19, [X3 + 0x10]
	0x03B74774 STP X22, X20, [X3 + 0x20]
	0x03B74778 LDR X8, [X20]
	0x03B7477C LDR X9, [X8 + 0x428]
	0x03B74780 LDR X4, [X8 + 0x430]
	0x03B74784 MOV X0, X20
	0x03B74788 MOV X1, X22
	0x03B7478C MOV X2, X19
	0x03B74790 BLR X9
	0x03B74794 ADRP X8, 0x5E7000
	0x03B74798 LDR X8, [X8 + 0x848]
	0x03B7479C ADD X0, X31, 0x8
	0x03B747A0 LDR X1, [X8]
	0x03B747A4 BL 0x24A6DD0
	0x03B747A8 LDP X20, X19, [X31 + 0x40]
	0x03B747AC LDP X22, X21, [X31 + 0x30]
	0x03B747B0 LDP X30, X23, [X31 + 0x20]
	0x03B747B4 ADD X31, X31, 0x50
	0x03B747B8 RET
	0x03B747BC BL 0x1C16F20
	0x03B747C0 BL 0x1C16F20
	0x03B747C4 B 0x3B747C8
	0x03B747C8 MOV X20, X0
	0x03B747CC CMP W1, 0x1
	0x03B747D0 B.NE 0x3B74804
	0x03B747D4 MOV X0, X20
	0x03B747D8 BL 0x3EB1AD0
	0x03B747DC LDR X19, [X0]
	0x03B747E0 BL 0x3EB1AE0
	0x03B747E4 ADRP X8, 0x5E7000
	0x03B747E8 LDR X8, [X8 + 0x848]
	0x03B747EC ADD X0, X31, 0x8
	0x03B747F0 LDR X1, [X8]
	0x03B747F4 BL 0x24A6DD0
	0x03B747F8 CBZ X19, 0x3B747A8
	0x03B747FC MOV X0, X19
	0x03B74800 BL 0x1C16F18
	0x03B74804 MOV X19, X31
	0x03B74808 B 0x3B74810
	0x03B7480C MOV X20, X0
	0x03B74810 ADRP X8, 0x5E7000
	0x03B74814 LDR X8, [X8 + 0x848]
	0x03B74818 LDR X1, [X8]
	0x03B7481C ADD X0, X31, 0x8
	0x03B74820 BL 0x24A6DD0
	0x03B74824 CBNZ X19, 0x3B74830
	0x03B74828 MOV X0, X20
	0x03B7482C BL 0x1D2C690
	0x03B74830 MOV X0, X19
	0x03B74834 BL 0x1C16F18
	0x03B74838 BL 0x1990590
	0x03B7483C LDR X8, [X0]
	0x03B74840 LDR X5, [X8 + 0x428]
	0x03B74844 LDR X4, [X8 + 0x430]
	0x03B74848 BR X5
	0x03B7484C SUB X31, X31, 0x50
	0x03B74850 STP X30, X23, [X31 + 0x20]
	0x03B74854 STP X22, X21, [X31 + 0x30]
	0x03B74858 STP X20, X19, [X31 + 0x40]
	0x03B7485C ADRP X22, 0x86E000
	0x03B74860 LDRB W8, [X22 + 0xA4C]
	0x03B74864 MOV X19, X2
	0x03B74868 MOV X20, X1
	0x03B7486C MOV X21, X0
	0x03B74870 TBNZ X8, 0x0, 0x3B748A0
	0x03B74874 ADRP X0, 0x5E6000
	0x03B74878 LDR X0, [X0 + 0x938]
	0x03B7487C BL 0x1C16CF4
	0x03B74880 ADRP X0, 0x5E7000
	0x03B74884 LDR X0, [X0 + 0x850]
	0x03B74888 BL 0x1C16CF4
	0x03B7488C ADRP X0, 0x5E7000
	0x03B74890 LDR X0, [X0 + 0x858]
	0x03B74894 BL 0x1C16CF4
	0x03B74898 MOVZ W8, 0x1
	0x03B7489C STRB W8, [X22 + 0xA4C]
	0x03B748A0 STP X31, X31, [X31 + 0x10]
	0x03B748A4 STR X31, [X31 + 0x8]
	0x03B748A8 CBZ X20, 0x3B74990
	0x03B748AC ADRP X10, 0x5E6000
	0x03B748B0 LDR X8, [X20]
	0x03B748B4 LDR X10, [X10 + 0x938]
	0x03B748B8 LDRH W9, [X8 + 0x12E]
	0x03B748BC LDR X1, [X10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0x86F000
	011 Move W8, [X22+2623]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {60}
	019 Move X0, 0x5E8000
	020 Move X0, [X0+216]
	021 Call 0x1C17CF4
	022 Move X0, 0x5E8000
	023 Move X0, [X0+224]
	024 Call 0x1C17CF4
	025 Move X0, 0x5E8000
	026 Move X0, [X0+232]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E8000
	029 Move X0, [X0+2088]
	030 Call 0x1C17CF4
	031 Move X0, 0x5E8000
	032 Move X0, [X0+2096]
	033 Call 0x1C17CF4
	034 Move X0, 0x5E8000
	035 Move X0, [X0+2104]
	036 Call 0x1C17CF4
	037 Move X0, 0x5E7000
	038 Move X0, [X0+808]
	039 Call 0x1C17CF4
	040 Move X0, 0x5E8000
	041 Move X0, [X0+288]
	042 Call 0x1C17CF4
	043 Move X0, 0x5E8000
	044 Move X0, [X0+296]
	045 Call 0x1C17CF4
	046 Move X0, 0x5E8000
	047 Move X0, [X0+240]
	048 Call 0x1C17CF4
	049 Move X0, 0x5E7000
	050 Move X0, [X0+3736]
	051 Call 0x1C17CF4
	052 Move X0, 0x5E7000
	053 Move X0, [X0+2368]
	054 Call 0x1C17CF4
	055 Move X0, 0x5E7000
	056 Move X0, [X0+2376]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X22+2623], W8
	060 Move [X31+32], X31
	061 Move [X31+40], X31
	062 Move [X31+48], X31
	063 Compare X19, 0
	064 JumpIfEqual {249}
	065 Move X23, 0x5E7000
	066 Move X8, [X19]
	067 Move X23, [X23+808]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X1, [X23]
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move W2, 2
	079 Move X0, X19
	080 Call 0x1C5D788
	081 Move W9, [X10]
	082 Add W9, W9, 2
	083 Add X8, X8, W9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X19
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare X0, 0
	090 JumpIfEqual {249}
	091 Move W8, [X0+24]
	092 Compare W8, 0
	093 JumpIfEqual {250}
	094 Move X22, [X20+184]
	095 Compare X22, 0
	096 JumpIfEqual {249}
	097 Move W2, [X22+24]
	098 Move W8, [X22+28]
	099 Add W8, W8, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X22+24], W31
	102 Move [X22+28], W8
	103 Move X0, [X22+16]
	104 Move W1, W31
	105 Move X3, X31
	106 Call Array.Clear, X0, X1, X2
	107 Move X22, [X20+184]
	108 Move X8, [X19]
	109 Move X1, [X23]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move W2, 2
	120 Move X0, X19
	121 Call 0x1C5D788
	122 Move W9, [X10]
	123 Add W9, W9, 2
	124 Add X8, X8, W9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X19
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Compare X22, 0
	131 JumpIfEqual {249}
	132 Move X8, 0x5E8000
	133 Move X8, [X8+288]
	134 Move X1, X0
	135 Move X0, X22
	136 Move X2, [X8]
	137 Call List`1<Object>.AddRange, X0, X1
	138 Move X0, [X20+208]
	139 Compare X0, 0
	140 JumpIfEqual {249}
	141 Move X8, 0x5E8000
	142 Move X8, [X8+2096]
	143 Move X1, [X8]
	144 Call HashSet`1<Object>.Clear, X0
	145 Compare X21, 0
	146 JumpIfEqual {249}
	147 Move W8, [X21+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, 0x5E8000
	150 Move X8, [X8+240]
	151 Move X0, X21
	152 Move X1, [X8]
	153 Add X8, X31, 8
	154 Call List`1<Object>.GetEnumerator, X0
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 Move X8, [X31+24]
	157 Move X21, 0x5E8000
	158 Move X21, [X21+224]
	159 Move [X31+2], V0
	160 Move [X31+48], X8
	161 Move X22, 0x5E8000
	162 Move X22, [X22+2088]
	163 Move X1, [X21]
	164 Add X0, X31, 32
	165 Call Enumerator<Object>.MoveNext, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {176}
	170 Move X0, [X20+208]
	171 Compare X0, 0
	172 JumpIfEqual {260}
	173 Move X1, [X31+48]
	174 Move X2, [X22]
	175 Call HashSet`1<Object>.Add, X0, X1
	176 Move X8, 0x5E8000
	177 Move X8, [X8+216]
	178 Add X0, X31, 32
	179 Move X1, [X8]
	180 Call Enumerator<Object>.Dispose, X0
	181 Move X0, [X20+184]
	182 Compare X0, 0
	183 JumpIfEqual {249}
	184 Move W8, [X0+24]
	185 Subtract W21, W8, 1
	186 Move X24, 0x5E7000
	187 Move X25, 0x5E8000
	188 Move X24, [X24+2376]
	189 Move X25, [X25+2104]
	190 Move X2, [X24]
	191 Move W1, W21
	192 Call List`1<Object>.get_Item, X0, X1
	193 Move X8, [X20]
	194 Move X22, X0
	195 Move X0, X20
	196 Move X1, X19
	197 Move X9, [X8+568]
	198 Move X3, [X8+576]
	199 Move X2, X22
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {241}
	205 Move X8, [X19]
	206 Move X1, [X23]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move W2, 6
	217 Move X0, X19
	218 Call 0x1C5D788
	219 Move W9, [X10]
	220 Add W9, W9, 6
	221 Add X8, X8, W9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X19
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {245}
	231 Move X0, [X20+208]
	232 Compare X0, 0
	233 JumpIfEqual {249}
	234 Move X2, [X25]
	235 Move X1, X22
	236 Call HashSet`1<Object>.Contains, X0, X1
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {245}
	241 Move X0, X20
	242 Move X1, X19
	243 Move X2, X22
	244 Call XRInteractionManager.SelectExitInternal, X0, X1, X2
	245 Subtract W21, W21, 1
	246 Move X0, [X20+184]
	247 Compare X0, 0
	248 JumpIfNotEqual {190}
	249 Call 0x1C17F20
	250 Move X20, [X31+112]
	251 Move X19, [X31+120]
	252 Move X22, [X31+96]
	253 Move X21, [X31+104]
	254 Move X24, [X31+80]
	255 Move X23, [X31+88]
	256 Move X30, [X31+64]
	257 Move X25, [X31+72]
	258 Add X31, X31, 128
	259 Return 
	260 Call 0x1C17F20
	261 Move X21, X0
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X0, X21
	264 Call 0x3EB2AD0
	265 Move X22, [X0]
	266 Call 0x3EB2AE0
	267 Move X8, 0x5E8000
	268 Move X8, [X8+216]
	269 Add X0, X31, 32
	270 Move X1, [X8]
	271 Call Enumerator<Object>.Dispose, X0
	272 Compare X22, 0
	273 JumpIfEqual {181}
	274 Move X0, X22
	275 Call 0x1C17F18
	276 Move X22, X31
	277 Move X21, X0
	278 Move X8, 0x5E8000
	279 Move X8, [X8+216]
	280 Move X1, [X8]
	281 Add X0, X31, 32
	282 Call Enumerator<Object>.Dispose, X0
	283 Compare X22, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X21
	286 Call 0x1D2D690
	287 Move X0, X22
	288 Call 0x1C17F18
	289 Call 0x1991590

Method: System.Void ClearInteractorSelectionInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)

Disassembly:
	0x03B6F5F4 BL 0x2BC4350
	0x03B6F5F8 TBZ X0, 0x0, 0x3B6F69C
	0x03B6F5FC LDR X0, [X20 + 0x98]
	0x03B6F600 CBZ X0, 0x3B6F6D4
	0x03B6F604 LDR X8, [X0]
	0x03B6F608 LDR X21, [X31 + 0x30]
	0x03B6F60C LDP X9, X2, [X8 + 0x188]
	0x03B6F610 MOV X1, X21
	0x03B6F614 BLR X9
	0x03B6F618 TBZ X0, 0x0, 0x3B6F5EC
	0x03B6F61C LDR X0, [X20 + 0xD8]
	0x03B6F620 CBZ X0, 0x3B6F6DC
	0x03B6F624 LDR X2, [X24]
	0x03B6F628 MOV X1, X21
	0x03B6F62C BL 0x2DBE4B0
	0x03B6F630 TBNZ X0, 0x0, 0x3B6F5EC
	0x03B6F634 CBZ X21, 0x3B6F6E4
	0x03B6F638 LDR X8, [X21]
	0x03B6F63C LDR X1, [X25]
	0x03B6F640 LDRH W9, [X8 + 0x12E]
	0x03B6F644 CBZ X9, 0x3B6F668
	0x03B6F648 LDR X10, [X8 + 0xB0]
	0x03B6F64C ADD X10, X10, 0x8
	0x03B6F650 LDUR X11, [X10 - 0x8]
	0x03B6F654 CMP X11, X1
	0x03B6F658 B.EQ 0x3B6F678
	0x03B6F65C SUBS X9, X9, 0x1
	0x03B6F660 ADD X10, X10, 0x10
	0x03B6F664 B.NE 0x3B6F650
	0x03B6F668 MOVZ W2, 0xB
	0x03B6F66C MOV X0, X21
	0x03B6F670 BL 0x1C5C788
	0x03B6F674 B 0x3B6F688
	0x03B6F678 LDR W9, [X10]
	0x03B6F67C ADD W9, W9, 0xB
	0x03B6F680 ADD X8, X8, W9, 0x4, SXTW
	0x03B6F684 ADD X0, X8, 0x138
	0x03B6F688 LDP X8, X2, [X0]
	0x03B6F68C MOV X0, X21
	0x03B6F690 MOV W1, W19
	0x03B6F694 BLR X8
	0x03B6F698 B 0x3B6F5EC
	0x03B6F69C ADRP X8, 0x5EC000
	0x03B6F6A0 LDR X8, [X8 + 0x670]
	0x03B6F6A4 ADD X0, X31, 0x20
	0x03B6F6A8 LDR X1, [X8]
	0x03B6F6AC BL 0x2BC434C
	0x03B6F6B0 LDP X20, X19, [X31 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x874000
	007 Move W8, [X22+2624]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5EC000
	016 Move X0, [X0+872]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2624], W8
	020 Move X8, [X20]
	021 Move X0, X20
	022 Move X1, X19
	023 Move X2, X21
	024 Move X9, [X8+824]
	025 Move X3, [X8+832]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X19, 0
	028 JumpIfEqual {40}
	029 Move X8, 0x5EC000
	030 Move X8, [X8+872]
	031 Move X9, [X19]
	032 Move X8, [X8]
	033 Move W11, [X9+304]
	034 Move W10, [X8+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X9, X9, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 
	046 Move X8, [X20]
	047 Move X0, X20
	048 Move X1, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X3, [X8+1288]
	052 Move X2, [X8+1296]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 CallNoReturn X3

Method: System.Void CancelInteractorSelection(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B749AC BL 0x3EB1AD0
	0x03B749B0 LDR X19, [X0]
	0x03B749B4 BL 0x3EB1AE0
	0x03B749B8 LDR X1, [X23]
	0x03B749BC ADD X0, X31, 0x8
	0x03B749C0 BL 0x24A6DD0
	0x03B749C4 CBZ X19, 0x3B7497C
	0x03B749C8 MOV X0, X19
	0x03B749CC BL 0x1C16F18
	0x03B749D0 MOV X19, X31
	0x03B749D4 B 0x3B749DC
	0x03B749D8 MOV X20, X0
	0x03B749DC LDR X1, [X23]
	0x03B749E0 ADD X0, X31, 0x8
	0x03B749E4 BL 0x24A6DD0
	0x03B749E8 CBNZ X19, 0x3B749F4
	0x03B749EC MOV X0, X20
	0x03B749F0 BL 0x1D2C690
	0x03B749F4 MOV X0, X19
	0x03B749F8 BL 0x1C16F18
	0x03B749FC BL 0x1990590
	0x03B74A00 LDR X8, [X0]
	0x03B74A04 LDR X5, [X8 + 0x438]
	0x03B74A08 LDR X4, [X8 + 0x440]
	0x03B74A0C BR X5
	0x03B74A10 SUB X31, X31, 0x50
	0x03B74A14 STP X30, X23, [X31 + 0x20]
	0x03B74A18 STP X22, X21, [X31 + 0x30]
	0x03B74A1C STP X20, X19, [X31 + 0x40]
	0x03B74A20 ADRP X22, 0x86E000
	0x03B74A24 LDRB W8, [X22 + 0xA4D]
	0x03B74A28 MOV X19, X2
	0x03B74A2C MOV X20, X1
	0x03B74A30 MOV X21, X0
	0x03B74A34 TBNZ X8, 0x0, 0x3B74A64
	0x03B74A38 ADRP X0, 0x5E6000
	0x03B74A3C LDR X0, [X0 + 0x938]
	0x03B74A40 BL 0x1C16CF4
	0x03B74A44 ADRP X0, 0x5E7000
	0x03B74A48 LDR X0, [X0 + 0x850]
	0x03B74A4C BL 0x1C16CF4
	0x03B74A50 ADRP X0, 0x5E7000
	0x03B74A54 LDR X0, [X0 + 0x858]
	0x03B74A58 BL 0x1C16CF4
	0x03B74A5C MOVZ W8, 0x1
	0x03B74A60 STRB W8, [X22 + 0xA4D]
	0x03B74A64 STP X31, X31, [X31 + 0x10]
	0x03B74A68 STR X31, [X31 + 0x8]
	0x03B74A6C LDR X0, [X21 + 0x110]
	0x03B74A70 CBZ X0, 0x3B74B5C
	0x03B74A74 ADRP X8, 0x5E7000
	0x03B74A78 LDR X8, [X8 + 0x850]
	0x03B74A7C ADRP X22, 0x5E7000
	0x03B74A80 ADD X1, X31, 0x18
	0x03B74A84 LDR X2, [X8]
	0x03B74A88 LDR X22, [X22 + 0x858]
	0x03B74A8C BL 0x2EF1058
	0x03B74A90 LDR X23, [X31 + 0x18]
	0x03B74A94 STP X0, X1, [X31 + 0x8]
	0x03B74A98 CBZ X23, 0x3B74B60
	0x03B74A9C STR X21, [X23 + 0x28]
	0x03B74AA0 CBZ X20, 0x3B74B64
	0x03B74AA4 ADRP X10, 0x5E6000
	0x03B74AA8 LDR X8, [X20]
	0x03B74AAC LDR X10, [X10 + 0x938]
	0x03B74AB0 LDRH W9, [X8 + 0x12E]
	0x03B74AB4 LDR X1, [X10]
	0x03B74AB8 CBZ X9, 0x3B74ADC
	0x03B74ABC LDR X10, [X8 + 0xB0]
	0x03B74AC0 ADD X10, X10, 0x8
	0x03B74AC4 LDUR X11, [X10 - 0x8]
	0x03B74AC8 CMP X11, X1
	0x03B74ACC B.EQ 0x3B74AEC
	0x03B74AD0 SUBS X9, X9, 0x1
	0x03B74AD4 ADD X10, X10, 0x10
	0x03B74AD8 B.NE 0x3B74AC4
	0x03B74ADC MOVZ W2, 0x6
	0x03B74AE0 MOV X0, X20
	0x03B74AE4 BL 0x1C5C788
	0x03B74AE8 B 0x3B74AFC
	0x03B74AEC LDR W9, [X10]
	0x03B74AF0 ADD W9, W9, 0x6
	0x03B74AF4 ADD X8, X8, W9, 0x4, SXTW
	0x03B74AF8 ADD X0, X8, 0x138
	0x03B74AFC LDP X8, X1, [X0]
	0x03B74B00 MOV X0, X20
	0x03B74B04 BLR X8
	0x03B74B08 STR X0, [X23 + 0x10]
	0x03B74B0C LDR X3, [X31 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x86F000
	008 Move W8, [X21+2625]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E7000
	016 Move X0, [X0+808]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E7000
	019 Move X0, [X0+2368]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E7000
	022 Move X0, [X0+2376]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2625], W8
	026 Compare X19, 0
	027 JumpIfEqual {97}
	028 Move X22, 0x5E7000
	029 Move X8, [X19]
	030 Move X22, [X22+808]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 2
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 2
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {97}
	054 Move W8, [X0+24]
	055 Subtract W21, W8, 1
	056 Move X23, 0x5E7000
	057 Move X23, [X23+2376]
	058 Move X8, [X19]
	059 Move X1, [X22]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 2
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 2
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {97}
	082 Move X2, [X23]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X2, X0
	086 Move X0, X20
	087 Move X1, X19
	088 Call XRInteractionManager.SelectCancelInternal, X0, X1, X2
	089 Subtract W21, W21, 1
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Return 
	097 Call 0x1C17F20

Method: System.Void CancelInteractorSelectionInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B72A3C LDR W8, [X0 + 0xE0]
	0x03B72A40 CBNZ W8, 0x3B72A48
	0x03B72A44 BL 0x1C16DFC
	0x03B72A48 MOV X0, X21
	0x03B72A4C MOV X1, X31
	0x03B72A50 MOV X2, X31
	0x03B72A54 BL 0x3C3883C
	0x03B72A58 TBNZ X0, 0x0, 0x3B72AC4
	0x03B72A5C LDR X0, [X19 + 0x90]
	0x03B72A60 CBZ X0, 0x3B72AD4
	0x03B72A64 ADRP X8, 0x5E9000
	0x03B72A68 LDR X8, [X8 + 0x7E0]
	0x03B72A6C ADD X2, X31, 0x8
	0x03B72A70 MOV X1, X21
	0x03B72A74 LDR X3, [X8]
	0x03B72A78 BL 0x2AA6B2C
	0x03B72A7C TBZ X0, 0x0, 0x3B72AC4
	0x03B72A80 LDR X0, [X22]
	0x03B72A84 LDR X22, [X31 + 0x8]
	0x03B72A88 LDR W8, [X0 + 0xE0]
	0x03B72A8C CBNZ W8, 0x3B72A94
	0x03B72A90 BL 0x1C16DFC
	0x03B72A94 MOV X0, X22
	0x03B72A98 MOV X1, X20
	0x03B72A9C MOV X2, X31
	0x03B72AA0 BL 0x3C3883C
	0x03B72AA4 TBZ X0, 0x0, 0x3B72AC4
	0x03B72AA8 LDR X0, [X19 + 0x90]
	0x03B72AAC CBZ X0, 0x3B72AD4
	0x03B72AB0 ADRP X8, 0x5E9000
	0x03B72AB4 LDR X8, [X8 + 0x7F0]
	0x03B72AB8 MOV X1, X21
	0x03B72ABC LDR X2, [X8]
	0x03B72AC0 BL 0x2AA64F8
	0x03B72AC4 LDP X20, X19, [X31 + 0x20]
	0x03B72AC8 LDP X22, X21, [X31 + 0x10]
	0x03B72ACC LDR X30, [X31], #0x30
	0x03B72AD0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x871000
	006 Move W8, [X21+2626]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5E9000
	014 Move X0, [X0+872]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2626], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x5E9000
	021 Move X8, [X8+872]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20]
	032 Move X3, [X8+840]
	033 Move X2, [X8+848]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Move X8, [X20]
	042 Move X3, [X8+1304]
	043 Move X2, [X8+1312]

Method: System.Void CancelInteractableSelection(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B74BFC MOV X19, X1
	0x03B74C00 MOV X20, X0
	0x03B74C04 TBNZ X8, 0x0, 0x3B74C40
	0x03B74C08 ADRP X0, 0x5E6000
	0x03B74C0C LDR X0, [X0 + 0x130]
	0x03B74C10 BL 0x1C16CF4
	0x03B74C14 ADRP X0, 0x5E6000
	0x03B74C18 LDR X0, [X0 + 0x160]
	0x03B74C1C BL 0x1C16CF4
	0x03B74C20 ADRP X0, 0x5E7000
	0x03B74C24 LDR X0, [X0 + 0x860]
	0x03B74C28 BL 0x1C16CF4
	0x03B74C2C ADRP X0, 0x5E7000
	0x03B74C30 LDR X0, [X0 + 0x868]
	0x03B74C34 BL 0x1C16CF4
	0x03B74C38 MOVZ W8, 0x1
	0x03B74C3C STRB W8, [X22 + 0xA4E]
	0x03B74C40 STP X31, X31, [X31 + 0x10]
	0x03B74C44 STR X31, [X31 + 0x8]
	0x03B74C48 CBZ X21, 0x3B74D70
	0x03B74C4C ADRP X10, 0x5E6000
	0x03B74C50 LDR X8, [X21]
	0x03B74C54 LDR X10, [X10 + 0x160]
	0x03B74C58 LDRH W9, [X8 + 0x12E]
	0x03B74C5C LDR X1, [X10]
	0x03B74C60 CBZ X9, 0x3B74C84
	0x03B74C64 LDR X10, [X8 + 0xB0]
	0x03B74C68 ADD X10, X10, 0x8
	0x03B74C6C LDUR X11, [X10 - 0x8]
	0x03B74C70 CMP X11, X1
	0x03B74C74 B.EQ 0x3B74C94
	0x03B74C78 SUBS X9, X9, 0x1
	0x03B74C7C ADD X10, X10, 0x10
	0x03B74C80 B.NE 0x3B74C6C
	0x03B74C84 MOVZ W2, 0x6
	0x03B74C88 MOV X0, X21
	0x03B74C8C BL 0x1C5C788
	0x03B74C90 B 0x3B74CA4
	0x03B74C94 LDR W9, [X10]
	0x03B74C98 ADD W9, W9, 0x6
	0x03B74C9C ADD X8, X8, W9, 0x4, SXTW
	0x03B74CA0 ADD X0, X8, 0x138
	0x03B74CA4 LDP X8, X1, [X0]
	0x03B74CA8 MOV X0, X21
	0x03B74CAC BLR X8
	0x03B74CB0 TBZ X0, 0x0, 0x3B74CD4
	0x03B74CB4 LDR X8, [X20]
	0x03B74CB8 MOV X0, X20
	0x03B74CBC MOV X1, X19
	0x03B74CC0 MOV X2, X21
	0x03B74CC4 LDR X9, [X8 + 0x4B8]
	0x03B74CC8 LDR X3, [X8 + 0x4C0]
	0x03B74CCC BLR X9
	0x03B74CD0 TBZ X0, 0x0, 0x3B74D5C
	0x03B74CD4 LDR X0, [X20 + 0x118]
	0x03B74CD8 CBZ X0, 0x3B74D70
	0x03B74CDC ADRP X8, 0x5E7000
	0x03B74CE0 LDR X8, [X8 + 0x860]
	0x03B74CE4 ADRP X22, 0x5E7000
	0x03B74CE8 ADD X1, X31, 0x18
	0x03B74CEC LDR X2, [X8]
	0x03B74CF0 LDR X22, [X22 + 0x868]
	0x03B74CF4 BL 0x2EF1058
	0x03B74CF8 LDR X3, [X31 + 0x18]
	0x03B74CFC STP X0, X1, [X31 + 0x8]
	0x03B74D00 CBZ X3, 0x3B74D74
	0x03B74D04 STP X21, X20, [X3 + 0x18]
	0x03B74D08 STR X19, [X3 + 0x10]
	0x03B74D0C MOV X0, X20
	0x03B74D10 MOV X1, X19
	0x03B74D14 MOV X2, X21
	0x03B74D18 BL 0x3B74DF0
	0x03B74D1C LDR X1, [X22]
	0x03B74D20 ADD X0, X31, 0x8
	0x03B74D24 BL 0x24A6DD0
	0x03B74D28 ADRP X8, 0x5E6000
	0x03B74D2C LDR X8, [X8 + 0x130]
	0x03B74D30 MOV X0, X21
	0x03B74D34 LDR X1, [X8]
	0x03B74D38 BL 0x1C16E00
	0x03B74D3C CBZ X0, 0x3B74D5C
	0x03B74D40 LDR X8, [X20]
	0x03B74D44 MOV X2, X0
	0x03B74D48 MOV X0, X20
	0x03B74D4C MOV X1, X19
	0x03B74D50 LDR X9, [X8 + 0x398]
	0x03B74D54 LDR X3, [X8 + 0x3A0]
	0x03B74D58 BLR X9
	0x03B74D5C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x86F000
	008 Move W8, [X21+2627]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E7000
	016 Move X0, [X0+352]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E7000
	019 Move X0, [X0+360]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E7000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2627], W8
	026 Compare X19, 0
	027 JumpIfEqual {97}
	028 Move X22, 0x5E7000
	029 Move X8, [X19]
	030 Move X22, [X22+352]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 4
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 4
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {97}
	054 Move W8, [X0+24]
	055 Subtract W21, W8, 1
	056 Move X23, 0x5E7000
	057 Move X23, [X23+368]
	058 Move X8, [X19]
	059 Move X1, [X22]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 4
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 4
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {97}
	082 Move X2, [X23]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X1, X0
	086 Move X0, X20
	087 Move X2, X19
	088 Call XRInteractionManager.SelectCancelInternal, X0, X1, X2
	089 Subtract W21, W21, 1
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Return 
	097 Call 0x1C17F20

Method: System.Void CancelInteractableSelectionInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B73600 ADD W8, W8, 0x1
	0x03B73604 CMP W2, 0x1
	0x03B73608 STP W31, W8, [X22 + 0x18]
	0x03B7360C B.LT 0x3B73624
	0x03B73610 LDR X0, [X22 + 0x10]
	0x03B73614 MOV W1, W31
	0x03B73618 MOV X3, X31
	0x03B7361C BL 0x339FA34
	0x03B73620 LDR X22, [X20 + 0xB8]
	0x03B73624 LDR X8, [X19]
	0x03B73628 LDR X1, [X23]
	0x03B7362C LDRH W9, [X8 + 0x12E]
	0x03B73630 CBZ X9, 0x3B73654
	0x03B73634 LDR X10, [X8 + 0xB0]
	0x03B73638 ADD X10, X10, 0x8
	0x03B7363C LDUR X11, [X10 - 0x8]
	0x03B73640 CMP X11, X1
	0x03B73644 B.EQ 0x3B73664
	0x03B73648 SUBS X9, X9, 0x1
	0x03B7364C ADD X10, X10, 0x10
	0x03B73650 B.NE 0x3B7363C
	0x03B73654 MOVZ W2, 0x2
	0x03B73658 MOV X0, X19
	0x03B7365C BL 0x1C5C788
	0x03B73660 B 0x3B73674
	0x03B73664 LDR W9, [X10]
	0x03B73668 ADD W9, W9, 0x2
	0x03B7366C ADD X8, X8, W9, 0x4, SXTW
	0x03B73670 ADD X0, X8, 0x138
	0x03B73674 LDP X8, X1, [X0]
	0x03B73678 MOV X0, X19
	0x03B7367C BLR X8
	0x03B73680 CBZ X22, 0x3B73824
	0x03B73684 ADRP X8, 0x5E8000
	0x03B73688 LDR X8, [X8 + 0x120]
	0x03B7368C MOV X1, X0
	0x03B73690 MOV X0, X22
	0x03B73694 LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x870000
	006 Move W8, [X21+2628]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5E8000
	014 Move X0, [X0+1080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2628], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x5E8000
	021 Move X8, [X8+1080]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20]
	032 Move X3, [X8+856]
	033 Move X2, [X8+864]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Move X8, [X20]
	042 Move X3, [X8+1320]
	043 Move X2, [X8+1328]

Method: System.Void ClearInteractorHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)

Disassembly:
	0x03B74D60 LDP X22, X21, [X31 + 0x30]
	0x03B74D64 LDP X30, X23, [X31 + 0x20]
	0x03B74D68 ADD X31, X31, 0x50
	0x03B74D6C RET
	0x03B74D70 BL 0x1C16F20
	0x03B74D74 BL 0x1C16F20
	0x03B74D78 B 0x3B74D7C
	0x03B74D7C MOV X23, X0
	0x03B74D80 CMP W1, 0x1
	0x03B74D84 B.NE 0x3B74DB8
	0x03B74D88 MOV X0, X23
	0x03B74D8C BL 0x3EB1AD0
	0x03B74D90 LDR X22, [X0]
	0x03B74D94 BL 0x3EB1AE0
	0x03B74D98 ADRP X8, 0x5E7000
	0x03B74D9C LDR X8, [X8 + 0x868]
	0x03B74DA0 ADD X0, X31, 0x8
	0x03B74DA4 LDR X1, [X8]
	0x03B74DA8 BL 0x24A6DD0
	0x03B74DAC CBZ X22, 0x3B74D28
	0x03B74DB0 MOV X0, X22
	0x03B74DB4 BL 0x1C16F18
	0x03B74DB8 MOV X22, X31
	0x03B74DBC B 0x3B74DC4
	0x03B74DC0 MOV X23, X0
	0x03B74DC4 ADRP X8, 0x5E7000
	0x03B74DC8 LDR X8, [X8 + 0x868]
	0x03B74DCC LDR X1, [X8]
	0x03B74DD0 ADD X0, X31, 0x8
	0x03B74DD4 BL 0x24A6DD0
	0x03B74DD8 CBNZ X22, 0x3B74DE4
	0x03B74DDC MOV X0, X23
	0x03B74DE0 BL 0x1D2C690
	0x03B74DE4 MOV X0, X22
	0x03B74DE8 BL 0x1C16F18
	0x03B74DEC BL 0x1990590
	0x03B74DF0 STP X30, X23, [X31 - 0x30]!
	0x03B74DF4 STP X22, X21, [X31 + 0x10]
	0x03B74DF8 STP X20, X19, [X31 + 0x20]
	0x03B74DFC ADRP X23, 0x86E000
	0x03B74E00 LDRB W8, [X23 + 0xA5D]
	0x03B74E04 MOV X19, X3
	0x03B74E08 MOV X20, X2
	0x03B74E0C MOV X21, X1
	0x03B74E10 MOV X22, X0
	0x03B74E14 TBNZ X8, 0x0, 0x3B74E38
	0x03B74E18 ADRP X0, 0x5E6000
	0x03B74E1C LDR X0, [X0 + 0x438]
	0x03B74E20 BL 0x1C16CF4
	0x03B74E24 ADRP X0, 0x5E6000
	0x03B74E28 LDR X0, [X0 + 0x368]
	0x03B74E2C BL 0x1C16CF4
	0x03B74E30 MOVZ W8, 0x1
	0x03B74E34 STRB W8, [X23 + 0xA5D]
	0x03B74E38 CBZ X21, 0x3B74E70
	0x03B74E3C ADRP X8, 0x5E6000
	0x03B74E40 LDR X8, [X8 + 0x368]
	0x03B74E44 LDR X9, [X21]
	0x03B74E48 LDR X8, [X8]
	0x03B74E4C LDRB W11, [X9 + 0x130]
	0x03B74E50 LDRB W10, [X8 + 0x130]
	0x03B74E54 CMP W11, W10
	0x03B74E58 B.CC 0x3B74E70
	0x03B74E5C LDR X9, [X9 + 0xC8]
	0x03B74E60 ADD X9, X9, X10, 0x3, LSL
	0x03B74E64 LDUR X9, [X9 - 0x8]
	0x03B74E68 CMP X9, X8
	0x03B74E6C B.EQ 0x3B74E9C
	0x03B74E70 LDR X8, [X22]
	0x03B74E74 LDR X5, [X8 + 0x448]
	0x03B74E78 LDR X4, [X8 + 0x450]
	0x03B74E7C MOV X0, X22
	0x03B74E80 MOV X1, X21
	0x03B74E84 MOV X2, X20
	0x03B74E88 MOV X3, X19
	0x03B74E8C LDP X20, X19, [X31 + 0x20]
	0x03B74E90 LDP X22, X21, [X31 + 0x10]
	0x03B74E94 LDP X30, X23, [X31], #0x30
	0x03B74E98 BR X5
	0x03B74E9C CBZ X20, 0x3B74E70
	0x03B74EA0 ADRP X8, 0x5E6000
	0x03B74EA4 LDR X8, [X8 + 0x438]
	0x03B74EA8 LDR X9, [X20]
	0x03B74EAC LDR X8, [X8]
	0x03B74EB0 LDRB W11, [X9 + 0x130]
	0x03B74EB4 LDRB W10, [X8 + 0x130]
	0x03B74EB8 CMP W11, W10
	0x03B74EBC B.CC 0x3B74E70
	0x03B74EC0 LDR X9, [X9 + 0xC8]
	0x03B74EC4 ADD X9, X9, X10, 0x3, LSL
	0x03B74EC8 LDUR X9, [X9 - 0x8]
	0x03B74ECC CMP X9, X8
	0x03B74ED0 B.NE 0x3B74E70
	0x03B74ED4 LDR X8, [X22]
	0x03B74ED8 LDR X5, [X8 + 0x5C8]
	0x03B74EDC LDR X4, [X8 + 0x5D0]
	0x03B74EE0 B 0x3B74E7C
	0x03B74EE4 STR X30, [X31 - 0x30]!
	0x03B74EE8 STP X22, X21, [X31 + 0x10]
	0x03B74EEC STP X20, X19, [X31 + 0x20]
	0x03B74EF0 ADRP X22, 0x86E000
	0x03B74EF4 LDRB W8, [X22 + 0xA4F]
	0x03B74EF8 MOV X19, X2
	0x03B74EFC MOV X20, X1
	0x03B74F00 MOV X21, X0
	0x03B74F04 TBNZ X8, 0x0, 0x3B74F28
	0x03B74F08 ADRP X0, 0x5E6000
	0x03B74F0C LDR X0, [X0 + 0x438]
	0x03B74F10 BL 0x1C16CF4
	0x03B74F14 ADRP X0, 0x5E6000
	0x03B74F18 LDR X0, [X0 + 0x368]
	0x03B74F1C BL 0x1C16CF4
	0x03B74F20 MOVZ W8, 0x1
	0x03B74F24 STRB W8, [X22 + 0xA4F]
	0x03B74F28 CBZ X20, 0x3B74F60
	0x03B74F2C ADRP X8, 0x5E6000
	0x03B74F30 LDR X8, [X8 + 0x368]
	0x03B74F34 LDR X9, [X20]
	0x03B74F38 LDR X8, [X8]
	0x03B74F3C LDRB W11, [X9 + 0x130]
	0x03B74F40 LDRB W10, [X8 + 0x130]
	0x03B74F44 CMP W11, W10
	0x03B74F48 B.CC 0x3B74F60
	0x03B74F4C LDR X9, [X9 + 0xC8]
	0x03B74F50 ADD X9, X9, X10, 0x3, LSL
	0x03B74F54 LDUR X9, [X9 - 0x8]
	0x03B74F58 CMP X9, X8
	0x03B74F5C B.EQ 0x3B74F88
	0x03B74F60 LDR X8, [X21]
	0x03B74F64 LDR X4, [X8 + 0x3C8]
	0x03B74F68 LDR X3, [X8 + 0x3D0]
	0x03B74F6C MOV X0, X21
	0x03B74F70 MOV X1, X20
	0x03B74F74 MOV X2, X19
	0x03B74F78 LDP X20, X19, [X31 + 0x20]
	0x03B74F7C LDP X22, X21, [X31 + 0x10]
	0x03B74F80 LDR X30, [X31], #0x30
	0x03B74F84 BR X4
	0x03B74F88 CBZ X19, 0x3B74F60
	0x03B74F8C ADRP X8, 0x5E6000
	0x03B74F90 LDR X8, [X8 + 0x438]
	0x03B74F94 LDR X9, [X19]
	0x03B74F98 LDR X8, [X8]
	0x03B74F9C LDRB W11, [X9 + 0x130]
	0x03B74FA0 LDRB W10, [X8 + 0x130]
	0x03B74FA4 CMP W11, W10
	0x03B74FA8 B.CC 0x3B74F60
	0x03B74FAC LDR X9, [X9 + 0xC8]
	0x03B74FB0 ADD X9, X9, X10, 0x3, LSL
	0x03B74FB4 LDUR X9, [X9 - 0x8]
	0x03B74FB8 CMP X9, X8
	0x03B74FBC B.NE 0x3B74F60
	0x03B74FC0 LDR X8, [X21]
	0x03B74FC4 LDR X4, [X8 + 0x568]
	0x03B74FC8 LDR X3, [X8 + 0x570]
	0x03B74FCC B 0x3B74F6C
	0x03B74FD0 SUB X31, X31, 0x40
	0x03B74FD4 STR X30, [X31 + 0x10]
	0x03B74FD8 STP X22, X21, [X31 + 0x20]
	0x03B74FDC STP X20, X19, [X31 + 0x30]
	0x03B74FE0 ADRP X22, 0x86E000
	0x03B74FE4 LDRB W8, [X22 + 0xA50]
	0x03B74FE8 MOV X19, X2
	0x03B74FEC MOV X20, X1
	0x03B74FF0 MOV X21, X0
	0x03B74FF4 TBNZ X8, 0x0, 0x3B75018
	0x03B74FF8 ADRP X0, 0x5E7000
	0x03B74FFC LDR X0, [X0 + 0x870]
	0x03B75000 BL 0x1C16CF4
	0x03B75004 ADRP X0, 0x5E6000
	0x03B75008 LDR X0, [X0 + 0x878]
	0x03B7500C BL 0x1C16CF4
	0x03B75010 MOVZ W8, 0x1
	0x03B75014 STRB W8, [X22 + 0xA50]
	0x03B75018 STR X31, [X31 + 0x18]
	0x03B7501C STP X31, X31, [X31]
	0x03B75020 LDR X0, [X21 + 0x120]
	0x03B75024 CBZ X0, 0x3B7508C
	0x03B75028 ADRP X8, 0x5E6000
	0x03B7502C LDR X8, [X8 + 0x870]
	0x03B75030 ADRP X22, 0x5E6000
	0x03B75034 ADD X1, X31, 0x18
	0x03B75038 LDR X2, [X8]
	0x03B7503C LDR X22, [X22 + 0x878]
	0x03B75040 BL 0x2EF1058
	0x03B75044 LDR X3, [X31 + 0x18]
	0x03B75048 STP X0, X1, [X31]
	0x03B7504C CBZ X3, 0x3B75090
	0x03B75050 STP X19, X21, [X3 + 0x18]
	0x03B75054 STR X20, [X3 + 0x10]
	0x03B75058 STRB W31, [X3 + 0x28]
	0x03B7505C MOV X0, X21
	0x03B75060 MOV X1, X20
	0x03B75064 MOV X2, X19
	0x03B75068 BL 0x3B750FC
	0x03B7506C LDR X1, [X22]
	0x03B75070 ADD X0, X31, 0x0
	0x03B75074 BL 0x24A6DD0
	0x03B75078 LDP X20, X19, [X31 + 0x30]
	0x03B7507C LDP X22, X21, [X31 + 0x20]
	0x03B75080 LDR X30, [X31 + 0x10]
	0x03B75084 ADD X31, X31, 0x40
	0x03B75088 RET
	0x03B7508C BL 0x1C16F20
	0x03B75090 BL 0x1C16F20
	0x03B75094 B 0x3B75098
	0x03B75098 MOV X20, X0
	0x03B7509C CMP W1, 0x1
	0x03B750A0 B.NE 0x3B750CC
	0x03B750A4 MOV X0, X20
	0x03B750A8 BL 0x3EB1AD0
	0x03B750AC LDR X19, [X0]
	0x03B750B0 BL 0x3EB1AE0
	0x03B750B4 LDR X1, [X22]
	0x03B750B8 ADD X0, X31, 0x0
	0x03B750BC BL 0x24A6DD0
	0x03B750C0 CBZ X19, 0x3B75078
	0x03B750C4 MOV X0, X19
	0x03B750C8 BL 0x1C16F18
	0x03B750CC MOV X19, X31
	0x03B750D0 B 0x3B750D8
	0x03B750D4 MOV X20, X0
	0x03B750D8 LDR X1, [X22]
	0x03B750DC ADD X0, X31, 0x0
	0x03B750E0 BL 0x24A6DD0
	0x03B750E4 CBNZ X19, 0x3B750F0
	0x03B750E8 MOV X0, X20
	0x03B750EC BL 0x1D2C690
	0x03B750F0 MOV X0, X19
	0x03B750F4 BL 0x1C16F18
	0x03B750F8 BL 0x1990590
	0x03B750FC STP X30, X23, [X31 - 0x30]!
	0x03B75100 STP X22, X21, [X31 + 0x10]
	0x03B75104 STP X20, X19, [X31 + 0x20]
	0x03B75108 ADRP X23, 0x86D000
	0x03B7510C LDRB W8, [X23 + 0xA5F]
	0x03B75110 MOV X19, X3
	0x03B75114 MOV X20, X2

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X22, 0x86F000
	010 Move W8, [X22+2629]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {59}
	018 Move X0, 0x5E8000
	019 Move X0, [X0+216]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E8000
	022 Move X0, [X0+224]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E8000
	025 Move X0, [X0+232]
	026 Call 0x1C17CF4
	027 Move X0, 0x5E8000
	028 Move X0, [X0+2088]
	029 Call 0x1C17CF4
	030 Move X0, 0x5E8000
	031 Move X0, [X0+2096]
	032 Call 0x1C17CF4
	033 Move X0, 0x5E8000
	034 Move X0, [X0+2104]
	035 Call 0x1C17CF4
	036 Move X0, 0x5E7000
	037 Move X0, [X0+800]
	038 Call 0x1C17CF4
	039 Move X0, 0x5E8000
	040 Move X0, [X0+312]
	041 Call 0x1C17CF4
	042 Move X0, 0x5E8000
	043 Move X0, [X0+320]
	044 Call 0x1C17CF4
	045 Move X0, 0x5E8000
	046 Move X0, [X0+240]
	047 Call 0x1C17CF4
	048 Move X0, 0x5E7000
	049 Move X0, [X0+3736]
	050 Call 0x1C17CF4
	051 Move X0, 0x5E7000
	052 Move X0, [X0+2344]
	053 Call 0x1C17CF4
	054 Move X0, 0x5E7000
	055 Move X0, [X0+2352]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+2629], W8
	059 Move [X31+32], X31
	060 Move [X31+40], X31
	061 Move [X31+48], X31
	062 Compare X19, 0
	063 JumpIfEqual {222}
	064 Move X23, 0x5E7000
	065 Move X8, [X19]
	066 Move X23, [X23+800]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X23]
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 2
	078 Move X0, X19
	079 Call 0x1C5D788
	080 Move W9, [X10]
	081 Add W9, W9, 2
	082 Add X8, X8, W9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X0, 0
	089 JumpIfEqual {222}
	090 Move W8, [X0+24]
	091 Compare W8, 0
	092 JumpIfEqual {223}
	093 Move X22, [X20+176]
	094 Compare X22, 0
	095 JumpIfEqual {222}
	096 Move W2, [X22+24]
	097 Move W8, [X22+28]
	098 Add W8, W8, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X22+24], W31
	101 Move [X22+28], W8
	102 Move X0, [X22+16]
	103 Move W1, W31
	104 Move X3, X31
	105 Call Array.Clear, X0, X1, X2
	106 Move X22, [X20+176]
	107 Move X8, [X19]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 2
	119 Move X0, X19
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 2
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X19
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Compare X22, 0
	130 JumpIfEqual {222}
	131 Move X8, 0x5E8000
	132 Move X8, [X8+312]
	133 Move X1, X0
	134 Move X0, X22
	135 Move X2, [X8]
	136 Call List`1<Object>.AddRange, X0, X1
	137 Move X0, [X20+208]
	138 Compare X0, 0
	139 JumpIfEqual {222}
	140 Move X8, 0x5E8000
	141 Move X8, [X8+2096]
	142 Move X1, [X8]
	143 Call HashSet`1<Object>.Clear, X0
	144 Compare X21, 0
	145 JumpIfEqual {222}
	146 Move W8, [X21+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, 0x5E8000
	149 Move X8, [X8+240]
	150 Move X0, X21
	151 Move X1, [X8]
	152 Add X8, X31, 8
	153 Call List`1<Object>.GetEnumerator, X0
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 Move X8, [X31+24]
	156 Move X21, 0x5E8000
	157 Move X21, [X21+224]
	158 Move [X31+2], V0
	159 Move [X31+48], X8
	160 Move X22, 0x5E8000
	161 Move X22, [X22+2088]
	162 Move X1, [X21]
	163 Add X0, X31, 32
	164 Call Enumerator<Object>.MoveNext, X0
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {175}
	169 Move X0, [X20+208]
	170 Compare X0, 0
	171 JumpIfEqual {232}
	172 Move X1, [X31+48]
	173 Move X2, [X22]
	174 Call HashSet`1<Object>.Add, X0, X1
	175 Move X8, 0x5E8000
	176 Move X8, [X8+216]
	177 Add X0, X31, 32
	178 Move X1, [X8]
	179 Call Enumerator<Object>.Dispose, X0
	180 Move X0, [X20+176]
	181 Compare X0, 0
	182 JumpIfEqual {222}
	183 Move W8, [X0+24]
	184 Subtract W21, W8, 1
	185 Move X23, 0x5E6000
	186 Move X24, 0x5E7000
	187 Move X23, [X23+2352]
	188 Move X24, [X24+2104]
	189 Move X2, [X23]
	190 Move W1, W21
	191 Call List`1<Object>.get_Item, X0, X1
	192 Move X8, [X20]
	193 Move X22, X0
	194 Move X0, X20
	195 Move X1, X19
	196 Move X9, [X8+552]
	197 Move X3, [X8+560]
	198 Move X2, X22
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {214}
	204 Move X0, [X20+208]
	205 Compare X0, 0
	206 JumpIfEqual {222}
	207 Move X2, [X24]
	208 Move X1, X22
	209 Call HashSet`1<Object>.Contains, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {218}
	214 Move X0, X20
	215 Move X1, X19
	216 Move X2, X22
	217 Call XRInteractionManager.HoverExitInternal, X0, X1, X2
	218 Subtract W21, W21, 1
	219 Move X0, [X20+176]
	220 Compare X0, 0
	221 JumpIfNotEqual {189}
	222 Call 0x1C17F20
	223 Move X20, [X31+112]
	224 Move X19, [X31+120]
	225 Move X22, [X31+96]
	226 Move X21, [X31+104]
	227 Move X24, [X31+80]
	228 Move X23, [X31+88]
	229 Move X30, [X31+64]
	230 Add X31, X31, 128
	231 Return 
	232 Call 0x1C17F20
	233 Move X21, X0
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X0, X21
	236 Call 0x3EB2AD0
	237 Move X22, [X0]
	238 Call 0x3EB2AE0
	239 Move X8, 0x5E7000
	240 Move X8, [X8+216]
	241 Add X0, X31, 32
	242 Move X1, [X8]
	243 Call Enumerator<Object>.Dispose, X0
	244 Compare X22, 0
	245 JumpIfEqual {180}
	246 Move X0, X22
	247 Call 0x1C17F18
	248 Move X22, X31
	249 Move X21, X0
	250 Move X8, 0x5E7000
	251 Move X8, [X8+216]
	252 Move X1, [X8]
	253 Add X0, X31, 32
	254 Call Enumerator<Object>.Dispose, X0
	255 Compare X22, 0
	256 JumpIfNotEqual {259}
	257 Move X0, X21
	258 Call 0x1D2D690
	259 Move X0, X22
	260 Call 0x1C17F18
	261 Call 0x1991590

Method: System.Void ClearInteractorHoverInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> deprecatedValidTargets)

Disassembly:
	0x03B6F6B4 LDP X22, X21, [X31 + 0xA0]
	0x03B6F6B8 LDP X24, X23, [X31 + 0x90]
	0x03B6F6BC LDP X26, X25, [X31 + 0x80]
	0x03B6F6C0 LDP X28, X27, [X31 + 0x70]
	0x03B6F6C4 LDP X29, X30, [X31 + 0x60]
	0x03B6F6C8 ADD X31, X31, 0xC0
	0x03B6F6CC RET
	0x03B6F6D0 BL 0x1C16F20
	0x03B6F6D4 BL 0x1C16F20
	0x03B6F6D8 BL 0x1C16F20
	0x03B6F6DC BL 0x1C16F20
	0x03B6F6E0 BL 0x1C16F20
	0x03B6F6E4 BL 0x1C16F20
	0x03B6F6E8 BL 0x1C16F20
	0x03B6F6EC B 0x3B6F71C
	0x03B6F6F0 B 0x3B6F780
	0x03B6F6F4 B 0x3B6F71C
	0x03B6F6F8 B 0x3B6F780
	0x03B6F6FC B 0x3B6F71C
	0x03B6F700 B 0x3B6F71C
	0x03B6F704 B 0x3B6F780
	0x03B6F708 B 0x3B6F780
	0x03B6F70C B 0x3B6F71C
	0x03B6F710 B 0x3B6F71C
	0x03B6F714 B 0x3B6F780
	0x03B6F718 B 0x3B6F780
	0x03B6F71C CMP W1, 0x1
	0x03B6F720 B.NE 0x3B6F750
	0x03B6F724 BL 0x3EB1AD0
	0x03B6F728 LDR X20, [X0]
	0x03B6F72C BL 0x3EB1AE0
	0x03B6F730 ADRP X8, 0x5EC000
	0x03B6F734 LDR X8, [X8 + 0x670]
	0x03B6F738 ADD X0, X31, 0x20
	0x03B6F73C LDR X1, [X8]
	0x03B6F740 BL 0x2BC434C
	0x03B6F744 CBZ X20, 0x3B6F6B0
	0x03B6F748 MOV X0, X20
	0x03B6F74C BL 0x1C16F18
	0x03B6F750 MOV X19, X0
	0x03B6F754 MOV X20, X31
	0x03B6F758 B 0x3B6F760
	0x03B6F75C MOV X19, X0
	0x03B6F760 ADRP X8, 0x5EC000
	0x03B6F764 LDR X8, [X8 + 0x670]
	0x03B6F768 LDR X1, [X8]
	0x03B6F76C ADD X0, X31, 0x20
	0x03B6F770 BL 0x2BC434C
	0x03B6F774 CBZ X20, 0x3B6F7CC
	0x03B6F778 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x874000
	008 Move W8, [X23+2630]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x5EC000
	018 Move X0, [X0+872]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2630], W8
	022 Move X8, [X21]
	023 Move X0, X21
	024 Move X1, X20
	025 Move X2, X22
	026 Move X9, [X8+872]
	027 Move X3, [X8+880]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X8, 0x5EC000
	032 Move X8, [X8+872]
	033 Move X9, [X20]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X9+200]
	039 Add X9, X9, X10
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Move X8, [X21]
	050 Move X0, X21
	051 Move X1, X20
	052 Move X2, X19
	053 Move X4, [X8+1336]
	054 Move X3, [X8+1344]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 CallNoReturn X4

Method: System.Void CancelInteractorHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)

Disassembly:
	0x03B75204 LDRB W8, [X22 + 0xA52]
	0x03B75208 MOV X19, X2
	0x03B7520C MOV X20, X1
	0x03B75210 MOV X21, X0
	0x03B75214 TBNZ X8, 0x0, 0x3B75238
	0x03B75218 ADRP X0, 0x5E6000
	0x03B7521C LDR X0, [X0 + 0x870]
	0x03B75220 BL 0x1C16CF4
	0x03B75224 ADRP X0, 0x5E6000
	0x03B75228 LDR X0, [X0 + 0x878]
	0x03B7522C BL 0x1C16CF4
	0x03B75230 MOVZ W8, 0x1
	0x03B75234 STRB W8, [X22 + 0xA52]
	0x03B75238 STR X31, [X31 + 0x18]
	0x03B7523C STP X31, X31, [X31]
	0x03B75240 LDR X0, [X21 + 0x120]
	0x03B75244 CBZ X0, 0x3B752B0
	0x03B75248 ADRP X8, 0x5E6000
	0x03B7524C LDR X8, [X8 + 0x870]
	0x03B75250 ADRP X22, 0x5E6000
	0x03B75254 ADD X1, X31, 0x18
	0x03B75258 LDR X2, [X8]
	0x03B7525C LDR X22, [X22 + 0x878]
	0x03B75260 BL 0x2EF1058
	0x03B75264 LDR X3, [X31 + 0x18]
	0x03B75268 STP X0, X1, [X31]
	0x03B7526C CBZ X3, 0x3B752B4
	0x03B75270 MOVZ W8, 0x1
	0x03B75274 STP X19, X21, [X3 + 0x18]
	0x03B75278 STR X20, [X3 + 0x10]
	0x03B7527C STRB W8, [X3 + 0x28]
	0x03B75280 MOV X0, X21
	0x03B75284 MOV X1, X20
	0x03B75288 MOV X2, X19
	0x03B7528C BL 0x3B750FC
	0x03B75290 LDR X1, [X22]
	0x03B75294 ADD X0, X31, 0x0
	0x03B75298 BL 0x24A6DD0
	0x03B7529C LDP X20, X19, [X31 + 0x30]
	0x03B752A0 LDP X22, X21, [X31 + 0x20]
	0x03B752A4 LDR X30, [X31 + 0x10]
	0x03B752A8 ADD X31, X31, 0x40
	0x03B752AC RET
	0x03B752B0 BL 0x1C16F20
	0x03B752B4 BL 0x1C16F20
	0x03B752B8 B 0x3B752BC
	0x03B752BC MOV X20, X0
	0x03B752C0 CMP W1, 0x1
	0x03B752C4 B.NE 0x3B752F0
	0x03B752C8 MOV X0, X20
	0x03B752CC BL 0x3EB1AD0
	0x03B752D0 LDR X19, [X0]
	0x03B752D4 BL 0x3EB1AE0
	0x03B752D8 LDR X1, [X22]
	0x03B752DC ADD X0, X31, 0x0
	0x03B752E0 BL 0x24A6DD0
	0x03B752E4 CBZ X19, 0x3B7529C
	0x03B752E8 MOV X0, X19
	0x03B752EC BL 0x1C16F18
	0x03B752F0 MOV X19, X31
	0x03B752F4 B 0x3B752FC
	0x03B752F8 MOV X20, X0
	0x03B752FC LDR X1, [X22]
	0x03B75300 ADD X0, X31, 0x0
	0x03B75304 BL 0x24A6DD0
	0x03B75308 CBNZ X19, 0x3B75314
	0x03B7530C MOV X0, X20
	0x03B75310 BL 0x1D2C690
	0x03B75314 MOV X0, X19
	0x03B75318 BL 0x1C16F18
	0x03B7531C BL 0x1990590
	0x03B75320 SUB X31, X31, 0x40
	0x03B75324 STR X30, [X31 + 0x10]
	0x03B75328 STP X22, X21, [X31 + 0x20]
	0x03B7532C STP X20, X19, [X31 + 0x30]
	0x03B75330 ADRP X22, 0x86D000
	0x03B75334 LDRB W8, [X22 + 0xA54]
	0x03B75338 MOV X19, X2
	0x03B7533C MOV X20, X1
	0x03B75340 MOV X21, X0
	0x03B75344 TBNZ X8, 0x0, 0x3B75368
	0x03B75348 ADRP X0, 0x5E6000
	0x03B7534C LDR X0, [X0 + 0x880]
	0x03B75350 BL 0x1C16CF4
	0x03B75354 ADRP X0, 0x5E6000
	0x03B75358 LDR X0, [X0 + 0x888]
	0x03B7535C BL 0x1C16CF4
	0x03B75360 MOVZ W8, 0x1
	0x03B75364 STRB W8, [X22 + 0xA54]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x86E000
	008 Move W8, [X21+2631]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E6000
	016 Move X0, [X0+800]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E6000
	019 Move X0, [X0+2344]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E6000
	022 Move X0, [X0+2352]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2631], W8
	026 Compare X19, 0
	027 JumpIfEqual {97}
	028 Move X22, 0x5E6000
	029 Move X8, [X19]
	030 Move X22, [X22+800]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 2
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 2
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {97}
	054 Move W8, [X0+24]
	055 Subtract W21, W8, 1
	056 Move X23, 0x5E6000
	057 Move X23, [X23+2352]
	058 Move X8, [X19]
	059 Move X1, [X22]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 2
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 2
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {97}
	082 Move X2, [X23]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X2, X0
	086 Move X0, X20
	087 Move X1, X19
	088 Call XRInteractionManager.HoverCancelInternal, X0, X1, X2
	089 Subtract W21, W21, 1
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Return 
	097 Call 0x1C17F20

Method: System.Void CancelInteractorHoverInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)

Disassembly:
	0x03B72AD4 BL 0x1C16F20
	0x03B72AD8 STP X30, X19, [X31 - 0x10]!
	0x03B72ADC CBZ X1, 0x3B72AF8
	0x03B72AE0 LDR X0, [X0 + 0xA0]
	0x03B72AE4 CBZ X0, 0x3B72B40
	0x03B72AE8 LDR X8, [X0]
	0x03B72AEC LDP X3, X2, [X8 + 0x1C8]
	0x03B72AF0 LDP X30, X19, [X31], #0x10
	0x03B72AF4 BR X3
	0x03B72AF8 ADRP X0, 0x586000
	0x03B72AFC LDR X0, [X0 + 0x528]
	0x03B72B00 BL 0x1C16D08
	0x03B72B04 BL 0x1C16F10
	0x03B72B08 MOV X19, X0
	0x03B72B0C ADRP X0, 0x5A9000
	0x03B72B10 LDR X0, [X0 + 0xA58]
	0x03B72B14 BL 0x1C16D08
	0x03B72B18 MOV X1, X0
	0x03B72B1C MOV X0, X19
	0x03B72B20 MOV X2, X31
	0x03B72B24 BL 0x330E100
	0x03B72B28 ADRP X0, 0x5E9000
	0x03B72B2C LDR X0, [X0 + 0x7F8]
	0x03B72B30 BL 0x1C16D08
	0x03B72B34 MOV X1, X0
	0x03B72B38 MOV X0, X19
	0x03B72B3C BL 0x1C16DEC
	0x03B72B40 BL 0x1C16F20
	0x03B72B44 STP X30, X19, [X31 - 0x10]!
	0x03B72B48 CBZ X1, 0x3B72B64
	0x03B72B4C LDR X0, [X0 + 0x98]
	0x03B72B50 CBZ X0, 0x3B72BAC
	0x03B72B54 LDR X8, [X0]
	0x03B72B58 LDP X3, X2, [X8 + 0x1C8]
	0x03B72B5C LDP X30, X19, [X31], #0x10
	0x03B72B60 BR X3
	0x03B72B64 ADRP X0, 0x586000
	0x03B72B68 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x871000
	006 Move W8, [X21+2632]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5E9000
	014 Move X0, [X0+872]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2632], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x5E9000
	021 Move X8, [X8+872]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20]
	032 Move X3, [X8+888]
	033 Move X2, [X8+896]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Move X8, [X20]
	042 Move X3, [X8+1352]
	043 Move X2, [X8+1360]

Method: System.Void CancelInteractableHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B75454 ADRP X23, 0x86D000
	0x03B75458 LDRB W8, [X23 + 0xA61]
	0x03B7545C MOV X19, X3
	0x03B75460 MOV X20, X2
	0x03B75464 MOV X21, X1
	0x03B75468 MOV X22, X0
	0x03B7546C TBNZ X8, 0x0, 0x3B75490
	0x03B75470 ADRP X0, 0x5E5000
	0x03B75474 LDR X0, [X0 + 0x438]
	0x03B75478 BL 0x1C16CF4
	0x03B7547C ADRP X0, 0x5E5000
	0x03B75480 LDR X0, [X0 + 0x368]
	0x03B75484 BL 0x1C16CF4
	0x03B75488 MOVZ W8, 0x1
	0x03B7548C STRB W8, [X23 + 0xA61]
	0x03B75490 CBZ X21, 0x3B754C8
	0x03B75494 ADRP X8, 0x5E5000
	0x03B75498 LDR X8, [X8 + 0x368]
	0x03B7549C LDR X9, [X21]
	0x03B754A0 LDR X8, [X8]
	0x03B754A4 LDRB W11, [X9 + 0x130]
	0x03B754A8 LDRB W10, [X8 + 0x130]
	0x03B754AC CMP W11, W10
	0x03B754B0 B.CC 0x3B754C8
	0x03B754B4 LDR X9, [X9 + 0xC8]
	0x03B754B8 ADD X9, X9, X10, 0x3, LSL
	0x03B754BC LDUR X9, [X9 - 0x8]
	0x03B754C0 CMP X9, X8
	0x03B754C4 B.EQ 0x3B754F4
	0x03B754C8 LDR X8, [X22]
	0x03B754CC LDR X5, [X8 + 0x468]
	0x03B754D0 LDR X4, [X8 + 0x470]
	0x03B754D4 MOV X0, X22
	0x03B754D8 MOV X1, X21
	0x03B754DC MOV X2, X20
	0x03B754E0 MOV X3, X19
	0x03B754E4 LDP X20, X19, [X31 + 0x20]
	0x03B754E8 LDP X22, X21, [X31 + 0x10]
	0x03B754EC LDP X30, X23, [X31], #0x30
	0x03B754F0 BR X5
	0x03B754F4 CBZ X20, 0x3B754C8
	0x03B754F8 ADRP X8, 0x5E5000
	0x03B754FC LDR X8, [X8 + 0x438]
	0x03B75500 LDR X9, [X20]
	0x03B75504 LDR X8, [X8]
	0x03B75508 LDRB W11, [X9 + 0x130]
	0x03B7550C LDRB W10, [X8 + 0x130]
	0x03B75510 CMP W11, W10
	0x03B75514 B.CC 0x3B754C8
	0x03B75518 LDR X9, [X9 + 0xC8]
	0x03B7551C ADD X9, X9, X10, 0x3, LSL
	0x03B75520 LDUR X9, [X9 - 0x8]
	0x03B75524 CMP X9, X8
	0x03B75528 B.NE 0x3B754C8
	0x03B7552C LDR X8, [X22]
	0x03B75530 LDR X5, [X8 + 0x5E8]
	0x03B75534 LDR X4, [X8 + 0x5F0]
	0x03B75538 B 0x3B754D4
	0x03B7553C STR X30, [X31 - 0x30]!
	0x03B75540 STP X22, X21, [X31 + 0x10]
	0x03B75544 STP X20, X19, [X31 + 0x20]
	0x03B75548 ADRP X22, 0x86D000
	0x03B7554C LDRB W8, [X22 + 0xA55]
	0x03B75550 MOV X19, X2
	0x03B75554 MOV X20, X1
	0x03B75558 MOV X21, X0
	0x03B7555C TBNZ X8, 0x0, 0x3B75580
	0x03B75560 ADRP X0, 0x5E5000
	0x03B75564 LDR X0, [X0 + 0x438]
	0x03B75568 BL 0x1C16CF4
	0x03B7556C ADRP X0, 0x5E5000
	0x03B75570 LDR X0, [X0 + 0x368]
	0x03B75574 BL 0x1C16CF4
	0x03B75578 MOVZ W8, 0x1
	0x03B7557C STRB W8, [X22 + 0xA55]
	0x03B75580 CBZ X20, 0x3B755B8
	0x03B75584 ADRP X8, 0x5E5000
	0x03B75588 LDR X8, [X8 + 0x368]
	0x03B7558C LDR X9, [X20]
	0x03B75590 LDR X8, [X8]
	0x03B75594 LDRB W11, [X9 + 0x130]
	0x03B75598 LDRB W10, [X8 + 0x130]
	0x03B7559C CMP W11, W10
	0x03B755A0 B.CC 0x3B755B8
	0x03B755A4 LDR X9, [X9 + 0xC8]
	0x03B755A8 ADD X9, X9, X10, 0x3, LSL
	0x03B755AC LDUR X9, [X9 - 0x8]
	0x03B755B0 CMP X9, X8
	0x03B755B4 B.EQ 0x3B755E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x86E000
	008 Move W8, [X21+2633]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E6000
	016 Move X0, [X0+328]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E6000
	019 Move X0, [X0+336]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E6000
	022 Move X0, [X0+344]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2633], W8
	026 Compare X19, 0
	027 JumpIfEqual {97}
	028 Move X22, 0x5E6000
	029 Move X8, [X19]
	030 Move X22, [X22+328]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 4
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 4
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {97}
	054 Move W8, [X0+24]
	055 Subtract W21, W8, 1
	056 Move X23, 0x5E6000
	057 Move X23, [X23+344]
	058 Move X8, [X19]
	059 Move X1, [X22]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 4
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 4
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {97}
	082 Move X2, [X23]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X1, X0
	086 Move X0, X20
	087 Move X2, X19
	088 Call XRInteractionManager.HoverCancelInternal, X0, X1, X2
	089 Subtract W21, W21, 1
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Return 
	097 Call 0x1C17F20

Method: System.Void CancelInteractableHoverInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B73698 BL 0x301C194
	0x03B7369C LDR X0, [X20 + 0xD0]
	0x03B736A0 CBZ X0, 0x3B73824
	0x03B736A4 ADRP X8, 0x5E8000
	0x03B736A8 LDR X8, [X8 + 0x830]
	0x03B736AC LDR X1, [X8]
	0x03B736B0 BL 0x2DBE450
	0x03B736B4 CBZ X21, 0x3B73824
	0x03B736B8 LDR W8, [X21 + 0x18]
	0x03B736BC CMP W8, 0x1
	0x03B736C0 B.LT 0x3B73738
	0x03B736C4 ADRP X8, 0x5E8000
	0x03B736C8 LDR X8, [X8 + 0xF0]
	0x03B736CC MOV X0, X21
	0x03B736D0 LDR X1, [X8]
	0x03B736D4 ADD X8, X31, 0x8
	0x03B736D8 BL 0x301CB58
	0x03B736DC LDUR V0, [X31 + 0x8]
	0x03B736E0 LDR X8, [X31 + 0x18]
	0x03B736E4 ADRP X21, 0x5E8000
	0x03B736E8 LDR X21, [X21 + 0xE0]
	0x03B736EC STR V0, [X31 + 0x2]
	0x03B736F0 STR X8, [X31 + 0x30]
	0x03B736F4 ADRP X22, 0x5E8000
	0x03B736F8 LDR X22, [X22 + 0x828]
	0x03B736FC LDR X1, [X21]
	0x03B73700 ADD X0, X31, 0x20
	0x03B73704 BL 0x2BC4350
	0x03B73708 TBZ X0, 0x0, 0x3B73724
	0x03B7370C LDR X0, [X20 + 0xD0]
	0x03B73710 CBZ X0, 0x3B73840
	0x03B73714 LDR X1, [X31 + 0x30]
	0x03B73718 LDR X2, [X22]
	0x03B7371C BL 0x2DBEF30
	0x03B73720 B 0x3B736FC
	0x03B73724 ADRP X8, 0x5E8000
	0x03B73728 LDR X8, [X8 + 0xD8]
	0x03B7372C ADD X0, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x870000
	006 Move W8, [X21+2634]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5E8000
	014 Move X0, [X0+1080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2634], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x5E8000
	021 Move X8, [X8+1080]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20]
	032 Move X3, [X8+904]
	033 Move X2, [X8+912]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Move X8, [X20]
	042 Move X3, [X8+1368]
	043 Move X2, [X8+1376]

Method: System.Void FocusEnter(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B755B8 LDR X8, [X21]
	0x03B755BC LDR X4, [X8 + 0x3F8]
	0x03B755C0 LDR X3, [X8 + 0x400]
	0x03B755C4 MOV X0, X21
	0x03B755C8 MOV X1, X20
	0x03B755CC MOV X2, X19
	0x03B755D0 LDP X20, X19, [X31 + 0x20]
	0x03B755D4 LDP X22, X21, [X31 + 0x10]
	0x03B755D8 LDR X30, [X31], #0x30
	0x03B755DC BR X4
	0x03B755E0 CBZ X19, 0x3B755B8
	0x03B755E4 ADRP X8, 0x5E5000
	0x03B755E8 LDR X8, [X8 + 0x438]
	0x03B755EC LDR X9, [X19]
	0x03B755F0 LDR X8, [X8]
	0x03B755F4 LDRB W11, [X9 + 0x130]
	0x03B755F8 LDRB W10, [X8 + 0x130]
	0x03B755FC CMP W11, W10
	0x03B75600 B.CC 0x3B755B8
	0x03B75604 LDR X9, [X9 + 0xC8]
	0x03B75608 ADD X9, X9, X10, 0x3, LSL
	0x03B7560C LDUR X9, [X9 - 0x8]
	0x03B75610 CMP X9, X8
	0x03B75614 B.NE 0x3B755B8
	0x03B75618 LDR X8, [X21]
	0x03B7561C LDR X4, [X8 + 0x598]
	0x03B75620 LDR X3, [X8 + 0x5A0]
	0x03B75624 B 0x3B755C4
	0x03B75628 SUB X31, X31, 0x40
	0x03B7562C STR X30, [X31 + 0x10]
	0x03B75630 STP X22, X21, [X31 + 0x20]
	0x03B75634 STP X20, X19, [X31 + 0x30]
	0x03B75638 ADRP X22, 0x86D000
	0x03B7563C LDRB W8, [X22 + 0xA56]
	0x03B75640 MOV X19, X2
	0x03B75644 MOV X20, X1
	0x03B75648 MOV X21, X0
	0x03B7564C TBNZ X8, 0x0, 0x3B75670
	0x03B75650 ADRP X0, 0x5E6000
	0x03B75654 LDR X0, [X0 + 0x890]
	0x03B75658 BL 0x1C16CF4
	0x03B7565C ADRP X0, 0x5E6000
	0x03B75660 LDR X0, [X0 + 0x898]
	0x03B75664 BL 0x1C16CF4
	0x03B75668 MOVZ W8, 0x1
	0x03B7566C STRB W8, [X22 + 0xA56]
	0x03B75670 STR X31, [X31 + 0x18]
	0x03B75674 STP X31, X31, [X31]
	0x03B75678 LDR X0, [X21 + 0x130]
	0x03B7567C CBZ X0, 0x3B756E4
	0x03B75680 ADRP X8, 0x5E6000
	0x03B75684 LDR X8, [X8 + 0x890]
	0x03B75688 ADRP X22, 0x5E6000
	0x03B7568C ADD X1, X31, 0x18
	0x03B75690 LDR X2, [X8]
	0x03B75694 LDR X22, [X22 + 0x898]
	0x03B75698 BL 0x2EF1058
	0x03B7569C LDR X3, [X31 + 0x18]
	0x03B756A0 STP X0, X1, [X31]
	0x03B756A4 CBZ X3, 0x3B756E8
	0x03B756A8 STP X19, X21, [X3 + 0x18]
	0x03B756AC STR X20, [X3 + 0x10]
	0x03B756B0 STRB W31, [X3 + 0x28]
	0x03B756B4 MOV X0, X21
	0x03B756B8 MOV X1, X20
	0x03B756BC MOV X2, X19
	0x03B756C0 BL 0x3B75754
	0x03B756C4 LDR X1, [X22]
	0x03B756C8 ADD X0, X31, 0x0
	0x03B756CC BL 0x24A6DD0
	0x03B756D0 LDP X20, X19, [X31 + 0x30]
	0x03B756D4 LDP X22, X21, [X31 + 0x20]
	0x03B756D8 LDR X30, [X31 + 0x10]
	0x03B756DC ADD X31, X31, 0x40
	0x03B756E0 RET
	0x03B756E4 BL 0x1C16F20
	0x03B756E8 BL 0x1C16F20
	0x03B756EC B 0x3B756F0
	0x03B756F0 MOV X20, X0
	0x03B756F4 CMP W1, 0x1
	0x03B756F8 B.NE 0x3B75724
	0x03B756FC MOV X0, X20
	0x03B75700 BL 0x3EB1AD0
	0x03B75704 LDR X19, [X0]
	0x03B75708 BL 0x3EB1AE0
	0x03B7570C LDR X1, [X22]
	0x03B75710 ADD X0, X31, 0x0
	0x03B75714 BL 0x24A6DD0
	0x03B75718 CBZ X19, 0x3B756D0
	0x03B7571C MOV X0, X19
	0x03B75720 BL 0x1C16F18
	0x03B75724 MOV X19, X31
	0x03B75728 B 0x3B75730
	0x03B7572C MOV X20, X0
	0x03B75730 LDR X1, [X22]
	0x03B75734 ADD X0, X31, 0x0
	0x03B75738 BL 0x24A6DD0
	0x03B7573C CBNZ X19, 0x3B75748
	0x03B75740 MOV X0, X20
	0x03B75744 BL 0x1D2C690
	0x03B75748 MOV X0, X19
	0x03B7574C BL 0x1C16F18
	0x03B75750 BL 0x1990590
	0x03B75754 STP X30, X23, [X31 - 0x30]!
	0x03B75758 STP X22, X21, [X31 + 0x10]
	0x03B7575C STP X20, X19, [X31 + 0x20]
	0x03B75760 ADRP X23, 0x86D000
	0x03B75764 LDRB W8, [X23 + 0xA63]
	0x03B75768 MOV X19, X3
	0x03B7576C MOV X20, X2
	0x03B75770 MOV X21, X1
	0x03B75774 MOV X22, X0
	0x03B75778 TBNZ X8, 0x0, 0x3B7579C
	0x03B7577C ADRP X0, 0x5E5000
	0x03B75780 LDR X0, [X0 + 0x438]
	0x03B75784 BL 0x1C16CF4
	0x03B75788 ADRP X0, 0x5E5000
	0x03B7578C LDR X0, [X0 + 0x368]
	0x03B75790 BL 0x1C16CF4
	0x03B75794 MOVZ W8, 0x1
	0x03B75798 STRB W8, [X23 + 0xA63]
	0x03B7579C CBZ X21, 0x3B757D4
	0x03B757A0 ADRP X8, 0x5E5000
	0x03B757A4 LDR X8, [X8 + 0x368]
	0x03B757A8 LDR X9, [X21]
	0x03B757AC LDR X8, [X8]
	0x03B757B0 LDRB W11, [X9 + 0x130]
	0x03B757B4 LDRB W10, [X8 + 0x130]
	0x03B757B8 CMP W11, W10
	0x03B757BC B.CC 0x3B757D4
	0x03B757C0 LDR X9, [X9 + 0xC8]
	0x03B757C4 ADD X9, X9, X10, 0x3, LSL
	0x03B757C8 LDUR X9, [X9 - 0x8]
	0x03B757CC CMP X9, X8
	0x03B757D0 B.EQ 0x3B75800
	0x03B757D4 LDR X8, [X22]
	0x03B757D8 LDR X5, [X8 + 0x478]
	0x03B757DC LDR X4, [X8 + 0x480]
	0x03B757E0 MOV X0, X22
	0x03B757E4 MOV X1, X21
	0x03B757E8 MOV X2, X20
	0x03B757EC MOV X3, X19
	0x03B757F0 LDP X20, X19, [X31 + 0x20]
	0x03B757F4 LDP X22, X21, [X31 + 0x10]
	0x03B757F8 LDP X30, X23, [X31], #0x30
	0x03B757FC BR X5
	0x03B75800 CBZ X20, 0x3B757D4
	0x03B75804 ADRP X8, 0x5E5000
	0x03B75808 LDR X8, [X8 + 0x438]
	0x03B7580C LDR X9, [X20]
	0x03B75810 LDR X8, [X8]
	0x03B75814 LDRB W11, [X9 + 0x130]
	0x03B75818 LDRB W10, [X8 + 0x130]
	0x03B7581C CMP W11, W10
	0x03B75820 B.CC 0x3B757D4
	0x03B75824 LDR X9, [X9 + 0xC8]
	0x03B75828 ADD X9, X9, X10, 0x3, LSL
	0x03B7582C LDUR X9, [X9 - 0x8]
	0x03B75830 CMP X9, X8
	0x03B75834 B.NE 0x3B757D4
	0x03B75838 LDR X8, [X22]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x86E000
	009 Move X23, 0x5E6000
	010 Move W8, [X22+2635]
	011 Move X23, [X23+2336]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x5E6000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move X0, 0x5E6000
	023 Move X0, [X0+2336]
	024 Call 0x1C17CF4
	025 Move X0, 0x5E7000
	026 Move X0, [X0+2112]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E7000
	029 Move X0, [X0+2120]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2635], W8
	033 Move X1, [X23]
	034 Move X0, X21
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move [X31+8], X31
	038 Call 0x1C17E00
	039 Compare X0, 0
	040 JumpIfEqual {147}
	041 Move X8, [X0]
	042 Move X1, [X23]
	043 Move X22, X0
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X22
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X22
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {147}
	065 Move X8, [X20]
	066 Move X22, X0
	067 Move X0, X20
	068 Move X1, X21
	069 Move X9, [X8+584]
	070 Move X3, [X8+592]
	071 Move X2, X19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {147}
	077 Compare X19, 0
	078 JumpIfEqual {155}
	079 Move X10, 0x5E6000
	080 Move X8, [X19]
	081 Move X10, [X10+304]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X10]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 6
	093 Move X0, X19
	094 Call 0x1C5D788
	095 Move W9, [X10]
	096 Add W9, W9, 6
	097 Add X8, X8, W9
	098 Add X0, X8, 312
	099 Move X8, [X0]
	100 Move X1, [X0+8]
	101 Move X0, X19
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {118}
	107 Move X8, [X20]
	108 Move X0, X20
	109 Move X1, X22
	110 Move X2, X19
	111 Move X9, [X8+1192]
	112 Move X3, [X8+1200]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {147}
	118 Move X0, [X20+264]
	119 Compare X0, 0
	120 JumpIfEqual {155}
	121 Move X8, 0x5E7000
	122 Move X8, [X8+2112]
	123 Add X1, X31, 24
	124 Move X2, [X8]
	125 Call 0x2EF2058, X0, X1
	126 Move X3, [X31+24]
	127 Move [X31+8], X0
	128 Move [X31+16], X1
	129 Compare X3, 0
	130 JumpIfEqual {156}
	131 Move [X3+16], X21
	132 Move [X3+24], X19
	133 Move [X3+32], X22
	134 Move [X3+40], X20
	135 Move X8, [X20]
	136 Move X9, [X8+1064]
	137 Move X4, [X8+1072]
	138 Move X0, X20
	139 Move X1, X22
	140 Move X2, X19
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X8, 0x5E7000
	143 Move X8, [X8+2120]
	144 Add X0, X31, 8
	145 Move X1, [X8]
	146 Call 0x24A7DD0, X0
	147 Move X20, [X31+64]
	148 Move X19, [X31+72]
	149 Move X22, [X31+48]
	150 Move X21, [X31+56]
	151 Move X30, [X31+32]
	152 Move X23, [X31+40]
	153 Add X31, X31, 80
	154 Return 
	155 Call 0x1C17F20
	156 Call 0x1C17F20
	157 Move X20, X0
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, X20
	160 Call 0x3EB2AD0
	161 Move X19, [X0]
	162 Call 0x3EB2AE0
	163 Move X8, 0x5E7000
	164 Move X8, [X8+2120]
	165 Add X0, X31, 8
	166 Move X1, [X8]
	167 Call 0x24A7DD0, X0
	168 Compare X19, 0
	169 JumpIfEqual {147}
	170 Move X0, X19
	171 Call 0x1C17F18
	172 Move X19, X31
	173 Move X20, X0
	174 Move X8, 0x5E7000
	175 Move X8, [X8+2120]
	176 Move X1, [X8]
	177 Add X0, X31, 8
	178 Call 0x24A7DD0, X0
	179 Compare X19, 0
	180 JumpIfNotEqual {183}
	181 Move X0, X20
	182 Call 0x1D2D690
	183 Move X0, X19
	184 Call 0x1C17F18
	185 Call 0x1991590

Method: System.Void FocusExit(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B7584C STR X30, [X31 + 0x10]
	0x03B75850 STP X22, X21, [X31 + 0x20]
	0x03B75854 STP X20, X19, [X31 + 0x30]
	0x03B75858 ADRP X22, 0x86D000
	0x03B7585C LDRB W8, [X22 + 0xA58]
	0x03B75860 MOV X19, X2
	0x03B75864 MOV X20, X1
	0x03B75868 MOV X21, X0
	0x03B7586C TBNZ X8, 0x0, 0x3B75890
	0x03B75870 ADRP X0, 0x5E6000
	0x03B75874 LDR X0, [X0 + 0x890]
	0x03B75878 BL 0x1C16CF4
	0x03B7587C ADRP X0, 0x5E6000
	0x03B75880 LDR X0, [X0 + 0x898]
	0x03B75884 BL 0x1C16CF4
	0x03B75888 MOVZ W8, 0x1
	0x03B7588C STRB W8, [X22 + 0xA58]
	0x03B75890 STR X31, [X31 + 0x18]
	0x03B75894 STP X31, X31, [X31]
	0x03B75898 LDR X0, [X21 + 0x130]
	0x03B7589C CBZ X0, 0x3B75908
	0x03B758A0 ADRP X8, 0x5E6000
	0x03B758A4 LDR X8, [X8 + 0x890]
	0x03B758A8 ADRP X22, 0x5E6000
	0x03B758AC ADD X1, X31, 0x18
	0x03B758B0 LDR X2, [X8]
	0x03B758B4 LDR X22, [X22 + 0x898]
	0x03B758B8 BL 0x2EF1058
	0x03B758BC LDR X3, [X31 + 0x18]
	0x03B758C0 STP X0, X1, [X31]
	0x03B758C4 CBZ X3, 0x3B7590C
	0x03B758C8 MOVZ W8, 0x1
	0x03B758CC STP X19, X21, [X3 + 0x18]
	0x03B758D0 STR X20, [X3 + 0x10]
	0x03B758D4 STRB W8, [X3 + 0x28]
	0x03B758D8 MOV X0, X21
	0x03B758DC MOV X1, X20
	0x03B758E0 MOV X2, X19
	0x03B758E4 BL 0x3B75754
	0x03B758E8 LDR X1, [X22]
	0x03B758EC ADD X0, X31, 0x0
	0x03B758F0 BL 0x24A6DD0
	0x03B758F4 LDP X20, X19, [X31 + 0x30]
	0x03B758F8 LDP X22, X21, [X31 + 0x20]
	0x03B758FC LDR X30, [X31 + 0x10]
	0x03B75900 ADD X31, X31, 0x40
	0x03B75904 RET
	0x03B75908 BL 0x1C16F20
	0x03B7590C BL 0x1C16F20
	0x03B75910 B 0x3B75914
	0x03B75914 MOV X20, X0
	0x03B75918 CMP W1, 0x1
	0x03B7591C B.NE 0x3B75948
	0x03B75920 MOV X0, X20
	0x03B75924 BL 0x3EB1AD0
	0x03B75928 LDR X19, [X0]
	0x03B7592C BL 0x3EB1AE0
	0x03B75930 LDR X1, [X22]
	0x03B75934 ADD X0, X31, 0x0
	0x03B75938 BL 0x24A6DD0
	0x03B7593C CBZ X19, 0x3B758F4
	0x03B75940 MOV X0, X19
	0x03B75944 BL 0x1C16F18
	0x03B75948 MOV X19, X31
	0x03B7594C B 0x3B75954
	0x03B75950 MOV X20, X0
	0x03B75954 LDR X1, [X22]
	0x03B75958 ADD X0, X31, 0x0
	0x03B7595C BL 0x24A6DD0
	0x03B75960 CBNZ X19, 0x3B7596C
	0x03B75964 MOV X0, X20
	0x03B75968 BL 0x1D2C690
	0x03B7596C MOV X0, X19
	0x03B75970 BL 0x1C16F18
	0x03B75974 BL 0x1990590
	0x03B75978 STR X30, [X31 - 0x40]!
	0x03B7597C STP X24, X23, [X31 + 0x10]
	0x03B75980 STP X22, X21, [X31 + 0x20]
	0x03B75984 STP X20, X19, [X31 + 0x30]
	0x03B75988 ADRP X22, 0x86D000
	0x03B7598C LDRB W8, [X22 + 0xA5A]
	0x03B75990 MOV X19, X3
	0x03B75994 MOV X20, X2
	0x03B75998 MOV X23, X1
	0x03B7599C MOV X21, X0
	0x03B759A0 TBNZ X8, 0x0, 0x3B759D0
	0x03B759A4 ADRP X0, 0x5E5000
	0x03B759A8 LDR X0, [X0 + 0x130]
	0x03B759AC BL 0x1C16CF4
	0x03B759B0 ADRP X0, 0x5E5000
	0x03B759B4 LDR X0, [X0 + 0x938]
	0x03B759B8 BL 0x1C16CF4
	0x03B759BC ADRP X0, 0x5E5000
	0x03B759C0 LDR X0, [X0 + 0xE20]
	0x03B759C4 BL 0x1C16CF4
	0x03B759C8 MOVZ W8, 0x1
	0x03B759CC STRB W8, [X22 + 0xA5A]
	0x03B759D0 CBZ X19, 0x3B75BC0
	0x03B759D4 ADRP X22, 0x5E5000
	0x03B759D8 LDR X22, [X22 + 0xE20]
	0x03B759DC STR X21, [X19 + 0x28]
	0x03B759E0 LDR X0, [X22]
	0x03B759E4 LDR W8, [X0 + 0xE0]
	0x03B759E8 CBNZ W8, 0x3B759F4
	0x03B759EC BL 0x1C16DFC
	0x03B759F0 LDR X0, [X22]
	0x03B759F4 LDR X8, [X0 + 0xB8]
	0x03B759F8 MOV X1, X31
	0x03B759FC MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x86E000
	009 Move W8, [X22+2636]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x5E6000
	018 Move X0, [X0+2360]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E7000
	021 Move X0, [X0+2128]
	022 Call 0x1C17CF4
	023 Move X0, 0x5E7000
	024 Move X0, [X0+2136]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2636], W8
	028 Move [X31+16], X31
	029 Move [X31+24], X31
	030 Move [X31+8], X31
	031 Compare X20, 0
	032 JumpIfEqual {97}
	033 Move X10, 0x5E6000
	034 Move X8, [X20]
	035 Move X10, [X10+2360]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 6
	047 Move X0, X20
	048 Call 0x1C5D788
	049 Move W9, [X10]
	050 Add W9, W9, 6
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X20
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X21+272]
	058 Compare X8, 0
	059 JumpIfEqual {97}
	060 Move X9, 0x5E7000
	061 Move X9, [X9+2128]
	062 Move X23, 0x5E7000
	063 Move X22, X0
	064 Add X1, X31, 24
	065 Move X2, [X9]
	066 Move X23, [X23+2136]
	067 Move X0, X8
	068 Call 0x2EF2058, X0, X1
	069 Move X3, [X31+24]
	070 Move [X31+8], X0
	071 Move [X31+16], X1
	072 Compare X3, 0
	073 JumpIfEqual {98}
	074 Move [X3+16], X22
	075 Move [X3+24], X19
	076 Move [X3+32], X20
	077 Move [X3+40], X21
	078 Move [X3+48], W31
	079 Move X8, [X21]
	080 Move X9, [X8+1080]
	081 Move X4, [X8+1088]
	082 Move X0, X21
	083 Move X1, X20
	084 Move X2, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X1, [X23]
	087 Add X0, X31, 8
	088 Call 0x24A7DD0, X0
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X30, [X31+32]
	094 Move X23, [X31+40]
	095 Add X31, X31, 80
	096 Return 
	097 Call 0x1C17F20
	098 Call 0x1C17F20
	099 Move X20, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X20
	102 Call 0x3EB2AD0
	103 Move X19, [X0]
	104 Call 0x3EB2AE0
	105 Move X1, [X23]
	106 Add X0, X31, 8
	107 Call 0x24A7DD0, X0
	108 Compare X19, 0
	109 JumpIfEqual {89}
	110 Move X0, X19
	111 Call 0x1C17F18
	112 Move X19, X31
	113 Move X20, X0
	114 Move X1, [X23]
	115 Add X0, X31, 8
	116 Call 0x24A7DD0, X0
	117 Compare X19, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X20
	120 Call 0x1D2D690
	121 Move X0, X19
	122 Call 0x1C17F18
	123 Call 0x1991590

Method: System.Void FocusExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B74318 ADD X8, X8, W9, 0x4, SXTW
	0x03B7431C ADD X0, X8, 0x138
	0x03B74320 LDP X8, X1, [X0]
	0x03B74324 MOV X0, X19

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+936]
	003 Move X3, [X8+944]
	004 CallNoReturn X4

Method: System.Void FocusCancel(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B75A10 MOV X0, X22
	0x03B75A14 MOV X1, X31
	0x03B75A18 BL 0x3BFE970
	0x03B75A1C CBZ X23, 0x3B75BC4
	0x03B75A20 ADRP X10, 0x5E5000
	0x03B75A24 LDR X8, [X23]
	0x03B75A28 LDR X10, [X10 + 0x938]
	0x03B75A2C LDRH W9, [X8 + 0x12E]
	0x03B75A30 LDR X1, [X10]
	0x03B75A34 CBZ X9, 0x3B75A58
	0x03B75A38 LDR X10, [X8 + 0xB0]
	0x03B75A3C ADD X10, X10, 0x8
	0x03B75A40 LDUR X11, [X10 - 0x8]
	0x03B75A44 CMP X11, X1
	0x03B75A48 B.EQ 0x3B75A68
	0x03B75A4C SUBS X9, X9, 0x1
	0x03B75A50 ADD X10, X10, 0x10
	0x03B75A54 B.NE 0x3B75A40
	0x03B75A58 MOVZ W2, 0x16
	0x03B75A5C MOV X0, X23
	0x03B75A60 BL 0x1C5C788
	0x03B75A64 B 0x3B75A78
	0x03B75A68 LDR W9, [X10]
	0x03B75A6C ADD W9, W9, 0x16
	0x03B75A70 ADD X8, X8, W9, 0x4, SXTW
	0x03B75A74 ADD X0, X8, 0x138
	0x03B75A78 LDP X8, X2, [X0]
	0x03B75A7C MOV X0, X23
	0x03B75A80 MOV X1, X19
	0x03B75A84 BLR X8
	0x03B75A88 CBZ X20, 0x3B75BD0
	0x03B75A8C ADRP X23, 0x5E5000
	0x03B75A90 LDR X8, [X20]
	0x03B75A94 LDR X23, [X23 + 0x130]
	0x03B75A98 LDRH W9, [X8 + 0x12E]
	0x03B75A9C LDR X1, [X23]
	0x03B75AA0 CBZ X9, 0x3B75AC4
	0x03B75AA4 LDR X10, [X8 + 0xB0]
	0x03B75AA8 ADD X10, X10, 0x8
	0x03B75AAC LDUR X11, [X10 - 0x8]
	0x03B75AB0 CMP X11, X1
	0x03B75AB4 B.EQ 0x3B75AD4
	0x03B75AB8 SUBS X9, X9, 0x1
	0x03B75ABC ADD X10, X10, 0x10
	0x03B75AC0 B.NE 0x3B75AAC
	0x03B75AC4 MOVZ W2, 0x9
	0x03B75AC8 MOV X0, X20
	0x03B75ACC BL 0x1C5C788
	0x03B75AD0 B 0x3B75AE4
	0x03B75AD4 LDR W9, [X10]
	0x03B75AD8 ADD W9, W9, 0x9
	0x03B75ADC ADD X8, X8, W9, 0x4, SXTW
	0x03B75AE0 ADD X0, X8, 0x138
	0x03B75AE4 LDP X8, X2, [X0]
	0x03B75AE8 MOV X0, X20
	0x03B75AEC MOV X1, X19
	0x03B75AF0 BLR X8
	0x03B75AF4 LDR X8, [X20]
	0x03B75AF8 LDR X1, [X23]
	0x03B75AFC LDRH W9, [X8 + 0x12E]
	0x03B75B00 CBZ X9, 0x3B75B24
	0x03B75B04 LDR X10, [X8 + 0xB0]
	0x03B75B08 ADD X10, X10, 0x8
	0x03B75B0C LDUR X11, [X10 - 0x8]
	0x03B75B10 CMP X11, X1
	0x03B75B14 B.EQ 0x3B75B34
	0x03B75B18 SUBS X9, X9, 0x1
	0x03B75B1C ADD X10, X10, 0x10
	0x03B75B20 B.NE 0x3B75B0C
	0x03B75B24 MOVZ W2, 0xA
	0x03B75B28 MOV X0, X20
	0x03B75B2C BL 0x1C5C788
	0x03B75B30 B 0x3B75B44
	0x03B75B34 LDR W9, [X10]
	0x03B75B38 ADD W9, W9, 0xA
	0x03B75B3C ADD X8, X8, W9, 0x4, SXTW
	0x03B75B40 ADD X0, X8, 0x138
	0x03B75B44 LDP X8, X2, [X0]
	0x03B75B48 MOV X0, X20
	0x03B75B4C MOV X1, X19
	0x03B75B50 BLR X8
	0x03B75B54 MOV X23, X31
	0x03B75B58 MOV X0, X22
	0x03B75B5C MOV X1, X31
	0x03B75B60 MOV X2, X31
	0x03B75B64 BL 0x33C5D2C
	0x03B75B68 TBZ X0, 0x0, 0x3B75B78
	0x03B75B6C MOV X0, X22
	0x03B75B70 MOV X1, X31
	0x03B75B74 BL 0x3BFEA0C
	0x03B75B78 CBNZ X23, 0x3B75BC8
	0x03B75B7C LDR X8, [X21 + 0x50]
	0x03B75B80 STR X20, [X21 + 0x80]
	0x03B75B84 CBZ X8, 0x3B75BAC
	0x03B75B88 LDR X3, [X8 + 0x18]
	0x03B75B8C LDR X0, [X8 + 0x40]
	0x03B75B90 LDR X2, [X8 + 0x28]
	0x03B75B94 MOV X1, X19
	0x03B75B98 LDP X20, X19, [X31 + 0x30]
	0x03B75B9C LDP X22, X21, [X31 + 0x20]
	0x03B75BA0 LDP X24, X23, [X31 + 0x10]
	0x03B75BA4 LDR X30, [X31], #0x40
	0x03B75BA8 BR X3
	0x03B75BAC LDP X20, X19, [X31 + 0x30]
	0x03B75BB0 LDP X22, X21, [X31 + 0x20]
	0x03B75BB4 LDP X24, X23, [X31 + 0x10]
	0x03B75BB8 LDR X30, [X31], #0x40
	0x03B75BBC RET
	0x03B75BC0 BL 0x1C16F20
	0x03B75BC4 BL 0x1C16F20
	0x03B75BC8 MOV X0, X23
	0x03B75BCC BL 0x1C16F18
	0x03B75BD0 BL 0x1C16F20
	0x03B75BD4 B 0x3B75BDC
	0x03B75BD8 B 0x3B75BDC
	0x03B75BDC MOV X24, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x86E000
	009 Move W8, [X22+2637]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x5E6000
	018 Move X0, [X0+2360]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E7000
	021 Move X0, [X0+2128]
	022 Call 0x1C17CF4
	023 Move X0, 0x5E7000
	024 Move X0, [X0+2136]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2637], W8
	028 Move [X31+16], X31
	029 Move [X31+24], X31
	030 Move [X31+8], X31
	031 Move X0, [X21+272]
	032 Compare X0, 0
	033 JumpIfEqual {99}
	034 Move X8, 0x5E7000
	035 Move X8, [X8+2128]
	036 Move X22, 0x5E7000
	037 Add X1, X31, 24
	038 Move X2, [X8]
	039 Move X22, [X22+2136]
	040 Call 0x2EF2058, X0, X1
	041 Move X23, [X31+24]
	042 Move [X31+8], X0
	043 Move [X31+16], X1
	044 Compare X23, 0
	045 JumpIfEqual {100}
	046 Move [X23+40], X21
	047 Compare X20, 0
	048 JumpIfEqual {101}
	049 Move X10, 0x5E6000
	050 Move X8, [X20]
	051 Move X10, [X10+2360]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 6
	063 Move X0, X20
	064 Call 0x1C5D788
	065 Move W9, [X10]
	066 Add W9, W9, 6
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move [X23+16], X0
	074 Move X3, [X31+24]
	075 Compare X3, 0
	076 JumpIfEqual {102}
	077 Move W8, 1
	078 Move [X3+24], X19
	079 Move [X3+32], X20
	080 Move [X3+48], W8
	081 Move X8, [X21]
	082 Move X9, [X8+1080]
	083 Move X4, [X8+1088]
	084 Move X0, X21
	085 Move X1, X20
	086 Move X2, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X1, [X22]
	089 Add X0, X31, 8
	090 Call 0x24A7DD0, X0
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X30, [X31+32]
	096 Move X23, [X31+40]
	097 Add X31, X31, 80
	098 Return 
	099 Call 0x1C17F20
	100 Call 0x1C17F20
	101 Call 0x1C17F20
	102 Call 0x1C17F20
	103 Move X19, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X19
	106 Call 0x3EB2AD0
	107 Move X20, [X0]
	108 Call 0x3EB2AE0
	109 Move X1, [X22]
	110 Add X0, X31, 8
	111 Call 0x24A7DD0, X0
	112 Compare X20, 0
	113 JumpIfEqual {91}
	114 Move X0, X20
	115 Call 0x1C17F18
	116 Move X20, X31
	117 Move X19, X0
	118 Move X1, [X22]
	119 Add X0, X31, 8
	120 Call 0x24A7DD0, X0
	121 Compare X20, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X19
	124 Call 0x1D2D690
	125 Move X0, X20
	126 Call 0x1C17F18
	127 Call 0x1991590

Method: System.Void FocusCancelInternal(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B74328 BLR X8
	0x03B7432C CBZ X0, 0x3B74364
	0x03B74330 LDR X2, [X23]
	0x03B74334 MOV W1, W21

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+952]
	003 Move X3, [X8+960]
	004 CallNoReturn X4

Method: System.Void SelectEnter(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B75BE0 CMP W1, 0x1
	0x03B75BE4 B.NE 0x3B75BFC
	0x03B75BE8 MOV X0, X24
	0x03B75BEC BL 0x3EB1AD0
	0x03B75BF0 LDR X23, [X0]
	0x03B75BF4 BL 0x3EB1AE0
	0x03B75BF8 B 0x3B75B58
	0x03B75BFC MOV X23, X31
	0x03B75C00 B 0x3B75C08
	0x03B75C04 MOV X24, X0
	0x03B75C08 MOV X0, X22
	0x03B75C0C MOV X1, X31
	0x03B75C10 MOV X2, X31
	0x03B75C14 BL 0x33C5D2C
	0x03B75C18 TBZ X0, 0x0, 0x3B75C28
	0x03B75C1C MOV X0, X22
	0x03B75C20 MOV X1, X31
	0x03B75C24 BL 0x3BFEA0C
	0x03B75C28 CBNZ X23, 0x3B75C34
	0x03B75C2C MOV X0, X24
	0x03B75C30 BL 0x1D2C690
	0x03B75C34 MOV X0, X23
	0x03B75C38 BL 0x1C16F18
	0x03B75C3C BL 0x1990590
	0x03B75C40 STR X30, [X31 - 0x40]!
	0x03B75C44 STP X24, X23, [X31 + 0x10]
	0x03B75C48 STP X22, X21, [X31 + 0x20]
	0x03B75C4C STP X20, X19, [X31 + 0x30]
	0x03B75C50 ADRP X22, 0x86D000
	0x03B75C54 LDRB W8, [X22 + 0xA5B]
	0x03B75C58 MOV X19, X3
	0x03B75C5C MOV X21, X2
	0x03B75C60 MOV X23, X1
	0x03B75C64 MOV X20, X0
	0x03B75C68 TBNZ X8, 0x0, 0x3B75C98
	0x03B75C6C ADRP X0, 0x5E5000
	0x03B75C70 LDR X0, [X0 + 0x130]
	0x03B75C74 BL 0x1C16CF4
	0x03B75C78 ADRP X0, 0x5E5000
	0x03B75C7C LDR X0, [X0 + 0x938]
	0x03B75C80 BL 0x1C16CF4
	0x03B75C84 ADRP X0, 0x5E5000
	0x03B75C88 LDR X0, [X0 + 0xE20]
	0x03B75C8C BL 0x1C16CF4
	0x03B75C90 MOVZ W8, 0x1
	0x03B75C94 STRB W8, [X22 + 0xA5B]
	0x03B75C98 CBZ X19, 0x3B75E94
	0x03B75C9C ADRP X22, 0x5E5000
	0x03B75CA0 LDR X22, [X22 + 0xE20]
	0x03B75CA4 STR X20, [X19 + 0x28]
	0x03B75CA8 LDR X0, [X22]
	0x03B75CAC LDR W8, [X0 + 0xE0]
	0x03B75CB0 CBNZ W8, 0x3B75CBC
	0x03B75CB4 BL 0x1C16DFC
	0x03B75CB8 LDR X0, [X22]
	0x03B75CBC LDR X8, [X0 + 0xB8]
	0x03B75CC0 MOV X1, X31
	0x03B75CC4 MOV X2, X31
	0x03B75CC8 LDR X22, [X8 + 0x78]
	0x03B75CCC MOV X0, X22
	0x03B75CD0 BL 0x33C5D2C
	0x03B75CD4 TBZ X0, 0x0, 0x3B75CE4
	0x03B75CD8 MOV X0, X22
	0x03B75CDC MOV X1, X31
	0x03B75CE0 BL 0x3BFE970
	0x03B75CE4 CBZ X23, 0x3B75E98
	0x03B75CE8 ADRP X10, 0x5E5000
	0x03B75CEC LDR X8, [X23]
	0x03B75CF0 LDR X10, [X10 + 0x938]
	0x03B75CF4 LDRH W9, [X8 + 0x12E]
	0x03B75CF8 LDR X1, [X10]
	0x03B75CFC CBZ X9, 0x3B75D20
	0x03B75D00 LDR X10, [X8 + 0xB0]
	0x03B75D04 ADD X10, X10, 0x8
	0x03B75D08 LDUR X11, [X10 - 0x8]
	0x03B75D0C CMP X11, X1
	0x03B75D10 B.EQ 0x3B75D30
	0x03B75D14 SUBS X9, X9, 0x1
	0x03B75D18 ADD X10, X10, 0x10
	0x03B75D1C B.NE 0x3B75D08
	0x03B75D20 MOVZ W2, 0x17
	0x03B75D24 MOV X0, X23
	0x03B75D28 BL 0x1C5C788
	0x03B75D2C B 0x3B75D40
	0x03B75D30 LDR W9, [X10]
	0x03B75D34 ADD W9, W9, 0x17
	0x03B75D38 ADD X8, X8, W9, 0x4, SXTW
	0x03B75D3C ADD X0, X8, 0x138
	0x03B75D40 LDP X8, X2, [X0]
	0x03B75D44 MOV X0, X23
	0x03B75D48 MOV X1, X19
	0x03B75D4C BLR X8
	0x03B75D50 CBZ X21, 0x3B75EA4
	0x03B75D54 ADRP X23, 0x5E5000
	0x03B75D58 LDR X8, [X21]
	0x03B75D5C LDR X23, [X23 + 0x130]
	0x03B75D60 LDRH W9, [X8 + 0x12E]
	0x03B75D64 LDR X1, [X23]
	0x03B75D68 CBZ X9, 0x3B75D8C
	0x03B75D6C LDR X10, [X8 + 0xB0]
	0x03B75D70 ADD X10, X10, 0x8
	0x03B75D74 LDUR X11, [X10 - 0x8]
	0x03B75D78 CMP X11, X1
	0x03B75D7C B.EQ 0x3B75D9C
	0x03B75D80 SUBS X9, X9, 0x1
	0x03B75D84 ADD X10, X10, 0x10
	0x03B75D88 B.NE 0x3B75D74
	0x03B75D8C MOVZ W2, 0xB
	0x03B75D90 MOV X0, X21
	0x03B75D94 BL 0x1C5C788
	0x03B75D98 B 0x3B75DAC
	0x03B75D9C LDR W9, [X10]
	0x03B75DA0 ADD W9, W9, 0xB
	0x03B75DA4 ADD X8, X8, W9, 0x4, SXTW
	0x03B75DA8 ADD X0, X8, 0x138
	0x03B75DAC LDP X8, X2, [X0]
	0x03B75DB0 MOV X0, X21
	0x03B75DB4 MOV X1, X19
	0x03B75DB8 BLR X8
	0x03B75DBC LDR X8, [X21]
	0x03B75DC0 LDR X1, [X23]
	0x03B75DC4 LDRH W9, [X8 + 0x12E]
	0x03B75DC8 CBZ X9, 0x3B75DEC
	0x03B75DCC LDR X10, [X8 + 0xB0]
	0x03B75DD0 ADD X10, X10, 0x8
	0x03B75DD4 LDUR X11, [X10 - 0x8]
	0x03B75DD8 CMP X11, X1
	0x03B75DDC B.EQ 0x3B75DFC
	0x03B75DE0 SUBS X9, X9, 0x1
	0x03B75DE4 ADD X10, X10, 0x10
	0x03B75DE8 B.NE 0x3B75DD4
	0x03B75DEC MOVZ W2, 0xC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x86E000
	009 Move W8, [X22+2638]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x5E6000
	018 Move X0, [X0+304]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E6000
	021 Move X0, [X0+352]
	022 Call 0x1C17CF4
	023 Move X0, 0x5E7000
	024 Move X0, [X0+2144]
	025 Call 0x1C17CF4
	026 Move X0, 0x5E7000
	027 Move X0, [X0+2152]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2638], W8
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move [X31+8], X31
	034 Compare X21, 0
	035 JumpIfEqual {122}
	036 Move X10, 0x5E6000
	037 Move X8, [X21]
	038 Move X10, [X10+352]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 6
	050 Move X0, X21
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 6
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X21
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {75}
	064 Move X8, [X20]
	065 Move X0, X20
	066 Move X1, X19
	067 Move X2, X21
	068 Move X9, [X8+1208]
	069 Move X3, [X8+1216]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {114}
	075 Move X0, [X20+280]
	076 Compare X0, 0
	077 JumpIfEqual {122}
	078 Move X8, 0x5E7000
	079 Move X8, [X8+2144]
	080 Move X22, 0x5E7000
	081 Add X1, X31, 24
	082 Move X2, [X8]
	083 Move X22, [X22+2152]
	084 Call 0x2EF2058, X0, X1
	085 Move X3, [X31+24]
	086 Move [X31+8], X0
	087 Move [X31+16], X1
	088 Compare X3, 0
	089 JumpIfEqual {123}
	090 Move [X3+24], X21
	091 Move [X3+32], X20
	092 Move [X3+16], X19
	093 Move X0, X20
	094 Move X1, X19
	095 Move X2, X21
	096 Call XRInteractionManager.SelectEnterInternal, X0, X1, X2, X3
	097 Move X1, [X22]
	098 Add X0, X31, 8
	099 Call 0x24A7DD0, X0
	100 Move X8, 0x5E6000
	101 Move X8, [X8+304]
	102 Move X0, X21
	103 Move X1, [X8]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {114}
	107 Move X8, [X20]
	108 Move X2, X0
	109 Move X0, X20
	110 Move X1, X19
	111 Move X9, [X8+920]
	112 Move X3, [X8+928]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X30, [X31+32]
	119 Move X23, [X31+40]
	120 Add X31, X31, 80
	121 Return 
	122 Call 0x1C17F20
	123 Call 0x1C17F20
	124 Move X23, X0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, X23
	127 Call 0x3EB2AD0
	128 Move X22, [X0]
	129 Call 0x3EB2AE0
	130 Move X8, 0x5E7000
	131 Move X8, [X8+2152]
	132 Add X0, X31, 8
	133 Move X1, [X8]
	134 Call 0x24A7DD0, X0
	135 Compare X22, 0
	136 JumpIfEqual {100}
	137 Move X0, X22
	138 Call 0x1C17F18
	139 Move X22, X31
	140 Move X23, X0
	141 Move X8, 0x5E7000
	142 Move X8, [X8+2152]
	143 Move X1, [X8]
	144 Add X0, X31, 8
	145 Call 0x24A7DD0, X0
	146 Compare X22, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X23
	149 Call 0x1D2D690
	150 Move X0, X22
	151 Call 0x1C17F18
	152 Call 0x1991590

Method: System.Void SelectEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B75EE4 MOV X2, X31
	0x03B75EE8 BL 0x33C5D2C
	0x03B75EEC TBZ X0, 0x0, 0x3B75EFC
	0x03B75EF0 MOV X0, X22
	0x03B75EF4 MOV X1, X31
	0x03B75EF8 BL 0x3BFEA0C
	0x03B75EFC CBNZ X23, 0x3B75F08
	0x03B75F00 MOV X0, X24
	0x03B75F04 BL 0x1D2C690
	0x03B75F08 MOV X0, X23
	0x03B75F0C BL 0x1C16F18
	0x03B75F10 BL 0x1990590
	0x03B75F14 STR X30, [X31 - 0x40]!
	0x03B75F18 STP X24, X23, [X31 + 0x10]
	0x03B75F1C STP X22, X21, [X31 + 0x20]
	0x03B75F20 STP X20, X19, [X31 + 0x30]
	0x03B75F24 ADRP X23, 0x86D000
	0x03B75F28 LDRB W8, [X23 + 0xA5C]
	0x03B75F2C MOV X20, X3
	0x03B75F30 MOV X21, X2
	0x03B75F34 MOV X22, X1
	0x03B75F38 MOV X19, X0
	0x03B75F3C TBNZ X8, 0x0, 0x3B75F6C
	0x03B75F40 ADRP X0, 0x5E5000
	0x03B75F44 LDR X0, [X0 + 0x160]
	0x03B75F48 BL 0x1C16CF4
	0x03B75F4C ADRP X0, 0x5E5000
	0x03B75F50 LDR X0, [X0 + 0x328]
	0x03B75F54 BL 0x1C16CF4
	0x03B75F58 ADRP X0, 0x5E5000
	0x03B75F5C LDR X0, [X0 + 0xE20]
	0x03B75F60 BL 0x1C16CF4
	0x03B75F64 MOVZ W8, 0x1
	0x03B75F68 STRB W8, [X23 + 0xA5C]
	0x03B75F6C CBZ X20, 0x3B7618C
	0x03B75F70 ADRP X23, 0x5E5000
	0x03B75F74 LDR X23, [X23 + 0xE20]
	0x03B75F78 STR X19, [X20 + 0x20]
	0x03B75F7C LDR X0, [X23]
	0x03B75F80 LDR W8, [X0 + 0xE0]
	0x03B75F84 CBNZ W8, 0x3B75F90
	0x03B75F88 BL 0x1C16DFC
	0x03B75F8C LDR X0, [X23]
	0x03B75F90 LDR X8, [X0 + 0xB8]
	0x03B75F94 MOV X1, X31
	0x03B75F98 MOV X2, X31
	0x03B75F9C LDR X19, [X8 + 0x80]
	0x03B75FA0 MOV X0, X19
	0x03B75FA4 BL 0x33C5D2C
	0x03B75FA8 TBZ X0, 0x0, 0x3B75FB8
	0x03B75FAC MOV X0, X19
	0x03B75FB0 MOV X1, X31
	0x03B75FB4 BL 0x3BFE970
	0x03B75FB8 CBZ X22, 0x3B76190
	0x03B75FBC ADRP X23, 0x5E5000
	0x03B75FC0 LDR X8, [X22]
	0x03B75FC4 LDR X23, [X23 + 0x328]
	0x03B75FC8 LDRH W9, [X8 + 0x12E]
	0x03B75FCC LDR X1, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86E000
	007 Move W8, [X22+2639]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5E6000
	016 Move X0, [X0+1080]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E6000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2639], W8
	023 Compare X20, 0
	024 JumpIfEqual {36}
	025 Move X8, 0x5E6000
	026 Move X8, [X8+872]
	027 Move X9, [X20]
	028 Move X8, [X8]
	029 Move W11, [X9+304]
	030 Move W10, [X8+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X9+200]
	033 Add X9, X9, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X21]
	037 Move X4, [X8+968]
	038 Move X3, [X8+976]
	039 Move X0, X21
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 CallNoReturn X4
	048 Compare X19, 0
	049 JumpIfEqual {36}
	050 Move X8, 0x5E6000
	051 Move X8, [X8+1080]
	052 Move X9, [X19]
	053 Move X8, [X8]
	054 Move W11, [X9+304]
	055 Move W10, [X8+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X9+200]
	058 Add X9, X9, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X21]
	062 Move X4, [X8+1384]
	063 Move X3, [X8+1392]

Method: System.Void SelectExit(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B75FD0 CBZ X9, 0x3B75FF4
	0x03B75FD4 LDR X10, [X8 + 0xB0]
	0x03B75FD8 ADD X10, X10, 0x8
	0x03B75FDC LDUR X11, [X10 - 0x8]
	0x03B75FE0 CMP X11, X1
	0x03B75FE4 B.EQ 0x3B76004
	0x03B75FE8 SUBS X9, X9, 0x1
	0x03B75FEC ADD X10, X10, 0x10
	0x03B75FF0 B.NE 0x3B75FDC
	0x03B75FF4 MOVZ W2, 0xB
	0x03B75FF8 MOV X0, X22
	0x03B75FFC BL 0x1C5C788
	0x03B76000 B 0x3B76014
	0x03B76004 LDR W9, [X10]
	0x03B76008 ADD W9, W9, 0xB
	0x03B7600C ADD X8, X8, W9, 0x4, SXTW
	0x03B76010 ADD X0, X8, 0x138
	0x03B76014 LDP X8, X2, [X0]
	0x03B76018 MOV X0, X22
	0x03B7601C MOV X1, X20
	0x03B76020 BLR X8
	0x03B76024 CBZ X21, 0x3B7619C
	0x03B76028 ADRP X24, 0x5E4000
	0x03B7602C LDR X8, [X21]
	0x03B76030 LDR X24, [X24 + 0x160]
	0x03B76034 LDRH W9, [X8 + 0x12E]
	0x03B76038 LDR X1, [X24]
	0x03B7603C CBZ X9, 0x3B76060
	0x03B76040 LDR X10, [X8 + 0xB0]
	0x03B76044 ADD X10, X10, 0x8
	0x03B76048 LDUR X11, [X10 - 0x8]
	0x03B7604C CMP X11, X1
	0x03B76050 B.EQ 0x3B76070
	0x03B76054 SUBS X9, X9, 0x1
	0x03B76058 ADD X10, X10, 0x10
	0x03B7605C B.NE 0x3B76048
	0x03B76060 MOVZ W2, 0xB
	0x03B76064 MOV X0, X21
	0x03B76068 BL 0x1C5C788
	0x03B7606C B 0x3B76080
	0x03B76070 LDR W9, [X10]
	0x03B76074 ADD W9, W9, 0xB
	0x03B76078 ADD X8, X8, W9, 0x4, SXTW
	0x03B7607C ADD X0, X8, 0x138
	0x03B76080 LDP X8, X2, [X0]
	0x03B76084 MOV X0, X21
	0x03B76088 MOV X1, X20
	0x03B7608C BLR X8
	0x03B76090 LDR X8, [X22]
	0x03B76094 LDR X1, [X23]
	0x03B76098 LDRH W9, [X8 + 0x12E]
	0x03B7609C CBZ X9, 0x3B760C0
	0x03B760A0 LDR X10, [X8 + 0xB0]
	0x03B760A4 ADD X10, X10, 0x8
	0x03B760A8 LDUR X11, [X10 - 0x8]
	0x03B760AC CMP X11, X1
	0x03B760B0 B.EQ 0x3B760D0
	0x03B760B4 SUBS X9, X9, 0x1
	0x03B760B8 ADD X10, X10, 0x10
	0x03B760BC B.NE 0x3B760A8
	0x03B760C0 MOVZ W2, 0xC
	0x03B760C4 MOV X0, X22
	0x03B760C8 BL 0x1C5C788
	0x03B760CC B 0x3B760E0
	0x03B760D0 LDR W9, [X10]
	0x03B760D4 ADD W9, W9, 0xC
	0x03B760D8 ADD X8, X8, W9, 0x4, SXTW
	0x03B760DC ADD X0, X8, 0x138
	0x03B760E0 LDP X8, X2, [X0]
	0x03B760E4 MOV X0, X22
	0x03B760E8 MOV X1, X20
	0x03B760EC BLR X8
	0x03B760F0 LDR X8, [X21]
	0x03B760F4 LDR X1, [X24]
	0x03B760F8 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x86E000
	008 Move W8, [X22+2640]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5E7000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E6000
	020 Move X0, [X0+2168]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2640], W8
	024 Move [X31+24], X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X21+288]
	028 Compare X0, 0
	029 JumpIfEqual {60}
	030 Move X8, 0x5E6000
	031 Move X8, [X8+2160]
	032 Move X22, 0x5E6000
	033 Add X1, X31, 24
	034 Move X2, [X8]
	035 Move X22, [X22+2168]
	036 Call 0x2EF2058, X0, X1
	037 Move X3, [X31+24]
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Compare X3, 0
	041 JumpIfEqual {61}
	042 Move [X3+24], X19
	043 Move [X3+32], X21
	044 Move [X3+16], X20
	045 Move [X3+40], W31
	046 Move X0, X21
	047 Move X1, X20
	048 Move X2, X19
	049 Call XRInteractionManager.SelectExitInternal, X0, X1, X2, X3
	050 Move X1, [X22]
	051 Add X0, X31, 0
	052 Call 0x24A7DD0, X0
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Add X31, X31, 64
	059 Return 
	060 Call 0x1C17F20
	061 Call 0x1C17F20
	062 Move X20, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X20
	065 Call 0x3EB2AD0
	066 Move X19, [X0]
	067 Call 0x3EB2AE0
	068 Move X1, [X22]
	069 Add X0, X31, 0
	070 Call 0x24A7DD0, X0
	071 Compare X19, 0
	072 JumpIfEqual {53}
	073 Move X0, X19
	074 Call 0x1C17F18
	075 Move X19, X31
	076 Move X20, X0
	077 Move X1, [X22]
	078 Add X0, X31, 0
	079 Call 0x24A7DD0, X0
	080 Compare X19, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X20
	083 Call 0x1D2D690
	084 Move X0, X19
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.Void SelectExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B748C0 CBZ X9, 0x3B748E4
	0x03B748C4 LDR X10, [X8 + 0xB0]
	0x03B748C8 ADD X10, X10, 0x8
	0x03B748CC LDUR X11, [X10 - 0x8]
	0x03B748D0 CMP X11, X1
	0x03B748D4 B.EQ 0x3B748F4
	0x03B748D8 SUBS X9, X9, 0x1
	0x03B748DC ADD X10, X10, 0x10
	0x03B748E0 B.NE 0x3B748CC
	0x03B748E4 MOVZ W2, 0x6
	0x03B748E8 MOV X0, X20
	0x03B748EC BL 0x1C5C788
	0x03B748F0 B 0x3B74904
	0x03B748F4 LDR W9, [X10]
	0x03B748F8 ADD W9, W9, 0x6
	0x03B748FC ADD X8, X8, W9, 0x4, SXTW
	0x03B74900 ADD X0, X8, 0x138
	0x03B74904 LDP X8, X1, [X0]
	0x03B74908 MOV X0, X20
	0x03B7490C BLR X8
	0x03B74910 LDR X8, [X21 + 0x110]
	0x03B74914 CBZ X8, 0x3B74990
	0x03B74918 ADRP X9, 0x5E7000
	0x03B7491C LDR X9, [X9 + 0x850]
	0x03B74920 ADRP X23, 0x5E7000
	0x03B74924 MOV X22, X0
	0x03B74928 ADD X1, X31, 0x18
	0x03B7492C LDR X2, [X9]
	0x03B74930 LDR X23, [X23 + 0x858]
	0x03B74934 MOV X0, X8
	0x03B74938 BL 0x2EF1058
	0x03B7493C LDR X3, [X31 + 0x18]
	0x03B74940 STP X0, X1, [X31 + 0x8]
	0x03B74944 CBZ X3, 0x3B74994
	0x03B74948 STP X22, X19, [X3 + 0x10]
	0x03B7494C STP X20, X21, [X3 + 0x20]
	0x03B74950 STRB W31, [X3 + 0x30]
	0x03B74954 LDR X8, [X21]
	0x03B74958 LDR X9, [X8 + 0x438]
	0x03B7495C LDR X4, [X8 + 0x440]
	0x03B74960 MOV X0, X21
	0x03B74964 MOV X1, X20
	0x03B74968 MOV X2, X19
	0x03B7496C BLR X9
	0x03B74970 LDR X1, [X23]
	0x03B74974 ADD X0, X31, 0x8
	0x03B74978 BL 0x24A6DD0
	0x03B7497C LDP X20, X19, [X31 + 0x40]
	0x03B74980 LDP X22, X21, [X31 + 0x30]
	0x03B74984 LDP X30, X23, [X31 + 0x20]
	0x03B74988 ADD X31, X31, 0x50
	0x03B7498C RET
	0x03B74990 BL 0x1C16F20
	0x03B74994 BL 0x1C16F20
	0x03B74998 B 0x3B7499C
	0x03B7499C MOV X20, X0
	0x03B749A0 CMP W1, 0x1
	0x03B749A4 B.NE 0x3B749D0
	0x03B749A8 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86F000
	007 Move W8, [X22+2641]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5E7000
	016 Move X0, [X0+1080]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E7000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2641], W8
	023 Compare X20, 0
	024 JumpIfEqual {36}
	025 Move X8, 0x5E7000
	026 Move X8, [X8+872]
	027 Move X9, [X20]
	028 Move X8, [X8]
	029 Move W11, [X9+304]
	030 Move W10, [X8+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X9+200]
	033 Add X9, X9, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X21]
	037 Move X4, [X8+984]
	038 Move X3, [X8+992]
	039 Move X0, X21
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 CallNoReturn X4
	048 Compare X19, 0
	049 JumpIfEqual {36}
	050 Move X8, 0x5E7000
	051 Move X8, [X8+1080]
	052 Move X9, [X19]
	053 Move X8, [X8]
	054 Move W11, [X9+304]
	055 Move W10, [X8+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X9+200]
	058 Add X9, X9, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X21]
	062 Move X4, [X8+1400]
	063 Move X3, [X8+1408]

Method: System.Void SelectCancel(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B761F0 MOV X1, X31
	0x03B761F4 BL 0x3BFEA0C
	0x03B761F8 CBNZ X20, 0x3B76204
	0x03B761FC MOV X0, X21
	0x03B76200 BL 0x1D2C690
	0x03B76204 MOV X0, X20
	0x03B76208 BL 0x1C16F18
	0x03B7620C BL 0x1990590
	0x03B76210 STR X30, [X31 - 0x40]!
	0x03B76214 STP X24, X23, [X31 + 0x10]
	0x03B76218 STP X22, X21, [X31 + 0x20]
	0x03B7621C STP X20, X19, [X31 + 0x30]
	0x03B76220 ADRP X23, 0x86C000
	0x03B76224 LDRB W8, [X23 + 0xA5E]
	0x03B76228 MOV X20, X3
	0x03B7622C MOV X21, X2
	0x03B76230 MOV X22, X1
	0x03B76234 MOV X19, X0
	0x03B76238 TBNZ X8, 0x0, 0x3B76268
	0x03B7623C ADRP X0, 0x5E4000
	0x03B76240 LDR X0, [X0 + 0x160]
	0x03B76244 BL 0x1C16CF4
	0x03B76248 ADRP X0, 0x5E4000
	0x03B7624C LDR X0, [X0 + 0x328]
	0x03B76250 BL 0x1C16CF4
	0x03B76254 ADRP X0, 0x5E4000
	0x03B76258 LDR X0, [X0 + 0xE20]
	0x03B7625C BL 0x1C16CF4
	0x03B76260 MOVZ W8, 0x1
	0x03B76264 STRB W8, [X23 + 0xA5E]
	0x03B76268 CBZ X20, 0x3B76488
	0x03B7626C ADRP X23, 0x5E4000
	0x03B76270 LDR X23, [X23 + 0xE20]
	0x03B76274 STR X19, [X20 + 0x20]
	0x03B76278 LDR X0, [X23]
	0x03B7627C LDR W8, [X0 + 0xE0]
	0x03B76280 CBNZ W8, 0x3B7628C
	0x03B76284 BL 0x1C16DFC
	0x03B76288 LDR X0, [X23]
	0x03B7628C LDR X8, [X0 + 0xB8]
	0x03B76290 MOV X1, X31
	0x03B76294 MOV X2, X31
	0x03B76298 LDR X19, [X8 + 0x88]
	0x03B7629C MOV X0, X19
	0x03B762A0 BL 0x33C5D2C
	0x03B762A4 TBZ X0, 0x0, 0x3B762B4
	0x03B762A8 MOV X0, X19
	0x03B762AC MOV X1, X31
	0x03B762B0 BL 0x3BFE970
	0x03B762B4 CBZ X22, 0x3B7648C
	0x03B762B8 ADRP X23, 0x5E4000
	0x03B762BC LDR X8, [X22]
	0x03B762C0 LDR X23, [X23 + 0x328]
	0x03B762C4 LDRH W9, [X8 + 0x12E]
	0x03B762C8 LDR X1, [X23]
	0x03B762CC CBZ X9, 0x3B762F0
	0x03B762D0 LDR X10, [X8 + 0xB0]
	0x03B762D4 ADD X10, X10, 0x8
	0x03B762D8 LDUR X11, [X10 - 0x8]
	0x03B762DC CMP X11, X1
	0x03B762E0 B.EQ 0x3B76300
	0x03B762E4 SUBS X9, X9, 0x1
	0x03B762E8 ADD X10, X10, 0x10
	0x03B762EC B.NE 0x3B762D8
	0x03B762F0 MOVZ W2, 0xD
	0x03B762F4 MOV X0, X22
	0x03B762F8 BL 0x1C5C788
	0x03B762FC B 0x3B76310
	0x03B76300 LDR W9, [X10]
	0x03B76304 ADD W9, W9, 0xD
	0x03B76308 ADD X8, X8, W9, 0x4, SXTW
	0x03B7630C ADD X0, X8, 0x138
	0x03B76310 LDP X8, X2, [X0]
	0x03B76314 MOV X0, X22
	0x03B76318 MOV X1, X20
	0x03B7631C BLR X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x86D000
	008 Move W8, [X22+2642]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5E6000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E6000
	020 Move X0, [X0+2168]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2642], W8
	024 Move [X31+24], X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X21+288]
	028 Compare X0, 0
	029 JumpIfEqual {61}
	030 Move X8, 0x5E6000
	031 Move X8, [X8+2160]
	032 Move X22, 0x5E6000
	033 Add X1, X31, 24
	034 Move X2, [X8]
	035 Move X22, [X22+2168]
	036 Call 0x2EF2058, X0, X1
	037 Move X3, [X31+24]
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Compare X3, 0
	041 JumpIfEqual {62}
	042 Move W8, 1
	043 Move [X3+24], X19
	044 Move [X3+32], X21
	045 Move [X3+16], X20
	046 Move [X3+40], W8
	047 Move X0, X21
	048 Move X1, X20
	049 Move X2, X19
	050 Call XRInteractionManager.SelectExitInternal, X0, X1, X2, X3
	051 Move X1, [X22]
	052 Add X0, X31, 0
	053 Call 0x24A7DD0, X0
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Add X31, X31, 64
	060 Return 
	061 Call 0x1C17F20
	062 Call 0x1C17F20
	063 Move X20, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X20
	066 Call 0x3EB2AD0
	067 Move X19, [X0]
	068 Call 0x3EB2AE0
	069 Move X1, [X22]
	070 Add X0, X31, 0
	071 Call 0x24A7DD0, X0
	072 Compare X19, 0
	073 JumpIfEqual {54}
	074 Move X0, X19
	075 Call 0x1C17F18
	076 Move X19, X31
	077 Move X20, X0
	078 Move X1, [X22]
	079 Add X0, X31, 0
	080 Call 0x24A7DD0, X0
	081 Compare X19, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X20
	084 Call 0x1D2D690
	085 Move X0, X19
	086 Call 0x1C17F18
	087 Call 0x1991590

Method: System.Void SelectCancelInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B74B10 CBZ X3, 0x3B74B68
	0x03B74B14 MOVZ W8, 0x1
	0x03B74B18 STP X19, X20, [X3 + 0x18]
	0x03B74B1C STRB W8, [X3 + 0x30]
	0x03B74B20 LDR X8, [X21]
	0x03B74B24 LDR X9, [X8 + 0x438]
	0x03B74B28 LDR X4, [X8 + 0x440]
	0x03B74B2C MOV X0, X21
	0x03B74B30 MOV X1, X20
	0x03B74B34 MOV X2, X19
	0x03B74B38 BLR X9
	0x03B74B3C LDR X1, [X22]
	0x03B74B40 ADD X0, X31, 0x8
	0x03B74B44 BL 0x24A6DD0
	0x03B74B48 LDP X20, X19, [X31 + 0x40]
	0x03B74B4C LDP X22, X21, [X31 + 0x30]
	0x03B74B50 LDP X30, X23, [X31 + 0x20]
	0x03B74B54 ADD X31, X31, 0x50
	0x03B74B58 RET
	0x03B74B5C BL 0x1C16F20
	0x03B74B60 BL 0x1C16F20
	0x03B74B64 BL 0x1C16F20
	0x03B74B68 BL 0x1C16F20
	0x03B74B6C B 0x3B74B7C
	0x03B74B70 B 0x3B74B7C
	0x03B74B74 B 0x3B74B7C
	0x03B74B78 B 0x3B74B7C
	0x03B74B7C MOV X19, X0
	0x03B74B80 CMP W1, 0x1
	0x03B74B84 B.NE 0x3B74BB0
	0x03B74B88 MOV X0, X19
	0x03B74B8C BL 0x3EB1AD0
	0x03B74B90 LDR X20, [X0]
	0x03B74B94 BL 0x3EB1AE0
	0x03B74B98 LDR X1, [X22]
	0x03B74B9C ADD X0, X31, 0x8
	0x03B74BA0 BL 0x24A6DD0
	0x03B74BA4 CBZ X20, 0x3B74B48
	0x03B74BA8 MOV X0, X20
	0x03B74BAC BL 0x1C16F18
	0x03B74BB0 MOV X20, X31
	0x03B74BB4 B 0x3B74BBC
	0x03B74BB8 MOV X19, X0
	0x03B74BBC LDR X1, [X22]
	0x03B74BC0 ADD X0, X31, 0x8
	0x03B74BC4 BL 0x24A6DD0
	0x03B74BC8 CBNZ X20, 0x3B74BD4
	0x03B74BCC MOV X0, X19
	0x03B74BD0 BL 0x1D2C690
	0x03B74BD4 MOV X0, X20
	0x03B74BD8 BL 0x1C16F18
	0x03B74BDC BL 0x1990590
	0x03B74BE0 SUB X31, X31, 0x50
	0x03B74BE4 STP X30, X23, [X31 + 0x20]
	0x03B74BE8 STP X22, X21, [X31 + 0x30]
	0x03B74BEC STP X20, X19, [X31 + 0x40]
	0x03B74BF0 ADRP X22, 0x86E000
	0x03B74BF4 LDRB W8, [X22 + 0xA4E]
	0x03B74BF8 MOV X21, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86F000
	007 Move W8, [X22+2643]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5E7000
	016 Move X0, [X0+1080]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E7000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2643], W8
	023 Compare X20, 0
	024 JumpIfEqual {36}
	025 Move X8, 0x5E7000
	026 Move X8, [X8+872]
	027 Move X9, [X20]
	028 Move X8, [X8]
	029 Move W11, [X9+304]
	030 Move W10, [X8+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X9+200]
	033 Add X9, X9, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X21]
	037 Move X4, [X8+1000]
	038 Move X3, [X8+1008]
	039 Move X0, X21
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 CallNoReturn X4
	048 Compare X19, 0
	049 JumpIfEqual {36}
	050 Move X8, 0x5E7000
	051 Move X8, [X8+1080]
	052 Move X9, [X19]
	053 Move X8, [X8]
	054 Move W11, [X9+304]
	055 Move W10, [X8+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X9+200]
	058 Add X9, X9, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X21]
	062 Move X4, [X8+1416]
	063 Move X3, [X8+1424]

Method: System.Void HoverEnter(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B76320 CBZ X21, 0x3B76498
	0x03B76324 ADRP X24, 0x5E4000
	0x03B76328 LDR X8, [X21]
	0x03B7632C LDR X24, [X24 + 0x160]
	0x03B76330 LDRH W9, [X8 + 0x12E]
	0x03B76334 LDR X1, [X24]
	0x03B76338 CBZ X9, 0x3B7635C
	0x03B7633C LDR X10, [X8 + 0xB0]
	0x03B76340 ADD X10, X10, 0x8
	0x03B76344 LDUR X11, [X10 - 0x8]
	0x03B76348 CMP X11, X1
	0x03B7634C B.EQ 0x3B7636C
	0x03B76350 SUBS X9, X9, 0x1
	0x03B76354 ADD X10, X10, 0x10
	0x03B76358 B.NE 0x3B76344
	0x03B7635C MOVZ W2, 0xD
	0x03B76360 MOV X0, X21
	0x03B76364 BL 0x1C5C788
	0x03B76368 B 0x3B7637C
	0x03B7636C LDR W9, [X10]
	0x03B76370 ADD W9, W9, 0xD
	0x03B76374 ADD X8, X8, W9, 0x4, SXTW
	0x03B76378 ADD X0, X8, 0x138
	0x03B7637C LDP X8, X2, [X0]
	0x03B76380 MOV X0, X21
	0x03B76384 MOV X1, X20
	0x03B76388 BLR X8
	0x03B7638C LDR X8, [X22]
	0x03B76390 LDR X1, [X23]
	0x03B76394 LDRH W9, [X8 + 0x12E]
	0x03B76398 CBZ X9, 0x3B763BC
	0x03B7639C LDR X10, [X8 + 0xB0]
	0x03B763A0 ADD X10, X10, 0x8
	0x03B763A4 LDUR X11, [X10 - 0x8]
	0x03B763A8 CMP X11, X1
	0x03B763AC B.EQ 0x3B763CC
	0x03B763B0 SUBS X9, X9, 0x1
	0x03B763B4 ADD X10, X10, 0x10
	0x03B763B8 B.NE 0x3B763A4
	0x03B763BC MOVZ W2, 0xE
	0x03B763C0 MOV X0, X22
	0x03B763C4 BL 0x1C5C788
	0x03B763C8 B 0x3B763DC
	0x03B763CC LDR W9, [X10]
	0x03B763D0 ADD W9, W9, 0xE
	0x03B763D4 ADD X8, X8, W9, 0x4, SXTW
	0x03B763D8 ADD X0, X8, 0x138
	0x03B763DC LDP X8, X2, [X0]
	0x03B763E0 MOV X0, X22
	0x03B763E4 MOV X1, X20
	0x03B763E8 BLR X8
	0x03B763EC LDR X8, [X21]
	0x03B763F0 LDR X1, [X24]
	0x03B763F4 LDRH W9, [X8 + 0x12E]
	0x03B763F8 CBZ X9, 0x3B7641C
	0x03B763FC LDR X10, [X8 + 0xB0]
	0x03B76400 ADD X10, X10, 0x8
	0x03B76404 LDUR X11, [X10 - 0x8]
	0x03B76408 CMP X11, X1
	0x03B7640C B.EQ 0x3B7642C
	0x03B76410 SUBS X9, X9, 0x1
	0x03B76414 ADD X10, X10, 0x10
	0x03B76418 B.NE 0x3B76404
	0x03B7641C MOVZ W2, 0xE
	0x03B76420 MOV X0, X21
	0x03B76424 BL 0x1C5C788
	0x03B76428 B 0x3B7643C
	0x03B7642C LDR W9, [X10]
	0x03B76430 ADD W9, W9, 0xE
	0x03B76434 ADD X8, X8, W9, 0x4, SXTW
	0x03B76438 ADD X0, X8, 0x138
	0x03B7643C LDP X8, X2, [X0]
	0x03B76440 MOV X0, X21
	0x03B76444 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x86D000
	008 Move W8, [X22+2644]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5E6000
	017 Move X0, [X0+2176]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E6000
	020 Move X0, [X0+2184]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2644], W8
	024 Move [X31+24], X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X21+296]
	028 Compare X0, 0
	029 JumpIfEqual {59}
	030 Move X8, 0x5E6000
	031 Move X8, [X8+2176]
	032 Move X22, 0x5E6000
	033 Add X1, X31, 24
	034 Move X2, [X8]
	035 Move X22, [X22+2184]
	036 Call 0x2EF2058, X0, X1
	037 Move X3, [X31+24]
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Compare X3, 0
	041 JumpIfEqual {60}
	042 Move [X3+24], X19
	043 Move [X3+32], X21
	044 Move [X3+16], X20
	045 Move X0, X21
	046 Move X1, X20
	047 Move X2, X19
	048 Call XRInteractionManager.HoverEnterInternal, X0, X1, X2, X3
	049 Move X1, [X22]
	050 Add X0, X31, 0
	051 Call 0x24A7DD0, X0
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Add X31, X31, 64
	058 Return 
	059 Call 0x1C17F20
	060 Call 0x1C17F20
	061 Move X20, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X20
	064 Call 0x3EB2AD0
	065 Move X19, [X0]
	066 Call 0x3EB2AE0
	067 Move X1, [X22]
	068 Add X0, X31, 0
	069 Call 0x24A7DD0, X0
	070 Compare X19, 0
	071 JumpIfEqual {52}
	072 Move X0, X19
	073 Call 0x1C17F18
	074 Move X19, X31
	075 Move X20, X0
	076 Move X1, [X22]
	077 Add X0, X31, 0
	078 Call 0x24A7DD0, X0
	079 Compare X19, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X20
	082 Call 0x1D2D690
	083 Move X0, X19
	084 Call 0x1C17F18
	085 Call 0x1991590

Method: System.Void HoverEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B7653C LDR X0, [X0 + 0x148]
	0x03B76540 BL 0x1C16CF4
	0x03B76544 ADRP X0, 0x5E4000
	0x03B76548 LDR X0, [X0 + 0x320]
	0x03B7654C BL 0x1C16CF4
	0x03B76550 ADRP X0, 0x5E4000
	0x03B76554 LDR X0, [X0 + 0xE20]
	0x03B76558 BL 0x1C16CF4
	0x03B7655C MOVZ W8, 0x1
	0x03B76560 STRB W8, [X23 + 0xA60]
	0x03B76564 CBZ X20, 0x3B76784
	0x03B76568 ADRP X23, 0x5E4000
	0x03B7656C LDR X23, [X23 + 0xE20]
	0x03B76570 STR X19, [X20 + 0x20]
	0x03B76574 LDR X0, [X23]
	0x03B76578 LDR W8, [X0 + 0xE0]
	0x03B7657C CBNZ W8, 0x3B76588
	0x03B76580 BL 0x1C16DFC
	0x03B76584 LDR X0, [X23]
	0x03B76588 LDR X8, [X0 + 0xB8]
	0x03B7658C MOV X1, X31
	0x03B76590 MOV X2, X31
	0x03B76594 LDR X19, [X8 + 0x90]
	0x03B76598 MOV X0, X19
	0x03B7659C BL 0x33C5D2C
	0x03B765A0 TBZ X0, 0x0, 0x3B765B0
	0x03B765A4 MOV X0, X19
	0x03B765A8 MOV X1, X31
	0x03B765AC BL 0x3BFE970
	0x03B765B0 CBZ X22, 0x3B76788
	0x03B765B4 ADRP X23, 0x5E4000
	0x03B765B8 LDR X8, [X22]
	0x03B765BC LDR X23, [X23 + 0x320]
	0x03B765C0 LDRH W9, [X8 + 0x12E]
	0x03B765C4 LDR X1, [X23]
	0x03B765C8 CBZ X9, 0x3B765EC
	0x03B765CC LDR X10, [X8 + 0xB0]
	0x03B765D0 ADD X10, X10, 0x8
	0x03B765D4 LDUR X11, [X10 - 0x8]
	0x03B765D8 CMP X11, X1
	0x03B765DC B.EQ 0x3B765FC
	0x03B765E0 SUBS X9, X9, 0x1
	0x03B765E4 ADD X10, X10, 0x10
	0x03B765E8 B.NE 0x3B765D4
	0x03B765EC MOVZ W2, 0x7
	0x03B765F0 MOV X0, X22
	0x03B765F4 BL 0x1C5C788
	0x03B765F8 B 0x3B7660C
	0x03B765FC LDR W9, [X10]
	0x03B76600 ADD W9, W9, 0x7
	0x03B76604 ADD X8, X8, W9, 0x4, SXTW
	0x03B76608 ADD X0, X8, 0x138
	0x03B7660C LDP X8, X2, [X0]
	0x03B76610 MOV X0, X22
	0x03B76614 MOV X1, X20
	0x03B76618 BLR X8
	0x03B7661C CBZ X21, 0x3B76794
	0x03B76620 ADRP X24, 0x5E4000
	0x03B76624 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86D000
	007 Move W8, [X22+2645]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5E5000
	016 Move X0, [X0+1080]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E5000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2645], W8
	023 Compare X20, 0
	024 JumpIfEqual {36}
	025 Move X8, 0x5E5000
	026 Move X8, [X8+872]
	027 Move X9, [X20]
	028 Move X8, [X8]
	029 Move W11, [X9+304]
	030 Move W10, [X8+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X9+200]
	033 Add X9, X9, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X21]
	037 Move X4, [X8+1016]
	038 Move X3, [X8+1024]
	039 Move X0, X21
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 CallNoReturn X4
	048 Compare X19, 0
	049 JumpIfEqual {36}
	050 Move X8, 0x5E5000
	051 Move X8, [X8+1080]
	052 Move X9, [X19]
	053 Move X8, [X8]
	054 Move W11, [X9+304]
	055 Move W10, [X8+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X9+200]
	058 Add X9, X9, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X21]
	062 Move X4, [X8+1432]
	063 Move X3, [X8+1440]

Method: System.Void HoverExit(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B76628 LDR X24, [X24 + 0x148]
	0x03B7662C LDRH W9, [X8 + 0x12E]
	0x03B76630 LDR X1, [X24]
	0x03B76634 CBZ X9, 0x3B76658
	0x03B76638 LDR X10, [X8 + 0xB0]
	0x03B7663C ADD X10, X10, 0x8
	0x03B76640 LDUR X11, [X10 - 0x8]
	0x03B76644 CMP X11, X1
	0x03B76648 B.EQ 0x3B76668
	0x03B7664C SUBS X9, X9, 0x1
	0x03B76650 ADD X10, X10, 0x10
	0x03B76654 B.NE 0x3B76640
	0x03B76658 MOVZ W2, 0x7
	0x03B7665C MOV X0, X21
	0x03B76660 BL 0x1C5C788
	0x03B76664 B 0x3B76678
	0x03B76668 LDR W9, [X10]
	0x03B7666C ADD W9, W9, 0x7
	0x03B76670 ADD X8, X8, W9, 0x4, SXTW
	0x03B76674 ADD X0, X8, 0x138
	0x03B76678 LDP X8, X2, [X0]
	0x03B7667C MOV X0, X21
	0x03B76680 MOV X1, X20
	0x03B76684 BLR X8
	0x03B76688 LDR X8, [X22]
	0x03B7668C LDR X1, [X23]
	0x03B76690 LDRH W9, [X8 + 0x12E]
	0x03B76694 CBZ X9, 0x3B766B8
	0x03B76698 LDR X10, [X8 + 0xB0]
	0x03B7669C ADD X10, X10, 0x8
	0x03B766A0 LDUR X11, [X10 - 0x8]
	0x03B766A4 CMP X11, X1
	0x03B766A8 B.EQ 0x3B766C8
	0x03B766AC SUBS X9, X9, 0x1
	0x03B766B0 ADD X10, X10, 0x10
	0x03B766B4 B.NE 0x3B766A0
	0x03B766B8 MOVZ W2, 0x8
	0x03B766BC MOV X0, X22
	0x03B766C0 BL 0x1C5C788
	0x03B766C4 B 0x3B766D8
	0x03B766C8 LDR W9, [X10]
	0x03B766CC ADD W9, W9, 0x8
	0x03B766D0 ADD X8, X8, W9, 0x4, SXTW
	0x03B766D4 ADD X0, X8, 0x138
	0x03B766D8 LDP X8, X2, [X0]
	0x03B766DC MOV X0, X22
	0x03B766E0 MOV X1, X20
	0x03B766E4 BLR X8
	0x03B766E8 LDR X8, [X21]
	0x03B766EC LDR X1, [X24]
	0x03B766F0 LDRH W9, [X8 + 0x12E]
	0x03B766F4 CBZ X9, 0x3B76718
	0x03B766F8 LDR X10, [X8 + 0xB0]
	0x03B766FC ADD X10, X10, 0x8
	0x03B76700 LDUR X11, [X10 - 0x8]
	0x03B76704 CMP X11, X1
	0x03B76708 B.EQ 0x3B76728
	0x03B7670C SUBS X9, X9, 0x1
	0x03B76710 ADD X10, X10, 0x10
	0x03B76714 B.NE 0x3B76700
	0x03B76718 MOVZ W2, 0x8
	0x03B7671C MOV X0, X21
	0x03B76720 BL 0x1C5C788
	0x03B76724 B 0x3B76738
	0x03B76728 LDR W9, [X10]
	0x03B7672C ADD W9, W9, 0x8
	0x03B76730 ADD X8, X8, W9, 0x4, SXTW
	0x03B76734 ADD X0, X8, 0x138
	0x03B76738 LDP X8, X2, [X0]
	0x03B7673C MOV X0, X21
	0x03B76740 MOV X1, X20
	0x03B76744 BLR X8
	0x03B76748 MOV X20, X31
	0x03B7674C MOV X0, X19
	0x03B76750 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x86D000
	008 Move W8, [X22+2646]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5E6000
	017 Move X0, [X0+2192]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E6000
	020 Move X0, [X0+2200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2646], W8
	024 Move [X31+24], X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X21+304]
	028 Compare X0, 0
	029 JumpIfEqual {60}
	030 Move X8, 0x5E6000
	031 Move X8, [X8+2192]
	032 Move X22, 0x5E6000
	033 Add X1, X31, 24
	034 Move X2, [X8]
	035 Move X22, [X22+2200]
	036 Call 0x2EF2058, X0, X1
	037 Move X3, [X31+24]
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Compare X3, 0
	041 JumpIfEqual {61}
	042 Move [X3+24], X19
	043 Move [X3+32], X21
	044 Move [X3+16], X20
	045 Move [X3+40], W31
	046 Move X0, X21
	047 Move X1, X20
	048 Move X2, X19
	049 Call XRInteractionManager.HoverExitInternal, X0, X1, X2, X3
	050 Move X1, [X22]
	051 Add X0, X31, 0
	052 Call 0x24A7DD0, X0
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Add X31, X31, 64
	059 Return 
	060 Call 0x1C17F20
	061 Call 0x1C17F20
	062 Move X20, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X20
	065 Call 0x3EB2AD0
	066 Move X19, [X0]
	067 Call 0x3EB2AE0
	068 Move X1, [X22]
	069 Add X0, X31, 0
	070 Call 0x24A7DD0, X0
	071 Compare X19, 0
	072 JumpIfEqual {53}
	073 Move X0, X19
	074 Call 0x1C17F18
	075 Move X19, X31
	076 Move X20, X0
	077 Move X1, [X22]
	078 Add X0, X31, 0
	079 Call 0x24A7DD0, X0
	080 Compare X19, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X20
	083 Call 0x1D2D690
	084 Move X0, X19
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.Void HoverExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B75118 MOV X21, X1
	0x03B7511C MOV X22, X0
	0x03B75120 TBNZ X8, 0x0, 0x3B75144
	0x03B75124 ADRP X0, 0x5E5000
	0x03B75128 LDR X0, [X0 + 0x438]
	0x03B7512C BL 0x1C16CF4
	0x03B75130 ADRP X0, 0x5E5000
	0x03B75134 LDR X0, [X0 + 0x368]
	0x03B75138 BL 0x1C16CF4
	0x03B7513C MOVZ W8, 0x1
	0x03B75140 STRB W8, [X23 + 0xA5F]
	0x03B75144 CBZ X21, 0x3B7517C
	0x03B75148 ADRP X8, 0x5E5000
	0x03B7514C LDR X8, [X8 + 0x368]
	0x03B75150 LDR X9, [X21]
	0x03B75154 LDR X8, [X8]
	0x03B75158 LDRB W11, [X9 + 0x130]
	0x03B7515C LDRB W10, [X8 + 0x130]
	0x03B75160 CMP W11, W10
	0x03B75164 B.CC 0x3B7517C
	0x03B75168 LDR X9, [X9 + 0xC8]
	0x03B7516C ADD X9, X9, X10, 0x3, LSL
	0x03B75170 LDUR X9, [X9 - 0x8]
	0x03B75174 CMP X9, X8
	0x03B75178 B.EQ 0x3B751A8
	0x03B7517C LDR X8, [X22]
	0x03B75180 LDR X5, [X8 + 0x458]
	0x03B75184 LDR X4, [X8 + 0x460]
	0x03B75188 MOV X0, X22
	0x03B7518C MOV X1, X21
	0x03B75190 MOV X2, X20
	0x03B75194 MOV X3, X19
	0x03B75198 LDP X20, X19, [X31 + 0x20]
	0x03B7519C LDP X22, X21, [X31 + 0x10]
	0x03B751A0 LDP X30, X23, [X31], #0x30
	0x03B751A4 BR X5
	0x03B751A8 CBZ X20, 0x3B7517C
	0x03B751AC ADRP X8, 0x5E5000
	0x03B751B0 LDR X8, [X8 + 0x438]
	0x03B751B4 LDR X9, [X20]
	0x03B751B8 LDR X8, [X8]
	0x03B751BC LDRB W11, [X9 + 0x130]
	0x03B751C0 LDRB W10, [X8 + 0x130]
	0x03B751C4 CMP W11, W10
	0x03B751C8 B.CC 0x3B7517C
	0x03B751CC LDR X9, [X9 + 0xC8]
	0x03B751D0 ADD X9, X9, X10, 0x3, LSL
	0x03B751D4 LDUR X9, [X9 - 0x8]
	0x03B751D8 CMP X9, X8
	0x03B751DC B.NE 0x3B7517C
	0x03B751E0 LDR X8, [X22]
	0x03B751E4 LDR X5, [X8 + 0x5D8]
	0x03B751E8 LDR X4, [X8 + 0x5E0]
	0x03B751EC B 0x3B75188
	0x03B751F0 SUB X31, X31, 0x40
	0x03B751F4 STR X30, [X31 + 0x10]
	0x03B751F8 STP X22, X21, [X31 + 0x20]
	0x03B751FC STP X20, X19, [X31 + 0x30]
	0x03B75200 ADRP X22, 0x86D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86E000
	007 Move W8, [X22+2647]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5E6000
	016 Move X0, [X0+1080]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E6000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2647], W8
	023 Compare X20, 0
	024 JumpIfEqual {36}
	025 Move X8, 0x5E6000
	026 Move X8, [X8+872]
	027 Move X9, [X20]
	028 Move X8, [X8]
	029 Move W11, [X9+304]
	030 Move W10, [X8+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X9+200]
	033 Add X9, X9, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X21]
	037 Move X4, [X8+1032]
	038 Move X3, [X8+1040]
	039 Move X0, X21
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 CallNoReturn X4
	048 Compare X19, 0
	049 JumpIfEqual {36}
	050 Move X8, 0x5E6000
	051 Move X8, [X8+1080]
	052 Move X9, [X19]
	053 Move X8, [X8]
	054 Move W11, [X9+304]
	055 Move W10, [X8+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X9+200]
	058 Add X9, X9, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X21]
	062 Move X4, [X8+1448]
	063 Move X3, [X8+1456]

Method: System.Void HoverCancel(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B76848 BL 0x1C16CF4
	0x03B7684C ADRP X0, 0x5E4000
	0x03B76850 LDR X0, [X0 + 0xE20]
	0x03B76854 BL 0x1C16CF4
	0x03B76858 MOVZ W8, 0x1
	0x03B7685C STRB W8, [X23 + 0xA62]
	0x03B76860 CBZ X20, 0x3B76A80
	0x03B76864 ADRP X23, 0x5E4000
	0x03B76868 LDR X23, [X23 + 0xE20]
	0x03B7686C STR X19, [X20 + 0x20]
	0x03B76870 LDR X0, [X23]
	0x03B76874 LDR W8, [X0 + 0xE0]
	0x03B76878 CBNZ W8, 0x3B76884
	0x03B7687C BL 0x1C16DFC
	0x03B76880 LDR X0, [X23]
	0x03B76884 LDR X8, [X0 + 0xB8]
	0x03B76888 MOV X1, X31
	0x03B7688C MOV X2, X31
	0x03B76890 LDR X19, [X8 + 0x98]
	0x03B76894 MOV X0, X19
	0x03B76898 BL 0x33C5D2C
	0x03B7689C TBZ X0, 0x0, 0x3B768AC
	0x03B768A0 MOV X0, X19
	0x03B768A4 MOV X1, X31
	0x03B768A8 BL 0x3BFE970
	0x03B768AC CBZ X22, 0x3B76A84
	0x03B768B0 ADRP X23, 0x5E4000
	0x03B768B4 LDR X8, [X22]
	0x03B768B8 LDR X23, [X23 + 0x320]
	0x03B768BC LDRH W9, [X8 + 0x12E]
	0x03B768C0 LDR X1, [X23]
	0x03B768C4 CBZ X9, 0x3B768E8
	0x03B768C8 LDR X10, [X8 + 0xB0]
	0x03B768CC ADD X10, X10, 0x8
	0x03B768D0 LDUR X11, [X10 - 0x8]
	0x03B768D4 CMP X11, X1
	0x03B768D8 B.EQ 0x3B768F8
	0x03B768DC SUBS X9, X9, 0x1
	0x03B768E0 ADD X10, X10, 0x10
	0x03B768E4 B.NE 0x3B768D0
	0x03B768E8 MOVZ W2, 0x9
	0x03B768EC MOV X0, X22
	0x03B768F0 BL 0x1C5C788
	0x03B768F4 B 0x3B76908
	0x03B768F8 LDR W9, [X10]
	0x03B768FC ADD W9, W9, 0x9
	0x03B76900 ADD X8, X8, W9, 0x4, SXTW
	0x03B76904 ADD X0, X8, 0x138
	0x03B76908 LDP X8, X2, [X0]
	0x03B7690C MOV X0, X22
	0x03B76910 MOV X1, X20
	0x03B76914 BLR X8
	0x03B76918 CBZ X21, 0x3B76A90
	0x03B7691C ADRP X24, 0x5E4000
	0x03B76920 LDR X8, [X21]
	0x03B76924 LDR X24, [X24 + 0x148]
	0x03B76928 LDRH W9, [X8 + 0x12E]
	0x03B7692C LDR X1, [X24]
	0x03B76930 CBZ X9, 0x3B76954
	0x03B76934 LDR X10, [X8 + 0xB0]
	0x03B76938 ADD X10, X10, 0x8
	0x03B7693C LDUR X11, [X10 - 0x8]
	0x03B76940 CMP X11, X1
	0x03B76944 B.EQ 0x3B76964
	0x03B76948 SUBS X9, X9, 0x1
	0x03B7694C ADD X10, X10, 0x10
	0x03B76950 B.NE 0x3B7693C
	0x03B76954 MOVZ W2, 0x9
	0x03B76958 MOV X0, X21
	0x03B7695C BL 0x1C5C788
	0x03B76960 B 0x3B76974
	0x03B76964 LDR W9, [X10]
	0x03B76968 ADD W9, W9, 0x9
	0x03B7696C ADD X8, X8, W9, 0x4, SXTW
	0x03B76970 ADD X0, X8, 0x138
	0x03B76974 LDP X8, X2, [X0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x86D000
	008 Move W8, [X22+2648]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5E6000
	017 Move X0, [X0+2192]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E6000
	020 Move X0, [X0+2200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2648], W8
	024 Move [X31+24], X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X21+304]
	028 Compare X0, 0
	029 JumpIfEqual {61}
	030 Move X8, 0x5E6000
	031 Move X8, [X8+2192]
	032 Move X22, 0x5E6000
	033 Add X1, X31, 24
	034 Move X2, [X8]
	035 Move X22, [X22+2200]
	036 Call 0x2EF2058, X0, X1
	037 Move X3, [X31+24]
	038 Move [X31], X0
	039 Move [X31+8], X1
	040 Compare X3, 0
	041 JumpIfEqual {62}
	042 Move W8, 1
	043 Move [X3+24], X19
	044 Move [X3+32], X21
	045 Move [X3+16], X20
	046 Move [X3+40], W8
	047 Move X0, X21
	048 Move X1, X20
	049 Move X2, X19
	050 Call XRInteractionManager.HoverExitInternal, X0, X1, X2, X3
	051 Move X1, [X22]
	052 Add X0, X31, 0
	053 Call 0x24A7DD0, X0
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Add X31, X31, 64
	060 Return 
	061 Call 0x1C17F20
	062 Call 0x1C17F20
	063 Move X20, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X20
	066 Call 0x3EB2AD0
	067 Move X19, [X0]
	068 Call 0x3EB2AE0
	069 Move X1, [X22]
	070 Add X0, X31, 0
	071 Call 0x24A7DD0, X0
	072 Compare X19, 0
	073 JumpIfEqual {54}
	074 Move X0, X19
	075 Call 0x1C17F18
	076 Move X19, X31
	077 Move X20, X0
	078 Move X1, [X22]
	079 Add X0, X31, 0
	080 Call 0x24A7DD0, X0
	081 Compare X19, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X20
	084 Call 0x1D2D690
	085 Move X0, X19
	086 Call 0x1C17F18
	087 Call 0x1991590

Method: System.Void HoverCancelInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B75368 STR X31, [X31 + 0x18]
	0x03B7536C STP X31, X31, [X31]
	0x03B75370 LDR X0, [X21 + 0x128]
	0x03B75374 CBZ X0, 0x3B753D8
	0x03B75378 ADRP X8, 0x5E6000
	0x03B7537C LDR X8, [X8 + 0x880]
	0x03B75380 ADRP X22, 0x5E6000
	0x03B75384 ADD X1, X31, 0x18
	0x03B75388 LDR X2, [X8]
	0x03B7538C LDR X22, [X22 + 0x888]
	0x03B75390 BL 0x2EF1058
	0x03B75394 LDR X3, [X31 + 0x18]
	0x03B75398 STP X0, X1, [X31]
	0x03B7539C CBZ X3, 0x3B753DC
	0x03B753A0 STP X19, X21, [X3 + 0x18]
	0x03B753A4 STR X20, [X3 + 0x10]
	0x03B753A8 MOV X0, X21
	0x03B753AC MOV X1, X20
	0x03B753B0 MOV X2, X19
	0x03B753B4 BL 0x3B75448
	0x03B753B8 LDR X1, [X22]
	0x03B753BC ADD X0, X31, 0x0
	0x03B753C0 BL 0x24A6DD0
	0x03B753C4 LDP X20, X19, [X31 + 0x30]
	0x03B753C8 LDP X22, X21, [X31 + 0x20]
	0x03B753CC LDR X30, [X31 + 0x10]
	0x03B753D0 ADD X31, X31, 0x40
	0x03B753D4 RET
	0x03B753D8 BL 0x1C16F20
	0x03B753DC BL 0x1C16F20
	0x03B753E0 B 0x3B753E4
	0x03B753E4 MOV X20, X0
	0x03B753E8 CMP W1, 0x1
	0x03B753EC B.NE 0x3B75418
	0x03B753F0 MOV X0, X20
	0x03B753F4 BL 0x3EB1AD0
	0x03B753F8 LDR X19, [X0]
	0x03B753FC BL 0x3EB1AE0
	0x03B75400 LDR X1, [X22]
	0x03B75404 ADD X0, X31, 0x0
	0x03B75408 BL 0x24A6DD0
	0x03B7540C CBZ X19, 0x3B753C4
	0x03B75410 MOV X0, X19
	0x03B75414 BL 0x1C16F18
	0x03B75418 MOV X19, X31
	0x03B7541C B 0x3B75424
	0x03B75420 MOV X20, X0
	0x03B75424 LDR X1, [X22]
	0x03B75428 ADD X0, X31, 0x0
	0x03B7542C BL 0x24A6DD0
	0x03B75430 CBNZ X19, 0x3B7543C
	0x03B75434 MOV X0, X20
	0x03B75438 BL 0x1D2C690
	0x03B7543C MOV X0, X19
	0x03B75440 BL 0x1C16F18
	0x03B75444 BL 0x1990590
	0x03B75448 STP X30, X23, [X31 - 0x30]!
	0x03B7544C STP X22, X21, [X31 + 0x10]
	0x03B75450 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86E000
	007 Move W8, [X22+2649]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5E6000
	016 Move X0, [X0+1080]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E6000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2649], W8
	023 Compare X20, 0
	024 JumpIfEqual {36}
	025 Move X8, 0x5E6000
	026 Move X8, [X8+872]
	027 Move X9, [X20]
	028 Move X8, [X8]
	029 Move W11, [X9+304]
	030 Move W10, [X8+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, [X9+200]
	033 Add X9, X9, X10
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X21]
	037 Move X4, [X8+1048]
	038 Move X3, [X8+1056]
	039 Move X0, X21
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 CallNoReturn X4
	048 Compare X19, 0
	049 JumpIfEqual {36}
	050 Move X8, 0x5E6000
	051 Move X8, [X8+1080]
	052 Move X9, [X19]
	053 Move X8, [X8]
	054 Move W11, [X9+304]
	055 Move W10, [X8+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X9+200]
	058 Add X9, X9, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X21]
	062 Move X4, [X8+1464]
	063 Move X3, [X8+1472]

Method: System.Void FocusEnter(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable, UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs args)

Disassembly:
	0x03B76978 MOV X0, X21
	0x03B7697C MOV X1, X20
	0x03B76980 BLR X8
	0x03B76984 LDR X8, [X22]
	0x03B76988 LDR X1, [X23]
	0x03B7698C LDRH W9, [X8 + 0x12E]
	0x03B76990 CBZ X9, 0x3B769B4
	0x03B76994 LDR X10, [X8 + 0xB0]
	0x03B76998 ADD X10, X10, 0x8
	0x03B7699C LDUR X11, [X10 - 0x8]
	0x03B769A0 CMP X11, X1
	0x03B769A4 B.EQ 0x3B769C4
	0x03B769A8 SUBS X9, X9, 0x1
	0x03B769AC ADD X10, X10, 0x10
	0x03B769B0 B.NE 0x3B7699C
	0x03B769B4 MOVZ W2, 0xA
	0x03B769B8 MOV X0, X22
	0x03B769BC BL 0x1C5C788
	0x03B769C0 B 0x3B769D4
	0x03B769C4 LDR W9, [X10]
	0x03B769C8 ADD W9, W9, 0xA
	0x03B769CC ADD X8, X8, W9, 0x4, SXTW
	0x03B769D0 ADD X0, X8, 0x138
	0x03B769D4 LDP X8, X2, [X0]
	0x03B769D8 MOV X0, X22
	0x03B769DC MOV X1, X20
	0x03B769E0 BLR X8
	0x03B769E4 LDR X8, [X21]
	0x03B769E8 LDR X1, [X24]
	0x03B769EC LDRH W9, [X8 + 0x12E]
	0x03B769F0 CBZ X9, 0x3B76A14
	0x03B769F4 LDR X10, [X8 + 0xB0]
	0x03B769F8 ADD X10, X10, 0x8
	0x03B769FC LDUR X11, [X10 - 0x8]
	0x03B76A00 CMP X11, X1
	0x03B76A04 B.EQ 0x3B76A24
	0x03B76A08 SUBS X9, X9, 0x1
	0x03B76A0C ADD X10, X10, 0x10
	0x03B76A10 B.NE 0x3B769FC
	0x03B76A14 MOVZ W2, 0xA
	0x03B76A18 MOV X0, X21
	0x03B76A1C BL 0x1C5C788
	0x03B76A20 B 0x3B76A34
	0x03B76A24 LDR W9, [X10]
	0x03B76A28 ADD W9, W9, 0xA
	0x03B76A2C ADD X8, X8, W9, 0x4, SXTW
	0x03B76A30 ADD X0, X8, 0x138
	0x03B76A34 LDP X8, X2, [X0]
	0x03B76A38 MOV X0, X21
	0x03B76A3C MOV X1, X20
	0x03B76A40 BLR X8
	0x03B76A44 MOV X20, X31
	0x03B76A48 MOV X0, X19
	0x03B76A4C MOV X1, X31
	0x03B76A50 MOV X2, X31
	0x03B76A54 BL 0x33C5D2C
	0x03B76A58 TBZ X0, 0x0, 0x3B76A68
	0x03B76A5C MOV X0, X19
	0x03B76A60 MOV X1, X31
	0x03B76A64 BL 0x3BFEA0C
	0x03B76A68 CBNZ X20, 0x3B76A88
	0x03B76A6C LDP X20, X19, [X31 + 0x30]
	0x03B76A70 LDP X22, X21, [X31 + 0x20]
	0x03B76A74 LDP X24, X23, [X31 + 0x10]
	0x03B76A78 LDR X30, [X31], #0x40
	0x03B76A7C RET
	0x03B76A80 BL 0x1C16F20
	0x03B76A84 BL 0x1C16F20
	0x03B76A88 MOV X0, X20
	0x03B76A8C BL 0x1C16F18
	0x03B76A90 BL 0x1C16F20
	0x03B76A94 B 0x3B76AA0
	0x03B76A98 B 0x3B76AA0
	0x03B76A9C B 0x3B76AA0
	0x03B76AA0 MOV X21, X0
	0x03B76AA4 CMP W1, 0x1
	0x03B76AA8 B.NE 0x3B76AC0
	0x03B76AAC MOV X0, X21
	0x03B76AB0 BL 0x3EB1AD0
	0x03B76AB4 LDR X20, [X0]
	0x03B76AB8 BL 0x3EB1AE0
	0x03B76ABC B 0x3B76A48
	0x03B76AC0 MOV X20, X31
	0x03B76AC4 B 0x3B76ACC
	0x03B76AC8 MOV X21, X0
	0x03B76ACC MOV X0, X19
	0x03B76AD0 MOV X1, X31
	0x03B76AD4 MOV X2, X31
	0x03B76AD8 BL 0x33C5D2C
	0x03B76ADC TBZ X0, 0x0, 0x3B76AEC
	0x03B76AE0 MOV X0, X19
	0x03B76AE4 MOV X1, X31
	0x03B76AE8 BL 0x3BFEA0C
	0x03B76AEC CBNZ X20, 0x3B76AF8
	0x03B76AF0 MOV X0, X21
	0x03B76AF4 BL 0x1D2C690
	0x03B76AF8 MOV X0, X20
	0x03B76AFC BL 0x1C16F18
	0x03B76B00 BL 0x1990590
	0x03B76B04 SUB X31, X31, 0xA0
	0x03B76B08 STP X29, X30, [X31 + 0x40]
	0x03B76B0C STP X28, X27, [X31 + 0x50]
	0x03B76B10 STP X26, X25, [X31 + 0x60]
	0x03B76B14 STP X24, X23, [X31 + 0x70]
	0x03B76B18 STP X22, X21, [X31 + 0x80]
	0x03B76B1C STP X20, X19, [X31 + 0x90]
	0x03B76B20 ADRP X21, 0x86C000
	0x03B76B24 LDRB W8, [X21 + 0xA64]
	0x03B76B28 MOV X23, X2
	0x03B76B2C MOV X19, X1
	0x03B76B30 MOV X20, X0
	0x03B76B34 TBNZ X8, 0x0, 0x3B76BE8
	0x03B76B38 ADRP X0, 0x5E5000
	0x03B76B3C LDR X0, [X0 + 0x810]
	0x03B76B40 BL 0x1C16CF4
	0x03B76B44 ADRP X0, 0x5E5000
	0x03B76B48 LDR X0, [X0 + 0x8A0]
	0x03B76B4C BL 0x1C16CF4
	0x03B76B50 ADRP X0, 0x5E5000
	0x03B76B54 LDR X0, [X0 + 0xD8]
	0x03B76B58 BL 0x1C16CF4
	0x03B76B5C ADRP X0, 0x5E5000
	0x03B76B60 LDR X0, [X0 + 0xE0]
	0x03B76B64 BL 0x1C16CF4
	0x03B76B68 ADRP X0, 0x5E5000
	0x03B76B6C LDR X0, [X0 + 0xE8]
	0x03B76B70 BL 0x1C16CF4
	0x03B76B74 ADRP X0, 0x5E4000
	0x03B76B78 LDR X0, [X0 + 0x160]
	0x03B76B7C BL 0x1C16CF4
	0x03B76B80 ADRP X0, 0x5E4000
	0x03B76B84 LDR X0, [X0 + 0x328]
	0x03B76B88 BL 0x1C16CF4
	0x03B76B8C ADRP X0, 0x5E5000
	0x03B76B90 LDR X0, [X0 + 0x638]
	0x03B76B94 BL 0x1C16CF4
	0x03B76B98 ADRP X0, 0x5E5000
	0x03B76B9C LDR X0, [X0 + 0x8A8]
	0x03B76BA0 BL 0x1C16CF4
	0x03B76BA4 ADRP X0, 0x5E5000
	0x03B76BA8 LDR X0, [X0 + 0x8B0]
	0x03B76BAC BL 0x1C16CF4
	0x03B76BB0 ADRP X0, 0x5E5000
	0x03B76BB4 LDR X0, [X0 + 0x8B8]
	0x03B76BB8 BL 0x1C16CF4
	0x03B76BBC ADRP X0, 0x5E5000
	0x03B76BC0 LDR X0, [X0 + 0xF0]
	0x03B76BC4 BL 0x1C16CF4
	0x03B76BC8 ADRP X0, 0x5E4000
	0x03B76BCC LDR X0, [X0 + 0xE98]
	0x03B76BD0 BL 0x1C16CF4
	0x03B76BD4 ADRP X0, 0x5E4000
	0x03B76BD8 LDR X0, [X0 + 0xE20]
	0x03B76BDC BL 0x1C16CF4
	0x03B76BE0 MOVZ W8, 0x1
	0x03B76BE4 STRB W8, [X21 + 0xA64]
	0x03B76BE8 STP X31, X31, [X31 + 0x20]
	0x03B76BEC STR X31, [X31 + 0x30]
	0x03B76BF0 STR X31, [X31 + 0x18]
	0x03B76BF4 CBZ X23, 0x3B76FBC
	0x03B76BF8 LDR W8, [X23 + 0x18]
	0x03B76BFC CBZ W8, 0x3B76F9C
	0x03B76C00 ADRP X26, 0x5E5000
	0x03B76C04 LDR X26, [X26 + 0x638]
	0x03B76C08 ADRP X24, 0x5E5000
	0x03B76C0C MOV X0, X19
	0x03B76C10 LDR X1, [X26]
	0x03B76C14 LDR X24, [X24 + 0xF0]
	0x03B76C18 BL 0x1C16E00
	0x03B76C1C MOV X21, X0
	0x03B76C20 CBZ X0, 0x3B76C64
	0x03B76C24 LDR X8, [X21]
	0x03B76C28 LDR X1, [X26]
	0x03B76C2C LDRH W9, [X8 + 0x12E]
	0x03B76C30 CBZ X9, 0x3B76C54
	0x03B76C34 LDR X10, [X8 + 0xB0]
	0x03B76C38 ADD X10, X10, 0x8
	0x03B76C3C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x86D000
	009 Move W8, [X22+2650]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X23, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5E5000
	019 Move X0, [X0+304]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E5000
	022 Move X0, [X0+2360]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E5000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2650], W8
	029 Compare X19, 0
	030 JumpIfEqual {168}
	031 Move X22, 0x5E5000
	032 Move X22, [X22+3616]
	033 Move [X19+40], X21
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Move X1, X31
	042 Move X2, X31
	043 Move X22, [X8+112]
	044 Move X0, X22
	045 Call IntPtr.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move X0, X22
	051 Move X1, X31
	052 Call ProfilerUnsafeUtility.BeginSample, X0
	053 Compare X23, 0
	054 JumpIfEqual {169}
	055 Move X10, 0x5E5000
	056 Move X8, [X23]
	057 Move X10, [X10+2360]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 22
	069 Move X0, X23
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 22
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X2, [X0+8]
	077 Move X0, X23
	078 Move X1, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X20, 0
	081 JumpIfEqual {172}
	082 Move X23, 0x5E5000
	083 Move X8, [X20]
	084 Move X23, [X23+304]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X23]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 9
	096 Move X0, X20
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 9
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X20
	105 Move X1, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X20]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 10
	119 Move X0, X20
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 10
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X20
	128 Move X1, X19
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X23, X31
	131 Move X0, X22
	132 Move X1, X31
	133 Move X2, X31
	134 Call IntPtr.op_Inequality, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {142}
	139 Move X0, X22
	140 Move X1, X31
	141 Call ProfilerUnsafeUtility.EndSample, X0
	142 Compare X23, 0
	143 JumpIfNotEqual {170}
	144 Move X8, [X21+80]
	145 Move [X21+128], X20
	146 Compare X8, 0
	147 JumpIfEqual {160}
	148 Move X3, [X8+24]
	149 Move X0, [X8+64]
	150 Move X2, [X8+40]
	151 Move X1, X19
	152 Move X20, [X31+48]
	153 Move X19, [X31+56]
	154 Move X22, [X31+32]
	155 Move X21, [X31+40]
	156 Move X24, [X31+16]
	157 Move X23, [X31+24]
	158 Move X30, [X31+64]
	159 CallNoReturn X3
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X22, [X31+32]
	163 Move X21, [X31+40]
	164 Move X24, [X31+16]
	165 Move X23, [X31+24]
	166 Move X30, [X31+64]
	167 Return 
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Move X0, X23
	171 Call 0x1C17F18
	172 Call 0x1C17F20
	173 Move X24, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X24
	176 Call 0x3EB2AD0
	177 Move X23, [X0]
	178 Call 0x3EB2AE0
	179 Move X23, X31
	180 Move X24, X0
	181 Move X0, X22
	182 Move X1, X31
	183 Move X2, X31
	184 Call IntPtr.op_Inequality, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {192}
	189 Move X0, X22
	190 Move X1, X31
	191 Call ProfilerUnsafeUtility.EndSample, X0
	192 Compare X23, 0
	193 JumpIfNotEqual {196}
	194 Move X0, X24
	195 Call 0x1D2D690
	196 Move X0, X23
	197 Call 0x1C17F18
	198 Call 0x1991590

Method: System.Void FocusEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable, UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs args)

Disassembly:
	0x03B7583C LDR X5, [X8 + 0x5F8]
	0x03B75840 LDR X4, [X8 + 0x600]
	0x03B75844 B 0x3B757E0
	0x03B75848 SUB X31, X31, 0x40

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+1064]
	003 Move X4, [X8+1072]
	004 CallNoReturn X5

Method: System.Void FocusExit(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable, UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs args)

Disassembly:
	0x03B76C40 CMP X11, X1
	0x03B76C44 B.EQ 0x3B76C6C
	0x03B76C48 SUBS X9, X9, 0x1
	0x03B76C4C ADD X10, X10, 0x10
	0x03B76C50 B.NE 0x3B76C3C
	0x03B76C54 MOV X0, X21
	0x03B76C58 MOV W2, W31
	0x03B76C5C BL 0x1C5C788
	0x03B76C60 B 0x3B76C78
	0x03B76C64 MOV W22, W31
	0x03B76C68 B 0x3B76C88
	0x03B76C6C LDRSW X9, [X10]
	0x03B76C70 ADD X8, X8, X9, 0x4, LSL
	0x03B76C74 ADD X0, X8, 0x138
	0x03B76C78 LDP X8, X1, [X0]
	0x03B76C7C MOV X0, X21
	0x03B76C80 BLR X8
	0x03B76C84 MOV W22, W0
	0x03B76C88 ADRP X27, 0x5E5000
	0x03B76C8C ADRP X28, 0x5E4000
	0x03B76C90 LDR X27, [X27 + 0xE0]
	0x03B76C94 LDR X28, [X28 + 0x160]
	0x03B76C98 LDR X1, [X24]
	0x03B76C9C ADD X8, X31, 0x0
	0x03B76CA0 MOV X0, X23
	0x03B76CA4 BL 0x301CB58
	0x03B76CA8 LDR V0, [X31]
	0x03B76CAC LDR X8, [X31 + 0x10]
	0x03B76CB0 MOV X23, X31
	0x03B76CB4 MOV W25, W31
	0x03B76CB8 STR V0, [X31 + 0x2]
	0x03B76CBC STR X8, [X31 + 0x30]
	0x03B76CC0 CMP W22, 0x1
	0x03B76CC4 CSET W8, EQ
	0x03B76CC8 CMP W22, 0x0
	0x03B76CCC CSET W9, EQ
	0x03B76CD0 AND W8, W8, W25, 0x0
	0x03B76CD4 ORR W29, W9, W8, 0x0
	0x03B76CD8 LDR X1, [X27]
	0x03B76CDC ADD X0, X31, 0x20
	0x03B76CE0 BL 0x2BC4350
	0x03B76CE4 TBZ X0, 0x0, 0x3B76F88
	0x03B76CE8 LDR X0, [X31 + 0x30]
	0x03B76CEC LDR X1, [X28]
	0x03B76CF0 BL 0x1C16E00
	0x03B76CF4 MOV X24, X0
	0x03B76CF8 CBZ X0, 0x3B76CD8
	0x03B76CFC CBZ W29, 0x3B76D34
	0x03B76D00 LDR X8, [X20]
	0x03B76D04 LDR X9, [X8 + 0x238]
	0x03B76D08 LDR X3, [X8 + 0x240]
	0x03B76D0C MOV X0, X20
	0x03B76D10 MOV X1, X19
	0x03B76D14 MOV X2, X24
	0x03B76D18 BLR X9
	0x03B76D1C TBZ X0, 0x0, 0x3B76CD8
	0x03B76D20 MOV X0, X20
	0x03B76D24 MOV X1, X19
	0x03B76D28 MOV X2, X24
	0x03B76D2C BL 0x3B74EE4
	0x03B76D30 B 0x3B76CD8
	0x03B76D34 MOV X0, X20
	0x03B76D38 MOV X1, X19
	0x03B76D3C MOV X2, X24
	0x03B76D40 BL 0x3B70244
	0x03B76D44 TBZ X0, 0x0, 0x3B76CD8
	0x03B76D48 TBNZ X25, 0x0, 0x3B76E34
	0x03B76D4C LDR X0, [X20 + 0xC0]
	0x03B76D50 CBZ X0, 0x3B76FD8
	0x03B76D54 ADRP X8, 0x5E5000
	0x03B76D58 LDR X8, [X8 + 0x810]
	0x03B76D5C LDR X3, [X8]
	0x03B76D60 ADD X2, X31, 0x18
	0x03B76D64 MOV X1, X24
	0x03B76D68 BL 0x2AA6B2C
	0x03B76D6C TBNZ X0, 0x0, 0x3B76DD4
	0x03B76D70 ADRP X8, 0x5E4000
	0x03B76D74 LDR X8, [X8 + 0xE20]
	0x03B76D78 LDR X0, [X8]
	0x03B76D7C LDR W8, [X0 + 0xE0]
	0x03B76D80 CBNZ W8, 0x3B76D94
	0x03B76D84 BL 0x1C16DFC
	0x03B76D88 ADRP X8, 0x5E4000
	0x03B76D8C LDR X8, [X8 + 0xE20]
	0x03B76D90 LDR X0, [X8]
	0x03B76D94 LDR X8, [X0 + 0xB8]
	0x03B76D98 LDR X0, [X8 + 0x8]
	0x03B76D9C CBZ X0, 0x3B76FDC
	0x03B76DA0 ADRP X8, 0x5E5000
	0x03B76DA4 LDR X8, [X8 + 0x8A8]
	0x03B76DA8 LDR X1, [X8]
	0x03B76DAC BL 0x2EF0FD0
	0x03B76DB0 STR X0, [X31 + 0x18]
	0x03B76DB4 MOV X2, X0
	0x03B76DB8 LDR X0, [X20 + 0xC0]
	0x03B76DBC CBZ X0, 0x3B76FE0
	0x03B76DC0 ADRP X8, 0x5E5000
	0x03B76DC4 LDR X8, [X8 + 0x8A0]
	0x03B76DC8 LDR X3, [X8]
	0x03B76DCC MOV X1, X24
	0x03B76DD0 BL 0x2AA5084
	0x03B76DD4 LDR X0, [X31 + 0x18]
	0x03B76DD8 CBZ X0, 0x3B76FD4
	0x03B76DDC ADRP X9, 0x5E5000
	0x03B76DE0 LDR W10, [X0 + 0x1C]
	0x03B76DE4 LDR X8, [X0 + 0x10]
	0x03B76DE8 LDR X9, [X9 + 0x8B8]
	0x03B76DEC ADD W10, W10, 0x1
	0x03B76DF0 LDR X9, [X9]
	0x03B76DF4 STR W10, [X0 + 0x1C]
	0x03B76DF8 CBZ X8, 0x3B76FD0
	0x03B76DFC LDRSW X10, [X0 + 0x18]
	0x03B76E00 LDR W11, [X8 + 0x18]
	0x03B76E04 CMP W10, W11
	0x03B76E08 B.CS 0x3B76E20
	0x03B76E0C ADD W9, W10, 0x1
	0x03B76E10 ADD X8, X8, X10, 0x3, LSL
	0x03B76E14 STR W9, [X0 + 0x18]
	0x03B76E18 STR X21, [X8 + 0x20]
	0x03B76E1C B 0x3B76E34
	0x03B76E20 LDR X8, [X9 + 0x20]
	0x03B76E24 LDR X8, [X8 + 0xC0]
	0x03B76E28 LDR X2, [X8 + 0x70]
	0x03B76E2C MOV X1, X21
	0x03B76E30 BL 0x301BF90
	0x03B76E34 CBZ X21, 0x3B76FC4
	0x03B76E38 LDR X8, [X21]
	0x03B76E3C LDR X1, [X26]
	0x03B76E40 LDRH W9, [X8 + 0x12E]
	0x03B76E44 CBZ X9, 0x3B76E68
	0x03B76E48 LDR X10, [X8 + 0xB0]
	0x03B76E4C ADD X10, X10, 0x8
	0x03B76E50 LDUR X11, [X10 - 0x8]
	0x03B76E54 CMP X11, X1
	0x03B76E58 B.EQ 0x3B76E78
	0x03B76E5C SUBS X9, X9, 0x1
	0x03B76E60 ADD X10, X10, 0x10
	0x03B76E64 B.NE 0x3B76E50
	0x03B76E68 MOVZ W2, 0x1
	0x03B76E6C MOV X0, X21
	0x03B76E70 BL 0x1C5C788
	0x03B76E74 B 0x3B76E88
	0x03B76E78 LDR W9, [X10]
	0x03B76E7C ADD W9, W9, 0x1
	0x03B76E80 ADD X8, X8, W9, 0x4, SXTW
	0x03B76E84 ADD X0, X8, 0x138
	0x03B76E88 LDP X8, X1, [X0]
	0x03B76E8C MOV X0, X21
	0x03B76E90 BLR X8
	0x03B76E94 CMP X0, 0x0
	0x03B76E98 CSEL X23, X23, X0, EQ
	0x03B76E9C CBZ X0, 0x3B76F00
	0x03B76EA0 CBZ X23, 0x3B76FCC
	0x03B76EA4 ADRP X9, 0x5E5000
	0x03B76EA8 LDR W10, [X23 + 0x1C]
	0x03B76EAC LDR X8, [X23 + 0x10]
	0x03B76EB0 LDR X9, [X9 + 0x8B0]
	0x03B76EB4 ADD W10, W10, 0x1
	0x03B76EB8 LDR X9, [X9]
	0x03B76EBC STR W10, [X23 + 0x1C]
	0x03B76EC0 CBZ X8, 0x3B76FC8
	0x03B76EC4 LDRSW X10, [X23 + 0x18]
	0x03B76EC8 LDR W11, [X8 + 0x18]
	0x03B76ECC CMP W10, W11
	0x03B76ED0 B.CS 0x3B76EE8
	0x03B76ED4 ADD W9, W10, 0x1
	0x03B76ED8 ADD X8, X8, X10, 0x3, LSL
	0x03B76EDC STR W9, [X23 + 0x18]
	0x03B76EE0 STR X24, [X8 + 0x20]
	0x03B76EE4 B 0x3B76F00
	0x03B76EE8 LDR X8, [X9 + 0x20]
	0x03B76EEC LDR X8, [X8 + 0xC0]
	0x03B76EF0 LDR X2, [X8 + 0x70]
	0x03B76EF4 MOV X0, X23
	0x03B76EF8 MOV X1, X24
	0x03B76EFC BL 0x301BF90
	0x03B76F00 CBZ X19, 0x3B76FC0
	0x03B76F04 LDR X8, [X19]
	0x03B76F08 ADRP X10, 0x5E4000
	0x03B76F0C LDRH W9, [X8 + 0x12E]
	0x03B76F10 LDR X10, [X10 + 0x328]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x86D000
	009 Move W8, [X22+2651]
	010 Move X19, X3
	011 Move X21, X2
	012 Move X23, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5E5000
	019 Move X0, [X0+304]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E5000
	022 Move X0, [X0+2360]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E5000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2651], W8
	029 Compare X19, 0
	030 JumpIfEqual {170}
	031 Move X22, 0x5E5000
	032 Move X22, [X22+3616]
	033 Move [X19+40], X20
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Move X1, X31
	042 Move X2, X31
	043 Move X22, [X8+120]
	044 Move X0, X22
	045 Call IntPtr.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move X0, X22
	051 Move X1, X31
	052 Call ProfilerUnsafeUtility.BeginSample, X0
	053 Compare X23, 0
	054 JumpIfEqual {171}
	055 Move X10, 0x5E5000
	056 Move X8, [X23]
	057 Move X10, [X10+2360]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 23
	069 Move X0, X23
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 23
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X2, [X0+8]
	077 Move X0, X23
	078 Move X1, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X21, 0
	081 JumpIfEqual {174}
	082 Move X23, 0x5E5000
	083 Move X8, [X21]
	084 Move X23, [X23+304]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X23]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 11
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 11
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X21
	105 Move X1, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X21]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 12
	119 Move X0, X21
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 12
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X21
	128 Move X1, X19
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X23, X31
	131 Move X0, X22
	132 Move X1, X31
	133 Move X2, X31
	134 Call IntPtr.op_Inequality, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {142}
	139 Move X0, X22
	140 Move X1, X31
	141 Call ProfilerUnsafeUtility.EndSample, X0
	142 Compare X23, 0
	143 JumpIfNotEqual {172}
	144 Move X8, [X20+128]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move [X20+128], X31
	147 Move X8, [X20+88]
	148 Compare X8, 0
	149 JumpIfEqual {162}
	150 Move X3, [X8+24]
	151 Move X0, [X8+64]
	152 Move X2, [X8+40]
	153 Move X1, X19
	154 Move X20, [X31+48]
	155 Move X19, [X31+56]
	156 Move X22, [X31+32]
	157 Move X21, [X31+40]
	158 Move X24, [X31+16]
	159 Move X23, [X31+24]
	160 Move X30, [X31+64]
	161 CallNoReturn X3
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X22, [X31+32]
	165 Move X21, [X31+40]
	166 Move X24, [X31+16]
	167 Move X23, [X31+24]
	168 Move X30, [X31+64]
	169 Return 
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X0, X23
	173 Call 0x1C17F18
	174 Call 0x1C17F20
	175 Move X24, X0
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X24
	178 Call 0x3EB2AD0
	179 Move X23, [X0]
	180 Call 0x3EB2AE0
	181 Move X23, X31
	182 Move X24, X0
	183 Move X0, X22
	184 Move X1, X31
	185 Move X2, X31
	186 Call IntPtr.op_Inequality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {194}
	191 Move X0, X22
	192 Move X1, X31
	193 Call ProfilerUnsafeUtility.EndSample, X0
	194 Compare X23, 0
	195 JumpIfNotEqual {198}
	196 Move X0, X24
	197 Call 0x1D2D690
	198 Move X0, X23
	199 Call 0x1C17F18
	200 Call 0x1991590

Method: System.Void FocusExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup group, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable, UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs args)

Disassembly:
	0x03B75A00 LDR X22, [X8 + 0x70]
	0x03B75A04 MOV X0, X22
	0x03B75A08 BL 0x33C5D2C
	0x03B75A0C TBZ X0, 0x0, 0x3B75A1C

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+1080]
	003 Move X4, [X8+1088]
	004 CallNoReturn X5

Method: System.Void SelectEnter(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B76F14 LDR X1, [X10]
	0x03B76F18 CBZ X9, 0x3B76F3C
	0x03B76F1C LDR X10, [X8 + 0xB0]
	0x03B76F20 ADD X10, X10, 0x8
	0x03B76F24 LDUR X11, [X10 - 0x8]
	0x03B76F28 CMP X11, X1
	0x03B76F2C B.EQ 0x3B76F4C
	0x03B76F30 SUBS X9, X9, 0x1
	0x03B76F34 ADD X10, X10, 0x10
	0x03B76F38 B.NE 0x3B76F24
	0x03B76F3C MOVZ W2, 0x5
	0x03B76F40 MOV X0, X19
	0x03B76F44 BL 0x1C5C788
	0x03B76F48 B 0x3B76F5C
	0x03B76F4C LDR W9, [X10]
	0x03B76F50 ADD W9, W9, 0x5
	0x03B76F54 ADD X8, X8, W9, 0x4, SXTW
	0x03B76F58 ADD X0, X8, 0x138
	0x03B76F5C LDP X8, X1, [X0]
	0x03B76F60 MOV X0, X19
	0x03B76F64 BLR X8
	0x03B76F68 MOVZ W25, 0x1
	0x03B76F6C TBZ X0, 0x0, 0x3B76CC0
	0x03B76F70 MOVZ W25, 0x1
	0x03B76F74 MOV X0, X20
	0x03B76F78 MOV X1, X19
	0x03B76F7C MOV X2, X24
	0x03B76F80 BL 0x3B74EE4
	0x03B76F84 B 0x3B76CC0
	0x03B76F88 ADRP X8, 0x5E5000
	0x03B76F8C LDR X8, [X8 + 0xD8]
	0x03B76F90 ADD X0, X31, 0x20
	0x03B76F94 LDR X1, [X8]
	0x03B76F98 BL 0x2BC434C
	0x03B76F9C LDP X20, X19, [X31 + 0x90]
	0x03B76FA0 LDP X22, X21, [X31 + 0x80]
	0x03B76FA4 LDP X24, X23, [X31 + 0x70]
	0x03B76FA8 LDP X26, X25, [X31 + 0x60]
	0x03B76FAC LDP X28, X27, [X31 + 0x50]
	0x03B76FB0 LDP X29, X30, [X31 + 0x40]
	0x03B76FB4 ADD X31, X31, 0xA0
	0x03B76FB8 RET
	0x03B76FBC BL 0x1C16F20
	0x03B76FC0 BL 0x1C16F20
	0x03B76FC4 BL 0x1C16F20
	0x03B76FC8 BL 0x1C16F20
	0x03B76FCC BL 0x1C16F20
	0x03B76FD0 BL 0x1C16F20
	0x03B76FD4 BL 0x1C16F20
	0x03B76FD8 BL 0x1C16F20
	0x03B76FDC BL 0x1C16F20
	0x03B76FE0 BL 0x1C16F20
	0x03B76FE4 B 0x3B77034
	0x03B76FE8 B 0x3B77034
	0x03B76FEC B 0x3B77034
	0x03B76FF0 B 0x3B77034
	0x03B76FF4 B 0x3B77034
	0x03B76FF8 B 0x3B77034
	0x03B76FFC B 0x3B77034
	0x03B77000 B 0x3B77034
	0x03B77004 B 0x3B77034
	0x03B77008 B 0x3B77034
	0x03B7700C B 0x3B77034
	0x03B77010 B 0x3B77034
	0x03B77014 B 0x3B77034
	0x03B77018 B 0x3B77034
	0x03B7701C B 0x3B77034
	0x03B77020 B 0x3B77034
	0x03B77024 B 0x3B77034
	0x03B77028 B 0x3B77034
	0x03B7702C B 0x3B77034
	0x03B77030 B 0x3B77034
	0x03B77034 MOV X19, X0
	0x03B77038 CMP W1, 0x1
	0x03B7703C B.NE 0x3B77070
	0x03B77040 MOV X0, X19
	0x03B77044 BL 0x3EB1AD0
	0x03B77048 LDR X20, [X0]
	0x03B7704C BL 0x3EB1AE0
	0x03B77050 ADRP X8, 0x5E4000
	0x03B77054 LDR X8, [X8 + 0xD8]
	0x03B77058 ADD X0, X31, 0x20
	0x03B7705C LDR X1, [X8]
	0x03B77060 BL 0x2BC434C
	0x03B77064 CBZ X20, 0x3B76F9C
	0x03B77068 MOV X0, X20
	0x03B7706C BL 0x1C16F18
	0x03B77070 MOV X20, X31
	0x03B77074 B 0x3B7707C
	0x03B77078 MOV X19, X0
	0x03B7707C ADRP X8, 0x5E4000
	0x03B77080 LDR X8, [X8 + 0xD8]
	0x03B77084 LDR X1, [X8]
	0x03B77088 ADD X0, X31, 0x20
	0x03B7708C BL 0x2BC434C
	0x03B77090 CBNZ X20, 0x3B7709C
	0x03B77094 MOV X0, X19
	0x03B77098 BL 0x1D2C690
	0x03B7709C MOV X0, X20
	0x03B770A0 BL 0x1C16F18
	0x03B770A4 BL 0x1990590
	0x03B770A8 SUB X31, X31, 0x80
	0x03B770AC STP X30, X25, [X31 + 0x40]
	0x03B770B0 STP X24, X23, [X31 + 0x50]
	0x03B770B4 STP X22, X21, [X31 + 0x60]
	0x03B770B8 STP X20, X19, [X31 + 0x70]
	0x03B770BC ADRP X22, 0x86B000
	0x03B770C0 LDRB W8, [X22 + 0xA66]
	0x03B770C4 MOV X21, X2
	0x03B770C8 MOV X19, X1
	0x03B770CC MOV X20, X0
	0x03B770D0 TBNZ X8, 0x0, 0x3B77130
	0x03B770D4 ADRP X0, 0x5E4000
	0x03B770D8 LDR X0, [X0 + 0xD8]
	0x03B770DC BL 0x1C16CF4
	0x03B770E0 ADRP X0, 0x5E4000
	0x03B770E4 LDR X0, [X0 + 0xE0]
	0x03B770E8 BL 0x1C16CF4
	0x03B770EC ADRP X0, 0x5E4000
	0x03B770F0 LDR X0, [X0 + 0xE8]
	0x03B770F4 BL 0x1C16CF4
	0x03B770F8 ADRP X0, 0x5E3000
	0x03B770FC LDR X0, [X0 + 0x148]
	0x03B77100 BL 0x1C16CF4
	0x03B77104 ADRP X0, 0x5E3000
	0x03B77108 LDR X0, [X0 + 0x320]
	0x03B7710C BL 0x1C16CF4
	0x03B77110 ADRP X0, 0x5E4000
	0x03B77114 LDR X0, [X0 + 0xF0]
	0x03B77118 BL 0x1C16CF4
	0x03B7711C ADRP X0, 0x5E3000
	0x03B77120 LDR X0, [X0 + 0xE98]
	0x03B77124 BL 0x1C16CF4
	0x03B77128 MOVZ W8, 0x1
	0x03B7712C STRB W8, [X22 + 0xA66]
	0x03B77130 STP X31, X31, [X31 + 0x20]
	0x03B77134 STR X31, [X31 + 0x30]
	0x03B77138 CBZ X21, 0x3B77274
	0x03B7713C LDR W8, [X21 + 0x18]
	0x03B77140 CBZ W8, 0x3B77258
	0x03B77144 ADRP X8, 0x5E4000
	0x03B77148 LDR X8, [X8 + 0xF0]
	0x03B7714C ADRP X23, 0x5E4000
	0x03B77150 LDR X23, [X23 + 0xE0]
	0x03B77154 ADRP X24, 0x5E3000
	0x03B77158 LDR X1, [X8]
	0x03B7715C ADRP X25, 0x5E3000
	0x03B77160 ADRP X22, 0x5E4000
	0x03B77164 LDR X24, [X24 + 0x148]
	0x03B77168 LDR X25, [X25 + 0x320]
	0x03B7716C LDR X22, [X22 + 0xD8]
	0x03B77170 ADD X8, X31, 0x8
	0x03B77174 MOV X0, X21
	0x03B77178 BL 0x301CB58
	0x03B7717C LDUR V0, [X31 + 0x8]
	0x03B77180 LDR X8, [X31 + 0x18]
	0x03B77184 STR V0, [X31 + 0x2]
	0x03B77188 STR X8, [X31 + 0x30]
	0x03B7718C LDR X1, [X23]
	0x03B77190 ADD X0, X31, 0x20
	0x03B77194 BL 0x2BC4350
	0x03B77198 TBZ X0, 0x0, 0x3B7724C
	0x03B7719C LDR X0, [X31 + 0x30]
	0x03B771A0 LDR X1, [X24]
	0x03B771A4 BL 0x1C16E00
	0x03B771A8 MOV X21, X0
	0x03B771AC CBZ X0, 0x3B7718C
	0x03B771B0 LDR X8, [X20]
	0x03B771B4 LDR X9, [X8 + 0x228]
	0x03B771B8 LDR X3, [X8 + 0x230]
	0x03B771BC MOV X0, X20
	0x03B771C0 MOV X1, X19
	0x03B771C4 MOV X2, X21
	0x03B771C8 BLR X9
	0x03B771CC TBZ X0, 0x0, 0x3B7718C
	0x03B771D0 CBZ X19, 0x3B77270
	0x03B771D4 LDR X8, [X19]
	0x03B771D8 LDR X1, [X25]
	0x03B771DC LDRH W9, [X8 + 0x12E]
	0x03B771E0 CBZ X9, 0x3B77204
	0x03B771E4 LDR X10, [X8 + 0xB0]
	0x03B771E8 ADD X10, X10, 0x8
	0x03B771EC LDUR X11, [X10 - 0x8]
	0x03B771F0 CMP X11, X1
	0x03B771F4 B.EQ 0x3B77214
	0x03B771F8 SUBS X9, X9, 0x1
	0x03B771FC ADD X10, X10, 0x10
	0x03B77200 B.NE 0x3B771EC
	0x03B77204 MOVZ W2, 0x6
	0x03B77208 MOV X0, X19
	0x03B7720C BL 0x1C5C788

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x86D000
	009 Move W8, [X23+2652]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5E5000
	019 Move X0, [X0+352]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E5000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E5000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2652], W8
	029 Compare X20, 0
	030 JumpIfEqual {175}
	031 Move X23, 0x5E5000
	032 Move X23, [X23+3616]
	033 Move [X20+32], X19
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X23]
	040 Move X8, [X0+184]
	041 Move X1, X31
	042 Move X2, X31
	043 Move X19, [X8+128]
	044 Move X0, X19
	045 Call IntPtr.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move X0, X19
	051 Move X1, X31
	052 Call ProfilerUnsafeUtility.BeginSample, X0
	053 Compare X22, 0
	054 JumpIfEqual {176}
	055 Move X23, 0x5E5000
	056 Move X8, [X22]
	057 Move X23, [X23+808]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X23]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 11
	069 Move X0, X22
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 11
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X2, [X0+8]
	077 Move X0, X22
	078 Move X1, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X21, 0
	081 JumpIfEqual {179}
	082 Move X24, 0x5E4000
	083 Move X8, [X21]
	084 Move X24, [X24+352]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X24]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 11
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 11
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X21
	105 Move X1, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X22]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 12
	119 Move X0, X22
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 12
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X22
	128 Move X1, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X21]
	131 Move X1, [X24]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 12
	142 Move X0, X21
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 12
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X2, [X0+8]
	150 Move X0, X21
	151 Move X1, X20
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X20, X31
	154 Move X0, X19
	155 Move X1, X31
	156 Move X2, X31
	157 Call IntPtr.op_Inequality, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {165}
	162 Move X0, X19
	163 Move X1, X31
	164 Call ProfilerUnsafeUtility.EndSample, X0
	165 Compare X20, 0
	166 JumpIfNotEqual {177}
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X24, [X31+16]
	172 Move X23, [X31+24]
	173 Move X30, [X31+64]
	174 Return 
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X20
	178 Call 0x1C17F18
	179 Call 0x1C17F20
	180 Move X21, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X21
	183 Call 0x3EB2AD0
	184 Move X20, [X0]
	185 Call 0x3EB2AE0
	186 Move X20, X31
	187 Move X21, X0
	188 Move X0, X19
	189 Move X1, X31
	190 Move X2, X31
	191 Call IntPtr.op_Inequality, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {199}
	196 Move X0, X19
	197 Move X1, X31
	198 Call ProfilerUnsafeUtility.EndSample, X0
	199 Compare X20, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X21
	202 Call 0x1D2D690
	203 Move X0, X20
	204 Call 0x1C17F18
	205 Call 0x1991590

Method: System.Void SelectEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B75DF0 MOV X0, X21
	0x03B75DF4 BL 0x1C5C788
	0x03B75DF8 B 0x3B75E0C
	0x03B75DFC LDR W9, [X10]
	0x03B75E00 ADD W9, W9, 0xC
	0x03B75E04 ADD X8, X8, W9, 0x4, SXTW
	0x03B75E08 ADD X0, X8, 0x138
	0x03B75E0C LDP X8, X2, [X0]
	0x03B75E10 MOV X0, X21
	0x03B75E14 MOV X1, X19
	0x03B75E18 BLR X8
	0x03B75E1C MOV X23, X31
	0x03B75E20 MOV X0, X22
	0x03B75E24 MOV X1, X31
	0x03B75E28 MOV X2, X31
	0x03B75E2C BL 0x33C5D2C
	0x03B75E30 TBZ X0, 0x0, 0x3B75E40
	0x03B75E34 MOV X0, X22
	0x03B75E38 MOV X1, X31
	0x03B75E3C BL 0x3BFEA0C
	0x03B75E40 CBNZ X23, 0x3B75E9C
	0x03B75E44 LDR X8, [X20 + 0x80]
	0x03B75E48 CMP X8, X21
	0x03B75E4C B.NE 0x3B75E54
	0x03B75E50 STR X31, [X20 + 0x80]
	0x03B75E54 LDR X8, [X20 + 0x58]
	0x03B75E58 CBZ X8, 0x3B75E80
	0x03B75E5C LDR X3, [X8 + 0x18]
	0x03B75E60 LDR X0, [X8 + 0x40]
	0x03B75E64 LDR X2, [X8 + 0x28]
	0x03B75E68 MOV X1, X19
	0x03B75E6C LDP X20, X19, [X31 + 0x30]
	0x03B75E70 LDP X22, X21, [X31 + 0x20]
	0x03B75E74 LDP X24, X23, [X31 + 0x10]
	0x03B75E78 LDR X30, [X31], #0x40
	0x03B75E7C BR X3
	0x03B75E80 LDP X20, X19, [X31 + 0x30]
	0x03B75E84 LDP X22, X21, [X31 + 0x20]
	0x03B75E88 LDP X24, X23, [X31 + 0x10]
	0x03B75E8C LDR X30, [X31], #0x40
	0x03B75E90 RET
	0x03B75E94 BL 0x1C16F20
	0x03B75E98 BL 0x1C16F20
	0x03B75E9C MOV X0, X23
	0x03B75EA0 BL 0x1C16F18
	0x03B75EA4 BL 0x1C16F20
	0x03B75EA8 B 0x3B75EB0
	0x03B75EAC B 0x3B75EB0
	0x03B75EB0 MOV X24, X0
	0x03B75EB4 CMP W1, 0x1
	0x03B75EB8 B.NE 0x3B75ED0
	0x03B75EBC MOV X0, X24
	0x03B75EC0 BL 0x3EB1AD0
	0x03B75EC4 LDR X23, [X0]
	0x03B75EC8 BL 0x3EB1AE0
	0x03B75ECC B 0x3B75E20
	0x03B75ED0 MOV X23, X31
	0x03B75ED4 B 0x3B75EDC
	0x03B75ED8 MOV X24, X0
	0x03B75EDC MOV X0, X22
	0x03B75EE0 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x86E000
	008 Move W8, [X23+2653]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5E6000
	018 Move X0, [X0+1080]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E6000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2653], W8
	025 Compare X21, 0
	026 JumpIfEqual {38}
	027 Move X8, 0x5E6000
	028 Move X8, [X8+872]
	029 Move X9, [X21]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X22]
	039 Move X5, [X8+1096]
	040 Move X4, [X8+1104]
	041 Move X0, X22
	042 Move X1, X21
	043 Move X2, X20
	044 Move X3, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 CallNoReturn X5
	052 Compare X20, 0
	053 JumpIfEqual {38}
	054 Move X8, 0x5E6000
	055 Move X8, [X8+1080]
	056 Move X9, [X20]
	057 Move X8, [X8]
	058 Move W11, [X9+304]
	059 Move W10, [X8+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9+200]
	062 Add X9, X9, X10
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X22]
	066 Move X5, [X8+1480]
	067 Move X4, [X8+1488]

Method: System.Void SelectExit(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B77210 B 0x3B77224
	0x03B77214 LDR W9, [X10]
	0x03B77218 ADD W9, W9, 0x6
	0x03B7721C ADD X8, X8, W9, 0x4, SXTW
	0x03B77220 ADD X0, X8, 0x138
	0x03B77224 LDP X8, X2, [X0]
	0x03B77228 MOV X0, X19
	0x03B7722C MOV X1, X21
	0x03B77230 BLR X8
	0x03B77234 TBNZ X0, 0x0, 0x3B7718C
	0x03B77238 MOV X0, X20
	0x03B7723C MOV X1, X19
	0x03B77240 MOV X2, X21
	0x03B77244 BL 0x3B7553C
	0x03B77248 B 0x3B7718C
	0x03B7724C LDR X1, [X22]
	0x03B77250 ADD X0, X31, 0x20
	0x03B77254 BL 0x2BC434C
	0x03B77258 LDP X20, X19, [X31 + 0x70]
	0x03B7725C LDP X22, X21, [X31 + 0x60]
	0x03B77260 LDP X24, X23, [X31 + 0x50]
	0x03B77264 LDP X30, X25, [X31 + 0x40]
	0x03B77268 ADD X31, X31, 0x80
	0x03B7726C RET
	0x03B77270 BL 0x1C16F20
	0x03B77274 BL 0x1C16F20
	0x03B77278 B 0x3B7728C
	0x03B7727C B 0x3B7728C
	0x03B77280 B 0x3B7728C
	0x03B77284 B 0x3B7728C
	0x03B77288 B 0x3B7728C
	0x03B7728C MOV X19, X0
	0x03B77290 CMP W1, 0x1
	0x03B77294 B.NE 0x3B772C0
	0x03B77298 MOV X0, X19
	0x03B7729C BL 0x3EB1AD0
	0x03B772A0 LDR X20, [X0]
	0x03B772A4 BL 0x3EB1AE0
	0x03B772A8 LDR X1, [X22]
	0x03B772AC ADD X0, X31, 0x20
	0x03B772B0 BL 0x2BC434C
	0x03B772B4 CBZ X20, 0x3B77258
	0x03B772B8 MOV X0, X20
	0x03B772BC BL 0x1C16F18
	0x03B772C0 MOV X20, X31
	0x03B772C4 B 0x3B772CC
	0x03B772C8 MOV X19, X0
	0x03B772CC LDR X1, [X22]
	0x03B772D0 ADD X0, X31, 0x20
	0x03B772D4 BL 0x2BC434C
	0x03B772D8 CBNZ X20, 0x3B772E4
	0x03B772DC MOV X0, X19
	0x03B772E0 BL 0x1D2C690
	0x03B772E4 MOV X0, X20
	0x03B772E8 BL 0x1C16F18
	0x03B772EC BL 0x1990590
	0x03B772F0 STR X30, [X31 - 0x30]!
	0x03B772F4 STP X22, X21, [X31 + 0x10]
	0x03B772F8 STP X20, X19, [X31 + 0x20]
	0x03B772FC ADRP X22, 0x86B000
	0x03B77300 LDRB W8, [X22 + 0xA68]
	0x03B77304 MOV X19, X2
	0x03B77308 MOV X21, X1
	0x03B7730C MOV X20, X0
	0x03B77310 TBNZ X8, 0x0, 0x3B77334
	0x03B77314 ADRP X0, 0x5E3000
	0x03B77318 LDR X0, [X0 + 0x130]
	0x03B7731C BL 0x1C16CF4
	0x03B77320 ADRP X0, 0x5E3000
	0x03B77324 LDR X0, [X0 + 0x938]
	0x03B77328 BL 0x1C16CF4
	0x03B7732C MOVZ W8, 0x1
	0x03B77330 STRB W8, [X22 + 0xA68]
	0x03B77334 CBZ X21, 0x3B77444
	0x03B77338 ADRP X10, 0x5E3000
	0x03B7733C LDR X8, [X21]
	0x03B77340 LDR X10, [X10 + 0x938]
	0x03B77344 LDRH W9, [X8 + 0x12E]
	0x03B77348 LDR X1, [X10]
	0x03B7734C CBZ X9, 0x3B77370
	0x03B77350 LDR X10, [X8 + 0xB0]
	0x03B77354 ADD X10, X10, 0x8
	0x03B77358 LDUR X11, [X10 - 0x8]
	0x03B7735C CMP X11, X1
	0x03B77360 B.EQ 0x3B77380
	0x03B77364 SUBS X9, X9, 0x1
	0x03B77368 ADD X10, X10, 0x10
	0x03B7736C B.NE 0x3B77358
	0x03B77370 MOVZ W2, 0x7
	0x03B77374 MOV X0, X21
	0x03B77378 BL 0x1C5C788
	0x03B7737C B 0x3B77390
	0x03B77380 LDR W9, [X10]
	0x03B77384 ADD W9, W9, 0x7
	0x03B77388 ADD X8, X8, W9, 0x4, SXTW
	0x03B7738C ADD X0, X8, 0x138
	0x03B77390 LDP X8, X1, [X0]
	0x03B77394 MOV X0, X21
	0x03B77398 BLR X8
	0x03B7739C CMP X0, X19
	0x03B773A0 B.EQ 0x3B77430
	0x03B773A4 CBZ X19, 0x3B77444
	0x03B773A8 ADRP X10, 0x5E3000
	0x03B773AC LDR X8, [X19]
	0x03B773B0 LDR X10, [X10 + 0x130]
	0x03B773B4 LDRH W9, [X8 + 0x12E]
	0x03B773B8 LDR X1, [X10]
	0x03B773BC CBZ X9, 0x3B773E0
	0x03B773C0 LDR X10, [X8 + 0xB0]
	0x03B773C4 ADD X10, X10, 0x8
	0x03B773C8 LDUR X11, [X10 - 0x8]
	0x03B773CC CMP X11, X1
	0x03B773D0 B.EQ 0x3B773F0
	0x03B773D4 SUBS X9, X9, 0x1
	0x03B773D8 ADD X10, X10, 0x10
	0x03B773DC B.NE 0x3B773C8
	0x03B773E0 MOVZ W2, 0x7
	0x03B773E4 MOV X0, X19
	0x03B773E8 BL 0x1C5C788
	0x03B773EC B 0x3B77400
	0x03B773F0 LDR W9, [X10]
	0x03B773F4 ADD W9, W9, 0x7
	0x03B773F8 ADD X8, X8, W9, 0x4, SXTW
	0x03B773FC ADD X0, X8, 0x138
	0x03B77400 LDP X8, X1, [X0]
	0x03B77404 MOV X0, X19
	0x03B77408 BLR X8
	0x03B7740C CMP W0, 0x2
	0x03B77410 B.EQ 0x3B77428
	0x03B77414 CMP W0, 0x1
	0x03B77418 B.NE 0x3B77430
	0x03B7741C MOV X0, X20
	0x03B77420 MOV X1, X19
	0x03B77424 BL 0x3B77448
	0x03B77428 MOVZ W0, 0x1
	0x03B7742C B 0x3B77434
	0x03B77430 MOV W0, W31
	0x03B77434 LDP X20, X19, [X31 + 0x20]
	0x03B77438 LDP X22, X21, [X31 + 0x10]
	0x03B7743C LDR X30, [X31], #0x30
	0x03B77440 RET
	0x03B77444 BL 0x1C16F20
	0x03B77448 STP X30, X23, [X31 - 0x30]!
	0x03B7744C STP X22, X21, [X31 + 0x10]
	0x03B77450 STP X20, X19, [X31 + 0x20]
	0x03B77454 ADRP X21, 0x86B000
	0x03B77458 LDRB W8, [X21 + 0xA6C]
	0x03B7745C MOV X19, X1
	0x03B77460 MOV X20, X0
	0x03B77464 TBNZ X8, 0x0, 0x3B77494
	0x03B77468 ADRP X0, 0x5E3000
	0x03B7746C LDR X0, [X0 + 0x130]
	0x03B77470 BL 0x1C16CF4
	0x03B77474 ADRP X0, 0x5E3000
	0x03B77478 LDR X0, [X0 + 0x138]
	0x03B7747C BL 0x1C16CF4
	0x03B77480 ADRP X0, 0x5E3000
	0x03B77484 LDR X0, [X0 + 0x140]
	0x03B77488 BL 0x1C16CF4
	0x03B7748C MOVZ W8, 0x1
	0x03B77490 STRB W8, [X21 + 0xA6C]
	0x03B77494 CBZ X19, 0x3B775B4
	0x03B77498 ADRP X22, 0x5E3000
	0x03B7749C LDR X8, [X19]
	0x03B774A0 LDR X22, [X22 + 0x130]
	0x03B774A4 LDRH W9, [X8 + 0x12E]
	0x03B774A8 LDR X1, [X22]
	0x03B774AC CBZ X9, 0x3B774D0
	0x03B774B0 LDR X10, [X8 + 0xB0]
	0x03B774B4 ADD X10, X10, 0x8
	0x03B774B8 LDUR X11, [X10 - 0x8]
	0x03B774BC CMP X11, X1
	0x03B774C0 B.EQ 0x3B774E0
	0x03B774C4 SUBS X9, X9, 0x1
	0x03B774C8 ADD X10, X10, 0x10
	0x03B774CC B.NE 0x3B774B8
	0x03B774D0 MOVZ W2, 0x4
	0x03B774D4 MOV X0, X19
	0x03B774D8 BL 0x1C5C788
	0x03B774DC B 0x3B774F0
	0x03B774E0 LDR W9, [X10]
	0x03B774E4 ADD W9, W9, 0x4
	0x03B774E8 ADD X8, X8, W9, 0x4, SXTW
	0x03B774EC ADD X0, X8, 0x138
	0x03B774F0 LDP X8, X1, [X0]
	0x03B774F4 MOV X0, X19
	0x03B774F8 BLR X8
	0x03B774FC CBZ X0, 0x3B775B4
	0x03B77500 LDR W8, [X0 + 0x18]
	0x03B77504 SUBS W21, W8, 0x1
	0x03B77508 B.MI 0x3B775A4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x86C000
	009 Move W8, [X23+2654]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5E4000
	019 Move X0, [X0+352]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E4000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E4000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2654], W8
	029 Compare X20, 0
	030 JumpIfEqual {175}
	031 Move X23, 0x5E4000
	032 Move X23, [X23+3616]
	033 Move [X20+32], X19
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X23]
	040 Move X8, [X0+184]
	041 Move X1, X31
	042 Move X2, X31
	043 Move X19, [X8+136]
	044 Move X0, X19
	045 Call IntPtr.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move X0, X19
	051 Move X1, X31
	052 Call ProfilerUnsafeUtility.BeginSample, X0
	053 Compare X22, 0
	054 JumpIfEqual {176}
	055 Move X23, 0x5E4000
	056 Move X8, [X22]
	057 Move X23, [X23+808]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X23]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 13
	069 Move X0, X22
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 13
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X2, [X0+8]
	077 Move X0, X22
	078 Move X1, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X21, 0
	081 JumpIfEqual {179}
	082 Move X24, 0x5E4000
	083 Move X8, [X21]
	084 Move X24, [X24+352]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X24]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 13
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 13
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X21
	105 Move X1, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X22]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 14
	119 Move X0, X22
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 14
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X22
	128 Move X1, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X21]
	131 Move X1, [X24]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 14
	142 Move X0, X21
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 14
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X2, [X0+8]
	150 Move X0, X21
	151 Move X1, X20
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X20, X31
	154 Move X0, X19
	155 Move X1, X31
	156 Move X2, X31
	157 Call IntPtr.op_Inequality, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {165}
	162 Move X0, X19
	163 Move X1, X31
	164 Call ProfilerUnsafeUtility.EndSample, X0
	165 Compare X20, 0
	166 JumpIfNotEqual {177}
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X24, [X31+16]
	172 Move X23, [X31+24]
	173 Move X30, [X31+64]
	174 Return 
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X20
	178 Call 0x1C17F18
	179 Call 0x1C17F20
	180 Move X21, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X21
	183 Call 0x3EB2AD0
	184 Move X20, [X0]
	185 Call 0x3EB2AE0
	186 Move X20, X31
	187 Move X21, X0
	188 Move X0, X19
	189 Move X1, X31
	190 Move X2, X31
	191 Call IntPtr.op_Inequality, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {199}
	196 Move X0, X19
	197 Move X1, X31
	198 Call ProfilerUnsafeUtility.EndSample, X0
	199 Compare X20, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X21
	202 Call 0x1D2D690
	203 Move X0, X20
	204 Call 0x1C17F18
	205 Call 0x1991590

Method: System.Void SelectExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B760FC CBZ X9, 0x3B76120
	0x03B76100 LDR X10, [X8 + 0xB0]
	0x03B76104 ADD X10, X10, 0x8
	0x03B76108 LDUR X11, [X10 - 0x8]
	0x03B7610C CMP X11, X1
	0x03B76110 B.EQ 0x3B76130
	0x03B76114 SUBS X9, X9, 0x1
	0x03B76118 ADD X10, X10, 0x10
	0x03B7611C B.NE 0x3B76108
	0x03B76120 MOVZ W2, 0xC
	0x03B76124 MOV X0, X21
	0x03B76128 BL 0x1C5C788
	0x03B7612C B 0x3B76140
	0x03B76130 LDR W9, [X10]
	0x03B76134 ADD W9, W9, 0xC
	0x03B76138 ADD X8, X8, W9, 0x4, SXTW
	0x03B7613C ADD X0, X8, 0x138
	0x03B76140 LDP X8, X2, [X0]
	0x03B76144 MOV X0, X21
	0x03B76148 MOV X1, X20
	0x03B7614C BLR X8
	0x03B76150 MOV X20, X31
	0x03B76154 MOV X0, X19
	0x03B76158 MOV X1, X31
	0x03B7615C MOV X2, X31
	0x03B76160 BL 0x33C5D2C
	0x03B76164 TBZ X0, 0x0, 0x3B76174
	0x03B76168 MOV X0, X19
	0x03B7616C MOV X1, X31
	0x03B76170 BL 0x3BFEA0C
	0x03B76174 CBNZ X20, 0x3B76194
	0x03B76178 LDP X20, X19, [X31 + 0x30]
	0x03B7617C LDP X22, X21, [X31 + 0x20]
	0x03B76180 LDP X24, X23, [X31 + 0x10]
	0x03B76184 LDR X30, [X31], #0x40
	0x03B76188 RET
	0x03B7618C BL 0x1C16F20
	0x03B76190 BL 0x1C16F20
	0x03B76194 MOV X0, X20
	0x03B76198 BL 0x1C16F18
	0x03B7619C BL 0x1C16F20
	0x03B761A0 B 0x3B761AC
	0x03B761A4 B 0x3B761AC
	0x03B761A8 B 0x3B761AC
	0x03B761AC MOV X21, X0
	0x03B761B0 CMP W1, 0x1
	0x03B761B4 B.NE 0x3B761CC
	0x03B761B8 MOV X0, X21
	0x03B761BC BL 0x3EB1AD0
	0x03B761C0 LDR X20, [X0]
	0x03B761C4 BL 0x3EB1AE0
	0x03B761C8 B 0x3B76154
	0x03B761CC MOV X20, X31
	0x03B761D0 B 0x3B761D8
	0x03B761D4 MOV X21, X0
	0x03B761D8 MOV X0, X19
	0x03B761DC MOV X1, X31
	0x03B761E0 MOV X2, X31
	0x03B761E4 BL 0x33C5D2C
	0x03B761E8 TBZ X0, 0x0, 0x3B761F8
	0x03B761EC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x86D000
	008 Move W8, [X23+2655]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5E5000
	018 Move X0, [X0+1080]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E5000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2655], W8
	025 Compare X21, 0
	026 JumpIfEqual {38}
	027 Move X8, 0x5E5000
	028 Move X8, [X8+872]
	029 Move X9, [X21]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X22]
	039 Move X5, [X8+1112]
	040 Move X4, [X8+1120]
	041 Move X0, X22
	042 Move X1, X21
	043 Move X2, X20
	044 Move X3, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 CallNoReturn X5
	052 Compare X20, 0
	053 JumpIfEqual {38}
	054 Move X8, 0x5E5000
	055 Move X8, [X8+1080]
	056 Move X9, [X20]
	057 Move X8, [X8]
	058 Move W11, [X9+304]
	059 Move W10, [X8+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9+200]
	062 Add X9, X9, X10
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X22]
	066 Move X5, [X8+1496]
	067 Move X4, [X8+1504]

Method: System.Void HoverEnter(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B7750C ADRP X23, 0x5E3000
	0x03B77510 LDR X23, [X23 + 0x140]
	0x03B77514 LDR X8, [X19]
	0x03B77518 LDR X1, [X22]
	0x03B7751C LDRH W9, [X8 + 0x12E]
	0x03B77520 CBZ X9, 0x3B77544
	0x03B77524 LDR X10, [X8 + 0xB0]
	0x03B77528 ADD X10, X10, 0x8
	0x03B7752C LDUR X11, [X10 - 0x8]
	0x03B77530 CMP X11, X1
	0x03B77534 B.EQ 0x3B77554
	0x03B77538 SUBS X9, X9, 0x1
	0x03B7753C ADD X10, X10, 0x10
	0x03B77540 B.NE 0x3B7752C
	0x03B77544 MOVZ W2, 0x4
	0x03B77548 MOV X0, X19
	0x03B7754C BL 0x1C5C788
	0x03B77550 B 0x3B77564
	0x03B77554 LDR W9, [X10]
	0x03B77558 ADD W9, W9, 0x4
	0x03B7755C ADD X8, X8, W9, 0x4, SXTW
	0x03B77560 ADD X0, X8, 0x138
	0x03B77564 LDP X8, X1, [X0]
	0x03B77568 MOV X0, X19
	0x03B7756C BLR X8
	0x03B77570 CBZ X0, 0x3B775B4
	0x03B77574 LDR X2, [X23]
	0x03B77578 MOV W1, W21
	0x03B7757C BL 0x301BCCC
	0x03B77580 LDR X8, [X20]
	0x03B77584 MOV X1, X0
	0x03B77588 MOV X0, X20
	0x03B7758C MOV X2, X19
	0x03B77590 LDR X9, [X8 + 0x3A8]
	0x03B77594 LDR X3, [X8 + 0x3B0]
	0x03B77598 BLR X9
	0x03B7759C SUBS W21, W21, 0x1
	0x03B775A0 B.PL 0x3B77514
	0x03B775A4 LDP X20, X19, [X31 + 0x20]
	0x03B775A8 LDP X22, X21, [X31 + 0x10]
	0x03B775AC LDP X30, X23, [X31], #0x30
	0x03B775B0 RET
	0x03B775B4 BL 0x1C16F20
	0x03B775B8 STR X30, [X31 - 0x30]!
	0x03B775BC STP X22, X21, [X31 + 0x10]
	0x03B775C0 STP X20, X19, [X31 + 0x20]
	0x03B775C4 ADRP X22, 0x86B000
	0x03B775C8 LDRB W8, [X22 + 0xA69]
	0x03B775CC MOV X19, X2
	0x03B775D0 MOV X21, X1
	0x03B775D4 MOV X20, X0
	0x03B775D8 TBNZ X8, 0x0, 0x3B77608
	0x03B775DC ADRP X0, 0x5E3000
	0x03B775E0 LDR X0, [X0 + 0x160]
	0x03B775E4 BL 0x1C16CF4
	0x03B775E8 ADRP X0, 0x5E3000
	0x03B775EC LDR X0, [X0 + 0x328]
	0x03B775F0 BL 0x1C16CF4
	0x03B775F4 ADRP X0, 0x5E3000
	0x03B775F8 LDR X0, [X0 + 0x368]
	0x03B775FC BL 0x1C16CF4
	0x03B77600 MOVZ W8, 0x1
	0x03B77604 STRB W8, [X22 + 0xA69]
	0x03B77608 CBZ X21, 0x3B7775C
	0x03B7760C ADRP X10, 0x5E3000
	0x03B77610 LDR X8, [X21]
	0x03B77614 LDR X10, [X10 + 0x328]
	0x03B77618 LDRH W9, [X8 + 0x12E]
	0x03B7761C LDR X1, [X10]
	0x03B77620 CBZ X9, 0x3B77644
	0x03B77624 LDR X10, [X8 + 0xB0]
	0x03B77628 ADD X10, X10, 0x8
	0x03B7762C LDUR X11, [X10 - 0x8]
	0x03B77630 CMP X11, X1
	0x03B77634 B.EQ 0x3B77654
	0x03B77638 SUBS X9, X9, 0x1
	0x03B7763C ADD X10, X10, 0x10
	0x03B77640 B.NE 0x3B7762C
	0x03B77644 MOVZ W2, 0x8
	0x03B77648 MOV X0, X21
	0x03B7764C BL 0x1C5C788
	0x03B77650 B 0x3B77664
	0x03B77654 LDR W9, [X10]
	0x03B77658 ADD W9, W9, 0x8
	0x03B7765C ADD X8, X8, W9, 0x4, SXTW
	0x03B77660 ADD X0, X8, 0x138
	0x03B77664 LDP X8, X2, [X0]
	0x03B77668 MOV X0, X21
	0x03B7766C MOV X1, X19
	0x03B77670 BLR X8
	0x03B77674 TBNZ X0, 0x0, 0x3B77748
	0x03B77678 ADRP X9, 0x5E3000
	0x03B7767C LDR X9, [X9 + 0x368]
	0x03B77680 LDR X8, [X21]
	0x03B77684 LDR X9, [X9]
	0x03B77688 LDRB W11, [X8 + 0x130]
	0x03B7768C LDRB W10, [X9 + 0x130]
	0x03B77690 CMP W11, W10
	0x03B77694 B.CC 0x3B776C0
	0x03B77698 LDR X11, [X8 + 0xC8]
	0x03B7769C ADD X10, X11, X10, 0x3, LSL
	0x03B776A0 LDUR X10, [X10 - 0x8]
	0x03B776A4 CMP X10, X9
	0x03B776A8 B.NE 0x3B776C0
	0x03B776AC LDR X9, [X8 + 0x708]
	0x03B776B0 LDR X1, [X8 + 0x710]
	0x03B776B4 MOV X0, X21
	0x03B776B8 BLR X9
	0x03B776BC TBNZ X0, 0x0, 0x3B77748
	0x03B776C0 CBZ X19, 0x3B7775C
	0x03B776C4 ADRP X10, 0x5E3000
	0x03B776C8 LDR X8, [X19]
	0x03B776CC LDR X10, [X10 + 0x160]
	0x03B776D0 LDRH W9, [X8 + 0x12E]
	0x03B776D4 LDR X1, [X10]
	0x03B776D8 CBZ X9, 0x3B776FC
	0x03B776DC LDR X10, [X8 + 0xB0]
	0x03B776E0 ADD X10, X10, 0x8
	0x03B776E4 LDUR X11, [X10 - 0x8]
	0x03B776E8 CMP X11, X1
	0x03B776EC B.EQ 0x3B7770C
	0x03B776F0 SUBS X9, X9, 0x1
	0x03B776F4 ADD X10, X10, 0x10
	0x03B776F8 B.NE 0x3B776E4
	0x03B776FC MOVZ W2, 0x7
	0x03B77700 MOV X0, X19
	0x03B77704 BL 0x1C5C788
	0x03B77708 B 0x3B7771C
	0x03B7770C LDR W9, [X10]
	0x03B77710 ADD W9, W9, 0x7
	0x03B77714 ADD X8, X8, W9, 0x4, SXTW
	0x03B77718 ADD X0, X8, 0x138
	0x03B7771C LDP X8, X1, [X0]
	0x03B77720 MOV X0, X19
	0x03B77724 BLR X8
	0x03B77728 CMP W0, 0x1
	0x03B7772C B.EQ 0x3B77740
	0x03B77730 CBNZ W0, 0x3B77748
	0x03B77734 MOV X0, X20
	0x03B77738 MOV X1, X19
	0x03B7773C BL 0x3B77760
	0x03B77740 MOVZ W0, 0x1
	0x03B77744 B 0x3B7774C
	0x03B77748 MOV W0, W31
	0x03B7774C LDP X20, X19, [X31 + 0x20]
	0x03B77750 LDP X22, X21, [X31 + 0x10]
	0x03B77754 LDR X30, [X31], #0x30
	0x03B77758 RET
	0x03B7775C BL 0x1C16F20
	0x03B77760 STP X30, X23, [X31 - 0x30]!
	0x03B77764 STP X22, X21, [X31 + 0x10]
	0x03B77768 STP X20, X19, [X31 + 0x20]
	0x03B7776C ADRP X21, 0x86B000
	0x03B77770 LDRB W8, [X21 + 0xA6B]
	0x03B77774 MOV X19, X1
	0x03B77778 MOV X20, X0
	0x03B7777C TBNZ X8, 0x0, 0x3B777AC
	0x03B77780 ADRP X0, 0x5E3000
	0x03B77784 LDR X0, [X0 + 0x160]
	0x03B77788 BL 0x1C16CF4
	0x03B7778C ADRP X0, 0x5E3000
	0x03B77790 LDR X0, [X0 + 0x168]
	0x03B77794 BL 0x1C16CF4
	0x03B77798 ADRP X0, 0x5E3000
	0x03B7779C LDR X0, [X0 + 0x170]
	0x03B777A0 BL 0x1C16CF4
	0x03B777A4 MOVZ W8, 0x1
	0x03B777A8 STRB W8, [X21 + 0xA6B]
	0x03B777AC CBZ X19, 0x3B778C0
	0x03B777B0 ADRP X22, 0x5E3000
	0x03B777B4 LDR X8, [X19]
	0x03B777B8 LDR X22, [X22 + 0x160]
	0x03B777BC LDRH W9, [X8 + 0x12E]
	0x03B777C0 LDR X1, [X22]
	0x03B777C4 CBZ X9, 0x3B777E8
	0x03B777C8 LDR X10, [X8 + 0xB0]
	0x03B777CC ADD X10, X10, 0x8
	0x03B777D0 LDUR X11, [X10 - 0x8]
	0x03B777D4 CMP X11, X1
	0x03B777D8 B.EQ 0x3B777F8
	0x03B777DC SUBS X9, X9, 0x1
	0x03B777E0 ADD X10, X10, 0x10
	0x03B777E4 B.NE 0x3B777D0
	0x03B777E8 MOVZ W2, 0x4
	0x03B777EC MOV X0, X19
	0x03B777F0 BL 0x1C5C788
	0x03B777F4 B 0x3B77808
	0x03B777F8 LDR W9, [X10]
	0x03B777FC ADD W9, W9, 0x4
	0x03B77800 ADD X8, X8, W9, 0x4, SXTW
	0x03B77804 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x86C000
	009 Move W8, [X23+2656]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5E4000
	019 Move X0, [X0+328]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E4000
	022 Move X0, [X0+800]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E4000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2656], W8
	029 Compare X20, 0
	030 JumpIfEqual {175}
	031 Move X23, 0x5E4000
	032 Move X23, [X23+3616]
	033 Move [X20+32], X19
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X23]
	040 Move X8, [X0+184]
	041 Move X1, X31
	042 Move X2, X31
	043 Move X19, [X8+144]
	044 Move X0, X19
	045 Call IntPtr.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move X0, X19
	051 Move X1, X31
	052 Call ProfilerUnsafeUtility.BeginSample, X0
	053 Compare X22, 0
	054 JumpIfEqual {176}
	055 Move X23, 0x5E4000
	056 Move X8, [X22]
	057 Move X23, [X23+800]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X23]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 7
	069 Move X0, X22
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 7
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X2, [X0+8]
	077 Move X0, X22
	078 Move X1, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X21, 0
	081 JumpIfEqual {179}
	082 Move X24, 0x5E4000
	083 Move X8, [X21]
	084 Move X24, [X24+328]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X24]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 7
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 7
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X21
	105 Move X1, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X22]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 8
	119 Move X0, X22
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 8
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X22
	128 Move X1, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X21]
	131 Move X1, [X24]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 8
	142 Move X0, X21
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 8
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X2, [X0+8]
	150 Move X0, X21
	151 Move X1, X20
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X20, X31
	154 Move X0, X19
	155 Move X1, X31
	156 Move X2, X31
	157 Call IntPtr.op_Inequality, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {165}
	162 Move X0, X19
	163 Move X1, X31
	164 Call ProfilerUnsafeUtility.EndSample, X0
	165 Compare X20, 0
	166 JumpIfNotEqual {177}
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X24, [X31+16]
	172 Move X23, [X31+24]
	173 Move X30, [X31+64]
	174 Return 
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X20
	178 Call 0x1C17F18
	179 Call 0x1C17F20
	180 Move X21, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X21
	183 Call 0x3EB2AD0
	184 Move X20, [X0]
	185 Call 0x3EB2AE0
	186 Move X20, X31
	187 Move X21, X0
	188 Move X0, X19
	189 Move X1, X31
	190 Move X2, X31
	191 Call IntPtr.op_Inequality, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {199}
	196 Move X0, X19
	197 Move X1, X31
	198 Call ProfilerUnsafeUtility.EndSample, X0
	199 Compare X20, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X21
	202 Call 0x1D2D690
	203 Move X0, X20
	204 Call 0x1C17F18
	205 Call 0x1991590

Method: System.Void HoverEnterInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B76448 BLR X8
	0x03B7644C MOV X20, X31
	0x03B76450 MOV X0, X19
	0x03B76454 MOV X1, X31
	0x03B76458 MOV X2, X31
	0x03B7645C BL 0x33C5D2C
	0x03B76460 TBZ X0, 0x0, 0x3B76470
	0x03B76464 MOV X0, X19
	0x03B76468 MOV X1, X31
	0x03B7646C BL 0x3BFEA0C
	0x03B76470 CBNZ X20, 0x3B76490
	0x03B76474 LDP X20, X19, [X31 + 0x30]
	0x03B76478 LDP X22, X21, [X31 + 0x20]
	0x03B7647C LDP X24, X23, [X31 + 0x10]
	0x03B76480 LDR X30, [X31], #0x40
	0x03B76484 RET
	0x03B76488 BL 0x1C16F20
	0x03B7648C BL 0x1C16F20
	0x03B76490 MOV X0, X20
	0x03B76494 BL 0x1C16F18
	0x03B76498 BL 0x1C16F20
	0x03B7649C B 0x3B764A8
	0x03B764A0 B 0x3B764A8
	0x03B764A4 B 0x3B764A8
	0x03B764A8 MOV X21, X0
	0x03B764AC CMP W1, 0x1
	0x03B764B0 B.NE 0x3B764C8
	0x03B764B4 MOV X0, X21
	0x03B764B8 BL 0x3EB1AD0
	0x03B764BC LDR X20, [X0]
	0x03B764C0 BL 0x3EB1AE0
	0x03B764C4 B 0x3B76450
	0x03B764C8 MOV X20, X31
	0x03B764CC B 0x3B764D4
	0x03B764D0 MOV X21, X0
	0x03B764D4 MOV X0, X19
	0x03B764D8 MOV X1, X31
	0x03B764DC MOV X2, X31
	0x03B764E0 BL 0x33C5D2C
	0x03B764E4 TBZ X0, 0x0, 0x3B764F4
	0x03B764E8 MOV X0, X19
	0x03B764EC MOV X1, X31
	0x03B764F0 BL 0x3BFEA0C
	0x03B764F4 CBNZ X20, 0x3B76500
	0x03B764F8 MOV X0, X21
	0x03B764FC BL 0x1D2C690
	0x03B76500 MOV X0, X20
	0x03B76504 BL 0x1C16F18
	0x03B76508 BL 0x1990590
	0x03B7650C STR X30, [X31 - 0x40]!
	0x03B76510 STP X24, X23, [X31 + 0x10]
	0x03B76514 STP X22, X21, [X31 + 0x20]
	0x03B76518 STP X20, X19, [X31 + 0x30]
	0x03B7651C ADRP X23, 0x86C000
	0x03B76520 LDRB W8, [X23 + 0xA60]
	0x03B76524 MOV X20, X3
	0x03B76528 MOV X21, X2
	0x03B7652C MOV X22, X1
	0x03B76530 MOV X19, X0
	0x03B76534 TBNZ X8, 0x0, 0x3B76564
	0x03B76538 ADRP X0, 0x5E4000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x86D000
	008 Move W8, [X23+2657]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5E5000
	018 Move X0, [X0+1080]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E5000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2657], W8
	025 Compare X21, 0
	026 JumpIfEqual {38}
	027 Move X8, 0x5E5000
	028 Move X8, [X8+872]
	029 Move X9, [X21]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X22]
	039 Move X5, [X8+1128]
	040 Move X4, [X8+1136]
	041 Move X0, X22
	042 Move X1, X21
	043 Move X2, X20
	044 Move X3, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 CallNoReturn X5
	052 Compare X20, 0
	053 JumpIfEqual {38}
	054 Move X8, 0x5E5000
	055 Move X8, [X8+1080]
	056 Move X9, [X20]
	057 Move X8, [X8]
	058 Move W11, [X9+304]
	059 Move W10, [X8+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9+200]
	062 Add X9, X9, X10
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X22]
	066 Move X5, [X8+1512]
	067 Move X4, [X8+1520]

Method: System.Void HoverExit(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B77808 LDP X8, X1, [X0]
	0x03B7780C MOV X0, X19
	0x03B77810 BLR X8
	0x03B77814 CBZ X0, 0x3B778C0
	0x03B77818 LDR W8, [X0 + 0x18]
	0x03B7781C SUBS W21, W8, 0x1
	0x03B77820 B.MI 0x3B778B0
	0x03B77824 ADRP X23, 0x5E3000
	0x03B77828 LDR X23, [X23 + 0x170]
	0x03B7782C LDR X8, [X19]
	0x03B77830 LDR X1, [X22]
	0x03B77834 LDRH W9, [X8 + 0x12E]
	0x03B77838 CBZ X9, 0x3B7785C
	0x03B7783C LDR X10, [X8 + 0xB0]
	0x03B77840 ADD X10, X10, 0x8
	0x03B77844 LDUR X11, [X10 - 0x8]
	0x03B77848 CMP X11, X1
	0x03B7784C B.EQ 0x3B7786C
	0x03B77850 SUBS X9, X9, 0x1
	0x03B77854 ADD X10, X10, 0x10
	0x03B77858 B.NE 0x3B77844
	0x03B7785C MOVZ W2, 0x4
	0x03B77860 MOV X0, X19
	0x03B77864 BL 0x1C5C788
	0x03B77868 B 0x3B7787C
	0x03B7786C LDR W9, [X10]
	0x03B77870 ADD W9, W9, 0x4
	0x03B77874 ADD X8, X8, W9, 0x4, SXTW
	0x03B77878 ADD X0, X8, 0x138
	0x03B7787C LDP X8, X1, [X0]
	0x03B77880 MOV X0, X19
	0x03B77884 BLR X8
	0x03B77888 CBZ X0, 0x3B778C0
	0x03B7788C LDR X2, [X23]
	0x03B77890 MOV W1, W21
	0x03B77894 BL 0x301BCCC
	0x03B77898 MOV X1, X0
	0x03B7789C MOV X0, X20
	0x03B778A0 MOV X2, X19
	0x03B778A4 BL 0x3B738C0
	0x03B778A8 SUBS W21, W21, 0x1
	0x03B778AC B.PL 0x3B7782C
	0x03B778B0 LDP X20, X19, [X31 + 0x20]
	0x03B778B4 LDP X22, X21, [X31 + 0x10]
	0x03B778B8 LDP X30, X23, [X31], #0x30
	0x03B778BC RET
	0x03B778C0 BL 0x1C16F20
	0x03B778C4 LDR X8, [X0]
	0x03B778C8 LDR X3, [X8 + 0x298]
	0x03B778CC LDR X2, [X8 + 0x2A0]
	0x03B778D0 BR X3
	0x03B778D4 LDR X8, [X0]
	0x03B778D8 LDR X3, [X8 + 0x2B8]
	0x03B778DC LDR X2, [X8 + 0x2C0]
	0x03B778E0 BR X3
	0x03B778E4 LDR X8, [X0]
	0x03B778E8 LDR X3, [X8 + 0x2D8]
	0x03B778EC LDR X2, [X8 + 0x2E0]
	0x03B778F0 BR X3
	0x03B778F4 LDR X8, [X0]
	0x03B778F8 LDR X3, [X8 + 0x2F8]
	0x03B778FC LDR X2, [X8 + 0x300]
	0x03B77900 BR X3
	0x03B77904 STR X30, [X31 - 0x30]!
	0x03B77908 STP X22, X21, [X31 + 0x10]
	0x03B7790C STP X20, X19, [X31 + 0x20]
	0x03B77910 ADRP X22, 0x86B000
	0x03B77914 ADRP X21, 0x5E3000
	0x03B77918 LDRB W8, [X22 + 0xA6E]
	0x03B7791C LDR X21, [X21 + 0xE20]
	0x03B77920 MOV X19, X1
	0x03B77924 MOV X20, X0
	0x03B77928 TBNZ X8, 0x0, 0x3B7794C
	0x03B7792C ADRP X0, 0x5E4000
	0x03B77930 LDR X0, [X0 + 0x8C0]
	0x03B77934 BL 0x1C16CF4
	0x03B77938 ADRP X0, 0x5E3000
	0x03B7793C LDR X0, [X0 + 0xE20]
	0x03B77940 BL 0x1C16CF4
	0x03B77944 MOVZ W8, 0x1
	0x03B77948 STRB W8, [X22 + 0xA6E]
	0x03B7794C LDR X1, [X20 + 0xF8]
	0x03B77950 ADRP X22, 0x5E4000
	0x03B77954 LDR X22, [X22 + 0x8C0]
	0x03B77958 MOV X0, X20
	0x03B7795C BL 0x3B72B44
	0x03B77960 LDR X0, [X21]
	0x03B77964 LDR X20, [X20 + 0xF8]
	0x03B77968 LDR W8, [X0 + 0xE0]
	0x03B7796C CBNZ W8, 0x3B77974
	0x03B77970 BL 0x1C16DFC
	0x03B77974 LDR X2, [X22]
	0x03B77978 MOV X0, X20
	0x03B7797C MOV X1, X19
	0x03B77980 LDP X20, X19, [X31 + 0x20]
	0x03B77984 LDP X22, X21, [X31 + 0x10]
	0x03B77988 LDR X30, [X31], #0x30
	0x03B7798C B 0x22AD328
	0x03B77990 STR X30, [X31 - 0x30]!
	0x03B77994 STP X22, X21, [X31 + 0x10]
	0x03B77998 STP X20, X19, [X31 + 0x20]
	0x03B7799C ADRP X22, 0x86B000
	0x03B779A0 ADRP X21, 0x5E3000
	0x03B779A4 LDRB W8, [X22 + 0xA6F]
	0x03B779A8 LDR X21, [X21 + 0xE20]
	0x03B779AC MOV X19, X1
	0x03B779B0 MOV X20, X0
	0x03B779B4 TBNZ X8, 0x0, 0x3B779D8
	0x03B779B8 ADRP X0, 0x5E4000
	0x03B779BC LDR X0, [X0 + 0xF8]
	0x03B779C0 BL 0x1C16CF4
	0x03B779C4 ADRP X0, 0x5E3000
	0x03B779C8 LDR X0, [X0 + 0xE20]
	0x03B779CC BL 0x1C16CF4
	0x03B779D0 MOVZ W8, 0x1
	0x03B779D4 STRB W8, [X22 + 0xA6F]
	0x03B779D8 LDR X1, [X20 + 0x100]
	0x03B779DC ADRP X22, 0x5E4000
	0x03B779E0 LDR X22, [X22 + 0xF8]
	0x03B779E4 MOV X0, X20
	0x03B779E8 BL 0x3B72BB0
	0x03B779EC LDR X0, [X21]
	0x03B779F0 LDR X20, [X20 + 0x100]
	0x03B779F4 LDR W8, [X0 + 0xE0]
	0x03B779F8 CBNZ W8, 0x3B77A00
	0x03B779FC BL 0x1C16DFC
	0x03B77A00 LDR X2, [X22]
	0x03B77A04 MOV X0, X20
	0x03B77A08 MOV X1, X19
	0x03B77A0C LDP X20, X19, [X31 + 0x20]
	0x03B77A10 LDP X22, X21, [X31 + 0x10]
	0x03B77A14 LDR X30, [X31], #0x30
	0x03B77A18 B 0x22AD328
	0x03B77A1C STR X30, [X31 - 0x10]!
	0x03B77A20 LDR X0, [X0 + 0x98]
	0x03B77A24 CBZ X0, 0x3B77A38
	0x03B77A28 LDR X8, [X0]
	0x03B77A2C LDP X3, X2, [X8 + 0x178]
	0x03B77A30 LDR X30, [X31], #0x10
	0x03B77A34 BR X3
	0x03B77A38 BL 0x1C16F20
	0x03B77A3C STR X30, [X31 - 0x10]!
	0x03B77A40 LDR X0, [X0 + 0xA8]
	0x03B77A44 CBZ X0, 0x3B77A58
	0x03B77A48 LDR X8, [X0]
	0x03B77A4C LDP X3, X2, [X8 + 0x178]
	0x03B77A50 LDR X30, [X31], #0x10
	0x03B77A54 BR X3
	0x03B77A58 BL 0x1C16F20
	0x03B77A5C B 0x3B77A60
	0x03B77A60 SUB X31, X31, 0x30
	0x03B77A64 STP X30, X21, [X31 + 0x10]
	0x03B77A68 STP X20, X19, [X31 + 0x20]
	0x03B77A6C ADRP X21, 0x86B000
	0x03B77A70 LDRB W8, [X21 + 0xA70]
	0x03B77A74 MOV X19, X1
	0x03B77A78 MOV X20, X0
	0x03B77A7C TBNZ X8, 0x0, 0x3B77A94
	0x03B77A80 ADRP X0, 0x5E3000
	0x03B77A84 LDR X0, [X0 + 0x438]
	0x03B77A88 BL 0x1C16CF4
	0x03B77A8C MOVZ W8, 0x1
	0x03B77A90 STRB W8, [X21 + 0xA70]
	0x03B77A94 ADD X2, X31, 0x8
	0x03B77A98 MOV X0, X20
	0x03B77A9C MOV X1, X19
	0x03B77AA0 STR X31, [X31 + 0x8]
	0x03B77AA4 BL 0x3B72C1C
	0x03B77AA8 MOV W8, W0
	0x03B77AAC MOV X0, X31
	0x03B77AB0 TBZ X8, 0x0, 0x3B77AF8
	0x03B77AB4 LDR X8, [X31 + 0x8]
	0x03B77AB8 CBZ X8, 0x3B77ADC
	0x03B77ABC ADRP X9, 0x5E3000
	0x03B77AC0 LDR X9, [X9 + 0x438]
	0x03B77AC4 LDR X10, [X8]
	0x03B77AC8 LDR X9, [X9]
	0x03B77ACC LDRB W12, [X10 + 0x130]
	0x03B77AD0 LDRB W11, [X9 + 0x130]
	0x03B77AD4 CMP W12, W11
	0x03B77AD8 B.CS 0x3B77AE4
	0x03B77ADC MOV X0, X31
	0x03B77AE0 B 0x3B77AF8
	0x03B77AE4 LDR X10, [X10 + 0xC8]
	0x03B77AE8 ADD X10, X10, X11, 0x3, LSL
	0x03B77AEC LDUR X10, [X10 - 0x8]
	0x03B77AF0 CMP X10, X9
	0x03B77AF4 CSEL X0, X8, X31, EQ
	0x03B77AF8 LDP X20, X19, [X31 + 0x20]
	0x03B77AFC LDP X30, X21, [X31 + 0x10]
	0x03B77B00 ADD X31, X31, 0x30

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x86C000
	009 Move W8, [X23+2658]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5E4000
	019 Move X0, [X0+328]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E4000
	022 Move X0, [X0+800]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E4000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2658], W8
	029 Compare X20, 0
	030 JumpIfEqual {175}
	031 Move X23, 0x5E4000
	032 Move X23, [X23+3616]
	033 Move [X20+32], X19
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X23]
	040 Move X8, [X0+184]
	041 Move X1, X31
	042 Move X2, X31
	043 Move X19, [X8+152]
	044 Move X0, X19
	045 Call IntPtr.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move X0, X19
	051 Move X1, X31
	052 Call ProfilerUnsafeUtility.BeginSample, X0
	053 Compare X22, 0
	054 JumpIfEqual {176}
	055 Move X23, 0x5E4000
	056 Move X8, [X22]
	057 Move X23, [X23+800]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X23]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 9
	069 Move X0, X22
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 9
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X2, [X0+8]
	077 Move X0, X22
	078 Move X1, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X21, 0
	081 JumpIfEqual {179}
	082 Move X24, 0x5E4000
	083 Move X8, [X21]
	084 Move X24, [X24+328]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X24]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 9
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 9
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X21
	105 Move X1, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X22]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 10
	119 Move X0, X22
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 10
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X22
	128 Move X1, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X21]
	131 Move X1, [X24]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 10
	142 Move X0, X21
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 10
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X2, [X0+8]
	150 Move X0, X21
	151 Move X1, X20
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X20, X31
	154 Move X0, X19
	155 Move X1, X31
	156 Move X2, X31
	157 Call IntPtr.op_Inequality, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {165}
	162 Move X0, X19
	163 Move X1, X31
	164 Call ProfilerUnsafeUtility.EndSample, X0
	165 Compare X20, 0
	166 JumpIfNotEqual {177}
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X24, [X31+16]
	172 Move X23, [X31+24]
	173 Move X30, [X31+64]
	174 Return 
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X20
	178 Call 0x1C17F18
	179 Call 0x1C17F20
	180 Move X21, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X21
	183 Call 0x3EB2AD0
	184 Move X20, [X0]
	185 Call 0x3EB2AE0
	186 Move X20, X31
	187 Move X21, X0
	188 Move X0, X19
	189 Move X1, X31
	190 Move X2, X31
	191 Call IntPtr.op_Inequality, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {199}
	196 Move X0, X19
	197 Move X1, X31
	198 Call ProfilerUnsafeUtility.EndSample, X0
	199 Compare X20, 0
	200 JumpIfNotEqual {203}
	201 Move X0, X21
	202 Call 0x1D2D690
	203 Move X0, X20
	204 Call 0x1C17F18
	205 Call 0x1991590

Method: System.Void HoverExitInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B76754 MOV X2, X31
	0x03B76758 BL 0x33C5D2C
	0x03B7675C TBZ X0, 0x0, 0x3B7676C
	0x03B76760 MOV X0, X19
	0x03B76764 MOV X1, X31
	0x03B76768 BL 0x3BFEA0C
	0x03B7676C CBNZ X20, 0x3B7678C
	0x03B76770 LDP X20, X19, [X31 + 0x30]
	0x03B76774 LDP X22, X21, [X31 + 0x20]
	0x03B76778 LDP X24, X23, [X31 + 0x10]
	0x03B7677C LDR X30, [X31], #0x40
	0x03B76780 RET
	0x03B76784 BL 0x1C16F20
	0x03B76788 BL 0x1C16F20
	0x03B7678C MOV X0, X20
	0x03B76790 BL 0x1C16F18
	0x03B76794 BL 0x1C16F20
	0x03B76798 B 0x3B767A4
	0x03B7679C B 0x3B767A4
	0x03B767A0 B 0x3B767A4
	0x03B767A4 MOV X21, X0
	0x03B767A8 CMP W1, 0x1
	0x03B767AC B.NE 0x3B767C4
	0x03B767B0 MOV X0, X21
	0x03B767B4 BL 0x3EB1AD0
	0x03B767B8 LDR X20, [X0]
	0x03B767BC BL 0x3EB1AE0
	0x03B767C0 B 0x3B7674C
	0x03B767C4 MOV X20, X31
	0x03B767C8 B 0x3B767D0
	0x03B767CC MOV X21, X0
	0x03B767D0 MOV X0, X19
	0x03B767D4 MOV X1, X31
	0x03B767D8 MOV X2, X31
	0x03B767DC BL 0x33C5D2C
	0x03B767E0 TBZ X0, 0x0, 0x3B767F0
	0x03B767E4 MOV X0, X19
	0x03B767E8 MOV X1, X31
	0x03B767EC BL 0x3BFEA0C
	0x03B767F0 CBNZ X20, 0x3B767FC
	0x03B767F4 MOV X0, X21
	0x03B767F8 BL 0x1D2C690
	0x03B767FC MOV X0, X20
	0x03B76800 BL 0x1C16F18
	0x03B76804 BL 0x1990590
	0x03B76808 STR X30, [X31 - 0x40]!
	0x03B7680C STP X24, X23, [X31 + 0x10]
	0x03B76810 STP X22, X21, [X31 + 0x20]
	0x03B76814 STP X20, X19, [X31 + 0x30]
	0x03B76818 ADRP X23, 0x86C000
	0x03B7681C LDRB W8, [X23 + 0xA62]
	0x03B76820 MOV X20, X3
	0x03B76824 MOV X21, X2
	0x03B76828 MOV X22, X1
	0x03B7682C MOV X19, X0
	0x03B76830 TBNZ X8, 0x0, 0x3B76860
	0x03B76834 ADRP X0, 0x5E4000
	0x03B76838 LDR X0, [X0 + 0x148]
	0x03B7683C BL 0x1C16CF4
	0x03B76840 ADRP X0, 0x5E4000
	0x03B76844 LDR X0, [X0 + 0x320]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x86D000
	008 Move W8, [X23+2659]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5E5000
	018 Move X0, [X0+1080]
	019 Call 0x1C17CF4
	020 Move X0, 0x5E5000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2659], W8
	025 Compare X21, 0
	026 JumpIfEqual {38}
	027 Move X8, 0x5E5000
	028 Move X8, [X8+872]
	029 Move X9, [X21]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X22]
	039 Move X5, [X8+1144]
	040 Move X4, [X8+1152]
	041 Move X0, X22
	042 Move X1, X21
	043 Move X2, X20
	044 Move X3, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 CallNoReturn X5
	052 Compare X20, 0
	053 JumpIfEqual {38}
	054 Move X8, 0x5E5000
	055 Move X8, [X8+1080]
	056 Move X9, [X20]
	057 Move X8, [X8]
	058 Move W11, [X9+304]
	059 Move W10, [X8+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X9+200]
	062 Add X9, X9, X10
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X22]
	066 Move X5, [X8+1528]
	067 Move X4, [X8+1536]

Method: System.Void InteractorSelectValidTargets(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)

Disassembly:
	0x03B77B04 RET
	0x03B77B08 SUB X31, X31, 0x60
	0x03B77B0C STP X30, X23, [X31 + 0x30]
	0x03B77B10 STP X22, X21, [X31 + 0x40]
	0x03B77B14 STP X20, X19, [X31 + 0x50]
	0x03B77B18 ADRP X21, 0x86B000
	0x03B77B1C LDRB W8, [X21 + 0xA71]
	0x03B77B20 MOV X19, X1
	0x03B77B24 MOV X20, X0
	0x03B77B28 TBNZ X8, 0x0, 0x3B77BA0
	0x03B77B2C ADRP X0, 0x5E4000
	0x03B77B30 LDR X0, [X0 + 0x8C8]
	0x03B77B34 BL 0x1C16CF4
	0x03B77B38 ADRP X0, 0x5E4000
	0x03B77B3C LDR X0, [X0 + 0x8D0]
	0x03B77B40 BL 0x1C16CF4
	0x03B77B44 ADRP X0, 0x5E4000
	0x03B77B48 LDR X0, [X0 + 0x8D8]
	0x03B77B4C BL 0x1C16CF4
	0x03B77B50 ADRP X0, 0x5E4000
	0x03B77B54 LDR X0, [X0 + 0x8E0]
	0x03B77B58 BL 0x1C16CF4
	0x03B77B5C ADRP X0, 0x5E4000
	0x03B77B60 LDR X0, [X0 + 0x8E8]
	0x03B77B64 BL 0x1C16CF4
	0x03B77B68 ADRP X0, 0x5E4000
	0x03B77B6C LDR X0, [X0 + 0x8F0]
	0x03B77B70 BL 0x1C16CF4
	0x03B77B74 ADRP X0, 0x5E4000
	0x03B77B78 LDR X0, [X0 + 0x8F8]
	0x03B77B7C BL 0x1C16CF4
	0x03B77B80 ADRP X0, 0x5E4000
	0x03B77B84 LDR X0, [X0 + 0x900]
	0x03B77B88 BL 0x1C16CF4
	0x03B77B8C ADRP X0, 0x5E3000
	0x03B77B90 LDR X0, [X0 + 0x438]
	0x03B77B94 BL 0x1C16CF4
	0x03B77B98 MOVZ W8, 0x1
	0x03B77B9C STRB W8, [X21 + 0xA71]
	0x03B77BA0 MOVI V0.2D, 0x0
	0x03B77BA4 STR X31, [X31 + 0x20]
	0x03B77BA8 STP V0, V0, [X31]
	0x03B77BAC LDR X0, [X19]
	0x03B77BB0 CBZ X0, 0x3B77C68
	0x03B77BB4 ADRP X8, 0x5E4000
	0x03B77BB8 LDR X8, [X8 + 0x8D0]
	0x03B77BBC LDR X1, [X8]
	0x03B77BC0 BL 0x2AA5220
	0x03B77BC4 LDR X0, [X20 + 0x88]
	0x03B77BC8 CBZ X0, 0x3B77C80
	0x03B77BCC ADRP X8, 0x5E4000
	0x03B77BD0 LDR X8, [X8 + 0x8D8]
	0x03B77BD4 ADRP X20, 0x5E4000
	0x03B77BD8 LDR X20, [X20 + 0x8E8]
	0x03B77BDC ADRP X22, 0x5E3000
	0x03B77BE0 LDR X1, [X8]
	0x03B77BE4 ADRP X23, 0x5E4000
	0x03B77BE8 ADRP X21, 0x5E4000
	0x03B77BEC LDR X22, [X22 + 0x438]
	0x03B77BF0 LDR X23, [X23 + 0x8C8]
	0x03B77BF4 LDR X21, [X21 + 0x8E0]
	0x03B77BF8 ADD X8, X31, 0x0
	0x03B77BFC BL 0x2AA54BC
	0x03B77C00 LDR X1, [X20]
	0x03B77C04 ADD X0, X31, 0x0
	0x03B77C08 BL 0x2C0A728
	0x03B77C0C TBZ X0, 0x0, 0x3B77C5C
	0x03B77C10 LDR X2, [X31 + 0x18]
	0x03B77C14 CBZ X2, 0x3B77C00
	0x03B77C18 LDR X9, [X2]
	0x03B77C1C LDR X8, [X22]
	0x03B77C20 LDRB W11, [X9 + 0x130]
	0x03B77C24 LDRB W10, [X8 + 0x130]
	0x03B77C28 CMP W11, W10
	0x03B77C2C B.CC 0x3B77C00
	0x03B77C30 LDR X9, [X9 + 0xC8]
	0x03B77C34 ADD X9, X9, X10, 0x3, LSL
	0x03B77C38 LDUR X9, [X9 - 0x8]
	0x03B77C3C CMP X9, X8
	0x03B77C40 B.NE 0x3B77C00
	0x03B77C44 LDR X0, [X19]
	0x03B77C48 CBZ X0, 0x3B77C7C
	0x03B77C4C LDR X1, [X31 + 0x10]
	0x03B77C50 LDR X3, [X23]
	0x03B77C54 BL 0x2AA5098
	0x03B77C58 B 0x3B77C00
	0x03B77C5C LDR X1, [X21]
	0x03B77C60 ADD X0, X31, 0x0
	0x03B77C64 BL 0x2C0A83C
	0x03B77C68 LDP X20, X19, [X31 + 0x50]
	0x03B77C6C LDP X22, X21, [X31 + 0x40]
	0x03B77C70 LDP X30, X23, [X31 + 0x30]
	0x03B77C74 ADD X31, X31, 0x60
	0x03B77C78 RET
	0x03B77C7C BL 0x1C16F20
	0x03B77C80 BL 0x1C16F20
	0x03B77C84 B 0x3B77C8C
	0x03B77C88 B 0x3B77C8C
	0x03B77C8C MOV X19, X0
	0x03B77C90 CMP W1, 0x1
	0x03B77C94 B.NE 0x3B77CC0
	0x03B77C98 MOV X0, X19
	0x03B77C9C BL 0x3EB1AD0
	0x03B77CA0 LDR X20, [X0]
	0x03B77CA4 BL 0x3EB1AE0
	0x03B77CA8 LDR X1, [X21]
	0x03B77CAC ADD X0, X31, 0x0
	0x03B77CB0 BL 0x2C0A83C
	0x03B77CB4 CBZ X20, 0x3B77C68
	0x03B77CB8 MOV X0, X20
	0x03B77CBC BL 0x1C16F18
	0x03B77CC0 MOV X20, X31
	0x03B77CC4 B 0x3B77CCC
	0x03B77CC8 MOV X19, X0
	0x03B77CCC LDR X1, [X21]
	0x03B77CD0 ADD X0, X31, 0x0
	0x03B77CD4 BL 0x2C0A83C
	0x03B77CD8 CBNZ X20, 0x3B77CE4
	0x03B77CDC MOV X0, X19
	0x03B77CE0 BL 0x1D2C690
	0x03B77CE4 MOV X0, X20
	0x03B77CE8 BL 0x1C16F18
	0x03B77CEC BL 0x1990590
	0x03B77CF0 STP X30, X23, [X31 - 0x30]!
	0x03B77CF4 STP X22, X21, [X31 + 0x10]
	0x03B77CF8 STP X20, X19, [X31 + 0x20]
	0x03B77CFC ADRP X23, 0x86B000
	0x03B77D00 ADRP X22, 0x5E3000
	0x03B77D04 LDRB W8, [X23 + 0xA72]
	0x03B77D08 LDR X22, [X22 + 0xE20]
	0x03B77D0C MOV X19, X2
	0x03B77D10 MOV X21, X1
	0x03B77D14 MOV X20, X0
	0x03B77D18 TBNZ X8, 0x0, 0x3B77D3C
	0x03B77D1C ADRP X0, 0x5E4000
	0x03B77D20 LDR X0, [X0 + 0xF8]
	0x03B77D24 BL 0x1C16CF4
	0x03B77D28 ADRP X0, 0x5E3000
	0x03B77D2C LDR X0, [X0 + 0xE20]
	0x03B77D30 BL 0x1C16CF4
	0x03B77D34 MOVZ W8, 0x1
	0x03B77D38 STRB W8, [X23 + 0xA72]
	0x03B77D3C LDR X2, [X20 + 0x100]
	0x03B77D40 ADRP X23, 0x5E4000
	0x03B77D44 LDR X23, [X23 + 0xF8]
	0x03B77D48 MOV X0, X20
	0x03B77D4C MOV X1, X21
	0x03B77D50 BL 0x3B6E2CC
	0x03B77D54 LDR X0, [X22]
	0x03B77D58 LDR X20, [X20 + 0x100]
	0x03B77D5C LDR W8, [X0 + 0xE0]
	0x03B77D60 CBNZ W8, 0x3B77D68
	0x03B77D64 BL 0x1C16DFC
	0x03B77D68 LDR X2, [X23]
	0x03B77D6C MOV X0, X20
	0x03B77D70 MOV X1, X19
	0x03B77D74 BL 0x22AD328
	0x03B77D78 MOV X0, X19
	0x03B77D7C LDP X20, X19, [X31 + 0x20]
	0x03B77D80 LDP X22, X21, [X31 + 0x10]
	0x03B77D84 LDP X30, X23, [X31], #0x30
	0x03B77D88 RET
	0x03B77D8C LDR X8, [X0]
	0x03B77D90 LDR X4, [X8 + 0x568]
	0x03B77D94 LDR X3, [X8 + 0x570]
	0x03B77D98 BR X4
	0x03B77D9C RET
	0x03B77DA0 LDR X8, [X0]
	0x03B77DA4 LDR X3, [X8 + 0x348]
	0x03B77DA8 LDR X2, [X8 + 0x350]
	0x03B77DAC BR X3
	0x03B77DB0 LDR X8, [X0]
	0x03B77DB4 LDR X3, [X8 + 0x358]
	0x03B77DB8 LDR X2, [X8 + 0x360]
	0x03B77DBC BR X3
	0x03B77DC0 RET
	0x03B77DC4 LDR X8, [X0]
	0x03B77DC8 LDR X3, [X8 + 0x378]
	0x03B77DCC LDR X2, [X8 + 0x380]
	0x03B77DD0 BR X3
	0x03B77DD4 LDR X8, [X0]
	0x03B77DD8 LDR X3, [X8 + 0x388]
	0x03B77DDC LDR X2, [X8 + 0x390]
	0x03B77DE0 BR X3
	0x03B77DE4 LDR X8, [X0]
	0x03B77DE8 LDR X4, [X8 + 0x3C8]
	0x03B77DEC LDR X3, [X8 + 0x3D0]
	0x03B77DF0 BR X4
	0x03B77DF4 LDR X8, [X0]
	0x03B77DF8 LDR X4, [X8 + 0x3D8]
	0x03B77DFC LDR X3, [X8 + 0x3E0]
	0x03B77E00 BR X4
	0x03B77E04 LDR X8, [X0]
	0x03B77E08 LDR X4, [X8 + 0x3E8]
	0x03B77E0C LDR X3, [X8 + 0x3F0]
	0x03B77E10 BR X4
	0x03B77E14 LDR X8, [X0]
	0x03B77E18 LDR X4, [X8 + 0x3F8]
	0x03B77E1C LDR X3, [X8 + 0x400]
	0x03B77E20 BR X4
	0x03B77E24 LDR X8, [X0]
	0x03B77E28 LDR X4, [X8 + 0x408]
	0x03B77E2C LDR X3, [X8 + 0x410]
	0x03B77E30 BR X4
	0x03B77E34 LDR X8, [X0]
	0x03B77E38 LDR X4, [X8 + 0x418]
	0x03B77E3C LDR X3, [X8 + 0x420]
	0x03B77E40 BR X4
	0x03B77E44 LDR X8, [X0]
	0x03B77E48 LDR X5, [X8 + 0x448]
	0x03B77E4C LDR X4, [X8 + 0x450]
	0x03B77E50 BR X5
	0x03B77E54 LDR X8, [X0]
	0x03B77E58 LDR X5, [X8 + 0x458]
	0x03B77E5C LDR X4, [X8 + 0x460]
	0x03B77E60 BR X5
	0x03B77E64 LDR X8, [X0]
	0x03B77E68 LDR X5, [X8 + 0x468]
	0x03B77E6C LDR X4, [X8 + 0x470]
	0x03B77E70 BR X5
	0x03B77E74 LDR X8, [X0]
	0x03B77E78 LDR X5, [X8 + 0x478]
	0x03B77E7C LDR X4, [X8 + 0x480]
	0x03B77E80 BR X5
	0x03B77E84 RET
	0x03B77E88 RET
	0x03B77E8C STP X29, X30, [X31 - 0x60]!
	0x03B77E90 STP X28, X27, [X31 + 0x10]
	0x03B77E94 STP X26, X25, [X31 + 0x20]
	0x03B77E98 STP X24, X23, [X31 + 0x30]
	0x03B77E9C STP X22, X21, [X31 + 0x40]
	0x03B77EA0 STP X20, X19, [X31 + 0x50]
	0x03B77EA4 ADRP X20, 0x86B000
	0x03B77EA8 ADRP X22, 0x57E000
	0x03B77EAC ADRP X21, 0x57E000
	0x03B77EB0 ADRP X24, 0x5E3000
	0x03B77EB4 ADRP X23, 0x5E3000
	0x03B77EB8 LDRB W8, [X20 + 0xA73]
	0x03B77EBC LDR X22, [X22 + 0x850]
	0x03B77EC0 LDR X21, [X21 + 0x858]
	0x03B77EC4 LDR X24, [X24 + 0x530]
	0x03B77EC8 LDR X23, [X23 + 0x520]
	0x03B77ECC MOV X19, X0
	0x03B77ED0 TBNZ X8, 0x0, 0x3B782F0
	0x03B77ED4 ADRP X0, 0x5E4000
	0x03B77ED8 LDR X0, [X0 + 0x908]
	0x03B77EDC BL 0x1C16CF4
	0x03B77EE0 ADRP X0, 0x5E4000
	0x03B77EE4 LDR X0, [X0 + 0x910]
	0x03B77EE8 BL 0x1C16CF4
	0x03B77EEC ADRP X0, 0x5E4000
	0x03B77EF0 LDR X0, [X0 + 0x918]
	0x03B77EF4 BL 0x1C16CF4
	0x03B77EF8 ADRP X0, 0x5E4000
	0x03B77EFC LDR X0, [X0 + 0x920]
	0x03B77F00 BL 0x1C16CF4
	0x03B77F04 ADRP X0, 0x5E4000
	0x03B77F08 LDR X0, [X0 + 0x928]
	0x03B77F0C BL 0x1C16CF4
	0x03B77F10 ADRP X0, 0x5E4000
	0x03B77F14 LDR X0, [X0 + 0x930]
	0x03B77F18 BL 0x1C16CF4
	0x03B77F1C ADRP X0, 0x5E3000
	0x03B77F20 LDR X0, [X0 + 0x518]
	0x03B77F24 BL 0x1C16CF4
	0x03B77F28 ADRP X0, 0x5E3000
	0x03B77F2C LDR X0, [X0 + 0x520]
	0x03B77F30 BL 0x1C16CF4
	0x03B77F34 ADRP X0, 0x5E3000
	0x03B77F38 LDR X0, [X0 + 0x528]
	0x03B77F3C BL 0x1C16CF4
	0x03B77F40 ADRP X0, 0x5E3000
	0x03B77F44 LDR X0, [X0 + 0x530]
	0x03B77F48 BL 0x1C16CF4
	0x03B77F4C ADRP X0, 0x5E4000
	0x03B77F50 LDR X0, [X0 + 0x938]
	0x03B77F54 BL 0x1C16CF4
	0x03B77F58 ADRP X0, 0x5E4000
	0x03B77F5C LDR X0, [X0 + 0x940]
	0x03B77F60 BL 0x1C16CF4
	0x03B77F64 ADRP X0, 0x5E4000
	0x03B77F68 LDR X0, [X0 + 0x948]
	0x03B77F6C BL 0x1C16CF4
	0x03B77F70 ADRP X0, 0x5E4000
	0x03B77F74 LDR X0, [X0 + 0x950]
	0x03B77F78 BL 0x1C16CF4
	0x03B77F7C ADRP X0, 0x5E4000
	0x03B77F80 LDR X0, [X0 + 0x958]
	0x03B77F84 BL 0x1C16CF4
	0x03B77F88 ADRP X0, 0x5E4000
	0x03B77F8C LDR X0, [X0 + 0x960]
	0x03B77F90 BL 0x1C16CF4
	0x03B77F94 ADRP X0, 0x5E4000
	0x03B77F98 LDR X0, [X0 + 0x968]
	0x03B77F9C BL 0x1C16CF4
	0x03B77FA0 ADRP X0, 0x5E4000
	0x03B77FA4 LDR X0, [X0 + 0x970]
	0x03B77FA8 BL 0x1C16CF4
	0x03B77FAC ADRP X0, 0x5E4000
	0x03B77FB0 LDR X0, [X0 + 0x978]
	0x03B77FB4 BL 0x1C16CF4
	0x03B77FB8 ADRP X0, 0x5E4000
	0x03B77FBC LDR X0, [X0 + 0x980]
	0x03B77FC0 BL 0x1C16CF4
	0x03B77FC4 ADRP X0, 0x5E4000
	0x03B77FC8 LDR X0, [X0 + 0x988]
	0x03B77FCC BL 0x1C16CF4
	0x03B77FD0 ADRP X0, 0x5E4000
	0x03B77FD4 LDR X0, [X0 + 0x990]
	0x03B77FD8 BL 0x1C16CF4
	0x03B77FDC ADRP X0, 0x5E4000
	0x03B77FE0 LDR X0, [X0 + 0x998]
	0x03B77FE4 BL 0x1C16CF4
	0x03B77FE8 ADRP X0, 0x5E4000
	0x03B77FEC LDR X0, [X0 + 0x9A0]
	0x03B77FF0 BL 0x1C16CF4
	0x03B77FF4 ADRP X0, 0x5E4000
	0x03B77FF8 LDR X0, [X0 + 0x9A8]
	0x03B77FFC BL 0x1C16CF4
	0x03B78000 ADRP X0, 0x5E3000
	0x03B78004 LDR X0, [X0 + 0x9B0]
	0x03B78008 BL 0x1C16CF4
	0x03B7800C ADRP X0, 0x5E3000
	0x03B78010 LDR X0, [X0 + 0x9B8]
	0x03B78014 BL 0x1C16CF4
	0x03B78018 ADRP X0, 0x5E3000
	0x03B7801C LDR X0, [X0 + 0x9C0]
	0x03B78020 BL 0x1C16CF4
	0x03B78024 ADRP X0, 0x5E3000
	0x03B78028 LDR X0, [X0 + 0x9C8]
	0x03B7802C BL 0x1C16CF4
	0x03B78030 ADRP X0, 0x5E3000
	0x03B78034 LDR X0, [X0 + 0x9D0]
	0x03B78038 BL 0x1C16CF4
	0x03B7803C ADRP X0, 0x5E3000
	0x03B78040 LDR X0, [X0 + 0x9D8]
	0x03B78044 BL 0x1C16CF4
	0x03B78048 ADRP X0, 0x5E3000
	0x03B7804C LDR X0, [X0 + 0x9E0]
	0x03B78050 BL 0x1C16CF4
	0x03B78054 ADRP X0, 0x5E3000
	0x03B78058 LDR X0, [X0 + 0x9E8]
	0x03B7805C BL 0x1C16CF4
	0x03B78060 ADRP X0, 0x5E3000
	0x03B78064 LDR X0, [X0 + 0x9F0]
	0x03B78068 BL 0x1C16CF4
	0x03B7806C ADRP X0, 0x5E3000
	0x03B78070 LDR X0, [X0 + 0x9F8]
	0x03B78074 BL 0x1C16CF4
	0x03B78078 ADRP X0, 0x5E3000
	0x03B7807C LDR X0, [X0 + 0xA00]
	0x03B78080 BL 0x1C16CF4
	0x03B78084 ADRP X0, 0x5E3000
	0x03B78088 LDR X0, [X0 + 0xA08]
	0x03B7808C BL 0x1C16CF4
	0x03B78090 ADRP X0, 0x5E3000
	0x03B78094 LDR X0, [X0 + 0xA10]
	0x03B78098 BL 0x1C16CF4
	0x03B7809C ADRP X0, 0x5E3000
	0x03B780A0 LDR X0, [X0 + 0xA18]
	0x03B780A4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x86C000
	015 Move W8, [X21+2660]
	016 Move X23, X2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {67}
	023 Move X0, 0x5E5000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0x5E5000
	027 Move X0, [X0+2208]
	028 Call 0x1C17CF4
	029 Move X0, 0x5E5000
	030 Move X0, [X0+216]
	031 Call 0x1C17CF4
	032 Move X0, 0x5E5000
	033 Move X0, [X0+224]
	034 Call 0x1C17CF4
	035 Move X0, 0x5E5000
	036 Move X0, [X0+232]
	037 Call 0x1C17CF4
	038 Move X0, 0x5E4000
	039 Move X0, [X0+352]
	040 Call 0x1C17CF4
	041 Move X0, 0x5E4000
	042 Move X0, [X0+808]
	043 Call 0x1C17CF4
	044 Move X0, 0x5E5000
	045 Move X0, [X0+1592]
	046 Call 0x1C17CF4
	047 Move X0, 0x5E5000
	048 Move X0, [X0+2216]
	049 Call 0x1C17CF4
	050 Move X0, 0x5E5000
	051 Move X0, [X0+2224]
	052 Call 0x1C17CF4
	053 Move X0, 0x5E5000
	054 Move X0, [X0+2232]
	055 Call 0x1C17CF4
	056 Move X0, 0x5E5000
	057 Move X0, [X0+240]
	058 Call 0x1C17CF4
	059 Move X0, 0x5E4000
	060 Move X0, [X0+3736]
	061 Call 0x1C17CF4
	062 Move X0, 0x5E4000
	063 Move X0, [X0+3616]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+2660], W8
	067 Move [X31+32], X31
	068 Move [X31+40], X31
	069 Move [X31+48], X31
	070 Move [X31+24], X31
	071 Compare X23, 0
	072 JumpIfEqual {343}
	073 Move W8, [X23+24]
	074 Compare W8, 0
	075 JumpIfEqual {329}
	076 Move X26, 0x5E5000
	077 Move X26, [X26+1592]
	078 Move X24, 0x5E5000
	079 Move X0, X19
	080 Move X1, [X26]
	081 Move X24, [X24+240]
	082 Call 0x1C17E00
	083 Move X21, X0
	084 Compare X0, 0
	085 JumpIfEqual {100}
	086 Move X8, [X21]
	087 Move X1, [X26]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X21
	098 Move W2, W31
	099 Call 0x1C5D788
	100 Move W22, W31
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X21
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move W22, W0
	109 Move X27, 0x5E5000
	110 Move X28, 0x5E4000
	111 Move X27, [X27+224]
	112 Move X28, [X28+352]
	113 Move X1, [X24]
	114 Add X8, X31, 0
	115 Move X0, X23
	116 Call List`1<Object>.GetEnumerator, X0
	117 Move V0, [X31]
	118 Move X8, [X31+16]
	119 Move X23, X31
	120 Move W25, W31
	121 Move [X31+2], V0
	122 Move [X31+48], X8
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CSET not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 And W8, W8, W25
	128 Or W29, W9, W8
	129 Move X1, [X27]
	130 Add X0, X31, 32
	131 Call Enumerator<Object>.MoveNext, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {324}
	136 Move X0, [X31+48]
	137 Move X1, [X28]
	138 Call 0x1C17E00
	139 Move X24, X0
	140 Compare X0, 0
	141 JumpIfEqual {129}
	142 Compare W29, 0
	143 JumpIfEqual {159}
	144 Move X8, [X20]
	145 Move X9, [X8+568]
	146 Move X3, [X8+576]
	147 Move X0, X20
	148 Move X1, X19
	149 Move X2, X24
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {129}
	155 Move X0, X20
	156 Move X1, X19
	157 Move X2, X24
	158 Call XRInteractionManager.SelectEnterInternal, X0, X1, X2
	159 Move X0, X20
	160 Move X1, X19
	161 Move X2, X24
	162 Call XRInteractionManager.IsSelectPossible, X0, X1, X2
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {129}
	167 Move TEMP, X25
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {236}
	171 Move X0, [X20+192]
	172 Compare X0, 0
	173 JumpIfEqual {350}
	174 Move X8, 0x5E5000
	175 Move X8, [X8+2064]
	176 Move X3, [X8]
	177 Add X2, X31, 24
	178 Move X1, X24
	179 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {212}
	184 Move X8, 0x5E4000
	185 Move X8, [X8+3616]
	186 Move X0, [X8]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {194}
	190 Call 0x1C17DFC
	191 Move X8, 0x5E4000
	192 Move X8, [X8+3616]
	193 Move X0, [X8]
	194 Move X8, [X0+184]
	195 Move X0, [X8+8]
	196 Compare X0, 0
	197 JumpIfEqual {351}
	198 Move X8, 0x5E5000
	199 Move X8, [X8+2216]
	200 Move X1, [X8]
	201 Call 0x2EF1FD0, X0
	202 Move [X31+24], X0
	203 Move X2, X0
	204 Move X0, [X20+192]
	205 Compare X0, 0
	206 JumpIfEqual {352}
	207 Move X8, 0x5E5000
	208 Move X8, [X8+2208]
	209 Move X3, [X8]
	210 Move X1, X24
	211 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	212 Move X0, [X31+24]
	213 Compare X0, 0
	214 JumpIfEqual {349}
	215 Move X9, 0x5E5000
	216 Move W10, [X0+28]
	217 Move X8, [X0+16]
	218 Move X9, [X9+2232]
	219 Add W10, W10, 1
	220 Move X9, [X9]
	221 Move [X0+28], W10
	222 Compare X8, 0
	223 JumpIfEqual {348}
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Move W11, [X8+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Add W9, W10, 1
	228 Add X8, X8, X10
	229 Move [X0+24], W9
	230 Move [X8+32], X21
	231 Move X8, [X9+32]
	232 Move X8, [X8+192]
	233 Move X2, [X8+112]
	234 Move X1, X21
	235 Call List`1<Object>.AddWithResize, X0, X1
	236 Compare X21, 0
	237 JumpIfEqual {345}
	238 Move X8, [X21]
	239 Move X1, [X26]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move W2, 1
	250 Move X0, X21
	251 Call 0x1C5D788
	252 Move W9, [X10]
	253 Add W9, W9, 1
	254 Add X8, X8, W9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X21
	259 NotImplemented "Instruction BLR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CSEL not yet implemented."
	262 Compare X0, 0
	263 JumpIfEqual {288}
	264 Compare X23, 0
	265 JumpIfEqual {347}
	266 Move X9, 0x5E5000
	267 Move W10, [X23+28]
	268 Move X8, [X23+16]
	269 Move X9, [X9+2224]
	270 Add W10, W10, 1
	271 Move X9, [X9]
	272 Move [X23+28], W10
	273 Compare X8, 0
	274 JumpIfEqual {346}
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Move W11, [X8+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Add W9, W10, 1
	279 Add X8, X8, X10
	280 Move [X23+24], W9
	281 Move [X8+32], X24
	282 Move X8, [X9+32]
	283 Move X8, [X8+192]
	284 Move X2, [X8+112]
	285 Move X0, X23
	286 Move X1, X24
	287 Call List`1<Object>.AddWithResize, X0, X1
	288 Compare X19, 0
	289 JumpIfEqual {344}
	290 Move X8, [X19]
	291 Move X10, 0x5E4000
	292 NotImplemented "Instruction LDRH not yet implemented."
	293 Move X10, [X10+808]
	294 Move X1, [X10]
	295 Compare X9, 0
	296 JumpIfEqual {303}
	297 Move X10, [X8+176]
	298 Add X10, X10, 8
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Subtract X9, X9, 1
	302 Add X10, X10, 16
	303 Move W2, 5
	304 Move X0, X19
	305 Call 0x1C5D788
	306 Move W9, [X10]
	307 Add W9, W9, 5
	308 Add X8, X8, W9
	309 Add X0, X8, 312
	310 Move X8, [X0]
	311 Move X1, [X0+8]
	312 Move X0, X19
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Move W25, 1
	315 Move TEMP, X0
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfNotEqual {123}
	319 Move W25, 1
	320 Move X0, X20
	321 Move X1, X19
	322 Move X2, X24
	323 Call XRInteractionManager.SelectEnterInternal, X0, X1, X2
	324 Move X8, 0x5E5000
	325 Move X8, [X8+216]
	326 Add X0, X31, 32
	327 Move X1, [X8]
	328 Call Enumerator<Object>.Dispose, X0
	329 Move X20, [X31+144]
	330 Move X19, [X31+152]
	331 Move X22, [X31+128]
	332 Move X21, [X31+136]
	333 Move X24, [X31+112]
	334 Move X23, [X31+120]
	335 Move X26, [X31+96]
	336 Move X25, [X31+104]
	337 Move X28, [X31+80]
	338 Move X27, [X31+88]
	339 Move X29, [X31+64]
	340 Move X30, [X31+72]
	341 Add X31, X31, 160
	342 Return 
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Call 0x1C17F20
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Move X19, X0
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X0, X19
	356 Call 0x3EB2AD0
	357 Move X20, [X0]
	358 Call 0x3EB2AE0
	359 Move X8, 0x5E4000
	360 Move X8, [X8+216]
	361 Add X0, X31, 32
	362 Move X1, [X8]
	363 Call Enumerator<Object>.Dispose, X0
	364 Compare X20, 0
	365 JumpIfEqual {329}
	366 Move X0, X20
	367 Call 0x1C17F18
	368 Move X20, X31
	369 Move X19, X0
	370 Move X8, 0x5E4000
	371 Move X8, [X8+216]
	372 Move X1, [X8]
	373 Add X0, X31, 32
	374 Call Enumerator<Object>.Dispose, X0
	375 Compare X20, 0
	376 JumpIfNotEqual {379}
	377 Move X0, X19
	378 Call 0x1D2D690
	379 Move X0, X20
	380 Call 0x1C17F18
	381 Call 0x1991590

Method: System.Void InteractorSelectValidTargetsInternal(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> deprecatedValidTargets)

Disassembly:
	0x03B6F77C BL 0x1C16F18
	0x03B6F780 CMP W1, 0x1
	0x03B6F784 B.NE 0x3B6F7AC
	0x03B6F788 BL 0x3EB1AD0
	0x03B6F78C LDR X21, [X0]
	0x03B6F790 BL 0x3EB1AE0
	0x03B6F794 LDR X1, [X27]
	0x03B6F798 ADD X0, X31, 0x40
	0x03B6F79C BL 0x2BC434C
	0x03B6F7A0 CBZ X21, 0x3B6F5C0
	0x03B6F7A4 MOV X0, X21
	0x03B6F7A8 BL 0x1C16F18
	0x03B6F7AC MOV X19, X0
	0x03B6F7B0 MOV X21, X31
	0x03B6F7B4 B 0x3B6F7BC
	0x03B6F7B8 MOV X19, X0
	0x03B6F7BC LDR X1, [X27]
	0x03B6F7C0 ADD X0, X31, 0x40
	0x03B6F7C4 BL 0x2BC434C
	0x03B6F7C8 CBNZ X21, 0x3B6F7D4
	0x03B6F7CC MOV X0, X19
	0x03B6F7D0 BL 0x1D2C690
	0x03B6F7D4 MOV X0, X21
	0x03B6F7D8 BL 0x1C16F18
	0x03B6F7DC BL 0x1990590
	0x03B6F7E0 SUB X31, X31, 0x80
	0x03B6F7E4 STR X30, [X31 + 0x40]
	0x03B6F7E8 STP X24, X23, [X31 + 0x50]
	0x03B6F7EC STP X22, X21, [X31 + 0x60]
	0x03B6F7F0 STP X20, X19, [X31 + 0x70]
	0x03B6F7F4 ADRP X21, 0x873000
	0x03B6F7F8 LDRB W8, [X21 + 0xA21]
	0x03B6F7FC MOV W19, W1
	0x03B6F800 MOV X20, X0
	0x03B6F804 TBNZ X8, 0x0, 0x3B6F858
	0x03B6F808 ADRP X0, 0x5EC000
	0x03B6F80C LDR X0, [X0 + 0x6C8]
	0x03B6F810 BL 0x1C16CF4
	0x03B6F814 ADRP X0, 0x5EC000
	0x03B6F818 LDR X0, [X0 + 0xD8]
	0x03B6F81C BL 0x1C16CF4
	0x03B6F820 ADRP X0, 0x5EC000
	0x03B6F824 LDR X0, [X0 + 0xE0]
	0x03B6F828 BL 0x1C16CF4
	0x03B6F82C ADRP X0, 0x5EC000
	0x03B6F830 LDR X0, [X0 + 0xE8]
	0x03B6F834 BL 0x1C16CF4
	0x03B6F838 ADRP X0, 0x5EB000
	0x03B6F83C LDR X0, [X0 + 0x8D8]
	0x03B6F840 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x874000
	008 Move W8, [X23+2661]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x5EC000
	018 Move X0, [X0+872]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2661], W8
	022 Move X8, [X21]
	023 Move X0, X21
	024 Move X1, X20
	025 Move X2, X22
	026 Move X9, [X8+1160]
	027 Move X3, [X8+1168]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X8, 0x5EC000
	032 Move X8, [X8+872]
	033 Move X9, [X20]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X9+200]
	039 Add X9, X9, X10
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Move X8, [X21]
	050 Move X0, X21
	051 Move X1, X20
	052 Move X2, X19
	053 Move X4, [X8+1544]
	054 Move X3, [X8+1552]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 CallNoReturn X4

Method: System.Void InteractorHoverValidTargets(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets)

Disassembly:
	0x03B780A8 ADRP X0, 0x5E3000
	0x03B780AC LDR X0, [X0 + 0xA20]
	0x03B780B0 BL 0x1C16CF4
	0x03B780B4 ADRP X0, 0x5E3000
	0x03B780B8 LDR X0, [X0 + 0xA28]
	0x03B780BC BL 0x1C16CF4
	0x03B780C0 ADRP X0, 0x5E3000
	0x03B780C4 LDR X0, [X0 + 0xA30]
	0x03B780C8 BL 0x1C16CF4
	0x03B780CC ADRP X0, 0x5E3000
	0x03B780D0 LDR X0, [X0 + 0xA38]
	0x03B780D4 BL 0x1C16CF4
	0x03B780D8 ADRP X0, 0x5E3000
	0x03B780DC LDR X0, [X0 + 0xA40]
	0x03B780E0 BL 0x1C16CF4
	0x03B780E4 ADRP X0, 0x5E3000
	0x03B780E8 LDR X0, [X0 + 0xA48]
	0x03B780EC BL 0x1C16CF4
	0x03B780F0 ADRP X0, 0x5E3000
	0x03B780F4 LDR X0, [X0 + 0xA50]
	0x03B780F8 BL 0x1C16CF4
	0x03B780FC ADRP X0, 0x5E3000
	0x03B78100 LDR X0, [X0 + 0xA58]
	0x03B78104 BL 0x1C16CF4
	0x03B78108 ADRP X0, 0x5E3000
	0x03B7810C LDR X0, [X0 + 0xA60]
	0x03B78110 BL 0x1C16CF4
	0x03B78114 ADRP X0, 0x5E3000
	0x03B78118 LDR X0, [X0 + 0xA68]
	0x03B7811C BL 0x1C16CF4
	0x03B78120 ADRP X0, 0x5E3000
	0x03B78124 LDR X0, [X0 + 0xA70]
	0x03B78128 BL 0x1C16CF4
	0x03B7812C ADRP X0, 0x5E3000
	0x03B78130 LDR X0, [X0 + 0xA78]
	0x03B78134 BL 0x1C16CF4
	0x03B78138 ADRP X0, 0x5E3000
	0x03B7813C LDR X0, [X0 + 0xA80]
	0x03B78140 BL 0x1C16CF4
	0x03B78144 ADRP X0, 0x57D000
	0x03B78148 LDR X0, [X0 + 0x858]
	0x03B7814C BL 0x1C16CF4
	0x03B78150 ADRP X0, 0x5E3000
	0x03B78154 LDR X0, [X0 + 0xA88]
	0x03B78158 BL 0x1C16CF4
	0x03B7815C ADRP X0, 0x5E3000
	0x03B78160 LDR X0, [X0 + 0xA90]
	0x03B78164 BL 0x1C16CF4
	0x03B78168 ADRP X0, 0x5E2000
	0x03B7816C LDR X0, [X0 + 0xE48]
	0x03B78170 BL 0x1C16CF4
	0x03B78174 ADRP X0, 0x5E2000
	0x03B78178 LDR X0, [X0 + 0xC50]
	0x03B7817C BL 0x1C16CF4
	0x03B78180 ADRP X0, 0x5E2000
	0x03B78184 LDR X0, [X0 + 0xB20]
	0x03B78188 BL 0x1C16CF4
	0x03B7818C ADRP X0, 0x5E3000
	0x03B78190 LDR X0, [X0 + 0x188]
	0x03B78194 BL 0x1C16CF4
	0x03B78198 ADRP X0, 0x5E2000
	0x03B7819C LDR X0, [X0 + 0xC58]
	0x03B781A0 BL 0x1C16CF4
	0x03B781A4 ADRP X0, 0x5E3000
	0x03B781A8 LDR X0, [X0 + 0xA98]
	0x03B781AC BL 0x1C16CF4
	0x03B781B0 ADRP X0, 0x5E2000
	0x03B781B4 LDR X0, [X0 + 0xE40]
	0x03B781B8 BL 0x1C16CF4
	0x03B781BC ADRP X0, 0x57D000
	0x03B781C0 LDR X0, [X0 + 0x850]
	0x03B781C4 BL 0x1C16CF4
	0x03B781C8 ADRP X0, 0x5E2000
	0x03B781CC LDR X0, [X0 + 0x290]
	0x03B781D0 BL 0x1C16CF4
	0x03B781D4 ADRP X0, 0x5E2000
	0x03B781D8 LDR X0, [X0 + 0xB18]
	0x03B781DC BL 0x1C16CF4
	0x03B781E0 ADRP X0, 0x5E2000
	0x03B781E4 LDR X0, [X0 + 0xA40]
	0x03B781E8 BL 0x1C16CF4
	0x03B781EC ADRP X0, 0x5E3000
	0x03B781F0 LDR X0, [X0 + 0xAA0]
	0x03B781F4 BL 0x1C16CF4
	0x03B781F8 ADRP X0, 0x5E3000
	0x03B781FC LDR X0, [X0 + 0xAA8]
	0x03B78200 BL 0x1C16CF4
	0x03B78204 ADRP X0, 0x5E3000
	0x03B78208 LDR X0, [X0 + 0xAB0]
	0x03B7820C BL 0x1C16CF4
	0x03B78210 ADRP X0, 0x5E3000
	0x03B78214 LDR X0, [X0 + 0xAB8]
	0x03B78218 BL 0x1C16CF4
	0x03B7821C ADRP X0, 0x5E3000
	0x03B78220 LDR X0, [X0 + 0xAC0]
	0x03B78224 BL 0x1C16CF4
	0x03B78228 ADRP X0, 0x5E3000
	0x03B7822C LDR X0, [X0 + 0xAC8]
	0x03B78230 BL 0x1C16CF4
	0x03B78234 ADRP X0, 0x5E2000
	0x03B78238 LDR X0, [X0 + 0x598]
	0x03B7823C BL 0x1C16CF4
	0x03B78240 ADRP X0, 0x5E2000
	0x03B78244 LDR X0, [X0 + 0x5A0]
	0x03B78248 BL 0x1C16CF4
	0x03B7824C ADRP X0, 0x5E3000
	0x03B78250 LDR X0, [X0 + 0xAD0]
	0x03B78254 BL 0x1C16CF4
	0x03B78258 ADRP X0, 0x5E3000
	0x03B7825C LDR X0, [X0 + 0xAD8]
	0x03B78260 BL 0x1C16CF4
	0x03B78264 ADRP X0, 0x5E3000
	0x03B78268 LDR X0, [X0 + 0xAE0]
	0x03B7826C BL 0x1C16CF4
	0x03B78270 ADRP X0, 0x5E3000
	0x03B78274 LDR X0, [X0 + 0xAE8]
	0x03B78278 BL 0x1C16CF4
	0x03B7827C ADRP X0, 0x5E3000
	0x03B78280 LDR X0, [X0 + 0xAF0]
	0x03B78284 BL 0x1C16CF4
	0x03B78288 ADRP X0, 0x5E3000
	0x03B7828C LDR X0, [X0 + 0xAF8]
	0x03B78290 BL 0x1C16CF4
	0x03B78294 ADRP X0, 0x5E3000
	0x03B78298 LDR X0, [X0 + 0xB00]
	0x03B7829C BL 0x1C16CF4
	0x03B782A0 ADRP X0, 0x5E3000
	0x03B782A4 LDR X0, [X0 + 0xB08]
	0x03B782A8 BL 0x1C16CF4
	0x03B782AC ADRP X0, 0x5E3000
	0x03B782B0 LDR X0, [X0 + 0xB10]
	0x03B782B4 BL 0x1C16CF4
	0x03B782B8 ADRP X0, 0x5E3000
	0x03B782BC LDR X0, [X0 + 0xB18]
	0x03B782C0 BL 0x1C16CF4
	0x03B782C4 ADRP X0, 0x5E3000
	0x03B782C8 LDR X0, [X0 + 0xB20]
	0x03B782CC BL 0x1C16CF4
	0x03B782D0 ADRP X0, 0x5E3000
	0x03B782D4 LDR X0, [X0 + 0xB28]
	0x03B782D8 BL 0x1C16CF4
	0x03B782DC ADRP X0, 0x5E3000
	0x03B782E0 LDR X0, [X0 + 0xB30]
	0x03B782E4 BL 0x1C16CF4
	0x03B782E8 MOVZ W8, 0x1
	0x03B782EC STRB W8, [X20 + 0xA73]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0x86B000
	011 Move W8, [X22+2662]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x5E4000
	020 Move X0, [X0+216]
	021 Call 0x1C17CF4
	022 Move X0, 0x5E4000
	023 Move X0, [X0+224]
	024 Call 0x1C17CF4
	025 Move X0, 0x5E4000
	026 Move X0, [X0+232]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E3000
	029 Move X0, [X0+328]
	030 Call 0x1C17CF4
	031 Move X0, 0x5E3000
	032 Move X0, [X0+800]
	033 Call 0x1C17CF4
	034 Move X0, 0x5E4000
	035 Move X0, [X0+240]
	036 Call 0x1C17CF4
	037 Move X0, 0x5E3000
	038 Move X0, [X0+3736]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2662], W8
	042 Move [X31+32], X31
	043 Move [X31+40], X31
	044 Move [X31+48], X31
	045 Compare X21, 0
	046 JumpIfEqual {139}
	047 Move W8, [X21+24]
	048 Compare W8, 0
	049 JumpIfEqual {128}
	050 Move X8, 0x5E4000
	051 Move X8, [X8+240]
	052 Move X23, 0x5E4000
	053 Move X23, [X23+224]
	054 Move X24, 0x5E3000
	055 Move X1, [X8]
	056 Move X25, 0x5E3000
	057 Move X22, 0x5E4000
	058 Move X24, [X24+328]
	059 Move X25, [X25+800]
	060 Move X22, [X22+216]
	061 Add X8, X31, 8
	062 Move X0, X21
	063 Call List`1<Object>.GetEnumerator, X0
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X8, [X31+24]
	066 Move [X31+2], V0
	067 Move [X31+48], X8
	068 Move X1, [X23]
	069 Add X0, X31, 32
	070 Call Enumerator<Object>.MoveNext, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {125}
	075 Move X0, [X31+48]
	076 Move X1, [X24]
	077 Call 0x1C17E00
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {68}
	081 Move X8, [X20]
	082 Move X9, [X8+552]
	083 Move X3, [X8+560]
	084 Move X0, X20
	085 Move X1, X19
	086 Move X2, X21
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {68}
	092 Compare X19, 0
	093 JumpIfEqual {138}
	094 Move X8, [X19]
	095 Move X1, [X25]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move W2, 6
	106 Move X0, X19
	107 Call 0x1C5D788
	108 Move W9, [X10]
	109 Add W9, W9, 6
	110 Add X8, X8, W9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X2, [X0+8]
	114 Move X0, X19
	115 Move X1, X21
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {68}
	121 Move X0, X20
	122 Move X1, X19
	123 Move X2, X21
	124 Call XRInteractionManager.HoverEnterInternal, X0, X1, X2
	125 Move X1, [X22]
	126 Add X0, X31, 32
	127 Call Enumerator<Object>.Dispose, X0
	128 Move X20, [X31+112]
	129 Move X19, [X31+120]
	130 Move X22, [X31+96]
	131 Move X21, [X31+104]
	132 Move X24, [X31+80]
	133 Move X23, [X31+88]
	134 Move X30, [X31+64]
	135 Move X25, [X31+72]
	136 Add X31, X31, 128
	137 Return 
	138 Call 0x1C17F20
	139 Call 0x1C17F20
	140 Move X19, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X19
	143 Call 0x3EB2AD0
	144 Move X20, [X0]
	145 Call 0x3EB2AE0
	146 Move X1, [X22]
	147 Add X0, X31, 32
	148 Call Enumerator<Object>.Dispose, X0
	149 Compare X20, 0
	150 JumpIfEqual {128}
	151 Move X0, X20
	152 Call 0x1C17F18
	153 Move X20, X31
	154 Move X19, X0
	155 Move X1, [X22]
	156 Add X0, X31, 32
	157 Call Enumerator<Object>.Dispose, X0
	158 Compare X20, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X19
	161 Call 0x1D2D690
	162 Move X0, X20
	163 Call 0x1C17F18
	164 Call 0x1991590

Method: System.Void InteractorHoverValidTargetsInternal(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> validTargets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> deprecatedValidTargets)

Disassembly:
	0x03B6F844 ADRP X0, 0x5EC000
	0x03B6F848 LDR X0, [X0 + 0xF0]
	0x03B6F84C BL 0x1C16CF4
	0x03B6F850 MOVZ W8, 0x1
	0x03B6F854 STRB W8, [X21 + 0xA21]
	0x03B6F858 STP X31, X31, [X31 + 0x20]
	0x03B6F85C STR X31, [X31 + 0x30]
	0x03B6F860 LDR X8, [X20 + 0xA8]
	0x03B6F864 CBZ X8, 0x3B6F970
	0x03B6F868 LDR X0, [X8 + 0x10]
	0x03B6F86C CBZ X0, 0x3B6F970
	0x03B6F870 ADRP X8, 0x5EC000
	0x03B6F874 LDR X8, [X8 + 0xF0]
	0x03B6F878 ADRP X23, 0x5EC000
	0x03B6F87C ADRP X24, 0x5EB000
	0x03B6F880 ADRP X22, 0x5EC000
	0x03B6F884 LDR X1, [X8]
	0x03B6F888 LDR X23, [X23 + 0xE0]
	0x03B6F88C LDR X24, [X24 + 0x8D8]
	0x03B6F890 LDR X22, [X22 + 0xD8]
	0x03B6F894 ADD X8, X31, 0x8
	0x03B6F898 BL 0x301CB58
	0x03B6F89C LDUR V0, [X31 + 0x8]
	0x03B6F8A0 LDR X8, [X31 + 0x18]
	0x03B6F8A4 STR V0, [X31 + 0x2]
	0x03B6F8A8 STR X8, [X31 + 0x30]
	0x03B6F8AC LDR X1, [X23]
	0x03B6F8B0 ADD X0, X31, 0x20
	0x03B6F8B4 BL 0x2BC4350
	0x03B6F8B8 TBZ X0, 0x0, 0x3B6F944
	0x03B6F8BC LDR X0, [X20 + 0xA8]
	0x03B6F8C0 CBZ X0, 0x3B6F968
	0x03B6F8C4 LDR X8, [X0]
	0x03B6F8C8 LDR X21, [X31 + 0x30]
	0x03B6F8CC LDP X9, X2, [X8 + 0x188]
	0x03B6F8D0 MOV X1, X21
	0x03B6F8D4 BLR X9
	0x03B6F8D8 TBZ X0, 0x0, 0x3B6F8AC
	0x03B6F8DC CBZ X21, 0x3B6F96C
	0x03B6F8E0 LDR X8, [X21]
	0x03B6F8E4 LDR X1, [X24]
	0x03B6F8E8 LDRH W9, [X8 + 0x12E]
	0x03B6F8EC CBZ X9, 0x3B6F910
	0x03B6F8F0 LDR X10, [X8 + 0xB0]
	0x03B6F8F4 ADD X10, X10, 0x8
	0x03B6F8F8 LDUR X11, [X10 - 0x8]
	0x03B6F8FC CMP X11, X1
	0x03B6F900 B.EQ 0x3B6F920
	0x03B6F904 SUBS X9, X9, 0x1
	0x03B6F908 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x874000
	008 Move W8, [X23+2663]
	009 Move X19, X3
	010 Move X22, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x5EC000
	018 Move X0, [X0+872]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2663], W8
	022 Move X8, [X21]
	023 Move X0, X21
	024 Move X1, X20
	025 Move X2, X22
	026 Move X9, [X8+1176]
	027 Move X3, [X8+1184]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X8, 0x5EC000
	032 Move X8, [X8+872]
	033 Move X9, [X20]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X9+200]
	039 Add X9, X9, X10
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 
	049 Move X8, [X21]
	050 Move X0, X21
	051 Move X1, X20
	052 Move X2, X19
	053 Move X4, [X8+1560]
	054 Move X3, [X8+1568]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 CallNoReturn X4

Method: System.Boolean ResolveExistingFocus(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup interactionGroup, UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B782F0 LDR X0, [X22]
	0x03B782F4 BL 0x1C16F10
	0x03B782F8 LDR X1, [X21]
	0x03B782FC MOV X20, X0
	0x03B78300 BL 0x301B7C4
	0x03B78304 STR X20, [X19 + 0x60]
	0x03B78308 LDR X0, [X24]
	0x03B7830C BL 0x1C16F10
	0x03B78310 LDR X1, [X23]
	0x03B78314 MOV X20, X0
	0x03B78318 BL 0x2D109CC
	0x03B7831C CBZ X20, 0x3B78E7C
	0x03B78320 ADRP X8, 0x5E2000
	0x03B78324 LDR X8, [X8 + 0x598]
	0x03B78328 ADRP X23, 0x5E2000
	0x03B7832C ADRP X24, 0x5E2000
	0x03B78330 MOV X0, X20
	0x03B78334 LDR X2, [X8]
	0x03B78338 LDR X23, [X23 + 0x528]
	0x03B7833C LDR X24, [X24 + 0x518]
	0x03B78340 MOV W1, W31
	0x03B78344 BL 0x25E89B0
	0x03B78348 STR X20, [X19 + 0x68]
	0x03B7834C LDR X0, [X22]
	0x03B78350 BL 0x1C16F10
	0x03B78354 LDR X1, [X21]
	0x03B78358 MOV X20, X0
	0x03B7835C BL 0x301B7C4
	0x03B78360 STR X20, [X19 + 0x70]
	0x03B78364 LDR X0, [X23]
	0x03B78368 BL 0x1C16F10
	0x03B7836C LDR X1, [X24]
	0x03B78370 MOV X20, X0
	0x03B78374 BL 0x2D109CC
	0x03B78378 CBZ X20, 0x3B78E7C
	0x03B7837C ADRP X8, 0x5E2000
	0x03B78380 LDR X8, [X8 + 0x5A0]
	0x03B78384 ADRP X28, 0x5E3000
	0x03B78388 ADRP X21, 0x5E3000
	0x03B7838C ADRP X29, 0x5E3000
	0x03B78390 ADRP X23, 0x5E3000
	0x03B78394 ADRP X27, 0x5E3000
	0x03B78398 ADRP X26, 0x5E3000
	0x03B7839C ADRP X25, 0x5E3000
	0x03B783A0 ADRP X22, 0x5E3000
	0x03B783A4 ADRP X24, 0x5E2000
	0x03B783A8 LDR X28, [X28 + 0x928]
	0x03B783AC LDR X21, [X21 + 0x910]
	0x03B783B0 LDR X29, [X29 + 0x920]
	0x03B783B4 LDR X23, [X23 + 0x918]
	0x03B783B8 LDR X27, [X27 + 0xAB8]
	0x03B783BC LDR X26, [X26 + 0xAA8]
	0x03B783C0 LDR X25, [X25 + 0xAC0]
	0x03B783C4 LDR X22, [X22 + 0xAA0]
	0x03B783C8 LDR X24, [X24 + 0xE40]
	0x03B783CC LDR X2, [X8]
	0x03B783D0 MOV X0, X20
	0x03B783D4 MOV W1, W31
	0x03B783D8 BL 0x25E89B0
	0x03B783DC STR X20, [X19 + 0x78]
	0x03B783E0 LDR X0, [X28]
	0x03B783E4 BL 0x1C16F10
	0x03B783E8 LDR X1, [X21]
	0x03B783EC MOV X20, X0
	0x03B783F0 BL 0x2AA4804
	0x03B783F4 STR X20, [X19 + 0x88]
	0x03B783F8 LDR X0, [X29]
	0x03B783FC BL 0x1C16F10
	0x03B78400 LDR X1, [X23]
	0x03B78404 MOV X20, X0
	0x03B78408 BL 0x2AA4804
	0x03B7840C STR X20, [X19 + 0x90]
	0x03B78410 LDR X0, [X27]
	0x03B78414 BL 0x1C16F10
	0x03B78418 LDR X1, [X26]
	0x03B7841C MOV X20, X0
	0x03B78420 BL 0x25C58F8
	0x03B78424 STR X20, [X19 + 0x98]
	0x03B78428 LDR X0, [X25]
	0x03B7842C BL 0x1C16F10
	0x03B78430 LDR X1, [X22]
	0x03B78434 MOV X20, X0
	0x03B78438 BL 0x25C58F8
	0x03B7843C STR X20, [X19 + 0xA0]
	0x03B78440 ADRP X8, 0x5E3000
	0x03B78444 LDR X8, [X8 + 0xAC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86B000
	007 Move W8, [X22+2664]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5E3000
	016 Move X0, [X0+304]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E3000
	019 Move X0, [X0+2360]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2664], W8
	023 Compare X21, 0
	024 JumpIfEqual {89}
	025 Move X10, 0x5E3000
	026 Move X8, [X21]
	027 Move X10, [X10+2360]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move W2, 7
	039 Move X0, X21
	040 Call 0x1C5D788
	041 Move W9, [X10]
	042 Add W9, W9, 7
	043 Add X8, X8, W9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X1, [X0+8]
	047 Move X0, X21
	048 NotImplemented "Instruction BLR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Compare X19, 0
	051 JumpIfEqual {89}
	052 Move X10, 0x5E3000
	053 Move X8, [X19]
	054 Move X10, [X10+304]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move W2, 7
	066 Move X0, X19
	067 Call 0x1C5D788
	068 Move W9, [X10]
	069 Add W9, W9, 7
	070 Add X8, X8, W9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X20
	079 Move X1, X19
	080 Call XRInteractionManager.ExitInteractableFocus, X0, X1
	081 Move W0, 1
	082 Move W0, W31
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Boolean ResolveExistingSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B785B8 MOV X20, X0
	0x03B785BC LDR X1, [X8]
	0x03B785C0 BL 0x301B7C4
	0x03B785C4 STR X20, [X19 + 0xF0]
	0x03B785C8 ADRP X8, 0x5E3000
	0x03B785CC LDR X8, [X8 + 0xA98]
	0x03B785D0 LDR X0, [X8]
	0x03B785D4 BL 0x1C16F10
	0x03B785D8 ADRP X8, 0x5E3000
	0x03B785DC LDR X8, [X8 + 0xA88]
	0x03B785E0 MOV X20, X0
	0x03B785E4 LDR X1, [X8]
	0x03B785E8 BL 0x301B7C4
	0x03B785EC STR X20, [X19 + 0xF8]
	0x03B785F0 LDR X0, [X24]
	0x03B785F4 BL 0x1C16F10
	0x03B785F8 ADRP X8, 0x5E2000
	0x03B785FC LDR X8, [X8 + 0xE48]
	0x03B78600 ADRP X22, 0x5E3000
	0x03B78604 MOV X20, X0
	0x03B78608 LDR X1, [X8]
	0x03B7860C LDR X22, [X22 + 0xB30]
	0x03B78610 BL 0x301B7C4
	0x03B78614 STR X20, [X19 + 0x100]
	0x03B78618 LDR X0, [X22]
	0x03B7861C LDR W8, [X0 + 0xE0]
	0x03B78620 CBNZ W8, 0x3B7862C
	0x03B78624 BL 0x1C16DFC
	0x03B78628 LDR X0, [X22]
	0x03B7862C LDR X8, [X0 + 0xB8]
	0x03B78630 ADRP X24, 0x5E3000
	0x03B78634 ADRP X23, 0x5E3000
	0x03B78638 LDR X20, [X8 + 0x8]
	0x03B7863C LDR X24, [X24 + 0xA58]
	0x03B78640 LDR X23, [X23 + 0x9C8]
	0x03B78644 CBNZ X20, 0x3B78698
	0x03B78648 LDR W8, [X0 + 0xE0]
	0x03B7864C CBNZ W8, 0x3B78658
	0x03B78650 BL 0x1C16DFC
	0x03B78654 LDR X0, [X22]
	0x03B78658 ADRP X9, 0x5E3000
	0x03B7865C LDR X8, [X0 + 0xB8]
	0x03B78660 LDR X9, [X9 + 0x980]
	0x03B78664 LDR X21, [X8]
	0x03B78668 LDR X0, [X9]
	0x03B7866C BL 0x1C16F10
	0x03B78670 ADRP X8, 0x5E3000
	0x03B78674 LDR X8, [X8 + 0xAD0]
	0x03B78678 MOV X1, X21
	0x03B7867C MOV X3, X31
	0x03B78680 MOV X20, X0
	0x03B78684 LDR X2, [X8]
	0x03B78688 BL 0x2D27AA8
	0x03B7868C LDR X8, [X22]
	0x03B78690 LDR X8, [X8 + 0xB8]
	0x03B78694 STR X20, [X8 + 0x8]
	0x03B78698 LDR X0, [X24]
	0x03B7869C BL 0x1C16F10
	0x03B786A0 LDR X7, [X23]
	0x03B786A4 MOVZ W6, 0x2710
	0x03B786A8 MOV X1, X20
	0x03B786AC MOV X2, X31
	0x03B786B0 MOV X3, X31
	0x03B786B4 MOV X4, X31
	0x03B786B8 MOV W5, W31
	0x03B786BC MOV X21, X0
	0x03B786C0 BL 0x2EF0EC8
	0x03B786C4 STR X21, [X19 + 0x108]
	0x03B786C8 LDR X0, [X22]
	0x03B786CC LDR W8, [X0 + 0xE0]
	0x03B786D0 CBNZ W8, 0x3B786DC
	0x03B786D4 BL 0x1C16DFC
	0x03B786D8 LDR X0, [X22]
	0x03B786DC LDR X8, [X0 + 0xB8]
	0x03B786E0 ADRP X24, 0x5E3000
	0x03B786E4 ADRP X23, 0x5E3000
	0x03B786E8 LDR X20, [X8 + 0x10]
	0x03B786EC LDR X24, [X24 + 0xA48]
	0x03B786F0 LDR X23, [X23 + 0x9D0]
	0x03B786F4 CBNZ X20, 0x3B78748
	0x03B786F8 LDR W8, [X0 + 0xE0]
	0x03B786FC CBNZ W8, 0x3B78708
	0x03B78700 BL 0x1C16DFC
	0x03B78704 LDR X0, [X22]
	0x03B78708 ADRP X9, 0x5E3000
	0x03B7870C LDR X8, [X0 + 0xB8]
	0x03B78710 LDR X9, [X9 + 0x970]
	0x03B78714 LDR X21, [X8]
	0x03B78718 LDR X0, [X9]
	0x03B7871C BL 0x1C16F10
	0x03B78720 ADRP X8, 0x5E3000
	0x03B78724 LDR X8, [X8 + 0xAE8]
	0x03B78728 MOV X1, X21
	0x03B7872C MOV X3, X31
	0x03B78730 MOV X20, X0
	0x03B78734 LDR X2, [X8]
	0x03B78738 BL 0x2D27AA8
	0x03B7873C LDR X8, [X22]
	0x03B78740 LDR X8, [X8 + 0xB8]
	0x03B78744 STR X20, [X8 + 0x10]
	0x03B78748 LDR X0, [X24]
	0x03B7874C BL 0x1C16F10
	0x03B78750 LDR X7, [X23]
	0x03B78754 MOVZ W6, 0x2710
	0x03B78758 MOV X1, X20
	0x03B7875C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86B000
	007 Move W8, [X22+2665]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E3000
	016 Move X0, [X0+352]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E3000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E3000
	022 Move X0, [X0+872]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2665], W8
	026 Compare X21, 0
	027 JumpIfEqual {116}
	028 Move X10, 0x5E3000
	029 Move X8, [X21]
	030 Move X10, [X10+808]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 8
	042 Move X0, X21
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 8
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X2, [X0+8]
	050 Move X0, X21
	051 Move X1, X19
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {109}
	057 Move X9, 0x5E3000
	058 Move X9, [X9+872]
	059 Move X8, [X21]
	060 Move X9, [X9]
	061 Move W11, [X8+304]
	062 Move W10, [X9+304]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X11, [X8+200]
	065 Add X10, X11, X10
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, [X8+1800]
	069 Move X1, [X8+1808]
	070 Move X0, X21
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {109}
	076 Compare X19, 0
	077 JumpIfEqual {116}
	078 Move X10, 0x5E3000
	079 Move X8, [X19]
	080 Move X10, [X10+352]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X1, [X10]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 7
	092 Move X0, X19
	093 Call 0x1C5D788
	094 Move W9, [X10]
	095 Add W9, W9, 7
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Compare W0, 0
	104 JumpIfNotEqual {109}
	105 Move X0, X20
	106 Move X1, X19
	107 Call XRInteractionManager.ExitInteractableSelection, X0, X1
	108 Move W0, 1
	109 Move W0, W31
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Return X0
	116 Call 0x1C17F20

Method: System.Boolean HasInteractionLayerOverlap(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B71030 MOV X20, X0
	0x03B71034 TBNZ X8, 0x0, 0x3B71088
	0x03B71038 ADRP X0, 0x5EA000
	0x03B7103C LDR X0, [X0 + 0x660]
	0x03B71040 BL 0x1C16CF4
	0x03B71044 ADRP X0, 0x5EA000
	0x03B71048 LDR X0, [X0 + 0x668]
	0x03B7104C BL 0x1C16CF4
	0x03B71050 ADRP X0, 0x5EA000
	0x03B71054 LDR X0, [X0 + 0x678]
	0x03B71058 BL 0x1C16CF4
	0x03B7105C ADRP X0, 0x5EA000
	0x03B71060 LDR X0, [X0 + 0x688]
	0x03B71064 BL 0x1C16CF4
	0x03B71068 ADRP X0, 0x5E9000
	0x03B7106C LDR X0, [X0 + 0x938]
	0x03B71070 BL 0x1C16CF4
	0x03B71074 ADRP X0, 0x5EA000
	0x03B71078 LDR X0, [X0 + 0x6B0]
	0x03B7107C BL 0x1C16CF4
	0x03B71080 MOVZ W8, 0x1
	0x03B71084 STRB W8, [X21 + 0xA2C]
	0x03B71088 STP X31, X31, [X31 + 0x20]
	0x03B7108C STR X31, [X31 + 0x30]
	0x03B71090 LDR X8, [X20 + 0xA0]
	0x03B71094 CBZ X8, 0x3B71190
	0x03B71098 LDR X0, [X8 + 0x10]
	0x03B7109C CBZ X0, 0x3B71190
	0x03B710A0 ADRP X8, 0x5EA000
	0x03B710A4 LDR X8, [X8 + 0x6B0]
	0x03B710A8 ADRP X22, 0x5EA000
	0x03B710AC ADRP X23, 0x5E9000
	0x03B710B0 ADRP X21, 0x5EA000
	0x03B710B4 LDR X1, [X8]
	0x03B710B8 LDR X22, [X22 + 0x678]
	0x03B710BC LDR X23, [X23 + 0x938]
	0x03B710C0 LDR X21, [X21 + 0x668]
	0x03B710C4 ADD X8, X31, 0x8
	0x03B710C8 BL 0x301CB58
	0x03B710CC LDUR V0, [X31 + 0x8]
	0x03B710D0 LDR X8, [X31 + 0x18]
	0x03B710D4 STR V0, [X31 + 0x2]
	0x03B710D8 STR X8, [X31 + 0x30]
	0x03B710DC LDR X1, [X22]
	0x03B710E0 ADD X0, X31, 0x20
	0x03B710E4 BL 0x2BC4350
	0x03B710E8 TBZ X0, 0x0, 0x3B71164
	0x03B710EC LDR X20, [X31 + 0x30]
	0x03B710F0 CBZ X20, 0x3B7118C
	0x03B710F4 LDR X8, [X20]
	0x03B710F8 LDR X1, [X23]
	0x03B710FC LDRH W9, [X8 + 0x12E]
	0x03B71100 CBZ X9, 0x3B71124
	0x03B71104 LDR X10, [X8 + 0xB0]
	0x03B71108 ADD X10, X10, 0x8
	0x03B7110C LDUR X11, [X10 - 0x8]
	0x03B71110 CMP X11, X1
	0x03B71114 B.EQ 0x3B71134
	0x03B71118 SUBS X9, X9, 0x1
	0x03B7111C ADD X10, X10, 0x10
	0x03B71120 B.NE 0x3B7110C
	0x03B71124 MOVZ W2, 0x4
	0x03B71128 MOV X0, X20
	0x03B7112C BL 0x1C5C788
	0x03B71130 B 0x3B71144
	0x03B71134 LDR W9, [X10]
	0x03B71138 ADD W9, W9, 0x4
	0x03B7113C ADD X8, X8, W9, 0x4, SXTW
	0x03B71140 ADD X0, X8, 0x138
	0x03B71144 LDP X8, X1, [X0]
	0x03B71148 MOV X0, X20
	0x03B7114C BLR X8
	0x03B71150 MOV X1, X19
	0x03B71154 MOV X2, X31
	0x03B71158 BL 0x321BA08
	0x03B7115C TBZ X0, 0x0, 0x3B710DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x872000
	006 Move W8, [X21+2666]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5EA000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move X0, 0x5EA000
	017 Move X0, [X0+760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2666], W8
	021 Compare X20, 0
	022 JumpIfEqual {85}
	023 Move X10, 0x5EA000
	024 Move X8, [X20]
	025 Move X10, [X10+760]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 4
	037 Move X0, X20
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 4
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X19, 0
	048 JumpIfEqual {85}
	049 Move X10, 0x5EA000
	050 Move X8, [X19]
	051 Move X10, [X10+2264]
	052 Move X20, X0
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 4
	064 Move X0, X19
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 4
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 And X8, X0, X20
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X8, X8
	078 ShiftRight X8, 32
	079 And X8, X8, 0x7FFFFFFF
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSET not yet implemented."
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Boolean ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable interactable)

Disassembly:
	0x03B71160 B 0x3B71168
	0x03B71164 MOV X20, X31
	0x03B71168 LDR X1, [X21]

ISIL:
	001 Move X0, [X0+104]
	002 Move X3, X31
	003 Call XRFilterUtility.Process, X0, X1, X2
	004 Return X0

Method: System.Boolean ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B713D4 MOV X1, X20
	0x03B713D8 MOV X2, X31
	0x03B713DC LDR X0, [X8]

ISIL:
	001 Move X0, [X0+120]
	002 Move X3, X31
	003 Call XRFilterUtility.Process, X0, X1, X2
	004 Return X0

Method: System.Void ExitInteractableSelection(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable)

Disassembly:
	0x03B78760 MOV X3, X31
	0x03B78764 MOV X4, X31
	0x03B78768 MOV W5, W31
	0x03B7876C MOV X21, X0
	0x03B78770 BL 0x2EF0EC8
	0x03B78774 STR X21, [X19 + 0x110]
	0x03B78778 LDR X0, [X22]
	0x03B7877C LDR W8, [X0 + 0xE0]
	0x03B78780 CBNZ W8, 0x3B7878C
	0x03B78784 BL 0x1C16DFC
	0x03B78788 LDR X0, [X22]
	0x03B7878C LDR X8, [X0 + 0xB8]
	0x03B78790 ADRP X24, 0x5E3000
	0x03B78794 ADRP X23, 0x5E3000
	0x03B78798 LDR X20, [X8 + 0x18]
	0x03B7879C LDR X24, [X24 + 0xA40]
	0x03B787A0 LDR X23, [X23 + 0x9E0]
	0x03B787A4 CBNZ X20, 0x3B787F8
	0x03B787A8 LDR W8, [X0 + 0xE0]
	0x03B787AC CBNZ W8, 0x3B787B8
	0x03B787B0 BL 0x1C16DFC
	0x03B787B4 LDR X0, [X22]
	0x03B787B8 ADRP X9, 0x5E3000
	0x03B787BC LDR X8, [X0 + 0xB8]
	0x03B787C0 LDR X9, [X9 + 0x950]
	0x03B787C4 LDR X21, [X8]
	0x03B787C8 LDR X0, [X9]
	0x03B787CC BL 0x1C16F10
	0x03B787D0 ADRP X8, 0x5E3000
	0x03B787D4 LDR X8, [X8 + 0xAF0]
	0x03B787D8 MOV X1, X21
	0x03B787DC MOV X3, X31
	0x03B787E0 MOV X20, X0
	0x03B787E4 LDR X2, [X8]
	0x03B787E8 BL 0x2D27AA8
	0x03B787EC LDR X8, [X22]
	0x03B787F0 LDR X8, [X8 + 0xB8]
	0x03B787F4 STR X20, [X8 + 0x18]
	0x03B787F8 LDR X0, [X24]
	0x03B787FC BL 0x1C16F10
	0x03B78800 LDR X7, [X23]
	0x03B78804 MOVZ W6, 0x2710
	0x03B78808 MOV X1, X20
	0x03B7880C MOV X2, X31
	0x03B78810 MOV X3, X31
	0x03B78814 MOV X4, X31
	0x03B78818 MOV W5, W31
	0x03B7881C MOV X21, X0
	0x03B78820 BL 0x2EF0EC8
	0x03B78824 STR X21, [X19 + 0x118]
	0x03B78828 LDR X0, [X22]
	0x03B7882C LDR W8, [X0 + 0xE0]
	0x03B78830 CBNZ W8, 0x3B7883C
	0x03B78834 BL 0x1C16DFC
	0x03B78838 LDR X0, [X22]
	0x03B7883C LDR X8, [X0 + 0xB8]
	0x03B78840 ADRP X24, 0x5E3000
	0x03B78844 ADRP X23, 0x5E3000
	0x03B78848 LDR X20, [X8 + 0x20]
	0x03B7884C LDR X24, [X24 + 0xA30]
	0x03B78850 LDR X23, [X23 + 0x9E8]
	0x03B78854 CBNZ X20, 0x3B788A8
	0x03B78858 LDR W8, [X0 + 0xE0]
	0x03B7885C CBNZ W8, 0x3B78868
	0x03B78860 BL 0x1C16DFC
	0x03B78864 LDR X0, [X22]
	0x03B78868 ADRP X9, 0x5E3000
	0x03B7886C LDR X8, [X0 + 0xB8]
	0x03B78870 LDR X9, [X9 + 0x938]
	0x03B78874 LDR X21, [X8]
	0x03B78878 LDR X0, [X9]
	0x03B7887C BL 0x1C16F10
	0x03B78880 ADRP X8, 0x5E3000
	0x03B78884 LDR X8, [X8 + 0xAF8]
	0x03B78888 MOV X1, X21
	0x03B7888C MOV X3, X31
	0x03B78890 MOV X20, X0
	0x03B78894 LDR X2, [X8]
	0x03B78898 BL 0x2D27AA8
	0x03B7889C LDR X8, [X22]
	0x03B788A0 LDR X8, [X8 + 0xB8]
	0x03B788A4 STR X20, [X8 + 0x20]
	0x03B788A8 LDR X0, [X24]
	0x03B788AC BL 0x1C16F10
	0x03B788B0 LDR X7, [X23]
	0x03B788B4 MOVZ W6, 0x2710
	0x03B788B8 MOV X1, X20
	0x03B788BC MOV X2, X31
	0x03B788C0 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x86B000
	008 Move W8, [X21+2667]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E3000
	016 Move X0, [X0+352]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E3000
	019 Move X0, [X0+360]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E3000
	022 Move X0, [X0+368]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2667], W8
	026 Compare X19, 0
	027 JumpIfEqual {97}
	028 Move X22, 0x5E3000
	029 Move X8, [X19]
	030 Move X22, [X22+352]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 4
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 4
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {97}
	054 Move W8, [X0+24]
	055 Subtract W21, W8, 1
	056 Move X23, 0x5E3000
	057 Move X23, [X23+368]
	058 Move X8, [X19]
	059 Move X1, [X22]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 4
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 4
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {97}
	082 Move X2, [X23]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X1, X0
	086 Move X0, X20
	087 Move X2, X19
	088 Call XRInteractionManager.SelectExitInternal, X0, X1, X2
	089 Subtract W21, W21, 1
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Return 
	097 Call 0x1C17F20

Method: System.Void ExitInteractableFocus(UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable interactable)

Disassembly:
	0x03B78448 LDR X0, [X8]
	0x03B7844C BL 0x1C16F10
	0x03B78450 ADRP X8, 0x5E3000
	0x03B78454 LDR X8, [X8 + 0xAB0]
	0x03B78458 MOV X20, X0
	0x03B7845C LDR X1, [X8]
	0x03B78460 BL 0x25C58F8
	0x03B78464 STR X20, [X19 + 0xA8]
	0x03B78468 ADRP X8, 0x5E2000
	0x03B7846C LDR X8, [X8 + 0xA40]
	0x03B78470 LDR X0, [X8]
	0x03B78474 BL 0x1C16F10
	0x03B78478 ADRP X8, 0x5E3000
	0x03B7847C LDR X8, [X8 + 0x188]
	0x03B78480 MOV X20, X0
	0x03B78484 LDR X1, [X8]
	0x03B78488 BL 0x301B7C4
	0x03B7848C STR X20, [X19 + 0xB0]
	0x03B78490 ADRP X8, 0x5E2000
	0x03B78494 LDR X8, [X8 + 0xB18]
	0x03B78498 LDR X0, [X8]
	0x03B7849C BL 0x1C16F10
	0x03B784A0 ADRP X8, 0x5E2000
	0x03B784A4 LDR X8, [X8 + 0xB20]
	0x03B784A8 MOV X20, X0
	0x03B784AC LDR X1, [X8]
	0x03B784B0 BL 0x301B7C4
	0x03B784B4 STR X20, [X19 + 0xB8]
	0x03B784B8 ADRP X8, 0x5E3000
	0x03B784BC LDR X8, [X8 + 0x930]
	0x03B784C0 LDR X0, [X8]
	0x03B784C4 BL 0x1C16F10
	0x03B784C8 ADRP X8, 0x5E3000
	0x03B784CC LDR X8, [X8 + 0x908]
	0x03B784D0 MOV X20, X0
	0x03B784D4 LDR X1, [X8]
	0x03B784D8 BL 0x2AA4804
	0x03B784DC STR X20, [X19 + 0xC0]
	0x03B784E0 LDR X0, [X24]
	0x03B784E4 BL 0x1C16F10
	0x03B784E8 ADRP X8, 0x5E2000
	0x03B784EC LDR X8, [X8 + 0xE48]
	0x03B784F0 MOV X20, X0
	0x03B784F4 LDR X1, [X8]
	0x03B784F8 BL 0x301B7C4
	0x03B784FC STR X20, [X19 + 0xC8]
	0x03B78500 ADRP X8, 0x5E3000
	0x03B78504 LDR X8, [X8 + 0x9B8]
	0x03B78508 LDR X0, [X8]
	0x03B7850C BL 0x1C16F10
	0x03B78510 ADRP X8, 0x5E3000
	0x03B78514 LDR X8, [X8 + 0x9A0]
	0x03B78518 MOV X20, X0
	0x03B7851C LDR X1, [X8]
	0x03B78520 BL 0x2DBDE08
	0x03B78524 STR X20, [X19 + 0xD0]
	0x03B78528 ADRP X8, 0x5E3000
	0x03B7852C LDR X8, [X8 + 0x9C0]
	0x03B78530 LDR X0, [X8]
	0x03B78534 BL 0x1C16F10
	0x03B78538 ADRP X8, 0x5E3000
	0x03B7853C LDR X8, [X8 + 0x9A8]
	0x03B78540 MOV X20, X0
	0x03B78544 LDR X1, [X8]
	0x03B78548 BL 0x2DBDE08
	0x03B7854C STR X20, [X19 + 0xD8]
	0x03B78550 ADRP X8, 0x5E3000
	0x03B78554 LDR X8, [X8 + 0x9B0]
	0x03B78558 LDR X0, [X8]
	0x03B7855C BL 0x1C16F10
	0x03B78560 ADRP X8, 0x5E3000
	0x03B78564 LDR X8, [X8 + 0x998]
	0x03B78568 MOV X20, X0
	0x03B7856C LDR X1, [X8]
	0x03B78570 BL 0x2DBDE08
	0x03B78574 STR X20, [X19 + 0xE0]
	0x03B78578 ADRP X8, 0x5E2000
	0x03B7857C LDR X8, [X8 + 0xC58]
	0x03B78580 LDR X0, [X8]
	0x03B78584 BL 0x1C16F10
	0x03B78588 ADRP X8, 0x5E2000
	0x03B7858C LDR X8, [X8 + 0xC50]
	0x03B78590 MOV X20, X0
	0x03B78594 LDR X1, [X8]
	0x03B78598 BL 0x301B7C4
	0x03B7859C STR X20, [X19 + 0xE8]
	0x03B785A0 ADRP X8, 0x5E2000
	0x03B785A4 LDR X8, [X8 + 0x290]
	0x03B785A8 LDR X0, [X8]
	0x03B785AC BL 0x1C16F10
	0x03B785B0 ADRP X8, 0x5E3000
	0x03B785B4 LDR X8, [X8 + 0xA90]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x86B000
	008 Move W8, [X21+2668]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5E3000
	016 Move X0, [X0+304]
	017 Call 0x1C17CF4
	018 Move X0, 0x5E3000
	019 Move X0, [X0+312]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E3000
	022 Move X0, [X0+320]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2668], W8
	026 Compare X19, 0
	027 JumpIfEqual {100}
	028 Move X22, 0x5E3000
	029 Move X8, [X19]
	030 Move X22, [X22+304]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X22]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 4
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 4
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {100}
	054 Move W8, [X0+24]
	055 Subtract W21, W8, 1
	056 Move X23, 0x5E3000
	057 Move X23, [X23+320]
	058 Move X8, [X19]
	059 Move X1, [X22]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 4
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 4
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {100}
	082 Move X2, [X23]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X8, [X20]
	086 Move X1, X0
	087 Move X0, X20
	088 Move X2, X19
	089 Move X9, [X8+936]
	090 Move X3, [X8+944]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Subtract W21, W21, 1
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Return 
	100 Call 0x1C17F20

Method: System.Void ClearPriorityForSelectionMap()

Disassembly:
	0x03B6DED0 BL 0x33C5D2C
	0x03B6DED4 TBZ X0, 0x0, 0x3B6DEE4
	0x03B6DED8 MOV X0, X22
	0x03B6DEDC MOV X1, X31
	0x03B6DEE0 BL 0x3BFEA0C
	0x03B6DEE4 LDP X1, X0, [X31 + 0x8]
	0x03B6DEE8 CBZ X23, 0x3B6E198
	0x03B6DEEC MOV X0, X23
	0x03B6DEF0 BL 0x1C16F18
	0x03B6DEF4 MOV X21, X31
	0x03B6DEF8 MOV X0, X22
	0x03B6DEFC MOV X1, X31
	0x03B6DF00 MOV X2, X31
	0x03B6DF04 BL 0x33C5D2C
	0x03B6DF08 TBZ X0, 0x0, 0x3B6DF18
	0x03B6DF0C MOV X0, X22
	0x03B6DF10 MOV X1, X31
	0x03B6DF14 BL 0x3BFEA0C
	0x03B6DF18 LDR X1, [X31 + 0x8]
	0x03B6DF1C MOV X0, X23
	0x03B6DF20 CBZ X21, 0x3B6E198
	0x03B6DF24 MOV X0, X21
	0x03B6DF28 BL 0x1C16F18
	0x03B6DF2C MOV X22, X1
	0x03B6DF30 MOV X20, X31
	0x03B6DF34 MOV X0, X21
	0x03B6DF38 MOV X1, X31
	0x03B6DF3C MOV X2, X31
	0x03B6DF40 BL 0x33C5D2C
	0x03B6DF44 TBZ X0, 0x0, 0x3B6DF54
	0x03B6DF48 MOV X0, X21
	0x03B6DF4C MOV X1, X31
	0x03B6DF50 BL 0x3BFEA0C
	0x03B6DF54 MOV X0, X23
	0x03B6DF58 MOV X1, X22
	0x03B6DF5C CBZ X20, 0x3B6E198
	0x03B6DF60 MOV X0, X20
	0x03B6DF64 BL 0x1C16F18
	0x03B6DF68 MOV X22, X1
	0x03B6DF6C MOV X23, X0
	0x03B6DF70 B 0x3B6DF34
	0x03B6DF74 MOV X23, X0
	0x03B6DF78 STR X1, [X31 + 0x8]
	0x03B6DF7C B 0x3B6DEF8
	0x03B6DF80 STP X1, X0, [X31 + 0x8]
	0x03B6DF84 B 0x3B6DEC4
	0x03B6DF88 STP X1, X0, [X31 + 0x8]
	0x03B6DF8C B 0x3B6DE90
	0x03B6DF90 MOV X23, X0
	0x03B6DF94 STR X1, [X31 + 0x8]
	0x03B6DF98 B 0x3B6DE58
	0x03B6DF9C MOV X22, X0
	0x03B6DFA0 STR X1, [X31 + 0x8]
	0x03B6DFA4 B 0x3B6DDEC
	0x03B6DFA8 STP X1, X0, [X31 + 0x8]
	0x03B6DFAC B 0x3B6DE24
	0x03B6DFB0 CMP W1, 0x1
	0x03B6DFB4 MOV X20, X0
	0x03B6DFB8 B.NE 0x3B6DFD0
	0x03B6DFBC MOV X0, X20
	0x03B6DFC0 BL 0x3EB1AD0
	0x03B6DFC4 LDR X19, [X0]
	0x03B6DFC8 BL 0x3EB1AE0
	0x03B6DFCC B 0x3B6DD14
	0x03B6DFD0 MOV X19, X31
	0x03B6DFD4 B 0x3B6DFDC
	0x03B6DFD8 MOV X20, X0
	0x03B6DFDC MOV X0, X21
	0x03B6DFE0 MOV X1, X31
	0x03B6DFE4 MOV X2, X31
	0x03B6DFE8 BL 0x33C5D2C
	0x03B6DFEC TBZ X0, 0x0, 0x3B6DFFC
	0x03B6DFF0 MOV X0, X21
	0x03B6DFF4 MOV X1, X31
	0x03B6DFF8 BL 0x3BFEA0C
	0x03B6DFFC CBZ X19, 0x3B6E25C
	0x03B6E000 MOV X0, X19
	0x03B6E004 BL 0x1C16F18
	0x03B6E008 CMP W1, 0x1
	0x03B6E00C MOV X20, X0
	0x03B6E010 B.NE 0x3B6E02C
	0x03B6E014 MOV X0, X20
	0x03B6E018 BL 0x3EB1AD0
	0x03B6E01C LDR X22, [X0]
	0x03B6E020 BL 0x3EB1AE0
	0x03B6E024 MOV W20, W31
	0x03B6E028 B 0x3B6DC8C
	0x03B6E02C MOV X22, X31
	0x03B6E030 B 0x3B6E038
	0x03B6E034 MOV X20, X0
	0x03B6E038 MOV X0, X21
	0x03B6E03C MOV X1, X31
	0x03B6E040 MOV X2, X31
	0x03B6E044 BL 0x33C5D2C
	0x03B6E048 TBZ X0, 0x0, 0x3B6E058
	0x03B6E04C MOV X0, X21
	0x03B6E050 MOV X1, X31
	0x03B6E054 BL 0x3BFEA0C
	0x03B6E058 CBZ X22, 0x3B6E25C
	0x03B6E05C MOV X0, X22
	0x03B6E060 BL 0x1C16F18
	0x03B6E064 CMP W1, 0x1
	0x03B6E068 MOV X20, X0
	0x03B6E06C B.NE 0x3B6E088
	0x03B6E070 MOV X0, X20
	0x03B6E074 BL 0x3EB1AD0
	0x03B6E078 LDR X22, [X0]
	0x03B6E07C BL 0x3EB1AE0
	0x03B6E080 MOV W20, W31
	0x03B6E084 B 0x3B6DC04
	0x03B6E088 MOV X22, X31
	0x03B6E08C B 0x3B6E094
	0x03B6E090 MOV X20, X0
	0x03B6E094 MOV X0, X21
	0x03B6E098 MOV X1, X31
	0x03B6E09C MOV X2, X31
	0x03B6E0A0 BL 0x33C5D2C
	0x03B6E0A4 TBZ X0, 0x0, 0x3B6E0B4
	0x03B6E0A8 MOV X0, X21
	0x03B6E0AC MOV X1, X31
	0x03B6E0B0 BL 0x3BFEA0C
	0x03B6E0B4 CBZ X22, 0x3B6E25C
	0x03B6E0B8 MOV X0, X22
	0x03B6E0BC BL 0x1C16F18
	0x03B6E0C0 CMP W1, 0x1
	0x03B6E0C4 MOV X20, X0
	0x03B6E0C8 B.NE 0x3B6E0E0
	0x03B6E0CC MOV X0, X20
	0x03B6E0D0 BL 0x3EB1AD0
	0x03B6E0D4 LDR X22, [X0]
	0x03B6E0D8 BL 0x3EB1AE0
	0x03B6E0DC B 0x3B6D464
	0x03B6E0E0 MOV X22, X31
	0x03B6E0E4 B 0x3B6E0EC
	0x03B6E0E8 MOV X20, X0
	0x03B6E0EC MOV X0, X21
	0x03B6E0F0 MOV X1, X31
	0x03B6E0F4 MOV X2, X31
	0x03B6E0F8 BL 0x33C5D2C
	0x03B6E0FC TBZ X0, 0x0, 0x3B6E10C
	0x03B6E100 MOV X0, X21
	0x03B6E104 MOV X1, X31
	0x03B6E108 BL 0x3BFEA0C
	0x03B6E10C CBZ X22, 0x3B6E25C
	0x03B6E110 MOV X0, X22
	0x03B6E114 BL 0x1C16F18
	0x03B6E118 B 0x3B6E198
	0x03B6E11C B 0x3B6E198
	0x03B6E120 B 0x3B6E198
	0x03B6E124 B 0x3B6E198
	0x03B6E128 B 0x3B6E198
	0x03B6E12C B 0x3B6E198
	0x03B6E130 B 0x3B6E198
	0x03B6E134 B 0x3B6E198
	0x03B6E138 B 0x3B6E198
	0x03B6E13C B 0x3B6E198
	0x03B6E140 B 0x3B6E198
	0x03B6E144 B 0x3B6E198
	0x03B6E148 B 0x3B6E200
	0x03B6E14C B 0x3B6E198
	0x03B6E150 B 0x3B6E198
	0x03B6E154 B 0x3B6E198
	0x03B6E158 B 0x3B6E200
	0x03B6E15C B 0x3B6E198
	0x03B6E160 B 0x3B6E200
	0x03B6E164 B 0x3B6E198
	0x03B6E168 B 0x3B6E198
	0x03B6E16C B 0x3B6E198
	0x03B6E170 B 0x3B6E200
	0x03B6E174 B 0x3B6E200
	0x03B6E178 B 0x3B6E200
	0x03B6E17C B 0x3B6E200
	0x03B6E180 B 0x3B6E198
	0x03B6E184 B 0x3B6E198
	0x03B6E188 B 0x3B6E200
	0x03B6E18C B 0x3B6E200
	0x03B6E190 B 0x3B6E198
	0x03B6E194 B 0x3B6E198
	0x03B6E198 CMP W1, 0x1
	0x03B6E19C B.NE 0x3B6E1C8
	0x03B6E1A0 BL 0x3EB1AD0
	0x03B6E1A4 LDR X21, [X0]
	0x03B6E1A8 BL 0x3EB1AE0
	0x03B6E1AC ADRP X8, 0x5ED000
	0x03B6E1B0 LDR X8, [X8 + 0x670]
	0x03B6E1B4 ADD X0, X31, 0x30
	0x03B6E1B8 LDR X1, [X8]
	0x03B6E1BC BL 0x2BC434C
	0x03B6E1C0 CBZ X21, 0x3B6DBA8
	0x03B6E1C4 B 0x3B6E22C
	0x03B6E1C8 MOV X20, X0
	0x03B6E1CC MOV X21, X31
	0x03B6E1D0 B 0x3B6E1D8
	0x03B6E1D4 MOV X20, X0
	0x03B6E1D8 ADRP X8, 0x5ED000
	0x03B6E1DC LDR X8, [X8 + 0x670]
	0x03B6E1E0 LDR X1, [X8]
	0x03B6E1E4 ADD X0, X31, 0x30
	0x03B6E1E8 BL 0x2BC434C
	0x03B6E1EC CBZ X21, 0x3B6E25C
	0x03B6E1F0 MOV X0, X21
	0x03B6E1F4 BL 0x1C16F18
	0x03B6E1F8 B 0x3B6E200
	0x03B6E1FC B 0x3B6E200
	0x03B6E200 CMP W1, 0x1
	0x03B6E204 B.NE 0x3B6E234
	0x03B6E208 BL 0x3EB1AD0
	0x03B6E20C LDR X21, [X0]
	0x03B6E210 BL 0x3EB1AE0
	0x03B6E214 ADRP X8, 0x5ED000
	0x03B6E218 LDR X8, [X8 + 0x668]
	0x03B6E21C ADD X0, X31, 0x50
	0x03B6E220 LDR X1, [X8]
	0x03B6E224 BL 0x2BC434C
	0x03B6E228 CBZ X21, 0x3B6D6F8
	0x03B6E22C MOV X0, X21
	0x03B6E230 BL 0x1C16F18
	0x03B6E234 MOV X20, X0
	0x03B6E238 MOV X21, X31
	0x03B6E23C B 0x3B6E244
	0x03B6E240 MOV X20, X0
	0x03B6E244 ADRP X8, 0x5ED000
	0x03B6E248 LDR X8, [X8 + 0x668]
	0x03B6E24C LDR X1, [X8]
	0x03B6E250 ADD X0, X31, 0x50
	0x03B6E254 BL 0x2BC434C
	0x03B6E258 CBNZ X21, 0x3B6E264
	0x03B6E25C MOV X0, X20
	0x03B6E260 BL 0x1D2C690
	0x03B6E264 MOV X0, X21
	0x03B6E268 BL 0x1C16F18
	0x03B6E26C BL 0x1990590
	0x03B6E270 STP X30, X19, [X31 - 0x10]!
	0x03B6E274 MOV X19, X0
	0x03B6E278 LDR X0, [X0 + 0xA0]
	0x03B6E27C CBZ X0, 0x3B6E2B8
	0x03B6E280 LDR X8, [X0]
	0x03B6E284 LDP X9, X1, [X8 + 0x1B8]
	0x03B6E288 BLR X9
	0x03B6E28C LDR X0, [X19 + 0x98]
	0x03B6E290 CBZ X0, 0x3B6E2B8
	0x03B6E294 LDR X8, [X0]
	0x03B6E298 LDP X9, X1, [X8 + 0x1B8]
	0x03B6E29C BLR X9
	0x03B6E2A0 LDR X0, [X19 + 0xA8]
	0x03B6E2A4 CBZ X0, 0x3B6E2B8
	0x03B6E2A8 LDR X8, [X0]
	0x03B6E2AC LDP X2, X1, [X8 + 0x1B8]
	0x03B6E2B0 LDP X30, X19, [X31], #0x10
	0x03B6E2B4 BR X2
	0x03B6E2B8 BL 0x1C16F20
	0x03B6E2BC LDR X8, [X0]
	0x03B6E2C0 LDR X3, [X8 + 0x318]
	0x03B6E2C4 LDR X2, [X8 + 0x320]
	0x03B6E2C8 BR X3
	0x03B6E2CC STR X30, [X31 - 0x40]!
	0x03B6E2D0 STP X24, X23, [X31 + 0x10]
	0x03B6E2D4 STP X22, X21, [X31 + 0x20]
	0x03B6E2D8 STP X20, X19, [X31 + 0x30]
	0x03B6E2DC ADRP X22, 0x874000
	0x03B6E2E0 LDRB W8, [X22 + 0xA3A]
	0x03B6E2E4 MOV X19, X2

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x876000
	015 Move W8, [X20+2669]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {68}
	021 Move X0, 0x5EF000
	022 Move X0, [X0+1520]
	023 Call 0x1C17CF4
	024 Move X0, 0x5EF000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move X0, 0x5EF000
	028 Move X0, [X0+1536]
	029 Call 0x1C17CF4
	030 Move X0, 0x5EF000
	031 Move X0, [X0+1544]
	032 Call 0x1C17CF4
	033 Move X0, 0x5EF000
	034 Move X0, [X0+1552]
	035 Call 0x1C17CF4
	036 Move X0, 0x5EF000
	037 Move X0, [X0+1560]
	038 Call 0x1C17CF4
	039 Move X0, 0x5EF000
	040 Move X0, [X0+1568]
	041 Call 0x1C17CF4
	042 Move X0, 0x5EF000
	043 Move X0, [X0+1576]
	044 Call 0x1C17CF4
	045 Move X0, 0x5EF000
	046 Move X0, [X0+1584]
	047 Call 0x1C17CF4
	048 Move X0, 0x5EF000
	049 Move X0, [X0+1592]
	050 Call 0x1C17CF4
	051 Move X0, 0x5EF000
	052 Move X0, [X0+1600]
	053 Call 0x1C17CF4
	054 Move X0, 0x5EF000
	055 Move X0, [X0+296]
	056 Call 0x1C17CF4
	057 Move X0, 0x5EF000
	058 Move X0, [X0+1608]
	059 Call 0x1C17CF4
	060 Move X0, 0x5EF000
	061 Move X0, [X0+1616]
	062 Call 0x1C17CF4
	063 Move X0, 0x5EE000
	064 Move X0, [X0+3616]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+2669], W8
	068 Move [X31+64], X31
	069 Move [X31+72], X31
	070 Move [X31+80], X31
	071 Move [X31+32], X31
	072 Move [X31+40], X31
	073 Move [X31+48], X31
	074 Move X0, [X19+192]
	075 Compare X0, 0
	076 JumpIfEqual {251}
	077 Move X8, 0x5EF000
	078 Move X8, [X8+1528]
	079 Move X1, [X8]
	080 Call Dictionary`2<Object, Object>.get_Count, X0
	081 Compare W0, 0
	082 JumpIfEqual {222}
	083 Move X0, [X19+192]
	084 Compare X0, 0
	085 JumpIfEqual {251}
	086 Move X8, 0x5EF000
	087 Move X8, [X8+1536]
	088 Move X1, [X8]
	089 Call Dictionary`2<Object, Object>.get_Values, X0
	090 Compare X0, 0
	091 JumpIfEqual {251}
	092 Move X8, 0x5EE000
	093 Move X8, [X8+1616]
	094 Move X23, 0x5EE000
	095 Move X24, 0x5EE000
	096 Move X25, 0x5EE000
	097 Move X26, 0x5EE000
	098 Move X23, [X23+1568]
	099 Move X24, [X24+1608]
	100 Move X25, [X25+1560]
	101 Move X26, [X26+1592]
	102 Move X1, [X8]
	103 Move X22, 0x5EE000
	104 Move X27, 0x5ED000
	105 Move X28, 0x5EE000
	106 Move X22, [X22+1552]
	107 Move X27, [X27+3616]
	108 Move X28, [X28+1600]
	109 Add X8, X31, 8
	110 Call ValueCollection<Object, Object>.GetEnumerator, X0
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 Move X8, [X31+24]
	113 Move [X31+4], V0
	114 Move [X31+80], X8
	115 Move X1, [X23]
	116 Add X0, X31, 64
	117 Call Enumerator<Object, Object>.MoveNext, X0
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {205}
	122 Move X20, [X31+80]
	123 Compare X20, 0
	124 JumpIfEqual {247}
	125 Move X1, [X24]
	126 Add X8, X31, 8
	127 Move X0, X20
	128 Call List`1<Object>.GetEnumerator, X0
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move X8, [X31+24]
	131 Move [X31+2], V0
	132 Move [X31+48], X8
	133 Move X1, [X25]
	134 Add X0, X31, 32
	135 Call Enumerator<Object>.MoveNext, X0
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {177}
	140 Move X21, [X31+48]
	141 Compare X21, 0
	142 JumpIfEqual {133}
	143 Move X8, [X21]
	144 Move X1, [X26]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 1
	155 Move X0, X21
	156 Call 0x1C5D788
	157 Move W9, [X10]
	158 Add W9, W9, 1
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Compare X0, 0
	166 JumpIfEqual {133}
	167 Move W2, [X0+24]
	168 Move W8, [X0+28]
	169 Add W8, W8, 1
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X0+24], W31
	172 Move [X0+28], W8
	173 Move X0, [X0+16]
	174 Move W1, W31
	175 Move X3, X31
	176 Call Array.Clear, X0, X1, X2
	177 Move X21, X31
	178 Move W29, 9
	179 Move X1, [X22]
	180 Add X0, X31, 32
	181 Call Enumerator<Object>.Dispose, X0
	182 Compare X21, 0
	183 JumpIfNotEqual {248}
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare W29, 0
	186 JumpIfNotEqual {217}
	187 Move X0, [X27]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1C17DFC
	192 Move X0, [X27]
	193 Move X8, [X0+184]
	194 Move X0, [X8+8]
	195 Compare X0, 0
	196 JumpIfEqual {250}
	197 Move X2, [X28]
	198 Move X1, X20
	199 Call 0x2EF20B8, X0, X1
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Call 0x3EB2AD0
	202 Move X21, [X0]
	203 Call 0x3EB2AE0
	204 Move W29, W31
	205 Move X8, 0x5EE000
	206 Move X8, [X8+1544]
	207 Add X0, X31, 64
	208 Move X1, [X8]
	209 Call Enumerator<Object, Object>.Dispose, X0
	210 Move X0, [X19+192]
	211 Compare X0, 0
	212 JumpIfEqual {251}
	213 Move X8, 0x5EE000
	214 Move X8, [X8+1520]
	215 Move X1, [X8]
	216 Call Dictionary`2<Object, Object>.Clear, X0
	217 Move X8, 0x5EE000
	218 Move X8, [X8+1544]
	219 Add X0, X31, 64
	220 Move X1, [X8]
	221 Call Enumerator<Object, Object>.Dispose, X0
	222 Move X20, [X31+176]
	223 Move X19, [X31+184]
	224 Move X22, [X31+160]
	225 Move X21, [X31+168]
	226 Move X24, [X31+144]
	227 Move X23, [X31+152]
	228 Move X26, [X31+128]
	229 Move X25, [X31+136]
	230 Move X28, [X31+112]
	231 Move X27, [X31+120]
	232 Move X29, [X31+96]
	233 Move X30, [X31+104]
	234 Add X31, X31, 192
	235 Return 
	236 Move [X31], X1
	237 Move X20, X0
	238 Move X21, X31
	239 Move X1, [X22]
	240 Add X0, X31, 32
	241 Call Enumerator<Object>.Dispose, X0
	242 Move X1, [X31]
	243 Compare X21, 0
	244 JumpIfEqual {255}
	245 Move X0, X21
	246 Call 0x1C17F18
	247 Call 0x1C17F20
	248 Move X0, X21
	249 Call 0x1C17F18
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Move X20, X0
	253 Move [X31], X1
	254 Move X20, X0
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, X20
	257 Call 0x3EB2AD0
	258 Move X21, [X0]
	259 Call 0x3EB2AE0
	260 Move X8, 0x5EE000
	261 Move X8, [X8+1544]
	262 Add X0, X31, 64
	263 Move X1, [X8]
	264 Call Enumerator<Object, Object>.Dispose, X0
	265 Compare X21, 0
	266 JumpIfEqual {210}
	267 Move X0, X21
	268 Call 0x1C17F18
	269 Move X21, X31
	270 Move X20, X0
	271 Move X8, 0x5EE000
	272 Move X8, [X8+1544]
	273 Move X1, [X8]
	274 Add X0, X31, 64
	275 Call Enumerator<Object, Object>.Dispose, X0
	276 Compare X21, 0
	277 JumpIfNotEqual {280}
	278 Move X0, X20
	279 Call 0x1D2D690
	280 Move X0, X21
	281 Call 0x1C17F18
	282 Call 0x1991590

Method: System.Void FlushRegistration()

Disassembly:
	0x03B6F270 LDP X20, X19, [X31 + 0xB0]
	0x03B6F274 LDP X22, X21, [X31 + 0xA0]
	0x03B6F278 LDP X24, X23, [X31 + 0x90]
	0x03B6F27C LDP X26, X25, [X31 + 0x80]
	0x03B6F280 LDP X28, X27, [X31 + 0x70]
	0x03B6F284 LDP X29, X30, [X31 + 0x60]
	0x03B6F288 ADD X31, X31, 0xC0
	0x03B6F28C RET
	0x03B6F290 BL 0x1C16F20
	0x03B6F294 BL 0x1C16F20
	0x03B6F298 BL 0x1C16F20
	0x03B6F29C BL 0x1C16F20
	0x03B6F2A0 BL 0x1C16F20
	0x03B6F2A4 BL 0x1C16F20
	0x03B6F2A8 BL 0x1C16F20
	0x03B6F2AC B 0x3B6F2DC
	0x03B6F2B0 B 0x3B6F340
	0x03B6F2B4 B 0x3B6F2DC
	0x03B6F2B8 B 0x3B6F340

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+160]
	005 Compare X0, 0
	006 JumpIfEqual {27}
	007 Move X8, [X0]
	008 Move X9, [X8+440]
	009 Move X1, [X8+448]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, [X19+152]
	012 Compare X0, 0
	013 JumpIfEqual {27}
	014 Move X8, [X0]
	015 Move X9, [X8+440]
	016 Move X1, [X8+448]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X0, [X19+168]
	019 Compare X0, 0
	020 JumpIfEqual {27}
	021 Move X8, [X0]
	022 Move X2, [X8+440]
	023 Move X1, [X8+448]
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 CallNoReturn X2
	027 Call 0x1C17F20

Method: System.Void GetOfType(System.Collections.Generic.List`1<TSource> source, System.Collections.Generic.List`1<TDestination> destination)

Disassembly:
	0x022AE328 LDP X30, X21, [X31], #0x20
	0x022AE32C BR X2
	0x022AE330 BL 0x1C16F20
	0x022AE334 SUB X31, X31, 0x30
	0x022AE338 STP X30, X21, [X31 + 0x10]
	0x022AE33C STP X20, X19, [X31 + 0x20]
	0x022AE340 LDR X8, [X1 + 0x38]
	0x022AE344 MOV X19, X1
	0x022AE348 MOV X20, X0
	0x022AE34C CBNZ X8, 0x22AE37C
	0x022AE350 ADRP X0, 0x1E6E000
	0x022AE354 LDR X0, [X0 + 0xA00]
	0x022AE358 BL 0x1C16CF4
	0x022AE35C ADRP X0, 0x1E45000
	0x022AE360 LDR X0, [X0 + 0x6C0]
	0x022AE364 BL 0x1C16CF4
	0x022AE368 LDR X8, [X19 + 0x38]
	0x022AE36C CBNZ X8, 0x22AE37C
	0x022AE370 MOV X0, X19
	0x022AE374 BL 0x1C5C6E0
	0x022AE378 LDR X8, [X19 + 0x38]
	0x022AE37C ADRP X9, 0x1E45000
	0x022AE380 LDR X9, [X9 + 0x6C0]
	0x022AE384 STR X31, [X31 + 0x8]
	0x022AE388 LDR X21, [X8]
	0x022AE38C LDR X0, [X9]
	0x022AE390 LDR W9, [X0 + 0xE0]
	0x022AE394 CBNZ W9, 0x22AE39C
	0x022AE398 BL 0x1C16DFC
	0x022AE39C MOV X0, X21
	0x022AE3A0 MOV X1, X31
	0x022AE3A4 BL 0x338C698
	0x022AE3A8 LDR X8, [X20 + 0x18]
	0x022AE3AC CBZ X8, 0x22AE448
	0x022AE3B0 ADRP X9, 0x1E6E000
	0x022AE3B4 LDR X9, [X9 + 0xA00]
	0x022AE3B8 MOV X1, X0
	0x022AE3BC ADD X2, X31, 0x8
	0x022AE3C0 MOV X0, X8
	0x022AE3C4 LDR X3, [X9]
	0x022AE3C8 BL 0x2AA6B2C
	0x022AE3CC LDR X8, [X19 + 0x38]
	0x022AE3D0 LDR X20, [X31 + 0x8]
	0x022AE3D4 LDR X1, [X8 + 0x8]
	0x022AE3D8 LDRB W8, [X1 + 0x135]
	0x022AE3DC TBNZ X8, 0x0, 0x22AE3EC
	0x022AE3E0 MOV X0, X1
	0x022AE3E4 BL 0x1C5C684
	0x022AE3E8 MOV X1, X0
	0x022AE3EC MOV X0, X20
	0x022AE3F0 BL 0x1C16E00
	0x022AE3F4 LDR X8, [X19 + 0x38]
	0x022AE3F8 MOV X20, X0
	0x022AE3FC LDR X19, [X8 + 0x8]
	0x022AE400 LDRB W8, [X19 + 0x135]
	0x022AE404 TBNZ X8, 0x0, 0x22AE414
	0x022AE408 MOV X0, X19
	0x022AE40C BL 0x1C5C684
	0x022AE410 MOV X19, X0
	0x022AE414 CBZ X20, 0x22AE434
	0x022AE418 MOV X0, X20
	0x022AE41C MOV X1, X19
	0x022AE420 BL 0x1C16E00
	0x022AE424 CBNZ X0, 0x22AE438
	0x022AE428 MOV X0, X20
	0x022AE42C MOV X1, X19
	0x022AE430 BL 0x1C171E0
	0x022AE434 MOV X0, X31
	0x022AE438 LDP X20, X19, [X31 + 0x20]
	0x022AE43C LDP X30, X21, [X31 + 0x10]
	0x022AE440 ADD X31, X31, 0x30
	0x022AE444 RET
	0x022AE448 BL 0x1C16F20
	0x022AE44C STR X30, [X31 - 0x20]!
	0x022AE450 STP X20, X19, [X31 + 0x10]
	0x022AE454 LDR X8, [X1 + 0x38]
	0x022AE458 MOV X19, X0
	0x022AE45C CBNZ X8, 0x22AE484
	0x022AE460 ADRP X0, 0x1E6E000
	0x022AE464 LDR X0, [X0 + 0x9F8]
	0x022AE468 MOV X20, X1
	0x022AE46C BL 0x1C16CF4
	0x022AE470 LDR X8, [X20 + 0x38]
	0x022AE474 CBNZ X8, 0x22AE484
	0x022AE478 MOV X0, X20
	0x022AE47C BL 0x1C5C6E0
	0x022AE480 LDR X8, [X20 + 0x38]
	0x022AE484 LDR X1, [X8]
	0x022AE488 LDR X9, [X19]
	0x022AE48C LDRH W8, [X1 + 0x50]
	0x022AE490 ADD X8, X9, X8, 0x4, LSL
	0x022AE494 LDR X0, [X8 + 0x140]
	0x022AE498 BL 0x1C16DF8
	0x022AE49C LDR X8, [X0 + 0x8]
	0x022AE4A0 MOV X1, X0
	0x022AE4A4 MOV X0, X19
	0x022AE4A8 BLR X8
	0x022AE4AC CBZ X0, 0x22AE4FC
	0x022AE4B0 ADRP X10, 0x1E6E000
	0x022AE4B4 LDR X8, [X0]
	0x022AE4B8 LDR X10, [X10 + 0x9F8]
	0x022AE4BC MOV X19, X0
	0x022AE4C0 LDRH W9, [X8 + 0x12E]
	0x022AE4C4 LDR X1, [X10]
	0x022AE4C8 CBZ X9, 0x22AE4EC
	0x022AE4CC LDR X10, [X8 + 0xB0]
	0x022AE4D0 ADD X10, X10, 0x8
	0x022AE4D4 LDUR X11, [X10 - 0x8]
	0x022AE4D8 CMP X11, X1
	0x022AE4DC B.EQ 0x22AE508
	0x022AE4E0 SUBS X9, X9, 0x1
	0x022AE4E4 ADD X10, X10, 0x10
	0x022AE4E8 B.NE 0x22AE4D4
	0x022AE4EC MOV X0, X19
	0x022AE4F0 MOV W2, W31
	0x022AE4F4 BL 0x1C5C788
	0x022AE4F8 B 0x22AE514
	0x022AE4FC LDP X20, X19, [X31 + 0x10]
	0x022AE500 LDR X30, [X31], #0x20
	0x022AE504 RET
	0x022AE508 LDRSW X9, [X10]
	0x022AE50C ADD X8, X8, X9, 0x4, LSL
	0x022AE510 ADD X0, X8, 0x138
	0x022AE514 LDP X2, X1, [X0]
	0x022AE518 MOV X0, X19
	0x022AE51C LDP X20, X19, [X31 + 0x10]
	0x022AE520 LDR X30, [X31], #0x20
	0x022AE524 BR X2
	0x022AE528 STR X30, [X31 - 0x20]!
	0x022AE52C STP X20, X19, [X31 + 0x10]
	0x022AE530 LDR X8, [X1 + 0x38]
	0x022AE534 MOV X19, X0
	0x022AE538 CBNZ X8, 0x22AE560
	0x022AE53C ADRP X0, 0x1E6E000
	0x022AE540 LDR X0, [X0 + 0x9F8]
	0x022AE544 MOV X20, X1
	0x022AE548 BL 0x1C16CF4
	0x022AE54C LDR X8, [X20 + 0x38]
	0x022AE550 CBNZ X8, 0x22AE560
	0x022AE554 MOV X0, X20
	0x022AE558 BL 0x1C5C6E0
	0x022AE55C LDR X8, [X20 + 0x38]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Move [X31+48], X31
	018 Compare X20, 0
	019 JumpIfEqual {137}
	020 Move W2, [X20+24]
	021 Move W8, [X20+28]
	022 Add W8, W8, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X20+24], W31
	025 Move [X20+28], W8
	026 Move X0, [X20+16]
	027 Move W1, W31
	028 Move X3, X31
	029 Call Array.Clear, X0, X1, X2
	030 Compare X21, 0
	031 JumpIfEqual {137}
	032 Move W8, [X21+24]
	033 Compare W8, 0
	034 JumpIfEqual {126}
	035 Move X8, [X19+56]
	036 Move X0, X21
	037 Move X1, [X8+32]
	038 Add X8, X31, 8
	039 Call List`1<Object>.GetEnumerator, X0
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X8, [X31+24]
	042 Move [X31+2], V0
	043 Move [X31+48], X8
	044 Move X8, [X19+56]
	045 Move X1, [X8+88]
	046 Add X0, X31, 32
	047 Call Enumerator<Object>.MoveNext, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {119}
	052 Move X8, [X19+56]
	053 Move X21, [X31+48]
	054 Move X1, [X8+72]
	055 Move W8, [X1+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X1
	061 Call 0x1C5D684
	062 Move X1, X0
	063 Move X0, X21
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {44}
	067 Move X8, [X19+56]
	068 Move X1, [X8+72]
	069 Move W8, [X1+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X1
	075 Call 0x1C5D684
	076 Move X1, X0
	077 Move X0, X21
	078 Call 0x1C17E00
	079 Move X8, [X19+56]
	080 Move X21, X0
	081 Move X22, [X8+72]
	082 Move W8, [X22+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X22
	088 Call 0x1C5D684
	089 Move X22, X0
	090 Compare X21, 0
	091 JumpIfEqual {98}
	092 Move X0, X21
	093 Move X1, X22
	094 Call 0x1C17E00
	095 Move X1, X0
	096 Compare X1, 0
	097 JumpIfNotEqual {99}
	098 Move X1, X31
	099 Move X9, [X19+56]
	100 Move W10, [X20+28]
	101 Move X8, [X20+16]
	102 Move X9, [X9+80]
	103 Add W10, W10, 1
	104 Move [X20+28], W10
	105 Compare X8, 0
	106 JumpIfEqual {133}
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Move W11, [X8+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W9, W10, 1
	111 Add X8, X8, X10
	112 Move [X20+24], W9
	113 Move [X8+32], X1
	114 Move X8, [X9+32]
	115 Move X8, [X8+192]
	116 Move X2, [X8+112]
	117 Move X0, X20
	118 Call List`1<Object>.AddWithResize, X0, X1
	119 Move X21, X31
	120 Move X8, [X19+56]
	121 Add X0, X31, 32
	122 Move X1, [X8+96]
	123 Call Enumerator<Object>.Dispose, X0
	124 Compare X21, 0
	125 JumpIfNotEqual {138}
	126 Move X20, [X31+96]
	127 Move X19, [X31+104]
	128 Move X22, [X31+80]
	129 Move X21, [X31+88]
	130 Move X30, [X31+64]
	131 Add X31, X31, 112
	132 Return 
	133 Call 0x1C17F20
	134 Move X0, X21
	135 Move X1, X22
	136 Call 0x1C181E0
	137 Call 0x1C17F20
	138 Move X0, X21
	139 Call 0x1C17F18
	140 Move X20, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X20
	143 Call 0x3EB2AD0
	144 Move X21, [X0]
	145 Call 0x3EB2AE0
	146 Move X21, X31
	147 Move X20, X0
	148 Move X8, [X19+56]
	149 Move X1, [X8+96]
	150 Add X0, X31, 32
	151 Call Enumerator<Object>.Dispose, X0
	152 Compare X21, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X20
	155 Call 0x1D2D690
	156 Move X0, X21
	157 Call 0x1C17F18
	158 Call 0x1991590

Method: System.Void RegisterInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B788C4 MOV X4, X31
	0x03B788C8 MOV W5, W31
	0x03B788CC MOV X21, X0
	0x03B788D0 BL 0x2EF0EC8

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+664]
	003 Move X2, [X8+672]
	004 CallNoReturn X3

Method: System.Void UnregisterInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B788D4 STR X21, [X19 + 0x120]
	0x03B788D8 LDR X0, [X22]
	0x03B788DC LDR W8, [X0 + 0xE0]
	0x03B788E0 CBNZ W8, 0x3B788EC

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+696]
	003 Move X2, [X8+704]
	004 CallNoReturn X3

Method: System.Void RegisterInteractable(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B788E4 BL 0x1C16DFC
	0x03B788E8 LDR X0, [X22]
	0x03B788EC LDR X8, [X0 + 0xB8]
	0x03B788F0 ADRP X24, 0x5E3000

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+728]
	003 Move X2, [X8+736]
	004 CallNoReturn X3

Method: System.Void UnregisterInteractable(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B788F4 ADRP X23, 0x5E3000
	0x03B788F8 LDR X20, [X8 + 0x28]
	0x03B788FC LDR X24, [X24 + 0xA68]
	0x03B78900 LDR X23, [X23 + 0xA10]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+760]
	003 Move X2, [X8+768]
	004 CallNoReturn X3

Method: System.Void GetRegisteredInteractors(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> results)

Disassembly:
	0x03B78904 CBNZ X20, 0x3B78958
	0x03B78908 LDR W8, [X0 + 0xE0]
	0x03B7890C CBNZ W8, 0x3B78918
	0x03B78910 BL 0x1C16DFC
	0x03B78914 LDR X0, [X22]
	0x03B78918 ADRP X9, 0x5E3000
	0x03B7891C LDR X8, [X0 + 0xB8]
	0x03B78920 LDR X9, [X9 + 0x978]
	0x03B78924 LDR X21, [X8]
	0x03B78928 LDR X0, [X9]
	0x03B7892C BL 0x1C16F10
	0x03B78930 ADRP X8, 0x5E3000
	0x03B78934 LDR X8, [X8 + 0xB00]
	0x03B78938 MOV X1, X21
	0x03B7893C MOV X3, X31
	0x03B78940 MOV X20, X0
	0x03B78944 LDR X2, [X8]
	0x03B78948 BL 0x2D27AA8
	0x03B7894C LDR X8, [X22]
	0x03B78950 LDR X8, [X8 + 0xB8]
	0x03B78954 STR X20, [X8 + 0x28]
	0x03B78958 LDR X0, [X24]
	0x03B7895C BL 0x1C16F10
	0x03B78960 LDR X7, [X23]
	0x03B78964 MOVZ W6, 0x2710
	0x03B78968 MOV X1, X20
	0x03B7896C MOV X2, X31
	0x03B78970 MOV X3, X31
	0x03B78974 MOV X4, X31
	0x03B78978 MOV W5, W31
	0x03B7897C MOV X21, X0
	0x03B78980 BL 0x2EF0EC8
	0x03B78984 STR X21, [X19 + 0x128]
	0x03B78988 LDR X0, [X22]
	0x03B7898C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86B000
	007 Move X21, 0x5E3000
	008 Move W8, [X22+2670]
	009 Move X21, [X21+3616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5E4000
	017 Move X0, [X0+2240]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E3000
	020 Move X0, [X0+3616]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2670], W8
	024 Move X1, [X20+248]
	025 Move X22, 0x5E4000
	026 Move X22, [X22+2240]
	027 Move X0, X20
	028 Call XRInteractionManager.GetRegisteredInteractors, X0, X1
	029 Move X0, [X21]
	030 Move X20, [X20+248]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X2, [X22]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call 0x22AE328, X0, X1
	044 Return 

Method: System.Void GetRegisteredInteractables(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> results)

Disassembly:
	0x03B78990 CBNZ W8, 0x3B7899C
	0x03B78994 BL 0x1C16DFC
	0x03B78998 LDR X0, [X22]
	0x03B7899C LDR X8, [X0 + 0xB8]
	0x03B789A0 ADRP X24, 0x5E3000
	0x03B789A4 ADRP X23, 0x5E3000
	0x03B789A8 LDR X20, [X8 + 0x30]
	0x03B789AC LDR X24, [X24 + 0xA78]
	0x03B789B0 LDR X23, [X23 + 0xA18]
	0x03B789B4 CBNZ X20, 0x3B78A08
	0x03B789B8 LDR W8, [X0 + 0xE0]
	0x03B789BC CBNZ W8, 0x3B789C8
	0x03B789C0 BL 0x1C16DFC
	0x03B789C4 LDR X0, [X22]
	0x03B789C8 ADRP X9, 0x5E3000
	0x03B789CC LDR X8, [X0 + 0xB8]
	0x03B789D0 LDR X9, [X9 + 0x948]
	0x03B789D4 LDR X21, [X8]
	0x03B789D8 LDR X0, [X9]
	0x03B789DC BL 0x1C16F10
	0x03B789E0 ADRP X8, 0x5E3000
	0x03B789E4 LDR X8, [X8 + 0xB08]
	0x03B789E8 MOV X1, X21
	0x03B789EC MOV X3, X31
	0x03B789F0 MOV X20, X0
	0x03B789F4 LDR X2, [X8]
	0x03B789F8 BL 0x2D27AA8
	0x03B789FC LDR X8, [X22]
	0x03B78A00 LDR X8, [X8 + 0xB8]
	0x03B78A04 STR X20, [X8 + 0x30]
	0x03B78A08 LDR X0, [X24]
	0x03B78A0C BL 0x1C16F10
	0x03B78A10 LDR X7, [X23]
	0x03B78A14 MOVZ W6, 0x2710
	0x03B78A18 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x86B000
	007 Move X21, 0x5E3000
	008 Move W8, [X22+2671]
	009 Move X21, [X21+3616]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5E4000
	017 Move X0, [X0+248]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E3000
	020 Move X0, [X0+3616]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2671], W8
	024 Move X1, [X20+256]
	025 Move X22, 0x5E4000
	026 Move X22, [X22+248]
	027 Move X0, X20
	028 Call XRInteractionManager.GetRegisteredInteractables, X0, X1
	029 Move X0, [X21]
	030 Move X20, [X20+256]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X2, [X22]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call 0x22AE328, X0, X1
	044 Return 

Method: System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B78A1C MOV X2, X31
	0x03B78A20 MOV X3, X31
	0x03B78A24 MOV X4, X31
	0x03B78A28 MOV W5, W31
	0x03B78A2C MOV X21, X0
	0x03B78A30 BL 0x2EF0EC8
	0x03B78A34 STR X21, [X19 + 0x130]
	0x03B78A38 LDR X0, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+152]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+376]
	007 Move X2, [X8+384]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Boolean IsRegistered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78A3C LDR W8, [X0 + 0xE0]
	0x03B78A40 CBNZ W8, 0x3B78A4C
	0x03B78A44 BL 0x1C16DFC
	0x03B78A48 LDR X0, [X22]
	0x03B78A4C LDR X8, [X0 + 0xB8]
	0x03B78A50 ADRP X24, 0x5E3000
	0x03B78A54 ADRP X23, 0x5E3000
	0x03B78A58 LDR X20, [X8 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+168]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+376]
	007 Move X2, [X8+384]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable TryGetInteractableForCollider(UnityEngine.Collider interactableCollider)

Disassembly:
	0x03B78A5C LDR X24, [X24 + 0xA38]

ISIL:
No ISIL was generated
Method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable GetInteractableForCollider(UnityEngine.Collider interactableCollider)

Disassembly:
	0x03B78A60 LDR X23, [X23 + 0xA20]
	0x03B78A64 CBNZ X20, 0x3B78AB8
	0x03B78A68 LDR W8, [X0 + 0xE0]
	0x03B78A6C CBNZ W8, 0x3B78A78
	0x03B78A70 BL 0x1C16DFC
	0x03B78A74 LDR X0, [X22]
	0x03B78A78 ADRP X9, 0x5E3000
	0x03B78A7C LDR X8, [X0 + 0xB8]
	0x03B78A80 LDR X9, [X9 + 0x988]
	0x03B78A84 LDR X21, [X8]
	0x03B78A88 LDR X0, [X9]
	0x03B78A8C BL 0x1C16F10
	0x03B78A90 ADRP X8, 0x5E3000
	0x03B78A94 LDR X8, [X8 + 0xB10]
	0x03B78A98 MOV X1, X21
	0x03B78A9C MOV X3, X31
	0x03B78AA0 MOV X20, X0
	0x03B78AA4 LDR X2, [X8]
	0x03B78AA8 BL 0x2D27AA8
	0x03B78AAC LDR X8, [X22]
	0x03B78AB0 LDR X8, [X8 + 0xB8]
	0x03B78AB4 STR X20, [X8 + 0x38]
	0x03B78AB8 LDR X0, [X24]
	0x03B78ABC BL 0x1C16F10
	0x03B78AC0 LDR X7, [X23]
	0x03B78AC4 MOVZ W6, 0x2710
	0x03B78AC8 MOV X1, X20
	0x03B78ACC MOV X2, X31
	0x03B78AD0 MOV X3, X31
	0x03B78AD4 MOV X4, X31
	0x03B78AD8 MOV W5, W31
	0x03B78ADC MOV X21, X0
	0x03B78AE0 BL 0x2EF0EC8
	0x03B78AE4 STR X21, [X19 + 0x138]
	0x03B78AE8 LDR X0, [X22]
	0x03B78AEC LDR W8, [X0 + 0xE0]
	0x03B78AF0 CBNZ W8, 0x3B78AFC
	0x03B78AF4 BL 0x1C16DFC
	0x03B78AF8 LDR X0, [X22]
	0x03B78AFC LDR X8, [X0 + 0xB8]
	0x03B78B00 ADRP X24, 0x5E3000
	0x03B78B04 ADRP X23, 0x5E3000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x86B000
	007 Move W8, [X21+2672]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5E3000
	015 Move X0, [X0+1080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2672], W8
	019 Add X2, X31, 8
	020 Move X0, X20
	021 Move X1, X19
	022 Move [X31+8], X31
	023 Call XRInteractionManager.TryGetInteractableForCollider, X0, X1, X2
	024 Move W8, W0
	025 Move X0, X31
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {46}
	030 Move X8, [X31+8]
	031 Compare X8, 0
	032 JumpIfEqual {40}
	033 Move X9, 0x5E3000
	034 Move X9, [X9+1080]
	035 Move X10, [X8]
	036 Move X9, [X9]
	037 Move W12, [X10+304]
	038 Move W11, [X9+304]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X31
	041 Move X10, [X10+200]
	042 Add X10, X10, X11
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Add X31, X31, 48
	051 Return X0

Method: System.Void GetColliderToInteractableMap(ref System.Collections.Generic.Dictionary`2<UnityEngine.Collider, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> map)

Disassembly:
	0x03B78B08 LDR X20, [X8 + 0x40]
	0x03B78B0C LDR X24, [X24 + 0xA60]
	0x03B78B10 LDR X23, [X23 + 0xA00]
	0x03B78B14 CBNZ X20, 0x3B78B68
	0x03B78B18 LDR W8, [X0 + 0xE0]
	0x03B78B1C CBNZ W8, 0x3B78B28
	0x03B78B20 BL 0x1C16DFC
	0x03B78B24 LDR X0, [X22]
	0x03B78B28 ADRP X9, 0x5E3000
	0x03B78B2C LDR X8, [X0 + 0xB8]
	0x03B78B30 LDR X9, [X9 + 0x960]
	0x03B78B34 LDR X21, [X8]
	0x03B78B38 LDR X0, [X9]
	0x03B78B3C BL 0x1C16F10
	0x03B78B40 ADRP X8, 0x5E3000
	0x03B78B44 LDR X8, [X8 + 0xB18]
	0x03B78B48 MOV X1, X21
	0x03B78B4C MOV X3, X31
	0x03B78B50 MOV X20, X0
	0x03B78B54 LDR X2, [X8]
	0x03B78B58 BL 0x2D27AA8
	0x03B78B5C LDR X8, [X22]
	0x03B78B60 LDR X8, [X8 + 0xB8]
	0x03B78B64 STR X20, [X8 + 0x40]
	0x03B78B68 LDR X0, [X24]
	0x03B78B6C BL 0x1C16F10
	0x03B78B70 LDR X7, [X23]
	0x03B78B74 MOVZ W6, 0x2710
	0x03B78B78 MOV X1, X20
	0x03B78B7C MOV X2, X31
	0x03B78B80 MOV X3, X31
	0x03B78B84 MOV X4, X31
	0x03B78B88 MOV W5, W31
	0x03B78B8C MOV X21, X0
	0x03B78B90 BL 0x2EF0EC8
	0x03B78B94 STR X21, [X19 + 0x140]
	0x03B78B98 LDR X0, [X22]
	0x03B78B9C LDR W8, [X0 + 0xE0]
	0x03B78BA0 CBNZ W8, 0x3B78BAC
	0x03B78BA4 BL 0x1C16DFC
	0x03B78BA8 LDR X0, [X22]
	0x03B78BAC LDR X8, [X0 + 0xB8]
	0x03B78BB0 ADRP X24, 0x5E3000
	0x03B78BB4 ADRP X23, 0x5E3000
	0x03B78BB8 LDR X20, [X8 + 0x48]
	0x03B78BBC LDR X24, [X24 + 0xA28]
	0x03B78BC0 LDR X23, [X23 + 0x9F8]
	0x03B78BC4 CBNZ X20, 0x3B78C18
	0x03B78BC8 LDR W8, [X0 + 0xE0]
	0x03B78BCC CBNZ W8, 0x3B78BD8
	0x03B78BD0 BL 0x1C16DFC
	0x03B78BD4 LDR X0, [X22]
	0x03B78BD8 ADRP X9, 0x5E3000
	0x03B78BDC LDR X8, [X0 + 0xB8]
	0x03B78BE0 LDR X9, [X9 + 0x968]
	0x03B78BE4 LDR X21, [X8]
	0x03B78BE8 LDR X0, [X9]
	0x03B78BEC BL 0x1C16F10
	0x03B78BF0 ADRP X8, 0x5E3000
	0x03B78BF4 LDR X8, [X8 + 0xB20]
	0x03B78BF8 MOV X1, X21
	0x03B78BFC MOV X3, X31
	0x03B78C00 MOV X20, X0
	0x03B78C04 LDR X2, [X8]
	0x03B78C08 BL 0x2D27AA8
	0x03B78C0C LDR X8, [X22]
	0x03B78C10 LDR X8, [X8 + 0xB8]
	0x03B78C14 STR X20, [X8 + 0x48]
	0x03B78C18 LDR X0, [X24]
	0x03B78C1C BL 0x1C16F10
	0x03B78C20 LDR X7, [X23]
	0x03B78C24 MOVZ W6, 0x2710
	0x03B78C28 MOV X1, X20
	0x03B78C2C MOV X2, X31
	0x03B78C30 MOV X3, X31
	0x03B78C34 MOV X4, X31
	0x03B78C38 MOV W5, W31
	0x03B78C3C MOV X21, X0
	0x03B78C40 BL 0x2EF0EC8
	0x03B78C44 STR X21, [X19 + 0x148]
	0x03B78C48 LDR X0, [X22]
	0x03B78C4C LDR W8, [X0 + 0xE0]
	0x03B78C50 CBNZ W8, 0x3B78C5C
	0x03B78C54 BL 0x1C16DFC
	0x03B78C58 LDR X0, [X22]
	0x03B78C5C LDR X8, [X0 + 0xB8]
	0x03B78C60 ADRP X24, 0x5E3000
	0x03B78C64 ADRP X23, 0x5E3000
	0x03B78C68 LDR X20, [X8 + 0x50]
	0x03B78C6C LDR X24, [X24 + 0xA80]
	0x03B78C70 LDR X23, [X23 + 0x9F0]
	0x03B78C74 CBNZ X20, 0x3B78CC8
	0x03B78C78 LDR W8, [X0 + 0xE0]
	0x03B78C7C CBNZ W8, 0x3B78C88
	0x03B78C80 BL 0x1C16DFC
	0x03B78C84 LDR X0, [X22]
	0x03B78C88 ADRP X9, 0x5E3000
	0x03B78C8C LDR X8, [X0 + 0xB8]
	0x03B78C90 LDR X9, [X9 + 0x940]
	0x03B78C94 LDR X21, [X8]
	0x03B78C98 LDR X0, [X9]
	0x03B78C9C BL 0x1C16F10
	0x03B78CA0 ADRP X8, 0x5E3000
	0x03B78CA4 LDR X8, [X8 + 0xB28]
	0x03B78CA8 MOV X1, X21
	0x03B78CAC MOV X3, X31
	0x03B78CB0 MOV X20, X0
	0x03B78CB4 LDR X2, [X8]
	0x03B78CB8 BL 0x2D27AA8
	0x03B78CBC LDR X8, [X22]
	0x03B78CC0 LDR X8, [X8 + 0xB8]
	0x03B78CC4 STR X20, [X8 + 0x50]
	0x03B78CC8 LDR X0, [X24]
	0x03B78CCC BL 0x1C16F10
	0x03B78CD0 LDR X7, [X23]
	0x03B78CD4 MOVZ W6, 0x2710
	0x03B78CD8 MOV X1, X20
	0x03B78CDC MOV X2, X31
	0x03B78CE0 MOV X3, X31
	0x03B78CE4 MOV X4, X31
	0x03B78CE8 MOV W5, W31
	0x03B78CEC MOV X21, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X21, 0x86B000
	009 Move W8, [X21+2673]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0x5E4000
	017 Move X0, [X0+2248]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E4000
	020 Move X0, [X0+2256]
	021 Call 0x1C17CF4
	022 Move X0, 0x5E4000
	023 Move X0, [X0+2264]
	024 Call 0x1C17CF4
	025 Move X0, 0x5E4000
	026 Move X0, [X0+2272]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E4000
	029 Move X0, [X0+2280]
	030 Call 0x1C17CF4
	031 Move X0, 0x5E4000
	032 Move X0, [X0+2288]
	033 Call 0x1C17CF4
	034 Move X0, 0x5E4000
	035 Move X0, [X0+2296]
	036 Call 0x1C17CF4
	037 Move X0, 0x5E4000
	038 Move X0, [X0+2304]
	039 Call 0x1C17CF4
	040 Move X0, 0x5E3000
	041 Move X0, [X0+1080]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2673], W8
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+32], X31
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X0, [X19]
	050 Compare X0, 0
	051 JumpIfEqual {100}
	052 Move X8, 0x5E4000
	053 Move X8, [X8+2256]
	054 Move X1, [X8]
	055 Call Dictionary`2<Object, Object>.Clear, X0
	056 Move X0, [X20+136]
	057 Compare X0, 0
	058 JumpIfEqual {109}
	059 Move X8, 0x5E4000
	060 Move X8, [X8+2264]
	061 Move X20, 0x5E4000
	062 Move X20, [X20+2280]
	063 Move X22, 0x5E3000
	064 Move X1, [X8]
	065 Move X23, 0x5E4000
	066 Move X21, 0x5E4000
	067 Move X22, [X22+1080]
	068 Move X23, [X23+2248]
	069 Move X21, [X21+2272]
	070 Add X8, X31, 0
	071 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	072 Move X1, [X20]
	073 Add X0, X31, 0
	074 Call Enumerator<Object, Object>.MoveNext, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {97}
	079 Move X2, [X31+24]
	080 Compare X2, 0
	081 JumpIfEqual {72}
	082 Move X9, [X2]
	083 Move X8, [X22]
	084 Move W11, [X9+304]
	085 Move W10, [X8+304]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, [X9+200]
	088 Add X9, X9, X10
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, [X19]
	092 Compare X0, 0
	093 JumpIfEqual {108}
	094 Move X1, [X31+16]
	095 Move X3, [X23]
	096 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	097 Move X1, [X21]
	098 Add X0, X31, 0
	099 Call Enumerator<Object, Object>.Dispose, X0
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X30, [X31+48]
	105 Move X23, [X31+56]
	106 Add X31, X31, 96
	107 Return 
	108 Call 0x1C17F20
	109 Call 0x1C17F20
	110 Move X19, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X19
	113 Call 0x3EB2AD0
	114 Move X20, [X0]
	115 Call 0x3EB2AE0
	116 Move X1, [X21]
	117 Add X0, X31, 0
	118 Call Enumerator<Object, Object>.Dispose, X0
	119 Compare X20, 0
	120 JumpIfEqual {100}
	121 Move X0, X20
	122 Call 0x1C17F18
	123 Move X20, X31
	124 Move X19, X0
	125 Move X1, [X21]
	126 Add X0, X31, 0
	127 Call Enumerator<Object, Object>.Dispose, X0
	128 Compare X20, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X19
	131 Call 0x1D2D690
	132 Move X0, X20
	133 Call 0x1C17F18
	134 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> GetValidTargets(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)

Disassembly:
	0x03B78CF0 BL 0x2EF0EC8
	0x03B78CF4 STR X21, [X19 + 0x150]
	0x03B78CF8 LDR X0, [X22]
	0x03B78CFC LDR W8, [X0 + 0xE0]
	0x03B78D00 CBNZ W8, 0x3B78D0C
	0x03B78D04 BL 0x1C16DFC
	0x03B78D08 LDR X0, [X22]
	0x03B78D0C LDR X8, [X0 + 0xB8]
	0x03B78D10 ADRP X24, 0x5E3000
	0x03B78D14 ADRP X23, 0x5E3000
	0x03B78D18 LDR X20, [X8 + 0x58]
	0x03B78D1C LDR X24, [X24 + 0xA70]
	0x03B78D20 LDR X23, [X23 + 0xA08]
	0x03B78D24 CBNZ X20, 0x3B78D78
	0x03B78D28 LDR W8, [X0 + 0xE0]
	0x03B78D2C CBNZ W8, 0x3B78D38
	0x03B78D30 BL 0x1C16DFC
	0x03B78D34 LDR X0, [X22]
	0x03B78D38 ADRP X9, 0x5E3000
	0x03B78D3C LDR X8, [X0 + 0xB8]
	0x03B78D40 LDR X9, [X9 + 0x958]
	0x03B78D44 LDR X21, [X8]
	0x03B78D48 LDR X0, [X9]
	0x03B78D4C BL 0x1C16F10
	0x03B78D50 ADRP X8, 0x5E3000
	0x03B78D54 LDR X8, [X8 + 0xAD8]
	0x03B78D58 MOV X1, X21
	0x03B78D5C MOV X3, X31
	0x03B78D60 MOV X20, X0
	0x03B78D64 LDR X2, [X8]
	0x03B78D68 BL 0x2D27AA8
	0x03B78D6C LDR X8, [X22]
	0x03B78D70 LDR X8, [X8 + 0xB8]
	0x03B78D74 STR X20, [X8 + 0x58]
	0x03B78D78 LDR X0, [X24]
	0x03B78D7C BL 0x1C16F10
	0x03B78D80 LDR X7, [X23]
	0x03B78D84 MOVZ W6, 0x2710
	0x03B78D88 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x86B000
	008 Move X22, 0x5E3000
	009 Move W8, [X23+2674]
	010 Move X22, [X22+3616]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x5E4000
	019 Move X0, [X0+248]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E3000
	022 Move X0, [X0+3616]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2674], W8
	026 Move X2, [X20+256]
	027 Move X23, 0x5E4000
	028 Move X23, [X23+248]
	029 Move X0, X20
	030 Move X1, X21
	031 Call XRInteractionManager.GetValidTargets, X0, X1, X2
	032 Move X0, [X22]
	033 Move X20, [X20+256]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X2, [X23]
	039 Move X0, X20
	040 Move X1, X19
	041 Call 0x22AE328, X0, X1
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return X0

Method: System.Void ForceSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78D8C MOV X2, X31
	0x03B78D90 MOV X3, X31
	0x03B78D94 MOV X4, X31
	0x03B78D98 MOV W5, W31

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+1384]
	003 Move X3, [X8+1392]
	004 CallNoReturn X4

Method: System.Void ClearInteractorSelection(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B78D9C MOV X21, X0

ISIL:
	001 Return 

Method: System.Void CancelInteractorSelection(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B78DA0 BL 0x2EF0EC8
	0x03B78DA4 STR X21, [X19 + 0x158]
	0x03B78DA8 LDR X0, [X22]
	0x03B78DAC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+840]
	003 Move X2, [X8+848]
	004 CallNoReturn X3

Method: System.Void CancelInteractableSelection(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78DB0 CBNZ W8, 0x3B78DBC
	0x03B78DB4 BL 0x1C16DFC
	0x03B78DB8 LDR X0, [X22]
	0x03B78DBC LDR X8, [X0 + 0xB8]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+856]
	003 Move X2, [X8+864]
	004 CallNoReturn X3

Method: System.Void ClearInteractorHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)

Disassembly:
	0x03B78DC0 ADRP X24, 0x5E3000

ISIL:
	001 Return 

Method: System.Void CancelInteractorHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B78DC4 ADRP X23, 0x5E3000
	0x03B78DC8 LDR X20, [X8 + 0x60]
	0x03B78DCC LDR X24, [X24 + 0xA50]
	0x03B78DD0 LDR X23, [X23 + 0x9D8]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+888]
	003 Move X2, [X8+896]
	004 CallNoReturn X3

Method: System.Void CancelInteractableHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78DD4 CBNZ X20, 0x3B78E28
	0x03B78DD8 LDR W8, [X0 + 0xE0]
	0x03B78DDC CBNZ W8, 0x3B78DE8
	0x03B78DE0 BL 0x1C16DFC

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+904]
	003 Move X2, [X8+912]
	004 CallNoReturn X3

Method: System.Void SelectEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78DE4 LDR X0, [X22]
	0x03B78DE8 ADRP X9, 0x5E3000
	0x03B78DEC LDR X8, [X0 + 0xB8]
	0x03B78DF0 LDR X9, [X9 + 0x990]

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+968]
	003 Move X3, [X8+976]
	004 CallNoReturn X4

Method: System.Void SelectExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78DF4 LDR X21, [X8]
	0x03B78DF8 LDR X0, [X9]
	0x03B78DFC BL 0x1C16F10
	0x03B78E00 ADRP X8, 0x5E3000

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+984]
	003 Move X3, [X8+992]
	004 CallNoReturn X4

Method: System.Void SelectCancel(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78E04 LDR X8, [X8 + 0xAE0]
	0x03B78E08 MOV X1, X21
	0x03B78E0C MOV X3, X31
	0x03B78E10 MOV X20, X0

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+1000]
	003 Move X3, [X8+1008]
	004 CallNoReturn X4

Method: System.Void HoverEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78E14 LDR X2, [X8]
	0x03B78E18 BL 0x2D27AA8
	0x03B78E1C LDR X8, [X22]
	0x03B78E20 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+1016]
	003 Move X3, [X8+1024]
	004 CallNoReturn X4

Method: System.Void HoverExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78E24 STR X20, [X8 + 0x60]
	0x03B78E28 LDR X0, [X24]
	0x03B78E2C BL 0x1C16F10
	0x03B78E30 LDR X7, [X23]

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+1032]
	003 Move X3, [X8+1040]
	004 CallNoReturn X4

Method: System.Void HoverCancel(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)

Disassembly:
	0x03B78E34 MOVZ W6, 0x2710
	0x03B78E38 MOV X1, X20
	0x03B78E3C MOV X2, X31
	0x03B78E40 MOV X3, X31

ISIL:
	001 Move X8, [X0]
	002 Move X4, [X8+1048]
	003 Move X3, [X8+1056]
	004 CallNoReturn X4

Method: System.Void SelectEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B78E44 MOV X4, X31
	0x03B78E48 MOV W5, W31
	0x03B78E4C MOV X21, X0
	0x03B78E50 BL 0x2EF0EC8

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+1096]
	003 Move X4, [X8+1104]
	004 CallNoReturn X5

Method: System.Void SelectExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable, UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B78E54 STR X21, [X19 + 0x160]
	0x03B78E58 MOV X0, X19
	0x03B78E5C LDP X20, X19, [X31 + 0x50]
	0x03B78E60 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+1112]
	003 Move X4, [X8+1120]
	004 CallNoReturn X5

Method: System.Void HoverEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B78E64 LDP X24, X23, [X31 + 0x30]
	0x03B78E68 LDP X26, X25, [X31 + 0x20]
	0x03B78E6C LDP X28, X27, [X31 + 0x10]
	0x03B78E70 MOV X1, X31

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+1128]
	003 Move X4, [X8+1136]
	004 CallNoReturn X5

Method: System.Void HoverExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable, UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B78E74 LDP X29, X30, [X31], #0x60
	0x03B78E78 B 0x3C36C30
	0x03B78E7C BL 0x1C16F20
	0x03B78E80 STP X29, X30, [X31 - 0x60]!

ISIL:
	001 Move X8, [X0]
	002 Move X5, [X8+1144]
	003 Move X4, [X8+1152]
	004 CallNoReturn X5

Method: System.Void InteractorSelectValidTargets(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)

Disassembly:
	0x03B78E84 STP X28, X27, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Void InteractorHoverValidTargets(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)

Disassembly:
	0x03B78E88 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B78E8C STP X24, X23, [X31 + 0x30]
	0x03B78E90 STP X22, X21, [X31 + 0x40]
	0x03B78E94 STP X20, X19, [X31 + 0x50]
	0x03B78E98 ADRP X23, 0x86A000
	0x03B78E9C ADRP X19, 0x5E3000
	0x03B78EA0 ADRP X22, 0x5E2000
	0x03B78EA4 ADRP X21, 0x5E3000
	0x03B78EA8 LDRB W8, [X23 + 0xA74]
	0x03B78EAC LDR X19, [X19 + 0xB38]
	0x03B78EB0 LDR X22, [X22 + 0xE20]
	0x03B78EB4 LDR X21, [X21 + 0xB30]
	0x03B78EB8 TBNZ X8, 0x0, 0x3B79014
	0x03B78EBC ADRP X0, 0x5E3000
	0x03B78EC0 LDR X0, [X0 + 0xB40]
	0x03B78EC4 BL 0x1C16CF4
	0x03B78EC8 ADRP X0, 0x5E3000
	0x03B78ECC LDR X0, [X0 + 0xB48]
	0x03B78ED0 BL 0x1C16CF4
	0x03B78ED4 ADRP X0, 0x5E3000
	0x03B78ED8 LDR X0, [X0 + 0xB50]
	0x03B78EDC BL 0x1C16CF4
	0x03B78EE0 ADRP X0, 0x5E3000
	0x03B78EE4 LDR X0, [X0 + 0xB58]
	0x03B78EE8 BL 0x1C16CF4
	0x03B78EEC ADRP X0, 0x5E3000
	0x03B78EF0 LDR X0, [X0 + 0xB60]
	0x03B78EF4 BL 0x1C16CF4
	0x03B78EF8 ADRP X0, 0x5E3000
	0x03B78EFC LDR X0, [X0 + 0xB38]
	0x03B78F00 BL 0x1C16CF4
	0x03B78F04 ADRP X0, 0x5E3000
	0x03B78F08 LDR X0, [X0 + 0xB68]
	0x03B78F0C BL 0x1C16CF4
	0x03B78F10 ADRP X0, 0x5E3000
	0x03B78F14 LDR X0, [X0 + 0xB70]
	0x03B78F18 BL 0x1C16CF4
	0x03B78F1C ADRP X0, 0x5E3000
	0x03B78F20 LDR X0, [X0 + 0xB30]
	0x03B78F24 BL 0x1C16CF4
	0x03B78F28 ADRP X0, 0x5E2000
	0x03B78F2C LDR X0, [X0 + 0xE20]
	0x03B78F30 BL 0x1C16CF4
	0x03B78F34 ADRP X0, 0x5E3000
	0x03B78F38 LDR X0, [X0 + 0xB78]
	0x03B78F3C BL 0x1C16CF4
	0x03B78F40 ADRP X0, 0x5E3000
	0x03B78F44 LDR X0, [X0 + 0xB80]
	0x03B78F48 BL 0x1C16CF4
	0x03B78F4C ADRP X0, 0x5E3000
	0x03B78F50 LDR X0, [X0 + 0xB88]
	0x03B78F54 BL 0x1C16CF4
	0x03B78F58 ADRP X0, 0x5E3000
	0x03B78F5C LDR X0, [X0 + 0xB90]
	0x03B78F60 BL 0x1C16CF4
	0x03B78F64 ADRP X0, 0x5E3000
	0x03B78F68 LDR X0, [X0 + 0xB98]
	0x03B78F6C BL 0x1C16CF4
	0x03B78F70 ADRP X0, 0x5E3000
	0x03B78F74 LDR X0, [X0 + 0xBA0]
	0x03B78F78 BL 0x1C16CF4
	0x03B78F7C ADRP X0, 0x5E3000
	0x03B78F80 LDR X0, [X0 + 0xBA8]
	0x03B78F84 BL 0x1C16CF4
	0x03B78F88 ADRP X0, 0x5E3000
	0x03B78F8C LDR X0, [X0 + 0xBB0]
	0x03B78F90 BL 0x1C16CF4
	0x03B78F94 ADRP X0, 0x5E3000
	0x03B78F98 LDR X0, [X0 + 0xBB8]
	0x03B78F9C BL 0x1C16CF4
	0x03B78FA0 ADRP X0, 0x5E3000
	0x03B78FA4 LDR X0, [X0 + 0xBC0]
	0x03B78FA8 BL 0x1C16CF4
	0x03B78FAC ADRP X0, 0x5E3000
	0x03B78FB0 LDR X0, [X0 + 0xBC8]
	0x03B78FB4 BL 0x1C16CF4
	0x03B78FB8 ADRP X0, 0x5E3000
	0x03B78FBC LDR X0, [X0 + 0xBD0]
	0x03B78FC0 BL 0x1C16CF4
	0x03B78FC4 ADRP X0, 0x5E3000
	0x03B78FC8 LDR X0, [X0 + 0xBD8]
	0x03B78FCC BL 0x1C16CF4
	0x03B78FD0 ADRP X0, 0x5E3000
	0x03B78FD4 LDR X0, [X0 + 0xBE0]
	0x03B78FD8 BL 0x1C16CF4
	0x03B78FDC ADRP X0, 0x5E3000
	0x03B78FE0 LDR X0, [X0 + 0xBE8]
	0x03B78FE4 BL 0x1C16CF4
	0x03B78FE8 ADRP X0, 0x5E3000
	0x03B78FEC LDR X0, [X0 + 0xBF0]
	0x03B78FF0 BL 0x1C16CF4
	0x03B78FF4 ADRP X0, 0x5E3000
	0x03B78FF8 LDR X0, [X0 + 0xBF8]
	0x03B78FFC BL 0x1C16CF4
	0x03B79000 ADRP X0, 0x5E2000
	0x03B79004 LDR X0, [X0 + 0xC00]
	0x03B79008 BL 0x1C16CF4
	0x03B7900C MOVZ W8, 0x1
	0x03B79010 STRB W8, [X23 + 0xA74]
	0x03B79014 ADRP X24, 0x5E2000
	0x03B79018 ADRP X20, 0x5E2000
	0x03B7901C ADRP X23, 0x5E2000
	0x03B79020 ADRP X29, 0x5E2000
	0x03B79024 ADRP X28, 0x5E2000
	0x03B79028 ADRP X27, 0x5E2000
	0x03B7902C ADRP X26, 0x5E2000
	0x03B79030 ADRP X25, 0x5E2000
	0x03B79034 LDR X24, [X24 + 0xB48]
	0x03B79038 LDR X20, [X20 + 0xB68]
	0x03B7903C LDR X23, [X23 + 0xB40]
	0x03B79040 LDR X29, [X29 + 0xB70]
	0x03B79044 LDR X28, [X28 + 0xB58]
	0x03B79048 LDR X27, [X27 + 0xB50]
	0x03B7904C LDR X26, [X26 + 0xBD0]
	0x03B79050 LDR X25, [X25 + 0xB88]
	0x03B79054 LDR X0, [X19]
	0x03B79058 BL 0x1C16F10
	0x03B7905C ADRP X8, 0x5E2000
	0x03B79060 LDR X8, [X8 + 0xB60]
	0x03B79064 MOV X19, X0
	0x03B79068 LDR X1, [X8]
	0x03B7906C BL 0x301B7C4
	0x03B79070 LDR X8, [X22]
	0x03B79074 LDR X8, [X8 + 0xB8]
	0x03B79078 STR X19, [X8]
	0x03B7907C LDR X0, [X21]
	0x03B79080 LDR W8, [X0 + 0xE0]
	0x03B79084 CBNZ W8, 0x3B79090
	0x03B79088 BL 0x1C16DFC
	0x03B7908C LDR X0, [X21]
	0x03B79090 LDR X8, [X0 + 0xB8]
	0x03B79094 LDR X0, [X24]
	0x03B79098 LDR X19, [X8]
	0x03B7909C BL 0x1C16F10
	0x03B790A0 LDR X2, [X20]
	0x03B790A4 MOV X1, X19
	0x03B790A8 MOV X3, X31
	0x03B790AC MOV X20, X0
	0x03B790B0 BL 0x2D27AA8
	0x03B790B4 LDR X8, [X21]
	0x03B790B8 LDR X0, [X23]
	0x03B790BC LDR X8, [X8 + 0xB8]
	0x03B790C0 LDR X19, [X8]
	0x03B790C4 BL 0x1C16F10
	0x03B790C8 LDR X2, [X29]
	0x03B790CC MOV X1, X19
	0x03B790D0 MOV X3, X31
	0x03B790D4 MOV X21, X0
	0x03B790D8 BL 0x2A6B948
	0x03B790DC LDR X0, [X28]
	0x03B790E0 BL 0x1C16F10
	0x03B790E4 LDR X7, [X27]
	0x03B790E8 MOVZ W6, 0x2710
	0x03B790EC MOV X1, X20
	0x03B790F0 MOV X2, X31
	0x03B790F4 MOV X3, X21
	0x03B790F8 MOV X4, X31
	0x03B790FC MOV W5, W31
	0x03B79100 MOV X19, X0
	0x03B79104 BL 0x2EF0EC8
	0x03B79108 LDR X8, [X22]
	0x03B7910C MOVZ W1, 0x1
	0x03B79110 MOV W2, W31
	0x03B79114 MOV W3, W31
	0x03B79118 LDR X8, [X8 + 0xB8]
	0x03B7911C MOV X4, X31
	0x03B79120 STR X19, [X8 + 0x8]
	0x03B79124 LDR X0, [X26]
	0x03B79128 BL 0x3BFE7FC
	0x03B7912C LDR X8, [X22]
	0x03B79130 MOVZ W1, 0x1
	0x03B79134 MOV W2, W31
	0x03B79138 MOV W3, W31
	0x03B7913C LDR X8, [X8 + 0xB8]
	0x03B79140 MOV X4, X31
	0x03B79144 STR X0, [X8 + 0x10]
	0x03B79148 LDR X0, [X25]
	0x03B7914C BL 0x3BFE7FC
	0x03B79150 LDR X8, [X22]
	0x03B79154 MOVZ W1, 0x1
	0x03B79158 MOV W2, W31
	0x03B7915C MOV W3, W31
	0x03B79160 LDR X8, [X8 + 0xB8]
	0x03B79164 MOV X4, X31
	0x03B79168 STR X0, [X8 + 0x18]
	0x03B7916C ADRP X8, 0x5E2000
	0x03B79170 LDR X8, [X8 + 0xB98]
	0x03B79174 LDR X0, [X8]
	0x03B79178 BL 0x3BFE7FC
	0x03B7917C LDR X8, [X22]
	0x03B79180 MOVZ W1, 0x1
	0x03B79184 MOV W2, W31
	0x03B79188 MOV W3, W31
	0x03B7918C LDR X8, [X8 + 0xB8]
	0x03B79190 MOV X4, X31
	0x03B79194 STR X0, [X8 + 0x20]
	0x03B79198 ADRP X8, 0x5E2000
	0x03B7919C LDR X8, [X8 + 0xB78]
	0x03B791A0 LDR X0, [X8]
	0x03B791A4 BL 0x3BFE7FC
	0x03B791A8 LDR X8, [X22]
	0x03B791AC MOVZ W1, 0x1
	0x03B791B0 MOV W2, W31
	0x03B791B4 MOV W3, W31
	0x03B791B8 LDR X8, [X8 + 0xB8]
	0x03B791BC MOV X4, X31
	0x03B791C0 STR X0, [X8 + 0x28]
	0x03B791C4 ADRP X8, 0x5E2000
	0x03B791C8 LDR X8, [X8 + 0xB90]
	0x03B791CC LDR X0, [X8]
	0x03B791D0 BL 0x3BFE7FC
	0x03B791D4 LDR X8, [X22]
	0x03B791D8 MOVZ W1, 0x1
	0x03B791DC MOV W2, W31
	0x03B791E0 MOV W3, W31
	0x03B791E4 LDR X8, [X8 + 0xB8]
	0x03B791E8 MOV X4, X31
	0x03B791EC STR X0, [X8 + 0x30]
	0x03B791F0 ADRP X8, 0x5E2000
	0x03B791F4 LDR X8, [X8 + 0xBB8]
	0x03B791F8 LDR X0, [X8]
	0x03B791FC BL 0x3BFE7FC
	0x03B79200 LDR X8, [X22]
	0x03B79204 MOVZ W1, 0x1
	0x03B79208 MOV W2, W31
	0x03B7920C MOV W3, W31
	0x03B79210 LDR X8, [X8 + 0xB8]
	0x03B79214 MOV X4, X31
	0x03B79218 STR X0, [X8 + 0x38]
	0x03B7921C ADRP X8, 0x5E2000
	0x03B79220 LDR X8, [X8 + 0xC00]
	0x03B79224 LDR X0, [X8]
	0x03B79228 BL 0x3BFE7FC
	0x03B7922C LDR X8, [X22]
	0x03B79230 MOVZ W1, 0x1
	0x03B79234 MOV W2, W31
	0x03B79238 MOV W3, W31
	0x03B7923C LDR X8, [X8 + 0xB8]
	0x03B79240 MOV X4, X31
	0x03B79244 STR X0, [X8 + 0x40]
	0x03B79248 ADRP X8, 0x5E2000
	0x03B7924C LDR X8, [X8 + 0xBB0]
	0x03B79250 LDR X0, [X8]
	0x03B79254 BL 0x3BFE7FC
	0x03B79258 LDR X8, [X22]
	0x03B7925C MOVZ W1, 0x1
	0x03B79260 MOV W2, W31
	0x03B79264 MOV W3, W31
	0x03B79268 LDR X8, [X8 + 0xB8]
	0x03B7926C MOV X4, X31
	0x03B79270 STR X0, [X8 + 0x48]
	0x03B79274 ADRP X8, 0x5E2000
	0x03B79278 LDR X8, [X8 + 0xB80]
	0x03B7927C LDR X0, [X8]
	0x03B79280 BL 0x3BFE7FC
	0x03B79284 LDR X8, [X22]
	0x03B79288 MOVZ W1, 0x1
	0x03B7928C MOV W2, W31
	0x03B79290 MOV W3, W31
	0x03B79294 LDR X8, [X8 + 0xB8]
	0x03B79298 MOV X4, X31
	0x03B7929C STR X0, [X8 + 0x50]
	0x03B792A0 ADRP X8, 0x5E2000
	0x03B792A4 LDR X8, [X8 + 0xBC8]
	0x03B792A8 LDR X0, [X8]
	0x03B792AC BL 0x3BFE7FC
	0x03B792B0 LDR X8, [X22]
	0x03B792B4 MOVZ W1, 0x1
	0x03B792B8 MOV W2, W31
	0x03B792BC MOV W3, W31
	0x03B792C0 LDR X8, [X8 + 0xB8]
	0x03B792C4 MOV X4, X31
	0x03B792C8 STR X0, [X8 + 0x58]
	0x03B792CC ADRP X8, 0x5E2000
	0x03B792D0 LDR X8, [X8 + 0xBC0]
	0x03B792D4 LDR X0, [X8]
	0x03B792D8 BL 0x3BFE7FC
	0x03B792DC LDR X8, [X22]
	0x03B792E0 MOVZ W1, 0x1
	0x03B792E4 MOV W2, W31
	0x03B792E8 MOV W3, W31
	0x03B792EC LDR X8, [X8 + 0xB8]
	0x03B792F0 MOV X4, X31
	0x03B792F4 STR X0, [X8 + 0x60]
	0x03B792F8 ADRP X8, 0x5E2000
	0x03B792FC LDR X8, [X8 + 0xBD8]
	0x03B79300 LDR X0, [X8]
	0x03B79304 BL 0x3BFE7FC
	0x03B79308 LDR X8, [X22]
	0x03B7930C MOVZ W1, 0x1
	0x03B79310 MOV W2, W31
	0x03B79314 MOV W3, W31
	0x03B79318 LDR X8, [X8 + 0xB8]
	0x03B7931C MOV X4, X31
	0x03B79320 STR X0, [X8 + 0x68]
	0x03B79324 ADRP X8, 0x5E2000
	0x03B79328 LDR X8, [X8 + 0xBF0]
	0x03B7932C LDR X0, [X8]
	0x03B79330 BL 0x3BFE7FC
	0x03B79334 LDR X8, [X22]
	0x03B79338 MOVZ W1, 0x1
	0x03B7933C MOV W2, W31
	0x03B79340 MOV W3, W31
	0x03B79344 LDR X8, [X8 + 0xB8]
	0x03B79348 MOV X4, X31
	0x03B7934C STR X0, [X8 + 0x70]
	0x03B79350 ADRP X8, 0x5E2000
	0x03B79354 LDR X8, [X8 + 0xBA8]
	0x03B79358 LDR X0, [X8]
	0x03B7935C BL 0x3BFE7FC
	0x03B79360 LDR X8, [X22]
	0x03B79364 MOVZ W1, 0x1
	0x03B79368 MOV W2, W31
	0x03B7936C MOV W3, W31
	0x03B79370 LDR X8, [X8 + 0xB8]
	0x03B79374 MOV X4, X31
	0x03B79378 STR X0, [X8 + 0x78]
	0x03B7937C ADRP X8, 0x5E2000
	0x03B79380 LDR X8, [X8 + 0xBE0]
	0x03B79384 LDR X0, [X8]
	0x03B79388 BL 0x3BFE7FC
	0x03B7938C LDR X8, [X22]
	0x03B79390 MOVZ W1, 0x1
	0x03B79394 MOV W2, W31
	0x03B79398 MOV W3, W31
	0x03B7939C LDR X8, [X8 + 0xB8]
	0x03B793A0 MOV X4, X31
	0x03B793A4 STR X0, [X8 + 0x80]
	0x03B793A8 ADRP X8, 0x5E2000
	0x03B793AC LDR X8, [X8 + 0xBA0]
	0x03B793B0 LDR X0, [X8]
	0x03B793B4 BL 0x3BFE7FC
	0x03B793B8 LDR X8, [X22]
	0x03B793BC MOVZ W1, 0x1
	0x03B793C0 MOV W2, W31
	0x03B793C4 MOV W3, W31
	0x03B793C8 LDR X8, [X8 + 0xB8]
	0x03B793CC MOV X4, X31
	0x03B793D0 STR X0, [X8 + 0x88]
	0x03B793D4 ADRP X8, 0x5E2000
	0x03B793D8 LDR X8, [X8 + 0xBF8]
	0x03B793DC LDR X0, [X8]
	0x03B793E0 BL 0x3BFE7FC
	0x03B793E4 LDR X8, [X22]
	0x03B793E8 MOVZ W1, 0x1
	0x03B793EC MOV W2, W31
	0x03B793F0 MOV W3, W31
	0x03B793F4 LDR X8, [X8 + 0xB8]
	0x03B793F8 MOV X4, X31
	0x03B793FC STR X0, [X8 + 0x90]
	0x03B79400 ADRP X8, 0x5E2000
	0x03B79404 LDR X8, [X8 + 0xBE8]
	0x03B79408 LDR X0, [X8]
	0x03B7940C BL 0x3BFE7FC
	0x03B79410 LDR X8, [X22]
	0x03B79414 LDP X20, X19, [X31 + 0x50]
	0x03B79418 LDP X22, X21, [X31 + 0x40]
	0x03B7941C LDP X24, X23, [X31 + 0x30]
	0x03B79420 LDR X8, [X8 + 0xB8]
	0x03B79424 LDP X26, X25, [X31 + 0x20]
	0x03B79428 LDP X28, X27, [X31 + 0x10]
	0x03B7942C STR X0, [X8 + 0x98]
	0x03B79430 LDP X29, X30, [X31], #0x60
	0x03B79434 RET
	0x03B79438 STR X30, [X31 - 0x20]!
	0x03B7943C STP X20, X19, [X31 + 0x10]
	0x03B79440 ADRP X19, 0x869000
	0x03B79444 ADRP X20, 0x5E2000
	0x03B79448 LDRB W8, [X19 + 0xA75]
	0x03B7944C LDR X20, [X20 + 0xB30]
	0x03B79450 TBNZ X8, 0x0, 0x3B79468
	0x03B79454 ADRP X0, 0x5E2000
	0x03B79458 LDR X0, [X0 + 0xB30]
	0x03B7945C BL 0x1C16CF4
	0x03B79460 MOVZ W8, 0x1
	0x03B79464 STRB W8, [X19 + 0xA75]
	0x03B79468 LDR X0, [X20]
	0x03B7946C BL 0x1C16F10
	0x03B79470 MOV X1, X31
	0x03B79474 MOV X19, X0
	0x03B79478 BL 0x33BDD8C
	0x03B7947C LDR X8, [X20]
	0x03B79480 LDR X8, [X8 + 0xB8]
	0x03B79484 STR X19, [X8]
	0x03B79488 LDP X20, X19, [X31 + 0x10]
	0x03B7948C LDR X30, [X31], #0x20
	0x03B79490 RET
	0x03B79494 MOV X1, X31
	0x03B79498 B 0x33BDD8C
	0x03B7949C STR X30, [X31 - 0x20]!
	0x03B794A0 STP X20, X19, [X31 + 0x10]
	0x03B794A4 ADRP X19, 0x869000
	0x03B794A8 ADRP X20, 0x5E2000
	0x03B794AC LDRB W8, [X19 + 0xA76]
	0x03B794B0 LDR X20, [X20 + 0xC08]
	0x03B794B4 TBNZ X8, 0x0, 0x3B794CC
	0x03B794B8 ADRP X0, 0x5E2000
	0x03B794BC LDR X0, [X0 + 0xC08]
	0x03B794C0 BL 0x1C16CF4
	0x03B794C4 MOVZ W8, 0x1
	0x03B794C8 STRB W8, [X19 + 0xA76]
	0x03B794CC LDR X0, [X20]
	0x03B794D0 BL 0x1C16F10
	0x03B794D4 MOV X1, X31
	0x03B794D8 MOV X19, X0
	0x03B794DC BL 0x33BDD8C
	0x03B794E0 MOV X0, X19
	0x03B794E4 LDP X20, X19, [X31 + 0x10]
	0x03B794E8 LDR X30, [X31], #0x20
	0x03B794EC RET
	0x03B794F0 STR X30, [X31 - 0x20]!
	0x03B794F4 STP X20, X19, [X31 + 0x10]
	0x03B794F8 ADRP X19, 0x869000
	0x03B794FC ADRP X20, 0x5E2000
	0x03B79500 LDRB W8, [X19 + 0xA77]
	0x03B79504 LDR X20, [X20 + 0xC10]
	0x03B79508 TBNZ X8, 0x0, 0x3B79520
	0x03B7950C ADRP X0, 0x5E2000
	0x03B79510 LDR X0, [X0 + 0xC10]
	0x03B79514 BL 0x1C16CF4
	0x03B79518 MOVZ W8, 0x1
	0x03B7951C STRB W8, [X19 + 0xA77]
	0x03B79520 LDR X0, [X20]
	0x03B79524 BL 0x1C16F10
	0x03B79528 MOV X1, X31
	0x03B7952C MOV X19, X0
	0x03B79530 BL 0x33BDD8C
	0x03B79534 MOV X0, X19
	0x03B79538 LDP X20, X19, [X31 + 0x10]
	0x03B7953C LDR X30, [X31], #0x20
	0x03B79540 RET
	0x03B79544 STR X30, [X31 - 0x20]!
	0x03B79548 STP X20, X19, [X31 + 0x10]
	0x03B7954C ADRP X19, 0x869000
	0x03B79550 ADRP X20, 0x5E2000
	0x03B79554 LDRB W8, [X19 + 0xA78]
	0x03B79558 LDR X20, [X20 + 0xC18]
	0x03B7955C TBNZ X8, 0x0, 0x3B79574
	0x03B79560 ADRP X0, 0x5E2000
	0x03B79564 LDR X0, [X0 + 0xC18]
	0x03B79568 BL 0x1C16CF4
	0x03B7956C MOVZ W8, 0x1
	0x03B79570 STRB W8, [X19 + 0xA78]
	0x03B79574 LDR X0, [X20]
	0x03B79578 BL 0x1C16F10
	0x03B7957C MOV X1, X31
	0x03B79580 MOV X19, X0
	0x03B79584 BL 0x33BDD8C
	0x03B79588 MOV X0, X19
	0x03B7958C LDP X20, X19, [X31 + 0x10]
	0x03B79590 LDR X30, [X31], #0x20
	0x03B79594 RET
	0x03B79598 STR X30, [X31 - 0x20]!
	0x03B7959C STP X20, X19, [X31 + 0x10]
	0x03B795A0 ADRP X19, 0x869000
	0x03B795A4 ADRP X20, 0x5E2000
	0x03B795A8 LDRB W8, [X19 + 0xA79]
	0x03B795AC LDR X20, [X20 + 0xC20]
	0x03B795B0 TBNZ X8, 0x0, 0x3B795C8
	0x03B795B4 ADRP X0, 0x5E2000
	0x03B795B8 LDR X0, [X0 + 0xC20]
	0x03B795BC BL 0x1C16CF4
	0x03B795C0 MOVZ W8, 0x1
	0x03B795C4 STRB W8, [X19 + 0xA79]
	0x03B795C8 LDR X0, [X20]
	0x03B795CC BL 0x1C16F10
	0x03B795D0 MOV X1, X31
	0x03B795D4 MOV X19, X0
	0x03B795D8 BL 0x33BDD8C
	0x03B795DC MOV X0, X19
	0x03B795E0 LDP X20, X19, [X31 + 0x10]
	0x03B795E4 LDR X30, [X31], #0x20
	0x03B795E8 RET
	0x03B795EC STR X30, [X31 - 0x20]!
	0x03B795F0 STP X20, X19, [X31 + 0x10]
	0x03B795F4 ADRP X19, 0x869000
	0x03B795F8 ADRP X20, 0x5E2000
	0x03B795FC LDRB W8, [X19 + 0xA7A]
	0x03B79600 LDR X20, [X20 + 0xC28]
	0x03B79604 TBNZ X8, 0x0, 0x3B7961C
	0x03B79608 ADRP X0, 0x5E2000
	0x03B7960C LDR X0, [X0 + 0xC28]
	0x03B79610 BL 0x1C16CF4
	0x03B79614 MOVZ W8, 0x1
	0x03B79618 STRB W8, [X19 + 0xA7A]
	0x03B7961C LDR X0, [X20]
	0x03B79620 BL 0x1C16F10
	0x03B79624 MOV X1, X31
	0x03B79628 MOV X19, X0
	0x03B7962C BL 0x33BDD8C
	0x03B79630 MOV X0, X19
	0x03B79634 LDP X20, X19, [X31 + 0x10]
	0x03B79638 LDR X30, [X31], #0x20
	0x03B7963C RET
	0x03B79640 STR X30, [X31 - 0x20]!
	0x03B79644 STP X20, X19, [X31 + 0x10]
	0x03B79648 ADRP X19, 0x869000
	0x03B7964C ADRP X20, 0x5E2000
	0x03B79650 LDRB W8, [X19 + 0xA7B]
	0x03B79654 LDR X20, [X20 + 0xC30]
	0x03B79658 TBNZ X8, 0x0, 0x3B79670
	0x03B7965C ADRP X0, 0x5E2000
	0x03B79660 LDR X0, [X0 + 0xC30]
	0x03B79664 BL 0x1C16CF4
	0x03B79668 MOVZ W8, 0x1
	0x03B7966C STRB W8, [X19 + 0xA7B]
	0x03B79670 LDR X0, [X20]
	0x03B79674 BL 0x1C16F10
	0x03B79678 MOV X1, X31
	0x03B7967C MOV X19, X0
	0x03B79680 BL 0x33BDD8C
	0x03B79684 MOV X0, X19
	0x03B79688 LDP X20, X19, [X31 + 0x10]
	0x03B7968C LDR X30, [X31], #0x20
	0x03B79690 RET
	0x03B79694 STR X30, [X31 - 0x20]!
	0x03B79698 STP X20, X19, [X31 + 0x10]
	0x03B7969C ADRP X19, 0x869000
	0x03B796A0 ADRP X20, 0x5E2000
	0x03B796A4 LDRB W8, [X19 + 0xA7C]
	0x03B796A8 LDR X20, [X20 + 0xC38]
	0x03B796AC TBNZ X8, 0x0, 0x3B796C4
	0x03B796B0 ADRP X0, 0x5E2000
	0x03B796B4 LDR X0, [X0 + 0xC38]
	0x03B796B8 BL 0x1C16CF4
	0x03B796BC MOVZ W8, 0x1
	0x03B796C0 STRB W8, [X19 + 0xA7C]
	0x03B796C4 LDR X0, [X20]
	0x03B796C8 BL 0x1C16F10
	0x03B796CC MOV X1, X31
	0x03B796D0 MOV X19, X0
	0x03B796D4 BL 0x33BDD8C
	0x03B796D8 MOV X0, X19
	0x03B796DC LDP X20, X19, [X31 + 0x10]
	0x03B796E0 LDR X30, [X31], #0x20
	0x03B796E4 RET
	0x03B796E8 STR X30, [X31 - 0x20]!
	0x03B796EC STP X20, X19, [X31 + 0x10]
	0x03B796F0 ADRP X19, 0x869000
	0x03B796F4 ADRP X20, 0x5E2000
	0x03B796F8 LDRB W8, [X19 + 0xA7D]
	0x03B796FC LDR X20, [X20 + 0xC40]
	0x03B79700 TBNZ X8, 0x0, 0x3B79718
	0x03B79704 ADRP X0, 0x5E2000
	0x03B79708 LDR X0, [X0 + 0xC40]
	0x03B7970C BL 0x1C16CF4
	0x03B79710 MOVZ W8, 0x1
	0x03B79714 STRB W8, [X19 + 0xA7D]
	0x03B79718 LDR X0, [X20]
	0x03B7971C BL 0x1C16F10
	0x03B79720 MOV X1, X31
	0x03B79724 MOV X19, X0
	0x03B79728 BL 0x33BDD8C
	0x03B7972C MOV X0, X19
	0x03B79730 LDP X20, X19, [X31 + 0x10]
	0x03B79734 LDR X30, [X31], #0x20
	0x03B79738 RET
	0x03B7973C STR X30, [X31 - 0x20]!
	0x03B79740 STP X20, X19, [X31 + 0x10]
	0x03B79744 ADRP X19, 0x869000
	0x03B79748 ADRP X20, 0x5E2000
	0x03B7974C LDRB W8, [X19 + 0xA7E]
	0x03B79750 LDR X20, [X20 + 0xC48]
	0x03B79754 TBNZ X8, 0x0, 0x3B7976C
	0x03B79758 ADRP X0, 0x5E2000
	0x03B7975C LDR X0, [X0 + 0xC48]
	0x03B79760 BL 0x1C16CF4
	0x03B79764 MOVZ W8, 0x1
	0x03B79768 STRB W8, [X19 + 0xA7E]
	0x03B7976C LDR X0, [X20]
	0x03B79770 BL 0x1C16F10
	0x03B79774 MOV X1, X31
	0x03B79778 MOV X19, X0
	0x03B7977C BL 0x33BDD8C
	0x03B79780 MOV X0, X19
	0x03B79784 LDP X20, X19, [X31 + 0x10]
	0x03B79788 LDR X30, [X31], #0x20
	0x03B7978C RET
	0x03B79790 STR X30, [X31 - 0x20]!
	0x03B79794 STP X20, X19, [X31 + 0x10]
	0x03B79798 ADRP X19, 0x869000
	0x03B7979C ADRP X20, 0x5E2000
	0x03B797A0 LDRB W8, [X19 + 0xA7F]
	0x03B797A4 LDR X20, [X20 + 0xC50]
	0x03B797A8 TBNZ X8, 0x0, 0x3B797C0
	0x03B797AC ADRP X0, 0x5E2000
	0x03B797B0 LDR X0, [X0 + 0xC50]
	0x03B797B4 BL 0x1C16CF4
	0x03B797B8 MOVZ W8, 0x1
	0x03B797BC STRB W8, [X19 + 0xA7F]
	0x03B797C0 LDR X0, [X20]
	0x03B797C4 BL 0x1C16F10
	0x03B797C8 MOV X1, X31
	0x03B797CC MOV X19, X0
	0x03B797D0 BL 0x33BDD8C
	0x03B797D4 MOV X0, X19
	0x03B797D8 LDP X20, X19, [X31 + 0x10]
	0x03B797DC LDR X30, [X31], #0x20
	0x03B797E0 RET
	0x03B797E4 STR X30, [X31 - 0x20]!
	0x03B797E8 STP X20, X19, [X31 + 0x10]
	0x03B797EC ADRP X19, 0x869000
	0x03B797F0 ADRP X20, 0x5E2000
	0x03B797F4 LDRB W8, [X19 + 0xA80]
	0x03B797F8 LDR X20, [X20 + 0xC58]
	0x03B797FC TBNZ X8, 0x0, 0x3B79814
	0x03B79800 ADRP X0, 0x5E2000
	0x03B79804 LDR X0, [X0 + 0xC58]
	0x03B79808 BL 0x1C16CF4
	0x03B7980C MOVZ W8, 0x1
	0x03B79810 STRB W8, [X19 + 0xA80]
	0x03B79814 LDR X0, [X20]
	0x03B79818 BL 0x1C16F10
	0x03B7981C MOV X1, X31
	0x03B79820 MOV X19, X0
	0x03B79824 BL 0x33BDD8C
	0x03B79828 MOV X0, X19
	0x03B7982C LDP X20, X19, [X31 + 0x10]
	0x03B79830 LDR X30, [X31], #0x20
	0x03B79834 RET
	0x03B79838 STR X30, [X31 - 0x20]!
	0x03B7983C STP X20, X19, [X31 + 0x10]
	0x03B79840 ADRP X19, 0x869000
	0x03B79844 ADRP X20, 0x5E2000
	0x03B79848 LDRB W8, [X19 + 0xA81]
	0x03B7984C LDR X20, [X20 + 0xC60]
	0x03B79850 TBNZ X8, 0x0, 0x3B79868
	0x03B79854 ADRP X0, 0x5E2000
	0x03B79858 LDR X0, [X0 + 0xC60]
	0x03B7985C BL 0x1C16CF4
	0x03B79860 MOVZ W8, 0x1
	0x03B79864 STRB W8, [X19 + 0xA81]
	0x03B79868 LDR X0, [X20]
	0x03B7986C BL 0x1C16F10
	0x03B79870 MOV X1, X31
	0x03B79874 MOV X19, X0
	0x03B79878 BL 0x33BDD8C
	0x03B7987C MOV X0, X19
	0x03B79880 LDP X20, X19, [X31 + 0x10]
	0x03B79884 LDR X30, [X31], #0x20
	0x03B79888 RET
	0x03B7988C STP X30, X21, [X31 - 0x20]!
	0x03B79890 STP X20, X19, [X31 + 0x10]
	0x03B79894 ADRP X20, 0x869000
	0x03B79898 ADRP X21, 0x5E2000
	0x03B7989C ADRP X19, 0x5E2000
	0x03B798A0 LDRB W8, [X20 + 0xA82]
	0x03B798A4 LDR X21, [X21 + 0xC68]
	0x03B798A8 LDR X19, [X19 + 0xC70]
	0x03B798AC TBNZ X8, 0x0, 0x3B798D0
	0x03B798B0 ADRP X0, 0x5E2000
	0x03B798B4 LDR X0, [X0 + 0xC70]
	0x03B798B8 BL 0x1C16CF4
	0x03B798BC ADRP X0, 0x5E2000
	0x03B798C0 LDR X0, [X0 + 0xC68]
	0x03B798C4 BL 0x1C16CF4
	0x03B798C8 MOVZ W8, 0x1
	0x03B798CC STRB W8, [X20 + 0xA82]
	0x03B798D0 LDR X0, [X21]
	0x03B798D4 BL 0x1C16F10
	0x03B798D8 LDR X1, [X19]
	0x03B798DC MOV X19, X0
	0x03B798E0 BL 0x301B7C4
	0x03B798E4 MOV X0, X19
	0x03B798E8 LDP X20, X19, [X31 + 0x10]
	0x03B798EC LDP X30, X21, [X31], #0x20
	0x03B798F0 RET
	0x03B798F4 STR X30, [X31 - 0x20]!
	0x03B798F8 STP X20, X19, [X31 + 0x10]
	0x03B798FC ADRP X20, 0x869000
	0x03B79900 LDRB W8, [X20 + 0xA83]
	0x03B79904 MOV X19, X1
	0x03B79908 TBNZ X8, 0x0, 0x3B79920
	0x03B7990C ADRP X0, 0x5E2000
	0x03B79910 LDR X0, [X0 + 0x820]
	0x03B79914 BL 0x1C16CF4
	0x03B79918 MOVZ W8, 0x1
	0x03B7991C STRB W8, [X20 + 0xA83]
	0x03B79920 CBZ X19, 0x3B7995C
	0x03B79924 LDP W2, W8, [X19 + 0x18]
	0x03B79928 ADD W8, W8, 0x1
	0x03B7992C CMP W2, 0x1
	0x03B79930 STP W31, W8, [X19 + 0x18]
	0x03B79934 B.LT 0x3B79950
	0x03B79938 LDR X0, [X19 + 0x10]
	0x03B7993C LDP X20, X19, [X31 + 0x10]
	0x03B79940 MOV W1, W31
	0x03B79944 MOV X3, X31
	0x03B79948 LDR X30, [X31], #0x20
	0x03B7994C B 0x339FA34
	0x03B79950 LDP X20, X19, [X31 + 0x10]
	0x03B79954 LDR X30, [X31], #0x20
	0x03B79958 RET
	0x03B7995C BL 0x1C16F20
	0x03B79960 LDR X0, [X0 + 0x20]
	0x03B79964 RET
	0x03B79968 STR X30, [X31 - 0x20]!
	0x03B7996C STP X20, X19, [X31 + 0x10]
	0x03B79970 LDR X8, [X0 + 0x20]
	0x03B79974 MOV X20, X1
	0x03B79978 MOV X19, X0
	0x03B7997C MOV X1, X8
	0x03B79980 BL 0x3B799B4
	0x03B79984 MOV X0, X19
	0x03B79988 MOV X1, X20
	0x03B7998C STR X20, [X19 + 0x20]
	0x03B79990 BL 0x3B79AC4
	0x03B79994 MOV X0, X19
	0x03B79998 BL 0x3B79BD4
	0x03B7999C LDR X8, [X19]
	0x03B799A0 MOV X0, X19
	0x03B799A4 LDP X20, X19, [X31 + 0x10]
	0x03B799A8 LDP X2, X1, [X8 + 0x178]
	0x03B799AC LDR X30, [X31], #0x20
	0x03B799B0 BR X2
	0x03B799B4 STR X30, [X31 - 0x30]!
	0x03B799B8 STP X22, X21, [X31 + 0x10]
	0x03B799BC STP X20, X19, [X31 + 0x20]
	0x03B799C0 ADRP X21, 0x869000
	0x03B799C4 ADRP X22, 0x57A000
	0x03B799C8 LDRB W8, [X21 + 0xA87]
	0x03B799CC LDR X22, [X22 + 0x598]
	0x03B799D0 MOV X19, X1
	0x03B799D4 MOV X20, X0
	0x03B799D8 TBNZ X8, 0x0, 0x3B79A14
	0x03B799DC ADRP X0, 0x5E2000
	0x03B799E0 LDR X0, [X0 + 0xC78]
	0x03B799E4 BL 0x1C16CF4
	0x03B799E8 ADRP X0, 0x5E2000
	0x03B799EC LDR X0, [X0 + 0xC80]
	0x03B799F0 BL 0x1C16CF4
	0x03B799F4 ADRP X0, 0x5E2000
	0x03B799F8 LDR X0, [X0 + 0xC88]
	0x03B799FC BL 0x1C16CF4
	0x03B79A00 ADRP X0, 0x57A000
	0x03B79A04 LDR X0, [X0 + 0x598]
	0x03B79A08 BL 0x1C16CF4
	0x03B79A0C MOVZ W8, 0x1
	0x03B79A10 STRB W8, [X21 + 0xA87]
	0x03B79A14 LDR X0, [X22]
	0x03B79A18 LDR W8, [X0 + 0xE0]
	0x03B79A1C CBNZ W8, 0x3B79A24
	0x03B79A20 BL 0x1C16DFC
	0x03B79A24 MOV X0, X19
	0x03B79A28 MOV X1, X31
	0x03B79A2C MOV X2, X31
	0x03B79A30 BL 0x3C354F8
	0x03B79A34 TBZ X0, 0x0, 0x3B79AB0
	0x03B79A38 ADRP X22, 0x5E2000
	0x03B79A3C LDR X22, [X22 + 0xC78]
	0x03B79A40 LDR X0, [X22]
	0x03B79A44 BL 0x1C16F10
	0x03B79A48 ADRP X8, 0x5E2000
	0x03B79A4C LDR X8, [X8 + 0xC80]
	0x03B79A50 MOV X1, X20
	0x03B79A54 MOV X3, X31
	0x03B79A58 MOV X21, X0
	0x03B79A5C LDR X2, [X8]
	0x03B79A60 BL 0x2A6B948
	0x03B79A64 CBZ X19, 0x3B79AC0
	0x03B79A68 MOV X0, X19
	0x03B79A6C MOV X1, X21
	0x03B79A70 BL 0x3B7A224
	0x03B79A74 LDR X0, [X22]
	0x03B79A78 BL 0x1C16F10
	0x03B79A7C ADRP X8, 0x5E2000
	0x03B79A80 LDR X8, [X8 + 0xC88]
	0x03B79A84 MOV X1, X20
	0x03B79A88 MOV X3, X31
	0x03B79A8C MOV X21, X0
	0x03B79A90 LDR X2, [X8]
	0x03B79A94 BL 0x2A6B948
	0x03B79A98 MOV X0, X19
	0x03B79A9C MOV X1, X21
	0x03B79AA0 LDP X20, X19, [X31 + 0x20]
	0x03B79AA4 LDP X22, X21, [X31 + 0x10]
	0x03B79AA8 LDR X30, [X31], #0x30
	0x03B79AAC B 0x3B7A2D4
	0x03B79AB0 LDP X20, X19, [X31 + 0x20]
	0x03B79AB4 LDP X22, X21, [X31 + 0x10]
	0x03B79AB8 LDR X30, [X31], #0x30
	0x03B79ABC RET
	0x03B79AC0 BL 0x1C16F20
	0x03B79AC4 STR X30, [X31 - 0x30]!
	0x03B79AC8 STP X22, X21, [X31 + 0x10]
	0x03B79ACC STP X20, X19, [X31 + 0x20]
	0x03B79AD0 ADRP X21, 0x869000
	0x03B79AD4 ADRP X22, 0x57A000
	0x03B79AD8 LDRB W8, [X21 + 0xA86]
	0x03B79ADC LDR X22, [X22 + 0x598]
	0x03B79AE0 MOV X19, X1
	0x03B79AE4 MOV X20, X0
	0x03B79AE8 TBNZ X8, 0x0, 0x3B79B24
	0x03B79AEC ADRP X0, 0x5E2000
	0x03B79AF0 LDR X0, [X0 + 0xC78]
	0x03B79AF4 BL 0x1C16CF4
	0x03B79AF8 ADRP X0, 0x5E2000
	0x03B79AFC LDR X0, [X0 + 0xC80]
	0x03B79B00 BL 0x1C16CF4
	0x03B79B04 ADRP X0, 0x5E2000
	0x03B79B08 LDR X0, [X0 + 0xC88]
	0x03B79B0C BL 0x1C16CF4
	0x03B79B10 ADRP X0, 0x57A000
	0x03B79B14 LDR X0, [X0 + 0x598]
	0x03B79B18 BL 0x1C16CF4
	0x03B79B1C MOVZ W8, 0x1
	0x03B79B20 STRB W8, [X21 + 0xA86]
	0x03B79B24 LDR X0, [X22]
	0x03B79B28 LDR W8, [X0 + 0xE0]
	0x03B79B2C CBNZ W8, 0x3B79B34
	0x03B79B30 BL 0x1C16DFC
	0x03B79B34 MOV X0, X19
	0x03B79B38 MOV X1, X31
	0x03B79B3C MOV X2, X31
	0x03B79B40 BL 0x3C354F8
	0x03B79B44 TBZ X0, 0x0, 0x3B79BC0
	0x03B79B48 ADRP X22, 0x5E2000
	0x03B79B4C LDR X22, [X22 + 0xC78]
	0x03B79B50 LDR X0, [X22]
	0x03B79B54 BL 0x1C16F10
	0x03B79B58 ADRP X8, 0x5E2000
	0x03B79B5C LDR X8, [X8 + 0xC80]
	0x03B79B60 MOV X1, X20
	0x03B79B64 MOV X3, X31
	0x03B79B68 MOV X21, X0
	0x03B79B6C LDR X2, [X8]
	0x03B79B70 BL 0x2A6B948
	0x03B79B74 CBZ X19, 0x3B79BD0
	0x03B79B78 MOV X0, X19
	0x03B79B7C MOV X1, X21
	0x03B79B80 BL 0x3B7A0C4
	0x03B79B84 LDR X0, [X22]
	0x03B79B88 BL 0x1C16F10
	0x03B79B8C ADRP X8, 0x5E2000
	0x03B79B90 LDR X8, [X8 + 0xC88]
	0x03B79B94 MOV X1, X20
	0x03B79B98 MOV X3, X31
	0x03B79B9C MOV X21, X0
	0x03B79BA0 LDR X2, [X8]
	0x03B79BA4 BL 0x2A6B948
	0x03B79BA8 MOV X0, X19
	0x03B79BAC MOV X1, X21
	0x03B79BB0 LDP X20, X19, [X31 + 0x20]
	0x03B79BB4 LDP X22, X21, [X31 + 0x10]
	0x03B79BB8 LDR X30, [X31], #0x30
	0x03B79BBC B 0x3B7A174
	0x03B79BC0 LDP X20, X19, [X31 + 0x20]
	0x03B79BC4 LDP X22, X21, [X31 + 0x10]
	0x03B79BC8 LDR X30, [X31], #0x30
	0x03B79BCC RET
	0x03B79BD0 BL 0x1C16F20
	0x03B79BD4 STP X30, X21, [X31 - 0x20]!
	0x03B79BD8 STP X20, X19, [X31 + 0x10]
	0x03B79BDC ADRP X20, 0x869000
	0x03B79BE0 ADRP X21, 0x57A000
	0x03B79BE4 LDRB W8, [X20 + 0xA88]
	0x03B79BE8 LDR X21, [X21 + 0x598]
	0x03B79BEC MOV X19, X0
	0x03B79BF0 TBNZ X8, 0x0, 0x3B79C38
	0x03B79BF4 ADRP X0, 0x57A000
	0x03B79BF8 LDR X0, [X0 + 0xA28]
	0x03B79BFC BL 0x1C16CF4
	0x03B79C00 ADRP X0, 0x5E2000
	0x03B79C04 LDR X0, [X0 + 0xC90]
	0x03B79C08 BL 0x1C16CF4
	0x03B79C0C ADRP X0, 0x57A000
	0x03B79C10 LDR X0, [X0 + 0x598]
	0x03B79C14 BL 0x1C16CF4
	0x03B79C18 ADRP X0, 0x5E2000
	0x03B79C1C LDR X0, [X0 + 0xC98]
	0x03B79C20 BL 0x1C16CF4
	0x03B79C24 ADRP X0, 0x5E2000
	0x03B79C28 LDR X0, [X0 + 0xCA0]
	0x03B79C2C BL 0x1C16CF4
	0x03B79C30 MOVZ W8, 0x1
	0x03B79C34 STRB W8, [X20 + 0xA88]
	0x03B79C38 LDR X0, [X21]
	0x03B79C3C LDR X20, [X19 + 0x20]
	0x03B79C40 LDR W8, [X0 + 0xE0]
	0x03B79C44 CBNZ W8, 0x3B79C4C
	0x03B79C48 BL 0x1C16DFC
	0x03B79C4C MOV X0, X20
	0x03B79C50 MOV X1, X31
	0x03B79C54 MOV X2, X31
	0x03B79C58 BL 0x3C3883C
	0x03B79C5C TBNZ X0, 0x0, 0x3B79DCC
	0x03B79C60 LDR X8, [X19 + 0x20]
	0x03B79C64 CBZ X8, 0x3B79DD8
	0x03B79C68 LDR X0, [X21]
	0x03B79C6C LDR X20, [X8 + 0x30]
	0x03B79C70 LDR W9, [X0 + 0xE0]
	0x03B79C74 CBNZ W9, 0x3B79C7C
	0x03B79C78 BL 0x1C16DFC
	0x03B79C7C MOV X0, X20
	0x03B79C80 MOV X1, X31
	0x03B79C84 MOV X2, X31
	0x03B79C88 BL 0x3C3883C
	0x03B79C8C TBNZ X0, 0x0, 0x3B79DCC
	0x03B79C90 LDR X8, [X19 + 0x20]
	0x03B79C94 CBZ X8, 0x3B79DD8
	0x03B79C98 LDR X8, [X8 + 0x30]
	0x03B79C9C CBZ X8, 0x3B79DD8
	0x03B79CA0 LDR X20, [X8 + 0x30]
	0x03B79CA4 STR X20, [X19 + 0x30]
	0x03B79CA8 LDR X0, [X21]
	0x03B79CAC LDR W8, [X0 + 0xE0]
	0x03B79CB0 CBNZ W8, 0x3B79CB8
	0x03B79CB4 BL 0x1C16DFC
	0x03B79CB8 MOV X0, X20
	0x03B79CBC MOV X1, X31
	0x03B79CC0 MOV X2, X31
	0x03B79CC4 BL 0x3C354F8
	0x03B79CC8 MOV X20, X31
	0x03B79CCC TBZ X0, 0x0, 0x3B79CF4
	0x03B79CD0 LDR X8, [X19 + 0x30]
	0x03B79CD4 CBZ X8, 0x3B79DD8
	0x03B79CD8 LDR X0, [X8 + 0x38]
	0x03B79CDC CBZ X0, 0x3B79DD8
	0x03B79CE0 ADRP X8, 0x5E2000
	0x03B79CE4 LDR X8, [X8 + 0xC90]
	0x03B79CE8 LDR X1, [X8]
	0x03B79CEC BL 0x21E52E4
	0x03B79CF0 MOV X20, X0
	0x03B79CF4 STR X20, [X19 + 0x38]
	0x03B79CF8 LDR X0, [X21]
	0x03B79CFC LDR W8, [X0 + 0xE0]
	0x03B79D00 CBNZ W8, 0x3B79D08
	0x03B79D04 BL 0x1C16DFC
	0x03B79D08 MOV X0, X20
	0x03B79D0C MOV X1, X31
	0x03B79D10 MOV X2, X31
	0x03B79D14 BL 0x3C3883C
	0x03B79D18 TBZ X0, 0x0, 0x3B79DCC
	0x03B79D1C LDR X0, [X21]
	0x03B79D20 LDR X20, [X19 + 0x30]
	0x03B79D24 LDR W8, [X0 + 0xE0]
	0x03B79D28 CBNZ W8, 0x3B79D30
	0x03B79D2C BL 0x1C16DFC
	0x03B79D30 MOV X0, X20
	0x03B79D34 MOV X1, X31
	0x03B79D38 MOV X2, X31
	0x03B79D3C BL 0x3C354F8
	0x03B79D40 TBZ X0, 0x0, 0x3B79DCC
	0x03B79D44 LDR X8, [X19 + 0x30]
	0x03B79D48 CBZ X8, 0x3B79DD8
	0x03B79D4C LDR X1, [X8 + 0x38]
	0x03B79D50 ADRP X8, 0x5E2000
	0x03B79D54 LDR X8, [X8 + 0xCA0]
	0x03B79D58 MOV X2, X31
	0x03B79D5C LDR X0, [X8]
	0x03B79D60 BL 0x321EFD0
	0x03B79D64 ADRP X8, 0x5E2000
	0x03B79D68 LDR X1, [X19 + 0x30]
	0x03B79D6C LDR X8, [X8 + 0xC98]
	0x03B79D70 MOV X20, X0
	0x03B79D74 MOV X2, X31
	0x03B79D78 LDR X8, [X8]
	0x03B79D7C MOV X0, X8
	0x03B79D80 BL 0x321EFD0
	0x03B79D84 MOV X1, X0
	0x03B79D88 MOV X0, X20
	0x03B79D8C MOV X2, X31
	0x03B79D90 BL 0x321B938
	0x03B79D94 ADRP X8, 0x57A000
	0x03B79D98 LDR X8, [X8 + 0xA28]
	0x03B79D9C MOV X20, X0
	0x03B79DA0 LDR X8, [X8]
	0x03B79DA4 LDR W9, [X8 + 0xE0]
	0x03B79DA8 CBNZ W9, 0x3B79DB4
	0x03B79DAC MOV X0, X8
	0x03B79DB0 BL 0x1C16DFC
	0x03B79DB4 MOV X0, X20
	0x03B79DB8 MOV X1, X19
	0x03B79DBC LDP X20, X19, [X31 + 0x10]
	0x03B79DC0 MOV X2, X31
	0x03B79DC4 LDP X30, X21, [X31], #0x20
	0x03B79DC8 B 0x3C065A4
	0x03B79DCC LDP X20, X19, [X31 + 0x10]
	0x03B79DD0 LDP X30, X21, [X31], #0x20
	0x03B79DD4 RET
	0x03B79DD8 BL 0x1C16F20
	0x03B79DDC LDR V0, [X0 + 0x28]
	0x03B79DE0 RET
	0x03B79DE4 STR S0, [X0 + 0x28]
	0x03B79DE8 RET
	0x03B79DEC LDR V0, [X0 + 0x2C]
	0x03B79DF0 RET
	0x03B79DF4 STR S0, [X0 + 0x2C]
	0x03B79DF8 RET
	0x03B79DFC LDR X0, [X0 + 0x30]
	0x03B79E00 RET
	0x03B79E04 LDR X0, [X0 + 0x38]
	0x03B79E08 RET
	0x03B79E0C STP X30, X21, [X31 - 0x20]!
	0x03B79E10 STP X20, X19, [X31 + 0x10]
	0x03B79E14 ADRP X20, 0x869000
	0x03B79E18 ADRP X21, 0x57A000
	0x03B79E1C LDRB W8, [X20 + 0xA84]
	0x03B79E20 LDR X21, [X21 + 0x598]
	0x03B79E24 MOV X19, X0
	0x03B79E28 TBNZ X8, 0x0, 0x3B79E70
	0x03B79E2C ADRP X0, 0x5E2000
	0x03B79E30 LDR X0, [X0 + 0xCA8]
	0x03B79E34 BL 0x1C16CF4
	0x03B79E38 ADRP X0, 0x5E2000
	0x03B79E3C LDR X0, [X0 + 0xCB0]
	0x03B79E40 BL 0x1C16CF4
	0x03B79E44 ADRP X0, 0x57A000
	0x03B79E48 LDR X0, [X0 + 0xA28]
	0x03B79E4C BL 0x1C16CF4
	0x03B79E50 ADRP X0, 0x57A000
	0x03B79E54 LDR X0, [X0 + 0x598]
	0x03B79E58 BL 0x1C16CF4
	0x03B79E5C ADRP X0, 0x5E2000
	0x03B79E60 LDR X0, [X0 + 0xCB8]
	0x03B79E64 BL 0x1C16CF4
	0x03B79E68 MOVZ W8, 0x1
	0x03B79E6C STRB W8, [X20 + 0xA84]
	0x03B79E70 LDR X0, [X21]
	0x03B79E74 LDR X20, [X19 + 0x20]
	0x03B79E78 LDR W8, [X0 + 0xE0]
	0x03B79E7C CBNZ W8, 0x3B79E84

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x86B000
	014 Move X22, 0x57E000
	015 Move X21, 0x57E000
	016 Move X24, 0x5E3000
	017 Move X23, 0x5E3000
	018 Move W8, [X20+2675]
	019 Move X22, [X22+2128]
	020 Move X21, [X21+2136]
	021 Move X24, [X24+1328]
	022 Move X23, [X23+1312]
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {291}
	028 Move X0, 0x5E4000
	029 Move X0, [X0+2312]
	030 Call 0x1C17CF4
	031 Move X0, 0x5E4000
	032 Move X0, [X0+2320]
	033 Call 0x1C17CF4
	034 Move X0, 0x5E4000
	035 Move X0, [X0+2328]
	036 Call 0x1C17CF4
	037 Move X0, 0x5E4000
	038 Move X0, [X0+2336]
	039 Call 0x1C17CF4
	040 Move X0, 0x5E4000
	041 Move X0, [X0+2344]
	042 Call 0x1C17CF4
	043 Move X0, 0x5E4000
	044 Move X0, [X0+2352]
	045 Call 0x1C17CF4
	046 Move X0, 0x5E3000
	047 Move X0, [X0+1304]
	048 Call 0x1C17CF4
	049 Move X0, 0x5E3000
	050 Move X0, [X0+1312]
	051 Call 0x1C17CF4
	052 Move X0, 0x5E3000
	053 Move X0, [X0+1320]
	054 Call 0x1C17CF4
	055 Move X0, 0x5E3000
	056 Move X0, [X0+1328]
	057 Call 0x1C17CF4
	058 Move X0, 0x5E4000
	059 Move X0, [X0+2360]
	060 Call 0x1C17CF4
	061 Move X0, 0x5E4000
	062 Move X0, [X0+2368]
	063 Call 0x1C17CF4
	064 Move X0, 0x5E4000
	065 Move X0, [X0+2376]
	066 Call 0x1C17CF4
	067 Move X0, 0x5E4000
	068 Move X0, [X0+2384]
	069 Call 0x1C17CF4
	070 Move X0, 0x5E4000
	071 Move X0, [X0+2392]
	072 Call 0x1C17CF4
	073 Move X0, 0x5E4000
	074 Move X0, [X0+2400]
	075 Call 0x1C17CF4
	076 Move X0, 0x5E4000
	077 Move X0, [X0+2408]
	078 Call 0x1C17CF4
	079 Move X0, 0x5E4000
	080 Move X0, [X0+2416]
	081 Call 0x1C17CF4
	082 Move X0, 0x5E4000
	083 Move X0, [X0+2424]
	084 Call 0x1C17CF4
	085 Move X0, 0x5E4000
	086 Move X0, [X0+2432]
	087 Call 0x1C17CF4
	088 Move X0, 0x5E4000
	089 Move X0, [X0+2440]
	090 Call 0x1C17CF4
	091 Move X0, 0x5E4000
	092 Move X0, [X0+2448]
	093 Call 0x1C17CF4
	094 Move X0, 0x5E4000
	095 Move X0, [X0+2456]
	096 Call 0x1C17CF4
	097 Move X0, 0x5E4000
	098 Move X0, [X0+2464]
	099 Call 0x1C17CF4
	100 Move X0, 0x5E4000
	101 Move X0, [X0+2472]
	102 Call 0x1C17CF4
	103 Move X0, 0x5E3000
	104 Move X0, [X0+2480]
	105 Call 0x1C17CF4
	106 Move X0, 0x5E3000
	107 Move X0, [X0+2488]
	108 Call 0x1C17CF4
	109 Move X0, 0x5E3000
	110 Move X0, [X0+2496]
	111 Call 0x1C17CF4
	112 Move X0, 0x5E3000
	113 Move X0, [X0+2504]
	114 Call 0x1C17CF4
	115 Move X0, 0x5E3000
	116 Move X0, [X0+2512]
	117 Call 0x1C17CF4
	118 Move X0, 0x5E3000
	119 Move X0, [X0+2520]
	120 Call 0x1C17CF4
	121 Move X0, 0x5E3000
	122 Move X0, [X0+2528]
	123 Call 0x1C17CF4
	124 Move X0, 0x5E3000
	125 Move X0, [X0+2536]
	126 Call 0x1C17CF4
	127 Move X0, 0x5E3000
	128 Move X0, [X0+2544]
	129 Call 0x1C17CF4
	130 Move X0, 0x5E3000
	131 Move X0, [X0+2552]
	132 Call 0x1C17CF4
	133 Move X0, 0x5E3000
	134 Move X0, [X0+2560]
	135 Call 0x1C17CF4
	136 Move X0, 0x5E3000
	137 Move X0, [X0+2568]
	138 Call 0x1C17CF4
	139 Move X0, 0x5E3000
	140 Move X0, [X0+2576]
	141 Call 0x1C17CF4
	142 Move X0, 0x5E3000
	143 Move X0, [X0+2584]
	144 Call 0x1C17CF4
	145 Move X0, 0x5E3000
	146 Move X0, [X0+2592]
	147 Call 0x1C17CF4
	148 Move X0, 0x5E3000
	149 Move X0, [X0+2600]
	150 Call 0x1C17CF4
	151 Move X0, 0x5E3000
	152 Move X0, [X0+2608]
	153 Call 0x1C17CF4
	154 Move X0, 0x5E3000
	155 Move X0, [X0+2616]
	156 Call 0x1C17CF4
	157 Move X0, 0x5E3000
	158 Move X0, [X0+2624]
	159 Call 0x1C17CF4
	160 Move X0, 0x5E3000
	161 Move X0, [X0+2632]
	162 Call 0x1C17CF4
	163 Move X0, 0x5E3000
	164 Move X0, [X0+2640]
	165 Call 0x1C17CF4
	166 Move X0, 0x5E3000
	167 Move X0, [X0+2648]
	168 Call 0x1C17CF4
	169 Move X0, 0x5E3000
	170 Move X0, [X0+2656]
	171 Call 0x1C17CF4
	172 Move X0, 0x5E3000
	173 Move X0, [X0+2664]
	174 Call 0x1C17CF4
	175 Move X0, 0x5E3000
	176 Move X0, [X0+2672]
	177 Call 0x1C17CF4
	178 Move X0, 0x5E3000
	179 Move X0, [X0+2680]
	180 Call 0x1C17CF4
	181 Move X0, 0x5E3000
	182 Move X0, [X0+2688]
	183 Call 0x1C17CF4
	184 Move X0, 0x57D000
	185 Move X0, [X0+2136]
	186 Call 0x1C17CF4
	187 Move X0, 0x5E3000
	188 Move X0, [X0+2696]
	189 Call 0x1C17CF4
	190 Move X0, 0x5E3000
	191 Move X0, [X0+2704]
	192 Call 0x1C17CF4
	193 Move X0, 0x5E2000
	194 Move X0, [X0+3656]
	195 Call 0x1C17CF4
	196 Move X0, 0x5E2000
	197 Move X0, [X0+3152]
	198 Call 0x1C17CF4
	199 Move X0, 0x5E2000
	200 Move X0, [X0+2848]
	201 Call 0x1C17CF4
	202 Move X0, 0x5E3000
	203 Move X0, [X0+392]
	204 Call 0x1C17CF4
	205 Move X0, 0x5E2000
	206 Move X0, [X0+3160]
	207 Call 0x1C17CF4
	208 Move X0, 0x5E3000
	209 Move X0, [X0+2712]
	210 Call 0x1C17CF4
	211 Move X0, 0x5E2000
	212 Move X0, [X0+3648]
	213 Call 0x1C17CF4
	214 Move X0, 0x57D000
	215 Move X0, [X0+2128]
	216 Call 0x1C17CF4
	217 Move X0, 0x5E2000
	218 Move X0, [X0+656]
	219 Call 0x1C17CF4
	220 Move X0, 0x5E2000
	221 Move X0, [X0+2840]
	222 Call 0x1C17CF4
	223 Move X0, 0x5E2000
	224 Move X0, [X0+2624]
	225 Call 0x1C17CF4
	226 Move X0, 0x5E3000
	227 Move X0, [X0+2720]
	228 Call 0x1C17CF4
	229 Move X0, 0x5E3000
	230 Move X0, [X0+2728]
	231 Call 0x1C17CF4
	232 Move X0, 0x5E3000
	233 Move X0, [X0+2736]
	234 Call 0x1C17CF4
	235 Move X0, 0x5E3000
	236 Move X0, [X0+2744]
	237 Call 0x1C17CF4
	238 Move X0, 0x5E3000
	239 Move X0, [X0+2752]
	240 Call 0x1C17CF4
	241 Move X0, 0x5E3000
	242 Move X0, [X0+2760]
	243 Call 0x1C17CF4
	244 Move X0, 0x5E2000
	245 Move X0, [X0+1432]
	246 Call 0x1C17CF4
	247 Move X0, 0x5E2000
	248 Move X0, [X0+1440]
	249 Call 0x1C17CF4
	250 Move X0, 0x5E3000
	251 Move X0, [X0+2768]
	252 Call 0x1C17CF4
	253 Move X0, 0x5E3000
	254 Move X0, [X0+2776]
	255 Call 0x1C17CF4
	256 Move X0, 0x5E3000
	257 Move X0, [X0+2784]
	258 Call 0x1C17CF4
	259 Move X0, 0x5E3000
	260 Move X0, [X0+2792]
	261 Call 0x1C17CF4
	262 Move X0, 0x5E3000
	263 Move X0, [X0+2800]
	264 Call 0x1C17CF4
	265 Move X0, 0x5E3000
	266 Move X0, [X0+2808]
	267 Call 0x1C17CF4
	268 Move X0, 0x5E3000
	269 Move X0, [X0+2816]
	270 Call 0x1C17CF4
	271 Move X0, 0x5E3000
	272 Move X0, [X0+2824]
	273 Call 0x1C17CF4
	274 Move X0, 0x5E3000
	275 Move X0, [X0+2832]
	276 Call 0x1C17CF4
	277 Move X0, 0x5E3000
	278 Move X0, [X0+2840]
	279 Call 0x1C17CF4
	280 Move X0, 0x5E3000
	281 Move X0, [X0+2848]
	282 Call 0x1C17CF4
	283 Move X0, 0x5E3000
	284 Move X0, [X0+2856]
	285 Call 0x1C17CF4
	286 Move X0, 0x5E3000
	287 Move X0, [X0+2864]
	288 Call 0x1C17CF4
	289 Move W8, 1
	290 Move [X20+2675], W8
	291 Move X0, [X22]
	292 Call 0x1C17F10
	293 Move X1, [X21]
	294 Move X20, X0
	295 Call List`1<Object>..ctor, X0
	296 Move [X19+96], X20
	297 Move X0, [X24]
	298 Call 0x1C17F10
	299 Move X1, [X23]
	300 Move X20, X0
	301 Call 0x2D119CC, X0
	302 Compare X20, 0
	303 JumpIfEqual {1075}
	304 Move X8, 0x5E2000
	305 Move X8, [X8+1432]
	306 Move X23, 0x5E2000
	307 Move X24, 0x5E2000
	308 Move X0, X20
	309 Move X2, [X8]
	310 Move X23, [X23+1320]
	311 Move X24, [X24+1304]
	312 Move W1, W31
	313 Call 0x25E99B0, X0, X1
	314 Move [X19+104], X20
	315 Move X0, [X22]
	316 Call 0x1C17F10
	317 Move X1, [X21]
	318 Move X20, X0
	319 Call List`1<Object>..ctor, X0
	320 Move [X19+112], X20
	321 Move X0, [X23]
	322 Call 0x1C17F10
	323 Move X1, [X24]
	324 Move X20, X0
	325 Call 0x2D119CC, X0
	326 Compare X20, 0
	327 JumpIfEqual {1075}
	328 Move X8, 0x5E2000
	329 Move X8, [X8+1440]
	330 Move X28, 0x5E3000
	331 Move X21, 0x5E3000
	332 Move X29, 0x5E3000
	333 Move X23, 0x5E3000
	334 Move X27, 0x5E3000
	335 Move X26, 0x5E3000
	336 Move X25, 0x5E3000
	337 Move X22, 0x5E3000
	338 Move X24, 0x5E2000
	339 Move X28, [X28+2344]
	340 Move X21, [X21+2320]
	341 Move X29, [X29+2336]
	342 Move X23, [X23+2328]
	343 Move X27, [X27+2744]
	344 Move X26, [X26+2728]
	345 Move X25, [X25+2752]
	346 Move X22, [X22+2720]
	347 Move X24, [X24+3648]
	348 Move X2, [X8]
	349 Move X0, X20
	350 Move W1, W31
	351 Call 0x25E99B0, X0, X1
	352 Move [X19+120], X20
	353 Move X0, [X28]
	354 Call 0x1C17F10
	355 Move X1, [X21]
	356 Move X20, X0
	357 Call Dictionary`2<Object, Object>..ctor, X0
	358 Move [X19+136], X20
	359 Move X0, [X29]
	360 Call 0x1C17F10
	361 Move X1, [X23]
	362 Move X20, X0
	363 Call Dictionary`2<Object, Object>..ctor, X0
	364 Move [X19+144], X20
	365 Move X0, [X27]
	366 Call 0x1C17F10
	367 Move X1, [X26]
	368 Move X20, X0
	369 Call 0x25C68F8, X0
	370 Move [X19+152], X20
	371 Move X0, [X25]
	372 Call 0x1C17F10
	373 Move X1, [X22]
	374 Move X20, X0
	375 Call 0x25C68F8, X0
	376 Move [X19+160], X20
	377 Move X8, 0x5E3000
	378 Move X8, [X8+2760]
	379 Move X0, [X8]
	380 Call 0x1C17F10
	381 Move X8, 0x5E3000
	382 Move X8, [X8+2736]
	383 Move X20, X0
	384 Move X1, [X8]
	385 Call 0x25C68F8, X0
	386 Move [X19+168], X20
	387 Move X8, 0x5E2000
	388 Move X8, [X8+2624]
	389 Move X0, [X8]
	390 Call 0x1C17F10
	391 Move X8, 0x5E3000
	392 Move X8, [X8+392]
	393 Move X20, X0
	394 Move X1, [X8]
	395 Call List`1<Object>..ctor, X0
	396 Move [X19+176], X20
	397 Move X8, 0x5E2000
	398 Move X8, [X8+2840]
	399 Move X0, [X8]
	400 Call 0x1C17F10
	401 Move X8, 0x5E2000
	402 Move X8, [X8+2848]
	403 Move X20, X0
	404 Move X1, [X8]
	405 Call List`1<Object>..ctor, X0
	406 Move [X19+184], X20
	407 Move X8, 0x5E3000
	408 Move X8, [X8+2352]
	409 Move X0, [X8]
	410 Call 0x1C17F10
	411 Move X8, 0x5E3000
	412 Move X8, [X8+2312]
	413 Move X20, X0
	414 Move X1, [X8]
	415 Call Dictionary`2<Object, Object>..ctor, X0
	416 Move [X19+192], X20
	417 Move X0, [X24]
	418 Call 0x1C17F10
	419 Move X8, 0x5E2000
	420 Move X8, [X8+3656]
	421 Move X20, X0
	422 Move X1, [X8]
	423 Call List`1<Object>..ctor, X0
	424 Move [X19+200], X20
	425 Move X8, 0x5E3000
	426 Move X8, [X8+2488]
	427 Move X0, [X8]
	428 Call 0x1C17F10
	429 Move X8, 0x5E3000
	430 Move X8, [X8+2464]
	431 Move X20, X0
	432 Move X1, [X8]
	433 Call HashSet`1<Object>..ctor, X0
	434 Move [X19+208], X20
	435 Move X8, 0x5E3000
	436 Move X8, [X8+2496]
	437 Move X0, [X8]
	438 Call 0x1C17F10
	439 Move X8, 0x5E3000
	440 Move X8, [X8+2472]
	441 Move X20, X0
	442 Move X1, [X8]
	443 Call HashSet`1<Object>..ctor, X0
	444 Move [X19+216], X20
	445 Move X8, 0x5E3000
	446 Move X8, [X8+2480]
	447 Move X0, [X8]
	448 Call 0x1C17F10
	449 Move X8, 0x5E3000
	450 Move X8, [X8+2456]
	451 Move X20, X0
	452 Move X1, [X8]
	453 Call HashSet`1<Object>..ctor, X0
	454 Move [X19+224], X20
	455 Move X8, 0x5E2000
	456 Move X8, [X8+3160]
	457 Move X0, [X8]
	458 Call 0x1C17F10
	459 Move X8, 0x5E2000
	460 Move X8, [X8+3152]
	461 Move X20, X0
	462 Move X1, [X8]
	463 Call List`1<Object>..ctor, X0
	464 Move [X19+232], X20
	465 Move X8, 0x5E2000
	466 Move X8, [X8+656]
	467 Move X0, [X8]
	468 Call 0x1C17F10
	469 Move X8, 0x5E3000
	470 Move X8, [X8+2704]
	471 Move X20, X0
	472 Move X1, [X8]
	473 Call List`1<Object>..ctor, X0
	474 Move [X19+240], X20
	475 Move X8, 0x5E3000
	476 Move X8, [X8+2712]
	477 Move X0, [X8]
	478 Call 0x1C17F10
	479 Move X8, 0x5E3000
	480 Move X8, [X8+2696]
	481 Move X20, X0
	482 Move X1, [X8]
	483 Call List`1<Object>..ctor, X0
	484 Move [X19+248], X20
	485 Move X0, [X24]
	486 Call 0x1C17F10
	487 Move X8, 0x5E2000
	488 Move X8, [X8+3656]
	489 Move X22, 0x5E3000
	490 Move X20, X0
	491 Move X1, [X8]
	492 Move X22, [X22+2864]
	493 Call List`1<Object>..ctor, X0
	494 Move [X19+256], X20
	495 Move X0, [X22]
	496 Move W8, [X0+224]
	497 Compare W8, 0
	498 JumpIfNotEqual {501}
	499 Call 0x1C17DFC
	500 Move X0, [X22]
	501 Move X8, [X0+184]
	502 Move X24, 0x5E3000
	503 Move X23, 0x5E3000
	504 Move X20, [X8+8]
	505 Move X24, [X24+2648]
	506 Move X23, [X23+2504]
	507 Compare X20, 0
	508 JumpIfNotEqual {530}
	509 Move W8, [X0+224]
	510 Compare W8, 0
	511 JumpIfNotEqual {514}
	512 Call 0x1C17DFC
	513 Move X0, [X22]
	514 Move X9, 0x5E3000
	515 Move X8, [X0+184]
	516 Move X9, [X9+2432]
	517 Move X21, [X8]
	518 Move X0, [X9]
	519 Call 0x1C17F10
	520 Move X8, 0x5E3000
	521 Move X8, [X8+2768]
	522 Move X1, X21
	523 Move X3, X31
	524 Move X20, X0
	525 Move X2, [X8]
	526 Call Func`1<Object>..ctor, X0, X1, X2
	527 Move X8, [X22]
	528 Move X8, [X8+184]
	529 Move [X8+8], X20
	530 Move X0, [X24]
	531 Call 0x1C17F10
	532 Move X7, [X23]
	533 Move W6, 0x2710
	534 Move X1, X20
	535 Move X2, X31
	536 Move X3, X31
	537 Move X4, X31
	538 Move W5, W31
	539 Move X21, X0
	540 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	541 Move [X19+264], X21
	542 Move X0, [X22]
	543 Move W8, [X0+224]
	544 Compare W8, 0
	545 JumpIfNotEqual {548}
	546 Call 0x1C17DFC
	547 Move X0, [X22]
	548 Move X8, [X0+184]
	549 Move X24, 0x5E3000
	550 Move X23, 0x5E3000
	551 Move X20, [X8+16]
	552 Move X24, [X24+2632]
	553 Move X23, [X23+2512]
	554 Compare X20, 0
	555 JumpIfNotEqual {577}
	556 Move W8, [X0+224]
	557 Compare W8, 0
	558 JumpIfNotEqual {561}
	559 Call 0x1C17DFC
	560 Move X0, [X22]
	561 Move X9, 0x5E3000
	562 Move X8, [X0+184]
	563 Move X9, [X9+2416]
	564 Move X21, [X8]
	565 Move X0, [X9]
	566 Call 0x1C17F10
	567 Move X8, 0x5E3000
	568 Move X8, [X8+2792]
	569 Move X1, X21
	570 Move X3, X31
	571 Move X20, X0
	572 Move X2, [X8]
	573 Call Func`1<Object>..ctor, X0, X1, X2
	574 Move X8, [X22]
	575 Move X8, [X8+184]
	576 Move [X8+16], X20
	577 Move X0, [X24]
	578 Call 0x1C17F10
	579 Move X7, [X23]
	580 Move W6, 0x2710
	581 Move X1, X20
	582 Move X2, X31
	583 Move X3, X31
	584 Move X4, X31
	585 Move W5, W31
	586 Move X21, X0
	587 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	588 Move [X19+272], X21
	589 Move X0, [X22]
	590 Move W8, [X0+224]
	591 Compare W8, 0
	592 JumpIfNotEqual {595}
	593 Call 0x1C17DFC
	594 Move X0, [X22]
	595 Move X8, [X0+184]
	596 Move X24, 0x5E3000
	597 Move X23, 0x5E3000
	598 Move X20, [X8+24]
	599 Move X24, [X24+2624]
	600 Move X23, [X23+2528]
	601 Compare X20, 0
	602 JumpIfNotEqual {624}
	603 Move W8, [X0+224]
	604 Compare W8, 0
	605 JumpIfNotEqual {608}
	606 Call 0x1C17DFC
	607 Move X0, [X22]
	608 Move X9, 0x5E3000
	609 Move X8, [X0+184]
	610 Move X9, [X9+2384]
	611 Move X21, [X8]
	612 Move X0, [X9]
	613 Call 0x1C17F10
	614 Move X8, 0x5E3000
	615 Move X8, [X8+2800]
	616 Move X1, X21
	617 Move X3, X31
	618 Move X20, X0
	619 Move X2, [X8]
	620 Call Func`1<Object>..ctor, X0, X1, X2
	621 Move X8, [X22]
	622 Move X8, [X8+184]
	623 Move [X8+24], X20
	624 Move X0, [X24]
	625 Call 0x1C17F10
	626 Move X7, [X23]
	627 Move W6, 0x2710
	628 Move X1, X20
	629 Move X2, X31
	630 Move X3, X31
	631 Move X4, X31
	632 Move W5, W31
	633 Move X21, X0
	634 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	635 Move [X19+280], X21
	636 Move X0, [X22]
	637 Move W8, [X0+224]
	638 Compare W8, 0
	639 JumpIfNotEqual {642}
	640 Call 0x1C17DFC
	641 Move X0, [X22]
	642 Move X8, [X0+184]
	643 Move X24, 0x5E3000
	644 Move X23, 0x5E3000
	645 Move X20, [X8+32]
	646 Move X24, [X24+2608]
	647 Move X23, [X23+2536]
	648 Compare X20, 0
	649 JumpIfNotEqual {671}
	650 Move W8, [X0+224]
	651 Compare W8, 0
	652 JumpIfNotEqual {655}
	653 Call 0x1C17DFC
	654 Move X0, [X22]
	655 Move X9, 0x5E3000
	656 Move X8, [X0+184]
	657 Move X9, [X9+2360]
	658 Move X21, [X8]
	659 Move X0, [X9]
	660 Call 0x1C17F10
	661 Move X8, 0x5E3000
	662 Move X8, [X8+2808]
	663 Move X1, X21
	664 Move X3, X31
	665 Move X20, X0
	666 Move X2, [X8]
	667 Call Func`1<Object>..ctor, X0, X1, X2
	668 Move X8, [X22]
	669 Move X8, [X8+184]
	670 Move [X8+32], X20
	671 Move X0, [X24]
	672 Call 0x1C17F10
	673 Move X7, [X23]
	674 Move W6, 0x2710
	675 Move X1, X20
	676 Move X2, X31
	677 Move X3, X31
	678 Move X4, X31
	679 Move W5, W31
	680 Move X21, X0
	681 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	682 Move [X19+288], X21
	683 Move X0, [X22]
	684 Move W8, [X0+224]
	685 Compare W8, 0
	686 JumpIfNotEqual {689}
	687 Call 0x1C17DFC
	688 Move X0, [X22]
	689 Move X8, [X0+184]
	690 Move X24, 0x5E3000
	691 Move X23, 0x5E3000
	692 Move X20, [X8+40]
	693 Move X24, [X24+2664]
	694 Move X23, [X23+2576]
	695 Compare X20, 0
	696 JumpIfNotEqual {718}
	697 Move W8, [X0+224]
	698 Compare W8, 0
	699 JumpIfNotEqual {702}
	700 Call 0x1C17DFC
	701 Move X0, [X22]
	702 Move X9, 0x5E3000
	703 Move X8, [X0+184]
	704 Move X9, [X9+2424]
	705 Move X21, [X8]
	706 Move X0, [X9]
	707 Call 0x1C17F10
	708 Move X8, 0x5E3000
	709 Move X8, [X8+2816]
	710 Move X1, X21
	711 Move X3, X31
	712 Move X20, X0
	713 Move X2, [X8]
	714 Call Func`1<Object>..ctor, X0, X1, X2
	715 Move X8, [X22]
	716 Move X8, [X8+184]
	717 Move [X8+40], X20
	718 Move X0, [X24]
	719 Call 0x1C17F10
	720 Move X7, [X23]
	721 Move W6, 0x2710
	722 Move X1, X20
	723 Move X2, X31
	724 Move X3, X31
	725 Move X4, X31
	726 Move W5, W31
	727 Move X21, X0
	728 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	729 Move [X19+296], X21
	730 Move X0, [X22]
	731 Move W8, [X0+224]
	732 Compare W8, 0
	733 JumpIfNotEqual {736}
	734 Call 0x1C17DFC
	735 Move X0, [X22]
	736 Move X8, [X0+184]
	737 Move X24, 0x5E3000
	738 Move X23, 0x5E3000
	739 Move X20, [X8+48]
	740 Move X24, [X24+2680]
	741 Move X23, [X23+2584]
	742 Compare X20, 0
	743 JumpIfNotEqual {765}
	744 Move W8, [X0+224]
	745 Compare W8, 0
	746 JumpIfNotEqual {749}
	747 Call 0x1C17DFC
	748 Move X0, [X22]
	749 Move X9, 0x5E3000
	750 Move X8, [X0+184]
	751 Move X9, [X9+2376]
	752 Move X21, [X8]
	753 Move X0, [X9]
	754 Call 0x1C17F10
	755 Move X8, 0x5E3000
	756 Move X8, [X8+2824]
	757 Move X1, X21
	758 Move X3, X31
	759 Move X20, X0
	760 Move X2, [X8]
	761 Call Func`1<Object>..ctor, X0, X1, X2
	762 Move X8, [X22]
	763 Move X8, [X8+184]
	764 Move [X8+48], X20
	765 Move X0, [X24]
	766 Call 0x1C17F10
	767 Move X7, [X23]
	768 Move W6, 0x2710
	769 Move X1, X20
	770 Move X2, X31
	771 Move X3, X31
	772 Move X4, X31
	773 Move W5, W31
	774 Move X21, X0
	775 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	776 Move [X19+304], X21
	777 Move X0, [X22]
	778 Move W8, [X0+224]
	779 Compare W8, 0
	780 JumpIfNotEqual {783}
	781 Call 0x1C17DFC
	782 Move X0, [X22]
	783 Move X8, [X0+184]
	784 Move X24, 0x5E3000
	785 Move X23, 0x5E3000
	786 Move X20, [X8+56]
	787 Move X24, [X24+2616]
	788 Move X23, [X23+2592]
	789 Compare X20, 0
	790 JumpIfNotEqual {812}
	791 Move W8, [X0+224]
	792 Compare W8, 0
	793 JumpIfNotEqual {796}
	794 Call 0x1C17DFC
	795 Move X0, [X22]
	796 Move X9, 0x5E3000
	797 Move X8, [X0+184]
	798 Move X9, [X9+2440]
	799 Move X21, [X8]
	800 Move X0, [X9]
	801 Call 0x1C17F10
	802 Move X8, 0x5E3000
	803 Move X8, [X8+2832]
	804 Move X1, X21
	805 Move X3, X31
	806 Move X20, X0
	807 Move X2, [X8]
	808 Call Func`1<Object>..ctor, X0, X1, X2
	809 Move X8, [X22]
	810 Move X8, [X8+184]
	811 Move [X8+56], X20
	812 Move X0, [X24]
	813 Call 0x1C17F10
	814 Move X7, [X23]
	815 Move W6, 0x2710
	816 Move X1, X20
	817 Move X2, X31
	818 Move X3, X31
	819 Move X4, X31
	820 Move W5, W31
	821 Move X21, X0
	822 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	823 Move [X19+312], X21
	824 Move X0, [X22]
	825 Move W8, [X0+224]
	826 Compare W8, 0
	827 JumpIfNotEqual {830}
	828 Call 0x1C17DFC
	829 Move X0, [X22]
	830 Move X8, [X0+184]
	831 Move X24, 0x5E3000
	832 Move X23, 0x5E3000
	833 Move X20, [X8+64]
	834 Move X24, [X24+2656]
	835 Move X23, [X23+2560]
	836 Compare X20, 0
	837 JumpIfNotEqual {859}
	838 Move W8, [X0+224]
	839 Compare W8, 0
	840 JumpIfNotEqual {843}
	841 Call 0x1C17DFC
	842 Move X0, [X22]
	843 Move X9, 0x5E3000
	844 Move X8, [X0+184]
	845 Move X9, [X9+2400]
	846 Move X21, [X8]
	847 Move X0, [X9]
	848 Call 0x1C17F10
	849 Move X8, 0x5E3000
	850 Move X8, [X8+2840]
	851 Move X1, X21
	852 Move X3, X31
	853 Move X20, X0
	854 Move X2, [X8]
	855 Call Func`1<Object>..ctor, X0, X1, X2
	856 Move X8, [X22]
	857 Move X8, [X8+184]
	858 Move [X8+64], X20
	859 Move X0, [X24]
	860 Call 0x1C17F10
	861 Move X7, [X23]
	862 Move W6, 0x2710
	863 Move X1, X20
	864 Move X2, X31
	865 Move X3, X31
	866 Move X4, X31
	867 Move W5, W31
	868 Move X21, X0
	869 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	870 Move [X19+320], X21
	871 Move X0, [X22]
	872 Move W8, [X0+224]
	873 Compare W8, 0
	874 JumpIfNotEqual {877}
	875 Call 0x1C17DFC
	876 Move X0, [X22]
	877 Move X8, [X0+184]
	878 Move X24, 0x5E3000
	879 Move X23, 0x5E3000
	880 Move X20, [X8+72]
	881 Move X24, [X24+2600]
	882 Move X23, [X23+2552]
	883 Compare X20, 0
	884 JumpIfNotEqual {906}
	885 Move W8, [X0+224]
	886 Compare W8, 0
	887 JumpIfNotEqual {890}
	888 Call 0x1C17DFC
	889 Move X0, [X22]
	890 Move X9, 0x5E3000
	891 Move X8, [X0+184]
	892 Move X9, [X9+2408]
	893 Move X21, [X8]
	894 Move X0, [X9]
	895 Call 0x1C17F10
	896 Move X8, 0x5E3000
	897 Move X8, [X8+2848]
	898 Move X1, X21
	899 Move X3, X31
	900 Move X20, X0
	901 Move X2, [X8]
	902 Call Func`1<Object>..ctor, X0, X1, X2
	903 Move X8, [X22]
	904 Move X8, [X8+184]
	905 Move [X8+72], X20
	906 Move X0, [X24]
	907 Call 0x1C17F10
	908 Move X7, [X23]
	909 Move W6, 0x2710
	910 Move X1, X20
	911 Move X2, X31
	912 Move X3, X31
	913 Move X4, X31
	914 Move W5, W31
	915 Move X21, X0
	916 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	917 Move [X19+328], X21
	918 Move X0, [X22]
	919 Move W8, [X0+224]
	920 Compare W8, 0
	921 JumpIfNotEqual {924}
	922 Call 0x1C17DFC
	923 Move X0, [X22]
	924 Move X8, [X0+184]
	925 Move X24, 0x5E3000
	926 Move X23, 0x5E3000
	927 Move X20, [X8+80]
	928 Move X24, [X24+2688]
	929 Move X23, [X23+2544]
	930 Compare X20, 0
	931 JumpIfNotEqual {953}
	932 Move W8, [X0+224]
	933 Compare W8, 0
	934 JumpIfNotEqual {937}
	935 Call 0x1C17DFC
	936 Move X0, [X22]
	937 Move X9, 0x5E3000
	938 Move X8, [X0+184]
	939 Move X9, [X9+2368]
	940 Move X21, [X8]
	941 Move X0, [X9]
	942 Call 0x1C17F10
	943 Move X8, 0x5E3000
	944 Move X8, [X8+2856]
	945 Move X1, X21
	946 Move X3, X31
	947 Move X20, X0
	948 Move X2, [X8]
	949 Call Func`1<Object>..ctor, X0, X1, X2
	950 Move X8, [X22]
	951 Move X8, [X8+184]
	952 Move [X8+80], X20
	953 Move X0, [X24]
	954 Call 0x1C17F10
	955 Move X7, [X23]
	956 Move W6, 0x2710
	957 Move X1, X20
	958 Move X2, X31
	959 Move X3, X31
	960 Move X4, X31
	961 Move W5, W31
	962 Move X21, X0
	963 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	964 Move [X19+336], X21
	965 Move X0, [X22]
	966 Move W8, [X0+224]
	967 Compare W8, 0
	968 JumpIfNotEqual {971}
	969 Call 0x1C17DFC
	970 Move X0, [X22]
	971 Move X8, [X0+184]
	972 Move X24, 0x5E3000
	973 Move X23, 0x5E3000
	974 Move X20, [X8+88]
	975 Move X24, [X24+2672]
	976 Move X23, [X23+2568]
	977 Compare X20, 0
	978 JumpIfNotEqual {1000}
	979 Move W8, [X0+224]
	980 Compare W8, 0
	981 JumpIfNotEqual {984}
	982 Call 0x1C17DFC
	983 Move X0, [X22]
	984 Move X9, 0x5E3000
	985 Move X8, [X0+184]
	986 Move X9, [X9+2392]
	987 Move X21, [X8]
	988 Move X0, [X9]
	989 Call 0x1C17F10
	990 Move X8, 0x5E3000
	991 Move X8, [X8+2776]
	992 Move X1, X21
	993 Move X3, X31
	994 Move X20, X0
	995 Move X2, [X8]
	996 Call Func`1<Object>..ctor, X0, X1, X2
	997 Move X8, [X22]
	998 Move X8, [X8+184]
	999 Move [X8+88], X20
	1000 Move X0, [X24]
	1001 Call 0x1C17F10
	1002 Move X7, [X23]
	1003 Move W6, 0x2710
	1004 Move X1, X20
	1005 Move X2, X31
	1006 Move X3, X31
	1007 Move X4, X31
	1008 Move W5, W31
	1009 Move X21, X0
	1010 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	1011 Move [X19+344], X21
	1012 Move X0, [X22]
	1013 Move W8, [X0+224]
	1014 Compare W8, 0
	1015 JumpIfNotEqual {1018}
	1016 Call 0x1C17DFC
	1017 Move X0, [X22]
	1018 Move X8, [X0+184]
	1019 Move X24, 0x5E3000
	1020 Move X23, 0x5E3000
	1021 Move X20, [X8+96]
	1022 Move X24, [X24+2640]
	1023 Move X23, [X23+2520]
	1024 Compare X20, 0
	1025 JumpIfNotEqual {1047}
	1026 Move W8, [X0+224]
	1027 Compare W8, 0
	1028 JumpIfNotEqual {1031}
	1029 Call 0x1C17DFC
	1030 Move X0, [X22]
	1031 Move X9, 0x5E3000
	1032 Move X8, [X0+184]
	1033 Move X9, [X9+2448]
	1034 Move X21, [X8]
	1035 Move X0, [X9]
	1036 Call 0x1C17F10
	1037 Move X8, 0x5E3000
	1038 Move X8, [X8+2784]
	1039 Move X1, X21
	1040 Move X3, X31
	1041 Move X20, X0
	1042 Move X2, [X8]
	1043 Call Func`1<Object>..ctor, X0, X1, X2
	1044 Move X8, [X22]
	1045 Move X8, [X8+184]
	1046 Move [X8+96], X20
	1047 Move X0, [X24]
	1048 Call 0x1C17F10
	1049 Move X7, [X23]
	1050 Move W6, 0x2710
	1051 Move X1, X20
	1052 Move X2, X31
	1053 Move X3, X31
	1054 Move X4, X31
	1055 Move W5, W31
	1056 Move X21, X0
	1057 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	1058 Move [X19+352], X21
	1059 Move X0, X19
	1060 Move X20, [X31+80]
	1061 Move X19, [X31+88]
	1062 Move X22, [X31+64]
	1063 Move X21, [X31+72]
	1064 Move X24, [X31+48]
	1065 Move X23, [X31+56]
	1066 Move X26, [X31+32]
	1067 Move X25, [X31+40]
	1068 Move X28, [X31+16]
	1069 Move X27, [X31+24]
	1070 Move X1, X31
	1071 Move X29, [X31+96]
	1072 Move X30, [X31+104]
	1073 Call MonoBehaviour..ctor, X0
	1074 Return 
	1075 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B79E80 BL 0x1C16DFC
	0x03B79E84 MOV X0, X20
	0x03B79E88 MOV X1, X31
	0x03B79E8C MOV X2, X31
	0x03B79E90 BL 0x3C3883C
	0x03B79E94 TBZ X0, 0x0, 0x3B79F4C
	0x03B79E98 ADRP X8, 0x5E2000
	0x03B79E9C LDR X8, [X8 + 0xCB0]
	0x03B79EA0 MOV X0, X19
	0x03B79EA4 LDR X1, [X8]
	0x03B79EA8 BL 0x21A3894
	0x03B79EAC STR X0, [X19 + 0x20]
	0x03B79EB0 MOV X20, X0
	0x03B79EB4 LDR X0, [X21]
	0x03B79EB8 LDR W8, [X0 + 0xE0]
	0x03B79EBC CBNZ W8, 0x3B79EC4
	0x03B79EC0 BL 0x1C16DFC
	0x03B79EC4 MOV X0, X20
	0x03B79EC8 MOV X1, X31
	0x03B79ECC MOV X2, X31
	0x03B79ED0 BL 0x3C3883C
	0x03B79ED4 TBZ X0, 0x0, 0x3B79F4C
	0x03B79ED8 ADRP X8, 0x5E2000
	0x03B79EDC LDR X8, [X8 + 0xCA8]
	0x03B79EE0 LDR X0, [X8]
	0x03B79EE4 BL 0x295F9FC
	0x03B79EE8 STR X0, [X19 + 0x20]
	0x03B79EEC MOV X20, X0
	0x03B79EF0 LDR X0, [X21]
	0x03B79EF4 LDR W8, [X0 + 0xE0]
	0x03B79EF8 CBNZ W8, 0x3B79F00
	0x03B79EFC BL 0x1C16DFC
	0x03B79F00 MOV X0, X20
	0x03B79F04 MOV X1, X31
	0x03B79F08 MOV X2, X31
	0x03B79F0C BL 0x3C3883C
	0x03B79F10 TBZ X0, 0x0, 0x3B79F4C
	0x03B79F14 ADRP X8, 0x57A000
	0x03B79F18 LDR X8, [X8 + 0xA28]
	0x03B79F1C LDR X0, [X8]
	0x03B79F20 LDR W8, [X0 + 0xE0]
	0x03B79F24 CBNZ W8, 0x3B79F2C
	0x03B79F28 BL 0x1C16DFC
	0x03B79F2C ADRP X8, 0x5E2000
	0x03B79F30 LDR X8, [X8 + 0xCB8]
	0x03B79F34 MOV X1, X19
	0x03B79F38 LDP X20, X19, [X31 + 0x10]
	0x03B79F3C MOV X2, X31
	0x03B79F40 LDR X0, [X8]
	0x03B79F44 LDP X30, X21, [X31], #0x20
	0x03B79F48 B 0x3C06B0C
	0x03B79F4C LDP X20, X19, [X31 + 0x10]
	0x03B79F50 LDP X30, X21, [X31], #0x20
	0x03B79F54 RET
	0x03B79F58 LDR X1, [X0 + 0x20]
	0x03B79F5C B 0x3B79AC4
	0x03B79F60 LDR X1, [X0 + 0x20]
	0x03B79F64 B 0x3B799B4
	0x03B79F68 STP X30, X19, [X31 - 0x10]!
	0x03B79F6C MOV X19, X0
	0x03B79F70 BL 0x3B79BD4
	0x03B79F74 LDR X8, [X19]
	0x03B79F78 MOV X0, X19
	0x03B79F7C LDP X2, X1, [X8 + 0x178]
	0x03B79F80 LDP X30, X19, [X31], #0x10
	0x03B79F84 BR X2
	0x03B79F88 STP D11, D10, [X31 - 0x40]!
	0x03B79F8C STP D9, D8, [X31 + 0x10]
	0x03B79F90 STP X30, X21, [X31 + 0x20]
	0x03B79F94 STP X20, X19, [X31 + 0x30]
	0x03B79F98 ADRP X20, 0x869000
	0x03B79F9C ADRP X21, 0x57A000
	0x03B79FA0 LDRB W8, [X20 + 0xA85]
	0x03B79FA4 LDR X21, [X21 + 0x598]
	0x03B79FA8 MOV X19, X0
	0x03B79FAC TBNZ X8, 0x0, 0x3B79FC4
	0x03B79FB0 ADRP X0, 0x57A000
	0x03B79FB4 LDR X0, [X0 + 0x598]
	0x03B79FB8 BL 0x1C16CF4
	0x03B79FBC MOVZ W8, 0x1
	0x03B79FC0 STRB W8, [X20 + 0xA85]
	0x03B79FC4 LDR X0, [X21]
	0x03B79FC8 LDR X20, [X19 + 0x30]
	0x03B79FCC LDR W8, [X0 + 0xE0]
	0x03B79FD0 CBNZ W8, 0x3B79FD8
	0x03B79FD4 BL 0x1C16DFC
	0x03B79FD8 MOV X0, X20
	0x03B79FDC MOV X1, X31
	0x03B79FE0 MOV X2, X31
	0x03B79FE4 BL 0x3C3883C
	0x03B79FE8 TBNZ X0, 0x0, 0x3B7A014
	0x03B79FEC LDR X0, [X21]
	0x03B79FF0 LDR X20, [X19 + 0x38]
	0x03B79FF4 LDR W8, [X0 + 0xE0]
	0x03B79FF8 CBNZ W8, 0x3B7A000
	0x03B79FFC BL 0x1C16DFC
	0x03B7A000 MOV X0, X20
	0x03B7A004 MOV X1, X31
	0x03B7A008 MOV X2, X31
	0x03B7A00C BL 0x3C3883C
	0x03B7A010 TBZ X0, 0x0, 0x3B7A028
	0x03B7A014 LDP X20, X19, [X31 + 0x30]
	0x03B7A018 LDP X30, X21, [X31 + 0x20]
	0x03B7A01C LDP D9, D8, [X31 + 0x10]
	0x03B7A020 LDP D11, D10, [X31], #0x40
	0x03B7A024 RET
	0x03B7A028 LDR X0, [X19 + 0x30]
	0x03B7A02C CBZ X0, 0x3B7A0C0
	0x03B7A030 MOV X1, X31
	0x03B7A034 BL 0x3B2F430
	0x03B7A038 LDP S2, S1, [X19 + 0x28]
	0x03B7A03C LDR X0, [X19 + 0x30]
	0x03B7A040 FCMP S0, S1
	0x03B7A044 FCSEL S1, S1, S0, GT
	0x03B7A048 FCMP S0, S2
	0x03B7A04C FCSEL S8, S1, S2, PL
	0x03B7A050 CBZ X0, 0x3B7A0C0
	0x03B7A054 MOV X1, X31
	0x03B7A058 BL 0x3B2F3DC
	0x03B7A05C LDR X0, [X19 + 0x38]
	0x03B7A060 CBZ X0, 0x3B7A0C0
	0x03B7A064 MOV X1, X31
	0x03B7A068 MOV V9.16B, V0.16B
	0x03B7A06C MOV V10.16B, V2.16B
	0x03B7A070 BL 0x3C8FBC0
	0x03B7A074 LDR X0, [X19 + 0x38]
	0x03B7A078 CBZ X0, 0x3B7A0C0
	0x03B7A07C MOV V11.16B, V0.16B
	0x03B7A080 MOV V0.16B, V8.16B
	0x03B7A084 MOV X1, X31
	0x03B7A088 BL 0x3C8FADC
	0x03B7A08C LDR X0, [X19 + 0x38]
	0x03B7A090 CBZ X0, 0x3B7A0C0
	0x03B7A094 FMOV S0, 0.5
	0x03B7A098 FMUL S0, S8, S0
	0x03B7A09C FADD S1, S0, S11
	0x03B7A0A0 MOV V0.16B, V9.16B
	0x03B7A0A4 LDP X20, X19, [X31 + 0x30]
	0x03B7A0A8 LDP X30, X21, [X31 + 0x20]
	0x03B7A0AC LDP D9, D8, [X31 + 0x10]
	0x03B7A0B0 MOV V2.16B, V10.16B
	0x03B7A0B4 MOV X1, X31
	0x03B7A0B8 LDP D11, D10, [X31], #0x40
	0x03B7A0BC B 0x3C8FB28
	0x03B7A0C0 BL 0x1C16F20
	0x03B7A0C4 STR X30, [X31 - 0x40]!
	0x03B7A0C8 STP X24, X23, [X31 + 0x10]
	0x03B7A0CC STP X22, X21, [X31 + 0x20]
	0x03B7A0D0 STP X20, X19, [X31 + 0x30]
	0x03B7A0D4 ADRP X21, 0x868000
	0x03B7A0D8 LDRB W8, [X21 + 0xABA]
	0x03B7A0DC MOV X19, X1
	0x03B7A0E0 MOV X20, X0
	0x03B7A0E4 TBNZ X8, 0x0, 0x3B7A0FC
	0x03B7A0E8 ADRP X0, 0x5E1000
	0x03B7A0EC LDR X0, [X0 + 0xC78]
	0x03B7A0F0 BL 0x1C16CF4
	0x03B7A0F4 MOVZ W8, 0x1
	0x03B7A0F8 STRB W8, [X21 + 0xABA]
	0x03B7A0FC ADRP X24, 0x5E1000
	0x03B7A100 LDR X21, [X20 + 0x20]!
	0x03B7A104 LDR X24, [X24 + 0xC78]
	0x03B7A108 MOV X0, X21
	0x03B7A10C MOV X1, X19
	0x03B7A110 MOV X2, X31
	0x03B7A114 BL 0x33C0DE4
	0x03B7A118 CBZ X0, 0x3B7A138
	0x03B7A11C LDR X23, [X24]
	0x03B7A120 MOV X22, X0
	0x03B7A124 MOV X1, X23
	0x03B7A128 BL 0x1C16E00
	0x03B7A12C MOV X1, X0
	0x03B7A130 CBNZ X0, 0x3B7A13C
	0x03B7A134 B 0x3B7A168
	0x03B7A138 MOV X1, X31
	0x03B7A13C MOV X0, X20
	0x03B7A140 MOV X2, X21
	0x03B7A144 BL 0x1C24138
	0x03B7A148 CMP X21, X0
	0x03B7A14C MOV X21, X0
	0x03B7A150 B.NE 0x3B7A108
	0x03B7A154 LDP X20, X19, [X31 + 0x30]
	0x03B7A158 LDP X22, X21, [X31 + 0x20]
	0x03B7A15C LDP X24, X23, [X31 + 0x10]
	0x03B7A160 LDR X30, [X31], #0x40
	0x03B7A164 RET
	0x03B7A168 MOV X0, X22
	0x03B7A16C MOV X1, X23
	0x03B7A170 BL 0x1C171E0
	0x03B7A174 STR X30, [X31 - 0x40]!
	0x03B7A178 STP X24, X23, [X31 + 0x10]
	0x03B7A17C STP X22, X21, [X31 + 0x20]
	0x03B7A180 STP X20, X19, [X31 + 0x30]
	0x03B7A184 ADRP X21, 0x868000
	0x03B7A188 LDRB W8, [X21 + 0xABC]
	0x03B7A18C MOV X19, X1
	0x03B7A190 MOV X20, X0
	0x03B7A194 TBNZ X8, 0x0, 0x3B7A1AC
	0x03B7A198 ADRP X0, 0x5E1000
	0x03B7A19C LDR X0, [X0 + 0xC78]
	0x03B7A1A0 BL 0x1C16CF4
	0x03B7A1A4 MOVZ W8, 0x1
	0x03B7A1A8 STRB W8, [X21 + 0xABC]
	0x03B7A1AC ADRP X24, 0x5E1000
	0x03B7A1B0 LDR X21, [X20 + 0x28]!
	0x03B7A1B4 LDR X24, [X24 + 0xC78]
	0x03B7A1B8 MOV X0, X21
	0x03B7A1BC MOV X1, X19
	0x03B7A1C0 MOV X2, X31
	0x03B7A1C4 BL 0x33C0DE4
	0x03B7A1C8 CBZ X0, 0x3B7A1E8
	0x03B7A1CC LDR X23, [X24]
	0x03B7A1D0 MOV X22, X0
	0x03B7A1D4 MOV X1, X23
	0x03B7A1D8 BL 0x1C16E00
	0x03B7A1DC MOV X1, X0
	0x03B7A1E0 CBNZ X0, 0x3B7A1EC
	0x03B7A1E4 B 0x3B7A218
	0x03B7A1E8 MOV X1, X31
	0x03B7A1EC MOV X0, X20
	0x03B7A1F0 MOV X2, X21
	0x03B7A1F4 BL 0x1C24138
	0x03B7A1F8 CMP X21, X0
	0x03B7A1FC MOV X21, X0
	0x03B7A200 B.NE 0x3B7A1B8
	0x03B7A204 LDP X20, X19, [X31 + 0x30]
	0x03B7A208 LDP X22, X21, [X31 + 0x20]
	0x03B7A20C LDP X24, X23, [X31 + 0x10]
	0x03B7A210 LDR X30, [X31], #0x40
	0x03B7A214 RET
	0x03B7A218 MOV X0, X22
	0x03B7A21C MOV X1, X23
	0x03B7A220 BL 0x1C171E0
	0x03B7A224 STR X30, [X31 - 0x40]!
	0x03B7A228 STP X24, X23, [X31 + 0x10]
	0x03B7A22C STP X22, X21, [X31 + 0x20]
	0x03B7A230 STP X20, X19, [X31 + 0x30]
	0x03B7A234 ADRP X21, 0x868000
	0x03B7A238 LDRB W8, [X21 + 0xABB]
	0x03B7A23C MOV X19, X1
	0x03B7A240 MOV X20, X0
	0x03B7A244 TBNZ X8, 0x0, 0x3B7A25C
	0x03B7A248 ADRP X0, 0x5E1000
	0x03B7A24C LDR X0, [X0 + 0xC78]
	0x03B7A250 BL 0x1C16CF4
	0x03B7A254 MOVZ W8, 0x1
	0x03B7A258 STRB W8, [X21 + 0xABB]
	0x03B7A25C ADRP X24, 0x5E1000
	0x03B7A260 LDR X21, [X20 + 0x20]!
	0x03B7A264 LDR X24, [X24 + 0xC78]
	0x03B7A268 MOV X0, X21
	0x03B7A26C MOV X1, X19
	0x03B7A270 MOV X2, X31
	0x03B7A274 BL 0x33C0FDC
	0x03B7A278 CBZ X0, 0x3B7A298
	0x03B7A27C LDR X23, [X24]
	0x03B7A280 MOV X22, X0
	0x03B7A284 MOV X1, X23
	0x03B7A288 BL 0x1C16E00
	0x03B7A28C MOV X1, X0
	0x03B7A290 CBNZ X0, 0x3B7A29C
	0x03B7A294 B 0x3B7A2C8
	0x03B7A298 MOV X1, X31
	0x03B7A29C MOV X0, X20
	0x03B7A2A0 MOV X2, X21
	0x03B7A2A4 BL 0x1C24138
	0x03B7A2A8 CMP X21, X0
	0x03B7A2AC MOV X21, X0
	0x03B7A2B0 B.NE 0x3B7A268
	0x03B7A2B4 LDP X20, X19, [X31 + 0x30]
	0x03B7A2B8 LDP X22, X21, [X31 + 0x20]
	0x03B7A2BC LDP X24, X23, [X31 + 0x10]
	0x03B7A2C0 LDR X30, [X31], #0x40
	0x03B7A2C4 RET
	0x03B7A2C8 MOV X0, X22
	0x03B7A2CC MOV X1, X23
	0x03B7A2D0 BL 0x1C171E0
	0x03B7A2D4 STR X30, [X31 - 0x40]!
	0x03B7A2D8 STP X24, X23, [X31 + 0x10]
	0x03B7A2DC STP X22, X21, [X31 + 0x20]
	0x03B7A2E0 STP X20, X19, [X31 + 0x30]
	0x03B7A2E4 ADRP X21, 0x868000
	0x03B7A2E8 LDRB W8, [X21 + 0xABD]
	0x03B7A2EC MOV X19, X1
	0x03B7A2F0 MOV X20, X0
	0x03B7A2F4 TBNZ X8, 0x0, 0x3B7A30C
	0x03B7A2F8 ADRP X0, 0x5E1000
	0x03B7A2FC LDR X0, [X0 + 0xC78]
	0x03B7A300 BL 0x1C16CF4
	0x03B7A304 MOVZ W8, 0x1
	0x03B7A308 STRB W8, [X21 + 0xABD]
	0x03B7A30C ADRP X24, 0x5E1000
	0x03B7A310 LDR X21, [X20 + 0x28]!
	0x03B7A314 LDR X24, [X24 + 0xC78]
	0x03B7A318 MOV X0, X21
	0x03B7A31C MOV X1, X19
	0x03B7A320 MOV X2, X31
	0x03B7A324 BL 0x33C0FDC
	0x03B7A328 CBZ X0, 0x3B7A348
	0x03B7A32C LDR X23, [X24]
	0x03B7A330 MOV X22, X0
	0x03B7A334 MOV X1, X23
	0x03B7A338 BL 0x1C16E00
	0x03B7A33C MOV X1, X0
	0x03B7A340 CBNZ X0, 0x3B7A34C
	0x03B7A344 B 0x3B7A378
	0x03B7A348 MOV X1, X31
	0x03B7A34C MOV X0, X20
	0x03B7A350 MOV X2, X21
	0x03B7A354 BL 0x1C24138
	0x03B7A358 CMP X21, X0
	0x03B7A35C MOV X21, X0
	0x03B7A360 B.NE 0x3B7A318
	0x03B7A364 LDP X20, X19, [X31 + 0x30]
	0x03B7A368 LDP X22, X21, [X31 + 0x20]
	0x03B7A36C LDP X24, X23, [X31 + 0x10]
	0x03B7A370 LDR X30, [X31], #0x40
	0x03B7A374 RET
	0x03B7A378 MOV X0, X22
	0x03B7A37C MOV X1, X23
	0x03B7A380 BL 0x1C171E0
	0x03B7A384 LDR X8, [X0]
	0x03B7A388 LDP X2, X1, [X8 + 0x178]
	0x03B7A38C BR X2
	0x03B7A390 LDR X8, [X0]
	0x03B7A394 LDP X2, X1, [X8 + 0x178]
	0x03B7A398 BR X2
	0x03B7A39C STR X30, [X31 - 0x20]!
	0x03B7A3A0 STP X20, X19, [X31 + 0x10]
	0x03B7A3A4 ADRP X20, 0x868000
	0x03B7A3A8 LDRB W8, [X20 + 0xA89]
	0x03B7A3AC MOV X19, X0
	0x03B7A3B0 TBNZ X8, 0x0, 0x3B7A3C8
	0x03B7A3B4 ADRP X0, 0x5E1000
	0x03B7A3B8 LDR X0, [X0 + 0xCC0]
	0x03B7A3BC BL 0x1C16CF4
	0x03B7A3C0 MOVZ W8, 0x1
	0x03B7A3C4 STRB W8, [X20 + 0xA89]
	0x03B7A3C8 LDR X8, [X19 + 0x30]
	0x03B7A3CC CBZ X8, 0x3B7A3F0
	0x03B7A3D0 ADRP X9, 0x5E1000
	0x03B7A3D4 LDR X9, [X9 + 0xCC0]
	0x03B7A3D8 LDR X10, [X8]
	0x03B7A3DC LDR X9, [X9]
	0x03B7A3E0 LDRB W12, [X10 + 0x130]
	0x03B7A3E4 LDRB W11, [X9 + 0x130]
	0x03B7A3E8 CMP W12, W11
	0x03B7A3EC B.CS 0x3B7A3F8
	0x03B7A3F0 MOV X0, X31
	0x03B7A3F4 B 0x3B7A40C
	0x03B7A3F8 LDR X10, [X10 + 0xC8]
	0x03B7A3FC ADD X10, X10, X11, 0x3, LSL
	0x03B7A400 LDUR X10, [X10 - 0x8]
	0x03B7A404 CMP X10, X9
	0x03B7A408 CSEL X0, X8, X31, EQ
	0x03B7A40C LDP X20, X19, [X31 + 0x10]
	0x03B7A410 LDR X30, [X31], #0x20
	0x03B7A414 RET
	0x03B7A418 MOVZ W8, 0x7F800000
	0x03B7A41C MOV X1, X31
	0x03B7A420 STR W8, [X0 + 0x2C]
	0x03B7A424 B 0x3C36C30
	0x03B7A428 LDR X0, [X0 + 0x1D0]
	0x03B7A42C RET
	0x03B7A430 STR X1, [X0 + 0x1D0]
	0x03B7A434 RET

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x86A000
	014 Move X19, 0x5E3000
	015 Move X22, 0x5E2000
	016 Move X21, 0x5E3000
	017 Move W8, [X23+2676]
	018 Move X19, [X19+2872]
	019 Move X22, [X22+3616]
	020 Move X21, [X21+2864]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {111}
	025 Move X0, 0x5E3000
	026 Move X0, [X0+2880]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E3000
	029 Move X0, [X0+2888]
	030 Call 0x1C17CF4
	031 Move X0, 0x5E3000
	032 Move X0, [X0+2896]
	033 Call 0x1C17CF4
	034 Move X0, 0x5E3000
	035 Move X0, [X0+2904]
	036 Call 0x1C17CF4
	037 Move X0, 0x5E3000
	038 Move X0, [X0+2912]
	039 Call 0x1C17CF4
	040 Move X0, 0x5E3000
	041 Move X0, [X0+2872]
	042 Call 0x1C17CF4
	043 Move X0, 0x5E3000
	044 Move X0, [X0+2920]
	045 Call 0x1C17CF4
	046 Move X0, 0x5E3000
	047 Move X0, [X0+2928]
	048 Call 0x1C17CF4
	049 Move X0, 0x5E3000
	050 Move X0, [X0+2864]
	051 Call 0x1C17CF4
	052 Move X0, 0x5E2000
	053 Move X0, [X0+3616]
	054 Call 0x1C17CF4
	055 Move X0, 0x5E3000
	056 Move X0, [X0+2936]
	057 Call 0x1C17CF4
	058 Move X0, 0x5E3000
	059 Move X0, [X0+2944]
	060 Call 0x1C17CF4
	061 Move X0, 0x5E3000
	062 Move X0, [X0+2952]
	063 Call 0x1C17CF4
	064 Move X0, 0x5E3000
	065 Move X0, [X0+2960]
	066 Call 0x1C17CF4
	067 Move X0, 0x5E3000
	068 Move X0, [X0+2968]
	069 Call 0x1C17CF4
	070 Move X0, 0x5E3000
	071 Move X0, [X0+2976]
	072 Call 0x1C17CF4
	073 Move X0, 0x5E3000
	074 Move X0, [X0+2984]
	075 Call 0x1C17CF4
	076 Move X0, 0x5E3000
	077 Move X0, [X0+2992]
	078 Call 0x1C17CF4
	079 Move X0, 0x5E3000
	080 Move X0, [X0+3000]
	081 Call 0x1C17CF4
	082 Move X0, 0x5E3000
	083 Move X0, [X0+3008]
	084 Call 0x1C17CF4
	085 Move X0, 0x5E3000
	086 Move X0, [X0+3016]
	087 Call 0x1C17CF4
	088 Move X0, 0x5E3000
	089 Move X0, [X0+3024]
	090 Call 0x1C17CF4
	091 Move X0, 0x5E3000
	092 Move X0, [X0+3032]
	093 Call 0x1C17CF4
	094 Move X0, 0x5E3000
	095 Move X0, [X0+3040]
	096 Call 0x1C17CF4
	097 Move X0, 0x5E3000
	098 Move X0, [X0+3048]
	099 Call 0x1C17CF4
	100 Move X0, 0x5E3000
	101 Move X0, [X0+3056]
	102 Call 0x1C17CF4
	103 Move X0, 0x5E3000
	104 Move X0, [X0+3064]
	105 Call 0x1C17CF4
	106 Move X0, 0x5E2000
	107 Move X0, [X0+3072]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X23+2676], W8
	111 Move X24, 0x5E2000
	112 Move X20, 0x5E2000
	113 Move X23, 0x5E2000
	114 Move X29, 0x5E2000
	115 Move X28, 0x5E2000
	116 Move X27, 0x5E2000
	117 Move X26, 0x5E2000
	118 Move X25, 0x5E2000
	119 Move X24, [X24+2888]
	120 Move X20, [X20+2920]
	121 Move X23, [X23+2880]
	122 Move X29, [X29+2928]
	123 Move X28, [X28+2904]
	124 Move X27, [X27+2896]
	125 Move X26, [X26+3024]
	126 Move X25, [X25+2952]
	127 Move X0, [X19]
	128 Call 0x1C17F10
	129 Move X8, 0x5E2000
	130 Move X8, [X8+2912]
	131 Move X19, X0
	132 Move X1, [X8]
	133 Call List`1<Object>..ctor, X0
	134 Move X8, [X22]
	135 Move X8, [X8+184]
	136 Move [X8], X19
	137 Move X0, [X21]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X21]
	143 Move X8, [X0+184]
	144 Move X0, [X24]
	145 Move X19, [X8]
	146 Call 0x1C17F10
	147 Move X2, [X20]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X20, X0
	151 Call Func`1<Object>..ctor, X0, X1, X2
	152 Move X8, [X21]
	153 Move X0, [X23]
	154 Move X8, [X8+184]
	155 Move X19, [X8]
	156 Call 0x1C17F10
	157 Move X2, [X29]
	158 Move X1, X19
	159 Move X3, X31
	160 Move X21, X0
	161 Call Action`1<Object>..ctor, X0, X1, X2
	162 Move X0, [X28]
	163 Call 0x1C17F10
	164 Move X7, [X27]
	165 Move W6, 0x2710
	166 Move X1, X20
	167 Move X2, X31
	168 Move X3, X21
	169 Move X4, X31
	170 Move W5, W31
	171 Move X19, X0
	172 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	173 Move X8, [X22]
	174 Move W1, 1
	175 Move W2, W31
	176 Move W3, W31
	177 Move X8, [X8+184]
	178 Move X4, X31
	179 Move [X8+8], X19
	180 Move X0, [X26]
	181 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	182 Move X8, [X22]
	183 Move W1, 1
	184 Move W2, W31
	185 Move W3, W31
	186 Move X8, [X8+184]
	187 Move X4, X31
	188 Move [X8+16], X0
	189 Move X0, [X25]
	190 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	191 Move X8, [X22]
	192 Move W1, 1
	193 Move W2, W31
	194 Move W3, W31
	195 Move X8, [X8+184]
	196 Move X4, X31
	197 Move [X8+24], X0
	198 Move X8, 0x5E2000
	199 Move X8, [X8+2968]
	200 Move X0, [X8]
	201 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	202 Move X8, [X22]
	203 Move W1, 1
	204 Move W2, W31
	205 Move W3, W31
	206 Move X8, [X8+184]
	207 Move X4, X31
	208 Move [X8+32], X0
	209 Move X8, 0x5E2000
	210 Move X8, [X8+2936]
	211 Move X0, [X8]
	212 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	213 Move X8, [X22]
	214 Move W1, 1
	215 Move W2, W31
	216 Move W3, W31
	217 Move X8, [X8+184]
	218 Move X4, X31
	219 Move [X8+40], X0
	220 Move X8, 0x5E2000
	221 Move X8, [X8+2960]
	222 Move X0, [X8]
	223 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	224 Move X8, [X22]
	225 Move W1, 1
	226 Move W2, W31
	227 Move W3, W31
	228 Move X8, [X8+184]
	229 Move X4, X31
	230 Move [X8+48], X0
	231 Move X8, 0x5E2000
	232 Move X8, [X8+3000]
	233 Move X0, [X8]
	234 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	235 Move X8, [X22]
	236 Move W1, 1
	237 Move W2, W31
	238 Move W3, W31
	239 Move X8, [X8+184]
	240 Move X4, X31
	241 Move [X8+56], X0
	242 Move X8, 0x5E2000
	243 Move X8, [X8+3072]
	244 Move X0, [X8]
	245 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	246 Move X8, [X22]
	247 Move W1, 1
	248 Move W2, W31
	249 Move W3, W31
	250 Move X8, [X8+184]
	251 Move X4, X31
	252 Move [X8+64], X0
	253 Move X8, 0x5E2000
	254 Move X8, [X8+2992]
	255 Move X0, [X8]
	256 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	257 Move X8, [X22]
	258 Move W1, 1
	259 Move W2, W31
	260 Move W3, W31
	261 Move X8, [X8+184]
	262 Move X4, X31
	263 Move [X8+72], X0
	264 Move X8, 0x5E2000
	265 Move X8, [X8+2944]
	266 Move X0, [X8]
	267 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	268 Move X8, [X22]
	269 Move W1, 1
	270 Move W2, W31
	271 Move W3, W31
	272 Move X8, [X8+184]
	273 Move X4, X31
	274 Move [X8+80], X0
	275 Move X8, 0x5E2000
	276 Move X8, [X8+3016]
	277 Move X0, [X8]
	278 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	279 Move X8, [X22]
	280 Move W1, 1
	281 Move W2, W31
	282 Move W3, W31
	283 Move X8, [X8+184]
	284 Move X4, X31
	285 Move [X8+88], X0
	286 Move X8, 0x5E2000
	287 Move X8, [X8+3008]
	288 Move X0, [X8]
	289 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	290 Move X8, [X22]
	291 Move W1, 1
	292 Move W2, W31
	293 Move W3, W31
	294 Move X8, [X8+184]
	295 Move X4, X31
	296 Move [X8+96], X0
	297 Move X8, 0x5E2000
	298 Move X8, [X8+3032]
	299 Move X0, [X8]
	300 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	301 Move X8, [X22]
	302 Move W1, 1
	303 Move W2, W31
	304 Move W3, W31
	305 Move X8, [X8+184]
	306 Move X4, X31
	307 Move [X8+104], X0
	308 Move X8, 0x5E2000
	309 Move X8, [X8+3056]
	310 Move X0, [X8]
	311 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	312 Move X8, [X22]
	313 Move W1, 1
	314 Move W2, W31
	315 Move W3, W31
	316 Move X8, [X8+184]
	317 Move X4, X31
	318 Move [X8+112], X0
	319 Move X8, 0x5E2000
	320 Move X8, [X8+2984]
	321 Move X0, [X8]
	322 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	323 Move X8, [X22]
	324 Move W1, 1
	325 Move W2, W31
	326 Move W3, W31
	327 Move X8, [X8+184]
	328 Move X4, X31
	329 Move [X8+120], X0
	330 Move X8, 0x5E2000
	331 Move X8, [X8+3040]
	332 Move X0, [X8]
	333 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	334 Move X8, [X22]
	335 Move W1, 1
	336 Move W2, W31
	337 Move W3, W31
	338 Move X8, [X8+184]
	339 Move X4, X31
	340 Move [X8+128], X0
	341 Move X8, 0x5E2000
	342 Move X8, [X8+2976]
	343 Move X0, [X8]
	344 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	345 Move X8, [X22]
	346 Move W1, 1
	347 Move W2, W31
	348 Move W3, W31
	349 Move X8, [X8+184]
	350 Move X4, X31
	351 Move [X8+136], X0
	352 Move X8, 0x5E2000
	353 Move X8, [X8+3064]
	354 Move X0, [X8]
	355 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	356 Move X8, [X22]
	357 Move W1, 1
	358 Move W2, W31
	359 Move W3, W31
	360 Move X8, [X8+184]
	361 Move X4, X31
	362 Move [X8+144], X0
	363 Move X8, 0x5E2000
	364 Move X8, [X8+3048]
	365 Move X0, [X8]
	366 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	367 Move X8, [X22]
	368 Move X20, [X31+80]
	369 Move X19, [X31+88]
	370 Move X22, [X31+64]
	371 Move X21, [X31+72]
	372 Move X24, [X31+48]
	373 Move X23, [X31+56]
	374 Move X8, [X8+184]
	375 Move X26, [X31+32]
	376 Move X25, [X31+40]
	377 Move X28, [X31+16]
	378 Move X27, [X31+24]
	379 Move [X8+152], X0
	380 Move X29, [X31+96]
	381 Move X30, [X31+104]
	382 Return 

