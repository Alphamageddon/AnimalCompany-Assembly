Type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster

Method: System.Boolean get_ignoreReversedGraphics()

Disassembly:
	0x03B9BCE4 LDR X0, [X8]
	0x03B9BCE8 BL 0x1C16F10

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_ignoreReversedGraphics(System.Boolean value)

Disassembly:
	0x03B9BCEC ADRP X8, 0x5C0000
	0x03B9BCF0 LDR X8, [X8 + 0x270]
	0x03B9BCF4 MOVI V0.2D, 0x0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Boolean get_checkFor2DOcclusion()

Disassembly:
	0x03B9BCF8 ADD X1, X31, 0x0
	0x03B9BCFC MOVZ W2, 0x1

ISIL:
	001 Move W0, [X0+41]
	002 Return X0

Method: System.Void set_checkFor2DOcclusion(System.Boolean value)

Disassembly:
	0x03B9BD00 LDR X5, [X8]
	0x03B9BD04 MOV X3, X31
	0x03B9BD08 MOV W4, W31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+41], W8
	003 Return 

Method: System.Boolean get_checkFor3DOcclusion()

Disassembly:
	0x03B9BD0C MOV X22, X0
	0x03B9BD10 STR X31, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+42]
	002 Return X0

Method: System.Void set_checkFor3DOcclusion(System.Boolean value)

Disassembly:
	0x03B9BD14 STP V0, V0, [X31 + 0x10]
	0x03B9BD18 STR V0, [X31]
	0x03B9BD1C BL 0x28E2908

ISIL:
	001 And W8, W1, 1
	002 Move [X0+42], W8
	003 Return 

Method: UnityEngine.LayerMask get_blockingMask()

Disassembly:
	0x03B9BD20 CBZ X21, 0x3B9BD70
	0x03B9BD24 ADRP X8, 0x5C1000

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_blockingMask(UnityEngine.LayerMask value)

Disassembly:
	0x03B9BD28 LDR X8, [X8 + 0x9C0]
	0x03B9BD2C MOV X0, X21

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: UnityEngine.QueryTriggerInteraction get_raycastTriggerInteraction()

Disassembly:
	0x03B9BD30 MOV X1, X19
	0x03B9BD34 MOV X2, X22

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_raycastTriggerInteraction(UnityEngine.QueryTriggerInteraction value)

Disassembly:
	0x03B9BD38 LDR X3, [X8]
	0x03B9BD3C BL 0x2AA5084

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: UnityEngine.Camera get_eventCamera()

Disassembly:
	0x03B9BD40 LDR X0, [X20 + 0x68]
	0x03B9BD44 CBZ X0, 0x3B9BD70
	0x03B9BD48 ADRP X8, 0x5C1000
	0x03B9BD4C LDR X8, [X8 + 0x9B8]
	0x03B9BD50 MOV X1, X19
	0x03B9BD54 LDR X2, [X8]
	0x03B9BD58 BL 0x2AA5018
	0x03B9BD5C LDP X20, X19, [X31 + 0x60]
	0x03B9BD60 LDP X22, X21, [X31 + 0x50]
	0x03B9BD64 LDR X30, [X31 + 0x40]
	0x03B9BD68 ADD X31, X31, 0x70
	0x03B9BD6C RET
	0x03B9BD70 BL 0x1C16F20
	0x03B9BD74 SUB X31, X31, 0x30
	0x03B9BD78 STP X30, X21, [X31 + 0x10]
	0x03B9BD7C STP X20, X19, [X31 + 0x20]
	0x03B9BD80 ADRP X21, 0x847000
	0x03B9BD84 ADRP X20, 0x5C0000
	0x03B9BD88 LDRB W8, [X21 + 0xC0E]
	0x03B9BD8C LDR X20, [X20 + 0x1C8]
	0x03B9BD90 MOV X19, X0
	0x03B9BD94 TBNZ X8, 0x0, 0x3B9BDC4
	0x03B9BD98 ADRP X0, 0x5C1000
	0x03B9BD9C LDR X0, [X0 + 0x918]
	0x03B9BDA0 BL 0x1C16CF4
	0x03B9BDA4 ADRP X0, 0x558000
	0x03B9BDA8 LDR X0, [X0 + 0x598]
	0x03B9BDAC BL 0x1C16CF4
	0x03B9BDB0 ADRP X0, 0x5C0000
	0x03B9BDB4 LDR X0, [X0 + 0x1C8]
	0x03B9BDB8 BL 0x1C16CF4
	0x03B9BDBC MOVZ W8, 0x1
	0x03B9BDC0 STRB W8, [X21 + 0xC0E]
	0x03B9BDC4 LDR X0, [X20]
	0x03B9BDC8 STR X31, [X31 + 0x8]
	0x03B9BDCC LDR W8, [X0 + 0xE0]
	0x03B9BDD0 CBNZ W8, 0x3B9BDDC
	0x03B9BDD4 BL 0x1C16DFC
	0x03B9BDD8 LDR X0, [X20]
	0x03B9BDDC LDR X8, [X0 + 0xB8]
	0x03B9BDE0 LDR X0, [X8 + 0x18]
	0x03B9BDE4 CBZ X0, 0x3B9BE4C
	0x03B9BDE8 ADRP X8, 0x5C1000
	0x03B9BDEC LDR X8, [X8 + 0x918]
	0x03B9BDF0 ADD X2, X31, 0x8
	0x03B9BDF4 MOV X1, X19
	0x03B9BDF8 LDR X3, [X8]
	0x03B9BDFC BL 0x2AA6B2C
	0x03B9BE00 TBZ X0, 0x0, 0x3B9BE34
	0x03B9BE04 ADRP X8, 0x558000
	0x03B9BE08 LDR X8, [X8 + 0x598]
	0x03B9BE0C LDR X19, [X31 + 0x8]
	0x03B9BE10 LDR X0, [X8]
	0x03B9BE14 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x848000
	006 Move X21, 0x559000
	007 Move W8, [X20+3079]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x559000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3079], W8
	019 Move X0, X19
	020 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	021 Move X8, [X21]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {68}
	036 Move X0, X19
	037 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	038 Compare X0, 0
	039 JumpIfEqual {75}
	040 Move X1, X31
	041 Call Canvas.get_worldCamera, X0
	042 Move X8, [X21]
	043 Move X20, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {68}
	057 Move X0, X19
	058 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	059 Compare X0, 0
	060 JumpIfEqual {75}
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X1, X31
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Call Canvas.get_worldCamera, X0
	067 Return X0
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X0, X31
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call Camera.get_main
	074 Return X0
	075 Call 0x1C17F20

Method: System.Void Raycast(UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03B9BEB4 CMP X22, X8
	0x03B9BEB8 B.CS 0x3B9BF24
	0x03B9BEBC MOV X0, X21
	0x03B9BEC0 MOV X1, X31
	0x03B9BEC4 BL 0x3C8E684
	0x03B9BEC8 MOV V8.16B, V0.16B
	0x03B9BECC MOV W24, W22
	0x03B9BED0 LDR W8, [X20 + 0x18]
	0x03B9BED4 ADD X22, X22, 0x1
	0x03B9BED8 CMP X23, X22
	0x03B9BEDC ADD X21, X21, 0x2C
	0x03B9BEE0 B.NE 0x3B9BE94
	0x03B9BEE4 B 0x3B9BEEC
	0x03B9BEE8 MOV W24, W31
	0x03B9BEEC CMP W24, W8
	0x03B9BEF0 B.CS 0x3B9BF24
	0x03B9BEF4 MOVZ W8, 0x2C
	0x03B9BEF8 SMADDL X8, X24, X8, X20
	0x03B9BEFC LDUR V0, [X8 + 0x3C]
	0x03B9BF00 LDP V2, V1, [X8 + 0x20]
	0x03B9BF04 LDP X22, X21, [X31 + 0x20]
	0x03B9BF08 LDP X24, X23, [X31 + 0x10]
	0x03B9BF0C STUR V0, [X19 + 0x1C]
	0x03B9BF10 STP V2, V1, [X19]
	0x03B9BF14 LDP X20, X19, [X31 + 0x30]
	0x03B9BF18 LDR X30, [X31 + 0x8]
	0x03B9BF1C LDR V8, [X31], #0x40
	0x03B9BF20 RET
	0x03B9BF24 BL 0x1C16F28
	0x03B9BF28 BL 0x1C16F20
	0x03B9BF2C STR X30, [X31 - 0x30]!
	0x03B9BF30 STP X22, X21, [X31 + 0x10]
	0x03B9BF34 STP X20, X19, [X31 + 0x20]
	0x03B9BF38 ADRP X20, 0x847000
	0x03B9BF3C LDRB W8, [X20 + 0xC0F]
	0x03B9BF40 MOV X19, X0
	0x03B9BF44 TBNZ X8, 0x0, 0x3B9BF80
	0x03B9BF48 ADRP X0, 0x5C1000
	0x03B9BF4C LDR X0, [X0 + 0x9C8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x848000
	007 Move W8, [X22+3080]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5C2000
	016 Move X0, [X0+2312]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3080], W8
	020 Compare X20, 0
	021 JumpIfEqual {33}
	022 Move X8, 0x5C2000
	023 Move X8, [X8+2312]
	024 Move X9, [X20]
	025 Move X8, [X8]
	026 Move W11, [X9+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 
	039 Move X0, X21
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]

Method: UnityEngine.Canvas get_canvas()

Disassembly:
	0x03B9BE18 CBNZ W8, 0x3B9BE20
	0x03B9BE1C BL 0x1C16DFC
	0x03B9BE20 MOV X0, X19
	0x03B9BE24 MOV X1, X31
	0x03B9BE28 MOV X2, X31
	0x03B9BE2C BL 0x3C354F8
	0x03B9BE30 B 0x3B9BE38
	0x03B9BE34 MOV W0, W31
	0x03B9BE38 LDP X20, X19, [X31 + 0x20]
	0x03B9BE3C LDP X30, X21, [X31 + 0x10]
	0x03B9BE40 AND W0, W0, 0x1
	0x03B9BE44 ADD X31, X31, 0x30
	0x03B9BE48 RET
	0x03B9BE4C BL 0x1C16F20
	0x03B9BE50 STR D8, [X31 - 0x40]!
	0x03B9BE54 STR X30, [X31 + 0x8]
	0x03B9BE58 STP X24, X23, [X31 + 0x10]
	0x03B9BE5C STP X22, X21, [X31 + 0x20]
	0x03B9BE60 STP X20, X19, [X31 + 0x30]
	0x03B9BE64 CBZ X0, 0x3B9BF28
	0x03B9BE68 MOV X19, X8
	0x03B9BE6C LDR W8, [X0 + 0x18]
	0x03B9BE70 MOV X20, X0
	0x03B9BE74 CMP W1, 0x1
	0x03B9BE78 B.LT 0x3B9BEE8
	0x03B9BE7C MOVN W9, 0x80800000
	0x03B9BE80 MOV W24, W31
	0x03B9BE84 MOV X22, X31
	0x03B9BE88 BIC W23, W1, W1, 0x1F
	0x03B9BE8C ADD X21, X20, 0x20
	0x03B9BE90 FMOV S8, W9
	0x03B9BE94 CMP X22, W8, UXTW
	0x03B9BE98 B.CS 0x3B9BF24
	0x03B9BE9C MOV X0, X21
	0x03B9BEA0 MOV X1, X31
	0x03B9BEA4 BL 0x3C8E684
	0x03B9BEA8 FCMP S0, S8
	0x03B9BEAC B.PL 0x3B9BED0
	0x03B9BEB0 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x848000
	007 Move X22, 0x559000
	008 Move W8, [X20+3081]
	009 Move X22, [X22+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5C2000
	016 Move X0, [X0+2024]
	017 Call 0x1C17CF4
	018 Move X0, 0x559000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3081], W8
	023 Move X20, X19
	024 Add X20, X20, 56
	025 Move X21, [X20]
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {45}
	039 Move X8, 0x5C2000
	040 Move X8, [X8+2024]
	041 Move X0, X19
	042 Move X1, X20
	043 Move X2, [X8]
	044 Call 0x21A5990, X0, X1
	045 Move X0, [X20]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return X0

Method: System.Boolean IsPokeInteractingWithUI(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor)

Disassembly:
	0x03B9C69C MOV X0, X23
	0x03B9C6A0 BL 0x3EB1AD0
	0x03B9C6A4 LDR X20, [X0]
	0x03B9C6A8 BL 0x3EB1AE0
	0x03B9C6AC MOV W21, W31
	0x03B9C6B0 B 0x3B9C500
	0x03B9C6B4 MOV X20, X31
	0x03B9C6B8 ADRP X8, 0x5C0000
	0x03B9C6BC LDR X8, [X8 + 0xA20]
	0x03B9C6C0 LDR X1, [X8]
	0x03B9C6C4 ADD X0, X31, 0x30
	0x03B9C6C8 BL 0x2BC3C60
	0x03B9C6CC CBZ X20, 0x3B9C71C
	0x03B9C6D0 MOV X0, X20
	0x03B9C6D4 BL 0x1C16F18
	0x03B9C6D8 MOV X21, X1
	0x03B9C6DC MOV X23, X0
	0x03B9C6E0 B 0x3B9C6B8
	0x03B9C6E4 MOV X21, X1
	0x03B9C6E8 MOV X23, X0
	0x03B9C6EC CMP W21, 0x1
	0x03B9C6F0 B.NE 0x3B9C708
	0x03B9C6F4 MOV X0, X23
	0x03B9C6F8 BL 0x3EB1AD0
	0x03B9C6FC LDR X20, [X0]
	0x03B9C700 BL 0x3EB1AE0
	0x03B9C704 B 0x3B9C474
	0x03B9C708 MOV X20, X31
	0x03B9C70C LDR X1, [X22]
	0x03B9C710 ADD X0, X31, 0x50
	0x03B9C714 BL 0x2C0A83C
	0x03B9C718 CBNZ X20, 0x3B9C75C
	0x03B9C71C CMP W21, 0x1
	0x03B9C720 B.NE 0x3B9C754
	0x03B9C724 MOV X0, X23
	0x03B9C728 BL 0x3EB1AD0
	0x03B9C72C LDR X19, [X0]
	0x03B9C730 BL 0x3EB1AE0
	0x03B9C734 ADRP X8, 0x5C0000
	0x03B9C738 LDR X8, [X8 + 0xA60]
	0x03B9C73C ADD X0, X31, 0x78
	0x03B9C740 LDR X1, [X8]
	0x03B9C744 BL 0x24A6D20
	0x03B9C748 CBZ X19, 0x3B9C590
	0x03B9C74C MOV X0, X19
	0x03B9C750 BL 0x1C16F18
	0x03B9C754 MOV X19, X31
	0x03B9C758 B 0x3B9C774
	0x03B9C75C MOV X0, X20
	0x03B9C760 BL 0x1C16F18
	0x03B9C764 MOV X21, X1
	0x03B9C768 MOV X23, X0
	0x03B9C76C B 0x3B9C70C
	0x03B9C770 MOV X23, X0
	0x03B9C774 ADRP X8, 0x5C0000
	0x03B9C778 LDR X8, [X8 + 0xA60]
	0x03B9C77C LDR X1, [X8]
	0x03B9C780 ADD X0, X31, 0x78
	0x03B9C784 BL 0x24A6D20
	0x03B9C788 CBNZ X19, 0x3B9C794
	0x03B9C78C MOV X0, X23
	0x03B9C790 BL 0x1D2C690
	0x03B9C794 MOV X0, X19
	0x03B9C798 BL 0x1C16F18
	0x03B9C79C BL 0x1990590
	0x03B9C7A0 STP X30, X21, [X31 - 0x20]!
	0x03B9C7A4 STP X20, X19, [X31 + 0x10]
	0x03B9C7A8 ADRP X21, 0x846000
	0x03B9C7AC ADRP X20, 0x5BF000
	0x03B9C7B0 LDRB W8, [X21 + 0xC11]
	0x03B9C7B4 LDR X20, [X20 + 0x1C8]
	0x03B9C7B8 MOV X19, X0
	0x03B9C7BC TBNZ X8, 0x0, 0x3B9C7EC
	0x03B9C7C0 ADRP X0, 0x5C0000
	0x03B9C7C4 LDR X0, [X0 + 0xA68]
	0x03B9C7C8 BL 0x1C16CF4
	0x03B9C7CC ADRP X0, 0x5C0000
	0x03B9C7D0 LDR X0, [X0 + 0xA70]
	0x03B9C7D4 BL 0x1C16CF4
	0x03B9C7D8 ADRP X0, 0x5BF000
	0x03B9C7DC LDR X0, [X0 + 0x1C8]
	0x03B9C7E0 BL 0x1C16CF4
	0x03B9C7E4 MOVZ W8, 0x1
	0x03B9C7E8 STRB W8, [X21 + 0xC11]
	0x03B9C7EC MOV X0, X19
	0x03B9C7F0 MOV X1, X31
	0x03B9C7F4 BL 0x3E5AD84
	0x03B9C7F8 LDR X0, [X20]
	0x03B9C7FC LDR W8, [X0 + 0xE0]
	0x03B9C800 CBNZ W8, 0x3B9C80C
	0x03B9C804 BL 0x1C16DFC
	0x03B9C808 LDR X0, [X20]
	0x03B9C80C LDR X8, [X0 + 0xB8]
	0x03B9C810 LDR X0, [X8 + 0x20]
	0x03B9C814 CBZ X0, 0x3B9C85C
	0x03B9C818 ADRP X8, 0x5C0000
	0x03B9C81C LDR X8, [X8 + 0xA70]
	0x03B9C820 MOV X1, X19
	0x03B9C824 LDR X2, [X8]
	0x03B9C828 BL 0x2AA64F8
	0x03B9C82C LDR X0, [X19 + 0x68]
	0x03B9C830 CBZ X0, 0x3B9C85C
	0x03B9C834 ADRP X8, 0x5C0000
	0x03B9C838 LDR X8, [X8 + 0xA68]
	0x03B9C83C LDR X1, [X8]
	0x03B9C840 BL 0x2AA5220
	0x03B9C844 LDR X0, [X19 + 0x70]
	0x03B9C848 CBZ X0, 0x3B9C85C
	0x03B9C84C LDP X20, X19, [X31 + 0x10]
	0x03B9C850 MOV X1, X31
	0x03B9C854 LDP X30, X21, [X31], #0x20
	0x03B9C858 B 0x3B31AF0
	0x03B9C85C BL 0x1C16F20
	0x03B9C860 STP X30, X21, [X31 - 0x20]!
	0x03B9C864 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x847000
	009 Move X20, 0x5C0000
	010 Move W8, [X21+3082]
	011 Move X20, [X20+456]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x5C1000
	018 Move X0, [X0+2384]
	019 Call 0x1C17CF4
	020 Move X0, 0x5C1000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move X0, 0x5C1000
	024 Move X0, [X0+2400]
	025 Call 0x1C17CF4
	026 Move X0, 0x5C1000
	027 Move X0, [X0+2408]
	028 Call 0x1C17CF4
	029 Move X0, 0x5C1000
	030 Move X0, [X0+2360]
	031 Call 0x1C17CF4
	032 Move X0, 0x5C0000
	033 Move X0, [X0+456]
	034 Call 0x1C17CF4
	035 Move X0, 0x5C1000
	036 Move X0, [X0+2416]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3082], W8
	040 Move X0, [X20]
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X20]
	049 Move X8, [X0+184]
	050 Move X0, [X8+32]
	051 Compare X0, 0
	052 JumpIfEqual {105}
	053 Move X8, 0x5C1000
	054 Move X8, [X8+2384]
	055 Move X1, [X8]
	056 Call Dictionary`2<Object, Object>.get_Values, X0
	057 Compare X0, 0
	058 JumpIfEqual {105}
	059 Move X8, 0x5C1000
	060 Move X8, [X8+2416]
	061 Move X22, 0x5C1000
	062 Move X23, 0x5C1000
	063 Move X21, 0x5C1000
	064 Move X1, [X8]
	065 Move X22, [X22+2400]
	066 Move X23, [X23+2360]
	067 Move X21, [X21+2392]
	068 Add X8, X31, 8
	069 Call ValueCollection<Object, Object>.GetEnumerator, X0
	070 Move X1, [X22]
	071 Add X0, X31, 8
	072 Call Enumerator<Object, Object>.MoveNext, X0
	073 Move W20, W0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {89}
	078 Move X0, [X31+24]
	079 Compare X0, 0
	080 JumpIfEqual {104}
	081 Move X2, [X23]
	082 Move X1, X19
	083 Call HashSet`1<Object>.Contains, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {70}
	088 Move W19, 4
	089 Move W19, 5
	090 Move X1, [X21]
	091 Add X0, X31, 8
	092 Call Enumerator<Object, Object>.Dispose, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 And W0, W20, W8
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X22, [X31+48]
	099 Move X21, [X31+56]
	100 Move X30, [X31+32]
	101 Move X23, [X31+40]
	102 Add X31, X31, 80
	103 Return X0
	104 Call 0x1C17F20
	105 Call 0x1C17F20
	106 Move X19, X0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X19
	109 Call 0x3EB2AD0
	110 Move X20, [X0]
	111 Call 0x3EB2AE0
	112 Move X1, [X21]
	113 Add X0, X31, 8
	114 Call Enumerator<Object, Object>.Dispose, X0
	115 Compare X20, 0
	116 JumpIfNotEqual {119}
	117 Move W19, W31
	118 Move X20, X31
	119 Move X0, X20
	120 Call 0x1C17F18
	121 Move X19, X0
	122 Move X1, [X21]
	123 Add X0, X31, 8
	124 Call Enumerator<Object, Object>.Dispose, X0
	125 Compare X20, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X19
	128 Call 0x1D2D690
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Call 0x1991590

Method: System.Void EndPokeInteraction(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor)

Disassembly:
	0x03B9C868 ADRP X20, 0x846000
	0x03B9C86C ADRP X21, 0x5BF000
	0x03B9C870 LDRB W8, [X20 + 0xC22]
	0x03B9C874 LDR X21, [X21 + 0x258]
	0x03B9C878 MOV X19, X0
	0x03B9C87C TBNZ X8, 0x0, 0x3B9C894
	0x03B9C880 ADRP X0, 0x5BF000
	0x03B9C884 LDR X0, [X0 + 0x258]
	0x03B9C888 BL 0x1C16CF4
	0x03B9C88C MOVZ W8, 0x1
	0x03B9C890 STRB W8, [X20 + 0xC22]
	0x03B9C894 LDR X0, [X21]
	0x03B9C898 LDR W8, [X0 + 0xE0]
	0x03B9C89C CBNZ W8, 0x3B9C8A4
	0x03B9C8A0 BL 0x1C16DFC
	0x03B9C8A4 LDR X8, [X19 + 0xC0]
	0x03B9C8A8 CBZ X8, 0x3B9C8C0
	0x03B9C8AC LDR X9, [X8 + 0x18]
	0x03B9C8B0 LDR X0, [X8 + 0x40]
	0x03B9C8B4 LDR X1, [X8 + 0x28]
	0x03B9C8B8 BLR X9
	0x03B9C8BC B 0x3B9C8C8
	0x03B9C8C0 LDP S0, S1, [X19 + 0xB0]
	0x03B9C8C4 LDR V2, [X19 + 0xB8]
	0x03B9C8C8 LDP X20, X19, [X31 + 0x10]
	0x03B9C8CC LDP X30, X21, [X31], #0x20
	0x03B9C8D0 RET
	0x03B9C8D4 SUB X31, X31, 0x140
	0x03B9C8D8 STP D15, D14, [X31 + 0xB0]
	0x03B9C8DC STP D13, D12, [X31 + 0xC0]
	0x03B9C8E0 STP D11, D10, [X31 + 0xD0]
	0x03B9C8E4 STP D9, D8, [X31 + 0xE0]
	0x03B9C8E8 STR X29, [X31 + 0xF0]
	0x03B9C8EC STP X30, X25, [X31 + 0x100]
	0x03B9C8F0 STP X24, X23, [X31 + 0x110]
	0x03B9C8F4 STP X22, X21, [X31 + 0x120]
	0x03B9C8F8 STP X20, X19, [X31 + 0x130]
	0x03B9C8FC MRS X25, 0xC000
	0x03B9C900 LDR X8, [X25 + 0x28]
	0x03B9C904 ADRP X23, 0x846000
	0x03B9C908 MOV X19, X3
	0x03B9C90C MOV X21, X2
	0x03B9C910 STR X8, [X31 + 0xA8]
	0x03B9C914 LDRB W8, [X23 + 0xC14]
	0x03B9C918 MOV X22, X1
	0x03B9C91C MOV V11.16B, V3.16B
	0x03B9C920 MOV V8.16B, V2.16B
	0x03B9C924 MOV V9.16B, V1.16B
	0x03B9C928 MOV V10.16B, V0.16B
	0x03B9C92C MOV X20, X0
	0x03B9C930 TBNZ X8, 0x0, 0x3B9C978
	0x03B9C934 ADRP X0, 0x5C0000
	0x03B9C938 LDR X0, [X0 + 0xA78]
	0x03B9C93C BL 0x1C16CF4
	0x03B9C940 ADRP X0, 0x5C0000
	0x03B9C944 LDR X0, [X0 + 0xA80]
	0x03B9C948 BL 0x1C16CF4
	0x03B9C94C ADRP X0, 0x5C0000
	0x03B9C950 LDR X0, [X0 + 0xA88]
	0x03B9C954 BL 0x1C16CF4
	0x03B9C958 ADRP X0, 0x5C0000
	0x03B9C95C LDR X0, [X0 + 0xA90]
	0x03B9C960 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x847000
	006 Move W8, [X21+3083]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x5C1000
	014 Move X0, [X0+2320]
	015 Call 0x1C17CF4
	016 Move X0, 0x5C1000
	017 Move X0, [X0+2336]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C1000
	020 Move X0, [X0+2424]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C0000
	023 Move X0, [X0+456]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3083], W8
	027 Compare X19, 0
	028 JumpIfEqual {74}
	029 Move X0, [X20+96]
	030 Compare X0, 0
	031 JumpIfEqual {79}
	032 Move X21, 0x5C0000
	033 Move X21, [X21+456]
	034 Move X1, X19
	035 Move X2, X31
	036 Call XRPokeLogic.OnHoverExited, X0, X1
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X0, [X8+24]
	045 Compare X0, 0
	046 JumpIfEqual {79}
	047 Move X8, 0x5C1000
	048 Move X8, [X8+2320]
	049 Move X1, X19
	050 Move X2, [X8]
	051 Call Dictionary`2<Object, Object>.Remove, X0, X1
	052 Move X8, [X21]
	053 Move X8, [X8+184]
	054 Move X0, [X8+32]
	055 Compare X0, 0
	056 JumpIfEqual {79}
	057 Move X8, 0x5C1000
	058 Move X8, [X8+2336]
	059 Move X1, X20
	060 Move X2, [X8]
	061 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	062 Compare X0, 0
	063 JumpIfEqual {79}
	064 Move X8, 0x5C1000
	065 Move X8, [X8+2424]
	066 Move X1, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X2, [X8]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call HashSet`1<Object>.Remove, X0, X1
	073 Return 
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return 
	079 Call 0x1C17F20

Method: System.Boolean TryGetPokeStateDataForInteractor(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor, out UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData data)

Disassembly:
	0x03B9C964 ADRP X0, 0x5BF000
	0x03B9C968 LDR X0, [X0 + 0x1C8]
	0x03B9C96C BL 0x1C16CF4
	0x03B9C970 MOVZ W8, 0x1
	0x03B9C974 STRB W8, [X23 + 0xC14]
	0x03B9C978 LDR X8, [X20 + 0x58]
	0x03B9C97C CBZ X8, 0x3B9CC70
	0x03B9C980 LDP W2, W9, [X8 + 0x18]
	0x03B9C984 ADRP X23, 0x5BF000
	0x03B9C988 LDR X23, [X23 + 0x1C8]
	0x03B9C98C ADD W9, W9, 0x1
	0x03B9C990 CMP W2, 0x1
	0x03B9C994 STP W31, W9, [X8 + 0x18]
	0x03B9C998 B.LT 0x3B9C9AC
	0x03B9C99C LDR X0, [X8 + 0x10]
	0x03B9C9A0 MOV W1, W31
	0x03B9C9A4 MOV X3, X31
	0x03B9C9A8 BL 0x339FA34
	0x03B9C9AC MOV X0, X20
	0x03B9C9B0 BL 0x3B9AE18
	0x03B9C9B4 LDR X8, [X23]
	0x03B9C9B8 LDR X23, [X20 + 0x58]
	0x03B9C9BC MOV X24, X0
	0x03B9C9C0 LDR W9, [X8 + 0xE0]
	0x03B9C9C4 CBNZ W9, 0x3B9C9D0
	0x03B9C9C8 MOV X0, X8
	0x03B9C9CC BL 0x1C16DFC
	0x03B9C9D0 AND X1, X22, 0x0
	0x03B9C9D4 MOV X0, X24
	0x03B9C9D8 MOV V0.16B, V10.16B
	0x03B9C9DC MOV V1.16B, V9.16B
	0x03B9C9E0 MOV V2.16B, V8.16B
	0x03B9C9E4 MOV V3.16B, V11.16B
	0x03B9C9E8 MOV X2, X21
	0x03B9C9EC MOV X3, X23
	0x03B9C9F0 BL 0x3B9CFD0
	0x03B9C9F4 LDR X0, [X20 + 0x58]
	0x03B9C9F8 CBZ X0, 0x3B9CC70
	0x03B9C9FC LDR W8, [X0 + 0x18]
	0x03B9CA00 CMP W8, 0x1
	0x03B9CA04 B.LT 0x3B9CABC
	0x03B9CA08 ADRP X8, 0x5C0000
	0x03B9CA0C LDR X8, [X8 + 0xA90]
	0x03B9CA10 MOV W1, W31
	0x03B9CA14 LDR X2, [X8]
	0x03B9CA18 ADD X8, X31, 0x28
	0x03B9CA1C BL 0x31523F8
	0x03B9CA20 ADRP X22, 0x83C000
	0x03B9CA24 LDR X21, [X31 + 0x28]
	0x03B9CA28 LDP S12, S14, [X31 + 0x30]
	0x03B9CA2C LDUR V0, [X31 + 0x3C]
	0x03B9CA30 LDR W8, [X31 + 0x4C]
	0x03B9CA34 LDRB W9, [X22 + 0x785]
	0x03B9CA38 LDR V13, [X31 + 0x38]
	0x03B9CA3C STR V0, [X31 + 0x7]
	0x03B9CA40 STR W8, [X31 + 0x80]
	0x03B9CA44 CBNZ W9, 0x3B9CA5C
	0x03B9CA48 ADRP X0, 0x557000
	0x03B9CA4C LDR X0, [X0 + 0x5A8]
	0x03B9CA50 BL 0x1C16CF4
	0x03B9CA54 MOVZ W8, 0x1
	0x03B9CA58 STRB W8, [X22 + 0x785]
	0x03B9CA5C ADRP X8, 0x557000
	0x03B9CA60 LDR X8, [X8 + 0x5A8]
	0x03B9CA64 FSUB S11, S12, S10
	0x03B9CA68 STR S14, [X31 + 0xC]
	0x03B9CA6C FSUB S15, S14, S9
	0x03B9CA70 LDR X0, [X8]
	0x03B9CA74 FSUB S14, S13, S8
	0x03B9CA78 LDR W8, [X0 + 0xE0]
	0x03B9CA7C CBNZ W8, 0x3B9CA84
	0x03B9CA80 BL 0x1C16DFC
	0x03B9CA84 FMUL S0, S11, S11
	0x03B9CA88 FMUL S1, S15, S15
	0x03B9CA8C ADRP X8, 0xFFFFFFFFFCF4E000
	0x03B9CA90 FADD S0, S0, S1
	0x03B9CA94 LDR V1, [X8 + 0x17C]
	0x03B9CA98 FMUL S2, S14, S14
	0x03B9CA9C FADD S0, S2, S0
	0x03B9CAA0 FSQRT S0, S0
	0x03B9CAA4 FCMP S0, S1
	0x03B9CAA8 B.LE 0x3B9CAC4
	0x03B9CAAC FDIV S11, S11, S0
	0x03B9CAB0 FDIV S15, S15, S0
	0x03B9CAB4 FDIV S14, S14, S0
	0x03B9CAB8 B 0x3B9CAFC
	0x03B9CABC MOV W0, W31
	0x03B9CAC0 B 0x3B9CC30
	0x03B9CAC4 ADRP X22, 0x83C000
	0x03B9CAC8 LDRB W8, [X22 + 0x783]
	0x03B9CACC CBNZ W8, 0x3B9CAE4
	0x03B9CAD0 ADRP X0, 0x557000
	0x03B9CAD4 LDR X0, [X0 + 0x5A0]
	0x03B9CAD8 BL 0x1C16CF4
	0x03B9CADC MOVZ W8, 0x1
	0x03B9CAE0 STRB W8, [X22 + 0x783]
	0x03B9CAE4 ADRP X8, 0x557000
	0x03B9CAE8 LDR X8, [X8 + 0x5A0]
	0x03B9CAEC LDR X8, [X8]
	0x03B9CAF0 LDR X8, [X8 + 0xB8]
	0x03B9CAF4 LDP S11, S15, [X8]
	0x03B9CAF8 LDR V14, [X8 + 0x8]
	0x03B9CAFC LDR X0, [X20 + 0x58]
	0x03B9CB00 CBZ X0, 0x3B9CC70
	0x03B9CB04 LDP W2, W8, [X0 + 0x18]
	0x03B9CB08 ADD W8, W8, 0x1
	0x03B9CB0C CMP W2, 0x0
	0x03B9CB10 STP W31, W8, [X0 + 0x18]
	0x03B9CB14 B.LE 0x3B9CB48
	0x03B9CB18 LDR X0, [X0 + 0x10]
	0x03B9CB1C MOV W1, W31
	0x03B9CB20 MOV X3, X31
	0x03B9CB24 BL 0x339FA34
	0x03B9CB28 LDR X0, [X20 + 0x58]
	0x03B9CB2C LDR V0, [X31 + 0x7]
	0x03B9CB30 LDR W8, [X31 + 0x80]
	0x03B9CB34 STR V0, [X31 + 0x5]
	0x03B9CB38 STR W8, [X31 + 0x60]
	0x03B9CB3C CBZ X0, 0x3B9CC70
	0x03B9CB40 ADD X8, X31, 0x50
	0x03B9CB44 B 0x3B9CB5C
	0x03B9CB48 LDR V0, [X31 + 0x7]
	0x03B9CB4C LDR W9, [X31 + 0x80]
	0x03B9CB50 ADD X8, X31, 0x50
	0x03B9CB54 STR V0, [X31 + 0x5]
	0x03B9CB58 STR W9, [X31 + 0x60]
	0x03B9CB5C LDR W9, [X8 + 0x10]
	0x03B9CB60 LDR V0, [X8]
	0x03B9CB64 ADRP X10, 0x5C0000
	0x03B9CB68 LDR X10, [X10 + 0xA78]
	0x03B9CB6C STR W9, [X31 + 0xA0]
	0x03B9CB70 STR V0, [X31 + 0x9]
	0x03B9CB74 LDR W11, [X0 + 0x1C]
	0x03B9CB78 LDR X8, [X0 + 0x10]
	0x03B9CB7C LDR X9, [X10]
	0x03B9CB80 ADD W10, W11, 0x1
	0x03B9CB84 STR W10, [X0 + 0x1C]
	0x03B9CB88 CBZ X8, 0x3B9CC70
	0x03B9CB8C LDRSW X10, [X0 + 0x18]
	0x03B9CB90 LDR W11, [X8 + 0x18]
	0x03B9CB94 CMP W10, W11
	0x03B9CB98 B.CS 0x3B9CBD0
	0x03B9CB9C LDR V0, [X31 + 0xC]
	0x03B9CBA0 MOVZ W11, 0x28
	0x03B9CBA4 ADD W9, W10, 0x1
	0x03B9CBA8 MADD X8, X10, X11, X8
	0x03B9CBAC STR W9, [X0 + 0x18]
	0x03B9CBB0 STR X21, [X8 + 0x20]
	0x03B9CBB4 STP S12, S0, [X8 + 0x28]
	0x03B9CBB8 STR S13, [X8 + 0x30]
	0x03B9CBBC LDR W9, [X31 + 0xA0]
	0x03B9CBC0 LDR V0, [X31 + 0x9]
	0x03B9CBC4 STR W9, [X8 + 0x44]
	0x03B9CBC8 STUR V0, [X8 + 0x34]
	0x03B9CBCC B 0x3B9CC04
	0x03B9CBD0 LDR X8, [X9 + 0x20]
	0x03B9CBD4 LDR V0, [X31 + 0x9]
	0x03B9CBD8 LDR W9, [X31 + 0xA0]
	0x03B9CBDC LDR V1, [X31 + 0xC]
	0x03B9CBE0 LDR X8, [X8 + 0xC0]
	0x03B9CBE4 ADD X1, X31, 0x28
	0x03B9CBE8 LDR X2, [X8 + 0x70]
	0x03B9CBEC STR X21, [X31 + 0x28]
	0x03B9CBF0 STP S12, S1, [X31 + 0x30]
	0x03B9CBF4 STR S13, [X31 + 0x38]
	0x03B9CBF8 STUR V0, [X31 + 0x3C]
	0x03B9CBFC STR W9, [X31 + 0x4C]
	0x03B9CC00 BL 0x3152798
	0x03B9CC04 LDR X3, [X20 + 0x58]
	0x03B9CC08 MOVZ W8, 0x7F800000
	0x03B9CC0C ADD X1, X31, 0x10
	0x03B9CC10 FMOV S0, W8
	0x03B9CC14 MOV X0, X20
	0x03B9CC18 MOV W2, W31
	0x03B9CC1C MOV X4, X19
	0x03B9CC20 STP S10, S9, [X31 + 0x10]
	0x03B9CC24 STP S8, S11, [X31 + 0x18]
	0x03B9CC28 STP S15, S14, [X31 + 0x20]
	0x03B9CC2C BL 0x3B9D430

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+192], X24
	004 Move [X31+200], X23
	005 Move [X31+208], X22
	006 Move [X31+216], X21
	007 Move [X31+224], X20
	008 Move [X31+232], X19
	009 Move X23, 0x847000
	010 Move X21, 0x5C0000
	011 Move W8, [X23+3084]
	012 Move X21, [X21+456]
	013 Move X19, X1
	014 Move X20, X0
	015 Add X22, X31, 128
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x5C1000
	021 Move X0, [X0+2432]
	022 Call 0x1C17CF4
	023 Move X0, 0x5C1000
	024 Move X0, [X0+2440]
	025 Call 0x1C17CF4
	026 Move X0, 0x5C1000
	027 Move X0, [X0+2448]
	028 Call 0x1C17CF4
	029 Move X0, 0x5C1000
	030 Move X0, [X0+2456]
	031 Call 0x1C17CF4
	032 Move X0, 0x5C1000
	033 Move X0, [X0+2360]
	034 Call 0x1C17CF4
	035 Move X0, 0x5C0000
	036 Move X0, [X0+520]
	037 Call 0x1C17CF4
	038 Move X0, 0x5C1000
	039 Move X0, [X0+2464]
	040 Call 0x1C17CF4
	041 Move X0, 0x5C1000
	042 Move X0, [X0+2472]
	043 Call 0x1C17CF4
	044 Move X0, 0x5C0000
	045 Move X0, [X0+456]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X23+3084], W8
	049 Move X0, [X21]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+160], X31
	052 Move [X22+1], V0
	053 Move [X31+8], V0
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X21]
	059 Move X8, [X0+184]
	060 Move X0, [X8+32]
	061 Compare X0, 0
	062 JumpIfEqual {166}
	063 Move X8, 0x5C1000
	064 Move X8, [X8+2432]
	065 Move X23, 0x5C1000
	066 Move X24, 0x5C1000
	067 Move X21, 0x5C1000
	068 Move X1, [X8]
	069 Move X23, [X23+2448]
	070 Move X24, [X24+2360]
	071 Move X21, [X21+2440]
	072 Add X8, X31, 64
	073 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	074 Move V0, [X31+64]
	075 Move V1, [X31+80]
	076 Move X8, [X31+96]
	077 Move [X31+8], V0
	078 Move [X22+1], V1
	079 Move [X31+160], X8
	080 Move X1, [X23]
	081 Add X0, X31, 128
	082 Call Enumerator<Object, Object>.MoveNext, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {122}
	087 Move X0, [X31+152]
	088 Compare X0, 0
	089 JumpIfEqual {165}
	090 Move X22, [X31+144]
	091 Move X2, [X24]
	092 Move X1, X20
	093 Call HashSet`1<Object>.Contains, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {80}
	098 Compare X22, 0
	099 JumpIfEqual {168}
	100 Move X8, [X22+96]
	101 Compare X8, 0
	102 JumpIfEqual {167}
	103 Move X20, [X8+24]
	104 Compare X20, 0
	105 JumpIfEqual {167}
	106 Move X10, 0x5C0000
	107 Move X8, [X20]
	108 Move X10, [X10+520]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X10]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move W2, 3
	120 Move X0, X20
	121 Call 0x1C5D788
	122 Move X1, [X21]
	123 Add X0, X31, 128
	124 Call Enumerator<Object, Object>.Dispose, X0
	125 NotImplemented "Instruction MOVI not yet implemented."
	126 Move W0, W31
	127 Move [X19+48], X31
	128 Move [X19+16], V0
	129 Move [X19+24], V0
	130 Move [X19], V0
	131 Move W9, [X10]
	132 Add W9, W9, 3
	133 Add X8, X8, W9
	134 Add X0, X8, 312
	135 Move X9, [X0]
	136 Move X1, [X0+8]
	137 Add X8, X31, 8
	138 Move X0, X20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move X8, [X31+56]
	144 Add X0, X31, 128
	145 Move [X31+64], V0
	146 Move [X31+72], V1
	147 Move [X31+6], V2
	148 Move [X31+112], X8
	149 Move [X19+48], X8
	150 Move [X19+16], V1
	151 Move [X19+24], V2
	152 Move [X19], V0
	153 Move X1, [X21]
	154 Call Enumerator<Object, Object>.Dispose, X0
	155 Move W0, 1
	156 Move X20, [X31+224]
	157 Move X19, [X31+232]
	158 Move X22, [X31+208]
	159 Move X21, [X31+216]
	160 Move X24, [X31+192]
	161 Move X23, [X31+200]
	162 Move X30, [X31+176]
	163 Add X31, X31, 240
	164 Return X0
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Move X20, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, X20
	172 Call 0x3EB2AD0
	173 Move X21, [X0]
	174 Call 0x3EB2AE0
	175 Move X8, 0x5C1000
	176 Move X8, [X8+2440]
	177 Add X0, X31, 128
	178 Move X1, [X8]
	179 Call Enumerator<Object, Object>.Dispose, X0
	180 Compare X21, 0
	181 JumpIfEqual {125}
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Move X21, X31
	185 Move X20, X0
	186 Move X8, 0x5C1000
	187 Move X8, [X8+2440]
	188 Move X1, [X8]
	189 Add X0, X31, 128
	190 Call Enumerator<Object, Object>.Dispose, X0
	191 Compare X21, 0
	192 JumpIfNotEqual {195}
	193 Move X0, X20
	194 Call 0x1D2D690
	195 Move X0, X21
	196 Call 0x1C17F18
	197 Call 0x1991590

Method: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData> get_pokeStateData()

Disassembly:
	0x03B9CC30 LDR X8, [X25 + 0x28]
	0x03B9CC34 LDR X9, [X31 + 0xA8]
	0x03B9CC38 CMP X8, X9
	0x03B9CC3C B.NE 0x3B9CC74
	0x03B9CC40 LDP X20, X19, [X31 + 0x130]
	0x03B9CC44 LDP X22, X21, [X31 + 0x120]

ISIL:
	001 Move X8, [X0+96]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+24]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Collections.Generic.Dictionary`2<UnityEngine.Transform, Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData>> get_pokeStateDataDictionary()

Disassembly:
	0x03B9CC48 LDP X24, X23, [X31 + 0x110]
	0x03B9CC4C LDP X30, X25, [X31 + 0x100]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData> GetPokeStateDataForTarget(UnityEngine.Transform target)

Disassembly:
	0x03B9CC50 LDR X29, [X31 + 0xF0]
	0x03B9CC54 LDP D9, D8, [X31 + 0xE0]
	0x03B9CC58 LDP D11, D10, [X31 + 0xD0]
	0x03B9CC5C LDP D13, D12, [X31 + 0xC0]
	0x03B9CC60 LDP D15, D14, [X31 + 0xB0]
	0x03B9CC64 AND W0, W0, 0x1
	0x03B9CC68 ADD X31, X31, 0x140
	0x03B9CC6C RET
	0x03B9CC70 BL 0x1C16F20
	0x03B9CC74 BL 0x3EB1B20
	0x03B9CC78 SUB X31, X31, 0x110
	0x03B9CC7C STP D15, D14, [X31 + 0x80]
	0x03B9CC80 STP D13, D12, [X31 + 0x90]
	0x03B9CC84 STP D11, D10, [X31 + 0xA0]
	0x03B9CC88 STP D9, D8, [X31 + 0xB0]
	0x03B9CC8C STP X29, X30, [X31 + 0xC0]
	0x03B9CC90 STP X26, X25, [X31 + 0xD0]
	0x03B9CC94 STP X24, X23, [X31 + 0xE0]
	0x03B9CC98 STP X22, X21, [X31 + 0xF0]
	0x03B9CC9C STP X20, X19, [X31 + 0x100]
	0x03B9CCA0 ADRP X23, 0x846000
	0x03B9CCA4 LDRB W8, [X23 + 0xC15]
	0x03B9CCA8 MOV X19, X3
	0x03B9CCAC MOV X21, X2
	0x03B9CCB0 MOV X22, X1
	0x03B9CCB4 MOV V11.16B, V5.16B
	0x03B9CCB8 MOV V12.16B, V4.16B
	0x03B9CCBC MOV V13.16B, V3.16B
	0x03B9CCC0 MOV V8.16B, V2.16B
	0x03B9CCC4 MOV V9.16B, V1.16B
	0x03B9CCC8 MOV V10.16B, V0.16B
	0x03B9CCCC MOV X20, X0
	0x03B9CCD0 TBNZ X8, 0x0, 0x3B9CCF4
	0x03B9CCD4 ADRP X0, 0x5C0000
	0x03B9CCD8 LDR X0, [X0 + 0xA80]
	0x03B9CCDC BL 0x1C16CF4
	0x03B9CCE0 ADRP X0, 0x5BF000
	0x03B9CCE4 LDR X0, [X0 + 0x1C8]
	0x03B9CCE8 BL 0x1C16CF4
	0x03B9CCEC MOVZ W8, 0x1
	0x03B9CCF0 STRB W8, [X23 + 0xC15]
	0x03B9CCF4 ADRP X23, 0x83C000
	0x03B9CCF8 LDRB W8, [X23 + 0x85C]
	0x03B9CCFC MOVI V0.2D, 0x0
	0x03B9CD00 STUR V0, [X31 + 0x6C]
	0x03B9CD04 STP V0, V0, [X31 + 0x50]
	0x03B9CD08 CBNZ W8, 0x3B9CD20
	0x03B9CD0C ADRP X0, 0x557000
	0x03B9CD10 LDR X0, [X0 + 0x5A8]
	0x03B9CD14 BL 0x1C16CF4
	0x03B9CD18 MOVZ W8, 0x1
	0x03B9CD1C STRB W8, [X23 + 0x85C]
	0x03B9CD20 ADRP X23, 0x557000
	0x03B9CD24 LDR X23, [X23 + 0x5A8]
	0x03B9CD28 FSUB S15, S13, S10
	0x03B9CD2C FSUB S12, S12, S9
	0x03B9CD30 FSUB S13, S11, S8
	0x03B9CD34 LDR X0, [X23]
	0x03B9CD38 LDR W8, [X0 + 0xE0]
	0x03B9CD3C CBNZ W8, 0x3B9CD44
	0x03B9CD40 BL 0x1C16DFC
	0x03B9CD44 ADRP X24, 0x83C000
	0x03B9CD48 LDRB W8, [X24 + 0x785]
	0x03B9CD4C FMUL S0, S15, S15
	0x03B9CD50 FMUL S1, S12, S12
	0x03B9CD54 FADD S0, S0, S1
	0x03B9CD58 FMUL S1, S13, S13
	0x03B9CD5C FADD S11, S1, S0
	0x03B9CD60 CBNZ W8, 0x3B9CD78
	0x03B9CD64 ADRP X0, 0x557000
	0x03B9CD68 LDR X0, [X0 + 0x5A8]
	0x03B9CD6C BL 0x1C16CF4
	0x03B9CD70 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x847000
	008 Move W8, [X21+3085]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x5C0000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C0000
	019 Move X0, [X0+616]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C1000
	022 Move X0, [X0+2480]
	023 Call 0x1C17CF4
	024 Move X0, 0x5C1000
	025 Move X0, [X0+2488]
	026 Call 0x1C17CF4
	027 Move X0, 0x5C1000
	028 Move X0, [X0+2496]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3085], W8
	032 Move X0, [X20+104]
	033 Compare X0, 0
	034 JumpIfEqual {87}
	035 Move X8, 0x5C1000
	036 Move X8, [X8+2480]
	037 Move X1, X19
	038 Move X2, [X8]
	039 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {72}
	044 Move X8, 0x5C0000
	045 Move X21, [X20+104]
	046 Move X8, [X8+616]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X8, 0x5C0000
	050 Move X8, [X8+624]
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Add X1, X31, 0
	053 Move W2, 1
	054 Move X5, [X8]
	055 Move X3, X31
	056 Move W4, W31
	057 Move X22, X0
	058 Move [X31+48], X31
	059 Move [X31+16], V0
	060 Move [X31+24], V0
	061 Move [X31], V0
	062 Call BindableVariable`1<PokeStateData>..ctor, X0, X1, X2, X3, X4
	063 Compare X21, 0
	064 JumpIfEqual {87}
	065 Move X8, 0x5C1000
	066 Move X8, [X8+2496]
	067 Move X0, X21
	068 Move X1, X19
	069 Move X2, X22
	070 Move X3, [X8]
	071 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	072 Move X0, [X20+104]
	073 Compare X0, 0
	074 JumpIfEqual {87}
	075 Move X8, 0x5C1000
	076 Move X8, [X8+2488]
	077 Move X1, X19
	078 Move X2, [X8]
	079 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	080 Move X20, [X31+96]
	081 Move X19, [X31+104]
	082 Move X22, [X31+80]
	083 Move X21, [X31+88]
	084 Move X30, [X31+64]
	085 Add X31, X31, 112
	086 Return X0
	087 Call 0x1C17F20

Method: System.Boolean HasPokeSelect(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor interactor)

Disassembly:
	0x03B9CD74 STRB W8, [X24 + 0x785]
	0x03B9CD78 LDR X0, [X23]
	0x03B9CD7C FSQRT S14, S11
	0x03B9CD80 LDR W8, [X0 + 0xE0]
	0x03B9CD84 CBNZ W8, 0x3B9CD8C
	0x03B9CD88 BL 0x1C16DFC
	0x03B9CD8C ADRP X8, 0xFFFFFFFFFCF4E000
	0x03B9CD90 LDR V0, [X8 + 0x17C]
	0x03B9CD94 FCMP S14, S0
	0x03B9CD98 B.LE 0x3B9CDAC
	0x03B9CD9C FDIV S11, S15, S14
	0x03B9CDA0 FDIV S12, S12, S14
	0x03B9CDA4 FDIV S13, S13, S14
	0x03B9CDA8 B 0x3B9CDE4
	0x03B9CDAC ADRP X23, 0x83C000
	0x03B9CDB0 LDRB W8, [X23 + 0x783]
	0x03B9CDB4 CBNZ W8, 0x3B9CDCC
	0x03B9CDB8 ADRP X0, 0x557000
	0x03B9CDBC LDR X0, [X0 + 0x5A0]
	0x03B9CDC0 BL 0x1C16CF4
	0x03B9CDC4 MOVZ W8, 0x1
	0x03B9CDC8 STRB W8, [X23 + 0x783]
	0x03B9CDCC ADRP X8, 0x557000
	0x03B9CDD0 LDR X8, [X8 + 0x5A0]
	0x03B9CDD4 LDR X8, [X8]
	0x03B9CDD8 LDR X8, [X8 + 0xB8]
	0x03B9CDDC LDP S11, S12, [X8]
	0x03B9CDE0 LDR V13, [X8 + 0x8]
	0x03B9CDE4 ADRP X26, 0x5BF000
	0x03B9CDE8 LDRB W8, [X20 + 0x2A]
	0x03B9CDEC LDR X26, [X26 + 0x1C8]
	0x03B9CDF0 CBZ W8, 0x3B9CE84
	0x03B9CDF4 LDR W0, [X20 + 0x2C]
	0x03B9CDF8 LDR X23, [X20 + 0x48]
	0x03B9CDFC MOV X1, X31
	0x03B9CE00 ADD X24, X20, 0x78
	0x03B9CE04 BL 0x3C35CB8
	0x03B9CE08 LDR W3, [X20 + 0x30]
	0x03B9CE0C MOV W2, W0
	0x03B9CE10 MOV X0, X24
	0x03B9CE14 MOV V0.16B, V10.16B
	0x03B9CE18 MOV V1.16B, V9.16B
	0x03B9CE1C MOV V2.16B, V8.16B
	0x03B9CE20 MOV V3.16B, V11.16B
	0x03B9CE24 MOV V4.16B, V12.16B
	0x03B9CE28 MOV V5.16B, V13.16B
	0x03B9CE2C MOV X1, X23
	0x03B9CE30 MOV V6.16B, V14.16B
	0x03B9CE34 MOV X4, X31
	0x03B9CE38 BL 0x3C8C4DC
	0x03B9CE3C CMP W0, 0x1
	0x03B9CE40 B.LT 0x3B9CE84
	0x03B9CE44 MOV W23, W0
	0x03B9CE48 LDR X0, [X26]
	0x03B9CE4C LDR X24, [X20 + 0x48]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x847000
	007 Move X20, 0x5C0000
	008 Move W8, [X21+3086]
	009 Move X20, [X20+456]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5C1000
	016 Move X0, [X0+2328]
	017 Call 0x1C17CF4
	018 Move X0, 0x558000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C0000
	022 Move X0, [X0+456]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3086], W8
	026 Move X0, [X20]
	027 Move [X31+8], X31
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X0, [X8+24]
	035 Compare X0, 0
	036 JumpIfEqual {67}
	037 Move X8, 0x5C1000
	038 Move X8, [X8+2328]
	039 Add X2, X31, 8
	040 Move X1, X19
	041 Move X3, [X8]
	042 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {59}
	047 Move X8, 0x558000
	048 Move X8, [X8+1432]
	049 Move X19, [X31+8]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Inequality, X0, X1
	059 Move W0, W31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 And W0, W0, 1
	065 Add X31, X31, 48
	066 Return X0
	067 Call 0x1C17F20

Method: UnityEngine.RaycastHit FindClosestHit(UnityEngine.RaycastHit[] hits, System.Int32 count)

Disassembly:
	0x03B9CE50 LDR W8, [X0 + 0xE0]
	0x03B9CE54 CBNZ W8, 0x3B9CE5C
	0x03B9CE58 BL 0x1C16DFC
	0x03B9CE5C ADD X8, X31, 0x50
	0x03B9CE60 MOV X0, X24
	0x03B9CE64 MOV W1, W23
	0x03B9CE68 BL 0x3B9BE50
	0x03B9CE6C ADD X0, X31, 0x50
	0x03B9CE70 MOV X1, X31
	0x03B9CE74 BL 0x3C8E684
	0x03B9CE78 MOV V14.16B, V0.16B
	0x03B9CE7C MOVZ W23, 0x1
	0x03B9CE80 B 0x3B9CE88
	0x03B9CE84 MOV W23, W31
	0x03B9CE88 LDRB W8, [X20 + 0x29]
	0x03B9CE8C CBZ W8, 0x3B9CEF8
	0x03B9CE90 LDR W0, [X20 + 0x2C]
	0x03B9CE94 LDR X24, [X20 + 0x50]
	0x03B9CE98 MOV X1, X31
	0x03B9CE9C ADD X25, X20, 0x7C
	0x03B9CEA0 BL 0x3C35CB8
	0x03B9CEA4 MOV W3, W0
	0x03B9CEA8 ADD X1, X31, 0x38
	0x03B9CEAC MOV X0, X25
	0x03B9CEB0 MOV V0.16B, V14.16B
	0x03B9CEB4 MOV X2, X24
	0x03B9CEB8 MOV X4, X31
	0x03B9CEBC STP S10, S9, [X31 + 0x38]
	0x03B9CEC0 STP S8, S11, [X31 + 0x40]
	0x03B9CEC4 STP S12, S13, [X31 + 0x48]
	0x03B9CEC8 BL 0x3C881D0
	0x03B9CECC CMP W0, 0x1
	0x03B9CED0 B.LT 0x3B9CEF8
	0x03B9CED4 LDR X8, [X20 + 0x50]
	0x03B9CED8 CBZ X8, 0x3B9CFC8
	0x03B9CEDC LDR W9, [X8 + 0x18]
	0x03B9CEE0 CBZ W9, 0x3B9CFCC
	0x03B9CEE4 ADD X0, X8, 0x20
	0x03B9CEE8 MOV X1, X31
	0x03B9CEEC BL 0x3C896B0
	0x03B9CEF0 MOV V14.16B, V0.16B
	0x03B9CEF4 MOVZ W23, 0x1
	0x03B9CEF8 LDR X8, [X20 + 0x58]
	0x03B9CEFC CBZ X8, 0x3B9CFC8
	0x03B9CF00 LDP W2, W9, [X8 + 0x18]
	0x03B9CF04 ADD W9, W9, 0x1
	0x03B9CF08 CMP W2, 0x1
	0x03B9CF0C STP W31, W9, [X8 + 0x18]
	0x03B9CF10 B.LT 0x3B9CF24
	0x03B9CF14 LDR X0, [X8 + 0x10]
	0x03B9CF18 MOV W1, W31
	0x03B9CF1C MOV X3, X31
	0x03B9CF20 BL 0x339FA34
	0x03B9CF24 MOV X0, X20
	0x03B9CF28 BL 0x3B9AE18

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X0, 0
	010 JumpIfEqual {59}
	011 Move X19, X8
	012 Move W8, [X0+24]
	013 Move X20, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move TEMP, 0x80800000
	016 Not TEMP
	017 Move W9, TEMP
	018 Move W24, W31
	019 Move X22, X31
	020 NotImplemented "Instruction BIC not yet implemented."
	021 Add X21, X20, 32
	022 Move S8, W9
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X21
	025 Move X1, X31
	026 Call RaycastHit.get_distance, X0
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move W8, [X20+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X21
	031 Move X1, X31
	032 Call RaycastHit.get_distance, X0
	033 Move V8, V0
	034 Move W24, W22
	035 Move W8, [X20+24]
	036 Add X22, X22, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X21, X21, 44
	039 Move W24, W31
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, 44
	042 NotImplemented "Instruction SMADDL not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move V2, [X8+32]
	045 Move V1, [X8+48]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move [X19+28], V0
	051 Move [X19], V2
	052 Move [X19+8], V1
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X30, [X31+8]
	056 Move V8, [X31+64]
	057 Return X0
	058 Call 0x1C17F28
	059 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x03B9CF2C LDR X8, [X26]
	0x03B9CF30 LDR X24, [X20 + 0x58]
	0x03B9CF34 MOV X25, X0
	0x03B9CF38 LDR W9, [X8 + 0xE0]
	0x03B9CF3C CBNZ W9, 0x3B9CF48
	0x03B9CF40 MOV X0, X8
	0x03B9CF44 BL 0x1C16DFC
	0x03B9CF48 AND X2, X22, 0x0
	0x03B9CF4C ADD X1, X31, 0x20
	0x03B9CF50 MOV X0, X25
	0x03B9CF54 MOV V0.16B, V14.16B
	0x03B9CF58 MOV X3, X21
	0x03B9CF5C MOV X4, X24
	0x03B9CF60 STP S10, S9, [X31 + 0x20]
	0x03B9CF64 STP S8, S11, [X31 + 0x28]
	0x03B9CF68 STP S12, S13, [X31 + 0x30]
	0x03B9CF6C BL 0x3B9D8CC
	0x03B9CF70 LDR X3, [X20 + 0x58]
	0x03B9CF74 ADD X1, X31, 0x8
	0x03B9CF78 MOV X0, X20
	0x03B9CF7C MOV V0.16B, V14.16B
	0x03B9CF80 MOV W2, W23
	0x03B9CF84 MOV X4, X19
	0x03B9CF88 STP S10, S9, [X31 + 0x8]
	0x03B9CF8C STP S8, S11, [X31 + 0x10]
	0x03B9CF90 STP S12, S13, [X31 + 0x18]
	0x03B9CF94 BL 0x3B9D430
	0x03B9CF98 LDP X20, X19, [X31 + 0x100]
	0x03B9CF9C LDP X22, X21, [X31 + 0xF0]
	0x03B9CFA0 LDP X24, X23, [X31 + 0xE0]
	0x03B9CFA4 LDP X26, X25, [X31 + 0xD0]
	0x03B9CFA8 LDP X29, X30, [X31 + 0xC0]
	0x03B9CFAC LDP D9, D8, [X31 + 0xB0]
	0x03B9CFB0 LDP D11, D10, [X31 + 0xA0]
	0x03B9CFB4 LDP D13, D12, [X31 + 0x90]
	0x03B9CFB8 LDP D15, D14, [X31 + 0x80]
	0x03B9CFBC AND W0, W0, 0x1
	0x03B9CFC0 ADD X31, X31, 0x110
	0x03B9CFC4 RET
	0x03B9CFC8 BL 0x1C16F20
	0x03B9CFCC BL 0x1C16F28
	0x03B9CFD0 SUB X31, X31, 0xF0
	0x03B9CFD4 STP D15, D14, [X31 + 0x50]
	0x03B9CFD8 STP D13, D12, [X31 + 0x60]
	0x03B9CFDC STP D11, D10, [X31 + 0x70]
	0x03B9CFE0 STP D9, D8, [X31 + 0x80]
	0x03B9CFE4 STP X29, X30, [X31 + 0x90]
	0x03B9CFE8 STP X28, X27, [X31 + 0xA0]
	0x03B9CFEC STP X26, X25, [X31 + 0xB0]
	0x03B9CFF0 STP X24, X23, [X31 + 0xC0]
	0x03B9CFF4 STP X22, X21, [X31 + 0xD0]
	0x03B9CFF8 STP X20, X19, [X31 + 0xE0]
	0x03B9CFFC STP S2, S3, [X31 + 0xC]
	0x03B9D000 ADRP X24, 0x845000
	0x03B9D004 ADRP X22, 0x5AC000
	0x03B9D008 LDRB W8, [X24 + 0xC17]
	0x03B9D00C B 0x3EB173C
	0x03B9D010 MOV X19, X3
	0x03B9D014 MOV X20, X2
	0x03B9D018 MOV X23, X1
	0x03B9D01C MOV V10.16B, V1.16B
	0x03B9D020 MOV V11.16B, V0.16B
	0x03B9D024 MOV X21, X0
	0x03B9D028 TBNZ X8, 0x0, 0x3B9D0A0
	0x03B9D02C ADRP X0, 0x5AC000
	0x03B9D030 LDR X0, [X0 + 0x580]
	0x03B9D034 BL 0x1C16CF4
	0x03B9D038 ADRP X0, 0x5AC000
	0x03B9D03C LDR X0, [X0 + 0x590]
	0x03B9D040 BL 0x1C16CF4
	0x03B9D044 ADRP X0, 0x5AC000
	0x03B9D048 LDR X0, [X0 + 0x598]
	0x03B9D04C BL 0x1C16CF4
	0x03B9D050 ADRP X0, 0x5BF000
	0x03B9D054 LDR X0, [X0 + 0xA98]
	0x03B9D058 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x847000
	007 Move W8, [X20+3087]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x5C1000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0x5C1000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C1000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C0000
	023 Move X0, [X0+456]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3087], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call UIBehaviour.Awake, X0
	030 Move X0, X19
	031 Move X1, X31
	032 Call Component.get_gameObject, X0
	033 Compare X0, 0
	034 JumpIfEqual {86}
	035 Move X1, X31
	036 Call GameObject.get_scene, X0
	037 And X0, X0, 0
	038 Move X1, X31
	039 Call PhysicsSceneExtensions.GetPhysicsScene, X0
	040 Move [X19+120], W0
	041 Move X0, X19
	042 Move X1, X31
	043 Call Component.get_gameObject, X0
	044 Compare X0, 0
	045 JumpIfEqual {86}
	046 Move X20, 0x5C0000
	047 Move X22, 0x5C1000
	048 Move X21, 0x5C1000
	049 Move X20, [X20+456]
	050 Move X22, [X22+2520]
	051 Move X21, [X21+2512]
	052 Move X1, X31
	053 Call GameObject.get_scene, X0
	054 And X0, X0, 0
	055 Move X1, X31
	056 Call PhysicsSceneExtensions2D.GetPhysicsScene2D, X0
	057 Move [X19+124], W0
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move X0, [X22]
	066 Move X20, [X8+32]
	067 Call 0x1C17F10
	068 Move X1, [X21]
	069 Move X21, X0
	070 Call HashSet`1<Object>..ctor, X0
	071 Compare X20, 0
	072 JumpIfEqual {86}
	073 Move X8, 0x5C0000
	074 Move X8, [X8+2504]
	075 Move X0, X20
	076 Move X1, X19
	077 Move X2, X21
	078 Move X3, [X8]
	079 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03B9D240 MOV X25, X0
	0x03B9D244 LDR W9, [X8 + 0xE0]
	0x03B9D248 CBNZ W9, 0x3B9D254
	0x03B9D24C MOV X0, X8
	0x03B9D250 BL 0x1C16DFC
	0x03B9D254 LDR V6, [X31 + 0xC]
	0x03B9D258 ADD X1, X31, 0x18
	0x03B9D25C ADD X2, X31, 0x14
	0x03B9D260 MOV X0, X25
	0x03B9D264 MOV V0.16B, V8.16B
	0x03B9D268 MOV V1.16B, V12.16B
	0x03B9D26C MOV V2.16B, V13.16B
	0x03B9D270 MOV V3.16B, V14.16B
	0x03B9D274 MOV V4.16B, V11.16B
	0x03B9D278 MOV V5.16B, V10.16B
	0x03B9D27C BL 0x3B9DDE8
	0x03B9D280 LDP S0, S9, [X31 + 0x10]
	0x03B9D284 FCMP S9, S0
	0x03B9D288 B.HI 0x3B9D380
	0x03B9D28C TBZ X0, 0x0, 0x3B9D380
	0x03B9D290 CBZ X20, 0x3B9D42C
	0x03B9D294 LDP S14, S13, [X31 + 0x18]
	0x03B9D298 LDR V12, [X31 + 0x20]
	0x03B9D29C MOV X0, X20
	0x03B9D2A0 MOV X1, X31
	0x03B9D2A4 MOV V0.16B, V14.16B
	0x03B9D2A8 MOV V1.16B, V13.16B
	0x03B9D2AC MOV V2.16B, V12.16B
	0x03B9D2B0 BL 0x3C045DC
	0x03B9D2B4 LDR X8, [X24]
	0x03B9D2B8 MOV X0, X24
	0x03B9D2BC MOV X1, X20
	0x03B9D2C0 MOV V15.16B, V0.16B
	0x03B9D2C4 LDR X9, [X8 + 0x418]
	0x03B9D2C8 LDR X2, [X8 + 0x420]
	0x03B9D2CC MOV V8.16B, V1.16B
	0x03B9D2D0 BLR X9
	0x03B9D2D4 TBZ X0, 0x0, 0x3B9D380
	0x03B9D2D8 LDR X0, [X26]
	0x03B9D2DC LDR W8, [X0 + 0xE0]
	0x03B9D2E0 CBNZ W8, 0x3B9D2EC
	0x03B9D2E4 BL 0x1C16DFC
	0x03B9D2E8 LDR X0, [X26]
	0x03B9D2EC LDR X8, [X0 + 0xB8]
	0x03B9D2F0 MOV X0, X20
	0x03B9D2F4 MOV X1, X31
	0x03B9D2F8 LDR X25, [X8 + 0x10]
	0x03B9D2FC BL 0x3C04134
	0x03B9D300 CBZ X25, 0x3B9D42C
	0x03B9D304 LDR W10, [X25 + 0x1C]
	0x03B9D308 LDR X8, [X25 + 0x10]
	0x03B9D30C LDR X9, [X29]
	0x03B9D310 ADD W10, W10, 0x1
	0x03B9D314 STR W10, [X25 + 0x1C]
	0x03B9D318 CBZ X8, 0x3B9D42C
	0x03B9D31C LDRSW X10, [X25 + 0x18]
	0x03B9D320 LDR W11, [X8 + 0x18]
	0x03B9D324 CMP W10, W11
	0x03B9D328 B.CS 0x3B9D354
	0x03B9D32C MOVZ W11, 0x28
	0x03B9D330 ADD W9, W10, 0x1
	0x03B9D334 MADD X8, X10, X11, X8
	0x03B9D338 STR W9, [X25 + 0x18]
	0x03B9D33C STR X24, [X8 + 0x20]
	0x03B9D340 STP S14, S13, [X8 + 0x28]
	0x03B9D344 STP S12, S15, [X8 + 0x30]
	0x03B9D348 STP S8, S9, [X8 + 0x38]
	0x03B9D34C STP W0, W31, [X8 + 0x40]
	0x03B9D350 B 0x3B9D380
	0x03B9D354 LDR X8, [X9 + 0x20]
	0x03B9D358 ADD X1, X31, 0x28
	0x03B9D35C LDR X8, [X8 + 0xC0]
	0x03B9D360 LDR X2, [X8 + 0x70]
	0x03B9D364 STP W0, W31, [X31 + 0x48]
	0x03B9D368 MOV X0, X25
	0x03B9D36C STR X24, [X31 + 0x28]
	0x03B9D370 STP S14, S13, [X31 + 0x30]
	0x03B9D374 STP S12, S15, [X31 + 0x38]
	0x03B9D378 STP S8, S9, [X31 + 0x40]
	0x03B9D37C BL 0x3152798
	0x03B9D380 ADD W22, W22, 0x1
	0x03B9D384 B 0x3B9D140
	0x03B9D388 LDR X0, [X26]
	0x03B9D38C LDR W8, [X0 + 0xE0]
	0x03B9D390 CBNZ W8, 0x3B9D39C
	0x03B9D394 BL 0x1C16DFC
	0x03B9D398 LDR X0, [X26]
	0x03B9D39C ADRP X22, 0x5BF000
	0x03B9D3A0 ADRP X9, 0x57F000
	0x03B9D3A4 LDR X22, [X22 + 0xAA0]
	0x03B9D3A8 LDR X9, [X9 + 0x4F8]
	0x03B9D3AC LDR X8, [X0 + 0xB8]
	0x03B9D3B0 LDR X0, [X9]
	0x03B9D3B4 LDR X20, [X8 + 0x10]
	0x03B9D3B8 LDR X21, [X8]
	0x03B9D3BC LDR W9, [X0 + 0xE0]
	0x03B9D3C0 CBNZ W9, 0x3B9D3C8
	0x03B9D3C4 BL 0x1C16DFC
	0x03B9D3C8 LDR X2, [X22]
	0x03B9D3CC MOV X0, X20
	0x03B9D3D0 MOV X1, X21
	0x03B9D3D4 BL 0x22560D8
	0x03B9D3D8 CBZ X19, 0x3B9D42C
	0x03B9D3DC LDR X8, [X26]
	0x03B9D3E0 MOV X0, X19
	0x03B9D3E4 LDR X8, [X8 + 0xB8]
	0x03B9D3E8 LDR X1, [X8 + 0x10]
	0x03B9D3EC ADRP X8, 0x5BF000
	0x03B9D3F0 LDR X8, [X8 + 0xA98]
	0x03B9D3F4 LDR X2, [X8]
	0x03B9D3F8 BL 0x3152A1C
	0x03B9D3FC LDP X20, X19, [X31 + 0xE0]
	0x03B9D400 LDP X22, X21, [X31 + 0xD0]
	0x03B9D404 LDP X24, X23, [X31 + 0xC0]
	0x03B9D408 LDP X26, X25, [X31 + 0xB0]
	0x03B9D40C LDP X28, X27, [X31 + 0xA0]
	0x03B9D410 LDP X29, X30, [X31 + 0x90]
	0x03B9D414 LDP D9, D8, [X31 + 0x80]
	0x03B9D418 LDP D11, D10, [X31 + 0x70]
	0x03B9D41C LDP D13, D12, [X31 + 0x60]
	0x03B9D420 LDP D15, D14, [X31 + 0x50]
	0x03B9D424 ADD X31, X31, 0xF0
	0x03B9D428 RET
	0x03B9D42C BL 0x1C16F20
	0x03B9D430 SUB X31, X31, 0x160
	0x03B9D434 STP D15, D14, [X31 + 0xC0]
	0x03B9D438 STP D13, D12, [X31 + 0xD0]
	0x03B9D43C STP D11, D10, [X31 + 0xE0]
	0x03B9D440 STP D9, D8, [X31 + 0xF0]
	0x03B9D444 STP X29, X30, [X31 + 0x100]
	0x03B9D448 STP X28, X27, [X31 + 0x110]
	0x03B9D44C STP X26, X25, [X31 + 0x120]
	0x03B9D450 STP X24, X23, [X31 + 0x130]
	0x03B9D454 STP X22, X21, [X31 + 0x140]
	0x03B9D458 STP X20, X19, [X31 + 0x150]
	0x03B9D45C ADRP X19, 0x845000
	0x03B9D460 LDRB W8, [X19 + 0xC16]
	0x03B9D464 MOV X20, X4
	0x03B9D468 MOV X23, X3
	0x03B9D46C MOV W24, W2
	0x03B9D470 MOV X21, X1
	0x03B9D474 MOV X22, X0
	0x03B9D478 STR S0, [X31 + 0x2C]
	0x03B9D47C TBNZ X8, 0x0, 0x3B9D4D0
	0x03B9D480 ADRP X0, 0x5BF000
	0x03B9D484 LDR X0, [X0 + 0xAA8]
	0x03B9D488 BL 0x1C16CF4
	0x03B9D48C ADRP X0, 0x5BF000
	0x03B9D490 LDR X0, [X0 + 0xAB0]
	0x03B9D494 BL 0x1C16CF4
	0x03B9D498 ADRP X0, 0x5BF000
	0x03B9D49C LDR X0, [X0 + 0xAB8]
	0x03B9D4A0 BL 0x1C16CF4
	0x03B9D4A4 ADRP X0, 0x5AC000
	0x03B9D4A8 LDR X0, [X0 + 0x358]
	0x03B9D4AC BL 0x1C16CF4
	0x03B9D4B0 ADRP X0, 0x5BF000
	0x03B9D4B4 LDR X0, [X0 + 0xAC0]
	0x03B9D4B8 BL 0x1C16CF4
	0x03B9D4BC ADRP X0, 0x5AC000
	0x03B9D4C0 LDR X0, [X0 + 0x330]
	0x03B9D4C4 BL 0x1C16CF4
	0x03B9D4C8 MOVZ W8, 0x1
	0x03B9D4CC STRB W8, [X19 + 0xC16]
	0x03B9D4D0 MOVI V0.2D, 0x0
	0x03B9D4D4 STR X31, [X31 + 0x60]
	0x03B9D4D8 STP V0, V0, [X31 + 0x40]
	0x03B9D4DC STR V0, [X31 + 0x3]
	0x03B9D4E0 CBZ X23, 0x3B9D7DC
	0x03B9D4E4 ADRP X8, 0x5BF000
	0x03B9D4E8 LDR X8, [X8 + 0xAC0]
	0x03B9D4EC ADRP X29, 0x5BF000
	0x03B9D4F0 MOV X0, X23
	0x03B9D4F4 LDR X1, [X8]
	0x03B9D4F8 LDR X29, [X29 + 0xAB0]
	0x03B9D4FC ADD X8, X31, 0x70
	0x03B9D500 BL 0x3153640
	0x03B9D504 LDP V0, V1, [X31 + 0x70]
	0x03B9D508 LDR V2, [X31 + 0x9]
	0x03B9D50C LDR X8, [X31 + 0xA0]
	0x03B9D510 ADRP X23, 0x556000
	0x03B9D514 LDR X23, [X23 + 0x5A0]
	0x03B9D518 ADRP X27, 0x83B000
	0x03B9D51C STP V0, V1, [X31 + 0x30]
	0x03B9D520 STR V2, [X31 + 0x5]
	0x03B9D524 STR X8, [X31 + 0x60]
	0x03B9D528 MOVZ W19, 0x1
	0x03B9D52C STP W24, W24, [X31 + 0x10]
	0x03B9D530 LDR X1, [X29]
	0x03B9D534 ADD X0, X31, 0x30
	0x03B9D538 BL 0x2BE319C
	0x03B9D53C TBZ X0, 0x0, 0x3B9D784
	0x03B9D540 LDR X25, [X31 + 0x40]
	0x03B9D544 CBZ X25, 0x3B9D7D0
	0x03B9D548 LDR V1, [X31 + 0x48]
	0x03B9D54C LDR V0, [X31 + 0x4C]
	0x03B9D550 LDR W28, [X31 + 0x60]
	0x03B9D554 STP S1, S0, [X31 + 0x18]
	0x03B9D558 LDR V1, [X31 + 0x50]
	0x03B9D55C LDR V0, [X31 + 0x54]
	0x03B9D560 STP S1, S0, [X31 + 0x20]
	0x03B9D564 LDP S0, S14, [X31 + 0x58]
	0x03B9D568 STR S0, [X31 + 0x28]
	0x03B9D56C MOV X0, X25
	0x03B9D570 MOV X1, X31
	0x03B9D574 BL 0x3C32ECC
	0x03B9D578 LDRB W8, [X22 + 0x28]
	0x03B9D57C MOV X24, X0
	0x03B9D580 CBZ W8, 0x3B9D614
	0x03B9D584 CBZ X24, 0x3B9D7D4
	0x03B9D588 LDP S8, S13, [X21 + 0xC]
	0x03B9D58C LDR V15, [X21 + 0x14]
	0x03B9D590 MOV X0, X24
	0x03B9D594 MOV X1, X31
	0x03B9D598 BL 0x3C356F8
	0x03B9D59C CBZ X0, 0x3B9D7D8
	0x03B9D5A0 MOV X1, X31
	0x03B9D5A4 BL 0x3C3DEB4
	0x03B9D5A8 LDRB W8, [X27 + 0xA1F]
	0x03B9D5AC MOV V9.16B, V0.16B
	0x03B9D5B0 MOV V10.16B, V1.16B
	0x03B9D5B4 MOV V11.16B, V2.16B
	0x03B9D5B8 MOV V12.16B, V3.16B
	0x03B9D5BC CBNZ W8, 0x3B9D5CC
	0x03B9D5C0 MOV X0, X23
	0x03B9D5C4 BL 0x1C16CF4
	0x03B9D5C8 STRB W19, [X27 + 0xA1F]
	0x03B9D5CC LDR X8, [X23]
	0x03B9D5D0 LDR X8, [X8 + 0xB8]
	0x03B9D5D4 LDP S4, S5, [X8 + 0x48]
	0x03B9D5D8 LDR V6, [X8 + 0x50]
	0x03B9D5DC MOV V0.16B, V9.16B
	0x03B9D5E0 MOV V1.16B, V10.16B
	0x03B9D5E4 MOV V2.16B, V11.16B
	0x03B9D5E8 MOV V3.16B, V12.16B
	0x03B9D5EC MOV X0, X31
	0x03B9D5F0 BL 0x3C2A9FC
	0x03B9D5F4 FMUL S0, S8, S0
	0x03B9D5F8 FMUL S1, S13, S1
	0x03B9D5FC FADD S0, S0, S1
	0x03B9D600 FMUL S1, S15, S2
	0x03B9D604 FADD S0, S1, S0
	0x03B9D608 FCMP S0, 0x0
	0x03B9D60C CSET W8, GT
	0x03B9D610 B 0x3B9D618
	0x03B9D614 MOVZ W8, 0x1
	0x03B9D618 LDR V0, [X31 + 0x2C]
	0x03B9D61C FCMP S14, S0
	0x03B9D620 B.PL 0x3B9D530
	0x03B9D624 TBZ X8, 0x0, 0x3B9D530
	0x03B9D628 CBZ X24, 0x3B9D7F4
	0x03B9D62C MOV X0, X24
	0x03B9D630 MOV X1, X31
	0x03B9D634 BL 0x3C356F8
	0x03B9D638 CBZ X0, 0x3B9D7F0
	0x03B9D63C MOV X1, X31
	0x03B9D640 BL 0x3C3FA04
	0x03B9D644 CBZ X20, 0x3B9D7EC
	0x03B9D648 LDR V12, [X20 + 0x18]
	0x03B9D64C MOV V9.16B, V0.16B
	0x03B9D650 MOV V10.16B, V1.16B
	0x03B9D654 MOV V11.16B, V2.16B
	0x03B9D658 MOV X0, X25
	0x03B9D65C MOV X1, X31
	0x03B9D660 BL 0x3CDBD10
	0x03B9D664 MOV W25, W0
	0x03B9D668 MOV X0, X22
	0x03B9D66C BL 0x3B9AE18
	0x03B9D670 CBZ X0, 0x3B9D7E4
	0x03B9D674 MOV X1, X31
	0x03B9D678 BL 0x3E24A24
	0x03B9D67C MOV W26, W0
	0x03B9D680 MOV X0, X22
	0x03B9D684 BL 0x3B9AE18
	0x03B9D688 CBZ X0, 0x3B9D7E8
	0x03B9D68C MOV X1, X31
	0x03B9D690 BL 0x3E24924
	0x03B9D694 ADRP X9, 0x5AC000
	0x03B9D698 LDR W10, [X20 + 0x1C]
	0x03B9D69C LDR X8, [X20 + 0x10]
	0x03B9D6A0 LDR X9, [X9 + 0x358]
	0x03B9D6A4 ADD W10, W10, 0x1
	0x03B9D6A8 LDR X9, [X9]
	0x03B9D6AC STR W10, [X20 + 0x1C]
	0x03B9D6B0 CBZ X8, 0x3B9D7E0
	0x03B9D6B4 LDRSW X10, [X20 + 0x18]
	0x03B9D6B8 LDR W11, [X8 + 0x18]
	0x03B9D6BC SCVTF S3, S12
	0x03B9D6C0 FNEG S2, S9
	0x03B9D6C4 FNEG S1, S10
	0x03B9D6C8 CMP W10, W11
	0x03B9D6CC FNEG S0, S11
	0x03B9D6D0 B.CS 0x3B9D724
	0x03B9D6D4 MOVZ W11, 0x50
	0x03B9D6D8 ADD W9, W10, 0x1
	0x03B9D6DC MADD X8, X10, X11, X8
	0x03B9D6E0 STR W9, [X20 + 0x18]
	0x03B9D6E4 STP S14, S3, [X8 + 0x30]
	0x03B9D6E8 LDR V4, [X31 + 0x18]
	0x03B9D6EC LDR V3, [X31 + 0x1C]
	0x03B9D6F0 STP S1, S0, [X8 + 0x5C]
	0x03B9D6F4 LDR V0, [X31 + 0x28]
	0x03B9D6F8 STP X24, X22, [X8 + 0x20]
	0x03B9D6FC STP S4, S3, [X8 + 0x4C]
	0x03B9D700 LDR V3, [X31 + 0x20]
	0x03B9D704 LDR V4, [X31 + 0x24]
	0x03B9D708 STR W25, [X8 + 0x38]
	0x03B9D70C STUR X31, [X8 + 0x3C]
	0x03B9D710 STP W26, W0, [X8 + 0x44]
	0x03B9D714 STP S3, S2, [X8 + 0x54]
	0x03B9D718 STP S4, S0, [X8 + 0x64]
	0x03B9D71C STR W28, [X8 + 0x6C]
	0x03B9D720 B 0x3B9D778
	0x03B9D724 LDR X8, [X9 + 0x20]
	0x03B9D728 LDR V4, [X31 + 0x18]
	0x03B9D72C LDR X8, [X8 + 0xC0]
	0x03B9D730 LDR X2, [X8 + 0x70]
	0x03B9D734 STP S14, S3, [X31 + 0x80]
	0x03B9D738 LDR V3, [X31 + 0x1C]
	0x03B9D73C STP S1, S0, [X31 + 0xAC]
	0x03B9D740 LDR V0, [X31 + 0x28]
	0x03B9D744 STP X24, X22, [X31 + 0x70]
	0x03B9D748 STP S4, S3, [X31 + 0x9C]
	0x03B9D74C LDR V3, [X31 + 0x20]
	0x03B9D750 LDR V4, [X31 + 0x24]
	0x03B9D754 STR W25, [X31 + 0x88]
	0x03B9D758 STUR X31, [X31 + 0x8C]
	0x03B9D75C STP W26, W0, [X31 + 0x94]
	0x03B9D760 STP S3, S2, [X31 + 0xA4]
	0x03B9D764 STP S4, S0, [X31 + 0xB4]
	0x03B9D768 STR W28, [X31 + 0xBC]
	0x03B9D76C ADD X1, X31, 0x70
	0x03B9D770 MOV X0, X20
	0x03B9D774 BL 0x3035DFC
	0x03B9D778 MOVZ W8, 0x1
	0x03B9D77C STR W8, [X31 + 0x14]
	0x03B9D780 B 0x3B9D530
	0x03B9D784 ADRP X8, 0x5BF000
	0x03B9D788 LDR X8, [X8 + 0xAA8]
	0x03B9D78C ADD X0, X31, 0x30
	0x03B9D790 LDR X1, [X8]
	0x03B9D794 BL 0x2BE3198
	0x03B9D798 LDR W21, [X31 + 0x14]
	0x03B9D79C AND W0, W21, 0x1

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X21, 0x846000
	015 Move X20, 0x5C0000
	016 Move W8, [X21+3088]
	017 Move X20, [X20+2560]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {76}
	023 Move X0, 0x5C0000
	024 Move X0, [X0+2568]
	025 Call 0x1C17CF4
	026 Move X0, 0x5C0000
	027 Move X0, [X0+2560]
	028 Call 0x1C17CF4
	029 Move X0, 0x5C0000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0x5C0000
	033 Move X0, [X0+2336]
	034 Call 0x1C17CF4
	035 Move X0, 0x5C0000
	036 Move X0, [X0+2584]
	037 Call 0x1C17CF4
	038 Move X0, 0x5C0000
	039 Move X0, [X0+2592]
	040 Call 0x1C17CF4
	041 Move X0, 0x5C0000
	042 Move X0, [X0+2600]
	043 Call 0x1C17CF4
	044 Move X0, 0x5C0000
	045 Move X0, [X0+2608]
	046 Call 0x1C17CF4
	047 Move X0, 0x5C0000
	048 Move X0, [X0+2616]
	049 Call 0x1C17CF4
	050 Move X0, 0x5C0000
	051 Move X0, [X0+2624]
	052 Call 0x1C17CF4
	053 Move X0, 0x5C0000
	054 Move X0, [X0+2352]
	055 Call 0x1C17CF4
	056 Move X0, 0x5C0000
	057 Move X0, [X0+2632]
	058 Call 0x1C17CF4
	059 Move X0, 0x5C0000
	060 Move X0, [X0+2640]
	061 Call 0x1C17CF4
	062 Move X0, 0x5C0000
	063 Move X0, [X0+2648]
	064 Call 0x1C17CF4
	065 Move X0, 0x557000
	066 Move X0, [X0+1432]
	067 Call 0x1C17CF4
	068 Move X0, 0x5C0000
	069 Move X0, [X0+2656]
	070 Call 0x1C17CF4
	071 Move X0, 0x5BF000
	072 Move X0, [X0+456]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X21+3088], W8
	076 Move X21, 0x5C0000
	077 Move X27, 0x5BF000
	078 Move X21, [X21+2568]
	079 Move X27, [X27+456]
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 Move X0, X19
	082 Move X1, X31
	083 Move [X31+128], X31
	084 Move [X31+136], X31
	085 Move [X31+112], X31
	086 Move [X31+120], X31
	087 Move [X31+48], X31
	088 Move [X31+56], X31
	089 Move [X31+80], V0
	090 Move [X31+88], V0
	091 Move [X31+64], X31
	092 Call BaseRaycaster.OnDisable, X0
	093 Move X0, [X20]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X1, [X21]
	099 Add X0, X31, 136
	100 Call CollectionPool`2<Object, Object>.Get, X0
	101 Move X8, X0
	102 Move X0, [X27]
	103 Move [X31+120], X8
	104 Move [X31+128], X1
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X27]
	110 Move X8, [X0+184]
	111 Move X0, [X8+24]
	112 Compare X0, 0
	113 JumpIfEqual {267}
	114 Move X8, 0x5C0000
	115 Move X8, [X8+2576]
	116 Move X1, [X8]
	117 Add X8, X31, 8
	118 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	119 Move X23, 0x5C0000
	120 Move X24, 0x557000
	121 Move X28, 0x5C0000
	122 Move X22, 0x5C0000
	123 Move X29, 0x5C0000
	124 Move X26, 0x5C0000
	125 Move X25, 0x5C0000
	126 Move X23, [X23+2600]
	127 Move X24, [X24+1432]
	128 Move X28, [X28+2352]
	129 Move X22, [X22+2584]
	130 Move X29, [X29+2336]
	131 Move X26, [X26+2632]
	132 Move X25, [X25+2608]
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 Move X8, [X31+40]
	136 Move [X31+80], V0
	137 Move [X31+88], V1
	138 Move [X31+112], X8
	139 Move X1, [X23]
	140 Add X0, X31, 80
	141 Call Enumerator<Object, Object>.MoveNext, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {167}
	146 Move X0, [X24]
	147 Move X20, [X31+96]
	148 Move X21, [X31+104]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X0, X21
	154 Move X1, X19
	155 Move X2, X31
	156 Call Object.op_Equality, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {139}
	161 Move X0, [X31+136]
	162 Compare X0, 0
	163 JumpIfEqual {266}
	164 Move X2, [X28]
	165 Move X1, X20
	166 Call HashSet`1<Object>.Add, X0, X1
	167 Move X20, X31
	168 Move X1, [X22]
	169 Add X0, X31, 80
	170 Call Enumerator<Object, Object>.Dispose, X0
	171 Compare X20, 0
	172 JumpIfNotEqual {268}
	173 Move X0, [X27]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {179}
	177 Call 0x1C17DFC
	178 Move X0, [X27]
	179 Move X8, [X0+184]
	180 Move X0, [X8+32]
	181 Compare X0, 0
	182 JumpIfEqual {270}
	183 Move X2, [X29]
	184 Move X1, X19
	185 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	186 Compare X0, 0
	187 JumpIfEqual {271}
	188 Move X1, [X26]
	189 Add X8, X31, 8
	190 Call HashSet`1<Object>.GetEnumerator, X0
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 Move X8, [X31+24]
	193 Move [X31+3], V0
	194 Move [X31+64], X8
	195 Move X1, [X25]
	196 Add X0, X31, 48
	197 Call Enumerator<Object>.MoveNext, X0
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {208}
	202 Move X0, [X31+136]
	203 Compare X0, 0
	204 JumpIfEqual {265}
	205 Move X1, [X31+64]
	206 Move X2, [X28]
	207 Call HashSet`1<Object>.Add, X0, X1
	208 Move X20, X31
	209 Move W21, 7
	210 Move X22, 0x5C0000
	211 Move X22, [X22+2592]
	212 Move X1, [X22]
	213 Add X0, X31, 48
	214 Call Enumerator<Object>.Dispose, X0
	215 Compare X20, 0
	216 JumpIfNotEqual {272}
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Compare W21, 0
	219 JumpIfNotEqual {246}
	220 Move X0, [X31+136]
	221 Compare X0, 0
	222 JumpIfEqual {274}
	223 Move X1, [X26]
	224 Add X8, X31, 8
	225 Call HashSet`1<Object>.GetEnumerator, X0
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 Move X8, [X31+24]
	228 Move [X31+3], V0
	229 Move [X31+64], X8
	230 Move X1, [X25]
	231 Add X0, X31, 48
	232 Call Enumerator<Object>.MoveNext, X0
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {240}
	237 Move X1, [X31+64]
	238 Move X0, X19
	239 Call TrackedDeviceGraphicRaycaster.EndPokeInteraction, X0, X1
	240 Move X19, X31
	241 Move X1, [X22]
	242 Add X0, X31, 48
	243 Call Enumerator<Object>.Dispose, X0
	244 Compare X19, 0
	245 JumpIfNotEqual {275}
	246 Move X8, 0x5C0000
	247 Move X8, [X8+2656]
	248 Add X0, X31, 120
	249 Move X1, [X8]
	250 Call 0x24A7D20, X0
	251 Move X20, [X31+224]
	252 Move X19, [X31+232]
	253 Move X22, [X31+208]
	254 Move X21, [X31+216]
	255 Move X24, [X31+192]
	256 Move X23, [X31+200]
	257 Move X26, [X31+176]
	258 Move X25, [X31+184]
	259 Move X28, [X31+160]
	260 Move X27, [X31+168]
	261 Move X29, [X31+144]
	262 Move X30, [X31+152]
	263 Add X31, X31, 240
	264 Return 
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Move X0, X20
	269 Call 0x1C17F18
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Move X0, X20
	273 Call 0x1C17F18
	274 Call 0x1C17F20
	275 Move X0, X19
	276 Call 0x1C17F18
	277 Move X21, X1
	278 Move X23, X0
	279 Move X21, X1
	280 Move X23, X0
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X23
	283 Call 0x3EB2AD0
	284 Move X19, [X0]
	285 Call 0x3EB2AE0
	286 Move X22, 0x5C0000
	287 Move X22, [X22+2592]
	288 Move X19, X31
	289 Move X8, 0x5C0000
	290 Move X8, [X8+2592]
	291 Move X1, [X8]
	292 Add X0, X31, 48
	293 Call Enumerator<Object>.Dispose, X0
	294 Compare X19, 0
	295 JumpIfEqual {333}
	296 Move X0, X19
	297 Call 0x1C17F18
	298 Move X21, X1
	299 Move X23, X0
	300 Move X21, X1
	301 Move X23, X0
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X0, X23
	304 Call 0x3EB2AD0
	305 Move X20, [X0]
	306 Call 0x3EB2AE0
	307 Move W21, W31
	308 Move X20, X31
	309 Move X8, 0x5C0000
	310 Move X8, [X8+2592]
	311 Move X1, [X8]
	312 Add X0, X31, 48
	313 Call Enumerator<Object>.Dispose, X0
	314 Compare X20, 0
	315 JumpIfEqual {333}
	316 Move X0, X20
	317 Call 0x1C17F18
	318 Move X21, X1
	319 Move X23, X0
	320 Move X21, X1
	321 Move X23, X0
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move X0, X23
	324 Call 0x3EB2AD0
	325 Move X20, [X0]
	326 Call 0x3EB2AE0
	327 Move X20, X31
	328 Move X1, [X22]
	329 Add X0, X31, 80
	330 Call Enumerator<Object, Object>.Dispose, X0
	331 Compare X20, 0
	332 JumpIfNotEqual {348}
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X0, X23
	335 Call 0x3EB2AD0
	336 Move X19, [X0]
	337 Call 0x3EB2AE0
	338 Move X8, 0x5C0000
	339 Move X8, [X8+2656]
	340 Add X0, X31, 120
	341 Move X1, [X8]
	342 Call 0x24A7D20, X0
	343 Compare X19, 0
	344 JumpIfEqual {251}
	345 Move X0, X19
	346 Call 0x1C17F18
	347 Move X19, X31
	348 Move X0, X20
	349 Call 0x1C17F18
	350 Move X21, X1
	351 Move X23, X0
	352 Move X23, X0
	353 Move X8, 0x5C0000
	354 Move X8, [X8+2656]
	355 Move X1, [X8]
	356 Add X0, X31, 120
	357 Call 0x24A7D20, X0
	358 Compare X19, 0
	359 JumpIfNotEqual {362}
	360 Move X0, X23
	361 Call 0x1D2D690
	362 Move X0, X19
	363 Call 0x1C17F18
	364 Call 0x1991590

Method: System.Void OnDestroy()

Disassembly:
	0x03B9D7A0 LDP X20, X19, [X31 + 0x150]
	0x03B9D7A4 LDP X22, X21, [X31 + 0x140]
	0x03B9D7A8 LDP X24, X23, [X31 + 0x130]
	0x03B9D7AC LDP X26, X25, [X31 + 0x120]
	0x03B9D7B0 LDP X28, X27, [X31 + 0x110]
	0x03B9D7B4 LDP X29, X30, [X31 + 0x100]
	0x03B9D7B8 LDP D9, D8, [X31 + 0xF0]
	0x03B9D7BC LDP D11, D10, [X31 + 0xE0]
	0x03B9D7C0 LDP D13, D12, [X31 + 0xD0]
	0x03B9D7C4 LDP D15, D14, [X31 + 0xC0]
	0x03B9D7C8 ADD X31, X31, 0x160
	0x03B9D7CC RET
	0x03B9D7D0 BL 0x1C16F20
	0x03B9D7D4 BL 0x1C16F20
	0x03B9D7D8 BL 0x1C16F20
	0x03B9D7DC BL 0x1C16F20
	0x03B9D7E0 BL 0x1C16F20
	0x03B9D7E4 BL 0x1C16F20
	0x03B9D7E8 BL 0x1C16F20
	0x03B9D7EC BL 0x1C16F20
	0x03B9D7F0 BL 0x1C16F20
	0x03B9D7F4 BL 0x1C16F20
	0x03B9D7F8 B 0x3B9D854
	0x03B9D7FC B 0x3B9D854
	0x03B9D800 B 0x3B9D854
	0x03B9D804 B 0x3B9D854
	0x03B9D808 B 0x3B9D854
	0x03B9D80C B 0x3B9D854
	0x03B9D810 LDR W21, [X31 + 0x10]
	0x03B9D814 B 0x3B9D858
	0x03B9D818 B 0x3B9D854
	0x03B9D81C B 0x3B9D854
	0x03B9D820 B 0x3B9D854
	0x03B9D824 B 0x3B9D854
	0x03B9D828 B 0x3B9D854
	0x03B9D82C B 0x3B9D854
	0x03B9D830 B 0x3B9D854
	0x03B9D834 B 0x3B9D854
	0x03B9D838 B 0x3B9D854
	0x03B9D83C B 0x3B9D854
	0x03B9D840 B 0x3B9D854
	0x03B9D844 B 0x3B9D854
	0x03B9D848 B 0x3B9D854
	0x03B9D84C B 0x3B9D854
	0x03B9D850 B 0x3B9D854
	0x03B9D854 LDR W21, [X31 + 0x14]
	0x03B9D858 MOV X20, X0
	0x03B9D85C CMP W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x846000
	006 Move X20, 0x5BF000
	007 Move W8, [X21+3089]
	008 Move X20, [X20+456]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x5C0000
	015 Move X0, [X0+2664]
	016 Call 0x1C17CF4
	017 Move X0, 0x5C0000
	018 Move X0, [X0+2672]
	019 Call 0x1C17CF4
	020 Move X0, 0x5BF000
	021 Move X0, [X0+456]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3089], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call UIBehaviour.OnDestroy, X0
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X0, [X8+32]
	036 Compare X0, 0
	037 JumpIfEqual {60}
	038 Move X8, 0x5C0000
	039 Move X8, [X8+2672]
	040 Move X1, X19
	041 Move X2, [X8]
	042 Call Dictionary`2<Object, Object>.Remove, X0, X1
	043 Move X0, [X19+104]
	044 Compare X0, 0
	045 JumpIfEqual {60}
	046 Move X8, 0x5C0000
	047 Move X8, [X8+2664]
	048 Move X1, [X8]
	049 Call Dictionary`2<Object, Object>.Clear, X0
	050 Move X0, [X19+112]
	051 Compare X0, 0
	052 JumpIfEqual {60}
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X1, X31
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call BindingsGroup.Clear, X0
	059 Return 
	060 Call 0x1C17F20

Method: System.Void SetupPoke()

Disassembly:
	0x03B9D05C ADRP X0, 0x5BF000
	0x03B9D060 LDR X0, [X0 + 0xA78]
	0x03B9D064 BL 0x1C16CF4
	0x03B9D068 ADRP X0, 0x5BF000
	0x03B9D06C LDR X0, [X0 + 0xA80]
	0x03B9D070 BL 0x1C16CF4
	0x03B9D074 ADRP X0, 0x5BF000
	0x03B9D078 LDR X0, [X0 + 0xAA0]
	0x03B9D07C BL 0x1C16CF4
	0x03B9D080 ADRP X0, 0x57F000
	0x03B9D084 LDR X0, [X0 + 0x4F8]
	0x03B9D088 BL 0x1C16CF4
	0x03B9D08C ADRP X0, 0x5BE000
	0x03B9D090 LDR X0, [X0 + 0x1C8]
	0x03B9D094 BL 0x1C16CF4
	0x03B9D098 MOVZ W8, 0x1
	0x03B9D09C STRB W8, [X24 + 0xC17]
	0x03B9D0A0 LDR X0, [X22]
	0x03B9D0A4 STR W31, [X31 + 0x20]
	0x03B9D0A8 STR X31, [X31 + 0x18]
	0x03B9D0AC STR W31, [X31 + 0x14]
	0x03B9D0B0 ADRP X26, 0x5BE000
	0x03B9D0B4 LDR W8, [X0 + 0xE0]
	0x03B9D0B8 LDR X26, [X26 + 0x1C8]
	0x03B9D0BC CBNZ W8, 0x3B9D0C4
	0x03B9D0C0 BL 0x1C16DFC
	0x03B9D0C4 MOV X0, X21
	0x03B9D0C8 MOV X1, X31
	0x03B9D0CC BL 0x3CDFBC4
	0x03B9D0D0 LDR X8, [X26]
	0x03B9D0D4 MOV X21, X0
	0x03B9D0D8 LDR W9, [X8 + 0xE0]
	0x03B9D0DC CBNZ W9, 0x3B9D0EC
	0x03B9D0E0 MOV X0, X8
	0x03B9D0E4 BL 0x1C16DFC
	0x03B9D0E8 LDR X8, [X26]
	0x03B9D0EC LDR X8, [X8 + 0xB8]
	0x03B9D0F0 LDR X8, [X8 + 0x10]
	0x03B9D0F4 CBZ X8, 0x3B9D42C
	0x03B9D0F8 LDP W2, W9, [X8 + 0x18]
	0x03B9D0FC ADD W9, W9, 0x1
	0x03B9D100 CMP W2, 0x1
	0x03B9D104 STP W31, W9, [X8 + 0x18]
	0x03B9D108 B.LT 0x3B9D11C
	0x03B9D10C LDR X0, [X8 + 0x10]
	0x03B9D110 MOV W1, W31
	0x03B9D114 MOV X3, X31
	0x03B9D118 BL 0x339FA34
	0x03B9D11C CBZ X21, 0x3B9D42C
	0x03B9D120 ADRP X27, 0x5AC000
	0x03B9D124 ADRP X28, 0x5AC000
	0x03B9D128 ADRP X29, 0x5BF000
	0x03B9D12C LDR X27, [X27 + 0x590]
	0x03B9D130 LDR X28, [X28 + 0x598]
	0x03B9D134 LDR X29, [X29 + 0xA78]
	0x03B9D138 MOV W22, W31
	0x03B9D13C AND X23, X23, 0x0
	0x03B9D140 LDR X8, [X21]
	0x03B9D144 LDR X1, [X27]
	0x03B9D148 LDRH W9, [X8 + 0x12E]
	0x03B9D14C CBZ X9, 0x3B9D170
	0x03B9D150 LDR X10, [X8 + 0xB0]
	0x03B9D154 ADD X10, X10, 0x8
	0x03B9D158 LDUR X11, [X10 - 0x8]
	0x03B9D15C CMP X11, X1
	0x03B9D160 B.EQ 0x3B9D180
	0x03B9D164 SUBS X9, X9, 0x1
	0x03B9D168 ADD X10, X10, 0x10
	0x03B9D16C B.NE 0x3B9D158
	0x03B9D170 MOV X0, X21
	0x03B9D174 MOV W2, W31
	0x03B9D178 BL 0x1C5C788
	0x03B9D17C B 0x3B9D18C
	0x03B9D180 LDRSW X9, [X10]
	0x03B9D184 ADD X8, X8, X9, 0x4, LSL
	0x03B9D188 ADD X0, X8, 0x138
	0x03B9D18C LDP X8, X1, [X0]
	0x03B9D190 MOV X0, X21
	0x03B9D194 BLR X8
	0x03B9D198 CMP W22, W0
	0x03B9D19C B.GE 0x3B9D388
	0x03B9D1A0 LDR X8, [X21]
	0x03B9D1A4 LDR X1, [X28]
	0x03B9D1A8 LDRH W9, [X8 + 0x12E]
	0x03B9D1AC CBZ X9, 0x3B9D1D0
	0x03B9D1B0 LDR X10, [X8 + 0xB0]
	0x03B9D1B4 ADD X10, X10, 0x8
	0x03B9D1B8 LDUR X11, [X10 - 0x8]
	0x03B9D1BC CMP X11, X1
	0x03B9D1C0 B.EQ 0x3B9D1E0
	0x03B9D1C4 SUBS X9, X9, 0x1
	0x03B9D1C8 ADD X10, X10, 0x10
	0x03B9D1CC B.NE 0x3B9D1B8
	0x03B9D1D0 MOV X0, X21
	0x03B9D1D4 MOV W2, W31
	0x03B9D1D8 BL 0x1C5C788
	0x03B9D1DC B 0x3B9D1EC
	0x03B9D1E0 LDRSW X9, [X10]
	0x03B9D1E4 ADD X8, X8, X9, 0x4, LSL
	0x03B9D1E8 ADD X0, X8, 0x138
	0x03B9D1EC LDP X8, X2, [X0]
	0x03B9D1F0 MOV X0, X21
	0x03B9D1F4 MOV W1, W22
	0x03B9D1F8 BLR X8
	0x03B9D1FC LDR X8, [X26]
	0x03B9D200 MOV X24, X0
	0x03B9D204 LDR W9, [X8 + 0xE0]
	0x03B9D208 CBNZ W9, 0x3B9D214
	0x03B9D20C MOV X0, X8
	0x03B9D210 BL 0x1C16DFC
	0x03B9D214 MOV X0, X24
	0x03B9D218 MOV X1, X23
	0x03B9D21C BL 0x3B9DD48
	0x03B9D220 TBZ X0, 0x0, 0x3B9D380
	0x03B9D224 CBZ X24, 0x3B9D42C
	0x03B9D228 LDP S8, S12, [X24 + 0x3C]
	0x03B9D22C LDP S13, S14, [X24 + 0x44]
	0x03B9D230 MOV X0, X24
	0x03B9D234 MOV X1, X31
	0x03B9D238 BL 0x3CDB488
	0x03B9D23C LDR X8, [X26]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x846000
	007 Move W8, [X20+3090]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x5C0000
	014 Move X0, [X0+2528]
	015 Call 0x1C17CF4
	016 Move X0, 0x5BF000
	017 Move X0, [X0+520]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C0000
	020 Move X0, [X0+2536]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C0000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move X0, 0x5C0000
	026 Move X0, [X0+2552]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3090], W8
	030 Move X0, [X19+112]
	031 Compare X0, 0
	032 JumpIfEqual {136}
	033 Move X21, 0x5C0000
	034 Move X21, [X21+2536]
	035 Move X1, X31
	036 Call BindingsGroup.Clear, X0
	037 Move X8, [X19+96]
	038 Compare X8, 0
	039 JumpIfNotEqual {48}
	040 Move X8, 0x5C0000
	041 Move X8, [X8+2552]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X20, X0
	046 Call XRPokeLogic..ctor, X0
	047 Move [X19+96], X20
	048 Move X0, [X21]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X20, X0
	052 Call PokeThresholdData..ctor, X0
	053 Compare X20, 0
	054 JumpIfEqual {136}
	055 Move W10, 0xCCCD
	056 Move W8, 3
	057 Move W9, 1
	058 NotImplemented "Instruction MOVK not yet implemented."
	059 Move [X20+16], X8
	060 Move [X20+24], W9
	061 Move [X20+28], W10
	062 Move X21, [X19+96]
	063 Move X0, X19
	064 Move X1, X31
	065 Call Component.get_transform, X0
	066 Compare X21, 0
	067 JumpIfEqual {136}
	068 Move X1, X0
	069 Move X0, X21
	070 Move X2, X20
	071 Move X3, X31
	072 Move X4, X31
	073 Call XRPokeLogic.Initialize, X0, X1, X2, X3
	074 Move X0, [X19+96]
	075 Compare X0, 0
	076 JumpIfEqual {136}
	077 Move X8, -51060736
	078 Move V0, [X8+188]
	079 Move X1, X31
	080 Call XRPokeLogic.SetPokeDepth, X0, V0
	081 Move X8, [X19+96]
	082 Compare X8, 0
	083 JumpIfEqual {136}
	084 Move X9, 0x5C0000
	085 Move X9, [X9+2528]
	086 Move X22, 0x5C0000
	087 Move X20, [X19+112]
	088 Move X21, [X8+24]
	089 Move X0, [X9]
	090 Move X22, [X22+2544]
	091 Call 0x1C17F10
	092 Move X2, [X22]
	093 Move X1, X19
	094 Move X3, X31
	095 Move X22, X0
	096 Call Action`1<PokeStateData>..ctor, X0, X1, X2
	097 Compare X21, 0
	098 JumpIfEqual {136}
	099 Move X10, 0x5BF000
	100 Move X8, [X21]
	101 Move X10, [X10+520]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X1, [X10]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 1
	113 Move X0, X21
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 1
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X2, [X0+8]
	121 Move X0, X21
	122 Move X1, X22
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X20, 0
	125 JumpIfEqual {136}
	126 Move X1, X0
	127 Move X0, X20
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X2, X31
	133 Move X30, [X31+48]
	134 Call BindingsGroup.AddBinding, X0, X1
	135 Return 
	136 Call 0x1C17F20

Method: System.Void PerformRaycasts(UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03B9BF50 BL 0x1C16CF4
	0x03B9BF54 ADRP X0, 0x5C1000
	0x03B9BF58 LDR X0, [X0 + 0x9D0]
	0x03B9BF5C BL 0x1C16CF4
	0x03B9BF60 ADRP X0, 0x5C1000
	0x03B9BF64 LDR X0, [X0 + 0x9D8]
	0x03B9BF68 BL 0x1C16CF4
	0x03B9BF6C ADRP X0, 0x5C0000
	0x03B9BF70 LDR X0, [X0 + 0x1C8]
	0x03B9BF74 BL 0x1C16CF4
	0x03B9BF78 MOVZ W8, 0x1
	0x03B9BF7C STRB W8, [X20 + 0xC0F]
	0x03B9BF80 MOV X0, X19
	0x03B9BF84 MOV X1, X31
	0x03B9BF88 BL 0x3E5AD80
	0x03B9BF8C MOV X0, X19
	0x03B9BF90 MOV X1, X31
	0x03B9BF94 BL 0x3C32ECC
	0x03B9BF98 CBZ X0, 0x3B9C058
	0x03B9BF9C MOV X1, X31
	0x03B9BFA0 BL 0x3C35BD8
	0x03B9BFA4 AND X0, X0, 0x0
	0x03B9BFA8 MOV X1, X31
	0x03B9BFAC BL 0x3C90E1C
	0x03B9BFB0 STR W0, [X19 + 0x78]
	0x03B9BFB4 MOV X0, X19
	0x03B9BFB8 MOV X1, X31
	0x03B9BFBC BL 0x3C32ECC
	0x03B9BFC0 CBZ X0, 0x3B9C058
	0x03B9BFC4 ADRP X20, 0x5C0000
	0x03B9BFC8 ADRP X22, 0x5C1000
	0x03B9BFCC ADRP X21, 0x5C1000
	0x03B9BFD0 LDR X20, [X20 + 0x1C8]
	0x03B9BFD4 LDR X22, [X22 + 0x9D8]
	0x03B9BFD8 LDR X21, [X21 + 0x9D0]
	0x03B9BFDC MOV X1, X31
	0x03B9BFE0 BL 0x3C35BD8
	0x03B9BFE4 AND X0, X0, 0x0
	0x03B9BFE8 MOV X1, X31
	0x03B9BFEC BL 0x3C88600
	0x03B9BFF0 STR W0, [X19 + 0x7C]
	0x03B9BFF4 LDR X0, [X20]
	0x03B9BFF8 LDR W8, [X0 + 0xE0]
	0x03B9BFFC CBNZ W8, 0x3B9C008
	0x03B9C000 BL 0x1C16DFC
	0x03B9C004 LDR X0, [X20]
	0x03B9C008 LDR X8, [X0 + 0xB8]
	0x03B9C00C LDR X0, [X22]
	0x03B9C010 LDR X20, [X8 + 0x20]
	0x03B9C014 BL 0x1C16F10
	0x03B9C018 LDR X1, [X21]
	0x03B9C01C MOV X21, X0
	0x03B9C020 BL 0x2DBDE08
	0x03B9C024 CBZ X20, 0x3B9C058
	0x03B9C028 ADRP X8, 0x5C0000
	0x03B9C02C LDR X8, [X8 + 0x9C8]
	0x03B9C030 MOV X0, X20
	0x03B9C034 MOV X1, X19
	0x03B9C038 MOV X2, X21
	0x03B9C03C LDR X3, [X8]
	0x03B9C040 BL 0x2AA5098
	0x03B9C044 MOV X0, X19
	0x03B9C048 LDP X20, X19, [X31 + 0x20]
	0x03B9C04C LDP X22, X21, [X31 + 0x10]
	0x03B9C050 LDR X30, [X31], #0x30
	0x03B9C054 B 0x3B9C05C
	0x03B9C058 BL 0x1C16F20
	0x03B9C05C STR X30, [X31 - 0x30]!
	0x03B9C060 STP X22, X21, [X31 + 0x10]
	0x03B9C064 STP X20, X19, [X31 + 0x20]
	0x03B9C068 ADRP X20, 0x846000
	0x03B9C06C LDRB W8, [X20 + 0xC12]
	0x03B9C070 MOV X19, X0
	0x03B9C074 TBNZ X8, 0x0, 0x3B9C0BC
	0x03B9C078 ADRP X0, 0x5C0000
	0x03B9C07C LDR X0, [X0 + 0x9E0]
	0x03B9C080 BL 0x1C16CF4
	0x03B9C084 ADRP X0, 0x5BF000
	0x03B9C088 LDR X0, [X0 + 0x208]
	0x03B9C08C BL 0x1C16CF4
	0x03B9C090 ADRP X0, 0x5C0000
	0x03B9C094 LDR X0, [X0 + 0x9E8]
	0x03B9C098 BL 0x1C16CF4
	0x03B9C09C ADRP X0, 0x5C0000
	0x03B9C0A0 LDR X0, [X0 + 0x9F0]
	0x03B9C0A4 BL 0x1C16CF4
	0x03B9C0A8 ADRP X0, 0x5C0000
	0x03B9C0AC LDR X0, [X0 + 0x9F8]
	0x03B9C0B0 BL 0x1C16CF4
	0x03B9C0B4 MOVZ W8, 0x1
	0x03B9C0B8 STRB W8, [X20 + 0xC12]
	0x03B9C0BC LDR X0, [X19 + 0x70]
	0x03B9C0C0 CBZ X0, 0x3B9C23C
	0x03B9C0C4 ADRP X21, 0x5C0000
	0x03B9C0C8 LDR X21, [X21 + 0x9E8]
	0x03B9C0CC MOV X1, X31
	0x03B9C0D0 BL 0x3B31AF0
	0x03B9C0D4 LDR X8, [X19 + 0x60]
	0x03B9C0D8 CBNZ X8, 0x3B9C0FC
	0x03B9C0DC ADRP X8, 0x5C0000
	0x03B9C0E0 LDR X8, [X8 + 0x9F8]
	0x03B9C0E4 LDR X0, [X8]
	0x03B9C0E8 BL 0x1C16F10
	0x03B9C0EC MOV X1, X31
	0x03B9C0F0 MOV X20, X0
	0x03B9C0F4 BL 0x3BB45B4
	0x03B9C0F8 STR X20, [X19 + 0x60]
	0x03B9C0FC LDR X0, [X21]
	0x03B9C100 BL 0x1C16F10
	0x03B9C104 MOV X1, X31
	0x03B9C108 MOV X20, X0
	0x03B9C10C BL 0x3BB2808
	0x03B9C110 CBZ X20, 0x3B9C23C
	0x03B9C114 MOVZ W10, 0xCCCD
	0x03B9C118 MOVZ W8, 0x3
	0x03B9C11C MOVZ W9, 0x1
	0x03B9C120 MOVK W10, 0x42B30000
	0x03B9C124 STR X8, [X20 + 0x10]
	0x03B9C128 STRB W9, [X20 + 0x18]
	0x03B9C12C STR W10, [X20 + 0x1C]
	0x03B9C130 LDR X21, [X19 + 0x60]
	0x03B9C134 MOV X0, X19
	0x03B9C138 MOV X1, X31
	0x03B9C13C BL 0x3C32E90
	0x03B9C140 CBZ X21, 0x3B9C23C
	0x03B9C144 MOV X1, X0
	0x03B9C148 MOV X0, X21
	0x03B9C14C MOV X2, X20
	0x03B9C150 MOV X3, X31
	0x03B9C154 MOV X4, X31
	0x03B9C158 BL 0x3BB47BC
	0x03B9C15C LDR X0, [X19 + 0x60]
	0x03B9C160 CBZ X0, 0x3B9C23C
	0x03B9C164 ADRP X8, 0xFFFFFFFFFCF4E000
	0x03B9C168 LDR V0, [X8 + 0xBC]
	0x03B9C16C MOV X1, X31
	0x03B9C170 BL 0x3BB4FC8
	0x03B9C174 LDR X8, [X19 + 0x60]
	0x03B9C178 CBZ X8, 0x3B9C23C
	0x03B9C17C ADRP X9, 0x5C0000
	0x03B9C180 LDR X9, [X9 + 0x9E0]
	0x03B9C184 ADRP X22, 0x5C0000
	0x03B9C188 LDR X20, [X19 + 0x70]
	0x03B9C18C LDR X21, [X8 + 0x18]
	0x03B9C190 LDR X0, [X9]
	0x03B9C194 LDR X22, [X22 + 0x9F0]
	0x03B9C198 BL 0x1C16F10
	0x03B9C19C LDR X2, [X22]
	0x03B9C1A0 MOV X1, X19
	0x03B9C1A4 MOV X3, X31
	0x03B9C1A8 MOV X22, X0
	0x03B9C1AC BL 0x2A6BE7C
	0x03B9C1B0 CBZ X21, 0x3B9C23C
	0x03B9C1B4 ADRP X10, 0x5BF000
	0x03B9C1B8 LDR X8, [X21]
	0x03B9C1BC LDR X10, [X10 + 0x208]
	0x03B9C1C0 LDRH W9, [X8 + 0x12E]
	0x03B9C1C4 LDR X1, [X10]
	0x03B9C1C8 CBZ X9, 0x3B9C1EC
	0x03B9C1CC LDR X10, [X8 + 0xB0]
	0x03B9C1D0 ADD X10, X10, 0x8
	0x03B9C1D4 LDUR X11, [X10 - 0x8]
	0x03B9C1D8 CMP X11, X1
	0x03B9C1DC B.EQ 0x3B9C1FC
	0x03B9C1E0 SUBS X9, X9, 0x1
	0x03B9C1E4 ADD X10, X10, 0x10
	0x03B9C1E8 B.NE 0x3B9C1D4
	0x03B9C1EC MOVZ W2, 0x1
	0x03B9C1F0 MOV X0, X21
	0x03B9C1F4 BL 0x1C5C788
	0x03B9C1F8 B 0x3B9C20C
	0x03B9C1FC LDR W9, [X10]
	0x03B9C200 ADD W9, W9, 0x1
	0x03B9C204 ADD X8, X8, W9, 0x4, SXTW
	0x03B9C208 ADD X0, X8, 0x138
	0x03B9C20C LDP X8, X2, [X0]
	0x03B9C210 MOV X0, X21
	0x03B9C214 MOV X1, X22
	0x03B9C218 BLR X8
	0x03B9C21C CBZ X20, 0x3B9C23C
	0x03B9C220 MOV X1, X0
	0x03B9C224 MOV X0, X20
	0x03B9C228 LDP X20, X19, [X31 + 0x20]
	0x03B9C22C LDP X22, X21, [X31 + 0x10]
	0x03B9C230 MOV X2, X31
	0x03B9C234 LDR X30, [X31], #0x30
	0x03B9C238 B 0x3B3175C
	0x03B9C23C BL 0x1C16F20
	0x03B9C240 SUB X31, X31, 0xF0
	0x03B9C244 STP X29, X30, [X31 + 0x90]
	0x03B9C248 STP X28, X27, [X31 + 0xA0]
	0x03B9C24C STP X26, X25, [X31 + 0xB0]
	0x03B9C250 STP X24, X23, [X31 + 0xC0]
	0x03B9C254 STP X22, X21, [X31 + 0xD0]
	0x03B9C258 STP X20, X19, [X31 + 0xE0]
	0x03B9C25C ADRP X21, 0x846000
	0x03B9C260 ADRP X20, 0x5C0000
	0x03B9C264 LDRB W8, [X21 + 0xC10]
	0x03B9C268 LDR X20, [X20 + 0xA00]
	0x03B9C26C MOV X19, X0
	0x03B9C270 TBNZ X8, 0x0, 0x3B9C348
	0x03B9C274 ADRP X0, 0x5C0000
	0x03B9C278 LDR X0, [X0 + 0xA08]
	0x03B9C27C BL 0x1C16CF4
	0x03B9C280 ADRP X0, 0x5C0000
	0x03B9C284 LDR X0, [X0 + 0xA00]
	0x03B9C288 BL 0x1C16CF4
	0x03B9C28C ADRP X0, 0x5C0000
	0x03B9C290 LDR X0, [X0 + 0xA10]
	0x03B9C294 BL 0x1C16CF4
	0x03B9C298 ADRP X0, 0x5C0000
	0x03B9C29C LDR X0, [X0 + 0x920]
	0x03B9C2A0 BL 0x1C16CF4
	0x03B9C2A4 ADRP X0, 0x5C0000
	0x03B9C2A8 LDR X0, [X0 + 0xA18]
	0x03B9C2AC BL 0x1C16CF4
	0x03B9C2B0 ADRP X0, 0x5C0000
	0x03B9C2B4 LDR X0, [X0 + 0xA20]
	0x03B9C2B8 BL 0x1C16CF4
	0x03B9C2BC ADRP X0, 0x5C0000
	0x03B9C2C0 LDR X0, [X0 + 0xA28]
	0x03B9C2C4 BL 0x1C16CF4
	0x03B9C2C8 ADRP X0, 0x5C0000
	0x03B9C2CC LDR X0, [X0 + 0xA30]
	0x03B9C2D0 BL 0x1C16CF4
	0x03B9C2D4 ADRP X0, 0x5C0000
	0x03B9C2D8 LDR X0, [X0 + 0xA38]
	0x03B9C2DC BL 0x1C16CF4
	0x03B9C2E0 ADRP X0, 0x5C0000
	0x03B9C2E4 LDR X0, [X0 + 0xA40]
	0x03B9C2E8 BL 0x1C16CF4
	0x03B9C2EC ADRP X0, 0x5C0000
	0x03B9C2F0 LDR X0, [X0 + 0x930]
	0x03B9C2F4 BL 0x1C16CF4
	0x03B9C2F8 ADRP X0, 0x5C0000
	0x03B9C2FC LDR X0, [X0 + 0xA48]
	0x03B9C300 BL 0x1C16CF4
	0x03B9C304 ADRP X0, 0x5C0000
	0x03B9C308 LDR X0, [X0 + 0xA50]
	0x03B9C30C BL 0x1C16CF4
	0x03B9C310 ADRP X0, 0x5C0000
	0x03B9C314 LDR X0, [X0 + 0xA58]
	0x03B9C318 BL 0x1C16CF4
	0x03B9C31C ADRP X0, 0x557000
	0x03B9C320 LDR X0, [X0 + 0x598]
	0x03B9C324 BL 0x1C16CF4
	0x03B9C328 ADRP X0, 0x5C0000
	0x03B9C32C LDR X0, [X0 + 0xA60]
	0x03B9C330 BL 0x1C16CF4
	0x03B9C334 ADRP X0, 0x5BF000
	0x03B9C338 LDR X0, [X0 + 0x1C8]
	0x03B9C33C BL 0x1C16CF4
	0x03B9C340 MOVZ W8, 0x1
	0x03B9C344 STRB W8, [X21 + 0xC10]
	0x03B9C348 ADRP X21, 0x5C0000
	0x03B9C34C ADRP X27, 0x5BF000
	0x03B9C350 LDR X21, [X21 + 0xA08]
	0x03B9C354 LDR X27, [X27 + 0x1C8]
	0x03B9C358 MOVI V0.2D, 0x0
	0x03B9C35C MOV X0, X19
	0x03B9C360 MOV X1, X31
	0x03B9C364 STP X31, X31, [X31 + 0x80]
	0x03B9C368 STP X31, X31, [X31 + 0x70]
	0x03B9C36C STP X31, X31, [X31 + 0x30]
	0x03B9C370 STP V0, V0, [X31 + 0x50]
	0x03B9C374 STR X31, [X31 + 0x40]
	0x03B9C378 BL 0x3E59A70
	0x03B9C37C LDR X0, [X20]
	0x03B9C380 LDR W8, [X0 + 0xE0]
	0x03B9C384 CBNZ W8, 0x3B9C38C
	0x03B9C388 BL 0x1C16DFC
	0x03B9C38C LDR X1, [X21]
	0x03B9C390 ADD X0, X31, 0x88
	0x03B9C394 BL 0x28F996C
	0x03B9C398 MOV X8, X0
	0x03B9C39C LDR X0, [X27]
	0x03B9C3A0 STP X8, X1, [X31 + 0x78]
	0x03B9C3A4 LDR W8, [X0 + 0xE0]
	0x03B9C3A8 CBNZ W8, 0x3B9C3B4
	0x03B9C3AC BL 0x1C16DFC
	0x03B9C3B0 LDR X0, [X27]
	0x03B9C3B4 LDR X8, [X0 + 0xB8]
	0x03B9C3B8 LDR X0, [X8 + 0x18]
	0x03B9C3BC CBZ X0, 0x3B9C5B8
	0x03B9C3C0 ADRP X8, 0x5C0000
	0x03B9C3C4 LDR X8, [X8 + 0xA10]
	0x03B9C3C8 LDR X1, [X8]
	0x03B9C3CC ADD X8, X31, 0x8
	0x03B9C3D0 BL 0x2AA54BC
	0x03B9C3D4 ADRP X23, 0x5C0000
	0x03B9C3D8 ADRP X24, 0x557000
	0x03B9C3DC ADRP X28, 0x5C0000
	0x03B9C3E0 ADRP X22, 0x5C0000
	0x03B9C3E4 ADRP X29, 0x5C0000
	0x03B9C3E8 ADRP X26, 0x5C0000
	0x03B9C3EC ADRP X25, 0x5C0000
	0x03B9C3F0 LDR X23, [X23 + 0xA28]
	0x03B9C3F4 LDR X24, [X24 + 0x598]
	0x03B9C3F8 LDR X28, [X28 + 0x930]
	0x03B9C3FC LDR X22, [X22 + 0xA18]
	0x03B9C400 LDR X29, [X29 + 0x920]
	0x03B9C404 LDR X26, [X26 + 0xA48]
	0x03B9C408 LDR X25, [X25 + 0xA30]
	0x03B9C40C LDUR V0, [X31 + 0x8]
	0x03B9C410 LDUR V1, [X31 + 0x18]
	0x03B9C414 LDR X8, [X31 + 0x28]
	0x03B9C418 STP V0, V1, [X31 + 0x50]
	0x03B9C41C STR X8, [X31 + 0x70]
	0x03B9C420 LDR X1, [X23]
	0x03B9C424 ADD X0, X31, 0x50
	0x03B9C428 BL 0x2C0A728
	0x03B9C42C TBZ X0, 0x0, 0x3B9C470
	0x03B9C430 LDR X0, [X24]
	0x03B9C434 LDP X20, X21, [X31 + 0x60]
	0x03B9C438 LDR W8, [X0 + 0xE0]
	0x03B9C43C CBNZ W8, 0x3B9C444
	0x03B9C440 BL 0x1C16DFC
	0x03B9C444 MOV X0, X21
	0x03B9C448 MOV X1, X19
	0x03B9C44C MOV X2, X31
	0x03B9C450 BL 0x3C3883C
	0x03B9C454 TBZ X0, 0x0, 0x3B9C420
	0x03B9C458 LDR X0, [X31 + 0x88]
	0x03B9C45C CBZ X0, 0x3B9C5B4
	0x03B9C460 LDR X2, [X28]
	0x03B9C464 MOV X1, X20
	0x03B9C468 BL 0x2DBEF30
	0x03B9C46C B 0x3B9C420
	0x03B9C470 MOV X20, X31
	0x03B9C474 LDR X1, [X22]
	0x03B9C478 ADD X0, X31, 0x50
	0x03B9C47C BL 0x2C0A83C
	0x03B9C480 CBNZ X20, 0x3B9C5BC
	0x03B9C484 LDR X0, [X27]
	0x03B9C488 LDR W8, [X0 + 0xE0]
	0x03B9C48C CBNZ W8, 0x3B9C498
	0x03B9C490 BL 0x1C16DFC
	0x03B9C494 LDR X0, [X27]
	0x03B9C498 LDR X8, [X0 + 0xB8]
	0x03B9C49C LDR X0, [X8 + 0x20]
	0x03B9C4A0 CBZ X0, 0x3B9C5C4
	0x03B9C4A4 LDR X2, [X29]
	0x03B9C4A8 MOV X1, X19
	0x03B9C4AC BL 0x2AA5018
	0x03B9C4B0 CBZ X0, 0x3B9C5C8
	0x03B9C4B4 LDR X1, [X26]
	0x03B9C4B8 ADD X8, X31, 0x8
	0x03B9C4BC BL 0x2DBE924
	0x03B9C4C0 LDUR V0, [X31 + 0x8]
	0x03B9C4C4 LDR X8, [X31 + 0x18]
	0x03B9C4C8 STR V0, [X31 + 0x3]
	0x03B9C4CC STR X8, [X31 + 0x40]
	0x03B9C4D0 LDR X1, [X25]
	0x03B9C4D4 ADD X0, X31, 0x30
	0x03B9C4D8 BL 0x2BC3C64
	0x03B9C4DC TBZ X0, 0x0, 0x3B9C4F8
	0x03B9C4E0 LDR X0, [X31 + 0x88]
	0x03B9C4E4 CBZ X0, 0x3B9C5B0
	0x03B9C4E8 LDR X1, [X31 + 0x40]
	0x03B9C4EC LDR X2, [X28]
	0x03B9C4F0 BL 0x2DBEF30
	0x03B9C4F4 B 0x3B9C4D0
	0x03B9C4F8 MOV X20, X31
	0x03B9C4FC MOVZ W21, 0x7
	0x03B9C500 ADRP X22, 0x5C0000
	0x03B9C504 LDR X22, [X22 + 0xA20]
	0x03B9C508 LDR X1, [X22]
	0x03B9C50C ADD X0, X31, 0x30
	0x03B9C510 BL 0x2BC3C60
	0x03B9C514 CBNZ X20, 0x3B9C5CC
	0x03B9C518 CMP W21, 0x7
	0x03B9C51C B.EQ 0x3B9C524
	0x03B9C520 CBNZ W21, 0x3B9C57C
	0x03B9C524 LDR X0, [X31 + 0x88]
	0x03B9C528 CBZ X0, 0x3B9C5D4
	0x03B9C52C LDR X1, [X26]
	0x03B9C530 ADD X8, X31, 0x8
	0x03B9C534 BL 0x2DBE924
	0x03B9C538 LDUR V0, [X31 + 0x8]
	0x03B9C53C LDR X8, [X31 + 0x18]
	0x03B9C540 STR V0, [X31 + 0x3]
	0x03B9C544 STR X8, [X31 + 0x40]
	0x03B9C548 LDR X1, [X25]
	0x03B9C54C ADD X0, X31, 0x30
	0x03B9C550 BL 0x2BC3C64
	0x03B9C554 TBZ X0, 0x0, 0x3B9C568
	0x03B9C558 LDR X1, [X31 + 0x40]
	0x03B9C55C MOV X0, X19
	0x03B9C560 BL 0x3B9B868
	0x03B9C564 B 0x3B9C548
	0x03B9C568 MOV X19, X31
	0x03B9C56C LDR X1, [X22]
	0x03B9C570 ADD X0, X31, 0x30
	0x03B9C574 BL 0x2BC3C60
	0x03B9C578 CBNZ X19, 0x3B9C5D8
	0x03B9C57C ADRP X8, 0x5C0000
	0x03B9C580 LDR X8, [X8 + 0xA60]
	0x03B9C584 ADD X0, X31, 0x78
	0x03B9C588 LDR X1, [X8]
	0x03B9C58C BL 0x24A6D20
	0x03B9C590 LDP X20, X19, [X31 + 0xE0]
	0x03B9C594 LDP X22, X21, [X31 + 0xD0]
	0x03B9C598 LDP X24, X23, [X31 + 0xC0]
	0x03B9C59C LDP X26, X25, [X31 + 0xB0]
	0x03B9C5A0 LDP X28, X27, [X31 + 0xA0]
	0x03B9C5A4 LDP X29, X30, [X31 + 0x90]
	0x03B9C5A8 ADD X31, X31, 0xF0
	0x03B9C5AC RET
	0x03B9C5B0 BL 0x1C16F20
	0x03B9C5B4 BL 0x1C16F20
	0x03B9C5B8 BL 0x1C16F20
	0x03B9C5BC MOV X0, X20
	0x03B9C5C0 BL 0x1C16F18
	0x03B9C5C4 BL 0x1C16F20
	0x03B9C5C8 BL 0x1C16F20
	0x03B9C5CC MOV X0, X20
	0x03B9C5D0 BL 0x1C16F18
	0x03B9C5D4 BL 0x1C16F20
	0x03B9C5D8 MOV X0, X19
	0x03B9C5DC BL 0x1C16F18
	0x03B9C5E0 B 0x3B9C608
	0x03B9C5E4 B 0x3B9C608
	0x03B9C5E8 B 0x3B9C608
	0x03B9C5EC B 0x3B9C608
	0x03B9C5F0 B 0x3B9C608
	0x03B9C5F4 B 0x3B9C608
	0x03B9C5F8 B 0x3B9C608
	0x03B9C5FC B 0x3B9C608
	0x03B9C600 B 0x3B9C608
	0x03B9C604 B 0x3B9C608
	0x03B9C608 MOV X21, X1
	0x03B9C60C MOV X23, X0
	0x03B9C610 B 0x3B9C71C
	0x03B9C614 B 0x3B9C6E4
	0x03B9C618 B 0x3B9C6E4
	0x03B9C61C B 0x3B9C6E4
	0x03B9C620 B 0x3B9C624
	0x03B9C624 MOV X21, X1
	0x03B9C628 MOV X23, X0
	0x03B9C62C CMP W21, 0x1
	0x03B9C630 B.NE 0x3B9C650
	0x03B9C634 MOV X0, X23
	0x03B9C638 BL 0x3EB1AD0
	0x03B9C63C LDR X19, [X0]
	0x03B9C640 BL 0x3EB1AE0
	0x03B9C644 ADRP X22, 0x5C0000
	0x03B9C648 LDR X22, [X22 + 0xA20]
	0x03B9C64C B 0x3B9C56C
	0x03B9C650 MOV X19, X31
	0x03B9C654 ADRP X8, 0x5C0000
	0x03B9C658 LDR X8, [X8 + 0xA20]
	0x03B9C65C LDR X1, [X8]
	0x03B9C660 ADD X0, X31, 0x30
	0x03B9C664 BL 0x2BC3C60
	0x03B9C668 CBZ X19, 0x3B9C71C
	0x03B9C66C MOV X0, X19
	0x03B9C670 BL 0x1C16F18
	0x03B9C674 MOV X21, X1
	0x03B9C678 MOV X23, X0
	0x03B9C67C B 0x3B9C654
	0x03B9C680 B 0x3B9C68C
	0x03B9C684 B 0x3B9C68C
	0x03B9C688 B 0x3B9C6E4
	0x03B9C68C MOV X21, X1
	0x03B9C690 MOV X23, X0
	0x03B9C694 CMP W21, 0x1
	0x03B9C698 B.NE 0x3B9C6B4

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 480
	017 Move X20, 0x848000
	018 Move X29, 0x559000
	019 Move W8, [X20+3091]
	020 Move X29, [X29+1432]
	021 Move X21, X2
	022 Move X22, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {78}
	028 Move X0, 0x559000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x5C2000
	032 Move X0, [X0+2320]
	033 Call 0x1C17CF4
	034 Move X0, 0x5C2000
	035 Move X0, [X0+2328]
	036 Call 0x1C17CF4
	037 Move X0, 0x5C2000
	038 Move X0, [X0+2336]
	039 Call 0x1C17CF4
	040 Move X0, 0x5C2000
	041 Move X0, [X0+2344]
	042 Call 0x1C17CF4
	043 Move X0, 0x5C2000
	044 Move X0, [X0+2352]
	045 Call 0x1C17CF4
	046 Move X0, 0x5C2000
	047 Move X0, [X0+2360]
	048 Call 0x1C17CF4
	049 Move X0, 0x5C2000
	050 Move X0, [X0+2368]
	051 Call 0x1C17CF4
	052 Move X0, 0x55D000
	053 Move X0, [X0+2424]
	054 Call 0x1C17CF4
	055 Move X0, 0x5AE000
	056 Move X0, [X0+816]
	057 Call 0x1C17CF4
	058 Move X0, 0x55C000
	059 Move X0, [X0+2432]
	060 Call 0x1C17CF4
	061 Move X0, 0x5AE000
	062 Move X0, [X0+824]
	063 Call 0x1C17CF4
	064 Move X0, 0x558000
	065 Move X0, [X0+1432]
	066 Call 0x1C17CF4
	067 Move X0, 0x5C0000
	068 Move X0, [X0+456]
	069 Call 0x1C17CF4
	070 Move X0, 0x5C0000
	071 Move X0, [X0+600]
	072 Call 0x1C17CF4
	073 Move X0, 0x5C1000
	074 Move X0, [X0+2376]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+3091], W8
	078 Add X0, X31, 136
	079 Move W2, 344
	080 Move W1, W31
	081 Call 0x3EB2B10
	082 Move X0, X19
	083 Move [X31+488], X31
	084 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	085 Move X8, [X29]
	086 Move X20, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X20
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {529}
	100 Move X8, [X19]
	101 Move X0, X19
	102 Move X9, [X8+600]
	103 Move X1, [X8+608]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X8, [X29]
	106 Move X23, X0
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X0, X23
	113 Move X1, X31
	114 Move X2, X31
	115 Call Object.op_Equality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {138}
	120 Move W8, [X19+64]
	121 Compare W8, 0
	122 JumpIfNotEqual {529}
	123 Move X8, 0x558000
	124 Move X8, [X8+2600]
	125 Move X0, [X8]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X8, 0x5C1000
	131 Move X8, [X8+2376]
	132 Move X1, X19
	133 Move X2, X31
	134 Move X0, [X8]
	135 Call Debug.LogWarning, X0, X1
	136 Move W8, 1
	137 Move [X19+64], W8
	138 Compare X22, 0
	139 JumpIfEqual {551}
	140 Move W24, [X22+396]
	141 Move X0, X22
	142 Call TrackedDeviceEventData.get_interactor, X0
	143 Compare X0, 0
	144 JumpIfEqual {488}
	145 Move X10, 0x5C1000
	146 Move X8, [X0]
	147 Move X10, [X10+2368]
	148 Move X20, X0
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Move X1, [X10]
	151 Compare X9, 0
	152 JumpIfEqual {159}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move W2, 1
	160 Move X0, X20
	161 Call 0x1C5D788
	162 Move W9, [X10]
	163 Add W9, W9, 1
	164 Add X8, X8, W9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X2, [X0+8]
	168 Add X1, X31, 136
	169 Move X0, X20
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {488}
	175 Move X28, 0x5C0000
	176 Move X28, [X28+600]
	177 Move X0, [X28]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move W8, [X31+460]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X27, 0x5C0000
	185 Move X27, [X27+456]
	186 Move X0, [X27]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X27]
	192 Move X8, [X0+184]
	193 Move X0, [X8+24]
	194 Compare X0, 0
	195 JumpIfEqual {551}
	196 Move X8, 0x5C1000
	197 Move X8, [X8+2328]
	198 Add X2, X31, 488
	199 Move X1, X20
	200 Move X3, [X8]
	201 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {310}
	206 Move X0, [X29]
	207 Move X25, [X31+488]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move X0, X25
	213 Move X1, X31
	214 Move X2, X31
	215 Call Object.op_Inequality, X0, X1
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {310}
	220 Move X0, [X29]
	221 Move X25, [X31+488]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X25
	227 Move X1, X19
	228 Move X2, X31
	229 Call Object.op_Inequality, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {310}
	234 Move X0, [X31+488]
	235 Compare X0, 0
	236 JumpIfEqual {551}
	237 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	238 Compare X0, 0
	239 JumpIfEqual {551}
	240 Move X1, X31
	241 Call Canvas.get_rootCanvas, X0
	242 Move X25, X0
	243 Move X0, X19
	244 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	245 Compare X0, 0
	246 JumpIfEqual {551}
	247 Move X1, X31
	248 Call Canvas.get_rootCanvas, X0
	249 Move X8, [X29]
	250 Move X26, X0
	251 Move W9, [X8+224]
	252 Compare W9, 0
	253 JumpIfNotEqual {256}
	254 Move X0, X8
	255 Call 0x1C17DFC
	256 Move X0, X25
	257 Move X1, X26
	258 Move X2, X31
	259 Call Object.op_Inequality, X0, X1
	260 Move TEMP, X0
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {529}
	264 Move X0, [X31+488]
	265 Compare X0, 0
	266 JumpIfEqual {551}
	267 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	268 Compare X0, 0
	269 JumpIfEqual {551}
	270 Move X1, X31
	271 Call Canvas.get_rootCanvas, X0
	272 Move X25, X0
	273 Move X0, X19
	274 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	275 Compare X0, 0
	276 JumpIfEqual {551}
	277 Move X1, X31
	278 Call Canvas.get_rootCanvas, X0
	279 Move X8, [X29]
	280 Move X26, X0
	281 Move W9, [X8+224]
	282 Compare W9, 0
	283 JumpIfNotEqual {286}
	284 Move X0, X8
	285 Call 0x1C17DFC
	286 Move X0, X25
	287 Move X1, X26
	288 Move X2, X31
	289 Call Object.op_Equality, X0, X1
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {310}
	294 Move X0, [X31+488]
	295 Compare X0, 0
	296 JumpIfEqual {551}
	297 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	298 Compare X0, 0
	299 JumpIfEqual {551}
	300 Move X1, X31
	301 Call Canvas.get_sortingOrder, X0
	302 Move W25, W0
	303 Move X0, X19
	304 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	305 Compare X0, 0
	306 JumpIfEqual {551}
	307 Move X1, X31
	308 Call Canvas.get_sortingOrder, X0
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X0, [X28]
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Add X0, X31, 136
	316 Call TrackedDeviceModel.get_position, X0
	317 Move V3, [X31+456]
	318 Move X0, X19
	319 Move X1, X24
	320 Move X2, X23
	321 Move X3, X21
	322 Call TrackedDeviceGraphicRaycaster.PerformSpherecast, X0, X1, V0, X2, X3, X4
	323 Move TEMP, X0
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {526}
	327 Compare X21, 0
	328 JumpIfEqual {551}
	329 Move W8, [X21+24]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move W8, 1
	332 Move [X22+392], W8
	333 Move X8, 0x5AE000
	334 Move X8, [X8+824]
	335 Move X0, X21
	336 Move W1, W31
	337 Move X2, [X8]
	338 Add X8, X31, 56
	339 Call List`1<RaycastResult>.get_Item, X0, X1
	340 Move X0, [X31+56]
	341 Compare X0, 0
	342 JumpIfEqual {551}
	343 Move X1, X31
	344 Call GameObject.get_transform, X0
	345 Move X8, [X28]
	346 Move X22, [X19+96]
	347 Move X21, X0
	348 Move W9, [X8+224]
	349 Compare W9, 0
	350 JumpIfNotEqual {353}
	351 Move X0, X8
	352 Call 0x1C17DFC
	353 Compare X22, 0
	354 JumpIfEqual {551}
	355 Move V0, [X31+456]
	356 Move X0, X22
	357 Move X1, X31
	358 Call XRPokeLogic.SetPokeDepth, X0, V0
	359 Move X0, [X27]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {365}
	363 Call 0x1C17DFC
	364 Move X0, [X27]
	365 Move X8, [X0+184]
	366 Move X0, [X8+32]
	367 Compare X0, 0
	368 JumpIfEqual {551}
	369 Move X22, 0x5C1000
	370 Move X22, [X22+2336]
	371 Move X1, X19
	372 Move X2, [X22]
	373 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	374 Compare X0, 0
	375 JumpIfEqual {551}
	376 Move X8, 0x5C1000
	377 Move X8, [X8+2360]
	378 Move X1, X20
	379 Move X2, [X8]
	380 Call HashSet`1<Object>.Contains, X0, X1
	381 Move TEMP, X0
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfEqual {436}
	385 Move X0, [X27]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {391}
	389 Call 0x1C17DFC
	390 Move X0, [X27]
	391 Move X8, [X0+184]
	392 Move X0, [X8+32]
	393 Compare X0, 0
	394 JumpIfEqual {551}
	395 Move X2, [X22]
	396 Move X1, X19
	397 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	398 Compare X0, 0
	399 JumpIfEqual {551}
	400 Move X8, 0x5C1000
	401 Move X8, [X8+2352]
	402 Move X1, X20
	403 Move X2, [X8]
	404 Call HashSet`1<Object>.Add, X0, X1
	405 Move X0, [X28]
	406 Move X22, [X19+96]
	407 Move W8, [X0+224]
	408 Compare W8, 0
	409 JumpIfNotEqual {411}
	410 Call 0x1C17DFC
	411 Add X0, X31, 136
	412 Call TrackedDeviceModel.get_position, X0
	413 Move V3, [X31+336]
	414 Move V4, [X31+340]
	415 Move V5, [X31+344]
	416 Move V6, [X31+348]
	417 Add X0, X31, 56
	418 Move X1, X31
	419 Move [X31+56], X31
	420 Move [X31+64], X31
	421 Move [X31+80], W31
	422 Move [X31+72], X31
	423 Call Pose..ctor, X0, X1, X2
	424 Compare X22, 0
	425 JumpIfEqual {551}
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction LDUR not yet implemented."
	428 Add X2, X31, 16
	429 Move X0, X22
	430 Move X1, X20
	431 Move X3, X21
	432 Move X4, X31
	433 Move [X31+1], V0
	434 Move [X31+28], V1
	435 Call XRPokeLogic.OnHoverEntered, X0, X1, X2, X3
	436 Compare X21, 0
	437 JumpIfEqual {551}
	438 Move X22, [X19+96]
	439 Move X0, X21
	440 Move X1, X31
	441 Call Transform.get_position, X0
	442 Move X0, [X28]
	443 Move V8, V0
	444 Move V9, V1
	445 Move V10, V2
	446 Move W8, [X0+224]
	447 Compare W8, 0
	448 JumpIfNotEqual {450}
	449 Call 0x1C17DFC
	450 Add X0, X31, 136
	451 Call TrackedDeviceModel.get_position, X0
	452 Compare X22, 0
	453 JumpIfEqual {551}
	454 Move V3, V0
	455 Move V4, V1
	456 Move V5, V2
	457 Move S6, W31
	458 Move X0, X22
	459 Move X1, X20
	460 Move V0, V8
	461 Move V1, V9
	462 Move V2, V10
	463 Move X2, X21
	464 Move X3, X31
	465 Call XRPokeLogic.MeetsRequirementsForSelectAction, X0, X1, X2, X3, V0, X4
	466 Move X8, [X27]
	467 Move W21, W0
	468 Move W9, [X8+224]
	469 Compare W9, 0
	470 JumpIfNotEqual {474}
	471 Move X0, X8
	472 Call 0x1C17DFC
	473 Move X8, [X27]
	474 Move X8, [X8+184]
	475 Move X0, [X8+24]
	476 Compare X0, 0
	477 JumpIfEqual {551}
	478 Move TEMP, X21
	479 And TEMP, TEMP, 1
	480 Compare TEMP, 1
	481 JumpIfNotEqual {546}
	482 Move X8, 0x5C1000
	483 Move X8, [X8+2344]
	484 Move X1, X20
	485 Move X2, X19
	486 Move X3, [X8]
	487 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	488 Move X20, [X22+384]
	489 Compare X20, 0
	490 JumpIfEqual {551}
	491 Move W8, [X20+24]
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Move X26, 0x55C000
	494 Move X26, [X26+2432]
	495 Move W25, 1
	496 Move X2, [X26]
	497 Subtract W1, W25, 1
	498 Move X0, X20
	499 Call List`1<Vector3>.get_Item, X0, X1
	500 Move X2, [X26]
	501 Move X0, X20
	502 Move W1, W25
	503 Move V8, V0
	504 Move V9, V1
	505 Move V10, V2
	506 Call List`1<Vector3>.get_Item, X0, X1
	507 Move V3, V0
	508 Move V4, V1
	509 Move V5, V2
	510 Move X0, X19
	511 Move V0, V8
	512 Move V1, V9
	513 Move V2, V10
	514 Move X1, X24
	515 Move X2, X23
	516 Move X3, X21
	517 Call TrackedDeviceGraphicRaycaster.PerformRaycast, X0, X1, X2, X3, X4, X5
	518 Move TEMP, X0
	519 And TEMP, TEMP, 1
	520 Compare TEMP, 1
	521 JumpIfEqual {525}
	522 Move W8, [X20+24]
	523 Add W25, W25, 1
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move [X22+392], W25
	526 Move X0, X19
	527 Move X1, X20
	528 Call TrackedDeviceGraphicRaycaster.EndPokeInteraction, X0, X1
	529 Add X31, X31, 480
	530 Move X20, [X31+112]
	531 Move X19, [X31+120]
	532 Move X22, [X31+96]
	533 Move X21, [X31+104]
	534 Move X24, [X31+80]
	535 Move X23, [X31+88]
	536 Move X26, [X31+64]
	537 Move X25, [X31+72]
	538 Move X28, [X31+48]
	539 Move X27, [X31+56]
	540 Move X29, [X31+32]
	541 Move X30, [X31+40]
	542 Move D9, [X31+16]
	543 Move D8, [X31+24]
	544 Move V10, [X31+128]
	545 Return 
	546 Move X8, 0x5C1000
	547 Move X8, [X8+2320]
	548 Move X1, X20
	549 Move X2, [X8]
	550 Call Dictionary`2<Object, Object>.Remove, X0, X1
	551 Call 0x1C17F20

Method: System.Boolean PerformSpherecast(UnityEngine.Vector3 origin, System.Single radius, UnityEngine.LayerMask layerMask, UnityEngine.Camera currentEventCamera, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03B9D8D4 STP D13, D12, [X31 + 0x80]
	0x03B9D8D8 STP D11, D10, [X31 + 0x90]
	0x03B9D8DC STP D9, D8, [X31 + 0xA0]
	0x03B9D8E0 STP X29, X30, [X31 + 0xB0]
	0x03B9D8E4 STP X28, X27, [X31 + 0xC0]
	0x03B9D8E8 STP X26, X25, [X31 + 0xD0]
	0x03B9D8EC STP X24, X23, [X31 + 0xE0]
	0x03B9D8F0 STP X22, X21, [X31 + 0xF0]
	0x03B9D8F4 STP X20, X19, [X31 + 0x100]
	0x03B9D8F8 ADRP X23, 0x845000
	0x03B9D8FC ADRP X19, 0x5AC000
	0x03B9D900 LDRB W8, [X23 + 0xC18]
	0x03B9D904 LDR X19, [X19 + 0x580]
	0x03B9D908 MOV X25, X4
	0x03B9D90C MOV X20, X3
	0x03B9D910 MOV X24, X2
	0x03B9D914 MOV V8.16B, V0.16B
	0x03B9D918 MOV X21, X1
	0x03B9D91C MOV X22, X0
	0x03B9D920 TBNZ X8, 0x0, 0x3B9D998
	0x03B9D924 ADRP X0, 0x5AC000
	0x03B9D928 LDR X0, [X0 + 0x580]
	0x03B9D92C BL 0x1C16CF4
	0x03B9D930 ADRP X0, 0x5AC000
	0x03B9D934 LDR X0, [X0 + 0x590]
	0x03B9D938 BL 0x1C16CF4
	0x03B9D93C ADRP X0, 0x5AC000
	0x03B9D940 LDR X0, [X0 + 0x598]
	0x03B9D944 BL 0x1C16CF4
	0x03B9D948 ADRP X0, 0x5BF000
	0x03B9D94C LDR X0, [X0 + 0xA98]
	0x03B9D950 BL 0x1C16CF4
	0x03B9D954 ADRP X0, 0x5BF000
	0x03B9D958 LDR X0, [X0 + 0xA78]
	0x03B9D95C BL 0x1C16CF4
	0x03B9D960 ADRP X0, 0x5BF000
	0x03B9D964 LDR X0, [X0 + 0xA80]
	0x03B9D968 BL 0x1C16CF4
	0x03B9D96C ADRP X0, 0x5BF000
	0x03B9D970 LDR X0, [X0 + 0xAA0]
	0x03B9D974 BL 0x1C16CF4
	0x03B9D978 ADRP X0, 0x57F000
	0x03B9D97C LDR X0, [X0 + 0x4F8]
	0x03B9D980 BL 0x1C16CF4
	0x03B9D984 ADRP X0, 0x5BE000
	0x03B9D988 LDR X0, [X0 + 0x1C8]
	0x03B9D98C BL 0x1C16CF4
	0x03B9D990 MOVZ W8, 0x1
	0x03B9D994 STRB W8, [X23 + 0xC18]
	0x03B9D998 LDR X0, [X19]
	0x03B9D99C STR W31, [X31 + 0x38]
	0x03B9D9A0 STR X31, [X31 + 0x30]
	0x03B9D9A4 STR W31, [X31 + 0x7C]
	0x03B9D9A8 ADRP X27, 0x5BE000
	0x03B9D9AC LDR W8, [X0 + 0xE0]
	0x03B9D9B0 LDR X27, [X27 + 0x1C8]
	0x03B9D9B4 CBNZ W8, 0x3B9D9BC
	0x03B9D9B8 BL 0x1C16DFC
	0x03B9D9BC MOV X0, X22
	0x03B9D9C0 MOV X1, X31
	0x03B9D9C4 BL 0x3CDFBC4
	0x03B9D9C8 LDR X8, [X27]
	0x03B9D9CC MOV X22, X0
	0x03B9D9D0 LDR W9, [X8 + 0xE0]
	0x03B9D9D4 CBNZ W9, 0x3B9D9E4
	0x03B9D9D8 MOV X0, X8
	0x03B9D9DC BL 0x1C16DFC
	0x03B9D9E0 LDR X8, [X27]
	0x03B9D9E4 LDR X8, [X8 + 0xB8]
	0x03B9D9E8 LDR X8, [X8 + 0x10]
	0x03B9D9EC CBZ X8, 0x3B9DD44
	0x03B9D9F0 LDP W2, W9, [X8 + 0x18]
	0x03B9D9F4 ADD W9, W9, 0x1
	0x03B9D9F8 CMP W2, 0x1
	0x03B9D9FC STP W31, W9, [X8 + 0x18]
	0x03B9DA00 B.LT 0x3B9DA14
	0x03B9DA04 LDR X0, [X8 + 0x10]
	0x03B9DA08 MOV W1, W31
	0x03B9DA0C MOV X3, X31
	0x03B9DA10 BL 0x339FA34
	0x03B9DA14 STR X25, [X31 + 0x8]
	0x03B9DA18 CBZ X22, 0x3B9DD44
	0x03B9DA1C ADRP X29, 0x5AC000
	0x03B9DA20 ADRP X28, 0x5AC000
	0x03B9DA24 ADRP X19, 0x5BF000
	0x03B9DA28 LDR X29, [X29 + 0x590]
	0x03B9DA2C LDR X28, [X28 + 0x598]
	0x03B9DA30 LDR X19, [X19 + 0xA78]
	0x03B9DA34 MOV W23, W31
	0x03B9DA38 AND X24, X24, 0x0
	0x03B9DA3C LDR X8, [X22]
	0x03B9DA40 LDR X1, [X29]
	0x03B9DA44 LDRH W9, [X8 + 0x12E]
	0x03B9DA48 CBZ X9, 0x3B9DA6C
	0x03B9DA4C LDR X10, [X8 + 0xB0]
	0x03B9DA50 ADD X10, X10, 0x8
	0x03B9DA54 LDUR X11, [X10 - 0x8]
	0x03B9DA58 CMP X11, X1
	0x03B9DA5C B.EQ 0x3B9DA7C
	0x03B9DA60 SUBS X9, X9, 0x1
	0x03B9DA64 ADD X10, X10, 0x10
	0x03B9DA68 B.NE 0x3B9DA54
	0x03B9DA6C MOV X0, X22
	0x03B9DA70 MOV W2, W31
	0x03B9DA74 BL 0x1C5C788
	0x03B9DA78 B 0x3B9DA88
	0x03B9DA7C LDRSW X9, [X10]
	0x03B9DA80 ADD X8, X8, X9, 0x4, LSL
	0x03B9DA84 ADD X0, X8, 0x138
	0x03B9DA88 LDP X8, X1, [X0]
	0x03B9DA8C MOV X0, X22
	0x03B9DA90 BLR X8
	0x03B9DA94 CMP W23, W0
	0x03B9DA98 B.GE 0x3B9DC9C
	0x03B9DA9C LDR X8, [X22]
	0x03B9DAA0 LDR X1, [X28]
	0x03B9DAA4 LDRH W9, [X8 + 0x12E]
	0x03B9DAA8 CBZ X9, 0x3B9DACC
	0x03B9DAAC LDR X10, [X8 + 0xB0]
	0x03B9DAB0 ADD X10, X10, 0x8
	0x03B9DAB4 LDUR X11, [X10 - 0x8]
	0x03B9DAB8 CMP X11, X1
	0x03B9DABC B.EQ 0x3B9DADC
	0x03B9DAC0 SUBS X9, X9, 0x1
	0x03B9DAC4 ADD X10, X10, 0x10
	0x03B9DAC8 B.NE 0x3B9DAB4
	0x03B9DACC MOV X0, X22
	0x03B9DAD0 MOV W2, W31
	0x03B9DAD4 BL 0x1C5C788
	0x03B9DAD8 B 0x3B9DAE8
	0x03B9DADC LDRSW X9, [X10]
	0x03B9DAE0 ADD X8, X8, X9, 0x4, LSL
	0x03B9DAE4 ADD X0, X8, 0x138
	0x03B9DAE8 LDP X8, X2, [X0]
	0x03B9DAEC MOV X0, X22
	0x03B9DAF0 MOV W1, W23
	0x03B9DAF4 BLR X8
	0x03B9DAF8 LDR X8, [X27]
	0x03B9DAFC MOV X25, X0
	0x03B9DB00 LDR W9, [X8 + 0xE0]
	0x03B9DB04 CBNZ W9, 0x3B9DB10
	0x03B9DB08 MOV X0, X8
	0x03B9DB0C BL 0x1C16DFC
	0x03B9DB10 MOV X0, X25
	0x03B9DB14 MOV X1, X24
	0x03B9DB18 BL 0x3B9DD48
	0x03B9DB1C TBZ X0, 0x0, 0x3B9DC94
	0x03B9DB20 CBZ X25, 0x3B9DD44
	0x03B9DB24 LDP S9, S10, [X25 + 0x3C]
	0x03B9DB28 LDP S11, S12, [X25 + 0x44]
	0x03B9DB2C MOV X0, X25
	0x03B9DB30 MOV X1, X31
	0x03B9DB34 BL 0x3CDB488
	0x03B9DB38 LDR X9, [X21 + 0x10]
	0x03B9DB3C LDR V0, [X21]
	0x03B9DB40 LDR X8, [X27]
	0x03B9DB44 MOV X26, X0
	0x03B9DB48 STR X9, [X31 + 0x50]
	0x03B9DB4C STR V0, [X31 + 0x4]
	0x03B9DB50 LDR W9, [X8 + 0xE0]
	0x03B9DB54 CBNZ W9, 0x3B9DB60
	0x03B9DB58 MOV X0, X8
	0x03B9DB5C BL 0x1C16DFC
	0x03B9DB60 LDR V0, [X31 + 0x4]
	0x03B9DB64 LDR X8, [X31 + 0x50]
	0x03B9DB68 ADD X1, X31, 0x10
	0x03B9DB6C ADD X2, X31, 0x30
	0x03B9DB70 STR V0, [X31 + 0x1]
	0x03B9DB74 ADD X3, X31, 0x7C
	0x03B9DB78 MOV X0, X26
	0x03B9DB7C MOV V0.16B, V9.16B
	0x03B9DB80 MOV V1.16B, V10.16B
	0x03B9DB84 MOV V2.16B, V11.16B
	0x03B9DB88 MOV V3.16B, V12.16B
	0x03B9DB8C STR X8, [X31 + 0x20]
	0x03B9DB90 BL 0x3B9E014
	0x03B9DB94 LDR V14, [X31 + 0x7C]
	0x03B9DB98 FCMP S14, S8
	0x03B9DB9C B.HI 0x3B9DC94
	0x03B9DBA0 TBZ X0, 0x0, 0x3B9DC94
	0x03B9DBA4 CBZ X20, 0x3B9DD44
	0x03B9DBA8 LDP S11, S10, [X31 + 0x30]
	0x03B9DBAC LDR V9, [X31 + 0x38]
	0x03B9DBB0 MOV X0, X20
	0x03B9DBB4 MOV X1, X31
	0x03B9DBB8 MOV V0.16B, V11.16B
	0x03B9DBBC MOV V1.16B, V10.16B
	0x03B9DBC0 MOV V2.16B, V9.16B
	0x03B9DBC4 BL 0x3C045DC
	0x03B9DBC8 LDR X8, [X25]
	0x03B9DBCC MOV X0, X25
	0x03B9DBD0 MOV X1, X20
	0x03B9DBD4 MOV V12.16B, V0.16B
	0x03B9DBD8 LDR X9, [X8 + 0x418]
	0x03B9DBDC LDR X2, [X8 + 0x420]
	0x03B9DBE0 MOV V13.16B, V1.16B
	0x03B9DBE4 BLR X9
	0x03B9DBE8 TBZ X0, 0x0, 0x3B9DC94
	0x03B9DBEC LDR X0, [X27]
	0x03B9DBF0 LDR W8, [X0 + 0xE0]
	0x03B9DBF4 CBNZ W8, 0x3B9DC00
	0x03B9DBF8 BL 0x1C16DFC
	0x03B9DBFC LDR X0, [X27]
	0x03B9DC00 LDR X8, [X0 + 0xB8]
	0x03B9DC04 MOV X0, X20
	0x03B9DC08 MOV X1, X31
	0x03B9DC0C LDR X26, [X8 + 0x10]
	0x03B9DC10 BL 0x3C04134
	0x03B9DC14 CBZ X26, 0x3B9DD44
	0x03B9DC18 LDR W10, [X26 + 0x1C]
	0x03B9DC1C LDR X8, [X26 + 0x10]
	0x03B9DC20 LDR X9, [X19]
	0x03B9DC24 ADD W10, W10, 0x1
	0x03B9DC28 STR W10, [X26 + 0x1C]
	0x03B9DC2C CBZ X8, 0x3B9DD44
	0x03B9DC30 LDRSW X10, [X26 + 0x18]
	0x03B9DC34 LDR W11, [X8 + 0x18]
	0x03B9DC38 CMP W10, W11
	0x03B9DC3C B.CS 0x3B9DC68
	0x03B9DC40 MOVZ W11, 0x28
	0x03B9DC44 ADD W9, W10, 0x1
	0x03B9DC48 MADD X8, X10, X11, X8
	0x03B9DC4C STR W9, [X26 + 0x18]
	0x03B9DC50 STR X25, [X8 + 0x20]
	0x03B9DC54 STP S11, S10, [X8 + 0x28]
	0x03B9DC58 STP S9, S12, [X8 + 0x30]
	0x03B9DC5C STP S13, S14, [X8 + 0x38]
	0x03B9DC60 STP W0, W31, [X8 + 0x40]
	0x03B9DC64 B 0x3B9DC94
	0x03B9DC68 LDR X8, [X9 + 0x20]
	0x03B9DC6C ADD X1, X31, 0x40
	0x03B9DC70 LDR X8, [X8 + 0xC0]
	0x03B9DC74 LDR X2, [X8 + 0x70]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+176], D15
	003 Move [X31+184], D14
	004 Move [X31+192], D13
	005 Move [X31+200], D12
	006 Move [X31+208], D11
	007 Move [X31+216], D10
	008 Move [X31+224], D9
	009 Move [X31+232], D8
	010 Move [X31+240], X29
	011 Move [X31+256], X30
	012 Move [X31+264], X25
	013 Move [X31+272], X24
	014 Move [X31+280], X23
	015 Move [X31+288], X22
	016 Move [X31+296], X21
	017 Move [X31+304], X20
	018 Move [X31+312], X19
	019 NotImplemented "Instruction MRS not yet implemented."
	020 Move X8, [X25+40]
	021 Move X23, 0x846000
	022 Move X19, X3
	023 Move X21, X2
	024 Move [X31+168], X8
	025 Move W8, [X23+3092]
	026 Move X22, X1
	027 Move V11, V3
	028 Move V8, V2
	029 Move V9, V1
	030 Move V10, V0
	031 Move X20, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {53}
	036 Move X0, 0x5C0000
	037 Move X0, [X0+2680]
	038 Call 0x1C17CF4
	039 Move X0, 0x5C0000
	040 Move X0, [X0+2688]
	041 Call 0x1C17CF4
	042 Move X0, 0x5C0000
	043 Move X0, [X0+2696]
	044 Call 0x1C17CF4
	045 Move X0, 0x5C0000
	046 Move X0, [X0+2704]
	047 Call 0x1C17CF4
	048 Move X0, 0x5BF000
	049 Move X0, [X0+456]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X23+3092], W8
	053 Move X8, [X20+88]
	054 Compare X8, 0
	055 JumpIfEqual {261}
	056 Move W2, [X8+24]
	057 Move W9, [X8+28]
	058 Move X23, 0x5BF000
	059 Move X23, [X23+456]
	060 Add W9, W9, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X8+24], W31
	063 Move [X8+28], W9
	064 Move X0, [X8+16]
	065 Move W1, W31
	066 Move X3, X31
	067 Call Array.Clear, X0, X1, X2
	068 Move X0, X20
	069 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	070 Move X8, [X23]
	071 Move X23, [X20+88]
	072 Move X24, X0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 And X1, X22, 0
	079 Move X0, X24
	080 Move V0, V10
	081 Move V1, V9
	082 Move V2, V8
	083 Move V3, V11
	084 Move X2, X21
	085 Move X3, X23
	086 Call TrackedDeviceGraphicRaycaster.SortedSpherecastGraphics, X0, X1, V0, X2, X3, X4
	087 Move X0, [X20+88]
	088 Compare X0, 0
	089 JumpIfEqual {261}
	090 Move W8, [X0+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, 0x5C0000
	093 Move X8, [X8+2704]
	094 Move W1, W31
	095 Move X2, [X8]
	096 Add X8, X31, 40
	097 Call List`1<RaycastHitData>.get_Item, X0, X1
	098 Move X22, 0x83C000
	099 Move X21, [X31+40]
	100 Move S12, [X31+48]
	101 Move S14, [X31+52]
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move W8, [X31+76]
	104 Move W9, [X22+1925]
	105 Move V13, [X31+56]
	106 Move [X31+7], V0
	107 Move [X31+128], W8
	108 Compare W9, 0
	109 JumpIfNotEqual {115}
	110 Move X0, 0x557000
	111 Move X0, [X0+1448]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X22+1925], W8
	115 Move X8, 0x557000
	116 Move X8, [X8+1448]
	117 Subtract S11, S12, S10
	118 Move [X31+12], S14
	119 Subtract S15, S14, S9
	120 Move X0, [X8]
	121 Subtract S14, S13, S8
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Multiply S0, S11, S11
	127 Multiply S1, S15, S15
	128 Move X8, -51060736
	129 Add S0, S0, S1
	130 Move V1, [X8+380]
	131 Multiply S2, S14, S14
	132 Add S0, S2, S0
	133 NotImplemented "Instruction FSQRT not yet implemented."
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 NotImplemented "Instruction FDIV not yet implemented."
	136 NotImplemented "Instruction FDIV not yet implemented."
	137 NotImplemented "Instruction FDIV not yet implemented."
	138 Move W0, W31
	139 Move X22, 0x83C000
	140 Move W8, [X22+1923]
	141 Compare W8, 0
	142 JumpIfNotEqual {148}
	143 Move X0, 0x557000
	144 Move X0, [X0+1440]
	145 Call 0x1C17CF4
	146 Move W8, 1
	147 Move [X22+1923], W8
	148 Move X8, 0x557000
	149 Move X8, [X8+1440]
	150 Move X8, [X8]
	151 Move X8, [X8+184]
	152 Move S11, [X8]
	153 Move S15, [X8+4]
	154 Move V14, [X8+8]
	155 Move X0, [X20+88]
	156 Compare X0, 0
	157 JumpIfEqual {261}
	158 Move W2, [X0+24]
	159 Move W8, [X0+28]
	160 Add W8, W8, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X0+24], W31
	163 Move [X0+28], W8
	164 Move X0, [X0+16]
	165 Move W1, W31
	166 Move X3, X31
	167 Call Array.Clear, X0, X1, X2
	168 Move X0, [X20+88]
	169 Move V0, [X31+7]
	170 Move W8, [X31+128]
	171 Move [X31+5], V0
	172 Move [X31+96], W8
	173 Compare X0, 0
	174 JumpIfEqual {261}
	175 Add X8, X31, 80
	176 Move V0, [X31+7]
	177 Move W9, [X31+128]
	178 Add X8, X31, 80
	179 Move [X31+5], V0
	180 Move [X31+96], W9
	181 Move W9, [X8+16]
	182 Move V0, [X8]
	183 Move X10, 0x5C0000
	184 Move X10, [X10+2680]
	185 Move [X31+160], W9
	186 Move [X31+9], V0
	187 Move W11, [X0+28]
	188 Move X8, [X0+16]
	189 Move X9, [X10]
	190 Add W10, W11, 1
	191 Move [X0+28], W10
	192 Compare X8, 0
	193 JumpIfEqual {261}
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Move W11, [X8+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move V0, [X31+12]
	198 Move W11, 40
	199 Add W9, W10, 1
	200 NotImplemented "Instruction MADD not yet implemented."
	201 Move [X0+24], W9
	202 Move [X8+32], X21
	203 Move [X8+40], S12
	204 Move [X8+48], S0
	205 Move [X8+48], S13
	206 Move W9, [X31+160]
	207 Move V0, [X31+9]
	208 Move [X8+68], W9
	209 Move [X8+52], V0
	210 Move X8, [X9+32]
	211 Move V0, [X31+9]
	212 Move W9, [X31+160]
	213 Move V1, [X31+12]
	214 Move X8, [X8+192]
	215 Add X1, X31, 40
	216 Move X2, [X8+112]
	217 Move [X31+40], X21
	218 Move [X31+48], S12
	219 Move [X31+56], S1
	220 Move [X31+56], S13
	221 Move [X31+60], V0
	222 Move [X31+76], W9
	223 Call List`1<RaycastHitData>.AddWithResize, X0, X1
	224 Move X3, [X20+88]
	225 Move W8, 0x7F800000
	226 Add X1, X31, 16
	227 Move S0, W8
	228 Move X0, X20
	229 Move W2, W31
	230 Move X4, X19
	231 Move [X31+16], S10
	232 Move [X31+24], S9
	233 Move [X31+24], S8
	234 Move [X31+32], S11
	235 Move [X31+32], S15
	236 Move [X31+40], S14
	237 Call TrackedDeviceGraphicRaycaster.ProcessSortedHitsResults, X0, X1, V0, X2, X3, X4
	238 Move X8, [X25+40]
	239 Move X9, [X31+168]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X20, [X31+304]
	242 Move X19, [X31+312]
	243 Move X22, [X31+288]
	244 Move X21, [X31+296]
	245 Move X24, [X31+272]
	246 Move X23, [X31+280]
	247 Move X30, [X31+256]
	248 Move X25, [X31+264]
	249 Move X29, [X31+240]
	250 Move D9, [X31+224]
	251 Move D8, [X31+232]
	252 Move D11, [X31+208]
	253 Move D10, [X31+216]
	254 Move D13, [X31+192]
	255 Move D12, [X31+200]
	256 Move D15, [X31+176]
	257 Move D14, [X31+184]
	258 And W0, W0, 1
	259 Add X31, X31, 320
	260 Return X0
	261 Call 0x1C17F20
	262 Call 0x3EB2B20

Method: System.Boolean PerformRaycast(UnityEngine.Vector3 from, UnityEngine.Vector3 to, UnityEngine.LayerMask layerMask, UnityEngine.Camera currentEventCamera, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03B9DC78 STP W0, W31, [X31 + 0x60]
	0x03B9DC7C MOV X0, X26
	0x03B9DC80 STR X25, [X31 + 0x40]
	0x03B9DC84 STP S11, S10, [X31 + 0x48]
	0x03B9DC88 STP S9, S12, [X31 + 0x50]
	0x03B9DC8C STP S13, S14, [X31 + 0x58]
	0x03B9DC90 BL 0x3152798
	0x03B9DC94 ADD W23, W23, 0x1
	0x03B9DC98 B 0x3B9DA3C
	0x03B9DC9C LDR X0, [X27]
	0x03B9DCA0 LDR W8, [X0 + 0xE0]
	0x03B9DCA4 CBNZ W8, 0x3B9DCB0
	0x03B9DCA8 BL 0x1C16DFC
	0x03B9DCAC LDR X0, [X27]
	0x03B9DCB0 ADRP X22, 0x5BF000
	0x03B9DCB4 ADRP X9, 0x57F000
	0x03B9DCB8 LDR X19, [X31 + 0x8]
	0x03B9DCBC LDR X22, [X22 + 0xAA0]
	0x03B9DCC0 LDR X9, [X9 + 0x4F8]
	0x03B9DCC4 LDR X8, [X0 + 0xB8]
	0x03B9DCC8 LDR X0, [X9]
	0x03B9DCCC LDR X20, [X8 + 0x10]
	0x03B9DCD0 LDR X21, [X8]
	0x03B9DCD4 LDR W9, [X0 + 0xE0]
	0x03B9DCD8 CBNZ W9, 0x3B9DCE0
	0x03B9DCDC BL 0x1C16DFC
	0x03B9DCE0 LDR X2, [X22]
	0x03B9DCE4 MOV X0, X20
	0x03B9DCE8 MOV X1, X21
	0x03B9DCEC BL 0x22560D8
	0x03B9DCF0 CBZ X19, 0x3B9DD44
	0x03B9DCF4 LDR X8, [X27]
	0x03B9DCF8 MOV X0, X19
	0x03B9DCFC LDR X8, [X8 + 0xB8]
	0x03B9DD00 LDR X1, [X8 + 0x10]
	0x03B9DD04 ADRP X8, 0x5BF000
	0x03B9DD08 LDR X8, [X8 + 0xA98]
	0x03B9DD0C LDR X2, [X8]
	0x03B9DD10 BL 0x3152A1C
	0x03B9DD14 LDP X20, X19, [X31 + 0x100]
	0x03B9DD18 LDP X22, X21, [X31 + 0xF0]
	0x03B9DD1C LDP X24, X23, [X31 + 0xE0]
	0x03B9DD20 LDP X26, X25, [X31 + 0xD0]
	0x03B9DD24 LDP X28, X27, [X31 + 0xC0]
	0x03B9DD28 LDP X29, X30, [X31 + 0xB0]
	0x03B9DD2C LDP D9, D8, [X31 + 0xA0]
	0x03B9DD30 LDP D11, D10, [X31 + 0x90]
	0x03B9DD34 LDP D13, D12, [X31 + 0x80]
	0x03B9DD38 LDR V14, [X31 + 0x70]
	0x03B9DD3C ADD X31, X31, 0x110
	0x03B9DD40 RET
	0x03B9DD44 BL 0x1C16F20
	0x03B9DD48 STR X30, [X31 - 0x20]!
	0x03B9DD4C STP X20, X19, [X31 + 0x10]
	0x03B9DD50 CBZ X0, 0x3B9DDE4
	0x03B9DD54 MOV X19, X1
	0x03B9DD58 MOV X1, X31
	0x03B9DD5C MOV X20, X0
	0x03B9DD60 BL 0x3CDBD10
	0x03B9DD64 ADDS W31, W0, 0x1
	0x03B9DD68 B.EQ 0x3B9DDA0
	0x03B9DD6C LDR X8, [X20]
	0x03B9DD70 MOV X0, X20
	0x03B9DD74 LDR X9, [X8 + 0x2B8]
	0x03B9DD78 LDR X1, [X8 + 0x2C0]
	0x03B9DD7C BLR X9
	0x03B9DD80 TBZ X0, 0x0, 0x3B9DDA0
	0x03B9DD84 MOV X0, X20
	0x03B9DD88 MOV X1, X31
	0x03B9DD8C BL 0x3CDBD2C
	0x03B9DD90 CBZ X0, 0x3B9DDE4
	0x03B9DD94 MOV X1, X31
	0x03B9DD98 BL 0x3E22628
	0x03B9DD9C TBZ X0, 0x0, 0x3B9DDB0
	0x03B9DDA0 MOV W0, W31
	0x03B9DDA4 LDP X20, X19, [X31 + 0x10]
	0x03B9DDA8 LDR X30, [X31], #0x20
	0x03B9DDAC RET
	0x03B9DDB0 MOV X0, X20
	0x03B9DDB4 MOV X1, X31
	0x03B9DDB8 BL 0x3C32ECC
	0x03B9DDBC CBZ X0, 0x3B9DDE4
	0x03B9DDC0 MOV X1, X31
	0x03B9DDC4 BL 0x3C35734
	0x03B9DDC8 MOV W20, W0
	0x03B9DDCC AND X0, X19, 0x0
	0x03B9DDD0 MOV X1, X31
	0x03B9DDD4 BL 0x3C35CB8
	0x03B9DDD8 LSRV W8, W0, W20
	0x03B9DDDC AND W0, W8, 0x1
	0x03B9DDE0 B 0x3B9DDA4
	0x03B9DDE4 BL 0x1C16F20
	0x03B9DDE8 SUB X31, X31, 0x90
	0x03B9DDEC STP D15, D14, [X31 + 0x20]
	0x03B9DDF0 STP D13, D12, [X31 + 0x30]
	0x03B9DDF4 STP D11, D10, [X31 + 0x40]
	0x03B9DDF8 STP D9, D8, [X31 + 0x50]
	0x03B9DDFC STP X30, X23, [X31 + 0x60]
	0x03B9DE00 STP X22, X21, [X31 + 0x70]
	0x03B9DE04 STP X20, X19, [X31 + 0x80]
	0x03B9DE08 STR S6, [X31 + 0x4]
	0x03B9DE0C ADRP X23, 0x845000
	0x03B9DE10 ADRP X22, 0x5BE000
	0x03B9DE14 LDRB W8, [X23 + 0xC19]
	0x03B9DE18 LDR X22, [X22 + 0x1C8]
	0x03B9DE1C MOV X19, X2
	0x03B9DE20 MOV X20, X1
	0x03B9DE24 MOV V9.16B, V5.16B
	0x03B9DE28 MOV V10.16B, V4.16B
	0x03B9DE2C MOV V11.16B, V3.16B
	0x03B9DE30 MOV V12.16B, V2.16B
	0x03B9DE34 MOV V13.16B, V1.16B
	0x03B9DE38 MOV V14.16B, V0.16B
	0x03B9DE3C MOV X21, X0
	0x03B9DE40 TBNZ X8, 0x0, 0x3B9DE58
	0x03B9DE44 ADRP X0, 0x5BE000
	0x03B9DE48 LDR X0, [X0 + 0x1C8]
	0x03B9DE4C BL 0x1C16CF4
	0x03B9DE50 MOVZ W8, 0x1
	0x03B9DE54 STRB W8, [X23 + 0xC19]
	0x03B9DE58 LDR X0, [X22]
	0x03B9DE5C LDR W8, [X0 + 0xE0]
	0x03B9DE60 CBNZ W8, 0x3B9DE6C
	0x03B9DE64 BL 0x1C16DFC
	0x03B9DE68 LDR X0, [X22]
	0x03B9DE6C LDR X8, [X0 + 0xB8]
	0x03B9DE70 MOV X0, X21
	0x03B9DE74 MOV V0.16B, V14.16B
	0x03B9DE78 MOV V1.16B, V13.16B
	0x03B9DE7C LDR X1, [X8 + 0x8]
	0x03B9DE80 MOV V2.16B, V12.16B
	0x03B9DE84 MOV V3.16B, V11.16B
	0x03B9DE88 BL 0x3B9E0F0
	0x03B9DE8C LDR V4, [X31 + 0x4]
	0x03B9DE90 MOV V11.16B, V0.16B
	0x03B9DE94 MOV V12.16B, V1.16B
	0x03B9DE98 FMUL S0, S10, S0
	0x03B9DE9C FMUL S1, S9, S1
	0x03B9DEA0 MOV V13.16B, V2.16B
	0x03B9DEA4 FMUL S2, S4, S2
	0x03B9DEA8 ADRP X21, 0x83B000
	0x03B9DEAC FADD S0, S0, S1
	0x03B9DEB0 LDRB W8, [X21 + 0x785]
	0x03B9DEB4 FADD S0, S2, S0
	0x03B9DEB8 FADD S0, S3, S0
	0x03B9DEBC FMUL S1, S11, S0
	0x03B9DEC0 FMUL S2, S12, S0
	0x03B9DEC4 FMUL S0, S13, S0
	0x03B9DEC8 FSUB S8, S10, S1
	0x03B9DECC FSUB S14, S9, S2
	0x03B9DED0 FSUB S15, S4, S0
	0x03B9DED4 CBNZ W8, 0x3B9DEFC
	0x03B9DED8 ADRP X0, 0x556000
	0x03B9DEDC LDR X0, [X0 + 0x5A8]
	0x03B9DEE0 STR S9, [X31]
	0x03B9DEE4 MOV V9.16B, V3.16B
	0x03B9DEE8 BL 0x1C16CF4
	0x03B9DEEC MOV V3.16B, V9.16B
	0x03B9DEF0 LDP S9, S4, [X31]
	0x03B9DEF4 MOVZ W8, 0x1
	0x03B9DEF8 STRB W8, [X21 + 0x785]
	0x03B9DEFC ADRP X8, 0x556000
	0x03B9DF00 LDR X8, [X8 + 0x5A8]
	0x03B9DF04 FSUB S8, S8, S10
	0x03B9DF08 FSUB S14, S14, S9
	0x03B9DF0C FSUB S15, S15, S4
	0x03B9DF10 LDR X0, [X8]
	0x03B9DF14 LDR W8, [X0 + 0xE0]
	0x03B9DF18 CBNZ W8, 0x3B9DF30
	0x03B9DF1C STR S9, [X31]
	0x03B9DF20 MOV V9.16B, V3.16B
	0x03B9DF24 BL 0x1C16DFC
	0x03B9DF28 MOV V3.16B, V9.16B
	0x03B9DF2C LDP S9, S4, [X31]
	0x03B9DF30 FMUL S0, S8, S8
	0x03B9DF34 FMUL S1, S14, S14
	0x03B9DF38 ADRP X8, 0xFFFFFFFFFCF4D000
	0x03B9DF3C FADD S0, S0, S1
	0x03B9DF40 LDR V1, [X8 + 0x17C]
	0x03B9DF44 FMUL S2, S15, S15
	0x03B9DF48 FADD S0, S2, S0
	0x03B9DF4C FSQRT S2, S0
	0x03B9DF50 FCMP S2, S1
	0x03B9DF54 B.LE 0x3B9DF68
	0x03B9DF58 FDIV S0, S8, S2
	0x03B9DF5C FDIV S1, S14, S2
	0x03B9DF60 FDIV S2, S15, S2
	0x03B9DF64 B 0x3B9DFAC
	0x03B9DF68 ADRP X21, 0x83B000
	0x03B9DF6C LDRB W8, [X21 + 0x783]
	0x03B9DF70 CBNZ W8, 0x3B9DF94
	0x03B9DF74 ADRP X0, 0x556000
	0x03B9DF78 LDR X0, [X0 + 0x5A0]
	0x03B9DF7C MOV V8.16B, V3.16B
	0x03B9DF80 BL 0x1C16CF4
	0x03B9DF84 LDR V4, [X31 + 0x4]
	0x03B9DF88 MOV V3.16B, V8.16B
	0x03B9DF8C MOVZ W8, 0x1
	0x03B9DF90 STRB W8, [X21 + 0x783]
	0x03B9DF94 ADRP X8, 0x556000
	0x03B9DF98 LDR X8, [X8 + 0x5A0]
	0x03B9DF9C LDR X8, [X8]
	0x03B9DFA0 LDR X8, [X8 + 0xB8]
	0x03B9DFA4 LDP S0, S1, [X8]
	0x03B9DFA8 LDR V2, [X8 + 0x8]
	0x03B9DFAC STP S4, S0, [X31 + 0x10]
	0x03B9DFB0 STP S1, S2, [X31 + 0x18]
	0x03B9DFB4 ADD X0, X31, 0x8
	0x03B9DFB8 MOV V0.16B, V11.16B
	0x03B9DFBC MOV V1.16B, V12.16B
	0x03B9DFC0 MOV V2.16B, V13.16B
	0x03B9DFC4 MOV X1, X20
	0x03B9DFC8 MOV X2, X19
	0x03B9DFCC STP S10, S9, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X29
	011 Move [X31+200], X30
	012 Move [X31+208], X26
	013 Move [X31+216], X25
	014 Move [X31+224], X24
	015 Move [X31+232], X23
	016 Move [X31+240], X22
	017 Move [X31+248], X21
	018 Move [X31+256], X20
	019 Move [X31+264], X19
	020 Move X23, 0x846000
	021 Move W8, [X23+3093]
	022 Move X19, X3
	023 Move X21, X2
	024 Move X22, X1
	025 Move V11, V5
	026 Move V12, V4
	027 Move V13, V3
	028 Move V8, V2
	029 Move V9, V1
	030 Move V10, V0
	031 Move X20, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {44}
	036 Move X0, 0x5C0000
	037 Move X0, [X0+2688]
	038 Call 0x1C17CF4
	039 Move X0, 0x5BF000
	040 Move X0, [X0+456]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+3093], W8
	044 Move X23, 0x83C000
	045 Move W8, [X23+2140]
	046 NotImplemented "Instruction MOVI not yet implemented."
	047 Move [X31+108], V0
	048 Move [X31+80], V0
	049 Move [X31+88], V0
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x557000
	053 Move X0, [X0+1448]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+2140], W8
	057 Move X23, 0x557000
	058 Move X23, [X23+1448]
	059 Subtract S15, S13, S10
	060 Subtract S12, S12, S9
	061 Subtract S13, S11, S8
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X24, 0x83C000
	068 Move W8, [X24+1925]
	069 Multiply S0, S15, S15
	070 Multiply S1, S12, S12
	071 Add S0, S0, S1
	072 Multiply S1, S13, S13
	073 Add S11, S1, S0
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x557000
	077 Move X0, [X0+1448]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X24+1925], W8
	081 Move X0, [X23]
	082 NotImplemented "Instruction FSQRT not yet implemented."
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X8, -51060736
	088 Move V0, [X8+380]
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 NotImplemented "Instruction FDIV not yet implemented."
	092 NotImplemented "Instruction FDIV not yet implemented."
	093 Move X23, 0x83C000
	094 Move W8, [X23+1923]
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x557000
	098 Move X0, [X0+1440]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X23+1923], W8
	102 Move X8, 0x557000
	103 Move X8, [X8+1440]
	104 Move X8, [X8]
	105 Move X8, [X8+184]
	106 Move S11, [X8]
	107 Move S12, [X8+4]
	108 Move V13, [X8+8]
	109 Move X26, 0x5BF000
	110 Move W8, [X20+42]
	111 Move X26, [X26+456]
	112 Compare W8, 0
	113 JumpIfEqual {149}
	114 Move W0, [X20+44]
	115 Move X23, [X20+72]
	116 Move X1, X31
	117 Add X24, X20, 120
	118 Call LayerMask.op_Implicit, X0
	119 Move W3, [X20+48]
	120 Move W2, W0
	121 Move X0, X24
	122 Move V0, V10
	123 Move V1, V9
	124 Move V2, V8
	125 Move V3, V11
	126 Move V4, V12
	127 Move V5, V13
	128 Move X1, X23
	129 Move V6, V14
	130 Move X4, X31
	131 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W23, W0
	134 Move X0, [X26]
	135 Move X24, [X20+72]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Add X8, X31, 80
	141 Move X0, X24
	142 Move W1, W23
	143 Call TrackedDeviceGraphicRaycaster.FindClosestHit, X0, X1
	144 Add X0, X31, 80
	145 Move X1, X31
	146 Call RaycastHit.get_distance, X0
	147 Move V14, V0
	148 Move W23, 1
	149 Move W23, W31
	150 Move W8, [X20+41]
	151 Compare W8, 0
	152 JumpIfEqual {183}
	153 Move W0, [X20+44]
	154 Move X24, [X20+80]
	155 Move X1, X31
	156 Add X25, X20, 124
	157 Call LayerMask.op_Implicit, X0
	158 Move W3, W0
	159 Add X1, X31, 56
	160 Move X0, X25
	161 Move V0, V14
	162 Move X2, X24
	163 Move X4, X31
	164 Move [X31+56], S10
	165 Move [X31+64], S9
	166 Move [X31+64], S8
	167 Move [X31+72], S11
	168 Move [X31+72], S12
	169 Move [X31+80], S13
	170 Call PhysicsScene2D.GetRayIntersection, X0, X1, V0, X2, X3
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X8, [X20+80]
	173 Compare X8, 0
	174 JumpIfEqual {253}
	175 Move W9, [X8+24]
	176 Compare W9, 0
	177 JumpIfEqual {254}
	178 Add X0, X8, 32
	179 Move X1, X31
	180 Call RaycastHit2D.get_distance, X0
	181 Move V14, V0
	182 Move W23, 1
	183 Move X8, [X20+88]
	184 Compare X8, 0
	185 JumpIfEqual {253}
	186 Move W2, [X8+24]
	187 Move W9, [X8+28]
	188 Add W9, W9, 1
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X8+24], W31
	191 Move [X8+28], W9
	192 Move X0, [X8+16]
	193 Move W1, W31
	194 Move X3, X31
	195 Call Array.Clear, X0, X1, X2
	196 Move X0, X20
	197 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	198 Move X8, [X26]
	199 Move X24, [X20+88]
	200 Move X25, X0
	201 Move W9, [X8+224]
	202 Compare W9, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X8
	205 Call 0x1C17DFC
	206 And X2, X22, 0
	207 Add X1, X31, 32
	208 Move X0, X25
	209 Move V0, V14
	210 Move X3, X21
	211 Move X4, X24
	212 Move [X31+32], S10
	213 Move [X31+40], S9
	214 Move [X31+40], S8
	215 Move [X31+48], S11
	216 Move [X31+48], S12
	217 Move [X31+56], S13
	218 Call TrackedDeviceGraphicRaycaster.SortedRaycastGraphics, X0, X1, V0, X2, X3, X4
	219 Move X3, [X20+88]
	220 Add X1, X31, 8
	221 Move X0, X20
	222 Move V0, V14
	223 Move W2, W23
	224 Move X4, X19
	225 Move [X31+8], S10
	226 Move [X31+16], S9
	227 Move [X31+16], S8
	228 Move [X31+24], S11
	229 Move [X31+24], S12
	230 Move [X31+32], S13
	231 Call TrackedDeviceGraphicRaycaster.ProcessSortedHitsResults, X0, X1, V0, X2, X3, X4
	232 Move X20, [X31+256]
	233 Move X19, [X31+264]
	234 Move X22, [X31+240]
	235 Move X21, [X31+248]
	236 Move X24, [X31+224]
	237 Move X23, [X31+232]
	238 Move X26, [X31+208]
	239 Move X25, [X31+216]
	240 Move X29, [X31+192]
	241 Move X30, [X31+200]
	242 Move D9, [X31+176]
	243 Move D8, [X31+184]
	244 Move D11, [X31+160]
	245 Move D10, [X31+168]
	246 Move D13, [X31+144]
	247 Move D12, [X31+152]
	248 Move D15, [X31+128]
	249 Move D14, [X31+136]
	250 And W0, W0, 1
	251 Add X31, X31, 272
	252 Return X0
	253 Call 0x1C17F20
	254 Call 0x1C17F28

Method: System.Boolean ProcessSortedHitsResults(UnityEngine.Ray ray, System.Single hitDistance, System.Boolean hitSomething, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/RaycastHitData> raycastHitDatums, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03B9E430 LDR V16, [X8 + 0x4C]
	0x03B9E434 FSUB S2, S6, S2
	0x03B9E438 FSUB S0, S7, S0
	0x03B9E43C FSUB S1, S16, S1
	0x03B9E440 FMUL S2, S4, S2
	0x03B9E444 FMUL S0, S5, S0
	0x03B9E448 FADD S0, S2, S0
	0x03B9E44C FMUL S1, S3, S1
	0x03B9E450 FADD S0, S1, S0
	0x03B9E454 FCMP S0, 0x0
	0x03B9E458 B.LT 0x3B9E464
	0x03B9E45C MOVZ W0, 0x1
	0x03B9E460 B 0x3B9E4A4
	0x03B9E464 ADRP X21, 0x83A000
	0x03B9E468 LDRB W8, [X21 + 0x783]
	0x03B9E46C CBNZ W8, 0x3B9E484
	0x03B9E470 ADRP X0, 0x555000
	0x03B9E474 LDR X0, [X0 + 0x5A0]
	0x03B9E478 BL 0x1C16CF4
	0x03B9E47C MOVZ W8, 0x1
	0x03B9E480 STRB W8, [X21 + 0x783]
	0x03B9E484 ADRP X8, 0x555000
	0x03B9E488 LDR X8, [X8 + 0x5A0]
	0x03B9E48C MOV W0, W31
	0x03B9E490 FMOV S8, W31
	0x03B9E494 LDR X8, [X8]
	0x03B9E498 LDR X8, [X8 + 0xB8]
	0x03B9E49C LDP S9, S10, [X8]
	0x03B9E4A0 LDR V11, [X8 + 0x8]
	0x03B9E4A4 STP S9, S10, [X20]
	0x03B9E4A8 STR S11, [X20 + 0x8]
	0x03B9E4AC STR S8, [X19]
	0x03B9E4B0 LDP X20, X19, [X31 + 0x60]
	0x03B9E4B4 LDP X22, X21, [X31 + 0x50]
	0x03B9E4B8 LDR X30, [X31 + 0x40]
	0x03B9E4BC LDP D9, D8, [X31 + 0x30]
	0x03B9E4C0 LDP D11, D10, [X31 + 0x20]
	0x03B9E4C4 LDP D13, D12, [X31 + 0x10]
	0x03B9E4C8 LDP D15, D14, [X31], #0x70
	0x03B9E4CC RET
	0x03B9E4D0 BL 0x1C16F28
	0x03B9E4D4 BL 0x1C16F20
	0x03B9E4D8 SUB X31, X31, 0xC0
	0x03B9E4DC STP D11, D10, [X31 + 0x80]
	0x03B9E4E0 STP D9, D8, [X31 + 0x90]
	0x03B9E4E4 STP X30, X21, [X31 + 0xA0]
	0x03B9E4E8 STP X20, X19, [X31 + 0xB0]
	0x03B9E4EC ADRP X21, 0x844000
	0x03B9E4F0 LDRB W8, [X21 + 0xC1D]
	0x03B9E4F4 MOV X19, X1
	0x03B9E4F8 MOV V9.16B, V3.16B
	0x03B9E4FC MOV V8.16B, V2.16B
	0x03B9E500 MOV V10.16B, V1.16B
	0x03B9E504 MOV V11.16B, V0.16B
	0x03B9E508 MOV X20, X0
	0x03B9E50C TBNZ X8, 0x0, 0x3B9E530
	0x03B9E510 ADRP X0, 0x555000
	0x03B9E514 LDR X0, [X0 + 0xA28]
	0x03B9E518 BL 0x1C16CF4
	0x03B9E51C ADRP X0, 0x5BE000
	0x03B9E520 LDR X0, [X0 + 0xAC8]
	0x03B9E524 BL 0x1C16CF4
	0x03B9E528 MOVZ W8, 0x1
	0x03B9E52C STRB W8, [X21 + 0xC1D]
	0x03B9E530 MOVI V0.2D, 0x0
	0x03B9E534 STP V0, V0, [X31 + 0x60]
	0x03B9E538 STP V0, V0, [X31 + 0x40]
	0x03B9E53C CBZ X19, 0x3B9E620
	0x03B9E540 LDR W8, [X19 + 0x18]
	0x03B9E544 CMP W8, 0x3
	0x03B9E548 B.LE 0x3B9E620
	0x03B9E54C CBZ X20, 0x3B9E668
	0x03B9E550 MOV X0, X20
	0x03B9E554 MOV X1, X31
	0x03B9E558 BL 0x3C3E51C
	0x03B9E55C LDR W8, [X19 + 0x18]
	0x03B9E560 CBZ W8, 0x3B9E664
	0x03B9E564 FADD S5, S11, S0
	0x03B9E568 FADD S4, S10, S1
	0x03B9E56C CMP W8, 0x1
	0x03B9E570 STP S5, S4, [X19 + 0x20]
	0x03B9E574 STR W31, [X19 + 0x28]
	0x03B9E578 B.EQ 0x3B9E664
	0x03B9E57C FADD S1, S3, S1
	0x03B9E580 CMP W8, 0x2
	0x03B9E584 FSUB S1, S1, S9
	0x03B9E588 STP S5, S1, [X19 + 0x2C]
	0x03B9E58C STR W31, [X19 + 0x34]
	0x03B9E590 B.LS 0x3B9E664
	0x03B9E594 FADD S0, S2, S0
	0x03B9E598 CMP W8, 0x3
	0x03B9E59C FSUB S0, S0, S8
	0x03B9E5A0 STP S0, S1, [X19 + 0x38]
	0x03B9E5A4 STR W31, [X19 + 0x40]
	0x03B9E5A8 B.EQ 0x3B9E664
	0x03B9E5AC ADD X8, X31, 0x0
	0x03B9E5B0 MOV X0, X20
	0x03B9E5B4 MOV X1, X31
	0x03B9E5B8 STP S0, S4, [X19 + 0x44]
	0x03B9E5BC STR W31, [X19 + 0x4C]
	0x03B9E5C0 BL 0x3C3F1C8
	0x03B9E5C4 LDP V0, V1, [X31]
	0x03B9E5C8 LDP V2, V3, [X31 + 0x20]
	0x03B9E5CC MOV X20, X31
	0x03B9E5D0 ADD X21, X19, 0x28
	0x03B9E5D4 STP V0, V1, [X31 + 0x40]
	0x03B9E5D8 STP V2, V3, [X31 + 0x60]
	0x03B9E5DC LDR W8, [X19 + 0x18]
	0x03B9E5E0 CMP X20, W8, UXTW
	0x03B9E5E4 B.CS 0x3B9E664
	0x03B9E5E8 LDP S0, S1, [X21 - 0x8]
	0x03B9E5EC LDR V2, [X21]
	0x03B9E5F0 ADD X0, X31, 0x40
	0x03B9E5F4 MOV X1, X31
	0x03B9E5F8 BL 0x3C281F8
	0x03B9E5FC LDR W8, [X19 + 0x18]
	0x03B9E600 CMP X20, X8
	0x03B9E604 B.CS 0x3B9E664
	0x03B9E608 ADD X20, X20, 0x1
	0x03B9E60C STP S0, S1, [X21 - 0x8]
	0x03B9E610 STR S2, [X21], #0xC
	0x03B9E614 CMP X20, 0x4
	0x03B9E618 B.NE 0x3B9E5E0
	0x03B9E61C B 0x3B9E64C
	0x03B9E620 ADRP X8, 0x555000
	0x03B9E624 LDR X8, [X8 + 0xA28]
	0x03B9E628 ADRP X19, 0x5BE000
	0x03B9E62C LDR X0, [X8]
	0x03B9E630 LDR W8, [X0 + 0xE0]
	0x03B9E634 LDR X19, [X19 + 0xAC8]
	0x03B9E638 CBNZ W8, 0x3B9E640
	0x03B9E63C BL 0x1C16DFC
	0x03B9E640 LDR X0, [X19]
	0x03B9E644 MOV X1, X31
	0x03B9E648 BL 0x3C0649C
	0x03B9E64C LDP X20, X19, [X31 + 0xB0]
	0x03B9E650 LDP X30, X21, [X31 + 0xA0]
	0x03B9E654 LDP D9, D8, [X31 + 0x90]
	0x03B9E658 LDP D11, D10, [X31 + 0x80]
	0x03B9E65C ADD X31, X31, 0xC0
	0x03B9E660 RET
	0x03B9E664 BL 0x1C16F28
	0x03B9E668 BL 0x1C16F20
	0x03B9E66C RET
	0x03B9E670 STP X30, X27, [X31 - 0x50]!
	0x03B9E674 STP X26, X25, [X31 + 0x10]
	0x03B9E678 STP X24, X23, [X31 + 0x20]
	0x03B9E67C STP X22, X21, [X31 + 0x30]
	0x03B9E680 STP X20, X19, [X31 + 0x40]
	0x03B9E684 ADRP X27, 0x844000
	0x03B9E688 ADRP X26, 0x55B000
	0x03B9E68C ADRP X25, 0x55F000
	0x03B9E690 ADRP X24, 0x5BE000
	0x03B9E694 ADRP X20, 0x5BE000
	0x03B9E698 ADRP X23, 0x5BE000
	0x03B9E69C ADRP X22, 0x5BE000
	0x03B9E6A0 ADRP X21, 0x5BC000
	0x03B9E6A4 LDR X26, [X26 + 0x488]
	0x03B9E6A8 LDR X25, [X25 + 0xE00]
	0x03B9E6AC LDRB W8, [X27 + 0xC1E]
	0x03B9E6B0 LDR X24, [X24 + 0xAD0]
	0x03B9E6B4 LDR X20, [X20 + 0xAD8]
	0x03B9E6B8 LDR X23, [X23 + 0xAE0]
	0x03B9E6BC LDR X22, [X22 + 0xAE8]
	0x03B9E6C0 LDR X21, [X21 + 0xA88]
	0x03B9E6C4 MOV X19, X0
	0x03B9E6C8 TBNZ X8, 0x0, 0x3B9E728
	0x03B9E6CC ADRP X0, 0x5BC000
	0x03B9E6D0 LDR X0, [X0 + 0xA88]
	0x03B9E6D4 BL 0x1C16CF4
	0x03B9E6D8 ADRP X0, 0x5BE000
	0x03B9E6DC LDR X0, [X0 + 0xAE8]
	0x03B9E6E0 BL 0x1C16CF4
	0x03B9E6E4 ADRP X0, 0x5BE000
	0x03B9E6E8 LDR X0, [X0 + 0xAE0]
	0x03B9E6EC BL 0x1C16CF4
	0x03B9E6F0 ADRP X0, 0x5BE000
	0x03B9E6F4 LDR X0, [X0 + 0xAD8]
	0x03B9E6F8 BL 0x1C16CF4
	0x03B9E6FC ADRP X0, 0x5BE000
	0x03B9E700 LDR X0, [X0 + 0xAD0]
	0x03B9E704 BL 0x1C16CF4
	0x03B9E708 ADRP X0, 0x55F000
	0x03B9E70C LDR X0, [X0 + 0xE00]
	0x03B9E710 BL 0x1C16CF4
	0x03B9E714 ADRP X0, 0x55B000
	0x03B9E718 LDR X0, [X0 + 0x488]
	0x03B9E71C BL 0x1C16CF4
	0x03B9E720 MOVZ W8, 0x1
	0x03B9E724 STRB W8, [X27 + 0xC1E]
	0x03B9E728 MOVN W0, 0x0
	0x03B9E72C MOV X1, X31
	0x03B9E730 BL 0x3C35CBC
	0x03B9E734 MOVZ W8, 0x1
	0x03B9E738 STP W0, W8, [X19 + 0x2C]
	0x03B9E73C LDR X0, [X26]
	0x03B9E740 MOVZ W1, 0xA
	0x03B9E744 BL 0x1C16D6C
	0x03B9E748 STR X0, [X19 + 0x48]
	0x03B9E74C LDR X0, [X25]
	0x03B9E750 MOVZ W1, 0x1
	0x03B9E754 BL 0x1C16D6C
	0x03B9E758 STR X0, [X19 + 0x50]
	0x03B9E75C LDR X0, [X24]
	0x03B9E760 BL 0x1C16F10
	0x03B9E764 LDR X1, [X20]
	0x03B9E768 MOV X20, X0
	0x03B9E76C BL 0x3151EF0
	0x03B9E770 STR X20, [X19 + 0x58]
	0x03B9E774 LDR X0, [X23]
	0x03B9E778 BL 0x1C16F10
	0x03B9E77C LDR X1, [X22]
	0x03B9E780 MOV X20, X0
	0x03B9E784 BL 0x2AA4804
	0x03B9E788 STR X20, [X19 + 0x68]
	0x03B9E78C LDR X0, [X21]
	0x03B9E790 BL 0x1C16F10
	0x03B9E794 MOV X1, X31
	0x03B9E798 MOV X20, X0
	0x03B9E79C BL 0x3B31C38
	0x03B9E7A0 STR X20, [X19 + 0x70]
	0x03B9E7A4 MOV X0, X19
	0x03B9E7A8 LDP X20, X19, [X31 + 0x40]
	0x03B9E7AC LDP X22, X21, [X31 + 0x30]
	0x03B9E7B0 LDP X24, X23, [X31 + 0x20]
	0x03B9E7B4 LDP X26, X25, [X31 + 0x10]
	0x03B9E7B8 MOV X1, X31
	0x03B9E7BC LDP X30, X27, [X31], #0x50
	0x03B9E7C0 B 0x3E4EB28
	0x03B9E7C4 STR X30, [X31 - 0x60]!
	0x03B9E7C8 STP X28, X27, [X31 + 0x10]
	0x03B9E7CC STP X26, X25, [X31 + 0x20]
	0x03B9E7D0 STP X24, X23, [X31 + 0x30]
	0x03B9E7D4 STP X22, X21, [X31 + 0x40]
	0x03B9E7D8 STP X20, X19, [X31 + 0x50]
	0x03B9E7DC ADRP X19, 0x844000
	0x03B9E7E0 ADRP X28, 0x5BE000
	0x03B9E7E4 ADRP X20, 0x5BD000
	0x03B9E7E8 ADRP X27, 0x557000
	0x03B9E7EC ADRP X26, 0x5BE000
	0x03B9E7F0 ADRP X25, 0x5BE000
	0x03B9E7F4 ADRP X24, 0x5BE000
	0x03B9E7F8 ADRP X23, 0x5BE000
	0x03B9E7FC ADRP X22, 0x5BE000
	0x03B9E800 ADRP X21, 0x5BE000
	0x03B9E804 LDR X28, [X28 + 0xAF0]
	0x03B9E808 LDR X20, [X20 + 0x1C8]
	0x03B9E80C LDR X27, [X27 + 0x9B0]
	0x03B9E810 LDR X26, [X26 + 0xAD0]
	0x03B9E814 LDRB W8, [X19 + 0xC1F]
	0x03B9E818 LDR X25, [X25 + 0xAD8]
	0x03B9E81C LDR X24, [X24 + 0xAF8]
	0x03B9E820 LDR X23, [X23 + 0xB00]
	0x03B9E824 LDR X22, [X22 + 0xB08]
	0x03B9E828 LDR X21, [X21 + 0xB10]
	0x03B9E82C TBNZ X8, 0x0, 0x3B9E8A4
	0x03B9E830 ADRP X0, 0x5BE000
	0x03B9E834 LDR X0, [X0 + 0xB00]
	0x03B9E838 BL 0x1C16CF4
	0x03B9E83C ADRP X0, 0x5BE000
	0x03B9E840 LDR X0, [X0 + 0xB10]
	0x03B9E844 BL 0x1C16CF4
	0x03B9E848 ADRP X0, 0x5BE000
	0x03B9E84C LDR X0, [X0 + 0xAF8]
	0x03B9E850 BL 0x1C16CF4
	0x03B9E854 ADRP X0, 0x5BE000
	0x03B9E858 LDR X0, [X0 + 0xB08]
	0x03B9E85C BL 0x1C16CF4
	0x03B9E860 ADRP X0, 0x5BE000
	0x03B9E864 LDR X0, [X0 + 0xAD8]
	0x03B9E868 BL 0x1C16CF4
	0x03B9E86C ADRP X0, 0x5BE000
	0x03B9E870 LDR X0, [X0 + 0xAD0]
	0x03B9E874 BL 0x1C16CF4
	0x03B9E878 ADRP X0, 0x5BE000
	0x03B9E87C LDR X0, [X0 + 0xAF0]
	0x03B9E880 BL 0x1C16CF4
	0x03B9E884 ADRP X0, 0x5BD000
	0x03B9E888 LDR X0, [X0 + 0x1C8]
	0x03B9E88C BL 0x1C16CF4
	0x03B9E890 ADRP X0, 0x557000
	0x03B9E894 LDR X0, [X0 + 0x9B0]
	0x03B9E898 BL 0x1C16CF4
	0x03B9E89C MOVZ W8, 0x1
	0x03B9E8A0 STRB W8, [X19 + 0xC1F]
	0x03B9E8A4 LDR X0, [X28]
	0x03B9E8A8 BL 0x1C16F10
	0x03B9E8AC MOV X1, X31
	0x03B9E8B0 MOV X19, X0
	0x03B9E8B4 BL 0x33BDD8C
	0x03B9E8B8 LDR X8, [X20]
	0x03B9E8BC MOVZ W1, 0x4
	0x03B9E8C0 LDR X8, [X8 + 0xB8]
	0x03B9E8C4 STR X19, [X8]
	0x03B9E8C8 LDR X0, [X27]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+192], D15
	003 Move [X31+200], D14
	004 Move [X31+208], D13
	005 Move [X31+216], D12
	006 Move [X31+224], D11
	007 Move [X31+232], D10
	008 Move [X31+240], D9
	009 Move [X31+248], D8
	010 Move [X31+256], X29
	011 Move [X31+264], X30
	012 Move [X31+272], X28
	013 Move [X31+280], X27
	014 Move [X31+288], X26
	015 Move [X31+296], X25
	016 Move [X31+304], X24
	017 Move [X31+312], X23
	018 Move [X31+320], X22
	019 Move [X31+328], X21
	020 Move [X31+336], X20
	021 Move [X31+344], X19
	022 Move X19, 0x845000
	023 Move W8, [X19+3094]
	024 Move X20, X4
	025 Move X23, X3
	026 Move W24, W2
	027 Move X21, X1
	028 Move X22, X0
	029 Move [X31+44], S0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {54}
	034 Move X0, 0x5BF000
	035 Move X0, [X0+2728]
	036 Call 0x1C17CF4
	037 Move X0, 0x5BF000
	038 Move X0, [X0+2736]
	039 Call 0x1C17CF4
	040 Move X0, 0x5BF000
	041 Move X0, [X0+2744]
	042 Call 0x1C17CF4
	043 Move X0, 0x5AC000
	044 Move X0, [X0+856]
	045 Call 0x1C17CF4
	046 Move X0, 0x5BF000
	047 Move X0, [X0+2752]
	048 Call 0x1C17CF4
	049 Move X0, 0x5AC000
	050 Move X0, [X0+816]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+3094], W8
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move [X31+96], X31
	056 Move [X31+64], V0
	057 Move [X31+72], V0
	058 Move [X31+3], V0
	059 Compare X23, 0
	060 JumpIfEqual {295}
	061 Move X8, 0x5BF000
	062 Move X8, [X8+2752]
	063 Move X29, 0x5BF000
	064 Move X0, X23
	065 Move X1, [X8]
	066 Move X29, [X29+2736]
	067 Add X8, X31, 112
	068 Call List`1<RaycastHitData>.GetEnumerator, X0
	069 Move V0, [X31+112]
	070 Move V1, [X31+128]
	071 Move V2, [X31+9]
	072 Move X8, [X31+160]
	073 Move X23, 0x556000
	074 Move X23, [X23+1440]
	075 Move X27, 0x83B000
	076 Move [X31+48], V0
	077 Move [X31+56], V1
	078 Move [X31+5], V2
	079 Move [X31+96], X8
	080 Move W19, 1
	081 Move [X31+16], W24
	082 Move [X31+20], W24
	083 Move X1, [X29]
	084 Add X0, X31, 48
	085 Call Enumerator<RaycastHitData>.MoveNext, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {263}
	090 Move X25, [X31+64]
	091 Compare X25, 0
	092 JumpIfEqual {292}
	093 Move V1, [X31+72]
	094 Move V0, [X31+76]
	095 Move W28, [X31+96]
	096 Move [X31+24], S1
	097 Move [X31+32], S0
	098 Move V1, [X31+80]
	099 Move V0, [X31+84]
	100 Move [X31+32], S1
	101 Move [X31+40], S0
	102 Move S0, [X31+88]
	103 Move S14, [X31+92]
	104 Move [X31+40], S0
	105 Move X0, X25
	106 Move X1, X31
	107 Call Component.get_gameObject, X0
	108 Move W8, [X22+40]
	109 Move X24, X0
	110 Compare W8, 0
	111 JumpIfEqual {152}
	112 Compare X24, 0
	113 JumpIfEqual {293}
	114 Move S8, [X21+12]
	115 Move S13, [X21+16]
	116 Move V15, [X21+20]
	117 Move X0, X24
	118 Move X1, X31
	119 Call GameObject.get_transform, X0
	120 Compare X0, 0
	121 JumpIfEqual {294}
	122 Move X1, X31
	123 Call Transform.get_rotation, X0
	124 Move W8, [X27+2591]
	125 Move V9, V0
	126 Move V10, V1
	127 Move V11, V2
	128 Move V12, V3
	129 Compare W8, 0
	130 JumpIfNotEqual {134}
	131 Move X0, X23
	132 Call 0x1C17CF4
	133 Move [X27+2591], W19
	134 Move X8, [X23]
	135 Move X8, [X8+184]
	136 Move S4, [X8+72]
	137 Move S5, [X8+76]
	138 Move V6, [X8+80]
	139 Move V0, V9
	140 Move V1, V10
	141 Move V2, V11
	142 Move V3, V12
	143 Move X0, X31
	144 Call Quaternion.op_Multiply, X0, X1
	145 Multiply S0, S8, S0
	146 Multiply S1, S13, S1
	147 Add S0, S0, S1
	148 Multiply S1, S15, S2
	149 Add S0, S1, S0
	150 NotImplemented "Instruction FCMP not yet implemented."
	151 NotImplemented "Instruction CSET not yet implemented."
	152 Move W8, 1
	153 Move V0, [X31+44]
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 Move TEMP, X8
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {83}
	159 Compare X24, 0
	160 JumpIfEqual {301}
	161 Move X0, X24
	162 Move X1, X31
	163 Call GameObject.get_transform, X0
	164 Compare X0, 0
	165 JumpIfEqual {300}
	166 Move X1, X31
	167 Call Transform.get_forward, X0
	168 Compare X20, 0
	169 JumpIfEqual {299}
	170 Move V12, [X20+24]
	171 Move V9, V0
	172 Move V10, V1
	173 Move V11, V2
	174 Move X0, X25
	175 Move X1, X31
	176 Call Graphic.get_depth, X0
	177 Move W25, W0
	178 Move X0, X22
	179 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	180 Compare X0, 0
	181 JumpIfEqual {297}
	182 Move X1, X31
	183 Call Canvas.get_sortingLayerID, X0
	184 Move W26, W0
	185 Move X0, X22
	186 Call TrackedDeviceGraphicRaycaster.get_canvas, X0
	187 Compare X0, 0
	188 JumpIfEqual {298}
	189 Move X1, X31
	190 Call Canvas.get_sortingOrder, X0
	191 Move X9, 0x5AC000
	192 Move W10, [X20+28]
	193 Move X8, [X20+16]
	194 Move X9, [X9+856]
	195 Add W10, W10, 1
	196 Move X9, [X9]
	197 Move [X20+28], W10
	198 Compare X8, 0
	199 JumpIfEqual {296}
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Move W11, [X8+24]
	202 NotImplemented "Instruction SCVTF not yet implemented."
	203 NotImplemented "Instruction FNEG not yet implemented."
	204 NotImplemented "Instruction FNEG not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction FNEG not yet implemented."
	207 Move W11, 80
	208 Add W9, W10, 1
	209 NotImplemented "Instruction MADD not yet implemented."
	210 Move [X20+24], W9
	211 Move [X8+48], S14
	212 Move [X8+56], S3
	213 Move V4, [X31+24]
	214 Move V3, [X31+28]
	215 Move [X8+92], S1
	216 Move [X8+100], S0
	217 Move V0, [X31+40]
	218 Move [X8+32], X24
	219 Move [X8+40], X22
	220 Move [X8+76], S4
	221 Move [X8+84], S3
	222 Move V3, [X31+32]
	223 Move V4, [X31+36]
	224 Move [X8+56], W25
	225 Move [X8+60], X31
	226 Move [X8+68], W26
	227 Move [X8+72], W0
	228 Move [X8+84], S3
	229 Move [X8+92], S2
	230 Move [X8+100], S4
	231 Move [X8+108], S0
	232 Move [X8+108], W28
	233 Move X8, [X9+32]
	234 Move V4, [X31+24]
	235 Move X8, [X8+192]
	236 Move X2, [X8+112]
	237 Move [X31+128], S14
	238 Move [X31+136], S3
	239 Move V3, [X31+28]
	240 Move [X31+172], S1
	241 Move [X31+180], S0
	242 Move V0, [X31+40]
	243 Move [X31+112], X24
	244 Move [X31+120], X22
	245 Move [X31+156], S4
	246 Move [X31+164], S3
	247 Move V3, [X31+32]
	248 Move V4, [X31+36]
	249 Move [X31+136], W25
	250 Move [X31+140], X31
	251 Move [X31+148], W26
	252 Move [X31+152], W0
	253 Move [X31+164], S3
	254 Move [X31+172], S2
	255 Move [X31+180], S4
	256 Move [X31+188], S0
	257 Move [X31+188], W28
	258 Add X1, X31, 112
	259 Move X0, X20
	260 Call List`1<RaycastResult>.AddWithResize, X0, X1
	261 Move W8, 1
	262 Move [X31+20], W8
	263 Move X8, 0x5BF000
	264 Move X8, [X8+2728]
	265 Add X0, X31, 48
	266 Move X1, [X8]
	267 Call Enumerator<RaycastHitData>.Dispose, X0
	268 Move W21, [X31+20]
	269 And W0, W21, 1
	270 Move X20, [X31+336]
	271 Move X19, [X31+344]
	272 Move X22, [X31+320]
	273 Move X21, [X31+328]
	274 Move X24, [X31+304]
	275 Move X23, [X31+312]
	276 Move X26, [X31+288]
	277 Move X25, [X31+296]
	278 Move X28, [X31+272]
	279 Move X27, [X31+280]
	280 Move X29, [X31+256]
	281 Move X30, [X31+264]
	282 Move D9, [X31+240]
	283 Move D8, [X31+248]
	284 Move D11, [X31+224]
	285 Move D10, [X31+232]
	286 Move D13, [X31+208]
	287 Move D12, [X31+216]
	288 Move D15, [X31+192]
	289 Move D14, [X31+200]
	290 Add X31, X31, 352
	291 Return X0
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Call 0x1C17F20
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Move W21, [X31+16]
	303 Move W21, [X31+20]
	304 Move X20, X0
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X0, X20
	307 Call 0x3EB2AD0
	308 Move X19, [X0]
	309 Call 0x3EB2AE0
	310 Move X8, 0x5BF000
	311 Move X8, [X8+2728]
	312 Add X0, X31, 48
	313 Move X1, [X8]
	314 Call Enumerator<RaycastHitData>.Dispose, X0
	315 Compare X19, 0
	316 JumpIfEqual {269}
	317 Move X0, X19
	318 Call 0x1C17F18
	319 Move X19, X31
	320 Move X20, X0
	321 Move X8, 0x5BF000
	322 Move X8, [X8+2728]
	323 Move X1, [X8]
	324 Add X0, X31, 48
	325 Call Enumerator<RaycastHitData>.Dispose, X0
	326 Compare X19, 0
	327 JumpIfNotEqual {330}
	328 Move X0, X20
	329 Call 0x1D2D690
	330 Move X0, X19
	331 Call 0x1C17F18
	332 Call 0x1991590

Method: System.Void SortedSpherecastGraphics(UnityEngine.Canvas canvas, UnityEngine.Vector3 origin, System.Single radius, UnityEngine.LayerMask layerMask, UnityEngine.Camera eventCamera, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/RaycastHitData> results)

Disassembly:
	0x03B9DFD0 BL 0x3B9E1E8
	0x03B9DFD4 LDP X20, X19, [X31 + 0x80]
	0x03B9DFD8 LDP X22, X21, [X31 + 0x70]
	0x03B9DFDC LDP X30, X23, [X31 + 0x60]
	0x03B9DFE0 LDP D9, D8, [X31 + 0x50]
	0x03B9DFE4 LDP D11, D10, [X31 + 0x40]
	0x03B9DFE8 LDP D13, D12, [X31 + 0x30]
	0x03B9DFEC LDP D15, D14, [X31 + 0x20]
	0x03B9DFF0 AND W0, W0, 0x1
	0x03B9DFF4 ADD X31, X31, 0x90
	0x03B9DFF8 RET
	0x03B9DFFC STR X1, [X0]
	0x03B9E000 STP S0, S1, [X0 + 0x8]
	0x03B9E004 STP S2, S3, [X0 + 0x10]
	0x03B9E008 STP S4, S5, [X0 + 0x18]
	0x03B9E00C STR W2, [X0 + 0x20]
	0x03B9E010 RET
	0x03B9E014 SUB X31, X31, 0x80
	0x03B9E018 STP D11, D10, [X31 + 0x20]
	0x03B9E01C STP D9, D8, [X31 + 0x30]
	0x03B9E020 STR X30, [X31 + 0x40]
	0x03B9E024 STP X24, X23, [X31 + 0x50]
	0x03B9E028 STP X22, X21, [X31 + 0x60]
	0x03B9E02C STP X20, X19, [X31 + 0x70]
	0x03B9E030 ADRP X24, 0x844000
	0x03B9E034 ADRP X23, 0x5BD000
	0x03B9E038 LDRB W8, [X24 + 0xC1A]
	0x03B9E03C LDR X23, [X23 + 0x1C8]
	0x03B9E040 MOV X19, X3
	0x03B9E044 MOV X20, X2
	0x03B9E048 MOV X21, X1
	0x03B9E04C MOV V8.16B, V3.16B
	0x03B9E050 MOV V9.16B, V2.16B
	0x03B9E054 MOV V10.16B, V1.16B
	0x03B9E058 MOV V11.16B, V0.16B
	0x03B9E05C MOV X22, X0
	0x03B9E060 TBNZ X8, 0x0, 0x3B9E078
	0x03B9E064 ADRP X0, 0x5BD000
	0x03B9E068 LDR X0, [X0 + 0x1C8]
	0x03B9E06C BL 0x1C16CF4
	0x03B9E070 MOVZ W8, 0x1
	0x03B9E074 STRB W8, [X24 + 0xC1A]
	0x03B9E078 LDR X0, [X23]
	0x03B9E07C LDR W8, [X0 + 0xE0]
	0x03B9E080 CBNZ W8, 0x3B9E08C
	0x03B9E084 BL 0x1C16DFC
	0x03B9E088 LDR X0, [X23]
	0x03B9E08C LDR X8, [X0 + 0xB8]
	0x03B9E090 MOV X0, X22
	0x03B9E094 MOV V0.16B, V11.16B
	0x03B9E098 MOV V1.16B, V10.16B
	0x03B9E09C LDR X1, [X8 + 0x8]
	0x03B9E0A0 MOV V2.16B, V9.16B
	0x03B9E0A4 MOV V3.16B, V8.16B
	0x03B9E0A8 BL 0x3B9E0F0
	0x03B9E0AC LDR V4, [X21]
	0x03B9E0B0 LDR X8, [X21 + 0x10]
	0x03B9E0B4 ADD X0, X31, 0x0
	0x03B9E0B8 MOV X1, X20
	0x03B9E0BC MOV X2, X19
	0x03B9E0C0 STR V4, [X31]
	0x03B9E0C4 STR X8, [X31 + 0x10]
	0x03B9E0C8 BL 0x3B9E1E8
	0x03B9E0CC LDP X20, X19, [X31 + 0x70]
	0x03B9E0D0 LDP X22, X21, [X31 + 0x60]
	0x03B9E0D4 LDP X24, X23, [X31 + 0x50]
	0x03B9E0D8 LDR X30, [X31 + 0x40]
	0x03B9E0DC LDP D9, D8, [X31 + 0x30]
	0x03B9E0E0 LDP D11, D10, [X31 + 0x20]
	0x03B9E0E4 AND W0, W0, 0x1
	0x03B9E0E8 ADD X31, X31, 0x80
	0x03B9E0EC RET
	0x03B9E0F0 SUB X31, X31, 0x70
	0x03B9E0F4 STP D11, D10, [X31 + 0x20]
	0x03B9E0F8 STP D9, D8, [X31 + 0x30]
	0x03B9E0FC STR X30, [X31 + 0x40]
	0x03B9E100 STP X22, X21, [X31 + 0x50]
	0x03B9E104 STP X20, X19, [X31 + 0x60]
	0x03B9E108 ADRP X22, 0x844000
	0x03B9E10C ADRP X21, 0x5BD000
	0x03B9E110 LDRB W8, [X22 + 0xC1C]
	0x03B9E114 LDR X21, [X21 + 0x1C8]
	0x03B9E118 MOV X19, X1
	0x03B9E11C MOV V8.16B, V3.16B
	0x03B9E120 MOV V9.16B, V2.16B
	0x03B9E124 MOV V10.16B, V1.16B
	0x03B9E128 MOV V11.16B, V0.16B
	0x03B9E12C MOV X20, X0
	0x03B9E130 TBNZ X8, 0x0, 0x3B9E148
	0x03B9E134 ADRP X0, 0x5BD000
	0x03B9E138 LDR X0, [X0 + 0x1C8]
	0x03B9E13C BL 0x1C16CF4
	0x03B9E140 MOVZ W8, 0x1
	0x03B9E144 STRB W8, [X22 + 0xC1C]
	0x03B9E148 LDR X0, [X21]
	0x03B9E14C LDR W8, [X0 + 0xE0]
	0x03B9E150 CBNZ W8, 0x3B9E158
	0x03B9E154 BL 0x1C16DFC
	0x03B9E158 MOV X0, X20
	0x03B9E15C MOV V0.16B, V11.16B
	0x03B9E160 MOV V1.16B, V10.16B
	0x03B9E164 MOV V2.16B, V9.16B
	0x03B9E168 MOV V3.16B, V8.16B
	0x03B9E16C MOV X1, X19
	0x03B9E170 BL 0x3B9E4D8
	0x03B9E174 CBZ X19, 0x3B9E1E4
	0x03B9E178 LDR W8, [X19 + 0x18]
	0x03B9E17C CBZ W8, 0x3B9E1E0
	0x03B9E180 CMP W8, 0x1
	0x03B9E184 B.EQ 0x3B9E1E0
	0x03B9E188 CMP W8, 0x2
	0x03B9E18C B.LS 0x3B9E1E0
	0x03B9E190 LDP S0, S1, [X19 + 0x20]
	0x03B9E194 LDP S4, S5, [X19 + 0x30]
	0x03B9E198 LDP S2, S3, [X19 + 0x28]
	0x03B9E19C LDR X8, [X19 + 0x38]
	0x03B9E1A0 LDR V6, [X19 + 0x40]
	0x03B9E1A4 ADD X0, X31, 0x10
	0x03B9E1A8 MOV X1, X31
	0x03B9E1AC STP X31, X31, [X31 + 0x10]
	0x03B9E1B0 STR S6, [X31 + 0x8]
	0x03B9E1B4 STR X8, [X31]
	0x03B9E1B8 BL 0x37F6094
	0x03B9E1BC LDP S0, S1, [X31 + 0x10]
	0x03B9E1C0 LDP S2, S3, [X31 + 0x18]
	0x03B9E1C4 LDP X20, X19, [X31 + 0x60]
	0x03B9E1C8 LDP X22, X21, [X31 + 0x50]
	0x03B9E1CC LDR X30, [X31 + 0x40]
	0x03B9E1D0 LDP D9, D8, [X31 + 0x30]
	0x03B9E1D4 LDP D11, D10, [X31 + 0x20]
	0x03B9E1D8 ADD X31, X31, 0x70
	0x03B9E1DC RET
	0x03B9E1E0 BL 0x1C16F28
	0x03B9E1E4 BL 0x1C16F20
	0x03B9E1E8 STP D15, D14, [X31 - 0x70]!
	0x03B9E1EC STP D13, D12, [X31 + 0x10]
	0x03B9E1F0 STP D11, D10, [X31 + 0x20]
	0x03B9E1F4 STP D9, D8, [X31 + 0x30]
	0x03B9E1F8 STR X30, [X31 + 0x40]
	0x03B9E1FC STP X22, X21, [X31 + 0x50]
	0x03B9E200 STP X20, X19, [X31 + 0x60]
	0x03B9E204 ADRP X22, 0x844000
	0x03B9E208 LDRB W8, [X22 + 0xC1B]
	0x03B9E20C MOV X19, X2
	0x03B9E210 MOV X20, X1
	0x03B9E214 MOV V8.16B, V3.16B
	0x03B9E218 MOV V9.16B, V2.16B
	0x03B9E21C MOV V10.16B, V1.16B
	0x03B9E220 MOV V11.16B, V0.16B
	0x03B9E224 MOV X21, X0
	0x03B9E228 TBNZ X8, 0x0, 0x3B9E240
	0x03B9E22C ADRP X0, 0x5BD000
	0x03B9E230 LDR X0, [X0 + 0x1C8]
	0x03B9E234 BL 0x1C16CF4
	0x03B9E238 MOVZ W8, 0x1
	0x03B9E23C STRB W8, [X22 + 0xC1B]
	0x03B9E240 LDP S12, S0, [X21 + 0x8]
	0x03B9E244 LDP S1, S2, [X21 + 0x10]
	0x03B9E248 ADRP X22, 0x83B000
	0x03B9E24C LDP S13, S14, [X21]
	0x03B9E250 LDRB W8, [X22 + 0x5AA]
	0x03B9E254 FMUL S0, S11, S0
	0x03B9E258 FMUL S1, S10, S1
	0x03B9E25C FADD S0, S0, S1
	0x03B9E260 FMUL S1, S9, S2
	0x03B9E264 FADD S15, S1, S0
	0x03B9E268 CBNZ W8, 0x3B9E280
	0x03B9E26C ADRP X0, 0x55C000
	0x03B9E270 LDR X0, [X0 + 0x4B8]
	0x03B9E274 BL 0x1C16CF4
	0x03B9E278 MOVZ W8, 0x1
	0x03B9E27C STRB W8, [X22 + 0x5AA]
	0x03B9E280 ADRP X8, 0x55C000
	0x03B9E284 LDR X8, [X8 + 0x4B8]
	0x03B9E288 ADRP X9, 0xFFFFFFFFFCF4C000
	0x03B9E28C LDR V0, [X9 + 0x240]
	0x03B9E290 FABS S1, S15
	0x03B9E294 LDR X8, [X8]
	0x03B9E298 FMOV S2, W31
	0x03B9E29C FMAXNM S1, S1, S2
	0x03B9E2A0 FMUL S0, S1, S0
	0x03B9E2A4 LDR X8, [X8 + 0xB8]
	0x03B9E2A8 FMOV S1, 8
	0x03B9E2AC LDR V3, [X8]
	0x03B9E2B0 FMUL S1, S3, S1
	0x03B9E2B4 FCMP S0, S1
	0x03B9E2B8 FCSEL S0, S0, S1, GT
	0x03B9E2BC FABD S1, S2, S2
	0x03B9E2C0 FCMP S1, S0
	0x03B9E2C4 B.MI 0x3B9E464
	0x03B9E2C8 FMUL S0, S11, S13
	0x03B9E2CC FMUL S1, S10, S14
	0x03B9E2D0 FADD S0, S0, S1
	0x03B9E2D4 FMUL S1, S9, S12
	0x03B9E2D8 FADD S0, S1, S0
	0x03B9E2DC FNEG S0, S0
	0x03B9E2E0 FSUB S0, S0, S8
	0x03B9E2E4 FDIV S8, S0, S15
	0x03B9E2E8 FCMP S8, 0x0
	0x03B9E2EC B.LE 0x3B9E464
	0x03B9E2F0 MOV X0, X21
	0x03B9E2F4 MOV V0.16B, V8.16B
	0x03B9E2F8 MOV X1, X31
	0x03B9E2FC BL 0x3C0B1B4
	0x03B9E300 ADRP X21, 0x5BD000
	0x03B9E304 LDR X21, [X21 + 0x1C8]
	0x03B9E308 MOV V9.16B, V0.16B
	0x03B9E30C MOV V10.16B, V1.16B
	0x03B9E310 MOV V11.16B, V2.16B
	0x03B9E314 LDR X0, [X21]
	0x03B9E318 LDR W8, [X0 + 0xE0]
	0x03B9E31C CBNZ W8, 0x3B9E328
	0x03B9E320 BL 0x1C16DFC
	0x03B9E324 LDR X0, [X21]
	0x03B9E328 LDR X8, [X0 + 0xB8]
	0x03B9E32C LDR X8, [X8 + 0x8]
	0x03B9E330 CBZ X8, 0x3B9E4D4
	0x03B9E334 LDR W9, [X8 + 0x18]
	0x03B9E338 CMP W9, 0x3
	0x03B9E33C B.LS 0x3B9E4D0
	0x03B9E340 LDP S0, S1, [X8 + 0x20]
	0x03B9E344 LDP S4, S3, [X8 + 0x48]
	0x03B9E348 LDR V5, [X8 + 0x44]
	0x03B9E34C LDR V2, [X8 + 0x28]
	0x03B9E350 FSUB S7, S4, S1
	0x03B9E354 FSUB S16, S5, S0
	0x03B9E358 FSUB S4, S9, S0
	0x03B9E35C FSUB S5, S10, S1
	0x03B9E360 FSUB S6, S3, S2
	0x03B9E364 FSUB S3, S11, S2
	0x03B9E368 FMUL S16, S4, S16
	0x03B9E36C FMUL S7, S5, S7
	0x03B9E370 FADD S7, S7, S16
	0x03B9E374 FMUL S6, S3, S6
	0x03B9E378 FADD S6, S6, S7
	0x03B9E37C FCMP S6, 0x0
	0x03B9E380 B.LT 0x3B9E464
	0x03B9E384 LDP S6, S7, [X8 + 0x2C]
	0x03B9E388 LDR V16, [X8 + 0x34]
	0x03B9E38C FSUB S0, S6, S0
	0x03B9E390 FSUB S1, S7, S1
	0x03B9E394 FSUB S2, S16, S2
	0x03B9E398 FMUL S0, S4, S0
	0x03B9E39C FMUL S1, S5, S1
	0x03B9E3A0 FADD S0, S0, S1
	0x03B9E3A4 FMUL S1, S3, S2
	0x03B9E3A8 FADD S0, S1, S0
	0x03B9E3AC FCMP S0, 0x0
	0x03B9E3B0 B.LT 0x3B9E464
	0x03B9E3B4 LDR W9, [X0 + 0xE0]
	0x03B9E3B8 CBNZ W9, 0x3B9E3D0
	0x03B9E3BC BL 0x1C16DFC
	0x03B9E3C0 LDR X8, [X21]
	0x03B9E3C4 LDR X8, [X8 + 0xB8]
	0x03B9E3C8 LDR X8, [X8 + 0x8]
	0x03B9E3CC CBZ X8, 0x3B9E4D4
	0x03B9E3D0 LDR W9, [X8 + 0x18]
	0x03B9E3D4 CMP W9, 0x1
	0x03B9E3D8 B.LS 0x3B9E4D0
	0x03B9E3DC CMP W9, 0x2
	0x03B9E3E0 B.EQ 0x3B9E4D0
	0x03B9E3E4 CMP W9, 0x3
	0x03B9E3E8 B.LS 0x3B9E4D0
	0x03B9E3EC LDP S0, S1, [X8 + 0x3C]
	0x03B9E3F0 LDP S3, S2, [X8 + 0x34]
	0x03B9E3F4 LDP S5, S4, [X8 + 0x2C]
	0x03B9E3F8 FSUB S6, S3, S1
	0x03B9E3FC FSUB S7, S4, S0
	0x03B9E400 FSUB S16, S5, S2
	0x03B9E404 FSUB S4, S9, S2
	0x03B9E408 FSUB S5, S10, S0
	0x03B9E40C FSUB S3, S11, S1
	0x03B9E410 FMUL S16, S4, S16
	0x03B9E414 FMUL S7, S5, S7
	0x03B9E418 FADD S7, S7, S16
	0x03B9E41C FMUL S6, S3, S6
	0x03B9E420 FADD S6, S6, S7
	0x03B9E424 FCMP S6, 0x0
	0x03B9E428 B.LT 0x3B9E464
	0x03B9E42C LDP S6, S7, [X8 + 0x44]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X29
	011 Move [X31+152], X30
	012 Move [X31+160], X28
	013 Move [X31+168], X27
	014 Move [X31+176], X26
	015 Move [X31+184], X25
	016 Move [X31+192], X24
	017 Move [X31+200], X23
	018 Move [X31+208], X22
	019 Move [X31+216], X21
	020 Move [X31+224], X20
	021 Move [X31+232], X19
	022 Move [X31+12], S2
	023 Move [X31+20], S3
	024 Move X24, 0x845000
	025 Move X22, 0x5AC000
	026 Move W8, [X24+3095]
	027 Call 0x3EB273C
	028 Return 
	029 Move X19, X3
	030 Move X20, X2
	031 Move X23, X1
	032 Move V10, V1
	033 Move V11, V0
	034 Move X21, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {68}
	039 Move X0, 0x5AC000
	040 Move X0, [X0+1408]
	041 Call 0x1C17CF4
	042 Move X0, 0x5AC000
	043 Move X0, [X0+1424]
	044 Call 0x1C17CF4
	045 Move X0, 0x5AC000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0x5BF000
	049 Move X0, [X0+2712]
	050 Call 0x1C17CF4
	051 Move X0, 0x5BF000
	052 Move X0, [X0+2680]
	053 Call 0x1C17CF4
	054 Move X0, 0x5BF000
	055 Move X0, [X0+2688]
	056 Call 0x1C17CF4
	057 Move X0, 0x5BF000
	058 Move X0, [X0+2720]
	059 Call 0x1C17CF4
	060 Move X0, 0x57F000
	061 Move X0, [X0+1272]
	062 Call 0x1C17CF4
	063 Move X0, 0x5BE000
	064 Move X0, [X0+456]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X24+3095], W8
	068 Move X0, [X22]
	069 Move [X31+32], W31
	070 Move [X31+24], X31
	071 Move [X31+20], W31
	072 Move X26, 0x5BE000
	073 Move W8, [X0+224]
	074 Move X26, [X26+456]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X21
	079 Move X1, X31
	080 Call GraphicRegistry.GetGraphicsForCanvas, X0
	081 Move X8, [X26]
	082 Move X21, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X26]
	089 Move X8, [X8+184]
	090 Move X8, [X8+16]
	091 Compare X8, 0
	092 JumpIfEqual {334}
	093 Move W2, [X8+24]
	094 Move W9, [X8+28]
	095 Add W9, W9, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X8+24], W31
	098 Move [X8+28], W9
	099 Move X0, [X8+16]
	100 Move W1, W31
	101 Move X3, X31
	102 Call Array.Clear, X0, X1, X2
	103 Compare X21, 0
	104 JumpIfEqual {334}
	105 Move X27, 0x5AC000
	106 Move X28, 0x5AC000
	107 Move X29, 0x5BF000
	108 Move X27, [X27+1424]
	109 Move X28, [X28+1432]
	110 Move X29, [X29+2680]
	111 Move W22, W31
	112 And X23, X23, 0
	113 Move X8, [X21]
	114 Move X1, [X27]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X21
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X21
	133 NotImplemented "Instruction BLR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, [X21]
	136 Move X1, [X28]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move X0, X21
	147 Move W2, W31
	148 Call 0x1C5D788
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Add X8, X8, X9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X2, [X0+8]
	154 Move X0, X21
	155 Move W1, W22
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X8, [X26]
	158 Move X24, X0
	159 Move W9, [X8+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X8
	163 Call 0x1C17DFC
	164 Move X0, X24
	165 Move X1, X23
	166 Call TrackedDeviceGraphicRaycaster.ShouldTestGraphic, X0, X1
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {279}
	171 Compare X24, 0
	172 JumpIfEqual {334}
	173 Move S8, [X24+60]
	174 Move S12, [X24+64]
	175 Move S13, [X24+68]
	176 Move S14, [X24+72]
	177 Move X0, X24
	178 Move X1, X31
	179 Call Graphic.get_rectTransform, X0
	180 Move X8, [X26]
	181 Move X25, X0
	182 Move W9, [X8+224]
	183 Compare W9, 0
	184 JumpIfNotEqual {187}
	185 Move X0, X8
	186 Call 0x1C17DFC
	187 Move V6, [X31+12]
	188 Add X1, X31, 24
	189 Add X2, X31, 20
	190 Move X0, X25
	191 Move V0, V8
	192 Move V1, V12
	193 Move V2, V13
	194 Move V3, V14
	195 Move V4, V11
	196 Move V5, V10
	197 Call TrackedDeviceGraphicRaycaster.SphereIntersectsRectTransform, X0, X1, X2, X3, X4
	198 Move S0, [X31+16]
	199 Move S9, [X31+20]
	200 NotImplemented "Instruction FCMP not yet implemented."
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {279}
	205 Compare X20, 0
	206 JumpIfEqual {334}
	207 Move S14, [X31+24]
	208 Move S13, [X31+28]
	209 Move V12, [X31+32]
	210 Move X0, X20
	211 Move X1, X31
	212 Move V0, V14
	213 Move V1, V13
	214 Move V2, V12
	215 Call Camera.WorldToScreenPoint, X0, X1
	216 Move X8, [X24]
	217 Move X0, X24
	218 Move X1, X20
	219 Move V15, V0
	220 Move X9, [X8+1048]
	221 Move X2, [X8+1056]
	222 Move V8, V1
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {279}
	228 Move X0, [X26]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X26]
	234 Move X8, [X0+184]
	235 Move X0, X20
	236 Move X1, X31
	237 Move X25, [X8+16]
	238 Call Camera.get_targetDisplay, X0
	239 Compare X25, 0
	240 JumpIfEqual {334}
	241 Move W10, [X25+28]
	242 Move X8, [X25+16]
	243 Move X9, [X29]
	244 Add W10, W10, 1
	245 Move [X25+28], W10
	246 Compare X8, 0
	247 JumpIfEqual {334}
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Move W11, [X8+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move W11, 40
	252 Add W9, W10, 1
	253 NotImplemented "Instruction MADD not yet implemented."
	254 Move [X25+24], W9
	255 Move [X8+32], X24
	256 Move [X8+40], S14
	257 Move [X8+48], S13
	258 Move [X8+48], S12
	259 Move [X8+56], S15
	260 Move [X8+56], S8
	261 Move [X8+64], S9
	262 Move [X8+64], W0
	263 Move [X8+68], W31
	264 Move X8, [X9+32]
	265 Add X1, X31, 40
	266 Move X8, [X8+192]
	267 Move X2, [X8+112]
	268 Move [X31+72], W0
	269 Move [X31+76], W31
	270 Move X0, X25
	271 Move [X31+40], X24
	272 Move [X31+48], S14
	273 Move [X31+56], S13
	274 Move [X31+56], S12
	275 Move [X31+64], S15
	276 Move [X31+64], S8
	277 Move [X31+72], S9
	278 Call List`1<RaycastHitData>.AddWithResize, X0, X1
	279 Add W22, W22, 1
	280 Move X0, [X26]
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {286}
	284 Call 0x1C17DFC
	285 Move X0, [X26]
	286 Move X22, 0x5BF000
	287 Move X9, 0x57F000
	288 Move X22, [X22+2720]
	289 Move X9, [X9+1272]
	290 Move X8, [X0+184]
	291 Move X0, [X9]
	292 Move X20, [X8+16]
	293 Move X21, [X8]
	294 Move W9, [X0+224]
	295 Compare W9, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move X2, [X22]
	299 Move X0, X20
	300 Move X1, X21
	301 Call SortingHelpers.Sort, X0, X1
	302 Compare X19, 0
	303 JumpIfEqual {334}
	304 Move X8, [X26]
	305 Move X0, X19
	306 Move X8, [X8+184]
	307 Move X1, [X8+16]
	308 Move X8, 0x5BF000
	309 Move X8, [X8+2712]
	310 Move X2, [X8]
	311 Call List`1<RaycastHitData>.AddRange, X0, X1
	312 Move X20, [X31+224]
	313 Move X19, [X31+232]
	314 Move X22, [X31+208]
	315 Move X21, [X31+216]
	316 Move X24, [X31+192]
	317 Move X23, [X31+200]
	318 Move X26, [X31+176]
	319 Move X25, [X31+184]
	320 Move X28, [X31+160]
	321 Move X27, [X31+168]
	322 Move X29, [X31+144]
	323 Move X30, [X31+152]
	324 Move D9, [X31+128]
	325 Move D8, [X31+136]
	326 Move D11, [X31+112]
	327 Move D10, [X31+120]
	328 Move D13, [X31+96]
	329 Move D12, [X31+104]
	330 Move D15, [X31+80]
	331 Move D14, [X31+88]
	332 Add X31, X31, 240
	333 Return 
	334 Call 0x1C17F20

Method: System.Void SortedRaycastGraphics(UnityEngine.Canvas canvas, UnityEngine.Ray ray, System.Single maxDistance, UnityEngine.LayerMask layerMask, UnityEngine.Camera eventCamera, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceGraphicRaycaster/RaycastHitData> results)

Disassembly:
	0x03B9E8CC BL 0x1C16D6C
	0x03B9E8D0 LDR X8, [X20]
	0x03B9E8D4 LDR X8, [X8 + 0xB8]
	0x03B9E8D8 STR X0, [X8 + 0x8]
	0x03B9E8DC LDR X0, [X26]
	0x03B9E8E0 BL 0x1C16F10
	0x03B9E8E4 LDR X1, [X25]
	0x03B9E8E8 MOV X19, X0
	0x03B9E8EC BL 0x3151EF0
	0x03B9E8F0 LDR X8, [X20]
	0x03B9E8F4 LDR X8, [X8 + 0xB8]
	0x03B9E8F8 STR X19, [X8 + 0x10]
	0x03B9E8FC LDR X0, [X24]
	0x03B9E900 BL 0x1C16F10
	0x03B9E904 LDR X1, [X23]
	0x03B9E908 MOV X19, X0
	0x03B9E90C BL 0x2AA4804
	0x03B9E910 LDR X8, [X20]
	0x03B9E914 LDR X8, [X8 + 0xB8]
	0x03B9E918 STR X19, [X8 + 0x18]
	0x03B9E91C LDR X0, [X22]
	0x03B9E920 BL 0x1C16F10
	0x03B9E924 LDR X1, [X21]
	0x03B9E928 MOV X19, X0
	0x03B9E92C BL 0x2AA4804
	0x03B9E930 LDR X8, [X20]
	0x03B9E934 LDP X22, X21, [X31 + 0x40]
	0x03B9E938 LDP X24, X23, [X31 + 0x30]
	0x03B9E93C LDP X26, X25, [X31 + 0x20]
	0x03B9E940 LDR X8, [X8 + 0xB8]
	0x03B9E944 LDP X28, X27, [X31 + 0x10]
	0x03B9E948 STR X19, [X8 + 0x20]
	0x03B9E94C LDP X20, X19, [X31 + 0x50]
	0x03B9E950 LDR X30, [X31], #0x60
	0x03B9E954 RET
	0x03B9E958 MOV X1, X31
	0x03B9E95C B 0x33BDD8C
	0x03B9E960 SUB X31, X31, 0xC0
	0x03B9E964 STP X30, X23, [X31 + 0x90]
	0x03B9E968 STP X22, X21, [X31 + 0xA0]
	0x03B9E96C STP X20, X19, [X31 + 0xB0]
	0x03B9E970 ADRP X22, 0x844000
	0x03B9E974 ADRP X21, 0x555000
	0x03B9E978 LDRB W8, [X22 + 0xC20]
	0x03B9E97C LDR X21, [X21 + 0x598]
	0x03B9E980 MOV X19, X1
	0x03B9E984 MOV X20, X0
	0x03B9E988 TBNZ X8, 0x0, 0x3B9EA24
	0x03B9E98C ADRP X0, 0x5BD000
	0x03B9E990 LDR X0, [X0 + 0x1F8]
	0x03B9E994 BL 0x1C16CF4
	0x03B9E998 ADRP X0, 0x5BD000
	0x03B9E99C LDR X0, [X0 + 0x270]
	0x03B9E9A0 BL 0x1C16CF4
	0x03B9E9A4 ADRP X0, 0x5BD000
	0x03B9E9A8 LDR X0, [X0 + 0x268]
	0x03B9E9AC BL 0x1C16CF4
	0x03B9E9B0 ADRP X0, 0x5BE000
	0x03B9E9B4 LDR X0, [X0 + 0x9B0]
	0x03B9E9B8 BL 0x1C16CF4
	0x03B9E9BC ADRP X0, 0x5BE000
	0x03B9E9C0 LDR X0, [X0 + 0x9B8]
	0x03B9E9C4 BL 0x1C16CF4
	0x03B9E9C8 ADRP X0, 0x5BE000
	0x03B9E9CC LDR X0, [X0 + 0xB18]
	0x03B9E9D0 BL 0x1C16CF4
	0x03B9E9D4 ADRP X0, 0x5BE000
	0x03B9E9D8 LDR X0, [X0 + 0x9C0]
	0x03B9E9DC BL 0x1C16CF4
	0x03B9E9E0 ADRP X0, 0x5BE000
	0x03B9E9E4 LDR X0, [X0 + 0xB20]
	0x03B9E9E8 BL 0x1C16CF4
	0x03B9E9EC ADRP X0, 0x5BE000
	0x03B9E9F0 LDR X0, [X0 + 0xB28]
	0x03B9E9F4 BL 0x1C16CF4
	0x03B9E9F8 ADRP X0, 0x5BE000
	0x03B9E9FC LDR X0, [X0 + 0xB30]
	0x03B9EA00 BL 0x1C16CF4
	0x03B9EA04 ADRP X0, 0x555000
	0x03B9EA08 LDR X0, [X0 + 0x598]
	0x03B9EA0C BL 0x1C16CF4
	0x03B9EA10 ADRP X0, 0x5BE000
	0x03B9EA14 LDR X0, [X0 + 0xB38]
	0x03B9EA18 BL 0x1C16CF4
	0x03B9EA1C MOVZ W8, 0x1
	0x03B9EA20 STRB W8, [X22 + 0xC20]
	0x03B9EA24 LDR X0, [X21]
	0x03B9EA28 STP X31, X31, [X31 + 0x38]
	0x03B9EA2C STR X31, [X31 + 0x48]
	0x03B9EA30 LDR X21, [X19 + 0x30]
	0x03B9EA34 LDR W8, [X0 + 0xE0]
	0x03B9EA38 CBNZ W8, 0x3B9EA40
	0x03B9EA3C BL 0x1C16DFC
	0x03B9EA40 MOV X0, X21
	0x03B9EA44 MOV X1, X31
	0x03B9EA48 MOV X2, X31
	0x03B9EA4C BL 0x3C354F8
	0x03B9EA50 LDR X8, [X20 + 0x68]
	0x03B9EA54 TBZ X0, 0x0, 0x3B9EB4C
	0x03B9EA58 CBZ X8, 0x3B9EC10
	0x03B9EA5C ADRP X9, 0x5BE000
	0x03B9EA60 LDR X1, [X19 + 0x30]
	0x03B9EA64 LDR X9, [X9 + 0x9B0]
	0x03B9EA68 MOV X0, X8
	0x03B9EA6C LDR X2, [X9]
	0x03B9EA70 BL 0x2AA528C
	0x03B9EA74 TBNZ X0, 0x0, 0x3B9EAE4
	0x03B9EA78 ADRP X8, 0x5BD000
	0x03B9EA7C LDR X21, [X20 + 0x68]
	0x03B9EA80 LDR X22, [X19 + 0x30]
	0x03B9EA84 LDR X8, [X8 + 0x268]
	0x03B9EA88 LDR X0, [X8]
	0x03B9EA8C BL 0x1C16F10
	0x03B9EA90 ADRP X8, 0x5BD000
	0x03B9EA94 LDR X8, [X8 + 0x270]
	0x03B9EA98 MOVI V0.2D, 0x0
	0x03B9EA9C ADD X1, X31, 0x50
	0x03B9EAA0 MOVZ W2, 0x1
	0x03B9EAA4 LDR X5, [X8]
	0x03B9EAA8 MOV X3, X31
	0x03B9EAAC MOV W4, W31
	0x03B9EAB0 MOV X23, X0
	0x03B9EAB4 STR X31, [X31 + 0x80]
	0x03B9EAB8 STP V0, V0, [X31 + 0x60]
	0x03B9EABC STR V0, [X31 + 0x5]
	0x03B9EAC0 BL 0x28E2908
	0x03B9EAC4 CBZ X21, 0x3B9EC10
	0x03B9EAC8 ADRP X8, 0x5BE000
	0x03B9EACC LDR X8, [X8 + 0x9C0]
	0x03B9EAD0 MOV X0, X21
	0x03B9EAD4 MOV X1, X22
	0x03B9EAD8 MOV X2, X23
	0x03B9EADC LDR X3, [X8]
	0x03B9EAE0 BL 0x2AA5084
	0x03B9EAE4 LDR X0, [X20 + 0x68]
	0x03B9EAE8 CBZ X0, 0x3B9EC10
	0x03B9EAEC ADRP X8, 0x5BE000
	0x03B9EAF0 LDR X1, [X19 + 0x30]
	0x03B9EAF4 LDR X8, [X8 + 0x9B8]
	0x03B9EAF8 LDR X2, [X8]
	0x03B9EAFC BL 0x2AA5018
	0x03B9EB00 LDR X8, [X19 + 0x30]
	0x03B9EB04 LDP V1, V0, [X19 + 0x10]
	0x03B9EB08 LDR V2, [X19]
	0x03B9EB0C STR X8, [X31 + 0x30]
	0x03B9EB10 STP V1, V0, [X31 + 0x10]
	0x03B9EB14 STR V2, [X31]
	0x03B9EB18 CBZ X0, 0x3B9EC10
	0x03B9EB1C ADRP X8, 0x5BD000
	0x03B9EB20 LDR X8, [X8 + 0x1F8]
	0x03B9EB24 LDP V0, V1, [X31]
	0x03B9EB28 LDR V2, [X31 + 0x2]
	0x03B9EB2C LDR X9, [X31 + 0x30]
	0x03B9EB30 LDR X2, [X8]
	0x03B9EB34 ADD X1, X31, 0x50
	0x03B9EB38 STP V0, V1, [X31 + 0x50]
	0x03B9EB3C STR V2, [X31 + 0x7]
	0x03B9EB40 STR X9, [X31 + 0x80]
	0x03B9EB44 BL 0x28CDE4C
	0x03B9EB48 B 0x3B9EBF8
	0x03B9EB4C CBZ X8, 0x3B9EC10
	0x03B9EB50 ADRP X9, 0x5BE000
	0x03B9EB54 LDR X9, [X9 + 0xB18]
	0x03B9EB58 MOV X0, X8
	0x03B9EB5C LDR X1, [X9]
	0x03B9EB60 BL 0x2AA4F58
	0x03B9EB64 CBZ X0, 0x3B9EC10
	0x03B9EB68 ADRP X8, 0x5BE000
	0x03B9EB6C LDR X8, [X8 + 0xB38]
	0x03B9EB70 LDR X1, [X8]
	0x03B9EB74 ADD X8, X31, 0x38
	0x03B9EB78 BL 0x275A7AC
	0x03B9EB7C ADRP X20, 0x5BE000
	0x03B9EB80 ADRP X21, 0x5BD000
	0x03B9EB84 LDR X20, [X20 + 0xB28]
	0x03B9EB88 LDR X21, [X21 + 0x1F8]
	0x03B9EB8C LDR X1, [X20]
	0x03B9EB90 ADD X0, X31, 0x38
	0x03B9EB94 BL 0x2C0B1F0
	0x03B9EB98 TBZ X0, 0x0, 0x3B9EBE4
	0x03B9EB9C LDP V2, V0, [X19 + 0x10]
	0x03B9EBA0 LDR X8, [X19 + 0x30]
	0x03B9EBA4 LDR V1, [X19]
	0x03B9EBA8 LDR X0, [X31 + 0x48]
	0x03B9EBAC STP V2, V0, [X31 + 0x10]
	0x03B9EBB0 STR X8, [X31 + 0x30]
	0x03B9EBB4 STR V1, [X31]
	0x03B9EBB8 CBZ X0, 0x3B9EC0C
	0x03B9EBBC LDP V0, V1, [X31]
	0x03B9EBC0 LDR V2, [X31 + 0x2]
	0x03B9EBC4 LDR X8, [X31 + 0x30]
	0x03B9EBC8 LDR X2, [X21]
	0x03B9EBCC STP V0, V1, [X31 + 0x50]
	0x03B9EBD0 STR V2, [X31 + 0x7]
	0x03B9EBD4 STR X8, [X31 + 0x80]
	0x03B9EBD8 ADD X1, X31, 0x50
	0x03B9EBDC BL 0x28CDE4C
	0x03B9EBE0 B 0x3B9EB8C
	0x03B9EBE4 ADRP X8, 0x5BE000
	0x03B9EBE8 LDR X8, [X8 + 0xB20]
	0x03B9EBEC ADD X0, X31, 0x38
	0x03B9EBF0 LDR X1, [X8]
	0x03B9EBF4 BL 0x2C0B1EC
	0x03B9EBF8 LDP X20, X19, [X31 + 0xB0]
	0x03B9EBFC LDP X22, X21, [X31 + 0xA0]
	0x03B9EC00 LDP X30, X23, [X31 + 0x90]
	0x03B9EC04 ADD X31, X31, 0xC0
	0x03B9EC08 RET
	0x03B9EC0C BL 0x1C16F20
	0x03B9EC10 BL 0x1C16F20
	0x03B9EC14 B 0x3B9EC1C
	0x03B9EC18 B 0x3B9EC1C
	0x03B9EC1C MOV X19, X0
	0x03B9EC20 CMP W1, 0x1
	0x03B9EC24 B.NE 0x3B9EC58
	0x03B9EC28 MOV X0, X19
	0x03B9EC2C BL 0x3EB1AD0
	0x03B9EC30 LDR X20, [X0]
	0x03B9EC34 BL 0x3EB1AE0
	0x03B9EC38 ADRP X8, 0x5BE000
	0x03B9EC3C LDR X8, [X8 + 0xB20]
	0x03B9EC40 ADD X0, X31, 0x38
	0x03B9EC44 LDR X1, [X8]
	0x03B9EC48 BL 0x2C0B1EC
	0x03B9EC4C CBZ X20, 0x3B9EBF8
	0x03B9EC50 MOV X0, X20
	0x03B9EC54 BL 0x1C16F18
	0x03B9EC58 MOV X20, X31
	0x03B9EC5C B 0x3B9EC64
	0x03B9EC60 MOV X19, X0
	0x03B9EC64 ADRP X8, 0x5BE000
	0x03B9EC68 LDR X8, [X8 + 0xB20]
	0x03B9EC6C LDR X1, [X8]
	0x03B9EC70 ADD X0, X31, 0x38
	0x03B9EC74 BL 0x2C0B1EC
	0x03B9EC78 CBNZ X20, 0x3B9EC84
	0x03B9EC7C MOV X0, X19
	0x03B9EC80 BL 0x1D2C690
	0x03B9EC84 MOV X0, X20
	0x03B9EC88 BL 0x1C16F18
	0x03B9EC8C BL 0x1990590
	0x03B9EC90 LDR X0, [X0]
	0x03B9EC94 RET
	0x03B9EC98 LDP S0, S1, [X0 + 0x8]
	0x03B9EC9C LDR V2, [X0 + 0x10]
	0x03B9ECA0 RET
	0x03B9ECA4 LDP S0, S1, [X0 + 0x14]
	0x03B9ECA8 RET
	0x03B9ECAC LDR V0, [X0 + 0x1C]
	0x03B9ECB0 RET
	0x03B9ECB4 LDR W0, [X0 + 0x20]
	0x03B9ECB8 RET
	0x03B9ECBC SUB X31, X31, 0x20
	0x03B9ECC0 STP X30, X19, [X31 + 0x10]
	0x03B9ECC4 LDR X0, [X2]
	0x03B9ECC8 CBZ X0, 0x3B9ED08
	0x03B9ECCC MOV X19, X1
	0x03B9ECD0 MOV X1, X31
	0x03B9ECD4 BL 0x3CDBD10
	0x03B9ECD8 STR W0, [X31 + 0xC]
	0x03B9ECDC LDR X0, [X19]
	0x03B9ECE0 CBZ X0, 0x3B9ED08
	0x03B9ECE4 MOV X1, X31
	0x03B9ECE8 BL 0x3CDBD10
	0x03B9ECEC MOV W1, W0
	0x03B9ECF0 ADD X0, X31, 0xC
	0x03B9ECF4 MOV X2, X31
	0x03B9ECF8 BL 0x337B634
	0x03B9ECFC LDP X30, X19, [X31 + 0x10]
	0x03B9ED00 ADD X31, X31, 0x20
	0x03B9ED04 RET
	0x03B9ED08 BL 0x1C16F20
	0x03B9ED0C MOV X1, X0
	0x03B9ED10 MOVZ W2, 0xA0
	0x03B9ED14 MOV X0, X8
	0x03B9ED18 B 0x3EB1AC0
	0x03B9ED1C LDR W0, [X0 + 0xA0]
	0x03B9ED20 RET
	0x03B9ED24 LDRB W0, [X0 + 0xA4]
	0x03B9ED28 RET
	0x03B9ED2C STR X30, [X31 - 0x30]!
	0x03B9ED30 STP X22, X21, [X31 + 0x10]
	0x03B9ED34 STP X20, X19, [X31 + 0x20]
	0x03B9ED38 ADRP X22, 0x844000
	0x03B9ED3C LDRB W8, [X22 + 0xC21]
	0x03B9ED40 MOV W20, W1
	0x03B9ED44 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+112], D14
	003 Move [X31+128], D13
	004 Move [X31+136], D12
	005 Move [X31+144], D11
	006 Move [X31+152], D10
	007 Move [X31+160], D9
	008 Move [X31+168], D8
	009 Move [X31+176], X29
	010 Move [X31+184], X30
	011 Move [X31+192], X28
	012 Move [X31+200], X27
	013 Move [X31+208], X26
	014 Move [X31+216], X25
	015 Move [X31+224], X24
	016 Move [X31+232], X23
	017 Move [X31+240], X22
	018 Move [X31+248], X21
	019 Move [X31+256], X20
	020 Move [X31+264], X19
	021 Move X23, 0x845000
	022 Move X19, 0x5AC000
	023 Move W8, [X23+3096]
	024 Move X19, [X19+1408]
	025 Move X25, X4
	026 Move X20, X3
	027 Move X24, X2
	028 Move V8, V0
	029 Move X21, X1
	030 Move X22, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {64}
	035 Move X0, 0x5AC000
	036 Move X0, [X0+1408]
	037 Call 0x1C17CF4
	038 Move X0, 0x5AC000
	039 Move X0, [X0+1424]
	040 Call 0x1C17CF4
	041 Move X0, 0x5AC000
	042 Move X0, [X0+1432]
	043 Call 0x1C17CF4
	044 Move X0, 0x5BF000
	045 Move X0, [X0+2712]
	046 Call 0x1C17CF4
	047 Move X0, 0x5BF000
	048 Move X0, [X0+2680]
	049 Call 0x1C17CF4
	050 Move X0, 0x5BF000
	051 Move X0, [X0+2688]
	052 Call 0x1C17CF4
	053 Move X0, 0x5BF000
	054 Move X0, [X0+2720]
	055 Call 0x1C17CF4
	056 Move X0, 0x57F000
	057 Move X0, [X0+1272]
	058 Call 0x1C17CF4
	059 Move X0, 0x5BE000
	060 Move X0, [X0+456]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X23+3096], W8
	064 Move X0, [X19]
	065 Move [X31+56], W31
	066 Move [X31+48], X31
	067 Move [X31+124], W31
	068 Move X27, 0x5BE000
	069 Move W8, [X0+224]
	070 Move X27, [X27+456]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X22
	075 Move X1, X31
	076 Call GraphicRegistry.GetGraphicsForCanvas, X0
	077 Move X8, [X27]
	078 Move X22, X0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {85}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X8, [X27]
	085 Move X8, [X8+184]
	086 Move X8, [X8+16]
	087 Compare X8, 0
	088 JumpIfEqual {336}
	089 Move W2, [X8+24]
	090 Move W9, [X8+28]
	091 Add W9, W9, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X8+24], W31
	094 Move [X8+28], W9
	095 Move X0, [X8+16]
	096 Move W1, W31
	097 Move X3, X31
	098 Call Array.Clear, X0, X1, X2
	099 Move [X31+8], X25
	100 Compare X22, 0
	101 JumpIfEqual {336}
	102 Move X29, 0x5AC000
	103 Move X28, 0x5AC000
	104 Move X19, 0x5BF000
	105 Move X29, [X29+1424]
	106 Move X28, [X28+1432]
	107 Move X19, [X19+2680]
	108 Move W23, W31
	109 And X24, X24, 0
	110 Move X8, [X22]
	111 Move X1, [X29]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X22
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X1, [X0+8]
	129 Move X0, X22
	130 NotImplemented "Instruction BLR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X22]
	133 Move X1, [X28]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X22
	144 Move W2, W31
	145 Call 0x1C5D788
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X2, [X0+8]
	151 Move X0, X22
	152 Move W1, W23
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X8, [X27]
	155 Move X25, X0
	156 Move W9, [X8+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X8
	160 Call 0x1C17DFC
	161 Move X0, X25
	162 Move X1, X24
	163 Call TrackedDeviceGraphicRaycaster.ShouldTestGraphic, X0, X1
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {281}
	168 Compare X25, 0
	169 JumpIfEqual {336}
	170 Move S9, [X25+60]
	171 Move S10, [X25+64]
	172 Move S11, [X25+68]
	173 Move S12, [X25+72]
	174 Move X0, X25
	175 Move X1, X31
	176 Call Graphic.get_rectTransform, X0
	177 Move X9, [X21+16]
	178 Move V0, [X21]
	179 Move X8, [X27]
	180 Move X26, X0
	181 Move [X31+80], X9
	182 Move [X31+4], V0
	183 Move W9, [X8+224]
	184 Compare W9, 0
	185 JumpIfNotEqual {188}
	186 Move X0, X8
	187 Call 0x1C17DFC
	188 Move V0, [X31+4]
	189 Move X8, [X31+80]
	190 Add X1, X31, 16
	191 Add X2, X31, 48
	192 Move [X31+1], V0
	193 Add X3, X31, 124
	194 Move X0, X26
	195 Move V0, V9
	196 Move V1, V10
	197 Move V2, V11
	198 Move V3, V12
	199 Move [X31+32], X8
	200 Call TrackedDeviceGraphicRaycaster.RayIntersectsRectTransform, X0, X1, X2, X3, X4
	201 Move V14, [X31+124]
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {281}
	207 Compare X20, 0
	208 JumpIfEqual {336}
	209 Move S11, [X31+48]
	210 Move S10, [X31+52]
	211 Move V9, [X31+56]
	212 Move X0, X20
	213 Move X1, X31
	214 Move V0, V11
	215 Move V1, V10
	216 Move V2, V9
	217 Call Camera.WorldToScreenPoint, X0, X1
	218 Move X8, [X25]
	219 Move X0, X25
	220 Move X1, X20
	221 Move V12, V0
	222 Move X9, [X8+1048]
	223 Move X2, [X8+1056]
	224 Move V13, V1
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {281}
	230 Move X0, [X27]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {236}
	234 Call 0x1C17DFC
	235 Move X0, [X27]
	236 Move X8, [X0+184]
	237 Move X0, X20
	238 Move X1, X31
	239 Move X26, [X8+16]
	240 Call Camera.get_targetDisplay, X0
	241 Compare X26, 0
	242 JumpIfEqual {336}
	243 Move W10, [X26+28]
	244 Move X8, [X26+16]
	245 Move X9, [X19]
	246 Add W10, W10, 1
	247 Move [X26+28], W10
	248 Compare X8, 0
	249 JumpIfEqual {336}
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Move W11, [X8+24]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move W11, 40
	254 Add W9, W10, 1
	255 NotImplemented "Instruction MADD not yet implemented."
	256 Move [X26+24], W9
	257 Move [X8+32], X25
	258 Move [X8+40], S11
	259 Move [X8+48], S10
	260 Move [X8+48], S9
	261 Move [X8+56], S12
	262 Move [X8+56], S13
	263 Move [X8+64], S14
	264 Move [X8+64], W0
	265 Move [X8+68], W31
	266 Move X8, [X9+32]
	267 Add X1, X31, 64
	268 Move X8, [X8+192]
	269 Move X2, [X8+112]
	270 Move [X31+96], W0
	271 Move [X31+100], W31
	272 Move X0, X26
	273 Move [X31+64], X25
	274 Move [X31+72], S11
	275 Move [X31+80], S10
	276 Move [X31+80], S9
	277 Move [X31+88], S12
	278 Move [X31+88], S13
	279 Move [X31+96], S14
	280 Call List`1<RaycastHitData>.AddWithResize, X0, X1
	281 Add W23, W23, 1
	282 Move X0, [X27]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {288}
	286 Call 0x1C17DFC
	287 Move X0, [X27]
	288 Move X22, 0x5BF000
	289 Move X9, 0x57F000
	290 Move X19, [X31+8]
	291 Move X22, [X22+2720]
	292 Move X9, [X9+1272]
	293 Move X8, [X0+184]
	294 Move X0, [X9]
	295 Move X20, [X8+16]
	296 Move X21, [X8]
	297 Move W9, [X0+224]
	298 Compare W9, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Move X2, [X22]
	302 Move X0, X20
	303 Move X1, X21
	304 Call SortingHelpers.Sort, X0, X1
	305 Compare X19, 0
	306 JumpIfEqual {336}
	307 Move X8, [X27]
	308 Move X0, X19
	309 Move X8, [X8+184]
	310 Move X1, [X8+16]
	311 Move X8, 0x5BF000
	312 Move X8, [X8+2712]
	313 Move X2, [X8]
	314 Call List`1<RaycastHitData>.AddRange, X0, X1
	315 Move X20, [X31+256]
	316 Move X19, [X31+264]
	317 Move X22, [X31+240]
	318 Move X21, [X31+248]
	319 Move X24, [X31+224]
	320 Move X23, [X31+232]
	321 Move X26, [X31+208]
	322 Move X25, [X31+216]
	323 Move X28, [X31+192]
	324 Move X27, [X31+200]
	325 Move X29, [X31+176]
	326 Move X30, [X31+184]
	327 Move D9, [X31+160]
	328 Move D8, [X31+168]
	329 Move D11, [X31+144]
	330 Move D10, [X31+152]
	331 Move D13, [X31+128]
	332 Move D12, [X31+136]
	333 Move V14, [X31+112]
	334 Add X31, X31, 272
	335 Return 
	336 Call 0x1C17F20

Method: System.Boolean ShouldTestGraphic(UnityEngine.UI.Graphic graphic, UnityEngine.LayerMask layerMask)

Disassembly:
	0x03B9ED48 AND W21, W1, 0x1
	0x03B9ED4C TBNZ X8, 0x0, 0x3B9ED64
	0x03B9ED50 ADRP X0, 0x5BD000
	0x03B9ED54 LDR X0, [X0 + 0x258]
	0x03B9ED58 BL 0x1C16CF4
	0x03B9ED5C MOVZ W8, 0x1
	0x03B9ED60 STRB W8, [X22 + 0xC21]
	0x03B9ED64 LDRB W8, [X19 + 0xA4]
	0x03B9ED68 CMP W8, W21
	0x03B9ED6C B.EQ 0x3B9EDD0
	0x03B9ED70 STRB W21, [X19 + 0xA4]
	0x03B9ED74 ADRP X21, 0x5BD000
	0x03B9ED78 LDR X21, [X21 + 0x258]
	0x03B9ED7C LDR X0, [X21]
	0x03B9ED80 LDR W8, [X0 + 0xE0]
	0x03B9ED84 CBZ W8, 0x3B9ED9C
	0x03B9ED88 LDR W21, [X19 + 0xA8]
	0x03B9ED8C ANDS W31, W20, 0x1
	0x03B9ED90 MOVZ W8, 0x1
	0x03B9ED94 CINC W20, W8, EQ
	0x03B9ED98 B 0x3B9EDC0
	0x03B9ED9C BL 0x1C16DFC
	0x03B9EDA0 LDR X0, [X21]
	0x03B9EDA4 LDR W21, [X19 + 0xA8]
	0x03B9EDA8 ANDS W31, W20, 0x1
	0x03B9EDAC MOVZ W9, 0x1
	0x03B9EDB0 LDR W8, [X0 + 0xE0]
	0x03B9EDB4 CINC W20, W9, EQ
	0x03B9EDB8 CBNZ W8, 0x3B9EDC0
	0x03B9EDBC BL 0x1C16DFC
	0x03B9EDC0 ORR W8, W21, W20, 0x0
	0x03B9EDC4 MOVZ W9, 0x1
	0x03B9EDC8 STR W8, [X19 + 0xA8]
	0x03B9EDCC STRB W9, [X19 + 0xAC]
	0x03B9EDD0 LDP X20, X19, [X31 + 0x20]
	0x03B9EDD4 LDP X22, X21, [X31 + 0x10]
	0x03B9EDD8 LDR X30, [X31], #0x30
	0x03B9EDDC RET
	0x03B9EDE0 LDR W0, [X0 + 0xA8]
	0x03B9EDE4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {49}
	006 Move X19, X1
	007 Move X1, X31
	008 Move X20, X0
	009 Call Graphic.get_depth, X0
	010 Add W31, W0, 1
	011 Move X8, [X20]
	012 Move X0, X20
	013 Move X9, [X8+696]
	014 Move X1, [X8+704]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {31}
	020 Move X0, X20
	021 Move X1, X31
	022 Call Graphic.get_canvasRenderer, X0
	023 Compare X0, 0
	024 JumpIfEqual {49}
	025 Move X1, X31
	026 Call CanvasRenderer.get_cull, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {36}
	031 Move W0, W31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Move X0, X20
	037 Move X1, X31
	038 Call Component.get_gameObject, X0
	039 Compare X0, 0
	040 JumpIfEqual {49}
	041 Move X1, X31
	042 Call GameObject.get_layer, X0
	043 Move W20, W0
	044 And X0, X19, 0
	045 Move X1, X31
	046 Call LayerMask.op_Implicit, X0
	047 NotImplemented "Instruction LSRV not yet implemented."
	048 And W0, W8, 1
	049 Call 0x1C17F20

Method: System.Boolean SphereIntersectsRectTransform(UnityEngine.RectTransform transform, UnityEngine.Vector4 raycastPadding, UnityEngine.Vector3 from, out UnityEngine.Vector3 worldPosition, out System.Single distance)

Disassembly:
	0x03B9EDE8 STR W1, [X0 + 0xA8]
	0x03B9EDEC RET
	0x03B9EDF0 LDRB W0, [X0 + 0xAC]
	0x03B9EDF4 RET
	0x03B9EDF8 AND W8, W1, 0x1
	0x03B9EDFC STRB W8, [X0 + 0xAC]
	0x03B9EE00 RET
	0x03B9EE04 STR D10, [X31 - 0x30]!
	0x03B9EE08 STP D9, D8, [X31 + 0x8]
	0x03B9EE0C STR X30, [X31 + 0x18]
	0x03B9EE10 STP X20, X19, [X31 + 0x20]
	0x03B9EE14 ADRP X20, 0x844000
	0x03B9EE18 LDRB W8, [X20 + 0xC23]
	0x03B9EE1C MOV V8.16B, V2.16B
	0x03B9EE20 MOV V9.16B, V1.16B
	0x03B9EE24 MOV V10.16B, V0.16B
	0x03B9EE28 MOV X19, X0
	0x03B9EE2C TBNZ X8, 0x0, 0x3B9EE44
	0x03B9EE30 ADRP X0, 0x5BD000
	0x03B9EE34 LDR X0, [X0 + 0x258]
	0x03B9EE38 BL 0x1C16CF4
	0x03B9EE3C MOVZ W8, 0x1
	0x03B9EE40 STRB W8, [X20 + 0xC23]
	0x03B9EE44 LDP S0, S1, [X19 + 0xB0]
	0x03B9EE48 LDR V2, [X19 + 0xB8]
	0x03B9EE4C ADRP X8, 0xFFFFFFFFFCF4B000
	0x03B9EE50 LDR V3, [X8 + 0xF20]
	0x03B9EE54 FSUB S0, S0, S10
	0x03B9EE58 FSUB S1, S1, S9
	0x03B9EE5C FSUB S2, S2, S8
	0x03B9EE60 FMUL S0, S0, S0
	0x03B9EE64 FMUL S1, S1, S1
	0x03B9EE68 FADD S0, S0, S1
	0x03B9EE6C FMUL S1, S2, S2
	0x03B9EE70 FADD S0, S1, S0
	0x03B9EE74 FCMP S0, S3
	0x03B9EE78 B.MI 0x3B9EEA4
	0x03B9EE7C ADRP X8, 0x5BD000
	0x03B9EE80 LDR X8, [X8 + 0x258]
	0x03B9EE84 STP S10, S9, [X19 + 0xB0]
	0x03B9EE88 STR S8, [X19 + 0xB8]
	0x03B9EE8C LDR X0, [X8]
	0x03B9EE90 LDR W8, [X0 + 0xE0]
	0x03B9EE94 CBNZ W8, 0x3B9EE9C
	0x03B9EE98 BL 0x1C16DFC
	0x03B9EE9C MOVZ W8, 0x1
	0x03B9EEA0 STRB W8, [X19 + 0xAC]
	0x03B9EEA4 LDP X20, X19, [X31 + 0x20]
	0x03B9EEA8 LDR X30, [X31 + 0x18]
	0x03B9EEAC LDP D9, D8, [X31 + 0x8]
	0x03B9EEB0 LDR V10, [X31], #0x30
	0x03B9EEB4 RET
	0x03B9EEB8 LDR X0, [X0 + 0xC0]
	0x03B9EEBC RET
	0x03B9EEC0 STR X1, [X0 + 0xC0]
	0x03B9EEC4 RET
	0x03B9EEC8 LDP S0, S1, [X0 + 0xC8]
	0x03B9EECC LDP S2, S3, [X0 + 0xD0]
	0x03B9EED0 RET
	0x03B9EED4 STP D11, D10, [X31 - 0x40]!
	0x03B9EED8 STP D9, D8, [X31 + 0x10]
	0x03B9EEDC STR X30, [X31 + 0x20]
	0x03B9EEE0 STP X20, X19, [X31 + 0x30]
	0x03B9EEE4 ADRP X20, 0x844000
	0x03B9EEE8 LDRB W8, [X20 + 0xC24]
	0x03B9EEEC MOV V8.16B, V3.16B
	0x03B9EEF0 MOV V9.16B, V2.16B
	0x03B9EEF4 MOV V10.16B, V1.16B
	0x03B9EEF8 MOV V11.16B, V0.16B
	0x03B9EEFC MOV X19, X0
	0x03B9EF00 TBNZ X8, 0x0, 0x3B9EF18
	0x03B9EF04 ADRP X0, 0x5BD000
	0x03B9EF08 LDR X0, [X0 + 0x258]
	0x03B9EF0C BL 0x1C16CF4
	0x03B9EF10 MOVZ W8, 0x1
	0x03B9EF14 STRB W8, [X20 + 0xC24]
	0x03B9EF18 LDP S0, S1, [X19 + 0xC8]
	0x03B9EF1C LDP S2, S3, [X19 + 0xD0]
	0x03B9EF20 ADRP X8, 0xFFFFFFFFFCF4C000
	0x03B9EF24 LDR V4, [X8 + 0x1B4]
	0x03B9EF28 FMUL S0, S11, S0
	0x03B9EF2C FMUL S1, S10, S1
	0x03B9EF30 FMUL S2, S9, S2
	0x03B9EF34 FADD S0, S0, S1
	0x03B9EF38 FADD S0, S2, S0
	0x03B9EF3C FMUL S1, S8, S3
	0x03B9EF40 FADD S0, S1, S0
	0x03B9EF44 FCMP S0, S4
	0x03B9EF48 B.GT 0x3B9EF74
	0x03B9EF4C ADRP X8, 0x5BD000
	0x03B9EF50 LDR X8, [X8 + 0x258]
	0x03B9EF54 STP S11, S10, [X19 + 0xC8]
	0x03B9EF58 STP S9, S8, [X19 + 0xD0]
	0x03B9EF5C LDR X0, [X8]
	0x03B9EF60 LDR W8, [X0 + 0xE0]
	0x03B9EF64 CBNZ W8, 0x3B9EF6C
	0x03B9EF68 BL 0x1C16DFC
	0x03B9EF6C MOVZ W8, 0x1
	0x03B9EF70 STRB W8, [X19 + 0xAC]
	0x03B9EF74 LDP X20, X19, [X31 + 0x30]
	0x03B9EF78 LDR X30, [X31 + 0x20]
	0x03B9EF7C LDP D9, D8, [X31 + 0x10]
	0x03B9EF80 LDP D11, D10, [X31], #0x40
	0x03B9EF84 RET
	0x03B9EF88 LDR X0, [X0 + 0xD8]
	0x03B9EF8C RET
	0x03B9EF90 STR X30, [X31 - 0x30]!
	0x03B9EF94 STP X22, X21, [X31 + 0x10]
	0x03B9EF98 STP X20, X19, [X31 + 0x20]
	0x03B9EF9C ADRP X21, 0x844000
	0x03B9EFA0 ADRP X22, 0x5BD000
	0x03B9EFA4 LDRB W8, [X21 + 0xC25]
	0x03B9EFA8 LDR X22, [X22 + 0x258]
	0x03B9EFAC MOV X19, X1
	0x03B9EFB0 MOV X20, X0
	0x03B9EFB4 TBNZ X8, 0x0, 0x3B9EFD8
	0x03B9EFB8 ADRP X0, 0x559000
	0x03B9EFBC LDR X0, [X0 + 0x978]
	0x03B9EFC0 BL 0x1C16CF4
	0x03B9EFC4 ADRP X0, 0x5BD000
	0x03B9EFC8 LDR X0, [X0 + 0x258]
	0x03B9EFCC BL 0x1C16CF4
	0x03B9EFD0 MOVZ W8, 0x1
	0x03B9EFD4 STRB W8, [X21 + 0xC25]
	0x03B9EFD8 LDR X0, [X22]
	0x03B9EFDC LDR W8, [X0 + 0xE0]
	0x03B9EFE0 CBNZ W8, 0x3B9EFE8
	0x03B9EFE4 BL 0x1C16DFC
	0x03B9EFE8 LDR X8, [X20 + 0xD8]
	0x03B9EFEC CBZ X8, 0x3B9F024
	0x03B9EFF0 CBZ X19, 0x3B9F024
	0x03B9EFF4 LDR W8, [X8 + 0x18]
	0x03B9EFF8 LDR W9, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X23
	012 Move [X31+112], X22
	013 Move [X31+120], X21
	014 Move [X31+128], X20
	015 Move [X31+136], X19
	016 Move [X31+4], S6
	017 Move X23, 0x845000
	018 Move X22, 0x5BE000
	019 Move W8, [X23+3097]
	020 Move X22, [X22+456]
	021 Move X19, X2
	022 Move X20, X1
	023 Move V9, V5
	024 Move V10, V4
	025 Move V11, V3
	026 Move V12, V2
	027 Move V13, V1
	028 Move V14, V0
	029 Move X21, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x5BE000
	035 Move X0, [X0+456]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+3097], W8
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X22]
	045 Move X8, [X0+184]
	046 Move X0, X21
	047 Move V0, V14
	048 Move V1, V13
	049 Move X1, [X8+8]
	050 Move V2, V12
	051 Move V3, V11
	052 Call TrackedDeviceGraphicRaycaster.GetRectTransformPlane, X0, X1, X2
	053 Move V4, [X31+4]
	054 Move V11, V0
	055 Move V12, V1
	056 Multiply S0, S10, S0
	057 Multiply S1, S9, S1
	058 Move V13, V2
	059 Multiply S2, S4, S2
	060 Move X21, 0x83B000
	061 Add S0, S0, S1
	062 Move W8, [X21+1925]
	063 Add S0, S2, S0
	064 Add S0, S3, S0
	065 Multiply S1, S11, S0
	066 Multiply S2, S12, S0
	067 Multiply S0, S13, S0
	068 Subtract S8, S10, S1
	069 Subtract S14, S9, S2
	070 Subtract S15, S4, S0
	071 Compare W8, 0
	072 JumpIfNotEqual {83}
	073 Move X0, 0x556000
	074 Move X0, [X0+1448]
	075 Move [X31], S9
	076 Move V9, V3
	077 Call 0x1C17CF4
	078 Move V3, V9
	079 Move S9, [X31]
	080 Move S4, [X31+4]
	081 Move W8, 1
	082 Move [X21+1925], W8
	083 Move X8, 0x556000
	084 Move X8, [X8+1448]
	085 Subtract S8, S8, S10
	086 Subtract S14, S14, S9
	087 Subtract S15, S15, S4
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {98}
	092 Move [X31], S9
	093 Move V9, V3
	094 Call 0x1C17DFC
	095 Move V3, V9
	096 Move S9, [X31]
	097 Move S4, [X31+4]
	098 Multiply S0, S8, S8
	099 Multiply S1, S14, S14
	100 Move X8, -51064832
	101 Add S0, S0, S1
	102 Move V1, [X8+380]
	103 Multiply S2, S15, S15
	104 Add S0, S2, S0
	105 NotImplemented "Instruction FSQRT not yet implemented."
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction FDIV not yet implemented."
	108 NotImplemented "Instruction FDIV not yet implemented."
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 Move X21, 0x83B000
	111 Move W8, [X21+1923]
	112 Compare W8, 0
	113 JumpIfNotEqual {122}
	114 Move X0, 0x556000
	115 Move X0, [X0+1440]
	116 Move V8, V3
	117 Call 0x1C17CF4
	118 Move V4, [X31+4]
	119 Move V3, V8
	120 Move W8, 1
	121 Move [X21+1923], W8
	122 Move X8, 0x556000
	123 Move X8, [X8+1440]
	124 Move X8, [X8]
	125 Move X8, [X8+184]
	126 Move S0, [X8]
	127 Move S1, [X8+4]
	128 Move V2, [X8+8]
	129 Move [X31+16], S4
	130 Move [X31+24], S0
	131 Move [X31+24], S1
	132 Move [X31+32], S2
	133 Add X0, X31, 8
	134 Move V0, V11
	135 Move V1, V12
	136 Move V2, V13
	137 Move X1, X20
	138 Move X2, X19
	139 Move [X31+8], S10
	140 Move [X31+16], S9
	141 Call TrackedDeviceGraphicRaycaster.RayIntersectsRectTransform, X0, X1, X2, X3
	142 Move X20, [X31+128]
	143 Move X19, [X31+136]
	144 Move X22, [X31+112]
	145 Move X21, [X31+120]
	146 Move X30, [X31+96]
	147 Move X23, [X31+104]
	148 Move D9, [X31+80]
	149 Move D8, [X31+88]
	150 Move D11, [X31+64]
	151 Move D10, [X31+72]
	152 Move D13, [X31+48]
	153 Move D12, [X31+56]
	154 Move D15, [X31+32]
	155 Move D14, [X31+40]
	156 And W0, W0, 1
	157 Add X31, X31, 144
	158 Return X0

Method: System.Boolean RayIntersectsRectTransform(UnityEngine.RectTransform transform, UnityEngine.Vector4 raycastPadding, UnityEngine.Ray ray, out UnityEngine.Vector3 worldPosition, out System.Single distance)

Disassembly:
	0x03B9F014 STRB W8, [X20 + 0xAC]
	0x03B9F018 LDP X20, X19, [X31 + 0x20]
	0x03B9F01C LDR X30, [X31], #0x30
	0x03B9F020 RET
	0x03B9F024 BL 0x1C16F20
	0x03B9F028 ADD X1, X0, 0xE0
	0x03B9F02C MOVZ W2, 0x50
	0x03B9F030 MOV X0, X8
	0x03B9F034 B 0x3EB1AC0
	0x03B9F038 STR X30, [X31 - 0x10]!
	0x03B9F03C ADD X0, X0, 0xE0
	0x03B9F040 MOVZ W2, 0x50
	0x03B9F044 BL 0x3EB1B30
	0x03B9F048 LDR X30, [X31], #0x10
	0x03B9F04C RET
	0x03B9F050 LDR W0, [X0 + 0x130]
	0x03B9F054 RET
	0x03B9F058 STR W1, [X0 + 0x130]
	0x03B9F05C RET
	0x03B9F060 LDR W0, [X0 + 0x134]
	0x03B9F064 RET
	0x03B9F068 STP X30, X21, [X31 - 0x20]!
	0x03B9F06C STP X20, X19, [X31 + 0x10]
	0x03B9F070 ADRP X21, 0x843000
	0x03B9F074 LDRB W8, [X21 + 0xC26]
	0x03B9F078 MOV X19, X1
	0x03B9F07C MOV X20, X0
	0x03B9F080 TBNZ X8, 0x0, 0x3B9F098
	0x03B9F084 ADRP X0, 0x5BC000
	0x03B9F088 LDR X0, [X0 + 0x258]
	0x03B9F08C BL 0x1C16CF4
	0x03B9F090 MOVZ W8, 0x1
	0x03B9F094 STRB W8, [X21 + 0xC26]
	0x03B9F098 LDR W0, [X20 + 0x134]
	0x03B9F09C MOV X1, X31
	0x03B9F0A0 BL 0x3C35CB8
	0x03B9F0A4 MOV W21, W0
	0x03B9F0A8 AND X0, X19, 0x0
	0x03B9F0AC MOV X1, X31
	0x03B9F0B0 BL 0x3C35CB8
	0x03B9F0B4 CMP W21, W0
	0x03B9F0B8 B.EQ 0x3B9F0E0
	0x03B9F0BC ADRP X8, 0x5BC000
	0x03B9F0C0 LDR X8, [X8 + 0x258]
	0x03B9F0C4 LDR X0, [X8]
	0x03B9F0C8 LDR W8, [X0 + 0xE0]
	0x03B9F0CC CBNZ W8, 0x3B9F0D4
	0x03B9F0D0 BL 0x1C16DFC
	0x03B9F0D4 MOVZ W8, 0x1
	0x03B9F0D8 STRB W8, [X20 + 0xAC]
	0x03B9F0DC STR W19, [X20 + 0x134]
	0x03B9F0E0 LDP X20, X19, [X31 + 0x10]
	0x03B9F0E4 LDP X30, X21, [X31], #0x20
	0x03B9F0E8 RET
	0x03B9F0EC LDR V0, [X0 + 0x138]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X30
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X24, 0x844000
	014 Move X23, 0x5BD000
	015 Move W8, [X24+3098]
	016 Move X23, [X23+456]
	017 Move X19, X3
	018 Move X20, X2
	019 Move X21, X1
	020 Move V8, V3
	021 Move V9, V2
	022 Move V10, V1
	023 Move V11, V0
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x5BD000
	030 Move X0, [X0+456]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+3098], W8
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X23]
	040 Move X8, [X0+184]
	041 Move X0, X22
	042 Move V0, V11
	043 Move V1, V10
	044 Move X1, [X8+8]
	045 Move V2, V9
	046 Move V3, V8
	047 Call TrackedDeviceGraphicRaycaster.GetRectTransformPlane, X0, X1, X2
	048 Move V4, [X21]
	049 Move X8, [X21+16]
	050 Add X0, X31, 0
	051 Move X1, X20
	052 Move X2, X19
	053 Move [X31], V4
	054 Move [X31+16], X8
	055 Call TrackedDeviceGraphicRaycaster.RayIntersectsRectTransform, X0, X1, X2, X3
	056 Move X20, [X31+112]
	057 Move X19, [X31+120]
	058 Move X22, [X31+96]
	059 Move X21, [X31+104]
	060 Move X24, [X31+80]
	061 Move X23, [X31+88]
	062 Move X30, [X31+64]
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Move D11, [X31+32]
	066 Move D10, [X31+40]
	067 And W0, W0, 1
	068 Add X31, X31, 128
	069 Return X0

Method: System.Boolean RayIntersectsRectTransform(UnityEngine.Ray ray, UnityEngine.Plane plane, out UnityEngine.Vector3 worldPosition, out System.Single distance)

Disassembly:
	0x03B9F1E8 LDR X0, [X8]
	0x03B9F1EC LDR W8, [X0 + 0xE0]
	0x03B9F1F0 CBNZ W8, 0x3B9F1F8
	0x03B9F1F4 BL 0x1C16DFC
	0x03B9F1F8 MOVZ W8, 0x1
	0x03B9F1FC STRB W8, [X19 + 0xAC]
	0x03B9F200 LDP X20, X19, [X31 + 0x10]
	0x03B9F204 LDR X30, [X31 + 0x8]
	0x03B9F208 LDR V8, [X31], #0x20
	0x03B9F20C RET
	0x03B9F210 LDR W0, [X0 + 0x144]
	0x03B9F214 RET
	0x03B9F218 STP X30, X21, [X31 - 0x20]!
	0x03B9F21C STP X20, X19, [X31 + 0x10]
	0x03B9F220 ADRP X21, 0x843000
	0x03B9F224 LDRB W8, [X21 + 0xC29]
	0x03B9F228 MOV W20, W1
	0x03B9F22C MOV X19, X0
	0x03B9F230 TBNZ X8, 0x0, 0x3B9F248
	0x03B9F234 ADRP X0, 0x5BC000
	0x03B9F238 LDR X0, [X0 + 0x258]
	0x03B9F23C BL 0x1C16CF4
	0x03B9F240 MOVZ W8, 0x1
	0x03B9F244 STRB W8, [X21 + 0xC29]
	0x03B9F248 LDR W8, [X19 + 0x144]
	0x03B9F24C CMP W8, W20
	0x03B9F250 B.EQ 0x3B9F278
	0x03B9F254 ADRP X8, 0x5BC000
	0x03B9F258 LDR X8, [X8 + 0x258]
	0x03B9F25C STR W20, [X19 + 0x144]
	0x03B9F260 LDR X0, [X8]
	0x03B9F264 LDR W8, [X0 + 0xE0]
	0x03B9F268 CBNZ W8, 0x3B9F270
	0x03B9F26C BL 0x1C16DFC
	0x03B9F270 MOVZ W8, 0x1
	0x03B9F274 STRB W8, [X19 + 0xAC]
	0x03B9F278 LDP X20, X19, [X31 + 0x10]
	0x03B9F27C LDP X30, X21, [X31], #0x20
	0x03B9F280 RET
	0x03B9F284 LDR X0, [X0 + 0x148]
	0x03B9F288 RET
	0x03B9F28C STR X1, [X0 + 0x148]
	0x03B9F290 RET
	0x03B9F294 LDRB W0, [X0 + 0x150]
	0x03B9F298 RET
	0x03B9F29C AND W8, W1, 0x1
	0x03B9F2A0 STRB W8, [X0 + 0x150]
	0x03B9F2A4 RET
	0x03B9F2A8 STP X30, X23, [X31 - 0x30]!
	0x03B9F2AC STP X22, X21, [X31 + 0x10]
	0x03B9F2B0 STP X20, X19, [X31 + 0x20]
	0x03B9F2B4 ADRP X22, 0x843000
	0x03B9F2B8 ADRP X21, 0x5BC000
	0x03B9F2BC LDRB W8, [X22 + 0xC2A]
	0x03B9F2C0 LDR X21, [X21 + 0x258]
	0x03B9F2C4 MOV W20, W1
	0x03B9F2C8 MOV X19, X0
	0x03B9F2CC TBNZ X8, 0x0, 0x3B9F2FC
	0x03B9F2D0 ADRP X0, 0x580000
	0x03B9F2D4 LDR X0, [X0 + 0x5B8]
	0x03B9F2D8 BL 0x1C16CF4
	0x03B9F2DC ADRP X0, 0x558000
	0x03B9F2E0 LDR X0, [X0 + 0x3C0]
	0x03B9F2E4 BL 0x1C16CF4
	0x03B9F2E8 ADRP X0, 0x5BC000
	0x03B9F2EC LDR X0, [X0 + 0x258]
	0x03B9F2F0 BL 0x1C16CF4
	0x03B9F2F4 MOVZ W8, 0x1
	0x03B9F2F8 STRB W8, [X22 + 0xC2A]
	0x03B9F2FC ADRP X23, 0x558000
	0x03B9F300 ADRP X22, 0x580000
	0x03B9F304 LDR X23, [X23 + 0x3C0]
	0x03B9F308 LDR X22, [X22 + 0x5B8]
	0x03B9F30C MOVZ W2, 0x158
	0x03B9F310 MOV X0, X19
	0x03B9F314 MOV W1, W31
	0x03B9F318 BL 0x3EB1B10
	0x03B9F31C STR W20, [X19 + 0xA0]
	0x03B9F320 LDR X0, [X21]
	0x03B9F324 LDR W8, [X0 + 0xE0]
	0x03B9F328 CBNZ W8, 0x3B9F330
	0x03B9F32C BL 0x1C16DFC
	0x03B9F330 MOVZ W8, 0x447A0000
	0x03B9F334 STR W8, [X19 + 0x154]
	0x03B9F338 LDR X0, [X23]
	0x03B9F33C BL 0x1C16F10
	0x03B9F340 LDR X1, [X22]
	0x03B9F344 MOV X20, X0
	0x03B9F348 BL 0x30CB97C
	0x03B9F34C MOVZ W2, 0xA0
	0x03B9F350 MOV X0, X19
	0x03B9F354 MOV W1, W31
	0x03B9F358 STR X20, [X19 + 0xD8]
	0x03B9F35C BL 0x3EB1B10
	0x03B9F360 MOV X0, X19
	0x03B9F364 LDP X20, X19, [X31 + 0x20]
	0x03B9F368 LDP X22, X21, [X31 + 0x10]
	0x03B9F36C MOVZ W1, 0x1
	0x03B9F370 LDP X30, X23, [X31], #0x30
	0x03B9F374 B 0x3B9F378
	0x03B9F378 STR X30, [X31 - 0x30]!
	0x03B9F37C STP X22, X21, [X31 + 0x10]
	0x03B9F380 STP X20, X19, [X31 + 0x20]
	0x03B9F384 ADRP X21, 0x843000
	0x03B9F388 LDRB W8, [X21 + 0xC2B]
	0x03B9F38C MOV W19, W1
	0x03B9F390 MOV X20, X0
	0x03B9F394 TBNZ X8, 0x0, 0x3B9F3B8
	0x03B9F398 ADRP X0, 0x558000
	0x03B9F39C LDR X0, [X0 + 0x380]
	0x03B9F3A0 BL 0x1C16CF4
	0x03B9F3A4 ADRP X0, 0x5BC000
	0x03B9F3A8 LDR X0, [X0 + 0x258]
	0x03B9F3AC BL 0x1C16CF4
	0x03B9F3B0 MOVZ W8, 0x1
	0x03B9F3B4 STRB W8, [X21 + 0xC2B]
	0x03B9F3B8 ADRP X21, 0x839000
	0x03B9F3BC LDRB W8, [X21 + 0x793]
	0x03B9F3C0 CBNZ W8, 0x3B9F3D8
	0x03B9F3C4 ADRP X0, 0x555000
	0x03B9F3C8 LDR X0, [X0 + 0x5A8]
	0x03B9F3CC BL 0x1C16CF4
	0x03B9F3D0 MOVZ W8, 0x1
	0x03B9F3D4 STRB W8, [X21 + 0x793]
	0x03B9F3D8 ADRP X8, 0x555000
	0x03B9F3DC LDR X8, [X8 + 0x5A8]
	0x03B9F3E0 ADRP X22, 0x839000
	0x03B9F3E4 ADRP X21, 0x5BC000
	0x03B9F3E8 LDR X8, [X8]
	0x03B9F3EC LDR X8, [X8 + 0xB8]
	0x03B9F3F0 LDR V0, [X8]
	0x03B9F3F4 STUR V0, [X20 + 0xC8]
	0x03B9F3F8 LDRB W8, [X22 + 0x783]
	0x03B9F3FC LDR X21, [X21 + 0x258]
	0x03B9F400 CBNZ W8, 0x3B9F418
	0x03B9F404 ADRP X0, 0x554000
	0x03B9F408 LDR X0, [X0 + 0x5A0]
	0x03B9F40C BL 0x1C16CF4
	0x03B9F410 MOVZ W8, 0x1
	0x03B9F414 STRB W8, [X22 + 0x783]
	0x03B9F418 ADRP X8, 0x554000
	0x03B9F41C LDR X8, [X8 + 0x5A0]
	0x03B9F420 LDR X8, [X8]
	0x03B9F424 LDR X8, [X8 + 0xB8]
	0x03B9F428 LDR V0, [X8]
	0x03B9F42C LDR V1, [X8 + 0x8]
	0x03B9F430 STR D0, [X20 + 0xB0]
	0x03B9F434 STR S1, [X20 + 0xB8]
	0x03B9F438 LDR X0, [X21]
	0x03B9F43C LDR W8, [X0 + 0xE0]
	0x03B9F440 CBNZ W8, 0x3B9F448
	0x03B9F444 BL 0x1C16DFC
	0x03B9F448 LDR X8, [X20 + 0xD8]
	0x03B9F44C STR X31, [X20 + 0xC0]
	0x03B9F450 STRB W31, [X20 + 0xAC]
	0x03B9F454 STRB W31, [X20 + 0xA4]
	0x03B9F458 STR W31, [X20 + 0xA8]
	0x03B9F45C CBZ X8, 0x3B9F46C
	0x03B9F460 LDR W9, [X8 + 0x1C]
	0x03B9F464 ADD W9, W9, 0x1
	0x03B9F468 STP W31, W9, [X8 + 0x18]
	0x03B9F46C LDR X0, [X21]
	0x03B9F470 LDR W8, [X0 + 0xE0]
	0x03B9F474 CBNZ W8, 0x3B9F47C
	0x03B9F478 BL 0x1C16DFC
	0x03B9F47C MOVN W0, 0x4
	0x03B9F480 MOV X1, X31
	0x03B9F484 STR W31, [X20 + 0x130]
	0x03B9F488 BL 0x3C35CBC
	0x03B9F48C STR W0, [X20 + 0x134]
	0x03B9F490 ADRP X21, 0x83A000
	0x03B9F494 LDRB W8, [X21 + 0x78F]
	0x03B9F498 CBNZ W8, 0x3B9F4B0
	0x03B9F49C ADRP X0, 0x55C000
	0x03B9F4A0 LDR X0, [X0 + 0xF08]
	0x03B9F4A4 BL 0x1C16CF4
	0x03B9F4A8 MOVZ W8, 0x1
	0x03B9F4AC STRB W8, [X21 + 0x78F]
	0x03B9F4B0 ADRP X8, 0x55C000
	0x03B9F4B4 LDR X8, [X8 + 0xF08]
	0x03B9F4B8 LDR X8, [X8]
	0x03B9F4BC LDR X8, [X8 + 0xB8]
	0x03B9F4C0 LDR V0, [X8]
	0x03B9F4C4 STR D0, [X20 + 0x138]
	0x03B9F4C8 TBZ X19, 0x0, 0x3B9F4E0
	0x03B9F4CC MOV X0, X20
	0x03B9F4D0 LDP X20, X19, [X31 + 0x20]
	0x03B9F4D4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x844000
	015 Move W8, [X22+3099]
	016 Move X19, X2
	017 Move X20, X1
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x5BD000
	028 Move X0, [X0+456]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3099], W8
	032 Move S12, [X21+8]
	033 Move S0, [X21+12]
	034 Move S1, [X21+16]
	035 Move S2, [X21+20]
	036 Move X22, 0x83B000
	037 Move S13, [X21]
	038 Move S14, [X21+4]
	039 Move W8, [X22+1450]
	040 Multiply S0, S11, S0
	041 Multiply S1, S10, S1
	042 Add S0, S0, S1
	043 Multiply S1, S9, S2
	044 Add S15, S1, S0
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x55C000
	048 Move X0, [X0+1208]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+1450], W8
	052 Move X8, 0x55C000
	053 Move X8, [X8+1208]
	054 Move X9, -51068928
	055 Move V0, [X9+576]
	056 NotImplemented "Instruction FABS not yet implemented."
	057 Move X8, [X8]
	058 Move S2, W31
	059 NotImplemented "Instruction FMAXNM not yet implemented."
	060 Multiply S0, S1, S0
	061 Move X8, [X8+184]
	062 Move S1, 8
	063 Move V3, [X8]
	064 Multiply S1, S3, S1
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 NotImplemented "Instruction FCSEL not yet implemented."
	067 NotImplemented "Instruction FABD not yet implemented."
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 Multiply S0, S11, S13
	070 Multiply S1, S10, S14
	071 Add S0, S0, S1
	072 Multiply S1, S9, S12
	073 Add S0, S1, S0
	074 NotImplemented "Instruction FNEG not yet implemented."
	075 Subtract S0, S0, S8
	076 NotImplemented "Instruction FDIV not yet implemented."
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 Move X0, X21
	079 Move V0, V8
	080 Move X1, X31
	081 Call Ray.GetPoint, X0, V0
	082 Move X21, 0x5BD000
	083 Move X21, [X21+456]
	084 Move V9, V0
	085 Move V10, V1
	086 Move V11, V2
	087 Move X0, [X21]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1C17DFC
	092 Move X0, [X21]
	093 Move X8, [X0+184]
	094 Move X8, [X8+8]
	095 Compare X8, 0
	096 JumpIfEqual {210}
	097 Move W9, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move S0, [X8+32]
	100 Move S1, [X8+36]
	101 Move S4, [X8+72]
	102 Move S3, [X8+76]
	103 Move V5, [X8+68]
	104 Move V2, [X8+40]
	105 Subtract S7, S4, S1
	106 Subtract S16, S5, S0
	107 Subtract S4, S9, S0
	108 Subtract S5, S10, S1
	109 Subtract S6, S3, S2
	110 Subtract S3, S11, S2
	111 Multiply S16, S4, S16
	112 Multiply S7, S5, S7
	113 Add S7, S7, S16
	114 Multiply S6, S3, S6
	115 Add S6, S6, S7
	116 NotImplemented "Instruction FCMP not yet implemented."
	117 Move S6, [X8+44]
	118 Move S7, [X8+48]
	119 Move V16, [X8+52]
	120 Subtract S0, S6, S0
	121 Subtract S1, S7, S1
	122 Subtract S2, S16, S2
	123 Multiply S0, S4, S0
	124 Multiply S1, S5, S1
	125 Add S0, S0, S1
	126 Multiply S1, S3, S2
	127 Add S0, S1, S0
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Move W9, [X0+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {138}
	132 Call 0x1C17DFC
	133 Move X8, [X21]
	134 Move X8, [X8+184]
	135 Move X8, [X8+8]
	136 Compare X8, 0
	137 JumpIfEqual {210}
	138 Move W9, [X8+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move S0, [X8+60]
	143 Move S1, [X8+64]
	144 Move S3, [X8+52]
	145 Move S2, [X8+56]
	146 Move S5, [X8+44]
	147 Move S4, [X8+48]
	148 Subtract S6, S3, S1
	149 Subtract S7, S4, S0
	150 Subtract S16, S5, S2
	151 Subtract S4, S9, S2
	152 Subtract S5, S10, S0
	153 Subtract S3, S11, S1
	154 Multiply S16, S4, S16
	155 Multiply S7, S5, S7
	156 Add S7, S7, S16
	157 Multiply S6, S3, S6
	158 Add S6, S6, S7
	159 NotImplemented "Instruction FCMP not yet implemented."
	160 Move S6, [X8+68]
	161 Move S7, [X8+72]
	162 Move V16, [X8+76]
	163 Subtract S2, S6, S2
	164 Subtract S0, S7, S0
	165 Subtract S1, S16, S1
	166 Multiply S2, S4, S2
	167 Multiply S0, S5, S0
	168 Add S0, S2, S0
	169 Multiply S1, S3, S1
	170 Add S0, S1, S0
	171 NotImplemented "Instruction FCMP not yet implemented."
	172 Move W0, 1
	173 Move X21, 0x83A000
	174 Move W8, [X21+1923]
	175 Compare W8, 0
	176 JumpIfNotEqual {182}
	177 Move X0, 0x555000
	178 Move X0, [X0+1440]
	179 Call 0x1C17CF4
	180 Move W8, 1
	181 Move [X21+1923], W8
	182 Move X8, 0x555000
	183 Move X8, [X8+1440]
	184 Move W0, W31
	185 Move S8, W31
	186 Move X8, [X8]
	187 Move X8, [X8+184]
	188 Move S9, [X8]
	189 Move S10, [X8+4]
	190 Move V11, [X8+8]
	191 Move [X20], S9
	192 Move [X20+8], S10
	193 Move [X20+8], S11
	194 Move [X19], S8
	195 Move X20, [X31+96]
	196 Move X19, [X31+104]
	197 Move X22, [X31+80]
	198 Move X21, [X31+88]
	199 Move X30, [X31+64]
	200 Move D9, [X31+48]
	201 Move D8, [X31+56]
	202 Move D11, [X31+32]
	203 Move D10, [X31+40]
	204 Move D13, [X31+16]
	205 Move D12, [X31+24]
	206 Move D15, [X31+112]
	207 Move D14, [X31+120]
	208 Return X0
	209 Call 0x1C17F28
	210 Call 0x1C17F20

Method: UnityEngine.Plane GetRectTransformPlane(UnityEngine.RectTransform transform, UnityEngine.Vector4 raycastPadding, UnityEngine.Vector3[] fourCornersArray)

Disassembly:
	0x03B9F0F0 LDR V1, [X0 + 0x13C]
	0x03B9F0F4 RET
	0x03B9F0F8 STP D9, D8, [X31 - 0x30]!
	0x03B9F0FC STR X30, [X31 + 0x10]
	0x03B9F100 STP X20, X19, [X31 + 0x20]
	0x03B9F104 ADRP X20, 0x843000
	0x03B9F108 LDRB W8, [X20 + 0xC27]
	0x03B9F10C MOV V8.16B, V1.16B
	0x03B9F110 MOV V9.16B, V0.16B
	0x03B9F114 MOV X19, X0
	0x03B9F118 TBNZ X8, 0x0, 0x3B9F130
	0x03B9F11C ADRP X0, 0x5BC000
	0x03B9F120 LDR X0, [X0 + 0x258]
	0x03B9F124 BL 0x1C16CF4
	0x03B9F128 MOVZ W8, 0x1
	0x03B9F12C STRB W8, [X20 + 0xC27]
	0x03B9F130 LDR V0, [X19 + 0x138]
	0x03B9F134 LDR V1, [X19 + 0x13C]
	0x03B9F138 ADRP X8, 0xFFFFFFFFFCF4A000
	0x03B9F13C LDR V2, [X8 + 0xF20]
	0x03B9F140 FSUB S0, S0, S9
	0x03B9F144 FSUB S1, S1, S8
	0x03B9F148 FMUL S0, S0, S0
	0x03B9F14C FMUL S1, S1, S1
	0x03B9F150 FADD S0, S0, S1
	0x03B9F154 FCMP S0, S2
	0x03B9F158 B.MI 0x3B9F184
	0x03B9F15C ADRP X8, 0x5BC000
	0x03B9F160 LDR X8, [X8 + 0x258]
	0x03B9F164 STR S9, [X19 + 0x138]
	0x03B9F168 STR S8, [X19 + 0x13C]
	0x03B9F16C LDR X0, [X8]
	0x03B9F170 LDR W8, [X0 + 0xE0]
	0x03B9F174 CBNZ W8, 0x3B9F17C
	0x03B9F178 BL 0x1C16DFC
	0x03B9F17C MOVZ W8, 0x1
	0x03B9F180 STRB W8, [X19 + 0xAC]
	0x03B9F184 LDP X20, X19, [X31 + 0x20]
	0x03B9F188 LDR X30, [X31 + 0x10]
	0x03B9F18C LDP D9, D8, [X31], #0x30
	0x03B9F190 RET
	0x03B9F194 LDR V0, [X0 + 0x140]
	0x03B9F198 RET
	0x03B9F19C STR D8, [X31 - 0x20]!
	0x03B9F1A0 STR X30, [X31 + 0x8]
	0x03B9F1A4 STP X20, X19, [X31 + 0x10]
	0x03B9F1A8 ADRP X20, 0x843000
	0x03B9F1AC LDRB W8, [X20 + 0xC28]
	0x03B9F1B0 MOV V8.16B, V0.16B
	0x03B9F1B4 MOV X19, X0
	0x03B9F1B8 TBNZ X8, 0x0, 0x3B9F1D0
	0x03B9F1BC ADRP X0, 0x5BC000
	0x03B9F1C0 LDR X0, [X0 + 0x258]
	0x03B9F1C4 BL 0x1C16CF4
	0x03B9F1C8 MOVZ W8, 0x1
	0x03B9F1CC STRB W8, [X20 + 0xC28]
	0x03B9F1D0 LDR V0, [X19 + 0x140]
	0x03B9F1D4 FCMP S0, S8
	0x03B9F1D8 B.EQ 0x3B9F200
	0x03B9F1DC STR S8, [X19 + 0x140]
	0x03B9F1E0 ADRP X8, 0x5BC000
	0x03B9F1E4 LDR X8, [X8 + 0x258]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X30
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X22, 0x844000
	012 Move X21, 0x5BD000
	013 Move W8, [X22+3100]
	014 Move X21, [X21+456]
	015 Move X19, X1
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x5BD000
	026 Move X0, [X0+456]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3100], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move V0, V11
	037 Move V1, V10
	038 Move V2, V9
	039 Move V3, V8
	040 Move X1, X19
	041 Call TrackedDeviceGraphicRaycaster.GetRectTransformWorldCorners, X0, X1, X2
	042 Compare X19, 0
	043 JumpIfEqual {80}
	044 Move W8, [X19+24]
	045 Compare W8, 0
	046 JumpIfEqual {79}
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move S0, [X19+32]
	050 Move S1, [X19+36]
	051 Move S4, [X19+48]
	052 Move S5, [X19+52]
	053 Move S2, [X19+40]
	054 Move S3, [X19+44]
	055 Move X8, [X19+56]
	056 Move V6, [X19+64]
	057 Add X0, X31, 16
	058 Move X1, X31
	059 Move [X31+16], X31
	060 Move [X31+24], X31
	061 Move [X31+8], S6
	062 Move [X31], X8
	063 Call 0x37F7094
	064 Move S0, [X31+16]
	065 Move S1, [X31+20]
	066 Move S2, [X31+24]
	067 Move S3, [X31+28]
	068 Move X20, [X31+96]
	069 Move X19, [X31+104]
	070 Move X22, [X31+80]
	071 Move X21, [X31+88]
	072 Move X30, [X31+64]
	073 Move D9, [X31+48]
	074 Move D8, [X31+56]
	075 Move D11, [X31+32]
	076 Move D10, [X31+40]
	077 Add X31, X31, 112
	078 Return X0
	079 Call 0x1C17F28
	080 Call 0x1C17F20

Method: System.Void GetRectTransformWorldCorners(UnityEngine.RectTransform transform, UnityEngine.Vector4 offset, UnityEngine.Vector3[] fourCornersArray)

Disassembly:
	0x03B9F4D8 LDR X30, [X31], #0x30
	0x03B9F4DC B 0x3B9F4F0
	0x03B9F4E0 LDP X20, X19, [X31 + 0x20]
	0x03B9F4E4 LDP X22, X21, [X31 + 0x10]
	0x03B9F4E8 LDR X30, [X31], #0x30
	0x03B9F4EC RET
	0x03B9F4F0 STR X30, [X31 - 0x20]!
	0x03B9F4F4 STP X20, X19, [X31 + 0x10]
	0x03B9F4F8 ADRP X20, 0x843000
	0x03B9F4FC LDRB W8, [X20 + 0xC31]
	0x03B9F500 MOV X19, X0
	0x03B9F504 TBNZ X8, 0x0, 0x3B9F534
	0x03B9F508 ADRP X0, 0x5AA000
	0x03B9F50C LDR X0, [X0 + 0x408]
	0x03B9F510 BL 0x1C16CF4
	0x03B9F514 ADRP X0, 0x55A000
	0x03B9F518 LDR X0, [X0 + 0x550]
	0x03B9F51C BL 0x1C16CF4
	0x03B9F520 ADRP X0, 0x55A000
	0x03B9F524 LDR X0, [X0 + 0x548]
	0x03B9F528 BL 0x1C16CF4
	0x03B9F52C MOVZ W8, 0x1
	0x03B9F530 STRB W8, [X20 + 0xC31]
	0x03B9F534 STRB W31, [X19 + 0x10]
	0x03B9F538 STR W31, [X19 + 0x14]
	0x03B9F53C ADRP X20, 0x83A000
	0x03B9F540 LDRB W8, [X20 + 0x78F]
	0x03B9F544 CBNZ W8, 0x3B9F55C
	0x03B9F548 ADRP X0, 0x55C000
	0x03B9F54C LDR X0, [X0 + 0xF08]
	0x03B9F550 BL 0x1C16CF4
	0x03B9F554 MOVZ W8, 0x1
	0x03B9F558 STRB W8, [X20 + 0x78F]
	0x03B9F55C ADRP X8, 0x55C000
	0x03B9F560 LDR X8, [X8 + 0xF08]
	0x03B9F564 ADRP X20, 0x839000
	0x03B9F568 LDR X8, [X8]
	0x03B9F56C LDR X9, [X8 + 0xB8]
	0x03B9F570 LDR V0, [X9]
	0x03B9F574 STR D0, [X19 + 0x18]
	0x03B9F578 LDR X8, [X8 + 0xB8]
	0x03B9F57C LDR V0, [X8]
	0x03B9F580 STR D0, [X19 + 0x20]
	0x03B9F584 LDRB W8, [X20 + 0x783]
	0x03B9F588 CBNZ W8, 0x3B9F5A0
	0x03B9F58C ADRP X0, 0x554000
	0x03B9F590 LDR X0, [X0 + 0x5A0]
	0x03B9F594 BL 0x1C16CF4
	0x03B9F598 MOVZ W8, 0x1
	0x03B9F59C STRB W8, [X20 + 0x783]
	0x03B9F5A0 ADRP X8, 0x554000
	0x03B9F5A4 LDR X8, [X8 + 0x5A0]
	0x03B9F5A8 MOVI V0.2D, 0x0
	0x03B9F5AC LDR X8, [X8]
	0x03B9F5B0 LDR X8, [X8 + 0xB8]
	0x03B9F5B4 LDR V1, [X8]
	0x03B9F5B8 LDR V2, [X8 + 0x8]
	0x03B9F5BC LDR X8, [X19]
	0x03B9F5C0 STUR V0, [X19 + 0x38]
	0x03B9F5C4 STUR V0, [X19 + 0x48]
	0x03B9F5C8 STUR V0, [X19 + 0x58]
	0x03B9F5CC STUR V0, [X19 + 0x68]
	0x03B9F5D0 STUR V0, [X19 + 0x78]
	0x03B9F5D4 STUR V0, [X19 + 0x88]
	0x03B9F5D8 STR D1, [X19 + 0x28]
	0x03B9F5DC STR S2, [X19 + 0x30]
	0x03B9F5E0 STR X31, [X19 + 0x98]
	0x03B9F5E4 CBZ X8, 0x3B9F614
	0x03B9F5E8 LDP W2, W9, [X8 + 0x18]
	0x03B9F5EC ADD W9, W9, 0x1
	0x03B9F5F0 CMP W2, 0x1
	0x03B9F5F4 STP W31, W9, [X8 + 0x18]
	0x03B9F5F8 B.LT 0x3B9F63C
	0x03B9F5FC LDR X0, [X8 + 0x10]
	0x03B9F600 LDP X20, X19, [X31 + 0x10]
	0x03B9F604 MOV W1, W31
	0x03B9F608 MOV X3, X31
	0x03B9F60C LDR X30, [X31], #0x20
	0x03B9F610 B 0x339FA34
	0x03B9F614 ADRP X8, 0x55A000
	0x03B9F618 LDR X8, [X8 + 0x548]
	0x03B9F61C LDR X0, [X8]
	0x03B9F620 BL 0x1C16F10
	0x03B9F624 ADRP X8, 0x55A000
	0x03B9F628 LDR X8, [X8 + 0x550]
	0x03B9F62C MOV X20, X0
	0x03B9F630 LDR X1, [X8]
	0x03B9F634 BL 0x301B7C4
	0x03B9F638 STR X20, [X19]
	0x03B9F63C LDP X20, X19, [X31 + 0x10]
	0x03B9F640 LDR X30, [X31], #0x20
	0x03B9F644 RET
	0x03B9F648 STP X30, X21, [X31 - 0x20]!
	0x03B9F64C STP X20, X19, [X31 + 0x10]
	0x03B9F650 ADRP X20, 0x843000
	0x03B9F654 ADRP X21, 0x5BC000
	0x03B9F658 LDRB W8, [X20 + 0xC2C]
	0x03B9F65C LDR X21, [X21 + 0x258]
	0x03B9F660 MOV X19, X0
	0x03B9F664 TBNZ X8, 0x0, 0x3B9F67C
	0x03B9F668 ADRP X0, 0x5BC000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], D11
	003 Move [X31+136], D10
	004 Move [X31+144], D9
	005 Move [X31+152], D8
	006 Move [X31+160], X30
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X21, 0x844000
	011 Move W8, [X21+3101]
	012 Move X19, X1
	013 Move V9, V3
	014 Move V8, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x555000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x5BE000
	026 Move X0, [X0+2760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3101], W8
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], V0
	032 Move [X31+104], V0
	033 Move [X31+64], V0
	034 Move [X31+72], V0
	035 Compare X19, 0
	036 JumpIfEqual {97}
	037 Move W8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Compare X20, 0
	040 JumpIfEqual {120}
	041 Move X0, X20
	042 Move X1, X31
	043 Call RectTransform.get_rect, X0
	044 Move W8, [X19+24]
	045 Compare W8, 0
	046 JumpIfEqual {119}
	047 Add S5, S11, S0
	048 Add S4, S10, S1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X19+32], S5
	051 Move [X19+40], S4
	052 Move [X19+40], W31
	053 Add S1, S3, S1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract S1, S1, S9
	056 Move [X19+44], S5
	057 Move [X19+52], S1
	058 Move [X19+52], W31
	059 Add S0, S2, S0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract S0, S0, S8
	062 Move [X19+56], S0
	063 Move [X19+64], S1
	064 Move [X19+64], W31
	065 Add X8, X31, 0
	066 Move X0, X20
	067 Move X1, X31
	068 Move [X19+68], S0
	069 Move [X19+76], S4
	070 Move [X19+76], W31
	071 Call Transform.get_localToWorldMatrix, X0
	072 Move V0, [X31]
	073 Move V1, [X31+16]
	074 Move V2, [X31+32]
	075 Move V3, [X31+48]
	076 Move X20, X31
	077 Add X21, X19, 40
	078 Move [X31+64], V0
	079 Move [X31+72], V1
	080 Move [X31+96], V2
	081 Move [X31+104], V3
	082 Move W8, [X19+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move S0, [X21-8]
	085 Move S1, [X21-4]
	086 Move V2, [X21]
	087 Add X0, X31, 64
	088 Move X1, X31
	089 Call Matrix4x4.MultiplyPoint, X0, X1
	090 Move W8, [X19+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X20, X20, 1
	093 Move [X21-8], S0
	094 Move [X21], S1
	095 Move [X21+12], S2
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, 0x555000
	098 Move X8, [X8+2600]
	099 Move X19, 0x5BE000
	100 Move X0, [X8]
	101 Move W8, [X0+224]
	102 Move X19, [X19+2760]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, [X19]
	107 Move X1, X31
	108 Call Debug.LogError, X0
	109 Move X20, [X31+176]
	110 Move X19, [X31+184]
	111 Move X30, [X31+160]
	112 Move X21, [X31+168]
	113 Move D9, [X31+144]
	114 Move D8, [X31+152]
	115 Move D11, [X31+128]
	116 Move D10, [X31+136]
	117 Add X31, X31, 192
	118 Return 
	119 Call 0x1C17F28
	120 Call 0x1C17F20

Method: System.Void OnDrawGizmosSelected()

Disassembly:
	0x03B9F66C LDR X0, [X0 + 0x258]

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B9F670 BL 0x1C16CF4
	0x03B9F674 MOVZ W8, 0x1
	0x03B9F678 STRB W8, [X20 + 0xC2C]
	0x03B9F67C LDR X0, [X21]
	0x03B9F680 LDR W8, [X0 + 0xE0]
	0x03B9F684 CBNZ W8, 0x3B9F68C
	0x03B9F688 BL 0x1C16DFC
	0x03B9F68C STR W31, [X19 + 0xA8]
	0x03B9F690 ADRP X20, 0x83A000
	0x03B9F694 LDRB W8, [X20 + 0x78F]
	0x03B9F698 CBNZ W8, 0x3B9F6B0
	0x03B9F69C ADRP X0, 0x55C000
	0x03B9F6A0 LDR X0, [X0 + 0xF08]
	0x03B9F6A4 BL 0x1C16CF4
	0x03B9F6A8 MOVZ W8, 0x1
	0x03B9F6AC STRB W8, [X20 + 0x78F]
	0x03B9F6B0 ADRP X8, 0x55C000
	0x03B9F6B4 LDR X8, [X8 + 0xF08]
	0x03B9F6B8 LDR X8, [X8]
	0x03B9F6BC LDR X8, [X8 + 0xB8]
	0x03B9F6C0 LDR V0, [X8]
	0x03B9F6C4 STRB W31, [X19 + 0xAC]
	0x03B9F6C8 STR D0, [X19 + 0x138]
	0x03B9F6CC LDP X20, X19, [X31 + 0x10]
	0x03B9F6D0 LDP X30, X21, [X31], #0x20
	0x03B9F6D4 RET
	0x03B9F6D8 STP X30, X21, [X31 - 0x20]!
	0x03B9F6DC STP X20, X19, [X31 + 0x10]
	0x03B9F6E0 ADRP X21, 0x843000
	0x03B9F6E4 LDRB W8, [X21 + 0xC2D]
	0x03B9F6E8 MOV X20, X1
	0x03B9F6EC MOV X19, X0
	0x03B9F6F0 TBNZ X8, 0x0, 0x3B9F720
	0x03B9F6F4 ADRP X0, 0x5BD000
	0x03B9F6F8 LDR X0, [X0 + 0x8B0]
	0x03B9F6FC BL 0x1C16CF4
	0x03B9F700 ADRP X0, 0x5AA000
	0x03B9F704 LDR X0, [X0 + 0x408]
	0x03B9F708 BL 0x1C16CF4
	0x03B9F70C ADRP X0, 0x5BC000
	0x03B9F710 LDR X0, [X0 + 0x258]
	0x03B9F714 BL 0x1C16CF4
	0x03B9F718 MOVZ W8, 0x1
	0x03B9F71C STRB W8, [X21 + 0xC2D]
	0x03B9F720 CBZ X20, 0x3B9F810
	0x03B9F724 LDR X8, [X19 + 0xD8]
	0x03B9F728 ADRP X9, 0x5BC000
	0x03B9F72C ADD X21, X20, 0x104
	0x03B9F730 STR X8, [X20 + 0x180]
	0x03B9F734 LDR W8, [X19 + 0x134]
	0x03B9F738 LDR X9, [X9 + 0x258]
	0x03B9F73C STR W8, [X20 + 0x18C]
	0x03B9F740 LDR X0, [X9]
	0x03B9F744 LDR W8, [X0 + 0xE0]
	0x03B9F748 CBNZ W8, 0x3B9F750
	0x03B9F74C BL 0x1C16DFC
	0x03B9F750 LDR W8, [X19 + 0xA0]
	0x03B9F754 ADD X1, X19, 0x38
	0x03B9F758 ADD X0, X20, 0xA0
	0x03B9F75C MOVZ W2, 0x50
	0x03B9F760 STR W8, [X20 + 0x100]
	0x03B9F764 LDR V0, [X19 + 0x138]
	0x03B9F768 STR D0, [X21 + 0x38]
	0x03B9F76C LDR X8, [X19 + 0x8]
	0x03B9F770 STR X8, [X20 + 0x20]
	0x03B9F774 LDRB W8, [X19 + 0x10]
	0x03B9F778 STRB W8, [X20 + 0x145]
	0x03B9F77C LDR V0, [X19 + 0x14]
	0x03B9F780 STR S0, [X20 + 0x134]
	0x03B9F784 LDR V0, [X19 + 0x18]
	0x03B9F788 STR D0, [X21]
	0x03B9F78C LDR V0, [X19 + 0x20]
	0x03B9F790 STR D0, [X21 + 0x10]
	0x03B9F794 LDR V0, [X19 + 0x28]
	0x03B9F798 LDR V1, [X19 + 0x30]
	0x03B9F79C STR D0, [X20 + 0x190]
	0x03B9F7A0 STR S1, [X20 + 0x198]
	0x03B9F7A4 BL 0x3EB1B30
	0x03B9F7A8 LDR X1, [X19 + 0x88]
	0x03B9F7AC MOV X0, X20
	0x03B9F7B0 MOV X2, X31
	0x03B9F7B4 BL 0x3E4F3AC
	0x03B9F7B8 LDR V0, [X19 + 0x9]
	0x03B9F7BC LDR X0, [X20 + 0xF0]
	0x03B9F7C0 STUR V0, [X20 + 0x38]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x844000
	012 Move X26, 0x55B000
	013 Move X25, 0x55F000
	014 Move X24, 0x5BE000
	015 Move X20, 0x5BE000
	016 Move X23, 0x5BE000
	017 Move X22, 0x5BE000
	018 Move X21, 0x5BC000
	019 Move X26, [X26+1160]
	020 Move X25, [X25+3584]
	021 Move W8, [X27+3102]
	022 Move X24, [X24+2768]
	023 Move X20, [X20+2776]
	024 Move X23, [X23+2784]
	025 Move X22, [X22+2792]
	026 Move X21, [X21+2696]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0x5BC000
	033 Move X0, [X0+2696]
	034 Call 0x1C17CF4
	035 Move X0, 0x5BE000
	036 Move X0, [X0+2792]
	037 Call 0x1C17CF4
	038 Move X0, 0x5BE000
	039 Move X0, [X0+2784]
	040 Call 0x1C17CF4
	041 Move X0, 0x5BE000
	042 Move X0, [X0+2776]
	043 Call 0x1C17CF4
	044 Move X0, 0x5BE000
	045 Move X0, [X0+2768]
	046 Call 0x1C17CF4
	047 Move X0, 0x55F000
	048 Move X0, [X0+3584]
	049 Call 0x1C17CF4
	050 Move X0, 0x55B000
	051 Move X0, [X0+1160]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X27+3102], W8
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W0, TEMP
	058 Move X1, X31
	059 Call LayerMask.op_Implicit, X0
	060 Move W8, 1
	061 Move [X19+44], W0
	062 Move [X19+48], W8
	063 Move X0, [X26]
	064 Move W1, 10
	065 Call 0x1C17D6C
	066 Move [X19+72], X0
	067 Move X0, [X25]
	068 Move W1, 1
	069 Call 0x1C17D6C
	070 Move [X19+80], X0
	071 Move X0, [X24]
	072 Call 0x1C17F10
	073 Move X1, [X20]
	074 Move X20, X0
	075 Call List`1<RaycastHitData>..ctor, X0
	076 Move [X19+88], X20
	077 Move X0, [X23]
	078 Call 0x1C17F10
	079 Move X1, [X22]
	080 Move X20, X0
	081 Call Dictionary`2<Object, Object>..ctor, X0
	082 Move [X19+104], X20
	083 Move X0, [X21]
	084 Call 0x1C17F10
	085 Move X1, X31
	086 Move X20, X0
	087 Call BindingsGroup..ctor, X0
	088 Move [X19+112], X20
	089 Move X0, X19
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X24, [X31+32]
	095 Move X23, [X31+40]
	096 Move X26, [X31+16]
	097 Move X25, [X31+24]
	098 Move X1, X31
	099 Move X30, [X31+80]
	100 Move X27, [X31+88]
	101 Call BaseRaycaster..ctor, X0
	102 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B9F7C4 CBZ X0, 0x3B9F810
	0x03B9F7C8 LDP W2, W8, [X0 + 0x18]
	0x03B9F7CC ADD W8, W8, 0x1
	0x03B9F7D0 CMP W2, 0x1
	0x03B9F7D4 STP W31, W8, [X0 + 0x18]
	0x03B9F7D8 B.LT 0x3B9F7F4
	0x03B9F7DC LDR X0, [X0 + 0x10]
	0x03B9F7E0 MOV W1, W31
	0x03B9F7E4 MOV X3, X31
	0x03B9F7E8 BL 0x339FA34
	0x03B9F7EC LDR X0, [X20 + 0xF0]
	0x03B9F7F0 CBZ X0, 0x3B9F810
	0x03B9F7F4 ADRP X8, 0x5BD000
	0x03B9F7F8 LDR X8, [X8 + 0x8B0]
	0x03B9F7FC LDR X1, [X19]
	0x03B9F800 LDP X20, X19, [X31 + 0x10]
	0x03B9F804 LDR X2, [X8]
	0x03B9F808 LDP X30, X21, [X31], #0x20
	0x03B9F80C B 0x301C194
	0x03B9F810 BL 0x1C16F20
	0x03B9F814 SUB X31, X31, 0x70
	0x03B9F818 STP X30, X21, [X31 + 0x50]
	0x03B9F81C STP X20, X19, [X31 + 0x60]
	0x03B9F820 ADRP X21, 0x843000
	0x03B9F824 LDRB W8, [X21 + 0xC2E]
	0x03B9F828 MOV X19, X1
	0x03B9F82C MOV X20, X0
	0x03B9F830 TBNZ X8, 0x0, 0x3B9F860
	0x03B9F834 ADRP X0, 0x5BD000
	0x03B9F838 LDR X0, [X0 + 0x8B0]
	0x03B9F83C BL 0x1C16CF4
	0x03B9F840 ADRP X0, 0x5AA000
	0x03B9F844 LDR X0, [X0 + 0x408]
	0x03B9F848 BL 0x1C16CF4
	0x03B9F84C ADRP X0, 0x5BC000
	0x03B9F850 LDR X0, [X0 + 0x258]
	0x03B9F854 BL 0x1C16CF4
	0x03B9F858 MOVZ W8, 0x1
	0x03B9F85C STRB W8, [X21 + 0xC2E]
	0x03B9F860 CBZ X19, 0x3B9F958
	0x03B9F864 LDR X8, [X19 + 0x20]
	0x03B9F868 ADD X1, X19, 0xA0
	0x03B9F86C ADD X0, X20, 0x38
	0x03B9F870 MOVZ W2, 0x50
	0x03B9F874 STR X8, [X20 + 0x8]
	0x03B9F878 LDRB W8, [X19 + 0x145]
	0x03B9F87C STRB W8, [X20 + 0x10]
	0x03B9F880 LDR V0, [X19 + 0x134]
	0x03B9F884 ADD X8, X19, 0x104
	0x03B9F888 STR S0, [X20 + 0x14]
	0x03B9F88C LDR V0, [X8]
	0x03B9F890 STR D0, [X20 + 0x18]
	0x03B9F894 LDR V0, [X8 + 0x10]
	0x03B9F898 STR D0, [X20 + 0x20]
	0x03B9F89C LDR V0, [X19 + 0x190]
	0x03B9F8A0 LDR V1, [X19 + 0x198]
	0x03B9F8A4 STR D0, [X20 + 0x28]
	0x03B9F8A8 STR S1, [X20 + 0x30]
	0x03B9F8AC BL 0x3EB1B30
	0x03B9F8B0 LDR X8, [X19 + 0x28]
	0x03B9F8B4 LDR X0, [X20]
	0x03B9F8B8 STR X8, [X20 + 0x88]
	0x03B9F8BC LDUR V0, [X19 + 0x38]
	0x03B9F8C0 STR V0, [X20 + 0x9]
	0x03B9F8C4 CBZ X0, 0x3B9F958
	0x03B9F8C8 LDP W2, W8, [X0 + 0x18]
	0x03B9F8CC ADD W8, W8, 0x1
	0x03B9F8D0 CMP W2, 0x1
	0x03B9F8D4 STP W31, W8, [X0 + 0x18]
	0x03B9F8D8 B.LT 0x3B9F8F4
	0x03B9F8DC LDR X0, [X0 + 0x10]
	0x03B9F8E0 MOV W1, W31
	0x03B9F8E4 MOV X3, X31
	0x03B9F8E8 BL 0x339FA34
	0x03B9F8EC LDR X0, [X20]
	0x03B9F8F0 CBZ X0, 0x3B9F958
	0x03B9F8F4 ADRP X8, 0x5BD000
	0x03B9F8F8 LDR X8, [X8 + 0x8B0]
	0x03B9F8FC LDR X1, [X19 + 0xF0]
	0x03B9F900 ADRP X21, 0x5BC000
	0x03B9F904 LDR X2, [X8]
	0x03B9F908 LDR X21, [X21 + 0x258]
	0x03B9F90C BL 0x301C194
	0x03B9F910 ADD X1, X19, 0x50
	0x03B9F914 ADD X0, X31, 0x0
	0x03B9F918 MOVZ W2, 0x50
	0x03B9F91C BL 0x3EB1AC0
	0x03B9F920 LDR X0, [X21]
	0x03B9F924 LDR W8, [X0 + 0xE0]
	0x03B9F928 CBNZ W8, 0x3B9F930
	0x03B9F92C BL 0x1C16DFC
	0x03B9F930 ADD X0, X20, 0xE0
	0x03B9F934 ADD X1, X31, 0x0
	0x03B9F938 MOVZ W2, 0x50
	0x03B9F93C BL 0x3EB1AC0
	0x03B9F940 LDR W8, [X19 + 0x188]
	0x03B9F944 LDP X30, X21, [X31 + 0x50]
	0x03B9F948 STR W8, [X20 + 0x130]
	0x03B9F94C LDP X20, X19, [X31 + 0x60]
	0x03B9F950 ADD X31, X31, 0x70
	0x03B9F954 RET

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x844000
	013 Move X28, 0x5BE000
	014 Move X20, 0x5BD000
	015 Move X27, 0x557000
	016 Move X26, 0x5BE000
	017 Move X25, 0x5BE000
	018 Move X24, 0x5BE000
	019 Move X23, 0x5BE000
	020 Move X22, 0x5BE000
	021 Move X21, 0x5BE000
	022 Move X28, [X28+2800]
	023 Move X20, [X20+456]
	024 Move X27, [X27+2480]
	025 Move X26, [X26+2768]
	026 Move W8, [X19+3103]
	027 Move X25, [X25+2776]
	028 Move X24, [X24+2808]
	029 Move X23, [X23+2816]
	030 Move X22, [X22+2824]
	031 Move X21, [X21+2832]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {65}
	036 Move X0, 0x5BE000
	037 Move X0, [X0+2816]
	038 Call 0x1C17CF4
	039 Move X0, 0x5BE000
	040 Move X0, [X0+2832]
	041 Call 0x1C17CF4
	042 Move X0, 0x5BE000
	043 Move X0, [X0+2808]
	044 Call 0x1C17CF4
	045 Move X0, 0x5BE000
	046 Move X0, [X0+2824]
	047 Call 0x1C17CF4
	048 Move X0, 0x5BE000
	049 Move X0, [X0+2776]
	050 Call 0x1C17CF4
	051 Move X0, 0x5BE000
	052 Move X0, [X0+2768]
	053 Call 0x1C17CF4
	054 Move X0, 0x5BE000
	055 Move X0, [X0+2800]
	056 Call 0x1C17CF4
	057 Move X0, 0x5BD000
	058 Move X0, [X0+456]
	059 Call 0x1C17CF4
	060 Move X0, 0x557000
	061 Move X0, [X0+2480]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+3103], W8
	065 Move X0, [X28]
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X19, X0
	069 Call Object..ctor, X0
	070 Move X8, [X20]
	071 Move W1, 4
	072 Move X8, [X8+184]
	073 Move [X8], X19
	074 Move X0, [X27]
	075 Call 0x1C17D6C
	076 Move X8, [X20]
	077 Move X8, [X8+184]
	078 Move [X8+8], X0
	079 Move X0, [X26]
	080 Call 0x1C17F10
	081 Move X1, [X25]
	082 Move X19, X0
	083 Call List`1<RaycastHitData>..ctor, X0
	084 Move X8, [X20]
	085 Move X8, [X8+184]
	086 Move [X8+16], X19
	087 Move X0, [X24]
	088 Call 0x1C17F10
	089 Move X1, [X23]
	090 Move X19, X0
	091 Call Dictionary`2<Object, Object>..ctor, X0
	092 Move X8, [X20]
	093 Move X8, [X8+184]
	094 Move [X8+24], X19
	095 Move X0, [X22]
	096 Call 0x1C17F10
	097 Move X1, [X21]
	098 Move X19, X0
	099 Call Dictionary`2<Object, Object>..ctor, X0
	100 Move X8, [X20]
	101 Move X22, [X31+64]
	102 Move X21, [X31+72]
	103 Move X24, [X31+48]
	104 Move X23, [X31+56]
	105 Move X26, [X31+32]
	106 Move X25, [X31+40]
	107 Move X8, [X8+184]
	108 Move X28, [X31+16]
	109 Move X27, [X31+24]
	110 Move [X8+32], X19
	111 Move X20, [X31+80]
	112 Move X19, [X31+88]
	113 Move X30, [X31+96]
	114 Return 

Method: System.Void <SetupPoke>b__56_0(UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData data)

Disassembly:
	0x03B9F960 STP X20, X19, [X31 + 0x10]
	0x03B9F964 ADRP X21, 0x843000
	0x03B9F968 ADRP X20, 0x5BC000
	0x03B9F96C MOV X19, X8
	0x03B9F970 LDRB W8, [X21 + 0xC2F]
	0x03B9F974 LDR X20, [X20 + 0x258]
	0x03B9F978 TBNZ X8, 0x0, 0x3B9F990
	0x03B9F97C ADRP X0, 0x5BC000
	0x03B9F980 LDR X0, [X0 + 0x258]
	0x03B9F984 BL 0x1C16CF4
	0x03B9F988 MOVZ W8, 0x1
	0x03B9F98C STRB W8, [X21 + 0xC2F]
	0x03B9F990 LDR X0, [X20]
	0x03B9F994 LDR W8, [X0 + 0xE0]
	0x03B9F998 CBNZ W8, 0x3B9F9A4
	0x03B9F99C BL 0x1C16DFC
	0x03B9F9A0 LDR X0, [X20]
	0x03B9F9A4 LDR X1, [X0 + 0xB8]
	0x03B9F9A8 MOV X0, X19
	0x03B9F9AC LDP X20, X19, [X31 + 0x10]
	0x03B9F9B0 MOVZ W2, 0x158
	0x03B9F9B4 LDP X30, X21, [X31], #0x20
	0x03B9F9B8 B 0x3EB1AC0
	0x03B9F9BC LDR V0, [X0 + 0x154]
	0x03B9F9C0 RET
	0x03B9F9C4 STR S0, [X0 + 0x154]
	0x03B9F9C8 RET
	0x03B9F9CC SUB X31, X31, 0x180
	0x03B9F9D0 STP X29, X30, [X31 + 0x160]
	0x03B9F9D4 STP X20, X19, [X31 + 0x170]
	0x03B9F9D8 ADRP X20, 0x843000
	0x03B9F9DC ADRP X19, 0x5BC000
	0x03B9F9E0 LDRB W8, [X20 + 0xC30]
	0x03B9F9E4 LDR X19, [X19 + 0x258]
	0x03B9F9E8 TBNZ X8, 0x0, 0x3B9FA00
	0x03B9F9EC ADRP X0, 0x5BC000
	0x03B9F9F0 LDR X0, [X0 + 0x258]
	0x03B9F9F4 BL 0x1C16CF4
	0x03B9F9F8 MOVZ W8, 0x1
	0x03B9F9FC STRB W8, [X20 + 0xC30]
	0x03B9FA00 ADD X0, X31, 0x8
	0x03B9FA04 MOVZ W2, 0x158
	0x03B9FA08 MOV W1, W31
	0x03B9FA0C BL 0x3EB1B10
	0x03B9FA10 ADD X0, X31, 0x8
	0x03B9FA14 MOVN W1, 0x0
	0x03B9FA18 BL 0x3B9F2A8
	0x03B9FA1C LDR X8, [X19]
	0x03B9FA20 ADD X1, X31, 0x8
	0x03B9FA24 MOVZ W2, 0x158
	0x03B9FA28 LDR X0, [X8 + 0xB8]
	0x03B9FA2C BL 0x3EB1AC0
	0x03B9FA30 LDP X20, X19, [X31 + 0x170]
	0x03B9FA34 LDP X29, X30, [X31 + 0x160]
	0x03B9FA38 ADD X31, X31, 0x180
	0x03B9FA3C RET
	0x03B9FA40 LDR X0, [X0]
	0x03B9FA44 RET
	0x03B9FA48 STR X1, [X0]
	0x03B9FA4C RET
	0x03B9FA50 LDR X0, [X0 + 0x8]
	0x03B9FA54 RET
	0x03B9FA58 STR X1, [X0 + 0x8]
	0x03B9FA5C RET
	0x03B9FA60 LDRB W0, [X0 + 0x10]
	0x03B9FA64 RET
	0x03B9FA68 AND W8, W1, 0x1
	0x03B9FA6C STRB W8, [X0 + 0x10]
	0x03B9FA70 RET
	0x03B9FA74 LDR V0, [X0 + 0x14]
	0x03B9FA78 RET
	0x03B9FA7C STR S0, [X0 + 0x14]
	0x03B9FA80 RET
	0x03B9FA84 LDP S0, S1, [X0 + 0x18]
	0x03B9FA88 RET
	0x03B9FA8C STP S0, S1, [X0 + 0x18]
	0x03B9FA90 RET
	0x03B9FA94 LDP S0, S1, [X0 + 0x20]
	0x03B9FA98 RET
	0x03B9FA9C STP S0, S1, [X0 + 0x20]
	0x03B9FAA0 RET
	0x03B9FAA4 LDP S0, S1, [X0 + 0x28]
	0x03B9FAA8 LDR V2, [X0 + 0x30]
	0x03B9FAAC RET
	0x03B9FAB0 STP S0, S1, [X0 + 0x28]
	0x03B9FAB4 STR S2, [X0 + 0x30]
	0x03B9FAB8 RET
	0x03B9FABC ADD X1, X0, 0x38
	0x03B9FAC0 MOVZ W2, 0x50
	0x03B9FAC4 MOV X0, X8
	0x03B9FAC8 B 0x3EB1AC0
	0x03B9FACC STR X30, [X31 - 0x10]!
	0x03B9FAD0 ADD X0, X0, 0x38
	0x03B9FAD4 MOVZ W2, 0x50
	0x03B9FAD8 BL 0x3EB1B30
	0x03B9FADC LDR X30, [X31], #0x10
	0x03B9FAE0 RET
	0x03B9FAE4 LDR X0, [X0 + 0x88]
	0x03B9FAE8 RET
	0x03B9FAEC STR X1, [X0 + 0x88]
	0x03B9FAF0 RET
	0x03B9FAF4 LDR X0, [X0 + 0x90]
	0x03B9FAF8 RET
	0x03B9FAFC STR X1, [X0 + 0x90]
	0x03B9FB00 RET
	0x03B9FB04 LDR X0, [X0 + 0x98]
	0x03B9FB08 RET
	0x03B9FB0C STR X1, [X0 + 0x98]
	0x03B9FB10 RET
	0x03B9FB14 LDR W0, [X0 + 0x28]
	0x03B9FB18 RET
	0x03B9FB1C STR W1, [X0 + 0x28]
	0x03B9FB20 RET
	0x03B9FB24 LDR W0, [X0 + 0x2C]
	0x03B9FB28 RET
	0x03B9FB2C STR W1, [X0 + 0x2C]
	0x03B9FB30 RET
	0x03B9FB34 LDR W0, [X0 + 0x30]
	0x03B9FB38 RET
	0x03B9FB3C STR X30, [X31 - 0x30]!
	0x03B9FB40 STP X22, X21, [X31 + 0x10]
	0x03B9FB44 STP X20, X19, [X31 + 0x20]
	0x03B9FB48 ADRP X21, 0x843000
	0x03B9FB4C ADRP X22, 0x554000
	0x03B9FB50 LDRB W8, [X21 + 0xC32]
	0x03B9FB54 LDR X22, [X22 + 0x5A8]
	0x03B9FB58 MOV W20, W1
	0x03B9FB5C MOV X19, X0
	0x03B9FB60 TBNZ X8, 0x0, 0x3B9FB78
	0x03B9FB64 ADRP X0, 0x554000
	0x03B9FB68 LDR X0, [X0 + 0x5A8]
	0x03B9FB6C BL 0x1C16CF4
	0x03B9FB70 MOVZ W8, 0x1
	0x03B9FB74 STRB W8, [X21 + 0xC32]
	0x03B9FB78 LDR X0, [X22]
	0x03B9FB7C LDR W8, [X0 + 0xE0]
	0x03B9FB80 CBNZ W8, 0x3B9FB88
	0x03B9FB84 BL 0x1C16DFC
	0x03B9FB88 MOVZ W1, 0x1
	0x03B9FB8C MOV W0, W20
	0x03B9FB90 MOV X2, X31
	0x03B9FB94 BL 0x337EDF0
	0x03B9FB98 STR W0, [X19 + 0x30]
	0x03B9FB9C LDP X20, X19, [X31 + 0x20]
	0x03B9FBA0 LDP X22, X21, [X31 + 0x10]
	0x03B9FBA4 LDR X30, [X31], #0x30
	0x03B9FBA8 RET
	0x03B9FBAC STP X30, X21, [X31 - 0x20]!
	0x03B9FBB0 STP X20, X19, [X31 + 0x10]
	0x03B9FBB4 ADRP X20, 0x843000
	0x03B9FBB8 ADRP X21, 0x554000
	0x03B9FBBC LDRB W8, [X20 + 0xC33]
	0x03B9FBC0 LDR X21, [X21 + 0x598]
	0x03B9FBC4 MOV X19, X0
	0x03B9FBC8 TBNZ X8, 0x0, 0x3B9FBEC
	0x03B9FBCC ADRP X0, 0x57C000
	0x03B9FBD0 LDR X0, [X0 + 0x2C8]
	0x03B9FBD4 BL 0x1C16CF4
	0x03B9FBD8 ADRP X0, 0x554000
	0x03B9FBDC LDR X0, [X0 + 0x598]
	0x03B9FBE0 BL 0x1C16CF4
	0x03B9FBE4 MOVZ W8, 0x1
	0x03B9FBE8 STRB W8, [X20 + 0xC33]
	0x03B9FBEC LDR X0, [X21]
	0x03B9FBF0 LDR X20, [X19 + 0x38]
	0x03B9FBF4 LDR W8, [X0 + 0xE0]
	0x03B9FBF8 CBNZ W8, 0x3B9FC00
	0x03B9FBFC BL 0x1C16DFC
	0x03B9FC00 MOV X0, X20
	0x03B9FC04 MOV X1, X31
	0x03B9FC08 MOV X2, X31
	0x03B9FC0C BL 0x3C3883C
	0x03B9FC10 TBZ X0, 0x0, 0x3B9FC34
	0x03B9FC14 ADRP X8, 0x57C000
	0x03B9FC18 LDR X8, [X8 + 0x2C8]
	0x03B9FC1C MOV X0, X19
	0x03B9FC20 LDR X1, [X8]
	0x03B9FC24 BL 0x21A3894
	0x03B9FC28 MOV X20, X0
	0x03B9FC2C STR X0, [X19 + 0x38]
	0x03B9FC30 B 0x3B9FC38
	0x03B9FC34 LDR X20, [X19 + 0x38]
	0x03B9FC38 LDR X0, [X21]
	0x03B9FC3C LDR W8, [X0 + 0xE0]
	0x03B9FC40 CBNZ W8, 0x3B9FC48
	0x03B9FC44 BL 0x1C16DFC
	0x03B9FC48 MOV X0, X20
	0x03B9FC4C MOV X1, X31
	0x03B9FC50 MOV X2, X31
	0x03B9FC54 BL 0x3C354F8
	0x03B9FC58 TBZ X0, 0x0, 0x3B9FC6C
	0x03B9FC5C LDR X0, [X19 + 0x38]
	0x03B9FC60 LDP X20, X19, [X31 + 0x10]
	0x03B9FC64 LDP X30, X21, [X31], #0x20
	0x03B9FC68 RET
	0x03B9FC6C LDP X20, X19, [X31 + 0x10]
	0x03B9FC70 MOV X0, X31
	0x03B9FC74 LDP X30, X21, [X31], #0x20
	0x03B9FC78 B 0x3C047F8
	0x03B9FC7C STR X1, [X0 + 0x38]
	0x03B9FC80 RET
	0x03B9FC84 STR X30, [X31 - 0x30]!
	0x03B9FC88 STP X22, X21, [X31 + 0x10]
	0x03B9FC8C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X22, 0x844000
	009 Move X21, 0x555000
	010 Move W8, [X22+3104]
	011 Move X21, [X21+1432]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0x5BD000
	019 Move X0, [X0+504]
	020 Call 0x1C17CF4
	021 Move X0, 0x5BD000
	022 Move X0, [X0+624]
	023 Call 0x1C17CF4
	024 Move X0, 0x5BD000
	025 Move X0, [X0+616]
	026 Call 0x1C17CF4
	027 Move X0, 0x5BE000
	028 Move X0, [X0+2480]
	029 Call 0x1C17CF4
	030 Move X0, 0x5BE000
	031 Move X0, [X0+2488]
	032 Call 0x1C17CF4
	033 Move X0, 0x5BE000
	034 Move X0, [X0+2840]
	035 Call 0x1C17CF4
	036 Move X0, 0x5BE000
	037 Move X0, [X0+2496]
	038 Call 0x1C17CF4
	039 Move X0, 0x5BE000
	040 Move X0, [X0+2848]
	041 Call 0x1C17CF4
	042 Move X0, 0x5BE000
	043 Move X0, [X0+2856]
	044 Call 0x1C17CF4
	045 Move X0, 0x5BE000
	046 Move X0, [X0+2864]
	047 Call 0x1C17CF4
	048 Move X0, 0x555000
	049 Move X0, [X0+1432]
	050 Call 0x1C17CF4
	051 Move X0, 0x5BE000
	052 Move X0, [X0+2872]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X22+3104], W8
	056 Move X0, [X21]
	057 Move [X31+56], X31
	058 Move [X31+64], X31
	059 Move [X31+72], X31
	060 Move X21, [X19+48]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X21
	066 Move X1, X31
	067 Move X2, X31
	068 Call Object.op_Inequality, X0, X1
	069 Move X8, [X20+104]
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {146}
	074 Compare X8, 0
	075 JumpIfEqual {207}
	076 Move X9, 0x5BE000
	077 Move X1, [X19+48]
	078 Move X9, [X9+2480]
	079 Move X0, X8
	080 Move X2, [X9]
	081 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {115}
	086 Move X8, 0x5BD000
	087 Move X21, [X20+104]
	088 Move X22, [X19+48]
	089 Move X8, [X8+616]
	090 Move X0, [X8]
	091 Call 0x1C17F10
	092 Move X8, 0x5BD000
	093 Move X8, [X8+624]
	094 NotImplemented "Instruction MOVI not yet implemented."
	095 Add X1, X31, 80
	096 Move W2, 1
	097 Move X5, [X8]
	098 Move X3, X31
	099 Move W4, W31
	100 Move X23, X0
	101 Move [X31+128], X31
	102 Move [X31+96], V0
	103 Move [X31+104], V0
	104 Move [X31+5], V0
	105 Call BindableVariable`1<PokeStateData>..ctor, X0, X1, X2, X3, X4
	106 Compare X21, 0
	107 JumpIfEqual {207}
	108 Move X8, 0x5BE000
	109 Move X8, [X8+2496]
	110 Move X0, X21
	111 Move X1, X22
	112 Move X2, X23
	113 Move X3, [X8]
	114 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	115 Move X0, [X20+104]
	116 Compare X0, 0
	117 JumpIfEqual {207}
	118 Move X8, 0x5BE000
	119 Move X1, [X19+48]
	120 Move X8, [X8+2488]
	121 Move X2, [X8]
	122 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	123 Move X8, [X19+48]
	124 Move V1, [X19+16]
	125 Move V0, [X19+32]
	126 Move V2, [X19]
	127 Move [X31+48], X8
	128 Move [X31+16], V1
	129 Move [X31+24], V0
	130 Move [X31], V2
	131 Compare X0, 0
	132 JumpIfEqual {207}
	133 Move X8, 0x5BD000
	134 Move X8, [X8+504]
	135 Move V0, [X31]
	136 Move V1, [X31+16]
	137 Move V2, [X31+2]
	138 Move X9, [X31+48]
	139 Move X2, [X8]
	140 Add X1, X31, 80
	141 Move [X31+80], V0
	142 Move [X31+88], V1
	143 Move [X31+7], V2
	144 Move [X31+128], X9
	145 Call BindableVariableBase`1<PokeStateData>.set_Value, X0, X1
	146 Compare X8, 0
	147 JumpIfEqual {207}
	148 Move X9, 0x5BE000
	149 Move X9, [X9+2840]
	150 Move X0, X8
	151 Move X1, [X9]
	152 Call Dictionary`2<Object, Object>.get_Values, X0
	153 Compare X0, 0
	154 JumpIfEqual {207}
	155 Move X8, 0x5BE000
	156 Move X8, [X8+2872]
	157 Move X1, [X8]
	158 Add X8, X31, 56
	159 Call ValueCollection<Object, Object>.GetEnumerator, X0
	160 Move X20, 0x5BE000
	161 Move X21, 0x5BD000
	162 Move X20, [X20+2856]
	163 Move X21, [X21+504]
	164 Move X1, [X20]
	165 Add X0, X31, 56
	166 Call Enumerator<Object, Object>.MoveNext, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {193}
	171 Move V2, [X19+16]
	172 Move V0, [X19+32]
	173 Move X8, [X19+48]
	174 Move V1, [X19]
	175 Move X0, [X31+72]
	176 Move [X31+16], V2
	177 Move [X31+24], V0
	178 Move [X31+48], X8
	179 Move [X31], V1
	180 Compare X0, 0
	181 JumpIfEqual {206}
	182 Move V0, [X31]
	183 Move V1, [X31+16]
	184 Move V2, [X31+2]
	185 Move X8, [X31+48]
	186 Move X2, [X21]
	187 Move [X31+80], V0
	188 Move [X31+88], V1
	189 Move [X31+7], V2
	190 Move [X31+128], X8
	191 Add X1, X31, 80
	192 Call BindableVariableBase`1<PokeStateData>.set_Value, X0, X1
	193 Move X8, 0x5BE000
	194 Move X8, [X8+2848]
	195 Add X0, X31, 56
	196 Move X1, [X8]
	197 Call Enumerator<Object, Object>.Dispose, X0
	198 Move X20, [X31+176]
	199 Move X19, [X31+184]
	200 Move X22, [X31+160]
	201 Move X21, [X31+168]
	202 Move X30, [X31+144]
	203 Move X23, [X31+152]
	204 Add X31, X31, 192
	205 Return 
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Move X19, X0
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, X19
	211 Call 0x3EB2AD0
	212 Move X20, [X0]
	213 Call 0x3EB2AE0
	214 Move X8, 0x5BE000
	215 Move X8, [X8+2848]
	216 Add X0, X31, 56
	217 Move X1, [X8]
	218 Call Enumerator<Object, Object>.Dispose, X0
	219 Compare X20, 0
	220 JumpIfEqual {198}
	221 Move X0, X20
	222 Call 0x1C17F18
	223 Move X20, X31
	224 Move X19, X0
	225 Move X8, 0x5BE000
	226 Move X8, [X8+2848]
	227 Move X1, [X8]
	228 Add X0, X31, 56
	229 Call Enumerator<Object, Object>.Dispose, X0
	230 Compare X20, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X19
	233 Call 0x1D2D690
	234 Move X0, X20
	235 Call 0x1C17F18
	236 Call 0x1991590

