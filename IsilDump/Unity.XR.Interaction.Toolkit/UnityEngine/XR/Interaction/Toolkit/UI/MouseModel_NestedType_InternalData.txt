Type: UnityEngine.XR.Interaction.Toolkit.UI.MouseModel/InternalData

Method: System.Collections.Generic.List`1<UnityEngine.GameObject> get_hoverTargets()

Disassembly:
	0x03B9A3C8 MOV X0, X19
	0x03B9A3CC BL 0x3EB1AC0

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_hoverTargets(System.Collections.Generic.List`1<UnityEngine.GameObject> value)

Disassembly:
	0x03B9A3D0 CMP W20, W23
	0x03B9A3D4 CSET W0, LT

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.GameObject get_pointerTarget()

Disassembly:
	0x03B9A3D8 ADD X31, X31, 0x2C0
	0x03B9A3DC LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_pointerTarget(UnityEngine.GameObject value)

Disassembly:
	0x03B9A3E0 LDP X22, X21, [X31 + 0x20]
	0x03B9A3E4 LDP X24, X23, [X31 + 0x10]
	0x03B9A3E8 LDP X29, X30, [X31], #0x40
	0x03B9A3EC RET
	0x03B9A3F0 SUB X31, X31, 0x190
	0x03B9A3F4 STR X29, [X31 + 0x160]
	0x03B9A3F8 STP X30, X21, [X31 + 0x170]
	0x03B9A3FC STP X20, X19, [X31 + 0x180]
	0x03B9A400 ADRP X21, 0x848000
	0x03B9A404 ADRP X20, 0x559000
	0x03B9A408 LDRB W8, [X21 + 0xC02]
	0x03B9A40C LDR X20, [X20 + 0x598]
	0x03B9A410 MOV X19, X0
	0x03B9A414 TBNZ X8, 0x0, 0x3B9A438
	0x03B9A418 ADRP X0, 0x559000
	0x03B9A41C LDR X0, [X0 + 0x598]
	0x03B9A420 BL 0x1C16CF4
	0x03B9A424 ADRP X0, 0x5C1000
	0x03B9A428 LDR X0, [X0 + 0x258]
	0x03B9A42C BL 0x1C16CF4
	0x03B9A430 MOVZ W8, 0x1
	0x03B9A434 STRB W8, [X21 + 0xC02]
	0x03B9A438 ADD X0, X31, 0x8
	0x03B9A43C MOVZ W2, 0x158
	0x03B9A440 MOV W1, W31
	0x03B9A444 BL 0x3EB1B10
	0x03B9A448 LDR X0, [X20]
	0x03B9A44C LDR X20, [X19 + 0x10]
	0x03B9A450 LDR W8, [X0 + 0xE0]
	0x03B9A454 CBNZ W8, 0x3B9A45C
	0x03B9A458 BL 0x1C16DFC
	0x03B9A45C MOV X0, X20
	0x03B9A460 MOV X1, X31
	0x03B9A464 MOV X2, X31
	0x03B9A468 BL 0x3C354F8
	0x03B9A46C TBZ X0, 0x0, 0x3B9A4BC
	0x03B9A470 ADD X1, X31, 0x8
	0x03B9A474 MOV X0, X19
	0x03B9A478 BL 0x3B9A1D4
	0x03B9A47C TBZ X0, 0x0, 0x3B9A4BC
	0x03B9A480 ADRP X8, 0x5C1000
	0x03B9A484 LDR X8, [X8 + 0x258]
	0x03B9A488 LDR X19, [X19 + 0x10]
	0x03B9A48C LDR X0, [X8]
	0x03B9A490 LDR W8, [X0 + 0xE0]
	0x03B9A494 CBNZ W8, 0x3B9A49C
	0x03B9A498 BL 0x1C16DFC
	0x03B9A49C CBZ X19, 0x3B9A4D8
	0x03B9A4A0 LDR X8, [X19]
	0x03B9A4A4 LDR W1, [X31 + 0xA8]
	0x03B9A4A8 MOV X0, X19
	0x03B9A4AC LDR X9, [X8 + 0x278]
	0x03B9A4B0 LDR X2, [X8 + 0x280]
	0x03B9A4B4 BLR X9
	0x03B9A4B8 B 0x3B9A4C0
	0x03B9A4BC MOV W0, W31
	0x03B9A4C0 LDP X20, X19, [X31 + 0x180]
	0x03B9A4C4 LDP X30, X21, [X31 + 0x170]
	0x03B9A4C8 LDR X29, [X31 + 0x160]
	0x03B9A4CC AND W0, W0, 0x1
	0x03B9A4D0 ADD X31, X31, 0x190
	0x03B9A4D4 RET
	0x03B9A4D8 BL 0x1C16F20
	0x03B9A4DC LDR W0, [X0]
	0x03B9A4E0 RET
	0x03B9A4E4 LDR W0, [X0 + 0x14]
	0x03B9A4E8 RET
	0x03B9A4EC LDR W8, [X0 + 0x14]
	0x03B9A4F0 CMP W8, W1
	0x03B9A4F4 B.EQ 0x3B9A52C
	0x03B9A4F8 SUB W8, W1, 0x3
	0x03B9A4FC CMP W8, 0x2
	0x03B9A500 B.CS 0x3B9A50C
	0x03B9A504 MOVZ W8, 0x2
	0x03B9A508 B 0x3B9A514
	0x03B9A50C CBNZ W1, 0x3B9A520
	0x03B9A510 MOVZ W8, 0x1
	0x03B9A514 LDR W9, [X0 + 0x4]
	0x03B9A518 ORR W8, W9, W8, 0x0
	0x03B9A51C STR W8, [X0 + 0x4]
	0x03B9A520 MOVZ W8, 0x1
	0x03B9A524 STR W1, [X0 + 0x14]
	0x03B9A528 STRB W8, [X0 + 0x8]
	0x03B9A52C RET
	0x03B9A530 LDR W0, [X0 + 0x4]
	0x03B9A534 RET
	0x03B9A538 STR W1, [X0 + 0x4]
	0x03B9A53C RET
	0x03B9A540 LDRB W0, [X0 + 0x8]
	0x03B9A544 RET
	0x03B9A548 AND W8, W1, 0x1
	0x03B9A54C STRB W8, [X0 + 0x8]
	0x03B9A550 RET
	0x03B9A554 LDP S0, S1, [X0 + 0x18]
	0x03B9A558 RET
	0x03B9A55C LDP S2, S3, [X0 + 0x18]
	0x03B9A560 ADRP X8, 0xFFFFFFFFFCF4F000
	0x03B9A564 LDR V4, [X8 + 0xF20]
	0x03B9A568 FSUB S5, S2, S0
	0x03B9A56C FSUB S6, S3, S1
	0x03B9A570 FMUL S5, S5, S5
	0x03B9A574 FMUL S6, S6, S6
	0x03B9A578 FADD S5, S5, S6
	0x03B9A57C FCMP S5, S4
	0x03B9A580 B.MI 0x3B9A59C
	0x03B9A584 FSUB S2, S0, S2
	0x03B9A588 FSUB S3, S1, S3
	0x03B9A58C MOVZ W8, 0x1
	0x03B9A590 STP S0, S1, [X0 + 0x18]
	0x03B9A594 STP S2, S3, [X0 + 0xC]
	0x03B9A598 STRB W8, [X0 + 0x8]
	0x03B9A59C RET
	0x03B9A5A0 LDP S0, S1, [X0 + 0xC]
	0x03B9A5A4 RET
	0x03B9A5A8 STP S0, S1, [X0 + 0xC]
	0x03B9A5AC RET
	0x03B9A5B0 STR X30, [X31 - 0x20]!
	0x03B9A5B4 STP X20, X19, [X31 + 0x10]
	0x03B9A5B8 STR W1, [X0]
	0x03B9A5BC ADRP X20, 0x83F000
	0x03B9A5C0 LDRB W8, [X20 + 0x78F]
	0x03B9A5C4 MOV X19, X0
	0x03B9A5C8 CBNZ W8, 0x3B9A5E0
	0x03B9A5CC ADRP X0, 0x561000
	0x03B9A5D0 LDR X0, [X0 + 0xF08]
	0x03B9A5D4 BL 0x1C16CF4
	0x03B9A5D8 MOVZ W8, 0x1
	0x03B9A5DC STRB W8, [X20 + 0x78F]
	0x03B9A5E0 ADRP X8, 0x561000
	0x03B9A5E4 LDR X8, [X8 + 0xF08]
	0x03B9A5E8 MOVZ W9, 0x4
	0x03B9A5EC MOVZ W2, 0x88
	0x03B9A5F0 MOV W1, W31
	0x03B9A5F4 LDR X8, [X8]
	0x03B9A5F8 LDR X8, [X8 + 0xB8]
	0x03B9A5FC LDP S0, S1, [X8]
	0x03B9A600 STR W9, [X19 + 0x14]
	0x03B9A604 STRB W31, [X19 + 0x8]
	0x03B9A608 STR W31, [X19 + 0x4]
	0x03B9A60C STP S0, S1, [X19 + 0xC]
	0x03B9A610 STP S0, S1, [X19 + 0x18]
	0x03B9A614 ADD X19, X19, 0x20
	0x03B9A618 MOV X0, X19
	0x03B9A61C BL 0x3EB1B10
	0x03B9A620 MOV X0, X19
	0x03B9A624 LDP X20, X19, [X31 + 0x10]
	0x03B9A628 LDR X30, [X31], #0x20
	0x03B9A62C B 0x3B9A630
	0x03B9A630 STR X30, [X31 - 0x20]!
	0x03B9A634 STP X20, X19, [X31 + 0x10]
	0x03B9A638 ADRP X20, 0x848000
	0x03B9A63C LDRB W8, [X20 + 0xC05]
	0x03B9A640 MOV X19, X0
	0x03B9A644 TBNZ X8, 0x0, 0x3B9A674
	0x03B9A648 ADRP X0, 0x5AF000
	0x03B9A64C LDR X0, [X0 + 0x408]
	0x03B9A650 BL 0x1C16CF4
	0x03B9A654 ADRP X0, 0x55F000
	0x03B9A658 LDR X0, [X0 + 0x550]
	0x03B9A65C BL 0x1C16CF4
	0x03B9A660 ADRP X0, 0x55F000
	0x03B9A664 LDR X0, [X0 + 0x548]
	0x03B9A668 BL 0x1C16CF4
	0x03B9A66C MOVZ W8, 0x1
	0x03B9A670 STRB W8, [X20 + 0xC05]
	0x03B9A674 STRB W31, [X19 + 0x10]
	0x03B9A678 STR W31, [X19 + 0x14]
	0x03B9A67C ADRP X20, 0x83F000
	0x03B9A680 LDRB W8, [X20 + 0x78F]
	0x03B9A684 CBNZ W8, 0x3B9A69C
	0x03B9A688 ADRP X0, 0x561000
	0x03B9A68C LDR X0, [X0 + 0xF08]
	0x03B9A690 BL 0x1C16CF4
	0x03B9A694 MOVZ W8, 0x1
	0x03B9A698 STRB W8, [X20 + 0x78F]
	0x03B9A69C ADRP X8, 0x561000
	0x03B9A6A0 LDR X8, [X8 + 0xF08]
	0x03B9A6A4 MOVI V0.2D, 0x0
	0x03B9A6A8 LDR X8, [X8]
	0x03B9A6AC LDR X9, [X8 + 0xB8]
	0x03B9A6B0 LDR X8, [X19]
	0x03B9A6B4 LDR V1, [X9]
	0x03B9A6B8 STP V0, V0, [X19 + 0x20]
	0x03B9A6BC STP V0, V0, [X19 + 0x40]
	0x03B9A6C0 STP V0, V0, [X19 + 0x60]
	0x03B9A6C4 STR D1, [X19 + 0x18]
	0x03B9A6C8 STR X31, [X19 + 0x80]
	0x03B9A6CC CBZ X8, 0x3B9A6FC
	0x03B9A6D0 LDP W2, W9, [X8 + 0x18]
	0x03B9A6D4 ADD W9, W9, 0x1
	0x03B9A6D8 CMP W2, 0x1
	0x03B9A6DC STP W31, W9, [X8 + 0x18]
	0x03B9A6E0 B.LT 0x3B9A724
	0x03B9A6E4 LDR X0, [X8 + 0x10]
	0x03B9A6E8 LDP X20, X19, [X31 + 0x10]
	0x03B9A6EC MOV W1, W31
	0x03B9A6F0 MOV X3, X31
	0x03B9A6F4 LDR X30, [X31], #0x20
	0x03B9A6F8 B 0x339FA34
	0x03B9A6FC ADRP X8, 0x55F000
	0x03B9A700 LDR X8, [X8 + 0x548]
	0x03B9A704 LDR X0, [X8]
	0x03B9A708 BL 0x1C16F10
	0x03B9A70C ADRP X8, 0x55F000
	0x03B9A710 LDR X8, [X8 + 0x550]
	0x03B9A714 MOV X20, X0
	0x03B9A718 LDR X1, [X8]
	0x03B9A71C BL 0x301B7C4
	0x03B9A720 STR X20, [X19]
	0x03B9A724 LDP X20, X19, [X31 + 0x10]
	0x03B9A728 LDR X30, [X31], #0x20
	0x03B9A72C RET
	0x03B9A730 STR X30, [X31 - 0x20]!
	0x03B9A734 STP X20, X19, [X31 + 0x10]
	0x03B9A738 ADRP X20, 0x83F000
	0x03B9A73C LDRB W8, [X20 + 0x78F]
	0x03B9A740 MOV X19, X0
	0x03B9A744 CBNZ W8, 0x3B9A75C
	0x03B9A748 ADRP X0, 0x561000
	0x03B9A74C LDR X0, [X0 + 0xF08]
	0x03B9A750 BL 0x1C16CF4
	0x03B9A754 MOVZ W8, 0x1
	0x03B9A758 STRB W8, [X20 + 0x78F]
	0x03B9A75C ADRP X8, 0x561000
	0x03B9A760 LDR X8, [X8 + 0xF08]
	0x03B9A764 ADD X0, X19, 0x20
	0x03B9A768 LDR X8, [X8]
	0x03B9A76C LDR X8, [X8 + 0xB8]
	0x03B9A770 LDP S0, S1, [X8]
	0x03B9A774 STRB W31, [X19 + 0x8]
	0x03B9A778 STR W31, [X19 + 0x4]
	0x03B9A77C STP S0, S1, [X19 + 0xC]
	0x03B9A780 STP S0, S1, [X19 + 0x18]
	0x03B9A784 LDP X20, X19, [X31 + 0x10]
	0x03B9A788 LDR X30, [X31], #0x20
	0x03B9A78C B 0x3B9A630
	0x03B9A790 STR X30, [X31 - 0x20]!
	0x03B9A794 STP X20, X19, [X31 + 0x10]
	0x03B9A798 ADRP X20, 0x83F000
	0x03B9A79C LDRB W8, [X20 + 0x78F]
	0x03B9A7A0 MOV X19, X0
	0x03B9A7A4 CBNZ W8, 0x3B9A7BC
	0x03B9A7A8 ADRP X0, 0x561000
	0x03B9A7AC LDR X0, [X0 + 0xF08]
	0x03B9A7B0 BL 0x1C16CF4
	0x03B9A7B4 MOVZ W8, 0x1
	0x03B9A7B8 STRB W8, [X20 + 0x78F]
	0x03B9A7BC ADRP X8, 0x561000
	0x03B9A7C0 LDR X8, [X8 + 0xF08]
	0x03B9A7C4 LDR X8, [X8]
	0x03B9A7C8 LDR X8, [X8 + 0xB8]
	0x03B9A7CC LDR V0, [X8]
	0x03B9A7D0 STR W31, [X19 + 0x4]
	0x03B9A7D4 STRB W31, [X19 + 0x8]
	0x03B9A7D8 STUR D0, [X19 + 0xC]
	0x03B9A7DC LDP X20, X19, [X31 + 0x10]
	0x03B9A7E0 LDR X30, [X31], #0x20
	0x03B9A7E4 RET
	0x03B9A7E8 STR X30, [X31 - 0x30]!
	0x03B9A7EC STP X22, X21, [X31 + 0x10]
	0x03B9A7F0 STP X20, X19, [X31 + 0x20]
	0x03B9A7F4 ADRP X21, 0x848000
	0x03B9A7F8 LDRB W8, [X21 + 0xC03]
	0x03B9A7FC MOV X20, X1
	0x03B9A800 MOV X19, X0
	0x03B9A804 TBNZ X8, 0x0, 0x3B9A828
	0x03B9A808 ADRP X0, 0x5C2000
	0x03B9A80C LDR X0, [X0 + 0x8B0]
	0x03B9A810 BL 0x1C16CF4
	0x03B9A814 ADRP X0, 0x5AF000
	0x03B9A818 LDR X0, [X0 + 0x408]
	0x03B9A81C BL 0x1C16CF4
	0x03B9A820 MOVZ W8, 0x1
	0x03B9A824 STRB W8, [X21 + 0xC03]
	0x03B9A828 CBZ X20, 0x3B9A934
	0x03B9A82C LDR W8, [X19]
	0x03B9A830 ADD X21, X20, 0x104
	0x03B9A834 STR W8, [X20 + 0x100]
	0x03B9A838 LDR V0, [X19 + 0x18]
	0x03B9A83C STR D0, [X21]
	0x03B9A840 LDRB W8, [X19 + 0x4]
	0x03B9A844 TBNZ X8, 0x0, 0x3B9A854
	0x03B9A848 ADD X8, X19, 0xC
	0x03B9A84C ADD X9, X19, 0x10
	0x03B9A850 B 0x3B9A888
	0x03B9A854 ADRP X22, 0x83F000
	0x03B9A858 LDRB W8, [X22 + 0x78F]
	0x03B9A85C CBNZ W8, 0x3B9A874
	0x03B9A860 ADRP X0, 0x561000
	0x03B9A864 LDR X0, [X0 + 0xF08]
	0x03B9A868 BL 0x1C16CF4
	0x03B9A86C MOVZ W8, 0x1

ISIL:
	001 Move [X0+8], X1
	002 Return 
	003 Subtract X31, X31, 144
	004 Move [X31+64], D15
	005 Move [X31+72], D14
	006 Move [X31+80], D13
	007 Move [X31+88], D12
	008 Move [X31+96], D11
	009 Move [X31+104], D10
	010 Move [X31+112], D9
	011 Move [X31+120], D8
	012 Move [X31+128], X30
	013 Move [X31+136], X19
	014 Move X19, 0x848000
	015 Move W8, [X19+1413]
	016 Move V9, V0
	017 Move V8, V2
	018 Move V10, V1
	019 Multiply S11, S1, S3
	020 Multiply S12, S2, S4
	021 Multiply S0, S0, S5
	022 Multiply S14, S9, S4
	023 Multiply S15, S1, S5
	024 Multiply S13, S2, S3
	025 Compare W8, 0
	026 JumpIfNotEqual {34}
	027 Move X0, 0x55A000
	028 Move X0, [X0+1448]
	029 Move [X31+4], S0
	030 Call 0x1C17CF4
	031 Move V0, [X31+4]
	032 Move W8, 1
	033 Move [X19+1413], W8
	034 Move X8, 0x55A000
	035 Move X8, [X8+1448]
	036 Subtract S11, S11, S14
	037 Subtract S12, S12, S15
	038 Subtract S13, S0, S13
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Multiply S1, S12, S12
	045 Multiply S2, S13, S13
	046 Multiply S0, S11, S11
	047 Add S1, S1, S2
	048 Add S0, S0, S1
	049 Move S3, 1
	050 NotImplemented "Instruction FSQRT not yet implemented."
	051 NotImplemented "Instruction FDIV not yet implemented."
	052 Multiply S1, S12, S0
	053 Multiply S2, S13, S0
	054 Multiply S0, S11, S0
	055 Multiply S3, S9, S2
	056 Multiply S4, S10, S0
	057 Multiply S5, S8, S1
	058 Multiply S6, S10, S1
	059 Multiply S7, S8, S2
	060 Multiply S16, S9, S0
	061 Move [X31+8], S1
	062 Move [X31+16], S2
	063 Subtract S1, S3, S6
	064 Subtract S2, S4, S7
	065 Subtract S3, S5, S16
	066 Add X0, X31, 48
	067 Add X1, X31, 8
	068 Move X2, X31
	069 Move [X31+32], S9
	070 Move [X31+40], S10
	071 Move [X31+40], S8
	072 Move [X31+16], S0
	073 Move [X31+24], S2
	074 Move [X31+24], S3
	075 Move [X31+32], S1
	076 Move [X31+48], X31
	077 Move [X31+56], X31
	078 Call quaternion..ctor, X0, X1
	079 Move S0, [X31+48]
	080 Move S1, [X31+52]
	081 Move S2, [X31+56]
	082 Move S3, [X31+60]
	083 Move X30, [X31+128]
	084 Move X19, [X31+136]
	085 Move D9, [X31+112]
	086 Move D8, [X31+120]
	087 Move D11, [X31+96]
	088 Move D10, [X31+104]
	089 Move D13, [X31+80]
	090 Move D12, [X31+88]
	091 Move D15, [X31+64]
	092 Move D14, [X31+72]
	093 Add X31, X31, 144
	094 Return 
	095 Subtract X31, X31, 112
	096 Move [X31+16], D13
	097 Move [X31+24], D12
	098 Move [X31+32], D11
	099 Move [X31+40], D10
	100 Move [X31+48], D9
	101 Move [X31+56], D8
	102 Move [X31+64], X30
	103 Move [X31+80], X22
	104 Move [X31+88], X21
	105 Move [X31+96], X20
	106 Move [X31+104], X19
	107 Move V0, [X0]
	108 Move V8, [X0+8]
	109 Move V12, [X1]
	110 Move V13, [X1+8]
	111 Move S1, V0.S[1]
	112 Move V2, V8
	113 Move X0, X31
	114 Move X20, X4
	115 Move X21, X3
	116 Move X19, X2
	117 Move X22, X1
	118 Move [X31], V0
	119 Call float3.op_Implicit, X0
	120 Move V3, [X22+8]
	121 Move V9, V0
	122 Move V10, V1
	123 Move S0, [X22]
	124 Move S1, [X22+4]
	125 Move V11, V2
	126 Move V2, V3
	127 Move X0, X31
	128 Call float3.op_Implicit, X0
	129 Subtract S0, S0, S9
	130 Subtract S1, S1, S10
	131 Subtract S2, S2, S11
	132 Multiply S0, S0, S0
	133 Multiply S1, S1, S1
	134 Multiply S2, S2, S2
	135 Add S0, S0, S1
	136 Add S9, S2, S0
	137 Move [X21], S9
	138 Move X21, 0x848000
	139 Move W8, [X21+1413]
	140 Compare W8, 0
	141 JumpIfNotEqual {147}
	142 Move X0, 0x55A000
	143 Move X0, [X0+1448]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X21+1413], W8
	147 Move X8, 0x55A000
	148 Move X8, [X8+1448]
	149 Move X0, [X8]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move V1, [X31]
	155 NotImplemented "Instruction FSQRT not yet implemented."
	156 Subtract S0, S13, S8
	157 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	158 Subtract V1, V12, V1
	159 NotImplemented "Instruction FDIV not yet implemented."
	160 NotImplemented "Instruction INVALID not yet implemented."
	161 Move [X20], S2
	162 Move [X19], D1
	163 Move [X19+8], S0
	164 Move X20, [X31+96]
	165 Move X19, [X31+104]
	166 Move X22, [X31+80]
	167 Move X21, [X31+88]
	168 Move X30, [X31+64]
	169 Move D9, [X31+48]
	170 Move D8, [X31+56]
	171 Move D11, [X31+32]
	172 Move D10, [X31+40]
	173 Move D13, [X31+16]
	174 Move D12, [X31+24]
	175 Add X31, X31, 112
	176 Return 
	177 Move [X31-16], X30
	178 Move W2, 120
	179 Call 0x3EB2B30
	180 Move X30, [X31+16]
	181 Return 
	182 Move [X0+124], S0
	183 Return 
	184 Move [X0+120], W1
	185 Return 
	186 Move V1, [X1+32]
	187 Move V0, [X1+48]
	188 Move V3, [X1]
	189 Move V2, [X1+16]
	190 Move [X0+32], V1
	191 Move [X0+40], V0
	192 Move [X0], V3
	193 Move [X0+8], V2
	194 Return 
	195 Move [X31-16], X30
	196 Move W2, 88
	197 Call 0x3EB2B30
	198 Move X30, [X31+16]
	199 Return 
	200 Move [X31-16], X30
	201 Move W2, 96
	202 Call 0x3EB2B30
	203 Move X30, [X31+16]
	204 Return 
	205 Move [X31-16], X30
	206 Move W2, 120
	207 Call 0x3EB2B30
	208 Move X30, [X31+16]
	209 Return 
	210 Subtract X31, X31, 240
	211 Move [X31+128], D13
	212 Move [X31+136], D12
	213 Move [X31+144], D11
	214 Move [X31+152], D10
	215 Move [X31+160], D9
	216 Move [X31+168], D8
	217 Move [X31+176], X30
	218 Move [X31+192], X24
	219 Move [X31+200], X23
	220 Move [X31+208], X22
	221 Move [X31+216], X21
	222 Move [X31+224], X20
	223 Move [X31+232], X19
	224 Move [X31+104], W31
	225 Move [X31+96], X31
	226 Move [X31+88], W31
	227 Move [X31+80], X31
	228 Move [X31+72], W31
	229 Move [X31+64], X31
	230 Move [X31+56], W31
	231 Move [X31+48], X31
	232 Move [X31+40], W31
	233 Move [X31+32], X31
	234 Move X24, 0x848000
	235 Move S8, [X3]
	236 Move S9, [X3+4]
	237 Move V10, [X3+8]
	238 Move S11, [X1]
	239 Move S12, [X1+4]
	240 Move W8, [X24+1413]
	241 Move V13, [X1+8]
	242 Move X19, X4
	243 Move X21, X3
	244 Move X23, X2
	245 Move X20, X1
	246 Move W22, W0
	247 Compare W8, 0
	248 JumpIfNotEqual {256}
	249 Move X0, 0x55A000
	250 Move X0, [X0+1448]
	251 Move [X31], V0
	252 Call 0x1C17CF4
	253 Move V0, [X31]
	254 Move W8, 1
	255 Move [X24+1413], W8
	256 Move X8, 0x55A000
	257 Move X8, [X8+1448]
	258 Subtract S11, S8, S11
	259 Subtract S8, S9, S12
	260 Subtract S9, S10, S13
	261 Move X0, [X8]
	262 Move W8, [X0+224]
	263 Compare W8, 0
	264 JumpIfNotEqual {268}
	265 Move [X31], V0
	266 Call 0x1C17DFC
	267 Move V0, [X31]
	268 Multiply S1, S11, S11
	269 Multiply S2, S8, S8
	270 Move V4, [X23]
	271 Add S1, S1, S2
	272 Move V2, [X23+8]
	273 Multiply S5, S9, S9
	274 Move V3, [X20]
	275 Add S5, S5, S1
	276 Move V1, [X20+8]
	277 NotImplemented "Instruction FSQRT not yet implemented."
	278 NotImplemented "Instruction INVALID not yet implemented."
	279 Multiply S5, S5, S2
	280 NotImplemented "Instruction INVALID not yet implemented."
	281 Multiply S0, S5, S0
	282 Add V2, V3, V2
	283 Add S0, S1, S0
	284 Add X1, X31, 112
	285 Add X3, X31, 96
	286 Add X4, X31, 80
	287 Add X5, X31, 64
	288 Add X6, X31, 48
	289 Move X0, X20
	290 Move X2, X21
	291 Move [X31+112], D2
	292 Move [X31+120], S0
	293 Call CurveUtility.ElevateQuadraticToCubicBezier, X0, X1, X2, X3, X4, X5, X6
	294 Move W8, [X20+8]
	295 Move X9, [X20]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move [X31+24], W8
	298 Move [X31+16], X9
	299 Move X8, [X19]
	300 Move W9, [X31+24]
	301 Move X10, [X31+16]
	302 Move [X8+8], W9
	303 Move [X8], X10
	304 Subtract W8, W22, 1
	305 Move S0, 1
	306 NotImplemented "Instruction SCVTF not yet implemented."
	307 Move W20, W22
	308 Move W21, 1
	309 NotImplemented "Instruction FDIV not yet implemented."
	310 Move W22, 12
	311 NotImplemented "Instruction SCVTF not yet implemented."
	312 Multiply S0, S8, S0
	313 Add X0, X31, 96
	314 Add X1, X31, 80
	315 Add X2, X31, 64
	316 Add X3, X31, 48
	317 Add X4, X31, 32
	318 Call CurveUtility.SampleCubicBezierPoint, X0, X1, X2, X3, V0, X4
	319 Move X8, [X19]
	320 Move X9, [X31+32]
	321 Move W10, [X31+40]
	322 Add X21, X21, 1
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Add X8, X8, X22
	325 Add X22, X22, 12
	326 Move [X8+8], W10
	327 Move [X8], X9
	328 Move X20, [X31+224]
	329 Move X19, [X31+232]
	330 Move X22, [X31+208]
	331 Move X21, [X31+216]
	332 Move X24, [X31+192]
	333 Move X23, [X31+200]
	334 Move X30, [X31+176]
	335 Move D9, [X31+160]
	336 Move D8, [X31+168]
	337 Move D11, [X31+144]
	338 Move D10, [X31+152]
	339 Move D13, [X31+128]
	340 Move D12, [X31+136]
	341 Add X31, X31, 240
	342 Return 

Method: System.Void Reset()

Disassembly:
	0x03B9A134 LDR X0, [X20 + 0x380]
	0x03B9A138 ADD W19, W19, 0x1
	0x03B9A13C CBNZ X0, 0x3B9A10C
	0x03B9A140 BL 0x1C16F20
	0x03B9A144 LDR X0, [X20 + 0x380]
	0x03B9A148 CBZ X0, 0x3B9A140
	0x03B9A14C LDR X2, [X22]
	0x03B9A150 ADD X8, X31, 0x2B0
	0x03B9A154 MOV W1, W19
	0x03B9A158 ADD X21, X31, 0x2B0
	0x03B9A15C BL 0x317E164
	0x03B9A160 ADD X21, X21, 0x8
	0x03B9A164 ADD X0, X31, 0x158
	0x03B9A168 MOVZ W2, 0x158
	0x03B9A16C MOV X1, X21
	0x03B9A170 BL 0x3EB1AC0
	0x03B9A174 LDR X20, [X20 + 0x380]
	0x03B9A178 ADD X0, X31, 0x0
	0x03B9A17C ADD X1, X31, 0x158
	0x03B9A180 MOVZ W2, 0x158
	0x03B9A184 BL 0x3EB1AC0
	0x03B9A188 CBZ X20, 0x3B9A140
	0x03B9A18C ADRP X8, 0x5C2000
	0x03B9A190 LDR X8, [X8 + 0x8F8]
	0x03B9A194 ADD X1, X31, 0x0
	0x03B9A198 MOVZ W2, 0x158
	0x03B9A19C MOV X0, X21
	0x03B9A1A0 LDR X22, [X8]
	0x03B9A1A4 STR X31, [X31 + 0x2B0]
	0x03B9A1A8 BL 0x3EB1AC0
	0x03B9A1AC ADD X2, X31, 0x2B0
	0x03B9A1B0 MOV X0, X20
	0x03B9A1B4 MOV W1, W19
	0x03B9A1B8 MOV X3, X22
	0x03B9A1BC BL 0x317E1C8
	0x03B9A1C0 ADD X31, X31, 0x410
	0x03B9A1C4 LDP X20, X19, [X31 + 0x20]
	0x03B9A1C8 LDP X22, X21, [X31 + 0x10]
	0x03B9A1CC LDP X29, X30, [X31], #0x30
	0x03B9A1D0 RET
	0x03B9A1D4 STR X30, [X31 - 0x30]!
	0x03B9A1D8 STP X22, X21, [X31 + 0x10]
	0x03B9A1DC STP X20, X19, [X31 + 0x20]
	0x03B9A1E0 ADRP X22, 0x848000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x849000
	005 Move W8, [X20+3065]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x5B0000
	012 Move X0, [X0+1032]
	013 Call 0x1C17CF4
	014 Move X0, 0x560000
	015 Move X0, [X0+1360]
	016 Call 0x1C17CF4
	017 Move X0, 0x560000
	018 Move X0, [X0+1352]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3065], W8
	022 Move X8, [X19]
	023 Move [X19+8], X31
	024 Compare X8, 0
	025 JumpIfEqual {40}
	026 Move W2, [X8+24]
	027 Move W9, [X8+28]
	028 Add W9, W9, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X8+24], W31
	031 Move [X8+28], W9
	032 Move X0, [X8+16]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W1, W31
	036 Move X3, X31
	037 Move X30, [X31+32]
	038 Call Array.Clear, X0, X1, X2
	039 Return 
	040 Move X8, 0x560000
	041 Move X8, [X8+1352]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X8, 0x560000
	045 Move X8, [X8+1360]
	046 Move X20, X0
	047 Move X1, [X8]
	048 Call List`1<Object>..ctor, X0
	049 Move [X19], X20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return 

