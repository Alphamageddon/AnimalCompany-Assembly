Type: UnityEngine.XR.Interaction.Toolkit.UI.CanvasOptimizer

Method: System.Single get_rayPositionIgnoreAngle()

Disassembly:
	0x03B97464 STR S2, [X31 + 0x68]
	0x03B97468 BL 0x3B86674

ISIL:
	001 Move V0, [X0+32]
	002 Return V0

Method: System.Void set_rayPositionIgnoreAngle(System.Single value)

Disassembly:
	0x03B9746C TBZ X0, 0x0, 0x3B97478
	0x03B97470 MOVZ W0, 0x1

ISIL:
	001 Move [X0+32], S0
	002 Return 

Method: System.Single get_rayFacingIgnoreAngle()

Disassembly:
	0x03B97474 B 0x3B9750C
	0x03B97478 LDP S1, S0, [X31 + 0x18]

ISIL:
	001 Move V0, [X0+36]
	002 Return V0

Method: System.Void set_rayFacingIgnoreAngle(System.Single value)

Disassembly:
	0x03B9747C LDR V2, [X31 + 0x14]
	0x03B97480 MOV X0, X31

ISIL:
	001 Move [X0+36], S0
	002 Return 

Method: System.Single get_rayPositionIgnoreDistance()

Disassembly:
	0x03B97484 BL 0x3887BE4
	0x03B97488 STP S0, S1, [X31 + 0x50]

ISIL:
	001 Move V0, [X0+40]
	002 Return V0

Method: System.Void set_rayPositionIgnoreDistance(System.Single value)

Disassembly:
	0x03B9748C STR S2, [X31 + 0x58]
	0x03B97490 LDP S1, S0, [X31 + 0x8]

ISIL:
	001 Move [X0+40], S0
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x03B97494 LDR V2, [X31 + 0x4]
	0x03B97498 MOV X0, X31
	0x03B9749C BL 0x3887BE4
	0x03B974A0 STP S0, S1, [X31 + 0x40]
	0x03B974A4 ADD X0, X31, 0x50
	0x03B974A8 ADD X1, X31, 0x40
	0x03B974AC MOV V0.16B, V9.16B
	0x03B974B0 STR S2, [X31 + 0x48]
	0x03B974B4 BL 0x3B86744
	0x03B974B8 TBZ X0, 0x0, 0x3B974C4
	0x03B974BC MOV W0, W31
	0x03B974C0 B 0x3B9750C
	0x03B974C4 LDR V0, [X31]
	0x03B974C8 MOV V1.16B, V15.16B
	0x03B974CC MOV V2.16B, V11.16B
	0x03B974D0 MOV X0, X31
	0x03B974D4 BL 0x3887BE4
	0x03B974D8 STP S0, S1, [X31 + 0x30]
	0x03B974DC STR S2, [X31 + 0x38]
	0x03B974E0 MOV V0.16B, V14.16B
	0x03B974E4 MOV V1.16B, V12.16B
	0x03B974E8 MOV V2.16B, V13.16B
	0x03B974EC MOV X0, X31
	0x03B974F0 BL 0x3887BE4
	0x03B974F4 STP S0, S1, [X31 + 0x20]
	0x03B974F8 ADD X0, X31, 0x30
	0x03B974FC ADD X1, X31, 0x20
	0x03B97500 MOV V0.16B, V8.16B
	0x03B97504 STR S2, [X31 + 0x28]
	0x03B97508 BL 0x3B867E8
	0x03B9750C LDRB W9, [X19 + 0x32]
	0x03B97510 AND W8, W0, 0x1
	0x03B97514 CMP W9, W8
	0x03B97518 B.EQ 0x3B975B0
	0x03B9751C STRB W8, [X19 + 0x32]
	0x03B97520 ADRP X21, 0x55C000
	0x03B97524 LDR X21, [X21 + 0x598]
	0x03B97528 LDR X20, [X19 + 0x40]
	0x03B9752C LDR X0, [X21]
	0x03B97530 LDR W8, [X0 + 0xE0]
	0x03B97534 CBNZ W8, 0x3B9753C
	0x03B97538 BL 0x1C16DFC
	0x03B9753C MOV X0, X20
	0x03B97540 MOV X1, X31
	0x03B97544 MOV X2, X31
	0x03B97548 BL 0x3C354F8
	0x03B9754C TBZ X0, 0x0, 0x3B9756C
	0x03B97550 LDR X0, [X19 + 0x40]
	0x03B97554 CBZ X0, 0x3B975D0
	0x03B97558 LDRB W8, [X19 + 0x32]
	0x03B9755C MOV X2, X31
	0x03B97560 CMP W8, 0x0
	0x03B97564 CSET W1, EQ
	0x03B97568 BL 0x3C32410
	0x03B9756C LDR X0, [X21]
	0x03B97570 LDR X20, [X19 + 0x48]
	0x03B97574 LDR W8, [X0 + 0xE0]
	0x03B97578 CBNZ W8, 0x3B97580
	0x03B9757C BL 0x1C16DFC
	0x03B97580 MOV X0, X20
	0x03B97584 MOV X1, X31
	0x03B97588 MOV X2, X31
	0x03B9758C BL 0x3C354F8
	0x03B97590 TBZ X0, 0x0, 0x3B975B0
	0x03B97594 LDR X0, [X19 + 0x48]
	0x03B97598 CBZ X0, 0x3B975D0
	0x03B9759C LDRB W8, [X19 + 0x32]
	0x03B975A0 MOV X2, X31
	0x03B975A4 CMP W8, 0x0
	0x03B975A8 CSET W1, EQ
	0x03B975AC BL 0x3C32410
	0x03B975B0 LDP X20, X19, [X31 + 0xE0]
	0x03B975B4 LDP X30, X21, [X31 + 0xD0]
	0x03B975B8 LDP D9, D8, [X31 + 0xC0]
	0x03B975BC LDP D11, D10, [X31 + 0xB0]
	0x03B975C0 LDP D13, D12, [X31 + 0xA0]
	0x03B975C4 LDP D15, D14, [X31 + 0x90]
	0x03B975C8 ADD X31, X31, 0xF0
	0x03B975CC RET
	0x03B975D0 BL 0x1C16F20
	0x03B975D4 STR X30, [X31 - 0x30]!
	0x03B975D8 STP X22, X21, [X31 + 0x10]
	0x03B975DC STP X20, X19, [X31 + 0x20]
	0x03B975E0 ADRP X22, 0x84B000
	0x03B975E4 ADRP X21, 0x5C5000
	0x03B975E8 ADRP X20, 0x5C5000
	0x03B975EC LDRB W8, [X22 + 0xBEA]
	0x03B975F0 LDR X21, [X21 + 0x820]
	0x03B975F4 LDR X20, [X20 + 0x828]
	0x03B975F8 MOV X19, X0
	0x03B975FC TBNZ X8, 0x0, 0x3B97620
	0x03B97600 ADRP X0, 0x5C5000
	0x03B97604 LDR X0, [X0 + 0x828]
	0x03B97608 BL 0x1C16CF4
	0x03B9760C ADRP X0, 0x5C5000
	0x03B97610 LDR X0, [X0 + 0x820]
	0x03B97614 BL 0x1C16CF4
	0x03B97618 MOVZ W8, 0x1
	0x03B9761C STRB W8, [X22 + 0xBEA]
	0x03B97620 ADRP X8, 0xFFFFFFFFFCF56000
	0x03B97624 LDR V0, [X8 + 0x7F8]
	0x03B97628 MOVZ W8, 0x41C80000
	0x03B9762C STR W8, [X19 + 0x28]
	0x03B97630 STR D0, [X19 + 0x20]
	0x03B97634 LDR X0, [X21]
	0x03B97638 BL 0x1C16F10
	0x03B9763C LDR X1, [X20]
	0x03B97640 MOV X20, X0
	0x03B97644 BL 0x2AA4804
	0x03B97648 STR X20, [X19 + 0x40]
	0x03B9764C MOV X0, X19
	0x03B97650 LDP X20, X19, [X31 + 0x20]
	0x03B97654 LDP X22, X21, [X31 + 0x10]
	0x03B97658 MOV X1, X31
	0x03B9765C LDR X30, [X31], #0x30
	0x03B97660 B 0x3C36C30
	0x03B97664 STR X30, [X31 - 0x10]!
	0x03B97668 CBZ X1, 0x3B976BC
	0x03B9766C LDUR V0, [X1 + 0x44]
	0x03B97670 STUR D0, [X0 + 0x14]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x84C000
	007 Move X22, 0x5C6000
	008 Move X21, 0x55D000
	009 Move W8, [X20+3043]
	010 Move X22, [X22+1848]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x5C6000
	018 Move X0, [X0+1848]
	019 Call 0x1C17CF4
	020 Move X0, 0x55D000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x5C6000
	024 Move X0, [X0+1856]
	025 Call 0x1C17CF4
	026 Move X0, 0x55D000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x5C6000
	030 Move X0, [X0+1864]
	031 Call 0x1C17CF4
	032 Move X0, 0x5C6000
	033 Move X0, [X0+1872]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3043], W8
	037 Move X0, [X22]
	038 Call 0x29609FC
	039 Move X8, [X21]
	040 Move X20, X0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X20
	047 Move X1, X19
	048 Move X2, X31
	049 Call Object.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {102}
	054 Move X0, X19
	055 Move X1, X31
	056 Call Component.get_gameObject, X0
	057 Compare X0, 0
	058 JumpIfEqual {136}
	059 Move X1, X31
	060 Call Object.get_name, X0
	061 Move X8, 0x5C6000
	062 Move X8, [X8+1864]
	063 Move X9, 0x5C6000
	064 Move X9, [X9+1872]
	065 Move X1, X0
	066 Move X8, [X8]
	067 Move X3, X31
	068 Move X2, [X9]
	069 Move X0, X8
	070 Call String.Concat, X0, X1, X2
	071 Move X8, 0x55D000
	072 Move X8, [X8+2600]
	073 Move X20, X0
	074 Move X8, [X8]
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Move X1, X19
	082 Move X2, X31
	083 Call Debug.LogWarning, X0, X1
	084 Move X0, [X21]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X19
	090 Move X1, X31
	091 Call Object.Destroy, X0
	092 Move X0, X19
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move W1, W31
	098 Move X2, X31
	099 Move X30, [X31+48]
	100 Call Behaviour.set_enabled, X0, X1
	101 Return 
	102 Move X0, X19
	103 Call CanvasOptimizer.FindCullingCamera, X0
	104 Move X0, [X21]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X8, 0x5C6000
	110 Move X8, [X8+1856]
	111 Move W0, 1
	112 Move X1, [X8]
	113 Call 0x222E2AC, X0
	114 Compare X0, 0
	115 JumpIfEqual {136}
	116 Move X8, [X0+24]
	117 Move X20, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X21, X31
	120 And X8, X8, 0
	121 Add X22, X20, 32
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X1, [X22]
	124 Move X0, X19
	125 Call CanvasOptimizer.RegisterCanvas, X0, X1
	126 Move W8, [X20+24]
	127 Add X21, X21, 1
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X22, [X31+16]
	132 Move X21, [X31+24]
	133 Move X30, [X31+48]
	134 Return 
	135 Call 0x1C17F28
	136 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03B977E0 CBZ X1, 0x3B978B4
	0x03B977E4 MOV X19, X1
	0x03B977E8 LDR W1, [X0 + 0x14]
	0x03B977EC MOV X20, X0
	0x03B977F0 MOV X0, X19
	0x03B977F4 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call CanvasOptimizer.CheckForNestedCanvasChanges, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call CanvasOptimizer.CheckForOutOfViewCanvases, X0
	009 Return 

Method: System.Void RegisterCanvas(UnityEngine.Canvas canvas)

Disassembly:
	0x03B97708 BL 0x3E24AA4
	0x03B9770C STR W0, [X19 + 0x14]
	0x03B97710 MOV X0, X20
	0x03B97714 MOV X1, X31
	0x03B97718 BL 0x3E24EA4
	0x03B9771C MOV X0, X20
	0x03B97720 MOV X1, X31
	0x03B97724 STR S0, [X19 + 0x18]
	0x03B97728 BL 0x3E24724
	0x03B9772C AND W8, W0, 0x1
	0x03B97730 MOV X0, X20
	0x03B97734 MOV X1, X31
	0x03B97738 STRB W8, [X19 + 0x1C]
	0x03B9773C BL 0x3E248A4
	0x03B97740 AND W8, W0, 0x1
	0x03B97744 MOV X0, X20
	0x03B97748 MOV X1, X31
	0x03B9774C STRB W8, [X19 + 0x1D]
	0x03B97750 BL 0x3E247E0
	0x03B97754 MOV X0, X20
	0x03B97758 MOV X1, X31
	0x03B9775C STR S0, [X19 + 0x20]
	0x03B97760 BL 0x3E2469C
	0x03B97764 MOV X0, X20
	0x03B97768 MOV X1, X31
	0x03B9776C STR S0, [X19 + 0x24]
	0x03B97770 BL 0x3E244BC
	0x03B97774 STR W0, [X19 + 0x28]
	0x03B97778 MOV X0, X20
	0x03B9777C MOV X1, X31
	0x03B97780 BL 0x3E24614
	0x03B97784 MOV X0, X20
	0x03B97788 MOV X1, X31
	0x03B9778C STR S0, [X19 + 0x2C]
	0x03B97790 BL 0x3E24A24
	0x03B97794 STR W0, [X19 + 0x30]
	0x03B97798 MOV X0, X20
	0x03B9779C MOV X1, X31
	0x03B977A0 BL 0x3E24B24
	0x03B977A4 STR X0, [X19 + 0x38]
	0x03B977A8 MOV X0, X20
	0x03B977AC MOV X1, X31
	0x03B977B0 BL 0x3E24924
	0x03B977B4 STR W0, [X19 + 0x40]
	0x03B977B8 MOV X0, X20
	0x03B977BC MOV X1, X31
	0x03B977C0 BL 0x3E249A4
	0x03B977C4 STR W0, [X19 + 0x44]
	0x03B977C8 LDP X20, X19, [X31 + 0x10]
	0x03B977CC LDR X30, [X31], #0x20
	0x03B977D0 RET
	0x03B977D4 BL 0x1C16F20
	0x03B977D8 STR X30, [X31 - 0x20]!
	0x03B977DC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x84C000
	006 Move W8, [X21+3044]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x5C6000
	014 Move X0, [X0+1880]
	015 Call 0x1C17CF4
	016 Move X0, 0x5C6000
	017 Move X0, [X0+1888]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C6000
	020 Move X0, [X0+1896]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3044], W8
	024 Move X0, X20
	025 Call CanvasOptimizer.InitializeCanvasTracking, X0
	026 Move X8, [X19+64]
	027 Compare X8, 0
	028 JumpIfEqual {70}
	029 Move X9, 0x5C6000
	030 Move X9, [X9+1896]
	031 Move X20, X0
	032 Move X0, X8
	033 Move X1, X20
	034 Move X2, [X9]
	035 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {45}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move X8, 0x5C6000
	046 Move X8, [X8+1880]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X21, X0
	050 Call CanvasState..ctor, X0
	051 Compare X21, 0
	052 JumpIfEqual {70}
	053 Move X0, X21
	054 Move X1, X20
	055 Call CanvasState.Initialize, X0, X1
	056 Move X0, [X19+64]
	057 Compare X0, 0
	058 JumpIfEqual {70}
	059 Move X8, 0x5C6000
	060 Move X8, [X8+1888]
	061 Move X1, X20
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X2, X21
	065 Move X3, [X8]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	069 Return 
	070 Call 0x1C17F20

Method: System.Void UnregisterCanvas(UnityEngine.Canvas canvas)

Disassembly:
	0x03B97D54 STP X22, X21, [X31 + 0x20]
	0x03B97D58 STP X20, X19, [X31 + 0x30]
	0x03B97D5C ADRP X22, 0x84B000
	0x03B97D60 ADRP X20, 0x5C5000
	0x03B97D64 ADRP X21, 0x5C5000
	0x03B97D68 LDRB W8, [X22 + 0xBEF]
	0x03B97D6C LDR X20, [X20 + 0x840]
	0x03B97D70 LDR X21, [X21 + 0x848]
	0x03B97D74 MOV X19, X0
	0x03B97D78 TBNZ X8, 0x0, 0x3B97D9C
	0x03B97D7C ADRP X0, 0x5C5000
	0x03B97D80 LDR X0, [X0 + 0x848]
	0x03B97D84 BL 0x1C16CF4
	0x03B97D88 ADRP X0, 0x5C5000
	0x03B97D8C LDR X0, [X0 + 0x840]
	0x03B97D90 BL 0x1C16CF4
	0x03B97D94 MOVZ W8, 0x1
	0x03B97D98 STRB W8, [X22 + 0xBEF]
	0x03B97D9C LDR X0, [X20]
	0x03B97DA0 LDR V8, [X19 + 0x48]
	0x03B97DA4 LDUR V9, [X19 + 0x4C]
	0x03B97DA8 BL 0x1C16F10
	0x03B97DAC MOV X20, X0
	0x03B97DB0 BL 0x3B92174
	0x00000000 INVALID
	0x03B97DB8 STR S8, [X20 + 0xA8]
	0x03B97DBC STUR D9, [X20 + 0xAC]
	0x03B97DC0 STR S0, [X20 + 0xB4]
	0x03B97DC4 STR X20, [X19 + 0x78]
	0x03B97DC8 LDR X0, [X21]
	0x03B97DCC LDR V8, [X19 + 0x58]
	0x03B97DD0 LDR V9, [X19 + 0x60]
	0x03B97DD4 BL 0x1C16F10
	0x03B97DD8 MOV X20, X0
	0x03B97DDC BL 0x3B917C4
	0x03B97DE0 STUR D8, [X20 + 0x6C]
	0x03B97DE4 STR S9, [X20 + 0x74]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x84C000
	007 Move W8, [X21+3045]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5C6000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move X0, 0x5C6000
	018 Move X0, [X0+2008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3045], W8
	022 Move [X31+8], X31
	023 Compare X20, 0
	024 JumpIfEqual {49}
	025 Move X8, 0x5C6000
	026 Move X8, [X8+2000]
	027 Add X1, X31, 8
	028 Move X0, X20
	029 Move X2, [X8]
	030 Call 0x21A5990, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {43}
	035 Move X0, [X19+64]
	036 Compare X0, 0
	037 JumpIfEqual {49}
	038 Move X8, 0x5C6000
	039 Move X1, [X31+8]
	040 Move X8, [X8+2008]
	041 Move X2, [X8]
	042 Call Dictionary`2<Object, Object>.Remove, X0, X1
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move X21, [X31+24]
	047 Add X31, X31, 48
	048 Return 
	049 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.UI.CanvasTracker InitializeCanvasTracking(UnityEngine.Canvas target)

Disassembly:
	0x03B97B48 LDR V1, [X0 + 0x3C]
	0x03B97B4C FMOV S2, 1
	0x03B97B50 STR S0, [X0 + 0x38]
	0x03B97B54 FMUL S3, S1, S0
	0x03B97B58 FADD S2, S1, S2
	0x03B97B5C FCMP S1, 0x0
	0x03B97B60 FSUB S1, S0, S3
	0x03B97B64 FMUL S2, S2, S0
	0x03B97B68 FCSEL S1, S1, S0, GT
	0x03B97B6C FCSEL S0, S2, S0, GT
	0x03B97B70 STP S1, S0, [X0 + 0x64]
	0x03B97B74 RET
	0x03B97B78 LDP S1, S0, [X0 + 0x38]
	0x03B97B7C FMOV S2, 1
	0x03B97B80 FMUL S3, S0, S1
	0x03B97B84 FADD S2, S0, S2
	0x03B97B88 FCMP S0, 0x0
	0x03B97B8C FSUB S0, S1, S3
	0x03B97B90 FMUL S2, S1, S2
	0x03B97B94 FCSEL S0, S0, S1, GT
	0x03B97B98 FCSEL S1, S2, S1, GT
	0x03B97B9C STP S0, S1, [X0 + 0x64]
	0x03B97BA0 RET
	0x03B97BA4 LDR V0, [X0 + 0x3C]
	0x03B97BA8 RET
	0x03B97BAC ADRP X8, 0xFFFFFFFFFCF53000
	0x03B97BB0 LDR V1, [X8 + 0x39C]
	0x03B97BB4 LDR V3, [X0 + 0x38]
	0x03B97BB8 FCMP S0, 0x0
	0x03B97BBC FMOV S2, W31
	0x03B97BC0 FMIN S0, S0, S1
	0x03B97BC4 FMOV S1, 1
	0x03B97BC8 FCSEL S0, S0, S2, PL
	0x03B97BCC FMUL S2, S0, S3
	0x03B97BD0 FADD S1, S0, S1
	0x03B97BD4 STR S0, [X0 + 0x3C]
	0x03B97BD8 FCMP S0, 0x0
	0x03B97BDC FSUB S0, S3, S2
	0x03B97BE0 FMUL S1, S1, S3
	0x03B97BE4 FCSEL S0, S0, S3, GT
	0x03B97BE8 FCSEL S1, S1, S3, GT
	0x03B97BEC STP S0, S1, [X0 + 0x64]
	0x03B97BF0 RET
	0x03B97BF4 LDRB W0, [X0 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x84C000
	005 Move W8, [X20+3046]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x5C6000
	012 Move X0, [X0+1944]
	013 Call 0x1C17CF4
	014 Move X0, 0x5C6000
	015 Move X0, [X0+1952]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3046], W8
	019 Move [X31+8], X31
	020 Compare X19, 0
	021 JumpIfEqual {56}
	022 Move X0, X19
	023 Move X1, X31
	024 Call Component.get_gameObject, X0
	025 Compare X0, 0
	026 JumpIfEqual {56}
	027 Move X8, 0x5C6000
	028 Move X8, [X8+1952]
	029 Add X1, X31, 8
	030 Move X2, [X8]
	031 Call 0x21E7600, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {51}
	036 Move X0, X19
	037 Move X1, X31
	038 Call Component.get_gameObject, X0
	039 Compare X0, 0
	040 JumpIfEqual {56}
	041 Move X8, 0x5C6000
	042 Move X8, [X8+1944]
	043 Move X1, [X8]
	044 Call 0x21E61FC, X0
	045 Move [X31+8], X0
	046 Compare X0, 0
	047 JumpIfEqual {56}
	048 Move W1, 61
	049 Move X2, X31
	050 Call Object.set_hideFlags, X0, X1
	051 Move X0, [X31+8]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Void CheckForNestedCanvasChanges()

Disassembly:
	0x03B977F8 BL 0x3E24AE0
	0x03B977FC LDR V0, [X20 + 0x18]
	0x03B97800 MOV X0, X19
	0x03B97804 MOV X1, X31
	0x03B97808 BL 0x3E24EE0
	0x03B9780C LDRB W1, [X20 + 0x1C]
	0x03B97810 MOV X0, X19
	0x03B97814 MOV X2, X31
	0x03B97818 BL 0x3E24760
	0x03B9781C LDRB W1, [X20 + 0x1D]
	0x03B97820 MOV X0, X19
	0x03B97824 MOV X2, X31
	0x03B97828 BL 0x3E248E0
	0x03B9782C LDR V0, [X20 + 0x20]
	0x03B97830 MOV X0, X19
	0x03B97834 MOV X1, X31
	0x03B97838 BL 0x3E2481C
	0x03B9783C LDR V0, [X20 + 0x24]
	0x03B97840 MOV X0, X19
	0x03B97844 MOV X1, X31
	0x03B97848 BL 0x3E246D8
	0x03B9784C LDR W1, [X20 + 0x28]
	0x03B97850 MOV X0, X19
	0x03B97854 MOV X2, X31
	0x03B97858 BL 0x3E244F8
	0x03B9785C LDR V0, [X20 + 0x2C]
	0x03B97860 MOV X0, X19
	0x03B97864 MOV X1, X31
	0x03B97868 BL 0x3E24650
	0x03B9786C LDR W1, [X20 + 0x30]
	0x03B97870 MOV X0, X19
	0x03B97874 MOV X2, X31
	0x03B97878 BL 0x3E24A60
	0x03B9787C LDR X1, [X20 + 0x38]
	0x03B97880 MOV X0, X19
	0x03B97884 MOV X2, X31
	0x03B97888 BL 0x3E24B60
	0x03B9788C LDR W1, [X20 + 0x40]
	0x03B97890 MOV X0, X19
	0x03B97894 MOV X2, X31
	0x03B97898 BL 0x3E24960
	0x03B9789C LDR W1, [X20 + 0x44]
	0x03B978A0 MOV X0, X19
	0x03B978A4 LDP X20, X19, [X31 + 0x10]
	0x03B978A8 MOV X2, X31
	0x03B978AC LDR X30, [X31], #0x20
	0x03B978B0 B 0x3E249E0
	0x03B978B4 BL 0x1C16F20
	0x03B978B8 STR X30, [X31 - 0x20]!
	0x03B978BC STP X20, X19, [X31 + 0x10]
	0x03B978C0 CBZ X1, 0x3B97940
	0x03B978C4 LDR V0, [X0 + 0x14]
	0x03B978C8 MOV X19, X1
	0x03B978CC MOV X20, X0
	0x03B978D0 MOV X0, X1
	0x03B978D4 MOV X1, X31
	0x03B978D8 BL 0x3E2FE60
	0x03B978DC LDR V0, [X20 + 0x18]
	0x03B978E0 MOV X0, X19
	0x03B978E4 MOV X1, X31
	0x03B978E8 STR S0, [X19 + 0x48]
	0x03B978EC LDR V0, [X20 + 0x1C]
	0x03B978F0 STR S0, [X19 + 0x40]
	0x03B978F4 LDR V0, [X20 + 0x20]
	0x03B978F8 STR S0, [X19 + 0x38]
	0x03B978FC LDR W8, [X20 + 0x24]
	0x03B97900 STR W8, [X19 + 0x3C]
	0x03B97904 LDR V0, [X20 + 0x28]
	0x03B97908 STR S0, [X19 + 0x24]
	0x03B9790C LDP S0, S1, [X20 + 0x2C]
	0x03B97910 BL 0x3E2FDB4
	0x03B97914 LDR V0, [X20 + 0x34]
	0x03B97918 MOV X0, X19
	0x03B9791C MOV X1, X31
	0x03B97920 BL 0x3E2FD98
	0x03B97924 LDR W8, [X20 + 0x38]
	0x03B97928 STR W8, [X19 + 0x34]
	0x03B9792C LDR W8, [X20 + 0x3C]
	0x03B97930 STR W8, [X19 + 0x20]
	0x03B97934 LDP X20, X19, [X31 + 0x10]
	0x03B97938 LDR X30, [X31], #0x20
	0x03B9793C RET
	0x03B97940 BL 0x1C16F20
	0x03B97944 STR X30, [X31 - 0x10]!
	0x03B97948 CBZ X1, 0x3B9796C
	0x03B9794C LDR W8, [X0 + 0x14]
	0x03B97950 STR W8, [X1 + 0x30]
	0x03B97954 LDR W8, [X0 + 0x18]
	0x03B97958 STR W8, [X1 + 0x2C]
	0x03B9795C LDRB W8, [X0 + 0x1C]
	0x03B97960 STRB W8, [X1 + 0x28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x84C000
	006 Move W8, [X20+3047]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x5C6000
	013 Move X0, [X0+1904]
	014 Call 0x1C17CF4
	015 Move X0, 0x5C6000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C6000
	019 Move X0, [X0+1920]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C6000
	022 Move X0, [X0+1928]
	023 Call 0x1C17CF4
	024 Move X0, 0x5C6000
	025 Move X0, [X0+1936]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3047], W8
	029 Move [X31+8], X31
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move X0, [X19+64]
	033 Compare X0, 0
	034 JumpIfEqual {71}
	035 Move X8, 0x5C6000
	036 Move X8, [X8+1904]
	037 Move X1, [X8]
	038 Call Dictionary`2<Object, Object>.get_Values, X0
	039 Compare X0, 0
	040 JumpIfEqual {71}
	041 Move X8, 0x5C6000
	042 Move X8, [X8+1936]
	043 Move X20, 0x5C6000
	044 Move X19, 0x5C6000
	045 Move X1, [X8]
	046 Move X20, [X20+1920]
	047 Move X19, [X19+1912]
	048 Add X8, X31, 8
	049 Call ValueCollection<Object, Object>.GetEnumerator, X0
	050 Move X1, [X20]
	051 Add X0, X31, 8
	052 Call Enumerator<Object, Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {62}
	057 Move X0, [X31+24]
	058 Compare X0, 0
	059 JumpIfEqual {70}
	060 Move W1, W31
	061 Call CanvasState.CheckForNestedChanges, X0, X1
	062 Move X1, [X19]
	063 Add X0, X31, 8
	064 Call Enumerator<Object, Object>.Dispose, X0
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X30, [X31+32]
	068 Add X31, X31, 64
	069 Return 
	070 Call 0x1C17F20
	071 Call 0x1C17F20
	072 Move X19, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X19
	075 Call 0x3EB2AD0
	076 Move X20, [X0]
	077 Call 0x3EB2AE0
	078 Move X8, 0x5C6000
	079 Move X8, [X8+1912]
	080 Add X0, X31, 8
	081 Move X1, [X8]
	082 Call Enumerator<Object, Object>.Dispose, X0
	083 Compare X20, 0
	084 JumpIfEqual {65}
	085 Move X0, X20
	086 Call 0x1C17F18
	087 Move X20, X31
	088 Move X19, X0
	089 Move X8, 0x5C6000
	090 Move X8, [X8+1912]
	091 Move X1, [X8]
	092 Add X0, X31, 8
	093 Call Enumerator<Object, Object>.Dispose, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X19
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Void CheckForOutOfViewCanvases()

Disassembly:
	0x03B97964 LDR X30, [X31], #0x10
	0x03B97968 RET
	0x03B9796C BL 0x1C16F20
	0x03B97970 MOV X1, X31
	0x03B97974 B 0x33BDD8C
	0x03B97978 MOV X1, X31
	0x03B9797C B 0x33BDD8C
	0x03B97980 MOV X1, X31
	0x03B97984 B 0x33BDD8C
	0x03B97988 LDRB W0, [X0 + 0x10]
	0x03B9798C RET
	0x03B97990 AND W8, W1, 0x1
	0x03B97994 STRB W8, [X0 + 0x10]
	0x03B97998 RET
	0x03B9799C LDRB W0, [X0 + 0x10]
	0x03B979A0 RET
	0x03B979A4 AND W8, W1, 0x1
	0x03B979A8 STRB W8, [X0 + 0x10]
	0x03B979AC RET
	0x03B979B0 LDRB W0, [X0 + 0x10]
	0x03B979B4 RET
	0x03B979B8 AND W8, W1, 0x1
	0x03B979BC STRB W8, [X0 + 0x10]
	0x03B979C0 RET
	0x03B979C4 LDRB W0, [X0 + 0x20]
	0x03B979C8 RET
	0x03B979CC AND W8, W1, 0x1
	0x03B979D0 STRB W8, [X0 + 0x20]
	0x03B979D4 RET
	0x03B979D8 MOVZ W8, 0x1
	0x03B979DC STRB W8, [X0 + 0x20]
	0x03B979E0 RET
	0x03B979E4 MOVZ W8, 0x1
	0x03B979E8 STRB W8, [X0 + 0x20]
	0x03B979EC RET
	0x03B979F0 MOV X1, X31
	0x03B979F4 B 0x3C36C30
	0x03B979F8 LDR X0, [X0 + 0x20]
	0x03B979FC RET
	0x03B97A00 STR X1, [X0 + 0x20]
	0x03B97A04 RET
	0x03B97A08 LDP S0, S1, [X0 + 0x28]
	0x03B97A0C LDR V2, [X0 + 0x30]
	0x03B97A10 RET
	0x03B97A14 STP S0, S1, [X0 + 0x28]
	0x03B97A18 STR S2, [X0 + 0x30]
	0x03B97A1C RET
	0x03B97A20 LDRB W0, [X0 + 0x34]
	0x03B97A24 RET
	0x03B97A28 AND W8, W1, 0x1
	0x03B97A2C STRB W8, [X0 + 0x34]
	0x03B97A30 B 0x3B97A34
	0x03B97A34 STR X30, [X31 - 0x20]!
	0x03B97A38 STP X20, X19, [X31 + 0x10]
	0x03B97A3C ADRP X20, 0x84B000
	0x03B97A40 LDRB W8, [X20 + 0xBF5]
	0x03B97A44 MOV X19, X0
	0x03B97A48 TBNZ X8, 0x0, 0x3B97A84
	0x03B97A4C ADRP X0, 0x55C000
	0x03B97A50 LDR X0, [X0 + 0x970]
	0x03B97A54 BL 0x1C16CF4
	0x03B97A58 ADRP X0, 0x586000
	0x03B97A5C LDR X0, [X0 + 0x1E8]
	0x03B97A60 BL 0x1C16CF4
	0x03B97A64 ADRP X0, 0x5C5000
	0x03B97A68 LDR X0, [X0 + 0x830]
	0x03B97A6C BL 0x1C16CF4
	0x03B97A70 ADRP X0, 0x5C5000
	0x03B97A74 LDR X0, [X0 + 0x838]
	0x03B97A78 BL 0x1C16CF4
	0x03B97A7C MOVZ W8, 0x1
	0x03B97A80 STRB W8, [X20 + 0xBF5]
	0x03B97A84 LDRB W8, [X19 + 0x34]
	0x03B97A88 CBZ W8, 0x3B97AE8
	0x03B97A8C LDR W8, [X19 + 0x54]
	0x03B97A90 SUB W8, W8, 0x1
	0x03B97A94 CMP W8, 0x1
	0x03B97A98 B.HI 0x3B97AE8
	0x03B97A9C ADRP X8, 0x55C000
	0x03B97AA0 LDR X8, [X8 + 0x970]
	0x03B97AA4 LDR X0, [X8]
	0x03B97AA8 LDR W8, [X0 + 0xE0]
	0x03B97AAC CBNZ W8, 0x3B97AB4
	0x03B97AB0 BL 0x1C16DFC
	0x03B97AB4 MOV X0, X31
	0x03B97AB8 BL 0x3C018E4
	0x03B97ABC TBZ X0, 0x0, 0x3B97AF4
	0x03B97AC0 STRB W31, [X19 + 0x34]
	0x03B97AC4 ADRP X8, 0x586000
	0x03B97AC8 LDR X8, [X8 + 0x1E8]
	0x03B97ACC LDR X0, [X8]
	0x03B97AD0 LDR W8, [X0 + 0xE0]
	0x03B97AD4 CBNZ W8, 0x3B97ADC
	0x03B97AD8 BL 0x1C16DFC
	0x03B97ADC ADRP X8, 0x5C5000
	0x03B97AE0 LDR X8, [X8 + 0x838]
	0x03B97AE4 B 0x3B97B14
	0x03B97AE8 LDP X20, X19, [X31 + 0x10]
	0x03B97AEC LDR X30, [X31], #0x20
	0x03B97AF0 RET
	0x03B97AF4 ADRP X8, 0x586000
	0x03B97AF8 LDR X8, [X8 + 0x1E8]
	0x03B97AFC LDR X0, [X8]
	0x03B97B00 LDR W8, [X0 + 0xE0]
	0x03B97B04 CBNZ W8, 0x3B97B0C
	0x03B97B08 BL 0x1C16DFC
	0x03B97B0C ADRP X8, 0x5C5000
	0x03B97B10 LDR X8, [X8 + 0x830]
	0x03B97B14 LDR X0, [X8]
	0x03B97B18 MOV X1, X19
	0x03B97B1C LDP X20, X19, [X31 + 0x10]
	0x03B97B20 MOV X2, X31
	0x03B97B24 LDR X30, [X31], #0x20
	0x03B97B28 B 0x3B2EE8C
	0x03B97B2C LDRB W0, [X0 + 0x35]
	0x03B97B30 RET
	0x03B97B34 AND W8, W1, 0x1
	0x03B97B38 STRB W8, [X0 + 0x35]
	0x03B97B3C RET
	0x03B97B40 LDR V0, [X0 + 0x38]
	0x03B97B44 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x84C000
	007 Move X21, 0x55D000
	008 Move W8, [X20+3048]
	009 Move X21, [X21+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x5C6000
	016 Move X0, [X0+1904]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C6000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C6000
	022 Move X0, [X0+1920]
	023 Call 0x1C17CF4
	024 Move X0, 0x5C6000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move X0, 0x55D000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x5C6000
	031 Move X0, [X0+1936]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3048], W8
	035 Move X0, [X21]
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move X20, [X19+48]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {61}
	052 Move X0, [X19+48]
	053 Compare X0, 0
	054 JumpIfEqual {120}
	055 Move X1, X31
	056 Call Behaviour.get_enabled, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {77}
	061 Move X0, X19
	062 Call CanvasOptimizer.FindCullingCamera, X0
	063 Move X0, [X21]
	064 Move X20, [X19+56]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X20
	070 Move X1, X31
	071 Move X2, X31
	072 Call Object.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {113}
	077 Move X0, [X19+64]
	078 Compare X0, 0
	079 JumpIfEqual {120}
	080 Move X8, 0x5C6000
	081 Move X8, [X8+1904]
	082 Move X1, [X8]
	083 Call Dictionary`2<Object, Object>.get_Values, X0
	084 Compare X0, 0
	085 JumpIfEqual {120}
	086 Move X8, 0x5C6000
	087 Move X8, [X8+1936]
	088 Move X20, 0x5C6000
	089 Move X21, 0x5C6000
	090 Move X1, [X8]
	091 Move X20, [X20+1920]
	092 Move X21, [X21+1912]
	093 Add X8, X31, 8
	094 Call ValueCollection<Object, Object>.GetEnumerator, X0
	095 Move X1, [X20]
	096 Add X0, X31, 8
	097 Call Enumerator<Object, Object>.MoveNext, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {110}
	102 Move X0, [X31+24]
	103 Compare X0, 0
	104 JumpIfEqual {119}
	105 Move X1, [X19+56]
	106 Move S1, [X19+36]
	107 Move S2, [X19+40]
	108 Move V0, [X19+32]
	109 Call CanvasState.CheckForOutOfView, X0, X1, V0, V1, V2
	110 Move X1, [X21]
	111 Add X0, X31, 8
	112 Call Enumerator<Object, Object>.Dispose, X0
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X30, [X31+32]
	116 Move X21, [X31+40]
	117 Add X31, X31, 64
	118 Return 
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Move X19, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X19
	124 Call 0x3EB2AD0
	125 Move X20, [X0]
	126 Call 0x3EB2AE0
	127 Move X1, [X21]
	128 Add X0, X31, 8
	129 Call Enumerator<Object, Object>.Dispose, X0
	130 Compare X20, 0
	131 JumpIfEqual {113}
	132 Move X0, X20
	133 Call 0x1C17F18
	134 Move X20, X31
	135 Move X19, X0
	136 Move X1, [X21]
	137 Add X0, X31, 8
	138 Call Enumerator<Object, Object>.Dispose, X0
	139 Compare X20, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X19
	142 Call 0x1D2D690
	143 Move X0, X20
	144 Call 0x1C17F18
	145 Call 0x1991590

Method: System.Void FindCullingCamera()

Disassembly:
	0x03B97674 LDR V0, [X1 + 0x40]
	0x03B97678 STR S0, [X0 + 0x1C]
	0x03B9767C LDR V0, [X1 + 0x38]
	0x03B97680 STR S0, [X0 + 0x20]
	0x03B97684 LDR W8, [X1 + 0x3C]
	0x03B97688 STR W8, [X0 + 0x24]
	0x03B9768C LDR V0, [X1 + 0x24]
	0x03B97690 STR S0, [X0 + 0x28]
	0x03B97694 LDUR V0, [X1 + 0x2C]
	0x03B97698 STUR D0, [X0 + 0x2C]
	0x03B9769C LDR V0, [X1 + 0x28]
	0x03B976A0 STR S0, [X0 + 0x34]
	0x03B976A4 LDR W8, [X1 + 0x34]
	0x03B976A8 STR W8, [X0 + 0x38]
	0x03B976AC LDR W8, [X1 + 0x20]
	0x03B976B0 STR W8, [X0 + 0x3C]
	0x03B976B4 LDR X30, [X31], #0x10
	0x03B976B8 RET
	0x03B976BC BL 0x1C16F20
	0x03B976C0 STR X30, [X31 - 0x10]!
	0x03B976C4 CBZ X1, 0x3B976E8
	0x03B976C8 LDR W8, [X1 + 0x30]
	0x03B976CC STR W8, [X0 + 0x14]
	0x03B976D0 LDR W8, [X1 + 0x2C]
	0x03B976D4 STR W8, [X0 + 0x18]
	0x03B976D8 LDRB W8, [X1 + 0x28]
	0x03B976DC STRB W8, [X0 + 0x1C]
	0x03B976E0 LDR X30, [X31], #0x10
	0x03B976E4 RET
	0x03B976E8 BL 0x1C16F20
	0x03B976EC STR X30, [X31 - 0x20]!
	0x03B976F0 STP X20, X19, [X31 + 0x10]
	0x03B976F4 CBZ X1, 0x3B977D4
	0x03B976F8 MOV X20, X1
	0x03B976FC MOV X19, X0
	0x03B97700 MOV X0, X1
	0x03B97704 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x84C000
	006 Move X21, 0x55D000
	007 Move W8, [X20+3049]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x55D000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3049], W8
	019 Move X0, X31
	020 Call Camera.get_main
	021 Move [X19+48], X0
	022 Move X20, X0
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move W8, W0
	033 Move X0, X31
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {43}
	038 Move X0, [X19+48]
	039 Compare X0, 0
	040 JumpIfEqual {49}
	041 Move X1, X31
	042 Call Component.get_transform, X0
	043 Move [X19+56], X0
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B985D4 CBNZ W9, 0x3B985E0
	0x03B985D8 MOV X0, X8
	0x03B985DC BL 0x1C16DFC
	0x03B985E0 MOV X0, X21
	0x03B985E4 MOV X1, X20
	0x03B985E8 MOV X2, X31
	0x03B985EC BL 0x3C065A4
	0x03B985F0 LDRB W21, [X20 + 0x34]
	0x03B985F4 MOV X0, X20
	0x03B985F8 MOV X1, X31
	0x03B985FC BL 0x3C32E90
	0x03B98600 CBZ X0, 0x3B986D0
	0x03B98604 MOV X1, X31
	0x03B98608 CBZ W21, 0x3B98644
	0x03B9860C BL 0x3C3EB78
	0x03B98610 B 0x3B98648
	0x03B98614 LDR X0, [X20 + 0x20]
	0x03B98618 CBZ X0, 0x3B986D0
	0x03B9861C LDRB W8, [X20 + 0x34]
	0x03B98620 CBZ W8, 0x3B98668
	0x03B98624 MOV X1, X31
	0x03B98628 BL 0x3C3EB78
	0x03B9862C LDP S3, S4, [X20 + 0x28]
	0x03B98630 LDR V5, [X20 + 0x30]
	0x03B98634 FADD S0, S0, S3
	0x03B98638 FADD S1, S1, S4
	0x03B9863C FADD S2, S2, S5
	0x03B98640 B 0x3B986A0
	0x03B98644 BL 0x3C3F58C
	0x03B98648 STP S0, S1, [X19]
	0x03B9864C STR S2, [X19 + 0x8]
	0x03B98650 LDP X20, X19, [X31 + 0x30]
	0x03B98654 LDP X30, X21, [X31 + 0x20]
	0x03B98658 LDP D9, D8, [X31 + 0x10]
	0x03B9865C MOV W0, W31
	0x03B98660 LDR V10, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x84B000
	007 Move X21, 0x5C5000
	008 Move X20, 0x5C5000
	009 Move W8, [X22+3050]
	010 Move X21, [X21+2080]
	011 Move X20, [X20+2088]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5C5000
	018 Move X0, [X0+2088]
	019 Call 0x1C17CF4
	020 Move X0, 0x5C5000
	021 Move X0, [X0+2080]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3050], W8
	025 Move X8, -51027968
	026 Move V0, [X8+2040]
	027 Move W8, 0x41C80000
	028 Move [X19+40], W8
	029 Move [X19+32], D0
	030 Move X0, [X21]
	031 Call 0x1C17F10
	032 Move X1, [X20]
	033 Move X20, X0
	034 Call Dictionary`2<Object, Object>..ctor, X0
	035 Move [X19+64], X20
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+48]
	043 Call MonoBehaviour..ctor, X0
	044 Return 

