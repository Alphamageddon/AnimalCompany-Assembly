Type: UnityEngine.XR.Interaction.Toolkit.UI.TouchModel

Method: System.Int32 get_pointerId()

Disassembly:
	0x03B9B4DC LDUR V1, [X31 + 0x44]
	0x03B9B4E0 ADD X2, X31, 0x10

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: UnityEngine.TouchPhase get_selectPhase()

Disassembly:
	0x03B9B4E4 MOV X0, X22
	0x03B9B4E8 MOV X1, X20

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_selectPhase(UnityEngine.TouchPhase value)

Disassembly:
	0x03B9B4EC MOV X3, X21
	0x03B9B4F0 MOV X4, X31
	0x03B9B4F4 STR V0, [X31 + 0x1]
	0x03B9B4F8 STUR V1, [X31 + 0x1C]
	0x03B9B4FC BL 0x3BB41EC
	0x03B9B500 CBZ X21, 0x3B9B698
	0x03B9B504 LDR X22, [X19 + 0x60]
	0x03B9B508 MOV X0, X21
	0x03B9B50C MOV X1, X31
	0x03B9B510 BL 0x3C3F58C
	0x03B9B514 LDR X0, [X28]
	0x03B9B518 MOV V8.16B, V0.16B
	0x03B9B51C MOV V9.16B, V1.16B
	0x03B9B520 MOV V10.16B, V2.16B
	0x03B9B524 LDR W8, [X0 + 0xE0]
	0x03B9B528 CBNZ W8, 0x3B9B530
	0x03B9B52C BL 0x1C16DFC

ISIL:
	001 Move W8, [X0+20]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Subtract W8, W1, 3
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 2
	006 Compare W1, 0
	007 JumpIfNotEqual {12}
	008 Move W8, 1
	009 Move W9, [X0+4]
	010 Or W8, W9, W8
	011 Move [X0+4], W8
	012 Move W8, 1
	013 Move [X0+20], W1
	014 Move [X0+8], W8
	015 Return 

Method: UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState get_selectDelta()

Disassembly:
	0x03B9B530 ADD X0, X31, 0x88
	0x03B9B534 BL 0x3B9C860

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void set_selectDelta(UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState value)

Disassembly:
	0x03B9B538 CBZ X22, 0x3B9B698
	0x03B9B53C MOV V3.16B, V0.16B

ISIL:
	001 Move [X0+4], W1
	002 Return 

Method: System.Boolean get_changedThisFrame()

Disassembly:
	0x03B9B540 MOV V4.16B, V1.16B
	0x03B9B544 MOV V5.16B, V2.16B

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void set_changedThisFrame(System.Boolean value)

Disassembly:
	0x03B9B548 FMOV S6, W31
	0x03B9B54C MOV X0, X22
	0x03B9B550 MOV X1, X20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+8], W8
	003 Return 

Method: UnityEngine.Vector2 get_position()

Disassembly:
	0x03B9B554 MOV V0.16B, V8.16B
	0x03B9B558 MOV V1.16B, V9.16B

ISIL:
	001 Move S0, [X0+24]
	002 Move S1, [X0+28]
	003 Return X0

Method: System.Void set_position(UnityEngine.Vector2 value)

Disassembly:
	0x03B9B55C MOV V2.16B, V10.16B
	0x03B9B560 MOV X2, X21
	0x03B9B564 MOV X3, X31
	0x03B9B568 BL 0x3BB367C
	0x03B9B56C LDR X8, [X27]
	0x03B9B570 MOV W21, W0
	0x03B9B574 LDR W9, [X8 + 0xE0]
	0x03B9B578 CBNZ W9, 0x3B9B588
	0x03B9B57C MOV X0, X8
	0x03B9B580 BL 0x1C16DFC
	0x03B9B584 LDR X8, [X27]
	0x03B9B588 LDR X8, [X8 + 0xB8]
	0x03B9B58C LDR X0, [X8 + 0x18]
	0x03B9B590 CBZ X0, 0x3B9B698
	0x03B9B594 TBZ X21, 0x0, 0x3B9B680
	0x03B9B598 ADRP X8, 0x5C1000
	0x03B9B59C LDR X8, [X8 + 0x928]

ISIL:
	001 Move S2, [X0+24]
	002 Move S3, [X0+28]
	003 Move X8, -51056640
	004 Move V4, [X8+3872]
	005 Subtract S5, S2, S0
	006 Subtract S6, S3, S1
	007 Multiply S5, S5, S5
	008 Multiply S6, S6, S6
	009 Add S5, S5, S6
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Subtract S2, S0, S2
	012 Subtract S3, S1, S3
	013 Move W8, 1
	014 Move [X0+24], S0
	015 Move [X0+32], S1
	016 Move [X0+12], S2
	017 Move [X0+20], S3
	018 Move [X0+8], W8
	019 Return 

Method: UnityEngine.Vector2 get_deltaPosition()

Disassembly:
	0x03B9B5A0 MOV X1, X20
	0x03B9B5A4 MOV X2, X19

ISIL:
	001 Move S0, [X0+12]
	002 Move S1, [X0+16]
	003 Return X0

Method: System.Void set_deltaPosition(UnityEngine.Vector2 value)

Disassembly:
	0x03B9B5A8 LDR X3, [X8]
	0x03B9B5AC BL 0x2AA5084

ISIL:
	001 Move [X0+12], S0
	002 Move [X0+20], S1
	003 Return 

Method: System.Void .ctor(System.Int32 pointerId)

Disassembly:
	0x03B9B5B0 B 0x3B9B658
	0x03B9B5B4 LDR X20, [X22 + 0x180]
	0x03B9B5B8 CBZ X20, 0x3B9B698
	0x03B9B5BC LDR W8, [X20 + 0x18]
	0x03B9B5C0 CMP W8, 0x2
	0x03B9B5C4 B.LT 0x3B9B658
	0x03B9B5C8 ADRP X26, 0x55C000
	0x03B9B5CC LDR X26, [X26 + 0x980]
	0x03B9B5D0 MOVZ W25, 0x1
	0x03B9B5D4 LDR X2, [X26]
	0x03B9B5D8 SUB W1, W25, 0x1
	0x03B9B5DC MOV X0, X20
	0x03B9B5E0 BL 0x30CBE84
	0x03B9B5E4 LDR X2, [X26]
	0x03B9B5E8 MOV X0, X20
	0x03B9B5EC MOV W1, W25
	0x03B9B5F0 MOV V8.16B, V0.16B
	0x03B9B5F4 MOV V9.16B, V1.16B
	0x03B9B5F8 MOV V10.16B, V2.16B
	0x03B9B5FC BL 0x30CBE84
	0x03B9B600 MOV V3.16B, V0.16B
	0x03B9B604 MOV V4.16B, V1.16B
	0x03B9B608 MOV V5.16B, V2.16B
	0x03B9B60C MOV X0, X19
	0x03B9B610 MOV V0.16B, V8.16B
	0x03B9B614 MOV V1.16B, V9.16B
	0x03B9B618 MOV V2.16B, V10.16B
	0x03B9B61C MOV X1, X24
	0x03B9B620 MOV X2, X23
	0x03B9B624 MOV X3, X21
	0x03B9B628 BL 0x3B9CC78
	0x03B9B62C TBNZ X0, 0x0, 0x3B9B644

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X0], W1
	005 Move X20, 0x83F000
	006 Move W8, [X20+1935]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, 0x561000
	011 Move X0, [X0+3848]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X20+1935], W8
	015 Move X8, 0x561000
	016 Move X8, [X8+3848]
	017 Move W9, 4
	018 Move W2, 136
	019 Move W1, W31
	020 Move X8, [X8]
	021 Move X8, [X8+184]
	022 Move S0, [X8]
	023 Move S1, [X8+4]
	024 Move [X19+20], W9
	025 Move [X19+8], W31
	026 Move [X19+4], W31
	027 Move [X19+12], S0
	028 Move [X19+20], S1
	029 Move [X19+24], S0
	030 Move [X19+32], S1
	031 Add X19, X19, 32
	032 Move X0, X19
	033 Call 0x3EB2B10
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]

Method: System.Void Reset()

Disassembly:
	0x03B9B730 CBNZ W8, 0x3B9B73C
	0x03B9B734 BL 0x1C16DFC
	0x03B9B738 LDR X0, [X20]
	0x03B9B73C LDR X8, [X0 + 0xB8]
	0x03B9B740 LDR X0, [X8 + 0x20]
	0x03B9B744 CBZ X0, 0x3B9B7F0
	0x03B9B748 ADRP X8, 0x5C1000
	0x03B9B74C LDR X8, [X8 + 0x950]
	0x03B9B750 LDR X1, [X8]
	0x03B9B754 BL 0x2AA4F58
	0x03B9B758 CBZ X0, 0x3B9B7F0
	0x03B9B75C ADRP X8, 0x5C1000
	0x03B9B760 LDR X8, [X8 + 0x970]
	0x03B9B764 ADRP X22, 0x5C1000
	0x03B9B768 ADRP X23, 0x5C1000
	0x03B9B76C ADRP X21, 0x5C1000
	0x03B9B770 LDR X1, [X8]
	0x03B9B774 LDR X22, [X22 + 0x960]
	0x03B9B778 LDR X23, [X23 + 0x938]
	0x03B9B77C LDR X21, [X21 + 0x958]
	0x03B9B780 ADD X8, X31, 0x8
	0x03B9B784 BL 0x275A7AC
	0x03B9B788 LDR X1, [X22]
	0x03B9B78C ADD X0, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x83F000
	005 Move W8, [X20+1935]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x561000
	010 Move X0, [X0+3848]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1935], W8
	014 Move X8, 0x561000
	015 Move X8, [X8+3848]
	016 Add X0, X19, 32
	017 Move X8, [X8]
	018 Move X8, [X8+184]
	019 Move S0, [X8]
	020 Move S1, [X8+4]
	021 Move [X19+8], W31
	022 Move [X19+4], W31
	023 Move [X19+12], S0
	024 Move [X19+20], S1
	025 Move [X19+24], S0
	026 Move [X19+32], S1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call ImplementationData.Reset, X0
	031 Return 

Method: System.Void OnFrameFinished()

Disassembly:
	0x03B9B790 BL 0x2C0B1F0
	0x03B9B794 MOV W20, W0
	0x03B9B798 TBZ X0, 0x0, 0x3B9B7BC
	0x03B9B79C LDR X0, [X31 + 0x18]
	0x03B9B7A0 CBZ X0, 0x3B9B7EC
	0x03B9B7A4 LDR X2, [X23]
	0x03B9B7A8 MOV X1, X19
	0x03B9B7AC BL 0x2DBE4B0
	0x03B9B7B0 TBZ X0, 0x0, 0x3B9B788
	0x03B9B7B4 MOVZ W19, 0x4
	0x03B9B7B8 B 0x3B9B7C0
	0x03B9B7BC MOVZ W19, 0x5
	0x03B9B7C0 LDR X1, [X21]
	0x03B9B7C4 ADD X0, X31, 0x8
	0x03B9B7C8 BL 0x2C0B1EC
	0x03B9B7CC CMP W19, 0x4
	0x03B9B7D0 CSET W8, EQ
	0x03B9B7D4 AND W0, W20, W8, 0x0
	0x03B9B7D8 LDP X20, X19, [X31 + 0x40]
	0x03B9B7DC LDP X22, X21, [X31 + 0x30]
	0x03B9B7E0 LDP X30, X23, [X31 + 0x20]
	0x03B9B7E4 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x83F000
	005 Move W8, [X20+1935]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x561000
	010 Move X0, [X0+3848]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1935], W8
	014 Move X8, 0x561000
	015 Move X8, [X8+3848]
	016 Move X8, [X8]
	017 Move X8, [X8+184]
	018 Move V0, [X8]
	019 Move [X19+4], W31
	020 Move [X19+8], W31
	021 Move [X19+12], D0
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void CopyTo(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03B9B7E8 RET
	0x03B9B7EC BL 0x1C16F20
	0x03B9B7F0 BL 0x1C16F20
	0x03B9B7F4 B 0x3B9B7FC
	0x03B9B7F8 B 0x3B9B7FC
	0x03B9B7FC MOV X19, X0
	0x03B9B800 CMP W1, 0x1
	0x03B9B804 B.NE 0x3B9B830
	0x03B9B808 MOV X0, X19
	0x03B9B80C BL 0x3EB1AD0
	0x03B9B810 LDR X20, [X0]
	0x03B9B814 BL 0x3EB1AE0
	0x03B9B818 LDR X1, [X21]
	0x03B9B81C ADD X0, X31, 0x8
	0x03B9B820 BL 0x2C0B1EC
	0x03B9B824 CBNZ X20, 0x3B9B838
	0x03B9B828 MOV W19, W31
	0x03B9B82C B 0x3B9B7CC
	0x03B9B830 MOV X20, X31
	0x03B9B834 B 0x3B9B844
	0x03B9B838 MOV X0, X20
	0x03B9B83C BL 0x1C16F18
	0x03B9B840 MOV X19, X0
	0x03B9B844 LDR X1, [X21]
	0x03B9B848 ADD X0, X31, 0x8
	0x03B9B84C BL 0x2C0B1EC
	0x03B9B850 CBNZ X20, 0x3B9B85C
	0x03B9B854 MOV X0, X19
	0x03B9B858 BL 0x1D2C690
	0x03B9B85C MOV X0, X20
	0x03B9B860 BL 0x1C16F18
	0x03B9B864 BL 0x1990590
	0x03B9B868 STP X30, X21, [X31 - 0x20]!
	0x03B9B86C STP X20, X19, [X31 + 0x10]
	0x03B9B870 ADRP X21, 0x847000
	0x03B9B874 LDRB W8, [X21 + 0xC0B]
	0x03B9B878 MOV X19, X1
	0x03B9B87C MOV X20, X0
	0x03B9B880 TBNZ X8, 0x0, 0x3B9B8BC
	0x03B9B884 ADRP X0, 0x5C1000
	0x03B9B888 LDR X0, [X0 + 0x910]
	0x03B9B88C BL 0x1C16CF4
	0x03B9B890 ADRP X0, 0x5C1000
	0x03B9B894 LDR X0, [X0 + 0x920]
	0x03B9B898 BL 0x1C16CF4
	0x03B9B89C ADRP X0, 0x5C1000
	0x03B9B8A0 LDR X0, [X0 + 0x978]
	0x03B9B8A4 BL 0x1C16CF4
	0x03B9B8A8 ADRP X0, 0x5C0000
	0x03B9B8AC LDR X0, [X0 + 0x1C8]
	0x03B9B8B0 BL 0x1C16CF4
	0x03B9B8B4 MOVZ W8, 0x1
	0x03B9B8B8 STRB W8, [X21 + 0xC0B]
	0x03B9B8BC CBZ X19, 0x3B9B954
	0x03B9B8C0 LDR X0, [X20 + 0x60]
	0x03B9B8C4 CBZ X0, 0x3B9B960
	0x03B9B8C8 ADRP X21, 0x5C0000
	0x03B9B8CC LDR X21, [X21 + 0x1C8]
	0x03B9B8D0 MOV X1, X19
	0x03B9B8D4 MOV X2, X31
	0x03B9B8D8 BL 0x3BB4404
	0x03B9B8DC LDR X0, [X21]
	0x03B9B8E0 LDR W8, [X0 + 0xE0]
	0x03B9B8E4 CBNZ W8, 0x3B9B8F0
	0x03B9B8E8 BL 0x1C16DFC
	0x03B9B8EC LDR X0, [X21]
	0x03B9B8F0 LDR X8, [X0 + 0xB8]
	0x03B9B8F4 LDR X0, [X8 + 0x18]
	0x03B9B8F8 CBZ X0, 0x3B9B960
	0x03B9B8FC ADRP X8, 0x5C1000
	0x03B9B900 LDR X8, [X8 + 0x910]
	0x03B9B904 MOV X1, X19
	0x03B9B908 LDR X2, [X8]
	0x03B9B90C BL 0x2AA64F8
	0x03B9B910 LDR X8, [X21]
	0x03B9B914 LDR X8, [X8 + 0xB8]
	0x03B9B918 LDR X0, [X8 + 0x20]
	0x03B9B91C CBZ X0, 0x3B9B960
	0x03B9B920 ADRP X8, 0x5C1000
	0x03B9B924 LDR X8, [X8 + 0x920]
	0x03B9B928 MOV X1, X20
	0x03B9B92C LDR X2, [X8]
	0x03B9B930 BL 0x2AA5018
	0x03B9B934 CBZ X0, 0x3B9B960

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x848000
	007 Move W8, [X21+3075]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5C2000
	015 Move X0, [X0+2224]
	016 Call 0x1C17CF4
	017 Move X0, 0x5AF000
	018 Move X0, [X0+1032]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3075], W8
	022 Compare X20, 0
	023 JumpIfEqual {99}
	024 Move W8, [X19]
	025 Add X21, X20, 260
	026 Move [X20+256], W8
	027 Move V0, [X19+24]
	028 Move [X21], D0
	029 Move W8, [X19+4]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {36}
	034 Add X8, X19, 12
	035 Add X9, X19, 16
	036 Move X22, 0x83F000
	037 Move W8, [X22+1935]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x561000
	041 Move X0, [X0+3848]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+1935], W8
	045 Move X8, 0x561000
	046 Move X8, [X8+3848]
	047 Move X8, [X8]
	048 Move X8, [X8+184]
	049 Add X9, X8, 4
	050 Move V0, [X8]
	051 Move V1, [X9]
	052 Add X1, X19, 64
	053 Add X0, X20, 160
	054 Move [X20+268], S0
	055 Move [X20+272], S1
	056 Move X8, [X19+40]
	057 Move W2, 80
	058 Move [X20+32], X8
	059 Move W8, [X19+48]
	060 Move [X20+325], W8
	061 Move V0, [X19+52]
	062 Move [X20+308], S0
	063 Move V0, [X19+56]
	064 Move [X21+16], D0
	065 Call 0x3EB2B30
	066 Move X1, [X19+144]
	067 Move X0, X20
	068 Move X2, X31
	069 Call PointerEventData.set_pointerPress, X0, X1
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 Move X0, [X20+240]
	072 Move [X20+56], V0
	073 Compare X0, 0
	074 JumpIfEqual {99}
	075 Move W2, [X0+24]
	076 Move W8, [X0+28]
	077 Add W8, W8, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X0+24], W31
	080 Move [X0+28], W8
	081 Move X0, [X0+16]
	082 Move W1, W31
	083 Move X3, X31
	084 Call Array.Clear, X0, X1, X2
	085 Move X0, [X20+240]
	086 Compare X0, 0
	087 JumpIfEqual {99}
	088 Move X8, 0x5C2000
	089 Move X8, [X8+2224]
	090 Move X1, [X19+32]
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X2, [X8]
	096 Move X30, [X31+48]
	097 Call List`1<Object>.AddRange, X0, X1
	098 Return 
	099 Call 0x1C17F20

Method: System.Void CopyFrom(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03B9B938 ADRP X8, 0x5C1000
	0x03B9B93C LDR X8, [X8 + 0x978]
	0x03B9B940 MOV X1, X19
	0x03B9B944 LDP X20, X19, [X31 + 0x10]
	0x03B9B948 LDR X2, [X8]
	0x03B9B94C LDP X30, X21, [X31], #0x20
	0x03B9B950 B 0x2DBE67C
	0x03B9B954 LDP X20, X19, [X31 + 0x10]
	0x03B9B958 LDP X30, X21, [X31], #0x20
	0x03B9B95C RET
	0x03B9B960 BL 0x1C16F20
	0x03B9B964 SUB X31, X31, 0xF0
	0x03B9B968 STR X30, [X31 + 0xB0]
	0x03B9B96C STP X24, X23, [X31 + 0xC0]
	0x03B9B970 STP X22, X21, [X31 + 0xD0]
	0x03B9B974 STP X20, X19, [X31 + 0xE0]
	0x03B9B978 ADRP X23, 0x847000
	0x03B9B97C ADRP X21, 0x5C0000
	0x03B9B980 LDRB W8, [X23 + 0xC0C]
	0x03B9B984 LDR X21, [X21 + 0x1C8]
	0x03B9B988 MOV X19, X1
	0x03B9B98C MOV X20, X0
	0x03B9B990 ADD X22, X31, 0x80
	0x03B9B994 TBNZ X8, 0x0, 0x3B9BA0C
	0x03B9B998 ADRP X0, 0x5C1000
	0x03B9B99C LDR X0, [X0 + 0x980]
	0x03B9B9A0 BL 0x1C16CF4
	0x03B9B9A4 ADRP X0, 0x5C1000
	0x03B9B9A8 LDR X0, [X0 + 0x988]
	0x03B9B9AC BL 0x1C16CF4
	0x03B9B9B0 ADRP X0, 0x5C1000
	0x03B9B9B4 LDR X0, [X0 + 0x990]
	0x03B9B9B8 BL 0x1C16CF4
	0x03B9B9BC ADRP X0, 0x5C1000
	0x03B9B9C0 LDR X0, [X0 + 0x998]
	0x03B9B9C4 BL 0x1C16CF4
	0x03B9B9C8 ADRP X0, 0x5C1000
	0x03B9B9CC LDR X0, [X0 + 0x938]
	0x03B9B9D0 BL 0x1C16CF4
	0x03B9B9D4 ADRP X0, 0x5C0000
	0x03B9B9D8 LDR X0, [X0 + 0x208]
	0x03B9B9DC BL 0x1C16CF4
	0x03B9B9E0 ADRP X0, 0x5C1000
	0x03B9B9E4 LDR X0, [X0 + 0x9A0]
	0x03B9B9E8 BL 0x1C16CF4
	0x03B9B9EC ADRP X0, 0x5C1000
	0x03B9B9F0 LDR X0, [X0 + 0x9A8]
	0x03B9B9F4 BL 0x1C16CF4
	0x03B9B9F8 ADRP X0, 0x5C0000
	0x03B9B9FC LDR X0, [X0 + 0x1C8]
	0x03B9BA00 BL 0x1C16CF4
	0x03B9BA04 MOVZ W8, 0x1
	0x03B9BA08 STRB W8, [X23 + 0xC0C]
	0x03B9BA0C LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x848000
	006 Move W8, [X21+3076]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5C2000
	014 Move X0, [X0+2224]
	015 Call 0x1C17CF4
	016 Move X0, 0x5AF000
	017 Move X0, [X0+1032]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3076], W8
	021 Compare X19, 0
	022 JumpIfEqual {66}
	023 Move X8, [X19+32]
	024 Add X1, X19, 160
	025 Add X0, X20, 64
	026 Move W2, 80
	027 Move [X20+40], X8
	028 Move W8, [X19+325]
	029 Move [X20+48], W8
	030 Move V0, [X19+308]
	031 Add X8, X19, 276
	032 Move [X20+52], S0
	033 Move V0, [X8]
	034 Move [X20+56], D0
	035 Call 0x3EB2B30
	036 Move X8, [X19+40]
	037 Move X0, [X20+32]
	038 Move [X20+144], X8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move [X20+152], V0
	041 Compare X0, 0
	042 JumpIfEqual {66}
	043 Move W2, [X0+24]
	044 Move W8, [X0+28]
	045 Add W8, W8, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X0+24], W31
	048 Move [X0+28], W8
	049 Move X0, [X0+16]
	050 Move W1, W31
	051 Move X3, X31
	052 Call Array.Clear, X0, X1, X2
	053 Move X0, [X20+32]
	054 Compare X0, 0
	055 JumpIfEqual {66}
	056 Move X8, 0x5C2000
	057 Move X8, [X8+2224]
	058 Move X1, [X19+240]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X2, [X8]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call List`1<Object>.AddRange, X0, X1
	065 Return 
	066 Call 0x1C17F20

