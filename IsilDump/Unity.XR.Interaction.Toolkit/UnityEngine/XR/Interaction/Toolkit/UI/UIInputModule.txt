Type: UnityEngine.XR.Interaction.Toolkit.UI.UIInputModule

Method: System.Single get_clickSpeed()

Disassembly:
	0x03BA18CC TBZ X0, 0x0, 0x3BA1954
	0x03BA18D0 LDR X8, [X20 + 0xD0]

ISIL:
	001 Move V0, [X0+88]
	002 Return V0

Method: System.Void set_clickSpeed(System.Single value)

Disassembly:
	0x03BA18D4 CBZ X8, 0x3BA18F0
	0x03BA18D8 LDR X9, [X8 + 0x18]

ISIL:
	001 Move [X0+88], S0
	002 Return 

Method: System.Single get_moveDeadzone()

Disassembly:
	0x03BA18DC LDR X0, [X8 + 0x40]
	0x03BA18E0 LDR X3, [X8 + 0x28]

ISIL:
	001 Move V0, [X0+92]
	002 Return V0

Method: System.Void set_moveDeadzone(System.Single value)

Disassembly:
	0x03BA18E4 MOV X1, X23
	0x03BA18E8 MOV X2, X19

ISIL:
	001 Move [X0+92], S0
	002 Return 

Method: System.Single get_repeatDelay()

Disassembly:
	0x03BA18EC BLR X9
	0x03BA18F0 LDR X0, [X25]

ISIL:
	001 Move V0, [X0+96]
	002 Return V0

Method: System.Void set_repeatDelay(System.Single value)

Disassembly:
	0x03BA18F4 LDR W8, [X0 + 0xE0]
	0x03BA18F8 CBNZ W8, 0x3BA1900

ISIL:
	001 Move [X0+96], S0
	002 Return 

Method: System.Single get_repeatRate()

Disassembly:
	0x03BA18FC BL 0x1C16DFC
	0x03BA1900 ADRP X24, 0x840000

ISIL:
	001 Move V0, [X0+100]
	002 Return V0

Method: System.Void set_repeatRate(System.Single value)

Disassembly:
	0x03BA1904 LDRB W8, [X24 + 0x387]
	0x03BA1908 CBNZ W8, 0x3BA1920

ISIL:
	001 Move [X0+100], S0
	002 Return 

Method: System.Single get_trackedDeviceDragThresholdMultiplier()

Disassembly:
	0x03BA190C ADRP X0, 0x57A000
	0x03BA1910 LDR X0, [X0 + 0x9F8]

ISIL:
	001 Move V0, [X0+104]
	002 Return V0

Method: System.Void set_trackedDeviceDragThresholdMultiplier(System.Single value)

Disassembly:
	0x03BA1914 BL 0x1C16CF4
	0x03BA1918 MOVZ W8, 0x1

ISIL:
	001 Move [X0+104], S0
	002 Return 

Method: System.Single get_trackedScrollDeltaMultiplier()

Disassembly:
	0x03BA191C STRB W8, [X24 + 0x387]
	0x03BA1920 LDR X0, [X25]

ISIL:
	001 Move V0, [X0+108]
	002 Return V0

Method: System.Void set_trackedScrollDeltaMultiplier(System.Single value)

Disassembly:
	0x03BA1924 LDR W8, [X0 + 0xE0]
	0x03BA1928 CBNZ W8, 0x3BA1934

ISIL:
	001 Move [X0+108], S0
	002 Return 

Method: UnityEngine.Camera get_uiCamera()

Disassembly:
	0x03BA192C BL 0x1C16DFC
	0x03BA1930 LDR X0, [X25]
	0x03BA1934 ADRP X9, 0x5A8000
	0x03BA1938 LDR X8, [X0 + 0xB8]
	0x03BA193C LDR X9, [X9 + 0x398]
	0x03BA1940 MOV X0, X23
	0x03BA1944 MOV X1, X19
	0x03BA1948 LDR X2, [X8 + 0x30]
	0x03BA194C LDR X3, [X9]
	0x03BA1950 BL 0x21DD088
	0x03BA1954 TBZ X22, 0x1, 0x3BA1C44
	0x03BA1958 LDR X8, [X20 + 0xB8]
	0x03BA195C LDR X23, [X19 + 0x28]
	0x03BA1960 CBZ X8, 0x3BA197C
	0x03BA1964 LDR X9, [X8 + 0x18]
	0x03BA1968 LDR X0, [X8 + 0x40]
	0x03BA196C LDR X3, [X8 + 0x28]
	0x03BA1970 MOV X1, X23
	0x03BA1974 MOV X2, X19
	0x03BA1978 BLR X9
	0x03BA197C ADRP X25, 0x57A000
	0x03BA1980 LDR X25, [X25 + 0x9F8]
	0x03BA1984 LDR X0, [X25]
	0x03BA1988 LDR W8, [X0 + 0xE0]
	0x03BA198C CBNZ W8, 0x3BA1994
	0x03BA1990 BL 0x1C16DFC
	0x03BA1994 ADRP X22, 0x840000
	0x03BA1998 LDRB W8, [X22 + 0x388]
	0x03BA199C CBNZ W8, 0x3BA19B4
	0x03BA19A0 ADRP X0, 0x57A000
	0x03BA19A4 LDR X0, [X0 + 0x9F8]
	0x03BA19A8 BL 0x1C16CF4
	0x03BA19AC MOVZ W8, 0x1
	0x03BA19B0 STRB W8, [X22 + 0x388]
	0x03BA19B4 LDR X0, [X25]
	0x03BA19B8 LDR W8, [X0 + 0xE0]
	0x03BA19BC CBNZ W8, 0x3BA19C8
	0x03BA19C0 BL 0x1C16DFC
	0x03BA19C4 LDR X0, [X25]
	0x03BA19C8 ADRP X9, 0x5A8000
	0x03BA19CC LDR X8, [X0 + 0xB8]
	0x03BA19D0 LDR X9, [X9 + 0x3A8]
	0x03BA19D4 MOV X0, X23
	0x03BA19D8 MOV X1, X19
	0x03BA19DC LDR X2, [X8 + 0x20]
	0x03BA19E0 LDR X3, [X9]
	0x03BA19E4 BL 0x21DD088
	0x03BA19E8 ADRP X8, 0x5A8000
	0x03BA19EC LDR X8, [X8 + 0x3B8]
	0x03BA19F0 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x842000
	007 Move X21, 0x553000
	008 Move W8, [X20+3130]
	009 Move X21, [X21+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x553000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3130], W8
	020 Move X22, X19
	021 Add X22, X22, 112
	022 Move X20, [X22]
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {64}
	036 Add X19, X19, 120
	037 Move X20, [X19]
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {60}
	051 Move X0, [X19]
	052 Compare X0, 0
	053 JumpIfEqual {71}
	054 Move X1, X31
	055 Call Behaviour.get_isActiveAndEnabled, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X31
	061 Call Camera.get_main
	062 Move [X19], X0
	063 Move X22, X19
	064 Move X0, [X22]
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void set_uiCamera(UnityEngine.Camera value)

Disassembly:
	0x03BA19F4 LDR X1, [X8]
	0x03BA19F8 BL 0x21DDB64

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.Void Update()

Disassembly:
	0x03BA19FC ADRP X26, 0x552000
	0x03BA1A00 LDR X26, [X26 + 0x598]
	0x03BA1A04 LDR X22, [X19 + 0x40]
	0x03BA1A08 MOV X24, X0
	0x03BA1A0C LDR X8, [X26]
	0x03BA1A10 LDR W9, [X8 + 0xE0]
	0x03BA1A14 CBNZ W9, 0x3BA1A20
	0x03BA1A18 MOV X0, X8
	0x03BA1A1C BL 0x1C16DFC
	0x03BA1A20 MOV X0, X23
	0x03BA1A24 MOV X1, X24
	0x03BA1A28 MOV X2, X31
	0x03BA1A2C BL 0x3C3883C
	0x03BA1A30 TBZ X0, 0x0, 0x3BA1AC4
	0x03BA1A34 LDRB W8, [X19 + 0xF8]
	0x03BA1A38 CBZ W8, 0x3BA1AC4
	0x03BA1A3C LDR X8, [X20 + 0xC0]
	0x03BA1A40 CBZ X8, 0x3BA1A5C
	0x03BA1A44 LDR X9, [X8 + 0x18]
	0x03BA1A48 LDR X0, [X8 + 0x40]
	0x03BA1A4C LDR X3, [X8 + 0x28]
	0x03BA1A50 MOV X1, X23
	0x03BA1A54 MOV X2, X19
	0x03BA1A58 BLR X9
	0x03BA1A5C LDR X0, [X25]
	0x03BA1A60 LDR W8, [X0 + 0xE0]
	0x03BA1A64 CBNZ W8, 0x3BA1A6C
	0x03BA1A68 BL 0x1C16DFC
	0x03BA1A6C ADRP X21, 0x840000
	0x03BA1A70 LDRB W8, [X21 + 0x389]
	0x03BA1A74 CBNZ W8, 0x3BA1A8C
	0x03BA1A78 ADRP X0, 0x57A000
	0x03BA1A7C LDR X0, [X0 + 0x9F8]
	0x03BA1A80 BL 0x1C16CF4
	0x03BA1A84 MOVZ W8, 0x1
	0x03BA1A88 STRB W8, [X21 + 0x389]
	0x03BA1A8C LDR X0, [X25]
	0x03BA1A90 LDR W8, [X0 + 0xE0]
	0x03BA1A94 CBNZ W8, 0x3BA1AA0
	0x03BA1A98 BL 0x1C16DFC
	0x03BA1A9C LDR X0, [X25]
	0x03BA1AA0 ADRP X9, 0x5A8000
	0x03BA1AA4 LDR X8, [X0 + 0xB8]
	0x03BA1AA8 LDR X9, [X9 + 0x3A0]
	0x03BA1AAC MOV X0, X23
	0x03BA1AB0 MOV X1, X19
	0x03BA1AB4 LDR X2, [X8 + 0x28]
	0x03BA1AB8 LDR X3, [X9]
	0x03BA1ABC BL 0x21DD088
	0x03BA1AC0 B 0x3BA1B74
	0x03BA1AC4 LDRB W8, [X19 + 0x145]
	0x03BA1AC8 CBZ W8, 0x3BA1B74
	0x03BA1ACC LDR X0, [X26]
	0x03BA1AD0 LDR W8, [X0 + 0xE0]
	0x03BA1AD4 CBNZ W8, 0x3BA1ADC
	0x03BA1AD8 BL 0x1C16DFC
	0x03BA1ADC MOV X0, X22
	0x03BA1AE0 MOV X1, X31
	0x03BA1AE4 MOV X2, X31
	0x03BA1AE8 BL 0x3C354F8
	0x03BA1AEC TBZ X0, 0x0, 0x3BA1B74
	0x03BA1AF0 LDR X8, [X20 + 0xF0]
	0x03BA1AF4 CBZ X8, 0x3BA1B10
	0x03BA1AF8 LDR X9, [X8 + 0x18]
	0x03BA1AFC LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x842000
	006 Move W8, [X20+3131]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x57A000
	013 Move X0, [X0+3576]
	014 Call 0x1C17CF4
	015 Move X0, 0x553000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3131], W8
	020 Move X0, [X19+56]
	021 Compare X0, 0
	022 JumpIfEqual {89}
	023 Move X8, [X0]
	024 Move X9, [X8+456]
	025 Move X1, [X8+464]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {84}
	031 Move X8, [X19+56]
	032 Compare X8, 0
	033 JumpIfEqual {89}
	034 Move X21, 0x553000
	035 Move X21, [X21+1432]
	036 Move X20, [X8+40]
	037 Move X0, [X21]
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X19
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {84}
	050 Move X8, 0x57A000
	051 Move X8, [X8+3576]
	052 Move X20, [X19+56]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X31
	059 Call EventSystem.get_current
	060 Move X8, [X21]
	061 Move X21, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X21
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {84}
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X2, [X8+760]
	080 Move X1, [X8+768]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 CallNoReturn X2
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return 
	089 Call 0x1C17F20

Method: System.Void DoProcess()

Disassembly:
	0x03BA1B00 LDR X3, [X8 + 0x28]

ISIL:
No ISIL was generated
Method: System.Void Process()

Disassembly:
	0x03BA1C60 BL 0x1C16F20

ISIL:
	001 Return 

Method: System.Boolean SendUpdateEventToSelectedObject()

Disassembly:
	0x03BA1B04 MOV X1, X21
	0x03BA1B08 MOV X2, X19
	0x03BA1B0C BLR X9
	0x03BA1B10 LDR X0, [X25]
	0x03BA1B14 LDR W8, [X0 + 0xE0]
	0x03BA1B18 CBNZ W8, 0x3BA1B20
	0x03BA1B1C BL 0x1C16DFC
	0x03BA1B20 ADRP X23, 0x840000
	0x03BA1B24 LDRB W8, [X23 + 0x38A]
	0x03BA1B28 CBNZ W8, 0x3BA1B40
	0x03BA1B2C ADRP X0, 0x57A000
	0x03BA1B30 LDR X0, [X0 + 0x9F8]
	0x03BA1B34 BL 0x1C16CF4
	0x03BA1B38 MOVZ W8, 0x1
	0x03BA1B3C STRB W8, [X23 + 0x38A]
	0x03BA1B40 LDR X0, [X25]
	0x03BA1B44 LDR W8, [X0 + 0xE0]
	0x03BA1B48 CBNZ W8, 0x3BA1B54
	0x03BA1B4C BL 0x1C16DFC
	0x03BA1B50 LDR X0, [X25]
	0x03BA1B54 ADRP X9, 0x5A8000
	0x03BA1B58 LDR X8, [X0 + 0xB8]
	0x03BA1B5C LDR X9, [X9 + 0x380]
	0x03BA1B60 MOV X0, X21
	0x03BA1B64 MOV X1, X19
	0x03BA1B68 LDR X2, [X8 + 0x50]
	0x03BA1B6C LDR X3, [X9]
	0x03BA1B70 BL 0x21DD8A8
	0x03BA1B74 MOV X0, X19
	0x03BA1B78 MOV X1, X31
	0x03BA1B7C MOV X2, X31
	0x03BA1B80 STRB W31, [X19 + 0xF8]
	0x03BA1B84 BL 0x3E4F3AC
	0x03BA1B88 LDRB W8, [X19 + 0x145]
	0x03BA1B8C STR X31, [X19 + 0x38]
	0x03BA1B90 CBZ W8, 0x3BA1C3C
	0x03BA1B94 LDR X0, [X26]
	0x03BA1B98 LDR W8, [X0 + 0xE0]
	0x03BA1B9C CBNZ W8, 0x3BA1BA4
	0x03BA1BA0 BL 0x1C16DFC
	0x03BA1BA4 MOV X0, X22
	0x03BA1BA8 MOV X1, X31
	0x03BA1BAC MOV X2, X31
	0x03BA1BB0 BL 0x3C354F8
	0x03BA1BB4 TBZ X0, 0x0, 0x3BA1C3C
	0x03BA1BB8 LDR X8, [X20 + 0xE8]
	0x03BA1BBC CBZ X8, 0x3BA1BD8
	0x03BA1BC0 LDR X9, [X8 + 0x18]
	0x03BA1BC4 LDR X0, [X8 + 0x40]
	0x03BA1BC8 LDR X3, [X8 + 0x28]
	0x03BA1BCC MOV X1, X22
	0x03BA1BD0 MOV X2, X19
	0x03BA1BD4 BLR X9
	0x03BA1BD8 LDR X0, [X25]
	0x03BA1BDC LDR W8, [X0 + 0xE0]
	0x03BA1BE0 CBNZ W8, 0x3BA1BE8
	0x03BA1BE4 BL 0x1C16DFC
	0x03BA1BE8 ADRP X20, 0x840000
	0x03BA1BEC LDRB W8, [X20 + 0x38B]
	0x03BA1BF0 CBNZ W8, 0x3BA1C08
	0x03BA1BF4 ADRP X0, 0x57A000
	0x03BA1BF8 LDR X0, [X0 + 0x9F8]
	0x03BA1BFC BL 0x1C16CF4
	0x03BA1C00 MOVZ W8, 0x1
	0x03BA1C04 STRB W8, [X20 + 0x38B]
	0x03BA1C08 LDR X0, [X25]
	0x03BA1C0C LDR W8, [X0 + 0xE0]
	0x03BA1C10 CBNZ W8, 0x3BA1C1C
	0x03BA1C14 BL 0x1C16DFC
	0x03BA1C18 LDR X0, [X25]
	0x03BA1C1C ADRP X9, 0x5A8000
	0x03BA1C20 LDR X8, [X0 + 0xB8]
	0x03BA1C24 LDR X9, [X9 + 0x390]
	0x03BA1C28 MOV X0, X22
	0x03BA1C2C MOV X1, X19
	0x03BA1C30 LDR X2, [X8 + 0x48]
	0x03BA1C34 LDR X3, [X9]
	0x03BA1C38 BL 0x21DD088
	0x03BA1C3C STRB W31, [X19 + 0x145]
	0x03BA1C40 STR X31, [X19 + 0x40]
	0x03BA1C44 LDP X20, X19, [X31 + 0x40]
	0x03BA1C48 LDP X22, X21, [X31 + 0x30]
	0x03BA1C4C LDP X24, X23, [X31 + 0x20]
	0x03BA1C50 LDP X26, X25, [X31 + 0x10]
	0x03BA1C54 LDR X30, [X31 + 0x8]
	0x03BA1C58 LDR V8, [X31], #0x50
	0x03BA1C5C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x842000
	007 Move W8, [X19+3132]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x5A9000
	014 Move X0, [X0+1072]
	015 Call 0x1C17CF4
	016 Move X0, 0x57B000
	017 Move X0, [X0+2552]
	018 Call 0x1C17CF4
	019 Move X0, 0x553000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3132], W8
	024 Move X8, [X20+56]
	025 Compare X8, 0
	026 JumpIfEqual {107}
	027 Move X9, 0x553000
	028 Move X9, [X9+1432]
	029 Move X19, [X8+64]
	030 Move X0, [X9]
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {50}
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+48]
	049 Return X0
	050 Move X8, [X20]
	051 Move X0, X20
	052 Move X9, [X8+616]
	053 Move X1, [X8+624]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X20+256]
	056 Move X20, X0
	057 Compare X8, 0
	058 JumpIfEqual {65}
	059 Move X9, [X8+24]
	060 Move X0, [X8+64]
	061 Move X3, [X8+40]
	062 Move X1, X19
	063 Move X2, X20
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X21, 0x57B000
	066 Move X21, [X21+2552]
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X22, 0x841000
	073 Move W8, [X22+911]
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x57B000
	077 Move X0, [X0+2552]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X22+911], W8
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X21]
	087 Move X9, 0x5A9000
	088 Move X8, [X0+184]
	089 Move X9, [X9+1072]
	090 Move X0, X19
	091 Move X1, X20
	092 Move X2, [X8+96]
	093 Move X3, [X9]
	094 Call 0x21DE088, X0, X1, X2
	095 Compare X20, 0
	096 JumpIfEqual {107}
	097 Move X8, [X20]
	098 Move X0, X20
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X2, [X8+408]
	104 Move X1, [X8+416]
	105 Move X30, [X31+48]
	106 CallNoReturn X2
	107 Call 0x1C17F20

Method: System.Void ActivateModule()

Disassembly:
	0x03BA1C64 SUB X31, X31, 0xB0
	0x03BA1C68 STP X29, X30, [X31 + 0x50]
	0x03BA1C6C STP X28, X27, [X31 + 0x60]
	0x03BA1C70 STP X26, X25, [X31 + 0x70]
	0x03BA1C74 STP X24, X23, [X31 + 0x80]
	0x03BA1C78 STP X22, X21, [X31 + 0x90]
	0x03BA1C7C STP X20, X19, [X31 + 0xA0]
	0x03BA1C80 ADRP X21, 0x841000
	0x03BA1C84 LDRB W8, [X21 + 0xC41]
	0x03BA1C88 MOV X19, X1
	0x03BA1C8C MOV X20, X0
	0x03BA1C90 TBNZ X8, 0x0, 0x3BA1D44
	0x03BA1C94 ADRP X0, 0x558000
	0x03BA1C98 LDR X0, [X0 + 0xDD0]
	0x03BA1C9C BL 0x1C16CF4
	0x03BA1CA0 ADRP X0, 0x558000
	0x03BA1CA4 LDR X0, [X0 + 0xDD8]
	0x03BA1CA8 BL 0x1C16CF4
	0x03BA1CAC ADRP X0, 0x558000
	0x03BA1CB0 LDR X0, [X0 + 0xDE0]
	0x03BA1CB4 BL 0x1C16CF4
	0x03BA1CB8 ADRP X0, 0x5A8000
	0x03BA1CBC LDR X0, [X0 + 0x3F0]
	0x03BA1CC0 BL 0x1C16CF4
	0x03BA1CC4 ADRP X0, 0x5A8000
	0x03BA1CC8 LDR X0, [X0 + 0x3F8]
	0x03BA1CCC BL 0x1C16CF4
	0x03BA1CD0 ADRP X0, 0x5A8000
	0x03BA1CD4 LDR X0, [X0 + 0x400]
	0x03BA1CD8 BL 0x1C16CF4
	0x03BA1CDC ADRP X0, 0x57A000
	0x03BA1CE0 LDR X0, [X0 + 0x9F8]
	0x03BA1CE4 BL 0x1C16CF4
	0x03BA1CE8 ADRP X0, 0x558000
	0x03BA1CEC LDR X0, [X0 + 0x570]
	0x03BA1CF0 BL 0x1C16CF4
	0x03BA1CF4 ADRP X0, 0x5A8000
	0x03BA1CF8 LDR X0, [X0 + 0x408]
	0x03BA1CFC BL 0x1C16CF4
	0x03BA1D00 ADRP X0, 0x558000
	0x03BA1D04 LDR X0, [X0 + 0xDE8]
	0x03BA1D08 BL 0x1C16CF4
	0x03BA1D0C ADRP X0, 0x5A8000
	0x03BA1D10 LDR X0, [X0 + 0x410]
	0x03BA1D14 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x842000
	006 Move W8, [X20+3133]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x553000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3133], W8
	017 Move X0, X19
	018 Move X1, X31
	019 Call BaseInputModule.ActivateModule, X0
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfEqual {60}
	023 Move X9, 0x553000
	024 Move X9, [X9+1432]
	025 Move X20, [X8+64]
	026 Move X0, [X9]
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move X21, [X19+56]
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {43}
	040 Compare X21, 0
	041 JumpIfEqual {60}
	042 Move X20, [X21+48]
	043 Move X8, [X19]
	044 Move X0, X19
	045 Move X9, [X8+616]
	046 Move X1, [X8+624]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Compare X21, 0
	049 JumpIfEqual {60}
	050 Move X1, X20
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X2, X0
	054 Move X0, X21
	055 Move X3, X31
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call EventSystem.SetSelectedGameObject, X0, X1, X2
	059 Return 
	060 Call 0x1C17F20

Method: UnityEngine.GameObject GetCurrentGameObject(System.Int32 pointerId)

Disassembly:
	0x03BA1D18 ADRP X0, 0x558000
	0x03BA1D1C LDR X0, [X0 + 0xCA0]
	0x03BA1D20 BL 0x1C16CF4
	0x03BA1D24 ADRP X0, 0x558000
	0x03BA1D28 LDR X0, [X0 + 0xCA8]
	0x03BA1D2C BL 0x1C16CF4
	0x03BA1D30 ADRP X0, 0x552000
	0x03BA1D34 LDR X0, [X0 + 0x598]
	0x03BA1D38 BL 0x1C16CF4
	0x03BA1D3C MOVZ W8, 0x1
	0x03BA1D40 STRB W8, [X21 + 0xC41]
	0x03BA1D44 STP X31, X31, [X31 + 0x30]
	0x03BA1D48 STR X31, [X31 + 0x40]
	0x03BA1D4C CBZ X19, 0x3BA1E54
	0x03BA1D50 ADRP X21, 0x57A000
	0x03BA1D54 LDR X29, [X19 + 0x50]
	0x03BA1D58 LDR X21, [X21 + 0x9F8]
	0x03BA1D5C MOV X0, X19
	0x03BA1D60 MOV X1, X31
	0x03BA1D64 BL 0x3E4F244
	0x03BA1D68 STR W0, [X31 + 0x14]
	0x03BA1D6C TBZ X0, 0x0, 0x3BA1E58
	0x03BA1D70 LDR X0, [X19 + 0xF0]
	0x03BA1D74 CBZ X0, 0x3BA1E54
	0x03BA1D78 ADRP X23, 0x558000
	0x03BA1D7C ADRP X28, 0x5A8000
	0x03BA1D80 LDR X23, [X23 + 0xCA8]
	0x03BA1D84 LDR X28, [X28 + 0x400]
	0x03BA1D88 MOV W24, W31
	0x03BA1D8C MOV X22, X31
	0x03BA1D90 ADRP X26, 0x840000
	0x03BA1D94 MOVZ W27, 0x1
	0x03BA1D98 LDR W8, [X0 + 0x18]
	0x03BA1D9C CMP W24, W8
	0x03BA1DA0 B.GE 0x3BA1E58
	0x03BA1DA4 LDR X8, [X20 + 0xC8]
	0x03BA1DA8 CMP X8, 0x0
	0x03BA1DAC CSEL X22, X22, X8, EQ
	0x03BA1DB0 CBZ X8, 0x3BA1DE4
	0x03BA1DB4 LDR X2, [X23]
	0x03BA1DB8 MOV W1, W24
	0x03BA1DBC BL 0x301BCCC
	0x03BA1DC0 CBZ X22, 0x3BA1E54
	0x03BA1DC4 MOV X1, X0
	0x03BA1DC8 LDR X8, [X22 + 0x18]
	0x03BA1DCC LDR X0, [X22 + 0x40]
	0x03BA1DD0 LDR X3, [X22 + 0x28]
	0x03BA1DD4 MOV X2, X19
	0x03BA1DD8 BLR X8
	0x03BA1DDC LDR X0, [X19 + 0xF0]
	0x03BA1DE0 CBZ X0, 0x3BA1E54
	0x03BA1DE4 LDR X2, [X23]
	0x03BA1DE8 MOV W1, W24
	0x03BA1DEC BL 0x301BCCC
	0x03BA1DF0 LDR X8, [X21]
	0x03BA1DF4 MOV X25, X0
	0x03BA1DF8 LDR W9, [X8 + 0xE0]
	0x03BA1DFC CBNZ W9, 0x3BA1E08
	0x03BA1E00 MOV X0, X8
	0x03BA1E04 BL 0x1C16DFC
	0x03BA1E08 LDRB W8, [X26 + 0x383]
	0x03BA1E0C CBNZ W8, 0x3BA1E1C
	0x03BA1E10 MOV X0, X21
	0x03BA1E14 BL 0x1C16CF4
	0x03BA1E18 STRB W27, [X26 + 0x383]
	0x03BA1E1C LDR X0, [X21]
	0x03BA1E20 LDR W8, [X0 + 0xE0]
	0x03BA1E24 CBNZ W8, 0x3BA1E30
	0x03BA1E28 BL 0x1C16DFC
	0x03BA1E2C LDR X0, [X21]
	0x03BA1E30 LDR X8, [X0 + 0xB8]
	0x03BA1E34 LDR X3, [X28]
	0x03BA1E38 MOV X0, X25
	0x03BA1E3C MOV X1, X19
	0x03BA1E40 LDR X2, [X8]
	0x03BA1E44 BL 0x21DD088
	0x03BA1E48 LDR X0, [X19 + 0xF0]
	0x03BA1E4C ADD W24, W24, 0x1
	0x03BA1E50 CBNZ X0, 0x3BA1D98
	0x03BA1E54 BL 0x1C16F20
	0x03BA1E58 ADRP X27, 0x552000
	0x03BA1E5C LDR X27, [X27 + 0x598]
	0x03BA1E60 LDR X0, [X27]
	0x03BA1E64 LDR W8, [X0 + 0xE0]
	0x03BA1E68 CBNZ W8, 0x3BA1E70
	0x03BA1E6C BL 0x1C16DFC
	0x03BA1E70 ADRP X28, 0x5A8000
	0x03BA1E74 LDR X28, [X28 + 0x3F8]
	0x03BA1E78 MOV X0, X29
	0x03BA1E7C MOV X1, X31
	0x03BA1E80 MOV X2, X31
	0x03BA1E84 BL 0x3C3883C
	0x03BA1E88 TBNZ X0, 0x0, 0x3BA1EB4
	0x03BA1E8C LDR X0, [X27]
	0x03BA1E90 LDR X24, [X19 + 0x20]
	0x03BA1E94 LDR W8, [X0 + 0xE0]
	0x03BA1E98 CBNZ W8, 0x3BA1EA0
	0x03BA1E9C BL 0x1C16DFC
	0x03BA1EA0 MOV X0, X24
	0x03BA1EA4 MOV X1, X31
	0x03BA1EA8 MOV X2, X31
	0x03BA1EAC BL 0x3C3883C
	0x03BA1EB0 TBZ X0, 0x0, 0x3BA1FFC
	0x03BA1EB4 LDR X0, [X19 + 0xF0]
	0x03BA1EB8 CBZ X0, 0x3BA1E54
	0x03BA1EBC ADRP X8, 0x558000
	0x03BA1EC0 LDR X8, [X8 + 0xDE8]
	0x03BA1EC4 ADRP X23, 0x558000
	0x03BA1EC8 MOV X22, X29
	0x03BA1ECC LDR X1, [X8]
	0x03BA1ED0 LDR X23, [X23 + 0xDD8]
	0x03BA1ED4 ADD X8, X31, 0x18
	0x03BA1ED8 BL 0x301CB58
	0x03BA1EDC LDUR V0, [X31 + 0x18]
	0x03BA1EE0 LDR X8, [X31 + 0x28]
	0x03BA1EE4 MOV X25, X31
	0x03BA1EE8 ADRP X26, 0x840000
	0x03BA1EEC STR V0, [X31 + 0x3]
	0x03BA1EF0 STR X8, [X31 + 0x40]
	0x03BA1EF4 MOVZ W29, 0x1
	0x03BA1EF8 LDR X1, [X23]
	0x03BA1EFC ADD X0, X31, 0x30
	0x03BA1F00 BL 0x2BC4350
	0x03BA1F04 TBZ X0, 0x0, 0x3BA1F8C
	0x03BA1F08 LDR X8, [X20 + 0xA8]
	0x03BA1F0C LDR X24, [X31 + 0x40]
	0x03BA1F10 CMP X8, 0x0
	0x03BA1F14 CSEL X25, X25, X8, EQ
	0x03BA1F18 CBZ X8, 0x3BA1F38
	0x03BA1F1C CBZ X25, 0x3BA243C
	0x03BA1F20 LDR X0, [X25 + 0x40]
	0x03BA1F24 LDR X8, [X25 + 0x18]
	0x03BA1F28 LDR X3, [X25 + 0x28]
	0x03BA1F2C MOV X1, X24
	0x03BA1F30 MOV X2, X19
	0x03BA1F34 BLR X8
	0x03BA1F38 LDR X0, [X21]
	0x03BA1F3C LDR W8, [X0 + 0xE0]
	0x03BA1F40 CBNZ W8, 0x3BA1F48
	0x03BA1F44 BL 0x1C16DFC
	0x03BA1F48 LDRB W8, [X26 + 0x384]
	0x03BA1F4C CBNZ W8, 0x3BA1F5C
	0x03BA1F50 MOV X0, X21
	0x03BA1F54 BL 0x1C16CF4
	0x03BA1F58 STRB W29, [X26 + 0x384]
	0x03BA1F5C LDR X0, [X21]
	0x03BA1F60 LDR W8, [X0 + 0xE0]
	0x03BA1F64 CBNZ W8, 0x3BA1F70
	0x03BA1F68 BL 0x1C16DFC
	0x03BA1F6C LDR X0, [X21]
	0x03BA1F70 LDR X8, [X0 + 0xB8]
	0x03BA1F74 LDR X3, [X28]
	0x03BA1F78 LDR X2, [X8 + 0x10]
	0x03BA1F7C MOV X0, X24
	0x03BA1F80 MOV X1, X19
	0x03BA1F84 BL 0x21DD088
	0x03BA1F88 B 0x3BA1EF8
	0x03BA1F8C ADRP X8, 0x558000
	0x03BA1F90 LDR X8, [X8 + 0xDD0]
	0x03BA1F94 ADD X0, X31, 0x30
	0x03BA1F98 LDR X1, [X8]
	0x03BA1F9C BL 0x2BC434C
	0x03BA1FA0 LDR X8, [X19 + 0xF0]
	0x03BA1FA4 CBZ X8, 0x3BA1E54
	0x03BA1FA8 LDP W2, W9, [X8 + 0x18]
	0x03BA1FAC MOV X29, X22
	0x03BA1FB0 ADD W9, W9, 0x1
	0x03BA1FB4 CMP W2, 0x1
	0x03BA1FB8 STP W31, W9, [X8 + 0x18]
	0x03BA1FBC B.LT 0x3BA1FD0
	0x03BA1FC0 LDR X0, [X8 + 0x10]
	0x03BA1FC4 MOV W1, W31
	0x03BA1FC8 MOV X3, X31
	0x03BA1FCC BL 0x339FA34
	0x03BA1FD0 LDR X0, [X27]
	0x03BA1FD4 LDR W8, [X0 + 0xE0]
	0x03BA1FD8 CBNZ W8, 0x3BA1FE0
	0x03BA1FDC BL 0x1C16DFC
	0x03BA1FE0 MOV X0, X29
	0x03BA1FE4 MOV X1, X31
	0x03BA1FE8 MOV X2, X31
	0x03BA1FEC BL 0x3C3883C
	0x03BA1FF0 TBZ X0, 0x0, 0x3BA1FFC
	0x03BA1FF4 STR X31, [X19 + 0x20]
	0x03BA1FF8 B 0x3BA241C
	0x03BA1FFC LDR X0, [X27]
	0x03BA2000 LDR X24, [X19 + 0x20]
	0x03BA2004 LDR W8, [X0 + 0xE0]
	0x03BA2008 CBNZ W8, 0x3BA2010
	0x03BA200C BL 0x1C16DFC
	0x03BA2010 MOV X0, X24
	0x03BA2014 MOV X1, X29
	0x03BA2018 MOV X2, X31
	0x03BA201C BL 0x3C3883C
	0x03BA2020 TBNZ X0, 0x0, 0x3BA241C
	0x03BA2024 LDR X0, [X19 + 0x20]
	0x03BA2028 MOV X1, X29
	0x03BA202C MOV X2, X31
	0x03BA2030 STR X29, [X31 + 0x8]
	0x03BA2034 BL 0x3E543B0
	0x03BA2038 LDR X8, [X27]
	0x03BA203C LDR X25, [X19 + 0x20]
	0x03BA2040 MOV X24, X0
	0x03BA2044 LDR W9, [X8 + 0xE0]
	0x03BA2048 CBNZ W9, 0x3BA2054
	0x03BA204C MOV X0, X8
	0x03BA2050 BL 0x1C16DFC
	0x03BA2054 MOV X0, X25
	0x03BA2058 MOV X1, X31
	0x03BA205C MOV X2, X31
	0x03BA2060 BL 0x3C354F8
	0x03BA2064 TBZ X0, 0x0, 0x3BA21CC
	0x03BA2068 LDR X0, [X19 + 0x20]
	0x03BA206C CBZ X0, 0x3BA1E54
	0x03BA2070 MOV X1, X31
	0x03BA2074 BL 0x3C356F8
	0x03BA2078 ADRP X23, 0x5A7000
	0x03BA207C LDR X23, [X23 + 0x410]
	0x03BA2080 MOV X25, X0
	0x03BA2084 MOV X22, X31
	0x03BA2088 ADRP X29, 0x83F000
	0x03BA208C LDR X0, [X27]
	0x03BA2090 LDR W8, [X0 + 0xE0]
	0x03BA2094 CBNZ W8, 0x3BA209C
	0x03BA2098 BL 0x1C16DFC
	0x03BA209C MOV X0, X25
	0x03BA20A0 MOV X1, X31
	0x03BA20A4 MOV X2, X31
	0x03BA20A8 BL 0x3C354F8
	0x03BA20AC TBZ X0, 0x0, 0x3BA21CC
	0x03BA20B0 LDR X0, [X27]
	0x03BA20B4 LDR W8, [X0 + 0xE0]
	0x03BA20B8 CBNZ W8, 0x3BA20C0
	0x03BA20BC BL 0x1C16DFC
	0x03BA20C0 MOV X0, X24
	0x03BA20C4 MOV X1, X31
	0x03BA20C8 MOV X2, X31
	0x03BA20CC BL 0x3C354F8
	0x03BA20D0 TBZ X0, 0x0, 0x3BA2110
	0x03BA20D4 CBZ X24, 0x3BA1E54
	0x03BA20D8 MOV X0, X24
	0x03BA20DC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X21, 0x842000
	010 Move W8, [X21+3134]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {58}
	017 Move X0, 0x5BC000
	018 Move X0, [X0+2936]
	019 Call 0x1C17CF4
	020 Move X0, 0x5BC000
	021 Move X0, [X0+2944]
	022 Call 0x1C17CF4
	023 Move X0, 0x5BC000
	024 Move X0, [X0+2952]
	025 Call 0x1C17CF4
	026 Move X0, 0x5BC000
	027 Move X0, [X0+2960]
	028 Call 0x1C17CF4
	029 Move X0, 0x5BC000
	030 Move X0, [X0+2968]
	031 Call 0x1C17CF4
	032 Move X0, 0x5BC000
	033 Move X0, [X0+2976]
	034 Call 0x1C17CF4
	035 Move X0, 0x5BC000
	036 Move X0, [X0+2984]
	037 Call 0x1C17CF4
	038 Move X0, 0x5BC000
	039 Move X0, [X0+2992]
	040 Call 0x1C17CF4
	041 Move X0, 0x5BC000
	042 Move X0, [X0+3000]
	043 Call 0x1C17CF4
	044 Move X0, 0x5BC000
	045 Move X0, [X0+3008]
	046 Call 0x1C17CF4
	047 Move X0, 0x553000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move X0, 0x5BC000
	051 Move X0, [X0+3016]
	052 Call 0x1C17CF4
	053 Move X0, 0x5BC000
	054 Move X0, [X0+3024]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+3134], W8
	058 Move [X31+64], X31
	059 Move [X31+72], X31
	060 Move [X31+80], X31
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+48], X31
	064 Move [X31+104], X31
	065 Move [X31+24], X31
	066 Move TEMP, X19
	067 And TEMP, TEMP, -2147483648
	068 Compare TEMP, -2147483648
	069 JumpIfEqual {86}
	070 Move X0, [X20+144]
	071 Compare X0, 0
	072 JumpIfEqual {224}
	073 Move X8, 0x5BC000
	074 Move X8, [X8+2936]
	075 Add X2, X31, 104
	076 Move W1, W19
	077 Move X3, [X8]
	078 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {136}
	083 Move X8, [X31+104]
	084 Compare X8, 0
	085 JumpIfNotEqual {152}
	086 Move X0, [X20+144]
	087 Compare X0, 0
	088 JumpIfEqual {224}
	089 Move X8, 0x5BC000
	090 Move X8, [X8+2960]
	091 Move X1, [X8]
	092 Call Dictionary`2<Int32, Object>.get_Values, X0
	093 Compare X0, 0
	094 JumpIfEqual {224}
	095 Move X8, 0x5BC000
	096 Move X8, [X8+3024]
	097 Move X1, [X8]
	098 Add X8, X31, 0
	099 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	100 Move V0, [X31]
	101 Move X8, [X31+16]
	102 Move X22, 0x5BC000
	103 Move X22, [X22+2984]
	104 Move [X31+4], V0
	105 Move [X31+80], X8
	106 Move X23, 0x553000
	107 Move X23, [X23+1432]
	108 Move X1, [X22]
	109 Add X0, X31, 64
	110 Call Enumerator<Int32, Object>.MoveNext, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {153}
	115 Move X24, [X31+80]
	116 Compare X24, 0
	117 JumpIfEqual {108}
	118 Move X0, [X23]
	119 Move X21, [X24+32]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X21
	125 Move X1, X31
	126 Move X2, X31
	127 Call Object.op_Inequality, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {108}
	132 Move X8, 0x5BC000
	133 Move X19, [X24+32]
	134 Move X8, [X8+2968]
	135 Add X0, X31, 64
	136 Move X0, [X20+136]
	137 Compare X0, 0
	138 JumpIfEqual {224}
	139 Move X8, 0x5BC000
	140 Move X8, [X8+2944]
	141 Add X2, X31, 24
	142 Move W1, W19
	143 Move X3, [X8]
	144 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {213}
	149 Move X8, [X31+24]
	150 Compare X8, 0
	151 JumpIfEqual {213}
	152 Move X19, [X8+32]
	153 Move X8, 0x5BC000
	154 Move X8, [X8+2968]
	155 Add X0, X31, 64
	156 Move X1, [X8]
	157 Call Enumerator<Int32, Object>.Dispose, X0
	158 Move X0, [X20+136]
	159 Compare X0, 0
	160 JumpIfEqual {224}
	161 Move X8, 0x5BC000
	162 Move X8, [X8+2952]
	163 Move X1, [X8]
	164 Call Dictionary`2<Int32, Object>.get_Values, X0
	165 Compare X0, 0
	166 JumpIfEqual {224}
	167 Move X8, 0x5BC000
	168 Move X8, [X8+3016]
	169 Move X1, [X8]
	170 Add X8, X31, 0
	171 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	172 Move V0, [X31]
	173 Move X8, [X31+16]
	174 Move X22, 0x5BC000
	175 Move [X31+2], V0
	176 Move [X31+48], X8
	177 Move X22, [X22+2992]
	178 Move X1, [X22]
	179 Add X0, X31, 32
	180 Call Enumerator<Int32, Object>.MoveNext, X0
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {208}
	185 Move X24, [X31+48]
	186 Compare X24, 0
	187 JumpIfEqual {178}
	188 Move X0, [X23]
	189 Move X21, [X24+32]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X0, X21
	195 Move X1, X31
	196 Move X2, X31
	197 Call Object.op_Inequality, X0, X1
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {178}
	202 Move X8, 0x5BC000
	203 Move X19, [X24+32]
	204 Move X8, [X8+2976]
	205 Add X0, X31, 32
	206 Move X1, [X8]
	207 Call Enumerator<Int32, Object>.Dispose, X0
	208 Move X8, 0x5BC000
	209 Move X8, [X8+2976]
	210 Add X0, X31, 32
	211 Move X1, [X8]
	212 Call Enumerator<Int32, Object>.Dispose, X0
	213 Move X19, X31
	214 Move X0, X19
	215 Move X20, [X31+144]
	216 Move X19, [X31+152]
	217 Move X22, [X31+128]
	218 Move X21, [X31+136]
	219 Move X24, [X31+112]
	220 Move X23, [X31+120]
	221 Move X30, [X31+96]
	222 Add X31, X31, 160
	223 Return X0
	224 Call 0x1C17F20
	225 Move X21, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, X21
	228 Call 0x3EB2AD0
	229 Move X22, [X0]
	230 Call 0x3EB2AE0
	231 Move X8, 0x5BB000
	232 Move X8, [X8+2976]
	233 Add X0, X31, 32
	234 Move X1, [X8]
	235 Call Enumerator<Int32, Object>.Dispose, X0
	236 Compare X22, 0
	237 JumpIfEqual {70}
	238 Move X22, X31
	239 Move X21, X0
	240 Move X8, 0x5BB000
	241 Move X8, [X8+2976]
	242 Move X1, [X8]
	243 Add X0, X31, 32
	244 Call Enumerator<Int32, Object>.Dispose, X0
	245 Compare X22, 0
	246 JumpIfEqual {273}
	247 Move X0, X22
	248 Call 0x1C17F18
	249 Move X21, X0
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, X21
	252 Call 0x3EB2AD0
	253 Move X22, [X0]
	254 Call 0x3EB2AE0
	255 Move X8, 0x5BB000
	256 Move X8, [X8+2968]
	257 Add X0, X31, 64
	258 Move X1, [X8]
	259 Call Enumerator<Int32, Object>.Dispose, X0
	260 Compare X22, 0
	261 JumpIfEqual {158}
	262 Move X0, X22
	263 Call 0x1C17F18
	264 Move X22, X31
	265 Move X21, X0
	266 Move X8, 0x5BB000
	267 Move X8, [X8+2968]
	268 Move X1, [X8]
	269 Add X0, X31, 64
	270 Call Enumerator<Int32, Object>.Dispose, X0
	271 Compare X22, 0
	272 JumpIfNotEqual {275}
	273 Move X0, X21
	274 Call 0x1D2D690
	275 Move X0, X22
	276 Call 0x1C17F18
	277 Call 0x1991590

Method: System.Boolean IsPointerOverGameObject(System.Int32 pointerId)

Disassembly:
	0x03BA20E0 BL 0x3C356F8
	0x03BA20E4 LDR X8, [X27]
	0x03BA20E8 MOV X26, X0
	0x03BA20EC LDR W9, [X8 + 0xE0]
	0x03BA20F0 CBNZ W9, 0x3BA20FC
	0x03BA20F4 MOV X0, X8
	0x03BA20F8 BL 0x1C16DFC
	0x03BA20FC MOV X0, X26
	0x03BA2100 MOV X1, X25
	0x03BA2104 MOV X2, X31
	0x03BA2108 BL 0x3C3883C
	0x03BA210C TBNZ X0, 0x0, 0x3BA21CC
	0x03BA2110 CBZ X25, 0x3BA1E54
	0x03BA2114 MOV X0, X25
	0x03BA2118 MOV X1, X31
	0x03BA211C BL 0x3C32ECC
	0x03BA2120 LDR X8, [X20 + 0xA8]
	0x03BA2124 MOV X26, X0
	0x03BA2128 CMP X8, 0x0
	0x03BA212C CSEL X22, X22, X8, EQ
	0x03BA2130 CBZ X8, 0x3BA2150
	0x03BA2134 CBZ X22, 0x3BA1E54
	0x03BA2138 LDR X8, [X22 + 0x18]
	0x03BA213C LDR X0, [X22 + 0x40]
	0x03BA2140 LDR X3, [X22 + 0x28]
	0x03BA2144 MOV X1, X26
	0x03BA2148 MOV X2, X19
	0x03BA214C BLR X8
	0x03BA2150 LDR X0, [X21]
	0x03BA2154 LDR W8, [X0 + 0xE0]
	0x03BA2158 CBNZ W8, 0x3BA2160

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x841000
	007 Move X21, 0x552000
	008 Move W8, [X22+3135]
	009 Move X21, [X21+1432]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x552000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3135], W8
	021 Move X0, X20
	022 Move W1, W19
	023 Call UIInputModule.GetCurrentGameObject, X0, X1
	024 Move X8, [X21]
	025 Move X19, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X2, X31
	038 Move X30, [X31+48]
	039 Call Object.op_Inequality, X0, X1
	040 Return X0

Method: UnityEngine.EventSystems.RaycastResult PerformRaycast(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03BA215C BL 0x1C16DFC
	0x03BA2160 LDRB W8, [X29 + 0x384]
	0x03BA2164 CBNZ W8, 0x3BA2178
	0x03BA2168 MOV X0, X21
	0x03BA216C BL 0x1C16CF4
	0x03BA2170 MOVZ W8, 0x1
	0x03BA2174 STRB W8, [X29 + 0x384]
	0x03BA2178 LDR X0, [X21]
	0x03BA217C LDR W8, [X0 + 0xE0]
	0x03BA2180 CBNZ W8, 0x3BA218C
	0x03BA2184 BL 0x1C16DFC
	0x03BA2188 LDR X0, [X21]
	0x03BA218C LDR X8, [X0 + 0xB8]
	0x03BA2190 LDR X3, [X28]
	0x03BA2194 MOV X0, X26
	0x03BA2198 MOV X1, X19
	0x03BA219C LDR X2, [X8 + 0x10]
	0x03BA21A0 BL 0x21DD088
	0x03BA21A4 LDR X0, [X19 + 0xF0]
	0x03BA21A8 CBZ X0, 0x3BA1E54
	0x03BA21AC LDR X2, [X23]
	0x03BA21B0 MOV X1, X26
	0x03BA21B4 BL 0x301D7A8
	0x03BA21B8 MOV X0, X25
	0x03BA21BC MOV X1, X31
	0x03BA21C0 BL 0x3C3F49C
	0x03BA21C4 MOV X25, X0
	0x03BA21C8 B 0x3BA208C
	0x03BA21CC LDR X22, [X31 + 0x8]
	0x03BA21D0 STR X22, [X19 + 0x20]
	0x03BA21D4 LDR X0, [X27]
	0x03BA21D8 LDR W8, [X0 + 0xE0]
	0x03BA21DC CBNZ W8, 0x3BA21E4
	0x03BA21E0 BL 0x1C16DFC
	0x03BA21E4 MOV X0, X22
	0x03BA21E8 MOV X1, X31
	0x03BA21EC MOV X2, X31
	0x03BA21F0 BL 0x3C354F8
	0x03BA21F4 TBZ X0, 0x0, 0x3BA241C
	0x03BA21F8 CBZ X22, 0x3BA1E54
	0x03BA21FC MOV X0, X22
	0x03BA2200 MOV X1, X31
	0x03BA2204 BL 0x3C356F8
	0x03BA2208 ADRP X22, 0x557000
	0x03BA220C LDR X22, [X22 + 0x570]
	0x03BA2210 MOV X23, X0
	0x03BA2214 MOV X26, X31
	0x03BA2218 MOV X28, X31
	0x03BA221C ADRP X29, 0x83F000
	0x03BA2220 LDR X0, [X27]
	0x03BA2224 LDR W8, [X0 + 0xE0]
	0x03BA2228 CBNZ W8, 0x3BA2230
	0x03BA222C BL 0x1C16DFC
	0x03BA2230 MOV X0, X23
	0x03BA2234 MOV X1, X31
	0x03BA2238 MOV X2, X31
	0x03BA223C BL 0x3C354F8
	0x03BA2240 TBZ X0, 0x0, 0x3BA241C
	0x03BA2244 CBZ X23, 0x3BA1E54
	0x03BA2248 MOV X0, X23
	0x03BA224C MOV X1, X31
	0x03BA2250 BL 0x3C32ECC
	0x03BA2254 LDR X8, [X27]
	0x03BA2258 MOV X25, X0
	0x03BA225C LDR W9, [X8 + 0xE0]
	0x03BA2260 CBNZ W9, 0x3BA226C
	0x03BA2264 MOV X0, X8
	0x03BA2268 BL 0x1C16DFC
	0x03BA226C MOV X0, X25
	0x03BA2270 MOV X1, X24
	0x03BA2274 MOV X2, X31
	0x03BA2278 BL 0x3C354F8
	0x03BA227C TBZ X0, 0x0, 0x3BA241C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0x841000
	008 Move W9, [X22+3136]
	009 Move X21, X1
	010 Move X19, X0
	011 Move X20, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5A8000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3136], W8
	021 Compare X21, 0
	022 JumpIfEqual {68}
	023 Move X0, [X19+56]
	024 Compare X0, 0
	025 JumpIfEqual {67}
	026 Move X2, [X19+32]
	027 Move X1, X21
	028 Move X3, X31
	029 Call EventSystem.RaycastAll, X0, X1, X2
	030 Move X8, [X19+152]
	031 Compare X8, 0
	032 JumpIfEqual {39}
	033 Move X2, [X19+32]
	034 Move X9, [X8+24]
	035 Move X0, [X8+64]
	036 Move X3, [X8+40]
	037 Move X1, X21
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, [X19+32]
	040 Add X8, X31, 0
	041 Move X1, X31
	042 Call BaseInputModule.FindFirstRaycast, X0
	043 Add X1, X31, 0
	044 Move W2, 80
	045 Move X0, X20
	046 Call 0x3EB2AC0
	047 Move X8, [X19+32]
	048 Compare X8, 0
	049 JumpIfEqual {67}
	050 Move W2, [X8+24]
	051 Move W9, [X8+28]
	052 Add W9, W9, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X8+24], W31
	055 Move [X8+28], W9
	056 Move X0, [X8+16]
	057 Move W1, W31
	058 Move X3, X31
	059 Call Array.Clear, X0, X1, X2
	060 Move X20, [X31+112]
	061 Move X19, [X31+120]
	062 Move X22, [X31+96]
	063 Move X21, [X31+104]
	064 Move X30, [X31+80]
	065 Add X31, X31, 128
	066 Return X0
	067 Call 0x1C17F20
	068 Move X0, 0x557000
	069 Move X0, [X0+1320]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0x5A8000
	074 Move X0, [X0+840]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call ArgumentNullException..ctor, X0, X1
	080 Move X0, 0x5BB000
	081 Move X0, [X0+3032]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC

Method: System.Void ProcessMouseState(ref UnityEngine.XR.Interaction.Toolkit.UI.MouseModel mouseState)

Disassembly:
	0x03BA2280 MOV X0, X23
	0x03BA2284 MOV X1, X31
	0x03BA2288 BL 0x3C32ECC
	0x03BA228C LDR X8, [X20 + 0xA0]
	0x03BA2290 MOV X25, X0
	0x03BA2294 CMP X8, 0x0
	0x03BA2298 CSEL X28, X28, X8, EQ
	0x03BA229C CBZ X8, 0x3BA22BC
	0x03BA22A0 CBZ X28, 0x3BA1E54
	0x03BA22A4 LDR X8, [X28 + 0x18]
	0x03BA22A8 LDR X0, [X28 + 0x40]
	0x03BA22AC LDR X3, [X28 + 0x28]
	0x03BA22B0 MOV X1, X25
	0x03BA22B4 MOV X2, X19
	0x03BA22B8 BLR X8
	0x03BA22BC LDR X0, [X21]
	0x03BA22C0 LDR W8, [X0 + 0xE0]
	0x03BA22C4 CBNZ W8, 0x3BA22CC
	0x03BA22C8 BL 0x1C16DFC
	0x03BA22CC LDRB W8, [X29 + 0x385]
	0x03BA22D0 CBNZ W8, 0x3BA22E4
	0x03BA22D4 MOV X0, X21
	0x03BA22D8 BL 0x1C16CF4
	0x03BA22DC MOVZ W8, 0x1
	0x03BA22E0 STRB W8, [X29 + 0x385]
	0x03BA22E4 LDR X0, [X21]
	0x03BA22E8 LDR W8, [X0 + 0xE0]
	0x03BA22EC CBNZ W8, 0x3BA22F8
	0x03BA22F0 BL 0x1C16DFC
	0x03BA22F4 LDR X0, [X21]
	0x03BA22F8 LDR X8, [X0 + 0xB8]
	0x03BA22FC MOV X0, X25
	0x03BA2300 MOV X1, X19
	0x03BA2304 LDR X2, [X8 + 0x8]
	0x03BA2308 ADRP X8, 0x5A7000
	0x03BA230C LDR X8, [X8 + 0x3F0]
	0x03BA2310 LDR X3, [X8]
	0x03BA2314 BL 0x21DD088
	0x03BA2318 LDR W8, [X31 + 0x14]
	0x03BA231C TBZ X8, 0x0, 0x3BA23B0
	0x03BA2320 LDR X8, [X20 + 0xC8]
	0x03BA2324 CMP X8, 0x0
	0x03BA2328 CSEL X26, X26, X8, EQ
	0x03BA232C CBZ X8, 0x3BA234C
	0x03BA2330 CBZ X26, 0x3BA1E54
	0x03BA2334 LDR X8, [X26 + 0x18]
	0x03BA2338 LDR X0, [X26 + 0x40]
	0x03BA233C LDR X3, [X26 + 0x28]
	0x03BA2340 MOV X1, X25
	0x03BA2344 MOV X2, X19
	0x03BA2348 BLR X8
	0x03BA234C LDR X0, [X21]
	0x03BA2350 LDR W8, [X0 + 0xE0]
	0x03BA2354 CBNZ W8, 0x3BA235C
	0x03BA2358 BL 0x1C16DFC
	0x03BA235C ADRP X8, 0x83F000
	0x03BA2360 LDRB W8, [X8 + 0x383]
	0x03BA2364 CBNZ W8, 0x3BA237C
	0x03BA2368 MOV X0, X21
	0x03BA236C BL 0x1C16CF4
	0x03BA2370 MOVZ W8, 0x1
	0x03BA2374 ADRP X9, 0x83F000
	0x03BA2378 STRB W8, [X9 + 0x383]
	0x03BA237C LDR X0, [X21]
	0x03BA2380 LDR W8, [X0 + 0xE0]
	0x03BA2384 CBNZ W8, 0x3BA2390
	0x03BA2388 BL 0x1C16DFC
	0x03BA238C LDR X0, [X21]
	0x03BA2390 LDR X8, [X0 + 0xB8]
	0x03BA2394 MOV X0, X25
	0x03BA2398 MOV X1, X19
	0x03BA239C LDR X2, [X8]
	0x03BA23A0 ADRP X8, 0x5A7000
	0x03BA23A4 LDR X8, [X8 + 0x400]
	0x03BA23A8 LDR X3, [X8]
	0x03BA23AC BL 0x21DD088
	0x03BA23B0 LDR X0, [X19 + 0xF0]
	0x03BA23B4 CBZ X0, 0x3BA1E54
	0x03BA23B8 LDR W10, [X0 + 0x1C]
	0x03BA23BC LDR X8, [X0 + 0x10]
	0x03BA23C0 LDR X9, [X22]
	0x03BA23C4 ADD W10, W10, 0x1
	0x03BA23C8 STR W10, [X0 + 0x1C]
	0x03BA23CC CBZ X8, 0x3BA1E54
	0x03BA23D0 LDRSW X10, [X0 + 0x18]
	0x03BA23D4 LDR W11, [X8 + 0x18]
	0x03BA23D8 CMP W10, W11
	0x03BA23DC B.CS 0x3BA23F4
	0x03BA23E0 ADD W9, W10, 0x1
	0x03BA23E4 ADD X8, X8, X10, 0x3, LSL
	0x03BA23E8 STR W9, [X0 + 0x18]
	0x03BA23EC STR X25, [X8 + 0x20]
	0x03BA23F0 B 0x3BA2408
	0x03BA23F4 LDR X8, [X9 + 0x20]
	0x03BA23F8 MOV X1, X25
	0x03BA23FC LDR X8, [X8 + 0xC0]
	0x03BA2400 LDR X2, [X8 + 0x70]
	0x03BA2404 BL 0x301BF90
	0x03BA2408 MOV X0, X23
	0x03BA240C MOV X1, X31
	0x03BA2410 BL 0x3C3F49C
	0x03BA2414 MOV X23, X0
	0x03BA2418 B 0x3BA2220
	0x03BA241C LDP X20, X19, [X31 + 0xA0]
	0x03BA2420 LDP X22, X21, [X31 + 0x90]
	0x03BA2424 LDP X24, X23, [X31 + 0x80]
	0x03BA2428 LDP X26, X25, [X31 + 0x70]
	0x03BA242C LDP X28, X27, [X31 + 0x60]
	0x03BA2430 LDP X29, X30, [X31 + 0x50]
	0x03BA2434 ADD X31, X31, 0xB0
	0x03BA2438 RET
	0x03BA243C BL 0x1C16F20
	0x03BA2440 B 0x3BA2454
	0x03BA2444 B 0x3BA2454
	0x03BA2448 B 0x3BA2454
	0x03BA244C B 0x3BA2454
	0x03BA2450 B 0x3BA2454
	0x03BA2454 MOV X24, X0
	0x03BA2458 CMP W1, 0x1
	0x03BA245C B.NE 0x3BA2490
	0x03BA2460 MOV X0, X24
	0x03BA2464 BL 0x3EB1AD0
	0x03BA2468 LDR X25, [X0]
	0x03BA246C BL 0x3EB1AE0
	0x03BA2470 ADRP X8, 0x557000
	0x03BA2474 LDR X8, [X8 + 0xDD0]
	0x03BA2478 ADD X0, X31, 0x30
	0x03BA247C LDR X1, [X8]
	0x03BA2480 BL 0x2BC434C
	0x03BA2484 CBZ X25, 0x3BA1FA0
	0x03BA2488 MOV X0, X25
	0x03BA248C BL 0x1C16F18
	0x03BA2490 MOV X25, X31
	0x03BA2494 B 0x3BA249C
	0x03BA2498 MOV X24, X0
	0x03BA249C ADRP X8, 0x557000
	0x03BA24A0 LDR X8, [X8 + 0xDD0]
	0x03BA24A4 LDR X1, [X8]
	0x03BA24A8 ADD X0, X31, 0x30
	0x03BA24AC BL 0x2BC434C
	0x03BA24B0 CBNZ X25, 0x3BA24BC
	0x03BA24B4 MOV X0, X24
	0x03BA24B8 BL 0x1D2C690

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 592
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move [X31+560], V0
	010 Move [X31+568], V0
	011 Move [X31+528], V0
	012 Move [X31+536], V0
	013 Move [X31+496], V0
	014 Move [X31+504], V0
	015 Move [X31+464], V0
	016 Move [X31+472], V0
	017 Move W8, [X1+4]
	018 Compare W8, 0
	019 JumpIfEqual {148}
	020 Move X19, X1
	021 Move W1, [X1]
	022 Move X20, X0
	023 Call UIInputModule.GetOrCreateCachedPointerEvent, X0, X1
	024 Compare X0, 0
	025 JumpIfEqual {156}
	026 Move X8, [X0]
	027 Move X21, X0
	028 Move X9, [X8+376]
	029 Move X1, [X8+384]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, X19
	032 Move X1, X21
	033 Move X2, X31
	034 Call MouseModel.CopyTo, X0, X1
	035 Add X8, X31, 384
	036 Move X0, X20
	037 Move X1, X21
	038 Call UIInputModule.PerformRaycast, X0, X1
	039 Add X0, X21, 80
	040 Add X1, X31, 384
	041 Move W2, 80
	042 Call 0x3EB2AC0
	043 Add X1, X19, 40
	044 Add X0, X31, 464
	045 Move W2, 128
	046 Call 0x3EB2AC0
	047 Add X0, X31, 464
	048 Move X1, X21
	049 Move X2, X31
	050 Move [X21+328], W31
	051 Call MouseButtonModel.CopyTo, X0, X1
	052 Move W1, [X31+464]
	053 Move X0, X20
	054 Move X2, X21
	055 Call UIInputModule.ProcessPointerButton, X0, X1, X2
	056 Move X0, X20
	057 Move X1, X21
	058 Call UIInputModule.ProcessPointerMovement, X0, X1
	059 Move X0, X20
	060 Move X1, X21
	061 Call UIInputModule.ProcessScrollWheel, X0, X1
	062 Move X0, X19
	063 Move X1, X21
	064 Move X2, X31
	065 Call MouseModel.CopyFrom, X0, X1
	066 Move S0, 1
	067 Move W2, 1
	068 Move X0, X20
	069 Move X1, X21
	070 Move W22, 1
	071 Call UIInputModule.ProcessPointerButtonDrag, X0, X1, X2, V0
	072 Add X0, X31, 464
	073 Move X1, X21
	074 Move X2, X31
	075 Call MouseButtonModel.CopyFrom, X0, X1
	076 Add X0, X31, 256
	077 Add X1, X31, 464
	078 Move W2, 128
	079 Call 0x3EB2AC0
	080 Add X1, X31, 256
	081 Move X0, X19
	082 Move X2, X31
	083 Call MouseModel.set_leftButton, X0, X1
	084 Add X1, X19, 168
	085 Add X0, X31, 464
	086 Move W2, 128
	087 Call 0x3EB2AC0
	088 Add X0, X31, 464
	089 Move X1, X21
	090 Move X2, X31
	091 Move [X21+328], W22
	092 Call MouseButtonModel.CopyTo, X0, X1
	093 Move W1, [X31+464]
	094 Move X0, X20
	095 Move X2, X21
	096 Call UIInputModule.ProcessPointerButton, X0, X1, X2
	097 Move S0, 1
	098 Move W2, 1
	099 Move X0, X20
	100 Move X1, X21
	101 Call UIInputModule.ProcessPointerButtonDrag, X0, X1, X2, V0
	102 Add X0, X31, 464
	103 Move X1, X21
	104 Move X2, X31
	105 Call MouseButtonModel.CopyFrom, X0, X1
	106 Add X0, X31, 128
	107 Add X1, X31, 464
	108 Move W2, 128
	109 Call 0x3EB2AC0
	110 Add X1, X31, 128
	111 Move X0, X19
	112 Move X2, X31
	113 Call MouseModel.set_rightButton, X0, X1
	114 Add X1, X19, 296
	115 Add X0, X31, 464
	116 Move W2, 128
	117 Call 0x3EB2AC0
	118 Move W8, 2
	119 Add X0, X31, 464
	120 Move X1, X21
	121 Move X2, X31
	122 Move [X21+328], W8
	123 Call MouseButtonModel.CopyTo, X0, X1
	124 Move W1, [X31+464]
	125 Move X0, X20
	126 Move X2, X21
	127 Call UIInputModule.ProcessPointerButton, X0, X1, X2
	128 Move S0, 1
	129 Move W2, 1
	130 Move X0, X20
	131 Move X1, X21
	132 Call UIInputModule.ProcessPointerButtonDrag, X0, X1, X2, V0
	133 Add X0, X31, 464
	134 Move X1, X21
	135 Move X2, X31
	136 Call MouseButtonModel.CopyFrom, X0, X1
	137 Add X0, X31, 0
	138 Add X1, X31, 464
	139 Move W2, 128
	140 Call 0x3EB2AC0
	141 Add X1, X31, 0
	142 Move X0, X19
	143 Move X2, X31
	144 Call MouseModel.set_middleButton, X0, X1
	145 Move X0, X19
	146 Move X1, X31
	147 Call MouseModel.OnFrameFinished, X0
	148 Add X31, X31, 592
	149 Move X20, [X31+32]
	150 Move X19, [X31+40]
	151 Move X22, [X31+16]
	152 Move X21, [X31+24]
	153 Move X29, [X31+48]
	154 Move X30, [X31+56]
	155 Return 
	156 Call 0x1C17F20

Method: System.Void ProcessPointerMovement(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03BA2C64 TBZ X8, 0x0, 0x3BA2D04
	0x03BA2C68 LDUR V0, [X21 + 0x7C]
	0x03BA2C6C LDR V1, [X21 + 0x84]
	0x03BA2C70 STR D0, [X21 + 0x190]
	0x03BA2C74 STR S1, [X21 + 0x198]
	0x03BA2C78 B 0x3BA2D04
	0x03BA2C7C LDR X0, [X21 + 0x180]
	0x03BA2C80 CBZ X0, 0x3BA2F50
	0x03BA2C84 LDR W8, [X0 + 0x18]
	0x03BA2C88 CMP W8, 0x0
	0x03BA2C8C B.LE 0x3BA2CA8
	0x03BA2C90 ADRP X9, 0x555000
	0x03BA2C94 LDR X9, [X9 + 0x980]
	0x03BA2C98 SUB W1, W8, 0x1
	0x03BA2C9C LDR X2, [X9]
	0x03BA2CA0 BL 0x30CBE84
	0x03BA2CA4 B 0x3BA2CE0
	0x03BA2CA8 ADRP X22, 0x836000
	0x03BA2CAC LDRB W8, [X22 + 0x783]
	0x03BA2CB0 CBNZ W8, 0x3BA2CC8
	0x03BA2CB4 ADRP X0, 0x551000
	0x03BA2CB8 LDR X0, [X0 + 0x5A0]
	0x03BA2CBC BL 0x1C16CF4
	0x03BA2CC0 MOVZ W8, 0x1
	0x03BA2CC4 STRB W8, [X22 + 0x783]
	0x03BA2CC8 ADRP X8, 0x551000
	0x03BA2CCC LDR X8, [X8 + 0x5A0]
	0x03BA2CD0 LDR X8, [X8]
	0x03BA2CD4 LDR X8, [X8 + 0xB8]
	0x03BA2CD8 LDP S0, S1, [X8]
	0x03BA2CDC LDR V2, [X8 + 0x8]
	0x03BA2CE0 LDR X22, [X31 + 0xB8]
	0x03BA2CE4 CBZ X22, 0x3BA2F50
	0x03BA2CE8 MOV X0, X22
	0x03BA2CEC MOV X1, X31
	0x03BA2CF0 BL 0x3C045DC
	0x03BA2CF4 MOV V8.16B, V0.16B
	0x03BA2CF8 MOV V9.16B, V1.16B
	0x03BA2CFC STR S0, [X21 + 0x104]
	0x03BA2D00 STR S1, [X21 + 0x108]
	0x03BA2D04 LDR V0, [X21 + 0x104]
	0x03BA2D08 LDR V1, [X21 + 0x108]
	0x03BA2D0C STR S8, [X21 + 0x104]
	0x03BA2D10 STR S9, [X21 + 0x108]
	0x03BA2D14 FSUB S0, S8, S0
	0x03BA2D18 FSUB S1, S9, S1
	0x03BA2D1C STR S0, [X21 + 0x10C]
	0x03BA2D20 STR S1, [X21 + 0x110]
	0x03BA2D24 LDR X0, [X23]
	0x03BA2D28 LDR W8, [X0 + 0xE0]
	0x03BA2D2C CBNZ W8, 0x3BA2D34
	0x03BA2D30 BL 0x1C16DFC
	0x03BA2D34 LDR W1, [X19 + 0xA8]
	0x03BA2D38 MOV X0, X20
	0x03BA2D3C MOV X2, X21
	0x03BA2D40 BL 0x3BA1590
	0x03BA2D44 MOV X0, X20
	0x03BA2D48 MOV X1, X21
	0x03BA2D4C BL 0x3BA1C64
	0x03BA2D50 MOV X0, X20
	0x03BA2D54 MOV X1, X21
	0x03BA2D58 BL 0x3BA24C8
	0x03BA2D5C ADRP X25, 0x837000
	0x03BA2D60 LDRB W8, [X25 + 0x78F]
	0x03BA2D64 LDR V8, [X24 + 0x10]
	0x03BA2D68 CBNZ W8, 0x3BA2D80
	0x03BA2D6C ADRP X0, 0x559000
	0x03BA2D70 LDR X0, [X0 + 0xF08]
	0x03BA2D74 BL 0x1C16CF4
	0x03BA2D78 MOVZ W8, 0x1
	0x03BA2D7C STRB W8, [X25 + 0x78F]
	0x03BA2D80 ADRP X8, 0x559000
	0x03BA2D84 LDR X8, [X8 + 0xF08]
	0x03BA2D88 LDR X8, [X8]
	0x03BA2D8C LDR X8, [X8 + 0xB8]
	0x03BA2D90 LDR V0, [X8]
	0x03BA2D94 ADRP X8, 0xFFFFFFFFFCF47000
	0x03BA2D98 LDR V1, [X8 + 0xF20]
	0x03BA2D9C FSUB V0.2S, V8.2S, V0.2S
	0x00000000 INVALID
	0x03BA2DA4 FADDP S0, V0.2S
	0x03BA2DA8 FCMP S0, S1
	0x03BA2DAC B.MI 0x3BA2DD0
	0x03BA2DB0 LDR V2, [X21 + 0x198]
	0x03BA2DB4 LDR V1, [X21 + 0x194]
	0x03BA2DB8 LDR V0, [X21 + 0x190]
	0x03BA2DBC MOV X0, X22
	0x03BA2DC0 MOV X1, X31
	0x03BA2DC4 BL 0x3C045DC
	0x03BA2DC8 STR S0, [X21 + 0x114]
	0x03BA2DCC STR S1, [X21 + 0x118]
	0x03BA2DD0 LDR V0, [X20 + 0x68]
	0x03BA2DD4 MOVZ W2, 0x3
	0x03BA2DD8 MOV X0, X20
	0x03BA2DDC MOV X1, X21
	0x03BA2DE0 BL 0x3BA2678
	0x03BA2DE4 LDR X0, [X23]
	0x03BA2DE8 LDR W8, [X0 + 0xE0]
	0x03BA2DEC CBNZ W8, 0x3BA2DF4
	0x03BA2DF0 BL 0x1C16DFC
	0x03BA2DF4 LDR X22, [X19 + 0x8]
	0x03BA2DF8 MOV X0, X19
	0x03BA2DFC MOV X1, X21
	0x03BA2E00 BL 0x3B9F814
	0x03BA2E04 ADRP X21, 0x551000
	0x03BA2E08 LDR X21, [X21 + 0x598]
	0x03BA2E0C LDR X20, [X19 + 0x8]
	0x03BA2E10 LDR X0, [X21]
	0x03BA2E14 LDR W8, [X0 + 0xE0]
	0x03BA2E18 CBNZ W8, 0x3BA2E20
	0x03BA2E1C BL 0x1C16DFC
	0x03BA2E20 MOV X0, X22
	0x03BA2E24 MOV X1, X20
	0x03BA2E28 MOV X2, X31
	0x03BA2E2C BL 0x3C354F8
	0x03BA2E30 TBZ X0, 0x0, 0x3BA2F04
	0x03BA2E34 LDR X0, [X21]
	0x03BA2E38 LDR W8, [X0 + 0xE0]
	0x03BA2E3C CBNZ W8, 0x3BA2E44
	0x03BA2E40 BL 0x1C16DFC
	0x03BA2E44 MOV X0, X20
	0x03BA2E48 MOV X1, X31
	0x03BA2E4C MOV X2, X31
	0x03BA2E50 BL 0x3C354F8
	0x03BA2E54 TBZ X0, 0x0, 0x3BA2EEC
	0x03BA2E58 CBZ X20, 0x3BA2F50
	0x03BA2E5C ADRP X8, 0x5BA000
	0x03BA2E60 LDR X8, [X8 + 0xBF0]
	0x03BA2E64 MOV X0, X20
	0x03BA2E68 LDR X1, [X8]
	0x03BA2E6C BL 0x21E58C4
	0x03BA2E70 ADRP X8, 0x5BA000
	0x03BA2E74 LDR X8, [X8 + 0xBE8]
	0x03BA2E78 MOV X21, X0
	0x03BA2E7C MOV X0, X20
	0x03BA2E80 LDR X1, [X8]
	0x03BA2E84 BL 0x21E58C4
	0x03BA2E88 MOV X20, X0
	0x03BA2E8C CBZ X21, 0x3BA2EC8
	0x03BA2E90 ADRP X8, 0x57A000
	0x03BA2E94 LDR X8, [X8 + 0x858]
	0x03BA2E98 LDR X9, [X21]
	0x03BA2E9C LDR X8, [X8]
	0x03BA2EA0 LDRB W11, [X9 + 0x130]
	0x03BA2EA4 LDRB W10, [X8 + 0x130]
	0x03BA2EA8 CMP W11, W10
	0x03BA2EAC B.CC 0x3BA2EC4
	0x03BA2EB0 LDR X9, [X9 + 0xC8]
	0x03BA2EB4 ADD X9, X9, X10, 0x3, LSL
	0x03BA2EB8 LDUR X9, [X9 - 0x8]
	0x03BA2EBC CMP X9, X8
	0x03BA2EC0 B.EQ 0x3BA2F3C
	0x03BA2EC4 MOV X21, X31
	0x03BA2EC8 LDR X0, [X23]
	0x03BA2ECC LDR W8, [X0 + 0xE0]
	0x03BA2ED0 CBNZ W8, 0x3BA2ED8
	0x03BA2ED4 BL 0x1C16DFC
	0x03BA2ED8 CMP X20, 0x0
	0x03BA2EDC CSET W8, NE
	0x03BA2EE0 STR X21, [X19 + 0x148]
	0x03BA2EE4 STRB W8, [X19 + 0x150]
	0x03BA2EE8 B 0x3BA2F04
	0x03BA2EEC LDR X0, [X23]
	0x03BA2EF0 LDR W8, [X0 + 0xE0]
	0x03BA2EF4 CBNZ W8, 0x3BA2EFC
	0x03BA2EF8 BL 0x1C16DFC
	0x03BA2EFC STR X31, [X19 + 0x148]
	0x03BA2F00 STRB W31, [X19 + 0x150]
	0x03BA2F04 LDR X0, [X23]
	0x03BA2F08 LDR W8, [X0 + 0xE0]
	0x03BA2F0C CBNZ W8, 0x3BA2F14
	0x03BA2F10 BL 0x1C16DFC
	0x03BA2F14 MOV X0, X19
	0x03BA2F18 BL 0x3B9F648
	0x03BA2F1C LDP X20, X19, [X31 + 0xF0]
	0x03BA2F20 LDP X22, X21, [X31 + 0xE0]
	0x03BA2F24 LDP X24, X23, [X31 + 0xD0]
	0x03BA2F28 LDP X30, X25, [X31 + 0xC0]
	0x03BA2F2C LDR X29, [X31 + 0xB0]
	0x03BA2F30 LDP D9, D8, [X31 + 0xA0]
	0x03BA2F34 ADD X31, X31, 0x100
	0x03BA2F38 RET
	0x03BA2F3C MOV X0, X21
	0x03BA2F40 MOV X1, X31
	0x03BA2F44 BL 0x3C32ECC
	0x03BA2F48 MOV X21, X0
	0x03BA2F4C B 0x3BA2EC8
	0x03BA2F50 BL 0x1C16F20
	0x03BA2F54 STR X30, [X31 - 0x30]!
	0x03BA2F58 STP X22, X21, [X31 + 0x10]
	0x03BA2F5C STP X20, X19, [X31 + 0x20]
	0x03BA2F60 ADRP X21, 0x840000
	0x03BA2F64 LDRB W8, [X21 + 0xC4A]
	0x03BA2F68 MOV W19, W1
	0x03BA2F6C MOV X20, X0
	0x03BA2F70 TBNZ X8, 0x0, 0x3BA2FA0
	0x03BA2F74 ADRP X0, 0x5BA000
	0x03BA2F78 LDR X0, [X0 + 0xBF8]
	0x03BA2F7C BL 0x1C16CF4
	0x03BA2F80 ADRP X0, 0x5BA000
	0x03BA2F84 LDR X0, [X0 + 0xB78]
	0x03BA2F88 BL 0x1C16CF4
	0x03BA2F8C ADRP X0, 0x5BA000
	0x03BA2F90 LDR X0, [X0 + 0x908]
	0x03BA2F94 BL 0x1C16CF4
	0x03BA2F98 MOVZ W8, 0x1
	0x03BA2F9C STRB W8, [X21 + 0xC4A]
	0x03BA2FA0 STR X31, [X31 + 0x8]
	0x03BA2FA4 LDR X0, [X20 + 0x90]
	0x03BA2FA8 CBZ X0, 0x3BA3024
	0x03BA2FAC ADRP X8, 0x5BA000
	0x03BA2FB0 LDR X8, [X8 + 0xB78]
	0x03BA2FB4 ADD X2, X31, 0x8
	0x03BA2FB8 MOV W1, W19
	0x03BA2FBC LDR X3, [X8]
	0x03BA2FC0 BL 0x2A150AC
	0x03BA2FC4 TBNZ X0, 0x0, 0x3BA3010
	0x03BA2FC8 ADRP X8, 0x5BA000
	0x03BA2FCC LDR X22, [X20 + 0x38]
	0x03BA2FD0 LDR X8, [X8 + 0x908]
	0x03BA2FD4 LDR X0, [X8]
	0x03BA2FD8 BL 0x1C16F10
	0x03BA2FDC MOV X1, X22
	0x03BA2FE0 MOV X2, X31
	0x03BA2FE4 MOV X21, X0
	0x03BA2FE8 BL 0x3E4F118
	0x03BA2FEC STR X21, [X31 + 0x8]
	0x03BA2FF0 LDR X0, [X20 + 0x90]
	0x03BA2FF4 CBZ X0, 0x3BA3024
	0x03BA2FF8 ADRP X8, 0x5BA000
	0x03BA2FFC LDR X8, [X8 + 0xBF8]
	0x03BA3000 MOV W1, W19
	0x03BA3004 MOV X2, X21
	0x03BA3008 LDR X3, [X8]
	0x03BA300C BL 0x2A1368C
	0x03BA3010 LDR X0, [X31 + 0x8]
	0x03BA3014 LDP X20, X19, [X31 + 0x20]
	0x03BA3018 LDP X22, X21, [X31 + 0x10]
	0x03BA301C LDR X30, [X31], #0x30
	0x03BA3020 RET
	0x03BA3024 BL 0x1C16F20
	0x03BA3028 STP X30, X23, [X31 - 0x30]!
	0x03BA302C STP X22, X21, [X31 + 0x10]
	0x03BA3030 STP X20, X19, [X31 + 0x20]
	0x03BA3034 ADRP X23, 0x83F000
	0x03BA3038 ADRP X22, 0x550000
	0x03BA303C LDRB W8, [X23 + 0xC46]
	0x03BA3040 LDR X22, [X22 + 0x598]
	0x03BA3044 MOV X19, X2
	0x03BA3048 MOV X20, X1
	0x03BA304C MOV X21, X0
	0x03BA3050 TBNZ X8, 0x0, 0x3BA3068
	0x03BA3054 ADRP X0, 0x550000
	0x03BA3058 LDR X0, [X0 + 0x598]
	0x03BA305C BL 0x1C16CF4
	0x03BA3060 MOVZ W8, 0x1
	0x03BA3064 STRB W8, [X23 + 0xC46]
	0x03BA3068 MOV X0, X21
	0x03BA306C BL 0x3BA092C
	0x03BA3070 STR X0, [X19]
	0x03BA3074 MOV X21, X0
	0x03BA3078 LDR X0, [X22]
	0x03BA307C LDR W8, [X0 + 0xE0]
	0x03BA3080 CBNZ W8, 0x3BA3088
	0x03BA3084 BL 0x1C16DFC
	0x03BA3088 MOV X0, X21
	0x03BA308C MOV X1, X31
	0x03BA3090 MOV X2, X31
	0x03BA3094 BL 0x3C354F8
	0x03BA3098 TBZ X0, 0x0, 0x3BA30A4
	0x03BA309C MOVZ W0, 0x1
	0x03BA30A0 B 0x3BA3120
	0x03BA30A4 CBZ X20, 0x3BA3130
	0x03BA30A8 LDR X0, [X22]
	0x03BA30AC LDR X20, [X20 + 0x58]
	0x03BA30B0 LDR W8, [X0 + 0xE0]
	0x03BA30B4 CBNZ W8, 0x3BA30BC
	0x03BA30B8 BL 0x1C16DFC
	0x03BA30BC MOV X0, X20
	0x03BA30C0 MOV X1, X31
	0x03BA30C4 MOV X2, X31
	0x03BA30C8 BL 0x3C354F8
	0x03BA30CC TBZ X0, 0x0, 0x3BA311C
	0x03BA30D0 CBZ X20, 0x3BA3130
	0x03BA30D4 LDR X8, [X20]
	0x03BA30D8 MOV X0, X20
	0x03BA30DC LDR X9, [X8 + 0x258]
	0x03BA30E0 LDR X1, [X8 + 0x260]
	0x03BA30E4 BLR X9
	0x03BA30E8 STR X0, [X19]
	0x03BA30EC MOV X20, X0
	0x03BA30F0 LDR X0, [X22]
	0x03BA30F4 LDR W8, [X0 + 0xE0]
	0x03BA30F8 CBNZ W8, 0x3BA3100
	0x03BA30FC BL 0x1C16DFC
	0x03BA3100 MOV X0, X20
	0x03BA3104 LDP X20, X19, [X31 + 0x20]
	0x03BA3108 LDP X22, X21, [X31 + 0x10]
	0x03BA310C MOV X1, X31
	0x03BA3110 MOV X2, X31
	0x03BA3114 LDP X30, X23, [X31], #0x30
	0x03BA3118 B 0x3C354F8
	0x03BA311C MOV W0, W31
	0x03BA3120 LDP X20, X19, [X31 + 0x20]
	0x03BA3124 LDP X22, X21, [X31 + 0x10]
	0x03BA3128 LDP X30, X23, [X31], #0x30
	0x03BA312C RET
	0x03BA3130 BL 0x1C16F20
	0x03BA3134 STR D12, [X31 - 0x70]!
	0x03BA3138 STP D11, D10, [X31 + 0x8]
	0x03BA313C STP D9, D8, [X31 + 0x18]
	0x03BA3140 STR X30, [X31 + 0x28]
	0x03BA3144 STP X26, X25, [X31 + 0x30]
	0x03BA3148 STP X24, X23, [X31 + 0x40]
	0x03BA314C STP X22, X21, [X31 + 0x50]
	0x03BA3150 STP X20, X19, [X31 + 0x60]
	0x03BA3154 ADRP X20, 0x83F000
	0x03BA3158 LDRB W8, [X20 + 0xC47]
	0x03BA315C MOV X19, X1
	0x03BA3160 MOV X21, X0
	0x03BA3164 TBNZ X8, 0x0, 0x3BA31AC
	0x03BA3168 ADRP X0, 0x5A6000
	0x03BA316C LDR X0, [X0 + 0x418]
	0x03BA3170 BL 0x1C16CF4
	0x03BA3174 ADRP X0, 0x5A6000
	0x03BA3178 LDR X0, [X0 + 0x420]
	0x03BA317C BL 0x1C16CF4
	0x03BA3180 ADRP X0, 0x5A6000
	0x03BA3184 LDR X0, [X0 + 0x428]
	0x03BA3188 BL 0x1C16CF4
	0x03BA318C ADRP X0, 0x578000
	0x03BA3190 LDR X0, [X0 + 0x9F8]
	0x03BA3194 BL 0x1C16CF4
	0x03BA3198 ADRP X0, 0x550000
	0x03BA319C LDR X0, [X0 + 0x598]
	0x03BA31A0 BL 0x1C16CF4
	0x03BA31A4 MOVZ W8, 0x1
	0x03BA31A8 STRB W8, [X20 + 0xC47]
	0x03BA31AC MOV X0, X21
	0x03BA31B0 BL 0x3BA0B04
	0x03BA31B4 LDR X8, [X21 + 0x38]
	0x03BA31B8 CBZ X8, 0x3BA3594
	0x03BA31BC LDRB W9, [X8 + 0x38]
	0x03BA31C0 CBZ W9, 0x3BA344C
	0x03BA31C4 LDR W24, [X19 + 0x14]
	0x03BA31C8 LDR V9, [X19 + 0x18]
	0x03BA31CC TBZ X0, 0x0, 0x3BA31D8
	0x03BA31D0 MOV W23, W31
	0x03BA31D4 B 0x3BA3438
	0x03BA31D8 ADRP X22, 0x836000
	0x03BA31DC LDR W23, [X19 + 0x10]
	0x03BA31E0 LDR X20, [X8 + 0x40]
	0x03BA31E4 LDRB W8, [X22 + 0x5AA]
	0x03BA31E8 LDP S11, S10, [X19]
	0x03BA31EC CBNZ W8, 0x3BA3204
	0x03BA31F0 ADRP X0, 0x557000
	0x03BA31F4 LDR X0, [X0 + 0x4B8]
	0x03BA31F8 BL 0x1C16CF4
	0x03BA31FC MOVZ W8, 0x1
	0x03BA3200 STRB W8, [X22 + 0x5AA]
	0x03BA3204 ADRP X8, 0x557000
	0x03BA3208 LDR X8, [X8 + 0x4B8]
	0x03BA320C ADRP X9, 0xFFFFFFFFFCF47000
	0x03BA3210 LDR V1, [X9 + 0x240]
	0x03BA3214 FABS S12, S11
	0x03BA3218 LDR X8, [X8]
	0x03BA321C FMOV S0, W31
	0x03BA3220 FMOV S3, 8
	0x03BA3224 FMAXNM S4, S12, S0
	0x03BA3228 LDR X8, [X8 + 0xB8]
	0x03BA322C FMUL S4, S4, S1
	0x03BA3230 LDR V2, [X8]
	0x03BA3234 FMUL S2, S2, S3
	0x03BA3238 FCMP S4, S2
	0x03BA323C FCSEL S3, S4, S2, GT
	0x03BA3240 FABD S4, S0, S0
	0x03BA3244 FCMP S4, S3
	0x03BA3248 B.PL 0x3BA326C
	0x03BA324C FABS S3, S10
	0x03BA3250 FMAXNM S3, S3, S0
	0x03BA3254 FMUL S1, S3, S1
	0x03BA3258 FCMP S1, S2
	0x03BA325C FCSEL S1, S1, S2, GT
	0x03BA3260 FABD S0, S0, S0
	0x03BA3264 FCMP S0, S1
	0x03BA3268 B.MI 0x3BA32B0
	0x03BA326C MOV X0, X31
	0x03BA3270 BL 0x3C3C764
	0x03BA3274 LDR V1, [X21 + 0x5C]
	0x03BA3278 FMUL S2, S11, S11
	0x03BA327C FMUL S3, S10, S10
	0x03BA3280 FADD S2, S2, S3
	0x03BA3284 FMUL S1, S1, S1
	0x03BA3288 FCMP S2, S1
	0x03BA328C B.LE 0x3BA32B0
	0x03BA3290 MOV V8.16B, V0.16B
	0x03BA3294 FABS S0, S10
	0x03BA3298 FCMP S12, S0
	0x03BA329C B.LE 0x3BA3470
	0x03BA32A0 FCMP S11, 0x0
	0x03BA32A4 B.LE 0x3BA3480
	0x03BA32A8 MOVZ W25, 0x2
	0x03BA32AC B 0x3BA348C
	0x03BA32B0 MOV W23, W31
	0x03BA32B4 ADRP X8, 0x550000
	0x03BA32B8 LDR X8, [X8 + 0x598]
	0x03BA32BC LDR X0, [X8]
	0x03BA32C0 LDR W8, [X0 + 0xE0]
	0x03BA32C4 CBNZ W8, 0x3BA32CC
	0x03BA32C8 BL 0x1C16DFC
	0x03BA32CC MOV X0, X20
	0x03BA32D0 MOV X1, X31
	0x03BA32D4 MOV X2, X31
	0x03BA32D8 BL 0x3C354F8
	0x03BA32DC TBZ X0, 0x0, 0x3BA3438
	0x03BA32E0 LDR X8, [X21]
	0x03BA32E4 MOV X0, X21
	0x03BA32E8 LDR X9, [X8 + 0x268]
	0x03BA32EC LDR X1, [X8 + 0x270]
	0x03BA32F0 BLR X9
	0x03BA32F4 LDRB W8, [X19 + 0x8]
	0x03BA32F8 MOV X22, X0
	0x03BA32FC TBZ X8, 0x0, 0x3BA338C
	0x03BA3300 LDR X8, [X21 + 0x110]
	0x03BA3304 CBZ X8, 0x3BA3320
	0x03BA3308 LDR X9, [X8 + 0x18]
	0x03BA330C LDR X0, [X8 + 0x40]
	0x03BA3310 LDR X3, [X8 + 0x28]
	0x03BA3314 MOV X1, X20
	0x03BA3318 MOV X2, X22
	0x03BA331C BLR X9
	0x03BA3320 ADRP X25, 0x578000
	0x03BA3324 LDR X25, [X25 + 0x9F8]
	0x03BA3328 LDR X0, [X25]
	0x03BA332C LDR W8, [X0 + 0xE0]
	0x03BA3330 CBNZ W8, 0x3BA3338
	0x03BA3334 BL 0x1C16DFC
	0x03BA3338 ADRP X26, 0x83E000
	0x03BA333C LDRB W8, [X26 + 0x392]
	0x03BA3340 CBNZ W8, 0x3BA3358
	0x03BA3344 ADRP X0, 0x578000
	0x03BA3348 LDR X0, [X0 + 0x9F8]
	0x03BA334C BL 0x1C16CF4
	0x03BA3350 MOVZ W8, 0x1
	0x03BA3354 STRB W8, [X26 + 0x392]
	0x03BA3358 LDR X0, [X25]
	0x03BA335C LDR W8, [X0 + 0xE0]
	0x03BA3360 CBNZ W8, 0x3BA336C
	0x03BA3364 BL 0x1C16DFC
	0x03BA3368 LDR X0, [X25]
	0x03BA336C ADRP X9, 0x5A6000
	0x03BA3370 LDR X8, [X0 + 0xB8]
	0x03BA3374 LDR X9, [X9 + 0x428]
	0x03BA3378 MOV X0, X20
	0x03BA337C MOV X1, X22
	0x03BA3380 LDR X2, [X8 + 0x80]
	0x03BA3384 LDR X3, [X9]
	0x03BA3388 BL 0x21DD088
	0x03BA338C CBZ X22, 0x3BA3594
	0x03BA3390 LDR X8, [X22]
	0x03BA3394 MOV X0, X22
	0x03BA3398 LDP X9, X1, [X8 + 0x198]
	0x03BA339C BLR X9
	0x03BA33A0 TBNZ X0, 0x0, 0x3BA3438
	0x03BA33A4 LDRB W8, [X19 + 0xC]
	0x03BA33A8 TBZ X8, 0x0, 0x3BA3438
	0x03BA33AC LDR X8, [X21 + 0x118]
	0x03BA33B0 CBZ X8, 0x3BA33CC
	0x03BA33B4 LDR X9, [X8 + 0x18]
	0x03BA33B8 LDR X0, [X8 + 0x40]
	0x03BA33BC LDR X3, [X8 + 0x28]
	0x03BA33C0 MOV X1, X20
	0x03BA33C4 MOV X2, X22
	0x03BA33C8 BLR X9
	0x03BA33CC ADRP X21, 0x578000
	0x03BA33D0 LDR X21, [X21 + 0x9F8]
	0x03BA33D4 LDR X0, [X21]
	0x03BA33D8 LDR W8, [X0 + 0xE0]
	0x03BA33DC CBNZ W8, 0x3BA33E4
	0x03BA33E0 BL 0x1C16DFC
	0x03BA33E4 ADRP X25, 0x83E000
	0x03BA33E8 LDRB W8, [X25 + 0x391]
	0x03BA33EC CBNZ W8, 0x3BA3404
	0x03BA33F0 ADRP X0, 0x578000
	0x03BA33F4 LDR X0, [X0 + 0x9F8]
	0x03BA33F8 BL 0x1C16CF4
	0x03BA33FC MOVZ W8, 0x1
	0x03BA3400 STRB W8, [X25 + 0x391]
	0x03BA3404 LDR X0, [X21]
	0x03BA3408 LDR W8, [X0 + 0xE0]
	0x03BA340C CBNZ W8, 0x3BA3418
	0x03BA3410 BL 0x1C16DFC
	0x03BA3414 LDR X0, [X21]
	0x03BA3418 ADRP X9, 0x5A6000
	0x03BA341C LDR X8, [X0 + 0xB8]
	0x03BA3420 LDR X9, [X9 + 0x418]
	0x03BA3424 MOV X0, X20
	0x03BA3428 MOV X1, X22
	0x03BA342C LDR X2, [X8 + 0x88]
	0x03BA3430 LDR X3, [X9]
	0x03BA3434 BL 0x21DD088
	0x03BA3438 MOV W25, W24
	0x03BA343C MOV W8, W23
	0x03BA3440 BFM X8, X25, 0x20, 0x1F
	0x03BA3444 STR S9, [X19 + 0x18]
	0x03BA3448 STP X31, X8, [X19 + 0x8]
	0x03BA344C LDP X20, X19, [X31 + 0x60]
	0x03BA3450 LDP X22, X21, [X31 + 0x50]
	0x03BA3454 LDP X24, X23, [X31 + 0x40]
	0x03BA3458 LDP X26, X25, [X31 + 0x30]
	0x03BA345C LDR X30, [X31 + 0x28]
	0x03BA3460 LDP D9, D8, [X31 + 0x18]
	0x03BA3464 LDP D11, D10, [X31 + 0x8]
	0x03BA3468 LDR V12, [X31], #0x70
	0x03BA346C RET
	0x03BA3470 FCMP S10, 0x0
	0x03BA3474 B.LE 0x3BA3488
	0x03BA3478 MOVZ W25, 0x1
	0x03BA347C B 0x3BA348C
	0x03BA3480 MOV W25, W31
	0x03BA3484 B 0x3BA348C
	0x03BA3488 MOVZ W25, 0x3
	0x03BA348C MOV W26, W31
	0x03BA3490 CBZ W23, 0x3BA34C0
	0x03BA3494 CMP W25, W24
	0x03BA3498 B.NE 0x3BA34C0
	0x03BA349C CMP W23, 0x1
	0x03BA34A0 B.GT 0x3BA34AC
	0x03BA34A4 LDR V0, [X21 + 0x60]
	0x03BA34A8 B 0x3BA34B0
	0x03BA34AC LDR V0, [X21 + 0x64]
	0x03BA34B0 FADD S0, S9, S0
	0x03BA34B4 FCMP S8, S0
	0x03BA34B8 MOV W26, W23
	0x03BA34BC B.LE 0x3BA32B4
	0x03BA34C0 MOV X0, X21
	0x03BA34C4 BL 0x3BA3598

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0x841000
	015 Move W8, [X21+3137]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x558000
	023 Move X0, [X0+3536]
	024 Call 0x1C17CF4
	025 Move X0, 0x558000
	026 Move X0, [X0+3544]
	027 Call 0x1C17CF4
	028 Move X0, 0x558000
	029 Move X0, [X0+3552]
	030 Call 0x1C17CF4
	031 Move X0, 0x5A8000
	032 Move X0, [X0+1008]
	033 Call 0x1C17CF4
	034 Move X0, 0x5A8000
	035 Move X0, [X0+1016]
	036 Call 0x1C17CF4
	037 Move X0, 0x5A8000
	038 Move X0, [X0+1024]
	039 Call 0x1C17CF4
	040 Move X0, 0x57A000
	041 Move X0, [X0+2552]
	042 Call 0x1C17CF4
	043 Move X0, 0x558000
	044 Move X0, [X0+1392]
	045 Call 0x1C17CF4
	046 Move X0, 0x5A8000
	047 Move X0, [X0+1032]
	048 Call 0x1C17CF4
	049 Move X0, 0x558000
	050 Move X0, [X0+3560]
	051 Call 0x1C17CF4
	052 Move X0, 0x5A8000
	053 Move X0, [X0+1040]
	054 Call 0x1C17CF4
	055 Move X0, 0x558000
	056 Move X0, [X0+3232]
	057 Call 0x1C17CF4
	058 Move X0, 0x558000
	059 Move X0, [X0+3240]
	060 Call 0x1C17CF4
	061 Move X0, 0x552000
	062 Move X0, [X0+1432]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+3137], W8
	066 Move [X31+48], X31
	067 Move [X31+56], X31
	068 Move [X31+64], X31
	069 Compare X19, 0
	070 JumpIfEqual {146}
	071 Move X21, 0x57A000
	072 Move X29, [X19+80]
	073 Move X21, [X21+2552]
	074 Move X0, X19
	075 Move X1, X31
	076 Call PointerEventData.IsPointerMoving, X0
	077 Move [X31+20], W0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {147}
	082 Move X0, [X19+240]
	083 Compare X0, 0
	084 JumpIfEqual {146}
	085 Move X23, 0x558000
	086 Move X28, 0x5A8000
	087 Move X23, [X23+3240]
	088 Move X28, [X28+1024]
	089 Move W24, W31
	090 Move X22, X31
	091 Move X26, 0x840000
	092 Move W27, 1
	093 Move W8, [X0+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X20+200]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSEL not yet implemented."
	098 Compare X8, 0
	099 JumpIfEqual {114}
	100 Move X2, [X23]
	101 Move W1, W24
	102 Call List`1<Object>.get_Item, X0, X1
	103 Compare X22, 0
	104 JumpIfEqual {146}
	105 Move X1, X0
	106 Move X8, [X22+24]
	107 Move X0, [X22+64]
	108 Move X3, [X22+40]
	109 Move X2, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X0, [X19+240]
	112 Compare X0, 0
	113 JumpIfEqual {146}
	114 Move X2, [X23]
	115 Move W1, W24
	116 Call List`1<Object>.get_Item, X0, X1
	117 Move X8, [X21]
	118 Move X25, X0
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move W8, [X26+899]
	125 Compare W8, 0
	126 JumpIfNotEqual {130}
	127 Move X0, X21
	128 Call 0x1C17CF4
	129 Move [X26+899], W27
	130 Move X0, [X21]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X21]
	136 Move X8, [X0+184]
	137 Move X3, [X28]
	138 Move X0, X25
	139 Move X1, X19
	140 Move X2, [X8]
	141 Call 0x21DE088, X0, X1, X2
	142 Move X0, [X19+240]
	143 Add W24, W24, 1
	144 Compare X0, 0
	145 JumpIfNotEqual {93}
	146 Call 0x1C17F20
	147 Move X27, 0x552000
	148 Move X27, [X27+1432]
	149 Move X0, [X27]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X28, 0x5A8000
	155 Move X28, [X28+1016]
	156 Move X0, X29
	157 Move X1, X31
	158 Move X2, X31
	159 Call Object.op_Equality, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {178}
	164 Move X0, [X27]
	165 Move X24, [X19+32]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X24
	171 Move X1, X31
	172 Move X2, X31
	173 Call Object.op_Equality, X0, X1
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {273}
	178 Move X0, [X19+240]
	179 Compare X0, 0
	180 JumpIfEqual {146}
	181 Move X8, 0x558000
	182 Move X8, [X8+3560]
	183 Move X23, 0x558000
	184 Move X22, X29
	185 Move X1, [X8]
	186 Move X23, [X23+3544]
	187 Add X8, X31, 24
	188 Call List`1<Object>.GetEnumerator, X0
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 Move X8, [X31+40]
	191 Move X25, X31
	192 Move X26, 0x840000
	193 Move [X31+3], V0
	194 Move [X31+64], X8
	195 Move W29, 1
	196 Move X1, [X23]
	197 Add X0, X31, 48
	198 Call Enumerator<Object>.MoveNext, X0
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {240}
	203 Move X8, [X20+168]
	204 Move X24, [X31+64]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSEL not yet implemented."
	207 Compare X8, 0
	208 JumpIfEqual {217}
	209 Compare X25, 0
	210 JumpIfEqual {605}
	211 Move X0, [X25+64]
	212 Move X8, [X25+24]
	213 Move X3, [X25+40]
	214 Move X1, X24
	215 Move X2, X19
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X0, [X21]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move W8, [X26+900]
	223 Compare W8, 0
	224 JumpIfNotEqual {228}
	225 Move X0, X21
	226 Call 0x1C17CF4
	227 Move [X26+900], W29
	228 Move X0, [X21]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X21]
	234 Move X8, [X0+184]
	235 Move X3, [X28]
	236 Move X2, [X8+16]
	237 Move X0, X24
	238 Move X1, X19
	239 Call 0x21DE088, X0, X1, X2
	240 Move X8, 0x558000
	241 Move X8, [X8+3536]
	242 Add X0, X31, 48
	243 Move X1, [X8]
	244 Call Enumerator<Object>.Dispose, X0
	245 Move X8, [X19+240]
	246 Compare X8, 0
	247 JumpIfEqual {146}
	248 Move W2, [X8+24]
	249 Move W9, [X8+28]
	250 Move X29, X22
	251 Add W9, W9, 1
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move [X8+24], W31
	254 Move [X8+28], W9
	255 Move X0, [X8+16]
	256 Move W1, W31
	257 Move X3, X31
	258 Call Array.Clear, X0, X1, X2
	259 Move X0, [X27]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move X0, X29
	265 Move X1, X31
	266 Move X2, X31
	267 Call Object.op_Equality, X0, X1
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {273}
	272 Move [X19+32], X31
	273 Move X0, [X27]
	274 Move X24, [X19+32]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X0, X24
	280 Move X1, X29
	281 Move X2, X31
	282 Call Object.op_Equality, X0, X1
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfEqual {591}
	287 Move X0, [X19+32]
	288 Move X1, X29
	289 Move X2, X31
	290 Move [X31+8], X29
	291 Call BaseInputModule.FindCommonRoot, X0, X1
	292 Move X8, [X27]
	293 Move X25, [X19+32]
	294 Move X24, X0
	295 Move W9, [X8+224]
	296 Compare W9, 0
	297 JumpIfNotEqual {300}
	298 Move X0, X8
	299 Call 0x1C17DFC
	300 Move X0, X25
	301 Move X1, X31
	302 Move X2, X31
	303 Call Object.op_Inequality, X0, X1
	304 Move TEMP, X0
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfNotEqual {417}
	308 Move X0, [X19+32]
	309 Compare X0, 0
	310 JumpIfEqual {146}
	311 Move X1, X31
	312 Call GameObject.get_transform, X0
	313 Move X23, 0x5A7000
	314 Move X23, [X23+1040]
	315 Move X25, X0
	316 Move X22, X31
	317 Move X29, 0x83F000
	318 Move X0, [X27]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X25
	324 Move X1, X31
	325 Move X2, X31
	326 Call Object.op_Inequality, X0, X1
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {417}
	331 Move X0, [X27]
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {336}
	335 Call 0x1C17DFC
	336 Move X0, X24
	337 Move X1, X31
	338 Move X2, X31
	339 Call Object.op_Inequality, X0, X1
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {364}
	344 Compare X24, 0
	345 JumpIfEqual {146}
	346 Move X0, X24
	347 Move X1, X31
	348 Call GameObject.get_transform, X0
	349 Move X8, [X27]
	350 Move X26, X0
	351 Move W9, [X8+224]
	352 Compare W9, 0
	353 JumpIfNotEqual {356}
	354 Move X0, X8
	355 Call 0x1C17DFC
	356 Move X0, X26
	357 Move X1, X25
	358 Move X2, X31
	359 Call Object.op_Equality, X0, X1
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {417}
	364 Compare X25, 0
	365 JumpIfEqual {146}
	366 Move X0, X25
	367 Move X1, X31
	368 Call Component.get_gameObject, X0
	369 Move X8, [X20+168]
	370 Move X26, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 NotImplemented "Instruction CSEL not yet implemented."
	373 Compare X8, 0
	374 JumpIfEqual {383}
	375 Compare X22, 0
	376 JumpIfEqual {146}
	377 Move X8, [X22+24]
	378 Move X0, [X22+64]
	379 Move X3, [X22+40]
	380 Move X1, X26
	381 Move X2, X19
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move X0, [X21]
	384 Move W8, [X0+224]
	385 Compare W8, 0
	386 JumpIfNotEqual {388}
	387 Call 0x1C17DFC
	388 Move W8, [X29+900]
	389 Compare W8, 0
	390 JumpIfNotEqual {395}
	391 Move X0, X21
	392 Call 0x1C17CF4
	393 Move W8, 1
	394 Move [X29+900], W8
	395 Move X0, [X21]
	396 Move W8, [X0+224]
	397 Compare W8, 0
	398 JumpIfNotEqual {401}
	399 Call 0x1C17DFC
	400 Move X0, [X21]
	401 Move X8, [X0+184]
	402 Move X3, [X28]
	403 Move X0, X26
	404 Move X1, X19
	405 Move X2, [X8+16]
	406 Call 0x21DE088, X0, X1, X2
	407 Move X0, [X19+240]
	408 Compare X0, 0
	409 JumpIfEqual {146}
	410 Move X2, [X23]
	411 Move X1, X26
	412 Call List`1<Object>.Remove, X0, X1
	413 Move X0, X25
	414 Move X1, X31
	415 Call Transform.get_parent, X0
	416 Move X25, X0
	417 Move X22, [X31+8]
	418 Move [X19+32], X22
	419 Move X0, [X27]
	420 Move W8, [X0+224]
	421 Compare W8, 0
	422 JumpIfNotEqual {424}
	423 Call 0x1C17DFC
	424 Move X0, X22
	425 Move X1, X31
	426 Move X2, X31
	427 Call Object.op_Inequality, X0, X1
	428 Move TEMP, X0
	429 And TEMP, TEMP, 1
	430 Compare TEMP, 1
	431 JumpIfNotEqual {591}
	432 Compare X22, 0
	433 JumpIfEqual {146}
	434 Move X0, X22
	435 Move X1, X31
	436 Call GameObject.get_transform, X0
	437 Move X22, 0x557000
	438 Move X22, [X22+1392]
	439 Move X23, X0
	440 Move X26, X31
	441 Move X28, X31
	442 Move X29, 0x83F000
	443 Move X0, [X27]
	444 Move W8, [X0+224]
	445 Compare W8, 0
	446 JumpIfNotEqual {448}
	447 Call 0x1C17DFC
	448 Move X0, X23
	449 Move X1, X31
	450 Move X2, X31
	451 Call Object.op_Inequality, X0, X1
	452 Move TEMP, X0
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfNotEqual {591}
	456 Compare X23, 0
	457 JumpIfEqual {146}
	458 Move X0, X23
	459 Move X1, X31
	460 Call Component.get_gameObject, X0
	461 Move X8, [X27]
	462 Move X25, X0
	463 Move W9, [X8+224]
	464 Compare W9, 0
	465 JumpIfNotEqual {468}
	466 Move X0, X8
	467 Call 0x1C17DFC
	468 Move X0, X25
	469 Move X1, X24
	470 Move X2, X31
	471 Call Object.op_Inequality, X0, X1
	472 Move TEMP, X0
	473 And TEMP, TEMP, 1
	474 Compare TEMP, 1
	475 JumpIfNotEqual {591}
	476 Move X0, X23
	477 Move X1, X31
	478 Call Component.get_gameObject, X0
	479 Move X8, [X20+160]
	480 Move X25, X0
	481 NotImplemented "Instruction CMP not yet implemented."
	482 NotImplemented "Instruction CSEL not yet implemented."
	483 Compare X8, 0
	484 JumpIfEqual {493}
	485 Compare X28, 0
	486 JumpIfEqual {146}
	487 Move X8, [X28+24]
	488 Move X0, [X28+64]
	489 Move X3, [X28+40]
	490 Move X1, X25
	491 Move X2, X19
	492 NotImplemented "Instruction BLR not yet implemented."
	493 Move X0, [X21]
	494 Move W8, [X0+224]
	495 Compare W8, 0
	496 JumpIfNotEqual {498}
	497 Call 0x1C17DFC
	498 Move W8, [X29+901]
	499 Compare W8, 0
	500 JumpIfNotEqual {505}
	501 Move X0, X21
	502 Call 0x1C17CF4
	503 Move W8, 1
	504 Move [X29+901], W8
	505 Move X0, [X21]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {511}
	509 Call 0x1C17DFC
	510 Move X0, [X21]
	511 Move X8, [X0+184]
	512 Move X0, X25
	513 Move X1, X19
	514 Move X2, [X8+8]
	515 Move X8, 0x5A7000
	516 Move X8, [X8+1008]
	517 Move X3, [X8]
	518 Call 0x21DE088, X0, X1, X2
	519 Move W8, [X31+20]
	520 Move TEMP, X8
	521 And TEMP, TEMP, 1
	522 Compare TEMP, 1
	523 JumpIfNotEqual {565}
	524 Move X8, [X20+200]
	525 NotImplemented "Instruction CMP not yet implemented."
	526 NotImplemented "Instruction CSEL not yet implemented."
	527 Compare X8, 0
	528 JumpIfEqual {537}
	529 Compare X26, 0
	530 JumpIfEqual {146}
	531 Move X8, [X26+24]
	532 Move X0, [X26+64]
	533 Move X3, [X26+40]
	534 Move X1, X25
	535 Move X2, X19
	536 NotImplemented "Instruction BLR not yet implemented."
	537 Move X0, [X21]
	538 Move W8, [X0+224]
	539 Compare W8, 0
	540 JumpIfNotEqual {542}
	541 Call 0x1C17DFC
	542 Move X8, 0x83F000
	543 Move W8, [X8+899]
	544 Compare W8, 0
	545 JumpIfNotEqual {551}
	546 Move X0, X21
	547 Call 0x1C17CF4
	548 Move W8, 1
	549 Move X9, 0x83F000
	550 Move [X9+899], W8
	551 Move X0, [X21]
	552 Move W8, [X0+224]
	553 Compare W8, 0
	554 JumpIfNotEqual {557}
	555 Call 0x1C17DFC
	556 Move X0, [X21]
	557 Move X8, [X0+184]
	558 Move X0, X25
	559 Move X1, X19
	560 Move X2, [X8]
	561 Move X8, 0x5A7000
	562 Move X8, [X8+1024]
	563 Move X3, [X8]
	564 Call 0x21DE088, X0, X1, X2
	565 Move X0, [X19+240]
	566 Compare X0, 0
	567 JumpIfEqual {146}
	568 Move W10, [X0+28]
	569 Move X8, [X0+16]
	570 Move X9, [X22]
	571 Add W10, W10, 1
	572 Move [X0+28], W10
	573 Compare X8, 0
	574 JumpIfEqual {146}
	575 NotImplemented "Instruction LDRSW not yet implemented."
	576 Move W11, [X8+24]
	577 NotImplemented "Instruction CMP not yet implemented."
	578 Add W9, W10, 1
	579 Add X8, X8, X10
	580 Move [X0+24], W9
	581 Move [X8+32], X25
	582 Move X8, [X9+32]
	583 Move X1, X25
	584 Move X8, [X8+192]
	585 Move X2, [X8+112]
	586 Call List`1<Object>.AddWithResize, X0, X1
	587 Move X0, X23
	588 Move X1, X31
	589 Call Transform.get_parent, X0
	590 Move X23, X0
	591 Move X20, [X31+160]
	592 Move X19, [X31+168]
	593 Move X22, [X31+144]
	594 Move X21, [X31+152]
	595 Move X24, [X31+128]
	596 Move X23, [X31+136]
	597 Move X26, [X31+112]
	598 Move X25, [X31+120]
	599 Move X28, [X31+96]
	600 Move X27, [X31+104]
	601 Move X29, [X31+80]
	602 Move X30, [X31+88]
	603 Add X31, X31, 176
	604 Return 
	605 Call 0x1C17F20
	606 Move X24, X0
	607 NotImplemented "Instruction CMP not yet implemented."
	608 Move X0, X24
	609 Call 0x3EB2AD0
	610 Move X25, [X0]
	611 Call 0x3EB2AE0
	612 Move X8, 0x557000
	613 Move X8, [X8+3536]
	614 Add X0, X31, 48
	615 Move X1, [X8]
	616 Call Enumerator<Object>.Dispose, X0
	617 Compare X25, 0
	618 JumpIfEqual {245}
	619 Move X0, X25
	620 Call 0x1C17F18
	621 Move X25, X31
	622 Move X24, X0
	623 Move X8, 0x557000
	624 Move X8, [X8+3536]
	625 Move X1, [X8]
	626 Add X0, X31, 48
	627 Call Enumerator<Object>.Dispose, X0
	628 Compare X25, 0
	629 JumpIfNotEqual {632}
	630 Move X0, X24
	631 Call 0x1D2D690
	632 Move X0, X25
	633 Call 0x1C17F18
	634 Call 0x1991590

Method: System.Void ProcessPointerButton(UnityEngine.XR.Interaction.Toolkit.UI.ButtonDeltaState mouseButtonChanges, UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03BA2590 FCMP S1, S0
	0x03BA2594 B.MI 0x3BA2660
	0x03BA2598 ADRP X22, 0x579000
	0x03BA259C LDR X22, [X22 + 0x9F8]
	0x03BA25A0 LDR X21, [X19 + 0x20]
	0x03BA25A4 LDR X0, [X22]
	0x03BA25A8 LDR W8, [X0 + 0xE0]
	0x03BA25AC CBNZ W8, 0x3BA25B4
	0x03BA25B0 BL 0x1C16DFC
	0x03BA25B4 ADRP X8, 0x5A7000
	0x03BA25B8 LDR X8, [X8 + 0x3E0]
	0x03BA25BC MOV X0, X21
	0x03BA25C0 LDR X1, [X8]
	0x03BA25C4 BL 0x21DDB64
	0x03BA25C8 LDR X8, [X20 + 0xF8]
	0x03BA25CC MOV X20, X0
	0x03BA25D0 CBZ X8, 0x3BA25EC
	0x03BA25D4 LDR X9, [X8 + 0x18]
	0x03BA25D8 LDR X0, [X8 + 0x40]
	0x03BA25DC LDR X3, [X8 + 0x28]
	0x03BA25E0 MOV X1, X20
	0x03BA25E4 MOV X2, X19
	0x03BA25E8 BLR X9
	0x03BA25EC LDR X0, [X22]
	0x03BA25F0 LDR W8, [X0 + 0xE0]
	0x03BA25F4 CBNZ W8, 0x3BA25FC
	0x03BA25F8 BL 0x1C16DFC
	0x03BA25FC ADRP X21, 0x83F000
	0x03BA2600 LDRB W8, [X21 + 0x38E]
	0x03BA2604 CBNZ W8, 0x3BA261C
	0x03BA2608 ADRP X0, 0x579000
	0x03BA260C LDR X0, [X0 + 0x9F8]
	0x03BA2610 BL 0x1C16CF4
	0x03BA2614 MOVZ W8, 0x1
	0x03BA2618 STRB W8, [X21 + 0x38E]
	0x03BA261C LDR X0, [X22]
	0x03BA2620 LDR W8, [X0 + 0xE0]
	0x03BA2624 CBNZ W8, 0x3BA2630
	0x03BA2628 BL 0x1C16DFC
	0x03BA262C LDR X0, [X22]
	0x03BA2630 ADRP X9, 0x5A7000
	0x03BA2634 LDR X8, [X0 + 0xB8]
	0x03BA2638 LDR X9, [X9 + 0x3D8]
	0x03BA263C MOV X0, X20
	0x03BA2640 MOV X1, X19
	0x03BA2644 LDR X2, [X8 + 0x58]
	0x03BA2648 LDR X3, [X9]
	0x03BA264C LDP X20, X19, [X31 + 0x20]
	0x03BA2650 LDP X22, X21, [X31 + 0x10]
	0x03BA2654 LDR X30, [X31 + 0x8]
	0x03BA2658 LDR V8, [X31], #0x30
	0x03BA265C B 0x21DD8A8
	0x03BA2660 LDP X20, X19, [X31 + 0x20]
	0x03BA2664 LDP X22, X21, [X31 + 0x10]
	0x03BA2668 LDR X30, [X31 + 0x8]
	0x03BA266C LDR V8, [X31], #0x30
	0x03BA2670 RET
	0x03BA2674 BL 0x1C16F20
	0x03BA2678 STR D8, [X31 - 0x40]!
	0x03BA267C STR X30, [X31 + 0x8]
	0x03BA2680 STP X24, X23, [X31 + 0x10]
	0x03BA2684 STP X22, X21, [X31 + 0x20]
	0x03BA2688 STP X20, X19, [X31 + 0x30]
	0x03BA268C ADRP X22, 0x840000
	0x03BA2690 LDRB W8, [X22 + 0xC43]
	0x03BA2694 MOV V8.16B, V0.16B
	0x03BA2698 MOV W21, W2
	0x03BA269C MOV X19, X1
	0x03BA26A0 MOV X20, X0
	0x03BA26A4 TBNZ X8, 0x0, 0x3BA26EC
	0x03BA26A8 ADRP X0, 0x5A7000
	0x03BA26AC LDR X0, [X0 + 0x3C8]
	0x03BA26B0 BL 0x1C16CF4
	0x03BA26B4 ADRP X0, 0x5A7000
	0x03BA26B8 LDR X0, [X0 + 0x3D0]
	0x03BA26BC BL 0x1C16CF4
	0x03BA26C0 ADRP X0, 0x5A7000
	0x03BA26C4 LDR X0, [X0 + 0x3A8]
	0x03BA26C8 BL 0x1C16CF4
	0x03BA26CC ADRP X0, 0x579000
	0x03BA26D0 LDR X0, [X0 + 0x9F8]
	0x03BA26D4 BL 0x1C16CF4
	0x03BA26D8 ADRP X0, 0x551000
	0x03BA26DC LDR X0, [X0 + 0x598]
	0x03BA26E0 BL 0x1C16CF4
	0x03BA26E4 MOVZ W8, 0x1
	0x03BA26E8 STRB W8, [X22 + 0xC43]
	0x03BA26EC CBZ X19, 0x3BA29B4
	0x03BA26F0 MOV X0, X19
	0x03BA26F4 MOV X1, X31
	0x03BA26F8 BL 0x3E4F244
	0x03BA26FC TBZ X0, 0x0, 0x3BA2748
	0x03BA2700 CMP W21, 0x1
	0x03BA2704 B.NE 0x3BA2718
	0x03BA2708 MOV X0, X31
	0x03BA270C BL 0x3C246D4
	0x03BA2710 CMP W0, 0x1
	0x03BA2714 B.EQ 0x3BA2748
	0x03BA2718 ADRP X22, 0x551000
	0x03BA271C LDR X22, [X22 + 0x598]
	0x03BA2720 LDR X21, [X19 + 0x40]
	0x03BA2724 LDR X0, [X22]
	0x03BA2728 LDR W8, [X0 + 0xE0]
	0x03BA272C CBNZ W8, 0x3BA2734
	0x03BA2730 BL 0x1C16DFC
	0x03BA2734 MOV X0, X21
	0x03BA2738 MOV X1, X31
	0x03BA273C MOV X2, X31
	0x03BA2740 BL 0x3C3883C
	0x03BA2744 TBZ X0, 0x0, 0x3BA2760
	0x03BA2748 LDP X20, X19, [X31 + 0x30]
	0x03BA274C LDP X22, X21, [X31 + 0x20]
	0x03BA2750 LDP X24, X23, [X31 + 0x10]
	0x03BA2754 LDR X30, [X31 + 0x8]
	0x03BA2758 LDR V8, [X31], #0x40
	0x03BA275C RET
	0x03BA2760 LDRB W8, [X19 + 0x145]
	0x03BA2764 CBNZ W8, 0x3BA2840
	0x03BA2768 LDR X8, [X20 + 0x38]
	0x03BA276C CBZ X8, 0x3BA29B4
	0x03BA2770 LDRB W9, [X19 + 0x144]
	0x03BA2774 CBZ W9, 0x3BA27A8
	0x03BA2778 ADD X9, X19, 0x104
	0x03BA277C LDR V0, [X8 + 0x3C]
	0x03BA2780 LDR V1, [X9 + 0x10]
	0x03BA2784 LDR V2, [X9]
	0x03BA2788 SCVTF S0, S0
	0x03BA278C FMUL S0, S0, S8
	0x03BA2790 FSUB V1.2S, V1.2S, V2.2S
	0x00000000 INVALID
	0x03BA2798 FADDP S1, V1.2S
	0x03BA279C FMUL S0, S0, S0
	0x03BA27A0 FCMP S1, S0
	0x03BA27A4 B.LT 0x3BA2748
	0x03BA27A8 LDR X8, [X20 + 0xD8]
	0x03BA27AC LDR X21, [X19 + 0x40]
	0x03BA27B0 CBZ X8, 0x3BA27CC
	0x03BA27B4 LDR X9, [X8 + 0x18]
	0x03BA27B8 LDR X0, [X8 + 0x40]
	0x03BA27BC LDR X3, [X8 + 0x28]
	0x03BA27C0 MOV X1, X21
	0x03BA27C4 MOV X2, X19
	0x03BA27C8 BLR X9
	0x03BA27CC ADRP X23, 0x579000
	0x03BA27D0 LDR X23, [X23 + 0x9F8]
	0x03BA27D4 LDR X0, [X23]
	0x03BA27D8 LDR W8, [X0 + 0xE0]
	0x03BA27DC CBNZ W8, 0x3BA27E4
	0x03BA27E0 BL 0x1C16DFC
	0x03BA27E4 ADRP X24, 0x83F000
	0x03BA27E8 LDRB W8, [X24 + 0x38C]
	0x03BA27EC CBNZ W8, 0x3BA2804
	0x03BA27F0 ADRP X0, 0x579000
	0x03BA27F4 LDR X0, [X0 + 0x9F8]
	0x03BA27F8 BL 0x1C16CF4
	0x03BA27FC MOVZ W8, 0x1
	0x03BA2800 STRB W8, [X24 + 0x38C]
	0x03BA2804 LDR X0, [X23]
	0x03BA2808 LDR W8, [X0 + 0xE0]
	0x03BA280C CBNZ W8, 0x3BA2818
	0x03BA2810 BL 0x1C16DFC
	0x03BA2814 LDR X0, [X23]
	0x03BA2818 ADRP X9, 0x5A7000
	0x03BA281C LDR X8, [X0 + 0xB8]
	0x03BA2820 LDR X9, [X9 + 0x3C8]
	0x03BA2824 MOV X0, X21
	0x03BA2828 MOV X1, X19
	0x03BA282C LDR X2, [X8 + 0x38]
	0x03BA2830 LDR X3, [X9]
	0x03BA2834 BL 0x21DD088
	0x03BA2838 MOVZ W8, 0x1
	0x03BA283C STRB W8, [X19 + 0x145]
	0x03BA2840 LDR X0, [X22]
	0x03BA2844 LDR X21, [X19 + 0x28]
	0x03BA2848 LDR X22, [X19 + 0x40]
	0x03BA284C LDR W8, [X0 + 0xE0]
	0x03BA2850 CBNZ W8, 0x3BA2858
	0x03BA2854 BL 0x1C16DFC
	0x03BA2858 MOV X0, X21
	0x03BA285C MOV X1, X22
	0x03BA2860 MOV X2, X31
	0x03BA2864 BL 0x3C354F8
	0x03BA2868 TBZ X0, 0x0, 0x3BA2910
	0x03BA286C LDR X8, [X20 + 0xB8]
	0x03BA2870 CBZ X8, 0x3BA288C
	0x03BA2874 LDR X9, [X8 + 0x18]
	0x03BA2878 LDR X0, [X8 + 0x40]
	0x03BA287C LDR X3, [X8 + 0x28]
	0x03BA2880 MOV X1, X21
	0x03BA2884 MOV X2, X19
	0x03BA2888 BLR X9
	0x03BA288C ADRP X22, 0x579000
	0x03BA2890 LDR X22, [X22 + 0x9F8]
	0x03BA2894 LDR X0, [X22]
	0x03BA2898 LDR W8, [X0 + 0xE0]
	0x03BA289C CBNZ W8, 0x3BA28A4
	0x03BA28A0 BL 0x1C16DFC
	0x03BA28A4 ADRP X23, 0x83F000
	0x03BA28A8 LDRB W8, [X23 + 0x388]
	0x03BA28AC CBNZ W8, 0x3BA28C4
	0x03BA28B0 ADRP X0, 0x579000
	0x03BA28B4 LDR X0, [X0 + 0x9F8]
	0x03BA28B8 BL 0x1C16CF4
	0x03BA28BC MOVZ W8, 0x1
	0x03BA28C0 STRB W8, [X23 + 0x388]
	0x03BA28C4 LDR X0, [X22]
	0x03BA28C8 LDR W8, [X0 + 0xE0]
	0x03BA28CC CBNZ W8, 0x3BA28D8
	0x03BA28D0 BL 0x1C16DFC
	0x03BA28D4 LDR X0, [X22]
	0x03BA28D8 ADRP X9, 0x5A7000
	0x03BA28DC LDR X8, [X0 + 0xB8]
	0x03BA28E0 LDR X9, [X9 + 0x3A8]
	0x03BA28E4 MOV X0, X21
	0x03BA28E8 MOV X1, X19
	0x03BA28EC LDR X2, [X8 + 0x20]
	0x03BA28F0 LDR X3, [X9]
	0x03BA28F4 BL 0x21DD088
	0x03BA28F8 MOV X0, X19
	0x03BA28FC MOV X1, X31
	0x03BA2900 MOV X2, X31
	0x03BA2904 STRB W31, [X19 + 0xF8]
	0x03BA2908 BL 0x3E4F3AC
	0x03BA290C STR X31, [X19 + 0x38]
	0x03BA2910 LDR X8, [X20 + 0xE0]
	0x03BA2914 CBZ X8, 0x3BA2930
	0x03BA2918 LDR X1, [X19 + 0x40]
	0x03BA291C LDR X9, [X8 + 0x18]
	0x03BA2920 LDR X0, [X8 + 0x40]
	0x03BA2924 LDR X3, [X8 + 0x28]
	0x03BA2928 MOV X2, X19
	0x03BA292C BLR X9
	0x03BA2930 ADRP X21, 0x579000
	0x03BA2934 LDR X21, [X21 + 0x9F8]
	0x03BA2938 LDR X20, [X19 + 0x40]
	0x03BA293C LDR X0, [X21]
	0x03BA2940 LDR W8, [X0 + 0xE0]
	0x03BA2944 CBNZ W8, 0x3BA294C
	0x03BA2948 BL 0x1C16DFC
	0x03BA294C ADRP X22, 0x83F000
	0x03BA2950 LDRB W8, [X22 + 0x38D]
	0x03BA2954 CBNZ W8, 0x3BA296C
	0x03BA2958 ADRP X0, 0x579000
	0x03BA295C LDR X0, [X0 + 0x9F8]
	0x03BA2960 BL 0x1C16CF4
	0x03BA2964 MOVZ W8, 0x1
	0x03BA2968 STRB W8, [X22 + 0x38D]
	0x03BA296C LDR X0, [X21]
	0x03BA2970 LDR W8, [X0 + 0xE0]
	0x03BA2974 CBNZ W8, 0x3BA2980
	0x03BA2978 BL 0x1C16DFC
	0x03BA297C LDR X0, [X21]
	0x03BA2980 ADRP X9, 0x5A7000
	0x03BA2984 LDR X8, [X0 + 0xB8]
	0x03BA2988 LDR X9, [X9 + 0x3D0]
	0x03BA298C MOV X0, X20
	0x03BA2990 MOV X1, X19
	0x03BA2994 LDR X2, [X8 + 0x40]
	0x03BA2998 LDR X3, [X9]
	0x03BA299C LDP X20, X19, [X31 + 0x30]
	0x03BA29A0 LDP X22, X21, [X31 + 0x20]
	0x03BA29A4 LDP X24, X23, [X31 + 0x10]
	0x03BA29A8 LDR X30, [X31 + 0x8]
	0x03BA29AC LDR V8, [X31], #0x40
	0x03BA29B0 B 0x21DD088
	0x03BA29B4 BL 0x1C16F20
	0x03BA29B8 SUB X31, X31, 0x70
	0x03BA29BC STP X30, X21, [X31 + 0x50]
	0x03BA29C0 STP X20, X19, [X31 + 0x60]
	0x03BA29C4 MOVI V0.2D, 0x0
	0x03BA29C8 STP V0, V0, [X31 + 0x30]
	0x03BA29CC STP V0, V0, [X31 + 0x10]
	0x03BA29D0 STR V0, [X31]
	0x03BA29D4 LDRB W8, [X1 + 0x8]
	0x03BA29D8 CBZ W8, 0x3BA2A94
	0x03BA29DC MOV X19, X1
	0x03BA29E0 LDR W1, [X1]
	0x03BA29E4 MOV X20, X0
	0x03BA29E8 BL 0x3BA14BC
	0x03BA29EC CBZ X0, 0x3BA2AA4
	0x03BA29F0 LDR X8, [X0]
	0x03BA29F4 MOV X21, X0
	0x03BA29F8 LDP X9, X1, [X8 + 0x178]
	0x03BA29FC BLR X9
	0x03BA2A00 MOV X0, X19
	0x03BA2A04 MOV X1, X21
	0x03BA2A08 BL 0x3B9A7E8
	0x03BA2A0C LDR W8, [X19 + 0x14]
	0x03BA2A10 CMP W8, 0x4
	0x03BA2A14 B.NE 0x3BA2A2C
	0x03BA2A18 MOVI V0.2D, 0x0
	0x03BA2A1C STP V0, V0, [X31 + 0x30]
	0x03BA2A20 STP V0, V0, [X31 + 0x10]
	0x03BA2A24 STR V0, [X31]
	0x03BA2A28 B 0x3BA2A3C
	0x03BA2A2C ADD X8, X31, 0x0
	0x03BA2A30 MOV X0, X20
	0x03BA2A34 MOV X1, X21
	0x03BA2A38 BL 0x3BA115C
	0x03BA2A3C ADD X0, X21, 0x50
	0x03BA2A40 ADD X1, X31, 0x0
	0x03BA2A44 MOVZ W2, 0x50
	0x03BA2A48 BL 0x3EB1AC0
	0x03BA2A4C STR W31, [X21 + 0x148]
	0x03BA2A50 LDR W1, [X19 + 0x4]
	0x03BA2A54 MOV X0, X20
	0x03BA2A58 MOV X2, X21
	0x03BA2A5C BL 0x3BA1590
	0x03BA2A60 MOV X0, X20
	0x03BA2A64 MOV X1, X21
	0x03BA2A68 BL 0x3BA1C64
	0x03BA2A6C FMOV S0, 1
	0x03BA2A70 MOVZ W2, 0x2
	0x03BA2A74 MOV X0, X20
	0x03BA2A78 MOV X1, X21
	0x03BA2A7C BL 0x3BA2678
	0x03BA2A80 MOV X0, X19
	0x03BA2A84 MOV X1, X21
	0x03BA2A88 BL 0x3B9A938
	0x03BA2A8C MOV X0, X19
	0x03BA2A90 BL 0x3B9A790
	0x03BA2A94 LDP X20, X19, [X31 + 0x60]
	0x03BA2A98 LDP X30, X21, [X31 + 0x50]
	0x03BA2A9C ADD X31, X31, 0x70
	0x03BA2AA0 RET
	0x03BA2AA4 BL 0x1C16F20
	0x03BA2AA8 SUB X31, X31, 0x100
	0x03BA2AAC STP D9, D8, [X31 + 0xA0]
	0x03BA2AB0 STR X29, [X31 + 0xB0]
	0x03BA2AB4 STP X30, X25, [X31 + 0xC0]
	0x03BA2AB8 STP X24, X23, [X31 + 0xD0]
	0x03BA2ABC STP X22, X21, [X31 + 0xE0]
	0x03BA2AC0 STP X20, X19, [X31 + 0xF0]
	0x03BA2AC4 ADRP X22, 0x840000
	0x03BA2AC8 ADRP X23, 0x5B9000
	0x03BA2ACC LDRB W8, [X22 + 0xC45]
	0x03BA2AD0 LDR X23, [X23 + 0x258]
	0x03BA2AD4 MOV W21, W2
	0x03BA2AD8 MOV X19, X1
	0x03BA2ADC MOV X20, X0
	0x03BA2AE0 TBNZ X8, 0x0, 0x3BA2B40
	0x03BA2AE4 ADRP X0, 0x57A000
	0x03BA2AE8 LDR X0, [X0 + 0x858]
	0x03BA2AEC BL 0x1C16CF4
	0x03BA2AF0 ADRP X0, 0x5BA000
	0x03BA2AF4 LDR X0, [X0 + 0xBE8]
	0x03BA2AF8 BL 0x1C16CF4
	0x03BA2AFC ADRP X0, 0x5BA000
	0x03BA2B00 LDR X0, [X0 + 0xBF0]
	0x03BA2B04 BL 0x1C16CF4
	0x03BA2B08 ADRP X0, 0x555000
	0x03BA2B0C LDR X0, [X0 + 0x978]
	0x03BA2B10 BL 0x1C16CF4
	0x03BA2B14 ADRP X0, 0x555000
	0x03BA2B18 LDR X0, [X0 + 0x980]
	0x03BA2B1C BL 0x1C16CF4
	0x03BA2B20 ADRP X0, 0x551000
	0x03BA2B24 LDR X0, [X0 + 0x598]
	0x03BA2B28 BL 0x1C16CF4
	0x03BA2B2C ADRP X0, 0x5B9000
	0x03BA2B30 LDR X0, [X0 + 0x258]
	0x03BA2B34 BL 0x1C16CF4
	0x03BA2B38 MOVZ W8, 0x1
	0x03BA2B3C STRB W8, [X22 + 0xC45]
	0x03BA2B40 LDR X0, [X23]
	0x03BA2B44 MOVI V0.2D, 0x0
	0x03BA2B48 STR X31, [X31 + 0xB8]
	0x03BA2B4C STP V0, V0, [X31 + 0x80]
	0x03BA2B50 STP V0, V0, [X31 + 0x60]
	0x03BA2B54 STR V0, [X31 + 0x5]
	0x03BA2B58 LDR W8, [X0 + 0xE0]
	0x03BA2B5C CBNZ W8, 0x3BA2B64
	0x03BA2B60 BL 0x1C16DFC
	0x03BA2B64 LDRB W8, [X19 + 0xAC]
	0x03BA2B68 CBNZ W8, 0x3BA2B70
	0x03BA2B6C TBZ X21, 0x0, 0x3BA2F1C
	0x03BA2B70 LDR X0, [X23]
	0x03BA2B74 LDR W8, [X0 + 0xE0]
	0x03BA2B78 CBNZ W8, 0x3BA2B80
	0x03BA2B7C BL 0x1C16DFC
	0x03BA2B80 LDR W1, [X19 + 0xA0]
	0x03BA2B84 MOV X0, X20
	0x03BA2B88 BL 0x3BA2F54
	0x03BA2B8C CBZ X0, 0x3BA2F50
	0x03BA2B90 LDR X8, [X0]
	0x03BA2B94 MOV X21, X0
	0x03BA2B98 ADD X24, X0, 0x104
	0x03BA2B9C LDP X9, X1, [X8 + 0x178]
	0x03BA2BA0 BLR X9
	0x03BA2BA4 MOV X0, X19
	0x03BA2BA8 MOV X1, X21
	0x03BA2BAC BL 0x3B9F6D8
	0x03BA2BB0 LDR V0, [X24 + 0x38]
	0x03BA2BB4 LDR V1, [X20 + 0x6C]
	0x03BA2BB8 ADD X8, X31, 0x0
	0x03BA2BBC MOV X0, X20
	0x03BA2BC0 MOV X1, X21
	0x00000000 INVALID
	0x03BA2BC8 STR D0, [X24 + 0x38]
	0x03BA2BCC STR W31, [X21 + 0x148]
	0x03BA2BD0 LDR V8, [X24]
	0x03BA2BD4 MVNI V0.2S, 0x80, 0x10
	0x03BA2BD8 STR D0, [X24]
	0x03BA2BDC BL 0x3BA115C
	0x03BA2BE0 ADD X22, X21, 0x50
	0x03BA2BE4 ADD X1, X31, 0x0
	0x03BA2BE8 MOVZ W2, 0x50
	0x03BA2BEC MOV X0, X22
	0x03BA2BF0 BL 0x3EB1AC0
	0x03BA2BF4 ADD X2, X31, 0xB8
	0x03BA2BF8 MOV X0, X20
	0x03BA2BFC MOV X1, X21
	0x03BA2C00 STR D8, [X24]
	0x03BA2C04 BL 0x3BA3028
	0x03BA2C08 TBZ X0, 0x0, 0x3BA2F04
	0x03BA2C0C ADD X0, X31, 0x50
	0x03BA2C10 MOVZ W2, 0x50
	0x03BA2C14 MOV X1, X22
	0x03BA2C18 BL 0x3EB1AC0
	0x03BA2C1C ADD X0, X31, 0x50
	0x03BA2C20 MOV X1, X31
	0x03BA2C24 BL 0x3E5AC40
	0x03BA2C28 TBZ X0, 0x0, 0x3BA2C7C
	0x03BA2C2C LDR X22, [X31 + 0xB8]
	0x03BA2C30 CBZ X22, 0x3BA2F50
	0x03BA2C34 LDP S1, S2, [X21 + 0x80]
	0x03BA2C38 LDR V0, [X21 + 0x7C]
	0x03BA2C3C MOV X0, X22
	0x03BA2C40 MOV X1, X31
	0x03BA2C44 BL 0x3C045DC
	0x03BA2C48 LDR X0, [X23]
	0x03BA2C4C MOV V8.16B, V0.16B
	0x03BA2C50 MOV V9.16B, V1.16B
	0x03BA2C54 LDR W8, [X0 + 0xE0]
	0x03BA2C58 CBNZ W8, 0x3BA2C60
	0x03BA2C5C BL 0x1C16DFC
	0x03BA2C60 LDRB W8, [X19 + 0xA8]

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x841000
	012 Move W8, [X21+3138]
	013 Move X19, X2
	014 Move W22, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x5A8000
	021 Move X0, [X0+896]
	022 Call 0x1C17CF4
	023 Move X0, 0x5A8000
	024 Move X0, [X0+904]
	025 Call 0x1C17CF4
	026 Move X0, 0x5A8000
	027 Move X0, [X0+912]
	028 Call 0x1C17CF4
	029 Move X0, 0x5A8000
	030 Move X0, [X0+920]
	031 Call 0x1C17CF4
	032 Move X0, 0x5A8000
	033 Move X0, [X0+928]
	034 Call 0x1C17CF4
	035 Move X0, 0x5A8000
	036 Move X0, [X0+936]
	037 Call 0x1C17CF4
	038 Move X0, 0x5A8000
	039 Move X0, [X0+944]
	040 Call 0x1C17CF4
	041 Move X0, 0x5A8000
	042 Move X0, [X0+952]
	043 Call 0x1C17CF4
	044 Move X0, 0x5A8000
	045 Move X0, [X0+960]
	046 Call 0x1C17CF4
	047 Move X0, 0x57A000
	048 Move X0, [X0+2552]
	049 Call 0x1C17CF4
	050 Move X0, 0x552000
	051 Move X0, [X0+1432]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+3138], W8
	055 Compare X19, 0
	056 JumpIfEqual {514}
	057 Move X21, [X19+80]
	058 Move TEMP, X22
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {282}
	062 Move W23, 1
	063 Move [X19+248], W23
	064 Move X25, 0x838000
	065 Move W8, [X25+1935]
	066 Add X24, X19, 260
	067 Compare W8, 0
	068 JumpIfNotEqual {73}
	069 Move X0, 0x55A000
	070 Move X0, [X0+3848]
	071 Call 0x1C17CF4
	072 Move [X25+1935], W23
	073 Move X8, 0x55A000
	074 Move X8, [X8+3848]
	075 Add X1, X19, 80
	076 Add X0, X19, 160
	077 Move W2, 80
	078 Move X8, [X8]
	079 Move X8, [X8+184]
	080 Move V1, [X8]
	081 Move [X19+325], W31
	082 Move V0, [X24]
	083 Move [X24+8], D1
	084 Move [X24+16], D0
	085 Call 0x3EB2AC0
	086 Move [X19+324], W23
	087 Move X25, 0x57A000
	088 Move X25, [X25+2552]
	089 Move X0, [X25]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X8, 0x5A8000
	095 Move X8, [X8+960]
	096 Move X0, X21
	097 Move X1, [X8]
	098 Call 0x21DEB64, X0
	099 Move X8, [X20+56]
	100 Compare X8, 0
	101 JumpIfEqual {514}
	102 Move X26, 0x552000
	103 Move X26, [X26+1432]
	104 Move X23, X0
	105 Move X24, [X8+64]
	106 Move X0, [X26]
	107 Move W9, [X0+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X23
	112 Move X1, X24
	113 Move X2, X31
	114 Call Object.op_Inequality, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {126}
	119 Move X0, [X20+56]
	120 Compare X0, 0
	121 JumpIfEqual {514}
	122 Move X1, X31
	123 Move X2, X19
	124 Move X3, X31
	125 Call EventSystem.SetSelectedGameObject, X0, X1, X2
	126 Move X8, [X20+176]
	127 Compare X8, 0
	128 JumpIfEqual {135}
	129 Move X9, [X8+24]
	130 Move X0, [X8+64]
	131 Move X3, [X8+40]
	132 Move X1, X21
	133 Move X2, X19
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X0, [X25]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X23, 0x840000
	141 Move W8, [X23+902]
	142 Compare W8, 0
	143 JumpIfNotEqual {149}
	144 Move X0, 0x57A000
	145 Move X0, [X0+2552]
	146 Call 0x1C17CF4
	147 Move W8, 1
	148 Move [X23+902], W8
	149 Move X0, [X25]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {155}
	153 Call 0x1C17DFC
	154 Move X0, [X25]
	155 Move X9, 0x5A8000
	156 Move X8, [X0+184]
	157 Move X9, [X9+904]
	158 Move X0, X21
	159 Move X1, X19
	160 Move X2, [X8+24]
	161 Move X3, [X9]
	162 Call 0x21DE8A8, X0, X1, X2
	163 Move X8, [X26]
	164 Move X23, X0
	165 Move W9, [X8+224]
	166 Compare W9, 0
	167 JumpIfNotEqual {170}
	168 Move X0, X8
	169 Call 0x1C17DFC
	170 Move X0, X23
	171 Move X1, X31
	172 Move X2, X31
	173 Call Object.op_Equality, X0, X1
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {189}
	178 Move X0, [X25]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X8, 0x5A8000
	184 Move X8, [X8+952]
	185 Move X0, X21
	186 Move X1, [X8]
	187 Call 0x21DEB64, X0
	188 Move X23, X0
	189 Move X0, X31
	190 Call Time.get_unscaledTime
	191 Move X0, [X26]
	192 Move X24, [X19+48]
	193 Move V8, V0
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X23
	199 Move X1, X24
	200 Move X2, X31
	201 Call Object.op_Equality, X0, X1
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {212}
	206 Move V0, [X19+308]
	207 Move V1, [X20+88]
	208 Subtract S0, S8, S0
	209 NotImplemented "Instruction FCMP not yet implemented."
	210 Move W8, [X19+312]
	211 Add W8, W8, 1
	212 Move W8, 1
	213 Move X0, X19
	214 Move X1, X23
	215 Move X2, X31
	216 Move [X19+312], W8
	217 Move [X19+308], S8
	218 Call PointerEventData.set_pointerPress, X0, X1
	219 Move [X19+56], X21
	220 Move X0, [X25]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X8, 0x5A8000
	226 Move X8, [X8+944]
	227 Move X0, X21
	228 Move X1, [X8]
	229 Call 0x21DEB64, X0
	230 Move [X19+64], X0
	231 Move X23, X0
	232 Move X0, [X26]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {237}
	236 Call 0x1C17DFC
	237 Move X0, X23
	238 Move X1, X31
	239 Move X2, X31
	240 Call Object.op_Inequality, X0, X1
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {282}
	245 Move X8, [X20+208]
	246 Compare X8, 0
	247 JumpIfEqual {254}
	248 Move X9, [X8+24]
	249 Move X0, [X8+64]
	250 Move X3, [X8+40]
	251 Move X1, X23
	252 Move X2, X19
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X0, [X25]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X24, 0x840000
	260 Move W8, [X24+903]
	261 Compare W8, 0
	262 JumpIfNotEqual {268}
	263 Move X0, 0x57A000
	264 Move X0, [X0+2552]
	265 Call 0x1C17CF4
	266 Move W8, 1
	267 Move [X24+903], W8
	268 Move X0, [X25]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {274}
	272 Call 0x1C17DFC
	273 Move X0, [X25]
	274 Move X9, 0x5A8000
	275 Move X8, [X0+184]
	276 Move X9, [X9+920]
	277 Move X0, X23
	278 Move X1, X19
	279 Move X2, [X8+48]
	280 Move X3, [X9]
	281 Call 0x21DE088, X0, X1, X2
	282 Move TEMP, X22
	283 And TEMP, TEMP, 2
	284 Compare TEMP, 2
	285 JumpIfNotEqual {503}
	286 Move X8, [X20+184]
	287 Move X23, [X19+40]
	288 Compare X8, 0
	289 JumpIfEqual {296}
	290 Move X9, [X8+24]
	291 Move X0, [X8+64]
	292 Move X3, [X8+40]
	293 Move X1, X23
	294 Move X2, X19
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Move X25, 0x57A000
	297 Move X25, [X25+2552]
	298 Move X0, [X25]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Move X22, 0x840000
	304 Move W8, [X22+904]
	305 Compare W8, 0
	306 JumpIfNotEqual {312}
	307 Move X0, 0x57A000
	308 Move X0, [X0+2552]
	309 Call 0x1C17CF4
	310 Move W8, 1
	311 Move [X22+904], W8
	312 Move X0, [X25]
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {318}
	316 Call 0x1C17DFC
	317 Move X0, [X25]
	318 Move X9, 0x5A8000
	319 Move X8, [X0+184]
	320 Move X9, [X9+936]
	321 Move X0, X23
	322 Move X1, X19
	323 Move X2, [X8+32]
	324 Move X3, [X9]
	325 Call 0x21DE088, X0, X1, X2
	326 Move X8, 0x5A8000
	327 Move X8, [X8+952]
	328 Move X0, X21
	329 Move X1, [X8]
	330 Call 0x21DEB64, X0
	331 Move X26, 0x552000
	332 Move X26, [X26+1432]
	333 Move X22, [X19+64]
	334 Move X24, X0
	335 Move X8, [X26]
	336 Move W9, [X8+224]
	337 Compare W9, 0
	338 JumpIfNotEqual {341}
	339 Move X0, X8
	340 Call 0x1C17DFC
	341 Move X0, X23
	342 Move X1, X24
	343 Move X2, X31
	344 Call Object.op_Equality, X0, X1
	345 Move TEMP, X0
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfNotEqual {389}
	349 Move W8, [X19+248]
	350 Compare W8, 0
	351 JumpIfEqual {389}
	352 Move X8, [X20+192]
	353 Compare X8, 0
	354 JumpIfEqual {361}
	355 Move X9, [X8+24]
	356 Move X0, [X8+64]
	357 Move X3, [X8+40]
	358 Move X1, X23
	359 Move X2, X19
	360 NotImplemented "Instruction BLR not yet implemented."
	361 Move X0, [X25]
	362 Move W8, [X0+224]
	363 Compare W8, 0
	364 JumpIfNotEqual {366}
	365 Call 0x1C17DFC
	366 Move X21, 0x840000
	367 Move W8, [X21+905]
	368 Compare W8, 0
	369 JumpIfNotEqual {375}
	370 Move X0, 0x57A000
	371 Move X0, [X0+2552]
	372 Call 0x1C17CF4
	373 Move W8, 1
	374 Move [X21+905], W8
	375 Move X0, [X25]
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {381}
	379 Call 0x1C17DFC
	380 Move X0, [X25]
	381 Move X9, 0x5A8000
	382 Move X8, [X0+184]
	383 Move X9, [X9+928]
	384 Move X0, X23
	385 Move X1, X19
	386 Move X2, [X8+40]
	387 Move X3, [X9]
	388 Call 0x21DE088, X0, X1, X2
	389 Move W8, [X19+325]
	390 Compare W8, 0
	391 JumpIfEqual {442}
	392 Move X0, [X26]
	393 Move W8, [X0+224]
	394 Compare W8, 0
	395 JumpIfNotEqual {397}
	396 Call 0x1C17DFC
	397 Move X0, X22
	398 Move X1, X31
	399 Move X2, X31
	400 Call Object.op_Inequality, X0, X1
	401 Move TEMP, X0
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfNotEqual {442}
	405 Move X8, [X20+240]
	406 Compare X8, 0
	407 JumpIfEqual {414}
	408 Move X9, [X8+24]
	409 Move X0, [X8+64]
	410 Move X3, [X8+40]
	411 Move X1, X21
	412 Move X2, X19
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move X0, [X25]
	415 Move W8, [X0+224]
	416 Compare W8, 0
	417 JumpIfNotEqual {419}
	418 Call 0x1C17DFC
	419 Move X23, 0x840000
	420 Move W8, [X23+906]
	421 Compare W8, 0
	422 JumpIfNotEqual {428}
	423 Move X0, 0x57A000
	424 Move X0, [X0+2552]
	425 Call 0x1C17CF4
	426 Move W8, 1
	427 Move [X23+906], W8
	428 Move X0, [X25]
	429 Move W8, [X0+224]
	430 Compare W8, 0
	431 JumpIfNotEqual {434}
	432 Call 0x1C17DFC
	433 Move X0, [X25]
	434 Move X9, 0x5A8000
	435 Move X8, [X0+184]
	436 Move X9, [X9+896]
	437 Move X0, X21
	438 Move X1, X19
	439 Move X2, [X8+80]
	440 Move X3, [X9]
	441 Call 0x21DE8A8, X0, X1, X2
	442 Move X0, X19
	443 Move X1, X31
	444 Move X2, X31
	445 Move [X19+248], W31
	446 Call PointerEventData.set_pointerPress, X0, X1
	447 Move W8, [X19+325]
	448 Move [X19+56], X31
	449 Compare W8, 0
	450 JumpIfEqual {501}
	451 Move X0, [X26]
	452 Move W8, [X0+224]
	453 Compare W8, 0
	454 JumpIfNotEqual {456}
	455 Call 0x1C17DFC
	456 Move X0, X22
	457 Move X1, X31
	458 Move X2, X31
	459 Call Object.op_Inequality, X0, X1
	460 Move TEMP, X0
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfNotEqual {501}
	464 Move X8, [X20+232]
	465 Compare X8, 0
	466 JumpIfEqual {473}
	467 Move X9, [X8+24]
	468 Move X0, [X8+64]
	469 Move X3, [X8+40]
	470 Move X1, X22
	471 Move X2, X19
	472 NotImplemented "Instruction BLR not yet implemented."
	473 Move X0, [X25]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {478}
	477 Call 0x1C17DFC
	478 Move X20, 0x840000
	479 Move W8, [X20+907]
	480 Compare W8, 0
	481 JumpIfNotEqual {487}
	482 Move X0, 0x57A000
	483 Move X0, [X0+2552]
	484 Call 0x1C17CF4
	485 Move W8, 1
	486 Move [X20+907], W8
	487 Move X0, [X25]
	488 Move W8, [X0+224]
	489 Compare W8, 0
	490 JumpIfNotEqual {493}
	491 Call 0x1C17DFC
	492 Move X0, [X25]
	493 Move X9, 0x5A8000
	494 Move X8, [X0+184]
	495 Move X9, [X9+912]
	496 Move X0, X22
	497 Move X1, X19
	498 Move X2, [X8+72]
	499 Move X3, [X9]
	500 Call 0x21DE088, X0, X1, X2
	501 Move [X19+325], W31
	502 Move [X19+64], X31
	503 Move X20, [X31+64]
	504 Move X19, [X31+72]
	505 Move X22, [X31+48]
	506 Move X21, [X31+56]
	507 Move X24, [X31+32]
	508 Move X23, [X31+40]
	509 Move X26, [X31+16]
	510 Move X25, [X31+24]
	511 Move X30, [X31+8]
	512 Move V8, [X31+80]
	513 Return 
	514 Call 0x1C17F20

Method: System.Void ProcessPointerButtonDrag(UnityEngine.EventSystems.PointerEventData eventData, UnityEngine.InputSystem.UI.UIPointerType pointerType, System.Single pixelDragThresholdMultiplier = 1)

Disassembly:
	0x03BA3678 LDR X8, [X8 + 0xC08]
	0x03BA367C MOV W1, W19
	0x03BA3680 LDP X20, X19, [X31 + 0x10]
	0x03BA3684 LDR X2, [X8]
	0x03BA3688 LDP X30, X21, [X31], #0x20
	0x03BA368C B 0x2A14A88
	0x03BA3690 BL 0x1C16F20
	0x03BA3694 STR X30, [X31 - 0x40]!
	0x03BA3698 STP X24, X23, [X31 + 0x10]
	0x03BA369C STP X22, X21, [X31 + 0x20]
	0x03BA36A0 STP X20, X19, [X31 + 0x30]
	0x03BA36A4 ADRP X21, 0x83F000
	0x03BA36A8 LDRB W8, [X21 + 0xC4C]
	0x03BA36AC MOV X19, X1
	0x03BA36B0 MOV X20, X0
	0x03BA36B4 TBNZ X8, 0x0, 0x3BA36CC
	0x03BA36B8 ADRP X0, 0x5B9000
	0x03BA36BC LDR X0, [X0 + 0xC18]
	0x03BA36C0 BL 0x1C16CF4
	0x03BA36C4 MOVZ W8, 0x1
	0x03BA36C8 STRB W8, [X21 + 0xC4C]
	0x03BA36CC ADRP X24, 0x5B9000
	0x03BA36D0 LDR X21, [X20 + 0x98]!
	0x03BA36D4 LDR X24, [X24 + 0xC18]
	0x03BA36D8 MOV X0, X21
	0x03BA36DC MOV X1, X19
	0x03BA36E0 MOV X2, X31
	0x03BA36E4 BL 0x33C0DE4
	0x03BA36E8 CBZ X0, 0x3BA3708
	0x03BA36EC LDR X23, [X24]
	0x03BA36F0 MOV X22, X0
	0x03BA36F4 MOV X1, X23
	0x03BA36F8 BL 0x1C16E00
	0x03BA36FC MOV X1, X0
	0x03BA3700 CBNZ X0, 0x3BA370C
	0x03BA3704 B 0x3BA3738
	0x03BA3708 MOV X1, X31
	0x03BA370C MOV X0, X20
	0x03BA3710 MOV X2, X21
	0x03BA3714 BL 0x1C24138
	0x03BA3718 CMP X21, X0
	0x03BA371C MOV X21, X0
	0x03BA3720 B.NE 0x3BA36D8
	0x03BA3724 LDP X20, X19, [X31 + 0x30]
	0x03BA3728 LDP X22, X21, [X31 + 0x20]
	0x03BA372C LDP X24, X23, [X31 + 0x10]
	0x03BA3730 LDR X30, [X31], #0x40
	0x03BA3734 RET
	0x03BA3738 MOV X0, X22
	0x03BA373C MOV X1, X23
	0x03BA3740 BL 0x1C171E0
	0x03BA3744 STR X30, [X31 - 0x40]!
	0x03BA3748 STP X24, X23, [X31 + 0x10]
	0x03BA374C STP X22, X21, [X31 + 0x20]
	0x03BA3750 STP X20, X19, [X31 + 0x30]
	0x03BA3754 ADRP X21, 0x83F000
	0x03BA3758 LDRB W8, [X21 + 0xC4D]
	0x03BA375C MOV X19, X1
	0x03BA3760 MOV X20, X0
	0x03BA3764 TBNZ X8, 0x0, 0x3BA377C
	0x03BA3768 ADRP X0, 0x5B9000
	0x03BA376C LDR X0, [X0 + 0xC18]
	0x03BA3770 BL 0x1C16CF4
	0x03BA3774 MOVZ W8, 0x1
	0x03BA3778 STRB W8, [X21 + 0xC4D]
	0x03BA377C ADRP X24, 0x5B9000
	0x03BA3780 LDR X21, [X20 + 0x98]!
	0x03BA3784 LDR X24, [X24 + 0xC18]
	0x03BA3788 MOV X0, X21
	0x03BA378C MOV X1, X19
	0x03BA3790 MOV X2, X31
	0x03BA3794 BL 0x33C0FDC
	0x03BA3798 CBZ X0, 0x3BA37B8
	0x03BA379C LDR X23, [X24]
	0x03BA37A0 MOV X22, X0
	0x03BA37A4 MOV X1, X23
	0x03BA37A8 BL 0x1C16E00
	0x03BA37AC MOV X1, X0
	0x03BA37B0 CBNZ X0, 0x3BA37BC
	0x03BA37B4 B 0x3BA37E8
	0x03BA37B8 MOV X1, X31
	0x03BA37BC MOV X0, X20
	0x03BA37C0 MOV X2, X21
	0x03BA37C4 BL 0x1C24138
	0x03BA37C8 CMP X21, X0
	0x03BA37CC MOV X21, X0
	0x03BA37D0 B.NE 0x3BA3788
	0x03BA37D4 LDP X20, X19, [X31 + 0x30]
	0x03BA37D8 LDP X22, X21, [X31 + 0x20]
	0x03BA37DC LDP X24, X23, [X31 + 0x10]
	0x03BA37E0 LDR X30, [X31], #0x40
	0x03BA37E4 RET
	0x03BA37E8 MOV X0, X22
	0x03BA37EC MOV X1, X23
	0x03BA37F0 BL 0x1C171E0
	0x03BA37F4 STR X30, [X31 - 0x40]!
	0x03BA37F8 STP X24, X23, [X31 + 0x10]
	0x03BA37FC STP X22, X21, [X31 + 0x20]
	0x03BA3800 STP X20, X19, [X31 + 0x30]
	0x03BA3804 ADRP X21, 0x83F000
	0x03BA3808 LDRB W8, [X21 + 0xC4E]
	0x03BA380C MOV X19, X1
	0x03BA3810 MOV X20, X0
	0x03BA3814 TBNZ X8, 0x0, 0x3BA382C
	0x03BA3818 ADRP X0, 0x5B9000
	0x03BA381C LDR X0, [X0 + 0xC20]
	0x03BA3820 BL 0x1C16CF4
	0x03BA3824 MOVZ W8, 0x1
	0x03BA3828 STRB W8, [X21 + 0xC4E]
	0x03BA382C ADRP X24, 0x5B9000
	0x03BA3830 LDR X21, [X20 + 0xA0]!
	0x03BA3834 LDR X24, [X24 + 0xC20]
	0x03BA3838 MOV X0, X21
	0x03BA383C MOV X1, X19
	0x03BA3840 MOV X2, X31
	0x03BA3844 BL 0x33C0DE4
	0x03BA3848 CBZ X0, 0x3BA3868
	0x03BA384C LDR X23, [X24]
	0x03BA3850 MOV X22, X0
	0x03BA3854 MOV X1, X23
	0x03BA3858 BL 0x1C16E00
	0x03BA385C MOV X1, X0
	0x03BA3860 CBNZ X0, 0x3BA386C
	0x03BA3864 B 0x3BA3898
	0x03BA3868 MOV X1, X31
	0x03BA386C MOV X0, X20
	0x03BA3870 MOV X2, X21
	0x03BA3874 BL 0x1C24138
	0x03BA3878 CMP X21, X0
	0x03BA387C MOV X21, X0
	0x03BA3880 B.NE 0x3BA3838
	0x03BA3884 LDP X20, X19, [X31 + 0x30]
	0x03BA3888 LDP X22, X21, [X31 + 0x20]
	0x03BA388C LDP X24, X23, [X31 + 0x10]
	0x03BA3890 LDR X30, [X31], #0x40
	0x03BA3894 RET
	0x03BA3898 MOV X0, X22
	0x03BA389C MOV X1, X23
	0x03BA38A0 BL 0x1C171E0
	0x03BA38A4 STR X30, [X31 - 0x40]!
	0x03BA38A8 STP X24, X23, [X31 + 0x10]
	0x03BA38AC STP X22, X21, [X31 + 0x20]
	0x03BA38B0 STP X20, X19, [X31 + 0x30]
	0x03BA38B4 ADRP X21, 0x83F000
	0x03BA38B8 LDRB W8, [X21 + 0xC4F]
	0x03BA38BC MOV X19, X1
	0x03BA38C0 MOV X20, X0
	0x03BA38C4 TBNZ X8, 0x0, 0x3BA38DC
	0x03BA38C8 ADRP X0, 0x5B9000
	0x03BA38CC LDR X0, [X0 + 0xC20]
	0x03BA38D0 BL 0x1C16CF4
	0x03BA38D4 MOVZ W8, 0x1
	0x03BA38D8 STRB W8, [X21 + 0xC4F]
	0x03BA38DC ADRP X24, 0x5B9000
	0x03BA38E0 LDR X21, [X20 + 0xA0]!
	0x03BA38E4 LDR X24, [X24 + 0xC20]
	0x03BA38E8 MOV X0, X21
	0x03BA38EC MOV X1, X19
	0x03BA38F0 MOV X2, X31
	0x03BA38F4 BL 0x33C0FDC
	0x03BA38F8 CBZ X0, 0x3BA3918
	0x03BA38FC LDR X23, [X24]
	0x03BA3900 MOV X22, X0
	0x03BA3904 MOV X1, X23
	0x03BA3908 BL 0x1C16E00
	0x03BA390C MOV X1, X0
	0x03BA3910 CBNZ X0, 0x3BA391C
	0x03BA3914 B 0x3BA3948
	0x03BA3918 MOV X1, X31
	0x03BA391C MOV X0, X20
	0x03BA3920 MOV X2, X21
	0x03BA3924 BL 0x1C24138
	0x03BA3928 CMP X21, X0
	0x03BA392C MOV X21, X0
	0x03BA3930 B.NE 0x3BA38E8
	0x03BA3934 LDP X20, X19, [X31 + 0x30]
	0x03BA3938 LDP X22, X21, [X31 + 0x20]
	0x03BA393C LDP X24, X23, [X31 + 0x10]
	0x03BA3940 LDR X30, [X31], #0x40
	0x03BA3944 RET
	0x03BA3948 MOV X0, X22
	0x03BA394C MOV X1, X23
	0x03BA3950 BL 0x1C171E0
	0x03BA3954 STR X30, [X31 - 0x40]!
	0x03BA3958 STP X24, X23, [X31 + 0x10]
	0x03BA395C STP X22, X21, [X31 + 0x20]
	0x03BA3960 STP X20, X19, [X31 + 0x30]
	0x03BA3964 ADRP X21, 0x83F000
	0x03BA3968 LDRB W8, [X21 + 0xC50]
	0x03BA396C MOV X19, X1
	0x03BA3970 MOV X20, X0
	0x03BA3974 TBNZ X8, 0x0, 0x3BA398C
	0x03BA3978 ADRP X0, 0x5B9000
	0x03BA397C LDR X0, [X0 + 0xC20]
	0x03BA3980 BL 0x1C16CF4
	0x03BA3984 MOVZ W8, 0x1
	0x03BA3988 STRB W8, [X21 + 0xC50]
	0x03BA398C ADRP X24, 0x5B9000
	0x03BA3990 LDR X21, [X20 + 0xA8]!
	0x03BA3994 LDR X24, [X24 + 0xC20]
	0x03BA3998 MOV X0, X21
	0x03BA399C MOV X1, X19
	0x03BA39A0 MOV X2, X31
	0x03BA39A4 BL 0x33C0DE4
	0x03BA39A8 CBZ X0, 0x3BA39C8
	0x03BA39AC LDR X23, [X24]
	0x03BA39B0 MOV X22, X0
	0x03BA39B4 MOV X1, X23

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x840000
	010 Move W8, [X22+3139]
	011 Move V8, V0
	012 Move W21, W2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x5A7000
	020 Move X0, [X0+968]
	021 Call 0x1C17CF4
	022 Move X0, 0x5A7000
	023 Move X0, [X0+976]
	024 Call 0x1C17CF4
	025 Move X0, 0x5A7000
	026 Move X0, [X0+936]
	027 Call 0x1C17CF4
	028 Move X0, 0x579000
	029 Move X0, [X0+2552]
	030 Call 0x1C17CF4
	031 Move X0, 0x551000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3139], W8
	036 Compare X19, 0
	037 JumpIfEqual {245}
	038 Move X0, X19
	039 Move X1, X31
	040 Call PointerEventData.IsPointerMoving, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {65}
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X31
	047 Call Cursor.get_lockState
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X22, 0x551000
	050 Move X22, [X22+1432]
	051 Move X21, [X19+64]
	052 Move X0, [X22]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X21
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {74}
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+8]
	072 Move V8, [X31+64]
	073 Return 
	074 Move W8, [X19+325]
	075 Compare W8, 0
	076 JumpIfNotEqual {136}
	077 Move X8, [X20+56]
	078 Compare X8, 0
	079 JumpIfEqual {245}
	080 Move W9, [X19+324]
	081 Compare W9, 0
	082 JumpIfEqual {94}
	083 Add X9, X19, 260
	084 Move V0, [X8+60]
	085 Move V1, [X9+16]
	086 Move V2, [X9]
	087 NotImplemented "Instruction SCVTF not yet implemented."
	088 Multiply S0, S0, S8
	089 Subtract V1, V1, V2
	090 NotImplemented "Instruction INVALID not yet implemented."
	091 NotImplemented "Instruction FADDP not yet implemented."
	092 Multiply S0, S0, S0
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Move X8, [X20+216]
	095 Move X21, [X19+64]
	096 Compare X8, 0
	097 JumpIfEqual {104}
	098 Move X9, [X8+24]
	099 Move X0, [X8+64]
	100 Move X3, [X8+40]
	101 Move X1, X21
	102 Move X2, X19
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X23, 0x579000
	105 Move X23, [X23+2552]
	106 Move X0, [X23]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X24, 0x83F000
	112 Move W8, [X24+908]
	113 Compare W8, 0
	114 JumpIfNotEqual {120}
	115 Move X0, 0x579000
	116 Move X0, [X0+2552]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X24+908], W8
	120 Move X0, [X23]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X23]
	126 Move X9, 0x5A7000
	127 Move X8, [X0+184]
	128 Move X9, [X9+968]
	129 Move X0, X21
	130 Move X1, X19
	131 Move X2, [X8+56]
	132 Move X3, [X9]
	133 Call 0x21DE088, X0, X1, X2
	134 Move W8, 1
	135 Move [X19+325], W8
	136 Move X0, [X22]
	137 Move X21, [X19+40]
	138 Move X22, [X19+64]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X21
	144 Move X1, X22
	145 Move X2, X31
	146 Call Object.op_Inequality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {196}
	151 Move X8, [X20+184]
	152 Compare X8, 0
	153 JumpIfEqual {160}
	154 Move X9, [X8+24]
	155 Move X0, [X8+64]
	156 Move X3, [X8+40]
	157 Move X1, X21
	158 Move X2, X19
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X22, 0x579000
	161 Move X22, [X22+2552]
	162 Move X0, [X22]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X23, 0x83F000
	168 Move W8, [X23+904]
	169 Compare W8, 0
	170 JumpIfNotEqual {176}
	171 Move X0, 0x579000
	172 Move X0, [X0+2552]
	173 Call 0x1C17CF4
	174 Move W8, 1
	175 Move [X23+904], W8
	176 Move X0, [X22]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {182}
	180 Call 0x1C17DFC
	181 Move X0, [X22]
	182 Move X9, 0x5A7000
	183 Move X8, [X0+184]
	184 Move X9, [X9+936]
	185 Move X0, X21
	186 Move X1, X19
	187 Move X2, [X8+32]
	188 Move X3, [X9]
	189 Call 0x21DE088, X0, X1, X2
	190 Move X0, X19
	191 Move X1, X31
	192 Move X2, X31
	193 Move [X19+248], W31
	194 Call PointerEventData.set_pointerPress, X0, X1
	195 Move [X19+56], X31
	196 Move X8, [X20+224]
	197 Compare X8, 0
	198 JumpIfEqual {205}
	199 Move X1, [X19+64]
	200 Move X9, [X8+24]
	201 Move X0, [X8+64]
	202 Move X3, [X8+40]
	203 Move X2, X19
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X21, 0x579000
	206 Move X21, [X21+2552]
	207 Move X20, [X19+64]
	208 Move X0, [X21]
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {213}
	212 Call 0x1C17DFC
	213 Move X22, 0x83F000
	214 Move W8, [X22+909]
	215 Compare W8, 0
	216 JumpIfNotEqual {222}
	217 Move X0, 0x579000
	218 Move X0, [X0+2552]
	219 Call 0x1C17CF4
	220 Move W8, 1
	221 Move [X22+909], W8
	222 Move X0, [X21]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {228}
	226 Call 0x1C17DFC
	227 Move X0, [X21]
	228 Move X9, 0x5A7000
	229 Move X8, [X0+184]
	230 Move X9, [X9+976]
	231 Move X0, X20
	232 Move X1, X19
	233 Move X2, [X8+64]
	234 Move X3, [X9]
	235 Move X20, [X31+48]
	236 Move X19, [X31+56]
	237 Move X22, [X31+32]
	238 Move X21, [X31+40]
	239 Move X24, [X31+16]
	240 Move X23, [X31+24]
	241 Move X30, [X31+8]
	242 Move V8, [X31+64]
	243 Call 0x21DE088, X0, X1, X2
	244 Return 
	245 Call 0x1C17F20

Method: System.Void ProcessScrollWheel(UnityEngine.EventSystems.PointerEventData eventData)

Disassembly:
	0x03BA34C8 CBZ X0, 0x3BA3594
	0x03BA34CC LDR X8, [X0]
	0x03BA34D0 MOV X22, X0
	0x03BA34D4 LDP X9, X1, [X8 + 0x178]
	0x03BA34D8 BLR X9
	0x03BA34DC STP S11, S10, [X22 + 0x20]
	0x03BA34E0 STR W25, [X22 + 0x28]
	0x03BA34E4 LDR X8, [X21 + 0x108]
	0x03BA34E8 CBZ X8, 0x3BA3504
	0x03BA34EC LDR X9, [X8 + 0x18]
	0x03BA34F0 LDR X0, [X8 + 0x40]
	0x03BA34F4 LDR X3, [X8 + 0x28]
	0x03BA34F8 MOV X1, X20
	0x03BA34FC MOV X2, X22
	0x03BA3500 BLR X9
	0x03BA3504 ADRP X23, 0x578000
	0x03BA3508 LDR X23, [X23 + 0x9F8]
	0x03BA350C LDR X0, [X23]
	0x03BA3510 LDR W8, [X0 + 0xE0]
	0x03BA3514 CBNZ W8, 0x3BA351C
	0x03BA3518 BL 0x1C16DFC
	0x03BA351C ADRP X24, 0x83E000
	0x03BA3520 LDRB W8, [X24 + 0x390]
	0x03BA3524 CBNZ W8, 0x3BA353C
	0x03BA3528 ADRP X0, 0x578000
	0x03BA352C LDR X0, [X0 + 0x9F8]
	0x03BA3530 BL 0x1C16CF4
	0x03BA3534 MOVZ W8, 0x1
	0x03BA3538 STRB W8, [X24 + 0x390]
	0x03BA353C LDR X0, [X23]
	0x03BA3540 LDR W8, [X0 + 0xE0]
	0x03BA3544 CBNZ W8, 0x3BA3550
	0x03BA3548 BL 0x1C16DFC
	0x03BA354C LDR X0, [X23]
	0x03BA3550 ADRP X9, 0x5A6000
	0x03BA3554 LDR X8, [X0 + 0xB8]
	0x03BA3558 LDR X9, [X9 + 0x420]
	0x03BA355C MOV X0, X20
	0x03BA3560 MOV X1, X22
	0x03BA3564 LDR X2, [X8 + 0x78]
	0x03BA3568 LDR X3, [X9]
	0x03BA356C BL 0x21DD088
	0x03BA3570 LDR X8, [X22]
	0x03BA3574 MOV X0, X22
	0x03BA3578 LDP X9, X1, [X8 + 0x198]
	0x03BA357C BLR X9
	0x03BA3580 ADD W23, W26, 0x1
	0x03BA3584 MOV V9.16B, V8.16B
	0x03BA3588 MOV W24, W25
	0x03BA358C TBZ X0, 0x0, 0x3BA32B4
	0x03BA3590 B 0x3BA343C
	0x03BA3594 BL 0x1C16F20
	0x03BA3598 STP X30, X21, [X31 - 0x20]!
	0x03BA359C STP X20, X19, [X31 + 0x10]
	0x03BA35A0 ADRP X20, 0x83F000
	0x03BA35A4 LDRB W8, [X20 + 0xC4B]
	0x03BA35A8 MOV X19, X0
	0x03BA35AC TBNZ X8, 0x0, 0x3BA35C4
	0x03BA35B0 ADRP X0, 0x5B9000
	0x03BA35B4 LDR X0, [X0 + 0xC00]
	0x03BA35B8 BL 0x1C16CF4
	0x03BA35BC MOVZ W8, 0x1
	0x03BA35C0 STRB W8, [X20 + 0xC4B]
	0x03BA35C4 LDR X20, [X19 + 0x80]
	0x03BA35C8 CBNZ X20, 0x3BA35F4
	0x03BA35CC ADRP X8, 0x5B9000
	0x03BA35D0 LDR X21, [X19 + 0x38]
	0x03BA35D4 LDR X8, [X8 + 0xC00]
	0x03BA35D8 LDR X0, [X8]
	0x03BA35DC BL 0x1C16F10
	0x03BA35E0 MOV X1, X21
	0x03BA35E4 MOV X2, X31
	0x03BA35E8 MOV X20, X0
	0x03BA35EC BL 0x3E4EB50
	0x03BA35F0 STR X20, [X19 + 0x80]
	0x03BA35F4 MOV X0, X20
	0x03BA35F8 LDP X20, X19, [X31 + 0x10]
	0x03BA35FC LDP X30, X21, [X31], #0x20
	0x03BA3600 RET
	0x03BA3604 STP X30, X21, [X31 - 0x20]!
	0x03BA3608 STP X20, X19, [X31 + 0x10]
	0x03BA360C ADRP X21, 0x83F000
	0x03BA3610 LDRB W8, [X21 + 0xC48]
	0x03BA3614 MOV W19, W1
	0x03BA3618 MOV X20, X0
	0x03BA361C TBNZ X8, 0x0, 0x3BA3640
	0x03BA3620 ADRP X0, 0x5B9000
	0x03BA3624 LDR X0, [X0 + 0xC08]
	0x03BA3628 BL 0x1C16CF4
	0x03BA362C ADRP X0, 0x5B9000
	0x03BA3630 LDR X0, [X0 + 0xC10]
	0x03BA3634 BL 0x1C16CF4
	0x03BA3638 MOVZ W8, 0x1
	0x03BA363C STRB W8, [X21 + 0xC48]
	0x03BA3640 LDR X0, [X20 + 0x90]
	0x03BA3644 CBZ X0, 0x3BA3690
	0x03BA3648 ADRP X8, 0x5B9000
	0x03BA364C LDR X8, [X8 + 0xC10]
	0x03BA3650 MOV W1, W19
	0x03BA3654 LDR X2, [X8]
	0x03BA3658 BL 0x2A14A88
	0x03BA365C TBZ X0, 0x0, 0x3BA366C
	0x03BA3660 LDP X20, X19, [X31 + 0x10]
	0x03BA3664 LDP X30, X21, [X31], #0x20
	0x03BA3668 RET
	0x03BA366C LDR X0, [X20 + 0x88]
	0x03BA3670 CBZ X0, 0x3BA3690
	0x03BA3674 ADRP X8, 0x5B9000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x840000
	008 Move W8, [X21+3140]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5A7000
	016 Move X0, [X0+984]
	017 Call 0x1C17CF4
	018 Move X0, 0x5A7000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move X0, 0x579000
	022 Move X0, [X0+2552]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3140], W8
	026 Compare X19, 0
	027 JumpIfEqual {124}
	028 Move V0, [X19+316]
	029 Move V1, [X19+320]
	030 Move X21, 0x837000
	031 Move W8, [X21+1450]
	032 Multiply S0, S0, S0
	033 Multiply S1, S1, S1
	034 Add S8, S0, S1
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0x558000
	038 Move X0, [X0+1208]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1450], W8
	042 Move X8, 0x558000
	043 Move X8, [X8+1208]
	044 Move X9, -51085312
	045 Move V0, [X9+576]
	046 NotImplemented "Instruction FABS not yet implemented."
	047 Move X8, [X8]
	048 Move S2, W31
	049 NotImplemented "Instruction FMAXNM not yet implemented."
	050 Multiply S0, S1, S0
	051 Move X8, [X8+184]
	052 Move S1, 8
	053 Move V3, [X8]
	054 Multiply S1, S3, S1
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction FCSEL not yet implemented."
	057 NotImplemented "Instruction FABD not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Move X22, 0x579000
	060 Move X22, [X22+2552]
	061 Move X21, [X19+32]
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X8, 0x5A7000
	068 Move X8, [X8+992]
	069 Move X0, X21
	070 Move X1, [X8]
	071 Call 0x21DEB64, X0
	072 Move X8, [X20+248]
	073 Move X20, X0
	074 Compare X8, 0
	075 JumpIfEqual {82}
	076 Move X9, [X8+24]
	077 Move X0, [X8+64]
	078 Move X3, [X8+40]
	079 Move X1, X20
	080 Move X2, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X0, [X22]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X21, 0x83F000
	088 Move W8, [X21+910]
	089 Compare W8, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0x579000
	092 Move X0, [X0+2552]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X21+910], W8
	096 Move X0, [X22]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X22]
	102 Move X9, 0x5A7000
	103 Move X8, [X0+184]
	104 Move X9, [X9+984]
	105 Move X0, X20
	106 Move X1, X19
	107 Move X2, [X8+88]
	108 Move X3, [X9]
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X22, [X31+16]
	112 Move X21, [X31+24]
	113 Move X30, [X31+8]
	114 Move V8, [X31+48]
	115 Call 0x21DE8A8, X0, X1, X2
	116 Return 
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move X30, [X31+8]
	122 Move V8, [X31+48]
	123 Return 
	124 Call 0x1C17F20

Method: System.Void ProcessTouch(ref UnityEngine.XR.Interaction.Toolkit.UI.TouchModel touchState)

Disassembly:
	0x03BA39B8 BL 0x1C16E00
	0x03BA39BC MOV X1, X0
	0x03BA39C0 CBNZ X0, 0x3BA39CC
	0x03BA39C4 B 0x3BA39F8
	0x03BA39C8 MOV X1, X31
	0x03BA39CC MOV X0, X20
	0x03BA39D0 MOV X2, X21
	0x03BA39D4 BL 0x1C24138
	0x03BA39D8 CMP X21, X0
	0x03BA39DC MOV X21, X0
	0x03BA39E0 B.NE 0x3BA3998
	0x03BA39E4 LDP X20, X19, [X31 + 0x30]
	0x03BA39E8 LDP X22, X21, [X31 + 0x20]
	0x03BA39EC LDP X24, X23, [X31 + 0x10]
	0x03BA39F0 LDR X30, [X31], #0x40
	0x03BA39F4 RET
	0x03BA39F8 MOV X0, X22
	0x03BA39FC MOV X1, X23
	0x03BA3A00 BL 0x1C171E0
	0x03BA3A04 STR X30, [X31 - 0x40]!
	0x03BA3A08 STP X24, X23, [X31 + 0x10]
	0x03BA3A0C STP X22, X21, [X31 + 0x20]
	0x03BA3A10 STP X20, X19, [X31 + 0x30]
	0x03BA3A14 ADRP X21, 0x83F000
	0x03BA3A18 LDRB W8, [X21 + 0xC51]
	0x03BA3A1C MOV X19, X1
	0x03BA3A20 MOV X20, X0
	0x03BA3A24 TBNZ X8, 0x0, 0x3BA3A3C
	0x03BA3A28 ADRP X0, 0x5B9000
	0x03BA3A2C LDR X0, [X0 + 0xC20]
	0x03BA3A30 BL 0x1C16CF4
	0x03BA3A34 MOVZ W8, 0x1
	0x03BA3A38 STRB W8, [X21 + 0xC51]
	0x03BA3A3C ADRP X24, 0x5B9000
	0x03BA3A40 LDR X21, [X20 + 0xA8]!
	0x03BA3A44 LDR X24, [X24 + 0xC20]
	0x03BA3A48 MOV X0, X21
	0x03BA3A4C MOV X1, X19
	0x03BA3A50 MOV X2, X31
	0x03BA3A54 BL 0x33C0FDC
	0x03BA3A58 CBZ X0, 0x3BA3A78
	0x03BA3A5C LDR X23, [X24]
	0x03BA3A60 MOV X22, X0
	0x03BA3A64 MOV X1, X23
	0x03BA3A68 BL 0x1C16E00
	0x03BA3A6C MOV X1, X0
	0x03BA3A70 CBNZ X0, 0x3BA3A7C
	0x03BA3A74 B 0x3BA3AA8
	0x03BA3A78 MOV X1, X31
	0x03BA3A7C MOV X0, X20
	0x03BA3A80 MOV X2, X21
	0x03BA3A84 BL 0x1C24138
	0x03BA3A88 CMP X21, X0
	0x03BA3A8C MOV X21, X0
	0x03BA3A90 B.NE 0x3BA3A48
	0x03BA3A94 LDP X20, X19, [X31 + 0x30]
	0x03BA3A98 LDP X22, X21, [X31 + 0x20]
	0x03BA3A9C LDP X24, X23, [X31 + 0x10]
	0x03BA3AA0 LDR X30, [X31], #0x40
	0x03BA3AA4 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+48], V0
	008 Move [X31+56], V0
	009 Move [X31+16], V0
	010 Move [X31+24], V0
	011 Move [X31], V0
	012 Move W8, [X1+8]
	013 Compare W8, 0
	014 JumpIfEqual {63}
	015 Move X19, X1
	016 Move W1, [X1]
	017 Move X20, X0
	018 Call UIInputModule.GetOrCreateCachedPointerEvent, X0, X1
	019 Compare X0, 0
	020 JumpIfEqual {69}
	021 Move X8, [X0]
	022 Move X21, X0
	023 Move X9, [X8+376]
	024 Move X1, [X8+384]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X0, X19
	027 Move X1, X21
	028 Call TouchModel.CopyTo, X0, X1
	029 Move W8, [X19+20]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move [X31+48], V0
	033 Move [X31+56], V0
	034 Move [X31+16], V0
	035 Move [X31+24], V0
	036 Move [X31], V0
	037 Add X8, X31, 0
	038 Move X0, X20
	039 Move X1, X21
	040 Call UIInputModule.PerformRaycast, X0, X1
	041 Add X0, X21, 80
	042 Add X1, X31, 0
	043 Move W2, 80
	044 Call 0x3EB2AC0
	045 Move [X21+328], W31
	046 Move W1, [X19+4]
	047 Move X0, X20
	048 Move X2, X21
	049 Call UIInputModule.ProcessPointerButton, X0, X1, X2
	050 Move X0, X20
	051 Move X1, X21
	052 Call UIInputModule.ProcessPointerMovement, X0, X1
	053 Move S0, 1
	054 Move W2, 2
	055 Move X0, X20
	056 Move X1, X21
	057 Call UIInputModule.ProcessPointerButtonDrag, X0, X1, X2, V0
	058 Move X0, X19
	059 Move X1, X21
	060 Call TouchModel.CopyFrom, X0, X1
	061 Move X0, X19
	062 Call TouchModel.OnFrameFinished, X0
	063 Move X20, [X31+96]
	064 Move X19, [X31+104]
	065 Move X30, [X31+80]
	066 Move X21, [X31+88]
	067 Add X31, X31, 112
	068 Return 
	069 Call 0x1C17F20

Method: System.Void ProcessTrackedDevice(ref UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel deviceState, System.Boolean force = False)

Disassembly:
	0x03BA3AA8 MOV X0, X22
	0x03BA3AAC MOV X1, X23
	0x03BA3AB0 BL 0x1C171E0
	0x03BA3AB4 STR X30, [X31 - 0x40]!
	0x03BA3AB8 STP X24, X23, [X31 + 0x10]
	0x03BA3ABC STP X22, X21, [X31 + 0x20]
	0x03BA3AC0 STP X20, X19, [X31 + 0x30]
	0x03BA3AC4 ADRP X21, 0x83F000
	0x03BA3AC8 LDRB W8, [X21 + 0xC52]
	0x03BA3ACC MOV X19, X1
	0x03BA3AD0 MOV X20, X0
	0x03BA3AD4 TBNZ X8, 0x0, 0x3BA3AEC
	0x03BA3AD8 ADRP X0, 0x5B9000
	0x03BA3ADC LDR X0, [X0 + 0xC20]
	0x03BA3AE0 BL 0x1C16CF4
	0x03BA3AE4 MOVZ W8, 0x1
	0x03BA3AE8 STRB W8, [X21 + 0xC52]
	0x03BA3AEC ADRP X24, 0x5B9000
	0x03BA3AF0 LDR X21, [X20 + 0xB0]!
	0x03BA3AF4 LDR X24, [X24 + 0xC20]
	0x03BA3AF8 MOV X0, X21
	0x03BA3AFC MOV X1, X19
	0x03BA3B00 MOV X2, X31
	0x03BA3B04 BL 0x33C0DE4
	0x03BA3B08 CBZ X0, 0x3BA3B28
	0x03BA3B0C LDR X23, [X24]
	0x03BA3B10 MOV X22, X0
	0x03BA3B14 MOV X1, X23
	0x03BA3B18 BL 0x1C16E00
	0x03BA3B1C MOV X1, X0
	0x03BA3B20 CBNZ X0, 0x3BA3B2C
	0x03BA3B24 B 0x3BA3B58
	0x03BA3B28 MOV X1, X31
	0x03BA3B2C MOV X0, X20
	0x03BA3B30 MOV X2, X21
	0x03BA3B34 BL 0x1C24138
	0x03BA3B38 CMP X21, X0
	0x03BA3B3C MOV X21, X0
	0x03BA3B40 B.NE 0x3BA3AF8
	0x03BA3B44 LDP X20, X19, [X31 + 0x30]
	0x03BA3B48 LDP X22, X21, [X31 + 0x20]
	0x03BA3B4C LDP X24, X23, [X31 + 0x10]
	0x03BA3B50 LDR X30, [X31], #0x40
	0x03BA3B54 RET
	0x03BA3B58 MOV X0, X22
	0x03BA3B5C MOV X1, X23
	0x03BA3B60 BL 0x1C171E0
	0x03BA3B64 STR X30, [X31 - 0x40]!
	0x03BA3B68 STP X24, X23, [X31 + 0x10]
	0x03BA3B6C STP X22, X21, [X31 + 0x20]
	0x03BA3B70 STP X20, X19, [X31 + 0x30]
	0x03BA3B74 ADRP X21, 0x83F000
	0x03BA3B78 LDRB W8, [X21 + 0xC53]
	0x03BA3B7C MOV X19, X1
	0x03BA3B80 MOV X20, X0
	0x03BA3B84 TBNZ X8, 0x0, 0x3BA3B9C
	0x03BA3B88 ADRP X0, 0x5B9000
	0x03BA3B8C LDR X0, [X0 + 0xC20]
	0x03BA3B90 BL 0x1C16CF4
	0x03BA3B94 MOVZ W8, 0x1
	0x03BA3B98 STRB W8, [X21 + 0xC53]
	0x03BA3B9C ADRP X24, 0x5B9000
	0x03BA3BA0 LDR X21, [X20 + 0xB0]!
	0x03BA3BA4 LDR X24, [X24 + 0xC20]
	0x03BA3BA8 MOV X0, X21
	0x03BA3BAC MOV X1, X19
	0x03BA3BB0 MOV X2, X31
	0x03BA3BB4 BL 0x33C0FDC
	0x03BA3BB8 CBZ X0, 0x3BA3BD8
	0x03BA3BBC LDR X23, [X24]
	0x03BA3BC0 MOV X22, X0
	0x03BA3BC4 MOV X1, X23
	0x03BA3BC8 BL 0x1C16E00
	0x03BA3BCC MOV X1, X0
	0x03BA3BD0 CBNZ X0, 0x3BA3BDC
	0x03BA3BD4 B 0x3BA3C08
	0x03BA3BD8 MOV X1, X31
	0x03BA3BDC MOV X0, X20
	0x03BA3BE0 MOV X2, X21
	0x03BA3BE4 BL 0x1C24138
	0x03BA3BE8 CMP X21, X0
	0x03BA3BEC MOV X21, X0
	0x03BA3BF0 B.NE 0x3BA3BA8
	0x03BA3BF4 LDP X20, X19, [X31 + 0x30]
	0x03BA3BF8 LDP X22, X21, [X31 + 0x20]
	0x03BA3BFC LDP X24, X23, [X31 + 0x10]
	0x03BA3C00 LDR X30, [X31], #0x40
	0x03BA3C04 RET
	0x03BA3C08 MOV X0, X22
	0x03BA3C0C MOV X1, X23
	0x03BA3C10 BL 0x1C171E0
	0x03BA3C14 STR X30, [X31 - 0x40]!
	0x03BA3C18 STP X24, X23, [X31 + 0x10]
	0x03BA3C1C STP X22, X21, [X31 + 0x20]
	0x03BA3C20 STP X20, X19, [X31 + 0x30]
	0x03BA3C24 ADRP X21, 0x83F000
	0x03BA3C28 LDRB W8, [X21 + 0xC54]
	0x03BA3C2C MOV X19, X1
	0x03BA3C30 MOV X20, X0
	0x03BA3C34 TBNZ X8, 0x0, 0x3BA3C4C
	0x03BA3C38 ADRP X0, 0x5B9000
	0x03BA3C3C LDR X0, [X0 + 0xC20]
	0x03BA3C40 BL 0x1C16CF4
	0x03BA3C44 MOVZ W8, 0x1
	0x03BA3C48 STRB W8, [X21 + 0xC54]
	0x03BA3C4C ADRP X24, 0x5B9000
	0x03BA3C50 LDR X21, [X20 + 0xB8]!
	0x03BA3C54 LDR X24, [X24 + 0xC20]
	0x03BA3C58 MOV X0, X21
	0x03BA3C5C MOV X1, X19
	0x03BA3C60 MOV X2, X31
	0x03BA3C64 BL 0x33C0DE4
	0x03BA3C68 CBZ X0, 0x3BA3C88
	0x03BA3C6C LDR X23, [X24]
	0x03BA3C70 MOV X22, X0
	0x03BA3C74 MOV X1, X23
	0x03BA3C78 BL 0x1C16E00
	0x03BA3C7C MOV X1, X0
	0x03BA3C80 CBNZ X0, 0x3BA3C8C
	0x03BA3C84 B 0x3BA3CB8
	0x03BA3C88 MOV X1, X31
	0x03BA3C8C MOV X0, X20
	0x03BA3C90 MOV X2, X21
	0x03BA3C94 BL 0x1C24138
	0x03BA3C98 CMP X21, X0
	0x03BA3C9C MOV X21, X0
	0x03BA3CA0 B.NE 0x3BA3C58
	0x03BA3CA4 LDP X20, X19, [X31 + 0x30]
	0x03BA3CA8 LDP X22, X21, [X31 + 0x20]
	0x03BA3CAC LDP X24, X23, [X31 + 0x10]
	0x03BA3CB0 LDR X30, [X31], #0x40
	0x03BA3CB4 RET
	0x03BA3CB8 MOV X0, X22
	0x03BA3CBC MOV X1, X23
	0x03BA3CC0 BL 0x1C171E0
	0x03BA3CC4 STR X30, [X31 - 0x40]!
	0x03BA3CC8 STP X24, X23, [X31 + 0x10]
	0x03BA3CCC STP X22, X21, [X31 + 0x20]
	0x03BA3CD0 STP X20, X19, [X31 + 0x30]
	0x03BA3CD4 ADRP X21, 0x83F000
	0x03BA3CD8 LDRB W8, [X21 + 0xC55]
	0x03BA3CDC MOV X19, X1
	0x03BA3CE0 MOV X20, X0
	0x03BA3CE4 TBNZ X8, 0x0, 0x3BA3CFC
	0x03BA3CE8 ADRP X0, 0x5B9000
	0x03BA3CEC LDR X0, [X0 + 0xC20]
	0x03BA3CF0 BL 0x1C16CF4
	0x03BA3CF4 MOVZ W8, 0x1
	0x03BA3CF8 STRB W8, [X21 + 0xC55]
	0x03BA3CFC ADRP X24, 0x5B9000
	0x03BA3D00 LDR X21, [X20 + 0xB8]!
	0x03BA3D04 LDR X24, [X24 + 0xC20]
	0x03BA3D08 MOV X0, X21
	0x03BA3D0C MOV X1, X19
	0x03BA3D10 MOV X2, X31
	0x03BA3D14 BL 0x33C0FDC
	0x03BA3D18 CBZ X0, 0x3BA3D38
	0x03BA3D1C LDR X23, [X24]
	0x03BA3D20 MOV X22, X0
	0x03BA3D24 MOV X1, X23
	0x03BA3D28 BL 0x1C16E00
	0x03BA3D2C MOV X1, X0
	0x03BA3D30 CBNZ X0, 0x3BA3D3C
	0x03BA3D34 B 0x3BA3D68
	0x03BA3D38 MOV X1, X31
	0x03BA3D3C MOV X0, X20
	0x03BA3D40 MOV X2, X21
	0x03BA3D44 BL 0x1C24138
	0x03BA3D48 CMP X21, X0
	0x03BA3D4C MOV X21, X0
	0x03BA3D50 B.NE 0x3BA3D08
	0x03BA3D54 LDP X20, X19, [X31 + 0x30]
	0x03BA3D58 LDP X22, X21, [X31 + 0x20]
	0x03BA3D5C LDP X24, X23, [X31 + 0x10]
	0x03BA3D60 LDR X30, [X31], #0x40
	0x03BA3D64 RET
	0x03BA3D68 MOV X0, X22
	0x03BA3D6C MOV X1, X23
	0x03BA3D70 BL 0x1C171E0
	0x03BA3D74 STR X30, [X31 - 0x40]!
	0x03BA3D78 STP X24, X23, [X31 + 0x10]
	0x03BA3D7C STP X22, X21, [X31 + 0x20]
	0x03BA3D80 STP X20, X19, [X31 + 0x30]
	0x03BA3D84 ADRP X21, 0x83F000
	0x03BA3D88 LDRB W8, [X21 + 0xC56]
	0x03BA3D8C MOV X19, X1
	0x03BA3D90 MOV X20, X0
	0x03BA3D94 TBNZ X8, 0x0, 0x3BA3DAC
	0x03BA3D98 ADRP X0, 0x5B9000
	0x03BA3D9C LDR X0, [X0 + 0xC20]
	0x03BA3DA0 BL 0x1C16CF4
	0x03BA3DA4 MOVZ W8, 0x1
	0x03BA3DA8 STRB W8, [X21 + 0xC56]
	0x03BA3DAC ADRP X24, 0x5B9000
	0x03BA3DB0 LDR X21, [X20 + 0xC0]!
	0x03BA3DB4 LDR X24, [X24 + 0xC20]
	0x03BA3DB8 MOV X0, X21
	0x03BA3DBC MOV X1, X19
	0x03BA3DC0 MOV X2, X31
	0x03BA3DC4 BL 0x33C0DE4
	0x03BA3DC8 CBZ X0, 0x3BA3DE8
	0x03BA3DCC LDR X23, [X24]
	0x03BA3DD0 MOV X22, X0
	0x03BA3DD4 MOV X1, X23
	0x03BA3DD8 BL 0x1C16E00
	0x03BA3DDC MOV X1, X0
	0x03BA3DE0 CBNZ X0, 0x3BA3DEC
	0x03BA3DE4 B 0x3BA3E18
	0x03BA3DE8 MOV X1, X31
	0x03BA3DEC MOV X0, X20
	0x03BA3DF0 MOV X2, X21
	0x03BA3DF4 BL 0x1C24138
	0x03BA3DF8 CMP X21, X0
	0x03BA3DFC MOV X21, X0
	0x03BA3E00 B.NE 0x3BA3DB8
	0x03BA3E04 LDP X20, X19, [X31 + 0x30]
	0x03BA3E08 LDP X22, X21, [X31 + 0x20]
	0x03BA3E0C LDP X24, X23, [X31 + 0x10]
	0x03BA3E10 LDR X30, [X31], #0x40
	0x03BA3E14 RET
	0x03BA3E18 MOV X0, X22
	0x03BA3E1C MOV X1, X23
	0x03BA3E20 BL 0x1C171E0
	0x03BA3E24 STR X30, [X31 - 0x40]!
	0x03BA3E28 STP X24, X23, [X31 + 0x10]
	0x03BA3E2C STP X22, X21, [X31 + 0x20]
	0x03BA3E30 STP X20, X19, [X31 + 0x30]
	0x03BA3E34 ADRP X21, 0x83F000
	0x03BA3E38 LDRB W8, [X21 + 0xC57]
	0x03BA3E3C MOV X19, X1
	0x03BA3E40 MOV X20, X0
	0x03BA3E44 TBNZ X8, 0x0, 0x3BA3E5C
	0x03BA3E48 ADRP X0, 0x5B9000
	0x03BA3E4C LDR X0, [X0 + 0xC20]
	0x03BA3E50 BL 0x1C16CF4
	0x03BA3E54 MOVZ W8, 0x1
	0x03BA3E58 STRB W8, [X21 + 0xC57]
	0x03BA3E5C ADRP X24, 0x5B9000
	0x03BA3E60 LDR X21, [X20 + 0xC0]!
	0x03BA3E64 LDR X24, [X24 + 0xC20]
	0x03BA3E68 MOV X0, X21
	0x03BA3E6C MOV X1, X19
	0x03BA3E70 MOV X2, X31
	0x03BA3E74 BL 0x33C0FDC
	0x03BA3E78 CBZ X0, 0x3BA3E98
	0x03BA3E7C LDR X23, [X24]
	0x03BA3E80 MOV X22, X0
	0x03BA3E84 MOV X1, X23
	0x03BA3E88 BL 0x1C16E00
	0x03BA3E8C MOV X1, X0
	0x03BA3E90 CBNZ X0, 0x3BA3E9C
	0x03BA3E94 B 0x3BA3EC8
	0x03BA3E98 MOV X1, X31
	0x03BA3E9C MOV X0, X20
	0x03BA3EA0 MOV X2, X21
	0x03BA3EA4 BL 0x1C24138
	0x03BA3EA8 CMP X21, X0
	0x03BA3EAC MOV X21, X0
	0x03BA3EB0 B.NE 0x3BA3E68
	0x03BA3EB4 LDP X20, X19, [X31 + 0x30]
	0x03BA3EB8 LDP X22, X21, [X31 + 0x20]
	0x03BA3EBC LDP X24, X23, [X31 + 0x10]
	0x03BA3EC0 LDR X30, [X31], #0x40
	0x03BA3EC4 RET
	0x03BA3EC8 MOV X0, X22
	0x03BA3ECC MOV X1, X23
	0x03BA3ED0 BL 0x1C171E0
	0x03BA3ED4 STR X30, [X31 - 0x40]!
	0x03BA3ED8 STP X24, X23, [X31 + 0x10]
	0x03BA3EDC STP X22, X21, [X31 + 0x20]
	0x03BA3EE0 STP X20, X19, [X31 + 0x30]
	0x03BA3EE4 ADRP X21, 0x83F000
	0x03BA3EE8 LDRB W8, [X21 + 0xC58]
	0x03BA3EEC MOV X19, X1
	0x03BA3EF0 MOV X20, X0
	0x03BA3EF4 TBNZ X8, 0x0, 0x3BA3F0C
	0x03BA3EF8 ADRP X0, 0x5B9000
	0x03BA3EFC LDR X0, [X0 + 0xC20]
	0x03BA3F00 BL 0x1C16CF4
	0x03BA3F04 MOVZ W8, 0x1
	0x03BA3F08 STRB W8, [X21 + 0xC58]
	0x03BA3F0C ADRP X24, 0x5B9000
	0x03BA3F10 LDR X21, [X20 + 0xC8]!
	0x03BA3F14 LDR X24, [X24 + 0xC20]
	0x03BA3F18 MOV X0, X21
	0x03BA3F1C MOV X1, X19
	0x03BA3F20 MOV X2, X31
	0x03BA3F24 BL 0x33C0DE4
	0x03BA3F28 CBZ X0, 0x3BA3F48
	0x03BA3F2C LDR X23, [X24]
	0x03BA3F30 MOV X22, X0
	0x03BA3F34 MOV X1, X23
	0x03BA3F38 BL 0x1C16E00
	0x03BA3F3C MOV X1, X0
	0x03BA3F40 CBNZ X0, 0x3BA3F4C
	0x03BA3F44 B 0x3BA3F78
	0x03BA3F48 MOV X1, X31
	0x03BA3F4C MOV X0, X20
	0x03BA3F50 MOV X2, X21

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], D9
	003 Move [X31+168], D8
	004 Move [X31+176], X29
	005 Move [X31+192], X30
	006 Move [X31+200], X25
	007 Move [X31+208], X24
	008 Move [X31+216], X23
	009 Move [X31+224], X22
	010 Move [X31+232], X21
	011 Move [X31+240], X20
	012 Move [X31+248], X19
	013 Move X22, 0x840000
	014 Move X23, 0x5B9000
	015 Move W8, [X22+3141]
	016 Move X23, [X23+600]
	017 Move W21, W2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x57A000
	025 Move X0, [X0+2136]
	026 Call 0x1C17CF4
	027 Move X0, 0x5BA000
	028 Move X0, [X0+3048]
	029 Call 0x1C17CF4
	030 Move X0, 0x5BA000
	031 Move X0, [X0+3056]
	032 Call 0x1C17CF4
	033 Move X0, 0x555000
	034 Move X0, [X0+2424]
	035 Call 0x1C17CF4
	036 Move X0, 0x555000
	037 Move X0, [X0+2432]
	038 Call 0x1C17CF4
	039 Move X0, 0x551000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x5B9000
	043 Move X0, [X0+600]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+3141], W8
	047 Move X0, [X23]
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X31+184], X31
	050 Move [X31+128], V0
	051 Move [X31+136], V0
	052 Move [X31+96], V0
	053 Move [X31+104], V0
	054 Move [X31+5], V0
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W8, [X19+172]
	060 Compare W8, 0
	061 JumpIfNotEqual {66}
	062 Move TEMP, X21
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {329}
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move W1, [X19+160]
	072 Move X0, X20
	073 Call UIInputModule.GetOrCreateCachedTrackedDeviceEvent, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {346}
	076 Move X8, [X0]
	077 Move X21, X0
	078 Add X24, X0, 260
	079 Move X9, [X8+376]
	080 Move X1, [X8+384]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X0, X19
	083 Move X1, X21
	084 Call TrackedDeviceModel.CopyTo, X0, X1
	085 Move V0, [X24+56]
	086 Move V1, [X20+108]
	087 Add X8, X31, 0
	088 Move X0, X20
	089 Move X1, X21
	090 NotImplemented "Instruction INVALID not yet implemented."
	091 Move [X24+56], D0
	092 Move [X21+328], W31
	093 Move V8, [X24]
	094 NotImplemented "Instruction MVNI not yet implemented."
	095 Move [X24], D0
	096 Call UIInputModule.PerformRaycast, X0, X1
	097 Add X22, X21, 80
	098 Add X1, X31, 0
	099 Move W2, 80
	100 Move X0, X22
	101 Call 0x3EB2AC0
	102 Add X2, X31, 184
	103 Move X0, X20
	104 Move X1, X21
	105 Move [X24], D8
	106 Call UIInputModule.TryGetCamera, X0, X1, X2
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {322}
	111 Add X0, X31, 80
	112 Move W2, 80
	113 Move X1, X22
	114 Call 0x3EB2AC0
	115 Add X0, X31, 80
	116 Move X1, X31
	117 Call RaycastResult.get_isValid, X0
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {147}
	122 Move X22, [X31+184]
	123 Compare X22, 0
	124 JumpIfEqual {346}
	125 Move S1, [X21+128]
	126 Move S2, [X21+132]
	127 Move V0, [X21+124]
	128 Move X0, X22
	129 Move X1, X31
	130 Call Camera.WorldToScreenPoint, X0, X1
	131 Move X0, [X23]
	132 Move V8, V0
	133 Move V9, V1
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move W8, [X19+168]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {183}
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Move V1, [X21+132]
	145 Move [X21+400], D0
	146 Move [X21+408], S1
	147 Move X0, [X21+384]
	148 Compare X0, 0
	149 JumpIfEqual {346}
	150 Move W8, [X0+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X9, 0x555000
	153 Move X9, [X9+2432]
	154 Subtract W1, W8, 1
	155 Move X2, [X9]
	156 Call List`1<Vector3>.get_Item, X0, X1
	157 Move X22, 0x836000
	158 Move W8, [X22+1923]
	159 Compare W8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, 0x551000
	162 Move X0, [X0+1440]
	163 Call 0x1C17CF4
	164 Move W8, 1
	165 Move [X22+1923], W8
	166 Move X8, 0x551000
	167 Move X8, [X8+1440]
	168 Move X8, [X8]
	169 Move X8, [X8+184]
	170 Move S0, [X8]
	171 Move S1, [X8+4]
	172 Move V2, [X8+8]
	173 Move X22, [X31+184]
	174 Compare X22, 0
	175 JumpIfEqual {346}
	176 Move X0, X22
	177 Move X1, X31
	178 Call Camera.WorldToScreenPoint, X0, X1
	179 Move V8, V0
	180 Move V9, V1
	181 Move [X21+260], S0
	182 Move [X21+264], S1
	183 Move V0, [X21+260]
	184 Move V1, [X21+264]
	185 Move [X21+260], S8
	186 Move [X21+264], S9
	187 Subtract S0, S8, S0
	188 Subtract S1, S9, S1
	189 Move [X21+268], S0
	190 Move [X21+272], S1
	191 Move X0, [X23]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move W1, [X19+168]
	197 Move X0, X20
	198 Move X2, X21
	199 Call UIInputModule.ProcessPointerButton, X0, X1, X2
	200 Move X0, X20
	201 Move X1, X21
	202 Call UIInputModule.ProcessPointerMovement, X0, X1
	203 Move X0, X20
	204 Move X1, X21
	205 Call UIInputModule.ProcessScrollWheel, X0, X1
	206 Move X25, 0x837000
	207 Move W8, [X25+1935]
	208 Move V8, [X24+16]
	209 Compare W8, 0
	210 JumpIfNotEqual {216}
	211 Move X0, 0x559000
	212 Move X0, [X0+3848]
	213 Call 0x1C17CF4
	214 Move W8, 1
	215 Move [X25+1935], W8
	216 Move X8, 0x559000
	217 Move X8, [X8+3848]
	218 Move X8, [X8]
	219 Move X8, [X8+184]
	220 Move V0, [X8]
	221 Move X8, -51089408
	222 Move V1, [X8+3872]
	223 Subtract V0, V8, V0
	224 NotImplemented "Instruction INVALID not yet implemented."
	225 NotImplemented "Instruction FADDP not yet implemented."
	226 NotImplemented "Instruction FCMP not yet implemented."
	227 Move V2, [X21+408]
	228 Move V1, [X21+404]
	229 Move V0, [X21+400]
	230 Move X0, X22
	231 Move X1, X31
	232 Call Camera.WorldToScreenPoint, X0, X1
	233 Move [X21+276], S0
	234 Move [X21+280], S1
	235 Move V0, [X20+104]
	236 Move W2, 3
	237 Move X0, X20
	238 Move X1, X21
	239 Call UIInputModule.ProcessPointerButtonDrag, X0, X1, X2, V0
	240 Move X0, [X23]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X22, [X19+8]
	246 Move X0, X19
	247 Move X1, X21
	248 Call TrackedDeviceModel.CopyFrom, X0, X1
	249 Move X21, 0x551000
	250 Move X21, [X21+1432]
	251 Move X20, [X19+8]
	252 Move X0, [X21]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X22
	258 Move X1, X20
	259 Move X2, X31
	260 Call Object.op_Inequality, X0, X1
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfNotEqual {322}
	265 Move X0, [X21]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X0, X20
	271 Move X1, X31
	272 Move X2, X31
	273 Call Object.op_Inequality, X0, X1
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {315}
	278 Compare X20, 0
	279 JumpIfEqual {346}
	280 Move X8, 0x5BA000
	281 Move X8, [X8+3056]
	282 Move X0, X20
	283 Move X1, [X8]
	284 Call 0x21E68C4, X0
	285 Move X8, 0x5BA000
	286 Move X8, [X8+3048]
	287 Move X21, X0
	288 Move X0, X20
	289 Move X1, [X8]
	290 Call 0x21E68C4, X0
	291 Move X20, X0
	292 Compare X21, 0
	293 JumpIfEqual {306}
	294 Move X8, 0x57A000
	295 Move X8, [X8+2136]
	296 Move X9, [X21]
	297 Move X8, [X8]
	298 Move W11, [X9+304]
	299 Move W10, [X8+304]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X9, [X9+200]
	302 Add X9, X9, X10
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X21, X31
	306 Move X0, [X23]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 NotImplemented "Instruction CMP not yet implemented."
	312 NotImplemented "Instruction CSET not yet implemented."
	313 Move [X19+328], X21
	314 Move [X19+336], W8
	315 Move X0, [X23]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move [X19+328], X31
	321 Move [X19+336], W31
	322 Move X0, [X23]
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, X19
	328 Call TrackedDeviceModel.OnFrameFinished, X0
	329 Move X20, [X31+240]
	330 Move X19, [X31+248]
	331 Move X22, [X31+224]
	332 Move X21, [X31+232]
	333 Move X24, [X31+208]
	334 Move X23, [X31+216]
	335 Move X30, [X31+192]
	336 Move X25, [X31+200]
	337 Move X29, [X31+176]
	338 Move D9, [X31+160]
	339 Move D8, [X31+168]
	340 Add X31, X31, 256
	341 Return 
	342 Move X0, X21
	343 Move X1, X31
	344 Call Component.get_gameObject, X0
	345 Move X21, X0
	346 Call 0x1C17F20

Method: System.Boolean TryGetCamera(UnityEngine.EventSystems.PointerEventData eventData, out UnityEngine.Camera screenPointCamera)

Disassembly:
	0x03BA4028 MOV X0, X22
	0x03BA402C MOV X1, X23
	0x03BA4030 BL 0x1C171E0
	0x03BA4034 STR X30, [X31 - 0x40]!
	0x03BA4038 STP X24, X23, [X31 + 0x10]
	0x03BA403C STP X22, X21, [X31 + 0x20]
	0x03BA4040 STP X20, X19, [X31 + 0x30]
	0x03BA4044 ADRP X21, 0x83E000
	0x03BA4048 LDRB W8, [X21 + 0xC5A]
	0x03BA404C MOV X19, X1
	0x03BA4050 MOV X20, X0
	0x03BA4054 TBNZ X8, 0x0, 0x3BA406C
	0x03BA4058 ADRP X0, 0x5B8000
	0x03BA405C LDR X0, [X0 + 0xC20]
	0x03BA4060 BL 0x1C16CF4
	0x03BA4064 MOVZ W8, 0x1
	0x03BA4068 STRB W8, [X21 + 0xC5A]
	0x03BA406C ADRP X24, 0x5B8000
	0x03BA4070 LDR X21, [X20 + 0xD0]!
	0x03BA4074 LDR X24, [X24 + 0xC20]
	0x03BA4078 MOV X0, X21
	0x03BA407C MOV X1, X19
	0x03BA4080 MOV X2, X31
	0x03BA4084 BL 0x33C0DE4
	0x03BA4088 CBZ X0, 0x3BA40A8
	0x03BA408C LDR X23, [X24]
	0x03BA4090 MOV X22, X0
	0x03BA4094 MOV X1, X23
	0x03BA4098 BL 0x1C16E00
	0x03BA409C MOV X1, X0
	0x03BA40A0 CBNZ X0, 0x3BA40AC
	0x03BA40A4 B 0x3BA40D8
	0x03BA40A8 MOV X1, X31
	0x03BA40AC MOV X0, X20
	0x03BA40B0 MOV X2, X21
	0x03BA40B4 BL 0x1C24138
	0x03BA40B8 CMP X21, X0
	0x03BA40BC MOV X21, X0
	0x03BA40C0 B.NE 0x3BA4078
	0x03BA40C4 LDP X20, X19, [X31 + 0x30]
	0x03BA40C8 LDP X22, X21, [X31 + 0x20]
	0x03BA40CC LDP X24, X23, [X31 + 0x10]
	0x03BA40D0 LDR X30, [X31], #0x40
	0x03BA40D4 RET
	0x03BA40D8 MOV X0, X22
	0x03BA40DC MOV X1, X23
	0x03BA40E0 BL 0x1C171E0
	0x03BA40E4 STR X30, [X31 - 0x40]!
	0x03BA40E8 STP X24, X23, [X31 + 0x10]
	0x03BA40EC STP X22, X21, [X31 + 0x20]
	0x03BA40F0 STP X20, X19, [X31 + 0x30]
	0x03BA40F4 ADRP X21, 0x83E000
	0x03BA40F8 LDRB W8, [X21 + 0xC5B]
	0x03BA40FC MOV X19, X1
	0x03BA4100 MOV X20, X0
	0x03BA4104 TBNZ X8, 0x0, 0x3BA411C
	0x03BA4108 ADRP X0, 0x5B8000
	0x03BA410C LDR X0, [X0 + 0xC20]
	0x03BA4110 BL 0x1C16CF4
	0x03BA4114 MOVZ W8, 0x1
	0x03BA4118 STRB W8, [X21 + 0xC5B]
	0x03BA411C ADRP X24, 0x5B8000
	0x03BA4120 LDR X21, [X20 + 0xD0]!
	0x03BA4124 LDR X24, [X24 + 0xC20]
	0x03BA4128 MOV X0, X21
	0x03BA412C MOV X1, X19
	0x03BA4130 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x83F000
	008 Move X22, 0x550000
	009 Move W8, [X23+3142]
	010 Move X22, [X22+1432]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x550000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3142], W8
	023 Move X0, X21
	024 Call UIInputModule.get_uiCamera, X0
	025 Move [X19], X0
	026 Move X21, X0
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {41}
	040 Move W0, 1
	041 Compare X20, 0
	042 JumpIfEqual {90}
	043 Move X0, [X22]
	044 Move X20, [X20+88]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {82}
	057 Compare X20, 0
	058 JumpIfEqual {90}
	059 Move X8, [X20]
	060 Move X0, X20
	061 Move X9, [X8+600]
	062 Move X1, [X8+608]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move [X19], X0
	065 Move X20, X0
	066 Move X0, [X22]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X1, X31
	077 Move X2, X31
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Call Object.op_Inequality, X0, X1
	081 Return X0
	082 Move W0, W31
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void ProcessNavigationState(ref UnityEngine.XR.Interaction.Toolkit.UI.NavigationModel navigationState)

Disassembly:
	0x03BA4134 BL 0x33C0FDC
	0x03BA4138 CBZ X0, 0x3BA4158
	0x03BA413C LDR X23, [X24]
	0x03BA4140 MOV X22, X0
	0x03BA4144 MOV X1, X23
	0x03BA4148 BL 0x1C16E00
	0x03BA414C MOV X1, X0
	0x03BA4150 CBNZ X0, 0x3BA415C
	0x03BA4154 B 0x3BA4188
	0x03BA4158 MOV X1, X31
	0x03BA415C MOV X0, X20
	0x03BA4160 MOV X2, X21
	0x03BA4164 BL 0x1C24138
	0x03BA4168 CMP X21, X0
	0x03BA416C MOV X21, X0
	0x03BA4170 B.NE 0x3BA4128
	0x03BA4174 LDP X20, X19, [X31 + 0x30]
	0x03BA4178 LDP X22, X21, [X31 + 0x20]
	0x03BA417C LDP X24, X23, [X31 + 0x10]
	0x03BA4180 LDR X30, [X31], #0x40
	0x03BA4184 RET
	0x03BA4188 MOV X0, X22
	0x03BA418C MOV X1, X23
	0x03BA4190 BL 0x1C171E0
	0x03BA4194 STR X30, [X31 - 0x40]!
	0x03BA4198 STP X24, X23, [X31 + 0x10]
	0x03BA419C STP X22, X21, [X31 + 0x20]
	0x03BA41A0 STP X20, X19, [X31 + 0x30]
	0x03BA41A4 ADRP X21, 0x83E000
	0x03BA41A8 LDRB W8, [X21 + 0xC5C]
	0x03BA41AC MOV X19, X1
	0x03BA41B0 MOV X20, X0
	0x03BA41B4 TBNZ X8, 0x0, 0x3BA41CC
	0x03BA41B8 ADRP X0, 0x5B8000
	0x03BA41BC LDR X0, [X0 + 0xC20]
	0x03BA41C0 BL 0x1C16CF4
	0x03BA41C4 MOVZ W8, 0x1
	0x03BA41C8 STRB W8, [X21 + 0xC5C]
	0x03BA41CC ADRP X24, 0x5B8000
	0x03BA41D0 LDR X21, [X20 + 0xD8]!
	0x03BA41D4 LDR X24, [X24 + 0xC20]
	0x03BA41D8 MOV X0, X21
	0x03BA41DC MOV X1, X19
	0x03BA41E0 MOV X2, X31
	0x03BA41E4 BL 0x33C0DE4
	0x03BA41E8 CBZ X0, 0x3BA4208
	0x03BA41EC LDR X23, [X24]
	0x03BA41F0 MOV X22, X0
	0x03BA41F4 MOV X1, X23
	0x03BA41F8 BL 0x1C16E00
	0x03BA41FC MOV X1, X0
	0x03BA4200 CBNZ X0, 0x3BA420C
	0x03BA4204 B 0x3BA4238
	0x03BA4208 MOV X1, X31
	0x03BA420C MOV X0, X20
	0x03BA4210 MOV X2, X21
	0x03BA4214 BL 0x1C24138
	0x03BA4218 CMP X21, X0
	0x03BA421C MOV X21, X0
	0x03BA4220 B.NE 0x3BA41D8
	0x03BA4224 LDP X20, X19, [X31 + 0x30]
	0x03BA4228 LDP X22, X21, [X31 + 0x20]
	0x03BA422C LDP X24, X23, [X31 + 0x10]
	0x03BA4230 LDR X30, [X31], #0x40
	0x03BA4234 RET
	0x03BA4238 MOV X0, X22
	0x03BA423C MOV X1, X23
	0x03BA4240 BL 0x1C171E0
	0x03BA4244 STR X30, [X31 - 0x40]!
	0x03BA4248 STP X24, X23, [X31 + 0x10]
	0x03BA424C STP X22, X21, [X31 + 0x20]
	0x03BA4250 STP X20, X19, [X31 + 0x30]
	0x03BA4254 ADRP X21, 0x83E000
	0x03BA4258 LDRB W8, [X21 + 0xC5D]
	0x03BA425C MOV X19, X1
	0x03BA4260 MOV X20, X0
	0x03BA4264 TBNZ X8, 0x0, 0x3BA427C
	0x03BA4268 ADRP X0, 0x5B8000
	0x03BA426C LDR X0, [X0 + 0xC20]
	0x03BA4270 BL 0x1C16CF4
	0x03BA4274 MOVZ W8, 0x1
	0x03BA4278 STRB W8, [X21 + 0xC5D]
	0x03BA427C ADRP X24, 0x5B8000
	0x03BA4280 LDR X21, [X20 + 0xD8]!
	0x03BA4284 LDR X24, [X24 + 0xC20]
	0x03BA4288 MOV X0, X21
	0x03BA428C MOV X1, X19
	0x03BA4290 MOV X2, X31
	0x03BA4294 BL 0x33C0FDC
	0x03BA4298 CBZ X0, 0x3BA42B8
	0x03BA429C LDR X23, [X24]
	0x03BA42A0 MOV X22, X0
	0x03BA42A4 MOV X1, X23
	0x03BA42A8 BL 0x1C16E00
	0x03BA42AC MOV X1, X0
	0x03BA42B0 CBNZ X0, 0x3BA42BC
	0x03BA42B4 B 0x3BA42E8
	0x03BA42B8 MOV X1, X31
	0x03BA42BC MOV X0, X20
	0x03BA42C0 MOV X2, X21
	0x03BA42C4 BL 0x1C24138
	0x03BA42C8 CMP X21, X0
	0x03BA42CC MOV X21, X0
	0x03BA42D0 B.NE 0x3BA4288
	0x03BA42D4 LDP X20, X19, [X31 + 0x30]
	0x03BA42D8 LDP X22, X21, [X31 + 0x20]
	0x03BA42DC LDP X24, X23, [X31 + 0x10]
	0x03BA42E0 LDR X30, [X31], #0x40
	0x03BA42E4 RET
	0x03BA42E8 MOV X0, X22
	0x03BA42EC MOV X1, X23
	0x03BA42F0 BL 0x1C171E0
	0x03BA42F4 STR X30, [X31 - 0x40]!
	0x03BA42F8 STP X24, X23, [X31 + 0x10]
	0x03BA42FC STP X22, X21, [X31 + 0x20]
	0x03BA4300 STP X20, X19, [X31 + 0x30]
	0x03BA4304 ADRP X21, 0x83E000
	0x03BA4308 LDRB W8, [X21 + 0xC5E]
	0x03BA430C MOV X19, X1
	0x03BA4310 MOV X20, X0
	0x03BA4314 TBNZ X8, 0x0, 0x3BA432C
	0x03BA4318 ADRP X0, 0x5B8000
	0x03BA431C LDR X0, [X0 + 0xC20]
	0x03BA4320 BL 0x1C16CF4
	0x03BA4324 MOVZ W8, 0x1
	0x03BA4328 STRB W8, [X21 + 0xC5E]
	0x03BA432C ADRP X24, 0x5B8000
	0x03BA4330 LDR X21, [X20 + 0xE0]!
	0x03BA4334 LDR X24, [X24 + 0xC20]
	0x03BA4338 MOV X0, X21
	0x03BA433C MOV X1, X19
	0x03BA4340 MOV X2, X31
	0x03BA4344 BL 0x33C0DE4
	0x03BA4348 CBZ X0, 0x3BA4368
	0x03BA434C LDR X23, [X24]
	0x03BA4350 MOV X22, X0
	0x03BA4354 MOV X1, X23
	0x03BA4358 BL 0x1C16E00
	0x03BA435C MOV X1, X0
	0x03BA4360 CBNZ X0, 0x3BA436C
	0x03BA4364 B 0x3BA4398
	0x03BA4368 MOV X1, X31
	0x03BA436C MOV X0, X20
	0x03BA4370 MOV X2, X21
	0x03BA4374 BL 0x1C24138
	0x03BA4378 CMP X21, X0
	0x03BA437C MOV X21, X0
	0x03BA4380 B.NE 0x3BA4338
	0x03BA4384 LDP X20, X19, [X31 + 0x30]
	0x03BA4388 LDP X22, X21, [X31 + 0x20]
	0x03BA438C LDP X24, X23, [X31 + 0x10]
	0x03BA4390 LDR X30, [X31], #0x40
	0x03BA4394 RET
	0x03BA4398 MOV X0, X22
	0x03BA439C MOV X1, X23
	0x03BA43A0 BL 0x1C171E0
	0x03BA43A4 STR X30, [X31 - 0x40]!
	0x03BA43A8 STP X24, X23, [X31 + 0x10]
	0x03BA43AC STP X22, X21, [X31 + 0x20]
	0x03BA43B0 STP X20, X19, [X31 + 0x30]
	0x03BA43B4 ADRP X21, 0x83E000
	0x03BA43B8 LDRB W8, [X21 + 0xC5F]
	0x03BA43BC MOV X19, X1
	0x03BA43C0 MOV X20, X0
	0x03BA43C4 TBNZ X8, 0x0, 0x3BA43DC
	0x03BA43C8 ADRP X0, 0x5B8000
	0x03BA43CC LDR X0, [X0 + 0xC20]
	0x03BA43D0 BL 0x1C16CF4
	0x03BA43D4 MOVZ W8, 0x1
	0x03BA43D8 STRB W8, [X21 + 0xC5F]
	0x03BA43DC ADRP X24, 0x5B8000
	0x03BA43E0 LDR X21, [X20 + 0xE0]!
	0x03BA43E4 LDR X24, [X24 + 0xC20]
	0x03BA43E8 MOV X0, X21
	0x03BA43EC MOV X1, X19
	0x03BA43F0 MOV X2, X31
	0x03BA43F4 BL 0x33C0FDC
	0x03BA43F8 CBZ X0, 0x3BA4418
	0x03BA43FC LDR X23, [X24]
	0x03BA4400 MOV X22, X0
	0x03BA4404 MOV X1, X23
	0x03BA4408 BL 0x1C16E00
	0x03BA440C MOV X1, X0
	0x03BA4410 CBNZ X0, 0x3BA441C
	0x03BA4414 B 0x3BA4448
	0x03BA4418 MOV X1, X31
	0x03BA441C MOV X0, X20
	0x03BA4420 MOV X2, X21
	0x03BA4424 BL 0x1C24138
	0x03BA4428 CMP X21, X0
	0x03BA442C MOV X21, X0
	0x03BA4430 B.NE 0x3BA43E8
	0x03BA4434 LDP X20, X19, [X31 + 0x30]
	0x03BA4438 LDP X22, X21, [X31 + 0x20]
	0x03BA443C LDP X24, X23, [X31 + 0x10]
	0x03BA4440 LDR X30, [X31], #0x40
	0x03BA4444 RET
	0x03BA4448 MOV X0, X22
	0x03BA444C MOV X1, X23
	0x03BA4450 BL 0x1C171E0
	0x03BA4454 STR X30, [X31 - 0x40]!
	0x03BA4458 STP X24, X23, [X31 + 0x10]
	0x03BA445C STP X22, X21, [X31 + 0x20]
	0x03BA4460 STP X20, X19, [X31 + 0x30]
	0x03BA4464 ADRP X21, 0x83E000
	0x03BA4468 LDRB W8, [X21 + 0xC60]
	0x03BA446C MOV X19, X1
	0x03BA4470 MOV X20, X0
	0x03BA4474 TBNZ X8, 0x0, 0x3BA448C
	0x03BA4478 ADRP X0, 0x5B8000
	0x03BA447C LDR X0, [X0 + 0xC20]
	0x03BA4480 BL 0x1C16CF4
	0x03BA4484 MOVZ W8, 0x1
	0x03BA4488 STRB W8, [X21 + 0xC60]
	0x03BA448C ADRP X24, 0x5B8000
	0x03BA4490 LDR X21, [X20 + 0xE8]!
	0x03BA4494 LDR X24, [X24 + 0xC20]
	0x03BA4498 MOV X0, X21
	0x03BA449C MOV X1, X19
	0x03BA44A0 MOV X2, X31
	0x03BA44A4 BL 0x33C0DE4
	0x03BA44A8 CBZ X0, 0x3BA44C8
	0x03BA44AC LDR X23, [X24]
	0x03BA44B0 MOV X22, X0
	0x03BA44B4 MOV X1, X23
	0x03BA44B8 BL 0x1C16E00
	0x03BA44BC MOV X1, X0
	0x03BA44C0 CBNZ X0, 0x3BA44CC
	0x03BA44C4 B 0x3BA44F8
	0x03BA44C8 MOV X1, X31
	0x03BA44CC MOV X0, X20
	0x03BA44D0 MOV X2, X21
	0x03BA44D4 BL 0x1C24138
	0x03BA44D8 CMP X21, X0
	0x03BA44DC MOV X21, X0
	0x03BA44E0 B.NE 0x3BA4498
	0x03BA44E4 LDP X20, X19, [X31 + 0x30]
	0x03BA44E8 LDP X22, X21, [X31 + 0x20]
	0x03BA44EC LDP X24, X23, [X31 + 0x10]
	0x03BA44F0 LDR X30, [X31], #0x40
	0x03BA44F4 RET
	0x03BA44F8 MOV X0, X22
	0x03BA44FC MOV X1, X23
	0x03BA4500 BL 0x1C171E0
	0x03BA4504 STR X30, [X31 - 0x40]!
	0x03BA4508 STP X24, X23, [X31 + 0x10]
	0x03BA450C STP X22, X21, [X31 + 0x20]
	0x03BA4510 STP X20, X19, [X31 + 0x30]
	0x03BA4514 ADRP X21, 0x83E000
	0x03BA4518 LDRB W8, [X21 + 0xC61]
	0x03BA451C MOV X19, X1
	0x03BA4520 MOV X20, X0
	0x03BA4524 TBNZ X8, 0x0, 0x3BA453C
	0x03BA4528 ADRP X0, 0x5B8000
	0x03BA452C LDR X0, [X0 + 0xC20]
	0x03BA4530 BL 0x1C16CF4
	0x03BA4534 MOVZ W8, 0x1
	0x03BA4538 STRB W8, [X21 + 0xC61]
	0x03BA453C ADRP X24, 0x5B8000
	0x03BA4540 LDR X21, [X20 + 0xE8]!
	0x03BA4544 LDR X24, [X24 + 0xC20]
	0x03BA4548 MOV X0, X21
	0x03BA454C MOV X1, X19
	0x03BA4550 MOV X2, X31
	0x03BA4554 BL 0x33C0FDC
	0x03BA4558 CBZ X0, 0x3BA4578
	0x03BA455C LDR X23, [X24]
	0x03BA4560 MOV X22, X0
	0x03BA4564 MOV X1, X23
	0x03BA4568 BL 0x1C16E00
	0x03BA456C MOV X1, X0
	0x03BA4570 CBNZ X0, 0x3BA457C
	0x03BA4574 B 0x3BA45A8
	0x03BA4578 MOV X1, X31
	0x03BA457C MOV X0, X20
	0x03BA4580 MOV X2, X21
	0x03BA4584 BL 0x1C24138
	0x03BA4588 CMP X21, X0
	0x03BA458C MOV X21, X0
	0x03BA4590 B.NE 0x3BA4548
	0x03BA4594 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-112], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X20, 0x83F000
	016 Move W8, [X20+3143]
	017 Move X19, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x5A6000
	024 Move X0, [X0+1048]
	025 Call 0x1C17CF4
	026 Move X0, 0x5A6000
	027 Move X0, [X0+1056]
	028 Call 0x1C17CF4
	029 Move X0, 0x5A6000
	030 Move X0, [X0+1064]
	031 Call 0x1C17CF4
	032 Move X0, 0x578000
	033 Move X0, [X0+2552]
	034 Call 0x1C17CF4
	035 Move X0, 0x550000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+3143], W8
	040 Move X0, X21
	041 Call UIInputModule.SendUpdateEventToSelectedObject, X0
	042 Move X8, [X21+56]
	043 Compare X8, 0
	044 JumpIfEqual {324}
	045 Move W9, [X8+56]
	046 Compare W9, 0
	047 JumpIfEqual {232}
	048 Move W24, [X19+20]
	049 Move V9, [X19+24]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {55}
	054 Move W23, W31
	055 Move X22, 0x836000
	056 Move W23, [X19+16]
	057 Move X20, [X8+64]
	058 Move W8, [X22+1450]
	059 Move S11, [X19]
	060 Move S10, [X19+4]
	061 Compare W8, 0
	062 JumpIfNotEqual {68}
	063 Move X0, 0x557000
	064 Move X0, [X0+1208]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X22+1450], W8
	068 Move X8, 0x557000
	069 Move X8, [X8+1208]
	070 Move X9, -51089408
	071 Move V1, [X9+576]
	072 NotImplemented "Instruction FABS not yet implemented."
	073 Move X8, [X8]
	074 Move S0, W31
	075 Move S3, 8
	076 NotImplemented "Instruction FMAXNM not yet implemented."
	077 Move X8, [X8+184]
	078 Multiply S4, S4, S1
	079 Move V2, [X8]
	080 Multiply S2, S2, S3
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 NotImplemented "Instruction FCSEL not yet implemented."
	083 NotImplemented "Instruction FABD not yet implemented."
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 NotImplemented "Instruction FABS not yet implemented."
	086 NotImplemented "Instruction FMAXNM not yet implemented."
	087 Multiply S1, S3, S1
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 NotImplemented "Instruction FCSEL not yet implemented."
	090 NotImplemented "Instruction FABD not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Move X0, X31
	093 Call Time.get_unscaledTime
	094 Move V1, [X21+92]
	095 Multiply S2, S11, S11
	096 Multiply S3, S10, S10
	097 Add S2, S2, S3
	098 Multiply S1, S1, S1
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Move V8, V0
	101 NotImplemented "Instruction FABS not yet implemented."
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Move W25, 2
	105 Move W23, W31
	106 Move X8, 0x550000
	107 Move X8, [X8+1432]
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X20
	114 Move X1, X31
	115 Move X2, X31
	116 Call Object.op_Inequality, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {226}
	121 Move X8, [X21]
	122 Move X0, X21
	123 Move X9, [X8+616]
	124 Move X1, [X8+624]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move W8, [X19+8]
	127 Move X22, X0
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {171}
	132 Move X8, [X21+272]
	133 Compare X8, 0
	134 JumpIfEqual {141}
	135 Move X9, [X8+24]
	136 Move X0, [X8+64]
	137 Move X3, [X8+40]
	138 Move X1, X20
	139 Move X2, X22
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X25, 0x578000
	142 Move X25, [X25+2552]
	143 Move X0, [X25]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X26, 0x83E000
	149 Move W8, [X26+914]
	150 Compare W8, 0
	151 JumpIfNotEqual {157}
	152 Move X0, 0x578000
	153 Move X0, [X0+2552]
	154 Call 0x1C17CF4
	155 Move W8, 1
	156 Move [X26+914], W8
	157 Move X0, [X25]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {163}
	161 Call 0x1C17DFC
	162 Move X0, [X25]
	163 Move X9, 0x5A6000
	164 Move X8, [X0+184]
	165 Move X9, [X9+1064]
	166 Move X0, X20
	167 Move X1, X22
	168 Move X2, [X8+128]
	169 Move X3, [X9]
	170 Call 0x21DE088, X0, X1, X2
	171 Compare X22, 0
	172 JumpIfEqual {324}
	173 Move X8, [X22]
	174 Move X0, X22
	175 Move X9, [X8+408]
	176 Move X1, [X8+416]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {226}
	182 Move W8, [X19+12]
	183 Move TEMP, X8
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {226}
	187 Move X8, [X21+280]
	188 Compare X8, 0
	189 JumpIfEqual {196}
	190 Move X9, [X8+24]
	191 Move X0, [X8+64]
	192 Move X3, [X8+40]
	193 Move X1, X20
	194 Move X2, X22
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X21, 0x578000
	197 Move X21, [X21+2552]
	198 Move X0, [X21]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X25, 0x83E000
	204 Move W8, [X25+913]
	205 Compare W8, 0
	206 JumpIfNotEqual {212}
	207 Move X0, 0x578000
	208 Move X0, [X0+2552]
	209 Call 0x1C17CF4
	210 Move W8, 1
	211 Move [X25+913], W8
	212 Move X0, [X21]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {218}
	216 Call 0x1C17DFC
	217 Move X0, [X21]
	218 Move X9, 0x5A6000
	219 Move X8, [X0+184]
	220 Move X9, [X9+1048]
	221 Move X0, X20
	222 Move X1, X22
	223 Move X2, [X8+136]
	224 Move X3, [X9]
	225 Call 0x21DE088, X0, X1, X2
	226 Move W25, W24
	227 Move W8, W23
	228 NotImplemented "Instruction BFM not yet implemented."
	229 Move [X19+24], S9
	230 Move [X19+8], X31
	231 Move [X19+16], X8
	232 Move X20, [X31+96]
	233 Move X19, [X31+104]
	234 Move X22, [X31+80]
	235 Move X21, [X31+88]
	236 Move X24, [X31+64]
	237 Move X23, [X31+72]
	238 Move X26, [X31+48]
	239 Move X25, [X31+56]
	240 Move X30, [X31+40]
	241 Move D9, [X31+24]
	242 Move D8, [X31+32]
	243 Move D11, [X31+8]
	244 Move D10, [X31+16]
	245 Move V12, [X31+112]
	246 Return 
	247 NotImplemented "Instruction FCMP not yet implemented."
	248 Move W25, 1
	249 Move W25, W31
	250 Move W25, 3
	251 Move W26, W31
	252 Compare W23, 0
	253 JumpIfEqual {261}
	254 NotImplemented "Instruction CMP not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move V0, [X21+96]
	257 Move V0, [X21+100]
	258 Add S0, S9, S0
	259 NotImplemented "Instruction FCMP not yet implemented."
	260 Move W26, W23
	261 Move X0, X21
	262 Call UIInputModule.GetOrCreateCachedAxisEvent, X0
	263 Compare X0, 0
	264 JumpIfEqual {324}
	265 Move X8, [X0]
	266 Move X22, X0
	267 Move X9, [X8+376]
	268 Move X1, [X8+384]
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move [X22+32], S11
	271 Move [X22+40], S10
	272 Move [X22+40], W25
	273 Move X8, [X21+264]
	274 Compare X8, 0
	275 JumpIfEqual {282}
	276 Move X9, [X8+24]
	277 Move X0, [X8+64]
	278 Move X3, [X8+40]
	279 Move X1, X20
	280 Move X2, X22
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move X23, 0x578000
	283 Move X23, [X23+2552]
	284 Move X0, [X23]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 Move X24, 0x83E000
	290 Move W8, [X24+912]
	291 Compare W8, 0
	292 JumpIfNotEqual {298}
	293 Move X0, 0x578000
	294 Move X0, [X0+2552]
	295 Call 0x1C17CF4
	296 Move W8, 1
	297 Move [X24+912], W8
	298 Move X0, [X23]
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {304}
	302 Call 0x1C17DFC
	303 Move X0, [X23]
	304 Move X9, 0x5A6000
	305 Move X8, [X0+184]
	306 Move X9, [X9+1056]
	307 Move X0, X20
	308 Move X1, X22
	309 Move X2, [X8+120]
	310 Move X3, [X9]
	311 Call 0x21DE088, X0, X1, X2
	312 Move X8, [X22]
	313 Move X0, X22
	314 Move X9, [X8+408]
	315 Move X1, [X8+416]
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Add W23, W26, 1
	318 Move V9, V8
	319 Move W24, W25
	320 Move TEMP, X0
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfNotEqual {106}
	324 Call 0x1C17F20

Method: System.Void RemovePointerEventData(System.Int32 pointerId)

Disassembly:
	0x03BA4604 BL 0x33C0DE4
	0x03BA4608 CBZ X0, 0x3BA4628
	0x03BA460C LDR X23, [X24]
	0x03BA4610 MOV X22, X0
	0x03BA4614 MOV X1, X23
	0x03BA4618 BL 0x1C16E00
	0x03BA461C MOV X1, X0
	0x03BA4620 CBNZ X0, 0x3BA462C
	0x03BA4624 B 0x3BA4658
	0x03BA4628 MOV X1, X31
	0x03BA462C MOV X0, X20
	0x03BA4630 MOV X2, X21
	0x03BA4634 BL 0x1C24138
	0x03BA4638 CMP X21, X0
	0x03BA463C MOV X21, X0
	0x03BA4640 B.NE 0x3BA45F8
	0x03BA4644 LDP X20, X19, [X31 + 0x30]
	0x03BA4648 LDP X22, X21, [X31 + 0x20]
	0x03BA464C LDP X24, X23, [X31 + 0x10]
	0x03BA4650 LDR X30, [X31], #0x40
	0x03BA4654 RET
	0x03BA4658 MOV X0, X22
	0x03BA465C MOV X1, X23
	0x03BA4660 BL 0x1C171E0
	0x03BA4664 STR X30, [X31 - 0x40]!
	0x03BA4668 STP X24, X23, [X31 + 0x10]
	0x03BA466C STP X22, X21, [X31 + 0x20]
	0x03BA4670 STP X20, X19, [X31 + 0x30]
	0x03BA4674 ADRP X21, 0x83E000
	0x03BA4678 LDRB W8, [X21 + 0xC63]
	0x03BA467C MOV X19, X1
	0x03BA4680 MOV X20, X0
	0x03BA4684 TBNZ X8, 0x0, 0x3BA469C
	0x03BA4688 ADRP X0, 0x5B8000
	0x03BA468C LDR X0, [X0 + 0xC20]
	0x03BA4690 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x83F000
	006 Move W8, [X21+3144]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5B9000
	014 Move X0, [X0+3080]
	015 Call 0x1C17CF4
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3088]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3144], W8
	021 Move X0, [X20+144]
	022 Compare X0, 0
	023 JumpIfEqual {51}
	024 Move X8, 0x5B9000
	025 Move X8, [X8+3088]
	026 Move W1, W19
	027 Move X2, [X8]
	028 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {38}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Move X0, [X20+136]
	039 Compare X0, 0
	040 JumpIfEqual {51}
	041 Move X8, 0x5B9000
	042 Move X8, [X8+3080]
	043 Move W1, W19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X2, [X8]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: UnityEngine.EventSystems.PointerEventData GetOrCreateCachedPointerEvent(System.Int32 pointerId)

Disassembly:
	0x03BA24BC MOV X0, X25
	0x03BA24C0 BL 0x1C16F18
	0x03BA24C4 BL 0x1990590
	0x03BA24C8 STR D8, [X31 - 0x30]!
	0x03BA24CC STR X30, [X31 + 0x8]
	0x03BA24D0 STP X22, X21, [X31 + 0x10]
	0x03BA24D4 STP X20, X19, [X31 + 0x20]
	0x03BA24D8 ADRP X21, 0x840000
	0x03BA24DC LDRB W8, [X21 + 0xC44]
	0x03BA24E0 MOV X19, X1
	0x03BA24E4 MOV X20, X0
	0x03BA24E8 TBNZ X8, 0x0, 0x3BA2518
	0x03BA24EC ADRP X0, 0x5A7000
	0x03BA24F0 LDR X0, [X0 + 0x3D8]
	0x03BA24F4 BL 0x1C16CF4
	0x03BA24F8 ADRP X0, 0x5A7000
	0x03BA24FC LDR X0, [X0 + 0x3E0]
	0x03BA2500 BL 0x1C16CF4
	0x03BA2504 ADRP X0, 0x579000
	0x03BA2508 LDR X0, [X0 + 0x9F8]
	0x03BA250C BL 0x1C16CF4
	0x03BA2510 MOVZ W8, 0x1
	0x03BA2514 STRB W8, [X21 + 0xC44]
	0x03BA2518 CBZ X19, 0x3BA2674
	0x03BA251C LDR V0, [X19 + 0x13C]
	0x03BA2520 LDR V1, [X19 + 0x140]
	0x03BA2524 ADRP X21, 0x837000
	0x03BA2528 LDRB W8, [X21 + 0x5AA]
	0x03BA252C FMUL S0, S0, S0
	0x03BA2530 FMUL S1, S1, S1
	0x03BA2534 FADD S8, S0, S1
	0x03BA2538 CBNZ W8, 0x3BA2550
	0x03BA253C ADRP X0, 0x558000
	0x03BA2540 LDR X0, [X0 + 0x4B8]
	0x03BA2544 BL 0x1C16CF4
	0x03BA2548 MOVZ W8, 0x1
	0x03BA254C STRB W8, [X21 + 0x5AA]
	0x03BA2550 ADRP X8, 0x558000
	0x03BA2554 LDR X8, [X8 + 0x4B8]
	0x03BA2558 ADRP X9, 0xFFFFFFFFFCF48000
	0x03BA255C LDR V0, [X9 + 0x240]
	0x03BA2560 FABS S1, S8
	0x03BA2564 LDR X8, [X8]
	0x03BA2568 FMOV S2, W31
	0x03BA256C FMAXNM S1, S1, S2
	0x03BA2570 FMUL S0, S1, S0
	0x03BA2574 LDR X8, [X8 + 0xB8]
	0x03BA2578 FMOV S1, 8
	0x03BA257C LDR V3, [X8]
	0x03BA2580 FMUL S1, S3, S1
	0x03BA2584 FCMP S0, S1
	0x03BA2588 FCSEL S0, S0, S1, GT
	0x03BA258C FABD S1, S2, S2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x841000
	007 Move W8, [X21+3145]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x5BB000
	015 Move X0, [X0+3040]
	016 Call 0x1C17CF4
	017 Move X0, 0x5BB000
	018 Move X0, [X0+2944]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A8000
	021 Move X0, [X0+1800]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3145], W8
	025 Move [X31+8], X31
	026 Move X0, [X20+136]
	027 Compare X0, 0
	028 JumpIfEqual {65}
	029 Move X8, 0x5BB000
	030 Move X8, [X8+2944]
	031 Add X2, X31, 8
	032 Move W1, W19
	033 Move X3, [X8]
	034 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {58}
	039 Move X8, 0x5A8000
	040 Move X22, [X20+56]
	041 Move X8, [X8+1800]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X1, X22
	045 Move X2, X31
	046 Move X21, X0
	047 Call PointerEventData..ctor, X0, X1
	048 Move [X31+8], X21
	049 Move X0, [X20+136]
	050 Compare X0, 0
	051 JumpIfEqual {65}
	052 Move X8, 0x5BB000
	053 Move X8, [X8+3040]
	054 Move W1, W19
	055 Move X2, X21
	056 Move X3, [X8]
	057 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	058 Move X0, [X31+8]
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0
	065 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData GetOrCreateCachedTrackedDeviceEvent(System.Int32 pointerId)

Disassembly:
	0x03BA3F54 BL 0x1C24138
	0x03BA3F58 CMP X21, X0
	0x03BA3F5C MOV X21, X0
	0x03BA3F60 B.NE 0x3BA3F18
	0x03BA3F64 LDP X20, X19, [X31 + 0x30]
	0x03BA3F68 LDP X22, X21, [X31 + 0x20]
	0x03BA3F6C LDP X24, X23, [X31 + 0x10]
	0x03BA3F70 LDR X30, [X31], #0x40
	0x03BA3F74 RET
	0x03BA3F78 MOV X0, X22
	0x03BA3F7C MOV X1, X23
	0x03BA3F80 BL 0x1C171E0
	0x03BA3F84 STR X30, [X31 - 0x40]!
	0x03BA3F88 STP X24, X23, [X31 + 0x10]
	0x03BA3F8C STP X22, X21, [X31 + 0x20]
	0x03BA3F90 STP X20, X19, [X31 + 0x30]
	0x03BA3F94 ADRP X21, 0x83F000
	0x03BA3F98 LDRB W8, [X21 + 0xC59]
	0x03BA3F9C MOV X19, X1
	0x03BA3FA0 MOV X20, X0
	0x03BA3FA4 TBNZ X8, 0x0, 0x3BA3FBC
	0x03BA3FA8 ADRP X0, 0x5B9000
	0x03BA3FAC LDR X0, [X0 + 0xC20]
	0x03BA3FB0 BL 0x1C16CF4
	0x03BA3FB4 MOVZ W8, 0x1
	0x03BA3FB8 STRB W8, [X21 + 0xC59]
	0x03BA3FBC ADRP X24, 0x5B9000
	0x03BA3FC0 LDR X21, [X20 + 0xC8]!
	0x03BA3FC4 LDR X24, [X24 + 0xC20]
	0x03BA3FC8 MOV X0, X21
	0x03BA3FCC MOV X1, X19
	0x03BA3FD0 MOV X2, X31
	0x03BA3FD4 BL 0x33C0FDC
	0x03BA3FD8 CBZ X0, 0x3BA3FF8
	0x03BA3FDC LDR X23, [X24]
	0x03BA3FE0 MOV X22, X0
	0x03BA3FE4 MOV X1, X23
	0x03BA3FE8 BL 0x1C16E00
	0x03BA3FEC MOV X1, X0
	0x03BA3FF0 CBNZ X0, 0x3BA3FFC
	0x03BA3FF4 B 0x3BA4028
	0x03BA3FF8 MOV X1, X31
	0x03BA3FFC MOV X0, X20
	0x03BA4000 MOV X2, X21
	0x03BA4004 BL 0x1C24138
	0x03BA4008 CMP X21, X0
	0x03BA400C MOV X21, X0
	0x03BA4010 B.NE 0x3BA3FC8
	0x03BA4014 LDP X20, X19, [X31 + 0x30]
	0x03BA4018 LDP X22, X21, [X31 + 0x20]
	0x03BA401C LDP X24, X23, [X31 + 0x10]
	0x03BA4020 LDR X30, [X31], #0x40
	0x03BA4024 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x840000
	007 Move W8, [X21+3146]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x5BA000
	015 Move X0, [X0+3064]
	016 Call 0x1C17CF4
	017 Move X0, 0x5BA000
	018 Move X0, [X0+2936]
	019 Call 0x1C17CF4
	020 Move X0, 0x5BA000
	021 Move X0, [X0+2312]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3146], W8
	025 Move [X31+8], X31
	026 Move X0, [X20+144]
	027 Compare X0, 0
	028 JumpIfEqual {65}
	029 Move X8, 0x5BA000
	030 Move X8, [X8+2936]
	031 Add X2, X31, 8
	032 Move W1, W19
	033 Move X3, [X8]
	034 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {58}
	039 Move X8, 0x5BA000
	040 Move X22, [X20+56]
	041 Move X8, [X8+2312]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X1, X22
	045 Move X2, X31
	046 Move X21, X0
	047 Call PointerEventData..ctor, X0, X1
	048 Move [X31+8], X21
	049 Move X0, [X20+144]
	050 Compare X0, 0
	051 JumpIfEqual {65}
	052 Move X8, 0x5BA000
	053 Move X8, [X8+3064]
	054 Move W1, W19
	055 Move X2, X21
	056 Move X3, [X8]
	057 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	058 Move X0, [X31+8]
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0
	065 Call 0x1C17F20

Method: UnityEngine.EventSystems.AxisEventData GetOrCreateCachedAxisEvent()

Disassembly:
	0x03BA4598 LDP X22, X21, [X31 + 0x20]
	0x03BA459C LDP X24, X23, [X31 + 0x10]
	0x03BA45A0 LDR X30, [X31], #0x40
	0x03BA45A4 RET
	0x03BA45A8 MOV X0, X22
	0x03BA45AC MOV X1, X23
	0x03BA45B0 BL 0x1C171E0
	0x03BA45B4 STR X30, [X31 - 0x40]!
	0x03BA45B8 STP X24, X23, [X31 + 0x10]
	0x03BA45BC STP X22, X21, [X31 + 0x20]
	0x03BA45C0 STP X20, X19, [X31 + 0x30]
	0x03BA45C4 ADRP X21, 0x83E000
	0x03BA45C8 LDRB W8, [X21 + 0xC62]
	0x03BA45CC MOV X19, X1
	0x03BA45D0 MOV X20, X0
	0x03BA45D4 TBNZ X8, 0x0, 0x3BA45EC
	0x03BA45D8 ADRP X0, 0x5B8000
	0x03BA45DC LDR X0, [X0 + 0xC20]
	0x03BA45E0 BL 0x1C16CF4
	0x03BA45E4 MOVZ W8, 0x1
	0x03BA45E8 STRB W8, [X21 + 0xC62]
	0x03BA45EC ADRP X24, 0x5B8000
	0x03BA45F0 LDR X21, [X20 + 0xF0]!
	0x03BA45F4 LDR X24, [X24 + 0xC20]
	0x03BA45F8 MOV X0, X21
	0x03BA45FC MOV X1, X19
	0x03BA4600 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x83F000
	006 Move W8, [X20+3147]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5B9000
	013 Move X0, [X0+3072]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3147], W8
	017 Move X20, [X19+128]
	018 Compare X20, 0
	019 JumpIfNotEqual {30}
	020 Move X8, 0x5B9000
	021 Move X21, [X19+56]
	022 Move X8, [X8+3072]
	023 Move X0, [X8]
	024 Call 0x1C17F10
	025 Move X1, X21
	026 Move X2, X31
	027 Move X20, X0
	028 Call AxisEventData..ctor, X0, X1
	029 Move [X19+128], X20
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Void add_finalizeRaycastResults(System.Action`2<UnityEngine.EventSystems.PointerEventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult>> value)

Disassembly:
	0x03BA4694 MOVZ W8, 0x1
	0x03BA4698 STRB W8, [X21 + 0xC63]
	0x03BA469C ADRP X24, 0x5B8000
	0x03BA46A0 LDR X21, [X20 + 0xF0]!
	0x03BA46A4 LDR X24, [X24 + 0xC20]
	0x03BA46A8 MOV X0, X21
	0x03BA46AC MOV X1, X19
	0x03BA46B0 MOV X2, X31
	0x03BA46B4 BL 0x33C0FDC
	0x03BA46B8 CBZ X0, 0x3BA46D8
	0x03BA46BC LDR X23, [X24]
	0x03BA46C0 MOV X22, X0
	0x03BA46C4 MOV X1, X23
	0x03BA46C8 BL 0x1C16E00
	0x03BA46CC MOV X1, X0
	0x03BA46D0 CBNZ X0, 0x3BA46DC
	0x03BA46D4 B 0x3BA4708
	0x03BA46D8 MOV X1, X31
	0x03BA46DC MOV X0, X20
	0x03BA46E0 MOV X2, X21
	0x03BA46E4 BL 0x1C24138
	0x03BA46E8 CMP X21, X0
	0x03BA46EC MOV X21, X0
	0x03BA46F0 B.NE 0x3BA46A8
	0x03BA46F4 LDP X20, X19, [X31 + 0x30]
	0x03BA46F8 LDP X22, X21, [X31 + 0x20]
	0x03BA46FC LDP X24, X23, [X31 + 0x10]
	0x03BA4700 LDR X30, [X31], #0x40
	0x03BA4704 RET
	0x03BA4708 MOV X0, X22
	0x03BA470C MOV X1, X23
	0x03BA4710 BL 0x1C171E0
	0x03BA4714 STR X30, [X31 - 0x40]!
	0x03BA4718 STP X24, X23, [X31 + 0x10]
	0x03BA471C STP X22, X21, [X31 + 0x20]
	0x03BA4720 STP X20, X19, [X31 + 0x30]
	0x03BA4724 ADRP X21, 0x83E000
	0x03BA4728 LDRB W8, [X21 + 0xC64]
	0x03BA472C MOV X19, X1
	0x03BA4730 MOV X20, X0
	0x03BA4734 TBNZ X8, 0x0, 0x3BA474C
	0x03BA4738 ADRP X0, 0x5B8000
	0x03BA473C LDR X0, [X0 + 0xC20]
	0x03BA4740 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3148]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3096]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3148], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3096]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_finalizeRaycastResults(System.Action`2<UnityEngine.EventSystems.PointerEventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult>> value)

Disassembly:
	0x03BA4744 MOVZ W8, 0x1
	0x03BA4748 STRB W8, [X21 + 0xC64]
	0x03BA474C ADRP X24, 0x5B8000
	0x03BA4750 LDR X21, [X20 + 0xF8]!
	0x03BA4754 LDR X24, [X24 + 0xC20]
	0x03BA4758 MOV X0, X21
	0x03BA475C MOV X1, X19
	0x03BA4760 MOV X2, X31
	0x03BA4764 BL 0x33C0DE4
	0x03BA4768 CBZ X0, 0x3BA4788
	0x03BA476C LDR X23, [X24]
	0x03BA4770 MOV X22, X0
	0x03BA4774 MOV X1, X23
	0x03BA4778 BL 0x1C16E00
	0x03BA477C MOV X1, X0
	0x03BA4780 CBNZ X0, 0x3BA478C
	0x03BA4784 B 0x3BA47B8
	0x03BA4788 MOV X1, X31
	0x03BA478C MOV X0, X20
	0x03BA4790 MOV X2, X21
	0x03BA4794 BL 0x1C24138
	0x03BA4798 CMP X21, X0
	0x03BA479C MOV X21, X0
	0x03BA47A0 B.NE 0x3BA4758
	0x03BA47A4 LDP X20, X19, [X31 + 0x30]
	0x03BA47A8 LDP X22, X21, [X31 + 0x20]
	0x03BA47AC LDP X24, X23, [X31 + 0x10]
	0x03BA47B0 LDR X30, [X31], #0x40
	0x03BA47B4 RET
	0x03BA47B8 MOV X0, X22
	0x03BA47BC MOV X1, X23
	0x03BA47C0 BL 0x1C171E0
	0x03BA47C4 STR X30, [X31 - 0x40]!
	0x03BA47C8 STP X24, X23, [X31 + 0x10]
	0x03BA47CC STP X22, X21, [X31 + 0x20]
	0x03BA47D0 STP X20, X19, [X31 + 0x30]
	0x03BA47D4 ADRP X21, 0x83E000
	0x03BA47D8 LDRB W8, [X21 + 0xC65]
	0x03BA47DC MOV X19, X1
	0x03BA47E0 MOV X20, X0
	0x03BA47E4 TBNZ X8, 0x0, 0x3BA47FC
	0x03BA47E8 ADRP X0, 0x5B8000
	0x03BA47EC LDR X0, [X0 + 0xC20]
	0x03BA47F0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3149]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3096]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3149], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3096]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_pointerEnter(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA47F4 MOVZ W8, 0x1
	0x03BA47F8 STRB W8, [X21 + 0xC65]
	0x03BA47FC ADRP X24, 0x5B8000
	0x03BA4800 LDR X21, [X20 + 0xF8]!
	0x03BA4804 LDR X24, [X24 + 0xC20]
	0x03BA4808 MOV X0, X21
	0x03BA480C MOV X1, X19
	0x03BA4810 MOV X2, X31
	0x03BA4814 BL 0x33C0FDC
	0x03BA4818 CBZ X0, 0x3BA4838
	0x03BA481C LDR X23, [X24]
	0x03BA4820 MOV X22, X0
	0x03BA4824 MOV X1, X23
	0x03BA4828 BL 0x1C16E00
	0x03BA482C MOV X1, X0
	0x03BA4830 CBNZ X0, 0x3BA483C
	0x03BA4834 B 0x3BA4868
	0x03BA4838 MOV X1, X31
	0x03BA483C MOV X0, X20
	0x03BA4840 MOV X2, X21
	0x03BA4844 BL 0x1C24138
	0x03BA4848 CMP X21, X0
	0x03BA484C MOV X21, X0
	0x03BA4850 B.NE 0x3BA4808
	0x03BA4854 LDP X20, X19, [X31 + 0x30]
	0x03BA4858 LDP X22, X21, [X31 + 0x20]
	0x03BA485C LDP X24, X23, [X31 + 0x10]
	0x03BA4860 LDR X30, [X31], #0x40
	0x03BA4864 RET
	0x03BA4868 MOV X0, X22
	0x03BA486C MOV X1, X23
	0x03BA4870 BL 0x1C171E0
	0x03BA4874 STR X30, [X31 - 0x40]!
	0x03BA4878 STP X24, X23, [X31 + 0x10]
	0x03BA487C STP X22, X21, [X31 + 0x20]
	0x03BA4880 STP X20, X19, [X31 + 0x30]
	0x03BA4884 ADRP X21, 0x83E000
	0x03BA4888 LDRB W8, [X21 + 0xC66]
	0x03BA488C MOV X19, X1
	0x03BA4890 MOV X20, X0
	0x03BA4894 TBNZ X8, 0x0, 0x3BA48AC
	0x03BA4898 ADRP X0, 0x5B8000
	0x03BA489C LDR X0, [X0 + 0xC28]
	0x03BA48A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3150]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3150], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_pointerEnter(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA48A4 MOVZ W8, 0x1
	0x03BA48A8 STRB W8, [X21 + 0xC66]
	0x03BA48AC ADRP X24, 0x5B8000
	0x03BA48B0 LDR X21, [X20 + 0x100]
	0x03BA48B4 LDR X24, [X24 + 0xC28]
	0x03BA48B8 ADD X20, X20, 0x100
	0x03BA48BC MOV X0, X21
	0x03BA48C0 MOV X1, X19
	0x03BA48C4 MOV X2, X31
	0x03BA48C8 BL 0x33C0DE4
	0x03BA48CC CBZ X0, 0x3BA48EC
	0x03BA48D0 LDR X23, [X24]
	0x03BA48D4 MOV X22, X0
	0x03BA48D8 MOV X1, X23
	0x03BA48DC BL 0x1C16E00
	0x03BA48E0 MOV X1, X0
	0x03BA48E4 CBNZ X0, 0x3BA48F0
	0x03BA48E8 B 0x3BA491C
	0x03BA48EC MOV X1, X31
	0x03BA48F0 MOV X0, X20
	0x03BA48F4 MOV X2, X21
	0x03BA48F8 BL 0x1C24138
	0x03BA48FC CMP X21, X0
	0x03BA4900 MOV X21, X0
	0x03BA4904 B.NE 0x3BA48BC
	0x03BA4908 LDP X20, X19, [X31 + 0x30]
	0x03BA490C LDP X22, X21, [X31 + 0x20]
	0x03BA4910 LDP X24, X23, [X31 + 0x10]
	0x03BA4914 LDR X30, [X31], #0x40
	0x03BA4918 RET
	0x03BA491C MOV X0, X22
	0x03BA4920 MOV X1, X23
	0x03BA4924 BL 0x1C171E0
	0x03BA4928 STR X30, [X31 - 0x40]!
	0x03BA492C STP X24, X23, [X31 + 0x10]
	0x03BA4930 STP X22, X21, [X31 + 0x20]
	0x03BA4934 STP X20, X19, [X31 + 0x30]
	0x03BA4938 ADRP X21, 0x83E000
	0x03BA493C LDRB W8, [X21 + 0xC67]
	0x03BA4940 MOV X19, X1
	0x03BA4944 MOV X20, X0
	0x03BA4948 TBNZ X8, 0x0, 0x3BA4960
	0x03BA494C ADRP X0, 0x5B8000
	0x03BA4950 LDR X0, [X0 + 0xC28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3151]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3151], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_pointerExit(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4954 BL 0x1C16CF4
	0x03BA4958 MOVZ W8, 0x1
	0x03BA495C STRB W8, [X21 + 0xC67]
	0x03BA4960 ADRP X24, 0x5B8000
	0x03BA4964 LDR X21, [X20 + 0x100]
	0x03BA4968 LDR X24, [X24 + 0xC28]
	0x03BA496C ADD X20, X20, 0x100
	0x03BA4970 MOV X0, X21
	0x03BA4974 MOV X1, X19
	0x03BA4978 MOV X2, X31
	0x03BA497C BL 0x33C0FDC
	0x03BA4980 CBZ X0, 0x3BA49A0
	0x03BA4984 LDR X23, [X24]
	0x03BA4988 MOV X22, X0
	0x03BA498C MOV X1, X23
	0x03BA4990 BL 0x1C16E00
	0x03BA4994 MOV X1, X0
	0x03BA4998 CBNZ X0, 0x3BA49A4
	0x03BA499C B 0x3BA49D0
	0x03BA49A0 MOV X1, X31
	0x03BA49A4 MOV X0, X20
	0x03BA49A8 MOV X2, X21
	0x03BA49AC BL 0x1C24138
	0x03BA49B0 CMP X21, X0
	0x03BA49B4 MOV X21, X0
	0x03BA49B8 B.NE 0x3BA4970
	0x03BA49BC LDP X20, X19, [X31 + 0x30]
	0x03BA49C0 LDP X22, X21, [X31 + 0x20]
	0x03BA49C4 LDP X24, X23, [X31 + 0x10]
	0x03BA49C8 LDR X30, [X31], #0x40
	0x03BA49CC RET
	0x03BA49D0 MOV X0, X22
	0x03BA49D4 MOV X1, X23
	0x03BA49D8 BL 0x1C171E0
	0x03BA49DC STR X30, [X31 - 0x40]!
	0x03BA49E0 STP X24, X23, [X31 + 0x10]
	0x03BA49E4 STP X22, X21, [X31 + 0x20]
	0x03BA49E8 STP X20, X19, [X31 + 0x30]
	0x03BA49EC ADRP X21, 0x83E000
	0x03BA49F0 LDRB W8, [X21 + 0xC68]
	0x03BA49F4 MOV X19, X1
	0x03BA49F8 MOV X20, X0
	0x03BA49FC TBNZ X8, 0x0, 0x3BA4A14
	0x03BA4A00 ADRP X0, 0x5B8000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3152]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3152], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_pointerExit(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4A04 LDR X0, [X0 + 0xC30]
	0x03BA4A08 BL 0x1C16CF4
	0x03BA4A0C MOVZ W8, 0x1
	0x03BA4A10 STRB W8, [X21 + 0xC68]
	0x03BA4A14 ADRP X24, 0x5B8000
	0x03BA4A18 LDR X21, [X20 + 0x108]
	0x03BA4A1C LDR X24, [X24 + 0xC30]
	0x03BA4A20 ADD X20, X20, 0x108
	0x03BA4A24 MOV X0, X21
	0x03BA4A28 MOV X1, X19
	0x03BA4A2C MOV X2, X31
	0x03BA4A30 BL 0x33C0DE4
	0x03BA4A34 CBZ X0, 0x3BA4A54
	0x03BA4A38 LDR X23, [X24]
	0x03BA4A3C MOV X22, X0
	0x03BA4A40 MOV X1, X23
	0x03BA4A44 BL 0x1C16E00
	0x03BA4A48 MOV X1, X0
	0x03BA4A4C CBNZ X0, 0x3BA4A58
	0x03BA4A50 B 0x3BA4A84
	0x03BA4A54 MOV X1, X31
	0x03BA4A58 MOV X0, X20
	0x03BA4A5C MOV X2, X21
	0x03BA4A60 BL 0x1C24138
	0x03BA4A64 CMP X21, X0
	0x03BA4A68 MOV X21, X0
	0x03BA4A6C B.NE 0x3BA4A24
	0x03BA4A70 LDP X20, X19, [X31 + 0x30]
	0x03BA4A74 LDP X22, X21, [X31 + 0x20]
	0x03BA4A78 LDP X24, X23, [X31 + 0x10]
	0x03BA4A7C LDR X30, [X31], #0x40
	0x03BA4A80 RET
	0x03BA4A84 MOV X0, X22
	0x03BA4A88 MOV X1, X23
	0x03BA4A8C BL 0x1C171E0
	0x03BA4A90 STR X30, [X31 - 0x40]!
	0x03BA4A94 STP X24, X23, [X31 + 0x10]
	0x03BA4A98 STP X22, X21, [X31 + 0x20]
	0x03BA4A9C STP X20, X19, [X31 + 0x30]
	0x03BA4AA0 ADRP X21, 0x83E000
	0x03BA4AA4 LDRB W8, [X21 + 0xC69]
	0x03BA4AA8 MOV X19, X1
	0x03BA4AAC MOV X20, X0
	0x03BA4AB0 TBNZ X8, 0x0, 0x3BA4AC8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3153]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3153], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_pointerDown(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4AB4 ADRP X0, 0x5B8000
	0x03BA4AB8 LDR X0, [X0 + 0xC30]
	0x03BA4ABC BL 0x1C16CF4
	0x03BA4AC0 MOVZ W8, 0x1
	0x03BA4AC4 STRB W8, [X21 + 0xC69]
	0x03BA4AC8 ADRP X24, 0x5B8000
	0x03BA4ACC LDR X21, [X20 + 0x108]
	0x03BA4AD0 LDR X24, [X24 + 0xC30]
	0x03BA4AD4 ADD X20, X20, 0x108
	0x03BA4AD8 MOV X0, X21
	0x03BA4ADC MOV X1, X19
	0x03BA4AE0 MOV X2, X31
	0x03BA4AE4 BL 0x33C0FDC
	0x03BA4AE8 CBZ X0, 0x3BA4B08
	0x03BA4AEC LDR X23, [X24]
	0x03BA4AF0 MOV X22, X0
	0x03BA4AF4 MOV X1, X23
	0x03BA4AF8 BL 0x1C16E00
	0x03BA4AFC MOV X1, X0
	0x03BA4B00 CBNZ X0, 0x3BA4B0C
	0x03BA4B04 B 0x3BA4B38
	0x03BA4B08 MOV X1, X31
	0x03BA4B0C MOV X0, X20
	0x03BA4B10 MOV X2, X21
	0x03BA4B14 BL 0x1C24138
	0x03BA4B18 CMP X21, X0
	0x03BA4B1C MOV X21, X0
	0x03BA4B20 B.NE 0x3BA4AD8
	0x03BA4B24 LDP X20, X19, [X31 + 0x30]
	0x03BA4B28 LDP X22, X21, [X31 + 0x20]
	0x03BA4B2C LDP X24, X23, [X31 + 0x10]
	0x03BA4B30 LDR X30, [X31], #0x40
	0x03BA4B34 RET
	0x03BA4B38 MOV X0, X22
	0x03BA4B3C MOV X1, X23
	0x03BA4B40 BL 0x1C171E0
	0x03BA4B44 STR X30, [X31 - 0x40]!
	0x03BA4B48 STP X24, X23, [X31 + 0x10]
	0x03BA4B4C STP X22, X21, [X31 + 0x20]
	0x03BA4B50 STP X20, X19, [X31 + 0x30]
	0x03BA4B54 ADRP X21, 0x83E000
	0x03BA4B58 LDRB W8, [X21 + 0xC6A]
	0x03BA4B5C MOV X19, X1
	0x03BA4B60 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3154]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3154], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 176
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_pointerDown(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4B64 TBNZ X8, 0x0, 0x3BA4B7C
	0x03BA4B68 ADRP X0, 0x5B8000
	0x03BA4B6C LDR X0, [X0 + 0xC28]
	0x03BA4B70 BL 0x1C16CF4
	0x03BA4B74 MOVZ W8, 0x1
	0x03BA4B78 STRB W8, [X21 + 0xC6A]
	0x03BA4B7C ADRP X24, 0x5B8000
	0x03BA4B80 LDR X21, [X20 + 0x110]
	0x03BA4B84 LDR X24, [X24 + 0xC28]
	0x03BA4B88 ADD X20, X20, 0x110
	0x03BA4B8C MOV X0, X21
	0x03BA4B90 MOV X1, X19
	0x03BA4B94 MOV X2, X31
	0x03BA4B98 BL 0x33C0DE4
	0x03BA4B9C CBZ X0, 0x3BA4BBC
	0x03BA4BA0 LDR X23, [X24]
	0x03BA4BA4 MOV X22, X0
	0x03BA4BA8 MOV X1, X23
	0x03BA4BAC BL 0x1C16E00
	0x03BA4BB0 MOV X1, X0
	0x03BA4BB4 CBNZ X0, 0x3BA4BC0
	0x03BA4BB8 B 0x3BA4BEC
	0x03BA4BBC MOV X1, X31
	0x03BA4BC0 MOV X0, X20
	0x03BA4BC4 MOV X2, X21
	0x03BA4BC8 BL 0x1C24138
	0x03BA4BCC CMP X21, X0
	0x03BA4BD0 MOV X21, X0
	0x03BA4BD4 B.NE 0x3BA4B8C
	0x03BA4BD8 LDP X20, X19, [X31 + 0x30]
	0x03BA4BDC LDP X22, X21, [X31 + 0x20]
	0x03BA4BE0 LDP X24, X23, [X31 + 0x10]
	0x03BA4BE4 LDR X30, [X31], #0x40
	0x03BA4BE8 RET
	0x03BA4BEC MOV X0, X22
	0x03BA4BF0 MOV X1, X23
	0x03BA4BF4 BL 0x1C171E0
	0x03BA4BF8 STR X30, [X31 - 0x40]!
	0x03BA4BFC STP X24, X23, [X31 + 0x10]
	0x03BA4C00 STP X22, X21, [X31 + 0x20]
	0x03BA4C04 STP X20, X19, [X31 + 0x30]
	0x03BA4C08 ADRP X21, 0x83E000
	0x03BA4C0C LDRB W8, [X21 + 0xC6B]
	0x03BA4C10 MOV X19, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3155]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3155], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 176
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_pointerUp(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4C14 MOV X20, X0
	0x03BA4C18 TBNZ X8, 0x0, 0x3BA4C30
	0x03BA4C1C ADRP X0, 0x5B8000
	0x03BA4C20 LDR X0, [X0 + 0xC28]
	0x03BA4C24 BL 0x1C16CF4
	0x03BA4C28 MOVZ W8, 0x1
	0x03BA4C2C STRB W8, [X21 + 0xC6B]
	0x03BA4C30 ADRP X24, 0x5B8000
	0x03BA4C34 LDR X21, [X20 + 0x110]
	0x03BA4C38 LDR X24, [X24 + 0xC28]
	0x03BA4C3C ADD X20, X20, 0x110
	0x03BA4C40 MOV X0, X21
	0x03BA4C44 MOV X1, X19
	0x03BA4C48 MOV X2, X31
	0x03BA4C4C BL 0x33C0FDC
	0x03BA4C50 CBZ X0, 0x3BA4C70
	0x03BA4C54 LDR X23, [X24]
	0x03BA4C58 MOV X22, X0
	0x03BA4C5C MOV X1, X23
	0x03BA4C60 BL 0x1C16E00
	0x03BA4C64 MOV X1, X0
	0x03BA4C68 CBNZ X0, 0x3BA4C74
	0x03BA4C6C B 0x3BA4CA0
	0x03BA4C70 MOV X1, X31
	0x03BA4C74 MOV X0, X20
	0x03BA4C78 MOV X2, X21
	0x03BA4C7C BL 0x1C24138
	0x03BA4C80 CMP X21, X0
	0x03BA4C84 MOV X21, X0
	0x03BA4C88 B.NE 0x3BA4C40
	0x03BA4C8C LDP X20, X19, [X31 + 0x30]
	0x03BA4C90 LDP X22, X21, [X31 + 0x20]
	0x03BA4C94 LDP X24, X23, [X31 + 0x10]
	0x03BA4C98 LDR X30, [X31], #0x40
	0x03BA4C9C RET
	0x03BA4CA0 MOV X0, X22
	0x03BA4CA4 MOV X1, X23
	0x03BA4CA8 BL 0x1C171E0
	0x03BA4CAC STR X30, [X31 - 0x40]!
	0x03BA4CB0 STP X24, X23, [X31 + 0x10]
	0x03BA4CB4 STP X22, X21, [X31 + 0x20]
	0x03BA4CB8 STP X20, X19, [X31 + 0x30]
	0x03BA4CBC ADRP X21, 0x83E000
	0x03BA4CC0 LDRB W8, [X21 + 0xC6C]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3156]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3156], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 184
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_pointerUp(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4CC4 MOV X19, X1
	0x03BA4CC8 MOV X20, X0
	0x03BA4CCC TBNZ X8, 0x0, 0x3BA4CE4
	0x03BA4CD0 ADRP X0, 0x5B8000
	0x03BA4CD4 LDR X0, [X0 + 0xC28]
	0x03BA4CD8 BL 0x1C16CF4
	0x03BA4CDC MOVZ W8, 0x1
	0x03BA4CE0 STRB W8, [X21 + 0xC6C]
	0x03BA4CE4 ADRP X24, 0x5B8000
	0x03BA4CE8 LDR X21, [X20 + 0x118]
	0x03BA4CEC LDR X24, [X24 + 0xC28]
	0x03BA4CF0 ADD X20, X20, 0x118
	0x03BA4CF4 MOV X0, X21
	0x03BA4CF8 MOV X1, X19
	0x03BA4CFC MOV X2, X31
	0x03BA4D00 BL 0x33C0DE4
	0x03BA4D04 CBZ X0, 0x3BA4D24
	0x03BA4D08 LDR X23, [X24]
	0x03BA4D0C MOV X22, X0
	0x03BA4D10 MOV X1, X23
	0x03BA4D14 BL 0x1C16E00
	0x03BA4D18 MOV X1, X0
	0x03BA4D1C CBNZ X0, 0x3BA4D28
	0x03BA4D20 B 0x3BA4D54
	0x03BA4D24 MOV X1, X31
	0x03BA4D28 MOV X0, X20
	0x03BA4D2C MOV X2, X21
	0x03BA4D30 BL 0x1C24138
	0x03BA4D34 CMP X21, X0
	0x03BA4D38 MOV X21, X0
	0x03BA4D3C B.NE 0x3BA4CF4
	0x03BA4D40 LDP X20, X19, [X31 + 0x30]
	0x03BA4D44 LDP X22, X21, [X31 + 0x20]
	0x03BA4D48 LDP X24, X23, [X31 + 0x10]
	0x03BA4D4C LDR X30, [X31], #0x40
	0x03BA4D50 RET
	0x03BA4D54 MOV X0, X22
	0x03BA4D58 MOV X1, X23
	0x03BA4D5C BL 0x1C171E0
	0x03BA4D60 STR X30, [X31 - 0x40]!
	0x03BA4D64 STP X24, X23, [X31 + 0x10]
	0x03BA4D68 STP X22, X21, [X31 + 0x20]
	0x03BA4D6C STP X20, X19, [X31 + 0x30]
	0x03BA4D70 ADRP X21, 0x83E000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3157]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3157], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 184
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_pointerClick(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4D74 LDRB W8, [X21 + 0xC6D]
	0x03BA4D78 MOV X19, X1
	0x03BA4D7C MOV X20, X0
	0x03BA4D80 TBNZ X8, 0x0, 0x3BA4D98
	0x03BA4D84 ADRP X0, 0x5B8000
	0x03BA4D88 LDR X0, [X0 + 0xC28]
	0x03BA4D8C BL 0x1C16CF4
	0x03BA4D90 MOVZ W8, 0x1
	0x03BA4D94 STRB W8, [X21 + 0xC6D]
	0x03BA4D98 ADRP X24, 0x5B8000
	0x03BA4D9C LDR X21, [X20 + 0x118]
	0x03BA4DA0 LDR X24, [X24 + 0xC28]
	0x03BA4DA4 ADD X20, X20, 0x118
	0x03BA4DA8 MOV X0, X21
	0x03BA4DAC MOV X1, X19
	0x03BA4DB0 MOV X2, X31
	0x03BA4DB4 BL 0x33C0FDC
	0x03BA4DB8 CBZ X0, 0x3BA4DD8
	0x03BA4DBC LDR X23, [X24]
	0x03BA4DC0 MOV X22, X0
	0x03BA4DC4 MOV X1, X23
	0x03BA4DC8 BL 0x1C16E00
	0x03BA4DCC MOV X1, X0
	0x03BA4DD0 CBNZ X0, 0x3BA4DDC
	0x03BA4DD4 B 0x3BA4E08
	0x03BA4DD8 MOV X1, X31
	0x03BA4DDC MOV X0, X20
	0x03BA4DE0 MOV X2, X21
	0x03BA4DE4 BL 0x1C24138
	0x03BA4DE8 CMP X21, X0
	0x03BA4DEC MOV X21, X0
	0x03BA4DF0 B.NE 0x3BA4DA8
	0x03BA4DF4 LDP X20, X19, [X31 + 0x30]
	0x03BA4DF8 LDP X22, X21, [X31 + 0x20]
	0x03BA4DFC LDP X24, X23, [X31 + 0x10]
	0x03BA4E00 LDR X30, [X31], #0x40
	0x03BA4E04 RET
	0x03BA4E08 MOV X0, X22
	0x03BA4E0C MOV X1, X23
	0x03BA4E10 BL 0x1C171E0
	0x03BA4E14 STR X30, [X31 - 0x40]!
	0x03BA4E18 STP X24, X23, [X31 + 0x10]
	0x03BA4E1C STP X22, X21, [X31 + 0x20]
	0x03BA4E20 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3158]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3158], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 192
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_pointerClick(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4E24 ADRP X24, 0x83E000
	0x03BA4E28 ADRP X23, 0x5B8000
	0x03BA4E2C ADRP X20, 0x5B8000
	0x03BA4E30 ADRP X22, 0x5B8000
	0x03BA4E34 ADRP X21, 0x5B8000
	0x03BA4E38 LDRB W8, [X24 + 0xC6E]
	0x03BA4E3C LDR X23, [X23 + 0xC38]
	0x03BA4E40 LDR X20, [X20 + 0xC40]
	0x03BA4E44 LDR X22, [X22 + 0xC48]
	0x03BA4E48 LDR X21, [X21 + 0xC50]
	0x03BA4E4C MOV X19, X0
	0x03BA4E50 TBNZ X8, 0x0, 0x3BA4E8C
	0x03BA4E54 ADRP X0, 0x5B8000
	0x03BA4E58 LDR X0, [X0 + 0xC40]
	0x03BA4E5C BL 0x1C16CF4
	0x03BA4E60 ADRP X0, 0x5B8000
	0x03BA4E64 LDR X0, [X0 + 0xC50]
	0x03BA4E68 BL 0x1C16CF4
	0x03BA4E6C ADRP X0, 0x5B8000
	0x03BA4E70 LDR X0, [X0 + 0xC48]
	0x03BA4E74 BL 0x1C16CF4
	0x03BA4E78 ADRP X0, 0x5B8000
	0x03BA4E7C LDR X0, [X0 + 0xC38]
	0x03BA4E80 BL 0x1C16CF4
	0x03BA4E84 MOVZ W8, 0x1
	0x03BA4E88 STRB W8, [X24 + 0xC6E]
	0x03BA4E8C ADRP X8, 0xFFFFFFFFFCF49000
	0x03BA4E90 ADRP X9, 0xFFFFFFFFFCF49000
	0x03BA4E94 LDR V0, [X8 + 0x20]
	0x03BA4E98 LDR V1, [X9 + 0x8C0]
	0x03BA4E9C STUR V0, [X19 + 0x58]
	0x03BA4EA0 STR D1, [X19 + 0x68]
	0x03BA4EA4 LDR X0, [X23]
	0x03BA4EA8 BL 0x1C16F10
	0x03BA4EAC LDR X1, [X20]
	0x03BA4EB0 MOV X20, X0
	0x03BA4EB4 BL 0x2A12DD4
	0x03BA4EB8 STR X20, [X19 + 0x88]
	0x03BA4EBC LDR X0, [X22]
	0x03BA4EC0 BL 0x1C16F10
	0x03BA4EC4 LDR X1, [X21]
	0x03BA4EC8 MOV X20, X0
	0x03BA4ECC BL 0x2A12DD4
	0x03BA4ED0 STR X20, [X19 + 0x90]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3159]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3159], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 192
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_pointerMove(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4ED4 MOV X0, X19
	0x03BA4ED8 LDP X20, X19, [X31 + 0x30]
	0x03BA4EDC LDP X22, X21, [X31 + 0x20]
	0x03BA4EE0 LDP X24, X23, [X31 + 0x10]
	0x03BA4EE4 MOV X1, X31
	0x03BA4EE8 LDR X30, [X31], #0x40
	0x03BA4EEC B 0x3E551FC
	0x03BA4EF0 STP X30, X21, [X31 - 0x20]!
	0x03BA4EF4 STP X20, X19, [X31 + 0x10]
	0x03BA4EF8 ADRP X20, 0x83E000
	0x03BA4EFC ADRP X21, 0x5B8000
	0x03BA4F00 LDRB W8, [X20 + 0xC6F]
	0x03BA4F04 LDR X21, [X21 + 0xC58]
	0x03BA4F08 MOV X19, X0
	0x03BA4F0C TBNZ X8, 0x0, 0x3BA4F24
	0x03BA4F10 ADRP X0, 0x5B8000
	0x03BA4F14 LDR X0, [X0 + 0xC58]
	0x03BA4F18 BL 0x1C16CF4
	0x03BA4F1C MOVZ W8, 0x1
	0x03BA4F20 STRB W8, [X20 + 0xC6F]
	0x03BA4F24 LDR X1, [X21]
	0x03BA4F28 MOV X0, X19
	0x03BA4F2C LDP X20, X19, [X31 + 0x10]
	0x03BA4F30 LDP X30, X21, [X31], #0x20
	0x03BA4F34 B 0x2729B5C
	0x03BA4F38 STP X30, X21, [X31 - 0x20]!
	0x03BA4F3C STP X20, X19, [X31 + 0x10]
	0x03BA4F40 ADRP X20, 0x83E000
	0x03BA4F44 ADRP X21, 0x5B8000
	0x03BA4F48 LDRB W8, [X20 + 0xC70]
	0x03BA4F4C LDR X21, [X21 + 0xC58]
	0x03BA4F50 MOV X19, X0
	0x03BA4F54 TBNZ X8, 0x0, 0x3BA4F6C
	0x03BA4F58 ADRP X0, 0x5B8000
	0x03BA4F5C LDR X0, [X0 + 0xC58]
	0x03BA4F60 BL 0x1C16CF4
	0x03BA4F64 MOVZ W8, 0x1
	0x03BA4F68 STRB W8, [X20 + 0xC70]
	0x03BA4F6C LDR X1, [X21]
	0x03BA4F70 MOV X0, X19
	0x03BA4F74 LDP X20, X19, [X31 + 0x10]
	0x03BA4F78 LDP X30, X21, [X31], #0x20
	0x03BA4F7C B 0x2729B5C
	0x03BA4F80 LDR X0, [X0 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3160]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3160], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 200
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_pointerMove(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA4F84 RET
	0x03BA4F88 STR X1, [X0 + 0x10]
	0x03BA4F8C RET
	0x03BA4F90 ADD X1, X0, 0x18
	0x03BA4F94 MOVZ W2, 0x158
	0x03BA4F98 MOV X0, X8
	0x03BA4F9C B 0x3EB1AC0
	0x03BA4FA0 STR X30, [X31 - 0x10]!
	0x03BA4FA4 ADD X0, X0, 0x18
	0x03BA4FA8 MOVZ W2, 0x158
	0x03BA4FAC BL 0x3EB1B30
	0x03BA4FB0 LDR X30, [X31], #0x10
	0x03BA4FB4 RET
	0x03BA4FB8 LDR X0, [X0 + 0x170]
	0x03BA4FBC RET
	0x03BA4FC0 STR X1, [X0 + 0x170]
	0x03BA4FC4 RET
	0x03BA4FC8 MOV X1, X31
	0x03BA4FCC B 0x33BDD8C
	0x03BA4FD0 LDR W0, [X0 + 0x120]
	0x03BA4FD4 RET
	0x03BA4FD8 STR W1, [X0 + 0x120]
	0x03BA4FDC RET
	0x03BA4FE0 LDRB W0, [X0 + 0x128]
	0x03BA4FE4 RET
	0x03BA4FE8 AND W8, W1, 0x1
	0x03BA4FEC STRB W8, [X0 + 0x128]
	0x03BA4FF0 RET
	0x03BA4FF4 LDRB W0, [X0 + 0x129]
	0x03BA4FF8 RET
	0x03BA4FFC AND W8, W1, 0x1
	0x03BA5000 STRB W8, [X0 + 0x129]
	0x03BA5004 RET
	0x03BA5008 LDRB W0, [X0 + 0x12A]
	0x03BA500C RET
	0x03BA5010 AND W8, W1, 0x1
	0x03BA5014 STRB W8, [X0 + 0x12A]
	0x03BA5018 RET
	0x03BA501C LDR X0, [X0 + 0x130]
	0x03BA5020 RET
	0x03BA5024 ADD X8, X0, 0x130
	0x03BA5028 MOV X2, X1
	0x03BA502C MOV X1, X8
	0x03BA5030 B 0x3BA5034

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83F000
	009 Move W8, [X21+3161]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3161], W8
	021 Move X24, 0x5B9000
	022 Add X20, X20, 200
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_initializePotentialDrag(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA5034 STP X30, X23, [X31 - 0x30]!
	0x03BA5038 STP X22, X21, [X31 + 0x10]
	0x03BA503C STP X20, X19, [X31 + 0x20]
	0x03BA5040 ADRP X22, 0x83D000
	0x03BA5044 ADRP X23, 0x54E000
	0x03BA5048 LDRB W8, [X22 + 0xC7D]
	0x03BA504C LDR X23, [X23 + 0x970]
	0x03BA5050 MOV X21, X2
	0x03BA5054 MOV X19, X1
	0x03BA5058 MOV X20, X0
	0x03BA505C TBNZ X8, 0x0, 0x3BA5080
	0x03BA5060 ADRP X0, 0x54E000
	0x03BA5064 LDR X0, [X0 + 0x970]
	0x03BA5068 BL 0x1C16CF4
	0x03BA506C ADRP X0, 0x54E000
	0x03BA5070 LDR X0, [X0 + 0x598]
	0x03BA5074 BL 0x1C16CF4
	0x03BA5078 MOVZ W8, 0x1
	0x03BA507C STRB W8, [X22 + 0xC7D]
	0x03BA5080 LDR X0, [X23]
	0x03BA5084 LDR W8, [X0 + 0xE0]
	0x03BA5088 CBNZ W8, 0x3BA5090
	0x03BA508C BL 0x1C16DFC
	0x03BA5090 MOV X0, X31
	0x03BA5094 BL 0x3C018E4
	0x03BA5098 TBZ X0, 0x0, 0x3BA50E8
	0x03BA509C ADRP X8, 0x54E000
	0x03BA50A0 LDR X8, [X8 + 0x598]
	0x03BA50A4 LDR X22, [X19]
	0x03BA50A8 LDR X0, [X8]
	0x03BA50AC LDR W8, [X0 + 0xE0]
	0x03BA50B0 CBNZ W8, 0x3BA50B8
	0x03BA50B4 BL 0x1C16DFC
	0x03BA50B8 MOV X0, X22
	0x03BA50BC MOV X1, X31
	0x03BA50C0 MOV X2, X31
	0x03BA50C4 BL 0x3C354F8
	0x03BA50C8 TBZ X0, 0x0, 0x3BA50E8
	0x03BA50CC LDR X0, [X19]
	0x03BA50D0 CBZ X0, 0x3BA5180
	0x03BA50D4 MOV X1, X31
	0x03BA50D8 BL 0x37451B4
	0x03BA50DC CBZ X0, 0x3BA50E8
	0x03BA50E0 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3162]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3162], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 208
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_initializePotentialDrag(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA50E4 BL 0x3735150
	0x03BA50E8 STR X21, [X19]
	0x03BA50EC LDR X0, [X23]
	0x03BA50F0 LDR W8, [X0 + 0xE0]
	0x03BA50F4 CBNZ W8, 0x3BA50FC
	0x03BA50F8 BL 0x1C16DFC
	0x03BA50FC MOV X0, X31
	0x03BA5100 BL 0x3C018E4
	0x03BA5104 TBZ X0, 0x0, 0x3BA5170
	0x03BA5108 MOV X0, X20
	0x03BA510C MOV X1, X31
	0x03BA5110 BL 0x3C32454
	0x03BA5114 TBZ X0, 0x0, 0x3BA5170
	0x03BA5118 ADRP X8, 0x54E000
	0x03BA511C LDR X8, [X8 + 0x598]
	0x03BA5120 LDR X20, [X19]
	0x03BA5124 LDR X0, [X8]
	0x03BA5128 LDR W8, [X0 + 0xE0]
	0x03BA512C CBNZ W8, 0x3BA5134
	0x03BA5130 BL 0x1C16DFC
	0x03BA5134 MOV X0, X20
	0x03BA5138 MOV X1, X31
	0x03BA513C MOV X2, X31
	0x03BA5140 BL 0x3C354F8
	0x03BA5144 TBZ X0, 0x0, 0x3BA5170
	0x03BA5148 LDR X0, [X19]
	0x03BA514C CBZ X0, 0x3BA5180
	0x03BA5150 MOV X1, X31
	0x03BA5154 BL 0x37451B4
	0x03BA5158 CBZ X0, 0x3BA5170
	0x03BA515C LDP X20, X19, [X31 + 0x20]
	0x03BA5160 LDP X22, X21, [X31 + 0x10]
	0x03BA5164 MOV X1, X31
	0x03BA5168 LDP X30, X23, [X31], #0x30
	0x03BA516C B 0x37350C8
	0x03BA5170 LDP X20, X19, [X31 + 0x20]
	0x03BA5174 LDP X22, X21, [X31 + 0x10]
	0x03BA5178 LDP X30, X23, [X31], #0x30
	0x03BA517C RET
	0x03BA5180 BL 0x1C16F20
	0x03BA5184 LDR X0, [X0 + 0x138]
	0x03BA5188 RET
	0x03BA518C ADD X8, X0, 0x138
	0x03BA5190 MOV X2, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3163]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3163], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 208
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_beginDrag(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA5194 MOV X1, X8
	0x03BA5198 B 0x3BA5034
	0x03BA519C LDR X0, [X0 + 0x140]
	0x03BA51A0 RET
	0x03BA51A4 ADD X8, X0, 0x140
	0x03BA51A8 MOV X2, X1
	0x03BA51AC MOV X1, X8
	0x03BA51B0 B 0x3BA5034
	0x03BA51B4 LDR X0, [X0 + 0x148]
	0x03BA51B8 RET
	0x03BA51BC ADD X8, X0, 0x148
	0x03BA51C0 MOV X2, X1
	0x03BA51C4 MOV X1, X8
	0x03BA51C8 B 0x3BA5034
	0x03BA51CC LDR X0, [X0 + 0x150]
	0x03BA51D0 RET
	0x03BA51D4 ADD X8, X0, 0x150
	0x03BA51D8 MOV X2, X1
	0x03BA51DC MOV X1, X8
	0x03BA51E0 B 0x3BA5034
	0x03BA51E4 LDR X0, [X0 + 0x158]
	0x03BA51E8 RET
	0x03BA51EC ADD X8, X0, 0x158
	0x03BA51F0 MOV X2, X1
	0x03BA51F4 MOV X1, X8
	0x03BA51F8 B 0x3BA5034
	0x03BA51FC LDR X0, [X0 + 0x160]
	0x03BA5200 RET
	0x03BA5204 ADD X8, X0, 0x160
	0x03BA5208 MOV X2, X1
	0x03BA520C MOV X1, X8
	0x03BA5210 B 0x3BA5034
	0x03BA5214 LDR X0, [X0 + 0x168]
	0x03BA5218 RET
	0x03BA521C ADD X8, X0, 0x168
	0x03BA5220 MOV X2, X1
	0x03BA5224 MOV X1, X8
	0x03BA5228 B 0x3BA5034
	0x03BA522C LDRB W0, [X0 + 0x170]
	0x03BA5230 RET
	0x03BA5234 STP X30, X19, [X31 - 0x10]!
	0x03BA5238 MOV X19, X0
	0x03BA523C AND W8, W1, 0x1
	0x03BA5240 STRB W8, [X0 + 0x170]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3164]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3164], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 216
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_beginDrag(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA5244 TBZ X1, 0x0, 0x3BA5258
	0x03BA5248 MOV X0, X19
	0x03BA524C BL 0x3BA526C
	0x03BA5250 EOR W8, W0, 0x1
	0x03BA5254 B 0x3BA525C
	0x03BA5258 MOV W8, W31
	0x03BA525C AND W8, W8, 0x1
	0x03BA5260 STRB W8, [X19 + 0x19C]
	0x03BA5264 LDP X30, X19, [X31], #0x10
	0x03BA5268 RET
	0x03BA526C STP X30, X21, [X31 - 0x20]!
	0x03BA5270 STP X20, X19, [X31 + 0x10]
	0x03BA5274 ADRP X20, 0x83D000
	0x03BA5278 ADRP X21, 0x54E000
	0x03BA527C LDRB W8, [X20 + 0xC79]
	0x03BA5280 LDR X21, [X21 + 0x598]
	0x03BA5284 MOV X19, X0
	0x03BA5288 TBNZ X8, 0x0, 0x3BA52A0
	0x03BA528C ADRP X0, 0x54E000
	0x03BA5290 LDR X0, [X0 + 0x598]
	0x03BA5294 BL 0x1C16CF4
	0x03BA5298 MOVZ W8, 0x1
	0x03BA529C STRB W8, [X20 + 0xC79]
	0x03BA52A0 LDR X0, [X21]
	0x03BA52A4 LDR X20, [X19 + 0x130]
	0x03BA52A8 LDR W8, [X0 + 0xE0]
	0x03BA52AC CBNZ W8, 0x3BA52B4
	0x03BA52B0 BL 0x1C16DFC
	0x03BA52B4 MOV X0, X20
	0x03BA52B8 MOV X1, X31
	0x03BA52BC MOV X2, X31
	0x03BA52C0 BL 0x3C354F8
	0x03BA52C4 TBNZ X0, 0x0, 0x3BA53B8
	0x03BA52C8 LDR X0, [X21]
	0x03BA52CC LDR X20, [X19 + 0x138]
	0x03BA52D0 LDR W8, [X0 + 0xE0]
	0x03BA52D4 CBNZ W8, 0x3BA52DC
	0x03BA52D8 BL 0x1C16DFC
	0x03BA52DC MOV X0, X20
	0x03BA52E0 MOV X1, X31
	0x03BA52E4 MOV X2, X31
	0x03BA52E8 BL 0x3C354F8
	0x03BA52EC TBNZ X0, 0x0, 0x3BA53B8
	0x03BA52F0 LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3165]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3165], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 216
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_drag(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA52F4 LDR X20, [X19 + 0x148]
	0x03BA52F8 LDR W8, [X0 + 0xE0]
	0x03BA52FC CBNZ W8, 0x3BA5304
	0x03BA5300 BL 0x1C16DFC
	0x03BA5304 MOV X0, X20
	0x03BA5308 MOV X1, X31
	0x03BA530C MOV X2, X31
	0x03BA5310 BL 0x3C354F8
	0x03BA5314 TBNZ X0, 0x0, 0x3BA53B8
	0x03BA5318 LDR X0, [X21]
	0x03BA531C LDR X20, [X19 + 0x140]
	0x03BA5320 LDR W8, [X0 + 0xE0]
	0x03BA5324 CBNZ W8, 0x3BA532C
	0x03BA5328 BL 0x1C16DFC
	0x03BA532C MOV X0, X20
	0x03BA5330 MOV X1, X31
	0x03BA5334 MOV X2, X31
	0x03BA5338 BL 0x3C354F8
	0x03BA533C TBNZ X0, 0x0, 0x3BA53B8
	0x03BA5340 LDR X0, [X21]
	0x03BA5344 LDR X20, [X19 + 0x158]
	0x03BA5348 LDR W8, [X0 + 0xE0]
	0x03BA534C CBNZ W8, 0x3BA5354
	0x03BA5350 BL 0x1C16DFC
	0x03BA5354 MOV X0, X20
	0x03BA5358 MOV X1, X31
	0x03BA535C MOV X2, X31
	0x03BA5360 BL 0x3C354F8
	0x03BA5364 TBNZ X0, 0x0, 0x3BA53B8
	0x03BA5368 LDR X0, [X21]
	0x03BA536C LDR X20, [X19 + 0x160]
	0x03BA5370 LDR W8, [X0 + 0xE0]
	0x03BA5374 CBNZ W8, 0x3BA537C
	0x03BA5378 BL 0x1C16DFC
	0x03BA537C MOV X0, X20
	0x03BA5380 MOV X1, X31
	0x03BA5384 MOV X2, X31
	0x03BA5388 BL 0x3C354F8
	0x03BA538C TBNZ X0, 0x0, 0x3BA53B8
	0x03BA5390 LDR X0, [X21]
	0x03BA5394 LDR X20, [X19 + 0x168]
	0x03BA5398 LDR W8, [X0 + 0xE0]
	0x03BA539C CBNZ W8, 0x3BA53A4
	0x03BA53A0 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3166]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3166], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 224
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_drag(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA53A4 MOV X0, X20
	0x03BA53A8 MOV X1, X31
	0x03BA53AC MOV X2, X31
	0x03BA53B0 BL 0x3C354F8
	0x03BA53B4 TBZ X0, 0x0, 0x3BA53C8
	0x03BA53B8 LDP X20, X19, [X31 + 0x10]
	0x03BA53BC MOVZ W0, 0x1
	0x03BA53C0 LDP X30, X21, [X31], #0x20
	0x03BA53C4 RET
	0x03BA53C8 LDR X0, [X21]
	0x03BA53CC LDR X19, [X19 + 0x150]
	0x03BA53D0 LDR W8, [X0 + 0xE0]
	0x03BA53D4 CBNZ W8, 0x3BA53DC
	0x03BA53D8 BL 0x1C16DFC
	0x03BA53DC MOV X0, X19
	0x03BA53E0 LDP X20, X19, [X31 + 0x10]
	0x03BA53E4 MOV X1, X31
	0x03BA53E8 MOV X2, X31
	0x03BA53EC LDP X30, X21, [X31], #0x20
	0x03BA53F0 B 0x3C354F8
	0x03BA53F4 LDRB W0, [X0 + 0x171]
	0x03BA53F8 RET
	0x03BA53FC AND W8, W1, 0x1
	0x03BA5400 STRB W8, [X0 + 0x171]
	0x03BA5404 RET
	0x03BA5408 LDRB W0, [X0 + 0x172]
	0x03BA540C RET
	0x03BA5410 AND W8, W1, 0x1
	0x03BA5414 STRB W8, [X0 + 0x172]
	0x03BA5418 RET
	0x03BA541C LDR X0, [X0 + 0x178]
	0x03BA5420 RET
	0x03BA5424 STR X1, [X0 + 0x178]
	0x03BA5428 RET
	0x03BA542C LDR X0, [X0 + 0x180]
	0x03BA5430 RET
	0x03BA5434 STR X1, [X0 + 0x180]
	0x03BA5438 RET
	0x03BA543C LDR X0, [X0 + 0x188]
	0x03BA5440 RET
	0x03BA5444 STR X1, [X0 + 0x188]
	0x03BA5448 RET
	0x03BA544C LDR X0, [X0 + 0x190]
	0x03BA5450 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3167]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3167], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 224
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_endDrag(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA5454 STR X1, [X0 + 0x190]
	0x03BA5458 RET
	0x03BA545C SUB X31, X31, 0x1E0
	0x03BA5460 STP X29, X30, [X31 + 0x1C0]
	0x03BA5464 STP X20, X19, [X31 + 0x1D0]
	0x03BA5468 MOV X1, X31
	0x03BA546C MOV X19, X0
	0x03BA5470 BL 0x3E54188
	0x03BA5474 LDR W20, [X19 + 0x198]
	0x03BA5478 MOVZ W8, 0x1
	0x03BA547C STR W8, [X19 + 0x120]
	0x03BA5480 ADD X0, X31, 0x8
	0x03BA5484 ADD W8, W20, 0x1
	0x03BA5488 MOVZ W2, 0x1B8
	0x03BA548C MOV W1, W31
	0x03BA5490 STR W8, [X19 + 0x198]
	0x03BA5494 BL 0x3EB1B10
	0x03BA5498 ADD X0, X31, 0x8
	0x03BA549C MOV W1, W20
	0x03BA54A0 MOV X2, X31
	0x03BA54A4 BL 0x3B9907C
	0x03BA54A8 ADD X0, X19, 0x1A0
	0x03BA54AC ADD X1, X31, 0x8
	0x03BA54B0 MOVZ W2, 0x1B8
	0x03BA54B4 BL 0x3EB1AC0
	0x03BA54B8 ADD X8, X19, 0x358
	0x03BA54BC MOVI V0.2D, 0x0
	0x03BA54C0 STP V0, V0, [X8]
	0x03BA54C4 LDRB W8, [X19 + 0x170]
	0x03BA54C8 CBZ W8, 0x3BA54D8
	0x03BA54CC MOV X0, X19
	0x03BA54D0 BL 0x3BA526C
	0x03BA54D4 EOR W8, W0, 0x1
	0x03BA54D8 LDR W9, [X19 + 0x120]
	0x03BA54DC AND W8, W8, 0x1
	0x03BA54E0 STRB W8, [X19 + 0x19C]
	0x03BA54E4 CBZ W9, 0x3BA54F0
	0x03BA54E8 MOV X0, X19
	0x03BA54EC BL 0x3BA5500
	0x03BA54F0 LDP X20, X19, [X31 + 0x1D0]
	0x03BA54F4 LDP X29, X30, [X31 + 0x1C0]
	0x03BA54F8 ADD X31, X31, 0x1E0
	0x03BA54FC RET
	0x03BA5500 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3168]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3168], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 232
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_endDrag(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA5504 MOV X19, X0
	0x03BA5508 LDR X0, [X0 + 0x130]
	0x03BA550C BL 0x3BA6CE8
	0x03BA5510 LDR X0, [X19 + 0x138]
	0x03BA5514 BL 0x3BA6CE8
	0x03BA5518 LDR X0, [X19 + 0x148]
	0x03BA551C BL 0x3BA6CE8
	0x03BA5520 LDR X0, [X19 + 0x140]
	0x03BA5524 BL 0x3BA6CE8
	0x03BA5528 LDR X0, [X19 + 0x158]
	0x03BA552C BL 0x3BA6CE8
	0x03BA5530 LDR X0, [X19 + 0x160]
	0x03BA5534 BL 0x3BA6CE8
	0x03BA5538 LDR X0, [X19 + 0x168]
	0x03BA553C BL 0x3BA6CE8
	0x03BA5540 LDR X0, [X19 + 0x150]
	0x03BA5544 LDP X30, X19, [X31], #0x10
	0x03BA5548 B 0x3BA6CE8
	0x03BA554C STP X30, X19, [X31 - 0x10]!
	0x03BA5550 LDR W1, [X0 + 0x1A0]
	0x03BA5554 MOV X19, X0
	0x03BA5558 BL 0x3BA3604
	0x03BA555C LDR W8, [X19 + 0x120]
	0x03BA5560 CBZ W8, 0x3BA556C
	0x03BA5564 MOV X0, X19
	0x03BA5568 BL 0x3BA557C
	0x03BA556C MOV X0, X19
	0x03BA5570 MOV X1, X31
	0x03BA5574 LDP X30, X19, [X31], #0x10
	0x03BA5578 B 0x3E541E0
	0x03BA557C STP X30, X19, [X31 - 0x10]!
	0x03BA5580 MOV X19, X0
	0x03BA5584 LDR X0, [X0 + 0x130]
	0x03BA5588 BL 0x3BA6D84
	0x03BA558C LDR X0, [X19 + 0x138]
	0x03BA5590 BL 0x3BA6D84
	0x03BA5594 LDR X0, [X19 + 0x148]
	0x03BA5598 BL 0x3BA6D84
	0x03BA559C LDR X0, [X19 + 0x140]
	0x03BA55A0 BL 0x3BA6D84
	0x03BA55A4 LDR X0, [X19 + 0x158]
	0x03BA55A8 BL 0x3BA6D84
	0x03BA55AC LDR X0, [X19 + 0x160]
	0x03BA55B0 BL 0x3BA6D84

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3169]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3169], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 232
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_drop(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA55B4 LDR X0, [X19 + 0x168]
	0x03BA55B8 BL 0x3BA6D84
	0x03BA55BC LDR X0, [X19 + 0x150]
	0x03BA55C0 LDP X30, X19, [X31], #0x10
	0x03BA55C4 B 0x3BA6D84
	0x03BA55C8 SUB X31, X31, 0x180
	0x03BA55CC STP X29, X30, [X31 + 0x160]
	0x03BA55D0 STP X20, X19, [X31 + 0x170]
	0x03BA55D4 MOV X20, X0
	0x03BA55D8 MOV W19, W2
	0x03BA55DC STR X1, [X20], #0x8
	0x03BA55E0 ADD X0, X31, 0x8
	0x03BA55E4 MOVZ W2, 0x158
	0x03BA55E8 MOV W1, W31
	0x03BA55EC BL 0x3EB1B10
	0x03BA55F0 ADD X0, X31, 0x8
	0x03BA55F4 MOV W1, W19
	0x03BA55F8 BL 0x3B9F2A8
	0x03BA55FC ADD X1, X31, 0x8
	0x03BA5600 MOVZ W2, 0x158
	0x03BA5604 MOV X0, X20
	0x03BA5608 BL 0x3EB1AC0
	0x03BA560C LDP X20, X19, [X31 + 0x170]
	0x03BA5610 LDP X29, X30, [X31 + 0x160]
	0x03BA5614 ADD X31, X31, 0x180
	0x03BA5618 RET
	0x03BA561C STP X29, X30, [X31 - 0x60]!
	0x03BA5620 STP X28, X27, [X31 + 0x10]
	0x03BA5624 STP X26, X25, [X31 + 0x20]
	0x03BA5628 STP X24, X23, [X31 + 0x30]
	0x03BA562C STP X22, X21, [X31 + 0x40]
	0x03BA5630 STP X20, X19, [X31 + 0x50]
	0x03BA5634 SUB X31, X31, 0x440
	0x03BA5638 ADRP X20, 0x83D000
	0x03BA563C LDRB W8, [X20 + 0xC75]
	0x03BA5640 MOV X19, X0
	0x03BA5644 TBNZ X8, 0x0, 0x3BA56C8
	0x03BA5648 ADRP X0, 0x5B7000
	0x03BA564C LDR X0, [X0 + 0xC60]
	0x03BA5650 BL 0x1C16CF4
	0x03BA5654 ADRP X0, 0x5B7000
	0x03BA5658 LDR X0, [X0 + 0x940]
	0x03BA565C BL 0x1C16CF4
	0x03BA5660 ADRP X0, 0x5B7000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3170]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3170], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 240
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_drop(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA5664 LDR X0, [X0 + 0xC68]
	0x03BA5668 BL 0x1C16CF4
	0x03BA566C ADRP X0, 0x5B7000
	0x03BA5670 LDR X0, [X0 + 0xC70]
	0x03BA5674 BL 0x1C16CF4
	0x03BA5678 ADRP X0, 0x5B7000
	0x03BA567C LDR X0, [X0 + 0x8E8]
	0x03BA5680 BL 0x1C16CF4
	0x03BA5684 ADRP X0, 0x5B7000
	0x03BA5688 LDR X0, [X0 + 0x8F0]
	0x03BA568C BL 0x1C16CF4
	0x03BA5690 ADRP X0, 0x5B7000
	0x03BA5694 LDR X0, [X0 + 0x8F8]
	0x03BA5698 BL 0x1C16CF4
	0x03BA569C ADRP X0, 0x54E000
	0x03BA56A0 LDR X0, [X0 + 0x598]
	0x03BA56A4 BL 0x1C16CF4
	0x03BA56A8 ADRP X0, 0x5B7000
	0x03BA56AC LDR X0, [X0 + 0xC78]
	0x03BA56B0 BL 0x1C16CF4
	0x03BA56B4 ADRP X0, 0x5B6000
	0x03BA56B8 LDR X0, [X0 + 0x258]
	0x03BA56BC BL 0x1C16CF4
	0x03BA56C0 MOVZ W8, 0x1
	0x03BA56C4 STRB W8, [X20 + 0xC75]
	0x03BA56C8 ADD X0, X31, 0x180
	0x03BA56CC MOVZ W2, 0x160
	0x03BA56D0 MOV W1, W31
	0x03BA56D4 BL 0x3EB1B10
	0x03BA56D8 STP X31, X31, [X31 + 0x170]
	0x03BA56DC STR X31, [X31 + 0x168]
	0x03BA56E0 LDRB W8, [X19 + 0x128]
	0x03BA56E4 CBZ W8, 0x3BA5AF8
	0x03BA56E8 LDR X9, [X19 + 0x380]
	0x03BA56EC CBZ X9, 0x3BA5B50
	0x03BA56F0 ADRP X28, 0x5B7000
	0x03BA56F4 ADRP X29, 0x5B6000
	0x03BA56F8 ADRP X27, 0x54E000
	0x03BA56FC LDR X28, [X28 + 0x8F0]
	0x03BA5700 LDR X29, [X29 + 0x258]
	0x03BA5704 LDR X27, [X27 + 0x598]
	0x03BA5708 ADD X8, X31, 0x180
	0x03BA570C ADD X10, X31, 0x2E0
	0x03BA5710 MOV W20, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3171]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3171], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 240
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_scroll(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA5714 ADD X21, X8, 0x8
	0x03BA5718 ADD X22, X10, 0x8
	0x03BA571C LDR W8, [X9 + 0x18]
	0x03BA5720 CMP W20, W8
	0x03BA5724 B.GE 0x3BA5AF8
	0x03BA5728 LDR X2, [X28]
	0x03BA572C ADD X8, X31, 0x2E0
	0x03BA5730 MOV X0, X9
	0x03BA5734 MOV W1, W20
	0x03BA5738 BL 0x317E164
	0x03BA573C ADD X0, X31, 0x180
	0x03BA5740 ADD X1, X31, 0x2E0
	0x03BA5744 MOVZ W2, 0x160
	0x03BA5748 BL 0x3EB1AC0
	0x03BA574C LDR X0, [X29]
	0x03BA5750 LDR W8, [X0 + 0xE0]
	0x03BA5754 CBNZ W8, 0x3BA575C
	0x03BA5758 BL 0x1C16DFC
	0x03BA575C LDR X24, [X31 + 0x180]
	0x03BA5760 LDR X23, [X31 + 0x190]
	0x03BA5764 CBZ X24, 0x3BA57B0
	0x03BA5768 LDR X8, [X24]
	0x03BA576C ADRP X10, 0x5B7000
	0x03BA5770 LDRH W9, [X8 + 0x12E]
	0x03BA5774 LDR X10, [X10 + 0x940]
	0x03BA5778 LDR X1, [X10]
	0x03BA577C CBZ X9, 0x3BA57A0
	0x03BA5780 LDR X10, [X8 + 0xB0]
	0x03BA5784 ADD X10, X10, 0x8
	0x03BA5788 LDUR X11, [X10 - 0x8]
	0x03BA578C CMP X11, X1
	0x03BA5790 B.EQ 0x3BA5810
	0x03BA5794 SUBS X9, X9, 0x1
	0x03BA5798 ADD X10, X10, 0x10
	0x03BA579C B.NE 0x3BA5788
	0x03BA57A0 MOV X0, X24
	0x03BA57A4 MOV W2, W31
	0x03BA57A8 BL 0x1C5C788
	0x03BA57AC B 0x3BA581C
	0x03BA57B0 LDR X0, [X29]
	0x03BA57B4 LDR W8, [X0 + 0xE0]
	0x03BA57B8 CBNZ W8, 0x3BA57C0
	0x03BA57BC BL 0x1C16DFC
	0x03BA57C0 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3172]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3172], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 248
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_scroll(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.PointerEventData> value)

Disassembly:
	0x03BA57C4 MOV W1, W31
	0x03BA57C8 BL 0x3B9F378
	0x03BA57CC MOVZ W2, 0x1
	0x03BA57D0 MOV X0, X19
	0x03BA57D4 MOV X1, X21
	0x03BA57D8 BL 0x3BA2AA8
	0x03BA57DC LDR W1, [X31 + 0x228]
	0x03BA57E0 MOV X0, X19
	0x03BA57E4 BL 0x3BA3604
	0x03BA57E8 LDR X0, [X19 + 0x380]
	0x03BA57EC CBZ X0, 0x3BA5B50
	0x03BA57F0 ADRP X8, 0x5B7000
	0x03BA57F4 LDR X8, [X8 + 0xC70]
	0x03BA57F8 MOV W1, W20
	0x03BA57FC SUB W24, W20, 0x1
	0x03BA5800 LDR X2, [X8]
	0x03BA5804 BL 0x3180778
	0x03BA5808 MOV W20, W24
	0x03BA580C B 0x3BA5884
	0x03BA5810 LDRSW X9, [X10]
	0x03BA5814 ADD X8, X8, X9, 0x4, LSL
	0x03BA5818 ADD X0, X8, 0x138
	0x03BA581C LDP X8, X2, [X0]
	0x03BA5820 MOV X0, X24
	0x03BA5824 MOV X1, X21
	0x03BA5828 BLR X8
	0x03BA582C MOV X0, X19
	0x03BA5830 MOV X1, X21
	0x03BA5834 MOV W2, W31
	0x03BA5838 BL 0x3BA2AA8
	0x03BA583C LDR X24, [X19 + 0x380]
	0x03BA5840 ADD X0, X31, 0x8
	0x03BA5844 ADD X1, X31, 0x180
	0x03BA5848 MOVZ W2, 0x160
	0x03BA584C BL 0x3EB1AC0
	0x03BA5850 CBZ X24, 0x3BA5B50
	0x03BA5854 ADRP X8, 0x5B7000
	0x03BA5858 LDR X8, [X8 + 0x8F8]
	0x03BA585C ADD X0, X31, 0x2E0
	0x03BA5860 ADD X1, X31, 0x8
	0x03BA5864 MOVZ W2, 0x160
	0x03BA5868 LDR X25, [X8]
	0x03BA586C BL 0x3EB1AC0
	0x03BA5870 ADD X2, X31, 0x2E0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3173]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3173], W8
	021 Move X24, 0x5B8000
	022 Add X20, X20, 248
	023 Move X21, [X20]
	024 Move X24, [X24+3104]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_updateSelected(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.BaseEventData> value)

Disassembly:
	0x03BA5874 MOV X0, X24
	0x03BA5878 MOV W1, W20
	0x03BA587C MOV X3, X25
	0x03BA5880 BL 0x317E1C8
	0x03BA5884 LDR X0, [X29]
	0x03BA5888 LDR W8, [X0 + 0xE0]
	0x03BA588C CBNZ W8, 0x3BA5894
	0x03BA5890 BL 0x1C16DFC
	0x03BA5894 LDR X0, [X27]
	0x03BA5898 LDR X24, [X31 + 0x190]
	0x03BA589C LDR W8, [X0 + 0xE0]
	0x03BA58A0 CBNZ W8, 0x3BA58A8
	0x03BA58A4 BL 0x1C16DFC
	0x03BA58A8 MOV X0, X23
	0x03BA58AC MOV X1, X24
	0x03BA58B0 MOV X2, X31
	0x03BA58B4 BL 0x3C354F8
	0x03BA58B8 TBZ X0, 0x0, 0x3BA5A70
	0x03BA58BC LDR X0, [X19 + 0x388]
	0x03BA58C0 CBZ X0, 0x3BA5B50
	0x03BA58C4 ADRP X8, 0x5B7000
	0x03BA58C8 LDR X8, [X8 + 0xC68]
	0x03BA58CC ADD X1, X31, 0x178
	0x03BA58D0 LDR X2, [X8]
	0x03BA58D4 BL 0x2EF1058
	0x03BA58D8 LDR X26, [X31 + 0x178]
	0x03BA58DC STP X0, X1, [X31 + 0x168]
	0x03BA58E0 CBZ X26, 0x3BA5A80
	0x03BA58E4 LDR X25, [X31 + 0x180]
	0x03BA58E8 ADD X0, X31, 0x2E0
	0x03BA58EC ADD X1, X31, 0x180
	0x03BA58F0 MOVZ W2, 0x160
	0x03BA58F4 STR X25, [X26 + 0x10]
	0x03BA58F8 BL 0x3EB1AC0
	0x03BA58FC ADD X0, X26, 0x18
	0x03BA5900 MOVZ W2, 0x158
	0x03BA5904 MOV X1, X22
	0x03BA5908 BL 0x3EB1AC0
	0x03BA590C CBZ X25, 0x3BA5A5C
	0x03BA5910 ADRP X8, 0x5B7000
	0x03BA5914 LDR X8, [X8 + 0xC60]
	0x03BA5918 LDR X1, [X8]
	0x03BA591C MOV X0, X25
	0x03BA5920 BL 0x1C16E00
	0x03BA5924 MOV X25, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3174]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3112]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3174], W8
	021 Move X24, 0x5B8000
	022 Move X21, [X20+256]
	023 Move X24, [X24+3112]
	024 Add X20, X20, 256
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_updateSelected(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.BaseEventData> value)

Disassembly:
	0x03BA5928 CBZ X0, 0x3BA5A5C
	0x03BA592C LDR X0, [X27]
	0x03BA5930 LDR W8, [X0 + 0xE0]
	0x03BA5934 CBNZ W8, 0x3BA593C
	0x03BA5938 BL 0x1C16DFC
	0x03BA593C MOV X0, X23
	0x03BA5940 MOV X1, X31
	0x03BA5944 MOV X2, X31
	0x03BA5948 BL 0x3C354F8
	0x03BA594C TBZ X0, 0x0, 0x3BA59C4
	0x03BA5950 LDR X26, [X31 + 0x178]
	0x03BA5954 CBZ X26, 0x3BA5A88
	0x03BA5958 STR X23, [X26 + 0x170]
	0x03BA595C LDR X8, [X25]
	0x03BA5960 ADRP X10, 0x5B7000
	0x03BA5964 LDRH W9, [X8 + 0x12E]
	0x03BA5968 LDR X10, [X10 + 0xC60]
	0x03BA596C LDR X1, [X10]
	0x03BA5970 CBZ X9, 0x3BA5994
	0x03BA5974 LDR X10, [X8 + 0xB0]
	0x03BA5978 ADD X10, X10, 0x8
	0x03BA597C LDUR X11, [X10 - 0x8]
	0x03BA5980 CMP X11, X1
	0x03BA5984 B.EQ 0x3BA59A4
	0x03BA5988 SUBS X9, X9, 0x1
	0x03BA598C ADD X10, X10, 0x10
	0x03BA5990 B.NE 0x3BA597C
	0x03BA5994 MOVZ W2, 0x3
	0x03BA5998 MOV X0, X25
	0x03BA599C BL 0x1C5C788
	0x03BA59A0 B 0x3BA59B4
	0x03BA59A4 LDR W9, [X10]
	0x03BA59A8 ADD W9, W9, 0x3
	0x03BA59AC ADD X8, X8, W9, 0x4, SXTW
	0x03BA59B0 ADD X0, X8, 0x138
	0x03BA59B4 LDP X8, X2, [X0]
	0x03BA59B8 MOV X0, X25
	0x03BA59BC MOV X1, X26
	0x03BA59C0 BLR X8
	0x03BA59C4 LDR X0, [X27]
	0x03BA59C8 LDR W8, [X0 + 0xE0]
	0x03BA59CC CBNZ W8, 0x3BA59D4
	0x03BA59D0 BL 0x1C16DFC
	0x03BA59D4 MOV X0, X24
	0x03BA59D8 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3175]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3112]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3175], W8
	021 Move X24, 0x5B8000
	022 Move X21, [X20+256]
	023 Move X24, [X24+3112]
	024 Add X20, X20, 256
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_move(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.AxisEventData> value)

Disassembly:
	0x03BA59DC MOV X2, X31
	0x03BA59E0 BL 0x3C354F8
	0x03BA59E4 TBZ X0, 0x0, 0x3BA5A5C
	0x03BA59E8 LDR X23, [X31 + 0x178]
	0x03BA59EC CBZ X23, 0x3BA5A90
	0x03BA59F0 STR X24, [X23 + 0x170]
	0x03BA59F4 LDR X8, [X25]
	0x03BA59F8 ADRP X10, 0x5B7000
	0x03BA59FC LDRH W9, [X8 + 0x12E]
	0x03BA5A00 LDR X10, [X10 + 0xC60]
	0x03BA5A04 LDR X1, [X10]
	0x03BA5A08 CBZ X9, 0x3BA5A2C
	0x03BA5A0C LDR X10, [X8 + 0xB0]
	0x03BA5A10 ADD X10, X10, 0x8
	0x03BA5A14 LDUR X11, [X10 - 0x8]
	0x03BA5A18 CMP X11, X1
	0x03BA5A1C B.EQ 0x3BA5A3C
	0x03BA5A20 SUBS X9, X9, 0x1
	0x03BA5A24 ADD X10, X10, 0x10
	0x03BA5A28 B.NE 0x3BA5A14
	0x03BA5A2C MOVZ W2, 0x2
	0x03BA5A30 MOV X0, X25
	0x03BA5A34 BL 0x1C5C788
	0x03BA5A38 B 0x3BA5A4C
	0x03BA5A3C LDR W9, [X10]
	0x03BA5A40 ADD W9, W9, 0x2
	0x03BA5A44 ADD X8, X8, W9, 0x4, SXTW
	0x03BA5A48 ADD X0, X8, 0x138
	0x03BA5A4C LDP X8, X2, [X0]
	0x03BA5A50 MOV X0, X25
	0x03BA5A54 MOV X1, X23
	0x03BA5A58 BLR X8
	0x03BA5A5C ADRP X8, 0x5B7000
	0x03BA5A60 LDR X8, [X8 + 0xC78]
	0x03BA5A64 ADD X0, X31, 0x168
	0x03BA5A68 LDR X1, [X8]
	0x03BA5A6C BL 0x24A6DD0
	0x03BA5A70 LDR X9, [X19 + 0x380]
	0x03BA5A74 ADD W20, W20, 0x1
	0x03BA5A78 CBNZ X9, 0x3BA571C
	0x03BA5A7C B 0x3BA5B50
	0x03BA5A80 BL 0x1C16F20
	0x03BA5A84 B 0x3BA5B54
	0x03BA5A88 BL 0x1C16F20
	0x03BA5A8C B 0x3BA5B54

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3176]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3176], W8
	021 Move X24, 0x5B8000
	022 Move X21, [X20+264]
	023 Move X24, [X24+3120]
	024 Add X20, X20, 264
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_move(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.AxisEventData> value)

Disassembly:
	0x03BA5A90 BL 0x1C16F20
	0x03BA5A94 B 0x3BA5B54
	0x03BA5A98 B 0x3BA5ABC
	0x03BA5A9C B 0x3BA5ABC
	0x03BA5AA0 B 0x3BA5ABC
	0x03BA5AA4 B 0x3BA5ABC
	0x03BA5AA8 B 0x3BA5ABC
	0x03BA5AAC B 0x3BA5ABC
	0x03BA5AB0 B 0x3BA5ABC
	0x03BA5AB4 B 0x3BA5ABC
	0x03BA5AB8 B 0x3BA5ABC
	0x03BA5ABC MOV X23, X0
	0x03BA5AC0 CMP W1, 0x1
	0x03BA5AC4 B.NE 0x3BA5B54
	0x03BA5AC8 MOV X0, X23
	0x03BA5ACC BL 0x3EB1AD0
	0x03BA5AD0 LDR X24, [X0]
	0x03BA5AD4 BL 0x3EB1AE0
	0x03BA5AD8 ADRP X8, 0x5B7000
	0x03BA5ADC LDR X8, [X8 + 0xC78]
	0x03BA5AE0 ADD X0, X31, 0x168
	0x03BA5AE4 LDR X1, [X8]
	0x03BA5AE8 BL 0x24A6DD0
	0x03BA5AEC CBZ X24, 0x3BA5A70
	0x03BA5AF0 MOV X0, X24
	0x03BA5AF4 BL 0x1C16F18
	0x03BA5AF8 LDRB W8, [X19 + 0x12A]
	0x03BA5AFC CBZ W8, 0x3BA5B10
	0x03BA5B00 MOV X0, X19
	0x03BA5B04 BL 0x3BA5B8C
	0x03BA5B08 TBZ X0, 0x0, 0x3BA5B18
	0x03BA5B0C B 0x3BA5B28
	0x03BA5B10 MOV W0, W31
	0x03BA5B14 TBNZ X0, 0x0, 0x3BA5B28
	0x03BA5B18 LDRB W8, [X19 + 0x129]
	0x03BA5B1C CBZ W8, 0x3BA5B28
	0x03BA5B20 MOV X0, X19
	0x03BA5B24 BL 0x3BA6218
	0x03BA5B28 MOV X0, X19
	0x03BA5B2C BL 0x3BA6680
	0x03BA5B30 ADD X31, X31, 0x440
	0x03BA5B34 LDP X20, X19, [X31 + 0x50]
	0x03BA5B38 LDP X22, X21, [X31 + 0x40]
	0x03BA5B3C LDP X24, X23, [X31 + 0x30]
	0x03BA5B40 LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3177]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3177], W8
	021 Move X24, 0x5B8000
	022 Move X21, [X20+264]
	023 Move X24, [X24+3120]
	024 Add X20, X20, 264
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_submit(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.BaseEventData> value)

Disassembly:
	0x03BA5B44 LDP X28, X27, [X31 + 0x10]
	0x03BA5B48 LDP X29, X30, [X31], #0x60
	0x03BA5B4C RET
	0x03BA5B50 BL 0x1C16F20
	0x03BA5B54 MOV X24, X31
	0x03BA5B58 B 0x3BA5B60
	0x03BA5B5C MOV X23, X0
	0x03BA5B60 ADRP X8, 0x5B7000
	0x03BA5B64 LDR X8, [X8 + 0xC78]
	0x03BA5B68 LDR X1, [X8]
	0x03BA5B6C ADD X0, X31, 0x168
	0x03BA5B70 BL 0x24A6DD0
	0x03BA5B74 CBNZ X24, 0x3BA5B80
	0x03BA5B78 MOV X0, X23
	0x03BA5B7C BL 0x1D2C690
	0x03BA5B80 MOV X0, X24
	0x03BA5B84 BL 0x1C16F18
	0x03BA5B88 BL 0x1990590
	0x03BA5B8C STR D12, [X31 - 0x90]!
	0x03BA5B90 STP D11, D10, [X31 + 0x10]
	0x03BA5B94 STP D9, D8, [X31 + 0x20]
	0x03BA5B98 STP X29, X30, [X31 + 0x30]
	0x03BA5B9C STP X28, X27, [X31 + 0x40]
	0x03BA5BA0 STP X26, X25, [X31 + 0x50]
	0x03BA5BA4 STP X24, X23, [X31 + 0x60]
	0x03BA5BA8 STP X22, X21, [X31 + 0x70]
	0x03BA5BAC STP X20, X19, [X31 + 0x80]
	0x03BA5BB0 SUB X31, X31, 0x470
	0x03BA5BB4 MRS X25, 0xC000
	0x03BA5BB8 LDR X8, [X25 + 0x28]
	0x03BA5BBC ADRP X20, 0x83D000
	0x03BA5BC0 MOV X19, X0
	0x03BA5BC4 STR X8, [X31 + 0x468]
	0x03BA5BC8 LDRB W8, [X20 + 0xC77]
	0x03BA5BCC TBNZ X8, 0x0, 0x3BA5C08
	0x03BA5BD0 ADRP X0, 0x5B7000
	0x03BA5BD4 LDR X0, [X0 + 0xC80]
	0x03BA5BD8 BL 0x1C16CF4
	0x03BA5BDC ADRP X0, 0x5B7000
	0x03BA5BE0 LDR X0, [X0 + 0xC88]
	0x03BA5BE4 BL 0x1C16CF4
	0x03BA5BE8 ADRP X0, 0x5B7000
	0x03BA5BEC LDR X0, [X0 + 0xC90]
	0x03BA5BF0 BL 0x1C16CF4
	0x03BA5BF4 ADRP X0, 0x5B7000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3178]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3112]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3178], W8
	021 Move X24, 0x5B8000
	022 Move X21, [X20+272]
	023 Move X24, [X24+3112]
	024 Add X20, X20, 272
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_submit(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.BaseEventData> value)

Disassembly:
	0x03BA5BF8 LDR X0, [X0 + 0xC98]
	0x03BA5BFC BL 0x1C16CF4
	0x03BA5C00 MOVZ W8, 0x1
	0x03BA5C04 STRB W8, [X20 + 0xC77]
	0x03BA5C08 MOVI V0.2D, 0x0
	0x03BA5C0C ADD X0, X31, 0x220
	0x03BA5C10 MOVZ W2, 0x88
	0x03BA5C14 MOV W1, W31
	0x03BA5C18 STR W31, [X31 + 0x2F0]
	0x03BA5C1C STR X31, [X31 + 0x458]
	0x03BA5C20 STR W31, [X31 + 0x460]
	0x03BA5C24 STRH W31, [X31 + 0x2AC]
	0x03BA5C28 STP V0, V0, [X31 + 0x2D0]
	0x03BA5C2C STP V0, V0, [X31 + 0x2B0]
	0x03BA5C30 STRB W31, [X31 + 0x2AE]
	0x03BA5C34 BL 0x3EB1B10
	0x03BA5C38 ADD X0, X31, 0x170
	0x03BA5C3C MOVZ W2, 0xB0
	0x03BA5C40 MOV W1, W31
	0x03BA5C44 BL 0x3EB1B10
	0x03BA5C48 MOV X0, X31
	0x03BA5C4C BL 0x3C85040
	0x03BA5C50 MOV W20, W0
	0x03BA5C54 CMP W0, 0x1
	0x03BA5C58 B.LT 0x3BA61D0
	0x03BA5C5C STR W20, [X31 + 0xC]
	0x03BA5C60 STR X25, [X31 + 0x10]
	0x03BA5C64 ADRP X29, 0x5B7000
	0x03BA5C68 LDR X29, [X29 + 0xC90]
	0x03BA5C6C MOV X0, X31
	0x03BA5C70 BL 0x3C85040
	0x03BA5C74 CMP W0, 0x1
	0x03BA5C78 STR W0, [X31 + 0x2C]
	0x03BA5C7C B.LT 0x3BA6110
	0x03BA5C80 ADRP X9, 0xFFFFFFFFFCF44000
	0x03BA5C84 LDR V8, [X9 + 0xF20]
	0x03BA5C88 ADD X8, X31, 0x300
	0x03BA5C8C MOV W22, W31
	0x03BA5C90 ORR X11, X8, 0x1
	0x03BA5C94 ADD X10, X8, 0x8
	0x03BA5C98 ADD X23, X8, 0x11
	0x03BA5C9C ADD X24, X8, 0x28
	0x03BA5CA0 STP X10, X11, [X31 + 0x18]
	0x03BA5CA4 ADD X8, X31, 0x300
	0x03BA5CA8 MOV W0, W22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3179]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3112]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3179], W8
	021 Move X24, 0x5B8000
	022 Move X21, [X20+272]
	023 Move X24, [X24+3112]
	024 Add X20, X20, 272
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_cancel(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.BaseEventData> value)

Disassembly:
	0x03BA5CAC MOV X1, X31
	0x03BA5CB0 BL 0x3C84B30
	0x03BA5CB4 ADD X0, X31, 0x2B0
	0x03BA5CB8 ADD X1, X31, 0x300
	0x03BA5CBC MOVZ W2, 0x44
	0x03BA5CC0 BL 0x3EB1AC0
	0x03BA5CC4 LDR X8, [X19 + 0x378]
	0x03BA5CC8 CBZ X8, 0x3BA61CC
	0x03BA5CCC MOV W25, W31
	0x03BA5CD0 LDR W8, [X8 + 0x18]
	0x03BA5CD4 CMP W25, W8
	0x03BA5CD8 B.GE 0x3BA5D24
	0x03BA5CDC ADD X0, X31, 0x2B0
	0x03BA5CE0 MOV X1, X31
	0x03BA5CE4 BL 0x3C845A8
	0x03BA5CE8 LDR X9, [X19 + 0x378]
	0x03BA5CEC CBZ X9, 0x3BA61CC
	0x03BA5CF0 LDR X2, [X29]
	0x03BA5CF4 MOV W26, W0
	0x03BA5CF8 ADD X8, X31, 0x300
	0x03BA5CFC MOV X0, X9
	0x03BA5D00 MOV W1, W25
	0x03BA5D04 BL 0x318154C
	0x03BA5D08 LDR W8, [X31 + 0x304]
	0x03BA5D0C CMP W26, W8
	0x03BA5D10 B.EQ 0x3BA5D2C
	0x03BA5D14 LDR X8, [X19 + 0x378]
	0x03BA5D18 ADD W25, W25, 0x1
	0x03BA5D1C CBNZ X8, 0x3BA5CD0
	0x03BA5D20 B 0x3BA61CC
	0x03BA5D24 MOVN W25, 0x0
	0x03BA5D28 B 0x3BA5D30
	0x03BA5D2C TBZ X25, 0x1F, 0x3BA5F7C
	0x03BA5D30 LDR X0, [X19 + 0x378]
	0x03BA5D34 CBZ X0, 0x3BA61CC
	0x03BA5D38 MOV W26, W31
	0x03BA5D3C LDR W8, [X0 + 0x18]
	0x03BA5D40 CMP W26, W8
	0x03BA5D44 B.GE 0x3BA5D70
	0x03BA5D48 LDR X2, [X29]
	0x03BA5D4C ADD X8, X31, 0x300
	0x03BA5D50 MOV W1, W26
	0x03BA5D54 BL 0x318154C
	0x03BA5D58 LDRB W8, [X31 + 0x300]
	0x03BA5D5C TBZ X8, 0x0, 0x3BA5D7C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3180]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3112]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3180], W8
	021 Move X24, 0x5B8000
	022 Move X21, [X20+280]
	023 Move X24, [X24+3112]
	024 Add X20, X20, 280
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_cancel(System.Action`2<UnityEngine.GameObject, UnityEngine.EventSystems.BaseEventData> value)

Disassembly:
	0x03BA5D60 LDR X0, [X19 + 0x378]
	0x03BA5D64 ADD W26, W26, 0x1
	0x03BA5D68 CBNZ X0, 0x3BA5D3C
	0x03BA5D6C B 0x3BA61CC
	0x03BA5D70 MOV W26, W25
	0x03BA5D74 TBZ X26, 0x1F, 0x3BA5F7C
	0x03BA5D78 B 0x3BA5E48
	0x03BA5D7C LDR X0, [X19 + 0x378]
	0x03BA5D80 CBZ X0, 0x3BA61CC
	0x03BA5D84 LDR X2, [X29]
	0x03BA5D88 ADD X8, X31, 0x300
	0x03BA5D8C MOV W1, W26
	0x03BA5D90 BL 0x318154C
	0x03BA5D94 LDR W28, [X31 + 0x308]
	0x03BA5D98 LDR X25, [X19 + 0x378]
	0x03BA5D9C ADD X0, X31, 0x128
	0x03BA5DA0 ADD X1, X31, 0x2B0
	0x03BA5DA4 MOVZ W2, 0x44
	0x03BA5DA8 BL 0x3EB1AC0
	0x03BA5DAC ADD X0, X31, 0x128
	0x03BA5DB0 MOV X1, X31
	0x03BA5DB4 STRH W31, [X31 + 0x3B0]
	0x03BA5DB8 STRB W31, [X31 + 0x3B2]
	0x03BA5DBC BL 0x3C845A8
	0x03BA5DC0 MOV W27, W0
	0x03BA5DC4 ADD X0, X31, 0x300
	0x03BA5DC8 MOVZ W2, 0xA8
	0x03BA5DCC MOV W1, W31
	0x03BA5DD0 BL 0x3EB1B10
	0x03BA5DD4 ADD X0, X31, 0x300
	0x03BA5DD8 MOV W1, W28
	0x03BA5DDC BL 0x3B9A5B0
	0x03BA5DE0 ADD X0, X31, 0x30
	0x03BA5DE4 ADD X1, X31, 0x300
	0x03BA5DE8 MOVZ W2, 0xA8
	0x03BA5DEC BL 0x3EB1AC0
	0x03BA5DF0 CBZ X25, 0x3BA61CC
	0x03BA5DF4 ADRP X10, 0x5B7000
	0x03BA5DF8 LDRB W8, [X31 + 0x3B2]
	0x03BA5DFC LDRH W9, [X31 + 0x3B0]
	0x03BA5E00 LDR X10, [X10 + 0xC98]
	0x03BA5E04 ADD X1, X31, 0x30
	0x03BA5E08 MOVZ W2, 0xA8
	0x03BA5E0C LDR X28, [X10]
	0x03BA5E10 MOVZ W10, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x83E000
	009 Move W8, [X21+3181]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B8000
	017 Move X0, [X0+3112]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3181], W8
	021 Move X24, 0x5B8000
	022 Move X21, [X20+280]
	023 Move X24, [X24+3112]
	024 Add X20, X20, 280
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03BA5E14 STRB W10, [X31 + 0x300]
	0x03BA5E18 LDP X0, X10, [X31 + 0x18]
	0x03BA5E1C STRB W8, [X10 + 0x2]
	0x03BA5E20 STRH W9, [X10]
	0x03BA5E24 STR W27, [X31 + 0x304]
	0x03BA5E28 BL 0x3EB1AC0
	0x03BA5E2C ADD X2, X31, 0x300
	0x03BA5E30 MOV X0, X25
	0x03BA5E34 MOV W1, W26
	0x03BA5E38 MOV X3, X28
	0x03BA5E3C BL 0x31815B0
	0x03BA5E40 MOV W25, W26
	0x03BA5E44 TBZ X26, 0x1F, 0x3BA5F7C
	0x03BA5E48 LDR X26, [X19 + 0x378]
	0x03BA5E4C CBZ X26, 0x3BA61CC
	0x03BA5E50 LDR W25, [X26 + 0x18]
	0x03BA5E54 ADD X0, X31, 0xE0
	0x03BA5E58 ADD X1, X31, 0x2B0
	0x03BA5E5C MOVZ W2, 0x44
	0x03BA5E60 BL 0x3EB1AC0
	0x03BA5E64 LDR W28, [X19 + 0x198]
	0x03BA5E68 ADD X0, X31, 0xE0
	0x03BA5E6C MOV X1, X31
	0x03BA5E70 ADD W8, W28, 0x1
	0x03BA5E74 STR W8, [X19 + 0x198]
	0x03BA5E78 BL 0x3C845A8
	0x03BA5E7C MOV W27, W0
	0x03BA5E80 ADD X0, X31, 0x300
	0x03BA5E84 MOVZ W2, 0xA8
	0x03BA5E88 MOV W1, W31
	0x03BA5E8C BL 0x3EB1B10
	0x03BA5E90 ADD X0, X31, 0x300
	0x03BA5E94 MOV W1, W28
	0x03BA5E98 BL 0x3B9A5B0
	0x03BA5E9C ADD X0, X31, 0x3B0
	0x03BA5EA0 ADD X1, X31, 0x300
	0x03BA5EA4 MOVZ W2, 0xA8
	0x03BA5EA8 BL 0x3EB1AC0
	0x03BA5EAC ADRP X8, 0x5B7000
	0x03BA5EB0 LDR X8, [X8 + 0xC80]
	0x03BA5EB4 ADD X0, X31, 0x30
	0x03BA5EB8 ADD X1, X31, 0x3B0
	0x03BA5EBC MOVZ W2, 0xA8
	0x03BA5EC0 LDR X20, [X8]
	0x03BA5EC4 STRH W31, [X31 + 0x2FC]
	0x03BA5EC8 STRB W31, [X31 + 0x2FE]
	0x03BA5ECC BL 0x3EB1AC0
	0x03BA5ED0 LDR W9, [X26 + 0x1C]
	0x03BA5ED4 LDR X8, [X26 + 0x10]
	0x03BA5ED8 ADD W9, W9, 0x1
	0x03BA5EDC STR W9, [X26 + 0x1C]
	0x03BA5EE0 CBZ X8, 0x3BA61CC
	0x03BA5EE4 LDRSW X9, [X26 + 0x18]
	0x03BA5EE8 LDR W10, [X8 + 0x18]
	0x03BA5EEC CMP W9, W10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x83E000
	009 Move X23, 0x5B8000
	010 Move X20, 0x5B8000
	011 Move X22, 0x5B8000
	012 Move X21, 0x5B8000
	013 Move W8, [X24+3182]
	014 Move X23, [X23+3128]
	015 Move X20, [X20+3136]
	016 Move X22, [X22+3144]
	017 Move X21, [X21+3152]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x5B8000
	024 Move X0, [X0+3136]
	025 Call 0x1C17CF4
	026 Move X0, 0x5B8000
	027 Move X0, [X0+3152]
	028 Call 0x1C17CF4
	029 Move X0, 0x5B8000
	030 Move X0, [X0+3144]
	031 Call 0x1C17CF4
	032 Move X0, 0x5B8000
	033 Move X0, [X0+3128]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+3182], W8
	037 Move X8, -51081216
	038 Move X9, -51081216
	039 Move V0, [X8+32]
	040 Move V1, [X9+2240]
	041 Move [X19+88], V0
	042 Move [X19+104], D1
	043 Move X0, [X23]
	044 Call 0x1C17F10
	045 Move X1, [X20]
	046 Move X20, X0
	047 Call Dictionary`2<Int32, Object>..ctor, X0
	048 Move [X19+136], X20
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X20, X0
	053 Call Dictionary`2<Int32, Object>..ctor, X0
	054 Move [X19+144], X20
	055 Move X0, X19
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+64]
	064 Call BaseInputModule..ctor, X0
	065 Return 

