Type: UnityEngine.XR.Interaction.Toolkit.UI.CanvasOptimizer/CanvasState

Method: System.Void Initialize(UnityEngine.XR.Interaction.Toolkit.UI.CanvasTracker tracker)

Disassembly:
	0x03B97CB8 RET
	0x03B97CBC LDR V0, [X0 + 0x60]
	0x03B97CC0 RET
	0x03B97CC4 LDR X8, [X0 + 0x80]
	0x03B97CC8 STR S0, [X0 + 0x60]
	0x03B97CCC CBZ X8, 0x3B97CD4
	0x03B97CD0 STR S0, [X8 + 0x74]
	0x03B97CD4 RET
	0x03B97CD8 STP X30, X19, [X31 - 0x10]!
	0x03B97CDC LDP S1, S0, [X0 + 0x38]
	0x03B97CE0 FMOV S2, 1
	0x03B97CE4 MOV X19, X0
	0x03B97CE8 FMUL S3, S0, S1
	0x03B97CEC FADD S2, S0, S2
	0x03B97CF0 FCMP S0, 0x0
	0x03B97CF4 FSUB S0, S1, S3
	0x03B97CF8 FMUL S2, S1, S2
	0x03B97CFC FCSEL S0, S0, S1, GT
	0x03B97D00 FCSEL S1, S2, S1, GT
	0x03B97D04 STP S0, S1, [X0 + 0x64]
	0x03B97D08 BL 0x3B97A34
	0x03B97D0C LDR X8, [X19 + 0x78]
	0x03B97D10 CBZ X8, 0x3B97D2C
	0x03B97D14 LDR V0, [X19 + 0x48]
	0x03B97D18 STR S0, [X8 + 0xA8]
	0x03B97D1C LDUR V0, [X19 + 0x4C]
	0x00000000 INVALID
	0x03B97D24 STR S1, [X8 + 0xB4]
	0x03B97D28 STUR D0, [X8 + 0xAC]
	0x03B97D2C LDR X8, [X19 + 0x80]
	0x03B97D30 CBZ X8, 0x3B97D44
	0x03B97D34 LDR V0, [X19 + 0x58]
	0x03B97D38 STUR D0, [X8 + 0x6C]
	0x03B97D3C LDR V0, [X19 + 0x60]
	0x03B97D40 STR S0, [X8 + 0x74]
	0x03B97D44 LDP X30, X19, [X31], #0x10
	0x03B97D48 RET
	0x03B97D4C STP D9, D8, [X31 - 0x40]!
	0x03B97D50 STR X30, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x84C000
	006 Move W8, [X21+3051]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5C6000
	014 Move X0, [X0+1984]
	015 Call 0x1C17CF4
	016 Move X0, 0x5C6000
	017 Move X0, [X0+1992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3051], W8
	021 Move [X19+16], X20
	022 Compare X20, 0
	023 JumpIfEqual {49}
	024 Move X0, X20
	025 Move X1, X31
	026 Call Component.get_gameObject, X0
	027 Compare X0, 0
	028 JumpIfEqual {49}
	029 Move X8, 0x5C6000
	030 Move X8, [X8+1984]
	031 Move X21, 0x5C6000
	032 Add X1, X19, 56
	033 Move X20, X0
	034 Move X2, [X8]
	035 Move X21, [X21+1992]
	036 Call 0x21E7600, X0, X1
	037 Move X2, [X21]
	038 Add X1, X19, 64
	039 Move X0, X20
	040 Call 0x21E7600, X0, X1
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W1, 1
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call CanvasState.CheckForNestedChanges, X0, X1
	048 Return 
	049 Call 0x1C17F20

Method: System.Void CheckForNestedChanges(System.Boolean force = False)

Disassembly:
	0x03B97DE8 LDP S1, S0, [X19 + 0x38]
	0x03B97DEC FMOV S2, 1
	0x03B97DF0 STR X20, [X19 + 0x80]
	0x03B97DF4 MOV X0, X19
	0x03B97DF8 FMUL S3, S0, S1
	0x03B97DFC FADD S2, S0, S2
	0x03B97E00 FCMP S0, 0x0
	0x03B97E04 FSUB S0, S1, S3
	0x03B97E08 FMUL S2, S1, S2
	0x03B97E0C FCSEL S0, S0, S1, GT
	0x03B97E10 FCSEL S1, S2, S1, GT
	0x03B97E14 STP S0, S1, [X19 + 0x64]
	0x03B97E18 LDP X20, X19, [X31 + 0x30]
	0x03B97E1C LDP X22, X21, [X31 + 0x20]
	0x03B97E20 LDR X30, [X31 + 0x10]
	0x03B97E24 LDP D9, D8, [X31], #0x40
	0x03B97E28 B 0x3B97A34
	0x03B97E2C SUB X31, X31, 0xA0
	0x03B97E30 STR D14, [X31 + 0x20]
	0x03B97E34 STP D13, D12, [X31 + 0x30]
	0x03B97E38 STP D11, D10, [X31 + 0x40]
	0x03B97E3C STP D9, D8, [X31 + 0x50]
	0x03B97E40 STP X30, X25, [X31 + 0x60]
	0x03B97E44 STP X24, X23, [X31 + 0x70]
	0x03B97E48 STP X22, X21, [X31 + 0x80]
	0x03B97E4C STP X20, X19, [X31 + 0x90]
	0x03B97E50 ADRP X20, 0x84B000
	0x03B97E54 ADRP X21, 0x55C000
	0x03B97E58 LDRB W8, [X20 + 0xBF0]
	0x03B97E5C LDR X21, [X21 + 0x598]
	0x03B97E60 MOV X19, X0
	0x03B97E64 TBNZ X8, 0x0, 0x3B97EF4
	0x03B97E68 ADRP X0, 0x5C5000
	0x03B97E6C LDR X0, [X0 + 0x850]
	0x03B97E70 BL 0x1C16CF4
	0x03B97E74 ADRP X0, 0x5C5000
	0x03B97E78 LDR X0, [X0 + 0x858]
	0x03B97E7C BL 0x1C16CF4
	0x03B97E80 ADRP X0, 0x5C5000
	0x03B97E84 LDR X0, [X0 + 0x860]
	0x03B97E88 BL 0x1C16CF4
	0x03B97E8C ADRP X0, 0x5C5000
	0x03B97E90 LDR X0, [X0 + 0x868]
	0x03B97E94 BL 0x1C16CF4
	0x03B97E98 ADRP X0, 0x5C5000
	0x03B97E9C LDR X0, [X0 + 0x870]
	0x03B97EA0 BL 0x1C16CF4
	0x03B97EA4 ADRP X0, 0x5C5000
	0x03B97EA8 LDR X0, [X0 + 0x878]
	0x03B97EAC BL 0x1C16CF4
	0x03B97EB0 ADRP X0, 0x55C000
	0x03B97EB4 LDR X0, [X0 + 0x598]
	0x03B97EB8 BL 0x1C16CF4
	0x03B97EBC ADRP X0, 0x5C5000
	0x03B97EC0 LDR X0, [X0 + 0x598]
	0x03B97EC4 BL 0x1C16CF4
	0x03B97EC8 ADRP X0, 0x5C5000
	0x03B97ECC LDR X0, [X0 + 0x5E8]
	0x03B97ED0 BL 0x1C16CF4
	0x03B97ED4 ADRP X0, 0x5C5000
	0x03B97ED8 LDR X0, [X0 + 0x5D8]
	0x03B97EDC BL 0x1C16CF4
	0x03B97EE0 ADRP X0, 0x5C5000
	0x03B97EE4 LDR X0, [X0 + 0x588]
	0x03B97EE8 BL 0x1C16CF4
	0x03B97EEC MOVZ W8, 0x1
	0x03B97EF0 STRB W8, [X20 + 0xBF0]
	0x03B97EF4 LDR X0, [X21]
	0x03B97EF8 STR W31, [X31 + 0x18]
	0x03B97EFC STP X31, X31, [X31 + 0x8]
	0x03B97F00 STR X31, [X31]
	0x03B97F04 LDR W8, [X0 + 0xE0]
	0x03B97F08 LDR X20, [X19 + 0x20]
	0x03B97F0C CBNZ W8, 0x3B97F14
	0x03B97F10 BL 0x1C16DFC
	0x03B97F14 MOV X0, X20
	0x03B97F18 MOV X1, X31
	0x03B97F1C MOV X2, X31
	0x03B97F20 BL 0x3C3883C
	0x03B97F24 TBZ X0, 0x0, 0x3B97F70
	0x03B97F28 MOV X0, X31
	0x03B97F2C BL 0x3C047F8
	0x03B97F30 LDR X8, [X21]
	0x03B97F34 MOV X20, X0
	0x03B97F38 LDR W9, [X8 + 0xE0]
	0x03B97F3C CBNZ W9, 0x3B97F48
	0x03B97F40 MOV X0, X8
	0x03B97F44 BL 0x1C16DFC
	0x03B97F48 MOV X0, X20
	0x03B97F4C MOV X1, X31
	0x03B97F50 MOV X2, X31
	0x03B97F54 BL 0x3C354F8
	0x03B97F58 TBZ X0, 0x0, 0x3B97F70
	0x03B97F5C CBZ X20, 0x3B981E8
	0x03B97F60 MOV X0, X20
	0x03B97F64 MOV X1, X31
	0x03B97F68 BL 0x3C32E90
	0x03B97F6C STR X0, [X19 + 0x20]
	0x03B97F70 MOV X0, X19
	0x03B97F74 MOV X1, X31
	0x03B97F78 BL 0x3C32E90
	0x03B97F7C CBZ X0, 0x3B981E8
	0x03B97F80 LDRB W8, [X19 + 0x34]
	0x03B97F84 MOV X20, X0
	0x03B97F88 CBZ W8, 0x3B97F9C
	0x03B97F8C MOV X0, X20
	0x03B97F90 MOV X1, X31
	0x03B97F94 BL 0x3C3EB78
	0x03B97F98 B 0x3B97FA8
	0x03B97F9C MOV X0, X20
	0x03B97FA0 MOV X1, X31
	0x03B97FA4 BL 0x3C3F58C
	0x03B97FA8 LDRB W8, [X19 + 0x34]
	0x03B97FAC MOV V8.16B, V0.16B
	0x03B97FB0 MOV V9.16B, V1.16B
	0x03B97FB4 MOV V10.16B, V2.16B
	0x03B97FB8 CBZ W8, 0x3B97FCC
	0x03B97FBC MOV X0, X20
	0x03B97FC0 MOV X1, X31
	0x03B97FC4 BL 0x3C3F830
	0x03B97FC8 B 0x3B97FD8
	0x03B97FCC MOV X0, X20
	0x03B97FD0 MOV X1, X31
	0x03B97FD4 BL 0x3C3DEB4
	0x03B97FD8 LDR X20, [X19 + 0x78]
	0x03B97FDC MOV V11.16B, V0.16B
	0x03B97FE0 MOV V12.16B, V1.16B
	0x03B97FE4 MOV V13.16B, V2.16B
	0x03B97FE8 MOV V0.16B, V8.16B
	0x03B97FEC MOV V1.16B, V9.16B
	0x03B97FF0 MOV V2.16B, V10.16B
	0x03B97FF4 MOV X0, X31
	0x03B97FF8 MOV V14.16B, V3.16B
	0x03B97FFC BL 0x3887BE4
	0x03B98000 CBZ X20, 0x3B981E8
	0x03B98004 ADRP X24, 0x5C4000
	0x03B98008 LDR X24, [X24 + 0x5D8]
	0x03B9800C MOV X0, X20
	0x03B98010 LDR X1, [X24]
	0x03B98014 BL 0x270D5B0
	0x03B98018 LDR X0, [X19 + 0x80]
	0x03B9801C CBZ X0, 0x3B981E8
	0x03B98020 ADRP X23, 0x5C4000
	0x03B98024 LDR X23, [X23 + 0x588]
	0x03B98028 ADRP X22, 0x5C4000
	0x03B9802C ADRP X25, 0x5C4000
	0x03B98030 MOV V0.16B, V11.16B
	0x03B98034 LDR X1, [X23]
	0x03B98038 LDR X22, [X22 + 0x850]
	0x03B9803C LDR X25, [X25 + 0x870]
	0x03B98040 MOV V1.16B, V12.16B
	0x03B98044 MOV V2.16B, V13.16B
	0x03B98048 MOV V3.16B, V14.16B
	0x03B9804C BL 0x270C34C
	0x03B98050 LDR X0, [X22]
	0x03B98054 LDP X20, X21, [X19 + 0x70]
	0x03B98058 BL 0x1C16F10
	0x03B9805C LDR X2, [X25]
	0x03B98060 MOV X1, X19
	0x03B98064 MOV X3, X31
	0x03B98068 MOV X22, X0
	0x03B9806C BL 0x2A70A68
	0x03B98070 CBZ X21, 0x3B981E8
	0x03B98074 ADRP X8, 0x5C4000
	0x03B98078 LDR X8, [X8 + 0x860]
	0x03B9807C MOV X0, X21
	0x03B98080 MOV X1, X22
	0x03B98084 LDR X2, [X8]
	0x03B98088 BL 0x28D116C
	0x03B9808C CBZ X20, 0x3B981E8
	0x03B98090 ADRP X22, 0x5C4000
	0x03B98094 ADRP X25, 0x5C4000
	0x03B98098 LDR X22, [X22 + 0x858]
	0x03B9809C LDR X25, [X25 + 0x878]
	0x03B980A0 MOV X1, X0
	0x03B980A4 MOV X0, X20
	0x03B980A8 MOV X2, X31
	0x03B980AC BL 0x3B3175C
	0x03B980B0 LDR X0, [X22]
	0x03B980B4 LDR X20, [X19 + 0x70]
	0x03B980B8 LDR X21, [X19 + 0x80]
	0x03B980BC BL 0x1C16F10
	0x03B980C0 LDR X2, [X25]
	0x03B980C4 MOV X1, X19
	0x03B980C8 MOV X3, X31
	0x03B980CC MOV X22, X0
	0x03B980D0 BL 0x2A6C3A4
	0x03B980D4 CBZ X21, 0x3B981E8
	0x03B980D8 ADRP X8, 0x5C4000
	0x03B980DC LDR X8, [X8 + 0x868]
	0x03B980E0 MOV X0, X21
	0x03B980E4 MOV X1, X22
	0x03B980E8 LDR X2, [X8]
	0x03B980EC BL 0x28CE9E0
	0x03B980F0 CBZ X20, 0x3B981E8
	0x03B980F4 MOV X1, X0
	0x03B980F8 MOV X0, X20
	0x03B980FC MOV X2, X31
	0x03B98100 BL 0x3B3175C
	0x03B98104 LDRB W8, [X19 + 0x40]
	0x03B98108 CBZ W8, 0x3B981C0
	0x03B9810C LDR W8, [X19 + 0x44]
	0x03B98110 CBZ W8, 0x3B98150
	0x03B98114 LDR X8, [X19]
	0x03B98118 ADD X1, X31, 0x10
	0x03B9811C MOV X0, X19
	0x03B98120 LDP X9, X2, [X8 + 0x178]
	0x03B98124 BLR X9
	0x03B98128 TBZ X0, 0x0, 0x3B98150
	0x03B9812C LDP S0, S1, [X31 + 0x10]
	0x03B98130 LDR V2, [X31 + 0x18]
	0x03B98134 LDR X20, [X19 + 0x78]
	0x03B98138 MOV X0, X31
	0x03B9813C BL 0x3887BE4
	0x03B98140 CBZ X20, 0x3B981E8
	0x03B98144 LDR X1, [X24]
	0x03B98148 MOV X0, X20
	0x03B9814C BL 0x270D5B0
	0x03B98150 LDR W8, [X19 + 0x54]
	0x03B98154 CBZ W8, 0x3B98188
	0x03B98158 LDR X8, [X19]
	0x03B9815C ADD X1, X31, 0x0
	0x03B98160 MOV X0, X19
	0x03B98164 LDP X9, X2, [X8 + 0x188]
	0x03B98168 BLR X9
	0x03B9816C TBZ X0, 0x0, 0x3B98188
	0x03B98170 LDR X0, [X19 + 0x80]
	0x03B98174 CBZ X0, 0x3B981E8
	0x03B98178 LDP S2, S3, [X31 + 0x8]
	0x03B9817C LDP S0, S1, [X31]
	0x03B98180 LDR X1, [X23]
	0x03B98184 BL 0x270C34C
	0x03B98188 LDR X0, [X19 + 0x78]
	0x03B9818C CBZ X0, 0x3B981E8
	0x03B98190 ADRP X8, 0x5C4000
	0x03B98194 LDR X8, [X8 + 0x5E8]
	0x03B98198 FMOV S0, 1
	0x03B9819C LDR X1, [X8]
	0x03B981A0 BL 0x270D608
	0x03B981A4 LDR X0, [X19 + 0x80]
	0x03B981A8 CBZ X0, 0x3B981E8
	0x03B981AC ADRP X8, 0x5C4000
	0x03B981B0 LDR X8, [X8 + 0x598]
	0x03B981B4 FMOV S0, 1
	0x03B981B8 LDR X1, [X8]
	0x03B981BC BL 0x270C418
	0x03B981C0 LDP X20, X19, [X31 + 0x90]
	0x03B981C4 LDP X22, X21, [X31 + 0x80]
	0x03B981C8 LDP X24, X23, [X31 + 0x70]
	0x03B981CC LDP X30, X25, [X31 + 0x60]
	0x03B981D0 LDP D9, D8, [X31 + 0x50]
	0x03B981D4 LDP D11, D10, [X31 + 0x40]
	0x03B981D8 LDP D13, D12, [X31 + 0x30]
	0x03B981DC LDR V14, [X31 + 0x20]
	0x03B981E0 ADD X31, X31, 0xA0
	0x03B981E4 RET
	0x03B981E8 BL 0x1C16F20
	0x03B981EC STR X30, [X31 - 0x10]!
	0x03B981F0 LDR X0, [X0 + 0x70]
	0x03B981F4 CBZ X0, 0x3B98204
	0x03B981F8 MOV X1, X31
	0x03B981FC LDR X30, [X31], #0x10
	0x03B98200 B 0x3B31AF0
	0x03B98204 BL 0x1C16F20
	0x03B98208 STR X30, [X31 - 0x20]!
	0x03B9820C STP X20, X19, [X31 + 0x10]
	0x03B98210 ADRP X20, 0x84A000
	0x03B98214 LDRB W8, [X20 + 0xBF1]
	0x03B98218 MOV X19, X0
	0x03B9821C TBNZ X8, 0x0, 0x3B98234
	0x03B98220 ADRP X0, 0x5C4000
	0x03B98224 LDR X0, [X0 + 0x880]
	0x03B98228 BL 0x1C16CF4
	0x03B9822C MOVZ W8, 0x1
	0x03B98230 STRB W8, [X20 + 0xBF1]
	0x03B98234 LDR X0, [X19 + 0x78]
	0x03B98238 CBZ X0, 0x3B98254
	0x03B9823C ADRP X8, 0x5C4000
	0x03B98240 LDR X8, [X8 + 0x880]
	0x03B98244 LDP X20, X19, [X31 + 0x10]
	0x03B98248 LDR X1, [X8]
	0x03B9824C LDR X30, [X31], #0x20
	0x03B98250 B 0x270B618
	0x03B98254 LDP X20, X19, [X31 + 0x10]
	0x03B98258 LDR X30, [X31], #0x20
	0x03B9825C RET
	0x03B98260 SUB X31, X31, 0x50
	0x03B98264 STR D8, [X31 + 0x20]
	0x03B98268 STP X30, X21, [X31 + 0x30]
	0x03B9826C STP X20, X19, [X31 + 0x40]
	0x03B98270 ADRP X21, 0x84A000
	0x03B98274 ADRP X20, 0x55B000
	0x03B98278 LDRB W8, [X21 + 0xBF2]
	0x03B9827C LDR X20, [X20 + 0x598]
	0x03B98280 MOV X19, X0
	0x03B98284 TBNZ X8, 0x0, 0x3B982CC
	0x03B98288 ADRP X0, 0x55B000
	0x03B9828C LDR X0, [X0 + 0x598]
	0x03B98290 BL 0x1C16CF4
	0x03B98294 ADRP X0, 0x5C4000
	0x03B98298 LDR X0, [X0 + 0x598]
	0x03B9829C BL 0x1C16CF4
	0x03B982A0 ADRP X0, 0x5C4000
	0x03B982A4 LDR X0, [X0 + 0x5E8]
	0x03B982A8 BL 0x1C16CF4
	0x03B982AC ADRP X0, 0x5C4000
	0x03B982B0 LDR X0, [X0 + 0x5D8]
	0x03B982B4 BL 0x1C16CF4
	0x03B982B8 ADRP X0, 0x5C4000
	0x03B982BC LDR X0, [X0 + 0x588]
	0x03B982C0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X20, 0x84C000
	012 Move W8, [X20+3052]
	013 Move W23, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x5B3000
	020 Move X0, [X0+1496]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C6000
	023 Move X0, [X0+2016]
	024 Call 0x1C17CF4
	025 Move X0, 0x5C6000
	026 Move X0, [X0+2024]
	027 Call 0x1C17CF4
	028 Move X0, 0x5C6000
	029 Move X0, [X0+2032]
	030 Call 0x1C17CF4
	031 Move X0, 0x5C6000
	032 Move X0, [X0+2040]
	033 Call 0x1C17CF4
	034 Move X0, 0x55D000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0x5C6000
	038 Move X0, [X0+2048]
	039 Call 0x1C17CF4
	040 Move X0, 0x5C2000
	041 Move X0, [X0+2936]
	042 Call 0x1C17CF4
	043 Move X0, 0x5C6000
	044 Move X0, [X0+2056]
	045 Call 0x1C17CF4
	046 Move X0, 0x55D000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move X0, 0x5C6000
	050 Move X0, [X0+2064]
	051 Call 0x1C17CF4
	052 Move X0, 0x5C6000
	053 Move X0, [X0+2072]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+3052], W8
	057 Move [X31+40], X31
	058 Move [X31+16], X31
	059 Move [X31+24], X31
	060 Move [X31+8], X31
	061 Move X0, [X19+16]
	062 Compare X0, 0
	063 JumpIfEqual {379}
	064 Move W8, [X0+32]
	065 Compare W8, 0
	066 JumpIfNotEqual {71}
	067 Move TEMP, X23
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {368}
	071 Move X1, X31
	072 Move [X0+32], W31
	073 Call Component.get_transform, X0
	074 Compare X0, 0
	075 JumpIfEqual {379}
	076 Move X1, X31
	077 Move X20, X0
	078 Call Transform.get_parent, X0
	079 Move X24, 0x55D000
	080 Move X24, [X24+1432]
	081 Move X21, X0
	082 Move X8, [X24]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X21
	089 Move X1, X31
	090 Move X2, X31
	091 Call Object.op_Inequality, X0, X1
	092 Move X22, X31
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {105}
	097 Compare X21, 0
	098 JumpIfEqual {379}
	099 Move X8, 0x5B3000
	100 Move X8, [X8+1496]
	101 Move X0, X21
	102 Move X1, [X8]
	103 Call 0x21A4F50, X0
	104 Move X22, X0
	105 Move X0, [X24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X22
	111 Move X1, X31
	112 Move X2, X31
	113 Call Object.op_Inequality, X0, X1
	114 And W8, W0, 1
	115 Move [X19+49], W8
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {153}
	120 Move W8, [X19+48]
	121 And W25, W23, 1
	122 Xor W8, W8, 1
	123 Or W8, W8, W25
	124 Compare W8, 0
	125 JumpIfEqual {276}
	126 Move X8, 0x5C6000
	127 Move X8, [X8+2016]
	128 Add X1, X31, 40
	129 Move X0, X20
	130 Move X2, [X8]
	131 Call 0x21A5990, X0, X1
	132 Move X8, [X19+32]
	133 Compare X8, 0
	134 JumpIfEqual {379}
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {154}
	139 Move W9, 1
	140 Move [X8+16], W9
	141 Move X1, [X31+40]
	142 Move X0, X8
	143 Call CanvasScalerSettings.CopyFrom, X0, X1
	144 Move X0, [X24]
	145 Move X23, [X31+40]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X23
	151 Move X1, X31
	152 Call Object.Destroy, X0
	153 And W25, W23, 1
	154 Move [X8+16], W31
	155 Move X8, 0x5C6000
	156 Move X8, [X8+2032]
	157 Add X1, X31, 24
	158 Move X0, X20
	159 Move X2, [X8]
	160 Call 0x21A5990, X0, X1
	161 Move X8, [X19+40]
	162 Compare X8, 0
	163 JumpIfEqual {379}
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {187}
	168 Move W9, 1
	169 Move [X8+16], W9
	170 Move X23, [X31+24]
	171 Compare X23, 0
	172 JumpIfEqual {379}
	173 Move W9, [X23+48]
	174 Move [X8+20], W9
	175 Move W9, [X23+44]
	176 Move [X8+24], W9
	177 Move W9, [X23+40]
	178 Move [X8+28], W9
	179 Move X0, [X24]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X23
	185 Move X1, X31
	186 Call Object.Destroy, X0
	187 Move [X8+16], W31
	188 Move X8, 0x5C5000
	189 Move X8, [X8+2024]
	190 Add X1, X31, 16
	191 Move X0, X20
	192 Move X2, [X8]
	193 Call 0x21A5990, X0, X1
	194 Move X8, [X19+24]
	195 Compare X8, 0
	196 JumpIfEqual {379}
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {215}
	201 Move W9, 1
	202 Move [X8+16], W9
	203 Move X1, [X31+16]
	204 Move X0, X8
	205 Call CanvasSettings.CopyFrom, X0, X1
	206 Move X0, [X24]
	207 Move X23, [X31+16]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move X0, X23
	213 Move X1, X31
	214 Call Object.Destroy, X0
	215 Move [X8+16], W31
	216 Move X26, 0x5C5000
	217 Move X26, [X26+2040]
	218 Add X23, X19, 72
	219 Move X0, X20
	220 Move X1, X23
	221 Move X2, [X26]
	222 Call 0x21A5990, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {276}
	227 Compare X22, 0
	228 JumpIfEqual {379}
	229 Move X2, [X26]
	230 Add X1, X31, 8
	231 Move X0, X22
	232 Call 0x21A5990, X0, X1
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {270}
	237 Compare X21, 0
	238 JumpIfEqual {379}
	239 Move X0, X21
	240 Move X1, X31
	241 Call Object.get_name, X0
	242 Move X21, X0
	243 Move X0, X20
	244 Move X1, X31
	245 Call Object.get_name, X0
	246 Move X8, 0x5C5000
	247 Move X8, [X8+2064]
	248 Move X9, 0x5C5000
	249 Move X9, [X9+2072]
	250 Move X3, X0
	251 Move X8, [X8]
	252 Move X1, X21
	253 Move X2, [X9]
	254 Move X4, X31
	255 Move X0, X8
	256 Call String.Concat, X0, X1, X2, X3
	257 Move X8, 0x55C000
	258 Move X8, [X8+2600]
	259 Move X21, X0
	260 Move X8, [X8]
	261 Move W9, [X8+224]
	262 Compare W9, 0
	263 JumpIfNotEqual {266}
	264 Move X0, X8
	265 Call 0x1C17DFC
	266 Move X0, X21
	267 Move X1, X20
	268 Move X2, X31
	269 Call Debug.LogWarning, X0, X1
	270 Move X0, [X23]
	271 Compare X0, 0
	272 JumpIfEqual {379}
	273 Move W1, W31
	274 Move X2, X31
	275 Call Behaviour.set_enabled, X0, X1
	276 Move W8, [X19+49]
	277 Compare W8, 0
	278 JumpIfNotEqual {366}
	279 Move W8, [X19+48]
	280 Or W8, W25, W8
	281 Compare W8, 0
	282 JumpIfEqual {366}
	283 Move X8, [X19+24]
	284 Compare X8, 0
	285 JumpIfEqual {379}
	286 Move W8, [X8+16]
	287 Compare W8, 0
	288 JumpIfEqual {366}
	289 Move X0, X20
	290 Move X1, X31
	291 Call Component.get_gameObject, X0
	292 Compare X0, 0
	293 JumpIfEqual {379}
	294 Move X8, 0x5C1000
	295 Move X8, [X8+2936]
	296 Move X20, X0
	297 Move X1, [X8]
	298 Call 0x21E61FC, X0
	299 Move X8, [X19+24]
	300 Move [X19+56], X0
	301 Compare X8, 0
	302 JumpIfEqual {379}
	303 Move X1, X0
	304 Move X0, X8
	305 Call CanvasSettings.CopyTo, X0, X1
	306 Move X8, [X19+32]
	307 Compare X8, 0
	308 JumpIfEqual {379}
	309 Move W8, [X8+16]
	310 Compare W8, 0
	311 JumpIfEqual {323}
	312 Move X8, 0x5C5000
	313 Move X8, [X8+2048]
	314 Move X0, X20
	315 Move X1, [X8]
	316 Call 0x21E61FC, X0
	317 Move X8, [X19+32]
	318 Compare X8, 0
	319 JumpIfEqual {379}
	320 Move X1, X0
	321 Move X0, X8
	322 Call CanvasScalerSettings.CopyTo, X0, X1
	323 Move X8, [X19+40]
	324 Compare X8, 0
	325 JumpIfEqual {379}
	326 Move W8, [X8+16]
	327 Compare W8, 0
	328 JumpIfEqual {346}
	329 Move X8, 0x5C5000
	330 Move X8, [X8+2056]
	331 Move X0, X20
	332 Move X1, [X8]
	333 Call 0x21E61FC, X0
	334 Move X8, [X19+40]
	335 Move [X19+64], X0
	336 Compare X8, 0
	337 JumpIfEqual {379}
	338 Compare X0, 0
	339 JumpIfEqual {379}
	340 Move W9, [X8+20]
	341 Move [X0+48], W9
	342 Move W9, [X8+24]
	343 Move [X0+44], W9
	344 Move W8, [X8+28]
	345 Move [X0+40], W8
	346 Move X0, [X24]
	347 Move X20, [X19+72]
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1C17DFC
	352 Move X0, X20
	353 Move X1, X31
	354 Move X2, X31
	355 Call Object.op_Inequality, X0, X1
	356 Move TEMP, X0
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfNotEqual {366}
	360 Move X0, [X19+72]
	361 Compare X0, 0
	362 JumpIfEqual {379}
	363 Move W1, 1
	364 Move X2, X31
	365 Call Behaviour.set_enabled, X0, X1
	366 Move W8, [X19+49]
	367 Move [X19+48], W8
	368 Move X20, [X31+96]
	369 Move X19, [X31+104]
	370 Move X22, [X31+80]
	371 Move X21, [X31+88]
	372 Move X24, [X31+64]
	373 Move X23, [X31+72]
	374 Move X26, [X31+48]
	375 Move X25, [X31+56]
	376 Move X30, [X31+32]
	377 Add X31, X31, 112
	378 Return 
	379 Call 0x1C17F20

Method: System.Void CheckForOutOfView(UnityEngine.Transform gazeSource, System.Single fovAngle, System.Single facingAngle, System.Single maxDistance)

Disassembly:
	0x03B982C4 MOVZ W8, 0x1
	0x03B982C8 STRB W8, [X21 + 0xBF2]
	0x03B982CC LDR X0, [X20]
	0x03B982D0 STR W31, [X31 + 0x18]
	0x03B982D4 STP X31, X31, [X31 + 0x8]
	0x03B982D8 STR X31, [X31]
	0x03B982DC LDR W8, [X0 + 0xE0]
	0x03B982E0 LDR X20, [X19 + 0x20]
	0x03B982E4 CBNZ W8, 0x3B982EC
	0x03B982E8 BL 0x1C16DFC
	0x03B982EC MOV X0, X20
	0x03B982F0 MOV X1, X31
	0x03B982F4 MOV X2, X31
	0x03B982F8 BL 0x3C3883C
	0x03B982FC TBNZ X0, 0x0, 0x3B98418
	0x03B98300 MOV X0, X31
	0x03B98304 BL 0x3C3C7B4
	0x03B98308 LDR W8, [X19 + 0x44]
	0x03B9830C MOV V8.16B, V0.16B
	0x03B98310 CBZ W8, 0x3B98398
	0x03B98314 LDR X8, [X19]
	0x03B98318 ADD X1, X31, 0x10
	0x03B9831C MOV X0, X19
	0x03B98320 LDP X9, X2, [X8 + 0x178]
	0x03B98324 BLR X9
	0x03B98328 TBZ X0, 0x0, 0x3B98358
	0x03B9832C LDP S0, S1, [X31 + 0x10]
	0x03B98330 LDR V2, [X31 + 0x18]
	0x03B98334 LDR X20, [X19 + 0x78]
	0x03B98338 MOV X0, X31
	0x03B9833C BL 0x3887BE4
	0x03B98340 CBZ X20, 0x3B9842C
	0x03B98344 ADRP X8, 0x5C4000
	0x03B98348 LDR X8, [X8 + 0x5D8]
	0x03B9834C MOV X0, X20
	0x03B98350 LDR X1, [X8]
	0x03B98354 BL 0x270D5B0
	0x03B98358 LDR V0, [X19 + 0x3C]
	0x03B9835C LDR X0, [X19 + 0x78]
	0x03B98360 FCMP S0, 0x0
	0x03B98364 B.LE 0x3B9837C
	0x03B98368 CBZ X0, 0x3B9842C
	0x03B9836C LDP S1, S2, [X19 + 0x64]
	0x03B98370 MOV V0.16B, V8.16B
	0x03B98374 BL 0x3B92400
	0x03B98378 B 0x3B98398
	0x03B9837C CBZ X0, 0x3B9842C
	0x03B98380 ADRP X8, 0x5C4000
	0x03B98384 LDR V0, [X19 + 0x38]
	0x03B98388 LDR X8, [X8 + 0x5E8]
	0x03B9838C FMUL S0, S8, S0
	0x03B98390 LDR X1, [X8]
	0x03B98394 BL 0x270D608
	0x03B98398 LDR W8, [X19 + 0x54]
	0x03B9839C CBZ W8, 0x3B98418
	0x03B983A0 LDR X8, [X19]
	0x03B983A4 ADD X1, X31, 0x0
	0x03B983A8 MOV X0, X19
	0x03B983AC LDP X9, X2, [X8 + 0x188]
	0x03B983B0 BLR X9
	0x03B983B4 TBZ X0, 0x0, 0x3B983D8
	0x03B983B8 LDR X0, [X19 + 0x80]
	0x03B983BC CBZ X0, 0x3B9842C
	0x03B983C0 ADRP X8, 0x5C4000
	0x03B983C4 LDP S2, S3, [X31 + 0x8]
	0x03B983C8 LDP S0, S1, [X31]
	0x03B983CC LDR X8, [X8 + 0x588]
	0x03B983D0 LDR X1, [X8]
	0x03B983D4 BL 0x270C34C
	0x03B983D8 LDR V0, [X19 + 0x3C]
	0x03B983DC LDR X0, [X19 + 0x80]
	0x03B983E0 FCMP S0, 0x0
	0x03B983E4 B.LE 0x3B983FC
	0x03B983E8 CBZ X0, 0x3B9842C
	0x03B983EC LDP S1, S2, [X19 + 0x64]
	0x03B983F0 MOV V0.16B, V8.16B
	0x03B983F4 BL 0x3B919C4
	0x03B983F8 B 0x3B98418
	0x03B983FC CBZ X0, 0x3B9842C
	0x03B98400 ADRP X8, 0x5C4000
	0x03B98404 LDR V0, [X19 + 0x38]
	0x03B98408 LDR X8, [X8 + 0x598]
	0x03B9840C FMUL S0, S8, S0
	0x03B98410 LDR X1, [X8]
	0x03B98414 BL 0x270C418
	0x03B98418 LDP X20, X19, [X31 + 0x40]
	0x03B9841C LDP X30, X21, [X31 + 0x30]
	0x03B98420 LDR V8, [X31 + 0x20]
	0x03B98424 ADD X31, X31, 0x50
	0x03B98428 RET
	0x03B9842C BL 0x1C16F20
	0x03B98430 STR D10, [X31 - 0x30]!
	0x03B98434 STP D9, D8, [X31 + 0x8]
	0x03B98438 STR X30, [X31 + 0x18]
	0x03B9843C STP X20, X19, [X31 + 0x20]
	0x03B98440 LDRB W20, [X0 + 0x35]
	0x03B98444 MOV X1, X31
	0x03B98448 MOV V8.16B, V2.16B
	0x03B9844C MOV V9.16B, V1.16B
	0x03B98450 MOV V10.16B, V0.16B
	0x03B98454 BL 0x3C32E90
	0x03B98458 MOV X19, X0
	0x03B9845C MOV V0.16B, V10.16B
	0x03B98460 MOV V1.16B, V9.16B
	0x03B98464 MOV V2.16B, V8.16B
	0x03B98468 MOV X0, X31
	0x03B9846C BL 0x3887BE0
	0x03B98470 CBZ X19, 0x3B984A8
	0x03B98474 MOV X0, X19
	0x03B98478 MOV X1, X31
	0x03B9847C CBZ W20, 0x3B98494
	0x03B98480 LDP X20, X19, [X31 + 0x20]
	0x03B98484 LDR X30, [X31 + 0x18]
	0x03B98488 LDP D9, D8, [X31 + 0x8]
	0x03B9848C LDR V10, [X31], #0x30
	0x03B98490 B 0x3C3EC04
	0x03B98494 LDP X20, X19, [X31 + 0x20]
	0x03B98498 LDR X30, [X31 + 0x18]
	0x03B9849C LDP D9, D8, [X31 + 0x8]
	0x03B984A0 LDR V10, [X31], #0x30
	0x03B984A4 B 0x3C3F62C
	0x03B984A8 BL 0x1C16F20
	0x03B984AC STP D11, D10, [X31 - 0x30]!
	0x03B984B0 STP D9, D8, [X31 + 0x10]
	0x03B984B4 STP X30, X19, [X31 + 0x20]
	0x03B984B8 LDRB W19, [X0 + 0x35]
	0x03B984BC MOV X1, X31
	0x03B984C0 MOV V8.16B, V3.16B
	0x03B984C4 MOV V9.16B, V2.16B
	0x03B984C8 MOV V10.16B, V1.16B
	0x03B984CC MOV V11.16B, V0.16B
	0x03B984D0 BL 0x3C32E90
	0x03B984D4 CBZ X0, 0x3B98510
	0x03B984D8 MOV V0.16B, V11.16B
	0x03B984DC MOV V1.16B, V10.16B
	0x03B984E0 MOV V2.16B, V9.16B
	0x03B984E4 MOV V3.16B, V8.16B
	0x03B984E8 MOV X1, X31
	0x03B984EC CBZ W19, 0x3B98500
	0x03B984F0 LDP X30, X19, [X31 + 0x20]
	0x03B984F4 LDP D9, D8, [X31 + 0x10]
	0x03B984F8 LDP D11, D10, [X31], #0x30
	0x03B984FC B 0x3C3F8B8
	0x03B98500 LDP X30, X19, [X31 + 0x20]
	0x03B98504 LDP D9, D8, [X31 + 0x10]
	0x03B98508 LDP D11, D10, [X31], #0x30
	0x03B9850C B 0x3C3F7AC
	0x03B98510 BL 0x1C16F20
	0x03B98514 STR D10, [X31 - 0x40]!
	0x03B98518 STP D9, D8, [X31 + 0x10]
	0x03B9851C STP X30, X21, [X31 + 0x20]
	0x03B98520 STP X20, X19, [X31 + 0x30]
	0x03B98524 ADRP X21, 0x84A000
	0x03B98528 LDRB W8, [X21 + 0xBF3]
	0x03B9852C MOV X19, X1
	0x03B98530 MOV X20, X0
	0x03B98534 TBNZ X8, 0x0, 0x3B98570
	0x03B98538 ADRP X0, 0x55B000
	0x03B9853C LDR X0, [X0 + 0xA28]
	0x03B98540 BL 0x1C16CF4
	0x03B98544 ADRP X0, 0x5C4000
	0x03B98548 LDR X0, [X0 + 0x888]
	0x03B9854C BL 0x1C16CF4
	0x03B98550 ADRP X0, 0x5C4000
	0x03B98554 LDR X0, [X0 + 0x890]
	0x03B98558 BL 0x1C16CF4
	0x03B9855C ADRP X0, 0x5C4000
	0x03B98560 LDR X0, [X0 + 0x898]
	0x03B98564 BL 0x1C16CF4
	0x03B98568 MOVZ W8, 0x1
	0x03B9856C STRB W8, [X21 + 0xBF3]
	0x03B98570 LDR W8, [X20 + 0x44]
	0x03B98574 CMP W8, 0x1
	0x03B98578 B.EQ 0x3B98614
	0x03B9857C CBZ W8, 0x3B985F0
	0x03B98580 ADRP X9, 0x5C4000
	0x03B98584 LDR X9, [X9 + 0x888]
	0x03B98588 ADD X1, X31, 0xC
	0x03B9858C STR W8, [X31 + 0xC]
	0x03B98590 LDR X0, [X9]
	0x03B98594 BL 0x1C16E04
	0x03B98598 ADRP X8, 0x5C4000
	0x03B9859C LDR X8, [X8 + 0x890]
	0x03B985A0 ADRP X9, 0x5C4000
	0x03B985A4 LDR X9, [X9 + 0x898]
	0x03B985A8 MOV X2, X0
	0x03B985AC LDR X8, [X8]
	0x03B985B0 MOV X3, X31
	0x03B985B4 LDR X1, [X9]
	0x03B985B8 MOV X0, X8
	0x03B985BC BL 0x3227BD4
	0x03B985C0 ADRP X8, 0x55B000
	0x03B985C4 LDR X8, [X8 + 0xA28]
	0x03B985C8 MOV X21, X0
	0x03B985CC LDR X8, [X8]
	0x03B985D0 LDR W9, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X30
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X21, 0x84B000
	015 Move W8, [X21+3053]
	016 Move V8, V2
	017 Move V9, V1
	018 Move V10, V0
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x55C000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3053], W8
	030 Move [X31+136], W31
	031 Move [X31+128], X31
	032 Move [X31+120], W31
	033 Move [X31+112], X31
	034 Move [X31+104], W31
	035 Move [X31+96], X31
	036 Move [X31+88], W31
	037 Move [X31+80], X31
	038 Move [X31+72], W31
	039 Move [X31+64], X31
	040 Move [X31+56], W31
	041 Move [X31+48], X31
	042 Move [X31+40], W31
	043 Move [X31+32], X31
	044 Move W8, [X19+49]
	045 Compare W8, 0
	046 JumpIfNotEqual {226}
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {240}
	050 Move X1, X31
	051 Call Canvas.get_renderMode, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move V11, [X19+80]
	054 Move X0, X31
	055 Call Time.get_deltaTime
	056 Add S0, S11, S0
	057 Move S1, 0.5
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Move [X19+80], S0
	060 Move X0, [X19+56]
	061 Move [X19+80], W31
	062 Compare X0, 0
	063 JumpIfEqual {240}
	064 Move X1, X31
	065 Call Component.get_transform, X0
	066 Compare X20, 0
	067 JumpIfEqual {240}
	068 Move X21, X0
	069 Move X0, X20
	070 Move X1, X31
	071 Call Transform.get_position, X0
	072 Move X0, X20
	073 Move X1, X31
	074 Move V15, V0
	075 Move [X31+16], S1
	076 Move V11, V2
	077 Call Transform.get_forward, X0
	078 Move [X31+24], S1
	079 Move [X31+32], S0
	080 Move [X31+20], S2
	081 Compare X21, 0
	082 JumpIfEqual {240}
	083 Move X0, X21
	084 Move X1, X31
	085 Call Transform.get_position, X0
	086 Move X0, X21
	087 Move X1, X31
	088 Move V14, V0
	089 Move V12, V1
	090 Move V13, V2
	091 Call Transform.get_forward, X0
	092 Move [X31+8], S1
	093 Move [X31+16], S0
	094 Move [X31], S15
	095 Move [X31+8], S2
	096 Move V0, V15
	097 Move V15, [X31+16]
	098 Move V2, V11
	099 Move X0, X31
	100 Move V1, V15
	101 Call float3.op_Implicit, X0
	102 Move [X31+128], S0
	103 Move [X31+136], S1
	104 Move [X31+136], S2
	105 Move S1, [X31+24]
	106 Move S0, [X31+28]
	107 Move V2, [X31+20]
	108 Move X0, X31
	109 Call float3.op_Implicit, X0
	110 Move [X31+112], S0
	111 Move [X31+120], S1
	112 Move [X31+120], S2
	113 Move V0, V14
	114 Move V1, V12
	115 Move V2, V13
	116 Move X0, X31
	117 Call float3.op_Implicit, X0
	118 Move [X31+96], S0
	119 Move [X31+104], S1
	120 Add X0, X31, 128
	121 Add X1, X31, 112
	122 Add X2, X31, 96
	123 Move V0, V10
	124 Move [X31+104], S2
	125 Call BurstGazeUtility.IsOutsideGaze, X0, X1, X2, V0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {131}
	130 Move W0, 1
	131 Move S1, [X31+24]
	132 Move S0, [X31+28]
	133 Move V2, [X31+20]
	134 Move X0, X31
	135 Call float3.op_Implicit, X0
	136 Move [X31+80], S0
	137 Move [X31+88], S1
	138 Move [X31+88], S2
	139 Move S1, [X31+8]
	140 Move S0, [X31+12]
	141 Move V2, [X31+4]
	142 Move X0, X31
	143 Call float3.op_Implicit, X0
	144 Move [X31+64], S0
	145 Move [X31+72], S1
	146 Add X0, X31, 80
	147 Add X1, X31, 64
	148 Move V0, V9
	149 Move [X31+72], S2
	150 Call BurstGazeUtility.IsAlignedToGazeForward, X0, X1, V0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {156}
	155 Move W0, W31
	156 Move V0, [X31]
	157 Move V1, V15
	158 Move V2, V11
	159 Move X0, X31
	160 Call float3.op_Implicit, X0
	161 Move [X31+48], S0
	162 Move [X31+56], S1
	163 Move [X31+56], S2
	164 Move V0, V14
	165 Move V1, V12
	166 Move V2, V13
	167 Move X0, X31
	168 Call float3.op_Implicit, X0
	169 Move [X31+32], S0
	170 Move [X31+40], S1
	171 Add X0, X31, 48
	172 Add X1, X31, 32
	173 Move V0, V8
	174 Move [X31+40], S2
	175 Call BurstGazeUtility.IsOutsideDistanceRange, X0, X1, V0
	176 Move W9, [X19+50]
	177 And W8, W0, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X19+50], W8
	180 Move X21, 0x55C000
	181 Move X21, [X21+1432]
	182 Move X20, [X19+64]
	183 Move X0, [X21]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X20
	189 Move X1, X31
	190 Move X2, X31
	191 Call Object.op_Inequality, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {204}
	196 Move X0, [X19+64]
	197 Compare X0, 0
	198 JumpIfEqual {240}
	199 Move W8, [X19+50]
	200 Move X2, X31
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CSET not yet implemented."
	203 Call Behaviour.set_enabled, X0, X1
	204 Move X0, [X21]
	205 Move X20, [X19+72]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Move X0, X20
	211 Move X1, X31
	212 Move X2, X31
	213 Call Object.op_Inequality, X0, X1
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {226}
	218 Move X0, [X19+72]
	219 Compare X0, 0
	220 JumpIfEqual {240}
	221 Move W8, [X19+50]
	222 Move X2, X31
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CSET not yet implemented."
	225 Call Behaviour.set_enabled, X0, X1
	226 Move X20, [X31+224]
	227 Move X19, [X31+232]
	228 Move X30, [X31+208]
	229 Move X21, [X31+216]
	230 Move D9, [X31+192]
	231 Move D8, [X31+200]
	232 Move D11, [X31+176]
	233 Move D10, [X31+184]
	234 Move D13, [X31+160]
	235 Move D12, [X31+168]
	236 Move D15, [X31+144]
	237 Move D14, [X31+152]
	238 Add X31, X31, 240
	239 Return 
	240 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B97BF8 RET
	0x03B97BFC AND W8, W1, 0x1
	0x03B97C00 STRB W8, [X0 + 0x40]
	0x03B97C04 RET
	0x03B97C08 LDR W0, [X0 + 0x44]
	0x03B97C0C RET
	0x03B97C10 STR W1, [X0 + 0x44]
	0x03B97C14 RET
	0x03B97C18 LDR V0, [X0 + 0x48]
	0x03B97C1C RET
	0x03B97C20 LDR X8, [X0 + 0x78]
	0x03B97C24 STR S0, [X0 + 0x48]
	0x03B97C28 CBZ X8, 0x3B97C30
	0x03B97C2C STR S0, [X8 + 0xA8]
	0x03B97C30 RET
	0x03B97C34 LDR V0, [X0 + 0x4C]
	0x03B97C38 RET
	0x03B97C3C LDR X8, [X0 + 0x78]
	0x03B97C40 STR S0, [X0 + 0x4C]
	0x03B97C44 CBZ X8, 0x3B97C54
	0x03B97C48 STR S0, [X8 + 0xAC]
	0x03B97C4C FMUL S0, S0, S0
	0x03B97C50 STR S0, [X8 + 0xB4]
	0x03B97C54 RET
	0x03B97C58 LDR V0, [X0 + 0x50]
	0x03B97C5C RET
	0x03B97C60 LDR X8, [X0 + 0x78]
	0x03B97C64 STR S0, [X0 + 0x50]
	0x03B97C68 CBZ X8, 0x3B97C70
	0x03B97C6C STR S0, [X8 + 0xB0]
	0x03B97C70 RET
	0x03B97C74 LDR W0, [X0 + 0x54]
	0x03B97C78 RET
	0x03B97C7C STR W1, [X0 + 0x54]
	0x03B97C80 B 0x3B97A34
	0x03B97C84 LDR V0, [X0 + 0x58]
	0x03B97C88 RET
	0x03B97C8C LDR X8, [X0 + 0x80]
	0x03B97C90 STR S0, [X0 + 0x58]
	0x03B97C94 CBZ X8, 0x3B97C9C
	0x03B97C98 STR S0, [X8 + 0x6C]
	0x03B97C9C RET
	0x03B97CA0 LDR V0, [X0 + 0x5C]
	0x03B97CA4 RET
	0x03B97CA8 LDR X8, [X0 + 0x80]
	0x03B97CAC STR S0, [X0 + 0x5C]
	0x03B97CB0 CBZ X8, 0x3B97CB8
	0x03B97CB4 STR S0, [X8 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x84C000
	008 Move X23, 0x5C6000
	009 Move X22, 0x5C6000
	010 Move X21, 0x5C6000
	011 Move W8, [X20+3054]
	012 Move X23, [X23+1960]
	013 Move X22, [X22+1968]
	014 Move X21, [X21+1976]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x5C6000
	021 Move X0, [X0+1968]
	022 Call 0x1C17CF4
	023 Move X0, 0x5C6000
	024 Move X0, [X0+1960]
	025 Call 0x1C17CF4
	026 Move X0, 0x5C6000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3054], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call Object..ctor, X0
	036 Move [X19+24], X20
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X20, X0
	041 Call Object..ctor, X0
	042 Move [X19+32], X20
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call Object..ctor, X0
	048 Move [X19+40], X20
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call Object..ctor, X0
	058 Return 

