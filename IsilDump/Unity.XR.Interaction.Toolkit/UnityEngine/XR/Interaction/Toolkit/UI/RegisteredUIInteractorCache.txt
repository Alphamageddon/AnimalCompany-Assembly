Type: UnityEngine.XR.Interaction.Toolkit.UI.RegisteredUIInteractorCache

Method: System.Void .ctor(UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor uiInteractor)

Disassembly:
	0x03B9A9C0 CBZ X0, 0x3B9AA0C
	0x03B9A9C4 LDP W2, W8, [X0 + 0x18]
	0x03B9A9C8 ADD W8, W8, 0x1
	0x03B9A9CC CMP W2, 0x1
	0x03B9A9D0 STP W31, W8, [X0 + 0x18]
	0x03B9A9D4 B.LT 0x3B9A9F0
	0x03B9A9D8 LDR X0, [X0 + 0x10]
	0x03B9A9DC MOV W1, W31
	0x03B9A9E0 MOV X3, X31
	0x03B9A9E4 BL 0x339FA34
	0x03B9A9E8 LDR X0, [X20 + 0x20]
	0x03B9A9EC CBZ X0, 0x3B9AA0C
	0x03B9A9F0 ADRP X8, 0x5C2000
	0x03B9A9F4 LDR X8, [X8 + 0x8B0]
	0x03B9A9F8 LDR X1, [X19 + 0xF0]
	0x03B9A9FC LDP X20, X19, [X31 + 0x10]
	0x03B9AA00 LDR X2, [X8]
	0x03B9AA04 LDP X30, X21, [X31], #0x20
	0x03B9AA08 B 0x301C194
	0x03B9AA0C BL 0x1C16F20
	0x03B9AA10 LDR X0, [X0]
	0x03B9AA14 RET
	0x03B9AA18 STR X1, [X0]
	0x03B9AA1C RET
	0x03B9AA20 LDR X0, [X0 + 0x8]
	0x03B9AA24 RET
	0x03B9AA28 STR X1, [X0 + 0x8]
	0x03B9AA2C RET
	0x03B9AA30 LDRB W0, [X0 + 0x10]
	0x03B9AA34 RET
	0x03B9AA38 AND W8, W1, 0x1
	0x03B9AA3C STRB W8, [X0 + 0x10]
	0x03B9AA40 RET
	0x03B9AA44 LDR V0, [X0 + 0x14]
	0x03B9AA48 RET
	0x03B9AA4C STR S0, [X0 + 0x14]
	0x03B9AA50 RET
	0x03B9AA54 LDP S0, S1, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x849000
	006 Move W8, [X21+3068]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5C1000
	014 Move X0, [X0+872]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3068], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Move [X19+32], X20
	022 Compare X20, 0
	023 JumpIfEqual {32}
	024 Move X8, 0x5C1000
	025 Move X8, [X8+872]
	026 Move X9, [X20]
	027 Move X8, [X8]
	028 Move W11, [X9+304]
	029 Move W10, [X8+304]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, X31
	032 Move [X19+40], X31
	033 Move X9, [X9+200]
	034 Add X9, X9, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Move [X19+40], X8
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 

Method: System.Void RegisterOrUnregisterXRUIInputModule(System.Boolean enabled)

Disassembly:
	0x03B9AA58 RET
	0x03B9AA5C STP S0, S1, [X0 + 0x18]
	0x03B9AA60 RET
	0x03B9AA64 ADD X1, X0, 0x20
	0x03B9AA68 MOVZ W2, 0x50
	0x03B9AA6C MOV X0, X8
	0x03B9AA70 B 0x3EB1AC0
	0x03B9AA74 STR X30, [X31 - 0x10]!
	0x03B9AA78 ADD X0, X0, 0x20
	0x03B9AA7C MOVZ W2, 0x50
	0x03B9AA80 BL 0x3EB1B30
	0x03B9AA84 LDR X30, [X31], #0x10
	0x03B9AA88 RET
	0x03B9AA8C LDR X0, [X0 + 0x70]
	0x03B9AA90 RET
	0x03B9AA94 STR X1, [X0 + 0x70]
	0x03B9AA98 RET
	0x03B9AA9C LDR X0, [X0 + 0x78]
	0x03B9AAA0 RET
	0x03B9AAA4 STR X1, [X0 + 0x78]
	0x03B9AAA8 RET
	0x03B9AAAC LDR X0, [X0 + 0x80]
	0x03B9AAB0 RET
	0x03B9AAB4 STR X1, [X0 + 0x80]
	0x03B9AAB8 RET
	0x03B9AABC MOV X2, X31
	0x03B9AAC0 B 0x3E4F118
	0x03B9AAC4 LDR X0, [X0 + 0x180]
	0x03B9AAC8 RET
	0x03B9AACC STR X1, [X0 + 0x180]
	0x03B9AAD0 RET
	0x03B9AAD4 LDR W0, [X0 + 0x188]
	0x03B9AAD8 RET
	0x03B9AADC STR W1, [X0 + 0x188]
	0x03B9AAE0 RET
	0x03B9AAE4 LDR W0, [X0 + 0x18C]
	0x03B9AAE8 RET
	0x03B9AAEC STR W1, [X0 + 0x18C]
	0x03B9AAF0 RET
	0x03B9AAF4 STP X30, X21, [X31 - 0x20]!
	0x03B9AAF8 STP X20, X19, [X31 + 0x10]
	0x03B9AAFC ADRP X20, 0x848000
	0x03B9AB00 LDRB W8, [X20 + 0xC06]
	0x03B9AB04 MOV X19, X0
	0x03B9AB08 TBNZ X8, 0x0, 0x3B9AB2C
	0x03B9AB0C ADRP X0, 0x559000
	0x03B9AB10 LDR X0, [X0 + 0x598]
	0x03B9AB14 BL 0x1C16CF4
	0x03B9AB18 ADRP X0, 0x5C2000
	0x03B9AB1C LDR X0, [X0 + 0x900]
	0x03B9AB20 BL 0x1C16CF4
	0x03B9AB24 MOVZ W8, 0x1
	0x03B9AB28 STRB W8, [X20 + 0xC06]
	0x03B9AB2C ADRP X21, 0x559000
	0x03B9AB30 LDR X21, [X21 + 0x598]
	0x03B9AB34 MOV X0, X19
	0x03B9AB38 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x849000
	007 Move X22, 0x55A000
	008 Move W8, [X21+3069]
	009 Move X22, [X22+2416]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x55A000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x55A000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3069], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {70}
	035 Move X8, 0x55A000
	036 Move X8, [X8+1432]
	037 Move X21, [X19+40]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {60}
	051 Move X0, [X19+40]
	052 Compare X0, 0
	053 JumpIfEqual {83}
	054 Move X1, X31
	055 Call Behaviour.get_isActiveAndEnabled, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {70}
	060 Move X0, X19
	061 Move TEMP, X20
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {76}
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Call RegisteredUIInteractorCache.UnregisterFromXRUIInputModule, X0
	082 Return 
	083 Call 0x1C17F20

Method: System.Void RegisterWithXRUIInputModule()

Disassembly:
	0x03B9AB3C BL 0x3E4EC04
	0x03B9AB40 CBZ X0, 0x3B9AB64
	0x03B9AB44 ADRP X8, 0x5C2000
	0x03B9AB48 LDR X8, [X8 + 0x900]
	0x03B9AB4C LDR X9, [X0]
	0x03B9AB50 LDR X8, [X8]
	0x03B9AB54 LDRB W11, [X9 + 0x130]
	0x03B9AB58 LDRB W10, [X8 + 0x130]
	0x03B9AB5C CMP W11, W10
	0x03B9AB60 B.CS 0x3B9AB6C
	0x03B9AB64 MOV X20, X31
	0x03B9AB68 B 0x3B9AB80
	0x03B9AB6C LDR X9, [X9 + 0xC8]
	0x03B9AB70 ADD X9, X9, X10, 0x3, LSL
	0x03B9AB74 LDUR X9, [X9 - 0x8]
	0x03B9AB78 CMP X9, X8
	0x03B9AB7C CSEL X20, X0, X31, EQ
	0x03B9AB80 LDR X0, [X21]
	0x03B9AB84 LDR W8, [X0 + 0xE0]
	0x03B9AB88 CBNZ W8, 0x3B9AB90
	0x03B9AB8C BL 0x1C16DFC
	0x03B9AB90 MOV X0, X20
	0x03B9AB94 MOV X1, X31
	0x03B9AB98 MOV X2, X31
	0x03B9AB9C BL 0x3C354F8
	0x03B9ABA0 TBZ X0, 0x0, 0x3B9ABBC
	0x03B9ABA4 CBZ X20, 0x3B9ABCC
	0x03B9ABA8 LDR W1, [X19 + 0x100]
	0x03B9ABAC MOV X0, X20
	0x03B9ABB0 LDP X20, X19, [X31 + 0x10]
	0x03B9ABB4 LDP X30, X21, [X31], #0x20
	0x03B9ABB8 B 0x3B9ABD0
	0x03B9ABBC LDP X20, X19, [X31 + 0x10]
	0x03B9ABC0 MOV X0, X31
	0x03B9ABC4 LDP X30, X21, [X31], #0x20
	0x03B9ABC8 RET
	0x03B9ABCC BL 0x1C16F20
	0x03B9ABD0 SUB X31, X31, 0x1A0
	0x03B9ABD4 STP X29, X30, [X31 + 0x160]
	0x03B9ABD8 STP X24, X23, [X31 + 0x170]
	0x03B9ABDC STP X22, X21, [X31 + 0x180]
	0x03B9ABE0 STP X20, X19, [X31 + 0x190]
	0x03B9ABE4 ADRP X21, 0x848000
	0x03B9ABE8 LDRB W8, [X21 + 0xC73]
	0x03B9ABEC MOV W19, W1
	0x03B9ABF0 MOV X20, X0
	0x03B9ABF4 TBNZ X8, 0x0, 0x3B9AC24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x849000
	006 Move X21, 0x55A000
	007 Move W8, [X20+3070]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x55A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3070], W8
	019 Move X0, [X21]
	020 Move X20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {35}
	033 Move X0, X19
	034 Call RegisteredUIInteractorCache.FindOrCreateXRUIInputModule, X0
	035 Move X0, [X21]
	036 Move X20, [X19+16]
	037 Move X21, [X19+24]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X20
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {59}
	050 Move X0, X19
	051 Call RegisteredUIInteractorCache.UnregisterFromXRUIInputModule, X0
	052 Move X0, [X19+16]
	053 Compare X0, 0
	054 JumpIfEqual {64}
	055 Move X1, [X19+32]
	056 Call XRUIInputModule.RegisterInteractor, X0, X1
	057 Move X8, [X19+16]
	058 Move [X19+24], X8
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Call 0x1C17F20

Method: System.Void UnregisterFromXRUIInputModule()

Disassembly:
	0x03B9ABF8 ADRP X0, 0x5C2000
	0x03B9ABFC LDR X0, [X0 + 0x8E8]
	0x03B9AC00 BL 0x1C16CF4
	0x03B9AC04 ADRP X0, 0x5C2000
	0x03B9AC08 LDR X0, [X0 + 0x8F0]
	0x03B9AC0C BL 0x1C16CF4
	0x03B9AC10 ADRP X0, 0x5C1000
	0x03B9AC14 LDR X0, [X0 + 0x258]
	0x03B9AC18 BL 0x1C16CF4
	0x03B9AC1C MOVZ W8, 0x1
	0x03B9AC20 STRB W8, [X21 + 0xC73]
	0x03B9AC24 LDR X0, [X20 + 0x380]
	0x03B9AC28 CBZ X0, 0x3B9AC84
	0x03B9AC2C ADRP X22, 0x5C2000
	0x03B9AC30 ADRP X23, 0x5C1000
	0x03B9AC34 LDR X22, [X22 + 0x8F0]
	0x03B9AC38 LDR X23, [X23 + 0x258]
	0x03B9AC3C MOV W21, W31
	0x03B9AC40 LDR W8, [X0 + 0x18]
	0x03B9AC44 CMP W21, W8
	0x03B9AC48 B.GE 0x3B9AC88
	0x03B9AC4C LDR X2, [X22]
	0x03B9AC50 ADD X8, X31, 0x0
	0x03B9AC54 MOV W1, W21
	0x03B9AC58 BL 0x317E164
	0x03B9AC5C LDR X0, [X23]
	0x03B9AC60 LDR W24, [X31 + 0xA8]
	0x03B9AC64 LDR W8, [X0 + 0xE0]
	0x03B9AC68 CBNZ W8, 0x3B9AC70
	0x03B9AC6C BL 0x1C16DFC
	0x03B9AC70 CMP W24, W19
	0x03B9AC74 B.EQ 0x3B9AC90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x849000
	006 Move X20, 0x55A000
	007 Move W8, [X21+3071]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x55A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3071], W8
	019 Move X0, [X20]
	020 Move X20, [X19+24]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {38}
	033 Move X0, [X19+24]
	034 Compare X0, 0
	035 JumpIfEqual {44}
	036 Move X1, [X19+32]
	037 Call XRUIInputModule.UnregisterInteractor, X0, X1
	038 Move [X19+24], X31
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Call 0x1C17F20

Method: System.Void FindOrCreateXRUIInputModule()

Disassembly:
	0x03B9AC78 LDR X0, [X20 + 0x380]
	0x03B9AC7C ADD W21, W21, 0x1
	0x03B9AC80 CBNZ X0, 0x3B9AC40
	0x03B9AC84 BL 0x1C16F20
	0x03B9AC88 MOV X0, X31
	0x03B9AC8C B 0x3B9ACAC
	0x03B9AC90 LDR X0, [X20 + 0x380]
	0x03B9AC94 CBZ X0, 0x3B9AC84
	0x03B9AC98 LDR X2, [X22]
	0x03B9AC9C ADD X8, X31, 0x0
	0x03B9ACA0 MOV W1, W21
	0x03B9ACA4 BL 0x317E164
	0x03B9ACA8 LDR X0, [X31]
	0x03B9ACAC LDP X20, X19, [X31 + 0x190]
	0x03B9ACB0 LDP X22, X21, [X31 + 0x180]
	0x03B9ACB4 LDP X24, X23, [X31 + 0x170]
	0x03B9ACB8 LDP X29, X30, [X31 + 0x160]
	0x03B9ACBC ADD X31, X31, 0x1A0
	0x03B9ACC0 RET
	0x03B9ACC4 LDR V0, [X0 + 0x190]
	0x03B9ACC8 LDR V1, [X0 + 0x194]
	0x03B9ACCC LDR V2, [X0 + 0x198]
	0x03B9ACD0 RET
	0x03B9ACD4 STR S0, [X0 + 0x190]
	0x03B9ACD8 STR S1, [X0 + 0x194]
	0x03B9ACDC STR S2, [X0 + 0x198]
	0x03B9ACE0 RET
	0x03B9ACE4 LDRB W0, [X0 + 0x28]
	0x03B9ACE8 RET
	0x03B9ACEC AND W8, W1, 0x1
	0x03B9ACF0 STRB W8, [X0 + 0x28]
	0x03B9ACF4 RET
	0x03B9ACF8 LDRB W0, [X0 + 0x29]
	0x03B9ACFC RET
	0x03B9AD00 AND W8, W1, 0x1
	0x03B9AD04 STRB W8, [X0 + 0x29]
	0x03B9AD08 RET
	0x03B9AD0C LDRB W0, [X0 + 0x2A]
	0x03B9AD10 RET
	0x03B9AD14 AND W8, W1, 0x1
	0x03B9AD18 STRB W8, [X0 + 0x2A]
	0x03B9AD1C RET
	0x03B9AD20 LDR W0, [X0 + 0x2C]
	0x03B9AD24 RET
	0x03B9AD28 STR W1, [X0 + 0x2C]
	0x03B9AD2C RET
	0x03B9AD30 LDR W0, [X0 + 0x30]
	0x03B9AD34 RET
	0x03B9AD38 STR W1, [X0 + 0x30]
	0x03B9AD3C RET
	0x03B9AD40 STP X30, X21, [X31 - 0x20]!
	0x03B9AD44 STP X20, X19, [X31 + 0x10]
	0x03B9AD48 ADRP X20, 0x848000
	0x03B9AD4C ADRP X21, 0x559000
	0x03B9AD50 LDRB W8, [X20 + 0xC07]
	0x03B9AD54 LDR X21, [X21 + 0x598]
	0x03B9AD58 MOV X19, X0
	0x03B9AD5C TBNZ X8, 0x0, 0x3B9AD74
	0x03B9AD60 ADRP X0, 0x559000
	0x03B9AD64 LDR X0, [X0 + 0x598]
	0x03B9AD68 BL 0x1C16CF4
	0x03B9AD6C MOVZ W8, 0x1
	0x03B9AD70 STRB W8, [X20 + 0xC07]
	0x03B9AD74 MOV X0, X19
	0x03B9AD78 BL 0x3B9AE18
	0x03B9AD7C LDR X8, [X21]
	0x03B9AD80 MOV X20, X0
	0x03B9AD84 LDR W9, [X8 + 0xE0]
	0x03B9AD88 CBNZ W9, 0x3B9AD94
	0x03B9AD8C MOV X0, X8
	0x03B9AD90 BL 0x1C16DFC
	0x03B9AD94 MOV X0, X20
	0x03B9AD98 MOV X1, X31
	0x03B9AD9C MOV X2, X31
	0x03B9ADA0 BL 0x3C354F8
	0x03B9ADA4 TBZ X0, 0x0, 0x3B9AE04
	0x03B9ADA8 MOV X0, X19
	0x03B9ADAC BL 0x3B9AE18
	0x03B9ADB0 CBZ X0, 0x3B9AE14
	0x03B9ADB4 MOV X1, X31
	0x03B9ADB8 BL 0x3E24E68
	0x03B9ADBC LDR X8, [X21]
	0x03B9ADC0 MOV X20, X0
	0x03B9ADC4 LDR W9, [X8 + 0xE0]
	0x03B9ADC8 CBNZ W9, 0x3B9ADD4
	0x03B9ADCC MOV X0, X8
	0x03B9ADD0 BL 0x1C16DFC
	0x03B9ADD4 MOV X0, X20
	0x03B9ADD8 MOV X1, X31
	0x03B9ADDC MOV X2, X31
	0x03B9ADE0 BL 0x3C354F8
	0x03B9ADE4 TBZ X0, 0x0, 0x3B9AE04
	0x03B9ADE8 MOV X0, X19
	0x03B9ADEC BL 0x3B9AE18
	0x03B9ADF0 CBZ X0, 0x3B9AE14
	0x03B9ADF4 LDP X20, X19, [X31 + 0x10]
	0x03B9ADF8 MOV X1, X31
	0x03B9ADFC LDP X30, X21, [X31], #0x20
	0x03B9AE00 B 0x3E24E68
	0x03B9AE04 LDP X20, X19, [X31 + 0x10]
	0x03B9AE08 MOV X0, X31
	0x03B9AE0C LDP X30, X21, [X31], #0x20
	0x03B9AE10 B 0x3C047F8
	0x03B9AE14 BL 0x1C16F20
	0x03B9AE18 STR X30, [X31 - 0x30]!
	0x03B9AE1C STP X22, X21, [X31 + 0x10]
	0x03B9AE20 STP X20, X19, [X31 + 0x20]
	0x03B9AE24 ADRP X20, 0x848000
	0x03B9AE28 ADRP X22, 0x559000
	0x03B9AE2C LDRB W8, [X20 + 0xC09]
	0x03B9AE30 LDR X22, [X22 + 0x598]
	0x03B9AE34 MOV X19, X0
	0x03B9AE38 TBNZ X8, 0x0, 0x3B9AE5C
	0x03B9AE3C ADRP X0, 0x5C2000
	0x03B9AE40 LDR X0, [X0 + 0x7E8]
	0x03B9AE44 BL 0x1C16CF4
	0x03B9AE48 ADRP X0, 0x559000
	0x03B9AE4C LDR X0, [X0 + 0x598]
	0x03B9AE50 BL 0x1C16CF4
	0x03B9AE54 MOVZ W8, 0x1
	0x03B9AE58 STRB W8, [X20 + 0xC09]
	0x03B9AE5C MOV X20, X19
	0x03B9AE60 LDR X21, [X20 + 0x38]!
	0x03B9AE64 LDR X0, [X22]
	0x03B9AE68 LDR W8, [X0 + 0xE0]
	0x03B9AE6C CBNZ W8, 0x3B9AE74
	0x03B9AE70 BL 0x1C16DFC
	0x03B9AE74 MOV X0, X21
	0x03B9AE78 MOV X1, X31
	0x03B9AE7C MOV X2, X31
	0x03B9AE80 BL 0x3C354F8
	0x03B9AE84 TBNZ X0, 0x0, 0x3B9AEA0
	0x03B9AE88 ADRP X8, 0x5C2000
	0x03B9AE8C LDR X8, [X8 + 0x7E8]
	0x03B9AE90 MOV X0, X19
	0x03B9AE94 MOV X1, X20
	0x03B9AE98 LDR X2, [X8]
	0x03B9AE9C BL 0x21A4990
	0x03B9AEA0 LDR X0, [X20]
	0x03B9AEA4 LDP X20, X19, [X31 + 0x20]
	0x03B9AEA8 LDP X22, X21, [X31 + 0x10]
	0x03B9AEAC LDR X30, [X31], #0x30
	0x03B9AEB0 RET
	0x03B9AEB4 STR X30, [X31 - 0x30]!
	0x03B9AEB8 STP X22, X21, [X31 + 0x10]
	0x03B9AEBC STP X20, X19, [X31 + 0x20]
	0x03B9AEC0 ADRP X22, 0x848000
	0x03B9AEC4 LDRB W8, [X22 + 0xC08]
	0x03B9AEC8 MOV X19, X2
	0x03B9AECC MOV X20, X1
	0x03B9AED0 MOV X21, X0
	0x03B9AED4 TBNZ X8, 0x0, 0x3B9AEEC
	0x03B9AED8 ADRP X0, 0x5C2000
	0x03B9AEDC LDR X0, [X0 + 0x908]
	0x03B9AEE0 BL 0x1C16CF4
	0x03B9AEE4 MOVZ W8, 0x1
	0x03B9AEE8 STRB W8, [X22 + 0xC08]
	0x03B9AEEC CBZ X20, 0x3B9AF24
	0x03B9AEF0 ADRP X8, 0x5C2000
	0x03B9AEF4 LDR X8, [X8 + 0x908]
	0x03B9AEF8 LDR X9, [X20]
	0x03B9AEFC LDR X8, [X8]
	0x03B9AF00 LDRB W11, [X9 + 0x130]
	0x03B9AF04 LDRB W10, [X8 + 0x130]
	0x03B9AF08 CMP W11, W10
	0x03B9AF0C B.CC 0x3B9AF24
	0x03B9AF10 LDR X9, [X9 + 0xC8]
	0x03B9AF14 ADD X9, X9, X10, 0x3, LSL

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x849000
	007 Move X20, 0x581000
	008 Move W8, [X21+3072]
	009 Move X20, [X20+3576]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {53}
	015 Move X0, 0x5C3000
	016 Move X0, [X0+2232]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C3000
	019 Move X0, [X0+2240]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C3000
	022 Move X0, [X0+2248]
	023 Call 0x1C17CF4
	024 Move X0, 0x581000
	025 Move X0, [X0+3568]
	026 Call 0x1C17CF4
	027 Move X0, 0x581000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move X0, 0x5C3000
	031 Move X0, [X0+2256]
	032 Call 0x1C17CF4
	033 Move X0, 0x5C3000
	034 Move X0, [X0+2264]
	035 Call 0x1C17CF4
	036 Move X0, 0x55A000
	037 Move X0, [X0+2648]
	038 Call 0x1C17CF4
	039 Move X0, 0x55A000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x562000
	043 Move X0, [X0+3168]
	044 Call 0x1C17CF4
	045 Move X0, 0x55A000
	046 Move X0, [X0+1728]
	047 Call 0x1C17CF4
	048 Move X0, 0x581000
	049 Move X0, [X0+1448]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+3072], W8
	053 Move X0, [X20]
	054 Move [X31], X31
	055 Move X21, 0x55A000
	056 Move W8, [X0+224]
	057 Move X21, [X21+1432]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X31
	062 Call EventSystem.get_current
	063 Move X8, [X21]
	064 Move [X31+8], X0
	065 Move X20, X0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X20
	072 Move X1, X31
	073 Move X2, X31
	074 Call Object.op_Equality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {109}
	079 Move X8, 0x5C3000
	080 Move X8, [X8+2232]
	081 Add X0, X31, 8
	082 Move X1, [X8]
	083 Call 0x2960A30, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {112}
	088 Move X0, [X31+8]
	089 Compare X0, 0
	090 JumpIfEqual {196}
	091 Move X8, 0x5C3000
	092 Move X8, [X8+2240]
	093 Add X1, X31, 0
	094 Move X2, [X8]
	095 Call 0x21A5990, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {109}
	100 Move X0, [X21]
	101 Move X20, [X31]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X31
	108 Call Object.Destroy, X0
	109 Move X0, [X31+8]
	110 Compare X0, 0
	111 JumpIfNotEqual {168}
	112 Move X8, 0x562000
	113 Move X8, [X8+3168]
	114 Move W1, 1
	115 Move X0, [X8]
	116 Call 0x1C17D6C
	117 Move X8, 0x55A000
	118 Move X8, [X8+1728]
	119 Move X9, 0x581000
	120 Move X20, X0
	121 Move X8, [X8]
	122 Move X9, [X9+3568]
	123 Move W10, [X8+224]
	124 Move X21, [X9]
	125 Compare W10, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X0, X21
	130 Move X1, X31
	131 Call Type.GetTypeFromHandle, X0
	132 Compare X20, 0
	133 JumpIfEqual {196}
	134 Move X21, X0
	135 Compare X0, 0
	136 JumpIfEqual {143}
	137 Move X8, [X20]
	138 Move X0, X21
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {198}
	143 Move W8, [X20+24]
	144 Compare W8, 0
	145 JumpIfEqual {197}
	146 Move [X20+32], X21
	147 Move X8, 0x55A000
	148 Move X8, [X8+2648]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X8, 0x581000
	152 Move X8, [X8+1448]
	153 Move X2, X20
	154 Move X3, X31
	155 Move X21, X0
	156 Move X1, [X8]
	157 Call GameObject..ctor, X0, X1, X2
	158 Compare X21, 0
	159 JumpIfEqual {196}
	160 Move X8, 0x5C3000
	161 Move X8, [X8+2264]
	162 Move X0, X21
	163 Move X1, [X8]
	164 Call 0x21E62E4, X0
	165 Move [X31+8], X0
	166 Compare X0, 0
	167 JumpIfEqual {196}
	168 Move X8, 0x5C3000
	169 Move X8, [X8+2248]
	170 Add X19, X19, 16
	171 Move X1, X19
	172 Move X2, [X8]
	173 Call 0x21A5990, X0, X1
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {190}
	178 Move X0, [X31+8]
	179 Compare X0, 0
	180 JumpIfEqual {196}
	181 Move X1, X31
	182 Call Component.get_gameObject, X0
	183 Compare X0, 0
	184 JumpIfEqual {196}
	185 Move X8, 0x5C3000
	186 Move X8, [X8+2256]
	187 Move X1, [X8]
	188 Call 0x21E61FC, X0
	189 Move [X19], X0
	190 Move X20, [X31+32]
	191 Move X19, [X31+40]
	192 Move X30, [X31+16]
	193 Move X21, [X31+24]
	194 Add X31, X31, 48
	195 Return 
	196 Call 0x1C17F20
	197 Call 0x1C17F28
	198 Call 0x1C17F44
	199 Move X1, X31
	200 Call 0x1C17DEC

Method: System.Boolean TryGetUIModel(out UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel model)

Disassembly:
	0x03B9B1D4 LDR X27, [X27 + 0x1C8]
	0x03B9B1D8 LDR X0, [X27]
	0x03B9B1DC LDR W8, [X0 + 0xE0]
	0x03B9B1E0 CBNZ W8, 0x3B9B1EC
	0x03B9B1E4 BL 0x1C16DFC
	0x03B9B1E8 LDR X0, [X27]
	0x03B9B1EC LDR X8, [X0 + 0xB8]
	0x03B9B1F0 LDR X0, [X8 + 0x18]
	0x03B9B1F4 CBZ X0, 0x3B9B698
	0x03B9B1F8 ADRP X8, 0x5C1000
	0x03B9B1FC LDR X8, [X8 + 0x918]
	0x03B9B200 ADD X2, X31, 0x1E8
	0x03B9B204 MOV X1, X20
	0x03B9B208 LDR X3, [X8]
	0x03B9B20C BL 0x2AA6B2C
	0x03B9B210 TBZ X0, 0x0, 0x3B9B354
	0x03B9B214 LDR X0, [X29]
	0x03B9B218 LDR X25, [X31 + 0x1E8]
	0x03B9B21C LDR W8, [X0 + 0xE0]
	0x03B9B220 CBNZ W8, 0x3B9B228
	0x03B9B224 BL 0x1C16DFC
	0x03B9B228 MOV X0, X25
	0x03B9B22C MOV X1, X31
	0x03B9B230 MOV X2, X31
	0x03B9B234 BL 0x3C354F8
	0x03B9B238 TBZ X0, 0x0, 0x3B9B354
	0x03B9B23C LDR X0, [X29]
	0x03B9B240 LDR X25, [X31 + 0x1E8]
	0x03B9B244 LDR W8, [X0 + 0xE0]
	0x03B9B248 CBNZ W8, 0x3B9B250
	0x03B9B24C BL 0x1C16DFC
	0x03B9B250 MOV X0, X25
	0x03B9B254 MOV X1, X19
	0x03B9B258 MOV X2, X31
	0x03B9B25C BL 0x3C354F8
	0x03B9B260 TBZ X0, 0x0, 0x3B9B354
	0x03B9B264 LDR X0, [X31 + 0x1E8]
	0x03B9B268 CBZ X0, 0x3B9B698
	0x03B9B26C BL 0x3B9AE18
	0x03B9B270 CBZ X0, 0x3B9B698
	0x03B9B274 MOV X1, X31
	0x03B9B278 BL 0x3E24BA4
	0x03B9B27C MOV X25, X0
	0x03B9B280 MOV X0, X19
	0x03B9B284 BL 0x3B9AE18
	0x03B9B288 CBZ X0, 0x3B9B698
	0x03B9B28C MOV X1, X31
	0x03B9B290 BL 0x3E24BA4
	0x03B9B294 LDR X8, [X29]
	0x03B9B298 MOV X26, X0
	0x03B9B29C LDR W9, [X8 + 0xE0]
	0x03B9B2A0 CBNZ W9, 0x3B9B2AC
	0x03B9B2A4 MOV X0, X8
	0x03B9B2A8 BL 0x1C16DFC
	0x03B9B2AC MOV X0, X25
	0x03B9B2B0 MOV X1, X26
	0x03B9B2B4 MOV X2, X31
	0x03B9B2B8 BL 0x3C354F8
	0x03B9B2BC TBNZ X0, 0x0, 0x3B9B658
	0x03B9B2C0 LDR X0, [X31 + 0x1E8]
	0x03B9B2C4 CBZ X0, 0x3B9B698
	0x03B9B2C8 BL 0x3B9AE18
	0x03B9B2CC CBZ X0, 0x3B9B698
	0x03B9B2D0 MOV X1, X31
	0x03B9B2D4 BL 0x3E24BA4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x848000
	007 Move X21, 0x559000
	008 Move W8, [X22+3073]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x559000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C1000
	020 Move X0, [X0+600]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3073], W8
	024 Move X0, [X21]
	025 Move X21, [X20+16]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {48}
	038 Move X0, [X20+16]
	039 Compare X0, 0
	040 JumpIfEqual {81}
	041 Move X1, [X20+32]
	042 Move X2, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X20, 0x5C1000
	049 Move X20, [X20+600]
	050 Move X0, [X20]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X21, 0x848000
	056 Move W8, [X21+2477]
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x5C1000
	060 Move X0, [X0+600]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+2477], W8
	064 Move X0, [X20]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X20]
	070 Move X1, [X0+184]
	071 Move W2, 344
	072 Move X0, X19
	073 Call 0x3EB2B30
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move W0, W31
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F20

Method: System.Boolean IsOverUIGameObject()

Disassembly:
	0x03B9B3F0 MOV X0, X22
	0x03B9B3F4 MOV X1, X31
	0x03B9B3F8 BL 0x3BB4FC8
	0x03B9B3FC LDR X0, [X27]
	0x03B9B400 LDR W8, [X0 + 0xE0]
	0x03B9B404 CBNZ W8, 0x3B9B410
	0x03B9B408 BL 0x1C16DFC
	0x03B9B40C LDR X0, [X27]
	0x03B9B410 LDR X8, [X0 + 0xB8]
	0x03B9B414 LDR X0, [X8 + 0x20]
	0x03B9B418 CBZ X0, 0x3B9B698
	0x03B9B41C ADRP X22, 0x5C1000
	0x03B9B420 LDR X22, [X22 + 0x920]
	0x03B9B424 MOV X1, X19
	0x03B9B428 LDR X2, [X22]
	0x03B9B42C BL 0x2AA5018
	0x03B9B430 CBZ X0, 0x3B9B698
	0x03B9B434 ADRP X8, 0x5C1000
	0x03B9B438 LDR X8, [X8 + 0x938]
	0x03B9B43C MOV X1, X20
	0x03B9B440 LDR X2, [X8]
	0x03B9B444 BL 0x2DBE4B0
	0x03B9B448 TBNZ X0, 0x0, 0x3B9B500
	0x03B9B44C LDR X0, [X27]
	0x03B9B450 LDR W8, [X0 + 0xE0]
	0x03B9B454 CBNZ W8, 0x3B9B460
	0x03B9B458 BL 0x1C16DFC
	0x03B9B45C LDR X0, [X27]
	0x03B9B460 LDR X8, [X0 + 0xB8]
	0x03B9B464 LDR X0, [X8 + 0x20]
	0x03B9B468 CBZ X0, 0x3B9B698
	0x03B9B46C LDR X2, [X22]
	0x03B9B470 MOV X1, X19
	0x03B9B474 BL 0x2AA5018
	0x03B9B478 CBZ X0, 0x3B9B698
	0x03B9B47C ADRP X8, 0x5C1000
	0x03B9B480 LDR X8, [X8 + 0x930]
	0x03B9B484 MOV X1, X20
	0x03B9B488 LDR X2, [X8]
	0x03B9B48C BL 0x2DBEF30
	0x03B9B490 LDR X0, [X28]
	0x03B9B494 LDR X22, [X19 + 0x60]
	0x03B9B498 LDR W8, [X0 + 0xE0]
	0x03B9B49C CBNZ W8, 0x3B9B4A4
	0x03B9B4A0 BL 0x1C16DFC
	0x03B9B4A4 ADD X0, X31, 0x88
	0x03B9B4A8 BL 0x3B9C860
	0x03B9B4AC LDR V3, [X31 + 0x150]
	0x03B9B4B0 LDR V4, [X31 + 0x154]
	0x03B9B4B4 LDR V5, [X31 + 0x158]
	0x03B9B4B8 LDR V6, [X31 + 0x15C]
	0x03B9B4BC ADD X0, X31, 0x38
	0x03B9B4C0 MOV X1, X31
	0x03B9B4C4 STP X31, X31, [X31 + 0x38]
	0x03B9B4C8 STR W31, [X31 + 0x50]
	0x03B9B4CC STR X31, [X31 + 0x48]
	0x03B9B4D0 BL 0x3C3DB6C
	0x03B9B4D4 CBZ X22, 0x3B9B698
	0x03B9B4D8 LDUR V0, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+352], X29
	003 Move [X31+368], X30
	004 Move [X31+376], X21
	005 Move [X31+384], X20
	006 Move [X31+392], X19
	007 Move X21, 0x848000
	008 Move X20, 0x559000
	009 Move W8, [X21+3074]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x559000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C1000
	020 Move X0, [X0+600]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3074], W8
	024 Add X0, X31, 8
	025 Move W2, 344
	026 Move W1, W31
	027 Call 0x3EB2B10
	028 Move X0, [X20]
	029 Move X20, [X19+16]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Inequality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {65}
	042 Add X1, X31, 8
	043 Move X0, X19
	044 Call RegisteredUIInteractorCache.TryGetUIModel, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {65}
	049 Move X8, 0x5C1000
	050 Move X8, [X8+600]
	051 Move X19, [X19+16]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Compare X19, 0
	058 JumpIfEqual {74}
	059 Move X8, [X19]
	060 Move W1, [X31+168]
	061 Move X0, X19
	062 Move X9, [X8+632]
	063 Move X2, [X8+640]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W0, W31
	066 Move X20, [X31+384]
	067 Move X19, [X31+392]
	068 Move X30, [X31+368]
	069 Move X21, [X31+376]
	070 Move X29, [X31+352]
	071 And W0, W0, 1
	072 Add X31, X31, 400
	073 Return X0
	074 Call 0x1C17F20

