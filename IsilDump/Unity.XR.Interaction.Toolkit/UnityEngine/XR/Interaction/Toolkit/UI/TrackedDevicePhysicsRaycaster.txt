Type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDevicePhysicsRaycaster

Method: UnityEngine.QueryTriggerInteraction get_raycastTriggerInteraction()

Disassembly:
	0x03BA0B14 LDRB W8, [X19 + 0xC3C]
	0x03BA0B18 MOV X20, X0

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_raycastTriggerInteraction(UnityEngine.QueryTriggerInteraction value)

Disassembly:
	0x03BA0B1C TBNZ X8, 0x0, 0x3BA0B4C
	0x03BA0B20 ADRP X0, 0x5A9000

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: UnityEngine.LayerMask get_eventMask()

Disassembly:
	0x03BA0B24 LDR X0, [X0 + 0x430]
	0x03BA0B28 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_eventMask(UnityEngine.LayerMask value)

Disassembly:
	0x03BA0B2C ADRP X0, 0x57B000
	0x03BA0B30 LDR X0, [X0 + 0x9F8]

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: System.Int32 get_maxRayIntersections()

Disassembly:
	0x03BA0B34 BL 0x1C16CF4
	0x03BA0B38 ADRP X0, 0x553000

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_maxRayIntersections(System.Int32 value)

Disassembly:
	0x03BA0B3C LDR X0, [X0 + 0x598]
	0x03BA0B40 BL 0x1C16CF4
	0x03BA0B44 MOVZ W8, 0x1
	0x03BA0B48 STRB W8, [X19 + 0xC3C]
	0x03BA0B4C LDR X8, [X20 + 0x38]
	0x03BA0B50 CBZ X8, 0x3BA0C5C
	0x03BA0B54 ADRP X9, 0x553000
	0x03BA0B58 LDR X9, [X9 + 0x598]
	0x03BA0B5C LDR X19, [X8 + 0x40]
	0x03BA0B60 LDR X0, [X9]
	0x03BA0B64 LDR W9, [X0 + 0xE0]
	0x03BA0B68 CBNZ W9, 0x3BA0B70
	0x03BA0B6C BL 0x1C16DFC
	0x03BA0B70 MOV X0, X19
	0x03BA0B74 MOV X1, X31
	0x03BA0B78 MOV X2, X31
	0x03BA0B7C BL 0x3C3883C
	0x03BA0B80 TBZ X0, 0x0, 0x3BA0B98
	0x03BA0B84 LDP X20, X19, [X31 + 0x20]
	0x03BA0B88 LDP X22, X21, [X31 + 0x10]
	0x03BA0B8C MOV W0, W31
	0x03BA0B90 LDR X30, [X31], #0x30
	0x03BA0B94 RET
	0x03BA0B98 LDR X8, [X20]
	0x03BA0B9C MOV X0, X20
	0x03BA0BA0 LDR X9, [X8 + 0x268]
	0x03BA0BA4 LDR X1, [X8 + 0x270]
	0x03BA0BA8 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x843000
	007 Move X22, 0x554000
	008 Move W8, [X21+3122]
	009 Move X22, [X22+1448]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x554000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3122], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W1, 1
	027 Move W0, W20
	028 Move X2, X31
	029 Call Math.Max, X0, X1
	030 Move [X19+48], W0
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return 

Method: UnityEngine.Camera get_eventCamera()

Disassembly:
	0x03BA0BAC LDR X8, [X20 + 0x100]
	0x03BA0BB0 MOV X20, X0
	0x03BA0BB4 CBZ X8, 0x3BA0BD0
	0x03BA0BB8 LDR X9, [X8 + 0x18]
	0x03BA0BBC LDR X0, [X8 + 0x40]
	0x03BA0BC0 LDR X3, [X8 + 0x28]
	0x03BA0BC4 MOV X1, X19
	0x03BA0BC8 MOV X2, X20
	0x03BA0BCC BLR X9
	0x03BA0BD0 ADRP X21, 0x57B000
	0x03BA0BD4 LDR X21, [X21 + 0x9F8]
	0x03BA0BD8 LDR X0, [X21]
	0x03BA0BDC LDR W8, [X0 + 0xE0]
	0x03BA0BE0 CBNZ W8, 0x3BA0BE8
	0x03BA0BE4 BL 0x1C16DFC
	0x03BA0BE8 ADRP X22, 0x841000
	0x03BA0BEC LDRB W8, [X22 + 0x38F]
	0x03BA0BF0 CBNZ W8, 0x3BA0C08
	0x03BA0BF4 ADRP X0, 0x57B000
	0x03BA0BF8 LDR X0, [X0 + 0x9F8]
	0x03BA0BFC BL 0x1C16CF4
	0x03BA0C00 MOVZ W8, 0x1
	0x03BA0C04 STRB W8, [X22 + 0x38F]
	0x03BA0C08 LDR X0, [X21]
	0x03BA0C0C LDR W8, [X0 + 0xE0]
	0x03BA0C10 CBNZ W8, 0x3BA0C1C
	0x03BA0C14 BL 0x1C16DFC
	0x03BA0C18 LDR X0, [X21]
	0x03BA0C1C ADRP X9, 0x5A9000
	0x03BA0C20 LDR X8, [X0 + 0xB8]
	0x03BA0C24 LDR X9, [X9 + 0x430]
	0x03BA0C28 MOV X0, X19
	0x03BA0C2C MOV X1, X20
	0x03BA0C30 LDR X2, [X8 + 0x60]
	0x03BA0C34 LDR X3, [X9]
	0x03BA0C38 BL 0x21DD088
	0x03BA0C3C CBZ X20, 0x3BA0C5C
	0x03BA0C40 LDR X8, [X20]
	0x03BA0C44 MOV X0, X20
	0x03BA0C48 LDP X20, X19, [X31 + 0x20]
	0x03BA0C4C LDP X22, X21, [X31 + 0x10]
	0x03BA0C50 LDP X2, X1, [X8 + 0x198]
	0x03BA0C54 LDR X30, [X31], #0x30
	0x03BA0C58 BR X2
	0x03BA0C5C BL 0x1C16F20
	0x03BA0C60 RET
	0x03BA0C64 STP X30, X21, [X31 - 0x20]!
	0x03BA0C68 STP X20, X19, [X31 + 0x10]
	0x03BA0C6C ADRP X20, 0x842000
	0x03BA0C70 LDRB W8, [X20 + 0xC3D]
	0x03BA0C74 MOV X19, X0
	0x03BA0C78 TBNZ X8, 0x0, 0x3BA0C90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x843000
	006 Move X21, 0x554000
	007 Move W8, [X20+3123]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x57C000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move X0, 0x554000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3123], W8
	022 Move X0, [X21]
	023 Move X20, [X19+56]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {43}
	036 Move X8, 0x57C000
	037 Move X8, [X8+712]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move X20, X0
	042 Move [X19+56], X0
	043 Move X20, [X19+56]
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {63}
	057 Move X0, [X19+56]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X0, X31
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Call Camera.get_main
	069 Return X0

Method: System.Void SetEventCamera(UnityEngine.Camera newEventCamera)

Disassembly:
	0x03BA0C7C ADRP X0, 0x553000
	0x03BA0C80 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void Raycast(UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03BA0C84 BL 0x1C16CF4
	0x03BA0C88 MOVZ W8, 0x1
	0x03BA0C8C STRB W8, [X20 + 0xC3D]
	0x03BA0C90 MOV X0, X19
	0x03BA0C94 MOV X1, X31
	0x03BA0C98 BL 0x3E55170
	0x03BA0C9C LDR X8, [X19 + 0x38]
	0x03BA0CA0 CBZ X8, 0x3BA0D14
	0x03BA0CA4 ADRP X9, 0x553000
	0x03BA0CA8 LDR X9, [X9 + 0x598]
	0x03BA0CAC LDR X20, [X8 + 0x40]
	0x03BA0CB0 LDR X0, [X9]
	0x03BA0CB4 LDR W9, [X0 + 0xE0]
	0x03BA0CB8 CBNZ W9, 0x3BA0CC0
	0x03BA0CBC BL 0x1C16DFC
	0x03BA0CC0 MOV X0, X20
	0x03BA0CC4 MOV X1, X31
	0x03BA0CC8 MOV X2, X31
	0x03BA0CCC BL 0x3C3883C
	0x03BA0CD0 LDR X21, [X19 + 0x38]
	0x03BA0CD4 TBZ X0, 0x0, 0x3BA0CE0
	0x03BA0CD8 CBZ X21, 0x3BA0D14
	0x03BA0CDC LDR X20, [X21 + 0x30]
	0x03BA0CE0 LDR X8, [X19]
	0x03BA0CE4 MOV X0, X19
	0x03BA0CE8 LDR X9, [X8 + 0x268]
	0x03BA0CEC LDR X1, [X8 + 0x270]
	0x03BA0CF0 BLR X9
	0x03BA0CF4 CBZ X21, 0x3BA0D14
	0x03BA0CF8 MOV X1, X20
	0x03BA0CFC LDP X20, X19, [X31 + 0x10]
	0x03BA0D00 MOV X2, X0
	0x03BA0D04 MOV X0, X21
	0x03BA0D08 MOV X3, X31
	0x03BA0D0C LDP X30, X21, [X31], #0x20
	0x03BA0D10 B 0x3E4EC58
	0x03BA0D14 BL 0x1C16F20
	0x03BA0D18 SUB X31, X31, 0xA0
	0x03BA0D1C STR X30, [X31 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x843000
	007 Move W8, [X22+3124]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5BD000
	016 Move X0, [X0+2312]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3124], W8
	020 Compare X20, 0
	021 JumpIfEqual {33}
	022 Move X8, 0x5BD000
	023 Move X8, [X8+2312]
	024 Move X9, [X20]
	025 Move X8, [X8]
	026 Move W11, [X9+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 
	039 Move X0, X21
	040 Move X1, X20
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]

Method: System.Void Awake()

Disassembly:
	0x03BA0F24 ADRP X8, 0x5BC000
	0x03BA0F28 LDR X8, [X8 + 0xB88]
	0x03BA0F2C LDR X1, [X8]
	0x03BA0F30 BL 0x2A1352C
	0x03BA0F34 CBZ X0, 0x3BA0FF4
	0x03BA0F38 ADRP X8, 0x5BC000
	0x03BA0F3C LDR X8, [X8 + 0xBC8]
	0x03BA0F40 LDR X1, [X8]
	0x03BA0F44 ADD X8, X31, 0x0
	0x03BA0F48 BL 0x274B2CC
	0x03BA0F4C LDR V0, [X31]
	0x03BA0F50 LDR X8, [X31 + 0x10]
	0x03BA0F54 ADRP X22, 0x5BC000
	0x03BA0F58 STR V0, [X31 + 0x2]
	0x03BA0F5C STR X8, [X31 + 0x30]
	0x03BA0F60 LDR X22, [X22 + 0xBB0]
	0x03BA0F64 LDR X1, [X22]
	0x03BA0F68 ADD X0, X31, 0x20
	0x03BA0F6C BL 0x2BF5F4C
	0x03BA0F70 TBZ X0, 0x0, 0x3BA0FC0
	0x03BA0F74 LDR X24, [X31 + 0x30]
	0x03BA0F78 CBZ X24, 0x3BA0F64
	0x03BA0F7C LDR X0, [X23]
	0x03BA0F80 LDR X21, [X24 + 0x20]
	0x03BA0F84 LDR W8, [X0 + 0xE0]
	0x03BA0F88 CBNZ W8, 0x3BA0F90
	0x03BA0F8C BL 0x1C16DFC
	0x03BA0F90 MOV X0, X21
	0x03BA0F94 MOV X1, X31
	0x03BA0F98 MOV X2, X31
	0x03BA0F9C BL 0x3C354F8
	0x03BA0FA0 TBZ X0, 0x0, 0x3BA0F64
	0x03BA0FA4 ADRP X8, 0x5BC000
	0x03BA0FA8 LDR X19, [X24 + 0x20]
	0x03BA0FAC LDR X8, [X8 + 0xBA0]
	0x03BA0FB0 ADD X0, X31, 0x20
	0x03BA0FB4 LDR X1, [X8]
	0x03BA0FB8 BL 0x2BF5F48
	0x03BA0FBC B 0x3BA0FD8
	0x03BA0FC0 ADRP X8, 0x5BC000
	0x03BA0FC4 LDR X8, [X8 + 0xBA0]
	0x03BA0FC8 ADD X0, X31, 0x20
	0x03BA0FCC LDR X1, [X8]
	0x03BA0FD0 BL 0x2BF5F48
	0x03BA0FD4 MOV X19, X31
	0x03BA0FD8 MOV X0, X19
	0x03BA0FDC LDP X20, X19, [X31 + 0x90]
	0x03BA0FE0 LDP X22, X21, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x843000
	006 Move W8, [X20+3125]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x5BD000
	013 Move X0, [X0+2888]
	014 Call 0x1C17CF4
	015 Move X0, 0x55A000
	016 Move X0, [X0+1160]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3125], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call UIBehaviour.Awake, X0
	023 Move X0, X19
	024 Move X1, X31
	025 Call Component.get_gameObject, X0
	026 Compare X0, 0
	027 JumpIfEqual {56}
	028 Move X20, 0x55A000
	029 Move X21, 0x5BD000
	030 Move X20, [X20+1160]
	031 Move X21, [X21+2888]
	032 Move X1, X31
	033 Call GameObject.get_scene, X0
	034 And X0, X0, 0
	035 Move X1, X31
	036 Call PhysicsSceneExtensions.GetPhysicsScene, X0
	037 Move [X19+104], W0
	038 Move W1, [X19+48]
	039 Move X0, [X20]
	040 Call 0x1C17D6C
	041 Move [X19+72], X0
	042 Move X20, X0
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X21, X0
	047 Call Object..ctor, X0
	048 Move [X21+24], X20
	049 Move [X21+16], W31
	050 Move [X19+88], X21
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void PerformRaycasts(UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceEventData eventData, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03BA0D20 STP X24, X23, [X31 + 0x70]
	0x03BA0D24 STP X22, X21, [X31 + 0x80]
	0x03BA0D28 STP X20, X19, [X31 + 0x90]
	0x03BA0D2C ADRP X21, 0x842000
	0x03BA0D30 LDRB W8, [X21 + 0xC3E]
	0x03BA0D34 MOV W19, W1
	0x03BA0D38 MOV X20, X0
	0x03BA0D3C TBNZ X8, 0x0, 0x3BA0DE4
	0x03BA0D40 ADRP X0, 0x5BC000
	0x03BA0D44 LDR X0, [X0 + 0xB78]
	0x03BA0D48 BL 0x1C16CF4
	0x03BA0D4C ADRP X0, 0x5BC000
	0x03BA0D50 LDR X0, [X0 + 0xB80]
	0x03BA0D54 BL 0x1C16CF4
	0x03BA0D58 ADRP X0, 0x5BC000
	0x03BA0D5C LDR X0, [X0 + 0xB88]
	0x03BA0D60 BL 0x1C16CF4
	0x03BA0D64 ADRP X0, 0x5BC000
	0x03BA0D68 LDR X0, [X0 + 0xB90]
	0x03BA0D6C BL 0x1C16CF4
	0x03BA0D70 ADRP X0, 0x5BC000
	0x03BA0D74 LDR X0, [X0 + 0xB98]
	0x03BA0D78 BL 0x1C16CF4
	0x03BA0D7C ADRP X0, 0x5BC000
	0x03BA0D80 LDR X0, [X0 + 0xBA0]
	0x03BA0D84 BL 0x1C16CF4
	0x03BA0D88 ADRP X0, 0x5BC000
	0x03BA0D8C LDR X0, [X0 + 0xBA8]
	0x03BA0D90 BL 0x1C16CF4
	0x03BA0D94 ADRP X0, 0x5BC000
	0x03BA0D98 LDR X0, [X0 + 0xBB0]
	0x03BA0D9C BL 0x1C16CF4
	0x03BA0DA0 ADRP X0, 0x5BC000
	0x03BA0DA4 LDR X0, [X0 + 0xBB8]
	0x03BA0DA8 BL 0x1C16CF4
	0x03BA0DAC ADRP X0, 0x5BC000
	0x03BA0DB0 LDR X0, [X0 + 0xBC0]
	0x03BA0DB4 BL 0x1C16CF4
	0x03BA0DB8 ADRP X0, 0x553000
	0x03BA0DBC LDR X0, [X0 + 0x598]
	0x03BA0DC0 BL 0x1C16CF4
	0x03BA0DC4 ADRP X0, 0x5BC000
	0x03BA0DC8 LDR X0, [X0 + 0xBC8]
	0x03BA0DCC BL 0x1C16CF4
	0x03BA0DD0 ADRP X0, 0x5BC000
	0x03BA0DD4 LDR X0, [X0 + 0xBD0]
	0x03BA0DD8 BL 0x1C16CF4
	0x03BA0DDC MOVZ W8, 0x1
	0x03BA0DE0 STRB W8, [X21 + 0xC3E]
	0x03BA0DE4 STP X31, X31, [X31 + 0x40]
	0x03BA0DE8 STR X31, [X31 + 0x50]
	0x03BA0DEC STP X31, X31, [X31 + 0x20]
	0x03BA0DF0 STR X31, [X31 + 0x30]
	0x03BA0DF4 STR X31, [X31 + 0x68]
	0x03BA0DF8 STR X31, [X31 + 0x18]
	0x03BA0DFC TBNZ X19, 0x1F, 0x3BA0E30
	0x03BA0E00 LDR X0, [X20 + 0x90]
	0x03BA0E04 CBZ X0, 0x3BA0FF4
	0x03BA0E08 ADRP X8, 0x5BC000
	0x03BA0E0C LDR X8, [X8 + 0xB78]
	0x03BA0E10 ADD X2, X31, 0x68
	0x03BA0E14 MOV W1, W19
	0x03BA0E18 LDR X3, [X8]
	0x03BA0E1C BL 0x2A150AC
	0x03BA0E20 TBZ X0, 0x0, 0x3BA0ED4
	0x03BA0E24 LDR X8, [X31 + 0x68]
	0x03BA0E28 CBNZ X8, 0x3BA0F00
	0x03BA0E2C B 0x3BA0FD4
	0x03BA0E30 LDR X0, [X20 + 0x90]
	0x03BA0E34 CBZ X0, 0x3BA0FF4
	0x03BA0E38 ADRP X8, 0x5BC000
	0x03BA0E3C LDR X8, [X8 + 0xB90]
	0x03BA0E40 LDR X1, [X8]
	0x03BA0E44 BL 0x2A1352C
	0x03BA0E48 CBZ X0, 0x3BA0FF4
	0x03BA0E4C ADRP X8, 0x5BC000
	0x03BA0E50 LDR X8, [X8 + 0xBD0]
	0x03BA0E54 LDR X1, [X8]
	0x03BA0E58 ADD X8, X31, 0x0
	0x03BA0E5C BL 0x274B2CC
	0x03BA0E60 LDR V0, [X31]
	0x03BA0E64 LDR X8, [X31 + 0x10]
	0x03BA0E68 ADRP X22, 0x5BC000
	0x03BA0E6C LDR X22, [X22 + 0xBA8]
	0x03BA0E70 STR V0, [X31 + 0x4]
	0x03BA0E74 STR X8, [X31 + 0x50]
	0x03BA0E78 ADRP X23, 0x553000
	0x03BA0E7C LDR X23, [X23 + 0x598]
	0x03BA0E80 LDR X1, [X22]
	0x03BA0E84 ADD X0, X31, 0x40
	0x03BA0E88 BL 0x2BF5F4C
	0x03BA0E8C TBZ X0, 0x0, 0x3BA0F08
	0x03BA0E90 LDR X24, [X31 + 0x50]
	0x03BA0E94 CBZ X24, 0x3BA0E80
	0x03BA0E98 LDR X0, [X23]
	0x03BA0E9C LDR X21, [X24 + 0x20]
	0x03BA0EA0 LDR W8, [X0 + 0xE0]
	0x03BA0EA4 CBNZ W8, 0x3BA0EAC
	0x03BA0EA8 BL 0x1C16DFC
	0x03BA0EAC MOV X0, X21
	0x03BA0EB0 MOV X1, X31
	0x03BA0EB4 MOV X2, X31
	0x03BA0EB8 BL 0x3C354F8
	0x03BA0EBC TBZ X0, 0x0, 0x3BA0E80
	0x03BA0EC0 ADRP X8, 0x5BC000
	0x03BA0EC4 LDR X19, [X24 + 0x20]
	0x03BA0EC8 LDR X8, [X8 + 0xB98]
	0x03BA0ECC ADD X0, X31, 0x40
	0x03BA0ED0 B 0x3BA0FB4
	0x03BA0ED4 LDR X0, [X20 + 0x88]
	0x03BA0ED8 CBZ X0, 0x3BA0FF4
	0x03BA0EDC ADRP X8, 0x5BC000
	0x03BA0EE0 LDR X8, [X8 + 0xB80]
	0x03BA0EE4 ADD X2, X31, 0x18
	0x03BA0EE8 MOV W1, W19
	0x03BA0EEC LDR X3, [X8]
	0x03BA0EF0 BL 0x2A150AC
	0x03BA0EF4 TBZ X0, 0x0, 0x3BA0FD4
	0x03BA0EF8 LDR X8, [X31 + 0x18]
	0x03BA0EFC CBZ X8, 0x3BA0FD4
	0x03BA0F00 LDR X19, [X8 + 0x20]
	0x03BA0F04 B 0x3BA0FD8
	0x03BA0F08 ADRP X8, 0x5BC000
	0x03BA0F0C LDR X8, [X8 + 0xB98]
	0x03BA0F10 ADD X0, X31, 0x40
	0x03BA0F14 LDR X1, [X8]
	0x03BA0F18 BL 0x2BF5F48
	0x03BA0F1C LDR X0, [X20 + 0x88]
	0x03BA0F20 CBZ X0, 0x3BA0FF4

ISIL:
	001 Move [X31-128], D13
	002 Move [X31-120], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X23, 0x843000
	017 Move X22, 0x554000
	018 Move W8, [X23+3126]
	019 Move X22, [X22+1432]
	020 Move X21, X2
	021 Move X20, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0x554000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x558000
	031 Move X0, [X0+2424]
	032 Call 0x1C17CF4
	033 Move X0, 0x558000
	034 Move X0, [X0+2432]
	035 Call 0x1C17CF4
	036 Move X0, 0x554000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x5BD000
	040 Move X0, [X0+2880]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+3126], W8
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X9, [X8+600]
	047 Move X1, [X8+608]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X22]
	050 Move X22, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X22
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {82}
	064 Move W8, [X19+64]
	065 Compare W8, 0
	066 JumpIfNotEqual {137}
	067 Move X8, 0x554000
	068 Move X8, [X8+2600]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X8, 0x5BD000
	075 Move X8, [X8+2880]
	076 Move X1, X19
	077 Move X2, X31
	078 Move X0, [X8]
	079 Call Debug.LogWarning, X0, X1
	080 Move W8, 1
	081 Move [X19+64], W8
	082 Compare X20, 0
	083 JumpIfEqual {153}
	084 Move W0, [X20+396]
	085 Move X23, [X20+384]
	086 Move X1, X31
	087 Call LayerMask.op_Implicit, X0
	088 Move W8, [X19+44]
	089 Move W24, W0
	090 Move X1, X31
	091 Move X0, X8
	092 Call LayerMask.op_Implicit, X0
	093 Compare X23, 0
	094 JumpIfEqual {153}
	095 Move W8, [X23+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X26, 0x558000
	098 Move X26, [X26+2432]
	099 And W24, W0, W24
	100 Move W25, 1
	101 Move X2, [X26]
	102 Subtract W1, W25, 1
	103 Move X0, X23
	104 Call List`1<Vector3>.get_Item, X0, X1
	105 Move X2, [X26]
	106 Move X0, X23
	107 Move W1, W25
	108 Move V8, V0
	109 Move V9, V1
	110 Move V10, V2
	111 Call List`1<Vector3>.get_Item, X0, X1
	112 Move W0, W24
	113 Move X1, X31
	114 Move V11, V0
	115 Move V12, V1
	116 Move V13, V2
	117 Call LayerMask.op_Implicit, X0
	118 And X1, X0, 0
	119 Move X0, X19
	120 Move V0, V8
	121 Move V1, V9
	122 Move V2, V10
	123 Move V3, V11
	124 Move V4, V12
	125 Move V5, V13
	126 Move X2, X22
	127 Move X3, X21
	128 Call TrackedDevicePhysicsRaycaster.PerformRaycast, X0, X1, X2, X3, X4, X5
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {136}
	133 Move W8, [X23+24]
	134 Add W25, W25, 1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move [X20+392], W25
	137 Move X20, [X31+112]
	138 Move X19, [X31+120]
	139 Move X22, [X31+96]
	140 Move X21, [X31+104]
	141 Move X24, [X31+80]
	142 Move X23, [X31+88]
	143 Move X26, [X31+64]
	144 Move X25, [X31+72]
	145 Move X30, [X31+48]
	146 Move D9, [X31+32]
	147 Move D8, [X31+40]
	148 Move D11, [X31+16]
	149 Move D10, [X31+24]
	150 Move D13, [X31+128]
	151 Move D12, [X31+136]
	152 Return 
	153 Call 0x1C17F20

Method: System.Boolean PerformRaycast(UnityEngine.Vector3 from, UnityEngine.Vector3 to, UnityEngine.LayerMask layerMask, UnityEngine.Camera currentEventCamera, System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> resultAppendList)

Disassembly:
	0x03BA1014 MOV X0, X21
	0x03BA1018 BL 0x3EB1AD0
	0x03BA101C LDR X22, [X0]
	0x03BA1020 BL 0x3EB1AE0
	0x03BA1024 ADRP X8, 0x5BB000
	0x03BA1028 LDR X8, [X8 + 0xBA0]
	0x03BA102C ADD X0, X31, 0x20
	0x03BA1030 LDR X1, [X8]
	0x03BA1034 BL 0x2BF5F48
	0x03BA1038 CBZ X22, 0x3BA0E00
	0x03BA103C B 0x3BA10A0
	0x03BA1040 MOV X22, X31
	0x03BA1044 B 0x3BA104C
	0x03BA1048 MOV X21, X0
	0x03BA104C ADRP X8, 0x5BB000
	0x03BA1050 LDR X8, [X8 + 0xBA0]
	0x03BA1054 LDR X1, [X8]
	0x03BA1058 ADD X0, X31, 0x20
	0x03BA105C BL 0x2BF5F48
	0x03BA1060 CBZ X22, 0x3BA10CC
	0x03BA1064 MOV X0, X22
	0x03BA1068 BL 0x1C16F18
	0x03BA106C MOV X21, X0
	0x03BA1070 CMP W1, 0x1
	0x03BA1074 B.NE 0x3BA10A8
	0x03BA1078 MOV X0, X21
	0x03BA107C BL 0x3EB1AD0
	0x03BA1080 LDR X22, [X0]
	0x03BA1084 BL 0x3EB1AE0
	0x03BA1088 ADRP X8, 0x5BB000
	0x03BA108C LDR X8, [X8 + 0xB98]
	0x03BA1090 ADD X0, X31, 0x40
	0x03BA1094 LDR X1, [X8]
	0x03BA1098 BL 0x2BF5F48
	0x03BA109C CBZ X22, 0x3BA0F1C
	0x03BA10A0 MOV X0, X22
	0x03BA10A4 BL 0x1C16F18
	0x03BA10A8 MOV X22, X31
	0x03BA10AC B 0x3BA10B4
	0x03BA10B0 MOV X21, X0
	0x03BA10B4 ADRP X8, 0x5BB000
	0x03BA10B8 LDR X8, [X8 + 0xB98]
	0x03BA10BC LDR X1, [X8]
	0x03BA10C0 ADD X0, X31, 0x40
	0x03BA10C4 BL 0x2BF5F48
	0x03BA10C8 CBNZ X22, 0x3BA10D4
	0x03BA10CC MOV X0, X21
	0x03BA10D0 BL 0x1D2C690
	0x03BA10D4 MOV X0, X22
	0x03BA10D8 BL 0x1C16F18
	0x03BA10DC BL 0x1990590
	0x03BA10E0 STR X30, [X31 - 0x30]!
	0x03BA10E4 STP X22, X21, [X31 + 0x10]
	0x03BA10E8 STP X20, X19, [X31 + 0x20]
	0x03BA10EC ADRP X22, 0x841000
	0x03BA10F0 ADRP X21, 0x552000
	0x03BA10F4 LDRB W8, [X22 + 0xC3F]
	0x03BA10F8 LDR X21, [X21 + 0x598]
	0x03BA10FC MOV W19, W1
	0x03BA1100 MOV X20, X0
	0x03BA1104 TBNZ X8, 0x0, 0x3BA111C
	0x03BA1108 ADRP X0, 0x552000
	0x03BA110C LDR X0, [X0 + 0x598]
	0x03BA1110 BL 0x1C16CF4
	0x03BA1114 MOVZ W8, 0x1
	0x03BA1118 STRB W8, [X22 + 0xC3F]
	0x03BA111C MOV X0, X20
	0x03BA1120 MOV W1, W19
	0x03BA1124 BL 0x3BA0D18
	0x03BA1128 LDR X8, [X21]
	0x03BA112C MOV X19, X0
	0x03BA1130 LDR W9, [X8 + 0xE0]
	0x03BA1134 CBNZ W9, 0x3BA1140
	0x03BA1138 MOV X0, X8
	0x03BA113C BL 0x1C16DFC
	0x03BA1140 MOV X0, X19
	0x03BA1144 LDP X20, X19, [X31 + 0x20]
	0x03BA1148 LDP X22, X21, [X31 + 0x10]
	0x03BA114C MOV X1, X31
	0x03BA1150 MOV X2, X31
	0x03BA1154 LDR X30, [X31], #0x30
	0x03BA1158 B 0x3C354F8
	0x03BA115C SUB X31, X31, 0x80
	0x03BA1160 STR X30, [X31 + 0x50]
	0x03BA1164 STP X22, X21, [X31 + 0x60]
	0x03BA1168 STP X20, X19, [X31 + 0x70]
	0x03BA116C ADRP X22, 0x841000
	0x03BA1170 LDRB W9, [X22 + 0xC40]
	0x03BA1174 MOV X21, X1
	0x03BA1178 MOV X19, X0
	0x03BA117C MOV X20, X8
	0x03BA1180 TBNZ X9, 0x0, 0x3BA1198
	0x03BA1184 ADRP X0, 0x5A8000
	0x03BA1188 LDR X0, [X0 + 0x328]
	0x03BA118C BL 0x1C16CF4
	0x03BA1190 MOVZ W8, 0x1
	0x03BA1194 STRB W8, [X22 + 0xC40]
	0x03BA1198 CBZ X21, 0x3BA1238
	0x03BA119C LDR X0, [X19 + 0x38]
	0x03BA11A0 CBZ X0, 0x3BA1234
	0x03BA11A4 LDR X2, [X19 + 0x20]
	0x03BA11A8 MOV X1, X21
	0x03BA11AC MOV X3, X31
	0x03BA11B0 BL 0x3E508EC
	0x03BA11B4 LDR X8, [X19 + 0x98]
	0x03BA11B8 CBZ X8, 0x3BA11D4
	0x03BA11BC LDR X2, [X19 + 0x20]
	0x03BA11C0 LDR X9, [X8 + 0x18]
	0x03BA11C4 LDR X0, [X8 + 0x40]
	0x03BA11C8 LDR X3, [X8 + 0x28]
	0x03BA11CC MOV X1, X21
	0x03BA11D0 BLR X9
	0x03BA11D4 LDR X0, [X19 + 0x20]
	0x03BA11D8 ADD X8, X31, 0x0
	0x03BA11DC MOV X1, X31
	0x03BA11E0 BL 0x3E541F8
	0x03BA11E4 ADD X1, X31, 0x0
	0x03BA11E8 MOVZ W2, 0x50
	0x03BA11EC MOV X0, X20
	0x03BA11F0 BL 0x3EB1AC0
	0x03BA11F4 LDR X8, [X19 + 0x20]
	0x03BA11F8 CBZ X8, 0x3BA1234
	0x03BA11FC LDP W2, W9, [X8 + 0x18]
	0x03BA1200 ADD W9, W9, 0x1
	0x03BA1204 CMP W2, 0x1
	0x03BA1208 STP W31, W9, [X8 + 0x18]
	0x03BA120C B.LT 0x3BA1220
	0x03BA1210 LDR X0, [X8 + 0x10]
	0x03BA1214 MOV W1, W31
	0x03BA1218 MOV X3, X31
	0x03BA121C BL 0x339FA34
	0x03BA1220 LDP X20, X19, [X31 + 0x70]
	0x03BA1224 LDP X22, X21, [X31 + 0x60]
	0x03BA1228 LDR X30, [X31 + 0x50]
	0x03BA122C ADD X31, X31, 0x80
	0x03BA1230 RET
	0x03BA1234 BL 0x1C16F20
	0x03BA1238 ADRP X0, 0x557000
	0x03BA123C LDR X0, [X0 + 0x528]
	0x03BA1240 BL 0x1C16D08
	0x03BA1244 BL 0x1C16F10
	0x03BA1248 MOV X19, X0
	0x03BA124C ADRP X0, 0x5A8000
	0x03BA1250 LDR X0, [X0 + 0x348]
	0x03BA1254 BL 0x1C16D08
	0x03BA1258 MOV X1, X0
	0x03BA125C MOV X0, X19
	0x03BA1260 MOV X2, X31
	0x03BA1264 BL 0x330E100
	0x03BA1268 ADRP X0, 0x5BB000
	0x03BA126C LDR X0, [X0 + 0xBD8]
	0x03BA1270 BL 0x1C16D08
	0x03BA1274 MOV X1, X0
	0x03BA1278 MOV X0, X19
	0x03BA127C BL 0x1C16DEC
	0x03BA1280 STP X29, X30, [X31 - 0x30]!
	0x03BA1284 STP X22, X21, [X31 + 0x10]
	0x03BA1288 STP X20, X19, [X31 + 0x20]
	0x03BA128C SUB X31, X31, 0x250
	0x03BA1290 MOVI V0.2D, 0x0
	0x03BA1294 STP V0, V0, [X31 + 0x230]
	0x03BA1298 STP V0, V0, [X31 + 0x210]
	0x03BA129C STP V0, V0, [X31 + 0x1F0]
	0x03BA12A0 STP V0, V0, [X31 + 0x1D0]
	0x03BA12A4 LDRB W8, [X1 + 0x4]
	0x03BA12A8 CBZ W8, 0x3BA14A4
	0x03BA12AC MOV X19, X1
	0x03BA12B0 LDR W1, [X1]
	0x03BA12B4 MOV X20, X0
	0x03BA12B8 BL 0x3BA14BC
	0x03BA12BC CBZ X0, 0x3BA14B8
	0x03BA12C0 LDR X8, [X0]
	0x03BA12C4 MOV X21, X0
	0x03BA12C8 LDP X9, X1, [X8 + 0x178]
	0x03BA12CC BLR X9
	0x03BA12D0 MOV X0, X19
	0x03BA12D4 MOV X1, X21
	0x03BA12D8 MOV X2, X31
	0x03BA12DC BL 0x3B99250
	0x03BA12E0 ADD X8, X31, 0x180
	0x03BA12E4 MOV X0, X20
	0x03BA12E8 MOV X1, X21
	0x03BA12EC BL 0x3BA115C
	0x03BA12F0 ADD X0, X21, 0x50
	0x03BA12F4 ADD X1, X31, 0x180
	0x03BA12F8 MOVZ W2, 0x50
	0x03BA12FC BL 0x3EB1AC0
	0x03BA1300 ADD X1, X19, 0x28
	0x03BA1304 ADD X0, X31, 0x1D0
	0x03BA1308 MOVZ W2, 0x80
	0x03BA130C BL 0x3EB1AC0
	0x03BA1310 ADD X0, X31, 0x1D0
	0x03BA1314 MOV X1, X21
	0x03BA1318 MOV X2, X31
	0x03BA131C STR W31, [X21 + 0x148]
	0x03BA1320 BL 0x3B98C90
	0x03BA1324 LDR W1, [X31 + 0x1D0]
	0x03BA1328 MOV X0, X20
	0x03BA132C MOV X2, X21
	0x03BA1330 BL 0x3BA1590
	0x03BA1334 MOV X0, X20
	0x03BA1338 MOV X1, X21
	0x03BA133C BL 0x3BA1C64
	0x03BA1340 MOV X0, X20
	0x03BA1344 MOV X1, X21
	0x03BA1348 BL 0x3BA24C8
	0x03BA134C MOV X0, X19
	0x03BA1350 MOV X1, X21
	0x03BA1354 MOV X2, X31
	0x03BA1358 BL 0x3B99318
	0x03BA135C FMOV S0, 1
	0x03BA1360 MOVZ W2, 0x1
	0x03BA1364 MOV X0, X20
	0x03BA1368 MOV X1, X21
	0x03BA136C MOVZ W22, 0x1
	0x03BA1370 BL 0x3BA2678
	0x03BA1374 ADD X0, X31, 0x1D0
	0x03BA1378 MOV X1, X21
	0x03BA137C MOV X2, X31
	0x03BA1380 BL 0x3B98CF8
	0x03BA1384 ADD X0, X31, 0x100
	0x03BA1388 ADD X1, X31, 0x1D0
	0x03BA138C MOVZ W2, 0x80
	0x03BA1390 BL 0x3EB1AC0
	0x03BA1394 ADD X1, X31, 0x100
	0x03BA1398 MOV X0, X19
	0x03BA139C MOV X2, X31
	0x03BA13A0 BL 0x3B98ED0
	0x03BA13A4 ADD X1, X19, 0xA8
	0x03BA13A8 ADD X0, X31, 0x1D0
	0x03BA13AC MOVZ W2, 0x80
	0x03BA13B0 BL 0x3EB1AC0
	0x03BA13B4 ADD X0, X31, 0x1D0
	0x03BA13B8 MOV X1, X21
	0x03BA13BC MOV X2, X31
	0x03BA13C0 STR W22, [X21 + 0x148]
	0x03BA13C4 BL 0x3B98C90
	0x03BA13C8 LDR W1, [X31 + 0x1D0]
	0x03BA13CC MOV X0, X20
	0x03BA13D0 MOV X2, X21
	0x03BA13D4 BL 0x3BA1590
	0x03BA13D8 FMOV S0, 1
	0x03BA13DC MOVZ W2, 0x1
	0x03BA13E0 MOV X0, X20
	0x03BA13E4 MOV X1, X21
	0x03BA13E8 BL 0x3BA2678
	0x03BA13EC ADD X0, X31, 0x1D0
	0x03BA13F0 MOV X1, X21
	0x03BA13F4 MOV X2, X31
	0x03BA13F8 BL 0x3B98CF8
	0x03BA13FC ADD X0, X31, 0x80
	0x03BA1400 ADD X1, X31, 0x1D0
	0x03BA1404 MOVZ W2, 0x80
	0x03BA1408 BL 0x3EB1AC0
	0x03BA140C ADD X1, X31, 0x80
	0x03BA1410 MOV X0, X19
	0x03BA1414 MOV X2, X31
	0x03BA1418 BL 0x3B98F64
	0x03BA141C ADD X1, X19, 0x128
	0x03BA1420 ADD X0, X31, 0x1D0
	0x03BA1424 MOVZ W2, 0x80
	0x03BA1428 BL 0x3EB1AC0
	0x03BA142C MOVZ W8, 0x2
	0x03BA1430 ADD X0, X31, 0x1D0
	0x03BA1434 MOV X1, X21
	0x03BA1438 MOV X2, X31
	0x03BA143C STR W8, [X21 + 0x148]
	0x03BA1440 BL 0x3B98C90
	0x03BA1444 LDR W1, [X31 + 0x1D0]
	0x03BA1448 MOV X0, X20
	0x03BA144C MOV X2, X21
	0x03BA1450 BL 0x3BA1590
	0x03BA1454 FMOV S0, 1
	0x03BA1458 MOVZ W2, 0x1
	0x03BA145C MOV X0, X20
	0x03BA1460 MOV X1, X21
	0x03BA1464 BL 0x3BA2678
	0x03BA1468 ADD X0, X31, 0x1D0
	0x03BA146C MOV X1, X21
	0x03BA1470 MOV X2, X31
	0x03BA1474 BL 0x3B98CF8
	0x03BA1478 ADD X0, X31, 0x0
	0x03BA147C ADD X1, X31, 0x1D0
	0x03BA1480 MOVZ W2, 0x80
	0x03BA1484 BL 0x3EB1AC0
	0x03BA1488 ADD X1, X31, 0x0
	0x03BA148C MOV X0, X19
	0x03BA1490 MOV X2, X31
	0x03BA1494 BL 0x3B98FF8
	0x03BA1498 MOV X0, X19
	0x03BA149C MOV X1, X31
	0x03BA14A0 BL 0x3B991E4
	0x03BA14A4 ADD X31, X31, 0x250
	0x03BA14A8 LDP X20, X19, [X31 + 0x20]
	0x03BA14AC LDP X22, X21, [X31 + 0x10]
	0x03BA14B0 LDP X29, X30, [X31], #0x30
	0x03BA14B4 RET
	0x03BA14B8 BL 0x1C16F20
	0x03BA14BC STR X30, [X31 - 0x30]!
	0x03BA14C0 STP X22, X21, [X31 + 0x10]
	0x03BA14C4 STP X20, X19, [X31 + 0x20]
	0x03BA14C8 ADRP X21, 0x841000
	0x03BA14CC LDRB W8, [X21 + 0xC49]
	0x03BA14D0 MOV W19, W1
	0x03BA14D4 MOV X20, X0
	0x03BA14D8 TBNZ X8, 0x0, 0x3BA1508
	0x03BA14DC ADRP X0, 0x5BB000
	0x03BA14E0 LDR X0, [X0 + 0xBE0]
	0x03BA14E4 BL 0x1C16CF4
	0x03BA14E8 ADRP X0, 0x5BB000
	0x03BA14EC LDR X0, [X0 + 0xB80]
	0x03BA14F0 BL 0x1C16CF4
	0x03BA14F4 ADRP X0, 0x5A8000
	0x03BA14F8 LDR X0, [X0 + 0x708]
	0x03BA14FC BL 0x1C16CF4
	0x03BA1500 MOVZ W8, 0x1
	0x03BA1504 STRB W8, [X21 + 0xC49]
	0x03BA1508 STR X31, [X31 + 0x8]
	0x03BA150C LDR X0, [X20 + 0x88]
	0x03BA1510 CBZ X0, 0x3BA158C
	0x03BA1514 ADRP X8, 0x5BB000
	0x03BA1518 LDR X8, [X8 + 0xB80]
	0x03BA151C ADD X2, X31, 0x8
	0x03BA1520 MOV W1, W19
	0x03BA1524 LDR X3, [X8]
	0x03BA1528 BL 0x2A150AC
	0x03BA152C TBNZ X0, 0x0, 0x3BA1578
	0x03BA1530 ADRP X8, 0x5A8000
	0x03BA1534 LDR X22, [X20 + 0x38]
	0x03BA1538 LDR X8, [X8 + 0x708]
	0x03BA153C LDR X0, [X8]
	0x03BA1540 BL 0x1C16F10
	0x03BA1544 MOV X1, X22
	0x03BA1548 MOV X2, X31
	0x03BA154C MOV X21, X0
	0x03BA1550 BL 0x3E4F118
	0x03BA1554 STR X21, [X31 + 0x8]
	0x03BA1558 LDR X0, [X20 + 0x88]
	0x03BA155C CBZ X0, 0x3BA158C
	0x03BA1560 ADRP X8, 0x5BB000
	0x03BA1564 LDR X8, [X8 + 0xBE0]
	0x03BA1568 MOV W1, W19
	0x03BA156C MOV X2, X21
	0x03BA1570 LDR X3, [X8]
	0x03BA1574 BL 0x2A1368C
	0x03BA1578 LDR X0, [X31 + 0x8]
	0x03BA157C LDP X20, X19, [X31 + 0x20]
	0x03BA1580 LDP X22, X21, [X31 + 0x10]
	0x03BA1584 LDR X30, [X31], #0x30
	0x03BA1588 RET
	0x03BA158C BL 0x1C16F20
	0x03BA1590 STR D8, [X31 - 0x50]!
	0x03BA1594 STR X30, [X31 + 0x8]
	0x03BA1598 STP X26, X25, [X31 + 0x10]
	0x03BA159C STP X24, X23, [X31 + 0x20]
	0x03BA15A0 STP X22, X21, [X31 + 0x30]
	0x03BA15A4 STP X20, X19, [X31 + 0x40]
	0x03BA15A8 ADRP X21, 0x841000
	0x03BA15AC LDRB W8, [X21 + 0xC42]
	0x03BA15B0 MOV X19, X2
	0x03BA15B4 MOV W22, W1
	0x03BA15B8 MOV X20, X0
	0x03BA15BC TBNZ X8, 0x0, 0x3BA164C
	0x03BA15C0 ADRP X0, 0x5A8000
	0x03BA15C4 LDR X0, [X0 + 0x380]
	0x03BA15C8 BL 0x1C16CF4
	0x03BA15CC ADRP X0, 0x5A8000
	0x03BA15D0 LDR X0, [X0 + 0x388]
	0x03BA15D4 BL 0x1C16CF4
	0x03BA15D8 ADRP X0, 0x5A8000
	0x03BA15DC LDR X0, [X0 + 0x390]
	0x03BA15E0 BL 0x1C16CF4
	0x03BA15E4 ADRP X0, 0x5A8000
	0x03BA15E8 LDR X0, [X0 + 0x398]
	0x03BA15EC BL 0x1C16CF4
	0x03BA15F0 ADRP X0, 0x5A8000
	0x03BA15F4 LDR X0, [X0 + 0x3A0]
	0x03BA15F8 BL 0x1C16CF4
	0x03BA15FC ADRP X0, 0x5A8000
	0x03BA1600 LDR X0, [X0 + 0x3A8]
	0x03BA1604 BL 0x1C16CF4
	0x03BA1608 ADRP X0, 0x5A8000
	0x03BA160C LDR X0, [X0 + 0x3B0]
	0x03BA1610 BL 0x1C16CF4
	0x03BA1614 ADRP X0, 0x5A8000
	0x03BA1618 LDR X0, [X0 + 0x3B8]
	0x03BA161C BL 0x1C16CF4
	0x03BA1620 ADRP X0, 0x5A8000
	0x03BA1624 LDR X0, [X0 + 0x3C0]
	0x03BA1628 BL 0x1C16CF4
	0x03BA162C ADRP X0, 0x57A000
	0x03BA1630 LDR X0, [X0 + 0x9F8]
	0x03BA1634 BL 0x1C16CF4
	0x03BA1638 ADRP X0, 0x552000
	0x03BA163C LDR X0, [X0 + 0x598]
	0x03BA1640 BL 0x1C16CF4
	0x03BA1644 MOVZ W8, 0x1
	0x03BA1648 STRB W8, [X21 + 0xC42]
	0x03BA164C CBZ X19, 0x3BA1C60
	0x03BA1650 LDR X21, [X19 + 0x50]
	0x03BA1654 TBZ X22, 0x0, 0x3BA1954
	0x03BA1658 MOVZ W23, 0x1
	0x03BA165C STRB W23, [X19 + 0xF8]
	0x03BA1660 ADRP X25, 0x838000
	0x03BA1664 LDRB W8, [X25 + 0x78F]
	0x03BA1668 ADD X24, X19, 0x104
	0x03BA166C CBNZ W8, 0x3BA1680
	0x03BA1670 ADRP X0, 0x55A000
	0x03BA1674 LDR X0, [X0 + 0xF08]
	0x03BA1678 BL 0x1C16CF4
	0x03BA167C STRB W23, [X25 + 0x78F]
	0x03BA1680 ADRP X8, 0x55A000
	0x03BA1684 LDR X8, [X8 + 0xF08]
	0x03BA1688 ADD X1, X19, 0x50
	0x03BA168C ADD X0, X19, 0xA0
	0x03BA1690 MOVZ W2, 0x50
	0x03BA1694 LDR X8, [X8]
	0x03BA1698 LDR X8, [X8 + 0xB8]
	0x03BA169C LDR V1, [X8]
	0x03BA16A0 STRB W31, [X19 + 0x145]
	0x03BA16A4 LDR V0, [X24]
	0x03BA16A8 STP D1, D0, [X24 + 0x8]
	0x03BA16AC BL 0x3EB1AC0
	0x03BA16B0 STRB W23, [X19 + 0x144]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+208], D15
	003 Move [X31+216], D14
	004 Move [X31+224], D13
	005 Move [X31+232], D12
	006 Move [X31+240], D11
	007 Move [X31+248], D10
	008 Move [X31+256], D9
	009 Move [X31+264], D8
	010 Move [X31+272], X29
	011 Move [X31+280], X30
	012 Move [X31+288], X28
	013 Move [X31+296], X27
	014 Move [X31+304], X26
	015 Move [X31+312], X25
	016 Move [X31+320], X24
	017 Move [X31+328], X23
	018 Move [X31+336], X22
	019 Move [X31+344], X21
	020 Move [X31+352], X20
	021 Move [X31+360], X19
	022 Move X23, 0x842000
	023 Move W8, [X23+3127]
	024 Move X19, X3
	025 Move X20, X2
	026 Move X22, X1
	027 Move V8, V5
	028 Move V12, V4
	029 Move V13, V3
	030 Move V9, V2
	031 Move V10, V1
	032 Move V11, V0
	033 Move X21, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {79}
	038 Move X0, 0x5BC000
	039 Move X0, [X0+2896]
	040 Call 0x1C17CF4
	041 Move X0, 0x5B7000
	042 Move X0, [X0+1096]
	043 Call 0x1C17CF4
	044 Move X0, 0x559000
	045 Move X0, [X0+528]
	046 Call 0x1C17CF4
	047 Move X0, 0x559000
	048 Move X0, [X0+536]
	049 Call 0x1C17CF4
	050 Move X0, 0x559000
	051 Move X0, [X0+544]
	052 Call 0x1C17CF4
	053 Move X0, 0x5BC000
	054 Move X0, [X0+2904]
	055 Call 0x1C17CF4
	056 Move X0, 0x5A9000
	057 Move X0, [X0+856]
	058 Call 0x1C17CF4
	059 Move X0, 0x559000
	060 Move X0, [X0+96]
	061 Call 0x1C17CF4
	062 Move X0, 0x559000
	063 Move X0, [X0+552]
	064 Call 0x1C17CF4
	065 Move X0, 0x5A9000
	066 Move X0, [X0+816]
	067 Call 0x1C17CF4
	068 Move X0, 0x553000
	069 Move X0, [X0+1448]
	070 Call 0x1C17CF4
	071 Move X0, 0x5BC000
	072 Move X0, [X0+2912]
	073 Call 0x1C17CF4
	074 Move X0, 0x57C000
	075 Move X0, [X0+1272]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X23+3127], W8
	079 Move X23, 0x553000
	080 Move X24, 0x838000
	081 Move X23, [X23+1448]
	082 Move W8, [X24+2140]
	083 NotImplemented "Instruction MOVI not yet implemented."
	084 Move [X31+96], V0
	085 Move [X31+104], V0
	086 Move [X31+64], V0
	087 Move [X31+72], V0
	088 Move [X31+44], V0
	089 Move [X31+16], V0
	090 Move [X31+24], V0
	091 Compare W8, 0
	092 JumpIfNotEqual {98}
	093 Move X0, 0x553000
	094 Move X0, [X0+1448]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X24+2140], W8
	098 Move X0, [X23]
	099 Subtract S15, S13, S11
	100 Subtract S14, S12, S10
	101 Subtract S13, S8, S9
	102 Move W8, [X0+224]
	103 Move [X31+12], S10
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X24, 0x838000
	108 Move W8, [X24+1925]
	109 Multiply S0, S15, S15
	110 Multiply S1, S14, S14
	111 Add S0, S0, S1
	112 Multiply S1, S13, S13
	113 Add S8, S1, S0
	114 Compare W8, 0
	115 JumpIfNotEqual {121}
	116 Move X0, 0x553000
	117 Move X0, [X0+1448]
	118 Call 0x1C17CF4
	119 Move W8, 1
	120 Move [X24+1925], W8
	121 Move X0, [X23]
	122 NotImplemented "Instruction FSQRT not yet implemented."
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X8, -51077120
	128 Move V12, [X8+380]
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 NotImplemented "Instruction FDIV not yet implemented."
	131 NotImplemented "Instruction FDIV not yet implemented."
	132 NotImplemented "Instruction FDIV not yet implemented."
	133 Move X25, 0x838000
	134 Move W8, [X25+1923]
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x553000
	138 Move X0, [X0+1440]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X25+1923], W8
	142 Move X8, 0x553000
	143 Move X8, [X8+1440]
	144 Move X8, [X8]
	145 Move X8, [X8+184]
	146 Move S15, [X8]
	147 Move S14, [X8+4]
	148 Move V13, [X8+8]
	149 Move W8, [X24+1925]
	150 Move V10, V9
	151 Compare W8, 0
	152 JumpIfNotEqual {158}
	153 Move X0, 0x553000
	154 Move X0, [X0+1448]
	155 Call 0x1C17CF4
	156 Move W8, 1
	157 Move [X24+1925], W8
	158 Move X0, [X23]
	159 Multiply S9, S8, S15
	160 Multiply S15, S8, S14
	161 Multiply S14, S8, S13
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Multiply S0, S9, S9
	167 Multiply S1, S15, S15
	168 Add S0, S0, S1
	169 Multiply S1, S14, S14
	170 Add S0, S1, S0
	171 NotImplemented "Instruction FSQRT not yet implemented."
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 NotImplemented "Instruction FDIV not yet implemented."
	174 NotImplemented "Instruction FDIV not yet implemented."
	175 NotImplemented "Instruction FDIV not yet implemented."
	176 Move X24, 0x838000
	177 Move W8, [X24+1923]
	178 Compare W8, 0
	179 JumpIfNotEqual {185}
	180 Move X0, 0x553000
	181 Move X0, [X0+1440]
	182 Call 0x1C17CF4
	183 Move W8, 1
	184 Move [X24+1923], W8
	185 Move X8, 0x553000
	186 Move X8, [X8+1440]
	187 Move X8, [X8]
	188 Move X8, [X8+184]
	189 Move S12, [X8]
	190 Move S13, [X8+4]
	191 Move V14, [X8+8]
	192 Move X0, [X23]
	193 Move W23, [X21+48]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move W1, 1
	199 Move W0, W23
	200 Move X2, X31
	201 Call Math.Max, X0, X1
	202 Move X24, X21
	203 Add X24, X24, 72
	204 Move X23, [X24]
	205 Move [X24-24], W0
	206 Compare X23, 0
	207 JumpIfEqual {443}
	208 Move W8, [X23+24]
	209 Move W1, W0
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X8, 0x5BC000
	212 Move X8, [X8+2896]
	213 Move X0, X24
	214 Move X2, [X8]
	215 Call Array.Resize, X0, X1
	216 Move X23, [X24]
	217 And X0, X22, 0
	218 Move X1, X31
	219 Add X24, X21, 104
	220 Call LayerMask.op_Implicit, X0
	221 Move W3, [X21+40]
	222 Move V1, [X31+12]
	223 Move W2, W0
	224 Move X0, X24
	225 Move V0, V11
	226 Move V2, V10
	227 Move V3, V12
	228 Move V4, V13
	229 Move V5, V14
	230 Move X1, X23
	231 Move V6, V8
	232 Move X4, X31
	233 Call PhysicsScene.Raycast, X0, X1, X2, X3, V0, X4, X5
	234 Move X1, [X21+88]
	235 Compare X1, 0
	236 JumpIfEqual {443}
	237 Move [X1+16], W0
	238 Move X0, [X21+96]
	239 Compare X0, 0
	240 JumpIfEqual {443}
	241 Move W8, [X0+28]
	242 Move X9, 0x5BC000
	243 Move X9, [X9+2904]
	244 Move X22, 0x57C000
	245 Add W8, W8, 1
	246 Move [X0+24], W31
	247 Move [X0+28], W8
	248 Move X2, [X9]
	249 Move X24, 0x5BC000
	250 Move X22, [X22+1272]
	251 Move X24, [X24+2912]
	252 Call List`1<RaycastHit>.AddRange, X0, X1
	253 Move X0, [X22]
	254 Move X22, [X21+96]
	255 Move X23, [X21+80]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X2, [X24]
	261 Move X0, X22
	262 Move X1, X23
	263 Call 0x2256EE4, X0, X1
	264 Move X0, [X21+96]
	265 Compare X0, 0
	266 JumpIfEqual {443}
	267 Move X8, 0x559000
	268 Move X8, [X8+552]
	269 Move X25, 0x559000
	270 Move X25, [X25+536]
	271 Move X26, 0x5B7000
	272 Move X1, [X8]
	273 Move X29, 0x559000
	274 Move X26, [X26+1096]
	275 Move X29, [X29+528]
	276 Add X8, X31, 128
	277 Add X22, X31, 128
	278 Call List`1<RaycastHit>.GetEnumerator, X0
	279 Move V0, [X31+128]
	280 Move V1, [X31+144]
	281 Move V2, [X31+160]
	282 Move V3, [X31+176]
	283 Add X8, X31, 64
	284 Move W24, W31
	285 Add X28, X22, 24
	286 Add X27, X8, 16
	287 Move [X31+64], V0
	288 Move [X31+72], V1
	289 Move [X31+96], V2
	290 Move [X31+104], V3
	291 Move X1, [X25]
	292 Add X0, X31, 64
	293 Call Enumerator<RaycastHit>.MoveNext, X0
	294 Move TEMP, X0
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfNotEqual {415}
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 Move V2, [X27]
	300 Move V1, [X27+16]
	301 Move [X31+44], V0
	302 Move [X31+16], V2
	303 Move [X31+24], V1
	304 Add X0, X31, 16
	305 Move X1, X31
	306 Call RaycastHit.get_collider, X0
	307 Compare X0, 0
	308 JumpIfEqual {441}
	309 Move X1, X31
	310 Call Component.get_gameObject, X0
	311 Move X22, X0
	312 Add X0, X31, 16
	313 Move X1, X31
	314 Call RaycastHit.get_point, X0
	315 Compare X20, 0
	316 JumpIfEqual {442}
	317 Move X0, X20
	318 Move X1, X31
	319 Call Camera.WorldToScreenPoint, X0, X1
	320 Move X0, [X26]
	321 Move V10, V0
	322 Move V9, V1
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move S2, W31
	328 Move V0, V10
	329 Move V1, V9
	330 Move X0, X31
	331 Call Display.RelativeMouseAt, X0
	332 Move V11, V2
	333 Add X0, X31, 16
	334 Move X1, X31
	335 Call RaycastHit.get_distance, X0
	336 NotImplemented "Instruction FCMP not yet implemented."
	337 Move W9, 0x7F800000
	338 Move S0, W9
	339 NotImplemented "Instruction FCVTZS not yet implemented."
	340 NotImplemented "Instruction FCMP not yet implemented."
	341 Move W9, 0x80000000
	342 NotImplemented "Instruction CSEL not yet implemented."
	343 Add X0, X31, 16
	344 Move X1, X31
	345 Call RaycastHit.get_distance, X0
	346 Compare X19, 0
	347 JumpIfEqual {444}
	348 Move V15, [X19+24]
	349 Move V13, V0
	350 Add X0, X31, 16
	351 Move X1, X31
	352 Call RaycastHit.get_point, X0
	353 Move V14, V0
	354 Move V12, V1
	355 Move V11, V2
	356 Add X0, X31, 16
	357 Move X1, X31
	358 Call RaycastHit.get_normal, X0
	359 Move X9, 0x5A9000
	360 Move W10, [X19+28]
	361 Move X8, [X19+16]
	362 Move X9, [X9+856]
	363 Add W10, W10, 1
	364 Move X9, [X9]
	365 Move [X19+28], W10
	366 Compare X8, 0
	367 JumpIfEqual {445}
	368 NotImplemented "Instruction LDRSW not yet implemented."
	369 Move W11, [X8+24]
	370 NotImplemented "Instruction SCVTF not yet implemented."
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move W11, 80
	373 Add W9, W10, 1
	374 NotImplemented "Instruction MADD not yet implemented."
	375 Move [X19+24], W9
	376 Move [X8+32], X22
	377 Move [X8+40], X21
	378 Move [X8+48], S13
	379 Move [X8+56], S3
	380 Move [X8+56], X31
	381 Move [X8+64], X31
	382 Move [X8+72], W31
	383 Move [X8+76], S14
	384 Move [X8+84], S12
	385 Move [X8+84], S11
	386 Move [X8+92], S0
	387 Move [X8+92], S1
	388 Move [X8+100], S2
	389 Move [X8+100], S10
	390 Move [X8+108], S9
	391 Move [X8+108], W23
	392 Move X8, [X9+32]
	393 Move X8, [X8+192]
	394 Move X2, [X8+112]
	395 Move [X31+128], X22
	396 Move [X31+136], X21
	397 Move [X31+144], S13
	398 Move [X31+152], S3
	399 Move [X28], X31
	400 Move [X28+8], X31
	401 Move [X28+16], W31
	402 Move [X31+172], S14
	403 Move [X31+180], S12
	404 Move [X31+180], S11
	405 Move [X31+188], S0
	406 Move [X31+188], S1
	407 Move [X31+196], S2
	408 Move [X31+196], S10
	409 Move [X31+204], S9
	410 Move [X31+204], W23
	411 Add X1, X31, 128
	412 Move X0, X19
	413 Call List`1<RaycastResult>.AddWithResize, X0, X1
	414 Move W24, 1
	415 Move X1, [X29]
	416 Add X0, X31, 64
	417 Call Enumerator<RaycastHit>.Dispose, X0
	418 And W0, W24, 1
	419 Move X20, [X31+352]
	420 Move X19, [X31+360]
	421 Move X22, [X31+336]
	422 Move X21, [X31+344]
	423 Move X24, [X31+320]
	424 Move X23, [X31+328]
	425 Move X26, [X31+304]
	426 Move X25, [X31+312]
	427 Move X28, [X31+288]
	428 Move X27, [X31+296]
	429 Move X29, [X31+272]
	430 Move X30, [X31+280]
	431 Move D9, [X31+256]
	432 Move D8, [X31+264]
	433 Move D11, [X31+240]
	434 Move D10, [X31+248]
	435 Move D13, [X31+224]
	436 Move D12, [X31+232]
	437 Move D15, [X31+208]
	438 Move D14, [X31+216]
	439 Add X31, X31, 368
	440 Return X0
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Call 0x1C17F20
	444 Call 0x1C17F20
	445 Call 0x1C17F20
	446 Move X19, X0
	447 Move W24, W31
	448 Move X19, X0
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X0, X19
	451 Call 0x3EB2AD0
	452 Move X20, [X0]
	453 Call 0x3EB2AE0
	454 Move X1, [X29]
	455 Add X0, X31, 64
	456 Call Enumerator<RaycastHit>.Dispose, X0
	457 Compare X20, 0
	458 JumpIfEqual {418}
	459 Move X0, X20
	460 Call 0x1C17F18
	461 Move X20, X31
	462 Move X19, X0
	463 Move X1, [X29]
	464 Add X0, X31, 64
	465 Call Enumerator<RaycastHit>.Dispose, X0
	466 Compare X20, 0
	467 JumpIfNotEqual {470}
	468 Move X0, X19
	469 Call 0x1D2D690
	470 Move X0, X20
	471 Call 0x1C17F18
	472 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03BA16B4 ADRP X25, 0x57A000
	0x03BA16B8 LDR X25, [X25 + 0x9F8]
	0x03BA16BC LDR X0, [X25]
	0x03BA16C0 LDR W8, [X0 + 0xE0]
	0x03BA16C4 CBNZ W8, 0x3BA16CC
	0x03BA16C8 BL 0x1C16DFC
	0x03BA16CC ADRP X8, 0x5A8000
	0x03BA16D0 LDR X8, [X8 + 0x3C0]
	0x03BA16D4 MOV X0, X21
	0x03BA16D8 LDR X1, [X8]
	0x03BA16DC BL 0x21DDB64
	0x03BA16E0 LDR X8, [X20 + 0x38]
	0x03BA16E4 CBZ X8, 0x3BA1C60
	0x03BA16E8 ADRP X26, 0x552000
	0x03BA16EC LDR X26, [X26 + 0x598]
	0x03BA16F0 MOV X23, X0
	0x03BA16F4 LDR X24, [X8 + 0x40]
	0x03BA16F8 LDR X0, [X26]
	0x03BA16FC LDR W9, [X0 + 0xE0]
	0x03BA1700 CBNZ W9, 0x3BA1708
	0x03BA1704 BL 0x1C16DFC
	0x03BA1708 MOV X0, X23
	0x03BA170C MOV X1, X24
	0x03BA1710 MOV X2, X31
	0x03BA1714 BL 0x3C354F8
	0x03BA1718 TBZ X0, 0x0, 0x3BA1734
	0x03BA171C LDR X0, [X20 + 0x38]
	0x03BA1720 CBZ X0, 0x3BA1C60
	0x03BA1724 MOV X1, X31
	0x03BA1728 MOV X2, X19
	0x03BA172C MOV X3, X31
	0x03BA1730 BL 0x3E4EC58
	0x03BA1734 LDR X8, [X20 + 0xB0]
	0x03BA1738 CBZ X8, 0x3BA1754
	0x03BA173C LDR X9, [X8 + 0x18]
	0x03BA1740 LDR X0, [X8 + 0x40]
	0x03BA1744 LDR X3, [X8 + 0x28]
	0x03BA1748 MOV X1, X21
	0x03BA174C MOV X2, X19
	0x03BA1750 BLR X9
	0x03BA1754 LDR X0, [X25]
	0x03BA1758 LDR W8, [X0 + 0xE0]
	0x03BA175C CBNZ W8, 0x3BA1764
	0x03BA1760 BL 0x1C16DFC
	0x03BA1764 ADRP X23, 0x840000
	0x03BA1768 LDRB W8, [X23 + 0x386]
	0x03BA176C CBNZ W8, 0x3BA1784
	0x03BA1770 ADRP X0, 0x57A000
	0x03BA1774 LDR X0, [X0 + 0x9F8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x842000
	008 Move X20, 0x5BC000
	009 Move X22, 0x559000
	010 Move X21, 0x5BC000
	011 Move W8, [X23+3128]
	012 Move X20, [X20+2920]
	013 Move X22, [X22+104]
	014 Move X21, [X21+2928]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x5BC000
	021 Move X0, [X0+2928]
	022 Call 0x1C17CF4
	023 Move X0, 0x559000
	024 Move X0, [X0+104]
	025 Call 0x1C17CF4
	026 Move X0, 0x5BC000
	027 Move X0, [X0+2920]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3128], W8
	031 Move W8, 1
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W0, TEMP
	035 Move X1, X31
	036 Move [X19+40], W8
	037 Call LayerMask.op_Implicit, X0
	038 Move W8, 10
	039 Move [X19+44], W0
	040 Move [X19+48], W8
	041 Move X0, [X20]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X20, X0
	045 Call Object..ctor, X0
	046 Move [X19+80], X20
	047 Move X0, [X22]
	048 Call 0x1C17F10
	049 Move X1, [X21]
	050 Move X20, X0
	051 Call List`1<RaycastHit>..ctor, X0
	052 Move [X19+96], X20
	053 Move X0, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X1, X31
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Call BaseRaycaster..ctor, X0
	062 Return 

