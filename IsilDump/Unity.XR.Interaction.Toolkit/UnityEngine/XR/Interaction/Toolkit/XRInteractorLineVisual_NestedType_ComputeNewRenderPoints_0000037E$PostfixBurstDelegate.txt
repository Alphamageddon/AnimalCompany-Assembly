Type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual/ComputeNewRenderPoints_0000037E$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B4DC68 ADD X1, X31, 0x180
	0x03B4DC6C ADD X2, X31, 0x118
	0x03B4DC70 ADD X3, X31, 0x120
	0x03B4DC74 ADD X4, X31, 0x114
	0x03B4DC78 ADD X5, X31, 0x11C
	0x03B4DC7C MOV X0, X20
	0x03B4DC80 BL 0x3B4B59C
	0x03B4DC84 TBZ X0, 0x0, 0x3B4DD30
	0x03B4DC88 LDRB W8, [X31 + 0x11C]
	0x03B4DC8C CBZ W8, 0x3B4DD80
	0x03B4DC90 ADRP X8, 0x60D000
	0x03B4DC94 LDR X8, [X8 + 0xB00]
	0x03B4DC98 ADD X0, X31, 0x120
	0x03B4DC9C LDR X1, [X8]
	0x03B4DCA0 ADD X8, X31, 0x30
	0x03B4DCA4 BL 0x2438BA4
	0x03B4DCA8 ADD X0, X31, 0x80
	0x03B4DCAC ADD X1, X31, 0x30
	0x03B4DCB0 MOVZ W2, 0x50
	0x03B4DCB4 BL 0x3EB1AC0
	0x03B4DCB8 ADD X0, X31, 0x30
	0x03B4DCBC ADD X1, X31, 0x80
	0x03B4DCC0 MOVZ W2, 0x50
	0x03B4DCC4 BL 0x3EB1AC0
	0x03B4DCC8 LDR W8, [X31 + 0x64]
	0x03B4DCCC LDUR X9, [X31 + 0x5C]
	0x03B4DCD0 LDR X10, [X31 + 0x68]
	0x03B4DCD4 LDR W11, [X31 + 0x70]
	0x03B4DCD8 STR W8, [X31 + 0x1C8]
	0x03B4DCDC STR X9, [X31 + 0x1C0]
	0x03B4DCE0 STR X10, [X31 + 0x1B0]
	0x03B4DCE4 STR W11, [X31 + 0x1B8]
	0x03B4DCE8 LDR X0, [X20 + 0x2A0]
	0x03B4DCEC CBZ X0, 0x3B4DE38
	0x03B4DCF0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {23}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -32829440
	021 Add X8, X8, 2780
	022 Move [X19+24], X8
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X19+16]
	026 Move X9, [X19+32]
	027 Move [X19+24], X8
	028 Move [X19+64], X9
	029 Move X8, -32829440
	030 Add X8, X8, 2592
	031 Move [X19+56], X8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X1, -50532352
	038 Add X1, X1, 3811
	039 Move X0, X31
	040 Call 0x1C17F3C
	041 Move X1, X31
	042 Call 0x1C17DEC

Method: System.Int32 Invoke(System.Int32 numRenderPoints, System.Int32 numTargetPoints, System.Single targetLineLength, System.Boolean shouldSmoothPoints, System.Boolean shouldOverwritePoints, System.Single pointSmoothIncrement, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> targetPoints, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> previousRenderPoints, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> renderPoints)

Disassembly:
	0x03B4DCF4 BL 0x3C3FA04
	0x03B4DCF8 LDR V3, [X31 + 0x1B0]
	0x03B4DCFC LDR V4, [X31 + 0x1B4]
	0x03B4DD00 LDR V5, [X31 + 0x1B8]
	0x03B4DD04 FMUL S0, S0, S3
	0x03B4DD08 FMUL S1, S1, S4
	0x03B4DD0C FADD S0, S0, S1
	0x03B4DD10 FMUL S1, S2, S5

ISIL:
	001 Move X8, [X0+64]
	002 Move X9, [X0+24]
	003 Move X10, [X0+40]
	004 And W3, W3, 1
	005 And W4, W4, 1
	006 Move X0, X8
	007 Move [X31], X10
	008 CallNoReturn X9

Method: System.IAsyncResult BeginInvoke(System.Int32 numRenderPoints, System.Int32 numTargetPoints, System.Single targetLineLength, System.Boolean shouldSmoothPoints, System.Boolean shouldOverwritePoints, System.Single pointSmoothIncrement, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> targetPoints, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> previousRenderPoints, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> renderPoints, System.AsyncCallback param_9, System.Object param_10)

Disassembly:
	0x03B4DD14 FADD S0, S1, S0
	0x03B4DD18 FCMP S0, 0x0
	0x03B4DD1C B.LE 0x3B4DDE0
	0x03B4DD20 FNEG S0, S3
	0x03B4DD24 FNEG S1, S4
	0x03B4DD28 FNEG S2, S5
	0x03B4DD2C B 0x3B4DDD4
	0x03B4DD30 LDRB W8, [X19 + 0x3D]
	0x03B4DD34 CBZ W8, 0x3B4DE30
	0x03B4DD38 ADD X21, X19, 0x48
	0x03B4DD3C ADD X2, X31, 0x114
	0x03B4DD40 ADD X3, X31, 0x10
	0x03B4DD44 MOV X0, X20
	0x03B4DD48 MOV X1, X21
	0x03B4DD4C STP X31, X31, [X31 + 0x10]
	0x03B4DD50 STR W31, [X31 + 0x28]
	0x03B4DD54 STR X31, [X31 + 0x20]
	0x03B4DD58 BL 0x3B4E6C8
	0x03B4DD5C TBZ X0, 0x0, 0x3B4DE30
	0x03B4DD60 LDR W8, [X19 + 0x50]
	0x03B4DD64 CMP W8, 0x0
	0x03B4DD68 B.LE 0x3B4DDEC
	0x03B4DD6C LDR X9, [X21]
	0x03B4DD70 SUB W8, W8, 0x1
	0x03B4DD74 MOVZ W10, 0xC
	0x03B4DD78 SMADDL X8, X8, X10, X9
	0x03B4DD7C B 0x3B4DE10
	0x03B4DD80 LDRB W8, [X31 + 0x180]
	0x03B4DD84 CBZ W8, 0x3B4DE30
	0x03B4DD88 ADRP X8, 0x60D000
	0x03B4DD8C LDR X8, [X8 + 0xA10]
	0x03B4DD90 ADD X0, X31, 0x180
	0x03B4DD94 LDR X1, [X8]
	0x03B4DD98 ADD X8, X31, 0x80
	0x03B4DD9C BL 0x2438690
	0x03B4DDA0 LDP V0, V1, [X31 + 0x80]
	0x03B4DDA4 LDUR V2, [X21 + 0x1C]
	0x03B4DDA8 ADD X0, X31, 0xE0
	0x03B4DDAC MOV X1, X31
	0x03B4DDB0 STP V0, V1, [X31 + 0xE0]
	0x03B4DDB4 STUR V2, [X21 + 0x7C]
	0x03B4DDB8 BL 0x3C8E66C
	0x03B4DDBC ADD X0, X31, 0xE0
	0x03B4DDC0 MOV X1, X31
	0x03B4DDC4 STR S0, [X31 + 0x1C0]
	0x03B4DDC8 STR S1, [X31 + 0x1C4]
	0x03B4DDCC STR S2, [X31 + 0x1C8]
	0x03B4DDD0 BL 0x3C8E678
	0x03B4DDD4 STR S0, [X31 + 0x1B0]
	0x03B4DDD8 STR S1, [X31 + 0x1B4]
	0x03B4DDDC STR S2, [X31 + 0x1B8]
	0x03B4DDE0 MOVZ W8, 0x1
	0x03B4DDE4 STRB W8, [X19 + 0x8C]
	0x03B4DDE8 B 0x3B4DB48
	0x03B4DDEC LDRB W8, [X22 + 0x783]
	0x03B4DDF0 CBNZ W8, 0x3B4DE08
	0x03B4DDF4 ADRP X0, 0x5A6000
	0x03B4DDF8 LDR X0, [X0 + 0x5A0]
	0x03B4DDFC BL 0x1C16CF4
	0x03B4DE00 MOVZ W8, 0x1
	0x03B4DE04 STRB W8, [X22 + 0x783]
	0x03B4DE08 LDR X8, [X23]
	0x03B4DE0C LDR X8, [X8 + 0xB8]
	0x03B4DE10 ADD X9, X8, 0x4
	0x03B4DE14 ADD X10, X8, 0x8
	0x03B4DE18 LDR V0, [X8]
	0x03B4DE1C LDR V1, [X9]
	0x03B4DE20 LDR V2, [X10]
	0x03B4DE24 STR S0, [X31 + 0x1C0]
	0x03B4DE28 STR S1, [X31 + 0x1C4]
	0x03B4DE2C STR S2, [X31 + 0x1C8]
	0x03B4DE30 STRB W31, [X19 + 0x8C]
	0x03B4DE34 B 0x3B4DB40
	0x03B4DE38 BL 0x1C16F20
	0x03B4DE3C SUB X31, X31, 0x80
	0x03B4DE40 STP D15, D14, [X31 + 0x10]
	0x03B4DE44 STP D13, D12, [X31 + 0x20]
	0x03B4DE48 STP D11, D10, [X31 + 0x30]
	0x03B4DE4C STP D9, D8, [X31 + 0x40]
	0x03B4DE50 STP X30, X23, [X31 + 0x50]
	0x03B4DE54 STP X22, X21, [X31 + 0x60]
	0x03B4DE58 STP X20, X19, [X31 + 0x70]
	0x03B4DE5C ADRP X20, 0x895000
	0x03B4DE60 ADRP X21, 0x5A6000
	0x03B4DE64 LDRB W8, [X20 + 0x8DE]
	0x03B4DE68 LDR X21, [X21 + 0x598]
	0x03B4DE6C MOV X19, X0
	0x03B4DE70 TBNZ X8, 0x0, 0x3B4DE88
	0x03B4DE74 ADRP X0, 0x5A6000
	0x03B4DE78 LDR X0, [X0 + 0x598]
	0x03B4DE7C BL 0x1C16CF4
	0x03B4DE80 MOVZ W8, 0x1
	0x03B4DE84 STRB W8, [X20 + 0x8DE]
	0x03B4DE88 LDR X0, [X21]
	0x03B4DE8C LDR X20, [X19 + 0x60]
	0x03B4DE90 LDR W8, [X0 + 0xE0]
	0x03B4DE94 CBNZ W8, 0x3B4DE9C
	0x03B4DE98 BL 0x1C16DFC
	0x03B4DE9C MOV X0, X20
	0x03B4DEA0 MOV X1, X31
	0x03B4DEA4 MOV X2, X31
	0x03B4DEA8 BL 0x3C354F8
	0x03B4DEAC TBZ X0, 0x0, 0x3B4DF68
	0x03B4DEB0 LDR X0, [X19 + 0x60]
	0x03B4DEB4 CBZ X0, 0x3B4E38C

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 And W8, W3, 1
	015 And W9, W4, 1
	016 Move [X31+104], W2
	017 Move [X31+108], W1
	018 Move [X31+100], S0
	019 Move [X31+88], S1
	020 Move X29, 0x896000
	021 Move [X31+96], W8
	022 Move [X31+92], W9
	023 Move X28, 0x5A7000
	024 Move X26, 0x5A7000
	025 Move X27, 0x5A7000
	026 Move X25, 0x60E000
	027 Move X22, [X31+208]
	028 Move X20, [X31+216]
	029 Move W8, [X29+2253]
	030 Move X28, [X28+1880]
	031 Move X26, [X26+2704]
	032 Move X27, [X27+2904]
	033 Move X25, [X25+2744]
	034 Move X19, X7
	035 Move X23, X6
	036 Move X24, X5
	037 Move X21, X0
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {56}
	042 Move X0, 0x5A7000
	043 Move X0, [X0+2904]
	044 Call 0x1C17CF4
	045 Move X0, 0x5A7000
	046 Move X0, [X0+1880]
	047 Call 0x1C17CF4
	048 Move X0, 0x60E000
	049 Move X0, [X0+2744]
	050 Call 0x1C17CF4
	051 Move X0, 0x5A7000
	052 Move X0, [X0+2704]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X29+2253], W8
	056 Move X0, [X28]
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Add X1, X31, 108
	059 Move [X31+48], V0
	060 Move [X31+56], V0
	061 Move [X31+16], V0
	062 Move [X31+24], V0
	063 Move [X31], V0
	064 Call 0x1C17E04
	065 Move X8, [X28]
	066 Move [X31], X0
	067 Add X1, X31, 104
	068 Move X0, X8
	069 Call 0x1C17E04
	070 Move X8, [X26]
	071 Move [X31+8], X0
	072 Add X1, X31, 100
	073 Move X0, X8
	074 Call 0x1C17E04
	075 Move X8, [X27]
	076 Move [X31+16], X0
	077 Add X1, X31, 96
	078 Move X0, X8
	079 Call 0x1C17E04
	080 Move X8, [X27]
	081 Move [X31+24], X0
	082 Add X1, X31, 92
	083 Move X0, X8
	084 Call 0x1C17E04
	085 Move X8, [X26]
	086 Move [X31+32], X0
	087 Add X1, X31, 88
	088 Move X0, X8
	089 Call 0x1C17E04
	090 Move X8, [X25]
	091 Move [X31+40], X0
	092 Move X1, X24
	093 Move X0, X8
	094 Call 0x1C17E04
	095 Move X8, [X25]
	096 Move [X31+48], X0
	097 Move X1, X23
	098 Move X0, X8
	099 Call 0x1C17E04
	100 Move X8, [X25]
	101 Move [X31+56], X0
	102 Move X1, X19
	103 Move X0, X8
	104 Call 0x1C17E04
	105 Move [X31+64], X0
	106 Add X1, X31, 0
	107 Move X0, X21
	108 Move X2, X22
	109 Move X3, X20
	110 Call 0x1C17CB0
	111 Move X20, [X31+192]
	112 Move X19, [X31+200]
	113 Move X22, [X31+176]
	114 Move X21, [X31+184]
	115 Move X24, [X31+160]
	116 Move X23, [X31+168]
	117 Move X26, [X31+144]
	118 Move X25, [X31+152]
	119 Move X28, [X31+128]
	120 Move X27, [X31+136]
	121 Move X29, [X31+112]
	122 Move X30, [X31+120]
	123 Add X31, X31, 208
	124 Return X0

Method: System.Int32 EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B4DEB8 MOV X1, X31
	0x03B4DEBC BL 0x3C356F8
	0x03B4DEC0 CBZ X0, 0x3B4E38C
	0x03B4DEC4 LDP S1, S2, [X19 + 0x74]
	0x03B4DEC8 LDR V0, [X19 + 0x70]
	0x03B4DECC MOV X1, X31
	0x03B4DED0 BL 0x3C3F62C
	0x03B4DED4 LDR X0, [X21]
	0x03B4DED8 LDR X20, [X19 + 0x58]
	0x03B4DEDC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move W0, [X0]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

