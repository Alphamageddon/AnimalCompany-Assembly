Type: UnityEngine.XR.Interaction.Toolkit.ActionBasedContinuousMoveProvider

Method: UnityEngine.InputSystem.InputActionProperty get_leftHandMoveAction()

Disassembly:
	0x03B7CE54 LDR X8, [X19 + 0x30]
	0x03B7CE58 CBZ X8, 0x3B7D098
	0x03B7CE5C ADRP X21, 0x577000
	0x03B7CE60 LDR X8, [X8 + 0x30]
	0x03B7CE64 LDR X21, [X21 + 0x598]

ISIL:
	001 Move X9, [X0+136]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_leftHandMoveAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B7CE68 CBZ X8, 0x3B7CE74
	0x03B7CE6C LDR X20, [X8 + 0x38]
	0x03B7CE70 B 0x3B7CE78
	0x03B7CE74 MOV X20, X31
	0x03B7CE78 LDR X0, [X21]
	0x03B7CE7C LDR W8, [X0 + 0xE0]
	0x03B7CE80 CBNZ W8, 0x3B7CE88
	0x03B7CE84 BL 0x1C16DFC
	0x03B7CE88 MOV X0, X20
	0x03B7CE8C MOV X1, X31
	0x03B7CE90 MOV X2, X31
	0x03B7CE94 BL 0x3C3883C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 120
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedContinuousMoveProvider.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: UnityEngine.InputSystem.InputActionProperty get_rightHandMoveAction()

Disassembly:
	0x03B7CF80 FMUL S2, S14, S11
	0x03B7CF84 FADD S0, S10, S0
	0x03B7CF88 FADD S1, S9, S1
	0x03B7CF8C FADD S2, S8, S2
	0x03B7CF90 MOV X1, X31

ISIL:
	001 Move X9, [X0+160]
	002 Move V0, [X0+9]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_rightHandMoveAction(UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B7CF94 BL 0x3C8FA08
	0x03B7CF98 B 0x3B7CFF4
	0x03B7CF9C MOV X0, X19
	0x03B7CFA0 BL 0x3B7BDB4
	0x03B7CFA4 TBZ X0, 0x0, 0x3B7D018
	0x03B7CFA8 MOV X0, X19
	0x03B7CFAC BL 0x3B7B060
	0x03B7CFB0 TBZ X0, 0x0, 0x3B7D018
	0x03B7CFB4 MOVZ W8, 0x1
	0x03B7CFB8 STRB W8, [X19 + 0x69]
	0x03B7CFBC CBZ X20, 0x3B7D098
	0x03B7CFC0 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X1+16]
	004 Move V0, [X1]
	005 Add X1, X0, 144
	006 Add X2, X31, 0
	007 Move [X31+16], X8
	008 Move [X31], V0
	009 Call ActionBasedContinuousMoveProvider.SetInputActionProperty, X0, X1, X2
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03B7CFC4 MOV X1, X31
	0x03B7CFC8 BL 0x3C356F8
	0x03B7CFCC CBZ X0, 0x3B7D098
	0x03B7CFD0 MOV X1, X31
	0x03B7CFD4 MOV X20, X0
	0x03B7CFD8 BL 0x3C3F58C
	0x03B7CFDC FADD S0, S10, S0
	0x03B7CFE0 FADD S1, S9, S1
	0x03B7CFE4 FADD S2, S8, S2
	0x03B7CFE8 MOV X0, X20
	0x03B7CFEC MOV X1, X31
	0x03B7CFF0 BL 0x3C3F62C
	0x03B7CFF4 MOV X0, X19
	0x03B7CFF8 LDP X20, X19, [X31 + 0x60]
	0x03B7CFFC LDP X30, X21, [X31 + 0x50]
	0x03B7D000 LDP D9, D8, [X31 + 0x40]
	0x03B7D004 LDP D11, D10, [X31 + 0x30]
	0x03B7D008 LDP D13, D12, [X31 + 0x20]
	0x03B7D00C LDP D15, D14, [X31 + 0x10]
	0x03B7D010 ADD X31, X31, 0x70

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X8, [X0+136]
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X19, X0
	007 Add X0, X31, 32
	008 Move X1, X31
	009 Move [X31+48], X8
	010 Move [X31+2], V0
	011 Call InputActionPropertyExtensions.EnableDirectAction, X0
	012 Move X8, [X19+160]
	013 Move V0, [X19+9]
	014 Add X0, X31, 0
	015 Move X1, X31
	016 Move [X31+16], X8
	017 Move [X31], V0
	018 Call InputActionPropertyExtensions.EnableDirectAction, X0
	019 Move X30, [X31+64]
	020 Move X19, [X31+72]
	021 Add X31, X31, 80
	022 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03B7D014 B 0x3B7B484
	0x03B7D018 LDP X20, X19, [X31 + 0x60]
	0x03B7D01C LDP X30, X21, [X31 + 0x50]
	0x03B7D020 LDP D9, D8, [X31 + 0x40]
	0x03B7D024 LDP D11, D10, [X31 + 0x30]
	0x03B7D028 LDP D13, D12, [X31 + 0x20]
	0x03B7D02C LDP D15, D14, [X31 + 0x10]
	0x03B7D030 ADD X31, X31, 0x70
	0x03B7D034 RET
	0x03B7D038 ADRP X8, 0x576000
	0x03B7D03C LDR X8, [X8 + 0x5F8]
	0x03B7D040 LDP S14, S0, [X19 + 0x6C]
	0x03B7D044 LDR V15, [X19 + 0x74]
	0x03B7D048 LDR X0, [X8]
	0x03B7D04C STR S0, [X31 + 0xC]
	0x03B7D050 LDR W8, [X0 + 0xE0]
	0x03B7D054 CBNZ W8, 0x3B7D05C
	0x03B7D058 BL 0x1C16DFC
	0x03B7D05C MOV X0, X31
	0x03B7D060 BL 0x3C8A660

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X8, [X0+136]
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X19, X0
	007 Add X0, X31, 32
	008 Move X1, X31
	009 Move [X31+48], X8
	010 Move [X31+2], V0
	011 Call InputActionPropertyExtensions.DisableDirectAction, X0
	012 Move X8, [X19+160]
	013 Move V0, [X19+9]
	014 Add X0, X31, 0
	015 Move X1, X31
	016 Move [X31+16], X8
	017 Move [X31], V0
	018 Call InputActionPropertyExtensions.DisableDirectAction, X0
	019 Move X30, [X31+64]
	020 Move X19, [X31+72]
	021 Add X31, X31, 80
	022 Return 

Method: UnityEngine.Vector2 ReadInput()

Disassembly:
	0x03B7D064 MOV X0, X31
	0x03B7D068 MOV V11.16B, V0.16B
	0x03B7D06C MOV V12.16B, V1.16B
	0x03B7D070 MOV V13.16B, V2.16B
	0x03B7D074 BL 0x3C3C714
	0x03B7D078 FMUL S1, S11, S0
	0x03B7D07C FMUL S2, S12, S0
	0x03B7D080 FADD S12, S14, S1
	0x03B7D084 LDR V1, [X31 + 0xC]
	0x03B7D088 FMUL S0, S13, S0
	0x03B7D08C FADD S14, S15, S0
	0x03B7D090 FADD S13, S1, S2
	0x03B7D094 B 0x3B7CF3C
	0x03B7D098 BL 0x1C16F20
	0x03B7D09C STP X30, X23, [X31 - 0x30]!
	0x03B7D0A0 STP X22, X21, [X31 + 0x10]
	0x03B7D0A4 STP X20, X19, [X31 + 0x20]
	0x03B7D0A8 ADRP X20, 0x865000
	0x03B7D0AC LDRB W8, [X20 + 0xAA8]
	0x03B7D0B0 MOV X19, X0
	0x03B7D0B4 TBNZ X8, 0x0, 0x3B7D0E4
	0x03B7D0B8 ADRP X0, 0x59D000
	0x03B7D0BC LDR X0, [X0 + 0x930]
	0x03B7D0C0 BL 0x1C16CF4
	0x03B7D0C4 ADRP X0, 0x5DE000
	0x03B7D0C8 LDR X0, [X0 + 0xD68]
	0x03B7D0CC BL 0x1C16CF4
	0x03B7D0D0 ADRP X0, 0x576000
	0x03B7D0D4 LDR X0, [X0 + 0x598]
	0x03B7D0D8 BL 0x1C16CF4
	0x03B7D0DC MOVZ W8, 0x1
	0x03B7D0E0 STRB W8, [X20 + 0xAA8]
	0x03B7D0E4 LDR X8, [X19 + 0x30]
	0x03B7D0E8 CBZ X8, 0x3B7D200
	0x03B7D0EC ADRP X23, 0x576000
	0x03B7D0F0 LDR X8, [X8 + 0x30]
	0x03B7D0F4 LDR X23, [X23 + 0x598]
	0x03B7D0F8 CBZ X8, 0x3B7D104
	0x03B7D0FC LDR X20, [X8 + 0x38]
	0x03B7D100 B 0x3B7D108
	0x03B7D104 MOV X20, X31
	0x03B7D108 LDR X0, [X23]
	0x03B7D10C LDR W8, [X0 + 0xE0]
	0x03B7D110 CBNZ W8, 0x3B7D118
	0x03B7D114 BL 0x1C16DFC
	0x03B7D118 MOV X0, X20
	0x03B7D11C MOV X1, X31
	0x03B7D120 MOV X2, X31
	0x03B7D124 BL 0x3C3883C
	0x03B7D128 TBNZ X0, 0x0, 0x3B7D1F0
	0x03B7D12C MOV X21, X19
	0x03B7D130 LDR X22, [X21 + 0x60]!
	0x03B7D134 LDR X0, [X23]
	0x03B7D138 LDR W8, [X0 + 0xE0]
	0x03B7D13C CBNZ W8, 0x3B7D144
	0x03B7D140 BL 0x1C16DFC
	0x03B7D144 MOV X0, X22
	0x03B7D148 MOV X1, X31
	0x03B7D14C MOV X2, X31
	0x03B7D150 BL 0x3C3883C
	0x03B7D154 TBZ X0, 0x0, 0x3B7D1F0
	0x03B7D158 LDRB W8, [X19 + 0x68]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x866000
	008 Move W8, [X20+2719]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x59F000
	015 Move X0, [X0+960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2719], W8
	019 Move X20, 0x59F000
	020 Move X20, [X20+960]
	021 Add X0, X19, 120
	022 Move X1, X31
	023 Call InputActionProperty.get_action, X0
	024 Compare X0, 0
	025 JumpIfEqual {30}
	026 Move X1, [X20]
	027 Call InputAction.ReadValue, X0
	028 Move V8, V0
	029 Move V9, V1
	030 Move X21, 0x85D000
	031 Move W8, [X21+1935]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x57F000
	035 Move X0, [X0+3848]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1935], W8
	039 Move X8, 0x57F000
	040 Move X8, [X8+3848]
	041 Move X8, [X8]
	042 Move X8, [X8+184]
	043 Move S8, [X8]
	044 Move S9, [X8+4]
	045 Add X0, X19, 144
	046 Move X1, X31
	047 Call InputActionProperty.get_action, X0
	048 Compare X0, 0
	049 JumpIfEqual {52}
	050 Move X1, [X20]
	051 Call InputAction.ReadValue, X0
	052 Move X19, 0x85D000
	053 Move W8, [X19+1935]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x57F000
	057 Move X0, [X0+3848]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X19+1935], W8
	061 Move X8, 0x57F000
	062 Move X8, [X8+3848]
	063 Move X8, [X8]
	064 Move X8, [X8+184]
	065 Move S0, [X8]
	066 Move S1, [X8+4]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Add S0, S8, S0
	072 Add S1, S9, S1
	073 Move D9, [X31+48]
	074 Move D8, [X31+56]
	075 Return X0

Method: System.Void SetInputActionProperty(ref UnityEngine.InputSystem.InputActionProperty property, UnityEngine.InputSystem.InputActionProperty value)

Disassembly:
	0x03B7CE98 TBNZ X0, 0x0, 0x3B7D018
	0x03B7CE9C MOV X0, X19
	0x03B7CEA0 BL 0x3B7D09C
	0x03B7CEA4 LDR X0, [X21]
	0x03B7CEA8 LDR X21, [X19 + 0x60]
	0x03B7CEAC LDR W8, [X0 + 0xE0]
	0x03B7CEB0 CBNZ W8, 0x3B7CEB8
	0x03B7CEB4 BL 0x1C16DFC
	0x03B7CEB8 MOV X0, X21
	0x03B7CEBC MOV X1, X31
	0x03B7CEC0 MOV X2, X31
	0x03B7CEC4 BL 0x3C354F8
	0x03B7CEC8 TBZ X0, 0x0, 0x3B7CF9C
	0x03B7CECC LDR X0, [X19 + 0x60]
	0x03B7CED0 CBZ X0, 0x3B7D098
	0x03B7CED4 MOV X1, X31
	0x03B7CED8 BL 0x3C8F70C
	0x03B7CEDC TBZ X0, 0x0, 0x3B7CF9C
	0x03B7CEE0 LDR X0, [X19 + 0x60]
	0x03B7CEE4 CBZ X0, 0x3B7D098
	0x03B7CEE8 MOV X1, X31
	0x03B7CEEC BL 0x3C8FAA0
	0x03B7CEF0 TBNZ X0, 0x0, 0x3B7CF04
	0x03B7CEF4 LDRB W8, [X19 + 0x4E]
	0x03B7CEF8 CBZ W8, 0x3B7CF04
	0x03B7CEFC LDRB W8, [X19 + 0x4D]
	0x03B7CF00 CBZ W8, 0x3B7D038
	0x03B7CF04 ADRP X20, 0x85C000
	0x03B7CF08 LDRB W8, [X20 + 0x783]
	0x03B7CF0C CBNZ W8, 0x3B7CF24
	0x03B7CF10 ADRP X0, 0x577000
	0x03B7CF14 LDR X0, [X0 + 0x5A0]
	0x03B7CF18 BL 0x1C16CF4
	0x03B7CF1C MOVZ W8, 0x1
	0x03B7CF20 STRB W8, [X20 + 0x783]
	0x03B7CF24 ADRP X8, 0x577000
	0x03B7CF28 LDR X8, [X8 + 0x5A0]
	0x03B7CF2C LDR X8, [X8]
	0x03B7CF30 LDR X8, [X8 + 0xB8]
	0x03B7CF34 LDP S12, S13, [X8]
	0x03B7CF38 LDR V14, [X8 + 0x8]
	0x03B7CF3C MOV X0, X31
	0x03B7CF40 STP S12, S13, [X19 + 0x6C]
	0x03B7CF44 STR S14, [X19 + 0x74]
	0x03B7CF48 BL 0x3C3C714
	0x03B7CF4C MOV X0, X19
	0x03B7CF50 MOV V11.16B, V0.16B
	0x03B7CF54 BL 0x3B7BDB4
	0x03B7CF58 TBZ X0, 0x0, 0x3B7D018
	0x03B7CF5C MOV X0, X19
	0x03B7CF60 BL 0x3B7B060
	0x03B7CF64 TBZ X0, 0x0, 0x3B7D018
	0x03B7CF68 LDR X0, [X19 + 0x60]
	0x03B7CF6C MOVZ W8, 0x1
	0x03B7CF70 STRB W8, [X19 + 0x69]
	0x03B7CF74 CBZ X0, 0x3B7D098
	0x03B7CF78 FMUL S0, S12, S11
	0x03B7CF7C FMUL S1, S13, S11

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x867000
	009 Move X22, 0x578000
	010 Move W8, [X23+2720]
	011 Move X22, [X22+2416]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x578000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2720], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move X8, [X19+16]
	036 Move V0, [X19]
	037 Add X0, X31, 32
	038 Move X1, X31
	039 Move [X31+48], X8
	040 Move [X31+2], V0
	041 Call InputActionPropertyExtensions.DisableDirectAction, X0
	042 Move X8, [X21+16]
	043 Move V0, [X21]
	044 Move [X19+16], X8
	045 Move [X19], V0
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call Application.get_isPlaying
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {71}
	057 Move X0, X20
	058 Move X1, X31
	059 Call Behaviour.get_isActiveAndEnabled, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {71}
	064 Move X8, [X19+16]
	065 Move V0, [X19]
	066 Add X0, X31, 0
	067 Move X1, X31
	068 Move [X31+16], X8
	069 Move [X31], V0
	070 Call InputActionPropertyExtensions.EnableDirectAction, X0
	071 Move X20, [X31+96]
	072 Move X19, [X31+104]
	073 Move X22, [X31+80]
	074 Move X21, [X31+88]
	075 Move X30, [X31+64]
	076 Move X23, [X31+72]
	077 Add X31, X31, 112
	078 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B7D15C CBNZ W8, 0x3B7D1F0
	0x03B7D160 CBZ X20, 0x3B7D200
	0x03B7D164 ADRP X8, 0x5DE000
	0x03B7D168 LDR X8, [X8 + 0xD68]
	0x03B7D16C MOV X0, X20
	0x03B7D170 MOV X1, X21
	0x03B7D174 LDR X2, [X8]
	0x03B7D178 BL 0x21E6600
	0x03B7D17C TBNZ X0, 0x0, 0x3B7D1E8
	0x03B7D180 LDR X8, [X19 + 0x30]
	0x03B7D184 CBZ X8, 0x3B7D200
	0x03B7D188 LDR X0, [X8 + 0x30]
	0x03B7D18C CBZ X0, 0x3B7D200
	0x03B7D190 MOV X1, X31
	0x03B7D194 BL 0x3C32ECC
	0x03B7D198 LDR X8, [X23]
	0x03B7D19C MOV X22, X0
	0x03B7D1A0 LDR W9, [X8 + 0xE0]
	0x03B7D1A4 CBNZ W9, 0x3B7D1B0
	0x03B7D1A8 MOV X0, X8
	0x03B7D1AC BL 0x1C16DFC
	0x03B7D1B0 MOV X0, X20
	0x03B7D1B4 MOV X1, X22
	0x03B7D1B8 MOV X2, X31
	0x03B7D1BC BL 0x3C354F8
	0x03B7D1C0 TBZ X0, 0x0, 0x3B7D1E8
	0x03B7D1C4 LDR X8, [X19 + 0x30]
	0x03B7D1C8 CBZ X8, 0x3B7D200
	0x03B7D1CC LDR X0, [X8 + 0x30]
	0x03B7D1D0 CBZ X0, 0x3B7D200
	0x03B7D1D4 ADRP X8, 0x59D000
	0x03B7D1D8 LDR X8, [X8 + 0x930]
	0x03B7D1DC MOV X1, X21
	0x03B7D1E0 LDR X2, [X8]
	0x03B7D1E4 BL 0x21A4990
	0x03B7D1E8 MOVZ W8, 0x1
	0x03B7D1EC STRB W8, [X19 + 0x68]
	0x03B7D1F0 LDP X20, X19, [X31 + 0x20]
	0x03B7D1F4 LDP X22, X21, [X31 + 0x10]
	0x03B7D1F8 LDP X30, X23, [X31], #0x30
	0x03B7D1FC RET
	0x03B7D200 BL 0x1C16F20
	0x03B7D204 LDR V0, [X0 + 0x48]
	0x03B7D208 RET
	0x03B7D20C STR S0, [X0 + 0x48]
	0x03B7D210 RET
	0x03B7D214 STP X30, X19, [X31 - 0x10]!
	0x03B7D218 LDR X8, [X0]
	0x03B7D21C STRB W31, [X0 + 0x4C]
	0x03B7D220 MOV X19, X0
	0x03B7D224 LDP X9, X1, [X8 + 0x188]
	0x03B7D228 BLR X9
	0x03B7D22C LDR X8, [X19]
	0x03B7D230 MOV X0, X19
	0x03B7D234 LDP X9, X1, [X8 + 0x198]
	0x03B7D238 BLR X9
	0x03B7D23C MOV X0, X19
	0x03B7D240 BL 0x3B7D290
	0x03B7D244 LDR W8, [X19 + 0x38]
	0x03B7D248 CMP W8, 0x2
	0x03B7D24C B.CC 0x3B7D268
	0x03B7D250 B.EQ 0x3B7D278
	0x03B7D254 CMP W8, 0x3
	0x03B7D258 B.NE 0x3B7D288
	0x03B7D25C LDRB W8, [X19 + 0x4C]
	0x03B7D260 UBFM W8, W8, 0x1F, 0x1E
	0x03B7D264 B 0x3B7D284
	0x03B7D268 LDRB W8, [X19 + 0x4C]
	0x03B7D26C CBZ W8, 0x3B7D288
	0x03B7D270 MOVZ W8, 0x2
	0x03B7D274 B 0x3B7D284
	0x03B7D278 LDRB W8, [X19 + 0x4C]
	0x03B7D27C CBNZ W8, 0x3B7D288
	0x03B7D280 MOVZ W8, 0x3
	0x03B7D284 STR W8, [X19 + 0x38]
	0x03B7D288 LDP X30, X19, [X31], #0x10
	0x03B7D28C RET
	0x03B7D290 STR D8, [X31 - 0x20]!
	0x03B7D294 STR X30, [X31 + 0x8]
	0x03B7D298 STP X20, X19, [X31 + 0x10]
	0x03B7D29C ADRP X20, 0x865000
	0x03B7D2A0 LDRB W8, [X20 + 0xAA9]
	0x03B7D2A4 MOV V8.16B, V0.16B
	0x03B7D2A8 MOV X19, X0
	0x03B7D2AC TBNZ X8, 0x0, 0x3B7D2C4
	0x03B7D2B0 ADRP X0, 0x576000
	0x03B7D2B4 LDR X0, [X0 + 0x598]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0x866000
	010 Move X23, 0x57B000
	011 Move X20, 0x5DF000
	012 Move X21, 0x5CB000
	013 Move X22, 0x5DF000
	014 Move W8, [X24+2721]
	015 Move X23, [X23+992]
	016 Move X20, [X20+3440]
	017 Move X21, [X21+2048]
	018 Move X22, [X22+3448]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x57B000
	025 Move X0, [X0+992]
	026 Call 0x1C17CF4
	027 Move X0, 0x5DF000
	028 Move X0, [X0+3440]
	029 Call 0x1C17CF4
	030 Move X0, 0x5CB000
	031 Move X0, [X0+2048]
	032 Call 0x1C17CF4
	033 Move X0, 0x5DF000
	034 Move X0, [X0+3448]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2721], W8
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X1, [X20]
	041 Move X6, [X21]
	042 Move W2, W31
	043 Move X3, X31
	044 Move X4, X31
	045 Move X5, X31
	046 Move X7, X31
	047 Move X20, X0
	048 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	049 Add X0, X31, 24
	050 Move X1, X20
	051 Move X2, X31
	052 Move [X31+24], X31
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Call InputActionProperty..ctor, X0, X1
	056 Move X8, [X31+40]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move [X19+136], X8
	059 Move [X19+120], V0
	060 Move X0, [X23]
	061 Call 0x1C17F10
	062 Move X1, [X22]
	063 Move X6, [X21]
	064 Move W2, W31
	065 Move X3, X31
	066 Move X4, X31
	067 Move X5, X31
	068 Move X7, X31
	069 Move X20, X0
	070 Call InputAction..ctor, X0, X1, X2, X3, X4, X5, X6
	071 Add X0, X31, 0
	072 Move X1, X20
	073 Move X2, X31
	074 Move [X31], X31
	075 Move [X31+8], X31
	076 Move [X31+16], X31
	077 Call InputActionProperty..ctor, X0, X1
	078 Move V0, [X31]
	079 Move X8, [X31+16]
	080 Move W9, 0x3F800000
	081 Move W10, 1
	082 Move X0, X19
	083 Move X1, X31
	084 Move [X19+72], W9
	085 Move [X19+76], W10
	086 Move [X19+160], X8
	087 Move [X19+9], V0
	088 Move [X19+78], W10
	089 Call MonoBehaviour..ctor, X0
	090 Move X20, [X31+96]
	091 Move X19, [X31+104]
	092 Move X22, [X31+80]
	093 Move X21, [X31+88]
	094 Move X24, [X31+64]
	095 Move X23, [X31+72]
	096 Move X30, [X31+48]
	097 Add X31, X31, 112
	098 Return 

