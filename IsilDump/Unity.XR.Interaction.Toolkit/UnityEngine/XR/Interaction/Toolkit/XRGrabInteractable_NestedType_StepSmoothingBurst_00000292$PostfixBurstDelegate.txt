Type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/StepSmoothingBurst_00000292$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B4708C ADRP X0, 0x5AC000
	0x03B47090 LDR X0, [X0 + 0x598]
	0x03B47094 BL 0x1C16CF4
	0x03B47098 MOVZ W8, 0x1
	0x03B4709C STRB W8, [X21 + 0x89A]
	0x03B470A0 LDR X0, [X20]
	0x03B470A4 LDR X20, [X19 + 0x30]
	0x03B470A8 LDR W8, [X0 + 0xE0]
	0x03B470AC CBNZ W8, 0x3B470B4
	0x03B470B0 BL 0x1C16DFC
	0x03B470B4 MOV X0, X20
	0x03B470B8 MOV X1, X31
	0x03B470BC MOV X2, X31
	0x03B470C0 BL 0x3C3883C
	0x03B470C4 TBZ X0, 0x0, 0x3B470DC
	0x03B470C8 MOV X0, X19
	0x03B470CC MOV X1, X31
	0x03B470D0 BL 0x3C32ECC
	0x03B470D4 BL 0x3B470EC
	0x03B470D8 STR X0, [X19 + 0x30]
	0x03B470DC MOV X0, X19
	0x03B470E0 LDP X20, X19, [X31 + 0x10]
	0x03B470E4 LDP X30, X21, [X31], #0x20
	0x03B470E8 B 0x3B469B8
	0x03B470EC STR X30, [X31 - 0x40]!
	0x03B470F0 STP X24, X23, [X31 + 0x10]
	0x03B470F4 STP X22, X21, [X31 + 0x20]
	0x03B470F8 STP X20, X19, [X31 + 0x30]
	0x03B470FC ADRP X20, 0x89B000
	0x03B47100 LDRB W8, [X20 + 0x89F]
	0x03B47104 MOV X19, X0
	0x03B47108 TBNZ X8, 0x0, 0x3B4712C
	0x03B4710C ADRP X0, 0x613000
	0x03B47110 LDR X0, [X0 + 0x908]
	0x03B47114 BL 0x1C16CF4
	0x03B47118 ADRP X0, 0x5AC000
	0x03B4711C LDR X0, [X0 + 0x598]
	0x03B47120 BL 0x1C16CF4
	0x03B47124 MOVZ W8, 0x1
	0x03B47128 STRB W8, [X20 + 0x89F]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -32804864
	021 Add X8, X8, 2308
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -32804864
	024 Add X8, X8, 2260
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -32804864
	033 Add X8, X8, 2016
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50507776
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(ref UnityEngine.Pose targetPose, ref UnityEngine.Vector3 targetLocalScale, in UnityEngine.Pose rawTargetPose, in UnityEngine.Vector3 rawTargetLocalScale, System.Single deltaTime, System.Boolean smoothPos, System.Single smoothPosAmount, System.Single tightenPos, System.Boolean smoothRot, System.Single smoothRotAmount, System.Single tightenRot, System.Boolean smoothScale, System.Single smoothScaleAmount, System.Single tightenScale)

Disassembly:
	0x03B4712C CBZ X19, 0x3B471FC
	0x03B47130 ADRP X8, 0x613000
	0x03B47134 LDR X8, [X8 + 0x908]
	0x03B47138 MOV X0, X19
	0x03B4713C LDR X1, [X8]
	0x03B47140 BL 0x21E5C40
	0x03B47144 CBZ X0, 0x3B471FC
	0x03B47148 LDR X8, [X0 + 0x18]
	0x03B4714C MOV X19, X0

ISIL:
	001 Move X8, [X0+64]
	002 Move X9, [X0+24]
	003 Move X10, [X0+40]
	004 And W5, W5, 1
	005 And W6, W6, 1
	006 And W7, W7, 1
	007 Move X0, X8
	008 Move [X31], X10
	009 CallNoReturn X9

Method: System.IAsyncResult BeginInvoke(ref UnityEngine.Pose targetPose, ref UnityEngine.Vector3 targetLocalScale, in UnityEngine.Pose rawTargetPose, in UnityEngine.Vector3 rawTargetLocalScale, System.Single deltaTime, System.Boolean smoothPos, System.Single smoothPosAmount, System.Single tightenPos, System.Boolean smoothRot, System.Single smoothRotAmount, System.Single tightenRot, System.Boolean smoothScale, System.Single smoothScaleAmount, System.Single tightenScale, System.AsyncCallback param_14, System.Object param_15)

Disassembly:
	0x03B47150 CMP W8, 0x1
	0x03B47154 B.LT 0x3B471DC
	0x03B47158 ADRP X23, 0x5AC000
	0x03B4715C LDR X23, [X23 + 0x598]
	0x03B47160 MOV X20, X31
	0x03B47164 MOV X22, X31
	0x03B47168 AND X8, X8, 0x0
	0x03B4716C ADD X24, X19, 0x20
	0x03B47170 CMP X22, W8, UXTW
	0x03B47174 B.CS 0x3B471F8
	0x03B47178 LDR X21, [X24, X22, LSL #3]
	0x03B4717C MOV X0, X21
	0x03B47180 BL 0x3B47420
	0x03B47184 TBZ X0, 0x0, 0x3B471C4
	0x03B47188 CBZ X21, 0x3B471FC
	0x03B4718C MOV X0, X21
	0x03B47190 MOV X1, X31
	0x03B47194 BL 0x3C8F78C
	0x03B47198 TBNZ X0, 0x0, 0x3B471E0
	0x03B4719C LDR X0, [X23]
	0x03B471A0 LDR W8, [X0 + 0xE0]
	0x03B471A4 CBNZ W8, 0x3B471AC
	0x03B471A8 BL 0x1C16DFC
	0x03B471AC MOV X0, X20
	0x03B471B0 MOV X1, X31
	0x03B471B4 MOV X2, X31
	0x03B471B8 BL 0x3C3883C
	0x03B471BC ANDS W31, W0, 0x1
	0x03B471C0 CSEL X20, X21, X20, NE
	0x03B471C4 LDR W8, [X19 + 0x18]
	0x03B471C8 ADD X22, X22, 0x1
	0x03B471CC MOV X21, X20
	0x03B471D0 CMP X22, W8, SXTW
	0x03B471D4 B.LT 0x3B47170
	0x03B471D8 B 0x3B471E0
	0x03B471DC MOV X21, X31
	0x03B471E0 MOV X0, X21
	0x03B471E4 LDP X20, X19, [X31 + 0x30]
	0x03B471E8 LDP X22, X21, [X31 + 0x20]
	0x03B471EC LDP X24, X23, [X31 + 0x10]
	0x03B471F0 LDR X30, [X31], #0x40
	0x03B471F4 RET
	0x03B471F8 BL 0x1C16F28
	0x03B471FC BL 0x1C16F20
	0x03B47200 STP X30, X21, [X31 - 0x20]!
	0x03B47204 STP X20, X19, [X31 + 0x10]
	0x03B47208 ADRP X21, 0x89B000
	0x03B4720C ADRP X20, 0x5AC000
	0x03B47210 LDRB W8, [X21 + 0x89B]
	0x03B47214 LDR X20, [X20 + 0x598]
	0x03B47218 MOV X19, X0
	0x03B4721C TBNZ X8, 0x0, 0x3B4724C
	0x03B47220 ADRP X0, 0x613000
	0x03B47224 LDR X0, [X0 + 0x910]
	0x03B47228 BL 0x1C16CF4
	0x03B4722C ADRP X0, 0x613000
	0x03B47230 LDR X0, [X0 + 0x8D8]
	0x03B47234 BL 0x1C16CF4
	0x03B47238 ADRP X0, 0x5AC000
	0x03B4723C LDR X0, [X0 + 0x598]
	0x03B47240 BL 0x1C16CF4
	0x03B47244 MOVZ W8, 0x1
	0x03B47248 STRB W8, [X21 + 0x89B]
	0x03B4724C MOV X0, X19
	0x03B47250 BL 0x3B472D8
	0x03B47254 MOV X0, X19
	0x03B47258 BL 0x3B4663C
	0x03B4725C LDR X0, [X20]
	0x03B47260 LDR X20, [X19 + 0x28]
	0x03B47264 LDR W8, [X0 + 0xE0]
	0x03B47268 CBNZ W8, 0x3B47270
	0x03B4726C BL 0x1C16DFC
	0x03B47270 MOV X0, X20
	0x03B47274 MOV X1, X31
	0x03B47278 MOV X2, X31
	0x03B4727C BL 0x3C354F8
	0x03B47280 TBZ X0, 0x0, 0x3B472A4
	0x03B47284 ADRP X8, 0x613000
	0x03B47288 LDR X0, [X19 + 0x28]
	0x03B4728C LDR X8, [X8 + 0x8D8]
	0x03B47290 LDR X1, [X8]
	0x03B47294 BL 0x1C16E00
	0x03B47298 CBZ X0, 0x3B472A4
	0x03B4729C MOV X1, X0
	0x03B472A0 B 0x3B472C8
	0x03B472A4 LDR X1, [X19 + 0x48]
	0x03B472A8 CBNZ X1, 0x3B472C8
	0x03B472AC ADRP X8, 0x613000
	0x03B472B0 LDR X8, [X8 + 0x910]
	0x03B472B4 MOV X0, X19
	0x03B472B8 LDR X1, [X8]
	0x03B472BC BL 0x21A3F50
	0x03B472C0 MOV X1, X0
	0x03B472C4 STR X0, [X19 + 0x48]
	0x03B472C8 MOV X0, X19
	0x03B472CC LDP X20, X19, [X31 + 0x10]
	0x03B472D0 LDP X30, X21, [X31], #0x20
	0x03B472D4 B 0x3B4676C
	0x03B472D8 STP X30, X21, [X31 - 0x20]!
	0x03B472DC STP X20, X19, [X31 + 0x10]
	0x03B472E0 ADRP X21, 0x89B000
	0x03B472E4 ADRP X20, 0x5AC000
	0x03B472E8 LDRB W8, [X21 + 0x89C]
	0x03B472EC LDR X20, [X20 + 0x598]
	0x03B472F0 MOV X19, X0
	0x03B472F4 TBNZ X8, 0x0, 0x3B47318
	0x03B472F8 ADRP X0, 0x613000
	0x03B472FC LDR X0, [X0 + 0x2E8]
	0x03B47300 BL 0x1C16CF4
	0x03B47304 ADRP X0, 0x5AC000
	0x03B47308 LDR X0, [X0 + 0x598]
	0x03B4730C BL 0x1C16CF4
	0x03B47310 MOVZ W8, 0x1
	0x03B47314 STRB W8, [X21 + 0x89C]
	0x03B47318 LDR X0, [X20]
	0x03B4731C LDR X20, [X19 + 0x20]
	0x03B47320 LDR W8, [X0 + 0xE0]
	0x03B47324 CBNZ W8, 0x3B4732C
	0x03B47328 BL 0x1C16DFC
	0x03B4732C MOV X0, X20
	0x03B47330 MOV X1, X31
	0x03B47334 MOV X2, X31
	0x03B47338 BL 0x3C354F8
	0x03B4733C TBNZ X0, 0x0, 0x3B47354
	0x03B47340 ADRP X8, 0x613000
	0x03B47344 LDR X8, [X8 + 0x2E8]
	0x03B47348 LDR X0, [X8]
	0x03B4734C BL 0x295F6C8
	0x03B47350 STR X0, [X19 + 0x20]
	0x03B47354 LDP X20, X19, [X31 + 0x10]
	0x03B47358 LDP X30, X21, [X31], #0x20
	0x03B4735C RET
	0x03B47360 STP X30, X19, [X31 - 0x10]!
	0x03B47364 MOV X19, X0
	0x03B47368 BL 0x3B46934
	0x03B4736C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X21, [X31+272]
	015 Move X8, [X31+280]
	016 And W9, W6, 1
	017 And W10, W7, 1
	018 Move [X31+172], S0
	019 Move [X31+8], X8
	020 And W8, W5, 1
	021 Move [X31+160], S2
	022 Move [X31+168], S1
	023 Move [X31+148], S4
	024 Move [X31+156], S3
	025 Move [X31+136], S6
	026 Move [X31+144], S5
	027 Move X19, 0x89C000
	028 Move [X31+168], W8
	029 Move [X31+156], W9
	030 Move [X31+144], W10
	031 Move X29, 0x5D5000
	032 Move X28, 0x5AD000
	033 Move X26, 0x5AD000
	034 Move X27, 0x5AD000
	035 Move W8, [X19+2192]
	036 Move X29, [X29+1552]
	037 Move X28, [X28+1440]
	038 Move X26, [X26+2704]
	039 Move X27, [X27+2904]
	040 Move X22, X4
	041 Move X23, X3
	042 Move X24, X2
	043 Move X25, X1
	044 Move X20, X0
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {63}
	049 Move X0, 0x5AD000
	050 Move X0, [X0+2904]
	051 Call 0x1C17CF4
	052 Move X0, 0x5D5000
	053 Move X0, [X0+1552]
	054 Call 0x1C17CF4
	055 Move X0, 0x5AD000
	056 Move X0, [X0+2704]
	057 Call 0x1C17CF4
	058 Move X0, 0x5AD000
	059 Move X0, [X0+1440]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X19+2192], W8
	063 Move X0, [X29]
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Move X1, X25
	066 Move [X31+128], X31
	067 Move [X31+96], V0
	068 Move [X31+104], V0
	069 Move [X31+64], V0
	070 Move [X31+72], V0
	071 Move [X31+3], V0
	072 Call 0x1C17E04
	073 Move X8, [X28]
	074 Move [X31+16], X0
	075 Move X1, X24
	076 Move X0, X8
	077 Call 0x1C17E04
	078 Move X8, [X29]
	079 Move [X31+24], X0
	080 Move X1, X23
	081 Move X0, X8
	082 Call 0x1C17E04
	083 Move X8, [X28]
	084 Move [X31+32], X0
	085 Move X1, X22
	086 Move X0, X8
	087 Call 0x1C17E04
	088 Move X8, [X26]
	089 Move [X31+40], X0
	090 Add X1, X31, 172
	091 Move X0, X8
	092 Call 0x1C17E04
	093 Move X8, [X27]
	094 Move [X31+48], X0
	095 Add X1, X31, 168
	096 Move X0, X8
	097 Call 0x1C17E04
	098 Move X8, [X26]
	099 Move [X31+56], X0
	100 Add X1, X31, 164
	101 Move X0, X8
	102 Call 0x1C17E04
	103 Move X8, [X26]
	104 Move [X31+64], X0
	105 Add X1, X31, 160
	106 Move X0, X8
	107 Call 0x1C17E04
	108 Move X8, [X27]
	109 Move [X31+72], X0
	110 Add X1, X31, 156
	111 Move X0, X8
	112 Call 0x1C17E04
	113 Move X8, [X26]
	114 Move [X31+80], X0
	115 Add X1, X31, 152
	116 Move X0, X8
	117 Call 0x1C17E04
	118 Move X8, [X26]
	119 Move [X31+88], X0
	120 Add X1, X31, 148
	121 Move X0, X8
	122 Call 0x1C17E04
	123 Move X8, [X27]
	124 Move [X31+96], X0
	125 Add X1, X31, 144
	126 Move X0, X8
	127 Call 0x1C17E04
	128 Move X8, [X26]
	129 Move [X31+104], X0
	130 Add X1, X31, 140
	131 Move X0, X8
	132 Call 0x1C17E04
	133 Move X8, [X26]
	134 Move [X31+112], X0
	135 Add X1, X31, 136
	136 Move X0, X8
	137 Call 0x1C17E04
	138 Move X3, [X31+8]
	139 Move [X31+120], X0
	140 Add X1, X31, 16
	141 Move X0, X20
	142 Move X2, X21
	143 Call 0x1C17CB0
	144 Move X20, [X31+256]
	145 Move X19, [X31+264]
	146 Move X22, [X31+240]
	147 Move X21, [X31+248]
	148 Move X24, [X31+224]
	149 Move X23, [X31+232]
	150 Move X26, [X31+208]
	151 Move X25, [X31+216]
	152 Move X28, [X31+192]
	153 Move X27, [X31+200]
	154 Move X29, [X31+176]
	155 Move X30, [X31+184]
	156 Add X31, X31, 272
	157 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B47370 MOV X1, X31
	0x03B47374 BL 0x3B46CB0
	0x03B47378 MOV X0, X19

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

