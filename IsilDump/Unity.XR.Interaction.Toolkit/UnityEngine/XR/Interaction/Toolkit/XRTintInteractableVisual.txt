Type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual

Method: UnityEngine.Color get_tintColor()

Disassembly:
	0x03B3982C MOV X0, X22
	0x03B39830 BL 0x1C16F18
	0x03B39834 BL 0x1C16F20

ISIL:
	001 Move S0, [X0+32]
	002 Move S1, [X0+36]
	003 Move S2, [X0+40]
	004 Move S3, [X0+44]
	005 Return X0

Method: System.Void set_tintColor(UnityEngine.Color value)

Disassembly:
	0x03B39838 BL 0x1C16F20
	0x03B3983C MOV X19, X1
	0x03B39840 MOV X20, X0

ISIL:
	001 Move [X0+32], S0
	002 Move [X0+40], S1
	003 Move [X0+40], S2
	004 Move [X0+48], S3
	005 Return 

Method: System.Boolean get_tintOnHover()

Disassembly:
	0x03B39844 B 0x3B397F4
	0x03B39848 B 0x3B39890

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_tintOnHover(System.Boolean value)

Disassembly:
	0x03B3984C B 0x3B39890
	0x03B39850 B 0x3B39890
	0x03B39854 B 0x3B39890

ISIL:
	001 And W8, W1, 1
	002 Move [X0+48], W8
	003 Return 

Method: System.Boolean get_tintOnSelection()

Disassembly:
	0x03B39858 B 0x3B39890
	0x03B3985C B 0x3B39890

ISIL:
	001 Move W0, [X0+49]
	002 Return X0

Method: System.Void set_tintOnSelection(System.Boolean value)

Disassembly:
	0x03B39860 B 0x3B39890
	0x03B39864 B 0x3B39890
	0x03B39868 B 0x3B39890

ISIL:
	001 And W8, W1, 1
	002 Move [X0+49], W8
	003 Return 

Method: System.Collections.Generic.List`1<UnityEngine.Renderer> get_tintRenderers()

Disassembly:
	0x03B3986C B 0x3B39890
	0x03B39870 B 0x3B39890

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_tintRenderers(System.Collections.Generic.List`1<UnityEngine.Renderer> value)

Disassembly:
	0x03B39874 B 0x3B39890
	0x03B39878 B 0x3B39890

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x03B3987C B 0x3B39890
	0x03B39880 B 0x3B39890
	0x03B39884 B 0x3B39890
	0x03B39888 B 0x3B39890
	0x03B3988C B 0x3B39890
	0x03B39890 CMP W1, 0x1
	0x03B39894 B.NE 0x3B398C4
	0x03B39898 BL 0x3EB1AD0
	0x03B3989C LDR X19, [X0]
	0x03B398A0 BL 0x3EB1AE0
	0x03B398A4 ADRP X8, 0x620000
	0x03B398A8 LDR X8, [X8 + 0xBB8]
	0x03B398AC ADD X0, X31, 0x40
	0x03B398B0 LDR X1, [X8]
	0x03B398B4 BL 0x2BC434C
	0x03B398B8 CBZ X19, 0x3B397BC
	0x03B398BC MOV X0, X19
	0x03B398C0 BL 0x1C16F18
	0x03B398C4 MOV X20, X0
	0x03B398C8 MOV X19, X31
	0x03B398CC B 0x3B398D4
	0x03B398D0 MOV X20, X0
	0x03B398D4 ADRP X8, 0x620000
	0x03B398D8 LDR X8, [X8 + 0xBB8]
	0x03B398DC LDR X1, [X8]
	0x03B398E0 ADD X0, X31, 0x40
	0x03B398E4 BL 0x2BC434C
	0x03B398E8 CBNZ X19, 0x3B398F4
	0x03B398EC MOV X0, X20
	0x03B398F0 BL 0x1D2C690
	0x03B398F4 MOV X0, X19
	0x03B398F8 BL 0x1C16F18
	0x03B398FC BL 0x1990590
	0x03B39900 SUB X31, X31, 0xC0
	0x03B39904 STR X30, [X31 + 0x60]
	0x03B39908 STP X28, X27, [X31 + 0x70]
	0x03B3990C STP X26, X25, [X31 + 0x80]
	0x03B39910 STP X24, X23, [X31 + 0x90]
	0x03B39914 STP X22, X21, [X31 + 0xA0]
	0x03B39918 STP X20, X19, [X31 + 0xB0]
	0x03B3991C ADRP X20, 0x8A9000
	0x03B39920 LDRB W8, [X20 + 0x818]
	0x03B39924 MOV X19, X0
	0x03B39928 TBNZ X8, 0x0, 0x3B399C4
	0x03B3992C ADRP X0, 0x621000
	0x03B39930 LDR X0, [X0 + 0x210]
	0x03B39934 BL 0x1C16CF4
	0x03B39938 ADRP X0, 0x620000
	0x03B3993C LDR X0, [X0 + 0xBB8]
	0x03B39940 BL 0x1C16CF4
	0x03B39944 ADRP X0, 0x620000
	0x03B39948 LDR X0, [X0 + 0xBC0]
	0x03B3994C BL 0x1C16CF4
	0x03B39950 ADRP X0, 0x621000
	0x03B39954 LDR X0, [X0 + 0x218]
	0x03B39958 BL 0x1C16CF4
	0x03B3995C ADRP X0, 0x621000
	0x03B39960 LDR X0, [X0 + 0x220]
	0x03B39964 BL 0x1C16CF4
	0x03B39968 ADRP X0, 0x620000
	0x03B3996C LDR X0, [X0 + 0xBC8]
	0x03B39970 BL 0x1C16CF4
	0x03B39974 ADRP X0, 0x614000
	0x03B39978 LDR X0, [X0 + 0xF38]
	0x03B3997C BL 0x1C16CF4
	0x03B39980 ADRP X0, 0x620000
	0x03B39984 LDR X0, [X0 + 0xBD0]
	0x03B39988 BL 0x1C16CF4
	0x03B3998C ADRP X0, 0x621000
	0x03B39990 LDR X0, [X0 + 0x228]
	0x03B39994 BL 0x1C16CF4
	0x03B39998 ADRP X0, 0x5BA000
	0x03B3999C LDR X0, [X0 + 0x598]
	0x03B399A0 BL 0x1C16CF4
	0x03B399A4 ADRP X0, 0x621000
	0x03B399A8 LDR X0, [X0 + 0x238]
	0x03B399AC BL 0x1C16CF4
	0x03B399B0 ADRP X0, 0x5BF000
	0x03B399B4 LDR X0, [X0 + 0x250]
	0x03B399B8 BL 0x1C16CF4
	0x03B399BC MOVZ W8, 0x1
	0x03B399C0 STRB W8, [X20 + 0x818]
	0x03B399C4 STP X31, X31, [X31 + 0x40]
	0x03B399C8 STR X31, [X31 + 0x50]
	0x03B399CC STP X31, X31, [X31 + 0x20]
	0x03B399D0 STR X31, [X31 + 0x30]
	0x03B399D4 LDR X0, [X19 + 0x38]
	0x03B399D8 CBZ X0, 0x3B39C70
	0x03B399DC ADRP X8, 0x620000
	0x03B399E0 LDR X8, [X8 + 0xBD0]
	0x03B399E4 ADRP X23, 0x620000
	0x03B399E8 ADRP X24, 0x5BA000
	0x03B399EC ADRP X20, 0x621000
	0x03B399F0 ADRP X25, 0x621000
	0x03B399F4 ADRP X26, 0x621000
	0x03B399F8 LDR X23, [X23 + 0xBC0]
	0x03B399FC LDR X24, [X24 + 0x598]
	0x03B39A00 LDR X20, [X20 + 0x238]
	0x03B39A04 LDR X25, [X25 + 0x228]
	0x03B39A08 LDR X26, [X26 + 0x218]
	0x03B39A0C LDR X1, [X8]
	0x03B39A10 ADRP X27, 0x5BF000
	0x03B39A14 ADRP X22, 0x621000
	0x03B39A18 ADRP X21, 0x620000
	0x03B39A1C LDR X27, [X27 + 0x250]
	0x03B39A20 LDR X22, [X22 + 0x210]
	0x03B39A24 LDR X21, [X21 + 0xBB8]
	0x03B39A28 ADD X8, X31, 0x8
	0x03B39A2C BL 0x301CB58
	0x03B39A30 LDUR V0, [X31 + 0x8]
	0x03B39A34 LDR X8, [X31 + 0x18]
	0x03B39A38 STR V0, [X31 + 0x4]
	0x03B39A3C STR X8, [X31 + 0x50]
	0x03B39A40 LDR X1, [X23]
	0x03B39A44 ADD X0, X31, 0x40
	0x03B39A48 BL 0x2BC4350
	0x03B39A4C TBZ X0, 0x0, 0x3B39BAC
	0x03B39A50 LDR X0, [X24]
	0x03B39A54 LDR X19, [X31 + 0x50]
	0x03B39A58 LDR W8, [X0 + 0xE0]
	0x03B39A5C CBNZ W8, 0x3B39A64
	0x03B39A60 BL 0x1C16DFC
	0x03B39A64 MOV X0, X19
	0x03B39A68 MOV X1, X31
	0x03B39A6C MOV X2, X31
	0x03B39A70 BL 0x3C3883C
	0x03B39A74 TBNZ X0, 0x0, 0x3B39A40
	0x03B39A78 LDR X0, [X20]
	0x03B39A7C LDR W8, [X0 + 0xE0]
	0x03B39A80 CBNZ W8, 0x3B39A88
	0x03B39A84 BL 0x1C16DFC
	0x03B39A88 CBZ X19, 0x3B39C60
	0x03B39A8C LDR X8, [X20]
	0x03B39A90 LDR X8, [X8 + 0xB8]
	0x03B39A94 LDR X1, [X8]
	0x03B39A98 MOV X0, X19
	0x03B39A9C MOV X2, X31
	0x03B39AA0 BL 0x3C1368C
	0x03B39AA4 LDR X8, [X20]
	0x03B39AA8 LDR X8, [X8 + 0xB8]
	0x03B39AAC LDR X0, [X8]
	0x03B39AB0 CBZ X0, 0x3B39C64
	0x03B39AB4 LDR X1, [X25]
	0x03B39AB8 ADD X8, X31, 0x8
	0x03B39ABC BL 0x301CB58
	0x03B39AC0 LDUR V0, [X31 + 0x8]
	0x03B39AC4 LDR X8, [X31 + 0x18]
	0x03B39AC8 STR V0, [X31 + 0x2]
	0x03B39ACC STR X8, [X31 + 0x30]
	0x03B39AD0 LDR X1, [X26]
	0x03B39AD4 ADD X0, X31, 0x20
	0x03B39AD8 BL 0x2BC4350
	0x03B39ADC TBZ X0, 0x0, 0x3B39B48
	0x03B39AE0 LDR X0, [X31 + 0x30]
	0x03B39AE4 CBZ X0, 0x3B39B70
	0x03B39AE8 LDR X1, [X27]
	0x03B39AEC MOV X2, X31
	0x03B39AF0 BL 0x3C14EC4
	0x03B39AF4 TBNZ X0, 0x0, 0x3B39AD0
	0x03B39AF8 LDR X0, [X20]
	0x03B39AFC LDR W8, [X0 + 0xE0]
	0x03B39B00 CBNZ W8, 0x3B39B0C
	0x03B39B04 BL 0x1C16DFC
	0x03B39B08 LDR X0, [X20]
	0x03B39B0C LDR X8, [X0 + 0xB8]
	0x03B39B10 LDR X8, [X8]
	0x03B39B14 CBZ X8, 0x3B39B78
	0x03B39B18 LDP W2, W9, [X8 + 0x18]
	0x03B39B1C ADD W9, W9, 0x1
	0x03B39B20 CMP W2, 0x1
	0x03B39B24 STP W31, W9, [X8 + 0x18]
	0x03B39B28 B.LT 0x3B39B3C
	0x03B39B2C LDR X0, [X8 + 0x10]
	0x03B39B30 MOV W1, W31
	0x03B39B34 MOV X3, X31
	0x03B39B38 BL 0x339FA34
	0x03B39B3C MOV X19, X31
	0x03B39B40 MOVZ W28, 0x6
	0x03B39B44 B 0x3B39B50
	0x03B39B48 MOV X19, X31
	0x03B39B4C MOVZ W28, 0x2
	0x03B39B50 LDR X1, [X22]
	0x03B39B54 ADD X0, X31, 0x20
	0x03B39B58 BL 0x2BC434C
	0x03B39B5C CBNZ X19, 0x3B39C68
	0x03B39B60 ORR W8, W28, 0x2
	0x03B39B64 CMP W8, 0x2
	0x03B39B68 B.EQ 0x3B39A40
	0x03B39B6C B 0x3B39C20
	0x03B39B70 BL 0x1C16F20
	0x03B39B74 B 0x3B39C74
	0x03B39B78 BL 0x1C16F20
	0x03B39B7C B 0x3B39C74
	0x03B39B80 B 0x3B39B90
	0x03B39B84 B 0x3B39B90
	0x03B39B88 B 0x3B39B90
	0x03B39B8C B 0x3B39B90
	0x03B39B90 CMP W1, 0x1
	0x03B39B94 B.NE 0x3B39C34
	0x03B39B98 BL 0x3EB1AD0
	0x03B39B9C LDR X19, [X0]
	0x03B39BA0 BL 0x3EB1AE0
	0x03B39BA4 MOV W28, W31
	0x03B39BA8 B 0x3B39B50
	0x03B39BAC LDR X1, [X21]
	0x03B39BB0 ADD X0, X31, 0x40
	0x03B39BB4 BL 0x2BC434C
	0x03B39BB8 LDR X0, [X20]
	0x03B39BBC LDR W8, [X0 + 0xE0]
	0x03B39BC0 CBNZ W8, 0x3B39BCC
	0x03B39BC4 BL 0x1C16DFC
	0x03B39BC8 LDR X0, [X20]
	0x03B39BCC LDR X8, [X0 + 0xB8]
	0x03B39BD0 LDR X8, [X8]
	0x03B39BD4 CBZ X8, 0x3B39C70
	0x03B39BD8 LDP W2, W9, [X8 + 0x18]
	0x03B39BDC ADD W9, W9, 0x1
	0x03B39BE0 CMP W2, 0x1
	0x03B39BE4 STP W31, W9, [X8 + 0x18]
	0x03B39BE8 B.LT 0x3B39BFC
	0x03B39BEC LDR X0, [X8 + 0x10]
	0x03B39BF0 MOV W1, W31
	0x03B39BF4 MOV X3, X31
	0x03B39BF8 BL 0x339FA34
	0x03B39BFC MOVZ W0, 0x1
	0x03B39C00 LDP X20, X19, [X31 + 0xB0]
	0x03B39C04 LDP X22, X21, [X31 + 0xA0]
	0x03B39C08 LDP X24, X23, [X31 + 0x90]
	0x03B39C0C LDP X26, X25, [X31 + 0x80]
	0x03B39C10 LDP X28, X27, [X31 + 0x70]
	0x03B39C14 LDR X30, [X31 + 0x60]
	0x03B39C18 ADD X31, X31, 0xC0
	0x03B39C1C RET
	0x03B39C20 LDR X1, [X21]
	0x03B39C24 ADD X0, X31, 0x40
	0x03B39C28 BL 0x2BC434C
	0x03B39C2C MOV W0, W31
	0x03B39C30 B 0x3B39C00
	0x03B39C34 STR X1, [X31]
	0x03B39C38 STR X0, [X31 + 0x68]
	0x03B39C3C MOV X19, X31
	0x03B39C40 LDR X1, [X22]
	0x03B39C44 ADD X0, X31, 0x20
	0x03B39C48 BL 0x2BC434C
	0x03B39C4C LDR X0, [X31 + 0x68]
	0x03B39C50 LDR X1, [X31]
	0x03B39C54 CBZ X19, 0x3B39CA4
	0x03B39C58 MOV X0, X19
	0x03B39C5C BL 0x1C16F18
	0x03B39C60 BL 0x1C16F20
	0x03B39C64 BL 0x1C16F20
	0x03B39C68 MOV X0, X19
	0x03B39C6C BL 0x1C16F18
	0x03B39C70 BL 0x1C16F20
	0x03B39C74 STR X1, [X31]
	0x03B39C78 STR X0, [X31 + 0x68]
	0x03B39C7C B 0x3B39C40
	0x03B39C80 B 0x3B39CA4
	0x03B39C84 B 0x3B39CA4
	0x03B39C88 B 0x3B39CA4
	0x03B39C8C B 0x3B39CA4
	0x03B39C90 B 0x3B39CA4
	0x03B39C94 B 0x3B39CA4
	0x03B39C98 B 0x3B39CA4
	0x03B39C9C B 0x3B39CA4
	0x03B39CA0 B 0x3B39CA4
	0x03B39CA4 CMP W1, 0x1
	0x03B39CA8 B.NE 0x3B39CD0
	0x03B39CAC BL 0x3EB1AD0
	0x03B39CB0 LDR X19, [X0]
	0x03B39CB4 BL 0x3EB1AE0
	0x03B39CB8 LDR X1, [X21]
	0x03B39CBC ADD X0, X31, 0x40
	0x03B39CC0 BL 0x2BC434C
	0x03B39CC4 CBZ X19, 0x3B39BB8
	0x03B39CC8 MOV X0, X19
	0x03B39CCC BL 0x1C16F18
	0x03B39CD0 STR X0, [X31 + 0x68]
	0x03B39CD4 MOV X19, X31
	0x03B39CD8 B 0x3B39CE0
	0x03B39CDC STR X0, [X31 + 0x68]
	0x03B39CE0 LDR X1, [X21]
	0x03B39CE4 ADD X0, X31, 0x40
	0x03B39CE8 BL 0x2BC434C
	0x03B39CEC CBNZ X19, 0x3B39CF8
	0x03B39CF0 LDR X0, [X31 + 0x68]
	0x03B39CF4 BL 0x1D2C690
	0x03B39CF8 MOV X0, X19
	0x03B39CFC BL 0x1C16F18
	0x03B39D00 BL 0x1990590
	0x03B39D04 LDRB W8, [X0 + 0x30]
	0x03B39D08 CBZ W8, 0x3B39D1C
	0x03B39D0C LDR X8, [X0]
	0x03B39D10 MOVZ W1, 0x1
	0x03B39D14 LDP X3, X2, [X8 + 0x178]
	0x03B39D18 BR X3
	0x03B39D1C RET
	0x03B39D20 STP X30, X21, [X31 - 0x20]!
	0x03B39D24 STP X20, X19, [X31 + 0x10]
	0x03B39D28 ADRP X19, 0x8A9000
	0x03B39D2C LDRB W8, [X19 + 0x819]
	0x03B39D30 MOV X20, X0
	0x03B39D34 TBNZ X8, 0x0, 0x3B39D4C
	0x03B39D38 ADRP X0, 0x621000
	0x03B39D3C LDR X0, [X0 + 0x160]
	0x03B39D40 BL 0x1C16CF4
	0x03B39D44 MOVZ W8, 0x1
	0x03B39D48 STRB W8, [X19 + 0x819]
	0x03B39D4C LDRB W8, [X20 + 0x30]
	0x03B39D50 CBZ W8, 0x3B39DB4
	0x03B39D54 LDRB W8, [X20 + 0x31]
	0x03B39D58 CBZ W8, 0x3B39DC0
	0x03B39D5C LDR X19, [X20 + 0x50]
	0x03B39D60 CMP X19, 0x0
	0x03B39D64 CSEL X21, X31, X20, EQ
	0x03B39D68 CBZ X19, 0x3B39DC8
	0x03B39D6C ADRP X10, 0x621000
	0x03B39D70 LDR X8, [X19]
	0x03B39D74 LDR X10, [X10 + 0x160]
	0x03B39D78 LDRH W9, [X8 + 0x12E]
	0x03B39D7C LDR X1, [X10]
	0x03B39D80 CBZ X9, 0x3B39DA4
	0x03B39D84 LDR X10, [X8 + 0xB0]
	0x03B39D88 ADD X10, X10, 0x8
	0x03B39D8C LDUR X11, [X10 - 0x8]
	0x03B39D90 CMP X11, X1
	0x03B39D94 B.EQ 0x3B39DD0
	0x03B39D98 SUBS X9, X9, 0x1
	0x03B39D9C ADD X10, X10, 0x10
	0x03B39DA0 B.NE 0x3B39D8C
	0x03B39DA4 MOVZ W2, 0x6
	0x03B39DA8 MOV X0, X19
	0x03B39DAC BL 0x1C5C788
	0x03B39DB0 B 0x3B39DE0
	0x03B39DB4 LDP X20, X19, [X31 + 0x10]
	0x03B39DB8 LDP X30, X21, [X31], #0x20
	0x03B39DBC RET
	0x03B39DC0 MOV W0, W31
	0x03B39DC4 B 0x3B39DF4
	0x03B39DC8 MOV W0, W31
	0x03B39DCC B 0x3B39DF0
	0x03B39DD0 LDR W9, [X10]
	0x03B39DD4 ADD W9, W9, 0x6
	0x03B39DD8 ADD X8, X8, W9, 0x4, SXTW
	0x03B39DDC ADD X0, X8, 0x138
	0x03B39DE0 LDP X8, X1, [X0]
	0x03B39DE4 MOV X0, X19
	0x03B39DE8 BLR X8
	0x03B39DEC MOV X20, X21
	0x03B39DF0 CBZ X20, 0x3B39E10
	0x03B39DF4 LDR X8, [X20]
	0x03B39DF8 AND W1, W0, 0x1
	0x03B39DFC MOV X0, X20
	0x03B39E00 LDP X20, X19, [X31 + 0x10]
	0x03B39E04 LDP X3, X2, [X8 + 0x178]
	0x03B39E08 LDP X30, X21, [X31], #0x20
	0x03B39E0C BR X3
	0x03B39E10 BL 0x1C16F20
	0x03B39E14 LDRB W8, [X0 + 0x31]
	0x03B39E18 CBZ W8, 0x3B39E2C
	0x03B39E1C LDR X8, [X0]
	0x03B39E20 MOVZ W1, 0x1
	0x03B39E24 LDP X3, X2, [X8 + 0x178]
	0x03B39E28 BR X3
	0x03B39E2C RET
	0x03B39E30 STP X30, X21, [X31 - 0x20]!
	0x03B39E34 STP X20, X19, [X31 + 0x10]
	0x03B39E38 ADRP X19, 0x8A9000
	0x03B39E3C LDRB W8, [X19 + 0x81A]
	0x03B39E40 MOV X20, X0
	0x03B39E44 TBNZ X8, 0x0, 0x3B39E5C
	0x03B39E48 ADRP X0, 0x621000
	0x03B39E4C LDR X0, [X0 + 0x148]
	0x03B39E50 BL 0x1C16CF4
	0x03B39E54 MOVZ W8, 0x1
	0x03B39E58 STRB W8, [X19 + 0x81A]
	0x03B39E5C LDRB W8, [X20 + 0x31]
	0x03B39E60 CBZ W8, 0x3B39EC4
	0x03B39E64 LDRB W8, [X20 + 0x30]
	0x03B39E68 CBZ W8, 0x3B39ED0
	0x03B39E6C LDR X19, [X20 + 0x48]
	0x03B39E70 CMP X19, 0x0
	0x03B39E74 CSEL X21, X31, X20, EQ
	0x03B39E78 CBZ X19, 0x3B39ED8
	0x03B39E7C ADRP X10, 0x621000
	0x03B39E80 LDR X8, [X19]
	0x03B39E84 LDR X10, [X10 + 0x148]
	0x03B39E88 LDRH W9, [X8 + 0x12E]
	0x03B39E8C LDR X1, [X10]
	0x03B39E90 CBZ X9, 0x3B39EB4
	0x03B39E94 LDR X10, [X8 + 0xB0]
	0x03B39E98 ADD X10, X10, 0x8
	0x03B39E9C LDUR X11, [X10 - 0x8]
	0x03B39EA0 CMP X11, X1
	0x03B39EA4 B.EQ 0x3B39EE0
	0x03B39EA8 SUBS X9, X9, 0x1
	0x03B39EAC ADD X10, X10, 0x10
	0x03B39EB0 B.NE 0x3B39E9C
	0x03B39EB4 MOVZ W2, 0x5
	0x03B39EB8 MOV X0, X19
	0x03B39EBC BL 0x1C5C788
	0x03B39EC0 B 0x3B39EF0
	0x03B39EC4 LDP X20, X19, [X31 + 0x10]
	0x03B39EC8 LDP X30, X21, [X31], #0x20
	0x03B39ECC RET
	0x03B39ED0 MOV W0, W31
	0x03B39ED4 B 0x3B39F04
	0x03B39ED8 MOV W0, W31
	0x03B39EDC B 0x3B39F00
	0x03B39EE0 LDR W9, [X10]
	0x03B39EE4 ADD W9, W9, 0x5
	0x03B39EE8 ADD X8, X8, W9, 0x4, SXTW
	0x03B39EEC ADD X0, X8, 0x138
	0x03B39EF0 LDP X8, X1, [X0]
	0x03B39EF4 MOV X0, X19
	0x03B39EF8 BLR X8
	0x03B39EFC MOV X20, X21
	0x03B39F00 CBZ X20, 0x3B39F20
	0x03B39F04 LDR X8, [X20]
	0x03B39F08 AND W1, W0, 0x1
	0x03B39F0C MOV X0, X20
	0x03B39F10 LDP X20, X19, [X31 + 0x10]
	0x03B39F14 LDP X3, X2, [X8 + 0x178]
	0x03B39F18 LDP X30, X21, [X31], #0x20
	0x03B39F1C BR X3
	0x03B39F20 BL 0x1C16F20
	0x03B39F24 STR X30, [X31 - 0x30]!
	0x03B39F28 STP X22, X21, [X31 + 0x10]
	0x03B39F2C STP X20, X19, [X31 + 0x20]
	0x03B39F30 ADRP X22, 0x8A9000
	0x03B39F34 ADRP X21, 0x620000
	0x03B39F38 ADRP X20, 0x620000
	0x03B39F3C LDRB W8, [X22 + 0x81B]
	0x03B39F40 LDR X21, [X21 + 0xBD8]
	0x03B39F44 LDR X20, [X20 + 0xBE0]
	0x03B39F48 MOV X19, X0
	0x03B39F4C TBNZ X8, 0x0, 0x3B39F70
	0x03B39F50 ADRP X0, 0x620000
	0x03B39F54 LDR X0, [X0 + 0xBE0]
	0x03B39F58 BL 0x1C16CF4
	0x03B39F5C ADRP X0, 0x620000
	0x03B39F60 LDR X0, [X0 + 0xBD8]
	0x03B39F64 BL 0x1C16CF4
	0x03B39F68 MOVZ W8, 0x1
	0x03B39F6C STRB W8, [X22 + 0x81B]
	0x03B39F70 ADRP X8, 0xFFFFFFFFFCFB3000
	0x03B39F74 LDR V0, [X8 + 0x18]
	0x03B39F78 MOVZ W8, 0x101
	0x03B39F7C STRH W8, [X19 + 0x30]
	0x03B39F80 STR V0, [X19 + 0x2]
	0x03B39F84 LDR X0, [X21]
	0x03B39F88 BL 0x1C16F10
	0x03B39F8C LDR X1, [X20]
	0x03B39F90 MOV X20, X0
	0x03B39F94 BL 0x301B7C4
	0x03B39F98 STR X20, [X19 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8AA000
	009 Move X20, 0x622000
	010 Move W8, [X21+2069]
	011 Move X20, [X20+376]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {88}
	017 Move X0, 0x622000
	018 Move X0, [X0+376]
	019 Call 0x1C17CF4
	020 Move X0, 0x622000
	021 Move X0, [X0+384]
	022 Call 0x1C17CF4
	023 Move X0, 0x5BB000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x622000
	027 Move X0, [X0+328]
	028 Call 0x1C17CF4
	029 Move X0, 0x622000
	030 Move X0, [X0+352]
	031 Call 0x1C17CF4
	032 Move X0, 0x5BE000
	033 Move X0, [X0+4056]
	034 Call 0x1C17CF4
	035 Move X0, 0x618000
	036 Move X0, [X0+1424]
	037 Call 0x1C17CF4
	038 Move X0, 0x5BB000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move X0, 0x622000
	042 Move X0, [X0+392]
	043 Call 0x1C17CF4
	044 Move X0, 0x622000
	045 Move X0, [X0+400]
	046 Call 0x1C17CF4
	047 Move X0, 0x5BE000
	048 Move X0, [X0+1032]
	049 Call 0x1C17CF4
	050 Move X0, 0x622000
	051 Move X0, [X0+408]
	052 Call 0x1C17CF4
	053 Move X0, 0x622000
	054 Move X0, [X0+416]
	055 Call 0x1C17CF4
	056 Move X0, 0x622000
	057 Move X0, [X0+424]
	058 Call 0x1C17CF4
	059 Move X0, 0x622000
	060 Move X0, [X0+432]
	061 Call 0x1C17CF4
	062 Move X0, 0x5BE000
	063 Move X0, [X0+1040]
	064 Call 0x1C17CF4
	065 Move X0, 0x622000
	066 Move X0, [X0+440]
	067 Call 0x1C17CF4
	068 Move X0, 0x622000
	069 Move X0, [X0+448]
	070 Call 0x1C17CF4
	071 Move X0, 0x622000
	072 Move X0, [X0+456]
	073 Call 0x1C17CF4
	074 Move X0, 0x622000
	075 Move X0, [X0+464]
	076 Call 0x1C17CF4
	077 Move X0, 0x622000
	078 Move X0, [X0+472]
	079 Call 0x1C17CF4
	080 Move X0, 0x622000
	081 Move X0, [X0+480]
	082 Call 0x1C17CF4
	083 Move X0, 0x622000
	084 Move X0, [X0+488]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X21+2069], W8
	088 Move X1, [X20]
	089 Move X22, 0x5BB000
	090 Move X22, [X22+2600]
	091 Move X0, X19
	092 Call 0x21A4894, X0
	093 Move [X19+64], X0
	094 Compare X0, 0
	095 JumpIfEqual {157}
	096 Move X9, 0x5BB000
	097 Move X9, [X9+1432]
	098 Move X20, X0
	099 Move X8, [X0]
	100 Move X0, [X9]
	101 Move W10, [X8+304]
	102 Move W9, [X0+304]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, [X8+200]
	105 Add X8, X8, X9
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X20
	113 Move X1, X31
	114 Move X2, X31
	115 Call Object.op_Inequality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {157}
	120 Move X24, 0x622000
	121 Move X20, [X19+64]
	122 Move X24, [X24+328]
	123 Move X0, X20
	124 Move X1, [X24]
	125 Call 0x1C17E00
	126 Move [X19+72], X0
	127 Move X1, [X24]
	128 Move X0, X20
	129 Call 0x1C17E00
	130 Move X23, 0x622000
	131 Move X20, [X19+64]
	132 Move X23, [X23+352]
	133 Move X0, X20
	134 Move X1, [X23]
	135 Call 0x1C17E00
	136 Move [X19+80], X0
	137 Move X1, [X23]
	138 Move X0, X20
	139 Call 0x1C17E00
	140 Move X20, [X19+72]
	141 Compare X20, 0
	142 JumpIfEqual {399}
	143 Move X8, [X20]
	144 Move X1, [X24]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X20
	155 Move W2, W31
	156 Call 0x1C5D788
	157 Move X20, 0x622000
	158 Move X21, 0x622000
	159 Move X20, [X20+472]
	160 Move X21, [X21+488]
	161 Move X0, X19
	162 Move X1, X31
	163 Call Component.get_gameObject, X0
	164 Move X8, [X20]
	165 Move X1, X0
	166 Move X2, X31
	167 Move X0, X8
	168 Call String.Format, X0, X1
	169 Move X1, [X21]
	170 Move X2, X31
	171 Call String.Concat, X0, X1
	172 Move X8, [X22]
	173 Move X20, X0
	174 Move W9, [X8+224]
	175 Compare W9, 0
	176 JumpIfNotEqual {179}
	177 Move X0, X8
	178 Call 0x1C17DFC
	179 Move X0, X20
	180 Move X1, X19
	181 Move X2, X31
	182 Call Debug.LogWarning, X0, X1
	183 Move X1, [X19+56]
	184 Compare X1, 0
	185 JumpIfEqual {490}
	186 Move W8, [X1+24]
	187 Compare W8, 0
	188 JumpIfNotEqual {221}
	189 Move X8, 0x622000
	190 Move X8, [X8+384]
	191 Move X0, X19
	192 Move X2, [X8]
	193 Call 0x21A543C, X0, X1
	194 Move X8, [X19+56]
	195 Compare X8, 0
	196 JumpIfEqual {490}
	197 Move W8, [X8+24]
	198 Compare W8, 0
	199 JumpIfNotEqual {221}
	200 Move X0, X19
	201 Move X1, X31
	202 Call Component.get_gameObject, X0
	203 Move X8, 0x622000
	204 Move X8, [X8+480]
	205 Move X1, X0
	206 Move X2, X31
	207 Move X8, [X8]
	208 Move X0, X8
	209 Call String.Format, X0, X1
	210 Move X8, [X22]
	211 Move X20, X0
	212 Move W9, [X8+224]
	213 Compare W9, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X8
	216 Call 0x1C17DFC
	217 Move X0, X20
	218 Move X1, X19
	219 Move X2, X31
	220 Call Debug.LogWarning, X0, X1
	221 Move X8, [X19]
	222 Move X20, 0x618000
	223 Move X0, X19
	224 Move X9, [X8+392]
	225 Move X1, [X8+400]
	226 Move X20, [X20+1424]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 And W8, W0, 1
	229 Move [X19+96], W8
	230 Move X0, [X20]
	231 Call 0x1C17F10
	232 Move X1, X31
	233 Move X20, X0
	234 Call MaterialPropertyBlock..ctor, X0
	235 Move W8, [X19+48]
	236 Move [X19+88], X20
	237 Compare W8, 0
	238 JumpIfEqual {270}
	239 Move X20, [X19+72]
	240 Compare X20, 0
	241 JumpIfEqual {270}
	242 Move X10, 0x622000
	243 Move X8, [X20]
	244 Move X10, [X10+328]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X1, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move W2, 5
	256 Move X0, X20
	257 Call 0x1C5D788
	258 Move W9, [X10]
	259 Add W9, W9, 5
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X20
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfEqual {304}
	270 Move W8, [X19+49]
	271 Compare W8, 0
	272 JumpIfEqual {317}
	273 Move X20, [X19+80]
	274 Compare X20, 0
	275 JumpIfEqual {317}
	276 Move X10, 0x622000
	277 Move X8, [X20]
	278 Move X10, [X10+352]
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move W2, 6
	290 Move X0, X20
	291 Call 0x1C5D788
	292 Move W9, [X10]
	293 Add W9, W9, 6
	294 Add X8, X8, W9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X20
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {317}
	304 Move X8, [X19]
	305 Move X0, X19
	306 Move X20, [X31+48]
	307 Move X19, [X31+56]
	308 Move X22, [X31+32]
	309 Move X21, [X31+40]
	310 Move X3, [X8+376]
	311 Move X2, [X8+384]
	312 Move X24, [X31+16]
	313 Move X23, [X31+24]
	314 Move W1, 1
	315 Move X30, [X31+64]
	316 CallNoReturn X3
	317 Move X20, [X31+48]
	318 Move X19, [X31+56]
	319 Move X22, [X31+32]
	320 Move X21, [X31+40]
	321 Move X24, [X31+16]
	322 Move X23, [X31+24]
	323 Move X30, [X31+64]
	324 Return 
	325 NotImplemented "Instruction LDRSW not yet implemented."
	326 Add X8, X8, X9
	327 Add X0, X8, 312
	328 Move X8, [X0]
	329 Move X1, [X0+8]
	330 Move X0, X20
	331 NotImplemented "Instruction BLR not yet implemented."
	332 Move X8, 0x622000
	333 Move X8, [X8+400]
	334 Move X20, X0
	335 Move X8, [X8]
	336 Move X0, X8
	337 Call 0x1C17F10
	338 Move X8, 0x622000
	339 Move X8, [X8+440]
	340 Move X1, X19
	341 Move X3, X31
	342 Move X21, X0
	343 Move X2, [X8]
	344 Call UnityAction`1<Object>..ctor, X0, X1, X2
	345 Compare X20, 0
	346 JumpIfEqual {490}
	347 Move X8, 0x622000
	348 Move X8, [X8+424]
	349 Move X0, X20
	350 Move X1, X21
	351 Move X2, [X8]
	352 Call UnityEvent`1<Object>.AddListener, X0, X1
	353 Move X20, [X19+72]
	354 Compare X20, 0
	355 JumpIfEqual {490}
	356 Move X8, [X20]
	357 Move X1, [X24]
	358 NotImplemented "Instruction LDRH not yet implemented."
	359 Compare X9, 0
	360 JumpIfEqual {367}
	361 Move X10, [X8+176]
	362 Add X10, X10, 8
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Subtract X9, X9, 1
	366 Add X10, X10, 16
	367 Move W2, 1
	368 Move X0, X20
	369 Call 0x1C5D788
	370 Move W9, [X10]
	371 Add W9, W9, 1
	372 Add X8, X8, W9
	373 Add X0, X8, 312
	374 Move X8, [X0]
	375 Move X1, [X0+8]
	376 Move X0, X20
	377 NotImplemented "Instruction BLR not yet implemented."
	378 Move X8, 0x622000
	379 Move X8, [X8+408]
	380 Move X20, X0
	381 Move X8, [X8]
	382 Move X0, X8
	383 Call 0x1C17F10
	384 Move X8, 0x622000
	385 Move X8, [X8+456]
	386 Move X1, X19
	387 Move X3, X31
	388 Move X21, X0
	389 Move X2, [X8]
	390 Call UnityAction`1<Object>..ctor, X0, X1, X2
	391 Compare X20, 0
	392 JumpIfEqual {490}
	393 Move X8, 0x622000
	394 Move X8, [X8+416]
	395 Move X0, X20
	396 Move X1, X21
	397 Move X2, [X8]
	398 Call UnityEvent`1<Object>.AddListener, X0, X1
	399 Move X20, [X19+80]
	400 Compare X20, 0
	401 JumpIfEqual {183}
	402 Move X8, [X20]
	403 Move X1, [X23]
	404 NotImplemented "Instruction LDRH not yet implemented."
	405 Compare X9, 0
	406 JumpIfEqual {413}
	407 Move X10, [X8+176]
	408 Add X10, X10, 8
	409 NotImplemented "Instruction LDUR not yet implemented."
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Subtract X9, X9, 1
	412 Add X10, X10, 16
	413 Move X0, X20
	414 Move W2, W31
	415 Call 0x1C5D788
	416 NotImplemented "Instruction LDRSW not yet implemented."
	417 Add X8, X8, X9
	418 Add X0, X8, 312
	419 Move X8, [X0]
	420 Move X1, [X0+8]
	421 Move X0, X20
	422 NotImplemented "Instruction BLR not yet implemented."
	423 Move X8, 0x622000
	424 Move X8, [X8+392]
	425 Move X20, X0
	426 Move X8, [X8]
	427 Move X0, X8
	428 Call 0x1C17F10
	429 Move X8, 0x622000
	430 Move X8, [X8+448]
	431 Move X1, X19
	432 Move X3, X31
	433 Move X21, X0
	434 Move X2, [X8]
	435 Call UnityAction`1<Object>..ctor, X0, X1, X2
	436 Compare X20, 0
	437 JumpIfEqual {490}
	438 Move X8, 0x622000
	439 Move X8, [X8+432]
	440 Move X0, X20
	441 Move X1, X21
	442 Move X2, [X8]
	443 Call UnityEvent`1<Object>.AddListener, X0, X1
	444 Move X20, [X19+80]
	445 Compare X20, 0
	446 JumpIfEqual {490}
	447 Move X8, [X20]
	448 Move X1, [X23]
	449 NotImplemented "Instruction LDRH not yet implemented."
	450 Compare X9, 0
	451 JumpIfEqual {458}
	452 Move X10, [X8+176]
	453 Add X10, X10, 8
	454 NotImplemented "Instruction LDUR not yet implemented."
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Subtract X9, X9, 1
	457 Add X10, X10, 16
	458 Move W2, 1
	459 Move X0, X20
	460 Call 0x1C5D788
	461 Move W9, [X10]
	462 Add W9, W9, 1
	463 Add X8, X8, W9
	464 Add X0, X8, 312
	465 Move X8, [X0]
	466 Move X1, [X0+8]
	467 Move X0, X20
	468 NotImplemented "Instruction BLR not yet implemented."
	469 Move X8, 0x5BE000
	470 Move X8, [X8+1032]
	471 Move X20, X0
	472 Move X8, [X8]
	473 Move X0, X8
	474 Call 0x1C17F10
	475 Move X8, 0x622000
	476 Move X8, [X8+464]
	477 Move X1, X19
	478 Move X3, X31
	479 Move X21, X0
	480 Move X2, [X8]
	481 Call UnityAction`1<Object>..ctor, X0, X1, X2
	482 Compare X20, 0
	483 JumpIfEqual {490}
	484 Move X8, 0x5BE000
	485 Move X8, [X8+1040]
	486 Move X0, X20
	487 Move X1, X21
	488 Move X2, [X8]
	489 Call UnityEvent`1<Object>.AddListener, X0, X1
	490 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03B39F9C MOV X0, X19
	0x03B39FA0 LDP X20, X19, [X31 + 0x20]
	0x03B39FA4 LDP X22, X21, [X31 + 0x10]
	0x03B39FA8 MOV X1, X31
	0x03B39FAC LDR X30, [X31], #0x30
	0x03B39FB0 B 0x3C36C30
	0x03B39FB4 STR X30, [X31 - 0x30]!
	0x03B39FB8 STP X22, X21, [X31 + 0x10]
	0x03B39FBC STP X20, X19, [X31 + 0x20]
	0x03B39FC0 ADRP X21, 0x8A9000
	0x03B39FC4 ADRP X22, 0x5C1000
	0x03B39FC8 ADRP X19, 0x5C1000
	0x03B39FCC ADRP X20, 0x621000
	0x03B39FD0 LDRB W8, [X21 + 0x81C]
	0x03B39FD4 LDR X22, [X22 + 0xAC8]
	0x03B39FD8 LDR X19, [X19 + 0xAA0]
	0x03B39FDC LDR X20, [X20 + 0x238]
	0x03B39FE0 TBNZ X8, 0x0, 0x3B3A010
	0x03B39FE4 ADRP X0, 0x5C1000
	0x03B39FE8 LDR X0, [X0 + 0xAA0]
	0x03B39FEC BL 0x1C16CF4
	0x03B39FF0 ADRP X0, 0x5C1000
	0x03B39FF4 LDR X0, [X0 + 0xAC8]
	0x03B39FF8 BL 0x1C16CF4
	0x03B39FFC ADRP X0, 0x621000
	0x03B3A000 LDR X0, [X0 + 0x238]
	0x03B3A004 BL 0x1C16CF4
	0x03B3A008 MOVZ W8, 0x1
	0x03B3A00C STRB W8, [X21 + 0x81C]
	0x03B3A010 LDR X0, [X22]
	0x03B3A014 BL 0x1C16F10
	0x03B3A018 LDR X1, [X19]
	0x03B3A01C MOV X19, X0
	0x03B3A020 BL 0x301B7C4
	0x03B3A024 LDR X8, [X20]
	0x03B3A028 LDP X22, X21, [X31 + 0x10]
	0x03B3A02C LDR X8, [X8 + 0xB8]
	0x03B3A030 STR X19, [X8]
	0x03B3A034 LDP X20, X19, [X31 + 0x20]
	0x03B3A038 LDR X30, [X31], #0x30
	0x03B3A03C RET
	0x03B3A040 STP X30, X21, [X31 - 0x20]!
	0x03B3A044 STP X20, X19, [X31 + 0x10]
	0x03B3A048 ADRP X20, 0x8A8000
	0x03B3A04C ADRP X21, 0x5BC000
	0x03B3A050 ADRP X19, 0x620000
	0x03B3A054 LDRB W8, [X20 + 0x81D]
	0x03B3A058 LDR X21, [X21 + 0xC88]
	0x03B3A05C LDR X19, [X19 + 0x230]
	0x03B3A060 TBNZ X8, 0x0, 0x3B3A084
	0x03B3A064 ADRP X0, 0x620000
	0x03B3A068 LDR X0, [X0 + 0x230]
	0x03B3A06C BL 0x1C16CF4
	0x03B3A070 ADRP X0, 0x5BC000
	0x03B3A074 LDR X0, [X0 + 0xC88]
	0x03B3A078 BL 0x1C16CF4
	0x03B3A07C MOVZ W8, 0x1
	0x03B3A080 STRB W8, [X20 + 0x81D]
	0x03B3A084 LDR X0, [X21]
	0x03B3A088 MOV X1, X31
	0x03B3A08C BL 0x3C124EC
	0x03B3A090 LDR X8, [X19]
	0x03B3A094 LDP X20, X19, [X31 + 0x10]
	0x03B3A098 LDR X8, [X8 + 0xB8]
	0x03B3A09C STR W0, [X8]
	0x03B3A0A0 LDP X30, X21, [X31], #0x20
	0x03B3A0A4 RET
	0x03B3A0A8 STR X30, [X31 - 0x40]!
	0x03B3A0AC STP X24, X23, [X31 + 0x10]
	0x03B3A0B0 STP X22, X21, [X31 + 0x20]
	0x03B3A0B4 STP X20, X19, [X31 + 0x30]
	0x03B3A0B8 ADRP X21, 0x8A8000
	0x03B3A0BC LDRB W8, [X21 + 0x81E]
	0x03B3A0C0 MOV X19, X1
	0x03B3A0C4 MOV X20, X0
	0x03B3A0C8 TBNZ X8, 0x0, 0x3B3A0E0
	0x03B3A0CC ADRP X0, 0x620000
	0x03B3A0D0 LDR X0, [X0 + 0x248]
	0x03B3A0D4 BL 0x1C16CF4
	0x03B3A0D8 MOVZ W8, 0x1
	0x03B3A0DC STRB W8, [X21 + 0x81E]
	0x03B3A0E0 ADRP X24, 0x620000
	0x03B3A0E4 LDR X21, [X20 + 0x20]!
	0x03B3A0E8 LDR X24, [X24 + 0x248]
	0x03B3A0EC MOV X0, X21
	0x03B3A0F0 MOV X1, X19
	0x03B3A0F4 MOV X2, X31
	0x03B3A0F8 BL 0x33C0DE4
	0x03B3A0FC CBZ X0, 0x3B3A11C
	0x03B3A100 LDR X23, [X24]
	0x03B3A104 MOV X22, X0
	0x03B3A108 MOV X1, X23
	0x03B3A10C BL 0x1C16E00
	0x03B3A110 MOV X1, X0
	0x03B3A114 CBNZ X0, 0x3B3A120
	0x03B3A118 B 0x3B3A14C
	0x03B3A11C MOV X1, X31
	0x03B3A120 MOV X0, X20
	0x03B3A124 MOV X2, X21
	0x03B3A128 BL 0x1C24138
	0x03B3A12C CMP X21, X0
	0x03B3A130 MOV X21, X0
	0x03B3A134 B.NE 0x3B3A0EC
	0x03B3A138 LDP X20, X19, [X31 + 0x30]
	0x03B3A13C LDP X22, X21, [X31 + 0x20]
	0x03B3A140 LDP X24, X23, [X31 + 0x10]
	0x03B3A144 LDR X30, [X31], #0x40
	0x03B3A148 RET
	0x03B3A14C MOV X0, X22
	0x03B3A150 MOV X1, X23
	0x03B3A154 BL 0x1C171E0
	0x03B3A158 STR X30, [X31 - 0x40]!
	0x03B3A15C STP X24, X23, [X31 + 0x10]
	0x03B3A160 STP X22, X21, [X31 + 0x20]
	0x03B3A164 STP X20, X19, [X31 + 0x30]
	0x03B3A168 ADRP X21, 0x8A8000
	0x03B3A16C LDRB W8, [X21 + 0x81F]
	0x03B3A170 MOV X19, X1
	0x03B3A174 MOV X20, X0
	0x03B3A178 TBNZ X8, 0x0, 0x3B3A190
	0x03B3A17C ADRP X0, 0x620000
	0x03B3A180 LDR X0, [X0 + 0x248]
	0x03B3A184 BL 0x1C16CF4
	0x03B3A188 MOVZ W8, 0x1
	0x03B3A18C STRB W8, [X21 + 0x81F]
	0x03B3A190 ADRP X24, 0x620000
	0x03B3A194 LDR X21, [X20 + 0x20]!
	0x03B3A198 LDR X24, [X24 + 0x248]
	0x03B3A19C MOV X0, X21
	0x03B3A1A0 MOV X1, X19
	0x03B3A1A4 MOV X2, X31
	0x03B3A1A8 BL 0x33C0FDC
	0x03B3A1AC CBZ X0, 0x3B3A1CC
	0x03B3A1B0 LDR X23, [X24]
	0x03B3A1B4 MOV X22, X0
	0x03B3A1B8 MOV X1, X23
	0x03B3A1BC BL 0x1C16E00
	0x03B3A1C0 MOV X1, X0
	0x03B3A1C4 CBNZ X0, 0x3B3A1D0
	0x03B3A1C8 B 0x3B3A1FC
	0x03B3A1CC MOV X1, X31
	0x03B3A1D0 MOV X0, X20
	0x03B3A1D4 MOV X2, X21
	0x03B3A1D8 BL 0x1C24138
	0x03B3A1DC CMP X21, X0
	0x03B3A1E0 MOV X21, X0
	0x03B3A1E4 B.NE 0x3B3A19C
	0x03B3A1E8 LDP X20, X19, [X31 + 0x30]
	0x03B3A1EC LDP X22, X21, [X31 + 0x20]
	0x03B3A1F0 LDP X24, X23, [X31 + 0x10]
	0x03B3A1F4 LDR X30, [X31], #0x40
	0x03B3A1F8 RET
	0x03B3A1FC MOV X0, X22
	0x03B3A200 MOV X1, X23
	0x03B3A204 BL 0x1C171E0
	0x03B3A208 STR X30, [X31 - 0x40]!
	0x03B3A20C STP X24, X23, [X31 + 0x10]
	0x03B3A210 STP X22, X21, [X31 + 0x20]
	0x03B3A214 STP X20, X19, [X31 + 0x30]
	0x03B3A218 ADRP X21, 0x8A8000
	0x03B3A21C LDRB W8, [X21 + 0x820]
	0x03B3A220 MOV X19, X1
	0x03B3A224 MOV X20, X0
	0x03B3A228 TBNZ X8, 0x0, 0x3B3A240
	0x03B3A22C ADRP X0, 0x620000
	0x03B3A230 LDR X0, [X0 + 0x250]
	0x03B3A234 BL 0x1C16CF4
	0x03B3A238 MOVZ W8, 0x1
	0x03B3A23C STRB W8, [X21 + 0x820]
	0x03B3A240 ADRP X24, 0x620000
	0x03B3A244 LDR X21, [X20 + 0x28]!
	0x03B3A248 LDR X24, [X24 + 0x250]
	0x03B3A24C MOV X0, X21
	0x03B3A250 MOV X1, X19
	0x03B3A254 MOV X2, X31
	0x03B3A258 BL 0x33C0DE4
	0x03B3A25C CBZ X0, 0x3B3A27C
	0x03B3A260 LDR X23, [X24]
	0x03B3A264 MOV X22, X0
	0x03B3A268 MOV X1, X23
	0x03B3A26C BL 0x1C16E00
	0x03B3A270 MOV X1, X0
	0x03B3A274 CBNZ X0, 0x3B3A280
	0x03B3A278 B 0x3B3A2AC
	0x03B3A27C MOV X1, X31
	0x03B3A280 MOV X0, X20
	0x03B3A284 MOV X2, X21
	0x03B3A288 BL 0x1C24138
	0x03B3A28C CMP X21, X0
	0x03B3A290 MOV X21, X0
	0x03B3A294 B.NE 0x3B3A24C
	0x03B3A298 LDP X20, X19, [X31 + 0x30]
	0x03B3A29C LDP X22, X21, [X31 + 0x20]
	0x03B3A2A0 LDP X24, X23, [X31 + 0x10]
	0x03B3A2A4 LDR X30, [X31], #0x40
	0x03B3A2A8 RET
	0x03B3A2AC MOV X0, X22
	0x03B3A2B0 MOV X1, X23
	0x03B3A2B4 BL 0x1C171E0
	0x03B3A2B8 STR X30, [X31 - 0x40]!
	0x03B3A2BC STP X24, X23, [X31 + 0x10]
	0x03B3A2C0 STP X22, X21, [X31 + 0x20]
	0x03B3A2C4 STP X20, X19, [X31 + 0x30]
	0x03B3A2C8 ADRP X21, 0x8A8000
	0x03B3A2CC LDRB W8, [X21 + 0x821]
	0x03B3A2D0 MOV X19, X1
	0x03B3A2D4 MOV X20, X0
	0x03B3A2D8 TBNZ X8, 0x0, 0x3B3A2F0
	0x03B3A2DC ADRP X0, 0x620000
	0x03B3A2E0 LDR X0, [X0 + 0x250]
	0x03B3A2E4 BL 0x1C16CF4
	0x03B3A2E8 MOVZ W8, 0x1
	0x03B3A2EC STRB W8, [X21 + 0x821]
	0x03B3A2F0 ADRP X24, 0x620000
	0x03B3A2F4 LDR X21, [X20 + 0x28]!
	0x03B3A2F8 LDR X24, [X24 + 0x250]
	0x03B3A2FC MOV X0, X21
	0x03B3A300 MOV X1, X19
	0x03B3A304 MOV X2, X31
	0x03B3A308 BL 0x33C0FDC
	0x03B3A30C CBZ X0, 0x3B3A32C
	0x03B3A310 LDR X23, [X24]
	0x03B3A314 MOV X22, X0
	0x03B3A318 MOV X1, X23
	0x03B3A31C BL 0x1C16E00
	0x03B3A320 MOV X1, X0
	0x03B3A324 CBNZ X0, 0x3B3A330
	0x03B3A328 B 0x3B3A35C
	0x03B3A32C MOV X1, X31
	0x03B3A330 MOV X0, X20
	0x03B3A334 MOV X2, X21
	0x03B3A338 BL 0x1C24138
	0x03B3A33C CMP X21, X0
	0x03B3A340 MOV X21, X0
	0x03B3A344 B.NE 0x3B3A2FC
	0x03B3A348 LDP X20, X19, [X31 + 0x30]
	0x03B3A34C LDP X22, X21, [X31 + 0x20]
	0x03B3A350 LDP X24, X23, [X31 + 0x10]
	0x03B3A354 LDR X30, [X31], #0x40
	0x03B3A358 RET
	0x03B3A35C MOV X0, X22
	0x03B3A360 MOV X1, X23
	0x03B3A364 BL 0x1C171E0
	0x03B3A368 LDR X0, [X0 + 0x30]
	0x03B3A36C RET
	0x03B3A370 STR X1, [X0 + 0x30]
	0x03B3A374 RET
	0x03B3A378 LDR X0, [X0 + 0x38]
	0x03B3A37C RET
	0x03B3A380 STR X30, [X31 - 0x30]!
	0x03B3A384 STP X22, X21, [X31 + 0x10]
	0x03B3A388 STP X20, X19, [X31 + 0x20]
	0x03B3A38C ADRP X22, 0x8A8000
	0x03B3A390 ADRP X21, 0x5B9000
	0x03B3A394 LDRB W8, [X22 + 0x822]
	0x03B3A398 LDR X21, [X21 + 0x970]
	0x03B3A39C MOV X20, X1
	0x03B3A3A0 MOV X19, X0
	0x03B3A3A4 TBNZ X8, 0x0, 0x3B3A3BC
	0x03B3A3A8 ADRP X0, 0x5B9000
	0x03B3A3AC LDR X0, [X0 + 0x970]
	0x03B3A3B0 BL 0x1C16CF4
	0x03B3A3B4 MOVZ W8, 0x1
	0x03B3A3B8 STRB W8, [X22 + 0x822]
	0x03B3A3BC STR X20, [X19 + 0x38]
	0x03B3A3C0 LDR X0, [X21]
	0x03B3A3C4 LDR W8, [X0 + 0xE0]
	0x03B3A3C8 CBNZ W8, 0x3B3A3D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8AA000
	007 Move W8, [X20+2070]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {60}
	013 Move X0, 0x622000
	014 Move X0, [X0+328]
	015 Call 0x1C17CF4
	016 Move X0, 0x622000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move X0, 0x5BB000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x622000
	023 Move X0, [X0+392]
	024 Call 0x1C17CF4
	025 Move X0, 0x622000
	026 Move X0, [X0+400]
	027 Call 0x1C17CF4
	028 Move X0, 0x5BE000
	029 Move X0, [X0+1032]
	030 Call 0x1C17CF4
	031 Move X0, 0x621000
	032 Move X0, [X0+408]
	033 Call 0x1C17CF4
	034 Move X0, 0x621000
	035 Move X0, [X0+496]
	036 Call 0x1C17CF4
	037 Move X0, 0x621000
	038 Move X0, [X0+504]
	039 Call 0x1C17CF4
	040 Move X0, 0x621000
	041 Move X0, [X0+512]
	042 Call 0x1C17CF4
	043 Move X0, 0x621000
	044 Move X0, [X0+520]
	045 Call 0x1C17CF4
	046 Move X0, 0x621000
	047 Move X0, [X0+440]
	048 Call 0x1C17CF4
	049 Move X0, 0x621000
	050 Move X0, [X0+448]
	051 Call 0x1C17CF4
	052 Move X0, 0x621000
	053 Move X0, [X0+456]
	054 Call 0x1C17CF4
	055 Move X0, 0x621000
	056 Move X0, [X0+464]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+2070], W8
	060 Move X8, [X19+64]
	061 Compare X8, 0
	062 JumpIfEqual {199}
	063 Move X10, 0x5BA000
	064 Move X10, [X10+1432]
	065 Move X9, [X8]
	066 Move X0, [X10]
	067 Move W11, [X9+304]
	068 Move W10, [X0+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9+200]
	071 Add X9, X9, X10
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X20
	080 Move X1, X31
	081 Move X2, X31
	082 Call Object.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {199}
	087 Move X20, [X19+72]
	088 Compare X20, 0
	089 JumpIfEqual {180}
	090 Move X22, 0x621000
	091 Move X8, [X20]
	092 Move X22, [X22+328]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Move X1, [X22]
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X20
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X20
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, 0x621000
	114 Move X8, [X8+400]
	115 Move X20, X0
	116 Move X8, [X8]
	117 Move X0, X8
	118 Call 0x1C17F10
	119 Move X8, 0x621000
	120 Move X8, [X8+440]
	121 Move X1, X19
	122 Move X3, X31
	123 Move X21, X0
	124 Move X2, [X8]
	125 Call UnityAction`1<Object>..ctor, X0, X1, X2
	126 Compare X20, 0
	127 JumpIfEqual {285}
	128 Move X8, 0x621000
	129 Move X8, [X8+504]
	130 Move X0, X20
	131 Move X1, X21
	132 Move X2, [X8]
	133 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	134 Move X20, [X19+72]
	135 Compare X20, 0
	136 JumpIfEqual {285}
	137 Move X8, [X20]
	138 Move X1, [X22]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move W2, 1
	149 Move X0, X20
	150 Call 0x1C5D788
	151 Move W9, [X10]
	152 Add W9, W9, 1
	153 Add X8, X8, W9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X1, [X0+8]
	157 Move X0, X20
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, 0x621000
	160 Move X8, [X8+408]
	161 Move X20, X0
	162 Move X8, [X8]
	163 Move X0, X8
	164 Call 0x1C17F10
	165 Move X8, 0x621000
	166 Move X8, [X8+456]
	167 Move X1, X19
	168 Move X3, X31
	169 Move X21, X0
	170 Move X2, [X8]
	171 Call UnityAction`1<Object>..ctor, X0, X1, X2
	172 Compare X20, 0
	173 JumpIfEqual {285}
	174 Move X8, 0x621000
	175 Move X8, [X8+520]
	176 Move X0, X20
	177 Move X1, X21
	178 Move X2, [X8]
	179 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	180 Move X20, [X19+80]
	181 Compare X20, 0
	182 JumpIfEqual {199}
	183 Move X22, 0x621000
	184 Move X8, [X20]
	185 Move X22, [X22+352]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X1, [X22]
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X20
	197 Move W2, W31
	198 Call 0x1C5D788
	199 Move X20, [X31+32]
	200 Move X19, [X31+40]
	201 Move X22, [X31+16]
	202 Move X21, [X31+24]
	203 Move X30, [X31+48]
	204 Return 
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X20
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X8, 0x621000
	213 Move X8, [X8+392]
	214 Move X20, X0
	215 Move X8, [X8]
	216 Move X0, X8
	217 Call 0x1C17F10
	218 Move X8, 0x621000
	219 Move X8, [X8+448]
	220 Move X1, X19
	221 Move X3, X31
	222 Move X21, X0
	223 Move X2, [X8]
	224 Call UnityAction`1<Object>..ctor, X0, X1, X2
	225 Compare X20, 0
	226 JumpIfEqual {285}
	227 Move X8, 0x621000
	228 Move X8, [X8+496]
	229 Move X0, X20
	230 Move X1, X21
	231 Move X2, [X8]
	232 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	233 Move X20, [X19+80]
	234 Compare X20, 0
	235 JumpIfEqual {285}
	236 Move X8, [X20]
	237 Move X1, [X22]
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move W2, 1
	248 Move X0, X20
	249 Call 0x1C5D788
	250 Move W9, [X10]
	251 Add W9, W9, 1
	252 Add X8, X8, W9
	253 Add X0, X8, 312
	254 Move X8, [X0]
	255 Move X1, [X0+8]
	256 Move X0, X20
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Move X8, 0x5BD000
	259 Move X8, [X8+1032]
	260 Move X20, X0
	261 Move X8, [X8]
	262 Move X0, X8
	263 Call 0x1C17F10
	264 Move X8, 0x621000
	265 Move X8, [X8+464]
	266 Move X1, X19
	267 Move X3, X31
	268 Move X21, X0
	269 Move X2, [X8]
	270 Call UnityAction`1<Object>..ctor, X0, X1, X2
	271 Compare X20, 0
	272 JumpIfEqual {285}
	273 Move X8, 0x621000
	274 Move X8, [X8+512]
	275 Move X0, X20
	276 Move X1, X21
	277 Move X20, [X31+32]
	278 Move X19, [X31+40]
	279 Move X2, [X8]
	280 Move X22, [X31+16]
	281 Move X21, [X31+24]
	282 Move X30, [X31+48]
	283 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	284 Return 
	285 Call 0x1C17F20

Method: System.Void SetTint(System.Boolean on)

Disassembly:
	0x03B3A3CC BL 0x1C16DFC
	0x03B3A3D0 MOV X0, X31
	0x03B3A3D4 BL 0x3C018E4
	0x03B3A3D8 TBZ X0, 0x0, 0x3B3A400
	0x03B3A3DC MOV X0, X19
	0x03B3A3E0 MOV X1, X31
	0x03B3A3E4 BL 0x3C32454
	0x03B3A3E8 TBZ X0, 0x0, 0x3B3A400
	0x03B3A3EC MOV X0, X19
	0x03B3A3F0 LDP X20, X19, [X31 + 0x20]
	0x03B3A3F4 LDP X22, X21, [X31 + 0x10]
	0x03B3A3F8 LDR X30, [X31], #0x30
	0x03B3A3FC B 0x3B3A410
	0x03B3A400 LDP X20, X19, [X31 + 0x20]
	0x03B3A404 LDP X22, X21, [X31 + 0x10]
	0x03B3A408 LDR X30, [X31], #0x30
	0x03B3A40C RET
	0x03B3A410 STR X30, [X31 - 0x30]!
	0x03B3A414 STP X22, X21, [X31 + 0x10]
	0x03B3A418 STP X20, X19, [X31 + 0x20]
	0x03B3A41C ADRP X20, 0x8A8000
	0x03B3A420 ADRP X22, 0x5B9000
	0x03B3A424 LDRB W8, [X20 + 0x82B]
	0x03B3A428 LDR X22, [X22 + 0x598]
	0x03B3A42C MOV X19, X0
	0x03B3A430 TBNZ X8, 0x0, 0x3B3A448
	0x03B3A434 ADRP X0, 0x5B9000
	0x03B3A438 LDR X0, [X0 + 0x598]
	0x03B3A43C BL 0x1C16CF4
	0x03B3A440 MOVZ W8, 0x1
	0x03B3A444 STRB W8, [X20 + 0x82B]
	0x03B3A448 LDR X0, [X22]
	0x03B3A44C LDR X20, [X19 + 0x178]
	0x03B3A450 LDR X21, [X19 + 0x38]
	0x03B3A454 LDR W8, [X0 + 0xE0]
	0x03B3A458 CBNZ W8, 0x3B3A460
	0x03B3A45C BL 0x1C16DFC
	0x03B3A460 MOV X0, X20
	0x03B3A464 MOV X1, X21
	0x03B3A468 MOV X2, X31
	0x03B3A46C BL 0x3C3883C
	0x03B3A470 TBNZ X0, 0x0, 0x3B3A4C8
	0x03B3A474 MOV X0, X19
	0x03B3A478 BL 0x3B3AD78
	0x03B3A47C LDR X0, [X22]
	0x03B3A480 LDR X20, [X19 + 0x38]
	0x03B3A484 LDR W8, [X0 + 0xE0]
	0x03B3A488 CBNZ W8, 0x3B3A490
	0x03B3A48C BL 0x1C16DFC
	0x03B3A490 MOV X0, X20
	0x03B3A494 MOV X1, X31
	0x03B3A498 MOV X2, X31
	0x03B3A49C BL 0x3C354F8
	0x03B3A4A0 TBZ X0, 0x0, 0x3B3A4C8
	0x03B3A4A4 LDR X0, [X19 + 0x38]
	0x03B3A4A8 CBZ X0, 0x3B3A4D8
	0x03B3A4AC LDR X8, [X0]
	0x03B3A4B0 MOV X1, X19
	0x03B3A4B4 LDR X9, [X8 + 0x4E8]
	0x03B3A4B8 LDR X2, [X8 + 0x4F0]
	0x03B3A4BC BLR X9
	0x03B3A4C0 LDR X8, [X19 + 0x38]
	0x03B3A4C4 STR X8, [X19 + 0x178]
	0x03B3A4C8 LDP X20, X19, [X31 + 0x20]
	0x03B3A4CC LDP X22, X21, [X31 + 0x10]
	0x03B3A4D0 LDR X30, [X31], #0x30
	0x03B3A4D4 RET
	0x03B3A4D8 BL 0x1C16F20
	0x03B3A4DC LDR X0, [X0 + 0x40]
	0x03B3A4E0 RET
	0x03B3A4E4 LDUR X0, [X0 + 0x4C]
	0x03B3A4E8 RET
	0x03B3A4EC STUR X1, [X0 + 0x4C]
	0x03B3A4F0 RET
	0x03B3A4F4 LDR W0, [X0 + 0x54]
	0x03B3A4F8 RET
	0x03B3A4FC STR W1, [X0 + 0x54]
	0x03B3A500 RET
	0x03B3A504 LDR W0, [X0 + 0x58]
	0x03B3A508 RET
	0x03B3A50C STR W1, [X0 + 0x58]
	0x03B3A510 RET
	0x03B3A514 LDR W0, [X0 + 0x5C]
	0x03B3A518 RET
	0x03B3A51C STR W1, [X0 + 0x5C]
	0x03B3A520 RET
	0x03B3A524 LDR X0, [X0 + 0x60]
	0x03B3A528 RET
	0x03B3A52C STR X1, [X0 + 0x60]
	0x03B3A530 RET
	0x03B3A534 LDRB W0, [X0 + 0x68]
	0x03B3A538 RET
	0x03B3A53C AND W8, W1, 0x1
	0x03B3A540 STRB W8, [X0 + 0x68]
	0x03B3A544 RET
	0x03B3A548 LDRB W0, [X0 + 0x69]
	0x03B3A54C RET
	0x03B3A550 AND W8, W1, 0x1
	0x03B3A554 STRB W8, [X0 + 0x69]
	0x03B3A558 RET
	0x03B3A55C LDRB W0, [X0 + 0x6A]
	0x03B3A560 RET
	0x03B3A564 AND W8, W1, 0x1
	0x03B3A568 STRB W8, [X0 + 0x6A]
	0x03B3A56C RET
	0x03B3A570 LDR V0, [X0 + 0x6C]
	0x03B3A574 RET
	0x03B3A578 STR S0, [X0 + 0x6C]
	0x03B3A57C RET
	0x03B3A580 LDRB W0, [X0 + 0x70]
	0x03B3A584 RET
	0x03B3A588 AND W8, W1, 0x1
	0x03B3A58C STRB W8, [X0 + 0x70]
	0x03B3A590 RET
	0x03B3A594 LDR V0, [X0 + 0x74]
	0x03B3A598 RET
	0x03B3A59C STR S0, [X0 + 0x74]
	0x03B3A5A0 RET
	0x03B3A5A4 LDRB W0, [X0 + 0x78]
	0x03B3A5A8 RET
	0x03B3A5AC AND W8, W1, 0x1
	0x03B3A5B0 STRB W8, [X0 + 0x78]
	0x03B3A5B4 RET
	0x03B3A5B8 LDR X0, [X0 + 0x80]
	0x03B3A5BC RET
	0x03B3A5C0 STR X1, [X0 + 0x80]
	0x03B3A5C4 RET
	0x03B3A5C8 LDR X0, [X0 + 0x88]
	0x03B3A5CC RET
	0x03B3A5D0 STR X1, [X0 + 0x88]
	0x03B3A5D4 RET
	0x03B3A5D8 LDR X0, [X0 + 0x90]
	0x03B3A5DC RET
	0x03B3A5E0 STR X1, [X0 + 0x90]
	0x03B3A5E4 RET
	0x03B3A5E8 LDR X0, [X0 + 0x98]
	0x03B3A5EC RET
	0x03B3A5F0 STR X1, [X0 + 0x98]
	0x03B3A5F4 RET
	0x03B3A5F8 LDR X0, [X0 + 0xA0]
	0x03B3A5FC RET
	0x03B3A600 STR X1, [X0 + 0xA0]
	0x03B3A604 RET
	0x03B3A608 LDR X0, [X0 + 0xA8]
	0x03B3A60C RET
	0x03B3A610 STR X1, [X0 + 0xA8]
	0x03B3A614 RET
	0x03B3A618 LDR X0, [X0 + 0xB0]
	0x03B3A61C RET
	0x03B3A620 STR X1, [X0 + 0xB0]
	0x03B3A624 RET
	0x03B3A628 LDR X0, [X0 + 0xB8]
	0x03B3A62C RET
	0x03B3A630 STR X1, [X0 + 0xB8]
	0x03B3A634 RET
	0x03B3A638 LDR X0, [X0 + 0xC0]
	0x03B3A63C RET
	0x03B3A640 STR X1, [X0 + 0xC0]
	0x03B3A644 RET
	0x03B3A648 LDR X0, [X0 + 0xC8]
	0x03B3A64C RET
	0x03B3A650 STR X1, [X0 + 0xC8]
	0x03B3A654 RET
	0x03B3A658 LDR X0, [X0 + 0xD0]
	0x03B3A65C RET
	0x03B3A660 STR X1, [X0 + 0xD0]
	0x03B3A664 RET
	0x03B3A668 LDR X0, [X0 + 0xD8]
	0x03B3A66C RET
	0x03B3A670 STR X1, [X0 + 0xD8]
	0x03B3A674 RET
	0x03B3A678 LDR X0, [X0 + 0xE0]
	0x03B3A67C RET
	0x03B3A680 STR X1, [X0 + 0xE0]
	0x03B3A684 RET
	0x03B3A688 LDR X0, [X0 + 0xE8]
	0x03B3A68C RET
	0x03B3A690 STR X1, [X0 + 0xE8]
	0x03B3A694 RET
	0x03B3A698 STR X30, [X31 - 0x20]!
	0x03B3A69C STP X20, X19, [X31 + 0x10]
	0x03B3A6A0 ADRP X20, 0x8A8000
	0x03B3A6A4 LDRB W8, [X20 + 0x823]
	0x03B3A6A8 MOV X19, X0
	0x03B3A6AC TBNZ X8, 0x0, 0x3B3A6D0
	0x03B3A6B0 ADRP X0, 0x620000
	0x03B3A6B4 LDR X0, [X0 + 0x258]
	0x03B3A6B8 BL 0x1C16CF4
	0x03B3A6BC ADRP X0, 0x620000
	0x03B3A6C0 LDR X0, [X0 + 0x260]
	0x03B3A6C4 BL 0x1C16CF4
	0x03B3A6C8 MOVZ W8, 0x1
	0x03B3A6CC STRB W8, [X20 + 0x823]
	0x03B3A6D0 LDR X8, [X19 + 0xF0]
	0x03B3A6D4 CBZ X8, 0x3B3A724
	0x03B3A6D8 LDR X0, [X8 + 0x10]
	0x03B3A6DC CBZ X0, 0x3B3A714
	0x03B3A6E0 ADRP X9, 0x620000
	0x03B3A6E4 LDR X9, [X9 + 0x260]
	0x03B3A6E8 LDR X8, [X0]
	0x03B3A6EC LDR X1, [X9]
	0x03B3A6F0 LDRB W10, [X8 + 0x130]
	0x03B3A6F4 LDRB W9, [X1 + 0x130]
	0x03B3A6F8 CMP W10, W9
	0x03B3A6FC B.CC 0x3B3A720
	0x03B3A700 LDR X8, [X8 + 0xC8]
	0x03B3A704 ADD X8, X8, X9, 0x3, LSL
	0x03B3A708 LDUR X8, [X8 - 0x8]
	0x03B3A70C CMP X8, X1
	0x03B3A710 B.NE 0x3B3A720
	0x03B3A714 LDP X20, X19, [X31 + 0x10]
	0x03B3A718 LDR X30, [X31], #0x20
	0x03B3A71C RET
	0x03B3A720 BL 0x1C171E0
	0x03B3A724 BL 0x1C16F20
	0x03B3A728 STR X30, [X31 - 0x20]!
	0x03B3A72C STP X20, X19, [X31 + 0x10]
	0x03B3A730 ADRP X20, 0x8A8000
	0x03B3A734 LDRB W8, [X20 + 0x824]
	0x03B3A738 MOV X19, X0
	0x03B3A73C TBNZ X8, 0x0, 0x3B3A754
	0x03B3A740 ADRP X0, 0x620000
	0x03B3A744 LDR X0, [X0 + 0x268]
	0x03B3A748 BL 0x1C16CF4
	0x03B3A74C MOVZ W8, 0x1
	0x03B3A750 STRB W8, [X20 + 0x824]
	0x03B3A754 LDR X0, [X19 + 0xF0]
	0x03B3A758 CBZ X0, 0x3B3A780
	0x03B3A75C ADRP X8, 0x620000
	0x03B3A760 LDR X8, [X8 + 0x268]
	0x03B3A764 LDR X1, [X8]
	0x03B3A768 BL 0x2D57B54
	0x03B3A76C LDP X20, X19, [X31 + 0x10]
	0x03B3A770 CMP W0, 0x0
	0x03B3A774 CSET W0, GT
	0x03B3A778 LDR X30, [X31], #0x20
	0x03B3A77C RET
	0x03B3A780 BL 0x1C16F20
	0x03B3A784 STR X30, [X31 - 0x20]!
	0x03B3A788 STP X20, X19, [X31 + 0x10]
	0x03B3A78C ADRP X20, 0x8A8000
	0x03B3A790 LDRB W8, [X20 + 0x825]
	0x03B3A794 MOV X19, X0
	0x03B3A798 TBNZ X8, 0x0, 0x3B3A7BC
	0x03B3A79C ADRP X0, 0x620000
	0x03B3A7A0 LDR X0, [X0 + 0x270]
	0x03B3A7A4 BL 0x1C16CF4
	0x03B3A7A8 ADRP X0, 0x620000
	0x03B3A7AC LDR X0, [X0 + 0x278]
	0x03B3A7B0 BL 0x1C16CF4
	0x03B3A7B4 MOVZ W8, 0x1
	0x03B3A7B8 STRB W8, [X20 + 0x825]
	0x03B3A7BC LDR X8, [X19 + 0xF8]
	0x03B3A7C0 CBZ X8, 0x3B3A810
	0x03B3A7C4 LDR X0, [X8 + 0x10]
	0x03B3A7C8 CBZ X0, 0x3B3A800
	0x03B3A7CC ADRP X9, 0x620000
	0x03B3A7D0 LDR X9, [X9 + 0x278]
	0x03B3A7D4 LDR X8, [X0]
	0x03B3A7D8 LDR X1, [X9]
	0x03B3A7DC LDRB W10, [X8 + 0x130]
	0x03B3A7E0 LDRB W9, [X1 + 0x130]
	0x03B3A7E4 CMP W10, W9
	0x03B3A7E8 B.CC 0x3B3A80C
	0x03B3A7EC LDR X8, [X8 + 0xC8]
	0x03B3A7F0 ADD X8, X8, X9, 0x3, LSL
	0x03B3A7F4 LDUR X8, [X8 - 0x8]
	0x03B3A7F8 CMP X8, X1
	0x03B3A7FC B.NE 0x3B3A80C
	0x03B3A800 LDP X20, X19, [X31 + 0x10]
	0x03B3A804 LDR X30, [X31], #0x20
	0x03B3A808 RET
	0x03B3A80C BL 0x1C171E0
	0x03B3A810 BL 0x1C16F20
	0x03B3A814 LDR X0, [X0 + 0x100]
	0x03B3A818 RET
	0x03B3A81C STR X1, [X0 + 0x100]
	0x03B3A820 RET
	0x03B3A824 STR X30, [X31 - 0x20]!
	0x03B3A828 STP X20, X19, [X31 + 0x10]
	0x03B3A82C ADRP X20, 0x8A8000
	0x03B3A830 LDRB W8, [X20 + 0x826]
	0x03B3A834 MOV X19, X0
	0x03B3A838 TBNZ X8, 0x0, 0x3B3A850
	0x03B3A83C ADRP X0, 0x620000
	0x03B3A840 LDR X0, [X0 + 0x280]
	0x03B3A844 BL 0x1C16CF4
	0x03B3A848 MOVZ W8, 0x1
	0x03B3A84C STRB W8, [X20 + 0x826]
	0x03B3A850 LDR X0, [X19 + 0xF8]
	0x03B3A854 CBZ X0, 0x3B3A87C
	0x03B3A858 ADRP X8, 0x620000
	0x03B3A85C LDR X8, [X8 + 0x280]
	0x03B3A860 LDR X1, [X8]
	0x03B3A864 BL 0x2D57B54
	0x03B3A868 LDP X20, X19, [X31 + 0x10]
	0x03B3A86C CMP W0, 0x0
	0x03B3A870 CSET W0, GT
	0x03B3A874 LDR X30, [X31], #0x20
	0x03B3A878 RET
	0x03B3A87C BL 0x1C16F20
	0x03B3A880 STR X30, [X31 - 0x20]!
	0x03B3A884 STP X20, X19, [X31 + 0x10]
	0x03B3A888 ADRP X20, 0x8A8000
	0x03B3A88C LDRB W8, [X20 + 0x827]
	0x03B3A890 MOV X19, X0
	0x03B3A894 TBNZ X8, 0x0, 0x3B3A8B8
	0x03B3A898 ADRP X0, 0x620000
	0x03B3A89C LDR X0, [X0 + 0x288]
	0x03B3A8A0 BL 0x1C16CF4
	0x03B3A8A4 ADRP X0, 0x620000
	0x03B3A8A8 LDR X0, [X0 + 0x290]
	0x03B3A8AC BL 0x1C16CF4
	0x03B3A8B0 MOVZ W8, 0x1
	0x03B3A8B4 STRB W8, [X20 + 0x827]
	0x03B3A8B8 LDR X8, [X19 + 0x108]
	0x03B3A8BC CBZ X8, 0x3B3A90C
	0x03B3A8C0 LDR X0, [X8 + 0x10]
	0x03B3A8C4 CBZ X0, 0x3B3A8FC
	0x03B3A8C8 ADRP X9, 0x620000
	0x03B3A8CC LDR X9, [X9 + 0x290]
	0x03B3A8D0 LDR X8, [X0]
	0x03B3A8D4 LDR X1, [X9]
	0x03B3A8D8 LDRB W10, [X8 + 0x130]
	0x03B3A8DC LDRB W9, [X1 + 0x130]
	0x03B3A8E0 CMP W10, W9
	0x03B3A8E4 B.CC 0x3B3A908
	0x03B3A8E8 LDR X8, [X8 + 0xC8]
	0x03B3A8EC ADD X8, X8, X9, 0x3, LSL
	0x03B3A8F0 LDUR X8, [X8 - 0x8]
	0x03B3A8F4 CMP X8, X1
	0x03B3A8F8 B.NE 0x3B3A908
	0x03B3A8FC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+96], D12
	003 Move [X31+112], D11
	004 Move [X31+120], D10
	005 Move [X31+128], D9
	006 Move [X31+136], D8
	007 Move [X31+144], X29
	008 Move [X31+152], X30
	009 Move [X31+160], X28
	010 Move [X31+168], X27
	011 Move [X31+176], X26
	012 Move [X31+184], X25
	013 Move [X31+192], X24
	014 Move [X31+200], X23
	015 Move [X31+208], X22
	016 Move [X31+216], X21
	017 Move [X31+224], X20
	018 Move [X31+232], X19
	019 Move X21, 0x8A9000
	020 Move W8, [X21+2071]
	021 Move W19, W1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0x5BA000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x621000
	031 Move X0, [X0+528]
	032 Call 0x1C17CF4
	033 Move X0, 0x620000
	034 Move X0, [X0+3000]
	035 Call 0x1C17CF4
	036 Move X0, 0x620000
	037 Move X0, [X0+3008]
	038 Call 0x1C17CF4
	039 Move X0, 0x621000
	040 Move X0, [X0+536]
	041 Call 0x1C17CF4
	042 Move X0, 0x621000
	043 Move X0, [X0+544]
	044 Call 0x1C17CF4
	045 Move X0, 0x620000
	046 Move X0, [X0+3016]
	047 Call 0x1C17CF4
	048 Move X0, 0x614000
	049 Move X0, [X0+3896]
	050 Call 0x1C17CF4
	051 Move X0, 0x620000
	052 Move X0, [X0+3024]
	053 Call 0x1C17CF4
	054 Move X0, 0x621000
	055 Move X0, [X0+552]
	056 Call 0x1C17CF4
	057 Move X0, 0x5BA000
	058 Move X0, [X0+1432]
	059 Call 0x1C17CF4
	060 Move X0, 0x621000
	061 Move X0, [X0+560]
	062 Call 0x1C17CF4
	063 Move X0, 0x621000
	064 Move X0, [X0+568]
	065 Call 0x1C17CF4
	066 Move X0, 0x5BF000
	067 Move X0, [X0+592]
	068 Call 0x1C17CF4
	069 Move X0, 0x621000
	070 Move X0, [X0+576]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X21+2071], W8
	074 Move [X31+64], X31
	075 Move [X31+72], X31
	076 Move [X31+80], X31
	077 Move [X31+32], X31
	078 Move [X31+40], X31
	079 Move [X31+48], X31
	080 Move TEMP, X19
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {95}
	084 Move S8, [X20+32]
	085 Move S9, [X20+36]
	086 Move S11, [X20+40]
	087 Move S12, [X20+44]
	088 Move S0, 1
	089 Move X0, X31
	090 Call Mathf.LinearToGammaSpace, V0
	091 Multiply S8, S8, S0
	092 Multiply S10, S9, S0
	093 Multiply S11, S11, S0
	094 Multiply S9, S12, S0
	095 Move S9, 1
	096 Move S8, W31
	097 Move S10, W31
	098 Move S11, W31
	099 Move W8, [X20+96]
	100 Compare W8, 0
	101 JumpIfNotEqual {120}
	102 Move W8, [X20+97]
	103 Compare W8, 0
	104 JumpIfNotEqual {120}
	105 Move X8, 0x5BA000
	106 Move X8, [X8+2600]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X8, 0x621000
	113 Move X8, [X8+576]
	114 Move X1, X20
	115 Move X2, X31
	116 Move X0, [X8]
	117 Call Debug.LogWarning, X0, X1
	118 Move W8, 1
	119 Move [X20+97], W8
	120 Move X0, [X20+56]
	121 Compare X0, 0
	122 JumpIfEqual {329}
	123 Move X8, 0x620000
	124 Move X8, [X8+3024]
	125 Move X25, 0x620000
	126 Move X26, 0x5BA000
	127 Move X27, 0x621000
	128 Move X29, 0x621000
	129 Move X23, 0x5BF000
	130 Move X25, [X25+3008]
	131 Move X26, [X26+1432]
	132 Move X27, [X27+568]
	133 Move X29, [X29+536]
	134 Move X23, [X23+592]
	135 Move X1, [X8]
	136 Move X24, 0x621000
	137 Move X24, [X24+560]
	138 Add X8, X31, 8
	139 Call List`1<Object>.GetEnumerator, X0
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 Move X8, [X31+24]
	142 Move [X31+4], V0
	143 Move [X31+80], X8
	144 Move X1, [X25]
	145 Add X0, X31, 64
	146 Call Enumerator<Object>.MoveNext, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {284}
	151 Move X0, [X26]
	152 Move X21, [X31+80]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X21
	158 Move X1, X31
	159 Move X2, X31
	160 Call Object.op_Equality, X0, X1
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {144}
	165 Move W8, [X20+96]
	166 Compare W8, 0
	167 JumpIfNotEqual {249}
	168 Move X0, [X27]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Compare X21, 0
	174 JumpIfEqual {324}
	175 Move X8, [X27]
	176 Move X8, [X8+184]
	177 Move X1, [X8]
	178 Move X0, X21
	179 Move X2, X31
	180 Call Renderer.GetMaterials, X0, X1
	181 Move X8, [X27]
	182 Move X8, [X8+184]
	183 Move X0, [X8]
	184 Compare X0, 0
	185 JumpIfEqual {325}
	186 Move X8, 0x621000
	187 Move X8, [X8+552]
	188 Move X1, [X8]
	189 Add X8, X31, 8
	190 Call List`1<Object>.GetEnumerator, X0
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 Move X8, [X31+24]
	193 Move [X31+2], V0
	194 Move [X31+48], X8
	195 Move X1, [X29]
	196 Add X0, X31, 32
	197 Call Enumerator<Object>.MoveNext, X0
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {217}
	202 Move X0, [X31+48]
	203 Move TEMP, X19
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {212}
	207 Compare X0, 0
	208 JumpIfEqual {278}
	209 Move X1, [X23]
	210 Move X2, X31
	211 Call Material.EnableKeyword, X0, X1
	212 Compare X0, 0
	213 JumpIfEqual {277}
	214 Move X1, [X23]
	215 Move X2, X31
	216 Call Material.DisableKeyword, X0, X1
	217 Move X22, X31
	218 Move W28, 11
	219 Move X8, 0x621000
	220 Move X8, [X8+528]
	221 Move X1, [X8]
	222 Add X0, X31, 32
	223 Call Enumerator<Object>.Dispose, X0
	224 Compare X22, 0
	225 JumpIfNotEqual {326}
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Compare W28, 0
	228 JumpIfNotEqual {284}
	229 Move X0, [X27]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {235}
	233 Call 0x1C17DFC
	234 Move X0, [X27]
	235 Move X8, [X0+184]
	236 Move X8, [X8]
	237 Compare X8, 0
	238 JumpIfEqual {328}
	239 Move W2, [X8+24]
	240 Move W9, [X8+28]
	241 Add W9, W9, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move [X8+24], W31
	244 Move [X8+28], W9
	245 Move X0, [X8+16]
	246 Move W1, W31
	247 Move X3, X31
	248 Call Array.Clear, X0, X1, X2
	249 Compare X21, 0
	250 JumpIfEqual {322}
	251 Move X1, [X20+88]
	252 Move X0, X21
	253 Move X2, X31
	254 Call Renderer.GetPropertyBlock, X0, X1
	255 Move X0, [X24]
	256 Move X22, [X20+88]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Compare X22, 0
	262 JumpIfEqual {323}
	263 Move X8, [X24]
	264 Move X8, [X8+184]
	265 Move W1, [X8]
	266 Move X0, X22
	267 Move V0, V8
	268 Move V1, V10
	269 Move V2, V11
	270 Move V3, V9
	271 Move X2, X31
	272 Call MaterialPropertyBlock.SetColor, X0, X1, X2
	273 Move X1, [X20+88]
	274 Move X0, X21
	275 Move X2, X31
	276 Call Renderer.SetPropertyBlock, X0, X1
	277 Call 0x1C17F20
	278 Call 0x1C17F20
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Call 0x3EB2AD0
	281 Move X22, [X0]
	282 Call 0x3EB2AE0
	283 Move W28, W31
	284 Move X8, 0x620000
	285 Move X8, [X8+3000]
	286 Add X0, X31, 64
	287 Move X1, [X8]
	288 Call Enumerator<Object>.Dispose, X0
	289 Move X20, [X31+224]
	290 Move X19, [X31+232]
	291 Move X22, [X31+208]
	292 Move X21, [X31+216]
	293 Move X24, [X31+192]
	294 Move X23, [X31+200]
	295 Move X26, [X31+176]
	296 Move X25, [X31+184]
	297 Move X28, [X31+160]
	298 Move X27, [X31+168]
	299 Move X29, [X31+144]
	300 Move X30, [X31+152]
	301 Move D9, [X31+128]
	302 Move D8, [X31+136]
	303 Move D11, [X31+112]
	304 Move D10, [X31+120]
	305 Move V12, [X31+96]
	306 Add X31, X31, 240
	307 Return 
	308 Move X19, X1
	309 Move X20, X0
	310 Move X22, X31
	311 Move X8, 0x621000
	312 Move X8, [X8+528]
	313 Move X1, [X8]
	314 Add X0, X31, 32
	315 Call Enumerator<Object>.Dispose, X0
	316 Move X0, X20
	317 Move X1, X19
	318 Compare X22, 0
	319 JumpIfEqual {332}
	320 Move X0, X22
	321 Call 0x1C17F18
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X0, X22
	327 Call 0x1C17F18
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X19, X1
	331 Move X20, X0
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Call 0x3EB2AD0
	334 Move X19, [X0]
	335 Call 0x3EB2AE0
	336 Move X8, 0x620000
	337 Move X8, [X8+3000]
	338 Add X0, X31, 64
	339 Move X1, [X8]
	340 Call Enumerator<Object>.Dispose, X0
	341 Compare X19, 0
	342 JumpIfEqual {289}
	343 Move X0, X19
	344 Call 0x1C17F18
	345 Move X20, X0
	346 Move X19, X31
	347 Move X20, X0
	348 Move X8, 0x620000
	349 Move X8, [X8+3000]
	350 Move X1, [X8]
	351 Add X0, X31, 64
	352 Call Enumerator<Object>.Dispose, X0
	353 Compare X19, 0
	354 JumpIfNotEqual {357}
	355 Move X0, X20
	356 Call 0x1D2D690
	357 Move X0, X19
	358 Call 0x1C17F18
	359 Call 0x1991590

Method: System.Boolean GetEmissionEnabled()

Disassembly:
	0x03B3A900 LDR X30, [X31], #0x20
	0x03B3A904 RET
	0x03B3A908 BL 0x1C171E0
	0x03B3A90C BL 0x1C16F20
	0x03B3A910 LDR X0, [X0 + 0x110]
	0x03B3A914 RET
	0x03B3A918 STR X1, [X0 + 0x110]
	0x03B3A91C RET
	0x03B3A920 STR X30, [X31 - 0x20]!
	0x03B3A924 STP X20, X19, [X31 + 0x10]
	0x03B3A928 ADRP X20, 0x8A8000
	0x03B3A92C LDRB W8, [X20 + 0x828]
	0x03B3A930 MOV X19, X0
	0x03B3A934 TBNZ X8, 0x0, 0x3B3A94C
	0x03B3A938 ADRP X0, 0x620000
	0x03B3A93C LDR X0, [X0 + 0x298]
	0x03B3A940 BL 0x1C16CF4
	0x03B3A944 MOVZ W8, 0x1
	0x03B3A948 STRB W8, [X20 + 0x828]
	0x03B3A94C LDR X0, [X19 + 0x108]
	0x03B3A950 CBZ X0, 0x3B3A978
	0x03B3A954 ADRP X8, 0x620000
	0x03B3A958 LDR X8, [X8 + 0x298]
	0x03B3A95C LDR X1, [X8]
	0x03B3A960 BL 0x2D57B54
	0x03B3A964 LDP X20, X19, [X31 + 0x10]
	0x03B3A968 CMP W0, 0x0
	0x03B3A96C CSET W0, GT
	0x03B3A970 LDR X30, [X31], #0x20
	0x03B3A974 RET
	0x03B3A978 BL 0x1C16F20
	0x03B3A97C LDR W8, [X0 + 0x5C]
	0x03B3A980 CMP W8, 0x0
	0x03B3A984 CSET W0, NE
	0x03B3A988 RET
	0x03B3A98C LDR X0, [X0 + 0x118]
	0x03B3A990 RET
	0x03B3A994 STR X1, [X0 + 0x118]
	0x03B3A998 RET
	0x03B3A99C LDR X0, [X0 + 0x120]
	0x03B3A9A0 RET
	0x03B3A9A4 LDR X0, [X0 + 0x128]
	0x03B3A9A8 RET
	0x03B3A9AC STR X1, [X0 + 0x128]
	0x03B3A9B0 RET
	0x03B3A9B4 LDR X0, [X0 + 0x130]
	0x03B3A9B8 RET
	0x03B3A9BC LDR X0, [X0 + 0x138]
	0x03B3A9C0 RET
	0x03B3A9C4 STR X1, [X0 + 0x138]
	0x03B3A9C8 RET
	0x03B3A9CC LDR X0, [X0 + 0x140]
	0x03B3A9D0 RET
	0x03B3A9D4 LDR X0, [X0 + 0x148]
	0x03B3A9D8 RET
	0x03B3A9DC RET
	0x03B3A9E0 STP X30, X23, [X31 - 0x30]!
	0x03B3A9E4 STP X22, X21, [X31 + 0x10]
	0x03B3A9E8 STP X20, X19, [X31 + 0x20]
	0x03B3A9EC ADRP X20, 0x8A8000
	0x03B3A9F0 LDRB W8, [X20 + 0x829]
	0x03B3A9F4 MOV X19, X0
	0x03B3A9F8 TBNZ X8, 0x0, 0x3B3AA88
	0x03B3A9FC ADRP X0, 0x620000
	0x03B3AA00 LDR X0, [X0 + 0x2A0]
	0x03B3AA04 BL 0x1C16CF4
	0x03B3AA08 ADRP X0, 0x5B9000
	0x03B3AA0C LDR X0, [X0 + 0xA28]
	0x03B3AA10 BL 0x1C16CF4
	0x03B3AA14 ADRP X0, 0x620000
	0x03B3AA18 LDR X0, [X0 + 0x2A8]
	0x03B3AA1C BL 0x1C16CF4
	0x03B3AA20 ADRP X0, 0x620000
	0x03B3AA24 LDR X0, [X0 + 0x2B0]
	0x03B3AA28 BL 0x1C16CF4
	0x03B3AA2C ADRP X0, 0x620000
	0x03B3AA30 LDR X0, [X0 + 0x2B8]
	0x03B3AA34 BL 0x1C16CF4
	0x03B3AA38 ADRP X0, 0x620000
	0x03B3AA3C LDR X0, [X0 + 0x2C0]
	0x03B3AA40 BL 0x1C16CF4
	0x03B3AA44 ADRP X0, 0x619000
	0x03B3AA48 LDR X0, [X0 + 0x898]
	0x03B3AA4C BL 0x1C16CF4
	0x03B3AA50 ADRP X0, 0x620000
	0x03B3AA54 LDR X0, [X0 + 0x2C8]
	0x03B3AA58 BL 0x1C16CF4
	0x03B3AA5C ADRP X0, 0x620000
	0x03B3AA60 LDR X0, [X0 + 0x2D0]
	0x03B3AA64 BL 0x1C16CF4
	0x03B3AA68 ADRP X0, 0x620000
	0x03B3AA6C LDR X0, [X0 + 0x2D8]
	0x03B3AA70 BL 0x1C16CF4
	0x03B3AA74 ADRP X0, 0x620000
	0x03B3AA78 LDR X0, [X0 + 0x2E0]
	0x03B3AA7C BL 0x1C16CF4
	0x03B3AA80 MOVZ W8, 0x1
	0x03B3AA84 STRB W8, [X20 + 0x829]
	0x03B3AA88 LDR X1, [X19 + 0x40]
	0x03B3AA8C CBZ X1, 0x3B3ACD0
	0x03B3AA90 LDR W8, [X1 + 0x18]
	0x03B3AA94 CBNZ W8, 0x3B3AB44
	0x03B3AA98 ADRP X8, 0x620000
	0x03B3AA9C LDR X8, [X8 + 0x2A0]
	0x03B3AAA0 MOV X0, X19
	0x03B3AAA4 LDR X2, [X8]
	0x03B3AAA8 BL 0x21A4608
	0x03B3AAAC ADRP X23, 0x620000
	0x03B3AAB0 LDR X23, [X23 + 0x2D8]
	0x03B3AAB4 LDR X20, [X19 + 0x40]
	0x03B3AAB8 LDR X0, [X23]
	0x03B3AABC LDR W8, [X0 + 0xE0]
	0x03B3AAC0 CBNZ W8, 0x3B3AACC
	0x03B3AAC4 BL 0x1C16DFC
	0x03B3AAC8 LDR X0, [X23]
	0x03B3AACC LDR X8, [X0 + 0xB8]
	0x03B3AAD0 LDR X21, [X8 + 0x8]
	0x03B3AAD4 CBNZ X21, 0x3B3AB28
	0x03B3AAD8 LDR W8, [X0 + 0xE0]
	0x03B3AADC CBNZ W8, 0x3B3AAE8
	0x03B3AAE0 BL 0x1C16DFC
	0x03B3AAE4 LDR X0, [X23]
	0x03B3AAE8 ADRP X9, 0x620000
	0x03B3AAEC LDR X8, [X0 + 0xB8]
	0x03B3AAF0 LDR X9, [X9 + 0x2C8]
	0x03B3AAF4 LDR X22, [X8]
	0x03B3AAF8 LDR X0, [X9]
	0x03B3AAFC BL 0x1C16F10
	0x03B3AB00 ADRP X8, 0x620000
	0x03B3AB04 LDR X8, [X8 + 0x2D0]
	0x03B3AB08 MOV X1, X22
	0x03B3AB0C MOV X3, X31
	0x03B3AB10 MOV X21, X0
	0x03B3AB14 LDR X2, [X8]
	0x03B3AB18 BL 0x24AD1FC
	0x03B3AB1C LDR X8, [X23]
	0x03B3AB20 LDR X8, [X8 + 0xB8]
	0x03B3AB24 STR X21, [X8 + 0x8]
	0x03B3AB28 CBZ X20, 0x3B3ACD0
	0x03B3AB2C ADRP X8, 0x620000
	0x03B3AB30 LDR X8, [X8 + 0x2C0]
	0x03B3AB34 MOV X0, X20
	0x03B3AB38 MOV X1, X21
	0x03B3AB3C LDR X2, [X8]
	0x03B3AB40 BL 0x301D8DC
	0x03B3AB44 LDR X0, [X19 + 0x120]
	0x03B3AB48 CBZ X0, 0x3B3ACD0
	0x03B3AB4C ADRP X8, 0x620000
	0x03B3AB50 LDR X8, [X8 + 0x2B0]
	0x03B3AB54 LDR X1, [X19 + 0x118]
	0x03B3AB58 MOV X2, X19
	0x03B3AB5C LDR X3, [X8]
	0x03B3AB60 BL 0x212EF58
	0x03B3AB64 LDR X0, [X19 + 0x130]
	0x03B3AB68 CBZ X0, 0x3B3ACD0
	0x03B3AB6C ADRP X8, 0x620000
	0x03B3AB70 LDR X8, [X8 + 0x2B8]
	0x03B3AB74 LDR X1, [X19 + 0x128]
	0x03B3AB78 MOV X2, X19
	0x03B3AB7C LDR X3, [X8]
	0x03B3AB80 BL 0x212EF58
	0x03B3AB84 LDR X0, [X19 + 0x140]
	0x03B3AB88 CBZ X0, 0x3B3ACD0
	0x03B3AB8C ADRP X8, 0x620000
	0x03B3AB90 LDR X8, [X8 + 0x2A8]
	0x03B3AB94 LDR X1, [X19 + 0x138]
	0x03B3AB98 MOV X2, X19
	0x03B3AB9C LDR X3, [X8]
	0x03B3ABA0 BL 0x212EF58
	0x03B3ABA4 MOV X0, X19
	0x03B3ABA8 BL 0x3B3ACD4
	0x03B3ABAC LDR X0, [X19 + 0x180]
	0x03B3ABB0 CBZ X0, 0x3B3ACD0
	0x03B3ABB4 MOV X1, X31
	0x03B3ABB8 BL 0x3C45AB0
	0x03B3ABBC CMP W0, 0x0
	0x03B3ABC0 B.GT 0x3B3AC84
	0x03B3ABC4 LDR X0, [X19 + 0x188]
	0x03B3ABC8 CBZ X0, 0x3B3ACD0
	0x03B3ABCC MOV X1, X31
	0x03B3ABD0 BL 0x3C45AB0
	0x03B3ABD4 CMP W0, 0x0
	0x03B3ABD8 B.GT 0x3B3AC84
	0x03B3ABDC LDR X0, [X19 + 0x190]
	0x03B3ABE0 CBZ X0, 0x3B3ACD0
	0x03B3ABE4 MOV X1, X31
	0x03B3ABE8 BL 0x3C45AB0
	0x03B3ABEC CMP W0, 0x0
	0x03B3ABF0 B.GT 0x3B3AC84
	0x03B3ABF4 LDR X0, [X19 + 0x198]
	0x03B3ABF8 CBZ X0, 0x3B3ACD0
	0x03B3ABFC MOV X1, X31
	0x03B3AC00 BL 0x3C45AB0
	0x03B3AC04 CMP W0, 0x0
	0x03B3AC08 B.GT 0x3B3AC84
	0x03B3AC0C LDR X0, [X19 + 0x1A0]
	0x03B3AC10 CBZ X0, 0x3B3ACD0
	0x03B3AC14 MOV X1, X31
	0x03B3AC18 BL 0x3C45AB0
	0x03B3AC1C CMP W0, 0x0
	0x03B3AC20 B.GT 0x3B3AC84
	0x03B3AC24 LDR X0, [X19 + 0x1A8]
	0x03B3AC28 CBZ X0, 0x3B3ACD0
	0x03B3AC2C MOV X1, X31
	0x03B3AC30 BL 0x3C45AB0
	0x03B3AC34 CMP W0, 0x0
	0x03B3AC38 B.GT 0x3B3AC84
	0x03B3AC3C LDR X0, [X19 + 0x1B0]
	0x03B3AC40 CBZ X0, 0x3B3ACD0
	0x03B3AC44 MOV X1, X31
	0x03B3AC48 BL 0x3C45AB0
	0x03B3AC4C CMP W0, 0x0
	0x03B3AC50 B.GT 0x3B3AC84
	0x03B3AC54 LDR X0, [X19 + 0x1B8]
	0x03B3AC58 CBZ X0, 0x3B3ACD0
	0x03B3AC5C MOV X1, X31
	0x03B3AC60 BL 0x3C45AB0
	0x03B3AC64 CMP W0, 0x0
	0x03B3AC68 B.GT 0x3B3AC84
	0x03B3AC6C LDR X0, [X19 + 0x1C0]
	0x03B3AC70 CBZ X0, 0x3B3ACD0
	0x03B3AC74 MOV X1, X31
	0x03B3AC78 BL 0x3C45AB0
	0x03B3AC7C CMP W0, 0x1
	0x03B3AC80 B.LT 0x3B3ACC0
	0x03B3AC84 ADRP X8, 0x5B9000
	0x03B3AC88 LDR X8, [X8 + 0xA28]
	0x03B3AC8C ADRP X20, 0x620000
	0x03B3AC90 LDR X0, [X8]
	0x03B3AC94 LDR W8, [X0 + 0xE0]
	0x03B3AC98 LDR X20, [X20 + 0x2E0]
	0x03B3AC9C CBNZ W8, 0x3B3ACA4
	0x03B3ACA0 BL 0x1C16DFC
	0x03B3ACA4 LDR X0, [X20]
	0x03B3ACA8 MOV X1, X19
	0x03B3ACAC LDP X20, X19, [X31 + 0x20]
	0x03B3ACB0 LDP X22, X21, [X31 + 0x10]
	0x03B3ACB4 MOV X2, X31
	0x03B3ACB8 LDP X30, X23, [X31], #0x30
	0x03B3ACBC B 0x3C06B0C
	0x03B3ACC0 LDP X20, X19, [X31 + 0x20]
	0x03B3ACC4 LDP X22, X21, [X31 + 0x10]
	0x03B3ACC8 LDP X30, X23, [X31], #0x30
	0x03B3ACCC RET
	0x03B3ACD0 BL 0x1C16F20
	0x03B3ACD4 STP X30, X21, [X31 - 0x20]!
	0x03B3ACD8 STP X20, X19, [X31 + 0x10]
	0x03B3ACDC ADRP X21, 0x8A8000
	0x03B3ACE0 ADRP X20, 0x5B9000
	0x03B3ACE4 LDRB W8, [X21 + 0x82A]
	0x03B3ACE8 LDR X20, [X20 + 0x598]
	0x03B3ACEC MOV X19, X0
	0x03B3ACF0 TBNZ X8, 0x0, 0x3B3AD14
	0x03B3ACF4 ADRP X0, 0x620000
	0x03B3ACF8 LDR X0, [X0 + 0x2E8]
	0x03B3ACFC BL 0x1C16CF4
	0x03B3AD00 ADRP X0, 0x5B9000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X20, 0x8A9000
	014 Move W8, [X20+2072]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {58}
	020 Move X0, 0x621000
	021 Move X0, [X0+528]
	022 Call 0x1C17CF4
	023 Move X0, 0x620000
	024 Move X0, [X0+3000]
	025 Call 0x1C17CF4
	026 Move X0, 0x620000
	027 Move X0, [X0+3008]
	028 Call 0x1C17CF4
	029 Move X0, 0x621000
	030 Move X0, [X0+536]
	031 Call 0x1C17CF4
	032 Move X0, 0x621000
	033 Move X0, [X0+544]
	034 Call 0x1C17CF4
	035 Move X0, 0x620000
	036 Move X0, [X0+3016]
	037 Call 0x1C17CF4
	038 Move X0, 0x614000
	039 Move X0, [X0+3896]
	040 Call 0x1C17CF4
	041 Move X0, 0x620000
	042 Move X0, [X0+3024]
	043 Call 0x1C17CF4
	044 Move X0, 0x621000
	045 Move X0, [X0+552]
	046 Call 0x1C17CF4
	047 Move X0, 0x5BA000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move X0, 0x621000
	051 Move X0, [X0+568]
	052 Call 0x1C17CF4
	053 Move X0, 0x5BF000
	054 Move X0, [X0+592]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+2072], W8
	058 Move [X31+64], X31
	059 Move [X31+72], X31
	060 Move [X31+80], X31
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+48], X31
	064 Move X0, [X19+56]
	065 Compare X0, 0
	066 JumpIfEqual {250}
	067 Move X8, 0x620000
	068 Move X8, [X8+3024]
	069 Move X23, 0x620000
	070 Move X24, 0x5BA000
	071 Move X20, 0x621000
	072 Move X25, 0x621000
	073 Move X26, 0x621000
	074 Move X23, [X23+3008]
	075 Move X24, [X24+1432]
	076 Move X20, [X20+568]
	077 Move X25, [X25+552]
	078 Move X26, [X26+536]
	079 Move X1, [X8]
	080 Move X27, 0x5BF000
	081 Move X22, 0x621000
	082 Move X21, 0x620000
	083 Move X27, [X27+592]
	084 Move X22, [X22+528]
	085 Move X21, [X21+3000]
	086 Add X8, X31, 8
	087 Call List`1<Object>.GetEnumerator, X0
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move X8, [X31+24]
	090 Move [X31+4], V0
	091 Move [X31+80], X8
	092 Move X1, [X23]
	093 Add X0, X31, 64
	094 Call Enumerator<Object>.MoveNext, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {193}
	099 Move X0, [X24]
	100 Move X19, [X31+80]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X19
	106 Move X1, X31
	107 Move X2, X31
	108 Call Object.op_Equality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {92}
	113 Move X0, [X20]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Compare X19, 0
	119 JumpIfEqual {246}
	120 Move X8, [X20]
	121 Move X8, [X8+184]
	122 Move X1, [X8]
	123 Move X0, X19
	124 Move X2, X31
	125 Call Renderer.GetSharedMaterials, X0, X1
	126 Move X8, [X20]
	127 Move X8, [X8+184]
	128 Move X0, [X8]
	129 Compare X0, 0
	130 JumpIfEqual {247}
	131 Move X1, [X25]
	132 Add X8, X31, 8
	133 Call List`1<Object>.GetEnumerator, X0
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 Move X8, [X31+24]
	136 Move [X31+2], V0
	137 Move [X31+48], X8
	138 Move X1, [X26]
	139 Add X0, X31, 32
	140 Call Enumerator<Object>.MoveNext, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {177}
	145 Move X0, [X31+48]
	146 Compare X0, 0
	147 JumpIfEqual {186}
	148 Move X1, [X27]
	149 Move X2, X31
	150 Call Material.IsKeywordEnabled, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {138}
	155 Move X0, [X20]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X20]
	161 Move X8, [X0+184]
	162 Move X8, [X8]
	163 Compare X8, 0
	164 JumpIfEqual {187}
	165 Move W2, [X8+24]
	166 Move W9, [X8+28]
	167 Add W9, W9, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move [X8+24], W31
	170 Move [X8+28], W9
	171 Move X0, [X8+16]
	172 Move W1, W31
	173 Move X3, X31
	174 Call Array.Clear, X0, X1, X2
	175 Move X19, X31
	176 Move W28, 6
	177 Move X19, X31
	178 Move W28, 2
	179 Move X1, [X22]
	180 Add X0, X31, 32
	181 Call Enumerator<Object>.Dispose, X0
	182 Compare X19, 0
	183 JumpIfNotEqual {248}
	184 Or W8, W28, 2
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Call 0x3EB2AD0
	190 Move X19, [X0]
	191 Call 0x3EB2AE0
	192 Move W28, W31
	193 Move X1, [X21]
	194 Add X0, X31, 64
	195 Call Enumerator<Object>.Dispose, X0
	196 Move X0, [X20]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {202}
	200 Call 0x1C17DFC
	201 Move X0, [X20]
	202 Move X8, [X0+184]
	203 Move X8, [X8]
	204 Compare X8, 0
	205 JumpIfEqual {250}
	206 Move W2, [X8+24]
	207 Move W9, [X8+28]
	208 Add W9, W9, 1
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move [X8+24], W31
	211 Move [X8+28], W9
	212 Move X0, [X8+16]
	213 Move W1, W31
	214 Move X3, X31
	215 Call Array.Clear, X0, X1, X2
	216 Move W0, 1
	217 Move X20, [X31+176]
	218 Move X19, [X31+184]
	219 Move X22, [X31+160]
	220 Move X21, [X31+168]
	221 Move X24, [X31+144]
	222 Move X23, [X31+152]
	223 Move X26, [X31+128]
	224 Move X25, [X31+136]
	225 Move X28, [X31+112]
	226 Move X27, [X31+120]
	227 Move X30, [X31+96]
	228 Add X31, X31, 192
	229 Return X0
	230 Move X1, [X21]
	231 Add X0, X31, 64
	232 Call Enumerator<Object>.Dispose, X0
	233 Move W0, W31
	234 Move [X31], X1
	235 Move [X31+104], X0
	236 Move X19, X31
	237 Move X1, [X22]
	238 Add X0, X31, 32
	239 Call Enumerator<Object>.Dispose, X0
	240 Move X0, [X31+104]
	241 Move X1, [X31]
	242 Compare X19, 0
	243 JumpIfEqual {253}
	244 Move X0, X19
	245 Call 0x1C17F18
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Move X0, X19
	249 Call 0x1C17F18
	250 Call 0x1C17F20
	251 Move [X31], X1
	252 Move [X31+104], X0
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Call 0x3EB2AD0
	255 Move X19, [X0]
	256 Call 0x3EB2AE0
	257 Move X1, [X21]
	258 Add X0, X31, 64
	259 Call Enumerator<Object>.Dispose, X0
	260 Compare X19, 0
	261 JumpIfEqual {196}
	262 Move X0, X19
	263 Call 0x1C17F18
	264 Move [X31+104], X0
	265 Move X19, X31
	266 Move [X31+104], X0
	267 Move X1, [X21]
	268 Add X0, X31, 64
	269 Call Enumerator<Object>.Dispose, X0
	270 Compare X19, 0
	271 JumpIfNotEqual {274}
	272 Move X0, [X31+104]
	273 Call 0x1D2D690
	274 Move X0, X19
	275 Call 0x1C17F18
	276 Call 0x1991590

Method: System.Void OnFirstHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B3AD04 LDR X0, [X0 + 0x598]
	0x03B3AD08 BL 0x1C16CF4
	0x03B3AD0C MOVZ W8, 0x1
	0x03B3AD10 STRB W8, [X21 + 0x82A]
	0x03B3AD14 LDR X0, [X20]
	0x03B3AD18 LDR X20, [X19 + 0x38]
	0x03B3AD1C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W8, [X0+48]
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move W1, 1
	006 Move X3, [X8+376]
	007 Move X2, [X8+384]
	008 CallNoReturn X3
	009 Return 

Method: System.Void OnLastHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B3AD20 CBNZ W8, 0x3B3AD28
	0x03B3AD24 BL 0x1C16DFC
	0x03B3AD28 MOV X0, X20
	0x03B3AD2C MOV X1, X31
	0x03B3AD30 MOV X2, X31
	0x03B3AD34 BL 0x3C354F8
	0x03B3AD38 TBNZ X0, 0x0, 0x3B3AD50
	0x03B3AD3C ADRP X8, 0x620000
	0x03B3AD40 LDR X8, [X8 + 0x2E8]
	0x03B3AD44 LDR X0, [X8]
	0x03B3AD48 BL 0x295F6C8
	0x03B3AD4C STR X0, [X19 + 0x38]
	0x03B3AD50 LDP X20, X19, [X31 + 0x10]
	0x03B3AD54 LDP X30, X21, [X31], #0x20
	0x03B3AD58 RET
	0x03B3AD5C STP X30, X19, [X31 - 0x10]!
	0x03B3AD60 MOV X19, X0
	0x03B3AD64 BL 0x3B3ACD4
	0x03B3AD68 MOV X0, X19
	0x03B3AD6C LDP X30, X19, [X31], #0x10
	0x03B3AD70 B 0x3B3A410
	0x03B3AD74 B 0x3B3AD78
	0x03B3AD78 STP X30, X21, [X31 - 0x20]!
	0x03B3AD7C STP X20, X19, [X31 + 0x10]
	0x03B3AD80 ADRP X21, 0x8A8000
	0x03B3AD84 ADRP X20, 0x5B9000
	0x03B3AD88 LDRB W8, [X21 + 0x82C]
	0x03B3AD8C LDR X20, [X20 + 0x598]
	0x03B3AD90 MOV X19, X0
	0x03B3AD94 TBNZ X8, 0x0, 0x3B3ADAC
	0x03B3AD98 ADRP X0, 0x5B9000
	0x03B3AD9C LDR X0, [X0 + 0x598]
	0x03B3ADA0 BL 0x1C16CF4
	0x03B3ADA4 MOVZ W8, 0x1
	0x03B3ADA8 STRB W8, [X21 + 0x82C]
	0x03B3ADAC LDR X0, [X20]
	0x03B3ADB0 LDR X20, [X19 + 0x178]
	0x03B3ADB4 LDR W8, [X0 + 0xE0]
	0x03B3ADB8 CBNZ W8, 0x3B3ADC0
	0x03B3ADBC BL 0x1C16DFC
	0x03B3ADC0 MOV X0, X20
	0x03B3ADC4 MOV X1, X31
	0x03B3ADC8 MOV X2, X31
	0x03B3ADCC BL 0x3C3883C
	0x03B3ADD0 TBNZ X0, 0x0, 0x3B3ADF4
	0x03B3ADD4 LDR X0, [X19 + 0x178]
	0x03B3ADD8 CBZ X0, 0x3B3AE00
	0x03B3ADDC LDR X8, [X0]
	0x03B3ADE0 MOV X1, X19
	0x03B3ADE4 LDR X9, [X8 + 0x4F8]
	0x03B3ADE8 LDR X2, [X8 + 0x500]
	0x03B3ADEC BLR X9
	0x03B3ADF0 STR X31, [X19 + 0x178]
	0x03B3ADF4 LDP X20, X19, [X31 + 0x10]
	0x03B3ADF8 LDP X30, X21, [X31], #0x20
	0x03B3ADFC RET
	0x03B3AE00 BL 0x1C16F20
	0x03B3AE04 RET
	0x03B3AE08 MOV X1, X31
	0x03B3AE0C B 0x3C32E90
	0x03B3AE10 SUB X31, X31, 0x70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x8A9000
	006 Move W8, [X19+2073]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x621000
	013 Move X0, [X0+352]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2073], W8
	017 Move W8, [X20+48]
	018 Compare W8, 0
	019 JumpIfEqual {44}
	020 Move W8, [X20+49]
	021 Compare W8, 0
	022 JumpIfEqual {49}
	023 Move X19, [X20+80]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Compare X19, 0
	027 JumpIfEqual {50}
	028 Move X10, 0x621000
	029 Move X8, [X19]
	030 Move X10, [X10+352]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 6
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Move W0, W31
	050 Move W0, W31
	051 Move W9, [X10]
	052 Add W9, W9, 6
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X20, X21
	060 Compare X20, 0
	061 JumpIfEqual {72}
	062 Move X8, [X20]
	063 And W1, W0, 1
	064 Move X0, X20
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X3, [X8+376]
	068 Move X2, [X8+384]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 CallNoReturn X3
	072 Call 0x1C17F20

Method: System.Void OnFirstSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B3AE14 STR X30, [X31 + 0x40]
	0x03B3AE18 STP X22, X21, [X31 + 0x50]
	0x03B3AE1C STP X20, X19, [X31 + 0x60]
	0x03B3AE20 ADRP X22, 0x8A8000
	0x03B3AE24 LDRB W9, [X22 + 0x82D]
	0x03B3AE28 MOV X20, X1
	0x03B3AE2C MOV X21, X0

ISIL:
	001 Move W8, [X0+49]
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move W1, 1
	006 Move X3, [X8+376]
	007 Move X2, [X8+384]
	008 CallNoReturn X3
	009 Return 

Method: System.Void OnLastSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B3AE30 MOV X19, X8
	0x03B3AE34 TBNZ X9, 0x0, 0x3B3AE58
	0x03B3AE38 ADRP X0, 0x620000
	0x03B3AE3C LDR X0, [X0 + 0x2F0]
	0x03B3AE40 BL 0x1C16CF4
	0x03B3AE44 ADRP X0, 0x5E1000
	0x03B3AE48 LDR X0, [X0 + 0x610]
	0x03B3AE4C BL 0x1C16CF4
	0x03B3AE50 MOVZ W8, 0x1
	0x03B3AE54 STRB W8, [X22 + 0x82D]
	0x03B3AE58 STP X31, X31, [X31 + 0x20]
	0x03B3AE5C STR W31, [X31 + 0x38]
	0x03B3AE60 STR X31, [X31 + 0x30]
	0x03B3AE64 LDR X0, [X21 + 0x150]
	0x03B3AE68 CBZ X0, 0x3B3AEDC
	0x03B3AE6C ADRP X8, 0x620000
	0x03B3AE70 LDR X8, [X8 + 0x2F0]
	0x03B3AE74 ADD X2, X31, 0x20
	0x03B3AE78 MOV X1, X20
	0x03B3AE7C LDR X3, [X8]
	0x03B3AE80 BL 0x2AA9E10
	0x03B3AE84 TBZ X0, 0x0, 0x3B3AE94
	0x03B3AE88 LDUR V0, [X31 + 0x2C]
	0x03B3AE8C LDR V1, [X31 + 0x2]
	0x03B3AE90 B 0x3B3AEC0
	0x03B3AE94 ADRP X8, 0x5E1000
	0x03B3AE98 LDR X8, [X8 + 0x610]
	0x03B3AE9C LDR X0, [X8]
	0x03B3AEA0 LDR W8, [X0 + 0xE0]
	0x03B3AEA4 CBNZ W8, 0x3B3AEAC
	0x03B3AEA8 BL 0x1C16DFC
	0x03B3AEAC ADD X8, X31, 0x0
	0x03B3AEB0 MOV X0, X31
	0x03B3AEB4 BL 0x3C3E05C
	0x03B3AEB8 LDUR V0, [X31 + 0xC]
	0x03B3AEBC LDR V1, [X31]
	0x03B3AEC0 STUR V0, [X19 + 0xC]
	0x03B3AEC4 STR V1, [X19]
	0x03B3AEC8 LDP X20, X19, [X31 + 0x60]
	0x03B3AECC LDP X22, X21, [X31 + 0x50]
	0x03B3AED0 LDR X30, [X31 + 0x40]
	0x03B3AED4 ADD X31, X31, 0x70
	0x03B3AED8 RET
	0x03B3AEDC BL 0x1C16F20
	0x03B3AEE0 SUB X31, X31, 0x70
	0x03B3AEE4 STR X30, [X31 + 0x40]
	0x03B3AEE8 STP X22, X21, [X31 + 0x50]
	0x03B3AEEC STP X20, X19, [X31 + 0x60]
	0x03B3AEF0 ADRP X22, 0x8A8000
	0x03B3AEF4 LDRB W9, [X22 + 0x82E]
	0x03B3AEF8 MOV X20, X1
	0x03B3AEFC MOV X21, X0
	0x03B3AF00 MOV X19, X8
	0x03B3AF04 TBNZ X9, 0x0, 0x3B3AF28
	0x03B3AF08 ADRP X0, 0x620000
	0x03B3AF0C LDR X0, [X0 + 0x2F0]
	0x03B3AF10 BL 0x1C16CF4
	0x03B3AF14 ADRP X0, 0x5E1000
	0x03B3AF18 LDR X0, [X0 + 0x610]
	0x03B3AF1C BL 0x1C16CF4
	0x03B3AF20 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x8A9000
	006 Move W8, [X19+2074]
	007 Move X20, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x621000
	013 Move X0, [X0+328]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2074], W8
	017 Move W8, [X20+49]
	018 Compare W8, 0
	019 JumpIfEqual {44}
	020 Move W8, [X20+48]
	021 Compare W8, 0
	022 JumpIfEqual {49}
	023 Move X19, [X20+72]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Compare X19, 0
	027 JumpIfEqual {50}
	028 Move X10, 0x621000
	029 Move X8, [X19]
	030 Move X10, [X10+328]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 5
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Move W0, W31
	050 Move W0, W31
	051 Move W9, [X10]
	052 Add W9, W9, 5
	053 Add X8, X8, W9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X20, X21
	060 Compare X20, 0
	061 JumpIfEqual {72}
	062 Move X8, [X20]
	063 And W1, W0, 1
	064 Move X0, X20
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X3, [X8+376]
	068 Move X2, [X8+384]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 CallNoReturn X3
	072 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B3AF24 STRB W8, [X22 + 0x82E]
	0x03B3AF28 STP X31, X31, [X31 + 0x20]
	0x03B3AF2C STR W31, [X31 + 0x38]
	0x03B3AF30 STR X31, [X31 + 0x30]
	0x03B3AF34 LDR X0, [X21 + 0x158]
	0x03B3AF38 CBZ X0, 0x3B3AFAC
	0x03B3AF3C ADRP X8, 0x620000
	0x03B3AF40 LDR X8, [X8 + 0x2F0]
	0x03B3AF44 ADD X2, X31, 0x20
	0x03B3AF48 MOV X1, X20
	0x03B3AF4C LDR X3, [X8]
	0x03B3AF50 BL 0x2AA9E10
	0x03B3AF54 TBZ X0, 0x0, 0x3B3AF64
	0x03B3AF58 LDUR V0, [X31 + 0x2C]
	0x03B3AF5C LDR V1, [X31 + 0x2]
	0x03B3AF60 B 0x3B3AF90
	0x03B3AF64 ADRP X8, 0x5E1000
	0x03B3AF68 LDR X8, [X8 + 0x610]
	0x03B3AF6C LDR X0, [X8]
	0x03B3AF70 LDR W8, [X0 + 0xE0]
	0x03B3AF74 CBNZ W8, 0x3B3AF7C
	0x03B3AF78 BL 0x1C16DFC
	0x03B3AF7C ADD X8, X31, 0x0
	0x03B3AF80 MOV X0, X31
	0x03B3AF84 BL 0x3C3E05C
	0x03B3AF88 LDUR V0, [X31 + 0xC]
	0x03B3AF8C LDR V1, [X31]
	0x03B3AF90 STUR V0, [X19 + 0xC]
	0x03B3AF94 STR V1, [X19]
	0x03B3AF98 LDP X20, X19, [X31 + 0x60]
	0x03B3AF9C LDP X22, X21, [X31 + 0x50]
	0x03B3AFA0 LDR X30, [X31 + 0x40]
	0x03B3AFA4 ADD X31, X31, 0x70
	0x03B3AFA8 RET
	0x03B3AFAC BL 0x1C16F20
	0x03B3AFB0 SUB X31, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8A9000
	007 Move X21, 0x620000
	008 Move X20, 0x620000
	009 Move W8, [X22+2075]
	010 Move X21, [X21+3032]
	011 Move X20, [X20+3040]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x620000
	018 Move X0, [X0+3040]
	019 Call 0x1C17CF4
	020 Move X0, 0x620000
	021 Move X0, [X0+3032]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2075], W8
	025 Move X8, -50647040
	026 Move V0, [X8+24]
	027 Move W8, 257
	028 NotImplemented "Instruction STRH not yet implemented."
	029 Move [X19+2], V0
	030 Move X0, [X21]
	031 Call 0x1C17F10
	032 Move X1, [X20]
	033 Move X20, X0
	034 Call List`1<Object>..ctor, X0
	035 Move [X19+56], X20
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+48]
	043 Call MonoBehaviour..ctor, X0
	044 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B3AFB4 STP X30, X21, [X31 + 0x20]
	0x03B3AFB8 STP X20, X19, [X31 + 0x30]
	0x03B3AFBC ADRP X21, 0x8A8000
	0x03B3AFC0 LDRB W8, [X21 + 0x82F]
	0x03B3AFC4 MOV X20, X1
	0x03B3AFC8 MOV X19, X0
	0x03B3AFCC TBNZ X8, 0x0, 0x3B3AFF0
	0x03B3AFD0 ADRP X0, 0x620000
	0x03B3AFD4 LDR X0, [X0 + 0x2F8]
	0x03B3AFD8 BL 0x1C16CF4
	0x03B3AFDC ADRP X0, 0x5B9000
	0x03B3AFE0 LDR X0, [X0 + 0x598]
	0x03B3AFE4 BL 0x1C16CF4
	0x03B3AFE8 MOVZ W8, 0x1
	0x03B3AFEC STRB W8, [X21 + 0x82F]
	0x03B3AFF0 ADRP X21, 0x5B9000
	0x03B3AFF4 LDR X21, [X21 + 0x598]
	0x03B3AFF8 CBZ X20, 0x3B3B068
	0x03B3AFFC ADRP X10, 0x620000
	0x03B3B000 LDR X8, [X20]
	0x03B3B004 B 0x3EB1994
	0x03B3B008 LDRH W9, [X8 + 0x12E]
	0x03B3B00C LDR X1, [X10]
	0x03B3B010 CBZ X9, 0x3B3B034
	0x03B3B014 LDR X10, [X8 + 0xB0]
	0x03B3B018 ADD X10, X10, 0x8
	0x03B3B01C LDUR X11, [X10 - 0x8]
	0x03B3B020 CMP X11, X1
	0x03B3B024 B.EQ 0x3B3B044
	0x03B3B028 SUBS X9, X9, 0x1
	0x03B3B02C ADD X10, X10, 0x10
	0x03B3B030 B.NE 0x3B3B01C
	0x03B3B034 MOVZ W2, 0x6
	0x03B3B038 MOV X0, X20
	0x03B3B03C BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A9000
	007 Move X22, 0x5C1000
	008 Move X19, 0x5C1000
	009 Move X20, 0x621000
	010 Move W8, [X21+2076]
	011 Move X22, [X22+2760]
	012 Move X19, [X19+2720]
	013 Move X20, [X20+568]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5C1000
	019 Move X0, [X0+2720]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C1000
	022 Move X0, [X0+2760]
	023 Call 0x1C17CF4
	024 Move X0, 0x621000
	025 Move X0, [X0+568]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2076], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

