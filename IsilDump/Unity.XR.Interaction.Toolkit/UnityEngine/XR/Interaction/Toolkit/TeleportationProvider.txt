Type: UnityEngine.XR.Interaction.Toolkit.TeleportationProvider

Method: UnityEngine.XR.Interaction.Toolkit.TeleportRequest get_currentRequest()

Disassembly:
	0x03B83F90 MOV V8.16B, V0.16B
	0x03B83F94 MOV V10.16B, V1.16B
	0x03B83F98 MOV V9.16B, V2.16B
	0x03B83F9C CBNZ W8, 0x3B83FB4
	0x03B83FA0 ADRP X0, 0x577000
	0x03B83FA4 LDR X0, [X0 + 0x4B8]

ISIL:
	001 Move W9, [X0+104]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move [X8+32], W9
	005 Move [X8], V1
	006 Move [X8+8], V0
	007 Return X0

Method: System.Void set_currentRequest(UnityEngine.XR.Interaction.Toolkit.TeleportRequest value)

Disassembly:
	0x03B83FA8 BL 0x1C16CF4
	0x03B83FAC MOVZ W8, 0x1
	0x03B83FB0 STRB W8, [X21 + 0x5AA]
	0x03B83FB4 ADRP X8, 0x577000
	0x03B83FB8 LDR X8, [X8 + 0x4B8]
	0x03B83FBC ADRP X9, 0xFFFFFFFFFCF67000

ISIL:
	001 Move W8, [X1+32]
	002 Move V1, [X1]
	003 Move V0, [X1+16]
	004 Move [X0+104], W8
	005 Move [X0+88], V0
	006 Move [X0+72], V1
	007 Return 

Method: System.Boolean get_validRequest()

Disassembly:
	0x03B83FC0 LDR V0, [X9 + 0x240]
	0x03B83FC4 FABS S1, S10

ISIL:
	001 Move W0, [X0+108]
	002 Return X0

Method: System.Void set_validRequest(System.Boolean value)

Disassembly:
	0x03B83FC8 LDR X8, [X8]
	0x03B83FCC FABS S2, S11
	0x03B83FD0 FCMP S1, S2

ISIL:
	001 And W8, W1, 1
	002 Move [X0+108], W8
	003 Return 

Method: System.Single get_delayTime()

Disassembly:
	0x03B83FD4 FCSEL S1, S1, S2, GT
	0x03B83FD8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move V0, [X0+112]
	002 Return V0

Method: System.Void set_delayTime(System.Single value)

Disassembly:
	0x03B83FDC FMUL S0, S1, S0
	0x03B83FE0 FMOV S1, 8

ISIL:
	001 Move [X0+112], S0
	002 Return 

Method: System.Boolean QueueTeleportRequest(UnityEngine.XR.Interaction.Toolkit.TeleportRequest teleportRequest)

Disassembly:
	0x03B83FE4 LDR V3, [X8]
	0x03B83FE8 FMUL S1, S3, S1
	0x03B83FEC FCMP S0, S1
	0x03B83FF0 FCSEL S0, S0, S1, GT
	0x03B83FF4 FABD S1, S11, S11
	0x03B83FF8 FCMP S1, S0
	0x03B83FFC B.MI 0x3B8402C
	0x03B84000 LDR V1, [X19 + 0x48]
	0x03B84004 MOV X0, X20
	0x03B84008 MOV V0.16B, V8.16B

ISIL:
	001 Move W9, [X1+32]
	002 Move V1, [X1]
	003 Move V0, [X1+16]
	004 Move X8, X0
	005 Move W10, 1
	006 Move [X0+104], W9
	007 Move [X0+88], V0
	008 Move [X0+72], V1
	009 Move W0, 1
	010 Move [X8+108], W10
	011 Return X0

Method: System.Void Awake()

Disassembly:
	0x03B8400C MOV V2.16B, V9.16B
	0x03B84010 LDP X20, X19, [X31 + 0x40]
	0x03B84014 LDP X22, X21, [X31 + 0x30]
	0x03B84018 LDR X30, [X31 + 0x20]
	0x03B8401C LDP D9, D8, [X31 + 0x10]
	0x03B84020 MOV X1, X31
	0x03B84024 LDP D11, D10, [X31], #0x50
	0x03B84028 B 0x3C3EC04
	0x03B8402C LDP X20, X19, [X31 + 0x40]
	0x03B84030 LDP X22, X21, [X31 + 0x30]
	0x03B84034 LDR X30, [X31 + 0x20]
	0x03B84038 LDP D9, D8, [X31 + 0x10]
	0x03B8403C LDP D11, D10, [X31], #0x50
	0x03B84040 RET
	0x03B84044 BL 0x1C16F20
	0x03B84048 STP X30, X21, [X31 - 0x20]!
	0x03B8404C STP X20, X19, [X31 + 0x10]
	0x03B84050 ADRP X20, 0x85E000
	0x03B84054 ADRP X21, 0x5D7000
	0x03B84058 LDRB W8, [X20 + 0xAEA]
	0x03B8405C LDR X21, [X21 + 0xEB0]
	0x03B84060 MOV X19, X0
	0x03B84064 TBNZ X8, 0x0, 0x3B8407C
	0x03B84068 ADRP X0, 0x5D7000
	0x03B8406C LDR X0, [X0 + 0xEB0]
	0x03B84070 BL 0x1C16CF4
	0x03B84074 MOVZ W8, 0x1
	0x03B84078 STRB W8, [X20 + 0xAEA]
	0x03B8407C LDR X0, [X21]
	0x03B84080 LDR X20, [X19 + 0x28]
	0x03B84084 LDR W8, [X0 + 0xE0]
	0x03B84088 CBNZ W8, 0x3B84090
	0x03B8408C BL 0x1C16DFC
	0x03B84090 CBZ X20, 0x3B840C4
	0x03B84094 LDR X8, [X21]
	0x03B84098 MOV X0, X20
	0x03B8409C LDR X8, [X8 + 0xB8]
	0x03B840A0 LDR X1, [X8 + 0x28]
	0x03B840A4 BL 0x3B8353C
	0x03B840A8 LDR X8, [X21]
	0x03B840AC MOV X0, X19
	0x03B840B0 LDP X20, X19, [X31 + 0x10]
	0x03B840B4 LDR X8, [X8 + 0xB8]
	0x03B840B8 LDR X1, [X8 + 0x28]
	0x03B840BC LDP X30, X21, [X31], #0x20
	0x03B840C0 B 0x3B83E44
	0x03B840C4 BL 0x1C16F20
	0x03B840C8 STP X30, X21, [X31 - 0x20]!
	0x03B840CC STP X20, X19, [X31 + 0x10]
	0x03B840D0 ADRP X20, 0x85E000
	0x03B840D4 ADRP X21, 0x5D7000
	0x03B840D8 LDRB W8, [X20 + 0xAEB]
	0x03B840DC LDR X21, [X21 + 0xEB0]
	0x03B840E0 MOV X19, X0
	0x03B840E4 TBNZ X8, 0x0, 0x3B840FC
	0x03B840E8 ADRP X0, 0x5D7000
	0x03B840EC LDR X0, [X0 + 0xEB0]
	0x03B840F0 BL 0x1C16CF4
	0x03B840F4 MOVZ W8, 0x1
	0x03B840F8 STRB W8, [X20 + 0xAEB]
	0x03B840FC LDR X0, [X21]
	0x03B84100 LDR X20, [X19 + 0x20]
	0x03B84104 LDR W8, [X0 + 0xE0]
	0x03B84108 CBNZ W8, 0x3B84110
	0x03B8410C BL 0x1C16DFC
	0x03B84110 CBZ X20, 0x3B84154
	0x03B84114 LDR X8, [X21]
	0x03B84118 MOV X0, X20
	0x03B8411C LDR X8, [X8 + 0xB8]
	0x03B84120 LDR X1, [X8 + 0x20]
	0x03B84124 BL 0x3B8353C
	0x03B84128 LDR X0, [X19 + 0x28]
	0x03B8412C CBZ X0, 0x3B84154
	0x03B84130 LDR X8, [X21]
	0x03B84134 LDR X8, [X8 + 0xB8]
	0x03B84138 LDR X1, [X8 + 0x28]
	0x03B8413C BL 0x3B8353C
	0x03B84140 LDR X1, [X19 + 0x20]
	0x03B84144 MOV X0, X19
	0x03B84148 LDP X20, X19, [X31 + 0x10]
	0x03B8414C LDP X30, X21, [X31], #0x20
	0x03B84150 B 0x3B83E44
	0x03B84154 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x85F000
	007 Move X20, 0x570000
	008 Move W8, [X21+2786]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x570000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x570000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x570000
	022 Move X0, [X0+2704]
	023 Call 0x1C17CF4
	024 Move X0, 0x5D8000
	025 Move X0, [X0+3616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2786], W8
	029 Move X0, X19
	030 Move X1, X31
	031 Call LocomotionProvider.Awake, X0
	032 Move X0, [X20]
	033 Move X20, [X19+48]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Inequality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {89}
	046 Move V0, [X19+112]
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X8, [X19+48]
	049 Compare X8, 0
	050 JumpIfEqual {95}
	051 Move V1, [X8+44]
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move X21, 0x570000
	054 Move X21, [X21+2704]
	055 Add X1, X31, 12
	056 Move [X31+12], S0
	057 Move X0, [X21]
	058 Call 0x1C17E04
	059 Move X8, [X19+48]
	060 Compare X8, 0
	061 JumpIfEqual {95}
	062 Move X20, X0
	063 Move V0, [X8+44]
	064 Move X0, [X21]
	065 Add X1, X31, 8
	066 Move [X31+8], S0
	067 Call 0x1C17E04
	068 Move X8, 0x5D8000
	069 Move X8, [X8+3616]
	070 Move X2, X0
	071 Move X1, X20
	072 Move X3, X31
	073 Move X8, [X8]
	074 Move X0, X8
	075 Call String.Format, X0, X1, X2
	076 Move X8, 0x570000
	077 Move X8, [X8+2600]
	078 Move X20, X0
	079 Move X8, [X8]
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X19
	087 Move X2, X31
	088 Call Debug.LogWarning, X0, X1
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X30, [X31+16]
	092 Move X21, [X31+24]
	093 Add X31, X31, 48
	094 Return 
	095 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03B84158 SUB X31, X31, 0xF0
	0x03B8415C STP D13, D12, [X31 + 0x60]
	0x03B84160 STP D11, D10, [X31 + 0x70]
	0x03B84164 STP D9, D8, [X31 + 0x80]
	0x03B84168 STP X29, X30, [X31 + 0x90]
	0x03B8416C STP X28, X27, [X31 + 0xA0]
	0x03B84170 STP X26, X25, [X31 + 0xB0]
	0x03B84174 STP X24, X23, [X31 + 0xC0]
	0x03B84178 STP X22, X21, [X31 + 0xD0]
	0x03B8417C STP X20, X19, [X31 + 0xE0]
	0x03B84180 ADRP X20, 0x85E000
	0x03B84184 LDRB W8, [X20 + 0xAEC]
	0x03B84188 MOV X19, X0
	0x03B8418C TBNZ X8, 0x0, 0x3B84228
	0x03B84190 ADRP X0, 0x5D7000
	0x03B84194 LDR X0, [X0 + 0xEC0]
	0x03B84198 BL 0x1C16CF4
	0x03B8419C ADRP X0, 0x5D7000
	0x03B841A0 LDR X0, [X0 + 0xF00]
	0x03B841A4 BL 0x1C16CF4
	0x03B841A8 ADRP X0, 0x5D7000
	0x03B841AC LDR X0, [X0 + 0xEC8]
	0x03B841B0 BL 0x1C16CF4
	0x03B841B4 ADRP X0, 0x5D7000
	0x03B841B8 LDR X0, [X0 + 0xF08]
	0x03B841BC BL 0x1C16CF4
	0x03B841C0 ADRP X0, 0x5D7000
	0x03B841C4 LDR X0, [X0 + 0xF10]
	0x03B841C8 BL 0x1C16CF4
	0x03B841CC ADRP X0, 0x5D7000
	0x03B841D0 LDR X0, [X0 + 0xED0]
	0x03B841D4 BL 0x1C16CF4
	0x03B841D8 ADRP X0, 0x5D7000
	0x03B841DC LDR X0, [X0 + 0xEF0]
	0x03B841E0 BL 0x1C16CF4
	0x03B841E4 ADRP X0, 0x5D7000
	0x03B841E8 LDR X0, [X0 + 0xEE0]
	0x03B841EC BL 0x1C16CF4
	0x03B841F0 ADRP X0, 0x5D7000
	0x03B841F4 LDR X0, [X0 + 0xF18]
	0x03B841F8 BL 0x1C16CF4
	0x03B841FC ADRP X0, 0x5D7000
	0x03B84200 LDR X0, [X0 + 0xF20]
	0x03B84204 BL 0x1C16CF4
	0x03B84208 ADRP X0, 0x5D7000
	0x03B8420C LDR X0, [X0 + 0xF28]
	0x03B84210 BL 0x1C16CF4
	0x03B84214 ADRP X0, 0x56F000
	0x03B84218 LDR X0, [X0 + 0x598]
	0x03B8421C BL 0x1C16CF4
	0x03B84220 MOVZ W8, 0x1
	0x03B84224 STRB W8, [X20 + 0xAEC]
	0x03B84228 STP X31, X31, [X31 + 0x40]
	0x03B8422C STR X31, [X31 + 0x50]
	0x03B84230 STP X31, X31, [X31 + 0x20]
	0x03B84234 STR X31, [X31 + 0x30]
	0x03B84238 LDR X0, [X19 + 0x30]
	0x03B8423C CBZ X0, 0x3B84708
	0x03B84240 LDR W8, [X0 + 0x18]
	0x03B84244 CMP W8, 0x1
	0x03B84248 B.LT 0x3B84318
	0x03B8424C ADRP X8, 0x5D7000
	0x03B84250 LDR X8, [X8 + 0xF18]
	0x03B84254 ADRP X23, 0x5D7000
	0x03B84258 ADRP X24, 0x56F000
	0x03B8425C ADRP X22, 0x5D7000
	0x03B84260 LDR X1, [X8]
	0x03B84264 LDR X23, [X23 + 0xF08]
	0x03B84268 LDR X24, [X24 + 0x598]
	0x03B8426C LDR X22, [X22 + 0xF00]
	0x03B84270 ADD X8, X31, 0x8
	0x03B84274 BL 0x301CB58
	0x03B84278 LDUR V0, [X31 + 0x8]
	0x03B8427C LDR X8, [X31 + 0x18]
	0x03B84280 STR V0, [X31 + 0x4]
	0x03B84284 STR X8, [X31 + 0x50]
	0x03B84288 LDR X1, [X23]
	0x03B8428C ADD X0, X31, 0x40
	0x03B84290 BL 0x2BC4350
	0x03B84294 TBZ X0, 0x0, 0x3B8430C
	0x03B84298 LDR X20, [X31 + 0x50]
	0x03B8429C CBZ X20, 0x3B846F8
	0x03B842A0 LDRB W8, [X20 + 0x18]
	0x03B842A4 CBZ W8, 0x3B84288
	0x03B842A8 LDR X0, [X24]
	0x03B842AC LDR X21, [X20 + 0x10]
	0x03B842B0 LDR W8, [X0 + 0xE0]
	0x03B842B4 CBNZ W8, 0x3B842BC
	0x03B842B8 BL 0x1C16DFC
	0x03B842BC MOV X0, X21
	0x03B842C0 MOV X1, X31
	0x03B842C4 MOV X2, X31
	0x03B842C8 BL 0x3C3883C
	0x03B842CC TBNZ X0, 0x0, 0x3B84288
	0x03B842D0 CBZ X21, 0x3B84704
	0x03B842D4 LDR W8, [X21 + 0x38]
	0x03B842D8 SUB W9, W8, 0x1
	0x03B842DC CMP W9, 0x1
	0x03B842E0 B.LS 0x3B842FC
	0x03B842E4 CMP W8, 0x3
	0x03B842E8 B.NE 0x3B84288
	0x03B842EC MOV X0, X19
	0x03B842F0 MOV X1, X20
	0x03B842F4 BL 0x3B83A8C
	0x03B842F8 B 0x3B84288
	0x03B842FC MOV X0, X19
	0x03B84300 MOV X1, X20
	0x03B84304 BL 0x3B8383C
	0x03B84308 B 0x3B84288
	0x03B8430C LDR X1, [X22]
	0x03B84310 ADD X0, X31, 0x40
	0x03B84314 BL 0x2BC434C
	0x03B84318 LDR X0, [X19 + 0x38]
	0x03B8431C CBZ X0, 0x3B84708
	0x03B84320 LDR W8, [X0 + 0x18]
	0x03B84324 CBZ W8, 0x3B846C8
	0x03B84328 ADRP X25, 0x5D7000
	0x03B8432C LDR X25, [X25 + 0xEE0]
	0x03B84330 ADRP X24, 0x5D7000
	0x03B84334 ADRP X23, 0x5D7000
	0x03B84338 ADD X8, X31, 0x8
	0x03B8433C LDR X1, [X25]
	0x03B84340 LDR X24, [X24 + 0xEC8]
	0x03B84344 LDR X23, [X23 + 0xEF0]
	0x03B84348 BL 0x301CB58
	0x03B8434C LDUR V0, [X31 + 0x8]
	0x03B84350 LDR X8, [X31 + 0x18]
	0x03B84354 ADRP X21, 0xFFFFFFFFFD013000
	0x03B84358 ADD X21, X21, 0xD94
	0x03B8435C MOVZ W26, 0x3F800000
	0x03B84360 FMOV S8, W31
	0x03B84364 FMOV S9, -1
	0x03B84368 MOVZ W27, 0x1
	0x03B8436C MOVZ W28, 0x3
	0x03B84370 MOVZ W29, 0x4
	0x03B84374 STR V0, [X31 + 0x2]
	0x03B84378 STR X8, [X31 + 0x30]
	0x03B8437C FMOV S10, 1
	0x03B84380 LDR X1, [X24]
	0x03B84384 ADD X0, X31, 0x20
	0x03B84388 BL 0x2BC4350
	0x03B8438C TBZ X0, 0x0, 0x3B845B8
	0x03B84390 LDR X22, [X31 + 0x30]
	0x03B84394 CBZ X22, 0x3B846FC
	0x03B84398 LDR X20, [X22 + 0x10]
	0x03B8439C CBZ X20, 0x3B84700
	0x03B843A0 LDR X8, [X20]
	0x03B843A4 LDR X1, [X23]
	0x03B843A8 LDRH W9, [X8 + 0x12E]
	0x03B843AC CBZ X9, 0x3B843D0
	0x03B843B0 LDR X10, [X8 + 0xB0]
	0x03B843B4 ADD X10, X10, 0x8
	0x03B843B8 LDUR X11, [X10 - 0x8]
	0x03B843BC CMP X11, X1
	0x03B843C0 B.EQ 0x3B843E0
	0x03B843C4 SUBS X9, X9, 0x1
	0x03B843C8 ADD X10, X10, 0x10
	0x03B843CC B.NE 0x3B843B8
	0x03B843D0 MOV X0, X20
	0x03B843D4 MOV W2, W31
	0x03B843D8 BL 0x1C5C788
	0x03B843DC B 0x3B843EC
	0x03B843E0 LDRSW X9, [X10]
	0x03B843E4 ADD X8, X8, X9, 0x4, LSL
	0x03B843E8 ADD X0, X8, 0x138
	0x03B843EC LDP X8, X1, [X0]
	0x03B843F0 MOV X0, X20
	0x03B843F4 BLR X8
	0x03B843F8 MOV X20, X0
	0x03B843FC CBNZ X0, 0x3B84404
	0x03B84400 LDR X20, [X19 + 0x20]
	0x03B84404 LDR W8, [X22 + 0x18]
	0x03B84408 CMP W8, 0x4
	0x03B8440C B.HI 0x3B84380
	0x03B84410 LDR V11, [X22 + 0x1C]
	0x03B84414 ADR X9, 0x10
	0x03B84418 LDRB W10, [X21, X8, LSL]
	0x03B8441C ADD X9, X9, X10, 0x2, LSL
	0x03B84420 BR X9
	0x03B84424 STR W26, [X22 + 0x1C]
	0x03B84428 STR W31, [X22 + 0x24]
	0x03B8442C STRB W31, [X22 + 0x20]
	0x03B84430 B 0x3B84380
	0x03B84434 CBNZ X20, 0x3B844A0
	0x03B84438 B 0x3B8470C
	0x03B8443C LDRB W8, [X22 + 0x20]
	0x03B84440 CBZ W8, 0x3B8454C
	0x03B84444 CBZ X20, 0x3B84718
	0x03B84448 LDR V0, [X20 + 0x24]
	0x03B8444C STR W28, [X22 + 0x18]
	0x03B84450 FCMP S0, 0x0
	0x03B84454 B.GT 0x3B84460
	0x03B84458 B 0x3B844A0
	0x03B8445C CBZ X20, 0x3B84710
	0x03B84460 LDR V0, [X20 + 0x24]
	0x03B84464 LDR V13, [X22 + 0x24]
	0x03B84468 FCMP S0, 0x0
	0x03B8446C FCSEL S12, S0, S8, GT
	0x03B84470 B.LE 0x3B84494
	0x03B84474 FCMP S13, S12
	0x03B84478 B.PL 0x3B84494
	0x03B8447C MOV X0, X31
	0x03B84480 BL 0x3C3C7B4
	0x03B84484 FADD S0, S13, S0

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x85F000
	014 Move W8, [X20+2787]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x570000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2787], W8
	025 Move W8, [X19+108]
	026 Compare W8, 0
	027 JumpIfEqual {96}
	028 Move W8, [X19+116]
	029 Compare W8, 0
	030 JumpIfNotEqual {44}
	031 Move X0, X19
	032 Move X1, X31
	033 Call LocomotionProvider.BeginLocomotion, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {228}
	038 Move W8, 1
	039 Move X0, X31
	040 Move [X19+116], W8
	041 Move [X19+56], W8
	042 Call Time.get_time
	043 Move [X19+120], S0
	044 Move V0, [X19+112]
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 Move X0, X31
	047 Call Time.get_time
	048 Move V1, [X19+120]
	049 Move V2, [X19+112]
	050 Subtract S0, S0, S1
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X8, [X19+48]
	053 Move W9, 2
	054 Move [X19+56], W9
	055 Compare X8, 0
	056 JumpIfEqual {241}
	057 Move X9, 0x570000
	058 Move X9, [X9+1432]
	059 Move X20, [X8+48]
	060 Move X0, [X9]
	061 Move W9, [X0+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X31
	067 Move X2, X31
	068 Call Object.op_Inequality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {221}
	073 Move W8, [X19+104]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare W8, 0
	077 JumpIfNotEqual {192}
	078 Move X21, 0x855000
	079 Move W8, [X21+1926]
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x570000
	083 Move X0, [X0+1440]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X21+1926], W8
	087 Compare X20, 0
	088 JumpIfEqual {241}
	089 Move X8, 0x570000
	090 Move X8, [X8+1440]
	091 Move X8, [X8]
	092 Move X8, [X8+184]
	093 Move S1, [X8+28]
	094 Move S2, [X8+32]
	095 Move V0, [X8+24]
	096 Move [X19+56], W31
	097 Move X21, 0x855000
	098 Move S8, [X19+84]
	099 Move S9, [X19+88]
	100 Move W8, [X21+1926]
	101 Move S11, [X19+92]
	102 Move S10, [X19+96]
	103 Compare W8, 0
	104 JumpIfNotEqual {110}
	105 Move X0, 0x570000
	106 Move X0, [X0+1440]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X21+1926], W8
	110 Move X21, 0x570000
	111 Move X21, [X21+1440]
	112 Move V0, V8
	113 Move V1, V9
	114 Move V2, V11
	115 Move X8, [X21]
	116 Move V3, V10
	117 Move X0, X31
	118 Move X8, [X8+184]
	119 Move S4, [X8+24]
	120 Move S5, [X8+28]
	121 Move V6, [X8+32]
	122 Call Quaternion.op_Multiply, X0, X1
	123 Move X22, 0x855000
	124 Move S11, [X19+84]
	125 Move S12, [X19+88]
	126 Move W8, [X22+2591]
	127 Move S14, [X19+92]
	128 Move S13, [X19+96]
	129 Move V8, V0
	130 Move V9, V1
	131 Move V10, V2
	132 Compare W8, 0
	133 JumpIfNotEqual {139}
	134 Move X0, 0x570000
	135 Move X0, [X0+1440]
	136 Call 0x1C17CF4
	137 Move W8, 1
	138 Move [X22+2591], W8
	139 Move X8, [X21]
	140 Move V0, V11
	141 Move V1, V12
	142 Move V2, V14
	143 Move X8, [X8+184]
	144 Move V3, V13
	145 Move X0, X31
	146 Move S4, [X8+72]
	147 Move S5, [X8+76]
	148 Move V6, [X8+80]
	149 Call Quaternion.op_Multiply, X0, X1
	150 Compare X20, 0
	151 JumpIfEqual {241}
	152 Move V3, V0
	153 Move V4, V1
	154 Move V5, V2
	155 Move X0, X20
	156 Move V0, V8
	157 Move V1, V9
	158 Move V2, V10
	159 Move X1, X31
	160 Call XROrigin.MatchOriginUpCameraForward, X0, X1, X2
	161 Move X21, 0x855000
	162 Move S8, [X19+84]
	163 Move S9, [X19+88]
	164 Move W8, [X21+1926]
	165 Move S11, [X19+92]
	166 Move S10, [X19+96]
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0x570000
	170 Move X0, [X0+1440]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X21+1926], W8
	174 Move X8, 0x570000
	175 Move X8, [X8+1440]
	176 Move V0, V8
	177 Move V1, V9
	178 Move V2, V11
	179 Move X8, [X8]
	180 Move V3, V10
	181 Move X0, X31
	182 Move X8, [X8+184]
	183 Move S4, [X8+24]
	184 Move S5, [X8+28]
	185 Move V6, [X8+32]
	186 Call Quaternion.op_Multiply, X0, X1
	187 Compare X20, 0
	188 JumpIfEqual {241}
	189 Move X0, X20
	190 Move X1, X31
	191 Call XROrigin.MatchOriginUp, X0, X1
	192 Compare X20, 0
	193 JumpIfEqual {241}
	194 Move X0, [X20+56]
	195 Compare X0, 0
	196 JumpIfEqual {241}
	197 Move X1, X31
	198 Call GameObject.get_transform, X0
	199 Compare X0, 0
	200 JumpIfEqual {241}
	201 Move X1, X31
	202 Call Transform.get_up, X0
	203 Move X0, X20
	204 Move X1, X31
	205 Move V8, V0
	206 Move V9, V1
	207 Move V10, V2
	208 Call XROrigin.get_CameraInOriginSpaceHeight, X0
	209 Move S3, [X19+72]
	210 Move S4, [X19+76]
	211 Move V5, [X19+80]
	212 Multiply S1, S8, S0
	213 Multiply S2, S9, S0
	214 Multiply S6, S10, S0
	215 Add S0, S3, S1
	216 Add S1, S2, S4
	217 Add S2, S6, S5
	218 Move X0, X20
	219 Move X1, X31
	220 Call XROrigin.MoveCameraToWorldLocation, X0, X1
	221 Move X0, X19
	222 Move X1, X31
	223 Call LocomotionProvider.EndLocomotion, X0
	224 Move W8, 3
	225 Move [X19+116], W31
	226 Move [X19+108], W31
	227 Move [X19+56], W8
	228 Move X20, [X31+80]
	229 Move X19, [X31+88]
	230 Move X22, [X31+64]
	231 Move X21, [X31+72]
	232 Move X30, [X31+56]
	233 Move D9, [X31+40]
	234 Move D8, [X31+48]
	235 Move D11, [X31+24]
	236 Move D10, [X31+32]
	237 Move D13, [X31+8]
	238 Move D12, [X31+16]
	239 Move V14, [X31+96]
	240 Return 
	241 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B84488 FCMP S0, S12
	0x03B8448C FCSEL S13, S12, S0, GT
	0x03B84490 STR S13, [X22 + 0x24]
	0x03B84494 FCMP S13, S12

ISIL:
	001 Move W8, 0xBF800000
	002 Move X1, X31
	003 Move [X0+120], W8
	004 Call LocomotionProvider..ctor, X0
	005 Return 

