Type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual/CalculateLineCurveRenderPoints_0000037D$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B4DA40 STR W31, [X31 + 0x114]
	0x03B4DA44 STR W31, [X31 + 0xD8]
	0x03B4DA48 STP V0, V0, [X31 + 0x190]
	0x03B4DA4C STR V0, [X31 + 0x18]
	0x03B4DA50 STP V0, V0, [X31 + 0x150]
	0x03B4DA54 STP V0, V0, [X31 + 0x130]
	0x03B4DA58 STR V0, [X31 + 0x12]
	0x03B4DA5C STUR V0, [X21 + 0x7C]
	0x03B4DA60 STP V0, V0, [X31 + 0xE0]
	0x03B4DA64 STR X31, [X31 + 0xD0]
	0x03B4DA68 LDRB W8, [X19 + 0x3C]
	0x03B4DA6C CBNZ W8, 0x3B4DA80
	0x03B4DA70 LDR X0, [X19 + 0x68]
	0x03B4DA74 CBZ X0, 0x3B4DE38
	0x03B4DA78 BL 0x3B4B6D0
	0x03B4DA7C TBNZ X0, 0x0, 0x3B4DC3C
	0x03B4DA80 LDR X0, [X19 + 0x68]
	0x03B4DA84 CBZ X0, 0x3B4DE38
	0x03B4DA88 LDRB W8, [X0 + 0x59]
	0x03B4DA8C CBZ W8, 0x3B4DA98
	0x03B4DA90 BL 0x3B48408
	0x03B4DA94 TBNZ X0, 0x0, 0x3B4DC3C
	0x03B4DA98 ADRP X22, 0x88B000
	0x03B4DA9C LDRB W8, [X22 + 0x783]
	0x03B4DAA0 CBNZ W8, 0x3B4DAB8
	0x03B4DAA4 ADRP X0, 0x5A6000
	0x03B4DAA8 LDR X0, [X0 + 0x5A0]
	0x03B4DAAC BL 0x1C16CF4
	0x03B4DAB0 MOVZ W8, 0x1
	0x03B4DAB4 STRB W8, [X22 + 0x783]
	0x03B4DAB8 ADRP X23, 0x5A6000
	0x03B4DABC LDR X23, [X23 + 0x5A0]
	0x03B4DAC0 LDR X8, [X23]
	0x03B4DAC4 LDR X8, [X8 + 0xB8]
	0x03B4DAC8 LDP S0, S1, [X8]
	0x03B4DACC LDR V2, [X8 + 0x8]
	0x03B4DAD0 STR S0, [X31 + 0x1C0]
	0x03B4DAD4 STR S1, [X31 + 0x1C4]
	0x03B4DAD8 STR S2, [X31 + 0x1C8]
	0x03B4DADC STR S0, [X31 + 0x1B0]
	0x03B4DAE0 STR S1, [X31 + 0x1B4]
	0x03B4DAE4 STR S2, [X31 + 0x1B8]
	0x03B4DAE8 LDR X20, [X19 + 0x68]
	0x03B4DAEC CBZ X20, 0x3B4DB24
	0x03B4DAF0 ADRP X8, 0x60D000
	0x03B4DAF4 LDR X8, [X8 + 0x7C0]
	0x03B4DAF8 LDR X9, [X20]
	0x03B4DAFC LDR X8, [X8]
	0x03B4DB00 LDRB W11, [X9 + 0x130]
	0x03B4DB04 LDRB W10, [X8 + 0x130]
	0x03B4DB08 CMP W11, W10
	0x03B4DB0C B.CC 0x3B4DB24
	0x03B4DB10 LDR X9, [X9 + 0xC8]
	0x03B4DB14 ADD X9, X9, X10, 0x3, LSL
	0x03B4DB18 LDUR X9, [X9 - 0x8]
	0x03B4DB1C CMP X9, X8
	0x03B4DB20 B.EQ 0x3B4DC68
	0x03B4DB24 ADD X1, X31, 0x1C0
	0x03B4DB28 ADD X2, X31, 0x1B0
	0x03B4DB2C MOV X0, X19
	0x03B4DB30 BL 0x3B4E58C
	0x03B4DB34 AND W8, W0, 0x1
	0x03B4DB38 STRB W8, [X19 + 0x8C]
	0x03B4DB3C TBNZ X0, 0x0, 0x3B4DB48
	0x03B4DB40 LDRB W8, [X19 + 0x3D]
	0x03B4DB44 CBZ W8, 0x3B4DC3C
	0x03B4DB48 LDRB W8, [X22 + 0x783]
	0x03B4DB4C CBNZ W8, 0x3B4DB64
	0x03B4DB50 ADRP X0, 0x5A6000
	0x03B4DB54 LDR X0, [X0 + 0x5A0]
	0x03B4DB58 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x896000
	008 Move X23, 0x60E000
	009 Move W8, [X20+2249]
	010 Move X23, [X23+2584]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5CF000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x60E000
	020 Move X0, [X0+2584]
	021 Call 0x1C17CF4
	022 Move X0, 0x60E000
	023 Move X0, [X0+2720]
	024 Call 0x1C17CF4
	025 Move X0, 0x60E000
	026 Move X0, [X0+2728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2249], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x5CF000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x60E000
	053 Move X8, [X8+2728]
	054 Move X21, [X8]
	055 Move X8, 0x60E000
	056 Move X8, [X8+2720]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B4DB5C MOVZ W8, 0x1
	0x03B4DB60 STRB W8, [X22 + 0x783]
	0x03B4DB64 LDR X8, [X23]
	0x03B4DB68 LDR V8, [X31 + 0x1C0]
	0x03B4DB6C LDR V9, [X31 + 0x1C4]
	0x03B4DB70 LDR V10, [X31 + 0x1C8]
	0x03B4DB74 LDR X8, [X8 + 0xB8]
	0x03B4DB78 MOV X0, X31
	0x03B4DB7C LDR V0, [X8]
	0x03B4DB80 LDR V1, [X8 + 0x8]
	0x03B4DB84 STR D0, [X31 + 0xD0]
	0x03B4DB88 STR S1, [X31 + 0xD8]
	0x03B4DB8C LDP S11, S12, [X19 + 0x70]
	0x03B4DB90 LDR V13, [X19 + 0x78]
	0x03B4DB94 LDR V14, [X19 + 0x38]
	0x03B4DB98 BL 0x3C3C714
	0x03B4DB9C MOVZ W8, 0x7F800000
	0x03B4DBA0 FMOV S15, W8
	0x03B4DBA4 ADD X0, X31, 0xD0
	0x03B4DBA8 STR S0, [X31]
	0x03B4DBAC MOV V0.16B, V11.16B
	0x03B4DBB0 MOV V1.16B, V12.16B
	0x03B4DBB4 MOV V2.16B, V13.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x896000
	005 Move X19, 0x60E000
	006 Move W8, [X20+2250]
	007 Move X19, [X19+2584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x60E000
	013 Move X0, [X0+2584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2250], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call CalculateLineCurveRenderPoints_0000037D$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B4DBB8 MOV V3.16B, V8.16B
	0x03B4DBBC MOV V4.16B, V9.16B
	0x03B4DBC0 MOV V5.16B, V10.16B
	0x03B4DBC4 MOV V6.16B, V14.16B
	0x03B4DBC8 MOV V7.16B, V15.16B
	0x03B4DBCC MOV X1, X31
	0x03B4DBD0 BL 0x3C28CA8
	0x03B4DBD4 STP S0, S1, [X19 + 0x70]
	0x03B4DBD8 STR S2, [X19 + 0x78]
	0x03B4DBDC LDP S8, S9, [X19 + 0x7C]
	0x03B4DBE0 LDR V10, [X19 + 0x84]
	0x03B4DBE4 LDR V11, [X31 + 0x1B0]
	0x03B4DBE8 LDR V12, [X31 + 0x1B4]
	0x03B4DBEC LDR V13, [X31 + 0x1B8]
	0x03B4DBF0 LDR V14, [X19 + 0x38]
	0x03B4DBF4 MOV X0, X31
	0x03B4DBF8 BL 0x3C3C714
	0x03B4DBFC ADD X0, X31, 0xD0
	0x03B4DC00 STR S0, [X31]
	0x03B4DC04 MOV V0.16B, V8.16B
	0x03B4DC08 MOV V1.16B, V9.16B
	0x03B4DC0C MOV V2.16B, V10.16B
	0x03B4DC10 MOV V3.16B, V11.16B
	0x03B4DC14 MOV V4.16B, V12.16B
	0x03B4DC18 MOV V5.16B, V13.16B
	0x03B4DC1C MOV V6.16B, V14.16B
	0x03B4DC20 MOV V7.16B, V15.16B
	0x03B4DC24 MOV X1, X31
	0x03B4DC28 BL 0x3C28CA8
	0x03B4DC2C MOVZ W0, 0x1
	0x03B4DC30 STP S0, S1, [X19 + 0x7C]
	0x03B4DC34 STR S2, [X19 + 0x84]
	0x03B4DC38 B 0x3B4DC40
	0x03B4DC3C MOV W0, W31
	0x03B4DC40 ADD X31, X31, 0x1D0
	0x03B4DC44 LDP X20, X19, [X31 + 0x70]
	0x03B4DC48 LDP X22, X21, [X31 + 0x60]
	0x03B4DC4C LDP X30, X23, [X31 + 0x50]
	0x03B4DC50 LDR X29, [X31 + 0x40]
	0x03B4DC54 LDP D9, D8, [X31 + 0x30]
	0x03B4DC58 LDP D11, D10, [X31 + 0x20]
	0x03B4DC5C LDP D13, D12, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x896000
	006 Move X19, 0x60E000
	007 Move X20, 0x5CF000
	008 Move W8, [X21+2251]
	009 Move X19, [X19+2736]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5CF000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x60E000
	019 Move X0, [X0+2584]
	020 Call 0x1C17CF4
	021 Move X0, 0x60E000
	022 Move X0, [X0+2736]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2251], W8
	026 Move X0, [X20]
	027 Move X20, 0x60E000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+2584]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B4DC60 LDP D15, D14, [X31], #0x80

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B4DC64 RET

ISIL:
	001 Call CalculateLineCurveRenderPoints_0000037D$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(System.Int32 numTargetPoints, System.Single curveRatio, in UnityEngine.Vector3 lineOrigin, in UnityEngine.Vector3 lineDirection, in UnityEngine.Vector3 endPoint, ref Unity.Collections.NativeArray`1<UnityEngine.Vector3> targetPoints)

Disassembly:
	0x03B4C72C MOV S1, V1.S[1]
	0x03B4C730 FADD S0, S1, S0
	0x03B4C734 FSQRT S6, S0
	0x03B4C738 FCMP S6, S11
	0x03B4C73C B.PL 0x3B4C7B0
	0x03B4C740 LDR V12, [X20]
	0x03B4C744 LDRB W8, [X24 + 0x585]
	0x03B4C748 LDR V13, [X20 + 0x8]
	0x03B4C74C CBNZ W8, 0x3B4C76C
	0x03B4C750 ADRP X0, 0x5A7000
	0x03B4C754 LDR X0, [X0 + 0x5A8]
	0x03B4C758 STR V6, [X31]
	0x03B4C75C BL 0x1C16CF4
	0x03B4C760 LDR V6, [X31]
	0x03B4C764 MOVZ W8, 0x1
	0x03B4C768 STRB W8, [X24 + 0x585]
	0x03B4C76C LDR X0, [X25]
	0x03B4C770 LDR W8, [X0 + 0xE0]
	0x03B4C774 CBNZ W8, 0x3B4C784
	0x03B4C778 STR V6, [X31]
	0x03B4C77C BL 0x1C16DFC
	0x03B4C780 LDR V6, [X31]
	0x03B4C784 FMOV S0, 1
	0x03B4C788 FDIV S0, S0, S11
	0x00000000 INVALID
	0x03B4C790 FMUL S0, S9, S0
	0x00000000 INVALID
	0x03B4C798 FMUL S0, S0, S6
	0x03B4C79C FADD V1.2S, V1.2S, V12.2S
	0x03B4C7A0 FADD S0, S0, S13
	0x03B4C7A4 STR D1, [X19]
	0x03B4C7A8 STR S0, [X19 + 0x8]
	0x03B4C7AC B 0x3B4C7B4
	0x03B4C7B0 MOV V6.16B, V11.16B
	0x03B4C7B4 LDR V0, [X21]
	0x03B4C7B8 FADD S0, S6, S0
	0x03B4C7BC FCMP S0, S8
	0x03B4C7C0 STR S0, [X21]
	0x03B4C7C4 B.LS 0x3B4C808
	0x03B4C7C8 LDR V2, [X20]
	0x03B4C7CC LDR V3, [X20 + 0x8]
	0x03B4C7D0 LDR V4, [X19]
	0x03B4C7D4 LDR V5, [X19 + 0x8]
	0x03B4C7D8 FSUB S1, S0, S8
	0x03B4C7DC FDIV S1, S1, S6
	0x03B4C7E0 FMOV S6, 1
	0x03B4C7E4 FSUB S1, S6, S1
	0x03B4C7E8 FSUB V4.2S, V4.2S, V2.2S
	0x03B4C7EC FSUB S5, S5, S3
	0x00000000 INVALID
	0x03B4C7F4 FMUL S1, S1, S5
	0x03B4C7F8 FADD V2.2S, V2.2S, V4.2S
	0x03B4C7FC FADD S1, S3, S1
	0x03B4C800 STR D2, [X19]
	0x03B4C804 STR S1, [X19 + 0x8]
	0x03B4C808 FCMP S0, S8
	0x03B4C80C LDP X20, X19, [X31 + 0x80]
	0x03B4C810 LDP X22, X21, [X31 + 0x70]
	0x03B4C814 LDP X24, X23, [X31 + 0x60]
	0x03B4C818 LDP X30, X25, [X31 + 0x50]
	0x03B4C81C LDP D9, D8, [X31 + 0x40]
	0x03B4C820 LDP D11, D10, [X31 + 0x30]
	0x03B4C824 LDP D13, D12, [X31 + 0x20]
	0x03B4C828 LDP D15, D14, [X31 + 0x10]
	0x03B4C82C CSET W0, HI

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x897000
	011 Move X25, 0x5D0000
	012 Move W8, [X24+2252]
	013 Move X25, [X25+2120]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move V8, V0
	019 Move W23, W0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x5D0000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move X0, 0x60F000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+2252], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call BurstCompiler.get_IsEnabled
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {70}
	043 Move X8, 0x60F000
	044 Move X8, [X8+2584]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Call CalculateLineCurveRenderPoints_0000037D$BurstDirectCall.GetFunctionPointer
	051 Compare X0, 0
	052 JumpIfEqual {70}
	053 Move X5, X0
	054 Move W0, W23
	055 Move X1, X22
	056 Move X2, X21
	057 Move X3, X20
	058 Move X4, X19
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X30, [X31+16]
	066 Move X25, [X31+24]
	067 Move V0, V8
	068 Move V8, [X31+80]
	069 CallNoReturn X5
	070 Move W0, W23
	071 Move X1, X22
	072 Move X2, X21
	073 Move X3, X20
	074 Move X4, X19
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X30, [X31+16]
	082 Move X25, [X31+24]
	083 Move V0, V8
	084 Move X5, X31
	085 Move V8, [X31+80]
	086 Call 0x3B65BC8
	087 Return 

