Type: UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor

Method: System.Single get_pokeDepth()

Disassembly:
	0x03B5DF54 BL 0x3B5E220
	0x03B5DF58 TBZ X0, 0x0, 0x3B5DFB4

ISIL:
	001 Move V0, [X0+424]
	002 Return V0

Method: System.Void set_pokeDepth(System.Single value)

Disassembly:
	0x03B5DF5C LDR X0, [X19 + 0x220]
	0x03B5DF60 CBZ X0, 0x3B5E0F4

ISIL:
	001 Move [X0+424], S0
	002 Return 

Method: System.Single get_pokeWidth()

Disassembly:
	0x03B5DF64 LDR W10, [X0 + 0x1C]
	0x03B5DF68 LDP X1, X2, [X31 + 0x18]

ISIL:
	001 Move V0, [X0+428]
	002 Return V0

Method: System.Void set_pokeWidth(System.Single value)

Disassembly:
	0x03B5DF6C LDR X8, [X0 + 0x10]
	0x03B5DF70 LDR X9, [X23]

ISIL:
	001 Move [X0+428], S0
	002 Return 

Method: System.Single get_pokeSelectWidth()

Disassembly:
	0x03B5DF74 ADD W10, W10, 0x1
	0x03B5DF78 STR W10, [X0 + 0x1C]

ISIL:
	001 Move V0, [X0+432]
	002 Return V0

Method: System.Void set_pokeSelectWidth(System.Single value)

Disassembly:
	0x03B5DF7C CBZ X8, 0x3B5E0F4
	0x03B5DF80 LDRSW X10, [X0 + 0x18]

ISIL:
	001 Move [X0+432], S0
	002 Return 

Method: System.Single get_pokeHoverRadius()

Disassembly:
	0x03B5DF84 LDR W11, [X8 + 0x18]
	0x03B5DF88 CMP W10, W11

ISIL:
	001 Move V0, [X0+436]
	002 Return V0

Method: System.Void set_pokeHoverRadius(System.Single value)

Disassembly:
	0x03B5DF8C B.CS 0x3B5DFA4
	0x03B5DF90 ADD W9, W10, 0x1

ISIL:
	001 Move [X0+436], S0
	002 Return 

Method: System.Single get_pokeInteractionOffset()

Disassembly:
	0x03B5DF94 ADD X8, X8, X10, 0x4, LSL
	0x03B5DF98 STR W9, [X0 + 0x18]

ISIL:
	001 Move V0, [X0+440]
	002 Return V0

Method: System.Void set_pokeInteractionOffset(System.Single value)

Disassembly:
	0x03B5DF9C STP X1, X2, [X8 + 0x20]
	0x03B5DFA0 B 0x3B5DFB4

ISIL:
	001 Move [X0+440], S0
	002 Return 

Method: UnityEngine.LayerMask get_physicsLayerMask()

Disassembly:
	0x03B5DFA4 LDR X8, [X9 + 0x20]
	0x03B5DFA8 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move W0, [X0+444]
	002 Return X0

Method: System.Void set_physicsLayerMask(UnityEngine.LayerMask value)

Disassembly:
	0x03B5DFAC LDR X3, [X8 + 0x70]
	0x03B5DFB0 BL 0x3178C8C

ISIL:
	001 Move [X0+444], W1
	002 Return 

Method: UnityEngine.QueryTriggerInteraction get_physicsTriggerInteraction()

Disassembly:
	0x03B5DFB4 ADD X20, X20, 0x1
	0x03B5DFB8 CMP X21, X20

ISIL:
	001 Move W0, [X0+448]
	002 Return X0

Method: System.Void set_physicsTriggerInteraction(UnityEngine.QueryTriggerInteraction value)

Disassembly:
	0x03B5DFBC ADD X22, X22, 0x2C
	0x03B5DFC0 B.NE 0x3B5DF28

ISIL:
	001 Move [X0+448], W1
	002 Return 

Method: System.Boolean get_requirePokeFilter()

Disassembly:
	0x03B5DFC4 B 0x3B5E0B4
	0x03B5DFC8 LDR W0, [X19 + 0x1BC]

ISIL:
	001 Move W0, [X0+452]
	002 Return X0

Method: System.Void set_requirePokeFilter(System.Boolean value)

Disassembly:
	0x03B5DFCC LDP S11, S12, [X31 + 0x50]
	0x03B5DFD0 LDR V13, [X31 + 0x58]
	0x03B5DFD4 LDR V14, [X19 + 0x1B4]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+452], W8
	003 Return 

Method: System.Boolean get_enableUIInteraction()

Disassembly:
	0x03B5DFD8 LDR X21, [X19 + 0x218]
	0x03B5DFDC MOV X1, X31

ISIL:
	001 Move W0, [X0+453]
	002 Return X0

Method: System.Void set_enableUIInteraction(System.Boolean value)

Disassembly:
	0x03B5DFE0 BL 0x3C35CB8
	0x03B5DFE4 LDR W3, [X19 + 0x1C0]
	0x03B5DFE8 MOV W2, W0
	0x03B5DFEC MOV X0, X20
	0x03B5DFF0 MOV V0.16B, V11.16B
	0x03B5DFF4 MOV V1.16B, V12.16B
	0x03B5DFF8 MOV V2.16B, V13.16B
	0x03B5DFFC MOV V3.16B, V14.16B
	0x03B5E000 MOV X1, X21
	0x03B5E004 MOV X4, X31
	0x03B5E008 BL 0x3C8D758
	0x03B5E00C CMP W0, 0x1

ISIL:
	001 Move W8, [X0+453]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0+568]
	005 Move [X0+453], W9
	006 Compare X8, 0
	007 JumpIfEqual {13}
	008 And W1, W1, 1
	009 Move X0, X8
	010 Move X2, X31
	011 Call RegisteredUIInteractorCache.RegisterOrUnregisterXRUIInputModule, X0, X1
	012 Return 
	013 Return 

Method: System.Boolean get_debugVisualizationsEnabled()

Disassembly:
	0x03B5E010 B.LT 0x3B5E0B4
	0x03B5E014 ADRP X22, 0x5FD000

ISIL:
	001 Move W0, [X0+454]
	002 Return X0

Method: System.Void set_debugVisualizationsEnabled(System.Boolean value)

Disassembly:
	0x03B5E018 LDR X22, [X22 + 0x210]
	0x03B5E01C MOV X20, X31
	0x03B5E020 MOV W21, W0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+454], W8
	003 Return 

Method: UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEnterEvent get_uiHoverEntered()

Disassembly:
	0x03B5E024 LDR X8, [X19 + 0x218]
	0x03B5E028 CBZ X8, 0x3B5E0F4

ISIL:
	001 Move X0, [X0+456]
	002 Return X0

Method: System.Void set_uiHoverEntered(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEnterEvent value)

Disassembly:
	0x03B5E02C LDR W9, [X8 + 0x18]
	0x03B5E030 CMP X20, X9

ISIL:
	001 Move [X0+456], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.UI.UIHoverExitEvent get_uiHoverExited()

Disassembly:
	0x03B5E034 B.CS 0x3B5E0F8
	0x03B5E038 ADD X8, X8, X20, 0x3, LSL

ISIL:
	001 Move X0, [X0+464]
	002 Return X0

Method: System.Void set_uiHoverExited(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverExitEvent value)

Disassembly:
	0x03B5E03C LDR X1, [X8 + 0x20]
	0x03B5E040 ADD X2, X31, 0x28

ISIL:
	001 Move [X0+464], X1
	002 Return 

Method: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<UnityEngine.XR.Interaction.Toolkit.Filtering.PokeStateData> get_pokeStateData()

Disassembly:
	0x03B5E044 MOV X0, X19
	0x03B5E048 BL 0x3B5E220

ISIL:
	001 Move X0, [X0+472]
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x03B5E04C TBZ X0, 0x0, 0x3B5E0A8
	0x03B5E050 LDR X0, [X19 + 0x220]
	0x03B5E054 CBZ X0, 0x3B5E0F4
	0x03B5E058 LDR W10, [X0 + 0x1C]
	0x03B5E05C LDP X1, X2, [X31 + 0x28]
	0x03B5E060 LDR X8, [X0 + 0x10]
	0x03B5E064 LDR X9, [X22]
	0x03B5E068 ADD W10, W10, 0x1
	0x03B5E06C STR W10, [X0 + 0x1C]
	0x03B5E070 CBZ X8, 0x3B5E0F4
	0x03B5E074 LDRSW X10, [X0 + 0x18]
	0x03B5E078 LDR W11, [X8 + 0x18]
	0x03B5E07C CMP W10, W11
	0x03B5E080 B.CS 0x3B5E098
	0x03B5E084 ADD W9, W10, 0x1
	0x03B5E088 ADD X8, X8, X10, 0x4, LSL
	0x03B5E08C STR W9, [X0 + 0x18]
	0x03B5E090 STP X1, X2, [X8 + 0x20]
	0x03B5E094 B 0x3B5E0A8
	0x03B5E098 LDR X8, [X9 + 0x20]
	0x03B5E09C LDR X8, [X8 + 0xC0]
	0x03B5E0A0 LDR X3, [X8 + 0x70]
	0x03B5E0A4 BL 0x3178C8C
	0x03B5E0A8 ADD X20, X20, 0x1
	0x03B5E0AC CMP X21, X20
	0x03B5E0B0 B.NE 0x3B5E024
	0x03B5E0B4 LDR X8, [X19 + 0x220]
	0x03B5E0B8 STR S8, [X19 + 0x1F0]
	0x03B5E0BC STR S10, [X19 + 0x1F4]
	0x03B5E0C0 STR S9, [X19 + 0x1F8]
	0x03B5E0C4 STRB W31, [X19 + 0x1FC]
	0x03B5E0C8 CBZ X8, 0x3B5E0F4
	0x03B5E0CC LDR W0, [X8 + 0x18]
	0x03B5E0D0 LDP X20, X19, [X31 + 0xD0]
	0x03B5E0D4 LDP X22, X21, [X31 + 0xC0]
	0x03B5E0D8 LDP X30, X23, [X31 + 0xB0]
	0x03B5E0DC LDP D9, D8, [X31 + 0xA0]
	0x03B5E0E0 LDP D11, D10, [X31 + 0x90]
	0x03B5E0E4 LDP D13, D12, [X31 + 0x80]
	0x03B5E0E8 LDP D15, D14, [X31 + 0x70]
	0x03B5E0EC ADD X31, X31, 0xE0
	0x03B5E0F0 RET
	0x03B5E0F4 BL 0x1C16F20
	0x03B5E0F8 BL 0x1C16F28
	0x03B5E0FC STP X30, X21, [X31 - 0x20]!
	0x03B5E100 STP X20, X19, [X31 + 0x10]
	0x03B5E104 ADRP X21, 0x884000
	0x03B5E108 LDRB W8, [X21 + 0x97B]
	0x03B5E10C MOV X19, X1
	0x03B5E110 MOV X20, X0
	0x03B5E114 TBNZ X8, 0x0, 0x3B5E150
	0x03B5E118 ADRP X0, 0x5FC000
	0x03B5E11C LDR X0, [X0 + 0xE28]
	0x03B5E120 BL 0x1C16CF4
	0x03B5E124 ADRP X0, 0x5FC000
	0x03B5E128 LDR X0, [X0 + 0xE00]
	0x03B5E12C BL 0x1C16CF4
	0x03B5E130 ADRP X0, 0x5FC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x885000
	007 Move W8, [X20+2423]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x5FE000
	014 Move X0, [X0+416]
	015 Call 0x1C17CF4
	016 Move X0, 0x5FD000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x5FE000
	020 Move X0, [X0+424]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2423], W8
	024 Move X0, X19
	025 Call XRBaseInteractor.Awake, X0
	026 Move W8, 1
	027 Move X0, X19
	028 Move X1, X31
	029 Move [X19+280], W8
	030 Call Component.get_gameObject, X0
	031 Compare X0, 0
	032 JumpIfEqual {66}
	033 Move X20, 0x5FD000
	034 Move X21, 0x5FE000
	035 Move X22, 0x5FE000
	036 Move X20, [X20+3696]
	037 Move X21, [X21+416]
	038 Move X22, [X22+424]
	039 Move X1, X31
	040 Call GameObject.get_scene, X0
	041 And X0, X0, 0
	042 Move X1, X31
	043 Call PhysicsSceneExtensions.GetPhysicsScene, X0
	044 Move [X19+576], W0
	045 Move X0, [X20]
	046 Call 0x1C17F10
	047 Move X1, X19
	048 Move X2, X31
	049 Move X20, X0
	050 Call RegisteredUIInteractorCache..ctor, X0, X1
	051 Move [X19+568], X20
	052 Move X0, [X21]
	053 Call 0x1C17F10
	054 Move X2, [X22]
	055 Move X1, X19
	056 Move X3, X31
	057 Move X20, X0
	058 Call Func`1<Vector3>..ctor, X0, X1, X2
	059 Move [X19+584], X20
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 
	066 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03B5E134 LDR X0, [X0 + 0xE98]
	0x03B5E138 BL 0x1C16CF4
	0x03B5E13C ADRP X0, 0x5FC000
	0x03B5E140 LDR X0, [X0 + 0xEA0]
	0x03B5E144 BL 0x1C16CF4
	0x03B5E148 MOVZ W8, 0x1
	0x03B5E14C STRB W8, [X21 + 0x97B]
	0x03B5E150 CBZ X19, 0x3B5E21C
	0x03B5E154 LDP W2, W8, [X19 + 0x18]
	0x03B5E158 ADD W8, W8, 0x1
	0x03B5E15C CMP W2, 0x1
	0x03B5E160 STP W31, W8, [X19 + 0x18]
	0x03B5E164 B.LT 0x3B5E178
	0x03B5E168 LDR X0, [X19 + 0x10]
	0x03B5E16C MOV W1, W31
	0x03B5E170 MOV X3, X31
	0x03B5E174 BL 0x339FA34
	0x03B5E178 MOV X0, X20
	0x03B5E17C MOV X1, X31
	0x03B5E180 BL 0x3C32454
	0x03B5E184 TBZ X0, 0x0, 0x3B5E1F4
	0x03B5E188 LDR X0, [X20 + 0x230]
	0x03B5E18C CBZ X0, 0x3B5E21C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call XRBaseInteractor.FindCreateInteractionManager, X0
	006 Move X0, X19
	007 Call XRBaseInteractor.RegisterWithInteractionManager, X0
	008 Move W1, 1
	009 Move X0, X19
	010 Move W20, 1
	011 Call XRPokeInteractor.SetDebugObjectVisibility, X0, X1
	012 Move W8, [X19+453]
	013 Move [X19+508], W20
	014 Compare W8, 0
	015 JumpIfEqual {25}
	016 Move X0, [X19+568]
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, X31
	022 Move X30, [X31+32]
	023 Call RegisteredUIInteractorCache.RegisterWithXRUIInputModule, X0
	024 Return 
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 
	029 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03B5E3E4 BL 0x2BC4350
	0x03B5E3E8 TBZ X0, 0x0, 0x3B5E498
	0x03B5E3EC LDR X20, [X31 + 0x30]
	0x03B5E3F0 CBZ X20, 0x3B5E3DC
	0x03B5E3F4 LDR X8, [X20]
	0x03B5E3F8 LDR X9, [X22]
	0x03B5E3FC LDRB W11, [X8 + 0x130]
	0x03B5E400 LDRB W10, [X9 + 0x130]
	0x03B5E404 CMP W11, W10
	0x03B5E408 B.CC 0x3B5E3DC
	0x03B5E40C LDR X11, [X8 + 0xC8]
	0x03B5E410 ADD X10, X11, X10, 0x3, LSL
	0x03B5E414 LDUR X10, [X10 - 0x8]
	0x03B5E418 CMP X10, X9
	0x03B5E41C B.NE 0x3B5E3DC
	0x03B5E420 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call XRBaseInteractor.UnregisterWithInteractionManager, X0
	005 Move X0, X19
	006 Move W1, W31
	007 Call XRPokeInteractor.SetDebugObjectVisibility, X0, X1
	008 Move W8, [X19+453]
	009 Compare W8, 0
	010 JumpIfEqual {19}
	011 Move X0, [X19+568]
	012 Compare X0, 0
	013 JumpIfEqual {22}
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call RegisteredUIInteractorCache.UnregisterFromXRUIInputModule, X0
	018 Return 
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return 
	022 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03B5E424 LDR X1, [X23]

ISIL:
	001 Call XRBaseInteractor.OnDestroy, X0
	002 Return 

Method: System.Void PreprocessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B5E428 CBZ X9, 0x3B5E44C
	0x03B5E42C LDR X10, [X8 + 0xB0]
	0x03B5E430 ADD X10, X10, 0x8
	0x03B5E434 LDUR X11, [X10 - 0x8]
	0x03B5E438 CMP X11, X1
	0x03B5E43C B.EQ 0x3B5E45C
	0x03B5E440 SUBS X9, X9, 0x1
	0x03B5E444 ADD X10, X10, 0x10
	0x03B5E448 B.NE 0x3B5E434
	0x03B5E44C MOV X0, X20
	0x03B5E450 MOV W2, W31
	0x03B5E454 BL 0x1C5C788
	0x03B5E458 B 0x3B5E468
	0x03B5E45C LDRSW X9, [X10]
	0x03B5E460 ADD X8, X8, X9, 0x4, LSL
	0x03B5E464 ADD X0, X8, 0x138
	0x03B5E468 LDP X8, X1, [X0]
	0x03B5E46C MOV X0, X20
	0x03B5E470 BLR X8
	0x03B5E474 TBZ X0, 0x0, 0x3B5E3DC
	0x03B5E478 LDR X8, [X31 + 0x38]
	0x03B5E47C ADD X0, X31, 0x20
	0x03B5E480 STP X8, X20, [X19]
	0x03B5E484 ADRP X8, 0x5FD000
	0x03B5E488 LDR X8, [X8 + 0x220]
	0x03B5E48C LDR X1, [X8]
	0x03B5E490 BL 0x2BC434C
	0x03B5E494 B 0x3B5E508
	0x03B5E498 ADRP X8, 0x5FD000
	0x03B5E49C LDR X8, [X8 + 0x220]
	0x03B5E4A0 ADD X0, X31, 0x20
	0x03B5E4A4 LDR X1, [X8]
	0x03B5E4A8 BL 0x2BC434C
	0x03B5E4AC MOV W0, W31
	0x03B5E4B0 LDP X20, X19, [X31 + 0x60]
	0x03B5E4B4 LDP X22, X21, [X31 + 0x50]
	0x03B5E4B8 LDP X30, X23, [X31 + 0x40]
	0x03B5E4BC ADD X31, X31, 0x70
	0x03B5E4C0 RET
	0x03B5E4C4 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x885000
	006 Move W8, [X21+2424]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5FE000
	014 Move X0, [X0+456]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2424], W8
	018 Move W8, [X19+280]
	019 Compare W8, 0
	020 JumpIfEqual {23}
	021 Move X0, X19
	022 Call XRBaseInteractor.UpdateVelocityAndAngularVelocity, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, 0x5FE000
	025 Move X8, [X8+456]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Call TrackedDeviceGraphicRaycaster.IsPokeInteractingWithUI, X0
	034 And W8, W0, 1
	035 Add X1, X19, 512
	036 Add X2, X19, 520
	037 Move X0, X19
	038 Move [X19+184], W8
	039 Call XRPokeInteractor.RegisterValidTargets, X0, X1, X2
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call XRPokeInteractor.ProcessPokeStateData, X0
	046 Return 
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B5ECB4 BL 0x1C16CF4
	0x03B5ECB8 ADRP X0, 0x5FC000
	0x03B5ECBC LDR X0, [X0 + 0xE40]
	0x03B5ECC0 BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Return 

Method: System.Boolean RegisterValidTargets(out UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable currentTarget, out UnityEngine.XR.Interaction.Toolkit.Filtering.IXRPokeFilter pokeFilter)

Disassembly:
	0x03B5E4C8 B 0x3B5E4CC
	0x03B5E4CC MOV X21, X0
	0x03B5E4D0 CMP W1, 0x1
	0x03B5E4D4 B.NE 0x3B5E510
	0x03B5E4D8 MOV X0, X21
	0x03B5E4DC BL 0x3EB1AD0
	0x03B5E4E0 LDR X20, [X0]
	0x03B5E4E4 BL 0x3EB1AE0
	0x03B5E4E8 ADRP X8, 0x5FD000
	0x03B5E4EC LDR X8, [X8 + 0x220]
	0x03B5E4F0 ADD X0, X31, 0x20
	0x03B5E4F4 LDR X1, [X8]
	0x03B5E4F8 BL 0x2BC434C
	0x03B5E4FC CBNZ X20, 0x3B5E518
	0x03B5E500 LDR X8, [X31 + 0x38]
	0x03B5E504 STP X8, X31, [X19]
	0x03B5E508 MOVZ W0, 0x1
	0x03B5E50C B 0x3B5E4B0
	0x03B5E510 MOV X20, X31
	0x03B5E514 B 0x3B5E524
	0x03B5E518 MOV X0, X20
	0x03B5E51C BL 0x1C16F18
	0x03B5E520 MOV X21, X0
	0x03B5E524 ADRP X8, 0x5FD000
	0x03B5E528 LDR X8, [X8 + 0x220]
	0x03B5E52C LDR X1, [X8]
	0x03B5E530 ADD X0, X31, 0x20
	0x03B5E534 BL 0x2BC434C
	0x03B5E538 CBNZ X20, 0x3B5E544
	0x03B5E53C MOV X0, X21
	0x03B5E540 BL 0x1D2C690
	0x03B5E544 MOV X0, X20
	0x03B5E548 BL 0x1C16F18
	0x03B5E54C BL 0x1990590
	0x03B5E550 STP X1, X2, [X0]
	0x03B5E554 RET
	0x03B5E558 SUB X31, X31, 0x80
	0x03B5E55C STP D15, D14, [X31 + 0x10]
	0x03B5E560 STP D13, D12, [X31 + 0x20]
	0x03B5E564 STP D11, D10, [X31 + 0x30]
	0x03B5E568 STP D9, D8, [X31 + 0x40]
	0x03B5E56C STR X30, [X31 + 0x50]
	0x03B5E570 STP X22, X21, [X31 + 0x60]
	0x03B5E574 STP X20, X19, [X31 + 0x70]
	0x03B5E578 ADRP X21, 0x884000
	0x03B5E57C LDRB W8, [X21 + 0x980]
	0x03B5E580 MOV X19, X1
	0x03B5E584 MOV X20, X0
	0x03B5E588 TBNZ X8, 0x0, 0x3B5E5C4
	0x03B5E58C ADRP X0, 0x599000
	0x03B5E590 LDR X0, [X0 + 0x3B8]
	0x03B5E594 BL 0x1C16CF4
	0x03B5E598 ADRP X0, 0x599000
	0x03B5E59C LDR X0, [X0 + 0x380]
	0x03B5E5A0 BL 0x1C16CF4
	0x03B5E5A4 ADRP X0, 0x5FD000
	0x03B5E5A8 LDR X0, [X0 + 0x1C8]
	0x03B5E5AC BL 0x1C16CF4
	0x03B5E5B0 ADRP X0, 0x5FD000
	0x03B5E5B4 LDR X0, [X0 + 0x258]
	0x03B5E5B8 BL 0x1C16CF4
	0x03B5E5BC MOVZ W8, 0x1
	0x03B5E5C0 STRB W8, [X21 + 0x980]
	0x03B5E5C4 ADRP X22, 0x5FD000
	0x03B5E5C8 LDR X22, [X22 + 0x258]
	0x03B5E5CC MOV X0, X20
	0x03B5E5D0 MOV X1, X31
	0x03B5E5D4 BL 0x3C32454
	0x03B5E5D8 TBZ X0, 0x0, 0x3B5E5E8
	0x03B5E5DC MOV X0, X20
	0x03B5E5E0 BL 0x3B48408
	0x03B5E5E4 TBZ X0, 0x0, 0x3B5E628
	0x03B5E5E8 LDR X0, [X22]
	0x03B5E5EC LDR W8, [X0 + 0xE0]
	0x03B5E5F0 CBNZ W8, 0x3B5E5F8
	0x03B5E5F4 BL 0x1C16DFC
	0x03B5E5F8 MOV X0, X19
	0x03B5E5FC LDP X20, X19, [X31 + 0x70]
	0x03B5E600 LDP X22, X21, [X31 + 0x60]
	0x03B5E604 LDR X30, [X31 + 0x50]
	0x03B5E608 LDP D9, D8, [X31 + 0x40]
	0x03B5E60C LDP D11, D10, [X31 + 0x30]
	0x03B5E610 LDP D13, D12, [X31 + 0x20]
	0x03B5E614 LDP D15, D14, [X31 + 0x10]
	0x03B5E618 MOV W1, W31
	0x03B5E61C MOV X2, X31
	0x03B5E620 ADD X31, X31, 0x80
	0x03B5E624 B 0x3B9F378
	0x03B5E628 LDR X8, [X20]
	0x03B5E62C MOV X0, X20
	0x03B5E630 MOV X1, X31
	0x03B5E634 LDR X9, [X8 + 0x4B8]
	0x03B5E638 LDR X2, [X8 + 0x4C0]
	0x03B5E63C BLR X9
	0x03B5E640 CBZ X0, 0x3B5E8A4
	0x03B5E644 MOV X1, X31
	0x03B5E648 MOV X21, X0
	0x03B5E64C BL 0x3C3F58C
	0x03B5E650 MOV X0, X21
	0x03B5E654 MOV X1, X31
	0x03B5E658 MOV V8.16B, V0.16B
	0x03B5E65C MOV V9.16B, V1.16B
	0x03B5E660 MOV V10.16B, V2.16B
	0x03B5E664 BL 0x3C3DEB4
	0x03B5E668 ADRP X21, 0x87A000
	0x03B5E66C LDRB W8, [X21 + 0xA1F]
	0x03B5E670 MOV V14.16B, V0.16B
	0x03B5E674 MOV V15.16B, V1.16B
	0x03B5E678 MOV V11.16B, V2.16B
	0x03B5E67C MOV V12.16B, V3.16B
	0x03B5E680 CBNZ W8, 0x3B5E698
	0x03B5E684 ADRP X0, 0x595000
	0x03B5E688 LDR X0, [X0 + 0x5A0]
	0x03B5E68C BL 0x1C16CF4
	0x03B5E690 MOVZ W8, 0x1
	0x03B5E694 STRB W8, [X21 + 0xA1F]
	0x03B5E698 ADRP X8, 0x595000
	0x03B5E69C LDR X8, [X8 + 0x5A0]
	0x03B5E6A0 MOV V0.16B, V14.16B
	0x03B5E6A4 MOV V1.16B, V15.16B
	0x03B5E6A8 MOV V2.16B, V11.16B
	0x03B5E6AC LDR X8, [X8]
	0x03B5E6B0 MOV V3.16B, V12.16B
	0x03B5E6B4 MOV X0, X31
	0x03B5E6B8 LDR X8, [X8 + 0xB8]
	0x03B5E6BC LDP S4, S5, [X8 + 0x48]
	0x03B5E6C0 LDR V6, [X8 + 0x50]
	0x03B5E6C4 BL 0x3C2A9FC
	0x03B5E6C8 LDR X0, [X22]
	0x03B5E6CC LDR V13, [X20 + 0x1A8]
	0x03B5E6D0 STP S0, S2, [X31 + 0x58]
	0x03B5E6D4 STR S1, [X31 + 0xC]
	0x03B5E6D8 LDR W8, [X0 + 0xE0]
	0x03B5E6DC CBNZ W8, 0x3B5E6E4
	0x03B5E6E0 BL 0x1C16DFC
	0x03B5E6E4 MOV X0, X19
	0x03B5E6E8 MOV V0.16B, V8.16B
	0x03B5E6EC MOV V1.16B, V9.16B
	0x03B5E6F0 MOV V2.16B, V10.16B
	0x03B5E6F4 MOV X1, X31
	0x03B5E6F8 BL 0x3B9EE04
	0x03B5E6FC MOV X0, X19
	0x03B5E700 MOV V0.16B, V14.16B
	0x03B5E704 MOV V1.16B, V15.16B
	0x03B5E708 MOV V2.16B, V11.16B
	0x03B5E70C MOV V3.16B, V12.16B
	0x03B5E710 MOV X1, X31
	0x03B5E714 BL 0x3B9EED4
	0x03B5E718 LDR X8, [X20 + 0x248]
	0x03B5E71C STR X8, [X19 + 0xC0]
	0x03B5E720 ADRP X8, 0x5FD000
	0x03B5E724 LDR X8, [X8 + 0x1C8]
	0x03B5E728 LDR X0, [X8]
	0x03B5E72C LDR W8, [X0 + 0xE0]
	0x03B5E730 CBNZ W8, 0x3B5E738
	0x03B5E734 BL 0x1C16DFC
	0x03B5E738 MOV X0, X20
	0x03B5E73C MOV X1, X31
	0x03B5E740 BL 0x3B9BD74
	0x03B5E744 AND W1, W0, 0x1
	0x03B5E748 MOV X0, X19
	0x03B5E74C MOV X2, X31
	0x03B5E750 BL 0x3B9ED2C
	0x03B5E754 LDR W1, [X20 + 0x1BC]
	0x03B5E758 MOV X0, X19
	0x03B5E75C MOV X2, X31
	0x03B5E760 BL 0x3B9F068
	0x03B5E764 LDR V0, [X20 + 0x1A8]
	0x03B5E768 MOV X0, X19
	0x03B5E76C MOV X1, X31
	0x03B5E770 BL 0x3B9F19C
	0x03B5E774 MOVZ W1, 0x1
	0x03B5E778 MOV X0, X19
	0x03B5E77C MOV X2, X31
	0x03B5E780 BL 0x3B9F218
	0x03B5E784 LDR X19, [X19 + 0xD8]
	0x03B5E788 CBZ X19, 0x3B5E8A4
	0x03B5E78C STR W31, [X19 + 0x18]
	0x03B5E790 ADRP X20, 0x599000
	0x03B5E794 LDR W10, [X19 + 0x1C]
	0x03B5E798 LDR X20, [X20 + 0x3B8]
	0x03B5E79C LDR X8, [X19 + 0x10]
	0x03B5E7A0 ADD W10, W10, 0x2
	0x03B5E7A4 LDR X9, [X20]
	0x03B5E7A8 STR W10, [X19 + 0x1C]
	0x03B5E7AC CBZ X8, 0x3B5E8A4
	0x03B5E7B0 LDR W10, [X8 + 0x18]
	0x03B5E7B4 CBZ W10, 0x3B5E7CC
	0x03B5E7B8 MOVZ W9, 0x1
	0x03B5E7BC STR W9, [X19 + 0x18]
	0x03B5E7C0 STP S8, S9, [X8 + 0x20]
	0x03B5E7C4 STR S10, [X8 + 0x28]
	0x03B5E7C8 B 0x3B5E7EC
	0x03B5E7CC LDR X8, [X9 + 0x20]
	0x03B5E7D0 MOV X0, X19
	0x03B5E7D4 MOV V0.16B, V8.16B
	0x03B5E7D8 MOV V1.16B, V9.16B
	0x03B5E7DC LDR X8, [X8 + 0xC0]
	0x03B5E7E0 MOV V2.16B, V10.16B
	0x03B5E7E4 LDR X1, [X8 + 0x70]
	0x03B5E7E8 BL 0x30CC1B4
	0x03B5E7EC LDR W10, [X19 + 0x1C]
	0x03B5E7F0 LDR X8, [X19 + 0x10]
	0x03B5E7F4 LDR X9, [X20]
	0x03B5E7F8 ADD W10, W10, 0x1
	0x03B5E7FC STR W10, [X19 + 0x1C]
	0x03B5E800 CBZ X8, 0x3B5E8A4
	0x03B5E804 LDP S0, S2, [X31 + 0x58]
	0x03B5E808 LDR V1, [X31 + 0xC]
	0x03B5E80C LDRSW X10, [X19 + 0x18]
	0x03B5E810 LDR W11, [X8 + 0x18]
	0x03B5E814 FMUL S0, S0, S13
	0x03B5E818 FMUL S1, S1, S13
	0x03B5E81C FMUL S2, S2, S13
	0x03B5E820 FADD S0, S8, S0
	0x03B5E824 FADD S1, S9, S1
	0x03B5E828 CMP W10, W11
	0x03B5E82C FADD S2, S10, S2
	0x03B5E830 B.CS 0x3B5E870
	0x03B5E834 ADD W9, W10, 0x1
	0x03B5E838 STR W9, [X19 + 0x18]
	0x03B5E83C LDP X20, X19, [X31 + 0x70]
	0x03B5E840 LDP X22, X21, [X31 + 0x60]
	0x03B5E844 LDR X30, [X31 + 0x50]
	0x03B5E848 LDP D9, D8, [X31 + 0x40]
	0x03B5E84C LDP D11, D10, [X31 + 0x30]
	0x03B5E850 LDP D13, D12, [X31 + 0x20]
	0x03B5E854 LDP D15, D14, [X31 + 0x10]
	0x03B5E858 MOVZ W11, 0xC
	0x03B5E85C MADD X8, X10, X11, X8
	0x03B5E860 STP S0, S1, [X8 + 0x20]
	0x03B5E864 STR S2, [X8 + 0x28]
	0x03B5E868 ADD X31, X31, 0x80
	0x03B5E86C RET
	0x03B5E870 LDR X8, [X9 + 0x20]
	0x03B5E874 MOV X0, X19
	0x03B5E878 LDP X20, X19, [X31 + 0x70]
	0x03B5E87C LDP X22, X21, [X31 + 0x60]
	0x03B5E880 LDR X8, [X8 + 0xC0]
	0x03B5E884 LDR X30, [X31 + 0x50]
	0x03B5E888 LDP D9, D8, [X31 + 0x40]
	0x03B5E88C LDP D11, D10, [X31 + 0x30]
	0x03B5E890 LDR X1, [X8 + 0x70]
	0x03B5E894 LDP D13, D12, [X31 + 0x20]
	0x03B5E898 LDP D15, D14, [X31 + 0x10]
	0x03B5E89C ADD X31, X31, 0x80
	0x03B5E8A0 B 0x30CC1B4
	0x03B5E8A4 BL 0x1C16F20
	0x03B5E8A8 STR X30, [X31 - 0x10]!
	0x03B5E8AC LDR X8, [X0]
	0x03B5E8B0 MOV X1, X31
	0x03B5E8B4 LDR X9, [X8 + 0x4B8]
	0x03B5E8B8 LDR X2, [X8 + 0x4C0]
	0x03B5E8BC BLR X9
	0x03B5E8C0 CBZ X0, 0x3B5E8D0
	0x03B5E8C4 MOV X1, X31
	0x03B5E8C8 LDR X30, [X31], #0x10
	0x03B5E8CC B 0x3C3F58C
	0x03B5E8D0 BL 0x1C16F20
	0x03B5E8D4 STR X30, [X31 - 0x10]!
	0x03B5E8D8 LDR X0, [X0 + 0x238]
	0x03B5E8DC CBZ X0, 0x3B5E8EC
	0x03B5E8E0 MOV X2, X31
	0x03B5E8E4 LDR X30, [X31], #0x10
	0x03B5E8E8 B 0x3B9A1D4
	0x03B5E8EC BL 0x1C16F20
	0x03B5E8F0 LDR X8, [X0]
	0x03B5E8F4 LDR X3, [X8 + 0x7A8]
	0x03B5E8F8 LDR X2, [X8 + 0x7B0]
	0x03B5E8FC BR X3
	0x03B5E900 LDR X8, [X0]
	0x03B5E904 LDR X3, [X8 + 0x7B8]
	0x03B5E908 LDR X2, [X8 + 0x7C0]
	0x03B5E90C BR X3
	0x03B5E910 STP X30, X21, [X31 - 0x20]!
	0x03B5E914 STP X20, X19, [X31 + 0x10]
	0x03B5E918 ADRP X21, 0x884000
	0x03B5E91C LDRB W8, [X21 + 0x981]
	0x03B5E920 MOV X19, X1
	0x03B5E924 MOV X20, X0
	0x03B5E928 TBNZ X8, 0x0, 0x3B5E940
	0x03B5E92C ADRP X0, 0x5FD000
	0x03B5E930 LDR X0, [X0 + 0x260]
	0x03B5E934 BL 0x1C16CF4
	0x03B5E938 MOVZ W8, 0x1
	0x03B5E93C STRB W8, [X21 + 0x981]
	0x03B5E940 LDR X0, [X20 + 0x1C8]
	0x03B5E944 CBZ X0, 0x3B5E964
	0x03B5E948 ADRP X8, 0x5FD000
	0x03B5E94C LDR X8, [X8 + 0x260]
	0x03B5E950 MOV X1, X19
	0x03B5E954 LDP X20, X19, [X31 + 0x10]
	0x03B5E958 LDR X2, [X8]
	0x03B5E95C LDP X30, X21, [X31], #0x20
	0x03B5E960 B 0x2729DBC
	0x03B5E964 LDP X20, X19, [X31 + 0x10]
	0x03B5E968 LDP X30, X21, [X31], #0x20
	0x03B5E96C RET
	0x03B5E970 STP X30, X21, [X31 - 0x20]!
	0x03B5E974 STP X20, X19, [X31 + 0x10]
	0x03B5E978 ADRP X21, 0x884000
	0x03B5E97C LDRB W8, [X21 + 0x982]
	0x03B5E980 MOV X19, X1
	0x03B5E984 MOV X20, X0
	0x03B5E988 TBNZ X8, 0x0, 0x3B5E9A0
	0x03B5E98C ADRP X0, 0x5FD000
	0x03B5E990 LDR X0, [X0 + 0x260]
	0x03B5E994 BL 0x1C16CF4
	0x03B5E998 MOVZ W8, 0x1
	0x03B5E99C STRB W8, [X21 + 0x982]
	0x03B5E9A0 LDR X0, [X20 + 0x1D0]
	0x03B5E9A4 CBZ X0, 0x3B5E9C4
	0x03B5E9A8 ADRP X8, 0x5FD000
	0x03B5E9AC LDR X8, [X8 + 0x260]
	0x03B5E9B0 MOV X1, X19
	0x03B5E9B4 LDP X20, X19, [X31 + 0x10]
	0x03B5E9B8 LDR X2, [X8]
	0x03B5E9BC LDP X30, X21, [X31], #0x20
	0x03B5E9C0 B 0x2729DBC
	0x03B5E9C4 LDP X20, X19, [X31 + 0x10]
	0x03B5E9C8 LDP X30, X21, [X31], #0x20
	0x03B5E9CC RET
	0x03B5E9D0 SUB X31, X31, 0xA0
	0x03B5E9D4 STP X29, X30, [X31 + 0x40]
	0x03B5E9D8 STP X28, X27, [X31 + 0x50]
	0x03B5E9DC STP X26, X25, [X31 + 0x60]
	0x03B5E9E0 STP X24, X23, [X31 + 0x70]
	0x03B5E9E4 STP X22, X21, [X31 + 0x80]
	0x03B5E9E8 STP X20, X19, [X31 + 0x90]
	0x03B5E9EC ADRP X24, 0x884000
	0x03B5E9F0 ADRP X20, 0x5FC000
	0x03B5E9F4 ADRP X23, 0x5FC000
	0x03B5E9F8 ADRP X22, 0x5FD000
	0x03B5E9FC ADRP X21, 0x5FD000
	0x03B5EA00 ADRP X29, 0x59B000
	0x03B5EA04 ADRP X28, 0x59A000
	0x03B5EA08 ADRP X27, 0x5FD000
	0x03B5EA0C ADRP X26, 0x5FD000
	0x03B5EA10 ADRP X25, 0x5FD000
	0x03B5EA14 LDR X20, [X20 + 0xEB8]
	0x03B5EA18 LDR X23, [X23 + 0xEC0]
	0x03B5EA1C LDR X22, [X22 + 0x268]
	0x03B5EA20 LDR X21, [X21 + 0x270]
	0x03B5EA24 LDR X29, [X29 + 0x488]
	0x03B5EA28 LDR X28, [X28 + 0x138]
	0x03B5EA2C LDR X27, [X27 + 0x278]
	0x03B5EA30 LDR X26, [X26 + 0x280]
	0x03B5EA34 LDRB W8, [X24 + 0x983]
	0x03B5EA38 LDR X25, [X25 + 0x288]
	0x03B5EA3C MOV X19, X0
	0x03B5EA40 TBNZ X8, 0x0, 0x3B5EAE8
	0x03B5EA44 ADRP X0, 0x5FD000
	0x03B5EA48 LDR X0, [X0 + 0x270]
	0x03B5EA4C BL 0x1C16CF4
	0x03B5EA50 ADRP X0, 0x5FD000
	0x03B5EA54 LDR X0, [X0 + 0x268]
	0x03B5EA58 BL 0x1C16CF4
	0x03B5EA5C ADRP X0, 0x59A000
	0x03B5EA60 LDR X0, [X0 + 0x138]
	0x03B5EA64 BL 0x1C16CF4
	0x03B5EA68 ADRP X0, 0x5FD000
	0x03B5EA6C LDR X0, [X0 + 0x280]
	0x03B5EA70 BL 0x1C16CF4
	0x03B5EA74 ADRP X0, 0x5FC000
	0x03B5EA78 LDR X0, [X0 + 0xE48]
	0x03B5EA7C BL 0x1C16CF4
	0x03B5EA80 ADRP X0, 0x5FD000
	0x03B5EA84 LDR X0, [X0 + 0x290]
	0x03B5EA88 BL 0x1C16CF4
	0x03B5EA8C ADRP X0, 0x5FD000
	0x03B5EA90 LDR X0, [X0 + 0x278]
	0x03B5EA94 BL 0x1C16CF4
	0x03B5EA98 ADRP X0, 0x5FC000
	0x03B5EA9C LDR X0, [X0 + 0xE40]
	0x03B5EAA0 BL 0x1C16CF4
	0x03B5EAA4 ADRP X0, 0x5FD000
	0x03B5EAA8 LDR X0, [X0 + 0x288]
	0x03B5EAAC BL 0x1C16CF4
	0x03B5EAB0 ADRP X0, 0x59B000
	0x03B5EAB4 LDR X0, [X0 + 0x488]
	0x03B5EAB8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x885000
	015 Move W8, [X19+2425]
	016 Move X20, X2
	017 Move X26, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {70}
	023 Move X0, 0x5FE000
	024 Move X0, [X0+464]
	025 Call 0x1C17CF4
	026 Move X0, 0x5FE000
	027 Move X0, [X0+472]
	028 Call 0x1C17CF4
	029 Move X0, 0x5FE000
	030 Move X0, [X0+480]
	031 Call 0x1C17CF4
	032 Move X0, 0x5FD000
	033 Move X0, [X0+328]
	034 Call 0x1C17CF4
	035 Move X0, 0x5FD000
	036 Move X0, [X0+352]
	037 Call 0x1C17CF4
	038 Move X0, 0x5FD000
	039 Move X0, [X0+3320]
	040 Call 0x1C17CF4
	041 Move X0, 0x5FD000
	042 Move X0, [X0+3592]
	043 Call 0x1C17CF4
	044 Move X0, 0x5FD000
	045 Move X0, [X0+3624]
	046 Call 0x1C17CF4
	047 Move X0, 0x5FD000
	048 Move X0, [X0+3584]
	049 Call 0x1C17CF4
	050 Move X0, 0x5FD000
	051 Move X0, [X0+3736]
	052 Call 0x1C17CF4
	053 Move X0, 0x5FE000
	054 Move X0, [X0+488]
	055 Call 0x1C17CF4
	056 Move X0, 0x5FD000
	057 Move X0, [X0+3744]
	058 Call 0x1C17CF4
	059 Move X0, 0x5FE000
	060 Move X0, [X0+496]
	061 Call 0x1C17CF4
	062 Move X0, 0x5BF000
	063 Move X0, [X0+1272]
	064 Call 0x1C17CF4
	065 Move X0, 0x5FE000
	066 Move X0, [X0+440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X19+2425], W8
	070 Move X0, X21
	071 Call XRPokeInteractor.EvaluateSphereOverlap, X0
	072 Move X8, [X21+560]
	073 Compare X8, 0
	074 JumpIfEqual {224}
	075 Move W2, [X8+24]
	076 Move W9, [X8+28]
	077 Move X25, 0x5FE000
	078 Move X25, [X25+440]
	079 Move W22, W0
	080 Add W9, W9, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X8+24], W31
	083 Move [X8+28], W9
	084 Move X0, [X8+16]
	085 Move W1, W31
	086 Move X3, X31
	087 Call Array.Clear, X0, X1, X2
	088 Move X0, [X25]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X25]
	094 Move X8, [X0+184]
	095 Move X0, [X8+8]
	096 Compare X0, 0
	097 JumpIfEqual {224}
	098 Move X8, 0x5FE000
	099 Move X8, [X8+472]
	100 Move X1, [X8]
	101 Call Dictionary`2<Object, Object>.Clear, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X21+544]
	104 Move [X31], X26
	105 Move [X31+8], X20
	106 Compare X0, 0
	107 JumpIfEqual {224}
	108 Move W26, [X0+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X27, 0x5FE000
	111 Move X28, 0x5FD000
	112 Move X29, 0x5FD000
	113 Move X19, 0x5FD000
	114 Move X20, 0x5FE000
	115 Move X27, [X27+496]
	116 Move X28, [X28+352]
	117 Move X29, [X29+328]
	118 Move X19, [X19+3624]
	119 Move X20, [X20+464]
	120 Move W22, W31
	121 Move X2, [X27]
	122 Move W1, W22
	123 Call List`1<PokeCollision>.get_Item, X0, X1
	124 Move X1, [X28]
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {219}
	128 Move X1, [X29]
	129 Call 0x1C17E00
	130 Compare X0, 0
	131 JumpIfEqual {219}
	132 Move X8, [X0]
	133 Move X1, [X29]
	134 Move X23, X0
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move W2, 6
	145 Move X0, X23
	146 Call 0x1C5D788
	147 Move W9, [X10]
	148 Add W9, W9, 6
	149 Add X8, X8, W9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X2, [X0+8]
	153 Move X0, X23
	154 Move X1, X21
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {219}
	160 Move X0, [X21+544]
	161 Compare X0, 0
	162 JumpIfEqual {224}
	163 Move X2, [X27]
	164 Move X23, [X21+560]
	165 Move W1, W22
	166 Call List`1<PokeCollision>.get_Item, X0, X1
	167 Compare X23, 0
	168 JumpIfEqual {224}
	169 Move W10, [X23+28]
	170 Move X8, [X23+16]
	171 Move X9, [X19]
	172 Add W10, W10, 1
	173 Move [X23+28], W10
	174 Compare X8, 0
	175 JumpIfEqual {224}
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Move W11, [X8+24]
	178 Move X1, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Add W9, W10, 1
	181 Add X8, X8, X10
	182 Move [X23+24], W9
	183 Move [X8+32], X1
	184 Move X8, [X9+32]
	185 Move X0, X23
	186 Move X8, [X8+192]
	187 Move X2, [X8+112]
	188 Call List`1<Object>.AddWithResize, X0, X1
	189 Move X0, [X25]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {195}
	193 Call 0x1C17DFC
	194 Move X0, [X25]
	195 Move X8, [X21+544]
	196 Compare X8, 0
	197 JumpIfEqual {224}
	198 Move X9, [X0+184]
	199 Move X2, [X27]
	200 Move X0, X8
	201 Move W1, W22
	202 Move X23, [X9+8]
	203 Call List`1<PokeCollision>.get_Item, X0, X1
	204 Move X8, [X21+544]
	205 Compare X8, 0
	206 JumpIfEqual {224}
	207 Move X2, [X27]
	208 Move X24, X0
	209 Move X0, X8
	210 Move W1, W22
	211 Call List`1<PokeCollision>.get_Item, X0, X1
	212 Compare X23, 0
	213 JumpIfEqual {224}
	214 Move X3, [X20]
	215 Move X2, X1
	216 Move X0, X23
	217 Move X1, X24
	218 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	219 Add W22, W22, 1
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X0, [X21+544]
	222 Compare X0, 0
	223 JumpIfNotEqual {121}
	224 Call 0x1C17F20
	225 Move X22, [X21+560]
	226 Compare X22, 0
	227 JumpIfEqual {224}
	228 Move W8, [X22+24]
	229 Move X26, [X31]
	230 Move X20, [X31+8]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X0, [X25]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {238}
	236 Call 0x1C17DFC
	237 Move X0, [X25]
	238 Move X8, 0x5BF000
	239 Move X8, [X8+1272]
	240 Move X9, [X0+184]
	241 Move X8, [X8]
	242 Move X23, [X9]
	243 Move W10, [X8+224]
	244 Compare W10, 0
	245 JumpIfNotEqual {248}
	246 Move X0, X8
	247 Call 0x1C17DFC
	248 Move X0, X21
	249 Move X1, X22
	250 Move X2, X23
	251 Move X3, X31
	252 Call SortingHelpers.SortByDistanceToInteractor, X0, X1, X2
	253 Move X0, [X21+560]
	254 Compare X0, 0
	255 JumpIfEqual {224}
	256 Move W2, [X0+24]
	257 Move W8, [X0+28]
	258 Add W8, W8, 1
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move [X0+24], W31
	261 Move [X0+28], W8
	262 Move X0, [X0+16]
	263 Move W1, W31
	264 Move X3, X31
	265 Call Array.Clear, X0, X1, X2
	266 Move X0, [X21+560]
	267 Compare X0, 0
	268 JumpIfEqual {224}
	269 Move X8, [X25]
	270 Move X9, 0x5FD000
	271 Move X8, [X8+184]
	272 Move X9, [X9+3592]
	273 Move X1, [X8]
	274 Move X2, [X9]
	275 Call List`1<Object>.AddRange, X0, X1
	276 Move X0, X21
	277 Call XRBaseInteractor.get_targetFilter, X0
	278 Compare X0, 0
	279 JumpIfEqual {365}
	280 Move X19, 0x5FD000
	281 Move X8, [X0]
	282 Move X19, [X19+3320]
	283 Move X22, X0
	284 NotImplemented "Instruction LDRH not yet implemented."
	285 Move X1, [X19]
	286 Compare X9, 0
	287 JumpIfEqual {294}
	288 Move X10, [X8+176]
	289 Add X10, X10, 8
	290 NotImplemented "Instruction LDUR not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Subtract X9, X9, 1
	293 Add X10, X10, 16
	294 Move X0, X22
	295 Move W2, W31
	296 Call 0x1C5D788
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Add X8, X8, X9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X1, [X0+8]
	302 Move X0, X22
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move TEMP, X0
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfNotEqual {365}
	308 Move X0, [X25]
	309 Move X23, [X21+560]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {315}
	313 Call 0x1C17DFC
	314 Move X0, [X25]
	315 Move X9, [X0+184]
	316 Move X8, [X22]
	317 Move X1, [X19]
	318 Move X24, [X9]
	319 NotImplemented "Instruction LDRH not yet implemented."
	320 Compare X9, 0
	321 JumpIfEqual {328}
	322 Move X10, [X8+176]
	323 Add X10, X10, 8
	324 NotImplemented "Instruction LDUR not yet implemented."
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Subtract X9, X9, 1
	327 Add X10, X10, 16
	328 Move W2, 3
	329 Move X0, X22
	330 Call 0x1C5D788
	331 Move W9, [X10]
	332 Add W9, W9, 3
	333 Add X8, X8, W9
	334 Add X0, X8, 312
	335 Move X8, [X0]
	336 Move X4, [X0+8]
	337 Move X0, X22
	338 Move X1, X21
	339 Move X2, X23
	340 Move X3, X24
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move X0, [X21+560]
	343 Compare X0, 0
	344 JumpIfEqual {224}
	345 Move W2, [X0+24]
	346 Move W8, [X0+28]
	347 Add W8, W8, 1
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move [X0+24], W31
	350 Move [X0+28], W8
	351 Move X0, [X0+16]
	352 Move W1, W31
	353 Move X3, X31
	354 Call Array.Clear, X0, X1, X2
	355 Move X0, [X21+560]
	356 Compare X0, 0
	357 JumpIfEqual {224}
	358 Move X8, [X25]
	359 Move X9, 0x5FD000
	360 Move X8, [X8+184]
	361 Move X9, [X9+3592]
	362 Move X1, [X8]
	363 Move X2, [X9]
	364 Call List`1<Object>.AddRange, X0, X1
	365 Move X0, [X21+560]
	366 Compare X0, 0
	367 JumpIfEqual {224}
	368 Move W8, [X0+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 NotImplemented "Instruction CSEL not yet implemented."
	371 Compare W8, 0
	372 JumpIfEqual {406}
	373 Move X8, 0x5FD000
	374 Move X8, [X8+3744]
	375 Move W1, W31
	376 Move X2, [X8]
	377 Call List`1<Object>.get_Item, X0, X1
	378 Compare X0, 0
	379 JumpIfEqual {388}
	380 Move X8, 0x5FD000
	381 Move X8, [X8+352]
	382 Move X21, X0
	383 Move X22, [X8]
	384 Move X1, X22
	385 Call 0x1C17E00
	386 Compare X0, 0
	387 JumpIfEqual {424}
	388 Move [X19], X0
	389 Move X0, [X25]
	390 Move W8, [X0+224]
	391 Compare W8, 0
	392 JumpIfNotEqual {395}
	393 Call 0x1C17DFC
	394 Move X0, [X25]
	395 Move X8, [X0+184]
	396 Move X0, [X8+8]
	397 Compare X0, 0
	398 JumpIfEqual {224}
	399 Move X8, 0x5FE000
	400 Move X1, [X26]
	401 Move X8, [X8+480]
	402 Move X2, [X8]
	403 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	404 Move X8, X0
	405 Move W0, 1
	406 Move W0, W31
	407 Move X8, X31
	408 Move [X26], X31
	409 Move [X20], X8
	410 Move X20, [X31+96]
	411 Move X19, [X31+104]
	412 Move X22, [X31+80]
	413 Move X21, [X31+88]
	414 Move X24, [X31+64]
	415 Move X23, [X31+72]
	416 Move X26, [X31+48]
	417 Move X25, [X31+56]
	418 Move X28, [X31+32]
	419 Move X27, [X31+40]
	420 Move X29, [X31+16]
	421 Move X30, [X31+24]
	422 Add X31, X31, 112
	423 Return X0
	424 Move X0, X21
	425 Move X1, X22
	426 Call 0x1C181E0

Method: System.Void ProcessPokeStateData()

Disassembly:
	0x03B5EABC ADRP X0, 0x5FC000
	0x03B5EAC0 LDR X0, [X0 + 0xEB8]
	0x03B5EAC4 BL 0x1C16CF4
	0x03B5EAC8 ADRP X0, 0x5FC000
	0x03B5EACC LDR X0, [X0 + 0xEC0]
	0x03B5EAD0 BL 0x1C16CF4
	0x03B5EAD4 ADRP X0, 0x5FC000
	0x03B5EAD8 LDR X0, [X0 + 0x368]
	0x03B5EADC BL 0x1C16CF4
	0x03B5EAE0 MOVZ W8, 0x1
	0x03B5EAE4 STRB W8, [X24 + 0x983]
	0x03B5EAE8 ADRP X8, 0xFFFFFFFFFCF8D000
	0x03B5EAEC LDR V0, [X8 + 0x78]
	0x03B5EAF0 MOVZ W9, 0xD70A
	0x03B5EAF4 ADD X8, X19, 0x1A8
	0x03B5EAF8 MOVK W9, 0x3BA30000
	0x03B5EAFC MOVN W0, 0x0
	0x03B5EB00 MOV X1, X31
	0x03B5EB04 STR V0, [X8]
	0x03B5EB08 STR W9, [X19 + 0x1B8]
	0x03B5EB0C BL 0x3C35CBC
	0x03B5EB10 MOVZ W24, 0x1
	0x03B5EB14 MOVZ W8, 0x101
	0x03B5EB18 STR W0, [X19 + 0x1BC]
	0x03B5EB1C STR W24, [X19 + 0x1C0]
	0x03B5EB20 STRH W8, [X19 + 0x1C4]
	0x03B5EB24 LDR X0, [X20]
	0x03B5EB28 BL 0x1C16F10
	0x03B5EB2C MOV X1, X31
	0x03B5EB30 MOV X20, X0
	0x03B5EB34 BL 0x3BA4EF0
	0x03B5EB38 STR X20, [X19 + 0x1C8]
	0x03B5EB3C LDR X0, [X23]
	0x03B5EB40 BL 0x1C16F10
	0x03B5EB44 MOV X1, X31
	0x03B5EB48 MOV X20, X0
	0x03B5EB4C BL 0x3BA4F38
	0x03B5EB50 STR X20, [X19 + 0x1D0]
	0x03B5EB54 LDR X0, [X22]
	0x03B5EB58 BL 0x1C16F10
	0x03B5EB5C LDR X5, [X21]
	0x03B5EB60 MOVI V0.2D, 0x0
	0x03B5EB64 ADD X1, X31, 0x0
	0x03B5EB68 MOVZ W2, 0x1
	0x03B5EB6C MOV X3, X31
	0x03B5EB70 MOV W4, W31
	0x03B5EB74 MOV X20, X0
	0x03B5EB78 STR X31, [X31 + 0x30]
	0x03B5EB7C STP V0, V0, [X31 + 0x10]
	0x03B5EB80 STR V0, [X31]
	0x03B5EB84 BL 0x28E2908
	0x03B5EB88 STR X20, [X19 + 0x1D8]
	0x03B5EB8C STRB W24, [X19 + 0x1FC]
	0x03B5EB90 LDR X0, [X29]
	0x03B5EB94 MOVZ W1, 0x19
	0x03B5EB98 BL 0x1C16D6C
	0x03B5EB9C STR X0, [X19 + 0x210]
	0x03B5EBA0 LDR X0, [X28]
	0x03B5EBA4 MOVZ W1, 0x19
	0x03B5EBA8 BL 0x1C16D6C
	0x03B5EBAC STR X0, [X19 + 0x218]
	0x03B5EBB0 LDR X0, [X27]
	0x03B5EBB4 BL 0x1C16F10
	0x03B5EBB8 LDR X1, [X26]
	0x03B5EBBC MOV X20, X0
	0x03B5EBC0 BL 0x3178480
	0x03B5EBC4 STR X20, [X19 + 0x220]
	0x03B5EBC8 LDR X0, [X25]
	0x03B5EBCC BL 0x1C16F10
	0x03B5EBD0 ADRP X8, 0x5FD000
	0x03B5EBD4 LDR X8, [X8 + 0x290]
	0x03B5EBD8 MOV X20, X0
	0x03B5EBDC LDR X1, [X8]
	0x03B5EBE0 BL 0x301B7C4
	0x03B5EBE4 STR X20, [X19 + 0x228]
	0x03B5EBE8 ADRP X8, 0x5FC000
	0x03B5EBEC LDR X8, [X8 + 0xE40]
	0x03B5EBF0 LDR X0, [X8]
	0x03B5EBF4 BL 0x1C16F10
	0x03B5EBF8 ADRP X8, 0x5FC000
	0x03B5EBFC LDR X8, [X8 + 0xE48]
	0x03B5EC00 MOV X20, X0
	0x03B5EC04 LDR X1, [X8]
	0x03B5EC08 BL 0x301B7C4
	0x03B5EC0C STR X20, [X19 + 0x230]
	0x03B5EC10 ADRP X8, 0x5FC000
	0x03B5EC14 LDR X8, [X8 + 0x368]
	0x03B5EC18 LDR X0, [X8]
	0x03B5EC1C LDR W8, [X0 + 0xE0]
	0x03B5EC20 CBNZ W8, 0x3B5EC28
	0x03B5EC24 BL 0x1C16DFC
	0x03B5EC28 MOV X0, X19
	0x03B5EC2C BL 0x3B514A8
	0x03B5EC30 LDP X20, X19, [X31 + 0x90]
	0x03B5EC34 LDP X22, X21, [X31 + 0x80]
	0x03B5EC38 LDP X24, X23, [X31 + 0x70]
	0x03B5EC3C LDP X26, X25, [X31 + 0x60]
	0x03B5EC40 LDP X28, X27, [X31 + 0x50]
	0x03B5EC44 LDP X29, X30, [X31 + 0x40]
	0x03B5EC48 ADD X31, X31, 0xA0
	0x03B5EC4C RET
	0x03B5EC50 STR X30, [X31 - 0x40]!
	0x03B5EC54 STP X24, X23, [X31 + 0x10]
	0x03B5EC58 STP X22, X21, [X31 + 0x20]
	0x03B5EC5C STP X20, X19, [X31 + 0x30]
	0x03B5EC60 ADRP X23, 0x884000
	0x03B5EC64 ADRP X24, 0x5FC000
	0x03B5EC68 ADRP X19, 0x5FC000
	0x03B5EC6C ADRP X20, 0x5FD000
	0x03B5EC70 ADRP X22, 0x5FD000
	0x03B5EC74 ADRP X21, 0x5FD000
	0x03B5EC78 LDRB W8, [X23 + 0x984]
	0x03B5EC7C LDR X24, [X24 + 0xE40]
	0x03B5EC80 LDR X19, [X19 + 0xE48]
	0x03B5EC84 LDR X20, [X20 + 0x1B8]
	0x03B5EC88 LDR X22, [X22 + 0x298]
	0x03B5EC8C LDR X21, [X21 + 0x2A0]
	0x03B5EC90 TBNZ X8, 0x0, 0x3B5ECD8
	0x03B5EC94 ADRP X0, 0x5FD000
	0x03B5EC98 LDR X0, [X0 + 0x2A0]
	0x03B5EC9C BL 0x1C16CF4
	0x03B5ECA0 ADRP X0, 0x5FD000
	0x03B5ECA4 LDR X0, [X0 + 0x298]
	0x03B5ECA8 BL 0x1C16CF4
	0x03B5ECAC ADRP X0, 0x5FC000
	0x03B5ECB0 LDR X0, [X0 + 0xE48]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+192], X30
	003 Move [X31+200], X21
	004 Move [X31+208], X20
	005 Move [X31+216], X19
	006 Move X20, 0x885000
	007 Move W8, [X20+2426]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x5FE000
	014 Move X0, [X0+504]
	015 Call 0x1C17CF4
	016 Move X0, 0x5FE000
	017 Move X0, [X0+512]
	018 Call 0x1C17CF4
	019 Move X0, 0x5FE000
	020 Move X0, [X0+520]
	021 Call 0x1C17CF4
	022 Move X0, 0x5FE000
	023 Move X0, [X0+456]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2426], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+112], X31
	029 Move [X31+80], V0
	030 Move [X31+88], V0
	031 Move [X31+4], V0
	032 Move W8, [X19+184]
	033 Compare W8, 0
	034 JumpIfEqual {76}
	035 Move X8, 0x5FE000
	036 Move X8, [X8+456]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X1, X31, 64
	043 Move X0, X19
	044 Move X2, X31
	045 Call TrackedDeviceGraphicRaycaster.TryGetPokeStateDataForInteractor, X0, X1
	046 Move X0, [X19+472]
	047 Move V0, [X31+64]
	048 Move V1, [X31+80]
	049 Move V2, [X31+6]
	050 Move X8, [X31+112]
	051 Move [X31], V0
	052 Move [X31+8], V1
	053 Move [X31+2], V2
	054 Move [X31+48], X8
	055 Compare X0, 0
	056 JumpIfEqual {143}
	057 Move X8, 0x5FE000
	058 Move X8, [X8+504]
	059 Move V0, [X31]
	060 Move V1, [X31+16]
	061 Move V2, [X31+2]
	062 Move X9, [X31+48]
	063 Move X2, [X8]
	064 Add X1, X31, 128
	065 Move [X31+128], V0
	066 Move [X31+136], V1
	067 Move [X31+10], V2
	068 Move [X31+176], X9
	069 Call BindableVariableBase`1<PokeStateData>.set_Value, X0, X1
	070 Move X20, [X31+208]
	071 Move X19, [X31+216]
	072 Move X30, [X31+192]
	073 Move X21, [X31+200]
	074 Add X31, X31, 224
	075 Return 
	076 Move X0, [X19+520]
	077 Compare X0, 0
	078 JumpIfEqual {46}
	079 Move X21, 0x5FE000
	080 Move X21, [X21+512]
	081 Move X1, [X21]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {46}
	085 Move X8, [X0]
	086 Move X1, [X21]
	087 Move X20, X0
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X20
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Compare X0, 0
	108 JumpIfEqual {143}
	109 Move X10, 0x5FE000
	110 Move X8, [X0]
	111 Move X10, [X10+520]
	112 Move X20, X0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X1, [X10]
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move W2, 3
	124 Move X0, X20
	125 Call 0x1C5D788
	126 Move W9, [X10]
	127 Add W9, W9, 3
	128 Add X8, X8, W9
	129 Add X0, X8, 312
	130 Move X9, [X0]
	131 Move X1, [X0+8]
	132 Add X8, X31, 128
	133 Move X0, X20
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move V0, [X31+128]
	136 Move V1, [X31+144]
	137 Move V2, [X31+10]
	138 Move X8, [X31+176]
	139 Move [X31+64], V0
	140 Move [X31+72], V1
	141 Move [X31+6], V2
	142 Move [X31+112], X8
	143 Call 0x1C17F20

Method: System.Void GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets)

Disassembly:
	0x03B5F0FC AND W8, W1, 0x1
	0x03B5F100 STRB W8, [X0 + 0x328]
	0x03B5F104 RET
	0x03B5F108 LDRB W0, [X0 + 0x329]
	0x03B5F10C RET
	0x03B5F110 AND W8, W1, 0x1
	0x03B5F114 STRB W8, [X0 + 0x329]
	0x03B5F118 RET
	0x03B5F11C LDRB W0, [X0 + 0x32A]
	0x03B5F120 RET
	0x03B5F124 AND W8, W1, 0x1
	0x03B5F128 STRB W8, [X0 + 0x32A]
	0x03B5F12C RET
	0x03B5F130 SUB X31, X31, 0x30
	0x03B5F134 STP X30, X19, [X31 + 0x20]
	0x03B5F138 ADD X1, X31, 0x0
	0x03B5F13C ADD X2, X31, 0x10
	0x03B5F140 MOV X19, X0
	0x03B5F144 STR W31, [X31 + 0x18]
	0x03B5F148 STR X31, [X31 + 0x10]
	0x03B5F14C STR W31, [X31 + 0x8]
	0x03B5F150 STR X31, [X31]
	0x03B5F154 BL 0x3B5F170
	0x03B5F158 LDP S0, S1, [X31 + 0x10]
	0x03B5F15C LDR V2, [X31 + 0x18]
	0x03B5F160 MOV X0, X19
	0x03B5F164 LDP X30, X19, [X31 + 0x20]
	0x03B5F168 ADD X31, X31, 0x30
	0x03B5F16C B 0x3B5F1FC
	0x03B5F170 STR X30, [X31 - 0x30]!
	0x03B5F174 STP X22, X21, [X31 + 0x10]
	0x03B5F178 STP X20, X19, [X31 + 0x20]
	0x03B5F17C ADRP X22, 0x883000
	0x03B5F180 LDRB W8, [X22 + 0x991]
	0x03B5F184 MOV X19, X2
	0x03B5F188 MOV X20, X1
	0x03B5F18C MOV X21, X0
	0x03B5F190 TBNZ X8, 0x0, 0x3B5F1A8
	0x03B5F194 ADRP X0, 0x5FB000
	0x03B5F198 LDR X0, [X0 + 0x7C0]
	0x03B5F19C BL 0x1C16CF4
	0x03B5F1A0 MOVZ W8, 0x1
	0x03B5F1A4 STRB W8, [X22 + 0x991]
	0x03B5F1A8 ADRP X22, 0x5FB000
	0x03B5F1AC LDRB W8, [X21 + 0x358]
	0x03B5F1B0 LDR X22, [X22 + 0x7C0]
	0x03B5F1B4 CBZ W8, 0x3B5F1C0
	0x03B5F1B8 LDR X21, [X21 + 0x2A0]
	0x03B5F1BC B 0x3B5F1D0
	0x03B5F1C0 MOV X0, X21
	0x03B5F1C4 MOV X1, X31
	0x03B5F1C8 BL 0x3C32E90
	0x03B5F1CC MOV X21, X0
	0x03B5F1D0 LDR X0, [X22]
	0x03B5F1D4 LDR W8, [X0 + 0xE0]
	0x03B5F1D8 CBNZ W8, 0x3B5F1E0
	0x03B5F1DC BL 0x1C16DFC
	0x03B5F1E0 MOV X0, X21
	0x03B5F1E4 MOV X1, X20
	0x03B5F1E8 MOV X2, X19
	0x03B5F1EC LDP X20, X19, [X31 + 0x20]
	0x03B5F1F0 LDP X22, X21, [X31 + 0x10]
	0x03B5F1F4 LDR X30, [X31], #0x30
	0x03B5F1F8 B 0x3B615D0
	0x03B5F1FC SUB X31, X31, 0x70
	0x03B5F200 STP D15, D14, [X31 + 0x10]
	0x03B5F204 STP D13, D12, [X31 + 0x20]
	0x03B5F208 STP D11, D10, [X31 + 0x30]
	0x03B5F20C STP D9, D8, [X31 + 0x40]
	0x03B5F210 STR X30, [X31 + 0x50]
	0x03B5F214 STP X20, X19, [X31 + 0x60]
	0x03B5F218 MOV V8.16B, V2.16B
	0x03B5F21C MOV V9.16B, V1.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x884000
	006 Move W8, [X21+2427]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x5FC000
	014 Move X0, [X0+3624]
	015 Call 0x1C17CF4
	016 Move X0, 0x5FC000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x5FC000
	020 Move X0, [X0+3736]
	021 Call 0x1C17CF4
	022 Move X0, 0x5FC000
	023 Move X0, [X0+3744]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2427], W8
	027 Compare X19, 0
	028 JumpIfEqual {88}
	029 Move W2, [X19+24]
	030 Move W8, [X19+28]
	031 Add W8, W8, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X19+24], W31
	034 Move [X19+28], W8
	035 Move X0, [X19+16]
	036 Move W1, W31
	037 Move X3, X31
	038 Call Array.Clear, X0, X1, X2
	039 Move X0, X20
	040 Move X1, X31
	041 Call Behaviour.get_isActiveAndEnabled, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {73}
	046 Move X0, [X20+560]
	047 Compare X0, 0
	048 JumpIfEqual {88}
	049 Move W8, [X0+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, 0x5FC000
	052 Move X8, [X8+3744]
	053 Move W1, W31
	054 Move X2, [X8]
	055 Call List`1<Object>.get_Item, X0, X1
	056 Move X9, 0x5FC000
	057 Move X9, [X9+3624]
	058 Move W10, [X19+28]
	059 Move X8, [X19+16]
	060 Move X9, [X9]
	061 Add W10, W10, 1
	062 Move [X19+28], W10
	063 Compare X8, 0
	064 JumpIfEqual {88}
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Move W11, [X8+24]
	067 Move X1, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add W9, W10, 1
	070 Add X8, X8, X10
	071 Move [X19+24], W9
	072 Move [X8+32], X1
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Return 
	078 Move X8, [X9+32]
	079 Move X0, X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X8, [X8+192]
	083 Move X2, [X8+112]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Call List`1<Object>.AddWithResize, X0, X1
	087 Return 
	088 Call 0x1C17F20

Method: System.Int32 EvaluateSphereOverlap()

Disassembly:
	0x03B5ED70 STP X20, X19, [X31 + 0x20]
	0x03B5ED74 ADRP X22, 0x884000
	0x03B5ED78 ADRP X21, 0x595000
	0x03B5ED7C LDRB W8, [X22 + 0x985]
	0x03B5ED80 LDR X21, [X21 + 0x598]
	0x03B5ED84 MOV X20, X1
	0x03B5ED88 MOV X19, X0
	0x03B5ED8C TBNZ X8, 0x0, 0x3B5EDA4
	0x03B5ED90 ADRP X0, 0x595000
	0x03B5ED94 LDR X0, [X0 + 0x598]
	0x03B5ED98 BL 0x1C16CF4
	0x03B5ED9C MOVZ W8, 0x1
	0x03B5EDA0 STRB W8, [X22 + 0x985]
	0x03B5EDA4 STR X20, [X19 + 0x2A0]
	0x03B5EDA8 LDR X0, [X21]
	0x03B5EDAC LDR W8, [X0 + 0xE0]
	0x03B5EDB0 CBNZ W8, 0x3B5EDB8
	0x03B5EDB4 BL 0x1C16DFC
	0x03B5EDB8 MOV X0, X20
	0x03B5EDBC MOV X1, X31
	0x03B5EDC0 MOV X2, X31
	0x03B5EDC4 BL 0x3C354F8
	0x03B5EDC8 AND W8, W0, 0x1
	0x03B5EDCC STRB W8, [X19 + 0x358]
	0x03B5EDD0 LDP X20, X19, [X31 + 0x20]
	0x03B5EDD4 LDP X22, X21, [X31 + 0x10]
	0x03B5EDD8 LDR X30, [X31], #0x30
	0x03B5EDDC RET
	0x03B5EDE0 LDR X0, [X0 + 0x2A8]
	0x03B5EDE4 RET
	0x03B5EDE8 STR X30, [X31 - 0x30]!
	0x03B5EDEC STP X22, X21, [X31 + 0x10]
	0x03B5EDF0 STP X20, X19, [X31 + 0x20]
	0x03B5EDF4 ADRP X22, 0x884000
	0x03B5EDF8 ADRP X21, 0x595000
	0x03B5EDFC LDRB W8, [X22 + 0x986]
	0x03B5EE00 LDR X21, [X21 + 0x598]
	0x03B5EE04 MOV X20, X1
	0x03B5EE08 MOV X19, X0
	0x03B5EE0C TBNZ X8, 0x0, 0x3B5EE24
	0x03B5EE10 ADRP X0, 0x595000
	0x03B5EE14 LDR X0, [X0 + 0x598]
	0x03B5EE18 BL 0x1C16CF4
	0x03B5EE1C MOVZ W8, 0x1
	0x03B5EE20 STRB W8, [X22 + 0x986]
	0x03B5EE24 STR X20, [X19 + 0x2A8]
	0x03B5EE28 LDR X0, [X21]
	0x03B5EE2C LDR W8, [X0 + 0xE0]
	0x03B5EE30 CBNZ W8, 0x3B5EE38
	0x03B5EE34 BL 0x1C16DFC
	0x03B5EE38 MOV X0, X20
	0x03B5EE3C MOV X1, X31
	0x03B5EE40 MOV X2, X31
	0x03B5EE44 BL 0x3C354F8
	0x03B5EE48 AND W8, W0, 0x1
	0x03B5EE4C STRB W8, [X19 + 0x359]
	0x03B5EE50 LDP X20, X19, [X31 + 0x20]
	0x03B5EE54 LDP X22, X21, [X31 + 0x10]
	0x03B5EE58 LDR X30, [X31], #0x30
	0x03B5EE5C RET
	0x03B5EE60 LDR V0, [X0 + 0x2B0]
	0x03B5EE64 RET
	0x03B5EE68 STR S0, [X0 + 0x2B0]
	0x03B5EE6C RET
	0x03B5EE70 LDR V0, [X0 + 0x2B4]
	0x03B5EE74 RET
	0x03B5EE78 STR S0, [X0 + 0x2B4]
	0x03B5EE7C RET
	0x03B5EE80 LDR V0, [X0 + 0x2B8]
	0x03B5EE84 RET
	0x03B5EE88 STR S0, [X0 + 0x2B8]
	0x03B5EE8C RET
	0x03B5EE90 LDR V0, [X0 + 0x2BC]
	0x03B5EE94 RET
	0x03B5EE98 STR S0, [X0 + 0x2BC]
	0x03B5EE9C RET
	0x03B5EEA0 LDR V0, [X0 + 0x2C0]
	0x03B5EEA4 RET
	0x03B5EEA8 STR S0, [X0 + 0x2C0]
	0x03B5EEAC RET
	0x03B5EEB0 LDR V0, [X0 + 0x2C4]
	0x03B5EEB4 RET
	0x03B5EEB8 STR S0, [X0 + 0x2C4]
	0x03B5EEBC RET
	0x03B5EEC0 LDR V0, [X0 + 0x2C8]
	0x03B5EEC4 RET
	0x03B5EEC8 STR S0, [X0 + 0x2C8]
	0x03B5EECC RET
	0x03B5EED0 LDR V0, [X0 + 0x2CC]
	0x03B5EED4 RET
	0x03B5EED8 STR S0, [X0 + 0x2CC]
	0x03B5EEDC RET
	0x03B5EEE0 LDR W0, [X0 + 0x2D0]
	0x03B5EEE4 RET
	0x03B5EEE8 STR X30, [X31 - 0x30]!
	0x03B5EEEC STP X22, X21, [X31 + 0x10]
	0x03B5EEF0 STP X20, X19, [X31 + 0x20]
	0x03B5EEF4 ADRP X21, 0x884000
	0x03B5EEF8 ADRP X22, 0x5FC000
	0x03B5EEFC LDRB W8, [X21 + 0x987]
	0x03B5EF00 LDR X22, [X22 + 0x7C0]
	0x03B5EF04 MOV W20, W1
	0x03B5EF08 MOV X19, X0
	0x03B5EF0C TBNZ X8, 0x0, 0x3B5EF24
	0x03B5EF10 ADRP X0, 0x5FC000
	0x03B5EF14 LDR X0, [X0 + 0x7C0]
	0x03B5EF18 BL 0x1C16CF4
	0x03B5EF1C MOVZ W8, 0x1
	0x03B5EF20 STRB W8, [X21 + 0x987]
	0x03B5EF24 LDR X0, [X22]
	0x03B5EF28 LDR W8, [X0 + 0xE0]
	0x03B5EF2C CBNZ W8, 0x3B5EF34
	0x03B5EF30 BL 0x1C16DFC
	0x03B5EF34 CMP W20, 0x2
	0x03B5EF38 MOVZ W8, 0x2
	0x03B5EF3C CSEL W8, W20, W8, GT
	0x03B5EF40 STR W8, [X19 + 0x2D0]
	0x03B5EF44 LDP X20, X19, [X31 + 0x20]
	0x03B5EF48 LDP X22, X21, [X31 + 0x10]
	0x03B5EF4C LDR X30, [X31], #0x30
	0x03B5EF50 RET
	0x03B5EF54 CMP W0, 0x2
	0x03B5EF58 MOVZ W8, 0x2
	0x03B5EF5C CSEL W0, W0, W8, GT
	0x03B5EF60 RET
	0x03B5EF64 LDR W0, [X0 + 0x2D4]
	0x03B5EF68 RET
	0x03B5EF6C STR W1, [X0 + 0x2D4]
	0x03B5EF70 RET
	0x03B5EF74 LDR V0, [X0 + 0x2D8]
	0x03B5EF78 RET
	0x03B5EF7C STR S0, [X0 + 0x2D8]
	0x03B5EF80 RET
	0x03B5EF84 LDR V0, [X0 + 0x2DC]
	0x03B5EF88 RET
	0x03B5EF8C STR S0, [X0 + 0x2DC]
	0x03B5EF90 RET
	0x03B5EF94 LDR W0, [X0 + 0x2E0]
	0x03B5EF98 RET
	0x03B5EF9C STR W1, [X0 + 0x2E0]
	0x03B5EFA0 RET
	0x03B5EFA4 LDR W0, [X0 + 0x2E4]
	0x03B5EFA8 RET
	0x03B5EFAC STR W1, [X0 + 0x2E4]
	0x03B5EFB0 RET
	0x03B5EFB4 LDR W0, [X0 + 0x2E8]
	0x03B5EFB8 RET
	0x03B5EFBC STR W1, [X0 + 0x2E8]
	0x03B5EFC0 RET
	0x03B5EFC4 LDRB W0, [X0 + 0x2EC]
	0x03B5EFC8 RET
	0x03B5EFCC AND W8, W1, 0x1
	0x03B5EFD0 STRB W8, [X0 + 0x2EC]
	0x03B5EFD4 RET
	0x03B5EFD8 LDRB W0, [X0 + 0x2ED]
	0x03B5EFDC RET
	0x03B5EFE0 AND W8, W1, 0x1
	0x03B5EFE4 STRB W8, [X0 + 0x2ED]
	0x03B5EFE8 RET
	0x03B5EFEC LDR V0, [X0 + 0x2F0]
	0x03B5EFF0 RET
	0x03B5EFF4 STR S0, [X0 + 0x2F0]
	0x03B5EFF8 RET
	0x03B5EFFC LDRB W0, [X0 + 0x2F4]
	0x03B5F000 RET
	0x03B5F004 AND W8, W1, 0x1
	0x03B5F008 STRB W8, [X0 + 0x2F4]
	0x03B5F00C RET
	0x03B5F010 LDR V0, [X0 + 0x2F8]
	0x03B5F014 RET
	0x03B5F018 STR S0, [X0 + 0x2F8]
	0x03B5F01C RET
	0x03B5F020 LDRB W0, [X0 + 0x2FC]
	0x03B5F024 RET
	0x03B5F028 LDRB W8, [X0 + 0x2FC]
	0x03B5F02C AND W9, W1, 0x1
	0x03B5F030 CMP W8, W9
	0x03B5F034 B.EQ 0x3B5F054
	0x03B5F038 LDR X8, [X0 + 0x3D0]
	0x03B5F03C STRB W9, [X0 + 0x2FC]
	0x03B5F040 CBZ X8, 0x3B5F054
	0x03B5F044 AND W1, W1, 0x1
	0x03B5F048 MOV X0, X8
	0x03B5F04C MOV X2, X31
	0x03B5F050 B 0x3B99A58
	0x03B5F054 RET
	0x03B5F058 LDRB W0, [X0 + 0x2FD]
	0x03B5F05C RET
	0x03B5F060 AND W8, W1, 0x1
	0x03B5F064 STRB W8, [X0 + 0x2FD]
	0x03B5F068 RET
	0x03B5F06C LDRB W0, [X0 + 0x2FE]
	0x03B5F070 RET
	0x03B5F074 AND W8, W1, 0x1
	0x03B5F078 STRB W8, [X0 + 0x2FE]
	0x03B5F07C RET
	0x03B5F080 LDRB W0, [X0 + 0x2FF]
	0x03B5F084 RET
	0x03B5F088 AND W8, W1, 0x1
	0x03B5F08C STRB W8, [X0 + 0x2FF]
	0x03B5F090 RET
	0x03B5F094 LDR V0, [X0 + 0x300]
	0x03B5F098 RET
	0x03B5F09C STR S0, [X0 + 0x300]
	0x03B5F0A0 RET
	0x03B5F0A4 LDR V0, [X0 + 0x304]
	0x03B5F0A8 RET
	0x03B5F0AC STR S0, [X0 + 0x304]
	0x03B5F0B0 RET
	0x03B5F0B4 LDR X0, [X0 + 0x308]
	0x03B5F0B8 RET
	0x03B5F0BC STR X1, [X0 + 0x308]
	0x03B5F0C0 RET
	0x03B5F0C4 LDR W0, [X0 + 0x310]
	0x03B5F0C8 RET
	0x03B5F0CC STR W1, [X0 + 0x310]
	0x03B5F0D0 RET
	0x03B5F0D4 LDR X0, [X0 + 0x318]
	0x03B5F0D8 RET
	0x03B5F0DC STR X1, [X0 + 0x318]
	0x03B5F0E0 RET
	0x03B5F0E4 LDR X0, [X0 + 0x320]
	0x03B5F0E8 RET
	0x03B5F0EC STR X1, [X0 + 0x320]
	0x03B5F0F0 RET
	0x03B5F0F4 LDRB W0, [X0 + 0x328]
	0x03B5F0F8 RET

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X30
	011 Move [X31+184], X23
	012 Move [X31+192], X22
	013 Move [X31+200], X21
	014 Move [X31+208], X20
	015 Move [X31+216], X19
	016 Move X20, 0x885000
	017 Move W8, [X20+2428]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x5FE000
	024 Move X0, [X0+528]
	025 Call 0x1C17CF4
	026 Move X0, 0x5FE000
	027 Move X0, [X0+536]
	028 Call 0x1C17CF4
	029 Move X0, 0x5FE000
	030 Move X0, [X0+488]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2428], W8
	034 Move [X31+104], W31
	035 Move [X31+96], X31
	036 Move [X31+88], W31
	037 Move [X31+80], X31
	038 Move [X31+72], W31
	039 Move [X31+56], X31
	040 Move [X31+64], X31
	041 Move [X31+40], X31
	042 Move [X31+48], X31
	043 Move [X31+24], X31
	044 Move [X31+32], X31
	045 Move X8, [X19+544]
	046 Compare X8, 0
	047 JumpIfEqual {261}
	048 Move W2, [X8+24]
	049 Move W9, [X8+28]
	050 Add W9, W9, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X8+24], W31
	053 Move [X8+28], W9
	054 Move X0, [X8+16]
	055 Move W1, W31
	056 Move X3, X31
	057 Call Array.Clear, X0, X1, X2
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X1, X31
	061 Move X9, [X8+1208]
	062 Move X2, [X8+1216]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X0, 0
	065 JumpIfEqual {261}
	066 Move X1, X31
	067 Call Transform.get_position, X0
	068 Move X8, [X19+496]
	069 Move W9, [X19+504]
	070 Add X0, X31, 96
	071 Add X1, X31, 80
	072 Add X2, X31, 64
	073 Add X3, X31, 60
	074 Add X4, X31, 56
	075 Move X5, X31
	076 Move V8, V0
	077 Move V10, V1
	078 Move V9, V2
	079 Move [X31+80], S0
	080 Move [X31+88], S1
	081 Move [X31+96], X8
	082 Move [X31+104], W9
	083 Move [X31+88], S2
	084 Call BurstPhysicsUtils.GetSphereOverlapParameters, X0, X1, X2, X3, X4
	085 Move W8, [X19+508]
	086 Add X20, X19, 576
	087 Compare W8, 0
	088 JumpIfNotEqual {174}
	089 Move X8, -50802688
	090 Move V0, [X31+60]
	091 Move V1, [X8+1040]
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move W0, [X19+444]
	094 Move S11, [X31+96]
	095 Move S12, [X31+100]
	096 Move V13, [X31+104]
	097 Move V14, [X19+436]
	098 Move [X31+16], S10
	099 Move [X31+24], S8
	100 Move S15, [X31+64]
	101 Move S8, [X31+68]
	102 Move [X31+12], S9
	103 Move V9, [X31+72]
	104 Move X21, [X19+528]
	105 Move V10, [X31+56]
	106 Move X1, X31
	107 Call LayerMask.op_Implicit, X0
	108 Move W3, [X19+448]
	109 Move V5, V8
	110 Move V6, V9
	111 Move V9, [X31+12]
	112 Move V7, V10
	113 Move S10, [X31+16]
	114 Move S8, [X31+20]
	115 Move W2, W0
	116 Move X0, X20
	117 Move V0, V11
	118 Move V1, V12
	119 Move V2, V13
	120 Move V3, V14
	121 Move V4, V15
	122 Move X1, X21
	123 Move X4, X31
	124 Call PhysicsScene.SphereCast, X0, X1, V0, X2, X3, V1, X4, X5
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X23, 0x5FE000
	127 Move X23, [X23+528]
	128 Move X20, X31
	129 Move W21, W0
	130 Move W22, 32
	131 Move X8, [X19+528]
	132 Compare X8, 0
	133 JumpIfEqual {261}
	134 Move W9, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X0, X8, X22
	137 Move X1, X31
	138 Call RaycastHit.get_collider, X0
	139 Move X1, X0
	140 Add X2, X31, 24
	141 Move X0, X19
	142 Call XRPokeInteractor.FindPokeTarget, X0, X1, X2
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {171}
	147 Move X0, [X19+544]
	148 Compare X0, 0
	149 JumpIfEqual {261}
	150 Move W10, [X0+28]
	151 Move X1, [X31+24]
	152 Move X2, [X31+32]
	153 Move X8, [X0+16]
	154 Move X9, [X23]
	155 Add W10, W10, 1
	156 Move [X0+28], W10
	157 Compare X8, 0
	158 JumpIfEqual {261}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W11, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X0+24], W9
	165 Move [X8+32], X1
	166 Move [X8+40], X2
	167 Move X8, [X9+32]
	168 Move X8, [X8+192]
	169 Move X3, [X8+112]
	170 Call List`1<PokeCollision>.AddWithResize, X0, X1
	171 Add X20, X20, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add X22, X22, 44
	174 Move W0, [X19+444]
	175 Move S11, [X31+80]
	176 Move S12, [X31+84]
	177 Move V13, [X31+88]
	178 Move V14, [X19+436]
	179 Move X21, [X19+536]
	180 Move X1, X31
	181 Call LayerMask.op_Implicit, X0
	182 Move W3, [X19+448]
	183 Move W2, W0
	184 Move X0, X20
	185 Move V0, V11
	186 Move V1, V12
	187 Move V2, V13
	188 Move V3, V14
	189 Move X1, X21
	190 Move X4, X31
	191 Call PhysicsScene.OverlapSphere, X0, X1, V0, X2, X3, X4
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X22, 0x5FD000
	194 Move X22, [X22+528]
	195 Move X20, X31
	196 Move W21, W0
	197 Move X8, [X19+536]
	198 Compare X8, 0
	199 JumpIfEqual {261}
	200 Move W9, [X8+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X8, X8, X20
	203 Move X1, [X8+32]
	204 Add X2, X31, 40
	205 Move X0, X19
	206 Call XRPokeInteractor.FindPokeTarget, X0, X1, X2
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {235}
	211 Move X0, [X19+544]
	212 Compare X0, 0
	213 JumpIfEqual {261}
	214 Move W10, [X0+28]
	215 Move X1, [X31+40]
	216 Move X2, [X31+48]
	217 Move X8, [X0+16]
	218 Move X9, [X22]
	219 Add W10, W10, 1
	220 Move [X0+28], W10
	221 Compare X8, 0
	222 JumpIfEqual {261}
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Move W11, [X8+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Add W9, W10, 1
	227 Add X8, X8, X10
	228 Move [X0+24], W9
	229 Move [X8+32], X1
	230 Move [X8+40], X2
	231 Move X8, [X9+32]
	232 Move X8, [X8+192]
	233 Move X3, [X8+112]
	234 Call List`1<PokeCollision>.AddWithResize, X0, X1
	235 Add X20, X20, 1
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X8, [X19+544]
	238 Move [X19+496], S8
	239 Move [X19+500], S10
	240 Move [X19+504], S9
	241 Move [X19+508], W31
	242 Compare X8, 0
	243 JumpIfEqual {261}
	244 Move W0, [X8+24]
	245 Move X20, [X31+208]
	246 Move X19, [X31+216]
	247 Move X22, [X31+192]
	248 Move X21, [X31+200]
	249 Move X30, [X31+176]
	250 Move X23, [X31+184]
	251 Move D9, [X31+160]
	252 Move D8, [X31+168]
	253 Move D11, [X31+144]
	254 Move D10, [X31+152]
	255 Move D13, [X31+128]
	256 Move D12, [X31+136]
	257 Move D15, [X31+112]
	258 Move D14, [X31+120]
	259 Add X31, X31, 224
	260 Return X0
	261 Call 0x1C17F20
	262 Call 0x1C17F28

Method: System.Boolean FindPokeTarget(UnityEngine.Collider hitCollider, out UnityEngine.XR.Interaction.Toolkit.XRPokeInteractor/PokeCollision newPokeCollision)

Disassembly:
	0x03B5F220 MOV V10.16B, V0.16B
	0x03B5F224 BL 0x3B5F4F8
	0x03B5F228 ADRP X19, 0x879000
	0x03B5F22C LDRB W8, [X19 + 0xE39]
	0x03B5F230 MOV V11.16B, V0.16B
	0x03B5F234 MOV V12.16B, V1.16B
	0x03B5F238 MOV V13.16B, V2.16B
	0x03B5F23C CBNZ W8, 0x3B5F254
	0x03B5F240 ADRP X0, 0x59B000
	0x03B5F244 LDR X0, [X0 + 0x4B8]
	0x03B5F248 BL 0x1C16CF4
	0x03B5F24C MOVZ W8, 0x1
	0x03B5F250 STRB W8, [X19 + 0xE39]
	0x03B5F254 ADRP X19, 0x59B000
	0x03B5F258 LDR X19, [X19 + 0x4B8]
	0x03B5F25C FMUL S0, S11, S11
	0x03B5F260 FMUL S1, S12, S12
	0x03B5F264 FADD S0, S0, S1
	0x03B5F268 LDR X8, [X19]
	0x03B5F26C FMUL S1, S13, S13
	0x03B5F270 FADD S0, S1, S0
	0x03B5F274 LDR X8, [X8 + 0xB8]
	0x03B5F278 LDR V2, [X8]
	0x03B5F27C FCMP S0, S2
	0x03B5F280 B.MI 0x3B5F2C8
	0x03B5F284 FMUL S1, S10, S11
	0x03B5F288 FMUL S2, S9, S12
	0x03B5F28C FMUL S3, S8, S13
	0x03B5F290 FADD S1, S1, S2
	0x03B5F294 FADD S1, S3, S1
	0x03B5F298 FMUL S2, S11, S1
	0x03B5F29C FMUL S3, S12, S1
	0x03B5F2A0 FMUL S1, S13, S1
	0x03B5F2A4 FDIV S2, S2, S0
	0x03B5F2A8 FDIV S3, S3, S0
	0x03B5F2AC FDIV S0, S1, S0
	0x03B5F2B0 FSUB S4, S10, S2
	0x03B5F2B4 FSUB S1, S9, S3
	0x03B5F2B8 FSUB S0, S8, S0
	0x03B5F2BC STP S1, S4, [X31 + 0x58]
	0x03B5F2C0 STR S0, [X31 + 0xC]
	0x03B5F2C4 B 0x3B5F2D0
	0x03B5F2C8 STP S9, S10, [X31 + 0x58]
	0x03B5F2CC STR S8, [X31 + 0xC]
	0x03B5F2D0 ADRP X20, 0x879000
	0x03B5F2D4 LDRB W8, [X20 + 0xA24]
	0x03B5F2D8 CBNZ W8, 0x3B5F2F0
	0x03B5F2DC ADRP X0, 0x594000
	0x03B5F2E0 LDR X0, [X0 + 0x5A8]
	0x03B5F2E4 BL 0x1C16CF4
	0x03B5F2E8 MOVZ W8, 0x1
	0x03B5F2EC STRB W8, [X20 + 0xA24]
	0x03B5F2F0 FMUL S0, S10, S10
	0x03B5F2F4 FMUL S1, S9, S9
	0x03B5F2F8 ADRP X20, 0x594000
	0x03B5F2FC LDR X20, [X20 + 0x5A8]
	0x03B5F300 FADD S0, S0, S1
	0x03B5F304 FMUL S1, S8, S8
	0x03B5F308 FADD S15, S1, S0
	0x03B5F30C LDP S1, S0, [X31 + 0x58]
	0x03B5F310 LDR X0, [X20]
	0x03B5F314 FMUL S0, S0, S0
	0x03B5F318 FMUL S1, S1, S1
	0x03B5F31C FADD S0, S0, S1
	0x03B5F320 LDR V1, [X31 + 0xC]
	0x03B5F324 LDR W8, [X0 + 0xE0]
	0x03B5F328 FMUL S1, S1, S1
	0x03B5F32C FADD S14, S1, S0
	0x03B5F330 CBNZ W8, 0x3B5F338
	0x03B5F334 BL 0x1C16DFC
	0x03B5F338 ADRP X8, 0xFFFFFFFFFCF8A000
	0x03B5F33C LDR V1, [X8 + 0xFE8]
	0x03B5F340 FMUL S0, S15, S14
	0x03B5F344 FSQRT S0, S0
	0x03B5F348 FMOV S15, W31
	0x03B5F34C FCMP S0, S1
	0x03B5F350 B.MI 0x3B5F3B0
	0x03B5F354 LDP S2, S1, [X31 + 0x58]
	0x03B5F358 LDR V3, [X31 + 0xC]
	0x03B5F35C LDR X0, [X20]
	0x03B5F360 FMUL S1, S10, S1
	0x03B5F364 FMUL S2, S9, S2
	0x03B5F368 FMUL S3, S8, S3
	0x03B5F36C FADD S1, S1, S2
	0x03B5F370 FADD S1, S3, S1
	0x03B5F374 LDR W8, [X0 + 0xE0]
	0x03B5F378 FDIV S0, S1, S0
	0x03B5F37C FMOV S1, 1
	0x03B5F380 FMOV S2, -1
	0x03B5F384 FMIN S1, S0, S1
	0x03B5F388 FCMP S0, S2
	0x03B5F38C FCSEL S14, S1, S2, PL
	0x03B5F390 CBNZ W8, 0x3B5F398
	0x03B5F394 BL 0x1C16DFC
	0x03B5F398 FCVT S0, S14
	0x03B5F39C BL 0x3EB1B80
	0x03B5F3A0 ADRP X8, 0xFFFFFFFFFCF8B000
	0x03B5F3A4 LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x03B5F3AC FMUL S15, S0, S1
	0x03B5F3B0 ADRP X20, 0x87A000
	0x03B5F3B4 LDRB W8, [X20 + 0x5AA]
	0x03B5F3B8 CBNZ W8, 0x3B5F3D0
	0x03B5F3BC ADRP X0, 0x59B000
	0x03B5F3C0 LDR X0, [X0 + 0x4B8]
	0x03B5F3C4 BL 0x1C16CF4
	0x03B5F3C8 MOVZ W8, 0x1
	0x03B5F3CC STRB W8, [X20 + 0x5AA]
	0x03B5F3D0 LDR X8, [X19]
	0x03B5F3D4 ADRP X9, 0xFFFFFFFFFCF8B000
	0x03B5F3D8 LDR V2, [X9 + 0x240]
	0x03B5F3DC FABS S0, S15
	0x03B5F3E0 LDR X8, [X8 + 0xB8]
	0x03B5F3E4 FMOV S1, W31
	0x03B5F3E8 FMOV S4, 8
	0x03B5F3EC FMAXNM S0, S0, S1
	0x03B5F3F0 LDR V3, [X8]
	0x03B5F3F4 FMUL S0, S0, S2
	0x03B5F3F8 FABD S1, S1, S1
	0x03B5F3FC FMUL S2, S3, S4
	0x03B5F400 FCMP S0, S2
	0x03B5F404 FCSEL S0, S0, S2, GT
	0x03B5F408 FCMP S1, S0
	0x03B5F40C B.MI 0x3B5F45C
	0x03B5F410 FMUL S0, S8, S12
	0x03B5F414 FMUL S1, S9, S13
	0x03B5F418 FMUL S2, S10, S13
	0x03B5F41C FMUL S3, S8, S11
	0x03B5F420 FMUL S4, S9, S11
	0x03B5F424 FMUL S5, S10, S12
	0x03B5F428 FSUB S0, S0, S1
	0x03B5F42C FSUB S1, S2, S3
	0x03B5F430 FSUB S2, S4, S5
	0x03B5F434 LDP S4, S3, [X31 + 0x58]
	0x03B5F438 LDR V5, [X31 + 0xC]
	0x03B5F43C STP S1, S2, [X31 + 0x4]
	0x03B5F440 STR S0, [X31]
	0x03B5F444 MOV V0.16B, V10.16B
	0x03B5F448 MOV V1.16B, V9.16B
	0x03B5F44C MOV V2.16B, V8.16B
	0x03B5F450 MOV X0, X31
	0x03B5F454 BL 0x1DD4D78
	0x03B5F458 B 0x3B5F460
	0x03B5F45C FMOV S0, W31
	0x03B5F460 LDP X20, X19, [X31 + 0x60]
	0x03B5F464 LDR X30, [X31 + 0x50]
	0x03B5F468 LDP D9, D8, [X31 + 0x40]
	0x03B5F46C LDP D11, D10, [X31 + 0x30]
	0x03B5F470 LDP D13, D12, [X31 + 0x20]
	0x03B5F474 LDP D15, D14, [X31 + 0x10]
	0x03B5F478 ADD X31, X31, 0x70
	0x03B5F47C RET
	0x03B5F480 LDR X0, [X0 + 0x330]
	0x03B5F484 RET
	0x03B5F488 STR X1, [X0 + 0x330]
	0x03B5F48C RET
	0x03B5F490 LDR V0, [X0 + 0x338]
	0x03B5F494 LDR V1, [X0 + 0x33C]
	0x03B5F498 LDR V2, [X0 + 0x340]
	0x03B5F49C RET
	0x03B5F4A0 STR S0, [X0 + 0x338]
	0x03B5F4A4 STR S1, [X0 + 0x33C]
	0x03B5F4A8 STR S2, [X0 + 0x340]
	0x03B5F4AC RET
	0x03B5F4B0 LDR X0, [X0 + 0x348]
	0x03B5F4B4 RET
	0x03B5F4B8 STR X1, [X0 + 0x348]
	0x03B5F4BC RET
	0x03B5F4C0 LDR W0, [X0 + 0x350]
	0x03B5F4C4 RET
	0x03B5F4C8 STR W1, [X0 + 0x350]
	0x03B5F4CC RET
	0x03B5F4D0 LDR V0, [X0 + 0x354]
	0x03B5F4D4 RET
	0x03B5F4D8 STR S0, [X0 + 0x354]
	0x03B5F4DC RET
	0x03B5F4E0 LDRB W8, [X0 + 0x358]
	0x03B5F4E4 CBZ W8, 0x3B5F4F0
	0x03B5F4E8 LDR X0, [X0 + 0x2A0]
	0x03B5F4EC RET
	0x03B5F4F0 MOV X1, X31
	0x03B5F4F4 B 0x3C32E90
	0x03B5F4F8 STP X30, X19, [X31 - 0x10]!
	0x03B5F4FC LDRB W8, [X0 + 0x359]
	0x03B5F500 CBZ W8, 0x3B5F518
	0x03B5F504 LDR X0, [X0 + 0x2A8]
	0x03B5F508 CBZ X0, 0x3B5F558
	0x03B5F50C MOV X1, X31
	0x03B5F510 LDP X30, X19, [X31], #0x10
	0x03B5F514 B 0x3C3F988
	0x03B5F518 ADRP X19, 0x879000
	0x03B5F51C LDRB W8, [X19 + 0x786]
	0x03B5F520 CBNZ W8, 0x3B5F538
	0x03B5F524 ADRP X0, 0x594000
	0x03B5F528 LDR X0, [X0 + 0x5A0]
	0x03B5F52C BL 0x1C16CF4
	0x03B5F530 MOVZ W8, 0x1
	0x03B5F534 STRB W8, [X19 + 0x786]
	0x03B5F538 ADRP X8, 0x594000
	0x03B5F53C LDR X8, [X8 + 0x5A0]
	0x03B5F540 LDR X8, [X8]
	0x03B5F544 LDR X8, [X8 + 0xB8]
	0x03B5F548 LDP S0, S1, [X8 + 0x18]
	0x03B5F54C LDR V2, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x884000
	009 Move W8, [X22+2429]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x5FD000
	018 Move X0, [X0+544]
	019 Call 0x1C17CF4
	020 Move X0, 0x5FD000
	021 Move X0, [X0+552]
	022 Call 0x1C17CF4
	023 Move X0, 0x5FD000
	024 Move X0, [X0+560]
	025 Call 0x1C17CF4
	026 Move X0, 0x5FD000
	027 Move X0, [X0+568]
	028 Call 0x1C17CF4
	029 Move X0, 0x5FD000
	030 Move X0, [X0+576]
	031 Call 0x1C17CF4
	032 Move X0, 0x5FD000
	033 Move X0, [X0+584]
	034 Call 0x1C17CF4
	035 Move X0, 0x5FC000
	036 Move X0, [X0+1080]
	037 Call 0x1C17CF4
	038 Move X0, 0x5FD000
	039 Move X0, [X0+592]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+2429], W8
	043 Move [X31+48], X31
	044 Move [X31+56], X31
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move [X19], X31
	048 Move [X19+8], X31
	049 Move X0, [X20+48]
	050 Compare X0, 0
	051 JumpIfEqual {192}
	052 Add X2, X31, 56
	053 Move X1, X21
	054 Move X3, X31
	055 Call XRInteractionManager.TryGetInteractableForCollider, X0, X1, X2
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {183}
	060 Move W8, [X20+452]
	061 Compare W8, 0
	062 JumpIfEqual {206}
	063 Move X8, [X31+56]
	064 Compare X8, 0
	065 JumpIfEqual {183}
	066 Move X9, 0x5FC000
	067 Move X9, [X9+1080]
	068 Move X10, [X8]
	069 Move X9, [X9]
	070 Move W12, [X10+304]
	071 Move W11, [X9+304]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X10, [X10+200]
	074 Add X10, X10, X11
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Compare X8, 0
	079 JumpIfEqual {192}
	080 Move X21, [X8+304]
	081 Compare X21, 0
	082 JumpIfEqual {192}
	083 Move X10, 0x5FD000
	084 Move X8, [X21]
	085 Move X22, [X20+552]
	086 Move X10, [X10+568]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Move X1, [X10]
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move W2, 5
	098 Move X0, X21
	099 Call 0x1C5D788
	100 Move W9, [X10]
	101 Add W9, W9, 5
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X2, [X0+8]
	106 Move X0, X21
	107 Move X1, X22
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X0, [X20+552]
	110 Compare X0, 0
	111 JumpIfEqual {192}
	112 Move X8, 0x5FD000
	113 Move X8, [X8+584]
	114 Move X1, [X8]
	115 Add X8, X31, 8
	116 Call List`1<Object>.GetEnumerator, X0
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 Move X8, [X31+24]
	119 Move X21, 0x5FD000
	120 Move X22, 0x5FD000
	121 Move X21, [X21+552]
	122 Move X22, [X22+592]
	123 Move [X31+2], V0
	124 Move [X31+48], X8
	125 Move X23, 0x5FD000
	126 Move X23, [X23+576]
	127 Move X1, [X21]
	128 Add X0, X31, 32
	129 Call Enumerator<Object>.MoveNext, X0
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {178}
	134 Move X20, [X31+48]
	135 Compare X20, 0
	136 JumpIfEqual {127}
	137 Move X8, [X20]
	138 Move X9, [X22]
	139 Move W11, [X8+304]
	140 Move W10, [X9+304]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X11, [X8+200]
	143 Add X10, X11, X10
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X23]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X20
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {127}
	170 Move X8, [X31+56]
	171 Add X0, X31, 32
	172 Move [X19], X8
	173 Move [X19+8], X20
	174 Move X8, 0x5FD000
	175 Move X8, [X8+544]
	176 Move X1, [X8]
	177 Call Enumerator<Object>.Dispose, X0
	178 Move X8, 0x5FD000
	179 Move X8, [X8+544]
	180 Add X0, X31, 32
	181 Move X1, [X8]
	182 Call Enumerator<Object>.Dispose, X0
	183 Move W0, W31
	184 Move X20, [X31+96]
	185 Move X19, [X31+104]
	186 Move X22, [X31+80]
	187 Move X21, [X31+88]
	188 Move X30, [X31+64]
	189 Move X23, [X31+72]
	190 Add X31, X31, 112
	191 Return X0
	192 Call 0x1C17F20
	193 Move X21, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X21
	196 Call 0x3EB2AD0
	197 Move X20, [X0]
	198 Call 0x3EB2AE0
	199 Move X8, 0x5FD000
	200 Move X8, [X8+544]
	201 Add X0, X31, 32
	202 Move X1, [X8]
	203 Call Enumerator<Object>.Dispose, X0
	204 Compare X20, 0
	205 JumpIfNotEqual {211}
	206 Move X8, [X31+56]
	207 Move [X19], X8
	208 Move [X19+8], X31
	209 Move W0, 1
	210 Move X20, X31
	211 Move X0, X20
	212 Call 0x1C17F18
	213 Move X21, X0
	214 Move X8, 0x5FD000
	215 Move X8, [X8+544]
	216 Move X1, [X8]
	217 Add X0, X31, 32
	218 Call Enumerator<Object>.Dispose, X0
	219 Compare X20, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X21
	222 Call 0x1D2D690
	223 Move X0, X20
	224 Call 0x1C17F18
	225 Call 0x1991590

Method: System.Void SetDebugObjectVisibility(System.Boolean isVisible)

Disassembly:
	0x03B5E190 LDR W8, [X0 + 0x18]
	0x03B5E194 CMP W8, 0x1
	0x03B5E198 B.LT 0x3B5E1F4
	0x03B5E19C ADRP X8, 0x5FC000
	0x03B5E1A0 LDR X8, [X8 + 0xEA0]
	0x03B5E1A4 MOV W1, W31
	0x03B5E1A8 LDR X2, [X8]
	0x03B5E1AC BL 0x301BCCC
	0x03B5E1B0 ADRP X9, 0x5FC000
	0x03B5E1B4 LDR X9, [X9 + 0xE28]
	0x03B5E1B8 LDR W10, [X19 + 0x1C]
	0x03B5E1BC LDR X8, [X19 + 0x10]
	0x03B5E1C0 LDR X9, [X9]
	0x03B5E1C4 ADD W10, W10, 0x1
	0x03B5E1C8 STR W10, [X19 + 0x1C]
	0x03B5E1CC CBZ X8, 0x3B5E21C
	0x03B5E1D0 LDRSW X10, [X19 + 0x18]
	0x03B5E1D4 LDR W11, [X8 + 0x18]
	0x03B5E1D8 MOV X1, X0
	0x03B5E1DC CMP W10, W11
	0x03B5E1E0 B.CS 0x3B5E200
	0x03B5E1E4 ADD W9, W10, 0x1
	0x03B5E1E8 ADD X8, X8, X10, 0x3, LSL
	0x03B5E1EC STR W9, [X19 + 0x18]
	0x03B5E1F0 STR X1, [X8 + 0x20]
	0x03B5E1F4 LDP X20, X19, [X31 + 0x10]
	0x03B5E1F8 LDP X30, X21, [X31], #0x20
	0x03B5E1FC RET
	0x03B5E200 LDR X8, [X9 + 0x20]
	0x03B5E204 MOV X0, X19
	0x03B5E208 LDP X20, X19, [X31 + 0x10]
	0x03B5E20C LDR X8, [X8 + 0xC0]
	0x03B5E210 LDR X2, [X8 + 0x70]
	0x03B5E214 LDP X30, X21, [X31], #0x20
	0x03B5E218 B 0x301BF90
	0x03B5E21C BL 0x1C16F20
	0x03B5E220 SUB X31, X31, 0x70
	0x03B5E224 STP X30, X23, [X31 + 0x40]
	0x03B5E228 STP X22, X21, [X31 + 0x50]
	0x03B5E22C STP X20, X19, [X31 + 0x60]
	0x03B5E230 ADRP X22, 0x884000
	0x03B5E234 LDRB W8, [X22 + 0x97D]
	0x03B5E238 MOV X19, X2
	0x03B5E23C MOV X21, X1
	0x03B5E240 MOV X20, X0
	0x03B5E244 TBNZ X8, 0x0, 0x3B5E2B0
	0x03B5E248 ADRP X0, 0x5FD000
	0x03B5E24C LDR X0, [X0 + 0x220]
	0x03B5E250 BL 0x1C16CF4
	0x03B5E254 ADRP X0, 0x5FD000
	0x03B5E258 LDR X0, [X0 + 0x228]
	0x03B5E25C BL 0x1C16CF4
	0x03B5E260 ADRP X0, 0x5FD000
	0x03B5E264 LDR X0, [X0 + 0x230]
	0x03B5E268 BL 0x1C16CF4
	0x03B5E26C ADRP X0, 0x5FD000
	0x03B5E270 LDR X0, [X0 + 0x238]
	0x03B5E274 BL 0x1C16CF4
	0x03B5E278 ADRP X0, 0x5FD000
	0x03B5E27C LDR X0, [X0 + 0x240]
	0x03B5E280 BL 0x1C16CF4
	0x03B5E284 ADRP X0, 0x5FD000
	0x03B5E288 LDR X0, [X0 + 0x248]
	0x03B5E28C BL 0x1C16CF4
	0x03B5E290 ADRP X0, 0x5FC000
	0x03B5E294 LDR X0, [X0 + 0x438]
	0x03B5E298 BL 0x1C16CF4
	0x03B5E29C ADRP X0, 0x5FD000
	0x03B5E2A0 LDR X0, [X0 + 0x250]
	0x03B5E2A4 BL 0x1C16CF4
	0x03B5E2A8 MOVZ W8, 0x1
	0x03B5E2AC STRB W8, [X22 + 0x97D]
	0x03B5E2B0 STP X31, X31, [X31 + 0x30]
	0x03B5E2B4 STP X31, X31, [X31 + 0x20]
	0x03B5E2B8 STP X31, X31, [X19]
	0x03B5E2BC LDR X0, [X20 + 0x30]
	0x03B5E2C0 CBZ X0, 0x3B5E4C4
	0x03B5E2C4 ADD X2, X31, 0x38
	0x03B5E2C8 MOV X1, X21
	0x03B5E2CC MOV X3, X31
	0x03B5E2D0 BL 0x3B72C1C
	0x03B5E2D4 TBZ X0, 0x0, 0x3B5E4AC
	0x03B5E2D8 LDRB W8, [X20 + 0x1C4]
	0x03B5E2DC CBZ W8, 0x3B5E500
	0x03B5E2E0 LDR X8, [X31 + 0x38]
	0x03B5E2E4 CBZ X8, 0x3B5E4AC
	0x03B5E2E8 ADRP X9, 0x5FC000
	0x03B5E2EC LDR X9, [X9 + 0x438]
	0x03B5E2F0 LDR X10, [X8]
	0x03B5E2F4 LDR X9, [X9]
	0x03B5E2F8 LDRB W12, [X10 + 0x130]
	0x03B5E2FC LDRB W11, [X9 + 0x130]
	0x03B5E300 CMP W12, W11
	0x03B5E304 B.CC 0x3B5E4AC
	0x03B5E308 LDR X10, [X10 + 0xC8]
	0x03B5E30C ADD X10, X10, X11, 0x3, LSL
	0x03B5E310 LDUR X10, [X10 - 0x8]
	0x03B5E314 CMP X10, X9
	0x03B5E318 CSEL X8, X8, X31, EQ
	0x03B5E31C B.NE 0x3B5E4AC
	0x03B5E320 CBZ X8, 0x3B5E4C4
	0x03B5E324 LDR X21, [X8 + 0x130]
	0x03B5E328 CBZ X21, 0x3B5E4C4
	0x03B5E32C ADRP X10, 0x5FD000
	0x03B5E330 LDR X8, [X21]
	0x03B5E334 LDR X22, [X20 + 0x228]
	0x03B5E338 LDR X10, [X10 + 0x238]
	0x03B5E33C LDRH W9, [X8 + 0x12E]
	0x03B5E340 LDR X1, [X10]
	0x03B5E344 CBZ X9, 0x3B5E368
	0x03B5E348 LDR X10, [X8 + 0xB0]
	0x03B5E34C ADD X10, X10, 0x8
	0x03B5E350 LDUR X11, [X10 - 0x8]
	0x03B5E354 CMP X11, X1
	0x03B5E358 B.EQ 0x3B5E378
	0x03B5E35C SUBS X9, X9, 0x1
	0x03B5E360 ADD X10, X10, 0x10
	0x03B5E364 B.NE 0x3B5E350
	0x03B5E368 MOVZ W2, 0x5
	0x03B5E36C MOV X0, X21
	0x03B5E370 BL 0x1C5C788
	0x03B5E374 B 0x3B5E388
	0x03B5E378 LDR W9, [X10]
	0x03B5E37C ADD W9, W9, 0x5
	0x03B5E380 ADD X8, X8, W9, 0x4, SXTW
	0x03B5E384 ADD X0, X8, 0x138
	0x03B5E388 LDP X8, X2, [X0]
	0x03B5E38C MOV X0, X21
	0x03B5E390 MOV X1, X22
	0x03B5E394 BLR X8
	0x03B5E398 LDR X0, [X20 + 0x228]
	0x03B5E39C CBZ X0, 0x3B5E4C4
	0x03B5E3A0 ADRP X8, 0x5FD000
	0x03B5E3A4 LDR X8, [X8 + 0x248]
	0x03B5E3A8 LDR X1, [X8]
	0x03B5E3AC ADD X8, X31, 0x8
	0x03B5E3B0 BL 0x301CB58
	0x03B5E3B4 LDUR V0, [X31 + 0x8]
	0x03B5E3B8 LDR X8, [X31 + 0x18]
	0x03B5E3BC ADRP X21, 0x5FD000
	0x03B5E3C0 ADRP X22, 0x5FD000
	0x03B5E3C4 LDR X21, [X21 + 0x228]
	0x03B5E3C8 LDR X22, [X22 + 0x250]
	0x03B5E3CC STR V0, [X31 + 0x2]
	0x03B5E3D0 STR X8, [X31 + 0x30]
	0x03B5E3D4 ADRP X23, 0x5FD000
	0x03B5E3D8 LDR X23, [X23 + 0x240]
	0x03B5E3DC LDR X1, [X21]
	0x03B5E3E0 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x885000
	009 Move W8, [X21+2430]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x59C000
	017 Move X0, [X0+4024]
	018 Call 0x1C17CF4
	019 Move X0, 0x596000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x5FE000
	023 Move X0, [X0+432]
	024 Call 0x1C17CF4
	025 Move X0, 0x5FE000
	026 Move X0, [X0+440]
	027 Call 0x1C17CF4
	028 Move X0, 0x5FE000
	029 Move X0, [X0+448]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2430], W8
	033 Move [X31+8], X31
	034 Move X23, 0x596000
	035 Move W8, [X19+454]
	036 Move X23, [X23+1432]
	037 Compare W8, 0
	038 JumpIfEqual {142}
	039 Move X0, [X23]
	040 Move X21, [X19+480]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {142}
	053 Move W0, W31
	054 Move X1, X31
	055 Call GameObject.CreatePrimitive, X0
	056 Move [X19+480], X0
	057 Move X9, 0x5FE000
	058 Move X8, [X19]
	059 Move X9, [X9+448]
	060 Move X21, X0
	061 Move X0, X19
	062 Move X22, [X9]
	063 Move X9, [X8+360]
	064 Move X1, [X8+368]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X1, X0
	067 Move X0, X22
	068 Move X2, X31
	069 Call String.Concat, X0, X1
	070 Compare X21, 0
	071 JumpIfEqual {180}
	072 Move X1, X0
	073 Move X0, X21
	074 Move X2, X31
	075 Call Object.set_name, X0, X1
	076 Move X0, [X19+480]
	077 Compare X0, 0
	078 JumpIfEqual {180}
	079 Move X1, X31
	080 Call GameObject.get_transform, X0
	081 Move X8, [X19]
	082 Move X21, X0
	083 Move X0, X19
	084 Move X1, X31
	085 Move X9, [X8+1208]
	086 Move X2, [X8+1216]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X21, 0
	089 JumpIfEqual {180}
	090 Move X1, X0
	091 Move X0, X21
	092 Move W2, W31
	093 Move X3, X31
	094 Call Transform.SetParent, X0, X1, X2
	095 Move X0, [X19+480]
	096 Compare X0, 0
	097 JumpIfEqual {180}
	098 Move X1, X31
	099 Call GameObject.get_transform, X0
	100 Compare X0, 0
	101 JumpIfEqual {180}
	102 Move V0, [X19+436]
	103 Move X1, X31
	104 Move V1, V0
	105 Move V2, V0
	106 Call Transform.set_localScale, X0, X1
	107 Move X0, [X19+480]
	108 Compare X0, 0
	109 JumpIfEqual {180}
	110 Move X8, 0x59C000
	111 Move X8, [X8+4024]
	112 Add X1, X31, 8
	113 Move X2, [X8]
	114 Call 0x21E7600, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {128}
	119 Move X0, [X23]
	120 Move X21, [X31+8]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Call Object.Destroy, X0
	128 Move X8, 0x5FE000
	129 Move X8, [X8+440]
	130 Move X21, [X19+480]
	131 Move X0, [X8]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X8, 0x5FE000
	137 Move X8, [X8+432]
	138 Move X0, X21
	139 Move X1, [X8]
	140 Call 0x22AF6A0, X0
	141 Move [X19+488], X0
	142 Move X0, [X23]
	143 Move W22, [X19+454]
	144 Move X21, [X19+480]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X21
	150 Move X1, X31
	151 Move X2, X31
	152 Call Object.op_Inequality, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {172}
	157 Move X0, [X19+480]
	158 Compare X0, 0
	159 JumpIfEqual {180}
	160 And W8, W20, W22
	161 Move X1, X31
	162 And W20, W8, 1
	163 Call GameObject.get_activeSelf, X0
	164 And W8, W0, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, [X19+480]
	167 Compare X0, 0
	168 JumpIfEqual {180}
	169 Move W1, W20
	170 Move X2, X31
	171 Call GameObject.SetActive, X0, X1
	172 Move X20, [X31+48]
	173 Move X19, [X31+56]
	174 Move X22, [X31+32]
	175 Move X21, [X31+40]
	176 Move X30, [X31+16]
	177 Move X23, [X31+24]
	178 Add X31, X31, 64
	179 Return 
	180 Call 0x1C17F20

Method: System.Void UpdateDebugVisuals()

Disassembly:
	0x03B5ECC4 ADRP X0, 0x5FD000
	0x03B5ECC8 LDR X0, [X0 + 0x1B8]
	0x03B5ECCC BL 0x1C16CF4
	0x03B5ECD0 MOVZ W8, 0x1
	0x03B5ECD4 STRB W8, [X23 + 0x984]
	0x03B5ECD8 LDR X0, [X24]
	0x03B5ECDC BL 0x1C16F10
	0x03B5ECE0 LDR X1, [X19]
	0x03B5ECE4 MOV X19, X0
	0x03B5ECE8 BL 0x301B7C4
	0x03B5ECEC LDR X8, [X20]
	0x03B5ECF0 LDR X8, [X8 + 0xB8]
	0x03B5ECF4 STR X19, [X8]
	0x03B5ECF8 LDR X0, [X22]
	0x03B5ECFC BL 0x1C16F10
	0x03B5ED00 LDR X1, [X21]
	0x03B5ED04 MOV X19, X0
	0x03B5ED08 BL 0x2AA4804
	0x03B5ED0C LDR X8, [X20]
	0x03B5ED10 LDP X22, X21, [X31 + 0x20]
	0x03B5ED14 LDP X24, X23, [X31 + 0x10]
	0x03B5ED18 LDR X8, [X8 + 0xB8]
	0x03B5ED1C STR X19, [X8 + 0x8]
	0x03B5ED20 LDP X20, X19, [X31 + 0x30]
	0x03B5ED24 LDR X30, [X31], #0x40
	0x03B5ED28 RET
	0x03B5ED2C LDR W0, [X0 + 0x290]
	0x03B5ED30 RET
	0x03B5ED34 STR W1, [X0 + 0x290]
	0x03B5ED38 RET
	0x03B5ED3C LDRB W0, [X0 + 0x294]
	0x03B5ED40 RET
	0x03B5ED44 AND W8, W1, 0x1
	0x03B5ED48 STRB W8, [X0 + 0x294]
	0x03B5ED4C RET
	0x03B5ED50 LDR V0, [X0 + 0x298]
	0x03B5ED54 RET
	0x03B5ED58 STR S0, [X0 + 0x298]
	0x03B5ED5C RET
	0x03B5ED60 LDR X0, [X0 + 0x2A0]
	0x03B5ED64 RET
	0x03B5ED68 STR X30, [X31 - 0x30]!
	0x03B5ED6C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x885000
	005 Move W8, [X20+2431]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5FE000
	012 Move X0, [X0+488]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2431], W8
	016 Move X8, [X19+512]
	017 Move X0, X19
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Call XRPokeInteractor.SetDebugObjectVisibility, X0, X1
	021 Move W8, [X19+454]
	022 Compare W8, 0
	023 JumpIfEqual {50}
	024 Move X0, [X19+488]
	025 Compare X0, 0
	026 JumpIfEqual {54}
	027 Move X1, X31
	028 Call Renderer.get_material, X0
	029 Move X8, [X19+544]
	030 Compare X8, 0
	031 JumpIfEqual {54}
	032 Compare X0, 0
	033 JumpIfEqual {54}
	034 Move W8, [X8+24]
	035 Move X9, -50802688
	036 Move V2, [X9+92]
	037 Move X9, -50802688
	038 Move V3, [X9+188]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move S1, W31
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 NotImplemented "Instruction FCSEL not yet implemented."
	045 Move S2, W31
	046 Move X1, X31
	047 Move X30, [X31+32]
	048 Call Material.set_color, X0, X1
	049 Return 
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return 
	054 Call 0x1C17F20

Method: T GetOrAddComponent(UnityEngine.GameObject go)

Disassembly:
	0x022AF6A0 BL 0x338C698
	0x022AF6A4 MOV X1, X0
	0x022AF6A8 MOV X0, X21
	0x022AF6AC MOV X2, X31
	0x022AF6B0 BL 0x3395194
	0x022AF6B4 TBZ X0, 0x0, 0x22AF720
	0x022AF6B8 MOV X0, X20
	0x022AF6BC MOV X1, X31
	0x022AF6C0 BL 0x3BEE230
	0x022AF6C4 LDR X8, [X19 + 0x38]
	0x022AF6C8 MOV X21, X0
	0x022AF6CC LDR X1, [X8 + 0x8]
	0x022AF6D0 LDRB W8, [X1 + 0x135]
	0x022AF6D4 TBNZ X8, 0x0, 0x22AF6E4
	0x022AF6D8 MOV X0, X1
	0x022AF6DC BL 0x1C5C684
	0x022AF6E0 MOV X1, X0
	0x022AF6E4 CBZ X21, 0x22AF728
	0x022AF6E8 LDR X8, [X21]
	0x022AF6EC LDR X9, [X1 + 0x40]
	0x022AF6F0 MOV X0, X21
	0x022AF6F4 LDR X8, [X8 + 0x40]
	0x022AF6F8 CMP X8, X9
	0x022AF6FC B.NE 0x22AF73C
	0x022AF700 BL 0x1C16E08
	0x022AF704 LDRH W0, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move [X31+8], X31
	012 Compare X19, 0
	013 JumpIfEqual {32}
	014 Move X8, [X20+56]
	015 Add X1, X31, 8
	016 Move X0, X19
	017 Move X2, [X8]
	018 Call 0x21E7600, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {24}
	023 Move X0, [X31+8]
	024 Move X8, [X20+56]
	025 Move X0, X19
	026 Move X1, [X8+16]
	027 Call 0x21E61FC, X0
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void UpdateUIModel(ref UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel model)

Disassembly:
	0x03B5F558 BL 0x1C16F20
	0x03B5F55C STP X30, X19, [X31 - 0x10]!
	0x03B5F560 LDRB W8, [X0 + 0x359]
	0x03B5F564 CBZ W8, 0x3B5F57C
	0x03B5F568 LDR X0, [X0 + 0x2A8]
	0x03B5F56C CBZ X0, 0x3B5F5BC
	0x03B5F570 MOV X1, X31
	0x03B5F574 LDP X30, X19, [X31], #0x10
	0x03B5F578 B 0x3C3F58C
	0x03B5F57C ADRP X19, 0x879000
	0x03B5F580 LDRB W8, [X19 + 0x783]
	0x03B5F584 CBNZ W8, 0x3B5F59C
	0x03B5F588 ADRP X0, 0x594000
	0x03B5F58C LDR X0, [X0 + 0x5A0]
	0x03B5F590 BL 0x1C16CF4
	0x03B5F594 MOVZ W8, 0x1
	0x03B5F598 STRB W8, [X19 + 0x783]
	0x03B5F59C ADRP X8, 0x594000
	0x03B5F5A0 LDR X8, [X8 + 0x5A0]
	0x03B5F5A4 LDR X8, [X8]
	0x03B5F5A8 LDR X8, [X8 + 0xB8]
	0x03B5F5AC LDP S0, S1, [X8]
	0x03B5F5B0 LDR V2, [X8 + 0x8]
	0x03B5F5B4 LDP X30, X19, [X31], #0x10
	0x03B5F5B8 RET
	0x03B5F5BC BL 0x1C16F20
	0x03B5F5C0 LDR W8, [X0 + 0x3AC]
	0x03B5F5C4 LDR W0, [X0 + 0x3B0]
	0x03B5F5C8 CMP W8, 0x1
	0x03B5F5CC B.LT 0x3B5F5E0
	0x03B5F5D0 CMP W0, 0x1
	0x03B5F5D4 B.LT 0x3B5F5E4
	0x03B5F5D8 CMP W8, W0
	0x03B5F5DC CSEL W0, W8, W0, LT
	0x03B5F5E0 RET
	0x03B5F5E4 MOV W0, W8
	0x03B5F5E8 RET
	0x03B5F5EC STP X30, X21, [X31 - 0x20]!
	0x03B5F5F0 STP X20, X19, [X31 + 0x10]
	0x03B5F5F4 ADRP X21, 0x883000
	0x03B5F5F8 ADRP X20, 0x594000
	0x03B5F5FC LDRB W8, [X21 + 0x988]
	0x03B5F600 LDR X20, [X20 + 0x598]
	0x03B5F604 MOV X19, X0
	0x03B5F608 TBNZ X8, 0x0, 0x3B5F62C
	0x03B5F60C ADRP X0, 0x594000
	0x03B5F610 LDR X0, [X0 + 0x598]
	0x03B5F614 BL 0x1C16CF4
	0x03B5F618 ADRP X0, 0x5FB000
	0x03B5F61C LDR X0, [X0 + 0x7C0]
	0x03B5F620 BL 0x1C16CF4
	0x03B5F624 MOVZ W8, 0x1
	0x03B5F628 STRB W8, [X21 + 0x988]
	0x03B5F62C LDR X0, [X20]
	0x03B5F630 ADRP X21, 0x5FB000
	0x03B5F634 LDR X20, [X19 + 0x2A0]
	0x03B5F638 LDR W8, [X0 + 0xE0]
	0x03B5F63C LDR X21, [X21 + 0x7C0]
	0x03B5F640 CBNZ W8, 0x3B5F648
	0x03B5F644 BL 0x1C16DFC
	0x03B5F648 MOV X0, X20
	0x03B5F64C MOV X1, X31
	0x03B5F650 MOV X2, X31
	0x03B5F654 BL 0x3C354F8
	0x03B5F658 LDR X8, [X19 + 0x2A8]
	0x03B5F65C AND W9, W0, 0x1
	0x03B5F660 MOV X1, X31
	0x03B5F664 MOV X2, X31
	0x03B5F668 MOV X0, X8
	0x03B5F66C STRB W9, [X19 + 0x358]
	0x03B5F670 BL 0x3C354F8
	0x03B5F674 AND W8, W0, 0x1
	0x03B5F678 STRB W8, [X19 + 0x359]
	0x03B5F67C LDR X0, [X21]
	0x03B5F680 LDR W20, [X19 + 0x2D0]
	0x03B5F684 LDR W8, [X0 + 0xE0]
	0x03B5F688 CBNZ W8, 0x3B5F690
	0x03B5F68C BL 0x1C16DFC
	0x03B5F690 LDR X0, [X19 + 0x3D0]
	0x03B5F694 CMP W20, 0x2
	0x03B5F698 MOVZ W8, 0x2
	0x03B5F69C CSEL W8, W20, W8, GT
	0x03B5F6A0 STR W8, [X19 + 0x2D0]
	0x03B5F6A4 CBZ X0, 0x3B5F6BC
	0x03B5F6A8 LDRB W1, [X19 + 0x2FC]
	0x03B5F6AC LDP X20, X19, [X31 + 0x10]
	0x03B5F6B0 MOV X2, X31
	0x03B5F6B4 LDP X30, X21, [X31], #0x20
	0x03B5F6B8 B 0x3B99A58
	0x03B5F6BC LDP X20, X19, [X31 + 0x10]
	0x03B5F6C0 LDP X30, X21, [X31], #0x20
	0x03B5F6C4 RET
	0x03B5F6C8 STR X30, [X31 - 0x20]!
	0x03B5F6CC STP X20, X19, [X31 + 0x10]
	0x03B5F6D0 ADRP X20, 0x883000
	0x03B5F6D4 LDRB W8, [X20 + 0x989]
	0x03B5F6D8 MOV X19, X0
	0x03B5F6DC TBNZ X8, 0x0, 0x3B5F730
	0x03B5F6E0 ADRP X0, 0x5FC000
	0x03B5F6E4 LDR X0, [X0 + 0x2A8]
	0x03B5F6E8 BL 0x1C16CF4
	0x03B5F6EC ADRP X0, 0x594000
	0x03B5F6F0 LDR X0, [X0 + 0xA28]
	0x03B5F6F4 BL 0x1C16CF4
	0x03B5F6F8 ADRP X0, 0x594000
	0x03B5F6FC LDR X0, [X0 + 0x598]
	0x03B5F700 BL 0x1C16CF4
	0x03B5F704 ADRP X0, 0x5FC000
	0x03B5F708 LDR X0, [X0 + 0x2B0]
	0x03B5F70C BL 0x1C16CF4
	0x03B5F710 ADRP X0, 0x5FC000
	0x03B5F714 LDR X0, [X0 + 0x2B8]
	0x03B5F718 BL 0x1C16CF4
	0x03B5F71C ADRP X0, 0x5FC000
	0x03B5F720 LDR X0, [X0 + 0x2C0]
	0x03B5F724 BL 0x1C16CF4
	0x03B5F728 MOVZ W8, 0x1
	0x03B5F72C STRB W8, [X20 + 0x989]
	0x03B5F730 ADRP X8, 0x594000
	0x03B5F734 LDR X9, [X19 + 0x260]
	0x03B5F738 LDR X8, [X8 + 0x598]
	0x03B5F73C CBZ X9, 0x3B5F760
	0x03B5F740 ADRP X10, 0x5FC000
	0x03B5F744 LDR X10, [X10 + 0x2A8]
	0x03B5F748 LDR X11, [X9]
	0x03B5F74C LDR X10, [X10]
	0x03B5F750 LDRB W13, [X11 + 0x130]
	0x03B5F754 LDRB W12, [X10 + 0x130]
	0x03B5F758 CMP W13, W12
	0x03B5F75C B.CS 0x3B5F768
	0x03B5F760 MOV X20, X31
	0x03B5F764 B 0x3B5F77C
	0x03B5F768 LDR X11, [X11 + 0xC8]
	0x03B5F76C ADD X11, X11, X12, 0x3, LSL
	0x03B5F770 LDUR X11, [X11 - 0x8]
	0x03B5F774 CMP X11, X10
	0x03B5F778 CSEL X20, X9, X31, EQ
	0x03B5F77C STR X20, [X19 + 0x468]
	0x03B5F780 LDR X0, [X8]
	0x03B5F784 LDR W8, [X0 + 0xE0]
	0x03B5F788 CBNZ W8, 0x3B5F790
	0x03B5F78C BL 0x1C16DFC
	0x03B5F790 MOV X0, X20
	0x03B5F794 MOV X1, X31
	0x03B5F798 MOV X2, X31
	0x03B5F79C BL 0x3C354F8
	0x03B5F7A0 LDR X8, [X19 + 0x260]
	0x03B5F7A4 AND W9, W0, 0x1
	0x03B5F7A8 STRB W9, [X19 + 0x480]
	0x03B5F7AC CBZ X8, 0x3B5F7D0
	0x03B5F7B0 ADRP X9, 0x5FC000
	0x03B5F7B4 LDR X9, [X9 + 0x2B0]
	0x03B5F7B8 LDR X10, [X8]
	0x03B5F7BC LDR X9, [X9]
	0x03B5F7C0 LDRB W12, [X10 + 0x130]
	0x03B5F7C4 LDRB W11, [X9 + 0x130]
	0x03B5F7C8 CMP W12, W11
	0x03B5F7CC B.CS 0x3B5F7D8
	0x03B5F7D0 MOV X0, X31
	0x03B5F7D4 B 0x3B5F7EC
	0x03B5F7D8 LDR X10, [X10 + 0xC8]
	0x03B5F7DC ADD X10, X10, X11, 0x3, LSL
	0x03B5F7E0 LDUR X10, [X10 - 0x8]
	0x03B5F7E4 CMP X10, X9
	0x03B5F7E8 CSEL X0, X8, X31, EQ
	0x03B5F7EC MOV X1, X31
	0x03B5F7F0 MOV X2, X31
	0x03B5F7F4 STR X0, [X19 + 0x470]
	0x03B5F7F8 BL 0x3C354F8
	0x03B5F7FC LDR X8, [X19 + 0x260]
	0x03B5F800 AND W9, W0, 0x1
	0x03B5F804 STRB W9, [X19 + 0x481]
	0x03B5F808 CBZ X8, 0x3B5F82C
	0x03B5F80C ADRP X9, 0x5FC000
	0x03B5F810 LDR X9, [X9 + 0x2B8]
	0x03B5F814 LDR X10, [X8]
	0x03B5F818 LDR X9, [X9]
	0x03B5F81C LDRB W12, [X10 + 0x130]
	0x03B5F820 LDRB W11, [X9 + 0x130]
	0x03B5F824 CMP W12, W11
	0x03B5F828 B.CS 0x3B5F834
	0x03B5F82C MOV X0, X31
	0x03B5F830 B 0x3B5F848
	0x03B5F834 LDR X10, [X10 + 0xC8]
	0x03B5F838 ADD X10, X10, X11, 0x3, LSL
	0x03B5F83C LDUR X10, [X10 - 0x8]
	0x03B5F840 CMP X10, X9
	0x03B5F844 CSEL X0, X8, X31, EQ
	0x03B5F848 MOV X1, X31
	0x03B5F84C MOV X2, X31
	0x03B5F850 STR X0, [X19 + 0x478]
	0x03B5F854 BL 0x3C354F8
	0x03B5F858 AND W8, W0, 0x1
	0x03B5F85C STRB W8, [X19 + 0x482]
	0x03B5F860 TBZ X0, 0x0, 0x3B5F874
	0x03B5F864 LDRB W8, [X19 + 0x2FE]
	0x03B5F868 CBZ W8, 0x3B5F874
	0x03B5F86C LDR W8, [X19 + 0x310]
	0x03B5F870 CBZ W8, 0x3B5F880
	0x03B5F874 LDP X20, X19, [X31 + 0x10]
	0x03B5F878 LDR X30, [X31], #0x20
	0x03B5F87C RET
	0x03B5F880 ADRP X8, 0x594000
	0x03B5F884 LDR X8, [X8 + 0xA28]
	0x03B5F888 LDR X0, [X8]
	0x03B5F88C LDR W8, [X0 + 0xE0]
	0x03B5F890 CBNZ W8, 0x3B5F898
	0x03B5F894 BL 0x1C16DFC
	0x03B5F898 ADRP X8, 0x5FC000
	0x03B5F89C LDR X8, [X8 + 0x2C0]
	0x03B5F8A0 MOV X1, X19
	0x03B5F8A4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X21, 0x884000
	016 Move W8, [X21+2432]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x599000
	024 Move X0, [X0+952]
	025 Call 0x1C17CF4
	026 Move X0, 0x599000
	027 Move X0, [X0+896]
	028 Call 0x1C17CF4
	029 Move X0, 0x5FD000
	030 Move X0, [X0+456]
	031 Call 0x1C17CF4
	032 Move X0, 0x5FD000
	033 Move X0, [X0+600]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2432], W8
	037 Move X22, 0x5FD000
	038 Move X22, [X22+600]
	039 Move X0, X20
	040 Move X1, X31
	041 Call Behaviour.get_isActiveAndEnabled, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {52}
	046 Move X0, X20
	047 Call XRInteractorExtensions.IsBlockedByInteractionWithinGroup, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {76}
	052 Move X0, [X22]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move X20, [X31+112]
	059 Move X19, [X31+120]
	060 Move X22, [X31+96]
	061 Move X21, [X31+104]
	062 Move X30, [X31+80]
	063 Move D9, [X31+64]
	064 Move D8, [X31+72]
	065 Move D11, [X31+48]
	066 Move D10, [X31+56]
	067 Move D13, [X31+32]
	068 Move D12, [X31+40]
	069 Move D15, [X31+16]
	070 Move D14, [X31+24]
	071 Move W1, W31
	072 Move X2, X31
	073 Add X31, X31, 128
	074 Call TrackedDeviceModel.Reset, X0, X1
	075 Return 
	076 Move X8, [X20]
	077 Move X0, X20
	078 Move X1, X31
	079 Move X9, [X8+1208]
	080 Move X2, [X8+1216]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {259}
	084 Move X1, X31
	085 Move X21, X0
	086 Call Transform.get_position, X0
	087 Move X0, X21
	088 Move X1, X31
	089 Move V8, V0
	090 Move V9, V1
	091 Move V10, V2
	092 Call Transform.get_rotation, X0
	093 Move X21, 0x87A000
	094 Move W8, [X21+2591]
	095 Move V14, V0
	096 Move V15, V1
	097 Move V11, V2
	098 Move V12, V3
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x595000
	102 Move X0, [X0+1440]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X21+2591], W8
	106 Move X8, 0x595000
	107 Move X8, [X8+1440]
	108 Move V0, V14
	109 Move V1, V15
	110 Move V2, V11
	111 Move X8, [X8]
	112 Move V3, V12
	113 Move X0, X31
	114 Move X8, [X8+184]
	115 Move S4, [X8+72]
	116 Move S5, [X8+76]
	117 Move V6, [X8+80]
	118 Call Quaternion.op_Multiply, X0, X1
	119 Move X0, [X22]
	120 Move V13, [X20+424]
	121 Move [X31+88], S0
	122 Move [X31+96], S2
	123 Move [X31+12], S1
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X19
	129 Move V0, V8
	130 Move V1, V9
	131 Move V2, V10
	132 Move X1, X31
	133 Call TrackedDeviceModel.set_position, X0, X1
	134 Move X0, X19
	135 Move V0, V14
	136 Move V1, V15
	137 Move V2, V11
	138 Move V3, V12
	139 Move X1, X31
	140 Call TrackedDeviceModel.set_orientation, X0, X1
	141 Move X8, [X20+584]
	142 Move [X19+192], X8
	143 Move X8, 0x5FD000
	144 Move X8, [X8+456]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X20
	151 Move X1, X31
	152 Call TrackedDeviceGraphicRaycaster.HasPokeSelect, X0
	153 And W1, W0, 1
	154 Move X0, X19
	155 Move X2, X31
	156 Call TrackedDeviceModel.set_select, X0, X1
	157 Move W1, [X20+444]
	158 Move X0, X19
	159 Move X2, X31
	160 Call TrackedDeviceModel.set_raycastLayerMask, X0, X1
	161 Move V0, [X20+424]
	162 Move X0, X19
	163 Move X1, X31
	164 Call TrackedDeviceModel.set_pokeDepth, X0, V0
	165 Move W1, 1
	166 Move X0, X19
	167 Move X2, X31
	168 Call TrackedDeviceModel.set_interactionType, X0, X1
	169 Move X19, [X19+216]
	170 Compare X19, 0
	171 JumpIfEqual {259}
	172 Move [X19+24], W31
	173 Move X20, 0x599000
	174 Move W10, [X19+28]
	175 Move X20, [X20+952]
	176 Move X8, [X19+16]
	177 Add W10, W10, 2
	178 Move X9, [X20]
	179 Move [X19+28], W10
	180 Compare X8, 0
	181 JumpIfEqual {259}
	182 Move W10, [X8+24]
	183 Compare W10, 0
	184 JumpIfEqual {190}
	185 Move W9, 1
	186 Move [X19+24], W9
	187 Move [X8+32], S8
	188 Move [X8+40], S9
	189 Move [X8+40], S10
	190 Move X8, [X9+32]
	191 Move X0, X19
	192 Move V0, V8
	193 Move V1, V9
	194 Move X8, [X8+192]
	195 Move V2, V10
	196 Move X1, [X8+112]
	197 Call List`1<Vector3>.AddWithResize, X0, X1
	198 Move W10, [X19+28]
	199 Move X8, [X19+16]
	200 Move X9, [X20]
	201 Add W10, W10, 1
	202 Move [X19+28], W10
	203 Compare X8, 0
	204 JumpIfEqual {259}
	205 Move S0, [X31+88]
	206 Move S2, [X31+92]
	207 Move V1, [X31+12]
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Move W11, [X8+24]
	210 Multiply S0, S0, S13
	211 Multiply S1, S1, S13
	212 Multiply S2, S2, S13
	213 Add S0, S8, S0
	214 Add S1, S9, S1
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Add S2, S10, S2
	217 Add W9, W10, 1
	218 Move [X19+24], W9
	219 Move X20, [X31+112]
	220 Move X19, [X31+120]
	221 Move X22, [X31+96]
	222 Move X21, [X31+104]
	223 Move X30, [X31+80]
	224 Move D9, [X31+64]
	225 Move D8, [X31+72]
	226 Move D11, [X31+48]
	227 Move D10, [X31+56]
	228 Move D13, [X31+32]
	229 Move D12, [X31+40]
	230 Move D15, [X31+16]
	231 Move D14, [X31+24]
	232 Move W11, 12
	233 NotImplemented "Instruction MADD not yet implemented."
	234 Move [X8+32], S0
	235 Move [X8+40], S1
	236 Move [X8+40], S2
	237 Add X31, X31, 128
	238 Return 
	239 Move X8, [X9+32]
	240 Move X0, X19
	241 Move X20, [X31+112]
	242 Move X19, [X31+120]
	243 Move X22, [X31+96]
	244 Move X21, [X31+104]
	245 Move X8, [X8+192]
	246 Move X30, [X31+80]
	247 Move D9, [X31+64]
	248 Move D8, [X31+72]
	249 Move D11, [X31+48]
	250 Move D10, [X31+56]
	251 Move X1, [X8+112]
	252 Move D13, [X31+32]
	253 Move D12, [X31+40]
	254 Move D15, [X31+16]
	255 Move D14, [X31+24]
	256 Add X31, X31, 128
	257 Call List`1<Vector3>.AddWithResize, X0, X1
	258 Return 
	259 Call 0x1C17F20

Method: UnityEngine.Vector3 GetPokePosition()

Disassembly:
	0x03B5F8A8 MOV X2, X31
	0x03B5F8AC LDR X0, [X8]
	0x03B5F8B0 LDR X30, [X31], #0x20
	0x03B5F8B4 B 0x3C06B0C
	0x03B5F8B8 STR X30, [X31 - 0x30]!
	0x03B5F8BC STP X22, X21, [X31 + 0x10]
	0x03B5F8C0 STP X20, X19, [X31 + 0x20]
	0x03B5F8C4 ADRP X20, 0x883000
	0x03B5F8C8 LDRB W8, [X20 + 0x9A0]
	0x03B5F8CC MOV X19, X0
	0x03B5F8D0 TBNZ X8, 0x0, 0x3B5F900

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X1, X31
	004 Move X9, [X8+1208]
	005 Move X2, [X8+1216]
	006 NotImplemented "Instruction BLR not yet implemented."
	007 Compare X0, 0
	008 JumpIfEqual {13}
	009 Move X1, X31
	010 Move X30, [X31+16]
	011 Call Transform.get_position, X0
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean TryGetUIModel(out UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel model)

Disassembly:
	0x03B5F8D4 ADRP X0, 0x5FC000
	0x03B5F8D8 LDR X0, [X0 + 0x2C8]
	0x03B5F8DC BL 0x1C16CF4
	0x03B5F8E0 ADRP X0, 0x5FC000
	0x03B5F8E4 LDR X0, [X0 + 0x2D0]
	0x03B5F8E8 BL 0x1C16CF4
	0x03B5F8EC ADRP X0, 0x5FB000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+568]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call RegisteredUIInteractorCache.TryGetUIModel, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void UnityEngine.XR.Interaction.Toolkit.UI.IUIHoverInteractor.OnUIHoverEntered(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEventArgs args)

Disassembly:
	0x03B5F8F0 LDR X0, [X0 + 0x7C0]
	0x03B5F8F4 BL 0x1C16CF4
	0x03B5F8F8 MOVZ W8, 0x1
	0x03B5F8FC STRB W8, [X20 + 0x9A0]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1960]
	003 Move X2, [X8+1968]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.UI.IUIHoverInteractor.OnUIHoverExited(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEventArgs args)

Disassembly:
	0x03B5F900 ADRP X22, 0x5FB000
	0x03B5F904 LDR X8, [X19 + 0x3A0]
	0x03B5F908 LDR X22, [X22 + 0x7C0]
	0x03B5F90C CBZ X8, 0x3B5F930

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1976]
	003 Move X2, [X8+1984]
	004 CallNoReturn X3

Method: System.Void OnUIHoverEntered(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEventArgs args)

Disassembly:
	0x03B5F910 LDR X0, [X22]
	0x03B5F914 LDR W8, [X0 + 0xE0]
	0x03B5F918 CBNZ W8, 0x3B5F924
	0x03B5F91C BL 0x1C16DFC
	0x03B5F920 LDR X0, [X22]
	0x03B5F924 LDR X8, [X0 + 0xB8]
	0x03B5F928 LDR X8, [X8 + 0x18]
	0x03B5F92C CBNZ X8, 0x3B5F9DC
	0x03B5F930 LDR W8, [X19 + 0x290]
	0x03B5F934 CBZ W8, 0x3B5F940
	0x03B5F938 LDR W20, [X19 + 0x2D0]
	0x03B5F93C B 0x3B5F944
	0x03B5F940 MOVZ W20, 0x2
	0x03B5F944 LDR X8, [X19 + 0x3A0]
	0x03B5F948 CBNZ X8, 0x3B5F978
	0x03B5F94C ADRP X8, 0x5FC000
	0x03B5F950 LDR X8, [X8 + 0x2D0]
	0x03B5F954 LDR X0, [X8]
	0x03B5F958 BL 0x1C16F10
	0x03B5F95C ADRP X8, 0x5FC000
	0x03B5F960 LDR X8, [X8 + 0x2C8]
	0x03B5F964 MOV W1, W20
	0x03B5F968 MOV X21, X0
	0x03B5F96C LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x884000
	006 Move W8, [X21+2433]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5FD000
	014 Move X0, [X0+608]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2433], W8
	018 Move X0, [X20+456]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x5FD000
	022 Move X8, [X8+608]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void OnUIHoverExited(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEventArgs args)

Disassembly:
	0x03B5F970 BL 0x317B080
	0x03B5F974 STR X21, [X19 + 0x3A0]
	0x03B5F978 LDR X0, [X22]
	0x03B5F97C LDR W8, [X0 + 0xE0]
	0x03B5F980 CBNZ W8, 0x3B5F98C
	0x03B5F984 BL 0x1C16DFC
	0x03B5F988 LDR X0, [X22]
	0x03B5F98C LDR X8, [X0 + 0xB8]
	0x03B5F990 LDR X8, [X8 + 0x18]
	0x03B5F994 CBNZ X8, 0x3B5F9DC
	0x03B5F998 ADRP X8, 0x5FC000
	0x03B5F99C LDR X8, [X8 + 0x2D0]
	0x03B5F9A0 LDR X0, [X8]
	0x03B5F9A4 BL 0x1C16F10
	0x03B5F9A8 ADRP X8, 0x5FC000
	0x03B5F9AC LDR X8, [X8 + 0x2C8]
	0x03B5F9B0 MOV W1, W20
	0x03B5F9B4 MOV X19, X0
	0x03B5F9B8 LDR X2, [X8]
	0x03B5F9BC BL 0x317B080
	0x03B5F9C0 LDR X0, [X22]
	0x03B5F9C4 LDR W8, [X0 + 0xE0]
	0x03B5F9C8 CBNZ W8, 0x3B5F9D4
	0x03B5F9CC BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x884000
	006 Move W8, [X21+2434]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5FD000
	014 Move X0, [X0+608]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2434], W8
	018 Move X0, [X20+464]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x5FD000
	022 Move X8, [X8+608]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B5F9D0 LDR X0, [X22]
	0x03B5F9D4 LDR X8, [X0 + 0xB8]
	0x03B5F9D8 STR X19, [X8 + 0x18]
	0x03B5F9DC LDP X20, X19, [X31 + 0x20]
	0x03B5F9E0 LDP X22, X21, [X31 + 0x10]
	0x03B5F9E4 LDR X30, [X31], #0x30
	0x03B5F9E8 RET
	0x03B5F9EC SUB X31, X31, 0x30
	0x03B5F9F0 STP X30, X21, [X31 + 0x10]
	0x03B5F9F4 STP X20, X19, [X31 + 0x20]
	0x03B5F9F8 ADRP X20, 0x883000
	0x03B5F9FC ADRP X21, 0x594000
	0x03B5FA00 LDRB W8, [X20 + 0x98D]
	0x03B5FA04 LDR X21, [X21 + 0x598]
	0x03B5FA08 MOV X19, X0
	0x03B5FA0C TBNZ X8, 0x0, 0x3B5FA54
	0x03B5FA10 ADRP X0, 0x5FB000
	0x03B5FA14 LDR X0, [X0 + 0x978]
	0x03B5FA18 BL 0x1C16CF4
	0x03B5FA1C ADRP X0, 0x594000
	0x03B5FA20 LDR X0, [X0 + 0xA28]
	0x03B5FA24 BL 0x1C16CF4
	0x03B5FA28 ADRP X0, 0x594000
	0x03B5FA2C LDR X0, [X0 + 0x598]
	0x03B5FA30 BL 0x1C16CF4
	0x03B5FA34 ADRP X0, 0x5FC000
	0x03B5FA38 LDR X0, [X0 + 0x2D8]
	0x03B5FA3C BL 0x1C16CF4
	0x03B5FA40 ADRP X0, 0x5FC000
	0x03B5FA44 LDR X0, [X0 + 0x2E0]
	0x03B5FA48 BL 0x1C16CF4
	0x03B5FA4C MOVZ W8, 0x1
	0x03B5FA50 STRB W8, [X20 + 0x98D]
	0x03B5FA54 LDR X0, [X21]
	0x03B5FA58 STR X31, [X31 + 0x8]
	0x03B5FA5C LDR X20, [X19 + 0x2A8]
	0x03B5FA60 LDR W8, [X0 + 0xE0]
	0x03B5FA64 CBNZ W8, 0x3B5FA6C
	0x03B5FA68 BL 0x1C16DFC
	0x03B5FA6C MOV X0, X20
	0x03B5FA70 MOV X1, X31
	0x03B5FA74 MOV X2, X31
	0x03B5FA78 BL 0x3C354F8
	0x03B5FA7C AND W8, W0, 0x1
	0x03B5FA80 STRB W8, [X19 + 0x359]
	0x03B5FA84 TBNZ X0, 0x0, 0x3B5FB44
	0x03B5FA88 ADRP X8, 0x5FB000
	0x03B5FA8C LDR X8, [X8 + 0x978]
	0x03B5FA90 ADD X0, X31, 0x8
	0x03B5FA94 LDR X1, [X8]
	0x03B5FA98 BL 0x295FA30
	0x03B5FA9C TBZ X0, 0x0, 0x3B5FAF0
	0x03B5FAA0 LDR X8, [X31 + 0x8]
	0x03B5FAA4 CBZ X8, 0x3B5FB54
	0x03B5FAA8 LDR X0, [X21]
	0x03B5FAAC LDR X20, [X8 + 0x38]
	0x03B5FAB0 LDR W9, [X0 + 0xE0]
	0x03B5FAB4 CBNZ W9, 0x3B5FABC
	0x03B5FAB8 BL 0x1C16DFC
	0x03B5FABC MOV X0, X20
	0x03B5FAC0 MOV X1, X31
	0x03B5FAC4 MOV X2, X31
	0x03B5FAC8 BL 0x3C354F8
	0x03B5FACC TBZ X0, 0x0, 0x3B5FB14
	0x03B5FAD0 CBZ X20, 0x3B5FB54
	0x03B5FAD4 MOV X0, X20
	0x03B5FAD8 MOV X1, X31
	0x03B5FADC BL 0x3C356F8
	0x03B5FAE0 MOVZ W8, 0x1
	0x03B5FAE4 STR X0, [X19 + 0x2A8]
	0x03B5FAE8 STRB W8, [X19 + 0x359]
	0x03B5FAEC B 0x3B5FB44
	0x03B5FAF0 ADRP X8, 0x594000
	0x03B5FAF4 LDR X8, [X8 + 0xA28]
	0x03B5FAF8 LDR X0, [X8]
	0x03B5FAFC LDR W8, [X0 + 0xE0]
	0x03B5FB00 CBNZ W8, 0x3B5FB08
	0x03B5FB04 BL 0x1C16DFC
	0x03B5FB08 ADRP X8, 0x5FC000
	0x03B5FB0C LDR X8, [X8 + 0x2D8]
	0x03B5FB10 B 0x3B5FB34
	0x03B5FB14 ADRP X8, 0x594000
	0x03B5FB18 LDR X8, [X8 + 0xA28]
	0x03B5FB1C LDR X0, [X8]
	0x03B5FB20 LDR W8, [X0 + 0xE0]
	0x03B5FB24 CBNZ W8, 0x3B5FB2C
	0x03B5FB28 BL 0x1C16DFC
	0x03B5FB2C ADRP X8, 0x5FC000
	0x03B5FB30 LDR X8, [X8 + 0x2E0]
	0x03B5FB34 LDR X0, [X8]
	0x03B5FB38 MOV X1, X19
	0x03B5FB3C MOV X2, X31
	0x03B5FB40 BL 0x3C06150
	0x03B5FB44 LDP X20, X19, [X31 + 0x20]
	0x03B5FB48 LDP X30, X21, [X31 + 0x10]
	0x03B5FB4C ADD X31, X31, 0x30
	0x03B5FB50 RET
	0x03B5FB54 BL 0x1C16F20
	0x03B5FB58 STR D10, [X31 - 0x40]!
	0x03B5FB5C STP D9, D8, [X31 + 0x8]
	0x03B5FB60 STR X30, [X31 + 0x18]
	0x03B5FB64 STP X22, X21, [X31 + 0x20]
	0x03B5FB68 STP X20, X19, [X31 + 0x30]
	0x03B5FB6C ADRP X20, 0x883000
	0x03B5FB70 ADRP X22, 0x594000
	0x03B5FB74 LDRB W8, [X20 + 0x98E]
	0x03B5FB78 LDR X22, [X22 + 0x598]
	0x03B5FB7C MOV X19, X0
	0x03B5FB80 TBNZ X8, 0x0, 0x3B5FBBC
	0x03B5FB84 ADRP X0, 0x594000
	0x03B5FB88 LDR X0, [X0 + 0xA58]
	0x03B5FB8C BL 0x1C16CF4
	0x03B5FB90 ADRP X0, 0x594000
	0x03B5FB94 LDR X0, [X0 + 0x598]
	0x03B5FB98 BL 0x1C16CF4
	0x03B5FB9C ADRP X0, 0x594000
	0x03B5FBA0 LDR X0, [X0 + 0xEC8]
	0x03B5FBA4 BL 0x1C16CF4
	0x03B5FBA8 ADRP X0, 0x5FC000
	0x03B5FBAC LDR X0, [X0 + 0x2E8]
	0x03B5FBB0 BL 0x1C16CF4
	0x03B5FBB4 MOVZ W8, 0x1
	0x03B5FBB8 STRB W8, [X20 + 0x98E]
	0x03B5FBBC LDR X0, [X22]
	0x03B5FBC0 LDR X20, [X19 + 0x2A0]
	0x03B5FBC4 LDR W8, [X0 + 0xE0]
	0x03B5FBC8 CBNZ W8, 0x3B5FBD0
	0x03B5FBCC BL 0x1C16DFC
	0x03B5FBD0 MOV X0, X20
	0x03B5FBD4 MOV X1, X31
	0x03B5FBD8 MOV X2, X31
	0x03B5FBDC BL 0x3C354F8
	0x03B5FBE0 AND W8, W0, 0x1
	0x03B5FBE4 STRB W8, [X19 + 0x358]
	0x03B5FBE8 TBZ X0, 0x0, 0x3B5FC04
	0x03B5FBEC LDP X20, X19, [X31 + 0x30]
	0x03B5FBF0 LDP X22, X21, [X31 + 0x20]
	0x03B5FBF4 LDR X30, [X31 + 0x18]
	0x03B5FBF8 LDP D9, D8, [X31 + 0x8]
	0x03B5FBFC LDR V10, [X31], #0x40
	0x03B5FC00 RET
	0x03B5FC04 MOV X0, X19
	0x03B5FC08 MOV X1, X31
	0x03B5FC0C BL 0x3C32ECC
	0x03B5FC10 CBZ X0, 0x3B5FEBC
	0x03B5FC14 MOV X1, X31
	0x03B5FC18 BL 0x3C389D4
	0x03B5FC1C ADRP X8, 0x594000
	0x03B5FC20 LDR X8, [X8 + 0xEC8]
	0x03B5FC24 ADRP X9, 0x5FC000
	0x03B5FC28 LDR X9, [X9 + 0x2E8]
	0x03B5FC2C MOV X1, X0
	0x03B5FC30 LDR X8, [X8]
	0x03B5FC34 MOV X3, X31
	0x03B5FC38 LDR X2, [X9]
	0x03B5FC3C MOV X0, X8
	0x03B5FC40 BL 0x32274B8
	0x03B5FC44 ADRP X8, 0x594000
	0x03B5FC48 LDR X8, [X8 + 0xA58]
	0x03B5FC4C MOV X21, X0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X24, 0x884000
	015 Move X20, 0x5FC000
	016 Move X23, 0x5FC000
	017 Move X22, 0x5FD000
	018 Move X21, 0x5FD000
	019 Move X29, 0x59B000
	020 Move X28, 0x59A000
	021 Move X27, 0x5FD000
	022 Move X26, 0x5FD000
	023 Move X25, 0x5FD000
	024 Move X20, [X20+3768]
	025 Move X23, [X23+3776]
	026 Move X22, [X22+616]
	027 Move X21, [X21+624]
	028 Move X29, [X29+1160]
	029 Move X28, [X28+312]
	030 Move X27, [X27+632]
	031 Move X26, [X26+640]
	032 Move W8, [X24+2435]
	033 Move X25, [X25+648]
	034 Move X19, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {80}
	039 Move X0, 0x5FD000
	040 Move X0, [X0+624]
	041 Call 0x1C17CF4
	042 Move X0, 0x5FD000
	043 Move X0, [X0+616]
	044 Call 0x1C17CF4
	045 Move X0, 0x59A000
	046 Move X0, [X0+312]
	047 Call 0x1C17CF4
	048 Move X0, 0x5FD000
	049 Move X0, [X0+640]
	050 Call 0x1C17CF4
	051 Move X0, 0x5FC000
	052 Move X0, [X0+3656]
	053 Call 0x1C17CF4
	054 Move X0, 0x5FD000
	055 Move X0, [X0+656]
	056 Call 0x1C17CF4
	057 Move X0, 0x5FD000
	058 Move X0, [X0+632]
	059 Call 0x1C17CF4
	060 Move X0, 0x5FC000
	061 Move X0, [X0+3648]
	062 Call 0x1C17CF4
	063 Move X0, 0x5FD000
	064 Move X0, [X0+648]
	065 Call 0x1C17CF4
	066 Move X0, 0x59B000
	067 Move X0, [X0+1160]
	068 Call 0x1C17CF4
	069 Move X0, 0x5FC000
	070 Move X0, [X0+3768]
	071 Call 0x1C17CF4
	072 Move X0, 0x5FC000
	073 Move X0, [X0+3776]
	074 Call 0x1C17CF4
	075 Move X0, 0x5FC000
	076 Move X0, [X0+872]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X24+2435], W8
	080 Move X8, -50802688
	081 Move V0, [X8+120]
	082 Move W9, 0xD70A
	083 Add X8, X19, 424
	084 NotImplemented "Instruction MOVK not yet implemented."
	085 Move TEMP, 0
	086 Not TEMP
	087 Move W0, TEMP
	088 Move X1, X31
	089 Move [X8], V0
	090 Move [X19+440], W9
	091 Call LayerMask.op_Implicit, X0
	092 Move W24, 1
	093 Move W8, 257
	094 Move [X19+444], W0
	095 Move [X19+448], W24
	096 NotImplemented "Instruction STRH not yet implemented."
	097 Move X0, [X20]
	098 Call 0x1C17F10
	099 Move X1, X31
	100 Move X20, X0
	101 Call UIHoverEnterEvent..ctor, X0
	102 Move [X19+456], X20
	103 Move X0, [X23]
	104 Call 0x1C17F10
	105 Move X1, X31
	106 Move X20, X0
	107 Call UIHoverExitEvent..ctor, X0
	108 Move [X19+464], X20
	109 Move X0, [X22]
	110 Call 0x1C17F10
	111 Move X5, [X21]
	112 NotImplemented "Instruction MOVI not yet implemented."
	113 Add X1, X31, 0
	114 Move W2, 1
	115 Move X3, X31
	116 Move W4, W31
	117 Move X20, X0
	118 Move [X31+48], X31
	119 Move [X31+16], V0
	120 Move [X31+24], V0
	121 Move [X31], V0
	122 Call BindableVariable`1<PokeStateData>..ctor, X0, X1, X2, X3, X4
	123 Move [X19+472], X20
	124 Move [X19+508], W24
	125 Move X0, [X29]
	126 Move W1, 25
	127 Call 0x1C17D6C
	128 Move [X19+528], X0
	129 Move X0, [X28]
	130 Move W1, 25
	131 Call 0x1C17D6C
	132 Move [X19+536], X0
	133 Move X0, [X27]
	134 Call 0x1C17F10
	135 Move X1, [X26]
	136 Move X20, X0
	137 Call List`1<PokeCollision>..ctor, X0
	138 Move [X19+544], X20
	139 Move X0, [X25]
	140 Call 0x1C17F10
	141 Move X8, 0x5FD000
	142 Move X8, [X8+656]
	143 Move X20, X0
	144 Move X1, [X8]
	145 Call List`1<Object>..ctor, X0
	146 Move [X19+552], X20
	147 Move X8, 0x5FC000
	148 Move X8, [X8+3648]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X8, 0x5FC000
	152 Move X8, [X8+3656]
	153 Move X20, X0
	154 Move X1, [X8]
	155 Call List`1<Object>..ctor, X0
	156 Move [X19+560], X20
	157 Move X8, 0x5FC000
	158 Move X8, [X8+872]
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X19
	165 Call XRBaseInteractor..ctor, X0
	166 Move X20, [X31+144]
	167 Move X19, [X31+152]
	168 Move X22, [X31+128]
	169 Move X21, [X31+136]
	170 Move X24, [X31+112]
	171 Move X23, [X31+120]
	172 Move X26, [X31+96]
	173 Move X25, [X31+104]
	174 Move X28, [X31+80]
	175 Move X27, [X31+88]
	176 Move X29, [X31+64]
	177 Move X30, [X31+72]
	178 Add X31, X31, 160
	179 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B5FC50 LDR X8, [X8]
	0x03B5FC54 MOV X0, X8
	0x03B5FC58 BL 0x1C16F10
	0x03B5FC5C MOV X1, X21
	0x03B5FC60 MOV X2, X31
	0x03B5FC64 MOV X20, X0
	0x03B5FC68 BL 0x3C35934
	0x03B5FC6C CBZ X20, 0x3B5FEBC
	0x03B5FC70 MOV X0, X20
	0x03B5FC74 MOV X1, X31
	0x03B5FC78 BL 0x3C356F8
	0x03B5FC7C MOV X20, X0
	0x03B5FC80 STR X0, [X19 + 0x2A0]
	0x03B5FC84 MOVZ W8, 0x1
	0x03B5FC88 MOV X0, X19
	0x03B5FC8C MOV X1, X31
	0x03B5FC90 STRB W8, [X19 + 0x358]
	0x03B5FC94 BL 0x3C32E90
	0x03B5FC98 CBZ X20, 0x3B5FEBC
	0x03B5FC9C MOV X1, X0
	0x03B5FCA0 MOV X0, X20
	0x03B5FCA4 MOV W2, W31
	0x03B5FCA8 MOV X3, X31
	0x03B5FCAC BL 0x3C3FEB8
	0x03B5FCB0 LDR X0, [X22]
	0x03B5FCB4 LDR X20, [X19 + 0x50]
	0x03B5FCB8 LDR W8, [X0 + 0xE0]
	0x03B5FCBC CBNZ W8, 0x3B5FCC4
	0x03B5FCC0 BL 0x1C16DFC
	0x03B5FCC4 MOV X0, X20
	0x03B5FCC8 MOV X1, X31
	0x03B5FCCC MOV X2, X31
	0x03B5FCD0 BL 0x3C3883C
	0x03B5FCD4 TBZ X0, 0x0, 0x3B5FCE0
	0x03B5FCD8 MOV X0, X19
	0x03B5FCDC BL 0x3B524B4
	0x03B5FCE0 LDR X0, [X22]
	0x03B5FCE4 LDR X20, [X19 + 0x50]
	0x03B5FCE8 LDR W8, [X0 + 0xE0]
	0x03B5FCEC CBNZ W8, 0x3B5FCF4
	0x03B5FCF0 BL 0x1C16DFC
	0x03B5FCF4 MOV X0, X20
	0x03B5FCF8 MOV X1, X31
	0x03B5FCFC MOV X2, X31
	0x03B5FD00 BL 0x3C3883C
	0x03B5FD04 TBZ X0, 0x0, 0x3B5FD98
	0x03B5FD08 ADRP X21, 0x879000
	0x03B5FD0C LDRB W8, [X21 + 0x783]
	0x03B5FD10 LDR X20, [X19 + 0x2A0]
	0x03B5FD14 CBNZ W8, 0x3B5FD2C
	0x03B5FD18 ADRP X0, 0x594000
	0x03B5FD1C LDR X0, [X0 + 0x5A0]
	0x03B5FD20 BL 0x1C16CF4
	0x03B5FD24 MOVZ W8, 0x1
	0x03B5FD28 STRB W8, [X21 + 0x783]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x884000
	009 Move X24, 0x5FC000
	010 Move X19, 0x5FC000
	011 Move X20, 0x5FD000
	012 Move X22, 0x5FD000
	013 Move X21, 0x5FD000
	014 Move W8, [X23+2436]
	015 Move X24, [X24+3648]
	016 Move X19, [X19+3656]
	017 Move X20, [X20+440]
	018 Move X22, [X22+664]
	019 Move X21, [X21+672]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x5FD000
	025 Move X0, [X0+672]
	026 Call 0x1C17CF4
	027 Move X0, 0x5FD000
	028 Move X0, [X0+664]
	029 Call 0x1C17CF4
	030 Move X0, 0x5FC000
	031 Move X0, [X0+3656]
	032 Call 0x1C17CF4
	033 Move X0, 0x5FC000
	034 Move X0, [X0+3648]
	035 Call 0x1C17CF4
	036 Move X0, 0x5FD000
	037 Move X0, [X0+440]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2436], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call List`1<Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call Dictionary`2<Object, Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+64]
	064 Return 

