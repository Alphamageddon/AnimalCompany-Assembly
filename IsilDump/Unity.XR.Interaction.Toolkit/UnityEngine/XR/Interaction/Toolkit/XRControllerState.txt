Type: UnityEngine.XR.Interaction.Toolkit.XRControllerState

Method: System.Void .ctor(System.Double time, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.XR.InputTrackingState inputTrackingState, System.Boolean isTracked)

Disassembly:
	0x03B37368 ADD X0, X20, 0x138
	0x03B3736C MOV X1, X31
	0x03B37370 BL 0x3745120
	0x03B37374 CBZ X0, 0x3B37408
	0x03B37378 LDR X8, [X21 + 0x10]
	0x03B3737C LDR V0, [X21]
	0x03B37380 ADD X0, X31, 0x40
	0x03B37384 STR X8, [X31 + 0x50]
	0x03B37388 STR V0, [X31 + 0x4]
	0x03B3738C BL 0x3B3776C
	0x03B37390 TBNZ X0, 0x0, 0x3B373D0
	0x03B37394 LDR X8, [X20 + 0xB8]
	0x03B37398 LDUR V0, [X20 + 0xA8]
	0x03B3739C ADD X0, X31, 0x20
	0x03B373A0 STR X8, [X31 + 0x30]
	0x03B373A4 STR V0, [X31 + 0x2]
	0x03B373A8 BL 0x3B3776C
	0x03B373AC TBNZ X0, 0x0, 0x3B373D0
	0x03B373B0 ADD X8, X20, 0x138
	0x03B373B4 LDR X9, [X8 + 0x10]
	0x03B373B8 LDR V0, [X8]
	0x03B373BC ADD X0, X31, 0x0
	0x03B373C0 STR X9, [X31 + 0x10]
	0x03B373C4 STR V0, [X31]
	0x03B373C8 BL 0x3B3776C
	0x03B373CC TBZ X0, 0x0, 0x3B37400
	0x03B373D0 ADRP X8, 0x5BC000
	0x03B373D4 LDR X8, [X8 + 0xA28]
	0x03B373D8 LDR X0, [X8]
	0x03B373DC LDR W8, [X0 + 0xE0]
	0x03B373E0 CBNZ W8, 0x3B373E8
	0x03B373E4 BL 0x1C16DFC
	0x03B373E8 ADRP X8, 0x623000

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move W19, W1
	014 Move X1, X31
	015 Move V8, V7
	016 Move V9, V6
	017 Move V10, V5
	018 Move V11, V4
	019 Move V12, V3
	020 Move V13, V2
	021 Move V14, V1
	022 Move V15, V0
	023 Move X20, X0
	024 And W21, W2, 1
	025 Call Object..ctor, X0
	026 Move [X20+16], D15
	027 Move [X20+32], S14
	028 Move [X20+40], S13
	029 Move [X20+40], S12
	030 Move [X20+48], S11
	031 Move [X20+48], S10
	032 Move [X20+56], S9
	033 Move [X20+56], S8
	034 Move [X20+24], W19
	035 Move [X20+28], W21
	036 Move X20, [X31+80]
	037 Move X19, [X31+88]
	038 Move X30, [X31+64]
	039 Move X21, [X31+72]
	040 Move D9, [X31+48]
	041 Move D8, [X31+56]
	042 Move D11, [X31+32]
	043 Move D10, [X31+40]
	044 Move D13, [X31+16]
	045 Move D12, [X31+24]
	046 Move D15, [X31+96]
	047 Move D14, [X31+104]
	048 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B35640 STP X20, X19, [X31 + 0x10]
	0x03B35644 ADRP X21, 0x8AD000
	0x03B35648 ADRP X20, 0x5BE000
	0x03B3564C LDRB W8, [X21 + 0x7FD]
	0x03B35650 LDR X20, [X20 + 0x598]
	0x03B35654 MOV X19, X0
	0x03B35658 TBNZ X8, 0x0, 0x3B3567C
	0x03B3565C ADRP X0, 0x625000
	0x03B35660 LDR X0, [X0 + 0x98]
	0x03B35664 BL 0x1C16CF4
	0x03B35668 ADRP X0, 0x5BE000
	0x03B3566C LDR X0, [X0 + 0x598]
	0x03B35670 BL 0x1C16CF4
	0x03B35674 MOVZ W8, 0x1
	0x03B35678 STRB W8, [X21 + 0x7FD]
	0x03B3567C LDR X0, [X20]
	0x03B35680 LDR X20, [X19 + 0x30]
	0x03B35684 LDR W8, [X0 + 0xE0]
	0x03B35688 CBNZ W8, 0x3B35690
	0x03B3568C BL 0x1C16DFC
	0x03B35690 MOV X0, X20
	0x03B35694 MOV X1, X31
	0x03B35698 MOV X2, X31
	0x03B3569C BL 0x3C3883C
	0x03B356A0 TBZ X0, 0x0, 0x3B356BC
	0x03B356A4 ADRP X8, 0x625000
	0x03B356A8 LDR X8, [X8 + 0x98]
	0x03B356AC MOV X0, X19
	0x03B356B0 LDR X1, [X8]
	0x03B356B4 BL 0x21A3894
	0x03B356B8 STR X0, [X19 + 0x30]
	0x03B356BC LDRB W8, [X19 + 0x20]
	0x03B356C0 STR X31, [X19 + 0x40]
	0x03B356C4 CBZ W8, 0x3B356DC
	0x03B356C8 MOV X0, X19
	0x03B356CC LDP X20, X19, [X31 + 0x10]
	0x03B356D0 MOVZ W1, 0x1
	0x03B356D4 LDP X30, X21, [X31], #0x20
	0x03B356D8 B 0x3B35368
	0x03B356DC LDP X20, X19, [X31 + 0x10]
	0x03B356E0 LDP X30, X21, [X31], #0x20
	0x03B356E4 RET
	0x03B356E8 STR D8, [X31 - 0x20]!
	0x03B356EC STR X30, [X31 + 0x8]
	0x03B356F0 STP X20, X19, [X31 + 0x10]
	0x03B356F4 ADRP X20, 0x8AD000
	0x03B356F8 LDRB W8, [X20 + 0x7FE]
	0x03B356FC MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x8A4000
	008 Move W8, [X20+1923]
	009 Move X19, X0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x5BF000
	013 Move X0, [X0+1440]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1923], W8
	017 Move X8, 0x5BF000
	018 Move X8, [X8+1440]
	019 Move X20, 0x8A4000
	020 Move W9, [X20+1939]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move V9, [X8]
	024 Move V8, [X8+8]
	025 Compare W9, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x5C0000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1939], W8
	032 Move X8, 0x5C0000
	033 Move X8, [X8+1448]
	034 Move X0, X19
	035 Move X1, X31
	036 Move X8, [X8]
	037 Move X8, [X8+184]
	038 Move V0, [X8]
	039 Move [X31], V0
	040 Call Object..ctor, X0
	041 Move V0, [X31]
	042 Move [X19+16], X31
	043 Move [X19+32], D9
	044 Move [X19+40], S8
	045 Move [X19+44], V0
	046 Move [X19+24], W31
	047 Move [X19+28], W31
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X30, [X31+32]
	051 Move D9, [X31+16]
	052 Move D8, [X31+24]
	053 Add X31, X31, 64
	054 Return 

Method: System.Void .ctor(UnityEngine.XR.Interaction.Toolkit.XRControllerState value)

Disassembly:
	0x03B36F00 RET
	0x03B36F04 LDRB W0, [X0 + 0x188]
	0x03B36F08 RET
	0x03B36F0C AND W8, W1, 0x1
	0x03B36F10 STRB W8, [X0 + 0x188]
	0x03B36F14 RET
	0x03B36F18 LDR V0, [X0 + 0x18C]
	0x03B36F1C RET
	0x03B36F20 STR S0, [X0 + 0x18C]
	0x03B36F24 RET
	0x03B36F28 STP X30, X21, [X31 - 0x20]!
	0x03B36F2C STP X20, X19, [X31 + 0x10]
	0x03B36F30 ADRP X20, 0x8AC000
	0x03B36F34 ADRP X21, 0x5BD000
	0x03B36F38 LDRB W8, [X20 + 0x80A]
	0x03B36F3C LDR X21, [X21 + 0x598]
	0x03B36F40 MOV X19, X0
	0x03B36F44 TBNZ X8, 0x0, 0x3B36F74
	0x03B36F48 ADRP X0, 0x5BD000
	0x03B36F4C LDR X0, [X0 + 0xA28]
	0x03B36F50 BL 0x1C16CF4
	0x03B36F54 ADRP X0, 0x5BD000
	0x03B36F58 LDR X0, [X0 + 0x598]
	0x03B36F5C BL 0x1C16CF4
	0x03B36F60 ADRP X0, 0x624000
	0x03B36F64 LDR X0, [X0 + 0xC8]
	0x03B36F68 BL 0x1C16CF4
	0x03B36F6C MOVZ W8, 0x1
	0x03B36F70 STRB W8, [X20 + 0x80A]
	0x03B36F74 LDR X0, [X21]
	0x03B36F78 LDR X20, [X19 + 0x180]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Compare X20, 0
	009 JumpIfEqual {34}
	010 Move V0, [X20+16]
	011 Move [X19+16], D0
	012 Move W8, [X20+40]
	013 Move X9, [X20+32]
	014 Move [X19+40], W8
	015 Move [X19+32], X9
	016 NotImplemented "Instruction LDUR not yet implemented."
	017 Move [X19+44], V0
	018 Move W8, [X20+24]
	019 Move [X19+24], W8
	020 Move W8, [X20+28]
	021 Move [X19+28], W8
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move [X19+60], X8
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move [X19+68], X8
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move [X19+76], X8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move [X19+84], X8
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void .ctor(System.Double time, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.XR.InputTrackingState inputTrackingState, System.Boolean isTracked, System.Boolean selectActive, System.Boolean activateActive, System.Boolean pressActive)

Disassembly:
	0x03B373EC LDR X8, [X8 + 0xD0]
	0x03B373F0 MOV X1, X20
	0x03B373F4 MOV X2, X31
	0x03B373F8 LDR X0, [X8]
	0x03B373FC BL 0x3C06B0C
	0x03B37400 MOVZ W8, 0x1
	0x03B37404 STRB W8, [X20 + 0x190]
	0x03B37408 ADD X0, X20, 0x168
	0x03B3740C MOV X1, X31
	0x03B37410 BL 0x3745120
	0x03B37414 CBZ X0, 0x3B37430
	0x03B37418 ADRP X8, 0x5E4000
	0x03B3741C LDR X8, [X8 + 0x70]
	0x03B37420 LDR X1, [X8]
	0x03B37424 BL 0x21F5BCC
	0x03B37428 MOV W21, W0
	0x03B3742C B 0x3B37434
	0x03B37430 MOV W21, W31
	0x03B37434 ADD X2, X31, 0x98
	0x03B37438 MOV X0, X20
	0x03B3743C MOV W1, W21
	0x03B37440 BL 0x3B37838
	0x03B37444 TBZ X0, 0x0, 0x3B37544
	0x03B37448 LDR X0, [X31 + 0x98]
	0x03B3744C CBZ X0, 0x3B37668
	0x03B37450 ADRP X8, 0x5E4000
	0x03B37454 LDR X8, [X8 + 0x3C0]
	0x03B37458 LDR X1, [X8]
	0x03B3745C BL 0x21F5E68
	0x03B37460 LDR X22, [X20 + 0x180]
	0x03B37464 CBZ X22, 0x3B37668
	0x03B37468 MOV X0, X22
	0x03B3746C MOV X1, X31
	0x03B37470 MOV V8.16B, V0.16B
	0x03B37474 MOV V9.16B, V1.16B
	0x03B37478 BL 0x3C035DC
	0x03B3747C MOV V2.16B, V0.16B
	0x03B37480 MOV X0, X22
	0x03B37484 MOV V0.16B, V8.16B
	0x03B37488 MOV V1.16B, V9.16B
	0x03B3748C MOV X1, X31
	0x03B37490 BL 0x3C045E4
	0x03B37494 LDR X0, [X20 + 0x180]
	0x03B37498 CBZ X0, 0x3B37668
	0x03B3749C MOV X1, X31
	0x03B374A0 MOV V8.16B, V0.16B
	0x03B374A4 MOV V9.16B, V1.16B
	0x03B374A8 MOV V10.16B, V2.16B
	0x03B374AC BL 0x3C32E90
	0x03B374B0 CBZ X0, 0x3B37668
	0x03B374B4 MOV X1, X31
	0x03B374B8 BL 0x3C3F58C
	0x03B374BC ADRP X22, 0x8A1000
	0x03B374C0 LDRB W8, [X22 + 0x785]
	0x03B374C4 MOV V11.16B, V0.16B
	0x03B374C8 MOV V12.16B, V1.16B
	0x03B374CC MOV V13.16B, V2.16B
	0x03B374D0 CBNZ W8, 0x3B374E8
	0x03B374D4 ADRP X0, 0x5BC000
	0x03B374D8 LDR X0, [X0 + 0x5A8]
	0x03B374DC BL 0x1C16CF4
	0x03B374E0 MOVZ W8, 0x1
	0x03B374E4 STRB W8, [X22 + 0x785]
	0x03B374E8 ADRP X8, 0x5BC000
	0x03B374EC LDR X8, [X8 + 0x5A8]
	0x03B374F0 FSUB S11, S8, S11
	0x03B374F4 FSUB S12, S9, S12
	0x03B374F8 FSUB S13, S10, S13
	0x03B374FC LDR X0, [X8]
	0x03B37500 LDR W8, [X0 + 0xE0]
	0x03B37504 CBNZ W8, 0x3B3750C
	0x03B37508 BL 0x1C16DFC
	0x03B3750C FMUL S0, S11, S11
	0x03B37510 FMUL S1, S12, S12
	0x03B37514 ADRP X8, 0xFFFFFFFFFCFB3000
	0x03B37518 FADD S0, S0, S1
	0x03B3751C LDR V1, [X8 + 0x17C]
	0x03B37520 FMUL S2, S13, S13
	0x03B37524 FADD S0, S2, S0
	0x03B37528 FSQRT S0, S0

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move W23, W1
	017 Move X1, X31
	018 Move W19, W5
	019 Move W20, W4
	020 Move W22, W3
	021 Move V8, V7
	022 Move V9, V6
	023 Move V10, V5
	024 Move V11, V4
	025 Move V12, V3
	026 Move V13, V2
	027 Move V14, V1
	028 Move V15, V0
	029 Move X21, X0
	030 And W24, W2, 1
	031 Call Object..ctor, X0
	032 Move W9, [X21+64]
	033 And W8, W22, 1
	034 Move S0, W31
	035 Move S1, 1
	036 Move [X21+64], W8
	037 Move W8, [X21+72]
	038 NotImplemented "Instruction FCSEL not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Xor W10, W22, 1
	041 NotImplemented "Instruction CSET not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 And W10, W11, W10
	044 And W11, W20, 1
	045 Move [X21+72], W11
	046 Move W11, [X21+80]
	047 NotImplemented "Instruction FCSEL not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Xor W8, W20, 1
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move [X21+66], W10
	052 NotImplemented "Instruction CSET not yet implemented."
	053 And W8, W12, W8
	054 And W12, W19, 1
	055 And W9, W9, W22
	056 And W10, W10, W20
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X21+65], W9
	060 Xor W9, W19, 1
	061 Move [X21+73], W10
	062 Move [X21+74], W8
	063 NotImplemented "Instruction CSET not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 And W10, W10, W19
	066 And W8, W8, W9
	067 Move [X21+16], D15
	068 Move [X21+32], S14
	069 Move [X21+40], S13
	070 Move [X21+40], S12
	071 Move [X21+48], S11
	072 Move [X21+48], S10
	073 Move [X21+56], S9
	074 Move [X21+24], W23
	075 Move [X21+28], W24
	076 Move [X21+56], S8
	077 Move [X21+64], S2
	078 Move [X21+68], S3
	079 Move [X21+76], S0
	080 Move [X21+81], W10
	081 Move [X21+82], W8
	082 Move [X21+80], W12
	083 Move X20, [X31+112]
	084 Move X19, [X31+120]
	085 Move X22, [X31+96]
	086 Move X21, [X31+104]
	087 Move X24, [X31+80]
	088 Move X23, [X31+88]
	089 Move X30, [X31+64]
	090 Move D9, [X31+48]
	091 Move D8, [X31+56]
	092 Move D11, [X31+32]
	093 Move D10, [X31+40]
	094 Move D13, [X31+16]
	095 Move D12, [X31+24]
	096 Move D15, [X31+128]
	097 Move D14, [X31+136]
	098 Return 

Method: System.Void .ctor(System.Double time, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.XR.InputTrackingState inputTrackingState, System.Boolean isTracked, System.Boolean selectActive, System.Boolean activateActive, System.Boolean pressActive, System.Single selectValue, System.Single activateValue, System.Single pressValue)

Disassembly:
	0x03B3752C FCMP S0, S1
	0x03B37530 B.LE 0x3B37550
	0x03B37534 FDIV S11, S11, S0
	0x03B37538 FDIV S12, S12, S0
	0x03B3753C FDIV S13, S13, S0
	0x03B37540 B 0x3B37588
	0x03B37544 STR W31, [X19 + 0x18]
	0x03B37548 STRB W31, [X19 + 0x1C]
	0x03B3754C B 0x3B37648
	0x03B37550 ADRP X22, 0x8A1000
	0x03B37554 LDRB W8, [X22 + 0x783]
	0x03B37558 CBNZ W8, 0x3B37570
	0x03B3755C ADRP X0, 0x5BC000
	0x03B37560 LDR X0, [X0 + 0x5A0]
	0x03B37564 BL 0x1C16CF4
	0x03B37568 MOVZ W8, 0x1
	0x03B3756C STRB W8, [X22 + 0x783]
	0x03B37570 ADRP X8, 0x5BC000
	0x03B37574 LDR X8, [X8 + 0x5A0]
	0x03B37578 LDR X8, [X8]
	0x03B3757C LDR X8, [X8 + 0xB8]
	0x03B37580 LDP S11, S12, [X8]
	0x03B37584 LDR V13, [X8 + 0x8]
	0x03B37588 MOV X0, X20
	0x03B3758C MOV X1, X31
	0x03B37590 BL 0x3C32E90
	0x03B37594 CBZ X0, 0x3B37668
	0x03B37598 MOV X1, X31
	0x03B3759C BL 0x3C3F49C
	0x03B375A0 ADRP X8, 0x5BC000
	0x03B375A4 LDR X8, [X8 + 0x598]
	0x03B375A8 MOV X22, X0
	0x03B375AC LDR X8, [X8]
	0x03B375B0 LDR W9, [X8 + 0xE0]
	0x03B375B4 CBNZ W9, 0x3B375C0
	0x03B375B8 MOV X0, X8
	0x03B375BC BL 0x1C16DFC
	0x03B375C0 MOV X0, X22
	0x03B375C4 MOV X1, X31
	0x03B375C8 MOV X2, X31
	0x03B375CC BL 0x3C354F8
	0x03B375D0 TBZ X0, 0x0, 0x3B37610
	0x03B375D4 MOV X0, X20
	0x03B375D8 MOV X1, X31
	0x03B375DC BL 0x3C32E90
	0x03B375E0 CBZ X0, 0x3B37668
	0x03B375E4 MOV X1, X31
	0x03B375E8 BL 0x3C3F49C
	0x03B375EC CBZ X0, 0x3B37668
	0x03B375F0 MOV V0.16B, V8.16B
	0x03B375F4 MOV V1.16B, V9.16B
	0x03B375F8 MOV V2.16B, V10.16B
	0x03B375FC MOV X1, X31
	0x03B37600 BL 0x3C40B58
	0x03B37604 MOV V8.16B, V0.16B
	0x03B37608 MOV V9.16B, V1.16B
	0x03B3760C MOV V10.16B, V2.16B
	0x03B37610 MOV V0.16B, V11.16B
	0x03B37614 MOV V1.16B, V12.16B
	0x03B37618 MOV V2.16B, V13.16B
	0x03B3761C MOV X0, X31
	0x03B37620 STP S8, S9, [X19 + 0x20]
	0x03B37624 STR S10, [X19 + 0x28]
	0x03B37628 BL 0x3C2A8C4
	0x03B3762C MOVZ W8, 0x3
	0x03B37630 CMP W21, 0x0
	0x03B37634 STR W8, [X19 + 0x18]
	0x03B37638 CSET W8, GT
	0x03B3763C STP S0, S1, [X19 + 0x2C]
	0x03B37640 STP S2, S3, [X19 + 0x34]
	0x03B37644 STRB W8, [X19 + 0x1C]
	0x03B37648 LDP X20, X19, [X31 + 0xB0]
	0x03B3764C LDP X22, X21, [X31 + 0xA0]
	0x03B37650 LDR X30, [X31 + 0x90]
	0x03B37654 LDP D9, D8, [X31 + 0x80]
	0x03B37658 LDP D11, D10, [X31 + 0x70]
	0x03B3765C LDP D13, D12, [X31 + 0x60]
	0x03B37660 ADD X31, X31, 0xC0
	0x03B37664 RET
	0x03B37668 BL 0x1C16F20
	0x03B3766C STP X30, X21, [X31 - 0x20]!
	0x03B37670 STP X20, X19, [X31 + 0x10]
	0x03B37674 ADRP X20, 0x8AB000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move V8, [X31+160]
	018 Move V9, [X31+152]
	019 Move V10, [X31+144]
	020 Move W23, W1
	021 Move X1, X31
	022 Move W19, W5
	023 Move W20, W4
	024 Move W22, W3
	025 Move [X31+88], S6
	026 Move [X31+96], S7
	027 Move [X31+12], S5
	028 Move V11, V4
	029 Move V12, V3
	030 Move V13, V2
	031 Move V14, V1
	032 Move V15, V0
	033 Move X21, X0
	034 And W24, W2, 1
	035 Call Object..ctor, X0
	036 Move W8, [X21+64]
	037 Move V0, [X31+12]
	038 Move W11, [X21+72]
	039 And W10, W22, 1
	040 Move [X21+64], W10
	041 And W10, W20, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X21+48], S0
	044 Move V0, [X31+88]
	045 Move [X21+72], W10
	046 NotImplemented "Instruction CSET not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W11, [X21+80]
	050 Xor W9, W22, 1
	051 And W8, W8, W9
	052 And W10, W10, W22
	053 NotImplemented "Instruction CSET not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move [X21+52], S0
	056 Move V0, [X31+92]
	057 Move [X21+66], W8
	058 Xor W8, W20, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X21+65], W10
	061 And W10, W12, W20
	062 And W8, W9, W8
	063 Xor W11, W19, 1
	064 Move [X21+73], W10
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move [X21+74], W8
	067 NotImplemented "Instruction CSET not yet implemented."
	068 And W9, W19, 1
	069 And W8, W8, W19
	070 And W10, W10, W11
	071 Move [X21+24], W23
	072 Move [X21+28], W24
	073 Move [X21+16], D15
	074 Move [X21+32], S14
	075 Move [X21+40], S13
	076 Move [X21+40], S12
	077 Move [X21+48], S11
	078 Move [X21+56], S0
	079 Move [X21+64], S10
	080 Move [X21+68], S9
	081 Move [X21+76], S8
	082 Move [X21+81], W8
	083 Move [X21+82], W10
	084 Move [X21+80], W9
	085 Move X20, [X31+128]
	086 Move X19, [X31+136]
	087 Move X22, [X31+112]
	088 Move X21, [X31+120]
	089 Move X24, [X31+96]
	090 Move X23, [X31+104]
	091 Move X30, [X31+80]
	092 Move D9, [X31+64]
	093 Move D8, [X31+72]
	094 Move D11, [X31+48]
	095 Move D10, [X31+56]
	096 Move D13, [X31+32]
	097 Move D12, [X31+40]
	098 Move D15, [X31+16]
	099 Move D14, [X31+24]
	100 Add X31, X31, 144
	101 Return 

Method: System.Void ResetFrameDependentStates()

Disassembly:
	0x03B34558 LDR X8, [X19]
	0x03B3455C MOV X0, X19
	0x03B34560 LDP X9, X1, [X8 + 0x1A8]
	0x03B34564 BLR X9

ISIL:
	001 NotImplemented "Instruction STURH not yet implemented."
	002 NotImplemented "Instruction STURH not yet implemented."
	003 NotImplemented "Instruction STURH not yet implemented."
	004 Return 

Method: System.String ToString()

Disassembly:
	0x03B37678 LDRB W8, [X20 + 0x80E]
	0x03B3767C MOV X19, X0
	0x03B37680 TBNZ X8, 0x0, 0x3B376A4
	0x03B37684 ADRP X0, 0x623000
	0x03B37688 LDR X0, [X0 + 0xD8]
	0x03B3768C BL 0x1C16CF4
	0x03B37690 ADRP X0, 0x5BC000
	0x03B37694 LDR X0, [X0 + 0x598]
	0x03B37698 BL 0x1C16CF4
	0x03B3769C MOVZ W8, 0x1
	0x03B376A0 STRB W8, [X20 + 0x80E]
	0x03B376A4 LDRB W8, [X19 + 0x188]
	0x03B376A8 CBZ W8, 0x3B37728
	0x03B376AC ADRP X21, 0x5BC000
	0x03B376B0 LDR X21, [X21 + 0x598]
	0x03B376B4 LDR X20, [X19 + 0x198]
	0x03B376B8 LDR X0, [X21]
	0x03B376BC LDR W8, [X0 + 0xE0]
	0x03B376C0 CBNZ W8, 0x3B376C8
	0x03B376C4 BL 0x1C16DFC
	0x03B376C8 MOV X0, X20
	0x03B376CC MOV X1, X31
	0x03B376D0 MOV X2, X31
	0x03B376D4 BL 0x3C354F8
	0x03B376D8 TBNZ X0, 0x0, 0x3B376E8
	0x03B376DC MOV X0, X19
	0x03B376E0 BL 0x3B37CFC
	0x03B376E4 TBZ X0, 0x0, 0x3B37728
	0x03B376E8 LDR X0, [X19 + 0x198]
	0x03B376EC CBZ X0, 0x3B37768
	0x03B376F0 MOVN W1, 0x0
	0x03B376F4 MOV X2, X31
	0x03B376F8 BL 0x3BA0D18
	0x03B376FC LDR X8, [X21]
	0x03B37700 MOV X19, X0
	0x03B37704 LDR W9, [X8 + 0xE0]
	0x03B37708 CBNZ W9, 0x3B37714
	0x03B3770C MOV X0, X8
	0x03B37710 BL 0x1C16DFC
	0x03B37714 MOV X0, X19
	0x03B37718 MOV X1, X31
	0x03B3771C MOV X2, X31
	0x03B37720 BL 0x3C3883C
	0x03B37724 TBZ X0, 0x0, 0x3B37730
	0x03B37728 MOV W0, W31
	0x03B3772C B 0x3B3775C
	0x03B37730 CBZ X19, 0x3B37768
	0x03B37734 ADRP X8, 0x623000
	0x03B37738 LDR X8, [X8 + 0xD8]
	0x03B3773C MOV X0, X19
	0x03B37740 LDR X1, [X8]
	0x03B37744 BL 0x21E58C4
	0x03B37748 CBZ X0, 0x3B37768
	0x03B3774C MOV X1, X31
	0x03B37750 BL 0x3E244BC
	0x03B37754 CMP W0, 0x2
	0x03B37758 CSET W0, CC
	0x03B3775C LDP X20, X19, [X31 + 0x10]
	0x03B37760 LDP X30, X21, [X31], #0x20
	0x03B37764 RET
	0x03B37768 BL 0x1C16F20
	0x03B3776C STP X30, X21, [X31 - 0x20]!
	0x03B37770 STP X20, X19, [X31 + 0x10]
	0x03B37774 ADRP X21, 0x8AB000
	0x03B37778 ADRP X20, 0x5BC000
	0x03B3777C LDRB W8, [X21 + 0x810]
	0x03B37780 LDR X20, [X20 + 0x598]
	0x03B37784 MOV X19, X0
	0x03B37788 TBNZ X8, 0x0, 0x3B377A0
	0x03B3778C ADRP X0, 0x5BC000
	0x03B37790 LDR X0, [X0 + 0x598]
	0x03B37794 BL 0x1C16CF4
	0x03B37798 MOVZ W8, 0x1
	0x03B3779C STRB W8, [X21 + 0x810]
	0x03B377A0 MOV X0, X19
	0x03B377A4 MOV X1, X31
	0x03B377A8 BL 0x3745260
	0x03B377AC LDR X8, [X20]
	0x03B377B0 MOV X20, X0
	0x03B377B4 LDR W9, [X8 + 0xE0]
	0x03B377B8 CBNZ W9, 0x3B377C4
	0x03B377BC MOV X0, X8
	0x03B377C0 BL 0x1C16DFC
	0x03B377C4 MOV X0, X20
	0x03B377C8 MOV X1, X31
	0x03B377CC MOV X2, X31
	0x03B377D0 BL 0x3C354F8
	0x03B377D4 TBZ X0, 0x0, 0x3B37820
	0x03B377D8 MOV X0, X19
	0x03B377DC MOV X1, X31
	0x03B377E0 BL 0x3745260
	0x03B377E4 CBZ X0, 0x3B37834
	0x03B377E8 MOV X1, X31
	0x03B377EC BL 0x37451B4
	0x03B377F0 CBZ X0, 0x3B37820
	0x03B377F4 MOV X0, X19
	0x03B377F8 MOV X1, X31
	0x03B377FC BL 0x3745260
	0x03B37800 CBZ X0, 0x3B37834
	0x03B37804 MOV X1, X31
	0x03B37808 BL 0x37451B4
	0x03B3780C CBZ X0, 0x3B37834
	0x03B37810 MOV X1, X31
	0x03B37814 BL 0x373485C
	0x03B37818 EOR W8, W0, 0x1
	0x03B3781C B 0x3B37824
	0x03B37820 MOV W8, W31
	0x03B37824 LDP X20, X19, [X31 + 0x10]
	0x03B37828 AND W0, W8, 0x1
	0x03B3782C LDP X30, X21, [X31], #0x20
	0x03B37830 RET
	0x03B37834 BL 0x1C16F20
	0x03B37838 STP X30, X21, [X31 - 0x20]!
	0x03B3783C STP X20, X19, [X31 + 0x10]
	0x03B37840 MOV X19, X2
	0x03B37844 CMP W1, 0x1
	0x03B37848 B.LE 0x3B37858
	0x03B3784C MOV X0, X31
	0x03B37850 MOV W8, W31
	0x03B37854 B 0x3B378D4
	0x03B37858 ADD X21, X0, 0xC0
	0x03B3785C MOV X20, X0
	0x03B37860 MOV X0, X21
	0x03B37864 MOV X1, X31
	0x03B37868 BL 0x3745120
	0x03B3786C CBZ X0, 0x3B37894
	0x03B37870 MOV X0, X21
	0x03B37874 MOV X1, X31
	0x03B37878 BL 0x3745120
	0x03B3787C CBZ X0, 0x3B378E8
	0x03B37880 MOV X1, X31
	0x03B37884 BL 0x3735430
	0x03B37888 TBZ X0, 0x0, 0x3B37894
	0x03B3788C MOV X0, X21
	0x03B37890 B 0x3B378C8
	0x03B37894 ADD X20, X20, 0xA8
	0x03B37898 MOV X0, X20
	0x03B3789C MOV X1, X31
	0x03B378A0 BL 0x3745120
	0x03B378A4 CBZ X0, 0x3B37850
	0x03B378A8 MOV X0, X20
	0x03B378AC MOV X1, X31
	0x03B378B0 BL 0x3745120
	0x03B378B4 CBZ X0, 0x3B378E8
	0x03B378B8 MOV X1, X31
	0x03B378BC BL 0x3734AB8
	0x03B378C0 TBZ X0, 0x0, 0x3B3784C
	0x03B378C4 MOV X0, X20
	0x03B378C8 MOV X1, X31
	0x03B378CC BL 0x3745120
	0x03B378D0 MOVZ W8, 0x1
	0x03B378D4 STR X0, [X19]
	0x03B378D8 LDP X20, X19, [X31 + 0x10]
	0x03B378DC MOV W0, W8
	0x03B378E0 LDP X30, X21, [X31], #0x20
	0x03B378E4 RET
	0x03B378E8 BL 0x1C16F20
	0x03B378EC SUB X31, X31, 0xA0
	0x03B378F0 STP D9, D8, [X31 + 0x70]
	0x03B378F4 STP X30, X21, [X31 + 0x80]
	0x03B378F8 STP X20, X19, [X31 + 0x90]
	0x03B378FC ADRP X21, 0x8AB000
	0x03B37900 LDRB W8, [X21 + 0x80C]
	0x03B37904 MOV X20, X1
	0x03B37908 MOV X19, X0
	0x03B3790C TBNZ X8, 0x0, 0x3B37948
	0x03B37910 ADRP X0, 0x5BC000
	0x03B37914 LDR X0, [X0 + 0xA28]
	0x03B37918 BL 0x1C16CF4
	0x03B3791C ADRP X0, 0x5C2000
	0x03B37920 LDR X0, [X0 + 0x8C0]
	0x03B37924 BL 0x1C16CF4
	0x03B37928 ADRP X0, 0x5E4000
	0x03B3792C LDR X0, [X0 + 0x3C0]
	0x03B37930 BL 0x1C16CF4
	0x03B37934 ADRP X0, 0x623000
	0x03B37938 LDR X0, [X0 + 0xE0]
	0x03B3793C BL 0x1C16CF4
	0x03B37940 MOVZ W8, 0x1
	0x03B37944 STRB W8, [X21 + 0x80C]
	0x03B37948 STP X31, X31, [X31 + 0x60]
	0x03B3794C CBZ X20, 0x3B37B64
	0x03B37950 MOV X0, X19
	0x03B37954 BL 0x3B3766C
	0x03B37958 TBNZ X0, 0x0, 0x3B37B64
	0x03B3795C LDRB W8, [X19 + 0x191]
	0x03B37960 CBNZ W8, 0x3B37A24
	0x03B37964 ADD X21, X19, 0x150
	0x03B37968 MOV X0, X21
	0x03B3796C MOV X1, X31
	0x03B37970 BL 0x3745120
	0x03B37974 CBNZ X0, 0x3B37998
	0x03B37978 ADD X0, X19, 0xC0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X20, 0x8AC000
	008 Move X22, 0x5BD000
	009 Move X21, 0x5C0000
	010 Move W8, [X20+2057]
	011 Move X22, [X22+2512]
	012 Move X21, [X21+2424]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x5BD000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C0000
	022 Move X0, [X0+2424]
	023 Call 0x1C17CF4
	024 Move X0, 0x624000
	025 Move X0, [X0+184]
	026 Call 0x1C17CF4
	027 Move X0, 0x5BD000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0x5BE000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move X0, 0x5BD000
	034 Move X0, [X0+1440]
	035 Call 0x1C17CF4
	036 Move X0, 0x624000
	037 Move X0, [X0+192]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2057], W8
	041 Move X0, [X22]
	042 Move W1, 8
	043 Call 0x1C17D6C
	044 Move X20, X0
	045 Move V0, [X19+16]
	046 Move X0, [X21]
	047 Add X1, X31, 72
	048 Move [X31+72], D0
	049 Call 0x1C17E04
	050 Compare X20, 0
	051 JumpIfEqual {211}
	052 Move X21, X0
	053 Compare X0, 0
	054 JumpIfEqual {61}
	055 Move X8, [X20]
	056 Move X0, X21
	057 Move X1, [X8+64]
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {208}
	061 Move W8, [X20+24]
	062 Compare W8, 0
	063 JumpIfEqual {207}
	064 Move X8, 0x5BD000
	065 Move X8, [X8+1440]
	066 Move [X20+32], X21
	067 Move W9, [X19+40]
	068 Move X10, [X19+32]
	069 Move X0, [X8]
	070 Add X1, X31, 48
	071 Move [X31+56], W9
	072 Move [X31+48], X10
	073 Call 0x1C17E04
	074 Move X21, X0
	075 Compare X0, 0
	076 JumpIfEqual {83}
	077 Move X8, [X20]
	078 Move X0, X21
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {208}
	083 Move W8, [X20+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, 0x5BE000
	086 Move X8, [X8+1448]
	087 Move [X20+40], X21
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Add X1, X31, 32
	090 Move X0, [X8]
	091 Move [X31+2], V0
	092 Call 0x1C17E04
	093 Move X21, X0
	094 Compare X0, 0
	095 JumpIfEqual {102}
	096 Move X8, [X20]
	097 Move X0, X21
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {208}
	102 Move W8, [X20+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X22, 0x5BD000
	105 Move X22, [X22+2904]
	106 Move [X20+48], X21
	107 Move W8, [X19+64]
	108 Add X1, X31, 28
	109 Move X0, [X22]
	110 Move [X31+28], W8
	111 Call 0x1C17E04
	112 Move X21, X0
	113 Compare X0, 0
	114 JumpIfEqual {121}
	115 Move X8, [X20]
	116 Move X0, X21
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {208}
	121 Move W8, [X20+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X20+56], X21
	124 Move W8, [X19+72]
	125 Move X0, [X22]
	126 Add X1, X31, 24
	127 Move [X31+24], W8
	128 Call 0x1C17E04
	129 Move X21, X0
	130 Compare X0, 0
	131 JumpIfEqual {138}
	132 Move X8, [X20]
	133 Move X0, X21
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {208}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move [X20+64], X21
	141 Move W8, [X19+80]
	142 Move X0, [X22]
	143 Add X1, X31, 20
	144 Move [X31+20], W8
	145 Call 0x1C17E04
	146 Move X21, X0
	147 Compare X0, 0
	148 JumpIfEqual {155}
	149 Move X8, [X20]
	150 Move X0, X21
	151 Move X1, [X8+64]
	152 Call 0x1C17E00
	153 Compare X0, 0
	154 JumpIfEqual {208}
	155 Move W8, [X20+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X20+72], X21
	158 Move W8, [X19+28]
	159 Move X0, [X22]
	160 Add X1, X31, 16
	161 Move [X31+16], W8
	162 Call 0x1C17E04
	163 Move X21, X0
	164 Compare X0, 0
	165 JumpIfEqual {172}
	166 Move X8, [X20]
	167 Move X0, X21
	168 Move X1, [X8+64]
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {208}
	172 Move W8, [X20+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X8, 0x624000
	175 Move X8, [X8+184]
	176 Move [X20+80], X21
	177 Move W9, [X19+24]
	178 Add X1, X31, 12
	179 Move X0, [X8]
	180 Move [X31+12], W9
	181 Call 0x1C17E04
	182 Move X19, X0
	183 Compare X0, 0
	184 JumpIfEqual {191}
	185 Move X8, [X20]
	186 Move X0, X19
	187 Move X1, [X8+64]
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {208}
	191 Move W8, [X20+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X8, 0x624000
	194 Move X8, [X8+192]
	195 Move [X20+88], X19
	196 Move X1, X20
	197 Move X2, X31
	198 Move X0, [X8]
	199 Call String.Format, X0, X1
	200 Move X20, [X31+96]
	201 Move X19, [X31+104]
	202 Move X22, [X31+80]
	203 Move X21, [X31+88]
	204 Move X30, [X31+64]
	205 Add X31, X31, 112
	206 Return X0
	207 Call 0x1C17F28
	208 Call 0x1C17F44
	209 Move X1, X31
	210 Call 0x1C17DEC
	211 Call 0x1C17F20

Method: UnityEngine.SpatialTracking.PoseDataFlags get_poseDataFlags()

Disassembly:
	0x03B3797C MOV X1, X31
	0x03B37980 BL 0x3745120
	0x03B37984 CBNZ X0, 0x3B37998

ISIL:
	001 Move W8, [X0+24]
	002 And W0, W8, 3
	003 Return X0

Method: System.Void set_poseDataFlags(UnityEngine.SpatialTracking.PoseDataFlags value)

Disassembly:
	0x03B37988 ADD X0, X19, 0xA8
	0x03B3798C MOV X1, X31
	0x03B37990 BL 0x3745120

ISIL:
	001 And W8, W1, 3
	002 Move [X0+24], W8
	003 Return 

Method: System.Void .ctor(System.Double time, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean selectActive, System.Boolean activateActive, System.Boolean pressActive)

Disassembly:
	0x03B37994 CBZ X0, 0x3B37A24
	0x03B37998 LDR X8, [X21 + 0x10]
	0x03B3799C LDR V0, [X21]
	0x03B379A0 ADD X0, X31, 0x40
	0x03B379A4 STR X8, [X31 + 0x50]
	0x03B379A8 STR V0, [X31 + 0x4]
	0x03B379AC BL 0x3B3776C

ISIL:
	001 And W8, W1, 1
	002 And W9, W2, 1
	003 And W4, W3, 1
	004 Move W1, 3
	005 Move W2, W8
	006 Move W3, W9
	007 Call XRControllerState..ctor, X0, V0, X1, X2, X3, X4, X5, X6
	008 Return 

Method: System.Void .ctor(System.Double time, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.XR.InputTrackingState inputTrackingState)

Disassembly:
	0x03B379B0 TBNZ X0, 0x0, 0x3B379EC
	0x03B379B4 LDR X8, [X19 + 0xD0]
	0x03B379B8 LDR V0, [X19 + 0xC]
	0x03B379BC ADD X0, X31, 0x20
	0x03B379C0 STR X8, [X31 + 0x30]
	0x03B379C4 STR V0, [X31 + 0x2]
	0x03B379C8 BL 0x3B3776C
	0x03B379CC TBNZ X0, 0x0, 0x3B379EC
	0x03B379D0 LDR X8, [X19 + 0xB8]
	0x03B379D4 LDUR V0, [X19 + 0xA8]
	0x03B379D8 ADD X0, X31, 0x0
	0x03B379DC STR X8, [X31 + 0x10]
	0x03B379E0 STR V0, [X31]
	0x03B379E4 BL 0x3B3776C
	0x03B379E8 TBZ X0, 0x0, 0x3B37A1C
	0x03B379EC ADRP X8, 0x5BC000
	0x03B379F0 LDR X8, [X8 + 0xA28]
	0x03B379F4 LDR X0, [X8]
	0x03B379F8 LDR W8, [X0 + 0xE0]
	0x03B379FC CBNZ W8, 0x3B37A04
	0x03B37A00 BL 0x1C16DFC
	0x03B37A04 ADRP X8, 0x623000
	0x03B37A08 LDR X8, [X8 + 0xE0]
	0x03B37A0C MOV X1, X19
	0x03B37A10 MOV X2, X31
	0x03B37A14 LDR X0, [X8]
	0x03B37A18 BL 0x3C06B0C
	0x03B37A1C MOVZ W8, 0x1
	0x03B37A20 STRB W8, [X19 + 0x191]
	0x03B37A24 ADD X1, X31, 0x68
	0x03B37A28 MOV X0, X19
	0x03B37A2C STURH W31, [X20 + 0x41]
	0x03B37A30 STURH W31, [X20 + 0x49]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move W19, W1
	013 Move X1, X31
	014 Move V8, V7
	015 Move V9, V6
	016 Move V10, V5
	017 Move V11, V4
	018 Move V12, V3
	019 Move V13, V2
	020 Move V14, V1
	021 Move V15, V0
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move W8, 1
	025 Move [X20+16], D15
	026 Move [X20+32], S14
	027 Move [X20+40], S13
	028 Move [X20+40], S12
	029 Move [X20+48], S11
	030 Move [X20+48], S10
	031 Move [X20+56], S9
	032 Move [X20+56], S8
	033 Move [X20+24], W19
	034 Move [X20+28], W8
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Move X30, [X31+64]
	038 Move D9, [X31+48]
	039 Move D8, [X31+56]
	040 Move D11, [X31+32]
	041 Move D10, [X31+40]
	042 Move D13, [X31+16]
	043 Move D12, [X31+24]
	044 Move D15, [X31+96]
	045 Move D14, [X31+104]
	046 Return 

Method: System.Void .ctor(System.Double time, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.XR.InputTrackingState inputTrackingState, System.Boolean selectActive, System.Boolean activateActive, System.Boolean pressActive)

Disassembly:
	0x03B37104 ADD X0, X31, 0x40
	0x03B37108 MOV X1, X31
	0x03B3710C STR X9, [X31 + 0x50]
	0x03B37110 STR V0, [X31 + 0x4]
	0x03B37114 BL 0x3BB9958
	0x03B37118 LDR X8, [X19 + 0x160]
	0x03B3711C LDR V0, [X19 + 0x15]
	0x03B37120 ADD X0, X31, 0x20
	0x03B37124 MOV X1, X31
	0x03B37128 STR X8, [X31 + 0x30]
	0x03B3712C STR V0, [X31 + 0x2]
	0x03B37130 BL 0x3BB9958
	0x03B37134 ADD X8, X19, 0x168
	0x03B37138 LDR X9, [X8 + 0x10]
	0x03B3713C LDR V0, [X8]
	0x03B37140 ADD X0, X31, 0x0
	0x03B37144 MOV X1, X31
	0x03B37148 STR X9, [X31 + 0x10]
	0x03B3714C STR V0, [X31]
	0x03B37150 BL 0x3BB9958
	0x03B37154 LDP X30, X19, [X31 + 0x130]
	0x03B37158 LDR X29, [X31 + 0x120]
	0x03B3715C ADD X31, X31, 0x140
	0x03B37160 RET
	0x03B37164 RET
	0x03B37168 STP X30, X19, [X31 - 0x10]!
	0x03B3716C MOV X19, X0
	0x03B37170 BL 0x3B32924
	0x03B37174 MOV X0, X19
	0x03B37178 BL 0x3B37188
	0x03B3717C STR X31, [X19 + 0x198]
	0x03B37180 LDP X30, X19, [X31], #0x10
	0x03B37184 RET
	0x03B37188 SUB X31, X31, 0x140
	0x03B3718C STR X29, [X31 + 0x120]
	0x03B37190 STP X30, X19, [X31 + 0x130]
	0x03B37194 LDR X8, [X0 + 0xB8]
	0x03B37198 LDUR V0, [X0 + 0xA8]
	0x03B3719C MOV X19, X0
	0x03B371A0 ADD X0, X31, 0x100
	0x03B371A4 MOV X1, X31
	0x03B371A8 STR X8, [X31 + 0x110]
	0x03B371AC STR V0, [X31 + 0x10]
	0x03B371B0 BL 0x3BB99F0
	0x03B371B4 LDR X8, [X19 + 0xD0]
	0x03B371B8 LDR V0, [X19 + 0xC]
	0x03B371BC ADD X0, X31, 0xE0
	0x03B371C0 MOV X1, X31
	0x03B371C4 STR X8, [X31 + 0xF0]
	0x03B371C8 STR V0, [X31 + 0xE]
	0x03B371CC BL 0x3BB99F0
	0x03B371D0 LDR X8, [X19 + 0xE8]
	0x03B371D4 LDUR V0, [X19 + 0xD8]
	0x03B371D8 ADD X0, X31, 0xC0
	0x03B371DC MOV X1, X31
	0x03B371E0 STR X8, [X31 + 0xD0]
	0x03B371E4 STR V0, [X31 + 0xC]
	0x03B371E8 BL 0x3BB99F0
	0x03B371EC LDR X8, [X19 + 0x100]
	0x03B371F0 LDR V0, [X19 + 0xF]
	0x03B371F4 ADD X0, X31, 0xA0
	0x03B371F8 MOV X1, X31
	0x03B371FC STR X8, [X31 + 0xB0]
	0x03B37200 STR V0, [X31 + 0xA]
	0x03B37204 BL 0x3BB99F0
	0x03B37208 ADD X8, X19, 0x108
	0x03B3720C LDR X9, [X8 + 0x10]
	0x03B37210 LDR V0, [X8]
	0x03B37214 ADD X0, X31, 0x80
	0x03B37218 MOV X1, X31
	0x03B3721C STR X9, [X31 + 0x90]
	0x03B37220 STR V0, [X31 + 0x8]
	0x03B37224 BL 0x3BB99F0
	0x03B37228 LDR X8, [X19 + 0x130]
	0x03B3722C LDR V0, [X19 + 0x12]
	0x03B37230 ADD X0, X31, 0x60
	0x03B37234 MOV X1, X31
	0x03B37238 STR X8, [X31 + 0x70]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move W23, W1
	016 Move X1, X31
	017 Move W19, W4
	018 Move W20, W3
	019 Move W22, W2
	020 Move V8, V7
	021 Move V9, V6
	022 Move V10, V5
	023 Move V11, V4
	024 Move V12, V3
	025 Move V13, V2
	026 Move V14, V1
	027 Move V15, V0
	028 Move X21, X0
	029 Call Object..ctor, X0
	030 Move W10, [X21+64]
	031 And W9, W22, 1
	032 Move S0, W31
	033 Move S1, 1
	034 Move W8, 1
	035 Move [X21+64], W9
	036 Move W9, [X21+72]
	037 NotImplemented "Instruction FCSEL not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X21+28], W8
	040 Xor W8, W22, 1
	041 NotImplemented "Instruction CSET not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 And W8, W11, W8
	044 And W11, W20, 1
	045 Move [X21+72], W11
	046 Move W11, [X21+80]
	047 NotImplemented "Instruction FCSEL not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Xor W9, W20, 1
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move [X21+66], W8
	052 NotImplemented "Instruction CSET not yet implemented."
	053 And W9, W12, W9
	054 And W12, W19, 1
	055 And W10, W10, W22
	056 And W8, W8, W20
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X21+65], W10
	060 Xor W10, W19, 1
	061 Move [X21+73], W8
	062 Move [X21+74], W9
	063 NotImplemented "Instruction CSET not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 And W9, W9, W19
	066 And W8, W8, W10
	067 Move [X21+16], D15
	068 Move [X21+32], S14
	069 Move [X21+40], S13
	070 Move [X21+40], S12
	071 Move [X21+48], S11
	072 Move [X21+48], S10
	073 Move [X21+56], S9
	074 Move [X21+24], W23
	075 Move [X21+56], S8
	076 Move [X21+64], S2
	077 Move [X21+68], S3
	078 Move [X21+76], S0
	079 Move [X21+81], W9
	080 Move [X21+82], W8
	081 Move [X21+80], W12
	082 Move X20, [X31+96]
	083 Move X19, [X31+104]
	084 Move X22, [X31+80]
	085 Move X21, [X31+88]
	086 Move X30, [X31+64]
	087 Move X23, [X31+72]
	088 Move D9, [X31+48]
	089 Move D8, [X31+56]
	090 Move D11, [X31+32]
	091 Move D10, [X31+40]
	092 Move D13, [X31+16]
	093 Move D12, [X31+24]
	094 Move D15, [X31+112]
	095 Move D14, [X31+120]
	096 Return 

Method: System.Void .ctor(System.Double time, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.XR.InputTrackingState inputTrackingState, System.Boolean selectActive, System.Boolean activateActive, System.Boolean pressActive, System.Single selectValue, System.Single activateValue, System.Single pressValue)

Disassembly:
	0x03B37A34 STURH W31, [X20 + 0x51]
	0x03B37A38 BL 0x3B37B7C
	0x03B37A3C TBZ X0, 0x0, 0x3B37A6C
	0x03B37A40 LDR X0, [X31 + 0x68]
	0x03B37A44 CBZ X0, 0x3B37B78
	0x03B37A48 ADRP X8, 0x5C2000
	0x03B37A4C LDR X8, [X8 + 0x8C0]
	0x03B37A50 LDR X1, [X8]
	0x03B37A54 BL 0x21F5D8C
	0x03B37A58 LDRB W8, [X20 + 0x40]
	0x03B37A5C STR S0, [X20 + 0x3C]
	0x03B37A60 STRB W31, [X20 + 0x42]
	0x03B37A64 MOVZ W9, 0x1
	0x03B37A68 B 0x3B37AF4
	0x03B37A6C ADD X1, X31, 0x60
	0x03B37A70 MOV X0, X19
	0x03B37A74 BL 0x3B37C58
	0x03B37A78 TBZ X0, 0x0, 0x3B37B04
	0x03B37A7C LDR X0, [X31 + 0x60]
	0x03B37A80 CBZ X0, 0x3B37B78
	0x03B37A84 ADRP X8, 0x5E4000
	0x03B37A88 LDR X8, [X8 + 0x3C0]
	0x03B37A8C LDR X1, [X8]
	0x03B37A90 BL 0x21F5E68
	0x03B37A94 ADRP X21, 0x8A2000
	0x03B37A98 LDRB W8, [X21 + 0x818]
	0x03B37A9C MOV V8.16B, V0.16B
	0x03B37AA0 MOV V9.16B, V1.16B
	0x03B37AA4 CBNZ W8, 0x3B37ABC
	0x03B37AA8 ADRP X0, 0x5BC000
	0x03B37AAC LDR X0, [X0 + 0x5A8]
	0x03B37AB0 BL 0x1C16CF4
	0x03B37AB4 MOVZ W8, 0x1
	0x03B37AB8 STRB W8, [X21 + 0x818]
	0x03B37ABC ADRP X8, 0x5BC000
	0x03B37AC0 LDR X8, [X8 + 0x5A8]
	0x03B37AC4 LDR X0, [X8]
	0x03B37AC8 LDR W8, [X0 + 0xE0]
	0x03B37ACC CBNZ W8, 0x3B37AD4
	0x03B37AD0 BL 0x1C16DFC
	0x03B37AD4 LDRB W8, [X20 + 0x40]
	0x03B37AD8 FMUL S0, S8, S8
	0x03B37ADC FMUL S1, S9, S9
	0x03B37AE0 FADD S0, S0, S1
	0x03B37AE4 MOVZ W9, 0x1
	0x03B37AE8 FSQRT S0, S0
	0x03B37AEC STRB W31, [X20 + 0x42]
	0x03B37AF0 STR S0, [X20 + 0x3C]
	0x03B37AF4 EOR W8, W8, 0x1
	0x03B37AF8 STRB W8, [X20 + 0x41]
	0x03B37AFC STRB W9, [X20 + 0x40]
	0x03B37B00 B 0x3B37B14
	0x03B37B04 LDRB W8, [X20 + 0x40]
	0x03B37B08 STR W31, [X20 + 0x3C]
	0x03B37B0C STRH W31, [X20 + 0x40]
	0x03B37B10 STRB W8, [X20 + 0x42]
	0x03B37B14 ADD X20, X19, 0x120
	0x03B37B18 MOV X0, X20
	0x03B37B1C MOV X1, X31
	0x03B37B20 BL 0x3745120
	0x03B37B24 CBZ X0, 0x3B37B5C
	0x03B37B28 MOV X0, X20
	0x03B37B2C MOV X1, X31
	0x03B37B30 BL 0x3745120
	0x03B37B34 CBZ X0, 0x3B37B78
	0x03B37B38 ADRP X8, 0x5C2000
	0x03B37B3C LDR X8, [X8 + 0x8C0]
	0x03B37B40 LDR X1, [X8]
	0x03B37B44 BL 0x21F5D8C
	0x03B37B48 MOV X0, X31
	0x03B37B4C MOV V8.16B, V0.16B
	0x03B37B50 BL 0x3C0E100
	0x03B37B54 FDIV S0, S8, S0
	0x03B37B58 B 0x3B37B60
	0x03B37B5C FMOV S0, W31
	0x03B37B60 STR S0, [X19 + 0x18C]
	0x03B37B64 LDP X20, X19, [X31 + 0x90]
	0x03B37B68 LDP X30, X21, [X31 + 0x80]
	0x03B37B6C LDP D9, D8, [X31 + 0x70]
	0x03B37B70 ADD X31, X31, 0xA0
	0x03B37B74 RET

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move V8, [X31+144]
	017 Move V9, [X31+136]
	018 Move V10, [X31+128]
	019 Move W22, W1
	020 Move X1, X31
	021 Move W19, W4
	022 Move W20, W3
	023 Move W21, W2
	024 Move [X31+8], S6
	025 Move [X31+16], S7
	026 Move [X31+4], S5
	027 Move V11, V4
	028 Move V12, V3
	029 Move V13, V2
	030 Move V14, V1
	031 Move V15, V0
	032 Move X23, X0
	033 Call Object..ctor, X0
	034 Move W8, 1
	035 Move W9, [X23+64]
	036 Move [X23+28], W8
	037 Move W8, [X23+72]
	038 Move V0, [X31+4]
	039 And W11, W21, 1
	040 Move [X23+64], W11
	041 And W11, W20, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X23+72], W11
	044 NotImplemented "Instruction CSET not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, [X23+80]
	048 Move [X23+48], S0
	049 Move V0, [X31+8]
	050 Xor W10, W21, 1
	051 And W9, W9, W10
	052 NotImplemented "Instruction CSET not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X23+52], S0
	056 Move V0, [X31+12]
	057 Xor W8, W20, 1
	058 And W11, W11, W21
	059 Move [X23+66], W9
	060 And W9, W12, W20
	061 And W8, W10, W8
	062 Move [X23+65], W11
	063 Xor W11, W19, 1
	064 Move [X23+73], W9
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move [X23+74], W8
	067 NotImplemented "Instruction CSET not yet implemented."
	068 And W10, W19, 1
	069 And W8, W8, W19
	070 And W9, W9, W11
	071 Move [X23+24], W22
	072 Move [X23+16], D15
	073 Move [X23+32], S14
	074 Move [X23+40], S13
	075 Move [X23+40], S12
	076 Move [X23+48], S11
	077 Move [X23+56], S0
	078 Move [X23+64], S10
	079 Move [X23+68], S9
	080 Move [X23+76], S8
	081 Move [X23+81], W8
	082 Move [X23+82], W9
	083 Move [X23+80], W10
	084 Move X20, [X31+112]
	085 Move X19, [X31+120]
	086 Move X22, [X31+96]
	087 Move X21, [X31+104]
	088 Move X30, [X31+80]
	089 Move X23, [X31+88]
	090 Move D9, [X31+64]
	091 Move D8, [X31+72]
	092 Move D11, [X31+48]
	093 Move D10, [X31+56]
	094 Move D13, [X31+32]
	095 Move D12, [X31+40]
	096 Move D15, [X31+16]
	097 Move D14, [X31+24]
	098 Add X31, X31, 128
	099 Return 

Method: System.Void ResetInputs()

Disassembly:
	0x03B37B78 BL 0x1C16F20
	0x03B37B7C STP X30, X21, [X31 - 0x20]!
	0x03B37B80 STP X20, X19, [X31 + 0x10]
	0x03B37B84 ADD X21, X0, 0x108

ISIL:
	001 NotImplemented "Instruction STURH not yet implemented."
	002 NotImplemented "Instruction STURH not yet implemented."
	003 NotImplemented "Instruction STURH not yet implemented."
	004 Return 

