Type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable

Method: System.Void add_registered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> value)

Disassembly:
	0x03B3B0A8 LDR X8, [X19]
	0x03B3B0AC MOV X0, X19
	0x03B3B0B0 LDR X9, [X8 + 0x5C8]
	0x03B3B0B4 LDR X1, [X8 + 0x5D0]
	0x03B3B0B8 ADD X8, X31, 0x8
	0x03B3B0BC BLR X9
	0x03B3B0C0 LDR V0, [X31 + 0x14]
	0x03B3B0C4 LDP X20, X19, [X31 + 0x30]
	0x03B3B0C8 LDP X30, X21, [X31 + 0x20]
	0x03B3B0CC ADD X31, X31, 0x40
	0x03B3B0D0 RET
	0x03B3B0D4 BL 0x1C16F20
	0x03B3B0D8 SUB X31, X31, 0x60
	0x03B3B0DC STR D10, [X31 + 0x30]
	0x03B3B0E0 STP D9, D8, [X31 + 0x40]
	0x03B3B0E4 STP X30, X19, [X31 + 0x50]
	0x03B3B0E8 STP X31, X31, [X31 + 0x18]
	0x03B3B0EC STR X31, [X31 + 0x28]
	0x03B3B0F0 LDR X10, [X0 + 0x30]
	0x03B3B0F4 MOV V8.16B, V2.16B
	0x03B3B0F8 MOV V9.16B, V1.16B
	0x03B3B0FC MOV V10.16B, V0.16B
	0x03B3B100 MOV X9, X0
	0x03B3B104 MOV X19, X8
	0x03B3B108 CBZ X10, 0x3B3B144
	0x03B3B10C LDR X11, [X10 + 0x18]
	0x03B3B110 LDR X0, [X10 + 0x40]
	0x03B3B114 LDR X2, [X10 + 0x28]
	0x03B3B118 ADD X8, X31, 0x0
	0x03B3B11C MOV X1, X9
	0x03B3B120 MOV V0.16B, V10.16B
	0x03B3B124 MOV V1.16B, V9.16B
	0x03B3B128 MOV V2.16B, V8.16B
	0x03B3B12C BLR X11
	0x03B3B130 LDR X8, [X31 + 0x10]
	0x03B3B134 LDR V0, [X31]
	0x03B3B138 STR X8, [X19 + 0x10]
	0x03B3B13C STR V0, [X19]
	0x03B3B140 B 0x3B3B1A4
	0x03B3B144 LDR W8, [X9 + 0x54]
	0x03B3B148 CMP W8, 0x1
	0x03B3B14C B.EQ 0x3B3B178
	0x03B3B150 CMP W8, 0x2
	0x03B3B154 B.NE 0x3B3B1B8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8A8000
	009 Move W8, [X21+2078]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x620000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2078], W8
	021 Move X24, 0x620000
	022 Add X20, X20, 32
	023 Move X21, [X20]
	024 Move X24, [X24+584]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_registered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> value)

Disassembly:
	0x03B3B158 ADD X1, X31, 0x18
	0x03B3B15C MOV X0, X9
	0x03B3B160 MOV V0.16B, V10.16B
	0x03B3B164 MOV V1.16B, V9.16B
	0x03B3B168 MOV V2.16B, V8.16B
	0x03B3B16C MOV X2, X31
	0x03B3B170 BL 0x3B8EA88
	0x03B3B174 B 0x3B3B194
	0x03B3B178 ADD X1, X31, 0x18
	0x03B3B17C MOV X0, X9
	0x03B3B180 MOV V0.16B, V10.16B
	0x03B3B184 MOV V1.16B, V9.16B
	0x03B3B188 MOV V2.16B, V8.16B
	0x03B3B18C MOV X2, X31
	0x03B3B190 BL 0x3B8E728
	0x03B3B194 LDUR V0, [X31 + 0x18]
	0x03B3B198 LDR X8, [X31 + 0x28]
	0x03B3B19C STR V0, [X19]
	0x03B3B1A0 STR X8, [X19 + 0x10]
	0x03B3B1A4 LDP X30, X19, [X31 + 0x50]
	0x03B3B1A8 LDP D9, D8, [X31 + 0x40]
	0x03B3B1AC LDR V10, [X31 + 0x30]
	0x03B3B1B0 ADD X31, X31, 0x60
	0x03B3B1B4 RET
	0x03B3B1B8 MOV X0, X9
	0x03B3B1BC MOV X1, X31
	0x03B3B1C0 BL 0x3C32E90
	0x03B3B1C4 CBZ X0, 0x3B3B208
	0x03B3B1C8 MOV X1, X31
	0x03B3B1CC BL 0x3C3F58C
	0x03B3B1D0 FSUB S3, S0, S10
	0x03B3B1D4 FSUB S4, S1, S9
	0x03B3B1D8 FSUB S5, S2, S8
	0x03B3B1DC STP S0, S1, [X31 + 0x18]
	0x03B3B1E0 FMUL S0, S3, S3
	0x03B3B1E4 FMUL S1, S4, S4
	0x03B3B1E8 FMUL S3, S5, S5
	0x03B3B1EC FADD S0, S0, S1
	0x03B3B1F0 FADD S0, S3, S0
	0x03B3B1F4 STP S2, S0, [X31 + 0x20]
	0x03B3B1F8 LDUR V0, [X31 + 0x18]
	0x03B3B1FC STR X31, [X31 + 0x28]
	0x03B3B200 STR X31, [X19 + 0x10]
	0x03B3B204 B 0x3B3B13C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8A8000
	009 Move W8, [X21+2079]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x620000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2079], W8
	021 Move X24, 0x620000
	022 Add X20, X20, 32
	023 Move X21, [X20]
	024 Move X24, [X24+584]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_unregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> value)

Disassembly:
	0x03B3B208 BL 0x1C16F20
	0x03B3B20C SUB X31, X31, 0x30
	0x03B3B210 STP X30, X21, [X31 + 0x10]
	0x03B3B214 STP X20, X19, [X31 + 0x20]
	0x03B3B218 ADRP X21, 0x8A7000
	0x03B3B21C LDRB W8, [X21 + 0x830]
	0x03B3B220 MOV X19, X1
	0x03B3B224 MOV X20, X0
	0x03B3B228 TBNZ X8, 0x0, 0x3B3B240
	0x03B3B22C ADRP X0, 0x61F000
	0x03B3B230 LDR X0, [X0 + 0x300]
	0x03B3B234 BL 0x1C16CF4
	0x03B3B238 MOVZ W8, 0x1
	0x03B3B23C STRB W8, [X21 + 0x830]
	0x03B3B240 STR W31, [X31 + 0xC]
	0x03B3B244 LDR X0, [X20 + 0x170]
	0x03B3B248 CBZ X0, 0x3B3B284
	0x03B3B24C ADRP X8, 0x61F000
	0x03B3B250 LDR X8, [X8 + 0x300]
	0x03B3B254 ADD X2, X31, 0xC
	0x03B3B258 MOV X1, X19
	0x03B3B25C LDR X3, [X8]
	0x03B3B260 BL 0x2AB64B4
	0x03B3B264 LDR V0, [X31 + 0xC]
	0x03B3B268 LDP X20, X19, [X31 + 0x20]
	0x03B3B26C LDP X30, X21, [X31 + 0x10]
	0x03B3B270 ANDS W31, W0, 0x1
	0x03B3B274 FMOV S1, W31
	0x03B3B278 FCSEL S0, S0, S1, NE
	0x03B3B27C ADD X31, X31, 0x30
	0x03B3B280 RET
	0x03B3B284 BL 0x1C16F20
	0x03B3B288 STP X30, X21, [X31 - 0x20]!
	0x03B3B28C STP X20, X19, [X31 + 0x10]
	0x03B3B290 ADRP X21, 0x8A7000
	0x03B3B294 LDRB W8, [X21 + 0x831]
	0x03B3B298 MOV X19, X1
	0x03B3B29C MOV X20, X0
	0x03B3B2A0 TBNZ X8, 0x0, 0x3B3B2B8
	0x03B3B2A4 ADRP X0, 0x61F000
	0x03B3B2A8 LDR X0, [X0 + 0x308]
	0x03B3B2AC BL 0x1C16CF4
	0x03B3B2B0 MOVZ W8, 0x1
	0x03B3B2B4 STRB W8, [X21 + 0x831]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8A8000
	009 Move W8, [X21+2080]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x620000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2080], W8
	021 Move X24, 0x620000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+592]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_unregistered(System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> value)

Disassembly:
	0x03B3B2B8 LDRB W8, [X20 + 0x68]
	0x03B3B2BC CBZ W8, 0x3B3B2D0
	0x03B3B2C0 MOVZ W0, 0x1
	0x03B3B2C4 LDP X20, X19, [X31 + 0x10]
	0x03B3B2C8 LDP X30, X21, [X31], #0x20
	0x03B3B2CC RET
	0x03B3B2D0 CBZ X19, 0x3B3B2C0
	0x03B3B2D4 ADRP X8, 0x61F000
	0x03B3B2D8 LDR X8, [X8 + 0x308]
	0x03B3B2DC LDR X9, [X19]
	0x03B3B2E0 LDR X8, [X8]
	0x03B3B2E4 LDRB W11, [X9 + 0x130]
	0x03B3B2E8 LDRB W10, [X8 + 0x130]
	0x03B3B2EC CMP W11, W10
	0x03B3B2F0 B.CC 0x3B3B2C0
	0x03B3B2F4 LDR X9, [X9 + 0xC8]
	0x03B3B2F8 ADD X9, X9, X10, 0x3, LSL
	0x03B3B2FC LDUR X9, [X9 - 0x8]
	0x03B3B300 CMP X9, X8
	0x03B3B304 CSET W0, NE
	0x03B3B308 B 0x3B3B2C4
	0x03B3B30C STP X30, X21, [X31 - 0x20]!
	0x03B3B310 STP X20, X19, [X31 + 0x10]
	0x03B3B314 ADRP X21, 0x8A7000
	0x03B3B318 LDRB W8, [X21 + 0x832]
	0x03B3B31C MOV X19, X1
	0x03B3B320 MOV X20, X0
	0x03B3B324 TBNZ X8, 0x0, 0x3B3B33C
	0x03B3B328 ADRP X0, 0x61F000
	0x03B3B32C LDR X0, [X0 + 0x308]
	0x03B3B330 BL 0x1C16CF4
	0x03B3B334 MOVZ W8, 0x1
	0x03B3B338 STRB W8, [X21 + 0x832]
	0x03B3B33C LDRB W8, [X20 + 0x68]
	0x03B3B340 CBZ W8, 0x3B3B34C
	0x03B3B344 LDRB W8, [X20 + 0x69]
	0x03B3B348 CBNZ W8, 0x3B3B370
	0x03B3B34C CBZ X19, 0x3B3B370
	0x03B3B350 ADRP X8, 0x61F000
	0x03B3B354 LDR X8, [X8 + 0x308]
	0x03B3B358 LDR X9, [X19]
	0x03B3B35C LDR X8, [X8]
	0x03B3B360 LDRB W11, [X9 + 0x130]
	0x03B3B364 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8A8000
	009 Move W8, [X21+2081]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x620000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2081], W8
	021 Move X24, 0x620000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+592]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Func`3<UnityEngine.XR.Interaction.Toolkit.IXRInteractable, UnityEngine.Vector3, UnityEngine.XR.Interaction.Toolkit.DistanceInfo> get_getDistanceOverride()

Disassembly:
	0x03B3B368 CMP W11, W10
	0x03B3B36C B.CS 0x3B3B378

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_getDistanceOverride(System.Func`3<UnityEngine.XR.Interaction.Toolkit.IXRInteractable, UnityEngine.Vector3, UnityEngine.XR.Interaction.Toolkit.DistanceInfo> value)

Disassembly:
	0x03B3B370 MOVZ W0, 0x1
	0x03B3B374 B 0x3B3B38C

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager get_interactionManager()

Disassembly:
	0x03B3B378 LDR X9, [X9 + 0xC8]
	0x03B3B37C ADD X9, X9, X10, 0x3, LSL

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_interactionManager(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager value)

Disassembly:
	0x03B3B380 LDUR X9, [X9 - 0x8]
	0x03B3B384 CMP X9, X8
	0x03B3B388 CSET W0, NE
	0x03B3B38C LDP X20, X19, [X31 + 0x10]
	0x03B3B390 LDP X30, X21, [X31], #0x20
	0x03B3B394 RET
	0x03B3B398 STP X30, X21, [X31 - 0x20]!
	0x03B3B39C STP X20, X19, [X31 + 0x10]
	0x03B3B3A0 ADRP X21, 0x8A7000
	0x03B3B3A4 LDRB W8, [X21 + 0x833]
	0x03B3B3A8 MOV X19, X1
	0x03B3B3AC MOV X20, X0
	0x03B3B3B0 TBNZ X8, 0x0, 0x3B3B3C8
	0x03B3B3B4 ADRP X0, 0x61F000
	0x03B3B3B8 LDR X0, [X0 + 0x310]
	0x03B3B3BC BL 0x1C16CF4
	0x03B3B3C0 MOVZ W8, 0x1
	0x03B3B3C4 STRB W8, [X21 + 0x833]
	0x03B3B3C8 LDR X0, [X20 + 0xF0]
	0x03B3B3CC CBZ X0, 0x3B3B3EC
	0x03B3B3D0 ADRP X8, 0x61F000
	0x03B3B3D4 LDR X8, [X8 + 0x310]
	0x03B3B3D8 MOV X1, X19
	0x03B3B3DC LDP X20, X19, [X31 + 0x10]
	0x03B3B3E0 LDR X2, [X8]
	0x03B3B3E4 LDP X30, X21, [X31], #0x20
	0x03B3B3E8 B 0x2D58148
	0x03B3B3EC BL 0x1C16F20
	0x03B3B3F0 STP X30, X21, [X31 - 0x20]!
	0x03B3B3F4 STP X20, X19, [X31 + 0x10]
	0x03B3B3F8 ADRP X21, 0x8A7000
	0x03B3B3FC LDRB W8, [X21 + 0x834]
	0x03B3B400 MOV X19, X1
	0x03B3B404 MOV X20, X0
	0x03B3B408 TBNZ X8, 0x0, 0x3B3B420
	0x03B3B40C ADRP X0, 0x61F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8A8000
	007 Move X21, 0x5B9000
	008 Move W8, [X22+2082]
	009 Move X21, [X21+2416]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5B9000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2082], W8
	021 Move [X19+56], X20
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call Application.get_isPlaying
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {46}
	033 Move X0, X19
	034 Move X1, X31
	035 Call Behaviour.get_isActiveAndEnabled, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {46}
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 

Method: System.Collections.Generic.List`1<UnityEngine.Collider> get_colliders()

Disassembly:
	0x03B3B4DC MOV X19, X0
	0x03B3B4E0 TBNZ X8, 0x0, 0x3B3B4F8

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask get_interactionLayers()

Disassembly:
	0x03B3B4E4 ADRP X0, 0x61F000
	0x03B3B4E8 LDR X0, [X0 + 0x328]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_interactionLayers(UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask value)

Disassembly:
	0x03B3B4EC BL 0x1C16CF4
	0x03B3B4F0 MOVZ W8, 0x1

ISIL:
	001 Move [X0+76], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode get_distanceCalculationMode()

Disassembly:
	0x03B3B4F4 STRB W8, [X21 + 0x836]
	0x03B3B4F8 LDR X1, [X22]

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_distanceCalculationMode(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode value)

Disassembly:
	0x03B3B4FC MOV X0, X20
	0x03B3B500 BL 0x1C16E00

ISIL:
	001 Move [X0+84], W1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode get_selectMode()

Disassembly:
	0x03B3B504 CBZ X0, 0x3B3B520
	0x03B3B508 MOV X1, X0

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_selectMode(UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode value)

Disassembly:
	0x03B3B50C MOV X0, X19
	0x03B3B510 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+88], W1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.InteractableFocusMode get_focusMode()

Disassembly:
	0x03B3B514 LDP X22, X21, [X31 + 0x10]
	0x03B3B518 LDR X30, [X31], #0x30

ISIL:
	001 Move W0, [X0+92]
	002 Return X0

Method: System.Void set_focusMode(UnityEngine.XR.Interaction.Toolkit.InteractableFocusMode value)

Disassembly:
	0x03B3B51C B 0x3B3B3F0
	0x03B3B520 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+92], W1
	002 Return 

Method: UnityEngine.GameObject get_customReticle()

Disassembly:
	0x03B3B524 LDP X22, X21, [X31 + 0x10]
	0x03B3B528 LDR X30, [X31], #0x30

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_customReticle(UnityEngine.GameObject value)

Disassembly:
	0x03B3B52C RET
	0x03B3B530 SUB X31, X31, 0x30

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.Boolean get_allowGazeInteraction()

Disassembly:
	0x03B3B534 STP X30, X21, [X31 + 0x10]
	0x03B3B538 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_allowGazeInteraction(System.Boolean value)

Disassembly:
	0x03B3B53C ADRP X21, 0x8A7000
	0x03B3B540 LDRB W8, [X21 + 0x837]
	0x03B3B544 MOV X19, X1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.Boolean get_allowGazeSelect()

Disassembly:
	0x03B3B548 MOV X20, X0
	0x03B3B54C TBNZ X8, 0x0, 0x3B3B564

ISIL:
	001 Move W0, [X0+105]
	002 Return X0

Method: System.Void set_allowGazeSelect(System.Boolean value)

Disassembly:
	0x03B3B550 ADRP X0, 0x61F000
	0x03B3B554 LDR X0, [X0 + 0x330]
	0x03B3B558 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+105], W8
	003 Return 

Method: System.Boolean get_overrideGazeTimeToSelect()

Disassembly:
	0x03B3B55C MOVZ W8, 0x1
	0x03B3B560 STRB W8, [X21 + 0x837]

ISIL:
	001 Move W0, [X0+106]
	002 Return X0

Method: System.Void set_overrideGazeTimeToSelect(System.Boolean value)

Disassembly:
	0x03B3B564 STR X31, [X31 + 0x8]
	0x03B3B568 LDR X0, [X20 + 0x160]
	0x03B3B56C CBZ X0, 0x3B3B5A4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+106], W8
	003 Return 

Method: System.Single get_gazeTimeToSelect()

Disassembly:
	0x03B3B570 ADRP X8, 0x61F000
	0x03B3B574 LDR X8, [X8 + 0x330]

ISIL:
	001 Move V0, [X0+108]
	002 Return V0

Method: System.Void set_gazeTimeToSelect(System.Single value)

Disassembly:
	0x03B3B578 ADD X2, X31, 0x8
	0x03B3B57C MOV X1, X19

ISIL:
	001 Move [X0+108], S0
	002 Return 

Method: System.Boolean get_overrideTimeToAutoDeselectGaze()

Disassembly:
	0x03B3B580 LDR X3, [X8]
	0x03B3B584 BL 0x2AA6B2C

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Void set_overrideTimeToAutoDeselectGaze(System.Boolean value)

Disassembly:
	0x03B3B588 LDR X8, [X31 + 0x8]
	0x03B3B58C LDP X20, X19, [X31 + 0x20]
	0x03B3B590 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+112], W8
	003 Return 

Method: System.Single get_timeToAutoDeselectGaze()

Disassembly:
	0x03B3B594 ANDS W31, W0, 0x1
	0x03B3B598 CSEL X0, X8, X31, NE

ISIL:
	001 Move V0, [X0+116]
	002 Return V0

Method: System.Void set_timeToAutoDeselectGaze(System.Single value)

Disassembly:
	0x03B3B59C ADD X31, X31, 0x30
	0x03B3B5A0 RET

ISIL:
	001 Move [X0+116], S0
	002 Return 

Method: System.Boolean get_allowGazeAssistance()

Disassembly:
	0x03B3B5A4 BL 0x1C16F20
	0x03B3B5A8 SUB X31, X31, 0x40

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_allowGazeAssistance(System.Boolean value)

Disassembly:
	0x03B3B5AC STP X30, X23, [X31 + 0x10]
	0x03B3B5B0 STP X22, X21, [X31 + 0x20]
	0x03B3B5B4 STP X20, X19, [X31 + 0x30]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+120], W8
	003 Return 

Method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent get_firstHoverEntered()

Disassembly:
	0x03B3B5B8 ADRP X21, 0x8A7000
	0x03B3B5BC LDRB W8, [X21 + 0x838]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_firstHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent value)

Disassembly:
	0x03B3B5C0 MOV X19, X1
	0x03B3B5C4 MOV X20, X0

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.HoverExitEvent get_lastHoverExited()

Disassembly:
	0x03B3B5C8 TBNZ X8, 0x0, 0x3B3B634
	0x03B3B5CC ADRP X0, 0x61F000

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_lastHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEvent value)

Disassembly:
	0x03B3B5D0 LDR X0, [X0 + 0x338]
	0x03B3B5D4 BL 0x1C16CF4

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent get_hoverEntered()

Disassembly:
	0x03B3B5D8 ADRP X0, 0x61F000
	0x03B3B5DC LDR X0, [X0 + 0x340]

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_hoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent value)

Disassembly:
	0x03B3B5E0 BL 0x1C16CF4
	0x03B3B5E4 ADRP X0, 0x61F000

ISIL:
	001 Move [X0+144], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.HoverExitEvent get_hoverExited()

Disassembly:
	0x03B3B5E8 LDR X0, [X0 + 0x348]
	0x03B3B5EC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_hoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEvent value)

Disassembly:
	0x03B3B5F0 ADRP X0, 0x61F000
	0x03B3B5F4 LDR X0, [X0 + 0x330]

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent get_firstSelectEntered()

Disassembly:
	0x03B3B5F8 BL 0x1C16CF4
	0x03B3B5FC ADRP X0, 0x61F000

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_firstSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent value)

Disassembly:
	0x03B3B600 LDR X0, [X0 + 0x350]
	0x03B3B604 BL 0x1C16CF4

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.SelectExitEvent get_lastSelectExited()

Disassembly:
	0x03B3B608 ADRP X0, 0x61F000
	0x03B3B60C LDR X0, [X0 + 0x2F8]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_lastSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEvent value)

Disassembly:
	0x03B3B610 BL 0x1C16CF4
	0x03B3B614 ADRP X0, 0x5B8000

ISIL:
	001 Move [X0+168], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent get_selectEntered()

Disassembly:
	0x03B3B618 LDR X0, [X0 + 0xD78]
	0x03B3B61C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_selectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent value)

Disassembly:
	0x03B3B620 ADRP X0, 0x5B8000
	0x03B3B624 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.SelectExitEvent get_selectExited()

Disassembly:
	0x03B3B628 BL 0x1C16CF4
	0x03B3B62C MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void set_selectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEvent value)

Disassembly:
	0x03B3B630 STRB W8, [X21 + 0x838]
	0x03B3B634 ADRP X23, 0x5B8000

ISIL:
	001 Move [X0+184], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.FocusEnterEvent get_firstFocusEntered()

Disassembly:
	0x03B3B638 LDR X23, [X23 + 0x598]
	0x03B3B63C STR X31, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Void set_firstFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEvent value)

Disassembly:
	0x03B3B640 CBZ X19, 0x3B3B68C
	0x03B3B644 ADRP X10, 0x61F000

ISIL:
	001 Move [X0+192], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.FocusExitEvent get_lastFocusExited()

Disassembly:
	0x03B3B648 LDR X8, [X19]
	0x03B3B64C LDR X10, [X10 + 0x2F8]

ISIL:
	001 Move X0, [X0+200]
	002 Return X0

Method: System.Void set_lastFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEvent value)

Disassembly:
	0x03B3B650 LDRH W9, [X8 + 0x12E]
	0x03B3B654 LDR X1, [X10]

ISIL:
	001 Move [X0+200], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.FocusEnterEvent get_focusEntered()

Disassembly:
	0x03B3B658 CBZ X9, 0x3B3B67C
	0x03B3B65C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X0, [X0+208]
	002 Return X0

Method: System.Void set_focusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEvent value)

Disassembly:
	0x03B3B660 ADD X10, X10, 0x8
	0x03B3B664 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X0+208], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.FocusExitEvent get_focusExited()

Disassembly:
	0x03B3B668 CMP X11, X1
	0x03B3B66C B.EQ 0x3B3B694

ISIL:
	001 Move X0, [X0+216]
	002 Return X0

Method: System.Void set_focusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEvent value)

Disassembly:
	0x03B3B670 SUBS X9, X9, 0x1
	0x03B3B674 ADD X10, X10, 0x10

ISIL:
	001 Move [X0+216], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.ActivateEvent get_activated()

Disassembly:
	0x03B3B678 B.NE 0x3B3B664
	0x03B3B67C MOVZ W2, 0x5

ISIL:
	001 Move X0, [X0+224]
	002 Return X0

Method: System.Void set_activated(UnityEngine.XR.Interaction.Toolkit.ActivateEvent value)

Disassembly:
	0x03B3B680 MOV X0, X19
	0x03B3B684 BL 0x1C5C788

ISIL:
	001 Move [X0+224], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.DeactivateEvent get_deactivated()

Disassembly:
	0x03B3B688 B 0x3B3B6A4
	0x03B3B68C MOV X21, X31

ISIL:
	001 Move X0, [X0+232]
	002 Return X0

Method: System.Void set_deactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEvent value)

Disassembly:
	0x03B3B690 B 0x3B3B6B4
	0x03B3B694 LDR W9, [X10]

ISIL:
	001 Move [X0+232], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor> get_interactorsHovering()

Disassembly:
	0x03B3B698 ADD W9, W9, 0x5
	0x03B3B69C ADD X8, X8, W9, 0x4, SXTW
	0x03B3B6A0 ADD X0, X8, 0x138
	0x03B3B6A4 LDP X8, X1, [X0]
	0x03B3B6A8 MOV X0, X19
	0x03B3B6AC BLR X8
	0x03B3B6B0 MOV X21, X0
	0x03B3B6B4 LDR X0, [X23]
	0x03B3B6B8 LDR W8, [X0 + 0xE0]
	0x03B3B6BC CBNZ W8, 0x3B3B6C4
	0x03B3B6C0 BL 0x1C16DFC
	0x03B3B6C4 MOV X0, X21
	0x03B3B6C8 MOV X1, X31
	0x03B3B6CC MOV X2, X31
	0x03B3B6D0 BL 0x3C3883C
	0x03B3B6D4 TBNZ X0, 0x0, 0x3B3B834
	0x03B3B6D8 CBZ X21, 0x3B3B848
	0x03B3B6DC ADRP X8, 0x61F000
	0x03B3B6E0 LDR X8, [X8 + 0x338]
	0x03B3B6E4 MOV X0, X21
	0x03B3B6E8 LDR X1, [X8]
	0x03B3B6EC BL 0x21A3894
	0x03B3B6F0 CBZ X0, 0x3B3B834
	0x03B3B6F4 MOV X21, X0
	0x03B3B6F8 LDR X0, [X20 + 0x160]
	0x03B3B6FC CBZ X0, 0x3B3B848
	0x03B3B700 ADRP X8, 0x61F000
	0x03B3B704 LDR X8, [X8 + 0x330]
	0x03B3B708 ADD X2, X31, 0x8
	0x03B3B70C MOV X1, X19
	0x03B3B710 LDR X3, [X8]
	0x03B3B714 BL 0x2AA6B2C
	0x03B3B718 TBZ X0, 0x0, 0x3B3B758
	0x03B3B71C LDR X0, [X23]
	0x03B3B720 LDR X22, [X31 + 0x8]
	0x03B3B724 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8A8000
	005 Move W8, [X20+2083]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x620000
	012 Move X0, [X0+600]
	013 Call 0x1C17CF4
	014 Move X0, 0x620000
	015 Move X0, [X0+608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2083], W8
	019 Move X8, [X19+240]
	020 Compare X8, 0
	021 JumpIfEqual {41}
	022 Move X0, [X8+16]
	023 Compare X0, 0
	024 JumpIfEqual {36}
	025 Move X9, 0x620000
	026 Move X9, [X9+608]
	027 Move X8, [X0]
	028 Move X1, [X9]
	029 Move W10, [X8+304]
	030 Move W9, [X1+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X8+200]
	033 Add X8, X8, X9
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0
	040 Call 0x1C181E0
	041 Call 0x1C17F20

Method: System.Boolean get_isHovered()

Disassembly:
	0x03B3B728 CBNZ W8, 0x3B3B730
	0x03B3B72C BL 0x1C16DFC
	0x03B3B730 MOV X0, X22
	0x03B3B734 MOV X1, X31
	0x03B3B738 BL 0x3C394A8
	0x03B3B73C LDR X0, [X20 + 0x160]
	0x03B3B740 CBZ X0, 0x3B3B848
	0x03B3B744 ADRP X8, 0x61F000
	0x03B3B748 LDR X8, [X8 + 0x348]
	0x03B3B74C MOV X1, X19
	0x03B3B750 LDR X2, [X8]
	0x03B3B754 BL 0x2AA64F8
	0x03B3B758 LDR X0, [X23]
	0x03B3B75C LDR X22, [X20 + 0x60]
	0x03B3B760 LDR W8, [X0 + 0xE0]
	0x03B3B764 CBNZ W8, 0x3B3B76C
	0x03B3B768 BL 0x1C16DFC
	0x03B3B76C MOV X0, X22
	0x03B3B770 MOV X1, X31
	0x03B3B774 MOV X2, X31
	0x03B3B778 BL 0x3C354F8
	0x03B3B77C TBZ X0, 0x0, 0x3B3B834
	0x03B3B780 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8A8000
	005 Move W8, [X20+2084]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x620000
	012 Move X0, [X0+616]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2084], W8
	016 Move X0, [X19+240]
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, 0x620000
	020 Move X8, [X8+616]
	021 Move X1, [X8]
	022 Call 0x2D58B54, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor> get_interactorsSelecting()

Disassembly:
	0x03B3B784 LDR X22, [X20 + 0x60]
	0x03B3B788 LDR W8, [X0 + 0xE0]
	0x03B3B78C CBNZ W8, 0x3B3B794
	0x03B3B790 BL 0x1C16DFC
	0x03B3B794 ADRP X8, 0x5B8000
	0x03B3B798 LDR X8, [X8 + 0xD78]
	0x03B3B79C MOV X0, X22
	0x03B3B7A0 LDR X1, [X8]
	0x03B3B7A4 BL 0x222D35C
	0x03B3B7A8 LDR X8, [X20 + 0x160]
	0x03B3B7AC CBZ X8, 0x3B3B848
	0x03B3B7B0 ADRP X9, 0x61F000
	0x03B3B7B4 LDR X9, [X9 + 0x340]
	0x03B3B7B8 MOV X20, X0
	0x03B3B7BC MOV X0, X8
	0x03B3B7C0 MOV X1, X19
	0x03B3B7C4 LDR X3, [X9]
	0x03B3B7C8 MOV X2, X20
	0x03B3B7CC BL 0x2AA5098
	0x03B3B7D0 ADRP X10, 0x61F000
	0x03B3B7D4 LDR X8, [X21]
	0x03B3B7D8 LDR X10, [X10 + 0x350]
	0x03B3B7DC LDRH W9, [X8 + 0x12E]
	0x03B3B7E0 LDR X1, [X10]
	0x03B3B7E4 CBZ X9, 0x3B3B808
	0x03B3B7E8 LDR X10, [X8 + 0xB0]
	0x03B3B7EC ADD X10, X10, 0x8
	0x03B3B7F0 LDUR X11, [X10 - 0x8]
	0x03B3B7F4 CMP X11, X1
	0x03B3B7F8 B.EQ 0x3B3B818
	0x03B3B7FC SUBS X9, X9, 0x1
	0x03B3B800 ADD X10, X10, 0x10
	0x03B3B804 B.NE 0x3B3B7F0
	0x03B3B808 MOV X0, X21
	0x03B3B80C MOV W2, W31
	0x03B3B810 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8A8000
	005 Move W8, [X20+2085]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x620000
	012 Move X0, [X0+624]
	013 Call 0x1C17CF4
	014 Move X0, 0x620000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2085], W8
	019 Move X8, [X19+248]
	020 Compare X8, 0
	021 JumpIfEqual {41}
	022 Move X0, [X8+16]
	023 Compare X0, 0
	024 JumpIfEqual {36}
	025 Move X9, 0x620000
	026 Move X9, [X9+632]
	027 Move X8, [X0]
	028 Move X1, [X9]
	029 Move W10, [X8+304]
	030 Move W9, [X1+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X8+200]
	033 Add X8, X8, X9
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0
	040 Call 0x1C181E0
	041 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor get_firstInteractorSelecting()

Disassembly:
	0x03B3B814 B 0x3B3B824
	0x03B3B818 LDRSW X9, [X10]

ISIL:
	001 Move X0, [X0+256]
	002 Return X0

Method: System.Void set_firstInteractorSelecting(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor value)

Disassembly:
	0x03B3B81C ADD X8, X8, X9, 0x4, LSL
	0x03B3B820 ADD X0, X8, 0x138

ISIL:
	001 Move [X0+256], X1
	002 Return 

Method: System.Boolean get_isSelected()

Disassembly:
	0x03B3B824 LDP X8, X2, [X0]
	0x03B3B828 MOV X0, X21
	0x03B3B82C MOV X1, X20
	0x03B3B830 BLR X8
	0x03B3B834 LDP X20, X19, [X31 + 0x30]
	0x03B3B838 LDP X22, X21, [X31 + 0x20]
	0x03B3B83C LDP X30, X23, [X31 + 0x10]
	0x03B3B840 ADD X31, X31, 0x40
	0x03B3B844 RET
	0x03B3B848 BL 0x1C16F20
	0x03B3B84C STR X30, [X31 - 0x30]!
	0x03B3B850 STP X22, X21, [X31 + 0x10]
	0x03B3B854 STP X20, X19, [X31 + 0x20]
	0x03B3B858 ADRP X21, 0x8A7000
	0x03B3B85C LDRB W8, [X21 + 0x839]
	0x03B3B860 MOV X19, X1
	0x03B3B864 MOV X20, X0
	0x03B3B868 TBNZ X8, 0x0, 0x3B3B8BC
	0x03B3B86C ADRP X0, 0x61F000
	0x03B3B870 LDR X0, [X0 + 0x338]
	0x03B3B874 BL 0x1C16CF4
	0x03B3B878 ADRP X0, 0x61F000
	0x03B3B87C LDR X0, [X0 + 0x348]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8A8000
	005 Move W8, [X20+2086]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x620000
	012 Move X0, [X0+640]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2086], W8
	016 Move X0, [X19+248]
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, 0x620000
	020 Move X8, [X8+640]
	021 Move X1, [X8]
	022 Call 0x2D58B54, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup> get_interactionGroupsFocusing()

Disassembly:
	0x03B3B880 BL 0x1C16CF4
	0x03B3B884 ADRP X0, 0x61F000
	0x03B3B888 LDR X0, [X0 + 0x330]
	0x03B3B88C BL 0x1C16CF4
	0x03B3B890 ADRP X0, 0x61F000
	0x03B3B894 LDR X0, [X0 + 0x350]
	0x03B3B898 BL 0x1C16CF4
	0x03B3B89C ADRP X0, 0x61F000
	0x03B3B8A0 LDR X0, [X0 + 0x2F8]
	0x03B3B8A4 BL 0x1C16CF4
	0x03B3B8A8 ADRP X0, 0x5B8000
	0x03B3B8AC LDR X0, [X0 + 0x598]
	0x03B3B8B0 BL 0x1C16CF4
	0x03B3B8B4 MOVZ W8, 0x1
	0x03B3B8B8 STRB W8, [X21 + 0x839]
	0x03B3B8BC ADRP X22, 0x5B8000
	0x03B3B8C0 LDR X22, [X22 + 0x598]
	0x03B3B8C4 STR X31, [X31 + 0x8]
	0x03B3B8C8 CBZ X19, 0x3B3B914
	0x03B3B8CC ADRP X10, 0x61F000
	0x03B3B8D0 LDR X8, [X19]
	0x03B3B8D4 LDR X10, [X10 + 0x2F8]
	0x03B3B8D8 LDRH W9, [X8 + 0x12E]
	0x03B3B8DC LDR X1, [X10]
	0x03B3B8E0 CBZ X9, 0x3B3B904
	0x03B3B8E4 LDR X10, [X8 + 0xB0]
	0x03B3B8E8 ADD X10, X10, 0x8
	0x03B3B8EC LDUR X11, [X10 - 0x8]
	0x03B3B8F0 CMP X11, X1
	0x03B3B8F4 B.EQ 0x3B3B91C
	0x03B3B8F8 SUBS X9, X9, 0x1
	0x03B3B8FC ADD X10, X10, 0x10
	0x03B3B900 B.NE 0x3B3B8EC
	0x03B3B904 MOVZ W2, 0x5
	0x03B3B908 MOV X0, X19
	0x03B3B90C BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8A8000
	005 Move W8, [X20+2087]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x620000
	012 Move X0, [X0+648]
	013 Call 0x1C17CF4
	014 Move X0, 0x620000
	015 Move X0, [X0+656]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2087], W8
	019 Move X8, [X19+264]
	020 Compare X8, 0
	021 JumpIfEqual {41}
	022 Move X0, [X8+16]
	023 Compare X0, 0
	024 JumpIfEqual {36}
	025 Move X9, 0x620000
	026 Move X9, [X9+656]
	027 Move X8, [X0]
	028 Move X1, [X9]
	029 Move W10, [X8+304]
	030 Move W9, [X1+304]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X8+200]
	033 Add X8, X8, X9
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0
	040 Call 0x1C181E0
	041 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup get_firstInteractionGroupFocusing()

Disassembly:
	0x03B3B910 B 0x3B3B92C
	0x03B3B914 MOV X21, X31

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void set_firstInteractionGroupFocusing(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup value)

Disassembly:
	0x03B3B918 B 0x3B3B93C
	0x03B3B91C LDR W9, [X10]

ISIL:
	001 Move [X0+272], X1
	002 Return 

Method: System.Boolean get_isFocused()

Disassembly:
	0x03B3B920 ADD W9, W9, 0x5
	0x03B3B924 ADD X8, X8, W9, 0x4, SXTW
	0x03B3B928 ADD X0, X8, 0x138
	0x03B3B92C LDP X8, X1, [X0]
	0x03B3B930 MOV X0, X19
	0x03B3B934 BLR X8
	0x03B3B938 MOV X21, X0
	0x03B3B93C LDR X0, [X22]
	0x03B3B940 LDR W8, [X0 + 0xE0]
	0x03B3B944 CBNZ W8, 0x3B3B94C
	0x03B3B948 BL 0x1C16DFC
	0x03B3B94C MOV X0, X21
	0x03B3B950 MOV X1, X31
	0x03B3B954 MOV X2, X31
	0x03B3B958 BL 0x3C3883C
	0x03B3B95C TBNZ X0, 0x0, 0x3B3BA44
	0x03B3B960 CBZ X21, 0x3B3BA54
	0x03B3B964 ADRP X8, 0x61F000
	0x03B3B968 LDR X8, [X8 + 0x338]
	0x03B3B96C MOV X0, X21
	0x03B3B970 LDR X1, [X8]
	0x03B3B974 BL 0x21A3894
	0x03B3B978 CBZ X0, 0x3B3BA44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8A8000
	005 Move W8, [X20+2088]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x620000
	012 Move X0, [X0+664]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2088], W8
	016 Move X0, [X19+264]
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, 0x620000
	020 Move X8, [X8+664]
	021 Move X1, [X8]
	022 Call 0x2D58B54, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Boolean get_canFocus()

Disassembly:
	0x03B3B97C MOV X21, X0
	0x03B3B980 LDR X0, [X20 + 0x160]
	0x03B3B984 CBZ X0, 0x3B3BA54
	0x03B3B988 ADRP X8, 0x61F000

ISIL:
	001 Move W8, [X0+92]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.Object> get_startingHoverFilters()

Disassembly:
	0x03B3B98C LDR X8, [X8 + 0x330]
	0x03B3B990 ADD X2, X31, 0x8

ISIL:
	001 Move X0, [X0+280]
	002 Return X0

Method: System.Void set_startingHoverFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)

Disassembly:
	0x03B3B994 MOV X1, X19
	0x03B3B998 LDR X3, [X8]

ISIL:
	001 Move [X0+280], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> get_hoverFilters()

Disassembly:
	0x03B3B99C BL 0x2AA6B2C
	0x03B3B9A0 TBZ X0, 0x0, 0x3B3BA44

ISIL:
	001 Move X0, [X0+288]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.Object> get_startingSelectFilters()

Disassembly:
	0x03B3B9A4 LDR X0, [X22]
	0x03B3B9A8 LDR X22, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+296]
	002 Return X0

Method: System.Void set_startingSelectFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)

Disassembly:
	0x03B3B9AC LDR W8, [X0 + 0xE0]
	0x03B3B9B0 CBNZ W8, 0x3B3B9B8

ISIL:
	001 Move [X0+296], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> get_selectFilters()

Disassembly:
	0x03B3B9B4 BL 0x1C16DFC
	0x03B3B9B8 MOV X0, X22

ISIL:
	001 Move X0, [X0+304]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.Object> get_startingInteractionStrengthFilters()

Disassembly:
	0x03B3B9BC MOV X1, X31
	0x03B3B9C0 BL 0x3C394A8

ISIL:
	001 Move X0, [X0+312]
	002 Return X0

Method: System.Void set_startingInteractionStrengthFilters(System.Collections.Generic.List`1<UnityEngine.Object> value)

Disassembly:
	0x03B3B9C4 LDR X0, [X20 + 0x160]
	0x03B3B9C8 CBZ X0, 0x3B3BA54

ISIL:
	001 Move [X0+312], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRInteractionStrengthFilter> get_interactionStrengthFilters()

Disassembly:
	0x03B3B9CC ADRP X8, 0x61F000
	0x03B3B9D0 LDR X8, [X8 + 0x348]

ISIL:
	001 Move X0, [X0+320]
	002 Return X0

Method: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<System.Single> get_largestInteractionStrength()

Disassembly:
	0x03B3B9D4 MOV X1, X19
	0x03B3B9D8 LDR X2, [X8]

ISIL:
	001 Move X0, [X0+328]
	002 Return X0

Method: System.Void Reset()

Disassembly:
	0x03B3B9DC BL 0x2AA64F8

ISIL:
	001 Return 

Method: System.Void Awake()

Disassembly:
	0x03B3B9E0 ADRP X10, 0x61F000
	0x03B3B9E4 LDR X8, [X21]
	0x03B3B9E8 LDR X10, [X10 + 0x350]
	0x03B3B9EC LDRH W9, [X8 + 0x12E]
	0x03B3B9F0 LDR X1, [X10]
	0x03B3B9F4 CBZ X9, 0x3B3BA18
	0x03B3B9F8 LDR X10, [X8 + 0xB0]
	0x03B3B9FC ADD X10, X10, 0x8
	0x03B3BA00 LDUR X11, [X10 - 0x8]
	0x03B3BA04 CMP X11, X1
	0x03B3BA08 B.EQ 0x3B3BA28
	0x03B3BA0C SUBS X9, X9, 0x1
	0x03B3BA10 ADD X10, X10, 0x10
	0x03B3BA14 B.NE 0x3B3BA00
	0x03B3BA18 MOVZ W2, 0x1
	0x03B3BA1C MOV X0, X21
	0x03B3BA20 BL 0x1C5C788
	0x03B3BA24 B 0x3B3BA38
	0x03B3BA28 LDR W9, [X10]
	0x03B3BA2C ADD W9, W9, 0x1
	0x03B3BA30 ADD X8, X8, W9, 0x4, SXTW
	0x03B3BA34 ADD X0, X8, 0x138
	0x03B3BA38 LDP X8, X1, [X0]
	0x03B3BA3C MOV X0, X21
	0x03B3BA40 BLR X8
	0x03B3BA44 LDP X20, X19, [X31 + 0x20]
	0x03B3BA48 LDP X22, X21, [X31 + 0x10]
	0x03B3BA4C LDR X30, [X31], #0x30
	0x03B3BA50 RET
	0x03B3BA54 BL 0x1C16F20
	0x03B3BA58 SUB X31, X31, 0xB0
	0x03B3BA5C STR D10, [X31 + 0x60]
	0x03B3BA60 STP D9, D8, [X31 + 0x70]
	0x03B3BA64 STP X30, X23, [X31 + 0x80]
	0x03B3BA68 STP X22, X21, [X31 + 0x90]
	0x03B3BA6C STP X20, X19, [X31 + 0xA0]
	0x03B3BA70 ADRP X22, 0x8A7000
	0x03B3BA74 ADRP X21, 0x5B8000
	0x03B3BA78 LDRB W8, [X22 + 0x83A]
	0x03B3BA7C LDR X21, [X21 + 0x598]
	0x03B3BA80 MOV X19, X1
	0x03B3BA84 MOV X20, X0
	0x03B3BA88 TBNZ X8, 0x0, 0x3B3BAB8
	0x03B3BA8C ADRP X0, 0x61F000
	0x03B3BA90 LDR X0, [X0 + 0x358]
	0x03B3BA94 BL 0x1C16CF4
	0x03B3BA98 ADRP X0, 0x61F000
	0x03B3BA9C LDR X0, [X0 + 0x360]
	0x03B3BAA0 BL 0x1C16CF4
	0x03B3BAA4 ADRP X0, 0x5B8000
	0x03B3BAA8 LDR X0, [X0 + 0x598]
	0x03B3BAAC BL 0x1C16CF4
	0x03B3BAB0 MOVZ W8, 0x1
	0x03B3BAB4 STRB W8, [X22 + 0x83A]
	0x03B3BAB8 LDR X8, [X20]
	0x03B3BABC MOV X0, X20
	0x03B3BAC0 MOV X1, X19
	0x03B3BAC4 LDR X9, [X8 + 0x5A8]
	0x03B3BAC8 LDR X2, [X8 + 0x5B0]
	0x03B3BACC BLR X9
	0x03B3BAD0 LDR X8, [X21]
	0x03B3BAD4 MOV X21, X0
	0x03B3BAD8 LDR W9, [X8 + 0xE0]
	0x03B3BADC CBNZ W9, 0x3B3BAE8
	0x03B3BAE0 MOV X0, X8
	0x03B3BAE4 BL 0x1C16DFC
	0x03B3BAE8 MOV X0, X21
	0x03B3BAEC MOV X1, X31
	0x03B3BAF0 MOV X2, X31
	0x03B3BAF4 BL 0x3C354F8
	0x03B3BAF8 LDR X22, [X20 + 0x150]
	0x03B3BAFC TBZ X0, 0x0, 0x3B3BC4C
	0x03B3BB00 CBZ X21, 0x3B3BC94
	0x03B3BB04 MOV X0, X21
	0x03B3BB08 MOV X1, X31
	0x03B3BB0C BL 0x3C3F58C
	0x03B3BB10 MOV X0, X21
	0x03B3BB14 MOV X1, X31
	0x03B3BB18 MOV V8.16B, V0.16B
	0x03B3BB1C MOV V9.16B, V1.16B
	0x03B3BB20 MOV V10.16B, V2.16B
	0x03B3BB24 BL 0x3C3DEB4
	0x03B3BB28 MOV V4.16B, V0.16B
	0x03B3BB2C MOV V5.16B, V1.16B
	0x03B3BB30 MOV V6.16B, V2.16B
	0x03B3BB34 MOV V7.16B, V3.16B
	0x03B3BB38 ADD X0, X31, 0x20
	0x03B3BB3C MOV V0.16B, V8.16B
	0x03B3BB40 MOV V1.16B, V9.16B
	0x03B3BB44 MOV V2.16B, V10.16B
	0x03B3BB48 MOV V3.16B, V4.16B
	0x03B3BB4C MOV V4.16B, V5.16B
	0x03B3BB50 MOV V5.16B, V6.16B
	0x03B3BB54 MOV V6.16B, V7.16B
	0x03B3BB58 MOV X1, X31
	0x03B3BB5C STP X31, X31, [X31 + 0x20]
	0x03B3BB60 STR W31, [X31 + 0x38]
	0x03B3BB64 STR X31, [X31 + 0x30]
	0x03B3BB68 BL 0x3C3DB6C
	0x03B3BB6C CBZ X22, 0x3B3BC94
	0x03B3BB70 ADRP X23, 0x61F000
	0x03B3BB74 LDR X23, [X23 + 0x360]
	0x03B3BB78 LDR V0, [X31 + 0x2]
	0x03B3BB7C LDUR V1, [X31 + 0x2C]
	0x03B3BB80 ADD X2, X31, 0x40
	0x03B3BB84 LDR X3, [X23]
	0x03B3BB88 MOV X0, X22
	0x03B3BB8C MOV X1, X19
	0x03B3BB90 STR V0, [X31 + 0x4]
	0x03B3BB94 STUR V1, [X31 + 0x4C]
	0x03B3BB98 BL 0x2AA815C
	0x03B3BB9C LDR X20, [X20 + 0x158]
	0x03B3BBA0 MOV X0, X21
	0x03B3BBA4 MOV X1, X31
	0x03B3BBA8 BL 0x3C3EB78
	0x03B3BBAC MOV X0, X21
	0x03B3BBB0 MOV X1, X31
	0x03B3BBB4 MOV V8.16B, V0.16B
	0x03B3BBB8 MOV V9.16B, V1.16B
	0x03B3BBBC MOV V10.16B, V2.16B
	0x03B3BBC0 BL 0x3C3F830
	0x03B3BBC4 MOV V4.16B, V0.16B
	0x03B3BBC8 MOV V5.16B, V1.16B
	0x03B3BBCC MOV V6.16B, V2.16B
	0x03B3BBD0 MOV V7.16B, V3.16B
	0x03B3BBD4 ADD X0, X31, 0x0
	0x03B3BBD8 MOV V0.16B, V8.16B
	0x03B3BBDC MOV V1.16B, V9.16B
	0x03B3BBE0 MOV V2.16B, V10.16B
	0x03B3BBE4 MOV V3.16B, V4.16B
	0x03B3BBE8 MOV V4.16B, V5.16B
	0x03B3BBEC MOV V5.16B, V6.16B
	0x03B3BBF0 MOV V6.16B, V7.16B
	0x03B3BBF4 MOV X1, X31
	0x03B3BBF8 STP X31, X31, [X31]
	0x03B3BBFC STR W31, [X31 + 0x18]
	0x03B3BC00 STR X31, [X31 + 0x10]
	0x03B3BC04 BL 0x3C3DB6C
	0x03B3BC08 CBZ X20, 0x3B3BC94
	0x03B3BC0C LDR V0, [X31]
	0x03B3BC10 LDUR V1, [X31 + 0xC]
	0x03B3BC14 LDR X3, [X23]
	0x03B3BC18 ADD X2, X31, 0x40
	0x03B3BC1C MOV X0, X20
	0x03B3BC20 MOV X1, X19
	0x03B3BC24 STR V0, [X31 + 0x4]
	0x03B3BC28 STUR V1, [X31 + 0x4C]
	0x03B3BC2C BL 0x2AA815C
	0x03B3BC30 LDP X20, X19, [X31 + 0xA0]
	0x03B3BC34 LDP X22, X21, [X31 + 0x90]
	0x03B3BC38 LDP X30, X23, [X31 + 0x80]
	0x03B3BC3C LDP D9, D8, [X31 + 0x70]
	0x03B3BC40 LDR V10, [X31 + 0x60]
	0x03B3BC44 ADD X31, X31, 0xB0
	0x03B3BC48 RET
	0x03B3BC4C CBZ X22, 0x3B3BC94
	0x03B3BC50 ADRP X21, 0x61F000
	0x03B3BC54 LDR X21, [X21 + 0x358]
	0x03B3BC58 MOV X0, X22
	0x03B3BC5C MOV X1, X19
	0x03B3BC60 LDR X2, [X21]
	0x03B3BC64 BL 0x2AA97C4
	0x03B3BC68 LDR X0, [X20 + 0x158]
	0x03B3BC6C CBZ X0, 0x3B3BC94
	0x03B3BC70 LDR X2, [X21]
	0x03B3BC74 MOV X1, X19
	0x03B3BC78 LDP X20, X19, [X31 + 0xA0]
	0x03B3BC7C LDP X22, X21, [X31 + 0x90]
	0x03B3BC80 LDP X30, X23, [X31 + 0x80]
	0x03B3BC84 LDP D9, D8, [X31 + 0x70]
	0x03B3BC88 LDR V10, [X31 + 0x60]
	0x03B3BC8C ADD X31, X31, 0xB0
	0x03B3BC90 B 0x2AA97C4
	0x03B3BC94 BL 0x1C16F20
	0x03B3BC98 RET
	0x03B3BC9C LDR X8, [X0]
	0x03B3BCA0 LDR X3, [X8 + 0x738]
	0x03B3BCA4 LDR X2, [X8 + 0x740]
	0x03B3BCA8 BR X3
	0x03B3BCAC LDR X8, [X0]
	0x03B3BCB0 LDR X3, [X8 + 0x638]
	0x03B3BCB4 LDR X2, [X8 + 0x640]
	0x03B3BCB8 BR X3
	0x03B3BCBC LDR X8, [X0]
	0x03B3BCC0 LDR X3, [X8 + 0x648]
	0x03B3BCC4 LDR X2, [X8 + 0x650]
	0x03B3BCC8 BR X3
	0x03B3BCCC LDR X8, [X0]
	0x03B3BCD0 LDR X3, [X8 + 0x718]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8A8000
	008 Move W8, [X20+2089]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {49}
	014 Move X0, 0x620000
	015 Move X0, [X0+672]
	016 Call 0x1C17CF4
	017 Move X0, 0x5B9000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x620000
	021 Move X0, [X0+680]
	022 Call 0x1C17CF4
	023 Move X0, 0x620000
	024 Move X0, [X0+688]
	025 Call 0x1C17CF4
	026 Move X0, 0x620000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0x620000
	030 Move X0, [X0+704]
	031 Call 0x1C17CF4
	032 Move X0, 0x619000
	033 Move X0, [X0+2200]
	034 Call 0x1C17CF4
	035 Move X0, 0x620000
	036 Move X0, [X0+712]
	037 Call 0x1C17CF4
	038 Move X0, 0x620000
	039 Move X0, [X0+720]
	040 Call 0x1C17CF4
	041 Move X0, 0x620000
	042 Move X0, [X0+728]
	043 Call 0x1C17CF4
	044 Move X0, 0x620000
	045 Move X0, [X0+736]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+2089], W8
	049 Move X1, [X19+64]
	050 Compare X1, 0
	051 JumpIfEqual {212}
	052 Move W8, [X1+24]
	053 Compare W8, 0
	054 JumpIfNotEqual {102}
	055 Move X8, 0x620000
	056 Move X8, [X8+672]
	057 Move X0, X19
	058 Move X2, [X8]
	059 Call 0x21A5608, X0, X1
	060 Move X23, 0x620000
	061 Move X23, [X23+728]
	062 Move X20, [X19+64]
	063 Move X0, [X23]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X23]
	069 Move X8, [X0+184]
	070 Move X21, [X8+8]
	071 Compare X21, 0
	072 JumpIfNotEqual {94}
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X23]
	078 Move X9, 0x620000
	079 Move X8, [X0+184]
	080 Move X9, [X9+712]
	081 Move X22, [X8]
	082 Move X0, [X9]
	083 Call 0x1C17F10
	084 Move X8, 0x620000
	085 Move X8, [X8+720]
	086 Move X1, X22
	087 Move X3, X31
	088 Move X21, X0
	089 Move X2, [X8]
	090 Call Predicate`1<Object>..ctor, X0, X1, X2
	091 Move X8, [X23]
	092 Move X8, [X8+184]
	093 Move [X8+8], X21
	094 Compare X20, 0
	095 JumpIfEqual {212}
	096 Move X8, 0x620000
	097 Move X8, [X8+704]
	098 Move X0, X20
	099 Move X1, X21
	100 Move X2, [X8]
	101 Call List`1<Object>.RemoveAll, X0, X1
	102 Move X0, [X19+288]
	103 Compare X0, 0
	104 JumpIfEqual {212}
	105 Move X8, 0x620000
	106 Move X8, [X8+688]
	107 Move X1, [X19+280]
	108 Move X2, X19
	109 Move X3, [X8]
	110 Call 0x212FF58, X0, X1, X2
	111 Move X0, [X19+304]
	112 Compare X0, 0
	113 JumpIfEqual {212}
	114 Move X8, 0x620000
	115 Move X8, [X8+696]
	116 Move X1, [X19+296]
	117 Move X2, X19
	118 Move X3, [X8]
	119 Call 0x212FF58, X0, X1, X2
	120 Move X0, [X19+320]
	121 Compare X0, 0
	122 JumpIfEqual {212}
	123 Move X8, 0x620000
	124 Move X8, [X8+680]
	125 Move X1, [X19+312]
	126 Move X2, X19
	127 Move X3, [X8]
	128 Call 0x212FF58, X0, X1, X2
	129 Move X0, X19
	130 Call XRBaseInteractable.FindCreateInteractionManager, X0
	131 Move X0, [X19+384]
	132 Compare X0, 0
	133 JumpIfEqual {212}
	134 Move X1, X31
	135 Call UnityEventBase.GetPersistentEventCount, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X19+392]
	138 Compare X0, 0
	139 JumpIfEqual {212}
	140 Move X1, X31
	141 Call UnityEventBase.GetPersistentEventCount, X0
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, [X19+400]
	144 Compare X0, 0
	145 JumpIfEqual {212}
	146 Move X1, X31
	147 Call UnityEventBase.GetPersistentEventCount, X0
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X0, [X19+408]
	150 Compare X0, 0
	151 JumpIfEqual {212}
	152 Move X1, X31
	153 Call UnityEventBase.GetPersistentEventCount, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X0, [X19+416]
	156 Compare X0, 0
	157 JumpIfEqual {212}
	158 Move X1, X31
	159 Call UnityEventBase.GetPersistentEventCount, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, [X19+424]
	162 Compare X0, 0
	163 JumpIfEqual {212}
	164 Move X1, X31
	165 Call UnityEventBase.GetPersistentEventCount, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, [X19+432]
	168 Compare X0, 0
	169 JumpIfEqual {212}
	170 Move X1, X31
	171 Call UnityEventBase.GetPersistentEventCount, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, [X19+440]
	174 Compare X0, 0
	175 JumpIfEqual {212}
	176 Move X1, X31
	177 Call UnityEventBase.GetPersistentEventCount, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, [X19+448]
	180 Compare X0, 0
	181 JumpIfEqual {212}
	182 Move X1, X31
	183 Call UnityEventBase.GetPersistentEventCount, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X8, 0x5B9000
	186 Move X8, [X8+2600]
	187 Move X20, 0x620000
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Move X20, [X20+736]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X0, [X20]
	195 Move X1, X19
	196 Move X20, [X31+32]
	197 Move X19, [X31+40]
	198 Move X22, [X31+16]
	199 Move X21, [X31+24]
	200 Move X2, X31
	201 Move X30, [X31+48]
	202 Move X23, [X31+56]
	203 Call Debug.LogWarning, X0, X1
	204 Return 
	205 Move X20, [X31+32]
	206 Move X19, [X31+40]
	207 Move X22, [X31+16]
	208 Move X21, [X31+24]
	209 Move X30, [X31+48]
	210 Move X23, [X31+56]
	211 Return 
	212 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03B3BD5C LDR X2, [X8 + 0x5E0]
	0x03B3BD60 MOV X0, X20
	0x03B3BD64 MOV X1, X19
	0x03B3BD68 BLR X9
	0x03B3BD6C TBZ X0, 0x0, 0x3B3BD8C
	0x03B3BD70 LDR X0, [X20 + 0x120]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call XRBaseInteractable.FindCreateInteractionManager, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call XRBaseInteractable.RegisterWithInteractionManager, X0
	009 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03B3BD74 MOV X1, X19

ISIL:
No ISIL was generated
Method: System.Void OnDestroy()

Disassembly:
	0x03B3BE04 ADRP X21, 0x8A7000

ISIL:
	001 Return 

Method: System.Void FindCreateInteractionManager()

Disassembly:
	0x03B3BCD4 LDR X2, [X8 + 0x720]
	0x03B3BCD8 BR X3
	0x03B3BCDC LDR X8, [X0]
	0x03B3BCE0 LDR X3, [X8 + 0x728]
	0x03B3BCE4 LDR X2, [X8 + 0x730]
	0x03B3BCE8 BR X3
	0x03B3BCEC STP X30, X21, [X31 - 0x20]!
	0x03B3BCF0 STP X20, X19, [X31 + 0x10]
	0x03B3BCF4 ADRP X21, 0x8A7000
	0x03B3BCF8 LDRB W8, [X21 + 0x83B]
	0x03B3BCFC MOV X19, X1
	0x03B3BD00 MOV X20, X0
	0x03B3BD04 TBNZ X8, 0x0, 0x3B3BD1C
	0x03B3BD08 ADRP X0, 0x61F000
	0x03B3BD0C LDR X0, [X0 + 0x368]
	0x03B3BD10 BL 0x1C16CF4
	0x03B3BD14 MOVZ W8, 0x1
	0x03B3BD18 STRB W8, [X21 + 0x83B]
	0x03B3BD1C CBZ X19, 0x3B3BD54
	0x03B3BD20 ADRP X8, 0x61F000
	0x03B3BD24 LDR X8, [X8 + 0x368]
	0x03B3BD28 LDR X9, [X19]
	0x03B3BD2C LDR X8, [X8]
	0x03B3BD30 LDRB W11, [X9 + 0x130]
	0x03B3BD34 LDRB W10, [X8 + 0x130]
	0x03B3BD38 CMP W11, W10
	0x03B3BD3C B.CC 0x3B3BD54
	0x03B3BD40 LDR X9, [X9 + 0xC8]
	0x03B3BD44 ADD X9, X9, X10, 0x3, LSL
	0x03B3BD48 LDUR X9, [X9 - 0x8]
	0x03B3BD4C CMP X9, X8
	0x03B3BD50 B.EQ 0x3B3BD9C
	0x03B3BD54 LDR X8, [X20]
	0x03B3BD58 LDR X9, [X8 + 0x5D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A8000
	006 Move X20, 0x5B9000
	007 Move W8, [X21+2090]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x620000
	015 Move X0, [X0+744]
	016 Call 0x1C17CF4
	017 Move X0, 0x5B9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2090], W8
	022 Move X0, [X20]
	023 Move X20, [X19+56]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X8, 0x620000
	037 Move X8, [X8+744]
	038 Move X0, [X8]
	039 Call 0x29606C8
	040 Move [X19+56], X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 

Method: System.Void RegisterWithInteractionManager()

Disassembly:
	0x03B3B410 LDR X0, [X0 + 0x318]
	0x03B3B414 BL 0x1C16CF4
	0x03B3B418 MOVZ W8, 0x1
	0x03B3B41C STRB W8, [X21 + 0x834]
	0x03B3B420 LDR X0, [X20 + 0xF8]
	0x03B3B424 CBZ X0, 0x3B3B444
	0x03B3B428 ADRP X8, 0x61F000
	0x03B3B42C LDR X8, [X8 + 0x318]
	0x03B3B430 MOV X1, X19
	0x03B3B434 LDP X20, X19, [X31 + 0x10]
	0x03B3B438 LDR X2, [X8]
	0x03B3B43C LDP X30, X21, [X31], #0x20
	0x03B3B440 B 0x2D58148
	0x03B3B444 BL 0x1C16F20
	0x03B3B448 STR X30, [X31 - 0x30]!
	0x03B3B44C STP X22, X21, [X31 + 0x10]
	0x03B3B450 STP X20, X19, [X31 + 0x20]
	0x03B3B454 ADRP X21, 0x8A7000
	0x03B3B458 ADRP X22, 0x61F000
	0x03B3B45C LDRB W8, [X21 + 0x835]
	0x03B3B460 LDR X22, [X22 + 0x320]
	0x03B3B464 MOV X20, X1
	0x03B3B468 MOV X19, X0
	0x03B3B46C TBNZ X8, 0x0, 0x3B3B484
	0x03B3B470 ADRP X0, 0x61F000
	0x03B3B474 LDR X0, [X0 + 0x320]
	0x03B3B478 BL 0x1C16CF4
	0x03B3B47C MOVZ W8, 0x1
	0x03B3B480 STRB W8, [X21 + 0x835]
	0x03B3B484 LDR X1, [X22]
	0x03B3B488 MOV X0, X20
	0x03B3B48C BL 0x1C16E00
	0x03B3B490 CBZ X0, 0x3B3B4AC
	0x03B3B494 MOV X1, X0
	0x03B3B498 MOV X0, X19
	0x03B3B49C LDP X20, X19, [X31 + 0x20]
	0x03B3B4A0 LDP X22, X21, [X31 + 0x10]
	0x03B3B4A4 LDR X30, [X31], #0x30
	0x03B3B4A8 B 0x3B3B398
	0x03B3B4AC LDP X20, X19, [X31 + 0x20]
	0x03B3B4B0 LDP X22, X21, [X31 + 0x10]
	0x03B3B4B4 LDR X30, [X31], #0x30
	0x03B3B4B8 RET
	0x03B3B4BC STR X30, [X31 - 0x30]!
	0x03B3B4C0 STP X22, X21, [X31 + 0x10]
	0x03B3B4C4 STP X20, X19, [X31 + 0x20]
	0x03B3B4C8 ADRP X21, 0x8A7000
	0x03B3B4CC ADRP X22, 0x61F000
	0x03B3B4D0 LDRB W8, [X21 + 0x836]
	0x03B3B4D4 LDR X22, [X22 + 0x328]
	0x03B3B4D8 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8A8000
	007 Move X22, 0x5B9000
	008 Move W8, [X20+2091]
	009 Move X22, [X22+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5B9000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2091], W8
	020 Move X0, [X22]
	021 Move X20, [X19+376]
	022 Move X21, [X19+56]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X21
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, X19
	036 Call XRBaseInteractable.UnregisterWithInteractionManager, X0
	037 Move X0, [X22]
	038 Move X20, [X19+56]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {61}
	051 Move X0, [X19+56]
	052 Compare X0, 0
	053 JumpIfEqual {67}
	054 Move X8, [X0]
	055 Move X1, X19
	056 Move X9, [X8+1256]
	057 Move X2, [X8+1264]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X19+56]
	060 Move [X19+376], X8
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void UnregisterWithInteractionManager()

Disassembly:
	0x03B3BD78 MOV X2, X20
	0x03B3BD7C LDP X20, X19, [X31 + 0x10]
	0x03B3BD80 MOV X3, X31
	0x03B3BD84 LDP X30, X21, [X31], #0x20
	0x03B3BD88 B 0x3B8DC80
	0x03B3BD8C LDP X20, X19, [X31 + 0x10]
	0x03B3BD90 MOV W0, W31
	0x03B3BD94 LDP X30, X21, [X31], #0x20
	0x03B3BD98 RET
	0x03B3BD9C LDR X8, [X20]
	0x03B3BDA0 LDR X9, [X8 + 0x838]
	0x03B3BDA4 LDR X2, [X8 + 0x840]
	0x03B3BDA8 B 0x3B3BD60
	0x03B3BDAC MOV X2, X0
	0x03B3BDB0 LDR X0, [X0 + 0x120]
	0x03B3BDB4 MOV X3, X31
	0x03B3BDB8 B 0x3B8DC80
	0x03B3BDBC LDR X8, [X0]
	0x03B3BDC0 LDR X3, [X8 + 0x658]
	0x03B3BDC4 LDR X2, [X8 + 0x660]
	0x03B3BDC8 BR X3
	0x03B3BDCC LDR X8, [X0]
	0x03B3BDD0 LDR X3, [X8 + 0x668]
	0x03B3BDD4 LDR X2, [X8 + 0x670]
	0x03B3BDD8 BR X3
	0x03B3BDDC LDR X8, [X0]
	0x03B3BDE0 LDR X3, [X8 + 0x678]
	0x03B3BDE4 LDR X2, [X8 + 0x680]
	0x03B3BDE8 BR X3
	0x03B3BDEC LDR X8, [X0]
	0x03B3BDF0 LDR X3, [X8 + 0x688]
	0x03B3BDF4 LDR X2, [X8 + 0x690]
	0x03B3BDF8 BR X3
	0x03B3BDFC STP X30, X21, [X31 - 0x20]!
	0x03B3BE00 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A8000
	006 Move X20, 0x5B9000
	007 Move W8, [X21+2092]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5B9000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2092], W8
	019 Move X0, [X20]
	020 Move X20, [X19+376]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {42}
	033 Move X0, [X19+376]
	034 Compare X0, 0
	035 JumpIfEqual {47}
	036 Move X8, [X0]
	037 Move X1, X19
	038 Move X9, [X8+1272]
	039 Move X2, [X8+1280]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move [X19+376], X31
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 
	047 Call 0x1C17F20

Method: UnityEngine.Transform GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B3BE08 LDRB W8, [X21 + 0x83C]
	0x03B3BE0C MOV X19, X1

ISIL:
	001 Move X1, X31
	002 Call Component.get_transform, X0
	003 Return X0

Method: UnityEngine.Pose GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B3BE10 MOV X20, X0
	0x03B3BE14 TBNZ X8, 0x0, 0x3B3BE2C
	0x03B3BE18 ADRP X0, 0x61F000
	0x03B3BE1C LDR X0, [X0 + 0x368]
	0x03B3BE20 BL 0x1C16CF4
	0x03B3BE24 MOVZ W8, 0x1
	0x03B3BE28 STRB W8, [X21 + 0x83C]
	0x03B3BE2C CBZ X19, 0x3B3BE64
	0x03B3BE30 ADRP X8, 0x61F000
	0x03B3BE34 LDR X8, [X8 + 0x368]
	0x03B3BE38 LDR X9, [X19]
	0x03B3BE3C LDR X8, [X8]
	0x03B3BE40 LDRB W11, [X9 + 0x130]
	0x03B3BE44 LDRB W10, [X8 + 0x130]
	0x03B3BE48 CMP W11, W10
	0x03B3BE4C B.CC 0x3B3BE64
	0x03B3BE50 LDR X9, [X9 + 0xC8]
	0x03B3BE54 ADD X9, X9, X10, 0x3, LSL
	0x03B3BE58 LDUR X9, [X9 - 0x8]
	0x03B3BE5C CMP X9, X8
	0x03B3BE60 B.EQ 0x3B3BEAC
	0x03B3BE64 LDR X8, [X20]
	0x03B3BE68 LDR X9, [X8 + 0x5E8]
	0x03B3BE6C LDR X2, [X8 + 0x5F0]
	0x03B3BE70 MOV X0, X20
	0x03B3BE74 MOV X1, X19
	0x03B3BE78 BLR X9
	0x03B3BE7C TBZ X0, 0x0, 0x3B3BE9C
	0x03B3BE80 LDR X0, [X20 + 0x130]
	0x03B3BE84 MOV X1, X19
	0x03B3BE88 MOV X2, X20
	0x03B3BE8C LDP X20, X19, [X31 + 0x10]
	0x03B3BE90 MOV X3, X31
	0x03B3BE94 LDP X30, X21, [X31], #0x20
	0x03B3BE98 B 0x3B8DFE8
	0x03B3BE9C LDP X20, X19, [X31 + 0x10]
	0x03B3BEA0 MOV W0, W31
	0x03B3BEA4 LDP X30, X21, [X31], #0x20
	0x03B3BEA8 RET
	0x03B3BEAC LDR X8, [X20]
	0x03B3BEB0 LDR X9, [X8 + 0x848]
	0x03B3BEB4 LDR X2, [X8 + 0x850]
	0x03B3BEB8 B 0x3B3BE70
	0x03B3BEBC MOV X2, X0
	0x03B3BEC0 LDR X0, [X0 + 0x130]
	0x03B3BEC4 MOV X3, X31
	0x03B3BEC8 B 0x3B8DFE8
	0x03B3BECC LDR X8, [X0]
	0x03B3BED0 LDR X3, [X8 + 0x698]
	0x03B3BED4 LDR X2, [X8 + 0x6A0]
	0x03B3BED8 BR X3
	0x03B3BEDC LDR X8, [X0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x8A8000
	008 Move W9, [X22+2093]
	009 Move X20, X1
	010 Move X21, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x620000
	017 Move X0, [X0+752]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E1000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2093], W8
	024 Move [X31+32], X31
	025 Move [X31+40], X31
	026 Move [X31+56], W31
	027 Move [X31+48], X31
	028 Move X0, [X21+336]
	029 Compare X0, 0
	030 JumpIfEqual {64}
	031 Move X8, 0x620000
	032 Move X8, [X8+752]
	033 Add X2, X31, 32
	034 Move X1, X20
	035 Move X3, [X8]
	036 Call Dictionary`2<Object, Pose>.TryGetValue, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {43}
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move V1, [X31+2]
	043 Move X8, 0x5E1000
	044 Move X8, [X8+1552]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 0
	051 Move X0, X31
	052 Call Pose.get_identity
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move V1, [X31]
	055 Move [X19+12], V0
	056 Move [X19], V1
	057 Move X20, [X31+96]
	058 Move X19, [X31+104]
	059 Move X22, [X31+80]
	060 Move X21, [X31+88]
	061 Move X30, [X31+64]
	062 Add X31, X31, 112
	063 Return X0
	064 Call 0x1C17F20

Method: UnityEngine.Pose GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B3BEE0 LDR X3, [X8 + 0x6A8]
	0x03B3BEE4 LDR X2, [X8 + 0x6B0]
	0x03B3BEE8 BR X3
	0x03B3BEEC LDR X8, [X0]
	0x03B3BEF0 LDR X3, [X8 + 0x6B8]
	0x03B3BEF4 LDR X2, [X8 + 0x6C0]
	0x03B3BEF8 BR X3
	0x03B3BEFC LDR X8, [X0]
	0x03B3BF00 LDR X3, [X8 + 0x6C8]
	0x03B3BF04 LDR X2, [X8 + 0x6D0]
	0x03B3BF08 BR X3
	0x03B3BF0C LDR X8, [X0]
	0x03B3BF10 LDR X3, [X8 + 0x6D8]
	0x03B3BF14 LDR X2, [X8 + 0x6E0]
	0x03B3BF18 BR X3
	0x03B3BF1C LDR X8, [X0]
	0x03B3BF20 LDR X3, [X8 + 0x6E8]
	0x03B3BF24 LDR X2, [X8 + 0x6F0]
	0x03B3BF28 BR X3
	0x03B3BF2C LDR X8, [X0]
	0x03B3BF30 LDR X3, [X8 + 0x6F8]
	0x03B3BF34 LDR X2, [X8 + 0x700]
	0x03B3BF38 BR X3
	0x03B3BF3C LDR X8, [X0]
	0x03B3BF40 LDR X3, [X8 + 0x708]
	0x03B3BF44 LDR X2, [X8 + 0x710]
	0x03B3BF48 BR X3
	0x03B3BF4C STR X30, [X31 - 0x30]!
	0x03B3BF50 STP X22, X21, [X31 + 0x10]
	0x03B3BF54 STP X20, X19, [X31 + 0x20]
	0x03B3BF58 ADRP X21, 0x8A7000
	0x03B3BF5C LDRB W8, [X21 + 0x83D]
	0x03B3BF60 MOV X19, X1
	0x03B3BF64 MOV X20, X0
	0x03B3BF68 TBNZ X8, 0x0, 0x3B3BFA4
	0x03B3BF6C ADRP X0, 0x5B8000
	0x03B3BF70 LDR X0, [X0 + 0xA28]
	0x03B3BF74 BL 0x1C16CF4
	0x03B3BF78 ADRP X0, 0x5B8000
	0x03B3BF7C LDR X0, [X0 + 0x598]
	0x03B3BF80 BL 0x1C16CF4
	0x03B3BF84 ADRP X0, 0x61F000
	0x03B3BF88 LDR X0, [X0 + 0x370]
	0x03B3BF8C BL 0x1C16CF4
	0x03B3BF90 ADRP X0, 0x61F000
	0x03B3BF94 LDR X0, [X0 + 0x378]
	0x03B3BF98 BL 0x1C16CF4
	0x03B3BF9C MOVZ W8, 0x1
	0x03B3BFA0 STRB W8, [X21 + 0x83D]
	0x03B3BFA4 CBZ X19, 0x3B3C080
	0x03B3BFA8 ADRP X8, 0x5B8000
	0x03B3BFAC LDR X8, [X8 + 0x598]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x8A8000
	008 Move W9, [X22+2094]
	009 Move X20, X1
	010 Move X21, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x620000
	017 Move X0, [X0+752]
	018 Call 0x1C17CF4
	019 Move X0, 0x5E1000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2094], W8
	024 Move [X31+32], X31
	025 Move [X31+40], X31
	026 Move [X31+56], W31
	027 Move [X31+48], X31
	028 Move X0, [X21+344]
	029 Compare X0, 0
	030 JumpIfEqual {64}
	031 Move X8, 0x620000
	032 Move X8, [X8+752]
	033 Add X2, X31, 32
	034 Move X1, X20
	035 Move X3, [X8]
	036 Call Dictionary`2<Object, Pose>.TryGetValue, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {43}
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move V1, [X31+2]
	043 Move X8, 0x5E1000
	044 Move X8, [X8+1552]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 0
	051 Move X0, X31
	052 Call Pose.get_identity
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move V1, [X31]
	055 Move [X19+12], V0
	056 Move [X19], V1
	057 Move X20, [X31+96]
	058 Move X19, [X31+104]
	059 Move X22, [X31+80]
	060 Move X21, [X31+88]
	061 Move X30, [X31+64]
	062 Add X31, X31, 112
	063 Return X0
	064 Call 0x1C17F20

Method: System.Single GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B3BFB0 LDR X21, [X19 + 0x10]
	0x03B3BFB4 LDR X22, [X20 + 0x38]
	0x03B3BFB8 LDR X0, [X8]
	0x03B3BFBC LDR W8, [X0 + 0xE0]
	0x03B3BFC0 CBNZ W8, 0x3B3BFC8
	0x03B3BFC4 BL 0x1C16DFC
	0x03B3BFC8 MOV X0, X21
	0x03B3BFCC MOV X1, X22
	0x03B3BFD0 MOV X2, X31
	0x03B3BFD4 BL 0x3C354F8
	0x03B3BFD8 TBZ X0, 0x0, 0x3B3C048
	0x03B3BFDC ADRP X8, 0x61F000
	0x03B3BFE0 LDR X2, [X20 + 0x38]
	0x03B3BFE4 LDR X3, [X19 + 0x10]
	0x03B3BFE8 LDR X8, [X8 + 0x378]
	0x03B3BFEC MOV X1, X20
	0x03B3BFF0 MOV X4, X31
	0x03B3BFF4 LDR X0, [X8]
	0x03B3BFF8 BL 0x3227C18
	0x03B3BFFC ADRP X8, 0x61F000
	0x03B3C000 LDR X8, [X8 + 0x370]
	0x03B3C004 MOV X1, X0
	0x03B3C008 MOV X2, X31
	0x03B3C00C LDR X8, [X8]
	0x03B3C010 MOV X0, X8
	0x03B3C014 BL 0x321B938
	0x03B3C018 ADRP X8, 0x5B7000
	0x03B3C01C LDR X8, [X8 + 0xA28]
	0x03B3C020 MOV X21, X0
	0x03B3C024 LDR X8, [X8]
	0x03B3C028 LDR W9, [X8 + 0xE0]
	0x03B3C02C CBNZ W9, 0x3B3C038
	0x03B3C030 MOV X0, X8
	0x03B3C034 BL 0x1C16DFC
	0x03B3C038 MOV X0, X21
	0x03B3C03C MOV X1, X20
	0x03B3C040 MOV X2, X31
	0x03B3C044 BL 0x3C06B0C
	0x03B3C048 LDR X8, [X20 + 0x20]
	0x03B3C04C CBZ X8, 0x3B3C070
	0x03B3C050 LDR X3, [X8 + 0x18]
	0x03B3C054 LDR X0, [X8 + 0x40]
	0x03B3C058 LDR X2, [X8 + 0x28]
	0x03B3C05C MOV X1, X19
	0x03B3C060 LDP X20, X19, [X31 + 0x20]
	0x03B3C064 LDP X22, X21, [X31 + 0x10]
	0x03B3C068 LDR X30, [X31], #0x30
	0x03B3C06C BR X3
	0x03B3C070 LDP X20, X19, [X31 + 0x20]
	0x03B3C074 LDP X22, X21, [X31 + 0x10]
	0x03B3C078 LDR X30, [X31], #0x30
	0x03B3C07C RET
	0x03B3C080 BL 0x1C16F20
	0x03B3C084 STR X30, [X31 - 0x30]!
	0x03B3C088 STP X22, X21, [X31 + 0x10]
	0x03B3C08C STP X20, X19, [X31 + 0x20]
	0x03B3C090 ADRP X21, 0x8A6000
	0x03B3C094 LDRB W8, [X21 + 0x83E]
	0x03B3C098 MOV X19, X1
	0x03B3C09C MOV X20, X0
	0x03B3C0A0 TBNZ X8, 0x0, 0x3B3C0DC
	0x03B3C0A4 ADRP X0, 0x5B7000
	0x03B3C0A8 LDR X0, [X0 + 0xA28]
	0x03B3C0AC BL 0x1C16CF4
	0x03B3C0B0 ADRP X0, 0x5B7000
	0x03B3C0B4 LDR X0, [X0 + 0x598]
	0x03B3C0B8 BL 0x1C16CF4
	0x03B3C0BC ADRP X0, 0x61E000
	0x03B3C0C0 LDR X0, [X0 + 0x380]
	0x03B3C0C4 BL 0x1C16CF4
	0x03B3C0C8 ADRP X0, 0x61E000
	0x03B3C0CC LDR X0, [X0 + 0x388]
	0x03B3C0D0 BL 0x1C16CF4
	0x03B3C0D4 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x8A8000
	007 Move W8, [X21+2095]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x620000
	015 Move X0, [X0+760]
	016 Call 0x1C17CF4
	017 Move X0, 0x5B9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2095], W8
	022 Move X21, 0x5B9000
	023 Move X21, [X21+1432]
	024 Compare X20, 0
	025 JumpIfEqual {53}
	026 Move X10, 0x620000
	027 Move X8, [X20]
	028 Call 0x3EB2994
	029 Return V0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 6
	041 Move X0, X20
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 6
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X2, [X0+8]
	049 Move X0, X20
	050 Move X1, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X20, X0
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {70}
	066 Move TEMP, 0x80800000
	067 Not TEMP
	068 Move W8, TEMP
	069 Move S0, W8
	070 Compare X20, 0
	071 JumpIfEqual {88}
	072 Move X0, X20
	073 Move X1, X31
	074 Call Transform.get_position, X0
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+1480]
	078 Move X1, [X8+1488]
	079 Add X8, X31, 8
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move V0, [X31+20]
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Add X31, X31, 64
	087 Return V0
	088 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.DistanceInfo GetDistance(UnityEngine.Vector3 position)

Disassembly:
	0x03B3C0D8 STRB W8, [X21 + 0x83E]
	0x03B3C0DC CBZ X19, 0x3B3C1B8
	0x03B3C0E0 ADRP X8, 0x5B7000
	0x03B3C0E4 LDR X8, [X8 + 0x598]
	0x03B3C0E8 LDR X21, [X19 + 0x10]
	0x03B3C0EC LDR X22, [X20 + 0x178]
	0x03B3C0F0 LDR X0, [X8]
	0x03B3C0F4 LDR W8, [X0 + 0xE0]
	0x03B3C0F8 CBNZ W8, 0x3B3C100
	0x03B3C0FC BL 0x1C16DFC
	0x03B3C100 MOV X0, X21
	0x03B3C104 MOV X1, X22
	0x03B3C108 MOV X2, X31
	0x03B3C10C BL 0x3C354F8
	0x03B3C110 TBZ X0, 0x0, 0x3B3C180
	0x03B3C114 ADRP X8, 0x61E000
	0x03B3C118 LDR X2, [X20 + 0x178]
	0x03B3C11C LDR X3, [X19 + 0x10]
	0x03B3C120 LDR X8, [X8 + 0x380]
	0x03B3C124 MOV X1, X20
	0x03B3C128 MOV X4, X31
	0x03B3C12C LDR X0, [X8]
	0x03B3C130 BL 0x3227C18
	0x03B3C134 ADRP X8, 0x61E000
	0x03B3C138 LDR X8, [X8 + 0x388]
	0x03B3C13C MOV X1, X0
	0x03B3C140 MOV X2, X31
	0x03B3C144 LDR X8, [X8]
	0x03B3C148 MOV X0, X8
	0x03B3C14C BL 0x321B938
	0x03B3C150 ADRP X8, 0x5B7000
	0x03B3C154 LDR X8, [X8 + 0xA28]
	0x03B3C158 MOV X21, X0
	0x03B3C15C LDR X8, [X8]
	0x03B3C160 LDR W9, [X8 + 0xE0]
	0x03B3C164 CBNZ W9, 0x3B3C170
	0x03B3C168 MOV X0, X8
	0x03B3C16C BL 0x1C16DFC
	0x03B3C170 MOV X0, X21
	0x03B3C174 MOV X1, X20
	0x03B3C178 MOV X2, X31
	0x03B3C17C BL 0x3C06B0C
	0x03B3C180 LDR X8, [X20 + 0x28]
	0x03B3C184 CBZ X8, 0x3B3C1A8
	0x03B3C188 LDR X3, [X8 + 0x18]
	0x03B3C18C LDR X0, [X8 + 0x40]
	0x03B3C190 LDR X2, [X8 + 0x28]
	0x03B3C194 MOV X1, X19
	0x03B3C198 LDP X20, X19, [X31 + 0x20]
	0x03B3C19C LDP X22, X21, [X31 + 0x10]
	0x03B3C1A0 LDR X30, [X31], #0x30
	0x03B3C1A4 BR X3
	0x03B3C1A8 LDP X20, X19, [X31 + 0x20]
	0x03B3C1AC LDP X22, X21, [X31 + 0x10]
	0x03B3C1B0 LDR X30, [X31], #0x30
	0x03B3C1B4 RET
	0x03B3C1B8 BL 0x1C16F20
	0x03B3C1BC STR X30, [X31 - 0x30]!
	0x03B3C1C0 STP X22, X21, [X31 + 0x10]
	0x03B3C1C4 STP X20, X19, [X31 + 0x20]
	0x03B3C1C8 ADRP X22, 0x8A6000
	0x03B3C1CC ADRP X21, 0x5B7000
	0x03B3C1D0 LDRB W8, [X22 + 0x83F]
	0x03B3C1D4 LDR X21, [X21 + 0x598]
	0x03B3C1D8 MOV X20, X1
	0x03B3C1DC MOV X19, X0
	0x03B3C1E0 TBNZ X8, 0x0, 0x3B3C234
	0x03B3C1E4 ADRP X0, 0x61E000
	0x03B3C1E8 LDR X0, [X0 + 0x390]
	0x03B3C1EC BL 0x1C16CF4
	0x03B3C1F0 ADRP X0, 0x61E000
	0x03B3C1F4 LDR X0, [X0 + 0x398]
	0x03B3C1F8 BL 0x1C16CF4
	0x03B3C1FC ADRP X0, 0x61E000
	0x03B3C200 LDR X0, [X0 + 0x3A0]
	0x03B3C204 BL 0x1C16CF4
	0x03B3C208 ADRP X0, 0x5B7000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D10
	003 Move [X31+64], D9
	004 Move [X31+72], D8
	005 Move [X31+80], X30
	006 Move [X31+88], X19
	007 Move [X31+24], X31
	008 Move [X31+32], X31
	009 Move [X31+40], X31
	010 Move X10, [X0+48]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move X9, X0
	015 Move X19, X8
	016 Compare X10, 0
	017 JumpIfEqual {31}
	018 Move X11, [X10+24]
	019 Move X0, [X10+64]
	020 Move X2, [X10+40]
	021 Add X8, X31, 0
	022 Move X1, X9
	023 Move V0, V10
	024 Move V1, V9
	025 Move V2, V8
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X31+16]
	028 Move V0, [X31]
	029 Move [X19+16], X8
	030 Move [X19], V0
	031 Move W8, [X9+84]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X1, X31, 24
	035 Move X0, X9
	036 Move V0, V10
	037 Move V1, V9
	038 Move V2, V8
	039 Move X2, X31
	040 Call XRInteractableUtility.TryGetClosestPointOnCollider, X0, X1, X2
	041 Add X1, X31, 24
	042 Move X0, X9
	043 Move V0, V10
	044 Move V1, V9
	045 Move V2, V8
	046 Move X2, X31
	047 Call XRInteractableUtility.TryGetClosestCollider, X0, X1, X2
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X8, [X31+40]
	050 Move [X19], V0
	051 Move [X19+16], X8
	052 Move X30, [X31+80]
	053 Move X19, [X31+88]
	054 Move D9, [X31+64]
	055 Move D8, [X31+72]
	056 Move V10, [X31+48]
	057 Add X31, X31, 96
	058 Return X0
	059 Move X0, X9
	060 Move X1, X31
	061 Call Component.get_transform, X0
	062 Compare X0, 0
	063 JumpIfEqual {81}
	064 Move X1, X31
	065 Call Transform.get_position, X0
	066 Subtract S3, S0, S10
	067 Subtract S4, S1, S9
	068 Subtract S5, S2, S8
	069 Move [X31+24], S0
	070 Move [X31+32], S1
	071 Multiply S0, S3, S3
	072 Multiply S1, S4, S4
	073 Multiply S3, S5, S5
	074 Add S0, S0, S1
	075 Add S0, S3, S0
	076 Move [X31+32], S2
	077 Move [X31+40], S0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move [X31+40], X31
	080 Move [X19+16], X31
	081 Call 0x1C17F20

Method: System.Single GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B3C20C LDR X0, [X0 + 0x598]
	0x03B3C210 BL 0x1C16CF4
	0x03B3C214 ADRP X0, 0x61E000
	0x03B3C218 LDR X0, [X0 + 0x3A8]
	0x03B3C21C BL 0x1C16CF4
	0x03B3C220 ADRP X0, 0x61E000
	0x03B3C224 LDR X0, [X0 + 0x368]
	0x03B3C228 BL 0x1C16CF4
	0x03B3C22C MOVZ W8, 0x1
	0x03B3C230 STRB W8, [X22 + 0x83F]
	0x03B3C234 LDR X0, [X21]
	0x03B3C238 LDR X21, [X19 + 0x60]
	0x03B3C23C LDR W8, [X0 + 0xE0]
	0x03B3C240 CBNZ W8, 0x3B3C248
	0x03B3C244 BL 0x1C16DFC
	0x03B3C248 MOV X0, X21
	0x03B3C24C MOV X1, X31
	0x03B3C250 MOV X2, X31
	0x03B3C254 BL 0x3C354F8
	0x03B3C258 TBZ X0, 0x0, 0x3B3C2D0
	0x03B3C25C CBZ X20, 0x3B3C410
	0x03B3C260 MOV X0, X20
	0x03B3C264 MOV X1, X31
	0x03B3C268 BL 0x3B6B738
	0x03B3C26C CBZ X0, 0x3B3C2A8
	0x03B3C270 ADRP X8, 0x61E000
	0x03B3C274 LDR X8, [X8 + 0x368]
	0x03B3C278 LDR X9, [X0]
	0x03B3C27C MOV X1, X0
	0x03B3C280 LDR X8, [X8]
	0x03B3C284 LDRB W11, [X9 + 0x130]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A7000
	007 Move W8, [X21+2096]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x61F000
	015 Move X0, [X0+768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2096], W8
	019 Move [X31+12], W31
	020 Move X0, [X20+368]
	021 Compare X0, 0
	022 JumpIfEqual {39}
	023 Move X8, 0x61F000
	024 Move X8, [X8+768]
	025 Add X2, X31, 12
	026 Move X1, X19
	027 Move X3, [X8]
	028 Call Dictionary`2<Object, Single>.TryGetValue, X0, X1, X2
	029 Move V0, [X31+12]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 Move S1, W31
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 Add X31, X31, 48
	038 Return V0
	039 Call 0x1C17F20

Method: System.Boolean IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)

Disassembly:
	0x03B3C288 LDRB W10, [X8 + 0x130]
	0x03B3C28C CMP W11, W10
	0x03B3C290 B.CC 0x3B3C2A8
	0x03B3C294 LDR X9, [X9 + 0xC8]
	0x03B3C298 ADD X9, X9, X10, 0x3, LSL
	0x03B3C29C LDUR X9, [X9 - 0x8]
	0x03B3C2A0 CMP X9, X8
	0x03B3C2A4 B.EQ 0x3B3C400
	0x03B3C2A8 MOV X0, X20
	0x03B3C2AC MOV X1, X31
	0x03B3C2B0 BL 0x3B6B738
	0x03B3C2B4 LDR X8, [X19]
	0x03B3C2B8 MOV X1, X0
	0x03B3C2BC LDR X9, [X8 + 0x608]
	0x03B3C2C0 LDR X2, [X8 + 0x610]
	0x03B3C2C4 MOV X0, X19
	0x03B3C2C8 BLR X9
	0x03B3C2CC B 0x3B3C2D4
	0x03B3C2D0 CBZ X20, 0x3B3C410
	0x03B3C2D4 LDR X21, [X19 + 0xF0]
	0x03B3C2D8 MOV X0, X20
	0x03B3C2DC MOV X1, X31
	0x03B3C2E0 BL 0x3B6B738
	0x03B3C2E4 CBZ X21, 0x3B3C410
	0x03B3C2E8 ADRP X8, 0x61E000
	0x03B3C2EC LDR X8, [X8 + 0x398]
	0x03B3C2F0 MOV X1, X0
	0x03B3C2F4 MOV X0, X21
	0x03B3C2F8 LDR X2, [X8]
	0x03B3C2FC BL 0x2D57DD8
	0x03B3C300 MOV X0, X20
	0x03B3C304 MOV X1, X31
	0x03B3C308 BL 0x3B6B738

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A7000
	006 Move W8, [X21+2097]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61F000
	014 Move X0, [X0+776]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2097], W8
	018 Move W8, [X20+104]
	019 Compare W8, 0
	020 JumpIfEqual {27}
	021 Move W0, 1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0
	027 Compare X19, 0
	028 JumpIfEqual {21}
	029 Move X8, 0x61F000
	030 Move X8, [X8+776]
	031 Move X9, [X19]
	032 Move X8, [X8]
	033 Move W11, [X9+304]
	034 Move W10, [X8+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X9, X9, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."

Method: System.Boolean IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B3C30C CBZ X0, 0x3B3C360
	0x03B3C310 ADRP X8, 0x61E000
	0x03B3C314 LDR X8, [X8 + 0x3A8]
	0x03B3C318 LDR X9, [X0]
	0x03B3C31C MOV X1, X0
	0x03B3C320 LDR X8, [X8]
	0x03B3C324 LDRB W11, [X9 + 0x130]
	0x03B3C328 LDRB W10, [X8 + 0x130]
	0x03B3C32C CMP W11, W10
	0x03B3C330 B.CC 0x3B3C360
	0x03B3C334 LDR X9, [X9 + 0xC8]
	0x03B3C338 ADD X9, X9, X10, 0x3, LSL
	0x03B3C33C LDUR X9, [X9 - 0x8]
	0x03B3C340 CMP X9, X8
	0x03B3C344 B.NE 0x3B3C360
	0x03B3C348 LDR X0, [X19 + 0x168]
	0x03B3C34C CBZ X0, 0x3B3C410
	0x03B3C350 ADRP X8, 0x61E000
	0x03B3C354 LDR X8, [X8 + 0x390]
	0x03B3C358 LDR X2, [X8]
	0x03B3C35C BL 0x2D57DD8
	0x03B3C360 LDR X21, [X19 + 0x1C8]
	0x03B3C364 MOV X0, X20
	0x03B3C368 MOV X1, X31
	0x03B3C36C BL 0x3B6B568
	0x03B3C370 CBZ X21, 0x3B3C410
	0x03B3C374 ADRP X9, 0x61E000
	0x03B3C378 LDR X9, [X9 + 0x3A0]
	0x03B3C37C LDR W10, [X21 + 0x1C]
	0x03B3C380 LDR X8, [X21 + 0x10]
	0x03B3C384 LDR X9, [X9]
	0x03B3C388 ADD W10, W10, 0x1
	0x03B3C38C STR W10, [X21 + 0x1C]
	0x03B3C390 CBZ X8, 0x3B3C410
	0x03B3C394 LDRSW X10, [X21 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A7000
	006 Move W8, [X21+2098]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61F000
	014 Move X0, [X0+776]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2098], W8
	018 Move W8, [X20+104]
	019 Compare W8, 0
	020 JumpIfEqual {24}
	021 Move W8, [X20+105]
	022 Compare W8, 0
	023 JumpIfNotEqual {33}
	024 Compare X19, 0
	025 JumpIfEqual {33}
	026 Move X8, 0x61F000
	027 Move X8, [X8+776]
	028 Move X9, [X19]
	029 Move X8, [X8]
	030 Move W11, [X9+304]
	031 Move W10, [X8+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, 1
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0

Method: System.Boolean IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)

Disassembly:
	0x03B3C398 LDR W11, [X8 + 0x18]
	0x03B3C39C MOV X1, X0
	0x03B3C3A0 CMP W10, W11
	0x03B3C3A4 B.CS 0x3B3C3BC
	0x03B3C3A8 ADD W9, W10, 0x1
	0x03B3C3AC ADD X8, X8, X10, 0x3, LSL
	0x03B3C3B0 STR W9, [X21 + 0x18]
	0x03B3C3B4 STR X1, [X8 + 0x20]
	0x03B3C3B8 B 0x3B3C3D0
	0x03B3C3BC LDR X8, [X9 + 0x20]
	0x03B3C3C0 MOV X0, X21
	0x03B3C3C4 LDR X8, [X8 + 0xC0]
	0x03B3C3C8 LDR X2, [X8 + 0x70]
	0x03B3C3CC BL 0x301BF90
	0x03B3C3D0 MOV X0, X20
	0x03B3C3D4 MOV X1, X31
	0x03B3C3D8 BL 0x3B6B568
	0x03B3C3DC LDR X8, [X19]
	0x03B3C3E0 MOV X1, X0
	0x03B3C3E4 MOV X0, X19
	0x03B3C3E8 LDP X20, X19, [X31 + 0x20]
	0x03B3C3EC LDR X3, [X8 + 0x748]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A7000
	006 Move W8, [X21+2099]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61F000
	014 Move X0, [X0+784]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2099], W8
	018 Move X0, [X20+240]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x61F000
	022 Move X8, [X8+784]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x2D59148, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B3C3F0 LDR X2, [X8 + 0x750]
	0x03B3C3F4 LDP X22, X21, [X31 + 0x10]
	0x03B3C3F8 LDR X30, [X31], #0x30
	0x03B3C3FC BR X3
	0x03B3C400 LDR X8, [X19]
	0x03B3C404 LDR X9, [X8 + 0x818]
	0x03B3C408 LDR X2, [X8 + 0x820]
	0x03B3C40C B 0x3B3C2C4
	0x03B3C410 BL 0x1C16F20
	0x03B3C414 STP X30, X21, [X31 - 0x20]!
	0x03B3C418 STP X20, X19, [X31 + 0x10]
	0x03B3C41C ADRP X21, 0x8A6000
	0x03B3C420 LDRB W8, [X21 + 0x840]
	0x03B3C424 MOV X20, X1
	0x03B3C428 MOV X19, X0
	0x03B3C42C TBNZ X8, 0x0, 0x3B3C450
	0x03B3C430 ADRP X0, 0x61E000
	0x03B3C434 LDR X0, [X0 + 0x268]
	0x03B3C438 BL 0x1C16CF4
	0x03B3C43C ADRP X0, 0x61E000
	0x03B3C440 LDR X0, [X0 + 0x3B0]
	0x03B3C444 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A7000
	006 Move W8, [X21+2100]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61F000
	014 Move X0, [X0+792]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2100], W8
	018 Move X0, [X20+248]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x61F000
	022 Move X8, [X8+792]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x2D59148, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B3C448 MOVZ W8, 0x1
	0x03B3C44C STRB W8, [X21 + 0x840]
	0x03B3C450 LDR X0, [X19 + 0xF0]
	0x03B3C454 CBZ X0, 0x3B3C4D0
	0x03B3C458 ADRP X8, 0x61E000
	0x03B3C45C LDR X8, [X8 + 0x268]
	0x03B3C460 ADRP X21, 0x61E000
	0x03B3C464 LDR X1, [X8]
	0x03B3C468 LDR X21, [X21 + 0x3B0]
	0x03B3C46C BL 0x2D57B54
	0x03B3C470 CMP W0, 0x1
	0x03B3C474 B.NE 0x3B3C48C
	0x03B3C478 LDR X0, [X19 + 0x80]
	0x03B3C47C CBZ X0, 0x3B3C48C
	0x03B3C480 LDR X2, [X21]
	0x03B3C484 MOV X1, X20
	0x03B3C488 BL 0x2729DBC
	0x03B3C48C LDR X0, [X19 + 0x90]
	0x03B3C490 CBZ X0, 0x3B3C4A0
	0x03B3C494 LDR X2, [X21]
	0x03B3C498 MOV X1, X20
	0x03B3C49C BL 0x2729DBC
	0x03B3C4A0 CBZ X20, 0x3B3C4D0
	0x03B3C4A4 MOV X0, X20
	0x03B3C4A8 MOV X1, X31
	0x03B3C4AC BL 0x3B6B568
	0x03B3C4B0 LDR X8, [X19]
	0x03B3C4B4 MOV X1, X0
	0x03B3C4B8 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A7000
	007 Move X22, 0x61F000
	008 Move W8, [X21+2101]
	009 Move X22, [X22+800]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x61F000
	017 Move X0, [X0+800]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2101], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call 0x1C17E00
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 Move X1, X0
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call XRBaseInteractable.IsHovered, X0, X1
	034 Return X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: System.Boolean IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B3C4BC LDP X20, X19, [X31 + 0x10]
	0x03B3C4C0 LDR X3, [X8 + 0x758]
	0x03B3C4C4 LDR X2, [X8 + 0x760]
	0x03B3C4C8 LDP X30, X21, [X31], #0x20
	0x03B3C4CC BR X3
	0x03B3C4D0 BL 0x1C16F20
	0x03B3C4D4 STR X30, [X31 - 0x30]!
	0x03B3C4D8 STP X22, X21, [X31 + 0x10]
	0x03B3C4DC STP X20, X19, [X31 + 0x20]
	0x03B3C4E0 ADRP X22, 0x8A6000
	0x03B3C4E4 ADRP X21, 0x5B7000
	0x03B3C4E8 LDRB W8, [X22 + 0x841]
	0x03B3C4EC LDR X21, [X21 + 0x598]
	0x03B3C4F0 MOV X20, X1
	0x03B3C4F4 MOV X19, X0
	0x03B3C4F8 TBNZ X8, 0x0, 0x3B3C558
	0x03B3C4FC ADRP X0, 0x61E000
	0x03B3C500 LDR X0, [X0 + 0x3B8]
	0x03B3C504 BL 0x1C16CF4
	0x03B3C508 ADRP X0, 0x61E000
	0x03B3C50C LDR X0, [X0 + 0x3C0]
	0x03B3C510 BL 0x1C16CF4
	0x03B3C514 ADRP X0, 0x61E000
	0x03B3C518 LDR X0, [X0 + 0x3C8]
	0x03B3C51C BL 0x1C16CF4
	0x03B3C520 ADRP X0, 0x61E000
	0x03B3C524 LDR X0, [X0 + 0x3D0]
	0x03B3C528 BL 0x1C16CF4
	0x03B3C52C ADRP X0, 0x5B7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A7000
	007 Move X22, 0x61F000
	008 Move W8, [X21+2102]
	009 Move X22, [X22+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x61F000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2102], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call 0x1C17E00
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 Move X1, X0
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call XRBaseInteractable.IsSelected, X0, X1
	034 Return X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: UnityEngine.GameObject GetCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B3C530 LDR X0, [X0 + 0x598]
	0x03B3C534 BL 0x1C16CF4
	0x03B3C538 ADRP X0, 0x61E000
	0x03B3C53C LDR X0, [X0 + 0x3A8]
	0x03B3C540 BL 0x1C16CF4
	0x03B3C544 ADRP X0, 0x61E000
	0x03B3C548 LDR X0, [X0 + 0x368]
	0x03B3C54C BL 0x1C16CF4
	0x03B3C550 MOVZ W8, 0x1
	0x03B3C554 STRB W8, [X22 + 0x841]
	0x03B3C558 LDR X0, [X21]
	0x03B3C55C LDR X21, [X19 + 0x60]
	0x03B3C560 LDR W8, [X0 + 0xE0]
	0x03B3C564 CBNZ W8, 0x3B3C56C
	0x03B3C568 BL 0x1C16DFC
	0x03B3C56C MOV X0, X21
	0x03B3C570 MOV X1, X31
	0x03B3C574 MOV X2, X31
	0x03B3C578 BL 0x3C354F8
	0x03B3C57C TBZ X0, 0x0, 0x3B3C5F4
	0x03B3C580 CBZ X20, 0x3B3C724
	0x03B3C584 MOV X0, X20
	0x03B3C588 MOV X1, X31
	0x03B3C58C BL 0x3B6B814
	0x03B3C590 CBZ X0, 0x3B3C5CC
	0x03B3C594 ADRP X8, 0x61E000
	0x03B3C598 LDR X8, [X8 + 0x368]
	0x03B3C59C LDR X9, [X0]
	0x03B3C5A0 MOV X1, X0
	0x03B3C5A4 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A7000
	007 Move W8, [X21+2103]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x61F000
	015 Move X0, [X0+816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2103], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+352]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, 0x61F000
	024 Move X8, [X8+816]
	025 Add X2, X31, 8
	026 Move X1, X19
	027 Move X3, [X8]
	028 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	029 Move X8, [X31+8]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Add X31, X31, 48
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B3C5A8 LDRB W11, [X9 + 0x130]
	0x03B3C5AC LDRB W10, [X8 + 0x130]
	0x03B3C5B0 CMP W11, W10
	0x03B3C5B4 B.CC 0x3B3C5CC
	0x03B3C5B8 LDR X9, [X9 + 0xC8]
	0x03B3C5BC ADD X9, X9, X10, 0x3, LSL
	0x03B3C5C0 LDUR X9, [X9 - 0x8]
	0x03B3C5C4 CMP X9, X8
	0x03B3C5C8 B.EQ 0x3B3C714
	0x03B3C5CC MOV X0, X20
	0x03B3C5D0 MOV X1, X31
	0x03B3C5D4 BL 0x3B6B814
	0x03B3C5D8 LDR X8, [X19]
	0x03B3C5DC MOV X1, X0
	0x03B3C5E0 LDR X9, [X8 + 0x618]
	0x03B3C5E4 LDR X2, [X8 + 0x620]
	0x03B3C5E8 MOV X0, X19
	0x03B3C5EC BLR X9
	0x03B3C5F0 B 0x3B3C5F8
	0x03B3C5F4 CBZ X20, 0x3B3C724
	0x03B3C5F8 LDR X21, [X19 + 0xF0]
	0x03B3C5FC MOV X0, X20
	0x03B3C600 MOV X1, X31
	0x03B3C604 BL 0x3B6B814
	0x03B3C608 CBZ X21, 0x3B3C724
	0x03B3C60C ADRP X8, 0x61E000
	0x03B3C610 LDR X8, [X8 + 0x3C0]
	0x03B3C614 MOV X1, X0
	0x03B3C618 MOV X0, X21
	0x03B3C61C LDR X2, [X8]
	0x03B3C620 BL 0x2D57E88
	0x03B3C624 LDR X0, [X19 + 0x168]
	0x03B3C628 CBZ X0, 0x3B3C724
	0x03B3C62C ADRP X8, 0x61E000
	0x03B3C630 LDR X8, [X8 + 0x3C8]
	0x03B3C634 LDR X1, [X8]
	0x03B3C638 BL 0x2D57B54
	0x03B3C63C CMP W0, 0x1
	0x03B3C640 B.LT 0x3B3C6B8
	0x03B3C644 MOV X0, X20
	0x03B3C648 MOV X1, X31
	0x03B3C64C BL 0x3B6B814
	0x03B3C650 CBZ X0, 0x3B3C6B8
	0x03B3C654 ADRP X8, 0x61E000
	0x03B3C658 LDR X8, [X8 + 0x3A8]
	0x03B3C65C LDR X9, [X0]
	0x03B3C660 MOV X21, X0
	0x03B3C664 LDR X8, [X8]
	0x03B3C668 LDRB W11, [X9 + 0x130]
	0x03B3C66C LDRB W10, [X8 + 0x130]
	0x03B3C670 CMP W11, W10
	0x03B3C674 B.CC 0x3B3C6B8
	0x03B3C678 LDR X9, [X9 + 0xC8]
	0x03B3C67C ADD X9, X9, X10, 0x3, LSL
	0x03B3C680 LDUR X9, [X9 - 0x8]
	0x03B3C684 CMP X9, X8
	0x03B3C688 B.NE 0x3B3C6B8
	0x03B3C68C MOV X0, X19
	0x03B3C690 MOV X1, X21
	0x03B3C694 BL 0x3B3B3F0
	0x03B3C698 TBNZ X0, 0x0, 0x3B3C6B8
	0x03B3C69C LDR X0, [X19 + 0x168]
	0x03B3C6A0 CBZ X0, 0x3B3C724
	0x03B3C6A4 ADRP X8, 0x61E000
	0x03B3C6A8 LDR X8, [X8 + 0x3B8]
	0x03B3C6AC MOV X1, X21
	0x03B3C6B0 LDR X2, [X8]
	0x03B3C6B4 BL 0x2D57E88
	0x03B3C6B8 LDR X21, [X19 + 0x1C8]
	0x03B3C6BC MOV X0, X20
	0x03B3C6C0 MOV X1, X31
	0x03B3C6C4 BL 0x3B6B568
	0x03B3C6C8 CBZ X21, 0x3B3C724
	0x03B3C6CC ADRP X8, 0x61E000
	0x03B3C6D0 LDR X8, [X8 + 0x3D0]
	0x03B3C6D4 MOV X1, X0
	0x03B3C6D8 MOV X0, X21
	0x03B3C6DC LDR X2, [X8]
	0x03B3C6E0 BL 0x301D7A8
	0x03B3C6E4 MOV X0, X20
	0x03B3C6E8 MOV X1, X31
	0x03B3C6EC BL 0x3B6B568
	0x03B3C6F0 LDR X8, [X19]
	0x03B3C6F4 MOV X1, X0
	0x03B3C6F8 MOV X0, X19
	0x03B3C6FC LDP X20, X19, [X31 + 0x20]
	0x03B3C700 LDR X3, [X8 + 0x768]
	0x03B3C704 LDR X2, [X8 + 0x770]
	0x03B3C708 LDP X22, X21, [X31 + 0x10]
	0x03B3C70C LDR X30, [X31], #0x30
	0x03B3C710 BR X3
	0x03B3C714 LDR X8, [X19]
	0x03B3C718 LDR X9, [X8 + 0x828]
	0x03B3C71C LDR X2, [X8 + 0x830]
	0x03B3C720 B 0x3B3C5E8
	0x03B3C724 BL 0x1C16F20
	0x03B3C728 STP X30, X21, [X31 - 0x20]!
	0x03B3C72C STP X20, X19, [X31 + 0x10]
	0x03B3C730 ADRP X21, 0x8A6000
	0x03B3C734 LDRB W8, [X21 + 0x842]
	0x03B3C738 MOV X20, X1
	0x03B3C73C MOV X19, X0
	0x03B3C740 TBNZ X8, 0x0, 0x3B3C764
	0x03B3C744 ADRP X0, 0x61E000
	0x03B3C748 LDR X0, [X0 + 0x268]
	0x03B3C74C BL 0x1C16CF4
	0x03B3C750 ADRP X0, 0x61E000
	0x03B3C754 LDR X0, [X0 + 0x3D8]
	0x03B3C758 BL 0x1C16CF4
	0x03B3C75C MOVZ W8, 0x1
	0x03B3C760 STRB W8, [X21 + 0x842]
	0x03B3C764 LDR X0, [X19 + 0xF0]
	0x03B3C768 CBZ X0, 0x3B3C7E0
	0x03B3C76C ADRP X8, 0x61E000
	0x03B3C770 LDR X8, [X8 + 0x268]
	0x03B3C774 ADRP X21, 0x61E000
	0x03B3C778 LDR X1, [X8]
	0x03B3C77C LDR X21, [X21 + 0x3D8]
	0x03B3C780 BL 0x2D57B54
	0x03B3C784 CBNZ W0, 0x3B3C79C
	0x03B3C788 LDR X0, [X19 + 0x88]
	0x03B3C78C CBZ X0, 0x3B3C79C
	0x03B3C790 LDR X2, [X21]
	0x03B3C794 MOV X1, X20
	0x03B3C798 BL 0x2729DBC
	0x03B3C79C LDR X0, [X19 + 0x98]
	0x03B3C7A0 CBZ X0, 0x3B3C7B0
	0x03B3C7A4 LDR X2, [X21]
	0x03B3C7A8 MOV X1, X20
	0x03B3C7AC BL 0x2729DBC
	0x03B3C7B0 CBZ X20, 0x3B3C7E0
	0x03B3C7B4 MOV X0, X20
	0x03B3C7B8 MOV X1, X31
	0x03B3C7BC BL 0x3B6B568
	0x03B3C7C0 LDR X8, [X19]
	0x03B3C7C4 MOV X1, X0
	0x03B3C7C8 MOV X0, X19
	0x03B3C7CC LDP X20, X19, [X31 + 0x10]
	0x03B3C7D0 LDR X3, [X8 + 0x778]
	0x03B3C7D4 LDR X2, [X8 + 0x780]
	0x03B3C7D8 LDP X30, X21, [X31], #0x20
	0x03B3C7DC BR X3
	0x03B3C7E0 BL 0x1C16F20
	0x03B3C7E4 STP X30, X21, [X31 - 0x20]!
	0x03B3C7E8 STP X20, X19, [X31 + 0x10]
	0x03B3C7EC ADRP X21, 0x8A6000
	0x03B3C7F0 LDRB W8, [X21 + 0x843]
	0x03B3C7F4 MOV X20, X1
	0x03B3C7F8 MOV X19, X0
	0x03B3C7FC TBNZ X8, 0x0, 0x3B3C838
	0x03B3C800 ADRP X0, 0x61E000
	0x03B3C804 LDR X0, [X0 + 0x390]
	0x03B3C808 BL 0x1C16CF4
	0x03B3C80C ADRP X0, 0x61E000
	0x03B3C810 LDR X0, [X0 + 0x3E0]
	0x03B3C814 BL 0x1C16CF4
	0x03B3C818 ADRP X0, 0x61E000
	0x03B3C81C LDR X0, [X0 + 0x280]
	0x03B3C820 BL 0x1C16CF4
	0x03B3C824 ADRP X0, 0x61E000
	0x03B3C828 LDR X0, [X0 + 0x3A8]
	0x03B3C82C BL 0x1C16CF4
	0x03B3C830 MOVZ W8, 0x1
	0x03B3C834 STRB W8, [X21 + 0x843]
	0x03B3C838 CBZ X20, 0x3B3C93C
	0x03B3C83C LDR X21, [X19 + 0xF8]
	0x03B3C840 MOV X0, X20
	0x03B3C844 MOV X1, X31
	0x03B3C848 BL 0x3B6B904

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8A7000
	009 Move W8, [X21+2104]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x61F000
	017 Move X0, [X0+824]
	018 Call 0x1C17CF4
	019 Move X0, 0x61F000
	020 Move X0, [X0+832]
	021 Call 0x1C17CF4
	022 Move X0, 0x61F000
	023 Move X0, [X0+840]
	024 Call 0x1C17CF4
	025 Move X0, 0x61F000
	026 Move X0, [X0+816]
	027 Call 0x1C17CF4
	028 Move X0, 0x61F000
	029 Move X0, [X0+848]
	030 Call 0x1C17CF4
	031 Move X0, 0x61F000
	032 Move X0, [X0+760]
	033 Call 0x1C17CF4
	034 Move X0, 0x5B8000
	035 Move X0, [X0+3448]
	036 Call 0x1C17CF4
	037 Move X0, 0x5B8000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+2104], W8
	042 Move X23, 0x5B8000
	043 Move X23, [X23+1432]
	044 Move [X31+8], X31
	045 Compare X19, 0
	046 JumpIfEqual {63}
	047 Move X10, 0x61F000
	048 Move X8, [X19]
	049 Move X10, [X10+760]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move W2, 5
	061 Move X0, X19
	062 Call 0x1C5D788
	063 Move X21, X31
	064 Move W9, [X10]
	065 Add W9, W9, 5
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X21, X0
	073 Move X0, [X23]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X21
	079 Move X1, X31
	080 Move X2, X31
	081 Call Object.op_Equality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {186}
	086 Compare X21, 0
	087 JumpIfEqual {194}
	088 Move X8, 0x61F000
	089 Move X8, [X8+824]
	090 Move X0, X21
	091 Move X1, [X8]
	092 Call 0x21A4894, X0
	093 Compare X0, 0
	094 JumpIfEqual {186}
	095 Move X21, X0
	096 Move X0, [X20+352]
	097 Compare X0, 0
	098 JumpIfEqual {194}
	099 Move X8, 0x61F000
	100 Move X8, [X8+816]
	101 Add X2, X31, 8
	102 Move X1, X19
	103 Move X3, [X8]
	104 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {126}
	109 Move X0, [X23]
	110 Move X22, [X31+8]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X22
	116 Move X1, X31
	117 Call Object.Destroy, X0
	118 Move X0, [X20+352]
	119 Compare X0, 0
	120 JumpIfEqual {194}
	121 Move X8, 0x61F000
	122 Move X8, [X8+840]
	123 Move X1, X19
	124 Move X2, [X8]
	125 Call Dictionary`2<Object, Object>.Remove, X0, X1
	126 Move X0, [X23]
	127 Move X22, [X20+96]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X22
	133 Move X1, X31
	134 Move X2, X31
	135 Call Object.op_Inequality, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {186}
	140 Move X0, [X23]
	141 Move X22, [X20+96]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X8, 0x5B8000
	147 Move X8, [X8+3448]
	148 Move X0, X22
	149 Move X1, [X8]
	150 Call 0x222E35C, X0
	151 Move X8, [X20+352]
	152 Compare X8, 0
	153 JumpIfEqual {194}
	154 Move X9, 0x61F000
	155 Move X9, [X9+832]
	156 Move X20, X0
	157 Move X0, X8
	158 Move X1, X19
	159 Move X3, [X9]
	160 Move X2, X20
	161 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	162 Move X10, 0x61F000
	163 Move X8, [X21]
	164 Move X10, [X10+848]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Move X1, [X10]
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X21
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X2, [X0+8]
	183 Move X0, X21
	184 Move X1, X20
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X20, [X31+48]
	187 Move X19, [X31+56]
	188 Move X22, [X31+32]
	189 Move X21, [X31+40]
	190 Move X30, [X31+16]
	191 Move X23, [X31+24]
	192 Add X31, X31, 64
	193 Return 
	194 Call 0x1C17F20

Method: System.Void RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03B3C84C CBZ X21, 0x3B3C93C
	0x03B3C850 ADRP X8, 0x61E000
	0x03B3C854 LDR X8, [X8 + 0x3E0]
	0x03B3C858 MOV X1, X0
	0x03B3C85C MOV X0, X21
	0x03B3C860 LDR X2, [X8]
	0x03B3C864 BL 0x2D57DD8
	0x03B3C868 MOV X0, X20
	0x03B3C86C MOV X1, X31
	0x03B3C870 BL 0x3B6B904
	0x03B3C874 CBZ X0, 0x3B3C8C8
	0x03B3C878 ADRP X8, 0x61E000
	0x03B3C87C LDR X8, [X8 + 0x3A8]
	0x03B3C880 LDR X9, [X0]
	0x03B3C884 MOV X1, X0
	0x03B3C888 LDR X8, [X8]
	0x03B3C88C LDRB W11, [X9 + 0x130]
	0x03B3C890 LDRB W10, [X8 + 0x130]
	0x03B3C894 CMP W11, W10
	0x03B3C898 B.CC 0x3B3C8C8
	0x03B3C89C LDR X9, [X9 + 0xC8]
	0x03B3C8A0 ADD X9, X9, X10, 0x3, LSL
	0x03B3C8A4 LDUR X9, [X9 - 0x8]
	0x03B3C8A8 CMP X9, X8
	0x03B3C8AC B.NE 0x3B3C8C8
	0x03B3C8B0 LDR X0, [X19 + 0x168]
	0x03B3C8B4 CBZ X0, 0x3B3C93C
	0x03B3C8B8 ADRP X8, 0x61E000
	0x03B3C8BC LDR X8, [X8 + 0x390]
	0x03B3C8C0 LDR X2, [X8]
	0x03B3C8C4 BL 0x2D57DD8
	0x03B3C8C8 LDR X0, [X19 + 0xF8]
	0x03B3C8CC CBZ X0, 0x3B3C93C
	0x03B3C8D0 ADRP X8, 0x61E000
	0x03B3C8D4 LDR X8, [X8 + 0x280]
	0x03B3C8D8 LDR X1, [X8]
	0x03B3C8DC BL 0x2D57B54
	0x03B3C8E0 CMP W0, 0x1
	0x03B3C8E4 B.NE 0x3B3C8F8
	0x03B3C8E8 MOV X0, X20
	0x03B3C8EC MOV X1, X31
	0x03B3C8F0 BL 0x3B6B904
	0x03B3C8F4 STR X0, [X19 + 0x100]
	0x03B3C8F8 MOV X0, X20
	0x03B3C8FC MOV X1, X31
	0x03B3C900 BL 0x3B6B904
	0x03B3C904 MOV X1, X0
	0x03B3C908 MOV X0, X19
	0x03B3C90C BL 0x3B3BA58
	0x03B3C910 MOV X0, X20
	0x03B3C914 MOV X1, X31
	0x03B3C918 BL 0x3B6B568
	0x03B3C91C LDR X8, [X19]
	0x03B3C920 MOV X1, X0
	0x03B3C924 MOV X0, X19
	0x03B3C928 LDP X20, X19, [X31 + 0x10]
	0x03B3C92C LDR X3, [X8 + 0x788]
	0x03B3C930 LDR X2, [X8 + 0x790]
	0x03B3C934 LDP X30, X21, [X31], #0x20
	0x03B3C938 BR X3
	0x03B3C93C BL 0x1C16F20
	0x03B3C940 STP X30, X21, [X31 - 0x20]!
	0x03B3C944 STP X20, X19, [X31 + 0x10]
	0x03B3C948 ADRP X21, 0x8A6000
	0x03B3C94C LDRB W8, [X21 + 0x844]
	0x03B3C950 MOV X20, X1
	0x03B3C954 MOV X19, X0
	0x03B3C958 TBNZ X8, 0x0, 0x3B3C97C
	0x03B3C95C ADRP X0, 0x61E000
	0x03B3C960 LDR X0, [X0 + 0x280]
	0x03B3C964 BL 0x1C16CF4
	0x03B3C968 ADRP X0, 0x61E000
	0x03B3C96C LDR X0, [X0 + 0x3E8]
	0x03B3C970 BL 0x1C16CF4
	0x03B3C974 MOVZ W8, 0x1
	0x03B3C978 STRB W8, [X21 + 0x844]
	0x03B3C97C LDR X0, [X19 + 0xF8]
	0x03B3C980 CBZ X0, 0x3B3C9FC
	0x03B3C984 ADRP X8, 0x61E000
	0x03B3C988 LDR X8, [X8 + 0x280]
	0x03B3C98C ADRP X21, 0x61E000
	0x03B3C990 LDR X1, [X8]
	0x03B3C994 LDR X21, [X21 + 0x3E8]
	0x03B3C998 BL 0x2D57B54
	0x03B3C99C CMP W0, 0x1
	0x03B3C9A0 B.NE 0x3B3C9B8
	0x03B3C9A4 LDR X0, [X19 + 0xA0]
	0x03B3C9A8 CBZ X0, 0x3B3C9B8
	0x03B3C9AC LDR X2, [X21]
	0x03B3C9B0 MOV X1, X20
	0x03B3C9B4 BL 0x2729DBC
	0x03B3C9B8 LDR X0, [X19 + 0xB0]
	0x03B3C9BC CBZ X0, 0x3B3C9CC
	0x03B3C9C0 LDR X2, [X21]
	0x03B3C9C4 MOV X1, X20
	0x03B3C9C8 BL 0x2729DBC
	0x03B3C9CC CBZ X20, 0x3B3C9FC
	0x03B3C9D0 MOV X0, X20
	0x03B3C9D4 MOV X1, X31
	0x03B3C9D8 BL 0x3B6B568
	0x03B3C9DC LDR X8, [X19]
	0x03B3C9E0 MOV X1, X0
	0x03B3C9E4 MOV X0, X19
	0x03B3C9E8 LDP X20, X19, [X31 + 0x10]
	0x03B3C9EC LDR X3, [X8 + 0x798]
	0x03B3C9F0 LDR X2, [X8 + 0x7A0]
	0x03B3C9F4 LDP X30, X21, [X31], #0x20
	0x03B3C9F8 BR X3
	0x03B3C9FC BL 0x1C16F20
	0x03B3CA00 STP X30, X21, [X31 - 0x20]!
	0x03B3CA04 STP X20, X19, [X31 + 0x10]
	0x03B3CA08 ADRP X21, 0x8A6000
	0x03B3CA0C LDRB W8, [X21 + 0x845]
	0x03B3CA10 MOV X20, X1
	0x03B3CA14 MOV X19, X0
	0x03B3CA18 TBNZ X8, 0x0, 0x3B3CA54
	0x03B3CA1C ADRP X0, 0x61E000
	0x03B3CA20 LDR X0, [X0 + 0x3B8]
	0x03B3CA24 BL 0x1C16CF4
	0x03B3CA28 ADRP X0, 0x61E000
	0x03B3CA2C LDR X0, [X0 + 0x3F0]
	0x03B3CA30 BL 0x1C16CF4
	0x03B3CA34 ADRP X0, 0x61E000
	0x03B3CA38 LDR X0, [X0 + 0x3C8]
	0x03B3CA3C BL 0x1C16CF4
	0x03B3CA40 ADRP X0, 0x61E000
	0x03B3CA44 LDR X0, [X0 + 0x3A8]
	0x03B3CA48 BL 0x1C16CF4
	0x03B3CA4C MOVZ W8, 0x1
	0x03B3CA50 STRB W8, [X21 + 0x845]
	0x03B3CA54 CBZ X20, 0x3B3CB58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A7000
	007 Move W8, [X21+2105]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x61F000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move X0, 0x61F000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move X0, 0x61F000
	021 Move X0, [X0+816]
	022 Call 0x1C17CF4
	023 Move X0, 0x61F000
	024 Move X0, [X0+848]
	025 Call 0x1C17CF4
	026 Move X0, 0x61F000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move X0, 0x5B8000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2105], W8
	034 Move X22, 0x5B8000
	035 Move X22, [X22+1432]
	036 Move [X31+8], X31
	037 Compare X19, 0
	038 JumpIfEqual {55}
	039 Move X10, 0x61F000
	040 Move X8, [X19]
	041 Move X10, [X10+760]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 5
	053 Move X0, X19
	054 Call 0x1C5D788
	055 Move X21, X31
	056 Move W9, [X10]
	057 Add W9, W9, 5
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X21, X0
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {142}
	078 Compare X21, 0
	079 JumpIfEqual {148}
	080 Move X8, 0x61F000
	081 Move X8, [X8+824]
	082 Move X0, X21
	083 Move X1, [X8]
	084 Call 0x21A4894, X0
	085 Compare X0, 0
	086 JumpIfEqual {142}
	087 Move X21, X0
	088 Move X0, [X20+352]
	089 Compare X0, 0
	090 JumpIfEqual {148}
	091 Move X8, 0x61F000
	092 Move X8, [X8+816]
	093 Add X2, X31, 8
	094 Move X1, X19
	095 Move X3, [X8]
	096 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {142}
	101 Move X0, [X22]
	102 Move X22, [X31+8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X22
	108 Move X1, X31
	109 Call Object.Destroy, X0
	110 Move X0, [X20+352]
	111 Compare X0, 0
	112 JumpIfEqual {148}
	113 Move X8, 0x61F000
	114 Move X8, [X8+840]
	115 Move X1, X19
	116 Move X2, [X8]
	117 Call Dictionary`2<Object, Object>.Remove, X0, X1
	118 Move X10, 0x61F000
	119 Move X8, [X21]
	120 Move X10, [X10+848]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Move X1, [X10]
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move W2, 1
	132 Move X0, X21
	133 Call 0x1C5D788
	134 Move W9, [X10]
	135 Add W9, W9, 1
	136 Add X8, X8, W9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X21
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move X30, [X31+48]
	147 Return 
	148 Call 0x1C17F20

Method: System.Void CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B3CA58 LDR X21, [X19 + 0xF8]
	0x03B3CA5C MOV X0, X20
	0x03B3CA60 MOV X1, X31
	0x03B3CA64 BL 0x3B6B9E0
	0x03B3CA68 CBZ X21, 0x3B3CB58
	0x03B3CA6C ADRP X8, 0x61E000
	0x03B3CA70 LDR X8, [X8 + 0x3F0]
	0x03B3CA74 MOV X1, X0
	0x03B3CA78 MOV X0, X21
	0x03B3CA7C LDR X2, [X8]
	0x03B3CA80 BL 0x2D57E88
	0x03B3CA84 LDR X0, [X19 + 0x168]
	0x03B3CA88 CBZ X0, 0x3B3CB58
	0x03B3CA8C ADRP X8, 0x61E000
	0x03B3CA90 LDR X8, [X8 + 0x3C8]
	0x03B3CA94 LDR X1, [X8]
	0x03B3CA98 BL 0x2D57B54
	0x03B3CA9C CMP W0, 0x1
	0x03B3CAA0 B.LT 0x3B3CB18
	0x03B3CAA4 MOV X0, X20
	0x03B3CAA8 MOV X1, X31
	0x03B3CAAC BL 0x3B6B9E0
	0x03B3CAB0 CBZ X0, 0x3B3CB18
	0x03B3CAB4 ADRP X8, 0x61E000
	0x03B3CAB8 LDR X8, [X8 + 0x3A8]
	0x03B3CABC LDR X9, [X0]
	0x03B3CAC0 MOV X21, X0
	0x03B3CAC4 LDR X8, [X8]
	0x03B3CAC8 LDRB W11, [X9 + 0x130]
	0x03B3CACC LDRB W10, [X8 + 0x130]
	0x03B3CAD0 CMP W11, W10
	0x03B3CAD4 B.CC 0x3B3CB18
	0x03B3CAD8 LDR X9, [X9 + 0xC8]
	0x03B3CADC ADD X9, X9, X10, 0x3, LSL
	0x03B3CAE0 LDUR X9, [X9 - 0x8]
	0x03B3CAE4 CMP X9, X8
	0x03B3CAE8 B.NE 0x3B3CB18
	0x03B3CAEC MOV X0, X19
	0x03B3CAF0 MOV X1, X21
	0x03B3CAF4 BL 0x3B3B398
	0x03B3CAF8 TBNZ X0, 0x0, 0x3B3CB18
	0x03B3CAFC LDR X0, [X19 + 0x168]
	0x03B3CB00 CBZ X0, 0x3B3CB58
	0x03B3CB04 ADRP X8, 0x61E000
	0x03B3CB08 LDR X8, [X8 + 0x3B8]
	0x03B3CB0C MOV X1, X21
	0x03B3CB10 LDR X2, [X8]
	0x03B3CB14 BL 0x2D57E88
	0x03B3CB18 LDRB W21, [X20 + 0x28]
	0x03B3CB1C MOV X0, X20
	0x03B3CB20 MOV X1, X31
	0x03B3CB24 BL 0x3B6B568
	0x03B3CB28 LDR X8, [X19]
	0x03B3CB2C MOV X1, X0
	0x03B3CB30 CBZ W21, 0x3B3CB40
	0x03B3CB34 LDR X3, [X8 + 0x7C8]
	0x03B3CB38 LDR X2, [X8 + 0x7D0]
	0x03B3CB3C B 0x3B3CB48
	0x03B3CB40 LDR X3, [X8 + 0x7A8]
	0x03B3CB44 LDR X2, [X8 + 0x7B0]
	0x03B3CB48 MOV X0, X19
	0x03B3CB4C LDP X20, X19, [X31 + 0x10]
	0x03B3CB50 LDP X30, X21, [X31], #0x20
	0x03B3CB54 BR X3
	0x03B3CB58 BL 0x1C16F20
	0x03B3CB5C STR X30, [X31 - 0x30]!
	0x03B3CB60 STP X22, X21, [X31 + 0x10]
	0x03B3CB64 STP X20, X19, [X31 + 0x20]
	0x03B3CB68 ADRP X21, 0x8A6000
	0x03B3CB6C LDRB W8, [X21 + 0x846]
	0x03B3CB70 MOV X20, X1
	0x03B3CB74 MOV X19, X0
	0x03B3CB78 TBNZ X8, 0x0, 0x3B3CBA8
	0x03B3CB7C ADRP X0, 0x61E000
	0x03B3CB80 LDR X0, [X0 + 0x3F8]
	0x03B3CB84 BL 0x1C16CF4
	0x03B3CB88 ADRP X0, 0x61E000
	0x03B3CB8C LDR X0, [X0 + 0x280]
	0x03B3CB90 BL 0x1C16CF4
	0x03B3CB94 ADRP X0, 0x61E000
	0x03B3CB98 LDR X0, [X0 + 0x400]
	0x03B3CB9C BL 0x1C16CF4
	0x03B3CBA0 MOVZ W8, 0x1
	0x03B3CBA4 STRB W8, [X21 + 0x846]
	0x03B3CBA8 LDR X0, [X19 + 0xF8]
	0x03B3CBAC CBZ X0, 0x3B3CC8C
	0x03B3CBB0 ADRP X21, 0x61E000
	0x03B3CBB4 LDR X21, [X21 + 0x280]
	0x03B3CBB8 ADRP X22, 0x61E000
	0x03B3CBBC LDR X1, [X21]
	0x03B3CBC0 LDR X22, [X22 + 0x400]
	0x03B3CBC4 BL 0x2D57B54
	0x03B3CBC8 CBNZ W0, 0x3B3CBE0
	0x03B3CBCC LDR X0, [X19 + 0xA8]
	0x03B3CBD0 CBZ X0, 0x3B3CBE0
	0x03B3CBD4 LDR X2, [X22]
	0x03B3CBD8 MOV X1, X20
	0x03B3CBDC BL 0x2729DBC
	0x03B3CBE0 LDR X0, [X19 + 0xB8]
	0x03B3CBE4 CBZ X0, 0x3B3CBF4
	0x03B3CBE8 LDR X2, [X22]
	0x03B3CBEC MOV X1, X20
	0x03B3CBF0 BL 0x2729DBC
	0x03B3CBF4 CBZ X20, 0x3B3CC8C
	0x03B3CBF8 LDRB W22, [X20 + 0x28]
	0x03B3CBFC MOV X0, X20
	0x03B3CC00 MOV X1, X31
	0x03B3CC04 BL 0x3B6B568
	0x03B3CC08 LDR X8, [X19]
	0x03B3CC0C MOV X1, X0
	0x03B3CC10 CBZ W22, 0x3B3CC20
	0x03B3CC14 LDR X9, [X8 + 0x7D8]
	0x03B3CC18 LDR X2, [X8 + 0x7E0]
	0x03B3CC1C B 0x3B3CC28
	0x03B3CC20 LDR X9, [X8 + 0x7B8]
	0x03B3CC24 LDR X2, [X8 + 0x7C0]
	0x03B3CC28 MOV X0, X19
	0x03B3CC2C BLR X9
	0x03B3CC30 LDR X0, [X19 + 0xF8]
	0x03B3CC34 CBZ X0, 0x3B3CC8C
	0x03B3CC38 LDR X1, [X21]
	0x03B3CC3C BL 0x2D57B54
	0x03B3CC40 CBZ W0, 0x3B3CC54
	0x03B3CC44 LDP X20, X19, [X31 + 0x20]
	0x03B3CC48 LDP X22, X21, [X31 + 0x10]
	0x03B3CC4C LDR X30, [X31], #0x30
	0x03B3CC50 RET
	0x03B3CC54 LDR X0, [X19 + 0x150]
	0x03B3CC58 STR X31, [X19 + 0x100]
	0x03B3CC5C CBZ X0, 0x3B3CC8C
	0x03B3CC60 ADRP X20, 0x61E000
	0x03B3CC64 LDR X20, [X20 + 0x3F8]
	0x03B3CC68 LDR X1, [X20]
	0x03B3CC6C BL 0x2AA8440
	0x03B3CC70 LDR X0, [X19 + 0x158]
	0x03B3CC74 CBZ X0, 0x3B3CC8C
	0x03B3CC78 LDR X1, [X20]
	0x03B3CC7C LDP X20, X19, [X31 + 0x20]
	0x03B3CC80 LDP X22, X21, [X31 + 0x10]
	0x03B3CC84 LDR X30, [X31], #0x30
	0x03B3CC88 B 0x2AA8440
	0x03B3CC8C BL 0x1C16F20
	0x03B3CC90 STP X30, X21, [X31 - 0x20]!
	0x03B3CC94 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D10
	003 Move [X31+112], D9
	004 Move [X31+120], D8
	005 Move [X31+128], X30
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X22, 0x8A7000
	012 Move X21, 0x5B8000
	013 Move W8, [X22+2106]
	014 Move X21, [X21+1432]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x61F000
	022 Move X0, [X0+856]
	023 Call 0x1C17CF4
	024 Move X0, 0x61F000
	025 Move X0, [X0+864]
	026 Call 0x1C17CF4
	027 Move X0, 0x5B8000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2106], W8
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X1, X19
	035 Move X9, [X8+1448]
	036 Move X2, [X8+1456]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X21]
	039 Move X21, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move X22, [X20+336]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {146}
	054 Compare X21, 0
	055 JumpIfEqual {171}
	056 Move X0, X21
	057 Move X1, X31
	058 Call Transform.get_position, X0
	059 Move X0, X21
	060 Move X1, X31
	061 Move V8, V0
	062 Move V9, V1
	063 Move V10, V2
	064 Call Transform.get_rotation, X0
	065 Move V4, V0
	066 Move V5, V1
	067 Move V6, V2
	068 Move V7, V3
	069 Add X0, X31, 32
	070 Move V0, V8
	071 Move V1, V9
	072 Move V2, V10
	073 Move V3, V4
	074 Move V4, V5
	075 Move V5, V6
	076 Move V6, V7
	077 Move X1, X31
	078 Move [X31+32], X31
	079 Move [X31+40], X31
	080 Move [X31+56], W31
	081 Move [X31+48], X31
	082 Call Pose..ctor, X0, X1, X2
	083 Compare X22, 0
	084 JumpIfEqual {171}
	085 Move X23, 0x61F000
	086 Move X23, [X23+864]
	087 Move V0, [X31+2]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Add X2, X31, 64
	090 Move X3, [X23]
	091 Move X0, X22
	092 Move X1, X19
	093 Move [X31+4], V0
	094 Move [X31+76], V1
	095 Call Dictionary`2<Object, Pose>.set_Item, X0, X1, X2
	096 Move X20, [X20+344]
	097 Move X0, X21
	098 Move X1, X31
	099 Call Transform.get_localPosition, X0
	100 Move X0, X21
	101 Move X1, X31
	102 Move V8, V0
	103 Move V9, V1
	104 Move V10, V2
	105 Call Transform.get_localRotation, X0
	106 Move V4, V0
	107 Move V5, V1
	108 Move V6, V2
	109 Move V7, V3
	110 Add X0, X31, 0
	111 Move V0, V8
	112 Move V1, V9
	113 Move V2, V10
	114 Move V3, V4
	115 Move V4, V5
	116 Move V5, V6
	117 Move V6, V7
	118 Move X1, X31
	119 Move [X31], X31
	120 Move [X31+8], X31
	121 Move [X31+24], W31
	122 Move [X31+16], X31
	123 Call Pose..ctor, X0, X1, X2
	124 Compare X20, 0
	125 JumpIfEqual {171}
	126 Move V0, [X31]
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 Move X3, [X23]
	129 Add X2, X31, 64
	130 Move X0, X20
	131 Move X1, X19
	132 Move [X31+4], V0
	133 Move [X31+76], V1
	134 Call Dictionary`2<Object, Pose>.set_Item, X0, X1, X2
	135 Move X20, [X31+160]
	136 Move X19, [X31+168]
	137 Move X22, [X31+144]
	138 Move X21, [X31+152]
	139 Move X30, [X31+128]
	140 Move X23, [X31+136]
	141 Move D9, [X31+112]
	142 Move D8, [X31+120]
	143 Move V10, [X31+96]
	144 Add X31, X31, 176
	145 Return 
	146 Compare X22, 0
	147 JumpIfEqual {171}
	148 Move X21, 0x61F000
	149 Move X21, [X21+856]
	150 Move X0, X22
	151 Move X1, X19
	152 Move X2, [X21]
	153 Call Dictionary`2<Object, Pose>.Remove, X0, X1
	154 Move X0, [X20+344]
	155 Compare X0, 0
	156 JumpIfEqual {171}
	157 Move X2, [X21]
	158 Move X1, X19
	159 Move X20, [X31+160]
	160 Move X19, [X31+168]
	161 Move X22, [X31+144]
	162 Move X21, [X31+152]
	163 Move X30, [X31+128]
	164 Move X23, [X31+136]
	165 Move D9, [X31+112]
	166 Move D8, [X31+120]
	167 Move V10, [X31+96]
	168 Add X31, X31, 176
	169 Call Dictionary`2<Object, Pose>.Remove, X0, X1
	170 Return 
	171 Call 0x1C17F20

Method: System.Void ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B3CC98 ADRP X21, 0x8A6000

ISIL:
	001 Return 

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B3CC9C LDRB W8, [X21 + 0x847]
	0x03B3CCA0 MOV X19, X1
	0x03B3CCA4 MOV X20, X0
	0x03B3CCA8 TBNZ X8, 0x0, 0x3B3CCCC

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1848]
	003 Move X2, [X8+1856]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)

Disassembly:
	0x03B3CCAC ADRP X0, 0x61E000
	0x03B3CCB0 LDR X0, [X0 + 0x408]
	0x03B3CCB4 BL 0x1C16CF4
	0x03B3CCB8 ADRP X0, 0x61E000

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1592]
	003 Move X2, [X8+1600]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)

Disassembly:
	0x03B3CCBC LDR X0, [X0 + 0x298]
	0x03B3CCC0 BL 0x1C16CF4
	0x03B3CCC4 MOVZ W8, 0x1
	0x03B3CCC8 STRB W8, [X21 + 0x847]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1608]
	003 Move X2, [X8+1616]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args)

Disassembly:
	0x03B3CCCC CBZ X19, 0x3B3CD20
	0x03B3CCD0 LDR X0, [X20 + 0x108]
	0x03B3CCD4 CBZ X0, 0x3B3CD20
	0x03B3CCD8 ADRP X8, 0x61E000

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1816]
	003 Move X2, [X8+1824]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args)

Disassembly:
	0x03B3CCDC LDR X8, [X8 + 0x408]
	0x03B3CCE0 LDR X1, [X19 + 0x20]
	0x03B3CCE4 LDR X2, [X8]
	0x03B3CCE8 BL 0x2D57DD8

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1832]
	003 Move X2, [X8+1840]
	004 CallNoReturn X3

Method: System.Boolean UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)

Disassembly:
	0x03B3CCEC LDR X0, [X20 + 0x108]
	0x03B3CCF0 CBZ X0, 0x3B3CD20
	0x03B3CCF4 ADRP X8, 0x61E000
	0x03B3CCF8 LDR X8, [X8 + 0x298]
	0x03B3CCFC LDR X1, [X8]
	0x03B3CD00 BL 0x2D57B54
	0x03B3CD04 CMP W0, 0x1
	0x03B3CD08 B.NE 0x3B3CD14
	0x03B3CD0C LDR X8, [X19 + 0x20]
	0x03B3CD10 STR X8, [X20 + 0x110]
	0x03B3CD14 LDP X20, X19, [X31 + 0x10]
	0x03B3CD18 LDP X30, X21, [X31], #0x20
	0x03B3CD1C RET
	0x03B3CD20 BL 0x1C16F20
	0x03B3CD24 STP X30, X21, [X31 - 0x20]!
	0x03B3CD28 STP X20, X19, [X31 + 0x10]
	0x03B3CD2C ADRP X21, 0x8A6000
	0x03B3CD30 LDRB W8, [X21 + 0x848]
	0x03B3CD34 MOV X19, X1
	0x03B3CD38 MOV X20, X0
	0x03B3CD3C TBNZ X8, 0x0, 0x3B3CD60
	0x03B3CD40 ADRP X0, 0x61E000
	0x03B3CD44 LDR X0, [X0 + 0x298]
	0x03B3CD48 BL 0x1C16CF4
	0x03B3CD4C ADRP X0, 0x61E000
	0x03B3CD50 LDR X0, [X0 + 0x410]
	0x03B3CD54 BL 0x1C16CF4
	0x03B3CD58 MOVZ W8, 0x1
	0x03B3CD5C STRB W8, [X21 + 0x848]
	0x03B3CD60 LDR X0, [X20 + 0x108]
	0x03B3CD64 CBZ X0, 0x3B3CDC4
	0x03B3CD68 ADRP X8, 0x61E000
	0x03B3CD6C LDR X8, [X8 + 0x298]
	0x03B3CD70 ADRP X21, 0x61E000
	0x03B3CD74 LDR X1, [X8]
	0x03B3CD78 LDR X21, [X21 + 0x410]
	0x03B3CD7C BL 0x2D57B54
	0x03B3CD80 CMP W0, 0x1
	0x03B3CD84 B.NE 0x3B3CD9C
	0x03B3CD88 LDR X0, [X20 + 0xC0]
	0x03B3CD8C CBZ X0, 0x3B3CD9C
	0x03B3CD90 LDR X2, [X21]
	0x03B3CD94 MOV X1, X19
	0x03B3CD98 BL 0x2729DBC
	0x03B3CD9C LDR X0, [X20 + 0xD0]
	0x03B3CDA0 CBZ X0, 0x3B3CDB8
	0x03B3CDA4 LDR X2, [X21]
	0x03B3CDA8 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A7000
	006 Move W8, [X21+2107]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61F000
	014 Move X0, [X0+872]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2107], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x61F000
	021 Move X8, [X8+872]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20]
	032 Move X9, [X8+1496]
	033 Move X2, [X8+1504]
	034 Move X0, X20
	035 Move X1, X19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {51}
	041 Move X0, [X20+288]
	042 Move X1, X19
	043 Move X2, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X3, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call XRFilterUtility.Process, X0, X1, X2
	050 Return X0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move W0, W31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Move X8, [X20]
	058 Move X9, [X8+2104]
	059 Move X2, [X8+2112]

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B3CDBC LDP X30, X21, [X31], #0x20
	0x03B3CDC0 RET
	0x03B3CDC4 BL 0x1C16F20
	0x03B3CDC8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1624]
	003 Move X2, [X8+1632]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B3CDCC STP X20, X19, [X31 + 0x10]
	0x03B3CDD0 ADRP X21, 0x8A6000
	0x03B3CDD4 LDRB W8, [X21 + 0x849]
	0x03B3CDD8 MOV X19, X1

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1640]
	003 Move X2, [X8+1648]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B3CDDC MOV X20, X0
	0x03B3CDE0 TBNZ X8, 0x0, 0x3B3CDF8
	0x03B3CDE4 ADRP X0, 0x61E000
	0x03B3CDE8 LDR X0, [X0 + 0x418]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1656]
	003 Move X2, [X8+1664]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B3CDEC BL 0x1C16CF4
	0x03B3CDF0 MOVZ W8, 0x1
	0x03B3CDF4 STRB W8, [X21 + 0x849]
	0x03B3CDF8 CBZ X19, 0x3B3CE20

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1672]
	003 Move X2, [X8+1680]
	004 CallNoReturn X3

Method: System.Boolean UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B3CDFC LDR X0, [X20 + 0x108]
	0x03B3CE00 CBZ X0, 0x3B3CE20
	0x03B3CE04 ADRP X8, 0x61E000
	0x03B3CE08 LDR X8, [X8 + 0x418]
	0x03B3CE0C LDR X1, [X19 + 0x20]
	0x03B3CE10 LDP X20, X19, [X31 + 0x10]
	0x03B3CE14 LDR X2, [X8]
	0x03B3CE18 LDP X30, X21, [X31], #0x20
	0x03B3CE1C B 0x2D57E88
	0x03B3CE20 BL 0x1C16F20
	0x03B3CE24 STR X30, [X31 - 0x30]!
	0x03B3CE28 STP X22, X21, [X31 + 0x10]
	0x03B3CE2C STP X20, X19, [X31 + 0x20]
	0x03B3CE30 ADRP X21, 0x8A6000
	0x03B3CE34 LDRB W8, [X21 + 0x84A]
	0x03B3CE38 MOV X20, X1
	0x03B3CE3C MOV X19, X0
	0x03B3CE40 TBNZ X8, 0x0, 0x3B3CE64
	0x03B3CE44 ADRP X0, 0x61E000
	0x03B3CE48 LDR X0, [X0 + 0x298]
	0x03B3CE4C BL 0x1C16CF4
	0x03B3CE50 ADRP X0, 0x61E000
	0x03B3CE54 LDR X0, [X0 + 0x420]
	0x03B3CE58 BL 0x1C16CF4
	0x03B3CE5C MOVZ W8, 0x1
	0x03B3CE60 STRB W8, [X21 + 0x84A]
	0x03B3CE64 LDR X0, [X19 + 0x108]
	0x03B3CE68 CBZ X0, 0x3B3CED8
	0x03B3CE6C ADRP X21, 0x61E000
	0x03B3CE70 LDR X21, [X21 + 0x298]
	0x03B3CE74 ADRP X22, 0x61E000
	0x03B3CE78 LDR X1, [X21]
	0x03B3CE7C LDR X22, [X22 + 0x420]
	0x03B3CE80 BL 0x2D57B54
	0x03B3CE84 CBNZ W0, 0x3B3CE9C
	0x03B3CE88 LDR X0, [X19 + 0xC8]
	0x03B3CE8C CBZ X0, 0x3B3CE9C
	0x03B3CE90 LDR X2, [X22]
	0x03B3CE94 MOV X1, X20
	0x03B3CE98 BL 0x2729DBC
	0x03B3CE9C LDR X0, [X19 + 0xD8]
	0x03B3CEA0 CBZ X0, 0x3B3CEB0
	0x03B3CEA4 LDR X2, [X22]
	0x03B3CEA8 MOV X1, X20
	0x03B3CEAC BL 0x2729DBC
	0x03B3CEB0 LDR X0, [X19 + 0x108]
	0x03B3CEB4 CBZ X0, 0x3B3CED8
	0x03B3CEB8 LDR X1, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A7000
	006 Move W8, [X21+2108]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61F000
	014 Move X0, [X0+872]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2108], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x61F000
	021 Move X8, [X8+872]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20]
	032 Move X9, [X8+1512]
	033 Move X2, [X8+1520]
	034 Move X0, X20
	035 Move X1, X19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {51}
	041 Move X0, [X20+304]
	042 Move X1, X19
	043 Move X2, X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X3, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call XRFilterUtility.Process, X0, X1, X2
	050 Return X0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move W0, W31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Move X8, [X20]
	058 Move X9, [X8+2120]
	059 Move X2, [X8+2128]

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B3CECC LDP X22, X21, [X31 + 0x10]
	0x03B3CED0 LDR X30, [X31], #0x30
	0x03B3CED4 RET
	0x03B3CED8 BL 0x1C16F20

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1688]
	003 Move X2, [X8+1696]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B3CEDC STP X30, X21, [X31 - 0x20]!
	0x03B3CEE0 STP X20, X19, [X31 + 0x10]
	0x03B3CEE4 ADRP X21, 0x8A6000
	0x03B3CEE8 LDRB W8, [X21 + 0x84B]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1704]
	003 Move X2, [X8+1712]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B3CEEC MOV X20, X1
	0x03B3CEF0 MOV X19, X0
	0x03B3CEF4 TBNZ X8, 0x0, 0x3B3CF0C
	0x03B3CEF8 ADRP X0, 0x61E000

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1720]
	003 Move X2, [X8+1728]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B3CEFC LDR X0, [X0 + 0x428]
	0x03B3CF00 BL 0x1C16CF4
	0x03B3CF04 MOVZ W8, 0x1
	0x03B3CF08 STRB W8, [X21 + 0x84B]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1736]
	003 Move X2, [X8+1744]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs args)

Disassembly:
	0x03B3CF0C LDR X0, [X19 + 0xE0]
	0x03B3CF10 CBZ X0, 0x3B3CF28
	0x03B3CF14 ADRP X8, 0x61E000
	0x03B3CF18 LDR X8, [X8 + 0x428]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1752]
	003 Move X2, [X8+1760]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs args)

Disassembly:
	0x03B3CF1C MOV X1, X20
	0x03B3CF20 LDR X2, [X8]
	0x03B3CF24 BL 0x2729DBC
	0x03B3CF28 CBZ X20, 0x3B3CF58

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1768]
	003 Move X2, [X8+1776]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs args)

Disassembly:
	0x03B3CF2C MOV X0, X20
	0x03B3CF30 MOV X1, X31
	0x03B3CF34 BL 0x3B6B568
	0x03B3CF38 LDR X8, [X19]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1784]
	003 Move X2, [X8+1792]
	004 CallNoReturn X3

Method: System.Void UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs args)

Disassembly:
	0x03B3CF3C MOV X1, X0
	0x03B3CF40 MOV X0, X19
	0x03B3CF44 LDP X20, X19, [X31 + 0x10]
	0x03B3CF48 LDR X3, [X8 + 0x7E8]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1800]
	003 Move X2, [X8+1808]
	004 CallNoReturn X3

Method: System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)

Disassembly:
	0x03B3CF4C LDR X2, [X8 + 0x7F0]
	0x03B3CF50 LDP X30, X21, [X31], #0x20
	0x03B3CF54 BR X3
	0x03B3CF58 BL 0x1C16F20
	0x03B3CF5C STP X30, X21, [X31 - 0x20]!
	0x03B3CF60 STP X20, X19, [X31 + 0x10]
	0x03B3CF64 ADRP X21, 0x8A6000
	0x03B3CF68 LDRB W8, [X21 + 0x84C]
	0x03B3CF6C MOV X20, X1
	0x03B3CF70 MOV X19, X0
	0x03B3CF74 TBNZ X8, 0x0, 0x3B3CF8C
	0x03B3CF78 ADRP X0, 0x61E000
	0x03B3CF7C LDR X0, [X0 + 0x430]
	0x03B3CF80 BL 0x1C16CF4
	0x03B3CF84 MOVZ W8, 0x1
	0x03B3CF88 STRB W8, [X21 + 0x84C]
	0x03B3CF8C LDR X0, [X19 + 0xE8]
	0x03B3CF90 CBZ X0, 0x3B3CFA8
	0x03B3CF94 ADRP X8, 0x61E000
	0x03B3CF98 LDR X8, [X8 + 0x430]
	0x03B3CF9C MOV X1, X20
	0x03B3CFA0 LDR X2, [X8]
	0x03B3CFA4 BL 0x2729DBC
	0x03B3CFA8 CBZ X20, 0x3B3CFD8
	0x03B3CFAC MOV X0, X20
	0x03B3CFB0 MOV X1, X31
	0x03B3CFB4 BL 0x3B6B568
	0x03B3CFB8 LDR X8, [X19]
	0x03B3CFBC MOV X1, X0
	0x03B3CFC0 MOV X0, X19
	0x03B3CFC4 LDP X20, X19, [X31 + 0x10]
	0x03B3CFC8 LDR X3, [X8 + 0x7F8]
	0x03B3CFCC LDR X2, [X8 + 0x800]
	0x03B3CFD0 LDP X30, X21, [X31], #0x20
	0x03B3CFD4 BR X3
	0x03B3CFD8 BL 0x1C16F20
	0x03B3CFDC STP D11, D10, [X31 - 0x70]!
	0x03B3CFE0 STP D9, D8, [X31 + 0x10]
	0x03B3CFE4 STP X30, X27, [X31 + 0x20]
	0x03B3CFE8 STP X26, X25, [X31 + 0x30]
	0x03B3CFEC STP X24, X23, [X31 + 0x40]
	0x03B3CFF0 STP X22, X21, [X31 + 0x50]
	0x03B3CFF4 STP X20, X19, [X31 + 0x60]
	0x03B3CFF8 ADRP X21, 0x8A6000
	0x03B3CFFC ADRP X20, 0x61E000
	0x03B3D000 LDRB W8, [X21 + 0x84D]
	0x03B3D004 B 0x3EB199C
	0x03B3D008 MOV X19, X0
	0x03B3D00C TBNZ X8, 0x0, 0x3B3D0A8
	0x03B3D010 ADRP X0, 0x61D000
	0x03B3D014 LDR X0, [X0 + 0x440]
	0x03B3D018 BL 0x1C16CF4
	0x03B3D01C ADRP X0, 0x61D000
	0x03B3D020 LDR X0, [X0 + 0x448]
	0x03B3D024 BL 0x1C16CF4
	0x03B3D028 ADRP X0, 0x61D000
	0x03B3D02C LDR X0, [X0 + 0x450]
	0x03B3D030 BL 0x1C16CF4
	0x03B3D034 ADRP X0, 0x61D000
	0x03B3D038 LDR X0, [X0 + 0x280]
	0x03B3D03C BL 0x1C16CF4
	0x03B3D040 ADRP X0, 0x61D000
	0x03B3D044 LDR X0, [X0 + 0x268]
	0x03B3D048 BL 0x1C16CF4
	0x03B3D04C ADRP X0, 0x61D000
	0x03B3D050 LDR X0, [X0 + 0x3C8]
	0x03B3D054 BL 0x1C16CF4
	0x03B3D058 ADRP X0, 0x61D000
	0x03B3D05C LDR X0, [X0 + 0x458]
	0x03B3D060 BL 0x1C16CF4
	0x03B3D064 ADRP X0, 0x61D000
	0x03B3D068 LDR X0, [X0 + 0x460]
	0x03B3D06C BL 0x1C16CF4
	0x03B3D070 ADRP X0, 0x61D000
	0x03B3D074 LDR X0, [X0 + 0x468]
	0x03B3D078 BL 0x1C16CF4
	0x03B3D07C ADRP X0, 0x5B6000
	0x03B3D080 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A7000
	007 Move W8, [X21+2109]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x5B8000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x5B8000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x61F000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move X0, 0x61F000
	024 Move X0, [X0+888]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2109], W8
	028 Compare X19, 0
	029 JumpIfEqual {94}
	030 Move X8, 0x5B8000
	031 Move X8, [X8+1432]
	032 Move X21, [X19+16]
	033 Move X22, [X20+56]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X21
	040 Move X1, X22
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {75}
	047 Move X8, 0x61F000
	048 Move X2, [X20+56]
	049 Move X3, [X19+16]
	050 Move X8, [X8+888]
	051 Move X1, X20
	052 Move X4, X31
	053 Move X0, [X8]
	054 Call String.Format, X0, X1, X2, X3
	055 Move X8, 0x61F000
	056 Move X8, [X8+880]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X8, [X8]
	060 Move X0, X8
	061 Call String.Concat, X0, X1
	062 Move X8, 0x5B7000
	063 Move X8, [X8+2600]
	064 Move X21, X0
	065 Move X8, [X8]
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X20
	073 Move X2, X31
	074 Call Debug.LogWarning, X0, X1
	075 Move X8, [X20+32]
	076 Compare X8, 0
	077 JumpIfEqual {88}
	078 Move X3, [X8+24]
	079 Move X0, [X8+64]
	080 Move X2, [X8+40]
	081 Move X1, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 CallNoReturn X3
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 
	094 Call 0x1C17F20

Method: System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)

Disassembly:
	0x03B3D084 BL 0x1C16CF4
	0x03B3D088 ADRP X0, 0x61D000
	0x03B3D08C LDR X0, [X0 + 0x3A8]
	0x03B3D090 BL 0x1C16CF4
	0x03B3D094 ADRP X0, 0x61D000
	0x03B3D098 LDR X0, [X0 + 0x438]
	0x03B3D09C BL 0x1C16CF4
	0x03B3D0A0 MOVZ W8, 0x1
	0x03B3D0A4 STRB W8, [X21 + 0x84D]
	0x03B3D0A8 LDR X0, [X20]
	0x03B3D0AC LDR W8, [X0 + 0xE0]
	0x03B3D0B0 CBNZ W8, 0x3B3D0BC
	0x03B3D0B4 BL 0x1C16DFC
	0x03B3D0B8 LDR X0, [X20]
	0x03B3D0BC LDR X8, [X0 + 0xB8]
	0x03B3D0C0 MOV X1, X31
	0x03B3D0C4 MOV X2, X31
	0x03B3D0C8 LDR X20, [X8]
	0x03B3D0CC MOV X0, X20
	0x03B3D0D0 BL 0x33C5D2C
	0x03B3D0D4 TBZ X0, 0x0, 0x3B3D0E4
	0x03B3D0D8 MOV X0, X20
	0x03B3D0DC MOV X1, X31
	0x03B3D0E0 BL 0x3BFE970
	0x03B3D0E4 LDR X0, [X19 + 0x170]
	0x03B3D0E8 CBZ X0, 0x3B3D438
	0x03B3D0EC ADRP X8, 0x61D000
	0x03B3D0F0 LDR X8, [X8 + 0x448]
	0x03B3D0F4 LDR X1, [X8]
	0x03B3D0F8 BL 0x2AB4C18
	0x03B3D0FC LDR X0, [X19 + 0xF8]
	0x03B3D100 CBZ X0, 0x3B3D444
	0x03B3D104 ADRP X8, 0x61D000
	0x03B3D108 LDR X8, [X8 + 0x280]
	0x03B3D10C LDR X1, [X8]
	0x03B3D110 BL 0x2D57B54
	0x03B3D114 ADRP X25, 0x61D000
	0x03B3D118 ADRP X24, 0x61D000
	0x03B3D11C LDR X25, [X25 + 0x450]
	0x03B3D120 LDR X24, [X24 + 0x3A8]
	0x03B3D124 MOV W21, W0
	0x03B3D128 CMP W0, 0x1
	0x03B3D12C B.LT 0x3B3D1D0
	0x03B3D130 ADRP X26, 0x61D000
	0x03B3D134 LDR X26, [X26 + 0x460]
	0x03B3D138 MOV W22, W31
	0x03B3D13C FMOV S8, W31
	0x03B3D140 LDR X0, [X19 + 0xF8]
	0x03B3D144 CBZ X0, 0x3B3D418
	0x03B3D148 LDR X2, [X26]
	0x03B3D14C MOV W1, W22
	0x03B3D150 BL 0x2D57B78
	0x03B3D154 MOV X23, X0
	0x03B3D158 CBZ X0, 0x3B3D188
	0x03B3D15C LDR X9, [X23]
	0x03B3D160 LDR X8, [X24]
	0x03B3D164 LDRB W11, [X9 + 0x130]
	0x03B3D168 LDRB W10, [X8 + 0x130]
	0x03B3D16C CMP W11, W10
	0x03B3D170 B.CC 0x3B3D188
	0x03B3D174 LDR X9, [X9 + 0xC8]
	0x03B3D178 ADD X9, X9, X10, 0x3, LSL
	0x03B3D17C LDUR X9, [X9 - 0x8]
	0x03B3D180 CMP X9, X8
	0x03B3D184 B.EQ 0x3B3D1C0
	0x03B3D188 LDR X0, [X19 + 0x140]
	0x03B3D18C FMOV S0, 1
	0x03B3D190 MOV X1, X23
	0x03B3D194 MOV X2, X19
	0x03B3D198 MOV X3, X31
	0x03B3D19C BL 0x3B8E350
	0x03B3D1A0 LDR X0, [X19 + 0x170]
	0x03B3D1A4 CBZ X0, 0x3B3D42C
	0x03B3D1A8 LDR X2, [X25]
	0x03B3D1AC MOV V9.16B, V0.16B
	0x03B3D1B0 MOV X1, X23
	0x03B3D1B4 BL 0x2AB4A74
	0x03B3D1B8 FCMP S8, S9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A6000
	007 Move W8, [X21+2110]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x5B7000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x5B7000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x61E000
	021 Move X0, [X0+896]
	022 Call 0x1C17CF4
	023 Move X0, 0x61E000
	024 Move X0, [X0+904]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2110], W8
	028 Compare X19, 0
	029 JumpIfEqual {94}
	030 Move X8, 0x5B7000
	031 Move X8, [X8+1432]
	032 Move X21, [X19+16]
	033 Move X22, [X20+376]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X21
	040 Move X1, X22
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {75}
	047 Move X8, 0x61E000
	048 Move X2, [X20+376]
	049 Move X3, [X19+16]
	050 Move X8, [X8+896]
	051 Move X1, X20
	052 Move X4, X31
	053 Move X0, [X8]
	054 Call String.Format, X0, X1, X2, X3
	055 Move X8, 0x61E000
	056 Move X8, [X8+904]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X8, [X8]
	060 Move X0, X8
	061 Call String.Concat, X0, X1
	062 Move X8, 0x5B7000
	063 Move X8, [X8+2600]
	064 Move X21, X0
	065 Move X8, [X8]
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X20
	073 Move X2, X31
	074 Call Debug.LogWarning, X0, X1
	075 Move X8, [X20+40]
	076 Compare X8, 0
	077 JumpIfEqual {88}
	078 Move X3, [X8+24]
	079 Move X0, [X8+64]
	080 Move X2, [X8+40]
	081 Move X1, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 CallNoReturn X3
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 
	094 Call 0x1C17F20

Method: System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B3D1BC FCSEL S8, S8, S9, GT
	0x03B3D1C0 ADD W22, W22, 0x1
	0x03B3D1C4 CMP W21, W22
	0x03B3D1C8 B.NE 0x3B3D140
	0x03B3D1CC B 0x3B3D1D4
	0x03B3D1D0 FMOV S8, W31
	0x03B3D1D4 LDR X0, [X19 + 0xF0]
	0x03B3D1D8 CBZ X0, 0x3B3D448
	0x03B3D1DC ADRP X8, 0x61D000
	0x03B3D1E0 LDR X8, [X8 + 0x268]
	0x03B3D1E4 LDR X1, [X8]
	0x03B3D1E8 BL 0x2D57B54
	0x03B3D1EC MOV W21, W0
	0x03B3D1F0 CMP W0, 0x1
	0x03B3D1F4 B.LT 0x3B3D2A0
	0x03B3D1F8 ADRP X26, 0x61D000
	0x03B3D1FC LDR X26, [X26 + 0x468]
	0x03B3D200 MOV W22, W31
	0x03B3D204 LDR X0, [X19 + 0xF0]
	0x03B3D208 CBZ X0, 0x3B3D41C
	0x03B3D20C LDR X2, [X26]
	0x03B3D210 MOV W1, W22
	0x03B3D214 BL 0x2D57B78
	0x03B3D218 MOV X23, X0
	0x03B3D21C CBZ X0, 0x3B3D24C
	0x03B3D220 LDR X9, [X23]
	0x03B3D224 LDR X8, [X24]
	0x03B3D228 LDRB W11, [X9 + 0x130]
	0x03B3D22C LDRB W10, [X8 + 0x130]
	0x03B3D230 CMP W11, W10
	0x03B3D234 B.CC 0x3B3D24C
	0x03B3D238 LDR X9, [X9 + 0xC8]
	0x03B3D23C ADD X9, X9, X10, 0x3, LSL
	0x03B3D240 LDUR X9, [X9 - 0x8]
	0x03B3D244 CMP X9, X8
	0x03B3D248 B.EQ 0x3B3D294
	0x03B3D24C MOV X0, X19
	0x03B3D250 MOV X1, X23
	0x03B3D254 BL 0x3B3B4BC
	0x03B3D258 TBNZ X0, 0x0, 0x3B3D294
	0x03B3D25C LDR X0, [X19 + 0x140]
	0x03B3D260 FMOV S0, W31
	0x03B3D264 MOV X1, X23
	0x03B3D268 MOV X2, X19
	0x03B3D26C MOV X3, X31
	0x03B3D270 BL 0x3B8E350
	0x03B3D274 LDR X0, [X19 + 0x170]
	0x03B3D278 CBZ X0, 0x3B3D434
	0x03B3D27C LDR X2, [X25]
	0x03B3D280 MOV V9.16B, V0.16B
	0x03B3D284 MOV X1, X23
	0x03B3D288 BL 0x2AB4A74
	0x03B3D28C FCMP S8, S9
	0x03B3D290 FCSEL S8, S8, S9, GT
	0x03B3D294 ADD W22, W22, 0x1
	0x03B3D298 CMP W21, W22
	0x03B3D29C B.NE 0x3B3D204
	0x03B3D2A0 LDR X0, [X19 + 0x168]
	0x03B3D2A4 CBZ X0, 0x3B3D44C
	0x03B3D2A8 ADRP X8, 0x61D000
	0x03B3D2AC LDR X8, [X8 + 0x3C8]
	0x03B3D2B0 LDR X1, [X8]
	0x03B3D2B4 BL 0x2D57B54
	0x03B3D2B8 MOV W21, W0
	0x03B3D2BC CMP W0, 0x1
	0x03B3D2C0 B.LT 0x3B3D388
	0x03B3D2C4 ADRP X26, 0x61D000
	0x03B3D2C8 ADRP X27, 0x5B6000
	0x03B3D2CC LDR X26, [X26 + 0x458]
	0x03B3D2D0 LDR X27, [X27 + 0x598]
	0x03B3D2D4 MOV W22, W31
	0x03B3D2D8 FMOV S10, W31
	0x03B3D2DC FMOV S11, 1
	0x03B3D2E0 LDR X0, [X19 + 0x168]
	0x03B3D2E4 CBZ X0, 0x3B3D424
	0x03B3D2E8 LDR X2, [X26]
	0x03B3D2EC MOV W1, W22
	0x03B3D2F0 BL 0x2D57B78
	0x03B3D2F4 MOV X23, X0
	0x03B3D2F8 CBZ X0, 0x3B3D428
	0x03B3D2FC LDR X0, [X27]
	0x03B3D300 LDR X24, [X23 + 0x260]
	0x03B3D304 LDR W8, [X0 + 0xE0]
	0x03B3D308 CBNZ W8, 0x3B3D310
	0x03B3D30C BL 0x1C16DFC
	0x03B3D310 MOV X0, X24
	0x03B3D314 MOV X1, X31
	0x03B3D318 MOV X2, X31
	0x03B3D31C BL 0x3C354F8
	0x03B3D320 TBZ X0, 0x0, 0x3B3D334
	0x03B3D324 LDR X8, [X23 + 0x260]
	0x03B3D328 CBZ X8, 0x3B3D430
	0x03B3D32C LDR V0, [X8 + 0x5C]
	0x03B3D330 B 0x3B3D348
	0x03B3D334 MOV X0, X19
	0x03B3D338 MOV X1, X23
	0x03B3D33C BL 0x3B3B3F0
	0x03B3D340 ANDS W31, W0, 0x1
	0x03B3D344 FCSEL S0, S11, S10, NE
	0x03B3D348 LDR X0, [X19 + 0x140]
	0x03B3D34C MOV X1, X23
	0x03B3D350 MOV X2, X19
	0x03B3D354 MOV X3, X31
	0x03B3D358 BL 0x3B8E350
	0x03B3D35C LDR X0, [X19 + 0x170]
	0x03B3D360 CBZ X0, 0x3B3D420
	0x03B3D364 LDR X2, [X25]
	0x03B3D368 MOV V9.16B, V0.16B
	0x03B3D36C MOV X1, X23
	0x03B3D370 BL 0x2AB4A74
	0x03B3D374 FCMP S8, S9
	0x03B3D378 ADD W22, W22, 0x1
	0x03B3D37C FCSEL S8, S8, S9, GT
	0x03B3D380 CMP W21, W22
	0x03B3D384 B.NE 0x3B3D2E0
	0x03B3D388 MOV X21, X31
	0x03B3D38C MOVZ W22, 0xD
	0x03B3D390 MOV X0, X20
	0x03B3D394 MOV X1, X31
	0x03B3D398 MOV X2, X31
	0x03B3D39C BL 0x33C5D2C
	0x03B3D3A0 TBZ X0, 0x0, 0x3B3D3B0
	0x03B3D3A4 MOV X0, X20
	0x03B3D3A8 MOV X1, X31
	0x03B3D3AC BL 0x3BFEA0C
	0x03B3D3B0 CBNZ X21, 0x3B3D43C
	0x03B3D3B4 CMP W22, 0xD
	0x03B3D3B8 B.EQ 0x3B3D3C0
	0x03B3D3BC CBNZ W22, 0x3B3D3F8
	0x03B3D3C0 LDR X0, [X19 + 0x148]
	0x03B3D3C4 CBZ X0, 0x3B3D450
	0x03B3D3C8 ADRP X8, 0x61D000
	0x03B3D3CC LDR X8, [X8 + 0x440]
	0x03B3D3D0 MOV V0.16B, V8.16B
	0x03B3D3D4 LDP X20, X19, [X31 + 0x60]
	0x03B3D3D8 LDP X22, X21, [X31 + 0x50]
	0x03B3D3DC LDR X1, [X8]
	0x03B3D3E0 LDP X24, X23, [X31 + 0x40]
	0x03B3D3E4 LDP X26, X25, [X31 + 0x30]
	0x03B3D3E8 LDP X30, X27, [X31 + 0x20]
	0x03B3D3EC LDP D9, D8, [X31 + 0x10]
	0x03B3D3F0 LDP D11, D10, [X31], #0x70
	0x03B3D3F4 B 0x28CEFC0
	0x03B3D3F8 LDP X20, X19, [X31 + 0x60]
	0x03B3D3FC LDP X22, X21, [X31 + 0x50]
	0x03B3D400 LDP X24, X23, [X31 + 0x40]
	0x03B3D404 LDP X26, X25, [X31 + 0x30]
	0x03B3D408 LDP X30, X27, [X31 + 0x20]
	0x03B3D40C LDP D9, D8, [X31 + 0x10]
	0x03B3D410 LDP D11, D10, [X31], #0x70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8A6000
	007 Move X21, 0x5B7000
	008 Move W8, [X22+2111]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x61E000
	017 Move X0, [X0+912]
	018 Call 0x1C17CF4
	019 Move X0, 0x61E000
	020 Move X0, [X0+920]
	021 Call 0x1C17CF4
	022 Move X0, 0x61E000
	023 Move X0, [X0+928]
	024 Call 0x1C17CF4
	025 Move X0, 0x5B7000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x61E000
	029 Move X0, [X0+936]
	030 Call 0x1C17CF4
	031 Move X0, 0x61E000
	032 Move X0, [X0+872]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2111], W8
	036 Move X0, [X21]
	037 Move X21, [X19+96]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {78}
	050 Compare X20, 0
	051 JumpIfEqual {161}
	052 Move X0, X20
	053 Move X1, X31
	054 Call HoverEnterEventArgs.get_interactorObject, X0
	055 Compare X0, 0
	056 JumpIfEqual {69}
	057 Move X8, 0x61E000
	058 Move X8, [X8+872]
	059 Move X9, [X0]
	060 Move X1, X0
	061 Move X8, [X8]
	062 Move W11, [X9+304]
	063 Move W10, [X8+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, [X9+200]
	066 Add X9, X9, X10
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X20
	070 Move X1, X31
	071 Call HoverEnterEventArgs.get_interactorObject, X0
	072 Move X8, [X19]
	073 Move X1, X0
	074 Move X9, [X8+1544]
	075 Move X2, [X8+1552]
	076 Move X0, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X20, 0
	079 JumpIfEqual {161}
	080 Move X21, [X19+240]
	081 Move X0, X20
	082 Move X1, X31
	083 Call HoverEnterEventArgs.get_interactorObject, X0
	084 Compare X21, 0
	085 JumpIfEqual {161}
	086 Move X8, 0x61E000
	087 Move X8, [X8+920]
	088 Move X1, X0
	089 Move X0, X21
	090 Move X2, [X8]
	091 Call 0x2D58DD8, X0, X1
	092 Move X0, X20
	093 Move X1, X31
	094 Call HoverEnterEventArgs.get_interactorObject, X0
	095 Compare X0, 0
	096 JumpIfEqual {116}
	097 Move X8, 0x61E000
	098 Move X8, [X8+936]
	099 Move X9, [X0]
	100 Move X1, X0
	101 Move X8, [X8]
	102 Move W11, [X9+304]
	103 Move W10, [X8+304]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X9, [X9+200]
	106 Add X9, X9, X10
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X19+360]
	110 Compare X0, 0
	111 JumpIfEqual {161}
	112 Move X8, 0x61E000
	113 Move X8, [X8+912]
	114 Move X2, [X8]
	115 Call 0x2D58DD8, X0, X1
	116 Move X21, [X19+456]
	117 Move X0, X20
	118 Move X1, X31
	119 Call BaseInteractionEventArgs.get_interactor, X0
	120 Compare X21, 0
	121 JumpIfEqual {161}
	122 Move X9, 0x61E000
	123 Move X9, [X9+928]
	124 Move W10, [X21+28]
	125 Move X8, [X21+16]
	126 Move X9, [X9]
	127 Add W10, W10, 1
	128 Move [X21+28], W10
	129 Compare X8, 0
	130 JumpIfEqual {161}
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Move W11, [X8+24]
	133 Move X1, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add W9, W10, 1
	136 Add X8, X8, X10
	137 Move [X21+24], W9
	138 Move [X8+32], X1
	139 Move X8, [X9+32]
	140 Move X0, X21
	141 Move X8, [X8+192]
	142 Move X2, [X8+112]
	143 Call List`1<Object>.AddWithResize, X0, X1
	144 Move X0, X20
	145 Move X1, X31
	146 Call BaseInteractionEventArgs.get_interactor, X0
	147 Move X8, [X19]
	148 Move X1, X0
	149 Move X0, X19
	150 Move X20, [X31+32]
	151 Move X19, [X31+40]
	152 Move X3, [X8+1864]
	153 Move X2, [X8+1872]
	154 Move X22, [X31+16]
	155 Move X21, [X31+24]
	156 Move X30, [X31+48]
	157 CallNoReturn X3
	158 Move X8, [X19]
	159 Move X9, [X8+2072]
	160 Move X2, [X8+2080]
	161 Call 0x1C17F20

Method: System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03B3D414 RET
	0x03B3D418 BL 0x1C16F20
	0x03B3D41C BL 0x1C16F20
	0x03B3D420 BL 0x1C16F20
	0x03B3D424 BL 0x1C16F20
	0x03B3D428 BL 0x1C16F20
	0x03B3D42C BL 0x1C16F20
	0x03B3D430 BL 0x1C16F20
	0x03B3D434 BL 0x1C16F20
	0x03B3D438 BL 0x1C16F20
	0x03B3D43C MOV X0, X21
	0x03B3D440 BL 0x1C16F18
	0x03B3D444 BL 0x1C16F20
	0x03B3D448 BL 0x1C16F20
	0x03B3D44C BL 0x1C16F20
	0x03B3D450 BL 0x1C16F20
	0x03B3D454 B 0x3B3D4C4
	0x03B3D458 B 0x3B3D4C4
	0x03B3D45C B 0x3B3D4C4
	0x03B3D460 B 0x3B3D4C4
	0x03B3D464 B 0x3B3D46C
	0x03B3D468 B 0x3B3D46C
	0x03B3D46C FMOV S8, W31
	0x03B3D470 B 0x3B3D4C4
	0x03B3D474 B 0x3B3D4C4
	0x03B3D478 B 0x3B3D4C4
	0x03B3D47C B 0x3B3D4C4
	0x03B3D480 B 0x3B3D4C4
	0x03B3D484 B 0x3B3D4C4
	0x03B3D488 B 0x3B3D4C4
	0x03B3D48C B 0x3B3D4C4
	0x03B3D490 B 0x3B3D4C4
	0x03B3D494 B 0x3B3D4C4
	0x03B3D498 B 0x3B3D4C4
	0x03B3D49C B 0x3B3D4C4
	0x03B3D4A0 B 0x3B3D4C4
	0x03B3D4A4 B 0x3B3D4C4
	0x03B3D4A8 B 0x3B3D4C4
	0x03B3D4AC B 0x3B3D4C4
	0x03B3D4B0 B 0x3B3D4C4
	0x03B3D4B4 B 0x3B3D4C4
	0x03B3D4B8 B 0x3B3D4C4
	0x03B3D4BC B 0x3B3D4C4
	0x03B3D4C0 B 0x3B3D4C4
	0x03B3D4C4 CMP W1, 0x1
	0x03B3D4C8 B.NE 0x3B3D4E0
	0x03B3D4CC BL 0x3EB1AD0
	0x03B3D4D0 LDR X21, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2112]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x61E000
	014 Move X0, [X0+616]
	015 Call 0x1C17CF4
	016 Move X0, 0x61E000
	017 Move X0, [X0+944]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2112], W8
	021 Move X0, [X19+240]
	022 Compare X0, 0
	023 JumpIfEqual {58}
	024 Move X8, 0x61E000
	025 Move X8, [X8+616]
	026 Move X21, 0x61E000
	027 Move X1, [X8]
	028 Move X21, [X21+944]
	029 Call 0x2D58B54, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X19+128]
	032 Compare X0, 0
	033 JumpIfEqual {37}
	034 Move X2, [X21]
	035 Move X1, X20
	036 Call UnityEvent`1<Object>.Invoke, X0, X1
	037 Move X0, [X19+144]
	038 Compare X0, 0
	039 JumpIfEqual {43}
	040 Move X2, [X21]
	041 Move X1, X20
	042 Call UnityEvent`1<Object>.Invoke, X0, X1
	043 Compare X20, 0
	044 JumpIfEqual {58}
	045 Move X0, X20
	046 Move X1, X31
	047 Call BaseInteractionEventArgs.get_interactor, X0
	048 Move X8, [X19]
	049 Move X1, X0
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X3, [X8+1880]
	054 Move X2, [X8+1888]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B3D4D4 BL 0x3EB1AE0
	0x03B3D4D8 MOV W22, W31
	0x03B3D4DC B 0x3B3D390
	0x03B3D4E0 MOV X19, X0
	0x03B3D4E4 MOV X21, X31
	0x03B3D4E8 B 0x3B3D4F0
	0x03B3D4EC MOV X19, X0
	0x03B3D4F0 MOV X0, X20
	0x03B3D4F4 MOV X1, X31
	0x03B3D4F8 MOV X2, X31
	0x03B3D4FC BL 0x33C5D2C
	0x03B3D500 TBZ X0, 0x0, 0x3B3D510
	0x03B3D504 MOV X0, X20
	0x03B3D508 MOV X1, X31
	0x03B3D50C BL 0x3BFEA0C
	0x03B3D510 CBNZ X21, 0x3B3D51C
	0x03B3D514 MOV X0, X19
	0x03B3D518 BL 0x1D2C690
	0x03B3D51C MOV X0, X21
	0x03B3D520 BL 0x1C16F18
	0x03B3D524 BL 0x1990590
	0x03B3D528 MOV X2, X0
	0x03B3D52C LDR X0, [X0 + 0x140]
	0x03B3D530 MOV X3, X31
	0x03B3D534 B 0x3B8E350
	0x03B3D538 LDR W0, [X0 + 0x48]
	0x03B3D53C RET
	0x03B3D540 STR W1, [X0 + 0x48]
	0x03B3D544 RET
	0x03B3D548 LDR X0, [X0 + 0x180]
	0x03B3D54C RET
	0x03B3D550 STR X1, [X0 + 0x180]
	0x03B3D554 RET
	0x03B3D558 LDR X0, [X0 + 0x188]
	0x03B3D55C RET
	0x03B3D560 STR X1, [X0 + 0x188]
	0x03B3D564 RET
	0x03B3D568 LDR X0, [X0 + 0x190]
	0x03B3D56C RET
	0x03B3D570 STR X1, [X0 + 0x190]
	0x03B3D574 RET
	0x03B3D578 LDR X0, [X0 + 0x198]
	0x03B3D57C RET
	0x03B3D580 STR X1, [X0 + 0x198]
	0x03B3D584 RET
	0x03B3D588 LDR X0, [X0 + 0x1A0]
	0x03B3D58C RET
	0x03B3D590 STR X1, [X0 + 0x1A0]
	0x03B3D594 RET
	0x03B3D598 LDR X0, [X0 + 0x1A8]
	0x03B3D59C RET
	0x03B3D5A0 STR X1, [X0 + 0x1A8]
	0x03B3D5A4 RET
	0x03B3D5A8 LDR X0, [X0 + 0x1B0]
	0x03B3D5AC RET
	0x03B3D5B0 STR X1, [X0 + 0x1B0]
	0x03B3D5B4 RET
	0x03B3D5B8 LDR X0, [X0 + 0x1B8]
	0x03B3D5BC RET
	0x03B3D5C0 STR X1, [X0 + 0x1B8]
	0x03B3D5C4 RET
	0x03B3D5C8 LDR X0, [X0 + 0x1C0]
	0x03B3D5CC RET
	0x03B3D5D0 STR X1, [X0 + 0x1C0]
	0x03B3D5D4 RET
	0x03B3D5D8 LDR X0, [X0 + 0x180]
	0x03B3D5DC RET
	0x03B3D5E0 LDR X0, [X0 + 0x190]
	0x03B3D5E4 RET
	0x03B3D5E8 LDR X0, [X0 + 0x198]
	0x03B3D5EC RET
	0x03B3D5F0 LDR X0, [X0 + 0x188]
	0x03B3D5F4 RET
	0x03B3D5F8 LDR X0, [X0 + 0x1A0]
	0x03B3D5FC RET
	0x03B3D600 LDR X0, [X0 + 0x1A8]
	0x03B3D604 RET
	0x03B3D608 LDR X0, [X0 + 0x1B0]
	0x03B3D60C RET
	0x03B3D610 RET
	0x03B3D614 STP X30, X21, [X31 - 0x20]!
	0x03B3D618 STP X20, X19, [X31 + 0x10]
	0x03B3D61C ADRP X21, 0x8A5000
	0x03B3D620 LDRB W8, [X21 + 0x84E]
	0x03B3D624 MOV X19, X1
	0x03B3D628 MOV X20, X0
	0x03B3D62C TBNZ X8, 0x0, 0x3B3D650
	0x03B3D630 ADRP X0, 0x61D000
	0x03B3D634 LDR X0, [X0 + 0x470]
	0x03B3D638 BL 0x1C16CF4
	0x03B3D63C ADRP X0, 0x61D000
	0x03B3D640 LDR X0, [X0 + 0x478]
	0x03B3D644 BL 0x1C16CF4
	0x03B3D648 MOVZ W8, 0x1
	0x03B3D64C STRB W8, [X21 + 0x84E]
	0x03B3D650 LDR X8, [X20 + 0x1C8]
	0x03B3D654 CBZ X8, 0x3B3D6A8
	0x03B3D658 LDR W8, [X8 + 0x18]
	0x03B3D65C ADRP X21, 0x61D000
	0x03B3D660 LDR X21, [X21 + 0x478]
	0x03B3D664 CMP W8, 0x1
	0x03B3D668 B.NE 0x3B3D680
	0x03B3D66C LDR X0, [X20 + 0x180]
	0x03B3D670 CBZ X0, 0x3B3D680
	0x03B3D674 LDR X2, [X21]
	0x03B3D678 MOV X1, X19
	0x03B3D67C BL 0x2729DBC
	0x03B3D680 LDR X0, [X20 + 0x190]
	0x03B3D684 CBZ X0, 0x3B3D69C
	0x03B3D688 LDR X2, [X21]
	0x03B3D68C MOV X1, X19
	0x03B3D690 LDP X20, X19, [X31 + 0x10]
	0x03B3D694 LDP X30, X21, [X31], #0x20
	0x03B3D698 B 0x2729DBC
	0x03B3D69C LDP X20, X19, [X31 + 0x10]
	0x03B3D6A0 LDP X30, X21, [X31], #0x20
	0x03B3D6A4 RET
	0x03B3D6A8 BL 0x1C16F20
	0x03B3D6AC RET
	0x03B3D6B0 STP X30, X21, [X31 - 0x20]!
	0x03B3D6B4 STP X20, X19, [X31 + 0x10]
	0x03B3D6B8 ADRP X21, 0x8A5000
	0x03B3D6BC LDRB W8, [X21 + 0x84F]
	0x03B3D6C0 MOV X19, X1
	0x03B3D6C4 MOV X20, X0
	0x03B3D6C8 TBNZ X8, 0x0, 0x3B3D6EC
	0x03B3D6CC ADRP X0, 0x61D000
	0x03B3D6D0 LDR X0, [X0 + 0x470]
	0x03B3D6D4 BL 0x1C16CF4
	0x03B3D6D8 ADRP X0, 0x61D000
	0x03B3D6DC LDR X0, [X0 + 0x478]
	0x03B3D6E0 BL 0x1C16CF4
	0x03B3D6E4 MOVZ W8, 0x1
	0x03B3D6E8 STRB W8, [X21 + 0x84F]
	0x03B3D6EC LDR X8, [X20 + 0x1C8]
	0x03B3D6F0 CBZ X8, 0x3B3D740
	0x03B3D6F4 ADRP X21, 0x61D000
	0x03B3D6F8 LDR W8, [X8 + 0x18]
	0x03B3D6FC LDR X21, [X21 + 0x478]
	0x03B3D700 CBNZ W8, 0x3B3D718
	0x03B3D704 LDR X0, [X20 + 0x188]
	0x03B3D708 CBZ X0, 0x3B3D718
	0x03B3D70C LDR X2, [X21]
	0x03B3D710 MOV X1, X19
	0x03B3D714 BL 0x2729DBC
	0x03B3D718 LDR X0, [X20 + 0x198]
	0x03B3D71C CBZ X0, 0x3B3D734
	0x03B3D720 LDR X2, [X21]
	0x03B3D724 MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8A6000
	007 Move X21, 0x5B7000
	008 Move W8, [X22+2113]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x61E000
	017 Move X0, [X0+952]
	018 Call 0x1C17CF4
	019 Move X0, 0x61E000
	020 Move X0, [X0+960]
	021 Call 0x1C17CF4
	022 Move X0, 0x61E000
	023 Move X0, [X0+968]
	024 Call 0x1C17CF4
	025 Move X0, 0x61E000
	026 Move X0, [X0+976]
	027 Call 0x1C17CF4
	028 Move X0, 0x5B7000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x61E000
	032 Move X0, [X0+936]
	033 Call 0x1C17CF4
	034 Move X0, 0x61E000
	035 Move X0, [X0+872]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2113], W8
	039 Move X0, [X21]
	040 Move X21, [X19+96]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {81}
	053 Compare X20, 0
	054 JumpIfEqual {164}
	055 Move X0, X20
	056 Move X1, X31
	057 Call HoverExitEventArgs.get_interactorObject, X0
	058 Compare X0, 0
	059 JumpIfEqual {72}
	060 Move X8, 0x61E000
	061 Move X8, [X8+872]
	062 Move X9, [X0]
	063 Move X1, X0
	064 Move X8, [X8]
	065 Move W11, [X9+304]
	066 Move W10, [X8+304]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, [X9+200]
	069 Add X9, X9, X10
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X20
	073 Move X1, X31
	074 Call HoverExitEventArgs.get_interactorObject, X0
	075 Move X8, [X19]
	076 Move X1, X0
	077 Move X9, [X8+1560]
	078 Move X2, [X8+1568]
	079 Move X0, X19
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare X20, 0
	082 JumpIfEqual {164}
	083 Move X21, [X19+240]
	084 Move X0, X20
	085 Move X1, X31
	086 Call HoverExitEventArgs.get_interactorObject, X0
	087 Compare X21, 0
	088 JumpIfEqual {164}
	089 Move X8, 0x61E000
	090 Move X8, [X8+960]
	091 Move X1, X0
	092 Move X0, X21
	093 Move X2, [X8]
	094 Call 0x2D58E88, X0, X1
	095 Move X0, [X19+360]
	096 Compare X0, 0
	097 JumpIfEqual {164}
	098 Move X8, 0x61E000
	099 Move X8, [X8+968]
	100 Move X1, [X8]
	101 Call 0x2D58B54, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Move X1, X31
	105 Call HoverExitEventArgs.get_interactorObject, X0
	106 Compare X0, 0
	107 JumpIfEqual {135}
	108 Move X8, 0x61E000
	109 Move X8, [X8+936]
	110 Move X9, [X0]
	111 Move X21, X0
	112 Move X8, [X8]
	113 Move W11, [X9+304]
	114 Move W10, [X8+304]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X9, [X9+200]
	117 Add X9, X9, X10
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X19
	121 Move X1, X21
	122 Call XRBaseInteractable.IsSelected, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {135}
	127 Move X0, [X19+360]
	128 Compare X0, 0
	129 JumpIfEqual {164}
	130 Move X8, 0x61E000
	131 Move X8, [X8+952]
	132 Move X1, X21
	133 Move X2, [X8]
	134 Call 0x2D58E88, X0, X1
	135 Move X21, [X19+456]
	136 Move X0, X20
	137 Move X1, X31
	138 Call BaseInteractionEventArgs.get_interactor, X0
	139 Compare X21, 0
	140 JumpIfEqual {164}
	141 Move X8, 0x61E000
	142 Move X8, [X8+976]
	143 Move X1, X0
	144 Move X0, X21
	145 Move X2, [X8]
	146 Call List`1<Object>.Remove, X0, X1
	147 Move X0, X20
	148 Move X1, X31
	149 Call BaseInteractionEventArgs.get_interactor, X0
	150 Move X8, [X19]
	151 Move X1, X0
	152 Move X0, X19
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X3, [X8+1896]
	156 Move X2, [X8+1904]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X30, [X31+48]
	160 CallNoReturn X3
	161 Move X8, [X19]
	162 Move X9, [X8+2088]
	163 Move X2, [X8+2096]
	164 Call 0x1C17F20

Method: System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03B3D728 LDP X20, X19, [X31 + 0x10]
	0x03B3D72C LDP X30, X21, [X31], #0x20
	0x03B3D730 B 0x2729DBC
	0x03B3D734 LDP X20, X19, [X31 + 0x10]
	0x03B3D738 LDP X30, X21, [X31], #0x20
	0x03B3D73C RET
	0x03B3D740 BL 0x1C16F20
	0x03B3D744 RET
	0x03B3D748 STP X30, X21, [X31 - 0x20]!
	0x03B3D74C STP X20, X19, [X31 + 0x10]
	0x03B3D750 ADRP X21, 0x8A5000
	0x03B3D754 LDRB W8, [X21 + 0x850]
	0x03B3D758 MOV X19, X1
	0x03B3D75C MOV X20, X0
	0x03B3D760 TBNZ X8, 0x0, 0x3B3D778
	0x03B3D764 ADRP X0, 0x61D000
	0x03B3D768 LDR X0, [X0 + 0x478]
	0x03B3D76C BL 0x1C16CF4
	0x03B3D770 MOVZ W8, 0x1
	0x03B3D774 STRB W8, [X21 + 0x850]
	0x03B3D778 LDR X0, [X20 + 0x1A0]
	0x03B3D77C CBZ X0, 0x3B3D79C
	0x03B3D780 ADRP X8, 0x61D000
	0x03B3D784 LDR X8, [X8 + 0x478]
	0x03B3D788 MOV X1, X19
	0x03B3D78C LDP X20, X19, [X31 + 0x10]
	0x03B3D790 LDR X2, [X8]
	0x03B3D794 LDP X30, X21, [X31], #0x20
	0x03B3D798 B 0x2729DBC
	0x03B3D79C LDP X20, X19, [X31 + 0x10]
	0x03B3D7A0 LDP X30, X21, [X31], #0x20
	0x03B3D7A4 RET
	0x03B3D7A8 RET
	0x03B3D7AC STP X30, X21, [X31 - 0x20]!
	0x03B3D7B0 STP X20, X19, [X31 + 0x10]
	0x03B3D7B4 ADRP X21, 0x8A5000
	0x03B3D7B8 LDRB W8, [X21 + 0x851]
	0x03B3D7BC MOV X19, X1
	0x03B3D7C0 MOV X20, X0
	0x03B3D7C4 TBNZ X8, 0x0, 0x3B3D7DC
	0x03B3D7C8 ADRP X0, 0x61D000
	0x03B3D7CC LDR X0, [X0 + 0x478]
	0x03B3D7D0 BL 0x1C16CF4
	0x03B3D7D4 MOVZ W8, 0x1
	0x03B3D7D8 STRB W8, [X21 + 0x851]
	0x03B3D7DC LDR X0, [X20 + 0x1A8]
	0x03B3D7E0 CBZ X0, 0x3B3D800

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2114]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x61E000
	014 Move X0, [X0+616]
	015 Call 0x1C17CF4
	016 Move X0, 0x61E000
	017 Move X0, [X0+984]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2114], W8
	021 Move X0, [X19+240]
	022 Compare X0, 0
	023 JumpIfEqual {59}
	024 Move X8, 0x61E000
	025 Move X8, [X8+616]
	026 Move X21, 0x61E000
	027 Move X1, [X8]
	028 Move X21, [X21+984]
	029 Call 0x2D58B54, X0
	030 Compare W0, 0
	031 JumpIfNotEqual {38}
	032 Move X0, [X19+136]
	033 Compare X0, 0
	034 JumpIfEqual {38}
	035 Move X2, [X21]
	036 Move X1, X20
	037 Call UnityEvent`1<Object>.Invoke, X0, X1
	038 Move X0, [X19+152]
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X2, [X21]
	042 Move X1, X20
	043 Call UnityEvent`1<Object>.Invoke, X0, X1
	044 Compare X20, 0
	045 JumpIfEqual {59}
	046 Move X0, X20
	047 Move X1, X31
	048 Call BaseInteractionEventArgs.get_interactor, X0
	049 Move X8, [X19]
	050 Move X1, X0
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X3, [X8+1912]
	055 Move X2, [X8+1920]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 CallNoReturn X3
	059 Call 0x1C17F20

Method: System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B3D7E4 ADRP X8, 0x61D000
	0x03B3D7E8 LDR X8, [X8 + 0x478]
	0x03B3D7EC MOV X1, X19
	0x03B3D7F0 LDP X20, X19, [X31 + 0x10]
	0x03B3D7F4 LDR X2, [X8]
	0x03B3D7F8 LDP X30, X21, [X31], #0x20
	0x03B3D7FC B 0x2729DBC
	0x03B3D800 LDP X20, X19, [X31 + 0x10]
	0x03B3D804 LDP X30, X21, [X31], #0x20
	0x03B3D808 RET
	0x03B3D80C RET
	0x03B3D810 STP X30, X21, [X31 - 0x20]!
	0x03B3D814 STP X20, X19, [X31 + 0x10]
	0x03B3D818 ADRP X21, 0x8A5000
	0x03B3D81C LDRB W8, [X21 + 0x852]
	0x03B3D820 MOV X19, X1
	0x03B3D824 MOV X20, X0
	0x03B3D828 TBNZ X8, 0x0, 0x3B3D840
	0x03B3D82C ADRP X0, 0x61D000
	0x03B3D830 LDR X0, [X0 + 0x478]
	0x03B3D834 BL 0x1C16CF4
	0x03B3D838 MOVZ W8, 0x1
	0x03B3D83C STRB W8, [X21 + 0x852]
	0x03B3D840 LDR X0, [X20 + 0x1B0]
	0x03B3D844 CBZ X0, 0x3B3D864
	0x03B3D848 ADRP X8, 0x61D000
	0x03B3D84C LDR X8, [X8 + 0x478]
	0x03B3D850 MOV X1, X19
	0x03B3D854 LDP X20, X19, [X31 + 0x10]
	0x03B3D858 LDR X2, [X8]
	0x03B3D85C LDP X30, X21, [X31], #0x20
	0x03B3D860 B 0x2729DBC
	0x03B3D864 LDP X20, X19, [X31 + 0x10]
	0x03B3D868 LDP X30, X21, [X31], #0x20
	0x03B3D86C RET
	0x03B3D870 STP X30, X21, [X31 - 0x20]!
	0x03B3D874 STP X20, X19, [X31 + 0x10]
	0x03B3D878 ADRP X21, 0x8A5000
	0x03B3D87C LDRB W8, [X21 + 0x853]
	0x03B3D880 MOV X19, X1
	0x03B3D884 MOV X20, X0
	0x03B3D888 TBNZ X8, 0x0, 0x3B3D8A0
	0x03B3D88C ADRP X0, 0x61D000
	0x03B3D890 LDR X0, [X0 + 0x478]
	0x03B3D894 BL 0x1C16CF4
	0x03B3D898 MOVZ W8, 0x1
	0x03B3D89C STRB W8, [X21 + 0x853]
	0x03B3D8A0 LDR X0, [X20 + 0x1B8]
	0x03B3D8A4 CBZ X0, 0x3B3D8C4
	0x03B3D8A8 ADRP X8, 0x61D000
	0x03B3D8AC LDR X8, [X8 + 0x478]
	0x03B3D8B0 MOV X1, X19
	0x03B3D8B4 LDP X20, X19, [X31 + 0x10]
	0x03B3D8B8 LDR X2, [X8]
	0x03B3D8BC LDP X30, X21, [X31], #0x20
	0x03B3D8C0 B 0x2729DBC
	0x03B3D8C4 LDP X20, X19, [X31 + 0x10]
	0x03B3D8C8 LDP X30, X21, [X31], #0x20
	0x03B3D8CC RET
	0x03B3D8D0 STP X30, X21, [X31 - 0x20]!
	0x03B3D8D4 STP X20, X19, [X31 + 0x10]
	0x03B3D8D8 ADRP X21, 0x8A5000
	0x03B3D8DC LDRB W8, [X21 + 0x854]
	0x03B3D8E0 MOV X19, X1
	0x03B3D8E4 MOV X20, X0
	0x03B3D8E8 TBNZ X8, 0x0, 0x3B3D900
	0x03B3D8EC ADRP X0, 0x61D000
	0x03B3D8F0 LDR X0, [X0 + 0x478]
	0x03B3D8F4 BL 0x1C16CF4
	0x03B3D8F8 MOVZ W8, 0x1
	0x03B3D8FC STRB W8, [X21 + 0x854]
	0x03B3D900 LDR X0, [X20 + 0x1C0]
	0x03B3D904 CBZ X0, 0x3B3D924
	0x03B3D908 ADRP X8, 0x61D000
	0x03B3D90C LDR X8, [X8 + 0x478]
	0x03B3D910 MOV X1, X19
	0x03B3D914 LDP X20, X19, [X31 + 0x10]
	0x03B3D918 LDR X2, [X8]
	0x03B3D91C LDP X30, X21, [X31], #0x20
	0x03B3D920 B 0x2729DBC
	0x03B3D924 LDP X20, X19, [X31 + 0x10]
	0x03B3D928 LDP X30, X21, [X31], #0x20
	0x03B3D92C RET
	0x03B3D930 LDR X8, [X0]
	0x03B3D934 LDR X3, [X8 + 0x5B8]
	0x03B3D938 LDR X2, [X8 + 0x5C0]
	0x03B3D93C BR X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2115]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x61E000
	014 Move X0, [X0+912]
	015 Call 0x1C17CF4
	016 Move X0, 0x61E000
	017 Move X0, [X0+992]
	018 Call 0x1C17CF4
	019 Move X0, 0x61E000
	020 Move X0, [X0+640]
	021 Call 0x1C17CF4
	022 Move X0, 0x61E000
	023 Move X0, [X0+936]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2115], W8
	027 Compare X20, 0
	028 JumpIfEqual {96}
	029 Move X21, [X19+248]
	030 Move X0, X20
	031 Move X1, X31
	032 Call SelectEnterEventArgs.get_interactorObject, X0
	033 Compare X21, 0
	034 JumpIfEqual {96}
	035 Move X8, 0x61E000
	036 Move X8, [X8+992]
	037 Move X1, X0
	038 Move X0, X21
	039 Move X2, [X8]
	040 Call 0x2D58DD8, X0, X1
	041 Move X0, X20
	042 Move X1, X31
	043 Call SelectEnterEventArgs.get_interactorObject, X0
	044 Compare X0, 0
	045 JumpIfEqual {65}
	046 Move X8, 0x61E000
	047 Move X8, [X8+936]
	048 Move X9, [X0]
	049 Move X1, X0
	050 Move X8, [X8]
	051 Move W11, [X9+304]
	052 Move W10, [X8+304]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X9, [X9+200]
	055 Add X9, X9, X10
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X19+360]
	059 Compare X0, 0
	060 JumpIfEqual {96}
	061 Move X8, 0x61E000
	062 Move X8, [X8+912]
	063 Move X2, [X8]
	064 Call 0x2D58DD8, X0, X1
	065 Move X0, [X19+248]
	066 Compare X0, 0
	067 JumpIfEqual {96}
	068 Move X8, 0x61E000
	069 Move X8, [X8+640]
	070 Move X1, [X8]
	071 Call 0x2D58B54, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X20
	074 Move X1, X31
	075 Call SelectEnterEventArgs.get_interactorObject, X0
	076 Move [X19+256], X0
	077 Move X0, X20
	078 Move X1, X31
	079 Call SelectEnterEventArgs.get_interactorObject, X0
	080 Move X1, X0
	081 Move X0, X19
	082 Call XRBaseInteractable.CaptureAttachPose, X0, X1
	083 Move X0, X20
	084 Move X1, X31
	085 Call BaseInteractionEventArgs.get_interactor, X0
	086 Move X8, [X19]
	087 Move X1, X0
	088 Move X0, X19
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X3, [X8+1928]
	092 Move X2, [X8+1936]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 CallNoReturn X3
	096 Call 0x1C17F20

Method: System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03B3D940 LDR X8, [X0]
	0x03B3D944 LDR X3, [X8 + 0x608]
	0x03B3D948 LDR X2, [X8 + 0x610]
	0x03B3D94C BR X3
	0x03B3D950 LDR X8, [X0]
	0x03B3D954 LDR X3, [X8 + 0x618]
	0x03B3D958 LDR X2, [X8 + 0x620]
	0x03B3D95C BR X3
	0x03B3D960 LDR X0, [X0 + 0x1C8]
	0x03B3D964 RET
	0x03B3D968 STR X30, [X31 - 0x20]!
	0x03B3D96C STP X20, X19, [X31 + 0x10]
	0x03B3D970 ADRP X20, 0x8A5000
	0x03B3D974 LDRB W8, [X20 + 0x855]
	0x03B3D978 MOV X19, X0
	0x03B3D97C TBNZ X8, 0x0, 0x3B3D9A0
	0x03B3D980 ADRP X0, 0x61D000
	0x03B3D984 LDR X0, [X0 + 0x170]
	0x03B3D988 BL 0x1C16CF4
	0x03B3D98C ADRP X0, 0x61D000
	0x03B3D990 LDR X0, [X0 + 0x368]
	0x03B3D994 BL 0x1C16CF4
	0x03B3D998 MOVZ W8, 0x1
	0x03B3D99C STRB W8, [X20 + 0x855]
	0x03B3D9A0 MOV X0, X19
	0x03B3D9A4 BL 0x3B3A824
	0x03B3D9A8 TBZ X0, 0x0, 0x3B3D9F0
	0x03B3D9AC MOV X0, X19
	0x03B3D9B0 BL 0x3B3A784
	0x03B3D9B4 CBZ X0, 0x3B3DA18
	0x03B3D9B8 ADRP X8, 0x61D000
	0x03B3D9BC LDR X8, [X8 + 0x170]
	0x03B3D9C0 MOV W1, W31
	0x03B3D9C4 LDR X2, [X8]
	0x03B3D9C8 BL 0x301BCCC
	0x03B3D9CC CBZ X0, 0x3B3D9F4
	0x03B3D9D0 ADRP X8, 0x61D000
	0x03B3D9D4 LDR X8, [X8 + 0x368]
	0x03B3D9D8 LDR X9, [X0]
	0x03B3D9DC LDR X8, [X8]
	0x03B3D9E0 LDRB W11, [X9 + 0x130]
	0x03B3D9E4 LDRB W10, [X8 + 0x130]
	0x03B3D9E8 CMP W11, W10
	0x03B3D9EC B.CS 0x3B3DA00
	0x03B3D9F0 MOV X0, X31
	0x03B3D9F4 LDP X20, X19, [X31 + 0x10]
	0x03B3D9F8 LDR X30, [X31], #0x20
	0x03B3D9FC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2116]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x61E000
	014 Move X0, [X0+640]
	015 Call 0x1C17CF4
	016 Move X0, 0x61E000
	017 Move X0, [X0+1000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2116], W8
	021 Move X0, [X19+248]
	022 Compare X0, 0
	023 JumpIfEqual {58}
	024 Move X8, 0x61E000
	025 Move X8, [X8+640]
	026 Move X21, 0x61E000
	027 Move X1, [X8]
	028 Move X21, [X21+1000]
	029 Call 0x2D58B54, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X19+160]
	032 Compare X0, 0
	033 JumpIfEqual {37}
	034 Move X2, [X21]
	035 Move X1, X20
	036 Call UnityEvent`1<Object>.Invoke, X0, X1
	037 Move X0, [X19+176]
	038 Compare X0, 0
	039 JumpIfEqual {43}
	040 Move X2, [X21]
	041 Move X1, X20
	042 Call UnityEvent`1<Object>.Invoke, X0, X1
	043 Compare X20, 0
	044 JumpIfEqual {58}
	045 Move X0, X20
	046 Move X1, X31
	047 Call BaseInteractionEventArgs.get_interactor, X0
	048 Move X8, [X19]
	049 Move X1, X0
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X3, [X8+1944]
	054 Move X2, [X8+1952]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B3DA00 LDR X9, [X9 + 0xC8]
	0x03B3DA04 ADD X9, X9, X10, 0x3, LSL
	0x03B3DA08 LDUR X9, [X9 - 0x8]
	0x03B3DA0C CMP X9, X8
	0x03B3DA10 CSEL X0, X0, X31, EQ
	0x03B3DA14 B 0x3B3D9F4
	0x03B3DA18 BL 0x1C16F20
	0x03B3DA1C STP X30, X21, [X31 - 0x20]!
	0x03B3DA20 STP X20, X19, [X31 + 0x10]
	0x03B3DA24 ADRP X21, 0x8A5000
	0x03B3DA28 LDRB W8, [X21 + 0x856]
	0x03B3DA2C MOV X19, X1
	0x03B3DA30 MOV X20, X0
	0x03B3DA34 TBNZ X8, 0x0, 0x3B3DA58
	0x03B3DA38 ADRP X0, 0x61D000
	0x03B3DA3C LDR X0, [X0 + 0x480]
	0x03B3DA40 BL 0x1C16CF4
	0x03B3DA44 ADRP X0, 0x61D000
	0x03B3DA48 LDR X0, [X0 + 0x488]
	0x03B3DA4C BL 0x1C16CF4
	0x03B3DA50 MOVZ W8, 0x1
	0x03B3DA54 STRB W8, [X21 + 0x856]
	0x03B3DA58 MOV X0, X20
	0x03B3DA5C BL 0x3B3A824
	0x03B3DA60 MOV W21, W0
	0x03B3DA64 MOV X0, X20
	0x03B3DA68 BL 0x3B3A784
	0x03B3DA6C CBZ X0, 0x3B3DAFC
	0x03B3DA70 TBZ X21, 0x0, 0x3B3DA94
	0x03B3DA74 ADRP X8, 0x61D000
	0x03B3DA78 LDR X8, [X8 + 0x488]
	0x03B3DA7C MOV X2, X19
	0x03B3DA80 LDP X20, X19, [X31 + 0x10]
	0x03B3DA84 MOV W1, W31
	0x03B3DA88 LDR X3, [X8]
	0x03B3DA8C LDP X30, X21, [X31], #0x20
	0x03B3DA90 B 0x301BD20
	0x03B3DA94 ADRP X9, 0x61D000
	0x03B3DA98 LDR X9, [X9 + 0x480]
	0x03B3DA9C LDR W10, [X0 + 0x1C]
	0x03B3DAA0 LDR X8, [X0 + 0x10]
	0x03B3DAA4 LDR X9, [X9]
	0x03B3DAA8 ADD W10, W10, 0x1
	0x03B3DAAC STR W10, [X0 + 0x1C]
	0x03B3DAB0 CBZ X8, 0x3B3DAFC
	0x03B3DAB4 LDRSW X10, [X0 + 0x18]
	0x03B3DAB8 LDR W11, [X8 + 0x18]
	0x03B3DABC CMP W10, W11
	0x03B3DAC0 B.CS 0x3B3DAE0
	0x03B3DAC4 ADD W9, W10, 0x1
	0x03B3DAC8 ADD X8, X8, X10, 0x3, LSL
	0x03B3DACC STR W9, [X0 + 0x18]
	0x03B3DAD0 STR X19, [X8 + 0x20]
	0x03B3DAD4 LDP X20, X19, [X31 + 0x10]
	0x03B3DAD8 LDP X30, X21, [X31], #0x20
	0x03B3DADC RET
	0x03B3DAE0 LDR X8, [X9 + 0x20]
	0x03B3DAE4 MOV X1, X19
	0x03B3DAE8 LDP X20, X19, [X31 + 0x10]
	0x03B3DAEC LDR X8, [X8 + 0xC0]
	0x03B3DAF0 LDR X2, [X8 + 0x70]
	0x03B3DAF4 LDP X30, X21, [X31], #0x20
	0x03B3DAF8 B 0x301BF90
	0x03B3DAFC BL 0x1C16F20
	0x03B3DB00 LDR X8, [X0]
	0x03B3DB04 LDR X3, [X8 + 0x5D8]
	0x03B3DB08 LDR X2, [X8 + 0x5E0]
	0x03B3DB0C BR X3
	0x03B3DB10 LDR X8, [X0]
	0x03B3DB14 LDR X3, [X8 + 0x5E8]
	0x03B3DB18 LDR X2, [X8 + 0x5F0]
	0x03B3DB1C BR X3
	0x03B3DB20 STP X29, X30, [X31 - 0x60]!
	0x03B3DB24 STP X28, X27, [X31 + 0x10]
	0x03B3DB28 STP X26, X25, [X31 + 0x20]
	0x03B3DB2C STP X24, X23, [X31 + 0x30]
	0x03B3DB30 STP X22, X21, [X31 + 0x40]
	0x03B3DB34 STP X20, X19, [X31 + 0x50]
	0x03B3DB38 ADRP X25, 0x8A5000
	0x03B3DB3C ADRP X21, 0x5E2000
	0x03B3DB40 ADRP X20, 0x5E2000
	0x03B3DB44 ADRP X24, 0x61D000
	0x03B3DB48 ADRP X23, 0x61D000
	0x03B3DB4C ADRP X29, 0x61D000
	0x03B3DB50 ADRP X28, 0x61D000
	0x03B3DB54 ADRP X27, 0x61D000
	0x03B3DB58 ADRP X26, 0x61D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2117]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x61E000
	014 Move X0, [X0+952]
	015 Call 0x1C17CF4
	016 Move X0, 0x61E000
	017 Move X0, [X0+1008]
	018 Call 0x1C17CF4
	019 Move X0, 0x61E000
	020 Move X0, [X0+968]
	021 Call 0x1C17CF4
	022 Move X0, 0x61E000
	023 Move X0, [X0+936]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2117], W8
	027 Compare X20, 0
	028 JumpIfEqual {99}
	029 Move X21, [X19+248]
	030 Move X0, X20
	031 Move X1, X31
	032 Call SelectExitEventArgs.get_interactorObject, X0
	033 Compare X21, 0
	034 JumpIfEqual {99}
	035 Move X8, 0x61E000
	036 Move X8, [X8+1008]
	037 Move X1, X0
	038 Move X0, X21
	039 Move X2, [X8]
	040 Call 0x2D58E88, X0, X1
	041 Move X0, [X19+360]
	042 Compare X0, 0
	043 JumpIfEqual {99}
	044 Move X8, 0x61E000
	045 Move X8, [X8+968]
	046 Move X1, [X8]
	047 Call 0x2D58B54, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, X20
	050 Move X1, X31
	051 Call SelectExitEventArgs.get_interactorObject, X0
	052 Compare X0, 0
	053 JumpIfEqual {81}
	054 Move X8, 0x61E000
	055 Move X8, [X8+936]
	056 Move X9, [X0]
	057 Move X21, X0
	058 Move X8, [X8]
	059 Move W11, [X9+304]
	060 Move W10, [X8+304]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, [X9+200]
	063 Add X9, X9, X10
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X19
	067 Move X1, X21
	068 Call XRBaseInteractable.IsHovered, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {81}
	073 Move X0, [X19+360]
	074 Compare X0, 0
	075 JumpIfEqual {99}
	076 Move X8, 0x61E000
	077 Move X8, [X8+952]
	078 Move X1, X21
	079 Move X2, [X8]
	080 Call 0x2D58E88, X0, X1
	081 Move W21, [X20+40]
	082 Move X0, X20
	083 Move X1, X31
	084 Call BaseInteractionEventArgs.get_interactor, X0
	085 Move X8, [X19]
	086 Move X1, X0
	087 Compare W21, 0
	088 JumpIfEqual {91}
	089 Move X3, [X8+1992]
	090 Move X2, [X8+2000]
	091 Move X3, [X8+1960]
	092 Move X2, [X8+1968]
	093 Move X0, X19
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X30, [X31+32]
	097 Move X21, [X31+40]
	098 CallNoReturn X3
	099 Call 0x1C17F20

Method: System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03B3DB5C ADRP X22, 0x5B8000
	0x03B3DB60 LDR X21, [X21 + 0xC48]
	0x03B3DB64 LDR X20, [X20 + 0xC50]
	0x03B3DB68 LDR X24, [X24 + 0x490]
	0x03B3DB6C LDR X23, [X23 + 0x498]
	0x03B3DB70 LDR X29, [X29 + 0x4A0]
	0x03B3DB74 LDR X28, [X28 + 0x4A8]
	0x03B3DB78 LDR X27, [X27 + 0x4B0]
	0x03B3DB7C LDR X26, [X26 + 0x4B8]
	0x03B3DB80 LDRB W8, [X25 + 0x857]
	0x03B3DB84 LDR X22, [X22 + 0x850]
	0x03B3DB88 MOV X19, X0
	0x03B3DB8C TBNZ X8, 0x0, 0x3B3DD78
	0x03B3DB90 ADRP X0, 0x61D000
	0x03B3DB94 LDR X0, [X0 + 0x4C0]
	0x03B3DB98 BL 0x1C16CF4
	0x03B3DB9C ADRP X0, 0x61D000
	0x03B3DBA0 LDR X0, [X0 + 0x4C8]
	0x03B3DBA4 BL 0x1C16CF4
	0x03B3DBA8 ADRP X0, 0x61D000
	0x03B3DBAC LDR X0, [X0 + 0x4D0]
	0x03B3DBB0 BL 0x1C16CF4
	0x03B3DBB4 ADRP X0, 0x61D000
	0x03B3DBB8 LDR X0, [X0 + 0x4D8]
	0x03B3DBBC BL 0x1C16CF4
	0x03B3DBC0 ADRP X0, 0x61D000
	0x03B3DBC4 LDR X0, [X0 + 0x4E0]
	0x03B3DBC8 BL 0x1C16CF4
	0x03B3DBCC ADRP X0, 0x61D000
	0x03B3DBD0 LDR X0, [X0 + 0x4E8]
	0x03B3DBD4 BL 0x1C16CF4
	0x03B3DBD8 ADRP X0, 0x61D000
	0x03B3DBDC LDR X0, [X0 + 0x4F0]
	0x03B3DBE0 BL 0x1C16CF4
	0x03B3DBE4 ADRP X0, 0x61D000
	0x03B3DBE8 LDR X0, [X0 + 0x4F8]
	0x03B3DBEC BL 0x1C16CF4
	0x03B3DBF0 ADRP X0, 0x61D000
	0x03B3DBF4 LDR X0, [X0 + 0x500]
	0x03B3DBF8 BL 0x1C16CF4
	0x03B3DBFC ADRP X0, 0x61D000
	0x03B3DC00 LDR X0, [X0 + 0x508]
	0x03B3DC04 BL 0x1C16CF4
	0x03B3DC08 ADRP X0, 0x61D000
	0x03B3DC0C LDR X0, [X0 + 0x510]
	0x03B3DC10 BL 0x1C16CF4
	0x03B3DC14 ADRP X0, 0x61D000
	0x03B3DC18 LDR X0, [X0 + 0x518]
	0x03B3DC1C BL 0x1C16CF4
	0x03B3DC20 ADRP X0, 0x61D000
	0x03B3DC24 LDR X0, [X0 + 0x520]
	0x03B3DC28 BL 0x1C16CF4
	0x03B3DC2C ADRP X0, 0x61D000
	0x03B3DC30 LDR X0, [X0 + 0x528]
	0x03B3DC34 BL 0x1C16CF4
	0x03B3DC38 ADRP X0, 0x61D000
	0x03B3DC3C LDR X0, [X0 + 0x530]
	0x03B3DC40 BL 0x1C16CF4
	0x03B3DC44 ADRP X0, 0x61D000
	0x03B3DC48 LDR X0, [X0 + 0x538]
	0x03B3DC4C BL 0x1C16CF4
	0x03B3DC50 ADRP X0, 0x61D000
	0x03B3DC54 LDR X0, [X0 + 0x4B0]
	0x03B3DC58 BL 0x1C16CF4
	0x03B3DC5C ADRP X0, 0x61D000
	0x03B3DC60 LDR X0, [X0 + 0x4B8]
	0x03B3DC64 BL 0x1C16CF4
	0x03B3DC68 ADRP X0, 0x61D000
	0x03B3DC6C LDR X0, [X0 + 0x540]
	0x03B3DC70 BL 0x1C16CF4
	0x03B3DC74 ADRP X0, 0x61D000
	0x03B3DC78 LDR X0, [X0 + 0x548]
	0x03B3DC7C BL 0x1C16CF4
	0x03B3DC80 ADRP X0, 0x61D000
	0x03B3DC84 LDR X0, [X0 + 0x550]
	0x03B3DC88 BL 0x1C16CF4
	0x03B3DC8C ADRP X0, 0x61D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A6000
	007 Move W8, [X21+2118]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x61E000
	015 Move X0, [X0+1016]
	016 Call 0x1C17CF4
	017 Move X0, 0x61E000
	018 Move X0, [X0+640]
	019 Call 0x1C17CF4
	020 Move X0, 0x61E000
	021 Move X0, [X0+1024]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2118], W8
	025 Move X0, [X19+248]
	026 Compare X0, 0
	027 JumpIfEqual {96}
	028 Move X21, 0x61E000
	029 Move X21, [X21+640]
	030 Move X22, 0x61E000
	031 Move X1, [X21]
	032 Move X22, [X22+1024]
	033 Call 0x2D58B54, X0
	034 Compare W0, 0
	035 JumpIfNotEqual {42}
	036 Move X0, [X19+168]
	037 Compare X0, 0
	038 JumpIfEqual {42}
	039 Move X2, [X22]
	040 Move X1, X20
	041 Call UnityEvent`1<Object>.Invoke, X0, X1
	042 Move X0, [X19+184]
	043 Compare X0, 0
	044 JumpIfEqual {48}
	045 Move X2, [X22]
	046 Move X1, X20
	047 Call UnityEvent`1<Object>.Invoke, X0, X1
	048 Compare X20, 0
	049 JumpIfEqual {96}
	050 Move W22, [X20+40]
	051 Move X0, X20
	052 Move X1, X31
	053 Call BaseInteractionEventArgs.get_interactor, X0
	054 Move X8, [X19]
	055 Move X1, X0
	056 Compare W22, 0
	057 JumpIfEqual {60}
	058 Move X9, [X8+2008]
	059 Move X2, [X8+2016]
	060 Move X9, [X8+1976]
	061 Move X2, [X8+1984]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X0, [X19+248]
	065 Compare X0, 0
	066 JumpIfEqual {96}
	067 Move X1, [X21]
	068 Call 0x2D58B54, X0
	069 Compare W0, 0
	070 JumpIfEqual {77}
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 
	077 Move X0, [X19+336]
	078 Move [X19+256], X31
	079 Compare X0, 0
	080 JumpIfEqual {96}
	081 Move X20, 0x61E000
	082 Move X20, [X20+1016]
	083 Move X1, [X20]
	084 Call Dictionary`2<Object, Pose>.Clear, X0
	085 Move X0, [X19+344]
	086 Compare X0, 0
	087 JumpIfEqual {96}
	088 Move X1, [X20]
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Call Dictionary`2<Object, Pose>.Clear, X0
	095 Return 
	096 Call 0x1C17F20

Method: System.Void OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs args)

Disassembly:
	0x03B3DC90 LDR X0, [X0 + 0x558]
	0x03B3DC94 BL 0x1C16CF4
	0x03B3DC98 ADRP X0, 0x61D000
	0x03B3DC9C LDR X0, [X0 + 0x560]
	0x03B3DCA0 BL 0x1C16CF4
	0x03B3DCA4 ADRP X0, 0x61D000
	0x03B3DCA8 LDR X0, [X0 + 0x568]
	0x03B3DCAC BL 0x1C16CF4
	0x03B3DCB0 ADRP X0, 0x61D000
	0x03B3DCB4 LDR X0, [X0 + 0x570]
	0x03B3DCB8 BL 0x1C16CF4
	0x03B3DCBC ADRP X0, 0x61D000
	0x03B3DCC0 LDR X0, [X0 + 0x578]
	0x03B3DCC4 BL 0x1C16CF4
	0x03B3DCC8 ADRP X0, 0x61D000
	0x03B3DCCC LDR X0, [X0 + 0x490]
	0x03B3DCD0 BL 0x1C16CF4
	0x03B3DCD4 ADRP X0, 0x61D000
	0x03B3DCD8 LDR X0, [X0 + 0x498]
	0x03B3DCDC BL 0x1C16CF4
	0x03B3DCE0 ADRP X0, 0x5E2000
	0x03B3DCE4 LDR X0, [X0 + 0xC50]
	0x03B3DCE8 BL 0x1C16CF4
	0x03B3DCEC ADRP X0, 0x5B8000
	0x03B3DCF0 LDR X0, [X0 + 0x858]
	0x03B3DCF4 BL 0x1C16CF4
	0x03B3DCF8 ADRP X0, 0x61D000
	0x03B3DCFC LDR X0, [X0 + 0x580]
	0x03B3DD00 BL 0x1C16CF4
	0x03B3DD04 ADRP X0, 0x5E2000
	0x03B3DD08 LDR X0, [X0 + 0xC48]
	0x03B3DD0C BL 0x1C16CF4
	0x03B3DD10 ADRP X0, 0x5B8000
	0x03B3DD14 LDR X0, [X0 + 0x850]
	0x03B3DD18 BL 0x1C16CF4
	0x03B3DD1C ADRP X0, 0x61D000
	0x03B3DD20 LDR X0, [X0 + 0x588]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2119]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x61E000
	014 Move X0, [X0+1032]
	015 Call 0x1C17CF4
	016 Move X0, 0x61E000
	017 Move X0, [X0+664]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2119], W8
	021 Compare X19, 0
	022 JumpIfEqual {46}
	023 Move X0, [X20+264]
	024 Compare X0, 0
	025 JumpIfEqual {46}
	026 Move X8, 0x61E000
	027 Move X8, [X8+1032]
	028 Move X1, [X19+32]
	029 Move X2, [X8]
	030 Call 0x2D58DD8, X0, X1
	031 Move X0, [X20+264]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x61E000
	035 Move X8, [X8+664]
	036 Move X1, [X8]
	037 Call 0x2D58B54, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X19+32]
	040 Move [X20+272], X8
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs args)

Disassembly:
	0x03B3DD24 BL 0x1C16CF4
	0x03B3DD28 ADRP X0, 0x61D000
	0x03B3DD2C LDR X0, [X0 + 0x4A0]
	0x03B3DD30 BL 0x1C16CF4
	0x03B3DD34 ADRP X0, 0x61D000
	0x03B3DD38 LDR X0, [X0 + 0x4A8]
	0x03B3DD3C BL 0x1C16CF4
	0x03B3DD40 ADRP X0, 0x61D000
	0x03B3DD44 LDR X0, [X0 + 0x590]
	0x03B3DD48 BL 0x1C16CF4
	0x03B3DD4C ADRP X0, 0x61D000
	0x03B3DD50 LDR X0, [X0 + 0x598]
	0x03B3DD54 BL 0x1C16CF4
	0x03B3DD58 ADRP X0, 0x61D000
	0x03B3DD5C LDR X0, [X0 + 0x5A0]
	0x03B3DD60 BL 0x1C16CF4
	0x03B3DD64 ADRP X0, 0x61D000
	0x03B3DD68 LDR X0, [X0 + 0x5A8]
	0x03B3DD6C BL 0x1C16CF4
	0x03B3DD70 MOVZ W8, 0x1
	0x03B3DD74 STRB W8, [X25 + 0x857]
	0x03B3DD78 LDR X0, [X21]
	0x03B3DD7C BL 0x1C16F10
	0x03B3DD80 LDR X1, [X20]
	0x03B3DD84 MOV X20, X0
	0x03B3DD88 BL 0x301B7C4
	0x03B3DD8C MOVN W0, 0x0
	0x03B3DD90 MOV X1, X31
	0x03B3DD94 STR X20, [X19 + 0x40]
	0x03B3DD98 BL 0x3C35CBC
	0x03B3DD9C STR W0, [X19 + 0x48]
	0x03B3DDA0 MOVZ W0, 0x1
	0x03B3DDA4 MOV X1, X31
	0x03B3DDA8 MOVZ W20, 0x1
	0x03B3DDAC BL 0x3B68C08
	0x03B3DDB0 MOVZ W8, 0x3F000000
	0x03B3DDB4 MOVZ W9, 0x40400000
	0x03B3DDB8 STUR X0, [X19 + 0x4C]
	0x03B3DDBC STR W20, [X19 + 0x54]
	0x03B3DDC0 STR W20, [X19 + 0x5C]
	0x03B3DDC4 STR W8, [X19 + 0x6C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2120]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x61E000
	014 Move X0, [X0+664]
	015 Call 0x1C17CF4
	016 Move X0, 0x61E000
	017 Move X0, [X0+1040]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2120], W8
	021 Move X0, [X20+264]
	022 Compare X0, 0
	023 JumpIfEqual {53}
	024 Move X8, 0x61E000
	025 Move X8, [X8+664]
	026 Move X21, 0x61E000
	027 Move X1, [X8]
	028 Move X21, [X21+1040]
	029 Call 0x2D58B54, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X20+192]
	032 Compare X0, 0
	033 JumpIfEqual {37}
	034 Move X2, [X21]
	035 Move X1, X19
	036 Call UnityEvent`1<Object>.Invoke, X0, X1
	037 Move X0, [X20+208]
	038 Compare X0, 0
	039 JumpIfEqual {48}
	040 Move X2, [X21]
	041 Move X1, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call UnityEvent`1<Object>.Invoke, X0, X1
	047 Return 
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs args)

Disassembly:
	0x03B3DDC8 STR W9, [X19 + 0x74]
	0x03B3DDCC LDR X0, [X24]
	0x03B3DDD0 BL 0x1C16F10
	0x03B3DDD4 MOV X1, X31
	0x03B3DDD8 MOV X20, X0
	0x03B3DDDC BL 0x3B6B6F0
	0x03B3DDE0 STR X20, [X19 + 0x80]
	0x03B3DDE4 LDR X0, [X23]
	0x03B3DDE8 BL 0x1C16F10
	0x03B3DDEC MOV X1, X31
	0x03B3DDF0 MOV X20, X0
	0x03B3DDF4 BL 0x3B6B7CC
	0x03B3DDF8 STR X20, [X19 + 0x88]
	0x03B3DDFC LDR X0, [X24]
	0x03B3DE00 BL 0x1C16F10
	0x03B3DE04 MOV X1, X31
	0x03B3DE08 MOV X20, X0
	0x03B3DE0C BL 0x3B6B6F0
	0x03B3DE10 STR X20, [X19 + 0x90]
	0x03B3DE14 LDR X0, [X23]
	0x03B3DE18 BL 0x1C16F10
	0x03B3DE1C MOV X1, X31
	0x03B3DE20 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2121]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61E000
	014 Move X0, [X0+1048]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2121], W8
	018 Compare X19, 0
	019 JumpIfEqual {33}
	020 Move X0, [X20+264]
	021 Compare X0, 0
	022 JumpIfEqual {33}
	023 Move X8, 0x61E000
	024 Move X8, [X8+1048]
	025 Move X1, [X19+32]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, [X8]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call 0x2D58E88, X0, X1
	032 Return 
	033 Call 0x1C17F20

Method: System.Void OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs args)

Disassembly:
	0x03B3DE24 BL 0x3B6B7CC
	0x03B3DE28 STR X20, [X19 + 0x98]
	0x03B3DE2C LDR X0, [X29]
	0x03B3DE30 BL 0x1C16F10
	0x03B3DE34 MOV X1, X31
	0x03B3DE38 MOV X20, X0
	0x03B3DE3C BL 0x3B6B8BC
	0x03B3DE40 STR X20, [X19 + 0xA0]
	0x03B3DE44 LDR X0, [X28]
	0x03B3DE48 BL 0x1C16F10
	0x03B3DE4C MOV X1, X31
	0x03B3DE50 MOV X20, X0
	0x03B3DE54 BL 0x3B6B998
	0x03B3DE58 STR X20, [X19 + 0xA8]
	0x03B3DE5C LDR X0, [X29]
	0x03B3DE60 BL 0x1C16F10
	0x03B3DE64 MOV X1, X31
	0x03B3DE68 MOV X20, X0
	0x03B3DE6C BL 0x3B6B8BC
	0x03B3DE70 STR X20, [X19 + 0xB0]
	0x03B3DE74 LDR X0, [X28]
	0x03B3DE78 BL 0x1C16F10
	0x03B3DE7C MOV X1, X31
	0x03B3DE80 MOV X20, X0
	0x03B3DE84 BL 0x3B6B998
	0x03B3DE88 STR X20, [X19 + 0xB8]
	0x03B3DE8C LDR X0, [X27]
	0x03B3DE90 BL 0x1C16F10
	0x03B3DE94 MOV X1, X31
	0x03B3DE98 MOV X20, X0
	0x03B3DE9C BL 0x3B6BA88
	0x03B3DEA0 STR X20, [X19 + 0xC0]
	0x03B3DEA4 LDR X0, [X26]
	0x03B3DEA8 BL 0x1C16F10
	0x03B3DEAC MOV X1, X31
	0x03B3DEB0 MOV X20, X0
	0x03B3DEB4 BL 0x3B6BB6C
	0x03B3DEB8 STR X20, [X19 + 0xC8]
	0x03B3DEBC LDR X0, [X27]
	0x03B3DEC0 BL 0x1C16F10
	0x03B3DEC4 MOV X1, X31
	0x03B3DEC8 MOV X20, X0
	0x03B3DECC BL 0x3B6BA88
	0x03B3DED0 STR X20, [X19 + 0xD0]
	0x03B3DED4 LDR X0, [X26]
	0x03B3DED8 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8A6000
	007 Move W8, [X21+2122]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x61E000
	015 Move X0, [X0+664]
	016 Call 0x1C17CF4
	017 Move X0, 0x61E000
	018 Move X0, [X0+1056]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2122], W8
	022 Move X0, [X19+264]
	023 Compare X0, 0
	024 JumpIfEqual {59}
	025 Move X21, 0x61E000
	026 Move X21, [X21+664]
	027 Move X22, 0x61E000
	028 Move X1, [X21]
	029 Move X22, [X22+1056]
	030 Call 0x2D58B54, X0
	031 Compare W0, 0
	032 JumpIfNotEqual {39}
	033 Move X0, [X19+200]
	034 Compare X0, 0
	035 JumpIfEqual {39}
	036 Move X2, [X22]
	037 Move X1, X20
	038 Call UnityEvent`1<Object>.Invoke, X0, X1
	039 Move X0, [X19+216]
	040 Compare X0, 0
	041 JumpIfEqual {45}
	042 Move X2, [X22]
	043 Move X1, X20
	044 Call UnityEvent`1<Object>.Invoke, X0, X1
	045 Move X0, [X19+264]
	046 Compare X0, 0
	047 JumpIfEqual {59}
	048 Move X1, [X21]
	049 Call 0x2D58B54, X0
	050 Compare W0, 0
	051 JumpIfNotEqual {53}
	052 Move [X19+272], X31
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return 
	059 Call 0x1C17F20

Method: System.Void OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args)

Disassembly:
	0x03B3DEDC MOV X1, X31
	0x03B3DEE0 MOV X20, X0
	0x03B3DEE4 BL 0x3B6BB6C
	0x03B3DEE8 STR X20, [X19 + 0xD8]
	0x03B3DEEC ADRP X8, 0x61D000
	0x03B3DEF0 LDR X8, [X8 + 0x4C0]
	0x03B3DEF4 LDR X0, [X8]
	0x03B3DEF8 BL 0x1C16F10
	0x03B3DEFC MOV X1, X31
	0x03B3DF00 MOV X20, X0
	0x03B3DF04 BL 0x3B6BC64
	0x03B3DF08 STR X20, [X19 + 0xE0]
	0x03B3DF0C ADRP X8, 0x61D000
	0x03B3DF10 LDR X8, [X8 + 0x4D8]
	0x03B3DF14 LDR X0, [X8]
	0x03B3DF18 BL 0x1C16F10
	0x03B3DF1C MOV X1, X31
	0x03B3DF20 MOV X20, X0
	0x03B3DF24 BL 0x3B6BD9C
	0x03B3DF28 STR X20, [X19 + 0xE8]
	0x03B3DF2C ADRP X8, 0x61D000
	0x03B3DF30 LDR X8, [X8 + 0x560]
	0x03B3DF34 LDR X0, [X8]
	0x03B3DF38 BL 0x1C16F10
	0x03B3DF3C ADRP X8, 0x61D000
	0x03B3DF40 LDR X8, [X8 + 0x550]
	0x03B3DF44 MOV W1, W31
	0x03B3DF48 MOV X20, X0
	0x03B3DF4C LDR X2, [X8]
	0x03B3DF50 BL 0x2D57B9C
	0x03B3DF54 STR X20, [X19 + 0xF0]
	0x03B3DF58 ADRP X8, 0x61D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2123]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61E000
	014 Move X0, [X0+1064]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2123], W8
	018 Move X0, [X19+224]
	019 Compare X0, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x61E000
	022 Move X8, [X8+1064]
	023 Move X1, X20
	024 Move X2, [X8]
	025 Call UnityEvent`1<Object>.Invoke, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {41}
	028 Move X0, X20
	029 Move X1, X31
	030 Call BaseInteractionEventArgs.get_interactor, X0
	031 Move X8, [X19]
	032 Move X1, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, [X8+2024]
	037 Move X2, [X8+2032]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Call 0x1C17F20

Method: System.Void OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args)

Disassembly:
	0x03B3DF5C LDR X8, [X8 + 0x570]
	0x03B3DF60 LDR X0, [X8]
	0x03B3DF64 BL 0x1C16F10
	0x03B3DF68 ADRP X8, 0x61D000
	0x03B3DF6C LDR X8, [X8 + 0x558]
	0x03B3DF70 MOV W1, W31
	0x03B3DF74 MOV X20, X0
	0x03B3DF78 LDR X2, [X8]
	0x03B3DF7C BL 0x2D57B9C
	0x03B3DF80 STR X20, [X19 + 0xF8]
	0x03B3DF84 ADRP X8, 0x61D000
	0x03B3DF88 LDR X8, [X8 + 0x568]
	0x03B3DF8C LDR X0, [X8]
	0x03B3DF90 BL 0x1C16F10
	0x03B3DF94 ADRP X8, 0x61D000
	0x03B3DF98 LDR X8, [X8 + 0x548]
	0x03B3DF9C MOV W1, W31
	0x03B3DFA0 MOV X20, X0
	0x03B3DFA4 LDR X2, [X8]
	0x03B3DFA8 BL 0x2D57B9C
	0x03B3DFAC STR X20, [X19 + 0x108]
	0x03B3DFB0 LDR X0, [X22]
	0x03B3DFB4 BL 0x1C16F10
	0x03B3DFB8 ADRP X24, 0x5B8000
	0x03B3DFBC LDR X24, [X24 + 0x858]
	0x03B3DFC0 MOV X20, X0
	0x03B3DFC4 LDR X1, [X24]
	0x03B3DFC8 BL 0x301B7C4
	0x03B3DFCC STR X20, [X19 + 0x118]
	0x03B3DFD0 ADRP X8, 0x61D000
	0x03B3DFD4 LDR X8, [X8 + 0x530]
	0x03B3DFD8 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A6000
	006 Move W8, [X21+2124]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61E000
	014 Move X0, [X0+1072]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2124], W8
	018 Move X0, [X19+232]
	019 Compare X0, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x61E000
	022 Move X8, [X8+1072]
	023 Move X1, X20
	024 Move X2, [X8]
	025 Call UnityEvent`1<Object>.Invoke, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {41}
	028 Move X0, X20
	029 Move X1, X31
	030 Call BaseInteractionEventArgs.get_interactor, X0
	031 Move X8, [X19]
	032 Move X1, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, [X8+2040]
	037 Move X2, [X8+2048]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X3
	041 Call 0x1C17F20

Method: System.Void ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase updatePhase)

Disassembly:
	0x03B3DFDC BL 0x1C16F10
	0x03B3DFE0 ADRP X8, 0x61D000
	0x03B3DFE4 LDR X8, [X8 + 0x520]
	0x03B3DFE8 MOV X20, X0
	0x03B3DFEC LDR X1, [X8]
	0x03B3DFF0 BL 0x2D109CC
	0x03B3DFF4 CBZ X20, 0x3B3E2EC
	0x03B3DFF8 ADRP X8, 0x61D000
	0x03B3DFFC LDR X8, [X8 + 0x598]
	0x03B3E000 ADRP X21, 0x61C000
	0x03B3E004 ADRP X23, 0x61C000
	0x03B3E008 MOV X0, X20
	0x03B3E00C LDR X2, [X8]
	0x03B3E010 LDR X21, [X21 + 0x528]
	0x03B3E014 LDR X23, [X23 + 0x518]
	0x03B3E018 MOV W1, W31
	0x03B3E01C BL 0x25E89B0
	0x03B3E020 STR X20, [X19 + 0x120]
	0x03B3E024 LDR X0, [X22]
	0x03B3E028 BL 0x1C16F10
	0x03B3E02C LDR X1, [X24]
	0x03B3E030 MOV X20, X0
	0x03B3E034 BL 0x301B7C4
	0x03B3E038 STR X20, [X19 + 0x128]
	0x03B3E03C LDR X0, [X21]
	0x03B3E040 BL 0x1C16F10
	0x03B3E044 LDR X1, [X23]
	0x03B3E048 MOV X20, X0
	0x03B3E04C BL 0x2D109CC
	0x03B3E050 CBZ X20, 0x3B3E2EC
	0x03B3E054 ADRP X8, 0x61C000
	0x03B3E058 LDR X8, [X8 + 0x5A0]
	0x03B3E05C ADRP X21, 0x61C000
	0x03B3E060 ADRP X23, 0x61C000
	0x03B3E064 MOV X0, X20
	0x03B3E068 LDR X2, [X8]
	0x03B3E06C LDR X21, [X21 + 0x538]
	0x03B3E070 LDR X23, [X23 + 0x510]
	0x03B3E074 MOV W1, W31
	0x03B3E078 BL 0x25E89B0
	0x03B3E07C STR X20, [X19 + 0x130]
	0x03B3E080 LDR X0, [X22]
	0x03B3E084 BL 0x1C16F10
	0x03B3E088 LDR X1, [X24]
	0x03B3E08C MOV X20, X0
	0x03B3E090 BL 0x301B7C4
	0x03B3E094 STR X20, [X19 + 0x138]
	0x03B3E098 LDR X0, [X21]
	0x03B3E09C BL 0x1C16F10
	0x03B3E0A0 LDR X1, [X23]
	0x03B3E0A4 MOV X20, X0
	0x03B3E0A8 BL 0x2D109CC
	0x03B3E0AC CBZ X20, 0x3B3E2EC
	0x03B3E0B0 ADRP X8, 0x61C000
	0x03B3E0B4 LDR X8, [X8 + 0x590]
	0x03B3E0B8 ADRP X21, 0x61C000
	0x03B3E0BC ADRP X22, 0x61C000
	0x03B3E0C0 ADRP X24, 0x61C000
	0x03B3E0C4 ADRP X25, 0x61C000
	0x03B3E0C8 ADRP X29, 0x61C000
	0x03B3E0CC ADRP X28, 0x61C000
	0x03B3E0D0 ADRP X27, 0x61C000
	0x03B3E0D4 ADRP X26, 0x61C000
	0x03B3E0D8 LDR X21, [X21 + 0x4D0]
	0x03B3E0DC LDR X22, [X22 + 0x4C8]
	0x03B3E0E0 LDR X24, [X24 + 0x500]
	0x03B3E0E4 LDR X25, [X25 + 0x4E8]
	0x03B3E0E8 LDR X29, [X29 + 0x4F8]
	0x03B3E0EC LDR X28, [X28 + 0x4E0]
	0x03B3E0F0 LDR X27, [X27 + 0x578]
	0x03B3E0F4 LDR X26, [X26 + 0x540]
	0x03B3E0F8 LDR X2, [X8]
	0x03B3E0FC ADRP X23, 0x61C000
	0x03B3E100 LDR X23, [X23 + 0x5A8]
	0x03B3E104 MOV X0, X20
	0x03B3E108 MOV W1, W31
	0x03B3E10C BL 0x25E89B0
	0x03B3E110 STR X20, [X19 + 0x140]
	0x03B3E114 LDR X0, [X21]
	0x03B3E118 BL 0x1C16F10
	0x03B3E11C LDR X4, [X22]
	0x03B3E120 FMOV S0, W31
	0x03B3E124 MOVZ W1, 0x1
	0x03B3E128 MOV X2, X31
	0x03B3E12C MOV W3, W31
	0x03B3E130 MOV X20, X0
	0x03B3E134 BL 0x28E2A78
	0x03B3E138 STR X20, [X19 + 0x148]
	0x03B3E13C LDR X0, [X24]
	0x03B3E140 BL 0x1C16F10
	0x03B3E144 LDR X1, [X25]
	0x03B3E148 MOV X20, X0
	0x03B3E14C BL 0x2AA7868
	0x03B3E150 STR X20, [X19 + 0x150]
	0x03B3E154 LDR X0, [X24]
	0x03B3E158 BL 0x1C16F10
	0x03B3E15C LDR X1, [X25]
	0x03B3E160 MOV X20, X0
	0x03B3E164 BL 0x2AA7868
	0x03B3E168 STR X20, [X19 + 0x158]
	0x03B3E16C LDR X0, [X29]
	0x03B3E170 BL 0x1C16F10
	0x03B3E174 LDR X1, [X28]
	0x03B3E178 MOV X20, X0
	0x03B3E17C BL 0x2AA4804
	0x03B3E180 STR X20, [X19 + 0x160]
	0x03B3E184 LDR X0, [X27]
	0x03B3E188 BL 0x1C16F10
	0x03B3E18C LDR X2, [X26]
	0x03B3E190 MOV W1, W31
	0x03B3E194 MOV X20, X0
	0x03B3E198 BL 0x2D57B9C
	0x03B3E19C STR X20, [X19 + 0x168]
	0x03B3E1A0 ADRP X8, 0x61C000
	0x03B3E1A4 LDR X8, [X8 + 0x508]
	0x03B3E1A8 LDR X0, [X8]
	0x03B3E1AC BL 0x1C16F10
	0x03B3E1B0 ADRP X8, 0x61C000
	0x03B3E1B4 LDR X8, [X8 + 0x4F0]
	0x03B3E1B8 MOV X20, X0
	0x03B3E1BC LDR X1, [X8]
	0x03B3E1C0 BL 0x2AB41F4
	0x03B3E1C4 STR X20, [X19 + 0x170]
	0x03B3E1C8 LDR X0, [X23]
	0x03B3E1CC BL 0x1C16F10
	0x03B3E1D0 MOV X1, X31
	0x03B3E1D4 MOV X20, X0
	0x03B3E1D8 BL 0x3B6C1AC
	0x03B3E1DC STR X20, [X19 + 0x180]
	0x03B3E1E0 LDR X0, [X23]
	0x03B3E1E4 BL 0x1C16F10
	0x03B3E1E8 MOV X1, X31
	0x03B3E1EC MOV X20, X0
	0x03B3E1F0 BL 0x3B6C1AC
	0x03B3E1F4 STR X20, [X19 + 0x188]
	0x03B3E1F8 LDR X0, [X23]
	0x03B3E1FC BL 0x1C16F10
	0x03B3E200 MOV X1, X31
	0x03B3E204 MOV X20, X0
	0x03B3E208 BL 0x3B6C1AC
	0x03B3E20C STR X20, [X19 + 0x190]
	0x03B3E210 LDR X0, [X23]
	0x03B3E214 BL 0x1C16F10
	0x03B3E218 MOV X1, X31
	0x03B3E21C MOV X20, X0
	0x03B3E220 BL 0x3B6C1AC
	0x03B3E224 STR X20, [X19 + 0x198]
	0x03B3E228 LDR X0, [X23]
	0x03B3E22C BL 0x1C16F10
	0x03B3E230 MOV X1, X31
	0x03B3E234 MOV X20, X0
	0x03B3E238 BL 0x3B6C1AC
	0x03B3E23C STR X20, [X19 + 0x1A0]
	0x03B3E240 LDR X0, [X23]
	0x03B3E244 BL 0x1C16F10
	0x03B3E248 MOV X1, X31
	0x03B3E24C MOV X20, X0
	0x03B3E250 BL 0x3B6C1AC
	0x03B3E254 STR X20, [X19 + 0x1A8]
	0x03B3E258 LDR X0, [X23]
	0x03B3E25C BL 0x1C16F10
	0x03B3E260 MOV X1, X31
	0x03B3E264 MOV X20, X0
	0x03B3E268 BL 0x3B6C1AC
	0x03B3E26C STR X20, [X19 + 0x1B0]
	0x03B3E270 LDR X0, [X23]
	0x03B3E274 BL 0x1C16F10
	0x03B3E278 MOV X1, X31
	0x03B3E27C MOV X20, X0
	0x03B3E280 BL 0x3B6C1AC
	0x03B3E284 STR X20, [X19 + 0x1B8]
	0x03B3E288 LDR X0, [X23]
	0x03B3E28C BL 0x1C16F10
	0x03B3E290 MOV X1, X31
	0x03B3E294 MOV X20, X0
	0x03B3E298 BL 0x3B6C1AC
	0x03B3E29C STR X20, [X19 + 0x1C0]
	0x03B3E2A0 ADRP X8, 0x61C000
	0x03B3E2A4 LDR X8, [X8 + 0x588]
	0x03B3E2A8 LDR X0, [X8]
	0x03B3E2AC BL 0x1C16F10
	0x03B3E2B0 ADRP X8, 0x61C000
	0x03B3E2B4 LDR X8, [X8 + 0x580]
	0x03B3E2B8 MOV X20, X0
	0x03B3E2BC LDR X1, [X8]
	0x03B3E2C0 BL 0x301B7C4
	0x03B3E2C4 STR X20, [X19 + 0x1C8]
	0x03B3E2C8 MOV X0, X19
	0x03B3E2CC LDP X20, X19, [X31 + 0x50]
	0x03B3E2D0 LDP X22, X21, [X31 + 0x40]
	0x03B3E2D4 LDP X24, X23, [X31 + 0x30]
	0x03B3E2D8 LDP X26, X25, [X31 + 0x20]
	0x03B3E2DC LDP X28, X27, [X31 + 0x10]
	0x03B3E2E0 MOV X1, X31
	0x03B3E2E4 LDP X29, X30, [X31], #0x60
	0x03B3E2E8 B 0x3C36C30
	0x03B3E2EC BL 0x1C16F20
	0x03B3E2F0 STP X30, X21, [X31 - 0x20]!
	0x03B3E2F4 STP X20, X19, [X31 + 0x10]
	0x03B3E2F8 ADRP X20, 0x8A4000
	0x03B3E2FC ADRP X21, 0x61C000
	0x03B3E300 ADRP X19, 0x61C000
	0x03B3E304 LDRB W8, [X20 + 0x858]
	0x03B3E308 LDR X21, [X21 + 0x5B0]
	0x03B3E30C LDR X19, [X19 + 0x438]
	0x03B3E310 TBNZ X8, 0x0, 0x3B3E334
	0x03B3E314 ADRP X0, 0x61C000
	0x03B3E318 LDR X0, [X0 + 0x438]
	0x03B3E31C BL 0x1C16CF4
	0x03B3E320 ADRP X0, 0x61C000
	0x03B3E324 LDR X0, [X0 + 0x5B0]
	0x03B3E328 BL 0x1C16CF4
	0x03B3E32C MOVZ W8, 0x1
	0x03B3E330 STRB W8, [X20 + 0x858]
	0x03B3E334 LDR X0, [X21]
	0x03B3E338 MOVZ W1, 0x1
	0x03B3E33C MOV W2, W31
	0x03B3E340 MOV W3, W31
	0x03B3E344 MOV X4, X31
	0x03B3E348 BL 0x3BFE7FC
	0x03B3E34C LDR X8, [X19]
	0x03B3E350 LDP X20, X19, [X31 + 0x10]
	0x03B3E354 LDR X8, [X8 + 0xB8]
	0x03B3E358 STR X0, [X8]
	0x03B3E35C LDP X30, X21, [X31], #0x20
	0x03B3E360 RET
	0x03B3E364 MOV X1, X31
	0x03B3E368 B 0x3C32E90
	0x03B3E36C STR X30, [X31 - 0x20]!
	0x03B3E370 STP X20, X19, [X31 + 0x10]
	0x03B3E374 ADRP X19, 0x8A4000
	0x03B3E378 ADRP X20, 0x61C000
	0x03B3E37C LDRB W8, [X19 + 0x859]
	0x03B3E380 LDR X20, [X20 + 0x2D8]
	0x03B3E384 TBNZ X8, 0x0, 0x3B3E39C
	0x03B3E388 ADRP X0, 0x61C000
	0x03B3E38C LDR X0, [X0 + 0x2D8]
	0x03B3E390 BL 0x1C16CF4
	0x03B3E394 MOVZ W8, 0x1
	0x03B3E398 STRB W8, [X19 + 0x859]
	0x03B3E39C LDR X0, [X20]
	0x03B3E3A0 BL 0x1C16F10
	0x03B3E3A4 MOV X1, X31
	0x03B3E3A8 MOV X19, X0
	0x03B3E3AC BL 0x33BDD8C
	0x03B3E3B0 LDR X8, [X20]
	0x03B3E3B4 LDR X8, [X8 + 0xB8]
	0x03B3E3B8 STR X19, [X8]
	0x03B3E3BC LDP X20, X19, [X31 + 0x10]
	0x03B3E3C0 LDR X30, [X31], #0x20
	0x03B3E3C4 RET
	0x03B3E3C8 MOV X1, X31
	0x03B3E3CC B 0x33BDD8C
	0x03B3E3D0 CBZ X1, 0x3B3E3E0
	0x03B3E3D4 MOV X0, X1
	0x03B3E3D8 MOV X1, X31
	0x03B3E3DC B 0x3C8F78C
	0x03B3E3E0 STR X30, [X31 - 0x10]!
	0x03B3E3E4 BL 0x1C16F20
	0x03B3E3E8 LDR X0, [X0 + 0x1D0]
	0x03B3E3EC RET
	0x03B3E3F0 STR X1, [X0 + 0x1D0]
	0x03B3E3F4 RET
	0x03B3E3F8 LDR X0, [X0 + 0x1D8]
	0x03B3E3FC RET
	0x03B3E400 STR X1, [X0 + 0x1D8]
	0x03B3E404 RET
	0x03B3E408 LDRB W0, [X0 + 0x1E0]
	0x03B3E40C RET
	0x03B3E410 AND W8, W1, 0x1
	0x03B3E414 STRB W8, [X0 + 0x1E0]
	0x03B3E418 RET
	0x03B3E41C LDRB W0, [X0 + 0x1E1]
	0x03B3E420 RET
	0x03B3E424 AND W8, W1, 0x1
	0x03B3E428 STRB W8, [X0 + 0x1E1]
	0x03B3E42C RET
	0x03B3E430 LDRB W0, [X0 + 0x1E2]
	0x03B3E434 RET
	0x03B3E438 AND W8, W1, 0x1
	0x03B3E43C STRB W8, [X0 + 0x1E2]
	0x03B3E440 RET
	0x03B3E444 LDRB W0, [X0 + 0x1E3]
	0x03B3E448 RET
	0x03B3E44C AND W8, W1, 0x1
	0x03B3E450 STRB W8, [X0 + 0x1E3]
	0x03B3E454 RET
	0x03B3E458 LDRB W0, [X0 + 0x1E4]
	0x03B3E45C RET
	0x03B3E460 AND W8, W1, 0x1
	0x03B3E464 STRB W8, [X0 + 0x1E4]
	0x03B3E468 RET
	0x03B3E46C LDR V0, [X0 + 0x1E8]
	0x03B3E470 RET
	0x03B3E474 STR S0, [X0 + 0x1E8]
	0x03B3E478 RET
	0x03B3E47C LDR W0, [X0 + 0x1EC]
	0x03B3E480 RET
	0x03B3E484 STP X30, X19, [X31 - 0x10]!
	0x03B3E488 MOV X19, X0
	0x03B3E48C STR W1, [X0 + 0x1EC]
	0x03B3E490 BL 0x3B3A824
	0x03B3E494 TBZ X0, 0x0, 0x3B3E4D4
	0x03B3E498 LDR X8, [X19]
	0x03B3E49C LDR X1, [X19 + 0x320]
	0x03B3E4A0 MOV X0, X19
	0x03B3E4A4 LDR X9, [X8 + 0x8F8]
	0x03B3E4A8 LDR X2, [X8 + 0x900]
	0x03B3E4AC BLR X9
	0x03B3E4B0 MOV X0, X19
	0x03B3E4B4 BL 0x3B3E4DC
	0x03B3E4B8 LDR X8, [X19]
	0x03B3E4BC LDR X1, [X19 + 0x320]
	0x03B3E4C0 MOV X0, X19
	0x03B3E4C4 LDR X3, [X8 + 0x8E8]
	0x03B3E4C8 LDR X2, [X8 + 0x8F0]
	0x03B3E4CC LDP X30, X19, [X31], #0x10
	0x03B3E4D0 BR X3
	0x03B3E4D4 LDP X30, X19, [X31], #0x10
	0x03B3E4D8 RET
	0x03B3E4DC SUB X31, X31, 0x60
	0x03B3E4E0 STR X30, [X31 + 0x10]
	0x03B3E4E4 STP X26, X25, [X31 + 0x20]
	0x03B3E4E8 STP X24, X23, [X31 + 0x30]
	0x03B3E4EC STP X22, X21, [X31 + 0x40]
	0x03B3E4F0 STP X20, X19, [X31 + 0x50]
	0x03B3E4F4 ADRP X20, 0x8A4000
	0x03B3E4F8 LDRB W8, [X20 + 0x875]
	0x03B3E4FC MOV X19, X0
	0x03B3E500 TBNZ X8, 0x0, 0x3B3E5A8
	0x03B3E504 ADRP X0, 0x5B5000
	0x03B3E508 LDR X0, [X0 + 0xA28]
	0x03B3E50C BL 0x1C16CF4
	0x03B3E510 ADRP X0, 0x61C000
	0x03B3E514 LDR X0, [X0 + 0x168]
	0x03B3E518 BL 0x1C16CF4
	0x03B3E51C ADRP X0, 0x61C000
	0x03B3E520 LDR X0, [X0 + 0x170]
	0x03B3E524 BL 0x1C16CF4

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0x8A6000
	016 Move X20, 0x61E000
	017 Move W8, [X21+2125]
	018 Call 0x3EB299C
	019 Return 
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {63}
	025 Move X0, 0x61D000
	026 Move X0, [X0+1088]
	027 Call 0x1C17CF4
	028 Move X0, 0x61D000
	029 Move X0, [X0+1096]
	030 Call 0x1C17CF4
	031 Move X0, 0x61D000
	032 Move X0, [X0+1104]
	033 Call 0x1C17CF4
	034 Move X0, 0x61D000
	035 Move X0, [X0+640]
	036 Call 0x1C17CF4
	037 Move X0, 0x61D000
	038 Move X0, [X0+616]
	039 Call 0x1C17CF4
	040 Move X0, 0x61D000
	041 Move X0, [X0+968]
	042 Call 0x1C17CF4
	043 Move X0, 0x61D000
	044 Move X0, [X0+1112]
	045 Call 0x1C17CF4
	046 Move X0, 0x61D000
	047 Move X0, [X0+1120]
	048 Call 0x1C17CF4
	049 Move X0, 0x61D000
	050 Move X0, [X0+1128]
	051 Call 0x1C17CF4
	052 Move X0, 0x5B6000
	053 Move X0, [X0+1432]
	054 Call 0x1C17CF4
	055 Move X0, 0x61D000
	056 Move X0, [X0+936]
	057 Call 0x1C17CF4
	058 Move X0, 0x61D000
	059 Move X0, [X0+1080]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X21+2125], W8
	063 Move X0, [X20]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X20]
	069 Move X8, [X0+184]
	070 Move X1, X31
	071 Move X2, X31
	072 Move X20, [X8]
	073 Move X0, X20
	074 Call IntPtr.op_Inequality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {82}
	079 Move X0, X20
	080 Move X1, X31
	081 Call ProfilerUnsafeUtility.BeginSample, X0
	082 Move X0, [X19+368]
	083 Compare X0, 0
	084 JumpIfEqual {324}
	085 Move X8, 0x61D000
	086 Move X8, [X8+1096]
	087 Move X1, [X8]
	088 Call Dictionary`2<Object, Single>.Clear, X0
	089 Move X0, [X19+248]
	090 Compare X0, 0
	091 JumpIfEqual {327}
	092 Move X8, 0x61D000
	093 Move X8, [X8+640]
	094 Move X1, [X8]
	095 Call 0x2D58B54, X0
	096 Move X25, 0x61D000
	097 Move X24, 0x61D000
	098 Move X25, [X25+1104]
	099 Move X24, [X24+936]
	100 Move W21, W0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X26, 0x61D000
	103 Move X26, [X26+1120]
	104 Move W22, W31
	105 Move S8, W31
	106 Move X0, [X19+248]
	107 Compare X0, 0
	108 JumpIfEqual {316}
	109 Move X2, [X26]
	110 Move W1, W22
	111 Call 0x2D58B78, X0, X1
	112 Move X23, X0
	113 Compare X0, 0
	114 JumpIfEqual {124}
	115 Move X9, [X23]
	116 Move X8, [X24]
	117 Move W11, [X9+304]
	118 Move W10, [X8+304]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X9, [X9+200]
	121 Add X9, X9, X10
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, [X19+320]
	125 Move S0, 1
	126 Move X1, X23
	127 Move X2, X19
	128 Move X3, X31
	129 Call XRFilterUtility.Process, X0, X1, X2, V0
	130 Move X0, [X19+368]
	131 Compare X0, 0
	132 JumpIfEqual {321}
	133 Move X2, [X25]
	134 Move V9, V0
	135 Move X1, X23
	136 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 NotImplemented "Instruction FCSEL not yet implemented."
	139 Add W22, W22, 1
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move S8, W31
	142 Move X0, [X19+240]
	143 Compare X0, 0
	144 JumpIfEqual {328}
	145 Move X8, 0x61D000
	146 Move X8, [X8+616]
	147 Move X1, [X8]
	148 Call 0x2D58B54, X0
	149 Move W21, W0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X26, 0x61D000
	152 Move X26, [X26+1128]
	153 Move W22, W31
	154 Move X0, [X19+240]
	155 Compare X0, 0
	156 JumpIfEqual {317}
	157 Move X2, [X26]
	158 Move W1, W22
	159 Call 0x2D58B78, X0, X1
	160 Move X23, X0
	161 Compare X0, 0
	162 JumpIfEqual {172}
	163 Move X9, [X23]
	164 Move X8, [X24]
	165 Move W11, [X9+304]
	166 Move W10, [X8+304]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X9, [X9+200]
	169 Add X9, X9, X10
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X19
	173 Move X1, X23
	174 Call XRBaseInteractable.IsSelected, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {194}
	179 Move X0, [X19+320]
	180 Move S0, W31
	181 Move X1, X23
	182 Move X2, X19
	183 Move X3, X31
	184 Call XRFilterUtility.Process, X0, X1, X2, V0
	185 Move X0, [X19+368]
	186 Compare X0, 0
	187 JumpIfEqual {323}
	188 Move X2, [X25]
	189 Move V9, V0
	190 Move X1, X23
	191 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	192 NotImplemented "Instruction FCMP not yet implemented."
	193 NotImplemented "Instruction FCSEL not yet implemented."
	194 Add W22, W22, 1
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, [X19+360]
	197 Compare X0, 0
	198 JumpIfEqual {329}
	199 Move X8, 0x61D000
	200 Move X8, [X8+968]
	201 Move X1, [X8]
	202 Call 0x2D58B54, X0
	203 Move W21, W0
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X26, 0x61D000
	206 Move X27, 0x5B6000
	207 Move X26, [X26+1112]
	208 Move X27, [X27+1432]
	209 Move W22, W31
	210 Move S10, W31
	211 Move S11, 1
	212 Move X0, [X19+360]
	213 Compare X0, 0
	214 JumpIfEqual {319}
	215 Move X2, [X26]
	216 Move W1, W22
	217 Call 0x2D58B78, X0, X1
	218 Move X23, X0
	219 Compare X0, 0
	220 JumpIfEqual {320}
	221 Move X0, [X27]
	222 Move X24, [X23+608]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X0, X24
	228 Move X1, X31
	229 Move X2, X31
	230 Call Object.op_Inequality, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {239}
	235 Move X8, [X23+608]
	236 Compare X8, 0
	237 JumpIfEqual {322}
	238 Move V0, [X8+92]
	239 Move X0, X19
	240 Move X1, X23
	241 Call XRBaseInteractable.IsSelected, X0, X1
	242 And W31, W0, 1
	243 NotImplemented "Instruction FCSEL not yet implemented."
	244 Move X0, [X19+320]
	245 Move X1, X23
	246 Move X2, X19
	247 Move X3, X31
	248 Call XRFilterUtility.Process, X0, X1, X2, V0
	249 Move X0, [X19+368]
	250 Compare X0, 0
	251 JumpIfEqual {318}
	252 Move X2, [X25]
	253 Move V9, V0
	254 Move X1, X23
	255 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 Add W22, W22, 1
	258 NotImplemented "Instruction FCSEL not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X21, X31
	261 Move W22, 13
	262 Move X0, X20
	263 Move X1, X31
	264 Move X2, X31
	265 Call IntPtr.op_Inequality, X0, X1
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {273}
	270 Move X0, X20
	271 Move X1, X31
	272 Call ProfilerUnsafeUtility.EndSample, X0
	273 Compare X21, 0
	274 JumpIfNotEqual {325}
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Compare W22, 0
	277 JumpIfNotEqual {301}
	278 Move X0, [X19+328]
	279 Compare X0, 0
	280 JumpIfEqual {330}
	281 Move X8, 0x61D000
	282 Move X8, [X8+1088]
	283 Move V0, V8
	284 Move X20, [X31+96]
	285 Move X19, [X31+104]
	286 Move X22, [X31+80]
	287 Move X21, [X31+88]
	288 Move X1, [X8]
	289 Move X24, [X31+64]
	290 Move X23, [X31+72]
	291 Move X26, [X31+48]
	292 Move X25, [X31+56]
	293 Move X30, [X31+32]
	294 Move X27, [X31+40]
	295 Move D9, [X31+16]
	296 Move D8, [X31+24]
	297 Move D11, [X31+112]
	298 Move D10, [X31+120]
	299 Call BindableVariableBase`1<Single>.set_Value, X0, V0
	300 Return 
	301 Move X20, [X31+96]
	302 Move X19, [X31+104]
	303 Move X22, [X31+80]
	304 Move X21, [X31+88]
	305 Move X24, [X31+64]
	306 Move X23, [X31+72]
	307 Move X26, [X31+48]
	308 Move X25, [X31+56]
	309 Move X30, [X31+32]
	310 Move X27, [X31+40]
	311 Move D9, [X31+16]
	312 Move D8, [X31+24]
	313 Move D11, [X31+112]
	314 Move D10, [X31+120]
	315 Return 
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Move X0, X21
	326 Call 0x1C17F18
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Move S8, W31
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Call 0x3EB2AD0
	334 Move X21, [X0]
	335 Call 0x3EB2AE0
	336 Move W22, W31
	337 Move X19, X0
	338 Move X21, X31
	339 Move X19, X0
	340 Move X0, X20
	341 Move X1, X31
	342 Move X2, X31
	343 Call IntPtr.op_Inequality, X0, X1
	344 Move TEMP, X0
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfNotEqual {351}
	348 Move X0, X20
	349 Move X1, X31
	350 Call ProfilerUnsafeUtility.EndSample, X0
	351 Compare X21, 0
	352 JumpIfNotEqual {355}
	353 Move X0, X19
	354 Call 0x1D2D690
	355 Move X0, X21
	356 Call 0x1C17F18
	357 Call 0x1991590

Method: System.Boolean ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor)

Disassembly:
	0x03B3CDAC LDP X20, X19, [X31 + 0x10]
	0x03B3CDB0 LDP X30, X21, [X31], #0x20
	0x03B3CDB4 B 0x2729DBC
	0x03B3CDB8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X2, X0
	002 Move X0, [X0+288]
	003 Move X3, X31
	004 Call XRFilterUtility.Process, X0, X1, X2
	005 Return X0

Method: System.Boolean ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor)

Disassembly:
	0x03B3CEBC BL 0x2D57B54
	0x03B3CEC0 CBNZ W0, 0x3B3CEC8
	0x03B3CEC4 STR X31, [X19 + 0x110]
	0x03B3CEC8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X2, X0
	002 Move X0, [X0+304]
	003 Move X3, X31
	004 Call XRFilterUtility.Process, X0, X1, X2
	005 Return X0

Method: System.Single ProcessInteractionStrengthFilters(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, System.Single interactionStrength)

Disassembly:
	0x03B3E528 ADRP X0, 0x61C000
	0x03B3E52C LDR X0, [X0 + 0x5B8]
	0x03B3E530 BL 0x1C16CF4
	0x03B3E534 ADRP X0, 0x61C000

ISIL:
	001 Move X2, X0
	002 Move X0, [X0+320]
	003 Move X3, X31
	004 Call XRFilterUtility.Process, X0, X1, X2, V0
	005 Return V0

Method: UnityEngine.LayerMask get_interactionLayerMask()

Disassembly:
	0x03B3E538 LDR X0, [X0 + 0x5C0]
	0x03B3E53C BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_interactionLayerMask(UnityEngine.LayerMask value)

Disassembly:
	0x03B3E540 ADRP X0, 0x61C000
	0x03B3E544 LDR X0, [X0 + 0x5C8]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onFirstHoverEntered()

Disassembly:
	0x03B3E548 BL 0x1C16CF4
	0x03B3E54C ADRP X0, 0x61C000

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: System.Void set_onFirstHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E550 LDR X0, [X0 + 0x5D0]
	0x03B3E554 BL 0x1C16CF4

ISIL:
	001 Move [X0+384], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onLastHoverExited()

Disassembly:
	0x03B3E558 ADRP X0, 0x61C000
	0x03B3E55C LDR X0, [X0 + 0x5D8]

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_onLastHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E560 BL 0x1C16CF4
	0x03B3E564 ADRP X0, 0x5B5000

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverEntered()

Disassembly:
	0x03B3E568 LDR X0, [X0 + 0x598]
	0x03B3E56C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: System.Void set_onHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E570 ADRP X0, 0x61C000
	0x03B3E574 LDR X0, [X0 + 0x368]

ISIL:
	001 Move [X0+400], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverExited()

Disassembly:
	0x03B3E578 BL 0x1C16CF4
	0x03B3E57C ADRP X0, 0x61C000

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void set_onHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E580 LDR X0, [X0 + 0x5E0]
	0x03B3E584 BL 0x1C16CF4

ISIL:
	001 Move [X0+408], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectEntered()

Disassembly:
	0x03B3E588 ADRP X0, 0x61C000
	0x03B3E58C LDR X0, [X0 + 0x5E8]

ISIL:
	001 Move X0, [X0+416]
	002 Return X0

Method: System.Void set_onSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E590 BL 0x1C16CF4
	0x03B3E594 ADRP X0, 0x61C000

ISIL:
	001 Move [X0+416], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectExited()

Disassembly:
	0x03B3E598 LDR X0, [X0 + 0x5F0]
	0x03B3E59C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+424]
	002 Return X0

Method: System.Void set_onSelectExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E5A0 MOVZ W8, 0x1
	0x03B3E5A4 STRB W8, [X20 + 0x875]

ISIL:
	001 Move [X0+424], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectCanceled()

Disassembly:
	0x03B3E5A8 MOV X0, X19
	0x03B3E5AC STR X31, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+432]
	002 Return X0

Method: System.Void set_onSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E5B0 STR X31, [X31 + 0x18]
	0x03B3E5B4 BL 0x3B3A784

ISIL:
	001 Move [X0+432], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onActivate()

Disassembly:
	0x03B3E5B8 CBZ X0, 0x3B3E7C4
	0x03B3E5BC LDR W8, [X0 + 0x18]

ISIL:
	001 Move X0, [X0+440]
	002 Return X0

Method: System.Void set_onActivate(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E5C0 SUBS W20, W8, 0x1
	0x03B3E5C4 B.MI 0x3B3E780

ISIL:
	001 Move [X0+440], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onDeactivate()

Disassembly:
	0x03B3E5C8 ADRP X23, 0x61C000
	0x03B3E5CC ADRP X24, 0x61C000

ISIL:
	001 Move X0, [X0+448]
	002 Return X0

Method: System.Void set_onDeactivate(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)

Disassembly:
	0x03B3E5D0 ADRP X25, 0x5B5000
	0x03B3E5D4 ADRP X22, 0x61C000

ISIL:
	001 Move [X0+448], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onFirstHoverEnter()

Disassembly:
	0x03B3E5D8 ADRP X26, 0x61C000
	0x03B3E5DC LDR X23, [X23 + 0x170]

ISIL:
	001 Move X0, [X0+384]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverEnter()

Disassembly:
	0x03B3E5E0 LDR X24, [X24 + 0x368]
	0x03B3E5E4 LDR X25, [X25 + 0x598]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverExit()

Disassembly:
	0x03B3E5E8 LDR X22, [X22 + 0x5D8]
	0x03B3E5EC LDR X26, [X26 + 0x5C8]

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onLastHoverExit()

Disassembly:
	0x03B3E5F0 MOV X0, X19
	0x03B3E5F4 BL 0x3B3A784

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectEnter()

Disassembly:
	0x03B3E5F8 CBZ X0, 0x3B3E7C4
	0x03B3E5FC LDR X2, [X23]

ISIL:
	001 Move X0, [X0+416]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectExit()

Disassembly:
	0x03B3E600 MOV W1, W20
	0x03B3E604 BL 0x301BCCC

ISIL:
	001 Move X0, [X0+424]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectCancel()

Disassembly:
	0x03B3E608 CBZ X0, 0x3B3E624
	0x03B3E60C LDR X9, [X0]

ISIL:
	001 Move X0, [X0+432]
	002 Return X0

Method: System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E610 LDR X8, [X24]

ISIL:
	001 Return 

Method: System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E614 LDRB W11, [X9 + 0x130]
	0x03B3E618 LDRB W10, [X8 + 0x130]
	0x03B3E61C CMP W11, W10
	0x03B3E620 B.CS 0x3B3E62C
	0x03B3E624 MOV X21, X31
	0x03B3E628 B 0x3B3E640
	0x03B3E62C LDR X9, [X9 + 0xC8]
	0x03B3E630 ADD X9, X9, X10, 0x3, LSL
	0x03B3E634 LDUR X9, [X9 - 0x8]
	0x03B3E638 CMP X9, X8
	0x03B3E63C CSEL X21, X0, X31, EQ
	0x03B3E640 LDR X0, [X25]
	0x03B3E644 LDR W8, [X0 + 0xE0]
	0x03B3E648 CBNZ W8, 0x3B3E650
	0x03B3E64C BL 0x1C16DFC
	0x03B3E650 MOV X0, X21
	0x03B3E654 MOV X1, X31
	0x03B3E658 MOV X2, X31
	0x03B3E65C BL 0x3C354F8
	0x03B3E660 TBZ X0, 0x0, 0x3B3E6C4
	0x03B3E664 CBZ X21, 0x3B3E7C4
	0x03B3E668 LDR X8, [X21]
	0x03B3E66C MOV X0, X21
	0x03B3E670 LDR X9, [X8 + 0x558]
	0x03B3E674 LDR X1, [X8 + 0x560]
	0x03B3E678 BLR X9
	0x03B3E67C ANDS W31, W0, 0xFF
	0x03B3E680 STR X0, [X31 + 0x8]
	0x03B3E684 B.EQ 0x3B3E6C4
	0x03B3E688 LDRB W8, [X31 + 0x18]
	0x03B3E68C CBNZ W8, 0x3B3E6D0
	0x03B3E690 LDR X8, [X21]
	0x03B3E694 MOV X0, X21
	0x03B3E698 LDR X9, [X8 + 0x558]
	0x03B3E69C LDR X1, [X8 + 0x560]
	0x03B3E6A0 BLR X9
	0x03B3E6A4 LDR X1, [X22]
	0x03B3E6A8 STR X0, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A5000
	006 Move W8, [X21+2126]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x61D000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move X0, 0x61D000
	017 Move X0, [X0+1144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2126], W8
	021 Move X8, [X20+456]
	022 Compare X8, 0
	023 JumpIfEqual {50}
	024 Move W8, [X8+24]
	025 Move X21, 0x61D000
	026 Move X21, [X21+1144]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, [X20+384]
	029 Compare X0, 0
	030 JumpIfEqual {34}
	031 Move X2, [X21]
	032 Move X1, X19
	033 Call UnityEvent`1<Object>.Invoke, X0, X1
	034 Move X0, [X20+400]
	035 Compare X0, 0
	036 JumpIfEqual {45}
	037 Move X2, [X21]
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call UnityEvent`1<Object>.Invoke, X0, X1
	044 Return 
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 
	050 Call 0x1C17F20

Method: System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E6AC ADD X0, X31, 0x8

ISIL:
	001 Return 

Method: System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E6B0 BL 0x24345D0
	0x03B3E6B4 LDR X2, [X26]
	0x03B3E6B8 MOV W1, W0
	0x03B3E6BC ADD X0, X31, 0x18
	0x03B3E6C0 BL 0x24345B8
	0x03B3E6C4 SUBS W20, W20, 0x1
	0x03B3E6C8 B.PL 0x3B3E5F0
	0x03B3E6CC B 0x3B3E780
	0x03B3E6D0 MOV X0, X19
	0x03B3E6D4 MOV X1, X31
	0x03B3E6D8 BL 0x3C389D4
	0x03B3E6DC LDR X1, [X22]
	0x03B3E6E0 MOV X20, X0
	0x03B3E6E4 ADD X0, X31, 0x18
	0x03B3E6E8 BL 0x24345D0
	0x03B3E6EC ADRP X8, 0x61C000
	0x03B3E6F0 LDR X8, [X8 + 0x5B8]
	0x03B3E6F4 STR W0, [X31 + 0x4]
	0x03B3E6F8 ADD X1, X31, 0x4
	0x03B3E6FC LDR X8, [X8]
	0x03B3E700 MOV X0, X8
	0x03B3E704 BL 0x1C16E04
	0x03B3E708 ADRP X8, 0x61C000
	0x03B3E70C LDR X8, [X8 + 0x5E8]
	0x03B3E710 MOV X1, X0
	0x03B3E714 MOV X2, X31
	0x03B3E718 LDR X8, [X8]
	0x03B3E71C MOV X0, X8
	0x03B3E720 BL 0x321EFD0
	0x03B3E724 ADRP X8, 0x61C000
	0x03B3E728 LDR X8, [X8 + 0x5E0]
	0x03B3E72C ADRP X9, 0x61C000
	0x03B3E730 LDR X9, [X9 + 0x5F0]
	0x03B3E734 MOV X3, X0
	0x03B3E738 LDR X8, [X8]
	0x03B3E73C MOV X1, X20
	0x03B3E740 LDR X2, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A5000
	006 Move W8, [X21+2127]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x61D000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move X0, 0x61D000
	017 Move X0, [X0+1144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2127], W8
	021 Move X8, [X20+456]
	022 Compare X8, 0
	023 JumpIfEqual {51}
	024 Move X21, 0x61D000
	025 Move W8, [X8+24]
	026 Move X21, [X21+1144]
	027 Compare W8, 0
	028 JumpIfNotEqual {35}
	029 Move X0, [X20+392]
	030 Compare X0, 0
	031 JumpIfEqual {35}
	032 Move X2, [X21]
	033 Move X1, X19
	034 Call UnityEvent`1<Object>.Invoke, X0, X1
	035 Move X0, [X20+408]
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 Move X2, [X21]
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call UnityEvent`1<Object>.Invoke, X0, X1
	045 Return 
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E744 MOV X4, X31

ISIL:
	001 Return 

Method: System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E748 MOV X0, X8
	0x03B3E74C BL 0x32277C4
	0x03B3E750 ADRP X8, 0x5B5000
	0x03B3E754 LDR X8, [X8 + 0xA28]
	0x03B3E758 MOV X20, X0
	0x03B3E75C LDR X8, [X8]
	0x03B3E760 LDR W9, [X8 + 0xE0]
	0x03B3E764 CBNZ W9, 0x3B3E770
	0x03B3E768 MOV X0, X8
	0x03B3E76C BL 0x1C16DFC
	0x03B3E770 MOV X0, X20
	0x03B3E774 MOV X1, X19
	0x03B3E778 MOV X2, X31
	0x03B3E77C BL 0x3C06B0C
	0x03B3E780 LDR X8, [X31 + 0x18]
	0x03B3E784 STR X8, [X31 + 0x8]
	0x03B3E788 CBZ X19, 0x3B3E7C4
	0x03B3E78C ADD X10, X31, 0x8
	0x03B3E790 ADD X9, X19, 0x1EC
	0x03B3E794 ORR X10, X10, 0x7
	0x03B3E798 ANDS W31, W8, 0xFF
	0x03B3E79C CSEL X8, X9, X10, EQ
	0x03B3E7A0 LDR W8, [X8]
	0x03B3E7A4 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A5000
	006 Move W8, [X21+2128]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61D000
	014 Move X0, [X0+1144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2128], W8
	018 Move X0, [X20+416]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x61D000
	022 Move X8, [X8+1144]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E7A8 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Return 

Method: System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E7AC LDP X26, X25, [X31 + 0x20]
	0x03B3E7B0 STR W8, [X19 + 0x2BC]
	0x03B3E7B4 LDP X20, X19, [X31 + 0x50]
	0x03B3E7B8 LDR X30, [X31 + 0x10]
	0x03B3E7BC ADD X31, X31, 0x60
	0x03B3E7C0 RET
	0x03B3E7C4 BL 0x1C16F20
	0x03B3E7C8 LDR V0, [X0 + 0x1F0]
	0x03B3E7CC RET
	0x03B3E7D0 STR S0, [X0 + 0x1F0]
	0x03B3E7D4 RET
	0x03B3E7D8 LDR V0, [X0 + 0x1F4]
	0x03B3E7DC RET
	0x03B3E7E0 STR S0, [X0 + 0x1F4]
	0x03B3E7E4 RET
	0x03B3E7E8 LDR V0, [X0 + 0x1F8]
	0x03B3E7EC RET
	0x03B3E7F0 STR S0, [X0 + 0x1F8]
	0x03B3E7F4 RET
	0x03B3E7F8 LDR V0, [X0 + 0x1FC]
	0x03B3E7FC RET
	0x03B3E800 STR S0, [X0 + 0x1FC]
	0x03B3E804 RET
	0x03B3E808 LDRB W0, [X0 + 0x200]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A5000
	006 Move W8, [X21+2129]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61D000
	014 Move X0, [X0+1144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2129], W8
	018 Move X0, [X20+424]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x61D000
	022 Move X8, [X8+1144]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E80C RET

ISIL:
	001 Return 

Method: System.Void OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E810 AND W8, W1, 0x1
	0x03B3E814 STRB W8, [X0 + 0x200]
	0x03B3E818 RET
	0x03B3E81C LDRB W0, [X0 + 0x201]
	0x03B3E820 RET
	0x03B3E824 AND W8, W1, 0x1
	0x03B3E828 STRB W8, [X0 + 0x201]
	0x03B3E82C RET
	0x03B3E830 LDR V0, [X0 + 0x204]
	0x03B3E834 RET
	0x03B3E838 STR S0, [X0 + 0x204]
	0x03B3E83C RET
	0x03B3E840 LDR V0, [X0 + 0x208]
	0x03B3E844 RET
	0x03B3E848 STR S0, [X0 + 0x208]
	0x03B3E84C RET
	0x03B3E850 LDRB W0, [X0 + 0x20C]
	0x03B3E854 RET
	0x03B3E858 AND W8, W1, 0x1
	0x03B3E85C STRB W8, [X0 + 0x20C]
	0x03B3E860 RET
	0x03B3E864 LDRB W0, [X0 + 0x20D]
	0x03B3E868 RET
	0x03B3E86C AND W8, W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A5000
	006 Move W8, [X21+2130]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61D000
	014 Move X0, [X0+1144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2130], W8
	018 Move X0, [X20+432]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x61D000
	022 Move X8, [X8+1144]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void OnActivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E870 STRB W8, [X0 + 0x20D]
	0x03B3E874 RET
	0x03B3E878 LDR V0, [X0 + 0x210]
	0x03B3E87C RET
	0x03B3E880 STR S0, [X0 + 0x210]
	0x03B3E884 RET
	0x03B3E888 LDR V0, [X0 + 0x214]
	0x03B3E88C RET
	0x03B3E890 STR S0, [X0 + 0x214]
	0x03B3E894 RET
	0x03B3E898 LDRB W0, [X0 + 0x218]
	0x03B3E89C RET
	0x03B3E8A0 AND W8, W1, 0x1
	0x03B3E8A4 STRB W8, [X0 + 0x218]
	0x03B3E8A8 RET
	0x03B3E8AC LDRB W0, [X0 + 0x219]
	0x03B3E8B0 RET
	0x03B3E8B4 AND W8, W1, 0x1
	0x03B3E8B8 STRB W8, [X0 + 0x219]
	0x03B3E8BC RET
	0x03B3E8C0 LDR V0, [X0 + 0x21C]
	0x03B3E8C4 RET
	0x03B3E8C8 STR S0, [X0 + 0x21C]
	0x03B3E8CC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A5000
	006 Move W8, [X21+2131]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61D000
	014 Move X0, [X0+1144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2131], W8
	018 Move X0, [X20+440]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x61D000
	022 Move X8, [X8+1144]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void OnDeactivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E8D0 LDR V0, [X0 + 0x220]
	0x03B3E8D4 RET
	0x03B3E8D8 STR S0, [X0 + 0x220]
	0x03B3E8DC RET
	0x03B3E8E0 LDRB W0, [X0 + 0x224]
	0x03B3E8E4 RET
	0x03B3E8E8 AND W8, W1, 0x1
	0x03B3E8EC STRB W8, [X0 + 0x224]
	0x03B3E8F0 RET
	0x03B3E8F4 LDR V0, [X0 + 0x228]
	0x03B3E8F8 RET
	0x03B3E8FC STR S0, [X0 + 0x228]
	0x03B3E900 RET
	0x03B3E904 LDR X0, [X0 + 0x230]
	0x03B3E908 RET
	0x03B3E90C STR X1, [X0 + 0x230]
	0x03B3E910 RET
	0x03B3E914 LDR V0, [X0 + 0x238]
	0x03B3E918 RET
	0x03B3E91C STR S0, [X0 + 0x238]
	0x03B3E920 RET
	0x03B3E924 LDR V0, [X0 + 0x23C]
	0x03B3E928 RET
	0x03B3E92C STR S0, [X0 + 0x23C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A5000
	006 Move W8, [X21+2132]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61D000
	014 Move X0, [X0+1144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2132], W8
	018 Move X0, [X20+448]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x61D000
	022 Move X8, [X8+1144]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call UnityEvent`1<Object>.Invoke, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Single GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E930 RET
	0x03B3E934 LDRB W0, [X0 + 0x240]
	0x03B3E938 RET
	0x03B3E93C AND W8, W1, 0x1

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1464]
	003 Move X2, [X8+1472]
	004 CallNoReturn X3

Method: System.Void AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E940 STRB W8, [X0 + 0x240]
	0x03B3E944 RET
	0x03B3E948 LDRB W0, [X0 + 0x241]
	0x03B3E94C RET

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1544]
	003 Move X2, [X8+1552]
	004 CallNoReturn X3

Method: System.Void RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3E950 AND W8, W1, 0x1
	0x03B3E954 STRB W8, [X0 + 0x241]
	0x03B3E958 RET
	0x03B3E95C LDR W0, [X0 + 0x244]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1560]
	003 Move X2, [X8+1568]
	004 CallNoReturn X3

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> get_hoveringInteractors()

Disassembly:
	0x03B3E960 RET
	0x03B3E964 STR W1, [X0 + 0x244]

ISIL:
	001 Move X0, [X0+456]
	002 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor get_selectingInteractor()

Disassembly:
	0x03B3E968 RET
	0x03B3E96C LDR X0, [X0 + 0x248]
	0x03B3E970 RET
	0x03B3E974 STR X1, [X0 + 0x248]
	0x03B3E978 RET
	0x03B3E97C LDR X0, [X0 + 0x250]
	0x03B3E980 RET
	0x03B3E984 STR X1, [X0 + 0x250]
	0x03B3E988 RET
	0x03B3E98C LDRB W0, [X0 + 0x258]
	0x03B3E990 RET
	0x03B3E994 AND W8, W1, 0x1
	0x03B3E998 STRB W8, [X0 + 0x258]
	0x03B3E99C RET
	0x03B3E9A0 STR X30, [X31 - 0x20]!
	0x03B3E9A4 STP X20, X19, [X31 + 0x10]
	0x03B3E9A8 ADRP X20, 0x8A4000
	0x03B3E9AC LDRB W8, [X20 + 0x85A]
	0x03B3E9B0 MOV X19, X0
	0x03B3E9B4 TBNZ X8, 0x0, 0x3B3E9CC
	0x03B3E9B8 ADRP X0, 0x61C000
	0x03B3E9BC LDR X0, [X0 + 0x5F8]
	0x03B3E9C0 BL 0x1C16CF4
	0x03B3E9C4 MOVZ W8, 0x1
	0x03B3E9C8 STRB W8, [X20 + 0x85A]
	0x03B3E9CC LDR X0, [X19 + 0x260]
	0x03B3E9D0 CBZ X0, 0x3B3E9EC
	0x03B3E9D4 ADRP X8, 0x61C000
	0x03B3E9D8 LDR X8, [X8 + 0x5F8]
	0x03B3E9DC LDP X20, X19, [X31 + 0x10]
	0x03B3E9E0 LDR X1, [X8]
	0x03B3E9E4 LDR X30, [X31], #0x20
	0x03B3E9E8 B 0x28B9738
	0x03B3E9EC BL 0x1C16F20
	0x03B3E9F0 STR X30, [X31 - 0x20]!
	0x03B3E9F4 STP X20, X19, [X31 + 0x10]
	0x03B3E9F8 ADRP X20, 0x8A4000
	0x03B3E9FC LDRB W8, [X20 + 0x85B]
	0x03B3EA00 MOV X19, X0
	0x03B3EA04 TBNZ X8, 0x0, 0x3B3EA1C
	0x03B3EA08 ADRP X0, 0x61C000
	0x03B3EA0C LDR X0, [X0 + 0x5F8]
	0x03B3EA10 BL 0x1C16CF4
	0x03B3EA14 MOVZ W8, 0x1
	0x03B3EA18 STRB W8, [X20 + 0x85B]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8A5000
	005 Move W8, [X20+2133]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x61D000
	012 Move X0, [X0+368]
	013 Call 0x1C17CF4
	014 Move X0, 0x61D000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2133], W8
	019 Move X0, X19
	020 Call XRBaseInteractable.get_isSelected, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {43}
	025 Move X0, X19
	026 Call XRBaseInteractable.get_interactorsSelecting, X0
	027 Compare X0, 0
	028 JumpIfEqual {53}
	029 Move X8, 0x61D000
	030 Move X8, [X8+368]
	031 Move W1, W31
	032 Move X2, [X8]
	033 Call List`1<Object>.get_Item, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {44}
	036 Move X8, 0x61D000
	037 Move X8, [X8+872]
	038 Move X9, [X0]
	039 Move X8, [X8]
	040 Move W11, [X9+304]
	041 Move W10, [X8+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Move X9, [X9+200]
	049 Add X9, X9, X10
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Call 0x1C17F20

Method: System.Void set_selectingInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor value)

Disassembly:
	0x03B3EA1C LDR X0, [X19 + 0x268]
	0x03B3EA20 CBZ X0, 0x3B3EA3C
	0x03B3EA24 ADRP X8, 0x61C000
	0x03B3EA28 LDR X8, [X8 + 0x5F8]
	0x03B3EA2C LDP X20, X19, [X31 + 0x10]
	0x03B3EA30 LDR X1, [X8]
	0x03B3EA34 LDR X30, [X31], #0x20
	0x03B3EA38 B 0x28B9738
	0x03B3EA3C BL 0x1C16F20
	0x03B3EA40 LDRB W8, [X0 + 0x2B4]
	0x03B3EA44 CBZ W8, 0x3B3EA50
	0x03B3EA48 MOVZ W0, 0x1
	0x03B3EA4C RET
	0x03B3EA50 LDRB W8, [X0 + 0x2B5]
	0x03B3EA54 CMP W8, 0x0
	0x03B3EA58 CSET W0, NE
	0x03B3EA5C RET
	0x03B3EA60 AND W8, W1, 0x1
	0x03B3EA64 STRB W8, [X0 + 0x2B4]
	0x03B3EA68 STRB W8, [X0 + 0x2B5]
	0x03B3EA6C RET
	0x03B3EA70 SUB X31, X31, 0x90
	0x03B3EA74 STR X30, [X31 + 0x40]
	0x03B3EA78 STP X26, X25, [X31 + 0x50]
	0x03B3EA7C STP X24, X23, [X31 + 0x60]
	0x03B3EA80 STP X22, X21, [X31 + 0x70]
	0x03B3EA84 STP X20, X19, [X31 + 0x80]
	0x03B3EA88 ADRP X23, 0x8A4000
	0x03B3EA8C ADRP X20, 0x61C000
	0x03B3EA90 ADRP X22, 0x61C000
	0x03B3EA94 ADRP X21, 0x61C000
	0x03B3EA98 LDRB W8, [X23 + 0x85C]
	0x03B3EA9C LDR X20, [X20 + 0x600]
	0x03B3EAA0 LDR X22, [X22 + 0x608]
	0x03B3EAA4 LDR X21, [X21 + 0x610]
	0x03B3EAA8 MOV X19, X0
	0x03B3EAAC TBNZ X8, 0x0, 0x3B3EB84
	0x03B3EAB0 ADRP X0, 0x61C000
	0x03B3EAB4 LDR X0, [X0 + 0x608]
	0x03B3EAB8 BL 0x1C16CF4
	0x03B3EABC ADRP X0, 0x61C000
	0x03B3EAC0 LDR X0, [X0 + 0x5F8]
	0x03B3EAC4 BL 0x1C16CF4
	0x03B3EAC8 ADRP X0, 0x61C000
	0x03B3EACC LDR X0, [X0 + 0x618]
	0x03B3EAD0 BL 0x1C16CF4
	0x03B3EAD4 ADRP X0, 0x5B9000
	0x03B3EAD8 LDR X0, [X0 + 0x130]
	0x03B3EADC BL 0x1C16CF4
	0x03B3EAE0 ADRP X0, 0x5B5000
	0x03B3EAE4 LDR X0, [X0 + 0xA28]
	0x03B3EAE8 BL 0x1C16CF4
	0x03B3EAEC ADRP X0, 0x61C000
	0x03B3EAF0 LDR X0, [X0 + 0x620]
	0x03B3EAF4 BL 0x1C16CF4
	0x03B3EAF8 ADRP X0, 0x61C000
	0x03B3EAFC LDR X0, [X0 + 0x628]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8A5000
	006 Move W8, [X21+2134]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x61D000
	014 Move X0, [X0+1152]
	015 Call 0x1C17CF4
	016 Move X0, 0x61D000
	017 Move X0, [X0+1160]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2134], W8
	021 Move X0, X20
	022 Call XRBaseInteractable.get_isSelected, X0
	023 Move W21, W0
	024 Move X0, X20
	025 Call XRBaseInteractable.get_interactorsSelecting, X0
	026 Compare X0, 0
	027 JumpIfEqual {74}
	028 Move TEMP, X21
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {43}
	032 Move X8, 0x61D000
	033 Move X8, [X8+1160]
	034 Move X2, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move W1, W31
	038 Move X3, [X8]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call List`1<Object>.set_Item, X0, X1, X2
	042 Return 
	043 Move X9, 0x61D000
	044 Move X9, [X9+1152]
	045 Move W10, [X0+28]
	046 Move X8, [X0+16]
	047 Move X9, [X9]
	048 Add W10, W10, 1
	049 Move [X0+28], W10
	050 Compare X8, 0
	051 JumpIfEqual {74}
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move W11, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add W9, W10, 1
	056 Add X8, X8, X10
	057 Move [X0+24], W9
	058 Move [X8+32], X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Move X8, [X9+32]
	065 Move X1, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X8, [X8+192]
	069 Move X2, [X8+112]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call List`1<Object>.AddWithResize, X0, X1
	073 Return 
	074 Call 0x1C17F20

Method: System.Boolean IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3EB00 BL 0x1C16CF4
	0x03B3EB04 ADRP X0, 0x61C000
	0x03B3EB08 LDR X0, [X0 + 0x630]
	0x03B3EB0C BL 0x1C16CF4

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1496]
	003 Move X2, [X8+1504]
	004 CallNoReturn X3

Method: System.Boolean IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)

Disassembly:
	0x03B3EB10 ADRP X0, 0x61C000
	0x03B3EB14 LDR X0, [X0 + 0x638]
	0x03B3EB18 BL 0x1C16CF4
	0x03B3EB1C ADRP X0, 0x61C000

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+1512]
	003 Move X2, [X8+1520]
	004 CallNoReturn X3

Method: System.Void .ctor()

Disassembly:
	0x03B3EB20 LDR X0, [X0 + 0x640]
	0x03B3EB24 BL 0x1C16CF4
	0x03B3EB28 ADRP X0, 0x615000
	0x03B3EB2C LDR X0, [X0 + 0x898]
	0x03B3EB30 BL 0x1C16CF4
	0x03B3EB34 ADRP X0, 0x615000
	0x03B3EB38 LDR X0, [X0 + 0x8A0]
	0x03B3EB3C BL 0x1C16CF4
	0x03B3EB40 ADRP X0, 0x5B5000
	0x03B3EB44 LDR X0, [X0 + 0x598]
	0x03B3EB48 BL 0x1C16CF4
	0x03B3EB4C ADRP X0, 0x61C000
	0x03B3EB50 LDR X0, [X0 + 0x600]
	0x03B3EB54 BL 0x1C16CF4
	0x03B3EB58 ADRP X0, 0x61C000
	0x03B3EB5C LDR X0, [X0 + 0x648]
	0x03B3EB60 BL 0x1C16CF4
	0x03B3EB64 ADRP X0, 0x61C000
	0x03B3EB68 LDR X0, [X0 + 0x610]
	0x03B3EB6C BL 0x1C16CF4
	0x03B3EB70 ADRP X0, 0x61C000
	0x03B3EB74 LDR X0, [X0 + 0x650]
	0x03B3EB78 BL 0x1C16CF4
	0x03B3EB7C MOVZ W8, 0x1
	0x03B3EB80 STRB W8, [X23 + 0x85C]
	0x03B3EB84 MOV X0, X19
	0x03B3EB88 STP X31, X31, [X31 + 0x20]
	0x03B3EB8C STR X31, [X31 + 0x30]
	0x03B3EB90 BL 0x3B3A9E0
	0x03B3EB94 LDR X0, [X20]
	0x03B3EB98 BL 0x1C16F10
	0x03B3EB9C MOV X1, X31
	0x03B3EBA0 MOV X20, X0
	0x03B3EBA4 BL 0x3B8FDD4
	0x03B3EBA8 STR X20, [X19 + 0x360]
	0x03B3EBAC LDR X0, [X22]
	0x03B3EBB0 BL 0x1C16F10
	0x03B3EBB4 LDR X2, [X21]
	0x03B3EBB8 MOV X1, X19
	0x03B3EBBC MOV X3, X31
	0x03B3EBC0 MOV X21, X0
	0x03B3EBC4 BL 0x2A6BFE4
	0x03B3EBC8 CBZ X20, 0x3B3ECEC
	0x03B3EBCC ADRP X22, 0x5B9000
	0x03B3EBD0 LDR X22, [X22 + 0x130]
	0x03B3EBD4 MOV X0, X20
	0x03B3EBD8 MOV X1, X21
	0x03B3EBDC MOV X2, X31
	0x03B3EBE0 BL 0x3B8EEB8
	0x03B3EBE4 LDR W8, [X19 + 0x1EC]
	0x03B3EBE8 ADD X20, X19, 0x320
	0x03B3EBEC MOV X0, X19
	0x03B3EBF0 MOV X1, X20
	0x03B3EBF4 STR W8, [X19 + 0x2BC]
	0x03B3EBF8 LDR X2, [X22]
	0x03B3EBFC BL 0x21A4990
	0x03B3EC00 TBNZ X0, 0x0, 0x3B3EC34
	0x03B3EC04 ADRP X8, 0x5B5000
	0x03B3EC08 LDR X8, [X8 + 0xA28]
	0x03B3EC0C LDR X0, [X8]
	0x03B3EC10 LDR W8, [X0 + 0xE0]
	0x03B3EC14 CBNZ W8, 0x3B3EC1C
	0x03B3EC18 BL 0x1C16DFC
	0x03B3EC1C ADRP X8, 0x61C000
	0x03B3EC20 LDR X8, [X8 + 0x650]
	0x03B3EC24 MOV X1, X19
	0x03B3EC28 MOV X2, X31
	0x03B3EC2C LDR X0, [X8]
	0x03B3EC30 BL 0x3C065A4
	0x03B3EC34 LDR X0, [X19 + 0x320]
	0x03B3EC38 CBZ X0, 0x3B3ECEC
	0x03B3EC3C ADRP X8, 0x61C000
	0x03B3EC40 LDR X8, [X8 + 0x618]
	0x03B3EC44 LDR X2, [X19 + 0x348]
	0x03B3EC48 MOVZ W1, 0x1
	0x03B3EC4C LDR X3, [X8]
	0x03B3EC50 BL 0x21A46E8
	0x03B3EC54 LDR X0, [X19 + 0x348]
	0x03B3EC58 CBZ X0, 0x3B3ECEC
	0x03B3EC5C LDR W8, [X0 + 0x18]
	0x03B3EC60 SUBS W21, W8, 0x1
	0x03B3EC64 B.MI 0x3B3ECF0
	0x03B3EC68 ADRP X24, 0x615000
	0x03B3EC6C ADRP X25, 0x5B5000
	0x03B3EC70 ADRP X26, 0x61C000
	0x03B3EC74 LDR X24, [X24 + 0x8A0]
	0x03B3EC78 LDR X25, [X25 + 0x598]
	0x03B3EC7C LDR X26, [X26 + 0x640]
	0x03B3EC80 LDR X2, [X24]
	0x03B3EC84 MOV W1, W21
	0x03B3EC88 BL 0x301BCCC
	0x03B3EC8C CBZ X0, 0x3B3ECEC
	0x03B3EC90 MOV X1, X31
	0x03B3EC94 BL 0x3C8E82C
	0x03B3EC98 LDR X8, [X25]
	0x03B3EC9C LDR X22, [X20]
	0x03B3ECA0 MOV X23, X0
	0x03B3ECA4 LDR W9, [X8 + 0xE0]
	0x03B3ECA8 CBNZ W9, 0x3B3ECB4
	0x03B3ECAC MOV X0, X8
	0x03B3ECB0 BL 0x1C16DFC
	0x03B3ECB4 MOV X0, X23
	0x03B3ECB8 MOV X1, X22
	0x03B3ECBC MOV X2, X31
	0x03B3ECC0 BL 0x3C354F8
	0x03B3ECC4 TBZ X0, 0x0, 0x3B3ECDC
	0x03B3ECC8 LDR X0, [X19 + 0x348]
	0x03B3ECCC CBZ X0, 0x3B3ECEC
	0x03B3ECD0 LDR X2, [X26]
	0x03B3ECD4 MOV W1, W21
	0x03B3ECD8 BL 0x301DA48
	0x03B3ECDC SUBS W21, W21, 0x1
	0x03B3ECE0 B.MI 0x3B3ECF0
	0x03B3ECE4 LDR X0, [X19 + 0x348]
	0x03B3ECE8 CBNZ X0, 0x3B3EC80
	0x03B3ECEC BL 0x1C16F20
	0x03B3ECF0 MOV X0, X19
	0x03B3ECF4 MOV X1, X31
	0x03B3ECF8 BL 0x3C32E90
	0x03B3ECFC MOV X1, X0
	0x03B3ED00 MOV X0, X19
	0x03B3ED04 BL 0x3B3F1C8
	0x03B3ED08 LDR W8, [X19 + 0x244]
	0x03B3ED0C CMP W8, 0x1
	0x03B3ED10 B.NE 0x3B3ED3C
	0x03B3ED14 ADRP X8, 0x61C000
	0x03B3ED18 LDR X8, [X8 + 0x648]
	0x03B3ED1C MOV X0, X19
	0x03B3ED20 LDR X1, [X8]
	0x03B3ED24 BL 0x22AD2B4
	0x03B3ED28 CBZ X0, 0x3B3ECEC
	0x03B3ED2C MOVZ W1, 0x1
	0x03B3ED30 MOV X2, X31
	0x03B3ED34 BL 0x3C32410
	0x03B3ED38 B 0x3B3F100
	0x03B3ED3C LDR X0, [X19 + 0x260]
	0x03B3ED40 CBZ X0, 0x3B3ECEC
	0x03B3ED44 ADRP X22, 0x61C000
	0x03B3ED48 LDR X22, [X22 + 0x5F8]
	0x03B3ED4C LDR X1, [X22]
	0x03B3ED50 BL 0x28B9738
	0x03B3ED54 CMP W0, 0x1
	0x03B3ED58 B.LT 0x3B3EE34
	0x03B3ED5C LDR X0, [X19 + 0x248]
	0x03B3ED60 CBZ X0, 0x3B3ECEC
	0x03B3ED64 ADRP X8, 0x61C000
	0x03B3ED68 LDR X8, [X8 + 0x638]
	0x03B3ED6C LDR X1, [X8]
	0x03B3ED70 ADD X8, X31, 0x8
	0x03B3ED74 BL 0x301CB58
	0x03B3ED78 LDUR V0, [X31 + 0x8]
	0x03B3ED7C LDR X8, [X31 + 0x18]
	0x03B3ED80 ADRP X23, 0x61C000
	0x03B3ED84 LDR X23, [X23 + 0x628]
	0x03B3ED88 STR V0, [X31 + 0x2]
	0x03B3ED8C STR X8, [X31 + 0x30]
	0x03B3ED90 ADRP X24, 0x5B5000
	0x03B3ED94 LDR X24, [X24 + 0x598]
	0x03B3ED98 MOV W20, W31
	0x03B3ED9C LDR X1, [X23]
	0x03B3EDA0 ADD X0, X31, 0x20
	0x03B3EDA4 BL 0x2BC4350
	0x03B3EDA8 TBZ X0, 0x0, 0x3B3EEBC
	0x03B3EDAC LDR X0, [X24]
	0x03B3EDB0 LDR X21, [X31 + 0x30]
	0x03B3EDB4 LDR W8, [X0 + 0xE0]
	0x03B3EDB8 CBNZ W8, 0x3B3EDC0
	0x03B3EDBC BL 0x1C16DFC
	0x03B3EDC0 MOV X0, X21
	0x03B3EDC4 MOV X1, X31
	0x03B3EDC8 MOV X2, X31
	0x03B3EDCC BL 0x3C354F8
	0x03B3EDD0 TBZ X0, 0x0, 0x3B3ED9C
	0x03B3EDD4 LDR X3, [X19 + 0x260]
	0x03B3EDD8 ADD W25, W20, 0x1
	0x03B3EDDC MOV X0, X19
	0x03B3EDE0 MOV X1, X21
	0x03B3EDE4 MOV W2, W20
	0x03B3EDE8 BL 0x3B40770
	0x03B3EDEC MOV W20, W25
	0x03B3EDF0 B 0x3B3ED9C
	0x03B3EDF4 B 0x3B3EE00
	0x03B3EDF8 B 0x3B3EE00
	0x03B3EDFC B 0x3B3EE00
	0x03B3EE00 MOV X20, X0
	0x03B3EE04 CMP W1, 0x1
	0x03B3EE08 B.NE 0x3B3EF80
	0x03B3EE0C MOV X0, X20
	0x03B3EE10 BL 0x3EB1AD0
	0x03B3EE14 LDR X21, [X0]
	0x03B3EE18 BL 0x3EB1AE0
	0x03B3EE1C ADRP X8, 0x61C000
	0x03B3EE20 LDR X8, [X8 + 0x620]
	0x03B3EE24 ADD X0, X31, 0x20
	0x03B3EE28 LDR X1, [X8]
	0x03B3EE2C BL 0x2BC434C
	0x03B3EE30 CBNZ X21, 0x3B3F188
	0x03B3EE34 LDR X0, [X19 + 0x248]
	0x03B3EE38 CBZ X0, 0x3B3ECEC
	0x03B3EE3C ADRP X8, 0x61C000
	0x03B3EE40 LDR X8, [X8 + 0x638]
	0x03B3EE44 LDR X1, [X8]
	0x03B3EE48 ADD X8, X31, 0x8
	0x03B3EE4C BL 0x301CB58
	0x03B3EE50 LDUR V0, [X31 + 0x8]
	0x03B3EE54 LDR X8, [X31 + 0x18]
	0x03B3EE58 ADRP X21, 0x61C000
	0x03B3EE5C LDR X21, [X21 + 0x628]
	0x03B3EE60 STR V0, [X31 + 0x2]
	0x03B3EE64 STR X8, [X31 + 0x30]
	0x03B3EE68 ADRP X23, 0x5B5000
	0x03B3EE6C LDR X23, [X23 + 0x598]
	0x03B3EE70 LDR X1, [X21]
	0x03B3EE74 ADD X0, X31, 0x20
	0x03B3EE78 BL 0x2BC4350
	0x03B3EE7C TBZ X0, 0x0, 0x3B3EEBC
	0x03B3EE80 LDR X0, [X23]
	0x03B3EE84 LDR X20, [X31 + 0x30]
	0x03B3EE88 LDR W8, [X0 + 0xE0]
	0x03B3EE8C CBNZ W8, 0x3B3EE94
	0x03B3EE90 BL 0x1C16DFC
	0x03B3EE94 MOV X0, X20
	0x03B3EE98 MOV X1, X31
	0x03B3EE9C MOV X2, X31
	0x03B3EEA0 BL 0x3C354F8
	0x03B3EEA4 TBZ X0, 0x0, 0x3B3EE70
	0x03B3EEA8 LDR X2, [X19 + 0x260]
	0x03B3EEAC MOV X0, X19
	0x03B3EEB0 MOV X1, X20
	0x03B3EEB4 BL 0x3B403C8
	0x03B3EEB8 B 0x3B3EE70
	0x03B3EEBC ADRP X8, 0x61C000
	0x03B3EEC0 LDR X8, [X8 + 0x620]
	0x03B3EEC4 ADD X0, X31, 0x20
	0x03B3EEC8 LDR X1, [X8]
	0x03B3EECC BL 0x2BC434C
	0x03B3EED0 LDR X0, [X19 + 0x268]
	0x03B3EED4 CBZ X0, 0x3B3ECEC
	0x03B3EED8 LDR X1, [X22]
	0x03B3EEDC BL 0x28B9738
	0x03B3EEE0 CMP W0, 0x1
	0x03B3EEE4 B.LT 0x3B3F05C
	0x03B3EEE8 LDR X0, [X19 + 0x250]
	0x03B3EEEC CBZ X0, 0x3B3ECEC
	0x03B3EEF0 ADRP X8, 0x61C000
	0x03B3EEF4 LDR X8, [X8 + 0x638]
	0x03B3EEF8 LDR X1, [X8]
	0x03B3EEFC ADD X8, X31, 0x8
	0x03B3EF00 BL 0x301CB58
	0x03B3EF04 LDUR V0, [X31 + 0x8]
	0x03B3EF08 LDR X8, [X31 + 0x18]
	0x03B3EF0C ADRP X22, 0x61C000
	0x03B3EF10 LDR X22, [X22 + 0x628]
	0x03B3EF14 STR V0, [X31 + 0x2]
	0x03B3EF18 STR X8, [X31 + 0x30]
	0x03B3EF1C ADRP X23, 0x5B5000
	0x03B3EF20 LDR X23, [X23 + 0x598]
	0x03B3EF24 MOV W20, W31
	0x03B3EF28 LDR X1, [X22]
	0x03B3EF2C ADD X0, X31, 0x20
	0x03B3EF30 BL 0x2BC4350
	0x03B3EF34 TBZ X0, 0x0, 0x3B3F0E4
	0x03B3EF38 LDR X0, [X23]
	0x03B3EF3C LDR X21, [X31 + 0x30]
	0x03B3EF40 LDR W8, [X0 + 0xE0]
	0x03B3EF44 CBNZ W8, 0x3B3EF4C
	0x03B3EF48 BL 0x1C16DFC
	0x03B3EF4C MOV X0, X21
	0x03B3EF50 MOV X1, X31
	0x03B3EF54 MOV X2, X31
	0x03B3EF58 BL 0x3C354F8
	0x03B3EF5C TBZ X0, 0x0, 0x3B3EF28
	0x03B3EF60 LDR X3, [X19 + 0x268]
	0x03B3EF64 ADD W24, W20, 0x1
	0x03B3EF68 MOV X0, X19
	0x03B3EF6C MOV X1, X21
	0x03B3EF70 MOV W2, W20
	0x03B3EF74 BL 0x3B40770
	0x03B3EF78 MOV W20, W24
	0x03B3EF7C B 0x3B3EF28
	0x03B3EF80 MOV X21, X31
	0x03B3EF84 B 0x3B3EF8C
	0x03B3EF88 MOV X20, X0
	0x03B3EF8C ADRP X8, 0x61C000
	0x03B3EF90 LDR X8, [X8 + 0x620]
	0x03B3EF94 LDR X1, [X8]
	0x03B3EF98 ADD X0, X31, 0x20
	0x03B3EF9C BL 0x2BC434C
	0x03B3EFA0 CBZ X21, 0x3B3F1B4
	0x03B3EFA4 MOV X0, X21
	0x03B3EFA8 BL 0x1C16F18
	0x03B3EFAC B 0x3B3F028
	0x03B3EFB0 B 0x3B3EFC0
	0x03B3EFB4 B 0x3B3EFC0
	0x03B3EFB8 B 0x3B3F028
	0x03B3EFBC B 0x3B3EFC0
	0x03B3EFC0 MOV X20, X0
	0x03B3EFC4 CMP W1, 0x1
	0x03B3EFC8 B.NE 0x3B3EFF8
	0x03B3EFCC MOV X0, X20
	0x03B3EFD0 BL 0x3EB1AD0
	0x03B3EFD4 LDR X21, [X0]
	0x03B3EFD8 BL 0x3EB1AE0
	0x03B3EFDC ADRP X8, 0x61C000
	0x03B3EFE0 LDR X8, [X8 + 0x620]
	0x03B3EFE4 ADD X0, X31, 0x20
	0x03B3EFE8 LDR X1, [X8]
	0x03B3EFEC BL 0x2BC434C
	0x03B3EFF0 CBZ X21, 0x3B3EED0
	0x03B3EFF4 B 0x3B3F188
	0x03B3EFF8 MOV X21, X31
	0x03B3EFFC B 0x3B3F004
	0x03B3F000 MOV X20, X0
	0x03B3F004 ADRP X8, 0x61B000
	0x03B3F008 LDR X8, [X8 + 0x620]
	0x03B3F00C LDR X1, [X8]
	0x03B3F010 ADD X0, X31, 0x20
	0x03B3F014 BL 0x2BC434C
	0x03B3F018 CBZ X21, 0x3B3F1B4
	0x03B3F01C MOV X0, X21
	0x03B3F020 BL 0x1C16F18
	0x03B3F024 B 0x3B3F028
	0x03B3F028 MOV X20, X0
	0x03B3F02C CMP W1, 0x1
	0x03B3F030 B.NE 0x3B3F11C
	0x03B3F034 MOV X0, X20
	0x03B3F038 BL 0x3EB1AD0
	0x03B3F03C LDR X21, [X0]
	0x03B3F040 BL 0x3EB1AE0
	0x03B3F044 ADRP X8, 0x61B000
	0x03B3F048 LDR X8, [X8 + 0x620]
	0x03B3F04C ADD X0, X31, 0x20
	0x03B3F050 LDR X1, [X8]
	0x03B3F054 BL 0x2BC434C
	0x03B3F058 CBNZ X21, 0x3B3F188
	0x03B3F05C LDR X0, [X19 + 0x250]
	0x03B3F060 CBZ X0, 0x3B3ECEC
	0x03B3F064 ADRP X8, 0x61B000
	0x03B3F068 LDR X8, [X8 + 0x638]
	0x03B3F06C LDR X1, [X8]
	0x03B3F070 ADD X8, X31, 0x8
	0x03B3F074 BL 0x301CB58
	0x03B3F078 LDUR V0, [X31 + 0x8]
	0x03B3F07C LDR X8, [X31 + 0x18]
	0x03B3F080 ADRP X21, 0x61B000
	0x03B3F084 LDR X21, [X21 + 0x628]
	0x03B3F088 STR V0, [X31 + 0x2]
	0x03B3F08C STR X8, [X31 + 0x30]
	0x03B3F090 ADRP X22, 0x5B4000
	0x03B3F094 LDR X22, [X22 + 0x598]
	0x03B3F098 LDR X1, [X21]
	0x03B3F09C ADD X0, X31, 0x20
	0x03B3F0A0 BL 0x2BC4350
	0x03B3F0A4 TBZ X0, 0x0, 0x3B3F0E4
	0x03B3F0A8 LDR X0, [X22]
	0x03B3F0AC LDR X20, [X31 + 0x30]
	0x03B3F0B0 LDR W8, [X0 + 0xE0]
	0x03B3F0B4 CBNZ W8, 0x3B3F0BC
	0x03B3F0B8 BL 0x1C16DFC
	0x03B3F0BC MOV X0, X20
	0x03B3F0C0 MOV X1, X31
	0x03B3F0C4 MOV X2, X31
	0x03B3F0C8 BL 0x3C354F8
	0x03B3F0CC TBZ X0, 0x0, 0x3B3F098
	0x03B3F0D0 LDR X2, [X19 + 0x268]
	0x03B3F0D4 MOV X0, X19
	0x03B3F0D8 MOV X1, X20
	0x03B3F0DC BL 0x3B403C8
	0x03B3F0E0 B 0x3B3F098
	0x03B3F0E4 ADRP X8, 0x61B000
	0x03B3F0E8 LDR X8, [X8 + 0x620]
	0x03B3F0EC ADD X0, X31, 0x20
	0x03B3F0F0 LDR X1, [X8]
	0x03B3F0F4 BL 0x2BC434C
	0x03B3F0F8 MOV X0, X19
	0x03B3F0FC BL 0x3B3F278
	0x03B3F100 LDP X20, X19, [X31 + 0x80]
	0x03B3F104 LDP X22, X21, [X31 + 0x70]
	0x03B3F108 LDP X24, X23, [X31 + 0x60]
	0x03B3F10C LDP X26, X25, [X31 + 0x50]
	0x03B3F110 LDR X30, [X31 + 0x40]
	0x03B3F114 ADD X31, X31, 0x90
	0x03B3F118 RET
	0x03B3F11C MOV X21, X31
	0x03B3F120 B 0x3B3F128
	0x03B3F124 MOV X20, X0
	0x03B3F128 ADRP X8, 0x61B000
	0x03B3F12C LDR X8, [X8 + 0x620]
	0x03B3F130 LDR X1, [X8]
	0x03B3F134 ADD X0, X31, 0x20
	0x03B3F138 BL 0x2BC434C
	0x03B3F13C CBZ X21, 0x3B3F1B4
	0x03B3F140 MOV X0, X21
	0x03B3F144 BL 0x1C16F18
	0x03B3F148 B 0x3B3F154
	0x03B3F14C B 0x3B3F154
	0x03B3F150 B 0x3B3F154
	0x03B3F154 MOV X20, X0
	0x03B3F158 CMP W1, 0x1
	0x03B3F15C B.NE 0x3B3F190
	0x03B3F160 MOV X0, X20
	0x03B3F164 BL 0x3EB1AD0
	0x03B3F168 LDR X21, [X0]
	0x03B3F16C BL 0x3EB1AE0
	0x03B3F170 ADRP X8, 0x61B000
	0x03B3F174 LDR X8, [X8 + 0x620]
	0x03B3F178 ADD X0, X31, 0x20
	0x03B3F17C LDR X1, [X8]
	0x03B3F180 BL 0x2BC434C
	0x03B3F184 CBZ X21, 0x3B3F0F8
	0x03B3F188 MOV X0, X21
	0x03B3F18C BL 0x1C16F18
	0x03B3F190 MOV X21, X31
	0x03B3F194 B 0x3B3F19C
	0x03B3F198 MOV X20, X0
	0x03B3F19C ADRP X8, 0x61B000
	0x03B3F1A0 LDR X8, [X8 + 0x620]
	0x03B3F1A4 LDR X1, [X8]
	0x03B3F1A8 ADD X0, X31, 0x20
	0x03B3F1AC BL 0x2BC434C
	0x03B3F1B0 CBNZ X21, 0x3B3F1BC
	0x03B3F1B4 MOV X0, X20
	0x03B3F1B8 BL 0x1D2C690
	0x03B3F1BC MOV X0, X21
	0x03B3F1C0 BL 0x1C16F18
	0x03B3F1C4 BL 0x1990590
	0x03B3F1C8 STR X30, [X31 - 0x20]!
	0x03B3F1CC STP X20, X19, [X31 + 0x10]
	0x03B3F1D0 LDR W8, [X0 + 0x244]
	0x03B3F1D4 MOV X19, X0
	0x03B3F1D8 MOV X20, X1
	0x03B3F1DC CBZ W8, 0x3B3F1F4
	0x03B3F1E0 LDR X0, [X19 + 0x320]
	0x03B3F1E4 CBZ X0, 0x3B3F254
	0x03B3F1E8 MOV X1, X31
	0x03B3F1EC BL 0x3C8EDF0
	0x03B3F1F0 B 0x3B3F204
	0x03B3F1F4 CBZ X20, 0x3B3F254
	0x03B3F1F8 MOV X0, X20
	0x03B3F1FC MOV X1, X31
	0x03B3F200 BL 0x3C3F58C
	0x03B3F204 STR S0, [X19 + 0x28C]
	0x03B3F208 STR S1, [X19 + 0x290]
	0x03B3F20C STR S2, [X19 + 0x294]
	0x03B3F210 CBZ X20, 0x3B3F254
	0x03B3F214 MOV X0, X20
	0x03B3F218 MOV X1, X31
	0x03B3F21C BL 0x3C3DEB4
	0x03B3F220 MOV X0, X20
	0x03B3F224 MOV X1, X31
	0x03B3F228 STR S0, [X19 + 0x298]
	0x03B3F22C STR S1, [X19 + 0x29C]
	0x03B3F230 STR S2, [X19 + 0x2A0]
	0x03B3F234 STR S3, [X19 + 0x2A4]
	0x03B3F238 BL 0x3C3FBAC
	0x03B3F23C STR S0, [X19 + 0x2A8]
	0x03B3F240 STR S1, [X19 + 0x2AC]
	0x03B3F244 STR S2, [X19 + 0x2B0]
	0x03B3F248 LDP X20, X19, [X31 + 0x10]
	0x03B3F24C LDR X30, [X31], #0x20
	0x03B3F250 RET
	0x03B3F254 BL 0x1C16F20
	0x03B3F258 LDR X3, [X0 + 0x260]
	0x03B3F25C B 0x3B40770
	0x03B3F260 LDR X2, [X0 + 0x260]
	0x03B3F264 B 0x3B403C8
	0x03B3F268 LDR X3, [X0 + 0x268]
	0x03B3F26C B 0x3B40770
	0x03B3F270 LDR X2, [X0 + 0x268]
	0x03B3F274 B 0x3B403C8
	0x03B3F278 STP X30, X19, [X31 - 0x10]!
	0x03B3F27C MOV X19, X0
	0x03B3F280 LDR X0, [X0 + 0x260]
	0x03B3F284 CBZ X0, 0x3B3F2AC
	0x03B3F288 LDR X8, [X0]
	0x03B3F28C LDP X9, X1, [X8 + 0x1B8]
	0x03B3F290 BLR X9
	0x03B3F294 LDR X0, [X19 + 0x268]
	0x03B3F298 CBZ X0, 0x3B3F2AC
	0x03B3F29C LDR X8, [X0]
	0x03B3F2A0 LDP X2, X1, [X8 + 0x1B8]
	0x03B3F2A4 LDP X30, X19, [X31], #0x10
	0x03B3F2A8 BR X2
	0x03B3F2AC BL 0x1C16F20
	0x03B3F2B0 STP X30, X19, [X31 - 0x10]!
	0x03B3F2B4 LDR X1, [X0 + 0x260]
	0x03B3F2B8 MOV X19, X0
	0x03B3F2BC BL 0x3B40564
	0x03B3F2C0 LDR X1, [X19 + 0x268]
	0x03B3F2C4 MOV X0, X19
	0x03B3F2C8 LDP X30, X19, [X31], #0x10
	0x03B3F2CC B 0x3B40564
	0x03B3F2D0 LDR X1, [X0 + 0x260]
	0x03B3F2D4 B 0x3B40564
	0x03B3F2D8 LDR X1, [X0 + 0x268]
	0x03B3F2DC B 0x3B40564
	0x03B3F2E0 STP X30, X21, [X31 - 0x20]!
	0x03B3F2E4 STP X20, X19, [X31 + 0x10]
	0x03B3F2E8 ADRP X21, 0x8A3000
	0x03B3F2EC LDRB W8, [X21 + 0x85D]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0x8A5000
	014 Move X21, 0x5E2000
	015 Move X20, 0x5E2000
	016 Move X24, 0x61D000
	017 Move X23, 0x61D000
	018 Move X29, 0x61D000
	019 Move X28, 0x61D000
	020 Move X27, 0x61D000
	021 Move X26, 0x61D000
	022 Move X22, 0x5B8000
	023 Move X21, [X21+3144]
	024 Move X20, [X20+3152]
	025 Move X24, [X24+1168]
	026 Move X23, [X23+1176]
	027 Move X29, [X29+1184]
	028 Move X28, [X28+1192]
	029 Move X27, [X27+1200]
	030 Move X26, [X26+1208]
	031 Move W8, [X25+2135]
	032 Move X22, [X22+2128]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {160}
	038 Move X0, 0x61D000
	039 Move X0, [X0+1216]
	040 Call 0x1C17CF4
	041 Move X0, 0x61D000
	042 Move X0, [X0+1224]
	043 Call 0x1C17CF4
	044 Move X0, 0x61D000
	045 Move X0, [X0+1232]
	046 Call 0x1C17CF4
	047 Move X0, 0x61D000
	048 Move X0, [X0+1240]
	049 Call 0x1C17CF4
	050 Move X0, 0x61D000
	051 Move X0, [X0+1248]
	052 Call 0x1C17CF4
	053 Move X0, 0x61D000
	054 Move X0, [X0+1256]
	055 Call 0x1C17CF4
	056 Move X0, 0x61D000
	057 Move X0, [X0+1264]
	058 Call 0x1C17CF4
	059 Move X0, 0x61D000
	060 Move X0, [X0+1272]
	061 Call 0x1C17CF4
	062 Move X0, 0x61D000
	063 Move X0, [X0+1280]
	064 Call 0x1C17CF4
	065 Move X0, 0x61D000
	066 Move X0, [X0+1288]
	067 Call 0x1C17CF4
	068 Move X0, 0x61D000
	069 Move X0, [X0+1296]
	070 Call 0x1C17CF4
	071 Move X0, 0x61D000
	072 Move X0, [X0+1304]
	073 Call 0x1C17CF4
	074 Move X0, 0x61D000
	075 Move X0, [X0+1312]
	076 Call 0x1C17CF4
	077 Move X0, 0x61D000
	078 Move X0, [X0+1320]
	079 Call 0x1C17CF4
	080 Move X0, 0x61D000
	081 Move X0, [X0+1328]
	082 Call 0x1C17CF4
	083 Move X0, 0x61D000
	084 Move X0, [X0+1336]
	085 Call 0x1C17CF4
	086 Move X0, 0x61D000
	087 Move X0, [X0+1200]
	088 Call 0x1C17CF4
	089 Move X0, 0x61D000
	090 Move X0, [X0+1208]
	091 Call 0x1C17CF4
	092 Move X0, 0x61D000
	093 Move X0, [X0+1344]
	094 Call 0x1C17CF4
	095 Move X0, 0x61D000
	096 Move X0, [X0+1352]
	097 Call 0x1C17CF4
	098 Move X0, 0x61D000
	099 Move X0, [X0+1360]
	100 Call 0x1C17CF4
	101 Move X0, 0x61D000
	102 Move X0, [X0+1368]
	103 Call 0x1C17CF4
	104 Move X0, 0x61D000
	105 Move X0, [X0+1376]
	106 Call 0x1C17CF4
	107 Move X0, 0x61D000
	108 Move X0, [X0+1384]
	109 Call 0x1C17CF4
	110 Move X0, 0x61D000
	111 Move X0, [X0+1392]
	112 Call 0x1C17CF4
	113 Move X0, 0x61D000
	114 Move X0, [X0+1400]
	115 Call 0x1C17CF4
	116 Move X0, 0x61D000
	117 Move X0, [X0+1168]
	118 Call 0x1C17CF4
	119 Move X0, 0x61D000
	120 Move X0, [X0+1176]
	121 Call 0x1C17CF4
	122 Move X0, 0x5E2000
	123 Move X0, [X0+3152]
	124 Call 0x1C17CF4
	125 Move X0, 0x5B8000
	126 Move X0, [X0+2136]
	127 Call 0x1C17CF4
	128 Move X0, 0x61D000
	129 Move X0, [X0+1408]
	130 Call 0x1C17CF4
	131 Move X0, 0x5E2000
	132 Move X0, [X0+3144]
	133 Call 0x1C17CF4
	134 Move X0, 0x5B8000
	135 Move X0, [X0+2128]
	136 Call 0x1C17CF4
	137 Move X0, 0x61D000
	138 Move X0, [X0+1416]
	139 Call 0x1C17CF4
	140 Move X0, 0x61D000
	141 Move X0, [X0+1184]
	142 Call 0x1C17CF4
	143 Move X0, 0x61D000
	144 Move X0, [X0+1192]
	145 Call 0x1C17CF4
	146 Move X0, 0x61D000
	147 Move X0, [X0+1424]
	148 Call 0x1C17CF4
	149 Move X0, 0x61D000
	150 Move X0, [X0+1432]
	151 Call 0x1C17CF4
	152 Move X0, 0x61D000
	153 Move X0, [X0+1440]
	154 Call 0x1C17CF4
	155 Move X0, 0x61D000
	156 Move X0, [X0+1448]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X25+2135], W8
	160 Move X0, [X21]
	161 Call 0x1C17F10
	162 Move X1, [X20]
	163 Move X20, X0
	164 Call List`1<Object>..ctor, X0
	165 Move TEMP, 0
	166 Not TEMP
	167 Move W0, TEMP
	168 Move X1, X31
	169 Move [X19+64], X20
	170 Call LayerMask.op_Implicit, X0
	171 Move [X19+72], W0
	172 Move W0, 1
	173 Move X1, X31
	174 Move W20, 1
	175 Call InteractionLayerMask.op_Implicit, X0
	176 Move W8, 0x3F000000
	177 Move W9, 0x40400000
	178 Move [X19+76], X0
	179 Move [X19+84], W20
	180 Move [X19+92], W20
	181 Move [X19+108], W8
	182 Move [X19+116], W9
	183 Move X0, [X24]
	184 Call 0x1C17F10
	185 Move X1, X31
	186 Move X20, X0
	187 Call HoverEnterEvent..ctor, X0
	188 Move [X19+128], X20
	189 Move X0, [X23]
	190 Call 0x1C17F10
	191 Move X1, X31
	192 Move X20, X0
	193 Call HoverExitEvent..ctor, X0
	194 Move [X19+136], X20
	195 Move X0, [X24]
	196 Call 0x1C17F10
	197 Move X1, X31
	198 Move X20, X0
	199 Call HoverEnterEvent..ctor, X0
	200 Move [X19+144], X20
	201 Move X0, [X23]
	202 Call 0x1C17F10
	203 Move X1, X31
	204 Move X20, X0
	205 Call HoverExitEvent..ctor, X0
	206 Move [X19+152], X20
	207 Move X0, [X29]
	208 Call 0x1C17F10
	209 Move X1, X31
	210 Move X20, X0
	211 Call SelectEnterEvent..ctor, X0
	212 Move [X19+160], X20
	213 Move X0, [X28]
	214 Call 0x1C17F10
	215 Move X1, X31
	216 Move X20, X0
	217 Call SelectExitEvent..ctor, X0
	218 Move [X19+168], X20
	219 Move X0, [X29]
	220 Call 0x1C17F10
	221 Move X1, X31
	222 Move X20, X0
	223 Call SelectEnterEvent..ctor, X0
	224 Move [X19+176], X20
	225 Move X0, [X28]
	226 Call 0x1C17F10
	227 Move X1, X31
	228 Move X20, X0
	229 Call SelectExitEvent..ctor, X0
	230 Move [X19+184], X20
	231 Move X0, [X27]
	232 Call 0x1C17F10
	233 Move X1, X31
	234 Move X20, X0
	235 Call FocusEnterEvent..ctor, X0
	236 Move [X19+192], X20
	237 Move X0, [X26]
	238 Call 0x1C17F10
	239 Move X1, X31
	240 Move X20, X0
	241 Call FocusExitEvent..ctor, X0
	242 Move [X19+200], X20
	243 Move X0, [X27]
	244 Call 0x1C17F10
	245 Move X1, X31
	246 Move X20, X0
	247 Call FocusEnterEvent..ctor, X0
	248 Move [X19+208], X20
	249 Move X0, [X26]
	250 Call 0x1C17F10
	251 Move X1, X31
	252 Move X20, X0
	253 Call FocusExitEvent..ctor, X0
	254 Move [X19+216], X20
	255 Move X8, 0x61D000
	256 Move X8, [X8+1216]
	257 Move X0, [X8]
	258 Call 0x1C17F10
	259 Move X1, X31
	260 Move X20, X0
	261 Call ActivateEvent..ctor, X0
	262 Move [X19+224], X20
	263 Move X8, 0x61D000
	264 Move X8, [X8+1240]
	265 Move X0, [X8]
	266 Call 0x1C17F10
	267 Move X1, X31
	268 Move X20, X0
	269 Call DeactivateEvent..ctor, X0
	270 Move [X19+232], X20
	271 Move X8, 0x61D000
	272 Move X8, [X8+1376]
	273 Move X0, [X8]
	274 Call 0x1C17F10
	275 Move X8, 0x61D000
	276 Move X8, [X8+1360]
	277 Move W1, W31
	278 Move X20, X0
	279 Move X2, [X8]
	280 Call 0x2D58B9C, X0, X1
	281 Move [X19+240], X20
	282 Move X8, 0x61D000
	283 Move X8, [X8+1392]
	284 Move X0, [X8]
	285 Call 0x1C17F10
	286 Move X8, 0x61D000
	287 Move X8, [X8+1368]
	288 Move W1, W31
	289 Move X20, X0
	290 Move X2, [X8]
	291 Call 0x2D58B9C, X0, X1
	292 Move [X19+248], X20
	293 Move X8, 0x61D000
	294 Move X8, [X8+1384]
	295 Move X0, [X8]
	296 Call 0x1C17F10
	297 Move X8, 0x61D000
	298 Move X8, [X8+1352]
	299 Move W1, W31
	300 Move X20, X0
	301 Move X2, [X8]
	302 Call 0x2D58B9C, X0, X1
	303 Move [X19+264], X20
	304 Move X0, [X22]
	305 Call 0x1C17F10
	306 Move X24, 0x5B8000
	307 Move X24, [X24+2136]
	308 Move X20, X0
	309 Move X1, [X24]
	310 Call List`1<Object>..ctor, X0
	311 Move [X19+280], X20
	312 Move X8, 0x61D000
	313 Move X8, [X8+1328]
	314 Move X0, [X8]
	315 Call 0x1C17F10
	316 Move X8, 0x61D000
	317 Move X8, [X8+1312]
	318 Move X20, X0
	319 Move X1, [X8]
	320 Call 0x2D119CC, X0
	321 Compare X20, 0
	322 JumpIfEqual {521}
	323 Move X8, 0x61D000
	324 Move X8, [X8+1432]
	325 Move X21, 0x61C000
	326 Move X23, 0x61C000
	327 Move X0, X20
	328 Move X2, [X8]
	329 Move X21, [X21+1320]
	330 Move X23, [X23+1304]
	331 Move W1, W31
	332 Call 0x25E99B0, X0, X1
	333 Move [X19+288], X20
	334 Move X0, [X22]
	335 Call 0x1C17F10
	336 Move X1, [X24]
	337 Move X20, X0
	338 Call List`1<Object>..ctor, X0
	339 Move [X19+296], X20
	340 Move X0, [X21]
	341 Call 0x1C17F10
	342 Move X1, [X23]
	343 Move X20, X0
	344 Call 0x2D119CC, X0
	345 Compare X20, 0
	346 JumpIfEqual {521}
	347 Move X8, 0x61C000
	348 Move X8, [X8+1440]
	349 Move X21, 0x61C000
	350 Move X23, 0x61C000
	351 Move X0, X20
	352 Move X2, [X8]
	353 Move X21, [X21+1336]
	354 Move X23, [X23+1296]
	355 Move W1, W31
	356 Call 0x25E99B0, X0, X1
	357 Move [X19+304], X20
	358 Move X0, [X22]
	359 Call 0x1C17F10
	360 Move X1, [X24]
	361 Move X20, X0
	362 Call List`1<Object>..ctor, X0
	363 Move [X19+312], X20
	364 Move X0, [X21]
	365 Call 0x1C17F10
	366 Move X1, [X23]
	367 Move X20, X0
	368 Call 0x2D119CC, X0
	369 Compare X20, 0
	370 JumpIfEqual {521}
	371 Move X8, 0x61C000
	372 Move X8, [X8+1424]
	373 Move X21, 0x61C000
	374 Move X22, 0x61C000
	375 Move X24, 0x61C000
	376 Move X25, 0x61C000
	377 Move X29, 0x61C000
	378 Move X28, 0x61C000
	379 Move X27, 0x61C000
	380 Move X26, 0x61C000
	381 Move X21, [X21+1232]
	382 Move X22, [X22+1224]
	383 Move X24, [X24+1280]
	384 Move X25, [X25+1256]
	385 Move X29, [X29+1272]
	386 Move X28, [X28+1248]
	387 Move X27, [X27+1400]
	388 Move X26, [X26+1344]
	389 Move X2, [X8]
	390 Move X23, 0x61C000
	391 Move X23, [X23+1448]
	392 Move X0, X20
	393 Move W1, W31
	394 Call 0x25E99B0, X0, X1
	395 Move [X19+320], X20
	396 Move X0, [X21]
	397 Call 0x1C17F10
	398 Move X4, [X22]
	399 Move S0, W31
	400 Move W1, 1
	401 Move X2, X31
	402 Move W3, W31
	403 Move X20, X0
	404 Call BindableVariable`1<Single>..ctor, X0, V0, X1, X2, X3
	405 Move [X19+328], X20
	406 Move X0, [X24]
	407 Call 0x1C17F10
	408 Move X1, [X25]
	409 Move X20, X0
	410 Call Dictionary`2<Object, Pose>..ctor, X0
	411 Move [X19+336], X20
	412 Move X0, [X24]
	413 Call 0x1C17F10
	414 Move X1, [X25]
	415 Move X20, X0
	416 Call Dictionary`2<Object, Pose>..ctor, X0
	417 Move [X19+344], X20
	418 Move X0, [X29]
	419 Call 0x1C17F10
	420 Move X1, [X28]
	421 Move X20, X0
	422 Call Dictionary`2<Object, Object>..ctor, X0
	423 Move [X19+352], X20
	424 Move X0, [X27]
	425 Call 0x1C17F10
	426 Move X2, [X26]
	427 Move W1, W31
	428 Move X20, X0
	429 Call 0x2D58B9C, X0, X1
	430 Move [X19+360], X20
	431 Move X8, 0x61C000
	432 Move X8, [X8+1288]
	433 Move X0, [X8]
	434 Call 0x1C17F10
	435 Move X8, 0x61C000
	436 Move X8, [X8+1264]
	437 Move X20, X0
	438 Move X1, [X8]
	439 Call Dictionary`2<Object, Single>..ctor, X0
	440 Move [X19+368], X20
	441 Move X0, [X23]
	442 Call 0x1C17F10
	443 Move X1, X31
	444 Move X20, X0
	445 Call XRInteractableEvent..ctor, X0
	446 Move [X19+384], X20
	447 Move X0, [X23]
	448 Call 0x1C17F10
	449 Move X1, X31
	450 Move X20, X0
	451 Call XRInteractableEvent..ctor, X0
	452 Move [X19+392], X20
	453 Move X0, [X23]
	454 Call 0x1C17F10
	455 Move X1, X31
	456 Move X20, X0
	457 Call XRInteractableEvent..ctor, X0
	458 Move [X19+400], X20
	459 Move X0, [X23]
	460 Call 0x1C17F10
	461 Move X1, X31
	462 Move X20, X0
	463 Call XRInteractableEvent..ctor, X0
	464 Move [X19+408], X20
	465 Move X0, [X23]
	466 Call 0x1C17F10
	467 Move X1, X31
	468 Move X20, X0
	469 Call XRInteractableEvent..ctor, X0
	470 Move [X19+416], X20
	471 Move X0, [X23]
	472 Call 0x1C17F10
	473 Move X1, X31
	474 Move X20, X0
	475 Call XRInteractableEvent..ctor, X0
	476 Move [X19+424], X20
	477 Move X0, [X23]
	478 Call 0x1C17F10
	479 Move X1, X31
	480 Move X20, X0
	481 Call XRInteractableEvent..ctor, X0
	482 Move [X19+432], X20
	483 Move X0, [X23]
	484 Call 0x1C17F10
	485 Move X1, X31
	486 Move X20, X0
	487 Call XRInteractableEvent..ctor, X0
	488 Move [X19+440], X20
	489 Move X0, [X23]
	490 Call 0x1C17F10
	491 Move X1, X31
	492 Move X20, X0
	493 Call XRInteractableEvent..ctor, X0
	494 Move [X19+448], X20
	495 Move X8, 0x61C000
	496 Move X8, [X8+1416]
	497 Move X0, [X8]
	498 Call 0x1C17F10
	499 Move X8, 0x61C000
	500 Move X8, [X8+1408]
	501 Move X20, X0
	502 Move X1, [X8]
	503 Call List`1<Object>..ctor, X0
	504 Move [X19+456], X20
	505 Move X0, X19
	506 Move X20, [X31+80]
	507 Move X19, [X31+88]
	508 Move X22, [X31+64]
	509 Move X21, [X31+72]
	510 Move X24, [X31+48]
	511 Move X23, [X31+56]
	512 Move X26, [X31+32]
	513 Move X25, [X31+40]
	514 Move X28, [X31+16]
	515 Move X27, [X31+24]
	516 Move X1, X31
	517 Move X29, [X31+96]
	518 Move X30, [X31+104]
	519 Call MonoBehaviour..ctor, X0
	520 Return 
	521 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B3F2F0 MOV W20, W1
	0x03B3F2F4 MOV X19, X0
	0x03B3F2F8 TBNZ X8, 0x0, 0x3B3F31C
	0x03B3F2FC ADRP X0, 0x61B000
	0x03B3F300 LDR X0, [X0 + 0x658]
	0x03B3F304 BL 0x1C16CF4
	0x03B3F308 ADRP X0, 0x5B4000
	0x03B3F30C LDR X0, [X0 + 0x598]
	0x03B3F310 BL 0x1C16CF4
	0x03B3F314 MOVZ W8, 0x1
	0x03B3F318 STRB W8, [X21 + 0x85D]
	0x03B3F31C MOV X0, X19
	0x03B3F320 CMP W20, 0x1
	0x03B3F324 B.NE 0x3B3F338
	0x03B3F328 BL 0x3B3F54C
	0x03B3F32C MOV X0, X19
	0x03B3F330 BL 0x3B3F278
	0x03B3F334 B 0x3B3F3B4
	0x03B3F338 BL 0x3B3F278
	0x03B3F33C CMP W20, 0x3
	0x03B3F340 B.EQ 0x3B3F3B4
	0x03B3F344 CMP W20, 0x2
	0x03B3F348 B.EQ 0x3B3F430
	0x03B3F34C CBNZ W20, 0x3B3F53C
	0x03B3F350 MOV X0, X19
	0x03B3F354 BL 0x3B3A824
	0x03B3F358 TBNZ X0, 0x0, 0x3B3F36C
	0x03B3F35C LDRB W8, [X19 + 0x2B4]
	0x03B3F360 CBNZ W8, 0x3B3F36C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8A4000
	006 Move X21, 0x61C000
	007 Move X19, 0x61C000
	008 Move W8, [X20+2136]
	009 Move X21, [X21+1456]
	010 Move X19, [X19+1080]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x61C000
	016 Move X0, [X0+1080]
	017 Call 0x1C17CF4
	018 Move X0, 0x61C000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2136], W8
	023 Move X0, [X21]
	024 Move W1, 1
	025 Move W2, W31
	026 Move W3, W31
	027 Move X4, X31
	028 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	029 Move X8, [X19]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X8, [X8+184]
	033 Move [X8], X0
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: UnityEngine.Transform UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_transform()

Disassembly:
	0x03B3F364 LDRB W8, [X19 + 0x2B5]
	0x03B3F368 CBZ W8, 0x3B3F4D4

ISIL:
	001 Move X1, X31
	002 Call Component.get_transform, X0
	003 Return X0

