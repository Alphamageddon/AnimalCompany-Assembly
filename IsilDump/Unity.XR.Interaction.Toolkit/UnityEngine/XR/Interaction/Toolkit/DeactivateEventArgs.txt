Type: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs

Method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor get_interactorObject()

Disassembly:
	0x03B6CDE4 ADRP X0, 0x5AE000
	0x03B6CDE8 LDR X0, [X0 + 0xE30]
	0x03B6CDEC BL 0x1C16CF4
	0x03B6CDF0 ADRP X0, 0x5EE000
	0x03B6CDF4 LDR X0, [X0 + 0xE20]
	0x03B6CDF8 BL 0x1C16CF4
	0x03B6CDFC MOVZ W8, 0x1
	0x03B6CE00 STRB W8, [X20 + 0xA1A]
	0x03B6CE04 LDR X0, [X21]
	0x03B6CE08 BL 0x1C16F10
	0x03B6CE0C CBZ X19, 0x3B6CECC
	0x03B6CE10 LDR X8, [X19]
	0x03B6CE14 ADRP X22, 0x587000
	0x03B6CE18 ADRP X21, 0x5EE000
	0x03B6CE1C MOV X1, X19
	0x03B6CE20 LDR X2, [X8 + 0x1E0]
	0x03B6CE24 LDR X22, [X22 + 0x970]
	0x03B6CE28 LDR X21, [X21 + 0xE20]
	0x03B6CE2C MOV X3, X31
	0x03B6CE30 MOV X20, X0
	0x03B6CE34 BL 0x3C45BE8
	0x03B6CE38 LDR X0, [X22]
	0x03B6CE3C LDR W8, [X0 + 0xE0]
	0x03B6CE40 CBNZ W8, 0x3B6CE48
	0x03B6CE44 BL 0x1C16DFC
	0x03B6CE48 MOV X0, X20
	0x03B6CE4C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x877000
	005 Move W8, [X20+2559]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5F0000
	012 Move X0, [X0+1440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2559], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {30}
	019 Move X8, 0x5F0000
	020 Move X8, [X8+1440]
	021 Move X0, X19
	022 Move X20, [X8]
	023 Move X1, X20
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfNotEqual {31}
	027 Move X0, X19
	028 Move X1, X20
	029 Call 0x1C181E0
	030 Move X0, X31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void set_interactorObject(UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor value)

Disassembly:
	0x03B6CE50 BL 0x3C02390
	0x03B6CE54 LDR X0, [X21]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable get_interactableObject()

Disassembly:
	0x03B6CE58 LDR W8, [X0 + 0xE0]
	0x03B6CE5C CBNZ W8, 0x3B6CE64
	0x03B6CE60 BL 0x1C16DFC
	0x03B6CE64 ADRP X20, 0x876000
	0x03B6CE68 LDRB W8, [X20 + 0xAD3]
	0x03B6CE6C CBNZ W8, 0x3B6CE84
	0x03B6CE70 ADRP X0, 0x5EE000
	0x03B6CE74 LDR X0, [X0 + 0xE20]
	0x03B6CE78 BL 0x1C16CF4
	0x03B6CE7C MOVZ W8, 0x1
	0x03B6CE80 STRB W8, [X20 + 0xAD3]
	0x03B6CE84 LDR X0, [X21]
	0x03B6CE88 LDR W8, [X0 + 0xE0]
	0x03B6CE8C CBNZ W8, 0x3B6CE98
	0x03B6CE90 BL 0x1C16DFC
	0x03B6CE94 LDR X0, [X21]
	0x03B6CE98 LDR X8, [X0 + 0xB8]
	0x03B6CE9C LDR X0, [X8]
	0x03B6CEA0 CBZ X0, 0x3B6CECC
	0x03B6CEA4 ADRP X8, 0x5EF000
	0x03B6CEA8 LDR X8, [X8 + 0x5E8]
	0x03B6CEAC MOV X1, X19
	0x03B6CEB0 LDR X2, [X8]
	0x03B6CEB4 BL 0x301D7A8
	0x03B6CEB8 MOV X0, X19
	0x03B6CEBC LDP X20, X19, [X31 + 0x20]
	0x03B6CEC0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x877000
	005 Move W8, [X20+2560]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5EF000
	012 Move X0, [X0+2912]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2560], W8
	016 Move X19, [X19+24]
	017 Compare X19, 0
	018 JumpIfEqual {30}
	019 Move X8, 0x5EF000
	020 Move X8, [X8+2912]
	021 Move X0, X19
	022 Move X20, [X8]
	023 Move X1, X20
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfNotEqual {31}
	027 Move X0, X19
	028 Move X1, X20
	029 Call 0x1C181E0
	030 Move X0, X31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void set_interactableObject(UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable value)

Disassembly:
	0x03B6CEC4 LDR X30, [X31], #0x30
	0x03B6CEC8 B 0x3B6CED0

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B6CECC BL 0x1C16F20
	0x03B6CED0 SUB X31, X31, 0xC0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

