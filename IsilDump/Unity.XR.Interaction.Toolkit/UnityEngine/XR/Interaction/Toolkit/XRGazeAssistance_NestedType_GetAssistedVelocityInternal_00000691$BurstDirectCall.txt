Type: UnityEngine.XR.Interaction.Toolkit.XRGazeAssistance/GetAssistedVelocityInternal_00000691$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B6C320 STRB W8, [X21 + 0xA08]
	0x03B6C324 ADRP X24, 0x5EE000
	0x03B6C328 LDR X21, [X20 + 0x20]!
	0x03B6C32C LDR X24, [X24 + 0xED0]
	0x03B6C330 MOV X0, X21
	0x03B6C334 MOV X1, X19
	0x03B6C338 MOV X2, X31
	0x03B6C33C BL 0x33C0FDC
	0x03B6C340 CBZ X0, 0x3B6C360
	0x03B6C344 LDR X23, [X24]
	0x03B6C348 MOV X22, X0
	0x03B6C34C MOV X1, X23
	0x03B6C350 BL 0x1C16E00
	0x03B6C354 MOV X1, X0
	0x03B6C358 CBNZ X0, 0x3B6C364
	0x03B6C35C B 0x3B6C390
	0x03B6C360 MOV X1, X31
	0x03B6C364 MOV X0, X20
	0x03B6C368 MOV X2, X21
	0x03B6C36C BL 0x1C24138
	0x03B6C370 CMP X21, X0
	0x03B6C374 MOV X21, X0
	0x03B6C378 B.NE 0x3B6C330
	0x03B6C37C LDP X20, X19, [X31 + 0x30]
	0x03B6C380 LDP X22, X21, [X31 + 0x20]
	0x03B6C384 LDP X24, X23, [X31 + 0x10]
	0x03B6C388 LDR X30, [X31], #0x40
	0x03B6C38C RET
	0x03B6C390 MOV X0, X22
	0x03B6C394 MOV X1, X23
	0x03B6C398 BL 0x1C171E0
	0x03B6C39C STR X30, [X31 - 0x40]!
	0x03B6C3A0 STP X24, X23, [X31 + 0x10]
	0x03B6C3A4 STP X22, X21, [X31 + 0x20]
	0x03B6C3A8 STP X20, X19, [X31 + 0x30]
	0x03B6C3AC ADRP X21, 0x876000
	0x03B6C3B0 LDRB W8, [X21 + 0xA09]
	0x03B6C3B4 MOV X19, X1
	0x03B6C3B8 MOV X20, X0
	0x03B6C3BC TBNZ X8, 0x0, 0x3B6C3D4
	0x03B6C3C0 ADRP X0, 0x5EE000
	0x03B6C3C4 LDR X0, [X0 + 0xED8]
	0x03B6C3C8 BL 0x1C16CF4
	0x03B6C3CC MOVZ W8, 0x1
	0x03B6C3D0 STRB W8, [X21 + 0xA09]
	0x03B6C3D4 ADRP X24, 0x5EE000
	0x03B6C3D8 LDR X21, [X20 + 0x28]!
	0x03B6C3DC LDR X24, [X24 + 0xED8]
	0x03B6C3E0 MOV X0, X21
	0x03B6C3E4 MOV X1, X19
	0x03B6C3E8 MOV X2, X31
	0x03B6C3EC BL 0x33C0DE4
	0x03B6C3F0 CBZ X0, 0x3B6C410
	0x03B6C3F4 LDR X23, [X24]
	0x03B6C3F8 MOV X22, X0
	0x03B6C3FC MOV X1, X23
	0x03B6C400 BL 0x1C16E00
	0x03B6C404 MOV X1, X0
	0x03B6C408 CBNZ X0, 0x3B6C414
	0x03B6C40C B 0x3B6C440
	0x03B6C410 MOV X1, X31
	0x03B6C414 MOV X0, X20
	0x03B6C418 MOV X2, X21
	0x03B6C41C BL 0x1C24138
	0x03B6C420 CMP X21, X0
	0x03B6C424 MOV X21, X0
	0x03B6C428 B.NE 0x3B6C3E0
	0x03B6C42C LDP X20, X19, [X31 + 0x30]
	0x03B6C430 LDP X22, X21, [X31 + 0x20]
	0x03B6C434 LDP X24, X23, [X31 + 0x10]
	0x03B6C438 LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x877000
	008 Move X23, 0x5F0000
	009 Move W8, [X20+2532]
	010 Move X23, [X23+1328]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5B0000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5F0000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move X0, 0x5F0000
	023 Move X0, [X0+1352]
	024 Call 0x1C17CF4
	025 Move X0, 0x5F0000
	026 Move X0, [X0+1360]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2532], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x5B0000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5F0000
	053 Move X8, [X8+1360]
	054 Move X21, [X8]
	055 Move X8, 0x5F0000
	056 Move X8, [X8+1352]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B6C43C RET
	0x03B6C440 MOV X0, X22
	0x03B6C444 MOV X1, X23
	0x03B6C448 BL 0x1C171E0
	0x03B6C44C STR X30, [X31 - 0x40]!
	0x03B6C450 STP X24, X23, [X31 + 0x10]
	0x03B6C454 STP X22, X21, [X31 + 0x20]
	0x03B6C458 STP X20, X19, [X31 + 0x30]
	0x03B6C45C ADRP X21, 0x876000
	0x03B6C460 LDRB W8, [X21 + 0xA0A]
	0x03B6C464 MOV X19, X1
	0x03B6C468 MOV X20, X0
	0x03B6C46C TBNZ X8, 0x0, 0x3B6C484
	0x03B6C470 ADRP X0, 0x5EE000
	0x03B6C474 LDR X0, [X0 + 0xED8]
	0x03B6C478 BL 0x1C16CF4
	0x03B6C47C MOVZ W8, 0x1
	0x03B6C480 STRB W8, [X21 + 0xA0A]
	0x03B6C484 ADRP X24, 0x5EE000
	0x03B6C488 LDR X21, [X20 + 0x28]!
	0x03B6C48C LDR X24, [X24 + 0xED8]
	0x03B6C490 MOV X0, X21
	0x03B6C494 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x877000
	005 Move X19, 0x5F0000
	006 Move W8, [X20+2533]
	007 Move X19, [X19+1328]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5F0000
	013 Move X0, [X0+1328]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2533], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call GetAssistedVelocityInternal_00000691$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B6C498 MOV X2, X31
	0x03B6C49C BL 0x33C0FDC
	0x03B6C4A0 CBZ X0, 0x3B6C4C0
	0x03B6C4A4 LDR X23, [X24]
	0x03B6C4A8 MOV X22, X0
	0x03B6C4AC MOV X1, X23
	0x03B6C4B0 BL 0x1C16E00
	0x03B6C4B4 MOV X1, X0
	0x03B6C4B8 CBNZ X0, 0x3B6C4C4
	0x03B6C4BC B 0x3B6C4F0
	0x03B6C4C0 MOV X1, X31
	0x03B6C4C4 MOV X0, X20
	0x03B6C4C8 MOV X2, X21
	0x03B6C4CC BL 0x1C24138
	0x03B6C4D0 CMP X21, X0
	0x03B6C4D4 MOV X21, X0
	0x03B6C4D8 B.NE 0x3B6C490
	0x03B6C4DC LDP X20, X19, [X31 + 0x30]
	0x03B6C4E0 LDP X22, X21, [X31 + 0x20]
	0x03B6C4E4 LDP X24, X23, [X31 + 0x10]
	0x03B6C4E8 LDR X30, [X31], #0x40
	0x03B6C4EC RET
	0x03B6C4F0 MOV X0, X22
	0x03B6C4F4 MOV X1, X23
	0x03B6C4F8 BL 0x1C171E0
	0x03B6C4FC STR X30, [X31 - 0x40]!
	0x03B6C500 STP X24, X23, [X31 + 0x10]
	0x03B6C504 STP X22, X21, [X31 + 0x20]
	0x03B6C508 STP X20, X19, [X31 + 0x30]
	0x03B6C50C ADRP X21, 0x876000
	0x03B6C510 LDRB W8, [X21 + 0xA0B]
	0x03B6C514 MOV X19, X1
	0x03B6C518 MOV X20, X0
	0x03B6C51C TBNZ X8, 0x0, 0x3B6C534
	0x03B6C520 ADRP X0, 0x5EE000
	0x03B6C524 LDR X0, [X0 + 0xCE8]
	0x03B6C528 BL 0x1C16CF4
	0x03B6C52C MOVZ W8, 0x1
	0x03B6C530 STRB W8, [X21 + 0xA0B]
	0x03B6C534 ADRP X24, 0x5EE000
	0x03B6C538 LDR X21, [X20 + 0x30]!
	0x03B6C53C LDR X24, [X24 + 0xCE8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x877000
	006 Move X19, 0x5F0000
	007 Move X20, 0x5B0000
	008 Move W8, [X21+2534]
	009 Move X19, [X19+1368]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5B0000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5F0000
	019 Move X0, [X0+1328]
	020 Call 0x1C17CF4
	021 Move X0, 0x5F0000
	022 Move X0, [X0+1368]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2534], W8
	026 Move X0, [X20]
	027 Move X20, 0x5F0000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1328]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B6C540 MOV X0, X21

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B6C544 MOV X1, X19

ISIL:
	001 Call GetAssistedVelocityInternal_00000691$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in UnityEngine.Vector3 source, in UnityEngine.Vector3 target, in UnityEngine.Vector3 velocity, System.Single gravity, System.Single maxAngle, System.Single requiredSpeed, System.Single maxSpeedPercent, System.Single assistPercent, System.Single epsilon, out UnityEngine.Vector3 adjustedVelocity)

Disassembly:
	0x03B6B770 LDR X8, [X8 + 0x320]
	0x03B6B774 MOV X0, X19
	0x03B6B778 LDR X20, [X8]
	0x03B6B77C MOV X1, X20
	0x03B6B780 BL 0x1C16E00
	0x03B6B784 CBNZ X0, 0x3B6B798
	0x03B6B788 MOV X0, X19
	0x03B6B78C MOV X1, X20
	0x03B6B790 BL 0x1C171E0
	0x03B6B794 MOV X0, X31
	0x03B6B798 LDP X20, X19, [X31 + 0x10]
	0x03B6B79C LDR X30, [X31], #0x20
	0x03B6B7A0 RET
	0x03B6B7A4 STR X1, [X0 + 0x10]
	0x03B6B7A8 RET
	0x03B6B7AC STR X1, [X0 + 0x18]
	0x03B6B7B0 RET
	0x03B6B7B4 LDR X0, [X0 + 0x20]
	0x03B6B7B8 RET
	0x03B6B7BC STR X1, [X0 + 0x20]
	0x03B6B7C0 RET
	0x03B6B7C4 MOV X1, X31
	0x03B6B7C8 B 0x33BDD8C
	0x03B6B7CC STP X30, X21, [X31 - 0x20]!
	0x03B6B7D0 STP X20, X19, [X31 + 0x10]
	0x03B6B7D4 ADRP X20, 0x877000
	0x03B6B7D8 ADRP X21, 0x5F0000
	0x03B6B7DC LDRB W8, [X20 + 0x9EE]
	0x03B6B7E0 LDR X21, [X21 + 0x570]
	0x03B6B7E4 MOV X19, X0
	0x03B6B7E8 TBNZ X8, 0x0, 0x3B6B800
	0x03B6B7EC ADRP X0, 0x5F0000
	0x03B6B7F0 LDR X0, [X0 + 0x570]
	0x03B6B7F4 BL 0x1C16CF4
	0x03B6B7F8 MOVZ W8, 0x1
	0x03B6B7FC STRB W8, [X20 + 0x9EE]
	0x03B6B800 LDR X1, [X21]
	0x03B6B804 MOV X0, X19
	0x03B6B808 LDP X20, X19, [X31 + 0x10]
	0x03B6B80C LDP X30, X21, [X31], #0x20
	0x03B6B810 B 0x2729B5C
	0x03B6B814 STR X30, [X31 - 0x20]!
	0x03B6B818 STP X20, X19, [X31 + 0x10]
	0x03B6B81C ADRP X20, 0x877000
	0x03B6B820 LDRB W8, [X20 + 0x9EF]
	0x03B6B824 MOV X19, X0
	0x03B6B828 TBNZ X8, 0x0, 0x3B6B840
	0x03B6B82C ADRP X0, 0x5EF000
	0x03B6B830 LDR X0, [X0 + 0x320]
	0x03B6B834 BL 0x1C16CF4
	0x03B6B838 MOVZ W8, 0x1
	0x03B6B83C STRB W8, [X20 + 0x9EF]
	0x03B6B840 LDR X19, [X19 + 0x10]
	0x03B6B844 CBZ X19, 0x3B6B870
	0x03B6B848 ADRP X8, 0x5EF000
	0x03B6B84C LDR X8, [X8 + 0x320]
	0x03B6B850 MOV X0, X19
	0x03B6B854 LDR X20, [X8]
	0x03B6B858 MOV X1, X20
	0x03B6B85C BL 0x1C16E00
	0x03B6B860 CBNZ X0, 0x3B6B874
	0x03B6B864 MOV X0, X19
	0x03B6B868 MOV X1, X20
	0x03B6B86C BL 0x1C171E0
	0x03B6B870 MOV X0, X31
	0x03B6B874 LDP X20, X19, [X31 + 0x10]
	0x03B6B878 LDR X30, [X31], #0x20
	0x03B6B87C RET
	0x03B6B880 STR X1, [X0 + 0x10]
	0x03B6B884 RET
	0x03B6B888 STR X1, [X0 + 0x18]
	0x03B6B88C RET
	0x03B6B890 LDR X0, [X0 + 0x20]
	0x03B6B894 RET
	0x03B6B898 STR X1, [X0 + 0x20]
	0x03B6B89C RET
	0x03B6B8A0 LDRB W0, [X0 + 0x28]
	0x03B6B8A4 RET
	0x03B6B8A8 AND W8, W1, 0x1
	0x03B6B8AC STRB W8, [X0 + 0x28]
	0x03B6B8B0 RET
	0x03B6B8B4 MOV X1, X31
	0x03B6B8B8 B 0x33BDD8C

ISIL:
	001 Move [X31-112], D13
	002 Move [X31-104], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x878000
	015 Move X24, 0x5B1000
	016 Move W8, [X23+2535]
	017 Move X24, [X24+2120]
	018 Move X19, X3
	019 Move V8, V5
	020 Move V9, V4
	021 Move V10, V3
	022 Move V11, V2
	023 Move V12, V1
	024 Move V13, V0
	025 Move X20, X2
	026 Move X21, X1
	027 Move X22, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x5B1000
	033 Move X0, [X0+2120]
	034 Call 0x1C17CF4
	035 Move X0, 0x5F1000
	036 Move X0, [X0+1328]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+2535], W8
	040 Move X0, [X24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call BurstCompiler.get_IsEnabled
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {86}
	051 Move X8, 0x5F1000
	052 Move X8, [X8+1328]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Call GetAssistedVelocityInternal_00000691$BurstDirectCall.GetFunctionPointer
	059 Compare X0, 0
	060 JumpIfEqual {86}
	061 Move X4, X0
	062 Move X0, X22
	063 Move X1, X21
	064 Move X2, X20
	065 Move V2, V11
	066 Move V3, V10
	067 Move V4, V9
	068 Move V5, V8
	069 Move X3, X19
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X22, [X31+80]
	073 Move X21, [X31+88]
	074 Move X24, [X31+64]
	075 Move X23, [X31+72]
	076 Move X30, [X31+48]
	077 Move D9, [X31+32]
	078 Move D8, [X31+40]
	079 Move D11, [X31+16]
	080 Move D10, [X31+24]
	081 Move V0, V13
	082 Move V1, V12
	083 Move D13, [X31+112]
	084 Move D12, [X31+120]
	085 CallNoReturn X4
	086 Move X0, X22
	087 Move X1, X21
	088 Move X2, X20
	089 Move V2, V11
	090 Move V3, V10
	091 Move V4, V9
	092 Move V5, V8
	093 Move X3, X19
	094 Move X20, [X31+96]
	095 Move X19, [X31+104]
	096 Move X22, [X31+80]
	097 Move X21, [X31+88]
	098 Move X24, [X31+64]
	099 Move X23, [X31+72]
	100 Move X30, [X31+48]
	101 Move D9, [X31+32]
	102 Move D8, [X31+40]
	103 Move D11, [X31+16]
	104 Move D10, [X31+24]
	105 Move V0, V13
	106 Move V1, V12
	107 Move X4, X31
	108 Move D13, [X31+112]
	109 Move D12, [X31+120]
	110 Call 0x3B8166C
	111 Return 

