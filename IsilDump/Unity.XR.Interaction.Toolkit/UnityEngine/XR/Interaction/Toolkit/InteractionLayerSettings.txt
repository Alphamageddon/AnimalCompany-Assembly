Type: UnityEngine.XR.Interaction.Toolkit.InteractionLayerSettings

Method: System.Boolean IsLayerEmpty(System.Int32 index)

Disassembly:
	0x03B69E7C STR X9, [X19 + 0x58]
	0x03B69E80 STRB W10, [X8 + 0x90]
	0x03B69E84 LDR X9, [X19 + 0x78]
	0x03B69E88 STR X9, [X8 + 0x98]
	0x03B69E8C LDR X21, [X19 + 0x20]
	0x03B69E90 CBZ X21, 0x3B6A348
	0x03B69E94 ADRP X25, 0x5F2000
	0x03B69E98 LDR X8, [X21]
	0x03B69E9C LDR X22, [X19 + 0x68]
	0x03B69EA0 LDR X25, [X25 + 0x508]
	0x03B69EA4 LDRH W9, [X8 + 0x12E]
	0x03B69EA8 LDR X1, [X25]
	0x03B69EAC CBZ X9, 0x3B69ED0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Move X1, X31
	010 Move X30, [X31+16]
	011 Call String.IsNullOrEmpty, X0
	012 Return X0
	013 Call 0x1C17F20
	014 Call 0x1C17F28

Method: System.Void SetLayerNameAt(System.Int32 index, System.String layerName)

Disassembly:
	0x03B69EB0 LDR X10, [X8 + 0xB0]
	0x03B69EB4 ADD X10, X10, 0x8
	0x03B69EB8 LDUR X11, [X10 - 0x8]
	0x03B69EBC CMP X11, X1
	0x03B69EC0 B.EQ 0x3B69F58
	0x03B69EC4 SUBS X9, X9, 0x1
	0x03B69EC8 ADD X10, X10, 0x10
	0x03B69ECC B.NE 0x3B69EB8
	0x03B69ED0 MOVZ W2, 0x2
	0x03B69ED4 MOV X0, X21
	0x03B69ED8 BL 0x1C5C788
	0x03B69EDC B 0x3B69F68

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move [X8+32], X2
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.String GetLayerNameAt(System.Int32 index)

Disassembly:
	0x03B69CAC MOVZ W8, 0x1
	0x03B69CB0 STRB W8, [X22 + 0x9E2]
	0x03B69CB4 LDRB W8, [X19 + 0x1A]
	0x03B69CB8 CBZ W8, 0x3B6A310
	0x03B69CBC TBZ X21, 0x0, 0x3B69CC8
	0x03B69CC0 MOV W24, W31
	0x03B69CC4 B 0x3B69DE0
	0x03B69CC8 CBZ X20, 0x3B6A348
	0x03B69CCC MOV X0, X20
	0x03B69CD0 MOV X1, X31
	0x03B69CD4 BL 0x3C3FA04
	0x03B69CD8 LDR X0, [X19 + 0x48]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Int32 GetLayer(System.String layerName)

Disassembly:
	0x03B69D30 FMUL S1, S10, S10
	0x03B69D34 FADD S0, S0, S1
	0x03B69D38 LDR X0, [X21]
	0x03B69D3C FMUL S1, S11, S11
	0x03B69D40 FADD S15, S1, S0
	0x03B69D44 FMUL S0, S12, S12
	0x03B69D48 LDR W8, [X0 + 0xE0]
	0x03B69D4C FMUL S1, S13, S13
	0x03B69D50 FADD S0, S0, S1
	0x03B69D54 FMUL S1, S14, S14
	0x03B69D58 FADD S8, S1, S0
	0x03B69D5C CBNZ W8, 0x3B69D64
	0x03B69D60 BL 0x1C16DFC
	0x03B69D64 ADRP X8, 0xFFFFFFFFFCF80000
	0x03B69D68 LDR V1, [X8 + 0xFE8]
	0x03B69D6C FMUL S0, S15, S8
	0x03B69D70 FSQRT S0, S0
	0x03B69D74 FCMP S0, S1
	0x03B69D78 FMOV S1, W31
	0x03B69D7C B.MI 0x3B69DD4
	0x03B69D80 LDR X0, [X21]
	0x03B69D84 FMUL S1, S9, S12
	0x03B69D88 FMUL S2, S10, S13
	0x03B69D8C FMUL S3, S11, S14
	0x03B69D90 FADD S1, S1, S2
	0x03B69D94 FADD S1, S3, S1
	0x03B69D98 LDR W8, [X0 + 0xE0]
	0x03B69D9C FDIV S0, S1, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+24]
	006 Compare X8, 0
	007 JumpIfEqual {27}
	008 Move X20, X0
	009 Move X21, X1
	010 Move X19, X31
	011 Move W9, [X8+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X8, X8, X19
	015 Move X1, [X8+32]
	016 Move X0, X21
	017 Move X2, X31
	018 Call String.Equals, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X8, [X20+24]
	024 Add X19, X19, 1
	025 Compare X8, 0
	026 JumpIfNotEqual {11}
	027 Call 0x1C17F20
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W19, TEMP
	031 Move W0, W19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F28

Method: System.Void GetLayerNamesAndValues(System.Collections.Generic.List`1<System.String> names, System.Collections.Generic.List`1<System.Int32> values)

Disassembly:
	0x03B69EE0 CBZ W8, 0x3B6A084
	0x03B69EE4 LDRB W8, [X19 + 0x40]
	0x03B69EE8 CBZ W8, 0x3B69F04
	0x03B69EEC LDR X8, [X19 + 0x38]
	0x03B69EF0 CBZ X8, 0x3B6A348
	0x03B69EF4 LDRB W9, [X19 + 0x60]
	0x03B69EF8 STRB W9, [X8 + 0x90]
	0x03B69EFC LDR X9, [X19 + 0x58]
	0x03B69F00 STR X9, [X8 + 0x98]
	0x03B69F04 LDR X21, [X19 + 0x20]
	0x03B69F08 CBZ X21, 0x3B6A348
	0x03B69F0C ADRP X25, 0x5F2000
	0x03B69F10 LDR X8, [X21]
	0x03B69F14 LDR X22, [X19 + 0x48]
	0x03B69F18 LDR X25, [X25 + 0x508]
	0x03B69F1C LDRH W9, [X8 + 0x12E]
	0x03B69F20 LDR X1, [X25]
	0x03B69F24 CBZ X9, 0x3B69F48
	0x03B69F28 LDR X10, [X8 + 0xB0]
	0x03B69F2C ADD X10, X10, 0x8
	0x03B69F30 LDUR X11, [X10 - 0x8]
	0x03B69F34 CMP X11, X1
	0x03B69F38 B.EQ 0x3B69FC4
	0x03B69F3C SUBS X9, X9, 0x1
	0x03B69F40 ADD X10, X10, 0x10
	0x03B69F44 B.NE 0x3B69F30
	0x03B69F48 MOVZ W2, 0x2
	0x03B69F4C MOV X0, X21
	0x03B69F50 BL 0x1C5C788
	0x03B69F54 B 0x3B69FD4
	0x03B69F58 LDR W9, [X10]
	0x03B69F5C ADD W9, W9, 0x2
	0x03B69F60 ADD X8, X8, W9, 0x4, SXTW
	0x03B69F64 ADD X0, X8, 0x138
	0x03B69F68 LDP X8, X2, [X0]
	0x03B69F6C MOV X0, X21
	0x03B69F70 MOV X1, X22
	0x03B69F74 BLR X8
	0x03B69F78 LDR X21, [X19 + 0x20]
	0x03B69F7C CBZ X21, 0x3B6A348
	0x03B69F80 LDR X8, [X21]
	0x03B69F84 LDR X22, [X19 + 0x70]
	0x03B69F88 LDR X1, [X25]
	0x03B69F8C LDRH W9, [X8 + 0x12E]
	0x03B69F90 CBZ X9, 0x3B69FB4
	0x03B69F94 LDR X10, [X8 + 0xB0]
	0x03B69F98 ADD X10, X10, 0x8
	0x03B69F9C LDUR X11, [X10 - 0x8]
	0x03B69FA0 CMP X11, X1
	0x03B69FA4 B.EQ 0x3B6A030
	0x03B69FA8 SUBS X9, X9, 0x1
	0x03B69FAC ADD X10, X10, 0x10
	0x03B69FB0 B.NE 0x3B69F9C
	0x03B69FB4 MOVZ W2, 0x3
	0x03B69FB8 MOV X0, X21
	0x03B69FBC BL 0x1C5C788
	0x03B69FC0 B 0x3B6A040
	0x03B69FC4 LDR W9, [X10]
	0x03B69FC8 ADD W9, W9, 0x2
	0x03B69FCC ADD X8, X8, W9, 0x4, SXTW
	0x03B69FD0 ADD X0, X8, 0x138
	0x03B69FD4 LDP X8, X2, [X0]
	0x03B69FD8 MOV X0, X21
	0x03B69FDC MOV X1, X22
	0x03B69FE0 BLR X8
	0x03B69FE4 LDR X21, [X19 + 0x20]
	0x03B69FE8 CBZ X21, 0x3B6A348
	0x03B69FEC LDR X8, [X21]
	0x03B69FF0 LDR X22, [X19 + 0x50]
	0x03B69FF4 LDR X1, [X25]
	0x03B69FF8 LDRH W9, [X8 + 0x12E]
	0x03B69FFC CBZ X9, 0x3B6A020
	0x03B6A000 LDR X10, [X8 + 0xB0]
	0x03B6A004 ADD X10, X10, 0x8
	0x03B6A008 LDUR X11, [X10 - 0x8]
	0x03B6A00C CMP X11, X1
	0x03B6A010 B.EQ 0x3B6A054
	0x03B6A014 SUBS X9, X9, 0x1
	0x03B6A018 ADD X10, X10, 0x10
	0x03B6A01C B.NE 0x3B6A008
	0x03B6A020 MOVZ W2, 0x3
	0x03B6A024 MOV X0, X21
	0x03B6A028 BL 0x1C5C788
	0x03B6A02C B 0x3B6A064
	0x03B6A030 LDR W9, [X10]
	0x03B6A034 ADD W9, W9, 0x3
	0x03B6A038 ADD X8, X8, W9, 0x4, SXTW
	0x03B6A03C ADD X0, X8, 0x138
	0x03B6A040 LDP X8, X2, [X0]
	0x03B6A044 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x87A000
	010 Move W8, [X22+2515]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x58C000
	019 Move X0, [X0+3600]
	020 Call 0x1C17CF4
	021 Move X0, 0x58C000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2515], W8
	026 Move X8, [X21+24]
	027 Compare X8, 0
	028 JumpIfEqual {94}
	029 Move X24, 0x58C000
	030 Move X25, 0x58C000
	031 Move X24, [X24+440]
	032 Move X25, [X25+3600]
	033 Move X22, X31
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X8, X22
	038 Move X23, [X8+32]
	039 Move X1, X31
	040 Move X0, X23
	041 Call String.IsNullOrEmpty, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {90}
	046 Compare X20, 0
	047 JumpIfEqual {94}
	048 Move W10, [X20+28]
	049 Move X8, [X20+16]
	050 Move X9, [X24]
	051 Add W10, W10, 1
	052 Move [X20+28], W10
	053 Compare X8, 0
	054 JumpIfEqual {94}
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Move W11, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add W9, W10, 1
	059 Add X8, X8, X10
	060 Move [X20+24], W9
	061 Move [X8+32], X23
	062 Move X8, [X9+32]
	063 Move X0, X20
	064 Move X1, X23
	065 Move X8, [X8+192]
	066 Move X2, [X8+112]
	067 Call List`1<Object>.AddWithResize, X0, X1
	068 Compare X19, 0
	069 JumpIfEqual {94}
	070 Move W10, [X19+28]
	071 Move X8, [X19+16]
	072 Move X9, [X25]
	073 Add W10, W10, 1
	074 Move [X19+28], W10
	075 Compare X8, 0
	076 JumpIfEqual {94}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W11, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add W9, W10, 1
	081 Add X8, X8, X10
	082 Move [X19+24], W9
	083 Move [X8+32], W22
	084 Move X8, [X9+32]
	085 Move X0, X19
	086 Move W1, W22
	087 Move X8, [X8+192]
	088 Move X2, [X8+112]
	089 Call List`1<Int32>.AddWithResize, X0, X1
	090 Move X8, [X21+24]
	091 Add X22, X22, 1
	092 Compare X8, 0
	093 JumpIfNotEqual {34}
	094 Call 0x1C17F20
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X30, [X31+64]
	102 Move X25, [X31+72]
	103 Return 
	104 Call 0x1C17F28

Method: System.Void OnBeforeSerialize()

Disassembly:
	0x03B6A048 MOV X1, X22
	0x03B6A04C BLR X8
	0x03B6A050 B 0x3B6A084
	0x03B6A054 LDR W9, [X10]
	0x03B6A058 ADD W9, W9, 0x3
	0x03B6A05C ADD X8, X8, W9, 0x4, SXTW
	0x03B6A060 ADD X0, X8, 0x138
	0x03B6A064 LDP X8, X2, [X0]
	0x03B6A068 MOV X0, X21
	0x03B6A06C MOV X1, X22
	0x03B6A070 BLR X8
	0x03B6A074 LDRB W8, [X19 + 0x18]
	0x03B6A078 CBNZ W8, 0x3B6A084
	0x03B6A07C MOVZ W8, 0x1
	0x03B6A080 STRB W8, [X19 + 0x30]
	0x03B6A084 MOV W8, W24
	0x03B6A088 STRB W24, [X19 + 0x19]
	0x03B6A08C CBZ W8, 0x3B6A310
	0x03B6A090 CBZ X20, 0x3B6A348
	0x03B6A094 MOV X0, X20
	0x03B6A098 MOV X1, X31
	0x03B6A09C BL 0x3C3F58C
	0x03B6A0A0 MOV X0, X20
	0x03B6A0A4 MOV X1, X31
	0x03B6A0A8 MOV V10.16B, V0.16B
	0x03B6A0AC MOV V9.16B, V1.16B
	0x03B6A0B0 MOV V8.16B, V2.16B
	0x03B6A0B4 BL 0x3C3DEB4
	0x03B6A0B8 LDRB W8, [X19 + 0x18]
	0x03B6A0BC CBNZ W8, 0x3B6A2EC
	0x03B6A0C0 LDR X20, [X19 + 0x28]
	0x03B6A0C4 CBZ X20, 0x3B6A348
	0x03B6A0C8 LDR X8, [X20]
	0x03B6A0CC LDR X1, [X23]
	0x03B6A0D0 MOV V11.16B, V0.16B
	0x03B6A0D4 MOV V12.16B, V1.16B
	0x03B6A0D8 LDRH W9, [X8 + 0x12E]
	0x03B6A0DC MOV V13.16B, V2.16B
	0x03B6A0E0 MOV V14.16B, V3.16B
	0x03B6A0E4 CBZ X9, 0x3B6A108
	0x03B6A0E8 LDR X10, [X8 + 0xB0]
	0x03B6A0EC ADD X10, X10, 0x8
	0x03B6A0F0 LDUR X11, [X10 - 0x8]
	0x03B6A0F4 CMP X11, X1
	0x03B6A0F8 B.EQ 0x3B6A118
	0x03B6A0FC SUBS X9, X9, 0x1
	0x03B6A100 ADD X10, X10, 0x10
	0x03B6A104 B.NE 0x3B6A0F0
	0x03B6A108 MOVZ W2, 0x5
	0x03B6A10C MOV X0, X20
	0x03B6A110 BL 0x1C5C788
	0x03B6A114 B 0x3B6A128
	0x03B6A118 LDR W9, [X10]
	0x03B6A11C ADD W9, W9, 0x5
	0x03B6A120 ADD X8, X8, W9, 0x4, SXTW
	0x03B6A124 ADD X0, X8, 0x138
	0x03B6A128 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x879000
	005 Move W8, [X20+2516]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x5F2000
	012 Move X0, [X0+1232]
	013 Call 0x1C17CF4
	014 Move X0, 0x58A000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move X0, 0x5B2000
	018 Move X0, [X0+104]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2516], W8
	022 Add X19, X19, 24
	023 Move X0, [X19]
	024 Compare X0, 0
	025 JumpIfNotEqual {34}
	026 Move X8, 0x58A000
	027 Move X8, [X8+2760]
	028 Move W1, 32
	029 Move X0, [X8]
	030 Call 0x1C17D6C
	031 Move [X19], X0
	032 Compare X0, 0
	033 JumpIfEqual {70}
	034 Move W8, [X0+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0x5F2000
	037 Move X8, [X8+1232]
	038 Move W1, 32
	039 Move X0, X19
	040 Move X2, [X8]
	041 Call Array.Resize, X0, X1
	042 Move X0, [X19]
	043 Compare X0, 0
	044 JumpIfEqual {70}
	045 Move W8, [X0+24]
	046 Compare W8, 0
	047 JumpIfEqual {71}
	048 Move X20, 0x5B2000
	049 Move X20, [X20+104]
	050 Move X0, [X0+32]
	051 Move X2, X31
	052 Move X1, [X20]
	053 Call String.Equals, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {66}
	058 Move X8, [X19]
	059 Compare X8, 0
	060 JumpIfEqual {70}
	061 Move W9, [X8+24]
	062 Compare W9, 0
	063 JumpIfEqual {71}
	064 Move X9, [X20]
	065 Move [X8+32], X9
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return 
	070 Call 0x1C17F20
	071 Call 0x1C17F28

Method: System.Void OnAfterDeserialize()

Disassembly:
	0x03B6A12C MOV X0, X20

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B6A130 BLR X8
	0x03B6A134 TBZ X0, 0x0, 0x3B6A2EC
	0x03B6A138 LDR X20, [X19 + 0x28]
	0x03B6A13C CBZ X20, 0x3B6A348
	0x03B6A140 LDR X8, [X20]
	0x03B6A144 LDR X1, [X23]
	0x03B6A148 LDRH W9, [X8 + 0x12E]
	0x03B6A14C CBZ X9, 0x3B6A170
	0x03B6A150 LDR X10, [X8 + 0xB0]
	0x03B6A154 ADD X10, X10, 0x8
	0x03B6A158 LDUR X11, [X10 - 0x8]
	0x03B6A15C CMP X11, X1
	0x03B6A160 B.EQ 0x3B6A180
	0x03B6A164 SUBS X9, X9, 0x1
	0x03B6A168 ADD X10, X10, 0x10
	0x03B6A16C B.NE 0x3B6A158
	0x03B6A170 MOVZ W2, 0x4
	0x03B6A174 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x879000
	006 Move X21, 0x5F2000
	007 Move W8, [X20+2517]
	008 Move X21, [X21+1240]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5F2000
	015 Move X0, [X0+1240]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2517], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x25D81B0, X0
	026 Return 

