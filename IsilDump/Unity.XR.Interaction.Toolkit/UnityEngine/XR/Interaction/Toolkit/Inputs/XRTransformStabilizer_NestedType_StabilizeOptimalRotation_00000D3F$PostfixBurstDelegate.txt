Type: UnityEngine.XR.Interaction.Toolkit.Inputs.XRTransformStabilizer/StabilizeOptimalRotation_00000D3F$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03BBF5B8 LDR X30, [X31], #0x20
	0x03BBF5BC B 0x3BBF6A4
	0x03BBF5C0 STR X30, [X31 - 0x40]!
	0x03BBF5C4 STP X24, X23, [X31 + 0x10]
	0x03BBF5C8 STP X22, X21, [X31 + 0x20]
	0x03BBF5CC STP X20, X19, [X31 + 0x30]
	0x03BBF5D0 ADRP X20, 0x823000
	0x03BBF5D4 ADRP X24, 0x538000
	0x03BBF5D8 ADRP X21, 0x59E000
	0x03BBF5DC ADRP X22, 0x59E000
	0x03BBF5E0 ADRP X23, 0x59E000
	0x03BBF5E4 LDRB W8, [X20 + 0xD91]
	0x03BBF5E8 LDR X24, [X24 + 0x3D8]
	0x03BBF5EC LDR X21, [X21 + 0x468]
	0x03BBF5F0 LDR X22, [X22 + 0x470]
	0x03BBF5F4 LDR X23, [X23 + 0x460]
	0x03BBF5F8 MOV X19, X0
	0x03BBF5FC TBNZ X8, 0x0, 0x3BBF638
	0x03BBF600 ADRP X0, 0x538000
	0x03BBF604 LDR X0, [X0 + 0x3D8]
	0x03BBF608 BL 0x1C16CF4
	0x03BBF60C ADRP X0, 0x59E000
	0x03BBF610 LDR X0, [X0 + 0x470]
	0x03BBF614 BL 0x1C16CF4
	0x03BBF618 ADRP X0, 0x59E000
	0x03BBF61C LDR X0, [X0 + 0x468]
	0x03BBF620 BL 0x1C16CF4
	0x03BBF624 ADRP X0, 0x59E000
	0x03BBF628 LDR X0, [X0 + 0x460]
	0x03BBF62C BL 0x1C16CF4
	0x03BBF630 MOVZ W8, 0x1
	0x03BBF634 STRB W8, [X20 + 0xD91]
	0x03BBF638 LDR X0, [X24]
	0x03BBF63C LDR X20, [X19 + 0x38]
	0x03BBF640 BL 0x1C16F10
	0x03BBF644 LDR X2, [X21]
	0x03BBF648 MOV X1, X19
	0x03BBF64C MOV X3, X31
	0x03BBF650 MOV X21, X0
	0x03BBF654 BL 0x2A719B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33284096
	021 Add X8, X8, 3756
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33284096
	024 Add X8, X8, 3728
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33284096
	033 Add X8, X8, 3568
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50999296
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.quaternion startRot, in Unity.Mathematics.quaternion targetRot, in Unity.Mathematics.quaternion alternateStartRot, System.Single deltaTime, System.Single angleStabilization, System.Single alternateStabilization, System.Single scaleFactor, out Unity.Mathematics.quaternion resultRot)

Disassembly:
	0x03BBF658 LDR X0, [X24]
	0x03BBF65C BL 0x1C16F10
	0x03BBF660 LDR X2, [X22]
	0x03BBF664 MOV X1, X19
	0x03BBF668 MOV X3, X31

ISIL:
	001 Move X8, [X0+64]
	002 Move X6, [X0+24]
	003 Move X5, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X6

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.quaternion startRot, in Unity.Mathematics.quaternion targetRot, in Unity.Mathematics.quaternion alternateStartRot, System.Single deltaTime, System.Single angleStabilization, System.Single alternateStabilization, System.Single scaleFactor, out Unity.Mathematics.quaternion resultRot, System.AsyncCallback param_8, System.Object param_9)

Disassembly:
	0x03BBF66C MOV X22, X0
	0x03BBF670 BL 0x2A719B8
	0x03BBF674 LDR X0, [X23]
	0x03BBF678 LDR W8, [X0 + 0xE0]
	0x03BBF67C CBNZ W8, 0x3BBF684
	0x03BBF680 BL 0x1C16DFC
	0x03BBF684 MOV X0, X20
	0x03BBF688 MOV X1, X21
	0x03BBF68C MOV X2, X22
	0x03BBF690 LDP X20, X19, [X31 + 0x30]
	0x03BBF694 LDP X22, X21, [X31 + 0x20]
	0x03BBF698 LDP X24, X23, [X31 + 0x10]
	0x03BBF69C LDR X30, [X31], #0x40
	0x03BBF6A0 B 0x3BC8490
	0x03BBF6A4 STR X30, [X31 - 0x40]!
	0x03BBF6A8 STP X24, X23, [X31 + 0x10]
	0x03BBF6AC STP X22, X21, [X31 + 0x20]
	0x03BBF6B0 STP X20, X19, [X31 + 0x30]
	0x03BBF6B4 ADRP X20, 0x823000
	0x03BBF6B8 ADRP X24, 0x538000
	0x03BBF6BC ADRP X21, 0x59E000
	0x03BBF6C0 ADRP X22, 0x59E000
	0x03BBF6C4 ADRP X23, 0x59E000
	0x03BBF6C8 LDRB W8, [X20 + 0xD90]
	0x03BBF6CC LDR X24, [X24 + 0x3D8]
	0x03BBF6D0 LDR X21, [X21 + 0x468]
	0x03BBF6D4 LDR X22, [X22 + 0x470]
	0x03BBF6D8 LDR X23, [X23 + 0x460]
	0x03BBF6DC MOV X19, X0
	0x03BBF6E0 TBNZ X8, 0x0, 0x3BBF71C
	0x03BBF6E4 ADRP X0, 0x538000
	0x03BBF6E8 LDR X0, [X0 + 0x3D8]
	0x03BBF6EC BL 0x1C16CF4
	0x03BBF6F0 ADRP X0, 0x59E000
	0x03BBF6F4 LDR X0, [X0 + 0x470]
	0x03BBF6F8 BL 0x1C16CF4
	0x03BBF6FC ADRP X0, 0x59E000
	0x03BBF700 LDR X0, [X0 + 0x468]
	0x03BBF704 BL 0x1C16CF4
	0x03BBF708 ADRP X0, 0x59E000
	0x03BBF70C LDR X0, [X0 + 0x460]
	0x03BBF710 BL 0x1C16CF4
	0x03BBF714 MOVZ W8, 0x1
	0x03BBF718 STRB W8, [X20 + 0xD90]
	0x03BBF71C LDR X0, [X24]
	0x03BBF720 LDR X20, [X19 + 0x38]
	0x03BBF724 BL 0x1C16F10
	0x03BBF728 LDR X2, [X21]
	0x03BBF72C MOV X1, X19
	0x03BBF730 MOV X3, X31
	0x03BBF734 MOV X21, X0
	0x03BBF738 BL 0x2A719B8
	0x03BBF73C LDR X0, [X24]
	0x03BBF740 BL 0x1C16F10
	0x03BBF744 LDR X2, [X22]
	0x03BBF748 MOV X1, X19
	0x03BBF74C MOV X3, X31
	0x03BBF750 MOV X22, X0
	0x03BBF754 BL 0x2A719B8
	0x03BBF758 LDR X0, [X23]
	0x03BBF75C LDR W8, [X0 + 0xE0]
	0x03BBF760 CBNZ W8, 0x3BBF768
	0x03BBF764 BL 0x1C16DFC
	0x03BBF768 MOV X0, X20
	0x03BBF76C MOV X1, X21
	0x03BBF770 MOV X2, X22
	0x03BBF774 LDP X20, X19, [X31 + 0x30]
	0x03BBF778 LDP X22, X21, [X31 + 0x20]
	0x03BBF77C LDP X24, X23, [X31 + 0x10]
	0x03BBF780 LDR X30, [X31], #0x40
	0x03BBF784 B 0x3BC8368
	0x03BBF788 LDR X0, [X0 + 0x40]
	0x03BBF78C RET
	0x03BBF790 STR X30, [X31 - 0x20]!
	0x03BBF794 STP X20, X19, [X31 + 0x10]
	0x03BBF798 MOV X19, X1
	0x03BBF79C MOV X20, X0
	0x03BBF7A0 BL 0x3BBF7B8
	0x03BBF7A4 STR X19, [X20 + 0x40]
	0x03BBF7A8 MOV X0, X20
	0x03BBF7AC LDP X20, X19, [X31 + 0x10]
	0x03BBF7B0 LDR X30, [X31], #0x20
	0x03BBF7B4 B 0x3BBF89C
	0x03BBF7B8 STR X30, [X31 - 0x40]!
	0x03BBF7BC STP X24, X23, [X31 + 0x10]
	0x03BBF7C0 STP X22, X21, [X31 + 0x20]
	0x03BBF7C4 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X30
	003 Move [X31+96], X28
	004 Move [X31+104], X27
	005 Move [X31+112], X26
	006 Move [X31+120], X25
	007 Move [X31+128], X24
	008 Move [X31+136], X23
	009 Move [X31+144], X22
	010 Move [X31+152], X21
	011 Move [X31+160], X20
	012 Move [X31+168], X19
	013 Move [X31+88], S1
	014 Move [X31+96], S0
	015 Move X28, 0x824000
	016 Move [X31+72], S3
	017 Move [X31+80], S2
	018 Move X26, 0x53B000
	019 Move X27, 0x535000
	020 Move W8, [X28+3435]
	021 Move X26, [X26+1976]
	022 Move X27, [X27+2704]
	023 Move X19, X6
	024 Move X20, X5
	025 Move X22, X4
	026 Move X23, X3
	027 Move X24, X2
	028 Move X25, X1
	029 Move X21, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {42}
	034 Move X0, 0x535000
	035 Move X0, [X0+2704]
	036 Call 0x1C17CF4
	037 Move X0, 0x53B000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X28+3435], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move X1, X25
	045 Move [X31+56], V0
	046 Move [X31+40], V0
	047 Move [X31+24], V0
	048 Call 0x1C17E04
	049 Move X8, [X26]
	050 Move [X31], X0
	051 Move X1, X24
	052 Move X0, X8
	053 Call 0x1C17E04
	054 Move X8, [X26]
	055 Move [X31+8], X0
	056 Move X1, X23
	057 Move X0, X8
	058 Call 0x1C17E04
	059 Move X8, [X27]
	060 Move [X31+16], X0
	061 Add X1, X31, 92
	062 Move X0, X8
	063 Call 0x1C17E04
	064 Move X8, [X27]
	065 Move [X31+24], X0
	066 Add X1, X31, 88
	067 Move X0, X8
	068 Call 0x1C17E04
	069 Move X8, [X27]
	070 Move [X31+32], X0
	071 Add X1, X31, 76
	072 Move X0, X8
	073 Call 0x1C17E04
	074 Move X8, [X27]
	075 Move [X31+40], X0
	076 Add X1, X31, 72
	077 Move X0, X8
	078 Call 0x1C17E04
	079 Move X8, [X26]
	080 Move [X31+48], X0
	081 Move X1, X22
	082 Move X0, X8
	083 Call 0x1C17E04
	084 Move [X31+56], X0
	085 Add X1, X31, 0
	086 Move X0, X21
	087 Move X2, X20
	088 Move X3, X19
	089 Call 0x1C17CB0
	090 Move X20, [X31+160]
	091 Move X19, [X31+168]
	092 Move X22, [X31+144]
	093 Move X21, [X31+152]
	094 Move X24, [X31+128]
	095 Move X23, [X31+136]
	096 Move X26, [X31+112]
	097 Move X25, [X31+120]
	098 Move X28, [X31+96]
	099 Move X27, [X31+104]
	100 Move X30, [X31+80]
	101 Add X31, X31, 176
	102 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03BBF7C8 ADRP X20, 0x823000
	0x03BBF7CC ADRP X24, 0x538000
	0x03BBF7D0 ADRP X21, 0x59E000

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

