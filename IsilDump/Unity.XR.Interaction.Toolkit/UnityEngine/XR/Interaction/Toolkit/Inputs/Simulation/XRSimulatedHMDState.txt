Type: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedHMDState

Method: UnityEngine.InputSystem.Utilities.FourCC get_formatId()

Disassembly:
	0x03BCB458 STP X20, X19, [X31 + 0x10]
	0x03BCB45C ADRP X20, 0x817000
	0x03BCB460 ADRP X21, 0x592000
	0x03BCB464 LDRB W8, [X20 + 0xE09]
	0x03BCB468 LDR X21, [X21 + 0x870]
	0x03BCB46C MOV X19, X0
	0x03BCB470 TBNZ X8, 0x0, 0x3BCB488
	0x03BCB474 ADRP X0, 0x592000
	0x03BCB478 LDR X0, [X0 + 0x870]
	0x03BCB47C BL 0x1C16CF4
	0x03BCB480 MOVZ W8, 0x1
	0x03BCB484 STRB W8, [X20 + 0xE09]

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 88
	004 Move W2, 82
	005 Move W3, 83
	006 Move W4, 72
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: UnityEngine.InputSystem.Utilities.FourCC get_format()

Disassembly:
	0x03BCB488 LDR X1, [X21]
	0x03BCB48C MOV X0, X19
	0x03BCB490 LDP X20, X19, [X31 + 0x10]
	0x03BCB494 LDP X30, X21, [X31], #0x20
	0x03BCB498 B 0x264705C
	0x03BCB49C STR X30, [X31 - 0x30]!
	0x03BCB4A0 STP X22, X21, [X31 + 0x10]
	0x03BCB4A4 STP X20, X19, [X31 + 0x20]
	0x03BCB4A8 ADRP X21, 0x817000
	0x03BCB4AC ADRP X22, 0x592000
	0x03BCB4B0 LDRB W8, [X21 + 0xE0A]
	0x03BCB4B4 LDR X22, [X22 + 0x878]

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 8
	003 Move W1, 88
	004 Move W2, 82
	005 Move W3, 83
	006 Move W4, 72
	007 Move X5, X31
	008 Move [X31+8], W31
	009 Call FourCC..ctor, X0, X1, X2, X3, X4
	010 Move W0, [X31+8]
	011 Move X30, [X31+16]
	012 Return X0

Method: System.Void Reset()

Disassembly:
	0x03BCB4B8 MOV X19, X1
	0x03BCB4BC MOV X20, X0
	0x03BCB4C0 TBNZ X8, 0x0, 0x3BCB4D8
	0x03BCB4C4 ADRP X0, 0x592000
	0x03BCB4C8 LDR X0, [X0 + 0x878]
	0x03BCB4CC BL 0x1C16CF4
	0x03BCB4D0 MOVZ W8, 0x1
	0x03BCB4D4 STRB W8, [X21 + 0xE0A]
	0x03BCB4D8 LDR X2, [X22]
	0x03BCB4DC MOV X0, X20
	0x03BCB4E0 MOV X1, X19
	0x03BCB4E4 LDP X20, X19, [X31 + 0x20]
	0x03BCB4E8 LDP X22, X21, [X31 + 0x10]
	0x03BCB4EC LDR X30, [X31], #0x30
	0x03BCB4F0 B 0x29AD964
	0x03BCB4F4 STR X30, [X31 - 0x30]!
	0x03BCB4F8 STP X22, X21, [X31 + 0x10]
	0x03BCB4FC STP X20, X19, [X31 + 0x20]
	0x03BCB500 ADRP X21, 0x817000
	0x03BCB504 ADRP X22, 0x592000
	0x03BCB508 LDRB W8, [X21 + 0xE0B]
	0x03BCB50C LDR X22, [X22 + 0x880]
	0x03BCB510 MOV X19, X1
	0x03BCB514 MOV X20, X0
	0x03BCB518 TBNZ X8, 0x0, 0x3BCB530
	0x03BCB51C ADRP X0, 0x592000
	0x03BCB520 LDR X0, [X0 + 0x880]
	0x03BCB524 BL 0x1C16CF4
	0x03BCB528 MOVZ W8, 0x1
	0x03BCB52C STRB W8, [X21 + 0xE0B]
	0x03BCB530 LDR X2, [X22]
	0x03BCB534 MOV X0, X20
	0x03BCB538 MOV X1, X19
	0x03BCB53C LDP X20, X19, [X31 + 0x20]
	0x03BCB540 LDP X22, X21, [X31 + 0x10]
	0x03BCB544 LDR X30, [X31], #0x30
	0x03BCB548 B 0x29AD994
	0x03BCB54C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move [X0+8], W31
	005 Move [X0], X31
	006 Move X20, 0x80E000
	007 Move W8, [X20+1939]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x52A000
	012 Move X0, [X0+1448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1939], W8
	016 Move X8, 0x52A000
	017 Move X8, [X8+1448]
	018 Move X8, [X8]
	019 Move X9, [X8+184]
	020 Move V0, [X9]
	021 Move [X19+28], X31
	022 Move [X19+36], W31
	023 Move [X19+12], V0
	024 Move X9, [X8+184]
	025 Move V0, [X9]
	026 Move [X19+56], X31
	027 Move [X19+64], W31
	028 Move [X19+40], V0
	029 Move X9, [X8+184]
	030 Move V0, [X9]
	031 Move [X19+92], X31
	032 Move [X19+84], X31
	033 Move [X19+100], W31
	034 Move [X19+68], V0
	035 Move X8, [X8+184]
	036 Move V0, [X8]
	037 Move [X19+101], V0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 

