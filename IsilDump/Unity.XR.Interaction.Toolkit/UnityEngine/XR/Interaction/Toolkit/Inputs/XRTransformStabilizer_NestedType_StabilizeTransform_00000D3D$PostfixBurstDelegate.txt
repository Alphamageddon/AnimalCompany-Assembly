Type: UnityEngine.XR.Interaction.Toolkit.Inputs.XRTransformStabilizer/StabilizeTransform_00000D3D$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03BBED58 LDR W9, [X8 + 0xE0]
	0x03BBED5C CBNZ W9, 0x3BBED6C
	0x03BBED60 MOV X0, X8
	0x03BBED64 BL 0x1C16DFC
	0x03BBED68 LDR X8, [X20]
	0x03BBED6C LDR X8, [X8 + 0xB8]
	0x03BBED70 STR X19, [X8 + 0x8]
	0x03BBED74 LDP X20, X19, [X31 + 0x10]
	0x03BBED78 LDP X30, X21, [X31], #0x20
	0x03BBED7C RET
	0x03BBED80 RET
	0x03BBED84 B 0x3BBECD8
	0x03BBED88 STP X30, X21, [X31 - 0x20]!
	0x03BBED8C STP X20, X19, [X31 + 0x10]
	0x03BBED90 LDR X8, [X2 + 0x8]
	0x03BBED94 STP X1, X2, [X0 + 0x20]
	0x03BBED98 MOV X19, X0
	0x03BBED9C MOV X20, X1
	0x03BBEDA0 STR X8, [X0 + 0x10]
	0x03BBEDA4 LDRB W21, [X2 + 0x52]
	0x03BBEDA8 STR X0, [X0 + 0x40]
	0x03BBEDAC MOV X0, X2
	0x03BBEDB0 BL 0x1C16D84
	0x03BBEDB4 TBZ X0, 0x0, 0x3BBEDCC
	0x03BBEDB8 CMP W21, 0xA
	0x03BBEDBC B.NE 0x3BBEDE8
	0x03BBEDC0 ADRP X8, 0xFFFFFFFFFE043000
	0x03BBEDC4 ADD X8, X8, 0x44
	0x03BBEDC8 B 0x3BBEDDC
	0x03BBEDCC CMP W21, 0x9
	0x03BBEDD0 B.NE 0x3BBEDE4
	0x03BBEDD4 ADRP X8, 0xFFFFFFFFFE043000
	0x03BBEDD8 ADD X8, X8, 0x14
	0x03BBEDDC STR X8, [X19 + 0x18]
	0x03BBEDE0 B 0x3BBEDF8
	0x03BBEDE4 CBZ X20, 0x3BBEE10
	0x03BBEDE8 LDR X8, [X19 + 0x10]
	0x03BBEDEC LDR X9, [X19 + 0x20]
	0x03BBEDF0 STR X8, [X19 + 0x18]
	0x03BBEDF4 STR X9, [X19 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33280000
	021 Add X8, X8, 3312
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33280000
	024 Add X8, X8, 3276
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33280000
	033 Add X8, X8, 3100
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50995200
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 startPos, in Unity.Mathematics.quaternion startRot, in Unity.Mathematics.float3 targetPos, in Unity.Mathematics.quaternion targetRot, System.Single deltaTime, System.Single positionStabilization, System.Single angleStabilization, out Unity.Mathematics.float3 resultPos, out Unity.Mathematics.quaternion resultRot)

Disassembly:
	0x03BBEDF8 ADRP X8, 0xFFFFFFFFFE042000
	0x03BBEDFC ADD X8, X8, 0xF54
	0x03BBEE00 STR X8, [X19 + 0x38]
	0x03BBEE04 LDP X20, X19, [X31 + 0x10]
	0x03BBEE08 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X8, [X0+64]
	002 Move X9, [X0+24]
	003 Move X7, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X9

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 startPos, in Unity.Mathematics.quaternion startRot, in Unity.Mathematics.float3 targetPos, in Unity.Mathematics.quaternion targetRot, System.Single deltaTime, System.Single positionStabilization, System.Single angleStabilization, out Unity.Mathematics.float3 resultPos, out Unity.Mathematics.quaternion resultRot, System.AsyncCallback param_9, System.Object param_10)

Disassembly:
	0x03BBEE0C RET
	0x03BBEE10 ADRP X1, 0xFFFFFFFFFCF5D000
	0x03BBEE14 ADD X1, X1, 0xEE3
	0x03BBEE18 MOV X0, X31
	0x03BBEE1C BL 0x1C16F3C
	0x03BBEE20 MOV X1, X31
	0x03BBEE24 BL 0x1C16DEC
	0x03BBEE28 LDR X8, [X31]
	0x03BBEE2C LDR X9, [X0 + 0x18]
	0x03BBEE30 LDR X10, [X0 + 0x28]
	0x03BBEE34 LDR X0, [X0 + 0x40]
	0x03BBEE38 STP X8, X10, [X31]
	0x03BBEE3C BR X9
	0x03BBEE40 SUB X31, X31, 0xE0
	0x03BBEE44 STP X29, X30, [X31 + 0x80]
	0x03BBEE48 STP X28, X27, [X31 + 0x90]
	0x03BBEE4C STP X26, X25, [X31 + 0xA0]
	0x03BBEE50 STP X24, X23, [X31 + 0xB0]
	0x03BBEE54 STP X22, X21, [X31 + 0xC0]
	0x03BBEE58 STP X20, X19, [X31 + 0xD0]
	0x03BBEE5C LDR X8, [X31 + 0xF0]
	0x03BBEE60 STP S1, S0, [X31 + 0x78]
	0x03BBEE64 ADRP X21, 0x824000
	0x03BBEE68 ADRP X20, 0x560000
	0x03BBEE6C STP X0, X8, [X31 + 0x10]
	0x03BBEE70 LDP X23, X8, [X31 + 0xE0]
	0x03BBEE74 ADRP X19, 0x535000
	0x03BBEE78 MOV X22, X7
	0x03BBEE7C MOV X24, X6
	0x03BBEE80 STR X8, [X31 + 0x8]
	0x03BBEE84 LDRB W8, [X21 + 0xD75]
	0x03BBEE88 LDR X20, [X20 + 0x838]
	0x03BBEE8C LDR X19, [X19 + 0xA90]
	0x03BBEE90 MOV X25, X5
	0x03BBEE94 MOV X26, X4
	0x03BBEE98 MOV X27, X3
	0x03BBEE9C MOV X28, X2
	0x03BBEEA0 MOV X29, X1
	0x03BBEEA4 TBNZ X8, 0x0, 0x3BBEED4
	0x03BBEEA8 ADRP X0, 0x535000
	0x03BBEEAC LDR X0, [X0 + 0xA90]
	0x03BBEEB0 BL 0x1C16CF4
	0x03BBEEB4 ADRP X0, 0x560000
	0x03BBEEB8 LDR X0, [X0 + 0x838]
	0x03BBEEBC BL 0x1C16CF4
	0x03BBEEC0 ADRP X0, 0x53B000
	0x03BBEEC4 LDR X0, [X0 + 0x7B8]
	0x03BBEEC8 BL 0x1C16CF4
	0x03BBEECC MOVZ W8, 0x1
	0x03BBEED0 STRB W8, [X21 + 0xD75]
	0x03BBEED4 LDR X0, [X20]
	0x03BBEED8 MOVI V0.2D, 0x0
	0x03BBEEDC MOV X1, X29
	0x03BBEEE0 STUR V0, [X31 + 0x68]
	0x03BBEEE4 STUR V0, [X31 + 0x58]
	0x03BBEEE8 STUR V0, [X31 + 0x48]
	0x03BBEEEC BL 0x1C16E04
	0x03BBEEF0 LDR X8, [X20]
	0x03BBEEF4 STR X0, [X31 + 0x20]
	0x03BBEEF8 MOV X1, X28
	0x03BBEEFC MOV X0, X8
	0x03BBEF00 BL 0x1C16E04
	0x03BBEF04 LDR X8, [X20]
	0x03BBEF08 STR X0, [X31 + 0x28]
	0x03BBEF0C MOV X1, X27
	0x03BBEF10 MOV X0, X8
	0x03BBEF14 BL 0x1C16E04
	0x03BBEF18 LDR X8, [X20]
	0x03BBEF1C STR X0, [X31 + 0x30]
	0x03BBEF20 MOV X1, X26
	0x03BBEF24 MOV X0, X8
	0x03BBEF28 BL 0x1C16E04
	0x03BBEF2C LDR X8, [X20]
	0x03BBEF30 STR X0, [X31 + 0x38]
	0x03BBEF34 MOV X1, X25
	0x03BBEF38 MOV X0, X8
	0x03BBEF3C BL 0x1C16E04
	0x03BBEF40 LDR X8, [X19]
	0x03BBEF44 STR X0, [X31 + 0x40]
	0x03BBEF48 ADD X1, X31, 0x7C
	0x03BBEF4C MOV X0, X8
	0x03BBEF50 BL 0x1C16E04
	0x03BBEF54 LDR X8, [X19]
	0x03BBEF58 STR X0, [X31 + 0x48]
	0x03BBEF5C ADD X1, X31, 0x78
	0x03BBEF60 MOV X0, X8
	0x03BBEF64 BL 0x1C16E04
	0x03BBEF68 ADRP X8, 0x53B000
	0x03BBEF6C LDR X8, [X8 + 0x7B8]
	0x03BBEF70 STR X0, [X31 + 0x50]
	0x03BBEF74 MOV X1, X24
	0x03BBEF78 LDR X8, [X8]
	0x03BBEF7C MOV X0, X8
	0x03BBEF80 BL 0x1C16E04
	0x03BBEF84 LDR X8, [X19]
	0x03BBEF88 STR X0, [X31 + 0x58]
	0x03BBEF8C MOV X1, X22

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move [X31], X6
	015 Move [X31+8], X7
	016 Move [X31+104], S1
	017 Move [X31+112], S0
	018 Move X20, 0x825000
	019 Move [X31+100], S2
	020 Move X29, 0x561000
	021 Move X28, 0x53C000
	022 Move X19, 0x536000
	023 Move X21, [X31+208]
	024 Move W8, [X20+3425]
	025 Move X29, [X29+2104]
	026 Move X28, [X28+1976]
	027 Move X19, [X19+2704]
	028 Move X23, X5
	029 Move X24, X4
	030 Move X25, X3
	031 Move X26, X2
	032 Move X27, X1
	033 Move X22, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {49}
	038 Move X0, 0x536000
	039 Move X0, [X0+2704]
	040 Call 0x1C17CF4
	041 Move X0, 0x561000
	042 Move X0, [X0+2104]
	043 Call 0x1C17CF4
	044 Move X0, 0x53C000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+3425], W8
	049 Move X0, [X29]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move X1, X27
	052 Move [X31+64], V0
	053 Move [X31+72], V0
	054 Move [X31+3], V0
	055 Call 0x1C17E04
	056 Move X8, [X28]
	057 Move [X31+16], X0
	058 Move X1, X26
	059 Move X0, X8
	060 Call 0x1C17E04
	061 Move X8, [X29]
	062 Move [X31+24], X0
	063 Move X1, X25
	064 Move X0, X8
	065 Call 0x1C17E04
	066 Move X8, [X28]
	067 Move [X31+32], X0
	068 Move X1, X24
	069 Move X0, X8
	070 Call 0x1C17E04
	071 Move X8, [X19]
	072 Move [X31+40], X0
	073 Add X1, X31, 108
	074 Move X0, X8
	075 Call 0x1C17E04
	076 Move X8, [X19]
	077 Move [X31+48], X0
	078 Add X1, X31, 104
	079 Move X0, X8
	080 Call 0x1C17E04
	081 Move X8, [X19]
	082 Move [X31+56], X0
	083 Add X1, X31, 100
	084 Move X0, X8
	085 Call 0x1C17E04
	086 Move X8, [X29]
	087 Move [X31+64], X0
	088 Move X1, X23
	089 Move X0, X8
	090 Call 0x1C17E04
	091 Move X8, [X28]
	092 Move X1, [X31]
	093 Move [X31+72], X0
	094 Move X0, X8
	095 Call 0x1C17E04
	096 Move X2, [X31+8]
	097 Move [X31+80], X0
	098 Add X1, X31, 16
	099 Move X0, X22
	100 Move X3, X21
	101 Call 0x1C17CB0
	102 Move X20, [X31+192]
	103 Move X19, [X31+200]
	104 Move X22, [X31+176]
	105 Move X21, [X31+184]
	106 Move X24, [X31+160]
	107 Move X23, [X31+168]
	108 Move X26, [X31+144]
	109 Move X25, [X31+152]
	110 Move X28, [X31+128]
	111 Move X27, [X31+136]
	112 Move X29, [X31+112]
	113 Move X30, [X31+120]
	114 Add X31, X31, 208
	115 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03BBEF90 MOV X0, X8
	0x03BBEF94 BL 0x1C16E04
	0x03BBEF98 LDR X8, [X19]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

