Type: UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager

Method: UnityEngine.GameObject get_leftHand()

Disassembly:
	0x03BBACC4 MOV W1, W31
	0x03BBACC8 BLR X3

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_leftHand(UnityEngine.GameObject value)

Disassembly:
	0x03BBACCC LDR X0, [X20 + 0x60]
	0x03BBACD0 CBZ X0, 0x3BBACE4

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: UnityEngine.GameObject get_rightHand()

Disassembly:
	0x03BBACD4 MOV X1, X19
	0x03BBACD8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_rightHand(UnityEngine.GameObject value)

Disassembly:
	0x03BBACDC LDP X30, X21, [X31], #0x20
	0x03BBACE0 B 0x3BBAF34

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: UnityEngine.GameObject get_leftController()

Disassembly:
	0x03BBACE4 BL 0x1C16F20
	0x03BBACE8 MOVZ W0, 0x164

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_leftController(UnityEngine.GameObject value)

Disassembly:
	0x03BBACEC RET
	0x03BBACF0 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: UnityEngine.GameObject get_rightController()

Disassembly:
	0x03BBACF4 STP X24, X23, [X31 + 0x10]
	0x03BBACF8 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_rightController(UnityEngine.GameObject value)

Disassembly:
	0x03BBACFC STP X20, X19, [X31 + 0x30]
	0x03BBAD00 ADRP X21, 0x828000

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: UnityEngine.Events.UnityEvent get_trackedHandModeStarted()

Disassembly:
	0x03BBAD04 ADRP X22, 0x5A3000
	0x03BBAD08 LDRB W8, [X21 + 0xD55]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_trackedHandModeStarted(UnityEngine.Events.UnityEvent value)

Disassembly:
	0x03BBAD0C LDR X22, [X22 + 0x320]
	0x03BBAD10 MOV X19, X1

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: UnityEngine.Events.UnityEvent get_trackedHandModeEnded()

Disassembly:
	0x03BBAD14 MOV W20, W0
	0x03BBAD18 TBNZ X8, 0x0, 0x3BBAD60

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_trackedHandModeEnded(UnityEngine.Events.UnityEvent value)

Disassembly:
	0x03BBAD1C ADRP X0, 0x561000
	0x03BBAD20 LDR X0, [X0 + 0x148]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: UnityEngine.Events.UnityEvent get_motionControllerModeStarted()

Disassembly:
	0x03BBAD24 BL 0x1C16CF4
	0x03BBAD28 ADRP X0, 0x561000

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_motionControllerModeStarted(UnityEngine.Events.UnityEvent value)

Disassembly:
	0x03BBAD2C LDR X0, [X0 + 0x150]
	0x03BBAD30 BL 0x1C16CF4

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: UnityEngine.Events.UnityEvent get_motionControllerModeEnded()

Disassembly:
	0x03BBAD34 ADRP X0, 0x561000
	0x03BBAD38 LDR X0, [X0 + 0x158]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_motionControllerModeEnded(UnityEngine.Events.UnityEvent value)

Disassembly:
	0x03BBAD3C BL 0x1C16CF4
	0x03BBAD40 ADRP X0, 0x561000

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager/InputMode> get_currentInputMode()

Disassembly:
	0x03BBAD44 LDR X0, [X0 + 0x160]
	0x03BBAD48 BL 0x1C16CF4
	0x03BBAD4C ADRP X0, 0x5A3000
	0x03BBAD50 LDR X0, [X0 + 0x320]
	0x03BBAD54 BL 0x1C16CF4
	0x03BBAD58 MOVZ W8, 0x1
	0x03BBAD5C STRB W8, [X21 + 0xD55]
	0x03BBAD60 LDR X8, [X22]
	0x03BBAD64 LDR X8, [X8 + 0xB8]
	0x03BBAD68 LDR X0, [X8]
	0x03BBAD6C CBNZ X0, 0x3BBADAC
	0x03BBAD70 ADRP X8, 0x561000
	0x03BBAD74 LDR X8, [X8 + 0x160]
	0x03BBAD78 LDR X0, [X8]
	0x03BBAD7C BL 0x1C16F10
	0x03BBAD80 ADRP X8, 0x561000
	0x03BBAD84 LDR X8, [X8 + 0x148]
	0x03BBAD88 MOV X21, X0
	0x03BBAD8C LDR X1, [X8]
	0x03BBAD90 BL 0x2FD0B40
	0x03BBAD94 LDR X8, [X22]
	0x03BBAD98 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x829000
	005 Move X19, 0x5A3000
	006 Move W8, [X20+3372]
	007 Move X19, [X19+3456]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5A3000
	013 Move X0, [X0+3456]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3372], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void OnEnable()

Disassembly:
	0x03BBAD9C STR X21, [X8]
	0x03BBADA0 LDR X8, [X22]
	0x03BBADA4 LDR X8, [X8 + 0xB8]
	0x03BBADA8 LDR X0, [X8]
	0x03BBADAC MOV X1, X31
	0x03BBADB0 BL 0x3E64C4C
	0x03BBADB4 LDR X8, [X22]
	0x03BBADB8 LDR X8, [X8 + 0xB8]
	0x03BBADBC LDR X0, [X8]
	0x03BBADC0 CBZ X0, 0x3BBAE14
	0x03BBADC4 ADRP X23, 0x561000
	0x03BBADC8 LDR X23, [X23 + 0x158]
	0x03BBADCC MOV W21, W31
	0x03BBADD0 LDR W24, [X0 + 0x18]
	0x03BBADD4 CMP W21, W24
	0x03BBADD8 B.GE 0x3BBAE18
	0x03BBADDC LDR X2, [X23]
	0x03BBADE0 MOV W1, W21
	0x03BBADE4 BL 0x2FD1048
	0x03BBADE8 STP X0, X1, [X19]
	0x03BBADEC MOV X0, X19
	0x03BBADF0 MOV X1, X31
	0x03BBADF4 BL 0x3E63E34
	0x03BBADF8 CMP W0, W20
	0x03BBADFC B.EQ 0x3BBAE1C
	0x03BBAE00 LDR X8, [X22]
	0x03BBAE04 ADD W21, W21, 0x1
	0x03BBAE08 LDR X8, [X8 + 0xB8]
	0x03BBAE0C LDR X0, [X8]
	0x03BBAE10 CBNZ X0, 0x3BBADD0
	0x03BBAE14 BL 0x1C16F20
	0x03BBAE18 STP X31, X31, [X19]
	0x03BBAE1C CMP W21, W24
	0x03BBAE20 LDP X20, X19, [X31 + 0x30]
	0x03BBAE24 LDP X22, X21, [X31 + 0x20]
	0x03BBAE28 LDP X24, X23, [X31 + 0x10]
	0x03BBAE2C CSET W0, LT
	0x03BBAE30 LDR X30, [X31], #0x40
	0x03BBAE34 RET
	0x03BBAE38 SUB X31, X31, 0x40
	0x03BBAE3C STP X30, X21, [X31 + 0x20]
	0x03BBAE40 STP X20, X19, [X31 + 0x30]
	0x03BBAE44 ADRP X21, 0x828000
	0x03BBAE48 LDRB W8, [X21 + 0xD35]
	0x03BBAE4C MOV X20, X3
	0x03BBAE50 MOV X19, X0
	0x03BBAE54 STP X1, X2, [X31 + 0x10]
	0x03BBAE58 TBNZ X8, 0x0, 0x3BBAE70
	0x03BBAE5C ADRP X0, 0x53E000
	0x03BBAE60 LDR X0, [X0 + 0x158]
	0x03BBAE64 BL 0x1C16CF4
	0x03BBAE68 MOVZ W8, 0x1
	0x03BBAE6C STRB W8, [X21 + 0xD35]
	0x03BBAE70 ADD X0, X31, 0x10
	0x03BBAE74 MOV X1, X31
	0x03BBAE78 STRB W31, [X31 + 0xC]
	0x03BBAE7C BL 0x3E63D7C
	0x03BBAE80 TBZ X0, 0x0, 0x3BBAEE4
	0x03BBAE84 ADRP X21, 0x53E000
	0x03BBAE88 LDR X21, [X21 + 0x158]
	0x03BBAE8C LDR X0, [X21]
	0x03BBAE90 LDR W8, [X0 + 0xE0]
	0x03BBAE94 CBNZ W8, 0x3BBAEA0
	0x03BBAE98 BL 0x1C16DFC
	0x03BBAE9C LDR X0, [X21]
	0x03BBAEA0 LDR X8, [X0 + 0xB8]
	0x03BBAEA4 ADD X0, X31, 0x10
	0x03BBAEA8 ADD X2, X31, 0xC
	0x03BBAEAC MOV X3, X31
	0x03BBAEB0 LDR X1, [X8]
	0x03BBAEB4 BL 0x3E641D0
	0x03BBAEB8 CBZ X20, 0x3BBAF28
	0x03BBAEBC LDRB W10, [X31 + 0xC]
	0x03BBAEC0 MOV W8, W0
	0x03BBAEC4 LDR X9, [X20 + 0x18]
	0x03BBAEC8 LDR X0, [X20 + 0x40]
	0x03BBAECC LDR X2, [X20 + 0x28]
	0x03BBAED0 AND W8, W8, W10, 0x0
	0x03BBAED4 TBZ X8, 0x0, 0x3BBAF00
	0x03BBAED8 MOVZ W1, 0x2
	0x03BBAEDC BLR X9
	0x03BBAEE0 B 0x3BBAF18
	0x03BBAEE4 CBZ X20, 0x3BBAF28
	0x03BBAEE8 LDR X8, [X20 + 0x18]
	0x03BBAEEC LDR X0, [X20 + 0x40]
	0x03BBAEF0 LDR X2, [X20 + 0x28]
	0x03BBAEF4 MOV W1, W31
	0x03BBAEF8 BLR X8
	0x03BBAEFC B 0x3BBAF18
	0x03BBAF00 MOV W1, W31
	0x03BBAF04 BLR X9
	0x03BBAF08 LDR X0, [X19 + 0x68]
	0x03BBAF0C CBZ X0, 0x3BBAF28
	0x03BBAF10 LDP X1, X2, [X31 + 0x10]
	0x03BBAF14 BL 0x3BBB014
	0x03BBAF18 LDP X20, X19, [X31 + 0x30]
	0x03BBAF1C LDP X30, X21, [X31 + 0x20]
	0x03BBAF20 ADD X31, X31, 0x40
	0x03BBAF24 RET
	0x03BBAF28 BL 0x1C16F20
	0x03BBAF2C MOVZ W0, 0x264
	0x03BBAF30 RET
	0x03BBAF34 STP X30, X21, [X31 - 0x20]!
	0x03BBAF38 STP X20, X19, [X31 + 0x10]
	0x03BBAF3C ADRP X21, 0x828000
	0x03BBAF40 LDRB W8, [X21 + 0xD3D]
	0x03BBAF44 MOV X20, X1
	0x03BBAF48 MOV X19, X0
	0x03BBAF4C TBNZ X8, 0x0, 0x3BBAF70
	0x03BBAF50 ADRP X0, 0x53A000
	0x03BBAF54 LDR X0, [X0 + 0xE10]
	0x03BBAF58 BL 0x1C16CF4
	0x03BBAF5C ADRP X0, 0x53D000
	0x03BBAF60 LDR X0, [X0 + 0xB68]
	0x03BBAF64 BL 0x1C16CF4
	0x03BBAF68 MOVZ W8, 0x1
	0x03BBAF6C STRB W8, [X21 + 0xD3D]
	0x03BBAF70 CBZ X20, 0x3BBB010
	0x03BBAF74 LDR X0, [X19 + 0x18]
	0x03BBAF78 CBZ X0, 0x3BBB010
	0x03BBAF7C ADRP X8, 0x53D000
	0x03BBAF80 LDR X8, [X8 + 0xB68]
	0x03BBAF84 LDR W1, [X20 + 0xE0]
	0x03BBAF88 LDR X2, [X8]
	0x03BBAF8C BL 0x2FDCA84
	0x03BBAF90 TBZ X0, 0x0, 0x3BBAFA0
	0x03BBAF94 LDP X20, X19, [X31 + 0x10]
	0x03BBAF98 LDP X30, X21, [X31], #0x20
	0x03BBAF9C RET
	0x03BBAFA0 LDR X0, [X19 + 0x18]
	0x03BBAFA4 CBZ X0, 0x3BBB010
	0x03BBAFA8 ADRP X9, 0x53A000
	0x03BBAFAC LDR W1, [X20 + 0xE0]
	0x03BBAFB0 LDR X9, [X9 + 0xE10]
	0x03BBAFB4 LDR W10, [X0 + 0x1C]
	0x03BBAFB8 LDR X8, [X0 + 0x10]
	0x03BBAFBC LDR X9, [X9]
	0x03BBAFC0 ADD W10, W10, 0x1
	0x03BBAFC4 STR W10, [X0 + 0x1C]
	0x03BBAFC8 CBZ X8, 0x3BBB010
	0x03BBAFCC LDRSW X10, [X0 + 0x18]
	0x03BBAFD0 LDR W11, [X8 + 0x18]
	0x03BBAFD4 CMP W10, W11
	0x03BBAFD8 B.CS 0x3BBAFF0
	0x03BBAFDC ADD W9, W10, 0x1
	0x03BBAFE0 ADD X8, X8, X10, 0x2, LSL
	0x03BBAFE4 STR W9, [X0 + 0x18]
	0x03BBAFE8 STR W1, [X8 + 0x20]
	0x03BBAFEC B 0x3BBB000
	0x03BBAFF0 LDR X8, [X9 + 0x20]
	0x03BBAFF4 LDR X8, [X8 + 0xC0]
	0x03BBAFF8 LDR X2, [X8 + 0x70]
	0x03BBAFFC BL 0x2FDC70C
	0x03BBB000 MOV X0, X19
	0x03BBB004 LDP X20, X19, [X31 + 0x10]
	0x03BBB008 LDP X30, X21, [X31], #0x20
	0x03BBB00C B 0x3BBBA14
	0x03BBB010 BL 0x1C16F20
	0x03BBB014 STR X30, [X31 - 0x30]!
	0x03BBB018 STP X22, X21, [X31 + 0x10]
	0x03BBB01C STP X20, X19, [X31 + 0x20]
	0x03BBB020 ADRP X22, 0x827000
	0x03BBB024 LDRB W8, [X22 + 0xD46]
	0x03BBB028 MOV X20, X2
	0x03BBB02C MOV X21, X1
	0x03BBB030 MOV X19, X0
	0x03BBB034 TBNZ X8, 0x0, 0x3BBB058
	0x03BBB038 ADRP X0, 0x5A2000
	0x03BBB03C LDR X0, [X0 + 0x328]
	0x03BBB040 BL 0x1C16CF4
	0x03BBB044 ADRP X0, 0x5A2000
	0x03BBB048 LDR X0, [X0 + 0x330]
	0x03BBB04C BL 0x1C16CF4
	0x03BBB050 MOVZ W8, 0x1
	0x03BBB054 STRB W8, [X22 + 0xD46]
	0x03BBB058 LDR X0, [X19 + 0x18]
	0x03BBB05C CBZ X0, 0x3BBB104
	0x03BBB060 ADRP X8, 0x5A2000
	0x03BBB064 LDR X8, [X8 + 0x330]
	0x03BBB068 MOV X1, X21
	0x03BBB06C MOV X2, X20
	0x03BBB070 LDR X3, [X8]
	0x03BBB074 BL 0x2FD16DC
	0x03BBB078 TBZ X0, 0x0, 0x3BBB08C

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x829000
	013 Move X21, 0x53A000
	014 Move W8, [X20+3373]
	015 Move X21, [X21+1432]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0x5A4000
	022 Move X0, [X0+696]
	023 Call 0x1C17CF4
	024 Move X0, 0x5A4000
	025 Move X0, [X0+704]
	026 Call 0x1C17CF4
	027 Move X0, 0x58E000
	028 Move X0, [X0+2952]
	029 Call 0x1C17CF4
	030 Move X0, 0x53A000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x562000
	034 Move X0, [X0+624]
	035 Call 0x1C17CF4
	036 Move X0, 0x53A000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x5A4000
	040 Move X0, [X0+712]
	041 Call 0x1C17CF4
	042 Move X0, 0x5A4000
	043 Move X0, [X0+720]
	044 Call 0x1C17CF4
	045 Move X0, 0x5A4000
	046 Move X0, [X0+728]
	047 Call 0x1C17CF4
	048 Move X0, 0x5A4000
	049 Move X0, [X0+736]
	050 Call 0x1C17CF4
	051 Move X0, 0x5A4000
	052 Move X0, [X0+744]
	053 Call 0x1C17CF4
	054 Move X0, 0x5A4000
	055 Move X0, [X0+752]
	056 Call 0x1C17CF4
	057 Move X0, 0x5A4000
	058 Move X0, [X0+760]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+3373], W8
	062 Move X0, [X21]
	063 Move X20, [X19+32]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X23, 0x58E000
	069 Move X26, 0x5A4000
	070 Move X24, 0x562000
	071 Move X23, [X23+2952]
	072 Move X26, [X26+728]
	073 Move X24, [X24+624]
	074 Move X0, X20
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Inequality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {96}
	082 Move X0, [X21]
	083 Move X20, [X19+40]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X31
	090 Move X2, X31
	091 Call Object.op_Inequality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {109}
	096 Move X8, 0x53A000
	097 Move X8, [X8+2600]
	098 Move X20, 0x5A4000
	099 Move X0, [X8]
	100 Move W8, [X0+224]
	101 Move X20, [X20+760]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, [X20]
	106 Move X1, X19
	107 Move X2, X31
	108 Call Debug.LogWarning, X0, X1
	109 Move X22, 0x5A4000
	110 Move X28, 0x5A4000
	111 Move X27, 0x5A4000
	112 Move X22, [X22+704]
	113 Move X28, [X28+744]
	114 Move X27, [X27+752]
	115 Move X0, [X23]
	116 Move X25, 0x5A4000
	117 Move X23, 0x5A4000
	118 Move X21, 0x5A4000
	119 Move X25, [X25+736]
	120 Move X23, [X23+696]
	121 Move X21, [X21+712]
	122 Call 0x1C17F10
	123 Move X2, [X26]
	124 Move X1, X19
	125 Move X3, X31
	126 Move X20, X0
	127 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	128 Move X0, [X24]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X20
	134 Move X1, X31
	135 Call InputSystem.add_onDeviceChange, X0
	136 Move X0, [X22]
	137 Call 0x1C17F10
	138 Move X2, [X28]
	139 Move X1, X19
	140 Move X3, X31
	141 Move X20, X0
	142 Call Action`1<InputDevice>..ctor, X0, X1, X2
	143 Move X0, X20
	144 Move X1, X31
	145 Call InputDevices.add_deviceConnected, X0
	146 Move X0, [X22]
	147 Call 0x1C17F10
	148 Move X2, [X27]
	149 Move X1, X19
	150 Move X3, X31
	151 Move X20, X0
	152 Call Action`1<InputDevice>..ctor, X0, X1, X2
	153 Move X0, X20
	154 Move X1, X31
	155 Call InputDevices.add_deviceDisconnected, X0
	156 Move X0, [X22]
	157 Call 0x1C17F10
	158 Move X2, [X25]
	159 Move X1, X19
	160 Move X3, X31
	161 Move X20, X0
	162 Call Action`1<InputDevice>..ctor, X0, X1, X2
	163 Move X0, X20
	164 Move X1, X31
	165 Call InputDevices.add_deviceConfigChanged, X0
	166 Move X0, [X23]
	167 Move X20, [X19+96]
	168 Call 0x1C17F10
	169 Move X2, [X21]
	170 Move X1, X19
	171 Move X3, X31
	172 Move X21, X0
	173 Call Action`1<Object>..ctor, X0, X1, X2
	174 Compare X20, 0
	175 JumpIfEqual {210}
	176 Move X23, 0x5A3000
	177 Move X23, [X23+720]
	178 Move X0, X20
	179 Move X1, X21
	180 Call TrackedDeviceMonitor.add_trackingAcquired, X0, X1
	181 Move X0, [X22]
	182 Move X20, [X19+104]
	183 Call 0x1C17F10
	184 Move X2, [X23]
	185 Move X1, X19
	186 Move X3, X31
	187 Move X21, X0
	188 Call Action`1<InputDevice>..ctor, X0, X1, X2
	189 Compare X20, 0
	190 JumpIfEqual {210}
	191 Move X0, X20
	192 Move X1, X21
	193 Call InputDeviceMonitor.add_trackingAcquired, X0, X1
	194 Move X0, X19
	195 Call XRInputModalityManager.UpdateLeftMode, X0
	196 Move X0, X19
	197 Move X20, [X31+80]
	198 Move X19, [X31+88]
	199 Move X22, [X31+64]
	200 Move X21, [X31+72]
	201 Move X24, [X31+48]
	202 Move X23, [X31+56]
	203 Move X26, [X31+32]
	204 Move X25, [X31+40]
	205 Move X28, [X31+16]
	206 Move X27, [X31+24]
	207 Move X30, [X31+96]
	208 Call XRInputModalityManager.UpdateRightMode, X0
	209 Return 
	210 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03BBB4C0 B 0x3BBB4D0
	0x03BBB4C4 ADRP X22, 0x5A2000
	0x03BBB4C8 LDR X20, [X31]
	0x03BBB4CC LDR X22, [X22 + 0x308]
	0x03BBB4D0 ADRP X8, 0x5A1000
	0x03BBB4D4 LDR X8, [X8 + 0xD18]
	0x03BBB4D8 LDR X21, [X31 + 0x8]
	0x03BBB4DC LDR X0, [X8]
	0x03BBB4E0 BL 0x1C16F10
	0x03BBB4E4 LDR X2, [X22]
	0x03BBB4E8 MOV X1, X19
	0x03BBB4EC MOV X3, X31
	0x03BBB4F0 MOV X22, X0
	0x03BBB4F4 BL 0x2984034
	0x03BBB4F8 MOV X0, X19
	0x03BBB4FC MOV X1, X20
	0x03BBB500 MOV X2, X21
	0x03BBB504 MOV X3, X22
	0x03BBB508 BL 0x3BBAE38
	0x03BBB50C LDP X20, X19, [X31 + 0x30]
	0x03BBB510 LDP X22, X21, [X31 + 0x20]
	0x03BBB514 LDR X30, [X31 + 0x10]
	0x03BBB518 ADD X31, X31, 0x40
	0x03BBB51C RET
	0x03BBB520 SUB X31, X31, 0x20
	0x03BBB524 STP X30, X19, [X31 + 0x10]
	0x03BBB528 STP X1, X2, [X31]
	0x03BBB52C MOV X19, X0
	0x03BBB530 LDR X0, [X0 + 0x68]
	0x03BBB534 CBZ X0, 0x3BBB580
	0x03BBB538 BL 0x3BBB584
	0x03BBB53C ADD X0, X31, 0x0
	0x03BBB540 MOV X1, X31
	0x03BBB544 BL 0x3E63E34
	0x03BBB548 CMP W0, 0x264
	0x03BBB54C B.EQ 0x3BBB568
	0x03BBB550 CMP W0, 0x164
	0x03BBB554 B.NE 0x3BBB574
	0x03BBB558 MOV X0, X19
	0x03BBB55C MOV W1, W31
	0x03BBB560 BL 0x3BBA95C
	0x03BBB564 B 0x3BBB574
	0x03BBB568 MOV X0, X19
	0x03BBB56C MOV W1, W31
	0x03BBB570 BL 0x3BBABBC
	0x03BBB574 LDP X30, X19, [X31 + 0x10]
	0x03BBB578 ADD X31, X31, 0x20
	0x03BBB57C RET
	0x03BBB580 BL 0x1C16F20
	0x03BBB584 STR X30, [X31 - 0x30]!
	0x03BBB588 STP X22, X21, [X31 + 0x10]
	0x03BBB58C STP X20, X19, [X31 + 0x20]
	0x03BBB590 ADRP X22, 0x827000
	0x03BBB594 LDRB W8, [X22 + 0xD47]
	0x03BBB598 MOV X20, X2
	0x03BBB59C MOV X21, X1
	0x03BBB5A0 MOV X19, X0
	0x03BBB5A4 TBNZ X8, 0x0, 0x3BBB5C8
	0x03BBB5A8 ADRP X0, 0x5A2000
	0x03BBB5AC LDR X0, [X0 + 0x340]
	0x03BBB5B0 BL 0x1C16CF4
	0x03BBB5B4 ADRP X0, 0x560000
	0x03BBB5B8 LDR X0, [X0 + 0x150]
	0x03BBB5BC BL 0x1C16CF4
	0x03BBB5C0 MOVZ W8, 0x1
	0x03BBB5C4 STRB W8, [X22 + 0xD47]
	0x03BBB5C8 LDR X0, [X19 + 0x18]
	0x03BBB5CC CBZ X0, 0x3BBB620
	0x03BBB5D0 ADRP X8, 0x5A2000
	0x03BBB5D4 LDR X8, [X8 + 0x340]
	0x03BBB5D8 MOV X1, X21
	0x03BBB5DC MOV X2, X20
	0x03BBB5E0 LDR X3, [X8]
	0x03BBB5E4 BL 0x2FD2BD0
	0x03BBB5E8 TBZ X0, 0x0, 0x3BBB5FC
	0x03BBB5EC LDR X8, [X19 + 0x18]
	0x03BBB5F0 CBZ X8, 0x3BBB620
	0x03BBB5F4 LDR W8, [X8 + 0x18]
	0x03BBB5F8 CBZ W8, 0x3BBB60C
	0x03BBB5FC LDP X20, X19, [X31 + 0x20]
	0x03BBB600 LDP X22, X21, [X31 + 0x10]
	0x03BBB604 LDR X30, [X31], #0x30
	0x03BBB608 RET
	0x03BBB60C MOV X0, X19
	0x03BBB610 LDP X20, X19, [X31 + 0x20]
	0x03BBB614 LDP X22, X21, [X31 + 0x10]
	0x03BBB618 LDR X30, [X31], #0x30
	0x03BBB61C B 0x3BBBDEC
	0x03BBB620 BL 0x1C16F20
	0x03BBB624 B 0x3BBB448
	0x03BBB628 STR X30, [X31 - 0x30]!
	0x03BBB62C STP X22, X21, [X31 + 0x10]
	0x03BBB630 STP X20, X19, [X31 + 0x20]
	0x03BBB634 ADRP X21, 0x827000
	0x03BBB638 LDRB W8, [X21 + 0xD38]
	0x03BBB63C MOV X20, X1
	0x03BBB640 MOV X19, X0
	0x03BBB644 TBNZ X8, 0x0, 0x3BBB674
	0x03BBB648 ADRP X0, 0x58B000
	0x03BBB64C LDR X0, [X0 + 0xA68]
	0x03BBB650 BL 0x1C16CF4
	0x03BBB654 ADRP X0, 0x560000
	0x03BBB658 LDR X0, [X0 + 0xF28]
	0x03BBB65C BL 0x1C16CF4
	0x03BBB660 ADRP X0, 0x5A2000
	0x03BBB664 LDR X0, [X0 + 0x338]
	0x03BBB668 BL 0x1C16CF4
	0x03BBB66C MOVZ W8, 0x1
	0x03BBB670 STRB W8, [X21 + 0xD38]
	0x03BBB674 CBZ X20, 0x3BBB780
	0x03BBB678 ADRP X8, 0x5A2000
	0x03BBB67C LDR X8, [X8 + 0x338]
	0x03BBB680 LDR X9, [X20]
	0x03BBB684 LDR X8, [X8]
	0x03BBB688 LDRB W11, [X9 + 0x130]
	0x03BBB68C LDRB W10, [X8 + 0x130]
	0x03BBB690 CMP W11, W10
	0x03BBB694 B.CC 0x3BBB780
	0x03BBB698 LDR X9, [X9 + 0xC8]
	0x03BBB69C ADD X9, X9, X10, 0x3, LSL
	0x03BBB6A0 LDUR X9, [X9 - 0x8]
	0x03BBB6A4 CMP X9, X8
	0x03BBB6A8 B.NE 0x3BBB780
	0x03BBB6AC MOV X0, X20
	0x03BBB6B0 MOV X1, X31
	0x03BBB6B4 BL 0x3772134
	0x03BBB6B8 LDR W8, [X19 + 0x70]
	0x03BBB6BC MOV X20, X0
	0x03BBB6C0 MOV X21, X1
	0x03BBB6C4 CBNZ W8, 0x3BBB720
	0x03BBB6C8 ADRP X22, 0x58B000
	0x03BBB6CC LDR X22, [X22 + 0xA68]
	0x03BBB6D0 LDR X0, [X22]
	0x03BBB6D4 LDR W8, [X0 + 0xE0]
	0x03BBB6D8 CBNZ W8, 0x3BBB6E4
	0x03BBB6DC BL 0x1C16DFC
	0x03BBB6E0 LDR X0, [X22]
	0x03BBB6E4 ADRP X9, 0x560000
	0x03BBB6E8 LDR X8, [X0 + 0xB8]
	0x03BBB6EC LDR X9, [X9 + 0xF28]
	0x03BBB6F0 MOV X0, X20
	0x03BBB6F4 MOV X1, X21
	0x03BBB6F8 LDP X2, X3, [X8 + 0x180]
	0x03BBB6FC LDR X4, [X9]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x828000
	010 Move X23, 0x58D000
	011 Move X20, 0x5A3000
	012 Move X21, 0x561000
	013 Move W8, [X22+3374]
	014 Move X23, [X23+2952]
	015 Move X20, [X20+728]
	016 Move X21, [X21+624]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x5A3000
	023 Move X0, [X0+696]
	024 Call 0x1C17CF4
	025 Move X0, 0x5A3000
	026 Move X0, [X0+704]
	027 Call 0x1C17CF4
	028 Move X0, 0x58D000
	029 Move X0, [X0+2952]
	030 Call 0x1C17CF4
	031 Move X0, 0x561000
	032 Move X0, [X0+624]
	033 Call 0x1C17CF4
	034 Move X0, 0x5A3000
	035 Move X0, [X0+712]
	036 Call 0x1C17CF4
	037 Move X0, 0x5A3000
	038 Move X0, [X0+720]
	039 Call 0x1C17CF4
	040 Move X0, 0x5A3000
	041 Move X0, [X0+728]
	042 Call 0x1C17CF4
	043 Move X0, 0x5A3000
	044 Move X0, [X0+736]
	045 Call 0x1C17CF4
	046 Move X0, 0x5A3000
	047 Move X0, [X0+744]
	048 Call 0x1C17CF4
	049 Move X0, 0x5A3000
	050 Move X0, [X0+752]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+3374], W8
	054 Move X22, 0x5A3000
	055 Move X22, [X22+704]
	056 Move X0, [X23]
	057 Move X25, 0x5A3000
	058 Move X24, 0x5A3000
	059 Move X23, 0x5A3000
	060 Move X25, [X25+744]
	061 Move X24, [X24+752]
	062 Move X23, [X23+736]
	063 Call 0x1C17F10
	064 Move X2, [X20]
	065 Move X1, X19
	066 Move X3, X31
	067 Move X20, X0
	068 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	069 Move X0, [X21]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Call InputSystem.remove_onDeviceChange, X0
	077 Move X0, [X22]
	078 Call 0x1C17F10
	079 Move X2, [X25]
	080 Move X1, X19
	081 Move X3, X31
	082 Move X20, X0
	083 Call Action`1<InputDevice>..ctor, X0, X1, X2
	084 Move X0, X20
	085 Move X1, X31
	086 Call InputDevices.remove_deviceConnected, X0
	087 Move X0, [X22]
	088 Call 0x1C17F10
	089 Move X2, [X24]
	090 Move X1, X19
	091 Move X3, X31
	092 Move X20, X0
	093 Call Action`1<InputDevice>..ctor, X0, X1, X2
	094 Move X0, X20
	095 Move X1, X31
	096 Call InputDevices.remove_deviceDisconnected, X0
	097 Move X0, [X22]
	098 Call 0x1C17F10
	099 Move X2, [X23]
	100 Move X1, X19
	101 Move X3, X31
	102 Move X20, X0
	103 Call Action`1<InputDevice>..ctor, X0, X1, X2
	104 Move X0, X20
	105 Move X1, X31
	106 Call InputDevices.remove_deviceConfigChanged, X0
	107 Move X20, [X19+96]
	108 Compare X20, 0
	109 JumpIfEqual {128}
	110 Move X8, 0x5A3000
	111 Move X8, [X8+696]
	112 Move X21, 0x5A3000
	113 Move X0, [X8]
	114 Move X21, [X21+712]
	115 Call 0x1C17F10
	116 Move X2, [X21]
	117 Move X1, X19
	118 Move X3, X31
	119 Move X21, X0
	120 Call Action`1<Object>..ctor, X0, X1, X2
	121 Move X0, X20
	122 Move X1, X21
	123 Call TrackedDeviceMonitor.remove_trackingAcquired, X0, X1
	124 Move X0, [X19+96]
	125 Compare X0, 0
	126 JumpIfEqual {165}
	127 Call TrackedDeviceMonitor.ClearAllDevices, X0
	128 Move X20, [X19+104]
	129 Compare X20, 0
	130 JumpIfEqual {156}
	131 Move X0, [X22]
	132 Move X21, 0x5A3000
	133 Move X21, [X21+720]
	134 Call 0x1C17F10
	135 Move X2, [X21]
	136 Move X1, X19
	137 Move X3, X31
	138 Move X21, X0
	139 Call Action`1<InputDevice>..ctor, X0, X1, X2
	140 Move X0, X20
	141 Move X1, X21
	142 Call InputDeviceMonitor.remove_trackingAcquired, X0, X1
	143 Move X0, [X19+104]
	144 Compare X0, 0
	145 JumpIfEqual {165}
	146 Move X20, [X31+48]
	147 Move X19, [X31+56]
	148 Move X22, [X31+32]
	149 Move X21, [X31+40]
	150 Move X24, [X31+16]
	151 Move X23, [X31+24]
	152 Move X30, [X31+64]
	153 Move X25, [X31+72]
	154 Call InputDeviceMonitor.ClearAllDevices, X0
	155 Return 
	156 Move X20, [X31+48]
	157 Move X19, [X31+56]
	158 Move X22, [X31+32]
	159 Move X21, [X31+40]
	160 Move X24, [X31+16]
	161 Move X23, [X31+24]
	162 Move X30, [X31+64]
	163 Move X25, [X31+72]
	164 Return 
	165 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03BBB954 MOV X20, X0

ISIL:
	001 Return 

Method: System.Void SubscribeHandSubsystem()

Disassembly:
	0x03BBB07C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Return 

Method: System.Void UnsubscribeHandSubsystem()

Disassembly:
	0x03BBB700 BL 0x223C25C

ISIL:
	001 Return 

Method: System.Void LogMissingHandSubsystem()

Disassembly:
	0x03BBB958 BL 0x2FD0B40

ISIL:
	001 Return 

Method: System.Void SetLeftMode(UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager/InputMode inputMode)

Disassembly:
	0x03BBB95C STR X20, [X19 + 0x18]
	0x03BBB960 MOV X0, X19
	0x03BBB964 LDP X20, X19, [X31 + 0x20]
	0x03BBB968 LDP X22, X21, [X31 + 0x10]
	0x03BBB96C MOV X1, X31
	0x03BBB970 LDR X30, [X31], #0x30
	0x03BBB974 B 0x33BDD8C
	0x03BBB978 STR X30, [X31 - 0x30]!
	0x03BBB97C STP X22, X21, [X31 + 0x10]
	0x03BBB980 STP X20, X19, [X31 + 0x20]
	0x03BBB984 ADRP X21, 0x827000
	0x03BBB988 ADRP X22, 0x5A2000
	0x03BBB98C ADRP X19, 0x5A2000
	0x03BBB990 ADRP X20, 0x5A1000
	0x03BBB994 LDRB W8, [X21 + 0xD3A]
	0x03BBB998 LDR X22, [X22 + 0x358]
	0x03BBB99C LDR X19, [X19 + 0x360]
	0x03BBB9A0 LDR X20, [X20 + 0xD80]
	0x03BBB9A4 TBNZ X8, 0x0, 0x3BBB9D4
	0x03BBB9A8 ADRP X0, 0x5A2000
	0x03BBB9AC LDR X0, [X0 + 0x360]
	0x03BBB9B0 BL 0x1C16CF4
	0x03BBB9B4 ADRP X0, 0x5A2000
	0x03BBB9B8 LDR X0, [X0 + 0x358]
	0x03BBB9BC BL 0x1C16CF4
	0x03BBB9C0 ADRP X0, 0x5A1000
	0x03BBB9C4 LDR X0, [X0 + 0xD80]
	0x03BBB9C8 BL 0x1C16CF4
	0x03BBB9CC MOVZ W8, 0x1
	0x03BBB9D0 STRB W8, [X21 + 0xD3A]
	0x03BBB9D4 LDR X0, [X22]
	0x03BBB9D8 BL 0x1C16F10
	0x03BBB9DC LDR X5, [X19]
	0x03BBB9E0 MOVZ W2, 0x1
	0x03BBB9E4 MOV W1, W31
	0x03BBB9E8 MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x828000
	007 Move X21, 0x5A2000
	008 Move W8, [X22+3375]
	009 Move X21, [X21+3456]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5A2000
	017 Move X0, [X0+3456]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3375], W8
	021 Move X0, [X21]
	022 Move X21, [X20+32]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X0, X21
	030 Call XRInputModalityManager.SafeSetActive, X0, X1
	031 Move X0, [X20+48]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Call XRInputModalityManager.SafeSetActive, X0, X1
	035 Move W1, [X20+112]
	036 Move W3, [X20+116]
	037 Move [X20+112], W19
	038 Move X0, X20
	039 Move W2, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call XRInputModalityManager.OnModeChanged, X0, X1, X2, X3
	046 Return 

Method: System.Void SetRightMode(UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager/InputMode inputMode)

Disassembly:
	0x03BBBBBC LDR X0, [X0 + 0x270]
	0x03BBBBC0 BL 0x1C16CF4
	0x03BBBBC4 ADRP X0, 0x562000
	0x03BBBBC8 LDR X0, [X0 + 0xF30]
	0x03BBBBCC BL 0x1C16CF4
	0x03BBBBD0 ADRP X0, 0x539000
	0x03BBBBD4 LDR X0, [X0 + 0xE28]
	0x03BBBBD8 BL 0x1C16CF4
	0x03BBBBDC ADRP X0, 0x562000
	0x03BBBBE0 LDR X0, [X0 + 0xF38]
	0x03BBBBE4 BL 0x1C16CF4
	0x03BBBBE8 ADRP X0, 0x59E000
	0x03BBBBEC LDR X0, [X0 + 0xFD0]
	0x03BBBBF0 BL 0x1C16CF4
	0x03BBBBF4 MOVZ W8, 0x1
	0x03BBBBF8 STRB W8, [X20 + 0xD42]
	0x03BBBBFC LDR X0, [X19 + 0x18]
	0x03BBBC00 CBZ X0, 0x3BBBD00
	0x03BBBC04 ADRP X22, 0x562000
	0x03BBBC08 ADRP X23, 0x560000
	0x03BBBC0C ADRP X24, 0x59E000
	0x03BBBC10 ADRP X25, 0x562000
	0x03BBBC14 LDR X22, [X22 + 0xF38]
	0x03BBBC18 LDR X23, [X23 + 0x270]
	0x03BBBC1C LDR X24, [X24 + 0xFD0]
	0x03BBBC20 LDR X25, [X25 + 0xF30]
	0x03BBBC24 MOV W20, W31
	0x03BBBC28 MOV X26, X31
	0x03BBBC2C LDR W8, [X0 + 0x18]
	0x03BBBC30 CMP W20, W8
	0x03BBBC34 B.GE 0x3BBBD04
	0x03BBBC38 LDR X2, [X22]
	0x03BBBC3C MOV W1, W20
	0x03BBBC40 BL 0x2FDC41C
	0x03BBBC44 LDR X8, [X23]
	0x03BBBC48 MOV W21, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x828000
	007 Move X21, 0x5A2000
	008 Move W8, [X22+3376]
	009 Move X21, [X21+3456]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5A2000
	017 Move X0, [X0+3456]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3376], W8
	021 Move X0, [X21]
	022 Move X21, [X20+40]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X0, X21
	030 Call XRInputModalityManager.SafeSetActive, X0, X1
	031 Move X0, [X20+56]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Call XRInputModalityManager.SafeSetActive, X0, X1
	035 Move W3, [X20+112]
	036 Move W1, [X20+116]
	037 Move [X20+116], W19
	038 Move X0, X20
	039 Move W2, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call XRInputModalityManager.OnModeChanged, X0, X1, X2, X3
	046 Return 

Method: System.Void OnModeChanged(UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager/InputMode oldInputMode, UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager/InputMode newInputMode, UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager/InputMode otherHandInputMode)

Disassembly:
	0x03BBBA98 MOV X1, X19
	0x03BBBA9C MOV X3, X31
	0x03BBBAA0 MOV X20, X0
	0x03BBBAA4 LDR X2, [X8]
	0x03BBBAA8 BL 0x3314368
	0x03BBBAAC ADRP X8, 0x560000
	0x03BBBAB0 LDR X8, [X8 + 0x270]
	0x03BBBAB4 LDR X0, [X8]
	0x03BBBAB8 LDR W8, [X0 + 0xE0]
	0x03BBBABC CBNZ W8, 0x3BBBAC4
	0x03BBBAC0 BL 0x1C16DFC
	0x03BBBAC4 MOV X0, X20
	0x03BBBAC8 MOV X1, X31
	0x03BBBACC BL 0x3770464
	0x03BBBAD0 MOVZ W8, 0x1
	0x03BBBAD4 STRB W8, [X19 + 0x20]
	0x03BBBAD8 LDP X20, X19, [X31 + 0x10]
	0x03BBBADC LDR X30, [X31], #0x20
	0x03BBBAE0 RET
	0x03BBBAE4 BL 0x1C16F20
	0x03BBBAE8 STP X30, X21, [X31 - 0x20]!
	0x03BBBAEC STP X20, X19, [X31 + 0x10]
	0x03BBBAF0 ADRP X20, 0x827000
	0x03BBBAF4 LDRB W8, [X20 + 0xD41]
	0x03BBBAF8 MOV X19, X0
	0x03BBBAFC TBNZ X8, 0x0, 0x3BBBB2C
	0x03BBBB00 ADRP X0, 0x539000
	0x03BBBB04 LDR X0, [X0 + 0xE70]
	0x03BBBB08 BL 0x1C16CF4
	0x03BBBB0C ADRP X0, 0x560000
	0x03BBBB10 LDR X0, [X0 + 0x270]
	0x03BBBB14 BL 0x1C16CF4
	0x03BBBB18 ADRP X0, 0x5A2000
	0x03BBBB1C LDR X0, [X0 + 0x368]
	0x03BBBB20 BL 0x1C16CF4
	0x03BBBB24 MOVZ W8, 0x1
	0x03BBBB28 STRB W8, [X20 + 0xD41]
	0x03BBBB2C LDRB W8, [X19 + 0x20]
	0x03BBBB30 CBZ W8, 0x3BBBB88
	0x03BBBB34 ADRP X8, 0x539000
	0x03BBBB38 LDR X8, [X8 + 0xE70]
	0x03BBBB3C ADRP X20, 0x5A2000
	0x03BBBB40 ADRP X21, 0x560000
	0x03BBBB44 LDR X0, [X8]
	0x03BBBB48 LDR X20, [X20 + 0x368]
	0x03BBBB4C LDR X21, [X21 + 0x270]
	0x03BBBB50 BL 0x1C16F10
	0x03BBBB54 LDR X2, [X20]
	0x03BBBB58 MOV X1, X19
	0x03BBBB5C MOV X3, X31
	0x03BBBB60 MOV X20, X0
	0x03BBBB64 BL 0x3314368
	0x03BBBB68 LDR X0, [X21]
	0x03BBBB6C LDR W8, [X0 + 0xE0]
	0x03BBBB70 CBNZ W8, 0x3BBBB78
	0x03BBBB74 BL 0x1C16DFC
	0x03BBBB78 MOV X0, X20
	0x03BBBB7C MOV X1, X31
	0x03BBBB80 BL 0x377058C
	0x03BBBB84 STRB W31, [X19 + 0x20]
	0x03BBBB88 LDP X20, X19, [X31 + 0x10]
	0x03BBBB8C LDP X30, X21, [X31], #0x20
	0x03BBBB90 RET
	0x03BBBB94 STP X30, X27, [X31 - 0x50]!
	0x03BBBB98 STP X26, X25, [X31 + 0x10]
	0x03BBBB9C STP X24, X23, [X31 + 0x20]
	0x03BBBBA0 STP X22, X21, [X31 + 0x30]
	0x03BBBBA4 STP X20, X19, [X31 + 0x40]
	0x03BBBBA8 ADRP X20, 0x827000
	0x03BBBBAC LDRB W8, [X20 + 0xD42]
	0x03BBBBB0 MOV X19, X0
	0x03BBBBB4 TBNZ X8, 0x0, 0x3BBBBFC
	0x03BBBBB8 ADRP X0, 0x560000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x828000
	008 Move W8, [X23+3377]
	009 Move W20, W3
	010 Move W19, W2
	011 Move W22, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5A3000
	018 Move X0, [X0+792]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A2000
	021 Move X0, [X0+3456]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3377], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Move X23, [X31+56]
	032 Return 
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X21+72]
	036 Compare X0, 0
	037 JumpIfNotEqual {43}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X21+88]
	041 Compare X0, 0
	042 JumpIfEqual {45}
	043 Move X1, X31
	044 Call UnityEvent.Invoke, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X21+64]
	048 Compare X0, 0
	049 JumpIfNotEqual {55}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X21+80]
	053 Compare X0, 0
	054 JumpIfEqual {57}
	055 Move X1, X31
	056 Call UnityEvent.Invoke, X0
	057 Move X20, 0x5A2000
	058 Move X20, [X20+3456]
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X20]
	065 Move X8, [X0+184]
	066 Move X0, [X8]
	067 Compare X0, 0
	068 JumpIfEqual {81}
	069 Move X8, 0x5A3000
	070 Move X8, [X8+792]
	071 Move W1, W19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X2, [X8]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Call BindableVariableBase`1<Int32Enum>.set_Value, X0, X1
	080 Return 
	081 Call 0x1C17F20

Method: System.Void SafeSetActive(UnityEngine.GameObject gameObject, System.Boolean active)

Disassembly:
	0x03BBB9EC MOV W4, W31
	0x03BBB9F0 MOV X19, X0
	0x03BBB9F4 BL 0x28CADB8
	0x03BBB9F8 LDR X8, [X20]
	0x03BBB9FC LDP X22, X21, [X31 + 0x10]
	0x03BBBA00 LDR X8, [X8 + 0xB8]
	0x03BBBA04 STR X19, [X8]
	0x03BBBA08 LDP X20, X19, [X31 + 0x20]
	0x03BBBA0C LDR X30, [X31], #0x30
	0x03BBBA10 RET
	0x03BBBA14 STR X30, [X31 - 0x20]!
	0x03BBBA18 STP X20, X19, [X31 + 0x10]
	0x03BBBA1C ADRP X20, 0x827000
	0x03BBBA20 LDRB W8, [X20 + 0xD40]
	0x03BBBA24 MOV X19, X0
	0x03BBBA28 TBNZ X8, 0x0, 0x3BBBA64
	0x03BBBA2C ADRP X0, 0x539000
	0x03BBBA30 LDR X0, [X0 + 0xE70]
	0x03BBBA34 BL 0x1C16CF4
	0x03BBBA38 ADRP X0, 0x560000
	0x03BBBA3C LDR X0, [X0 + 0x270]
	0x03BBBA40 BL 0x1C16CF4
	0x03BBBA44 ADRP X0, 0x539000
	0x03BBBA48 LDR X0, [X0 + 0xE28]
	0x03BBBA4C BL 0x1C16CF4
	0x03BBBA50 ADRP X0, 0x5A2000
	0x03BBBA54 LDR X0, [X0 + 0x368]
	0x03BBBA58 BL 0x1C16CF4
	0x03BBBA5C MOVZ W8, 0x1
	0x03BBBA60 STRB W8, [X20 + 0xD40]
	0x03BBBA64 LDRB W8, [X19 + 0x20]
	0x03BBBA68 CBNZ W8, 0x3BBBAD8
	0x03BBBA6C LDR X8, [X19 + 0x18]
	0x03BBBA70 CBZ X8, 0x3BBBAE4
	0x03BBBA74 LDR W8, [X8 + 0x18]
	0x03BBBA78 CMP W8, 0x1
	0x03BBBA7C B.LT 0x3BBBAD8
	0x03BBBA80 ADRP X8, 0x539000
	0x03BBBA84 LDR X8, [X8 + 0xE70]
	0x03BBBA88 LDR X0, [X8]
	0x03BBBA8C BL 0x1C16F10
	0x03BBBA90 ADRP X8, 0x5A2000
	0x03BBBA94 LDR X8, [X8 + 0x368]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x828000
	007 Move X22, 0x539000
	008 Move W8, [X21+3378]
	009 Move X22, [X22+1432]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x539000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3378], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {51}
	034 Compare X19, 0
	035 JumpIfEqual {57}
	036 Move X0, X19
	037 Move X1, X31
	038 Call GameObject.get_activeSelf, X0
	039 And W8, W0, 1
	040 And W1, W20, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+48]
	049 Call GameObject.SetActive, X0, X1
	050 Return 
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 
	057 Call 0x1C17F20

Method: System.Boolean GetLeftHandIsTracked()

Disassembly:
	0x03BBBC4C LDR W9, [X8 + 0xE0]
	0x03BBBC50 CBNZ W9, 0x3BBBC5C

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean GetRightHandIsTracked()

Disassembly:
	0x03BBBC54 MOV X0, X8
	0x03BBBC58 BL 0x1C16DFC

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void UpdateLeftMode()

Disassembly:
	0x03BBB1E0 BL 0x376EE00
	0x03BBB1E4 TBZ X0, 0x0, 0x3BBB3A0
	0x03BBB1E8 MOV X0, X21
	0x03BBB1EC MOV X1, X31
	0x03BBB1F0 BL 0x3772134
	0x03BBB1F4 ADRP X23, 0x58B000
	0x03BBB1F8 LDR X23, [X23 + 0xA68]
	0x03BBB1FC MOV X21, X0
	0x03BBB200 MOV X22, X1
	0x03BBB204 LDR X0, [X23]
	0x03BBB208 LDR W8, [X0 + 0xE0]
	0x03BBB20C CBNZ W8, 0x3BBB218
	0x03BBB210 BL 0x1C16DFC
	0x03BBB214 LDR X0, [X23]
	0x03BBB218 ADRP X24, 0x560000
	0x03BBB21C LDR X8, [X0 + 0xB8]
	0x03BBB220 LDR X24, [X24 + 0xF28]
	0x03BBB224 MOV X0, X21
	0x03BBB228 MOV X1, X22
	0x03BBB22C LDP X2, X3, [X8 + 0x180]
	0x03BBB230 LDR X4, [X24]
	0x03BBB234 BL 0x223C25C
	0x03BBB238 TBZ X0, 0x0, 0x3BBB324
	0x03BBB23C ADRP X8, 0x5A1000
	0x03BBB240 LDR X8, [X8 + 0xD18]
	0x03BBB244 LDR X0, [X8]
	0x03BBB248 BL 0x1C16F10
	0x03BBB24C ADRP X8, 0x5A2000
	0x03BBB250 LDR X8, [X8 + 0x300]
	0x03BBB254 B 0x3BBB36C
	0x03BBB258 LDR X0, [X19 + 0x60]
	0x03BBB25C CBZ X0, 0x3BBB3B4
	0x03BBB260 MOV X1, X20
	0x03BBB264 BL 0x3BBB3B8
	0x03BBB268 MOV X0, X21
	0x03BBB26C MOV X1, X31
	0x03BBB270 BL 0x3772134
	0x03BBB274 ADRP X22, 0x58B000
	0x03BBB278 LDR X22, [X22 + 0xA68]
	0x03BBB27C MOV X20, X0
	0x03BBB280 MOV X21, X1
	0x03BBB284 LDR X0, [X22]
	0x03BBB288 LDR W8, [X0 + 0xE0]
	0x03BBB28C CBNZ W8, 0x3BBB298
	0x03BBB290 BL 0x1C16DFC
	0x03BBB294 LDR X0, [X22]
	0x03BBB298 ADRP X23, 0x560000
	0x03BBB29C LDR X8, [X0 + 0xB8]
	0x03BBB2A0 LDR X23, [X23 + 0xF28]
	0x03BBB2A4 MOV X0, X20
	0x03BBB2A8 MOV X1, X21
	0x03BBB2AC LDP X2, X3, [X8 + 0x180]
	0x03BBB2B0 LDR X4, [X23]
	0x03BBB2B4 BL 0x223C25C
	0x03BBB2B8 TBZ X0, 0x0, 0x3BBB2D8
	0x03BBB2BC MOV X0, X19
	0x03BBB2C0 LDP X20, X19, [X31 + 0x30]
	0x03BBB2C4 LDP X22, X21, [X31 + 0x20]
	0x03BBB2C8 LDP X24, X23, [X31 + 0x10]
	0x03BBB2CC MOV W1, W31
	0x03BBB2D0 LDR X30, [X31], #0x40
	0x03BBB2D4 B 0x3BBA95C
	0x03BBB2D8 LDR X0, [X22]
	0x03BBB2DC LDR W8, [X0 + 0xE0]
	0x03BBB2E0 CBNZ W8, 0x3BBB2EC
	0x03BBB2E4 BL 0x1C16DFC
	0x03BBB2E8 LDR X0, [X22]
	0x03BBB2EC LDR X8, [X0 + 0xB8]
	0x03BBB2F0 LDR X4, [X23]
	0x03BBB2F4 MOV X0, X20
	0x03BBB2F8 MOV X1, X21
	0x03BBB2FC LDP X2, X3, [X8 + 0x190]
	0x03BBB300 BL 0x223C25C
	0x03BBB304 TBZ X0, 0x0, 0x3BBB3A0
	0x03BBB308 MOV X0, X19
	0x03BBB30C LDP X20, X19, [X31 + 0x30]
	0x03BBB310 LDP X22, X21, [X31 + 0x20]
	0x03BBB314 LDP X24, X23, [X31 + 0x10]
	0x03BBB318 MOV W1, W31
	0x03BBB31C LDR X30, [X31], #0x40
	0x03BBB320 B 0x3BBABBC
	0x03BBB324 LDR X0, [X23]
	0x03BBB328 LDR W8, [X0 + 0xE0]
	0x03BBB32C CBNZ W8, 0x3BBB338
	0x03BBB330 BL 0x1C16DFC
	0x03BBB334 LDR X0, [X23]
	0x03BBB338 LDR X8, [X0 + 0xB8]
	0x03BBB33C LDR X4, [X24]
	0x03BBB340 MOV X0, X21
	0x03BBB344 MOV X1, X22
	0x03BBB348 LDP X2, X3, [X8 + 0x190]
	0x03BBB34C BL 0x223C25C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x828000
	009 Move X20, 0x58C000
	010 Move W8, [X21+3379]
	011 Move X20, [X20+2664]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x5A2000
	018 Move X0, [X0+3352]
	019 Call 0x1C17CF4
	020 Move X0, 0x58C000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x58E000
	024 Move X0, [X0+3432]
	025 Call 0x1C17CF4
	026 Move X0, 0x561000
	027 Move X0, [X0+624]
	028 Call 0x1C17CF4
	029 Move X0, 0x5A3000
	030 Move X0, [X0+768]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3379], W8
	034 Move X0, [X20]
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Move X21, 0x561000
	038 Move W8, [X0+224]
	039 Move X21, [X21+624]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X21]
	045 Move X9, [X0+184]
	046 Move X22, 0x58E000
	047 Move W10, [X8+224]
	048 Move X21, [X9+384]
	049 Move X20, [X9+392]
	050 Move X22, [X22+3432]
	051 Compare W10, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X2, [X22]
	056 Move X23, 0x5A2000
	057 Move X22, 0x5A3000
	058 Move X23, [X23+3352]
	059 Move X22, [X22+768]
	060 Move X0, X21
	061 Move X1, X20
	062 Call 0x220C6E4, X0
	063 Compare X0, 0
	064 JumpIfEqual {77}
	065 Move X20, X0
	066 Move X0, [X23]
	067 Call 0x1C17F10
	068 Move X2, [X22]
	069 Move X1, X19
	070 Move X3, X31
	071 Move X21, X0
	072 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	073 Move X0, X19
	074 Move X1, X20
	075 Move X2, X21
	076 Call XRInputModalityManager.UpdateMode, X0, X1, X2
	077 Add X1, X31, 0
	078 Move W0, 356
	079 Call XRInputTrackingAggregator.TryGetDeviceWithExactCharacteristics, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {98}
	084 Move X0, [X23]
	085 Move X20, [X31]
	086 Move X21, [X31+8]
	087 Call 0x1C17F10
	088 Move X2, [X22]
	089 Move X1, X19
	090 Move X3, X31
	091 Move X22, X0
	092 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	093 Move X0, X19
	094 Move X1, X20
	095 Move X2, X21
	096 Move X3, X22
	097 Call XRInputModalityManager.UpdateMode, X0, X1, X2
	098 Move X0, X19
	099 Move W1, W31
	100 Call XRInputModalityManager.SetLeftMode, X0, X1
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X30, [X31+16]
	106 Move X23, [X31+24]
	107 Add X31, X31, 64
	108 Return 

Method: System.Void UpdateRightMode()

Disassembly:
	0x03BBB350 TBZ X0, 0x0, 0x3BBB3A0
	0x03BBB354 ADRP X8, 0x5A1000
	0x03BBB358 LDR X8, [X8 + 0xD18]
	0x03BBB35C LDR X0, [X8]
	0x03BBB360 BL 0x1C16F10
	0x03BBB364 ADRP X8, 0x5A2000
	0x03BBB368 LDR X8, [X8 + 0x308]
	0x03BBB36C LDR X2, [X8]
	0x03BBB370 MOV X1, X19
	0x03BBB374 MOV X3, X31
	0x03BBB378 MOV X21, X0
	0x03BBB37C BL 0x2984034
	0x03BBB380 MOV X0, X19
	0x03BBB384 MOV X1, X20
	0x03BBB388 MOV X2, X21
	0x03BBB38C LDP X20, X19, [X31 + 0x30]
	0x03BBB390 LDP X22, X21, [X31 + 0x20]
	0x03BBB394 LDP X24, X23, [X31 + 0x10]
	0x03BBB398 LDR X30, [X31], #0x40
	0x03BBB39C B 0x3BBAC5C
	0x03BBB3A0 LDP X20, X19, [X31 + 0x30]
	0x03BBB3A4 LDP X22, X21, [X31 + 0x20]
	0x03BBB3A8 LDP X24, X23, [X31 + 0x10]
	0x03BBB3AC LDR X30, [X31], #0x40
	0x03BBB3B0 RET
	0x03BBB3B4 BL 0x1C16F20
	0x03BBB3B8 STP X30, X21, [X31 - 0x20]!
	0x03BBB3BC STP X20, X19, [X31 + 0x10]
	0x03BBB3C0 ADRP X21, 0x827000
	0x03BBB3C4 LDRB W8, [X21 + 0xD3E]
	0x03BBB3C8 MOV X20, X1
	0x03BBB3CC MOV X19, X0
	0x03BBB3D0 TBNZ X8, 0x0, 0x3BBB3F4
	0x03BBB3D4 ADRP X0, 0x562000
	0x03BBB3D8 LDR X0, [X0 + 0x8C0]
	0x03BBB3DC BL 0x1C16CF4
	0x03BBB3E0 ADRP X0, 0x539000
	0x03BBB3E4 LDR X0, [X0 + 0xE28]
	0x03BBB3E8 BL 0x1C16CF4
	0x03BBB3EC MOVZ W8, 0x1
	0x03BBB3F0 STRB W8, [X21 + 0xD3E]
	0x03BBB3F4 CBZ X20, 0x3BBB444
	0x03BBB3F8 LDR X0, [X19 + 0x18]
	0x03BBB3FC CBZ X0, 0x3BBB444
	0x03BBB400 ADRP X8, 0x562000
	0x03BBB404 LDR X8, [X8 + 0x8C0]
	0x03BBB408 LDR W1, [X20 + 0xE0]
	0x03BBB40C LDR X2, [X8]
	0x03BBB410 BL 0x2FDDF0C
	0x03BBB414 TBZ X0, 0x0, 0x3BBB428
	0x03BBB418 LDR X8, [X19 + 0x18]
	0x03BBB41C CBZ X8, 0x3BBB444
	0x03BBB420 LDR W8, [X8 + 0x18]
	0x03BBB424 CBZ W8, 0x3BBB434
	0x03BBB428 LDP X20, X19, [X31 + 0x10]
	0x03BBB42C LDP X30, X21, [X31], #0x20
	0x03BBB430 RET
	0x03BBB434 MOV X0, X19
	0x03BBB438 LDP X20, X19, [X31 + 0x10]
	0x03BBB43C LDP X30, X21, [X31], #0x20
	0x03BBB440 B 0x3BBBAE8
	0x03BBB444 BL 0x1C16F20
	0x03BBB448 SUB X31, X31, 0x40
	0x03BBB44C STP X2, X30, [X31 + 0x8]
	0x03BBB450 STP X22, X21, [X31 + 0x20]
	0x03BBB454 STP X20, X19, [X31 + 0x30]
	0x03BBB458 ADRP X20, 0x827000
	0x03BBB45C LDRB W8, [X20 + 0xD37]
	0x03BBB460 MOV X19, X0
	0x03BBB464 STR X1, [X31]
	0x03BBB468 TBNZ X8, 0x0, 0x3BBB498
	0x03BBB46C ADRP X0, 0x5A1000
	0x03BBB470 LDR X0, [X0 + 0xD18]
	0x03BBB474 BL 0x1C16CF4
	0x03BBB478 ADRP X0, 0x5A2000
	0x03BBB47C LDR X0, [X0 + 0x300]
	0x03BBB480 BL 0x1C16CF4
	0x03BBB484 ADRP X0, 0x5A2000
	0x03BBB488 LDR X0, [X0 + 0x308]
	0x03BBB48C BL 0x1C16CF4
	0x03BBB490 MOVZ W8, 0x1
	0x03BBB494 STRB W8, [X20 + 0xD37]
	0x03BBB498 ADD X0, X31, 0x0
	0x03BBB49C MOV X1, X31
	0x03BBB4A0 BL 0x3E63E34
	0x03BBB4A4 CMP W0, 0x264
	0x03BBB4A8 B.EQ 0x3BBB4C4
	0x03BBB4AC CMP W0, 0x164
	0x03BBB4B0 B.NE 0x3BBB50C
	0x03BBB4B4 ADRP X22, 0x5A2000
	0x03BBB4B8 LDR X20, [X31]
	0x03BBB4BC LDR X22, [X22 + 0x300]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x828000
	009 Move X20, 0x58C000
	010 Move W8, [X21+3380]
	011 Move X20, [X20+2664]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x5A2000
	018 Move X0, [X0+3352]
	019 Call 0x1C17CF4
	020 Move X0, 0x58C000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x58E000
	024 Move X0, [X0+3432]
	025 Call 0x1C17CF4
	026 Move X0, 0x561000
	027 Move X0, [X0+624]
	028 Call 0x1C17CF4
	029 Move X0, 0x5A3000
	030 Move X0, [X0+776]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3380], W8
	034 Move X0, [X20]
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Move X21, 0x561000
	038 Move W8, [X0+224]
	039 Move X21, [X21+624]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X21]
	045 Move X9, [X0+184]
	046 Move X22, 0x58E000
	047 Move W10, [X8+224]
	048 Move X21, [X9+400]
	049 Move X20, [X9+408]
	050 Move X22, [X22+3432]
	051 Compare W10, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X2, [X22]
	056 Move X23, 0x5A2000
	057 Move X22, 0x5A3000
	058 Move X23, [X23+3352]
	059 Move X22, [X22+776]
	060 Move X0, X21
	061 Move X1, X20
	062 Call 0x220C6E4, X0
	063 Compare X0, 0
	064 JumpIfEqual {77}
	065 Move X20, X0
	066 Move X0, [X23]
	067 Call 0x1C17F10
	068 Move X2, [X22]
	069 Move X1, X19
	070 Move X3, X31
	071 Move X21, X0
	072 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	073 Move X0, X19
	074 Move X1, X20
	075 Move X2, X21
	076 Call XRInputModalityManager.UpdateMode, X0, X1, X2
	077 Add X1, X31, 0
	078 Move W0, 612
	079 Call XRInputTrackingAggregator.TryGetDeviceWithExactCharacteristics, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {98}
	084 Move X0, [X23]
	085 Move X20, [X31]
	086 Move X21, [X31+8]
	087 Call 0x1C17F10
	088 Move X2, [X22]
	089 Move X1, X19
	090 Move X3, X31
	091 Move X22, X0
	092 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	093 Move X0, X19
	094 Move X1, X20
	095 Move X2, X21
	096 Move X3, X22
	097 Call XRInputModalityManager.UpdateMode, X0, X1, X2
	098 Move X0, X19
	099 Move W1, W31
	100 Call XRInputModalityManager.SetRightMode, X0, X1
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X30, [X31+16]
	106 Move X23, [X31+24]
	107 Add X31, X31, 64
	108 Return 

Method: System.Void UpdateMode(UnityEngine.InputSystem.XR.XRController controllerDevice, System.Action`1<UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager/InputMode> setModeMethod)

Disassembly:
	0x03BBBC5C MOV W0, W21
	0x03BBBC60 MOV X1, X31
	0x03BBBC64 BL 0x376EAD0
	0x03BBBC68 CBZ X0, 0x3BBBCF4
	0x03BBBC6C LDR X9, [X0]
	0x03BBBC70 LDR X8, [X24]
	0x03BBBC74 MOV X21, X0
	0x03BBBC78 LDRB W11, [X9 + 0x130]
	0x03BBBC7C LDRB W10, [X8 + 0x130]
	0x03BBBC80 CMP W11, W10
	0x03BBBC84 B.CC 0x3BBBCF4
	0x03BBBC88 LDR X9, [X9 + 0xC8]
	0x03BBBC8C ADD X9, X9, X10, 0x3, LSL
	0x03BBBC90 LDUR X9, [X9 - 0x8]
	0x03BBBC94 CMP X9, X8
	0x03BBBC98 B.NE 0x3BBBCF4
	0x03BBBC9C LDR X0, [X21 + 0x178]
	0x03BBBCA0 CBZ X0, 0x3BBBD00
	0x03BBBCA4 MOV X1, X31
	0x03BBBCA8 BL 0x3758A6C
	0x03BBBCAC TBZ X0, 0x0, 0x3BBBCF4
	0x03BBBCB0 LDR X0, [X19 + 0x18]
	0x03BBBCB4 CBZ X0, 0x3BBBD00
	0x03BBBCB8 LDR X2, [X25]
	0x03BBBCBC MOV W1, W20
	0x03BBBCC0 BL 0x2FDE190
	0x03BBBCC4 LDR X27, [X19 + 0x10]
	0x03BBBCC8 SUB W20, W20, 0x1
	0x03BBBCCC CMP X27, 0x0
	0x03BBBCD0 CSEL X8, X26, X27, EQ
	0x03BBBCD4 CBZ X27, 0x3BBBCF4
	0x03BBBCD8 CBZ X8, 0x3BBBD00
	0x03BBBCDC LDR X9, [X8 + 0x18]
	0x03BBBCE0 LDR X0, [X8 + 0x40]
	0x03BBBCE4 LDR X2, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X2
	006 Compare X1, 0
	007 JumpIfEqual {26}
	008 Move X20, X0
	009 Move X0, [X1+376]
	010 Move X19, X1
	011 Compare X0, 0
	012 JumpIfEqual {49}
	013 Move X1, X31
	014 Call ButtonControl.get_isPressed, X0
	015 Compare X21, 0
	016 JumpIfEqual {49}
	017 Move W8, W0
	018 Move X3, [X21+24]
	019 Move X0, [X21+64]
	020 Move X2, [X21+40]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {37}
	025 Move W1, 2
	026 Compare X21, 0
	027 JumpIfEqual {49}
	028 Move X3, [X21+24]
	029 Move X0, [X21+64]
	030 Move X2, [X21+40]
	031 Move W1, W31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X3
	037 Move W1, W31
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, [X20+96]
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call TrackedDeviceMonitor.AddDevice, X0, X1
	048 Return 
	049 Call 0x1C17F20

Method: System.Void UpdateMode(UnityEngine.XR.InputDevice controllerDevice, System.Action`1<UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager/InputMode> setModeMethod)

Disassembly:
	0x03BBBE38 LDR X0, [X8]
	0x03BBBE3C LDR X20, [X20 + 0x378]
	0x03BBBE40 BL 0x1C16F10
	0x03BBBE44 LDR X2, [X20]
	0x03BBBE48 MOV X1, X19
	0x03BBBE4C MOV X3, X31
	0x03BBBE50 MOV X20, X0
	0x03BBBE54 BL 0x2A704C8
	0x03BBBE58 MOV X0, X20
	0x03BBBE5C MOV X1, X31
	0x03BBBE60 BL 0x3E62724
	0x03BBBE64 STRB W31, [X19 + 0x20]
	0x03BBBE68 LDP X20, X19, [X31 + 0x10]
	0x03BBBE6C LDR X30, [X31], #0x20
	0x03BBBE70 RET
	0x03BBBE74 SUB X31, X31, 0x60
	0x03BBBE78 STP X30, X25, [X31 + 0x20]
	0x03BBBE7C STP X24, X23, [X31 + 0x30]
	0x03BBBE80 STP X22, X21, [X31 + 0x40]
	0x03BBBE84 STP X20, X19, [X31 + 0x50]
	0x03BBBE88 ADRP X20, 0x827000
	0x03BBBE8C LDRB W8, [X20 + 0xD4B]
	0x03BBBE90 MOV X19, X0
	0x03BBBE94 TBNZ X8, 0x0, 0x3BBBED0
	0x03BBBE98 ADRP X0, 0x53D000
	0x03BBBE9C LDR X0, [X0 + 0x158]
	0x03BBBEA0 BL 0x1C16CF4
	0x03BBBEA4 ADRP X0, 0x5A2000
	0x03BBBEA8 LDR X0, [X0 + 0x380]
	0x03BBBEAC BL 0x1C16CF4
	0x03BBBEB0 ADRP X0, 0x560000
	0x03BBBEB4 LDR X0, [X0 + 0x150]
	0x03BBBEB8 BL 0x1C16CF4
	0x03BBBEBC ADRP X0, 0x560000
	0x03BBBEC0 LDR X0, [X0 + 0x158]
	0x03BBBEC4 BL 0x1C16CF4
	0x03BBBEC8 MOVZ W8, 0x1
	0x03BBBECC STRB W8, [X20 + 0xD4B]
	0x03BBBED0 STP X31, X31, [X31 + 0x10]
	0x03BBBED4 STRB W31, [X31 + 0xC]
	0x03BBBED8 LDR X0, [X19 + 0x18]
	0x03BBBEDC CBZ X0, 0x3BBBFA8
	0x03BBBEE0 ADRP X21, 0x560000
	0x03BBBEE4 ADRP X22, 0x53D000
	0x03BBBEE8 ADRP X23, 0x5A2000
	0x03BBBEEC LDR X21, [X21 + 0x158]
	0x03BBBEF0 LDR X22, [X22 + 0x158]
	0x03BBBEF4 LDR X23, [X23 + 0x380]
	0x03BBBEF8 MOV W20, W31
	0x03BBBEFC MOV X24, X31
	0x03BBBF00 LDR W8, [X0 + 0x18]
	0x03BBBF04 CMP W20, W8
	0x03BBBF08 B.GE 0x3BBBFAC
	0x03BBBF0C LDR X2, [X21]
	0x03BBBF10 MOV W1, W20
	0x03BBBF14 BL 0x2FD1048
	0x03BBBF18 MOV X8, X0
	0x03BBBF1C LDR X0, [X22]
	0x03BBBF20 STP X8, X1, [X31 + 0x10]
	0x03BBBF24 LDR W8, [X0 + 0xE0]
	0x03BBBF28 CBNZ W8, 0x3BBBF34

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x828000
	007 Move W8, [X21+3381]
	008 Move X20, X3
	009 Move X19, X0
	010 Move [X31+16], X1
	011 Move [X31+24], X2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x53E000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3381], W8
	021 Add X0, X31, 16
	022 Move X1, X31
	023 Move [X31+12], W31
	024 Call InputDevice.get_isValid, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {57}
	029 Move X21, 0x53E000
	030 Move X21, [X21+344]
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Add X0, X31, 16
	039 Add X2, X31, 12
	040 Move X3, X31
	041 Move X1, [X8]
	042 Call InputDevice.TryGetFeatureValue, X0, X1, X2
	043 Compare X20, 0
	044 JumpIfEqual {78}
	045 Move W10, [X31+12]
	046 Move W8, W0
	047 Move X9, [X20+24]
	048 Move X0, [X20+64]
	049 Move X2, [X20+40]
	050 And W8, W8, W10
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {64}
	055 Move W1, 2
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X20, 0
	058 JumpIfEqual {78}
	059 Move X8, [X20+24]
	060 Move X0, [X20+64]
	061 Move X2, [X20+40]
	062 Move W1, W31
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W1, W31
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X0, [X19+104]
	067 Compare X0, 0
	068 JumpIfEqual {78}
	069 Move X1, [X31+16]
	070 Move X2, [X31+24]
	071 Call InputDeviceMonitor.AddDevice, X0, X1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Add X31, X31, 64
	077 Return 
	078 Call 0x1C17F20

Method: System.Void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)

Disassembly:
	0x03BBC108 STRB W8, [X19 + 0xD56]
	0x03BBC10C CBZ X20, 0x3BBC170
	0x03BBC110 MOV X0, X20
	0x03BBC114 MOV X1, X31
	0x03BBC118 BL 0x376EE00
	0x03BBC11C LDR X8, [X20 + 0x178]
	0x03BBC120 CBZ X8, 0x3BBC180
	0x03BBC124 MOV W19, W0
	0x03BBC128 MOV X0, X8
	0x03BBC12C MOV X1, X31
	0x03BBC130 BL 0x3758A6C
	0x03BBC134 LDR X8, [X20 + 0x170]
	0x03BBC138 CBZ X8, 0x3BBC180
	0x03BBC13C ADRP X9, 0x58D000
	0x03BBC140 LDR X9, [X9 + 0x4E0]
	0x03BBC144 MOV W20, W0
	0x03BBC148 MOV X0, X8
	0x03BBC14C LDR X1, [X9]
	0x03BBC150 BL 0x2E00878
	0x03BBC154 LDR W8, [X0]
	0x03BBC158 ANDS W31, W20, 0x1
	0x03BBC15C MOVZ W9, 0x100
	0x03BBC160 CSEL X0, X9, X31, NE
	0x03BBC164 BFM X0, X19, 0x0, 0x0
	0x03BBC168 BFM X0, X8, 0x20, 0x1F
	0x03BBC16C B 0x3BBC174
	0x03BBC170 MOV X0, X31
	0x03BBC174 LDP X20, X19, [X31 + 0x10]
	0x03BBC178 LDR X30, [X31], #0x20
	0x03BBC17C RET
	0x03BBC180 BL 0x1C16F20
	0x03BBC184 MOVZ W0, 0x21
	0x03BBC188 RET
	0x03BBC18C SUB X31, X31, 0x30
	0x03BBC190 STP X1, X30, [X31 + 0x8]
	0x03BBC194 STP X20, X19, [X31 + 0x20]
	0x03BBC198 ADRP X19, 0x826000
	0x03BBC19C STR X0, [X31]
	0x03BBC1A0 ADRP X20, 0x53C000
	0x03BBC1A4 LDRB W8, [X19 + 0xD57]
	0x03BBC1A8 LDR X20, [X20 + 0x158]
	0x03BBC1AC TBNZ X8, 0x0, 0x3BBC1C4
	0x03BBC1B0 ADRP X0, 0x53C000
	0x03BBC1B4 LDR X0, [X0 + 0x158]
	0x03BBC1B8 BL 0x1C16CF4
	0x03BBC1BC MOVZ W8, 0x1
	0x03BBC1C0 STRB W8, [X19 + 0xD57]
	0x03BBC1C4 ADD X0, X31, 0x0
	0x03BBC1C8 MOV X1, X31
	0x03BBC1CC STRB W31, [X31 + 0x1C]
	0x03BBC1D0 STR W31, [X31 + 0x18]
	0x03BBC1D4 BL 0x3E63D7C
	0x03BBC1D8 LDR X8, [X20]
	0x03BBC1DC MOV W19, W0
	0x03BBC1E0 LDR W9, [X8 + 0xE0]
	0x03BBC1E4 CBNZ W9, 0x3BBC1F4
	0x03BBC1E8 MOV X0, X8
	0x03BBC1EC BL 0x1C16DFC
	0x03BBC1F0 LDR X8, [X20]
	0x03BBC1F4 LDR X8, [X8 + 0xB8]
	0x03BBC1F8 ADD X0, X31, 0x0
	0x03BBC1FC ADD X2, X31, 0x1C
	0x03BBC200 MOV X3, X31
	0x03BBC204 LDR X1, [X8]
	0x03BBC208 BL 0x3E641D0
	0x03BBC20C LDR X8, [X20]
	0x03BBC210 LDRB W9, [X31 + 0x1C]
	0x03BBC214 ADD X2, X31, 0x18
	0x03BBC218 MOV X3, X31
	0x03BBC21C LDR X8, [X8 + 0xB8]
	0x03BBC220 AND W20, W0, W9, 0x0
	0x03BBC224 ADD X0, X31, 0x0
	0x03BBC228 LDR X1, [X8 + 0x68]
	0x03BBC22C BL 0x3E646F8
	0x03BBC230 LDR W8, [X31 + 0x18]
	0x03BBC234 ANDS W31, W0, 0x1
	0x03BBC238 LDR X30, [X31 + 0x10]
	0x03BBC23C UBFM X8, X8, 0x20, 0x1F
	0x03BBC240 CSEL X0, X8, X31, NE
	0x03BBC244 AND X8, X20, 0xFF
	0x03BBC248 BFM X0, X8, 0x38, 0x7
	0x03BBC24C BFM X0, X19, 0x0, 0x0
	0x03BBC250 LDP X20, X19, [X31 + 0x20]
	0x03BBC254 ADD X31, X31, 0x30
	0x03BBC258 RET
	0x03BBC25C SUB X31, X31, 0x30
	0x03BBC260 STR X30, [X31 + 0x10]
	0x03BBC264 STP X20, X19, [X31 + 0x20]
	0x03BBC268 ADRP X20, 0x826000
	0x03BBC26C ADRP X19, 0x537000
	0x03BBC270 LDRB W8, [X20 + 0xD4E]
	0x03BBC274 LDR X19, [X19 + 0x970]
	0x03BBC278 TBNZ X8, 0x0, 0x3BBC290
	0x03BBC27C ADRP X0, 0x537000
	0x03BBC280 LDR X0, [X0 + 0x970]
	0x03BBC284 BL 0x1C16CF4
	0x03BBC288 MOVZ W8, 0x1
	0x03BBC28C STRB W8, [X20 + 0xD4E]
	0x03BBC290 LDR X0, [X19]
	0x03BBC294 STP X31, X31, [X31]
	0x03BBC298 LDR W8, [X0 + 0xE0]
	0x03BBC29C CBNZ W8, 0x3BBC2A4
	0x03BBC2A0 BL 0x1C16DFC
	0x03BBC2A4 MOV X0, X31
	0x03BBC2A8 BL 0x3C018E4
	0x03BBC2AC MOV W8, W0
	0x03BBC2B0 MOV X0, X31
	0x03BBC2B4 TBZ X8, 0x0, 0x3BBC2D8
	0x03BBC2B8 ADD X1, X31, 0x0
	0x03BBC2BC MOVZ W0, 0x31
	0x03BBC2C0 BL 0x3BBACF0
	0x03BBC2C4 TBZ X0, 0x0, 0x3BBC2D4
	0x03BBC2C8 LDP X0, X1, [X31]
	0x03BBC2CC BL 0x3BBC18C
	0x03BBC2D0 B 0x3BBC2D8
	0x03BBC2D4 MOV X0, X31
	0x03BBC2D8 LDP X20, X19, [X31 + 0x20]
	0x03BBC2DC LDR X30, [X31 + 0x10]
	0x03BBC2E0 ADD X31, X31, 0x30
	0x03BBC2E4 RET
	0x03BBC2E8 MOVZ W0, 0x31
	0x03BBC2EC RET
	0x03BBC2F0 SUB X31, X31, 0x30
	0x03BBC2F4 STR X30, [X31 + 0x10]
	0x03BBC2F8 STP X20, X19, [X31 + 0x20]
	0x03BBC2FC ADRP X20, 0x826000
	0x03BBC300 ADRP X19, 0x537000
	0x03BBC304 LDRB W8, [X20 + 0xD4F]
	0x03BBC308 LDR X19, [X19 + 0x970]
	0x03BBC30C TBNZ X8, 0x0, 0x3BBC348
	0x03BBC310 ADRP X0, 0x537000
	0x03BBC314 LDR X0, [X0 + 0x970]
	0x03BBC318 BL 0x1C16CF4
	0x03BBC31C ADRP X0, 0x58A000
	0x03BBC320 LDR X0, [X0 + 0xA68]
	0x03BBC324 BL 0x1C16CF4
	0x03BBC328 ADRP X0, 0x58C000
	0x03BBC32C LDR X0, [X0 + 0xD68]
	0x03BBC330 BL 0x1C16CF4
	0x03BBC334 ADRP X0, 0x55F000
	0x03BBC338 LDR X0, [X0 + 0x270]
	0x03BBC33C BL 0x1C16CF4
	0x03BBC340 MOVZ W8, 0x1
	0x03BBC344 STRB W8, [X20 + 0xD4F]
	0x03BBC348 LDR X0, [X19]
	0x03BBC34C STP X31, X31, [X31]
	0x03BBC350 LDR W8, [X0 + 0xE0]
	0x03BBC354 CBNZ W8, 0x3BBC35C
	0x03BBC358 BL 0x1C16DFC
	0x03BBC35C MOV X0, X31
	0x03BBC360 BL 0x3C018E4
	0x03BBC364 MOV W8, W0
	0x03BBC368 MOV X0, X31
	0x03BBC36C TBZ X8, 0x0, 0x3BBC3F4
	0x03BBC370 ADRP X19, 0x58A000
	0x03BBC374 LDR X19, [X19 + 0xA68]
	0x03BBC378 LDR X0, [X19]
	0x03BBC37C LDR W8, [X0 + 0xE0]
	0x03BBC380 CBNZ W8, 0x3BBC38C
	0x03BBC384 BL 0x1C16DFC
	0x03BBC388 LDR X0, [X19]
	0x03BBC38C ADRP X8, 0x55F000
	0x03BBC390 LDR X8, [X8 + 0x270]
	0x03BBC394 LDR X9, [X0 + 0xB8]
	0x03BBC398 LDR X8, [X8]
	0x03BBC39C LDP X20, X19, [X9 + 0x180]
	0x03BBC3A0 LDR W10, [X8 + 0xE0]
	0x03BBC3A4 CBNZ W10, 0x3BBC3B0
	0x03BBC3A8 MOV X0, X8
	0x03BBC3AC BL 0x1C16DFC
	0x03BBC3B0 ADRP X8, 0x58C000
	0x03BBC3B4 LDR X8, [X8 + 0xD68]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x827000
	009 Move W8, [X20+3382]
	010 Move W22, W2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x5A1000
	018 Move X0, [X0+3352]
	019 Call 0x1C17CF4
	020 Move X0, 0x58B000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x560000
	024 Move X0, [X0+3880]
	025 Call 0x1C17CF4
	026 Move X0, 0x5A2000
	027 Move X0, [X0+824]
	028 Call 0x1C17CF4
	029 Move X0, 0x5A2000
	030 Move X0, [X0+768]
	031 Call 0x1C17CF4
	032 Move X0, 0x5A2000
	033 Move X0, [X0+776]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3382], W8
	037 Compare X21, 0
	038 JumpIfEqual {207}
	039 Move X8, 0x5A2000
	040 Move X8, [X8+824]
	041 Move X9, [X21]
	042 Move X8, [X8]
	043 Move W11, [X9+304]
	044 Move W10, [X8+304]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X9+200]
	047 Add X9, X9, X10
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Compare X20, 0
	052 JumpIfEqual {207}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, 1
	055 NotImplemented "Instruction LSLV not yet implemented."
	056 Move W9, 89
	057 And W31, W8, W9
	058 Move X0, X21
	059 Move X1, X31
	060 Call InputDevice.get_added, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {207}
	065 Move X0, X21
	066 Move X1, X31
	067 Call InputControl.get_usages, X0
	068 Move X23, 0x58B000
	069 Move X23, [X23+2664]
	070 Move X21, X0
	071 Move X22, X1
	072 Move X0, [X23]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X23]
	078 Move X24, 0x560000
	079 Move X8, [X0+184]
	080 Move X24, [X24+3880]
	081 Move X0, X21
	082 Move X1, X22
	083 Move X2, [X8+384]
	084 Move X3, [X8+392]
	085 Move X4, [X24]
	086 Call 0x223D25C, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {167}
	091 Move X8, 0x5A1000
	092 Move X8, [X8+3352]
	093 Move X0, [X8]
	094 Call 0x1C17F10
	095 Move X8, 0x5A2000
	096 Move X8, [X8+768]
	097 Move X0, [X19+96]
	098 Compare X0, 0
	099 JumpIfEqual {215}
	100 Move X1, X20
	101 Call TrackedDeviceMonitor.RemoveDevice, X0, X1
	102 Move X0, X21
	103 Move X1, X31
	104 Call InputControl.get_usages, X0
	105 Move X22, 0x58B000
	106 Move X22, [X22+2664]
	107 Move X20, X0
	108 Move X21, X1
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {115}
	113 Call 0x1C17DFC
	114 Move X0, [X22]
	115 Move X23, 0x560000
	116 Move X8, [X0+184]
	117 Move X23, [X23+3880]
	118 Move X0, X20
	119 Move X1, X21
	120 Move X2, [X8+384]
	121 Move X3, [X8+392]
	122 Move X4, [X23]
	123 Call 0x223D25C, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {139}
	128 Move X0, X19
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move W1, W31
	136 Move X30, [X31+64]
	137 Call XRInputModalityManager.SetLeftMode, X0, X1
	138 Return 
	139 Move X0, [X22]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {145}
	143 Call 0x1C17DFC
	144 Move X0, [X22]
	145 Move X8, [X0+184]
	146 Move X4, [X23]
	147 Move X0, X20
	148 Move X1, X21
	149 Move X2, [X8+400]
	150 Move X3, [X8+408]
	151 Call 0x223D25C, X0, X1
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {207}
	156 Move X0, X19
	157 Move X20, [X31+48]
	158 Move X19, [X31+56]
	159 Move X22, [X31+32]
	160 Move X21, [X31+40]
	161 Move X24, [X31+16]
	162 Move X23, [X31+24]
	163 Move W1, W31
	164 Move X30, [X31+64]
	165 Call XRInputModalityManager.SetRightMode, X0, X1
	166 Return 
	167 Move X0, [X23]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {173}
	171 Call 0x1C17DFC
	172 Move X0, [X23]
	173 Move X8, [X0+184]
	174 Move X4, [X24]
	175 Move X0, X21
	176 Move X1, X22
	177 Move X2, [X8+400]
	178 Move X3, [X8+408]
	179 Call 0x223D25C, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {207}
	184 Move X8, 0x5A1000
	185 Move X8, [X8+3352]
	186 Move X0, [X8]
	187 Call 0x1C17F10
	188 Move X8, 0x5A2000
	189 Move X8, [X8+776]
	190 Move X2, [X8]
	191 Move X1, X19
	192 Move X3, X31
	193 Move X21, X0
	194 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	195 Move X0, X19
	196 Move X1, X20
	197 Move X2, X21
	198 Move X20, [X31+48]
	199 Move X19, [X31+56]
	200 Move X22, [X31+32]
	201 Move X21, [X31+40]
	202 Move X24, [X31+16]
	203 Move X23, [X31+24]
	204 Move X30, [X31+64]
	205 Call XRInputModalityManager.UpdateMode, X0, X1, X2
	206 Return 
	207 Move X20, [X31+48]
	208 Move X19, [X31+56]
	209 Move X22, [X31+32]
	210 Move X21, [X31+40]
	211 Move X24, [X31+16]
	212 Move X23, [X31+24]
	213 Move X30, [X31+64]
	214 Return 
	215 Call 0x1C17F20

Method: System.Void OnDeviceConnected(UnityEngine.XR.InputDevice device)

Disassembly:
	0x03BBC448 ADRP X0, 0x55F000
	0x03BBC44C LDR X0, [X0 + 0x270]
	0x03BBC450 BL 0x1C16CF4
	0x03BBC454 MOVZ W8, 0x1
	0x03BBC458 STRB W8, [X20 + 0xD50]
	0x03BBC45C LDR X0, [X19]
	0x03BBC460 STP X31, X31, [X31]
	0x03BBC464 LDR W8, [X0 + 0xE0]
	0x03BBC468 CBNZ W8, 0x3BBC470
	0x03BBC46C BL 0x1C16DFC
	0x03BBC470 MOV X0, X31
	0x03BBC474 BL 0x3C018E4
	0x03BBC478 MOV W8, W0
	0x03BBC47C MOV X0, X31
	0x03BBC480 TBZ X8, 0x0, 0x3BBC508
	0x03BBC484 ADRP X19, 0x58A000
	0x03BBC488 LDR X19, [X19 + 0xA68]
	0x03BBC48C LDR X0, [X19]
	0x03BBC490 LDR W8, [X0 + 0xE0]
	0x03BBC494 CBNZ W8, 0x3BBC4A0
	0x03BBC498 BL 0x1C16DFC
	0x03BBC49C LDR X0, [X19]
	0x03BBC4A0 ADRP X8, 0x55F000
	0x03BBC4A4 LDR X8, [X8 + 0x270]
	0x03BBC4A8 LDR X9, [X0 + 0xB8]
	0x03BBC4AC LDR X8, [X8]
	0x03BBC4B0 LDP X20, X19, [X9 + 0x190]
	0x03BBC4B4 LDR W10, [X8 + 0xE0]
	0x03BBC4B8 CBNZ W10, 0x3BBC4C4
	0x03BBC4BC MOV X0, X8
	0x03BBC4C0 BL 0x1C16DFC
	0x03BBC4C4 ADRP X8, 0x58C000
	0x03BBC4C8 LDR X8, [X8 + 0xD68]
	0x03BBC4CC MOV X0, X20
	0x03BBC4D0 MOV X1, X19
	0x03BBC4D4 LDR X2, [X8]
	0x03BBC4D8 BL 0x220B6E4
	0x03BBC4DC CBZ X0, 0x3BBC4E8
	0x03BBC4E0 BL 0x3BBC0E0
	0x03BBC4E4 B 0x3BBC508
	0x03BBC4E8 ADD X1, X31, 0x0
	0x03BBC4EC MOVZ W0, 0x264
	0x03BBC4F0 BL 0x3BBACF0
	0x03BBC4F4 TBZ X0, 0x0, 0x3BBC504
	0x03BBC4F8 LDP X0, X1, [X31]
	0x03BBC4FC BL 0x3BBC18C
	0x03BBC500 B 0x3BBC508
	0x03BBC504 MOV X0, X31
	0x03BBC508 LDP X20, X19, [X31 + 0x20]
	0x03BBC50C LDR X30, [X31 + 0x10]
	0x03BBC510 ADD X31, X31, 0x30
	0x03BBC514 RET
	0x03BBC518 SUB X31, X31, 0x30
	0x03BBC51C STR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x827000
	009 Move W8, [X20+3383]
	010 Move X19, X0
	011 Move [X31], X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x5A1000
	017 Move X0, [X0+3352]
	018 Call 0x1C17CF4
	019 Move X0, 0x5A2000
	020 Move X0, [X0+768]
	021 Call 0x1C17CF4
	022 Move X0, 0x5A2000
	023 Move X0, [X0+776]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3383], W8
	027 Add X0, X31, 0
	028 Move X1, X31
	029 Call InputDevice.get_characteristics, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X22, 0x5A2000
	033 Move X20, [X31]
	034 Move X22, [X22+768]
	035 Move X22, 0x5A2000
	036 Move X20, [X31]
	037 Move X22, [X22+776]
	038 Move X8, 0x5A1000
	039 Move X8, [X8+3352]
	040 Move X21, [X31+8]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X2, [X22]
	044 Move X1, X19
	045 Move X3, X31
	046 Move X22, X0
	047 Call Action`1<Int32Enum>..ctor, X0, X1, X2
	048 Move X0, X19
	049 Move X1, X20
	050 Move X2, X21
	051 Move X3, X22
	052 Call XRInputModalityManager.UpdateMode, X0, X1, X2
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Add X31, X31, 64
	059 Return 

Method: System.Void OnDeviceDisconnected(UnityEngine.XR.InputDevice device)

Disassembly:
	0x03BBC520 STP X20, X19, [X31 + 0x20]
	0x03BBC524 ADRP X20, 0x826000
	0x03BBC528 ADRP X19, 0x537000
	0x03BBC52C LDRB W8, [X20 + 0xD51]
	0x03BBC530 LDR X19, [X19 + 0x970]
	0x03BBC534 TBNZ X8, 0x0, 0x3BBC54C
	0x03BBC538 ADRP X0, 0x537000
	0x03BBC53C LDR X0, [X0 + 0x970]
	0x03BBC540 BL 0x1C16CF4
	0x03BBC544 MOVZ W8, 0x1
	0x03BBC548 STRB W8, [X20 + 0xD51]
	0x03BBC54C LDR X0, [X19]
	0x03BBC550 STP X31, X31, [X31]
	0x03BBC554 LDR W8, [X0 + 0xE0]
	0x03BBC558 CBNZ W8, 0x3BBC560
	0x03BBC55C BL 0x1C16DFC
	0x03BBC560 MOV X0, X31
	0x03BBC564 BL 0x3C018E4
	0x03BBC568 MOV W8, W0
	0x03BBC56C MOV X0, X31
	0x03BBC570 TBZ X8, 0x0, 0x3BBC594
	0x03BBC574 ADD X1, X31, 0x0
	0x03BBC578 MOVZ W0, 0x128
	0x03BBC57C BL 0x3BBACF0
	0x03BBC580 TBZ X0, 0x0, 0x3BBC590

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31], X1
	005 Move [X31+8], X2
	006 Move X19, X0
	007 Move X0, [X0+104]
	008 Compare X0, 0
	009 JumpIfEqual {26}
	010 Call InputDeviceMonitor.RemoveDevice, X0, X1
	011 Add X0, X31, 0
	012 Move X1, X31
	013 Call InputDevice.get_characteristics, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, X19
	017 Move W1, W31
	018 Call XRInputModalityManager.SetLeftMode, X0, X1
	019 Move X0, X19
	020 Move W1, W31
	021 Call XRInputModalityManager.SetRightMode, X0, X1
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Add X31, X31, 32
	025 Return 
	026 Call 0x1C17F20

Method: System.Void OnDeviceConfigChanged(UnityEngine.XR.InputDevice device)

Disassembly:
	0x03BBC624 MOV X0, X31

ISIL:
	001 Call XRInputModalityManager.OnDeviceConnected, X0, X1
	002 Return 

Method: System.Void OnControllerTrackingAcquired(UnityEngine.InputSystem.TrackedDevice device)

Disassembly:
	0x03BBC628 LDP X20, X19, [X31 + 0x20]
	0x03BBC62C LDR X30, [X31 + 0x10]
	0x03BBC630 ADD X31, X31, 0x30
	0x03BBC634 RET
	0x03BBC638 MOVZ W0, 0x228
	0x03BBC63C RET
	0x03BBC640 STR X30, [X31 - 0x20]!
	0x03BBC644 STP X20, X19, [X31 + 0x10]
	0x03BBC648 ADRP X19, 0x826000
	0x03BBC64C ADRP X20, 0x537000
	0x03BBC650 LDRB W8, [X19 + 0xD53]
	0x03BBC654 LDR X20, [X20 + 0x970]
	0x03BBC658 TBNZ X8, 0x0, 0x3BBC670
	0x03BBC65C ADRP X0, 0x537000
	0x03BBC660 LDR X0, [X0 + 0x970]
	0x03BBC664 BL 0x1C16CF4
	0x03BBC668 MOVZ W8, 0x1
	0x03BBC66C STRB W8, [X19 + 0xD53]
	0x03BBC670 LDR X0, [X20]
	0x03BBC674 LDR W8, [X0 + 0xE0]
	0x03BBC678 CBNZ W8, 0x3BBC680
	0x03BBC67C BL 0x1C16DFC
	0x03BBC680 MOV X0, X31
	0x03BBC684 BL 0x3C018E4
	0x03BBC688 LDP X20, X19, [X31 + 0x10]
	0x03BBC68C MOV X0, X31
	0x03BBC690 LDR X30, [X31], #0x20
	0x03BBC694 RET
	0x03BBC698 STR X30, [X31 - 0x20]!
	0x03BBC69C STP X20, X19, [X31 + 0x10]
	0x03BBC6A0 ADRP X19, 0x826000
	0x03BBC6A4 ADRP X20, 0x537000
	0x03BBC6A8 LDRB W8, [X19 + 0xD54]
	0x03BBC6AC LDR X20, [X20 + 0x970]
	0x03BBC6B0 TBNZ X8, 0x0, 0x3BBC6C8
	0x03BBC6B4 ADRP X0, 0x537000
	0x03BBC6B8 LDR X0, [X0 + 0x970]
	0x03BBC6BC BL 0x1C16CF4
	0x03BBC6C0 MOVZ W8, 0x1
	0x03BBC6C4 STRB W8, [X19 + 0xD54]
	0x03BBC6C8 LDR X0, [X20]
	0x03BBC6CC LDR W8, [X0 + 0xE0]
	0x03BBC6D0 CBNZ W8, 0x3BBC6D8
	0x03BBC6D4 BL 0x1C16DFC
	0x03BBC6D8 MOV X0, X31
	0x03BBC6DC BL 0x3C018E4
	0x03BBC6E0 LDP X20, X19, [X31 + 0x10]
	0x03BBC6E4 MOV X0, X31
	0x03BBC6E8 LDR X30, [X31], #0x20
	0x03BBC6EC RET
	0x03BBC6F0 LDR X0, [X0 + 0x20]
	0x03BBC6F4 RET
	0x03BBC6F8 STR X1, [X0 + 0x20]
	0x03BBC6FC RET
	0x03BBC700 LDR X0, [X0 + 0x30]
	0x03BBC704 RET
	0x03BBC708 STP X30, X21, [X31 - 0x20]!
	0x03BBC70C STP X20, X19, [X31 + 0x10]
	0x03BBC710 ADRP X21, 0x826000
	0x03BBC714 LDRB W8, [X21 + 0xD58]
	0x03BBC718 MOV X20, X1
	0x03BBC71C MOV X19, X0
	0x03BBC720 TBNZ X8, 0x0, 0x3BBC738
	0x03BBC724 ADRP X0, 0x537000
	0x03BBC728 LDR X0, [X0 + 0x598]
	0x03BBC72C BL 0x1C16CF4
	0x03BBC730 MOVZ W8, 0x1
	0x03BBC734 STRB W8, [X21 + 0xD58]
	0x03BBC738 STR X20, [X19 + 0x30]
	0x03BBC73C CBZ X20, 0x3BBC768
	0x03BBC740 ADRP X8, 0x537000
	0x03BBC744 LDR X8, [X8 + 0x598]
	0x03BBC748 LDR X9, [X20]
	0x03BBC74C LDR X8, [X8]
	0x03BBC750 LDRB W11, [X9 + 0x130]
	0x03BBC754 LDRB W10, [X8 + 0x130]
	0x03BBC758 CMP W11, W10
	0x03BBC75C B.CS 0x3BBC770
	0x03BBC760 MOV X8, X31
	0x03BBC764 B 0x3BBC784
	0x03BBC768 STR X31, [X19 + 0x28]
	0x03BBC76C B 0x3BBC788
	0x03BBC770 LDR X9, [X9 + 0xC8]
	0x03BBC774 ADD X9, X9, X10, 0x3, LSL
	0x03BBC778 LDUR X9, [X9 - 0x8]
	0x03BBC77C CMP X9, X8
	0x03BBC780 CSEL X8, X20, X31, EQ
	0x03BBC784 STR X8, [X19 + 0x28]
	0x03BBC788 LDP X20, X19, [X31 + 0x10]
	0x03BBC78C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x827000
	007 Move W8, [X21+3384]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x58B000
	015 Move X0, [X0+2664]
	016 Call 0x1C17CF4
	017 Move X0, 0x560000
	018 Move X0, [X0+3880]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A2000
	021 Move X0, [X0+824]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3384], W8
	025 Compare X20, 0
	026 JumpIfEqual {109}
	027 Move X8, 0x5A2000
	028 Move X8, [X8+824]
	029 Move X9, [X20]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X20
	039 Move X1, X31
	040 Call InputControl.get_usages, X0
	041 Move W8, [X19+112]
	042 Move X20, X0
	043 Move X21, X1
	044 Compare W8, 0
	045 JumpIfNotEqual {76}
	046 Move X22, 0x58B000
	047 Move X22, [X22+2664]
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X22]
	054 Move X9, 0x560000
	055 Move X8, [X0+184]
	056 Move X9, [X9+3880]
	057 Move X0, X20
	058 Move X1, X21
	059 Move X2, [X8+384]
	060 Move X3, [X8+392]
	061 Move X4, [X9]
	062 Call 0x223D25C, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {76}
	067 Move X0, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move W1, 2
	073 Move X30, [X31+48]
	074 Call XRInputModalityManager.SetLeftMode, X0, X1
	075 Return 
	076 Move W8, [X19+116]
	077 Compare W8, 0
	078 JumpIfNotEqual {109}
	079 Move X22, 0x58B000
	080 Move X22, [X22+2664]
	081 Move X0, [X22]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X22]
	087 Move X9, 0x560000
	088 Move X8, [X0+184]
	089 Move X9, [X9+3880]
	090 Move X0, X20
	091 Move X1, X21
	092 Move X2, [X8+400]
	093 Move X3, [X8+408]
	094 Move X4, [X9]
	095 Call 0x223D25C, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {109}
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move W1, 2
	106 Move X30, [X31+48]
	107 Call XRInputModalityManager.SetRightMode, X0, X1
	108 Return 
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X22, [X31+16]
	112 Move X21, [X31+24]
	113 Move X30, [X31+48]
	114 Return 

Method: System.Void OnControllerTrackingAcquired(UnityEngine.XR.InputDevice device)

Disassembly:
	0x03BBC790 RET
	0x03BBC794 LDRB W0, [X0 + 0x38]
	0x03BBC798 RET
	0x03BBC79C AND W8, W1, 0x1
	0x03BBC7A0 STRB W8, [X0 + 0x38]
	0x03BBC7A4 RET
	0x03BBC7A8 LDR V0, [X0 + 0x3C]
	0x03BBC7AC RET
	0x03BBC7B0 STR S0, [X0 + 0x3C]
	0x03BBC7B4 RET
	0x03BBC7B8 LDR V0, [X0 + 0x40]
	0x03BBC7BC RET
	0x03BBC7C0 STR S0, [X0 + 0x40]
	0x03BBC7C4 RET
	0x03BBC7C8 STP X30, X21, [X31 - 0x20]!
	0x03BBC7CC STP X20, X19, [X31 + 0x10]
	0x03BBC7D0 ADRP X20, 0x826000
	0x03BBC7D4 LDRB W8, [X20 + 0xD59]
	0x03BBC7D8 MOV X19, X0
	0x03BBC7DC TBNZ X8, 0x0, 0x3BBC7F4
	0x03BBC7E0 ADRP X0, 0x59F000
	0x03BBC7E4 LDR X0, [X0 + 0x508]
	0x03BBC7E8 BL 0x1C16CF4
	0x03BBC7EC MOVZ W8, 0x1
	0x03BBC7F0 STRB W8, [X20 + 0xD59]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X31], X1
	006 Move [X31+8], X2
	007 Add X0, X31, 0
	008 Move X1, X31
	009 Call InputDevice.get_characteristics, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, [X19+112]
	012 Compare W8, 0
	013 JumpIfNotEqual {17}
	014 Move W1, 2
	015 Move X0, X19
	016 Call XRInputModalityManager.SetLeftMode, X0, X1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, [X19+116]
	019 Compare W8, 0
	020 JumpIfNotEqual {24}
	021 Move W1, 2
	022 Move X0, X19
	023 Call XRInputModalityManager.SetRightMode, X0, X1
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Add X31, X31, 32
	027 Return 

Method: System.Void .ctor()

Disassembly:
	0x03BBC7F4 MOV X0, X19
	0x03BBC7F8 MOV X1, X31
	0x03BBC7FC BL 0x3C32E90
	0x03BBC800 LDR X8, [X19 + 0x30]
	0x03BBC804 STR X0, [X19 + 0x48]
	0x03BBC808 CBZ X8, 0x3BBC818
	0x03BBC80C LDP X20, X19, [X31 + 0x10]
	0x03BBC810 LDP X30, X21, [X31], #0x20
	0x03BBC814 RET
	0x03BBC818 ADRP X21, 0x59F000
	0x03BBC81C LDR X20, [X19 + 0x28]
	0x03BBC820 LDR X21, [X21 + 0x508]
	0x03BBC824 MOV X0, X20
	0x03BBC828 LDR X1, [X21]
	0x03BBC82C BL 0x1C16E00
	0x03BBC830 STR X0, [X19 + 0x30]
	0x03BBC834 LDR X1, [X21]
	0x03BBC838 MOV X0, X20
	0x03BBC83C LDP X20, X19, [X31 + 0x10]
	0x03BBC840 LDP X30, X21, [X31], #0x20
	0x03BBC844 B 0x1C16E00
	0x03BBC848 STR D10, [X31 - 0x40]!
	0x03BBC84C STP D9, D8, [X31 + 0x10]
	0x03BBC850 STP X30, X21, [X31 + 0x20]
	0x03BBC854 STP X20, X19, [X31 + 0x30]
	0x03BBC858 ADRP X20, 0x826000
	0x03BBC85C LDRB W8, [X20 + 0xD5A]
	0x03BBC860 MOV X19, X0
	0x03BBC864 TBNZ X8, 0x0, 0x3BBC87C
	0x03BBC868 ADRP X0, 0x59F000
	0x03BBC86C LDR X0, [X0 + 0x508]
	0x03BBC870 BL 0x1C16CF4
	0x03BBC874 MOVZ W8, 0x1
	0x03BBC878 STRB W8, [X20 + 0xD5A]
	0x03BBC87C LDR X8, [X19 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x827000
	007 Move X22, 0x5A2000
	008 Move X21, 0x5A2000
	009 Move W8, [X20+3385]
	010 Move X22, [X22+840]
	011 Move X21, [X21+848]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5A2000
	018 Move X0, [X0+848]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A2000
	021 Move X0, [X0+840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3385], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X20, X0
	028 Call TrackedDeviceMonitor..ctor, X0
	029 Move [X19+96], X20
	030 Move X0, [X21]
	031 Call 0x1C17F10
	032 Move X20, X0
	033 Call InputDeviceMonitor..ctor, X0
	034 Move [X19+104], X20
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+48]
	042 Call MonoBehaviour..ctor, X0
	043 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BBC978 BL 0x1C16F20
	0x03BBC97C SUB X31, X31, 0x140
	0x03BBC980 STP D15, D14, [X31 + 0xE0]
	0x03BBC984 STP D13, D12, [X31 + 0xF0]
	0x03BBC988 STP D11, D10, [X31 + 0x100]
	0x03BBC98C STP D9, D8, [X31 + 0x110]
	0x03BBC990 STP X29, X30, [X31 + 0x120]
	0x03BBC994 STP X20, X19, [X31 + 0x130]
	0x03BBC998 ADRP X20, 0x826000
	0x03BBC99C LDRB W8, [X20 + 0xD5B]
	0x03BBC9A0 MOV X19, X0
	0x03BBC9A4 TBNZ X8, 0x0, 0x3BBC9BC
	0x03BBC9A8 ADRP X0, 0x59F000
	0x03BBC9AC LDR X0, [X0 + 0x508]
	0x03BBC9B0 BL 0x1C16CF4
	0x03BBC9B4 MOVZ W8, 0x1
	0x03BBC9B8 STRB W8, [X20 + 0xD5B]
	0x03BBC9BC STR W31, [X31 + 0xD8]
	0x03BBC9C0 STP X31, X31, [X31 + 0xC8]
	0x03BBC9C4 STR X31, [X31 + 0xC0]
	0x03BBC9C8 STR W31, [X31 + 0xB8]
	0x03BBC9CC STP X31, X31, [X31 + 0xA8]
	0x03BBC9D0 STR X31, [X31 + 0xA0]
	0x03BBC9D4 STR W31, [X31 + 0x98]
	0x03BBC9D8 STP X31, X31, [X31 + 0x88]
	0x03BBC9DC STR X31, [X31 + 0x80]
	0x03BBC9E0 STR W31, [X31 + 0x78]
	0x03BBC9E4 STP X31, X31, [X31 + 0x68]
	0x03BBC9E8 STP X31, X31, [X31 + 0x58]
	0x03BBC9EC STP X31, X31, [X31 + 0x48]
	0x03BBC9F0 STR W31, [X31 + 0x40]
	0x03BBC9F4 STR X31, [X31 + 0x38]
	0x03BBC9F8 STR W31, [X31 + 0x30]
	0x03BBC9FC STR X31, [X31 + 0x28]
	0x03BBCA00 LDR X0, [X19 + 0x48]
	0x03BBCA04 CBZ X0, 0x3BBCDAC
	0x03BBCA08 MOV X1, X31
	0x03BBCA0C BL 0x3C3F58C
	0x03BBCA10 LDR X0, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x827000
	007 Move X22, 0x5A2000
	008 Move X19, 0x5A2000
	009 Move X20, 0x5A1000
	010 Move W8, [X21+3386]
	011 Move X22, [X22+856]
	012 Move X19, [X19+864]
	013 Move X20, [X20+3456]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5A2000
	019 Move X0, [X0+864]
	020 Call 0x1C17CF4
	021 Move X0, 0x5A2000
	022 Move X0, [X0+856]
	023 Call 0x1C17CF4
	024 Move X0, 0x5A1000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3386], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X5, [X19]
	032 Move W2, 1
	033 Move W1, W31
	034 Move X3, X31
	035 Move W4, W31
	036 Move X19, X0
	037 Call 0x28CBDB8, X0, X1, X2, X3, X4
	038 Move X8, [X20]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X8, [X8+184]
	042 Move [X8], X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Return 

