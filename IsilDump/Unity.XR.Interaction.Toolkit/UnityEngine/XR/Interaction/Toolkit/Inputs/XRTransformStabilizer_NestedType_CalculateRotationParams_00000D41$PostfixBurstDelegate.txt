Type: UnityEngine.XR.Interaction.Toolkit.Inputs.XRTransformStabilizer/CalculateRotationParams_00000D41$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03BBFD88 BL 0x3BBFDA0
	0x03BBFD8C STR X19, [X20 + 0x58]
	0x03BBFD90 MOV X0, X20
	0x03BBFD94 LDP X20, X19, [X31 + 0x10]
	0x03BBFD98 LDR X30, [X31], #0x20
	0x03BBFD9C B 0x3BBFE4C
	0x03BBFDA0 STP X30, X23, [X31 - 0x30]!
	0x03BBFDA4 STP X22, X21, [X31 + 0x10]
	0x03BBFDA8 STP X20, X19, [X31 + 0x20]
	0x03BBFDAC ADRP X20, 0x823000
	0x03BBFDB0 ADRP X23, 0x538000
	0x03BBFDB4 ADRP X21, 0x59E000
	0x03BBFDB8 ADRP X22, 0x59E000
	0x03BBFDBC LDRB W8, [X20 + 0xD99]
	0x03BBFDC0 LDR X23, [X23 + 0x3D8]
	0x03BBFDC4 LDR X21, [X21 + 0x4A8]
	0x03BBFDC8 LDR X22, [X22 + 0x460]
	0x03BBFDCC MOV X19, X0
	0x03BBFDD0 TBNZ X8, 0x0, 0x3BBFE00
	0x03BBFDD4 ADRP X0, 0x538000
	0x03BBFDD8 LDR X0, [X0 + 0x3D8]
	0x03BBFDDC BL 0x1C16CF4
	0x03BBFDE0 ADRP X0, 0x59E000
	0x03BBFDE4 LDR X0, [X0 + 0x4A8]
	0x03BBFDE8 BL 0x1C16CF4
	0x03BBFDEC ADRP X0, 0x59E000
	0x03BBFDF0 LDR X0, [X0 + 0x460]
	0x03BBFDF4 BL 0x1C16CF4
	0x03BBFDF8 MOVZ W8, 0x1
	0x03BBFDFC STRB W8, [X20 + 0xD99]
	0x03BBFE00 LDR X0, [X23]
	0x03BBFE04 LDR X20, [X19 + 0x58]
	0x03BBFE08 BL 0x1C16F10
	0x03BBFE0C LDR X2, [X21]
	0x03BBFE10 MOV X1, X19
	0x03BBFE14 MOV X3, X31
	0x03BBFE18 MOV X21, X0
	0x03BBFE1C BL 0x2A719B8
	0x03BBFE20 LDR X0, [X22]
	0x03BBFE24 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33280000
	021 Add X8, X8, 68
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33280000
	024 Add X8, X8, 20
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33284096
	033 Add X8, X8, 3924
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50999296
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 currentPosition, in Unity.Mathematics.float3 resultPosition, in Unity.Mathematics.float3 forward, in Unity.Mathematics.float3 up, in Unity.Mathematics.float3 rayEnd, System.Single invScale, System.Single angleStabilization, out Unity.Mathematics.quaternion antiRotation, out System.Single scaleFactor, out System.Single targetAngleScale)

Disassembly:
	0x03BBFE28 CBNZ W8, 0x3BBFE30
	0x03BBFE2C BL 0x1C16DFC
	0x03BBFE30 MOV X0, X20
	0x03BBFE34 MOV X1, X21
	0x03BBFE38 LDP X20, X19, [X31 + 0x20]
	0x03BBFE3C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X8, [X31]
	002 Move X9, [X0+24]
	003 Move X10, [X0+40]
	004 Move X0, [X0+64]
	005 Move [X31], X8
	006 Move [X31+8], X10
	007 CallNoReturn X9

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 currentPosition, in Unity.Mathematics.float3 resultPosition, in Unity.Mathematics.float3 forward, in Unity.Mathematics.float3 up, in Unity.Mathematics.float3 rayEnd, System.Single invScale, System.Single angleStabilization, out Unity.Mathematics.quaternion antiRotation, out System.Single scaleFactor, out System.Single targetAngleScale, System.AsyncCallback param_10, System.Object param_11)

Disassembly:
	0x03BBFE40 MOV X2, X31
	0x03BBFE44 LDP X30, X23, [X31], #0x30
	0x03BBFE48 B 0x3BC8490
	0x03BBFE4C STP X30, X23, [X31 - 0x30]!
	0x03BBFE50 STP X22, X21, [X31 + 0x10]
	0x03BBFE54 STP X20, X19, [X31 + 0x20]
	0x03BBFE58 ADRP X20, 0x823000
	0x03BBFE5C ADRP X23, 0x538000
	0x03BBFE60 ADRP X21, 0x59E000
	0x03BBFE64 ADRP X22, 0x59E000
	0x03BBFE68 LDRB W8, [X20 + 0xD98]
	0x03BBFE6C LDR X23, [X23 + 0x3D8]
	0x03BBFE70 LDR X21, [X21 + 0x4A8]
	0x03BBFE74 LDR X22, [X22 + 0x460]
	0x03BBFE78 MOV X19, X0
	0x03BBFE7C TBNZ X8, 0x0, 0x3BBFEAC
	0x03BBFE80 ADRP X0, 0x538000
	0x03BBFE84 LDR X0, [X0 + 0x3D8]
	0x03BBFE88 BL 0x1C16CF4
	0x03BBFE8C ADRP X0, 0x59E000
	0x03BBFE90 LDR X0, [X0 + 0x4A8]
	0x03BBFE94 BL 0x1C16CF4
	0x03BBFE98 ADRP X0, 0x59E000
	0x03BBFE9C LDR X0, [X0 + 0x460]
	0x03BBFEA0 BL 0x1C16CF4
	0x03BBFEA4 MOVZ W8, 0x1
	0x03BBFEA8 STRB W8, [X20 + 0xD98]
	0x03BBFEAC LDR X0, [X23]
	0x03BBFEB0 LDR X20, [X19 + 0x58]
	0x03BBFEB4 BL 0x1C16F10
	0x03BBFEB8 LDR X2, [X21]
	0x03BBFEBC MOV X1, X19
	0x03BBFEC0 MOV X3, X31
	0x03BBFEC4 MOV X21, X0
	0x03BBFEC8 BL 0x2A719B8
	0x03BBFECC LDR X0, [X22]
	0x03BBFED0 LDR W8, [X0 + 0xE0]
	0x03BBFED4 CBNZ W8, 0x3BBFEDC
	0x03BBFED8 BL 0x1C16DFC
	0x03BBFEDC MOV X0, X20
	0x03BBFEE0 MOV X1, X21
	0x03BBFEE4 LDP X20, X19, [X31 + 0x20]
	0x03BBFEE8 LDP X22, X21, [X31 + 0x10]
	0x03BBFEEC MOV X2, X31
	0x03BBFEF0 LDP X30, X23, [X31], #0x30
	0x03BBFEF4 B 0x3BC8368
	0x03BBFEF8 LDR X0, [X0 + 0x60]
	0x03BBFEFC RET
	0x03BBFF00 STR X30, [X31 - 0x20]!
	0x03BBFF04 STP X20, X19, [X31 + 0x10]
	0x03BBFF08 MOV X19, X1
	0x03BBFF0C MOV X20, X0
	0x03BBFF10 BL 0x3BBFF28
	0x03BBFF14 STR X19, [X20 + 0x60]
	0x03BBFF18 MOV X0, X20
	0x03BBFF1C LDP X20, X19, [X31 + 0x10]
	0x03BBFF20 LDR X30, [X31], #0x20
	0x03BBFF24 B 0x3BBFFD4
	0x03BBFF28 STP X30, X23, [X31 - 0x30]!
	0x03BBFF2C STP X22, X21, [X31 + 0x10]
	0x03BBFF30 STP X20, X19, [X31 + 0x20]
	0x03BBFF34 ADRP X20, 0x823000
	0x03BBFF38 ADRP X23, 0x538000
	0x03BBFF3C ADRP X21, 0x59E000
	0x03BBFF40 ADRP X22, 0x59E000
	0x03BBFF44 LDRB W8, [X20 + 0xD9B]
	0x03BBFF48 LDR X23, [X23 + 0x3D8]
	0x03BBFF4C LDR X21, [X21 + 0x4B0]
	0x03BBFF50 LDR X22, [X22 + 0x460]
	0x03BBFF54 MOV X19, X0
	0x03BBFF58 TBNZ X8, 0x0, 0x3BBFF88
	0x03BBFF5C ADRP X0, 0x538000
	0x03BBFF60 LDR X0, [X0 + 0x3D8]
	0x03BBFF64 BL 0x1C16CF4
	0x03BBFF68 ADRP X0, 0x59E000
	0x03BBFF6C LDR X0, [X0 + 0x4B0]
	0x03BBFF70 BL 0x1C16CF4
	0x03BBFF74 ADRP X0, 0x59E000
	0x03BBFF78 LDR X0, [X0 + 0x460]
	0x03BBFF7C BL 0x1C16CF4
	0x03BBFF80 MOVZ W8, 0x1
	0x03BBFF84 STRB W8, [X20 + 0xD9B]
	0x03BBFF88 LDR X0, [X23]
	0x03BBFF8C LDR X20, [X19 + 0x60]
	0x03BBFF90 BL 0x1C16F10
	0x03BBFF94 LDR X2, [X21]
	0x03BBFF98 MOV X1, X19
	0x03BBFF9C MOV X3, X31
	0x03BBFFA0 MOV X21, X0
	0x03BBFFA4 BL 0x2A719B8
	0x03BBFFA8 LDR X0, [X22]
	0x03BBFFAC LDR W8, [X0 + 0xE0]
	0x03BBFFB0 CBNZ W8, 0x3BBFFB8
	0x03BBFFB4 BL 0x1C16DFC
	0x03BBFFB8 MOV X0, X20
	0x03BBFFBC MOV X1, X21
	0x03BBFFC0 LDP X20, X19, [X31 + 0x20]
	0x03BBFFC4 LDP X22, X21, [X31 + 0x10]
	0x03BBFFC8 MOV X2, X31
	0x03BBFFCC LDP X30, X23, [X31], #0x30
	0x03BBFFD0 B 0x3BC8490
	0x03BBFFD4 STP X30, X23, [X31 - 0x30]!
	0x03BBFFD8 STP X22, X21, [X31 + 0x10]
	0x03BBFFDC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X8, [X31+240]
	015 Move [X31+120], S1
	016 Move [X31+128], S0
	017 Move X21, 0x824000
	018 Move X20, 0x560000
	019 Move [X31+16], X0
	020 Move [X31+24], X8
	021 Move X23, [X31+224]
	022 Move X8, [X31+232]
	023 Move X19, 0x535000
	024 Move X22, X7
	025 Move X24, X6
	026 Move [X31+8], X8
	027 Move W8, [X21+3445]
	028 Move X20, [X20+2104]
	029 Move X19, [X19+2704]
	030 Move X25, X5
	031 Move X26, X4
	032 Move X27, X3
	033 Move X28, X2
	034 Move X29, X1
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {50}
	039 Move X0, 0x535000
	040 Move X0, [X0+2704]
	041 Call 0x1C17CF4
	042 Move X0, 0x560000
	043 Move X0, [X0+2104]
	044 Call 0x1C17CF4
	045 Move X0, 0x53B000
	046 Move X0, [X0+1976]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+3445], W8
	050 Move X0, [X20]
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move X1, X29
	053 Move [X31+104], V0
	054 Move [X31+88], V0
	055 Move [X31+72], V0
	056 Call 0x1C17E04
	057 Move X8, [X20]
	058 Move [X31+32], X0
	059 Move X1, X28
	060 Move X0, X8
	061 Call 0x1C17E04
	062 Move X8, [X20]
	063 Move [X31+40], X0
	064 Move X1, X27
	065 Move X0, X8
	066 Call 0x1C17E04
	067 Move X8, [X20]
	068 Move [X31+48], X0
	069 Move X1, X26
	070 Move X0, X8
	071 Call 0x1C17E04
	072 Move X8, [X20]
	073 Move [X31+56], X0
	074 Move X1, X25
	075 Move X0, X8
	076 Call 0x1C17E04
	077 Move X8, [X19]
	078 Move [X31+64], X0
	079 Add X1, X31, 124
	080 Move X0, X8
	081 Call 0x1C17E04
	082 Move X8, [X19]
	083 Move [X31+72], X0
	084 Add X1, X31, 120
	085 Move X0, X8
	086 Call 0x1C17E04
	087 Move X8, 0x53B000
	088 Move X8, [X8+1976]
	089 Move [X31+80], X0
	090 Move X1, X24
	091 Move X8, [X8]
	092 Move X0, X8
	093 Call 0x1C17E04
	094 Move X8, [X19]
	095 Move [X31+88], X0
	096 Move X1, X22
	097 Move X0, X8
	098 Call 0x1C17E04
	099 Move X8, [X19]
	100 Move [X31+96], X0
	101 Move X1, X23
	102 Move X0, X8
	103 Call 0x1C17E04
	104 Move [X31+104], X0
	105 Move X2, [X31+8]
	106 Move X0, [X31+16]
	107 Move X3, [X31+24]
	108 Add X1, X31, 32
	109 Call 0x1C17CB0
	110 Move X20, [X31+208]
	111 Move X19, [X31+216]
	112 Move X22, [X31+192]
	113 Move X21, [X31+200]
	114 Move X24, [X31+176]
	115 Move X23, [X31+184]
	116 Move X26, [X31+160]
	117 Move X25, [X31+168]
	118 Move X28, [X31+144]
	119 Move X27, [X31+152]
	120 Move X29, [X31+128]
	121 Move X30, [X31+136]
	122 Add X31, X31, 224
	123 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03BBFFE0 ADRP X20, 0x823000
	0x03BBFFE4 ADRP X23, 0x538000
	0x03BBFFE8 ADRP X21, 0x59E000

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

