Type: UnityEngine.XR.Interaction.Toolkit.Inputs.InputActionManager

Method: System.Collections.Generic.List`1<UnityEngine.InputSystem.InputActionAsset> get_actionAssets()

Disassembly:
	0x03BBA5AC MOV X20, X0
	0x03BBA5B0 BL 0x2A769B4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_actionAssets(System.Collections.Generic.List`1<UnityEngine.InputSystem.InputActionAsset> value)

Disassembly:
	0x03BBA5B4 LDR X0, [X21]
	0x03BBA5B8 LDR W8, [X0 + 0xE0]
	0x03BBA5BC CBNZ W8, 0x3BBA5C4
	0x03BBA5C0 BL 0x1C16DFC
	0x03BBA5C4 MOV X0, X20
	0x03BBA5C8 MOV X1, X31
	0x03BBA5CC BL 0x376DD48
	0x03BBA5D0 LDR X0, [X22]
	0x03BBA5D4 BL 0x1C16F10
	0x03BBA5D8 LDR X2, [X25]
	0x03BBA5DC MOV X1, X19
	0x03BBA5E0 MOV X3, X31
	0x03BBA5E4 MOV X20, X0
	0x03BBA5E8 BL 0x2983A0C
	0x03BBA5EC MOV X0, X20
	0x03BBA5F0 MOV X1, X31
	0x03BBA5F4 BL 0x3E65124
	0x03BBA5F8 LDR X0, [X22]
	0x03BBA5FC BL 0x1C16F10
	0x03BBA600 LDR X2, [X24]
	0x03BBA604 MOV X1, X19
	0x03BBA608 MOV X3, X31
	0x03BBA60C MOV X20, X0
	0x03BBA610 BL 0x2983A0C
	0x03BBA614 MOV X0, X20
	0x03BBA618 MOV X1, X31
	0x03BBA61C BL 0x3E652C4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Compare X1, 0
	006 JumpIfEqual {13}
	007 Compare X8, 0
	008 JumpIfEqual {31}
	009 Move [X8+32], X1
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Move X0, 0x53F000
	014 Move X0, [X0+1320]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0x544000
	019 Move X0, [X0+3784]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call ArgumentNullException..ctor, X0, X1
	025 Move X0, 0x5A4000
	026 Move X0, [X0+648]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1C17DEC
	031 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03BBA620 LDR X0, [X22]

ISIL:
No ISIL was generated
Method: System.Void OnDisable()

Disassembly:
	0x03BBA7B8 STP X20, X19, [X31 + 0x10]

ISIL:
No ISIL was generated
Method: System.Void EnableInput()

Disassembly:
	0x03BBA624 BL 0x1C16F10
	0x03BBA628 LDR X2, [X23]
	0x03BBA62C MOV X1, X19
	0x03BBA630 MOV X3, X31
	0x03BBA634 MOV X20, X0
	0x03BBA638 BL 0x2983A0C
	0x03BBA63C MOV X0, X20
	0x03BBA640 MOV X1, X31
	0x03BBA644 BL 0x3E65464
	0x03BBA648 LDR X20, [X19 + 0x60]
	0x03BBA64C CBZ X20, 0x3BBA694
	0x03BBA650 ADRP X8, 0x5A3000
	0x03BBA654 LDR X8, [X8 + 0x2B8]
	0x03BBA658 ADRP X21, 0x5A3000
	0x03BBA65C LDR X0, [X8]
	0x03BBA660 LDR X21, [X21 + 0x2C8]
	0x03BBA664 BL 0x1C16F10
	0x03BBA668 LDR X2, [X21]
	0x03BBA66C MOV X1, X19
	0x03BBA670 MOV X3, X31
	0x03BBA674 MOV X21, X0
	0x03BBA678 BL 0x2A6B948
	0x03BBA67C MOV X0, X20
	0x03BBA680 MOV X1, X21
	0x03BBA684 BL 0x3BBA704
	0x03BBA688 LDR X0, [X19 + 0x60]
	0x03BBA68C CBZ X0, 0x3BBA6FC
	0x03BBA690 BL 0x3BBA7B4
	0x03BBA694 LDR X20, [X19 + 0x68]
	0x03BBA698 CBZ X20, 0x3BBA6E8
	0x03BBA69C LDR X0, [X22]
	0x03BBA6A0 ADRP X21, 0x5A3000
	0x03BBA6A4 LDR X21, [X21 + 0x2D0]
	0x03BBA6A8 BL 0x1C16F10
	0x03BBA6AC LDR X2, [X21]
	0x03BBA6B0 MOV X1, X19
	0x03BBA6B4 MOV X3, X31
	0x03BBA6B8 MOV X21, X0
	0x03BBA6BC BL 0x2983A0C
	0x03BBA6C0 MOV X0, X20
	0x03BBA6C4 MOV X1, X21
	0x03BBA6C8 BL 0x3BBA82C
	0x03BBA6CC LDR X0, [X19 + 0x68]
	0x03BBA6D0 CBZ X0, 0x3BBA6FC
	0x03BBA6D4 LDP X20, X19, [X31 + 0x30]
	0x03BBA6D8 LDP X22, X21, [X31 + 0x20]
	0x03BBA6DC LDP X24, X23, [X31 + 0x10]
	0x03BBA6E0 LDP X30, X25, [X31], #0x40
	0x03BBA6E4 B 0x3BBA8DC
	0x03BBA6E8 LDP X20, X19, [X31 + 0x30]
	0x03BBA6EC LDP X22, X21, [X31 + 0x20]
	0x03BBA6F0 LDP X24, X23, [X31 + 0x10]
	0x03BBA6F4 LDP X30, X25, [X31], #0x40
	0x03BBA6F8 RET
	0x03BBA6FC BL 0x1C16F20
	0x03BBA700 RET
	0x03BBA704 STR X30, [X31 - 0x40]!
	0x03BBA708 STP X24, X23, [X31 + 0x10]
	0x03BBA70C STP X22, X21, [X31 + 0x20]
	0x03BBA710 STP X20, X19, [X31 + 0x30]
	0x03BBA714 ADRP X21, 0x828000
	0x03BBA718 LDRB W8, [X21 + 0xD3C]
	0x03BBA71C MOV X19, X1
	0x03BBA720 MOV X20, X0
	0x03BBA724 TBNZ X8, 0x0, 0x3BBA73C
	0x03BBA728 ADRP X0, 0x5A3000
	0x03BBA72C LDR X0, [X0 + 0x2B8]
	0x03BBA730 BL 0x1C16CF4
	0x03BBA734 MOVZ W8, 0x1
	0x03BBA738 STRB W8, [X21 + 0xD3C]
	0x03BBA73C ADRP X24, 0x5A3000
	0x03BBA740 LDR X21, [X20 + 0x10]!
	0x03BBA744 LDR X24, [X24 + 0x2B8]
	0x03BBA748 MOV X0, X21
	0x03BBA74C MOV X1, X19
	0x03BBA750 MOV X2, X31
	0x03BBA754 BL 0x33C0FDC
	0x03BBA758 CBZ X0, 0x3BBA778
	0x03BBA75C LDR X23, [X24]
	0x03BBA760 MOV X22, X0
	0x03BBA764 MOV X1, X23
	0x03BBA768 BL 0x1C16E00
	0x03BBA76C MOV X1, X0
	0x03BBA770 CBNZ X0, 0x3BBA77C
	0x03BBA774 B 0x3BBA7A8
	0x03BBA778 MOV X1, X31
	0x03BBA77C MOV X0, X20
	0x03BBA780 MOV X2, X21
	0x03BBA784 BL 0x1C24138
	0x03BBA788 CMP X21, X0
	0x03BBA78C MOV X21, X0
	0x03BBA790 B.NE 0x3BBA748
	0x03BBA794 LDP X20, X19, [X31 + 0x30]
	0x03BBA798 LDP X22, X21, [X31 + 0x20]
	0x03BBA79C LDP X24, X23, [X31 + 0x10]
	0x03BBA7A0 LDR X30, [X31], #0x40
	0x03BBA7A4 RET
	0x03BBA7A8 MOV X0, X22
	0x03BBA7AC MOV X1, X23
	0x03BBA7B0 BL 0x1C171E0
	0x03BBA7B4 STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x829000
	008 Move W8, [X20+3365]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x5A4000
	015 Move X0, [X0+656]
	016 Call 0x1C17CF4
	017 Move X0, 0x5A4000
	018 Move X0, [X0+664]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A4000
	021 Move X0, [X0+672]
	022 Call 0x1C17CF4
	023 Move X0, 0x5A4000
	024 Move X0, [X0+680]
	025 Call 0x1C17CF4
	026 Move X0, 0x53A000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3365], W8
	031 Move [X31+8], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Move X0, [X19+32]
	035 Compare X0, 0
	036 JumpIfEqual {77}
	037 Move X8, 0x5A4000
	038 Move X8, [X8+680]
	039 Move X21, 0x5A4000
	040 Move X22, 0x53A000
	041 Move X20, 0x5A4000
	042 Move X1, [X8]
	043 Move X21, [X21+664]
	044 Move X22, [X22+1432]
	045 Move X20, [X20+656]
	046 Add X8, X31, 8
	047 Call List`1<Object>.GetEnumerator, X0
	048 Move X1, [X21]
	049 Add X0, X31, 8
	050 Call Enumerator<Object>.MoveNext, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {74}
	055 Move X0, [X22]
	056 Move X19, [X31+24]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Inequality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {48}
	069 Compare X19, 0
	070 JumpIfEqual {84}
	071 Move X0, X19
	072 Move X1, X31
	073 Call InputActionAsset.Enable, X0
	074 Move X1, [X20]
	075 Add X0, X31, 8
	076 Call Enumerator<Object>.Dispose, X0
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X30, [X31+32]
	082 Add X31, X31, 80
	083 Return 
	084 Call 0x1C17F20
	085 Move X19, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X19
	088 Call 0x3EB2AD0
	089 Move X20, [X0]
	090 Call 0x3EB2AE0
	091 Move X8, 0x5A4000
	092 Move X8, [X8+656]
	093 Add X0, X31, 8
	094 Move X1, [X8]
	095 Call Enumerator<Object>.Dispose, X0
	096 Compare X20, 0
	097 JumpIfEqual {77}
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Move X20, X31
	101 Move X19, X0
	102 Move X8, 0x5A4000
	103 Move X8, [X8+656]
	104 Move X1, [X8]
	105 Add X0, X31, 8
	106 Call Enumerator<Object>.Dispose, X0
	107 Compare X20, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X19
	110 Call 0x1D2D690
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Call 0x1991590

Method: System.Void DisableInput()

Disassembly:
	0x03BBA7BC ADRP X20, 0x828000
	0x03BBA7C0 LDRB W8, [X20 + 0xD3F]
	0x03BBA7C4 MOV X19, X0
	0x03BBA7C8 TBNZ X8, 0x0, 0x3BBA7EC
	0x03BBA7CC ADRP X0, 0x540000
	0x03BBA7D0 LDR X0, [X0 + 0x858]
	0x03BBA7D4 BL 0x1C16CF4
	0x03BBA7D8 ADRP X0, 0x53A000
	0x03BBA7DC LDR X0, [X0 + 0xE28]
	0x03BBA7E0 BL 0x1C16CF4
	0x03BBA7E4 MOVZ W8, 0x1
	0x03BBA7E8 STRB W8, [X20 + 0xD3F]
	0x03BBA7EC LDR X8, [X19 + 0x18]
	0x03BBA7F0 CBZ X8, 0x3BBA828
	0x03BBA7F4 LDR W9, [X8 + 0x18]
	0x03BBA7F8 CMP W9, 0x1
	0x03BBA7FC B.LT 0x3BBA81C
	0x03BBA800 LDR W9, [X8 + 0x1C]
	0x03BBA804 MOV X0, X19
	0x03BBA808 LDP X20, X19, [X31 + 0x10]
	0x03BBA80C ADD W9, W9, 0x1
	0x03BBA810 STP W31, W9, [X8 + 0x18]
	0x03BBA814 LDR X30, [X31], #0x20
	0x03BBA818 B 0x3BBBAE8
	0x03BBA81C LDP X20, X19, [X31 + 0x10]
	0x03BBA820 LDR X30, [X31], #0x20
	0x03BBA824 RET
	0x03BBA828 BL 0x1C16F20
	0x03BBA82C STR X30, [X31 - 0x40]!
	0x03BBA830 STP X24, X23, [X31 + 0x10]
	0x03BBA834 STP X22, X21, [X31 + 0x20]
	0x03BBA838 STP X20, X19, [X31 + 0x30]
	0x03BBA83C ADRP X21, 0x828000
	0x03BBA840 LDRB W8, [X21 + 0xD45]
	0x03BBA844 MOV X19, X1
	0x03BBA848 MOV X20, X0
	0x03BBA84C TBNZ X8, 0x0, 0x3BBA864
	0x03BBA850 ADRP X0, 0x5A3000
	0x03BBA854 LDR X0, [X0 + 0x2C0]
	0x03BBA858 BL 0x1C16CF4
	0x03BBA85C MOVZ W8, 0x1
	0x03BBA860 STRB W8, [X21 + 0xD45]
	0x03BBA864 ADRP X24, 0x5A3000
	0x03BBA868 LDR X21, [X20 + 0x10]!
	0x03BBA86C LDR X24, [X24 + 0x2C0]
	0x03BBA870 MOV X0, X21
	0x03BBA874 MOV X1, X19
	0x03BBA878 MOV X2, X31
	0x03BBA87C BL 0x33C0FDC
	0x03BBA880 CBZ X0, 0x3BBA8A0
	0x03BBA884 LDR X23, [X24]
	0x03BBA888 MOV X22, X0
	0x03BBA88C MOV X1, X23
	0x03BBA890 BL 0x1C16E00
	0x03BBA894 MOV X1, X0
	0x03BBA898 CBNZ X0, 0x3BBA8A4
	0x03BBA89C B 0x3BBA8D0
	0x03BBA8A0 MOV X1, X31
	0x03BBA8A4 MOV X0, X20
	0x03BBA8A8 MOV X2, X21
	0x03BBA8AC BL 0x1C24138
	0x03BBA8B0 CMP X21, X0
	0x03BBA8B4 MOV X21, X0
	0x03BBA8B8 B.NE 0x3BBA870
	0x03BBA8BC LDP X20, X19, [X31 + 0x30]
	0x03BBA8C0 LDP X22, X21, [X31 + 0x20]
	0x03BBA8C4 LDP X24, X23, [X31 + 0x10]
	0x03BBA8C8 LDR X30, [X31], #0x40
	0x03BBA8CC RET
	0x03BBA8D0 MOV X0, X22
	0x03BBA8D4 MOV X1, X23
	0x03BBA8D8 BL 0x1C171E0
	0x03BBA8DC STR X30, [X31 - 0x20]!
	0x03BBA8E0 STP X20, X19, [X31 + 0x10]
	0x03BBA8E4 ADRP X20, 0x828000
	0x03BBA8E8 LDRB W8, [X20 + 0xD48]
	0x03BBA8EC MOV X19, X0
	0x03BBA8F0 TBNZ X8, 0x0, 0x3BBA914
	0x03BBA8F4 ADRP X0, 0x5A3000
	0x03BBA8F8 LDR X0, [X0 + 0x310]
	0x03BBA8FC BL 0x1C16CF4
	0x03BBA900 ADRP X0, 0x561000
	0x03BBA904 LDR X0, [X0 + 0x150]
	0x03BBA908 BL 0x1C16CF4
	0x03BBA90C MOVZ W8, 0x1
	0x03BBA910 STRB W8, [X20 + 0xD48]
	0x03BBA914 LDR X8, [X19 + 0x18]
	0x03BBA918 CBZ X8, 0x3BBA950
	0x03BBA91C LDR W9, [X8 + 0x18]
	0x03BBA920 CMP W9, 0x1
	0x03BBA924 B.LT 0x3BBA944
	0x03BBA928 LDR W9, [X8 + 0x1C]
	0x03BBA92C MOV X0, X19
	0x03BBA930 LDP X20, X19, [X31 + 0x10]
	0x03BBA934 ADD W9, W9, 0x1
	0x03BBA938 STP W31, W9, [X8 + 0x18]
	0x03BBA93C LDR X30, [X31], #0x20
	0x03BBA940 B 0x3BBBDEC
	0x03BBA944 LDP X20, X19, [X31 + 0x10]
	0x03BBA948 LDR X30, [X31], #0x20
	0x03BBA94C RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x829000
	008 Move W8, [X20+3366]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x5A4000
	015 Move X0, [X0+656]
	016 Call 0x1C17CF4
	017 Move X0, 0x5A4000
	018 Move X0, [X0+664]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A4000
	021 Move X0, [X0+672]
	022 Call 0x1C17CF4
	023 Move X0, 0x5A4000
	024 Move X0, [X0+680]
	025 Call 0x1C17CF4
	026 Move X0, 0x53A000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3366], W8
	031 Move [X31+8], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Move X0, [X19+32]
	035 Compare X0, 0
	036 JumpIfEqual {77}
	037 Move X8, 0x5A4000
	038 Move X8, [X8+680]
	039 Move X21, 0x5A4000
	040 Move X22, 0x53A000
	041 Move X20, 0x5A4000
	042 Move X1, [X8]
	043 Move X21, [X21+664]
	044 Move X22, [X22+1432]
	045 Move X20, [X20+656]
	046 Add X8, X31, 8
	047 Call List`1<Object>.GetEnumerator, X0
	048 Move X1, [X21]
	049 Add X0, X31, 8
	050 Call Enumerator<Object>.MoveNext, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {74}
	055 Move X0, [X22]
	056 Move X19, [X31+24]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Inequality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {48}
	069 Compare X19, 0
	070 JumpIfEqual {84}
	071 Move X0, X19
	072 Move X1, X31
	073 Call InputActionAsset.Disable, X0
	074 Move X1, [X20]
	075 Add X0, X31, 8
	076 Call Enumerator<Object>.Dispose, X0
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X30, [X31+32]
	082 Add X31, X31, 80
	083 Return 
	084 Call 0x1C17F20
	085 Move X19, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X19
	088 Call 0x3EB2AD0
	089 Move X20, [X0]
	090 Call 0x3EB2AE0
	091 Move X8, 0x5A4000
	092 Move X8, [X8+656]
	093 Add X0, X31, 8
	094 Move X1, [X8]
	095 Call Enumerator<Object>.Dispose, X0
	096 Compare X20, 0
	097 JumpIfEqual {77}
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Move X20, X31
	101 Move X19, X0
	102 Move X8, 0x5A4000
	103 Move X8, [X8+656]
	104 Move X1, [X8]
	105 Add X0, X31, 8
	106 Call Enumerator<Object>.Dispose, X0
	107 Compare X20, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X19
	110 Call 0x1D2D690
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03BBA950 BL 0x1C16F20
	0x03BBA954 RET

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

