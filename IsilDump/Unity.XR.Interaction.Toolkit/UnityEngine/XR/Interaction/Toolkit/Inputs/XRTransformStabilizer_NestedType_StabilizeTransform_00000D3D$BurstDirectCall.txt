Type: UnityEngine.XR.Interaction.Toolkit.Inputs.XRTransformStabilizer/StabilizeTransform_00000D3D$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03BBEF9C STR X0, [X31 + 0x60]
	0x03BBEFA0 MOV X1, X23
	0x03BBEFA4 MOV X0, X8
	0x03BBEFA8 BL 0x1C16E04
	0x03BBEFAC STR X0, [X31 + 0x68]
	0x03BBEFB0 LDP X2, X0, [X31 + 0x8]
	0x03BBEFB4 LDR X3, [X31 + 0x18]
	0x03BBEFB8 ADD X1, X31, 0x20
	0x03BBEFBC BL 0x1C16CB0
	0x03BBEFC0 LDP X20, X19, [X31 + 0xD0]
	0x03BBEFC4 LDP X22, X21, [X31 + 0xC0]
	0x03BBEFC8 LDP X24, X23, [X31 + 0xB0]
	0x03BBEFCC LDP X26, X25, [X31 + 0xA0]
	0x03BBEFD0 LDP X28, X27, [X31 + 0x90]
	0x03BBEFD4 LDP X29, X30, [X31 + 0x80]
	0x03BBEFD8 ADD X31, X31, 0xE0
	0x03BBEFDC RET
	0x03BBEFE0 MOV X0, X1
	0x03BBEFE4 MOV X1, X31
	0x03BBEFE8 B 0x1C16CB4
	0x03BBEFEC STP X30, X23, [X31 - 0x30]!
	0x03BBEFF0 STP X22, X21, [X31 + 0x10]
	0x03BBEFF4 STP X20, X19, [X31 + 0x20]
	0x03BBEFF8 ADRP X20, 0x824000
	0x03BBEFFC ADRP X23, 0x59F000
	0x03BBF000 LDRB W8, [X20 + 0xD76]
	0x03BBF004 B 0x3EB19B4
	0x03BBF008 MOV X19, X0
	0x03BBF00C TBNZ X8, 0x0, 0x3BBF048
	0x03BBF010 ADRP X0, 0x55C000
	0x03BBF014 LDR X0, [X0 + 0x848]
	0x03BBF018 BL 0x1C16CF4
	0x03BBF01C ADRP X0, 0x59E000
	0x03BBF020 LDR X0, [X0 + 0x3A0]
	0x03BBF024 BL 0x1C16CF4
	0x03BBF028 ADRP X0, 0x59E000
	0x03BBF02C LDR X0, [X0 + 0x418]
	0x03BBF030 BL 0x1C16CF4
	0x03BBF034 ADRP X0, 0x59E000
	0x03BBF038 LDR X0, [X0 + 0x420]
	0x03BBF03C BL 0x1C16CF4
	0x03BBF040 MOVZ W8, 0x1
	0x03BBF044 STRB W8, [X20 + 0xD76]
	0x03BBF048 LDR X8, [X23]
	0x03BBF04C LDR W9, [X8 + 0xE0]
	0x03BBF050 CBNZ W9, 0x3BBF060
	0x03BBF054 MOV X0, X8
	0x03BBF058 BL 0x1C16DFC
	0x03BBF05C LDR X8, [X23]
	0x03BBF060 LDR X9, [X8 + 0xB8]
	0x03BBF064 LDR X10, [X9]
	0x03BBF068 CBNZ X10, 0x3BBF0D8
	0x03BBF06C LDR W10, [X8 + 0xE0]
	0x03BBF070 CBNZ W10, 0x3BBF084
	0x03BBF074 MOV X0, X8
	0x03BBF078 BL 0x1C16DFC
	0x03BBF07C LDR X8, [X23]
	0x03BBF080 LDR X9, [X8 + 0xB8]
	0x03BBF084 ADRP X8, 0x55C000
	0x03BBF088 LDR X20, [X9 + 0x8]
	0x03BBF08C LDR X8, [X8 + 0x848]
	0x03BBF090 LDR X0, [X8]
	0x03BBF094 ADRP X8, 0x59E000
	0x03BBF098 LDR X8, [X8 + 0x420]
	0x03BBF09C LDR X21, [X8]
	0x03BBF0A0 ADRP X8, 0x59E000
	0x03BBF0A4 LDR X8, [X8 + 0x418]
	0x03BBF0A8 LDR W9, [X0 + 0xE0]
	0x03BBF0AC LDR X22, [X8]
	0x03BBF0B0 CBNZ W9, 0x3BBF0B8
	0x03BBF0B4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x825000
	008 Move X23, 0x5A0000
	009 Move W8, [X20+3426]
	010 Move X23, [X23+912]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x55E000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5A0000
	020 Move X0, [X0+912]
	021 Call 0x1C17CF4
	022 Move X0, 0x5A0000
	023 Move X0, [X0+952]
	024 Call 0x1C17CF4
	025 Move X0, 0x5A0000
	026 Move X0, [X0+960]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3426], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x55D000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x59F000
	053 Move X8, [X8+960]
	054 Move X21, [X8]
	055 Move X8, 0x59F000
	056 Move X8, [X8+952]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03BBF0B8 MOV X0, X20
	0x03BBF0BC MOV X1, X21
	0x03BBF0C0 MOV X2, X22
	0x03BBF0C4 MOV X3, X31
	0x03BBF0C8 BL 0x36FAD70
	0x03BBF0CC LDR X8, [X23]
	0x03BBF0D0 LDR X9, [X8 + 0xB8]
	0x03BBF0D4 STR X0, [X9]
	0x03BBF0D8 LDR W9, [X8 + 0xE0]
	0x03BBF0DC CBNZ W9, 0x3BBF0EC
	0x03BBF0E0 MOV X0, X8
	0x03BBF0E4 BL 0x1C16DFC
	0x03BBF0E8 LDR X8, [X23]
	0x03BBF0EC LDR X8, [X8 + 0xB8]
	0x03BBF0F0 LDP X22, X21, [X31 + 0x10]
	0x03BBF0F4 LDR X8, [X8]
	0x03BBF0F8 STR X8, [X19]
	0x03BBF0FC LDP X20, X19, [X31 + 0x20]
	0x03BBF100 LDP X30, X23, [X31], #0x30
	0x03BBF104 RET
	0x03BBF108 STR X30, [X31 - 0x20]!
	0x03BBF10C STP X20, X19, [X31 + 0x10]
	0x03BBF110 ADRP X20, 0x823000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x824000
	005 Move X19, 0x59F000
	006 Move W8, [X20+3427]
	007 Move X19, [X19+912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x59F000
	013 Move X0, [X0+912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3427], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call StabilizeTransform_00000D3D$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03BBF114 ADRP X19, 0x59E000
	0x03BBF118 LDRB W8, [X20 + 0xD77]
	0x03BBF11C LDR X19, [X19 + 0x3A0]
	0x03BBF120 TBNZ X8, 0x0, 0x3BBF138
	0x03BBF124 ADRP X0, 0x59E000
	0x03BBF128 LDR X0, [X0 + 0x3A0]
	0x03BBF12C BL 0x1C16CF4
	0x03BBF130 MOVZ W8, 0x1
	0x03BBF134 STRB W8, [X20 + 0xD77]
	0x03BBF138 LDR X0, [X19]
	0x03BBF13C STR X31, [X31 + 0x8]
	0x03BBF140 LDR W8, [X0 + 0xE0]
	0x03BBF144 CBNZ W8, 0x3BBF14C
	0x03BBF148 BL 0x1C16DFC
	0x03BBF14C ADD X0, X31, 0x8
	0x03BBF150 BL 0x3BBEFEC
	0x03BBF154 LDR X0, [X31 + 0x8]
	0x03BBF158 LDP X20, X19, [X31 + 0x10]
	0x03BBF15C LDR X30, [X31], #0x20
	0x03BBF160 RET
	0x03BBF164 STP X30, X21, [X31 - 0x20]!
	0x03BBF168 STP X20, X19, [X31 + 0x10]
	0x03BBF16C ADRP X21, 0x823000
	0x03BBF170 ADRP X19, 0x59E000
	0x03BBF174 ADRP X20, 0x55C000
	0x03BBF178 LDRB W8, [X21 + 0xD78]
	0x03BBF17C LDR X19, [X19 + 0x428]
	0x03BBF180 LDR X20, [X20 + 0x848]
	0x03BBF184 TBNZ X8, 0x0, 0x3BBF1B4
	0x03BBF188 ADRP X0, 0x55C000
	0x03BBF18C LDR X0, [X0 + 0x848]
	0x03BBF190 BL 0x1C16CF4
	0x03BBF194 ADRP X0, 0x59E000
	0x03BBF198 LDR X0, [X0 + 0x3A0]
	0x03BBF19C BL 0x1C16CF4
	0x03BBF1A0 ADRP X0, 0x59E000
	0x03BBF1A4 LDR X0, [X0 + 0x428]
	0x03BBF1A8 BL 0x1C16CF4
	0x03BBF1AC MOVZ W8, 0x1
	0x03BBF1B0 STRB W8, [X21 + 0xD78]
	0x03BBF1B4 LDR X0, [X20]
	0x03BBF1B8 ADRP X20, 0x59E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x824000
	006 Move X19, 0x59F000
	007 Move X20, 0x55D000
	008 Move W8, [X21+3428]
	009 Move X19, [X19+968]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x55D000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x59F000
	019 Move X0, [X0+912]
	020 Call 0x1C17CF4
	021 Move X0, 0x59F000
	022 Move X0, [X0+968]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3428], W8
	026 Move X0, [X20]
	027 Move X20, 0x59F000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+912]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03BBF1BC LDR X19, [X19]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BBF1C0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Call StabilizeTransform_00000D3D$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 startPos, in Unity.Mathematics.quaternion startRot, in Unity.Mathematics.float3 targetPos, in Unity.Mathematics.quaternion targetRot, System.Single deltaTime, System.Single positionStabilization, System.Single angleStabilization, out Unity.Mathematics.float3 resultPos, out Unity.Mathematics.quaternion resultRot)

Disassembly:
	0x03BBE060 CBNZ W9, 0x3BBE068
	0x03BBE064 BL 0x1C16DFC
	0x03BBE068 MOV X0, X20
	0x03BBE06C MOV X1, X21
	0x03BBE070 MOV X2, X22
	0x03BBE074 MOV X3, X31
	0x03BBE078 BL 0x36FAD70
	0x03BBE07C LDR X8, [X23]
	0x03BBE080 LDR X9, [X8 + 0xB8]
	0x03BBE084 STR X0, [X9]
	0x03BBE088 LDR W9, [X8 + 0xE0]
	0x03BBE08C CBNZ W9, 0x3BBE09C
	0x03BBE090 MOV X0, X8
	0x03BBE094 BL 0x1C16DFC
	0x03BBE098 LDR X8, [X23]
	0x03BBE09C LDR X8, [X8 + 0xB8]
	0x03BBE0A0 LDP X22, X21, [X31 + 0x10]
	0x03BBE0A4 LDR X8, [X8]
	0x03BBE0A8 STR X8, [X19]
	0x03BBE0AC LDP X20, X19, [X31 + 0x20]
	0x03BBE0B0 LDP X30, X23, [X31], #0x30
	0x03BBE0B4 RET
	0x03BBE0B8 STR X30, [X31 - 0x20]!
	0x03BBE0BC STP X20, X19, [X31 + 0x10]
	0x03BBE0C0 ADRP X20, 0x824000
	0x03BBE0C4 ADRP X19, 0x59F000
	0x03BBE0C8 LDRB W8, [X20 + 0xD63]
	0x03BBE0CC LDR X19, [X19 + 0x390]
	0x03BBE0D0 TBNZ X8, 0x0, 0x3BBE0E8
	0x03BBE0D4 ADRP X0, 0x59F000
	0x03BBE0D8 LDR X0, [X0 + 0x390]
	0x03BBE0DC BL 0x1C16CF4
	0x03BBE0E0 MOVZ W8, 0x1
	0x03BBE0E4 STRB W8, [X20 + 0xD63]
	0x03BBE0E8 LDR X0, [X19]
	0x03BBE0EC STR X31, [X31 + 0x8]
	0x03BBE0F0 LDR W8, [X0 + 0xE0]
	0x03BBE0F4 CBNZ W8, 0x3BBE0FC
	0x03BBE0F8 BL 0x1C16DFC
	0x03BBE0FC ADD X0, X31, 0x8
	0x03BBE100 BL 0x3BBDF9C
	0x03BBE104 LDR X0, [X31 + 0x8]
	0x03BBE108 LDP X20, X19, [X31 + 0x10]
	0x03BBE10C LDR X30, [X31], #0x20
	0x03BBE110 RET
	0x03BBE114 STP X30, X21, [X31 - 0x20]!
	0x03BBE118 STP X20, X19, [X31 + 0x10]
	0x03BBE11C ADRP X21, 0x824000
	0x03BBE120 ADRP X19, 0x59F000
	0x03BBE124 ADRP X20, 0x55D000
	0x03BBE128 LDRB W8, [X21 + 0xD64]
	0x03BBE12C LDR X19, [X19 + 0x3C8]
	0x03BBE130 LDR X20, [X20 + 0x848]
	0x03BBE134 TBNZ X8, 0x0, 0x3BBE164
	0x03BBE138 ADRP X0, 0x55D000
	0x03BBE13C LDR X0, [X0 + 0x848]
	0x03BBE140 BL 0x1C16CF4
	0x03BBE144 ADRP X0, 0x59F000
	0x03BBE148 LDR X0, [X0 + 0x390]
	0x03BBE14C BL 0x1C16CF4
	0x03BBE150 ADRP X0, 0x59F000
	0x03BBE154 LDR X0, [X0 + 0x3C8]
	0x03BBE158 BL 0x1C16CF4
	0x03BBE15C MOVZ W8, 0x1
	0x03BBE160 STRB W8, [X21 + 0xD64]
	0x03BBE164 LDR X0, [X20]
	0x03BBE168 ADRP X20, 0x59F000
	0x03BBE16C LDR X19, [X19]
	0x03BBE170 LDR W8, [X0 + 0xE0]
	0x03BBE174 LDR X20, [X20 + 0x390]
	0x03BBE178 CBNZ W8, 0x3BBE180
	0x03BBE17C BL 0x1C16DFC
	0x03BBE180 MOV X0, X19
	0x03BBE184 MOV X1, X31
	0x03BBE188 BL 0x36FA754
	0x03BBE18C LDR X8, [X20]
	0x03BBE190 MOV X19, X0
	0x03BBE194 LDR W9, [X8 + 0xE0]
	0x03BBE198 CBNZ W9, 0x3BBE1A8
	0x03BBE19C MOV X0, X8

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0x825000
	014 Move X26, 0x55E000
	015 Move W8, [X25+3429]
	016 Move X26, [X26+2120]
	017 Move X19, X5
	018 Move X20, X4
	019 Move V8, V2
	020 Move V9, V1
	021 Move V10, V0
	022 Move X21, X3
	023 Move X22, X2
	024 Move X23, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x55E000
	031 Move X0, [X0+2120]
	032 Call 0x1C17CF4
	033 Move X0, 0x5A0000
	034 Move X0, [X0+912]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+3429], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call BurstCompiler.get_IsEnabled
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {82}
	049 Move X8, 0x5A0000
	050 Move X8, [X8+912]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Call StabilizeTransform_00000D3D$BurstDirectCall.GetFunctionPointer
	057 Compare X0, 0
	058 JumpIfEqual {82}
	059 Move X6, X0
	060 Move X0, X24
	061 Move X1, X23
	062 Move X2, X22
	063 Move X3, X21
	064 Move V1, V9
	065 Move V2, V8
	066 Move X4, X20
	067 Move X5, X19
	068 Move X20, [X31+80]
	069 Move X19, [X31+88]
	070 Move X22, [X31+64]
	071 Move X21, [X31+72]
	072 Move X24, [X31+48]
	073 Move X23, [X31+56]
	074 Move X26, [X31+32]
	075 Move X25, [X31+40]
	076 Move X30, [X31+24]
	077 Move D9, [X31+8]
	078 Move D8, [X31+16]
	079 Move V0, V10
	080 Move V10, [X31+96]
	081 CallNoReturn X6
	082 Move X0, X24
	083 Move X1, X23
	084 Move X2, X22
	085 Move X3, X21
	086 Move V1, V9
	087 Move V2, V8
	088 Move X4, X20
	089 Move X5, X19
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X30, [X31+24]
	099 Move D9, [X31+8]
	100 Move D8, [X31+16]
	101 Move V0, V10
	102 Move X6, X31
	103 Move V10, [X31+96]
	104 Call 0x3BCA268
	105 Return 

