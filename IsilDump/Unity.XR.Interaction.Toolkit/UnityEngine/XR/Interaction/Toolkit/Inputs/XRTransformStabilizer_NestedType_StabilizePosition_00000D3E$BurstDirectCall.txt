Type: UnityEngine.XR.Interaction.Toolkit.Inputs.XRTransformStabilizer/StabilizePosition_00000D3E$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03BBF390 STR X1, [X0 + 0x28]
	0x03BBF394 RET
	0x03BBF398 LDR X0, [X0 + 0x30]
	0x03BBF39C RET
	0x03BBF3A0 STR X30, [X31 - 0x20]!
	0x03BBF3A4 STP X20, X19, [X31 + 0x10]
	0x03BBF3A8 MOV X19, X1
	0x03BBF3AC MOV X20, X0
	0x03BBF3B0 BL 0x3BBF3C8
	0x03BBF3B4 STR X19, [X20 + 0x30]
	0x03BBF3B8 MOV X0, X20
	0x03BBF3BC LDP X20, X19, [X31 + 0x10]
	0x03BBF3C0 LDR X30, [X31], #0x20
	0x03BBF3C4 B 0x3BBF4AC
	0x03BBF3C8 STR X30, [X31 - 0x40]!
	0x03BBF3CC STP X24, X23, [X31 + 0x10]
	0x03BBF3D0 STP X22, X21, [X31 + 0x20]
	0x03BBF3D4 STP X20, X19, [X31 + 0x30]
	0x03BBF3D8 ADRP X20, 0x823000
	0x03BBF3DC ADRP X24, 0x538000
	0x03BBF3E0 ADRP X21, 0x59E000
	0x03BBF3E4 ADRP X22, 0x59E000
	0x03BBF3E8 ADRP X23, 0x59E000
	0x03BBF3EC LDRB W8, [X20 + 0xD8F]
	0x03BBF3F0 LDR X24, [X24 + 0x3D8]
	0x03BBF3F4 LDR X21, [X21 + 0x450]
	0x03BBF3F8 LDR X22, [X22 + 0x458]
	0x03BBF3FC LDR X23, [X23 + 0x460]
	0x03BBF400 MOV X19, X0
	0x03BBF404 TBNZ X8, 0x0, 0x3BBF440
	0x03BBF408 ADRP X0, 0x538000
	0x03BBF40C LDR X0, [X0 + 0x3D8]
	0x03BBF410 BL 0x1C16CF4
	0x03BBF414 ADRP X0, 0x59E000
	0x03BBF418 LDR X0, [X0 + 0x458]
	0x03BBF41C BL 0x1C16CF4
	0x03BBF420 ADRP X0, 0x59E000
	0x03BBF424 LDR X0, [X0 + 0x450]
	0x03BBF428 BL 0x1C16CF4
	0x03BBF42C ADRP X0, 0x59E000
	0x03BBF430 LDR X0, [X0 + 0x460]
	0x03BBF434 BL 0x1C16CF4
	0x03BBF438 MOVZ W8, 0x1
	0x03BBF43C STRB W8, [X20 + 0xD8F]
	0x03BBF440 LDR X0, [X24]
	0x03BBF444 LDR X20, [X19 + 0x30]
	0x03BBF448 BL 0x1C16F10
	0x03BBF44C LDR X2, [X21]
	0x03BBF450 MOV X1, X19
	0x03BBF454 MOV X3, X31
	0x03BBF458 MOV X21, X0
	0x03BBF45C BL 0x2A719B8
	0x03BBF460 LDR X0, [X24]
	0x03BBF464 BL 0x1C16F10
	0x03BBF468 LDR X2, [X22]
	0x03BBF46C MOV X1, X19
	0x03BBF470 MOV X3, X31
	0x03BBF474 MOV X22, X0
	0x03BBF478 BL 0x2A719B8
	0x03BBF47C LDR X0, [X23]
	0x03BBF480 LDR W8, [X0 + 0xE0]
	0x03BBF484 CBNZ W8, 0x3BBF48C
	0x03BBF488 BL 0x1C16DFC
	0x03BBF48C MOV X0, X20
	0x03BBF490 MOV X1, X21
	0x03BBF494 MOV X2, X22
	0x03BBF498 LDP X20, X19, [X31 + 0x30]
	0x03BBF49C LDP X22, X21, [X31 + 0x20]
	0x03BBF4A0 LDP X24, X23, [X31 + 0x10]
	0x03BBF4A4 LDR X30, [X31], #0x40
	0x03BBF4A8 B 0x3BC8490

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x824000
	008 Move X23, 0x59F000
	009 Move W8, [X20+3431]
	010 Move X23, [X23+920]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x55D000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x59F000
	020 Move X0, [X0+920]
	021 Call 0x1C17CF4
	022 Move X0, 0x59F000
	023 Move X0, [X0+976]
	024 Call 0x1C17CF4
	025 Move X0, 0x59F000
	026 Move X0, [X0+984]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3431], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x55D000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x59F000
	053 Move X8, [X8+984]
	054 Move X21, [X8]
	055 Move X8, 0x59F000
	056 Move X8, [X8+976]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03BBF4AC STR X30, [X31 - 0x40]!
	0x03BBF4B0 STP X24, X23, [X31 + 0x10]
	0x03BBF4B4 STP X22, X21, [X31 + 0x20]
	0x03BBF4B8 STP X20, X19, [X31 + 0x30]
	0x03BBF4BC ADRP X20, 0x823000
	0x03BBF4C0 ADRP X24, 0x538000
	0x03BBF4C4 ADRP X21, 0x59E000
	0x03BBF4C8 ADRP X22, 0x59E000
	0x03BBF4CC ADRP X23, 0x59E000
	0x03BBF4D0 LDRB W8, [X20 + 0xD8E]
	0x03BBF4D4 LDR X24, [X24 + 0x3D8]
	0x03BBF4D8 LDR X21, [X21 + 0x450]
	0x03BBF4DC LDR X22, [X22 + 0x458]
	0x03BBF4E0 LDR X23, [X23 + 0x460]
	0x03BBF4E4 MOV X19, X0
	0x03BBF4E8 TBNZ X8, 0x0, 0x3BBF524
	0x03BBF4EC ADRP X0, 0x538000
	0x03BBF4F0 LDR X0, [X0 + 0x3D8]
	0x03BBF4F4 BL 0x1C16CF4
	0x03BBF4F8 ADRP X0, 0x59E000
	0x03BBF4FC LDR X0, [X0 + 0x458]
	0x03BBF500 BL 0x1C16CF4
	0x03BBF504 ADRP X0, 0x59E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x824000
	005 Move X19, 0x59F000
	006 Move W8, [X20+3432]
	007 Move X19, [X19+920]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x59F000
	013 Move X0, [X0+920]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3432], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call StabilizePosition_00000D3E$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03BBF508 LDR X0, [X0 + 0x450]
	0x03BBF50C BL 0x1C16CF4
	0x03BBF510 ADRP X0, 0x59E000
	0x03BBF514 LDR X0, [X0 + 0x460]
	0x03BBF518 BL 0x1C16CF4
	0x03BBF51C MOVZ W8, 0x1
	0x03BBF520 STRB W8, [X20 + 0xD8E]
	0x03BBF524 LDR X0, [X24]
	0x03BBF528 LDR X20, [X19 + 0x30]
	0x03BBF52C BL 0x1C16F10
	0x03BBF530 LDR X2, [X21]
	0x03BBF534 MOV X1, X19
	0x03BBF538 MOV X3, X31
	0x03BBF53C MOV X21, X0
	0x03BBF540 BL 0x2A719B8
	0x03BBF544 LDR X0, [X24]
	0x03BBF548 BL 0x1C16F10
	0x03BBF54C LDR X2, [X22]
	0x03BBF550 MOV X1, X19
	0x03BBF554 MOV X3, X31
	0x03BBF558 MOV X22, X0
	0x03BBF55C BL 0x2A719B8
	0x03BBF560 LDR X0, [X23]
	0x03BBF564 LDR W8, [X0 + 0xE0]
	0x03BBF568 CBNZ W8, 0x3BBF570
	0x03BBF56C BL 0x1C16DFC
	0x03BBF570 MOV X0, X20
	0x03BBF574 MOV X1, X21
	0x03BBF578 MOV X2, X22
	0x03BBF57C LDP X20, X19, [X31 + 0x30]
	0x03BBF580 LDP X22, X21, [X31 + 0x20]
	0x03BBF584 LDP X24, X23, [X31 + 0x10]
	0x03BBF588 LDR X30, [X31], #0x40
	0x03BBF58C B 0x3BC8368
	0x03BBF590 LDR X0, [X0 + 0x38]
	0x03BBF594 RET
	0x03BBF598 STR X30, [X31 - 0x20]!
	0x03BBF59C STP X20, X19, [X31 + 0x10]
	0x03BBF5A0 MOV X19, X1
	0x03BBF5A4 MOV X20, X0
	0x03BBF5A8 BL 0x3BBF5C0
	0x03BBF5AC STR X19, [X20 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x824000
	006 Move X19, 0x59F000
	007 Move X20, 0x55D000
	008 Move W8, [X21+3433]
	009 Move X19, [X19+992]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x55D000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x59F000
	019 Move X0, [X0+920]
	020 Call 0x1C17CF4
	021 Move X0, 0x59F000
	022 Move X0, [X0+992]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3433], W8
	026 Move X0, [X20]
	027 Move X20, 0x59F000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+920]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03BBF5B0 MOV X0, X20

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BBF5B4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Call StabilizePosition_00000D3E$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 startPos, in Unity.Mathematics.float3 targetPos, System.Single deltaTime, System.Single positionStabilization, out Unity.Mathematics.float3 resultPos)

Disassembly:
	0x03BBE1A0 BL 0x1C16DFC
	0x03BBE1A4 LDR X8, [X20]
	0x03BBE1A8 LDR X8, [X8 + 0xB8]
	0x03BBE1AC STR X19, [X8 + 0x8]
	0x03BBE1B0 LDP X20, X19, [X31 + 0x10]
	0x03BBE1B4 LDP X30, X21, [X31], #0x20
	0x03BBE1B8 RET
	0x03BBE1BC RET
	0x03BBE1C0 B 0x3BBE114
	0x03BBE1C4 STP X30, X21, [X31 - 0x20]!
	0x03BBE1C8 STP X20, X19, [X31 + 0x10]
	0x03BBE1CC LDR X8, [X2 + 0x8]
	0x03BBE1D0 STP X1, X2, [X0 + 0x20]
	0x03BBE1D4 MOV X19, X0
	0x03BBE1D8 MOV X20, X1
	0x03BBE1DC STR X8, [X0 + 0x10]
	0x03BBE1E0 LDRB W21, [X2 + 0x52]
	0x03BBE1E4 STR X0, [X0 + 0x40]
	0x03BBE1E8 MOV X0, X2
	0x03BBE1EC BL 0x1C16D84
	0x03BBE1F0 TBZ X0, 0x0, 0x3BBE208
	0x03BBE1F4 CMP W21, 0x5
	0x03BBE1F8 B.NE 0x3BBE224
	0x03BBE1FC ADRP X8, 0xFFFFFFFFFE042000
	0x03BBE200 ADD X8, X8, 0xDC4
	0x03BBE204 B 0x3BBE218
	0x03BBE208 CMP W21, 0x4
	0x03BBE20C B.NE 0x3BBE220
	0x03BBE210 ADRP X8, 0xFFFFFFFFFE042000
	0x03BBE214 ADD X8, X8, 0xDAC
	0x03BBE218 STR X8, [X19 + 0x18]
	0x03BBE21C B 0x3BBE234
	0x03BBE220 CBZ X20, 0x3BBE24C
	0x03BBE224 LDR X8, [X19 + 0x10]
	0x03BBE228 LDR X9, [X19 + 0x20]
	0x03BBE22C STR X8, [X19 + 0x18]
	0x03BBE230 STR X9, [X19 + 0x40]
	0x03BBE234 ADRP X8, 0xFFFFFFFFFE042000
	0x03BBE238 ADD X8, X8, 0xD34
	0x03BBE23C STR X8, [X19 + 0x38]
	0x03BBE240 LDP X20, X19, [X31 + 0x10]
	0x03BBE244 LDP X30, X21, [X31], #0x20
	0x03BBE248 RET
	0x03BBE24C ADRP X1, 0xFFFFFFFFFCF5D000
	0x03BBE250 ADD X1, X1, 0xEE3
	0x03BBE254 MOV X0, X31
	0x03BBE258 BL 0x1C16F3C
	0x03BBE25C MOV X1, X31
	0x03BBE260 BL 0x1C16DEC
	0x03BBE264 LDR X8, [X0 + 0x40]
	0x03BBE268 LDR X5, [X0 + 0x18]
	0x03BBE26C LDR X4, [X0 + 0x28]
	0x03BBE270 MOV X0, X8
	0x03BBE274 BR X5
	0x03BBE278 SUB X31, X31, 0x90
	0x03BBE27C STP X30, X27, [X31 + 0x40]
	0x03BBE280 STP X26, X25, [X31 + 0x50]
	0x03BBE284 STP X24, X23, [X31 + 0x60]
	0x03BBE288 STP X22, X21, [X31 + 0x70]
	0x03BBE28C STP X20, X19, [X31 + 0x80]
	0x03BBE290 ADRP X27, 0x824000
	0x03BBE294 STP S1, S0, [X31 + 0x38]
	0x03BBE298 ADRP X25, 0x560000
	0x03BBE29C ADRP X26, 0x535000
	0x03BBE2A0 LDRB W8, [X27 + 0xD66]
	0x03BBE2A4 LDR X25, [X25 + 0x838]
	0x03BBE2A8 LDR X26, [X26 + 0xA90]
	0x03BBE2AC MOV X19, X5
	0x03BBE2B0 MOV X20, X4
	0x03BBE2B4 MOV X22, X3
	0x03BBE2B8 MOV X23, X2
	0x03BBE2BC MOV X24, X1
	0x03BBE2C0 MOV X21, X0
	0x03BBE2C4 TBNZ X8, 0x0, 0x3BBE2E8
	0x03BBE2C8 ADRP X0, 0x535000
	0x03BBE2CC LDR X0, [X0 + 0xA90]
	0x03BBE2D0 BL 0x1C16CF4
	0x03BBE2D4 ADRP X0, 0x560000
	0x03BBE2D8 LDR X0, [X0 + 0x838]
	0x03BBE2DC BL 0x1C16CF4
	0x03BBE2E0 MOVZ W8, 0x1
	0x03BBE2E4 STRB W8, [X27 + 0xD66]
	0x03BBE2E8 LDR X0, [X25]
	0x03BBE2EC MOVI V0.2D, 0x0
	0x03BBE2F0 MOV X1, X24
	0x03BBE2F4 STUR V0, [X31 + 0x28]
	0x03BBE2F8 STUR V0, [X31 + 0x18]
	0x03BBE2FC BL 0x1C16E04
	0x03BBE300 LDR X8, [X25]
	0x03BBE304 STR X0, [X31 + 0x8]
	0x03BBE308 MOV X1, X23
	0x03BBE30C MOV X0, X8
	0x03BBE310 BL 0x1C16E04
	0x03BBE314 LDR X8, [X26]
	0x03BBE318 STR X0, [X31 + 0x10]
	0x03BBE31C ADD X1, X31, 0x3C
	0x03BBE320 MOV X0, X8
	0x03BBE324 BL 0x1C16E04
	0x03BBE328 LDR X8, [X26]
	0x03BBE32C STR X0, [X31 + 0x18]
	0x03BBE330 ADD X1, X31, 0x38
	0x03BBE334 MOV X0, X8
	0x03BBE338 BL 0x1C16E04
	0x03BBE33C LDR X8, [X25]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, 0x825000
	016 Move X23, 0x55E000
	017 Move W8, [X22+3434]
	018 Move X23, [X23+2120]
	019 Move X19, X2
	020 Move V9, V1
	021 Move V8, V0
	022 Move X20, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x55E000
	029 Move X0, [X0+2120]
	030 Call 0x1C17CF4
	031 Move X0, 0x5A0000
	032 Move X0, [X0+920]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3434], W8
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X31
	042 Call BurstCompiler.get_IsEnabled
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {78}
	047 Move X8, 0x5A0000
	048 Move X8, [X8+920]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Call StabilizePosition_00000D3E$BurstDirectCall.GetFunctionPointer
	055 Compare X0, 0
	056 JumpIfEqual {78}
	057 Move X3, X0
	058 Move X0, X21
	059 Move X1, X20
	060 Move V0, V8
	061 Move V1, V9
	062 Move X2, X19
	063 Move X20, [X31+96]
	064 Move X19, [X31+104]
	065 Move X22, [X31+80]
	066 Move X21, [X31+88]
	067 Move X30, [X31+64]
	068 Move X23, [X31+72]
	069 Move D9, [X31+48]
	070 Move D8, [X31+56]
	071 Move D11, [X31+32]
	072 Move D10, [X31+40]
	073 Move D13, [X31+16]
	074 Move D12, [X31+24]
	075 Move D15, [X31+112]
	076 Move D14, [X31+120]
	077 CallNoReturn X3
	078 Move X22, 0x824000
	079 Move S10, [X20]
	080 Move S11, [X20+4]
	081 Move V12, [X20+8]
	082 Move S13, [X21]
	083 Move S14, [X21+4]
	084 Move W8, [X22+1413]
	085 Move V15, [X21+8]
	086 Compare W8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, 0x536000
	089 Move X0, [X0+1448]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X22+1413], W8
	093 Move X8, 0x536000
	094 Move X8, [X8+1448]
	095 Subtract S13, S10, S13
	096 Subtract S10, S11, S14
	097 Subtract S11, S12, S15
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Multiply S1, S13, S13
	104 Multiply S2, S10, S10
	105 Multiply S0, S11, S11
	106 Add S1, S1, S2
	107 Add S0, S0, S1
	108 NotImplemented "Instruction FSQRT not yet implemented."
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 Move V1, V8
	111 Call XRTransformStabilizer.CalculateStabilizedLerp, V0, V1
	112 Move V1, [X21]
	113 Move V2, [X21+8]
	114 Move V3, [X20]
	115 Move V4, [X20+8]
	116 Move X22, [X31+80]
	117 Move X21, [X31+88]
	118 Move X30, [X31+64]
	119 Move X23, [X31+72]
	120 Subtract V3, V3, V1
	121 Subtract S4, S4, S2
	122 NotImplemented "Instruction INVALID not yet implemented."
	123 Multiply S0, S0, S4
	124 Add V1, V1, V3
	125 Add S0, S2, S0
	126 Move [X19], D1
	127 Move [X19+8], S0
	128 Move X20, [X31+96]
	129 Move X19, [X31+104]
	130 Move D9, [X31+48]
	131 Move D8, [X31+56]
	132 Move D11, [X31+32]
	133 Move D10, [X31+40]
	134 Move D13, [X31+16]
	135 Move D12, [X31+24]
	136 Move D15, [X31+112]
	137 Move D14, [X31+120]
	138 Return 

