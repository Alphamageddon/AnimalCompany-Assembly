Type: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.Vector3FallbackComposite

Method: UnityEngine.Vector3 ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x03BCBC4C CBZ X21, 0x3BCBDC0
	0x03BCBC50 ADRP X8, 0x552000
	0x03BCBC54 LDR X8, [X8 + 0x570]
	0x03BCBC58 LDR X8, [X8]
	0x03BCBC5C STR X8, [X21 + 0x10]
	0x03BCBC60 LDR W10, [X20 + 0x1C]
	0x03BCBC64 LDR X8, [X20 + 0x10]
	0x03BCBC68 LDR X9, [X23]
	0x03BCBC6C ADD W10, W10, 0x1
	0x03BCBC70 STR W10, [X20 + 0x1C]
	0x03BCBC74 CBZ X8, 0x3BCBDC0
	0x03BCBC78 LDRSW X10, [X20 + 0x18]
	0x03BCBC7C LDR W11, [X8 + 0x18]
	0x03BCBC80 CMP W10, W11
	0x03BCBC84 B.CS 0x3BCBC9C
	0x03BCBC88 ADD W9, W10, 0x1
	0x03BCBC8C ADD X8, X8, X10, 0x3, LSL
	0x03BCBC90 STR W9, [X20 + 0x18]
	0x03BCBC94 STR X21, [X8 + 0x20]
	0x03BCBC98 B 0x3BCBCB4
	0x03BCBC9C LDR X8, [X9 + 0x20]
	0x03BCBCA0 MOV X0, X20
	0x03BCBCA4 MOV X1, X21
	0x03BCBCA8 LDR X8, [X8 + 0xC0]
	0x03BCBCAC LDR X2, [X8 + 0x70]
	0x03BCBCB0 BL 0x301BF90
	0x03BCBCB4 LDR X0, [X22]
	0x03BCBCB8 BL 0x1C16F10
	0x03BCBCBC MOV X1, X31
	0x03BCBCC0 MOV X21, X0
	0x03BCBCC4 BL 0x33BDD8C
	0x03BCBCC8 CBZ X21, 0x3BCBDC0
	0x03BCBCCC ADRP X8, 0x552000
	0x03BCBCD0 LDR X8, [X8 + 0x558]
	0x03BCBCD4 LDR X8, [X8]
	0x03BCBCD8 STR X8, [X21 + 0x10]
	0x03BCBCDC LDR W10, [X20 + 0x1C]
	0x03BCBCE0 LDR X8, [X20 + 0x10]
	0x03BCBCE4 LDR X9, [X23]
	0x03BCBCE8 ADD W10, W10, 0x1
	0x03BCBCEC STR W10, [X20 + 0x1C]
	0x03BCBCF0 CBZ X8, 0x3BCBDC0
	0x03BCBCF4 LDRSW X10, [X20 + 0x18]
	0x03BCBCF8 LDR W11, [X8 + 0x18]
	0x03BCBCFC CMP W10, W11
	0x03BCBD00 B.CS 0x3BCBD18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x818000
	007 Move X21, 0x593000
	008 Move W8, [X22+3576]
	009 Move X21, [X21+1992]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x593000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move X0, 0x593000
	020 Move X0, [X0+1992]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3576], W8
	024 Move [X31+8], X31
	025 Move W1, [X20+16]
	026 Move X4, [X21]
	027 Add X2, X31, 8
	028 Move X0, X19
	029 Move X3, X31
	030 Call InputBindingCompositeContext.ReadValue, X0, X1, X2, X3
	031 Move X8, [X31+8]
	032 Compare X8, 0
	033 JumpIfNotEqual {50}
	034 Move W1, [X20+20]
	035 Move X4, [X21]
	036 Add X2, X31, 8
	037 Move X0, X19
	038 Move X3, X31
	039 Call InputBindingCompositeContext.ReadValue, X0, X1, X2, X3
	040 Move X8, [X31+8]
	041 Compare X8, 0
	042 JumpIfNotEqual {50}
	043 Move X8, 0x593000
	044 Move W1, [X20+24]
	045 Move X8, [X8+2000]
	046 Move X0, X19
	047 Move X2, X31
	048 Move X3, [X8]
	049 Call InputBindingCompositeContext.ReadValue, X0, X1, X2
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0

Method: System.Void Initialize()

Disassembly:
	0x03BCBD04 ADD W9, W10, 0x1

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BCBD08 ADD X8, X8, X10, 0x3, LSL
	0x03BCBD0C STR W9, [X20 + 0x18]
	0x03BCBD10 STR X21, [X8 + 0x20]
	0x03BCBD14 B 0x3BCBD30
	0x03BCBD18 LDR X8, [X9 + 0x20]
	0x03BCBD1C MOV X0, X20
	0x03BCBD20 MOV X1, X21
	0x03BCBD24 LDR X8, [X8 + 0xC0]
	0x03BCBD28 LDR X2, [X8 + 0x70]
	0x03BCBD2C BL 0x301BF90
	0x03BCBD30 LDR X0, [X22]
	0x03BCBD34 BL 0x1C16F10
	0x03BCBD38 MOV X1, X31
	0x03BCBD3C MOV X21, X0
	0x03BCBD40 BL 0x33BDD8C
	0x03BCBD44 CBZ X21, 0x3BCBDC0
	0x03BCBD48 ADRP X8, 0x552000
	0x03BCBD4C LDR X8, [X8 + 0x560]
	0x03BCBD50 LDR X8, [X8]
	0x03BCBD54 STR X8, [X21 + 0x10]
	0x03BCBD58 LDR W10, [X20 + 0x1C]
	0x03BCBD5C LDR X8, [X20 + 0x10]
	0x03BCBD60 LDR X9, [X23]
	0x03BCBD64 ADD W10, W10, 0x1
	0x03BCBD68 STR W10, [X20 + 0x1C]
	0x03BCBD6C CBZ X8, 0x3BCBDC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x818000
	005 Move X19, 0x551000
	006 Move W8, [X20+3577]
	007 Move X19, [X19+624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x593000
	013 Move X0, [X0+2008]
	014 Call 0x1C17CF4
	015 Move X0, 0x551000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3577], W8
	020 Move X0, [X19]
	021 Move X19, 0x593000
	022 Move W8, [X0+224]
	023 Move X19, [X19+2008]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X1, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X31
	031 Move X30, [X31+32]
	032 Call 0x220D4A8, X0
	033 Return 

Method: System.Void .ctor()

Disassembly:
	0x03BCBD70 LDRSW X10, [X20 + 0x18]
	0x03BCBD74 LDR W11, [X8 + 0x18]
	0x03BCBD78 CMP W10, W11
	0x03BCBD7C B.CS 0x3BCBD94
	0x03BCBD80 ADD W9, W10, 0x1
	0x03BCBD84 ADD X8, X8, X10, 0x3, LSL
	0x03BCBD88 STR W9, [X20 + 0x18]
	0x03BCBD8C STR X21, [X8 + 0x20]
	0x03BCBD90 B 0x3BCBDAC
	0x03BCBD94 LDR X8, [X9 + 0x20]
	0x03BCBD98 MOV X0, X20
	0x03BCBD9C MOV X1, X21
	0x03BCBDA0 LDR X8, [X8 + 0xC0]
	0x03BCBDA4 LDR X2, [X8 + 0x70]
	0x03BCBDA8 BL 0x301BF90
	0x03BCBDAC STR X20, [X19 + 0x10]
	0x03BCBDB0 LDP X20, X19, [X31 + 0x20]
	0x03BCBDB4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x818000
	006 Move X21, 0x593000
	007 Move W8, [X20+3578]
	008 Move X21, [X21+2016]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x593000
	015 Move X0, [X0+2016]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3578], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call FallbackComposite`1<Vector3>..ctor, X0
	026 Return 

