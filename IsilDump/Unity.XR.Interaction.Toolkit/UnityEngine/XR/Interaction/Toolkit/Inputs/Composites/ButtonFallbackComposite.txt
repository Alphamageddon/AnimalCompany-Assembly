Type: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.ButtonFallbackComposite

Method: System.Single ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x03BCC084 CMP W24, 0x1
	0x03BCC088 MOV X22, X25
	0x03BCC08C B.GT 0x3BCBF58
	0x03BCC090 LDP X20, X19, [X31 + 0x60]
	0x03BCC094 LDP X22, X21, [X31 + 0x50]
	0x03BCC098 LDP X24, X23, [X31 + 0x40]
	0x03BCC09C LDP X26, X25, [X31 + 0x30]
	0x03BCC0A0 LDP X28, X27, [X31 + 0x20]
	0x03BCC0A4 LDP X29, X30, [X31 + 0x10]
	0x03BCC0A8 ADD X31, X31, 0x70
	0x03BCC0AC RET
	0x03BCC0B0 BL 0x1C16F20
	0x03BCC0B4 SUB X31, X31, 0x30
	0x03BCC0B8 STP X30, X21, [X31 + 0x10]
	0x03BCC0BC STP X20, X19, [X31 + 0x20]
	0x03BCC0C0 ADRP X21, 0x816000
	0x03BCC0C4 ADRP X20, 0x551000
	0x03BCC0C8 LDRB W8, [X21 + 0xE28]
	0x03BCC0CC LDR X20, [X20 + 0x4F0]
	0x03BCC0D0 MOV W19, W0
	0x03BCC0D4 TBNZ X8, 0x0, 0x3BCC0F8
	0x03BCC0D8 ADRP X0, 0x551000
	0x03BCC0DC LDR X0, [X0 + 0x4F0]
	0x03BCC0E0 BL 0x1C16CF4
	0x03BCC0E4 ADRP X0, 0x591000
	0x03BCC0E8 LDR X0, [X0 + 0x920]
	0x03BCC0EC BL 0x1C16CF4
	0x03BCC0F0 MOVZ W8, 0x1
	0x03BCC0F4 STRB W8, [X21 + 0xE28]
	0x03BCC0F8 LDR X0, [X20]
	0x03BCC0FC STR X31, [X31 + 0x8]
	0x03BCC100 LDR W8, [X0 + 0xE0]
	0x03BCC104 CBNZ W8, 0x3BCC110
	0x03BCC108 BL 0x1C16DFC
	0x03BCC10C LDR X0, [X20]
	0x03BCC110 LDR X8, [X0 + 0xB8]
	0x03BCC114 LDR X0, [X8 + 0x10]
	0x03BCC118 CBZ X0, 0x3BCC150
	0x03BCC11C ADRP X8, 0x591000
	0x03BCC120 LDR X8, [X8 + 0x920]
	0x03BCC124 ADD X2, X31, 0x8
	0x03BCC128 MOV W1, W19
	0x03BCC12C LDR X3, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x817000
	007 Move X21, 0x592000
	008 Move W8, [X22+3585]
	009 Move X21, [X21+2088]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x592000
	017 Move X0, [X0+2088]
	018 Call 0x1C17CF4
	019 Move X0, 0x57B000
	020 Move X0, [X0+1784]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3585], W8
	024 Move [X31+8], X31
	025 Move W1, [X20+16]
	026 Move X3, [X21]
	027 Add X2, X31, 8
	028 Move X0, X19
	029 Call InputBindingCompositeContext.ReadValue, X0, X1, X2
	030 Move X8, [X31+8]
	031 Compare X8, 0
	032 JumpIfNotEqual {47}
	033 Move W1, [X20+20]
	034 Move X3, [X21]
	035 Add X2, X31, 8
	036 Move X0, X19
	037 Call InputBindingCompositeContext.ReadValue, X0, X1, X2
	038 Move X8, [X31+8]
	039 Compare X8, 0
	040 JumpIfNotEqual {47}
	041 Move X8, 0x57B000
	042 Move W1, [X20+24]
	043 Move X8, [X8+1784]
	044 Move X0, X19
	045 Move X2, [X8]
	046 Call InputBindingCompositeContext.ReadValue, X0, X1
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return V0

Method: System.Single EvaluateMagnitude(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x03BCC130 BL 0x29D4F58
	0x03BCC134 LDR X8, [X31 + 0x8]
	0x03BCC138 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+472]
	003 Move X2, [X8+480]
	004 CallNoReturn X3

Method: System.Void Initialize()

Disassembly:
	0x03BCC13C LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BCC140 ANDS W31, W0, 0x1
	0x03BCC144 CSEL X0, X8, X31, NE
	0x03BCC148 ADD X31, X31, 0x30
	0x03BCC14C RET
	0x03BCC150 BL 0x1C16F20
	0x03BCC154 STP X30, X21, [X31 - 0x20]!
	0x03BCC158 STP X20, X19, [X31 + 0x10]
	0x03BCC15C ADRP X21, 0x816000
	0x03BCC160 LDRB W8, [X21 + 0xE1B]
	0x03BCC164 MOV W19, W1
	0x03BCC168 MOV X20, X0
	0x03BCC16C TBNZ X8, 0x0, 0x3BCC190
	0x03BCC170 ADRP X0, 0x591000
	0x03BCC174 LDR X0, [X0 + 0x910]
	0x03BCC178 BL 0x1C16CF4
	0x03BCC17C ADRP X0, 0x591000
	0x03BCC180 LDR X0, [X0 + 0x918]
	0x03BCC184 BL 0x1C16CF4
	0x03BCC188 MOVZ W8, 0x1
	0x03BCC18C STRB W8, [X21 + 0xE1B]
	0x03BCC190 LDR X0, [X20 + 0x10]
	0x03BCC194 CBZ X0, 0x3BCC1D0
	0x03BCC198 LDR W8, [X0 + 0x18]
	0x03BCC19C CMP W8, W19, UXTB
	0x03BCC1A0 B.LE 0x3BCC1C0
	0x03BCC1A4 ADRP X8, 0x591000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x817000
	005 Move X19, 0x550000
	006 Move W8, [X20+3586]
	007 Move X19, [X19+624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x592000
	013 Move X0, [X0+2096]
	014 Call 0x1C17CF4
	015 Move X0, 0x550000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3586], W8
	020 Move X0, [X19]
	021 Move X19, 0x592000
	022 Move W8, [X0+224]
	023 Move X19, [X19+2096]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X1, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X31
	031 Move X30, [X31+32]
	032 Call 0x220D4A8, X0
	033 Return 

Method: System.Void .ctor()

Disassembly:
	0x03BCC1A8 LDR X8, [X8 + 0x918]
	0x03BCC1AC AND W1, W19, 0xFF
	0x03BCC1B0 LDP X20, X19, [X31 + 0x10]
	0x03BCC1B4 LDR X2, [X8]
	0x03BCC1B8 LDP X30, X21, [X31], #0x20
	0x03BCC1BC B 0x301BCCC
	0x03BCC1C0 LDP X20, X19, [X31 + 0x10]
	0x03BCC1C4 MOV X0, X31
	0x03BCC1C8 LDP X30, X21, [X31], #0x20
	0x03BCC1CC RET
	0x03BCC1D0 BL 0x1C16F20
	0x03BCC1D4 STR X30, [X31 - 0x30]!
	0x03BCC1D8 STP X22, X21, [X31 + 0x10]
	0x03BCC1DC STP X20, X19, [X31 + 0x20]
	0x03BCC1E0 ADRP X21, 0x816000
	0x03BCC1E4 ADRP X22, 0x591000
	0x03BCC1E8 LDRB W8, [X21 + 0xE1C]
	0x03BCC1EC LDR X22, [X22 + 0x928]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x817000
	006 Move X21, 0x592000
	007 Move W8, [X20+3587]
	008 Move X21, [X21+2104]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x592000
	015 Move X0, [X0+2104]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3587], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call FallbackComposite`1<Single>..ctor, X0
	026 Return 

