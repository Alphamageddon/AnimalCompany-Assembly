Type: UnityEngine.XR.Interaction.Toolkit.Inputs.Composites.QuaternionFallbackComposite

Method: UnityEngine.Quaternion ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context)

Disassembly:
	0x03BCBDB8 LDP X30, X23, [X31], #0x30
	0x03BCBDBC RET
	0x03BCBDC0 BL 0x1C16F20
	0x03BCBDC4 SUB X31, X31, 0x70
	0x03BCBDC8 STP X29, X30, [X31 + 0x10]
	0x03BCBDCC STP X28, X27, [X31 + 0x20]
	0x03BCBDD0 STP X26, X25, [X31 + 0x30]
	0x03BCBDD4 STP X24, X23, [X31 + 0x40]
	0x03BCBDD8 STP X22, X21, [X31 + 0x50]
	0x03BCBDDC STP X20, X19, [X31 + 0x60]
	0x03BCBDE0 ADRP X20, 0x817000
	0x03BCBDE4 LDRB W8, [X20 + 0xE1A]
	0x03BCBDE8 MOV X19, X0
	0x03BCBDEC TBNZ X8, 0x0, 0x3BCBE64
	0x03BCBDF0 ADRP X0, 0x552000
	0x03BCBDF4 LDR X0, [X0 + 0x4F0]
	0x03BCBDF8 BL 0x1C16CF4
	0x03BCBDFC ADRP X0, 0x592000
	0x03BCBE00 LDR X0, [X0 + 0x900]
	0x03BCBE04 BL 0x1C16CF4
	0x03BCBE08 ADRP X0, 0x529000
	0x03BCBE0C LDR X0, [X0 + 0x9D8]
	0x03BCBE10 BL 0x1C16CF4
	0x03BCBE14 ADRP X0, 0x528000
	0x03BCBE18 LDR X0, [X0 + 0xA28]
	0x03BCBE1C BL 0x1C16CF4
	0x03BCBE20 ADRP X0, 0x592000
	0x03BCBE24 LDR X0, [X0 + 0x908]
	0x03BCBE28 BL 0x1C16CF4
	0x03BCBE2C ADRP X0, 0x592000
	0x03BCBE30 LDR X0, [X0 + 0x910]
	0x03BCBE34 BL 0x1C16CF4
	0x03BCBE38 ADRP X0, 0x592000
	0x03BCBE3C LDR X0, [X0 + 0x918]
	0x03BCBE40 BL 0x1C16CF4
	0x03BCBE44 ADRP X0, 0x52E000
	0x03BCBE48 LDR X0, [X0 + 0x4E8]
	0x03BCBE4C BL 0x1C16CF4
	0x03BCBE50 ADRP X0, 0x552000
	0x03BCBE54 LDR X0, [X0 + 0x580]
	0x03BCBE58 BL 0x1C16CF4
	0x03BCBE5C MOVZ W8, 0x1
	0x03BCBE60 STRB W8, [X20 + 0xE1A]
	0x03BCBE64 LDR X8, [X19 + 0x10]
	0x03BCBE68 CBZ X8, 0x3BCC090
	0x03BCBE6C ADRP X22, 0x552000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x818000
	007 Move X21, 0x593000
	008 Move W8, [X22+3579]
	009 Move X21, [X21+2024]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x593000
	017 Move X0, [X0+2024]
	018 Call 0x1C17CF4
	019 Move X0, 0x593000
	020 Move X0, [X0+2032]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3579], W8
	024 Move [X31+8], X31
	025 Move W1, [X20+16]
	026 Move X4, [X21]
	027 Add X2, X31, 8
	028 Move X0, X19
	029 Move X3, X31
	030 Call 0x21FC858, X0, X1, X2, X3
	031 Move X8, [X31+8]
	032 Compare X8, 0
	033 JumpIfNotEqual {50}
	034 Move W1, [X20+20]
	035 Move X4, [X21]
	036 Add X2, X31, 8
	037 Move X0, X19
	038 Move X3, X31
	039 Call 0x21FC858, X0, X1, X2, X3
	040 Move X8, [X31+8]
	041 Compare X8, 0
	042 JumpIfNotEqual {50}
	043 Move X8, 0x593000
	044 Move W1, [X20+24]
	045 Move X8, [X8+2032]
	046 Move X0, X19
	047 Move X2, X31
	048 Move X3, [X8]
	049 Call 0x21FC5DC, X0, X1, X2
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0

Method: System.Void Initialize()

Disassembly:
	0x03BCBE70 LDR X22, [X22 + 0x4F0]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BCBE74 LDR W20, [X8 + 0x18]
	0x03BCBE78 LDR X0, [X22]
	0x03BCBE7C LDR W9, [X0 + 0xE0]
	0x03BCBE80 CBNZ W9, 0x3BCBE88
	0x03BCBE84 BL 0x1C16DFC
	0x03BCBE88 ADRP X21, 0x80F000
	0x03BCBE8C LDRB W8, [X21 + 0x138]
	0x03BCBE90 CBNZ W8, 0x3BCBEA8
	0x03BCBE94 ADRP X0, 0x552000
	0x03BCBE98 LDR X0, [X0 + 0x4F0]
	0x03BCBE9C BL 0x1C16CF4
	0x03BCBEA0 MOVZ W8, 0x1
	0x03BCBEA4 STRB W8, [X21 + 0x138]
	0x03BCBEA8 LDR X0, [X22]
	0x03BCBEAC LDR W8, [X0 + 0xE0]
	0x03BCBEB0 CBNZ W8, 0x3BCBEBC
	0x03BCBEB4 BL 0x1C16DFC
	0x03BCBEB8 LDR X0, [X22]
	0x03BCBEBC LDR X8, [X0 + 0xB8]
	0x03BCBEC0 LDRB W8, [X8 + 0x18]
	0x03BCBEC4 SUB W21, W8, W20
	0x03BCBEC8 CMP W21, 0x1
	0x03BCBECC B.LT 0x3BCC090
	0x03BCBED0 CMP W20, 0x1
	0x03BCBED4 B.LE 0x3BCBEFC
	0x03BCBED8 LDR X0, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x818000
	005 Move X19, 0x551000
	006 Move W8, [X20+3580]
	007 Move X19, [X19+624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x593000
	013 Move X0, [X0+2040]
	014 Call 0x1C17CF4
	015 Move X0, 0x551000
	016 Move X0, [X0+624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3580], W8
	020 Move X0, [X19]
	021 Move X19, 0x593000
	022 Move W8, [X0+224]
	023 Move X19, [X19+2040]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X1, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X31
	031 Move X30, [X31+32]
	032 Call 0x220D4A8, X0
	033 Return 

Method: System.Void .ctor()

Disassembly:
	0x03BCBEDC CBZ X0, 0x3BCC0B0
	0x03BCBEE0 ADRP X8, 0x592000
	0x03BCBEE4 LDR X8, [X8 + 0x918]
	0x03BCBEE8 MOVZ W1, 0x1
	0x03BCBEEC LDR X2, [X8]
	0x03BCBEF0 BL 0x301BCCC
	0x03BCBEF4 MOV X20, X0
	0x03BCBEF8 B 0x3BCBF2C
	0x03BCBEFC ADRP X8, 0x592000
	0x03BCBF00 LDR X8, [X8 + 0x900]
	0x03BCBF04 LDR X0, [X8]
	0x03BCBF08 BL 0x1C16F10
	0x03BCBF0C MOV X1, X31
	0x03BCBF10 MOV X20, X0
	0x03BCBF14 BL 0x33BDD8C
	0x03BCBF18 CBZ X20, 0x3BCC0B0
	0x03BCBF1C ADRP X8, 0x52E000
	0x03BCBF20 LDR X8, [X8 + 0x4E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x818000
	006 Move X21, 0x593000
	007 Move W8, [X20+3581]
	008 Move X21, [X21+2048]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x593000
	015 Move X0, [X0+2048]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3581], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call FallbackComposite`1<Quaternion>..ctor, X0
	026 Return 

