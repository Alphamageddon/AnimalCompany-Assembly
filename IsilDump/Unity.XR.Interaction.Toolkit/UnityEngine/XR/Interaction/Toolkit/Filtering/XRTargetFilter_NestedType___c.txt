Type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetFilter/<>c

Method: System.Void .cctor()

Disassembly:
	0x03BBA410 LDR X22, [X22 + 0x308]
	0x03BBA414 MOV X0, X21
	0x03BBA418 MOV X1, X20
	0x03BBA41C BL 0x220B6E4
	0x03BBA420 CBZ X0, 0x3BBA458
	0x03BBA424 MOV X20, X0
	0x03BBA428 LDR X0, [X23]
	0x03BBA42C BL 0x1C16F10
	0x03BBA430 LDR X2, [X22]
	0x03BBA434 MOV X1, X19
	0x03BBA438 MOV X3, X31
	0x03BBA43C MOV X21, X0
	0x03BBA440 BL 0x2984034
	0x03BBA444 MOV X0, X19
	0x03BBA448 MOV X1, X20
	0x03BBA44C MOV X2, X21
	0x03BBA450 BL 0x3BBAC5C
	0x03BBA454 B 0x3BBA4AC
	0x03BBA458 ADD X1, X31, 0x0
	0x03BBA45C MOVZ W0, 0x264
	0x03BBA460 BL 0x3BBACF0
	0x03BBA464 TBZ X0, 0x0, 0x3BBA4A0
	0x03BBA468 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x829000
	005 Move X20, 0x5A4000
	006 Move W8, [X19+3362]
	007 Move X20, [X20+584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5A4000
	013 Move X0, [X0+584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3362], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03BBA46C LDP X20, X21, [X31]
	0x03BBA470 BL 0x1C16F10

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> <.cctor>b__49_0()

Disassembly:
	0x03BBA474 LDR X2, [X22]
	0x03BBA478 MOV X1, X19
	0x03BBA47C MOV X3, X31
	0x03BBA480 MOV X22, X0
	0x03BBA484 BL 0x2984034
	0x03BBA488 MOV X0, X19
	0x03BBA48C MOV X1, X20
	0x03BBA490 MOV X2, X21
	0x03BBA494 MOV X3, X22
	0x03BBA498 BL 0x3BBAE38
	0x03BBA49C B 0x3BBA4AC
	0x03BBA4A0 MOV X0, X19
	0x03BBA4A4 MOV W1, W31
	0x03BBA4A8 BL 0x3BBABBC
	0x03BBA4AC LDP X20, X19, [X31 + 0x30]
	0x03BBA4B0 LDP X22, X21, [X31 + 0x20]
	0x03BBA4B4 LDP X30, X23, [X31 + 0x10]
	0x03BBA4B8 ADD X31, X31, 0x40
	0x03BBA4BC RET
	0x03BBA4C0 STP X30, X25, [X31 - 0x40]!
	0x03BBA4C4 STP X24, X23, [X31 + 0x10]
	0x03BBA4C8 STP X22, X21, [X31 + 0x20]
	0x03BBA4CC STP X20, X19, [X31 + 0x30]
	0x03BBA4D0 ADRP X22, 0x828000
	0x03BBA4D4 ADRP X23, 0x58D000
	0x03BBA4D8 ADRP X20, 0x5A3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x829000
	006 Move X21, 0x5A4000
	007 Move X19, 0x5A4000
	008 Move W8, [X20+3363]
	009 Move X21, [X21+568]
	010 Move X19, [X19+576]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5A4000
	016 Move X0, [X0+576]
	017 Call 0x1C17CF4
	018 Move X0, 0x5A4000
	019 Move X0, [X0+568]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3363], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, [X19]
	026 Move X19, X0
	027 Call List`1<Object>..ctor, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Void <.cctor>b__49_1(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> list)

Disassembly:
	0x03BBA4DC ADRP X21, 0x561000
	0x03BBA4E0 LDRB W8, [X22 + 0xD2E]
	0x03BBA4E4 LDR X23, [X23 + 0xB88]
	0x03BBA4E8 LDR X20, [X20 + 0x2D8]
	0x03BBA4EC LDR X21, [X21 + 0x270]
	0x03BBA4F0 MOV X19, X0
	0x03BBA4F4 TBNZ X8, 0x0, 0x3BBA578
	0x03BBA4F8 ADRP X0, 0x5A3000
	0x03BBA4FC LDR X0, [X0 + 0x2B8]
	0x03BBA500 BL 0x1C16CF4
	0x03BBA504 ADRP X0, 0x5A3000
	0x03BBA508 LDR X0, [X0 + 0x2C0]
	0x03BBA50C BL 0x1C16CF4
	0x03BBA510 ADRP X0, 0x58D000
	0x03BBA514 LDR X0, [X0 + 0xB88]
	0x03BBA518 BL 0x1C16CF4
	0x03BBA51C ADRP X0, 0x561000
	0x03BBA520 LDR X0, [X0 + 0x270]
	0x03BBA524 BL 0x1C16CF4
	0x03BBA528 ADRP X0, 0x5A3000
	0x03BBA52C LDR X0, [X0 + 0x2C8]
	0x03BBA530 BL 0x1C16CF4
	0x03BBA534 ADRP X0, 0x5A3000
	0x03BBA538 LDR X0, [X0 + 0x2D0]
	0x03BBA53C BL 0x1C16CF4
	0x03BBA540 ADRP X0, 0x5A3000
	0x03BBA544 LDR X0, [X0 + 0x2D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x829000
	005 Move W8, [X20+3364]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5A4000
	012 Move X0, [X0+360]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3364], W8
	016 Compare X19, 0
	017 JumpIfEqual {36}
	018 Move W2, [X19+24]
	019 Move W8, [X19+28]
	020 Add W8, W8, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+24], W31
	023 Move [X19+28], W8
	024 Move X0, [X19+16]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, W31
	028 Move X3, X31
	029 Move X30, [X31+32]
	030 Call Array.Clear, X0, X1, X2
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Call 0x1C17F20

