Type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRLastSelectedEvaluator

Method: System.Single get_maxTime()

Disassembly:
	0x03BB6F74 MOVZ W8, 0x1
	0x03BB6F78 STRB W8, [X21 + 0xD04]

ISIL:
	001 Move V0, [X0+56]
	002 Return V0

Method: System.Void set_maxTime(System.Single value)

Disassembly:
	0x03BB6F7C LDR X0, [X20]
	0x03BB6F80 LDR X20, [X19 + 0x10]

ISIL:
	001 Move [X0+56], S0
	002 Return 

Method: System.Void OnSelect(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03BB6F84 LDR W8, [X0 + 0xE0]
	0x03BB6F88 CBNZ W8, 0x3BB6F90
	0x03BB6F8C BL 0x1C16DFC
	0x03BB6F90 MOV X0, X20
	0x03BB6F94 MOV X1, X31
	0x03BB6F98 MOV X2, X31
	0x03BB6F9C BL 0x3C354F8
	0x03BB6FA0 TBZ X0, 0x0, 0x3BB6FBC
	0x03BB6FA4 LDR X0, [X19 + 0x10]
	0x03BB6FA8 CBZ X0, 0x3BB6FC8
	0x03BB6FAC MOV X1, X19
	0x03BB6FB0 LDP X20, X19, [X31 + 0x10]
	0x03BB6FB4 LDP X30, X21, [X31], #0x20
	0x03BB6FB8 B 0x3BB6FCC
	0x03BB6FBC LDP X20, X19, [X31 + 0x10]
	0x03BB6FC0 LDP X30, X21, [X31], #0x20
	0x03BB6FC4 RET
	0x03BB6FC8 BL 0x1C16F20
	0x03BB6FCC STP X30, X21, [X31 - 0x20]!
	0x03BB6FD0 STP X20, X19, [X31 + 0x10]
	0x03BB6FD4 ADRP X21, 0x82C000
	0x03BB6FD8 LDRB W8, [X21 + 0xD1B]
	0x03BB6FDC MOV X20, X1
	0x03BB6FE0 MOV X19, X0
	0x03BB6FE4 TBNZ X8, 0x0, 0x3BB6FFC
	0x03BB6FE8 ADRP X0, 0x5A7000
	0x03BB6FEC LDR X0, [X0 + 0x120]
	0x03BB6FF0 BL 0x1C16CF4
	0x03BB6FF4 MOVZ W8, 0x1
	0x03BB6FF8 STRB W8, [X21 + 0xD1B]
	0x03BB6FFC LDRB W8, [X19 + 0x31]
	0x03BB7000 CBNZ W8, 0x3BB7044
	0x03BB7004 LDR X0, [X19 + 0x28]
	0x03BB7008 CBZ X0, 0x3BB70C0
	0x03BB700C ADRP X8, 0x5A6000
	0x03BB7010 LDR X8, [X8 + 0x120]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x82D000
	006 Move W8, [X21+3323]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5A5000
	014 Move X0, [X0+3424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3323], W8
	018 Move W8, [X19+24]
	019 Compare W8, 0
	020 JumpIfEqual {45}
	021 Compare X20, 0
	022 JumpIfEqual {50}
	023 Move X0, X20
	024 Move X1, X31
	025 Call SelectEnterEventArgs.get_interactableObject, X0
	026 Compare X0, 0
	027 JumpIfEqual {45}
	028 Move X19, [X19+48]
	029 Move X20, X0
	030 Move X0, X31
	031 Call Time.get_time
	032 Compare X19, 0
	033 JumpIfEqual {50}
	034 Move X8, 0x5A5000
	035 Move X8, [X8+3424]
	036 Move X0, X19
	037 Move X1, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, [X8]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	044 Return 
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 
	050 Call 0x1C17F20

Method: System.Void OnLink(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03BB7014 MOV X1, X20
	0x03BB7018 LDR X2, [X8]
	0x03BB701C BL 0x301CD00
	0x03BB7020 TBNZ X0, 0x1F, 0x3BB7038
	0x03BB7024 MOV W1, W0
	0x03BB7028 MOV X0, X19
	0x03BB702C LDP X20, X19, [X31 + 0x10]
	0x03BB7030 LDP X30, X21, [X31], #0x20
	0x03BB7034 B 0x3BB85B8
	0x03BB7038 LDP X20, X19, [X31 + 0x10]
	0x03BB703C LDP X30, X21, [X31], #0x20
	0x03BB7040 RET
	0x03BB7044 MOV X0, X19
	0x03BB7048 MOV X1, X31
	0x03BB704C BL 0x3C389D4
	0x03BB7050 MOV X19, X0
	0x03BB7054 ADRP X0, 0x5A6000
	0x03BB7058 LDR X0, [X0 + 0x128]
	0x03BB705C BL 0x1C16D08
	0x03BB7060 MOV X20, X0
	0x03BB7064 ADRP X0, 0x5A6000
	0x03BB7068 LDR X0, [X0 + 0x100]
	0x03BB706C BL 0x1C16D08
	0x03BB7070 MOV X2, X0
	0x03BB7074 MOV X0, X20
	0x03BB7078 MOV X1, X19
	0x03BB707C MOV X3, X31
	0x03BB7080 BL 0x32274B8
	0x03BB7084 MOV X19, X0
	0x03BB7088 ADRP X0, 0x53C000
	0x03BB708C LDR X0, [X0 + 0x5B0]
	0x03BB7090 BL 0x1C16D08
	0x03BB7094 BL 0x1C16F10
	0x03BB7098 MOV X1, X19
	0x03BB709C MOV X2, X31
	0x03BB70A0 MOV X20, X0
	0x03BB70A4 BL 0x337DF1C
	0x03BB70A8 ADRP X0, 0x5A6000
	0x03BB70AC LDR X0, [X0 + 0x130]
	0x03BB70B0 BL 0x1C16D08
	0x03BB70B4 MOV X1, X0
	0x03BB70B8 MOV X0, X20
	0x03BB70BC BL 0x1C16DEC
	0x03BB70C0 BL 0x1C16F20
	0x03BB70C4 MOV X1, X31
	0x03BB70C8 B 0x3C32454
	0x03BB70CC RET
	0x03BB70D0 RET
	0x03BB70D4 MOV X1, X31
	0x03BB70D8 B 0x3C36C30
	0x03BB70DC STR D8, [X31 - 0x30]!
	0x03BB70E0 STR X30, [X31 + 0x8]
	0x03BB70E4 STP X22, X21, [X31 + 0x10]
	0x03BB70E8 STP X20, X19, [X31 + 0x20]
	0x03BB70EC ADRP X22, 0x82B000
	0x03BB70F0 ADRP X21, 0x5A6000
	0x03BB70F4 LDRB W8, [X22 + 0xD05]
	0x03BB70F8 LDR X21, [X21 + 0x138]
	0x03BB70FC MOV X19, X1
	0x03BB7100 MOV X20, X0
	0x03BB7104 TBNZ X8, 0x0, 0x3BB7128
	0x03BB7108 ADRP X0, 0x5A5000
	0x03BB710C LDR X0, [X0 + 0x60]
	0x03BB7110 BL 0x1C16CF4
	0x03BB7114 ADRP X0, 0x5A6000
	0x03BB7118 LDR X0, [X0 + 0x138]
	0x03BB711C BL 0x1C16CF4
	0x03BB7120 MOVZ W8, 0x1
	0x03BB7124 STRB W8, [X22 + 0xD05]
	0x03BB7128 LDR X0, [X21]
	0x03BB712C LDR W8, [X0 + 0xE0]
	0x03BB7130 CBNZ W8, 0x3BB713C
	0x03BB7134 BL 0x1C16DFC
	0x03BB7138 LDR X0, [X21]
	0x03BB713C LDR X8, [X0 + 0xB8]
	0x03BB7140 LDR X0, [X8 + 0x8]
	0x03BB7144 CBZ X0, 0x3BB71A4
	0x03BB7148 ADRP X22, 0x5A5000
	0x03BB714C LDR X22, [X22 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x82C000
	007 Move X21, 0x5A4000
	008 Move W8, [X22+3324]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5A4000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0x5A4000
	020 Move X0, [X0+392]
	021 Call 0x1C17CF4
	022 Move X0, 0x5A4000
	023 Move X0, [X0+432]
	024 Call 0x1C17CF4
	025 Move X0, 0x5A7000
	026 Move X0, [X0+216]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3324], W8
	030 Move X1, [X21]
	031 Move X0, X20
	032 Call 0x1C17E00
	033 Compare X0, 0
	034 JumpIfEqual {54}
	035 Move X8, [X0]
	036 Move X1, [X21]
	037 Move X22, 0x5A4000
	038 Move X21, 0x5A7000
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X22, [X22+392]
	041 Move X21, [X21+216]
	042 Move X20, X0
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X20
	052 Move W2, W31
	053 Call 0x1C5D788
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X22]
	068 Move X20, X0
	069 Move X0, X8
	070 Call 0x1C17F10
	071 Move X2, [X21]
	072 Move X1, X19
	073 Move X3, X31
	074 Move X21, X0
	075 Call UnityAction`1<Object>..ctor, X0, X1, X2
	076 Compare X20, 0
	077 JumpIfEqual {90}
	078 Move X8, 0x5A4000
	079 Move X8, [X8+432]
	080 Move X0, X20
	081 Move X1, X21
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X2, [X8]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Call UnityEvent`1<Object>.AddListener, X0, X1
	089 Return 
	090 Call 0x1C17F20

Method: System.Void OnUnlink(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03BB7150 MOV X1, X20
	0x03BB7154 LDR X2, [X22]
	0x03BB7158 BL 0x2AB4A08
	0x03BB715C LDR X8, [X21]
	0x03BB7160 LDR X8, [X8 + 0xB8]
	0x03BB7164 LDR X0, [X8 + 0x8]
	0x03BB7168 CBZ X0, 0x3BB71A4
	0x03BB716C LDR X2, [X22]
	0x03BB7170 MOV X1, X19
	0x03BB7174 MOV V8.16B, V0.16B
	0x03BB7178 BL 0x2AB4A08
	0x03BB717C FCMP S8, S0
	0x03BB7180 B.MI 0x3BB718C
	0x03BB7184 CSINV W0, W31, W31, LE
	0x03BB7188 B 0x3BB7190
	0x03BB718C MOVZ W0, 0x1
	0x03BB7190 LDP X20, X19, [X31 + 0x20]
	0x03BB7194 LDP X22, X21, [X31 + 0x10]
	0x03BB7198 LDR X30, [X31 + 0x8]
	0x03BB719C LDR V8, [X31], #0x30
	0x03BB71A0 RET
	0x03BB71A4 BL 0x1C16F20
	0x03BB71A8 LDR X0, [X0 + 0x20]
	0x03BB71AC RET
	0x03BB71B0 LDR X0, [X0 + 0x28]
	0x03BB71B4 RET
	0x03BB71B8 STR X30, [X31 - 0x20]!
	0x03BB71BC STP X20, X19, [X31 + 0x10]
	0x03BB71C0 ADRP X20, 0x82B000
	0x03BB71C4 LDRB W8, [X20 + 0xD06]
	0x03BB71C8 MOV X19, X0
	0x03BB71CC TBNZ X8, 0x0, 0x3BB71E4
	0x03BB71D0 ADRP X0, 0x5A6000
	0x03BB71D4 LDR X0, [X0 + 0x140]
	0x03BB71D8 BL 0x1C16CF4
	0x03BB71DC MOVZ W8, 0x1
	0x03BB71E0 STRB W8, [X20 + 0xD06]
	0x03BB71E4 LDR X8, [X19 + 0x28]
	0x03BB71E8 CBZ X8, 0x3BB71FC
	0x03BB71EC LDR W0, [X8 + 0x18]
	0x03BB71F0 LDP X20, X19, [X31 + 0x10]
	0x03BB71F4 LDR X30, [X31], #0x20
	0x03BB71F8 RET
	0x03BB71FC BL 0x1C16F20
	0x03BB7200 LDRB W0, [X0 + 0x31]
	0x03BB7204 RET
	0x03BB7208 AND W8, W1, 0x1
	0x03BB720C STRB W8, [X0 + 0x31]
	0x03BB7210 RET
	0x03BB7214 STR X30, [X31 - 0x40]!
	0x03BB7218 STP X24, X23, [X31 + 0x10]
	0x03BB721C STP X22, X21, [X31 + 0x20]
	0x03BB7220 STP X20, X19, [X31 + 0x30]
	0x03BB7224 ADRP X21, 0x82B000
	0x03BB7228 LDRB W8, [X21 + 0xD07]
	0x03BB722C MOV X19, X1
	0x03BB7230 MOV X20, X0
	0x03BB7234 TBNZ X8, 0x0, 0x3BB724C
	0x03BB7238 ADRP X0, 0x5A6000
	0x03BB723C LDR X0, [X0 + 0x118]
	0x03BB7240 BL 0x1C16CF4
	0x03BB7244 MOVZ W8, 0x1
	0x03BB7248 STRB W8, [X21 + 0xD07]
	0x03BB724C ADRP X24, 0x5A6000
	0x03BB7250 LDR X21, [X20 + 0x38]!
	0x03BB7254 LDR X24, [X24 + 0x118]
	0x03BB7258 MOV X0, X21
	0x03BB725C MOV X1, X19
	0x03BB7260 MOV X2, X31
	0x03BB7264 BL 0x33C0DE4
	0x03BB7268 CBZ X0, 0x3BB7288
	0x03BB726C LDR X23, [X24]
	0x03BB7270 MOV X22, X0
	0x03BB7274 MOV X1, X23
	0x03BB7278 BL 0x1C16E00
	0x03BB727C MOV X1, X0
	0x03BB7280 CBNZ X0, 0x3BB728C
	0x03BB7284 B 0x3BB72B8
	0x03BB7288 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x82C000
	007 Move X21, 0x5A4000
	008 Move W8, [X22+3325]
	009 Move X21, [X21+808]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5A4000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0x5A4000
	020 Move X0, [X0+392]
	021 Call 0x1C17CF4
	022 Move X0, 0x5A4000
	023 Move X0, [X0+496]
	024 Call 0x1C17CF4
	025 Move X0, 0x5A7000
	026 Move X0, [X0+216]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3325], W8
	030 Move X1, [X21]
	031 Move X0, X20
	032 Call 0x1C17E00
	033 Compare X0, 0
	034 JumpIfEqual {54}
	035 Move X8, [X0]
	036 Move X1, [X21]
	037 Move X22, 0x5A4000
	038 Move X21, 0x5A7000
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X22, [X22+392]
	041 Move X21, [X21+216]
	042 Move X20, X0
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X20
	052 Move W2, W31
	053 Call 0x1C5D788
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X22]
	068 Move X20, X0
	069 Move X0, X8
	070 Call 0x1C17F10
	071 Move X2, [X21]
	072 Move X1, X19
	073 Move X3, X31
	074 Move X21, X0
	075 Call UnityAction`1<Object>..ctor, X0, X1, X2
	076 Compare X20, 0
	077 JumpIfEqual {90}
	078 Move X8, 0x5A4000
	079 Move X8, [X8+496]
	080 Move X0, X20
	081 Move X1, X21
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X2, [X8]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	089 Return 
	090 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03BB728C MOV X0, X20
	0x03BB7290 MOV X2, X21
	0x03BB7294 BL 0x1C24138
	0x03BB7298 CMP X21, X0
	0x03BB729C MOV X21, X0
	0x03BB72A0 B.NE 0x3BB7258
	0x03BB72A4 LDP X20, X19, [X31 + 0x30]
	0x03BB72A8 LDP X22, X21, [X31 + 0x20]
	0x03BB72AC LDP X24, X23, [X31 + 0x10]
	0x03BB72B0 LDR X30, [X31], #0x40
	0x03BB72B4 RET
	0x03BB72B8 MOV X0, X22
	0x03BB72BC MOV X1, X23
	0x03BB72C0 BL 0x1C171E0
	0x03BB72C4 STR X30, [X31 - 0x40]!
	0x03BB72C8 STP X24, X23, [X31 + 0x10]
	0x03BB72CC STP X22, X21, [X31 + 0x20]
	0x03BB72D0 STP X20, X19, [X31 + 0x30]
	0x03BB72D4 ADRP X21, 0x82B000
	0x03BB72D8 LDRB W8, [X21 + 0xD08]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x82C000
	005 Move W8, [X20+3326]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5A4000
	012 Move X0, [X0+3416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3326], W8
	016 Move X0, [X19+48]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x5A4000
	020 Move X8, [X8+3416]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<Object, Single>.Clear, X0
	026 Return 
	027 Call 0x1C17F20

Method: System.Single CalculateNormalizedScore(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, UnityEngine.XR.Interaction.Toolkit.IXRInteractable target)

Disassembly:
	0x03BB72E0 MOV X20, X0
	0x03BB72E4 TBNZ X8, 0x0, 0x3BB72FC
	0x03BB72E8 ADRP X0, 0x5A6000
	0x03BB72EC LDR X0, [X0 + 0x118]
	0x03BB72F0 BL 0x1C16CF4
	0x03BB72F4 MOVZ W8, 0x1
	0x03BB72F8 STRB W8, [X21 + 0xD08]
	0x03BB72FC ADRP X24, 0x5A6000
	0x03BB7300 LDR X21, [X20 + 0x38]!
	0x03BB7304 LDR X24, [X24 + 0x118]
	0x03BB7308 MOV X0, X21
	0x03BB730C MOV X1, X19
	0x03BB7310 MOV X2, X31
	0x03BB7314 BL 0x33C0FDC
	0x03BB7318 CBZ X0, 0x3BB7338
	0x03BB731C LDR X23, [X24]
	0x03BB7320 MOV X22, X0
	0x03BB7324 MOV X1, X23
	0x03BB7328 BL 0x1C16E00
	0x03BB732C MOV X1, X0
	0x03BB7330 CBNZ X0, 0x3BB733C
	0x03BB7334 B 0x3BB7368
	0x03BB7338 MOV X1, X31
	0x03BB733C MOV X0, X20
	0x03BB7340 MOV X2, X21
	0x03BB7344 BL 0x1C24138
	0x03BB7348 CMP X21, X0
	0x03BB734C MOV X21, X0
	0x03BB7350 B.NE 0x3BB7308
	0x03BB7354 LDP X20, X19, [X31 + 0x30]
	0x03BB7358 LDP X22, X21, [X31 + 0x20]
	0x03BB735C LDP X24, X23, [X31 + 0x10]
	0x03BB7360 LDR X30, [X31], #0x40
	0x03BB7364 RET
	0x03BB7368 MOV X0, X22
	0x03BB736C MOV X1, X23
	0x03BB7370 BL 0x1C171E0
	0x03BB7374 STR X30, [X31 - 0x40]!
	0x03BB7378 STP X24, X23, [X31 + 0x10]
	0x03BB737C STP X22, X21, [X31 + 0x20]
	0x03BB7380 STP X20, X19, [X31 + 0x30]
	0x03BB7384 ADRP X21, 0x82B000
	0x03BB7388 LDRB W8, [X21 + 0xD09]
	0x03BB738C MOV X19, X1
	0x03BB7390 MOV X20, X0
	0x03BB7394 TBNZ X8, 0x0, 0x3BB73AC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x82C000
	007 Move W8, [X21+3327]
	008 Move X20, X2
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5A4000
	015 Move X0, [X0+3384]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3327], W8
	019 Move [X31+12], W31
	020 Move X0, [X19+48]
	021 Compare X0, 0
	022 JumpIfEqual {56}
	023 Move X8, 0x5A4000
	024 Move X8, [X8+3384]
	025 Add X2, X31, 12
	026 Move X1, X20
	027 Move X3, [X8]
	028 Call Dictionary`2<Object, Single>.TryGetValue, X0, X1, X2
	029 Move S0, 0.5
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {50}
	034 Move V1, [X19+56]
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move X0, X31
	037 Call Time.get_time
	038 Move V1, [X31+12]
	039 Move V2, [X19+56]
	040 Move S3, 1
	041 Move S4, 0.5
	042 Subtract S0, S0, S1
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 NotImplemented "Instruction FMIN not yet implemented."
	045 Subtract S1, S3, S1
	046 Multiply S1, S1, S4
	047 Add S1, S1, S4
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Add X31, X31, 48
	055 Return V0
	056 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BB7398 ADRP X0, 0x5A6000
	0x03BB739C LDR X0, [X0 + 0x118]
	0x03BB73A0 BL 0x1C16CF4
	0x03BB73A4 MOVZ W8, 0x1
	0x03BB73A8 STRB W8, [X21 + 0xD09]
	0x03BB73AC ADRP X24, 0x5A6000
	0x03BB73B0 LDR X21, [X20 + 0x40]!
	0x03BB73B4 LDR X24, [X24 + 0x118]
	0x03BB73B8 MOV X0, X21
	0x03BB73BC MOV X1, X19
	0x03BB73C0 MOV X2, X31
	0x03BB73C4 BL 0x33C0DE4
	0x03BB73C8 CBZ X0, 0x3BB73E8
	0x03BB73CC LDR X23, [X24]
	0x03BB73D0 MOV X22, X0
	0x03BB73D4 MOV X1, X23
	0x03BB73D8 BL 0x1C16E00
	0x03BB73DC MOV X1, X0
	0x03BB73E0 CBNZ X0, 0x3BB73EC
	0x03BB73E4 B 0x3BB7418
	0x03BB73E8 MOV X1, X31
	0x03BB73EC MOV X0, X20
	0x03BB73F0 MOV X2, X21
	0x03BB73F4 BL 0x1C24138
	0x03BB73F8 CMP X21, X0
	0x03BB73FC MOV X21, X0
	0x03BB7400 B.NE 0x3BB73B8
	0x03BB7404 LDP X20, X19, [X31 + 0x30]
	0x03BB7408 LDP X22, X21, [X31 + 0x20]
	0x03BB740C LDP X24, X23, [X31 + 0x10]
	0x03BB7410 LDR X30, [X31], #0x40
	0x03BB7414 RET
	0x03BB7418 MOV X0, X22
	0x03BB741C MOV X1, X23
	0x03BB7420 BL 0x1C171E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x82C000
	007 Move X22, 0x5A4000
	008 Move X20, 0x5A4000
	009 Move W8, [X21+3328]
	010 Move X22, [X22+3232]
	011 Move X20, [X20+3208]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5A4000
	018 Move X0, [X0+3208]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A4000
	021 Move X0, [X0+3232]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3328], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Dictionary`2<Object, Single>..ctor, X0
	030 Move W8, 0x41200000
	031 Move W9, 1
	032 Move [X19+48], X20
	033 Move [X19+56], W8
	034 Move [X19+24], W9
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+48]
	042 Call Object..ctor, X0
	043 Return 

