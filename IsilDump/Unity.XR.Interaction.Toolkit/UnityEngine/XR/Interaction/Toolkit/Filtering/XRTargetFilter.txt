Type: UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetFilter

Method: System.Int32 InteractableScoreDescendingComparison(UnityEngine.XR.Interaction.Toolkit.IXRInteractable x, UnityEngine.XR.Interaction.Toolkit.IXRInteractable y)

Disassembly:
	0x03BB80DC STR X30, [X31 - 0x20]!
	0x03BB80E0 STP X20, X19, [X31 + 0x10]
	0x03BB80E4 ADRP X20, 0x82A000
	0x03BB80E8 LDRB W8, [X20 + 0xD14]
	0x03BB80EC MOV X19, X0
	0x03BB80F0 TBNZ X8, 0x0, 0x3BB8108
	0x03BB80F4 ADRP X0, 0x543000
	0x03BB80F8 LDR X0, [X0 + 0xDB8]
	0x03BB80FC BL 0x1C16CF4
	0x03BB8100 MOVZ W8, 0x1
	0x03BB8104 STRB W8, [X20 + 0xD14]
	0x03BB8108 LDR X19, [X19 + 0x28]
	0x03BB810C CBZ X19, 0x3BB8178
	0x03BB8110 ADRP X10, 0x543000
	0x03BB8114 LDR X8, [X19]
	0x03BB8118 LDR X10, [X10 + 0xDB8]
	0x03BB811C LDRH W9, [X8 + 0x12E]
	0x03BB8120 LDR X1, [X10]
	0x03BB8124 CBZ X9, 0x3BB8148
	0x03BB8128 LDR X10, [X8 + 0xB0]
	0x03BB812C ADD X10, X10, 0x8
	0x03BB8130 LDUR X11, [X10 - 0x8]
	0x03BB8134 CMP X11, X1
	0x03BB8138 B.EQ 0x3BB8158
	0x03BB813C SUBS X9, X9, 0x1
	0x03BB8140 ADD X10, X10, 0x10
	0x03BB8144 B.NE 0x3BB8130
	0x03BB8148 MOV X0, X19
	0x03BB814C MOV W2, W31
	0x03BB8150 BL 0x1C5C788
	0x03BB8154 B 0x3BB8164
	0x03BB8158 LDRSW X9, [X10]
	0x03BB815C ADD X8, X8, X9, 0x4, LSL
	0x03BB8160 ADD X0, X8, 0x138
	0x03BB8164 LDP X2, X1, [X0]
	0x03BB8168 MOV X0, X19
	0x03BB816C LDP X20, X19, [X31 + 0x10]
	0x03BB8170 LDR X30, [X31], #0x20
	0x03BB8174 BR X2
	0x03BB8178 BL 0x1C16F20
	0x03BB817C SUB X31, X31, 0x50
	0x03BB8180 STR X30, [X31 + 0x30]
	0x03BB8184 STP X20, X19, [X31 + 0x40]
	0x03BB8188 ADRP X20, 0x82A000
	0x03BB818C LDRB W8, [X20 + 0xD15]
	0x03BB8190 MOV X19, X0
	0x03BB8194 TBNZ X8, 0x0, 0x3BB81B8
	0x03BB8198 ADRP X0, 0x5A5000
	0x03BB819C LDR X0, [X0 + 0x1C8]
	0x03BB81A0 BL 0x1C16CF4
	0x03BB81A4 ADRP X0, 0x5A5000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x82B000
	008 Move X21, 0x5A6000
	009 Move W8, [X22+3333]
	010 Move X21, [X21+312]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5A5000
	018 Move X0, [X0+96]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A6000
	021 Move X0, [X0+312]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3333], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, [X8+8]
	033 Compare X0, 0
	034 JumpIfEqual {59}
	035 Move X22, 0x5A5000
	036 Move X22, [X22+96]
	037 Move X1, X20
	038 Move X2, [X22]
	039 Call Dictionary`2<Object, Single>.get_Item, X0, X1
	040 Move X8, [X21]
	041 Move X8, [X8+184]
	042 Move X0, [X8+8]
	043 Compare X0, 0
	044 JumpIfEqual {59}
	045 Move X2, [X22]
	046 Move X1, X19
	047 Move V8, V0
	048 Call Dictionary`2<Object, Single>.get_Item, X0, X1
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 NotImplemented "Instruction CSINV not yet implemented."
	051 Move W0, 1
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+8]
	057 Move V8, [X31+48]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> get_linkedInteractors()

Disassembly:
	0x03BB81A8 LDR X0, [X0 + 0x198]
	0x03BB81AC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> get_evaluators()

Disassembly:
	0x03BB81B0 MOVZ W8, 0x1
	0x03BB81B4 STRB W8, [X20 + 0xD15]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Int32 get_evaluatorCount()

Disassembly:
	0x03BB81B8 LDR X0, [X19 + 0x28]
	0x03BB81BC CBZ X0, 0x3BB8208
	0x03BB81C0 ADRP X8, 0x5A5000
	0x03BB81C4 LDR X8, [X8 + 0x198]
	0x03BB81C8 ADRP X19, 0x5A5000
	0x03BB81CC LDR X1, [X8]
	0x03BB81D0 LDR X19, [X19 + 0x1C8]
	0x03BB81D4 ADD X8, X31, 0x18
	0x03BB81D8 BL 0x301CB58
	0x03BB81DC LDUR V0, [X31 + 0x18]
	0x03BB81E0 LDR X8, [X31 + 0x28]
	0x03BB81E4 LDR X0, [X19]
	0x03BB81E8 ADD X1, X31, 0x0
	0x03BB81EC STR V0, [X31]
	0x03BB81F0 STR X8, [X31 + 0x10]
	0x03BB81F4 BL 0x1C16E04
	0x03BB81F8 LDP X20, X19, [X31 + 0x40]
	0x03BB81FC LDR X30, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x82B000
	005 Move W8, [X20+3334]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5A6000
	012 Move X0, [X0+320]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3334], W8
	016 Move X8, [X19+40]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Boolean get_isProcessing()

Disassembly:
	0x03BB8200 ADD X31, X31, 0x50
	0x03BB8204 RET

ISIL:
	001 Move W0, [X0+49]
	002 Return X0

Method: System.Void set_isProcessing(System.Boolean value)

Disassembly:
	0x03BB8208 BL 0x1C16F20
	0x03BB820C STP X30, X21, [X31 - 0x20]!
	0x03BB8210 STP X20, X19, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+49], W8
	003 Return 

Method: System.Void add_interactorLinked(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> value)

Disassembly:
	0x03BB8214 ADRP X21, 0x82A000
	0x03BB8218 LDRB W8, [X21 + 0xD16]
	0x03BB821C MOV W19, W1
	0x03BB8220 MOV X20, X0
	0x03BB8224 TBNZ X8, 0x0, 0x3BB823C
	0x03BB8228 ADRP X0, 0x5A5000
	0x03BB822C LDR X0, [X0 + 0x150]
	0x03BB8230 BL 0x1C16CF4
	0x03BB8234 MOVZ W8, 0x1
	0x03BB8238 STRB W8, [X21 + 0xD16]
	0x03BB823C LDR X0, [X20 + 0x28]
	0x03BB8240 CBZ X0, 0x3BB8260
	0x03BB8244 ADRP X8, 0x5A5000
	0x03BB8248 LDR X8, [X8 + 0x150]
	0x03BB824C MOV W1, W19
	0x03BB8250 LDP X20, X19, [X31 + 0x10]
	0x03BB8254 LDR X2, [X8]
	0x03BB8258 LDP X30, X21, [X31], #0x20
	0x03BB825C B 0x301BCCC
	0x03BB8260 BL 0x1C16F20
	0x03BB8264 SUB X31, X31, 0x50
	0x03BB8268 STR X30, [X31 + 0x20]
	0x03BB826C STP X22, X21, [X31 + 0x30]
	0x03BB8270 STP X20, X19, [X31 + 0x40]
	0x03BB8274 ADRP X22, 0x82A000
	0x03BB8278 ADRP X21, 0x53B000
	0x03BB827C LDRB W8, [X22 + 0xD17]
	0x03BB8280 LDR X21, [X21 + 0x6C0]
	0x03BB8284 MOV X19, X1
	0x03BB8288 MOV X20, X0
	0x03BB828C TBNZ X8, 0x0, 0x3BB82D4
	0x03BB8290 ADRP X0, 0x5A5000
	0x03BB8294 LDR X0, [X0 + 0x178]
	0x03BB8298 BL 0x1C16CF4
	0x03BB829C ADRP X0, 0x5A5000
	0x03BB82A0 LDR X0, [X0 + 0x180]
	0x03BB82A4 BL 0x1C16CF4
	0x03BB82A8 ADRP X0, 0x5A5000
	0x03BB82AC LDR X0, [X0 + 0x188]
	0x03BB82B0 BL 0x1C16CF4
	0x03BB82B4 ADRP X0, 0x5A5000
	0x03BB82B8 LDR X0, [X0 + 0x198]
	0x03BB82BC BL 0x1C16CF4
	0x03BB82C0 ADRP X0, 0x53B000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x82B000
	009 Move W8, [X21+3335]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5A6000
	017 Move X0, [X0+280]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3335], W8
	021 Move X24, 0x5A6000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+280]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_interactorLinked(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> value)

Disassembly:
	0x03BB82C4 LDR X0, [X0 + 0x6C0]
	0x03BB82C8 BL 0x1C16CF4
	0x03BB82CC MOVZ W8, 0x1
	0x03BB82D0 STRB W8, [X22 + 0xD17]
	0x03BB82D4 LDR X0, [X21]
	0x03BB82D8 STP X31, X31, [X31 + 0x8]
	0x03BB82DC STR X31, [X31 + 0x18]
	0x03BB82E0 LDR W8, [X0 + 0xE0]
	0x03BB82E4 CBNZ W8, 0x3BB82EC
	0x03BB82E8 BL 0x1C16DFC
	0x03BB82EC MOV X0, X19
	0x03BB82F0 MOV X1, X31
	0x03BB82F4 MOV X2, X31
	0x03BB82F8 BL 0x3395194
	0x03BB82FC TBNZ X0, 0x0, 0x3BB8390
	0x03BB8300 LDR X0, [X20 + 0x28]
	0x03BB8304 CBZ X0, 0x3BB83D8
	0x03BB8308 ADRP X8, 0x5A5000
	0x03BB830C LDR X8, [X8 + 0x198]
	0x03BB8310 ADRP X22, 0x5A5000
	0x03BB8314 ADRP X21, 0x5A5000
	0x03BB8318 LDR X1, [X8]
	0x03BB831C LDR X22, [X22 + 0x180]
	0x03BB8320 LDR X21, [X21 + 0x178]
	0x03BB8324 ADD X8, X31, 0x8
	0x03BB8328 BL 0x301CB58
	0x03BB832C LDR X1, [X22]
	0x03BB8330 ADD X0, X31, 0x8
	0x03BB8334 BL 0x2BC4350
	0x03BB8338 TBZ X0, 0x0, 0x3BB8364
	0x03BB833C CBZ X19, 0x3BB838C
	0x03BB8340 LDR X8, [X19]
	0x03BB8344 LDR X20, [X31 + 0x18]
	0x03BB8348 LDR X9, [X8 + 0x868]
	0x03BB834C LDR X2, [X8 + 0x870]
	0x03BB8350 MOV X0, X19
	0x03BB8354 MOV X1, X20
	0x03BB8358 BLR X9
	0x03BB835C TBZ X0, 0x0, 0x3BB832C
	0x03BB8360 B 0x3BB8368
	0x03BB8364 MOV X20, X31
	0x03BB8368 LDR X1, [X21]
	0x03BB836C ADD X0, X31, 0x8
	0x03BB8370 BL 0x2BC434C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x82B000
	009 Move W8, [X21+3336]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5A6000
	017 Move X0, [X0+280]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3336], W8
	021 Move X24, 0x5A6000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+280]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_interactorUnlinked(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> value)

Disassembly:
	0x03BB8374 MOV X0, X20
	0x03BB8378 LDP X20, X19, [X31 + 0x40]
	0x03BB837C LDP X22, X21, [X31 + 0x30]
	0x03BB8380 LDR X30, [X31 + 0x20]
	0x03BB8384 ADD X31, X31, 0x50
	0x03BB8388 RET
	0x03BB838C BL 0x1C16F20
	0x03BB8390 ADRP X0, 0x540000
	0x03BB8394 LDR X0, [X0 + 0x528]
	0x03BB8398 BL 0x1C16D08
	0x03BB839C BL 0x1C16F10
	0x03BB83A0 MOV X19, X0
	0x03BB83A4 ADRP X0, 0x543000
	0x03BB83A8 LDR X0, [X0 + 0x5E8]
	0x03BB83AC BL 0x1C16D08
	0x03BB83B0 MOV X1, X0
	0x03BB83B4 MOV X0, X19
	0x03BB83B8 MOV X2, X31
	0x03BB83BC BL 0x330E100
	0x03BB83C0 ADRP X0, 0x5A5000
	0x03BB83C4 LDR X0, [X0 + 0x1D0]
	0x03BB83C8 BL 0x1C16D08
	0x03BB83CC MOV X1, X0
	0x03BB83D0 MOV X0, X19
	0x03BB83D4 BL 0x1C16DEC
	0x03BB83D8 BL 0x1C16F20
	0x03BB83DC B 0x3BB83E4
	0x03BB83E0 B 0x3BB83E4
	0x03BB83E4 MOV X19, X0
	0x03BB83E8 CMP W1, 0x1
	0x03BB83EC B.NE 0x3BB8418
	0x03BB83F0 MOV X0, X19
	0x03BB83F4 BL 0x3EB1AD0
	0x03BB83F8 LDR X20, [X0]
	0x03BB83FC BL 0x3EB1AE0
	0x03BB8400 LDR X1, [X21]
	0x03BB8404 ADD X0, X31, 0x8
	0x03BB8408 BL 0x2BC434C
	0x03BB840C CBZ X20, 0x3BB8374
	0x03BB8410 MOV X0, X20
	0x03BB8414 BL 0x1C16F18
	0x03BB8418 MOV X20, X31
	0x03BB841C B 0x3BB8424
	0x03BB8420 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x82B000
	009 Move W8, [X21+3337]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5A6000
	017 Move X0, [X0+280]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3337], W8
	021 Move X24, 0x5A6000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+280]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_interactorUnlinked(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> value)

Disassembly:
	0x03BB8424 LDR X1, [X21]
	0x03BB8428 ADD X0, X31, 0x8
	0x03BB842C BL 0x2BC434C
	0x03BB8430 CBNZ X20, 0x3BB843C
	0x03BB8434 MOV X0, X19
	0x03BB8438 BL 0x1D2C690
	0x03BB843C MOV X0, X20
	0x03BB8440 BL 0x1C16F18
	0x03BB8444 BL 0x1990590
	0x03BB8448 STR X30, [X31 - 0x30]!
	0x03BB844C STP X22, X21, [X31 + 0x10]
	0x03BB8450 STP X20, X19, [X31 + 0x20]
	0x03BB8454 ADRP X21, 0x82A000
	0x03BB8458 ADRP X22, 0x53B000
	0x03BB845C LDRB W8, [X21 + 0xD19]
	0x03BB8460 LDR X22, [X22 + 0x6C0]
	0x03BB8464 MOV X20, X1
	0x03BB8468 MOV X19, X0
	0x03BB846C TBNZ X8, 0x0, 0x3BB8490
	0x03BB8470 ADRP X0, 0x5A5000
	0x03BB8474 LDR X0, [X0 + 0x190]
	0x03BB8478 BL 0x1C16CF4
	0x03BB847C ADRP X0, 0x53B000
	0x03BB8480 LDR X0, [X0 + 0x6C0]
	0x03BB8484 BL 0x1C16CF4
	0x03BB8488 MOVZ W8, 0x1
	0x03BB848C STRB W8, [X21 + 0xD19]
	0x03BB8490 LDR X0, [X22]
	0x03BB8494 LDR W8, [X0 + 0xE0]
	0x03BB8498 CBNZ W8, 0x3BB84A0
	0x03BB849C BL 0x1C16DFC
	0x03BB84A0 MOV X0, X20
	0x03BB84A4 MOV X1, X31
	0x03BB84A8 MOV X2, X31
	0x03BB84AC BL 0x3395194
	0x03BB84B0 TBNZ X0, 0x0, 0x3BB8570
	0x03BB84B4 MOV X0, X20
	0x03BB84B8 MOV X1, X19
	0x03BB84BC BL 0x3BB6520
	0x03BB84C0 MOV X20, X0
	0x03BB84C4 CBZ X0, 0x3BB8558
	0x03BB84C8 LDR X0, [X19 + 0x28]
	0x03BB84CC CBZ X0, 0x3BB856C
	0x03BB84D0 ADRP X9, 0x5A5000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x82B000
	009 Move W8, [X21+3338]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5A6000
	017 Move X0, [X0+280]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3338], W8
	021 Move X24, 0x5A6000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+280]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Boolean get_canProcess()

Disassembly:
	0x03BB84D4 LDR X9, [X9 + 0x190]
	0x03BB84D8 LDR W10, [X0 + 0x1C]
	0x03BB84DC LDR X8, [X0 + 0x10]
	0x03BB84E0 LDR X9, [X9]
	0x03BB84E4 ADD W10, W10, 0x1
	0x03BB84E8 STR W10, [X0 + 0x1C]

ISIL:
	001 Move W8, [X0+49]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move X1, X31
	007 Call Behaviour.get_isActiveAndEnabled, X0
	008 Return X0

Method: System.Void Awake()

Disassembly:
	0x03BB84EC CBZ X8, 0x3BB856C
	0x03BB84F0 LDRSW X10, [X0 + 0x18]
	0x03BB84F4 LDR W11, [X8 + 0x18]
	0x03BB84F8 CMP W10, W11
	0x03BB84FC B.CS 0x3BB8514
	0x03BB8500 ADD W9, W10, 0x1
	0x03BB8504 ADD X8, X8, X10, 0x3, LSL
	0x03BB8508 STR W9, [X0 + 0x18]
	0x03BB850C STR X20, [X8 + 0x20]
	0x03BB8510 B 0x3BB8528
	0x03BB8514 LDR X8, [X9 + 0x20]
	0x03BB8518 MOV X1, X20
	0x03BB851C LDR X8, [X8 + 0xC0]
	0x03BB8520 LDR X2, [X8 + 0x70]
	0x03BB8524 BL 0x301BF90
	0x03BB8528 LDRB W8, [X19 + 0x30]
	0x03BB852C CBZ W8, 0x3BB8558
	0x03BB8530 MOV X0, X20
	0x03BB8534 BL 0x3BB6E9C
	0x03BB8538 MOV X0, X19
	0x03BB853C MOV X1, X31
	0x03BB8540 BL 0x3C32454
	0x03BB8544 TBZ X0, 0x0, 0x3BB8558
	0x03BB8548 LDRB W8, [X20 + 0x18]
	0x03BB854C CBZ W8, 0x3BB8558
	0x03BB8550 MOV X0, X20
	0x03BB8554 BL 0x3BB6834
	0x03BB8558 MOV X0, X20
	0x03BB855C LDP X20, X19, [X31 + 0x20]
	0x03BB8560 LDP X22, X21, [X31 + 0x10]
	0x03BB8564 LDR X30, [X31], #0x30
	0x03BB8568 RET
	0x03BB856C BL 0x1C16F20
	0x03BB8570 ADRP X0, 0x540000
	0x03BB8574 LDR X0, [X0 + 0x528]
	0x03BB8578 BL 0x1C16D08
	0x03BB857C BL 0x1C16F10
	0x03BB8580 MOV X19, X0
	0x03BB8584 ADRP X0, 0x5A5000
	0x03BB8588 LDR X0, [X0 + 0x1D8]
	0x03BB858C BL 0x1C16D08
	0x03BB8590 MOV X1, X0
	0x03BB8594 MOV X0, X19
	0x03BB8598 MOV X2, X31
	0x03BB859C BL 0x330E100
	0x03BB85A0 ADRP X0, 0x5A5000
	0x03BB85A4 LDR X0, [X0 + 0x1E0]
	0x03BB85A8 BL 0x1C16D08
	0x03BB85AC MOV X1, X0
	0x03BB85B0 MOV X0, X19
	0x03BB85B4 BL 0x1C16DEC
	0x03BB85B8 STP X30, X21, [X31 - 0x20]!
	0x03BB85BC STP X20, X19, [X31 + 0x10]
	0x03BB85C0 ADRP X21, 0x82A000
	0x03BB85C4 LDRB W8, [X21 + 0xD1A]
	0x03BB85C8 MOV W19, W1
	0x03BB85CC MOV X20, X0
	0x03BB85D0 TBNZ X8, 0x0, 0x3BB85F4
	0x03BB85D4 ADRP X0, 0x5A5000
	0x03BB85D8 LDR X0, [X0 + 0x1E8]
	0x03BB85DC BL 0x1C16CF4
	0x03BB85E0 ADRP X0, 0x5A5000
	0x03BB85E4 LDR X0, [X0 + 0x150]
	0x03BB85E8 BL 0x1C16CF4
	0x03BB85EC MOVZ W8, 0x1
	0x03BB85F0 STRB W8, [X21 + 0xD1A]
	0x03BB85F4 LDRB W8, [X20 + 0x31]
	0x03BB85F8 CBNZ W8, 0x3BB868C
	0x03BB85FC LDR X0, [X20 + 0x28]
	0x03BB8600 CBZ X0, 0x3BB8688
	0x03BB8604 ADRP X8, 0x5A5000
	0x03BB8608 LDR X8, [X8 + 0x150]
	0x03BB860C MOV W1, W19
	0x03BB8610 LDR X2, [X8]
	0x03BB8614 BL 0x301BCCC
	0x03BB8618 CBZ X0, 0x3BB8664
	0x03BB861C LDRB W8, [X20 + 0x30]
	0x03BB8620 CBZ W8, 0x3BB8664
	0x03BB8624 MOV X21, X0
	0x03BB8628 MOV X0, X20
	0x03BB862C MOV X1, X31
	0x03BB8630 BL 0x3C32454
	0x03BB8634 TBZ X0, 0x0, 0x3BB865C
	0x03BB8638 LDRB W8, [X21 + 0x18]
	0x03BB863C CBZ W8, 0x3BB865C
	0x03BB8640 LDRB W8, [X21 + 0x29]
	0x03BB8644 CBZ W8, 0x3BB865C
	0x03BB8648 LDR X8, [X21]
	0x03BB864C STRB W31, [X21 + 0x29]
	0x03BB8650 MOV X0, X21
	0x03BB8654 LDP X9, X1, [X8 + 0x1B8]
	0x03BB8658 BLR X9
	0x03BB865C MOV X0, X21
	0x03BB8660 BL 0x3BB6EE0
	0x03BB8664 LDR X0, [X20 + 0x28]
	0x03BB8668 CBZ X0, 0x3BB8688
	0x03BB866C ADRP X8, 0x5A5000
	0x03BB8670 LDR X8, [X8 + 0x1E8]
	0x03BB8674 MOV W1, W19
	0x03BB8678 LDP X20, X19, [X31 + 0x10]
	0x03BB867C LDR X2, [X8]
	0x03BB8680 LDP X30, X21, [X31], #0x20
	0x03BB8684 B 0x301DA48
	0x03BB8688 BL 0x1C16F20
	0x03BB868C MOV X0, X20
	0x03BB8690 MOV X1, X31
	0x03BB8694 BL 0x3C389D4
	0x03BB8698 MOV X19, X0
	0x03BB869C ADRP X0, 0x5A5000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x82B000
	008 Move X20, 0x5A6000
	009 Move W8, [X21+3339]
	010 Move X20, [X20+312]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x5A6000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x5A6000
	020 Move X0, [X0+320]
	021 Call 0x1C17CF4
	022 Move X0, 0x5A6000
	023 Move X0, [X0+336]
	024 Call 0x1C17CF4
	025 Move X0, 0x5A6000
	026 Move X0, [X0+344]
	027 Call 0x1C17CF4
	028 Move X0, 0x5A6000
	029 Move X0, [X0+312]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3339], W8
	033 Move W8, 1
	034 Move [X31+24], X31
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Move [X19+48], W8
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X0, [X8]
	046 Compare X0, 0
	047 JumpIfEqual {95}
	048 Move X8, 0x5A6000
	049 Move X8, [X8+328]
	050 Move X21, 0x5A6000
	051 Add X1, X31, 24
	052 Move X2, [X8]
	053 Move X21, [X21+344]
	054 Call 0x2EF2058, X0, X1
	055 Move X8, [X31+24]
	056 Move [X31], X0
	057 Move [X31+8], X1
	058 Move X0, X19
	059 Move X1, X8
	060 Call XRTargetFilter.GetEvaluators, X0, X1
	061 Move X8, [X31+24]
	062 Compare X8, 0
	063 JumpIfEqual {83}
	064 Move X22, 0x5A6000
	065 Move X22, [X22+336]
	066 Move W20, W31
	067 Move W9, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W9, [X19+48]
	070 Compare W9, 0
	071 JumpIfEqual {84}
	072 Move X2, [X22]
	073 Move X0, X8
	074 Move W1, W20
	075 Call List`1<Object>.get_Item, X0, X1
	076 Compare X0, 0
	077 JumpIfEqual {94}
	078 Call XRTargetEvaluator.AwakeInternal, X0
	079 Move X8, [X31+24]
	080 Add W20, W20, 1
	081 Compare X8, 0
	082 JumpIfNotEqual {67}
	083 Call 0x1C17F20
	084 Move X1, [X21]
	085 Add X0, X31, 0
	086 Call 0x24A7DD0, X0
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X30, [X31+16]
	092 Add X31, X31, 64
	093 Return 
	094 Call 0x1C17F20
	095 Call 0x1C17F20
	096 Move X19, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X19
	099 Call 0x3EB2AD0
	100 Move X20, [X0]
	101 Call 0x3EB2AE0
	102 Move X1, [X21]
	103 Add X0, X31, 0
	104 Call 0x24A7DD0, X0
	105 Compare X20, 0
	106 JumpIfEqual {87}
	107 Move X0, X20
	108 Call 0x1C17F18
	109 Move X20, X31
	110 Move X19, X0
	111 Move X1, [X21]
	112 Add X0, X31, 0
	113 Call 0x24A7DD0, X0
	114 Compare X20, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X19
	117 Call 0x1D2D690
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Call 0x1991590

Method: System.Void OnEnable()

Disassembly:
	0x03BB876C LDR X2, [X8]
	0x03BB8770 BL 0x301CD00
	0x03BB8774 TBNZ X0, 0x1F, 0x3BB87C8
	0x03BB8778 MOV W1, W0
	0x03BB877C CMP W0, W20
	0x03BB8780 B.EQ 0x3BB87C8
	0x03BB8784 LDR X0, [X21 + 0x28]
	0x03BB8788 CBZ X0, 0x3BB87D8
	0x03BB878C ADRP X8, 0x5A5000
	0x03BB8790 LDR X8, [X8 + 0x1E8]
	0x03BB8794 LDR X2, [X8]
	0x03BB8798 BL 0x301DA48
	0x03BB879C LDR X0, [X21 + 0x28]
	0x03BB87A0 CBZ X0, 0x3BB87D8
	0x03BB87A4 ADRP X8, 0x5A5000
	0x03BB87A8 LDR X8, [X8 + 0x1F8]
	0x03BB87AC MOV W1, W20
	0x03BB87B0 MOV X2, X19
	0x03BB87B4 LDP X20, X19, [X31 + 0x20]
	0x03BB87B8 LDR X3, [X8]
	0x03BB87BC LDP X22, X21, [X31 + 0x10]
	0x03BB87C0 LDR X30, [X31], #0x30
	0x03BB87C4 B 0x301CEEC
	0x03BB87C8 LDP X20, X19, [X31 + 0x20]
	0x03BB87CC LDP X22, X21, [X31 + 0x10]
	0x03BB87D0 LDR X30, [X31], #0x30
	0x03BB87D4 RET
	0x03BB87D8 BL 0x1C16F20
	0x03BB87DC STP X30, X21, [X31 - 0x20]!
	0x03BB87E0 STP X20, X19, [X31 + 0x10]
	0x03BB87E4 ADRP X21, 0x82A000
	0x03BB87E8 LDRB W8, [X21 + 0xD1D]
	0x03BB87EC MOV X19, X1
	0x03BB87F0 MOV X20, X0
	0x03BB87F4 TBNZ X8, 0x0, 0x3BB8818
	0x03BB87F8 ADRP X0, 0x5A4000
	0x03BB87FC LDR X0, [X0 + 0x3F0]
	0x03BB8800 BL 0x1C16CF4
	0x03BB8804 ADRP X0, 0x5A5000
	0x03BB8808 LDR X0, [X0 + 0x200]
	0x03BB880C BL 0x1C16CF4
	0x03BB8810 MOVZ W8, 0x1
	0x03BB8814 STRB W8, [X21 + 0xD1D]
	0x03BB8818 CBZ X19, 0x3BB88D0
	0x03BB881C LDR X0, [X20 + 0x20]
	0x03BB8820 CBZ X0, 0x3BB88CC
	0x03BB8824 ADRP X8, 0x5A5000
	0x03BB8828 LDR X8, [X8 + 0x200]
	0x03BB882C MOV X1, X19
	0x03BB8830 LDR X2, [X8]
	0x03BB8834 BL 0x301C318
	0x03BB8838 TBNZ X0, 0x0, 0x3BB88C0
	0x03BB883C LDR X0, [X20 + 0x20]
	0x03BB8840 CBZ X0, 0x3BB88CC
	0x03BB8844 ADRP X9, 0x5A4000
	0x03BB8848 LDR X9, [X9 + 0x3F0]
	0x03BB884C LDR W10, [X0 + 0x1C]
	0x03BB8850 LDR X8, [X0 + 0x10]
	0x03BB8854 LDR X9, [X9]
	0x03BB8858 ADD W10, W10, 0x1
	0x03BB885C STR W10, [X0 + 0x1C]
	0x03BB8860 CBZ X8, 0x3BB88CC
	0x03BB8864 LDRSW X10, [X0 + 0x18]
	0x03BB8868 LDR W11, [X8 + 0x18]
	0x03BB886C CMP W10, W11
	0x03BB8870 B.CS 0x3BB8888
	0x03BB8874 ADD W9, W10, 0x1
	0x03BB8878 ADD X8, X8, X10, 0x3, LSL
	0x03BB887C STR W9, [X0 + 0x18]
	0x03BB8880 STR X19, [X8 + 0x20]
	0x03BB8884 B 0x3BB889C
	0x03BB8888 LDR X8, [X9 + 0x20]
	0x03BB888C MOV X1, X19
	0x03BB8890 LDR X8, [X8 + 0xC0]
	0x03BB8894 LDR X2, [X8 + 0x70]
	0x03BB8898 BL 0x301BF90
	0x03BB889C LDR X8, [X20 + 0x38]
	0x03BB88A0 CBZ X8, 0x3BB88C0
	0x03BB88A4 LDR X3, [X8 + 0x18]
	0x03BB88A8 LDR X0, [X8 + 0x40]
	0x03BB88AC LDR X2, [X8 + 0x28]
	0x03BB88B0 MOV X1, X19
	0x03BB88B4 LDP X20, X19, [X31 + 0x10]
	0x03BB88B8 LDP X30, X21, [X31], #0x20
	0x03BB88BC BR X3
	0x03BB88C0 LDP X20, X19, [X31 + 0x10]
	0x03BB88C4 LDP X30, X21, [X31], #0x20
	0x03BB88C8 RET
	0x03BB88CC BL 0x1C16F20
	0x03BB88D0 ADRP X0, 0x540000
	0x03BB88D4 LDR X0, [X0 + 0x528]
	0x03BB88D8 BL 0x1C16D08
	0x03BB88DC BL 0x1C16F10
	0x03BB88E0 MOV X19, X0
	0x03BB88E4 ADRP X0, 0x5A4000
	0x03BB88E8 LDR X0, [X0 + 0x410]
	0x03BB88EC BL 0x1C16D08
	0x03BB88F0 MOV X1, X0
	0x03BB88F4 MOV X0, X19
	0x03BB88F8 MOV X2, X31
	0x03BB88FC BL 0x330E100
	0x03BB8900 ADRP X0, 0x5A5000
	0x03BB8904 LDR X0, [X0 + 0x208]
	0x03BB8908 BL 0x1C16D08
	0x03BB890C MOV X1, X0
	0x03BB8910 MOV X0, X19
	0x03BB8914 BL 0x1C16DEC
	0x03BB8918 STP X30, X21, [X31 - 0x20]!
	0x03BB891C STP X20, X19, [X31 + 0x10]
	0x03BB8920 ADRP X21, 0x82A000
	0x03BB8924 LDRB W8, [X21 + 0xD1E]
	0x03BB8928 MOV X19, X1
	0x03BB892C MOV X20, X0
	0x03BB8930 TBNZ X8, 0x0, 0x3BB8948
	0x03BB8934 ADRP X0, 0x5A4000
	0x03BB8938 LDR X0, [X0 + 0x468]
	0x03BB893C BL 0x1C16CF4
	0x03BB8940 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x82B000
	008 Move X20, 0x5A6000
	009 Move W8, [X21+3340]
	010 Move X20, [X20+312]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x5A6000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x5A6000
	020 Move X0, [X0+320]
	021 Call 0x1C17CF4
	022 Move X0, 0x5A6000
	023 Move X0, [X0+336]
	024 Call 0x1C17CF4
	025 Move X0, 0x5A6000
	026 Move X0, [X0+344]
	027 Call 0x1C17CF4
	028 Move X0, 0x5A6000
	029 Move X0, [X0+312]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3340], W8
	033 Move X0, [X20]
	034 Move [X31+24], X31
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, [X8]
	044 Compare X0, 0
	045 JumpIfEqual {105}
	046 Move X8, 0x5A6000
	047 Move X8, [X8+328]
	048 Move X21, 0x5A6000
	049 Add X1, X31, 24
	050 Move X2, [X8]
	051 Move X21, [X21+344]
	052 Call 0x2EF2058, X0, X1
	053 Move X8, [X31+24]
	054 Move [X31], X0
	055 Move [X31+8], X1
	056 Move X0, X19
	057 Move X1, X8
	058 Call XRTargetFilter.GetEvaluators, X0, X1
	059 Move X8, [X31+24]
	060 Compare X8, 0
	061 JumpIfEqual {92}
	062 Move X22, 0x5A6000
	063 Move X22, [X22+336]
	064 Move W20, W31
	065 Move W8, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X19
	068 Move X1, X31
	069 Call Behaviour.get_isActiveAndEnabled, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {93}
	074 Move X0, [X31+24]
	075 Compare X0, 0
	076 JumpIfEqual {104}
	077 Move X2, [X22]
	078 Move W1, W20
	079 Call List`1<Object>.get_Item, X0, X1
	080 Move X8, X0
	081 Compare X0, 0
	082 JumpIfEqual {103}
	083 Move W9, [X8+24]
	084 Compare W9, 0
	085 JumpIfEqual {88}
	086 Move X0, X8
	087 Call XRTargetEvaluator.EnableInternal, X0
	088 Move X8, [X31+24]
	089 Add W20, W20, 1
	090 Compare X8, 0
	091 JumpIfNotEqual {65}
	092 Call 0x1C17F20
	093 Move X1, [X21]
	094 Add X0, X31, 0
	095 Call 0x24A7DD0, X0
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X30, [X31+16]
	101 Add X31, X31, 64
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F20
	105 Call 0x1C17F20
	106 Move X19, X0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X19
	109 Call 0x3EB2AD0
	110 Move X20, [X0]
	111 Call 0x3EB2AE0
	112 Move X1, [X21]
	113 Add X0, X31, 0
	114 Call 0x24A7DD0, X0
	115 Compare X20, 0
	116 JumpIfEqual {96}
	117 Move X0, X20
	118 Call 0x1C17F18
	119 Move X20, X31
	120 Move X19, X0
	121 Move X1, [X21]
	122 Add X0, X31, 0
	123 Call 0x24A7DD0, X0
	124 Compare X20, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X19
	127 Call 0x1D2D690
	128 Move X0, X20
	129 Call 0x1C17F18
	130 Call 0x1991590

Method: System.Void OnDisable()

Disassembly:
	0x03BB8944 STRB W8, [X21 + 0xD1E]
	0x03BB8948 CBZ X19, 0x3BB89A4
	0x03BB894C LDRB W8, [X20 + 0x31]
	0x03BB8950 CBNZ W8, 0x3BB89EC
	0x03BB8954 LDR X0, [X20 + 0x20]
	0x03BB8958 CBZ X0, 0x3BB8A54
	0x03BB895C ADRP X8, 0x5A4000
	0x03BB8960 LDR X8, [X8 + 0x468]
	0x03BB8964 MOV X1, X19
	0x03BB8968 LDR X2, [X8]
	0x03BB896C BL 0x301D7A8
	0x03BB8970 TBZ X0, 0x0, 0x3BB8998
	0x03BB8974 LDR X8, [X20 + 0x40]
	0x03BB8978 CBZ X8, 0x3BB8998
	0x03BB897C LDR X3, [X8 + 0x18]
	0x03BB8980 LDR X0, [X8 + 0x40]
	0x03BB8984 LDR X2, [X8 + 0x28]
	0x03BB8988 MOV X1, X19
	0x03BB898C LDP X20, X19, [X31 + 0x10]
	0x03BB8990 LDP X30, X21, [X31], #0x20
	0x03BB8994 BR X3
	0x03BB8998 LDP X20, X19, [X31 + 0x10]
	0x03BB899C LDP X30, X21, [X31], #0x20
	0x03BB89A0 RET
	0x03BB89A4 ADRP X0, 0x540000
	0x03BB89A8 LDR X0, [X0 + 0x528]
	0x03BB89AC BL 0x1C16D08
	0x03BB89B0 BL 0x1C16F10
	0x03BB89B4 MOV X19, X0
	0x03BB89B8 ADRP X0, 0x5A4000
	0x03BB89BC LDR X0, [X0 + 0x410]
	0x03BB89C0 BL 0x1C16D08
	0x03BB89C4 MOV X1, X0
	0x03BB89C8 MOV X0, X19
	0x03BB89CC MOV X2, X31
	0x03BB89D0 BL 0x330E100
	0x03BB89D4 ADRP X0, 0x5A5000
	0x03BB89D8 LDR X0, [X0 + 0x210]
	0x03BB89DC BL 0x1C16D08
	0x03BB89E0 MOV X1, X0
	0x03BB89E4 MOV X0, X19
	0x03BB89E8 BL 0x1C16DEC
	0x03BB89EC MOV X0, X20
	0x03BB89F0 MOV X1, X31
	0x03BB89F4 BL 0x3C389D4
	0x03BB89F8 MOV X20, X0
	0x03BB89FC ADRP X0, 0x5A5000
	0x03BB8A00 LDR X0, [X0 + 0x218]
	0x03BB8A04 BL 0x1C16D08
	0x03BB8A08 MOV X1, X19
	0x03BB8A0C MOV X2, X20
	0x03BB8A10 MOV X3, X31
	0x03BB8A14 BL 0x3227BD4
	0x03BB8A18 MOV X19, X0
	0x03BB8A1C ADRP X0, 0x53B000
	0x03BB8A20 LDR X0, [X0 + 0x5B0]
	0x03BB8A24 BL 0x1C16D08
	0x03BB8A28 BL 0x1C16F10
	0x03BB8A2C MOV X1, X19
	0x03BB8A30 MOV X2, X31
	0x03BB8A34 MOV X20, X0
	0x03BB8A38 BL 0x337DF1C
	0x03BB8A3C ADRP X0, 0x5A5000
	0x03BB8A40 LDR X0, [X0 + 0x210]
	0x03BB8A44 BL 0x1C16D08
	0x03BB8A48 MOV X1, X0
	0x03BB8A4C MOV X0, X20
	0x03BB8A50 BL 0x1C16DEC
	0x03BB8A54 BL 0x1C16F20
	0x03BB8A58 SUB X31, X31, 0xE0
	0x03BB8A5C STR D8, [X31 + 0x70]
	0x03BB8A60 STP X29, X30, [X31 + 0x80]
	0x03BB8A64 STP X28, X27, [X31 + 0x90]
	0x03BB8A68 STP X26, X25, [X31 + 0xA0]
	0x03BB8A6C STP X24, X23, [X31 + 0xB0]
	0x03BB8A70 STP X22, X21, [X31 + 0xC0]
	0x03BB8A74 STP X20, X19, [X31 + 0xD0]
	0x03BB8A78 ADRP X19, 0x82A000
	0x03BB8A7C LDRB W8, [X19 + 0xD1F]
	0x03BB8A80 MOV X20, X3
	0x03BB8A84 MOV X22, X2
	0x03BB8A88 MOV X21, X1
	0x03BB8A8C MOV X23, X0
	0x03BB8A90 TBNZ X8, 0x0, 0x3BB8B5C
	0x03BB8A94 ADRP X0, 0x5A2000
	0x03BB8A98 LDR X0, [X0 + 0xD58]
	0x03BB8A9C BL 0x1C16CF4
	0x03BB8AA0 ADRP X0, 0x5A2000
	0x03BB8AA4 LDR X0, [X0 + 0xD60]
	0x03BB8AA8 BL 0x1C16CF4
	0x03BB8AAC ADRP X0, 0x5A3000
	0x03BB8AB0 LDR X0, [X0 + 0xD8]
	0x03BB8AB4 BL 0x1C16CF4
	0x03BB8AB8 ADRP X0, 0x5A5000
	0x03BB8ABC LDR X0, [X0 + 0x178]
	0x03BB8AC0 BL 0x1C16CF4
	0x03BB8AC4 ADRP X0, 0x5A5000
	0x03BB8AC8 LDR X0, [X0 + 0x180]
	0x03BB8ACC BL 0x1C16CF4
	0x03BB8AD0 ADRP X0, 0x5A3000
	0x03BB8AD4 LDR X0, [X0 + 0xE0]
	0x03BB8AD8 BL 0x1C16CF4
	0x03BB8ADC ADRP X0, 0x5A3000
	0x03BB8AE0 LDR X0, [X0 + 0xE8]
	0x03BB8AE4 BL 0x1C16CF4
	0x03BB8AE8 ADRP X0, 0x5A5000
	0x03BB8AEC LDR X0, [X0 + 0x188]
	0x03BB8AF0 BL 0x1C16CF4
	0x03BB8AF4 ADRP X0, 0x5A5000
	0x03BB8AF8 LDR X0, [X0 + 0x148]
	0x03BB8AFC BL 0x1C16CF4
	0x03BB8B00 ADRP X0, 0x5A2000
	0x03BB8B04 LDR X0, [X0 + 0xE28]
	0x03BB8B08 BL 0x1C16CF4
	0x03BB8B0C ADRP X0, 0x5A2000
	0x03BB8B10 LDR X0, [X0 + 0xE00]
	0x03BB8B14 BL 0x1C16CF4
	0x03BB8B18 ADRP X0, 0x5A5000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x82B000
	008 Move X20, 0x5A6000
	009 Move W8, [X21+3341]
	010 Move X20, [X20+312]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x5A6000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x5A6000
	020 Move X0, [X0+320]
	021 Call 0x1C17CF4
	022 Move X0, 0x5A6000
	023 Move X0, [X0+336]
	024 Call 0x1C17CF4
	025 Move X0, 0x5A6000
	026 Move X0, [X0+344]
	027 Call 0x1C17CF4
	028 Move X0, 0x5A6000
	029 Move X0, [X0+312]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3341], W8
	033 Move X0, [X20]
	034 Move [X31+24], X31
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, [X8]
	044 Compare X0, 0
	045 JumpIfEqual {107}
	046 Move X8, 0x5A6000
	047 Move X8, [X8+328]
	048 Move X21, 0x5A6000
	049 Add X1, X31, 24
	050 Move X2, [X8]
	051 Move X21, [X21+344]
	052 Call 0x2EF2058, X0, X1
	053 Move X8, [X31+24]
	054 Move [X31], X0
	055 Move [X31+8], X1
	056 Move X0, X19
	057 Move X1, X8
	058 Call XRTargetFilter.GetEnabledEvaluators, X0, X1
	059 Move X8, [X31+24]
	060 Compare X8, 0
	061 JumpIfEqual {94}
	062 Move X22, 0x5A6000
	063 Move X22, [X22+336]
	064 Move W20, W31
	065 Move W8, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X19
	068 Move X1, X31
	069 Call Behaviour.get_isActiveAndEnabled, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {95}
	074 Move X0, [X31+24]
	075 Compare X0, 0
	076 JumpIfEqual {106}
	077 Move X2, [X22]
	078 Move W1, W20
	079 Call List`1<Object>.get_Item, X0, X1
	080 Compare X0, 0
	081 JumpIfEqual {105}
	082 Move W8, [X0+41]
	083 Compare W8, 0
	084 JumpIfEqual {90}
	085 Move X8, [X0]
	086 Move [X0+41], W31
	087 Move X9, [X8+440]
	088 Move X1, [X8+448]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, [X31+24]
	091 Add W20, W20, 1
	092 Compare X8, 0
	093 JumpIfNotEqual {65}
	094 Call 0x1C17F20
	095 Move X1, [X21]
	096 Add X0, X31, 0
	097 Call 0x24A7DD0, X0
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X30, [X31+16]
	103 Add X31, X31, 64
	104 Return 
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Move X19, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X19
	111 Call 0x3EB2AD0
	112 Move X20, [X0]
	113 Call 0x3EB2AE0
	114 Move X1, [X21]
	115 Add X0, X31, 0
	116 Call 0x24A7DD0, X0
	117 Compare X20, 0
	118 JumpIfEqual {98}
	119 Move X0, X20
	120 Call 0x1C17F18
	121 Move X20, X31
	122 Move X19, X0
	123 Move X1, [X21]
	124 Add X0, X31, 0
	125 Call 0x24A7DD0, X0
	126 Compare X20, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X19
	129 Call 0x1D2D690
	130 Move X0, X20
	131 Call 0x1C17F18
	132 Call 0x1991590

Method: System.Void OnDestroy()

Disassembly:
	0x03BB8D60 ADRP X8, 0x5A5000
	0x03BB8D64 LDR X8, [X8 + 0x138]
	0x03BB8D68 LDR X0, [X8]
	0x03BB8D6C LDR X8, [X0 + 0xB8]
	0x03BB8D70 LDR X0, [X8 + 0x8]
	0x03BB8D74 CBZ X0, 0x3BB8EE8
	0x03BB8D78 LDR X2, [X19]
	0x03BB8D7C MOV X1, X23
	0x03BB8D80 MOV V0.16B, V8.16B
	0x03BB8D84 BL 0x2AB4A74
	0x03BB8D88 B 0x3BB8C5C
	0x03BB8D8C BL 0x1C16F20
	0x03BB8D90 B 0x3BB8F90
	0x03BB8D94 B 0x3BB8D9C
	0x03BB8D98 B 0x3BB8D9C
	0x03BB8D9C MOV X26, X1
	0x03BB8DA0 CMP W26, 0x1
	0x03BB8DA4 B.NE 0x3BB8EB4
	0x03BB8DA8 BL 0x3EB1AD0
	0x03BB8DAC LDR X24, [X0]
	0x03BB8DB0 BL 0x3EB1AE0
	0x03BB8DB4 MOV W26, W31
	0x03BB8DB8 B 0x3BB8CD0
	0x03BB8DBC MOV X23, X31
	0x03BB8DC0 MOVZ W26, 0xA
	0x03BB8DC4 B 0x3BB8DCC
	0x03BB8DC8 MOV X23, X31
	0x03BB8DCC ADRP X8, 0x5A3000
	0x03BB8DD0 LDR X8, [X8 + 0xD8]
	0x03BB8DD4 LDR X1, [X8]
	0x03BB8DD8 ADRP X22, 0x5A5000
	0x03BB8DDC LDR X22, [X22 + 0x138]
	0x03BB8DE0 ADD X0, X31, 0x40
	0x03BB8DE4 BL 0x2BC434C
	0x03BB8DE8 CBNZ X23, 0x3BB8F88
	0x03BB8DEC MOV X21, X31
	0x03BB8DF0 CBNZ W26, 0x3BB8DFC
	0x03BB8DF4 MOV W26, W31
	0x03BB8DF8 MOV X21, X23
	0x03BB8DFC ADRP X8, 0x5A5000
	0x03BB8E00 LDR X8, [X8 + 0x158]
	0x03BB8E04 LDR X1, [X8]
	0x03BB8E08 ADD X0, X31, 0x60
	0x03BB8E0C BL 0x24A6DD0
	0x03BB8E10 LDR X19, [X31]
	0x03BB8E14 CBNZ X21, 0x3BB8F80
	0x03BB8E18 CMP W26, 0xA
	0x03BB8E1C B.EQ 0x3BB8E24
	0x03BB8E20 CBNZ W26, 0x3BB8E54
	0x03BB8E24 LDR X0, [X22]
	0x03BB8E28 LDR W8, [X0 + 0xE0]
	0x03BB8E2C CBNZ W8, 0x3BB8E38
	0x03BB8E30 BL 0x1C16DFC
	0x03BB8E34 LDR X0, [X22]
	0x03BB8E38 LDR X8, [X0 + 0xB8]
	0x03BB8E3C ADRP X9, 0x5A4000
	0x03BB8E40 LDR X9, [X9 + 0x58]
	0x03BB8E44 LDR X1, [X8 + 0x10]
	0x03BB8E48 LDR X2, [X9]
	0x03BB8E4C MOV X0, X20
	0x03BB8E50 BL 0x301DD30
	0x03BB8E54 MOV X20, X31
	0x03BB8E58 STRB W31, [X19 + 0x31]
	0x03BB8E5C LDR X0, [X22]
	0x03BB8E60 LDR W8, [X0 + 0xE0]
	0x03BB8E64 CBNZ W8, 0x3BB8E70
	0x03BB8E68 BL 0x1C16DFC
	0x03BB8E6C LDR X0, [X22]
	0x03BB8E70 LDR X8, [X0 + 0xB8]
	0x03BB8E74 LDR X0, [X8 + 0x8]
	0x03BB8E78 CBZ X0, 0x3BB8F6C
	0x03BB8E7C ADRP X8, 0x5A2000
	0x03BB8E80 LDR X8, [X8 + 0xD58]
	0x03BB8E84 LDR X1, [X8]
	0x03BB8E88 BL 0x2AB4C18
	0x03BB8E8C CBNZ X20, 0x3BB8F70
	0x03BB8E90 LDP X20, X19, [X31 + 0xD0]
	0x03BB8E94 LDP X22, X21, [X31 + 0xC0]
	0x03BB8E98 LDP X24, X23, [X31 + 0xB0]
	0x03BB8E9C LDP X26, X25, [X31 + 0xA0]
	0x03BB8EA0 LDP X28, X27, [X31 + 0x90]
	0x03BB8EA4 LDP X29, X30, [X31 + 0x80]
	0x03BB8EA8 LDR V8, [X31 + 0x70]
	0x03BB8EAC ADD X31, X31, 0xE0
	0x03BB8EB0 RET
	0x03BB8EB4 MOV X21, X0
	0x03BB8EB8 MOV X24, X31
	0x03BB8EBC LDR X1, [X29]
	0x03BB8EC0 ADD X0, X31, 0x20
	0x03BB8EC4 BL 0x2BC434C
	0x03BB8EC8 MOV X0, X21
	0x03BB8ECC CBZ X24, 0x3BB8FF8
	0x03BB8ED0 MOV X0, X24
	0x03BB8ED4 BL 0x1C16F18
	0x03BB8ED8 MOV X0, X24
	0x03BB8EDC BL 0x1C16F18
	0x03BB8EE0 BL 0x1C16F20
	0x03BB8EE4 BL 0x1C16F20
	0x03BB8EE8 BL 0x1C16F20
	0x03BB8EEC MOV X0, X23
	0x03BB8EF0 MOV X1, X31
	0x03BB8EF4 BL 0x3C389D4
	0x03BB8EF8 MOV X19, X0
	0x03BB8EFC ADRP X0, 0x5A5000
	0x03BB8F00 LDR X0, [X0 + 0x220]
	0x03BB8F04 BL 0x1C16D08
	0x03BB8F08 MOV X20, X0
	0x03BB8F0C ADRP X0, 0x5A5000
	0x03BB8F10 LDR X0, [X0 + 0x228]
	0x03BB8F14 BL 0x1C16D08
	0x03BB8F18 MOV X2, X0
	0x03BB8F1C MOV X0, X20
	0x03BB8F20 MOV X1, X19
	0x03BB8F24 MOV X3, X31
	0x03BB8F28 BL 0x32274B8
	0x03BB8F2C MOV X19, X0
	0x03BB8F30 ADRP X0, 0x53B000
	0x03BB8F34 LDR X0, [X0 + 0x5B0]
	0x03BB8F38 BL 0x1C16D08
	0x03BB8F3C BL 0x1C16F10
	0x03BB8F40 MOV X1, X19
	0x03BB8F44 MOV X2, X31
	0x03BB8F48 MOV X20, X0
	0x03BB8F4C BL 0x337DF1C
	0x03BB8F50 ADRP X0, 0x5A5000
	0x03BB8F54 LDR X0, [X0 + 0x230]
	0x03BB8F58 BL 0x1C16D08
	0x03BB8F5C MOV X1, X0
	0x03BB8F60 MOV X0, X20
	0x03BB8F64 BL 0x1C16DEC
	0x03BB8F68 BL 0x1C16F20
	0x03BB8F6C BL 0x1C16F20
	0x03BB8F70 MOV X0, X20
	0x03BB8F74 BL 0x1C16F18
	0x03BB8F78 BL 0x1C16F20
	0x03BB8F7C BL 0x1C16F20
	0x03BB8F80 MOV X0, X21
	0x03BB8F84 BL 0x1C16F18
	0x03BB8F88 MOV X0, X23
	0x03BB8F8C BL 0x1C16F18
	0x03BB8F90 MOV X26, X1
	0x03BB8F94 MOV X21, X0
	0x03BB8F98 B 0x3BB8EBC
	0x03BB8F9C B 0x3BB8FC8
	0x03BB8FA0 B 0x3BB8FC8
	0x03BB8FA4 B 0x3BB8FB8
	0x03BB8FA8 B 0x3BB8FB8
	0x03BB8FAC B 0x3BB8FB8
	0x03BB8FB0 B 0x3BB8FC8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X21, 0x82B000
	009 Move X20, 0x5A6000
	010 Move W8, [X21+3342]
	011 Move X20, [X20+312]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x5A6000
	018 Move X0, [X0+376]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A6000
	021 Move X0, [X0+384]
	022 Call 0x1C17CF4
	023 Move X0, 0x5A6000
	024 Move X0, [X0+392]
	025 Call 0x1C17CF4
	026 Move X0, 0x5A6000
	027 Move X0, [X0+328]
	028 Call 0x1C17CF4
	029 Move X0, 0x5A6000
	030 Move X0, [X0+408]
	031 Call 0x1C17CF4
	032 Move X0, 0x5A6000
	033 Move X0, [X0+344]
	034 Call 0x1C17CF4
	035 Move X0, 0x5A6000
	036 Move X0, [X0+312]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3342], W8
	040 Move [X31+64], X31
	041 Move [X31+72], X31
	042 Move [X31+48], X31
	043 Move [X31+56], X31
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X19+48], W31
	047 Move X0, [X20]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X20]
	053 Move X8, [X0+184]
	054 Move X0, [X8]
	055 Compare X0, 0
	056 JumpIfEqual {115}
	057 Move X8, 0x5A6000
	058 Move X8, [X8+328]
	059 Move X22, 0x5A6000
	060 Add X1, X31, 72
	061 Move X2, [X8]
	062 Move X22, [X22+344]
	063 Call 0x2EF2058, X0, X1
	064 Move X8, [X31+72]
	065 Move [X31+56], X0
	066 Move [X31+64], X1
	067 Move X0, X19
	068 Move X1, X8
	069 Call XRTargetFilter.GetEvaluators, X0, X1
	070 Move X0, [X31+72]
	071 Compare X0, 0
	072 JumpIfEqual {116}
	073 Move X8, 0x5A6000
	074 Move X8, [X8+408]
	075 Move X1, [X8]
	076 Add X8, X31, 8
	077 Call List`1<Object>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X8, [X31+24]
	080 Move X19, 0x5A6000
	081 Move X21, 0x5A6000
	082 Move X19, [X19+384]
	083 Move X21, [X21+376]
	084 Move [X31+2], V0
	085 Move [X31+48], X8
	086 Move X1, [X19]
	087 Add X0, X31, 32
	088 Call Enumerator<Object>.MoveNext, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {97}
	093 Move X0, [X31+48]
	094 Compare X0, 0
	095 JumpIfEqual {114}
	096 Call XRTargetEvaluator.DisposeInternal, X0
	097 Move X20, X31
	098 Move X1, [X21]
	099 Add X0, X31, 32
	100 Call Enumerator<Object>.Dispose, X0
	101 Compare X20, 0
	102 JumpIfNotEqual {117}
	103 Move X1, [X22]
	104 Add X0, X31, 56
	105 Call 0x24A7DD0, X0
	106 Move X20, [X31+112]
	107 Move X19, [X31+120]
	108 Move X22, [X31+96]
	109 Move X21, [X31+104]
	110 Move X30, [X31+80]
	111 Move X23, [X31+88]
	112 Add X31, X31, 128
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Call 0x1C17F20
	117 Move X0, X20
	118 Call 0x1C17F18
	119 Move X19, X1
	120 Move X23, X0
	121 Move X23, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X23
	124 Call 0x3EB2AD0
	125 Move X20, [X0]
	126 Call 0x3EB2AE0
	127 Move X19, X1
	128 Move X20, X31
	129 Move X1, [X21]
	130 Add X0, X31, 32
	131 Call Enumerator<Object>.Dispose, X0
	132 Compare X20, 0
	133 JumpIfNotEqual {147}
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X23
	136 Call 0x3EB2AD0
	137 Move X19, [X0]
	138 Call 0x3EB2AE0
	139 Move X1, [X22]
	140 Add X0, X31, 56
	141 Call 0x24A7DD0, X0
	142 Compare X19, 0
	143 JumpIfEqual {106}
	144 Move X0, X19
	145 Call 0x1C17F18
	146 Move X19, X31
	147 Move X0, X20
	148 Call 0x1C17F18
	149 Move X19, X1
	150 Move X23, X0
	151 Move X23, X0
	152 Move X1, [X22]
	153 Add X0, X31, 56
	154 Call 0x24A7DD0, X0
	155 Compare X19, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X23
	158 Call 0x1D2D690
	159 Move X0, X19
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void Reset()

Disassembly:
	0x03BB8FB4 B 0x3BB8FC8
	0x03BB8FB8 MOV X26, X1
	0x03BB8FBC MOV X21, X0
	0x03BB8FC0 B 0x3BB9034
	0x03BB8FC4 B 0x3BB8FC8
	0x03BB8FC8 MOV X26, X1
	0x03BB8FCC MOV X21, X0
	0x03BB8FD0 B 0x3BB9074
	0x03BB8FD4 B 0x3BB8FF4
	0x03BB8FD8 B 0x3BB8FF4
	0x03BB8FDC B 0x3BB8FF4
	0x03BB8FE0 B 0x3BB8FF4
	0x03BB8FE4 B 0x3BB8FF4
	0x03BB8FE8 B 0x3BB8FF4
	0x03BB8FEC B 0x3BB8FF4
	0x03BB8FF0 B 0x3BB8FF4
	0x03BB8FF4 MOV X26, X1
	0x03BB8FF8 CMP W26, 0x1
	0x03BB8FFC B.NE 0x3BB9014
	0x03BB9000 BL 0x3EB1AD0
	0x03BB9004 LDR X23, [X0]
	0x03BB9008 BL 0x3EB1AE0
	0x03BB900C MOV W26, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x82B000
	006 Move X21, 0x5A6000
	007 Move W8, [X20+3343]
	008 Move X21, [X21+424]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5A6000
	015 Move X0, [X0+424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3343], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x22AF798, X0
	022 Compare X0, 0
	023 JumpIfEqual {32}
	024 Move X8, [X0]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X2, [X8+456]
	028 Move X1, [X8+464]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 CallNoReturn X2
	032 Call 0x1C17F20

Method: System.Void RegisterEvaluatorHandlers(UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator evaluator)

Disassembly:
	0x03BB78DC B 0x3BB78E0
	0x03BB78E0 MOV X19, X0
	0x03BB78E4 CMP W1, 0x1
	0x03BB78E8 B.NE 0x3BB7914
	0x03BB78EC MOV X0, X19
	0x03BB78F0 BL 0x3EB1AD0
	0x03BB78F4 LDR X20, [X0]
	0x03BB78F8 BL 0x3EB1AE0
	0x03BB78FC LDR X1, [X21]
	0x03BB7900 ADD X0, X31, 0x0
	0x03BB7904 BL 0x24A6DD0
	0x03BB7908 CBZ X20, 0x3BB78A8
	0x03BB790C MOV X0, X20
	0x03BB7910 BL 0x1C16F18
	0x03BB7914 MOV X20, X31
	0x03BB7918 B 0x3BB7920
	0x03BB791C MOV X19, X0
	0x03BB7920 LDR X1, [X21]
	0x03BB7924 ADD X0, X31, 0x0
	0x03BB7928 BL 0x24A6DD0
	0x03BB792C CBNZ X20, 0x3BB7938
	0x03BB7930 MOV X0, X19
	0x03BB7934 BL 0x1D2C690
	0x03BB7938 MOV X0, X20
	0x03BB793C BL 0x1C16F18
	0x03BB7940 BL 0x1990590
	0x03BB7944 SUB X31, X31, 0x40
	0x03BB7948 STR X30, [X31 + 0x10]
	0x03BB794C STP X22, X21, [X31 + 0x20]
	0x03BB7950 STP X20, X19, [X31 + 0x30]
	0x03BB7954 ADRP X21, 0x82B000
	0x03BB7958 ADRP X20, 0x5A6000
	0x03BB795C LDRB W8, [X21 + 0xD0D]
	0x03BB7960 LDR X20, [X20 + 0x138]
	0x03BB7964 MOV X19, X0
	0x03BB7968 TBNZ X8, 0x0, 0x3BB79B0
	0x03BB796C ADRP X0, 0x5A6000
	0x03BB7970 LDR X0, [X0 + 0x148]
	0x03BB7974 BL 0x1C16CF4
	0x03BB7978 ADRP X0, 0x5A6000
	0x03BB797C LDR X0, [X0 + 0x140]
	0x03BB7980 BL 0x1C16CF4
	0x03BB7984 ADRP X0, 0x5A6000
	0x03BB7988 LDR X0, [X0 + 0x150]
	0x03BB798C BL 0x1C16CF4
	0x03BB7990 ADRP X0, 0x5A6000
	0x03BB7994 LDR X0, [X0 + 0x158]
	0x03BB7998 BL 0x1C16CF4
	0x03BB799C ADRP X0, 0x5A6000
	0x03BB79A0 LDR X0, [X0 + 0x138]
	0x03BB79A4 BL 0x1C16CF4
	0x03BB79A8 MOVZ W8, 0x1
	0x03BB79AC STRB W8, [X21 + 0xD0D]
	0x03BB79B0 LDR X0, [X20]
	0x03BB79B4 STR X31, [X31 + 0x18]
	0x03BB79B8 STP X31, X31, [X31]
	0x03BB79BC LDR W8, [X0 + 0xE0]
	0x03BB79C0 CBNZ W8, 0x3BB79CC
	0x03BB79C4 BL 0x1C16DFC
	0x03BB79C8 LDR X0, [X20]
	0x03BB79CC LDR X8, [X0 + 0xB8]
	0x03BB79D0 LDR X0, [X8]
	0x03BB79D4 CBZ X0, 0x3BB7AA0
	0x03BB79D8 ADRP X8, 0x5A6000
	0x03BB79DC LDR X8, [X8 + 0x148]
	0x03BB79E0 ADRP X21, 0x5A6000
	0x03BB79E4 ADD X1, X31, 0x18
	0x03BB79E8 LDR X2, [X8]
	0x03BB79EC LDR X21, [X21 + 0x158]
	0x03BB79F0 BL 0x2EF1058
	0x03BB79F4 LDR X8, [X31 + 0x18]
	0x03BB79F8 STP X0, X1, [X31]
	0x03BB79FC MOV X0, X19
	0x03BB7A00 MOV X1, X8
	0x03BB7A04 BL 0x3BB7B1C
	0x03BB7A08 LDR X8, [X31 + 0x18]
	0x03BB7A0C CBZ X8, 0x3BB7A74
	0x03BB7A10 ADRP X22, 0x5A6000
	0x03BB7A14 LDR X22, [X22 + 0x150]
	0x03BB7A18 MOV W20, W31
	0x03BB7A1C LDR W8, [X8 + 0x18]
	0x03BB7A20 CMP W20, W8
	0x03BB7A24 B.GE 0x3BB7A78
	0x03BB7A28 MOV X0, X19
	0x03BB7A2C MOV X1, X31
	0x03BB7A30 BL 0x3C32454
	0x03BB7A34 TBNZ X0, 0x0, 0x3BB7A78
	0x03BB7A38 LDR X0, [X31 + 0x18]
	0x03BB7A3C CBZ X0, 0x3BB7A9C
	0x03BB7A40 LDR X2, [X22]
	0x03BB7A44 MOV W1, W20
	0x03BB7A48 BL 0x301BCCC
	0x03BB7A4C CBZ X0, 0x3BB7A98
	0x03BB7A50 LDRB W8, [X0 + 0x29]
	0x03BB7A54 CBZ W8, 0x3BB7A68
	0x03BB7A58 LDR X8, [X0]
	0x03BB7A5C STRB W31, [X0 + 0x29]
	0x03BB7A60 LDP X9, X1, [X8 + 0x1B8]
	0x03BB7A64 BLR X9
	0x03BB7A68 LDR X8, [X31 + 0x18]
	0x03BB7A6C ADD W20, W20, 0x1
	0x03BB7A70 CBNZ X8, 0x3BB7A1C
	0x03BB7A74 BL 0x1C16F20
	0x03BB7A78 LDR X1, [X21]
	0x03BB7A7C ADD X0, X31, 0x0
	0x03BB7A80 BL 0x24A6DD0
	0x03BB7A84 LDP X20, X19, [X31 + 0x30]
	0x03BB7A88 LDP X22, X21, [X31 + 0x20]
	0x03BB7A8C LDR X30, [X31 + 0x10]
	0x03BB7A90 ADD X31, X31, 0x40
	0x03BB7A94 RET
	0x03BB7A98 BL 0x1C16F20
	0x03BB7A9C BL 0x1C16F20
	0x03BB7AA0 BL 0x1C16F20
	0x03BB7AA4 B 0x3BB7AB8
	0x03BB7AA8 B 0x3BB7AB8
	0x03BB7AAC B 0x3BB7AB8
	0x03BB7AB0 B 0x3BB7AB8
	0x03BB7AB4 B 0x3BB7AB8
	0x03BB7AB8 MOV X19, X0
	0x03BB7ABC CMP W1, 0x1
	0x03BB7AC0 B.NE 0x3BB7AEC
	0x03BB7AC4 MOV X0, X19
	0x03BB7AC8 BL 0x3EB1AD0
	0x03BB7ACC LDR X20, [X0]
	0x03BB7AD0 BL 0x3EB1AE0
	0x03BB7AD4 LDR X1, [X21]
	0x03BB7AD8 ADD X0, X31, 0x0
	0x03BB7ADC BL 0x24A6DD0
	0x03BB7AE0 CBZ X20, 0x3BB7A84
	0x03BB7AE4 MOV X0, X20
	0x03BB7AE8 BL 0x1C16F18
	0x03BB7AEC MOV X20, X31
	0x03BB7AF0 B 0x3BB7AF8
	0x03BB7AF4 MOV X19, X0
	0x03BB7AF8 LDR X1, [X21]
	0x03BB7AFC ADD X0, X31, 0x0
	0x03BB7B00 BL 0x24A6DD0
	0x03BB7B04 CBNZ X20, 0x3BB7B10
	0x03BB7B08 MOV X0, X19
	0x03BB7B0C BL 0x1D2C690
	0x03BB7B10 MOV X0, X20
	0x03BB7B14 BL 0x1C16F18
	0x03BB7B18 BL 0x1990590
	0x03BB7B1C SUB X31, X31, 0x50
	0x03BB7B20 STR X30, [X31 + 0x20]
	0x03BB7B24 STP X22, X21, [X31 + 0x30]
	0x03BB7B28 STP X20, X19, [X31 + 0x40]
	0x03BB7B2C ADRP X21, 0x82B000
	0x03BB7B30 LDRB W8, [X21 + 0xD18]
	0x03BB7B34 MOV X19, X1
	0x03BB7B38 MOV X20, X0
	0x03BB7B3C TBNZ X8, 0x0, 0x3BB7B90
	0x03BB7B40 ADRP X0, 0x5A6000
	0x03BB7B44 LDR X0, [X0 + 0x178]
	0x03BB7B48 BL 0x1C16CF4
	0x03BB7B4C ADRP X0, 0x5A6000
	0x03BB7B50 LDR X0, [X0 + 0x180]
	0x03BB7B54 BL 0x1C16CF4
	0x03BB7B58 ADRP X0, 0x5A6000
	0x03BB7B5C LDR X0, [X0 + 0x188]
	0x03BB7B60 BL 0x1C16CF4
	0x03BB7B64 ADRP X0, 0x5A6000
	0x03BB7B68 LDR X0, [X0 + 0x190]
	0x03BB7B6C BL 0x1C16CF4
	0x03BB7B70 ADRP X0, 0x5A6000
	0x03BB7B74 LDR X0, [X0 + 0x168]
	0x03BB7B78 BL 0x1C16CF4
	0x03BB7B7C ADRP X0, 0x5A6000
	0x03BB7B80 LDR X0, [X0 + 0x198]
	0x03BB7B84 BL 0x1C16CF4
	0x03BB7B88 MOVZ W8, 0x1
	0x03BB7B8C STRB W8, [X21 + 0xD18]
	0x03BB7B90 STP X31, X31, [X31 + 0x8]
	0x03BB7B94 STR X31, [X31 + 0x18]
	0x03BB7B98 CBZ X19, 0x3BB7C94

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x82C000
	009 Move X22, 0x5A7000
	010 Move W8, [X21+3344]
	011 Move X22, [X22+272]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x5A7000
	019 Move X0, [X0+280]
	020 Call 0x1C17CF4
	021 Move X0, 0x5A5000
	022 Move X0, [X0+1648]
	023 Call 0x1C17CF4
	024 Move X0, 0x5A5000
	025 Move X0, [X0+1664]
	026 Call 0x1C17CF4
	027 Move X0, 0x5A5000
	028 Move X0, [X0+1680]
	029 Call 0x1C17CF4
	030 Move X0, 0x5A7000
	031 Move X0, [X0+272]
	032 Call 0x1C17CF4
	033 Move X0, 0x5A5000
	034 Move X0, [X0+1704]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3344], W8
	038 Move X1, [X22]
	039 Move X0, X19
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+24], X31
	043 Call 0x1C17E00
	044 Compare X0, 0
	045 JumpIfEqual {151}
	046 Move X23, 0x5A7000
	047 Move X23, [X23+280]
	048 Move X19, X0
	049 Move X0, [X23]
	050 Call 0x1C17F10
	051 Move X8, [X19]
	052 Move X1, [X22]
	053 Move X21, X0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X19
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X2, [X0+8]
	070 Move X0, X21
	071 Move X1, X19
	072 Move X3, X31
	073 Call Action`1<Object>..ctor, X0, X1, X2
	074 Move X0, X20
	075 Move X1, X21
	076 Call XRTargetFilter.add_interactorLinked, X0, X1
	077 Move X0, [X23]
	078 Call 0x1C17F10
	079 Move X8, [X19]
	080 Move X1, [X22]
	081 Move X21, X0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 1
	092 Move X0, X19
	093 Call 0x1C5D788
	094 Move W9, [X10]
	095 Add W9, W9, 1
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X2, [X0+8]
	099 Move X0, X21
	100 Move X1, X19
	101 Move X3, X31
	102 Call Action`1<Object>..ctor, X0, X1, X2
	103 Move X0, X20
	104 Move X1, X21
	105 Call XRTargetFilter.add_interactorUnlinked, X0, X1
	106 Move X0, [X20+32]
	107 Compare X0, 0
	108 JumpIfEqual {159}
	109 Move X8, 0x5A5000
	110 Move X8, [X8+1704]
	111 Move X23, 0x5A5000
	112 Move X21, 0x5A5000
	113 Move X1, [X8]
	114 Move X23, [X23+1664]
	115 Move X21, [X21+1648]
	116 Add X8, X31, 8
	117 Call List`1<Object>.GetEnumerator, X0
	118 Move X1, [X23]
	119 Add X0, X31, 8
	120 Call Enumerator<Object>.MoveNext, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {148}
	125 Move X8, [X19]
	126 Move X20, [X31+24]
	127 Move X1, [X22]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X19
	138 Move W2, W31
	139 Call 0x1C5D788
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X2, [X0+8]
	145 Move X0, X19
	146 Move X1, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X1, [X21]
	149 Add X0, X31, 8
	150 Call Enumerator<Object>.Dispose, X0
	151 Move X20, [X31+64]
	152 Move X19, [X31+72]
	153 Move X22, [X31+48]
	154 Move X21, [X31+56]
	155 Move X30, [X31+32]
	156 Move X23, [X31+40]
	157 Add X31, X31, 80
	158 Return 
	159 Call 0x1C17F20
	160 Move X20, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X20
	163 Call 0x3EB2AD0
	164 Move X19, [X0]
	165 Call 0x3EB2AE0
	166 Move X1, [X21]
	167 Add X0, X31, 8
	168 Call Enumerator<Object>.Dispose, X0
	169 Compare X19, 0
	170 JumpIfEqual {151}
	171 Move X0, X19
	172 Call 0x1C17F18
	173 Move X19, X31
	174 Move X20, X0
	175 Move X1, [X21]
	176 Add X0, X31, 8
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X19, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1D2D690
	182 Move X0, X19
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.Void UnregisterEvaluatorHandlers(UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator evaluator)

Disassembly:
	0x03BB7BD8 ADRP X20, 0x5A6000
	0x03BB7BDC LDR X1, [X8]
	0x03BB7BE0 LDR X21, [X21 + 0x180]
	0x03BB7BE4 LDR X22, [X22 + 0x190]
	0x03BB7BE8 LDR X20, [X20 + 0x178]
	0x03BB7BEC ADD X8, X31, 0x8
	0x03BB7BF0 BL 0x301CB58
	0x03BB7BF4 LDR X1, [X21]
	0x03BB7BF8 ADD X0, X31, 0x8
	0x03BB7BFC BL 0x2BC4350
	0x03BB7C00 TBZ X0, 0x0, 0x3BB7C6C
	0x03BB7C04 LDR X8, [X31 + 0x18]
	0x03BB7C08 CBZ X8, 0x3BB7C8C
	0x03BB7C0C LDRB W9, [X8 + 0x18]
	0x03BB7C10 CBZ W9, 0x3BB7BF4
	0x03BB7C14 LDR W11, [X19 + 0x1C]
	0x03BB7C18 LDR X9, [X19 + 0x10]
	0x03BB7C1C LDR X10, [X22]
	0x03BB7C20 ADD W11, W11, 0x1
	0x03BB7C24 STR W11, [X19 + 0x1C]
	0x03BB7C28 CBZ X9, 0x3BB7C90
	0x03BB7C2C LDRSW X11, [X19 + 0x18]
	0x03BB7C30 LDR W12, [X9 + 0x18]
	0x03BB7C34 CMP W11, W12
	0x03BB7C38 B.CS 0x3BB7C50
	0x03BB7C3C ADD W10, W11, 0x1
	0x03BB7C40 ADD X9, X9, X11, 0x3, LSL
	0x03BB7C44 STR W10, [X19 + 0x18]
	0x03BB7C48 STR X8, [X9 + 0x20]
	0x03BB7C4C B 0x3BB7BF4
	0x03BB7C50 LDR X9, [X10 + 0x20]
	0x03BB7C54 LDR X9, [X9 + 0xC0]
	0x03BB7C58 LDR X2, [X9 + 0x70]
	0x03BB7C5C MOV X0, X19
	0x03BB7C60 MOV X1, X8
	0x03BB7C64 BL 0x301BF90
	0x03BB7C68 B 0x3BB7BF4
	0x03BB7C6C LDR X1, [X20]
	0x03BB7C70 ADD X0, X31, 0x8
	0x03BB7C74 BL 0x2BC434C
	0x03BB7C78 LDP X20, X19, [X31 + 0x40]
	0x03BB7C7C LDP X22, X21, [X31 + 0x30]
	0x03BB7C80 LDR X30, [X31 + 0x20]
	0x03BB7C84 ADD X31, X31, 0x50
	0x03BB7C88 RET
	0x03BB7C8C BL 0x1C16F20
	0x03BB7C90 BL 0x1C16F20
	0x03BB7C94 ADRP X0, 0x541000
	0x03BB7C98 LDR X0, [X0 + 0x528]
	0x03BB7C9C BL 0x1C16D08
	0x03BB7CA0 BL 0x1C16F10
	0x03BB7CA4 MOV X19, X0
	0x03BB7CA8 ADRP X0, 0x564000
	0x03BB7CAC LDR X0, [X0 + 0xA58]
	0x03BB7CB0 BL 0x1C16D08
	0x03BB7CB4 MOV X1, X0
	0x03BB7CB8 MOV X0, X19
	0x03BB7CBC MOV X2, X31
	0x03BB7CC0 BL 0x330E100
	0x03BB7CC4 ADRP X0, 0x5A6000
	0x03BB7CC8 LDR X0, [X0 + 0x1A0]
	0x03BB7CCC BL 0x1C16D08
	0x03BB7CD0 MOV X1, X0
	0x03BB7CD4 MOV X0, X19
	0x03BB7CD8 BL 0x1C16DEC
	0x03BB7CDC BL 0x1C16F20
	0x03BB7CE0 B 0x3BB7CEC
	0x03BB7CE4 B 0x3BB7CEC
	0x03BB7CE8 B 0x3BB7CEC
	0x03BB7CEC MOV X19, X0
	0x03BB7CF0 CMP W1, 0x1
	0x03BB7CF4 B.NE 0x3BB7D28
	0x03BB7CF8 MOV X0, X19
	0x03BB7CFC BL 0x3EB1AD0
	0x03BB7D00 LDR X20, [X0]
	0x03BB7D04 BL 0x3EB1AE0
	0x03BB7D08 ADRP X8, 0x5A6000
	0x03BB7D0C LDR X8, [X8 + 0x178]
	0x03BB7D10 ADD X0, X31, 0x8
	0x03BB7D14 LDR X1, [X8]
	0x03BB7D18 BL 0x2BC434C
	0x03BB7D1C CBZ X20, 0x3BB7C78
	0x03BB7D20 MOV X0, X20
	0x03BB7D24 BL 0x1C16F18
	0x03BB7D28 MOV X20, X31
	0x03BB7D2C B 0x3BB7D34
	0x03BB7D30 MOV X19, X0
	0x03BB7D34 ADRP X8, 0x5A6000
	0x03BB7D38 LDR X8, [X8 + 0x178]
	0x03BB7D3C LDR X1, [X8]
	0x03BB7D40 ADD X0, X31, 0x8
	0x03BB7D44 BL 0x2BC434C
	0x03BB7D48 CBNZ X20, 0x3BB7D54
	0x03BB7D4C MOV X0, X19
	0x03BB7D50 BL 0x1D2C690
	0x03BB7D54 MOV X0, X20
	0x03BB7D58 BL 0x1C16F18
	0x03BB7D5C BL 0x1990590
	0x03BB7D60 SUB X31, X31, 0x80
	0x03BB7D64 STP X30, X23, [X31 + 0x50]
	0x03BB7D68 STP X22, X21, [X31 + 0x60]
	0x03BB7D6C STP X20, X19, [X31 + 0x70]
	0x03BB7D70 ADRP X21, 0x82B000
	0x03BB7D74 ADRP X20, 0x5A6000
	0x03BB7D78 LDRB W8, [X21 + 0xD0E]
	0x03BB7D7C LDR X20, [X20 + 0x138]
	0x03BB7D80 MOV X19, X0
	0x03BB7D84 TBNZ X8, 0x0, 0x3BB7DE4
	0x03BB7D88 ADRP X0, 0x5A6000
	0x03BB7D8C LDR X0, [X0 + 0x178]
	0x03BB7D90 BL 0x1C16CF4
	0x03BB7D94 ADRP X0, 0x5A6000
	0x03BB7D98 LDR X0, [X0 + 0x180]
	0x03BB7D9C BL 0x1C16CF4
	0x03BB7DA0 ADRP X0, 0x5A6000
	0x03BB7DA4 LDR X0, [X0 + 0x188]
	0x03BB7DA8 BL 0x1C16CF4
	0x03BB7DAC ADRP X0, 0x5A6000
	0x03BB7DB0 LDR X0, [X0 + 0x148]
	0x03BB7DB4 BL 0x1C16CF4
	0x03BB7DB8 ADRP X0, 0x5A6000
	0x03BB7DBC LDR X0, [X0 + 0x198]
	0x03BB7DC0 BL 0x1C16CF4
	0x03BB7DC4 ADRP X0, 0x5A6000
	0x03BB7DC8 LDR X0, [X0 + 0x158]
	0x03BB7DCC BL 0x1C16CF4
	0x03BB7DD0 ADRP X0, 0x5A6000
	0x03BB7DD4 LDR X0, [X0 + 0x138]
	0x03BB7DD8 BL 0x1C16CF4
	0x03BB7DDC MOVZ W8, 0x1
	0x03BB7DE0 STRB W8, [X21 + 0xD0E]
	0x03BB7DE4 STP X31, X31, [X31 + 0x40]
	0x03BB7DE8 STP X31, X31, [X31 + 0x30]
	0x03BB7DEC STP X31, X31, [X31 + 0x20]
	0x03BB7DF0 STRB W31, [X19 + 0x30]
	0x03BB7DF4 LDR X0, [X20]
	0x03BB7DF8 LDR W8, [X0 + 0xE0]
	0x03BB7DFC CBNZ W8, 0x3BB7E08
	0x03BB7E00 BL 0x1C16DFC
	0x03BB7E04 LDR X0, [X20]
	0x03BB7E08 LDR X8, [X0 + 0xB8]
	0x03BB7E0C LDR X0, [X8]
	0x03BB7E10 CBZ X0, 0x3BB7ED8
	0x03BB7E14 ADRP X8, 0x5A6000
	0x03BB7E18 LDR X8, [X8 + 0x148]
	0x03BB7E1C ADRP X22, 0x5A6000
	0x03BB7E20 ADD X1, X31, 0x48
	0x03BB7E24 LDR X2, [X8]
	0x03BB7E28 LDR X22, [X22 + 0x158]
	0x03BB7E2C BL 0x2EF1058
	0x03BB7E30 LDR X8, [X31 + 0x48]
	0x03BB7E34 STP X0, X1, [X31 + 0x38]
	0x03BB7E38 MOV X0, X19
	0x03BB7E3C MOV X1, X8
	0x03BB7E40 BL 0x3BB76A0
	0x03BB7E44 LDR X0, [X31 + 0x48]
	0x03BB7E48 CBZ X0, 0x3BB7EDC
	0x03BB7E4C ADRP X8, 0x5A6000
	0x03BB7E50 LDR X8, [X8 + 0x198]
	0x03BB7E54 LDR X1, [X8]
	0x03BB7E58 ADD X8, X31, 0x8
	0x03BB7E5C BL 0x301CB58
	0x03BB7E60 LDUR V0, [X31 + 0x8]
	0x03BB7E64 LDR X8, [X31 + 0x18]
	0x03BB7E68 ADRP X19, 0x5A6000
	0x03BB7E6C ADRP X21, 0x5A6000
	0x03BB7E70 LDR X19, [X19 + 0x180]
	0x03BB7E74 LDR X21, [X21 + 0x178]
	0x03BB7E78 STR V0, [X31 + 0x2]
	0x03BB7E7C STR X8, [X31 + 0x30]
	0x03BB7E80 LDR X1, [X19]
	0x03BB7E84 ADD X0, X31, 0x20
	0x03BB7E88 BL 0x2BC4350
	0x03BB7E8C TBZ X0, 0x0, 0x3BB7EA0
	0x03BB7E90 LDR X0, [X31 + 0x30]
	0x03BB7E94 CBZ X0, 0x3BB7ED4
	0x03BB7E98 BL 0x3BB6EE0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x82C000
	009 Move X22, 0x5A7000
	010 Move W8, [X21+3345]
	011 Move X22, [X22+272]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x5A7000
	019 Move X0, [X0+280]
	020 Call 0x1C17CF4
	021 Move X0, 0x5A5000
	022 Move X0, [X0+1648]
	023 Call 0x1C17CF4
	024 Move X0, 0x5A5000
	025 Move X0, [X0+1664]
	026 Call 0x1C17CF4
	027 Move X0, 0x5A5000
	028 Move X0, [X0+1680]
	029 Call 0x1C17CF4
	030 Move X0, 0x5A7000
	031 Move X0, [X0+272]
	032 Call 0x1C17CF4
	033 Move X0, 0x5A5000
	034 Move X0, [X0+1704]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3345], W8
	038 Move X1, [X22]
	039 Move X0, X19
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+24], X31
	043 Call 0x1C17E00
	044 Compare X0, 0
	045 JumpIfEqual {152}
	046 Move X23, 0x5A7000
	047 Move X23, [X23+280]
	048 Move X19, X0
	049 Move X0, [X23]
	050 Call 0x1C17F10
	051 Move X8, [X19]
	052 Move X1, [X22]
	053 Move X21, X0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X19
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X2, [X0+8]
	070 Move X0, X21
	071 Move X1, X19
	072 Move X3, X31
	073 Call Action`1<Object>..ctor, X0, X1, X2
	074 Move X0, X20
	075 Move X1, X21
	076 Call XRTargetFilter.remove_interactorLinked, X0, X1
	077 Move X0, [X23]
	078 Call 0x1C17F10
	079 Move X8, [X19]
	080 Move X1, [X22]
	081 Move X21, X0
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move W2, 1
	092 Move X0, X19
	093 Call 0x1C5D788
	094 Move W9, [X10]
	095 Add W9, W9, 1
	096 Add X8, X8, W9
	097 Add X0, X8, 312
	098 Move X2, [X0+8]
	099 Move X0, X21
	100 Move X1, X19
	101 Move X3, X31
	102 Call Action`1<Object>..ctor, X0, X1, X2
	103 Move X0, X20
	104 Move X1, X21
	105 Call XRTargetFilter.remove_interactorUnlinked, X0, X1
	106 Move X0, [X20+32]
	107 Compare X0, 0
	108 JumpIfEqual {160}
	109 Move X8, 0x5A5000
	110 Move X8, [X8+1704]
	111 Move X23, 0x5A5000
	112 Move X21, 0x5A5000
	113 Move X1, [X8]
	114 Move X23, [X23+1664]
	115 Move X21, [X21+1648]
	116 Add X8, X31, 8
	117 Call List`1<Object>.GetEnumerator, X0
	118 Move X1, [X23]
	119 Add X0, X31, 8
	120 Call Enumerator<Object>.MoveNext, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {149}
	125 Move X8, [X19]
	126 Move X20, [X31+24]
	127 Move X1, [X22]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 1
	138 Move X0, X19
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 1
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X2, [X0+8]
	146 Move X0, X19
	147 Move X1, X20
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X1, [X21]
	150 Add X0, X31, 8
	151 Call Enumerator<Object>.Dispose, X0
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X30, [X31+32]
	157 Move X23, [X31+40]
	158 Add X31, X31, 80
	159 Return 
	160 Call 0x1C17F20
	161 Move X20, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X20
	164 Call 0x3EB2AD0
	165 Move X19, [X0]
	166 Call 0x3EB2AE0
	167 Move X1, [X21]
	168 Add X0, X31, 8
	169 Call Enumerator<Object>.Dispose, X0
	170 Compare X19, 0
	171 JumpIfEqual {152}
	172 Move X0, X19
	173 Call 0x1C17F18
	174 Move X19, X31
	175 Move X20, X0
	176 Move X1, [X21]
	177 Add X0, X31, 8
	178 Call Enumerator<Object>.Dispose, X0
	179 Compare X19, 0
	180 JumpIfNotEqual {183}
	181 Move X0, X20
	182 Call 0x1D2D690
	183 Move X0, X19
	184 Call 0x1C17F18
	185 Call 0x1991590

Method: System.Void GetLinkedInteractors(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractor> results)

Disassembly:
	0x03BB9010 B 0x3BB8DCC
	0x03BB9014 MOV X21, X0
	0x03BB9018 MOV X23, X31
	0x03BB901C ADRP X8, 0x5A2000
	0x03BB9020 LDR X8, [X8 + 0xD8]
	0x03BB9024 LDR X1, [X8]
	0x03BB9028 ADD X0, X31, 0x40
	0x03BB902C BL 0x2BC434C
	0x03BB9030 CBNZ X23, 0x3BB909C
	0x03BB9034 CMP W26, 0x1
	0x03BB9038 B.NE 0x3BB9058
	0x03BB903C MOV X0, X21
	0x03BB9040 BL 0x3EB1AD0
	0x03BB9044 LDR X23, [X0]
	0x03BB9048 BL 0x3EB1AE0
	0x03BB904C ADRP X22, 0x5A4000
	0x03BB9050 LDR X22, [X22 + 0x138]
	0x03BB9054 B 0x3BB8DF4
	0x03BB9058 MOV X23, X31
	0x03BB905C ADRP X8, 0x5A4000
	0x03BB9060 LDR X8, [X8 + 0x158]
	0x03BB9064 LDR X1, [X8]
	0x03BB9068 ADD X0, X31, 0x60
	0x03BB906C BL 0x24A6DD0
	0x03BB9070 CBNZ X23, 0x3BB90AC
	0x03BB9074 CMP W26, 0x1
	0x03BB9078 B.NE 0x3BB90A4
	0x03BB907C MOV X0, X21
	0x03BB9080 BL 0x3EB1AD0
	0x03BB9084 LDR X20, [X0]
	0x03BB9088 BL 0x3EB1AE0
	0x03BB908C ADRP X22, 0x5A4000
	0x03BB9090 LDR X19, [X31]
	0x03BB9094 LDR X22, [X22 + 0x138]
	0x03BB9098 B 0x3BB8E58
	0x03BB909C MOV X0, X23
	0x03BB90A0 BL 0x1C16F18
	0x03BB90A4 MOV X20, X31
	0x03BB90A8 B 0x3BB90C4
	0x03BB90AC MOV X0, X23
	0x03BB90B0 BL 0x1C16F18
	0x03BB90B4 MOV X26, X1
	0x03BB90B8 MOV X21, X0
	0x03BB90BC B 0x3BB905C
	0x03BB90C0 MOV X21, X0
	0x03BB90C4 LDR X8, [X31]
	0x03BB90C8 STRB W31, [X8 + 0x31]
	0x03BB90CC ADRP X8, 0x5A4000
	0x03BB90D0 LDR X8, [X8 + 0x138]
	0x03BB90D4 LDR X0, [X8]
	0x03BB90D8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x82A000
	006 Move W8, [X21+3346]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5A5000
	014 Move X0, [X0+432]
	015 Call 0x1C17CF4
	016 Move X0, 0x5A5000
	017 Move X0, [X0+440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3346], W8
	021 Compare X19, 0
	022 JumpIfEqual {44}
	023 Move W2, [X19+24]
	024 Move W8, [X19+28]
	025 Move X21, 0x5A5000
	026 Move X21, [X21+432]
	027 Add W8, W8, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+24], W31
	030 Move [X19+28], W8
	031 Move X0, [X19+16]
	032 Move W1, W31
	033 Move X3, X31
	034 Call Array.Clear, X0, X1, X2
	035 Move X1, [X20+32]
	036 Move X2, [X21]
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call List`1<Object>.AddRange, X0, X1
	043 Return 
	044 Move X0, 0x540000
	045 Move X0, [X0+1320]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0x563000
	050 Move X0, [X0+2648]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call ArgumentNullException..ctor, X0, X1
	056 Move X0, 0x5A5000
	057 Move X0, [X0+448]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Void GetEvaluators(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> results)

Disassembly:
	0x03BB86A0 LDR X0, [X0 + 0x128]
	0x03BB86A4 BL 0x1C16D08
	0x03BB86A8 MOV X20, X0
	0x03BB86AC ADRP X0, 0x5A5000
	0x03BB86B0 LDR X0, [X0 + 0x100]
	0x03BB86B4 BL 0x1C16D08
	0x03BB86B8 MOV X2, X0
	0x03BB86BC MOV X0, X20
	0x03BB86C0 MOV X1, X19
	0x03BB86C4 MOV X3, X31
	0x03BB86C8 BL 0x32274B8
	0x03BB86CC MOV X19, X0
	0x03BB86D0 ADRP X0, 0x53B000
	0x03BB86D4 LDR X0, [X0 + 0x5B0]
	0x03BB86D8 BL 0x1C16D08
	0x03BB86DC BL 0x1C16F10
	0x03BB86E0 MOV X1, X19
	0x03BB86E4 MOV X2, X31
	0x03BB86E8 MOV X20, X0
	0x03BB86EC BL 0x337DF1C
	0x03BB86F0 ADRP X0, 0x5A5000
	0x03BB86F4 LDR X0, [X0 + 0x1F0]
	0x03BB86F8 BL 0x1C16D08
	0x03BB86FC MOV X1, X0
	0x03BB8700 MOV X0, X20
	0x03BB8704 BL 0x1C16DEC
	0x03BB8708 STR X30, [X31 - 0x30]!
	0x03BB870C STP X22, X21, [X31 + 0x10]
	0x03BB8710 STP X20, X19, [X31 + 0x20]
	0x03BB8714 ADRP X22, 0x82A000
	0x03BB8718 LDRB W8, [X22 + 0xD1C]
	0x03BB871C MOV W20, W2
	0x03BB8720 MOV X19, X1
	0x03BB8724 MOV X21, X0
	0x03BB8728 TBNZ X8, 0x0, 0x3BB8758
	0x03BB872C ADRP X0, 0x5A5000
	0x03BB8730 LDR X0, [X0 + 0x120]
	0x03BB8734 BL 0x1C16CF4
	0x03BB8738 ADRP X0, 0x5A5000
	0x03BB873C LDR X0, [X0 + 0x1F8]
	0x03BB8740 BL 0x1C16CF4
	0x03BB8744 ADRP X0, 0x5A5000
	0x03BB8748 LDR X0, [X0 + 0x1E8]
	0x03BB874C BL 0x1C16CF4
	0x03BB8750 MOVZ W8, 0x1
	0x03BB8754 STRB W8, [X22 + 0xD1C]
	0x03BB8758 LDR X0, [X21 + 0x28]
	0x03BB875C CBZ X0, 0x3BB87D8
	0x03BB8760 ADRP X8, 0x5A5000
	0x03BB8764 LDR X8, [X8 + 0x120]
	0x03BB8768 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x82B000
	006 Move W8, [X21+3347]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5A6000
	014 Move X0, [X0+352]
	015 Call 0x1C17CF4
	016 Move X0, 0x5A6000
	017 Move X0, [X0+360]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3347], W8
	021 Compare X19, 0
	022 JumpIfEqual {44}
	023 Move W2, [X19+24]
	024 Move W8, [X19+28]
	025 Move X21, 0x5A6000
	026 Move X21, [X21+352]
	027 Add W8, W8, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+24], W31
	030 Move [X19+28], W8
	031 Move X0, [X19+16]
	032 Move W1, W31
	033 Move X3, X31
	034 Call Array.Clear, X0, X1, X2
	035 Move X1, [X20+40]
	036 Move X2, [X21]
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call List`1<Object>.AddRange, X0, X1
	043 Return 
	044 Move X0, 0x541000
	045 Move X0, [X0+1320]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X19, X0
	049 Move X0, 0x564000
	050 Move X0, [X0+2648]
	051 Call 0x1C17D08
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call ArgumentNullException..ctor, X0, X1
	056 Move X0, 0x5A6000
	057 Move X0, [X0+368]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03BB90DC CBNZ W8, 0x3BB90F0
	0x03BB90E0 BL 0x1C16DFC
	0x03BB90E4 ADRP X8, 0x5A4000
	0x03BB90E8 LDR X8, [X8 + 0x138]
	0x03BB90EC LDR X0, [X8]
	0x03BB90F0 LDR X8, [X0 + 0xB8]
	0x03BB90F4 LDR X0, [X8 + 0x8]
	0x03BB90F8 CBNZ X0, 0x3BB9100
	0x03BB90FC BL 0x1C16F20
	0x03BB9100 ADRP X8, 0x5A1000
	0x03BB9104 LDR X8, [X8 + 0xD58]
	0x03BB9108 LDR X1, [X8]
	0x03BB910C BL 0x2AB4C18
	0x03BB9110 CBNZ X20, 0x3BB911C
	0x03BB9114 MOV X0, X21
	0x03BB9118 BL 0x1D2C690
	0x03BB911C MOV X0, X20
	0x03BB9120 BL 0x1C16F18
	0x03BB9124 MOV X26, X1
	0x03BB9128 MOV X21, X0
	0x03BB912C B 0x3BB901C
	0x03BB9130 BL 0x1990590
	0x03BB9134 STR X30, [X31 - 0x40]!
	0x03BB9138 STP X24, X23, [X31 + 0x10]
	0x03BB913C STP X22, X21, [X31 + 0x20]
	0x03BB9140 STP X20, X19, [X31 + 0x30]
	0x03BB9144 ADRP X23, 0x829000
	0x03BB9148 ADRP X24, 0x5A2000
	0x03BB914C ADRP X20, 0x5A2000
	0x03BB9150 ADRP X22, 0x5A4000
	0x03BB9154 ADRP X21, 0x5A4000
	0x03BB9158 LDRB W8, [X23 + 0xD20]
	0x03BB915C LDR X24, [X24 + 0xA98]
	0x03BB9160 LDR X20, [X20 + 0xA88]
	0x03BB9164 LDR X22, [X22 + 0x238]
	0x03BB9168 LDR X21, [X21 + 0x240]
	0x03BB916C MOV X19, X0
	0x03BB9170 TBNZ X8, 0x0, 0x3BB91AC
	0x03BB9174 ADRP X0, 0x5A4000
	0x03BB9178 LDR X0, [X0 + 0x240]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x82A000
	005 Move W8, [X20+3348]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x543000
	012 Move X0, [X0+3512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3348], W8
	016 Move X19, [X19+40]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x543000
	020 Move X8, [X19]
	021 Move X10, [X10+3512]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> GetEnumerator()

Disassembly:
	0x03BB917C BL 0x1C16CF4
	0x03BB9180 ADRP X0, 0x5A2000
	0x03BB9184 LDR X0, [X0 + 0xA88]
	0x03BB9188 BL 0x1C16CF4
	0x03BB918C ADRP X0, 0x5A2000
	0x03BB9190 LDR X0, [X0 + 0xA98]
	0x03BB9194 BL 0x1C16CF4
	0x03BB9198 ADRP X0, 0x5A4000
	0x03BB919C LDR X0, [X0 + 0x238]
	0x03BB91A0 BL 0x1C16CF4
	0x03BB91A4 MOVZ W8, 0x1
	0x03BB91A8 STRB W8, [X23 + 0xD20]
	0x03BB91AC LDR X0, [X24]
	0x03BB91B0 BL 0x1C16F10
	0x03BB91B4 LDR X1, [X20]
	0x03BB91B8 MOV X20, X0
	0x03BB91BC BL 0x301B7C4
	0x03BB91C0 STR X20, [X19 + 0x20]
	0x03BB91C4 LDR X0, [X22]
	0x03BB91C8 BL 0x1C16F10
	0x03BB91CC LDR X1, [X21]
	0x03BB91D0 MOV X20, X0
	0x03BB91D4 BL 0x301B7C4
	0x03BB91D8 STR X20, [X19 + 0x28]
	0x03BB91DC MOV X0, X19
	0x03BB91E0 LDP X20, X19, [X31 + 0x30]
	0x03BB91E4 LDP X22, X21, [X31 + 0x20]
	0x03BB91E8 LDP X24, X23, [X31 + 0x10]
	0x03BB91EC MOV X1, X31
	0x03BB91F0 LDR X30, [X31], #0x40
	0x03BB91F4 B 0x3C36C30
	0x03BB91F8 STP X29, X30, [X31 - 0x60]!
	0x03BB91FC STP X28, X27, [X31 + 0x10]
	0x03BB9200 STP X26, X25, [X31 + 0x20]
	0x03BB9204 STP X24, X23, [X31 + 0x30]
	0x03BB9208 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0x82A000
	006 Move W8, [X20+3349]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x5A5000
	013 Move X0, [X0+456]
	014 Call 0x1C17CF4
	015 Move X0, 0x5A5000
	016 Move X0, [X0+408]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3349], W8
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {42}
	023 Move X8, 0x5A5000
	024 Move X8, [X8+408]
	025 Move X19, 0x5A5000
	026 Move X1, [X8]
	027 Move X19, [X19+456]
	028 Add X8, X31, 24
	029 Call List`1<Object>.GetEnumerator, X0
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move X8, [X31+40]
	032 Move X0, [X19]
	033 Add X1, X31, 0
	034 Move [X31], V0
	035 Move [X31+16], X8
	036 Call 0x1C17E04
	037 Move X20, [X31+64]
	038 Move X19, [X31+72]
	039 Move X30, [X31+48]
	040 Add X31, X31, 80
	041 Return X0
	042 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator GetEvaluatorAt(System.Int32 index)

Disassembly:
	0x03BB920C STP X20, X19, [X31 + 0x50]
	0x03BB9210 ADRP X19, 0x829000
	0x03BB9214 ADRP X21, 0x5A4000
	0x03BB9218 LDRB W8, [X19 + 0xD21]
	0x03BB921C LDR X21, [X21 + 0x248]
	0x03BB9220 TBNZ X8, 0x0, 0x3BB92BC
	0x03BB9224 ADRP X0, 0x5A4000
	0x03BB9228 LDR X0, [X0 + 0x250]
	0x03BB922C BL 0x1C16CF4
	0x03BB9230 ADRP X0, 0x5A3000
	0x03BB9234 LDR X0, [X0 + 0x68]
	0x03BB9238 BL 0x1C16CF4
	0x03BB923C ADRP X0, 0x5A1000
	0x03BB9240 LDR X0, [X0 + 0xC88]
	0x03BB9244 BL 0x1C16CF4
	0x03BB9248 ADRP X0, 0x5A1000
	0x03BB924C LDR X0, [X0 + 0xCA0]
	0x03BB9250 BL 0x1C16CF4
	0x03BB9254 ADRP X0, 0x5A4000
	0x03BB9258 LDR X0, [X0 + 0x258]
	0x03BB925C BL 0x1C16CF4
	0x03BB9260 ADRP X0, 0x5A4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x82A000
	006 Move W8, [X21+3350]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5A5000
	014 Move X0, [X0+336]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3350], W8
	018 Move X0, [X20+40]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x5A5000
	022 Move X8, [X8+336]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.get_Item, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator GetEvaluator(System.Type type)

Disassembly:
	0x03BB9264 LDR X0, [X0 + 0x260]
	0x03BB9268 BL 0x1C16CF4
	0x03BB926C ADRP X0, 0x5A4000
	0x03BB9270 LDR X0, [X0 + 0x268]
	0x03BB9274 BL 0x1C16CF4
	0x03BB9278 ADRP X0, 0x5A4000
	0x03BB927C LDR X0, [X0 + 0x270]
	0x03BB9280 BL 0x1C16CF4
	0x03BB9284 ADRP X0, 0x5A4000
	0x03BB9288 LDR X0, [X0 + 0x278]
	0x03BB928C BL 0x1C16CF4
	0x03BB9290 ADRP X0, 0x5A4000
	0x03BB9294 LDR X0, [X0 + 0x248]
	0x03BB9298 BL 0x1C16CF4
	0x03BB929C ADRP X0, 0x5A4000
	0x03BB92A0 LDR X0, [X0 + 0x280]
	0x03BB92A4 BL 0x1C16CF4
	0x03BB92A8 ADRP X0, 0x5A4000
	0x03BB92AC LDR X0, [X0 + 0x138]
	0x03BB92B0 BL 0x1C16CF4
	0x03BB92B4 MOVZ W8, 0x1
	0x03BB92B8 STRB W8, [X19 + 0xD21]
	0x03BB92BC ADRP X24, 0x5A4000
	0x03BB92C0 ADRP X20, 0x5A4000
	0x03BB92C4 ADRP X23, 0x5A4000
	0x03BB92C8 ADRP X28, 0x5A4000
	0x03BB92CC LDR X24, [X24 + 0x258]
	0x03BB92D0 LDR X20, [X20 + 0x270]
	0x03BB92D4 LDR X23, [X23 + 0x250]
	0x03BB92D8 LDR X28, [X28 + 0x278]
	0x03BB92DC LDR X0, [X21]
	0x03BB92E0 ADRP X29, 0x5A4000
	0x03BB92E4 ADRP X27, 0x5A4000
	0x03BB92E8 ADRP X22, 0x5A4000
	0x03BB92EC ADRP X26, 0x5A1000
	0x03BB92F0 ADRP X25, 0x5A1000
	0x03BB92F4 LDR X29, [X29 + 0x268]
	0x03BB92F8 LDR X27, [X27 + 0x260]
	0x03BB92FC LDR X22, [X22 + 0x138]
	0x03BB9300 LDR W8, [X0 + 0xE0]
	0x03BB9304 LDR X26, [X26 + 0xCA0]
	0x03BB9308 LDR X25, [X25 + 0xC88]
	0x03BB930C CBNZ W8, 0x3BB9318
	0x03BB9310 BL 0x1C16DFC
	0x03BB9314 LDR X0, [X21]
	0x03BB9318 LDR X8, [X0 + 0xB8]
	0x03BB931C LDR X0, [X24]
	0x03BB9320 LDR X19, [X8]
	0x03BB9324 BL 0x1C16F10
	0x03BB9328 LDR X2, [X20]
	0x03BB932C MOV X1, X19
	0x03BB9330 MOV X3, X31
	0x03BB9334 MOV X20, X0
	0x03BB9338 BL 0x2D27AA8
	0x03BB933C LDR X8, [X21]
	0x03BB9340 LDR X0, [X23]
	0x03BB9344 LDR X8, [X8 + 0xB8]
	0x03BB9348 LDR X19, [X8]
	0x03BB934C BL 0x1C16F10
	0x03BB9350 LDR X2, [X28]
	0x03BB9354 MOV X1, X19
	0x03BB9358 MOV X3, X31
	0x03BB935C MOV X21, X0
	0x03BB9360 BL 0x2A6B948
	0x03BB9364 LDR X0, [X29]
	0x03BB9368 BL 0x1C16F10
	0x03BB936C LDR X7, [X27]
	0x03BB9370 MOVZ W6, 0x2710
	0x03BB9374 MOV X1, X20
	0x03BB9378 MOV X2, X31
	0x03BB937C MOV X3, X21
	0x03BB9380 MOV X4, X31
	0x03BB9384 MOV W5, W31
	0x03BB9388 MOV X19, X0
	0x03BB938C BL 0x2EF0EC8
	0x03BB9390 LDR X8, [X22]
	0x03BB9394 LDR X8, [X8 + 0xB8]
	0x03BB9398 STR X19, [X8]
	0x03BB939C LDR X0, [X26]
	0x03BB93A0 BL 0x1C16F10
	0x03BB93A4 LDR X1, [X25]
	0x03BB93A8 MOV X19, X0
	0x03BB93AC BL 0x2AB41F4
	0x03BB93B0 LDR X8, [X22]
	0x03BB93B4 LDR X8, [X8 + 0xB8]
	0x03BB93B8 STR X19, [X8 + 0x8]
	0x03BB93BC ADRP X8, 0x5A3000
	0x03BB93C0 LDR X8, [X8 + 0x68]
	0x03BB93C4 LDR X0, [X8]
	0x03BB93C8 BL 0x1C16F10
	0x03BB93CC ADRP X8, 0x5A4000
	0x03BB93D0 LDR X8, [X8 + 0x280]
	0x03BB93D4 MOV X1, X31
	0x03BB93D8 MOV X3, X31
	0x03BB93DC MOV X19, X0
	0x03BB93E0 LDR X2, [X8]
	0x03BB93E4 BL 0x295A080
	0x03BB93E8 LDR X8, [X22]
	0x03BB93EC LDP X22, X21, [X31 + 0x40]
	0x03BB93F0 LDP X24, X23, [X31 + 0x30]
	0x03BB93F4 LDP X26, X25, [X31 + 0x20]
	0x03BB93F8 LDR X8, [X8 + 0xB8]
	0x03BB93FC LDP X28, X27, [X31 + 0x10]
	0x03BB9400 STR X19, [X8 + 0x10]
	0x03BB9404 LDP X20, X19, [X31 + 0x50]
	0x03BB9408 LDP X29, X30, [X31], #0x60
	0x03BB940C RET
	0x03BB9410 STR X30, [X31 - 0x20]!
	0x03BB9414 STP X20, X19, [X31 + 0x10]
	0x03BB9418 ADRP X19, 0x829000
	0x03BB941C ADRP X20, 0x5A4000
	0x03BB9420 LDRB W8, [X19 + 0xD22]
	0x03BB9424 LDR X20, [X20 + 0x248]
	0x03BB9428 TBNZ X8, 0x0, 0x3BB9440
	0x03BB942C ADRP X0, 0x5A4000
	0x03BB9430 LDR X0, [X0 + 0x248]
	0x03BB9434 BL 0x1C16CF4
	0x03BB9438 MOVZ W8, 0x1
	0x03BB943C STRB W8, [X19 + 0xD22]
	0x03BB9440 LDR X0, [X20]
	0x03BB9444 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x82A000
	008 Move X21, 0x53B000
	009 Move W8, [X22+3351]
	010 Move X21, [X21+1728]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x5A5000
	018 Move X0, [X0+376]
	019 Call 0x1C17CF4
	020 Move X0, 0x5A5000
	021 Move X0, [X0+384]
	022 Call 0x1C17CF4
	023 Move X0, 0x5A5000
	024 Move X0, [X0+392]
	025 Call 0x1C17CF4
	026 Move X0, 0x5A5000
	027 Move X0, [X0+408]
	028 Call 0x1C17CF4
	029 Move X0, 0x53B000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+3351], W8
	034 Move X0, [X21]
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Move X2, X31
	045 Call Type.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {95}
	050 Move X0, [X20+40]
	051 Compare X0, 0
	052 JumpIfEqual {113}
	053 Move X8, 0x5A5000
	054 Move X8, [X8+408]
	055 Move X22, 0x5A5000
	056 Move X21, 0x5A5000
	057 Move X1, [X8]
	058 Move X22, [X22+384]
	059 Move X21, [X21+376]
	060 Add X8, X31, 8
	061 Call List`1<Object>.GetEnumerator, X0
	062 Move X1, [X22]
	063 Add X0, X31, 8
	064 Call Enumerator<Object>.MoveNext, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {82}
	069 Compare X19, 0
	070 JumpIfEqual {94}
	071 Move X8, [X19]
	072 Move X20, [X31+24]
	073 Move X9, [X8+2152]
	074 Move X2, [X8+2160]
	075 Move X0, X19
	076 Move X1, X20
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {62}
	082 Move X20, X31
	083 Move X1, [X21]
	084 Add X0, X31, 8
	085 Call Enumerator<Object>.Dispose, X0
	086 Move X0, X20
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X30, [X31+32]
	092 Add X31, X31, 80
	093 Return X0
	094 Call 0x1C17F20
	095 Move X0, 0x540000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0x543000
	101 Move X0, [X0+1512]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call ArgumentNullException..ctor, X0, X1
	107 Move X0, 0x5A5000
	108 Move X0, [X0+464]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Call 0x1C17DEC
	113 Call 0x1C17F20
	114 Move X19, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X19
	117 Call 0x3EB2AD0
	118 Move X20, [X0]
	119 Call 0x3EB2AE0
	120 Move X1, [X21]
	121 Add X0, X31, 8
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X20, 0
	124 JumpIfEqual {86}
	125 Move X0, X20
	126 Call 0x1C17F18
	127 Move X20, X31
	128 Move X19, X0
	129 Move X1, [X21]
	130 Add X0, X31, 8
	131 Call Enumerator<Object>.Dispose, X0
	132 Compare X20, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X19
	135 Call 0x1D2D690
	136 Move X0, X20
	137 Call 0x1C17F18
	138 Call 0x1991590

Method: T GetEvaluator()

Disassembly:
	0x022AF880 BL 0x1C16CF4
	0x022AF884 ADRP X0, 0x1E44000
	0x022AF888 LDR X0, [X0 + 0xAC8]
	0x022AF88C BL 0x1C16CF4
	0x022AF890 ADRP X0, 0x1E6C000
	0x022AF894 LDR X0, [X0 + 0xB60]
	0x022AF898 BL 0x1C16CF4
	0x022AF89C ADRP X0, 0x1E44000
	0x022AF8A0 LDR X0, [X0 + 0x6C0]
	0x022AF8A4 BL 0x1C16CF4
	0x022AF8A8 ADRP X0, 0x1E6D000
	0x022AF8AC LDR X0, [X0 + 0xA18]
	0x022AF8B0 BL 0x1C16CF4
	0x022AF8B4 LDR X8, [X19 + 0x38]
	0x022AF8B8 CBNZ X8, 0x22AF8C8
	0x022AF8BC MOV X0, X19
	0x022AF8C0 BL 0x1C5C6E0
	0x022AF8C4 LDR X8, [X19 + 0x38]
	0x022AF8C8 ADRP X23, 0x1E44000
	0x022AF8CC LDR X23, [X23 + 0x6C0]
	0x022AF8D0 LDR X21, [X8]
	0x022AF8D4 LDR X0, [X23]
	0x022AF8D8 LDR W9, [X0 + 0xE0]
	0x022AF8DC CBNZ W9, 0x22AF8E4
	0x022AF8E0 BL 0x1C16DFC
	0x022AF8E4 MOV X0, X21
	0x022AF8E8 MOV X1, X31
	0x022AF8EC BL 0x338C698
	0x022AF8F0 CBZ X0, 0x22AFE30
	0x022AF8F4 LDR X8, [X0]
	0x022AF8F8 LDR X9, [X8 + 0x428]
	0x022AF8FC LDR X1, [X8 + 0x430]
	0x022AF900 BLR X9
	0x022AF904 ADRP X8, 0x1E6D000
	0x022AF908 LDR X8, [X8 + 0x6A0]
	0x022AF90C MOV X21, X0
	0x022AF910 LDR X8, [X8]
	0x022AF914 LDR W9, [X8 + 0xE0]
	0x022AF918 CBNZ W9, 0x22AF924
	0x022AF91C MOV X0, X8
	0x022AF920 BL 0x1C16DFC
	0x022AF924 MOV X0, X21
	0x022AF928 MOV X1, X31
	0x022AF92C BL 0x3BF3054
	0x022AF930 TBZ X0, 0x0, 0x22AF980
	0x022AF934 ADRP X8, 0x1E6B000
	0x022AF938 LDR X0, [X23]
	0x022AF93C LDR X8, [X8 + 0xD80]
	0x022AF940 LDR W9, [X0 + 0xE0]
	0x022AF944 LDR X22, [X8]
	0x022AF948 CBNZ W9, 0x22AF950
	0x022AF94C BL 0x1C16DFC
	0x022AF950 MOV X0, X22
	0x022AF954 MOV X1, X31
	0x022AF958 BL 0x338C698
	0x022AF95C MOV X1, X0
	0x022AF960 MOV X0, X21
	0x022AF964 MOV X2, X31
	0x022AF968 BL 0x3395194
	0x022AF96C TBZ X0, 0x0, 0x22AFA48
	0x022AF970 MOV X0, X20
	0x022AF974 MOV X1, X31
	0x022AF978 BL 0x3BEE730
	0x022AF97C B 0x22AFDD4
	0x022AF980 ADRP X8, 0x1E6C000
	0x022AF984 LDR X0, [X23]
	0x022AF988 LDR X8, [X8 + 0xB60]
	0x022AF98C LDR W9, [X0 + 0xE0]
	0x022AF990 LDR X22, [X8]
	0x022AF994 CBNZ W9, 0x22AF99C

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X20, X2
	015 Move X19, X1
	016 Move X22, X0
	017 Move [X29-8], X8
	018 Move X8, [X2+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {30}
	021 Move X0, 0x1E45000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move X8, [X20+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X20
	028 Call 0x1C5D6E0
	029 Move X8, [X20+56]
	030 Move X24, [X8]
	031 Move X9, [X8+8]
	032 Move W21, [X9+252]
	033 Add X9, X31, 0
	034 Add X10, X21, 15
	035 And X10, X10, 0x1FFFFFFFF
	036 Subtract X23, X9, X10
	037 Add X31, X23, 0
	038 Move X9, 0x1E45000
	039 Move X9, [X9+1728]
	040 Move X0, [X9]
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X24
	046 Move X1, X31
	047 Call Type.GetTypeFromHandle, X0
	048 Move X1, X0
	049 Move X0, X22
	050 Move X2, X31
	051 Call XRTargetFilter.GetEvaluator, X0, X1
	052 Move X8, [X20+56]
	053 Move X20, X0
	054 Move X1, [X8+8]
	055 Move W8, [X1+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X1
	061 Call 0x1C5D684
	062 Move X1, X0
	063 Move X0, X20
	064 Move X2, X23
	065 Call 0x1C17E10
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X21
	069 Call 0x3EB2AC0
	070 Move X8, [X25+40]
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X31, X29, 0
	074 Move X20, [X31+64]
	075 Move X19, [X31+72]
	076 Move X22, [X31+48]
	077 Move X21, [X31+56]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X25, [X31+16]
	081 Move X29, [X31+80]
	082 Move X30, [X31+88]
	083 Return X0
	084 Call 0x3EB2B20

Method: System.Void GetEnabledEvaluators(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator> results)

Disassembly:
	0x03BB8B1C LDR X0, [X0 + 0x198]
	0x03BB8B20 BL 0x1C16CF4
	0x03BB8B24 ADRP X0, 0x5A3000
	0x03BB8B28 LDR X0, [X0 + 0xF0]
	0x03BB8B2C BL 0x1C16CF4
	0x03BB8B30 ADRP X0, 0x5A4000
	0x03BB8B34 LDR X0, [X0 + 0x58]
	0x03BB8B38 BL 0x1C16CF4
	0x03BB8B3C ADRP X0, 0x5A5000
	0x03BB8B40 LDR X0, [X0 + 0x158]
	0x03BB8B44 BL 0x1C16CF4
	0x03BB8B48 ADRP X0, 0x5A5000
	0x03BB8B4C LDR X0, [X0 + 0x138]
	0x03BB8B50 BL 0x1C16CF4
	0x03BB8B54 MOVZ W8, 0x1
	0x03BB8B58 STRB W8, [X19 + 0xD1F]
	0x03BB8B5C STR X31, [X31 + 0x78]
	0x03BB8B60 STP X31, X31, [X31 + 0x60]
	0x03BB8B64 STP X31, X31, [X31 + 0x40]
	0x03BB8B68 STR X31, [X31 + 0x50]
	0x03BB8B6C STP X31, X31, [X31 + 0x20]
	0x03BB8B70 STR X31, [X31 + 0x30]
	0x03BB8B74 LDRB W8, [X23 + 0x31]
	0x03BB8B78 CBNZ W8, 0x3BB8EEC
	0x03BB8B7C ADRP X19, 0x5A5000
	0x03BB8B80 LDR X19, [X19 + 0x138]
	0x03BB8B84 MOVZ W8, 0x1
	0x03BB8B88 STRB W8, [X23 + 0x31]
	0x03BB8B8C STR X23, [X31]
	0x03BB8B90 CBZ X20, 0x3BB8F68
	0x03BB8B94 LDP W2, W8, [X20 + 0x18]
	0x03BB8B98 ADD W8, W8, 0x1
	0x03BB8B9C CMP W2, 0x1
	0x03BB8BA0 STP W31, W8, [X20 + 0x18]
	0x03BB8BA4 B.LT 0x3BB8BB8
	0x03BB8BA8 LDR X0, [X20 + 0x10]
	0x03BB8BAC MOV W1, W31
	0x03BB8BB0 MOV X3, X31
	0x03BB8BB4 BL 0x339FA34
	0x03BB8BB8 LDR X0, [X19]
	0x03BB8BBC LDR W8, [X0 + 0xE0]
	0x03BB8BC0 CBNZ W8, 0x3BB8BCC
	0x03BB8BC4 BL 0x1C16DFC
	0x03BB8BC8 LDR X0, [X19]
	0x03BB8BCC LDR X8, [X0 + 0xB8]
	0x03BB8BD0 LDR X0, [X8]
	0x03BB8BD4 CBZ X0, 0x3BB8F78
	0x03BB8BD8 ADRP X8, 0x5A5000
	0x03BB8BDC LDR X8, [X8 + 0x148]
	0x03BB8BE0 LDR X2, [X8]
	0x03BB8BE4 ADD X1, X31, 0x78
	0x03BB8BE8 BL 0x2EF1058
	0x03BB8BEC LDR X8, [X31 + 0x78]
	0x03BB8BF0 STP X0, X1, [X31 + 0x60]
	0x03BB8BF4 MOV X0, X23
	0x03BB8BF8 MOV X1, X8
	0x03BB8BFC BL 0x3BB7B1C
	0x03BB8C00 CBZ X22, 0x3BB8F7C
	0x03BB8C04 ADRP X8, 0x5A3000
	0x03BB8C08 LDR X8, [X8 + 0xF0]
	0x03BB8C0C LDR X1, [X8]
	0x03BB8C10 ADD X8, X31, 0x8
	0x03BB8C14 MOV X0, X22
	0x03BB8C18 BL 0x301CB58
	0x03BB8C1C ADRP X22, 0x5A3000
	0x03BB8C20 ADRP X25, 0x5A5000
	0x03BB8C24 ADRP X27, 0x5A5000
	0x03BB8C28 ADRP X29, 0x5A5000
	0x03BB8C2C ADRP X28, 0x5A2000
	0x03BB8C30 LDR X22, [X22 + 0xE0]
	0x03BB8C34 LDR X25, [X25 + 0x198]
	0x03BB8C38 LDR X27, [X27 + 0x180]
	0x03BB8C3C LDR X29, [X29 + 0x178]
	0x03BB8C40 LDR X28, [X28 + 0xE28]
	0x03BB8C44 LDUR V0, [X31 + 0x8]
	0x03BB8C48 LDR X8, [X31 + 0x18]
	0x03BB8C4C ADRP X19, 0x5A2000
	0x03BB8C50 LDR X19, [X19 + 0xD60]
	0x03BB8C54 STR V0, [X31 + 0x4]
	0x03BB8C58 STR X8, [X31 + 0x50]
	0x03BB8C5C LDR X1, [X22]
	0x03BB8C60 ADD X0, X31, 0x40
	0x03BB8C64 BL 0x2BC4350
	0x03BB8C68 TBZ X0, 0x0, 0x3BB8DBC
	0x03BB8C6C LDR X0, [X31 + 0x78]
	0x03BB8C70 CBZ X0, 0x3BB8EE0
	0x03BB8C74 LDR X23, [X31 + 0x50]
	0x03BB8C78 LDR X1, [X25]
	0x03BB8C7C ADD X8, X31, 0x8
	0x03BB8C80 BL 0x301CB58
	0x03BB8C84 LDUR V0, [X31 + 0x8]
	0x03BB8C88 LDR X8, [X31 + 0x18]
	0x03BB8C8C FMOV S8, 1
	0x03BB8C90 STR V0, [X31 + 0x2]
	0x03BB8C94 STR X8, [X31 + 0x30]
	0x03BB8C98 LDR X1, [X27]
	0x03BB8C9C ADD X0, X31, 0x20
	0x03BB8CA0 BL 0x2BC4350
	0x03BB8CA4 TBZ X0, 0x0, 0x3BB8CC8
	0x03BB8CA8 LDR X0, [X31 + 0x30]
	0x03BB8CAC CBZ X0, 0x3BB8D8C
	0x03BB8CB0 MOV X1, X21
	0x03BB8CB4 MOV X2, X23
	0x03BB8CB8 BL 0x3BB6F1C
	0x03BB8CBC FMUL S8, S8, S0
	0x03BB8CC0 FCMP S8, 0x0
	0x03BB8CC4 B.HI 0x3BB8C98
	0x03BB8CC8 MOV X24, X31
	0x03BB8CCC MOVZ W26, 0x9
	0x03BB8CD0 LDR X1, [X29]
	0x03BB8CD4 ADD X0, X31, 0x20
	0x03BB8CD8 BL 0x2BC434C
	0x03BB8CDC CBNZ X24, 0x3BB8ED8
	0x03BB8CE0 CMP W26, 0x9
	0x03BB8CE4 B.EQ 0x3BB8CEC
	0x03BB8CE8 CBNZ W26, 0x3BB8DC8
	0x03BB8CEC FCMP S8, 0x0
	0x03BB8CF0 B.LT 0x3BB8C5C
	0x03BB8CF4 LDR W10, [X20 + 0x1C]
	0x03BB8CF8 LDR X8, [X20 + 0x10]
	0x03BB8CFC LDR X9, [X28]
	0x03BB8D00 ADD W10, W10, 0x1
	0x03BB8D04 STR W10, [X20 + 0x1C]
	0x03BB8D08 CBZ X8, 0x3BB8EE4
	0x03BB8D0C LDRSW X10, [X20 + 0x18]
	0x03BB8D10 LDR W11, [X8 + 0x18]
	0x03BB8D14 CMP W10, W11
	0x03BB8D18 B.CS 0x3BB8D30
	0x03BB8D1C ADD W9, W10, 0x1
	0x03BB8D20 ADD X8, X8, X10, 0x3, LSL
	0x03BB8D24 STR W9, [X20 + 0x18]
	0x03BB8D28 STR X23, [X8 + 0x20]
	0x03BB8D2C B 0x3BB8D48
	0x03BB8D30 LDR X8, [X9 + 0x20]
	0x03BB8D34 LDR X8, [X8 + 0xC0]
	0x03BB8D38 LDR X2, [X8 + 0x70]
	0x03BB8D3C MOV X0, X20
	0x03BB8D40 MOV X1, X23
	0x03BB8D44 BL 0x301BF90
	0x03BB8D48 ADRP X8, 0x5A5000
	0x03BB8D4C LDR X8, [X8 + 0x138]
	0x03BB8D50 LDR X0, [X8]
	0x03BB8D54 LDR W8, [X0 + 0xE0]
	0x03BB8D58 CBNZ W8, 0x3BB8D6C
	0x03BB8D5C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0x82B000
	008 Move W8, [X21+3352]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x5A6000
	016 Move X0, [X0+376]
	017 Call 0x1C17CF4
	018 Move X0, 0x5A6000
	019 Move X0, [X0+384]
	020 Call 0x1C17CF4
	021 Move X0, 0x5A6000
	022 Move X0, [X0+392]
	023 Call 0x1C17CF4
	024 Move X0, 0x5A6000
	025 Move X0, [X0+400]
	026 Call 0x1C17CF4
	027 Move X0, 0x5A6000
	028 Move X0, [X0+360]
	029 Call 0x1C17CF4
	030 Move X0, 0x5A6000
	031 Move X0, [X0+408]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3352], W8
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Compare X19, 0
	039 JumpIfEqual {109}
	040 Move W2, [X19+24]
	041 Move W8, [X19+28]
	042 Add W8, W8, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X19+24], W31
	045 Move [X19+28], W8
	046 Move X0, [X19+16]
	047 Move W1, W31
	048 Move X3, X31
	049 Call Array.Clear, X0, X1, X2
	050 Move X0, [X20+40]
	051 Compare X0, 0
	052 JumpIfEqual {127}
	053 Move X8, 0x5A6000
	054 Move X8, [X8+408]
	055 Move X21, 0x5A6000
	056 Move X22, 0x5A6000
	057 Move X20, 0x5A6000
	058 Move X1, [X8]
	059 Move X21, [X21+384]
	060 Move X22, [X22+400]
	061 Move X20, [X20+376]
	062 Add X8, X31, 8
	063 Call List`1<Object>.GetEnumerator, X0
	064 Move X1, [X21]
	065 Add X0, X31, 8
	066 Call Enumerator<Object>.MoveNext, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {97}
	071 Move X8, [X31+24]
	072 Compare X8, 0
	073 JumpIfEqual {107}
	074 Move W9, [X8+24]
	075 Compare W9, 0
	076 JumpIfEqual {64}
	077 Move W11, [X19+28]
	078 Move X9, [X19+16]
	079 Move X10, [X22]
	080 Add W11, W11, 1
	081 Move [X19+28], W11
	082 Compare X9, 0
	083 JumpIfEqual {108}
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move W12, [X9+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add W10, W11, 1
	088 Add X9, X9, X11
	089 Move [X19+24], W10
	090 Move [X9+32], X8
	091 Move X9, [X10+32]
	092 Move X9, [X9+192]
	093 Move X2, [X9+112]
	094 Move X0, X19
	095 Move X1, X8
	096 Call List`1<Object>.AddWithResize, X0, X1
	097 Move X1, [X20]
	098 Add X0, X31, 8
	099 Call Enumerator<Object>.Dispose, X0
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X30, [X31+32]
	105 Add X31, X31, 80
	106 Return 
	107 Call 0x1C17F20
	108 Call 0x1C17F20
	109 Move X0, 0x541000
	110 Move X0, [X0+1320]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X19, X0
	114 Move X0, 0x564000
	115 Move X0, [X0+2648]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Move X2, X31
	120 Call ArgumentNullException..ctor, X0, X1
	121 Move X0, 0x5A6000
	122 Move X0, [X0+416]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Call 0x1C17DEC
	127 Call 0x1C17F20
	128 Move X19, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X19
	131 Call 0x3EB2AD0
	132 Move X20, [X0]
	133 Call 0x3EB2AE0
	134 Move X8, 0x5A6000
	135 Move X8, [X8+376]
	136 Add X0, X31, 8
	137 Move X1, [X8]
	138 Call Enumerator<Object>.Dispose, X0
	139 Compare X20, 0
	140 JumpIfEqual {100}
	141 Move X0, X20
	142 Call 0x1C17F18
	143 Move X20, X31
	144 Move X19, X0
	145 Move X8, 0x5A6000
	146 Move X8, [X8+376]
	147 Move X1, [X8]
	148 Add X0, X31, 8
	149 Call Enumerator<Object>.Dispose, X0
	150 Compare X20, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X19
	153 Call 0x1D2D690
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Call 0x1991590

Method: UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator AddEvaluator(System.Type evaluatorType)

Disassembly:
	0x03BB9448 MOV X1, X31
	0x03BB944C MOV X19, X0
	0x03BB9450 BL 0x33BDD8C
	0x03BB9454 LDR X8, [X20]
	0x03BB9458 LDR X8, [X8 + 0xB8]
	0x03BB945C STR X19, [X8]
	0x03BB9460 LDP X20, X19, [X31 + 0x10]
	0x03BB9464 LDR X30, [X31], #0x20
	0x03BB9468 RET
	0x03BB946C MOV X1, X31
	0x03BB9470 B 0x33BDD8C
	0x03BB9474 STP X30, X21, [X31 - 0x20]!
	0x03BB9478 STP X20, X19, [X31 + 0x10]
	0x03BB947C ADRP X20, 0x829000
	0x03BB9480 ADRP X21, 0x5A4000
	0x03BB9484 ADRP X19, 0x5A4000
	0x03BB9488 LDRB W8, [X20 + 0xD23]
	0x03BB948C LDR X21, [X21 + 0x238]
	0x03BB9490 LDR X19, [X19 + 0x240]
	0x03BB9494 TBNZ X8, 0x0, 0x3BB94B8
	0x03BB9498 ADRP X0, 0x5A4000
	0x03BB949C LDR X0, [X0 + 0x240]
	0x03BB94A0 BL 0x1C16CF4
	0x03BB94A4 ADRP X0, 0x5A4000
	0x03BB94A8 LDR X0, [X0 + 0x238]
	0x03BB94AC BL 0x1C16CF4
	0x03BB94B0 MOVZ W8, 0x1
	0x03BB94B4 STRB W8, [X20 + 0xD23]
	0x03BB94B8 LDR X0, [X21]
	0x03BB94BC BL 0x1C16F10
	0x03BB94C0 LDR X1, [X19]
	0x03BB94C4 MOV X19, X0
	0x03BB94C8 BL 0x301B7C4
	0x03BB94CC MOV X0, X19
	0x03BB94D0 LDP X20, X19, [X31 + 0x10]
	0x03BB94D4 LDP X30, X21, [X31], #0x20
	0x03BB94D8 RET
	0x03BB94DC STR X30, [X31 - 0x20]!
	0x03BB94E0 STP X20, X19, [X31 + 0x10]
	0x03BB94E4 ADRP X20, 0x829000
	0x03BB94E8 LDRB W8, [X20 + 0xD24]
	0x03BB94EC MOV X19, X1
	0x03BB94F0 TBNZ X8, 0x0, 0x3BB9508
	0x03BB94F4 ADRP X0, 0x5A4000
	0x03BB94F8 LDR X0, [X0 + 0x168]
	0x03BB94FC BL 0x1C16CF4
	0x03BB9500 MOVZ W8, 0x1
	0x03BB9504 STRB W8, [X20 + 0xD24]
	0x03BB9508 CBZ X19, 0x3BB9544
	0x03BB950C LDP W2, W8, [X19 + 0x18]
	0x03BB9510 ADD W8, W8, 0x1
	0x03BB9514 CMP W2, 0x1
	0x03BB9518 STP W31, W8, [X19 + 0x18]
	0x03BB951C B.LT 0x3BB9538
	0x03BB9520 LDR X0, [X19 + 0x10]
	0x03BB9524 LDP X20, X19, [X31 + 0x10]
	0x03BB9528 MOV W1, W31
	0x03BB952C MOV X3, X31
	0x03BB9530 LDR X30, [X31], #0x20
	0x03BB9534 B 0x339FA34
	0x03BB9538 LDP X20, X19, [X31 + 0x10]
	0x03BB953C LDR X30, [X31], #0x20
	0x03BB9540 RET
	0x03BB9544 BL 0x1C16F20
	0x03BB9548 STR X30, [X31 - 0x10]!
	0x03BB954C MOV V2.16B, V0.16B
	0x03BB9550 MOV V0.16B, V1.16B
	0x03BB9554 MOV V1.16B, V2.16B
	0x03BB9558 BL 0x3EB1C40
	0x03BB955C ADRP X8, 0xFFFFFFFFFCF31000
	0x03BB9560 LDR V1, [X8 + 0x448]
	0x03BB9564 MOVZ W8, 0x42340000
	0x03BB9568 FMOV S2, W8
	0x03BB956C FMUL S0, S0, S1
	0x03BB9570 FABS S1, S0
	0x03BB9574 FCMP S1, S2
	0x03BB9578 B.MI 0x3BB9598
	0x03BB957C MOVZ W8, 0x43070000
	0x03BB9580 FMOV S2, W8
	0x03BB9584 FCMP S1, S2
	0x03BB9588 B.GT 0x3BB95A0
	0x03BB958C FCMP S0, 0x0
	0x03BB9590 CSET W0, LT
	0x03BB9594 B 0x3BB95A4
	0x03BB9598 MOVZ W0, 0x2
	0x03BB959C B 0x3BB95A4
	0x03BB95A0 MOVZ W0, 0x3
	0x03BB95A4 LDR X30, [X31], #0x10
	0x03BB95A8 RET
	0x03BB95AC LDR X0, [X0 + 0x20]
	0x03BB95B0 RET
	0x03BB95B4 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x82A000
	007 Move X22, 0x53B000
	008 Move W8, [X21+3353]
	009 Move X22, [X22+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5A5000
	017 Move X0, [X0+400]
	018 Call 0x1C17CF4
	019 Move X0, 0x53B000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3353], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Type.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {92}
	037 Move X0, X20
	038 Move X1, X19
	039 Call XRTargetEvaluator.CreateInstance, X0, X1
	040 Move X20, X0
	041 Compare X0, 0
	042 JumpIfEqual {84}
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {91}
	046 Move X9, 0x5A5000
	047 Move X9, [X9+400]
	048 Move W10, [X0+28]
	049 Move X8, [X0+16]
	050 Move X9, [X9]
	051 Add W10, W10, 1
	052 Move [X0+28], W10
	053 Compare X8, 0
	054 JumpIfEqual {91}
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Move W11, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add W9, W10, 1
	059 Add X8, X8, X10
	060 Move [X0+24], W9
	061 Move [X8+32], X20
	062 Move X8, [X9+32]
	063 Move X1, X20
	064 Move X8, [X8+192]
	065 Move X2, [X8+112]
	066 Call List`1<Object>.AddWithResize, X0, X1
	067 Move W8, [X19+48]
	068 Compare W8, 0
	069 JumpIfEqual {84}
	070 Move X0, X20
	071 Call XRTargetEvaluator.AwakeInternal, X0
	072 Move X0, X19
	073 Move X1, X31
	074 Call Behaviour.get_isActiveAndEnabled, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {84}
	079 Move W8, [X20+24]
	080 Compare W8, 0
	081 JumpIfEqual {84}
	082 Move X0, X20
	083 Call XRTargetEvaluator.EnableInternal, X0
	084 Move X0, X20
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Return X0
	091 Call 0x1C17F20
	092 Move X0, 0x540000
	093 Move X0, [X0+1320]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X19, X0
	097 Move X0, 0x5A5000
	098 Move X0, [X0+472]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Move X2, X31
	103 Call ArgumentNullException..ctor, X0, X1
	104 Move X0, 0x5A5000
	105 Move X0, [X0+480]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Call 0x1C17DEC

Method: T AddEvaluator()

Disassembly:
	0x022AF798 BL 0x1C16F10
	0x022AF79C MOV X1, X20
	0x022AF7A0 MOV X2, X31
	0x022AF7A4 MOV X21, X0
	0x022AF7A8 BL 0x33B2C70
	0x022AF7AC MOV X0, X21
	0x022AF7B0 MOV X1, X19
	0x022AF7B4 BL 0x1C16DEC
	0x022AF7B8 STP X30, X27, [X31 - 0x50]!
	0x022AF7BC STP X26, X25, [X31 + 0x10]
	0x022AF7C0 STP X24, X23, [X31 + 0x20]
	0x022AF7C4 STP X22, X21, [X31 + 0x30]
	0x022AF7C8 STP X20, X19, [X31 + 0x40]
	0x022AF7CC LDR X8, [X1 + 0x38]
	0x022AF7D0 MOV X19, X1
	0x022AF7D4 MOV X20, X0
	0x022AF7D8 CBNZ X8, 0x22AF8C8
	0x022AF7DC ADRP X0, 0x1E6D000
	0x022AF7E0 LDR X0, [X0 + 0xA08]
	0x022AF7E4 BL 0x1C16CF4
	0x022AF7E8 ADRP X0, 0x1E6D000
	0x022AF7EC LDR X0, [X0 + 0x698]
	0x022AF7F0 BL 0x1C16CF4
	0x022AF7F4 ADRP X0, 0x1E6D000
	0x022AF7F8 LDR X0, [X0 + 0xA10]
	0x022AF7FC BL 0x1C16CF4
	0x022AF800 ADRP X0, 0x1E6D000
	0x022AF804 LDR X0, [X0 + 0x6A0]
	0x022AF808 BL 0x1C16CF4
	0x022AF80C ADRP X0, 0x1E6D000
	0x022AF810 LDR X0, [X0 + 0x248]
	0x022AF814 BL 0x1C16CF4
	0x022AF818 ADRP X0, 0x1E6B000
	0x022AF81C LDR X0, [X0 + 0xD68]
	0x022AF820 BL 0x1C16CF4
	0x022AF824 ADRP X0, 0x1E6B000
	0x022AF828 LDR X0, [X0 + 0xD70]
	0x022AF82C BL 0x1C16CF4
	0x022AF830 ADRP X0, 0x1E44000
	0x022AF834 LDR X0, [X0 + 0xA28]
	0x022AF838 BL 0x1C16CF4
	0x022AF83C ADRP X0, 0x1E6C000
	0x022AF840 LDR X0, [X0 + 0xA78]
	0x022AF844 BL 0x1C16CF4
	0x022AF848 ADRP X0, 0x1E6B000
	0x022AF84C LDR X0, [X0 + 0xD78]
	0x022AF850 BL 0x1C16CF4
	0x022AF854 ADRP X0, 0x1E6B000
	0x022AF858 LDR X0, [X0 + 0xD80]
	0x022AF85C BL 0x1C16CF4
	0x022AF860 ADRP X0, 0x1E6B000
	0x022AF864 LDR X0, [X0 + 0xD88]
	0x022AF868 BL 0x1C16CF4
	0x022AF86C ADRP X0, 0x1E6B000
	0x022AF870 LDR X0, [X0 + 0xD90]
	0x022AF874 BL 0x1C16CF4
	0x022AF878 ADRP X0, 0x1E6C000
	0x022AF87C LDR X0, [X0 + 0xA80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {19}
	010 Move X0, 0x1E45000
	011 Move X0, [X0+1728]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X9, 0x1E45000
	020 Move X9, [X9+1728]
	021 Move X21, [X8]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Move X1, X0
	031 Move X0, X20
	032 Move X2, X31
	033 Call XRTargetFilter.AddEvaluator, X0, X1
	034 Move X8, [X19+56]
	035 Move X20, X0
	036 Move X1, [X8+8]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X0, X20
	046 Call 0x1C17E00
	047 Move X8, [X19+56]
	048 Move X20, X0
	049 Move X19, [X8+8]
	050 Move W8, [X19+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {58}
	055 Move X0, X19
	056 Call 0x1C5D684
	057 Move X19, X0
	058 Compare X20, 0
	059 JumpIfEqual {68}
	060 Move X0, X20
	061 Move X1, X19
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfNotEqual {69}
	065 Move X0, X20
	066 Move X1, X19
	067 Call 0x1C181E0
	068 Move X0, X31
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0

Method: System.Void RemoveEvaluatorAt(System.Int32 index)

Disassembly:
	0x03BB95B8 CMP X1, 0x0
	0x03BB95BC CSEL X8, X31, X0, EQ
	0x03BB95C0 CBZ X1, 0x3BB95D4
	0x03BB95C4 CBZ X8, 0x3BB961C
	0x03BB95C8 STR X1, [X8 + 0x20]
	0x03BB95CC LDP X30, X19, [X31], #0x10
	0x03BB95D0 RET
	0x03BB95D4 ADRP X0, 0x53F000
	0x03BB95D8 LDR X0, [X0 + 0x528]
	0x03BB95DC BL 0x1C16D08
	0x03BB95E0 BL 0x1C16F10
	0x03BB95E4 MOV X19, X0
	0x03BB95E8 ADRP X0, 0x544000
	0x03BB95EC LDR X0, [X0 + 0xEC8]
	0x03BB95F0 BL 0x1C16D08
	0x03BB95F4 MOV X1, X0
	0x03BB95F8 MOV X0, X19
	0x03BB95FC MOV X2, X31
	0x03BB9600 BL 0x330E100
	0x03BB9604 ADRP X0, 0x5A4000
	0x03BB9608 LDR X0, [X0 + 0x288]
	0x03BB960C BL 0x1C16D08
	0x03BB9610 MOV X1, X0
	0x03BB9614 MOV X0, X19
	0x03BB9618 BL 0x1C16DEC
	0x03BB961C BL 0x1C16F20
	0x03BB9620 B 0x3BB9624
	0x03BB9624 SUB X31, X31, 0x50
	0x03BB9628 STR X30, [X31 + 0x20]
	0x03BB962C STP X22, X21, [X31 + 0x30]
	0x03BB9630 STP X20, X19, [X31 + 0x40]
	0x03BB9634 ADRP X20, 0x829000
	0x03BB9638 LDRB W8, [X20 + 0xD25]
	0x03BB963C MOV X19, X0
	0x03BB9640 TBNZ X8, 0x0, 0x3BB9688
	0x03BB9644 ADRP X0, 0x5A4000
	0x03BB9648 LDR X0, [X0 + 0x290]
	0x03BB964C BL 0x1C16CF4
	0x03BB9650 ADRP X0, 0x5A4000
	0x03BB9654 LDR X0, [X0 + 0x298]
	0x03BB9658 BL 0x1C16CF4
	0x03BB965C ADRP X0, 0x5A4000
	0x03BB9660 LDR X0, [X0 + 0x2A0]
	0x03BB9664 BL 0x1C16CF4
	0x03BB9668 ADRP X0, 0x5A4000
	0x03BB966C LDR X0, [X0 + 0x2A8]
	0x03BB9670 BL 0x1C16CF4
	0x03BB9674 ADRP X0, 0x53A000
	0x03BB9678 LDR X0, [X0 + 0x598]
	0x03BB967C BL 0x1C16CF4
	0x03BB9680 MOVZ W8, 0x1
	0x03BB9684 STRB W8, [X20 + 0xD25]
	0x03BB9688 STP X31, X31, [X31 + 0x8]
	0x03BB968C STR X31, [X31 + 0x18]
	0x03BB9690 LDR X0, [X19 + 0x20]
	0x03BB9694 CBZ X0, 0x3BB971C
	0x03BB9698 ADRP X8, 0x5A4000
	0x03BB969C LDR X8, [X8 + 0x2A8]
	0x03BB96A0 ADRP X21, 0x5A4000
	0x03BB96A4 ADRP X22, 0x53A000
	0x03BB96A8 ADRP X20, 0x5A4000
	0x03BB96AC LDR X1, [X8]
	0x03BB96B0 LDR X21, [X21 + 0x298]
	0x03BB96B4 LDR X22, [X22 + 0x598]
	0x03BB96B8 LDR X20, [X20 + 0x290]
	0x03BB96BC ADD X8, X31, 0x8
	0x03BB96C0 BL 0x301CB58
	0x03BB96C4 LDR X1, [X21]
	0x03BB96C8 ADD X0, X31, 0x8
	0x03BB96CC BL 0x2BC4350
	0x03BB96D0 TBZ X0, 0x0, 0x3BB9710
	0x03BB96D4 LDR X0, [X22]
	0x03BB96D8 LDR X19, [X31 + 0x18]
	0x03BB96DC LDR W8, [X0 + 0xE0]
	0x03BB96E0 CBNZ W8, 0x3BB96E8
	0x03BB96E4 BL 0x1C16DFC
	0x03BB96E8 MOV X0, X19
	0x03BB96EC MOV X1, X31
	0x03BB96F0 MOV X2, X31
	0x03BB96F4 BL 0x3C354F8
	0x03BB96F8 TBZ X0, 0x0, 0x3BB96C4
	0x03BB96FC CBZ X19, 0x3BB9730
	0x03BB9700 MOV X0, X19
	0x03BB9704 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x82A000
	006 Move W8, [X21+3354]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5A5000
	014 Move X0, [X0+488]
	015 Call 0x1C17CF4
	016 Move X0, 0x5A5000
	017 Move X0, [X0+336]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3354], W8
	021 Move W8, [X20+49]
	022 Compare W8, 0
	023 JumpIfNotEqual {73}
	024 Move X0, [X20+40]
	025 Compare X0, 0
	026 JumpIfEqual {72}
	027 Move X8, 0x5A5000
	028 Move X8, [X8+336]
	029 Move W1, W19
	030 Move X2, [X8]
	031 Call List`1<Object>.get_Item, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {59}
	034 Move W8, [X20+48]
	035 Compare W8, 0
	036 JumpIfEqual {59}
	037 Move X21, X0
	038 Move X0, X20
	039 Move X1, X31
	040 Call Behaviour.get_isActiveAndEnabled, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {57}
	045 Move W8, [X21+24]
	046 Compare W8, 0
	047 JumpIfEqual {57}
	048 Move W8, [X21+41]
	049 Compare W8, 0
	050 JumpIfEqual {57}
	051 Move X8, [X21]
	052 Move [X21+41], W31
	053 Move X0, X21
	054 Move X9, [X8+440]
	055 Move X1, [X8+448]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, X21
	058 Call XRTargetEvaluator.DisposeInternal, X0
	059 Move X0, [X20+40]
	060 Compare X0, 0
	061 JumpIfEqual {72}
	062 Move X8, 0x5A5000
	063 Move X8, [X8+488]
	064 Move W1, W19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X2, [X8]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Call List`1<Object>.RemoveAt, X0, X1
	071 Return 
	072 Call 0x1C17F20
	073 Move X0, X20
	074 Move X1, X31
	075 Call Object.get_name, X0
	076 Move X19, X0
	077 Move X0, 0x5A5000
	078 Move X0, [X0+296]
	079 Call 0x1C17D08
	080 Move X20, X0
	081 Move X0, 0x5A5000
	082 Move X0, [X0+256]
	083 Call 0x1C17D08
	084 Move X2, X0
	085 Move X0, X20
	086 Move X1, X19
	087 Move X3, X31
	088 Call String.Concat, X0, X1, X2
	089 Move X19, X0
	090 Move X0, 0x53B000
	091 Move X0, [X0+1456]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X1, X19
	095 Move X2, X31
	096 Move X20, X0
	097 Call InvalidOperationException..ctor, X0, X1
	098 Move X0, 0x5A5000
	099 Move X0, [X0+496]
	100 Call 0x1C17D08
	101 Move X1, X0
	102 Move X0, X20
	103 Call 0x1C17DEC

Method: System.Void RemoveEvaluator(UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator evaluator)

Disassembly:
	0x03BB7FCC MOV X19, X0
	0x03BB7FD0 TBNZ X8, 0x0, 0x3BB7FE8
	0x03BB7FD4 ADRP X0, 0x5A6000
	0x03BB7FD8 LDR X0, [X0 + 0x1A8]
	0x03BB7FDC BL 0x1C16CF4
	0x03BB7FE0 MOVZ W8, 0x1
	0x03BB7FE4 STRB W8, [X20 + 0xD0F]
	0x03BB7FE8 LDR X1, [X21]
	0x03BB7FEC MOV X0, X19
	0x03BB7FF0 BL 0x22AE798
	0x03BB7FF4 CBZ X0, 0x3BB800C
	0x03BB7FF8 LDR X8, [X0]
	0x03BB7FFC LDP X20, X19, [X31 + 0x10]
	0x03BB8000 LDP X2, X1, [X8 + 0x1C8]
	0x03BB8004 LDP X30, X21, [X31], #0x20
	0x03BB8008 BR X2
	0x03BB800C BL 0x1C16F20
	0x03BB8010 STP X30, X21, [X31 - 0x20]!
	0x03BB8014 STP X20, X19, [X31 + 0x10]
	0x03BB8018 ADRP X21, 0x82A000
	0x03BB801C LDRB W8, [X21 + 0xD12]
	0x03BB8020 MOV X19, X1
	0x03BB8024 MOV X20, X0
	0x03BB8028 TBNZ X8, 0x0, 0x3BB804C
	0x03BB802C ADRP X0, 0x5A5000
	0x03BB8030 LDR X0, [X0 + 0x1B0]
	0x03BB8034 BL 0x1C16CF4
	0x03BB8038 ADRP X0, 0x5A5000
	0x03BB803C LDR X0, [X0 + 0x1B8]
	0x03BB8040 BL 0x1C16CF4
	0x03BB8044 MOVZ W8, 0x1
	0x03BB8048 STRB W8, [X21 + 0xD12]
	0x03BB804C CBZ X19, 0x3BB8094
	0x03BB8050 LDP W2, W8, [X19 + 0x18]
	0x03BB8054 ADRP X21, 0x5A5000
	0x03BB8058 LDR X21, [X21 + 0x1B0]
	0x03BB805C ADD W8, W8, 0x1
	0x03BB8060 CMP W2, 0x1
	0x03BB8064 STP W31, W8, [X19 + 0x18]
	0x03BB8068 B.LT 0x3BB807C
	0x03BB806C LDR X0, [X19 + 0x10]
	0x03BB8070 MOV W1, W31
	0x03BB8074 MOV X3, X31
	0x03BB8078 BL 0x339FA34
	0x03BB807C LDR X1, [X20 + 0x20]
	0x03BB8080 LDR X2, [X21]
	0x03BB8084 MOV X0, X19
	0x03BB8088 LDP X20, X19, [X31 + 0x10]
	0x03BB808C LDP X30, X21, [X31], #0x20
	0x03BB8090 B 0x301C194
	0x03BB8094 ADRP X0, 0x540000
	0x03BB8098 LDR X0, [X0 + 0x528]
	0x03BB809C BL 0x1C16D08
	0x03BB80A0 BL 0x1C16F10
	0x03BB80A4 MOV X19, X0
	0x03BB80A8 ADRP X0, 0x563000
	0x03BB80AC LDR X0, [X0 + 0xA58]
	0x03BB80B0 BL 0x1C16D08
	0x03BB80B4 MOV X1, X0
	0x03BB80B8 MOV X0, X19
	0x03BB80BC MOV X2, X31
	0x03BB80C0 BL 0x330E100

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x82C000
	006 Move W8, [X21+3355]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5A7000
	014 Move X0, [X0+288]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3355], W8
	018 Move W8, [X19+49]
	019 Compare W8, 0
	020 JumpIfNotEqual {46}
	021 Move X0, [X19+40]
	022 Compare X0, 0
	023 JumpIfEqual {77}
	024 Move X8, 0x5A6000
	025 Move X8, [X8+288]
	026 Move X1, X20
	027 Move X2, [X8]
	028 Call List`1<Object>.IndexOf, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {41}
	033 Move W1, W0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call XRTargetFilter.RemoveEvaluatorAt, X0, X1
	040 Return 
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object.get_name, X0
	049 Move X19, X0
	050 Move X0, 0x5A6000
	051 Move X0, [X0+296]
	052 Call 0x1C17D08
	053 Move X20, X0
	054 Move X0, 0x5A6000
	055 Move X0, [X0+256]
	056 Call 0x1C17D08
	057 Move X2, X0
	058 Move X0, X20
	059 Move X1, X19
	060 Move X3, X31
	061 Call String.Concat, X0, X1, X2
	062 Move X19, X0
	063 Move X0, 0x53C000
	064 Move X0, [X0+1456]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X31
	069 Move X20, X0
	070 Call InvalidOperationException..ctor, X0, X1
	071 Move X0, 0x5A6000
	072 Move X0, [X0+304]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC
	077 Call 0x1C17F20

Method: System.Void MoveEvaluatorTo(UnityEngine.XR.Interaction.Toolkit.Filtering.XRTargetEvaluator evaluator, System.Int32 newIndex)

Disassembly:
	0x03BB9708 BL 0x373816C
	0x03BB970C B 0x3BB96C4
	0x03BB9710 LDR X1, [X20]
	0x03BB9714 ADD X0, X31, 0x8
	0x03BB9718 BL 0x2BC434C
	0x03BB971C LDP X20, X19, [X31 + 0x40]
	0x03BB9720 LDP X22, X21, [X31 + 0x30]
	0x03BB9724 LDR X30, [X31 + 0x20]
	0x03BB9728 ADD X31, X31, 0x50
	0x03BB972C RET
	0x03BB9730 BL 0x1C16F20
	0x03BB9734 B 0x3BB9744
	0x03BB9738 B 0x3BB9744
	0x03BB973C B 0x3BB9744
	0x03BB9740 B 0x3BB9744
	0x03BB9744 MOV X19, X0
	0x03BB9748 CMP W1, 0x1
	0x03BB974C B.NE 0x3BB9780
	0x03BB9750 MOV X0, X19
	0x03BB9754 BL 0x3EB1AD0
	0x03BB9758 LDR X20, [X0]
	0x03BB975C BL 0x3EB1AE0
	0x03BB9760 ADRP X8, 0x5A4000
	0x03BB9764 LDR X8, [X8 + 0x290]
	0x03BB9768 ADD X0, X31, 0x8
	0x03BB976C LDR X1, [X8]
	0x03BB9770 BL 0x2BC434C
	0x03BB9774 CBZ X20, 0x3BB971C
	0x03BB9778 MOV X0, X20
	0x03BB977C BL 0x1C16F18
	0x03BB9780 MOV X20, X31
	0x03BB9784 B 0x3BB978C
	0x03BB9788 MOV X19, X0
	0x03BB978C ADRP X8, 0x5A4000
	0x03BB9790 LDR X8, [X8 + 0x290]
	0x03BB9794 LDR X1, [X8]
	0x03BB9798 ADD X0, X31, 0x8
	0x03BB979C BL 0x2BC434C
	0x03BB97A0 CBNZ X20, 0x3BB97AC
	0x03BB97A4 MOV X0, X19
	0x03BB97A8 BL 0x1D2C690
	0x03BB97AC MOV X0, X20
	0x03BB97B0 BL 0x1C16F18
	0x03BB97B4 BL 0x1990590
	0x03BB97B8 B 0x3BB97BC
	0x03BB97BC SUB X31, X31, 0x50
	0x03BB97C0 STR X30, [X31 + 0x20]
	0x03BB97C4 STP X22, X21, [X31 + 0x30]
	0x03BB97C8 STP X20, X19, [X31 + 0x40]
	0x03BB97CC ADRP X20, 0x829000
	0x03BB97D0 LDRB W8, [X20 + 0xD26]
	0x03BB97D4 MOV X19, X0
	0x03BB97D8 TBNZ X8, 0x0, 0x3BB9820

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x82A000
	007 Move W8, [X22+3356]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5A5000
	016 Move X0, [X0+288]
	017 Call 0x1C17CF4
	018 Move X0, 0x5A5000
	019 Move X0, [X0+504]
	020 Call 0x1C17CF4
	021 Move X0, 0x5A5000
	022 Move X0, [X0+488]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3356], W8
	026 Move X0, [X21+40]
	027 Compare X0, 0
	028 JumpIfEqual {68}
	029 Move X8, 0x5A5000
	030 Move X8, [X8+288]
	031 Move X1, X19
	032 Move X2, [X8]
	033 Call List`1<Object>.IndexOf, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {62}
	038 Move W1, W0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X21+40]
	041 Compare X0, 0
	042 JumpIfEqual {68}
	043 Move X8, 0x5A5000
	044 Move X8, [X8+488]
	045 Move X2, [X8]
	046 Call List`1<Object>.RemoveAt, X0, X1
	047 Move X0, [X21+40]
	048 Compare X0, 0
	049 JumpIfEqual {68}
	050 Move X8, 0x5A5000
	051 Move X8, [X8+504]
	052 Move W1, W20
	053 Move X2, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X3, [X8]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Call List`1<Object>.Insert, X0, X1, X2
	061 Return 
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 
	068 Call 0x1C17F20

Method: System.Void Link(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03BB97DC ADRP X0, 0x5A4000
	0x03BB97E0 LDR X0, [X0 + 0x290]
	0x03BB97E4 BL 0x1C16CF4
	0x03BB97E8 ADRP X0, 0x5A4000
	0x03BB97EC LDR X0, [X0 + 0x298]
	0x03BB97F0 BL 0x1C16CF4
	0x03BB97F4 ADRP X0, 0x5A4000
	0x03BB97F8 LDR X0, [X0 + 0x2A0]
	0x03BB97FC BL 0x1C16CF4
	0x03BB9800 ADRP X0, 0x5A4000
	0x03BB9804 LDR X0, [X0 + 0x2A8]
	0x03BB9808 BL 0x1C16CF4
	0x03BB980C ADRP X0, 0x53A000
	0x03BB9810 LDR X0, [X0 + 0x598]
	0x03BB9814 BL 0x1C16CF4
	0x03BB9818 MOVZ W8, 0x1
	0x03BB981C STRB W8, [X20 + 0xD26]
	0x03BB9820 STP X31, X31, [X31 + 0x8]
	0x03BB9824 STR X31, [X31 + 0x18]
	0x03BB9828 LDR X0, [X19 + 0x20]
	0x03BB982C CBZ X0, 0x3BB98B4
	0x03BB9830 ADRP X8, 0x5A4000
	0x03BB9834 LDR X8, [X8 + 0x2A8]
	0x03BB9838 ADRP X21, 0x5A4000
	0x03BB983C ADRP X22, 0x53A000
	0x03BB9840 ADRP X20, 0x5A4000
	0x03BB9844 LDR X1, [X8]
	0x03BB9848 LDR X21, [X21 + 0x298]
	0x03BB984C LDR X22, [X22 + 0x598]
	0x03BB9850 LDR X20, [X20 + 0x290]
	0x03BB9854 ADD X8, X31, 0x8
	0x03BB9858 BL 0x301CB58
	0x03BB985C LDR X1, [X21]
	0x03BB9860 ADD X0, X31, 0x8
	0x03BB9864 BL 0x2BC4350
	0x03BB9868 TBZ X0, 0x0, 0x3BB98A8
	0x03BB986C LDR X0, [X22]
	0x03BB9870 LDR X19, [X31 + 0x18]
	0x03BB9874 LDR W8, [X0 + 0xE0]
	0x03BB9878 CBNZ W8, 0x3BB9880
	0x03BB987C BL 0x1C16DFC
	0x03BB9880 MOV X0, X19
	0x03BB9884 MOV X1, X31
	0x03BB9888 MOV X2, X31
	0x03BB988C BL 0x3C354F8
	0x03BB9890 TBZ X0, 0x0, 0x3BB985C
	0x03BB9894 CBZ X19, 0x3BB98C8
	0x03BB9898 MOV X0, X19
	0x03BB989C MOV X1, X31
	0x03BB98A0 BL 0x3738318
	0x03BB98A4 B 0x3BB985C
	0x03BB98A8 LDR X1, [X20]
	0x03BB98AC ADD X0, X31, 0x8
	0x03BB98B0 BL 0x2BC434C
	0x03BB98B4 LDP X20, X19, [X31 + 0x40]
	0x03BB98B8 LDP X22, X21, [X31 + 0x30]
	0x03BB98BC LDR X30, [X31 + 0x20]
	0x03BB98C0 ADD X31, X31, 0x50
	0x03BB98C4 RET
	0x03BB98C8 BL 0x1C16F20
	0x03BB98CC B 0x3BB98DC
	0x03BB98D0 B 0x3BB98DC
	0x03BB98D4 B 0x3BB98DC
	0x03BB98D8 B 0x3BB98DC
	0x03BB98DC MOV X19, X0
	0x03BB98E0 CMP W1, 0x1
	0x03BB98E4 B.NE 0x3BB9918
	0x03BB98E8 MOV X0, X19
	0x03BB98EC BL 0x3EB1AD0
	0x03BB98F0 LDR X20, [X0]
	0x03BB98F4 BL 0x3EB1AE0
	0x03BB98F8 ADRP X8, 0x5A4000
	0x03BB98FC LDR X8, [X8 + 0x290]
	0x03BB9900 ADD X0, X31, 0x8
	0x03BB9904 LDR X1, [X8]
	0x03BB9908 BL 0x2BC434C
	0x03BB990C CBZ X20, 0x3BB98B4
	0x03BB9910 MOV X0, X20
	0x03BB9914 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x82A000
	006 Move W8, [X21+3357]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x5A4000
	014 Move X0, [X0+1008]
	015 Call 0x1C17CF4
	016 Move X0, 0x5A5000
	017 Move X0, [X0+512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3357], W8
	021 Compare X19, 0
	022 JumpIfEqual {77}
	023 Move X0, [X20+32]
	024 Compare X0, 0
	025 JumpIfEqual {76}
	026 Move X8, 0x5A5000
	027 Move X8, [X8+512]
	028 Move X1, X19
	029 Move X2, [X8]
	030 Call List`1<Object>.Contains, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {71}
	035 Move X0, [X20+32]
	036 Compare X0, 0
	037 JumpIfEqual {76}
	038 Move X9, 0x5A4000
	039 Move X9, [X9+1008]
	040 Move W10, [X0+28]
	041 Move X8, [X0+16]
	042 Move X9, [X9]
	043 Add W10, W10, 1
	044 Move [X0+28], W10
	045 Compare X8, 0
	046 JumpIfEqual {76}
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Move W11, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add W9, W10, 1
	051 Add X8, X8, X10
	052 Move [X0+24], W9
	053 Move [X8+32], X19
	054 Move X8, [X9+32]
	055 Move X1, X19
	056 Move X8, [X8+192]
	057 Move X2, [X8+112]
	058 Call List`1<Object>.AddWithResize, X0, X1
	059 Move X8, [X20+56]
	060 Compare X8, 0
	061 JumpIfEqual {71}
	062 Move X3, [X8+24]
	063 Move X0, [X8+64]
	064 Move X2, [X8+40]
	065 Move X1, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 CallNoReturn X3
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return 
	076 Call 0x1C17F20
	077 Move X0, 0x540000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0x5A4000
	083 Move X0, [X0+1040]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call ArgumentNullException..ctor, X0, X1
	089 Move X0, 0x5A5000
	090 Move X0, [X0+520]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC

Method: System.Void Unlink(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03BB9918 MOV X20, X31
	0x03BB991C B 0x3BB9924
	0x03BB9920 MOV X19, X0
	0x03BB9924 ADRP X8, 0x5A4000
	0x03BB9928 LDR X8, [X8 + 0x290]
	0x03BB992C LDR X1, [X8]
	0x03BB9930 ADD X0, X31, 0x8
	0x03BB9934 BL 0x2BC434C
	0x03BB9938 CBNZ X20, 0x3BB9944
	0x03BB993C MOV X0, X19
	0x03BB9940 BL 0x1D2C690
	0x03BB9944 MOV X0, X20
	0x03BB9948 BL 0x1C16F18
	0x03BB994C BL 0x1990590
	0x03BB9950 MOV X1, X31
	0x03BB9954 B 0x3C36C30
	0x03BB9958 STP X30, X21, [X31 - 0x20]!
	0x03BB995C STP X20, X19, [X31 + 0x10]
	0x03BB9960 ADRP X21, 0x829000
	0x03BB9964 ADRP X20, 0x53A000
	0x03BB9968 LDRB W8, [X21 + 0xD27]
	0x03BB996C LDR X20, [X20 + 0x598]
	0x03BB9970 MOV X19, X0
	0x03BB9974 TBNZ X8, 0x0, 0x3BB998C
	0x03BB9978 ADRP X0, 0x53A000
	0x03BB997C LDR X0, [X0 + 0x598]
	0x03BB9980 BL 0x1C16CF4
	0x03BB9984 MOVZ W8, 0x1
	0x03BB9988 STRB W8, [X21 + 0xD27]
	0x03BB998C MOV X0, X19
	0x03BB9990 MOV X1, X31
	0x03BB9994 BL 0x3745260
	0x03BB9998 LDR X8, [X20]
	0x03BB999C MOV X20, X0
	0x03BB99A0 LDR W9, [X8 + 0xE0]
	0x03BB99A4 CBNZ W9, 0x3BB99B0
	0x03BB99A8 MOV X0, X8
	0x03BB99AC BL 0x1C16DFC
	0x03BB99B0 MOV X0, X20
	0x03BB99B4 MOV X1, X31
	0x03BB99B8 MOV X2, X31
	0x03BB99BC BL 0x3C354F8
	0x03BB99C0 TBNZ X0, 0x0, 0x3BB99E4
	0x03BB99C4 MOV X0, X19
	0x03BB99C8 MOV X1, X31
	0x03BB99CC BL 0x3745120
	0x03BB99D0 CBZ X0, 0x3BB99E4
	0x03BB99D4 LDP X20, X19, [X31 + 0x10]
	0x03BB99D8 MOV X1, X31
	0x03BB99DC LDP X30, X21, [X31], #0x20
	0x03BB99E0 B 0x37350C8
	0x03BB99E4 LDP X20, X19, [X31 + 0x10]
	0x03BB99E8 LDP X30, X21, [X31], #0x20
	0x03BB99EC RET
	0x03BB99F0 STP X30, X21, [X31 - 0x20]!
	0x03BB99F4 STP X20, X19, [X31 + 0x10]
	0x03BB99F8 ADRP X21, 0x829000
	0x03BB99FC ADRP X20, 0x53A000
	0x03BB9A00 LDRB W8, [X21 + 0xD28]
	0x03BB9A04 LDR X20, [X20 + 0x598]
	0x03BB9A08 MOV X19, X0
	0x03BB9A0C TBNZ X8, 0x0, 0x3BB9A24
	0x03BB9A10 ADRP X0, 0x53A000
	0x03BB9A14 LDR X0, [X0 + 0x598]
	0x03BB9A18 BL 0x1C16CF4
	0x03BB9A1C MOVZ W8, 0x1
	0x03BB9A20 STRB W8, [X21 + 0xD28]
	0x03BB9A24 MOV X0, X19
	0x03BB9A28 MOV X1, X31
	0x03BB9A2C BL 0x3745260
	0x03BB9A30 LDR X8, [X20]
	0x03BB9A34 MOV X20, X0
	0x03BB9A38 LDR W9, [X8 + 0xE0]
	0x03BB9A3C CBNZ W9, 0x3BB9A48
	0x03BB9A40 MOV X0, X8
	0x03BB9A44 BL 0x1C16DFC
	0x03BB9A48 MOV X0, X20
	0x03BB9A4C MOV X1, X31
	0x03BB9A50 MOV X2, X31
	0x03BB9A54 BL 0x3C354F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x82A000
	006 Move W8, [X21+3358]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5A4000
	014 Move X0, [X0+1128]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3358], W8
	018 Compare X19, 0
	019 JumpIfEqual {52}
	020 Move W8, [X20+49]
	021 Compare W8, 0
	022 JumpIfNotEqual {70}
	023 Move X0, [X20+32]
	024 Compare X0, 0
	025 JumpIfEqual {96}
	026 Move X8, 0x5A4000
	027 Move X8, [X8+1128]
	028 Move X1, X19
	029 Move X2, [X8]
	030 Call List`1<Object>.Remove, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {47}
	035 Move X8, [X20+64]
	036 Compare X8, 0
	037 JumpIfEqual {47}
	038 Move X3, [X8+24]
	039 Move X0, [X8+64]
	040 Move X2, [X8+40]
	041 Move X1, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 CallNoReturn X3
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Move X0, 0x540000
	053 Move X0, [X0+1320]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0x5A4000
	058 Move X0, [X0+1040]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call ArgumentNullException..ctor, X0, X1
	064 Move X0, 0x5A5000
	065 Move X0, [X0+528]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC
	070 Move X0, X20
	071 Move X1, X31
	072 Call Object.get_name, X0
	073 Move X20, X0
	074 Move X0, 0x5A5000
	075 Move X0, [X0+536]
	076 Call 0x1C17D08
	077 Move X1, X19
	078 Move X2, X20
	079 Move X3, X31
	080 Call String.Format, X0, X1, X2
	081 Move X19, X0
	082 Move X0, 0x53B000
	083 Move X0, [X0+1456]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X1, X19
	087 Move X2, X31
	088 Move X20, X0
	089 Call InvalidOperationException..ctor, X0, X1
	090 Move X0, 0x5A5000
	091 Move X0, [X0+528]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Call 0x1C17DEC
	096 Call 0x1C17F20

Method: System.Void Process(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> targets, System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> results)

Disassembly:
	0x03BB9A58 TBNZ X0, 0x0, 0x3BB9A7C
	0x03BB9A5C MOV X0, X19
	0x03BB9A60 MOV X1, X31
	0x03BB9A64 BL 0x3745120
	0x03BB9A68 CBZ X0, 0x3BB9A7C
	0x03BB9A6C LDP X20, X19, [X31 + 0x10]
	0x03BB9A70 MOV X1, X31
	0x03BB9A74 LDP X30, X21, [X31], #0x20
	0x03BB9A78 B 0x3735150
	0x03BB9A7C LDP X20, X19, [X31 + 0x10]
	0x03BB9A80 LDP X30, X21, [X31], #0x20
	0x03BB9A84 RET
	0x03BB9A88 LDR X0, [X0 + 0x28]
	0x03BB9A8C RET
	0x03BB9A90 STP X30, X21, [X31 - 0x20]!
	0x03BB9A94 STP X20, X19, [X31 + 0x10]
	0x03BB9A98 ADRP X21, 0x829000
	0x03BB9A9C LDRB W8, [X21 + 0xD29]
	0x03BB9AA0 MOV X19, X1
	0x03BB9AA4 MOV X20, X0
	0x03BB9AA8 TBNZ X8, 0x0, 0x3BB9AC0
	0x03BB9AAC ADRP X0, 0x53A000
	0x03BB9AB0 LDR X0, [X0 + 0x598]
	0x03BB9AB4 BL 0x1C16CF4
	0x03BB9AB8 MOVZ W8, 0x1
	0x03BB9ABC STRB W8, [X21 + 0xD29]
	0x03BB9AC0 CBZ X19, 0x3BB9AE4
	0x03BB9AC4 ADRP X8, 0x53A000
	0x03BB9AC8 LDR X8, [X8 + 0x598]
	0x03BB9ACC LDR X9, [X19]
	0x03BB9AD0 LDR X8, [X8]
	0x03BB9AD4 LDRB W11, [X9 + 0x130]
	0x03BB9AD8 LDRB W10, [X8 + 0x130]
	0x03BB9ADC CMP W11, W10
	0x03BB9AE0 B.CS 0x3BB9AEC
	0x03BB9AE4 MOV X8, X31
	0x03BB9AE8 B 0x3BB9B00
	0x03BB9AEC LDR X9, [X9 + 0xC8]
	0x03BB9AF0 ADD X9, X9, X10, 0x3, LSL
	0x03BB9AF4 LDUR X9, [X9 - 0x8]
	0x03BB9AF8 CMP X9, X8
	0x03BB9AFC CSEL X8, X19, X31, EQ
	0x03BB9B00 STP X8, X19, [X20 + 0x20]
	0x03BB9B04 LDP X20, X19, [X31 + 0x10]
	0x03BB9B08 LDP X30, X21, [X31], #0x20
	0x03BB9B0C RET
	0x03BB9B10 LDR V0, [X0 + 0x30]
	0x03BB9B14 RET
	0x03BB9B18 FMOV S1, 1
	0x03BB9B1C FCMP S0, 0x0
	0x03BB9B20 FMIN S0, S0, S1
	0x03BB9B24 FMOV S1, W31
	0x03BB9B28 FCSEL S0, S0, S1, PL
	0x03BB9B2C STR S0, [X0 + 0x30]
	0x03BB9B30 RET
	0x03BB9B34 LDR V0, [X0 + 0x34]
	0x03BB9B38 RET
	0x03BB9B3C FMOV S1, 30
	0x03BB9B40 FCMP S0, 0x0
	0x03BB9B44 FMIN S0, S0, S1
	0x03BB9B48 FMOV S1, W31
	0x03BB9B4C FCSEL S0, S0, S1, PL
	0x03BB9B50 STR S0, [X0 + 0x34]
	0x03BB9B54 RET
	0x03BB9B58 LDR V0, [X0 + 0x38]
	0x03BB9B5C RET
	0x03BB9B60 STR S0, [X0 + 0x38]
	0x03BB9B64 RET
	0x03BB9B68 STR X30, [X31 - 0x30]!
	0x03BB9B6C STP X22, X21, [X31 + 0x10]
	0x03BB9B70 STP X20, X19, [X31 + 0x20]
	0x03BB9B74 ADRP X20, 0x829000
	0x03BB9B78 LDRB W8, [X20 + 0xD2A]
	0x03BB9B7C MOV X19, X0
	0x03BB9B80 TBNZ X8, 0x0, 0x3BB9BB0
	0x03BB9B84 ADRP X0, 0x53A000
	0x03BB9B88 LDR X0, [X0 + 0xA28]
	0x03BB9B8C BL 0x1C16CF4
	0x03BB9B90 ADRP X0, 0x5A2000
	0x03BB9B94 LDR X0, [X0 + 0x200]
	0x03BB9B98 BL 0x1C16CF4
	0x03BB9B9C ADRP X0, 0x5A4000
	0x03BB9BA0 LDR X0, [X0 + 0x2B0]
	0x03BB9BA4 BL 0x1C16CF4
	0x03BB9BA8 MOVZ W8, 0x1
	0x03BB9BAC STRB W8, [X20 + 0xD2A]
	0x03BB9BB0 ADRP X21, 0x53A000
	0x03BB9BB4 LDR X8, [X19 + 0x28]
	0x03BB9BB8 LDR X21, [X21 + 0xA28]
	0x03BB9BBC CBNZ X8, 0x3BB9BE8
	0x03BB9BC0 ADRP X22, 0x5A2000
	0x03BB9BC4 LDR X20, [X19 + 0x20]
	0x03BB9BC8 LDR X22, [X22 + 0x200]
	0x03BB9BCC MOV X0, X20
	0x03BB9BD0 LDR X1, [X22]
	0x03BB9BD4 BL 0x1C16E00
	0x03BB9BD8 STR X0, [X19 + 0x28]
	0x03BB9BDC LDR X1, [X22]
	0x03BB9BE0 MOV X0, X20
	0x03BB9BE4 BL 0x1C16E00
	0x03BB9BE8 LDR X0, [X21]
	0x03BB9BEC ADRP X20, 0x5A4000
	0x03BB9BF0 LDR W8, [X0 + 0xE0]
	0x03BB9BF4 LDR X20, [X20 + 0x2B0]
	0x03BB9BF8 CBNZ W8, 0x3BB9C00
	0x03BB9BFC BL 0x1C16DFC
	0x03BB9C00 LDR X0, [X20]
	0x03BB9C04 MOV X1, X19
	0x03BB9C08 MOV X2, X31
	0x03BB9C0C BL 0x3C06B0C
	0x03BB9C10 MOV X0, X19
	0x03BB9C14 LDP X20, X19, [X31 + 0x20]
	0x03BB9C18 LDP X22, X21, [X31 + 0x10]
	0x03BB9C1C MOV W1, W31
	0x03BB9C20 MOV X2, X31
	0x03BB9C24 LDR X30, [X31], #0x30
	0x03BB9C28 B 0x3C32410
	0x03BB9C2C STP X30, X21, [X31 - 0x20]!
	0x03BB9C30 STP X20, X19, [X31 + 0x10]
	0x03BB9C34 ADRP X20, 0x829000
	0x03BB9C38 LDRB W8, [X20 + 0xD2B]
	0x03BB9C3C MOV X19, X0
	0x03BB9C40 TBNZ X8, 0x0, 0x3BB9C58
	0x03BB9C44 ADRP X0, 0x5A2000
	0x03BB9C48 LDR X0, [X0 + 0x200]
	0x03BB9C4C BL 0x1C16CF4
	0x03BB9C50 MOVZ W8, 0x1
	0x03BB9C54 STRB W8, [X20 + 0xD2B]
	0x03BB9C58 LDR X8, [X19 + 0x28]
	0x03BB9C5C CBZ X8, 0x3BB9C6C
	0x03BB9C60 LDP X20, X19, [X31 + 0x10]
	0x03BB9C64 LDP X30, X21, [X31], #0x20
	0x03BB9C68 RET
	0x03BB9C6C ADRP X21, 0x5A2000
	0x03BB9C70 LDR X20, [X19 + 0x20]
	0x03BB9C74 LDR X21, [X21 + 0x200]
	0x03BB9C78 MOV X0, X20
	0x03BB9C7C LDR X1, [X21]
	0x03BB9C80 BL 0x1C16E00
	0x03BB9C84 STR X0, [X19 + 0x28]
	0x03BB9C88 LDR X1, [X21]
	0x03BB9C8C MOV X0, X20
	0x03BB9C90 LDP X20, X19, [X31 + 0x10]
	0x03BB9C94 LDP X30, X21, [X31], #0x20
	0x03BB9C98 B 0x1C16E00
	0x03BB9C9C RET
	0x03BB9CA0 RET
	0x03BB9CA4 ADRP X8, 0xFFFFFFFFFCF35000
	0x03BB9CA8 LDR V0, [X8 + 0x2A8]
	0x03BB9CAC MOVZ W8, 0xD70A
	0x03BB9CB0 MOVK W8, 0x3BA30000
	0x03BB9CB4 MOV X1, X31
	0x03BB9CB8 STR D0, [X0 + 0x30]
	0x03BB9CBC STR W8, [X0 + 0x38]
	0x03BB9CC0 B 0x3C36C30
	0x03BB9CC4 LDR X0, [X0 + 0x20]
	0x03BB9CC8 RET
	0x03BB9CCC STR X1, [X0 + 0x20]
	0x03BB9CD0 RET
	0x03BB9CD4 LDR X0, [X0 + 0x28]
	0x03BB9CD8 RET
	0x03BB9CDC STR X1, [X0 + 0x28]
	0x03BB9CE0 RET
	0x03BB9CE4 LDR X0, [X0 + 0x30]
	0x03BB9CE8 RET
	0x03BB9CEC STR X1, [X0 + 0x30]
	0x03BB9CF0 RET
	0x03BB9CF4 LDR X0, [X0 + 0x38]
	0x03BB9CF8 RET
	0x03BB9CFC STR X1, [X0 + 0x38]
	0x03BB9D00 RET
	0x03BB9D04 LDR X0, [X0 + 0x40]
	0x03BB9D08 RET
	0x03BB9D0C STR X1, [X0 + 0x40]
	0x03BB9D10 RET
	0x03BB9D14 LDR X0, [X0 + 0x48]
	0x03BB9D18 RET
	0x03BB9D1C STR X1, [X0 + 0x48]
	0x03BB9D20 RET
	0x03BB9D24 LDR X0, [X0 + 0x50]
	0x03BB9D28 RET
	0x03BB9D2C STR X1, [X0 + 0x50]
	0x03BB9D30 RET
	0x03BB9D34 LDR X0, [X0 + 0x58]
	0x03BB9D38 RET
	0x03BB9D3C STR X1, [X0 + 0x58]
	0x03BB9D40 RET
	0x03BB9D44 STR X30, [X31 - 0x20]!
	0x03BB9D48 STP X20, X19, [X31 + 0x10]
	0x03BB9D4C ADRP X20, 0x829000
	0x03BB9D50 ADRP X19, 0x5A3000
	0x03BB9D54 LDRB W8, [X20 + 0xD2C]
	0x03BB9D58 LDR X19, [X19 + 0xD80]
	0x03BB9D5C TBNZ X8, 0x0, 0x3BB9D74
	0x03BB9D60 ADRP X0, 0x5A3000
	0x03BB9D64 LDR X0, [X0 + 0xD80]
	0x03BB9D68 BL 0x1C16CF4
	0x03BB9D6C MOVZ W8, 0x1
	0x03BB9D70 STRB W8, [X20 + 0xD2C]
	0x03BB9D74 LDR X0, [X19]
	0x03BB9D78 LDR W8, [X0 + 0xE0]
	0x03BB9D7C CBNZ W8, 0x3BB9D88
	0x03BB9D80 BL 0x1C16DFC
	0x03BB9D84 LDR X0, [X19]
	0x03BB9D88 LDR X8, [X0 + 0xB8]
	0x03BB9D8C LDP X20, X19, [X31 + 0x10]
	0x03BB9D90 LDR X0, [X8]
	0x03BB9D94 LDR X30, [X31], #0x20
	0x03BB9D98 RET
	0x03BB9D9C STR X30, [X31 - 0x60]!
	0x03BB9DA0 STP X28, X27, [X31 + 0x10]
	0x03BB9DA4 STP X26, X25, [X31 + 0x20]
	0x03BB9DA8 STP X24, X23, [X31 + 0x30]
	0x03BB9DAC STP X22, X21, [X31 + 0x40]
	0x03BB9DB0 STP X20, X19, [X31 + 0x50]
	0x03BB9DB4 ADRP X20, 0x829000
	0x03BB9DB8 ADRP X21, 0x53A000
	0x03BB9DBC LDRB W8, [X20 + 0xD2D]
	0x03BB9DC0 LDR X21, [X21 + 0x598]
	0x03BB9DC4 MOV X19, X0
	0x03BB9DC8 TBNZ X8, 0x0, 0x3BB9E70
	0x03BB9DCC ADRP X0, 0x5A4000
	0x03BB9DD0 LDR X0, [X0 + 0x2B8]
	0x03BB9DD4 BL 0x1C16CF4
	0x03BB9DD8 ADRP X0, 0x5A4000
	0x03BB9DDC LDR X0, [X0 + 0x2C0]
	0x03BB9DE0 BL 0x1C16CF4
	0x03BB9DE4 ADRP X0, 0x58E000
	0x03BB9DE8 LDR X0, [X0 + 0xB88]
	0x03BB9DEC BL 0x1C16CF4
	0x03BB9DF0 ADRP X0, 0x53A000
	0x03BB9DF4 LDR X0, [X0 + 0xA28]
	0x03BB9DF8 BL 0x1C16CF4
	0x03BB9DFC ADRP X0, 0x562000
	0x03BB9E00 LDR X0, [X0 + 0x270]
	0x03BB9E04 BL 0x1C16CF4
	0x03BB9E08 ADRP X0, 0x53A000
	0x03BB9E0C LDR X0, [X0 + 0x598]
	0x03BB9E10 BL 0x1C16CF4
	0x03BB9E14 ADRP X0, 0x5A4000
	0x03BB9E18 LDR X0, [X0 + 0x2C8]
	0x03BB9E1C BL 0x1C16CF4
	0x03BB9E20 ADRP X0, 0x5A4000
	0x03BB9E24 LDR X0, [X0 + 0x2D0]
	0x03BB9E28 BL 0x1C16CF4
	0x03BB9E2C ADRP X0, 0x5A4000
	0x03BB9E30 LDR X0, [X0 + 0x2D8]
	0x03BB9E34 BL 0x1C16CF4
	0x03BB9E38 ADRP X0, 0x5A4000
	0x03BB9E3C LDR X0, [X0 + 0x2E0]
	0x03BB9E40 BL 0x1C16CF4
	0x03BB9E44 ADRP X0, 0x5A4000
	0x03BB9E48 LDR X0, [X0 + 0x2E8]
	0x03BB9E4C BL 0x1C16CF4
	0x03BB9E50 ADRP X0, 0x5A4000
	0x03BB9E54 LDR X0, [X0 + 0x2F0]
	0x03BB9E58 BL 0x1C16CF4
	0x03BB9E5C ADRP X0, 0x5A4000
	0x03BB9E60 LDR X0, [X0 + 0x2F8]
	0x03BB9E64 BL 0x1C16CF4
	0x03BB9E68 MOVZ W8, 0x1
	0x03BB9E6C STRB W8, [X20 + 0xD2D]
	0x03BB9E70 LDR X0, [X21]
	0x03BB9E74 LDR X20, [X19 + 0x20]
	0x03BB9E78 LDR W8, [X0 + 0xE0]
	0x03BB9E7C CBNZ W8, 0x3BB9E84
	0x03BB9E80 BL 0x1C16DFC
	0x03BB9E84 ADRP X23, 0x58E000
	0x03BB9E88 ADRP X26, 0x5A4000
	0x03BB9E8C ADRP X24, 0x562000
	0x03BB9E90 LDR X23, [X23 + 0xB88]
	0x03BB9E94 LDR X26, [X26 + 0x2D8]
	0x03BB9E98 LDR X24, [X24 + 0x270]
	0x03BB9E9C MOV X0, X20
	0x03BB9EA0 MOV X1, X31
	0x03BB9EA4 MOV X2, X31
	0x03BB9EA8 BL 0x3C354F8
	0x03BB9EAC TBNZ X0, 0x0, 0x3BB9ED8
	0x03BB9EB0 LDR X0, [X21]
	0x03BB9EB4 LDR X20, [X19 + 0x28]
	0x03BB9EB8 LDR W8, [X0 + 0xE0]
	0x03BB9EBC CBNZ W8, 0x3BB9EC4
	0x03BB9EC0 BL 0x1C16DFC
	0x03BB9EC4 MOV X0, X20
	0x03BB9EC8 MOV X1, X31
	0x03BB9ECC MOV X2, X31
	0x03BB9ED0 BL 0x3C354F8
	0x03BB9ED4 TBZ X0, 0x0, 0x3BB9F08
	0x03BB9ED8 ADRP X8, 0x53A000
	0x03BB9EDC LDR X8, [X8 + 0xA28]
	0x03BB9EE0 ADRP X20, 0x5A4000
	0x03BB9EE4 LDR X0, [X8]
	0x03BB9EE8 LDR W8, [X0 + 0xE0]
	0x03BB9EEC LDR X20, [X20 + 0x2F8]
	0x03BB9EF0 CBNZ W8, 0x3BB9EF8
	0x03BB9EF4 BL 0x1C16DFC
	0x03BB9EF8 LDR X0, [X20]
	0x03BB9EFC MOV X1, X19
	0x03BB9F00 MOV X2, X31
	0x03BB9F04 BL 0x3C06B0C
	0x03BB9F08 ADRP X22, 0x5A4000
	0x03BB9F0C ADRP X28, 0x5A4000
	0x03BB9F10 ADRP X27, 0x5A4000
	0x03BB9F14 LDR X22, [X22 + 0x2C0]
	0x03BB9F18 LDR X28, [X28 + 0x2E8]
	0x03BB9F1C LDR X27, [X27 + 0x2F0]
	0x03BB9F20 LDR X0, [X23]
	0x03BB9F24 ADRP X25, 0x5A4000
	0x03BB9F28 ADRP X23, 0x5A4000
	0x03BB9F2C ADRP X21, 0x5A4000
	0x03BB9F30 LDR X25, [X25 + 0x2E0]
	0x03BB9F34 LDR X23, [X23 + 0x2B8]
	0x03BB9F38 LDR X21, [X21 + 0x2C8]
	0x03BB9F3C BL 0x1C16F10
	0x03BB9F40 LDR X2, [X26]
	0x03BB9F44 MOV X1, X19
	0x03BB9F48 MOV X3, X31
	0x03BB9F4C MOV X20, X0
	0x03BB9F50 BL 0x2A769B4
	0x03BB9F54 LDR X0, [X24]
	0x03BB9F58 LDR W8, [X0 + 0xE0]
	0x03BB9F5C CBNZ W8, 0x3BB9F64
	0x03BB9F60 BL 0x1C16DFC
	0x03BB9F64 MOV X0, X20
	0x03BB9F68 MOV X1, X31
	0x03BB9F6C BL 0x376DBD4
	0x03BB9F70 LDR X0, [X22]
	0x03BB9F74 BL 0x1C16F10
	0x03BB9F78 LDR X2, [X28]
	0x03BB9F7C MOV X1, X19
	0x03BB9F80 MOV X3, X31
	0x03BB9F84 MOV X20, X0
	0x03BB9F88 BL 0x2983A0C
	0x03BB9F8C MOV X0, X20
	0x03BB9F90 MOV X1, X31
	0x03BB9F94 BL 0x3E65054
	0x03BB9F98 LDR X0, [X22]
	0x03BB9F9C BL 0x1C16F10
	0x03BB9FA0 LDR X2, [X27]
	0x03BB9FA4 MOV X1, X19
	0x03BB9FA8 MOV X3, X31
	0x03BB9FAC MOV X20, X0
	0x03BB9FB0 BL 0x2983A0C
	0x03BB9FB4 MOV X0, X20
	0x03BB9FB8 MOV X1, X31
	0x03BB9FBC BL 0x3E651F4
	0x03BB9FC0 LDR X0, [X22]
	0x03BB9FC4 BL 0x1C16F10
	0x03BB9FC8 LDR X2, [X25]
	0x03BB9FCC MOV X1, X19
	0x03BB9FD0 MOV X3, X31
	0x03BB9FD4 MOV X20, X0
	0x03BB9FD8 BL 0x2983A0C
	0x03BB9FDC MOV X0, X20
	0x03BB9FE0 MOV X1, X31
	0x03BB9FE4 BL 0x3E65394
	0x03BB9FE8 LDR X0, [X23]
	0x03BB9FEC LDR X20, [X19 + 0x60]
	0x03BB9FF0 BL 0x1C16F10
	0x03BB9FF4 LDR X2, [X21]
	0x03BB9FF8 MOV X1, X19
	0x03BB9FFC MOV X3, X31
	0x03BBA000 MOV X21, X0
	0x03BBA004 BL 0x2A6B948
	0x03BBA008 CBZ X20, 0x3BBA078
	0x03BBA00C ADRP X23, 0x5A3000
	0x03BBA010 LDR X23, [X23 + 0x2D0]
	0x03BBA014 MOV X0, X20
	0x03BBA018 MOV X1, X21
	0x03BBA01C BL 0x3BBA080
	0x03BBA020 LDR X0, [X22]
	0x03BBA024 LDR X20, [X19 + 0x68]
	0x03BBA028 BL 0x1C16F10
	0x03BBA02C LDR X2, [X23]
	0x03BBA030 MOV X1, X19
	0x03BBA034 MOV X3, X31
	0x03BBA038 MOV X21, X0
	0x03BBA03C BL 0x2983A0C
	0x03BBA040 CBZ X20, 0x3BBA078
	0x03BBA044 MOV X0, X20
	0x03BBA048 MOV X1, X21
	0x03BBA04C BL 0x3BBA130
	0x03BBA050 MOV X0, X19
	0x03BBA054 BL 0x3BBA1E0
	0x03BBA058 MOV X0, X19
	0x03BBA05C LDP X20, X19, [X31 + 0x50]
	0x03BBA060 LDP X22, X21, [X31 + 0x40]
	0x03BBA064 LDP X24, X23, [X31 + 0x30]
	0x03BBA068 LDP X26, X25, [X31 + 0x20]
	0x03BBA06C LDP X28, X27, [X31 + 0x10]
	0x03BBA070 LDR X30, [X31], #0x60
	0x03BBA074 B 0x3BBA350
	0x03BBA078 BL 0x1C16F20
	0x03BBA07C RET
	0x03BBA080 STR X30, [X31 - 0x40]!
	0x03BBA084 STP X24, X23, [X31 + 0x10]
	0x03BBA088 STP X22, X21, [X31 + 0x20]
	0x03BBA08C STP X20, X19, [X31 + 0x30]
	0x03BBA090 ADRP X21, 0x828000
	0x03BBA094 LDRB W8, [X21 + 0xD3B]
	0x03BBA098 MOV X19, X1
	0x03BBA09C MOV X20, X0
	0x03BBA0A0 TBNZ X8, 0x0, 0x3BBA0B8
	0x03BBA0A4 ADRP X0, 0x5A3000
	0x03BBA0A8 LDR X0, [X0 + 0x2B8]
	0x03BBA0AC BL 0x1C16CF4
	0x03BBA0B0 MOVZ W8, 0x1
	0x03BBA0B4 STRB W8, [X21 + 0xD3B]
	0x03BBA0B8 ADRP X24, 0x5A3000
	0x03BBA0BC LDR X21, [X20 + 0x10]!
	0x03BBA0C0 LDR X24, [X24 + 0x2B8]
	0x03BBA0C4 MOV X0, X21
	0x03BBA0C8 MOV X1, X19
	0x03BBA0CC MOV X2, X31
	0x03BBA0D0 BL 0x33C0DE4
	0x03BBA0D4 CBZ X0, 0x3BBA0F4
	0x03BBA0D8 LDR X23, [X24]
	0x03BBA0DC MOV X22, X0
	0x03BBA0E0 MOV X1, X23
	0x03BBA0E4 BL 0x1C16E00
	0x03BBA0E8 MOV X1, X0
	0x03BBA0EC CBNZ X0, 0x3BBA0F8
	0x03BBA0F0 B 0x3BBA124
	0x03BBA0F4 MOV X1, X31
	0x03BBA0F8 MOV X0, X20
	0x03BBA0FC MOV X2, X21
	0x03BBA100 BL 0x1C24138
	0x03BBA104 CMP X21, X0
	0x03BBA108 MOV X21, X0
	0x03BBA10C B.NE 0x3BBA0C4
	0x03BBA110 LDP X20, X19, [X31 + 0x30]
	0x03BBA114 LDP X22, X21, [X31 + 0x20]
	0x03BBA118 LDP X24, X23, [X31 + 0x10]
	0x03BBA11C LDR X30, [X31], #0x40
	0x03BBA120 RET
	0x03BBA124 MOV X0, X22
	0x03BBA128 MOV X1, X23
	0x03BBA12C BL 0x1C171E0
	0x03BBA130 STR X30, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+112], D8
	003 Move [X31+128], X29
	004 Move [X31+136], X30
	005 Move [X31+144], X28
	006 Move [X31+152], X27
	007 Move [X31+160], X26
	008 Move [X31+168], X25
	009 Move [X31+176], X24
	010 Move [X31+184], X23
	011 Move [X31+192], X22
	012 Move [X31+200], X21
	013 Move [X31+208], X20
	014 Move [X31+216], X19
	015 Move X19, 0x82A000
	016 Move W8, [X19+3359]
	017 Move X20, X3
	018 Move X22, X2
	019 Move X21, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {75}
	025 Move X0, 0x5A2000
	026 Move X0, [X0+3416]
	027 Call 0x1C17CF4
	028 Move X0, 0x5A2000
	029 Move X0, [X0+3424]
	030 Call 0x1C17CF4
	031 Move X0, 0x5A3000
	032 Move X0, [X0+216]
	033 Call 0x1C17CF4
	034 Move X0, 0x5A5000
	035 Move X0, [X0+376]
	036 Call 0x1C17CF4
	037 Move X0, 0x5A5000
	038 Move X0, [X0+384]
	039 Call 0x1C17CF4
	040 Move X0, 0x5A3000
	041 Move X0, [X0+224]
	042 Call 0x1C17CF4
	043 Move X0, 0x5A3000
	044 Move X0, [X0+232]
	045 Call 0x1C17CF4
	046 Move X0, 0x5A5000
	047 Move X0, [X0+392]
	048 Call 0x1C17CF4
	049 Move X0, 0x5A5000
	050 Move X0, [X0+328]
	051 Call 0x1C17CF4
	052 Move X0, 0x5A2000
	053 Move X0, [X0+3624]
	054 Call 0x1C17CF4
	055 Move X0, 0x5A2000
	056 Move X0, [X0+3584]
	057 Call 0x1C17CF4
	058 Move X0, 0x5A5000
	059 Move X0, [X0+408]
	060 Call 0x1C17CF4
	061 Move X0, 0x5A3000
	062 Move X0, [X0+240]
	063 Call 0x1C17CF4
	064 Move X0, 0x5A4000
	065 Move X0, [X0+88]
	066 Call 0x1C17CF4
	067 Move X0, 0x5A5000
	068 Move X0, [X0+344]
	069 Call 0x1C17CF4
	070 Move X0, 0x5A5000
	071 Move X0, [X0+312]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X19+3359], W8
	075 Move [X31+120], X31
	076 Move [X31+96], X31
	077 Move [X31+104], X31
	078 Move [X31+64], X31
	079 Move [X31+72], X31
	080 Move [X31+80], X31
	081 Move [X31+32], X31
	082 Move [X31+40], X31
	083 Move [X31+48], X31
	084 Move W8, [X23+49]
	085 Compare W8, 0
	086 JumpIfNotEqual {328}
	087 Move X19, 0x5A5000
	088 Move X19, [X19+312]
	089 Move W8, 1
	090 Move [X23+49], W8
	091 Move [X31], X23
	092 Compare X20, 0
	093 JumpIfEqual {359}
	094 Move W2, [X20+24]
	095 Move W8, [X20+28]
	096 Add W8, W8, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X20+24], W31
	099 Move [X20+28], W8
	100 Move X0, [X20+16]
	101 Move W1, W31
	102 Move X3, X31
	103 Call Array.Clear, X0, X1, X2
	104 Move X0, [X19]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X19]
	110 Move X8, [X0+184]
	111 Move X0, [X8]
	112 Compare X0, 0
	113 JumpIfEqual {363}
	114 Move X8, 0x5A5000
	115 Move X8, [X8+328]
	116 Move X2, [X8]
	117 Add X1, X31, 120
	118 Call 0x2EF2058, X0, X1
	119 Move X8, [X31+120]
	120 Move [X31+96], X0
	121 Move [X31+104], X1
	122 Move X0, X23
	123 Move X1, X8
	124 Call XRTargetFilter.GetEnabledEvaluators, X0, X1
	125 Compare X22, 0
	126 JumpIfEqual {364}
	127 Move X8, 0x5A3000
	128 Move X8, [X8+240]
	129 Move X1, [X8]
	130 Add X8, X31, 8
	131 Move X0, X22
	132 Call List`1<Object>.GetEnumerator, X0
	133 Move X22, 0x5A3000
	134 Move X25, 0x5A5000
	135 Move X27, 0x5A5000
	136 Move X29, 0x5A5000
	137 Move X28, 0x5A2000
	138 Move X22, [X22+224]
	139 Move X25, [X25+408]
	140 Move X27, [X27+384]
	141 Move X29, [X29+376]
	142 Move X28, [X28+3624]
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Move X8, [X31+24]
	145 Move X19, 0x5A2000
	146 Move X19, [X19+3424]
	147 Move [X31+4], V0
	148 Move [X31+80], X8
	149 Move X1, [X22]
	150 Add X0, X31, 64
	151 Call Enumerator<Object>.MoveNext, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {239}
	156 Move X0, [X31+120]
	157 Compare X0, 0
	158 JumpIfEqual {325}
	159 Move X23, [X31+80]
	160 Move X1, [X25]
	161 Add X8, X31, 8
	162 Call List`1<Object>.GetEnumerator, X0
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 Move X8, [X31+24]
	165 Move S8, 1
	166 Move [X31+2], V0
	167 Move [X31+48], X8
	168 Move X1, [X27]
	169 Add X0, X31, 32
	170 Call Enumerator<Object>.MoveNext, X0
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {183}
	175 Move X0, [X31+48]
	176 Compare X0, 0
	177 JumpIfEqual {232}
	178 Move X1, X21
	179 Move X2, X23
	180 Call XRTargetEvaluator.GetWeightedScore, X0, X1, X2
	181 Multiply S8, S8, S0
	182 NotImplemented "Instruction FCMP not yet implemented."
	183 Move X24, X31
	184 Move W26, 9
	185 Move X1, [X29]
	186 Add X0, X31, 32
	187 Call Enumerator<Object>.Dispose, X0
	188 Compare X24, 0
	189 JumpIfNotEqual {323}
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Compare W26, 0
	192 JumpIfNotEqual {241}
	193 NotImplemented "Instruction FCMP not yet implemented."
	194 Move W10, [X20+28]
	195 Move X8, [X20+16]
	196 Move X9, [X28]
	197 Add W10, W10, 1
	198 Move [X20+28], W10
	199 Compare X8, 0
	200 JumpIfEqual {326}
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Move W11, [X8+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add W9, W10, 1
	205 Add X8, X8, X10
	206 Move [X20+24], W9
	207 Move [X8+32], X23
	208 Move X8, [X9+32]
	209 Move X8, [X8+192]
	210 Move X2, [X8+112]
	211 Move X0, X20
	212 Move X1, X23
	213 Call List`1<Object>.AddWithResize, X0, X1
	214 Move X8, 0x5A5000
	215 Move X8, [X8+312]
	216 Move X0, [X8]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {224}
	220 Call 0x1C17DFC
	221 Move X8, 0x5A5000
	222 Move X8, [X8+312]
	223 Move X0, [X8]
	224 Move X8, [X0+184]
	225 Move X0, [X8+8]
	226 Compare X0, 0
	227 JumpIfEqual {327}
	228 Move X2, [X19]
	229 Move X1, X23
	230 Move V0, V8
	231 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	232 Call 0x1C17F20
	233 Move X26, X1
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Call 0x3EB2AD0
	236 Move X24, [X0]
	237 Call 0x3EB2AE0
	238 Move W26, W31
	239 Move X23, X31
	240 Move W26, 10
	241 Move X23, X31
	242 Move X8, 0x5A3000
	243 Move X8, [X8+216]
	244 Move X1, [X8]
	245 Move X22, 0x5A5000
	246 Move X22, [X22+312]
	247 Add X0, X31, 64
	248 Call Enumerator<Object>.Dispose, X0
	249 Compare X23, 0
	250 JumpIfNotEqual {367}
	251 Move X21, X31
	252 Compare W26, 0
	253 JumpIfNotEqual {256}
	254 Move W26, W31
	255 Move X21, X23
	256 Move X8, 0x5A5000
	257 Move X8, [X8+344]
	258 Move X1, [X8]
	259 Add X0, X31, 96
	260 Call 0x24A7DD0, X0
	261 Move X19, [X31]
	262 Compare X21, 0
	263 JumpIfNotEqual {365}
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Compare W26, 0
	266 JumpIfNotEqual {280}
	267 Move X0, [X22]
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {273}
	271 Call 0x1C17DFC
	272 Move X0, [X22]
	273 Move X8, [X0+184]
	274 Move X9, 0x5A4000
	275 Move X9, [X9+88]
	276 Move X1, [X8+16]
	277 Move X2, [X9]
	278 Move X0, X20
	279 Call List`1<Object>.Sort, X0, X1
	280 Move X20, X31
	281 Move [X19+49], W31
	282 Move X0, [X22]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {288}
	286 Call 0x1C17DFC
	287 Move X0, [X22]
	288 Move X8, [X0+184]
	289 Move X0, [X8+8]
	290 Compare X0, 0
	291 JumpIfEqual {360}
	292 Move X8, 0x5A2000
	293 Move X8, [X8+3416]
	294 Move X1, [X8]
	295 Call Dictionary`2<Object, Single>.Clear, X0
	296 Compare X20, 0
	297 JumpIfNotEqual {361}
	298 Move X20, [X31+208]
	299 Move X19, [X31+216]
	300 Move X22, [X31+192]
	301 Move X21, [X31+200]
	302 Move X24, [X31+176]
	303 Move X23, [X31+184]
	304 Move X26, [X31+160]
	305 Move X25, [X31+168]
	306 Move X28, [X31+144]
	307 Move X27, [X31+152]
	308 Move X29, [X31+128]
	309 Move X30, [X31+136]
	310 Move V8, [X31+112]
	311 Add X31, X31, 224
	312 Return 
	313 Move X21, X0
	314 Move X24, X31
	315 Move X1, [X29]
	316 Add X0, X31, 32
	317 Call Enumerator<Object>.Dispose, X0
	318 Move X0, X21
	319 Compare X24, 0
	320 JumpIfEqual {376}
	321 Move X0, X24
	322 Call 0x1C17F18
	323 Move X0, X24
	324 Call 0x1C17F18
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Move X0, X23
	329 Move X1, X31
	330 Call Object.get_name, X0
	331 Move X19, X0
	332 Move X0, 0x5A5000
	333 Move X0, [X0+544]
	334 Call 0x1C17D08
	335 Move X20, X0
	336 Move X0, 0x5A5000
	337 Move X0, [X0+552]
	338 Call 0x1C17D08
	339 Move X2, X0
	340 Move X0, X20
	341 Move X1, X19
	342 Move X3, X31
	343 Call String.Concat, X0, X1, X2
	344 Move X19, X0
	345 Move X0, 0x53B000
	346 Move X0, [X0+1456]
	347 Call 0x1C17D08
	348 Call 0x1C17F10
	349 Move X1, X19
	350 Move X2, X31
	351 Move X20, X0
	352 Call InvalidOperationException..ctor, X0, X1
	353 Move X0, 0x5A5000
	354 Move X0, [X0+560]
	355 Call 0x1C17D08
	356 Move X1, X0
	357 Move X0, X20
	358 Call 0x1C17DEC
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Move X0, X20
	362 Call 0x1C17F18
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Move X0, X21
	366 Call 0x1C17F18
	367 Move X0, X23
	368 Call 0x1C17F18
	369 Move X26, X1
	370 Move X21, X0
	371 Move X26, X1
	372 Move X21, X0
	373 Move X26, X1
	374 Move X21, X0
	375 Move X26, X1
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Call 0x3EB2AD0
	378 Move X23, [X0]
	379 Call 0x3EB2AE0
	380 Move W26, W31
	381 Move X21, X0
	382 Move X23, X31
	383 Move X8, 0x5A2000
	384 Move X8, [X8+216]
	385 Move X1, [X8]
	386 Add X0, X31, 64
	387 Call Enumerator<Object>.Dispose, X0
	388 Compare X23, 0
	389 JumpIfNotEqual {413}
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, X21
	392 Call 0x3EB2AD0
	393 Move X23, [X0]
	394 Call 0x3EB2AE0
	395 Move X22, 0x5A4000
	396 Move X22, [X22+312]
	397 Move X23, X31
	398 Move X8, 0x5A4000
	399 Move X8, [X8+344]
	400 Move X1, [X8]
	401 Add X0, X31, 96
	402 Call 0x24A7DD0, X0
	403 Compare X23, 0
	404 JumpIfNotEqual {416}
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move X0, X21
	407 Call 0x3EB2AD0
	408 Move X20, [X0]
	409 Call 0x3EB2AE0
	410 Move X22, 0x5A4000
	411 Move X19, [X31]
	412 Move X22, [X22+312]
	413 Move X0, X23
	414 Call 0x1C17F18
	415 Move X20, X31
	416 Move X0, X23
	417 Call 0x1C17F18
	418 Move X26, X1
	419 Move X21, X0
	420 Move X21, X0
	421 Move X8, [X31]
	422 Move [X8+49], W31
	423 Move X8, 0x5A4000
	424 Move X8, [X8+312]
	425 Move X0, [X8]
	426 Move W8, [X0+224]
	427 Compare W8, 0
	428 JumpIfNotEqual {433}
	429 Call 0x1C17DFC
	430 Move X8, 0x5A4000
	431 Move X8, [X8+312]
	432 Move X0, [X8]
	433 Move X8, [X0+184]
	434 Move X0, [X8+8]
	435 Compare X0, 0
	436 JumpIfNotEqual {438}
	437 Call 0x1C17F20
	438 Move X8, 0x5A1000
	439 Move X8, [X8+3416]
	440 Move X1, [X8]
	441 Call Dictionary`2<Object, Single>.Clear, X0
	442 Compare X20, 0
	443 JumpIfNotEqual {446}
	444 Move X0, X21
	445 Call 0x1D2D690
	446 Move X0, X20
	447 Call 0x1C17F18
	448 Move X26, X1
	449 Move X21, X0
	450 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03BBA134 STP X24, X23, [X31 + 0x10]
	0x03BBA138 STP X22, X21, [X31 + 0x20]
	0x03BBA13C STP X20, X19, [X31 + 0x30]
	0x03BBA140 ADRP X21, 0x828000
	0x03BBA144 LDRB W8, [X21 + 0xD44]
	0x03BBA148 MOV X19, X1
	0x03BBA14C MOV X20, X0
	0x03BBA150 TBNZ X8, 0x0, 0x3BBA168
	0x03BBA154 ADRP X0, 0x5A3000
	0x03BBA158 LDR X0, [X0 + 0x2C0]
	0x03BBA15C BL 0x1C16CF4
	0x03BBA160 MOVZ W8, 0x1
	0x03BBA164 STRB W8, [X21 + 0xD44]
	0x03BBA168 ADRP X24, 0x5A3000
	0x03BBA16C LDR X21, [X20 + 0x10]!
	0x03BBA170 LDR X24, [X24 + 0x2C0]
	0x03BBA174 MOV X0, X21
	0x03BBA178 MOV X1, X19
	0x03BBA17C MOV X2, X31
	0x03BBA180 BL 0x33C0DE4
	0x03BBA184 CBZ X0, 0x3BBA1A4
	0x03BBA188 LDR X23, [X24]
	0x03BBA18C MOV X22, X0
	0x03BBA190 MOV X1, X23
	0x03BBA194 BL 0x1C16E00
	0x03BBA198 MOV X1, X0
	0x03BBA19C CBNZ X0, 0x3BBA1A8
	0x03BBA1A0 B 0x3BBA1D4
	0x03BBA1A4 MOV X1, X31
	0x03BBA1A8 MOV X0, X20
	0x03BBA1AC MOV X2, X21
	0x03BBA1B0 BL 0x1C24138
	0x03BBA1B4 CMP X21, X0
	0x03BBA1B8 MOV X21, X0
	0x03BBA1BC B.NE 0x3BBA174
	0x03BBA1C0 LDP X20, X19, [X31 + 0x30]
	0x03BBA1C4 LDP X22, X21, [X31 + 0x20]
	0x03BBA1C8 LDP X24, X23, [X31 + 0x10]
	0x03BBA1CC LDR X30, [X31], #0x40
	0x03BBA1D0 RET
	0x03BBA1D4 MOV X0, X22
	0x03BBA1D8 MOV X1, X23
	0x03BBA1DC BL 0x1C171E0
	0x03BBA1E0 SUB X31, X31, 0x40
	0x03BBA1E4 STP X30, X23, [X31 + 0x10]
	0x03BBA1E8 STP X22, X21, [X31 + 0x20]
	0x03BBA1EC STP X20, X19, [X31 + 0x30]
	0x03BBA1F0 ADRP X21, 0x828000
	0x03BBA1F4 ADRP X20, 0x58C000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x829000
	009 Move X24, 0x5A2000
	010 Move X20, 0x5A2000
	011 Move X22, 0x5A4000
	012 Move X21, 0x5A4000
	013 Move W8, [X23+3360]
	014 Move X24, [X24+2712]
	015 Move X20, [X20+2696]
	016 Move X22, [X22+568]
	017 Move X21, [X21+576]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x5A4000
	024 Move X0, [X0+576]
	025 Call 0x1C17CF4
	026 Move X0, 0x5A2000
	027 Move X0, [X0+2696]
	028 Call 0x1C17CF4
	029 Move X0, 0x5A2000
	030 Move X0, [X0+2712]
	031 Call 0x1C17CF4
	032 Move X0, 0x5A4000
	033 Move X0, [X0+568]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3360], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call List`1<Object>..ctor, X0
	042 Move [X19+32], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+40], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call MonoBehaviour..ctor, X0
	059 Return 

Method: System.Void .cctor()

Disassembly:
	0x03BBA1F8 LDRB W8, [X21 + 0xD33]
	0x03BBA1FC LDR X20, [X20 + 0xA68]
	0x03BBA200 MOV X19, X0
	0x03BBA204 TBNZ X8, 0x0, 0x3BBA24C
	0x03BBA208 ADRP X0, 0x5A2000
	0x03BBA20C LDR X0, [X0 + 0xD18]
	0x03BBA210 BL 0x1C16CF4
	0x03BBA214 ADRP X0, 0x58C000
	0x03BBA218 LDR X0, [X0 + 0xA68]
	0x03BBA21C BL 0x1C16CF4
	0x03BBA220 ADRP X0, 0x58E000
	0x03BBA224 LDR X0, [X0 + 0xD68]
	0x03BBA228 BL 0x1C16CF4
	0x03BBA22C ADRP X0, 0x561000
	0x03BBA230 LDR X0, [X0 + 0x270]
	0x03BBA234 BL 0x1C16CF4
	0x03BBA238 ADRP X0, 0x5A3000
	0x03BBA23C LDR X0, [X0 + 0x300]
	0x03BBA240 BL 0x1C16CF4
	0x03BBA244 MOVZ W8, 0x1
	0x03BBA248 STRB W8, [X21 + 0xD33]
	0x03BBA24C LDR X0, [X20]
	0x03BBA250 STP X31, X31, [X31]
	0x03BBA254 ADRP X21, 0x561000
	0x03BBA258 LDR W8, [X0 + 0xE0]
	0x03BBA25C LDR X21, [X21 + 0x270]
	0x03BBA260 CBNZ W8, 0x3BBA26C
	0x03BBA264 BL 0x1C16DFC
	0x03BBA268 LDR X0, [X20]
	0x03BBA26C LDR X8, [X21]
	0x03BBA270 LDR X9, [X0 + 0xB8]
	0x03BBA274 ADRP X22, 0x58E000
	0x03BBA278 LDR W10, [X8 + 0xE0]
	0x03BBA27C LDP X21, X20, [X9 + 0x180]
	0x03BBA280 LDR X22, [X22 + 0xD68]
	0x03BBA284 CBNZ W10, 0x3BBA290
	0x03BBA288 MOV X0, X8
	0x03BBA28C BL 0x1C16DFC
	0x03BBA290 LDR X2, [X22]
	0x03BBA294 ADRP X23, 0x5A2000
	0x03BBA298 ADRP X22, 0x5A3000
	0x03BBA29C LDR X23, [X23 + 0xD18]
	0x03BBA2A0 LDR X22, [X22 + 0x300]
	0x03BBA2A4 MOV X0, X21
	0x03BBA2A8 MOV X1, X20
	0x03BBA2AC BL 0x220B6E4
	0x03BBA2B0 CBZ X0, 0x3BBA2E8
	0x03BBA2B4 MOV X20, X0
	0x03BBA2B8 LDR X0, [X23]
	0x03BBA2BC BL 0x1C16F10
	0x03BBA2C0 LDR X2, [X22]
	0x03BBA2C4 MOV X1, X19
	0x03BBA2C8 MOV X3, X31
	0x03BBA2CC MOV X21, X0
	0x03BBA2D0 BL 0x2984034
	0x03BBA2D4 MOV X0, X19
	0x03BBA2D8 MOV X1, X20
	0x03BBA2DC MOV X2, X21
	0x03BBA2E0 BL 0x3BBAC5C
	0x03BBA2E4 B 0x3BBA33C
	0x03BBA2E8 ADD X1, X31, 0x0
	0x03BBA2EC MOVZ W0, 0x164
	0x03BBA2F0 BL 0x3BBACF0
	0x03BBA2F4 TBZ X0, 0x0, 0x3BBA330
	0x03BBA2F8 LDR X0, [X23]
	0x03BBA2FC LDP X20, X21, [X31]
	0x03BBA300 BL 0x1C16F10
	0x03BBA304 LDR X2, [X22]
	0x03BBA308 MOV X1, X19
	0x03BBA30C MOV X3, X31
	0x03BBA310 MOV X22, X0
	0x03BBA314 BL 0x2984034
	0x03BBA318 MOV X0, X19
	0x03BBA31C MOV X1, X20
	0x03BBA320 MOV X2, X21
	0x03BBA324 MOV X3, X22
	0x03BBA328 BL 0x3BBAE38
	0x03BBA32C B 0x3BBA33C
	0x03BBA330 MOV X0, X19
	0x03BBA334 MOV W1, W31
	0x03BBA338 BL 0x3BBA95C
	0x03BBA33C LDP X20, X19, [X31 + 0x30]
	0x03BBA340 LDP X22, X21, [X31 + 0x20]
	0x03BBA344 LDP X30, X23, [X31 + 0x10]
	0x03BBA348 ADD X31, X31, 0x40
	0x03BBA34C RET
	0x03BBA350 SUB X31, X31, 0x40
	0x03BBA354 STP X30, X23, [X31 + 0x10]
	0x03BBA358 STP X22, X21, [X31 + 0x20]
	0x03BBA35C STP X20, X19, [X31 + 0x30]
	0x03BBA360 ADRP X21, 0x828000
	0x03BBA364 ADRP X20, 0x58C000
	0x03BBA368 LDRB W8, [X21 + 0xD34]
	0x03BBA36C LDR X20, [X20 + 0xA68]
	0x03BBA370 MOV X19, X0
	0x03BBA374 TBNZ X8, 0x0, 0x3BBA3BC
	0x03BBA378 ADRP X0, 0x5A2000
	0x03BBA37C LDR X0, [X0 + 0xD18]
	0x03BBA380 BL 0x1C16CF4
	0x03BBA384 ADRP X0, 0x58C000
	0x03BBA388 LDR X0, [X0 + 0xA68]
	0x03BBA38C BL 0x1C16CF4
	0x03BBA390 ADRP X0, 0x58E000
	0x03BBA394 LDR X0, [X0 + 0xD68]
	0x03BBA398 BL 0x1C16CF4
	0x03BBA39C ADRP X0, 0x561000
	0x03BBA3A0 LDR X0, [X0 + 0x270]
	0x03BBA3A4 BL 0x1C16CF4
	0x03BBA3A8 ADRP X0, 0x5A3000
	0x03BBA3AC LDR X0, [X0 + 0x308]
	0x03BBA3B0 BL 0x1C16CF4
	0x03BBA3B4 MOVZ W8, 0x1
	0x03BBA3B8 STRB W8, [X21 + 0xD34]
	0x03BBA3BC LDR X0, [X20]
	0x03BBA3C0 STP X31, X31, [X31]
	0x03BBA3C4 ADRP X21, 0x561000
	0x03BBA3C8 LDR W8, [X0 + 0xE0]
	0x03BBA3CC LDR X21, [X21 + 0x270]
	0x03BBA3D0 CBNZ W8, 0x3BBA3DC
	0x03BBA3D4 BL 0x1C16DFC
	0x03BBA3D8 LDR X0, [X20]
	0x03BBA3DC LDR X8, [X21]
	0x03BBA3E0 LDR X9, [X0 + 0xB8]
	0x03BBA3E4 ADRP X22, 0x58E000
	0x03BBA3E8 LDR W10, [X8 + 0xE0]
	0x03BBA3EC LDP X21, X20, [X9 + 0x190]
	0x03BBA3F0 LDR X22, [X22 + 0xD68]
	0x03BBA3F4 CBNZ W10, 0x3BBA400
	0x03BBA3F8 MOV X0, X8
	0x03BBA3FC BL 0x1C16DFC
	0x03BBA400 LDR X2, [X22]
	0x03BBA404 ADRP X23, 0x5A2000
	0x03BBA408 ADRP X22, 0x5A3000
	0x03BBA40C LDR X23, [X23 + 0xD18]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x829000
	014 Move X21, 0x5A4000
	015 Move W8, [X19+3361]
	016 Move X21, [X21+584]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0x5A4000
	022 Move X0, [X0+592]
	023 Call 0x1C17CF4
	024 Move X0, 0x5A3000
	025 Move X0, [X0+104]
	026 Call 0x1C17CF4
	027 Move X0, 0x5A1000
	028 Move X0, [X0+3208]
	029 Call 0x1C17CF4
	030 Move X0, 0x5A1000
	031 Move X0, [X0+3232]
	032 Call 0x1C17CF4
	033 Move X0, 0x5A4000
	034 Move X0, [X0+600]
	035 Call 0x1C17CF4
	036 Move X0, 0x5A4000
	037 Move X0, [X0+608]
	038 Call 0x1C17CF4
	039 Move X0, 0x5A4000
	040 Move X0, [X0+616]
	041 Call 0x1C17CF4
	042 Move X0, 0x5A4000
	043 Move X0, [X0+624]
	044 Call 0x1C17CF4
	045 Move X0, 0x5A4000
	046 Move X0, [X0+632]
	047 Call 0x1C17CF4
	048 Move X0, 0x5A4000
	049 Move X0, [X0+584]
	050 Call 0x1C17CF4
	051 Move X0, 0x5A4000
	052 Move X0, [X0+640]
	053 Call 0x1C17CF4
	054 Move X0, 0x5A4000
	055 Move X0, [X0+312]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+3361], W8
	059 Move X24, 0x5A4000
	060 Move X20, 0x5A4000
	061 Move X23, 0x5A4000
	062 Move X28, 0x5A4000
	063 Move X24, [X24+600]
	064 Move X20, [X20+624]
	065 Move X23, [X23+592]
	066 Move X28, [X28+632]
	067 Move X0, [X21]
	068 Move X29, 0x5A4000
	069 Move X27, 0x5A4000
	070 Move X22, 0x5A4000
	071 Move X26, 0x5A1000
	072 Move X25, 0x5A1000
	073 Move X29, [X29+616]
	074 Move X27, [X27+608]
	075 Move X22, [X22+312]
	076 Move W8, [X0+224]
	077 Move X26, [X26+3232]
	078 Move X25, [X25+3208]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X21]
	083 Move X8, [X0+184]
	084 Move X0, [X24]
	085 Move X19, [X8]
	086 Call 0x1C17F10
	087 Move X2, [X20]
	088 Move X1, X19
	089 Move X3, X31
	090 Move X20, X0
	091 Call Func`1<Object>..ctor, X0, X1, X2
	092 Move X8, [X21]
	093 Move X0, [X23]
	094 Move X8, [X8+184]
	095 Move X19, [X8]
	096 Call 0x1C17F10
	097 Move X2, [X28]
	098 Move X1, X19
	099 Move X3, X31
	100 Move X21, X0
	101 Call Action`1<Object>..ctor, X0, X1, X2
	102 Move X0, [X29]
	103 Call 0x1C17F10
	104 Move X7, [X27]
	105 Move W6, 0x2710
	106 Move X1, X20
	107 Move X2, X31
	108 Move X3, X21
	109 Move X4, X31
	110 Move W5, W31
	111 Move X19, X0
	112 Call 0x2EF1EC8, X0, X1, X2, X3, X4, X5, X6
	113 Move X8, [X22]
	114 Move X8, [X8+184]
	115 Move [X8], X19
	116 Move X0, [X26]
	117 Call 0x1C17F10
	118 Move X1, [X25]
	119 Move X19, X0
	120 Call Dictionary`2<Object, Single>..ctor, X0
	121 Move X8, [X22]
	122 Move X8, [X8+184]
	123 Move [X8+8], X19
	124 Move X8, 0x5A3000
	125 Move X8, [X8+104]
	126 Move X0, [X8]
	127 Call 0x1C17F10
	128 Move X8, 0x5A4000
	129 Move X8, [X8+640]
	130 Move X1, X31
	131 Move X3, X31
	132 Move X19, X0
	133 Move X2, [X8]
	134 Call Comparison`1<Object>..ctor, X0, X1, X2
	135 Move X8, [X22]
	136 Move X22, [X31+64]
	137 Move X21, [X31+72]
	138 Move X24, [X31+48]
	139 Move X23, [X31+56]
	140 Move X26, [X31+32]
	141 Move X25, [X31+40]
	142 Move X8, [X8+184]
	143 Move X28, [X31+16]
	144 Move X27, [X31+24]
	145 Move [X8+16], X19
	146 Move X20, [X31+80]
	147 Move X19, [X31+88]
	148 Move X29, [X31+96]
	149 Move X30, [X31+104]
	150 Return 

