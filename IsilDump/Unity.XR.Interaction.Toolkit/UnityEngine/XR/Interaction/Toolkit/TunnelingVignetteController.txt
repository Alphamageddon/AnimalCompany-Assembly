Type: UnityEngine.XR.Interaction.Toolkit.TunnelingVignetteController

Method: UnityEngine.XR.Interaction.Toolkit.VignetteParameters get_defaultParameters()

Disassembly:
	0x03B84814 BL 0x2BC434C
	0x03B84818 CBZ X21, 0x3B84884

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_defaultParameters(UnityEngine.XR.Interaction.Toolkit.VignetteParameters value)

Disassembly:
	0x03B8481C MOV X0, X21
	0x03B84820 BL 0x1C16F18

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.VignetteParameters get_currentParameters()

Disassembly:
	0x03B84824 MOV X20, X0
	0x03B84828 CMP W1, 0x1

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.LocomotionVignetteProvider> get_locomotionVignetteProviders()

Disassembly:
	0x03B8482C B.NE 0x3B84860
	0x03B84830 MOV X0, X20

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_locomotionVignetteProviders(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.LocomotionVignetteProvider> value)

Disassembly:
	0x03B84834 BL 0x3EB1AD0
	0x03B84838 LDR X21, [X0]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Void BeginTunnelingVignette(UnityEngine.XR.Interaction.Toolkit.ITunnelingVignetteProvider provider)

Disassembly:
	0x03B8483C BL 0x3EB1AE0
	0x03B84840 ADRP X20, 0x5D7000
	0x03B84844 LDR X20, [X20 + 0xEC0]
	0x03B84848 ADD X0, X31, 0x20
	0x03B8484C LDR X1, [X20]
	0x03B84850 BL 0x2BC434C
	0x03B84854 CBZ X21, 0x3B845CC
	0x03B84858 MOV X0, X21
	0x03B8485C BL 0x1C16F18
	0x03B84860 MOV X21, X31
	0x03B84864 B 0x3B8486C
	0x03B84868 MOV X20, X0
	0x03B8486C ADRP X8, 0x5D7000
	0x03B84870 LDR X8, [X8 + 0xEC0]
	0x03B84874 LDR X1, [X8]
	0x03B84878 ADD X0, X31, 0x20
	0x03B8487C BL 0x2BC434C
	0x03B84880 CBNZ X21, 0x3B8488C
	0x03B84884 MOV X0, X20
	0x03B84888 BL 0x1D2C690
	0x03B8488C MOV X0, X21
	0x03B84890 BL 0x1C16F18
	0x03B84894 BL 0x1990590
	0x03B84898 STP X30, X21, [X31 - 0x20]!
	0x03B8489C STP X20, X19, [X31 + 0x10]
	0x03B848A0 ADRP X20, 0x85E000
	0x03B848A4 ADRP X21, 0x56F000
	0x03B848A8 LDRB W8, [X20 + 0xAEE]
	0x03B848AC LDR X21, [X21 + 0x598]
	0x03B848B0 MOV X19, X0
	0x03B848B4 TBNZ X8, 0x0, 0x3B8495C
	0x03B848B8 ADRP X0, 0x576000
	0x03B848BC LDR X0, [X0 + 0xB38]
	0x03B848C0 BL 0x1C16CF4
	0x03B848C4 ADRP X0, 0x576000
	0x03B848C8 LDR X0, [X0 + 0xB40]
	0x03B848CC BL 0x1C16CF4
	0x03B848D0 ADRP X0, 0x56F000
	0x03B848D4 LDR X0, [X0 + 0xA28]
	0x03B848D8 BL 0x1C16CF4
	0x03B848DC ADRP X0, 0x576000
	0x03B848E0 LDR X0, [X0 + 0x6F0]
	0x03B848E4 BL 0x1C16CF4
	0x03B848E8 ADRP X0, 0x576000
	0x03B848EC LDR X0, [X0 + 0x6F8]
	0x03B848F0 BL 0x1C16CF4
	0x03B848F4 ADRP X0, 0x5CC000
	0x03B848F8 LDR X0, [X0 + 0x590]
	0x03B848FC BL 0x1C16CF4
	0x03B84900 ADRP X0, 0x573000
	0x03B84904 LDR X0, [X0 + 0xCA0]
	0x03B84908 BL 0x1C16CF4
	0x03B8490C ADRP X0, 0x56F000
	0x03B84910 LDR X0, [X0 + 0x598]
	0x03B84914 BL 0x1C16CF4
	0x03B84918 ADRP X0, 0x5D7000
	0x03B8491C LDR X0, [X0 + 0xF30]
	0x03B84920 BL 0x1C16CF4
	0x03B84924 ADRP X0, 0x5D7000
	0x03B84928 LDR X0, [X0 + 0xF38]
	0x03B8492C BL 0x1C16CF4
	0x03B84930 ADRP X0, 0x5D7000
	0x03B84934 LDR X0, [X0 + 0xF40]
	0x03B84938 BL 0x1C16CF4
	0x03B8493C ADRP X0, 0x5D7000
	0x03B84940 LDR X0, [X0 + 0xF48]
	0x03B84944 BL 0x1C16CF4
	0x03B84948 ADRP X0, 0x5D7000
	0x03B8494C LDR X0, [X0 + 0xF50]
	0x03B84950 BL 0x1C16CF4
	0x03B84954 MOVZ W8, 0x1
	0x03B84958 STRB W8, [X20 + 0xAEE]
	0x03B8495C LDR X0, [X21]
	0x03B84960 LDR X20, [X19 + 0x40]
	0x03B84964 LDR W8, [X0 + 0xE0]
	0x03B84968 CBNZ W8, 0x3B84970
	0x03B8496C BL 0x1C16DFC
	0x03B84970 MOV X0, X20
	0x03B84974 MOV X1, X31
	0x03B84978 MOV X2, X31
	0x03B8497C BL 0x3C3883C
	0x03B84980 TBZ X0, 0x0, 0x3B849A4
	0x03B84984 ADRP X8, 0x576000
	0x03B84988 LDR X8, [X8 + 0xB40]
	0x03B8498C MOV X0, X19
	0x03B84990 LDR X1, [X8]
	0x03B84994 BL 0x21A3894
	0x03B84998 MOV X20, X0
	0x03B8499C STR X0, [X19 + 0x40]
	0x03B849A0 B 0x3B849A8
	0x03B849A4 LDR X20, [X19 + 0x40]
	0x03B849A8 LDR X0, [X21]
	0x03B849AC LDR W8, [X0 + 0xE0]
	0x03B849B0 CBNZ W8, 0x3B849B8
	0x03B849B4 BL 0x1C16DFC
	0x03B849B8 MOV X0, X20
	0x03B849BC MOV X1, X31
	0x03B849C0 MOV X2, X31
	0x03B849C4 BL 0x3C3883C
	0x03B849C8 TBZ X0, 0x0, 0x3B849F0
	0x03B849CC MOV X0, X19
	0x03B849D0 MOV X1, X31
	0x03B849D4 BL 0x3C32ECC
	0x03B849D8 CBZ X0, 0x3B84C64
	0x03B849DC ADRP X8, 0x576000
	0x03B849E0 LDR X8, [X8 + 0x6F8]
	0x03B849E4 LDR X1, [X8]
	0x03B849E8 BL 0x21E51FC
	0x03B849EC STR X0, [X19 + 0x40]
	0x03B849F0 LDR X8, [X19 + 0x58]
	0x03B849F4 CBNZ X8, 0x3B84A18
	0x03B849F8 ADRP X8, 0x5CC000
	0x03B849FC LDR X8, [X8 + 0x590]
	0x03B84A00 LDR X0, [X8]
	0x03B84A04 BL 0x1C16F10
	0x03B84A08 MOV X1, X31
	0x03B84A0C MOV X20, X0
	0x03B84A10 BL 0x3C122EC
	0x03B84A14 STR X20, [X19 + 0x58]
	0x03B84A18 LDR X0, [X21]
	0x03B84A1C LDR X20, [X19 + 0x48]
	0x03B84A20 LDR W8, [X0 + 0xE0]
	0x03B84A24 CBNZ W8, 0x3B84A2C
	0x03B84A28 BL 0x1C16DFC
	0x03B84A2C MOV X0, X20
	0x03B84A30 MOV X1, X31
	0x03B84A34 MOV X2, X31
	0x03B84A38 BL 0x3C3883C
	0x03B84A3C TBZ X0, 0x0, 0x3B84A60
	0x03B84A40 ADRP X8, 0x576000
	0x03B84A44 LDR X8, [X8 + 0xB38]
	0x03B84A48 MOV X0, X19
	0x03B84A4C LDR X1, [X8]
	0x03B84A50 BL 0x21A3894
	0x03B84A54 MOV X20, X0
	0x03B84A58 STR X0, [X19 + 0x48]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0x85F000
	010 Move W8, [X21+2791]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x5D8000
	018 Move X0, [X0+3776]
	019 Call 0x1C17CF4
	020 Move X0, 0x5D8000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move X0, 0x5D8000
	024 Move X0, [X0+3792]
	025 Call 0x1C17CF4
	026 Move X0, 0x5D8000
	027 Move X0, [X0+3800]
	028 Call 0x1C17CF4
	029 Move X0, 0x5D8000
	030 Move X0, [X0+3808]
	031 Call 0x1C17CF4
	032 Move X0, 0x5D8000
	033 Move X0, [X0+3816]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2791], W8
	037 Move [X31+8], X31
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move X0, [X20+56]
	041 Compare X0, 0
	042 JumpIfEqual {119}
	043 Move X8, 0x5D8000
	044 Move X8, [X8+3808]
	045 Move X22, 0x5D8000
	046 Move X22, [X22+3784]
	047 Move X24, 0x5D8000
	048 Move X1, [X8]
	049 Move X23, 0x5D8000
	050 Move X21, 0x5D8000
	051 Move X24, [X24+3816]
	052 Move X23, [X23+3800]
	053 Move X21, [X21+3776]
	054 Add X8, X31, 8
	055 Call List`1<Object>.GetEnumerator, X0
	056 Move X1, [X22]
	057 Add X0, X31, 8
	058 Call Enumerator<Object>.MoveNext, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {73}
	063 Move X8, [X31+24]
	064 Compare X8, 0
	065 JumpIfEqual {118}
	066 Move X9, [X8+16]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, 1
	069 Move [X8+24], W9
	070 Move X1, [X21]
	071 Add X0, X31, 8
	072 Call Enumerator<Object>.Dispose, X0
	073 Move X1, [X21]
	074 Add X0, X31, 8
	075 Call Enumerator<Object>.Dispose, X0
	076 Move X0, [X24]
	077 Move X20, [X20+56]
	078 Call 0x1C17F10
	079 Move W8, 0x3F800000
	080 Move X1, X31
	081 Move X21, X0
	082 Move [X0+28], W8
	083 Call Object..ctor, X0
	084 Move W8, 1
	085 Move [X21+16], X19
	086 Move [X21+24], W8
	087 Compare X20, 0
	088 JumpIfEqual {119}
	089 Move W10, [X20+28]
	090 Move X8, [X20+16]
	091 Move X9, [X23]
	092 Add W10, W10, 1
	093 Move [X20+28], W10
	094 Compare X8, 0
	095 JumpIfEqual {119}
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Move W11, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add W9, W10, 1
	100 Add X8, X8, X10
	101 Move [X20+24], W9
	102 Move [X8+32], X21
	103 Move X8, [X9+32]
	104 Move X0, X20
	105 Move X1, X21
	106 Move X8, [X8+192]
	107 Move X2, [X8+112]
	108 Call List`1<Object>.AddWithResize, X0, X1
	109 Move X20, [X31+80]
	110 Move X19, [X31+88]
	111 Move X22, [X31+64]
	112 Move X21, [X31+72]
	113 Move X24, [X31+48]
	114 Move X23, [X31+56]
	115 Move X30, [X31+32]
	116 Add X31, X31, 96
	117 Return 
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Move X22, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X22
	123 Call 0x3EB2AD0
	124 Move X21, [X0]
	125 Call 0x3EB2AE0
	126 Move X8, 0x5D8000
	127 Move X8, [X8+3776]
	128 Add X0, X31, 8
	129 Move X1, [X8]
	130 Call Enumerator<Object>.Dispose, X0
	131 Compare X21, 0
	132 JumpIfEqual {76}
	133 Move X0, X21
	134 Call 0x1C17F18
	135 Move X21, X31
	136 Move X22, X0
	137 Move X8, 0x5D8000
	138 Move X8, [X8+3776]
	139 Move X1, [X8]
	140 Add X0, X31, 8
	141 Call Enumerator<Object>.Dispose, X0
	142 Compare X21, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X22
	145 Call 0x1D2D690
	146 Move X0, X21
	147 Call 0x1C17F18
	148 Call 0x1991590

Method: System.Void EndTunnelingVignette(UnityEngine.XR.Interaction.Toolkit.ITunnelingVignetteProvider provider)

Disassembly:
	0x03B84A8C MOV X1, X31
	0x03B84A90 BL 0x3C32ECC
	0x03B84A94 CBZ X0, 0x3B84C64
	0x03B84A98 ADRP X8, 0x576000
	0x03B84A9C LDR X8, [X8 + 0x6F0]
	0x03B84AA0 LDR X1, [X8]
	0x03B84AA4 BL 0x21E51FC
	0x03B84AA8 STR X0, [X19 + 0x48]
	0x03B84AAC B 0x3B84AB4
	0x03B84AB0 LDR X0, [X19 + 0x48]
	0x03B84AB4 CBZ X0, 0x3B84C64
	0x03B84AB8 MOV X1, X31
	0x03B84ABC BL 0x3C16D04
	0x03B84AC0 LDR X8, [X21]
	0x03B84AC4 MOV X20, X0
	0x03B84AC8 LDR W9, [X8 + 0xE0]
	0x03B84ACC CBNZ W9, 0x3B84AD8
	0x03B84AD0 MOV X0, X8
	0x03B84AD4 BL 0x1C16DFC
	0x03B84AD8 MOV X0, X20
	0x03B84ADC MOV X1, X31
	0x03B84AE0 MOV X2, X31
	0x03B84AE4 BL 0x3C3883C
	0x03B84AE8 TBZ X0, 0x0, 0x3B84B24
	0x03B84AEC ADRP X8, 0x56F000
	0x03B84AF0 LDR X8, [X8 + 0xA28]
	0x03B84AF4 LDR X0, [X8]
	0x03B84AF8 LDR W8, [X0 + 0xE0]
	0x03B84AFC CBNZ W8, 0x3B84B04
	0x03B84B00 BL 0x1C16DFC
	0x03B84B04 ADRP X8, 0x5D7000
	0x03B84B08 LDR X8, [X8 + 0xF50]
	0x03B84B0C LDR X0, [X8]
	0x03B84B10 MOV X1, X19
	0x03B84B14 MOV X2, X31
	0x03B84B18 BL 0x3C06B0C
	0x03B84B1C MOV W0, W31
	0x03B84B20 B 0x3B84C58
	0x03B84B24 LDR X0, [X19 + 0x40]
	0x03B84B28 CBZ X0, 0x3B84C64
	0x03B84B2C MOV X1, X31
	0x03B84B30 BL 0x3C1349C
	0x03B84B34 LDR X8, [X21]
	0x03B84B38 MOV X20, X0
	0x03B84B3C LDR W9, [X8 + 0xE0]
	0x03B84B40 CBNZ W9, 0x3B84B4C
	0x03B84B44 MOV X0, X8
	0x03B84B48 BL 0x1C16DFC
	0x03B84B4C MOV X0, X20
	0x03B84B50 MOV X1, X31
	0x03B84B54 MOV X2, X31
	0x03B84B58 BL 0x3C3883C
	0x03B84B5C TBZ X0, 0x0, 0x3B84BC4
	0x03B84B60 ADRP X8, 0x5D7000
	0x03B84B64 LDR X8, [X8 + 0xF38]
	0x03B84B68 MOV X1, X31
	0x03B84B6C LDR X0, [X8]
	0x03B84B70 BL 0x3C13E40
	0x03B84B74 LDR X8, [X21]
	0x03B84B78 MOV X20, X0
	0x03B84B7C LDR W9, [X8 + 0xE0]
	0x03B84B80 CBNZ W9, 0x3B84B8C
	0x03B84B84 MOV X0, X8
	0x03B84B88 BL 0x1C16DFC
	0x03B84B8C MOV X0, X20
	0x03B84B90 MOV X1, X31
	0x03B84B94 MOV X2, X31
	0x03B84B98 BL 0x3C3883C
	0x03B84B9C ADRP X8, 0x56F000
	0x03B84BA0 LDR X8, [X8 + 0xA28]
	0x03B84BA4 MOV W21, W0
	0x03B84BA8 LDR X8, [X8]
	0x03B84BAC LDR W9, [X8 + 0xE0]
	0x03B84BB0 CBZ W9, 0x3B84BDC
	0x03B84BB4 TBZ X21, 0x0, 0x3B84BE8
	0x03B84BB8 ADRP X8, 0x5D7000
	0x03B84BBC LDR X8, [X8 + 0xF40]
	0x03B84BC0 B 0x3B84B0C
	0x03B84BC4 LDR X0, [X19 + 0x40]
	0x03B84BC8 CBZ X0, 0x3B84C64
	0x03B84BCC MOV X1, X31
	0x03B84BD0 BL 0x3C1349C
	0x03B84BD4 STR X0, [X19 + 0x50]
	0x03B84BD8 B 0x3B84C54
	0x03B84BDC MOV X0, X8
	0x03B84BE0 BL 0x1C16DFC
	0x03B84BE4 TBNZ X21, 0x0, 0x3B84BB8
	0x03B84BE8 ADRP X8, 0x5D7000
	0x03B84BEC LDR X8, [X8 + 0xF30]
	0x03B84BF0 MOV X1, X19
	0x03B84BF4 MOV X2, X31
	0x03B84BF8 LDR X0, [X8]
	0x03B84BFC BL 0x3C06B0C
	0x03B84C00 ADRP X8, 0x573000
	0x03B84C04 LDR X8, [X8 + 0xCA0]
	0x03B84C08 LDR X0, [X8]
	0x03B84C0C BL 0x1C16F10
	0x03B84C10 MOV X1, X20
	0x03B84C14 MOV X2, X31
	0x03B84C18 MOV X21, X0
	0x03B84C1C BL 0x3C1454C
	0x03B84C20 CBZ X21, 0x3B84C64
	0x03B84C24 ADRP X8, 0x5D7000
	0x03B84C28 LDR X8, [X8 + 0xF48]
	0x03B84C2C MOV X0, X21
	0x03B84C30 MOV X2, X31
	0x03B84C34 LDR X1, [X8]
	0x03B84C38 BL 0x3C38A84
	0x03B84C3C LDR X0, [X19 + 0x40]
	0x03B84C40 STR X21, [X19 + 0x50]
	0x03B84C44 CBZ X0, 0x3B84C64
	0x03B84C48 MOV X1, X21
	0x03B84C4C MOV X2, X31
	0x03B84C50 BL 0x3C134D8
	0x03B84C54 MOVZ W0, 0x1
	0x03B84C58 LDP X20, X19, [X31 + 0x10]
	0x03B84C5C LDP X30, X21, [X31], #0x20
	0x03B84C60 RET
	0x03B84C64 BL 0x1C16F20
	0x03B84C68 STP X30, X25, [X31 - 0x40]!
	0x03B84C6C STP X24, X23, [X31 + 0x10]
	0x03B84C70 STP X22, X21, [X31 + 0x20]
	0x03B84C74 STP X20, X19, [X31 + 0x30]
	0x03B84C78 ADRP X20, 0x85E000
	0x03B84C7C ADRP X25, 0x5D7000
	0x03B84C80 ADRP X24, 0x5D7000
	0x03B84C84 ADRP X23, 0x5D7000
	0x03B84C88 ADRP X22, 0x5D7000
	0x03B84C8C ADRP X21, 0x5D7000
	0x03B84C90 LDRB W8, [X20 + 0xAEF]
	0x03B84C94 LDR X25, [X25 + 0xEB8]
	0x03B84C98 LDR X24, [X24 + 0xF58]
	0x03B84C9C LDR X23, [X23 + 0xF60]
	0x03B84CA0 LDR X22, [X22 + 0xF68]
	0x03B84CA4 LDR X21, [X21 + 0xF70]
	0x03B84CA8 MOV X19, X0
	0x03B84CAC TBNZ X8, 0x0, 0x3B84CF4
	0x03B84CB0 ADRP X0, 0x5D7000
	0x03B84CB4 LDR X0, [X0 + 0xF60]
	0x03B84CB8 BL 0x1C16CF4
	0x03B84CBC ADRP X0, 0x5D7000
	0x03B84CC0 LDR X0, [X0 + 0xF70]
	0x03B84CC4 BL 0x1C16CF4
	0x03B84CC8 ADRP X0, 0x5D7000
	0x03B84CCC LDR X0, [X0 + 0xF68]
	0x03B84CD0 BL 0x1C16CF4
	0x03B84CD4 ADRP X0, 0x5D7000
	0x03B84CD8 LDR X0, [X0 + 0xF58]
	0x03B84CDC BL 0x1C16CF4
	0x03B84CE0 ADRP X0, 0x5D7000
	0x03B84CE4 LDR X0, [X0 + 0xEB8]
	0x03B84CE8 BL 0x1C16CF4
	0x03B84CEC MOVZ W8, 0x1
	0x03B84CF0 STRB W8, [X20 + 0xAEF]
	0x03B84CF4 LDR X0, [X25]
	0x03B84CF8 BL 0x1C16F10
	0x03B84CFC MOV X20, X0
	0x03B84D00 BL 0x3B835C4
	0x03B84D04 STR X20, [X19 + 0x20]
	0x03B84D08 LDR X0, [X25]
	0x03B84D0C BL 0x1C16F10
	0x03B84D10 MOV X20, X0
	0x03B84D14 BL 0x3B835C4
	0x03B84D18 STR X20, [X19 + 0x28]
	0x03B84D1C LDR X0, [X24]
	0x03B84D20 BL 0x1C16F10
	0x03B84D24 LDR X1, [X23]
	0x03B84D28 MOV X20, X0
	0x03B84D2C BL 0x301B7C4
	0x03B84D30 STR X20, [X19 + 0x30]
	0x03B84D34 LDR X0, [X22]
	0x03B84D38 BL 0x1C16F10
	0x03B84D3C LDR X1, [X21]
	0x03B84D40 MOV X20, X0
	0x03B84D44 BL 0x301B7C4
	0x03B84D48 STR X20, [X19 + 0x38]
	0x03B84D4C MOV X0, X19
	0x03B84D50 LDP X20, X19, [X31 + 0x30]
	0x03B84D54 LDP X22, X21, [X31 + 0x20]
	0x03B84D58 LDP X24, X23, [X31 + 0x10]
	0x03B84D5C MOV X1, X31
	0x03B84D60 LDP X30, X25, [X31], #0x40
	0x03B84D64 B 0x3C36C30
	0x03B84D68 STR X30, [X31 - 0x40]!
	0x03B84D6C STP X24, X23, [X31 + 0x10]
	0x03B84D70 STP X22, X21, [X31 + 0x20]
	0x03B84D74 STP X20, X19, [X31 + 0x30]
	0x03B84D78 ADRP X23, 0x85E000
	0x03B84D7C ADRP X24, 0x5D7000
	0x03B84D80 ADRP X19, 0x5D7000
	0x03B84D84 ADRP X22, 0x5D7000
	0x03B84D88 ADRP X21, 0x5D7000
	0x03B84D8C ADRP X20, 0x5D7000
	0x03B84D90 LDRB W8, [X23 + 0xAF0]
	0x03B84D94 LDR X24, [X24 + 0xF78]
	0x03B84D98 LDR X19, [X19 + 0xEF8]
	0x03B84D9C LDR X22, [X22 + 0xF80]
	0x03B84DA0 LDR X21, [X21 + 0xF88]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0x85F000
	011 Move W8, [X21+2792]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x5D8000
	019 Move X0, [X0+3776]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D8000
	022 Move X0, [X0+3784]
	023 Call 0x1C17CF4
	024 Move X0, 0x5D8000
	025 Move X0, [X0+3792]
	026 Call 0x1C17CF4
	027 Move X0, 0x5D8000
	028 Move X0, [X0+3824]
	029 Call 0x1C17CF4
	030 Move X0, 0x5D8000
	031 Move X0, [X0+3800]
	032 Call 0x1C17CF4
	033 Move X0, 0x5D8000
	034 Move X0, [X0+3808]
	035 Call 0x1C17CF4
	036 Move X0, 0x5D8000
	037 Move X0, [X0+3816]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2792], W8
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], X31
	044 Compare X19, 0
	045 JumpIfEqual {180}
	046 Move X10, 0x5D8000
	047 Move X8, [X19]
	048 Move X10, [X10+3824]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X19
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X21, X0
	070 Compare X0, 0
	071 JumpIfNotEqual {73}
	072 Move X21, [X20+32]
	073 Move X0, [X20+56]
	074 Compare X0, 0
	075 JumpIfEqual {180}
	076 Move X8, 0x5D8000
	077 Move X8, [X8+3808]
	078 Move X23, 0x5D8000
	079 Move X23, [X23+3784]
	080 Move X25, 0x5D8000
	081 Move X1, [X8]
	082 Move X24, 0x5D8000
	083 Move X22, 0x5D8000
	084 Move X25, [X25+3816]
	085 Move X24, [X24+3800]
	086 Move X22, [X22+3776]
	087 Add X8, X31, 8
	088 Call List`1<Object>.GetEnumerator, X0
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move X8, [X31+24]
	091 Move [X31+2], V0
	092 Move [X31+48], X8
	093 Move X1, [X23]
	094 Add X0, X31, 32
	095 Call Enumerator<Object>.MoveNext, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {118}
	100 Move X8, [X31+48]
	101 Compare X8, 0
	102 JumpIfEqual {179}
	103 Move X9, [X8+16]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Compare X21, 0
	106 JumpIfEqual {181}
	107 Move W9, [X21+32]
	108 Compare W9, 0
	109 JumpIfEqual {113}
	110 Move W9, [X8+32]
	111 Compare W9, 0
	112 JumpIfEqual {131}
	113 Move V0, [X21+36]
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 Move V1, [X8+36]
	116 NotImplemented "Instruction FCMP not yet implemented."
	117 Move W9, 3
	118 Move X1, [X22]
	119 Add X0, X31, 32
	120 Call Enumerator<Object>.Dispose, X0
	121 Compare X21, 0
	122 JumpIfEqual {180}
	123 Move W8, [X21+32]
	124 Compare W8, 0
	125 JumpIfEqual {128}
	126 Move W22, 2
	127 Move W9, 4
	128 Move V0, [X21+36]
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 Move W22, 3
	131 Move W9, 2
	132 Move [X8+24], W9
	133 Move X1, [X22]
	134 Add X0, X31, 32
	135 Call Enumerator<Object>.Dispose, X0
	136 Move W22, 4
	137 Move X0, [X25]
	138 Move X20, [X20+56]
	139 Call 0x1C17F10
	140 Move W8, 0x3F800000
	141 Move X1, X31
	142 Move X21, X0
	143 Move [X0+28], W8
	144 Call Object..ctor, X0
	145 Move [X21+16], X19
	146 Move [X21+24], W22
	147 Compare X20, 0
	148 JumpIfEqual {180}
	149 Move W10, [X20+28]
	150 Move X8, [X20+16]
	151 Move X9, [X24]
	152 Add W10, W10, 1
	153 Move [X20+28], W10
	154 Compare X8, 0
	155 JumpIfEqual {180}
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Move W11, [X8+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add W9, W10, 1
	160 Add X8, X8, X10
	161 Move [X20+24], W9
	162 Move [X8+32], X21
	163 Move X8, [X9+32]
	164 Move X0, X20
	165 Move X1, X21
	166 Move X8, [X8+192]
	167 Move X2, [X8+112]
	168 Call List`1<Object>.AddWithResize, X0, X1
	169 Move X20, [X31+112]
	170 Move X19, [X31+120]
	171 Move X22, [X31+96]
	172 Move X21, [X31+104]
	173 Move X24, [X31+80]
	174 Move X23, [X31+88]
	175 Move X30, [X31+64]
	176 Move X25, [X31+72]
	177 Add X31, X31, 128
	178 Return 
	179 Call 0x1C17F20
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Move X22, X0
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X0, X22
	185 Call 0x3EB2AD0
	186 Move X23, [X0]
	187 Call 0x3EB2AE0
	188 Move X8, 0x5D8000
	189 Move X8, [X8+3776]
	190 Add X0, X31, 32
	191 Move X1, [X8]
	192 Call Enumerator<Object>.Dispose, X0
	193 Compare X23, 0
	194 JumpIfEqual {121}
	195 Move X0, X23
	196 Call 0x1C17F18
	197 Move X23, X31
	198 Move X22, X0
	199 Move X8, 0x5D8000
	200 Move X8, [X8+3776]
	201 Move X1, [X8]
	202 Add X0, X31, 32
	203 Call Enumerator<Object>.Dispose, X0
	204 Compare X23, 0
	205 JumpIfNotEqual {208}
	206 Move X0, X22
	207 Call 0x1D2D690
	208 Move X0, X23
	209 Call 0x1C17F18
	210 Call 0x1991590

Method: System.Void PreviewInEditor(UnityEngine.XR.Interaction.Toolkit.VignetteParameters previewParameters)

Disassembly:
	0x03B84DA4 LDR X20, [X20 + 0xF90]
	0x03B84DA8 TBNZ X8, 0x0, 0x3B84DF0
	0x03B84DAC ADRP X0, 0x5D7000
	0x03B84DB0 LDR X0, [X0 + 0xEF8]
	0x03B84DB4 BL 0x1C16CF4
	0x03B84DB8 ADRP X0, 0x5D7000
	0x03B84DBC LDR X0, [X0 + 0xF90]
	0x03B84DC0 BL 0x1C16CF4
	0x03B84DC4 ADRP X0, 0x5D7000
	0x03B84DC8 LDR X0, [X0 + 0xF80]
	0x03B84DCC BL 0x1C16CF4
	0x03B84DD0 ADRP X0, 0x5D7000
	0x03B84DD4 LDR X0, [X0 + 0xF88]
	0x03B84DD8 BL 0x1C16CF4
	0x03B84DDC ADRP X0, 0x5D7000
	0x03B84DE0 LDR X0, [X0 + 0xF78]
	0x03B84DE4 BL 0x1C16CF4
	0x03B84DE8 MOVZ W8, 0x1
	0x03B84DEC STRB W8, [X23 + 0xAF0]
	0x03B84DF0 LDR X0, [X24]
	0x03B84DF4 MOV X1, X31
	0x03B84DF8 BL 0x3C124EC
	0x03B84DFC LDR X8, [X19]
	0x03B84E00 MOV X1, X31
	0x03B84E04 LDR X8, [X8 + 0xB8]
	0x03B84E08 STR W0, [X8]
	0x03B84E0C LDR X0, [X22]
	0x03B84E10 BL 0x3C124EC
	0x03B84E14 LDR X8, [X19]
	0x03B84E18 MOV X1, X31
	0x03B84E1C LDR X8, [X8 + 0xB8]
	0x03B84E20 STR W0, [X8 + 0x4]
	0x03B84E24 LDR X0, [X21]
	0x03B84E28 BL 0x3C124EC
	0x03B84E2C LDR X8, [X19]
	0x03B84E30 MOV X1, X31
	0x03B84E34 LDR X8, [X8 + 0xB8]
	0x03B84E38 STR W0, [X8 + 0x8]
	0x03B84E3C LDR X0, [X20]
	0x03B84E40 BL 0x3C124EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x85F000
	007 Move X22, 0x570000
	008 Move W8, [X21+2793]
	009 Move X22, [X22+2416]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x570000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2793], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call Application.get_isPlaying
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {50}
	032 Move X0, X20
	033 Move X1, X31
	034 Call Component.get_gameObject, X0
	035 Compare X0, 0
	036 JumpIfEqual {56}
	037 Move X1, X31
	038 Call GameObject.get_activeInHierarchy, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {50}
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void Awake()

Disassembly:
	0x03B85048 MOV V4.16B, V8.16B
	0x03B8504C FADD S7, S15, S0
	0x03B85050 FADD S0, S11, S1
	0x03B85054 STP S0, S7, [X31 + 0x8]
	0x03B85058 FADD S0, S10, S2
	0x03B8505C STR S0, [X31 + 0x4]
	0x03B85060 MOV V0.16B, V14.16B
	0x03B85064 MOV V1.16B, V13.16B
	0x03B85068 MOV V2.16B, V9.16B
	0x03B8506C MOV V6.16B, V8.16B
	0x03B85070 MOV X0, X31
	0x03B85074 MOV V14.16B, V13.16B
	0x03B85078 MOV V13.16B, V9.16B
	0x03B8507C MOV V9.16B, V12.16B
	0x03B85080 BL 0x3C2A9FC
	0x03B85084 FADD S3, S15, S0
	0x03B85088 FADD S4, S11, S1
	0x03B8508C FADD S5, S10, S2
	0x03B85090 LDP S1, S0, [X31 + 0x8]
	0x03B85094 LDR V2, [X31 + 0x4]
	0x03B85098 MOV X0, X31
	0x03B8509C MOV V12.16B, V15.16B
	0x03B850A0 MOV V15.16B, V10.16B
	0x03B850A4 BL 0x3C0CB04
	0x03B850A8 LDR V10, [X31 + 0x14]
	0x03B850AC FMOV S5, W31
	0x03B850B0 MOV V1.16B, V14.16B
	0x03B850B4 MOV V2.16B, V13.16B
	0x03B850B8 MOV V0.16B, V10.16B
	0x03B850BC MOV V3.16B, V9.16B
	0x03B850C0 MOV V4.16B, V8.16B
	0x03B850C4 MOV V6.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x85E000
	006 Move X21, 0x5D7000
	007 Move W8, [X20+2794]
	008 Move X21, [X21+3760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5D7000
	015 Move X0, [X0+3760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2794], W8
	019 Move X0, [X21]
	020 Move X20, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Compare X20, 0
	026 JumpIfEqual {42}
	027 Move X8, [X21]
	028 Move X0, X20
	029 Move X8, [X8+184]
	030 Move X1, [X8+40]
	031 Call VignetteParameters.CopyFrom, X0, X1
	032 Move X8, [X21]
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X8, [X8+184]
	037 Move X1, [X8+40]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call TunnelingVignetteController.UpdateTunnelingVignette, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x03B850C8 MOV X0, X31
	0x03B850CC BL 0x3C2A9FC
	0x03B850D0 LDP S3, S4, [X31 + 0x68]
	0x03B850D4 FADD S7, S12, S0
	0x03B850D8 FADD S0, S11, S1
	0x03B850DC STP S0, S7, [X31 + 0x8]
	0x03B850E0 MOV V9.16B, V15.16B
	0x03B850E4 FADD S15, S15, S2
	0x03B850E8 FMOV S5, W31
	0x03B850EC MOV V0.16B, V10.16B
	0x03B850F0 MOV V1.16B, V14.16B
	0x03B850F4 MOV V2.16B, V13.16B
	0x03B850F8 MOV V6.16B, V8.16B
	0x03B850FC MOV X0, X31
	0x03B85100 BL 0x3C2A9FC
	0x03B85104 FADD S3, S12, S0
	0x03B85108 FADD S4, S11, S1
	0x03B8510C FADD S5, S9, S2
	0x03B85110 LDP S1, S0, [X31 + 0x8]
	0x03B85114 MOV V2.16B, V15.16B
	0x03B85118 LDR X30, [X31 + 0x60]
	0x03B8511C LDP D9, D8, [X31 + 0x50]
	0x03B85120 LDP D11, D10, [X31 + 0x40]
	0x03B85124 LDP D13, D12, [X31 + 0x30]
	0x03B85128 LDP D15, D14, [X31 + 0x20]
	0x03B8512C MOV X0, X31
	0x03B85130 ADD X31, X31, 0x70
	0x03B85134 B 0x3C0CB04
	0x03B85138 STR X30, [X31 - 0x20]!
	0x03B8513C STP X20, X19, [X31 + 0x10]
	0x03B85140 ADRP X20, 0x85D000
	0x03B85144 ADRP X19, 0x5D6000
	0x03B85148 LDRB W8, [X20 + 0xAF2]
	0x03B8514C LDR X19, [X19 + 0xEA0]
	0x03B85150 TBNZ X8, 0x0, 0x3B85168
	0x03B85154 ADRP X0, 0x5D6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x85E000
	006 Move X21, 0x5D7000
	007 Move W8, [X20+2795]
	008 Move X21, [X21+3760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5D7000
	015 Move X0, [X0+3760]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2795], W8
	019 Move X0, [X21]
	020 Move X20, [X19+32]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Compare X20, 0
	026 JumpIfEqual {47}
	027 Move X8, [X21]
	028 Move X0, X20
	029 Move X8, [X8+184]
	030 Move X1, [X8+32]
	031 Call VignetteParameters.CopyFrom, X0, X1
	032 Move X0, [X19+40]
	033 Compare X0, 0
	034 JumpIfEqual {47}
	035 Move X8, [X21]
	036 Move X8, [X8+184]
	037 Move X1, [X8+40]
	038 Call VignetteParameters.CopyFrom, X0, X1
	039 Move X1, [X19+32]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call TunnelingVignetteController.UpdateTunnelingVignette, X0, X1
	046 Return 
	047 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03B85158 LDR X0, [X0 + 0xEA0]
	0x03B8515C BL 0x1C16CF4
	0x03B85160 MOVZ W8, 0x1
	0x03B85164 STRB W8, [X20 + 0xAF2]
	0x03B85168 LDR X8, [X19]
	0x03B8516C ADRP X9, 0xFFFFFFFFFCF66000
	0x03B85170 LDR V0, [X9 + 0x79]
	0x03B85174 ADRP X9, 0xFFFFFFFFFCF65000
	0x03B85178 LDR X8, [X8 + 0xB8]
	0x03B8517C ADRP X10, 0xFFFFFFFFFCF67000
	0x03B85180 STR V0, [X8]
	0x03B85184 LDR X8, [X19]
	0x03B85188 LDR V0, [X9 + 0xA4]
	0x03B8518C LDP X20, X19, [X31 + 0x10]
	0x03B85190 LDR X9, [X8 + 0xB8]
	0x03B85194 STR V0, [X9 + 0x1]
	0x03B85198 LDR X8, [X8 + 0xB8]
	0x03B8519C LDR V0, [X10 + 0x73]
	0x03B851A0 STR V0, [X8 + 0x2]
	0x03B851A4 LDR X30, [X31], #0x20
	0x03B851A8 RET
	0x03B851AC SUB X31, X31, 0x70
	0x03B851B0 STR D8, [X31 + 0x40]
	0x03B851B4 STR X30, [X31 + 0x48]
	0x03B851B8 STP X22, X21, [X31 + 0x50]
	0x03B851BC STP X20, X19, [X31 + 0x60]
	0x03B851C0 ADRP X22, 0x85D000
	0x03B851C4 STP X0, X1, [X31 + 0x30]
	0x03B851C8 ADRP X21, 0x574000
	0x03B851CC LDRB W8, [X22 + 0xAF3]
	0x03B851D0 LDR X21, [X21 + 0x8C8]
	0x03B851D4 MOV V8.16B, V0.16B
	0x03B851D8 MOV X19, X3
	0x03B851DC MOV W20, W2
	0x03B851E0 TBNZ X8, 0x0, 0x3B8521C
	0x03B851E4 ADRP X0, 0x5D6000
	0x03B851E8 LDR X0, [X0 + 0xF98]
	0x03B851EC BL 0x1C16CF4
	0x03B851F0 ADRP X0, 0x5D6000
	0x03B851F4 LDR X0, [X0 + 0xFA0]
	0x03B851F8 BL 0x1C16CF4
	0x03B851FC ADRP X0, 0x5D6000
	0x03B85200 LDR X0, [X0 + 0xFA8]
	0x03B85204 BL 0x1C16CF4
	0x03B85208 ADRP X0, 0x574000
	0x03B8520C LDR X0, [X0 + 0x8C8]
	0x03B85210 BL 0x1C16CF4
	0x03B85214 MOVZ W8, 0x1
	0x03B85218 STRB W8, [X22 + 0xAF3]
	0x03B8521C LDR X0, [X21]
	0x03B85220 STRB W31, [X31 + 0x2C]
	0x03B85224 STR W31, [X31 + 0x28]
	0x03B85228 STP X31, X31, [X31 + 0x18]
	0x03B8522C STP X31, X31, [X31 + 0x8]
	0x03B85230 LDR W8, [X0 + 0xE0]
	0x03B85234 CBNZ W8, 0x3B85240
	0x03B85238 BL 0x1C16DFC
	0x03B8523C LDR X0, [X21]
	0x03B85240 LDR X8, [X0 + 0xB8]
	0x03B85244 LDR X8, [X8]
	0x03B85248 CBZ X8, 0x3B85494
	0x03B8524C LDR W8, [X8 + 0x18]
	0x03B85250 CMP W8, W20
	0x03B85254 B.LE 0x3B85498
	0x03B85258 ADD X0, X31, 0x30
	0x03B8525C MOV X1, X31
	0x03B85260 BL 0x3E63D7C
	0x03B85264 TBZ X0, 0x0, 0x3B8546C
	0x03B85268 LDR X0, [X21]
	0x03B8526C LDR W8, [X0 + 0xE0]
	0x03B85270 CBNZ W8, 0x3B8527C
	0x03B85274 BL 0x1C16DFC
	0x03B85278 LDR X0, [X21]
	0x03B8527C LDR X8, [X0 + 0xB8]
	0x03B85280 LDR X8, [X8]
	0x03B85284 CBZ X8, 0x3B85494
	0x03B85288 LDR W9, [X8 + 0x18]
	0x03B8528C CMP W9, W20
	0x03B85290 B.LS 0x3B854E0
	0x03B85294 SXTW X9, W20
	0x03B85298 ADD X9, X8, X9, 0x4, LSL
	0x03B8529C LDR W8, [X9 + 0x28]
	0x03B852A0 SUB W8, W8, 0x1
	0x03B852A4 CMP W8, 0x5
	0x03B852A8 B.HI 0x3B8546C
	0x03B852AC LDR X1, [X9 + 0x20]
	0x03B852B0 ADRP X9, 0xFFFFFFFFFD012000
	0x03B852B4 ADD X9, X9, 0xD99
	0x03B852B8 ADR X10, 0x10
	0x03B852BC LDRB W11, [X9, X8, LSL]
	0x03B852C0 ADD X10, X10, X11, 0x2, LSL
	0x03B852C4 BR X10
	0x03B852C8 ADRP X8, 0x5D6000
	0x03B852CC LDR X8, [X8 + 0xFA8]
	0x03B852D0 ADD X0, X31, 0x0
	0x03B852D4 STR X31, [X31]
	0x03B852D8 LDR X2, [X8]
	0x03B852DC BL 0x2E0D4D8
	0x03B852E0 LDR X1, [X31]
	0x03B852E4 ADD X0, X31, 0x30
	0x03B852E8 ADD X2, X31, 0x2C
	0x03B852EC MOV X3, X31
	0x03B852F0 BL 0x3E641D0
	0x03B852F4 LDRB W8, [X31 + 0x2C]
	0x03B852F8 ANDS W31, W0, 0x1
	0x03B852FC CSEL W8, W8, W31, NE
	0x03B85300 B 0x3B85474
	0x03B85304 ADRP X8, 0x5D6000
	0x03B85308 LDR X8, [X8 + 0xFA0]
	0x03B8530C ADD X0, X31, 0x0
	0x03B85310 STR X31, [X31]
	0x03B85314 LDR X2, [X8]
	0x03B85318 BL 0x2E0DBC8
	0x03B8531C LDR X1, [X31]
	0x03B85320 ADD X0, X31, 0x30
	0x03B85324 ADD X2, X31, 0x28
	0x03B85328 MOV X3, X31
	0x03B8532C BL 0x3E642D8
	0x03B85330 TBZ X0, 0x0, 0x3B8546C
	0x03B85334 ADRP X8, 0xFFFFFFFFFCF65000
	0x03B85338 LDR V0, [X8 + 0xBC]
	0x03B8533C LDR V1, [X31 + 0x28]
	0x03B85340 B 0x3B85454
	0x03B85344 ADRP X8, 0x5D6000
	0x03B85348 LDR X8, [X8 + 0xF98]
	0x03B8534C ADD X0, X31, 0x0
	0x03B85350 STR X31, [X31]
	0x03B85354 LDR X2, [X8]
	0x03B85358 BL 0x2E0DF40
	0x03B8535C LDR X1, [X31]
	0x03B85360 ADD X0, X31, 0x30
	0x03B85364 ADD X2, X31, 0x20
	0x03B85368 MOV X3, X31
	0x03B8536C BL 0x3E643E0
	0x03B85370 TBZ X0, 0x0, 0x3B8546C
	0x03B85374 ADRP X8, 0xFFFFFFFFFCF65000
	0x03B85378 LDR V0, [X8 + 0xBC]
	0x03B8537C LDR V1, [X31 + 0x24]
	0x03B85380 B 0x3B85454
	0x03B85384 ADRP X8, 0x5D6000
	0x03B85388 LDR X8, [X8 + 0xF98]
	0x03B8538C ADD X0, X31, 0x0
	0x03B85390 STR X31, [X31]
	0x03B85394 LDR X2, [X8]
	0x03B85398 BL 0x2E0DF40
	0x03B8539C LDR X1, [X31]
	0x03B853A0 ADD X0, X31, 0x30
	0x03B853A4 ADD X2, X31, 0x18
	0x03B853A8 MOV X3, X31
	0x03B853AC BL 0x3E643E0
	0x03B853B0 TBZ X0, 0x0, 0x3B8546C
	0x03B853B4 ADRP X8, 0xFFFFFFFFFCF65000
	0x03B853B8 LDR V0, [X8 + 0xBC]
	0x03B853BC LDR V1, [X31 + 0x1C]
	0x03B853C0 B 0x3B85400
	0x03B853C4 ADRP X8, 0x5D6000
	0x03B853C8 LDR X8, [X8 + 0xF98]
	0x03B853CC ADD X0, X31, 0x0
	0x03B853D0 STR X31, [X31]
	0x03B853D4 LDR X2, [X8]
	0x03B853D8 BL 0x2E0DF40
	0x03B853DC LDR X1, [X31]
	0x03B853E0 ADD X0, X31, 0x30
	0x03B853E4 ADD X2, X31, 0x10
	0x03B853E8 MOV X3, X31
	0x03B853EC BL 0x3E643E0
	0x03B853F0 TBZ X0, 0x0, 0x3B8546C
	0x03B853F4 ADRP X8, 0xFFFFFFFFFCF65000
	0x03B853F8 LDR V0, [X8 + 0xBC]
	0x03B853FC LDR V1, [X31 + 0x10]
	0x03B85400 FCMP S8, 0x0
	0x03B85404 FCSEL S0, S0, S8, LT
	0x03B85408 FNEG S0, S0
	0x03B8540C FCMP S1, S0
	0x03B85410 CSET W8, LS
	0x03B85414 B 0x3B85464
	0x03B85418 ADRP X8, 0x5D6000
	0x03B8541C LDR X8, [X8 + 0xF98]
	0x03B85420 ADD X0, X31, 0x0
	0x03B85424 STR X31, [X31]
	0x03B85428 LDR X2, [X8]
	0x03B8542C BL 0x2E0DF40
	0x03B85430 LDR X1, [X31]
	0x03B85434 ADD X0, X31, 0x30
	0x03B85438 ADD X2, X31, 0x8
	0x03B8543C MOV X3, X31
	0x03B85440 BL 0x3E643E0
	0x03B85444 TBZ X0, 0x0, 0x3B8546C
	0x03B85448 ADRP X8, 0xFFFFFFFFFCF65000
	0x03B8544C LDR V0, [X8 + 0xBC]
	0x03B85450 LDR V1, [X31 + 0x8]
	0x03B85454 FCMP S8, 0x0
	0x03B85458 FCSEL S0, S0, S8, LT
	0x03B8545C FCMP S1, S0
	0x03B85460 CSET W8, GE
	0x03B85464 MOVZ W0, 0x1
	0x03B85468 B 0x3B85474
	0x03B8546C MOV W8, W31
	0x03B85470 MOV W0, W31
	0x03B85474 STRB W8, [X19]
	0x03B85478 LDP X20, X19, [X31 + 0x60]
	0x03B8547C LDP X22, X21, [X31 + 0x50]
	0x03B85480 LDR X30, [X31 + 0x48]
	0x03B85484 LDR V8, [X31 + 0x40]
	0x03B85488 AND W0, W0, 0x1
	0x03B8548C ADD X31, X31, 0x70
	0x03B85490 RET
	0x03B85494 BL 0x1C16F20
	0x03B85498 ADRP X0, 0x576000
	0x03B8549C LDR X0, [X0 + 0x578]
	0x03B854A0 BL 0x1C16D08
	0x03B854A4 BL 0x1C16F10
	0x03B854A8 MOV X19, X0
	0x03B854AC ADRP X0, 0x5D6000
	0x03B854B0 LDR X0, [X0 + 0xFB0]
	0x03B854B4 BL 0x1C16D08
	0x03B854B8 MOV X1, X0
	0x03B854BC MOV X0, X19
	0x03B854C0 MOV X2, X31
	0x03B854C4 BL 0x3314A68
	0x03B854C8 ADRP X0, 0x5D6000
	0x03B854CC LDR X0, [X0 + 0xFB8]
	0x03B854D0 BL 0x1C16D08
	0x03B854D4 MOV X1, X0
	0x03B854D8 MOV X0, X19
	0x03B854DC BL 0x1C16DEC
	0x03B854E0 BL 0x1C16F28
	0x03B854E4 SUB X31, X31, 0x70
	0x03B854E8 STR D8, [X31 + 0x40]
	0x03B854EC STR X30, [X31 + 0x48]
	0x03B854F0 STP X22, X21, [X31 + 0x50]
	0x03B854F4 STP X20, X19, [X31 + 0x60]
	0x03B854F8 ADRP X22, 0x85D000
	0x03B854FC STP X0, X1, [X31 + 0x30]
	0x03B85500 ADRP X21, 0x574000
	0x03B85504 LDRB W8, [X22 + 0xAF4]
	0x03B85508 LDR X21, [X21 + 0x8C8]
	0x03B8550C MOV X19, X3
	0x03B85510 MOV W20, W2
	0x03B85514 TBNZ X8, 0x0, 0x3B85550
	0x03B85518 ADRP X0, 0x5D6000
	0x03B8551C LDR X0, [X0 + 0xF98]
	0x03B85520 BL 0x1C16CF4
	0x03B85524 ADRP X0, 0x5D6000
	0x03B85528 LDR X0, [X0 + 0xFA0]
	0x03B8552C BL 0x1C16CF4
	0x03B85530 ADRP X0, 0x5D6000
	0x03B85534 LDR X0, [X0 + 0xFA8]
	0x03B85538 BL 0x1C16CF4
	0x03B8553C ADRP X0, 0x574000
	0x03B85540 LDR X0, [X0 + 0x8C8]
	0x03B85544 BL 0x1C16CF4
	0x03B85548 MOVZ W8, 0x1
	0x03B8554C STRB W8, [X22 + 0xAF4]
	0x03B85550 LDR X0, [X21]
	0x03B85554 STRB W31, [X31 + 0x2C]
	0x03B85558 STR W31, [X31 + 0x28]
	0x03B8555C STP X31, X31, [X31 + 0x18]
	0x03B85560 STP X31, X31, [X31 + 0x8]
	0x03B85564 LDR W8, [X0 + 0xE0]
	0x03B85568 CBNZ W8, 0x3B85574
	0x03B8556C BL 0x1C16DFC
	0x03B85570 LDR X0, [X21]
	0x03B85574 LDR X8, [X0 + 0xB8]
	0x03B85578 LDR X8, [X8]
	0x03B8557C CBZ X8, 0x3B85794
	0x03B85580 LDR W8, [X8 + 0x18]
	0x03B85584 CMP W8, W20
	0x03B85588 B.LE 0x3B85798
	0x03B8558C ADD X0, X31, 0x30
	0x03B85590 MOV X1, X31
	0x03B85594 BL 0x3E63D7C
	0x03B85598 FMOV S8, W31
	0x03B8559C TBZ X0, 0x0, 0x3B85770
	0x03B855A0 LDR X0, [X21]
	0x03B855A4 LDR W8, [X0 + 0xE0]
	0x03B855A8 CBNZ W8, 0x3B855B4
	0x03B855AC BL 0x1C16DFC
	0x03B855B0 LDR X0, [X21]
	0x03B855B4 LDR X8, [X0 + 0xB8]
	0x03B855B8 LDR X8, [X8]
	0x03B855BC CBZ X8, 0x3B85794
	0x03B855C0 LDR W9, [X8 + 0x18]
	0x03B855C4 CMP W9, W20
	0x03B855C8 B.LS 0x3B857E0
	0x03B855CC SXTW X9, W20
	0x03B855D0 ADD X9, X8, X9, 0x4, LSL
	0x03B855D4 LDR W8, [X9 + 0x28]
	0x03B855D8 SUB W8, W8, 0x1
	0x03B855DC CMP W8, 0x5
	0x03B855E0 B.HI 0x3B85770
	0x03B855E4 LDR X1, [X9 + 0x20]
	0x03B855E8 ADRP X9, 0xFFFFFFFFFD012000
	0x03B855EC ADD X9, X9, 0xD9F
	0x03B855F0 ADR X10, 0x10
	0x03B855F4 LDRB W11, [X9, X8, LSL]
	0x03B855F8 ADD X10, X10, X11, 0x2, LSL
	0x03B855FC BR X10
	0x03B85600 ADRP X8, 0x5D6000
	0x03B85604 LDR X8, [X8 + 0xFA8]
	0x03B85608 ADD X0, X31, 0x0
	0x03B8560C STR X31, [X31]
	0x03B85610 LDR X2, [X8]
	0x03B85614 BL 0x2E0D4D8
	0x03B85618 LDR X1, [X31]
	0x03B8561C ADD X0, X31, 0x30
	0x03B85620 ADD X2, X31, 0x2C
	0x03B85624 MOV X3, X31
	0x03B85628 BL 0x3E641D0
	0x03B8562C TBZ X0, 0x0, 0x3B85770
	0x03B85630 LDRB W8, [X31 + 0x2C]
	0x03B85634 FMOV S0, 1
	0x03B85638 FMOV S1, W31
	0x03B8563C CMP W8, 0x0
	0x03B85640 FCSEL S8, S1, S0, EQ
	0x03B85644 B 0x3B85768
	0x03B85648 ADRP X8, 0x5D6000
	0x03B8564C LDR X8, [X8 + 0xFA0]
	0x03B85650 ADD X0, X31, 0x0
	0x03B85654 STR X31, [X31]
	0x03B85658 LDR X2, [X8]
	0x03B8565C BL 0x2E0DBC8
	0x03B85660 LDR X1, [X31]
	0x03B85664 ADD X0, X31, 0x30
	0x03B85668 ADD X2, X31, 0x28
	0x03B8566C MOV X3, X31
	0x03B85670 BL 0x3E642D8
	0x03B85674 LDR V0, [X31 + 0x28]
	0x03B85678 ANDS W31, W0, 0x1
	0x03B8567C FMOV S1, W31
	0x03B85680 FCSEL S8, S0, S1, NE
	0x03B85684 B 0x3B85774
	0x03B85688 ADRP X8, 0x5D6000
	0x03B8568C LDR X8, [X8 + 0xF98]
	0x03B85690 ADD X0, X31, 0x0
	0x03B85694 STR X31, [X31]
	0x03B85698 LDR X2, [X8]
	0x03B8569C BL 0x2E0DF40
	0x03B856A0 LDR X1, [X31]
	0x03B856A4 ADD X0, X31, 0x30
	0x03B856A8 ADD X2, X31, 0x20
	0x03B856AC MOV X3, X31
	0x03B856B0 BL 0x3E643E0
	0x03B856B4 TBZ X0, 0x0, 0x3B85770
	0x03B856B8 LDR V8, [X31 + 0x24]
	0x03B856BC B 0x3B85768
	0x03B856C0 ADRP X8, 0x5D6000
	0x03B856C4 LDR X8, [X8 + 0xF98]
	0x03B856C8 ADD X0, X31, 0x0
	0x03B856CC STR X31, [X31]
	0x03B856D0 LDR X2, [X8]
	0x03B856D4 BL 0x2E0DF40
	0x03B856D8 LDR X1, [X31]
	0x03B856DC ADD X0, X31, 0x30
	0x03B856E0 ADD X2, X31, 0x18
	0x03B856E4 MOV X3, X31
	0x03B856E8 BL 0x3E643E0
	0x03B856EC TBZ X0, 0x0, 0x3B85770
	0x03B856F0 LDR V0, [X31 + 0x1C]
	0x03B856F4 B 0x3B8572C
	0x03B856F8 ADRP X8, 0x5D6000
	0x03B856FC LDR X8, [X8 + 0xF98]
	0x03B85700 ADD X0, X31, 0x0
	0x03B85704 STR X31, [X31]
	0x03B85708 LDR X2, [X8]
	0x03B8570C BL 0x2E0DF40
	0x03B85710 LDR X1, [X31]
	0x03B85714 ADD X0, X31, 0x30
	0x03B85718 ADD X2, X31, 0x10
	0x03B8571C MOV X3, X31
	0x03B85720 BL 0x3E643E0
	0x03B85724 TBZ X0, 0x0, 0x3B85770
	0x03B85728 LDR V0, [X31 + 0x10]
	0x03B8572C FNEG S8, S0
	0x03B85730 B 0x3B85768
	0x03B85734 ADRP X8, 0x5D6000
	0x03B85738 LDR X8, [X8 + 0xF98]
	0x03B8573C ADD X0, X31, 0x0
	0x03B85740 STR X31, [X31]
	0x03B85744 LDR X2, [X8]
	0x03B85748 BL 0x2E0DF40
	0x03B8574C LDR X1, [X31]
	0x03B85750 ADD X0, X31, 0x30
	0x03B85754 ADD X2, X31, 0x8
	0x03B85758 MOV X3, X31
	0x03B8575C BL 0x3E643E0
	0x03B85760 TBZ X0, 0x0, 0x3B85770
	0x03B85764 LDR V8, [X31 + 0x8]
	0x03B85768 MOVZ W0, 0x1
	0x03B8576C B 0x3B85774
	0x03B85770 MOV W0, W31
	0x03B85774 STR S8, [X19]
	0x03B85778 LDP X20, X19, [X31 + 0x60]
	0x03B8577C LDP X22, X21, [X31 + 0x50]
	0x03B85780 LDR X30, [X31 + 0x48]
	0x03B85784 LDR V8, [X31 + 0x40]
	0x03B85788 AND W0, W0, 0x1
	0x03B8578C ADD X31, X31, 0x70
	0x03B85790 RET
	0x03B85794 BL 0x1C16F20
	0x03B85798 ADRP X0, 0x576000
	0x03B8579C LDR X0, [X0 + 0x578]
	0x03B857A0 BL 0x1C16D08
	0x03B857A4 BL 0x1C16F10
	0x03B857A8 MOV X19, X0
	0x03B857AC ADRP X0, 0x5D6000
	0x03B857B0 LDR X0, [X0 + 0xFC0]
	0x03B857B4 BL 0x1C16D08
	0x03B857B8 MOV X1, X0
	0x03B857BC MOV X0, X19
	0x03B857C0 MOV X2, X31
	0x03B857C4 BL 0x3314A68
	0x03B857C8 ADRP X0, 0x5D6000
	0x03B857CC LDR X0, [X0 + 0xFC8]
	0x03B857D0 BL 0x1C16D08
	0x03B857D4 MOV X1, X0
	0x03B857D8 MOV X0, X19
	0x03B857DC BL 0x1C16DEC
	0x03B857E0 BL 0x1C16F28
	0x03B857E4 SUB X31, X31, 0x40
	0x03B857E8 STP X1, X30, [X31 + 0x8]
	0x03B857EC STP X22, X21, [X31 + 0x20]
	0x03B857F0 STP X20, X19, [X31 + 0x30]
	0x03B857F4 ADRP X22, 0x85D000
	0x03B857F8 STR X0, [X31]
	0x03B857FC ADRP X21, 0x574000
	0x03B85800 LDRB W8, [X22 + 0xAF5]
	0x03B85804 LDR X21, [X21 + 0x8C8]
	0x03B85808 MOV X19, X3
	0x03B8580C MOV W20, W2
	0x03B85810 TBNZ X8, 0x0, 0x3B85834
	0x03B85814 ADRP X0, 0x5D6000
	0x03B85818 LDR X0, [X0 + 0xF98]
	0x03B8581C BL 0x1C16CF4
	0x03B85820 ADRP X0, 0x574000
	0x03B85824 LDR X0, [X0 + 0x8C8]
	0x03B85828 BL 0x1C16CF4
	0x03B8582C MOVZ W8, 0x1
	0x03B85830 STRB W8, [X22 + 0xAF5]
	0x03B85834 LDR X0, [X21]
	0x03B85838 LDR W8, [X0 + 0xE0]
	0x03B8583C CBNZ W8, 0x3B85848
	0x03B85840 BL 0x1C16DFC
	0x03B85844 LDR X0, [X21]
	0x03B85848 LDR X8, [X0 + 0xB8]
	0x03B8584C LDR X8, [X8 + 0x8]
	0x03B85850 CBZ X8, 0x3B858F8
	0x03B85854 LDR W8, [X8 + 0x18]
	0x03B85858 CMP W8, W20
	0x03B8585C B.LE 0x3B858FC
	0x03B85860 ADD X0, X31, 0x0
	0x03B85864 MOV X1, X31
	0x03B85868 BL 0x3E63D7C
	0x03B8586C TBZ X0, 0x0, 0x3B858DC
	0x03B85870 LDR X0, [X21]
	0x03B85874 LDR W8, [X0 + 0xE0]
	0x03B85878 CBNZ W8, 0x3B85884
	0x03B8587C BL 0x1C16DFC
	0x03B85880 LDR X0, [X21]
	0x03B85884 LDR X8, [X0 + 0xB8]
	0x03B85888 LDR X8, [X8 + 0x8]
	0x03B8588C CBZ X8, 0x3B858F8
	0x03B85890 LDR W9, [X8 + 0x18]
	0x03B85894 CMP W9, W20

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+96], D13
	003 Move [X31+104], D12
	004 Move [X31+112], D11
	005 Move [X31+120], D10
	006 Move [X31+128], D9
	007 Move [X31+136], D8
	008 Move [X31+144], X29
	009 Move [X31+152], X30
	010 Move [X31+160], X28
	011 Move [X31+168], X27
	012 Move [X31+176], X26
	013 Move [X31+184], X25
	014 Move [X31+192], X24
	015 Move [X31+200], X23
	016 Move [X31+208], X22
	017 Move [X31+216], X21
	018 Move [X31+224], X20
	019 Move [X31+232], X19
	020 Move X20, 0x85E000
	021 Move W8, [X20+2796]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {65}
	027 Move X0, 0x5D7000
	028 Move X0, [X0+3776]
	029 Call 0x1C17CF4
	030 Move X0, 0x5D7000
	031 Move X0, [X0+3840]
	032 Call 0x1C17CF4
	033 Move X0, 0x5D7000
	034 Move X0, [X0+3784]
	035 Call 0x1C17CF4
	036 Move X0, 0x5D7000
	037 Move X0, [X0+3848]
	038 Call 0x1C17CF4
	039 Move X0, 0x5D7000
	040 Move X0, [X0+3856]
	041 Call 0x1C17CF4
	042 Move X0, 0x5D7000
	043 Move X0, [X0+3792]
	044 Call 0x1C17CF4
	045 Move X0, 0x5D7000
	046 Move X0, [X0+3824]
	047 Call 0x1C17CF4
	048 Move X0, 0x5D7000
	049 Move X0, [X0+3808]
	050 Call 0x1C17CF4
	051 Move X0, 0x5D7000
	052 Move X0, [X0+3864]
	053 Call 0x1C17CF4
	054 Move X0, 0x5D7000
	055 Move X0, [X0+3872]
	056 Call 0x1C17CF4
	057 Move X0, 0x5D7000
	058 Move X0, [X0+3880]
	059 Call 0x1C17CF4
	060 Move X0, 0x56F000
	061 Move X0, [X0+1432]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+2796], W8
	065 Move [X31+64], X31
	066 Move [X31+72], X31
	067 Move [X31+80], X31
	068 Move [X31+32], X31
	069 Move [X31+40], X31
	070 Move [X31+48], X31
	071 Move X0, [X19+48]
	072 Compare X0, 0
	073 JumpIfEqual {391}
	074 Move W8, [X0+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, 0x5D7000
	077 Move X8, [X8+3864]
	078 Move X23, 0x5D7000
	079 Move X24, 0x56F000
	080 Move X22, 0x5D7000
	081 Move X1, [X8]
	082 Move X23, [X23+3848]
	083 Move X24, [X24+1432]
	084 Move X22, [X22+3840]
	085 Add X8, X31, 8
	086 Call List`1<Object>.GetEnumerator, X0
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X8, [X31+24]
	089 Move [X31+4], V0
	090 Move [X31+80], X8
	091 Move X1, [X23]
	092 Add X0, X31, 64
	093 Call Enumerator<Object>.MoveNext, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {130}
	098 Move X20, [X31+80]
	099 Compare X20, 0
	100 JumpIfEqual {387}
	101 Move W8, [X20+24]
	102 Compare W8, 0
	103 JumpIfEqual {91}
	104 Move X0, [X24]
	105 Move X21, [X20+16]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X21
	111 Move X1, X31
	112 Move X2, X31
	113 Call Object.op_Equality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {91}
	118 Compare X21, 0
	119 JumpIfEqual {390}
	120 Move W8, [X21+56]
	121 Subtract W9, W8, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X19
	125 Move X1, X20
	126 Call TunnelingVignetteController.EndTunnelingVignette, X0, X1
	127 Move X0, X19
	128 Move X1, X20
	129 Call TunnelingVignetteController.BeginTunnelingVignette, X0, X1
	130 Move X1, [X22]
	131 Add X0, X31, 64
	132 Call Enumerator<Object>.Dispose, X0
	133 Move X0, [X19+56]
	134 Compare X0, 0
	135 JumpIfEqual {391}
	136 Move W8, [X0+24]
	137 Compare W8, 0
	138 JumpIfEqual {366}
	139 Move X25, 0x5D7000
	140 Move X25, [X25+3808]
	141 Move X24, 0x5D7000
	142 Move X23, 0x5D7000
	143 Add X8, X31, 8
	144 Move X1, [X25]
	145 Move X24, [X24+3784]
	146 Move X23, [X23+3824]
	147 Call List`1<Object>.GetEnumerator, X0
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 Move X8, [X31+24]
	150 Move X21, -50253824
	151 Add X21, X21, 3476
	152 Move W26, 0x3F800000
	153 Move S8, W31
	154 Move S9, -1
	155 Move W27, 1
	156 Move W28, 3
	157 Move W29, 4
	158 Move [X31+2], V0
	159 Move [X31+48], X8
	160 Move S10, 1
	161 Move X1, [X24]
	162 Add X0, X31, 32
	163 Call Enumerator<Object>.MoveNext, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {291}
	168 Move X22, [X31+48]
	169 Compare X22, 0
	170 JumpIfEqual {388}
	171 Move X20, [X22+16]
	172 Compare X20, 0
	173 JumpIfEqual {389}
	174 Move X8, [X20]
	175 Move X1, [X23]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X20
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X1, [X0+8]
	193 Move X0, X20
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move X20, X0
	196 Compare X0, 0
	197 JumpIfNotEqual {199}
	198 Move X20, [X19+32]
	199 Move W8, [X22+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move V11, [X22+28]
	202 NotImplemented "Instruction ADR not yet implemented."
	203 Move W10, [X21]
	204 Add X9, X9, X10
	205 CallNoReturn X9
	206 Move [X22+28], W26
	207 Move [X22+36], W31
	208 Move [X22+32], W31
	209 Compare X20, 0
	210 JumpIfNotEqual {234}
	211 Move W8, [X22+32]
	212 Compare W8, 0
	213 JumpIfEqual {269}
	214 Compare X20, 0
	215 JumpIfEqual {395}
	216 Move V0, [X20+36]
	217 Move [X22+24], W28
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 Compare X20, 0
	220 JumpIfEqual {393}
	221 Move V0, [X20+36]
	222 Move V13, [X22+36]
	223 NotImplemented "Instruction FCMP not yet implemented."
	224 NotImplemented "Instruction FCSEL not yet implemented."
	225 NotImplemented "Instruction FCMP not yet implemented."
	226 Move X0, X31
	227 Call Time.get_unscaledDeltaTime
	228 Add S0, S13, S0
	229 NotImplemented "Instruction FCMP not yet implemented."
	230 NotImplemented "Instruction FCSEL not yet implemented."
	231 Move [X22+36], S13
	232 NotImplemented "Instruction FCMP not yet implemented."
	233 Move [X22+24], W29
	234 Move V0, [X20+28]
	235 NotImplemented "Instruction FCMP not yet implemented."
	236 NotImplemented "Instruction FCSEL not yet implemented."
	237 NotImplemented "Instruction FCMP not yet implemented."
	238 NotImplemented "Instruction FCMP not yet implemented."
	239 Move V13, [X20+16]
	240 Move X0, X31
	241 Call Time.get_unscaledDeltaTime
	242 Subtract S1, S10, S13
	243 NotImplemented "Instruction FDIV not yet implemented."
	244 Multiply S0, S1, S0
	245 Add S0, S11, S0
	246 NotImplemented "Instruction FMIN not yet implemented."
	247 NotImplemented "Instruction FCMP not yet implemented."
	248 Move [X22+28], S0
	249 Move [X22+28], W26
	250 Move [X22+24], W31
	251 Compare X20, 0
	252 JumpIfEqual {394}
	253 Move V0, [X20+24]
	254 Move V12, [X20+16]
	255 Move [X22+32], W31
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 NotImplemented "Instruction FCSEL not yet implemented."
	258 NotImplemented "Instruction FCMP not yet implemented."
	259 Move X0, X31
	260 Call Time.get_unscaledDeltaTime
	261 Add S1, S12, S9
	262 NotImplemented "Instruction FDIV not yet implemented."
	263 Multiply S0, S1, S0
	264 Add S0, S11, S0
	265 NotImplemented "Instruction FCMP not yet implemented."
	266 NotImplemented "Instruction FCSEL not yet implemented."
	267 Move [X22+28], S0
	268 Move [X22+28], S12
	269 Compare X20, 0
	270 JumpIfEqual {396}
	271 Move V0, [X20+24]
	272 NotImplemented "Instruction FCMP not yet implemented."
	273 NotImplemented "Instruction FCSEL not yet implemented."
	274 Move V13, [X20+16]
	275 NotImplemented "Instruction FCMP not yet implemented."
	276 Move X0, X31
	277 Call Time.get_unscaledDeltaTime
	278 Add S1, S13, S9
	279 NotImplemented "Instruction FDIV not yet implemented."
	280 Multiply S0, S1, S0
	281 Add S0, S11, S0
	282 NotImplemented "Instruction FCMP not yet implemented."
	283 NotImplemented "Instruction FCSEL not yet implemented."
	284 Move [X22+28], S0
	285 Move [X22+32], W27
	286 Move V0, [X20+36]
	287 NotImplemented "Instruction FCMP not yet implemented."
	288 Move V1, [X22+36]
	289 NotImplemented "Instruction FCMP not yet implemented."
	290 Move [X22+24], W28
	291 Move X20, 0x5D7000
	292 Move X20, [X20+3776]
	293 Add X0, X31, 32
	294 Move X1, [X20]
	295 Call Enumerator<Object>.Dispose, X0
	296 Move X0, [X19+56]
	297 Compare X0, 0
	298 JumpIfEqual {391}
	299 Move X1, [X25]
	300 Add X8, X31, 8
	301 Call List`1<Object>.GetEnumerator, X0
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 Move X9, [X31+24]
	304 Move X8, X31
	305 Move [X31+2], V0
	306 Move [X31+48], X9
	307 Move S0, 1
	308 Move V8, V0
	309 Move X22, X8
	310 Move X1, [X24]
	311 Add X0, X31, 32
	312 Call Enumerator<Object>.MoveNext, X0
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfNotEqual {322}
	317 Move X8, [X31+48]
	318 Compare X8, 0
	319 JumpIfEqual {386}
	320 Move V0, [X8+28]
	321 NotImplemented "Instruction FCMP not yet implemented."
	322 Move X1, [X20]
	323 Add X0, X31, 32
	324 Call Enumerator<Object>.Dispose, X0
	325 Compare X22, 0
	326 JumpIfEqual {360}
	327 Move X21, [X22+16]
	328 Compare X21, 0
	329 JumpIfEqual {391}
	330 Move X8, [X21]
	331 Move X20, [X19+40]
	332 Move X1, [X23]
	333 NotImplemented "Instruction LDRH not yet implemented."
	334 Compare X9, 0
	335 JumpIfEqual {342}
	336 Move X10, [X8+176]
	337 Add X10, X10, 8
	338 NotImplemented "Instruction LDUR not yet implemented."
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Subtract X9, X9, 1
	341 Add X10, X10, 16
	342 Move X0, X21
	343 Move W2, W31
	344 Call 0x1C5D788
	345 NotImplemented "Instruction LDRSW not yet implemented."
	346 Add X8, X8, X9
	347 Add X0, X8, 312
	348 Move X8, [X0]
	349 Move X1, [X0+8]
	350 Move X0, X21
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move X1, X0
	353 Compare X0, 0
	354 JumpIfNotEqual {356}
	355 Move X1, [X19+32]
	356 Compare X20, 0
	357 JumpIfEqual {391}
	358 Move X0, X20
	359 Call VignetteParameters.CopyFrom, X0, X1
	360 Move X1, [X19+40]
	361 Compare X1, 0
	362 JumpIfEqual {391}
	363 Move X0, X19
	364 Move [X1+16], S8
	365 Call TunnelingVignetteController.UpdateTunnelingVignette, X0, X1
	366 Move X20, [X31+224]
	367 Move X19, [X31+232]
	368 Move X22, [X31+208]
	369 Move X21, [X31+216]
	370 Move X24, [X31+192]
	371 Move X23, [X31+200]
	372 Move X26, [X31+176]
	373 Move X25, [X31+184]
	374 Move X28, [X31+160]
	375 Move X27, [X31+168]
	376 Move X29, [X31+144]
	377 Move X30, [X31+152]
	378 Move D9, [X31+128]
	379 Move D8, [X31+136]
	380 Move D11, [X31+112]
	381 Move D10, [X31+120]
	382 Move D13, [X31+96]
	383 Move D12, [X31+104]
	384 Add X31, X31, 240
	385 Return 
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Move X20, X0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, X20
	400 Call 0x3EB2AD0
	401 Move X21, [X0]
	402 Call 0x3EB2AE0
	403 Move X1, [X22]
	404 Add X0, X31, 64
	405 Call Enumerator<Object>.Dispose, X0
	406 Compare X21, 0
	407 JumpIfEqual {133}
	408 Move X21, X31
	409 Move X20, X0
	410 Move X1, [X22]
	411 Add X0, X31, 64
	412 Call Enumerator<Object>.Dispose, X0
	413 Compare X21, 0
	414 JumpIfEqual {465}
	415 Move X0, X21
	416 Call 0x1C17F18
	417 Move X20, X0
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Move X0, X20
	420 Call 0x3EB2AD0
	421 Move X21, [X0]
	422 Call 0x3EB2AE0
	423 Move X8, 0x5D7000
	424 Move X8, [X8+3776]
	425 Add X0, X31, 32
	426 Move X1, [X8]
	427 Call Enumerator<Object>.Dispose, X0
	428 Compare X21, 0
	429 JumpIfEqual {325}
	430 Move X21, X31
	431 Move X20, X0
	432 Move X8, 0x5D7000
	433 Move X8, [X8+3776]
	434 Move X1, [X8]
	435 Add X0, X31, 32
	436 Call Enumerator<Object>.Dispose, X0
	437 Compare X21, 0
	438 JumpIfEqual {465}
	439 Move X0, X21
	440 Call 0x1C17F18
	441 Move X20, X0
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move X0, X20
	444 Call 0x3EB2AD0
	445 Move X21, [X0]
	446 Call 0x3EB2AE0
	447 Move X20, 0x5D7000
	448 Move X20, [X20+3776]
	449 Add X0, X31, 32
	450 Move X1, [X20]
	451 Call Enumerator<Object>.Dispose, X0
	452 Compare X21, 0
	453 JumpIfEqual {296}
	454 Move X0, X21
	455 Call 0x1C17F18
	456 Move X21, X31
	457 Move X20, X0
	458 Move X8, 0x5D7000
	459 Move X8, [X8+3776]
	460 Move X1, [X8]
	461 Add X0, X31, 32
	462 Call Enumerator<Object>.Dispose, X0
	463 Compare X21, 0
	464 JumpIfNotEqual {467}
	465 Move X0, X20
	466 Call 0x1D2D690
	467 Move X0, X21
	468 Call 0x1C17F18
	469 Call 0x1991590

Method: System.Void UpdateTunnelingVignette(UnityEngine.XR.Interaction.Toolkit.VignetteParameters parameters)

Disassembly:
	0x03B84E44 LDR X8, [X19]
	0x03B84E48 LDP X20, X19, [X31 + 0x30]
	0x03B84E4C LDP X22, X21, [X31 + 0x20]
	0x03B84E50 LDP X24, X23, [X31 + 0x10]
	0x03B84E54 LDR X8, [X8 + 0xB8]
	0x03B84E58 STR W0, [X8 + 0xC]
	0x03B84E5C LDR X30, [X31], #0x40
	0x03B84E60 RET
	0x03B84E64 LDR X0, [X0 + 0x10]
	0x03B84E68 RET
	0x03B84E6C LDR W0, [X0 + 0x18]
	0x03B84E70 RET
	0x03B84E74 STR W1, [X0 + 0x18]
	0x03B84E78 RET
	0x03B84E7C LDR V0, [X0 + 0x1C]
	0x03B84E80 RET
	0x03B84E84 STR S0, [X0 + 0x1C]
	0x03B84E88 RET
	0x03B84E8C LDRB W0, [X0 + 0x20]
	0x03B84E90 RET
	0x03B84E94 AND W8, W1, 0x1
	0x03B84E98 STRB W8, [X0 + 0x20]
	0x03B84E9C RET
	0x03B84EA0 LDR V0, [X0 + 0x24]
	0x03B84EA4 RET
	0x03B84EA8 STR S0, [X0 + 0x24]
	0x03B84EAC RET
	0x03B84EB0 SUB X31, X31, 0x70
	0x03B84EB4 STP D15, D14, [X31 + 0x20]
	0x03B84EB8 STP D13, D12, [X31 + 0x30]
	0x03B84EBC STP D11, D10, [X31 + 0x40]
	0x03B84EC0 STP D9, D8, [X31 + 0x50]
	0x03B84EC4 STR X30, [X31 + 0x60]
	0x03B84EC8 MOV V10.16B, V0.16B
	0x03B84ECC STR S0, [X31 + 0x1C]
	0x03B84ED0 FMOV S0, 0.5
	0x03B84ED4 MOV V11.16B, V6.16B
	0x03B84ED8 MOV V12.16B, V5.16B
	0x03B84EDC FMUL S8, S7, S0
	0x03B84EE0 MOV V13.16B, V4.16B
	0x03B84EE4 MOV V14.16B, V3.16B
	0x03B84EE8 MOV V9.16B, V2.16B
	0x03B84EEC MOV V15.16B, V1.16B
	0x03B84EF0 FNMUL S6, S7, S0
	0x03B84EF4 FMOV S5, W31
	0x03B84EF8 MOV V0.16B, V3.16B
	0x03B84EFC MOV V1.16B, V4.16B
	0x03B84F00 MOV V2.16B, V12.16B
	0x03B84F04 MOV V3.16B, V11.16B
	0x03B84F08 MOV V4.16B, V8.16B
	0x03B84F0C MOV X0, X31
	0x03B84F10 STR S6, [X31 + 0x18]
	0x03B84F14 BL 0x3C2A9FC
	0x03B84F18 FADD S0, S10, S0
	0x03B84F1C STP S0, S15, [X31 + 0xC]
	0x03B84F20 FADD S7, S15, S1
	0x03B84F24 FADD S0, S9, S2
	0x03B84F28 STP S0, S7, [X31 + 0x4]
	0x03B84F2C FMOV S5, W31
	0x03B84F30 MOV V0.16B, V14.16B
	0x03B84F34 MOV V1.16B, V13.16B
	0x03B84F38 MOV V2.16B, V12.16B
	0x03B84F3C MOV V3.16B, V11.16B
	0x03B84F40 MOV V4.16B, V8.16B
	0x03B84F44 MOV V6.16B, V8.16B
	0x03B84F48 MOV X0, X31
	0x03B84F4C MOV V10.16B, V15.16B
	0x03B84F50 MOV V15.16B, V11.16B
	0x03B84F54 STR S11, [X31 + 0x68]
	0x03B84F58 BL 0x3C2A9FC
	0x03B84F5C LDR V11, [X31 + 0x1C]
	0x03B84F60 FADD S4, S10, S1
	0x03B84F64 FADD S5, S9, S2
	0x03B84F68 LDR V2, [X31 + 0x4]
	0x03B84F6C FADD S3, S11, S0
	0x03B84F70 LDP S1, S0, [X31 + 0x8]
	0x03B84F74 MOV X0, X31
	0x03B84F78 BL 0x3C0CB04
	0x03B84F7C FMOV S5, W31
	0x03B84F80 MOV V0.16B, V14.16B
	0x03B84F84 MOV V1.16B, V13.16B
	0x03B84F88 MOV V2.16B, V12.16B
	0x03B84F8C MOV V3.16B, V15.16B
	0x03B84F90 MOV V4.16B, V8.16B
	0x03B84F94 MOV V6.16B, V8.16B
	0x03B84F98 MOV X0, X31
	0x03B84F9C STR S8, [X31 + 0x6C]
	0x03B84FA0 BL 0x3C2A9FC
	0x03B84FA4 MOV V10.16B, V11.16B
	0x03B84FA8 FADD S7, S11, S0
	0x03B84FAC LDR V11, [X31 + 0x10]
	0x03B84FB0 MOV V3.16B, V15.16B
	0x03B84FB4 LDR V8, [X31 + 0x18]
	0x03B84FB8 LDR V15, [X31 + 0x6C]
	0x03B84FBC FADD S0, S11, S1
	0x03B84FC0 STP S0, S7, [X31 + 0x8]
	0x03B84FC4 FADD S0, S9, S2
	0x03B84FC8 STR S0, [X31 + 0x4]
	0x03B84FCC FMOV S5, W31
	0x03B84FD0 MOV V0.16B, V14.16B
	0x03B84FD4 MOV V1.16B, V13.16B
	0x03B84FD8 MOV V2.16B, V12.16B
	0x03B84FDC MOV V4.16B, V8.16B
	0x03B84FE0 MOV V6.16B, V15.16B
	0x03B84FE4 MOV X0, X31
	0x03B84FE8 STR S14, [X31 + 0x14]
	0x03B84FEC BL 0x3C2A9FC
	0x03B84FF0 FADD S3, S10, S0
	0x03B84FF4 FADD S4, S11, S1
	0x03B84FF8 FADD S5, S9, S2
	0x03B84FFC LDP S1, S0, [X31 + 0x8]
	0x03B85000 LDR V2, [X31 + 0x4]
	0x03B85004 MOV X0, X31
	0x03B85008 MOV V10.16B, V9.16B
	0x03B8500C BL 0x3C0CB04
	0x03B85010 MOV V2.16B, V12.16B
	0x03B85014 MOV V9.16B, V12.16B
	0x03B85018 LDR V12, [X31 + 0x68]
	0x03B8501C FMOV S5, W31
	0x03B85020 MOV V0.16B, V14.16B
	0x03B85024 MOV V1.16B, V13.16B
	0x03B85028 MOV V3.16B, V12.16B
	0x03B8502C MOV V4.16B, V8.16B
	0x03B85030 MOV V6.16B, V15.16B
	0x03B85034 MOV X0, X31
	0x03B85038 BL 0x3C2A9FC
	0x03B8503C LDR V15, [X31 + 0x1C]
	0x03B85040 FMOV S5, W31
	0x03B85044 MOV V3.16B, V12.16B

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x85F000
	011 Move W8, [X21+2797]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x5D8000
	019 Move X0, [X0+3832]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2797], W8
	023 Compare X19, 0
	024 JumpIfNotEqual {26}
	025 Move X19, [X20+32]
	026 Move X0, X20
	027 Call TunnelingVignetteController.TrySetUpMaterial, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {96}
	032 Move X0, [X20+64]
	033 Compare X0, 0
	034 JumpIfEqual {163}
	035 Move X1, [X20+88]
	036 Move X2, X31
	037 Call Renderer.GetPropertyBlock, X0, X1
	038 Move X22, 0x5D8000
	039 Move X22, [X22+3832]
	040 Move X21, [X20+88]
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Compare X19, 0
	048 JumpIfEqual {163}
	049 Compare X21, 0
	050 JumpIfEqual {163}
	051 Move X8, [X0+184]
	052 Move V0, [X19+16]
	053 Move X0, X21
	054 Move X2, X31
	055 Move W1, [X8]
	056 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	057 Move X0, [X20+88]
	058 Compare X0, 0
	059 JumpIfEqual {163}
	060 Move X8, [X22]
	061 Move V0, [X19+20]
	062 Move X2, X31
	063 Move X8, [X8+184]
	064 Move W1, [X8+4]
	065 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	066 Move X0, [X20+88]
	067 Compare X0, 0
	068 JumpIfEqual {163}
	069 Move X8, [X22]
	070 Move S2, [X19+48]
	071 Move S3, [X19+52]
	072 Move S0, [X19+40]
	073 Move S1, [X19+44]
	074 Move X2, X31
	075 Move X8, [X8+184]
	076 Move W1, [X8+8]
	077 Call MaterialPropertyBlock.SetColor, X0, X1, X2
	078 Move X0, [X20+88]
	079 Compare X0, 0
	080 JumpIfEqual {163}
	081 Move X8, [X22]
	082 Move S2, [X19+64]
	083 Move S3, [X19+68]
	084 Move S0, [X19+56]
	085 Move S1, [X19+60]
	086 Move X2, X31
	087 Move X8, [X8+184]
	088 Move W1, [X8+12]
	089 Call MaterialPropertyBlock.SetColor, X0, X1, X2
	090 Move X0, [X20+64]
	091 Compare X0, 0
	092 JumpIfEqual {163}
	093 Move X1, [X20+88]
	094 Move X2, X31
	095 Call Renderer.SetPropertyBlock, X0, X1
	096 Move X0, X20
	097 Move X1, X31
	098 Call Component.get_transform, X0
	099 Compare X0, 0
	100 JumpIfEqual {163}
	101 Move X1, X31
	102 Move X20, X0
	103 Call Transform.get_localPosition, X0
	104 Compare X19, 0
	105 JumpIfEqual {163}
	106 Move X21, 0x856000
	107 Move W8, [X21+1450]
	108 Move V11, [X19+72]
	109 Move V8, V0
	110 Move V10, V1
	111 Move V9, V2
	112 Compare W8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, 0x577000
	115 Move X0, [X0+1208]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X21+1450], W8
	119 Move X8, 0x577000
	120 Move X8, [X8+1208]
	121 Move X9, -50958336
	122 Move V0, [X9+576]
	123 NotImplemented "Instruction FABS not yet implemented."
	124 Move X8, [X8]
	125 NotImplemented "Instruction FABS not yet implemented."
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 NotImplemented "Instruction FCSEL not yet implemented."
	128 Move X8, [X8+184]
	129 Multiply S0, S1, S0
	130 Move S1, 8
	131 Move V3, [X8]
	132 Multiply S1, S3, S1
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 NotImplemented "Instruction FCSEL not yet implemented."
	135 NotImplemented "Instruction FABD not yet implemented."
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 Move V1, [X19+72]
	138 Move X0, X20
	139 Move V0, V8
	140 Move V2, V9
	141 Move X20, [X31+64]
	142 Move X19, [X31+72]
	143 Move X22, [X31+48]
	144 Move X21, [X31+56]
	145 Move X30, [X31+32]
	146 Move D9, [X31+16]
	147 Move D8, [X31+24]
	148 Move X1, X31
	149 Move D11, [X31+80]
	150 Move D10, [X31+88]
	151 Call Transform.set_localPosition, X0, X1
	152 Return 
	153 Move X20, [X31+64]
	154 Move X19, [X31+72]
	155 Move X22, [X31+48]
	156 Move X21, [X31+56]
	157 Move X30, [X31+32]
	158 Move D9, [X31+16]
	159 Move D8, [X31+24]
	160 Move D11, [X31+80]
	161 Move D10, [X31+88]
	162 Return 
	163 Call 0x1C17F20

Method: System.Boolean TrySetUpMaterial()

Disassembly:
	0x03B85898 B.LS 0x3B85944
	0x03B8589C ADRP X9, 0x5D6000
	0x03B858A0 LDR X9, [X9 + 0xF98]
	0x03B858A4 ADD X8, X8, W20, 0x3, SXTW
	0x03B858A8 LDR X1, [X8 + 0x20]
	0x03B858AC ADD X0, X31, 0x18
	0x03B858B0 LDR X2, [X9]
	0x03B858B4 STR X31, [X31 + 0x18]
	0x03B858B8 BL 0x2E0DF40
	0x03B858BC LDR X1, [X31 + 0x18]
	0x03B858C0 ADD X0, X31, 0x0
	0x03B858C4 MOV X2, X19
	0x03B858C8 MOV X3, X31
	0x03B858CC BL 0x3E643E0
	0x03B858D0 TBZ X0, 0x0, 0x3B858DC
	0x03B858D4 MOVZ W0, 0x1
	0x03B858D8 B 0x3B858E4
	0x03B858DC MOV W0, W31
	0x03B858E0 STR X31, [X19]
	0x03B858E4 LDP X20, X19, [X31 + 0x30]
	0x03B858E8 LDP X22, X21, [X31 + 0x20]
	0x03B858EC LDR X30, [X31 + 0x10]
	0x03B858F0 ADD X31, X31, 0x40
	0x03B858F4 RET
	0x03B858F8 BL 0x1C16F20
	0x03B858FC ADRP X0, 0x576000
	0x03B85900 LDR X0, [X0 + 0x578]
	0x03B85904 BL 0x1C16D08
	0x03B85908 BL 0x1C16F10
	0x03B8590C MOV X19, X0
	0x03B85910 ADRP X0, 0x5D6000
	0x03B85914 LDR X0, [X0 + 0xFD0]
	0x03B85918 BL 0x1C16D08
	0x03B8591C MOV X1, X0
	0x03B85920 MOV X0, X19
	0x03B85924 MOV X2, X31
	0x03B85928 BL 0x3314A68
	0x03B8592C ADRP X0, 0x5D6000
	0x03B85930 LDR X0, [X0 + 0xFD8]
	0x03B85934 BL 0x1C16D08
	0x03B85938 MOV X1, X0
	0x03B8593C MOV X0, X19
	0x03B85940 BL 0x1C16DEC
	0x03B85944 BL 0x1C16F28
	0x03B85948 STR X30, [X31 - 0x30]!
	0x03B8594C STP X22, X21, [X31 + 0x10]
	0x03B85950 STP X20, X19, [X31 + 0x20]
	0x03B85954 ADRP X19, 0x85D000
	0x03B85958 ADRP X20, 0x5D6000
	0x03B8595C LDRB W8, [X19 + 0xAF6]
	0x03B85960 LDR X20, [X20 + 0xFE0]
	0x03B85964 TBNZ X8, 0x0, 0x3B85A54
	0x03B85968 ADRP X0, 0x5D6000
	0x03B8596C LDR X0, [X0 + 0xFE0]
	0x03B85970 BL 0x1C16CF4
	0x03B85974 ADRP X0, 0x574000
	0x03B85978 LDR X0, [X0 + 0x8C8]
	0x03B8597C BL 0x1C16CF4
	0x03B85980 ADRP X0, 0x56E000
	0x03B85984 LDR X0, [X0 + 0xAC8]
	0x03B85988 BL 0x1C16CF4
	0x03B8598C ADRP X0, 0x5D6000
	0x03B85990 LDR X0, [X0 + 0xFE8]
	0x03B85994 BL 0x1C16CF4
	0x03B85998 ADRP X0, 0x5D6000
	0x03B8599C LDR X0, [X0 + 0xFF0]
	0x03B859A0 BL 0x1C16CF4
	0x03B859A4 ADRP X0, 0x5D6000
	0x03B859A8 LDR X0, [X0 + 0xFF8]
	0x03B859AC BL 0x1C16CF4
	0x03B859B0 ADRP X0, 0x5D7000
	0x03B859B4 LDR X0, [X0]
	0x03B859B8 BL 0x1C16CF4
	0x03B859BC ADRP X0, 0x5D7000
	0x03B859C0 LDR X0, [X0 + 0x8]
	0x03B859C4 BL 0x1C16CF4
	0x03B859C8 ADRP X0, 0x5D7000
	0x03B859CC LDR X0, [X0 + 0x10]
	0x03B859D0 BL 0x1C16CF4
	0x03B859D4 ADRP X0, 0x5D7000
	0x03B859D8 LDR X0, [X0 + 0x18]
	0x03B859DC BL 0x1C16CF4
	0x03B859E0 ADRP X0, 0x5D7000
	0x03B859E4 LDR X0, [X0 + 0x20]
	0x03B859E8 BL 0x1C16CF4
	0x03B859EC ADRP X0, 0x5D7000
	0x03B859F0 LDR X0, [X0 + 0x28]
	0x03B859F4 BL 0x1C16CF4
	0x03B859F8 ADRP X0, 0x5C4000
	0x03B859FC LDR X0, [X0 + 0x9F0]
	0x03B85A00 BL 0x1C16CF4
	0x03B85A04 ADRP X0, 0x5D7000
	0x03B85A08 LDR X0, [X0 + 0x30]
	0x03B85A0C BL 0x1C16CF4
	0x03B85A10 ADRP X0, 0x5D7000
	0x03B85A14 LDR X0, [X0 + 0x38]
	0x03B85A18 BL 0x1C16CF4
	0x03B85A1C ADRP X0, 0x5D7000
	0x03B85A20 LDR X0, [X0 + 0x40]
	0x03B85A24 BL 0x1C16CF4
	0x03B85A28 ADRP X0, 0x56E000
	0x03B85A2C LDR X0, [X0 + 0x988]
	0x03B85A30 BL 0x1C16CF4
	0x03B85A34 ADRP X0, 0x5D7000
	0x03B85A38 LDR X0, [X0 + 0x48]
	0x03B85A3C BL 0x1C16CF4
	0x03B85A40 ADRP X0, 0x5D7000
	0x03B85A44 LDR X0, [X0 + 0x50]
	0x03B85A48 BL 0x1C16CF4
	0x03B85A4C MOVZ W8, 0x1
	0x03B85A50 STRB W8, [X19 + 0xAF6]
	0x03B85A54 LDR X0, [X20]
	0x03B85A58 MOVZ W1, 0x16
	0x03B85A5C BL 0x1C16D6C
	0x03B85A60 CBZ X0, 0x3B85D14
	0x03B85A64 LDR W8, [X0 + 0x18]
	0x03B85A68 CBZ W8, 0x3B85D10
	0x03B85A6C ADRP X19, 0x56E000
	0x03B85A70 LDR X19, [X19 + 0x988]
	0x03B85A74 CMP W8, 0x1
	0x03B85A78 LDR X9, [X19]
	0x03B85A7C STP X9, X31, [X0 + 0x20]
	0x03B85A80 B.EQ 0x3B85D10
	0x03B85A84 ADRP X9, 0x5D7000
	0x03B85A88 LDR X9, [X9 + 0x30]
	0x03B85A8C MOVZ W10, 0x1
	0x03B85A90 CMP W8, 0x2
	0x03B85A94 LDR X9, [X9]
	0x03B85A98 STP X9, X10, [X0 + 0x30]
	0x03B85A9C B.LS 0x3B85D10
	0x03B85AA0 ADRP X9, 0x5C4000
	0x03B85AA4 LDR X9, [X9 + 0x9F0]
	0x03B85AA8 MOVZ W10, 0x2
	0x03B85AAC CMP W8, 0x3
	0x03B85AB0 LDR X9, [X9]
	0x03B85AB4 STP X9, X10, [X0 + 0x40]
	0x03B85AB8 B.EQ 0x3B85D10
	0x03B85ABC ADRP X9, 0x5D7000
	0x03B85AC0 LDR X9, [X9 + 0x28]
	0x03B85AC4 MOVZ W10, 0x2
	0x03B85AC8 CMP W8, 0x4
	0x03B85ACC LDR X9, [X9]
	0x03B85AD0 STP X9, X10, [X0 + 0x50]
	0x03B85AD4 B.LS 0x3B85D10
	0x03B85AD8 ADRP X9, 0x5D7000
	0x03B85ADC LDR X9, [X9 + 0x8]
	0x03B85AE0 MOVZ W10, 0x1
	0x03B85AE4 CMP W8, 0x5
	0x03B85AE8 LDR X9, [X9]
	0x03B85AEC STP X9, X10, [X0 + 0x60]
	0x03B85AF0 B.EQ 0x3B85D10
	0x03B85AF4 ADRP X9, 0x5D7000
	0x03B85AF8 LDR X9, [X9 + 0x18]
	0x03B85AFC MOVZ W10, 0x1
	0x03B85B00 CMP W8, 0x6
	0x03B85B04 LDR X9, [X9]
	0x03B85B08 STP X9, X10, [X0 + 0x70]
	0x03B85B0C B.LS 0x3B85D10
	0x03B85B10 ADRP X9, 0x5D7000
	0x03B85B14 LDR X9, [X9 + 0x10]
	0x03B85B18 MOVZ W10, 0x1
	0x03B85B1C CMP W8, 0x7
	0x03B85B20 LDR X9, [X9]
	0x03B85B24 STP X9, X10, [X0 + 0x80]
	0x03B85B28 B.EQ 0x3B85D10
	0x03B85B2C ADRP X9, 0x5D7000
	0x03B85B30 LDR X9, [X9 + 0x50]
	0x03B85B34 MOVZ W10, 0x1
	0x03B85B38 CMP W8, 0x8
	0x03B85B3C LDR X9, [X9]
	0x03B85B40 STP X9, X10, [X0 + 0x90]
	0x03B85B44 B.LS 0x3B85D10
	0x03B85B48 ADRP X9, 0x5D7000
	0x03B85B4C LDR X9, [X9 + 0x48]
	0x03B85B50 MOVZ W10, 0x1
	0x03B85B54 CMP W8, 0x9
	0x03B85B58 LDR X9, [X9]
	0x03B85B5C STP X9, X10, [X0 + 0xA0]
	0x03B85B60 B.EQ 0x3B85D10
	0x03B85B64 ADRP X9, 0x5D6000
	0x03B85B68 LDR X9, [X9 + 0xFF8]
	0x03B85B6C MOVZ W10, 0x1
	0x03B85B70 CMP W8, 0xA
	0x03B85B74 LDR X9, [X9]
	0x03B85B78 STP X9, X10, [X0 + 0xB0]
	0x03B85B7C B.LS 0x3B85D10
	0x03B85B80 ADRP X9, 0x5D7000
	0x03B85B84 LDR X9, [X9 + 0x40]
	0x03B85B88 MOVZ W10, 0x1
	0x03B85B8C CMP W8, 0xB
	0x03B85B90 LDR X9, [X9]
	0x03B85B94 STP X9, X10, [X0 + 0xC0]
	0x03B85B98 B.EQ 0x3B85D10
	0x03B85B9C ADRP X9, 0x5D7000
	0x03B85BA0 LDR X9, [X9 + 0x38]
	0x03B85BA4 MOVZ W10, 0x1
	0x03B85BA8 CMP W8, 0xC
	0x03B85BAC LDR X9, [X9]
	0x03B85BB0 STP X9, X10, [X0 + 0xD0]
	0x03B85BB4 B.LS 0x3B85D10
	0x03B85BB8 ADRP X9, 0x5D6000
	0x03B85BBC LDR X9, [X9 + 0xFF0]
	0x03B85BC0 MOVZ W10, 0x1
	0x03B85BC4 CMP W8, 0xD
	0x03B85BC8 LDR X9, [X9]
	0x03B85BCC STP X9, X10, [X0 + 0xE0]
	0x03B85BD0 B.EQ 0x3B85D10
	0x03B85BD4 ADRP X9, 0x5D6000
	0x03B85BD8 LDR X9, [X9 + 0xFE8]
	0x03B85BDC MOVZ W10, 0x1
	0x03B85BE0 CMP W8, 0xE
	0x03B85BE4 LDR X9, [X9]
	0x03B85BE8 STP X9, X10, [X0 + 0xF0]
	0x03B85BEC B.LS 0x3B85D10
	0x03B85BF0 ADRP X20, 0x5D7000
	0x03B85BF4 LDR X20, [X20]
	0x03B85BF8 MOVZ W10, 0x3
	0x03B85BFC CMP W8, 0xF
	0x03B85C00 LDR X9, [X20]
	0x03B85C04 STP X9, X10, [X0 + 0x100]
	0x03B85C08 B.EQ 0x3B85D10
	0x03B85C0C LDR X9, [X20]
	0x03B85C10 MOVZ W10, 0x4
	0x03B85C14 CMP W8, 0x10
	0x03B85C18 STP X9, X10, [X0 + 0x110]
	0x03B85C1C B.LS 0x3B85D10
	0x03B85C20 LDR X9, [X20]
	0x03B85C24 MOVZ W10, 0x5
	0x03B85C28 CMP W8, 0x11
	0x03B85C2C STP X9, X10, [X0 + 0x120]
	0x03B85C30 B.EQ 0x3B85D10
	0x03B85C34 LDR X9, [X20]
	0x03B85C38 MOVZ W10, 0x6
	0x03B85C3C CMP W8, 0x12
	0x03B85C40 STP X9, X10, [X0 + 0x130]
	0x03B85C44 B.LS 0x3B85D10
	0x03B85C48 ADRP X21, 0x5D7000
	0x03B85C4C LDR X21, [X21 + 0x20]
	0x03B85C50 MOVZ W10, 0x3
	0x03B85C54 CMP W8, 0x13
	0x03B85C58 LDR X9, [X21]
	0x03B85C5C STP X9, X10, [X0 + 0x140]
	0x03B85C60 B.EQ 0x3B85D10
	0x03B85C64 LDR X9, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x85E000
	006 Move X21, 0x56F000
	007 Move W8, [X20+2798]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {55}
	014 Move X0, 0x576000
	015 Move X0, [X0+2872]
	016 Call 0x1C17CF4
	017 Move X0, 0x576000
	018 Move X0, [X0+2880]
	019 Call 0x1C17CF4
	020 Move X0, 0x56F000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x576000
	024 Move X0, [X0+1776]
	025 Call 0x1C17CF4
	026 Move X0, 0x576000
	027 Move X0, [X0+1784]
	028 Call 0x1C17CF4
	029 Move X0, 0x5CC000
	030 Move X0, [X0+1424]
	031 Call 0x1C17CF4
	032 Move X0, 0x573000
	033 Move X0, [X0+3232]
	034 Call 0x1C17CF4
	035 Move X0, 0x56F000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x5D7000
	039 Move X0, [X0+3888]
	040 Call 0x1C17CF4
	041 Move X0, 0x5D7000
	042 Move X0, [X0+3896]
	043 Call 0x1C17CF4
	044 Move X0, 0x5D7000
	045 Move X0, [X0+3904]
	046 Call 0x1C17CF4
	047 Move X0, 0x5D7000
	048 Move X0, [X0+3912]
	049 Call 0x1C17CF4
	050 Move X0, 0x5D7000
	051 Move X0, [X0+3920]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+2798], W8
	055 Move X0, [X21]
	056 Move X20, [X19+64]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {76}
	069 Move X8, 0x576000
	070 Move X8, [X8+2880]
	071 Move X0, X19
	072 Move X1, [X8]
	073 Call 0x21A4894, X0
	074 Move X20, X0
	075 Move [X19+64], X0
	076 Move X20, [X19+64]
	077 Move X0, [X21]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X20
	083 Move X1, X31
	084 Move X2, X31
	085 Call Object.op_Equality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {100}
	090 Move X0, X19
	091 Move X1, X31
	092 Call Component.get_gameObject, X0
	093 Compare X0, 0
	094 JumpIfEqual {286}
	095 Move X8, 0x576000
	096 Move X8, [X8+1784]
	097 Move X1, [X8]
	098 Call 0x21E61FC, X0
	099 Move [X19+64], X0
	100 Move X8, [X19+88]
	101 Compare X8, 0
	102 JumpIfNotEqual {111}
	103 Move X8, 0x5CC000
	104 Move X8, [X8+1424]
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X1, X31
	108 Move X20, X0
	109 Call MaterialPropertyBlock..ctor, X0
	110 Move [X19+88], X20
	111 Move X0, [X21]
	112 Move X20, [X19+72]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X20
	118 Move X1, X31
	119 Move X2, X31
	120 Call Object.op_Equality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {132}
	125 Move X8, 0x576000
	126 Move X8, [X8+2872]
	127 Move X0, X19
	128 Move X1, [X8]
	129 Call 0x21A4894, X0
	130 Move X20, X0
	131 Move [X19+72], X0
	132 Move X20, [X19+72]
	133 Move X0, [X21]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X20
	139 Move X1, X31
	140 Move X2, X31
	141 Call Object.op_Equality, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {156}
	146 Move X0, X19
	147 Move X1, X31
	148 Call Component.get_gameObject, X0
	149 Compare X0, 0
	150 JumpIfEqual {286}
	151 Move X8, 0x576000
	152 Move X8, [X8+1776]
	153 Move X1, [X8]
	154 Call 0x21E61FC, X0
	155 Move [X19+72], X0
	156 Move X0, [X19+72]
	157 Compare X0, 0
	158 JumpIfEqual {286}
	159 Move X1, X31
	160 Call MeshFilter.get_sharedMesh, X0
	161 Move X8, [X21]
	162 Move X20, X0
	163 Move W9, [X8+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {168}
	166 Move X0, X8
	167 Call 0x1C17DFC
	168 Move X0, X20
	169 Move X1, X31
	170 Move X2, X31
	171 Call Object.op_Equality, X0, X1
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {190}
	176 Move X8, 0x56F000
	177 Move X8, [X8+2600]
	178 Move X0, [X8]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X8, 0x5D7000
	184 Move X8, [X8+3920]
	185 Move X0, [X8]
	186 Move X1, X19
	187 Move X2, X31
	188 Call Debug.LogWarning, X0, X1
	189 Move W0, W31
	190 Move X0, [X19+64]
	191 Compare X0, 0
	192 JumpIfEqual {286}
	193 Move X1, X31
	194 Call Renderer.get_sharedMaterial, X0
	195 Move X8, [X21]
	196 Move X20, X0
	197 Move W9, [X8+224]
	198 Compare W9, 0
	199 JumpIfNotEqual {202}
	200 Move X0, X8
	201 Call 0x1C17DFC
	202 Move X0, X20
	203 Move X1, X31
	204 Move X2, X31
	205 Call Object.op_Equality, X0, X1
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {239}
	210 Move X8, 0x5D7000
	211 Move X8, [X8+3896]
	212 Move X1, X31
	213 Move X0, [X8]
	214 Call Shader.Find, X0
	215 Move X8, [X21]
	216 Move X20, X0
	217 Move W9, [X8+224]
	218 Compare W9, 0
	219 JumpIfNotEqual {222}
	220 Move X0, X8
	221 Call 0x1C17DFC
	222 Move X0, X20
	223 Move X1, X31
	224 Move X2, X31
	225 Call Object.op_Equality, X0, X1
	226 Move X8, 0x56F000
	227 Move X8, [X8+2600]
	228 Move W21, W0
	229 Move X8, [X8]
	230 Move W9, [X8+224]
	231 Compare W9, 0
	232 JumpIfEqual {245}
	233 Move TEMP, X21
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {251}
	237 Move X8, 0x5D7000
	238 Move X8, [X8+3904]
	239 Move X0, [X19+64]
	240 Compare X0, 0
	241 JumpIfEqual {286}
	242 Move X1, X31
	243 Call Renderer.get_sharedMaterial, X0
	244 Move [X19+80], X0
	245 Move X0, X8
	246 Call 0x1C17DFC
	247 Move TEMP, X21
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {237}
	251 Move X8, 0x5D7000
	252 Move X8, [X8+3888]
	253 Move X1, X19
	254 Move X2, X31
	255 Move X0, [X8]
	256 Call Debug.LogWarning, X0, X1
	257 Move X8, 0x573000
	258 Move X8, [X8+3232]
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X1, X20
	262 Move X2, X31
	263 Move X21, X0
	264 Call Material..ctor, X0, X1
	265 Compare X21, 0
	266 JumpIfEqual {286}
	267 Move X8, 0x5D7000
	268 Move X8, [X8+3912]
	269 Move X0, X21
	270 Move X2, X31
	271 Move X1, [X8]
	272 Call Object.set_name, X0, X1
	273 Move X0, [X19+64]
	274 Move [X19+80], X21
	275 Compare X0, 0
	276 JumpIfEqual {286}
	277 Move X1, X21
	278 Move X2, X31
	279 Call Renderer.set_sharedMaterial, X0, X1
	280 Move W0, 1
	281 Move X20, [X31+16]
	282 Move X19, [X31+24]
	283 Move X30, [X31+32]
	284 Move X21, [X31+40]
	285 Return X0
	286 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B85C68 MOVZ W10, 0x4
	0x03B85C6C CMP W8, 0x14
	0x03B85C70 STP X9, X10, [X0 + 0x150]
	0x03B85C74 B.LS 0x3B85D10
	0x03B85C78 LDR X9, [X21]
	0x03B85C7C MOVZ W10, 0x5
	0x03B85C80 CMP W8, 0x15
	0x03B85C84 STP X9, X10, [X0 + 0x160]
	0x03B85C88 B.EQ 0x3B85D10
	0x03B85C8C LDR X8, [X21]
	0x03B85C90 ADRP X22, 0x574000
	0x03B85C94 LDR X22, [X22 + 0x8C8]
	0x03B85C98 MOVZ W9, 0x6
	0x03B85C9C STP X8, X9, [X0 + 0x170]
	0x03B85CA0 ADRP X9, 0x56E000
	0x03B85CA4 LDR X8, [X22]
	0x03B85CA8 MOVZ W1, 0x3
	0x03B85CAC LDR X8, [X8 + 0xB8]
	0x03B85CB0 LDR X9, [X9 + 0xAC8]
	0x03B85CB4 STR X0, [X8]
	0x03B85CB8 LDR X0, [X9]
	0x03B85CBC BL 0x1C16D6C
	0x03B85CC0 CBZ X0, 0x3B85D14
	0x03B85CC4 LDR W8, [X0 + 0x18]
	0x03B85CC8 CBZ W8, 0x3B85D10
	0x03B85CCC LDR X9, [X19]
	0x03B85CD0 CMP W8, 0x1
	0x03B85CD4 STR X9, [X0 + 0x20]
	0x03B85CD8 B.EQ 0x3B85D10
	0x03B85CDC LDR X9, [X20]
	0x03B85CE0 CMP W8, 0x2
	0x03B85CE4 STR X9, [X0 + 0x28]
	0x03B85CE8 B.LS 0x3B85D10
	0x03B85CEC LDR X8, [X21]
	0x03B85CF0 LDP X20, X19, [X31 + 0x20]
	0x03B85CF4 STR X8, [X0 + 0x30]
	0x03B85CF8 LDR X8, [X22]
	0x03B85CFC LDP X22, X21, [X31 + 0x10]
	0x03B85D00 LDR X8, [X8 + 0xB8]
	0x03B85D04 STR X0, [X8 + 0x8]
	0x03B85D08 LDR X30, [X31], #0x30
	0x03B85D0C RET
	0x03B85D10 BL 0x1C16F28
	0x03B85D14 BL 0x1C16F20
	0x03B85D18 STR X1, [X0]
	0x03B85D1C STR W2, [X0 + 0x8]
	0x03B85D20 RET
	0x03B85D24 SUB X31, X31, 0xA0
	0x03B85D28 STR D8, [X31 + 0x40]
	0x03B85D2C STR X30, [X31 + 0x48]
	0x03B85D30 STP X28, X27, [X31 + 0x50]
	0x03B85D34 STP X26, X25, [X31 + 0x60]
	0x03B85D38 STP X24, X23, [X31 + 0x70]
	0x03B85D3C STP X22, X21, [X31 + 0x80]
	0x03B85D40 STP X20, X19, [X31 + 0x90]
	0x03B85D44 ADRP X21, 0x85D000
	0x03B85D48 LDRB W8, [X21 + 0xAF7]
	0x03B85D4C MOV X19, X2
	0x03B85D50 MOV X22, X1
	0x03B85D54 MOV X20, X0
	0x03B85D58 TBNZ X8, 0x0, 0x3B85E30
	0x03B85D5C ADRP X0, 0x5D5000
	0x03B85D60 LDR X0, [X0 + 0xD58]
	0x03B85D64 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x85E000
	010 Move X25, 0x5D7000
	011 Move X24, 0x5D7000
	012 Move X23, 0x5D7000
	013 Move X22, 0x5D7000
	014 Move X21, 0x5D7000
	015 Move W8, [X20+2799]
	016 Move X25, [X25+3768]
	017 Move X24, [X24+3928]
	018 Move X23, [X23+3936]
	019 Move X22, [X22+3944]
	020 Move X21, [X21+3952]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x5D7000
	027 Move X0, [X0+3936]
	028 Call 0x1C17CF4
	029 Move X0, 0x5D7000
	030 Move X0, [X0+3952]
	031 Call 0x1C17CF4
	032 Move X0, 0x5D7000
	033 Move X0, [X0+3944]
	034 Call 0x1C17CF4
	035 Move X0, 0x5D7000
	036 Move X0, [X0+3928]
	037 Call 0x1C17CF4
	038 Move X0, 0x5D7000
	039 Move X0, [X0+3768]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2799], W8
	043 Move X0, [X25]
	044 Call 0x1C17F10
	045 Move X20, X0
	046 Call VignetteParameters..ctor, X0
	047 Move [X19+32], X20
	048 Move X0, [X25]
	049 Call 0x1C17F10
	050 Move X20, X0
	051 Call VignetteParameters..ctor, X0
	052 Move [X19+40], X20
	053 Move X0, [X24]
	054 Call 0x1C17F10
	055 Move X1, [X23]
	056 Move X20, X0
	057 Call List`1<Object>..ctor, X0
	058 Move [X19+48], X20
	059 Move X0, [X22]
	060 Call 0x1C17F10
	061 Move X1, [X21]
	062 Move X20, X0
	063 Call List`1<Object>..ctor, X0
	064 Move [X19+56], X20
	065 Move X0, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X1, X31
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Call MonoBehaviour..ctor, X0
	076 Return 

