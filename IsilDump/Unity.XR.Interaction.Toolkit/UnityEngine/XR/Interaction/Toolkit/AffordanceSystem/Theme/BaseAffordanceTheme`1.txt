Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.BaseAffordanceTheme`1

Method: UnityEngine.AnimationCurve get_animationCurve()

Disassembly:
	0x026473EC LDR X8, [X8 + 0xC0]
	0x026473F0 LDR X0, [X8 + 0x18]
	0x026473F4 LDRB W8, [X0 + 0x135]
	0x026473F8 TBNZ X8, 0x0, 0x2647400
	0x026473FC BL 0x1C5C684
	0x02647400 BL 0x1C16F10
	0x02647404 LDR X8, [X20]
	0x02647408 MOV X22, X0
	0x0264740C LDR X8, [X8 + 0xC0]
	0x02647410 LDR X1, [X8 + 0x20]
	0x02647414 BL 0x2A79D70
	0x02647418 CBZ X22, 0x26475DC
	0x0264741C ADRP X8, 0x1AD6000
	0x02647420 LDR X8, [X8 + 0x570]
	0x02647424 LDR X8, [X8]
	0x02647428 STR X8, [X22 + 0x10]
	0x0264742C LDR X8, [X20]
	0x02647430 LDR W10, [X21 + 0x1C]
	0x02647434 LDR X9, [X8 + 0xC0]
	0x02647438 LDR X8, [X21 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1D94000
	005 Move W8, [X20+280]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1AD7000
	012 Move X0, [X0+1344]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+280], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x1AD7000
	020 Move X8, [X8+1344]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call DatumProperty`2<Object, Object>.get_Value, X0
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0264743C ADD W10, W10, 0x1
	0x02647440 LDR X9, [X9 + 0x28]
	0x02647444 STR W10, [X21 + 0x1C]
	0x02647448 CBZ X8, 0x26475DC
	0x0264744C LDRSW X10, [X21 + 0x18]
	0x02647450 LDR W11, [X8 + 0x18]
	0x02647454 CMP W10, W11
	0x02647458 B.CS 0x2647470
	0x0264745C ADD W9, W10, 0x1
	0x02647460 ADD X8, X8, X10, 0x3, LSL
	0x02647464 STR W9, [X21 + 0x18]
	0x02647468 STR X22, [X8 + 0x20]
	0x0264746C B 0x2647488
	0x02647470 LDR X8, [X9 + 0x20]
	0x02647474 MOV X0, X21
	0x02647478 MOV X1, X22
	0x0264747C LDR X8, [X8 + 0xC0]
	0x02647480 LDR X2, [X8 + 0x70]
	0x02647484 BL 0x301BF90
	0x02647488 LDR X8, [X20]
	0x0264748C LDR X8, [X8 + 0xC0]
	0x02647490 LDR X0, [X8 + 0x18]
	0x02647494 LDRB W8, [X0 + 0x135]
	0x02647498 TBNZ X8, 0x0, 0x26474A0
	0x0264749C BL 0x1C5C684
	0x026474A0 BL 0x1C16F10
	0x026474A4 LDR X8, [X20]
	0x026474A8 MOV X22, X0
	0x026474AC LDR X8, [X8 + 0xC0]
	0x026474B0 LDR X1, [X8 + 0x20]
	0x026474B4 BL 0x2A79D70
	0x026474B8 CBZ X22, 0x26475DC
	0x026474BC ADRP X8, 0x1AD6000
	0x026474C0 LDR X8, [X8 + 0x558]
	0x026474C4 LDR X8, [X8]
	0x026474C8 STR X8, [X22 + 0x10]
	0x026474CC LDR X8, [X20]
	0x026474D0 LDR W10, [X21 + 0x1C]
	0x026474D4 LDR X9, [X8 + 0xC0]
	0x026474D8 LDR X8, [X21 + 0x10]
	0x026474DC ADD W10, W10, 0x1
	0x026474E0 LDR X9, [X9 + 0x28]
	0x026474E4 STR W10, [X21 + 0x1C]
	0x026474E8 CBZ X8, 0x26475DC
	0x026474EC LDRSW X10, [X21 + 0x18]
	0x026474F0 LDR W11, [X8 + 0x18]
	0x026474F4 CMP W10, W11
	0x026474F8 B.CS 0x2647510
	0x026474FC ADD W9, W10, 0x1
	0x02647500 ADD X8, X8, X10, 0x3, LSL
	0x02647504 STR W9, [X21 + 0x18]
	0x02647508 STR X22, [X8 + 0x20]
	0x0264750C B 0x2647528
	0x02647510 LDR X8, [X9 + 0x20]
	0x02647514 MOV X0, X21
	0x02647518 MOV X1, X22
	0x0264751C LDR X8, [X8 + 0xC0]
	0x02647520 LDR X2, [X8 + 0x70]
	0x02647524 BL 0x301BF90
	0x02647528 LDR X8, [X20]
	0x0264752C LDR X8, [X8 + 0xC0]
	0x02647530 LDR X0, [X8 + 0x18]
	0x02647534 LDRB W8, [X0 + 0x135]
	0x02647538 TBNZ X8, 0x0, 0x2647540
	0x0264753C BL 0x1C5C684
	0x02647540 BL 0x1C16F10
	0x02647544 LDR X8, [X20]
	0x02647548 MOV X22, X0
	0x0264754C LDR X8, [X8 + 0xC0]
	0x02647550 LDR X1, [X8 + 0x20]
	0x02647554 BL 0x2A79D70
	0x02647558 CBZ X22, 0x26475DC
	0x0264755C ADRP X8, 0x1AD6000
	0x02647560 LDR X8, [X8 + 0x560]
	0x02647564 LDR X8, [X8]
	0x02647568 STR X8, [X22 + 0x10]
	0x0264756C LDR X8, [X20]
	0x02647570 LDR W10, [X21 + 0x1C]
	0x02647574 LDR X9, [X8 + 0xC0]
	0x02647578 LDR X8, [X21 + 0x10]
	0x0264757C ADD W10, W10, 0x1
	0x02647580 LDR X9, [X9 + 0x28]
	0x02647584 STR W10, [X21 + 0x1C]
	0x02647588 CBZ X8, 0x26475DC
	0x0264758C LDRSW X10, [X21 + 0x18]
	0x02647590 LDR W11, [X8 + 0x18]
	0x02647594 CMP W10, W11
	0x02647598 B.CS 0x26475B0
	0x0264759C ADD W9, W10, 0x1
	0x026475A0 ADD X8, X8, X10, 0x3, LSL
	0x026475A4 STR W9, [X21 + 0x18]
	0x026475A8 STR X22, [X8 + 0x20]
	0x026475AC B 0x26475C8
	0x026475B0 LDR X8, [X9 + 0x20]
	0x026475B4 MOV X0, X21
	0x026475B8 MOV X1, X22
	0x026475BC LDR X8, [X8 + 0xC0]
	0x026475C0 LDR X2, [X8 + 0x70]
	0x026475C4 BL 0x301BF90
	0x026475C8 STR X21, [X19 + 0x18]
	0x026475CC LDP X20, X19, [X31 + 0x20]
	0x026475D0 LDP X22, X21, [X31 + 0x10]
	0x026475D4 LDR X30, [X31], #0x30
	0x026475D8 RET
	0x026475DC BL 0x1C16F20
	0x026475E0 STR X30, [X31 - 0x60]!
	0x026475E4 STP X28, X27, [X31 + 0x10]
	0x026475E8 STP X26, X25, [X31 + 0x20]
	0x026475EC STP X24, X23, [X31 + 0x30]
	0x026475F0 STP X22, X21, [X31 + 0x40]
	0x026475F4 STP X20, X19, [X31 + 0x50]
	0x026475F8 ADRP X21, 0x1D93000
	0x026475FC LDRB W8, [X21 + 0x11F]
	0x02647600 MOV X19, X1
	0x02647604 MOV X20, X0
	0x02647608 TBNZ X8, 0x0, 0x2647650
	0x0264760C ADRP X0, 0x1AD6000
	0x02647610 LDR X0, [X0 + 0x4F0]
	0x02647614 BL 0x1C16CF4
	0x02647618 ADRP X0, 0x1AAD000
	0x0264761C LDR X0, [X0 + 0x9D8]
	0x02647620 BL 0x1C16CF4
	0x02647624 ADRP X0, 0x1AAC000
	0x02647628 LDR X0, [X0 + 0xA28]
	0x0264762C BL 0x1C16CF4
	0x02647630 ADRP X0, 0x1AB2000
	0x02647634 LDR X0, [X0 + 0x4E8]
	0x02647638 BL 0x1C16CF4
	0x0264763C ADRP X0, 0x1AD6000
	0x02647640 LDR X0, [X0 + 0x580]
	0x02647644 BL 0x1C16CF4
	0x02647648 MOVZ W8, 0x1
	0x0264764C STRB W8, [X21 + 0x11F]
	0x02647650 LDR X8, [X20 + 0x18]
	0x02647654 CBZ X8, 0x26478A0
	0x02647658 ADRP X24, 0x1AD6000
	0x0264765C LDR X24, [X24 + 0x4F0]
	0x02647660 LDR W21, [X8 + 0x18]
	0x02647664 LDR X0, [X24]
	0x02647668 LDR W9, [X0 + 0xE0]
	0x0264766C CBNZ W9, 0x2647674
	0x02647670 BL 0x1C16DFC
	0x02647674 ADRP X22, 0x1D93000
	0x02647678 LDRB W8, [X22 + 0x138]
	0x0264767C CBNZ W8, 0x2647694
	0x02647680 ADRP X0, 0x1AD6000
	0x02647684 LDR X0, [X0 + 0x4F0]
	0x02647688 BL 0x1C16CF4
	0x0264768C MOVZ W8, 0x1
	0x02647690 STRB W8, [X22 + 0x138]
	0x02647694 LDR X0, [X24]
	0x02647698 LDR W8, [X0 + 0xE0]
	0x0264769C CBNZ W8, 0x26476A8
	0x026476A0 BL 0x1C16DFC
	0x026476A4 LDR X0, [X24]
	0x026476A8 LDR X8, [X0 + 0xB8]
	0x026476AC LDRB W8, [X8 + 0x18]
	0x026476B0 SUB W22, W8, W21
	0x026476B4 CMP W22, 0x1
	0x026476B8 B.LT 0x26478A0
	0x026476BC CMP W21, 0x1
	0x026476C0 B.LE 0x26476E8
	0x026476C4 LDR X0, [X20 + 0x18]
	0x026476C8 CBZ X0, 0x26478BC
	0x026476CC LDR X8, [X19 + 0x20]
	0x026476D0 MOVZ W1, 0x1
	0x026476D4 LDR X8, [X8 + 0xC0]
	0x026476D8 LDR X2, [X8 + 0x38]
	0x026476DC BL 0x301BCCC
	0x026476E0 MOV X21, X0
	0x026476E4 B 0x264772C
	0x026476E8 LDR X8, [X19 + 0x20]
	0x026476EC LDR X8, [X8 + 0xC0]
	0x026476F0 LDR X0, [X8 + 0x18]
	0x026476F4 LDRB W8, [X0 + 0x135]
	0x026476F8 TBNZ X8, 0x0, 0x2647700
	0x026476FC BL 0x1C5C684
	0x02647700 BL 0x1C16F10
	0x02647704 LDR X8, [X19 + 0x20]
	0x02647708 MOV X21, X0
	0x0264770C LDR X8, [X8 + 0xC0]
	0x02647710 LDR X1, [X8 + 0x20]
	0x02647714 BL 0x2A79D70
	0x02647718 CBZ X21, 0x26478BC
	0x0264771C ADRP X8, 0x1AB2000
	0x02647720 LDR X8, [X8 + 0x4E8]
	0x02647724 LDR X8, [X8]
	0x02647728 STR X8, [X21 + 0x10]
	0x0264772C ADRP X26, 0x1AAD000
	0x02647730 ADRP X27, 0x1AD6000
	0x02647734 ADRP X28, 0x1AAC000
	0x02647738 LDR X26, [X26 + 0x9D8]
	0x0264773C LDR X27, [X27 + 0x580]
	0x02647740 LDR X28, [X28 + 0xA28]
	0x02647744 ADD W25, W22, 0x1
	0x02647748 LDR X8, [X19 + 0x20]
	0x0264774C LDR X8, [X8 + 0xC0]
	0x02647750 LDR X0, [X8 + 0x18]
	0x02647754 LDRB W8, [X0 + 0x135]
	0x02647758 TBNZ X8, 0x0, 0x2647760
	0x0264775C BL 0x1C5C684
	0x02647760 BL 0x1C16F10
	0x02647764 LDR X8, [X19 + 0x20]
	0x02647768 MOV X22, X0
	0x0264776C LDR X8, [X8 + 0xC0]
	0x02647770 LDR X1, [X8 + 0x20]
	0x02647774 BL 0x2A79D70
	0x02647778 CBZ X21, 0x26478BC
	0x0264777C CBZ X22, 0x26478BC
	0x02647780 LDR X8, [X21 + 0x10]
	0x02647784 STR X8, [X22 + 0x10]
	0x02647788 LDR V0, [X21 + 0x18]
	0x0264778C STR D0, [X22 + 0x18]
	0x02647790 LDR X0, [X20 + 0x18]
	0x02647794 CBZ X0, 0x26478BC
	0x02647798 LDR X8, [X19 + 0x20]
	0x0264779C LDR W10, [X0 + 0x1C]
	0x026477A0 LDR X9, [X8 + 0xC0]
	0x026477A4 LDR X8, [X0 + 0x10]
	0x026477A8 ADD W10, W10, 0x1
	0x026477AC LDR X9, [X9 + 0x28]
	0x026477B0 STR W10, [X0 + 0x1C]
	0x026477B4 CBZ X8, 0x26478BC
	0x026477B8 LDRSW X10, [X0 + 0x18]
	0x026477BC LDR W11, [X8 + 0x18]
	0x026477C0 CMP W10, W11
	0x026477C4 B.CS 0x26477DC
	0x026477C8 ADD W9, W10, 0x1
	0x026477CC ADD X8, X8, X10, 0x3, LSL
	0x026477D0 STR W9, [X0 + 0x18]
	0x026477D4 STR X22, [X8 + 0x20]
	0x026477D8 B 0x26477F0
	0x026477DC LDR X8, [X9 + 0x20]
	0x026477E0 MOV X1, X22
	0x026477E4 LDR X8, [X8 + 0xC0]
	0x026477E8 LDR X2, [X8 + 0x70]
	0x026477EC BL 0x301BF90
	0x026477F0 LDR X8, [X20 + 0x18]
	0x026477F4 CBZ X8, 0x26478BC
	0x026477F8 LDR X0, [X24]
	0x026477FC LDR W8, [X8 + 0x18]
	0x02647800 LDR W9, [X0 + 0xE0]
	0x02647804 SUB W22, W8, 0x1
	0x02647808 CBNZ W9, 0x2647810
	0x0264780C BL 0x1C16DFC
	0x02647810 MOV W0, W22
	0x02647814 MOV X1, X31
	0x02647818 BL 0x3BCC0B4
	0x0264781C LDR X8, [X20 + 0x18]
	0x02647820 CBZ X8, 0x26478BC
	0x02647824 LDR X9, [X19 + 0x20]
	0x02647828 MOV X23, X0
	0x0264782C AND W1, W22, 0xFF
	0x02647830 MOV X0, X8
	0x02647834 LDR X9, [X9 + 0xC0]
	0x02647838 LDR X2, [X9 + 0x38]
	0x0264783C BL 0x301BCCC
	0x02647840 CBZ X0, 0x26478BC
	0x02647844 STR X23, [X0 + 0x10]
	0x02647848 LDR X0, [X26]
	0x0264784C ADD X1, X31, 0xC
	0x02647850 STRB W22, [X31 + 0xC]
	0x02647854 BL 0x1C16E04
	0x02647858 LDR X8, [X27]
	0x0264785C MOV X1, X0
	0x02647860 MOV X2, X23
	0x02647864 MOV X3, X31
	0x02647868 MOV X0, X8
	0x0264786C BL 0x3227BD4
	0x02647870 LDR X8, [X28]
	0x02647874 MOV X22, X0
	0x02647878 LDR W9, [X8 + 0xE0]
	0x0264787C CBNZ W9, 0x2647888
	0x02647880 MOV X0, X8
	0x02647884 BL 0x1C16DFC
	0x02647888 MOV X0, X22
	0x0264788C MOV X1, X31
	0x02647890 BL 0x3C06A04
	0x02647894 SUB W25, W25, 0x1
	0x02647898 CMP W25, 0x1
	0x0264789C B.GT 0x2647748
	0x026478A0 LDP X20, X19, [X31 + 0x50]
	0x026478A4 LDP X22, X21, [X31 + 0x40]
	0x026478A8 LDP X24, X23, [X31 + 0x30]
	0x026478AC LDP X26, X25, [X31 + 0x20]
	0x026478B0 LDP X28, X27, [X31 + 0x10]
	0x026478B4 LDR X30, [X31], #0x60
	0x026478B8 RET
	0x026478BC BL 0x1C16F20
	0x026478C0 STR X30, [X31 - 0x10]!
	0x026478C4 LDR X0, [X0 + 0x18]
	0x026478C8 CBZ X0, 0x26478FC
	0x026478CC LDR W8, [X0 + 0x18]
	0x026478D0 CMP W8, W1, UXTB
	0x026478D4 B.LE 0x26478F0
	0x026478D8 LDR X8, [X2 + 0x20]
	0x026478DC AND W1, W1, 0xFF
	0x026478E0 LDR X8, [X8 + 0xC0]
	0x026478E4 LDR X2, [X8 + 0x38]
	0x026478E8 LDR X30, [X31], #0x10
	0x026478EC B 0x301BCCC
	0x026478F0 MOV X0, X31
	0x026478F4 LDR X30, [X31], #0x10
	0x026478F8 RET
	0x026478FC BL 0x1C16F20
	0x02647900 STP X30, X21, [X31 - 0x20]!
	0x02647904 STP X20, X19, [X31 + 0x10]
	0x02647908 MOV X21, X0
	0x0264790C LDR X0, [X0 + 0x18]
	0x02647910 CBZ X0, 0x2647964
	0x02647914 MOV X20, X2
	0x02647918 LDP W2, W8, [X0 + 0x18]
	0x0264791C MOV X19, X1
	0x02647920 ADD W8, W8, 0x1
	0x02647924 CMP W2, 0x1
	0x02647928 STP W31, W8, [X0 + 0x18]
	0x0264792C B.LT 0x2647948
	0x02647930 LDR X0, [X0 + 0x10]
	0x02647934 MOV W1, W31
	0x02647938 MOV X3, X31
	0x0264793C BL 0x339FA34
	0x02647940 LDR X0, [X21 + 0x18]
	0x02647944 CBZ X0, 0x2647964
	0x02647948 LDR X8, [X20 + 0x20]
	0x0264794C MOV X1, X19
	0x02647950 LDP X20, X19, [X31 + 0x10]
	0x02647954 LDR X8, [X8 + 0xC0]
	0x02647958 LDR X2, [X8 + 0x50]
	0x0264795C LDP X30, X21, [X31], #0x20
	0x02647960 B 0x301C194
	0x02647964 BL 0x1C16F20
	0x02647968 STR X30, [X31 - 0x30]!
	0x0264796C STP X22, X21, [X31 + 0x10]
	0x02647970 STP X20, X19, [X31 + 0x20]
	0x02647974 CBZ X1, 0x26479D8
	0x02647978 LDR X8, [X2 + 0x20]
	0x0264797C MOV X19, X0
	0x02647980 LDR X22, [X1 + 0x18]
	0x02647984 MOV X21, X2
	0x02647988 LDR X8, [X8 + 0xC0]
	0x0264798C MOV X20, X1
	0x02647990 LDR X0, [X8 + 0x8]
	0x02647994 LDRB W8, [X0 + 0x135]
	0x02647998 TBNZ X8, 0x0, 0x26479A0
	0x0264799C BL 0x1C5C684
	0x026479A0 BL 0x1C16F10
	0x026479A4 LDR X8, [X21 + 0x20]
	0x026479A8 MOV X1, X22
	0x026479AC MOV X21, X0
	0x026479B0 LDR X8, [X8 + 0xC0]
	0x026479B4 LDR X2, [X8 + 0x60]
	0x026479B8 BL 0x301B8E0
	0x026479BC STR X21, [X19 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D94000
	007 Move X21, 0x1AD7000
	008 Move W8, [X22+281]
	009 Move X21, [X21+1352]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x1AD7000
	017 Move X0, [X0+1352]
	018 Call 0x1C17CF4
	019 Move X0, 0x1AB3000
	020 Move X0, [X0+1256]
	021 Call 0x1C17CF4
	022 Move X0, 0x1AD7000
	023 Move X0, [X0+1360]
	024 Call 0x1C17CF4
	025 Move X0, 0x1AD7000
	026 Move X0, [X0+1368]
	027 Call 0x1C17CF4
	028 Move X0, 0x1AD7000
	029 Move X0, [X0+1376]
	030 Call 0x1C17CF4
	031 Move X0, 0x1AD7000
	032 Move X0, [X0+1384]
	033 Call 0x1C17CF4
	034 Move X0, 0x1AD7000
	035 Move X0, [X0+1392]
	036 Call 0x1C17CF4
	037 Move X0, 0x1AD7000
	038 Move X0, [X0+1400]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+281], W8
	042 Move S0, W31
	043 Move S1, W31
	044 Move S2, 1
	045 Move S3, 1
	046 Move X0, X31
	047 Call AnimationCurve.EaseInOut, V0, V1, V2, V3
	048 Move X8, [X21]
	049 Move X21, X0
	050 Move X0, X8
	051 Call 0x1C17F10
	052 Move X1, X21
	053 Move X2, X31
	054 Move X22, X0
	055 Call AnimationCurveDatumProperty..ctor, X0, X1
	056 Move X0, X19
	057 Move X1, X31
	058 Move [X19+16], X22
	059 Call Object..ctor, X0
	060 Add X20, X20, 32
	061 Move X8, [X20]
	062 Move X8, [X8+192]
	063 Move X0, [X8+8]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Call 0x1C17F10
	071 Move X8, [X20]
	072 Move X21, X0
	073 Move X8, [X8+192]
	074 Move X1, [X8+16]
	075 Call List`1<Object>..ctor, X0
	076 Move X8, [X20]
	077 Move X8, [X8+192]
	078 Move X0, [X8+24]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Call 0x1C17F10
	086 Move X8, [X20]
	087 Move X22, X0
	088 Move X8, [X8+192]
	089 Move X1, [X8+32]
	090 Call 0x2A7AD68, X0
	091 Compare X22, 0
	092 JumpIfEqual {386}
	093 Move X8, 0x1AD7000
	094 Move X8, [X8+1360]
	095 Move X8, [X8]
	096 Move [X22+16], X8
	097 Compare X21, 0
	098 JumpIfEqual {386}
	099 Move X8, [X20]
	100 Move W10, [X21+28]
	101 Move X9, [X8+192]
	102 Move X8, [X21+16]
	103 Add W10, W10, 1
	104 Move X9, [X9+40]
	105 Move [X21+28], W10
	106 Compare X8, 0
	107 JumpIfEqual {386}
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W11, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Add W9, W10, 1
	112 Add X8, X8, X10
	113 Move [X21+24], W9
	114 Move [X8+32], X22
	115 Move X8, [X9+32]
	116 Move X0, X21
	117 Move X1, X22
	118 Move X8, [X8+192]
	119 Move X2, [X8+112]
	120 Call List`1<Object>.AddWithResize, X0, X1
	121 Move X8, [X20]
	122 Move X8, [X8+192]
	123 Move X0, [X8+24]
	124 Move W8, [X0+309]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {130}
	129 Call 0x1C5D684
	130 Call 0x1C17F10
	131 Move X8, [X20]
	132 Move X22, X0
	133 Move X8, [X8+192]
	134 Move X1, [X8+32]
	135 Call 0x2A7AD68, X0
	136 Compare X22, 0
	137 JumpIfEqual {386}
	138 Move X8, 0x1AB3000
	139 Move X8, [X8+1256]
	140 Move X8, [X8]
	141 Move [X22+16], X8
	142 Move X8, [X20]
	143 Move W10, [X21+28]
	144 Move X9, [X8+192]
	145 Move X8, [X21+16]
	146 Add W10, W10, 1
	147 Move X9, [X9+40]
	148 Move [X21+28], W10
	149 Compare X8, 0
	150 JumpIfEqual {386}
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Move W11, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add W9, W10, 1
	155 Add X8, X8, X10
	156 Move [X21+24], W9
	157 Move [X8+32], X22
	158 Move X8, [X9+32]
	159 Move X0, X21
	160 Move X1, X22
	161 Move X8, [X8+192]
	162 Move X2, [X8+112]
	163 Call List`1<Object>.AddWithResize, X0, X1
	164 Move X8, [X20]
	165 Move X8, [X8+192]
	166 Move X0, [X8+24]
	167 Move W8, [X0+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {173}
	172 Call 0x1C5D684
	173 Call 0x1C17F10
	174 Move X8, [X20]
	175 Move X22, X0
	176 Move X8, [X8+192]
	177 Move X1, [X8+32]
	178 Call 0x2A7AD68, X0
	179 Compare X22, 0
	180 JumpIfEqual {386}
	181 Move X8, 0x1AD7000
	182 Move X8, [X8+1400]
	183 Move X8, [X8]
	184 Move [X22+16], X8
	185 Move X8, [X20]
	186 Move W10, [X21+28]
	187 Move X9, [X8+192]
	188 Move X8, [X21+16]
	189 Add W10, W10, 1
	190 Move X9, [X9+40]
	191 Move [X21+28], W10
	192 Compare X8, 0
	193 JumpIfEqual {386}
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Move W11, [X8+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add W9, W10, 1
	198 Add X8, X8, X10
	199 Move [X21+24], W9
	200 Move [X8+32], X22
	201 Move X8, [X9+32]
	202 Move X0, X21
	203 Move X1, X22
	204 Move X8, [X8+192]
	205 Move X2, [X8+112]
	206 Call List`1<Object>.AddWithResize, X0, X1
	207 Move X8, [X20]
	208 Move X8, [X8+192]
	209 Move X0, [X8+24]
	210 Move W8, [X0+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {216}
	215 Call 0x1C5D684
	216 Call 0x1C17F10
	217 Move X8, [X20]
	218 Move X22, X0
	219 Move X8, [X8+192]
	220 Move X1, [X8+32]
	221 Call 0x2A7AD68, X0
	222 Compare X22, 0
	223 JumpIfEqual {386}
	224 Move X8, 0x1AD7000
	225 Move X8, [X8+1384]
	226 Move X8, [X8]
	227 Move [X22+16], X8
	228 Move X8, [X20]
	229 Move W10, [X21+28]
	230 Move X9, [X8+192]
	231 Move X8, [X21+16]
	232 Add W10, W10, 1
	233 Move X9, [X9+40]
	234 Move [X21+28], W10
	235 Compare X8, 0
	236 JumpIfEqual {386}
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Move W11, [X8+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add W9, W10, 1
	241 Add X8, X8, X10
	242 Move [X21+24], W9
	243 Move [X8+32], X22
	244 Move X8, [X9+32]
	245 Move X0, X21
	246 Move X1, X22
	247 Move X8, [X8+192]
	248 Move X2, [X8+112]
	249 Call List`1<Object>.AddWithResize, X0, X1
	250 Move X8, [X20]
	251 Move X8, [X8+192]
	252 Move X0, [X8+24]
	253 Move W8, [X0+309]
	254 Move TEMP, X8
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfEqual {259}
	258 Call 0x1C5D684
	259 Call 0x1C17F10
	260 Move X8, [X20]
	261 Move X22, X0
	262 Move X8, [X8+192]
	263 Move X1, [X8+32]
	264 Call 0x2A7AD68, X0
	265 Compare X22, 0
	266 JumpIfEqual {386}
	267 Move X8, 0x1AD7000
	268 Move X8, [X8+1392]
	269 Move X8, [X8]
	270 Move [X22+16], X8
	271 Move X8, [X20]
	272 Move W10, [X21+28]
	273 Move X9, [X8+192]
	274 Move X8, [X21+16]
	275 Add W10, W10, 1
	276 Move X9, [X9+40]
	277 Move [X21+28], W10
	278 Compare X8, 0
	279 JumpIfEqual {386}
	280 NotImplemented "Instruction LDRSW not yet implemented."
	281 Move W11, [X8+24]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Add W9, W10, 1
	284 Add X8, X8, X10
	285 Move [X21+24], W9
	286 Move [X8+32], X22
	287 Move X8, [X9+32]
	288 Move X0, X21
	289 Move X1, X22
	290 Move X8, [X8+192]
	291 Move X2, [X8+112]
	292 Call List`1<Object>.AddWithResize, X0, X1
	293 Move X8, [X20]
	294 Move X8, [X8+192]
	295 Move X0, [X8+24]
	296 Move W8, [X0+309]
	297 Move TEMP, X8
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfEqual {302}
	301 Call 0x1C5D684
	302 Call 0x1C17F10
	303 Move X8, [X20]
	304 Move X22, X0
	305 Move X8, [X8+192]
	306 Move X1, [X8+32]
	307 Call 0x2A7AD68, X0
	308 Compare X22, 0
	309 JumpIfEqual {386}
	310 Move X8, 0x1AD7000
	311 Move X8, [X8+1368]
	312 Move X8, [X8]
	313 Move [X22+16], X8
	314 Move X8, [X20]
	315 Move W10, [X21+28]
	316 Move X9, [X8+192]
	317 Move X8, [X21+16]
	318 Add W10, W10, 1
	319 Move X9, [X9+40]
	320 Move [X21+28], W10
	321 Compare X8, 0
	322 JumpIfEqual {386}
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Move W11, [X8+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Add W9, W10, 1
	327 Add X8, X8, X10
	328 Move [X21+24], W9
	329 Move [X8+32], X22
	330 Move X8, [X9+32]
	331 Move X0, X21
	332 Move X1, X22
	333 Move X8, [X8+192]
	334 Move X2, [X8+112]
	335 Call List`1<Object>.AddWithResize, X0, X1
	336 Move X8, [X20]
	337 Move X8, [X8+192]
	338 Move X0, [X8+24]
	339 Move W8, [X0+309]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {345}
	344 Call 0x1C5D684
	345 Call 0x1C17F10
	346 Move X8, [X20]
	347 Move X22, X0
	348 Move X8, [X8+192]
	349 Move X1, [X8+32]
	350 Call 0x2A7AD68, X0
	351 Compare X22, 0
	352 JumpIfEqual {386}
	353 Move X8, 0x1AD7000
	354 Move X8, [X8+1376]
	355 Move X8, [X8]
	356 Move [X22+16], X8
	357 Move X8, [X20]
	358 Move W10, [X21+28]
	359 Move X9, [X8+192]
	360 Move X8, [X21+16]
	361 Add W10, W10, 1
	362 Move X9, [X9+40]
	363 Move [X21+28], W10
	364 Compare X8, 0
	365 JumpIfEqual {386}
	366 NotImplemented "Instruction LDRSW not yet implemented."
	367 Move W11, [X8+24]
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Add W9, W10, 1
	370 Add X8, X8, X10
	371 Move [X21+24], W9
	372 Move [X8+32], X22
	373 Move X8, [X9+32]
	374 Move X0, X21
	375 Move X1, X22
	376 Move X8, [X8+192]
	377 Move X2, [X8+112]
	378 Call List`1<Object>.AddWithResize, X0, X1
	379 Move [X19+24], X21
	380 Move X20, [X31+32]
	381 Move X19, [X31+40]
	382 Move X22, [X31+16]
	383 Move X21, [X31+24]
	384 Move X30, [X31+48]
	385 Return 
	386 Call 0x1C17F20

Method: System.Void ValidateTheme()

Disassembly:
	0x026479C0 LDR X8, [X20 + 0x10]
	0x026479C4 LDP X22, X21, [X31 + 0x10]
	0x026479C8 STR X8, [X19 + 0x10]
	0x026479CC LDP X20, X19, [X31 + 0x20]
	0x026479D0 LDR X30, [X31], #0x30
	0x026479D4 RET
	0x026479D8 BL 0x1C16F20
	0x026479DC STP X30, X21, [X31 - 0x20]!
	0x026479E0 STP X20, X19, [X31 + 0x10]
	0x026479E4 ADRP X21, 0x1D93000
	0x026479E8 LDRB W8, [X21 + 0x120]
	0x026479EC MOV X19, X1
	0x026479F0 MOV X20, X0
	0x026479F4 TBNZ X8, 0x0, 0x2647A0C
	0x026479F8 ADRP X0, 0x1AD6000
	0x026479FC LDR X0, [X0 + 0x588]
	0x02647A00 BL 0x1C16CF4
	0x02647A04 MOVZ W8, 0x1
	0x02647A08 STRB W8, [X21 + 0x120]
	0x02647A0C LDR X0, [X20 + 0x10]
	0x02647A10 CBZ X0, 0x2647A30
	0x02647A14 ADRP X8, 0x1AD6000
	0x02647A18 LDR X8, [X8 + 0x588]
	0x02647A1C MOV X1, X19
	0x02647A20 LDP X20, X19, [X31 + 0x10]
	0x02647A24 LDR X2, [X8]
	0x02647A28 LDP X30, X21, [X31], #0x20
	0x02647A2C B 0x29ADA54
	0x02647A30 BL 0x1C16F20
	0x02647A34 STR X30, [X31 - 0x20]!
	0x02647A38 STP X20, X19, [X31 + 0x10]
	0x02647A3C CBZ X1, 0x2647A7C
	0x02647A40 MOV X19, X1
	0x02647A44 MOV X20, X0
	0x02647A48 CMP X0, X1
	0x02647A4C B.EQ 0x2647A84
	0x02647A50 LDR X0, [X20 + 0x10]
	0x02647A54 LDR X1, [X19 + 0x10]
	0x02647A58 MOV X2, X31
	0x02647A5C BL 0x33CB4B0
	0x02647A60 TBZ X0, 0x0, 0x2647A7C
	0x02647A64 LDR X0, [X20 + 0x18]
	0x02647A68 LDR X1, [X19 + 0x18]
	0x02647A6C LDP X20, X19, [X31 + 0x10]
	0x02647A70 MOV X2, X31
	0x02647A74 LDR X30, [X31], #0x20
	0x02647A78 B 0x33CB4B0
	0x02647A7C MOV W0, W31
	0x02647A80 B 0x2647A88
	0x02647A84 MOVZ W0, 0x1
	0x02647A88 LDP X20, X19, [X31 + 0x10]
	0x02647A8C LDR X30, [X31], #0x20
	0x02647A90 RET
	0x02647A94 STP X30, X23, [X31 - 0x30]!
	0x02647A98 STP X22, X21, [X31 + 0x10]
	0x02647A9C STP X20, X19, [X31 + 0x20]
	0x02647AA0 ADRP X22, 0x1D93000
	0x02647AA4 LDRB W8, [X22 + 0x121]
	0x02647AA8 MOV X21, X2
	0x02647AAC MOV X19, X1
	0x02647AB0 MOV X20, X0
	0x02647AB4 TBNZ X8, 0x0, 0x2647ACC
	0x02647AB8 ADRP X0, 0x1AAC000
	0x02647ABC LDR X0, [X0 + 0x6C0]
	0x02647AC0 BL 0x1C16CF4
	0x02647AC4 MOVZ W8, 0x1
	0x02647AC8 STRB W8, [X22 + 0x121]
	0x02647ACC CBZ X19, 0x2647B2C
	0x02647AD0 CMP X20, X19
	0x02647AD4 B.EQ 0x2647B34
	0x02647AD8 MOV X0, X19
	0x02647ADC MOV X1, X31
	0x02647AE0 BL 0x33BE520
	0x02647AE4 CBZ X20, 0x2647BA8
	0x02647AE8 MOV X22, X0
	0x02647AEC MOV X0, X20
	0x02647AF0 MOV X1, X31
	0x02647AF4 BL 0x33BE520
	0x02647AF8 ADRP X8, 0x1AAC000
	0x02647AFC LDR X8, [X8 + 0x6C0]
	0x02647B00 MOV X23, X0
	0x02647B04 LDR X8, [X8]
	0x02647B08 LDR W9, [X8 + 0xE0]
	0x02647B0C CBNZ W9, 0x2647B18
	0x02647B10 MOV X0, X8
	0x02647B14 BL 0x1C16DFC
	0x02647B18 MOV X0, X22
	0x02647B1C MOV X1, X23
	0x02647B20 MOV X2, X31
	0x02647B24 BL 0x3395F0C
	0x02647B28 TBZ X0, 0x0, 0x2647B48
	0x02647B2C MOV W0, W31
	0x02647B30 B 0x2647B38
	0x02647B34 MOVZ W0, 0x1
	0x02647B38 LDP X20, X19, [X31 + 0x20]
	0x02647B3C LDP X22, X21, [X31 + 0x10]
	0x02647B40 LDP X30, X23, [X31], #0x30
	0x02647B44 RET
	0x02647B48 LDR X8, [X21 + 0x20]
	0x02647B4C LDR X8, [X8 + 0xC0]
	0x02647B50 LDR X1, [X8]
	0x02647B54 LDRB W8, [X1 + 0x135]
	0x02647B58 TBNZ X8, 0x0, 0x2647B68
	0x02647B5C MOV X0, X1
	0x02647B60 BL 0x1C5C684
	0x02647B64 MOV X1, X0
	0x02647B68 LDR X8, [X19]
	0x02647B6C LDRB W9, [X1 + 0x130]
	0x02647B70 LDRB W10, [X8 + 0x130]
	0x02647B74 CMP W10, W9
	0x02647B78 B.CC 0x2647BAC
	0x02647B7C LDR X8, [X8 + 0xC8]
	0x02647B80 ADD X8, X8, X9, 0x3, LSL
	0x02647B84 LDUR X8, [X8 - 0x8]
	0x02647B88 CMP X8, X1
	0x02647B8C B.NE 0x2647BAC
	0x02647B90 MOV X0, X20
	0x02647B94 MOV X1, X19
	0x02647B98 LDP X20, X19, [X31 + 0x20]
	0x02647B9C LDP X22, X21, [X31 + 0x10]
	0x02647BA0 LDP X30, X23, [X31], #0x30
	0x02647BA4 B 0x2647A34
	0x02647BA8 BL 0x1C16F20
	0x02647BAC MOV X0, X19
	0x02647BB0 BL 0x1C171E0
	0x02647BB4 STP X30, X19, [X31 - 0x10]!
	0x02647BB8 MOV X19, X0
	0x02647BBC LDR X0, [X0 + 0x10]
	0x02647BC0 CBZ X0, 0x2647C08
	0x02647BC4 LDR X8, [X0]
	0x02647BC8 LDP X9, X1, [X8 + 0x158]
	0x02647BCC BLR X9
	0x02647BD0 LDR X8, [X19 + 0x18]
	0x02647BD4 CBZ X8, 0x2647C08
	0x02647BD8 LDR X9, [X8]
	0x02647BDC MOV W19, W0
	0x02647BE0 MOV X0, X8
	0x02647BE4 LDP X10, X1, [X9 + 0x158]
	0x02647BE8 BLR X10
	0x02647BEC UBFM W8, W19, 0x1B, 0x1A
	0x02647BF0 SUB W8, W8, W19
	0x02647BF4 ADD W8, W8, W0
	0x02647BF8 MOVZ W9, 0x3FD1
	0x02647BFC ADD W0, W8, W9
	0x02647C00 LDP X30, X19, [X31], #0x10
	0x02647C04 RET
	0x02647C08 BL 0x1C16F20
	0x02647C0C STR X30, [X31 - 0x20]!
	0x02647C10 STP X20, X19, [X31 + 0x10]
	0x02647C14 ADRP X20, 0x1D93000
	0x02647C18 LDRB W8, [X20 + 0x122]
	0x02647C1C MOV X19, X0
	0x02647C20 TBNZ X8, 0x0, 0x2647C38
	0x02647C24 ADRP X0, 0x1AD6000
	0x02647C28 LDR X0, [X0 + 0x540]
	0x02647C2C BL 0x1C16CF4
	0x02647C30 MOVZ W8, 0x1
	0x02647C34 STRB W8, [X20 + 0x122]
	0x02647C38 LDR X0, [X19 + 0x10]
	0x02647C3C CBZ X0, 0x2647C58
	0x02647C40 ADRP X8, 0x1AD6000
	0x02647C44 LDR X8, [X8 + 0x540]
	0x02647C48 LDP X20, X19, [X31 + 0x10]
	0x02647C4C LDR X1, [X8]
	0x02647C50 LDR X30, [X31], #0x20
	0x02647C54 B 0x29AD9C0
	0x02647C58 BL 0x1C16F20
	0x02647C5C STR X30, [X31 - 0x40]!
	0x02647C60 STP X24, X23, [X31 + 0x10]
	0x02647C64 STP X22, X21, [X31 + 0x20]
	0x02647C68 STP X20, X19, [X31 + 0x30]
	0x02647C6C ADRP X22, 0x1D93000
	0x02647C70 ADRP X21, 0x1AD6000
	0x02647C74 LDRB W8, [X22 + 0x123]
	0x02647C78 LDR X21, [X21 + 0x548]
	0x02647C7C MOV X20, X1
	0x02647C80 MOV X19, X0
	0x02647C84 TBNZ X8, 0x0, 0x2647CF0
	0x02647C88 ADRP X0, 0x1AD6000
	0x02647C8C LDR X0, [X0 + 0x548]
	0x02647C90 BL 0x1C16CF4
	0x02647C94 ADRP X0, 0x1AB2000
	0x02647C98 LDR X0, [X0 + 0x4E8]
	0x02647C9C BL 0x1C16CF4
	0x02647CA0 ADRP X0, 0x1AD6000
	0x02647CA4 LDR X0, [X0 + 0x550]
	0x02647CA8 BL 0x1C16CF4
	0x02647CAC ADRP X0, 0x1AD6000
	0x02647CB0 LDR X0, [X0 + 0x558]
	0x02647CB4 BL 0x1C16CF4
	0x02647CB8 ADRP X0, 0x1AD6000
	0x02647CBC LDR X0, [X0 + 0x560]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1D94000
	015 Move W8, [X21+282]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x1AD7000
	023 Move X0, [X0+1264]
	024 Call 0x1C17CF4
	025 Move X0, 0x1AAE000
	026 Move X0, [X0+2520]
	027 Call 0x1C17CF4
	028 Move X0, 0x1AAD000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x1AB3000
	032 Move X0, [X0+1256]
	033 Call 0x1C17CF4
	034 Move X0, 0x1AD7000
	035 Move X0, [X0+1408]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+282], W8
	039 Move X8, [X20+24]
	040 Compare X8, 0
	041 JumpIfEqual {208}
	042 Move X23, 0x1AD7000
	043 Move X23, [X23+1264]
	044 Move W21, [X8+24]
	045 Move X0, [X23]
	046 Move W9, [X0+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X22, 0x1D94000
	051 Move W8, [X22+312]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x1AD7000
	055 Move X0, [X0+1264]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+312], W8
	059 Move X0, [X23]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X23]
	065 Move X8, [X0+184]
	066 Move W8, [X8+24]
	067 Subtract W22, W8, W21
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X20+24]
	071 Compare X0, 0
	072 JumpIfEqual {222}
	073 Move X8, [X19+32]
	074 Move W1, 1
	075 Move X8, [X8+192]
	076 Move X2, [X8+56]
	077 Call List`1<Object>.get_Item, X0, X1
	078 Move X21, X0
	079 Move X8, [X19+32]
	080 Move X8, [X8+192]
	081 Move X0, [X8+24]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Call 0x1C17F10
	089 Move X8, [X19+32]
	090 Move X21, X0
	091 Move X8, [X8+192]
	092 Move X1, [X8+32]
	093 Call 0x2A7AD68, X0
	094 Compare X21, 0
	095 JumpIfEqual {222}
	096 Move X8, 0x1AB3000
	097 Move X8, [X8+1256]
	098 Move X8, [X8]
	099 Move [X21+16], X8
	100 Move X29, 0x1AD7000
	101 Move X24, 0x1AAD000
	102 Move X29, [X29+1408]
	103 Move X24, [X24+2600]
	104 Add X25, X21, 24
	105 Add X26, X21, 40
	106 Add W27, W22, 1
	107 Move X8, [X19+32]
	108 Move X8, [X8+192]
	109 Move X0, [X8+24]
	110 Move W8, [X0+309]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {116}
	115 Call 0x1C5D684
	116 Call 0x1C17F10
	117 Move X8, [X19+32]
	118 Move X22, X0
	119 Move X8, [X8+192]
	120 Move X1, [X8+32]
	121 Call 0x2A7AD68, X0
	122 Compare X21, 0
	123 JumpIfEqual {222}
	124 Compare X22, 0
	125 JumpIfEqual {222}
	126 Move X8, [X21+16]
	127 Move [X22+16], X8
	128 Move V0, [X25]
	129 Move [X22+24], V0
	130 Move V0, [X26]
	131 Move [X22+40], V0
	132 Move X0, [X20+24]
	133 Compare X0, 0
	134 JumpIfEqual {222}
	135 Move X8, [X19+32]
	136 Move W10, [X0+28]
	137 Move X9, [X8+192]
	138 Move X8, [X0+16]
	139 Add W10, W10, 1
	140 Move X9, [X9+40]
	141 Move [X0+28], W10
	142 Compare X8, 0
	143 JumpIfEqual {222}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W9, W10, 1
	148 Add X8, X8, X10
	149 Move [X0+24], W9
	150 Move [X8+32], X22
	151 Move X8, [X9+32]
	152 Move X1, X22
	153 Move X8, [X8+192]
	154 Move X2, [X8+112]
	155 Call List`1<Object>.AddWithResize, X0, X1
	156 Move X8, [X20+24]
	157 Compare X8, 0
	158 JumpIfEqual {222}
	159 Move X0, [X23]
	160 Move W8, [X8+24]
	161 Move X28, X23
	162 Move W9, [X0+224]
	163 Subtract W22, W8, 1
	164 Compare W9, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move W0, W22
	168 Move X1, X31
	169 Call AffordanceStateShortcuts.GetNameForIndex, X0
	170 Move X8, [X20+24]
	171 Compare X8, 0
	172 JumpIfEqual {222}
	173 Move X9, [X19+32]
	174 Move X23, X0
	175 And W1, W22, 255
	176 Move X0, X8
	177 Move X9, [X9+192]
	178 Move X2, [X9+56]
	179 Call List`1<Object>.get_Item, X0, X1
	180 Compare X0, 0
	181 JumpIfEqual {222}
	182 Move [X0+16], X23
	183 Move X8, 0x1AAE000
	184 Move X8, [X8+2520]
	185 Add X1, X31, 12
	186 Move [X31+12], W22
	187 Move X0, [X8]
	188 Call 0x1C17E04
	189 Move X8, [X29]
	190 Move X1, X0
	191 Move X2, X23
	192 Move X3, X31
	193 Move X0, X8
	194 Call String.Format, X0, X1, X2
	195 Move X8, [X24]
	196 Move X22, X0
	197 Move W9, [X8+224]
	198 Compare W9, 0
	199 JumpIfNotEqual {202}
	200 Move X0, X8
	201 Call 0x1C17DFC
	202 Move X0, X22
	203 Move X1, X31
	204 Call Debug.LogWarning, X0
	205 Subtract W27, W27, 1
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X23, X28
	208 Move X20, [X31+96]
	209 Move X19, [X31+104]
	210 Move X22, [X31+80]
	211 Move X21, [X31+88]
	212 Move X24, [X31+64]
	213 Move X23, [X31+72]
	214 Move X26, [X31+48]
	215 Move X25, [X31+56]
	216 Move X28, [X31+32]
	217 Move X27, [X31+40]
	218 Move X29, [X31+16]
	219 Move X30, [X31+24]
	220 Add X31, X31, 112
	221 Return 
	222 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.AffordanceThemeData`1<T> GetAffordanceThemeDataForIndex(System.Byte stateIndex)

Disassembly:
	0x02647CC0 BL 0x1C16CF4
	0x02647CC4 ADRP X0, 0x1AD6000
	0x02647CC8 LDR X0, [X0 + 0x568]
	0x02647CCC BL 0x1C16CF4
	0x02647CD0 ADRP X0, 0x1AD6000
	0x02647CD4 LDR X0, [X0 + 0x570]
	0x02647CD8 BL 0x1C16CF4
	0x02647CDC ADRP X0, 0x1AD6000
	0x02647CE0 LDR X0, [X0 + 0x578]
	0x02647CE4 BL 0x1C16CF4
	0x02647CE8 MOVZ W8, 0x1
	0x02647CEC STRB W8, [X22 + 0x123]
	0x02647CF0 FMOV S0, W31
	0x02647CF4 FMOV S1, W31
	0x02647CF8 FMOV S2, 1
	0x02647CFC FMOV S3, 1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {17}
	005 Move W8, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X2+32]
	008 And W1, W1, 255
	009 Move X8, [X8+192]
	010 Move X2, [X8+56]
	011 Move X30, [X31+16]
	012 Call List`1<Object>.get_Item, X0, X1
	013 Return X0
	014 Move X0, X31
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Void SetAffordanceThemeDataList(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.AffordanceThemeData`1<T>> newList)

Disassembly:
	0x02647D00 MOV X0, X31
	0x02647D04 BL 0x3C01424
	0x02647D08 LDR X8, [X21]
	0x02647D0C MOV X21, X0
	0x02647D10 MOV X0, X8
	0x02647D14 BL 0x1C16F10
	0x02647D18 MOV X1, X21
	0x02647D1C MOV X2, X31
	0x02647D20 MOV X22, X0
	0x02647D24 BL 0x3B30FEC
	0x02647D28 MOV X0, X19
	0x02647D2C MOV X1, X31
	0x02647D30 STR X22, [X19 + 0x10]
	0x02647D34 BL 0x33BDD8C
	0x02647D38 LDR X8, [X20 + 0x20]!
	0x02647D3C LDR X8, [X8 + 0xC0]
	0x02647D40 LDR X0, [X8 + 0x8]
	0x02647D44 LDRB W8, [X0 + 0x135]
	0x02647D48 TBNZ X8, 0x0, 0x2647D50
	0x02647D4C BL 0x1C5C684
	0x02647D50 BL 0x1C16F10
	0x02647D54 LDR X8, [X20]
	0x02647D58 MOV X21, X0
	0x02647D5C LDR X8, [X8 + 0xC0]
	0x02647D60 LDR X1, [X8 + 0x10]
	0x02647D64 LDR X8, [X1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {34}
	009 Move X20, X2
	010 Move W2, [X0+24]
	011 Move W8, [X0+28]
	012 Move X19, X1
	013 Add W8, W8, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X0+24], W31
	016 Move [X0+28], W8
	017 Move X0, [X0+16]
	018 Move W1, W31
	019 Move X3, X31
	020 Call Array.Clear, X0, X1, X2
	021 Move X0, [X21+24]
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move X8, [X20+32]
	025 Move X1, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X8, [X8+192]
	029 Move X2, [X8+80]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call List`1<Object>.AddRange, X0, X1
	033 Return 
	034 Call 0x1C17F20

Method: System.Void CopyFrom(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.BaseAffordanceTheme`1<T> other)

Disassembly:
	0x02647D68 BLR X8
	0x02647D6C LDR X8, [X20]
	0x02647D70 LDR X8, [X8 + 0xC0]
	0x02647D74 LDR X0, [X8 + 0x18]
	0x02647D78 LDRB W8, [X0 + 0x135]
	0x02647D7C TBNZ X8, 0x0, 0x2647D84
	0x02647D80 BL 0x1C5C684
	0x02647D84 BL 0x1C16F10
	0x02647D88 LDR X8, [X20]
	0x02647D8C MOV X22, X0
	0x02647D90 LDR X8, [X8 + 0xC0]
	0x02647D94 LDR X1, [X8 + 0x20]
	0x02647D98 LDR X8, [X1]
	0x02647D9C BLR X8
	0x02647DA0 CBZ X22, 0x26481B0
	0x02647DA4 LDR X8, [X20]
	0x02647DA8 ADRP X9, 0x1AD6000
	0x02647DAC MOVZ W1, 0x8
	0x02647DB0 LDR X8, [X8 + 0xC0]
	0x02647DB4 LDR X8, [X8 + 0x18]
	0x02647DB8 LDR X9, [X9 + 0x550]
	0x02647DBC LDR X23, [X8 + 0x80]
	0x02647DC0 LDR X24, [X9]
	0x02647DC4 MOV X0, X23
	0x02647DC8 BL 0x1C16D14
	0x02647DCC MOV X0, X22
	0x02647DD0 MOV X1, X23
	0x02647DD4 BL 0x1C16D18
	0x02647DD8 STR X24, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {37}
	008 Move X8, [X2+32]
	009 Move X19, X0
	010 Move X22, [X1+24]
	011 Move X21, X2
	012 Move X8, [X8+192]
	013 Move X20, X1
	014 Move X0, [X8+8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X21+32]
	023 Move X1, X22
	024 Move X21, X0
	025 Move X8, [X8+192]
	026 Move X2, [X8+96]
	027 Call List`1<Object>..ctor, X0, X1
	028 Move [X19+24], X21
	029 Move X8, [X20+16]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move [X19+16], X8
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+48]
	036 Return 
	037 Call 0x1C17F20

Method: System.Void SetAnimationCurve(UnityEngine.AnimationCurve newAnimationCurve)

Disassembly:
	0x02647DDC CBZ X21, 0x26481B0
	0x02647DE0 LDR X8, [X20]
	0x02647DE4 ADD X3, X31, 0x8
	0x02647DE8 MOV X2, X21
	0x02647DEC MOV X4, X22
	0x02647DF0 LDR X8, [X8 + 0xC0]
	0x02647DF4 LDR X1, [X8 + 0x28]
	0x02647DF8 LDR X0, [X1]
	0x02647DFC STR X22, [X31 + 0x8]
	0x02647E00 LDR X8, [X1 + 0x10]
	0x02647E04 BLR X8
	0x02647E08 LDR X8, [X20]
	0x02647E0C LDR X8, [X8 + 0xC0]
	0x02647E10 LDR X0, [X8 + 0x18]
	0x02647E14 LDRB W8, [X0 + 0x135]
	0x02647E18 TBNZ X8, 0x0, 0x2647E20
	0x02647E1C BL 0x1C5C684
	0x02647E20 BL 0x1C16F10
	0x02647E24 LDR X8, [X20]
	0x02647E28 MOV X22, X0
	0x02647E2C LDR X8, [X8 + 0xC0]
	0x02647E30 LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1D94000
	006 Move W8, [X21+283]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1AD7000
	014 Move X0, [X0+1416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+283], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x1AD7000
	022 Move X8, [X8+1416]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call DatumProperty`2<Object, Object>.set_Value, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.BaseAffordanceTheme`1<T> other)

Disassembly:
	0x02647E34 LDR X8, [X1]
	0x02647E38 BLR X8
	0x02647E3C CBZ X22, 0x26481B0
	0x02647E40 LDR X8, [X20]
	0x02647E44 ADRP X9, 0x1AB2000
	0x02647E48 MOVZ W1, 0x8
	0x02647E4C LDR X8, [X8 + 0xC0]
	0x02647E50 LDR X8, [X8 + 0x18]
	0x02647E54 LDR X9, [X9 + 0x4E8]
	0x02647E58 LDR X23, [X8 + 0x80]
	0x02647E5C LDR X24, [X9]
	0x02647E60 MOV X0, X23
	0x02647E64 BL 0x1C16D14
	0x02647E68 MOV X0, X22
	0x02647E6C MOV X1, X23
	0x02647E70 BL 0x1C16D18
	0x02647E74 STR X24, [X0]
	0x02647E78 LDR X8, [X20]
	0x02647E7C ADD X3, X31, 0x8
	0x02647E80 MOV X2, X21
	0x02647E84 MOV X4, X22
	0x02647E88 LDR X8, [X8 + 0xC0]
	0x02647E8C LDR X1, [X8 + 0x28]
	0x02647E90 LDR X0, [X1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {25}
	006 Move X19, X1
	007 Move X20, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X0, [X20+16]
	010 Move X1, [X19+16]
	011 Move X2, X31
	012 Call Object.Equals, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {25}
	017 Move X0, [X20+24]
	018 Move X1, [X19+24]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X2, X31
	022 Move X30, [X31+32]
	023 Call Object.Equals, X0, X1
	024 Return X0
	025 Move W0, W31
	026 Move W0, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02647E94 STR X22, [X31 + 0x8]
	0x02647E98 LDR X8, [X1 + 0x10]
	0x02647E9C BLR X8
	0x02647EA0 LDR X8, [X20]
	0x02647EA4 LDR X8, [X8 + 0xC0]
	0x02647EA8 LDR X0, [X8 + 0x18]
	0x02647EAC LDRB W8, [X0 + 0x135]
	0x02647EB0 TBNZ X8, 0x0, 0x2647EB8
	0x02647EB4 BL 0x1C5C684
	0x02647EB8 BL 0x1C16F10
	0x02647EBC LDR X8, [X20]
	0x02647EC0 MOV X22, X0
	0x02647EC4 LDR X8, [X8 + 0xC0]
	0x02647EC8 LDR X1, [X8 + 0x20]
	0x02647ECC LDR X8, [X1]
	0x02647ED0 BLR X8
	0x02647ED4 CBZ X22, 0x26481B0
	0x02647ED8 LDR X8, [X20]
	0x02647EDC ADRP X9, 0x1AD6000
	0x02647EE0 MOVZ W1, 0x8
	0x02647EE4 LDR X8, [X8 + 0xC0]
	0x02647EE8 LDR X8, [X8 + 0x18]
	0x02647EEC LDR X9, [X9 + 0x578]
	0x02647EF0 LDR X23, [X8 + 0x80]
	0x02647EF4 LDR X24, [X9]
	0x02647EF8 MOV X0, X23
	0x02647EFC BL 0x1C16D14
	0x02647F00 MOV X0, X22
	0x02647F04 MOV X1, X23
	0x02647F08 BL 0x1C16D18
	0x02647F0C STR X24, [X0]
	0x02647F10 LDR X8, [X20]
	0x02647F14 ADD X3, X31, 0x8
	0x02647F18 MOV X2, X21
	0x02647F1C MOV X4, X22
	0x02647F20 LDR X8, [X8 + 0xC0]
	0x02647F24 LDR X1, [X8 + 0x28]
	0x02647F28 LDR X0, [X1]
	0x02647F2C STR X22, [X31 + 0x8]
	0x02647F30 LDR X8, [X1 + 0x10]
	0x02647F34 BLR X8
	0x02647F38 LDR X8, [X20]
	0x02647F3C LDR X8, [X8 + 0xC0]
	0x02647F40 LDR X0, [X8 + 0x18]
	0x02647F44 LDRB W8, [X0 + 0x135]
	0x02647F48 TBNZ X8, 0x0, 0x2647F50
	0x02647F4C BL 0x1C5C684
	0x02647F50 BL 0x1C16F10
	0x02647F54 LDR X8, [X20]
	0x02647F58 MOV X22, X0
	0x02647F5C LDR X8, [X8 + 0xC0]
	0x02647F60 LDR X1, [X8 + 0x20]
	0x02647F64 LDR X8, [X1]
	0x02647F68 BLR X8
	0x02647F6C CBZ X22, 0x26481B0
	0x02647F70 LDR X8, [X20]
	0x02647F74 ADRP X9, 0x1AD6000
	0x02647F78 MOVZ W1, 0x8
	0x02647F7C LDR X8, [X8 + 0xC0]
	0x02647F80 LDR X8, [X8 + 0x18]
	0x02647F84 LDR X9, [X9 + 0x568]
	0x02647F88 LDR X23, [X8 + 0x80]
	0x02647F8C LDR X24, [X9]
	0x02647F90 MOV X0, X23
	0x02647F94 BL 0x1C16D14
	0x02647F98 MOV X0, X22
	0x02647F9C MOV X1, X23
	0x02647FA0 BL 0x1C16D18
	0x02647FA4 STR X24, [X0]
	0x02647FA8 LDR X8, [X20]
	0x02647FAC ADD X3, X31, 0x8
	0x02647FB0 MOV X2, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1D94000
	008 Move W8, [X22+284]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1AAD000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+284], W8
	021 Compare X19, 0
	022 JumpIfEqual {50}
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X19
	025 Move X1, X31
	026 Call "il2cpp_vm_object_is_inst", X0
	027 Compare X20, 0
	028 JumpIfEqual {88}
	029 Move X22, X0
	030 Move X0, X20
	031 Move X1, X31
	032 Call "il2cpp_vm_object_is_inst", X0
	033 Move X8, 0x1AAD000
	034 Move X8, [X8+1728]
	035 Move X23, X0
	036 Move X8, [X8]
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X22
	043 Move X1, X23
	044 Move X2, X31
	045 Call Type.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {59}
	050 Move W0, W31
	051 Move W0, 1
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return X0
	059 Move X8, [X21+32]
	060 Move X8, [X8+192]
	061 Move X1, [X8]
	062 Move W8, [X1+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X1
	068 Call 0x1C5D684
	069 Move X1, X0
	070 Move X8, [X19]
	071 Move W9, [X1+304]
	072 Move W10, [X8+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+200]
	075 Add X8, X8, X9
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X20
	079 Move X1, X19
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Call 0x2647E34, X0, X1
	087 Return X0
	088 Call 0x1C17F20
	089 Move X0, X19
	090 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x02647FB4 MOV X4, X22
	0x02647FB8 LDR X8, [X8 + 0xC0]
	0x02647FBC LDR X1, [X8 + 0x28]
	0x02647FC0 LDR X0, [X1]
	0x02647FC4 STR X22, [X31 + 0x8]
	0x02647FC8 LDR X8, [X1 + 0x10]
	0x02647FCC BLR X8
	0x02647FD0 LDR X8, [X20]
	0x02647FD4 LDR X8, [X8 + 0xC0]
	0x02647FD8 LDR X0, [X8 + 0x18]
	0x02647FDC LDRB W8, [X0 + 0x135]
	0x02647FE0 TBNZ X8, 0x0, 0x2647FE8
	0x02647FE4 BL 0x1C5C684
	0x02647FE8 BL 0x1C16F10
	0x02647FEC LDR X8, [X20]
	0x02647FF0 MOV X22, X0
	0x02647FF4 LDR X8, [X8 + 0xC0]
	0x02647FF8 LDR X1, [X8 + 0x20]
	0x02647FFC LDR X8, [X1]
	0x02648000 BLR X8
	0x02648004 CBZ X22, 0x26481B0
	0x02648008 LDR X8, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {30}
	007 Move X8, [X0]
	008 Move X9, [X8+344]
	009 Move X1, [X8+352]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X8, [X19+24]
	012 Compare X8, 0
	013 JumpIfEqual {30}
	014 Move X9, [X8]
	015 Move W19, W0
	016 Move X0, X8
	017 Move X10, [X9+344]
	018 Move X1, [X9+352]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move W8, W19
	021 ShiftRight W8, 27
	022 And W8, W8, 0x3FFFFFF
	023 Subtract W8, W8, W19
	024 Add W8, W8, W0
	025 Move W9, 0x3FD1
	026 Add W0, W8, W9
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return X0
	030 Call 0x1C17F20

