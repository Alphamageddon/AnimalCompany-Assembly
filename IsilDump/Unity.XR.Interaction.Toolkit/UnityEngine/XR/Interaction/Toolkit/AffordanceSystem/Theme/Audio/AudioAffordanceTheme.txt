Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Audio.AudioAffordanceTheme

Method: System.Void .ctor()

Disassembly:
	0x03BCC95C LDR X30, [X31], #0x60
	0x03BCC960 RET
	0x03BCC964 BL 0x1C16F20
	0x03BCC968 LDR V0, [X0 + 0x20]
	0x03BCC96C RET
	0x03BCC970 FMOV S1, 1
	0x03BCC974 FCMP S0, 0x0
	0x03BCC978 FMOV S2, W31
	0x03BCC97C FMOV S3, 4
	0x03BCC980 FDIV S1, S1, S0
	0x03BCC984 STR S0, [X0 + 0x20]
	0x03BCC988 FMUL S0, S0, S3
	0x03BCC98C FCSEL S1, S1, S2, GT
	0x03BCC990 STP S1, S0, [X0 + 0x58]
	0x03BCC994 RET
	0x03BCC998 LDR V0, [X0 + 0x20]
	0x03BCC99C FMOV S1, 1
	0x03BCC9A0 FMOV S2, W31
	0x03BCC9A4 FMOV S3, 4
	0x03BCC9A8 FDIV S1, S1, S0
	0x03BCC9AC FCMP S0, 0x0
	0x03BCC9B0 FMUL S0, S0, S3
	0x03BCC9B4 FCSEL S1, S1, S2, GT
	0x03BCC9B8 STP S1, S0, [X0 + 0x58]
	0x03BCC9BC RET
	0x03BCC9C0 STR X30, [X31 - 0x20]!
	0x03BCC9C4 STP X20, X19, [X31 + 0x10]
	0x03BCC9C8 ADRP X20, 0x816000
	0x03BCC9CC LDRB W8, [X20 + 0xE2A]
	0x03BCC9D0 MOV X19, X0
	0x03BCC9D4 TBNZ X8, 0x0, 0x3BCC9EC
	0x03BCC9D8 ADRP X0, 0x591000
	0x03BCC9DC LDR X0, [X0 + 0x960]
	0x03BCC9E0 BL 0x1C16CF4
	0x03BCC9E4 MOVZ W8, 0x1
	0x03BCC9E8 STRB W8, [X20 + 0xE2A]
	0x03BCC9EC LDRB W8, [X19 + 0x55]
	0x03BCC9F0 CBZ W8, 0x3BCCA0C
	0x03BCC9F4 LDR X8, [X19 + 0x40]
	0x03BCC9F8 CBZ X8, 0x3BCCA1C
	0x03BCC9FC LDR W8, [X8 + 0x18]
	0x03BCCA00 CMP W8, 0x0
	0x03BCCA04 CSET W0, GT
	0x03BCCA08 B 0x3BCCA10
	0x03BCCA0C MOVZ W0, 0x1
	0x03BCCA10 LDP X20, X19, [X31 + 0x10]
	0x03BCCA14 LDR X30, [X31], #0x20
	0x03BCCA18 RET
	0x03BCCA1C BL 0x1C16F20
	0x03BCCA20 LDR X0, [X0 + 0x28]
	0x03BCCA24 RET
	0x03BCCA28 LDR V0, [X0 + 0x20]
	0x03BCCA2C FMOV S1, 1
	0x03BCCA30 FMOV S2, W31
	0x03BCCA34 FMOV S3, 4
	0x03BCCA38 FDIV S1, S1, S0
	0x03BCCA3C FCMP S0, 0x0
	0x03BCCA40 FMUL S0, S0, S3
	0x03BCCA44 FCSEL S1, S1, S2, GT
	0x03BCCA48 STP S1, S0, [X0 + 0x58]
	0x03BCCA4C RET
	0x03BCCA50 LDR V0, [X0 + 0x20]
	0x03BCCA54 FMOV S1, 1
	0x03BCCA58 FMOV S2, 4
	0x03BCCA5C LDR X8, [X0]
	0x03BCCA60 FDIV S1, S1, S0
	0x03BCCA64 FCMP S0, 0x0
	0x03BCCA68 FMUL S0, S0, S2
	0x03BCCA6C FMOV S2, W31
	0x03BCCA70 FCSEL S1, S1, S2, GT
	0x03BCCA74 STP S1, S0, [X0 + 0x58]
	0x03BCCA78 LDP X2, X1, [X8 + 0x1B8]
	0x03BCCA7C BR X2
	0x03BCCA80 LDR X8, [X0]
	0x03BCCA84 LDP X2, X1, [X8 + 0x1C8]
	0x03BCCA88 BR X2
	0x03BCCA8C STR X30, [X31 - 0x20]!
	0x03BCCA90 STP X20, X19, [X31 + 0x10]
	0x03BCCA94 ADRP X20, 0x816000
	0x03BCCA98 LDRB W8, [X20 + 0xE2B]
	0x03BCCA9C MOV X19, X0
	0x03BCCAA0 TBNZ X8, 0x0, 0x3BCCAB8
	0x03BCCAA4 ADRP X0, 0x591000
	0x03BCCAA8 LDR X0, [X0 + 0x968]
	0x03BCCAAC BL 0x1C16CF4
	0x03BCCAB0 MOVZ W8, 0x1
	0x03BCCAB4 STRB W8, [X20 + 0xE2B]
	0x03BCCAB8 LDRB W8, [X19 + 0x54]
	0x03BCCABC CBZ W8, 0x3BCCAF0
	0x03BCCAC0 LDR X8, [X19 + 0x28]
	0x03BCCAC4 CBZ X8, 0x3BCCB20
	0x03BCCAC8 LDRH W1, [X8 + 0x18]
	0x03BCCACC MOV X0, X19
	0x03BCCAD0 BL 0x3BCCB24
	0x03BCCAD4 FMOV S0, 1
	0x03BCCAD8 MOV X0, X19
	0x03BCCADC BL 0x3BCCD60
	0x03BCCAE0 STRB W31, [X19 + 0x54]
	0x03BCCAE4 LDP X20, X19, [X31 + 0x10]
	0x03BCCAE8 LDR X30, [X31], #0x20
	0x03BCCAEC RET
	0x03BCCAF0 LDR V0, [X19 + 0x58]
	0x03BCCAF4 FCMP S0, 0x0
	0x03BCCAF8 FMOV S0, 1
	0x03BCCAFC B.LE 0x3BCCB10
	0x03BCCB00 MOV X0, X31
	0x03BCCB04 BL 0x3C3C714
	0x03BCCB08 LDR V1, [X19 + 0x58]
	0x03BCCB0C FMUL S0, S0, S1
	0x03BCCB10 MOV X0, X19
	0x03BCCB14 LDP X20, X19, [X31 + 0x10]
	0x03BCCB18 LDR X30, [X31], #0x20
	0x03BCCB1C B 0x3BCCD60
	0x03BCCB20 BL 0x1C16F20
	0x03BCCB24 STR X30, [X31 - 0x60]!
	0x03BCCB28 STP X28, X27, [X31 + 0x10]
	0x03BCCB2C STP X26, X25, [X31 + 0x20]
	0x03BCCB30 STP X24, X23, [X31 + 0x30]
	0x03BCCB34 STP X22, X21, [X31 + 0x40]
	0x03BCCB38 STP X20, X19, [X31 + 0x50]
	0x03BCCB3C ADRP X21, 0x816000
	0x03BCCB40 LDRB W8, [X21 + 0xE2E]
	0x03BCCB44 MOV X20, X1
	0x03BCCB48 MOV X19, X0
	0x03BCCB4C TBNZ X8, 0x0, 0x3BCCBA0
	0x03BCCB50 ADRP X0, 0x591000
	0x03BCCB54 LDR X0, [X0 + 0x968]
	0x03BCCB58 BL 0x1C16CF4
	0x03BCCB5C ADRP X0, 0x591000
	0x03BCCB60 LDR X0, [X0 + 0x970]
	0x03BCCB64 BL 0x1C16CF4
	0x03BCCB68 ADRP X0, 0x591000
	0x03BCCB6C LDR X0, [X0 + 0x978]
	0x03BCCB70 BL 0x1C16CF4
	0x03BCCB74 ADRP X0, 0x591000
	0x03BCCB78 LDR X0, [X0 + 0x980]
	0x03BCCB7C BL 0x1C16CF4
	0x03BCCB80 ADRP X0, 0x591000
	0x03BCCB84 LDR X0, [X0 + 0x988]
	0x03BCCB88 BL 0x1C16CF4
	0x03BCCB8C ADRP X0, 0x591000
	0x03BCCB90 LDR X0, [X0 + 0x990]
	0x03BCCB94 BL 0x1C16CF4
	0x03BCCB98 MOVZ W8, 0x1
	0x03BCCB9C STRB W8, [X21 + 0xE2E]
	0x03BCCBA0 LDR X0, [X19 + 0x30]
	0x03BCCBA4 CBZ X0, 0x3BCCD38
	0x03BCCBA8 ADRP X27, 0x591000
	0x03BCCBAC ADRP X28, 0x591000
	0x03BCCBB0 ADRP X24, 0x591000
	0x03BCCBB4 ADRP X25, 0x591000
	0x03BCCBB8 ADRP X26, 0x591000
	0x03BCCBBC LDR X27, [X27 + 0x970]
	0x03BCCBC0 LDR X28, [X28 + 0x988]
	0x03BCCBC4 LDR X24, [X24 + 0x990]
	0x03BCCBC8 LDR X25, [X25 + 0x978]
	0x03BCCBCC LDR X26, [X26 + 0x980]
	0x03BCCBD0 MOV W21, W31
	0x03BCCBD4 AND X20, X20, 0xFFFF
	0x03BCCBD8 LDR X1, [X27]
	0x03BCCBDC BL 0x2D57B54
	0x03BCCBE0 CMP W21, W0
	0x03BCCBE4 B.GE 0x3BCCC84
	0x03BCCBE8 LDR X0, [X19 + 0x30]
	0x03BCCBEC CBZ X0, 0x3BCCD38
	0x03BCCBF0 LDR X2, [X28]
	0x03BCCBF4 MOV W1, W21
	0x03BCCBF8 BL 0x2D57B78
	0x03BCCBFC LDR X9, [X19 + 0x28]
	0x03BCCC00 CBZ X9, 0x3BCCD38
	0x03BCCC04 MOV X22, X0
	0x03BCCC08 CBZ X0, 0x3BCCD38
	0x03BCCC0C LDR X8, [X22]
	0x03BCCC10 LDRH W23, [X9 + 0x18]
	0x03BCCC14 LDR X1, [X24]
	0x03BCCC18 LDRH W9, [X8 + 0x12E]
	0x03BCCC1C CBZ X9, 0x3BCCC40
	0x03BCCC20 LDR X10, [X8 + 0xB0]
	0x03BCCC24 ADD X10, X10, 0x8
	0x03BCCC28 LDUR X11, [X10 - 0x8]
	0x03BCCC2C CMP X11, X1
	0x03BCCC30 B.EQ 0x3BCCC50
	0x03BCCC34 SUBS X9, X9, 0x1
	0x03BCCC38 ADD X10, X10, 0x10
	0x03BCCC3C B.NE 0x3BCCC28
	0x03BCCC40 MOVZ W2, 0x1
	0x03BCCC44 MOV X0, X22
	0x03BCCC48 BL 0x1C5C788
	0x03BCCC4C B 0x3BCCC60
	0x03BCCC50 LDR W9, [X10]
	0x03BCCC54 ADD W9, W9, 0x1
	0x03BCCC58 ADD X8, X8, W9, 0x4, SXTW
	0x03BCCC5C ADD X0, X8, 0x138
	0x03BCCC60 LDP X8, X3, [X0]
	0x03BCCC64 MOV X0, X22
	0x03BCCC68 MOV X1, X23
	0x03BCCC6C MOV X2, X20
	0x03BCCC70 BLR X8
	0x03BCCC74 LDR X0, [X19 + 0x30]
	0x03BCCC78 ADD W21, W21, 0x1
	0x03BCCC7C CBNZ X0, 0x3BCCBD8
	0x03BCCC80 B 0x3BCCD38
	0x03BCCC84 LDR X0, [X19 + 0x38]
	0x03BCCC88 CBZ X0, 0x3BCCD38
	0x03BCCC8C MOV W21, W31
	0x03BCCC90 LDR X1, [X25]
	0x03BCCC94 BL 0x2D57B54
	0x03BCCC98 CMP W21, W0
	0x03BCCC9C B.GE 0x3BCCD3C
	0x03BCCCA0 LDR X0, [X19 + 0x38]
	0x03BCCCA4 CBZ X0, 0x3BCCD38
	0x03BCCCA8 LDR X2, [X26]
	0x03BCCCAC MOV W1, W21
	0x03BCCCB0 BL 0x2D57B78
	0x03BCCCB4 LDR X9, [X19 + 0x28]
	0x03BCCCB8 CBZ X9, 0x3BCCD38
	0x03BCCCBC MOV X22, X0
	0x03BCCCC0 CBZ X0, 0x3BCCD38
	0x03BCCCC4 LDR X8, [X22]
	0x03BCCCC8 LDRH W23, [X9 + 0x18]
	0x03BCCCCC LDR X1, [X24]
	0x03BCCCD0 LDRH W9, [X8 + 0x12E]
	0x03BCCCD4 CBZ X9, 0x3BCCCF8
	0x03BCCCD8 LDR X10, [X8 + 0xB0]
	0x03BCCCDC ADD X10, X10, 0x8
	0x03BCCCE0 LDUR X11, [X10 - 0x8]
	0x03BCCCE4 CMP X11, X1
	0x03BCCCE8 B.EQ 0x3BCCD08
	0x03BCCCEC SUBS X9, X9, 0x1
	0x03BCCCF0 ADD X10, X10, 0x10
	0x03BCCCF4 B.NE 0x3BCCCE0
	0x03BCCCF8 MOVZ W2, 0x1
	0x03BCCCFC MOV X0, X22
	0x03BCCD00 BL 0x1C5C788
	0x03BCCD04 B 0x3BCCD18
	0x03BCCD08 LDR W9, [X10]
	0x03BCCD0C ADD W9, W9, 0x1
	0x03BCCD10 ADD X8, X8, W9, 0x4, SXTW
	0x03BCCD14 ADD X0, X8, 0x138
	0x03BCCD18 LDP X8, X3, [X0]
	0x03BCCD1C MOV X0, X22
	0x03BCCD20 MOV X1, X23
	0x03BCCD24 MOV X2, X20
	0x03BCCD28 BLR X8
	0x03BCCD2C LDR X0, [X19 + 0x38]
	0x03BCCD30 ADD W21, W21, 0x1
	0x03BCCD34 CBNZ X0, 0x3BCCC90
	0x03BCCD38 BL 0x1C16F20
	0x03BCCD3C STR W31, [X19 + 0x50]
	0x03BCCD40 STRB W31, [X19 + 0x55]
	0x03BCCD44 LDP X20, X19, [X31 + 0x50]
	0x03BCCD48 LDP X22, X21, [X31 + 0x40]
	0x03BCCD4C LDP X24, X23, [X31 + 0x30]
	0x03BCCD50 LDP X26, X25, [X31 + 0x20]
	0x03BCCD54 LDP X28, X27, [X31 + 0x10]
	0x03BCCD58 LDR X30, [X31], #0x60
	0x03BCCD5C RET
	0x03BCCD60 STR D8, [X31 - 0x70]!
	0x03BCCD64 STP X29, X30, [X31 + 0x10]
	0x03BCCD68 STP X28, X27, [X31 + 0x20]
	0x03BCCD6C STP X26, X25, [X31 + 0x30]
	0x03BCCD70 STP X24, X23, [X31 + 0x40]
	0x03BCCD74 STP X22, X21, [X31 + 0x50]
	0x03BCCD78 STP X20, X19, [X31 + 0x60]
	0x03BCCD7C ADRP X20, 0x816000
	0x03BCCD80 LDRB W8, [X20 + 0xE36]
	0x03BCCD84 MOV V8.16B, V0.16B
	0x03BCCD88 MOV X19, X0
	0x03BCCD8C TBNZ X8, 0x0, 0x3BCCDEC
	0x03BCCD90 ADRP X0, 0x591000
	0x03BCCD94 LDR X0, [X0 + 0x970]
	0x03BCCD98 BL 0x1C16CF4
	0x03BCCD9C ADRP X0, 0x591000
	0x03BCCDA0 LDR X0, [X0 + 0x978]
	0x03BCCDA4 BL 0x1C16CF4
	0x03BCCDA8 ADRP X0, 0x591000
	0x03BCCDAC LDR X0, [X0 + 0x980]
	0x03BCCDB0 BL 0x1C16CF4
	0x03BCCDB4 ADRP X0, 0x591000
	0x03BCCDB8 LDR X0, [X0 + 0x988]
	0x03BCCDBC BL 0x1C16CF4
	0x03BCCDC0 ADRP X0, 0x591000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x817000
	008 Move X21, 0x592000
	009 Move X20, 0x592000
	010 Move X22, 0x592000
	011 Move W8, [X23+3609]
	012 Move X21, [X21+2288]
	013 Move X20, [X20+2296]
	014 Move X22, [X22+2304]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x592000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move X0, 0x592000
	024 Move X0, [X0+2312]
	025 Call 0x1C17CF4
	026 Move X0, 0x592000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move X0, 0x592000
	030 Move X0, [X0+2288]
	031 Call 0x1C17CF4
	032 Move X0, 0x52E000
	033 Move X0, [X0+1256]
	034 Call 0x1C17CF4
	035 Move X0, 0x552000
	036 Move X0, [X0+1360]
	037 Call 0x1C17CF4
	038 Move X0, 0x552000
	039 Move X0, [X0+1368]
	040 Call 0x1C17CF4
	041 Move X0, 0x552000
	042 Move X0, [X0+1376]
	043 Call 0x1C17CF4
	044 Move X0, 0x552000
	045 Move X0, [X0+1384]
	046 Call 0x1C17CF4
	047 Move X0, 0x552000
	048 Move X0, [X0+1392]
	049 Call 0x1C17CF4
	050 Move X0, 0x552000
	051 Move X0, [X0+1400]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+3609], W8
	055 Move X0, X19
	056 Move X1, X31
	057 Call Object..ctor, X0
	058 Move X0, [X21]
	059 Call 0x1C17F10
	060 Move X1, [X20]
	061 Move X20, X0
	062 Call List`1<Object>..ctor, X0
	063 Move X0, [X22]
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X21, X0
	067 Call Object..ctor, X0
	068 Compare X21, 0
	069 JumpIfEqual {292}
	070 Move X8, 0x552000
	071 Move X8, [X8+1360]
	072 Move X8, [X8]
	073 Move [X21+16], X8
	074 Compare X20, 0
	075 JumpIfEqual {292}
	076 Move X23, 0x592000
	077 Move X23, [X23+2312]
	078 Move W10, [X20+28]
	079 Move X8, [X20+16]
	080 Move X9, [X23]
	081 Add W10, W10, 1
	082 Move [X20+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {292}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add W9, W10, 1
	089 Add X8, X8, X10
	090 Move [X20+24], W9
	091 Move [X8+32], X21
	092 Move X8, [X9+32]
	093 Move X0, X20
	094 Move X1, X21
	095 Move X8, [X8+192]
	096 Move X2, [X8+112]
	097 Call List`1<Object>.AddWithResize, X0, X1
	098 Move X0, [X22]
	099 Call 0x1C17F10
	100 Move X1, X31
	101 Move X21, X0
	102 Call Object..ctor, X0
	103 Compare X21, 0
	104 JumpIfEqual {292}
	105 Move X8, 0x52E000
	106 Move X8, [X8+1256]
	107 Move X8, [X8]
	108 Move [X21+16], X8
	109 Move W10, [X20+28]
	110 Move X8, [X20+16]
	111 Move X9, [X23]
	112 Add W10, W10, 1
	113 Move [X20+28], W10
	114 Compare X8, 0
	115 JumpIfEqual {292}
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Move W11, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W9, W10, 1
	120 Add X8, X8, X10
	121 Move [X20+24], W9
	122 Move [X8+32], X21
	123 Move X8, [X9+32]
	124 Move X0, X20
	125 Move X1, X21
	126 Move X8, [X8+192]
	127 Move X2, [X8+112]
	128 Call List`1<Object>.AddWithResize, X0, X1
	129 Move X0, [X22]
	130 Call 0x1C17F10
	131 Move X1, X31
	132 Move X21, X0
	133 Call Object..ctor, X0
	134 Compare X21, 0
	135 JumpIfEqual {292}
	136 Move X8, 0x552000
	137 Move X8, [X8+1400]
	138 Move X8, [X8]
	139 Move [X21+16], X8
	140 Move W10, [X20+28]
	141 Move X8, [X20+16]
	142 Move X9, [X23]
	143 Add W10, W10, 1
	144 Move [X20+28], W10
	145 Compare X8, 0
	146 JumpIfEqual {292}
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Move W11, [X8+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add W9, W10, 1
	151 Add X8, X8, X10
	152 Move [X20+24], W9
	153 Move [X8+32], X21
	154 Move X8, [X9+32]
	155 Move X0, X20
	156 Move X1, X21
	157 Move X8, [X8+192]
	158 Move X2, [X8+112]
	159 Call List`1<Object>.AddWithResize, X0, X1
	160 Move X0, [X22]
	161 Call 0x1C17F10
	162 Move X1, X31
	163 Move X21, X0
	164 Call Object..ctor, X0
	165 Compare X21, 0
	166 JumpIfEqual {292}
	167 Move X8, 0x552000
	168 Move X8, [X8+1384]
	169 Move X8, [X8]
	170 Move [X21+16], X8
	171 Move W10, [X20+28]
	172 Move X8, [X20+16]
	173 Move X9, [X23]
	174 Add W10, W10, 1
	175 Move [X20+28], W10
	176 Compare X8, 0
	177 JumpIfEqual {292}
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Move W11, [X8+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add W9, W10, 1
	182 Add X8, X8, X10
	183 Move [X20+24], W9
	184 Move [X8+32], X21
	185 Move X8, [X9+32]
	186 Move X0, X20
	187 Move X1, X21
	188 Move X8, [X8+192]
	189 Move X2, [X8+112]
	190 Call List`1<Object>.AddWithResize, X0, X1
	191 Move X0, [X22]
	192 Call 0x1C17F10
	193 Move X1, X31
	194 Move X21, X0
	195 Call Object..ctor, X0
	196 Compare X21, 0
	197 JumpIfEqual {292}
	198 Move X8, 0x552000
	199 Move X8, [X8+1392]
	200 Move X8, [X8]
	201 Move [X21+16], X8
	202 Move W10, [X20+28]
	203 Move X8, [X20+16]
	204 Move X9, [X23]
	205 Add W10, W10, 1
	206 Move [X20+28], W10
	207 Compare X8, 0
	208 JumpIfEqual {292}
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Move W11, [X8+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add W9, W10, 1
	213 Add X8, X8, X10
	214 Move [X20+24], W9
	215 Move [X8+32], X21
	216 Move X8, [X9+32]
	217 Move X0, X20
	218 Move X1, X21
	219 Move X8, [X8+192]
	220 Move X2, [X8+112]
	221 Call List`1<Object>.AddWithResize, X0, X1
	222 Move X0, [X22]
	223 Call 0x1C17F10
	224 Move X1, X31
	225 Move X21, X0
	226 Call Object..ctor, X0
	227 Compare X21, 0
	228 JumpIfEqual {292}
	229 Move X8, 0x552000
	230 Move X8, [X8+1368]
	231 Move X8, [X8]
	232 Move [X21+16], X8
	233 Move W10, [X20+28]
	234 Move X8, [X20+16]
	235 Move X9, [X23]
	236 Add W10, W10, 1
	237 Move [X20+28], W10
	238 Compare X8, 0
	239 JumpIfEqual {292}
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 Move W11, [X8+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add W9, W10, 1
	244 Add X8, X8, X10
	245 Move [X20+24], W9
	246 Move [X8+32], X21
	247 Move X8, [X9+32]
	248 Move X0, X20
	249 Move X1, X21
	250 Move X8, [X8+192]
	251 Move X2, [X8+112]
	252 Call List`1<Object>.AddWithResize, X0, X1
	253 Move X0, [X22]
	254 Call 0x1C17F10
	255 Move X1, X31
	256 Move X21, X0
	257 Call Object..ctor, X0
	258 Compare X21, 0
	259 JumpIfEqual {292}
	260 Move X8, 0x552000
	261 Move X8, [X8+1376]
	262 Move X8, [X8]
	263 Move [X21+16], X8
	264 Move W10, [X20+28]
	265 Move X8, [X20+16]
	266 Move X9, [X23]
	267 Add W10, W10, 1
	268 Move [X20+28], W10
	269 Compare X8, 0
	270 JumpIfEqual {292}
	271 NotImplemented "Instruction LDRSW not yet implemented."
	272 Move W11, [X8+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Add W9, W10, 1
	275 Add X8, X8, X10
	276 Move [X20+24], W9
	277 Move [X8+32], X21
	278 Move X8, [X9+32]
	279 Move X0, X20
	280 Move X1, X21
	281 Move X8, [X8+192]
	282 Move X2, [X8+112]
	283 Call List`1<Object>.AddWithResize, X0, X1
	284 Move [X19+16], X20
	285 Move X20, [X31+32]
	286 Move X19, [X31+40]
	287 Move X22, [X31+16]
	288 Move X21, [X31+24]
	289 Move X30, [X31+48]
	290 Move X23, [X31+56]
	291 Return 
	292 Call 0x1C17F20

Method: System.Void ValidateTheme()

Disassembly:
	0x03BCCDC4 LDR X0, [X0 + 0x998]
	0x03BCCDC8 BL 0x1C16CF4
	0x03BCCDCC ADRP X0, 0x591000
	0x03BCCDD0 LDR X0, [X0 + 0x9A0]
	0x03BCCDD4 BL 0x1C16CF4
	0x03BCCDD8 ADRP X0, 0x591000
	0x03BCCDDC LDR X0, [X0 + 0x9A8]
	0x03BCCDE0 BL 0x1C16CF4
	0x03BCCDE4 MOVZ W8, 0x1
	0x03BCCDE8 STRB W8, [X20 + 0xE36]
	0x03BCCDEC ADRP X23, 0x591000
	0x03BCCDF0 ADRP X24, 0x591000
	0x03BCCDF4 ADRP X25, 0x591000
	0x03BCCDF8 LDR X23, [X23 + 0x970]
	0x03BCCDFC LDR X24, [X24 + 0x988]
	0x03BCCE00 LDR X25, [X25 + 0x998]
	0x03BCCE04 MOV X0, X19
	0x03BCCE08 BL 0x3BCD62C
	0x03BCCE0C TBZ X0, 0x0, 0x3BCCEB4
	0x03BCCE10 LDR X0, [X19 + 0x30]
	0x03BCCE14 CBZ X0, 0x3BCD0B0
	0x03BCCE18 MOV W20, W31
	0x03BCCE1C LDR X1, [X23]
	0x03BCCE20 BL 0x2D57B54
	0x03BCCE24 CMP W20, W0
	0x03BCCE28 B.GE 0x3BCCEB4
	0x03BCCE2C LDR X0, [X19 + 0x30]
	0x03BCCE30 CBZ X0, 0x3BCD0B0
	0x03BCCE34 LDR X2, [X24]
	0x03BCCE38 MOV W1, W20
	0x03BCCE3C BL 0x2D57B78
	0x03BCCE40 CBZ X0, 0x3BCD0B0
	0x03BCCE44 LDR X8, [X0]
	0x03BCCE48 LDR X1, [X25]
	0x03BCCE4C MOV X21, X0
	0x03BCCE50 LDRH W9, [X8 + 0x12E]
	0x03BCCE54 CBZ X9, 0x3BCCE78
	0x03BCCE58 LDR X10, [X8 + 0xB0]
	0x03BCCE5C ADD X10, X10, 0x8
	0x03BCCE60 LDUR X11, [X10 - 0x8]
	0x03BCCE64 CMP X11, X1
	0x03BCCE68 B.EQ 0x3BCCE88
	0x03BCCE6C SUBS X9, X9, 0x1
	0x03BCCE70 ADD X10, X10, 0x10
	0x03BCCE74 B.NE 0x3BCCE60
	0x03BCCE78 MOVZ W2, 0x1
	0x03BCCE7C MOV X0, X21
	0x03BCCE80 BL 0x1C5C788
	0x03BCCE84 B 0x3BCCE98
	0x03BCCE88 LDR W9, [X10]
	0x03BCCE8C ADD W9, W9, 0x1
	0x03BCCE90 ADD X8, X8, W9, 0x4, SXTW
	0x03BCCE94 ADD X0, X8, 0x138
	0x03BCCE98 LDP X8, X1, [X0]
	0x03BCCE9C MOV X0, X21
	0x03BCCEA0 BLR X8
	0x03BCCEA4 LDR X0, [X19 + 0x30]
	0x03BCCEA8 ADD W20, W20, 0x1
	0x03BCCEAC CBNZ X0, 0x3BCCE1C
	0x03BCCEB0 B 0x3BCD0B0
	0x03BCCEB4 ADRP X8, 0xFFFFFFFFFCF1E000
	0x03BCCEB8 LDR V0, [X8 + 0x68]
	0x03BCCEBC FCMP S8, S0
	0x03BCCEC0 B.GT 0x3BCCED4
	0x03BCCEC4 LDR V0, [X19 + 0x50]
	0x03BCCEC8 LDR V1, [X19 + 0x5C]
	0x03BCCECC FCMP S0, S1
	0x03BCCED0 B.LE 0x3BCCEE8
	0x03BCCED4 LDRB W8, [X19 + 0x55]
	0x03BCCED8 CBNZ W8, 0x3BCD0C8
	0x03BCCEDC MOVZ W8, 0x1
	0x03BCCEE0 FMOV S8, 1
	0x03BCCEE4 STRB W8, [X19 + 0x55]
	0x03BCCEE8 LDR X0, [X19 + 0x30]
	0x03BCCEEC CBZ X0, 0x3BCD0B0
	0x03BCCEF0 ADRP X29, 0x591000
	0x03BCCEF4 ADRP X26, 0x591000
	0x03BCCEF8 ADRP X27, 0x591000
	0x03BCCEFC ADRP X28, 0x591000
	0x03BCCF00 LDR X29, [X29 + 0x9A8]
	0x03BCCF04 LDR X26, [X26 + 0x978]
	0x03BCCF08 LDR X27, [X27 + 0x980]
	0x03BCCF0C LDR X28, [X28 + 0x9A0]
	0x03BCCF10 MOV W20, W31
	0x03BCCF14 LDR X1, [X23]
	0x03BCCF18 BL 0x2D57B54
	0x03BCCF1C CMP W20, W0
	0x03BCCF20 B.GE 0x3BCD010
	0x03BCCF24 LDR X0, [X19 + 0x30]
	0x03BCCF28 CBZ X0, 0x3BCD0B0
	0x03BCCF2C LDR X2, [X24]
	0x03BCCF30 LDR X21, [X19 + 0x40]
	0x03BCCF34 MOV W1, W20
	0x03BCCF38 BL 0x2D57B78
	0x03BCCF3C CBZ X0, 0x3BCD0B0
	0x03BCCF40 LDR X8, [X0]
	0x03BCCF44 LDR X1, [X25]
	0x03BCCF48 MOV X22, X0
	0x03BCCF4C LDRH W9, [X8 + 0x12E]
	0x03BCCF50 CBZ X9, 0x3BCCF74
	0x03BCCF54 LDR X10, [X8 + 0xB0]
	0x03BCCF58 ADD X10, X10, 0x8
	0x03BCCF5C LDUR X11, [X10 - 0x8]
	0x03BCCF60 CMP X11, X1
	0x03BCCF64 B.EQ 0x3BCCF84
	0x03BCCF68 SUBS X9, X9, 0x1
	0x03BCCF6C ADD X10, X10, 0x10
	0x03BCCF70 B.NE 0x3BCCF5C
	0x03BCCF74 MOV X0, X22
	0x03BCCF78 MOV W2, W31
	0x03BCCF7C BL 0x1C5C788
	0x03BCCF80 B 0x3BCCF90
	0x03BCCF84 LDRSW X9, [X10]
	0x03BCCF88 ADD X8, X8, X9, 0x4, LSL
	0x03BCCF8C ADD X0, X8, 0x138
	0x03BCCF90 LDP X8, X1, [X0]
	0x03BCCF94 MOV X0, X22
	0x03BCCF98 MOV V0.16B, V8.16B
	0x03BCCF9C BLR X8
	0x03BCCFA0 CBZ X21, 0x3BCD0B0
	0x03BCCFA4 LDR W11, [X21 + 0x1C]
	0x03BCCFA8 LDR X9, [X21 + 0x10]
	0x03BCCFAC LDR X10, [X29]
	0x03BCCFB0 ADD W11, W11, 0x1
	0x03BCCFB4 STR W11, [X21 + 0x1C]
	0x03BCCFB8 CBZ X9, 0x3BCD0B0
	0x03BCCFBC LDRSW X11, [X21 + 0x18]
	0x03BCCFC0 LDR W12, [X9 + 0x18]
	0x03BCCFC4 MOV X8, X0
	0x03BCCFC8 MOV X2, X1
	0x03BCCFCC CMP W11, W12
	0x03BCCFD0 B.CS 0x3BCCFE8
	0x03BCCFD4 ADD W10, W11, 0x1
	0x03BCCFD8 ADD X9, X9, X11, 0x4, LSL
	0x03BCCFDC STR W10, [X21 + 0x18]
	0x03BCCFE0 STP X8, X2, [X9 + 0x20]
	0x03BCCFE4 B 0x3BCD000
	0x03BCCFE8 LDR X9, [X10 + 0x20]
	0x03BCCFEC MOV X0, X21
	0x03BCCFF0 MOV X1, X8
	0x03BCCFF4 LDR X9, [X9 + 0xC0]
	0x03BCCFF8 LDR X3, [X9 + 0x70]
	0x03BCCFFC BL 0x2FEA29C
	0x03BCD000 LDR X0, [X19 + 0x30]
	0x03BCD004 ADD W20, W20, 0x1
	0x03BCD008 CBNZ X0, 0x3BCCF14
	0x03BCD00C B 0x3BCD0B0
	0x03BCD010 LDR X0, [X19 + 0x38]
	0x03BCD014 CBZ X0, 0x3BCD0B0
	0x03BCD018 MOV W20, W31
	0x03BCD01C LDR X1, [X26]
	0x03BCD020 BL 0x2D57B54
	0x03BCD024 CMP W20, W0
	0x03BCD028 B.GE 0x3BCD0B4
	0x03BCD02C LDR X0, [X19 + 0x38]
	0x03BCD030 CBZ X0, 0x3BCD0B0
	0x03BCD034 LDR X2, [X27]
	0x03BCD038 MOV W1, W20
	0x03BCD03C BL 0x2D57B78
	0x03BCD040 CBZ X0, 0x3BCD0B0
	0x03BCD044 LDR X8, [X0]
	0x03BCD048 LDR X1, [X28]
	0x03BCD04C MOV X21, X0
	0x03BCD050 LDRH W9, [X8 + 0x12E]
	0x03BCD054 CBZ X9, 0x3BCD078
	0x03BCD058 LDR X10, [X8 + 0xB0]
	0x03BCD05C ADD X10, X10, 0x8
	0x03BCD060 LDUR X11, [X10 - 0x8]
	0x03BCD064 CMP X11, X1
	0x03BCD068 B.EQ 0x3BCD088
	0x03BCD06C SUBS X9, X9, 0x1
	0x03BCD070 ADD X10, X10, 0x10
	0x03BCD074 B.NE 0x3BCD060
	0x03BCD078 MOV X0, X21
	0x03BCD07C MOV W2, W31
	0x03BCD080 BL 0x1C5C788
	0x03BCD084 B 0x3BCD094
	0x03BCD088 LDRSW X9, [X10]
	0x03BCD08C ADD X8, X8, X9, 0x4, LSL
	0x03BCD090 ADD X0, X8, 0x138
	0x03BCD094 LDP X8, X1, [X0]
	0x03BCD098 MOV X0, X21
	0x03BCD09C MOV V0.16B, V8.16B
	0x03BCD0A0 BLR X8
	0x03BCD0A4 LDR X0, [X19 + 0x38]
	0x03BCD0A8 ADD W20, W20, 0x1
	0x03BCD0AC CBNZ X0, 0x3BCD01C
	0x03BCD0B0 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x817000
	015 Move W8, [X20+3610]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x552000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move X0, 0x592000
	025 Move X0, [X0+2304]
	026 Call 0x1C17CF4
	027 Move X0, 0x529000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0x528000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x592000
	034 Move X0, [X0+2312]
	035 Call 0x1C17CF4
	036 Move X0, 0x592000
	037 Move X0, [X0+2320]
	038 Call 0x1C17CF4
	039 Move X0, 0x592000
	040 Move X0, [X0+2328]
	041 Call 0x1C17CF4
	042 Move X0, 0x52E000
	043 Move X0, [X0+1256]
	044 Call 0x1C17CF4
	045 Move X0, 0x552000
	046 Move X0, [X0+1408]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+3610], W8
	050 Move X8, [X19+16]
	051 Compare X8, 0
	052 JumpIfEqual {198}
	053 Move X22, 0x552000
	054 Move X22, [X22+1264]
	055 Move W20, [X8+24]
	056 Move X0, [X22]
	057 Move W9, [X0+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X21, 0x80F000
	062 Move W8, [X21+312]
	063 Compare W8, 0
	064 JumpIfNotEqual {70}
	065 Move X0, 0x552000
	066 Move X0, [X0+1264]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X21+312], W8
	070 Move X0, [X22]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X22]
	076 Move X8, [X0+184]
	077 Move W8, [X8+24]
	078 Subtract W21, W8, W20
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, [X19+16]
	082 Compare X0, 0
	083 JumpIfEqual {212}
	084 Move X8, 0x592000
	085 Move X8, [X8+2328]
	086 Move W1, 1
	087 Move X2, [X8]
	088 Call List`1<Object>.get_Item, X0, X1
	089 Move X20, X0
	090 Move X8, 0x592000
	091 Move X8, [X8+2304]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X20, X0
	096 Call Object..ctor, X0
	097 Compare X20, 0
	098 JumpIfEqual {212}
	099 Move X8, 0x52E000
	100 Move X8, [X8+1256]
	101 Move X8, [X8]
	102 Move [X20+16], X8
	103 Move X26, 0x592000
	104 Move X27, 0x592000
	105 Move X28, 0x529000
	106 Move X29, 0x552000
	107 Move X23, 0x528000
	108 Move X26, [X26+2312]
	109 Move X27, [X27+2328]
	110 Move X28, [X28+2520]
	111 Move X29, [X29+1408]
	112 Move X23, [X23+2600]
	113 Add W24, W21, 1
	114 Move X8, 0x592000
	115 Move X8, [X8+2304]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X1, X31
	119 Move X21, X0
	120 Call Object..ctor, X0
	121 Compare X20, 0
	122 JumpIfEqual {212}
	123 Compare X21, 0
	124 JumpIfEqual {212}
	125 Move X8, [X20+16]
	126 Move [X21+16], X8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 Move [X21+24], V0
	129 Move X0, [X19+16]
	130 Compare X0, 0
	131 JumpIfEqual {212}
	132 Move W10, [X0+28]
	133 Move X8, [X0+16]
	134 Move X9, [X26]
	135 Add W10, W10, 1
	136 Move [X0+28], W10
	137 Compare X8, 0
	138 JumpIfEqual {212}
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Move W11, [X8+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Add W9, W10, 1
	143 Add X8, X8, X10
	144 Move [X0+24], W9
	145 Move [X8+32], X21
	146 Move X8, [X9+32]
	147 Move X1, X21
	148 Move X8, [X8+192]
	149 Move X2, [X8+112]
	150 Call List`1<Object>.AddWithResize, X0, X1
	151 Move X8, [X19+16]
	152 Compare X8, 0
	153 JumpIfEqual {212}
	154 Move X0, [X22]
	155 Move W8, [X8+24]
	156 Move X25, X22
	157 Move W9, [X0+224]
	158 Subtract W21, W8, 1
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move W0, W21
	163 Call AffordanceStateShortcuts.GetNameForIndex, X0
	164 Move X8, [X19+16]
	165 Compare X8, 0
	166 JumpIfEqual {212}
	167 Move X2, [X27]
	168 Move X22, X0
	169 And W1, W21, 255
	170 Move X0, X8
	171 Call List`1<Object>.get_Item, X0, X1
	172 Compare X0, 0
	173 JumpIfEqual {212}
	174 Move [X0+16], X22
	175 Move X0, [X28]
	176 Add X1, X31, 12
	177 Move [X31+12], W21
	178 Call 0x1C17E04
	179 Move X8, [X29]
	180 Move X1, X0
	181 Move X2, X22
	182 Move X3, X31
	183 Move X0, X8
	184 Call String.Format, X0, X1, X2
	185 Move X8, [X23]
	186 Move X21, X0
	187 Move W9, [X8+224]
	188 Compare W9, 0
	189 JumpIfNotEqual {192}
	190 Move X0, X8
	191 Call 0x1C17DFC
	192 Move X0, X21
	193 Move X1, X31
	194 Call Debug.LogWarning, X0
	195 Subtract W24, W24, 1
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X22, X25
	198 Move X20, [X31+96]
	199 Move X19, [X31+104]
	200 Move X22, [X31+80]
	201 Move X21, [X31+88]
	202 Move X24, [X31+64]
	203 Move X23, [X31+72]
	204 Move X26, [X31+48]
	205 Move X25, [X31+56]
	206 Move X28, [X31+32]
	207 Move X27, [X31+40]
	208 Move X29, [X31+16]
	209 Move X30, [X31+24]
	210 Add X31, X31, 112
	211 Return 
	212 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Audio.AudioAffordanceThemeData GetAffordanceThemeDataForIndex(System.Byte stateIndex)

Disassembly:
	0x03BCD154 STRB W8, [X19 + 0x54]
	0x03BCD158 LDR X0, [X22]
	0x03BCD15C LDR X20, [X19 + 0x28]
	0x03BCD160 BL 0x1C16F10
	0x03BCD164 LDR X2, [X21]
	0x03BCD168 MOV X1, X19
	0x03BCD16C MOV X3, X31
	0x03BCD170 MOV X21, X0
	0x03BCD174 BL 0x2980F64
	0x03BCD178 CBZ X20, 0x3BCD1B8
	0x03BCD17C ADRP X8, 0x590000
	0x03BCD180 LDR X8, [X8 + 0x9C0]
	0x03BCD184 MOV X0, X20
	0x03BCD188 MOV X1, X21
	0x03BCD18C LDR X2, [X8]
	0x03BCD190 BL 0x28CB650
	0x03BCD194 LDR X8, [X19 + 0x48]
	0x03BCD198 CBZ X8, 0x3BCD1B8
	0x03BCD19C LDP X20, X19, [X31 + 0x20]
	0x03BCD1A0 LDP X22, X21, [X31 + 0x10]
	0x03BCD1A4 MOV X1, X0
	0x03BCD1A8 MOV X0, X8
	0x03BCD1AC MOV X2, X31
	0x03BCD1B0 LDR X30, [X31], #0x30
	0x03BCD1B4 B 0x3B3175C
	0x03BCD1B8 BL 0x1C16F20
	0x03BCD1BC STR X30, [X31 - 0x10]!
	0x03BCD1C0 LDR X0, [X0 + 0x48]
	0x03BCD1C4 CBZ X0, 0x3BCD1D4
	0x03BCD1C8 MOV X2, X31
	0x03BCD1CC LDR X30, [X31], #0x10
	0x03BCD1D0 B 0x3B3175C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x816000
	006 Move W8, [X21+3611]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x591000
	014 Move X0, [X0+2320]
	015 Call 0x1C17CF4
	016 Move X0, 0x591000
	017 Move X0, [X0+2328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3611], W8
	021 Move X0, [X20+16]
	022 Compare X0, 0
	023 JumpIfEqual {42}
	024 Move W8, [X0+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x591000
	027 Move X8, [X8+2328]
	028 And W1, W19, 255
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, [X8]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call List`1<Object>.get_Item, X0, X1
	035 Return X0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X0, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20

