Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialHelperBase

Method: UnityEngine.Renderer get_rendererTarget()

Disassembly:
	0x03BD4B68 CBZ W8, 0x3BD4BBC
	0x03BD4B6C ADRP X8, 0x589000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_rendererTarget(UnityEngine.Renderer value)

Disassembly:
	0x03BD4B70 LDR X8, [X8 + 0xC00]
	0x03BD4B74 ADRP X20, 0x51F000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_materialIndex()

Disassembly:
	0x03BD4B78 MOV X0, X19
	0x03BD4B7C LDR X1, [X8]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_materialIndex(System.Int32 value)

Disassembly:
	0x03BD4B80 LDR X20, [X20 + 0x598]
	0x03BD4B84 BL 0x21A3F50

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Boolean get_isInitialized()

Disassembly:
	0x03BD4B88 LDR X8, [X20]
	0x03BD4B8C MOV X19, X0

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_isInitialized(System.Boolean value)

Disassembly:
	0x03BD4B90 LDR W9, [X8 + 0xE0]
	0x03BD4B94 CBNZ W9, 0x3BD4BA0
	0x03BD4B98 MOV X0, X8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+44], W8
	003 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03BD4B9C BL 0x1C16DFC
	0x03BD4BA0 MOV X0, X19
	0x03BD4BA4 MOV X1, X31
	0x03BD4BA8 MOV X2, X31
	0x03BD4BAC BL 0x3C354F8
	0x03BD4BB0 TBZ X0, 0x0, 0x3BD4BBC
	0x03BD4BB4 CBZ X19, 0x3BD4BC8
	0x03BD4BB8 STRB W31, [X19 + 0x48]
	0x03BD4BBC LDP X20, X19, [X31 + 0x10]
	0x03BD4BC0 LDP X30, X21, [X31], #0x20
	0x03BD4BC4 RET
	0x03BD4BC8 BL 0x1C16F20
	0x03BD4BCC STP D11, D10, [X31 - 0x30]!
	0x03BD4BD0 STP D9, D8, [X31 + 0x10]
	0x03BD4BD4 STP X30, X19, [X31 + 0x20]
	0x03BD4BD8 MOV V8.16B, V3.16B
	0x03BD4BDC MOV V9.16B, V2.16B
	0x03BD4BE0 MOV V10.16B, V1.16B
	0x03BD4BE4 MOV V11.16B, V0.16B
	0x03BD4BE8 MOV X19, X0
	0x03BD4BEC BL 0x3BD4298
	0x03BD4BF0 LDR W8, [X19 + 0xB8]
	0x03BD4BF4 CMP W8, 0x1
	0x03BD4BF8 B.EQ 0x3BD4C2C
	0x03BD4BFC CBNZ W8, 0x3BD4C58
	0x03BD4C00 LDR X0, [X19 + 0xB0]
	0x03BD4C04 CBZ X0, 0x3BD4C68
	0x03BD4C08 MOV V2.16B, V9.16B
	0x03BD4C0C MOV V3.16B, V8.16B
	0x03BD4C10 LDP X30, X19, [X31 + 0x20]
	0x03BD4C14 LDP D9, D8, [X31 + 0x10]
	0x03BD4C18 MOV V0.16B, V11.16B
	0x03BD4C1C MOV V1.16B, V10.16B
	0x03BD4C20 MOV X1, X31
	0x03BD4C24 LDP D11, D10, [X31], #0x30
	0x03BD4C28 B 0x3C1161C
	0x03BD4C2C LDR X0, [X19 + 0xB0]
	0x03BD4C30 CBZ X0, 0x3BD4C68
	0x03BD4C34 MOV V2.16B, V9.16B
	0x03BD4C38 MOV V3.16B, V8.16B
	0x03BD4C3C LDP X30, X19, [X31 + 0x20]
	0x03BD4C40 LDP D9, D8, [X31 + 0x10]
	0x03BD4C44 MOV V0.16B, V11.16B
	0x03BD4C48 MOV V1.16B, V10.16B
	0x03BD4C4C MOV X1, X31
	0x03BD4C50 LDP D11, D10, [X31], #0x30
	0x03BD4C54 B 0x3C11750
	0x03BD4C58 LDP X30, X19, [X31 + 0x20]
	0x03BD4C5C LDP D9, D8, [X31 + 0x10]
	0x03BD4C60 LDP D11, D10, [X31], #0x30
	0x03BD4C64 RET
	0x03BD4C68 BL 0x1C16F20
	0x03BD4C6C STR X30, [X31 - 0x20]!
	0x03BD4C70 STP X20, X19, [X31 + 0x10]
	0x03BD4C74 ADRP X20, 0x80E000
	0x03BD4C78 LDRB W8, [X20 + 0xE71]
	0x03BD4C7C MOV X19, X0
	0x03BD4C80 TBNZ X8, 0x0, 0x3BD4CA4
	0x03BD4C84 ADRP X0, 0x589000
	0x03BD4C88 LDR X0, [X0 + 0xC08]
	0x03BD4C8C BL 0x1C16CF4
	0x03BD4C90 ADRP X0, 0x589000
	0x03BD4C94 LDR X0, [X0 + 0xC10]
	0x03BD4C98 BL 0x1C16CF4
	0x03BD4C9C MOVZ W8, 0x1
	0x03BD4CA0 STRB W8, [X20 + 0xE71]
	0x03BD4CA4 LDRB W8, [X19 + 0x54]
	0x03BD4CA8 CBZ W8, 0x3BD4CB8
	0x03BD4CAC LDP X20, X19, [X31 + 0x10]
	0x03BD4CB0 LDR X30, [X31], #0x20
	0x03BD4CB4 RET
	0x03BD4CB8 LDR X0, [X19 + 0xB0]
	0x03BD4CBC CBZ X0, 0x3BD4D04
	0x03BD4CC0 MOV X1, X31
	0x03BD4CC4 BL 0x3C11580
	0x03BD4CC8 LDR X0, [X19 + 0xB0]
	0x03BD4CCC STP S0, S1, [X19 + 0xC0]
	0x03BD4CD0 STP S2, S3, [X19 + 0xC8]
	0x03BD4CD4 CBZ X0, 0x3BD4D04
	0x03BD4CD8 MOV X1, X31
	0x03BD4CDC BL 0x3C116B4
	0x03BD4CE0 STP S0, S1, [X19 + 0xD0]
	0x03BD4CE4 STP S2, S3, [X19 + 0xD8]
	0x03BD4CE8 ADRP X8, 0x589000
	0x03BD4CEC LDR X8, [X8 + 0xC08]
	0x03BD4CF0 MOV X0, X19
	0x03BD4CF4 LDP X20, X19, [X31 + 0x10]
	0x03BD4CF8 LDR X1, [X8]
	0x03BD4CFC LDR X30, [X31], #0x20
	0x03BD4D00 B 0x2642A54
	0x03BD4D04 BL 0x1C16F20
	0x03BD4D08 STR X30, [X31 - 0x20]!
	0x03BD4D0C STP X20, X19, [X31 + 0x10]
	0x03BD4D10 ADRP X20, 0x80E000
	0x03BD4D14 LDRB W8, [X20 + 0xE72]
	0x03BD4D18 MOV X19, X0
	0x03BD4D1C TBNZ X8, 0x0, 0x3BD4D34
	0x03BD4D20 ADRP X0, 0x589000
	0x03BD4D24 LDR X0, [X0 + 0xBA8]
	0x03BD4D28 BL 0x1C16CF4
	0x03BD4D2C MOVZ W8, 0x1
	0x03BD4D30 STRB W8, [X20 + 0xE72]
	0x03BD4D34 LDR W8, [X19 + 0xB8]
	0x03BD4D38 CMP W8, 0x1
	0x03BD4D3C B.EQ 0x3BD4D50
	0x03BD4D40 CBNZ W8, 0x3BD4D5C
	0x03BD4D44 LDP S0, S1, [X19 + 0xC0]
	0x03BD4D48 LDP S2, S3, [X19 + 0xC8]
	0x03BD4D4C B 0x3BD4D70
	0x03BD4D50 LDP S0, S1, [X19 + 0xD0]
	0x03BD4D54 LDP S2, S3, [X19 + 0xD8]
	0x03BD4D58 B 0x3BD4D70
	0x03BD4D5C ADRP X8, 0x589000
	0x03BD4D60 LDR X8, [X8 + 0xBA8]
	0x03BD4D64 MOV X0, X19
	0x03BD4D68 LDR X1, [X8]
	0x03BD4D6C BL 0x2642AC8
	0x03BD4D70 LDP X20, X19, [X31 + 0x10]
	0x03BD4D74 LDR X30, [X31], #0x20
	0x03BD4D78 RET
	0x03BD4D7C MOVZ W8, 0x1
	0x03BD4D80 STRB W8, [X0 + 0xBC]
	0x03BD4D84 B 0x3BD43A0
	0x03BD4D88 LDR X0, [X0 + 0xB0]
	0x03BD4D8C RET
	0x03BD4D90 STR X1, [X0 + 0xB0]
	0x03BD4D94 RET
	0x03BD4D98 LDR X0, [X0 + 0xB8]
	0x03BD4D9C RET
	0x03BD4DA0 STR X1, [X0 + 0xB8]
	0x03BD4DA4 B 0x3BD4DA8
	0x03BD4DA8 STP X30, X21, [X31 - 0x20]!
	0x03BD4DAC STP X20, X19, [X31 + 0x10]
	0x03BD4DB0 ADRP X20, 0x80E000
	0x03BD4DB4 LDRB W8, [X20 + 0xE75]
	0x03BD4DB8 MOV X19, X0
	0x03BD4DBC TBNZ X8, 0x0, 0x3BD4DE0
	0x03BD4DC0 ADRP X0, 0x51F000
	0x03BD4DC4 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x80F000
	006 Move W8, [X20+3685]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {35}
	012 Move X0, 0x58A000
	013 Move X0, [X0+2936]
	014 Call 0x1C17CF4
	015 Move X0, 0x520000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x54A000
	019 Move X0, [X0+488]
	020 Call 0x1C17CF4
	021 Move X0, 0x58A000
	022 Move X0, [X0+2944]
	023 Call 0x1C17CF4
	024 Move X0, 0x58A000
	025 Move X0, [X0+2952]
	026 Call 0x1C17CF4
	027 Move X0, 0x58A000
	028 Move X0, [X0+2960]
	029 Call 0x1C17CF4
	030 Move X0, 0x58A000
	031 Move X0, [X0+2968]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3685], W8
	035 Move W8, [X19+44]
	036 Compare W8, 0
	037 JumpIfEqual {43}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move X21, 0x520000
	044 Move X21, [X21+1432]
	045 Move X20, [X19+32]
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {66}
	059 Move X8, 0x58A000
	060 Move X8, [X8+2936]
	061 Move X0, X19
	062 Move X1, [X8]
	063 Call 0x21A4F50, X0
	064 Move X20, X0
	065 Move [X19+32], X0
	066 Move X20, [X19+32]
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {82}
	080 Move X8, 0x58A000
	081 Move X8, [X8+2952]
	082 Move X0, [X19+32]
	083 Compare X0, 0
	084 JumpIfEqual {164}
	085 Move X1, X31
	086 Call Renderer.get_sharedMaterials, X0
	087 Compare X0, 0
	088 JumpIfEqual {164}
	089 Move X8, [X0+24]
	090 Compare X8, 0
	091 JumpIfEqual {127}
	092 Move X0, [X19+32]
	093 Compare X0, 0
	094 JumpIfEqual {164}
	095 Move W20, [X19+40]
	096 Move X1, X31
	097 Call Renderer.get_sharedMaterials, X0
	098 Compare X0, 0
	099 JumpIfEqual {164}
	100 Move W8, [X0+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, 0x58A000
	103 Move X8, [X8+2968]
	104 Move X1, X19
	105 Move X2, X31
	106 Move X0, [X8]
	107 Call String.Format, X0, X1
	108 Move X8, 0x58A000
	109 Move X8, [X8+2960]
	110 Move X2, X31
	111 Move X1, [X8]
	112 Call String.Concat, X0, X1
	113 Move X8, 0x54A000
	114 Move X8, [X8+488]
	115 Move X20, X0
	116 Move X8, [X8]
	117 Move W9, [X8+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move X0, X20
	123 Move X1, X19
	124 Move X2, X31
	125 Call XRLoggingUtils.LogWarning, X0, X1
	126 Move [X19+40], W31
	127 Move X8, 0x58A000
	128 Move X8, [X8+2944]
	129 Move X0, [X8]
	130 Move X1, X19
	131 Move X2, X31
	132 Call String.Format, X0, X1
	133 Move X8, 0x54A000
	134 Move X8, [X8+488]
	135 Move X20, X0
	136 Move X8, [X8]
	137 Move W9, [X8+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X8
	141 Call 0x1C17DFC
	142 Move X0, X20
	143 Move X1, X19
	144 Move X2, X31
	145 Call XRLoggingUtils.LogError, X0, X1
	146 Move X0, X19
	147 Move X20, [X31+16]
	148 Move X19, [X31+24]
	149 Move W1, W31
	150 Move X2, X31
	151 Move X30, [X31+32]
	152 Move X21, [X31+40]
	153 Call Behaviour.set_enabled, X0, X1
	154 Return 
	155 Move X8, [X19]
	156 Move X0, X19
	157 Move X20, [X31+16]
	158 Move X19, [X31+24]
	159 Move X2, [X8+376]
	160 Move X1, [X8+384]
	161 Move X30, [X31+32]
	162 Move X21, [X31+40]
	163 CallNoReturn X2
	164 Call 0x1C17F20

Method: System.Void Initialize()

Disassembly:
	0x03BD4DC8 BL 0x1C16CF4
	0x03BD4DCC ADRP X0, 0x589000
	0x03BD4DD0 LDR X0, [X0 + 0xC18]

ISIL:
	001 Move W8, 1
	002 Move [X0+44], W8
	003 Return 

Method: UnityEngine.Material GetSharedMaterialForTarget()

Disassembly:
	0x03BD4DD4 BL 0x1C16CF4
	0x03BD4DD8 MOVZ W8, 0x1
	0x03BD4DDC STRB W8, [X20 + 0xE75]
	0x03BD4DE0 LDR X0, [X19 + 0xB8]
	0x03BD4DE4 MOV X1, X31
	0x03BD4DE8 BL 0x32277A8
	0x03BD4DEC TBZ X0, 0x0, 0x3BD4E64
	0x03BD4DF0 ADRP X20, 0x51F000
	0x03BD4DF4 ADRP X21, 0x589000
	0x03BD4DF8 LDR X20, [X20 + 0x598]
	0x03BD4DFC LDR X21, [X21 + 0xC18]
	0x03BD4E00 MOV X0, X31
	0x03BD4E04 BL 0x3C4BB34
	0x03BD4E08 LDR X8, [X20]
	0x03BD4E0C MOV X20, X0
	0x03BD4E10 LDR W9, [X8 + 0xE0]
	0x03BD4E14 CBNZ W9, 0x3BD4E20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X1, X31
	008 Call Renderer.get_sharedMaterials, X0
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Move W9, [X0+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X8, X0, X8
	015 Move X0, [X8+32]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0
	019 Call 0x1C17F20
	020 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03BD4E18 MOV X0, X8
	0x03BD4E1C BL 0x1C16DFC

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

