Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Rendering.ColorGradientLineRendererAffordanceReceiver

Method: UnityEngine.LineRenderer get_lineRenderer()

Disassembly:
	0x03BD5960 STP X30, X23, [X31 - 0x30]!
	0x03BD5964 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_lineRenderer(UnityEngine.LineRenderer value)

Disassembly:
	0x03BD5968 STP X20, X19, [X31 + 0x20]
	0x03BD596C ADRP X22, 0x80D000

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Rendering.ColorGradientLineRendererAffordanceReceiver/LineColorProperty get_lineColorProperty()

Disassembly:
	0x03BD5970 ADRP X23, 0x588000
	0x03BD5974 ADRP X20, 0x588000

ISIL:
	001 Move W0, [X0+184]
	002 Return X0

Method: System.Void set_lineColorProperty(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Rendering.ColorGradientLineRendererAffordanceReceiver/LineColorProperty value)

Disassembly:
	0x03BD5978 ADRP X21, 0x588000
	0x03BD597C LDRB W8, [X22 + 0xE94]
	0x03BD5980 LDR X23, [X23 + 0xC68]
	0x03BD5984 LDR X20, [X20 + 0xC70]
	0x03BD5988 LDR X21, [X21 + 0xC78]

ISIL:
	001 Move X8, [X0]
	002 Move [X0+184], W1
	003 Move X2, [X8+616]
	004 Move X1, [X8+624]
	005 CallNoReturn X2

Method: System.Boolean get_disableXRInteractorLineVisualColorControlIfPresent()

Disassembly:
	0x03BD598C MOV X19, X0
	0x03BD5990 TBNZ X8, 0x0, 0x3BD59C0

ISIL:
	001 Move W0, [X0+188]
	002 Return X0

Method: System.Void set_disableXRInteractorLineVisualColorControlIfPresent(System.Boolean value)

Disassembly:
	0x03BD5994 ADRP X0, 0x588000
	0x03BD5998 LDR X0, [X0 + 0xC78]
	0x03BD599C BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+188], W8
	003 Return 

Method: System.Void Awake()

Disassembly:
	0x03BD59A0 ADRP X0, 0x588000
	0x03BD59A4 LDR X0, [X0 + 0xC70]
	0x03BD59A8 BL 0x1C16CF4
	0x03BD59AC ADRP X0, 0x588000
	0x03BD59B0 LDR X0, [X0 + 0xC68]
	0x03BD59B4 BL 0x1C16CF4
	0x03BD59B8 MOVZ W8, 0x1
	0x03BD59BC STRB W8, [X22 + 0xE94]
	0x03BD59C0 LDR X0, [X23]
	0x03BD59C4 BL 0x1C16F10
	0x03BD59C8 LDR X4, [X20]
	0x03BD59CC FMOV S0, W31
	0x03BD59D0 FMOV S1, W31
	0x03BD59D4 FMOV S2, W31
	0x03BD59D8 MOVZ W1, 0x1
	0x03BD59DC MOV X2, X31
	0x03BD59E0 MOV W3, W31
	0x03BD59E4 MOV X20, X0
	0x03BD59E8 BL 0x28E2DA4
	0x03BD59EC STR X20, [X19 + 0xA8]
	0x03BD59F0 LDR X1, [X21]
	0x03BD59F4 MOV X0, X19
	0x03BD59F8 LDP X20, X19, [X31 + 0x20]
	0x03BD59FC LDP X22, X21, [X31 + 0x10]
	0x03BD5A00 LDP X30, X23, [X31], #0x30
	0x03BD5A04 B 0x2768318
	0x03BD5A08 LDR X0, [X0 + 0xB0]
	0x03BD5A0C RET
	0x03BD5A10 STR X1, [X0 + 0xB0]
	0x03BD5A14 RET
	0x03BD5A18 LDR X0, [X0 + 0xB8]
	0x03BD5A1C RET
	0x03BD5A20 STP X30, X19, [X31 - 0x10]!
	0x03BD5A24 MOV X19, X0
	0x03BD5A28 STR X1, [X0 + 0xB8]
	0x03BD5A2C MOV X0, X1
	0x03BD5A30 MOV X1, X31
	0x03BD5A34 BL 0x3C124EC
	0x03BD5A38 STR W0, [X19 + 0xC0]
	0x03BD5A3C LDP X30, X19, [X31], #0x10
	0x03BD5A40 RET
	0x03BD5A44 STP X30, X21, [X31 - 0x20]!
	0x03BD5A48 STP X20, X19, [X31 + 0x10]
	0x03BD5A4C ADRP X21, 0x80D000
	0x03BD5A50 ADRP X20, 0x51E000
	0x03BD5A54 LDRB W8, [X21 + 0xE7D]
	0x03BD5A58 LDR X20, [X20 + 0x598]
	0x03BD5A5C MOV X19, X0
	0x03BD5A60 TBNZ X8, 0x0, 0x3BD5A84
	0x03BD5A64 ADRP X0, 0x588000
	0x03BD5A68 LDR X0, [X0 + 0xC20]
	0x03BD5A6C BL 0x1C16CF4
	0x03BD5A70 ADRP X0, 0x51E000
	0x03BD5A74 LDR X0, [X0 + 0x598]
	0x03BD5A78 BL 0x1C16CF4
	0x03BD5A7C MOVZ W8, 0x1
	0x03BD5A80 STRB W8, [X21 + 0xE7D]
	0x03BD5A84 LDR X0, [X20]
	0x03BD5A88 LDR X20, [X19 + 0xB0]
	0x03BD5A8C LDR W8, [X0 + 0xE0]
	0x03BD5A90 CBNZ W8, 0x3BD5A98
	0x03BD5A94 BL 0x1C16DFC
	0x03BD5A98 MOV X0, X20
	0x03BD5A9C MOV X1, X31
	0x03BD5AA0 MOV X2, X31
	0x03BD5AA4 BL 0x3C3883C
	0x03BD5AA8 TBZ X0, 0x0, 0x3BD5AC4
	0x03BD5AAC ADRP X8, 0x588000
	0x03BD5AB0 LDR X8, [X8 + 0xC20]
	0x03BD5AB4 MOV X0, X19
	0x03BD5AB8 LDR X1, [X8]
	0x03BD5ABC BL 0x21A3894
	0x03BD5AC0 STR X0, [X19 + 0xB0]
	0x03BD5AC4 LDP X20, X19, [X31 + 0x10]
	0x03BD5AC8 LDP X30, X21, [X31], #0x20
	0x03BD5ACC RET
	0x03BD5AD0 STR X30, [X31 - 0x30]!
	0x03BD5AD4 STP X22, X21, [X31 + 0x10]
	0x03BD5AD8 STP X20, X19, [X31 + 0x20]
	0x03BD5ADC ADRP X21, 0x80D000
	0x03BD5AE0 ADRP X22, 0x588000
	0x03BD5AE4 ADRP X20, 0x51E000
	0x03BD5AE8 LDRB W8, [X21 + 0xE7E]
	0x03BD5AEC LDR X22, [X22 + 0xC80]
	0x03BD5AF0 LDR X20, [X20 + 0x598]
	0x03BD5AF4 MOV X19, X0
	0x03BD5AF8 TBNZ X8, 0x0, 0x3BD5B28
	0x03BD5AFC ADRP X0, 0x588000
	0x03BD5B00 LDR X0, [X0 + 0xC80]
	0x03BD5B04 BL 0x1C16CF4
	0x03BD5B08 ADRP X0, 0x588000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x80E000
	007 Move X22, 0x589000
	008 Move X21, 0x51F000
	009 Move W8, [X20+3695]
	010 Move X22, [X22+3040]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x589000
	018 Move X0, [X0+3040]
	019 Call 0x1C17CF4
	020 Move X0, 0x589000
	021 Move X0, [X0+3048]
	022 Call 0x1C17CF4
	023 Move X0, 0x51F000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x549000
	027 Move X0, [X0+488]
	028 Call 0x1C17CF4
	029 Move X0, 0x589000
	030 Move X0, [X0+3056]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3695], W8
	034 Move X1, [X22]
	035 Move X0, X19
	036 Call 0x2643214, X0
	037 Move X0, [X21]
	038 Move X20, [X19+176]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {106}
	051 Move X8, 0x589000
	052 Move X8, [X8+3048]
	053 Move X0, X19
	054 Move X1, [X8]
	055 Call 0x21A4F50, X0
	056 Move [X19+176], X0
	057 Move X20, X0
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {106}
	071 Move X9, 0x589000
	072 Move X8, [X19]
	073 Move X9, [X9+3056]
	074 Move X0, X19
	075 Move X20, [X9]
	076 Move X9, [X8+360]
	077 Move X1, [X8+368]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X1, X0
	080 Move X0, X20
	081 Move X2, X31
	082 Call String.Concat, X0, X1
	083 Move X8, 0x549000
	084 Move X8, [X8+488]
	085 Move X20, X0
	086 Move X8, [X8]
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X20
	093 Move X1, X19
	094 Move X2, X31
	095 Call XRLoggingUtils.LogError, X0, X1
	096 Move X0, X19
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move W1, W31
	102 Move X2, X31
	103 Move X30, [X31+48]
	104 Call Behaviour.set_enabled, X0, X1
	105 Return 
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Return 

Method: System.Void Start()

Disassembly:
	0x03BD5B0C LDR X0, [X0 + 0xC20]
	0x03BD5B10 BL 0x1C16CF4
	0x03BD5B14 ADRP X0, 0x51E000
	0x03BD5B18 LDR X0, [X0 + 0x598]
	0x03BD5B1C BL 0x1C16CF4
	0x03BD5B20 MOVZ W8, 0x1
	0x03BD5B24 STRB W8, [X21 + 0xE7E]
	0x03BD5B28 LDR X1, [X22]
	0x03BD5B2C MOV X0, X19
	0x03BD5B30 BL 0x2645A80
	0x03BD5B34 LDR X0, [X20]
	0x03BD5B38 LDR X20, [X19 + 0xB0]
	0x03BD5B3C LDR W8, [X0 + 0xE0]
	0x03BD5B40 CBNZ W8, 0x3BD5B48
	0x03BD5B44 BL 0x1C16DFC
	0x03BD5B48 MOV X0, X20
	0x03BD5B4C MOV X1, X31
	0x03BD5B50 MOV X2, X31
	0x03BD5B54 BL 0x3C3883C
	0x03BD5B58 TBZ X0, 0x0, 0x3BD5B74
	0x03BD5B5C ADRP X8, 0x588000
	0x03BD5B60 LDR X8, [X8 + 0xC20]
	0x03BD5B64 MOV X0, X19
	0x03BD5B68 LDR X1, [X8]
	0x03BD5B6C BL 0x21A3894
	0x03BD5B70 STR X0, [X19 + 0xB0]
	0x03BD5B74 LDR X0, [X19 + 0xB8]
	0x03BD5B78 MOV X1, X31
	0x03BD5B7C BL 0x3C124EC
	0x03BD5B80 STR W0, [X19 + 0xC0]
	0x03BD5B84 LDP X20, X19, [X31 + 0x20]
	0x03BD5B88 LDP X22, X21, [X31 + 0x10]
	0x03BD5B8C LDR X30, [X31], #0x30
	0x03BD5B90 RET
	0x03BD5B94 STP D11, D10, [X31 - 0x40]!
	0x03BD5B98 STP D9, D8, [X31 + 0x10]
	0x03BD5B9C STP X30, X21, [X31 + 0x20]
	0x03BD5BA0 STP X20, X19, [X31 + 0x30]
	0x03BD5BA4 LDR X8, [X0 + 0xB0]
	0x03BD5BA8 CBZ X8, 0x3BD5C24
	0x03BD5BAC LDR X20, [X8 + 0x30]
	0x03BD5BB0 MOV V8.16B, V3.16B
	0x03BD5BB4 MOV V9.16B, V2.16B
	0x03BD5BB8 MOV V10.16B, V1.16B
	0x03BD5BBC MOV X19, X0
	0x03BD5BC0 MOV V11.16B, V0.16B
	0x03BD5BC4 MOVZ W9, 0x1
	0x03BD5BC8 STRB W9, [X8 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x80E000
	006 Move X21, 0x589000
	007 Move W8, [X20+3696]
	008 Move X21, [X21+3064]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x589000
	015 Move X0, [X0+3064]
	016 Call 0x1C17CF4
	017 Move X0, 0x589000
	018 Move X0, [X0+3072]
	019 Call 0x1C17CF4
	020 Move X0, 0x51F000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3696], W8
	025 Move X1, [X21]
	026 Move X0, X19
	027 Call 0x2643338, X0
	028 Move W8, [X19+188]
	029 Compare W8, 0
	030 JumpIfEqual {56}
	031 Move X8, 0x589000
	032 Move X8, [X8+3072]
	033 Move X20, 0x51F000
	034 Move X0, X19
	035 Move X1, [X8]
	036 Move X20, [X20+1432]
	037 Call 0x21A4F50, X0
	038 Move X8, [X20]
	039 Move X19, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {56}
	053 Compare X19, 0
	054 JumpIfEqual {61}
	055 Move [X19+72], W31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void OnAffordanceValueUpdated(UnityEngine.Color newValue)

Disassembly:
	0x03BD5BCC CBZ X20, 0x3BD5BFC
	0x03BD5BD0 LDR W21, [X19 + 0xC0]
	0x03BD5BD4 MOV V0.16B, V11.16B
	0x03BD5BD8 MOV V1.16B, V10.16B
	0x03BD5BDC MOV V2.16B, V9.16B
	0x03BD5BE0 MOV V3.16B, V8.16B
	0x03BD5BE4 MOV X0, X31
	0x03BD5BE8 BL 0x3892E28
	0x03BD5BEC MOV X0, X20
	0x03BD5BF0 MOV W1, W21
	0x03BD5BF4 MOV X2, X31
	0x03BD5BF8 BL 0x3C12720
	0x03BD5BFC MOV X0, X19
	0x03BD5C00 MOV V2.16B, V9.16B
	0x03BD5C04 MOV V3.16B, V8.16B
	0x03BD5C08 LDP X20, X19, [X31 + 0x30]
	0x03BD5C0C LDP X30, X21, [X31 + 0x20]
	0x03BD5C10 LDP D9, D8, [X31 + 0x10]
	0x03BD5C14 MOV V0.16B, V11.16B
	0x03BD5C18 MOV V1.16B, V10.16B
	0x03BD5C1C LDP D11, D10, [X31], #0x40
	0x03BD5C20 B 0x3BD5C28
	0x03BD5C24 BL 0x1C16F20
	0x03BD5C28 STP D11, D10, [X31 - 0x40]!
	0x03BD5C2C STP D9, D8, [X31 + 0x10]
	0x03BD5C30 STR X30, [X31 + 0x20]
	0x03BD5C34 STP X20, X19, [X31 + 0x30]
	0x03BD5C38 ADRP X20, 0x80D000
	0x03BD5C3C LDRB W8, [X20 + 0xE98]
	0x03BD5C40 MOV V8.16B, V3.16B
	0x03BD5C44 MOV V9.16B, V2.16B
	0x03BD5C48 MOV V10.16B, V1.16B
	0x03BD5C4C MOV V11.16B, V0.16B
	0x03BD5C50 MOV X19, X0
	0x03BD5C54 TBNZ X8, 0x0, 0x3BD5C6C
	0x03BD5C58 ADRP X0, 0x588000
	0x03BD5C5C LDR X0, [X0 + 0xC88]
	0x03BD5C60 BL 0x1C16CF4
	0x03BD5C64 MOVZ W8, 0x1
	0x03BD5C68 STRB W8, [X20 + 0xE98]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move V8, V3
	008 Move V9, V2
	009 Move V10, V1
	010 Move V11, V0
	011 Move X19, X0
	012 Call ColorAffordanceReceiver.OnAffordanceValueUpdated, X0, X1
	013 Move W8, [X19+184]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Compare W8, 0
	016 JumpIfNotEqual {49}
	017 Move X0, [X19+176]
	018 Compare X0, 0
	019 JumpIfEqual {56}
	020 Move V2, V9
	021 Move V3, V8
	022 Move X30, [X31+32]
	023 Move X19, [X31+40]
	024 Move D9, [X31+16]
	025 Move D8, [X31+24]
	026 Move V0, V11
	027 Move V1, V10
	028 Move X1, X31
	029 Move D11, [X31+48]
	030 Move D10, [X31+56]
	031 Call LineRenderer.set_startColor, X0, X1
	032 Return 
	033 Move X0, [X19+176]
	034 Compare X0, 0
	035 JumpIfEqual {56}
	036 Move V2, V9
	037 Move V3, V8
	038 Move X30, [X31+32]
	039 Move X19, [X31+40]
	040 Move D9, [X31+16]
	041 Move D8, [X31+24]
	042 Move V0, V11
	043 Move V1, V10
	044 Move X1, X31
	045 Move D11, [X31+48]
	046 Move D10, [X31+56]
	047 Call LineRenderer.set_endColor, X0, X1
	048 Return 
	049 Move X30, [X31+32]
	050 Move X19, [X31+40]
	051 Move D9, [X31+16]
	052 Move D8, [X31+24]
	053 Move D11, [X31+48]
	054 Move D10, [X31+56]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void CaptureInitialValue()

Disassembly:
	0x03BD5C6C LDR X19, [X19 + 0xA0]
	0x03BD5C70 CBZ X19, 0x3BD5CB0
	0x03BD5C74 ADRP X20, 0x588000
	0x03BD5C78 LDR X20, [X20 + 0xC88]
	0x03BD5C7C MOV V0.16B, V11.16B
	0x03BD5C80 MOV V1.16B, V10.16B
	0x03BD5C84 MOV V2.16B, V9.16B
	0x03BD5C88 MOV V3.16B, V8.16B
	0x03BD5C8C MOV X0, X31
	0x03BD5C90 BL 0x3892E28
	0x03BD5C94 LDR X1, [X20]
	0x03BD5C98 MOV X0, X19
	0x03BD5C9C LDP X20, X19, [X31 + 0x30]
	0x03BD5CA0 LDR X30, [X31 + 0x20]
	0x03BD5CA4 LDP D9, D8, [X31 + 0x10]
	0x03BD5CA8 LDP D11, D10, [X31], #0x40
	0x03BD5CAC B 0x272B518
	0x03BD5CB0 LDP X20, X19, [X31 + 0x30]
	0x03BD5CB4 LDR X30, [X31 + 0x20]
	0x03BD5CB8 LDP D9, D8, [X31 + 0x10]
	0x03BD5CBC LDP D11, D10, [X31], #0x40
	0x03BD5CC0 RET
	0x03BD5CC4 STP X30, X19, [X31 - 0x10]!
	0x03BD5CC8 MOV X19, X0
	0x03BD5CCC LDR X0, [X0 + 0xB0]
	0x03BD5CD0 CBZ X0, 0x3BD5CF4
	0x03BD5CD4 BL 0x3BD3DD4
	0x03BD5CD8 CBZ X0, 0x3BD5CF4
	0x03BD5CDC LDR W1, [X19 + 0xC0]
	0x03BD5CE0 MOV X2, X31
	0x03BD5CE4 BL 0x3C15FDC
	0x03BD5CE8 MOV X0, X31
	0x03BD5CEC LDP X30, X19, [X31], #0x10
	0x03BD5CF0 B 0x3892E24
	0x03BD5CF4 BL 0x1C16F20
	0x03BD5CF8 B 0x3BD5CFC
	0x03BD5CFC STP X30, X23, [X31 - 0x30]!
	0x03BD5D00 STP X22, X21, [X31 + 0x10]
	0x03BD5D04 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80E000
	005 Move W8, [X20+3697]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x589000
	012 Move X0, [X0+3080]
	013 Call 0x1C17CF4
	014 Move X0, 0x589000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3697], W8
	019 Move W8, [X19+84]
	020 Compare W8, 0
	021 JumpIfEqual {26}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Move X0, [X19+176]
	027 Compare X0, 0
	028 JumpIfEqual {53}
	029 Move X1, X31
	030 Call LineRenderer.get_startColor, X0
	031 Move X0, [X19+176]
	032 Move [X19+192], S0
	033 Move [X19+200], S1
	034 Move [X19+200], S2
	035 Move [X19+208], S3
	036 Compare X0, 0
	037 JumpIfEqual {53}
	038 Move X1, X31
	039 Call LineRenderer.get_endColor, X0
	040 Move [X19+208], S0
	041 Move [X19+216], S1
	042 Move [X19+216], S2
	043 Move [X19+224], S3
	044 Move X8, 0x589000
	045 Move X8, [X8+3080]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X1, [X8]
	050 Move X30, [X31+32]
	051 Call 0x2643A54, X0
	052 Return 
	053 Call 0x1C17F20

Method: UnityEngine.Color GetCurrentValueForCapture()

Disassembly:
	0x03BD5D08 ADRP X22, 0x80D000
	0x03BD5D0C ADRP X23, 0x588000
	0x03BD5D10 ADRP X20, 0x588000
	0x03BD5D14 ADRP X21, 0x588000
	0x03BD5D18 LDRB W8, [X22 + 0xE99]
	0x03BD5D1C LDR X23, [X23 + 0xC90]
	0x03BD5D20 LDR X20, [X20 + 0xC98]
	0x03BD5D24 LDR X21, [X21 + 0xCA0]
	0x03BD5D28 MOV X19, X0
	0x03BD5D2C TBNZ X8, 0x0, 0x3BD5D5C
	0x03BD5D30 ADRP X0, 0x588000
	0x03BD5D34 LDR X0, [X0 + 0xCA0]
	0x03BD5D38 BL 0x1C16CF4
	0x03BD5D3C ADRP X0, 0x588000
	0x03BD5D40 LDR X0, [X0 + 0xC98]
	0x03BD5D44 BL 0x1C16CF4
	0x03BD5D48 ADRP X0, 0x588000
	0x03BD5D4C LDR X0, [X0 + 0xC90]
	0x03BD5D50 BL 0x1C16CF4
	0x03BD5D54 MOVZ W8, 0x1
	0x03BD5D58 STRB W8, [X22 + 0xE99]
	0x03BD5D5C LDR X0, [X23]
	0x03BD5D60 BL 0x1C16F10
	0x03BD5D64 LDR X4, [X20]
	0x03BD5D68 FMOV S0, W31
	0x03BD5D6C FMOV S1, W31
	0x03BD5D70 FMOV S2, W31
	0x03BD5D74 FMOV S3, W31
	0x03BD5D78 MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80E000
	005 Move W8, [X20+3698]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x589000
	012 Move X0, [X0+2984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3698], W8
	016 Move W8, [X19+184]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Compare W8, 0
	019 JumpIfNotEqual {28}
	020 Move S0, [X19+192]
	021 Move S1, [X19+196]
	022 Move S2, [X19+200]
	023 Move S3, [X19+204]
	024 Move S0, [X19+208]
	025 Move S1, [X19+212]
	026 Move S2, [X19+216]
	027 Move S3, [X19+220]
	028 Move X8, 0x589000
	029 Move X8, [X8+2984]
	030 Move X0, X19
	031 Move X1, [X8]
	032 Call 0x2643AC8, X0
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03BD5D7C MOV X2, X31
	0x03BD5D80 MOV W3, W31
	0x03BD5D84 MOV X20, X0

ISIL:
	001 Move W8, 1
	002 Move [X0+188], W8
	003 Call ColorAffordanceReceiver..ctor, X0
	004 Return 

