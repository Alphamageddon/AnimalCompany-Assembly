Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Audio.AudioAffordanceReceiver

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider get_affordanceStateProvider()

Disassembly:
	0x03BD7778 LDP V2, V3, [X31 + 0x20]
	0x03BD777C LDR X1, [X21]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_affordanceStateProvider(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.BaseAffordanceStateProvider value)

Disassembly:
	0x03BD7780 ADD X0, X31, 0x40
	0x03BD7784 STP V0, V1, [X31 + 0x40]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Audio.AudioAffordanceThemeDatumProperty get_affordanceThemeDatum()

Disassembly:
	0x03BD7788 STP V2, V3, [X31 + 0x60]
	0x03BD778C BL 0x27088DC

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_affordanceThemeDatum(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Audio.AudioAffordanceThemeDatumProperty value)

Disassembly:
	0x03BD7790 MOV X0, X20
	0x03BD7794 MOV X1, X31

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: UnityEngine.AudioSource get_audioSource()

Disassembly:
	0x03BD7798 BL 0x3B96124
	0x03BD779C ADD X8, X31, 0x0

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_audioSource(UnityEngine.AudioSource value)

Disassembly:
	0x03BD77A0 MOV X0, X19
	0x03BD77A4 MOV X1, X31

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Void OnValidate()

Disassembly:
	0x03BD77A8 MOV V8.16B, V0.16B
	0x03BD77AC BL 0x3BD8874
	0x03BD77B0 LDR V9, [X31 + 0x4]
	0x03BD77B4 ADD X8, X31, 0x0
	0x03BD77B8 MOV X0, X19
	0x03BD77BC MOV X1, X31
	0x03BD77C0 BL 0x3BD8874
	0x03BD77C4 LDR V1, [X31 + 0x8]
	0x03BD77C8 MOV X0, X19
	0x03BD77CC MOV V0.16B, V9.16B
	0x03BD77D0 MOV V2.16B, V8.16B
	0x03BD77D4 BL 0x3BD7840
	0x03BD77D8 ADD X8, X31, 0x0
	0x03BD77DC MOV X0, X19
	0x03BD77E0 MOV X1, X31
	0x03BD77E4 MOV V8.16B, V0.16B
	0x03BD77E8 BL 0x3BD8874
	0x03BD77EC LDR X20, [X31 + 0x30]
	0x03BD77F0 ADD X8, X31, 0x0
	0x03BD77F4 MOV X0, X19
	0x03BD77F8 MOV X1, X31
	0x03BD77FC BL 0x3BD8874
	0x03BD7800 LDR V9, [X31 + 0x28]
	0x03BD7804 ADD X8, X31, 0x0
	0x03BD7808 MOV X0, X19
	0x03BD780C MOV X1, X31
	0x03BD7810 BL 0x3BD8874
	0x03BD7814 LDR V2, [X31 + 0x2C]
	0x03BD7818 MOV X0, X19
	0x03BD781C MOV V0.16B, V9.16B
	0x03BD7820 MOV V1.16B, V8.16B
	0x03BD7824 BL 0x3BD7840
	0x03BD7828 STR S0, [X20]
	0x03BD782C LDP X20, X19, [X31 + 0xE0]
	0x03BD7830 LDP X30, X21, [X31 + 0xD0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x80C000
	006 Move X20, 0x51D000
	007 Move W8, [X21+3738]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x521000
	015 Move X0, [X0+2744]
	016 Call 0x1C17CF4
	017 Move X0, 0x51D000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3738], W8
	022 Move X0, [X20]
	023 Move X20, [X19+48]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x521000
	037 Move X8, [X8+2744]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+48], X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void Awake()

Disassembly:
	0x03BD7834 LDP D9, D8, [X31 + 0xC0]
	0x03BD7838 ADD X31, X31, 0xF0
	0x03BD783C RET
	0x03BD7840 STR D10, [X31 - 0x20]!
	0x03BD7844 STP D9, D8, [X31 + 0x8]
	0x03BD7848 STR X30, [X31 + 0x18]
	0x03BD784C MOV V8.16B, V2.16B
	0x03BD7850 MOV V9.16B, V1.16B
	0x03BD7854 MOV V10.16B, V0.16B
	0x03BD7858 BL 0x3BD7880
	0x03BD785C FSUB S0, S9, S10
	0x03BD7860 FMUL S0, S0, S8
	0x03BD7864 FADD S0, S0, S10
	0x03BD7868 ANDS W31, W0, 0x1
	0x03BD786C FCSEL S0, S9, S0, NE
	0x03BD7870 LDR X30, [X31 + 0x18]
	0x03BD7874 LDP D9, D8, [X31 + 0x8]
	0x03BD7878 LDR V10, [X31], #0x20
	0x03BD787C RET
	0x03BD7880 ADRP X8, 0xFFFFFFFFFCF13000
	0x03BD7884 LDR V2, [X8 + 0x178]
	0x03BD7888 FSUB S0, S1, S0
	0x03BD788C FMUL S0, S0, S0
	0x03BD7890 FCMP S0, S2
	0x03BD7894 CSET W0, MI
	0x03BD7898 RET
	0x03BD789C MOV X1, X0
	0x03BD78A0 MOVZ W2, 0x58
	0x03BD78A4 MOV X0, X8
	0x03BD78A8 B 0x3EB1AC0
	0x03BD78AC STR X30, [X31 - 0x10]!
	0x03BD78B0 MOVZ W2, 0x58
	0x03BD78B4 BL 0x3EB1B30
	0x03BD78B8 LDR X30, [X31], #0x10
	0x03BD78BC RET
	0x03BD78C0 SUB X31, X31, 0x170
	0x03BD78C4 STP D11, D10, [X31 + 0x120]
	0x03BD78C8 STP D9, D8, [X31 + 0x130]
	0x03BD78CC STP X29, X30, [X31 + 0x140]
	0x03BD78D0 STP X22, X21, [X31 + 0x150]
	0x03BD78D4 STP X20, X19, [X31 + 0x160]
	0x03BD78D8 ADRP X20, 0x80B000
	0x03BD78DC ADRP X21, 0x586000
	0x03BD78E0 LDRB W8, [X20 + 0xEA3]
	0x03BD78E4 LDR X21, [X21 + 0xD28]
	0x03BD78E8 MOV X19, X0
	0x03BD78EC ADD X22, X31, 0x60
	0x03BD78F0 TBNZ X8, 0x0, 0x3BD7908
	0x03BD78F4 ADRP X0, 0x586000
	0x03BD78F8 LDR X0, [X0 + 0xD28]
	0x03BD78FC BL 0x1C16CF4
	0x03BD7900 MOVZ W8, 0x1
	0x03BD7904 STRB W8, [X20 + 0xEA3]
	0x03BD7908 ADD X8, X31, 0xC0
	0x03BD790C MOVI V0.2D, 0x0
	0x03BD7910 ADD X20, X8, 0x20
	0x03BD7914 ADD X8, X31, 0x8
	0x03BD7918 MOV X0, X19
	0x03BD791C MOV X1, X31
	0x03BD7920 STR X31, [X31 + 0x110]
	0x03BD7924 STR X31, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x80C000
	006 Move X20, 0x51D000
	007 Move W8, [X21+3739]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x521000
	015 Move X0, [X0+2744]
	016 Call 0x1C17CF4
	017 Move X0, 0x587000
	018 Move X0, [X0+3328]
	019 Call 0x1C17CF4
	020 Move X0, 0x51D000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3739], W8
	025 Move X0, [X20]
	026 Move X20, [X19+48]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {45}
	039 Move X8, 0x521000
	040 Move X8, [X8+2744]
	041 Move X0, X19
	042 Move X1, [X8]
	043 Call 0x21A4894, X0
	044 Move [X19+48], X0
	045 Move X0, [X19+40]
	046 Compare X0, 0
	047 JumpIfEqual {73}
	048 Move X20, 0x587000
	049 Move X20, [X20+3328]
	050 Move X1, [X20]
	051 Call DatumProperty`2<Object, Object>.get_Value, X0
	052 Compare X0, 0
	053 JumpIfEqual {73}
	054 Move X0, [X19+40]
	055 Compare X0, 0
	056 JumpIfEqual {78}
	057 Move X1, [X20]
	058 Call DatumProperty`2<Object, Object>.get_Value, X0
	059 Compare X0, 0
	060 JumpIfEqual {78}
	061 Call AudioAffordanceTheme.ValidateTheme, X0
	062 Move X0, [X19+40]
	063 Compare X0, 0
	064 JumpIfEqual {78}
	065 Move X1, [X20]
	066 Call DatumProperty`2<Object, Object>.get_Value, X0
	067 Move X1, X0
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Return 
	078 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03BD7CE8 FADD S10, S14, S0
	0x03BD7CEC FADD S9, S13, S1
	0x03BD7CF0 FADD S8, S12, S2
	0x03BD7CF4 MOV V0.16B, V10.16B
	0x03BD7CF8 MOV V1.16B, V9.16B
	0x03BD7CFC MOV V2.16B, V8.16B
	0x03BD7D00 LDR X30, [X31 + 0x38]
	0x03BD7D04 LDP D9, D8, [X31 + 0x28]
	0x03BD7D08 LDP D11, D10, [X31 + 0x18]
	0x03BD7D0C LDP D13, D12, [X31 + 0x8]
	0x03BD7D10 LDR V14, [X31], #0x40
	0x03BD7D14 RET
	0x03BD7D18 ADRP X8, 0xFFFFFFFFFCF13000
	0x03BD7D1C FSUB S0, S3, S0
	0x03BD7D20 FSUB S1, S4, S1
	0x03BD7D24 LDR V3, [X8 + 0x178]
	0x03BD7D28 FSUB S2, S5, S2
	0x03BD7D2C FMUL S0, S0, S0
	0x03BD7D30 FMUL S1, S1, S1
	0x03BD7D34 FADD S0, S0, S1
	0x03BD7D38 FMUL S1, S2, S2
	0x03BD7D3C FADD S0, S1, S0
	0x03BD7D40 FCMP S0, S3
	0x03BD7D44 CSET W0, MI
	0x03BD7D48 RET
	0x03BD7D4C MOV X1, X0
	0x03BD7D50 MOVZ W2, 0x78
	0x03BD7D54 MOV X0, X8
	0x03BD7D58 B 0x3EB1AC0
	0x03BD7D5C STR X30, [X31 - 0x10]!
	0x03BD7D60 MOVZ W2, 0x78
	0x03BD7D64 BL 0x3EB1B30
	0x03BD7D68 LDR X30, [X31], #0x10
	0x03BD7D6C RET
	0x03BD7D70 SUB X31, X31, 0x1F0
	0x03BD7D74 STP D15, D14, [X31 + 0x180]
	0x03BD7D78 STP D13, D12, [X31 + 0x190]
	0x03BD7D7C STP D11, D10, [X31 + 0x1A0]
	0x03BD7D80 STP D9, D8, [X31 + 0x1B0]
	0x03BD7D84 STP X29, X30, [X31 + 0x1C0]
	0x03BD7D88 STP X22, X21, [X31 + 0x1D0]
	0x03BD7D8C STP X20, X19, [X31 + 0x1E0]
	0x03BD7D90 ADRP X22, 0x80B000
	0x03BD7D94 ADRP X21, 0x586000
	0x03BD7D98 LDRB W8, [X22 + 0xEA5]
	0x03BD7D9C LDR X21, [X21 + 0xD38]
	0x03BD7DA0 MOV X19, X0
	0x03BD7DA4 ADD X20, X31, 0x80
	0x03BD7DA8 TBNZ X8, 0x0, 0x3BD7DC0
	0x03BD7DAC ADRP X0, 0x586000
	0x03BD7DB0 LDR X0, [X0 + 0xD38]
	0x03BD7DB4 BL 0x1C16CF4
	0x03BD7DB8 MOVZ W8, 0x1
	0x03BD7DBC STRB W8, [X22 + 0xEA5]
	0x03BD7DC0 MOVI V0.2D, 0x0
	0x03BD7DC4 ADD X8, X31, 0x8
	0x03BD7DC8 MOV X0, X19
	0x03BD7DCC MOV X1, X31
	0x03BD7DD0 STR X31, [X31 + 0x170]
	0x03BD7DD4 STR X31, [X31 + 0xF0]
	0x03BD7DD8 STP V0, V0, [X20 + 0xD0]
	0x03BD7DDC STP V0, V0, [X20 + 0xB0]
	0x03BD7DE0 STP V0, V0, [X20 + 0x90]
	0x03BD7DE4 STR V0, [X20 + 0x8]
	0x03BD7DE8 STP V0, V0, [X20 + 0x50]
	0x03BD7DEC STP V0, V0, [X20 + 0x30]
	0x03BD7DF0 STP V0, V0, [X20 + 0x10]
	0x03BD7DF4 STR V0, [X31 + 0x8]
	0x03BD7DF8 BL 0x3BD88A8
	0x03BD7DFC ADD X0, X31, 0x100
	0x03BD7E00 ADD X1, X31, 0x8
	0x03BD7E04 MOVZ W2, 0x78
	0x03BD7E08 ADD X20, X31, 0x100
	0x03BD7E0C BL 0x3EB1AC0
	0x03BD7E10 ADD X8, X31, 0x8
	0x03BD7E14 MOV X0, X19
	0x03BD7E18 MOV X1, X31
	0x03BD7E1C ADD X20, X20, 0x38
	0x03BD7E20 BL 0x3BD88A8
	0x03BD7E24 ADD X0, X31, 0x80
	0x03BD7E28 ADD X1, X31, 0x8
	0x03BD7E2C MOVZ W2, 0x78
	0x03BD7E30 BL 0x3EB1AC0
	0x03BD7E34 LDR X1, [X21]
	0x03BD7E38 ADD X0, X31, 0x80
	0x03BD7E3C BL 0x2708978
	0x03BD7E40 MOV X0, X20
	0x03BD7E44 MOV X1, X31
	0x03BD7E48 BL 0x3B96124
	0x03BD7E4C ADD X8, X31, 0x8
	0x03BD7E50 MOV X0, X19
	0x03BD7E54 MOV X1, X31
	0x03BD7E58 MOV V8.16B, V0.16B
	0x03BD7E5C BL 0x3BD88A8
	0x03BD7E60 LDP S9, S10, [X31 + 0x18]
	0x03BD7E64 LDP S11, S12, [X31 + 0x20]
	0x03BD7E68 ADD X8, X31, 0x8
	0x03BD7E6C MOV X0, X19
	0x03BD7E70 MOV X1, X31
	0x03BD7E74 BL 0x3BD88A8
	0x03BD7E78 LDP S4, S5, [X31 + 0x28]
	0x03BD7E7C LDP S6, S7, [X31 + 0x30]
	0x03BD7E80 MOV X0, X19
	0x03BD7E84 MOV V0.16B, V9.16B
	0x03BD7E88 MOV V1.16B, V10.16B
	0x03BD7E8C MOV V2.16B, V11.16B
	0x03BD7E90 MOV V3.16B, V12.16B
	0x03BD7E94 STR S8, [X31]
	0x03BD7E98 BL 0x3BD7F44
	0x03BD7E9C ADD X8, X31, 0x8
	0x03BD7EA0 MOV X0, X19
	0x03BD7EA4 MOV X1, X31
	0x03BD7EA8 MOV V8.16B, V0.16B
	0x03BD7EAC MOV V9.16B, V1.16B
	0x03BD7EB0 MOV V10.16B, V2.16B
	0x03BD7EB4 MOV V11.16B, V3.16B
	0x03BD7EB8 BL 0x3BD88A8
	0x03BD7EBC LDR X20, [X31 + 0x70]
	0x03BD7EC0 ADD X8, X31, 0x8
	0x03BD7EC4 MOV X0, X19
	0x03BD7EC8 MOV X1, X31
	0x03BD7ECC BL 0x3BD88A8
	0x03BD7ED0 LDP S12, S13, [X31 + 0x58]
	0x03BD7ED4 LDP S14, S15, [X31 + 0x60]
	0x03BD7ED8 ADD X8, X31, 0x8
	0x03BD7EDC MOV X0, X19
	0x03BD7EE0 MOV X1, X31
	0x03BD7EE4 BL 0x3BD88A8
	0x03BD7EE8 LDR V0, [X31 + 0x68]
	0x03BD7EEC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x80C000
	007 Move X20, 0x51D000
	008 Move W8, [X21+3740]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x587000
	016 Move X0, [X0+2480]
	017 Call 0x1C17CF4
	018 Move X0, 0x587000
	019 Move X0, [X0+3336]
	020 Call 0x1C17CF4
	021 Move X0, 0x587000
	022 Move X0, [X0+3328]
	023 Call 0x1C17CF4
	024 Move X0, 0x547000
	025 Move X0, [X0+1424]
	026 Call 0x1C17CF4
	027 Move X0, 0x51D000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x547000
	031 Move X0, [X0+488]
	032 Call 0x1C17CF4
	033 Move X0, 0x547000
	034 Move X0, [X0+1256]
	035 Call 0x1C17CF4
	036 Move X0, 0x587000
	037 Move X0, [X0+3344]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+3740], W8
	041 Move X0, [X20]
	042 Move X20, [X19+32]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X21, 0x547000
	048 Move X21, [X21+488]
	049 Move X0, X20
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Equality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {59}
	057 Move X8, 0x547000
	058 Move X8, [X8+1256]
	059 Move X0, [X19+40]
	060 Compare X0, 0
	061 JumpIfEqual {102}
	062 Move X8, 0x587000
	063 Move X8, [X8+3328]
	064 Move X1, [X8]
	065 Call DatumProperty`2<Object, Object>.get_Value, X0
	066 Compare X0, 0
	067 JumpIfEqual {102}
	068 Move X8, [X19+32]
	069 Compare X8, 0
	070 JumpIfEqual {149}
	071 Move X21, [X8+40]
	072 Move X8, 0x587000
	073 Move X20, [X19+56]
	074 Move X8, [X8+2480]
	075 Move X0, [X8]
	076 Call 0x1C17F10
	077 Move X8, 0x587000
	078 Move X8, [X8+3336]
	079 Move X1, X19
	080 Move X3, X31
	081 Move X22, X0
	082 Move X2, [X8]
	083 Call Action`1<AffordanceStateData>..ctor, X0, X1, X2
	084 Compare X21, 0
	085 JumpIfEqual {149}
	086 Move X10, 0x547000
	087 Move X8, [X21]
	088 Move X10, [X10+1424]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X21
	100 Move W2, W31
	101 Call 0x1C5D788
	102 Move X8, 0x587000
	103 Move X8, [X8+3344]
	104 Move X0, [X8]
	105 Move X1, X19
	106 Move X2, X31
	107 Call String.Format, X0, X1
	108 Move X8, [X21]
	109 Move X20, X0
	110 Move W9, [X8+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X0, X20
	116 Move X1, X19
	117 Move X2, X31
	118 Call XRLoggingUtils.LogError, X0, X1
	119 Move X0, X19
	120 Move X20, [X31+32]
	121 Move X19, [X31+40]
	122 Move X22, [X31+16]
	123 Move X21, [X31+24]
	124 Move W1, W31
	125 Move X2, X31
	126 Move X30, [X31+48]
	127 Call Behaviour.set_enabled, X0, X1
	128 Return 
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X2, [X0+8]
	134 Move X0, X21
	135 Move X1, X22
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Compare X20, 0
	138 JumpIfEqual {149}
	139 Move X1, X0
	140 Move X0, X20
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X2, X31
	146 Move X30, [X31+48]
	147 Call BindingsGroup.AddBinding, X0, X1
	148 Return 
	149 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03BD7EF0 MOV V1.16B, V13.16B
	0x03BD7EF4 MOV V2.16B, V14.16B
	0x03BD7EF8 STR S0, [X31]
	0x03BD7EFC MOV V0.16B, V12.16B
	0x03BD7F00 MOV V3.16B, V15.16B
	0x03BD7F04 MOV V4.16B, V8.16B
	0x03BD7F08 MOV V5.16B, V9.16B

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call BindingsGroup.Clear, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void LogIfMissingAffordanceStates(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Audio.AudioAffordanceTheme theme)

Disassembly:
	0x03BD7928 STP V0, V0, [X22 + 0x90]
	0x03BD792C STP V0, V0, [X22 + 0x70]
	0x03BD7930 STR V0, [X22 + 0x6]
	0x03BD7934 STP V0, V0, [X22 + 0x30]
	0x03BD7938 STP V0, V0, [X31 + 0x70]
	0x03BD793C STR V0, [X31 + 0x6]
	0x03BD7940 BL 0x3BD8888
	0x03BD7944 ADD X0, X31, 0xC0
	0x03BD7948 ADD X1, X31, 0x8
	0x03BD794C MOVZ W2, 0x58
	0x03BD7950 BL 0x3EB1AC0
	0x03BD7954 ADD X8, X31, 0x8
	0x03BD7958 MOV X0, X19
	0x03BD795C MOV X1, X31
	0x03BD7960 BL 0x3BD8888
	0x03BD7964 ADD X0, X31, 0x60
	0x03BD7968 ADD X1, X31, 0x8
	0x03BD796C MOVZ W2, 0x58
	0x03BD7970 BL 0x3EB1AC0
	0x03BD7974 LDR X1, [X21]
	0x03BD7978 ADD X0, X31, 0x60
	0x03BD797C BL 0x2708948
	0x03BD7980 MOV X0, X20
	0x03BD7984 MOV X1, X31
	0x03BD7988 BL 0x3B96124
	0x03BD798C ADD X8, X31, 0x8
	0x03BD7990 MOV X0, X19
	0x03BD7994 MOV X1, X31
	0x03BD7998 MOV V8.16B, V0.16B
	0x03BD799C BL 0x3BD8888
	0x03BD79A0 LDP S9, S10, [X31 + 0x10]
	0x03BD79A4 ADD X8, X31, 0x8
	0x03BD79A8 MOV X0, X19
	0x03BD79AC MOV X1, X31
	0x03BD79B0 BL 0x3BD8888
	0x03BD79B4 LDP S2, S3, [X31 + 0x18]
	0x03BD79B8 MOV X0, X19
	0x03BD79BC MOV V0.16B, V9.16B
	0x03BD79C0 MOV V1.16B, V10.16B
	0x03BD79C4 MOV V4.16B, V8.16B
	0x03BD79C8 BL 0x3BD7A48
	0x03BD79CC ADD X8, X31, 0x8
	0x03BD79D0 MOV X0, X19
	0x03BD79D4 MOV X1, X31
	0x03BD79D8 MOV V8.16B, V0.16B
	0x03BD79DC MOV V9.16B, V1.16B
	0x03BD79E0 BL 0x3BD8888
	0x03BD79E4 LDR X20, [X31 + 0x50]
	0x03BD79E8 ADD X8, X31, 0x8
	0x03BD79EC MOV X0, X19
	0x03BD79F0 MOV X1, X31
	0x03BD79F4 BL 0x3BD8888
	0x03BD79F8 LDP S10, S11, [X31 + 0x40]
	0x03BD79FC ADD X8, X31, 0x8
	0x03BD7A00 MOV X0, X19
	0x03BD7A04 MOV X1, X31
	0x03BD7A08 BL 0x3BD8888
	0x03BD7A0C LDR V4, [X31 + 0x48]
	0x03BD7A10 MOV X0, X19
	0x03BD7A14 MOV V0.16B, V10.16B
	0x03BD7A18 MOV V1.16B, V11.16B
	0x03BD7A1C MOV V2.16B, V8.16B
	0x03BD7A20 MOV V3.16B, V9.16B
	0x03BD7A24 BL 0x3BD7A48
	0x03BD7A28 STP S0, S1, [X20]
	0x03BD7A2C LDP X20, X19, [X31 + 0x160]
	0x03BD7A30 LDP X22, X21, [X31 + 0x150]
	0x03BD7A34 LDP X29, X30, [X31 + 0x140]
	0x03BD7A38 LDP D9, D8, [X31 + 0x130]
	0x03BD7A3C LDP D11, D10, [X31 + 0x120]
	0x03BD7A40 ADD X31, X31, 0x170
	0x03BD7A44 RET
	0x03BD7A48 STR D12, [X31 - 0x30]!
	0x03BD7A4C STP D11, D10, [X31 + 0x8]
	0x03BD7A50 STP D9, D8, [X31 + 0x18]
	0x03BD7A54 STR X30, [X31 + 0x28]
	0x03BD7A58 MOV V10.16B, V4.16B
	0x03BD7A5C MOV V8.16B, V3.16B
	0x03BD7A60 MOV V9.16B, V2.16B
	0x03BD7A64 MOV V11.16B, V1.16B
	0x03BD7A68 MOV V12.16B, V0.16B
	0x03BD7A6C BL 0x3BD7AA8
	0x03BD7A70 TBNZ X0, 0x0, 0x3BD7A8C
	0x03BD7A74 FSUB S0, S9, S12
	0x03BD7A78 FSUB S1, S8, S11
	0x03BD7A7C FMUL S0, S0, S10
	0x03BD7A80 FMUL S1, S1, S10
	0x03BD7A84 FADD S9, S12, S0
	0x03BD7A88 FADD S8, S11, S1
	0x03BD7A8C MOV V0.16B, V9.16B
	0x03BD7A90 MOV V1.16B, V8.16B
	0x03BD7A94 LDR X30, [X31 + 0x28]
	0x03BD7A98 LDP D9, D8, [X31 + 0x18]
	0x03BD7A9C LDP D11, D10, [X31 + 0x8]
	0x03BD7AA0 LDR V12, [X31], #0x30
	0x03BD7AA4 RET
	0x03BD7AA8 ADRP X8, 0xFFFFFFFFFCF13000
	0x03BD7AAC FSUB S0, S2, S0
	0x03BD7AB0 LDR V2, [X8 + 0x178]
	0x03BD7AB4 FSUB S1, S3, S1
	0x03BD7AB8 FMUL S0, S0, S0
	0x03BD7ABC FMUL S1, S1, S1
	0x03BD7AC0 FADD S0, S0, S1
	0x03BD7AC4 FCMP S0, S2
	0x03BD7AC8 CSET W0, MI
	0x03BD7ACC RET
	0x03BD7AD0 MOV X1, X0
	0x03BD7AD4 MOVZ W2, 0x60
	0x03BD7AD8 MOV X0, X8
	0x03BD7ADC B 0x3EB1AC0
	0x03BD7AE0 STR X30, [X31 - 0x10]!
	0x03BD7AE4 MOVZ W2, 0x60
	0x03BD7AE8 BL 0x3EB1B30
	0x03BD7AEC LDR X30, [X31], #0x10
	0x03BD7AF0 RET
	0x03BD7AF4 SUB X31, X31, 0x180
	0x03BD7AF8 STP D13, D12, [X31 + 0x120]
	0x03BD7AFC STP D11, D10, [X31 + 0x130]
	0x03BD7B00 STP D9, D8, [X31 + 0x140]
	0x03BD7B04 STR X29, [X31 + 0x150]
	0x03BD7B08 STP X30, X21, [X31 + 0x160]
	0x03BD7B0C STP X20, X19, [X31 + 0x170]
	0x03BD7B10 ADRP X20, 0x80B000
	0x03BD7B14 ADRP X21, 0x586000
	0x03BD7B18 LDRB W8, [X20 + 0xEA4]
	0x03BD7B1C LDR X21, [X21 + 0xD30]
	0x03BD7B20 MOV X19, X0
	0x03BD7B24 TBNZ X8, 0x0, 0x3BD7B3C
	0x03BD7B28 ADRP X0, 0x586000
	0x03BD7B2C LDR X0, [X0 + 0xD30]
	0x03BD7B30 BL 0x1C16CF4
	0x03BD7B34 MOVZ W8, 0x1
	0x03BD7B38 STRB W8, [X20 + 0xEA4]
	0x03BD7B3C MOVI V0.2D, 0x0
	0x03BD7B40 ADD X8, X31, 0x0
	0x03BD7B44 MOV X0, X19
	0x03BD7B48 MOV X1, X31
	0x03BD7B4C STP V0, V0, [X31 + 0x100]
	0x03BD7B50 STP V0, V0, [X31 + 0xE0]
	0x03BD7B54 STP V0, V0, [X31 + 0xC0]
	0x03BD7B58 STP V0, V0, [X31 + 0xA0]
	0x03BD7B5C STP V0, V0, [X31 + 0x80]
	0x03BD7B60 STP V0, V0, [X31 + 0x60]
	0x03BD7B64 BL 0x3BD8898
	0x03BD7B68 ADD X0, X31, 0xC0
	0x03BD7B6C ADD X1, X31, 0x0
	0x03BD7B70 MOVZ W2, 0x60
	0x03BD7B74 ADD X20, X31, 0xC0
	0x03BD7B78 BL 0x3EB1AC0
	0x03BD7B7C ADD X8, X31, 0x0
	0x03BD7B80 MOV X0, X19
	0x03BD7B84 MOV X1, X31
	0x03BD7B88 ADD X20, X20, 0x28
	0x03BD7B8C BL 0x3BD8898
	0x03BD7B90 ADD X0, X31, 0x60
	0x03BD7B94 ADD X1, X31, 0x0
	0x03BD7B98 MOVZ W2, 0x60
	0x03BD7B9C BL 0x3EB1AC0
	0x03BD7BA0 LDR X1, [X21]
	0x03BD7BA4 ADD X0, X31, 0x60
	0x03BD7BA8 BL 0x2708960
	0x03BD7BAC MOV X0, X20
	0x03BD7BB0 MOV X1, X31
	0x03BD7BB4 BL 0x3B96124
	0x03BD7BB8 ADD X8, X31, 0x0
	0x03BD7BBC MOV X0, X19
	0x03BD7BC0 MOV X1, X31
	0x03BD7BC4 MOV V8.16B, V0.16B
	0x03BD7BC8 BL 0x3BD8898
	0x03BD7BCC LDP S9, S10, [X31 + 0xC]
	0x03BD7BD0 LDR V11, [X31 + 0x14]
	0x03BD7BD4 ADD X8, X31, 0x0
	0x03BD7BD8 MOV X0, X19
	0x03BD7BDC MOV X1, X31
	0x03BD7BE0 BL 0x3BD8898
	0x03BD7BE4 LDP S3, S4, [X31 + 0x18]
	0x03BD7BE8 LDR V5, [X31 + 0x20]
	0x03BD7BEC MOV X0, X19
	0x03BD7BF0 MOV V0.16B, V9.16B
	0x03BD7BF4 MOV V1.16B, V10.16B
	0x03BD7BF8 MOV V2.16B, V11.16B
	0x03BD7BFC MOV V6.16B, V8.16B
	0x03BD7C00 BL 0x3BD7C98
	0x03BD7C04 ADD X8, X31, 0x0
	0x03BD7C08 MOV X0, X19
	0x03BD7C0C MOV X1, X31
	0x03BD7C10 MOV V8.16B, V0.16B
	0x03BD7C14 MOV V9.16B, V1.16B
	0x03BD7C18 MOV V10.16B, V2.16B
	0x03BD7C1C BL 0x3BD8898
	0x03BD7C20 LDR X20, [X31 + 0x50]
	0x03BD7C24 ADD X8, X31, 0x0
	0x03BD7C28 MOV X0, X19
	0x03BD7C2C MOV X1, X31
	0x03BD7C30 BL 0x3BD8898
	0x03BD7C34 LDP S11, S12, [X31 + 0x40]
	0x03BD7C38 LDR V13, [X31 + 0x48]
	0x03BD7C3C ADD X8, X31, 0x0
	0x03BD7C40 MOV X0, X19
	0x03BD7C44 MOV X1, X31
	0x03BD7C48 BL 0x3BD8898
	0x03BD7C4C LDR V6, [X31 + 0x4C]
	0x03BD7C50 MOV X0, X19
	0x03BD7C54 MOV V0.16B, V11.16B
	0x03BD7C58 MOV V1.16B, V12.16B
	0x03BD7C5C MOV V2.16B, V13.16B
	0x03BD7C60 MOV V3.16B, V8.16B
	0x03BD7C64 MOV V4.16B, V9.16B
	0x03BD7C68 MOV V5.16B, V10.16B
	0x03BD7C6C BL 0x3BD7C98
	0x03BD7C70 STP S0, S1, [X20]
	0x03BD7C74 STR S2, [X20 + 0x8]
	0x03BD7C78 LDP X20, X19, [X31 + 0x170]
	0x03BD7C7C LDP X30, X21, [X31 + 0x160]
	0x03BD7C80 LDR X29, [X31 + 0x150]
	0x03BD7C84 LDP D9, D8, [X31 + 0x140]
	0x03BD7C88 LDP D11, D10, [X31 + 0x130]
	0x03BD7C8C LDP D13, D12, [X31 + 0x120]
	0x03BD7C90 ADD X31, X31, 0x180
	0x03BD7C94 RET
	0x03BD7C98 STR D14, [X31 - 0x40]!
	0x03BD7C9C STP D13, D12, [X31 + 0x8]
	0x03BD7CA0 STP D11, D10, [X31 + 0x18]
	0x03BD7CA4 STP D9, D8, [X31 + 0x28]
	0x03BD7CA8 STR X30, [X31 + 0x38]
	0x03BD7CAC MOV V11.16B, V6.16B
	0x03BD7CB0 MOV V8.16B, V5.16B
	0x03BD7CB4 MOV V9.16B, V4.16B
	0x03BD7CB8 MOV V10.16B, V3.16B
	0x03BD7CBC MOV V12.16B, V2.16B
	0x03BD7CC0 MOV V13.16B, V1.16B
	0x03BD7CC4 MOV V14.16B, V0.16B
	0x03BD7CC8 BL 0x3BD7D18
	0x03BD7CCC TBNZ X0, 0x0, 0x3BD7CF4
	0x03BD7CD0 FSUB S0, S10, S14
	0x03BD7CD4 FSUB S1, S9, S13
	0x03BD7CD8 FSUB S2, S8, S12
	0x03BD7CDC FMUL S0, S0, S11
	0x03BD7CE0 FMUL S1, S1, S11
	0x03BD7CE4 FMUL S2, S2, S11

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x80C000
	015 Move X20, 0x547000
	016 Move W8, [X19+3741]
	017 Move X20, [X20+1264]
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0x547000
	025 Move X0, [X0+1264]
	026 Call 0x1C17CF4
	027 Move X0, 0x51E000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0x51D000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x51D000
	034 Move X0, [X0+1880]
	035 Call 0x1C17CF4
	036 Move X0, 0x51D000
	037 Move X0, [X0+2288]
	038 Call 0x1C17CF4
	039 Move X0, 0x547000
	040 Move X0, [X0+1272]
	041 Call 0x1C17CF4
	042 Move X0, 0x547000
	043 Move X0, [X0+1280]
	044 Call 0x1C17CF4
	045 Move X0, 0x547000
	046 Move X0, [X0+1288]
	047 Call 0x1C17CF4
	048 Move X0, 0x547000
	049 Move X0, [X0+1296]
	050 Call 0x1C17CF4
	051 Move X0, 0x547000
	052 Move X0, [X0+1304]
	053 Call 0x1C17CF4
	054 Move X0, 0x547000
	055 Move X0, [X0+1312]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+3741], W8
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X28, 0x804000
	065 Move W8, [X28+312]
	066 Compare W8, 0
	067 JumpIfNotEqual {73}
	068 Move X0, 0x547000
	069 Move X0, [X0+1264]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X28+312], W8
	073 Move X0, [X20]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X20]
	079 Compare X21, 0
	080 JumpIfEqual {269}
	081 Move X8, [X0+184]
	082 Move X0, X21
	083 Move W8, [X8+24]
	084 Subtract W1, W8, 1
	085 Call AudioAffordanceTheme.GetAffordanceThemeDataForIndex, X0, X1
	086 Compare X0, 0
	087 JumpIfNotEqual {255}
	088 Move [X31+8], X22
	089 Move X8, 0x51D000
	090 Move X8, [X8+2288]
	091 Move X0, [X8]
	092 Call 0x1C17F10
	093 Move X1, X31
	094 Move X22, X0
	095 Call StringBuilder..ctor, X0
	096 Move X19, 0x51E000
	097 Move X19, [X19+2520]
	098 Move X23, X31
	099 Move X24, X31
	100 Move W25, W31
	101 Move W29, W31
	102 Move X0, [X20]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move W8, [X28+312]
	108 Compare W8, 0
	109 JumpIfNotEqual {114}
	110 Move X0, X20
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X28+312], W8
	114 Move X0, [X20]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X20]
	120 Move X8, [X0+184]
	121 Move W8, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X21
	124 Move W1, W25
	125 Call AudioAffordanceTheme.GetAffordanceThemeDataForIndex, X0, X1
	126 Move X26, X0
	127 Move X0, [X19]
	128 Add X1, X31, 28
	129 Move [X31+28], W25
	130 Call 0x1C17E04
	131 Move X8, [X20]
	132 Move X27, X0
	133 Move W9, [X8+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X8
	137 Call 0x1C17DFC
	138 Move W0, W25
	139 Call AffordanceStateShortcuts.GetNameForIndex, X0
	140 Move X8, 0x547000
	141 Move X8, [X8+1296]
	142 Move X2, X0
	143 Move X1, X27
	144 Move X3, X31
	145 Move X8, [X8]
	146 Move X0, X8
	147 Call String.Format, X0, X1, X2
	148 Compare X22, 0
	149 JumpIfEqual {269}
	150 Move X1, X0
	151 Move X0, X22
	152 Move X2, X31
	153 Call StringBuilder.Append, X0, X1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CSEL not yet implemented."
	156 NotImplemented "Instruction CSEL not yet implemented."
	157 Compare X26, 0
	158 JumpIfEqual {178}
	159 Move X0, [X19]
	160 Add X1, X31, 24
	161 Move [X31+24], W25
	162 Call 0x1C17E04
	163 Move X8, 0x547000
	164 Move X2, [X26+16]
	165 Move X8, [X8+1280]
	166 Move X1, X0
	167 Move X3, X31
	168 Move X8, [X8]
	169 Move X0, X8
	170 Call String.Format, X0, X1, X2
	171 Compare X24, 0
	172 JumpIfEqual {269}
	173 Move X1, X0
	174 Move X0, X24
	175 Move X2, X31
	176 Call StringBuilder.AppendLine, X0, X1
	177 Add W29, W29, 1
	178 Compare X23, 0
	179 JumpIfEqual {269}
	180 Move X8, 0x547000
	181 Move X8, [X8+1272]
	182 Move X0, X23
	183 Move X2, X31
	184 Move X1, [X8]
	185 Call StringBuilder.AppendLine, X0, X1
	186 Add W25, W25, 1
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move W8, [X28+312]
	192 Compare W8, 0
	193 JumpIfNotEqual {199}
	194 Move X0, 0x547000
	195 Move X0, [X0+1264]
	196 Call 0x1C17CF4
	197 Move W8, 1
	198 Move [X28+312], W8
	199 Move X0, [X20]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {205}
	203 Call 0x1C17DFC
	204 Move X0, [X20]
	205 Move X8, [X0+184]
	206 Move X0, [X19]
	207 Add X1, X31, 20
	208 Move W8, [X8+24]
	209 Move [X31+20], W8
	210 Call 0x1C17E04
	211 Move X8, 0x51D000
	212 Move X8, [X8+1880]
	213 Move X20, X0
	214 Add X1, X31, 16
	215 Move [X31+16], W29
	216 Move X0, [X8]
	217 Call 0x1C17E04
	218 Move X8, 0x547000
	219 Move X8, [X8+1288]
	220 Move X2, X0
	221 Move X1, X20
	222 Move X3, X31
	223 Move X8, [X8]
	224 Move X0, X8
	225 Call String.Format, X0, X1, X2
	226 Move X8, 0x547000
	227 Move X8, [X8+1312]
	228 Move X20, X0
	229 Move X1, X22
	230 Move X2, X31
	231 Move X8, [X8]
	232 Move X0, X8
	233 Call String.Format, X0, X1
	234 Move X8, 0x547000
	235 Move X8, [X8+1304]
	236 Move X2, X0
	237 Move X1, X20
	238 Move X3, X31
	239 Move X8, [X8]
	240 Move X0, X8
	241 Call String.Concat, X0, X1, X2
	242 Move X8, 0x51D000
	243 Move X8, [X8+2600]
	244 Move X20, X0
	245 Move X8, [X8]
	246 Move W9, [X8+224]
	247 Compare W9, 0
	248 JumpIfNotEqual {251}
	249 Move X0, X8
	250 Call 0x1C17DFC
	251 Move X1, [X31+8]
	252 Move X0, X20
	253 Move X2, X31
	254 Call Debug.LogWarning, X0, X1
	255 Move X20, [X31+112]
	256 Move X19, [X31+120]
	257 Move X22, [X31+96]
	258 Move X21, [X31+104]
	259 Move X24, [X31+80]
	260 Move X23, [X31+88]
	261 Move X26, [X31+64]
	262 Move X25, [X31+72]
	263 Move X28, [X31+48]
	264 Move X27, [X31+56]
	265 Move X29, [X31+32]
	266 Move X30, [X31+40]
	267 Add X31, X31, 128
	268 Return 
	269 Call 0x1C17F20

Method: System.Void OnAffordanceStateUpdated(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData affordanceStateData)

Disassembly:
	0x03BD7F0C MOV V6.16B, V10.16B
	0x03BD7F10 MOV V7.16B, V11.16B
	0x03BD7F14 BL 0x3BD7F44
	0x03BD7F18 STP S0, S1, [X20]
	0x03BD7F1C STP S2, S3, [X20 + 0x8]
	0x03BD7F20 LDP X20, X19, [X31 + 0x1E0]
	0x03BD7F24 LDP X22, X21, [X31 + 0x1D0]
	0x03BD7F28 LDP X29, X30, [X31 + 0x1C0]
	0x03BD7F2C LDP D9, D8, [X31 + 0x1B0]
	0x03BD7F30 LDP D11, D10, [X31 + 0x1A0]
	0x03BD7F34 LDP D13, D12, [X31 + 0x190]
	0x03BD7F38 LDP D15, D14, [X31 + 0x180]
	0x03BD7F3C ADD X31, X31, 0x1F0
	0x03BD7F40 RET
	0x03BD7F44 STP D15, D14, [X31 - 0x50]!
	0x03BD7F48 STP D13, D12, [X31 + 0x10]
	0x03BD7F4C STP D11, D10, [X31 + 0x20]
	0x03BD7F50 STP D9, D8, [X31 + 0x30]
	0x03BD7F54 STR X30, [X31 + 0x40]
	0x03BD7F58 MOV V8.16B, V7.16B
	0x03BD7F5C MOV V9.16B, V6.16B
	0x03BD7F60 MOV V10.16B, V5.16B
	0x03BD7F64 MOV V11.16B, V4.16B
	0x03BD7F68 MOV V12.16B, V3.16B
	0x03BD7F6C MOV V13.16B, V2.16B
	0x03BD7F70 MOV V14.16B, V1.16B
	0x03BD7F74 MOV V15.16B, V0.16B
	0x03BD7F78 BL 0x3BD7FDC
	0x03BD7F7C TBNZ X0, 0x0, 0x3BD7FB4
	0x03BD7F80 LDR V0, [X31 + 0x50]
	0x03BD7F84 FSUB S1, S11, S15
	0x03BD7F88 FSUB S2, S10, S14
	0x03BD7F8C FSUB S3, S9, S13
	0x03BD7F90 FSUB S4, S8, S12
	0x03BD7F94 FMUL S1, S1, S0
	0x03BD7F98 FMUL S2, S2, S0
	0x03BD7F9C FMUL S3, S3, S0
	0x03BD7FA0 FMUL S0, S4, S0
	0x03BD7FA4 FADD S11, S15, S1
	0x03BD7FA8 FADD S10, S14, S2
	0x03BD7FAC FADD S9, S13, S3
	0x03BD7FB0 FADD S8, S12, S0
	0x03BD7FB4 MOV V0.16B, V11.16B
	0x03BD7FB8 MOV V1.16B, V10.16B
	0x03BD7FBC MOV V2.16B, V9.16B
	0x03BD7FC0 MOV V3.16B, V8.16B
	0x03BD7FC4 LDR X30, [X31 + 0x40]
	0x03BD7FC8 LDP D9, D8, [X31 + 0x30]
	0x03BD7FCC LDP D11, D10, [X31 + 0x20]
	0x03BD7FD0 LDP D13, D12, [X31 + 0x10]
	0x03BD7FD4 LDP D15, D14, [X31], #0x50
	0x03BD7FD8 RET
	0x03BD7FDC FSUB S0, S4, S0
	0x03BD7FE0 FSUB S1, S5, S1
	0x03BD7FE4 ADRP X8, 0xFFFFFFFFFCF13000
	0x03BD7FE8 FSUB S2, S6, S2
	0x03BD7FEC FMUL S0, S0, S0
	0x03BD7FF0 FMUL S1, S1, S1
	0x03BD7FF4 LDR V4, [X8 + 0x178]
	0x03BD7FF8 FSUB S3, S7, S3
	0x03BD7FFC FMUL S2, S2, S2
	0x03BD8000 FADD S0, S0, S1
	0x03BD8004 FADD S0, S2, S0
	0x03BD8008 FMUL S1, S3, S3
	0x03BD800C FADD S0, S1, S0
	0x03BD8010 FCMP S0, S4
	0x03BD8014 CSET W0, MI
	0x03BD8018 RET
	0x03BD801C STR X30, [X31 - 0x20]!
	0x03BD8020 STP X20, X19, [X31 + 0x10]
	0x03BD8024 ADRP X20, 0x80A000
	0x03BD8028 ADRP X19, 0x582000
	0x03BD802C LDRB W8, [X20 + 0xEA6]
	0x03BD8030 LDR X19, [X19 + 0x758]
	0x03BD8034 TBNZ X8, 0x0, 0x3BD8274
	0x03BD8038 ADRP X0, 0x584000
	0x03BD803C LDR X0, [X0 + 0xE00]
	0x03BD8040 BL 0x1C16CF4
	0x03BD8044 ADRP X0, 0x584000
	0x03BD8048 LDR X0, [X0 + 0xC8]
	0x03BD804C BL 0x1C16CF4
	0x03BD8050 ADRP X0, 0x582000
	0x03BD8054 LDR X0, [X0 + 0xA18]
	0x03BD8058 BL 0x1C16CF4
	0x03BD805C ADRP X0, 0x584000
	0x03BD8060 LDR X0, [X0 + 0x6A0]
	0x03BD8064 BL 0x1C16CF4
	0x03BD8068 ADRP X0, 0x585000
	0x03BD806C LDR X0, [X0 + 0x3A0]
	0x03BD8070 BL 0x1C16CF4
	0x03BD8074 ADRP X0, 0x584000
	0x03BD8078 LDR X0, [X0 + 0xEB8]
	0x03BD807C BL 0x1C16CF4
	0x03BD8080 ADRP X0, 0x585000
	0x03BD8084 LDR X0, [X0 + 0x3B0]
	0x03BD8088 BL 0x1C16CF4
	0x03BD808C ADRP X0, 0x584000
	0x03BD8090 LDR X0, [X0 + 0xDF8]
	0x03BD8094 BL 0x1C16CF4
	0x03BD8098 ADRP X0, 0x584000
	0x03BD809C LDR X0, [X0 + 0xE08]
	0x03BD80A0 BL 0x1C16CF4
	0x03BD80A4 ADRP X0, 0x582000
	0x03BD80A8 LDR X0, [X0 + 0xA28]
	0x03BD80AC BL 0x1C16CF4
	0x03BD80B0 ADRP X0, 0x584000
	0x03BD80B4 LDR X0, [X0 + 0x5A0]
	0x03BD80B8 BL 0x1C16CF4
	0x03BD80BC ADRP X0, 0x584000
	0x03BD80C0 LDR X0, [X0 + 0x5F8]
	0x03BD80C4 BL 0x1C16CF4
	0x03BD80C8 ADRP X0, 0x584000
	0x03BD80CC LDR X0, [X0 + 0xE10]
	0x03BD80D0 BL 0x1C16CF4
	0x03BD80D4 ADRP X0, 0x582000
	0x03BD80D8 LDR X0, [X0 + 0x758]
	0x03BD80DC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x80C000
	009 Move W8, [X21+3742]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x547000
	017 Move X0, [X0+1264]
	018 Call 0x1C17CF4
	019 Move X0, 0x51E000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0x587000
	023 Move X0, [X0+3328]
	024 Call 0x1C17CF4
	025 Move X0, 0x547000
	026 Move X0, [X0+488]
	027 Call 0x1C17CF4
	028 Move X0, 0x547000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3742], W8
	033 Move W8, [X20+64]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 And W9, W19, 255
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 And W8, W8, W11
	047 And W23, W10, W11
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {72}
	052 Move TEMP, X23
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {72}
	056 Move X0, [X20+40]
	057 Compare X0, 0
	058 JumpIfEqual {141}
	059 Move X8, 0x587000
	060 Move X8, [X8+3328]
	061 Move X1, [X8]
	062 Call DatumProperty`2<Object, Object>.get_Value, X0
	063 Compare X0, 0
	064 JumpIfEqual {72}
	065 Move W1, [X20+64]
	066 Call AudioAffordanceTheme.GetAffordanceThemeDataForIndex, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {72}
	069 Move X1, [X0+32]
	070 Move X0, X20
	071 Call AudioAffordanceReceiver.PlayAudioClip, X0, X1
	072 And W8, W21, W22
	073 Or W8, W8, W23
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {132}
	078 Move X0, [X20+40]
	079 Compare X0, 0
	080 JumpIfEqual {141}
	081 Move X8, 0x586000
	082 Move X8, [X8+3328]
	083 Move X1, [X8]
	084 Call DatumProperty`2<Object, Object>.get_Value, X0
	085 Compare X0, 0
	086 JumpIfEqual {94}
	087 Move W1, W19
	088 Call AudioAffordanceTheme.GetAffordanceThemeDataForIndex, X0, X1
	089 Compare X0, 0
	090 JumpIfEqual {94}
	091 Move X1, [X0+24]
	092 Move X0, X20
	093 Call AudioAffordanceReceiver.PlayAudioClip, X0, X1
	094 Move X8, 0x546000
	095 Move X8, [X8+1264]
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move W0, W19
	102 Call AffordanceStateShortcuts.GetNameForIndex, X0
	103 Move X8, 0x51D000
	104 Move X8, [X8+2520]
	105 Move X21, X0
	106 Add X1, X31, 12
	107 Move [X31+12], W19
	108 Move X0, [X8]
	109 Call 0x1C17E04
	110 Move X8, 0x546000
	111 Move X8, [X8+1432]
	112 Move X1, X0
	113 Move X2, X21
	114 Move X3, X20
	115 Move X8, [X8]
	116 Move X4, X31
	117 Move X0, X8
	118 Call String.Format, X0, X1, X2, X3
	119 Move X8, 0x546000
	120 Move X8, [X8+488]
	121 Move X21, X0
	122 Move X8, [X8]
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X0, X21
	129 Move X1, X20
	130 Move X2, X31
	131 Call XRLoggingUtils.LogError, X0, X1
	132 Move [X20+64], W19
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X22, [X31+32]
	136 Move X21, [X31+40]
	137 Move X30, [X31+16]
	138 Move X23, [X31+24]
	139 Add X31, X31, 64
	140 Return 
	141 Call 0x1C17F20

Method: System.Void PlayAudioClip(UnityEngine.AudioClip clipToPlay)

Disassembly:
	0x03BD80E0 ADRP X0, 0x584000
	0x03BD80E4 LDR X0, [X0 + 0x688]
	0x03BD80E8 BL 0x1C16CF4
	0x03BD80EC ADRP X0, 0x582000
	0x03BD80F0 LDR X0, [X0 + 0xA68]
	0x03BD80F4 BL 0x1C16CF4
	0x03BD80F8 ADRP X0, 0x584000
	0x03BD80FC LDR X0, [X0 + 0xEA8]
	0x03BD8100 BL 0x1C16CF4
	0x03BD8104 ADRP X0, 0x584000
	0x03BD8108 LDR X0, [X0 + 0xEC0]
	0x03BD810C BL 0x1C16CF4
	0x03BD8110 ADRP X0, 0x584000
	0x03BD8114 LDR X0, [X0 + 0xE0]
	0x03BD8118 BL 0x1C16CF4
	0x03BD811C ADRP X0, 0x584000
	0x03BD8120 LDR X0, [X0 + 0xE8]
	0x03BD8124 BL 0x1C16CF4
	0x03BD8128 ADRP X0, 0x584000
	0x03BD812C LDR X0, [X0 + 0xD0]
	0x03BD8130 BL 0x1C16CF4
	0x03BD8134 ADRP X0, 0x584000
	0x03BD8138 LDR X0, [X0 + 0xD8]
	0x03BD813C BL 0x1C16CF4
	0x03BD8140 ADRP X0, 0x584000
	0x03BD8144 LDR X0, [X0 + 0x690]
	0x03BD8148 BL 0x1C16CF4
	0x03BD814C ADRP X0, 0x583000
	0x03BD8150 LDR X0, [X0 + 0x530]
	0x03BD8154 BL 0x1C16CF4
	0x03BD8158 ADRP X0, 0x584000
	0x03BD815C LDR X0, [X0 + 0x298]
	0x03BD8160 BL 0x1C16CF4
	0x03BD8164 ADRP X0, 0x584000
	0x03BD8168 LDR X0, [X0 + 0x290]
	0x03BD816C BL 0x1C16CF4
	0x03BD8170 ADRP X0, 0x584000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x80B000
	007 Move X22, 0x51C000
	008 Move W8, [X21+3743]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x51C000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3743], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {40}
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 
	040 Move X0, [X20+48]
	041 Compare X0, 0
	042 JumpIfEqual {52}
	043 Move X1, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X2, X31
	049 Move X30, [X31+48]
	050 Call AudioSource.PlayOneShot, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BD8174 LDR X0, [X0 + 0x288]
	0x03BD8178 BL 0x1C16CF4
	0x03BD817C ADRP X0, 0x584000
	0x03BD8180 LDR X0, [X0 + 0x5D0]
	0x03BD8184 BL 0x1C16CF4
	0x03BD8188 ADRP X0, 0x584000
	0x03BD818C LDR X0, [X0 + 0xEA0]
	0x03BD8190 BL 0x1C16CF4
	0x03BD8194 ADRP X0, 0x584000
	0x03BD8198 LDR X0, [X0 + 0xB8]
	0x03BD819C BL 0x1C16CF4
	0x03BD81A0 ADRP X0, 0x584000
	0x03BD81A4 LDR X0, [X0 + 0xC0]
	0x03BD81A8 BL 0x1C16CF4
	0x03BD81AC ADRP X0, 0x584000
	0x03BD81B0 LDR X0, [X0 + 0x98]
	0x03BD81B4 BL 0x1C16CF4
	0x03BD81B8 ADRP X0, 0x584000
	0x03BD81BC LDR X0, [X0 + 0xA0]
	0x03BD81C0 BL 0x1C16CF4
	0x03BD81C4 ADRP X0, 0x584000
	0x03BD81C8 LDR X0, [X0 + 0x88]
	0x03BD81CC BL 0x1C16CF4
	0x03BD81D0 ADRP X0, 0x584000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x80B000
	006 Move X21, 0x583000
	007 Move W8, [X20+3744]
	008 Move X21, [X21+2696]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x583000
	015 Move X0, [X0+2696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3744], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call BindingsGroup..ctor, X0
	024 Move [X19+56], X20
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call MonoBehaviour..ctor, X0
	032 Return 

