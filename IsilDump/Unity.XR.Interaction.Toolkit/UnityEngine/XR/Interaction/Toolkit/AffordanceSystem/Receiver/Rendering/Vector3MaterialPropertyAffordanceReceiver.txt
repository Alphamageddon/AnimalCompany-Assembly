Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Rendering.Vector3MaterialPropertyAffordanceReceiver

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialPropertyBlockHelper get_materialPropertyBlockHelper()

Disassembly:
	0x03BD667C STP X22, X21, [X31 + 0x180]
	0x03BD6680 STP X20, X19, [X31 + 0x190]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_materialPropertyBlockHelper(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialPropertyBlockHelper value)

Disassembly:
	0x03BD6684 ADRP X22, 0x80C000
	0x03BD6688 ADRP X20, 0x586000

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.String get_vector3PropertyName()

Disassembly:
	0x03BD668C LDRB W8, [X22 + 0xE96]
	0x03BD6690 LDR X20, [X20 + 0x668]

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void set_vector3PropertyName(System.String value)

Disassembly:
	0x03BD6694 MOV X19, X1
	0x03BD6698 ADD X21, X31, 0x80
	0x03BD669C TBNZ X8, 0x0, 0x3BD66B4
	0x03BD66A0 ADRP X0, 0x586000
	0x03BD66A4 LDR X0, [X0 + 0x668]
	0x03BD66A8 BL 0x1C16CF4
	0x03BD66AC MOVZ W8, 0x1
	0x03BD66B0 STRB W8, [X22 + 0xE96]
	0x03BD66B4 MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+184], X1
	005 Move X0, X1
	006 Move X1, X31
	007 Call Shader.PropertyToID, X0
	008 Move [X19+192], W0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void OnValidate()

Disassembly:
	0x03BD66B8 ADD X0, X31, 0x8
	0x03BD66BC MOVZ W2, 0x78
	0x03BD66C0 MOV X1, X19
	0x03BD66C4 STR X31, [X31 + 0xF0]
	0x03BD66C8 STP V0, V0, [X21 + 0x50]
	0x03BD66CC STP V0, V0, [X21 + 0x30]
	0x03BD66D0 STP V0, V0, [X21 + 0x10]
	0x03BD66D4 STR V0, [X31 + 0x8]
	0x03BD66D8 BL 0x3EB1AC0
	0x03BD66DC ADD X0, X31, 0x80
	0x03BD66E0 ADD X1, X31, 0x8
	0x03BD66E4 MOV X2, X31
	0x03BD66E8 BL 0x3B99680
	0x03BD66EC LDR X19, [X20]
	0x03BD66F0 ADD X0, X31, 0xF8
	0x03BD66F4 ADD X1, X31, 0x80
	0x03BD66F8 MOVZ W2, 0x78
	0x03BD66FC BL 0x3EB1AC0
	0x03BD6700 ADD X0, X31, 0xF8
	0x03BD6704 MOV X1, X31
	0x03BD6708 MOV X2, X31
	0x03BD670C MOV X3, X19
	0x03BD6710 BL 0x21EE23C
	0x03BD6714 LDP X20, X19, [X31 + 0x190]
	0x03BD6718 LDP X22, X21, [X31 + 0x180]
	0x03BD671C LDP X29, X30, [X31 + 0x170]
	0x03BD6720 ADD X31, X31, 0x1A0
	0x03BD6724 RET
	0x03BD6728 STR X30, [X31 - 0x20]!
	0x03BD672C STP X20, X19, [X31 + 0x10]
	0x03BD6730 ADRP X19, 0x80C000
	0x03BD6734 ADRP X20, 0x587000
	0x03BD6738 LDRB W8, [X19 + 0xE97]
	0x03BD673C LDR X20, [X20 + 0xCF8]
	0x03BD6740 TBNZ X8, 0x0, 0x3BD6758

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x80D000
	006 Move X20, 0x51E000
	007 Move W8, [X21+3707]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x588000
	015 Move X0, [X0+3104]
	016 Call 0x1C17CF4
	017 Move X0, 0x51E000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3707], W8
	022 Move X0, [X20]
	023 Move X20, [X19+176]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x588000
	037 Move X8, [X8+3104]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+176], X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void Awake()

Disassembly:
	0x03BD6744 ADRP X0, 0x587000
	0x03BD6748 LDR X0, [X0 + 0xCF8]
	0x03BD674C BL 0x1C16CF4
	0x03BD6750 MOVZ W8, 0x1
	0x03BD6754 STRB W8, [X19 + 0xE97]
	0x03BD6758 LDR X0, [X20]
	0x03BD675C BL 0x1C16F10
	0x03BD6760 MOV X19, X0
	0x03BD6764 BL 0x3BCB814
	0x03BD6768 MOV X0, X19
	0x03BD676C LDP X20, X19, [X31 + 0x10]
	0x03BD6770 LDR X30, [X31], #0x20
	0x03BD6774 RET
	0x03BD6778 LDR X0, [X0 + 0x20]
	0x03BD677C RET
	0x03BD6780 STR X1, [X0 + 0x20]
	0x03BD6784 RET
	0x03BD6788 LDR X0, [X0 + 0x28]
	0x03BD678C RET
	0x03BD6790 STR X1, [X0 + 0x28]
	0x03BD6794 RET
	0x03BD6798 LDR X0, [X0 + 0x30]
	0x03BD679C RET
	0x03BD67A0 STR X1, [X0 + 0x30]
	0x03BD67A4 RET
	0x03BD67A8 STP X30, X21, [X31 - 0x20]!
	0x03BD67AC STP X20, X19, [X31 + 0x10]
	0x03BD67B0 ADRP X21, 0x80C000
	0x03BD67B4 ADRP X20, 0x51D000
	0x03BD67B8 LDRB W8, [X21 + 0xE9A]
	0x03BD67BC LDR X20, [X20 + 0x598]
	0x03BD67C0 MOV X19, X0
	0x03BD67C4 TBNZ X8, 0x0, 0x3BD67E8
	0x03BD67C8 ADRP X0, 0x521000
	0x03BD67CC LDR X0, [X0 + 0xAB8]
	0x03BD67D0 BL 0x1C16CF4
	0x03BD67D4 ADRP X0, 0x51D000
	0x03BD67D8 LDR X0, [X0 + 0x598]
	0x03BD67DC BL 0x1C16CF4
	0x03BD67E0 MOVZ W8, 0x1
	0x03BD67E4 STRB W8, [X21 + 0xE9A]
	0x03BD67E8 LDR X0, [X20]
	0x03BD67EC LDR X20, [X19 + 0x30]
	0x03BD67F0 LDR W8, [X0 + 0xE0]
	0x03BD67F4 CBNZ W8, 0x3BD67FC
	0x03BD67F8 BL 0x1C16DFC
	0x03BD67FC MOV X0, X20
	0x03BD6800 MOV X1, X31
	0x03BD6804 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x80D000
	007 Move X22, 0x588000
	008 Move X20, 0x51E000
	009 Move W8, [X21+3708]
	010 Move X22, [X22+3160]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x588000
	018 Move X0, [X0+3160]
	019 Call 0x1C17CF4
	020 Move X0, 0x588000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0x51E000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3708], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call BaseAffordanceStateReceiver`1<float3>.Awake, X0
	031 Move X0, [X20]
	032 Move X20, [X19+176]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {51}
	045 Move X8, 0x588000
	046 Move X8, [X8+3104]
	047 Move X0, X19
	048 Move X1, [X8]
	049 Call 0x21A4894, X0
	050 Move [X19+176], X0
	051 Move X0, [X19+184]
	052 Move X1, X31
	053 Call Shader.PropertyToID, X0
	054 Move [X19+192], W0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 

Method: System.Void OnAffordanceValueUpdated(Unity.Mathematics.float3 newValue)

Disassembly:
	0x03BD6808 BL 0x3C3883C
	0x03BD680C TBZ X0, 0x0, 0x3BD6828
	0x03BD6810 ADRP X8, 0x521000
	0x03BD6814 LDR X8, [X8 + 0xAB8]
	0x03BD6818 MOV X0, X19
	0x03BD681C LDR X1, [X8]
	0x03BD6820 BL 0x21A3894
	0x03BD6824 STR X0, [X19 + 0x30]
	0x03BD6828 LDP X20, X19, [X31 + 0x10]
	0x03BD682C LDP X30, X21, [X31], #0x20
	0x03BD6830 RET
	0x03BD6834 STP X30, X21, [X31 - 0x20]!
	0x03BD6838 STP X20, X19, [X31 + 0x10]
	0x03BD683C ADRP X21, 0x80C000
	0x03BD6840 ADRP X20, 0x51D000
	0x03BD6844 LDRB W8, [X21 + 0xE9B]
	0x03BD6848 LDR X20, [X20 + 0x598]
	0x03BD684C MOV X19, X0
	0x03BD6850 TBNZ X8, 0x0, 0x3BD6880
	0x03BD6854 ADRP X0, 0x521000
	0x03BD6858 LDR X0, [X0 + 0xAB8]
	0x03BD685C BL 0x1C16CF4
	0x03BD6860 ADRP X0, 0x587000
	0x03BD6864 LDR X0, [X0 + 0xD00]
	0x03BD6868 BL 0x1C16CF4
	0x03BD686C ADRP X0, 0x51D000
	0x03BD6870 LDR X0, [X0 + 0x598]
	0x03BD6874 BL 0x1C16CF4
	0x03BD6878 MOVZ W8, 0x1
	0x03BD687C STRB W8, [X21 + 0xE9B]
	0x03BD6880 LDR X0, [X20]
	0x03BD6884 LDR X20, [X19 + 0x30]
	0x03BD6888 LDR W8, [X0 + 0xE0]
	0x03BD688C CBNZ W8, 0x3BD6894
	0x03BD6890 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+176]
	009 Compare X8, 0
	010 JumpIfEqual {42}
	011 Move X20, [X8+48]
	012 Move V8, V2
	013 Move V9, V1
	014 Move X19, X0
	015 Move V10, V0
	016 Move W9, 1
	017 Move [X8+56], W9
	018 Compare X20, 0
	019 JumpIfEqual {31}
	020 Move W21, [X19+192]
	021 Move V0, V10
	022 Move V1, V9
	023 Move V2, V8
	024 Move X0, X31
	025 Call float3.op_Implicit, X0
	026 Move S3, W31
	027 Move X0, X20
	028 Move W1, W21
	029 Move X2, X31
	030 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	031 Move X0, X19
	032 Move V1, V9
	033 Move V2, V8
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Move D9, [X31+16]
	039 Move D8, [X31+24]
	040 Move V0, V10
	041 Move V10, [X31+64]
	042 Call 0x1C17F20

Method: Unity.Mathematics.float3 GetCurrentValueForCapture()

Disassembly:
	0x03BD6928 SUB X31, X31, 0x80
	0x03BD692C STP X29, X30, [X31 + 0x20]
	0x03BD6930 STP X28, X27, [X31 + 0x30]
	0x03BD6934 STP X26, X25, [X31 + 0x40]
	0x03BD6938 STP X24, X23, [X31 + 0x50]
	0x03BD693C STP X22, X21, [X31 + 0x60]
	0x03BD6940 STP X20, X19, [X31 + 0x70]
	0x03BD6944 ADRP X19, 0x80C000
	0x03BD6948 ADRP X20, 0x547000
	0x03BD694C LDRB W8, [X19 + 0xE9D]
	0x03BD6950 LDR X20, [X20 + 0x4F0]
	0x03BD6954 MOV X21, X1
	0x03BD6958 MOV X22, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+176]
	005 Compare X0, 0
	006 JumpIfEqual {18}
	007 Call MaterialHelperBase.GetSharedMaterialForTarget, X0
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move W1, [X19+192]
	011 Move X2, X31
	012 Call Material.GetVector, X0, X1
	013 Move X0, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call float3.op_Implicit, X0
	017 Return X0
	018 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BD695C TBNZ X8, 0x0, 0x3BD69EC

ISIL:
No ISIL was generated
