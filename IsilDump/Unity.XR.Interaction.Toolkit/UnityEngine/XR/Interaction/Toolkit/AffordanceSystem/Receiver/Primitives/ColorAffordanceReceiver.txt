Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Primitives.ColorAffordanceReceiver

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Primitives.ColorAffordanceThemeDatumProperty get_affordanceThemeDatum()

Disassembly:
	0x03BD6DA8 LDR X8, [X8 + 0x4E8]
	0x03BD6DAC B 0x3BD6E5C

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_affordanceThemeDatum(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Primitives.ColorAffordanceThemeDatumProperty value)

Disassembly:
	0x03BD6DB0 LDR X0, [X19 + 0x28]
	0x03BD6DB4 CBZ X0, 0x3BD6E54

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: Unity.XR.CoreUtils.ColorUnityEvent get_valueUpdated()

Disassembly:
	0x03BD6DB8 ADRP X8, 0x587000
	0x03BD6DBC LDR X8, [X8 + 0xD00]

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_valueUpdated(Unity.XR.CoreUtils.ColorUnityEvent value)

Disassembly:
	0x03BD6DC0 LDR X1, [X8]
	0x03BD6DC4 BL 0x29AD9C0

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.BaseAffordanceTheme`1<UnityEngine.Color> get_defaultAffordanceTheme()

Disassembly:
	0x03BD6DC8 CBZ X0, 0x3BD6E54
	0x03BD6DCC LDR X8, [X19 + 0x20]
	0x03BD6DD0 CBZ X8, 0x3BD6EEC
	0x03BD6DD4 LDR X21, [X8 + 0x28]
	0x03BD6DD8 ADRP X8, 0x587000
	0x03BD6DDC LDR X20, [X19 + 0x38]
	0x03BD6DE0 LDR X8, [X8 + 0x9B0]
	0x03BD6DE4 LDR X0, [X8]
	0x03BD6DE8 BL 0x1C16F10
	0x03BD6DEC ADRP X8, 0x587000
	0x03BD6DF0 LDR X8, [X8 + 0xD08]
	0x03BD6DF4 MOV X1, X19
	0x03BD6DF8 MOV X3, X31
	0x03BD6DFC MOV X22, X0
	0x03BD6E00 LDR X2, [X8]
	0x03BD6E04 BL 0x2980F64
	0x03BD6E08 CBZ X21, 0x3BD6EEC
	0x03BD6E0C ADRP X10, 0x547000
	0x03BD6E10 LDR X8, [X21]
	0x03BD6E14 LDR X10, [X10 + 0x590]
	0x03BD6E18 LDRH W9, [X8 + 0x12E]
	0x03BD6E1C LDR X1, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80D000
	005 Move W8, [X20+3711]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x588000
	012 Move X0, [X0+3240]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3711], W8
	016 Move X0, [X19+152]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x588000
	020 Move X8, [X8+3240]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call DatumProperty`2<Object, Object>.get_Value, X0
	026 Return X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<UnityEngine.Color> get_affordanceValue()

Disassembly:
	0x03BD6E20 CBZ X9, 0x3BD6E44
	0x03BD6E24 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: Unity.Jobs.JobHandle ScheduleTweenJob(ref UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<UnityEngine.Color> jobData)

Disassembly:
	0x03BD6E28 ADD X10, X10, 0x8
	0x03BD6E2C LDUR X11, [X10 - 0x8]
	0x03BD6E30 CMP X11, X1
	0x03BD6E34 B.EQ 0x3BD6EB0
	0x03BD6E38 SUBS X9, X9, 0x1
	0x03BD6E3C ADD X10, X10, 0x10
	0x03BD6E40 B.NE 0x3BD6E2C
	0x03BD6E44 MOV X0, X21
	0x03BD6E48 MOV W2, W31
	0x03BD6E4C BL 0x1C5C788
	0x03BD6E50 B 0x3BD6EBC
	0x03BD6E54 ADRP X8, 0x587000
	0x03BD6E58 LDR X8, [X8 + 0xD10]
	0x03BD6E5C LDR X0, [X8]
	0x03BD6E60 MOV X1, X19
	0x03BD6E64 MOV X2, X31
	0x03BD6E68 BL 0x321EFD0
	0x03BD6E6C LDR X8, [X21]
	0x03BD6E70 MOV X20, X0
	0x03BD6E74 LDR W9, [X8 + 0xE0]
	0x03BD6E78 CBNZ W9, 0x3BD6E84
	0x03BD6E7C MOV X0, X8
	0x03BD6E80 BL 0x1C16DFC
	0x03BD6E84 MOV X0, X20
	0x03BD6E88 MOV X1, X19
	0x03BD6E8C MOV X2, X31
	0x03BD6E90 BL 0x3B2EF38
	0x03BD6E94 MOV X0, X19
	0x03BD6E98 LDP X20, X19, [X31 + 0x20]
	0x03BD6E9C LDP X22, X21, [X31 + 0x10]
	0x03BD6EA0 MOV W1, W31
	0x03BD6EA4 MOV X2, X31
	0x03BD6EA8 LDR X30, [X31], #0x30
	0x03BD6EAC B 0x3C32410
	0x03BD6EB0 LDRSW X9, [X10]
	0x03BD6EB4 ADD X8, X8, X9, 0x4, LSL
	0x03BD6EB8 ADD X0, X8, 0x138
	0x03BD6EBC LDP X8, X2, [X0]
	0x03BD6EC0 MOV X0, X21
	0x03BD6EC4 MOV X1, X22
	0x03BD6EC8 BLR X8
	0x03BD6ECC CBZ X20, 0x3BD6EEC
	0x03BD6ED0 MOV X1, X0
	0x03BD6ED4 MOV X0, X20
	0x03BD6ED8 LDP X20, X19, [X31 + 0x20]
	0x03BD6EDC LDP X22, X21, [X31 + 0x10]
	0x03BD6EE0 MOV X2, X31
	0x03BD6EE4 LDR X30, [X31], #0x30
	0x03BD6EE8 B 0x3B3175C
	0x03BD6EEC BL 0x1C16F20
	0x03BD6EF0 STR X30, [X31 - 0x10]!
	0x03BD6EF4 LDR X0, [X0 + 0x38]
	0x03BD6EF8 CBZ X0, 0x3BD6F08
	0x03BD6EFC MOV X1, X31
	0x03BD6F00 LDR X30, [X31], #0x10
	0x03BD6F04 B 0x3B31AF0
	0x03BD6F08 BL 0x1C16F20
	0x03BD6F0C SUB X31, X31, 0x40
	0x03BD6F10 STP X30, X23, [X31 + 0x10]
	0x03BD6F14 STP X22, X21, [X31 + 0x20]
	0x03BD6F18 STP X20, X19, [X31 + 0x30]
	0x03BD6F1C ADRP X21, 0x80C000
	0x03BD6F20 LDRB W8, [X21 + 0xE9E]
	0x03BD6F24 MOV X19, X1
	0x03BD6F28 MOV X20, X0
	0x03BD6F2C TBNZ X8, 0x0, 0x3BD6F74
	0x03BD6F30 ADRP X0, 0x547000
	0x03BD6F34 LDR X0, [X0 + 0x4F0]
	0x03BD6F38 BL 0x1C16CF4
	0x03BD6F3C ADRP X0, 0x51E000
	0x03BD6F40 LDR X0, [X0 + 0x9D8]
	0x03BD6F44 BL 0x1C16CF4
	0x03BD6F48 ADRP X0, 0x587000
	0x03BD6F4C LDR X0, [X0 + 0xD00]
	0x03BD6F50 BL 0x1C16CF4
	0x03BD6F54 ADRP X0, 0x547000
	0x03BD6F58 LDR X0, [X0 + 0x1E8]
	0x03BD6F5C BL 0x1C16CF4
	0x03BD6F60 ADRP X0, 0x547000
	0x03BD6F64 LDR X0, [X0 + 0x598]
	0x03BD6F68 BL 0x1C16CF4
	0x03BD6F6C MOVZ W8, 0x1
	0x03BD6F70 STRB W8, [X21 + 0xE9E]
	0x03BD6F74 LDRB W8, [X20 + 0x40]
	0x03BD6F78 CMP W8, W19, UXTB
	0x03BD6F7C B.EQ 0x3BD70C8
	0x03BD6F80 AND W9, W19, 0xFF
	0x03BD6F84 CMP W9, 0x2
	0x03BD6F88 CSET W10, EQ
	0x03BD6F8C CMP W9, 0x4
	0x03BD6F90 CSET W21, EQ
	0x03BD6F94 CMP W8, 0x4
	0x03BD6F98 CSET W11, EQ
	0x03BD6F9C CMP W8, 0x5
	0x03BD6FA0 CSET W22, EQ
	0x03BD6FA4 CMP W9, 0x5
	0x03BD6FA8 CSET W8, EQ
	0x03BD6FAC AND W8, W8, W11, 0x0

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+384], X29
	003 Move [X31+392], X30
	004 Move [X31+400], X22
	005 Move [X31+408], X21
	006 Move [X31+416], X20
	007 Move [X31+424], X19
	008 Move X22, 0x80D000
	009 Move W8, [X22+3712]
	010 Move X19, X1
	011 Move X20, X0
	012 Add X21, X31, 128
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x588000
	018 Move X0, [X0+3248]
	019 Call 0x1C17CF4
	020 Move X0, 0x588000
	021 Move X0, [X0+2120]
	022 Call 0x1C17CF4
	023 Move X0, 0x587000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3712], W8
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X21+96], V0
	030 Move [X21+104], V0
	031 Move [X21+64], V0
	032 Move [X21+72], V0
	033 Move [X21+32], V0
	034 Move [X21+40], V0
	035 Move [X21+1], V0
	036 Move [X31+8], V0
	037 Move X20, [X20+48]
	038 Compare X20, 0
	039 JumpIfEqual {100}
	040 Move X9, 0x588000
	041 Move X9, [X9+2120]
	042 Move X8, [X20]
	043 Move X1, [X9]
	044 Move W10, [X8+304]
	045 Move W9, [X1+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X8+200]
	048 Add X8, X8, X9
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Add X0, X31, 8
	053 Move W2, 120
	054 Move X1, X19
	055 Move [X21+96], V0
	056 Move [X21+104], V0
	057 Move [X21+64], V0
	058 Move [X21+72], V0
	059 Move [X21+32], V0
	060 Move [X21+40], V0
	061 Move [X21+1], V0
	062 Move [X31+8], V0
	063 Call 0x3EB2AC0
	064 Add X0, X31, 128
	065 Add X1, X31, 8
	066 Move X2, X31
	067 Call 0x3B9A620
	068 Compare X20, 0
	069 JumpIfEqual {116}
	070 Move V0, [X20+36]
	071 Move X19, 0x587000
	072 Move X19, [X19+1584]
	073 Add X0, X31, 128
	074 Move X1, X31
	075 Call 0x3B9A634
	076 Move W1, [X20+32]
	077 Add X0, X31, 128
	078 Move X2, X31
	079 Call 0x3B9A63C
	080 Move X19, [X19]
	081 Add X0, X31, 256
	082 Add X1, X31, 128
	083 Move W2, 128
	084 Call 0x3EB2AC0
	085 Add X0, X31, 256
	086 Move X1, X31
	087 Move X2, X31
	088 Move X3, X19
	089 Call 0x21EF0A4, X0, X1
	090 Move X20, [X31+416]
	091 Move X19, [X31+424]
	092 Move X22, [X31+400]
	093 Move X21, [X31+408]
	094 Move X29, [X31+384]
	095 Move X30, [X31+392]
	096 Add X31, X31, 432
	097 Return X0
	098 Move X0, X20
	099 Call 0x1C181E0
	100 Add X0, X31, 8
	101 Move W2, 120
	102 Move X1, X19
	103 Move [X21+96], V0
	104 Move [X21+104], V0
	105 Move [X21+64], V0
	106 Move [X21+72], V0
	107 Move [X21+32], V0
	108 Move [X21+40], V0
	109 Move [X21+1], V0
	110 Move [X31+8], V0
	111 Call 0x3EB2AC0
	112 Add X0, X31, 128
	113 Add X1, X31, 8
	114 Move X2, X31
	115 Call 0x3B9A620
	116 Call 0x1C17F20

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.BaseAffordanceTheme`1<UnityEngine.Color> GenerateNewAffordanceThemeInstance()

Disassembly:
	0x03BD6FB0 AND W23, W10, W11, 0x0
	0x03BD6FB4 TBNZ X8, 0x0, 0x3BD6FF0
	0x03BD6FB8 TBNZ X23, 0x0, 0x3BD6FF0
	0x03BD6FBC LDR X0, [X20 + 0x28]
	0x03BD6FC0 CBZ X0, 0x3BD70DC
	0x03BD6FC4 ADRP X8, 0x587000
	0x03BD6FC8 LDR X8, [X8 + 0xD00]
	0x03BD6FCC LDR X1, [X8]
	0x03BD6FD0 BL 0x29AD9C0
	0x03BD6FD4 CBZ X0, 0x3BD6FF0
	0x03BD6FD8 LDRB W1, [X20 + 0x40]
	0x03BD6FDC BL 0x3BCC154
	0x03BD6FE0 CBZ X0, 0x3BD6FF0
	0x03BD6FE4 LDR X1, [X0 + 0x20]
	0x03BD6FE8 MOV X0, X20
	0x03BD6FEC BL 0x3BD70E0
	0x03BD6FF0 AND W8, W21, W22, 0x0
	0x03BD6FF4 ORR W8, W8, W23, 0x0
	0x03BD6FF8 TBNZ X8, 0x0, 0x3BD70C4
	0x03BD6FFC LDR X0, [X20 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x80D000
	005 Move X20, 0x588000
	006 Move W8, [X19+3713]
	007 Move X20, [X20+2120]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x588000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3713], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call ColorAffordanceTheme..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Void OnAffordanceValueUpdated(UnityEngine.Color newValue)

Disassembly:
	0x03BD5298 STR D8, [X31 - 0x20]!
	0x03BD529C STP X30, X19, [X31 + 0x10]
	0x03BD52A0 LDR X8, [X0 + 0xA8]
	0x03BD52A4 CBZ X8, 0x3BD52E4
	0x03BD52A8 MOV X19, X0
	0x03BD52AC LDR X0, [X8 + 0x30]
	0x03BD52B0 MOV V8.16B, V0.16B
	0x03BD52B4 MOVZ W9, 0x1
	0x03BD52B8 STRB W9, [X8 + 0x38]
	0x03BD52BC CBZ X0, 0x3BD52D0
	0x03BD52C0 LDR W1, [X19 + 0xB8]
	0x03BD52C4 MOV V0.16B, V8.16B
	0x03BD52C8 MOV X2, X31
	0x03BD52CC BL 0x3C125FC
	0x03BD52D0 MOV X0, X19
	0x03BD52D4 LDP X30, X19, [X31 + 0x10]
	0x03BD52D8 MOV V0.16B, V8.16B
	0x03BD52DC LDR V8, [X31], #0x20
	0x03BD52E0 B 0x3BD45EC
	0x03BD52E4 BL 0x1C16F20
	0x03BD52E8 STP X30, X19, [X31 - 0x10]!
	0x03BD52EC MOV X19, X0
	0x03BD52F0 LDR X0, [X0 + 0xA8]
	0x03BD52F4 CBZ X0, 0x3BD5310
	0x03BD52F8 BL 0x3BD3DD4
	0x03BD52FC CBZ X0, 0x3BD5310
	0x03BD5300 LDR W1, [X19 + 0xB8]
	0x03BD5304 MOV X2, X31
	0x03BD5308 LDP X30, X19, [X31], #0x10
	0x03BD530C B 0x3C15F98
	0x03BD5310 BL 0x1C16F20
	0x03BD5314 B 0x3BD472C
	0x03BD5318 LDR X0, [X0 + 0xA8]
	0x03BD531C RET
	0x03BD5320 STR X1, [X0 + 0xA8]
	0x03BD5324 RET

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x80E000
	009 Move W8, [X20+3714]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x584000
	020 Move X0, [X0+2200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3714], W8
	024 Move X0, [X19+160]
	025 Compare X0, 0
	026 JumpIfEqual {43}
	027 Move X8, 0x584000
	028 Move X8, [X8+2200]
	029 Move V2, V9
	030 Move V3, V8
	031 Move X20, [X31+48]
	032 Move X19, [X31+56]
	033 Move X1, [X8]
	034 Move X30, [X31+32]
	035 Move D9, [X31+16]
	036 Move D8, [X31+24]
	037 Move V0, V11
	038 Move V1, V10
	039 Move D11, [X31+64]
	040 Move D10, [X31+72]
	041 Call UnityEvent`1<Color>.Invoke, X0, X1
	042 Return 
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X30, [X31+32]
	046 Move D9, [X31+16]
	047 Move D8, [X31+24]
	048 Move D11, [X31+64]
	049 Move D10, [X31+72]
	050 Return 

Method: System.Void .ctor()

Disassembly:
	0x03BD53A0 CBNZ W8, 0x3BD53A8
	0x03BD53A4 BL 0x1C16DFC
	0x03BD53A8 MOV X0, X20
	0x03BD53AC MOV X1, X31
	0x03BD53B0 MOV X2, X31
	0x03BD53B4 BL 0x3C3883C
	0x03BD53B8 TBZ X0, 0x0, 0x3BD53D4
	0x03BD53BC ADRP X8, 0x588000
	0x03BD53C0 LDR X8, [X8 + 0xC20]
	0x03BD53C4 MOV X0, X19
	0x03BD53C8 LDR X1, [X8]
	0x03BD53CC BL 0x21A3894
	0x03BD53D0 STR X0, [X19 + 0xA8]
	0x03BD53D4 LDP X20, X19, [X31 + 0x10]
	0x03BD53D8 LDP X30, X21, [X31], #0x20
	0x03BD53DC RET
	0x03BD53E0 STR X30, [X31 - 0x30]!
	0x03BD53E4 STP X22, X21, [X31 + 0x10]
	0x03BD53E8 STP X20, X19, [X31 + 0x20]
	0x03BD53EC ADRP X21, 0x80D000
	0x03BD53F0 ADRP X22, 0x588000
	0x03BD53F4 ADRP X20, 0x51E000
	0x03BD53F8 LDRB W8, [X21 + 0xE7A]
	0x03BD53FC LDR X22, [X22 + 0xC30]
	0x03BD5400 LDR X20, [X20 + 0x598]
	0x03BD5404 MOV X19, X0
	0x03BD5408 TBNZ X8, 0x0, 0x3BD5438
	0x03BD540C ADRP X0, 0x588000
	0x03BD5410 LDR X0, [X0 + 0xC30]
	0x03BD5414 BL 0x1C16CF4
	0x03BD5418 ADRP X0, 0x588000
	0x03BD541C LDR X0, [X0 + 0xC20]
	0x03BD5420 BL 0x1C16CF4
	0x03BD5424 ADRP X0, 0x51E000
	0x03BD5428 LDR X0, [X0 + 0x598]
	0x03BD542C BL 0x1C16CF4
	0x03BD5430 MOVZ W8, 0x1
	0x03BD5434 STRB W8, [X21 + 0xE7A]
	0x03BD5438 LDR X1, [X22]
	0x03BD543C MOV X0, X19
	0x03BD5440 BL 0x26446E0
	0x03BD5444 LDR X0, [X20]
	0x03BD5448 LDR X20, [X19 + 0xA8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x80E000
	008 Move X23, 0x589000
	009 Move X20, 0x589000
	010 Move X21, 0x589000
	011 Move W8, [X22+3715]
	012 Move X23, [X23+2992]
	013 Move X20, [X20+3000]
	014 Move X21, [X21+3008]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x589000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move X0, 0x589000
	024 Move X0, [X0+3000]
	025 Call 0x1C17CF4
	026 Move X0, 0x589000
	027 Move X0, [X0+2992]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3715], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X4, [X20]
	034 Move S0, W31
	035 Move S1, W31
	036 Move S2, W31
	037 Move S3, W31
	038 Move W1, 1
	039 Move X2, X31
	040 Move W3, W31
	041 Move X20, X0
	042 Call BindableVariable`1<Color>..ctor, X0, X1, X2, X3, X4
	043 Move [X19+168], X20
	044 Move X1, [X21]
	045 Move X0, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call 0x264C45C, X0
	053 Return 

