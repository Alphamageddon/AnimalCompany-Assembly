Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Rendering.FloatMaterialPropertyAffordanceReceiver

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialPropertyBlockHelper get_materialPropertyBlockHelper()

Disassembly:
	0x03BD610C LDP X30, X21, [X31 + 0xC0]
	0x03BD6110 ADD X31, X31, 0xE0

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_materialPropertyBlockHelper(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialPropertyBlockHelper value)

Disassembly:
	0x03BD6114 RET
	0x03BD6118 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X0+168], X1
	002 Return 

Method: System.String get_floatPropertyName()

Disassembly:
	0x03BD611C STP X20, X19, [X31 + 0x10]
	0x03BD6120 ADRP X19, 0x80C000

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_floatPropertyName(System.String value)

Disassembly:
	0x03BD6124 ADRP X20, 0x587000
	0x03BD6128 LDRB W8, [X19 + 0xE86]
	0x03BD612C LDR X20, [X20 + 0xCC0]
	0x03BD6130 TBNZ X8, 0x0, 0x3BD6148
	0x03BD6134 ADRP X0, 0x587000
	0x03BD6138 LDR X0, [X0 + 0xCC0]
	0x03BD613C BL 0x1C16CF4
	0x03BD6140 MOVZ W8, 0x1
	0x03BD6144 STRB W8, [X19 + 0xE86]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+176], X1
	005 Move X0, X1
	006 Move X1, X31
	007 Call Shader.PropertyToID, X0
	008 Move [X19+184], W0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void OnValidate()

Disassembly:
	0x03BD6148 LDR X0, [X20]
	0x03BD614C BL 0x1C16F10
	0x03BD6150 MOV X19, X0
	0x03BD6154 BL 0x3BCB454
	0x03BD6158 MOV X0, X19
	0x03BD615C LDP X20, X19, [X31 + 0x10]
	0x03BD6160 LDR X30, [X31], #0x20
	0x03BD6164 RET
	0x03BD6168 LDR X0, [X0 + 0xB0]
	0x03BD616C RET
	0x03BD6170 STR X1, [X0 + 0xB0]
	0x03BD6174 RET
	0x03BD6178 STP D11, D10, [X31 - 0x40]!
	0x03BD617C STP D9, D8, [X31 + 0x10]
	0x03BD6180 STR X30, [X31 + 0x20]
	0x03BD6184 STP X20, X19, [X31 + 0x30]
	0x03BD6188 ADRP X20, 0x80C000
	0x03BD618C LDRB W8, [X20 + 0xE89]
	0x03BD6190 MOV V8.16B, V3.16B
	0x03BD6194 MOV V9.16B, V2.16B
	0x03BD6198 MOV V10.16B, V1.16B
	0x03BD619C MOV V11.16B, V0.16B
	0x03BD61A0 MOV X19, X0
	0x03BD61A4 TBNZ X8, 0x0, 0x3BD61BC
	0x03BD61A8 ADRP X0, 0x587000
	0x03BD61AC LDR X0, [X0 + 0xCC8]
	0x03BD61B0 BL 0x1C16CF4
	0x03BD61B4 MOVZ W8, 0x1
	0x03BD61B8 STRB W8, [X20 + 0xE89]
	0x03BD61BC MOV X0, X19
	0x03BD61C0 MOV V0.16B, V11.16B
	0x03BD61C4 MOV V1.16B, V10.16B
	0x03BD61C8 MOV V2.16B, V9.16B
	0x03BD61CC MOV V3.16B, V8.16B
	0x03BD61D0 BL 0x3BD5C28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x80D000
	006 Move X20, 0x51E000
	007 Move W8, [X21+3703]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x588000
	015 Move X0, [X0+3104]
	016 Call 0x1C17CF4
	017 Move X0, 0x51E000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3703], W8
	022 Move X0, [X20]
	023 Move X20, [X19+168]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x588000
	037 Move X8, [X8+3104]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+168], X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void Awake()

Disassembly:
	0x03BD61D4 LDR X0, [X19 + 0xB0]
	0x03BD61D8 CBZ X0, 0x3BD620C
	0x03BD61DC ADRP X8, 0x587000
	0x03BD61E0 LDR X8, [X8 + 0xCC8]
	0x03BD61E4 MOV V2.16B, V9.16B
	0x03BD61E8 MOV V3.16B, V8.16B
	0x03BD61EC LDP X20, X19, [X31 + 0x30]
	0x03BD61F0 LDR X1, [X8]
	0x03BD61F4 LDR X30, [X31 + 0x20]
	0x03BD61F8 LDP D9, D8, [X31 + 0x10]
	0x03BD61FC MOV V0.16B, V11.16B
	0x03BD6200 MOV V1.16B, V10.16B
	0x03BD6204 LDP D11, D10, [X31], #0x40
	0x03BD6208 B 0x272A238
	0x03BD620C LDP X20, X19, [X31 + 0x30]
	0x03BD6210 LDR X30, [X31 + 0x20]
	0x03BD6214 LDP D9, D8, [X31 + 0x10]
	0x03BD6218 LDP D11, D10, [X31], #0x40
	0x03BD621C RET
	0x03BD6220 B 0x3BD5CFC
	0x03BD6224 LDR X0, [X0 + 0xB0]
	0x03BD6228 RET
	0x03BD622C STR X1, [X0 + 0xB0]
	0x03BD6230 RET
	0x03BD6234 STR D10, [X31 - 0x30]!
	0x03BD6238 STP D9, D8, [X31 + 0x8]
	0x03BD623C STR X30, [X31 + 0x18]
	0x03BD6240 STP X20, X19, [X31 + 0x20]
	0x03BD6244 ADRP X20, 0x80C000
	0x03BD6248 LDRB W8, [X20 + 0xE8A]
	0x03BD624C MOV V8.16B, V2.16B
	0x03BD6250 MOV V9.16B, V1.16B
	0x03BD6254 MOV V10.16B, V0.16B
	0x03BD6258 MOV X19, X0
	0x03BD625C TBNZ X8, 0x0, 0x3BD6274
	0x03BD6260 ADRP X0, 0x587000
	0x03BD6264 LDR X0, [X0 + 0xCC8]
	0x03BD6268 BL 0x1C16CF4
	0x03BD626C MOVZ W8, 0x1
	0x03BD6270 STRB W8, [X20 + 0xE8A]
	0x03BD6274 MOV X0, X19
	0x03BD6278 MOV V0.16B, V10.16B
	0x03BD627C MOV V1.16B, V9.16B
	0x03BD6280 MOV V2.16B, V8.16B
	0x03BD6284 BL 0x3BD5894
	0x03BD6288 LDR X19, [X19 + 0xB0]
	0x03BD628C CBZ X19, 0x3BD62E4
	0x03BD6290 ADRP X20, 0x587000
	0x03BD6294 LDR X20, [X20 + 0xCC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x80D000
	007 Move X22, 0x588000
	008 Move X20, 0x51E000
	009 Move W8, [X21+3704]
	010 Move X22, [X22+3112]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x588000
	018 Move X0, [X0+3112]
	019 Call 0x1C17CF4
	020 Move X0, 0x588000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0x51E000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3704], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call BaseAffordanceStateReceiver`1<Single>.Awake, X0
	031 Move X0, [X20]
	032 Move X20, [X19+168]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {51}
	045 Move X8, 0x588000
	046 Move X8, [X8+3104]
	047 Move X0, X19
	048 Move X1, [X8]
	049 Call 0x21A4894, X0
	050 Move [X19+168], X0
	051 Move X0, [X19+176]
	052 Move X1, X31
	053 Call Shader.PropertyToID, X0
	054 Move [X19+184], W0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 

Method: System.Void OnAffordanceValueUpdated(System.Single newValue)

Disassembly:
	0x03BD6298 MOV V0.16B, V10.16B
	0x03BD629C MOV V1.16B, V9.16B
	0x03BD62A0 MOV V2.16B, V8.16B
	0x03BD62A4 MOV X0, X31
	0x03BD62A8 BL 0x3887BE0
	0x03BD62AC ADRP X8, 0xFFFFFFFFFCF14000
	0x03BD62B0 LDR V3, [X8 + 0x104]
	0x03BD62B4 MOV X0, X31
	0x03BD62B8 FMUL S0, S0, S3
	0x03BD62BC FMUL S1, S1, S3
	0x03BD62C0 FMUL S2, S2, S3
	0x03BD62C4 BL 0x3C2A574
	0x03BD62C8 LDR X1, [X20]
	0x03BD62CC MOV X0, X19
	0x03BD62D0 LDP X20, X19, [X31 + 0x20]
	0x03BD62D4 LDR X30, [X31 + 0x18]
	0x03BD62D8 LDP D9, D8, [X31 + 0x8]
	0x03BD62DC LDR V10, [X31], #0x30
	0x03BD62E0 B 0x272A238
	0x03BD62E4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0+168]
	005 Compare X8, 0
	006 JumpIfEqual {25}
	007 Move X19, X0
	008 Move X0, [X8+48]
	009 Move V8, V0
	010 Move W9, 1
	011 Move [X8+56], W9
	012 Compare X0, 0
	013 JumpIfEqual {18}
	014 Move W1, [X19+184]
	015 Move V0, V8
	016 Move X2, X31
	017 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Move V0, V8
	022 Move V8, [X31+32]
	023 Call FloatAffordanceReceiver.OnAffordanceValueUpdated, X0, V0
	024 Return 
	025 Call 0x1C17F20

Method: System.Single GetCurrentValueForCapture()

Disassembly:
	0x03BD62E8 LDR X30, [X31 + 0x18]
	0x03BD62EC LDP D9, D8, [X31 + 0x8]
	0x03BD62F0 LDR V10, [X31], #0x30
	0x03BD62F4 RET
	0x03BD62F8 B 0x3BD5960
	0x03BD62FC LDR X0, [X0 + 0x90]
	0x03BD6300 RET
	0x03BD6304 STR X1, [X0 + 0x90]
	0x03BD6308 RET
	0x03BD630C LDR X0, [X0 + 0x98]
	0x03BD6310 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+168]
	005 Compare X0, 0
	006 JumpIfEqual {16}
	007 Call MaterialHelperBase.GetSharedMaterialForTarget, X0
	008 Compare X0, 0
	009 JumpIfEqual {16}
	010 Move W1, [X19+184]
	011 Move X2, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call Material.GetFloat, X0, X1
	015 Return V0
	016 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BD6314 STR X1, [X0 + 0x98]

ISIL:
	001 Call FloatAffordanceReceiver..ctor, X0
	002 Return 

