Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Rendering.ColorMaterialPropertyAffordanceReceiver

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialPropertyBlockHelper get_materialPropertyBlockHelper()

Disassembly:
	0x03BD5D88 BL 0x28E2DFC
	0x03BD5D8C STR X20, [X19 + 0xA8]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_materialPropertyBlockHelper(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialPropertyBlockHelper value)

Disassembly:
	0x03BD5D90 LDR X1, [X21]
	0x03BD5D94 MOV X0, X19

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.String get_colorPropertyName()

Disassembly:
	0x03BD5D98 LDP X20, X19, [X31 + 0x20]
	0x03BD5D9C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void set_colorPropertyName(System.String value)

Disassembly:
	0x03BD5DA0 LDP X30, X23, [X31], #0x30
	0x03BD5DA4 B 0x2768910

ISIL:
	001 Move [X0+184], X1

Method: System.Void OnValidate()

Disassembly:
	0x03BD5E80 STP V0, V0, [X21 + 0x60]
	0x03BD5E84 STP V0, V0, [X21 + 0x40]
	0x03BD5E88 STP V0, V0, [X21 + 0x20]
	0x03BD5E8C STR V0, [X21 + 0x1]
	0x03BD5E90 STR V0, [X31 + 0x8]
	0x03BD5E94 LDR X20, [X20 + 0x30]
	0x03BD5E98 CBZ X20, 0x3BD5F78
	0x03BD5E9C ADRP X9, 0x588000
	0x03BD5EA0 LDR X9, [X9 + 0x848]
	0x03BD5EA4 LDR X8, [X20]
	0x03BD5EA8 LDR X1, [X9]
	0x03BD5EAC LDRB W10, [X8 + 0x130]
	0x03BD5EB0 LDRB W9, [X1 + 0x130]
	0x03BD5EB4 CMP W10, W9
	0x03BD5EB8 B.CC 0x3BD5F70
	0x03BD5EBC LDR X8, [X8 + 0xC8]
	0x03BD5EC0 ADD X8, X8, X9, 0x3, LSL
	0x03BD5EC4 LDUR X8, [X8 - 0x8]
	0x03BD5EC8 CMP X8, X1
	0x03BD5ECC B.NE 0x3BD5F70
	0x03BD5ED0 MOVI V0.2D, 0x0
	0x03BD5ED4 ADD X0, X31, 0x8
	0x03BD5ED8 MOVZ W2, 0x78
	0x03BD5EDC MOV X1, X19
	0x03BD5EE0 STP V0, V0, [X21 + 0x60]
	0x03BD5EE4 STP V0, V0, [X21 + 0x40]
	0x03BD5EE8 STP V0, V0, [X21 + 0x20]
	0x03BD5EEC STR V0, [X21 + 0x1]
	0x03BD5EF0 STR V0, [X31 + 0x8]
	0x03BD5EF4 BL 0x3EB1AC0
	0x03BD5EF8 ADD X0, X31, 0x80
	0x03BD5EFC ADD X1, X31, 0x8
	0x03BD5F00 MOV X2, X31
	0x03BD5F04 BL 0x3B99620
	0x03BD5F08 CBZ X20, 0x3BD5FAC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x80E000
	006 Move X20, 0x51F000
	007 Move W8, [X21+3699]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x589000
	015 Move X0, [X0+3104]
	016 Call 0x1C17CF4
	017 Move X0, 0x51F000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3699], W8
	022 Move X0, [X20]
	023 Move X20, [X19+176]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x589000
	037 Move X8, [X8+3104]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+176], X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void Awake()

Disassembly:
	0x03BD5F0C LDR V0, [X20 + 0x24]
	0x03BD5F10 ADRP X19, 0x587000
	0x03BD5F14 LDR X19, [X19 + 0x630]
	0x03BD5F18 ADD X0, X31, 0x80
	0x03BD5F1C MOV X1, X31
	0x03BD5F20 BL 0x3B99634
	0x03BD5F24 LDRB W1, [X20 + 0x20]
	0x03BD5F28 ADD X0, X31, 0x80
	0x03BD5F2C MOV X2, X31
	0x03BD5F30 BL 0x3B9963C
	0x03BD5F34 LDR X19, [X19]
	0x03BD5F38 ADD X0, X31, 0x100
	0x03BD5F3C ADD X1, X31, 0x80
	0x03BD5F40 MOVZ W2, 0x80
	0x03BD5F44 BL 0x3EB1AC0
	0x03BD5F48 ADD X0, X31, 0x100
	0x03BD5F4C MOV X1, X31
	0x03BD5F50 MOV X2, X31
	0x03BD5F54 MOV X3, X19
	0x03BD5F58 BL 0x21EE0A4
	0x03BD5F5C LDP X20, X19, [X31 + 0x1A0]
	0x03BD5F60 LDP X22, X21, [X31 + 0x190]
	0x03BD5F64 LDP X29, X30, [X31 + 0x180]
	0x03BD5F68 ADD X31, X31, 0x1B0
	0x03BD5F6C RET
	0x03BD5F70 MOV X0, X20
	0x03BD5F74 BL 0x1C171E0
	0x03BD5F78 ADD X0, X31, 0x8
	0x03BD5F7C MOVZ W2, 0x78
	0x03BD5F80 MOV X1, X19
	0x03BD5F84 STP V0, V0, [X21 + 0x60]
	0x03BD5F88 STP V0, V0, [X21 + 0x40]
	0x03BD5F8C STP V0, V0, [X21 + 0x20]
	0x03BD5F90 STR V0, [X21 + 0x1]
	0x03BD5F94 STR V0, [X31 + 0x8]
	0x03BD5F98 BL 0x3EB1AC0
	0x03BD5F9C ADD X0, X31, 0x80
	0x03BD5FA0 ADD X1, X31, 0x8
	0x03BD5FA4 MOV X2, X31
	0x03BD5FA8 BL 0x3B99620
	0x03BD5FAC BL 0x1C16F20
	0x03BD5FB0 STR X30, [X31 - 0x20]!
	0x03BD5FB4 STP X20, X19, [X31 + 0x10]
	0x03BD5FB8 ADRP X19, 0x80D000
	0x03BD5FBC ADRP X20, 0x588000
	0x03BD5FC0 LDRB W8, [X19 + 0xE81]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x80E000
	007 Move X22, 0x589000
	008 Move X20, 0x51F000
	009 Move W8, [X21+3700]
	010 Move X22, [X22+3040]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x589000
	018 Move X0, [X0+3040]
	019 Call 0x1C17CF4
	020 Move X0, 0x589000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0x51F000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3700], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call 0x2643214, X0
	031 Move X0, [X20]
	032 Move X20, [X19+176]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {51}
	045 Move X8, 0x589000
	046 Move X8, [X8+3104]
	047 Move X0, X19
	048 Move X1, [X8]
	049 Call 0x21A4894, X0
	050 Move [X19+176], X0
	051 Move X0, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Call ColorMaterialPropertyAffordanceReceiver.UpdateColorPropertyID, X0
	058 Return 

Method: System.Void OnAffordanceValueUpdated(UnityEngine.Color newValue)

Disassembly:
	0x03BD5FC4 LDR X20, [X20 + 0x848]
	0x03BD5FC8 TBNZ X8, 0x0, 0x3BD5FE0
	0x03BD5FCC ADRP X0, 0x588000
	0x03BD5FD0 LDR X0, [X0 + 0x848]
	0x03BD5FD4 BL 0x1C16CF4
	0x03BD5FD8 MOVZ W8, 0x1
	0x03BD5FDC STRB W8, [X19 + 0xE81]
	0x03BD5FE0 LDR X0, [X20]
	0x03BD5FE4 BL 0x1C16F10
	0x03BD5FE8 MOV X19, X0
	0x03BD5FEC BL 0x3BCB30C
	0x03BD5FF0 MOV X0, X19
	0x03BD5FF4 LDP X20, X19, [X31 + 0x10]
	0x03BD5FF8 LDR X30, [X31], #0x20
	0x03BD5FFC RET
	0x03BD6000 LDR X0, [X0 + 0x90]
	0x03BD6004 RET
	0x03BD6008 STR X1, [X0 + 0x90]
	0x03BD600C RET
	0x03BD6010 LDR X0, [X0 + 0x98]
	0x03BD6014 RET
	0x03BD6018 STR X1, [X0 + 0x98]
	0x03BD601C RET
	0x03BD6020 STR X30, [X31 - 0x20]!
	0x03BD6024 STP X20, X19, [X31 + 0x10]
	0x03BD6028 ADRP X20, 0x80C000
	0x03BD602C LDRB W8, [X20 + 0xE84]
	0x03BD6030 MOV X19, X0
	0x03BD6034 TBNZ X8, 0x0, 0x3BD604C
	0x03BD6038 ADRP X0, 0x587000
	0x03BD603C LDR X0, [X0 + 0xCB8]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X8, [X0+176]
	008 Compare X8, 0
	009 JumpIfEqual {40}
	010 Move X19, X0
	011 Move X0, [X8+48]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move W9, 1
	017 Move [X8+56], W9
	018 Compare X0, 0
	019 JumpIfEqual {27}
	020 Move W1, [X19+192]
	021 Move V0, V11
	022 Move V1, V10
	023 Move V2, V9
	024 Move V3, V8
	025 Move X2, X31
	026 Call MaterialPropertyBlock.SetColor, X0, X1, X2
	027 Move X0, X19
	028 Move V2, V9
	029 Move V3, V8
	030 Move X30, [X31+32]
	031 Move X19, [X31+40]
	032 Move D9, [X31+16]
	033 Move D8, [X31+24]
	034 Move V0, V11
	035 Move V1, V10
	036 Move D11, [X31+48]
	037 Move D10, [X31+56]
	038 Call ColorAffordanceReceiver.OnAffordanceValueUpdated, X0, X1
	039 Return 
	040 Call 0x1C17F20

Method: UnityEngine.Color GetCurrentValueForCapture()

Disassembly:
	0x03BD6040 BL 0x1C16CF4
	0x03BD6044 MOVZ W8, 0x1
	0x03BD6048 STRB W8, [X20 + 0xE84]
	0x03BD604C LDR X0, [X19 + 0x90]
	0x03BD6050 CBZ X0, 0x3BD606C
	0x03BD6054 ADRP X8, 0x587000
	0x03BD6058 LDR X8, [X8 + 0xCB8]
	0x03BD605C LDP X20, X19, [X31 + 0x10]
	0x03BD6060 LDR X1, [X8]
	0x03BD6064 LDR X30, [X31], #0x20
	0x03BD6068 B 0x29AD9C0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+176]
	005 Compare X0, 0
	006 JumpIfEqual {16}
	007 Call MaterialHelperBase.GetSharedMaterialForTarget, X0
	008 Compare X0, 0
	009 JumpIfEqual {16}
	010 Move W1, [X19+192]
	011 Move X2, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call Material.GetColor, X0, X1
	015 Return X0
	016 Call 0x1C17F20

Method: System.Void UpdateColorPropertyID()

Disassembly:
	0x03BD5DA8 LDR X0, [X0 + 0x98]
	0x03BD5DAC RET
	0x03BD5DB0 STR X1, [X0 + 0x98]
	0x03BD5DB4 RET
	0x03BD5DB8 LDR X0, [X0 + 0xA0]
	0x03BD5DBC RET
	0x03BD5DC0 STR X1, [X0 + 0xA0]
	0x03BD5DC4 RET
	0x03BD5DC8 STR X30, [X31 - 0x20]!
	0x03BD5DCC STP X20, X19, [X31 + 0x10]
	0x03BD5DD0 ADRP X20, 0x80D000
	0x03BD5DD4 LDRB W8, [X20 + 0xE7F]
	0x03BD5DD8 MOV X19, X0
	0x03BD5DDC TBNZ X8, 0x0, 0x3BD5DF4
	0x03BD5DE0 ADRP X0, 0x588000
	0x03BD5DE4 LDR X0, [X0 + 0xCA8]
	0x03BD5DE8 BL 0x1C16CF4
	0x03BD5DEC MOVZ W8, 0x1
	0x03BD5DF0 STRB W8, [X20 + 0xE7F]
	0x03BD5DF4 LDR X0, [X19 + 0x98]
	0x03BD5DF8 CBZ X0, 0x3BD5E14
	0x03BD5DFC ADRP X8, 0x588000
	0x03BD5E00 LDR X8, [X8 + 0xCA8]
	0x03BD5E04 LDP X20, X19, [X31 + 0x10]
	0x03BD5E08 LDR X1, [X8]
	0x03BD5E0C LDR X30, [X31], #0x20
	0x03BD5E10 B 0x29AD9C0
	0x03BD5E14 LDP X20, X19, [X31 + 0x10]
	0x03BD5E18 LDR X30, [X31], #0x20
	0x03BD5E1C RET
	0x03BD5E20 LDR X0, [X0 + 0xA8]
	0x03BD5E24 RET
	0x03BD5E28 SUB X31, X31, 0x1B0
	0x03BD5E2C STP X29, X30, [X31 + 0x180]
	0x03BD5E30 STP X22, X21, [X31 + 0x190]
	0x03BD5E34 STP X20, X19, [X31 + 0x1A0]
	0x03BD5E38 ADRP X22, 0x80D000
	0x03BD5E3C LDRB W8, [X22 + 0xE80]
	0x03BD5E40 MOV X19, X1
	0x03BD5E44 MOV X20, X0
	0x03BD5E48 ADD X21, X31, 0x80
	0x03BD5E4C TBNZ X8, 0x0, 0x3BD5E7C
	0x03BD5E50 ADRP X0, 0x588000
	0x03BD5E54 LDR X0, [X0 + 0xCB0]
	0x03BD5E58 BL 0x1C16CF4
	0x03BD5E5C ADRP X0, 0x588000
	0x03BD5E60 LDR X0, [X0 + 0x848]
	0x03BD5E64 BL 0x1C16CF4
	0x03BD5E68 ADRP X0, 0x587000
	0x03BD5E6C LDR X0, [X0 + 0x630]
	0x03BD5E70 BL 0x1C16CF4
	0x03BD5E74 MOVZ W8, 0x1
	0x03BD5E78 STRB W8, [X22 + 0xE80]
	0x03BD5E7C MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x80E000
	006 Move W8, [X20+3701]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x51F000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x589000
	016 Move X0, [X0+3096]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3701], W8
	020 Move X0, [X19+184]
	021 Move X1, X31
	022 Call String.IsNullOrEmpty, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {57}
	027 Move X20, 0x51F000
	028 Move X21, 0x589000
	029 Move X20, [X20+1432]
	030 Move X21, [X21+3096]
	031 Move X0, X31
	032 Call GraphicsSettings.get_currentRenderPipeline
	033 Move X8, [X20]
	034 Move X20, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Inequality, X0, X1
	044 Move X8, [X21]
	045 Move W20, W0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {52}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X8, [X21]
	052 Move X8, [X8+184]
	053 And W31, W20, 1
	054 Add X9, X8, 4
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Move W0, [X8]
	057 Move X0, [X19+184]
	058 Move X1, X31
	059 Call Shader.PropertyToID, X0
	060 Move [X19+192], W0
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Return 

Method: System.Void .ctor()

Disassembly:
	0x03BD606C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Call ColorAffordanceReceiver..ctor, X0
	002 Return 

