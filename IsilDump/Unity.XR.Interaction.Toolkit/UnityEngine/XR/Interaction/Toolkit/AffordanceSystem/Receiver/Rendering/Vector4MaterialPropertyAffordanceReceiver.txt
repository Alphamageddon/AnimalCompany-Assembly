Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Receiver.Rendering.Vector4MaterialPropertyAffordanceReceiver

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialPropertyBlockHelper get_materialPropertyBlockHelper()

Disassembly:
	0x03BD6A08 ADRP X0, 0x547000
	0x03BD6A0C LDR X0, [X0 + 0x4F0]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_materialPropertyBlockHelper(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Rendering.MaterialPropertyBlockHelper value)

Disassembly:
	0x03BD6A10 BL 0x1C16CF4
	0x03BD6A14 MOVZ W8, 0x1

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.String get_vector4PropertyName()

Disassembly:
	0x03BD6A18 STRB W8, [X28 + 0x138]
	0x03BD6A1C LDR X0, [X20]

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void set_vector4PropertyName(System.String value)

Disassembly:
	0x03BD6A20 LDR W8, [X0 + 0xE0]
	0x03BD6A24 CBNZ W8, 0x3BD6A30
	0x03BD6A28 BL 0x1C16DFC
	0x03BD6A2C LDR X0, [X20]
	0x03BD6A30 CBZ X21, 0x3BD6CE4
	0x03BD6A34 LDR X8, [X0 + 0xB8]
	0x03BD6A38 MOV X0, X21
	0x03BD6A3C LDRB W8, [X8 + 0x18]
	0x03BD6A40 SUB W1, W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+184], X1
	005 Move X0, X1
	006 Move X1, X31
	007 Call Shader.PropertyToID, X0
	008 Move [X19+192], W0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void OnValidate()

Disassembly:
	0x03BD6A44 BL 0x3BCC154
	0x03BD6A48 CBNZ X0, 0x3BD6CC4
	0x03BD6A4C STR X22, [X31 + 0x8]
	0x03BD6A50 ADRP X8, 0x51D000
	0x03BD6A54 LDR X8, [X8 + 0x8F0]
	0x03BD6A58 LDR X0, [X8]
	0x03BD6A5C BL 0x1C16F10
	0x03BD6A60 MOV X1, X31
	0x03BD6A64 MOV X22, X0
	0x03BD6A68 BL 0x3231AC4
	0x03BD6A6C ADRP X19, 0x51E000
	0x03BD6A70 LDR X19, [X19 + 0x9D8]
	0x03BD6A74 MOV X23, X31
	0x03BD6A78 MOV X24, X31
	0x03BD6A7C MOV W25, W31
	0x03BD6A80 MOV W29, W31
	0x03BD6A84 LDR X0, [X20]
	0x03BD6A88 LDR W8, [X0 + 0xE0]
	0x03BD6A8C CBNZ W8, 0x3BD6A94
	0x03BD6A90 BL 0x1C16DFC
	0x03BD6A94 LDRB W8, [X28 + 0x138]
	0x03BD6A98 CBNZ W8, 0x3BD6AAC
	0x03BD6A9C MOV X0, X20
	0x03BD6AA0 BL 0x1C16CF4
	0x03BD6AA4 MOVZ W8, 0x1
	0x03BD6AA8 STRB W8, [X28 + 0x138]
	0x03BD6AAC LDR X0, [X20]
	0x03BD6AB0 LDR W8, [X0 + 0xE0]
	0x03BD6AB4 CBNZ W8, 0x3BD6AC0
	0x03BD6AB8 BL 0x1C16DFC
	0x03BD6ABC LDR X0, [X20]
	0x03BD6AC0 LDR X8, [X0 + 0xB8]
	0x03BD6AC4 LDRB W8, [X8 + 0x18]
	0x03BD6AC8 CMP W8, W25, UXTB
	0x03BD6ACC B.LS 0x3BD6BC4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x80D000
	006 Move X20, 0x51E000
	007 Move W8, [X21+3709]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x588000
	015 Move X0, [X0+3104]
	016 Call 0x1C17CF4
	017 Move X0, 0x51E000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3709], W8
	022 Move X0, [X20]
	023 Move X20, [X19+176]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x588000
	037 Move X8, [X8+3104]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+176], X0
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void Awake()

Disassembly:
	0x03BD6AD0 MOV X0, X21
	0x03BD6AD4 MOV W1, W25
	0x03BD6AD8 BL 0x3BCC154
	0x03BD6ADC MOV X26, X0
	0x03BD6AE0 LDR X0, [X19]
	0x03BD6AE4 ADD X1, X31, 0x1C
	0x03BD6AE8 STRB W25, [X31 + 0x1C]
	0x03BD6AEC BL 0x1C16E04
	0x03BD6AF0 LDR X8, [X20]
	0x03BD6AF4 MOV X27, X0
	0x03BD6AF8 LDR W9, [X8 + 0xE0]
	0x03BD6AFC CBNZ W9, 0x3BD6B08
	0x03BD6B00 MOV X0, X8
	0x03BD6B04 BL 0x1C16DFC
	0x03BD6B08 MOV W0, W25
	0x03BD6B0C BL 0x3BCC0B4
	0x03BD6B10 ADRP X8, 0x547000
	0x03BD6B14 LDR X8, [X8 + 0x510]
	0x03BD6B18 MOV X2, X0
	0x03BD6B1C MOV X1, X27
	0x03BD6B20 MOV X3, X31
	0x03BD6B24 LDR X8, [X8]
	0x03BD6B28 MOV X0, X8
	0x03BD6B2C BL 0x3227BD4
	0x03BD6B30 CBZ X22, 0x3BD6CE4
	0x03BD6B34 MOV X1, X0
	0x03BD6B38 MOV X0, X22
	0x03BD6B3C MOV X2, X31
	0x03BD6B40 BL 0x32333E0
	0x03BD6B44 CMP X26, 0x0
	0x03BD6B48 CSEL X23, X22, X23, EQ
	0x03BD6B4C CSEL X24, X24, X22, EQ
	0x03BD6B50 CBZ X26, 0x3BD6BA0
	0x03BD6B54 LDR X0, [X19]
	0x03BD6B58 ADD X1, X31, 0x18
	0x03BD6B5C STRB W25, [X31 + 0x18]
	0x03BD6B60 BL 0x1C16E04
	0x03BD6B64 ADRP X8, 0x547000
	0x03BD6B68 LDR X2, [X26 + 0x10]
	0x03BD6B6C LDR X8, [X8 + 0x500]
	0x03BD6B70 MOV X1, X0
	0x03BD6B74 MOV X3, X31
	0x03BD6B78 LDR X8, [X8]
	0x03BD6B7C MOV X0, X8
	0x03BD6B80 BL 0x3227BD4
	0x03BD6B84 CBZ X24, 0x3BD6CE4
	0x03BD6B88 MOV X1, X0
	0x03BD6B8C MOV X0, X24
	0x03BD6B90 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x80D000
	007 Move X22, 0x588000
	008 Move X20, 0x51E000
	009 Move W8, [X21+3710]
	010 Move X22, [X22+3200]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x588000
	018 Move X0, [X0+3200]
	019 Call 0x1C17CF4
	020 Move X0, 0x588000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0x51E000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3710], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call BaseAffordanceStateReceiver`1<float4>.Awake, X0
	031 Move X0, [X20]
	032 Move X20, [X19+176]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {51}
	045 Move X8, 0x588000
	046 Move X8, [X8+3104]
	047 Move X0, X19
	048 Move X1, [X8]
	049 Call 0x21A4894, X0
	050 Move [X19+176], X0
	051 Move X0, [X19+184]
	052 Move X1, X31
	053 Call Shader.PropertyToID, X0
	054 Move [X19+192], W0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 

Method: System.Void OnAffordanceValueUpdated(Unity.Mathematics.float4 newValue)

Disassembly:
	0x03BD6B94 BL 0x32338A8
	0x03BD6B98 ADD W29, W29, 0x1
	0x03BD6B9C B 0x3BD6BBC
	0x03BD6BA0 CBZ X23, 0x3BD6CE4
	0x03BD6BA4 ADRP X8, 0x547000
	0x03BD6BA8 LDR X8, [X8 + 0x4F8]
	0x03BD6BAC MOV X0, X23
	0x03BD6BB0 MOV X2, X31
	0x03BD6BB4 LDR X1, [X8]
	0x03BD6BB8 BL 0x32338A8
	0x03BD6BBC ADD W25, W25, 0x1
	0x03BD6BC0 B 0x3BD6A84
	0x03BD6BC4 LDR W8, [X0 + 0xE0]
	0x03BD6BC8 CBNZ W8, 0x3BD6BD0
	0x03BD6BCC BL 0x1C16DFC
	0x03BD6BD0 LDRB W8, [X28 + 0x138]
	0x03BD6BD4 CBNZ W8, 0x3BD6BEC
	0x03BD6BD8 ADRP X0, 0x547000
	0x03BD6BDC LDR X0, [X0 + 0x4F0]
	0x03BD6BE0 BL 0x1C16CF4
	0x03BD6BE4 MOVZ W8, 0x1
	0x03BD6BE8 STRB W8, [X28 + 0x138]
	0x03BD6BEC LDR X0, [X20]
	0x03BD6BF0 LDR W8, [X0 + 0xE0]
	0x03BD6BF4 CBNZ W8, 0x3BD6C00
	0x03BD6BF8 BL 0x1C16DFC
	0x03BD6BFC LDR X0, [X20]
	0x03BD6C00 LDR X8, [X0 + 0xB8]
	0x03BD6C04 LDR X0, [X19]
	0x03BD6C08 ADD X1, X31, 0x14
	0x03BD6C0C LDRB W8, [X8 + 0x18]
	0x03BD6C10 STRB W8, [X31 + 0x14]
	0x03BD6C14 BL 0x1C16E04
	0x03BD6C18 ADRP X8, 0x51D000
	0x03BD6C1C LDR X8, [X8 + 0x758]
	0x03BD6C20 MOV X20, X0
	0x03BD6C24 ADD X1, X31, 0x10

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0+176]
	010 Compare X8, 0
	011 JumpIfEqual {46}
	012 Move X20, [X8+48]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move X19, X0
	017 Move V11, V0
	018 Move W9, 1
	019 Move [X8+56], W9
	020 Compare X20, 0
	021 JumpIfEqual {33}
	022 Move W21, [X19+192]
	023 Move V0, V11
	024 Move V1, V10
	025 Move V2, V9
	026 Move V3, V8
	027 Move X0, X31
	028 Call float4.op_Implicit, X0
	029 Move X0, X20
	030 Move W1, W21
	031 Move X2, X31
	032 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	033 Move X0, X19
	034 Move V2, V9
	035 Move V3, V8
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Move D9, [X31+16]
	041 Move D8, [X31+24]
	042 Move V0, V11
	043 Move V1, V10
	044 Move D11, [X31+64]
	045 Move D10, [X31+72]
	046 Call 0x1C17F20

Method: Unity.Mathematics.float4 GetCurrentValueForCapture()

Disassembly:
	0x03BD6CC4 LDP X20, X19, [X31 + 0x70]
	0x03BD6CC8 LDP X22, X21, [X31 + 0x60]
	0x03BD6CCC LDP X24, X23, [X31 + 0x50]
	0x03BD6CD0 LDP X26, X25, [X31 + 0x40]
	0x03BD6CD4 LDP X28, X27, [X31 + 0x30]
	0x03BD6CD8 LDP X29, X30, [X31 + 0x20]
	0x03BD6CDC ADD X31, X31, 0x80
	0x03BD6CE0 RET
	0x03BD6CE4 BL 0x1C16F20
	0x03BD6CE8 STR X30, [X31 - 0x30]!
	0x03BD6CEC STP X22, X21, [X31 + 0x10]
	0x03BD6CF0 STP X20, X19, [X31 + 0x20]
	0x03BD6CF4 ADRP X21, 0x80C000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+176]
	005 Compare X0, 0
	006 JumpIfEqual {18}
	007 Call MaterialHelperBase.GetSharedMaterialForTarget, X0
	008 Compare X0, 0
	009 JumpIfEqual {18}
	010 Move W1, [X19+192]
	011 Move X2, X31
	012 Call Material.GetVector, X0, X1
	013 Move X0, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call float4.op_Implicit, X0
	017 Return X0
	018 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BD6CF8 ADRP X20, 0x51D000

ISIL:
No ISIL was generated
