Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractorAffordanceStateProvider

Method: UnityEngine.Object get_interactorSource()

Disassembly:
	0x03BD1840 ADRP X0, 0x58C000
	0x03BD1844 LDR X0, [X0 + 0xA68]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_interactorSource(UnityEngine.Object value)

Disassembly:
	0x03BD1848 BL 0x1C16CF4
	0x03BD184C ADRP X0, 0x589000
	0x03BD1850 LDR X0, [X0 + 0x188]
	0x03BD1854 BL 0x1C16CF4
	0x03BD1858 ADRP X0, 0x589000
	0x03BD185C LDR X0, [X0 + 0x190]
	0x03BD1860 BL 0x1C16CF4
	0x03BD1864 ADRP X0, 0x525000
	0x03BD1868 LDR X0, [X0 + 0x408]
	0x03BD186C BL 0x1C16CF4
	0x03BD1870 ADRP X0, 0x589000
	0x03BD1874 LDR X0, [X0 + 0x198]
	0x03BD1878 BL 0x1C16CF4
	0x03BD187C ADRP X0, 0x58C000
	0x03BD1880 LDR X0, [X0 + 0xA80]
	0x03BD1884 BL 0x1C16CF4
	0x03BD1888 ADRP X0, 0x589000
	0x03BD188C LDR X0, [X0 + 0x1F0]
	0x03BD1890 BL 0x1C16CF4
	0x03BD1894 ADRP X0, 0x589000
	0x03BD1898 LDR X0, [X0 + 0x1F8]
	0x03BD189C BL 0x1C16CF4
	0x03BD18A0 ADRP X0, 0x589000
	0x03BD18A4 LDR X0, [X0 + 0x200]
	0x03BD18A8 BL 0x1C16CF4
	0x03BD18AC ADRP X0, 0x58C000
	0x03BD18B0 LDR X0, [X0 + 0xAB0]
	0x03BD18B4 BL 0x1C16CF4
	0x03BD18B8 ADRP X0, 0x58C000
	0x03BD18BC LDR X0, [X0 + 0xAB8]
	0x03BD18C0 BL 0x1C16CF4
	0x03BD18C4 ADRP X0, 0x589000
	0x03BD18C8 LDR X0, [X0 + 0x208]
	0x03BD18CC BL 0x1C16CF4
	0x03BD18D0 ADRP X0, 0x58C000
	0x03BD18D4 LDR X0, [X0 + 0xB18]
	0x03BD18D8 BL 0x1C16CF4
	0x03BD18DC ADRP X0, 0x58C000
	0x03BD18E0 LDR X0, [X0 + 0xB20]
	0x03BD18E4 BL 0x1C16CF4
	0x03BD18E8 MOVZ W8, 0x1
	0x03BD18EC STRB W8, [X20 + 0xE56]
	0x03BD18F0 STP X31, X31, [X31 + 0x20]
	0x03BD18F4 STR X31, [X31 + 0x30]
	0x03BD18F8 LDR X0, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x812000
	007 Move X21, 0x523000
	008 Move W8, [X22+3664]
	009 Move X21, [X21+2416]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x523000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x58A000
	020 Move X0, [X0+760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3664], W8
	024 Move [X19+96], X20
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call Application.get_isPlaying
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {55}
	036 Move X0, X19
	037 Move X1, X31
	038 Call Behaviour.get_isActiveAndEnabled, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {55}
	043 Move X8, 0x58A000
	044 Move X8, [X8+760]
	045 Move X0, X20
	046 Move X1, [X8]
	047 Call 0x1C17E00
	048 Move X1, X0
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 

Method: System.Boolean get_ignoreHoverEvents()

Disassembly:
	0x03BD1AFC LDR X8, [X20]
	0x03BD1B00 LDR X1, [X22]

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_ignoreHoverEvents(System.Boolean value)

Disassembly:
	0x03BD1B04 LDRH W9, [X8 + 0x12E]
	0x03BD1B08 CBZ X9, 0x3BD1B2C
	0x03BD1B0C LDR X10, [X8 + 0xB0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.Boolean get_ignoreSelectEvents()

Disassembly:
	0x03BD1B10 ADD X10, X10, 0x8
	0x03BD1B14 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move W0, [X0+105]
	002 Return X0

Method: System.Void set_ignoreSelectEvents(System.Boolean value)

Disassembly:
	0x03BD1B18 CMP X11, X1
	0x03BD1B1C B.EQ 0x3BD1B3C
	0x03BD1B20 SUBS X9, X9, 0x1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+105], W8
	003 Return 

Method: System.Boolean get_ignoreActivateEvents()

Disassembly:
	0x03BD1B24 ADD X10, X10, 0x10
	0x03BD1B28 B.NE 0x3BD1B14

ISIL:
	001 Move W0, [X0+106]
	002 Return X0

Method: System.Void set_ignoreActivateEvents(System.Boolean value)

Disassembly:
	0x03BD1B2C MOVZ W2, 0x1
	0x03BD1B30 MOV X0, X20
	0x03BD1B34 BL 0x1C5C788

ISIL:
	001 And W8, W1, 1
	002 Move [X0+106], W8
	003 Return 

Method: System.Boolean get_ignoreUGUIHover()

Disassembly:
	0x03BD1B38 B 0x3BD1B4C
	0x03BD1B3C LDR W9, [X10]

ISIL:
	001 Move W0, [X0+107]
	002 Return X0

Method: System.Void set_ignoreUGUIHover(System.Boolean value)

Disassembly:
	0x03BD1B40 ADD W9, W9, 0x1
	0x03BD1B44 ADD X8, X8, W9, 0x4, SXTW
	0x03BD1B48 ADD X0, X8, 0x138

ISIL:
	001 And W8, W1, 1
	002 Move [X0+107], W8
	003 Return 

Method: System.Boolean get_ignoreUGUISelect()

Disassembly:
	0x03BD1B4C LDP X8, X1, [X0]
	0x03BD1B50 MOV X0, X20

ISIL:
	001 Move W0, [X0+108]
	002 Return X0

Method: System.Void set_ignoreUGUISelect(System.Boolean value)

Disassembly:
	0x03BD1B54 BLR X8
	0x03BD1B58 ADRP X8, 0x589000
	0x03BD1B5C LDR X8, [X8 + 0x198]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+108], W8
	003 Return 

Method: System.Boolean get_ignoreXRInteractionEvents()

Disassembly:
	0x03BD1B60 MOV X20, X0
	0x03BD1B64 LDR X8, [X8]

ISIL:
	001 Move W0, [X0+109]
	002 Return X0

Method: System.Void set_ignoreXRInteractionEvents(System.Boolean value)

Disassembly:
	0x03BD1B68 MOV X0, X8
	0x03BD1B6C BL 0x1C16F10
	0x03BD1B70 LDR X8, [X19]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+109], W8
	003 Return 

Method: System.Boolean get_hasXRHover()

Disassembly:
	0x03BD1B74 MOV X1, X19
	0x03BD1B78 MOV X3, X31
	0x03BD1B7C MOV X21, X0
	0x03BD1B80 LDR X2, [X8 + 0x290]
	0x03BD1B84 BL 0x2725C6C
	0x03BD1B88 CBZ X20, 0x3BD1F24
	0x03BD1B8C ADRP X8, 0x589000
	0x03BD1B90 LDR X8, [X8 + 0x208]
	0x03BD1B94 MOV X0, X20
	0x03BD1B98 MOV X1, X21
	0x03BD1B9C LDR X2, [X8]
	0x03BD1BA0 BL 0x2729BA4
	0x03BD1BA4 LDRB W8, [X19 + 0xB3]
	0x03BD1BA8 CBZ W8, 0x3BD1D10
	0x03BD1BAC LDR X20, [X19 + 0x98]
	0x03BD1BB0 CBZ X20, 0x3BD1F24
	0x03BD1BB4 ADRP X22, 0x589000
	0x03BD1BB8 LDR X8, [X20]
	0x03BD1BBC LDR X22, [X22 + 0x328]
	0x03BD1BC0 LDRH W9, [X8 + 0x12E]
	0x03BD1BC4 LDR X1, [X22]
	0x03BD1BC8 CBZ X9, 0x3BD1BEC
	0x03BD1BCC LDR X10, [X8 + 0xB0]
	0x03BD1BD0 ADD X10, X10, 0x8
	0x03BD1BD4 LDUR X11, [X10 - 0x8]
	0x03BD1BD8 CMP X11, X1
	0x03BD1BDC B.EQ 0x3BD1BFC
	0x03BD1BE0 SUBS X9, X9, 0x1
	0x03BD1BE4 ADD X10, X10, 0x10
	0x03BD1BE8 B.NE 0x3BD1BD4
	0x03BD1BEC MOV X0, X20
	0x03BD1BF0 MOV W2, W31
	0x03BD1BF4 BL 0x1C5C788
	0x03BD1BF8 B 0x3BD1C08
	0x03BD1BFC LDRSW X9, [X10]
	0x03BD1C00 ADD X8, X8, X9, 0x4, LSL
	0x03BD1C04 ADD X0, X8, 0x138
	0x03BD1C08 LDP X8, X1, [X0]
	0x03BD1C0C MOV X0, X20
	0x03BD1C10 BLR X8
	0x03BD1C14 ADRP X8, 0x589000
	0x03BD1C18 LDR X8, [X8 + 0x188]
	0x03BD1C1C MOV X20, X0
	0x03BD1C20 LDR X8, [X8]
	0x03BD1C24 MOV X0, X8
	0x03BD1C28 BL 0x1C16F10
	0x03BD1C2C LDR X8, [X19]
	0x03BD1C30 MOV X1, X19
	0x03BD1C34 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x812000
	005 Move W8, [X20+3665]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x58A000
	012 Move X0, [X0+800]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3665], W8
	016 Move W8, [X19+109]
	017 Compare W8, 0
	018 JumpIfEqual {24}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move W0, W31
	022 Move X30, [X31+32]
	023 Return X0
	024 Move W8, [X19+178]
	025 Compare W8, 0
	026 JumpIfEqual {19}
	027 Move X19, [X19+144]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x58A000
	031 Move X8, [X19]
	032 Move X10, [X10+800]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 3
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 3
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Boolean get_hasUIHover()

Disassembly:
	0x03BD1C38 MOV X21, X0
	0x03BD1C3C LDR X2, [X8 + 0x2A0]
	0x03BD1C40 BL 0x2725C6C
	0x03BD1C44 CBZ X20, 0x3BD1F24
	0x03BD1C48 ADRP X8, 0x589000
	0x03BD1C4C LDR X8, [X8 + 0x1F0]
	0x03BD1C50 MOV X0, X20
	0x03BD1C54 MOV X1, X21

ISIL:
	001 Move W8, [X0+107]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move W8, [X0+216]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Boolean get_hasXRSelection()

Disassembly:
	0x03BD1C58 LDR X2, [X8]
	0x03BD1C5C BL 0x2729BA4
	0x03BD1C60 LDR X20, [X19 + 0x98]
	0x03BD1C64 CBZ X20, 0x3BD1F24
	0x03BD1C68 LDR X8, [X20]
	0x03BD1C6C LDR X1, [X22]
	0x03BD1C70 LDRH W9, [X8 + 0x12E]
	0x03BD1C74 CBZ X9, 0x3BD1C98
	0x03BD1C78 LDR X10, [X8 + 0xB0]
	0x03BD1C7C ADD X10, X10, 0x8
	0x03BD1C80 LDUR X11, [X10 - 0x8]
	0x03BD1C84 CMP X11, X1
	0x03BD1C88 B.EQ 0x3BD1CA8
	0x03BD1C8C SUBS X9, X9, 0x1
	0x03BD1C90 ADD X10, X10, 0x10
	0x03BD1C94 B.NE 0x3BD1C80
	0x03BD1C98 MOVZ W2, 0x1
	0x03BD1C9C MOV X0, X20
	0x03BD1CA0 BL 0x1C5C788
	0x03BD1CA4 B 0x3BD1CB8
	0x03BD1CA8 LDR W9, [X10]
	0x03BD1CAC ADD W9, W9, 0x1
	0x03BD1CB0 ADD X8, X8, W9, 0x4, SXTW
	0x03BD1CB4 ADD X0, X8, 0x138
	0x03BD1CB8 LDP X8, X1, [X0]
	0x03BD1CBC MOV X0, X20
	0x03BD1CC0 BLR X8
	0x03BD1CC4 ADRP X8, 0x525000
	0x03BD1CC8 LDR X8, [X8 + 0x408]
	0x03BD1CCC MOV X20, X0
	0x03BD1CD0 LDR X8, [X8]
	0x03BD1CD4 MOV X0, X8
	0x03BD1CD8 BL 0x1C16F10
	0x03BD1CDC LDR X8, [X19]
	0x03BD1CE0 MOV X1, X19
	0x03BD1CE4 MOV X3, X31
	0x03BD1CE8 MOV X21, X0
	0x03BD1CEC LDR X2, [X8 + 0x2B0]
	0x03BD1CF0 BL 0x2725C6C
	0x03BD1CF4 CBZ X20, 0x3BD1F24
	0x03BD1CF8 ADRP X8, 0x589000
	0x03BD1CFC LDR X8, [X8 + 0x200]
	0x03BD1D00 MOV X0, X20
	0x03BD1D04 MOV X1, X21
	0x03BD1D08 LDR X2, [X8]
	0x03BD1D0C BL 0x2729BA4
	0x03BD1D10 LDR X0, [X19 + 0xD0]
	0x03BD1D14 CBZ X0, 0x3BD1F24
	0x03BD1D18 ADRP X8, 0x58C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x812000
	005 Move W8, [X20+3666]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x58A000
	012 Move X0, [X0+808]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3666], W8
	016 Move W8, [X19+109]
	017 Compare W8, 0
	018 JumpIfEqual {24}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move W0, W31
	022 Move X30, [X31+32]
	023 Return X0
	024 Move W8, [X19+179]
	025 Compare W8, 0
	026 JumpIfEqual {19}
	027 Move X19, [X19+152]
	028 Compare X19, 0
	029 JumpIfEqual {57}
	030 Move X10, 0x58A000
	031 Move X8, [X19]
	032 Move X10, [X10+808]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 4
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 4
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X2, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 CallNoReturn X2
	057 Call 0x1C17F20

Method: System.Boolean get_hasUISelection()

Disassembly:
	0x03BD1D1C LDR X8, [X8 + 0xB10]
	0x03BD1D20 ADRP X25, 0x58C000
	0x03BD1D24 ADRP X26, 0x589000
	0x03BD1D28 ADRP X28, 0x58C000
	0x03BD1D2C ADRP X29, 0x58C000
	0x03BD1D30 ADRP X23, 0x58C000
	0x03BD1D34 ADRP X24, 0x58C000
	0x03BD1D38 LDR X25, [X25 + 0xAF8]

ISIL:
	001 Move W8, [X0+108]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move W8, [X0+217]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Boolean get_isActivated()

Disassembly:
	0x03BD1D3C LDR X26, [X26 + 0xB60]
	0x03BD1D40 LDR X28, [X28 + 0xB18]
	0x03BD1D44 LDR X29, [X29 + 0xAB0]
	0x03BD1D48 LDR X23, [X23 + 0xA68]
	0x03BD1D4C LDR X24, [X24 + 0xB20]
	0x03BD1D50 LDR X1, [X8]
	0x03BD1D54 ADRP X27, 0x58C000
	0x03BD1D58 LDR X27, [X27 + 0xAB8]

ISIL:
	001 Move W8, [X0+109]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move W8, [X0+200]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Boolean get_isRegistered()

Disassembly:
	0x03BD1D5C ADD X8, X31, 0x8
	0x03BD1D60 BL 0x2DBE924

ISIL:
	001 Move W0, [X0+201]
	002 Return X0

Method: System.Boolean get_isBlockedByGroup()

Disassembly:
	0x03BD1D64 LDUR V0, [X31 + 0x8]
	0x03BD1D68 LDR X8, [X31 + 0x18]
	0x03BD1D6C STR V0, [X31 + 0x2]
	0x03BD1D70 STR X8, [X31 + 0x30]
	0x03BD1D74 LDR X1, [X25]
	0x03BD1D78 ADD X0, X31, 0x20
	0x03BD1D7C BL 0x2BC3C64
	0x03BD1D80 TBZ X0, 0x0, 0x3BD1EB4
	0x03BD1D84 LDR X20, [X31 + 0x30]
	0x03BD1D88 CBZ X20, 0x3BD1D74

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+181]
	003 Compare W8, 0
	004 JumpIfEqual {9}
	005 Move X0, [X0+136]
	006 Move X1, X31
	007 Call XRInteractorExtensions.IsBlockedByInteractionWithinGroup, X0
	008 Xor W8, W0, 1
	009 And W0, W8, 1
	010 Move X30, [X31+16]
	011 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractorAffordanceStateProvider/SelectClickAnimationMode get_selectClickAnimationMode()

Disassembly:
	0x03BD1D8C LDR X8, [X20]
	0x03BD1D90 LDR X1, [X26]

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Void set_selectClickAnimationMode(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractorAffordanceStateProvider/SelectClickAnimationMode value)

Disassembly:
	0x03BD1D94 LDRH W9, [X8 + 0x12E]
	0x03BD1D98 CBZ X9, 0x3BD1DBC

ISIL:
	001 Move [X0+112], W1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractorAffordanceStateProvider/ActivateClickAnimationMode get_activateClickAnimationMode()

Disassembly:
	0x03BD1D9C LDR X10, [X8 + 0xB0]
	0x03BD1DA0 ADD X10, X10, 0x8

ISIL:
	001 Move W0, [X0+116]
	002 Return X0

Method: System.Void set_activateClickAnimationMode(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractorAffordanceStateProvider/ActivateClickAnimationMode value)

Disassembly:
	0x03BD1DA4 LDUR X11, [X10 - 0x8]
	0x03BD1DA8 CMP X11, X1

ISIL:
	001 Move [X0+116], W1
	002 Return 

Method: System.Single get_clickAnimationDuration()

Disassembly:
	0x03BD1DAC B.EQ 0x3BD1DCC
	0x03BD1DB0 SUBS X9, X9, 0x1

ISIL:
	001 Move V0, [X0+120]
	002 Return V0

Method: System.Void set_clickAnimationDuration(System.Single value)

Disassembly:
	0x03BD1DB4 ADD X10, X10, 0x10
	0x03BD1DB8 B.NE 0x3BD1DA4

ISIL:
	001 Move [X0+120], S0
	002 Return 

Method: Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty get_clickAnimationCurve()

Disassembly:
	0x03BD1DBC MOV X0, X20
	0x03BD1DC0 MOV W2, W31

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_clickAnimationCurve(Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty value)

Disassembly:
	0x03BD1DC4 BL 0x1C5C788
	0x03BD1DC8 B 0x3BD1DD8

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: System.Void Awake()

Disassembly:
	0x03BD1DCC LDRSW X9, [X10]
	0x03BD1DD0 ADD X8, X8, X9, 0x4, LSL
	0x03BD1DD4 ADD X0, X8, 0x138
	0x03BD1DD8 LDP X8, X1, [X0]
	0x03BD1DDC MOV X0, X20
	0x03BD1DE0 BLR X8
	0x03BD1DE4 ADRP X8, 0x58C000
	0x03BD1DE8 LDR X8, [X8 + 0xA80]
	0x03BD1DEC MOV X21, X0
	0x03BD1DF0 LDR X0, [X8]
	0x03BD1DF4 BL 0x1C16F10
	0x03BD1DF8 LDR X2, [X28]
	0x03BD1DFC MOV X22, X0
	0x03BD1E00 MOV X1, X19
	0x03BD1E04 MOV X3, X31
	0x03BD1E08 BL 0x2725C6C
	0x03BD1E0C CBZ X21, 0x3BD1F1C
	0x03BD1E10 LDR X2, [X29]
	0x03BD1E14 MOV X0, X21
	0x03BD1E18 MOV X1, X22
	0x03BD1E1C BL 0x2729BA4
	0x03BD1E20 LDR X8, [X20]
	0x03BD1E24 LDR X1, [X26]
	0x03BD1E28 LDRH W9, [X8 + 0x12E]
	0x03BD1E2C CBZ X9, 0x3BD1E50
	0x03BD1E30 LDR X10, [X8 + 0xB0]
	0x03BD1E34 ADD X10, X10, 0x8
	0x03BD1E38 LDUR X11, [X10 - 0x8]
	0x03BD1E3C CMP X11, X1
	0x03BD1E40 B.EQ 0x3BD1E60
	0x03BD1E44 SUBS X9, X9, 0x1
	0x03BD1E48 ADD X10, X10, 0x10
	0x03BD1E4C B.NE 0x3BD1E38
	0x03BD1E50 MOVZ W2, 0x1
	0x03BD1E54 MOV X0, X20
	0x03BD1E58 BL 0x1C5C788
	0x03BD1E5C B 0x3BD1E70
	0x03BD1E60 LDR W9, [X10]
	0x03BD1E64 ADD W9, W9, 0x1
	0x03BD1E68 ADD X8, X8, W9, 0x4, SXTW
	0x03BD1E6C ADD X0, X8, 0x138
	0x03BD1E70 LDP X8, X1, [X0]
	0x03BD1E74 MOV X0, X20
	0x03BD1E78 BLR X8
	0x03BD1E7C MOV X20, X0
	0x03BD1E80 LDR X0, [X23]
	0x03BD1E84 BL 0x1C16F10
	0x03BD1E88 LDR X2, [X24]
	0x03BD1E8C MOV X21, X0
	0x03BD1E90 MOV X1, X19
	0x03BD1E94 MOV X3, X31
	0x03BD1E98 BL 0x2725C6C
	0x03BD1E9C CBZ X20, 0x3BD1F20
	0x03BD1EA0 LDR X2, [X27]
	0x03BD1EA4 MOV X0, X20
	0x03BD1EA8 MOV X1, X21
	0x03BD1EAC BL 0x2729BA4
	0x03BD1EB0 B 0x3BD1D74
	0x03BD1EB4 ADRP X8, 0x58C000
	0x03BD1EB8 LDR X8, [X8 + 0xAF0]
	0x03BD1EBC ADD X0, X31, 0x20
	0x03BD1EC0 LDR X1, [X8]
	0x03BD1EC4 BL 0x2BC3C60
	0x03BD1EC8 LDR X0, [X19 + 0xD0]
	0x03BD1ECC CBZ X0, 0x3BD1F24
	0x03BD1ED0 ADRP X8, 0x58C000
	0x03BD1ED4 LDR X8, [X8 + 0xB08]
	0x03BD1ED8 LDR X1, [X8]
	0x03BD1EDC BL 0x2DBE450
	0x03BD1EE0 LDR X1, [X19 + 0xE0]
	0x03BD1EE4 STRB W31, [X19 + 0xB0]
	0x03BD1EE8 CBZ X1, 0x3BD1EFC
	0x03BD1EEC MOV X0, X19
	0x03BD1EF0 MOV X2, X31
	0x03BD1EF4 BL 0x3C36968
	0x03BD1EF8 STR X31, [X19 + 0xE0]
	0x03BD1EFC LDP X20, X19, [X31 + 0x90]
	0x03BD1F00 LDP X22, X21, [X31 + 0x80]
	0x03BD1F04 LDP X24, X23, [X31 + 0x70]
	0x03BD1F08 LDP X26, X25, [X31 + 0x60]
	0x03BD1F0C LDP X28, X27, [X31 + 0x50]
	0x03BD1F10 LDP X29, X30, [X31 + 0x40]
	0x03BD1F14 ADD X31, X31, 0xA0
	0x03BD1F18 RET
	0x03BD1F1C BL 0x1C16F20
	0x03BD1F20 BL 0x1C16F20
	0x03BD1F24 BL 0x1C16F20
	0x03BD1F28 B 0x3BD1F40
	0x03BD1F2C B 0x3BD1F40
	0x03BD1F30 B 0x3BD1F40
	0x03BD1F34 B 0x3BD1F40
	0x03BD1F38 B 0x3BD1F40
	0x03BD1F3C B 0x3BD1F40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x812000
	007 Move X20, 0x523000
	008 Move W8, [X21+3667]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x58D000
	016 Move X0, [X0+2776]
	017 Call 0x1C17CF4
	018 Move X0, 0x58A000
	019 Move X0, [X0+760]
	020 Call 0x1C17CF4
	021 Move X0, 0x523000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x54D000
	025 Move X0, [X0+488]
	026 Call 0x1C17CF4
	027 Move X0, 0x58D000
	028 Move X0, [X0+2616]
	029 Call 0x1C17CF4
	030 Move X0, 0x58D000
	031 Move X0, [X0+2784]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3667], W8
	035 Move X0, [X20]
	036 Move X20, [X19+96]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {57}
	049 Move X8, 0x58A000
	050 Move X8, [X8+760]
	051 Move X0, [X19+96]
	052 Move X1, [X8]
	053 Call 0x1C17E00
	054 Move X1, X0
	055 Compare X0, 0
	056 JumpIfNotEqual {63}
	057 Move X8, 0x58D000
	058 Move X8, [X8+2776]
	059 Move X0, X19
	060 Move X1, [X8]
	061 Call 0x21A4F50, X0
	062 Move X1, X0
	063 Move X0, X19
	064 Call XRInteractorAffordanceStateProvider.SetBoundInteractionReceiver, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {75}
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Move X20, 0x58D000
	076 Move X21, 0x58D000
	077 Move X22, 0x54D000
	078 Move X20, [X20+2784]
	079 Move X21, [X21+2616]
	080 Move X22, [X22+488]
	081 Move X0, X19
	082 Move X1, X31
	083 Call Component.get_gameObject, X0
	084 Move X8, [X20]
	085 Move X1, X0
	086 Move X2, X31
	087 Move X0, X8
	088 Call String.Format, X0, X1
	089 Move X1, [X21]
	090 Move X2, X31
	091 Call String.Concat, X0, X1
	092 Move X8, [X22]
	093 Move X20, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X19
	101 Move X2, X31
	102 Call XRLoggingUtils.LogWarning, X0, X1
	103 Move X0, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move W1, W31
	109 Move X2, X31
	110 Move X30, [X31+48]
	111 Call Behaviour.set_enabled, X0, X1
	112 Return 

Method: System.Boolean SetBoundInteractionReceiver(UnityEngine.XR.Interaction.Toolkit.IXRInteractor interactor)

Disassembly:
	0x03BD18FC CBZ X0, 0x3BD1F24
	0x03BD1900 MOV X1, X31
	0x03BD1904 BL 0x3B31AF0
	0x03BD1908 LDRB W8, [X19 + 0xB0]
	0x03BD190C CBZ W8, 0x3BD1D10
	0x03BD1910 ADRP X8, 0x589000
	0x03BD1914 LDR X8, [X8 + 0xCE8]
	0x03BD1918 LDR X20, [X19 + 0x88]
	0x03BD191C LDR X0, [X8]
	0x03BD1920 BL 0x1C16F10
	0x03BD1924 LDR X8, [X19]
	0x03BD1928 MOV X1, X19
	0x03BD192C MOV X3, X31
	0x03BD1930 MOV X21, X0
	0x03BD1934 LDR X2, [X8 + 0x260]
	0x03BD1938 BL 0x2A6B948
	0x03BD193C CBZ X20, 0x3BD1F24
	0x03BD1940 ADRP X22, 0x589000
	0x03BD1944 LDR X8, [X20]
	0x03BD1948 LDR X22, [X22 + 0x2F8]
	0x03BD194C ADRP X23, 0x589000
	0x03BD1950 LDRH W9, [X8 + 0x12E]
	0x03BD1954 LDR X1, [X22]
	0x03BD1958 LDR X23, [X23 + 0xCF0]
	0x03BD195C CBZ X9, 0x3BD1980
	0x03BD1960 LDR X10, [X8 + 0xB0]
	0x03BD1964 ADD X10, X10, 0x8
	0x03BD1968 LDUR X11, [X10 - 0x8]
	0x03BD196C CMP X11, X1
	0x03BD1970 B.EQ 0x3BD1990
	0x03BD1974 SUBS X9, X9, 0x1
	0x03BD1978 ADD X10, X10, 0x10
	0x03BD197C B.NE 0x3BD1968
	0x03BD1980 MOVZ W2, 0x1
	0x03BD1984 MOV X0, X20
	0x03BD1988 BL 0x1C5C788
	0x03BD198C B 0x3BD19A0
	0x03BD1990 LDR W9, [X10]
	0x03BD1994 ADD W9, W9, 0x1
	0x03BD1998 ADD X8, X8, W9, 0x4, SXTW
	0x03BD199C ADD X0, X8, 0x138
	0x03BD19A0 LDP X8, X2, [X0]
	0x03BD19A4 MOV X0, X20
	0x03BD19A8 MOV X1, X21
	0x03BD19AC BLR X8
	0x03BD19B0 LDR X0, [X23]
	0x03BD19B4 LDR X20, [X19 + 0x88]
	0x03BD19B8 BL 0x1C16F10
	0x03BD19BC LDR X8, [X19]
	0x03BD19C0 MOV X1, X19
	0x03BD19C4 MOV X3, X31
	0x03BD19C8 MOV X21, X0
	0x03BD19CC LDR X2, [X8 + 0x270]
	0x03BD19D0 BL 0x2A6B948
	0x03BD19D4 CBZ X20, 0x3BD1F24
	0x03BD19D8 LDR X8, [X20]
	0x03BD19DC LDR X1, [X22]
	0x03BD19E0 LDRH W9, [X8 + 0x12E]
	0x03BD19E4 CBZ X9, 0x3BD1A08
	0x03BD19E8 LDR X10, [X8 + 0xB0]
	0x03BD19EC ADD X10, X10, 0x8
	0x03BD19F0 LDUR X11, [X10 - 0x8]
	0x03BD19F4 CMP X11, X1
	0x03BD19F8 B.EQ 0x3BD1A18
	0x03BD19FC SUBS X9, X9, 0x1
	0x03BD1A00 ADD X10, X10, 0x10
	0x03BD1A04 B.NE 0x3BD19F0
	0x03BD1A08 MOVZ W2, 0x3
	0x03BD1A0C MOV X0, X20
	0x03BD1A10 BL 0x1C5C788
	0x03BD1A14 B 0x3BD1A28
	0x03BD1A18 LDR W9, [X10]
	0x03BD1A1C ADD W9, W9, 0x3
	0x03BD1A20 ADD X8, X8, W9, 0x4, SXTW
	0x03BD1A24 ADD X0, X8, 0x138
	0x03BD1A28 LDP X8, X2, [X0]
	0x03BD1A2C MOV X0, X20
	0x03BD1A30 MOV X1, X21
	0x03BD1A34 BLR X8
	0x03BD1A38 LDRB W8, [X19 + 0xB2]
	0x03BD1A3C CBZ W8, 0x3BD1BA4
	0x03BD1A40 LDR X20, [X19 + 0x90]
	0x03BD1A44 CBZ X20, 0x3BD1F24
	0x03BD1A48 ADRP X22, 0x589000
	0x03BD1A4C LDR X8, [X20]
	0x03BD1A50 LDR X22, [X22 + 0x320]
	0x03BD1A54 LDRH W9, [X8 + 0x12E]
	0x03BD1A58 LDR X1, [X22]
	0x03BD1A5C CBZ X9, 0x3BD1A80
	0x03BD1A60 LDR X10, [X8 + 0xB0]
	0x03BD1A64 ADD X10, X10, 0x8
	0x03BD1A68 LDUR X11, [X10 - 0x8]
	0x03BD1A6C CMP X11, X1
	0x03BD1A70 B.EQ 0x3BD1A90
	0x03BD1A74 SUBS X9, X9, 0x1
	0x03BD1A78 ADD X10, X10, 0x10
	0x03BD1A7C B.NE 0x3BD1A68
	0x03BD1A80 MOV X0, X20
	0x03BD1A84 MOV W2, W31
	0x03BD1A88 BL 0x1C5C788
	0x03BD1A8C B 0x3BD1A9C
	0x03BD1A90 LDRSW X9, [X10]
	0x03BD1A94 ADD X8, X8, X9, 0x4, LSL
	0x03BD1A98 ADD X0, X8, 0x138
	0x03BD1A9C LDP X8, X1, [X0]
	0x03BD1AA0 MOV X0, X20
	0x03BD1AA4 BLR X8
	0x03BD1AA8 ADRP X8, 0x589000
	0x03BD1AAC LDR X8, [X8 + 0x190]
	0x03BD1AB0 MOV X20, X0
	0x03BD1AB4 LDR X8, [X8]
	0x03BD1AB8 MOV X0, X8
	0x03BD1ABC BL 0x1C16F10
	0x03BD1AC0 LDR X8, [X19]
	0x03BD1AC4 MOV X1, X19
	0x03BD1AC8 MOV X3, X31
	0x03BD1ACC MOV X21, X0
	0x03BD1AD0 LDR X2, [X8 + 0x280]
	0x03BD1AD4 BL 0x2725C6C
	0x03BD1AD8 CBZ X20, 0x3BD1F24
	0x03BD1ADC ADRP X8, 0x589000
	0x03BD1AE0 LDR X8, [X8 + 0x1F8]
	0x03BD1AE4 MOV X0, X20
	0x03BD1AE8 MOV X1, X21
	0x03BD1AEC LDR X2, [X8]
	0x03BD1AF0 BL 0x2729BA4
	0x03BD1AF4 LDR X20, [X19 + 0x90]
	0x03BD1AF8 CBZ X20, 0x3BD1F24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x812000
	006 Move W8, [X21+3668]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x58A000
	014 Move X0, [X0+800]
	015 Call 0x1C17CF4
	016 Move X0, 0x58B000
	017 Move X0, [X0+1744]
	018 Call 0x1C17CF4
	019 Move X0, 0x58A000
	020 Move X0, [X0+808]
	021 Call 0x1C17CF4
	022 Move X0, 0x523000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x58A000
	026 Move X0, [X0+1984]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3668], W8
	030 Move X8, [X19]
	031 Move X21, 0x523000
	032 Move X0, X19
	033 Move X9, [X8+456]
	034 Move X1, [X8+464]
	035 Move X21, [X21+1432]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X20, 0
	038 JumpIfEqual {101}
	039 Move X8, [X20]
	040 Move X0, [X21]
	041 Move W10, [X8+304]
	042 Move W9, [X0+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X8+200]
	045 Add X8, X8, X9
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {101}
	060 Move [X19+136], X20
	061 Move X8, 0x58A000
	062 Move X8, [X8+800]
	063 Move X0, X20
	064 Move X1, [X8]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {69}
	068 Move [X19+144], X0
	069 Move X8, 0x58A000
	070 Move X0, [X19+136]
	071 Move X8, [X8+808]
	072 Move X1, [X8]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {77}
	076 Move [X19+152], X0
	077 Move X8, 0x58B000
	078 Move X0, [X19+136]
	079 Move X8, [X8+1744]
	080 Move X1, [X8]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {85}
	084 Move [X19+160], X0
	085 Move X8, [X19+136]
	086 Compare X8, 0
	087 JumpIfEqual {100}
	088 Move X9, 0x58A000
	089 Move X9, [X9+1984]
	090 Move X10, [X8]
	091 Move X9, [X9]
	092 Move W12, [X10+304]
	093 Move W11, [X9+304]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X10, [X10+200]
	096 Add X10, X10, X11
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X19+168], X8
	100 Move W20, 1
	101 Move W20, W31
	102 NotImplemented "Instruction MOVI not yet implemented."
	103 Move [X19+136], X31
	104 Move [X19+144], V0
	105 Move [X19+152], V0
	106 Move X0, [X21]
	107 Move X21, [X19+168]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X21
	113 Move X1, X31
	114 Move X2, X31
	115 Call Object.op_Inequality, X0, X1
	116 Move X9, [X19+144]
	117 Move X10, [X19+152]
	118 And W8, W0, 1
	119 Move X11, [X19+160]
	120 Move [X19+177], W8
	121 Move X8, [X19+136]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSET not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X19+178], W9
	126 NotImplemented "Instruction CSET not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move [X19+179], W9
	129 NotImplemented "Instruction CSET not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, [X19]
	132 Move [X19+180], W9
	133 NotImplemented "Instruction CSET not yet implemented."
	134 Move [X19+181], W9
	135 Move X9, [X8+440]
	136 Move X1, [X8+448]
	137 Move X0, X19
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move W0, W20
	140 Move X20, [X31+16]
	141 Move X19, [X31+24]
	142 Move X30, [X31+32]
	143 Move X21, [X31+40]
	144 Return X0

Method: System.Void BindToProviders()

Disassembly:
	0x03BD1F40 MOV X20, X0
	0x03BD1F44 CMP W1, 0x1
	0x03BD1F48 B.NE 0x3BD1F7C
	0x03BD1F4C MOV X0, X20
	0x03BD1F50 BL 0x3EB1AD0
	0x03BD1F54 LDR X21, [X0]
	0x03BD1F58 BL 0x3EB1AE0
	0x03BD1F5C ADRP X8, 0x58C000
	0x03BD1F60 LDR X8, [X8 + 0xAF0]
	0x03BD1F64 ADD X0, X31, 0x20
	0x03BD1F68 LDR X1, [X8]
	0x03BD1F6C BL 0x2BC3C60
	0x03BD1F70 CBZ X21, 0x3BD1EC8
	0x03BD1F74 MOV X0, X21
	0x03BD1F78 BL 0x1C16F18
	0x03BD1F7C MOV X21, X31
	0x03BD1F80 B 0x3BD1F88
	0x03BD1F84 MOV X20, X0
	0x03BD1F88 ADRP X8, 0x58C000
	0x03BD1F8C LDR X8, [X8 + 0xAF0]
	0x03BD1F90 LDR X1, [X8]
	0x03BD1F94 ADD X0, X31, 0x20
	0x03BD1F98 BL 0x2BC3C60
	0x03BD1F9C CBNZ X21, 0x3BD1FA8
	0x03BD1FA0 MOV X0, X20
	0x03BD1FA4 BL 0x1D2C690
	0x03BD1FA8 MOV X0, X21
	0x03BD1FAC BL 0x1C16F18
	0x03BD1FB0 BL 0x1990590
	0x03BD1FB4 STR D8, [X31 - 0x20]!
	0x03BD1FB8 STR X30, [X31 + 0x8]
	0x03BD1FBC STP X20, X19, [X31 + 0x10]
	0x03BD1FC0 ADRP X20, 0x811000
	0x03BD1FC4 LDRB W8, [X20 + 0xE57]
	0x03BD1FC8 MOV X19, X0
	0x03BD1FCC TBNZ X8, 0x0, 0x3BD2008
	0x03BD1FD0 ADRP X0, 0x54C000
	0x03BD1FD4 LDR X0, [X0 + 0x4F0]
	0x03BD1FD8 BL 0x1C16CF4
	0x03BD1FDC ADRP X0, 0x58C000
	0x03BD1FE0 LDR X0, [X0 + 0xA60]
	0x03BD1FE4 BL 0x1C16CF4
	0x03BD1FE8 ADRP X0, 0x54C000
	0x03BD1FEC LDR X0, [X0 + 0x590]
	0x03BD1FF0 BL 0x1C16CF4
	0x03BD1FF4 ADRP X0, 0x58A000
	0x03BD1FF8 LDR X0, [X0 + 0x6D0]
	0x03BD1FFC BL 0x1C16CF4
	0x03BD2000 MOVZ W8, 0x1
	0x03BD2004 STRB W8, [X20 + 0xE57]
	0x03BD2008 LDRB W8, [X19 + 0xB0]
	0x03BD200C CBZ W8, 0x3BD211C
	0x03BD2010 LDR X8, [X19]
	0x03BD2014 MOV X0, X19
	0x03BD2018 LDR X9, [X8 + 0x218]
	0x03BD201C LDR X1, [X8 + 0x220]
	0x03BD2020 BLR X9
	0x03BD2024 TBZ X0, 0x0, 0x3BD2030
	0x03BD2028 LDRB W8, [X19 + 0x6A]
	0x03BD202C CBZ W8, 0x3BD21F4
	0x03BD2030 LDR X8, [X19]
	0x03BD2034 MOV X0, X19
	0x03BD2038 LDP X9, X1, [X8 + 0x1F8]
	0x03BD203C BLR X9
	0x03BD2040 TBNZ X0, 0x0, 0x3BD205C
	0x03BD2044 LDR X8, [X19]
	0x03BD2048 MOV X0, X19
	0x03BD204C LDR X9, [X8 + 0x208]
	0x03BD2050 LDR X1, [X8 + 0x210]
	0x03BD2054 BLR X9
	0x03BD2058 TBZ X0, 0x0, 0x3BD2064
	0x03BD205C LDRB W8, [X19 + 0x69]
	0x03BD2060 CBZ W8, 0x3BD216C
	0x03BD2064 LDR X8, [X19]
	0x03BD2068 MOV X0, X19
	0x03BD206C LDP X9, X1, [X8 + 0x1D8]
	0x03BD2070 BLR X9
	0x03BD2074 TBNZ X0, 0x0, 0x3BD208C
	0x03BD2078 LDR X8, [X19]
	0x03BD207C MOV X0, X19
	0x03BD2080 LDP X9, X1, [X8 + 0x1E8]
	0x03BD2084 BLR X9
	0x03BD2088 TBZ X0, 0x0, 0x3BD2094
	0x03BD208C LDRB W8, [X19 + 0x68]
	0x03BD2090 CBZ W8, 0x3BD224C
	0x03BD2094 LDR X8, [X19]
	0x03BD2098 MOV X0, X19
	0x03BD209C LDR X9, [X8 + 0x228]
	0x03BD20A0 LDR X1, [X8 + 0x230]
	0x03BD20A4 BLR X9
	0x03BD20A8 TBZ X0, 0x0, 0x3BD20C4
	0x03BD20AC LDR X8, [X19]
	0x03BD20B0 MOV X0, X19
	0x03BD20B4 LDR X9, [X8 + 0x238]
	0x03BD20B8 LDR X1, [X8 + 0x240]
	0x03BD20BC BLR X9
	0x03BD20C0 TBZ X0, 0x0, 0x3BD22AC
	0x03BD20C4 ADRP X19, 0x54B000
	0x03BD20C8 LDR X19, [X19 + 0x4F0]
	0x03BD20CC LDR X0, [X19]
	0x03BD20D0 LDR W8, [X0 + 0xE0]
	0x03BD20D4 CBNZ W8, 0x3BD20DC
	0x03BD20D8 BL 0x1C16DFC
	0x03BD20DC ADRP X20, 0x810000
	0x03BD20E0 LDRB W8, [X20 + 0xEAA]
	0x03BD20E4 CBNZ W8, 0x3BD20FC
	0x03BD20E8 ADRP X0, 0x54B000
	0x03BD20EC LDR X0, [X0 + 0x4F0]
	0x03BD20F0 BL 0x1C16CF4
	0x03BD20F4 MOVZ W8, 0x1
	0x03BD20F8 STRB W8, [X20 + 0xEAA]
	0x03BD20FC LDR X0, [X19]
	0x03BD2100 LDR W8, [X0 + 0xE0]
	0x03BD2104 CBNZ W8, 0x3BD2110
	0x03BD2108 BL 0x1C16DFC
	0x03BD210C LDR X0, [X19]
	0x03BD2110 LDR X8, [X0 + 0xB8]
	0x03BD2114 LDRH W8, [X8]
	0x03BD2118 B 0x3BD2300
	0x03BD211C LDR X19, [X19 + 0x28]
	0x03BD2120 CBZ X19, 0x3BD2488
	0x03BD2124 ADRP X10, 0x54B000
	0x03BD2128 LDR X8, [X19]
	0x03BD212C LDR X10, [X10 + 0x590]
	0x03BD2130 LDRH W9, [X8 + 0x12E]
	0x03BD2134 LDR X1, [X10]
	0x03BD2138 CBZ X9, 0x3BD215C
	0x03BD213C LDR X10, [X8 + 0xB0]
	0x03BD2140 ADD X10, X10, 0x8
	0x03BD2144 LDUR X11, [X10 - 0x8]
	0x03BD2148 CMP X11, X1
	0x03BD214C B.EQ 0x3BD21CC
	0x03BD2150 SUBS X9, X9, 0x1
	0x03BD2154 ADD X10, X10, 0x10
	0x03BD2158 B.NE 0x3BD2144
	0x03BD215C MOVZ W2, 0x3
	0x03BD2160 MOV X0, X19
	0x03BD2164 BL 0x1C5C788
	0x03BD2168 B 0x3BD21DC
	0x03BD216C LDRB W8, [X19 + 0xB4]
	0x03BD2170 FMOV S8, 1
	0x03BD2174 FMOV S0, 1
	0x03BD2178 CBZ W8, 0x3BD23A4
	0x03BD217C LDR X19, [X19 + 0xA0]
	0x03BD2180 CBZ X19, 0x3BD2488
	0x03BD2184 ADRP X10, 0x589000
	0x03BD2188 LDR X8, [X19]
	0x03BD218C LDR X10, [X10 + 0x6D0]
	0x03BD2190 LDRH W9, [X8 + 0x12E]
	0x03BD2194 LDR X1, [X10]
	0x03BD2198 CBZ X9, 0x3BD21BC
	0x03BD219C LDR X10, [X8 + 0xB0]
	0x03BD21A0 ADD X10, X10, 0x8
	0x03BD21A4 LDUR X11, [X10 - 0x8]
	0x03BD21A8 CMP X11, X1
	0x03BD21AC B.EQ 0x3BD2320
	0x03BD21B0 SUBS X9, X9, 0x1
	0x03BD21B4 ADD X10, X10, 0x10
	0x03BD21B8 B.NE 0x3BD21A4
	0x03BD21BC MOV X0, X19
	0x03BD21C0 MOV W2, W31
	0x03BD21C4 BL 0x1C5C788
	0x03BD21C8 B 0x3BD232C
	0x03BD21CC LDR W9, [X10]
	0x03BD21D0 ADD W9, W9, 0x3
	0x03BD21D4 ADD X8, X8, W9, 0x4, SXTW
	0x03BD21D8 ADD X0, X8, 0x138
	0x03BD21DC LDP X8, X1, [X0]
	0x03BD21E0 MOV X0, X19
	0x03BD21E4 BLR X8
	0x03BD21E8 UBFM X9, X0, 0x8, 0x3F
	0x03BD21EC AND X8, X0, 0xFFFF
	0x03BD21F0 B 0x3BD2304
	0x03BD21F4 ADRP X19, 0x54B000
	0x03BD21F8 LDR X19, [X19 + 0x4F0]
	0x03BD21FC LDR X0, [X19]
	0x03BD2200 LDR W8, [X0 + 0xE0]
	0x03BD2204 CBNZ W8, 0x3BD220C
	0x03BD2208 BL 0x1C16DFC
	0x03BD220C ADRP X20, 0x810000
	0x03BD2210 LDRB W8, [X20 + 0xEA8]
	0x03BD2214 CBNZ W8, 0x3BD222C
	0x03BD2218 ADRP X0, 0x54B000
	0x03BD221C LDR X0, [X0 + 0x4F0]
	0x03BD2220 BL 0x1C16CF4
	0x03BD2224 MOVZ W8, 0x1
	0x03BD2228 STRB W8, [X20 + 0xEA8]
	0x03BD222C LDR X0, [X19]
	0x03BD2230 LDR W8, [X0 + 0xE0]
	0x03BD2234 CBNZ W8, 0x3BD2240
	0x03BD2238 BL 0x1C16DFC
	0x03BD223C LDR X0, [X19]
	0x03BD2240 LDR X8, [X0 + 0xB8]
	0x03BD2244 LDRH W8, [X8 + 0xA]
	0x03BD2248 B 0x3BD2300
	0x03BD224C LDRB W8, [X19 + 0xB4]
	0x03BD2250 FMOV S8, W31
	0x03BD2254 FMOV S0, W31
	0x03BD2258 CBZ W8, 0x3BD2458
	0x03BD225C LDR X19, [X19 + 0xA0]
	0x03BD2260 CBZ X19, 0x3BD2488
	0x03BD2264 ADRP X10, 0x589000
	0x03BD2268 LDR X8, [X19]
	0x03BD226C LDR X10, [X10 + 0x6D0]
	0x03BD2270 LDRH W9, [X8 + 0x12E]
	0x03BD2274 LDR X1, [X10]
	0x03BD2278 CBZ X9, 0x3BD229C
	0x03BD227C LDR X10, [X8 + 0xB0]
	0x03BD2280 ADD X10, X10, 0x8
	0x03BD2284 LDUR X11, [X10 - 0x8]
	0x03BD2288 CMP X11, X1
	0x03BD228C B.EQ 0x3BD23D4
	0x03BD2290 SUBS X9, X9, 0x1
	0x03BD2294 ADD X10, X10, 0x10
	0x03BD2298 B.NE 0x3BD2284
	0x03BD229C MOV X0, X19
	0x03BD22A0 MOV W2, W31
	0x03BD22A4 BL 0x1C5C788
	0x03BD22A8 B 0x3BD23E0
	0x03BD22AC ADRP X19, 0x54B000
	0x03BD22B0 LDR X19, [X19 + 0x4F0]
	0x03BD22B4 LDR X0, [X19]
	0x03BD22B8 LDR W8, [X0 + 0xE0]
	0x03BD22BC CBNZ W8, 0x3BD22C4
	0x03BD22C0 BL 0x1C16DFC
	0x03BD22C4 ADRP X20, 0x810000
	0x03BD22C8 LDRB W8, [X20 + 0xEAB]
	0x03BD22CC CBNZ W8, 0x3BD22E4
	0x03BD22D0 ADRP X0, 0x54B000
	0x03BD22D4 LDR X0, [X0 + 0x4F0]
	0x03BD22D8 BL 0x1C16CF4
	0x03BD22DC MOVZ W8, 0x1
	0x03BD22E0 STRB W8, [X20 + 0xEAB]
	0x03BD22E4 LDR X0, [X19]
	0x03BD22E8 LDR W8, [X0 + 0xE0]
	0x03BD22EC CBNZ W8, 0x3BD22F8
	0x03BD22F0 BL 0x1C16DFC
	0x03BD22F4 LDR X0, [X19]
	0x03BD22F8 LDR X8, [X0 + 0xB8]
	0x03BD22FC LDRH W8, [X8 + 0x2]
	0x03BD2300 UBFM X9, X8, 0x8, 0x1F
	0x03BD2304 LDP X20, X19, [X31 + 0x10]
	0x03BD2308 LDR X30, [X31 + 0x8]
	0x03BD230C AND X9, X9, 0xFF
	0x03BD2310 AND X0, X8, 0xFF
	0x03BD2314 BFM X0, X9, 0x38, 0x7
	0x03BD2318 LDR V8, [X31], #0x20
	0x03BD231C RET
	0x03BD2320 LDRSW X9, [X10]
	0x03BD2324 ADD X8, X8, X9, 0x4, LSL
	0x03BD2328 ADD X0, X8, 0x138
	0x03BD232C LDP X8, X1, [X0]
	0x03BD2330 MOV X0, X19
	0x03BD2334 BLR X8
	0x03BD2338 CBZ X0, 0x3BD2488
	0x03BD233C ADRP X10, 0x58B000
	0x03BD2340 LDR X8, [X0]
	0x03BD2344 LDR X10, [X10 + 0xA60]
	0x03BD2348 MOV X19, X0
	0x03BD234C LDRH W9, [X8 + 0x12E]
	0x03BD2350 LDR X1, [X10]
	0x03BD2354 CBZ X9, 0x3BD2378
	0x03BD2358 LDR X10, [X8 + 0xB0]
	0x03BD235C ADD X10, X10, 0x8
	0x03BD2360 LDUR X11, [X10 - 0x8]
	0x03BD2364 CMP X11, X1
	0x03BD2368 B.EQ 0x3BD2388
	0x03BD236C SUBS X9, X9, 0x1
	0x03BD2370 ADD X10, X10, 0x10
	0x03BD2374 B.NE 0x3BD2360
	0x03BD2378 MOVZ W2, 0x3
	0x03BD237C MOV X0, X19
	0x03BD2380 BL 0x1C5C788
	0x03BD2384 B 0x3BD2398
	0x03BD2388 LDR W9, [X10]
	0x03BD238C ADD W9, W9, 0x3
	0x03BD2390 ADD X8, X8, W9, 0x4, SXTW
	0x03BD2394 ADD X0, X8, 0x138
	0x03BD2398 LDP X8, X1, [X0]
	0x03BD239C MOV X0, X19
	0x03BD23A0 BLR X8
	0x03BD23A4 MOVZ W8, 0x437F0000
	0x03BD23A8 FMIN S1, S0, S8
	0x03BD23AC FMOV S2, W8
	0x03BD23B0 FCMP S0, 0x0
	0x03BD23B4 FMOV S0, W31
	0x03BD23B8 FMUL S1, S1, S2
	0x03BD23BC FCSEL S0, S1, S0, PL
	0x03BD23C0 FCVTZS W8, S0
	0x03BD23C4 FCMP S0, 0x0
	0x03BD23C8 CSEL W9, W8, W8, MI
	0x03BD23CC MOVZ W8, 0x4
	0x03BD23D0 B 0x3BD2304
	0x03BD23D4 LDRSW X9, [X10]
	0x03BD23D8 ADD X8, X8, X9, 0x4, LSL
	0x03BD23DC ADD X0, X8, 0x138
	0x03BD23E0 LDP X8, X1, [X0]
	0x03BD23E4 MOV X0, X19
	0x03BD23E8 BLR X8
	0x03BD23EC CBZ X0, 0x3BD2488
	0x03BD23F0 ADRP X10, 0x58B000
	0x03BD23F4 LDR X8, [X0]
	0x03BD23F8 LDR X10, [X10 + 0xA60]
	0x03BD23FC MOV X19, X0
	0x03BD2400 LDRH W9, [X8 + 0x12E]
	0x03BD2404 LDR X1, [X10]
	0x03BD2408 CBZ X9, 0x3BD242C
	0x03BD240C LDR X10, [X8 + 0xB0]
	0x03BD2410 ADD X10, X10, 0x8
	0x03BD2414 LDUR X11, [X10 - 0x8]
	0x03BD2418 CMP X11, X1
	0x03BD241C B.EQ 0x3BD243C
	0x03BD2420 SUBS X9, X9, 0x1
	0x03BD2424 ADD X10, X10, 0x10
	0x03BD2428 B.NE 0x3BD2414
	0x03BD242C MOVZ W2, 0x3
	0x03BD2430 MOV X0, X19
	0x03BD2434 BL 0x1C5C788
	0x03BD2438 B 0x3BD244C
	0x03BD243C LDR W9, [X10]
	0x03BD2440 ADD W9, W9, 0x3
	0x03BD2444 ADD X8, X8, W9, 0x4, SXTW
	0x03BD2448 ADD X0, X8, 0x138
	0x03BD244C LDP X8, X1, [X0]
	0x03BD2450 MOV X0, X19
	0x03BD2454 BLR X8
	0x03BD2458 FMOV S1, 1
	0x03BD245C MOVZ W8, 0x437F0000
	0x03BD2460 FCMP S0, 0x0
	0x03BD2464 FMIN S0, S0, S1
	0x03BD2468 FMOV S1, W8
	0x03BD246C FMUL S0, S0, S1
	0x03BD2470 FCSEL S0, S0, S8, PL
	0x03BD2474 FCVTZS W8, S0
	0x03BD2478 FCMP S0, 0x0
	0x03BD247C CSEL W9, W8, W8, MI
	0x03BD2480 MOVZ W8, 0x2
	0x03BD2484 B 0x3BD2304
	0x03BD2488 BL 0x1C16F20
	0x03BD248C STP X30, X19, [X31 - 0x10]!
	0x03BD2490 LDR X8, [X0]
	0x03BD2494 MOVZ W9, 0x1
	0x03BD2498 STRB W9, [X0 + 0xC9]
	0x03BD249C MOV X19, X0
	0x03BD24A0 LDR X9, [X8 + 0x248]
	0x03BD24A4 LDR X1, [X8 + 0x250]
	0x03BD24A8 BLR X9
	0x03BD24AC AND X1, X0, 0xFFFF
	0x03BD24B0 MOV X0, X19
	0x03BD24B4 LDP X30, X19, [X31], #0x10
	0x03BD24B8 B 0x3BCD1F4
	0x03BD24BC STP X30, X19, [X31 - 0x10]!
	0x03BD24C0 LDR X8, [X0]
	0x03BD24C4 STRB W31, [X0 + 0xC9]
	0x03BD24C8 MOV X19, X0
	0x03BD24CC LDR X9, [X8 + 0x248]
	0x03BD24D0 LDR X1, [X8 + 0x250]
	0x03BD24D4 BLR X9
	0x03BD24D8 AND X1, X0, 0xFFFF
	0x03BD24DC MOV X0, X19
	0x03BD24E0 LDP X30, X19, [X31], #0x10
	0x03BD24E4 B 0x3BCD1F4
	0x03BD24E8 STP X30, X27, [X31 - 0x50]!
	0x03BD24EC STP X26, X25, [X31 + 0x10]
	0x03BD24F0 STP X24, X23, [X31 + 0x20]
	0x03BD24F4 STP X22, X21, [X31 + 0x30]
	0x03BD24F8 STP X20, X19, [X31 + 0x40]
	0x03BD24FC ADRP X21, 0x810000
	0x03BD2500 LDRB W8, [X21 + 0xE58]
	0x03BD2504 MOV X20, X1
	0x03BD2508 MOV X19, X0
	0x03BD250C TBNZ X8, 0x0, 0x3BD259C
	0x03BD2510 ADRP X0, 0x58B000
	0x03BD2514 LDR X0, [X0 + 0xB28]
	0x03BD2518 BL 0x1C16CF4
	0x03BD251C ADRP X0, 0x58B000
	0x03BD2520 LDR X0, [X0 + 0xB30]
	0x03BD2524 BL 0x1C16CF4
	0x03BD2528 ADRP X0, 0x588000
	0x03BD252C LDR X0, [X0 + 0xB60]
	0x03BD2530 BL 0x1C16CF4
	0x03BD2534 ADRP X0, 0x58B000
	0x03BD2538 LDR X0, [X0 + 0xA68]
	0x03BD253C BL 0x1C16CF4
	0x03BD2540 ADRP X0, 0x58B000
	0x03BD2544 LDR X0, [X0 + 0xA80]
	0x03BD2548 BL 0x1C16CF4
	0x03BD254C ADRP X0, 0x58B000
	0x03BD2550 LDR X0, [X0 + 0xA90]
	0x03BD2554 BL 0x1C16CF4
	0x03BD2558 ADRP X0, 0x58B000
	0x03BD255C LDR X0, [X0 + 0xAA0]
	0x03BD2560 BL 0x1C16CF4
	0x03BD2564 ADRP X0, 0x58B000
	0x03BD2568 LDR X0, [X0 + 0xAB0]
	0x03BD256C BL 0x1C16CF4
	0x03BD2570 ADRP X0, 0x58B000
	0x03BD2574 LDR X0, [X0 + 0xAB8]
	0x03BD2578 BL 0x1C16CF4
	0x03BD257C ADRP X0, 0x58B000
	0x03BD2580 LDR X0, [X0 + 0xB18]
	0x03BD2584 BL 0x1C16CF4
	0x03BD2588 ADRP X0, 0x58B000
	0x03BD258C LDR X0, [X0 + 0xB20]
	0x03BD2590 BL 0x1C16CF4
	0x03BD2594 MOVZ W8, 0x1
	0x03BD2598 STRB W8, [X21 + 0xE58]
	0x03BD259C LDRB W8, [X19 + 0x6A]
	0x03BD25A0 CBZ W8, 0x3BD25D8
	0x03BD25A4 LDR X8, [X19]
	0x03BD25A8 MOV X0, X19
	0x03BD25AC LDR X9, [X8 + 0x248]
	0x03BD25B0 LDR X1, [X8 + 0x250]
	0x03BD25B4 BLR X9
	0x03BD25B8 AND X1, X0, 0xFFFF
	0x03BD25BC MOV X0, X19
	0x03BD25C0 LDP X20, X19, [X31 + 0x40]
	0x03BD25C4 LDP X22, X21, [X31 + 0x30]
	0x03BD25C8 LDP X24, X23, [X31 + 0x20]
	0x03BD25CC LDP X26, X25, [X31 + 0x10]
	0x03BD25D0 LDP X30, X27, [X31], #0x50
	0x03BD25D4 B 0x3BCD1F4
	0x03BD25D8 CBZ X20, 0x3BD28C8
	0x03BD25DC MOV X0, X20
	0x03BD25E0 MOV X1, X31
	0x03BD25E4 BL 0x3B66278
	0x03BD25E8 ADRP X23, 0x588000
	0x03BD25EC LDR X23, [X23 + 0xB60]
	0x03BD25F0 LDR X1, [X23]
	0x03BD25F4 BL 0x1C16E00
	0x03BD25F8 CBZ X0, 0x3BD25A4
	0x03BD25FC MOV X20, X0
	0x03BD2600 LDR X0, [X19 + 0xD0]
	0x03BD2604 CBZ X0, 0x3BD28C8
	0x03BD2608 ADRP X8, 0x58B000
	0x03BD260C LDR X8, [X8 + 0xB30]
	0x03BD2610 MOV X1, X20
	0x03BD2614 LDR X2, [X8]
	0x03BD2618 BL 0x2DBE4B0
	0x03BD261C TBNZ X0, 0x0, 0x3BD25A4
	0x03BD2620 LDR X0, [X19 + 0xD0]
	0x03BD2624 CBZ X0, 0x3BD28C8
	0x03BD2628 ADRP X8, 0x58B000
	0x03BD262C LDR X8, [X8 + 0xB28]
	0x03BD2630 MOV X1, X20
	0x03BD2634 LDR X2, [X8]
	0x03BD2638 BL 0x2DBEF30
	0x03BD263C LDR X8, [X20]
	0x03BD2640 LDR X1, [X23]
	0x03BD2644 LDRH W9, [X8 + 0x12E]
	0x03BD2648 CBZ X9, 0x3BD266C
	0x03BD264C LDR X10, [X8 + 0xB0]
	0x03BD2650 ADD X10, X10, 0x8
	0x03BD2654 LDUR X11, [X10 - 0x8]
	0x03BD2658 CMP X11, X1
	0x03BD265C B.EQ 0x3BD267C
	0x03BD2660 SUBS X9, X9, 0x1
	0x03BD2664 ADD X10, X10, 0x10
	0x03BD2668 B.NE 0x3BD2654
	0x03BD266C MOV X0, X20
	0x03BD2670 MOV W2, W31
	0x03BD2674 BL 0x1C5C788
	0x03BD2678 B 0x3BD2688
	0x03BD267C LDRSW X9, [X10]
	0x03BD2680 ADD X8, X8, X9, 0x4, LSL
	0x03BD2684 ADD X0, X8, 0x138
	0x03BD2688 LDP X8, X1, [X0]
	0x03BD268C MOV X0, X20
	0x03BD2690 BLR X8
	0x03BD2694 ADRP X24, 0x58B000
	0x03BD2698 LDR X24, [X24 + 0xA80]
	0x03BD269C MOV X21, X0
	0x03BD26A0 LDR X8, [X24]
	0x03BD26A4 MOV X0, X8
	0x03BD26A8 BL 0x1C16F10
	0x03BD26AC ADRP X25, 0x58B000
	0x03BD26B0 LDR X25, [X25 + 0xB18]
	0x03BD26B4 MOV X1, X19
	0x03BD26B8 MOV X3, X31
	0x03BD26BC MOV X22, X0
	0x03BD26C0 LDR X2, [X25]
	0x03BD26C4 BL 0x2725C6C
	0x03BD26C8 CBZ X21, 0x3BD28C8
	0x03BD26CC ADRP X8, 0x58B000
	0x03BD26D0 LDR X8, [X8 + 0xAB0]
	0x03BD26D4 MOV X0, X21
	0x03BD26D8 MOV X1, X22
	0x03BD26DC LDR X2, [X8]
	0x03BD26E0 BL 0x2729BA4
	0x03BD26E4 LDR X8, [X20]
	0x03BD26E8 LDR X1, [X23]
	0x03BD26EC LDRH W9, [X8 + 0x12E]
	0x03BD26F0 CBZ X9, 0x3BD2714
	0x03BD26F4 LDR X10, [X8 + 0xB0]
	0x03BD26F8 ADD X10, X10, 0x8
	0x03BD26FC LDUR X11, [X10 - 0x8]
	0x03BD2700 CMP X11, X1
	0x03BD2704 B.EQ 0x3BD2724

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x812000
	008 Move W8, [X20+3669]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {73}
	014 Move X0, 0x525000
	015 Move X0, [X0+1456]
	016 Call 0x1C17CF4
	017 Move X0, 0x58A000
	018 Move X0, [X0+3312]
	019 Call 0x1C17CF4
	020 Move X0, 0x58A000
	021 Move X0, [X0+3304]
	022 Call 0x1C17CF4
	023 Move X0, 0x54A000
	024 Move X0, [X0+1760]
	025 Call 0x1C17CF4
	026 Move X0, 0x58D000
	027 Move X0, [X0+2656]
	028 Call 0x1C17CF4
	029 Move X0, 0x58A000
	030 Move X0, [X0+800]
	031 Call 0x1C17CF4
	032 Move X0, 0x58B000
	033 Move X0, [X0+1744]
	034 Call 0x1C17CF4
	035 Move X0, 0x58A000
	036 Move X0, [X0+760]
	037 Call 0x1C17CF4
	038 Move X0, 0x58A000
	039 Move X0, [X0+808]
	040 Call 0x1C17CF4
	041 Move X0, 0x523000
	042 Move X0, [X0+1432]
	043 Call 0x1C17CF4
	044 Move X0, 0x58A000
	045 Move X0, [X0+392]
	046 Call 0x1C17CF4
	047 Move X0, 0x58A000
	048 Move X0, [X0+400]
	049 Call 0x1C17CF4
	050 Move X0, 0x526000
	051 Move X0, [X0+1032]
	052 Call 0x1C17CF4
	053 Move X0, 0x58A000
	054 Move X0, [X0+408]
	055 Call 0x1C17CF4
	056 Move X0, 0x589000
	057 Move X0, [X0+416]
	058 Call 0x1C17CF4
	059 Move X0, 0x589000
	060 Move X0, [X0+424]
	061 Call 0x1C17CF4
	062 Move X0, 0x589000
	063 Move X0, [X0+432]
	064 Call 0x1C17CF4
	065 Move X0, 0x525000
	066 Move X0, [X0+1040]
	067 Call 0x1C17CF4
	068 Move X0, 0x589000
	069 Move X0, [X0+872]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+3669], W8
	073 Move X0, X19
	074 Call BaseAffordanceStateProvider.BindToProviders, X0
	075 Move X20, [X19+136]
	076 Compare X20, 0
	077 JumpIfEqual {89}
	078 Move X22, 0x522000
	079 Move X22, [X22+1432]
	080 Move X8, [X20]
	081 Move X0, [X22]
	082 Move W10, [X8+304]
	083 Move W9, [X0+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X8+200]
	086 Add X8, X8, X9
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X19+176], W31
	090 Move X8, [X19]
	091 Move X0, X19
	092 Move X9, [X8+584]
	093 Move X1, [X8+592]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 And X1, X0, 0xFFFF
	096 Move X0, X19
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	104 Return 
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X20
	110 Move X1, X31
	111 Move X2, X31
	112 Call Object.op_Inequality, X0, X1
	113 And W8, W0, 1
	114 Move [X19+176], W8
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {90}
	119 Move X8, 0x589000
	120 Move X20, [X19+136]
	121 Move X8, [X8+3304]
	122 Move X0, [X8]
	123 Call 0x1C17F10
	124 Move X8, [X19]
	125 Move X1, X19
	126 Move X3, X31
	127 Move X21, X0
	128 Move X2, [X8+608]
	129 Call Action`1<Object>..ctor, X0, X1, X2
	130 Compare X20, 0
	131 JumpIfEqual {518}
	132 Move X23, 0x589000
	133 Move X8, [X20]
	134 Move X23, [X23+760]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X23]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X20
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X2, [X0+8]
	153 Move X0, X20
	154 Move X1, X21
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, 0x589000
	157 Move X20, [X19+136]
	158 Move X8, [X8+3312]
	159 Move X0, [X8]
	160 Call 0x1C17F10
	161 Move X8, [X19]
	162 Move X1, X19
	163 Move X3, X31
	164 Move X21, X0
	165 Move X2, [X8+624]
	166 Call Action`1<Object>..ctor, X0, X1, X2
	167 Compare X20, 0
	168 JumpIfEqual {518}
	169 Move X8, [X20]
	170 Move X1, [X23]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move W2, 2
	181 Move X0, X20
	182 Call 0x1C5D788
	183 Move W9, [X10]
	184 Add W9, W9, 2
	185 Add X8, X8, W9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X2, [X0+8]
	189 Move X0, X20
	190 Move X1, X21
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move W8, [X19+178]
	193 Compare W8, 0
	194 JumpIfEqual {286}
	195 Move X20, [X19+144]
	196 Compare X20, 0
	197 JumpIfEqual {518}
	198 Move X23, 0x589000
	199 Move X8, [X20]
	200 Move X23, [X23+800]
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Move X1, [X23]
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move X0, X20
	212 Move W2, W31
	213 Call 0x1C5D788
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Add X8, X8, X9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X20
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move X8, 0x589000
	222 Move X8, [X8+400]
	223 Move X20, X0
	224 Move X8, [X8]
	225 Move X0, X8
	226 Call 0x1C17F10
	227 Move X8, [X19]
	228 Move X1, X19
	229 Move X3, X31
	230 Move X21, X0
	231 Move X2, [X8+640]
	232 Call UnityAction`1<Object>..ctor, X0, X1, X2
	233 Compare X20, 0
	234 JumpIfEqual {518}
	235 Move X8, 0x589000
	236 Move X8, [X8+424]
	237 Move X0, X20
	238 Move X1, X21
	239 Move X2, [X8]
	240 Call UnityEvent`1<Object>.AddListener, X0, X1
	241 Move X20, [X19+144]
	242 Compare X20, 0
	243 JumpIfEqual {518}
	244 Move X8, [X20]
	245 Move X1, [X23]
	246 NotImplemented "Instruction LDRH not yet implemented."
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move W2, 1
	256 Move X0, X20
	257 Call 0x1C5D788
	258 Move W9, [X10]
	259 Add W9, W9, 1
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X20
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Move X8, 0x589000
	267 Move X8, [X8+408]
	268 Move X20, X0
	269 Move X8, [X8]
	270 Move X0, X8
	271 Call 0x1C17F10
	272 Move X8, [X19]
	273 Move X1, X19
	274 Move X3, X31
	275 Move X21, X0
	276 Move X2, [X8+656]
	277 Call UnityAction`1<Object>..ctor, X0, X1, X2
	278 Compare X20, 0
	279 JumpIfEqual {518}
	280 Move X8, 0x589000
	281 Move X8, [X8+416]
	282 Move X0, X20
	283 Move X1, X21
	284 Move X2, [X8]
	285 Call UnityEvent`1<Object>.AddListener, X0, X1
	286 Move W8, [X19+179]
	287 Compare W8, 0
	288 JumpIfEqual {380}
	289 Move X20, [X19+152]
	290 Compare X20, 0
	291 JumpIfEqual {518}
	292 Move X23, 0x589000
	293 Move X8, [X20]
	294 Move X23, [X23+808]
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 Move X1, [X23]
	297 Compare X9, 0
	298 JumpIfEqual {305}
	299 Move X10, [X8+176]
	300 Add X10, X10, 8
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Subtract X9, X9, 1
	304 Add X10, X10, 16
	305 Move X0, X20
	306 Move W2, W31
	307 Call 0x1C5D788
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Add X8, X8, X9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X1, [X0+8]
	313 Move X0, X20
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Move X8, 0x589000
	316 Move X8, [X8+392]
	317 Move X20, X0
	318 Move X8, [X8]
	319 Move X0, X8
	320 Call 0x1C17F10
	321 Move X8, [X19]
	322 Move X1, X19
	323 Move X3, X31
	324 Move X21, X0
	325 Move X2, [X8+672]
	326 Call UnityAction`1<Object>..ctor, X0, X1, X2
	327 Compare X20, 0
	328 JumpIfEqual {518}
	329 Move X8, 0x589000
	330 Move X8, [X8+432]
	331 Move X0, X20
	332 Move X1, X21
	333 Move X2, [X8]
	334 Call UnityEvent`1<Object>.AddListener, X0, X1
	335 Move X20, [X19+152]
	336 Compare X20, 0
	337 JumpIfEqual {518}
	338 Move X8, [X20]
	339 Move X1, [X23]
	340 NotImplemented "Instruction LDRH not yet implemented."
	341 Compare X9, 0
	342 JumpIfEqual {349}
	343 Move X10, [X8+176]
	344 Add X10, X10, 8
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Subtract X9, X9, 1
	348 Add X10, X10, 16
	349 Move W2, 1
	350 Move X0, X20
	351 Call 0x1C5D788
	352 Move W9, [X10]
	353 Add W9, W9, 1
	354 Add X8, X8, W9
	355 Add X0, X8, 312
	356 Move X8, [X0]
	357 Move X1, [X0+8]
	358 Move X0, X20
	359 NotImplemented "Instruction BLR not yet implemented."
	360 Move X8, 0x525000
	361 Move X8, [X8+1032]
	362 Move X20, X0
	363 Move X8, [X8]
	364 Move X0, X8
	365 Call 0x1C17F10
	366 Move X8, [X19]
	367 Move X1, X19
	368 Move X3, X31
	369 Move X21, X0
	370 Move X2, [X8+688]
	371 Call UnityAction`1<Object>..ctor, X0, X1, X2
	372 Compare X20, 0
	373 JumpIfEqual {518}
	374 Move X8, 0x525000
	375 Move X8, [X8+1040]
	376 Move X0, X20
	377 Move X1, X21
	378 Move X2, [X8]
	379 Call UnityEvent`1<Object>.AddListener, X0, X1
	380 Move W8, [X19+180]
	381 Compare W8, 0
	382 JumpIfEqual {454}
	383 Move X20, [X19+160]
	384 Compare X20, 0
	385 JumpIfEqual {518}
	386 Move X10, 0x58A000
	387 Move X8, [X20]
	388 Move X10, [X10+1744]
	389 NotImplemented "Instruction LDRH not yet implemented."
	390 Move X1, [X10]
	391 Compare X9, 0
	392 JumpIfEqual {399}
	393 Move X10, [X8+176]
	394 Add X10, X10, 8
	395 NotImplemented "Instruction LDUR not yet implemented."
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Subtract X9, X9, 1
	398 Add X10, X10, 16
	399 Move X0, X20
	400 Move W2, W31
	401 Call 0x1C5D788
	402 NotImplemented "Instruction LDRSW not yet implemented."
	403 Add X8, X8, X9
	404 Add X0, X8, 312
	405 Move X8, [X0]
	406 Move X1, [X0+8]
	407 Move X0, X20
	408 NotImplemented "Instruction BLR not yet implemented."
	409 Move X8, 0x524000
	410 Move X8, [X8+1456]
	411 Move X20, X0
	412 Move X8, [X8]
	413 Move X0, X8
	414 Call 0x1C17F10
	415 Move X8, [X19]
	416 Move X1, X19
	417 Move X3, X31
	418 Move X21, X0
	419 Move X2, [X8+704]
	420 Call Action`1<Single>..ctor, X0, X1, X2
	421 Compare X20, 0
	422 JumpIfEqual {518}
	423 Move X10, 0x58C000
	424 Move X8, [X20]
	425 Move X10, [X10+2656]
	426 NotImplemented "Instruction LDRH not yet implemented."
	427 Move X1, [X10]
	428 Compare X9, 0
	429 JumpIfEqual {436}
	430 Move X10, [X8+176]
	431 Add X10, X10, 8
	432 NotImplemented "Instruction LDUR not yet implemented."
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Subtract X9, X9, 1
	435 Add X10, X10, 16
	436 Move X0, X20
	437 Move W2, W31
	438 Call 0x1C5D788
	439 NotImplemented "Instruction LDRSW not yet implemented."
	440 Add X8, X8, X9
	441 Add X0, X8, 312
	442 Move X8, [X0]
	443 Move X2, [X0+8]
	444 Move X0, X20
	445 Move X1, X21
	446 NotImplemented "Instruction BLR not yet implemented."
	447 Move X8, [X19+72]
	448 Compare X8, 0
	449 JumpIfEqual {518}
	450 Move X1, X0
	451 Move X0, X8
	452 Move X2, X31
	453 Call BindingsGroup.AddBinding, X0, X1
	454 Move X20, [X19+136]
	455 Move [X19+200], W31
	456 Compare X20, 0
	457 JumpIfEqual {478}
	458 Move X9, 0x589000
	459 Move X9, [X9+872]
	460 Move X8, [X20]
	461 Move X10, [X9]
	462 Move W9, [X8+304]
	463 Move W11, [X10+304]
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Move X12, [X8+200]
	466 Add X11, X12, X11
	467 NotImplemented "Instruction LDUR not yet implemented."
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move X10, 0x549000
	470 Move X10, [X10+1760]
	471 Move X10, [X10]
	472 Move W11, [X10+304]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move X8, [X8+200]
	475 Add X8, X8, X11
	476 NotImplemented "Instruction LDUR not yet implemented."
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move W8, 1
	479 Move X0, [X22]
	480 Move X21, [X20+48]
	481 Move W8, [X0+224]
	482 Compare W8, 0
	483 JumpIfNotEqual {485}
	484 Call 0x1C17DFC
	485 Move X0, X21
	486 Move X1, X31
	487 Move X2, X31
	488 Call Object.op_Inequality, X0, X1
	489 Move TEMP, X0
	490 And TEMP, TEMP, 1
	491 Compare TEMP, 1
	492 JumpIfNotEqual {502}
	493 Move X0, [X20+48]
	494 Compare X0, 0
	495 JumpIfEqual {518}
	496 Move X1, [X19+136]
	497 Move X2, X31
	498 Call XRInteractionManager.IsRegistered, X0, X1
	499 Move X0, X20
	500 Move X1, X31
	501 Call Behaviour.get_isActiveAndEnabled, X0
	502 Move W0, W31
	503 And W8, W0, 1
	504 Move X1, [X19+224]
	505 Move [X19+201], W8
	506 Compare X1, 0
	507 JumpIfEqual {511}
	508 Move X0, X19
	509 Move X2, X31
	510 Call MonoBehaviour.StopCoroutine, X0, X1
	511 Move X0, X19
	512 Call XRInteractorAffordanceStateProvider.UIUpdateCheckCoroutine, X0
	513 Move X1, X0
	514 Move X0, X19
	515 Move X2, X31
	516 Call MonoBehaviour.StartCoroutine, X0, X1
	517 Move [X19+224], X0
	518 Call 0x1C17F20

Method: System.Void RefreshState()

Disassembly:
	0x03BD2768 MOV X22, X0
	0x03BD276C LDR X2, [X27]
	0x03BD2770 BL 0x2725C6C
	0x03BD2774 CBZ X21, 0x3BD28C8
	0x03BD2778 ADRP X8, 0x58B000
	0x03BD277C LDR X8, [X8 + 0xAB8]
	0x03BD2780 MOV X0, X21
	0x03BD2784 MOV X1, X22
	0x03BD2788 LDR X2, [X8]
	0x03BD278C BL 0x2729BA4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+584]
	006 Move X1, [X8+592]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 And X1, X0, 0xFFFF
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	013 Return 

Method: System.Void ClearBindings()

Disassembly:
	0x03BD2790 LDR X8, [X20]
	0x03BD2794 LDR X1, [X23]
	0x03BD2798 LDRH W9, [X8 + 0x12E]
	0x03BD279C CBZ X9, 0x3BD27C0
	0x03BD27A0 LDR X10, [X8 + 0xB0]
	0x03BD27A4 ADD X10, X10, 0x8
	0x03BD27A8 LDUR X11, [X10 - 0x8]
	0x03BD27AC CMP X11, X1
	0x03BD27B0 B.EQ 0x3BD27D0
	0x03BD27B4 SUBS X9, X9, 0x1
	0x03BD27B8 ADD X10, X10, 0x10
	0x03BD27BC B.NE 0x3BD27A8
	0x03BD27C0 MOV X0, X20
	0x03BD27C4 MOV W2, W31
	0x03BD27C8 BL 0x1C5C788
	0x03BD27CC B 0x3BD27DC
	0x03BD27D0 LDRSW X9, [X10]
	0x03BD27D4 ADD X8, X8, X9, 0x4, LSL
	0x03BD27D8 ADD X0, X8, 0x138
	0x03BD27DC LDP X8, X1, [X0]
	0x03BD27E0 MOV X0, X20
	0x03BD27E4 BLR X8
	0x03BD27E8 LDR X8, [X24]
	0x03BD27EC MOV X21, X0
	0x03BD27F0 MOV X0, X8
	0x03BD27F4 BL 0x1C16F10
	0x03BD27F8 LDR X2, [X25]
	0x03BD27FC MOV X1, X19
	0x03BD2800 MOV X3, X31
	0x03BD2804 MOV X22, X0
	0x03BD2808 BL 0x2725C6C
	0x03BD280C CBZ X21, 0x3BD28C8
	0x03BD2810 ADRP X8, 0x58B000
	0x03BD2814 LDR X8, [X8 + 0xAA0]
	0x03BD2818 MOV X0, X21
	0x03BD281C MOV X1, X22
	0x03BD2820 LDR X2, [X8]
	0x03BD2824 BL 0x2729B68
	0x03BD2828 LDR X8, [X20]
	0x03BD282C LDR X1, [X23]
	0x03BD2830 LDRH W9, [X8 + 0x12E]
	0x03BD2834 CBZ X9, 0x3BD2858
	0x03BD2838 LDR X10, [X8 + 0xB0]
	0x03BD283C ADD X10, X10, 0x8
	0x03BD2840 LDUR X11, [X10 - 0x8]
	0x03BD2844 CMP X11, X1
	0x03BD2848 B.EQ 0x3BD2868
	0x03BD284C SUBS X9, X9, 0x1
	0x03BD2850 ADD X10, X10, 0x10
	0x03BD2854 B.NE 0x3BD2840
	0x03BD2858 MOVZ W2, 0x1
	0x03BD285C MOV X0, X20
	0x03BD2860 BL 0x1C5C788
	0x03BD2864 B 0x3BD2878
	0x03BD2868 LDR W9, [X10]
	0x03BD286C ADD W9, W9, 0x1
	0x03BD2870 ADD X8, X8, W9, 0x4, SXTW
	0x03BD2874 ADD X0, X8, 0x138
	0x03BD2878 LDP X8, X1, [X0]
	0x03BD287C MOV X0, X20
	0x03BD2880 BLR X8
	0x03BD2884 LDR X8, [X26]
	0x03BD2888 MOV X20, X0
	0x03BD288C MOV X0, X8
	0x03BD2890 BL 0x1C16F10
	0x03BD2894 LDR X2, [X27]
	0x03BD2898 MOV X1, X19
	0x03BD289C MOV X3, X31
	0x03BD28A0 MOV X21, X0
	0x03BD28A4 BL 0x2725C6C
	0x03BD28A8 CBZ X20, 0x3BD28C8
	0x03BD28AC ADRP X8, 0x58B000
	0x03BD28B0 LDR X8, [X8 + 0xA90]
	0x03BD28B4 MOV X0, X20
	0x03BD28B8 MOV X1, X21
	0x03BD28BC LDR X2, [X8]
	0x03BD28C0 BL 0x2729B68
	0x03BD28C4 B 0x3BD25A4
	0x03BD28C8 BL 0x1C16F20
	0x03BD28CC STP X30, X23, [X31 - 0x30]!
	0x03BD28D0 STP X22, X21, [X31 + 0x10]
	0x03BD28D4 STP X20, X19, [X31 + 0x20]
	0x03BD28D8 ADRP X21, 0x810000
	0x03BD28DC LDRB W8, [X21 + 0xE59]
	0x03BD28E0 MOV X20, X1
	0x03BD28E4 MOV X19, X0
	0x03BD28E8 TBNZ X8, 0x0, 0x3BD2960
	0x03BD28EC ADRP X0, 0x58B000
	0x03BD28F0 LDR X0, [X0 + 0xB30]
	0x03BD28F4 BL 0x1C16CF4
	0x03BD28F8 ADRP X0, 0x58B000
	0x03BD28FC LDR X0, [X0 + 0xB38]
	0x03BD2900 BL 0x1C16CF4
	0x03BD2904 ADRP X0, 0x588000
	0x03BD2908 LDR X0, [X0 + 0xB60]
	0x03BD290C BL 0x1C16CF4
	0x03BD2910 ADRP X0, 0x58B000
	0x03BD2914 LDR X0, [X0 + 0xA68]
	0x03BD2918 BL 0x1C16CF4
	0x03BD291C ADRP X0, 0x58B000
	0x03BD2920 LDR X0, [X0 + 0xA80]
	0x03BD2924 BL 0x1C16CF4
	0x03BD2928 ADRP X0, 0x58B000
	0x03BD292C LDR X0, [X0 + 0xAB0]
	0x03BD2930 BL 0x1C16CF4
	0x03BD2934 ADRP X0, 0x58B000
	0x03BD2938 LDR X0, [X0 + 0xAB8]
	0x03BD293C BL 0x1C16CF4
	0x03BD2940 ADRP X0, 0x58B000
	0x03BD2944 LDR X0, [X0 + 0xB18]
	0x03BD2948 BL 0x1C16CF4
	0x03BD294C ADRP X0, 0x58B000
	0x03BD2950 LDR X0, [X0 + 0xB20]
	0x03BD2954 BL 0x1C16CF4
	0x03BD2958 MOVZ W8, 0x1
	0x03BD295C STRB W8, [X21 + 0xE59]
	0x03BD2960 CBZ X20, 0x3BD2B44
	0x03BD2964 ADRP X23, 0x588000
	0x03BD2968 LDR X23, [X23 + 0xB60]
	0x03BD296C MOV X0, X20
	0x03BD2970 MOV X1, X31
	0x03BD2974 BL 0x3B664F4
	0x03BD2978 LDR X1, [X23]
	0x03BD297C BL 0x1C16E00
	0x03BD2980 CBZ X0, 0x3BD2B18
	0x03BD2984 MOV X20, X0
	0x03BD2988 LDR X0, [X19 + 0xD0]
	0x03BD298C CBZ X0, 0x3BD2B44
	0x03BD2990 ADRP X8, 0x58B000
	0x03BD2994 LDR X8, [X8 + 0xB30]
	0x03BD2998 MOV X1, X20
	0x03BD299C LDR X2, [X8]
	0x03BD29A0 BL 0x2DBE4B0
	0x03BD29A4 TBZ X0, 0x0, 0x3BD2B18
	0x03BD29A8 LDR X0, [X19 + 0xD0]
	0x03BD29AC CBZ X0, 0x3BD2B44
	0x03BD29B0 ADRP X8, 0x58B000
	0x03BD29B4 LDR X8, [X8 + 0xB38]
	0x03BD29B8 MOV X1, X20
	0x03BD29BC LDR X2, [X8]
	0x03BD29C0 BL 0x2DBE67C
	0x03BD29C4 LDR X8, [X20]
	0x03BD29C8 LDR X1, [X23]
	0x03BD29CC LDRH W9, [X8 + 0x12E]
	0x03BD29D0 CBZ X9, 0x3BD29F4
	0x03BD29D4 LDR X10, [X8 + 0xB0]
	0x03BD29D8 ADD X10, X10, 0x8
	0x03BD29DC LDUR X11, [X10 - 0x8]
	0x03BD29E0 CMP X11, X1
	0x03BD29E4 B.EQ 0x3BD2A04
	0x03BD29E8 SUBS X9, X9, 0x1
	0x03BD29EC ADD X10, X10, 0x10
	0x03BD29F0 B.NE 0x3BD29DC
	0x03BD29F4 MOV X0, X20
	0x03BD29F8 MOV W2, W31
	0x03BD29FC BL 0x1C5C788
	0x03BD2A00 B 0x3BD2A10
	0x03BD2A04 LDRSW X9, [X10]
	0x03BD2A08 ADD X8, X8, X9, 0x4, LSL
	0x03BD2A0C ADD X0, X8, 0x138
	0x03BD2A10 LDP X8, X1, [X0]
	0x03BD2A14 MOV X0, X20
	0x03BD2A18 BLR X8
	0x03BD2A1C ADRP X8, 0x58B000
	0x03BD2A20 LDR X8, [X8 + 0xA80]
	0x03BD2A24 MOV X21, X0
	0x03BD2A28 LDR X8, [X8]
	0x03BD2A2C MOV X0, X8
	0x03BD2A30 BL 0x1C16F10
	0x03BD2A34 ADRP X8, 0x58B000
	0x03BD2A38 LDR X8, [X8 + 0xB18]
	0x03BD2A3C MOV X1, X19
	0x03BD2A40 MOV X3, X31
	0x03BD2A44 MOV X22, X0
	0x03BD2A48 LDR X2, [X8]
	0x03BD2A4C BL 0x2725C6C
	0x03BD2A50 CBZ X21, 0x3BD2B44
	0x03BD2A54 ADRP X8, 0x58B000
	0x03BD2A58 LDR X8, [X8 + 0xAB0]
	0x03BD2A5C MOV X0, X21
	0x03BD2A60 MOV X1, X22
	0x03BD2A64 LDR X2, [X8]
	0x03BD2A68 BL 0x2729BA4
	0x03BD2A6C LDR X8, [X20]
	0x03BD2A70 LDR X1, [X23]
	0x03BD2A74 LDRH W9, [X8 + 0x12E]
	0x03BD2A78 CBZ X9, 0x3BD2A9C
	0x03BD2A7C LDR X10, [X8 + 0xB0]
	0x03BD2A80 ADD X10, X10, 0x8
	0x03BD2A84 LDUR X11, [X10 - 0x8]
	0x03BD2A88 CMP X11, X1
	0x03BD2A8C B.EQ 0x3BD2AAC
	0x03BD2A90 SUBS X9, X9, 0x1
	0x03BD2A94 ADD X10, X10, 0x10
	0x03BD2A98 B.NE 0x3BD2A84
	0x03BD2A9C MOVZ W2, 0x1
	0x03BD2AA0 MOV X0, X20
	0x03BD2AA4 BL 0x1C5C788
	0x03BD2AA8 B 0x3BD2ABC
	0x03BD2AAC LDR W9, [X10]
	0x03BD2AB0 ADD W9, W9, 0x1
	0x03BD2AB4 ADD X8, X8, W9, 0x4, SXTW
	0x03BD2AB8 ADD X0, X8, 0x138
	0x03BD2ABC LDP X8, X1, [X0]
	0x03BD2AC0 MOV X0, X20
	0x03BD2AC4 BLR X8
	0x03BD2AC8 ADRP X8, 0x58B000
	0x03BD2ACC LDR X8, [X8 + 0xA68]
	0x03BD2AD0 MOV X20, X0
	0x03BD2AD4 LDR X8, [X8]
	0x03BD2AD8 MOV X0, X8
	0x03BD2ADC BL 0x1C16F10
	0x03BD2AE0 ADRP X8, 0x58B000
	0x03BD2AE4 LDR X8, [X8 + 0xB20]
	0x03BD2AE8 MOV X1, X19
	0x03BD2AEC MOV X3, X31
	0x03BD2AF0 MOV X21, X0
	0x03BD2AF4 LDR X2, [X8]
	0x03BD2AF8 BL 0x2725C6C
	0x03BD2AFC CBZ X20, 0x3BD2B44
	0x03BD2B00 ADRP X8, 0x58B000
	0x03BD2B04 LDR X8, [X8 + 0xAB8]
	0x03BD2B08 MOV X0, X20
	0x03BD2B0C MOV X1, X21
	0x03BD2B10 LDR X2, [X8]
	0x03BD2B14 BL 0x2729BA4
	0x03BD2B18 LDR X8, [X19]
	0x03BD2B1C MOV X0, X19
	0x03BD2B20 LDR X9, [X8 + 0x248]
	0x03BD2B24 LDR X1, [X8 + 0x250]
	0x03BD2B28 BLR X9
	0x03BD2B2C AND X1, X0, 0xFFFF
	0x03BD2B30 MOV X0, X19
	0x03BD2B34 LDP X20, X19, [X31 + 0x20]
	0x03BD2B38 LDP X22, X21, [X31 + 0x10]
	0x03BD2B3C LDP X30, X23, [X31], #0x30
	0x03BD2B40 B 0x3BCD1F4
	0x03BD2B44 BL 0x1C16F20
	0x03BD2B48 STP X30, X27, [X31 - 0x50]!
	0x03BD2B4C STP X26, X25, [X31 + 0x10]
	0x03BD2B50 STP X24, X23, [X31 + 0x20]
	0x03BD2B54 STP X22, X21, [X31 + 0x30]
	0x03BD2B58 STP X20, X19, [X31 + 0x40]
	0x03BD2B5C ADRP X21, 0x810000
	0x03BD2B60 LDRB W8, [X21 + 0xE5A]
	0x03BD2B64 MOV X20, X1
	0x03BD2B68 MOV X19, X0
	0x03BD2B6C TBNZ X8, 0x0, 0x3BD2C08
	0x03BD2B70 ADRP X0, 0x58B000
	0x03BD2B74 LDR X0, [X0 + 0xB28]
	0x03BD2B78 BL 0x1C16CF4
	0x03BD2B7C ADRP X0, 0x58B000
	0x03BD2B80 LDR X0, [X0 + 0xB30]
	0x03BD2B84 BL 0x1C16CF4
	0x03BD2B88 ADRP X0, 0x588000
	0x03BD2B8C LDR X0, [X0 + 0xB60]
	0x03BD2B90 BL 0x1C16CF4
	0x03BD2B94 ADRP X0, 0x528000
	0x03BD2B98 LDR X0, [X0 + 0x4B8]
	0x03BD2B9C BL 0x1C16CF4
	0x03BD2BA0 ADRP X0, 0x58B000
	0x03BD2BA4 LDR X0, [X0 + 0xA68]
	0x03BD2BA8 BL 0x1C16CF4
	0x03BD2BAC ADRP X0, 0x58B000
	0x03BD2BB0 LDR X0, [X0 + 0xA80]
	0x03BD2BB4 BL 0x1C16CF4
	0x03BD2BB8 ADRP X0, 0x58B000
	0x03BD2BBC LDR X0, [X0 + 0xA90]
	0x03BD2BC0 BL 0x1C16CF4
	0x03BD2BC4 ADRP X0, 0x58B000
	0x03BD2BC8 LDR X0, [X0 + 0xAA0]
	0x03BD2BCC BL 0x1C16CF4
	0x03BD2BD0 ADRP X0, 0x58B000
	0x03BD2BD4 LDR X0, [X0 + 0xAB0]
	0x03BD2BD8 BL 0x1C16CF4
	0x03BD2BDC ADRP X0, 0x58B000
	0x03BD2BE0 LDR X0, [X0 + 0xAB8]
	0x03BD2BE4 BL 0x1C16CF4
	0x03BD2BE8 ADRP X0, 0x58B000
	0x03BD2BEC LDR X0, [X0 + 0xB18]
	0x03BD2BF0 BL 0x1C16CF4
	0x03BD2BF4 ADRP X0, 0x58B000
	0x03BD2BF8 LDR X0, [X0 + 0xB20]
	0x03BD2BFC BL 0x1C16CF4
	0x03BD2C00 MOVZ W8, 0x1
	0x03BD2C04 STRB W8, [X21 + 0xE5A]
	0x03BD2C08 LDRB W8, [X19 + 0x6A]
	0x03BD2C0C CBZ W8, 0x3BD2C80
	0x03BD2C10 LDRB W8, [X19 + 0x69]
	0x03BD2C14 CBNZ W8, 0x3BD2C4C
	0x03BD2C18 LDRB W8, [X19 + 0x6D]
	0x03BD2C1C CBNZ W8, 0x3BD2C4C
	0x03BD2C20 LDR W8, [X19 + 0x70]
	0x03BD2C24 CMP W8, 0x1
	0x03BD2C28 B.NE 0x3BD2C4C
	0x03BD2C2C ADRP X8, 0x528000
	0x03BD2C30 LDR X8, [X8 + 0x4B8]
	0x03BD2C34 LDR V0, [X19 + 0x78]
	0x03BD2C38 LDR X8, [X8]
	0x03BD2C3C LDR X8, [X8 + 0xB8]
	0x03BD2C40 LDR V1, [X8]
	0x03BD2C44 FCMP S0, S1
	0x03BD2C48 B.PL 0x3BD2F70
	0x03BD2C4C LDR X8, [X19]
	0x03BD2C50 MOV X0, X19
	0x03BD2C54 LDR X9, [X8 + 0x248]
	0x03BD2C58 LDR X1, [X8 + 0x250]
	0x03BD2C5C BLR X9
	0x03BD2C60 AND X1, X0, 0xFFFF
	0x03BD2C64 MOV X0, X19
	0x03BD2C68 LDP X20, X19, [X31 + 0x40]
	0x03BD2C6C LDP X22, X21, [X31 + 0x30]
	0x03BD2C70 LDP X24, X23, [X31 + 0x20]
	0x03BD2C74 LDP X26, X25, [X31 + 0x10]
	0x03BD2C78 LDP X30, X27, [X31], #0x50
	0x03BD2C7C B 0x3BCD1F4
	0x03BD2C80 CBZ X20, 0x3BD2F98
	0x03BD2C84 MOV X0, X20
	0x03BD2C88 MOV X1, X31
	0x03BD2C8C BL 0x3B66614
	0x03BD2C90 ADRP X23, 0x588000
	0x03BD2C94 LDR X23, [X23 + 0xB60]
	0x03BD2C98 LDR X1, [X23]
	0x03BD2C9C BL 0x1C16E00
	0x03BD2CA0 CBZ X0, 0x3BD2C10
	0x03BD2CA4 MOV X20, X0
	0x03BD2CA8 LDR X0, [X19 + 0xD0]
	0x03BD2CAC CBZ X0, 0x3BD2F98
	0x03BD2CB0 ADRP X8, 0x58B000
	0x03BD2CB4 LDR X8, [X8 + 0xB30]
	0x03BD2CB8 MOV X1, X20
	0x03BD2CBC LDR X2, [X8]
	0x03BD2CC0 BL 0x2DBE4B0
	0x03BD2CC4 TBNZ X0, 0x0, 0x3BD2C10
	0x03BD2CC8 LDR X0, [X19 + 0xD0]
	0x03BD2CCC CBZ X0, 0x3BD2F98
	0x03BD2CD0 ADRP X8, 0x58B000
	0x03BD2CD4 LDR X8, [X8 + 0xB28]
	0x03BD2CD8 MOV X1, X20
	0x03BD2CDC LDR X2, [X8]
	0x03BD2CE0 BL 0x2DBEF30
	0x03BD2CE4 LDR X8, [X20]
	0x03BD2CE8 LDR X1, [X23]
	0x03BD2CEC LDRH W9, [X8 + 0x12E]
	0x03BD2CF0 CBZ X9, 0x3BD2D14
	0x03BD2CF4 LDR X10, [X8 + 0xB0]
	0x03BD2CF8 ADD X10, X10, 0x8
	0x03BD2CFC LDUR X11, [X10 - 0x8]
	0x03BD2D00 CMP X11, X1
	0x03BD2D04 B.EQ 0x3BD2D24
	0x03BD2D08 SUBS X9, X9, 0x1
	0x03BD2D0C ADD X10, X10, 0x10
	0x03BD2D10 B.NE 0x3BD2CFC
	0x03BD2D14 MOV X0, X20
	0x03BD2D18 MOV W2, W31
	0x03BD2D1C BL 0x1C5C788
	0x03BD2D20 B 0x3BD2D30
	0x03BD2D24 LDRSW X9, [X10]
	0x03BD2D28 ADD X8, X8, X9, 0x4, LSL
	0x03BD2D2C ADD X0, X8, 0x138
	0x03BD2D30 LDP X8, X1, [X0]
	0x03BD2D34 MOV X0, X20
	0x03BD2D38 BLR X8
	0x03BD2D3C ADRP X24, 0x58B000
	0x03BD2D40 LDR X24, [X24 + 0xA80]
	0x03BD2D44 MOV X21, X0
	0x03BD2D48 LDR X8, [X24]
	0x03BD2D4C MOV X0, X8
	0x03BD2D50 BL 0x1C16F10
	0x03BD2D54 ADRP X25, 0x58B000
	0x03BD2D58 LDR X25, [X25 + 0xB18]
	0x03BD2D5C MOV X1, X19
	0x03BD2D60 MOV X3, X31
	0x03BD2D64 MOV X22, X0
	0x03BD2D68 LDR X2, [X25]
	0x03BD2D6C BL 0x2725C6C
	0x03BD2D70 CBZ X21, 0x3BD2F98
	0x03BD2D74 ADRP X8, 0x58B000
	0x03BD2D78 LDR X8, [X8 + 0xAB0]
	0x03BD2D7C MOV X0, X21
	0x03BD2D80 MOV X1, X22
	0x03BD2D84 LDR X2, [X8]
	0x03BD2D88 BL 0x2729BA4
	0x03BD2D8C LDR X8, [X20]
	0x03BD2D90 LDR X1, [X23]
	0x03BD2D94 LDRH W9, [X8 + 0x12E]
	0x03BD2D98 CBZ X9, 0x3BD2DBC
	0x03BD2D9C LDR X10, [X8 + 0xB0]
	0x03BD2DA0 ADD X10, X10, 0x8
	0x03BD2DA4 LDUR X11, [X10 - 0x8]
	0x03BD2DA8 CMP X11, X1
	0x03BD2DAC B.EQ 0x3BD2DCC
	0x03BD2DB0 SUBS X9, X9, 0x1
	0x03BD2DB4 ADD X10, X10, 0x10
	0x03BD2DB8 B.NE 0x3BD2DA4
	0x03BD2DBC MOVZ W2, 0x1
	0x03BD2DC0 MOV X0, X20
	0x03BD2DC4 BL 0x1C5C788
	0x03BD2DC8 B 0x3BD2DDC
	0x03BD2DCC LDR W9, [X10]
	0x03BD2DD0 ADD W9, W9, 0x1
	0x03BD2DD4 ADD X8, X8, W9, 0x4, SXTW
	0x03BD2DD8 ADD X0, X8, 0x138
	0x03BD2DDC LDP X8, X1, [X0]
	0x03BD2DE0 MOV X0, X20
	0x03BD2DE4 BLR X8
	0x03BD2DE8 ADRP X26, 0x58B000
	0x03BD2DEC LDR X26, [X26 + 0xA68]
	0x03BD2DF0 MOV X21, X0
	0x03BD2DF4 LDR X8, [X26]
	0x03BD2DF8 MOV X0, X8
	0x03BD2DFC BL 0x1C16F10
	0x03BD2E00 ADRP X27, 0x58B000
	0x03BD2E04 LDR X27, [X27 + 0xB20]
	0x03BD2E08 MOV X1, X19
	0x03BD2E0C MOV X3, X31
	0x03BD2E10 MOV X22, X0
	0x03BD2E14 LDR X2, [X27]
	0x03BD2E18 BL 0x2725C6C
	0x03BD2E1C CBZ X21, 0x3BD2F98
	0x03BD2E20 ADRP X8, 0x58B000
	0x03BD2E24 LDR X8, [X8 + 0xAB8]
	0x03BD2E28 MOV X0, X21
	0x03BD2E2C MOV X1, X22
	0x03BD2E30 LDR X2, [X8]
	0x03BD2E34 BL 0x2729BA4
	0x03BD2E38 LDR X8, [X20]
	0x03BD2E3C LDR X1, [X23]
	0x03BD2E40 LDRH W9, [X8 + 0x12E]
	0x03BD2E44 CBZ X9, 0x3BD2E68
	0x03BD2E48 LDR X10, [X8 + 0xB0]
	0x03BD2E4C ADD X10, X10, 0x8
	0x03BD2E50 LDUR X11, [X10 - 0x8]
	0x03BD2E54 CMP X11, X1
	0x03BD2E58 B.EQ 0x3BD2E78
	0x03BD2E5C SUBS X9, X9, 0x1
	0x03BD2E60 ADD X10, X10, 0x10
	0x03BD2E64 B.NE 0x3BD2E50
	0x03BD2E68 MOV X0, X20
	0x03BD2E6C MOV W2, W31
	0x03BD2E70 BL 0x1C5C788
	0x03BD2E74 B 0x3BD2E84
	0x03BD2E78 LDRSW X9, [X10]
	0x03BD2E7C ADD X8, X8, X9, 0x4, LSL
	0x03BD2E80 ADD X0, X8, 0x138
	0x03BD2E84 LDP X8, X1, [X0]
	0x03BD2E88 MOV X0, X20
	0x03BD2E8C BLR X8
	0x03BD2E90 LDR X8, [X24]
	0x03BD2E94 MOV X21, X0
	0x03BD2E98 MOV X0, X8
	0x03BD2E9C BL 0x1C16F10
	0x03BD2EA0 LDR X2, [X25]
	0x03BD2EA4 MOV X1, X19
	0x03BD2EA8 MOV X3, X31
	0x03BD2EAC MOV X22, X0
	0x03BD2EB0 BL 0x2725C6C
	0x03BD2EB4 CBZ X21, 0x3BD2F98
	0x03BD2EB8 ADRP X8, 0x58B000
	0x03BD2EBC LDR X8, [X8 + 0xAA0]
	0x03BD2EC0 MOV X0, X21
	0x03BD2EC4 MOV X1, X22
	0x03BD2EC8 LDR X2, [X8]
	0x03BD2ECC BL 0x2729B68
	0x03BD2ED0 LDR X8, [X20]
	0x03BD2ED4 LDR X1, [X23]
	0x03BD2ED8 LDRH W9, [X8 + 0x12E]
	0x03BD2EDC CBZ X9, 0x3BD2F00
	0x03BD2EE0 LDR X10, [X8 + 0xB0]
	0x03BD2EE4 ADD X10, X10, 0x8
	0x03BD2EE8 LDUR X11, [X10 - 0x8]
	0x03BD2EEC CMP X11, X1
	0x03BD2EF0 B.EQ 0x3BD2F10
	0x03BD2EF4 SUBS X9, X9, 0x1
	0x03BD2EF8 ADD X10, X10, 0x10
	0x03BD2EFC B.NE 0x3BD2EE8
	0x03BD2F00 MOVZ W2, 0x1
	0x03BD2F04 MOV X0, X20
	0x03BD2F08 BL 0x1C5C788
	0x03BD2F0C B 0x3BD2F20
	0x03BD2F10 LDR W9, [X10]
	0x03BD2F14 ADD W9, W9, 0x1
	0x03BD2F18 ADD X8, X8, W9, 0x4, SXTW
	0x03BD2F1C ADD X0, X8, 0x138
	0x03BD2F20 LDP X8, X1, [X0]
	0x03BD2F24 MOV X0, X20
	0x03BD2F28 BLR X8
	0x03BD2F2C LDR X8, [X26]
	0x03BD2F30 MOV X20, X0
	0x03BD2F34 MOV X0, X8
	0x03BD2F38 BL 0x1C16F10
	0x03BD2F3C LDR X2, [X27]
	0x03BD2F40 MOV X1, X19
	0x03BD2F44 MOV X3, X31
	0x03BD2F48 MOV X21, X0
	0x03BD2F4C BL 0x2725C6C
	0x03BD2F50 CBZ X20, 0x3BD2F98
	0x03BD2F54 ADRP X8, 0x58B000
	0x03BD2F58 LDR X8, [X8 + 0xA90]
	0x03BD2F5C MOV X0, X20
	0x03BD2F60 MOV X1, X21
	0x03BD2F64 LDR X2, [X8]
	0x03BD2F68 BL 0x2729B68
	0x03BD2F6C B 0x3BD2C10
	0x03BD2F70 LDR X8, [X19]
	0x03BD2F74 MOV X0, X19
	0x03BD2F78 LDP X20, X19, [X31 + 0x40]
	0x03BD2F7C LDP X22, X21, [X31 + 0x30]
	0x03BD2F80 LDR X2, [X8 + 0x2C8]
	0x03BD2F84 LDR X1, [X8 + 0x2D0]
	0x03BD2F88 LDP X24, X23, [X31 + 0x20]
	0x03BD2F8C LDP X26, X25, [X31 + 0x10]
	0x03BD2F90 LDP X30, X27, [X31], #0x50
	0x03BD2F94 BR X2
	0x03BD2F98 BL 0x1C16F20
	0x03BD2F9C STP X30, X23, [X31 - 0x30]!
	0x03BD2FA0 STP X22, X21, [X31 + 0x10]
	0x03BD2FA4 STP X20, X19, [X31 + 0x20]
	0x03BD2FA8 ADRP X21, 0x810000
	0x03BD2FAC LDRB W8, [X21 + 0xE5B]
	0x03BD2FB0 MOV X20, X1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x811000
	015 Move W8, [X20+3670]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {98}
	021 Move X0, 0x589000
	022 Move X0, [X0+3312]
	023 Call 0x1C17CF4
	024 Move X0, 0x589000
	025 Move X0, [X0+3304]
	026 Call 0x1C17CF4
	027 Move X0, 0x58C000
	028 Move X0, [X0+2800]
	029 Call 0x1C17CF4
	030 Move X0, 0x58C000
	031 Move X0, [X0+2808]
	032 Call 0x1C17CF4
	033 Move X0, 0x58C000
	034 Move X0, [X0+2816]
	035 Call 0x1C17CF4
	036 Move X0, 0x58C000
	037 Move X0, [X0+2824]
	038 Call 0x1C17CF4
	039 Move X0, 0x58C000
	040 Move X0, [X0+2832]
	041 Call 0x1C17CF4
	042 Move X0, 0x589000
	043 Move X0, [X0+2912]
	044 Call 0x1C17CF4
	045 Move X0, 0x589000
	046 Move X0, [X0+800]
	047 Call 0x1C17CF4
	048 Move X0, 0x589000
	049 Move X0, [X0+760]
	050 Call 0x1C17CF4
	051 Move X0, 0x589000
	052 Move X0, [X0+808]
	053 Call 0x1C17CF4
	054 Move X0, 0x58C000
	055 Move X0, [X0+2664]
	056 Call 0x1C17CF4
	057 Move X0, 0x589000
	058 Move X0, [X0+392]
	059 Call 0x1C17CF4
	060 Move X0, 0x589000
	061 Move X0, [X0+400]
	062 Call 0x1C17CF4
	063 Move X0, 0x525000
	064 Move X0, [X0+1032]
	065 Call 0x1C17CF4
	066 Move X0, 0x589000
	067 Move X0, [X0+408]
	068 Call 0x1C17CF4
	069 Move X0, 0x58C000
	070 Move X0, [X0+2688]
	071 Call 0x1C17CF4
	072 Move X0, 0x589000
	073 Move X0, [X0+496]
	074 Call 0x1C17CF4
	075 Move X0, 0x589000
	076 Move X0, [X0+504]
	077 Call 0x1C17CF4
	078 Move X0, 0x589000
	079 Move X0, [X0+512]
	080 Call 0x1C17CF4
	081 Move X0, 0x58C000
	082 Move X0, [X0+2736]
	083 Call 0x1C17CF4
	084 Move X0, 0x58C000
	085 Move X0, [X0+2744]
	086 Call 0x1C17CF4
	087 Move X0, 0x589000
	088 Move X0, [X0+520]
	089 Call 0x1C17CF4
	090 Move X0, 0x58C000
	091 Move X0, [X0+2840]
	092 Call 0x1C17CF4
	093 Move X0, 0x58C000
	094 Move X0, [X0+2848]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X20+3670], W8
	098 Move [X31+32], X31
	099 Move [X31+40], X31
	100 Move [X31+48], X31
	101 Move X0, [X19+72]
	102 Compare X0, 0
	103 JumpIfEqual {516}
	104 Move X1, X31
	105 Call BindingsGroup.Clear, X0
	106 Move W8, [X19+176]
	107 Compare W8, 0
	108 JumpIfEqual {371}
	109 Move X8, 0x589000
	110 Move X8, [X8+3304]
	111 Move X20, [X19+136]
	112 Move X0, [X8]
	113 Call 0x1C17F10
	114 Move X8, [X19]
	115 Move X1, X19
	116 Move X3, X31
	117 Move X21, X0
	118 Move X2, [X8+608]
	119 Call Action`1<Object>..ctor, X0, X1, X2
	120 Compare X20, 0
	121 JumpIfEqual {516}
	122 Move X22, 0x589000
	123 Move X8, [X20]
	124 Move X22, [X22+760]
	125 Move X23, 0x589000
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X1, [X22]
	128 Move X23, [X23+3312]
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 1
	138 Move X0, X20
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 1
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X2, [X0+8]
	146 Move X0, X20
	147 Move X1, X21
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X0, [X23]
	150 Move X20, [X19+136]
	151 Call 0x1C17F10
	152 Move X8, [X19]
	153 Move X1, X19
	154 Move X3, X31
	155 Move X21, X0
	156 Move X2, [X8+624]
	157 Call Action`1<Object>..ctor, X0, X1, X2
	158 Compare X20, 0
	159 JumpIfEqual {516}
	160 Move X8, [X20]
	161 Move X1, [X22]
	162 NotImplemented "Instruction LDRH not yet implemented."
	163 Compare X9, 0
	164 JumpIfEqual {171}
	165 Move X10, [X8+176]
	166 Add X10, X10, 8
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Subtract X9, X9, 1
	170 Add X10, X10, 16
	171 Move W2, 3
	172 Move X0, X20
	173 Call 0x1C5D788
	174 Move W9, [X10]
	175 Add W9, W9, 3
	176 Add X8, X8, W9
	177 Add X0, X8, 312
	178 Move X8, [X0]
	179 Move X2, [X0+8]
	180 Move X0, X20
	181 Move X1, X21
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move W8, [X19+178]
	184 Compare W8, 0
	185 JumpIfEqual {277}
	186 Move X20, [X19+144]
	187 Compare X20, 0
	188 JumpIfEqual {516}
	189 Move X22, 0x589000
	190 Move X8, [X20]
	191 Move X22, [X22+800]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X1, [X22]
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move X0, X20
	203 Move W2, W31
	204 Call 0x1C5D788
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X20
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X8, 0x589000
	213 Move X8, [X8+400]
	214 Move X20, X0
	215 Move X8, [X8]
	216 Move X0, X8
	217 Call 0x1C17F10
	218 Move X8, [X19]
	219 Move X1, X19
	220 Move X3, X31
	221 Move X21, X0
	222 Move X2, [X8+640]
	223 Call UnityAction`1<Object>..ctor, X0, X1, X2
	224 Compare X20, 0
	225 JumpIfEqual {516}
	226 Move X8, 0x589000
	227 Move X8, [X8+504]
	228 Move X0, X20
	229 Move X1, X21
	230 Move X2, [X8]
	231 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	232 Move X20, [X19+144]
	233 Compare X20, 0
	234 JumpIfEqual {516}
	235 Move X8, [X20]
	236 Move X1, [X22]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move W2, 1
	247 Move X0, X20
	248 Call 0x1C5D788
	249 Move W9, [X10]
	250 Add W9, W9, 1
	251 Add X8, X8, W9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X20
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X8, 0x589000
	258 Move X8, [X8+408]
	259 Move X20, X0
	260 Move X8, [X8]
	261 Move X0, X8
	262 Call 0x1C17F10
	263 Move X8, [X19]
	264 Move X1, X19
	265 Move X3, X31
	266 Move X21, X0
	267 Move X2, [X8+656]
	268 Call UnityAction`1<Object>..ctor, X0, X1, X2
	269 Compare X20, 0
	270 JumpIfEqual {516}
	271 Move X8, 0x589000
	272 Move X8, [X8+520]
	273 Move X0, X20
	274 Move X1, X21
	275 Move X2, [X8]
	276 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	277 Move W8, [X19+179]
	278 Compare W8, 0
	279 JumpIfEqual {371}
	280 Move X20, [X19+152]
	281 Compare X20, 0
	282 JumpIfEqual {516}
	283 Move X22, 0x589000
	284 Move X8, [X20]
	285 Move X22, [X22+808]
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 Move X1, [X22]
	288 Compare X9, 0
	289 JumpIfEqual {296}
	290 Move X10, [X8+176]
	291 Add X10, X10, 8
	292 NotImplemented "Instruction LDUR not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Subtract X9, X9, 1
	295 Add X10, X10, 16
	296 Move X0, X20
	297 Move W2, W31
	298 Call 0x1C5D788
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Add X8, X8, X9
	301 Add X0, X8, 312
	302 Move X8, [X0]
	303 Move X1, [X0+8]
	304 Move X0, X20
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Move X8, 0x589000
	307 Move X8, [X8+392]
	308 Move X20, X0
	309 Move X8, [X8]
	310 Move X0, X8
	311 Call 0x1C17F10
	312 Move X8, [X19]
	313 Move X1, X19
	314 Move X3, X31
	315 Move X21, X0
	316 Move X2, [X8+672]
	317 Call UnityAction`1<Object>..ctor, X0, X1, X2
	318 Compare X20, 0
	319 JumpIfEqual {516}
	320 Move X8, 0x589000
	321 Move X8, [X8+496]
	322 Move X0, X20
	323 Move X1, X21
	324 Move X2, [X8]
	325 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	326 Move X20, [X19+152]
	327 Compare X20, 0
	328 JumpIfEqual {516}
	329 Move X8, [X20]
	330 Move X1, [X22]
	331 NotImplemented "Instruction LDRH not yet implemented."
	332 Compare X9, 0
	333 JumpIfEqual {340}
	334 Move X10, [X8+176]
	335 Add X10, X10, 8
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Subtract X9, X9, 1
	339 Add X10, X10, 16
	340 Move W2, 1
	341 Move X0, X20
	342 Call 0x1C5D788
	343 Move W9, [X10]
	344 Add W9, W9, 1
	345 Add X8, X8, W9
	346 Add X0, X8, 312
	347 Move X8, [X0]
	348 Move X1, [X0+8]
	349 Move X0, X20
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Move X8, 0x525000
	352 Move X8, [X8+1032]
	353 Move X20, X0
	354 Move X8, [X8]
	355 Move X0, X8
	356 Call 0x1C17F10
	357 Move X8, [X19]
	358 Move X1, X19
	359 Move X3, X31
	360 Move X21, X0
	361 Move X2, [X8+688]
	362 Call UnityAction`1<Object>..ctor, X0, X1, X2
	363 Compare X20, 0
	364 JumpIfEqual {516}
	365 Move X8, 0x589000
	366 Move X8, [X8+512]
	367 Move X0, X20
	368 Move X1, X21
	369 Move X2, [X8]
	370 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	371 Move X0, [X19+208]
	372 Compare X0, 0
	373 JumpIfEqual {516}
	374 Move X8, 0x58C000
	375 Move X8, [X8+2832]
	376 Move X25, 0x58C000
	377 Move X26, 0x589000
	378 Move X28, 0x58C000
	379 Move X29, 0x58C000
	380 Move X23, 0x58C000
	381 Move X24, 0x58C000
	382 Move X25, [X25+2808]
	383 Move X26, [X26+2912]
	384 Move X28, [X28+2840]
	385 Move X29, [X29+2736]
	386 Move X23, [X23+2664]
	387 Move X24, [X24+2848]
	388 Move X1, [X8]
	389 Move X27, 0x58C000
	390 Move X27, [X27+2744]
	391 Add X8, X31, 8
	392 Call HashSet`1<Object>.GetEnumerator, X0
	393 NotImplemented "Instruction LDUR not yet implemented."
	394 Move X8, [X31+24]
	395 Move [X31+2], V0
	396 Move [X31+48], X8
	397 Move X1, [X25]
	398 Add X0, X31, 32
	399 Call Enumerator<Object>.MoveNext, X0
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {480}
	404 Move X20, [X31+48]
	405 Compare X20, 0
	406 JumpIfEqual {397}
	407 Move X8, [X20]
	408 Move X1, [X26]
	409 NotImplemented "Instruction LDRH not yet implemented."
	410 Compare X9, 0
	411 JumpIfEqual {418}
	412 Move X10, [X8+176]
	413 Add X10, X10, 8
	414 NotImplemented "Instruction LDUR not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Subtract X9, X9, 1
	417 Add X10, X10, 16
	418 Move X0, X20
	419 Move W2, W31
	420 Call 0x1C5D788
	421 NotImplemented "Instruction LDRSW not yet implemented."
	422 Add X8, X8, X9
	423 Add X0, X8, 312
	424 Move X8, [X0]
	425 Move X1, [X0+8]
	426 Move X0, X20
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Move X8, 0x58C000
	429 Move X8, [X8+2688]
	430 Move X21, X0
	431 Move X0, [X8]
	432 Call 0x1C17F10
	433 Move X2, [X28]
	434 Move X22, X0
	435 Move X1, X19
	436 Move X3, X31
	437 Call UnityAction`1<Object>..ctor, X0, X1, X2
	438 Compare X21, 0
	439 JumpIfEqual {514}
	440 Move X2, [X29]
	441 Move X0, X21
	442 Move X1, X22
	443 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	444 Move X8, [X20]
	445 Move X1, [X26]
	446 NotImplemented "Instruction LDRH not yet implemented."
	447 Compare X9, 0
	448 JumpIfEqual {455}
	449 Move X10, [X8+176]
	450 Add X10, X10, 8
	451 NotImplemented "Instruction LDUR not yet implemented."
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Subtract X9, X9, 1
	454 Add X10, X10, 16
	455 Move W2, 1
	456 Move X0, X20
	457 Call 0x1C5D788
	458 Move W9, [X10]
	459 Add W9, W9, 1
	460 Add X8, X8, W9
	461 Add X0, X8, 312
	462 Move X8, [X0]
	463 Move X1, [X0+8]
	464 Move X0, X20
	465 NotImplemented "Instruction BLR not yet implemented."
	466 Move X20, X0
	467 Move X0, [X23]
	468 Call 0x1C17F10
	469 Move X2, [X24]
	470 Move X21, X0
	471 Move X1, X19
	472 Move X3, X31
	473 Call UnityAction`1<Object>..ctor, X0, X1, X2
	474 Compare X20, 0
	475 JumpIfEqual {515}
	476 Move X2, [X27]
	477 Move X0, X20
	478 Move X1, X21
	479 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	480 Move X8, 0x58C000
	481 Move X8, [X8+2800]
	482 Add X0, X31, 32
	483 Move X1, [X8]
	484 Call Enumerator<Object>.Dispose, X0
	485 Move X0, [X19+208]
	486 Compare X0, 0
	487 JumpIfEqual {516}
	488 Move X8, 0x58C000
	489 Move X8, [X8+2824]
	490 Move X1, [X8]
	491 Call HashSet`1<Object>.Clear, X0
	492 Move X1, [X19+224]
	493 Move [X19+176], W31
	494 Compare X1, 0
	495 JumpIfEqual {500}
	496 Move X0, X19
	497 Move X2, X31
	498 Call MonoBehaviour.StopCoroutine, X0, X1
	499 Move [X19+224], X31
	500 Move X20, [X31+144]
	501 Move X19, [X31+152]
	502 Move X22, [X31+128]
	503 Move X21, [X31+136]
	504 Move X24, [X31+112]
	505 Move X23, [X31+120]
	506 Move X26, [X31+96]
	507 Move X25, [X31+104]
	508 Move X28, [X31+80]
	509 Move X27, [X31+88]
	510 Move X29, [X31+64]
	511 Move X30, [X31+72]
	512 Add X31, X31, 160
	513 Return 
	514 Call 0x1C17F20
	515 Call 0x1C17F20
	516 Call 0x1C17F20
	517 Move X20, X0
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X0, X20
	520 Call 0x3EB2AD0
	521 Move X21, [X0]
	522 Call 0x3EB2AE0
	523 Move X8, 0x58C000
	524 Move X8, [X8+2800]
	525 Add X0, X31, 32
	526 Move X1, [X8]
	527 Call Enumerator<Object>.Dispose, X0
	528 Compare X21, 0
	529 JumpIfEqual {485}
	530 Move X0, X21
	531 Call 0x1C17F18
	532 Move X21, X31
	533 Move X20, X0
	534 Move X8, 0x58C000
	535 Move X8, [X8+2800]
	536 Move X1, [X8]
	537 Add X0, X31, 32
	538 Call Enumerator<Object>.Dispose, X0
	539 Compare X21, 0
	540 JumpIfNotEqual {543}
	541 Move X0, X20
	542 Call 0x1D2D690
	543 Move X0, X21
	544 Call 0x1C17F18
	545 Call 0x1991590

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData GenerateNewAffordanceState()

Disassembly:
	0x03BD2FB4 MOV X19, X0
	0x03BD2FB8 TBNZ X8, 0x0, 0x3BD303C
	0x03BD2FBC ADRP X0, 0x58B000
	0x03BD2FC0 LDR X0, [X0 + 0xB30]
	0x03BD2FC4 BL 0x1C16CF4
	0x03BD2FC8 ADRP X0, 0x58B000
	0x03BD2FCC LDR X0, [X0 + 0xB38]
	0x03BD2FD0 BL 0x1C16CF4
	0x03BD2FD4 ADRP X0, 0x588000
	0x03BD2FD8 LDR X0, [X0 + 0xB60]
	0x03BD2FDC BL 0x1C16CF4
	0x03BD2FE0 ADRP X0, 0x528000
	0x03BD2FE4 LDR X0, [X0 + 0x4B8]
	0x03BD2FE8 BL 0x1C16CF4
	0x03BD2FEC ADRP X0, 0x58B000
	0x03BD2FF0 LDR X0, [X0 + 0xA68]
	0x03BD2FF4 BL 0x1C16CF4
	0x03BD2FF8 ADRP X0, 0x58B000
	0x03BD2FFC LDR X0, [X0 + 0xA80]
	0x03BD3000 BL 0x1C16CF4
	0x03BD3004 ADRP X0, 0x58A000
	0x03BD3008 LDR X0, [X0 + 0xAB0]
	0x03BD300C BL 0x1C16CF4
	0x03BD3010 ADRP X0, 0x58A000
	0x03BD3014 LDR X0, [X0 + 0xAB8]
	0x03BD3018 BL 0x1C16CF4
	0x03BD301C ADRP X0, 0x58A000
	0x03BD3020 LDR X0, [X0 + 0xB18]
	0x03BD3024 BL 0x1C16CF4
	0x03BD3028 ADRP X0, 0x58A000
	0x03BD302C LDR X0, [X0 + 0xB20]
	0x03BD3030 BL 0x1C16CF4
	0x03BD3034 MOVZ W8, 0x1
	0x03BD3038 STRB W8, [X21 + 0xE5B]
	0x03BD303C LDR X8, [X19]
	0x03BD3040 MOV X0, X19
	0x03BD3044 LDP X9, X1, [X8 + 0x1D8]
	0x03BD3048 BLR X9
	0x03BD304C TBNZ X0, 0x0, 0x3BD3208
	0x03BD3050 CBZ X20, 0x3BD3290
	0x03BD3054 MOV X0, X20
	0x03BD3058 MOV X1, X31
	0x03BD305C BL 0x3B66758
	0x03BD3060 ADRP X23, 0x587000
	0x03BD3064 LDR X23, [X23 + 0xB60]
	0x03BD3068 LDR X1, [X23]
	0x03BD306C BL 0x1C16E00
	0x03BD3070 CBZ X0, 0x3BD3208
	0x03BD3074 MOV X20, X0
	0x03BD3078 LDR X0, [X19 + 0xD0]
	0x03BD307C CBZ X0, 0x3BD3290
	0x03BD3080 ADRP X8, 0x58A000
	0x03BD3084 LDR X8, [X8 + 0xB30]
	0x03BD3088 MOV X1, X20
	0x03BD308C LDR X2, [X8]
	0x03BD3090 BL 0x2DBE4B0
	0x03BD3094 TBZ X0, 0x0, 0x3BD3208
	0x03BD3098 LDR X0, [X19 + 0xD0]
	0x03BD309C CBZ X0, 0x3BD3290
	0x03BD30A0 ADRP X8, 0x58A000
	0x03BD30A4 LDR X8, [X8 + 0xB38]
	0x03BD30A8 MOV X1, X20
	0x03BD30AC LDR X2, [X8]
	0x03BD30B0 BL 0x2DBE67C
	0x03BD30B4 LDR X8, [X20]
	0x03BD30B8 LDR X1, [X23]
	0x03BD30BC LDRH W9, [X8 + 0x12E]
	0x03BD30C0 CBZ X9, 0x3BD30E4
	0x03BD30C4 LDR X10, [X8 + 0xB0]
	0x03BD30C8 ADD X10, X10, 0x8
	0x03BD30CC LDUR X11, [X10 - 0x8]
	0x03BD30D0 CMP X11, X1
	0x03BD30D4 B.EQ 0x3BD30F4
	0x03BD30D8 SUBS X9, X9, 0x1
	0x03BD30DC ADD X10, X10, 0x10
	0x03BD30E0 B.NE 0x3BD30CC
	0x03BD30E4 MOV X0, X20
	0x03BD30E8 MOV W2, W31
	0x03BD30EC BL 0x1C5C788
	0x03BD30F0 B 0x3BD3100
	0x03BD30F4 LDRSW X9, [X10]
	0x03BD30F8 ADD X8, X8, X9, 0x4, LSL
	0x03BD30FC ADD X0, X8, 0x138
	0x03BD3100 LDP X8, X1, [X0]
	0x03BD3104 MOV X0, X20
	0x03BD3108 BLR X8
	0x03BD310C ADRP X8, 0x58A000
	0x03BD3110 LDR X8, [X8 + 0xA80]
	0x03BD3114 MOV X21, X0
	0x03BD3118 LDR X8, [X8]
	0x03BD311C MOV X0, X8
	0x03BD3120 BL 0x1C16F10
	0x03BD3124 ADRP X8, 0x58A000
	0x03BD3128 LDR X8, [X8 + 0xB18]
	0x03BD312C MOV X1, X19
	0x03BD3130 MOV X3, X31
	0x03BD3134 MOV X22, X0
	0x03BD3138 LDR X2, [X8]
	0x03BD313C BL 0x2725C6C
	0x03BD3140 CBZ X21, 0x3BD3290
	0x03BD3144 ADRP X8, 0x58A000
	0x03BD3148 LDR X8, [X8 + 0xAB0]
	0x03BD314C MOV X0, X21
	0x03BD3150 MOV X1, X22
	0x03BD3154 LDR X2, [X8]
	0x03BD3158 BL 0x2729BA4
	0x03BD315C LDR X8, [X20]
	0x03BD3160 LDR X1, [X23]
	0x03BD3164 LDRH W9, [X8 + 0x12E]
	0x03BD3168 CBZ X9, 0x3BD318C
	0x03BD316C LDR X10, [X8 + 0xB0]
	0x03BD3170 ADD X10, X10, 0x8
	0x03BD3174 LDUR X11, [X10 - 0x8]
	0x03BD3178 CMP X11, X1
	0x03BD317C B.EQ 0x3BD319C
	0x03BD3180 SUBS X9, X9, 0x1
	0x03BD3184 ADD X10, X10, 0x10
	0x03BD3188 B.NE 0x3BD3174
	0x03BD318C MOVZ W2, 0x1
	0x03BD3190 MOV X0, X20
	0x03BD3194 BL 0x1C5C788
	0x03BD3198 B 0x3BD31AC
	0x03BD319C LDR W9, [X10]
	0x03BD31A0 ADD W9, W9, 0x1
	0x03BD31A4 ADD X8, X8, W9, 0x4, SXTW
	0x03BD31A8 ADD X0, X8, 0x138
	0x03BD31AC LDP X8, X1, [X0]
	0x03BD31B0 MOV X0, X20
	0x03BD31B4 BLR X8
	0x03BD31B8 ADRP X8, 0x58A000
	0x03BD31BC LDR X8, [X8 + 0xA68]
	0x03BD31C0 MOV X20, X0
	0x03BD31C4 LDR X8, [X8]
	0x03BD31C8 MOV X0, X8
	0x03BD31CC BL 0x1C16F10
	0x03BD31D0 ADRP X8, 0x58A000
	0x03BD31D4 LDR X8, [X8 + 0xB20]
	0x03BD31D8 MOV X1, X19
	0x03BD31DC MOV X3, X31
	0x03BD31E0 MOV X21, X0
	0x03BD31E4 LDR X2, [X8]
	0x03BD31E8 BL 0x2725C6C
	0x03BD31EC CBZ X20, 0x3BD3290
	0x03BD31F0 ADRP X8, 0x58A000
	0x03BD31F4 LDR X8, [X8 + 0xAB8]
	0x03BD31F8 MOV X0, X20
	0x03BD31FC MOV X1, X21
	0x03BD3200 LDR X2, [X8]
	0x03BD3204 BL 0x2729BA4
	0x03BD3208 LDRB W8, [X19 + 0x69]
	0x03BD320C CBNZ W8, 0x3BD3244
	0x03BD3210 LDRB W8, [X19 + 0x6D]
	0x03BD3214 CBNZ W8, 0x3BD3244
	0x03BD3218 LDR W8, [X19 + 0x70]
	0x03BD321C CMP W8, 0x2
	0x03BD3220 B.NE 0x3BD3244
	0x03BD3224 ADRP X8, 0x527000
	0x03BD3228 LDR X8, [X8 + 0x4B8]
	0x03BD322C LDR V0, [X19 + 0x78]
	0x03BD3230 LDR X8, [X8]
	0x03BD3234 LDR X8, [X8 + 0xB8]
	0x03BD3238 LDR V1, [X8]
	0x03BD323C FCMP S0, S1
	0x03BD3240 B.PL 0x3BD3270
	0x03BD3244 LDR X8, [X19]
	0x03BD3248 MOV X0, X19
	0x03BD324C LDR X9, [X8 + 0x248]
	0x03BD3250 LDR X1, [X8 + 0x250]
	0x03BD3254 BLR X9
	0x03BD3258 AND X1, X0, 0xFFFF
	0x03BD325C MOV X0, X19
	0x03BD3260 LDP X20, X19, [X31 + 0x20]
	0x03BD3264 LDP X22, X21, [X31 + 0x10]
	0x03BD3268 LDP X30, X23, [X31], #0x30
	0x03BD326C B 0x3BCD1F4
	0x03BD3270 LDR X8, [X19]
	0x03BD3274 MOV X0, X19
	0x03BD3278 LDP X20, X19, [X31 + 0x20]
	0x03BD327C LDP X22, X21, [X31 + 0x10]
	0x03BD3280 LDR X2, [X8 + 0x2C8]
	0x03BD3284 LDR X1, [X8 + 0x2D0]
	0x03BD3288 LDP X30, X23, [X31], #0x30
	0x03BD328C BR X2
	0x03BD3290 BL 0x1C16F20
	0x03BD3294 STP X30, X19, [X31 - 0x10]!
	0x03BD3298 LDR X8, [X0 + 0xB8]
	0x03BD329C CBNZ X8, 0x3BD32AC
	0x03BD32A0 LDR X8, [X0 + 0xC0]
	0x03BD32A4 MOV X19, X0
	0x03BD32A8 CBZ X8, 0x3BD32B4
	0x03BD32AC LDP X30, X19, [X31], #0x10
	0x03BD32B0 RET
	0x03BD32B4 LDR X8, [X19]
	0x03BD32B8 MOV X0, X19
	0x03BD32BC LDR X9, [X8 + 0x248]
	0x03BD32C0 LDR X1, [X8 + 0x250]
	0x03BD32C4 BLR X9
	0x03BD32C8 AND X1, X0, 0xFFFF
	0x03BD32CC MOV X0, X19
	0x03BD32D0 LDP X30, X19, [X31], #0x10
	0x03BD32D4 B 0x3BCD1F4
	0x03BD32D8 STR X30, [X31 - 0x20]!
	0x03BD32DC STP X20, X19, [X31 + 0x10]
	0x03BD32E0 ADRP X20, 0x80F000
	0x03BD32E4 LDRB W8, [X20 + 0xE5C]
	0x03BD32E8 MOV X19, X0
	0x03BD32EC TBNZ X8, 0x0, 0x3BD3304
	0x03BD32F0 ADRP X0, 0x527000
	0x03BD32F4 LDR X0, [X0 + 0x4B8]
	0x03BD32F8 BL 0x1C16CF4
	0x03BD32FC MOVZ W8, 0x1
	0x03BD3300 STRB W8, [X20 + 0xE5C]
	0x03BD3304 LDRB W8, [X19 + 0x6A]
	0x03BD3308 MOVZ W9, 0x1
	0x03BD330C STRB W9, [X19 + 0xC8]
	0x03BD3310 CBNZ W8, 0x3BD3348
	0x03BD3314 LDRB W8, [X19 + 0x6D]
	0x03BD3318 CBNZ W8, 0x3BD3348
	0x03BD331C LDR W8, [X19 + 0x74]
	0x03BD3320 CMP W8, 0x1
	0x03BD3324 B.NE 0x3BD3348
	0x03BD3328 ADRP X8, 0x527000
	0x03BD332C LDR X8, [X8 + 0x4B8]
	0x03BD3330 LDR V0, [X19 + 0x78]
	0x03BD3334 LDR X8, [X8]
	0x03BD3338 LDR X8, [X8 + 0xB8]
	0x03BD333C LDR V1, [X8]
	0x03BD3340 FCMP S0, S1
	0x03BD3344 B.PL 0x3BD3370
	0x03BD3348 LDR X8, [X19]
	0x03BD334C MOV X0, X19
	0x03BD3350 LDR X9, [X8 + 0x248]
	0x03BD3354 LDR X1, [X8 + 0x250]
	0x03BD3358 BLR X9
	0x03BD335C AND X1, X0, 0xFFFF
	0x03BD3360 MOV X0, X19
	0x03BD3364 LDP X20, X19, [X31 + 0x10]
	0x03BD3368 LDR X30, [X31], #0x20
	0x03BD336C B 0x3BCD1F4
	0x03BD3370 LDR X8, [X19]
	0x03BD3374 MOV X0, X19
	0x03BD3378 LDP X20, X19, [X31 + 0x10]
	0x03BD337C LDR X2, [X8 + 0x2D8]
	0x03BD3380 LDR X1, [X8 + 0x2E0]
	0x03BD3384 LDR X30, [X31], #0x20
	0x03BD3388 BR X2
	0x03BD338C STR X30, [X31 - 0x20]!
	0x03BD3390 STP X20, X19, [X31 + 0x10]
	0x03BD3394 ADRP X20, 0x80F000
	0x03BD3398 LDRB W8, [X20 + 0xE5D]
	0x03BD339C MOV X19, X0
	0x03BD33A0 TBNZ X8, 0x0, 0x3BD33B8
	0x03BD33A4 ADRP X0, 0x527000
	0x03BD33A8 LDR X0, [X0 + 0x4B8]
	0x03BD33AC BL 0x1C16CF4
	0x03BD33B0 MOVZ W8, 0x1
	0x03BD33B4 STRB W8, [X20 + 0xE5D]
	0x03BD33B8 LDRB W8, [X19 + 0x6A]
	0x03BD33BC STRB W31, [X19 + 0xC8]
	0x03BD33C0 CBNZ W8, 0x3BD33F8
	0x03BD33C4 LDRB W8, [X19 + 0x6D]
	0x03BD33C8 CBNZ W8, 0x3BD33F8
	0x03BD33CC LDR W8, [X19 + 0x74]
	0x03BD33D0 CMP W8, 0x2
	0x03BD33D4 B.NE 0x3BD33F8
	0x03BD33D8 ADRP X8, 0x527000
	0x03BD33DC LDR X8, [X8 + 0x4B8]
	0x03BD33E0 LDR V0, [X19 + 0x78]
	0x03BD33E4 LDR X8, [X8]
	0x03BD33E8 LDR X8, [X8 + 0xB8]
	0x03BD33EC LDR V1, [X8]
	0x03BD33F0 FCMP S0, S1
	0x03BD33F4 B.PL 0x3BD3420
	0x03BD33F8 LDR X8, [X19]
	0x03BD33FC MOV X0, X19
	0x03BD3400 LDR X9, [X8 + 0x248]
	0x03BD3404 LDR X1, [X8 + 0x250]
	0x03BD3408 BLR X9
	0x03BD340C AND X1, X0, 0xFFFF
	0x03BD3410 MOV X0, X19
	0x03BD3414 LDP X20, X19, [X31 + 0x10]
	0x03BD3418 LDR X30, [X31], #0x20
	0x03BD341C B 0x3BCD1F4
	0x03BD3420 LDR X8, [X19]
	0x03BD3424 MOV X0, X19
	0x03BD3428 LDP X20, X19, [X31 + 0x10]
	0x03BD342C LDR X2, [X8 + 0x2D8]
	0x03BD3430 LDR X1, [X8 + 0x2E0]
	0x03BD3434 LDR X30, [X31], #0x20
	0x03BD3438 BR X2
	0x03BD343C STR D8, [X31 - 0x30]!
	0x03BD3440 STP X30, X21, [X31 + 0x10]
	0x03BD3444 STP X20, X19, [X31 + 0x20]
	0x03BD3448 ADRP X20, 0x80F000
	0x03BD344C LDRB W8, [X20 + 0xE5E]
	0x03BD3450 MOV X19, X0
	0x03BD3454 TBNZ X8, 0x0, 0x3BD3478
	0x03BD3458 ADRP X0, 0x521000
	0x03BD345C LDR X0, [X0 + 0xE70]
	0x03BD3460 BL 0x1C16CF4
	0x03BD3464 ADRP X0, 0x58A000
	0x03BD3468 LDR X0, [X0 + 0xB40]
	0x03BD346C BL 0x1C16CF4
	0x03BD3470 MOVZ W8, 0x1
	0x03BD3474 STRB W8, [X20 + 0xE5E]
	0x03BD3478 ADRP X21, 0x521000
	0x03BD347C ADRP X20, 0x58A000
	0x03BD3480 LDR X1, [X19 + 0xB8]
	0x03BD3484 LDR X21, [X21 + 0xE70]
	0x03BD3488 LDR X20, [X20 + 0xB40]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x811000
	006 Move W8, [X20+3671]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x54C000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move X0, 0x58C000
	016 Move X0, [X0+2656]
	017 Call 0x1C17CF4
	018 Move X0, 0x54C000
	019 Move X0, [X0+1424]
	020 Call 0x1C17CF4
	021 Move X0, 0x58A000
	022 Move X0, [X0+1744]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3671], W8
	026 Move W8, [X19+176]
	027 Compare W8, 0
	028 JumpIfEqual {125}
	029 Move X8, [X19]
	030 Move X0, X19
	031 Move X9, [X8+536]
	032 Move X1, [X8+544]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {41}
	038 Move W8, [X19+106]
	039 Compare W8, 0
	040 JumpIfEqual {180}
	041 Move X8, [X19]
	042 Move X0, X19
	043 Move X9, [X8+504]
	044 Move X1, [X8+512]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {59}
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move X9, [X8+520]
	053 Move X1, [X8+528]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {62}
	059 Move W8, [X19+105]
	060 Compare W8, 0
	061 JumpIfEqual {144}
	062 Move X8, [X19]
	063 Move X0, X19
	064 Move X9, [X8+472]
	065 Move X1, [X8+480]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {80}
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+488]
	074 Move X1, [X8+496]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {83}
	080 Move W8, [X19+104]
	081 Compare W8, 0
	082 JumpIfEqual {204}
	083 Move X8, [X19]
	084 Move X0, X19
	085 Move X9, [X8+552]
	086 Move X1, [X8+560]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {101}
	092 Move X8, [X19]
	093 Move X0, X19
	094 Move X9, [X8+568]
	095 Move X1, [X8+576]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {228}
	101 Move X19, 0x54B000
	102 Move X19, [X19+1264]
	103 Move X0, [X19]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X20, 0x810000
	109 Move W8, [X20+3754]
	110 Compare W8, 0
	111 JumpIfNotEqual {117}
	112 Move X0, 0x54B000
	113 Move X0, [X0+1264]
	114 Call 0x1C17CF4
	115 Move W8, 1
	116 Move [X20+3754], W8
	117 Move X0, [X19]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X19]
	123 Move X8, [X0+184]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X19, [X19+40]
	126 Compare X19, 0
	127 JumpIfEqual {353}
	128 Move X10, 0x54B000
	129 Move X8, [X19]
	130 Move X10, [X10+1424]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Move X1, [X10]
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 3
	142 Move X0, X19
	143 Call 0x1C5D788
	144 Move W8, [X19+180]
	145 Move S8, 1
	146 Move S0, 1
	147 Compare W8, 0
	148 JumpIfEqual {297}
	149 Move X19, [X19+160]
	150 Compare X19, 0
	151 JumpIfEqual {353}
	152 Move X10, 0x589000
	153 Move X8, [X19]
	154 Move X10, [X10+1744]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Move X1, [X10]
	157 Compare X9, 0
	158 JumpIfEqual {165}
	159 Move X10, [X8+176]
	160 Add X10, X10, 8
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Subtract X9, X9, 1
	164 Add X10, X10, 16
	165 Move X0, X19
	166 Move W2, W31
	167 Call 0x1C5D788
	168 Move W9, [X10]
	169 Add W9, W9, 3
	170 Add X8, X8, W9
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X1, [X0+8]
	174 Move X0, X19
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X9, X0
	177 ShiftRight X9, 8
	178 And X9, X9, 0x7FFFFFFF
	179 And X8, X0, 0xFFFF
	180 Move X19, 0x54B000
	181 Move X19, [X19+1264]
	182 Move X0, [X19]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X20, 0x810000
	188 Move W8, [X20+3752]
	189 Compare W8, 0
	190 JumpIfNotEqual {196}
	191 Move X0, 0x54B000
	192 Move X0, [X0+1264]
	193 Call 0x1C17CF4
	194 Move W8, 1
	195 Move [X20+3752], W8
	196 Move X0, [X19]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {202}
	200 Call 0x1C17DFC
	201 Move X0, [X19]
	202 Move X8, [X0+184]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move W8, [X19+180]
	205 Move S8, W31
	206 Move S0, W31
	207 Compare W8, 0
	208 JumpIfEqual {342}
	209 Move X19, [X19+160]
	210 Compare X19, 0
	211 JumpIfEqual {353}
	212 Move X10, 0x589000
	213 Move X8, [X19]
	214 Move X10, [X10+1744]
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Move X1, [X10]
	217 Compare X9, 0
	218 JumpIfEqual {225}
	219 Move X10, [X8+176]
	220 Add X10, X10, 8
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Subtract X9, X9, 1
	224 Add X10, X10, 16
	225 Move X0, X19
	226 Move W2, W31
	227 Call 0x1C5D788
	228 Move X19, 0x54B000
	229 Move X19, [X19+1264]
	230 Move X0, [X19]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X20, 0x810000
	236 Move W8, [X20+3755]
	237 Compare W8, 0
	238 JumpIfNotEqual {244}
	239 Move X0, 0x54B000
	240 Move X0, [X0+1264]
	241 Call 0x1C17CF4
	242 Move W8, 1
	243 Move [X20+3755], W8
	244 Move X0, [X19]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {250}
	248 Call 0x1C17DFC
	249 Move X0, [X19]
	250 Move X8, [X0+184]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Move X9, X8
	253 ShiftRight X9, 8
	254 And X9, X9, 0x7FFFFFFF
	255 Move X20, [X31+16]
	256 Move X19, [X31+24]
	257 Move X30, [X31+8]
	258 And X9, X9, 255
	259 And X0, X8, 255
	260 NotImplemented "Instruction BFM not yet implemented."
	261 Move V8, [X31+32]
	262 Return X0
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X19
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X0, 0
	271 JumpIfEqual {353}
	272 Move X10, 0x58B000
	273 Move X8, [X0]
	274 Move X10, [X10+2656]
	275 Move X19, X0
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Move X1, [X10]
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move W2, 3
	287 Move X0, X19
	288 Call 0x1C5D788
	289 Move W9, [X10]
	290 Add W9, W9, 3
	291 Add X8, X8, W9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X0, X19
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move W8, 0x437F0000
	298 NotImplemented "Instruction FMIN not yet implemented."
	299 Move S2, W8
	300 NotImplemented "Instruction FCMP not yet implemented."
	301 Move S0, W31
	302 Multiply S1, S1, S2
	303 NotImplemented "Instruction FCSEL not yet implemented."
	304 NotImplemented "Instruction FCVTZS not yet implemented."
	305 NotImplemented "Instruction FCMP not yet implemented."
	306 NotImplemented "Instruction CSEL not yet implemented."
	307 Move W8, 4
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Add X8, X8, X9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X1, [X0+8]
	313 Move X0, X19
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Compare X0, 0
	316 JumpIfEqual {353}
	317 Move X10, 0x58B000
	318 Move X8, [X0]
	319 Move X10, [X10+2656]
	320 Move X19, X0
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 Move X1, [X10]
	323 Compare X9, 0
	324 JumpIfEqual {331}
	325 Move X10, [X8+176]
	326 Add X10, X10, 8
	327 NotImplemented "Instruction LDUR not yet implemented."
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Subtract X9, X9, 1
	330 Add X10, X10, 16
	331 Move W2, 3
	332 Move X0, X19
	333 Call 0x1C5D788
	334 Move W9, [X10]
	335 Add W9, W9, 3
	336 Add X8, X8, W9
	337 Add X0, X8, 312
	338 Move X8, [X0]
	339 Move X1, [X0+8]
	340 Move X0, X19
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move S1, 1
	343 Move W8, 0x437F0000
	344 NotImplemented "Instruction FCMP not yet implemented."
	345 NotImplemented "Instruction FMIN not yet implemented."
	346 Move S1, W8
	347 Multiply S0, S0, S1
	348 NotImplemented "Instruction FCSEL not yet implemented."
	349 NotImplemented "Instruction FCVTZS not yet implemented."
	350 NotImplemented "Instruction FCMP not yet implemented."
	351 NotImplemented "Instruction CSEL not yet implemented."
	352 Move W8, 2
	353 Call 0x1C17F20

Method: System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs args)

Disassembly:
	0x03BD348C CBZ X1, 0x3BD349C
	0x03BD3490 MOV X0, X19
	0x03BD3494 MOV X2, X31
	0x03BD3498 BL 0x3C36968
	0x03BD349C LDR X0, [X21]
	0x03BD34A0 LDR V8, [X19 + 0x78]
	0x03BD34A4 BL 0x1C16F10
	0x03BD34A8 LDR X2, [X20]
	0x03BD34AC MOV X1, X19
	0x03BD34B0 MOV X3, X31
	0x03BD34B4 MOV X20, X0
	0x03BD34B8 BL 0x3314368

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W9, 1
	005 Move [X0+201], W9
	006 Move X19, X0
	007 Move X9, [X8+584]
	008 Move X1, [X8+592]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 And X1, X0, 0xFFFF
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	015 Return 

Method: System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs args)

Disassembly:
	0x03BD34BC LDR X8, [X19]
	0x03BD34C0 MOVZ W1, 0x4
	0x03BD34C4 MOV X0, X19
	0x03BD34C8 MOV V0.16B, V8.16B
	0x03BD34CC LDR X9, [X8 + 0x2E8]
	0x03BD34D0 LDR X3, [X8 + 0x2F0]
	0x03BD34D4 MOV X2, X20
	0x03BD34D8 BLR X9
	0x03BD34DC MOV X1, X0
	0x03BD34E0 MOV X0, X19
	0x03BD34E4 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move [X0+201], W31
	005 Move X19, X0
	006 Move X9, [X8+584]
	007 Move X1, [X8+592]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 And X1, X0, 0xFFFF
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	014 Return 

Method: System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03BD34E8 BL 0x3C366FC
	0x03BD34EC STR X0, [X19 + 0xB8]
	0x03BD34F0 LDP X20, X19, [X31 + 0x20]
	0x03BD34F4 LDP X30, X21, [X31 + 0x10]
	0x03BD34F8 LDR V8, [X31], #0x30
	0x03BD34FC RET
	0x03BD3500 STR D8, [X31 - 0x30]!
	0x03BD3504 STP X30, X21, [X31 + 0x10]
	0x03BD3508 STP X20, X19, [X31 + 0x20]
	0x03BD350C ADRP X20, 0x80F000
	0x03BD3510 LDRB W8, [X20 + 0xE5F]
	0x03BD3514 MOV X19, X0
	0x03BD3518 TBNZ X8, 0x0, 0x3BD353C
	0x03BD351C ADRP X0, 0x521000
	0x03BD3520 LDR X0, [X0 + 0xE70]
	0x03BD3524 BL 0x1C16CF4
	0x03BD3528 ADRP X0, 0x58A000
	0x03BD352C LDR X0, [X0 + 0xB48]
	0x03BD3530 BL 0x1C16CF4
	0x03BD3534 MOVZ W8, 0x1
	0x03BD3538 STRB W8, [X20 + 0xE5F]
	0x03BD353C ADRP X21, 0x521000
	0x03BD3540 ADRP X20, 0x58A000
	0x03BD3544 LDR X1, [X19 + 0xC0]
	0x03BD3548 LDR X21, [X21 + 0xE70]
	0x03BD354C LDR X20, [X20 + 0xB48]
	0x03BD3550 CBZ X1, 0x3BD3560
	0x03BD3554 MOV X0, X19
	0x03BD3558 MOV X2, X31
	0x03BD355C BL 0x3C36968
	0x03BD3560 LDR X0, [X21]
	0x03BD3564 LDR V8, [X19 + 0x78]
	0x03BD3568 BL 0x1C16F10
	0x03BD356C LDR X2, [X20]
	0x03BD3570 MOV X1, X19
	0x03BD3574 MOV X3, X31
	0x03BD3578 MOV X20, X0
	0x03BD357C BL 0x3314368
	0x03BD3580 LDR X8, [X19]
	0x03BD3584 MOVZ W1, 0x5
	0x03BD3588 MOV X0, X19
	0x03BD358C MOV V0.16B, V8.16B
	0x03BD3590 LDR X9, [X8 + 0x2E8]
	0x03BD3594 LDR X3, [X8 + 0x2F0]
	0x03BD3598 MOV X2, X20
	0x03BD359C BLR X9
	0x03BD35A0 MOV X1, X0
	0x03BD35A4 MOV X0, X19
	0x03BD35A8 MOV X2, X31
	0x03BD35AC BL 0x3C366FC
	0x03BD35B0 STR X0, [X19 + 0xC0]
	0x03BD35B4 LDP X20, X19, [X31 + 0x20]
	0x03BD35B8 LDP X30, X21, [X31 + 0x10]
	0x03BD35BC LDR V8, [X31], #0x30
	0x03BD35C0 RET
	0x03BD35C4 STR D8, [X31 - 0x40]!
	0x03BD35C8 STP X30, X23, [X31 + 0x10]
	0x03BD35CC STP X22, X21, [X31 + 0x20]
	0x03BD35D0 STP X20, X19, [X31 + 0x30]
	0x03BD35D4 ADRP X22, 0x80F000
	0x03BD35D8 ADRP X23, 0x58A000
	0x03BD35DC LDRB W8, [X22 + 0xE60]
	0x03BD35E0 LDR X23, [X23 + 0xB50]
	0x03BD35E4 MOV X19, X2
	0x03BD35E8 MOV V8.16B, V0.16B
	0x03BD35EC MOV W20, W1
	0x03BD35F0 MOV X21, X0
	0x03BD35F4 TBNZ X8, 0x0, 0x3BD360C
	0x03BD35F8 ADRP X0, 0x58A000
	0x03BD35FC LDR X0, [X0 + 0xB50]
	0x03BD3600 BL 0x1C16CF4
	0x03BD3604 MOVZ W8, 0x1
	0x03BD3608 STRB W8, [X22 + 0xE60]
	0x03BD360C LDR X0, [X23]
	0x03BD3610 BL 0x1C16F10
	0x03BD3614 MOV X1, X31
	0x03BD3618 MOV X22, X0
	0x03BD361C BL 0x33BDD8C
	0x03BD3620 STR W31, [X22 + 0x10]
	0x03BD3624 STR X21, [X22 + 0x28]
	0x03BD3628 STRB W20, [X22 + 0x30]
	0x03BD362C STR S8, [X22 + 0x20]
	0x03BD3630 STR X19, [X22 + 0x38]
	0x03BD3634 MOV X0, X22
	0x03BD3638 LDP X20, X19, [X31 + 0x30]
	0x03BD363C LDP X22, X21, [X31 + 0x20]
	0x03BD3640 LDP X30, X23, [X31 + 0x10]
	0x03BD3644 LDR V8, [X31], #0x40
	0x03BD3648 RET
	0x03BD364C STR X30, [X31 - 0x20]!
	0x03BD3650 STP X20, X19, [X31 + 0x10]
	0x03BD3654 MOV W19, W1
	0x03BD3658 MOV X1, X31
	0x03BD365C MOV X20, X0
	0x03BD3660 BL 0x33BDD8C
	0x03BD3664 STR W19, [X20 + 0x10]
	0x03BD3668 LDP X20, X19, [X31 + 0x10]
	0x03BD366C LDR X30, [X31], #0x20
	0x03BD3670 RET
	0x03BD3674 STR X30, [X31 - 0x20]!
	0x03BD3678 STP X20, X19, [X31 + 0x10]
	0x03BD367C MOV W19, W1
	0x03BD3680 MOV X1, X31
	0x03BD3684 MOV X20, X0
	0x03BD3688 BL 0x33BDD8C
	0x03BD368C STR W19, [X20 + 0x10]
	0x03BD3690 LDP X20, X19, [X31 + 0x10]
	0x03BD3694 LDR X30, [X31], #0x20
	0x03BD3698 RET
	0x03BD369C STP X30, X23, [X31 - 0x30]!
	0x03BD36A0 STP X22, X21, [X31 + 0x10]
	0x03BD36A4 STP X20, X19, [X31 + 0x20]
	0x03BD36A8 ADRP X21, 0x80F000
	0x03BD36AC ADRP X20, 0x54A000
	0x03BD36B0 ADRP X23, 0x58A000
	0x03BD36B4 ADRP X22, 0x58A000
	0x03BD36B8 LDRB W8, [X21 + 0xE62]
	0x03BD36BC LDR X20, [X20 + 0x548]
	0x03BD36C0 LDR X23, [X23 + 0xB58]
	0x03BD36C4 LDR X22, [X22 + 0xB60]
	0x03BD36C8 MOV X19, X0
	0x03BD36CC TBNZ X8, 0x0, 0x3BD36FC
	0x03BD36D0 ADRP X0, 0x54A000
	0x03BD36D4 LDR X0, [X0 + 0x548]
	0x03BD36D8 BL 0x1C16CF4
	0x03BD36DC ADRP X0, 0x58A000
	0x03BD36E0 LDR X0, [X0 + 0xB60]
	0x03BD36E4 BL 0x1C16CF4
	0x03BD36E8 ADRP X0, 0x58A000
	0x03BD36EC LDR X0, [X0 + 0xB58]
	0x03BD36F0 BL 0x1C16CF4
	0x03BD36F4 MOVZ W8, 0x1
	0x03BD36F8 STRB W8, [X21 + 0xE62]
	0x03BD36FC MOVI V0.2S, 0x1
	0x03BD3700 MOVZ W8, 0x1
	0x03BD3704 MOVZ W9, 0x3E800000
	0x03BD3708 STR D0, [X19 + 0x70]
	0x03BD370C FMOV S0, W31
	0x03BD3710 FMOV S1, W31
	0x03BD3714 FMOV S2, 1
	0x03BD3718 FMOV S3, 1
	0x03BD371C MOV X0, X31
	0x03BD3720 STRB W8, [X19 + 0x6A]
	0x03BD3724 STR W9, [X19 + 0x78]
	0x03BD3728 BL 0x3C01424
	0x03BD372C LDR X8, [X20]
	0x03BD3730 MOV X20, X0
	0x03BD3734 MOV X0, X8
	0x03BD3738 BL 0x1C16F10
	0x03BD373C MOV X1, X20
	0x03BD3740 MOV X2, X31
	0x03BD3744 MOV X21, X0
	0x03BD3748 BL 0x3B30FEC
	0x03BD374C STR X21, [X19 + 0x80]
	0x03BD3750 LDR X0, [X23]
	0x03BD3754 BL 0x1C16F10
	0x03BD3758 LDR X1, [X22]
	0x03BD375C MOV X20, X0
	0x03BD3760 BL 0x2DBDE08
	0x03BD3764 STR X20, [X19 + 0xD0]
	0x03BD3768 MOV X0, X19
	0x03BD376C LDP X20, X19, [X31 + 0x20]
	0x03BD3770 LDP X22, X21, [X31 + 0x10]
	0x03BD3774 LDP X30, X23, [X31], #0x30
	0x03BD3778 B 0x3BCD6EC
	0x03BD377C STR X31, [X0 + 0xB8]
	0x03BD3780 RET
	0x03BD3784 STR X31, [X0 + 0xC0]
	0x03BD3788 RET
	0x03BD378C RET
	0x03BD3790 STR D8, [X31 - 0x20]!
	0x03BD3794 STR X30, [X31 + 0x8]
	0x03BD3798 STP X20, X19, [X31 + 0x10]
	0x03BD379C ADRP X20, 0x80F000
	0x03BD37A0 LDRB W8, [X20 + 0xE63]
	0x03BD37A4 MOV X19, X0
	0x03BD37A8 TBNZ X8, 0x0, 0x3BD37C0
	0x03BD37AC ADRP X0, 0x54A000
	0x03BD37B0 LDR X0, [X0 + 0x540]
	0x03BD37B4 BL 0x1C16CF4
	0x03BD37B8 MOVZ W8, 0x1
	0x03BD37BC STRB W8, [X20 + 0xE63]
	0x03BD37C0 LDR W8, [X19 + 0x10]
	0x03BD37C4 LDR X20, [X19 + 0x28]
	0x03BD37C8 CMP W8, 0x2
	0x03BD37CC B.EQ 0x3BD37F0
	0x03BD37D0 CMP W8, 0x1
	0x03BD37D4 B.EQ 0x3BD383C
	0x03BD37D8 CBNZ W8, 0x3BD3834
	0x03BD37DC MOVN W8, 0x0
	0x03BD37E0 STR W31, [X19 + 0x40]
	0x03BD37E4 STR W8, [X19 + 0x10]
	0x03BD37E8 FMOV S0, W31
	0x03BD37EC B 0x3BD3858
	0x03BD37F0 MOVN W8, 0x0
	0x03BD37F4 STR W8, [X19 + 0x10]
	0x03BD37F8 CBZ X20, 0x3BD3918
	0x03BD37FC LDR X8, [X20]
	0x03BD3800 MOV X0, X20
	0x03BD3804 LDR X9, [X8 + 0x248]
	0x03BD3808 LDR X1, [X8 + 0x250]
	0x03BD380C BLR X9
	0x03BD3810 AND X1, X0, 0xFFFF
	0x03BD3814 MOV X0, X20
	0x03BD3818 BL 0x3BCD1F4
	0x03BD381C LDR X8, [X19 + 0x38]
	0x03BD3820 CBZ X8, 0x3BD3834
	0x03BD3824 LDR X9, [X8 + 0x18]
	0x03BD3828 LDR X0, [X8 + 0x40]
	0x03BD382C LDR X1, [X8 + 0x28]
	0x03BD3830 BLR X9
	0x03BD3834 MOV W0, W31
	0x03BD3838 B 0x3BD3908
	0x03BD383C LDR V8, [X19 + 0x40]
	0x03BD3840 MOVN W8, 0x0
	0x03BD3844 MOV X0, X31
	0x03BD3848 STR W8, [X19 + 0x10]
	0x03BD384C BL 0x3C3C714
	0x03BD3850 FADD S0, S8, S0
	0x03BD3854 STR S0, [X19 + 0x40]
	0x03BD3858 LDR V1, [X19 + 0x20]
	0x03BD385C FCMP S0, S1
	0x03BD3860 B.PL 0x3BD38F8
	0x03BD3864 FDIV S0, S0, S1
	0x03BD3868 FMOV S1, 1
	0x03BD386C FMIN S1, S0, S1
	0x03BD3870 FCMP S0, 0x0
	0x03BD3874 FMOV S0, W31
	0x03BD3878 FCSEL S8, S1, S0, PL
	0x03BD387C CBZ X20, 0x3BD3918
	0x03BD3880 LDR X0, [X20 + 0x80]
	0x03BD3884 CBZ X0, 0x3BD3918
	0x03BD3888 ADRP X8, 0x54A000
	0x03BD388C LDR X8, [X8 + 0x540]
	0x03BD3890 LDR X1, [X8]
	0x03BD3894 BL 0x29AD9C0
	0x03BD3898 CBZ X0, 0x3BD3918
	0x03BD389C MOV V0.16B, V8.16B
	0x03BD38A0 MOV X1, X31
	0x03BD38A4 BL 0x3C00CC4
	0x03BD38A8 FMOV S1, 1
	0x03BD38AC MOVZ W8, 0x437F0000
	0x03BD38B0 FCMP S0, 0x0
	0x03BD38B4 FMIN S0, S0, S1
	0x03BD38B8 FMOV S1, W8
	0x03BD38BC FMOV S2, W31
	0x03BD38C0 FMUL S0, S0, S1
	0x03BD38C4 LDRB W1, [X19 + 0x30]
	0x03BD38C8 FCSEL S0, S0, S2, PL

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x810000
	012 Move W8, [X21+3672]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0x58B000
	020 Move X0, [X0+2856]
	021 Call 0x1C17CF4
	022 Move X0, 0x58B000
	023 Move X0, [X0+2864]
	024 Call 0x1C17CF4
	025 Move X0, 0x588000
	026 Move X0, [X0+2912]
	027 Call 0x1C17CF4
	028 Move X0, 0x58B000
	029 Move X0, [X0+2664]
	030 Call 0x1C17CF4
	031 Move X0, 0x58B000
	032 Move X0, [X0+2688]
	033 Call 0x1C17CF4
	034 Move X0, 0x58B000
	035 Move X0, [X0+2704]
	036 Call 0x1C17CF4
	037 Move X0, 0x58B000
	038 Move X0, [X0+2720]
	039 Call 0x1C17CF4
	040 Move X0, 0x58B000
	041 Move X0, [X0+2736]
	042 Call 0x1C17CF4
	043 Move X0, 0x58B000
	044 Move X0, [X0+2744]
	045 Call 0x1C17CF4
	046 Move X0, 0x58B000
	047 Move X0, [X0+2840]
	048 Call 0x1C17CF4
	049 Move X0, 0x58B000
	050 Move X0, [X0+2848]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+3672], W8
	054 Move W8, [X19+106]
	055 Compare W8, 0
	056 JumpIfEqual {76}
	057 Move X8, [X19]
	058 Move X0, X19
	059 Move X9, [X8+584]
	060 Move X1, [X8+592]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 And X1, X0, 0xFFFF
	063 Move X0, X19
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X24, [X31+32]
	069 Move X23, [X31+40]
	070 Move X26, [X31+16]
	071 Move X25, [X31+24]
	072 Move X30, [X31+80]
	073 Move X27, [X31+88]
	074 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	075 Return 
	076 Compare X20, 0
	077 JumpIfEqual {270}
	078 Move X0, X20
	079 Move X1, X31
	080 Call HoverEnterEventArgs.get_interactableObject, X0
	081 Move X23, 0x588000
	082 Move X23, [X23+2912]
	083 Move X1, [X23]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {57}
	087 Move X20, X0
	088 Move X0, [X19+208]
	089 Compare X0, 0
	090 JumpIfEqual {270}
	091 Move X8, 0x58B000
	092 Move X8, [X8+2864]
	093 Move X1, X20
	094 Move X2, [X8]
	095 Call HashSet`1<Object>.Contains, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {57}
	100 Move X0, [X19+208]
	101 Compare X0, 0
	102 JumpIfEqual {270}
	103 Move X8, 0x58B000
	104 Move X8, [X8+2856]
	105 Move X1, X20
	106 Move X2, [X8]
	107 Call HashSet`1<Object>.Add, X0, X1
	108 Move X8, [X20]
	109 Move X1, [X23]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X20
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X20
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X24, 0x58B000
	130 Move X24, [X24+2688]
	131 Move X21, X0
	132 Move X8, [X24]
	133 Move X0, X8
	134 Call 0x1C17F10
	135 Move X25, 0x58B000
	136 Move X25, [X25+2840]
	137 Move X1, X19
	138 Move X3, X31
	139 Move X22, X0
	140 Move X2, [X25]
	141 Call UnityAction`1<Object>..ctor, X0, X1, X2
	142 Compare X21, 0
	143 JumpIfEqual {270}
	144 Move X8, 0x58B000
	145 Move X8, [X8+2736]
	146 Move X0, X21
	147 Move X1, X22
	148 Move X2, [X8]
	149 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	150 Move X8, [X20]
	151 Move X1, [X23]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 1
	162 Move X0, X20
	163 Call 0x1C5D788
	164 Move W9, [X10]
	165 Add W9, W9, 1
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X26, 0x58B000
	173 Move X26, [X26+2664]
	174 Move X21, X0
	175 Move X8, [X26]
	176 Move X0, X8
	177 Call 0x1C17F10
	178 Move X27, 0x58B000
	179 Move X27, [X27+2848]
	180 Move X1, X19
	181 Move X3, X31
	182 Move X22, X0
	183 Move X2, [X27]
	184 Call UnityAction`1<Object>..ctor, X0, X1, X2
	185 Compare X21, 0
	186 JumpIfEqual {270}
	187 Move X8, 0x58B000
	188 Move X8, [X8+2744]
	189 Move X0, X21
	190 Move X1, X22
	191 Move X2, [X8]
	192 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	193 Move X8, [X20]
	194 Move X1, [X23]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move X0, X20
	205 Move W2, W31
	206 Call 0x1C5D788
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Add X8, X8, X9
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X1, [X0+8]
	212 Move X0, X20
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move X8, [X24]
	215 Move X21, X0
	216 Move X0, X8
	217 Call 0x1C17F10
	218 Move X2, [X25]
	219 Move X1, X19
	220 Move X3, X31
	221 Move X22, X0
	222 Call UnityAction`1<Object>..ctor, X0, X1, X2
	223 Compare X21, 0
	224 JumpIfEqual {270}
	225 Move X8, 0x58B000
	226 Move X8, [X8+2720]
	227 Move X0, X21
	228 Move X1, X22
	229 Move X2, [X8]
	230 Call UnityEvent`1<Object>.AddListener, X0, X1
	231 Move X8, [X20]
	232 Move X1, [X23]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move W2, 1
	243 Move X0, X20
	244 Call 0x1C5D788
	245 Move W9, [X10]
	246 Add W9, W9, 1
	247 Add X8, X8, W9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X20
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X8, [X26]
	254 Move X20, X0
	255 Move X0, X8
	256 Call 0x1C17F10
	257 Move X2, [X27]
	258 Move X1, X19
	259 Move X3, X31
	260 Move X21, X0
	261 Call UnityAction`1<Object>..ctor, X0, X1, X2
	262 Compare X20, 0
	263 JumpIfEqual {270}
	264 Move X8, 0x58B000
	265 Move X8, [X8+2704]
	266 Move X0, X20
	267 Move X1, X21
	268 Move X2, [X8]
	269 Call UnityEvent`1<Object>.AddListener, X0, X1
	270 Call 0x1C17F20

Method: System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03BD38CC FCVTZS W8, S0
	0x03BD38D0 FCMP S0, 0x0
	0x03BD38D4 CSEL W8, W8, W8, MI
	0x03BD38D8 AND X8, X8, 0xFF
	0x03BD38DC BFM X1, X8, 0x38, 0x7
	0x03BD38E0 MOV X0, X20
	0x03BD38E4 BL 0x3BCD1F4
	0x03BD38E8 MOVZ W0, 0x1
	0x03BD38EC STR X31, [X19 + 0x18]
	0x03BD38F0 STR W0, [X19 + 0x10]
	0x03BD38F4 B 0x3BD3908
	0x03BD38F8 MOVZ W8, 0x2
	0x03BD38FC STR X31, [X19 + 0x18]
	0x03BD3900 STR W8, [X19 + 0x10]
	0x03BD3904 MOVZ W0, 0x1
	0x03BD3908 LDP X20, X19, [X31 + 0x10]
	0x03BD390C LDR X30, [X31 + 0x8]
	0x03BD3910 LDR V8, [X31], #0x20
	0x03BD3914 RET
	0x03BD3918 BL 0x1C16F20
	0x03BD391C LDR X0, [X0 + 0x18]
	0x03BD3920 RET
	0x03BD3924 STP X30, X19, [X31 - 0x10]!
	0x03BD3928 ADRP X0, 0x520000
	0x03BD392C LDR X0, [X0 + 0xB40]
	0x03BD3930 BL 0x1C16D08
	0x03BD3934 BL 0x1C16F10
	0x03BD3938 MOV X1, X31
	0x03BD393C MOV X19, X0
	0x03BD3940 BL 0x3380310
	0x03BD3944 ADRP X0, 0x58A000
	0x03BD3948 LDR X0, [X0 + 0xB68]
	0x03BD394C BL 0x1C16D08
	0x03BD3950 MOV X1, X0
	0x03BD3954 MOV X0, X19
	0x03BD3958 BL 0x1C16DEC
	0x03BD395C LDR X0, [X0 + 0x18]
	0x03BD3960 RET
	0x03BD3964 RET
	0x03BD3968 SUB X31, X31, 0x1F0
	0x03BD396C STR X29, [X31 + 0x1C0]
	0x03BD3970 STP X30, X21, [X31 + 0x1D0]
	0x03BD3974 STP X20, X19, [X31 + 0x1E0]
	0x03BD3978 ADRP X21, 0x80F000
	0x03BD397C LDRB W8, [X21 + 0xE64]
	0x03BD3980 MOV X19, X0
	0x03BD3984 ADD X20, X31, 0x160
	0x03BD3988 TBNZ X8, 0x0, 0x3BD39A0
	0x03BD398C ADRP X0, 0x588000
	0x03BD3990 LDR X0, [X0 + 0x258]
	0x03BD3994 BL 0x1C16CF4
	0x03BD3998 MOVZ W8, 0x1
	0x03BD399C STRB W8, [X21 + 0xE64]
	0x03BD39A0 MOVI V0.2D, 0x0
	0x03BD39A4 ADD X0, X31, 0x8
	0x03BD39A8 MOVZ W2, 0x158
	0x03BD39AC MOV W1, W31
	0x03BD39B0 STR W31, [X31 + 0x1BC]
	0x03BD39B4 STP V0, V0, [X20 + 0x30]
	0x03BD39B8 STP V0, V0, [X20 + 0x10]
	0x03BD39BC STR V0, [X20]
	0x03BD39C0 BL 0x3EB1B10
	0x03BD39C4 LDR W8, [X19 + 0x10]
	0x03BD39C8 CMP W8, 0x1
	0x03BD39CC B.EQ 0x3BD39DC
	0x03BD39D0 MOV W0, W31
	0x03BD39D4 CBZ W8, 0x3BD3AFC
	0x03BD39D8 B 0x3BD3B08
	0x03BD39DC LDR X20, [X19 + 0x20]
	0x03BD39E0 MOVN W8, 0x0
	0x03BD39E4 STR W8, [X19 + 0x10]
	0x03BD39E8 CBZ X20, 0x3BD3B1C
	0x03BD39EC LDRB W8, [X20 + 0xB1]
	0x03BD39F0 CBZ W8, 0x3BD3AFC
	0x03BD39F4 LDRB W8, [X20 + 0x68]
	0x03BD39F8 CBZ W8, 0x3BD3A0C
	0x03BD39FC LDRB W8, [X20 + 0x69]
	0x03BD3A00 CBZ W8, 0x3BD3A0C
	0x03BD3A04 MOV W8, W31
	0x03BD3A08 B 0x3BD3A94
	0x03BD3A0C LDR X0, [X20 + 0xA8]
	0x03BD3A10 CBZ X0, 0x3BD3B1C
	0x03BD3A14 ADD X1, X31, 0x160
	0x03BD3A18 ADD X2, X31, 0x1BC
	0x03BD3A1C MOV X3, X31
	0x03BD3A20 BL 0x3B61B5C
	0x03BD3A24 LDR W9, [X31 + 0x1BC]
	0x03BD3A28 MOV W8, W31
	0x03BD3A2C CBZ W9, 0x3BD3A9C
	0x03BD3A30 MOV W9, W8
	0x03BD3A34 TBZ X0, 0x0, 0x3BD3AB0
	0x03BD3A38 LDRB W8, [X20 + 0x69]
	0x03BD3A3C CBNZ W8, 0x3BD3A88
	0x03BD3A40 LDRB W8, [X20 + 0x6C]
	0x03BD3A44 CBNZ W8, 0x3BD3A88
	0x03BD3A48 LDR X0, [X20 + 0xA8]
	0x03BD3A4C CBZ X0, 0x3BD3B1C
	0x03BD3A50 ADD X1, X31, 0x8
	0x03BD3A54 MOV X2, X31
	0x03BD3A58 BL 0x3B61A38
	0x03BD3A5C TBZ X0, 0x0, 0x3BD3A88
	0x03BD3A60 ADRP X8, 0x588000
	0x03BD3A64 LDR X8, [X8 + 0x258]
	0x03BD3A68 LDR X0, [X8]
	0x03BD3A6C LDR W8, [X0 + 0xE0]
	0x03BD3A70 CBNZ W8, 0x3BD3A78
	0x03BD3A74 BL 0x1C16DFC
	0x03BD3A78 LDRB W8, [X31 + 0xAC]
	0x03BD3A7C CMP W8, 0x0
	0x03BD3A80 CSET W8, NE
	0x03BD3A84 B 0x3BD3A8C
	0x03BD3A88 MOV W8, W31
	0x03BD3A8C LDRB W9, [X20 + 0x68]
	0x03BD3A90 CBZ W9, 0x3BD3AA4
	0x03BD3A94 MOV W9, W31
	0x03BD3A98 B 0x3BD3AB0
	0x03BD3A9C MOV W9, W8
	0x03BD3AA0 B 0x3BD3AB0
	0x03BD3AA4 LDRB W9, [X20 + 0x6B]
	0x03BD3AA8 CMP W9, 0x0
	0x03BD3AAC CSET W9, EQ
	0x03BD3AB0 LDRB W10, [X20 + 0xD8]
	0x03BD3AB4 CMP W10, W9
	0x03BD3AB8 B.NE 0x3BD3AD4
	0x03BD3ABC LDRB W10, [X20 + 0xD9]
	0x03BD3AC0 STRB W9, [X20 + 0xD8]
	0x03BD3AC4 STRB W8, [X20 + 0xD9]
	0x03BD3AC8 CMP W10, W8
	0x03BD3ACC B.NE 0x3BD3ADC
	0x03BD3AD0 B 0x3BD3AFC
	0x03BD3AD4 STRB W9, [X20 + 0xD8]
	0x03BD3AD8 STRB W8, [X20 + 0xD9]
	0x03BD3ADC LDR X8, [X20]
	0x03BD3AE0 MOV X0, X20
	0x03BD3AE4 LDR X9, [X8 + 0x248]
	0x03BD3AE8 LDR X1, [X8 + 0x250]
	0x03BD3AEC BLR X9
	0x03BD3AF0 AND X1, X0, 0xFFFF
	0x03BD3AF4 MOV X0, X20
	0x03BD3AF8 BL 0x3BCD1F4
	0x03BD3AFC MOVZ W0, 0x1
	0x03BD3B00 STR X31, [X19 + 0x18]
	0x03BD3B04 STR W0, [X19 + 0x10]
	0x03BD3B08 LDP X20, X19, [X31 + 0x1E0]
	0x03BD3B0C LDP X30, X21, [X31 + 0x1D0]
	0x03BD3B10 LDR X29, [X31 + 0x1C0]
	0x03BD3B14 ADD X31, X31, 0x1F0
	0x03BD3B18 RET
	0x03BD3B1C BL 0x1C16F20
	0x03BD3B20 LDR X0, [X0 + 0x18]
	0x03BD3B24 RET
	0x03BD3B28 STP X30, X19, [X31 - 0x10]!
	0x03BD3B2C ADRP X0, 0x520000
	0x03BD3B30 LDR X0, [X0 + 0xB40]
	0x03BD3B34 BL 0x1C16D08
	0x03BD3B38 BL 0x1C16F10
	0x03BD3B3C MOV X1, X31
	0x03BD3B40 MOV X19, X0
	0x03BD3B44 BL 0x3380310

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x810000
	008 Move W8, [X21+3673]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x58B000
	016 Move X0, [X0+2864]
	017 Call 0x1C17CF4
	018 Move X0, 0x58B000
	019 Move X0, [X0+2872]
	020 Call 0x1C17CF4
	021 Move X0, 0x588000
	022 Move X0, [X0+2912]
	023 Call 0x1C17CF4
	024 Move X0, 0x58B000
	025 Move X0, [X0+2664]
	026 Call 0x1C17CF4
	027 Move X0, 0x58B000
	028 Move X0, [X0+2688]
	029 Call 0x1C17CF4
	030 Move X0, 0x58B000
	031 Move X0, [X0+2736]
	032 Call 0x1C17CF4
	033 Move X0, 0x58B000
	034 Move X0, [X0+2744]
	035 Call 0x1C17CF4
	036 Move X0, 0x58B000
	037 Move X0, [X0+2840]
	038 Call 0x1C17CF4
	039 Move X0, 0x58B000
	040 Move X0, [X0+2848]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+3673], W8
	044 Compare X20, 0
	045 JumpIfEqual {176}
	046 Move X23, 0x588000
	047 Move X23, [X23+2912]
	048 Move X0, X20
	049 Move X1, X31
	050 Call HoverExitEventArgs.get_interactableObject, X0
	051 Move X1, [X23]
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfEqual {161}
	055 Move X20, X0
	056 Move X0, [X19+208]
	057 Compare X0, 0
	058 JumpIfEqual {176}
	059 Move X8, 0x58B000
	060 Move X8, [X8+2864]
	061 Move X1, X20
	062 Move X2, [X8]
	063 Call HashSet`1<Object>.Contains, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {161}
	068 Move X0, [X19+208]
	069 Compare X0, 0
	070 JumpIfEqual {176}
	071 Move X8, 0x58B000
	072 Move X8, [X8+2872]
	073 Move X1, X20
	074 Move X2, [X8]
	075 Call HashSet`1<Object>.Remove, X0, X1
	076 Move X8, [X20]
	077 Move X1, [X23]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X20
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, 0x58B000
	098 Move X8, [X8+2688]
	099 Move X21, X0
	100 Move X8, [X8]
	101 Move X0, X8
	102 Call 0x1C17F10
	103 Move X8, 0x58B000
	104 Move X8, [X8+2840]
	105 Move X1, X19
	106 Move X3, X31
	107 Move X22, X0
	108 Move X2, [X8]
	109 Call UnityAction`1<Object>..ctor, X0, X1, X2
	110 Compare X21, 0
	111 JumpIfEqual {176}
	112 Move X8, 0x58B000
	113 Move X8, [X8+2736]
	114 Move X0, X21
	115 Move X1, X22
	116 Move X2, [X8]
	117 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	118 Move X8, [X20]
	119 Move X1, [X23]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move W2, 1
	130 Move X0, X20
	131 Call 0x1C5D788
	132 Move W9, [X10]
	133 Add W9, W9, 1
	134 Add X8, X8, W9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X8, 0x58B000
	141 Move X8, [X8+2664]
	142 Move X20, X0
	143 Move X8, [X8]
	144 Move X0, X8
	145 Call 0x1C17F10
	146 Move X8, 0x58B000
	147 Move X8, [X8+2848]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X21, X0
	151 Move X2, [X8]
	152 Call UnityAction`1<Object>..ctor, X0, X1, X2
	153 Compare X20, 0
	154 JumpIfEqual {176}
	155 Move X8, 0x58B000
	156 Move X8, [X8+2744]
	157 Move X0, X20
	158 Move X1, X21
	159 Move X2, [X8]
	160 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	161 Move X8, [X19]
	162 Move X0, X19
	163 Move X9, [X8+584]
	164 Move X1, [X8+592]
	165 NotImplemented "Instruction BLR not yet implemented."
	166 And X1, X0, 0xFFFF
	167 Move X0, X19
	168 Move X20, [X31+32]
	169 Move X19, [X31+40]
	170 Move X22, [X31+16]
	171 Move X21, [X31+24]
	172 Move X30, [X31+48]
	173 Move X23, [X31+56]
	174 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	175 Return 
	176 Call 0x1C17F20

Method: System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03BD3B48 ADRP X0, 0x58A000
	0x03BD3B4C LDR X0, [X0 + 0xB70]
	0x03BD3B50 BL 0x1C16D08
	0x03BD3B54 MOV X1, X0
	0x03BD3B58 MOV X0, X19
	0x03BD3B5C BL 0x1C16DEC
	0x03BD3B60 LDR X0, [X0 + 0x18]
	0x03BD3B64 RET
	0x03BD3B68 LDR X0, [X0 + 0x20]
	0x03BD3B6C RET
	0x03BD3B70 STR X1, [X0 + 0x20]
	0x03BD3B74 RET
	0x03BD3B78 LDR W0, [X0 + 0x28]
	0x03BD3B7C RET
	0x03BD3B80 STR W1, [X0 + 0x28]
	0x03BD3B84 RET
	0x03BD3B88 LDRB W0, [X0 + 0x2C]
	0x03BD3B8C RET
	0x03BD3B90 AND W8, W1, 0x1
	0x03BD3B94 STRB W8, [X0 + 0x2C]
	0x03BD3B98 RET
	0x03BD3B9C STP X30, X21, [X31 - 0x20]!
	0x03BD3BA0 STP X20, X19, [X31 + 0x10]
	0x03BD3BA4 ADRP X20, 0x80F000
	0x03BD3BA8 LDRB W8, [X20 + 0xE65]
	0x03BD3BAC MOV X19, X0
	0x03BD3BB0 TBNZ X8, 0x0, 0x3BD3C10
	0x03BD3BB4 ADRP X0, 0x58A000
	0x03BD3BB8 LDR X0, [X0 + 0xB78]
	0x03BD3BBC BL 0x1C16CF4
	0x03BD3BC0 ADRP X0, 0x520000
	0x03BD3BC4 LDR X0, [X0 + 0x598]
	0x03BD3BC8 BL 0x1C16CF4
	0x03BD3BCC ADRP X0, 0x54A000
	0x03BD3BD0 LDR X0, [X0 + 0x1E8]
	0x03BD3BD4 BL 0x1C16CF4
	0x03BD3BD8 ADRP X0, 0x58A000
	0x03BD3BDC LDR X0, [X0 + 0xB80]
	0x03BD3BE0 BL 0x1C16CF4
	0x03BD3BE4 ADRP X0, 0x58A000
	0x03BD3BE8 LDR X0, [X0 + 0xB88]
	0x03BD3BEC BL 0x1C16CF4
	0x03BD3BF0 ADRP X0, 0x58A000
	0x03BD3BF4 LDR X0, [X0 + 0xB90]
	0x03BD3BF8 BL 0x1C16CF4
	0x03BD3BFC ADRP X0, 0x58A000
	0x03BD3C00 LDR X0, [X0 + 0xB98]
	0x03BD3C04 BL 0x1C16CF4
	0x03BD3C08 MOVZ W8, 0x1
	0x03BD3C0C STRB W8, [X20 + 0xE65]
	0x03BD3C10 LDRB W8, [X19 + 0x2C]
	0x03BD3C14 CBZ W8, 0x3BD3C24
	0x03BD3C18 LDP X20, X19, [X31 + 0x10]
	0x03BD3C1C LDP X30, X21, [X31], #0x20
	0x03BD3C20 RET
	0x03BD3C24 ADRP X21, 0x520000
	0x03BD3C28 LDR X21, [X21 + 0x598]
	0x03BD3C2C LDR X20, [X19 + 0x20]
	0x03BD3C30 LDR X0, [X21]
	0x03BD3C34 LDR W8, [X0 + 0xE0]
	0x03BD3C38 CBNZ W8, 0x3BD3C40
	0x03BD3C3C BL 0x1C16DFC
	0x03BD3C40 MOV X0, X20
	0x03BD3C44 MOV X1, X31
	0x03BD3C48 MOV X2, X31
	0x03BD3C4C BL 0x3C3883C
	0x03BD3C50 TBZ X0, 0x0, 0x3BD3C74
	0x03BD3C54 ADRP X8, 0x58A000
	0x03BD3C58 LDR X8, [X8 + 0xB78]
	0x03BD3C5C MOV X0, X19
	0x03BD3C60 LDR X1, [X8]
	0x03BD3C64 BL 0x21A3F50
	0x03BD3C68 MOV X20, X0
	0x03BD3C6C STR X0, [X19 + 0x20]
	0x03BD3C70 B 0x3BD3C78
	0x03BD3C74 LDR X20, [X19 + 0x20]
	0x03BD3C78 LDR X0, [X21]
	0x03BD3C7C LDR W8, [X0 + 0xE0]
	0x03BD3C80 CBNZ W8, 0x3BD3C88
	0x03BD3C84 BL 0x1C16DFC
	0x03BD3C88 MOV X0, X20
	0x03BD3C8C MOV X1, X31
	0x03BD3C90 MOV X2, X31
	0x03BD3C94 BL 0x3C3883C
	0x03BD3C98 TBZ X0, 0x0, 0x3BD3CA8
	0x03BD3C9C ADRP X8, 0x58A000
	0x03BD3CA0 LDR X8, [X8 + 0xB88]
	0x03BD3CA4 B 0x3BD3D54
	0x03BD3CA8 LDR X0, [X19 + 0x20]
	0x03BD3CAC CBZ X0, 0x3BD3DC4
	0x03BD3CB0 MOV X1, X31
	0x03BD3CB4 BL 0x3C1351C
	0x03BD3CB8 CBZ X0, 0x3BD3DC4
	0x03BD3CBC LDR X8, [X0 + 0x18]
	0x03BD3CC0 CBZ X8, 0x3BD3D4C
	0x03BD3CC4 LDR X0, [X19 + 0x20]
	0x03BD3CC8 CBZ X0, 0x3BD3DC4
	0x03BD3CCC LDR W20, [X19 + 0x28]
	0x03BD3CD0 MOV X1, X31
	0x03BD3CD4 BL 0x3C1351C
	0x03BD3CD8 CBZ X0, 0x3BD3DC4
	0x03BD3CDC LDR W8, [X0 + 0x18]
	0x03BD3CE0 CMP W20, W8
	0x03BD3CE4 B.LE 0x3BD3DAC
	0x03BD3CE8 ADRP X8, 0x58A000
	0x03BD3CEC LDR X8, [X8 + 0xB98]
	0x03BD3CF0 MOV X1, X19
	0x03BD3CF4 MOV X2, X31
	0x03BD3CF8 LDR X0, [X8]
	0x03BD3CFC BL 0x321EFD0
	0x03BD3D00 ADRP X8, 0x58A000
	0x03BD3D04 LDR X8, [X8 + 0xB90]
	0x03BD3D08 MOV X2, X31
	0x03BD3D0C LDR X1, [X8]
	0x03BD3D10 BL 0x321B938
	0x03BD3D14 ADRP X8, 0x54A000
	0x03BD3D18 LDR X8, [X8 + 0x1E8]
	0x03BD3D1C MOV X20, X0
	0x03BD3D20 LDR X8, [X8]
	0x03BD3D24 LDR W9, [X8 + 0xE0]
	0x03BD3D28 CBNZ W9, 0x3BD3D34
	0x03BD3D2C MOV X0, X8
	0x03BD3D30 BL 0x1C16DFC
	0x03BD3D34 MOV X0, X20
	0x03BD3D38 MOV X1, X19
	0x03BD3D3C MOV X2, X31
	0x03BD3D40 BL 0x3B2EE8C
	0x03BD3D44 STR W31, [X19 + 0x28]
	0x03BD3D48 B 0x3BD3C18
	0x03BD3D4C ADRP X8, 0x58A000
	0x03BD3D50 LDR X8, [X8 + 0xB80]
	0x03BD3D54 LDR X0, [X8]
	0x03BD3D58 MOV X1, X19
	0x03BD3D5C MOV X2, X31
	0x03BD3D60 BL 0x321EFD0
	0x03BD3D64 ADRP X8, 0x54A000
	0x03BD3D68 LDR X8, [X8 + 0x1E8]
	0x03BD3D6C MOV X20, X0
	0x03BD3D70 LDR X8, [X8]
	0x03BD3D74 LDR W9, [X8 + 0xE0]
	0x03BD3D78 CBNZ W9, 0x3BD3D84
	0x03BD3D7C MOV X0, X8
	0x03BD3D80 BL 0x1C16DFC
	0x03BD3D84 MOV X0, X20
	0x03BD3D88 MOV X1, X19
	0x03BD3D8C MOV X2, X31
	0x03BD3D90 BL 0x3B2EF38
	0x03BD3D94 MOV X0, X19
	0x03BD3D98 LDP X20, X19, [X31 + 0x10]
	0x03BD3D9C MOV W1, W31
	0x03BD3DA0 MOV X2, X31
	0x03BD3DA4 LDP X30, X21, [X31], #0x20
	0x03BD3DA8 B 0x3C32410
	0x03BD3DAC LDR X8, [X19]
	0x03BD3DB0 MOV X0, X19
	0x03BD3DB4 LDP X20, X19, [X31 + 0x10]
	0x03BD3DB8 LDP X2, X1, [X8 + 0x178]
	0x03BD3DBC LDP X30, X21, [X31], #0x20
	0x03BD3DC0 BR X2
	0x03BD3DC4 BL 0x1C16F20
	0x03BD3DC8 MOVZ W8, 0x1
	0x03BD3DCC STRB W8, [X0 + 0x2C]
	0x03BD3DD0 RET
	0x03BD3DD4 STP X30, X19, [X31 - 0x10]!
	0x03BD3DD8 MOV X19, X0
	0x03BD3DDC LDR X0, [X0 + 0x20]
	0x03BD3DE0 CBZ X0, 0x3BD3E10
	0x03BD3DE4 MOV X1, X31
	0x03BD3DE8 BL 0x3C1351C
	0x03BD3DEC CBZ X0, 0x3BD3E10
	0x03BD3DF0 LDRSW X8, [X19 + 0x28]
	0x03BD3DF4 LDR W9, [X0 + 0x18]
	0x03BD3DF8 CMP W8, W9
	0x03BD3DFC B.CS 0x3BD3E14
	0x03BD3E00 ADD X8, X0, X8, 0x3, LSL
	0x03BD3E04 LDR X0, [X8 + 0x20]
	0x03BD3E08 LDP X30, X19, [X31], #0x10
	0x03BD3E0C RET
	0x03BD3E10 BL 0x1C16F20
	0x03BD3E14 BL 0x1C16F28
	0x03BD3E18 MOV X1, X31
	0x03BD3E1C B 0x3C36C30
	0x03BD3E20 STP X30, X21, [X31 - 0x20]!
	0x03BD3E24 STP X20, X19, [X31 + 0x10]
	0x03BD3E28 ADRP X20, 0x80F000
	0x03BD3E2C ADRP X21, 0x520000
	0x03BD3E30 LDRB W8, [X20 + 0xE66]
	0x03BD3E34 LDR X21, [X21 + 0x598]
	0x03BD3E38 MOV X19, X0
	0x03BD3E3C TBNZ X8, 0x0, 0x3BD3E54
	0x03BD3E40 ADRP X0, 0x520000
	0x03BD3E44 LDR X0, [X0 + 0x598]
	0x03BD3E48 BL 0x1C16CF4
	0x03BD3E4C MOVZ W8, 0x1
	0x03BD3E50 STRB W8, [X20 + 0xE66]
	0x03BD3E54 LDR X0, [X21]
	0x03BD3E58 LDR X20, [X19 + 0x30]
	0x03BD3E5C LDR W8, [X0 + 0xE0]
	0x03BD3E60 CBNZ W8, 0x3BD3E68
	0x03BD3E64 BL 0x1C16DFC
	0x03BD3E68 MOV X0, X20
	0x03BD3E6C MOV X1, X31
	0x03BD3E70 MOV X2, X31
	0x03BD3E74 BL 0x3C354F8
	0x03BD3E78 TBZ X0, 0x0, 0x3BD3EA0
	0x03BD3E7C LDR X0, [X21]
	0x03BD3E80 LDR X20, [X19 + 0x30]
	0x03BD3E84 LDR W8, [X0 + 0xE0]
	0x03BD3E88 CBNZ W8, 0x3BD3E90
	0x03BD3E8C BL 0x1C16DFC
	0x03BD3E90 MOV X0, X20
	0x03BD3E94 MOV X1, X31
	0x03BD3E98 BL 0x3C394A8
	0x03BD3E9C STR X31, [X19 + 0x30]
	0x03BD3EA0 LDP X20, X19, [X31 + 0x10]
	0x03BD3EA4 LDP X30, X21, [X31], #0x20
	0x03BD3EA8 RET
	0x03BD3EAC LDRB W8, [X0 + 0x2C]
	0x03BD3EB0 CBZ W8, 0x3BD3EBC
	0x03BD3EB4 LDR X9, [X0 + 0x30]
	0x03BD3EB8 B 0x3BD3EC0
	0x03BD3EBC MOV X9, X31
	0x03BD3EC0 CMP W8, 0x0
	0x03BD3EC4 CSET W0, NE
	0x03BD3EC8 STR X9, [X1]
	0x03BD3ECC RET
	0x03BD3ED0 STR X30, [X31 - 0x30]!
	0x03BD3ED4 STP X22, X21, [X31 + 0x10]
	0x03BD3ED8 STP X20, X19, [X31 + 0x20]
	0x03BD3EDC ADRP X21, 0x80F000
	0x03BD3EE0 ADRP X20, 0x520000
	0x03BD3EE4 LDRB W8, [X21 + 0xE67]
	0x03BD3EE8 LDR X20, [X20 + 0x598]
	0x03BD3EEC MOV X19, X0
	0x03BD3EF0 TBNZ X8, 0x0, 0x3BD3F14
	0x03BD3EF4 ADRP X0, 0x524000
	0x03BD3EF8 LDR X0, [X0 + 0xCA0]
	0x03BD3EFC BL 0x1C16CF4
	0x03BD3F00 ADRP X0, 0x520000
	0x03BD3F04 LDR X0, [X0 + 0x598]
	0x03BD3F08 BL 0x1C16CF4
	0x03BD3F0C MOVZ W8, 0x1
	0x03BD3F10 STRB W8, [X21 + 0xE67]
	0x03BD3F14 LDR X0, [X20]
	0x03BD3F18 LDR X20, [X19 + 0x30]
	0x03BD3F1C LDR W8, [X0 + 0xE0]
	0x03BD3F20 CBNZ W8, 0x3BD3F28
	0x03BD3F24 BL 0x1C16DFC
	0x03BD3F28 MOV X0, X20
	0x03BD3F2C MOV X1, X31
	0x03BD3F30 MOV X2, X31
	0x03BD3F34 BL 0x3C3883C
	0x03BD3F38 TBZ X0, 0x0, 0x3BD3FDC
	0x03BD3F3C LDR X0, [X19 + 0x20]
	0x03BD3F40 CBZ X0, 0x3BD3FEC
	0x03BD3F44 MOV X1, X31
	0x03BD3F48 BL 0x3C1351C
	0x03BD3F4C CBZ X0, 0x3BD3FEC
	0x03BD3F50 LDRSW X8, [X19 + 0x28]
	0x03BD3F54 LDR W9, [X0 + 0x18]
	0x03BD3F58 MOV X20, X0
	0x03BD3F5C CMP W8, W9
	0x03BD3F60 B.CS 0x3BD3FF0
	0x03BD3F64 ADRP X9, 0x524000
	0x03BD3F68 LDR X9, [X9 + 0xCA0]
	0x03BD3F6C ADD X8, X20, X8, 0x3, LSL
	0x03BD3F70 LDR X22, [X8 + 0x20]
	0x03BD3F74 LDR X0, [X9]
	0x03BD3F78 BL 0x1C16F10
	0x03BD3F7C MOV X1, X22
	0x03BD3F80 MOV X2, X31
	0x03BD3F84 MOV X21, X0
	0x03BD3F88 BL 0x3C145DC
	0x03BD3F8C LDRSW X22, [X19 + 0x28]
	0x03BD3F90 STR X21, [X19 + 0x30]
	0x03BD3F94 CBZ X21, 0x3BD3FAC
	0x03BD3F98 LDR X8, [X20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x810000
	012 Move W8, [X21+3674]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x58B000
	020 Move X0, [X0+2856]
	021 Call 0x1C17CF4
	022 Move X0, 0x58B000
	023 Move X0, [X0+2864]
	024 Call 0x1C17CF4
	025 Move X0, 0x588000
	026 Move X0, [X0+2912]
	027 Call 0x1C17CF4
	028 Move X0, 0x528000
	029 Move X0, [X0+1208]
	030 Call 0x1C17CF4
	031 Move X0, 0x58B000
	032 Move X0, [X0+2664]
	033 Call 0x1C17CF4
	034 Move X0, 0x58B000
	035 Move X0, [X0+2688]
	036 Call 0x1C17CF4
	037 Move X0, 0x58B000
	038 Move X0, [X0+2704]
	039 Call 0x1C17CF4
	040 Move X0, 0x58B000
	041 Move X0, [X0+2720]
	042 Call 0x1C17CF4
	043 Move X0, 0x58B000
	044 Move X0, [X0+2736]
	045 Call 0x1C17CF4
	046 Move X0, 0x58B000
	047 Move X0, [X0+2744]
	048 Call 0x1C17CF4
	049 Move X0, 0x58B000
	050 Move X0, [X0+2840]
	051 Call 0x1C17CF4
	052 Move X0, 0x58B000
	053 Move X0, [X0+2848]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+3674], W8
	057 Move W8, [X19+106]
	058 Compare W8, 0
	059 JumpIfEqual {94}
	060 Move W8, [X19+105]
	061 Compare W8, 0
	062 JumpIfNotEqual {75}
	063 Move W8, [X19+109]
	064 Compare W8, 0
	065 JumpIfNotEqual {75}
	066 Move W8, [X19+112]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, 0x528000
	069 Move X8, [X8+1208]
	070 Move V0, [X19+120]
	071 Move X8, [X8]
	072 Move X8, [X8+184]
	073 Move V1, [X8]
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+584]
	078 Move X1, [X8+592]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 And X1, X0, 0xFFFF
	081 Move X0, X19
	082 Move X20, [X31+64]
	083 Move X19, [X31+72]
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X24, [X31+32]
	087 Move X23, [X31+40]
	088 Move X26, [X31+16]
	089 Move X25, [X31+24]
	090 Move X30, [X31+80]
	091 Move X27, [X31+88]
	092 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	093 Return 
	094 Compare X20, 0
	095 JumpIfEqual {303}
	096 Move X0, X20
	097 Move X1, X31
	098 Call SelectEnterEventArgs.get_interactableObject, X0
	099 Move X23, 0x588000
	100 Move X23, [X23+2912]
	101 Move X1, [X23]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {60}
	105 Move X20, X0
	106 Move X0, [X19+208]
	107 Compare X0, 0
	108 JumpIfEqual {303}
	109 Move X8, 0x58B000
	110 Move X8, [X8+2864]
	111 Move X1, X20
	112 Move X2, [X8]
	113 Call HashSet`1<Object>.Contains, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {60}
	118 Move X0, [X19+208]
	119 Compare X0, 0
	120 JumpIfEqual {303}
	121 Move X8, 0x58B000
	122 Move X8, [X8+2856]
	123 Move X1, X20
	124 Move X2, [X8]
	125 Call HashSet`1<Object>.Add, X0, X1
	126 Move X8, [X20]
	127 Move X1, [X23]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X20
	138 Move W2, W31
	139 Call 0x1C5D788
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X20
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X24, 0x58B000
	148 Move X24, [X24+2688]
	149 Move X21, X0
	150 Move X8, [X24]
	151 Move X0, X8
	152 Call 0x1C17F10
	153 Move X25, 0x58B000
	154 Move X25, [X25+2840]
	155 Move X1, X19
	156 Move X3, X31
	157 Move X22, X0
	158 Move X2, [X25]
	159 Call UnityAction`1<Object>..ctor, X0, X1, X2
	160 Compare X21, 0
	161 JumpIfEqual {303}
	162 Move X8, 0x58B000
	163 Move X8, [X8+2736]
	164 Move X0, X21
	165 Move X1, X22
	166 Move X2, [X8]
	167 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	168 Move X8, [X20]
	169 Move X1, [X23]
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move W2, 1
	180 Move X0, X20
	181 Call 0x1C5D788
	182 Move W9, [X10]
	183 Add W9, W9, 1
	184 Add X8, X8, W9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X20
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X26, 0x58B000
	191 Move X26, [X26+2664]
	192 Move X21, X0
	193 Move X8, [X26]
	194 Move X0, X8
	195 Call 0x1C17F10
	196 Move X27, 0x58B000
	197 Move X27, [X27+2848]
	198 Move X1, X19
	199 Move X3, X31
	200 Move X22, X0
	201 Move X2, [X27]
	202 Call UnityAction`1<Object>..ctor, X0, X1, X2
	203 Compare X21, 0
	204 JumpIfEqual {303}
	205 Move X8, 0x58B000
	206 Move X8, [X8+2744]
	207 Move X0, X21
	208 Move X1, X22
	209 Move X2, [X8]
	210 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	211 Move X8, [X20]
	212 Move X1, [X23]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Compare X9, 0
	215 JumpIfEqual {222}
	216 Move X10, [X8+176]
	217 Add X10, X10, 8
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Subtract X9, X9, 1
	221 Add X10, X10, 16
	222 Move X0, X20
	223 Move W2, W31
	224 Call 0x1C5D788
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Add X8, X8, X9
	227 Add X0, X8, 312
	228 Move X8, [X0]
	229 Move X1, [X0+8]
	230 Move X0, X20
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move X8, [X24]
	233 Move X21, X0
	234 Move X0, X8
	235 Call 0x1C17F10
	236 Move X2, [X25]
	237 Move X1, X19
	238 Move X3, X31
	239 Move X22, X0
	240 Call UnityAction`1<Object>..ctor, X0, X1, X2
	241 Compare X21, 0
	242 JumpIfEqual {303}
	243 Move X8, 0x58B000
	244 Move X8, [X8+2720]
	245 Move X0, X21
	246 Move X1, X22
	247 Move X2, [X8]
	248 Call UnityEvent`1<Object>.AddListener, X0, X1
	249 Move X8, [X20]
	250 Move X1, [X23]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move W2, 1
	261 Move X0, X20
	262 Call 0x1C5D788
	263 Move W9, [X10]
	264 Add W9, W9, 1
	265 Add X8, X8, W9
	266 Add X0, X8, 312
	267 Move X8, [X0]
	268 Move X1, [X0+8]
	269 Move X0, X20
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move X8, [X26]
	272 Move X20, X0
	273 Move X0, X8
	274 Call 0x1C17F10
	275 Move X2, [X27]
	276 Move X1, X19
	277 Move X3, X31
	278 Move X21, X0
	279 Call UnityAction`1<Object>..ctor, X0, X1, X2
	280 Compare X20, 0
	281 JumpIfEqual {303}
	282 Move X8, 0x58B000
	283 Move X8, [X8+2704]
	284 Move X0, X20
	285 Move X1, X21
	286 Move X2, [X8]
	287 Call UnityEvent`1<Object>.AddListener, X0, X1
	288 Move X8, [X19]
	289 Move X0, X19
	290 Move X20, [X31+64]
	291 Move X19, [X31+72]
	292 Move X22, [X31+48]
	293 Move X21, [X31+56]
	294 Move X2, [X8+712]
	295 Move X1, [X8+720]
	296 Move X24, [X31+32]
	297 Move X23, [X31+40]
	298 Move X26, [X31+16]
	299 Move X25, [X31+24]
	300 Move X30, [X31+80]
	301 Move X27, [X31+88]
	302 CallNoReturn X2
	303 Call 0x1C17F20

Method: System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03BD3F9C MOV X0, X21
	0x03BD3FA0 LDR X1, [X8 + 0x40]
	0x03BD3FA4 BL 0x1C16E00
	0x03BD3FA8 CBZ X0, 0x3BD3FF4
	0x03BD3FAC LDR W8, [X20 + 0x18]
	0x03BD3FB0 CMP W22, W8
	0x03BD3FB4 B.CS 0x3BD3FF0
	0x03BD3FB8 ADD X8, X20, X22, 0x3, LSL
	0x03BD3FBC STR X21, [X8 + 0x20]
	0x03BD3FC0 LDR X0, [X19 + 0x20]
	0x03BD3FC4 CBZ X0, 0x3BD3FEC
	0x03BD3FC8 MOV X1, X20
	0x03BD3FCC MOV X2, X31
	0x03BD3FD0 BL 0x3C13558
	0x03BD3FD4 MOVZ W8, 0x1
	0x03BD3FD8 STRB W8, [X19 + 0x2C]
	0x03BD3FDC LDP X20, X19, [X31 + 0x20]
	0x03BD3FE0 LDP X22, X21, [X31 + 0x10]
	0x03BD3FE4 LDR X30, [X31], #0x30
	0x03BD3FE8 RET
	0x03BD3FEC BL 0x1C16F20
	0x03BD3FF0 BL 0x1C16F28
	0x03BD3FF4 BL 0x1C16F44
	0x03BD3FF8 MOV X1, X31
	0x03BD3FFC BL 0x1C16DEC
	0x03BD4000 MOV X1, X31
	0x03BD4004 B 0x3C36C30
	0x03BD4008 STR X31, [X0 + 0x30]
	0x03BD400C RET
	0x03BD4010 STP X30, X19, [X31 - 0x10]!
	0x03BD4014 LDRB W8, [X0 + 0x38]
	0x03BD4018 CBZ W8, 0x3BD4044
	0x03BD401C LDRB W8, [X0 + 0x2C]
	0x03BD4020 MOV X19, X0
	0x03BD4024 CBZ W8, 0x3BD4044
	0x03BD4028 LDR X0, [X19 + 0x20]
	0x03BD402C CBZ X0, 0x3BD404C
	0x03BD4030 LDR W2, [X19 + 0x28]
	0x03BD4034 LDR X1, [X19 + 0x30]
	0x03BD4038 MOV X3, X31
	0x03BD403C BL 0x3C12F0C
	0x03BD4040 STRB W31, [X19 + 0x38]
	0x03BD4044 LDP X30, X19, [X31], #0x10
	0x03BD4048 RET
	0x03BD404C BL 0x1C16F20
	0x03BD4050 TBZ X1, 0x0, 0x3BD405C
	0x03BD4054 MOVZ W8, 0x1
	0x03BD4058 STRB W8, [X0 + 0x38]
	0x03BD405C LDR X0, [X0 + 0x30]
	0x03BD4060 RET
	0x03BD4064 STP X30, X21, [X31 - 0x20]!
	0x03BD4068 STP X20, X19, [X31 + 0x10]
	0x03BD406C ADRP X21, 0x80E000
	0x03BD4070 ADRP X20, 0x57C000
	0x03BD4074 LDRB W8, [X21 + 0xE68]
	0x03BD4078 LDR X20, [X20 + 0x590]
	0x03BD407C MOV X19, X0
	0x03BD4080 TBNZ X8, 0x0, 0x3BD4098
	0x03BD4084 ADRP X0, 0x57C000
	0x03BD4088 LDR X0, [X0 + 0x590]
	0x03BD408C BL 0x1C16CF4
	0x03BD4090 MOVZ W8, 0x1
	0x03BD4094 STRB W8, [X21 + 0xE68]
	0x03BD4098 MOVZ W8, 0x1
	0x03BD409C STRB W8, [X19 + 0x2C]
	0x03BD40A0 LDR X0, [X20]
	0x03BD40A4 BL 0x1C16F10
	0x03BD40A8 MOV X1, X31
	0x03BD40AC MOV X20, X0
	0x03BD40B0 BL 0x3C122EC
	0x03BD40B4 LDR X0, [X19 + 0x20]
	0x03BD40B8 STR X20, [X19 + 0x30]
	0x03BD40BC CBZ X0, 0x3BD40D8
	0x03BD40C0 LDR W2, [X19 + 0x28]
	0x03BD40C4 MOV X1, X20
	0x03BD40C8 LDP X20, X19, [X31 + 0x10]
	0x03BD40CC MOV X3, X31
	0x03BD40D0 LDP X30, X21, [X31], #0x20
	0x03BD40D4 B 0x3C12FA4
	0x03BD40D8 BL 0x1C16F20
	0x03BD40DC MOV X1, X31
	0x03BD40E0 B 0x3C36C30
	0x03BD40E4 LDR X0, [X0 + 0xB0]
	0x03BD40E8 RET
	0x03BD40EC STR X1, [X0 + 0xB0]
	0x03BD40F0 RET
	0x03BD40F4 LDR X0, [X0 + 0xB8]
	0x03BD40F8 RET
	0x03BD40FC STR X1, [X0 + 0xB8]
	0x03BD4100 RET
	0x03BD4104 LDRB W0, [X0 + 0xC0]
	0x03BD4108 RET
	0x03BD410C AND W8, W1, 0x1
	0x03BD4110 STRB W8, [X0 + 0xC0]
	0x03BD4114 RET
	0x03BD4118 STR X30, [X31 - 0x30]!
	0x03BD411C STP X22, X21, [X31 + 0x10]
	0x03BD4120 STP X20, X19, [X31 + 0x20]
	0x03BD4124 ADRP X21, 0x80E000
	0x03BD4128 ADRP X22, 0x589000
	0x03BD412C ADRP X20, 0x51F000
	0x03BD4130 LDRB W8, [X21 + 0xE69]
	0x03BD4134 LDR X22, [X22 + 0xBA0]
	0x03BD4138 LDR X20, [X20 + 0x598]
	0x03BD413C MOV X19, X0
	0x03BD4140 TBNZ X8, 0x0, 0x3BD4164
	0x03BD4144 ADRP X0, 0x589000
	0x03BD4148 LDR X0, [X0 + 0xBA0]
	0x03BD414C BL 0x1C16CF4
	0x03BD4150 ADRP X0, 0x51F000
	0x03BD4154 LDR X0, [X0 + 0x598]
	0x03BD4158 BL 0x1C16CF4
	0x03BD415C MOVZ W8, 0x1
	0x03BD4160 STRB W8, [X21 + 0xE69]
	0x03BD4164 LDR X1, [X22]
	0x03BD4168 MOV X0, X19
	0x03BD416C BL 0x26422A0
	0x03BD4170 LDR X0, [X20]
	0x03BD4174 LDR X20, [X19 + 0xB0]
	0x03BD4178 LDR W8, [X0 + 0xE0]
	0x03BD417C CBNZ W8, 0x3BD4184
	0x03BD4180 BL 0x1C16DFC
	0x03BD4184 MOV X0, X20
	0x03BD4188 MOV X1, X31
	0x03BD418C MOV X2, X31
	0x03BD4190 BL 0x3C354F8
	0x03BD4194 LDR X8, [X19 + 0xB8]
	0x03BD4198 AND W9, W0, 0x1
	0x03BD419C MOV X1, X31
	0x03BD41A0 MOV X2, X31
	0x03BD41A4 MOV X0, X8
	0x03BD41A8 STRB W9, [X19 + 0xC1]
	0x03BD41AC BL 0x3C354F8
	0x03BD41B0 AND W8, W0, 0x1
	0x03BD41B4 STRB W8, [X19 + 0xC2]
	0x03BD41B8 LDP X20, X19, [X31 + 0x20]
	0x03BD41BC LDP X22, X21, [X31 + 0x10]
	0x03BD41C0 LDR X30, [X31], #0x30
	0x03BD41C4 RET
	0x03BD41C8 STP D11, D10, [X31 - 0x30]!
	0x03BD41CC STP D9, D8, [X31 + 0x10]
	0x03BD41D0 STP X30, X19, [X31 + 0x20]
	0x03BD41D4 LDRB W8, [X0 + 0xC1]
	0x03BD41D8 MOV V8.16B, V3.16B
	0x03BD41DC MOV V9.16B, V2.16B
	0x03BD41E0 MOV V10.16B, V1.16B
	0x03BD41E4 MOV X19, X0
	0x03BD41E8 MOV V11.16B, V0.16B
	0x03BD41EC CBZ W8, 0x3BD4270
	0x03BD41F0 LDRB W8, [X19 + 0xC2]
	0x03BD41F4 LDR X0, [X19 + 0xB0]
	0x03BD41F8 CBZ W8, 0x3BD4240
	0x03BD41FC CBZ X0, 0x3BD4294
	0x03BD4200 LDR X8, [X0]
	0x03BD4204 FMOV S3, 1
	0x03BD4208 MOV V0.16B, V11.16B
	0x03BD420C MOV V1.16B, V10.16B
	0x03BD4210 LDR X9, [X8 + 0x2A8]
	0x03BD4214 LDR X1, [X8 + 0x2B0]
	0x03BD4218 MOV V2.16B, V9.16B
	0x03BD421C BLR X9
	0x03BD4220 LDRB W8, [X19 + 0xC0]
	0x03BD4224 CBNZ W8, 0x3BD4270
	0x03BD4228 LDR X0, [X19 + 0xB8]
	0x03BD422C CBZ X0, 0x3BD4294
	0x03BD4230 MOV V0.16B, V8.16B
	0x03BD4234 MOV X1, X31
	0x03BD4238 BL 0x3E222A8
	0x03BD423C B 0x3BD4270
	0x03BD4240 CBZ X0, 0x3BD4294
	0x03BD4244 LDR X8, [X0]
	0x03BD4248 LDRB W9, [X19 + 0xC0]
	0x03BD424C FMOV S0, 1
	0x03BD4250 MOV V1.16B, V10.16B
	0x03BD4254 LDR X10, [X8 + 0x2A8]
	0x03BD4258 LDR X1, [X8 + 0x2B0]
	0x03BD425C CMP W9, 0x0
	0x03BD4260 FCSEL S3, S8, S0, EQ
	0x03BD4264 MOV V0.16B, V11.16B
	0x03BD4268 MOV V2.16B, V9.16B
	0x03BD426C BLR X10
	0x03BD4270 MOV X0, X19
	0x03BD4274 MOV V2.16B, V9.16B
	0x03BD4278 MOV V3.16B, V8.16B
	0x03BD427C LDP X30, X19, [X31 + 0x20]
	0x03BD4280 LDP D9, D8, [X31 + 0x10]
	0x03BD4284 MOV V0.16B, V11.16B
	0x03BD4288 MOV V1.16B, V10.16B
	0x03BD428C LDP D11, D10, [X31], #0x30
	0x03BD4290 B 0x3BD4298

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x810000
	008 Move W8, [X21+3675]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0x58B000
	016 Move X0, [X0+2864]
	017 Call 0x1C17CF4
	018 Move X0, 0x58B000
	019 Move X0, [X0+2872]
	020 Call 0x1C17CF4
	021 Move X0, 0x588000
	022 Move X0, [X0+2912]
	023 Call 0x1C17CF4
	024 Move X0, 0x528000
	025 Move X0, [X0+1208]
	026 Call 0x1C17CF4
	027 Move X0, 0x58B000
	028 Move X0, [X0+2664]
	029 Call 0x1C17CF4
	030 Move X0, 0x58B000
	031 Move X0, [X0+2688]
	032 Call 0x1C17CF4
	033 Move X0, 0x58A000
	034 Move X0, [X0+2736]
	035 Call 0x1C17CF4
	036 Move X0, 0x58A000
	037 Move X0, [X0+2744]
	038 Call 0x1C17CF4
	039 Move X0, 0x58A000
	040 Move X0, [X0+2840]
	041 Call 0x1C17CF4
	042 Move X0, 0x58A000
	043 Move X0, [X0+2848]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+3675], W8
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+472]
	050 Move X1, [X8+480]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {173}
	056 Compare X20, 0
	057 JumpIfEqual {214}
	058 Move X0, X20
	059 Move X1, X31
	060 Call SelectExitEventArgs.get_interactableObject, X0
	061 Move X23, 0x587000
	062 Move X23, [X23+2912]
	063 Move X1, [X23]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {173}
	067 Move X20, X0
	068 Move X0, [X19+208]
	069 Compare X0, 0
	070 JumpIfEqual {214}
	071 Move X8, 0x58A000
	072 Move X8, [X8+2864]
	073 Move X1, X20
	074 Move X2, [X8]
	075 Call HashSet`1<Object>.Contains, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {173}
	080 Move X0, [X19+208]
	081 Compare X0, 0
	082 JumpIfEqual {214}
	083 Move X8, 0x58A000
	084 Move X8, [X8+2872]
	085 Move X1, X20
	086 Move X2, [X8]
	087 Call HashSet`1<Object>.Remove, X0, X1
	088 Move X8, [X20]
	089 Move X1, [X23]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X20
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X20
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X8, 0x58A000
	110 Move X8, [X8+2688]
	111 Move X21, X0
	112 Move X8, [X8]
	113 Move X0, X8
	114 Call 0x1C17F10
	115 Move X8, 0x58A000
	116 Move X8, [X8+2840]
	117 Move X1, X19
	118 Move X3, X31
	119 Move X22, X0
	120 Move X2, [X8]
	121 Call UnityAction`1<Object>..ctor, X0, X1, X2
	122 Compare X21, 0
	123 JumpIfEqual {214}
	124 Move X8, 0x58A000
	125 Move X8, [X8+2736]
	126 Move X0, X21
	127 Move X1, X22
	128 Move X2, [X8]
	129 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	130 Move X8, [X20]
	131 Move X1, [X23]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 1
	142 Move X0, X20
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 1
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X20
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, 0x58A000
	153 Move X8, [X8+2664]
	154 Move X20, X0
	155 Move X8, [X8]
	156 Move X0, X8
	157 Call 0x1C17F10
	158 Move X8, 0x58A000
	159 Move X8, [X8+2848]
	160 Move X1, X19
	161 Move X3, X31
	162 Move X21, X0
	163 Move X2, [X8]
	164 Call UnityAction`1<Object>..ctor, X0, X1, X2
	165 Compare X20, 0
	166 JumpIfEqual {214}
	167 Move X8, 0x58A000
	168 Move X8, [X8+2744]
	169 Move X0, X20
	170 Move X1, X21
	171 Move X2, [X8]
	172 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	173 Move W8, [X19+105]
	174 Compare W8, 0
	175 JumpIfNotEqual {188}
	176 Move W8, [X19+109]
	177 Compare W8, 0
	178 JumpIfNotEqual {188}
	179 Move W8, [X19+112]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X8, 0x527000
	182 Move X8, [X8+1208]
	183 Move V0, [X19+120]
	184 Move X8, [X8]
	185 Move X8, [X8+184]
	186 Move V1, [X8]
	187 NotImplemented "Instruction FCMP not yet implemented."
	188 Move X8, [X19]
	189 Move X0, X19
	190 Move X9, [X8+584]
	191 Move X1, [X8+592]
	192 NotImplemented "Instruction BLR not yet implemented."
	193 And X1, X0, 0xFFFF
	194 Move X0, X19
	195 Move X20, [X31+32]
	196 Move X19, [X31+40]
	197 Move X22, [X31+16]
	198 Move X21, [X31+24]
	199 Move X30, [X31+48]
	200 Move X23, [X31+56]
	201 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	202 Return 
	203 Move X8, [X19]
	204 Move X0, X19
	205 Move X20, [X31+32]
	206 Move X19, [X31+40]
	207 Move X22, [X31+16]
	208 Move X21, [X31+24]
	209 Move X2, [X8+712]
	210 Move X1, [X8+720]
	211 Move X30, [X31+48]
	212 Move X23, [X31+56]
	213 CallNoReturn X2
	214 Call 0x1C17F20

Method: System.Void OnLargestInteractionStrengthChanged(System.Single value)

Disassembly:
	0x03BD4294 BL 0x1C16F20
	0x03BD4298 STP D11, D10, [X31 - 0x40]!
	0x03BD429C STP D9, D8, [X31 + 0x10]
	0x03BD42A0 STR X30, [X31 + 0x20]
	0x03BD42A4 STP X20, X19, [X31 + 0x30]
	0x03BD42A8 ADRP X20, 0x80E000
	0x03BD42AC LDRB W8, [X20 + 0xE82]
	0x03BD42B0 MOV V8.16B, V3.16B
	0x03BD42B4 MOV V9.16B, V2.16B
	0x03BD42B8 MOV V10.16B, V1.16B
	0x03BD42BC MOV V11.16B, V0.16B
	0x03BD42C0 MOV X19, X0
	0x03BD42C4 TBNZ X8, 0x0, 0x3BD42DC
	0x03BD42C8 ADRP X0, 0x584000
	0x03BD42CC LDR X0, [X0 + 0x898]
	0x03BD42D0 BL 0x1C16CF4
	0x03BD42D4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+184]
	004 Compare X8, 0
	005 JumpIfNotEqual {10}
	006 Move X8, [X0+192]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfEqual {13}
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Move X8, [X19]
	014 Move X0, X19
	015 Move X9, [X8+584]
	016 Move X1, [X8+592]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 And X1, X0, 0xFFFF
	019 Move X0, X19
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	023 Return 

Method: System.Void OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args)

Disassembly:
	0x03BD42D8 STRB W8, [X20 + 0xE82]
	0x03BD42DC LDR X0, [X19 + 0xA0]
	0x03BD42E0 CBZ X0, 0x3BD4314
	0x03BD42E4 ADRP X8, 0x584000
	0x03BD42E8 LDR X8, [X8 + 0x898]
	0x03BD42EC MOV V2.16B, V9.16B
	0x03BD42F0 MOV V3.16B, V8.16B
	0x03BD42F4 LDP X20, X19, [X31 + 0x30]
	0x03BD42F8 LDR X1, [X8]
	0x03BD42FC LDR X30, [X31 + 0x20]
	0x03BD4300 LDP D9, D8, [X31 + 0x10]
	0x03BD4304 MOV V0.16B, V11.16B
	0x03BD4308 MOV V1.16B, V10.16B
	0x03BD430C LDP D11, D10, [X31], #0x40
	0x03BD4310 B 0x2728FB0
	0x03BD4314 LDP X20, X19, [X31 + 0x30]
	0x03BD4318 LDR X30, [X31 + 0x20]
	0x03BD431C LDP D9, D8, [X31 + 0x10]
	0x03BD4320 LDP D11, D10, [X31], #0x40
	0x03BD4324 RET
	0x03BD4328 STR X30, [X31 - 0x20]!
	0x03BD432C STP X20, X19, [X31 + 0x10]
	0x03BD4330 ADRP X20, 0x80E000
	0x03BD4334 LDRB W8, [X20 + 0xE6A]
	0x03BD4338 MOV X19, X0
	0x03BD433C TBNZ X8, 0x0, 0x3BD4354
	0x03BD4340 ADRP X0, 0x589000
	0x03BD4344 LDR X0, [X0 + 0xBA8]
	0x03BD4348 BL 0x1C16CF4
	0x03BD434C MOVZ W8, 0x1
	0x03BD4350 STRB W8, [X20 + 0xE6A]
	0x03BD4354 LDRB W8, [X19 + 0xC1]
	0x03BD4358 CBZ W8, 0x3BD437C
	0x03BD435C LDR X0, [X19 + 0xB0]
	0x03BD4360 CBZ X0, 0x3BD4398
	0x03BD4364 LDR X8, [X0]
	0x03BD4368 LDP X20, X19, [X31 + 0x10]
	0x03BD436C LDR X2, [X8 + 0x298]
	0x03BD4370 LDR X1, [X8 + 0x2A0]
	0x03BD4374 LDR X30, [X31], #0x20
	0x03BD4378 BR X2
	0x03BD437C ADRP X8, 0x589000
	0x03BD4380 LDR X8, [X8 + 0xBA8]
	0x03BD4384 MOV X0, X19
	0x03BD4388 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80F000
	005 Move W8, [X20+3676]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x527000
	012 Move X0, [X0+1208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3676], W8
	016 Move W8, [X19+106]
	017 Move W9, 1
	018 Move [X19+200], W9
	019 Compare W8, 0
	020 JumpIfNotEqual {33}
	021 Move W8, [X19+109]
	022 Compare W8, 0
	023 JumpIfNotEqual {33}
	024 Move W8, [X19+116]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x527000
	027 Move X8, [X8+1208]
	028 Move V0, [X19+120]
	029 Move X8, [X8]
	030 Move X8, [X8+184]
	031 Move V1, [X8]
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+584]
	036 Move X1, [X8+592]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 And X1, X0, 0xFFFF
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	044 Return 
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X2, [X8+728]
	050 Move X1, [X8+736]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.Void OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args)

Disassembly:
	0x03BD438C LDR X1, [X8]
	0x03BD4390 LDR X30, [X31], #0x20
	0x03BD4394 B 0x2642AC8
	0x03BD4398 BL 0x1C16F20
	0x03BD439C B 0x3BD43A0
	0x03BD43A0 STP X30, X23, [X31 - 0x30]!
	0x03BD43A4 STP X22, X21, [X31 + 0x10]
	0x03BD43A8 STP X20, X19, [X31 + 0x20]
	0x03BD43AC ADRP X22, 0x80E000
	0x03BD43B0 ADRP X23, 0x589000
	0x03BD43B4 ADRP X20, 0x589000
	0x03BD43B8 ADRP X21, 0x589000
	0x03BD43BC LDRB W8, [X22 + 0xE83]
	0x03BD43C0 LDR X23, [X23 + 0xBB0]
	0x03BD43C4 LDR X20, [X20 + 0xBB8]
	0x03BD43C8 LDR X21, [X21 + 0xBC0]
	0x03BD43CC MOV X19, X0
	0x03BD43D0 TBNZ X8, 0x0, 0x3BD4400
	0x03BD43D4 ADRP X0, 0x589000
	0x03BD43D8 LDR X0, [X0 + 0xBC0]
	0x03BD43DC BL 0x1C16CF4
	0x03BD43E0 ADRP X0, 0x589000
	0x03BD43E4 LDR X0, [X0 + 0xBB8]
	0x03BD43E8 BL 0x1C16CF4
	0x03BD43EC ADRP X0, 0x589000
	0x03BD43F0 LDR X0, [X0 + 0xBB0]
	0x03BD43F4 BL 0x1C16CF4
	0x03BD43F8 MOVZ W8, 0x1
	0x03BD43FC STRB W8, [X22 + 0xE83]
	0x03BD4400 LDR X0, [X23]
	0x03BD4404 BL 0x1C16F10
	0x03BD4408 LDR X4, [X20]
	0x03BD440C FMOV S0, W31
	0x03BD4410 FMOV S1, W31
	0x03BD4414 FMOV S2, W31
	0x03BD4418 FMOV S3, W31
	0x03BD441C MOVZ W1, 0x1
	0x03BD4420 MOV X2, X31
	0x03BD4424 MOV W3, W31
	0x03BD4428 MOV X20, X0
	0x03BD442C BL 0x28E2858
	0x03BD4430 STR X20, [X19 + 0xA8]
	0x03BD4434 LDR X1, [X21]
	0x03BD4438 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x80F000
	005 Move W8, [X20+3677]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x527000
	012 Move X0, [X0+1208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3677], W8
	016 Move W8, [X19+106]
	017 Move [X19+200], W31
	018 Compare W8, 0
	019 JumpIfNotEqual {32}
	020 Move W8, [X19+109]
	021 Compare W8, 0
	022 JumpIfNotEqual {32}
	023 Move W8, [X19+116]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0x527000
	026 Move X8, [X8+1208]
	027 Move V0, [X19+120]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move V1, [X8]
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+584]
	035 Move X1, [X8+592]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 And X1, X0, 0xFFFF
	038 Move X0, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	043 Return 
	044 Move X8, [X19]
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X2, [X8+728]
	049 Move X1, [X8+736]
	050 Move X30, [X31+32]
	051 CallNoReturn X2

Method: System.Void SelectedClickBehavior()

Disassembly:
	0x03BD443C LDP X20, X19, [X31 + 0x20]
	0x03BD4440 LDP X22, X21, [X31 + 0x10]
	0x03BD4444 LDP X30, X23, [X31], #0x30
	0x03BD4448 B 0x264B45C
	0x03BD444C LDR X0, [X0 + 0xA8]
	0x03BD4450 RET
	0x03BD4454 STR X30, [X31 - 0x30]!
	0x03BD4458 STP X22, X21, [X31 + 0x10]
	0x03BD445C STP X20, X19, [X31 + 0x20]
	0x03BD4460 ADRP X22, 0x80E000
	0x03BD4464 ADRP X21, 0x51F000
	0x03BD4468 LDRB W8, [X22 + 0xE6B]
	0x03BD446C LDR X21, [X21 + 0x598]
	0x03BD4470 MOV X20, X1
	0x03BD4474 MOV X19, X0
	0x03BD4478 TBNZ X8, 0x0, 0x3BD4490
	0x03BD447C ADRP X0, 0x51F000
	0x03BD4480 LDR X0, [X0 + 0x598]
	0x03BD4484 BL 0x1C16CF4
	0x03BD4488 MOVZ W8, 0x1
	0x03BD448C STRB W8, [X22 + 0xE6B]
	0x03BD4490 STR X20, [X19 + 0xA8]
	0x03BD4494 LDR X0, [X21]
	0x03BD4498 LDR W8, [X0 + 0xE0]
	0x03BD449C CBNZ W8, 0x3BD44A4
	0x03BD44A0 BL 0x1C16DFC
	0x03BD44A4 MOV X0, X20
	0x03BD44A8 MOV X1, X31
	0x03BD44AC MOV X2, X31
	0x03BD44B0 BL 0x3C354F8
	0x03BD44B4 AND W8, W0, 0x1
	0x03BD44B8 STRB W8, [X19 + 0xB0]
	0x03BD44BC LDP X20, X19, [X31 + 0x20]
	0x03BD44C0 LDP X22, X21, [X31 + 0x10]
	0x03BD44C4 LDR X30, [X31], #0x30
	0x03BD44C8 RET
	0x03BD44CC STR X30, [X31 - 0x30]!
	0x03BD44D0 STP X22, X21, [X31 + 0x10]
	0x03BD44D4 STP X20, X19, [X31 + 0x20]
	0x03BD44D8 ADRP X21, 0x80E000
	0x03BD44DC ADRP X22, 0x589000
	0x03BD44E0 ADRP X20, 0x51F000
	0x03BD44E4 LDRB W8, [X21 + 0xE6C]
	0x03BD44E8 LDR X22, [X22 + 0xBC8]
	0x03BD44EC LDR X20, [X20 + 0x598]
	0x03BD44F0 MOV X19, X0
	0x03BD44F4 TBNZ X8, 0x0, 0x3BD4518
	0x03BD44F8 ADRP X0, 0x589000
	0x03BD44FC LDR X0, [X0 + 0xBC8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x80F000
	007 Move W8, [X20+3678]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x521000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move X0, 0x58A000
	017 Move X0, [X0+2880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3678], W8
	021 Move X21, 0x521000
	022 Move X20, 0x58A000
	023 Move X1, [X19+184]
	024 Move X21, [X21+3696]
	025 Move X20, [X20+2880]
	026 Compare X1, 0
	027 JumpIfEqual {31}
	028 Move X0, X19
	029 Move X2, X31
	030 Call MonoBehaviour.StopCoroutine, X0, X1
	031 Move X0, [X21]
	032 Move V8, [X19+120]
	033 Call 0x1C17F10
	034 Move X2, [X20]
	035 Move X1, X19
	036 Move X3, X31
	037 Move X20, X0
	038 Call Action..ctor, X0, X1, X2
	039 Move X8, [X19]
	040 Move W1, 4
	041 Move X0, X19
	042 Move V0, V8
	043 Move X9, [X8+744]
	044 Move X3, [X8+752]
	045 Move X2, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call MonoBehaviour.StartCoroutine, X0, X1
	051 Move [X19+184], X0
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Move V8, [X31+48]
	057 Return 

Method: System.Void ActivatedClickBehavior()

Disassembly:
	0x03BD4500 BL 0x1C16CF4
	0x03BD4504 ADRP X0, 0x51F000
	0x03BD4508 LDR X0, [X0 + 0x598]
	0x03BD450C BL 0x1C16CF4
	0x03BD4510 MOVZ W8, 0x1
	0x03BD4514 STRB W8, [X21 + 0xE6C]
	0x03BD4518 LDR X1, [X22]
	0x03BD451C MOV X0, X19
	0x03BD4520 BL 0x2642C84
	0x03BD4524 LDR X0, [X20]
	0x03BD4528 LDR X20, [X19 + 0xA8]
	0x03BD452C LDR W8, [X0 + 0xE0]
	0x03BD4530 CBNZ W8, 0x3BD4538
	0x03BD4534 BL 0x1C16DFC
	0x03BD4538 MOV X0, X20
	0x03BD453C MOV X1, X31
	0x03BD4540 MOV X2, X31
	0x03BD4544 BL 0x3C354F8
	0x03BD4548 AND W8, W0, 0x1
	0x03BD454C STRB W8, [X19 + 0xB0]
	0x03BD4550 LDP X20, X19, [X31 + 0x20]
	0x03BD4554 LDP X22, X21, [X31 + 0x10]
	0x03BD4558 LDR X30, [X31], #0x30
	0x03BD455C RET
	0x03BD4560 STP X30, X19, [X31 - 0x10]!
	0x03BD4564 LDRB W8, [X0 + 0xB0]
	0x03BD4568 CBZ W8, 0x3BD4588
	0x03BD456C MOV X19, X0
	0x03BD4570 LDR X0, [X0 + 0xA8]
	0x03BD4574 CBZ X0, 0x3BD4594
	0x03BD4578 MOV X1, X31
	0x03BD457C BL 0x3C3FBAC
	0x03BD4580 STP S0, S1, [X19 + 0xB4]
	0x03BD4584 STR S2, [X19 + 0xBC]
	0x03BD4588 FMOV S0, 1
	0x03BD458C LDP X30, X19, [X31], #0x10
	0x03BD4590 RET
	0x03BD4594 BL 0x1C16F20
	0x03BD4598 STR D8, [X31 - 0x20]!
	0x03BD459C STP X30, X19, [X31 + 0x10]
	0x03BD45A0 LDRB W8, [X0 + 0xB0]
	0x03BD45A4 MOV X19, X0
	0x03BD45A8 MOV V8.16B, V0.16B
	0x03BD45AC CBZ W8, 0x3BD45D4
	0x03BD45B0 LDR X0, [X19 + 0xA8]
	0x03BD45B4 CBZ X0, 0x3BD45E8
	0x03BD45B8 LDP S1, S0, [X19 + 0xB8]
	0x03BD45BC LDR V3, [X19 + 0xB4]
	0x03BD45C0 MOV X1, X31

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x80F000
	007 Move W8, [X20+3679]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x521000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move X0, 0x58A000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3679], W8
	021 Move X21, 0x521000
	022 Move X20, 0x58A000
	023 Move X1, [X19+192]
	024 Move X21, [X21+3696]
	025 Move X20, [X20+2888]
	026 Compare X1, 0
	027 JumpIfEqual {31}
	028 Move X0, X19
	029 Move X2, X31
	030 Call MonoBehaviour.StopCoroutine, X0, X1
	031 Move X0, [X21]
	032 Move V8, [X19+120]
	033 Call 0x1C17F10
	034 Move X2, [X20]
	035 Move X1, X19
	036 Move X3, X31
	037 Move X20, X0
	038 Call Action..ctor, X0, X1, X2
	039 Move X8, [X19]
	040 Move W1, 5
	041 Move X0, X19
	042 Move V0, V8
	043 Move X9, [X8+744]
	044 Move X3, [X8+752]
	045 Move X2, X20
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call MonoBehaviour.StartCoroutine, X0, X1
	051 Move [X19+192], X0
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Move V8, [X31+48]
	057 Return 

Method: System.Collections.IEnumerator ClickAnimation(System.Byte targetStateIndex, System.Single duration, System.Action onComplete = null)

Disassembly:
	0x03BD45C4 FMUL S2, S0, S8
	0x03BD45C8 FMUL S1, S1, S8
	0x03BD45CC FMUL S0, S3, S8
	0x03BD45D0 BL 0x3C3FC4C
	0x03BD45D4 MOV X0, X19
	0x03BD45D8 LDP X30, X19, [X31 + 0x10]
	0x03BD45DC MOV V0.16B, V8.16B
	0x03BD45E0 LDR V8, [X31], #0x20
	0x03BD45E4 B 0x3BD45EC
	0x03BD45E8 BL 0x1C16F20
	0x03BD45EC STR D8, [X31 - 0x20]!
	0x03BD45F0 STR X30, [X31 + 0x8]
	0x03BD45F4 STP X20, X19, [X31 + 0x10]
	0x03BD45F8 ADRP X20, 0x80E000
	0x03BD45FC LDRB W8, [X20 + 0xE87]
	0x03BD4600 MOV V8.16B, V0.16B
	0x03BD4604 MOV X19, X0
	0x03BD4608 TBNZ X8, 0x0, 0x3BD4620
	0x03BD460C ADRP X0, 0x584000
	0x03BD4610 LDR X0, [X0 + 0x8B8]
	0x03BD4614 BL 0x1C16CF4
	0x03BD4618 MOVZ W8, 0x1
	0x03BD461C STRB W8, [X20 + 0xE87]
	0x03BD4620 LDR X0, [X19 + 0x98]
	0x03BD4624 CBZ X0, 0x3BD4648
	0x03BD4628 ADRP X8, 0x584000
	0x03BD462C LDR X8, [X8 + 0x8B8]
	0x03BD4630 LDP X20, X19, [X31 + 0x10]
	0x03BD4634 LDR X30, [X31 + 0x8]
	0x03BD4638 MOV V0.16B, V8.16B
	0x03BD463C LDR X1, [X8]
	0x03BD4640 LDR V8, [X31], #0x20
	0x03BD4644 B 0x272A704
	0x03BD4648 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x80F000
	009 Move X23, 0x58A000
	010 Move W8, [X22+3680]
	011 Move X23, [X23+2896]
	012 Move X19, X2
	013 Move V8, V0
	014 Move W20, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x58A000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3680], W8
	025 Move X0, [X23]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X22, X0
	029 Call Object..ctor, X0
	030 Move [X22+16], W31
	031 Move [X22+40], X21
	032 Move [X22+48], W20
	033 Move [X22+32], S8
	034 Move [X22+56], X19
	035 Move X0, X22
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Move X23, [X31+24]
	042 Move V8, [X31+64]
	043 Return X0

Method: System.Collections.IEnumerator UIUpdateCheckCoroutine()

Disassembly:
	0x03BD2708 SUBS X9, X9, 0x1
	0x03BD270C ADD X10, X10, 0x10
	0x03BD2710 B.NE 0x3BD26FC
	0x03BD2714 MOVZ W2, 0x1
	0x03BD2718 MOV X0, X20
	0x03BD271C BL 0x1C5C788
	0x03BD2720 B 0x3BD2734
	0x03BD2724 LDR W9, [X10]
	0x03BD2728 ADD W9, W9, 0x1
	0x03BD272C ADD X8, X8, W9, 0x4, SXTW
	0x03BD2730 ADD X0, X8, 0x138
	0x03BD2734 LDP X8, X1, [X0]
	0x03BD2738 MOV X0, X20
	0x03BD273C BLR X8
	0x03BD2740 ADRP X26, 0x58B000
	0x03BD2744 LDR X26, [X26 + 0xA68]
	0x03BD2748 MOV X21, X0
	0x03BD274C LDR X8, [X26]
	0x03BD2750 MOV X0, X8
	0x03BD2754 BL 0x1C16F10
	0x03BD2758 ADRP X27, 0x58B000
	0x03BD275C LDR X27, [X27 + 0xB20]
	0x03BD2760 MOV X1, X19
	0x03BD2764 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x811000
	006 Move X21, 0x58C000
	007 Move W8, [X20+3681]
	008 Move X21, [X21+2792]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x58C000
	015 Move X0, [X0+2792]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3681], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03BD469C BL 0x1C16DFC
	0x03BD46A0 MOV X0, X20
	0x03BD46A4 MOV X1, X31
	0x03BD46A8 MOV X2, X31
	0x03BD46AC BL 0x3C3883C
	0x03BD46B0 TBZ X0, 0x0, 0x3BD46C4
	0x03BD46B4 MOV X0, X19
	0x03BD46B8 MOV X1, X31
	0x03BD46BC BL 0x3C32E90
	0x03BD46C0 STR X0, [X19 + 0xA8]
	0x03BD46C4 LDP X20, X19, [X31 + 0x10]
	0x03BD46C8 LDP X30, X21, [X31], #0x20
	0x03BD46CC RET
	0x03BD46D0 STR X30, [X31 - 0x20]!
	0x03BD46D4 STP X20, X19, [X31 + 0x10]
	0x03BD46D8 ADRP X20, 0x804000
	0x03BD46DC LDRB W8, [X20 + 0x85B]
	0x03BD46E0 MOV X19, X0
	0x03BD46E4 CBNZ W8, 0x3BD46FC
	0x03BD46E8 ADRP X0, 0x51F000
	0x03BD46EC LDR X0, [X0 + 0x5A0]
	0x03BD46F0 BL 0x1C16CF4
	0x03BD46F4 MOVZ W8, 0x1
	0x03BD46F8 STRB W8, [X20 + 0x85B]
	0x03BD46FC ADRP X8, 0x51F000
	0x03BD4700 LDR X8, [X8 + 0x5A0]
	0x03BD4704 MOV X0, X19
	0x03BD4708 LDR X8, [X8]
	0x03BD470C LDR X8, [X8 + 0xB8]
	0x03BD4710 LDUR V0, [X8 + 0xC]
	0x03BD4714 LDR V1, [X8 + 0x14]
	0x03BD4718 STUR D0, [X19 + 0xB4]
	0x03BD471C STR S1, [X19 + 0xBC]
	0x03BD4720 LDP X20, X19, [X31 + 0x10]
	0x03BD4724 LDR X30, [X31], #0x20
	0x03BD4728 B 0x3BD472C
	0x03BD472C STP X30, X23, [X31 - 0x30]!
	0x03BD4730 STP X22, X21, [X31 + 0x10]
	0x03BD4734 STP X20, X19, [X31 + 0x20]
	0x03BD4738 ADRP X22, 0x80E000
	0x03BD473C ADRP X23, 0x586000
	0x03BD4740 ADRP X20, 0x586000
	0x03BD4744 ADRP X21, 0x589000
	0x03BD4748 LDRB W8, [X22 + 0xE88]
	0x03BD474C LDR X23, [X23 + 0x4D0]
	0x03BD4750 LDR X20, [X20 + 0x4C8]
	0x03BD4754 LDR X21, [X21 + 0xBD0]
	0x03BD4758 MOV X19, X0
	0x03BD475C TBNZ X8, 0x0, 0x3BD478C
	0x03BD4760 ADRP X0, 0x589000
	0x03BD4764 LDR X0, [X0 + 0xBD0]
	0x03BD4768 BL 0x1C16CF4
	0x03BD476C ADRP X0, 0x586000
	0x03BD4770 LDR X0, [X0 + 0x4C8]
	0x03BD4774 BL 0x1C16CF4
	0x03BD4778 ADRP X0, 0x586000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x80F000
	008 Move X20, 0x54A000
	009 Move X23, 0x58A000
	010 Move X22, 0x58A000
	011 Move W8, [X21+3682]
	012 Move X20, [X20+1352]
	013 Move X23, [X23+2904]
	014 Move X22, [X22+2912]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x54A000
	021 Move X0, [X0+1352]
	022 Call 0x1C17CF4
	023 Move X0, 0x58A000
	024 Move X0, [X0+2912]
	025 Call 0x1C17CF4
	026 Move X0, 0x58A000
	027 Move X0, [X0+2904]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3682], W8
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move W8, 1
	033 Move W9, 0x3E800000
	034 Move [X19+112], D0
	035 Move S0, W31
	036 Move S1, W31
	037 Move S2, 1
	038 Move S3, 1
	039 Move X0, X31
	040 Move [X19+106], W8
	041 Move [X19+120], W9
	042 Call AnimationCurve.EaseInOut, V0, V1, V2, V3
	043 Move X8, [X20]
	044 Move X20, X0
	045 Move X0, X8
	046 Call 0x1C17F10
	047 Move X1, X20
	048 Move X2, X31
	049 Move X21, X0
	050 Call AnimationCurveDatumProperty..ctor, X0, X1
	051 Move [X19+128], X21
	052 Move X0, [X23]
	053 Call 0x1C17F10
	054 Move X1, [X22]
	055 Move X20, X0
	056 Call HashSet`1<Object>..ctor, X0
	057 Move [X19+208], X20
	058 Move X0, X19
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Call BaseAffordanceStateProvider..ctor, X0
	066 Return 

Method: System.Void <SelectedClickBehavior>b__94_0()

Disassembly:
	0x03BD477C LDR X0, [X0 + 0x4D0]
	0x03BD4780 BL 0x1C16CF4

ISIL:
	001 Move [X0+184], X31
	002 Return 

Method: System.Void <ActivatedClickBehavior>b__95_0()

Disassembly:
	0x03BD4784 MOVZ W8, 0x1
	0x03BD4788 STRB W8, [X22 + 0xE88]

ISIL:
	001 Move [X0+192], X31
	002 Return 

