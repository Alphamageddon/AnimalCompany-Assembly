Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractorAffordanceStateProvider/<UIUpdateCheckCoroutine>d__97

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03BD4674 TBNZ X8, 0x0, 0x3BD468C
	0x03BD4678 ADRP X0, 0x51F000
	0x03BD467C LDR X0, [X0 + 0x598]
	0x03BD4680 BL 0x1C16CF4
	0x03BD4684 MOVZ W8, 0x1
	0x03BD4688 STRB W8, [X21 + 0xE6D]
	0x03BD468C LDR X0, [X20]
	0x03BD4690 LDR X20, [X19 + 0xA8]
	0x03BD4694 LDR W8, [X0 + 0xE0]
	0x03BD4698 CBNZ W8, 0x3BD46A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03BD4964 RET

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03BD4968 STR X1, [X0 + 0xB0]
	0x03BD496C RET
	0x03BD4970 LDR W0, [X0 + 0xB8]
	0x03BD4974 RET
	0x03BD4978 LDR X8, [X0]
	0x03BD497C STR W1, [X0 + 0xB8]
	0x03BD4980 LDR X2, [X8 + 0x268]
	0x03BD4984 LDR X1, [X8 + 0x270]
	0x03BD4988 BR X2
	0x03BD498C LDRB W0, [X0 + 0xBC]
	0x03BD4990 RET
	0x03BD4994 AND W8, W1, 0x1
	0x03BD4998 STRB W8, [X0 + 0xBC]
	0x03BD499C RET
	0x03BD49A0 STR X30, [X31 - 0x30]!
	0x03BD49A4 STP X22, X21, [X31 + 0x10]
	0x03BD49A8 STP X20, X19, [X31 + 0x20]
	0x03BD49AC ADRP X20, 0x80E000
	0x03BD49B0 ADRP X22, 0x589000
	0x03BD49B4 ADRP X21, 0x51F000
	0x03BD49B8 LDRB W8, [X20 + 0xE6F]
	0x03BD49BC LDR X22, [X22 + 0xBE0]
	0x03BD49C0 LDR X21, [X21 + 0x598]
	0x03BD49C4 MOV X19, X0
	0x03BD49C8 TBNZ X8, 0x0, 0x3BD4A10
	0x03BD49CC ADRP X0, 0x589000
	0x03BD49D0 LDR X0, [X0 + 0xBE0]
	0x03BD49D4 BL 0x1C16CF4
	0x03BD49D8 ADRP X0, 0x589000
	0x03BD49DC LDR X0, [X0 + 0xBE8]
	0x03BD49E0 BL 0x1C16CF4
	0x03BD49E4 ADRP X0, 0x51F000
	0x03BD49E8 LDR X0, [X0 + 0x598]
	0x03BD49EC BL 0x1C16CF4
	0x03BD49F0 ADRP X0, 0x549000
	0x03BD49F4 LDR X0, [X0 + 0x1E8]
	0x03BD49F8 BL 0x1C16CF4
	0x03BD49FC ADRP X0, 0x589000
	0x03BD4A00 LDR X0, [X0 + 0xBF0]
	0x03BD4A04 BL 0x1C16CF4
	0x03BD4A08 MOVZ W8, 0x1
	0x03BD4A0C STRB W8, [X20 + 0xE6F]
	0x03BD4A10 LDR X1, [X22]
	0x03BD4A14 MOV X0, X19
	0x03BD4A18 BL 0x2642214
	0x03BD4A1C LDR X0, [X21]
	0x03BD4A20 LDR X20, [X19 + 0xB0]
	0x03BD4A24 LDR W8, [X0 + 0xE0]
	0x03BD4A28 CBNZ W8, 0x3BD4A30
	0x03BD4A2C BL 0x1C16DFC
	0x03BD4A30 MOV X0, X20
	0x03BD4A34 MOV X1, X31
	0x03BD4A38 MOV X2, X31
	0x03BD4A3C BL 0x3C3883C
	0x03BD4A40 TBZ X0, 0x0, 0x3BD4AFC
	0x03BD4A44 ADRP X8, 0x589000
	0x03BD4A48 LDR X8, [X8 + 0xBE8]
	0x03BD4A4C MOV X0, X19
	0x03BD4A50 LDR X1, [X8]
	0x03BD4A54 BL 0x21A3F50
	0x03BD4A58 STR X0, [X19 + 0xB0]
	0x03BD4A5C MOV X20, X0
	0x03BD4A60 LDR X0, [X21]
	0x03BD4A64 LDR W8, [X0 + 0xE0]
	0x03BD4A68 CBNZ W8, 0x3BD4A70
	0x03BD4A6C BL 0x1C16DFC
	0x03BD4A70 MOV X0, X20
	0x03BD4A74 MOV X1, X31
	0x03BD4A78 MOV X2, X31
	0x03BD4A7C BL 0x3C3883C
	0x03BD4A80 TBZ X0, 0x0, 0x3BD4AFC
	0x03BD4A84 ADRP X9, 0x589000
	0x03BD4A88 LDR X8, [X19]
	0x03BD4A8C LDR X9, [X9 + 0xBF0]
	0x03BD4A90 MOV X0, X19
	0x03BD4A94 LDR X20, [X9]
	0x03BD4A98 LDP X9, X1, [X8 + 0x168]
	0x03BD4A9C BLR X9
	0x03BD4AA0 MOV X1, X0
	0x03BD4AA4 MOV X0, X20
	0x03BD4AA8 MOV X2, X31
	0x03BD4AAC BL 0x321B938
	0x03BD4AB0 ADRP X8, 0x549000
	0x03BD4AB4 LDR X8, [X8 + 0x1E8]
	0x03BD4AB8 MOV X20, X0
	0x03BD4ABC LDR X8, [X8]
	0x03BD4AC0 LDR W9, [X8 + 0xE0]
	0x03BD4AC4 CBNZ W9, 0x3BD4AD0
	0x03BD4AC8 MOV X0, X8
	0x03BD4ACC BL 0x1C16DFC
	0x03BD4AD0 MOV X0, X20
	0x03BD4AD4 MOV X1, X19
	0x03BD4AD8 MOV X2, X31
	0x03BD4ADC BL 0x3B2EF38
	0x03BD4AE0 MOV X0, X19
	0x03BD4AE4 LDP X20, X19, [X31 + 0x20]
	0x03BD4AE8 LDP X22, X21, [X31 + 0x10]
	0x03BD4AEC MOV W1, W31
	0x03BD4AF0 MOV X2, X31
	0x03BD4AF4 LDR X30, [X31], #0x30
	0x03BD4AF8 B 0x3C32410
	0x03BD4AFC LDP X20, X19, [X31 + 0x20]
	0x03BD4B00 LDP X22, X21, [X31 + 0x10]
	0x03BD4B04 LDR X30, [X31], #0x30
	0x03BD4B08 RET
	0x03BD4B0C STP X30, X21, [X31 - 0x20]!
	0x03BD4B10 STP X20, X19, [X31 + 0x10]
	0x03BD4B14 ADRP X20, 0x80E000
	0x03BD4B18 ADRP X21, 0x589000
	0x03BD4B1C LDRB W8, [X20 + 0xE70]

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+448], X29
	003 Move [X31+464], X30
	004 Move [X31+472], X21
	005 Move [X31+480], X20
	006 Move [X31+488], X19
	007 Move X21, 0x80F000
	008 Move W8, [X21+3684]
	009 Move X19, X0
	010 Add X20, X31, 352
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x588000
	016 Move X0, [X0+600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3684], W8
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Add X0, X31, 8
	022 Move W2, 344
	023 Move W1, W31
	024 Move [X31+444], W31
	025 Move [X20+48], V0
	026 Move [X20+56], V0
	027 Move [X20+16], V0
	028 Move [X20+24], V0
	029 Move [X20], V0
	030 Call 0x3EB2B10
	031 Move W8, [X19+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, W31
	034 Compare W8, 0
	035 JumpIfEqual {120}
	036 Move X20, [X19+32]
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W8, TEMP
	040 Move [X19+16], W8
	041 Compare X20, 0
	042 JumpIfEqual {130}
	043 Move W8, [X20+177]
	044 Compare W8, 0
	045 JumpIfEqual {120}
	046 Move W8, [X20+104]
	047 Compare W8, 0
	048 JumpIfEqual {53}
	049 Move W8, [X20+105]
	050 Compare W8, 0
	051 JumpIfEqual {53}
	052 Move W8, W31
	053 Move X0, [X20+168]
	054 Compare X0, 0
	055 JumpIfEqual {130}
	056 Add X1, X31, 352
	057 Add X2, X31, 444
	058 Move X3, X31
	059 Call XRRayInteractor.TryGetCurrentUIRaycastResult, X0, X1, X2
	060 Move W9, [X31+444]
	061 Move W8, W31
	062 Compare W9, 0
	063 JumpIfEqual {100}
	064 Move W9, W8
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {104}
	069 Move W8, [X20+105]
	070 Compare W8, 0
	071 JumpIfNotEqual {95}
	072 Move W8, [X20+108]
	073 Compare W8, 0
	074 JumpIfNotEqual {95}
	075 Move X0, [X20+168]
	076 Compare X0, 0
	077 JumpIfEqual {130}
	078 Add X1, X31, 8
	079 Move X2, X31
	080 Call XRRayInteractor.TryGetUIModel, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {95}
	085 Move X8, 0x588000
	086 Move X8, [X8+600]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move W8, [X31+172]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 Move W8, W31
	096 Move W9, [X20+104]
	097 Compare W9, 0
	098 JumpIfEqual {101}
	099 Move W9, W31
	100 Move W9, W8
	101 Move W9, [X20+107]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Move W10, [X20+216]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W10, [X20+217]
	107 Move [X20+216], W9
	108 Move [X20+217], W8
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X20+216], W9
	111 Move [X20+217], W8
	112 Move X8, [X20]
	113 Move X0, X20
	114 Move X9, [X8+584]
	115 Move X1, [X8+592]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 And X1, X0, 0xFFFF
	118 Move X0, X20
	119 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	120 Move W0, 1
	121 Move [X19+24], X31
	122 Move [X19+16], W0
	123 Move X20, [X31+480]
	124 Move X19, [X31+488]
	125 Move X30, [X31+464]
	126 Move X21, [X31+472]
	127 Move X29, [X31+448]
	128 Add X31, X31, 496
	129 Return X0
	130 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x03BD4B20 LDR X21, [X21 + 0xBF8]
	0x03BD4B24 MOV X19, X0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03BD4B28 TBNZ X8, 0x0, 0x3BD4B58
	0x03BD4B2C ADRP X0, 0x589000
	0x03BD4B30 LDR X0, [X0 + 0xBF8]
	0x03BD4B34 BL 0x1C16CF4
	0x03BD4B38 ADRP X0, 0x589000
	0x03BD4B3C LDR X0, [X0 + 0xC00]
	0x03BD4B40 BL 0x1C16CF4
	0x03BD4B44 ADRP X0, 0x51F000
	0x03BD4B48 LDR X0, [X0 + 0x598]
	0x03BD4B4C BL 0x1C16CF4
	0x03BD4B50 MOVZ W8, 0x1
	0x03BD4B54 STRB W8, [X20 + 0xE70]
	0x03BD4B58 LDR X1, [X21]
	0x03BD4B5C MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x520000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x58A000
	011 Move X0, [X0+2928]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03BD4B60 BL 0x2642338
	0x03BD4B64 LDRB W8, [X19 + 0xBC]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

