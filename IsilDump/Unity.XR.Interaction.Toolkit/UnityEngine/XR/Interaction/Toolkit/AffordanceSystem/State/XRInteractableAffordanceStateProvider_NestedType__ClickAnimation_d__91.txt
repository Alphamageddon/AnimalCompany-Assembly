Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/<ClickAnimation>d__91

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03BCF8E4 ADRP X10, 0x58B000
	0x03BCF8E8 LDR X8, [X20]
	0x03BCF8EC LDR X10, [X10 + 0xBD8]
	0x03BCF8F0 LDRH W9, [X8 + 0x12E]
	0x03BCF8F4 LDR X1, [X10]
	0x03BCF8F8 CBZ X9, 0x3BCF91C
	0x03BCF8FC LDR X10, [X8 + 0xB0]
	0x03BCF900 ADD X10, X10, 0x8
	0x03BCF904 LDUR X11, [X10 - 0x8]
	0x03BCF908 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03BD14E4 CBZ W8, 0x3BD1600

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03BD14E8 LDR X20, [X19 + 0xA0]
	0x03BD14EC CBZ X20, 0x3BD1704
	0x03BD14F0 ADRP X10, 0x58A000
	0x03BD14F4 LDR X8, [X20]
	0x03BD14F8 LDR X10, [X10 + 0x6D0]
	0x03BD14FC LDRH W9, [X8 + 0x12E]
	0x03BD1500 LDR X1, [X10]
	0x03BD1504 CBZ X9, 0x3BD1528
	0x03BD1508 LDR X10, [X8 + 0xB0]
	0x03BD150C ADD X10, X10, 0x8
	0x03BD1510 LDUR X11, [X10 - 0x8]
	0x03BD1514 CMP X11, X1
	0x03BD1518 B.EQ 0x3BD1538
	0x03BD151C SUBS X9, X9, 0x1
	0x03BD1520 ADD X10, X10, 0x10
	0x03BD1524 B.NE 0x3BD1510
	0x03BD1528 MOV X0, X20
	0x03BD152C MOV W2, W31
	0x03BD1530 BL 0x1C5C788
	0x03BD1534 B 0x3BD1544
	0x03BD1538 LDRSW X9, [X10]
	0x03BD153C ADD X8, X8, X9, 0x4, LSL
	0x03BD1540 ADD X0, X8, 0x138
	0x03BD1544 LDP X8, X1, [X0]
	0x03BD1548 MOV X0, X20
	0x03BD154C BLR X8
	0x03BD1550 ADRP X8, 0x524000
	0x03BD1554 LDR X8, [X8 + 0x5B0]
	0x03BD1558 MOV X20, X0
	0x03BD155C LDR X8, [X8]
	0x03BD1560 MOV X0, X8
	0x03BD1564 BL 0x1C16F10
	0x03BD1568 LDR X8, [X19]
	0x03BD156C MOV X1, X19
	0x03BD1570 MOV X3, X31
	0x03BD1574 MOV X21, X0
	0x03BD1578 LDR X2, [X8 + 0x2C0]
	0x03BD157C BL 0x2A6DA40
	0x03BD1580 CBZ X20, 0x3BD1704
	0x03BD1584 ADRP X10, 0x58C000
	0x03BD1588 LDR X8, [X20]
	0x03BD158C LDR X10, [X10 + 0xA60]
	0x03BD1590 LDRH W9, [X8 + 0x12E]
	0x03BD1594 LDR X1, [X10]
	0x03BD1598 CBZ X9, 0x3BD15BC
	0x03BD159C LDR X10, [X8 + 0xB0]
	0x03BD15A0 ADD X10, X10, 0x8
	0x03BD15A4 LDUR X11, [X10 - 0x8]
	0x03BD15A8 CMP X11, X1
	0x03BD15AC B.EQ 0x3BD15CC
	0x03BD15B0 SUBS X9, X9, 0x1
	0x03BD15B4 ADD X10, X10, 0x10
	0x03BD15B8 B.NE 0x3BD15A4
	0x03BD15BC MOV X0, X20
	0x03BD15C0 MOV W2, W31
	0x03BD15C4 BL 0x1C5C788
	0x03BD15C8 B 0x3BD15D8
	0x03BD15CC LDRSW X9, [X10]
	0x03BD15D0 ADD X8, X8, X9, 0x4, LSL
	0x03BD15D4 ADD X0, X8, 0x138
	0x03BD15D8 LDP X8, X2, [X0]
	0x03BD15DC MOV X0, X20
	0x03BD15E0 MOV X1, X21
	0x03BD15E4 BLR X8
	0x03BD15E8 LDR X8, [X19 + 0x48]
	0x03BD15EC CBZ X8, 0x3BD1704
	0x03BD15F0 MOV X1, X0
	0x03BD15F4 MOV X0, X8
	0x03BD15F8 MOV X2, X31
	0x03BD15FC BL 0x3B3175C
	0x03BD1600 LDR X20, [X19 + 0x88]
	0x03BD1604 STRB W31, [X19 + 0xC8]
	0x03BD1608 CBZ X20, 0x3BD166C
	0x03BD160C ADRP X9, 0x589000
	0x03BD1610 LDR X9, [X9 + 0x368]
	0x03BD1614 LDR X8, [X20]
	0x03BD1618 LDR X10, [X9]
	0x03BD161C LDRB W9, [X8 + 0x130]
	0x03BD1620 LDRB W11, [X10 + 0x130]
	0x03BD1624 CMP W9, W11
	0x03BD1628 B.CC 0x3BD1640
	0x03BD162C LDR X12, [X8 + 0xC8]
	0x03BD1630 ADD X11, X12, X11, 0x3, LSL
	0x03BD1634 LDUR X11, [X11 - 0x8]
	0x03BD1638 CMP X11, X10
	0x03BD163C B.EQ 0x3BD1674
	0x03BD1640 ADRP X10, 0x549000
	0x03BD1644 LDR X10, [X10 + 0x6E0]
	0x03BD1648 LDR X10, [X10]
	0x03BD164C LDRB W11, [X10 + 0x130]
	0x03BD1650 CMP W9, W11
	0x03BD1654 B.CC 0x3BD166C
	0x03BD1658 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x812000
	006 Move W8, [X20+3662]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x54D000
	013 Move X0, [X0+1344]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3662], W8
	017 Move W8, [X19+16]
	018 Move X20, [X19+40]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Compare W8, 0
	022 JumpIfNotEqual {44}
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W8, TEMP
	026 Move [X19+64], W31
	027 Move [X19+16], W8
	028 Move S0, W31
	029 Move TEMP, 0
	030 Not TEMP
	031 Move W8, TEMP
	032 Move [X19+16], W8
	033 Compare X20, 0
	034 JumpIfEqual {104}
	035 Move X0, X20
	036 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	037 Move X8, [X19+56]
	038 Compare X8, 0
	039 JumpIfEqual {44}
	040 Move X9, [X8+24]
	041 Move X0, [X8+64]
	042 Move X1, [X8+40]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move W0, W31
	045 Move V8, [X19+64]
	046 Move TEMP, 0
	047 Not TEMP
	048 Move W8, TEMP
	049 Move X0, X31
	050 Move [X19+16], W8
	051 Call Time.get_deltaTime
	052 Add S0, S8, S0
	053 Move [X19+64], S0
	054 Move V1, [X19+32]
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 Move S1, 1
	058 NotImplemented "Instruction FMIN not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move S0, W31
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 Compare X20, 0
	063 JumpIfEqual {104}
	064 Move X0, [X20+128]
	065 Compare X0, 0
	066 JumpIfEqual {104}
	067 Move X8, 0x54D000
	068 Move X8, [X8+1344]
	069 Move X1, [X8]
	070 Call DatumProperty`2<Object, Object>.get_Value, X0
	071 Compare X0, 0
	072 JumpIfEqual {104}
	073 Move V0, V8
	074 Move X1, X31
	075 Call AnimationCurve.Evaluate, X0, V0
	076 Move S1, 1
	077 Move W8, 0x437F0000
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 NotImplemented "Instruction FMIN not yet implemented."
	080 Move S1, W8
	081 Move S2, W31
	082 Multiply S0, S0, S1
	083 Move W1, [X19+48]
	084 NotImplemented "Instruction FCSEL not yet implemented."
	085 NotImplemented "Instruction FCVTZS not yet implemented."
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 And X8, X8, 255
	089 NotImplemented "Instruction BFM not yet implemented."
	090 Move X0, X20
	091 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	092 Move W0, 1
	093 Move [X19+24], X31
	094 Move [X19+16], W0
	095 Move W8, 2
	096 Move [X19+24], X31
	097 Move [X19+16], W8
	098 Move W0, 1
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X30, [X31+8]
	102 Move V8, [X31+32]
	103 Return X0
	104 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x03BD165C ADD X8, X8, X11, 0x3, LSL
	0x03BD1660 LDUR X8, [X8 - 0x8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03BD1664 CMP X8, X10
	0x03BD1668 B.EQ 0x3BD16B4
	0x03BD166C MOVZ W8, 0x1
	0x03BD1670 B 0x3BD16CC
	0x03BD1674 LDR X0, [X22]
	0x03BD1678 LDR X21, [X20 + 0x30]
	0x03BD167C LDR W8, [X0 + 0xE0]
	0x03BD1680 CBNZ W8, 0x3BD1688
	0x03BD1684 BL 0x1C16DFC
	0x03BD1688 MOV X0, X21
	0x03BD168C MOV X1, X31
	0x03BD1690 MOV X2, X31
	0x03BD1694 BL 0x3C354F8
	0x03BD1698 TBZ X0, 0x0, 0x3BD16C4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x523000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x58D000
	011 Move X0, [X0+2760]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03BD169C LDR X0, [X20 + 0x30]
	0x03BD16A0 CBZ X0, 0x3BD1704

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

