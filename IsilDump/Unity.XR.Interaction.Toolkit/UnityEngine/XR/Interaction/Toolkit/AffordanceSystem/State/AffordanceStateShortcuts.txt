Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateShortcuts

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData get_disabledState()

Disassembly:
	0x03BCD43C STP X22, X21, [X31 + 0x10]
	0x03BCD440 STP X20, X19, [X31 + 0x20]
	0x03BCD444 ADRP X21, 0x815000
	0x03BCD448 ADRP X22, 0x590000
	0x03BCD44C LDRB W8, [X21 + 0xE32]
	0x03BCD450 LDR X22, [X22 + 0x998]
	0x03BCD454 MOV X20, X1
	0x03BCD458 MOV X19, X0
	0x03BCD45C TBNZ X8, 0x0, 0x3BCD498
	0x03BCD460 ADRP X0, 0x526000
	0x03BCD464 LDR X0, [X0 + 0xA28]
	0x03BCD468 BL 0x1C16CF4
	0x03BCD46C ADRP X0, 0x590000
	0x03BCD470 LDR X0, [X0 + 0x998]
	0x03BCD474 BL 0x1C16CF4
	0x03BCD478 ADRP X0, 0x590000
	0x03BCD47C LDR X0, [X0 + 0x9A0]
	0x03BCD480 BL 0x1C16CF4
	0x03BCD484 ADRP X0, 0x590000
	0x03BCD488 LDR X0, [X0 + 0x9C8]
	0x03BCD48C BL 0x1C16CF4
	0x03BCD490 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x816000
	005 Move X19, 0x551000
	006 Move W8, [X20+3616]
	007 Move X19, [X19+1264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x551000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3616], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData get_idleState()

Disassembly:
	0x03BCD494 STRB W8, [X21 + 0xE32]
	0x03BCD498 LDR X1, [X22]
	0x03BCD49C MOV X0, X20
	0x03BCD4A0 BL 0x1C16E00
	0x03BCD4A4 CBZ X0, 0x3BCD4C0
	0x03BCD4A8 MOV X1, X0
	0x03BCD4AC MOV X0, X19
	0x03BCD4B0 LDP X20, X19, [X31 + 0x20]
	0x03BCD4B4 LDP X22, X21, [X31 + 0x10]
	0x03BCD4B8 LDR X30, [X31], #0x30
	0x03BCD4BC B 0x3BCD574
	0x03BCD4C0 ADRP X8, 0x590000
	0x03BCD4C4 LDR X8, [X8 + 0x9A0]
	0x03BCD4C8 MOV X0, X20
	0x03BCD4CC LDR X1, [X8]
	0x03BCD4D0 BL 0x1C16E00
	0x03BCD4D4 CBZ X0, 0x3BCD4F0
	0x03BCD4D8 MOV X1, X0
	0x03BCD4DC MOV X0, X19
	0x03BCD4E0 LDP X20, X19, [X31 + 0x20]
	0x03BCD4E4 LDP X22, X21, [X31 + 0x10]
	0x03BCD4E8 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x816000
	005 Move X19, 0x551000
	006 Move W8, [X20+3617]
	007 Move X19, [X19+1264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x551000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3617], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData get_hoveredState()

Disassembly:
	0x03BCD4EC B 0x3BCD5D4
	0x03BCD4F0 CBZ X20, 0x3BCD55C
	0x03BCD4F4 MOV X0, X20
	0x03BCD4F8 MOV X1, X31
	0x03BCD4FC BL 0x33BE520
	0x03BCD500 CBZ X0, 0x3BCD570
	0x03BCD504 LDR X8, [X0]
	0x03BCD508 LDP X9, X1, [X8 + 0x1A8]
	0x03BCD50C BLR X9
	0x03BCD510 ADRP X8, 0x590000
	0x03BCD514 LDR X8, [X8 + 0x9C8]
	0x03BCD518 MOV X1, X0
	0x03BCD51C MOV X2, X31
	0x03BCD520 LDR X8, [X8]
	0x03BCD524 MOV X0, X8
	0x03BCD528 BL 0x321B938
	0x03BCD52C ADRP X8, 0x526000
	0x03BCD530 LDR X8, [X8 + 0xA28]
	0x03BCD534 MOV X20, X0
	0x03BCD538 LDR X8, [X8]
	0x03BCD53C LDR W9, [X8 + 0xE0]
	0x03BCD540 CBNZ W9, 0x3BCD54C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x816000
	005 Move X19, 0x551000
	006 Move W8, [X20+3618]
	007 Move X19, [X19+1264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x551000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3618], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData get_hoveredPriorityState()

Disassembly:
	0x03BCD544 MOV X0, X8
	0x03BCD548 BL 0x1C16DFC
	0x03BCD54C MOV X0, X20
	0x03BCD550 MOV X1, X19
	0x03BCD554 MOV X2, X31
	0x03BCD558 BL 0x3C065A4
	0x03BCD55C LDP X20, X19, [X31 + 0x20]
	0x03BCD560 LDP X22, X21, [X31 + 0x10]
	0x03BCD564 MOV W0, W31
	0x03BCD568 LDR X30, [X31], #0x30
	0x03BCD56C RET
	0x03BCD570 BL 0x1C16F20
	0x03BCD574 STP X30, X21, [X31 - 0x20]!
	0x03BCD578 STP X20, X19, [X31 + 0x10]
	0x03BCD57C ADRP X21, 0x815000
	0x03BCD580 LDRB W8, [X21 + 0xE33]
	0x03BCD584 MOV X19, X1
	0x03BCD588 MOV X20, X0
	0x03BCD58C TBNZ X8, 0x0, 0x3BCD5A4
	0x03BCD590 ADRP X0, 0x590000
	0x03BCD594 LDR X0, [X0 + 0x9E0]
	0x03BCD598 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x816000
	005 Move X19, 0x551000
	006 Move W8, [X20+3619]
	007 Move X19, [X19+1264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x551000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3619], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData get_selectedState()

Disassembly:
	0x03BCD59C MOVZ W8, 0x1
	0x03BCD5A0 STRB W8, [X21 + 0xE33]
	0x03BCD5A4 MOV X0, X20
	0x03BCD5A8 BL 0x3BCD62C
	0x03BCD5AC LDR X0, [X20 + 0x30]
	0x03BCD5B0 CBZ X0, 0x3BCD5D0
	0x03BCD5B4 ADRP X8, 0x590000
	0x03BCD5B8 LDR X8, [X8 + 0x9E0]
	0x03BCD5BC MOV X1, X19
	0x03BCD5C0 LDP X20, X19, [X31 + 0x10]
	0x03BCD5C4 LDR X2, [X8]
	0x03BCD5C8 LDP X30, X21, [X31], #0x20
	0x03BCD5CC B 0x2D57E88
	0x03BCD5D0 BL 0x1C16F20
	0x03BCD5D4 STP X30, X21, [X31 - 0x20]!
	0x03BCD5D8 STP X20, X19, [X31 + 0x10]
	0x03BCD5DC ADRP X21, 0x815000
	0x03BCD5E0 LDRB W8, [X21 + 0xE34]
	0x03BCD5E4 MOV X19, X1
	0x03BCD5E8 MOV X20, X0
	0x03BCD5EC TBNZ X8, 0x0, 0x3BCD604
	0x03BCD5F0 ADRP X0, 0x590000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x816000
	005 Move X19, 0x551000
	006 Move W8, [X20+3620]
	007 Move X19, [X19+1264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x551000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3620], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData get_activatedState()

Disassembly:
	0x03BCD5F4 LDR X0, [X0 + 0x9E8]
	0x03BCD5F8 BL 0x1C16CF4
	0x03BCD5FC MOVZ W8, 0x1
	0x03BCD600 STRB W8, [X21 + 0xE34]
	0x03BCD604 LDR X0, [X20 + 0x38]
	0x03BCD608 CBZ X0, 0x3BCD628
	0x03BCD60C ADRP X8, 0x590000
	0x03BCD610 LDR X8, [X8 + 0x9E8]
	0x03BCD614 MOV X1, X19
	0x03BCD618 LDP X20, X19, [X31 + 0x10]
	0x03BCD61C LDR X2, [X8]
	0x03BCD620 LDP X30, X21, [X31], #0x20
	0x03BCD624 B 0x2D57E88
	0x03BCD628 BL 0x1C16F20
	0x03BCD62C SUB X31, X31, 0x30
	0x03BCD630 STP X30, X21, [X31 + 0x10]
	0x03BCD634 STP X20, X19, [X31 + 0x20]
	0x03BCD638 ADRP X20, 0x815000
	0x03BCD63C LDRB W8, [X20 + 0xE35]
	0x03BCD640 MOV X19, X0
	0x03BCD644 TBNZ X8, 0x0, 0x3BCD674
	0x03BCD648 ADRP X0, 0x590000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x816000
	005 Move X19, 0x551000
	006 Move W8, [X20+3621]
	007 Move X19, [X19+1264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x551000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3621], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData get_focusedState()

Disassembly:
	0x03BCD64C LDR X0, [X0 + 0x9F0]
	0x03BCD650 BL 0x1C16CF4
	0x03BCD654 ADRP X0, 0x590000
	0x03BCD658 LDR X0, [X0 + 0x960]
	0x03BCD65C BL 0x1C16CF4
	0x03BCD660 ADRP X0, 0x590000
	0x03BCD664 LDR X0, [X0 + 0x9F8]
	0x03BCD668 BL 0x1C16CF4
	0x03BCD66C MOVZ W8, 0x1
	0x03BCD670 STRB W8, [X20 + 0xE35]
	0x03BCD674 STP X31, X31, [X31]
	0x03BCD678 LDR X0, [X19 + 0x40]
	0x03BCD67C CBZ X0, 0x3BCD6C0
	0x03BCD680 ADRP X21, 0x590000
	0x03BCD684 LDR X21, [X21 + 0x9F8]
	0x03BCD688 MOV W20, W31
	0x03BCD68C LDR W8, [X0 + 0x18]
	0x03BCD690 CMP W20, W8
	0x03BCD694 B.GE 0x3BCD6C4
	0x03BCD698 LDR X2, [X21]
	0x03BCD69C MOV W1, W20
	0x03BCD6A0 BL 0x2FE9F98

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x816000
	005 Move X19, 0x551000
	006 Move W8, [X20+3622]
	007 Move X19, [X19+1264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x551000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3622], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Byte get_stateCount()

Disassembly:
	0x03BCD6A4 STP X0, X1, [X31]
	0x03BCD6A8 ADD X0, X31, 0x0
	0x03BCD6AC MOV X1, X31
	0x03BCD6B0 BL 0x3BFDCAC
	0x03BCD6B4 LDR X0, [X19 + 0x40]
	0x03BCD6B8 ADD W20, W20, 0x1
	0x03BCD6BC CBNZ X0, 0x3BCD68C
	0x03BCD6C0 BL 0x1C16F20
	0x03BCD6C4 LDR W9, [X0 + 0x1C]
	0x03BCD6C8 LDP X20, X19, [X31 + 0x20]
	0x03BCD6CC LDP X30, X21, [X31 + 0x10]
	0x03BCD6D0 CMP W8, 0x0
	0x03BCD6D4 CSET W8, GT
	0x03BCD6D8 ADD W9, W9, 0x1
	0x03BCD6DC STP W31, W9, [X0 + 0x18]
	0x03BCD6E0 MOV W0, W8
	0x03BCD6E4 ADD X31, X31, 0x30
	0x03BCD6E8 RET
	0x03BCD6EC STP X29, X30, [X31 - 0x60]!
	0x03BCD6F0 STP X28, X27, [X31 + 0x10]
	0x03BCD6F4 STP X26, X25, [X31 + 0x20]
	0x03BCD6F8 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x816000
	005 Move X19, 0x551000
	006 Move W8, [X20+3623]
	007 Move X19, [X19+1264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x551000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3623], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.String GetNameForIndex(System.Byte index)

Disassembly:
	0x03BCD0B4 LDR V8, [X19 + 0x50]
	0x03BCD0B8 MOV X0, X31
	0x03BCD0BC BL 0x3C3C714
	0x03BCD0C0 FADD S0, S8, S0
	0x03BCD0C4 STR S0, [X19 + 0x50]
	0x03BCD0C8 LDP X20, X19, [X31 + 0x60]
	0x03BCD0CC LDP X22, X21, [X31 + 0x50]
	0x03BCD0D0 LDP X24, X23, [X31 + 0x40]
	0x03BCD0D4 LDP X26, X25, [X31 + 0x30]
	0x03BCD0D8 LDP X28, X27, [X31 + 0x20]
	0x03BCD0DC LDP X29, X30, [X31 + 0x10]
	0x03BCD0E0 LDR V8, [X31], #0x70
	0x03BCD0E4 RET
	0x03BCD0E8 STR X30, [X31 - 0x30]!
	0x03BCD0EC STP X22, X21, [X31 + 0x10]
	0x03BCD0F0 STP X20, X19, [X31 + 0x20]
	0x03BCD0F4 ADRP X20, 0x815000
	0x03BCD0F8 ADRP X22, 0x590000
	0x03BCD0FC ADRP X21, 0x590000
	0x03BCD100 LDRB W8, [X20 + 0xE2C]
	0x03BCD104 LDR X22, [X22 + 0x9B0]
	0x03BCD108 LDR X21, [X21 + 0x9B8]
	0x03BCD10C MOV X19, X0
	0x03BCD110 TBNZ X8, 0x0, 0x3BCD140
	0x03BCD114 ADRP X0, 0x590000
	0x03BCD118 LDR X0, [X0 + 0x9B0]
	0x03BCD11C BL 0x1C16CF4
	0x03BCD120 ADRP X0, 0x590000
	0x03BCD124 LDR X0, [X0 + 0x9B8]
	0x03BCD128 BL 0x1C16CF4
	0x03BCD12C ADRP X0, 0x590000
	0x03BCD130 LDR X0, [X0 + 0x9C0]
	0x03BCD134 BL 0x1C16CF4
	0x03BCD138 MOVZ W8, 0x1
	0x03BCD13C STRB W8, [X20 + 0xE2C]
	0x03BCD140 LDR X8, [X19]
	0x03BCD144 MOV X0, X19
	0x03BCD148 LDP X9, X1, [X8 + 0x1C8]
	0x03BCD14C BLR X9
	0x03BCD150 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x816000
	007 Move X20, 0x551000
	008 Move W8, [X21+3624]
	009 Move X20, [X20+1264]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x551000
	016 Move X0, [X0+1264]
	017 Call 0x1C17CF4
	018 Move X0, 0x591000
	019 Move X0, [X0+2336]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3624], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X0, [X8+16]
	032 Compare X0, 0
	033 JumpIfEqual {49}
	034 Move X8, 0x591000
	035 Move X8, [X8+2336]
	036 Add X2, X31, 8
	037 Move W1, W19
	038 Move X3, [X8]
	039 Call Dictionary`2<Byte, Object>.TryGetValue, X0, X1, X2
	040 Move X8, [X31+8]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 And W31, W0, 1
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Add X31, X31, 48
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03BCD6FC STP X22, X21, [X31 + 0x40]
	0x03BCD700 STP X20, X19, [X31 + 0x50]
	0x03BCD704 ADRP X29, 0x815000
	0x03BCD708 ADRP X28, 0x550000
	0x03BCD70C ADRP X20, 0x550000
	0x03BCD710 ADRP X27, 0x590000
	0x03BCD714 ADRP X26, 0x590000
	0x03BCD718 ADRP X25, 0x590000
	0x03BCD71C ADRP X24, 0x590000
	0x03BCD720 ADRP X23, 0x590000
	0x03BCD724 ADRP X22, 0x590000
	0x03BCD728 ADRP X21, 0x58D000
	0x03BCD72C LDR X28, [X28 + 0x530]
	0x03BCD730 LDR X20, [X20 + 0x538]
	0x03BCD734 LDR X27, [X27 + 0xA00]
	0x03BCD738 LDR X26, [X26 + 0xA08]
	0x03BCD73C LDRB W8, [X29 + 0xE37]
	0x03BCD740 LDR X25, [X25 + 0xA10]
	0x03BCD744 LDR X24, [X24 + 0xA18]
	0x03BCD748 LDR X23, [X23 + 0xA20]
	0x03BCD74C LDR X22, [X22 + 0xA28]
	0x03BCD750 LDR X21, [X21 + 0xA88]
	0x03BCD754 MOV X19, X0
	0x03BCD758 TBNZ X8, 0x0, 0x3BCD7D0
	0x03BCD75C ADRP X0, 0x550000
	0x03BCD760 LDR X0, [X0 + 0x538]
	0x03BCD764 BL 0x1C16CF4
	0x03BCD768 ADRP X0, 0x550000
	0x03BCD76C LDR X0, [X0 + 0x530]
	0x03BCD770 BL 0x1C16CF4
	0x03BCD774 ADRP X0, 0x58D000
	0x03BCD778 LDR X0, [X0 + 0xA88]
	0x03BCD77C BL 0x1C16CF4
	0x03BCD780 ADRP X0, 0x590000
	0x03BCD784 LDR X0, [X0 + 0xA18]
	0x03BCD788 BL 0x1C16CF4
	0x03BCD78C ADRP X0, 0x590000
	0x03BCD790 LDR X0, [X0 + 0xA08]
	0x03BCD794 BL 0x1C16CF4
	0x03BCD798 ADRP X0, 0x590000
	0x03BCD79C LDR X0, [X0 + 0xA10]
	0x03BCD7A0 BL 0x1C16CF4
	0x03BCD7A4 ADRP X0, 0x590000
	0x03BCD7A8 LDR X0, [X0 + 0xA00]
	0x03BCD7AC BL 0x1C16CF4
	0x03BCD7B0 ADRP X0, 0x590000
	0x03BCD7B4 LDR X0, [X0 + 0xA28]
	0x03BCD7B8 BL 0x1C16CF4
	0x03BCD7BC ADRP X0, 0x590000
	0x03BCD7C0 LDR X0, [X0 + 0xA20]
	0x03BCD7C4 BL 0x1C16CF4
	0x03BCD7C8 MOVZ W8, 0x1
	0x03BCD7CC STRB W8, [X29 + 0xE37]
	0x03BCD7D0 MOVZ W8, 0x3E000000
	0x03BCD7D4 STR W8, [X19 + 0x20]
	0x03BCD7D8 LDR X0, [X28]
	0x03BCD7DC BL 0x1C16F10
	0x03BCD7E0 LDR X5, [X20]
	0x03BCD7E4 MOVZ W2, 0x1
	0x03BCD7E8 MOV X1, X31
	0x03BCD7EC MOV X3, X31
	0x03BCD7F0 MOV W4, W31
	0x03BCD7F4 MOV X20, X0
	0x03BCD7F8 MOVZ W28, 0x1
	0x03BCD7FC BL 0x28E275C
	0x03BCD800 STR X20, [X19 + 0x28]
	0x03BCD804 LDR X0, [X27]
	0x03BCD808 BL 0x1C16F10
	0x03BCD80C LDR X2, [X26]
	0x03BCD810 MOV W1, W31
	0x03BCD814 MOV X20, X0
	0x03BCD818 BL 0x2D57B9C
	0x03BCD81C STR X20, [X19 + 0x30]
	0x03BCD820 LDR X0, [X25]
	0x03BCD824 BL 0x1C16F10
	0x03BCD828 LDR X2, [X24]
	0x03BCD82C MOV W1, W31
	0x03BCD830 MOV X20, X0
	0x03BCD834 BL 0x2D57B9C
	0x03BCD838 STR X20, [X19 + 0x38]
	0x03BCD83C LDR X0, [X23]
	0x03BCD840 BL 0x1C16F10
	0x03BCD844 LDR X1, [X22]
	0x03BCD848 MOV X20, X0
	0x03BCD84C BL 0x2FE9A90
	0x03BCD850 STR X20, [X19 + 0x40]
	0x03BCD854 LDR X0, [X21]
	0x03BCD858 BL 0x1C16F10
	0x03BCD85C MOV X1, X31
	0x03BCD860 MOV X20, X0
	0x03BCD864 BL 0x3B31C38
	0x03BCD868 ADRP X8, 0xFFFFFFFFFCF21000
	0x03BCD86C LDR V0, [X8 + 0x4F0]
	0x03BCD870 STR X20, [X19 + 0x48]
	0x03BCD874 STRB W28, [X19 + 0x54]
	0x03BCD878 MOV X0, X19
	0x03BCD87C STR D0, [X19 + 0x58]
	0x03BCD880 LDP X20, X19, [X31 + 0x50]
	0x03BCD884 LDP X22, X21, [X31 + 0x40]
	0x03BCD888 LDP X24, X23, [X31 + 0x30]
	0x03BCD88C LDP X26, X25, [X31 + 0x20]
	0x03BCD890 LDP X28, X27, [X31 + 0x10]
	0x03BCD894 MOV X1, X31
	0x03BCD898 LDP X29, X30, [X31], #0x60
	0x03BCD89C B 0x3C36C30
	0x03BCD8A0 LDR X0, [X0 + 0x60]
	0x03BCD8A4 RET
	0x03BCD8A8 STR X30, [X31 - 0x30]!
	0x03BCD8AC STP X22, X21, [X31 + 0x10]
	0x03BCD8B0 STP X20, X19, [X31 + 0x20]
	0x03BCD8B4 ADRP X22, 0x815000
	0x03BCD8B8 ADRP X21, 0x526000
	0x03BCD8BC LDRB W8, [X22 + 0xE38]
	0x03BCD8C0 LDR X21, [X21 + 0x970]
	0x03BCD8C4 MOV X20, X1
	0x03BCD8C8 MOV X19, X0
	0x03BCD8CC TBNZ X8, 0x0, 0x3BCD8F0
	0x03BCD8D0 ADRP X0, 0x526000
	0x03BCD8D4 LDR X0, [X0 + 0x970]
	0x03BCD8D8 BL 0x1C16CF4
	0x03BCD8DC ADRP X0, 0x58D000
	0x03BCD8E0 LDR X0, [X0 + 0x8D8]
	0x03BCD8E4 BL 0x1C16CF4
	0x03BCD8E8 MOVZ W8, 0x1
	0x03BCD8EC STRB W8, [X22 + 0xE38]
	0x03BCD8F0 STR X20, [X19 + 0x60]
	0x03BCD8F4 LDR X0, [X21]
	0x03BCD8F8 LDR W8, [X0 + 0xE0]
	0x03BCD8FC CBNZ W8, 0x3BCD904
	0x03BCD900 BL 0x1C16DFC
	0x03BCD904 MOV X0, X31
	0x03BCD908 BL 0x3C018E4
	0x03BCD90C TBZ X0, 0x0, 0x3BCD94C
	0x03BCD910 MOV X0, X19
	0x03BCD914 MOV X1, X31
	0x03BCD918 BL 0x3C32454
	0x03BCD91C TBZ X0, 0x0, 0x3BCD94C
	0x03BCD920 ADRP X8, 0x58D000
	0x03BCD924 LDR X8, [X8 + 0x8D8]
	0x03BCD928 MOV X0, X20
	0x03BCD92C LDR X1, [X8]
	0x03BCD930 BL 0x1C16E00
	0x03BCD934 MOV X1, X0
	0x03BCD938 MOV X0, X19
	0x03BCD93C LDP X20, X19, [X31 + 0x20]
	0x03BCD940 LDP X22, X21, [X31 + 0x10]
	0x03BCD944 LDR X30, [X31], #0x30
	0x03BCD948 B 0x3BCD95C
	0x03BCD94C LDP X20, X19, [X31 + 0x20]
	0x03BCD950 LDP X22, X21, [X31 + 0x10]
	0x03BCD954 LDR X30, [X31], #0x30
	0x03BCD958 RET
	0x03BCD95C STP X30, X21, [X31 - 0x20]!
	0x03BCD960 STP X20, X19, [X31 + 0x10]
	0x03BCD964 ADRP X21, 0x815000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x816000
	013 Move X20, 0x551000
	014 Move X21, 0x591000
	015 Move X19, 0x591000
	016 Move W8, [X22+3625]
	017 Move X20, [X20+1264]
	018 Move X21, [X21+2368]
	019 Move X19, [X19+2376]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {62}
	024 Move X0, 0x551000
	025 Move X0, [X0+1264]
	026 Call 0x1C17CF4
	027 Move X0, 0x591000
	028 Move X0, [X0+2384]
	029 Call 0x1C17CF4
	030 Move X0, 0x591000
	031 Move X0, [X0+2376]
	032 Call 0x1C17CF4
	033 Move X0, 0x591000
	034 Move X0, [X0+2392]
	035 Call 0x1C17CF4
	036 Move X0, 0x591000
	037 Move X0, [X0+2368]
	038 Call 0x1C17CF4
	039 Move X0, 0x52D000
	040 Move X0, [X0+1256]
	041 Call 0x1C17CF4
	042 Move X0, 0x551000
	043 Move X0, [X0+1360]
	044 Call 0x1C17CF4
	045 Move X0, 0x551000
	046 Move X0, [X0+1368]
	047 Call 0x1C17CF4
	048 Move X0, 0x551000
	049 Move X0, [X0+1376]
	050 Call 0x1C17CF4
	051 Move X0, 0x551000
	052 Move X0, [X0+1384]
	053 Call 0x1C17CF4
	054 Move X0, 0x551000
	055 Move X0, [X0+1392]
	056 Call 0x1C17CF4
	057 Move X0, 0x551000
	058 Move X0, [X0+1400]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+3625], W8
	062 Move X8, [X20]
	063 Move W9, 0xFF00
	064 Move W10, 0xFF04
	065 Move X8, [X8+184]
	066 NotImplemented "Instruction STRH not yet implemented."
	067 Move X8, [X20]
	068 Move W9, 0xFF01
	069 Move X8, [X8+184]
	070 NotImplemented "Instruction STRH not yet implemented."
	071 Move X8, [X20]
	072 Move W9, 2
	073 Move X8, [X8+184]
	074 NotImplemented "Instruction STRH not yet implemented."
	075 Move X8, [X20]
	076 Move W9, 3
	077 Move X8, [X8+184]
	078 NotImplemented "Instruction STRH not yet implemented."
	079 Move X8, [X20]
	080 Move X9, [X8+184]
	081 NotImplemented "Instruction STRH not yet implemented."
	082 Move X9, [X8+184]
	083 Move W10, 0xFF05
	084 NotImplemented "Instruction STRH not yet implemented."
	085 Move X8, [X8+184]
	086 Move W9, 0xFF06
	087 NotImplemented "Instruction STRH not yet implemented."
	088 Move X0, [X21]
	089 Call 0x1C17F10
	090 Move X1, [X19]
	091 Move X19, X0
	092 Call Dictionary`2<Byte, Object>..ctor, X0
	093 Compare X19, 0
	094 JumpIfEqual {169}
	095 Move X8, 0x551000
	096 Move X22, 0x591000
	097 Move X8, [X8+1360]
	098 Move X22, [X22+2384]
	099 Move X23, 0x52D000
	100 Move X24, 0x551000
	101 Move X25, 0x551000
	102 Move X26, 0x551000
	103 Move X23, [X23+1256]
	104 Move X24, [X24+1400]
	105 Move X25, [X25+1384]
	106 Move X26, [X26+1392]
	107 Move X2, [X8]
	108 Move X3, [X22]
	109 Move X27, 0x551000
	110 Move X28, 0x551000
	111 Move X21, 0x591000
	112 Move X27, [X27+1368]
	113 Move X28, [X28+1376]
	114 Move X21, [X21+2392]
	115 Move X0, X19
	116 Move W1, W31
	117 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	118 Move X2, [X23]
	119 Move X3, [X22]
	120 Move W1, 1
	121 Move X0, X19
	122 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	123 Move X2, [X24]
	124 Move X3, [X22]
	125 Move W1, 2
	126 Move X0, X19
	127 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	128 Move X2, [X25]
	129 Move X3, [X22]
	130 Move W1, 3
	131 Move X0, X19
	132 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	133 Move X2, [X26]
	134 Move X3, [X22]
	135 Move W1, 4
	136 Move X0, X19
	137 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	138 Move X2, [X27]
	139 Move X3, [X22]
	140 Move W1, 5
	141 Move X0, X19
	142 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	143 Move X2, [X28]
	144 Move X3, [X22]
	145 Move W1, 6
	146 Move X0, X19
	147 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	148 Move X8, [X20]
	149 Move X0, X19
	150 Move X8, [X8+184]
	151 Move [X8+16], X19
	152 Move X1, [X21]
	153 Call Dictionary`2<Byte, Object>.get_Count, X0
	154 Move X8, [X20]
	155 Move X20, [X31+80]
	156 Move X19, [X31+88]
	157 Move X22, [X31+64]
	158 Move X21, [X31+72]
	159 Move X24, [X31+48]
	160 Move X23, [X31+56]
	161 Move X8, [X8+184]
	162 Move X26, [X31+32]
	163 Move X25, [X31+40]
	164 Move X28, [X31+16]
	165 Move X27, [X31+24]
	166 Move [X8+24], W0
	167 Move X30, [X31+96]
	168 Return 
	169 Call 0x1C17F20

