Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData

Method: System.Byte get_stateIndex()

Disassembly:
	0x03BCD2CC LDR X30, [X31], #0x30
	0x03BCD2D0 B 0x3BCD388

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Byte get_stateTransitionIncrement()

Disassembly:
	0x03BCD2D4 ADRP X8, 0x590000
	0x03BCD2D8 LDR X8, [X8 + 0x9A0]

ISIL:
	001 Move W0, [X0+1]
	002 Return X0

Method: System.Single get_stateTransitionAmountFloat()

Disassembly:
	0x03BCD2DC MOV X0, X20
	0x03BCD2E0 LDR X1, [X8]
	0x03BCD2E4 BL 0x1C16E00
	0x03BCD2E8 CBZ X0, 0x3BCD304
	0x03BCD2EC MOV X1, X0
	0x03BCD2F0 MOV X0, X19

ISIL:
	001 Move V0, [X0+1]
	002 Move W8, 0x437F0000
	003 Move S1, W8
	004 NotImplemented "Instruction UCVTF not yet implemented."
	005 NotImplemented "Instruction FDIV not yet implemented."
	006 Return V0

Method: System.Void .ctor(System.Byte stateIndex, System.Single transitionAmount)

Disassembly:
	0x03BCD2F4 LDP X20, X19, [X31 + 0x20]
	0x03BCD2F8 LDP X22, X21, [X31 + 0x10]
	0x03BCD2FC LDR X30, [X31], #0x30
	0x03BCD300 B 0x3BCD3E0
	0x03BCD304 CBZ X20, 0x3BCD370
	0x03BCD308 MOV X0, X20
	0x03BCD30C MOV X1, X31
	0x03BCD310 BL 0x33BE520
	0x03BCD314 CBZ X0, 0x3BCD384
	0x03BCD318 LDR X8, [X0]
	0x03BCD31C LDP X9, X1, [X8 + 0x1A8]
	0x03BCD320 BLR X9
	0x03BCD324 ADRP X8, 0x590000
	0x03BCD328 LDR X8, [X8 + 0x9C8]

ISIL:
	001 Move S1, 1
	002 Move W8, 0x437F0000
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction FMIN not yet implemented."
	005 Move S1, W8
	006 Move S2, W31
	007 Multiply S0, S0, S1
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 NotImplemented "Instruction FCVTZS not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 Move [X0], W1
	013 Move [X0+1], W8
	014 Return 

Method: System.Void .ctor(System.Byte stateIndex, System.Byte transitionIncrement)

Disassembly:
	0x03BCD32C MOV X1, X0
	0x03BCD330 MOV X2, X31
	0x03BCD334 LDR X8, [X8]

ISIL:
	001 Move [X0], W1
	002 Move [X0+1], W2
	003 Return 

Method: System.Boolean Equals(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData other)

Disassembly:
	0x03BCD338 MOV X0, X8
	0x03BCD33C BL 0x321B938
	0x03BCD340 ADRP X8, 0x526000
	0x03BCD344 LDR X8, [X8 + 0xA28]
	0x03BCD348 MOV X20, X0
	0x03BCD34C LDR X8, [X8]
	0x03BCD350 LDR W9, [X8 + 0xE0]
	0x03BCD354 CBNZ W9, 0x3BCD360
	0x03BCD358 MOV X0, X8
	0x03BCD35C BL 0x1C16DFC

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+1]
	004 Move X9, X1
	005 ShiftRight X9, 8
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0
	010 Move W0, W31
	011 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03BCD360 MOV X0, X20
	0x03BCD364 MOV X1, X19
	0x03BCD368 MOV X2, X31
	0x03BCD36C BL 0x3C065A4
	0x03BCD370 LDP X20, X19, [X31 + 0x20]
	0x03BCD374 LDP X22, X21, [X31 + 0x10]
	0x03BCD378 MOV W0, W31
	0x03BCD37C LDR X30, [X31], #0x30
	0x03BCD380 RET
	0x03BCD384 BL 0x1C16F20
	0x03BCD388 STP X30, X21, [X31 - 0x20]!
	0x03BCD38C STP X20, X19, [X31 + 0x10]
	0x03BCD390 ADRP X21, 0x815000
	0x03BCD394 LDRB W8, [X21 + 0xE30]
	0x03BCD398 MOV X19, X1
	0x03BCD39C MOV X20, X0
	0x03BCD3A0 TBNZ X8, 0x0, 0x3BCD3B8
	0x03BCD3A4 ADRP X0, 0x590000
	0x03BCD3A8 LDR X0, [X0 + 0x9D0]
	0x03BCD3AC BL 0x1C16CF4
	0x03BCD3B0 MOVZ W8, 0x1
	0x03BCD3B4 STRB W8, [X21 + 0xE30]
	0x03BCD3B8 LDR X0, [X20 + 0x30]
	0x03BCD3BC CBZ X0, 0x3BCD3DC
	0x03BCD3C0 ADRP X8, 0x590000
	0x03BCD3C4 LDR X8, [X8 + 0x9D0]
	0x03BCD3C8 MOV X1, X19
	0x03BCD3CC LDP X20, X19, [X31 + 0x10]
	0x03BCD3D0 LDR X2, [X8]
	0x03BCD3D4 LDP X30, X21, [X31], #0x20
	0x03BCD3D8 B 0x2D57DD8
	0x03BCD3DC BL 0x1C16F20
	0x03BCD3E0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x816000
	006 Move W8, [X21+3615]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x552000
	014 Move X0, [X0+1120]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3615], W8
	018 Compare X20, 0
	019 JumpIfEqual {33}
	020 Move X8, 0x552000
	021 Move X8, [X8+1120]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+1]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, W31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03BCD3E4 STP X20, X19, [X31 + 0x10]
	0x03BCD3E8 ADRP X21, 0x815000
	0x03BCD3EC LDRB W8, [X21 + 0xE31]
	0x03BCD3F0 MOV X19, X1
	0x03BCD3F4 MOV X20, X0
	0x03BCD3F8 TBNZ X8, 0x0, 0x3BCD410
	0x03BCD3FC ADRP X0, 0x590000
	0x03BCD400 LDR X0, [X0 + 0x9D8]
	0x03BCD404 BL 0x1C16CF4
	0x03BCD408 MOVZ W8, 0x1
	0x03BCD40C STRB W8, [X21 + 0xE31]
	0x03BCD410 LDR X0, [X20 + 0x38]
	0x03BCD414 CBZ X0, 0x3BCD434
	0x03BCD418 ADRP X8, 0x590000
	0x03BCD41C LDR X8, [X8 + 0x9D8]
	0x03BCD420 MOV X1, X19
	0x03BCD424 LDP X20, X19, [X31 + 0x10]
	0x03BCD428 LDR X2, [X8]
	0x03BCD42C LDP X30, X21, [X31], #0x20
	0x03BCD430 B 0x2D57DD8
	0x03BCD434 BL 0x1C16F20
	0x03BCD438 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0]
	005 Move X19, X0
	006 Add X0, X31, 12
	007 Move X1, X31
	008 Move [X31+12], W8
	009 Call Byte.GetHashCode, X0
	010 Move W8, [X19+1]
	011 Move W20, W0
	012 Add X0, X31, 12
	013 Move X1, X31
	014 Move [X31+12], W8
	015 Call Byte.GetHashCode, X0
	016 Move W8, W20
	017 ShiftRight W8, 27
	018 And W8, W8, 0x3FFFFFF
	019 Subtract W8, W8, W20
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add W8, W8, W0
	023 Move W9, 0x3FD1
	024 Add W0, W8, W9
	025 Move X30, [X31+32]
	026 Return X0

