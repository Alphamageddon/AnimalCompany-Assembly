Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider

Method: UnityEngine.Object get_interactableSource()

Disassembly:
	0x03BCE8A0 STRB W8, [X22 + 0xE48]
	0x03BCE8A4 LDR X0, [X23]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_interactableSource(UnityEngine.Object value)

Disassembly:
	0x03BCE8A8 BL 0x1C16F10
	0x03BCE8AC MOV X1, X31
	0x03BCE8B0 MOV X22, X0
	0x03BCE8B4 BL 0x33BDD8C
	0x03BCE8B8 STR W31, [X22 + 0x10]
	0x03BCE8BC STR X21, [X22 + 0x28]
	0x03BCE8C0 STRB W20, [X22 + 0x30]
	0x03BCE8C4 STR S8, [X22 + 0x20]
	0x03BCE8C8 STR X19, [X22 + 0x38]
	0x03BCE8CC MOV X0, X22
	0x03BCE8D0 LDP X20, X19, [X31 + 0x30]
	0x03BCE8D4 LDP X22, X21, [X31 + 0x20]
	0x03BCE8D8 LDP X30, X23, [X31 + 0x10]
	0x03BCE8DC LDR V8, [X31], #0x40
	0x03BCE8E0 RET
	0x03BCE8E4 STR X30, [X31 - 0x20]!
	0x03BCE8E8 STP X20, X19, [X31 + 0x10]
	0x03BCE8EC MOV W19, W1
	0x03BCE8F0 MOV X1, X31
	0x03BCE8F4 MOV X20, X0
	0x03BCE8F8 BL 0x33BDD8C
	0x03BCE8FC STR W19, [X20 + 0x10]
	0x03BCE900 LDP X20, X19, [X31 + 0x10]
	0x03BCE904 LDR X30, [X31], #0x20
	0x03BCE908 RET
	0x03BCE90C STR D8, [X31 - 0x20]!
	0x03BCE910 STR X30, [X31 + 0x8]
	0x03BCE914 STP X20, X19, [X31 + 0x10]
	0x03BCE918 ADRP X20, 0x814000
	0x03BCE91C LDRB W8, [X20 + 0xE49]
	0x03BCE920 MOV X19, X0
	0x03BCE924 TBNZ X8, 0x0, 0x3BCE960
	0x03BCE928 ADRP X0, 0x54F000
	0x03BCE92C LDR X0, [X0 + 0x4F0]
	0x03BCE930 BL 0x1C16CF4
	0x03BCE934 ADRP X0, 0x58F000
	0x03BCE938 LDR X0, [X0 + 0xA60]
	0x03BCE93C BL 0x1C16CF4
	0x03BCE940 ADRP X0, 0x54F000
	0x03BCE944 LDR X0, [X0 + 0x590]
	0x03BCE948 BL 0x1C16CF4
	0x03BCE94C ADRP X0, 0x58C000
	0x03BCE950 LDR X0, [X0 + 0xBD8]
	0x03BCE954 BL 0x1C16CF4
	0x03BCE958 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x815000
	007 Move X21, 0x526000
	008 Move W8, [X22+3640]
	009 Move X21, [X21+2416]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x526000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move X0, 0x58D000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3640], W8
	024 Move [X19+96], X20
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call Application.get_isPlaying
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {55}
	036 Move X0, X19
	037 Move X1, X31
	038 Call Behaviour.get_isActiveAndEnabled, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {55}
	043 Move X8, 0x58D000
	044 Move X8, [X8+2264]
	045 Move X0, X20
	046 Move X1, [X8]
	047 Call 0x1C17E00
	048 Move X1, X0
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 

Method: System.Boolean get_ignoreHoverEvents()

Disassembly:
	0x03BCEB30 LDRB W8, [X19 + 0xEAA]
	0x03BCEB34 CBNZ W8, 0x3BCEB4C

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_ignoreHoverEvents(System.Boolean value)

Disassembly:
	0x03BCEB38 ADRP X0, 0x54F000
	0x03BCEB3C LDR X0, [X0 + 0x4F0]
	0x03BCEB40 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.Boolean get_ignoreHoverPriorityEvents()

Disassembly:
	0x03BCEB44 MOVZ W8, 0x1
	0x03BCEB48 STRB W8, [X19 + 0xEAA]

ISIL:
	001 Move W0, [X0+105]
	002 Return X0

Method: System.Void set_ignoreHoverPriorityEvents(System.Boolean value)

Disassembly:
	0x03BCEB4C LDR X0, [X20]
	0x03BCEB50 LDR W8, [X0 + 0xE0]
	0x03BCEB54 CBNZ W8, 0x3BCEB60
	0x03BCEB58 BL 0x1C16DFC
	0x03BCEB5C LDR X0, [X20]
	0x03BCEB60 LDR X8, [X0 + 0xB8]
	0x03BCEB64 LDRH W8, [X8]
	0x03BCEB68 B 0x3BCEBE8
	0x03BCEB6C LDR W9, [X10]
	0x03BCEB70 ADD W9, W9, 0x3
	0x03BCEB74 ADD X8, X8, W9, 0x4, SXTW
	0x03BCEB78 ADD X0, X8, 0x138
	0x03BCEB7C LDP X8, X1, [X0]
	0x03BCEB80 MOV X0, X19
	0x03BCEB84 BLR X8
	0x03BCEB88 UBFM X9, X0, 0x8, 0x3F
	0x03BCEB8C AND X8, X0, 0xFFFF
	0x03BCEB90 B 0x3BCEBEC
	0x03BCEB94 ADRP X19, 0x54F000
	0x03BCEB98 LDR X19, [X19 + 0x4F0]
	0x03BCEB9C LDR X0, [X19]
	0x03BCEBA0 LDR W8, [X0 + 0xE0]
	0x03BCEBA4 CBNZ W8, 0x3BCEBAC
	0x03BCEBA8 BL 0x1C16DFC
	0x03BCEBAC ADRP X20, 0x814000
	0x03BCEBB0 LDRB W8, [X20 + 0xEA8]
	0x03BCEBB4 CBNZ W8, 0x3BCEBCC
	0x03BCEBB8 ADRP X0, 0x54F000
	0x03BCEBBC LDR X0, [X0 + 0x4F0]
	0x03BCEBC0 BL 0x1C16CF4
	0x03BCEBC4 MOVZ W8, 0x1
	0x03BCEBC8 STRB W8, [X20 + 0xEA8]
	0x03BCEBCC LDR X0, [X19]
	0x03BCEBD0 LDR W8, [X0 + 0xE0]
	0x03BCEBD4 CBNZ W8, 0x3BCEBE0
	0x03BCEBD8 BL 0x1C16DFC
	0x03BCEBDC LDR X0, [X19]
	0x03BCEBE0 LDR X8, [X0 + 0xB8]
	0x03BCEBE4 LDRH W8, [X8 + 0xA]
	0x03BCEBE8 UBFM X9, X8, 0x8, 0x1F
	0x03BCEBEC LDP X20, X19, [X31 + 0x10]
	0x03BCEBF0 LDR X30, [X31 + 0x8]
	0x03BCEBF4 AND X9, X9, 0xFF
	0x03BCEBF8 AND X0, X8, 0xFF
	0x03BCEBFC BFM X0, X9, 0x38, 0x7
	0x03BCEC00 LDR V8, [X31], #0x20
	0x03BCEC04 RET
	0x03BCEC08 LDRB W8, [X19 + 0xD6]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x815000
	007 Move X22, 0x526000
	008 Move W8, [X21+3641]
	009 Move X22, [X22+2416]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x526000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3641], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call Application.get_isPlaying
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {41}
	032 Move X0, X19
	033 Move X1, X31
	034 Call Behaviour.get_isActiveAndEnabled, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {41}
	039 Move W8, [X19+105]
	040 Xor W8, W8, 1
	041 Move W8, W31
	042 And W8, W20, W8
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {58}
	047 Move X1, [X19+200]
	048 Move [X19+216], W31
	049 Move [X19+211], W31
	050 Compare X1, 0
	051 JumpIfEqual {56}
	052 Move X0, X19
	053 Move X2, X31
	054 Call MonoBehaviour.StopCoroutine, X0, X1
	055 Move [X19+200], X31
	056 Move X0, X19
	057 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	058 And W8, W20, 1
	059 Move [X19+105], W8
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 

Method: System.Boolean get_ignoreFocusEvents()

Disassembly:
	0x03BCECB4 LDUR X11, [X10 - 0x8]
	0x03BCECB8 CMP X11, X1

ISIL:
	001 Move W0, [X0+106]
	002 Return X0

Method: System.Void set_ignoreFocusEvents(System.Boolean value)

Disassembly:
	0x03BCECBC B.EQ 0x3BCEDF4
	0x03BCECC0 SUBS X9, X9, 0x1
	0x03BCECC4 ADD X10, X10, 0x10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+106], W8
	003 Return 

Method: System.Boolean get_ignoreSelectEvents()

Disassembly:
	0x03BCECC8 B.NE 0x3BCECB4
	0x03BCECCC MOV X0, X19

ISIL:
	001 Move W0, [X0+107]
	002 Return X0

Method: System.Void set_ignoreSelectEvents(System.Boolean value)

Disassembly:
	0x03BCECD0 MOV W2, W31
	0x03BCECD4 BL 0x1C5C788
	0x03BCECD8 B 0x3BCEE00

ISIL:
	001 And W8, W1, 1
	002 Move [X0+107], W8
	003 Return 

Method: System.Boolean get_ignoreActivateEvents()

Disassembly:
	0x03BCECDC ADRP X19, 0x54F000
	0x03BCECE0 LDR X19, [X19 + 0x4F0]

ISIL:
	001 Move W0, [X0+108]
	002 Return X0

Method: System.Void set_ignoreActivateEvents(System.Boolean value)

Disassembly:
	0x03BCECE4 LDR X0, [X19]
	0x03BCECE8 LDR W8, [X0 + 0xE0]
	0x03BCECEC CBNZ W8, 0x3BCECF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+108], W8
	003 Return 

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode get_selectClickAnimationMode()

Disassembly:
	0x03BCECF0 BL 0x1C16DFC
	0x03BCECF4 ADRP X20, 0x814000

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: System.Void set_selectClickAnimationMode(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/SelectClickAnimationMode value)

Disassembly:
	0x03BCECF8 LDRB W8, [X20 + 0xEA9]
	0x03BCECFC CBNZ W8, 0x3BCED14

ISIL:
	001 Move [X0+112], W1
	002 Return 

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode get_activateClickAnimationMode()

Disassembly:
	0x03BCED00 ADRP X0, 0x54F000
	0x03BCED04 LDR X0, [X0 + 0x4F0]

ISIL:
	001 Move W0, [X0+116]
	002 Return X0

Method: System.Void set_activateClickAnimationMode(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.XRInteractableAffordanceStateProvider/ActivateClickAnimationMode value)

Disassembly:
	0x03BCED08 BL 0x1C16CF4
	0x03BCED0C MOVZ W8, 0x1

ISIL:
	001 Move [X0+116], W1
	002 Return 

Method: System.Single get_clickAnimationDuration()

Disassembly:
	0x03BCED10 STRB W8, [X20 + 0xEA9]
	0x03BCED14 LDR X0, [X19]

ISIL:
	001 Move V0, [X0+120]
	002 Return V0

Method: System.Void set_clickAnimationDuration(System.Single value)

Disassembly:
	0x03BCED18 LDR W8, [X0 + 0xE0]
	0x03BCED1C CBNZ W8, 0x3BCED28

ISIL:
	001 Move [X0+120], S0
	002 Return 

Method: Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty get_clickAnimationCurve()

Disassembly:
	0x03BCED20 BL 0x1C16DFC
	0x03BCED24 LDR X0, [X19]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_clickAnimationCurve(Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty value)

Disassembly:
	0x03BCED28 LDR X8, [X0 + 0xB8]
	0x03BCED2C LDRH W8, [X8 + 0xC]

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: System.Boolean get_isHovered()

Disassembly:
	0x03BCED30 B 0x3BCEBE8
	0x03BCED34 LDRSW X9, [X10]
	0x03BCED38 ADD X8, X8, X9, 0x4, LSL
	0x03BCED3C ADD X0, X8, 0x138
	0x03BCED40 LDP X8, X1, [X0]
	0x03BCED44 MOV X0, X19
	0x03BCED48 BLR X8
	0x03BCED4C CBZ X0, 0x3BCEEA8
	0x03BCED50 ADRP X10, 0x58F000
	0x03BCED54 LDR X8, [X0]
	0x03BCED58 LDR X10, [X10 + 0xA60]
	0x03BCED5C MOV X19, X0
	0x03BCED60 LDRH W9, [X8 + 0x12E]
	0x03BCED64 LDR X1, [X10]
	0x03BCED68 CBZ X9, 0x3BCED8C
	0x03BCED6C LDR X10, [X8 + 0xB0]
	0x03BCED70 ADD X10, X10, 0x8
	0x03BCED74 LDUR X11, [X10 - 0x8]
	0x03BCED78 CMP X11, X1
	0x03BCED7C B.EQ 0x3BCED9C
	0x03BCED80 SUBS X9, X9, 0x1
	0x03BCED84 ADD X10, X10, 0x10
	0x03BCED88 B.NE 0x3BCED74
	0x03BCED8C MOVZ W2, 0x3
	0x03BCED90 MOV X0, X19
	0x03BCED94 BL 0x1C5C788
	0x03BCED98 B 0x3BCEDAC
	0x03BCED9C LDR W9, [X10]
	0x03BCEDA0 ADD W9, W9, 0x3
	0x03BCEDA4 ADD X8, X8, W9, 0x4, SXTW
	0x03BCEDA8 ADD X0, X8, 0x138
	0x03BCEDAC LDP X8, X1, [X0]
	0x03BCEDB0 MOV X0, X19
	0x03BCEDB4 BLR X8
	0x03BCEDB8 MOVZ W8, 0x437F0000
	0x03BCEDBC FMIN S1, S0, S8
	0x03BCEDC0 FMOV S2, W8
	0x03BCEDC4 FCMP S0, 0x0
	0x03BCEDC8 FMOV S0, W31
	0x03BCEDCC FMUL S1, S1, S2
	0x03BCEDD0 FCSEL S0, S1, S0, PL
	0x03BCEDD4 FCVTZS W8, S0
	0x03BCEDD8 FCMP S0, 0x0
	0x03BCEDDC CSEL W9, W8, W8, MI
	0x03BCEDE0 MOVZ W8, 0x4
	0x03BCEDE4 B 0x3BCEBEC
	0x03BCEDE8 MOV W20, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x815000
	005 Move W8, [X20+3642]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x58D000
	012 Move X0, [X0+328]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3642], W8
	016 Move W8, [X19+212]
	017 Compare W8, 0
	018 JumpIfEqual {38}
	019 Move X19, [X19+144]
	020 Compare X19, 0
	021 JumpIfEqual {54}
	022 Move X10, 0x58D000
	023 Move X8, [X19]
	024 Move X10, [X10+328]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 5
	036 Move X0, X19
	037 Call 0x1C5D788
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move W0, W31
	041 Move X30, [X31+32]
	042 Return X0
	043 Move W9, [X10]
	044 Add W9, W9, 5
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X2, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 CallNoReturn X2
	054 Call 0x1C17F20

Method: System.Boolean get_isSelected()

Disassembly:
	0x03BCEDEC FMOV S0, W31
	0x03BCEDF0 B 0x3BCEE78
	0x03BCEDF4 LDRSW X9, [X10]
	0x03BCEDF8 ADD X8, X8, X9, 0x4, LSL
	0x03BCEDFC ADD X0, X8, 0x138
	0x03BCEE00 LDP X8, X1, [X0]
	0x03BCEE04 MOV X0, X19
	0x03BCEE08 BLR X8
	0x03BCEE0C CBZ X0, 0x3BCEEA8
	0x03BCEE10 ADRP X10, 0x58F000
	0x03BCEE14 LDR X8, [X0]
	0x03BCEE18 LDR X10, [X10 + 0xA60]
	0x03BCEE1C MOV X19, X0
	0x03BCEE20 LDRH W9, [X8 + 0x12E]
	0x03BCEE24 LDR X1, [X10]
	0x03BCEE28 CBZ X9, 0x3BCEE4C
	0x03BCEE2C LDR X10, [X8 + 0xB0]
	0x03BCEE30 ADD X10, X10, 0x8
	0x03BCEE34 LDUR X11, [X10 - 0x8]
	0x03BCEE38 CMP X11, X1
	0x03BCEE3C B.EQ 0x3BCEE5C
	0x03BCEE40 SUBS X9, X9, 0x1
	0x03BCEE44 ADD X10, X10, 0x10
	0x03BCEE48 B.NE 0x3BCEE34
	0x03BCEE4C MOVZ W2, 0x3
	0x03BCEE50 MOV X0, X19
	0x03BCEE54 BL 0x1C5C788
	0x03BCEE58 B 0x3BCEE6C
	0x03BCEE5C LDR W9, [X10]
	0x03BCEE60 ADD W9, W9, 0x3
	0x03BCEE64 ADD X8, X8, W9, 0x4, SXTW
	0x03BCEE68 ADD X0, X8, 0x138
	0x03BCEE6C LDP X8, X1, [X0]
	0x03BCEE70 MOV X0, X19
	0x03BCEE74 BLR X8
	0x03BCEE78 FMOV S1, 1
	0x03BCEE7C MOVZ W9, 0x437F0000
	0x03BCEE80 FCMP S0, 0x0
	0x03BCEE84 FMIN S0, S0, S1
	0x03BCEE88 FMOV S1, W9
	0x03BCEE8C FMUL S0, S0, S1
	0x03BCEE90 FCSEL S0, S0, S8, PL
	0x03BCEE94 FCVTZS W9, S0
	0x03BCEE98 FCMP S0, 0x0
	0x03BCEE9C MOV W8, W20
	0x03BCEEA0 CSEL W9, W9, W9, MI
	0x03BCEEA4 B 0x3BCEBEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x815000
	005 Move W8, [X20+3643]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x58D000
	012 Move X0, [X0+352]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3643], W8
	016 Move W8, [X19+213]
	017 Compare W8, 0
	018 JumpIfEqual {38}
	019 Move X19, [X19+152]
	020 Compare X19, 0
	021 JumpIfEqual {54}
	022 Move X10, 0x58D000
	023 Move X8, [X19]
	024 Move X10, [X10+352]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 6
	036 Move X0, X19
	037 Call 0x1C5D788
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move W0, W31
	041 Move X30, [X31+32]
	042 Return X0
	043 Move W9, [X10]
	044 Add W9, W9, 6
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X2, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 CallNoReturn X2
	054 Call 0x1C17F20

Method: System.Boolean get_isFocused()

Disassembly:
	0x03BCEEA8 BL 0x1C16F20
	0x03BCEEAC STR X30, [X31 - 0x20]!
	0x03BCEEB0 STP X20, X19, [X31 + 0x10]
	0x03BCEEB4 MOV W19, W1
	0x03BCEEB8 MOV X1, X31
	0x03BCEEBC MOV X20, X0
	0x03BCEEC0 BL 0x33BDD8C
	0x03BCEEC4 STR W19, [X20 + 0x10]
	0x03BCEEC8 LDP X20, X19, [X31 + 0x10]
	0x03BCEECC LDR X30, [X31], #0x20
	0x03BCEED0 RET
	0x03BCEED4 STP X30, X27, [X31 - 0x50]!
	0x03BCEED8 STP X26, X25, [X31 + 0x10]
	0x03BCEEDC STP X24, X23, [X31 + 0x20]
	0x03BCEEE0 STP X22, X21, [X31 + 0x30]
	0x03BCEEE4 STP X20, X19, [X31 + 0x40]
	0x03BCEEE8 ADRP X20, 0x814000
	0x03BCEEEC LDRB W8, [X20 + 0xE4B]
	0x03BCEEF0 MOV X19, X0
	0x03BCEEF4 TBNZ X8, 0x0, 0x3BCF05C
	0x03BCEEF8 ADRP X0, 0x527000
	0x03BCEEFC LDR X0, [X0 + 0x5B0]
	0x03BCEF00 BL 0x1C16CF4
	0x03BCEF04 ADRP X0, 0x58C000
	0x03BCEF08 LDR X0, [X0 + 0x248]
	0x03BCEF0C BL 0x1C16CF4
	0x03BCEF10 ADRP X0, 0x58C000
	0x03BCEF14 LDR X0, [X0 + 0x250]
	0x03BCEF18 BL 0x1C16CF4
	0x03BCEF1C ADRP X0, 0x54C000
	0x03BCEF20 LDR X0, [X0 + 0x6E0]
	0x03BCEF24 BL 0x1C16CF4
	0x03BCEF28 ADRP X0, 0x58F000
	0x03BCEF2C LDR X0, [X0 + 0xA60]
	0x03BCEF30 BL 0x1C16CF4
	0x03BCEF34 ADRP X0, 0x58C000
	0x03BCEF38 LDR X0, [X0 + 0xB60]
	0x03BCEF3C BL 0x1C16CF4
	0x03BCEF40 ADRP X0, 0x58C000
	0x03BCEF44 LDR X0, [X0 + 0x130]
	0x03BCEF48 BL 0x1C16CF4
	0x03BCEF4C ADRP X0, 0x58C000
	0x03BCEF50 LDR X0, [X0 + 0x148]
	0x03BCEF54 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x815000
	005 Move W8, [X20+3644]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x58D000
	012 Move X0, [X0+304]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3644], W8
	016 Move X19, [X19+160]
	017 Compare X19, 0
	018 JumpIfEqual {35}
	019 Move X10, 0x58D000
	020 Move X8, [X19]
	021 Move X10, [X10+304]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 6
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move W0, W31
	038 Move X30, [X31+32]
	039 Return X0
	040 Move W9, [X10]
	041 Add W9, W9, 6
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2

Method: System.Boolean get_isActivated()

Disassembly:
	0x03BCEF58 ADRP X0, 0x58C000
	0x03BCEF5C LDR X0, [X0 + 0x8D8]

ISIL:
	001 Move W0, [X0+209]
	002 Return X0

Method: System.Boolean get_isRegistered()

Disassembly:
	0x03BCEF60 BL 0x1C16CF4
	0x03BCEF64 ADRP X0, 0x58C000

ISIL:
	001 Move W0, [X0+210]
	002 Return X0

Method: System.Void Awake()

Disassembly:
	0x03BCEF68 LDR X0, [X0 + 0xBD8]
	0x03BCEF6C BL 0x1C16CF4
	0x03BCEF70 ADRP X0, 0x58C000
	0x03BCEF74 LDR X0, [X0 + 0x160]
	0x03BCEF78 BL 0x1C16CF4
	0x03BCEF7C ADRP X0, 0x525000
	0x03BCEF80 LDR X0, [X0 + 0x598]
	0x03BCEF84 BL 0x1C16CF4
	0x03BCEF88 ADRP X0, 0x58F000
	0x03BCEF8C LDR X0, [X0 + 0xA68]
	0x03BCEF90 BL 0x1C16CF4
	0x03BCEF94 ADRP X0, 0x58F000
	0x03BCEF98 LDR X0, [X0 + 0xA70]
	0x03BCEF9C BL 0x1C16CF4
	0x03BCEFA0 ADRP X0, 0x58C000
	0x03BCEFA4 LDR X0, [X0 + 0x188]
	0x03BCEFA8 BL 0x1C16CF4
	0x03BCEFAC ADRP X0, 0x58C000
	0x03BCEFB0 LDR X0, [X0 + 0x190]
	0x03BCEFB4 BL 0x1C16CF4
	0x03BCEFB8 ADRP X0, 0x58F000
	0x03BCEFBC LDR X0, [X0 + 0xA78]
	0x03BCEFC0 BL 0x1C16CF4
	0x03BCEFC4 ADRP X0, 0x528000
	0x03BCEFC8 LDR X0, [X0 + 0x408]
	0x03BCEFCC BL 0x1C16CF4
	0x03BCEFD0 ADRP X0, 0x58C000
	0x03BCEFD4 LDR X0, [X0 + 0x198]
	0x03BCEFD8 BL 0x1C16CF4
	0x03BCEFDC ADRP X0, 0x58F000
	0x03BCEFE0 LDR X0, [X0 + 0xA80]
	0x03BCEFE4 BL 0x1C16CF4
	0x03BCEFE8 ADRP X0, 0x58C000
	0x03BCEFEC LDR X0, [X0 + 0x1A0]
	0x03BCEFF0 BL 0x1C16CF4
	0x03BCEFF4 ADRP X0, 0x58F000
	0x03BCEFF8 LDR X0, [X0 + 0xA88]
	0x03BCEFFC BL 0x1C16CF4
	0x03BCF000 ADRP X0, 0x58E000
	0x03BCF004 LDR X0, [X0 + 0xA90]
	0x03BCF008 BL 0x1C16CF4
	0x03BCF00C ADRP X0, 0x58E000
	0x03BCF010 LDR X0, [X0 + 0xA98]
	0x03BCF014 BL 0x1C16CF4
	0x03BCF018 ADRP X0, 0x58B000
	0x03BCF01C LDR X0, [X0 + 0x1A8]
	0x03BCF020 BL 0x1C16CF4
	0x03BCF024 ADRP X0, 0x58B000
	0x03BCF028 LDR X0, [X0 + 0x1B0]
	0x03BCF02C BL 0x1C16CF4
	0x03BCF030 ADRP X0, 0x527000
	0x03BCF034 LDR X0, [X0 + 0x410]
	0x03BCF038 BL 0x1C16CF4
	0x03BCF03C ADRP X0, 0x58E000
	0x03BCF040 LDR X0, [X0 + 0xAA0]
	0x03BCF044 BL 0x1C16CF4
	0x03BCF048 ADRP X0, 0x58B000
	0x03BCF04C LDR X0, [X0 + 0x438]
	0x03BCF050 BL 0x1C16CF4
	0x03BCF054 MOVZ W8, 0x1
	0x03BCF058 STRB W8, [X20 + 0xE4B]
	0x03BCF05C MOV X0, X19
	0x03BCF060 BL 0x3BCD0E8
	0x03BCF064 LDR X20, [X19 + 0x88]
	0x03BCF068 CBZ X20, 0x3BCF0A0
	0x03BCF06C ADRP X22, 0x524000
	0x03BCF070 LDR X22, [X22 + 0x598]
	0x03BCF074 LDR X8, [X20]
	0x03BCF078 LDR X0, [X22]
	0x03BCF07C LDRB W10, [X8 + 0x130]
	0x03BCF080 LDRB W9, [X0 + 0x130]
	0x03BCF084 CMP W10, W9
	0x03BCF088 B.CC 0x3BCF0A0
	0x03BCF08C LDR X8, [X8 + 0xC8]
	0x03BCF090 ADD X8, X8, X9, 0x3, LSL
	0x03BCF094 LDUR X8, [X8 - 0x8]
	0x03BCF098 CMP X8, X0
	0x03BCF09C B.EQ 0x3BCF0C0
	0x03BCF0A0 STRB W31, [X19 + 0xD0]
	0x03BCF0A4 MOV X0, X19
	0x03BCF0A8 LDP X20, X19, [X31 + 0x40]
	0x03BCF0AC LDP X22, X21, [X31 + 0x30]
	0x03BCF0B0 LDP X24, X23, [X31 + 0x20]
	0x03BCF0B4 LDP X26, X25, [X31 + 0x10]
	0x03BCF0B8 LDP X30, X27, [X31], #0x50
	0x03BCF0BC B 0x3BCDC38
	0x03BCF0C0 LDR W8, [X0 + 0xE0]
	0x03BCF0C4 CBNZ W8, 0x3BCF0CC
	0x03BCF0C8 BL 0x1C16DFC
	0x03BCF0CC MOV X0, X20
	0x03BCF0D0 MOV X1, X31
	0x03BCF0D4 MOV X2, X31
	0x03BCF0D8 BL 0x3C354F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x815000
	007 Move X20, 0x526000
	008 Move W8, [X21+3645]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x58D000
	016 Move X0, [X0+2320]
	017 Call 0x1C17CF4
	018 Move X0, 0x58D000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0x526000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x550000
	025 Move X0, [X0+488]
	026 Call 0x1C17CF4
	027 Move X0, 0x590000
	028 Move X0, [X0+2608]
	029 Call 0x1C17CF4
	030 Move X0, 0x590000
	031 Move X0, [X0+2616]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3645], W8
	035 Move X0, [X20]
	036 Move X20, [X19+96]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {57}
	049 Move X8, 0x58C000
	050 Move X8, [X8+2264]
	051 Move X0, [X19+96]
	052 Move X1, [X8]
	053 Call 0x1C17E00
	054 Move X1, X0
	055 Compare X0, 0
	056 JumpIfNotEqual {63}
	057 Move X8, 0x58C000
	058 Move X8, [X8+2320]
	059 Move X0, X19
	060 Move X1, [X8]
	061 Call 0x21A4F50, X0
	062 Move X1, X0
	063 Move X0, X19
	064 Call XRInteractableAffordanceStateProvider.SetBoundInteractionReceiver, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {75}
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Move X20, 0x58F000
	076 Move X21, 0x58F000
	077 Move X22, 0x54F000
	078 Move X20, [X20+2608]
	079 Move X21, [X21+2616]
	080 Move X22, [X22+488]
	081 Move X0, X19
	082 Move X1, X31
	083 Call Component.get_gameObject, X0
	084 Move X8, [X20]
	085 Move X1, X0
	086 Move X2, X31
	087 Move X0, X8
	088 Call String.Format, X0, X1
	089 Move X1, [X21]
	090 Move X2, X31
	091 Call String.Concat, X0, X1
	092 Move X8, [X22]
	093 Move X20, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X19
	101 Move X2, X31
	102 Call XRLoggingUtils.LogWarning, X0, X1
	103 Move X0, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move W1, W31
	109 Move X2, X31
	110 Move X30, [X31+48]
	111 Call Behaviour.set_enabled, X0, X1
	112 Return 

Method: System.Void OnValidate()

Disassembly:
	0x03BCF0DC AND W8, W0, 0x1
	0x03BCF0E0 STRB W8, [X19 + 0xD0]
	0x03BCF0E4 TBZ X0, 0x0, 0x3BCF0A4
	0x03BCF0E8 ADRP X8, 0x58B000
	0x03BCF0EC LDR X20, [X19 + 0x88]
	0x03BCF0F0 LDR X8, [X8 + 0x248]
	0x03BCF0F4 LDR X0, [X8]
	0x03BCF0F8 BL 0x1C16F10
	0x03BCF0FC LDR X8, [X19]
	0x03BCF100 MOV X1, X19
	0x03BCF104 MOV X3, X31
	0x03BCF108 MOV X21, X0
	0x03BCF10C LDR X2, [X8 + 0x230]
	0x03BCF110 BL 0x2A6B948
	0x03BCF114 CBZ X20, 0x3BCFAC8
	0x03BCF118 ADRP X23, 0x58B000
	0x03BCF11C LDR X8, [X20]
	0x03BCF120 LDR X23, [X23 + 0x8D8]
	0x03BCF124 LDRH W9, [X8 + 0x12E]
	0x03BCF128 LDR X1, [X23]
	0x03BCF12C CBZ X9, 0x3BCF150
	0x03BCF130 LDR X10, [X8 + 0xB0]
	0x03BCF134 ADD X10, X10, 0x8
	0x03BCF138 LDUR X11, [X10 - 0x8]
	0x03BCF13C CMP X11, X1
	0x03BCF140 B.EQ 0x3BCF160
	0x03BCF144 SUBS X9, X9, 0x1
	0x03BCF148 ADD X10, X10, 0x10
	0x03BCF14C B.NE 0x3BCF138
	0x03BCF150 MOV X0, X20
	0x03BCF154 MOV W2, W31
	0x03BCF158 BL 0x1C5C788
	0x03BCF15C B 0x3BCF16C
	0x03BCF160 LDRSW X9, [X10]
	0x03BCF164 ADD X8, X8, X9, 0x4, LSL
	0x03BCF168 ADD X0, X8, 0x138
	0x03BCF16C LDP X8, X2, [X0]
	0x03BCF170 MOV X0, X20
	0x03BCF174 MOV X1, X21
	0x03BCF178 BLR X8
	0x03BCF17C ADRP X8, 0x58B000
	0x03BCF180 LDR X20, [X19 + 0x88]
	0x03BCF184 LDR X8, [X8 + 0x250]
	0x03BCF188 LDR X0, [X8]
	0x03BCF18C BL 0x1C16F10
	0x03BCF190 LDR X8, [X19]
	0x03BCF194 MOV X1, X19
	0x03BCF198 MOV X3, X31
	0x03BCF19C MOV X21, X0
	0x03BCF1A0 LDR X2, [X8 + 0x240]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x814000
	006 Move X20, 0x525000
	007 Move W8, [X21+3646]
	008 Move X20, [X20+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x525000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3646], W8
	019 Move V0, [X19+32]
	020 Move S1, 1
	021 Move S2, W31
	022 Move S3, 4
	023 NotImplemented "Instruction FDIV not yet implemented."
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Multiply S0, S0, S3
	026 NotImplemented "Instruction FCSEL not yet implemented."
	027 Move [X19+88], S1
	028 Move [X19+96], S0
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X31
	035 Call Application.get_isPlaying
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {66}
	040 Move X0, X19
	041 Move X1, X31
	042 Call Behaviour.get_isActiveAndEnabled, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {66}
	047 Move W8, [X19+105]
	048 Compare W8, 0
	049 JumpIfEqual {66}
	050 Move X1, [X19+200]
	051 Move [X19+216], W31
	052 Move [X19+211], W31
	053 Compare X1, 0
	054 JumpIfEqual {59}
	055 Move X0, X19
	056 Move X2, X31
	057 Call MonoBehaviour.StopCoroutine, X0, X1
	058 Move [X19+200], X31
	059 Move X0, X19
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	065 Return 
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 

Method: System.Boolean SetBoundInteractionReceiver(UnityEngine.XR.Interaction.Toolkit.IXRInteractable receiver)

Disassembly:
	0x03BCE95C STRB W8, [X20 + 0xE49]
	0x03BCE960 LDRB W8, [X19 + 0xD0]
	0x03BCE964 CBZ W8, 0x3BCEAD0
	0x03BCE968 LDR X8, [X19]
	0x03BCE96C MOV X0, X19
	0x03BCE970 LDR X9, [X8 + 0x208]
	0x03BCE974 LDR X1, [X8 + 0x210]
	0x03BCE978 BLR X9
	0x03BCE97C TBZ X0, 0x0, 0x3BCE988
	0x03BCE980 LDRB W8, [X19 + 0x6C]
	0x03BCE984 CBZ W8, 0x3BCEB94
	0x03BCE988 LDR X8, [X19]
	0x03BCE98C MOV X0, X19
	0x03BCE990 LDR X9, [X8 + 0x208]
	0x03BCE994 LDR X1, [X8 + 0x210]
	0x03BCE998 BLR X9
	0x03BCE99C TBNZ X0, 0x0, 0x3BCE9BC
	0x03BCE9A0 LDR X8, [X19]
	0x03BCE9A4 MOV X0, X19
	0x03BCE9A8 LDP X9, X1, [X8 + 0x1E8]
	0x03BCE9AC BLR X9
	0x03BCE9B0 TBZ X0, 0x0, 0x3BCE9BC
	0x03BCE9B4 LDRB W8, [X19 + 0x6B]
	0x03BCE9B8 CBZ W8, 0x3BCEC08
	0x03BCE9BC LDR X8, [X19]
	0x03BCE9C0 MOV X0, X19
	0x03BCE9C4 LDR X9, [X8 + 0x208]
	0x03BCE9C8 LDR X1, [X8 + 0x210]
	0x03BCE9CC BLR X9
	0x03BCE9D0 TBNZ X0, 0x0, 0x3BCEA04
	0x03BCE9D4 LDR X8, [X19]
	0x03BCE9D8 MOV X0, X19
	0x03BCE9DC LDP X9, X1, [X8 + 0x1E8]
	0x03BCE9E0 BLR X9
	0x03BCE9E4 TBNZ X0, 0x0, 0x3BCEA04
	0x03BCE9E8 LDR X8, [X19]
	0x03BCE9EC MOV X0, X19
	0x03BCE9F0 LDP X9, X1, [X8 + 0x1D8]
	0x03BCE9F4 BLR X9
	0x03BCE9F8 TBZ X0, 0x0, 0x3BCEA04
	0x03BCE9FC LDRB W8, [X19 + 0x68]
	0x03BCEA00 CBZ W8, 0x3BCEC68
	0x03BCEA04 LDR X8, [X19]
	0x03BCEA08 MOV X0, X19
	0x03BCEA0C LDR X9, [X8 + 0x208]
	0x03BCEA10 LDR X1, [X8 + 0x210]
	0x03BCEA14 BLR X9
	0x03BCEA18 TBNZ X0, 0x0, 0x3BCEA60
	0x03BCEA1C LDR X8, [X19]
	0x03BCEA20 MOV X0, X19
	0x03BCEA24 LDP X9, X1, [X8 + 0x1E8]
	0x03BCEA28 BLR X9
	0x03BCEA2C TBNZ X0, 0x0, 0x3BCEA60
	0x03BCEA30 LDR X8, [X19]
	0x03BCEA34 MOV X0, X19
	0x03BCEA38 LDP X9, X1, [X8 + 0x1D8]
	0x03BCEA3C BLR X9
	0x03BCEA40 TBNZ X0, 0x0, 0x3BCEA60
	0x03BCEA44 LDR X8, [X19]
	0x03BCEA48 MOV X0, X19
	0x03BCEA4C LDP X9, X1, [X8 + 0x1F8]
	0x03BCEA50 BLR X9
	0x03BCEA54 TBZ X0, 0x0, 0x3BCEA60
	0x03BCEA58 LDRB W8, [X19 + 0x6A]
	0x03BCEA5C CBZ W8, 0x3BCECDC
	0x03BCEA60 LDR X8, [X19]
	0x03BCEA64 MOV X0, X19
	0x03BCEA68 LDR X9, [X8 + 0x218]
	0x03BCEA6C LDR X1, [X8 + 0x220]
	0x03BCEA70 BLR X9
	0x03BCEA74 ADRP X20, 0x54F000
	0x03BCEA78 LDR X20, [X20 + 0x4F0]
	0x03BCEA7C MOV W19, W0
	0x03BCEA80 LDR X8, [X20]
	0x03BCEA84 LDR W9, [X8 + 0xE0]
	0x03BCEA88 CBZ W9, 0x3BCEB20
	0x03BCEA8C TBZ X19, 0x0, 0x3BCEB2C
	0x03BCEA90 ADRP X19, 0x814000
	0x03BCEA94 LDRB W8, [X19 + 0xEAB]
	0x03BCEA98 CBNZ W8, 0x3BCEAB0
	0x03BCEA9C ADRP X0, 0x54F000
	0x03BCEAA0 LDR X0, [X0 + 0x4F0]
	0x03BCEAA4 BL 0x1C16CF4
	0x03BCEAA8 MOVZ W8, 0x1
	0x03BCEAAC STRB W8, [X19 + 0xEAB]
	0x03BCEAB0 LDR X0, [X20]
	0x03BCEAB4 LDR W8, [X0 + 0xE0]
	0x03BCEAB8 CBNZ W8, 0x3BCEAC4
	0x03BCEABC BL 0x1C16DFC
	0x03BCEAC0 LDR X0, [X20]
	0x03BCEAC4 LDR X8, [X0 + 0xB8]
	0x03BCEAC8 LDRH W8, [X8 + 0x2]
	0x03BCEACC B 0x3BCEBE8
	0x03BCEAD0 LDR X19, [X19 + 0x28]
	0x03BCEAD4 CBZ X19, 0x3BCEEA8
	0x03BCEAD8 ADRP X10, 0x54F000
	0x03BCEADC LDR X8, [X19]
	0x03BCEAE0 LDR X10, [X10 + 0x590]
	0x03BCEAE4 LDRH W9, [X8 + 0x12E]
	0x03BCEAE8 LDR X1, [X10]
	0x03BCEAEC CBZ X9, 0x3BCEB10
	0x03BCEAF0 LDR X10, [X8 + 0xB0]
	0x03BCEAF4 ADD X10, X10, 0x8
	0x03BCEAF8 LDUR X11, [X10 - 0x8]
	0x03BCEAFC CMP X11, X1
	0x03BCEB00 B.EQ 0x3BCEB6C
	0x03BCEB04 SUBS X9, X9, 0x1
	0x03BCEB08 ADD X10, X10, 0x10
	0x03BCEB0C B.NE 0x3BCEAF8
	0x03BCEB10 MOVZ W2, 0x3
	0x03BCEB14 MOV X0, X19
	0x03BCEB18 BL 0x1C5C788
	0x03BCEB1C B 0x3BCEB7C
	0x03BCEB20 MOV X0, X8
	0x03BCEB24 BL 0x1C16DFC
	0x03BCEB28 TBNZ X19, 0x0, 0x3BCEA90
	0x03BCEB2C ADRP X19, 0x814000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x815000
	006 Move W8, [X21+3647]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x58D000
	014 Move X0, [X0+2912]
	015 Call 0x1C17CF4
	016 Move X0, 0x58D000
	017 Move X0, [X0+304]
	018 Call 0x1C17CF4
	019 Move X0, 0x58D000
	020 Move X0, [X0+328]
	021 Call 0x1C17CF4
	022 Move X0, 0x58D000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move X0, 0x58D000
	026 Move X0, [X0+352]
	027 Call 0x1C17CF4
	028 Move X0, 0x526000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3647], W8
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+456]
	036 Move X1, [X8+464]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X20, 0
	039 JumpIfEqual {104}
	040 Move X9, 0x526000
	041 Move X9, [X9+1432]
	042 Move X8, [X20]
	043 Move X0, [X9]
	044 Move W10, [X8+304]
	045 Move W9, [X0+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X8+200]
	048 Add X8, X8, X9
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Inequality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {104}
	063 Move [X19+136], X20
	064 Move X8, 0x58D000
	065 Move X8, [X8+328]
	066 Move X0, X20
	067 Move X1, [X8]
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {72}
	071 Move [X19+144], X0
	072 Move X8, 0x58D000
	073 Move X0, [X19+136]
	074 Move X8, [X8+352]
	075 Move X1, [X8]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {80}
	079 Move [X19+152], X0
	080 Move X8, 0x58D000
	081 Move X0, [X19+136]
	082 Move X8, [X8+304]
	083 Move X1, [X8]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {88}
	087 Move [X19+160], X0
	088 Move X8, 0x58D000
	089 Move X0, [X19+136]
	090 Move X8, [X8+2912]
	091 Move X1, [X8]
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {96}
	095 Move [X19+168], X0
	096 Move X8, 0x58D000
	097 Move X0, [X19+136]
	098 Move X8, [X8+3032]
	099 Move X1, [X8]
	100 Call 0x1C17E00
	101 Compare X0, 0
	102 JumpIfEqual {133}
	103 Move [X19+176], X0
	104 Move X0, X31
	105 Move W20, W31
	106 NotImplemented "Instruction MOVI not yet implemented."
	107 Move [X19+136], X31
	108 Move [X19+144], V0
	109 Move [X19+152], V0
	110 Move [X19+176], X31
	111 Move X8, [X19+144]
	112 Move X9, [X19+152]
	113 Move X10, [X19]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSET not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X19+212], W8
	118 NotImplemented "Instruction CSET not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X19+213], W8
	121 NotImplemented "Instruction CSET not yet implemented."
	122 Move [X19+214], W8
	123 Move X8, [X10+440]
	124 Move X1, [X10+448]
	125 Move X0, X19
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move W0, W20
	128 Move X20, [X31+16]
	129 Move X19, [X31+24]
	130 Move X30, [X31+32]
	131 Move X21, [X31+40]
	132 Return X0
	133 Move X0, [X19+176]
	134 Move W20, 1

Method: System.Void OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs args)

Disassembly:
	0x03BCF1A4 BL 0x2A6B948
	0x03BCF1A8 CBZ X20, 0x3BCFAC8
	0x03BCF1AC LDR X8, [X20]

ISIL:
	001 Move W8, 1
	002 Move [X0+210], W8
	003 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	004 Return 

Method: System.Void OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs args)

Disassembly:
	0x03BCF1B0 LDR X1, [X23]
	0x03BCF1B4 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X0+210], W31
	002 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	003 Return 

Method: System.Void OnFirstHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03BCF1B8 CBZ X9, 0x3BCF1DC

ISIL:
	001 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	002 Return 

Method: System.Void OnLastHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03BCF1BC LDR X10, [X8 + 0xB0]

ISIL:
	001 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	002 Return 

Method: System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args)

Disassembly:
	0x03BCF1C0 ADD X10, X10, 0x8
	0x03BCF1C4 LDUR X11, [X10 - 0x8]
	0x03BCF1C8 CMP X11, X1
	0x03BCF1CC B.EQ 0x3BCF1EC
	0x03BCF1D0 SUBS X9, X9, 0x1
	0x03BCF1D4 ADD X10, X10, 0x10
	0x03BCF1D8 B.NE 0x3BCF1C4
	0x03BCF1DC MOVZ W2, 0x2
	0x03BCF1E0 MOV X0, X20
	0x03BCF1E4 BL 0x1C5C788
	0x03BCF1E8 B 0x3BCF1FC
	0x03BCF1EC LDR W9, [X10]
	0x03BCF1F0 ADD W9, W9, 0x2
	0x03BCF1F4 ADD X8, X8, W9, 0x4, SXTW
	0x03BCF1F8 ADD X0, X8, 0x138
	0x03BCF1FC LDP X8, X2, [X0]
	0x03BCF200 MOV X0, X20
	0x03BCF204 MOV X1, X21
	0x03BCF208 BLR X8
	0x03BCF20C LDR X20, [X19 + 0x90]
	0x03BCF210 CBZ X20, 0x3BCF4B0
	0x03BCF214 ADRP X23, 0x58B000
	0x03BCF218 LDR X8, [X20]
	0x03BCF21C LDR X23, [X23 + 0x148]
	0x03BCF220 LDRH W9, [X8 + 0x12E]
	0x03BCF224 LDR X1, [X23]
	0x03BCF228 CBZ X9, 0x3BCF24C
	0x03BCF22C LDR X10, [X8 + 0xB0]
	0x03BCF230 ADD X10, X10, 0x8
	0x03BCF234 LDUR X11, [X10 - 0x8]
	0x03BCF238 CMP X11, X1
	0x03BCF23C B.EQ 0x3BCF25C
	0x03BCF240 SUBS X9, X9, 0x1
	0x03BCF244 ADD X10, X10, 0x10
	0x03BCF248 B.NE 0x3BCF234
	0x03BCF24C MOV X0, X20
	0x03BCF250 MOV W2, W31
	0x03BCF254 BL 0x1C5C788
	0x03BCF258 B 0x3BCF268
	0x03BCF25C LDRSW X9, [X10]
	0x03BCF260 ADD X8, X8, X9, 0x4, LSL
	0x03BCF264 ADD X0, X8, 0x138
	0x03BCF268 LDP X8, X1, [X0]
	0x03BCF26C MOV X0, X20
	0x03BCF270 BLR X8
	0x03BCF274 ADRP X24, 0x58B000
	0x03BCF278 LDR X24, [X24 + 0x190]
	0x03BCF27C MOV X20, X0
	0x03BCF280 LDR X8, [X24]
	0x03BCF284 MOV X0, X8
	0x03BCF288 BL 0x1C16F10
	0x03BCF28C LDR X8, [X19]
	0x03BCF290 MOV X1, X19
	0x03BCF294 MOV X3, X31
	0x03BCF298 MOV X21, X0
	0x03BCF29C LDR X2, [X8 + 0x250]
	0x03BCF2A0 BL 0x2725C6C
	0x03BCF2A4 CBZ X20, 0x3BCFAC8
	0x03BCF2A8 ADRP X25, 0x58B000
	0x03BCF2AC LDR X25, [X25 + 0x1A8]
	0x03BCF2B0 MOV X0, X20
	0x03BCF2B4 MOV X1, X21
	0x03BCF2B8 LDR X2, [X25]
	0x03BCF2BC BL 0x2729B68

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x814000
	006 Move W8, [X21+3648]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x58D000
	014 Move X0, [X0+1592]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3648], W8
	018 Move W8, [X19+105]
	019 Compare W8, 0
	020 JumpIfEqual {26}
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return 
	026 Compare X20, 0
	027 JumpIfEqual {74}
	028 Move X0, X20
	029 Move X1, X31
	030 Call HoverEnterEventArgs.get_interactorObject, X0
	031 Move X21, 0x58D000
	032 Move X21, [X21+1592]
	033 Move X1, [X21]
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {21}
	037 Move W8, [X19+216]
	038 Move X20, X0
	039 Add W8, W8, 1
	040 Move [X19+216], W8
	041 Move X8, [X0]
	042 Move X1, [X21]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X20
	053 Move W2, W31
	054 Call 0x1C5D788
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Compare W0, 0
	063 JumpIfEqual {21}
	064 Move X0, [X19+200]
	065 Compare X0, 0
	066 JumpIfNotEqual {73}
	067 Move X0, X19
	068 Call XRInteractableAffordanceStateProvider.HoveredPriorityRoutine, X0
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call MonoBehaviour.StartCoroutine, X0, X1
	073 Move [X19+200], X0
	074 Call 0x1C17F20

Method: System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs args)

Disassembly:
	0x03BCF320 BLR X8
	0x03BCF324 ADRP X26, 0x58B000
	0x03BCF328 LDR X26, [X26 + 0x198]
	0x03BCF32C MOV X20, X0
	0x03BCF330 LDR X8, [X26]
	0x03BCF334 MOV X0, X8
	0x03BCF338 BL 0x1C16F10
	0x03BCF33C LDR X8, [X19]
	0x03BCF340 MOV X1, X19
	0x03BCF344 MOV X3, X31
	0x03BCF348 MOV X21, X0
	0x03BCF34C LDR X2, [X8 + 0x260]
	0x03BCF350 BL 0x2725C6C
	0x03BCF354 CBZ X20, 0x3BCFAC8
	0x03BCF358 ADRP X27, 0x58B000
	0x03BCF35C LDR X27, [X27 + 0x1A0]
	0x03BCF360 MOV X0, X20
	0x03BCF364 MOV X1, X21
	0x03BCF368 LDR X2, [X27]
	0x03BCF36C BL 0x2729B68
	0x03BCF370 LDR X20, [X19 + 0x90]
	0x03BCF374 CBZ X20, 0x3BCFAC8
	0x03BCF378 LDR X8, [X20]
	0x03BCF37C LDR X1, [X23]
	0x03BCF380 LDRH W9, [X8 + 0x12E]
	0x03BCF384 CBZ X9, 0x3BCF3A8
	0x03BCF388 LDR X10, [X8 + 0xB0]
	0x03BCF38C ADD X10, X10, 0x8
	0x03BCF390 LDUR X11, [X10 - 0x8]
	0x03BCF394 CMP X11, X1
	0x03BCF398 B.EQ 0x3BCF3B8
	0x03BCF39C SUBS X9, X9, 0x1
	0x03BCF3A0 ADD X10, X10, 0x10
	0x03BCF3A4 B.NE 0x3BCF390
	0x03BCF3A8 MOVZ W2, 0x2
	0x03BCF3AC MOV X0, X20
	0x03BCF3B0 BL 0x1C5C788
	0x03BCF3B4 B 0x3BCF3C8
	0x03BCF3B8 LDR W9, [X10]
	0x03BCF3BC ADD W9, W9, 0x2
	0x03BCF3C0 ADD X8, X8, W9, 0x4, SXTW
	0x03BCF3C4 ADD X0, X8, 0x138
	0x03BCF3C8 LDP X8, X1, [X0]
	0x03BCF3CC MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x814000
	006 Move W8, [X21+3649]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x58D000
	014 Move X0, [X0+1592]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3649], W8
	018 Move W8, [X19+105]
	019 Compare W8, 0
	020 JumpIfEqual {26}
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return 
	026 Compare X20, 0
	027 JumpIfEqual {57}
	028 Move X0, X20
	029 Move X1, X31
	030 Call HoverExitEventArgs.get_interactorObject, X0
	031 Move X8, 0x58D000
	032 Move X8, [X8+1592]
	033 Move X1, [X8]
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {21}
	037 Move W8, [X19+216]
	038 Subtract W8, W8, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X19+216], W8
	041 Move X1, [X19+200]
	042 Move [X19+216], W31
	043 Move [X19+211], W31
	044 Compare X1, 0
	045 JumpIfEqual {50}
	046 Move X0, X19
	047 Move X2, X31
	048 Call MonoBehaviour.StopCoroutine, X0, X1
	049 Move [X19+200], X31
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	056 Return 
	057 Call 0x1C17F20

Method: System.Void StopHoveredPriorityRoutine()

Disassembly:
	0x03BCEC0C FMOV S8, 1
	0x03BCEC10 FMOV S0, 1
	0x03BCEC14 CBZ W8, 0x3BCEDB8
	0x03BCEC18 LDR X19, [X19 + 0xB0]
	0x03BCEC1C CBZ X19, 0x3BCEEA8
	0x03BCEC20 ADRP X10, 0x58C000
	0x03BCEC24 LDR X8, [X19]
	0x03BCEC28 LDR X10, [X10 + 0xBD8]
	0x03BCEC2C LDRH W9, [X8 + 0x12E]
	0x03BCEC30 LDR X1, [X10]
	0x03BCEC34 CBZ X9, 0x3BCEC58

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, [X0+200]
	004 Move [X0+216], W31
	005 Move [X0+211], W31
	006 Compare X1, 0
	007 JumpIfEqual {12}
	008 Move X2, X31
	009 Move X19, X0
	010 Call MonoBehaviour.StopCoroutine, X0, X1
	011 Move [X19+200], X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 

Method: System.Void OnFirstSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args)

Disassembly:
	0x03BCF3D0 BLR X8
	0x03BCF3D4 LDR X8, [X24]
	0x03BCF3D8 MOV X20, X0
	0x03BCF3DC MOV X0, X8
	0x03BCF3E0 BL 0x1C16F10
	0x03BCF3E4 LDR X8, [X19]
	0x03BCF3E8 MOV X1, X19
	0x03BCF3EC MOV X3, X31
	0x03BCF3F0 MOV X21, X0
	0x03BCF3F4 LDR X2, [X8 + 0x270]
	0x03BCF3F8 BL 0x2725C6C
	0x03BCF3FC CBZ X20, 0x3BCFAC8
	0x03BCF400 LDR X2, [X25]
	0x03BCF404 MOV X0, X20
	0x03BCF408 MOV X1, X21
	0x03BCF40C BL 0x2729B68
	0x03BCF410 LDR X20, [X19 + 0x90]
	0x03BCF414 CBZ X20, 0x3BCFAC8
	0x03BCF418 LDR X8, [X20]
	0x03BCF41C LDR X1, [X23]
	0x03BCF420 LDRH W9, [X8 + 0x12E]
	0x03BCF424 CBZ X9, 0x3BCF448
	0x03BCF428 LDR X10, [X8 + 0xB0]
	0x03BCF42C ADD X10, X10, 0x8
	0x03BCF430 LDUR X11, [X10 - 0x8]
	0x03BCF434 CMP X11, X1
	0x03BCF438 B.EQ 0x3BCF458
	0x03BCF43C SUBS X9, X9, 0x1
	0x03BCF440 ADD X10, X10, 0x10
	0x03BCF444 B.NE 0x3BCF430
	0x03BCF448 MOVZ W2, 0x3
	0x03BCF44C MOV X0, X20
	0x03BCF450 BL 0x1C5C788
	0x03BCF454 B 0x3BCF468
	0x03BCF458 LDR W9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x814000
	005 Move W8, [X20+3650]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x52C000
	012 Move X0, [X0+1208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3650], W8
	016 Move W8, [X19+107]
	017 Compare W8, 0
	018 JumpIfNotEqual {28}
	019 Move W8, [X19+112]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, 0x52C000
	022 Move X8, [X8+1208]
	023 Move V0, [X19+120]
	024 Move X8, [X8]
	025 Move X8, [X8+184]
	026 Move V1, [X8]
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	033 Return 
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, [X8+760]
	039 Move X1, [X8+768]
	040 Move X30, [X31+32]
	041 CallNoReturn X2

Method: System.Void OnLastSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args)

Disassembly:
	0x03BCF45C ADD W9, W9, 0x3
	0x03BCF460 ADD X8, X8, W9, 0x4, SXTW
	0x03BCF464 ADD X0, X8, 0x138
	0x03BCF468 LDP X8, X1, [X0]
	0x03BCF46C MOV X0, X20
	0x03BCF470 BLR X8
	0x03BCF474 LDR X8, [X26]
	0x03BCF478 MOV X20, X0
	0x03BCF47C MOV X0, X8
	0x03BCF480 BL 0x1C16F10
	0x03BCF484 LDR X8, [X19]
	0x03BCF488 MOV X1, X19
	0x03BCF48C MOV X3, X31
	0x03BCF490 MOV X21, X0
	0x03BCF494 LDR X2, [X8 + 0x280]
	0x03BCF498 BL 0x2725C6C
	0x03BCF49C CBZ X20, 0x3BCFAC8
	0x03BCF4A0 LDR X2, [X27]
	0x03BCF4A4 MOV X0, X20
	0x03BCF4A8 MOV X1, X21
	0x03BCF4AC BL 0x2729B68
	0x03BCF4B0 LDR X20, [X19 + 0x98]
	0x03BCF4B4 CBZ X20, 0x3BCF614
	0x03BCF4B8 ADRP X23, 0x58B000
	0x03BCF4BC LDR X8, [X20]
	0x03BCF4C0 LDR X23, [X23 + 0x160]
	0x03BCF4C4 LDRH W9, [X8 + 0x12E]
	0x03BCF4C8 LDR X1, [X23]
	0x03BCF4CC CBZ X9, 0x3BCF4F0
	0x03BCF4D0 LDR X10, [X8 + 0xB0]
	0x03BCF4D4 ADD X10, X10, 0x8
	0x03BCF4D8 LDUR X11, [X10 - 0x8]
	0x03BCF4DC CMP X11, X1
	0x03BCF4E0 B.EQ 0x3BCF500
	0x03BCF4E4 SUBS X9, X9, 0x1
	0x03BCF4E8 ADD X10, X10, 0x10
	0x03BCF4EC B.NE 0x3BCF4D8
	0x03BCF4F0 MOV X0, X20
	0x03BCF4F4 MOV W2, W31
	0x03BCF4F8 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x814000
	005 Move W8, [X20+3651]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x52C000
	012 Move X0, [X0+1208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3651], W8
	016 Move W8, [X19+107]
	017 Compare W8, 0
	018 JumpIfNotEqual {28}
	019 Move W8, [X19+112]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, 0x52C000
	022 Move X8, [X8+1208]
	023 Move V0, [X19+120]
	024 Move X8, [X8]
	025 Move X8, [X8+184]
	026 Move V1, [X8]
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move X8, [X19+184]
	029 Compare X8, 0
	030 JumpIfEqual {35}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return 
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	040 Return 
	041 Move X8, [X19]
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X2, [X8+760]
	046 Move X1, [X8+768]
	047 Move X30, [X31+32]
	048 CallNoReturn X2

Method: System.Void OnFirstFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs args)

Disassembly:
	0x03BCF4FC B 0x3BCF50C

ISIL:
	001 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	002 Return 

Method: System.Void OnLastFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs args)

Disassembly:
	0x03BCF500 LDRSW X9, [X10]

ISIL:
	001 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	002 Return 

Method: System.Void OnActivatedEvent(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args)

Disassembly:
	0x03BCF504 ADD X8, X8, X9, 0x4, LSL
	0x03BCF508 ADD X0, X8, 0x138
	0x03BCF50C LDP X8, X1, [X0]
	0x03BCF510 MOV X0, X20
	0x03BCF514 BLR X8
	0x03BCF518 ADRP X8, 0x58B000
	0x03BCF51C LDR X8, [X8 + 0x188]
	0x03BCF520 MOV X20, X0
	0x03BCF524 LDR X8, [X8]
	0x03BCF528 MOV X0, X8
	0x03BCF52C BL 0x1C16F10
	0x03BCF530 LDR X8, [X19]
	0x03BCF534 MOV X1, X19
	0x03BCF538 MOV X3, X31
	0x03BCF53C MOV X21, X0
	0x03BCF540 LDR X2, [X8 + 0x290]
	0x03BCF544 BL 0x2725C6C
	0x03BCF548 CBZ X20, 0x3BCFAC8
	0x03BCF54C ADRP X8, 0x58B000
	0x03BCF550 LDR X8, [X8 + 0x1B0]
	0x03BCF554 MOV X0, X20
	0x03BCF558 MOV X1, X21
	0x03BCF55C LDR X2, [X8]
	0x03BCF560 BL 0x2729B68
	0x03BCF564 LDR X20, [X19 + 0x98]
	0x03BCF568 CBZ X20, 0x3BCFAC8
	0x03BCF56C LDR X8, [X20]
	0x03BCF570 LDR X1, [X23]
	0x03BCF574 LDRH W9, [X8 + 0x12E]
	0x03BCF578 CBZ X9, 0x3BCF59C
	0x03BCF57C LDR X10, [X8 + 0xB0]
	0x03BCF580 ADD X10, X10, 0x8
	0x03BCF584 LDUR X11, [X10 - 0x8]
	0x03BCF588 CMP X11, X1
	0x03BCF58C B.EQ 0x3BCF5AC
	0x03BCF590 SUBS X9, X9, 0x1
	0x03BCF594 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x814000
	005 Move W8, [X20+3652]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x52C000
	012 Move X0, [X0+1208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3652], W8
	016 Move W8, [X19+108]
	017 Move W9, 1
	018 Move [X19+209], W9
	019 Compare W8, 0
	020 JumpIfNotEqual {30}
	021 Move W8, [X19+116]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, 0x52C000
	024 Move X8, [X8+1208]
	025 Move V0, [X19+120]
	026 Move X8, [X8]
	027 Move X8, [X8+184]
	028 Move V1, [X8]
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	035 Return 
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, [X8+776]
	041 Move X1, [X8+784]
	042 Move X30, [X31+32]
	043 CallNoReturn X2

Method: System.Void OnDeactivatedEvent(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args)

Disassembly:
	0x03BCF598 B.NE 0x3BCF584
	0x03BCF59C MOVZ W2, 0x1
	0x03BCF5A0 MOV X0, X20
	0x03BCF5A4 BL 0x1C5C788
	0x03BCF5A8 B 0x3BCF5BC
	0x03BCF5AC LDR W9, [X10]
	0x03BCF5B0 ADD W9, W9, 0x1
	0x03BCF5B4 ADD X8, X8, W9, 0x4, SXTW
	0x03BCF5B8 ADD X0, X8, 0x138
	0x03BCF5BC LDP X8, X1, [X0]
	0x03BCF5C0 MOV X0, X20
	0x03BCF5C4 BLR X8
	0x03BCF5C8 ADRP X8, 0x527000
	0x03BCF5CC LDR X8, [X8 + 0x408]
	0x03BCF5D0 MOV X20, X0
	0x03BCF5D4 LDR X8, [X8]
	0x03BCF5D8 MOV X0, X8
	0x03BCF5DC BL 0x1C16F10
	0x03BCF5E0 LDR X8, [X19]
	0x03BCF5E4 MOV X1, X19
	0x03BCF5E8 MOV X3, X31
	0x03BCF5EC MOV X21, X0
	0x03BCF5F0 LDR X2, [X8 + 0x2A0]
	0x03BCF5F4 BL 0x2725C6C
	0x03BCF5F8 CBZ X20, 0x3BCFAC8
	0x03BCF5FC ADRP X8, 0x527000
	0x03BCF600 LDR X8, [X8 + 0x410]
	0x03BCF604 MOV X0, X20
	0x03BCF608 MOV X1, X21
	0x03BCF60C LDR X2, [X8]
	0x03BCF610 BL 0x2729B68
	0x03BCF614 LDR X20, [X19 + 0xA0]
	0x03BCF618 CBZ X20, 0x3BCF778
	0x03BCF61C ADRP X23, 0x58B000
	0x03BCF620 LDR X8, [X20]
	0x03BCF624 LDR X23, [X23 + 0x130]
	0x03BCF628 LDRH W9, [X8 + 0x12E]
	0x03BCF62C LDR X1, [X23]
	0x03BCF630 CBZ X9, 0x3BCF654
	0x03BCF634 LDR X10, [X8 + 0xB0]
	0x03BCF638 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x814000
	005 Move W8, [X20+3653]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x52C000
	012 Move X0, [X0+1208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3653], W8
	016 Move W8, [X19+108]
	017 Move [X19+209], W31
	018 Compare W8, 0
	019 JumpIfNotEqual {29}
	020 Move W8, [X19+116]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, 0x52C000
	023 Move X8, [X8+1208]
	024 Move V0, [X19+120]
	025 Move X8, [X8]
	026 Move X8, [X8+184]
	027 Move V1, [X8]
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move X8, [X19+192]
	030 Compare X8, 0
	031 JumpIfEqual {36}
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	041 Return 
	042 Move X8, [X19]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X2, [X8+776]
	047 Move X1, [X8+784]
	048 Move X30, [X31+32]
	049 CallNoReturn X2

Method: System.Void OnLargestInteractionStrengthChanged(System.Single value)

Disassembly:
	0x03BCF63C LDUR X11, [X10 - 0x8]
	0x03BCF640 CMP X11, X1
	0x03BCF644 B.EQ 0x3BCF664
	0x03BCF648 SUBS X9, X9, 0x1
	0x03BCF64C ADD X10, X10, 0x10
	0x03BCF650 B.NE 0x3BCF63C

ISIL:
	001 Move X8, [X0+184]
	002 Compare X8, 0
	003 JumpIfNotEqual {7}
	004 Move X8, [X0+192]
	005 Compare X8, 0
	006 JumpIfEqual {8}
	007 Return 
	008 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	009 Return 

Method: System.Void SelectedClickBehavior()

Disassembly:
	0x03BCF654 MOV X0, X20
	0x03BCF658 MOV W2, W31
	0x03BCF65C BL 0x1C5C788
	0x03BCF660 B 0x3BCF670
	0x03BCF664 LDRSW X9, [X10]
	0x03BCF668 ADD X8, X8, X9, 0x4, LSL
	0x03BCF66C ADD X0, X8, 0x138
	0x03BCF670 LDP X8, X1, [X0]
	0x03BCF674 MOV X0, X20
	0x03BCF678 BLR X8
	0x03BCF67C ADRP X8, 0x58E000
	0x03BCF680 LDR X8, [X8 + 0xA70]
	0x03BCF684 MOV X20, X0
	0x03BCF688 LDR X8, [X8]
	0x03BCF68C MOV X0, X8
	0x03BCF690 BL 0x1C16F10
	0x03BCF694 LDR X8, [X19]
	0x03BCF698 MOV X1, X19
	0x03BCF69C MOV X3, X31
	0x03BCF6A0 MOV X21, X0
	0x03BCF6A4 LDR X2, [X8 + 0x2B0]
	0x03BCF6A8 BL 0x2725C6C
	0x03BCF6AC CBZ X20, 0x3BCFAC8
	0x03BCF6B0 ADRP X8, 0x58E000
	0x03BCF6B4 LDR X8, [X8 + 0xA98]
	0x03BCF6B8 MOV X0, X20
	0x03BCF6BC MOV X1, X21
	0x03BCF6C0 LDR X2, [X8]
	0x03BCF6C4 BL 0x2729B68
	0x03BCF6C8 LDR X20, [X19 + 0xA0]
	0x03BCF6CC CBZ X20, 0x3BCFAC8
	0x03BCF6D0 LDR X8, [X20]
	0x03BCF6D4 LDR X1, [X23]
	0x03BCF6D8 LDRH W9, [X8 + 0x12E]
	0x03BCF6DC CBZ X9, 0x3BCF700
	0x03BCF6E0 LDR X10, [X8 + 0xB0]
	0x03BCF6E4 ADD X10, X10, 0x8
	0x03BCF6E8 LDUR X11, [X10 - 0x8]
	0x03BCF6EC CMP X11, X1
	0x03BCF6F0 B.EQ 0x3BCF710
	0x03BCF6F4 SUBS X9, X9, 0x1
	0x03BCF6F8 ADD X10, X10, 0x10
	0x03BCF6FC B.NE 0x3BCF6E8
	0x03BCF700 MOVZ W2, 0x1
	0x03BCF704 MOV X0, X20
	0x03BCF708 BL 0x1C5C788
	0x03BCF70C B 0x3BCF720
	0x03BCF710 LDR W9, [X10]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x814000
	008 Move X21, 0x526000
	009 Move X20, 0x58F000
	010 Move W8, [X22+3654]
	011 Move X21, [X21+3696]
	012 Move X20, [X20+2632]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x526000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x58F000
	022 Move X0, [X0+2632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3654], W8
	026 Move X0, X19
	027 Call XRInteractableAffordanceStateProvider.StopAllClickAnimations, X0
	028 Move X0, [X21]
	029 Move V8, [X19+120]
	030 Call 0x1C17F10
	031 Move X2, [X20]
	032 Move X1, X19
	033 Move X3, X31
	034 Move X20, X0
	035 Call Action..ctor, X0, X1, X2
	036 Move X8, [X19]
	037 Move W1, 4
	038 Move X0, X19
	039 Move V0, V8
	040 Move X9, [X8+792]
	041 Move X3, [X8+800]
	042 Move X2, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call MonoBehaviour.StartCoroutine, X0, X1
	048 Move [X19+184], X0
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+8]
	054 Move V8, [X31+48]
	055 Return 

Method: System.Void ActivatedClickBehavior()

Disassembly:
	0x03BCF754 LDR X2, [X8 + 0x2C0]
	0x03BCF758 BL 0x2725C6C
	0x03BCF75C CBZ X20, 0x3BCFAC8
	0x03BCF760 ADRP X8, 0x58E000
	0x03BCF764 LDR X8, [X8 + 0xA88]
	0x03BCF768 MOV X0, X20
	0x03BCF76C MOV X1, X21
	0x03BCF770 LDR X2, [X8]
	0x03BCF774 BL 0x2729B68
	0x03BCF778 LDR X20, [X19 + 0xA8]
	0x03BCF77C CBZ X20, 0x3BCF8DC
	0x03BCF780 ADRP X23, 0x58B000
	0x03BCF784 LDR X8, [X20]
	0x03BCF788 LDR X23, [X23 + 0xB60]
	0x03BCF78C LDRH W9, [X8 + 0x12E]
	0x03BCF790 LDR X1, [X23]
	0x03BCF794 CBZ X9, 0x3BCF7B8
	0x03BCF798 LDR X10, [X8 + 0xB0]
	0x03BCF79C ADD X10, X10, 0x8
	0x03BCF7A0 LDUR X11, [X10 - 0x8]
	0x03BCF7A4 CMP X11, X1
	0x03BCF7A8 B.EQ 0x3BCF7C8
	0x03BCF7AC SUBS X9, X9, 0x1
	0x03BCF7B0 ADD X10, X10, 0x10
	0x03BCF7B4 B.NE 0x3BCF7A0
	0x03BCF7B8 MOV X0, X20
	0x03BCF7BC MOV W2, W31
	0x03BCF7C0 BL 0x1C5C788
	0x03BCF7C4 B 0x3BCF7D4
	0x03BCF7C8 LDRSW X9, [X10]
	0x03BCF7CC ADD X8, X8, X9, 0x4, LSL
	0x03BCF7D0 ADD X0, X8, 0x138
	0x03BCF7D4 LDP X8, X1, [X0]
	0x03BCF7D8 MOV X0, X20
	0x03BCF7DC BLR X8
	0x03BCF7E0 ADRP X8, 0x58E000
	0x03BCF7E4 LDR X8, [X8 + 0xA80]
	0x03BCF7E8 MOV X20, X0
	0x03BCF7EC LDR X8, [X8]
	0x03BCF7F0 MOV X0, X8
	0x03BCF7F4 BL 0x1C16F10
	0x03BCF7F8 LDR X8, [X19]
	0x03BCF7FC MOV X1, X19
	0x03BCF800 MOV X3, X31
	0x03BCF804 MOV X21, X0
	0x03BCF808 LDR X2, [X8 + 0x2D0]
	0x03BCF80C BL 0x2725C6C
	0x03BCF810 CBZ X20, 0x3BCFAC8

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x814000
	008 Move X21, 0x526000
	009 Move X20, 0x58F000
	010 Move W8, [X22+3655]
	011 Move X21, [X21+3696]
	012 Move X20, [X20+2640]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x526000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x58F000
	022 Move X0, [X0+2640]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3655], W8
	026 Move X0, X19
	027 Call XRInteractableAffordanceStateProvider.StopAllClickAnimations, X0
	028 Move X0, [X21]
	029 Move V8, [X19+120]
	030 Call 0x1C17F10
	031 Move X2, [X20]
	032 Move X1, X19
	033 Move X3, X31
	034 Move X20, X0
	035 Call Action..ctor, X0, X1, X2
	036 Move X8, [X19]
	037 Move W1, 5
	038 Move X0, X19
	039 Move V0, V8
	040 Move X9, [X8+792]
	041 Move X3, [X8+800]
	042 Move X2, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call MonoBehaviour.StartCoroutine, X0, X1
	048 Move [X19+192], X0
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+8]
	054 Move V8, [X31+48]
	055 Return 

Method: System.Void StopActivatedCoroutine()

Disassembly:
	0x03BCF814 ADRP X8, 0x58E000
	0x03BCF818 LDR X8, [X8 + 0xAA0]
	0x03BCF81C MOV X0, X20
	0x03BCF820 MOV X1, X21
	0x03BCF824 LDR X2, [X8]
	0x03BCF828 BL 0x2729B68
	0x03BCF82C LDR X20, [X19 + 0xA8]
	0x03BCF830 CBZ X20, 0x3BCFAC8
	0x03BCF834 LDR X8, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, [X0+192]
	004 Compare X1, 0
	005 JumpIfEqual {10}
	006 Move X2, X31
	007 Move X19, X0
	008 Call MonoBehaviour.StopCoroutine, X0, X1
	009 Move [X19+192], X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void StopSelectedCoroutine()

Disassembly:
	0x03BCF838 LDR X1, [X23]
	0x03BCF83C LDRH W9, [X8 + 0x12E]
	0x03BCF840 CBZ X9, 0x3BCF864
	0x03BCF844 LDR X10, [X8 + 0xB0]
	0x03BCF848 ADD X10, X10, 0x8
	0x03BCF84C LDUR X11, [X10 - 0x8]
	0x03BCF850 CMP X11, X1
	0x03BCF854 B.EQ 0x3BCF874
	0x03BCF858 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, [X0+184]
	004 Compare X1, 0
	005 JumpIfEqual {10}
	006 Move X2, X31
	007 Move X19, X0
	008 Call MonoBehaviour.StopCoroutine, X0, X1
	009 Move [X19+184], X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void StopAllClickAnimations()

Disassembly:
	0x03BCF714 ADD W9, W9, 0x1
	0x03BCF718 ADD X8, X8, W9, 0x4, SXTW
	0x03BCF71C ADD X0, X8, 0x138
	0x03BCF720 LDP X8, X1, [X0]
	0x03BCF724 MOV X0, X20
	0x03BCF728 BLR X8
	0x03BCF72C ADRP X8, 0x58E000
	0x03BCF730 LDR X8, [X8 + 0xA78]
	0x03BCF734 MOV X20, X0
	0x03BCF738 LDR X8, [X8]
	0x03BCF73C MOV X0, X8
	0x03BCF740 BL 0x1C16F10
	0x03BCF744 LDR X8, [X19]
	0x03BCF748 MOV X1, X19
	0x03BCF74C MOV X3, X31
	0x03BCF750 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, [X0+192]
	004 Move X19, X0
	005 Compare X1, 0
	006 JumpIfEqual {11}
	007 Move X0, X19
	008 Move X2, X31
	009 Call MonoBehaviour.StopCoroutine, X0, X1
	010 Move [X19+192], X31
	011 Move X1, [X19+184]
	012 Compare X1, 0
	013 JumpIfEqual {18}
	014 Move X0, X19
	015 Move X2, X31
	016 Call MonoBehaviour.StopCoroutine, X0, X1
	017 Move [X19+184], X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 

Method: System.Collections.IEnumerator ClickAnimation(System.Byte targetStateIndex, System.Single duration, System.Action onComplete = null)

Disassembly:
	0x03BCF85C ADD X10, X10, 0x10
	0x03BCF860 B.NE 0x3BCF84C
	0x03BCF864 MOVZ W2, 0x1
	0x03BCF868 MOV X0, X20
	0x03BCF86C BL 0x1C5C788
	0x03BCF870 B 0x3BCF884
	0x03BCF874 LDR W9, [X10]
	0x03BCF878 ADD W9, W9, 0x1
	0x03BCF87C ADD X8, X8, W9, 0x4, SXTW
	0x03BCF880 ADD X0, X8, 0x138
	0x03BCF884 LDP X8, X1, [X0]
	0x03BCF888 MOV X0, X20
	0x03BCF88C BLR X8
	0x03BCF890 ADRP X8, 0x58E000
	0x03BCF894 LDR X8, [X8 + 0xA68]
	0x03BCF898 MOV X20, X0
	0x03BCF89C LDR X8, [X8]
	0x03BCF8A0 MOV X0, X8
	0x03BCF8A4 BL 0x1C16F10
	0x03BCF8A8 LDR X8, [X19]
	0x03BCF8AC MOV X1, X19
	0x03BCF8B0 MOV X3, X31
	0x03BCF8B4 MOV X21, X0
	0x03BCF8B8 LDR X2, [X8 + 0x2E0]
	0x03BCF8BC BL 0x2725C6C
	0x03BCF8C0 CBZ X20, 0x3BCFAC8
	0x03BCF8C4 ADRP X8, 0x58E000
	0x03BCF8C8 LDR X8, [X8 + 0xA90]
	0x03BCF8CC MOV X0, X20
	0x03BCF8D0 MOV X1, X21
	0x03BCF8D4 LDR X2, [X8]
	0x03BCF8D8 BL 0x2729B68
	0x03BCF8DC LDR X20, [X19 + 0xB0]
	0x03BCF8E0 CBZ X20, 0x3BCF9F4

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x814000
	009 Move X23, 0x58F000
	010 Move W8, [X22+3656]
	011 Move X23, [X23+2648]
	012 Move X19, X2
	013 Move V8, V0
	014 Move W20, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x58F000
	021 Move X0, [X0+2648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3656], W8
	025 Move X0, [X23]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X22, X0
	029 Call Object..ctor, X0
	030 Move [X22+16], W31
	031 Move [X22+40], X21
	032 Move [X22+48], W20
	033 Move [X22+32], S8
	034 Move [X22+56], X19
	035 Move X0, X22
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Move X23, [X31+24]
	042 Move V8, [X31+64]
	043 Return X0

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.State.AffordanceStateData GenerateNewAffordanceState()

Disassembly:
	0x03BCF90C B.EQ 0x3BCF92C
	0x03BCF910 SUBS X9, X9, 0x1
	0x03BCF914 ADD X10, X10, 0x10
	0x03BCF918 B.NE 0x3BCF904
	0x03BCF91C MOV X0, X20
	0x03BCF920 MOV W2, W31
	0x03BCF924 BL 0x1C5C788
	0x03BCF928 B 0x3BCF938
	0x03BCF92C LDRSW X9, [X10]
	0x03BCF930 ADD X8, X8, X9, 0x4, LSL
	0x03BCF934 ADD X0, X8, 0x138
	0x03BCF938 LDP X8, X1, [X0]
	0x03BCF93C MOV X0, X20
	0x03BCF940 BLR X8
	0x03BCF944 ADRP X8, 0x526000
	0x03BCF948 LDR X8, [X8 + 0x5B0]
	0x03BCF94C MOV X20, X0
	0x03BCF950 LDR X8, [X8]
	0x03BCF954 MOV X0, X8
	0x03BCF958 BL 0x1C16F10
	0x03BCF95C LDR X8, [X19]
	0x03BCF960 MOV X1, X19
	0x03BCF964 MOV X3, X31
	0x03BCF968 MOV X21, X0
	0x03BCF96C LDR X2, [X8 + 0x2F0]
	0x03BCF970 BL 0x2A6DA40
	0x03BCF974 CBZ X20, 0x3BCFAC8
	0x03BCF978 ADRP X10, 0x58E000
	0x03BCF97C LDR X8, [X20]
	0x03BCF980 LDR X10, [X10 + 0xA60]
	0x03BCF984 LDRH W9, [X8 + 0x12E]
	0x03BCF988 LDR X1, [X10]
	0x03BCF98C CBZ X9, 0x3BCF9B0
	0x03BCF990 LDR X10, [X8 + 0xB0]
	0x03BCF994 ADD X10, X10, 0x8
	0x03BCF998 LDUR X11, [X10 - 0x8]
	0x03BCF99C CMP X11, X1
	0x03BCF9A0 B.EQ 0x3BCF9C0
	0x03BCF9A4 SUBS X9, X9, 0x1
	0x03BCF9A8 ADD X10, X10, 0x10
	0x03BCF9AC B.NE 0x3BCF998
	0x03BCF9B0 MOV X0, X20
	0x03BCF9B4 MOV W2, W31
	0x03BCF9B8 BL 0x1C5C788
	0x03BCF9BC B 0x3BCF9CC
	0x03BCF9C0 LDRSW X9, [X10]
	0x03BCF9C4 ADD X8, X8, X9, 0x4, LSL
	0x03BCF9C8 ADD X0, X8, 0x138
	0x03BCF9CC LDP X8, X2, [X0]
	0x03BCF9D0 MOV X0, X20
	0x03BCF9D4 MOV X1, X21
	0x03BCF9D8 BLR X8
	0x03BCF9DC LDR X8, [X19 + 0x48]
	0x03BCF9E0 CBZ X8, 0x3BCFAC8
	0x03BCF9E4 MOV X1, X0
	0x03BCF9E8 MOV X0, X8
	0x03BCF9EC MOV X2, X31
	0x03BCF9F0 BL 0x3B3175C
	0x03BCF9F4 LDR X20, [X19 + 0x88]
	0x03BCF9F8 STRB W31, [X19 + 0xD1]
	0x03BCF9FC CBZ X20, 0x3BCFA60
	0x03BCFA00 ADRP X9, 0x58B000
	0x03BCFA04 LDR X9, [X9 + 0x438]
	0x03BCFA08 LDR X8, [X20]
	0x03BCFA0C LDR X10, [X9]
	0x03BCFA10 LDRB W9, [X8 + 0x130]
	0x03BCFA14 LDRB W11, [X10 + 0x130]
	0x03BCFA18 CMP W9, W11
	0x03BCFA1C B.CC 0x3BCFA34
	0x03BCFA20 LDR X12, [X8 + 0xC8]
	0x03BCFA24 ADD X11, X12, X11, 0x3, LSL
	0x03BCFA28 LDUR X11, [X11 - 0x8]
	0x03BCFA2C CMP X11, X10
	0x03BCFA30 B.EQ 0x3BCFA68
	0x03BCFA34 ADRP X10, 0x54B000
	0x03BCFA38 LDR X10, [X10 + 0x6E0]
	0x03BCFA3C LDR X10, [X10]
	0x03BCFA40 LDRB W11, [X10 + 0x130]
	0x03BCFA44 CMP W9, W11
	0x03BCFA48 B.CC 0x3BCFA60
	0x03BCFA4C LDR X8, [X8 + 0xC8]
	0x03BCFA50 ADD X8, X8, X11, 0x3, LSL
	0x03BCFA54 LDUR X8, [X8 - 0x8]
	0x03BCFA58 CMP X8, X10
	0x03BCFA5C B.EQ 0x3BCFAA8
	0x03BCFA60 MOVZ W8, 0x1
	0x03BCFA64 B 0x3BCFAC0
	0x03BCFA68 LDR X0, [X22]
	0x03BCFA6C LDR X21, [X20 + 0x38]
	0x03BCFA70 LDR W8, [X0 + 0xE0]
	0x03BCFA74 CBNZ W8, 0x3BCFA7C
	0x03BCFA78 BL 0x1C16DFC
	0x03BCFA7C MOV X0, X21
	0x03BCFA80 MOV X1, X31
	0x03BCFA84 MOV X2, X31
	0x03BCFA88 BL 0x3C354F8
	0x03BCFA8C TBZ X0, 0x0, 0x3BCFAB8
	0x03BCFA90 LDR X0, [X20 + 0x38]
	0x03BCFA94 CBZ X0, 0x3BCFAC8
	0x03BCFA98 LDR X1, [X19 + 0x88]
	0x03BCFA9C MOV X2, X31
	0x03BCFAA0 BL 0x3B725D0
	0x03BCFAA4 B 0x3BCFABC
	0x03BCFAA8 MOV X0, X20
	0x03BCFAAC MOV X1, X31
	0x03BCFAB0 BL 0x3C32454
	0x03BCFAB4 B 0x3BCFABC
	0x03BCFAB8 MOV W0, W31
	0x03BCFABC AND W8, W0, 0x1
	0x03BCFAC0 STRB W8, [X19 + 0xD2]
	0x03BCFAC4 B 0x3BCF0A4
	0x03BCFAC8 BL 0x1C16F20
	0x03BCFACC STR X30, [X31 - 0x50]!
	0x03BCFAD0 STP X26, X25, [X31 + 0x10]
	0x03BCFAD4 STP X24, X23, [X31 + 0x20]
	0x03BCFAD8 STP X22, X21, [X31 + 0x30]
	0x03BCFADC STP X20, X19, [X31 + 0x40]
	0x03BCFAE0 ADRP X20, 0x813000
	0x03BCFAE4 LDRB W8, [X20 + 0xE4C]
	0x03BCFAE8 MOV X19, X0
	0x03BCFAEC TBNZ X8, 0x0, 0x3BCFC0C
	0x03BCFAF0 ADRP X0, 0x58B000
	0x03BCFAF4 LDR X0, [X0 + 0x248]
	0x03BCFAF8 BL 0x1C16CF4
	0x03BCFAFC ADRP X0, 0x58B000
	0x03BCFB00 LDR X0, [X0 + 0x250]
	0x03BCFB04 BL 0x1C16CF4
	0x03BCFB08 ADRP X0, 0x58B000
	0x03BCFB0C LDR X0, [X0 + 0xB60]
	0x03BCFB10 BL 0x1C16CF4
	0x03BCFB14 ADRP X0, 0x58B000
	0x03BCFB18 LDR X0, [X0 + 0x130]
	0x03BCFB1C BL 0x1C16CF4
	0x03BCFB20 ADRP X0, 0x58B000
	0x03BCFB24 LDR X0, [X0 + 0x148]
	0x03BCFB28 BL 0x1C16CF4
	0x03BCFB2C ADRP X0, 0x58B000
	0x03BCFB30 LDR X0, [X0 + 0x8D8]
	0x03BCFB34 BL 0x1C16CF4
	0x03BCFB38 ADRP X0, 0x58B000
	0x03BCFB3C LDR X0, [X0 + 0x160]
	0x03BCFB40 BL 0x1C16CF4
	0x03BCFB44 ADRP X0, 0x58E000
	0x03BCFB48 LDR X0, [X0 + 0xA68]
	0x03BCFB4C BL 0x1C16CF4
	0x03BCFB50 ADRP X0, 0x58E000
	0x03BCFB54 LDR X0, [X0 + 0xA70]
	0x03BCFB58 BL 0x1C16CF4
	0x03BCFB5C ADRP X0, 0x58B000
	0x03BCFB60 LDR X0, [X0 + 0x188]
	0x03BCFB64 BL 0x1C16CF4
	0x03BCFB68 ADRP X0, 0x58B000
	0x03BCFB6C LDR X0, [X0 + 0x190]
	0x03BCFB70 BL 0x1C16CF4
	0x03BCFB74 ADRP X0, 0x58E000
	0x03BCFB78 LDR X0, [X0 + 0xA78]
	0x03BCFB7C BL 0x1C16CF4
	0x03BCFB80 ADRP X0, 0x527000
	0x03BCFB84 LDR X0, [X0 + 0x408]
	0x03BCFB88 BL 0x1C16CF4
	0x03BCFB8C ADRP X0, 0x58B000
	0x03BCFB90 LDR X0, [X0 + 0x198]
	0x03BCFB94 BL 0x1C16CF4
	0x03BCFB98 ADRP X0, 0x58E000
	0x03BCFB9C LDR X0, [X0 + 0xA80]
	0x03BCFBA0 BL 0x1C16CF4
	0x03BCFBA4 ADRP X0, 0x58B000
	0x03BCFBA8 LDR X0, [X0 + 0x1F0]
	0x03BCFBAC BL 0x1C16CF4
	0x03BCFBB0 ADRP X0, 0x58B000
	0x03BCFBB4 LDR X0, [X0 + 0x1F8]
	0x03BCFBB8 BL 0x1C16CF4
	0x03BCFBBC ADRP X0, 0x58E000
	0x03BCFBC0 LDR X0, [X0 + 0xAA8]
	0x03BCFBC4 BL 0x1C16CF4
	0x03BCFBC8 ADRP X0, 0x58B000
	0x03BCFBCC LDR X0, [X0 + 0x200]
	0x03BCFBD0 BL 0x1C16CF4
	0x03BCFBD4 ADRP X0, 0x58E000
	0x03BCFBD8 LDR X0, [X0 + 0xAB0]
	0x03BCFBDC BL 0x1C16CF4
	0x03BCFBE0 ADRP X0, 0x58E000
	0x03BCFBE4 LDR X0, [X0 + 0xAB8]
	0x03BCFBE8 BL 0x1C16CF4
	0x03BCFBEC ADRP X0, 0x58B000
	0x03BCFBF0 LDR X0, [X0 + 0x208]
	0x03BCFBF4 BL 0x1C16CF4
	0x03BCFBF8 ADRP X0, 0x58E000
	0x03BCFBFC LDR X0, [X0 + 0xAC0]
	0x03BCFC00 BL 0x1C16CF4
	0x03BCFC04 MOVZ W8, 0x1
	0x03BCFC08 STRB W8, [X20 + 0xE4C]
	0x03BCFC0C LDR X0, [X19 + 0x48]
	0x03BCFC10 CBZ X0, 0x3BD0438
	0x03BCFC14 MOV X1, X31
	0x03BCFC18 BL 0x3B31AF0
	0x03BCFC1C LDRB W8, [X19 + 0xD0]
	0x03BCFC20 CBZ W8, 0x3BD041C
	0x03BCFC24 ADRP X8, 0x58B000
	0x03BCFC28 LDR X8, [X8 + 0x248]
	0x03BCFC2C LDR X20, [X19 + 0x88]
	0x03BCFC30 LDR X0, [X8]
	0x03BCFC34 BL 0x1C16F10
	0x03BCFC38 LDR X8, [X19]
	0x03BCFC3C MOV X1, X19
	0x03BCFC40 MOV X3, X31
	0x03BCFC44 MOV X21, X0
	0x03BCFC48 LDR X2, [X8 + 0x230]
	0x03BCFC4C BL 0x2A6B948
	0x03BCFC50 CBZ X20, 0x3BD0438
	0x03BCFC54 ADRP X22, 0x58B000
	0x03BCFC58 LDR X8, [X20]
	0x03BCFC5C LDR X22, [X22 + 0x8D8]
	0x03BCFC60 ADRP X23, 0x58B000
	0x03BCFC64 LDRH W9, [X8 + 0x12E]
	0x03BCFC68 LDR X1, [X22]
	0x03BCFC6C LDR X23, [X23 + 0x250]
	0x03BCFC70 CBZ X9, 0x3BCFC94
	0x03BCFC74 LDR X10, [X8 + 0xB0]
	0x03BCFC78 ADD X10, X10, 0x8
	0x03BCFC7C LDUR X11, [X10 - 0x8]
	0x03BCFC80 CMP X11, X1
	0x03BCFC84 B.EQ 0x3BCFCA4
	0x03BCFC88 SUBS X9, X9, 0x1
	0x03BCFC8C ADD X10, X10, 0x10
	0x03BCFC90 B.NE 0x3BCFC7C
	0x03BCFC94 MOVZ W2, 0x1
	0x03BCFC98 MOV X0, X20
	0x03BCFC9C BL 0x1C5C788
	0x03BCFCA0 B 0x3BCFCB4
	0x03BCFCA4 LDR W9, [X10]
	0x03BCFCA8 ADD W9, W9, 0x1
	0x03BCFCAC ADD X8, X8, W9, 0x4, SXTW
	0x03BCFCB0 ADD X0, X8, 0x138
	0x03BCFCB4 LDP X8, X2, [X0]
	0x03BCFCB8 MOV X0, X20
	0x03BCFCBC MOV X1, X21
	0x03BCFCC0 BLR X8
	0x03BCFCC4 LDR X0, [X23]
	0x03BCFCC8 LDR X20, [X19 + 0x88]
	0x03BCFCCC BL 0x1C16F10
	0x03BCFCD0 LDR X8, [X19]
	0x03BCFCD4 MOV X1, X19
	0x03BCFCD8 MOV X3, X31
	0x03BCFCDC MOV X21, X0
	0x03BCFCE0 LDR X2, [X8 + 0x240]
	0x03BCFCE4 BL 0x2A6B948
	0x03BCFCE8 CBZ X20, 0x3BD0438
	0x03BCFCEC LDR X8, [X20]
	0x03BCFCF0 LDR X1, [X22]
	0x03BCFCF4 LDRH W9, [X8 + 0x12E]
	0x03BCFCF8 CBZ X9, 0x3BCFD1C
	0x03BCFCFC LDR X10, [X8 + 0xB0]
	0x03BCFD00 ADD X10, X10, 0x8
	0x03BCFD04 LDUR X11, [X10 - 0x8]
	0x03BCFD08 CMP X11, X1
	0x03BCFD0C B.EQ 0x3BCFD2C
	0x03BCFD10 SUBS X9, X9, 0x1
	0x03BCFD14 ADD X10, X10, 0x10
	0x03BCFD18 B.NE 0x3BCFD04
	0x03BCFD1C MOVZ W2, 0x3
	0x03BCFD20 MOV X0, X20
	0x03BCFD24 BL 0x1C5C788
	0x03BCFD28 B 0x3BCFD3C
	0x03BCFD2C LDR W9, [X10]
	0x03BCFD30 ADD W9, W9, 0x3
	0x03BCFD34 ADD X8, X8, W9, 0x4, SXTW
	0x03BCFD38 ADD X0, X8, 0x138
	0x03BCFD3C LDP X8, X2, [X0]
	0x03BCFD40 MOV X0, X20
	0x03BCFD44 MOV X1, X21
	0x03BCFD48 BLR X8
	0x03BCFD4C LDR X20, [X19 + 0x90]
	0x03BCFD50 CBZ X20, 0x3BCFFF0
	0x03BCFD54 ADRP X22, 0x58B000
	0x03BCFD58 LDR X8, [X20]
	0x03BCFD5C LDR X22, [X22 + 0x148]
	0x03BCFD60 LDRH W9, [X8 + 0x12E]
	0x03BCFD64 LDR X1, [X22]
	0x03BCFD68 CBZ X9, 0x3BCFD8C
	0x03BCFD6C LDR X10, [X8 + 0xB0]
	0x03BCFD70 ADD X10, X10, 0x8
	0x03BCFD74 LDUR X11, [X10 - 0x8]
	0x03BCFD78 CMP X11, X1
	0x03BCFD7C B.EQ 0x3BCFD9C
	0x03BCFD80 SUBS X9, X9, 0x1
	0x03BCFD84 ADD X10, X10, 0x10
	0x03BCFD88 B.NE 0x3BCFD74
	0x03BCFD8C MOV X0, X20
	0x03BCFD90 MOV W2, W31
	0x03BCFD94 BL 0x1C5C788
	0x03BCFD98 B 0x3BCFDA8
	0x03BCFD9C LDRSW X9, [X10]
	0x03BCFDA0 ADD X8, X8, X9, 0x4, LSL
	0x03BCFDA4 ADD X0, X8, 0x138
	0x03BCFDA8 LDP X8, X1, [X0]
	0x03BCFDAC MOV X0, X20
	0x03BCFDB0 BLR X8
	0x03BCFDB4 ADRP X23, 0x58B000
	0x03BCFDB8 LDR X23, [X23 + 0x190]
	0x03BCFDBC MOV X20, X0
	0x03BCFDC0 LDR X8, [X23]
	0x03BCFDC4 MOV X0, X8
	0x03BCFDC8 BL 0x1C16F10
	0x03BCFDCC LDR X8, [X19]
	0x03BCFDD0 MOV X1, X19
	0x03BCFDD4 MOV X3, X31
	0x03BCFDD8 MOV X21, X0
	0x03BCFDDC LDR X2, [X8 + 0x250]
	0x03BCFDE0 BL 0x2725C6C
	0x03BCFDE4 CBZ X20, 0x3BD0438
	0x03BCFDE8 ADRP X24, 0x58B000
	0x03BCFDEC LDR X24, [X24 + 0x1F8]
	0x03BCFDF0 MOV X0, X20
	0x03BCFDF4 MOV X1, X21
	0x03BCFDF8 LDR X2, [X24]
	0x03BCFDFC BL 0x2729BA4
	0x03BCFE00 LDR X20, [X19 + 0x90]
	0x03BCFE04 CBZ X20, 0x3BD0438
	0x03BCFE08 LDR X8, [X20]
	0x03BCFE0C LDR X1, [X22]
	0x03BCFE10 LDRH W9, [X8 + 0x12E]
	0x03BCFE14 CBZ X9, 0x3BCFE38
	0x03BCFE18 LDR X10, [X8 + 0xB0]
	0x03BCFE1C ADD X10, X10, 0x8
	0x03BCFE20 LDUR X11, [X10 - 0x8]
	0x03BCFE24 CMP X11, X1
	0x03BCFE28 B.EQ 0x3BCFE48
	0x03BCFE2C SUBS X9, X9, 0x1
	0x03BCFE30 ADD X10, X10, 0x10
	0x03BCFE34 B.NE 0x3BCFE20
	0x03BCFE38 MOVZ W2, 0x1
	0x03BCFE3C MOV X0, X20
	0x03BCFE40 BL 0x1C5C788
	0x03BCFE44 B 0x3BCFE58
	0x03BCFE48 LDR W9, [X10]
	0x03BCFE4C ADD W9, W9, 0x1
	0x03BCFE50 ADD X8, X8, W9, 0x4, SXTW
	0x03BCFE54 ADD X0, X8, 0x138
	0x03BCFE58 LDP X8, X1, [X0]
	0x03BCFE5C MOV X0, X20
	0x03BCFE60 BLR X8
	0x03BCFE64 ADRP X25, 0x58B000
	0x03BCFE68 LDR X25, [X25 + 0x198]
	0x03BCFE6C MOV X20, X0
	0x03BCFE70 LDR X8, [X25]
	0x03BCFE74 MOV X0, X8
	0x03BCFE78 BL 0x1C16F10
	0x03BCFE7C LDR X8, [X19]
	0x03BCFE80 MOV X1, X19
	0x03BCFE84 MOV X3, X31
	0x03BCFE88 MOV X21, X0
	0x03BCFE8C LDR X2, [X8 + 0x260]
	0x03BCFE90 BL 0x2725C6C
	0x03BCFE94 CBZ X20, 0x3BD0438
	0x03BCFE98 ADRP X26, 0x58B000
	0x03BCFE9C LDR X26, [X26 + 0x208]
	0x03BCFEA0 MOV X0, X20
	0x03BCFEA4 MOV X1, X21
	0x03BCFEA8 LDR X2, [X26]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x814000
	006 Move W8, [X20+3657]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x54F000
	013 Move X0, [X0+1264]
	014 Call 0x1C17CF4
	015 Move X0, 0x58F000
	016 Move X0, [X0+2656]
	017 Call 0x1C17CF4
	018 Move X0, 0x54F000
	019 Move X0, [X0+1424]
	020 Call 0x1C17CF4
	021 Move X0, 0x58C000
	022 Move X0, [X0+3032]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3657], W8
	026 Move W8, [X19+208]
	027 Compare W8, 0
	028 JumpIfEqual {164}
	029 Move X8, [X19]
	030 Move X0, X19
	031 Move X9, [X8+520]
	032 Move X1, [X8+528]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {41}
	038 Move W8, [X19+108]
	039 Compare W8, 0
	040 JumpIfEqual {218}
	041 Move X8, [X19]
	042 Move X0, X19
	043 Move X9, [X8+520]
	044 Move X1, [X8+528]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {62}
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move X9, [X8+488]
	053 Move X1, [X8+496]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {62}
	059 Move W8, [X19+107]
	060 Compare W8, 0
	061 JumpIfEqual {253}
	062 Move X8, [X19]
	063 Move X0, X19
	064 Move X9, [X8+520]
	065 Move X1, [X8+528]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {92}
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+488]
	074 Move X1, [X8+496]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {92}
	080 Move X8, [X19]
	081 Move X0, X19
	082 Move X9, [X8+472]
	083 Move X1, [X8+480]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {92}
	089 Move W8, [X19+104]
	090 Compare W8, 0
	091 JumpIfEqual {277}
	092 Move X8, [X19]
	093 Move X0, X19
	094 Move X9, [X8+520]
	095 Move X1, [X8+528]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {131}
	101 Move X8, [X19]
	102 Move X0, X19
	103 Move X9, [X8+488]
	104 Move X1, [X8+496]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {131}
	110 Move X8, [X19]
	111 Move X0, X19
	112 Move X9, [X8+472]
	113 Move X1, [X8+480]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {131}
	119 Move X8, [X19]
	120 Move X0, X19
	121 Move X9, [X8+504]
	122 Move X1, [X8+512]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {131}
	128 Move W8, [X19+106]
	129 Compare W8, 0
	130 JumpIfEqual {306}
	131 Move X8, [X19]
	132 Move X0, X19
	133 Move X9, [X8+536]
	134 Move X1, [X8+544]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X20, 0x54F000
	137 Move X20, [X20+1264]
	138 Move W19, W0
	139 Move X8, [X20]
	140 Move W9, [X8+224]
	141 Compare W9, 0
	142 JumpIfEqual {183}
	143 Move TEMP, X19
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {189}
	147 Move X19, 0x814000
	148 Move W8, [X19+3755]
	149 Compare W8, 0
	150 JumpIfNotEqual {156}
	151 Move X0, 0x54F000
	152 Move X0, [X0+1264]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X19+3755], W8
	156 Move X0, [X20]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X20]
	162 Move X8, [X0+184]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Move X19, [X19+40]
	165 Compare X19, 0
	166 JumpIfEqual {422}
	167 Move X10, 0x54F000
	168 Move X8, [X19]
	169 Move X10, [X10+1424]
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X10]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move W2, 3
	181 Move X0, X19
	182 Call 0x1C5D788
	183 Move X0, X8
	184 Call 0x1C17DFC
	185 Move TEMP, X19
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {147}
	189 Move X19, 0x814000
	190 Move W8, [X19+3754]
	191 Compare W8, 0
	192 JumpIfNotEqual {198}
	193 Move X0, 0x54F000
	194 Move X0, [X0+1264]
	195 Call 0x1C17CF4
	196 Move W8, 1
	197 Move [X19+3754], W8
	198 Move X0, [X20]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {204}
	202 Call 0x1C17DFC
	203 Move X0, [X20]
	204 Move X8, [X0+184]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move W9, [X10]
	207 Add W9, W9, 3
	208 Add X8, X8, W9
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X1, [X0+8]
	212 Move X0, X19
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move X9, X0
	215 ShiftRight X9, 8
	216 And X9, X9, 0x7FFFFFFF
	217 And X8, X0, 0xFFFF
	218 Move X19, 0x54F000
	219 Move X19, [X19+1264]
	220 Move X0, [X19]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X20, 0x814000
	226 Move W8, [X20+3752]
	227 Compare W8, 0
	228 JumpIfNotEqual {234}
	229 Move X0, 0x54F000
	230 Move X0, [X0+1264]
	231 Call 0x1C17CF4
	232 Move W8, 1
	233 Move [X20+3752], W8
	234 Move X0, [X19]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {240}
	238 Call 0x1C17DFC
	239 Move X0, [X19]
	240 Move X8, [X0+184]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X9, X8
	243 ShiftRight X9, 8
	244 And X9, X9, 0x7FFFFFFF
	245 Move X20, [X31+16]
	246 Move X19, [X31+24]
	247 Move X30, [X31+8]
	248 And X9, X9, 255
	249 And X0, X8, 255
	250 NotImplemented "Instruction BFM not yet implemented."
	251 Move V8, [X31+32]
	252 Return X0
	253 Move W8, [X19+214]
	254 Move S8, 1
	255 Move S0, 1
	256 Compare W8, 0
	257 JumpIfEqual {364}
	258 Move X19, [X19+176]
	259 Compare X19, 0
	260 JumpIfEqual {422}
	261 Move X10, 0x58C000
	262 Move X8, [X19]
	263 Move X10, [X10+3032]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Move X1, [X10]
	266 Compare X9, 0
	267 JumpIfEqual {274}
	268 Move X10, [X8+176]
	269 Add X10, X10, 8
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Subtract X9, X9, 1
	273 Add X10, X10, 16
	274 Move X0, X19
	275 Move W2, W31
	276 Call 0x1C5D788
	277 Move W8, [X19+211]
	278 Move W9, [X19+214]
	279 Move W10, 2
	280 Move S8, W31
	281 NotImplemented "Instruction CMP not yet implemented."
	282 NotImplemented "Instruction CINC not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 NotImplemented "Instruction CSEL not yet implemented."
	285 Compare W9, 0
	286 JumpIfEqual {375}
	287 Move X19, [X19+176]
	288 Compare X19, 0
	289 JumpIfEqual {422}
	290 Move X10, 0x58C000
	291 Move X8, [X19]
	292 Move X10, [X10+3032]
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Move X1, [X10]
	295 Compare X9, 0
	296 JumpIfEqual {303}
	297 Move X10, [X8+176]
	298 Add X10, X10, 8
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Subtract X9, X9, 1
	302 Add X10, X10, 16
	303 Move X0, X19
	304 Move W2, W31
	305 Call 0x1C5D788
	306 Move X19, 0x54F000
	307 Move X19, [X19+1264]
	308 Move X0, [X19]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X20, 0x814000
	314 Move W8, [X20+3753]
	315 Compare W8, 0
	316 JumpIfNotEqual {322}
	317 Move X0, 0x54F000
	318 Move X0, [X0+1264]
	319 Call 0x1C17CF4
	320 Move W8, 1
	321 Move [X20+3753], W8
	322 Move X0, [X19]
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {328}
	326 Call 0x1C17DFC
	327 Move X0, [X19]
	328 Move X8, [X0+184]
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 NotImplemented "Instruction LDRSW not yet implemented."
	331 Add X8, X8, X9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X1, [X0+8]
	335 Move X0, X19
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Compare X0, 0
	338 JumpIfEqual {422}
	339 Move X10, 0x58F000
	340 Move X8, [X0]
	341 Move X10, [X10+2656]
	342 Move X19, X0
	343 NotImplemented "Instruction LDRH not yet implemented."
	344 Move X1, [X10]
	345 Compare X9, 0
	346 JumpIfEqual {353}
	347 Move X10, [X8+176]
	348 Add X10, X10, 8
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Subtract X9, X9, 1
	352 Add X10, X10, 16
	353 Move W2, 3
	354 Move X0, X19
	355 Call 0x1C5D788
	356 Move W9, [X10]
	357 Add W9, W9, 3
	358 Add X8, X8, W9
	359 Add X0, X8, 312
	360 Move X8, [X0]
	361 Move X1, [X0+8]
	362 Move X0, X19
	363 NotImplemented "Instruction BLR not yet implemented."
	364 Move W8, 0x437F0000
	365 NotImplemented "Instruction FMIN not yet implemented."
	366 Move S2, W8
	367 NotImplemented "Instruction FCMP not yet implemented."
	368 Move S0, W31
	369 Multiply S1, S1, S2
	370 NotImplemented "Instruction FCSEL not yet implemented."
	371 NotImplemented "Instruction FCVTZS not yet implemented."
	372 NotImplemented "Instruction FCMP not yet implemented."
	373 NotImplemented "Instruction CSEL not yet implemented."
	374 Move W8, 4
	375 Move W20, W8
	376 Move S0, W31
	377 NotImplemented "Instruction LDRSW not yet implemented."
	378 Add X8, X8, X9
	379 Add X0, X8, 312
	380 Move X8, [X0]
	381 Move X1, [X0+8]
	382 Move X0, X19
	383 NotImplemented "Instruction BLR not yet implemented."
	384 Compare X0, 0
	385 JumpIfEqual {422}
	386 Move X10, 0x58F000
	387 Move X8, [X0]
	388 Move X10, [X10+2656]
	389 Move X19, X0
	390 NotImplemented "Instruction LDRH not yet implemented."
	391 Move X1, [X10]
	392 Compare X9, 0
	393 JumpIfEqual {400}
	394 Move X10, [X8+176]
	395 Add X10, X10, 8
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Subtract X9, X9, 1
	399 Add X10, X10, 16
	400 Move W2, 3
	401 Move X0, X19
	402 Call 0x1C5D788
	403 Move W9, [X10]
	404 Add W9, W9, 3
	405 Add X8, X8, W9
	406 Add X0, X8, 312
	407 Move X8, [X0]
	408 Move X1, [X0+8]
	409 Move X0, X19
	410 NotImplemented "Instruction BLR not yet implemented."
	411 Move S1, 1
	412 Move W9, 0x437F0000
	413 NotImplemented "Instruction FCMP not yet implemented."
	414 NotImplemented "Instruction FMIN not yet implemented."
	415 Move S1, W9
	416 Multiply S0, S0, S1
	417 NotImplemented "Instruction FCSEL not yet implemented."
	418 NotImplemented "Instruction FCVTZS not yet implemented."
	419 NotImplemented "Instruction FCMP not yet implemented."
	420 Move W8, W20
	421 NotImplemented "Instruction CSEL not yet implemented."
	422 Call 0x1C17F20

Method: System.Collections.IEnumerator HoveredPriorityRoutine()

Disassembly:
	0x03BCF2C0 LDR X20, [X19 + 0x90]
	0x03BCF2C4 CBZ X20, 0x3BCFAC8
	0x03BCF2C8 LDR X8, [X20]
	0x03BCF2CC LDR X1, [X23]
	0x03BCF2D0 LDRH W9, [X8 + 0x12E]
	0x03BCF2D4 CBZ X9, 0x3BCF2F8
	0x03BCF2D8 LDR X10, [X8 + 0xB0]
	0x03BCF2DC ADD X10, X10, 0x8
	0x03BCF2E0 LDUR X11, [X10 - 0x8]
	0x03BCF2E4 CMP X11, X1
	0x03BCF2E8 B.EQ 0x3BCF308
	0x03BCF2EC SUBS X9, X9, 0x1
	0x03BCF2F0 ADD X10, X10, 0x10
	0x03BCF2F4 B.NE 0x3BCF2E0
	0x03BCF2F8 MOVZ W2, 0x1
	0x03BCF2FC MOV X0, X20
	0x03BCF300 BL 0x1C5C788
	0x03BCF304 B 0x3BCF318
	0x03BCF308 LDR W9, [X10]
	0x03BCF30C ADD W9, W9, 0x1
	0x03BCF310 ADD X8, X8, W9, 0x4, SXTW
	0x03BCF314 ADD X0, X8, 0x138
	0x03BCF318 LDP X8, X1, [X0]
	0x03BCF31C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x814000
	006 Move X21, 0x58F000
	007 Move W8, [X20+3658]
	008 Move X21, [X21+2624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x58F000
	015 Move X0, [X0+2624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3658], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void BindToProviders()

Disassembly:
	0x03BCFED4 CMP X11, X1
	0x03BCFED8 B.EQ 0x3BCFEF8
	0x03BCFEDC SUBS X9, X9, 0x1
	0x03BCFEE0 ADD X10, X10, 0x10
	0x03BCFEE4 B.NE 0x3BCFED0
	0x03BCFEE8 MOVZ W2, 0x2
	0x03BCFEEC MOV X0, X20
	0x03BCFEF0 BL 0x1C5C788
	0x03BCFEF4 B 0x3BCFF08
	0x03BCFEF8 LDR W9, [X10]
	0x03BCFEFC ADD W9, W9, 0x2
	0x03BCFF00 ADD X8, X8, W9, 0x4, SXTW
	0x03BCFF04 ADD X0, X8, 0x138
	0x03BCFF08 LDP X8, X1, [X0]
	0x03BCFF0C MOV X0, X20
	0x03BCFF10 BLR X8
	0x03BCFF14 LDR X8, [X23]
	0x03BCFF18 MOV X20, X0
	0x03BCFF1C MOV X0, X8
	0x03BCFF20 BL 0x1C16F10
	0x03BCFF24 LDR X8, [X19]
	0x03BCFF28 MOV X1, X19
	0x03BCFF2C MOV X3, X31
	0x03BCFF30 MOV X21, X0
	0x03BCFF34 LDR X2, [X8 + 0x270]
	0x03BCFF38 BL 0x2725C6C
	0x03BCFF3C CBZ X20, 0x3BD0438
	0x03BCFF40 LDR X2, [X24]
	0x03BCFF44 MOV X0, X20
	0x03BCFF48 MOV X1, X21
	0x03BCFF4C BL 0x2729BA4
	0x03BCFF50 LDR X20, [X19 + 0x90]
	0x03BCFF54 CBZ X20, 0x3BD0438
	0x03BCFF58 LDR X8, [X20]
	0x03BCFF5C LDR X1, [X22]
	0x03BCFF60 LDRH W9, [X8 + 0x12E]
	0x03BCFF64 CBZ X9, 0x3BCFF88
	0x03BCFF68 LDR X10, [X8 + 0xB0]
	0x03BCFF6C ADD X10, X10, 0x8
	0x03BCFF70 LDUR X11, [X10 - 0x8]
	0x03BCFF74 CMP X11, X1
	0x03BCFF78 B.EQ 0x3BCFF98
	0x03BCFF7C SUBS X9, X9, 0x1
	0x03BCFF80 ADD X10, X10, 0x10
	0x03BCFF84 B.NE 0x3BCFF70
	0x03BCFF88 MOVZ W2, 0x3
	0x03BCFF8C MOV X0, X20
	0x03BCFF90 BL 0x1C5C788
	0x03BCFF94 B 0x3BCFFA8
	0x03BCFF98 LDR W9, [X10]
	0x03BCFF9C ADD W9, W9, 0x3
	0x03BCFFA0 ADD X8, X8, W9, 0x4, SXTW
	0x03BCFFA4 ADD X0, X8, 0x138
	0x03BCFFA8 LDP X8, X1, [X0]
	0x03BCFFAC MOV X0, X20
	0x03BCFFB0 BLR X8
	0x03BCFFB4 LDR X8, [X25]
	0x03BCFFB8 MOV X20, X0
	0x03BCFFBC MOV X0, X8
	0x03BCFFC0 BL 0x1C16F10
	0x03BCFFC4 LDR X8, [X19]
	0x03BCFFC8 MOV X1, X19
	0x03BCFFCC MOV X3, X31
	0x03BCFFD0 MOV X21, X0
	0x03BCFFD4 LDR X2, [X8 + 0x280]
	0x03BCFFD8 BL 0x2725C6C
	0x03BCFFDC CBZ X20, 0x3BD0438
	0x03BCFFE0 LDR X2, [X26]
	0x03BCFFE4 MOV X0, X20
	0x03BCFFE8 MOV X1, X21
	0x03BCFFEC BL 0x2729BA4
	0x03BCFFF0 LDR X20, [X19 + 0x98]
	0x03BCFFF4 CBZ X20, 0x3BD0154
	0x03BCFFF8 ADRP X22, 0x58B000
	0x03BCFFFC LDR X8, [X20]
	0x03BD0000 B 0x3EB19BC
	0x03BD0004 LDRH W9, [X8 + 0x12E]
	0x03BD0008 LDR X1, [X22]
	0x03BD000C CBZ X9, 0x3BD0030
	0x03BD0010 LDR X10, [X8 + 0xB0]
	0x03BD0014 ADD X10, X10, 0x8
	0x03BD0018 LDUR X11, [X10 - 0x8]
	0x03BD001C CMP X11, X1
	0x03BD0020 B.EQ 0x3BD0040
	0x03BD0024 SUBS X9, X9, 0x1
	0x03BD0028 ADD X10, X10, 0x10
	0x03BD002C B.NE 0x3BD0018
	0x03BD0030 MOV X0, X20
	0x03BD0034 MOV W2, W31
	0x03BD0038 BL 0x1C5C788
	0x03BD003C B 0x3BD004C
	0x03BD0040 LDRSW X9, [X10]
	0x03BD0044 ADD X8, X8, X9, 0x4, LSL
	0x03BD0048 ADD X0, X8, 0x138
	0x03BD004C LDP X8, X1, [X0]
	0x03BD0050 MOV X0, X20
	0x03BD0054 BLR X8
	0x03BD0058 ADRP X8, 0x58A000
	0x03BD005C LDR X8, [X8 + 0x188]
	0x03BD0060 MOV X20, X0
	0x03BD0064 LDR X8, [X8]
	0x03BD0068 MOV X0, X8
	0x03BD006C BL 0x1C16F10
	0x03BD0070 LDR X8, [X19]
	0x03BD0074 MOV X1, X19
	0x03BD0078 MOV X3, X31
	0x03BD007C MOV X21, X0
	0x03BD0080 LDR X2, [X8 + 0x290]
	0x03BD0084 BL 0x2725C6C
	0x03BD0088 CBZ X20, 0x3BD0438
	0x03BD008C ADRP X8, 0x58A000
	0x03BD0090 LDR X8, [X8 + 0x1F0]
	0x03BD0094 MOV X0, X20
	0x03BD0098 MOV X1, X21
	0x03BD009C LDR X2, [X8]
	0x03BD00A0 BL 0x2729BA4
	0x03BD00A4 LDR X20, [X19 + 0x98]
	0x03BD00A8 CBZ X20, 0x3BD0438
	0x03BD00AC LDR X8, [X20]
	0x03BD00B0 LDR X1, [X22]
	0x03BD00B4 LDRH W9, [X8 + 0x12E]
	0x03BD00B8 CBZ X9, 0x3BD00DC
	0x03BD00BC LDR X10, [X8 + 0xB0]
	0x03BD00C0 ADD X10, X10, 0x8
	0x03BD00C4 LDUR X11, [X10 - 0x8]
	0x03BD00C8 CMP X11, X1
	0x03BD00CC B.EQ 0x3BD00EC
	0x03BD00D0 SUBS X9, X9, 0x1
	0x03BD00D4 ADD X10, X10, 0x10
	0x03BD00D8 B.NE 0x3BD00C4
	0x03BD00DC MOVZ W2, 0x1
	0x03BD00E0 MOV X0, X20
	0x03BD00E4 BL 0x1C5C788
	0x03BD00E8 B 0x3BD00FC
	0x03BD00EC LDR W9, [X10]
	0x03BD00F0 ADD W9, W9, 0x1
	0x03BD00F4 ADD X8, X8, W9, 0x4, SXTW
	0x03BD00F8 ADD X0, X8, 0x138
	0x03BD00FC LDP X8, X1, [X0]
	0x03BD0100 MOV X0, X20
	0x03BD0104 BLR X8
	0x03BD0108 ADRP X8, 0x526000
	0x03BD010C LDR X8, [X8 + 0x408]
	0x03BD0110 MOV X20, X0
	0x03BD0114 LDR X8, [X8]
	0x03BD0118 MOV X0, X8
	0x03BD011C BL 0x1C16F10
	0x03BD0120 LDR X8, [X19]
	0x03BD0124 MOV X1, X19
	0x03BD0128 MOV X3, X31
	0x03BD012C MOV X21, X0
	0x03BD0130 LDR X2, [X8 + 0x2A0]
	0x03BD0134 BL 0x2725C6C
	0x03BD0138 CBZ X20, 0x3BD0438
	0x03BD013C ADRP X8, 0x58A000
	0x03BD0140 LDR X8, [X8 + 0x200]
	0x03BD0144 MOV X0, X20
	0x03BD0148 MOV X1, X21
	0x03BD014C LDR X2, [X8]
	0x03BD0150 BL 0x2729BA4
	0x03BD0154 LDR X20, [X19 + 0xA0]
	0x03BD0158 CBZ X20, 0x3BD02B8
	0x03BD015C ADRP X22, 0x58A000
	0x03BD0160 LDR X8, [X20]
	0x03BD0164 LDR X22, [X22 + 0x130]
	0x03BD0168 LDRH W9, [X8 + 0x12E]
	0x03BD016C LDR X1, [X22]
	0x03BD0170 CBZ X9, 0x3BD0194
	0x03BD0174 LDR X10, [X8 + 0xB0]
	0x03BD0178 ADD X10, X10, 0x8
	0x03BD017C LDUR X11, [X10 - 0x8]
	0x03BD0180 CMP X11, X1
	0x03BD0184 B.EQ 0x3BD01A4
	0x03BD0188 SUBS X9, X9, 0x1
	0x03BD018C ADD X10, X10, 0x10
	0x03BD0190 B.NE 0x3BD017C
	0x03BD0194 MOV X0, X20
	0x03BD0198 MOV W2, W31
	0x03BD019C BL 0x1C5C788
	0x03BD01A0 B 0x3BD01B0
	0x03BD01A4 LDRSW X9, [X10]
	0x03BD01A8 ADD X8, X8, X9, 0x4, LSL
	0x03BD01AC ADD X0, X8, 0x138
	0x03BD01B0 LDP X8, X1, [X0]
	0x03BD01B4 MOV X0, X20
	0x03BD01B8 BLR X8
	0x03BD01BC ADRP X8, 0x58D000
	0x03BD01C0 LDR X8, [X8 + 0xA70]
	0x03BD01C4 MOV X20, X0
	0x03BD01C8 LDR X8, [X8]
	0x03BD01CC MOV X0, X8
	0x03BD01D0 BL 0x1C16F10
	0x03BD01D4 LDR X8, [X19]
	0x03BD01D8 MOV X1, X19
	0x03BD01DC MOV X3, X31
	0x03BD01E0 MOV X21, X0
	0x03BD01E4 LDR X2, [X8 + 0x2B0]
	0x03BD01E8 BL 0x2725C6C
	0x03BD01EC CBZ X20, 0x3BD0438
	0x03BD01F0 ADRP X8, 0x58D000
	0x03BD01F4 LDR X8, [X8 + 0xAC0]
	0x03BD01F8 MOV X0, X20
	0x03BD01FC MOV X1, X21
	0x03BD0200 LDR X2, [X8]
	0x03BD0204 BL 0x2729BA4
	0x03BD0208 LDR X20, [X19 + 0xA0]
	0x03BD020C CBZ X20, 0x3BD0438
	0x03BD0210 LDR X8, [X20]
	0x03BD0214 LDR X1, [X22]
	0x03BD0218 LDRH W9, [X8 + 0x12E]
	0x03BD021C CBZ X9, 0x3BD0240
	0x03BD0220 LDR X10, [X8 + 0xB0]
	0x03BD0224 ADD X10, X10, 0x8
	0x03BD0228 LDUR X11, [X10 - 0x8]
	0x03BD022C CMP X11, X1
	0x03BD0230 B.EQ 0x3BD0250
	0x03BD0234 SUBS X9, X9, 0x1
	0x03BD0238 ADD X10, X10, 0x10
	0x03BD023C B.NE 0x3BD0228
	0x03BD0240 MOVZ W2, 0x1
	0x03BD0244 MOV X0, X20
	0x03BD0248 BL 0x1C5C788
	0x03BD024C B 0x3BD0260
	0x03BD0250 LDR W9, [X10]
	0x03BD0254 ADD W9, W9, 0x1
	0x03BD0258 ADD X8, X8, W9, 0x4, SXTW
	0x03BD025C ADD X0, X8, 0x138
	0x03BD0260 LDP X8, X1, [X0]
	0x03BD0264 MOV X0, X20
	0x03BD0268 BLR X8
	0x03BD026C ADRP X8, 0x58D000
	0x03BD0270 LDR X8, [X8 + 0xA78]
	0x03BD0274 MOV X20, X0
	0x03BD0278 LDR X8, [X8]
	0x03BD027C MOV X0, X8
	0x03BD0280 BL 0x1C16F10
	0x03BD0284 LDR X8, [X19]
	0x03BD0288 MOV X1, X19
	0x03BD028C MOV X3, X31
	0x03BD0290 MOV X21, X0
	0x03BD0294 LDR X2, [X8 + 0x2C0]
	0x03BD0298 BL 0x2725C6C
	0x03BD029C CBZ X20, 0x3BD0438
	0x03BD02A0 ADRP X8, 0x58D000
	0x03BD02A4 LDR X8, [X8 + 0xAA8]
	0x03BD02A8 MOV X0, X20
	0x03BD02AC MOV X1, X21
	0x03BD02B0 LDR X2, [X8]
	0x03BD02B4 BL 0x2729BA4
	0x03BD02B8 LDR X20, [X19 + 0xA8]
	0x03BD02BC CBZ X20, 0x3BD041C
	0x03BD02C0 ADRP X22, 0x58A000
	0x03BD02C4 LDR X8, [X20]
	0x03BD02C8 LDR X22, [X22 + 0xB60]
	0x03BD02CC LDRH W9, [X8 + 0x12E]
	0x03BD02D0 LDR X1, [X22]
	0x03BD02D4 CBZ X9, 0x3BD02F8
	0x03BD02D8 LDR X10, [X8 + 0xB0]
	0x03BD02DC ADD X10, X10, 0x8
	0x03BD02E0 LDUR X11, [X10 - 0x8]
	0x03BD02E4 CMP X11, X1
	0x03BD02E8 B.EQ 0x3BD0308
	0x03BD02EC SUBS X9, X9, 0x1
	0x03BD02F0 ADD X10, X10, 0x10
	0x03BD02F4 B.NE 0x3BD02E0
	0x03BD02F8 MOV X0, X20
	0x03BD02FC MOV W2, W31
	0x03BD0300 BL 0x1C5C788
	0x03BD0304 B 0x3BD0314
	0x03BD0308 LDRSW X9, [X10]
	0x03BD030C ADD X8, X8, X9, 0x4, LSL
	0x03BD0310 ADD X0, X8, 0x138
	0x03BD0314 LDP X8, X1, [X0]
	0x03BD0318 MOV X0, X20
	0x03BD031C BLR X8
	0x03BD0320 ADRP X8, 0x58D000
	0x03BD0324 LDR X8, [X8 + 0xA80]
	0x03BD0328 MOV X20, X0
	0x03BD032C LDR X8, [X8]
	0x03BD0330 MOV X0, X8
	0x03BD0334 BL 0x1C16F10
	0x03BD0338 LDR X8, [X19]
	0x03BD033C MOV X1, X19
	0x03BD0340 MOV X3, X31
	0x03BD0344 MOV X21, X0
	0x03BD0348 LDR X2, [X8 + 0x2D0]
	0x03BD034C BL 0x2725C6C
	0x03BD0350 CBZ X20, 0x3BD0438
	0x03BD0354 ADRP X8, 0x58D000
	0x03BD0358 LDR X8, [X8 + 0xAB0]
	0x03BD035C MOV X0, X20
	0x03BD0360 MOV X1, X21
	0x03BD0364 LDR X2, [X8]
	0x03BD0368 BL 0x2729BA4
	0x03BD036C LDR X20, [X19 + 0xA8]
	0x03BD0370 CBZ X20, 0x3BD0438
	0x03BD0374 LDR X8, [X20]
	0x03BD0378 LDR X1, [X22]
	0x03BD037C LDRH W9, [X8 + 0x12E]
	0x03BD0380 CBZ X9, 0x3BD03A4
	0x03BD0384 LDR X10, [X8 + 0xB0]
	0x03BD0388 ADD X10, X10, 0x8
	0x03BD038C LDUR X11, [X10 - 0x8]
	0x03BD0390 CMP X11, X1
	0x03BD0394 B.EQ 0x3BD03B4
	0x03BD0398 SUBS X9, X9, 0x1
	0x03BD039C ADD X10, X10, 0x10
	0x03BD03A0 B.NE 0x3BD038C
	0x03BD03A4 MOVZ W2, 0x1
	0x03BD03A8 MOV X0, X20
	0x03BD03AC BL 0x1C5C788
	0x03BD03B0 B 0x3BD03C4
	0x03BD03B4 LDR W9, [X10]
	0x03BD03B8 ADD W9, W9, 0x1
	0x03BD03BC ADD X8, X8, W9, 0x4, SXTW
	0x03BD03C0 ADD X0, X8, 0x138
	0x03BD03C4 LDP X8, X1, [X0]
	0x03BD03C8 MOV X0, X20
	0x03BD03CC BLR X8
	0x03BD03D0 ADRP X8, 0x58D000
	0x03BD03D4 LDR X8, [X8 + 0xA68]
	0x03BD03D8 MOV X20, X0
	0x03BD03DC LDR X8, [X8]
	0x03BD03E0 MOV X0, X8
	0x03BD03E4 BL 0x1C16F10
	0x03BD03E8 LDR X8, [X19]
	0x03BD03EC MOV X1, X19
	0x03BD03F0 MOV X3, X31
	0x03BD03F4 MOV X21, X0
	0x03BD03F8 LDR X2, [X8 + 0x2E0]
	0x03BD03FC BL 0x2725C6C
	0x03BD0400 CBZ X20, 0x3BD0438
	0x03BD0404 ADRP X8, 0x58D000
	0x03BD0408 LDR X8, [X8 + 0xAB8]
	0x03BD040C MOV X0, X20
	0x03BD0410 MOV X1, X21
	0x03BD0414 LDR X2, [X8]
	0x03BD0418 BL 0x2729BA4
	0x03BD041C STRB W31, [X19 + 0xD0]
	0x03BD0420 LDP X20, X19, [X31 + 0x40]
	0x03BD0424 LDP X22, X21, [X31 + 0x30]
	0x03BD0428 LDP X24, X23, [X31 + 0x20]
	0x03BD042C LDP X26, X25, [X31 + 0x10]
	0x03BD0430 LDR X30, [X31], #0x50
	0x03BD0434 RET
	0x03BD0438 BL 0x1C16F20
	0x03BD043C STP X30, X21, [X31 - 0x20]!
	0x03BD0440 STP X20, X19, [X31 + 0x10]
	0x03BD0444 ADRP X21, 0x812000
	0x03BD0448 ADRP X20, 0x54D000
	0x03BD044C LDRB W8, [X21 + 0xE4D]
	0x03BD0450 LDR X20, [X20 + 0x548]
	0x03BD0454 MOV X19, X0
	0x03BD0458 TBNZ X8, 0x0, 0x3BD0470
	0x03BD045C ADRP X0, 0x54D000
	0x03BD0460 LDR X0, [X0 + 0x548]
	0x03BD0464 BL 0x1C16CF4
	0x03BD0468 MOVZ W8, 0x1
	0x03BD046C STRB W8, [X21 + 0xE4D]
	0x03BD0470 MOVZ W8, 0x101
	0x03BD0474 MOVZ W9, 0x1
	0x03BD0478 MOVZ W10, 0x3E800000
	0x03BD047C FMOV S0, W31
	0x03BD0480 FMOV S1, W31
	0x03BD0484 FMOV S2, 1
	0x03BD0488 FMOV S3, 1
	0x03BD048C MOV X0, X31
	0x03BD0490 STURH W8, [X19 + 0x69]
	0x03BD0494 STR W9, [X19 + 0x70]
	0x03BD0498 STR W10, [X19 + 0x78]
	0x03BD049C BL 0x3C01424
	0x03BD04A0 LDR X8, [X20]
	0x03BD04A4 MOV X20, X0
	0x03BD04A8 MOV X0, X8
	0x03BD04AC BL 0x1C16F10
	0x03BD04B0 MOV X1, X20
	0x03BD04B4 MOV X2, X31
	0x03BD04B8 MOV X21, X0
	0x03BD04BC BL 0x3B30FEC
	0x03BD04C0 STR X21, [X19 + 0x80]
	0x03BD04C4 MOV X0, X19
	0x03BD04C8 LDP X20, X19, [X31 + 0x10]
	0x03BD04CC LDP X30, X21, [X31], #0x20
	0x03BD04D0 B 0x3BCD6EC
	0x03BD04D4 STR X31, [X0 + 0xB8]
	0x03BD04D8 RET
	0x03BD04DC STR X31, [X0 + 0xC0]
	0x03BD04E0 RET
	0x03BD04E4 RET
	0x03BD04E8 STR D8, [X31 - 0x20]!
	0x03BD04EC STR X30, [X31 + 0x8]
	0x03BD04F0 STP X20, X19, [X31 + 0x10]
	0x03BD04F4 ADRP X20, 0x812000
	0x03BD04F8 LDRB W8, [X20 + 0xE4E]
	0x03BD04FC MOV X19, X0
	0x03BD0500 TBNZ X8, 0x0, 0x3BD0518
	0x03BD0504 ADRP X0, 0x54D000
	0x03BD0508 LDR X0, [X0 + 0x540]
	0x03BD050C BL 0x1C16CF4
	0x03BD0510 MOVZ W8, 0x1
	0x03BD0514 STRB W8, [X20 + 0xE4E]
	0x03BD0518 LDR W8, [X19 + 0x10]
	0x03BD051C LDR X20, [X19 + 0x28]
	0x03BD0520 CMP W8, 0x2
	0x03BD0524 B.EQ 0x3BD0548
	0x03BD0528 CMP W8, 0x1
	0x03BD052C B.EQ 0x3BD057C
	0x03BD0530 CBNZ W8, 0x3BD0574
	0x03BD0534 MOVN W8, 0x0
	0x03BD0538 STR W31, [X19 + 0x40]
	0x03BD053C STR W8, [X19 + 0x10]
	0x03BD0540 FMOV S0, W31
	0x03BD0544 B 0x3BD0598
	0x03BD0548 MOVN W8, 0x0
	0x03BD054C STR W8, [X19 + 0x10]
	0x03BD0550 CBZ X20, 0x3BD0658
	0x03BD0554 MOV X0, X20
	0x03BD0558 BL 0x3BCDC38
	0x03BD055C LDR X8, [X19 + 0x38]
	0x03BD0560 CBZ X8, 0x3BD0574
	0x03BD0564 LDR X9, [X8 + 0x18]
	0x03BD0568 LDR X0, [X8 + 0x40]
	0x03BD056C LDR X1, [X8 + 0x28]
	0x03BD0570 BLR X9
	0x03BD0574 MOV W0, W31
	0x03BD0578 B 0x3BD0648
	0x03BD057C LDR V8, [X19 + 0x40]
	0x03BD0580 MOVN W8, 0x0
	0x03BD0584 MOV X0, X31
	0x03BD0588 STR W8, [X19 + 0x10]
	0x03BD058C BL 0x3C3C714
	0x03BD0590 FADD S0, S8, S0
	0x03BD0594 STR S0, [X19 + 0x40]
	0x03BD0598 LDR V1, [X19 + 0x20]
	0x03BD059C FCMP S0, S1
	0x03BD05A0 B.PL 0x3BD0638
	0x03BD05A4 FDIV S0, S0, S1
	0x03BD05A8 FMOV S1, 1
	0x03BD05AC FMIN S1, S0, S1
	0x03BD05B0 FCMP S0, 0x0
	0x03BD05B4 FMOV S0, W31
	0x03BD05B8 FCSEL S8, S1, S0, PL
	0x03BD05BC CBZ X20, 0x3BD0658
	0x03BD05C0 LDR X0, [X20 + 0x80]
	0x03BD05C4 CBZ X0, 0x3BD0658
	0x03BD05C8 ADRP X8, 0x54D000
	0x03BD05CC LDR X8, [X8 + 0x540]
	0x03BD05D0 LDR X1, [X8]
	0x03BD05D4 BL 0x29AD9C0
	0x03BD05D8 CBZ X0, 0x3BD0658
	0x03BD05DC MOV V0.16B, V8.16B
	0x03BD05E0 MOV X1, X31
	0x03BD05E4 BL 0x3C00CC4
	0x03BD05E8 FMOV S1, 1
	0x03BD05EC MOVZ W8, 0x437F0000
	0x03BD05F0 FCMP S0, 0x0
	0x03BD05F4 FMIN S0, S0, S1
	0x03BD05F8 FMOV S1, W8
	0x03BD05FC FMOV S2, W31
	0x03BD0600 FMUL S0, S0, S1
	0x03BD0604 LDRB W1, [X19 + 0x30]
	0x03BD0608 FCSEL S0, S0, S2, PL
	0x03BD060C FCVTZS W8, S0
	0x03BD0610 FCMP S0, 0x0
	0x03BD0614 CSEL W8, W8, W8, MI
	0x03BD0618 AND X8, X8, 0xFF
	0x03BD061C BFM X1, X8, 0x38, 0x7
	0x03BD0620 MOV X0, X20
	0x03BD0624 BL 0x3BCD1F4
	0x03BD0628 MOVZ W0, 0x1
	0x03BD062C STR X31, [X19 + 0x18]
	0x03BD0630 STR W0, [X19 + 0x10]
	0x03BD0634 B 0x3BD0648
	0x03BD0638 MOVZ W8, 0x2
	0x03BD063C STR X31, [X19 + 0x18]
	0x03BD0640 STR W8, [X19 + 0x10]
	0x03BD0644 MOVZ W0, 0x1
	0x03BD0648 LDP X20, X19, [X31 + 0x10]
	0x03BD064C LDR X30, [X31 + 0x8]
	0x03BD0650 LDR V8, [X31], #0x20
	0x03BD0654 RET
	0x03BD0658 BL 0x1C16F20
	0x03BD065C LDR X0, [X0 + 0x18]
	0x03BD0660 RET
	0x03BD0664 STP X30, X19, [X31 - 0x10]!
	0x03BD0668 ADRP X0, 0x523000
	0x03BD066C LDR X0, [X0 + 0xB40]
	0x03BD0670 BL 0x1C16D08
	0x03BD0674 BL 0x1C16F10
	0x03BD0678 MOV X1, X31
	0x03BD067C MOV X19, X0
	0x03BD0680 BL 0x3380310
	0x03BD0684 ADRP X0, 0x58D000
	0x03BD0688 LDR X0, [X0 + 0xAC8]
	0x03BD068C BL 0x1C16D08
	0x03BD0690 MOV X1, X0
	0x03BD0694 MOV X0, X19
	0x03BD0698 BL 0x1C16DEC
	0x03BD069C LDR X0, [X0 + 0x18]
	0x03BD06A0 RET
	0x03BD06A4 RET
	0x03BD06A8 STR X30, [X31 - 0x30]!
	0x03BD06AC STP X22, X21, [X31 + 0x10]
	0x03BD06B0 STP X20, X19, [X31 + 0x20]
	0x03BD06B4 ADRP X20, 0x812000
	0x03BD06B8 LDRB W8, [X20 + 0xE4F]
	0x03BD06BC MOV X19, X0
	0x03BD06C0 TBNZ X8, 0x0, 0x3BD06E4
	0x03BD06C4 ADRP X0, 0x523000
	0x03BD06C8 LDR X0, [X0 + 0x598]
	0x03BD06CC BL 0x1C16CF4
	0x03BD06D0 ADRP X0, 0x58A000
	0x03BD06D4 LDR X0, [X0 + 0x438]
	0x03BD06D8 BL 0x1C16CF4
	0x03BD06DC MOVZ W8, 0x1
	0x03BD06E0 STRB W8, [X20 + 0xE4F]
	0x03BD06E4 LDR W8, [X19 + 0x10]
	0x03BD06E8 LDR X20, [X19 + 0x20]
	0x03BD06EC CMP W8, 0x1
	0x03BD06F0 B.EQ 0x3BD0708
	0x03BD06F4 CBNZ W8, 0x3BD07D4
	0x03BD06F8 MOVN W8, 0x0
	0x03BD06FC STR W8, [X19 + 0x10]
	0x03BD0700 CBNZ X20, 0x3BD0720
	0x03BD0704 B 0x3BD07F4
	0x03BD0708 MOVN W8, 0x0
	0x03BD070C STR W8, [X19 + 0x10]
	0x03BD0710 CBZ X20, 0x3BD07F4
	0x03BD0714 LDR W8, [X20 + 0xD8]
	0x03BD0718 CMP W8, 0x0
	0x03BD071C B.LE 0x3BD07DC
	0x03BD0720 LDR X21, [X20 + 0x90]
	0x03BD0724 CBZ X21, 0x3BD07C4
	0x03BD0728 ADRP X8, 0x58A000
	0x03BD072C LDR X8, [X8 + 0x438]
	0x03BD0730 LDR X9, [X21]
	0x03BD0734 LDR X8, [X8]
	0x03BD0738 LDRB W11, [X9 + 0x130]
	0x03BD073C LDRB W10, [X8 + 0x130]
	0x03BD0740 CMP W11, W10
	0x03BD0744 B.CC 0x3BD07C4
	0x03BD0748 LDR X9, [X9 + 0xC8]
	0x03BD074C ADD X9, X9, X10, 0x3, LSL
	0x03BD0750 LDUR X9, [X9 - 0x8]
	0x03BD0754 CMP X9, X8
	0x03BD0758 B.NE 0x3BD07C4
	0x03BD075C ADRP X8, 0x523000
	0x03BD0760 LDR X8, [X8 + 0x598]
	0x03BD0764 LDR X22, [X21 + 0x38]
	0x03BD0768 LDR X0, [X8]
	0x03BD076C LDR W8, [X0 + 0xE0]
	0x03BD0770 CBNZ W8, 0x3BD0778
	0x03BD0774 BL 0x1C16DFC
	0x03BD0778 MOV X0, X22
	0x03BD077C MOV X1, X31
	0x03BD0780 MOV X2, X31
	0x03BD0784 BL 0x3C354F8
	0x03BD0788 TBZ X0, 0x0, 0x3BD07C4
	0x03BD078C LDR X0, [X21 + 0x38]
	0x03BD0790 CBZ X0, 0x3BD07F4
	0x03BD0794 MOV X1, X21
	0x03BD0798 MOV X2, X31
	0x03BD079C MOV X3, X31
	0x03BD07A0 BL 0x3B72F58
	0x03BD07A4 LDRB W8, [X20 + 0xD3]
	0x03BD07A8 AND W9, W0, 0x1
	0x03BD07AC CMP W8, W9
	0x03BD07B0 B.EQ 0x3BD07C4
	0x03BD07B4 EOR W8, W8, 0x1
	0x03BD07B8 MOV X0, X20
	0x03BD07BC STRB W8, [X20 + 0xD3]
	0x03BD07C0 BL 0x3BCDC38
	0x03BD07C4 MOVZ W0, 0x1
	0x03BD07C8 STR X31, [X19 + 0x18]
	0x03BD07CC STR W0, [X19 + 0x10]
	0x03BD07D0 B 0x3BD07E4
	0x03BD07D4 MOV W0, W31
	0x03BD07D8 B 0x3BD07E4
	0x03BD07DC MOV W0, W31
	0x03BD07E0 STR X31, [X20 + 0xC8]
	0x03BD07E4 LDP X20, X19, [X31 + 0x20]
	0x03BD07E8 LDP X22, X21, [X31 + 0x10]
	0x03BD07EC LDR X30, [X31], #0x30
	0x03BD07F0 RET
	0x03BD07F4 BL 0x1C16F20
	0x03BD07F8 LDR X0, [X0 + 0x18]
	0x03BD07FC RET
	0x03BD0800 STP X30, X19, [X31 - 0x10]!
	0x03BD0804 ADRP X0, 0x523000
	0x03BD0808 LDR X0, [X0 + 0xB40]
	0x03BD080C BL 0x1C16D08
	0x03BD0810 BL 0x1C16F10
	0x03BD0814 MOV X1, X31
	0x03BD0818 MOV X19, X0
	0x03BD081C BL 0x3380310
	0x03BD0820 ADRP X0, 0x58D000
	0x03BD0824 LDR X0, [X0 + 0xAD0]
	0x03BD0828 BL 0x1C16D08
	0x03BD082C MOV X1, X0
	0x03BD0830 MOV X0, X19
	0x03BD0834 BL 0x1C16DEC
	0x03BD0838 LDR X0, [X0 + 0x18]
	0x03BD083C RET
	0x03BD0840 LDR X0, [X0 + 0x60]
	0x03BD0844 RET
	0x03BD0848 STR X30, [X31 - 0x30]!
	0x03BD084C STP X22, X21, [X31 + 0x10]
	0x03BD0850 STP X20, X19, [X31 + 0x20]
	0x03BD0854 ADRP X22, 0x812000
	0x03BD0858 ADRP X21, 0x523000
	0x03BD085C LDRB W8, [X22 + 0xE50]
	0x03BD0860 LDR X21, [X21 + 0x970]
	0x03BD0864 MOV X20, X1
	0x03BD0868 MOV X19, X0
	0x03BD086C TBNZ X8, 0x0, 0x3BD0890
	0x03BD0870 ADRP X0, 0x523000
	0x03BD0874 LDR X0, [X0 + 0x970]
	0x03BD0878 BL 0x1C16CF4
	0x03BD087C ADRP X0, 0x58A000
	0x03BD0880 LDR X0, [X0 + 0x2F8]
	0x03BD0884 BL 0x1C16CF4
	0x03BD0888 MOVZ W8, 0x1
	0x03BD088C STRB W8, [X22 + 0xE50]
	0x03BD0890 STR X20, [X19 + 0x60]
	0x03BD0894 LDR X0, [X21]
	0x03BD0898 LDR W8, [X0 + 0xE0]
	0x03BD089C CBNZ W8, 0x3BD08A4
	0x03BD08A0 BL 0x1C16DFC
	0x03BD08A4 MOV X0, X31
	0x03BD08A8 BL 0x3C018E4
	0x03BD08AC TBZ X0, 0x0, 0x3BD08EC
	0x03BD08B0 MOV X0, X19
	0x03BD08B4 MOV X1, X31
	0x03BD08B8 BL 0x3C32454
	0x03BD08BC TBZ X0, 0x0, 0x3BD08EC
	0x03BD08C0 ADRP X8, 0x58A000
	0x03BD08C4 LDR X8, [X8 + 0x2F8]
	0x03BD08C8 MOV X0, X20
	0x03BD08CC LDR X1, [X8]
	0x03BD08D0 BL 0x1C16E00
	0x03BD08D4 MOV X1, X0
	0x03BD08D8 MOV X0, X19
	0x03BD08DC LDP X20, X19, [X31 + 0x20]
	0x03BD08E0 LDP X22, X21, [X31 + 0x10]
	0x03BD08E4 LDR X30, [X31], #0x30
	0x03BD08E8 B 0x3BD08FC
	0x03BD08EC LDP X20, X19, [X31 + 0x20]
	0x03BD08F0 LDP X22, X21, [X31 + 0x10]
	0x03BD08F4 LDR X30, [X31], #0x30
	0x03BD08F8 RET
	0x03BD08FC STP X30, X21, [X31 - 0x20]!
	0x03BD0900 STP X20, X19, [X31 + 0x10]
	0x03BD0904 ADRP X21, 0x812000
	0x03BD0908 LDRB W8, [X21 + 0xE54]
	0x03BD090C MOV X20, X1
	0x03BD0910 MOV X19, X0
	0x03BD0914 TBNZ X8, 0x0, 0x3BD095C
	0x03BD0918 ADRP X0, 0x58A000
	0x03BD091C LDR X0, [X0 + 0x320]
	0x03BD0920 BL 0x1C16CF4
	0x03BD0924 ADRP X0, 0x58B000
	0x03BD0928 LDR X0, [X0 + 0x6D0]
	0x03BD092C BL 0x1C16CF4
	0x03BD0930 ADRP X0, 0x58A000
	0x03BD0934 LDR X0, [X0 + 0x328]
	0x03BD0938 BL 0x1C16CF4
	0x03BD093C ADRP X0, 0x523000
	0x03BD0940 LDR X0, [X0 + 0x598]
	0x03BD0944 BL 0x1C16CF4
	0x03BD0948 ADRP X0, 0x58A000
	0x03BD094C LDR X0, [X0 + 0x7C0]
	0x03BD0950 BL 0x1C16CF4
	0x03BD0954 MOVZ W8, 0x1
	0x03BD0958 STRB W8, [X21 + 0xE54]
	0x03BD095C LDR X8, [X19]
	0x03BD0960 ADRP X21, 0x523000
	0x03BD0964 MOV X0, X19
	0x03BD0968 LDP X9, X1, [X8 + 0x1C8]
	0x03BD096C LDR X21, [X21 + 0x598]
	0x03BD0970 BLR X9
	0x03BD0974 CBZ X20, 0x3BD0A64
	0x03BD0978 LDR X8, [X20]
	0x03BD097C LDR X0, [X21]
	0x03BD0980 LDRB W10, [X8 + 0x130]
	0x03BD0984 LDRB W9, [X0 + 0x130]
	0x03BD0988 CMP W10, W9
	0x03BD098C B.CC 0x3BD0A64
	0x03BD0990 LDR X8, [X8 + 0xC8]
	0x03BD0994 ADD X8, X8, X9, 0x3, LSL
	0x03BD0998 LDUR X8, [X8 - 0x8]
	0x03BD099C CMP X8, X0
	0x03BD09A0 B.NE 0x3BD0A64
	0x03BD09A4 LDR W8, [X0 + 0xE0]
	0x03BD09A8 CBNZ W8, 0x3BD09B0
	0x03BD09AC BL 0x1C16DFC
	0x03BD09B0 MOV X0, X20
	0x03BD09B4 MOV X1, X31
	0x03BD09B8 MOV X2, X31
	0x03BD09BC BL 0x3C354F8
	0x03BD09C0 TBZ X0, 0x0, 0x3BD0A64
	0x03BD09C4 STR X20, [X19 + 0x88]
	0x03BD09C8 ADRP X8, 0x58A000
	0x03BD09CC LDR X8, [X8 + 0x320]
	0x03BD09D0 MOV X0, X20
	0x03BD09D4 LDR X1, [X8]
	0x03BD09D8 BL 0x1C16E00
	0x03BD09DC CBZ X0, 0x3BD09E4
	0x03BD09E0 STR X0, [X19 + 0x90]
	0x03BD09E4 ADRP X8, 0x58A000
	0x03BD09E8 LDR X0, [X19 + 0x88]
	0x03BD09EC LDR X8, [X8 + 0x328]
	0x03BD09F0 LDR X1, [X8]
	0x03BD09F4 BL 0x1C16E00
	0x03BD09F8 CBZ X0, 0x3BD0A00
	0x03BD09FC STR X0, [X19 + 0x98]
	0x03BD0A00 ADRP X8, 0x58B000
	0x03BD0A04 LDR X0, [X19 + 0x88]
	0x03BD0A08 LDR X8, [X8 + 0x6D0]
	0x03BD0A0C LDR X1, [X8]
	0x03BD0A10 BL 0x1C16E00
	0x03BD0A14 CBZ X0, 0x3BD0A1C
	0x03BD0A18 STR X0, [X19 + 0xA0]
	0x03BD0A1C LDR X8, [X19 + 0x88]
	0x03BD0A20 CBZ X8, 0x3BD0A5C
	0x03BD0A24 ADRP X9, 0x58A000
	0x03BD0A28 LDR X9, [X9 + 0x7C0]
	0x03BD0A2C LDR X10, [X8]
	0x03BD0A30 LDR X9, [X9]
	0x03BD0A34 LDRB W12, [X10 + 0x130]
	0x03BD0A38 LDRB W11, [X9 + 0x130]
	0x03BD0A3C CMP W12, W11
	0x03BD0A40 B.CC 0x3BD0A5C
	0x03BD0A44 LDR X10, [X10 + 0xC8]
	0x03BD0A48 ADD X10, X10, X11, 0x3, LSL
	0x03BD0A4C LDUR X10, [X10 - 0x8]
	0x03BD0A50 CMP X10, X9
	0x03BD0A54 B.NE 0x3BD0A5C
	0x03BD0A58 STR X8, [X19 + 0xA8]
	0x03BD0A5C MOVZ W20, 0x1
	0x03BD0A60 B 0x3BD0A74
	0x03BD0A64 MOV W20, W31
	0x03BD0A68 MOVI V0.2D, 0x0
	0x03BD0A6C STR X31, [X19 + 0x88]
	0x03BD0A70 STP V0, V0, [X19 + 0x90]
	0x03BD0A74 LDR X0, [X21]
	0x03BD0A78 LDR X21, [X19 + 0xA8]
	0x03BD0A7C LDR W8, [X0 + 0xE0]
	0x03BD0A80 CBNZ W8, 0x3BD0A88
	0x03BD0A84 BL 0x1C16DFC
	0x03BD0A88 MOV X0, X21
	0x03BD0A8C MOV X1, X31
	0x03BD0A90 MOV X2, X31
	0x03BD0A94 BL 0x3C354F8
	0x03BD0A98 LDP X9, X10, [X19 + 0x90]
	0x03BD0A9C AND W8, W0, 0x1
	0x03BD0AA0 LDR X11, [X19 + 0xA0]
	0x03BD0AA4 STRB W8, [X19 + 0xB1]
	0x03BD0AA8 LDR X8, [X19 + 0x88]
	0x03BD0AAC CMP X9, 0x0
	0x03BD0AB0 CSET W9, NE
	0x03BD0AB4 CMP X10, 0x0
	0x03BD0AB8 STRB W9, [X19 + 0xB2]
	0x03BD0ABC CSET W9, NE
	0x03BD0AC0 CMP X11, 0x0
	0x03BD0AC4 STRB W9, [X19 + 0xB3]
	0x03BD0AC8 CSET W9, NE

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x814000
	012 Move W8, [X20+3659]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {107}
	018 Move X0, 0x527000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move X0, 0x58C000
	022 Move X0, [X0+584]
	023 Call 0x1C17CF4
	024 Move X0, 0x58C000
	025 Move X0, [X0+592]
	026 Call 0x1C17CF4
	027 Move X0, 0x54C000
	028 Move X0, [X0+1760]
	029 Call 0x1C17CF4
	030 Move X0, 0x58F000
	031 Move X0, [X0+2656]
	032 Call 0x1C17CF4
	033 Move X0, 0x58C000
	034 Move X0, [X0+2912]
	035 Call 0x1C17CF4
	036 Move X0, 0x58C000
	037 Move X0, [X0+304]
	038 Call 0x1C17CF4
	039 Move X0, 0x58C000
	040 Move X0, [X0+328]
	041 Call 0x1C17CF4
	042 Move X0, 0x58C000
	043 Move X0, [X0+2264]
	044 Call 0x1C17CF4
	045 Move X0, 0x58C000
	046 Move X0, [X0+3032]
	047 Call 0x1C17CF4
	048 Move X0, 0x58C000
	049 Move X0, [X0+352]
	050 Call 0x1C17CF4
	051 Move X0, 0x525000
	052 Move X0, [X0+1432]
	053 Call 0x1C17CF4
	054 Move X0, 0x58F000
	055 Move X0, [X0+2664]
	056 Call 0x1C17CF4
	057 Move X0, 0x58F000
	058 Move X0, [X0+2672]
	059 Call 0x1C17CF4
	060 Move X0, 0x58C000
	061 Move X0, [X0+392]
	062 Call 0x1C17CF4
	063 Move X0, 0x58C000
	064 Move X0, [X0+400]
	065 Call 0x1C17CF4
	066 Move X0, 0x58F000
	067 Move X0, [X0+2680]
	068 Call 0x1C17CF4
	069 Move X0, 0x528000
	070 Move X0, [X0+1032]
	071 Call 0x1C17CF4
	072 Move X0, 0x58C000
	073 Move X0, [X0+408]
	074 Call 0x1C17CF4
	075 Move X0, 0x58F000
	076 Move X0, [X0+2688]
	077 Call 0x1C17CF4
	078 Move X0, 0x58C000
	079 Move X0, [X0+416]
	080 Call 0x1C17CF4
	081 Move X0, 0x58F000
	082 Move X0, [X0+2696]
	083 Call 0x1C17CF4
	084 Move X0, 0x58E000
	085 Move X0, [X0+2704]
	086 Call 0x1C17CF4
	087 Move X0, 0x58E000
	088 Move X0, [X0+2712]
	089 Call 0x1C17CF4
	090 Move X0, 0x58B000
	091 Move X0, [X0+424]
	092 Call 0x1C17CF4
	093 Move X0, 0x58B000
	094 Move X0, [X0+432]
	095 Call 0x1C17CF4
	096 Move X0, 0x527000
	097 Move X0, [X0+1040]
	098 Call 0x1C17CF4
	099 Move X0, 0x58E000
	100 Move X0, [X0+2720]
	101 Call 0x1C17CF4
	102 Move X0, 0x58B000
	103 Move X0, [X0+1080]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X20+3659], W8
	107 Move X0, X19
	108 Call BaseAffordanceStateProvider.BindToProviders, X0
	109 Move X20, [X19+136]
	110 Compare X20, 0
	111 JumpIfEqual {123}
	112 Move X22, 0x524000
	113 Move X22, [X22+1432]
	114 Move X8, [X20]
	115 Move X0, [X22]
	116 Move W10, [X8+304]
	117 Move W9, [X0+304]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X8+200]
	120 Add X8, X8, X9
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X19+208], W31
	124 Move X0, X19
	125 Move X20, [X31+64]
	126 Move X19, [X31+72]
	127 Move X22, [X31+48]
	128 Move X21, [X31+56]
	129 Move X24, [X31+32]
	130 Move X23, [X31+40]
	131 Move X26, [X31+16]
	132 Move X25, [X31+24]
	133 Move X30, [X31+80]
	134 Move X27, [X31+88]
	135 Call XRInteractableAffordanceStateProvider.RefreshState, X0
	136 Return 
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X20
	142 Move X1, X31
	143 Move X2, X31
	144 Call Object.op_Inequality, X0, X1
	145 And W8, W0, 1
	146 Move [X19+208], W8
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {124}
	151 Move X8, 0x58B000
	152 Move X20, [X19+136]
	153 Move X8, [X8+584]
	154 Move X0, [X8]
	155 Call 0x1C17F10
	156 Move X8, [X19]
	157 Move X1, X19
	158 Move X3, X31
	159 Move X21, X0
	160 Move X2, [X8+560]
	161 Call Action`1<Object>..ctor, X0, X1, X2
	162 Compare X20, 0
	163 JumpIfEqual {792}
	164 Move X23, 0x58B000
	165 Move X8, [X20]
	166 Move X23, [X23+2264]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X23]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move X0, X20
	178 Move W2, W31
	179 Call 0x1C5D788
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 Add X8, X8, X9
	182 Add X0, X8, 312
	183 Move X8, [X0]
	184 Move X2, [X0+8]
	185 Move X0, X20
	186 Move X1, X21
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X8, 0x58B000
	189 Move X20, [X19+136]
	190 Move X8, [X8+592]
	191 Move X0, [X8]
	192 Call 0x1C17F10
	193 Move X8, [X19]
	194 Move X1, X19
	195 Move X3, X31
	196 Move X21, X0
	197 Move X2, [X8+576]
	198 Call Action`1<Object>..ctor, X0, X1, X2
	199 Compare X20, 0
	200 JumpIfEqual {792}
	201 Move X8, [X20]
	202 Move X1, [X23]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 2
	213 Move X0, X20
	214 Call 0x1C5D788
	215 Move W9, [X10]
	216 Add W9, W9, 2
	217 Add X8, X8, W9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X2, [X0+8]
	221 Move X0, X20
	222 Move X1, X21
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move X20, [X19+144]
	225 Compare X20, 0
	226 JumpIfEqual {397}
	227 Move X23, 0x58B000
	228 Move X8, [X20]
	229 Move X23, [X23+328]
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 Move X1, [X23]
	232 Compare X9, 0
	233 JumpIfEqual {240}
	234 Move X10, [X8+176]
	235 Add X10, X10, 8
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Subtract X9, X9, 1
	239 Add X10, X10, 16
	240 Move X0, X20
	241 Move W2, W31
	242 Call 0x1C5D788
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Add X8, X8, X9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X1, [X0+8]
	248 Move X0, X20
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X24, 0x58B000
	251 Move X24, [X24+400]
	252 Move X20, X0
	253 Move X8, [X24]
	254 Move X0, X8
	255 Call 0x1C17F10
	256 Move X8, [X19]
	257 Move X1, X19
	258 Move X3, X31
	259 Move X21, X0
	260 Move X2, [X8+592]
	261 Call UnityAction`1<Object>..ctor, X0, X1, X2
	262 Compare X20, 0
	263 JumpIfEqual {792}
	264 Move X25, 0x58B000
	265 Move X25, [X25+424]
	266 Move X0, X20
	267 Move X1, X21
	268 Move X2, [X25]
	269 Call UnityEvent`1<Object>.AddListener, X0, X1
	270 Move X20, [X19+144]
	271 Compare X20, 0
	272 JumpIfEqual {792}
	273 Move X8, [X20]
	274 Move X1, [X23]
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Compare X9, 0
	277 JumpIfEqual {284}
	278 Move X10, [X8+176]
	279 Add X10, X10, 8
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Subtract X9, X9, 1
	283 Add X10, X10, 16
	284 Move W2, 1
	285 Move X0, X20
	286 Call 0x1C5D788
	287 Move W9, [X10]
	288 Add W9, W9, 1
	289 Add X8, X8, W9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X1, [X0+8]
	293 Move X0, X20
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X26, 0x58B000
	296 Move X26, [X26+408]
	297 Move X20, X0
	298 Move X8, [X26]
	299 Move X0, X8
	300 Call 0x1C17F10
	301 Move X8, [X19]
	302 Move X1, X19
	303 Move X3, X31
	304 Move X21, X0
	305 Move X2, [X8+608]
	306 Call UnityAction`1<Object>..ctor, X0, X1, X2
	307 Compare X20, 0
	308 JumpIfEqual {792}
	309 Move X27, 0x58B000
	310 Move X27, [X27+416]
	311 Move X0, X20
	312 Move X1, X21
	313 Move X2, [X27]
	314 Call UnityEvent`1<Object>.AddListener, X0, X1
	315 Move X20, [X19+144]
	316 Compare X20, 0
	317 JumpIfEqual {792}
	318 Move X8, [X20]
	319 Move X1, [X23]
	320 NotImplemented "Instruction LDRH not yet implemented."
	321 Compare X9, 0
	322 JumpIfEqual {329}
	323 Move X10, [X8+176]
	324 Add X10, X10, 8
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Subtract X9, X9, 1
	328 Add X10, X10, 16
	329 Move W2, 2
	330 Move X0, X20
	331 Call 0x1C5D788
	332 Move W9, [X10]
	333 Add W9, W9, 2
	334 Add X8, X8, W9
	335 Add X0, X8, 312
	336 Move X8, [X0]
	337 Move X1, [X0+8]
	338 Move X0, X20
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Move X8, [X24]
	341 Move X20, X0
	342 Move X0, X8
	343 Call 0x1C17F10
	344 Move X8, [X19]
	345 Move X1, X19
	346 Move X3, X31
	347 Move X21, X0
	348 Move X2, [X8+624]
	349 Call UnityAction`1<Object>..ctor, X0, X1, X2
	350 Compare X20, 0
	351 JumpIfEqual {792}
	352 Move X2, [X25]
	353 Move X0, X20
	354 Move X1, X21
	355 Call UnityEvent`1<Object>.AddListener, X0, X1
	356 Move X20, [X19+144]
	357 Compare X20, 0
	358 JumpIfEqual {792}
	359 Move X8, [X20]
	360 Move X1, [X23]
	361 NotImplemented "Instruction LDRH not yet implemented."
	362 Compare X9, 0
	363 JumpIfEqual {370}
	364 Move X10, [X8+176]
	365 Add X10, X10, 8
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Subtract X9, X9, 1
	369 Add X10, X10, 16
	370 Move W2, 3
	371 Move X0, X20
	372 Call 0x1C5D788
	373 Move W9, [X10]
	374 Add W9, W9, 3
	375 Add X8, X8, W9
	376 Add X0, X8, 312
	377 Move X8, [X0]
	378 Move X1, [X0+8]
	379 Move X0, X20
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Move X8, [X26]
	382 Move X20, X0
	383 Move X0, X8
	384 Call 0x1C17F10
	385 Move X8, [X19]
	386 Move X1, X19
	387 Move X3, X31
	388 Move X21, X0
	389 Move X2, [X8+640]
	390 Call UnityAction`1<Object>..ctor, X0, X1, X2
	391 Compare X20, 0
	392 JumpIfEqual {792}
	393 Move X2, [X27]
	394 Move X0, X20
	395 Move X1, X21
	396 Call UnityEvent`1<Object>.AddListener, X0, X1
	397 Move X20, [X19+152]
	398 Compare X20, 0
	399 JumpIfEqual {488}
	400 Move X23, 0x58B000
	401 Move X8, [X20]
	402 Move X23, [X23+352]
	403 NotImplemented "Instruction LDRH not yet implemented."
	404 Move X1, [X23]
	405 Compare X9, 0
	406 JumpIfEqual {413}
	407 Move X10, [X8+176]
	408 Add X10, X10, 8
	409 NotImplemented "Instruction LDUR not yet implemented."
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Subtract X9, X9, 1
	412 Add X10, X10, 16
	413 Move X0, X20
	414 Move W2, W31
	415 Call 0x1C5D788
	416 NotImplemented "Instruction LDRSW not yet implemented."
	417 Add X8, X8, X9
	418 Add X0, X8, 312
	419 Move X8, [X0]
	420 Move X1, [X0+8]
	421 Move X0, X20
	422 NotImplemented "Instruction BLR not yet implemented."
	423 Move X8, 0x58B000
	424 Move X8, [X8+392]
	425 Move X20, X0
	426 Move X8, [X8]
	427 Move X0, X8
	428 Call 0x1C17F10
	429 Move X8, [X19]
	430 Move X1, X19
	431 Move X3, X31
	432 Move X21, X0
	433 Move X2, [X8+656]
	434 Call UnityAction`1<Object>..ctor, X0, X1, X2
	435 Compare X20, 0
	436 JumpIfEqual {792}
	437 Move X8, 0x58B000
	438 Move X8, [X8+432]
	439 Move X0, X20
	440 Move X1, X21
	441 Move X2, [X8]
	442 Call UnityEvent`1<Object>.AddListener, X0, X1
	443 Move X20, [X19+152]
	444 Compare X20, 0
	445 JumpIfEqual {792}
	446 Move X8, [X20]
	447 Move X1, [X23]
	448 NotImplemented "Instruction LDRH not yet implemented."
	449 Compare X9, 0
	450 JumpIfEqual {457}
	451 Move X10, [X8+176]
	452 Add X10, X10, 8
	453 NotImplemented "Instruction LDUR not yet implemented."
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Subtract X9, X9, 1
	456 Add X10, X10, 16
	457 Move W2, 1
	458 Move X0, X20
	459 Call 0x1C5D788
	460 Move W9, [X10]
	461 Add W9, W9, 1
	462 Add X8, X8, W9
	463 Add X0, X8, 312
	464 Move X8, [X0]
	465 Move X1, [X0+8]
	466 Move X0, X20
	467 NotImplemented "Instruction BLR not yet implemented."
	468 Move X8, 0x527000
	469 Move X8, [X8+1032]
	470 Move X20, X0
	471 Move X8, [X8]
	472 Move X0, X8
	473 Call 0x1C17F10
	474 Move X8, [X19]
	475 Move X1, X19
	476 Move X3, X31
	477 Move X21, X0
	478 Move X2, [X8+672]
	479 Call UnityAction`1<Object>..ctor, X0, X1, X2
	480 Compare X20, 0
	481 JumpIfEqual {792}
	482 Move X8, 0x527000
	483 Move X8, [X8+1040]
	484 Move X0, X20
	485 Move X1, X21
	486 Move X2, [X8]
	487 Call UnityEvent`1<Object>.AddListener, X0, X1
	488 Move X20, [X19+160]
	489 Compare X20, 0
	490 JumpIfEqual {579}
	491 Move X23, 0x58B000
	492 Move X8, [X20]
	493 Move X23, [X23+304]
	494 NotImplemented "Instruction LDRH not yet implemented."
	495 Move X1, [X23]
	496 Compare X9, 0
	497 JumpIfEqual {504}
	498 Move X10, [X8+176]
	499 Add X10, X10, 8
	500 NotImplemented "Instruction LDUR not yet implemented."
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Subtract X9, X9, 1
	503 Add X10, X10, 16
	504 Move X0, X20
	505 Move W2, W31
	506 Call 0x1C5D788
	507 NotImplemented "Instruction LDRSW not yet implemented."
	508 Add X8, X8, X9
	509 Add X0, X8, 312
	510 Move X8, [X0]
	511 Move X1, [X0+8]
	512 Move X0, X20
	513 NotImplemented "Instruction BLR not yet implemented."
	514 Move X8, 0x58E000
	515 Move X8, [X8+2672]
	516 Move X20, X0
	517 Move X8, [X8]
	518 Move X0, X8
	519 Call 0x1C17F10
	520 Move X8, [X19]
	521 Move X1, X19
	522 Move X3, X31
	523 Move X21, X0
	524 Move X2, [X8+688]
	525 Call UnityAction`1<Object>..ctor, X0, X1, X2
	526 Compare X20, 0
	527 JumpIfEqual {792}
	528 Move X8, 0x58E000
	529 Move X8, [X8+2712]
	530 Move X0, X20
	531 Move X1, X21
	532 Move X2, [X8]
	533 Call UnityEvent`1<Object>.AddListener, X0, X1
	534 Move X20, [X19+160]
	535 Compare X20, 0
	536 JumpIfEqual {792}
	537 Move X8, [X20]
	538 Move X1, [X23]
	539 NotImplemented "Instruction LDRH not yet implemented."
	540 Compare X9, 0
	541 JumpIfEqual {548}
	542 Move X10, [X8+176]
	543 Add X10, X10, 8
	544 NotImplemented "Instruction LDUR not yet implemented."
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Subtract X9, X9, 1
	547 Add X10, X10, 16
	548 Move W2, 1
	549 Move X0, X20
	550 Call 0x1C5D788
	551 Move W9, [X10]
	552 Add W9, W9, 1
	553 Add X8, X8, W9
	554 Add X0, X8, 312
	555 Move X8, [X0]
	556 Move X1, [X0+8]
	557 Move X0, X20
	558 NotImplemented "Instruction BLR not yet implemented."
	559 Move X8, 0x58E000
	560 Move X8, [X8+2680]
	561 Move X20, X0
	562 Move X8, [X8]
	563 Move X0, X8
	564 Call 0x1C17F10
	565 Move X8, [X19]
	566 Move X1, X19
	567 Move X3, X31
	568 Move X21, X0
	569 Move X2, [X8+704]
	570 Call UnityAction`1<Object>..ctor, X0, X1, X2
	571 Compare X20, 0
	572 JumpIfEqual {792}
	573 Move X8, 0x58E000
	574 Move X8, [X8+2696]
	575 Move X0, X20
	576 Move X1, X21
	577 Move X2, [X8]
	578 Call UnityEvent`1<Object>.AddListener, X0, X1
	579 Move X20, [X19+168]
	580 Compare X20, 0
	581 JumpIfEqual {670}
	582 Move X23, 0x58B000
	583 Move X8, [X20]
	584 Move X23, [X23+2912]
	585 NotImplemented "Instruction LDRH not yet implemented."
	586 Move X1, [X23]
	587 Compare X9, 0
	588 JumpIfEqual {595}
	589 Move X10, [X8+176]
	590 Add X10, X10, 8
	591 NotImplemented "Instruction LDUR not yet implemented."
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Subtract X9, X9, 1
	594 Add X10, X10, 16
	595 Move X0, X20
	596 Move W2, W31
	597 Call 0x1C5D788
	598 NotImplemented "Instruction LDRSW not yet implemented."
	599 Add X8, X8, X9
	600 Add X0, X8, 312
	601 Move X8, [X0]
	602 Move X1, [X0+8]
	603 Move X0, X20
	604 NotImplemented "Instruction BLR not yet implemented."
	605 Move X8, 0x58E000
	606 Move X8, [X8+2688]
	607 Move X20, X0
	608 Move X8, [X8]
	609 Move X0, X8
	610 Call 0x1C17F10
	611 Move X8, [X19]
	612 Move X1, X19
	613 Move X3, X31
	614 Move X21, X0
	615 Move X2, [X8+720]
	616 Call UnityAction`1<Object>..ctor, X0, X1, X2
	617 Compare X20, 0
	618 JumpIfEqual {792}
	619 Move X8, 0x58E000
	620 Move X8, [X8+2720]
	621 Move X0, X20
	622 Move X1, X21
	623 Move X2, [X8]
	624 Call UnityEvent`1<Object>.AddListener, X0, X1
	625 Move X20, [X19+168]
	626 Compare X20, 0
	627 JumpIfEqual {792}
	628 Move X8, [X20]
	629 Move X1, [X23]
	630 NotImplemented "Instruction LDRH not yet implemented."
	631 Compare X9, 0
	632 JumpIfEqual {639}
	633 Move X10, [X8+176]
	634 Add X10, X10, 8
	635 NotImplemented "Instruction LDUR not yet implemented."
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Subtract X9, X9, 1
	638 Add X10, X10, 16
	639 Move W2, 1
	640 Move X0, X20
	641 Call 0x1C5D788
	642 Move W9, [X10]
	643 Add W9, W9, 1
	644 Add X8, X8, W9
	645 Add X0, X8, 312
	646 Move X8, [X0]
	647 Move X1, [X0+8]
	648 Move X0, X20
	649 NotImplemented "Instruction BLR not yet implemented."
	650 Move X8, 0x58E000
	651 Move X8, [X8+2664]
	652 Move X20, X0
	653 Move X8, [X8]
	654 Move X0, X8
	655 Call 0x1C17F10
	656 Move X8, [X19]
	657 Move X1, X19
	658 Move X3, X31
	659 Move X21, X0
	660 Move X2, [X8+736]
	661 Call UnityAction`1<Object>..ctor, X0, X1, X2
	662 Compare X20, 0
	663 JumpIfEqual {792}
	664 Move X8, 0x58E000
	665 Move X8, [X8+2704]
	666 Move X0, X20
	667 Move X1, X21
	668 Move X2, [X8]
	669 Call UnityEvent`1<Object>.AddListener, X0, X1
	670 Move X20, [X19+176]
	671 Compare X20, 0
	672 JumpIfEqual {741}
	673 Move X10, 0x58B000
	674 Move X8, [X20]
	675 Move X10, [X10+3032]
	676 NotImplemented "Instruction LDRH not yet implemented."
	677 Move X1, [X10]
	678 Compare X9, 0
	679 JumpIfEqual {686}
	680 Move X10, [X8+176]
	681 Add X10, X10, 8
	682 NotImplemented "Instruction LDUR not yet implemented."
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Subtract X9, X9, 1
	685 Add X10, X10, 16
	686 Move X0, X20
	687 Move W2, W31
	688 Call 0x1C5D788
	689 NotImplemented "Instruction LDRSW not yet implemented."
	690 Add X8, X8, X9
	691 Add X0, X8, 312
	692 Move X8, [X0]
	693 Move X1, [X0+8]
	694 Move X0, X20
	695 NotImplemented "Instruction BLR not yet implemented."
	696 Move X8, 0x526000
	697 Move X8, [X8+1456]
	698 Move X20, X0
	699 Move X8, [X8]
	700 Move X0, X8
	701 Call 0x1C17F10
	702 Move X8, [X19]
	703 Move X1, X19
	704 Move X3, X31
	705 Move X21, X0
	706 Move X2, [X8+752]
	707 Call Action`1<Single>..ctor, X0, X1, X2
	708 Compare X20, 0
	709 JumpIfEqual {792}
	710 Move X10, 0x58E000
	711 Move X8, [X20]
	712 Move X10, [X10+2656]
	713 NotImplemented "Instruction LDRH not yet implemented."
	714 Move X1, [X10]
	715 Compare X9, 0
	716 JumpIfEqual {723}
	717 Move X10, [X8+176]
	718 Add X10, X10, 8
	719 NotImplemented "Instruction LDUR not yet implemented."
	720 NotImplemented "Instruction CMP not yet implemented."
	721 Subtract X9, X9, 1
	722 Add X10, X10, 16
	723 Move X0, X20
	724 Move W2, W31
	725 Call 0x1C5D788
	726 NotImplemented "Instruction LDRSW not yet implemented."
	727 Add X8, X8, X9
	728 Add X0, X8, 312
	729 Move X8, [X0]
	730 Move X2, [X0+8]
	731 Move X0, X20
	732 Move X1, X21
	733 NotImplemented "Instruction BLR not yet implemented."
	734 Move X8, [X19+72]
	735 Compare X8, 0
	736 JumpIfEqual {792}
	737 Move X1, X0
	738 Move X0, X8
	739 Move X2, X31
	740 Call BindingsGroup.AddBinding, X0, X1
	741 Move X20, [X19+136]
	742 Move [X19+209], W31
	743 Compare X20, 0
	744 JumpIfEqual {765}
	745 Move X9, 0x58B000
	746 Move X9, [X9+1080]
	747 Move X8, [X20]
	748 Move X10, [X9]
	749 Move W9, [X8+304]
	750 Move W11, [X10+304]
	751 NotImplemented "Instruction CMP not yet implemented."
	752 Move X12, [X8+200]
	753 Add X11, X12, X11
	754 NotImplemented "Instruction LDUR not yet implemented."
	755 NotImplemented "Instruction CMP not yet implemented."
	756 Move X10, 0x54B000
	757 Move X10, [X10+1760]
	758 Move X10, [X10]
	759 Move W11, [X10+304]
	760 NotImplemented "Instruction CMP not yet implemented."
	761 Move X8, [X8+200]
	762 Add X8, X8, X11
	763 NotImplemented "Instruction LDUR not yet implemented."
	764 NotImplemented "Instruction CMP not yet implemented."
	765 Move W8, 1
	766 Move X0, [X22]
	767 Move X21, [X20+56]
	768 Move W8, [X0+224]
	769 Compare W8, 0
	770 JumpIfNotEqual {772}
	771 Call 0x1C17DFC
	772 Move X0, X21
	773 Move X1, X31
	774 Move X2, X31
	775 Call Object.op_Inequality, X0, X1
	776 Move TEMP, X0
	777 And TEMP, TEMP, 1
	778 Compare TEMP, 1
	779 JumpIfNotEqual {789}
	780 Move X0, [X20+56]
	781 Compare X0, 0
	782 JumpIfEqual {792}
	783 Move X1, [X19+136]
	784 Move X2, X31
	785 Call XRInteractionManager.IsRegistered, X0, X1
	786 Move X0, X20
	787 Move X1, X31
	788 Call Behaviour.get_isActiveAndEnabled, X0
	789 Move W0, W31
	790 And W8, W0, 1
	791 Move [X19+210], W8
	792 Call 0x1C17F20

Method: System.Void RefreshState()

Disassembly:
	0x03BCEC38 LDR X10, [X8 + 0xB0]
	0x03BCEC3C ADD X10, X10, 0x8
	0x03BCEC40 LDUR X11, [X10 - 0x8]
	0x03BCEC44 CMP X11, X1
	0x03BCEC48 B.EQ 0x3BCED34
	0x03BCEC4C SUBS X9, X9, 0x1
	0x03BCEC50 ADD X10, X10, 0x10
	0x03BCEC54 B.NE 0x3BCEC40
	0x03BCEC58 MOV X0, X19
	0x03BCEC5C MOV W2, W31
	0x03BCEC60 BL 0x1C5C788
	0x03BCEC64 B 0x3BCED40
	0x03BCEC68 LDRB W8, [X19 + 0xD3]
	0x03BCEC6C LDRB W9, [X19 + 0xD6]
	0x03BCEC70 MOVZ W10, 0x2
	0x03BCEC74 FMOV S8, W31
	0x03BCEC78 CMP W8, 0x0
	0x03BCEC7C CINC W8, W10, NE
	0x03BCEC80 CMP W9, 0x0
	0x03BCEC84 CSEL W20, W31, W8, EQ
	0x03BCEC88 CBZ W9, 0x3BCEDE8
	0x03BCEC8C LDR X19, [X19 + 0xB0]
	0x03BCEC90 CBZ X19, 0x3BCEEA8
	0x03BCEC94 ADRP X10, 0x58C000
	0x03BCEC98 LDR X8, [X19]
	0x03BCEC9C LDR X10, [X10 + 0xBD8]
	0x03BCECA0 LDRH W9, [X8 + 0x12E]
	0x03BCECA4 LDR X1, [X10]
	0x03BCECA8 CBZ X9, 0x3BCECCC
	0x03BCECAC LDR X10, [X8 + 0xB0]
	0x03BCECB0 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+808]
	007 Move X1, [X8+816]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X20, X0
	010 And W8, W20, 255
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X1, [X19+184]
	013 Compare X1, 0
	014 JumpIfEqual {19}
	015 Move X0, X19
	016 Move X2, X31
	017 Call MonoBehaviour.StopCoroutine, X0, X1
	018 Move [X19+184], X31
	019 And W8, W20, 255
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X1, [X19+192]
	022 Compare X1, 0
	023 JumpIfEqual {28}
	024 Move X0, X19
	025 Move X2, X31
	026 Call MonoBehaviour.StopCoroutine, X0, X1
	027 Move [X19+192], X31
	028 And X1, X20, 0xFFFF
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Call BaseAffordanceStateProvider.UpdateAffordanceState, X0, X1
	034 Return 

Method: System.Void ClearBindings()

Disassembly:
	0x03BD0ACC CMP X8, 0x0
	0x03BD0AD0 LDR X8, [X19]
	0x03BD0AD4 STRB W9, [X19 + 0xB4]
	0x03BD0AD8 CSET W9, NE
	0x03BD0ADC STRB W9, [X19 + 0xB5]
	0x03BD0AE0 LDP X9, X1, [X8 + 0x1B8]
	0x03BD0AE4 MOV X0, X19
	0x03BD0AE8 BLR X9
	0x03BD0AEC MOV W0, W20
	0x03BD0AF0 LDP X20, X19, [X31 + 0x10]
	0x03BD0AF4 LDP X30, X21, [X31], #0x20
	0x03BD0AF8 RET
	0x03BD0AFC LDRB W0, [X0 + 0x68]
	0x03BD0B00 RET
	0x03BD0B04 AND W8, W1, 0x1
	0x03BD0B08 STRB W8, [X0 + 0x68]
	0x03BD0B0C RET
	0x03BD0B10 LDRB W0, [X0 + 0x69]
	0x03BD0B14 RET
	0x03BD0B18 AND W8, W1, 0x1
	0x03BD0B1C STRB W8, [X0 + 0x69]
	0x03BD0B20 RET
	0x03BD0B24 LDRB W0, [X0 + 0x6A]
	0x03BD0B28 RET
	0x03BD0B2C AND W8, W1, 0x1
	0x03BD0B30 STRB W8, [X0 + 0x6A]
	0x03BD0B34 RET
	0x03BD0B38 LDRB W0, [X0 + 0x6B]
	0x03BD0B3C RET
	0x03BD0B40 AND W8, W1, 0x1
	0x03BD0B44 STRB W8, [X0 + 0x6B]
	0x03BD0B48 RET
	0x03BD0B4C LDRB W0, [X0 + 0x6C]
	0x03BD0B50 RET
	0x03BD0B54 AND W8, W1, 0x1
	0x03BD0B58 STRB W8, [X0 + 0x6C]
	0x03BD0B5C RET
	0x03BD0B60 LDRB W0, [X0 + 0x6D]
	0x03BD0B64 RET
	0x03BD0B68 AND W8, W1, 0x1
	0x03BD0B6C STRB W8, [X0 + 0x6D]
	0x03BD0B70 RET
	0x03BD0B74 STR X30, [X31 - 0x20]!
	0x03BD0B78 STP X20, X19, [X31 + 0x10]
	0x03BD0B7C ADRP X20, 0x812000
	0x03BD0B80 LDRB W8, [X20 + 0xE51]
	0x03BD0B84 MOV X19, X0
	0x03BD0B88 TBNZ X8, 0x0, 0x3BD0BA0
	0x03BD0B8C ADRP X0, 0x58A000
	0x03BD0B90 LDR X0, [X0 + 0x320]
	0x03BD0B94 BL 0x1C16CF4
	0x03BD0B98 MOVZ W8, 0x1
	0x03BD0B9C STRB W8, [X20 + 0xE51]
	0x03BD0BA0 LDRB W8, [X19 + 0x6D]
	0x03BD0BA4 CBZ W8, 0x3BD0BB8
	0x03BD0BA8 LDP X20, X19, [X31 + 0x10]
	0x03BD0BAC MOV W0, W31
	0x03BD0BB0 LDR X30, [X31], #0x20
	0x03BD0BB4 RET
	0x03BD0BB8 LDRB W8, [X19 + 0xB2]
	0x03BD0BBC CBZ W8, 0x3BD0BA8
	0x03BD0BC0 LDR X19, [X19 + 0x90]
	0x03BD0BC4 CBZ X19, 0x3BD0C34
	0x03BD0BC8 ADRP X10, 0x58A000
	0x03BD0BCC LDR X8, [X19]
	0x03BD0BD0 LDR X10, [X10 + 0x320]
	0x03BD0BD4 LDRH W9, [X8 + 0x12E]
	0x03BD0BD8 LDR X1, [X10]
	0x03BD0BDC CBZ X9, 0x3BD0C00
	0x03BD0BE0 LDR X10, [X8 + 0xB0]
	0x03BD0BE4 ADD X10, X10, 0x8
	0x03BD0BE8 LDUR X11, [X10 - 0x8]
	0x03BD0BEC CMP X11, X1
	0x03BD0BF0 B.EQ 0x3BD0C10
	0x03BD0BF4 SUBS X9, X9, 0x1
	0x03BD0BF8 ADD X10, X10, 0x10
	0x03BD0BFC B.NE 0x3BD0BE8
	0x03BD0C00 MOVZ W2, 0x3
	0x03BD0C04 MOV X0, X19
	0x03BD0C08 BL 0x1C5C788
	0x03BD0C0C B 0x3BD0C20
	0x03BD0C10 LDR W9, [X10]
	0x03BD0C14 ADD W9, W9, 0x3
	0x03BD0C18 ADD X8, X8, W9, 0x4, SXTW
	0x03BD0C1C ADD X0, X8, 0x138
	0x03BD0C20 LDP X2, X1, [X0]
	0x03BD0C24 MOV X0, X19
	0x03BD0C28 LDP X20, X19, [X31 + 0x10]
	0x03BD0C2C LDR X30, [X31], #0x20
	0x03BD0C30 BR X2
	0x03BD0C34 BL 0x1C16F20
	0x03BD0C38 LDRB W8, [X0 + 0x6B]
	0x03BD0C3C CBZ W8, 0x3BD0C48
	0x03BD0C40 MOV W0, W31
	0x03BD0C44 RET
	0x03BD0C48 LDRB W8, [X0 + 0xD8]
	0x03BD0C4C CMP W8, 0x0
	0x03BD0C50 CSET W0, NE
	0x03BD0C54 RET
	0x03BD0C58 STR X30, [X31 - 0x20]!
	0x03BD0C5C STP X20, X19, [X31 + 0x10]
	0x03BD0C60 ADRP X20, 0x812000
	0x03BD0C64 LDRB W8, [X20 + 0xE52]
	0x03BD0C68 MOV X19, X0
	0x03BD0C6C TBNZ X8, 0x0, 0x3BD0C84
	0x03BD0C70 ADRP X0, 0x58A000
	0x03BD0C74 LDR X0, [X0 + 0x328]
	0x03BD0C78 BL 0x1C16CF4
	0x03BD0C7C MOVZ W8, 0x1
	0x03BD0C80 STRB W8, [X20 + 0xE52]
	0x03BD0C84 LDRB W8, [X19 + 0x6D]
	0x03BD0C88 CBZ W8, 0x3BD0C9C
	0x03BD0C8C LDP X20, X19, [X31 + 0x10]
	0x03BD0C90 MOV W0, W31
	0x03BD0C94 LDR X30, [X31], #0x20
	0x03BD0C98 RET
	0x03BD0C9C LDRB W8, [X19 + 0xB3]
	0x03BD0CA0 CBZ W8, 0x3BD0C8C
	0x03BD0CA4 LDR X19, [X19 + 0x98]
	0x03BD0CA8 CBZ X19, 0x3BD0D18
	0x03BD0CAC ADRP X10, 0x58A000
	0x03BD0CB0 LDR X8, [X19]
	0x03BD0CB4 LDR X10, [X10 + 0x328]
	0x03BD0CB8 LDRH W9, [X8 + 0x12E]
	0x03BD0CBC LDR X1, [X10]
	0x03BD0CC0 CBZ X9, 0x3BD0CE4
	0x03BD0CC4 LDR X10, [X8 + 0xB0]
	0x03BD0CC8 ADD X10, X10, 0x8
	0x03BD0CCC LDUR X11, [X10 - 0x8]
	0x03BD0CD0 CMP X11, X1
	0x03BD0CD4 B.EQ 0x3BD0CF4
	0x03BD0CD8 SUBS X9, X9, 0x1
	0x03BD0CDC ADD X10, X10, 0x10
	0x03BD0CE0 B.NE 0x3BD0CCC
	0x03BD0CE4 MOVZ W2, 0x4
	0x03BD0CE8 MOV X0, X19
	0x03BD0CEC BL 0x1C5C788
	0x03BD0CF0 B 0x3BD0D04
	0x03BD0CF4 LDR W9, [X10]
	0x03BD0CF8 ADD W9, W9, 0x4
	0x03BD0CFC ADD X8, X8, W9, 0x4, SXTW
	0x03BD0D00 ADD X0, X8, 0x138
	0x03BD0D04 LDP X2, X1, [X0]
	0x03BD0D08 MOV X0, X19
	0x03BD0D0C LDP X20, X19, [X31 + 0x10]
	0x03BD0D10 LDR X30, [X31], #0x20
	0x03BD0D14 BR X2
	0x03BD0D18 BL 0x1C16F20
	0x03BD0D1C LDRB W8, [X0 + 0x6C]
	0x03BD0D20 CBZ W8, 0x3BD0D2C
	0x03BD0D24 MOV W0, W31
	0x03BD0D28 RET
	0x03BD0D2C LDRB W8, [X0 + 0xD9]
	0x03BD0D30 CMP W8, 0x0
	0x03BD0D34 CSET W0, NE
	0x03BD0D38 RET
	0x03BD0D3C LDRB W8, [X0 + 0x6D]
	0x03BD0D40 CBZ W8, 0x3BD0D4C
	0x03BD0D44 MOV W0, W31
	0x03BD0D48 RET
	0x03BD0D4C LDRB W8, [X0 + 0xC8]
	0x03BD0D50 CMP W8, 0x0
	0x03BD0D54 CSET W0, NE
	0x03BD0D58 RET
	0x03BD0D5C LDRB W0, [X0 + 0xC9]
	0x03BD0D60 RET
	0x03BD0D64 STR X30, [X31 - 0x10]!
	0x03BD0D68 LDRB W8, [X0 + 0xB5]
	0x03BD0D6C CBZ W8, 0x3BD0D80
	0x03BD0D70 LDR X0, [X0 + 0x88]
	0x03BD0D74 MOV X1, X31
	0x03BD0D78 BL 0x3B48408
	0x03BD0D7C EOR W8, W0, 0x1
	0x03BD0D80 AND W0, W8, 0x1
	0x03BD0D84 LDR X30, [X31], #0x10
	0x03BD0D88 RET
	0x03BD0D8C LDR W0, [X0 + 0x70]
	0x03BD0D90 RET
	0x03BD0D94 STR W1, [X0 + 0x70]
	0x03BD0D98 RET
	0x03BD0D9C LDR W0, [X0 + 0x74]
	0x03BD0DA0 RET
	0x03BD0DA4 STR W1, [X0 + 0x74]
	0x03BD0DA8 RET
	0x03BD0DAC LDR V0, [X0 + 0x78]
	0x03BD0DB0 RET
	0x03BD0DB4 STR S0, [X0 + 0x78]
	0x03BD0DB8 RET
	0x03BD0DBC LDR X0, [X0 + 0x80]
	0x03BD0DC0 RET
	0x03BD0DC4 STR X1, [X0 + 0x80]
	0x03BD0DC8 RET
	0x03BD0DCC STR X30, [X31 - 0x30]!
	0x03BD0DD0 STP X22, X21, [X31 + 0x10]
	0x03BD0DD4 STP X20, X19, [X31 + 0x20]
	0x03BD0DD8 ADRP X21, 0x812000
	0x03BD0DDC ADRP X20, 0x523000
	0x03BD0DE0 LDRB W8, [X21 + 0xE53]
	0x03BD0DE4 LDR X20, [X20 + 0x598]
	0x03BD0DE8 MOV X19, X0
	0x03BD0DEC TBNZ X8, 0x0, 0x3BD0E40
	0x03BD0DF0 ADRP X0, 0x58D000
	0x03BD0DF4 LDR X0, [X0 + 0xAD8]
	0x03BD0DF8 BL 0x1C16CF4
	0x03BD0DFC ADRP X0, 0x58A000
	0x03BD0E00 LDR X0, [X0 + 0x2F8]
	0x03BD0E04 BL 0x1C16CF4
	0x03BD0E08 ADRP X0, 0x523000
	0x03BD0E0C LDR X0, [X0 + 0x598]
	0x03BD0E10 BL 0x1C16CF4
	0x03BD0E14 ADRP X0, 0x54D000
	0x03BD0E18 LDR X0, [X0 + 0x1E8]
	0x03BD0E1C BL 0x1C16CF4
	0x03BD0E20 ADRP X0, 0x58D000
	0x03BD0E24 LDR X0, [X0 + 0xA38]
	0x03BD0E28 BL 0x1C16CF4
	0x03BD0E2C ADRP X0, 0x58D000
	0x03BD0E30 LDR X0, [X0 + 0xAE0]
	0x03BD0E34 BL 0x1C16CF4
	0x03BD0E38 MOVZ W8, 0x1
	0x03BD0E3C STRB W8, [X21 + 0xE53]
	0x03BD0E40 LDR X0, [X20]
	0x03BD0E44 LDR X20, [X19 + 0x60]
	0x03BD0E48 LDR W8, [X0 + 0xE0]
	0x03BD0E4C CBNZ W8, 0x3BD0E54
	0x03BD0E50 BL 0x1C16DFC
	0x03BD0E54 MOV X0, X20
	0x03BD0E58 MOV X1, X31
	0x03BD0E5C MOV X2, X31
	0x03BD0E60 BL 0x3C354F8
	0x03BD0E64 TBZ X0, 0x0, 0x3BD0E84
	0x03BD0E68 ADRP X8, 0x58A000
	0x03BD0E6C LDR X8, [X8 + 0x2F8]
	0x03BD0E70 LDR X0, [X19 + 0x60]
	0x03BD0E74 LDR X1, [X8]
	0x03BD0E78 BL 0x1C16E00
	0x03BD0E7C MOV X1, X0
	0x03BD0E80 CBNZ X0, 0x3BD0E9C
	0x03BD0E84 ADRP X8, 0x58D000
	0x03BD0E88 LDR X8, [X8 + 0xAD8]
	0x03BD0E8C MOV X0, X19
	0x03BD0E90 LDR X1, [X8]
	0x03BD0E94 BL 0x21A3F50
	0x03BD0E98 MOV X1, X0
	0x03BD0E9C MOV X0, X19
	0x03BD0EA0 BL 0x3BD08FC
	0x03BD0EA4 TBZ X0, 0x0, 0x3BD0EB8
	0x03BD0EA8 LDP X20, X19, [X31 + 0x20]
	0x03BD0EAC LDP X22, X21, [X31 + 0x10]
	0x03BD0EB0 LDR X30, [X31], #0x30
	0x03BD0EB4 RET
	0x03BD0EB8 ADRP X20, 0x58D000
	0x03BD0EBC ADRP X21, 0x58D000
	0x03BD0EC0 ADRP X22, 0x54D000
	0x03BD0EC4 LDR X20, [X20 + 0xAE0]
	0x03BD0EC8 LDR X21, [X21 + 0xA38]
	0x03BD0ECC LDR X22, [X22 + 0x1E8]
	0x03BD0ED0 MOV X0, X19
	0x03BD0ED4 MOV X1, X31
	0x03BD0ED8 BL 0x3C32ECC
	0x03BD0EDC LDR X8, [X20]
	0x03BD0EE0 MOV X1, X0
	0x03BD0EE4 MOV X2, X31
	0x03BD0EE8 MOV X0, X8
	0x03BD0EEC BL 0x321EFD0
	0x03BD0EF0 LDR X1, [X21]
	0x03BD0EF4 MOV X2, X31
	0x03BD0EF8 BL 0x321B938
	0x03BD0EFC LDR X8, [X22]
	0x03BD0F00 MOV X20, X0
	0x03BD0F04 LDR W9, [X8 + 0xE0]
	0x03BD0F08 CBNZ W9, 0x3BD0F14
	0x03BD0F0C MOV X0, X8
	0x03BD0F10 BL 0x1C16DFC
	0x03BD0F14 MOV X0, X20
	0x03BD0F18 MOV X1, X19
	0x03BD0F1C MOV X2, X31
	0x03BD0F20 BL 0x3B2EE8C
	0x03BD0F24 MOV X0, X19
	0x03BD0F28 LDP X20, X19, [X31 + 0x20]
	0x03BD0F2C LDP X22, X21, [X31 + 0x10]
	0x03BD0F30 MOV W1, W31
	0x03BD0F34 MOV X2, X31
	0x03BD0F38 LDR X30, [X31], #0x30
	0x03BD0F3C B 0x3C32410
	0x03BD0F40 STP X30, X23, [X31 - 0x30]!
	0x03BD0F44 STP X22, X21, [X31 + 0x10]
	0x03BD0F48 STP X20, X19, [X31 + 0x20]
	0x03BD0F4C ADRP X20, 0x812000
	0x03BD0F50 LDRB W8, [X20 + 0xE55]
	0x03BD0F54 MOV X19, X0
	0x03BD0F58 TBNZ X8, 0x0, 0x3BD1048
	0x03BD0F5C ADRP X0, 0x525000
	0x03BD0F60 LDR X0, [X0 + 0x5B0]
	0x03BD0F64 BL 0x1C16CF4
	0x03BD0F68 ADRP X0, 0x58A000
	0x03BD0F6C LDR X0, [X0 + 0xCF0]
	0x03BD0F70 BL 0x1C16CF4
	0x03BD0F74 ADRP X0, 0x58A000
	0x03BD0F78 LDR X0, [X0 + 0xCE8]
	0x03BD0F7C BL 0x1C16CF4
	0x03BD0F80 ADRP X0, 0x54A000
	0x03BD0F84 LDR X0, [X0 + 0x6E0]
	0x03BD0F88 BL 0x1C16CF4
	0x03BD0F8C ADRP X0, 0x58D000
	0x03BD0F90 LDR X0, [X0 + 0xA60]
	0x03BD0F94 BL 0x1C16CF4
	0x03BD0F98 ADRP X0, 0x58A000
	0x03BD0F9C LDR X0, [X0 + 0x320]
	0x03BD0FA0 BL 0x1C16CF4
	0x03BD0FA4 ADRP X0, 0x58B000
	0x03BD0FA8 LDR X0, [X0 + 0x6D0]
	0x03BD0FAC BL 0x1C16CF4
	0x03BD0FB0 ADRP X0, 0x58A000
	0x03BD0FB4 LDR X0, [X0 + 0x2F8]
	0x03BD0FB8 BL 0x1C16CF4
	0x03BD0FBC ADRP X0, 0x58A000
	0x03BD0FC0 LDR X0, [X0 + 0x328]
	0x03BD0FC4 BL 0x1C16CF4
	0x03BD0FC8 ADRP X0, 0x523000
	0x03BD0FCC LDR X0, [X0 + 0x598]
	0x03BD0FD0 BL 0x1C16CF4
	0x03BD0FD4 ADRP X0, 0x58A000
	0x03BD0FD8 LDR X0, [X0 + 0x188]
	0x03BD0FDC BL 0x1C16CF4
	0x03BD0FE0 ADRP X0, 0x58A000
	0x03BD0FE4 LDR X0, [X0 + 0x190]
	0x03BD0FE8 BL 0x1C16CF4
	0x03BD0FEC ADRP X0, 0x526000
	0x03BD0FF0 LDR X0, [X0 + 0x408]
	0x03BD0FF4 BL 0x1C16CF4
	0x03BD0FF8 ADRP X0, 0x58A000
	0x03BD0FFC LDR X0, [X0 + 0x198]
	0x03BD1000 BL 0x1C16CF4
	0x03BD1004 ADRP X0, 0x589000
	0x03BD1008 LDR X0, [X0 + 0x1A0]
	0x03BD100C BL 0x1C16CF4
	0x03BD1010 ADRP X0, 0x589000
	0x03BD1014 LDR X0, [X0 + 0x1A8]
	0x03BD1018 BL 0x1C16CF4
	0x03BD101C ADRP X0, 0x589000
	0x03BD1020 LDR X0, [X0 + 0x1B0]
	0x03BD1024 BL 0x1C16CF4
	0x03BD1028 ADRP X0, 0x525000
	0x03BD102C LDR X0, [X0 + 0x410]
	0x03BD1030 BL 0x1C16CF4
	0x03BD1034 ADRP X0, 0x589000
	0x03BD1038 LDR X0, [X0 + 0x368]
	0x03BD103C BL 0x1C16CF4
	0x03BD1040 MOVZ W8, 0x1
	0x03BD1044 STRB W8, [X20 + 0xE55]
	0x03BD1048 MOV X0, X19
	0x03BD104C BL 0x3BCD0E8
	0x03BD1050 LDR X20, [X19 + 0x88]
	0x03BD1054 CBZ X20, 0x3BD108C
	0x03BD1058 ADRP X22, 0x522000
	0x03BD105C LDR X22, [X22 + 0x598]
	0x03BD1060 LDR X8, [X20]
	0x03BD1064 LDR X0, [X22]
	0x03BD1068 LDRB W10, [X8 + 0x130]
	0x03BD106C LDRB W9, [X0 + 0x130]
	0x03BD1070 CMP W10, W9
	0x03BD1074 B.CC 0x3BD108C
	0x03BD1078 LDR X8, [X8 + 0xC8]
	0x03BD107C ADD X8, X8, X9, 0x3, LSL
	0x03BD1080 LDUR X8, [X8 - 0x8]
	0x03BD1084 CMP X8, X0
	0x03BD1088 B.EQ 0x3BD10BC
	0x03BD108C STRB W31, [X19 + 0xB0]
	0x03BD1090 LDR X8, [X19]
	0x03BD1094 MOV X0, X19
	0x03BD1098 LDR X9, [X8 + 0x248]
	0x03BD109C LDR X1, [X8 + 0x250]
	0x03BD10A0 BLR X9
	0x03BD10A4 AND X1, X0, 0xFFFF
	0x03BD10A8 MOV X0, X19
	0x03BD10AC LDP X20, X19, [X31 + 0x20]
	0x03BD10B0 LDP X22, X21, [X31 + 0x10]
	0x03BD10B4 LDP X30, X23, [X31], #0x30
	0x03BD10B8 B 0x3BCD1F4
	0x03BD10BC LDR W8, [X0 + 0xE0]
	0x03BD10C0 CBNZ W8, 0x3BD10C8
	0x03BD10C4 BL 0x1C16DFC
	0x03BD10C8 MOV X0, X20
	0x03BD10CC MOV X1, X31
	0x03BD10D0 MOV X2, X31
	0x03BD10D4 BL 0x3C354F8
	0x03BD10D8 AND W8, W0, 0x1
	0x03BD10DC STRB W8, [X19 + 0xB0]
	0x03BD10E0 TBZ X0, 0x0, 0x3BD1090
	0x03BD10E4 ADRP X8, 0x589000
	0x03BD10E8 LDR X20, [X19 + 0x88]
	0x03BD10EC LDR X8, [X8 + 0xCE8]
	0x03BD10F0 LDR X0, [X8]
	0x03BD10F4 BL 0x1C16F10
	0x03BD10F8 LDR X8, [X19]
	0x03BD10FC MOV X1, X19
	0x03BD1100 MOV X3, X31
	0x03BD1104 MOV X21, X0
	0x03BD1108 LDR X2, [X8 + 0x260]
	0x03BD110C BL 0x2A6B948
	0x03BD1110 CBZ X20, 0x3BD1704
	0x03BD1114 ADRP X23, 0x589000
	0x03BD1118 LDR X8, [X20]
	0x03BD111C LDR X23, [X23 + 0x2F8]
	0x03BD1120 LDRH W9, [X8 + 0x12E]
	0x03BD1124 LDR X1, [X23]
	0x03BD1128 CBZ X9, 0x3BD114C
	0x03BD112C LDR X10, [X8 + 0xB0]
	0x03BD1130 ADD X10, X10, 0x8
	0x03BD1134 LDUR X11, [X10 - 0x8]
	0x03BD1138 CMP X11, X1
	0x03BD113C B.EQ 0x3BD115C
	0x03BD1140 SUBS X9, X9, 0x1
	0x03BD1144 ADD X10, X10, 0x10
	0x03BD1148 B.NE 0x3BD1134
	0x03BD114C MOV X0, X20
	0x03BD1150 MOV W2, W31
	0x03BD1154 BL 0x1C5C788
	0x03BD1158 B 0x3BD1168
	0x03BD115C LDRSW X9, [X10]
	0x03BD1160 ADD X8, X8, X9, 0x4, LSL
	0x03BD1164 ADD X0, X8, 0x138
	0x03BD1168 LDP X8, X2, [X0]
	0x03BD116C MOV X0, X20
	0x03BD1170 MOV X1, X21
	0x03BD1174 BLR X8
	0x03BD1178 ADRP X8, 0x589000
	0x03BD117C LDR X20, [X19 + 0x88]
	0x03BD1180 LDR X8, [X8 + 0xCF0]
	0x03BD1184 LDR X0, [X8]
	0x03BD1188 BL 0x1C16F10
	0x03BD118C LDR X8, [X19]
	0x03BD1190 MOV X1, X19
	0x03BD1194 MOV X3, X31
	0x03BD1198 MOV X21, X0
	0x03BD119C LDR X2, [X8 + 0x270]
	0x03BD11A0 BL 0x2A6B948
	0x03BD11A4 CBZ X20, 0x3BD1704
	0x03BD11A8 LDR X8, [X20]
	0x03BD11AC LDR X1, [X23]
	0x03BD11B0 LDRH W9, [X8 + 0x12E]
	0x03BD11B4 CBZ X9, 0x3BD11D8
	0x03BD11B8 LDR X10, [X8 + 0xB0]
	0x03BD11BC ADD X10, X10, 0x8
	0x03BD11C0 LDUR X11, [X10 - 0x8]
	0x03BD11C4 CMP X11, X1
	0x03BD11C8 B.EQ 0x3BD11E8
	0x03BD11CC SUBS X9, X9, 0x1
	0x03BD11D0 ADD X10, X10, 0x10
	0x03BD11D4 B.NE 0x3BD11C0
	0x03BD11D8 MOVZ W2, 0x2
	0x03BD11DC MOV X0, X20
	0x03BD11E0 BL 0x1C5C788
	0x03BD11E4 B 0x3BD11F8
	0x03BD11E8 LDR W9, [X10]
	0x03BD11EC ADD W9, W9, 0x2
	0x03BD11F0 ADD X8, X8, W9, 0x4, SXTW
	0x03BD11F4 ADD X0, X8, 0x138
	0x03BD11F8 LDP X8, X2, [X0]
	0x03BD11FC MOV X0, X20
	0x03BD1200 MOV X1, X21
	0x03BD1204 BLR X8
	0x03BD1208 LDRB W8, [X19 + 0xB2]
	0x03BD120C CBZ W8, 0x3BD1374
	0x03BD1210 LDR X20, [X19 + 0x90]
	0x03BD1214 CBZ X20, 0x3BD1704
	0x03BD1218 ADRP X23, 0x589000
	0x03BD121C LDR X8, [X20]
	0x03BD1220 LDR X23, [X23 + 0x320]
	0x03BD1224 LDRH W9, [X8 + 0x12E]
	0x03BD1228 LDR X1, [X23]
	0x03BD122C CBZ X9, 0x3BD1250
	0x03BD1230 LDR X10, [X8 + 0xB0]
	0x03BD1234 ADD X10, X10, 0x8
	0x03BD1238 LDUR X11, [X10 - 0x8]
	0x03BD123C CMP X11, X1
	0x03BD1240 B.EQ 0x3BD1260
	0x03BD1244 SUBS X9, X9, 0x1
	0x03BD1248 ADD X10, X10, 0x10
	0x03BD124C B.NE 0x3BD1238
	0x03BD1250 MOV X0, X20
	0x03BD1254 MOV W2, W31
	0x03BD1258 BL 0x1C5C788
	0x03BD125C B 0x3BD126C
	0x03BD1260 LDRSW X9, [X10]
	0x03BD1264 ADD X8, X8, X9, 0x4, LSL
	0x03BD1268 ADD X0, X8, 0x138
	0x03BD126C LDP X8, X1, [X0]
	0x03BD1270 MOV X0, X20
	0x03BD1274 BLR X8
	0x03BD1278 ADRP X8, 0x589000
	0x03BD127C LDR X8, [X8 + 0x190]
	0x03BD1280 MOV X20, X0
	0x03BD1284 LDR X8, [X8]
	0x03BD1288 MOV X0, X8
	0x03BD128C BL 0x1C16F10
	0x03BD1290 LDR X8, [X19]
	0x03BD1294 MOV X1, X19
	0x03BD1298 MOV X3, X31
	0x03BD129C MOV X21, X0
	0x03BD12A0 LDR X2, [X8 + 0x280]
	0x03BD12A4 BL 0x2725C6C
	0x03BD12A8 CBZ X20, 0x3BD1704
	0x03BD12AC ADRP X8, 0x589000
	0x03BD12B0 LDR X8, [X8 + 0x1A8]
	0x03BD12B4 MOV X0, X20
	0x03BD12B8 MOV X1, X21
	0x03BD12BC LDR X2, [X8]
	0x03BD12C0 BL 0x2729B68
	0x03BD12C4 LDR X20, [X19 + 0x90]
	0x03BD12C8 CBZ X20, 0x3BD1704
	0x03BD12CC LDR X8, [X20]
	0x03BD12D0 LDR X1, [X23]
	0x03BD12D4 LDRH W9, [X8 + 0x12E]
	0x03BD12D8 CBZ X9, 0x3BD12FC
	0x03BD12DC LDR X10, [X8 + 0xB0]
	0x03BD12E0 ADD X10, X10, 0x8
	0x03BD12E4 LDUR X11, [X10 - 0x8]
	0x03BD12E8 CMP X11, X1
	0x03BD12EC B.EQ 0x3BD130C
	0x03BD12F0 SUBS X9, X9, 0x1
	0x03BD12F4 ADD X10, X10, 0x10
	0x03BD12F8 B.NE 0x3BD12E4
	0x03BD12FC MOVZ W2, 0x1
	0x03BD1300 MOV X0, X20
	0x03BD1304 BL 0x1C5C788
	0x03BD1308 B 0x3BD131C
	0x03BD130C LDR W9, [X10]
	0x03BD1310 ADD W9, W9, 0x1
	0x03BD1314 ADD X8, X8, W9, 0x4, SXTW
	0x03BD1318 ADD X0, X8, 0x138
	0x03BD131C LDP X8, X1, [X0]
	0x03BD1320 MOV X0, X20
	0x03BD1324 BLR X8
	0x03BD1328 ADRP X8, 0x589000
	0x03BD132C LDR X8, [X8 + 0x198]
	0x03BD1330 MOV X20, X0
	0x03BD1334 LDR X8, [X8]
	0x03BD1338 MOV X0, X8
	0x03BD133C BL 0x1C16F10
	0x03BD1340 LDR X8, [X19]
	0x03BD1344 MOV X1, X19
	0x03BD1348 MOV X3, X31
	0x03BD134C MOV X21, X0
	0x03BD1350 LDR X2, [X8 + 0x290]
	0x03BD1354 BL 0x2725C6C
	0x03BD1358 CBZ X20, 0x3BD1704
	0x03BD135C ADRP X8, 0x589000
	0x03BD1360 LDR X8, [X8 + 0x1A0]
	0x03BD1364 MOV X0, X20
	0x03BD1368 MOV X1, X21
	0x03BD136C LDR X2, [X8]
	0x03BD1370 BL 0x2729B68
	0x03BD1374 LDRB W8, [X19 + 0xB3]
	0x03BD1378 CBZ W8, 0x3BD14E0
	0x03BD137C LDR X20, [X19 + 0x98]
	0x03BD1380 CBZ X20, 0x3BD1704
	0x03BD1384 ADRP X23, 0x589000
	0x03BD1388 LDR X8, [X20]
	0x03BD138C LDR X23, [X23 + 0x328]
	0x03BD1390 LDRH W9, [X8 + 0x12E]
	0x03BD1394 LDR X1, [X23]
	0x03BD1398 CBZ X9, 0x3BD13BC
	0x03BD139C LDR X10, [X8 + 0xB0]
	0x03BD13A0 ADD X10, X10, 0x8
	0x03BD13A4 LDUR X11, [X10 - 0x8]
	0x03BD13A8 CMP X11, X1
	0x03BD13AC B.EQ 0x3BD13CC
	0x03BD13B0 SUBS X9, X9, 0x1
	0x03BD13B4 ADD X10, X10, 0x10
	0x03BD13B8 B.NE 0x3BD13A4
	0x03BD13BC MOV X0, X20
	0x03BD13C0 MOV W2, W31
	0x03BD13C4 BL 0x1C5C788
	0x03BD13C8 B 0x3BD13D8
	0x03BD13CC LDRSW X9, [X10]
	0x03BD13D0 ADD X8, X8, X9, 0x4, LSL
	0x03BD13D4 ADD X0, X8, 0x138
	0x03BD13D8 LDP X8, X1, [X0]
	0x03BD13DC MOV X0, X20
	0x03BD13E0 BLR X8
	0x03BD13E4 ADRP X8, 0x589000
	0x03BD13E8 LDR X8, [X8 + 0x188]
	0x03BD13EC MOV X20, X0
	0x03BD13F0 LDR X8, [X8]
	0x03BD13F4 MOV X0, X8
	0x03BD13F8 BL 0x1C16F10
	0x03BD13FC LDR X8, [X19]
	0x03BD1400 MOV X1, X19
	0x03BD1404 MOV X3, X31
	0x03BD1408 MOV X21, X0
	0x03BD140C LDR X2, [X8 + 0x2A0]
	0x03BD1410 BL 0x2725C6C
	0x03BD1414 CBZ X20, 0x3BD1704
	0x03BD1418 ADRP X8, 0x589000
	0x03BD141C LDR X8, [X8 + 0x1B0]
	0x03BD1420 MOV X0, X20
	0x03BD1424 MOV X1, X21
	0x03BD1428 LDR X2, [X8]
	0x03BD142C BL 0x2729B68
	0x03BD1430 LDR X20, [X19 + 0x98]
	0x03BD1434 CBZ X20, 0x3BD1704
	0x03BD1438 LDR X8, [X20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x813000
	011 Move W8, [X20+3660]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {88}
	017 Move X0, 0x58B000
	018 Move X0, [X0+584]
	019 Call 0x1C17CF4
	020 Move X0, 0x58B000
	021 Move X0, [X0+592]
	022 Call 0x1C17CF4
	023 Move X0, 0x58B000
	024 Move X0, [X0+2912]
	025 Call 0x1C17CF4
	026 Move X0, 0x58B000
	027 Move X0, [X0+304]
	028 Call 0x1C17CF4
	029 Move X0, 0x58B000
	030 Move X0, [X0+328]
	031 Call 0x1C17CF4
	032 Move X0, 0x58B000
	033 Move X0, [X0+2264]
	034 Call 0x1C17CF4
	035 Move X0, 0x58B000
	036 Move X0, [X0+352]
	037 Call 0x1C17CF4
	038 Move X0, 0x58E000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0x58E000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0x58B000
	045 Move X0, [X0+392]
	046 Call 0x1C17CF4
	047 Move X0, 0x58B000
	048 Move X0, [X0+400]
	049 Call 0x1C17CF4
	050 Move X0, 0x58E000
	051 Move X0, [X0+2680]
	052 Call 0x1C17CF4
	053 Move X0, 0x527000
	054 Move X0, [X0+1032]
	055 Call 0x1C17CF4
	056 Move X0, 0x58B000
	057 Move X0, [X0+408]
	058 Call 0x1C17CF4
	059 Move X0, 0x58E000
	060 Move X0, [X0+2688]
	061 Call 0x1C17CF4
	062 Move X0, 0x58B000
	063 Move X0, [X0+496]
	064 Call 0x1C17CF4
	065 Move X0, 0x58B000
	066 Move X0, [X0+504]
	067 Call 0x1C17CF4
	068 Move X0, 0x58E000
	069 Move X0, [X0+2728]
	070 Call 0x1C17CF4
	071 Move X0, 0x58B000
	072 Move X0, [X0+512]
	073 Call 0x1C17CF4
	074 Move X0, 0x58E000
	075 Move X0, [X0+2736]
	076 Call 0x1C17CF4
	077 Move X0, 0x58E000
	078 Move X0, [X0+2744]
	079 Call 0x1C17CF4
	080 Move X0, 0x58B000
	081 Move X0, [X0+520]
	082 Call 0x1C17CF4
	083 Move X0, 0x58E000
	084 Move X0, [X0+2752]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X20+3660], W8
	088 Move X0, [X19+72]
	089 Compare X0, 0
	090 JumpIfEqual {628}
	091 Move X1, X31
	092 Call BindingsGroup.Clear, X0
	093 Move W8, [X19+208]
	094 Compare W8, 0
	095 JumpIfEqual {617}
	096 Move X8, 0x58B000
	097 Move X8, [X8+584]
	098 Move X20, [X19+136]
	099 Move X0, [X8]
	100 Call 0x1C17F10
	101 Move X8, [X19]
	102 Move X1, X19
	103 Move X3, X31
	104 Move X21, X0
	105 Move X2, [X8+560]
	106 Call Action`1<Object>..ctor, X0, X1, X2
	107 Compare X20, 0
	108 JumpIfEqual {628}
	109 Move X22, 0x58B000
	110 Move X8, [X20]
	111 Move X22, [X22+2264]
	112 Move X23, 0x58B000
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X1, [X22]
	115 Move X23, [X23+592]
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move W2, 1
	125 Move X0, X20
	126 Call 0x1C5D788
	127 Move W9, [X10]
	128 Add W9, W9, 1
	129 Add X8, X8, W9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X2, [X0+8]
	133 Move X0, X20
	134 Move X1, X21
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X0, [X23]
	137 Move X20, [X19+136]
	138 Call 0x1C17F10
	139 Move X8, [X19]
	140 Move X1, X19
	141 Move X3, X31
	142 Move X21, X0
	143 Move X2, [X8+576]
	144 Call Action`1<Object>..ctor, X0, X1, X2
	145 Compare X20, 0
	146 JumpIfEqual {628}
	147 Move X8, [X20]
	148 Move X1, [X22]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move W2, 3
	159 Move X0, X20
	160 Call 0x1C5D788
	161 Move W9, [X10]
	162 Add W9, W9, 3
	163 Add X8, X8, W9
	164 Add X0, X8, 312
	165 Move X8, [X0]
	166 Move X2, [X0+8]
	167 Move X0, X20
	168 Move X1, X21
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X20, [X19+144]
	171 Compare X20, 0
	172 JumpIfEqual {343}
	173 Move X22, 0x58B000
	174 Move X8, [X20]
	175 Move X22, [X22+328]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Move X1, [X22]
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X20
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X20
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X23, 0x58B000
	197 Move X23, [X23+400]
	198 Move X20, X0
	199 Move X8, [X23]
	200 Move X0, X8
	201 Call 0x1C17F10
	202 Move X8, [X19]
	203 Move X1, X19
	204 Move X3, X31
	205 Move X21, X0
	206 Move X2, [X8+592]
	207 Call UnityAction`1<Object>..ctor, X0, X1, X2
	208 Compare X20, 0
	209 JumpIfEqual {628}
	210 Move X24, 0x58B000
	211 Move X24, [X24+504]
	212 Move X0, X20
	213 Move X1, X21
	214 Move X2, [X24]
	215 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	216 Move X20, [X19+144]
	217 Compare X20, 0
	218 JumpIfEqual {628}
	219 Move X8, [X20]
	220 Move X1, [X22]
	221 NotImplemented "Instruction LDRH not yet implemented."
	222 Compare X9, 0
	223 JumpIfEqual {230}
	224 Move X10, [X8+176]
	225 Add X10, X10, 8
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Subtract X9, X9, 1
	229 Add X10, X10, 16
	230 Move W2, 1
	231 Move X0, X20
	232 Call 0x1C5D788
	233 Move W9, [X10]
	234 Add W9, W9, 1
	235 Add X8, X8, W9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X20
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X25, 0x58B000
	242 Move X25, [X25+408]
	243 Move X20, X0
	244 Move X8, [X25]
	245 Move X0, X8
	246 Call 0x1C17F10
	247 Move X8, [X19]
	248 Move X1, X19
	249 Move X3, X31
	250 Move X21, X0
	251 Move X2, [X8+608]
	252 Call UnityAction`1<Object>..ctor, X0, X1, X2
	253 Compare X20, 0
	254 JumpIfEqual {628}
	255 Move X26, 0x58B000
	256 Move X26, [X26+520]
	257 Move X0, X20
	258 Move X1, X21
	259 Move X2, [X26]
	260 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	261 Move X20, [X19+144]
	262 Compare X20, 0
	263 JumpIfEqual {628}
	264 Move X8, [X20]
	265 Move X1, [X22]
	266 NotImplemented "Instruction LDRH not yet implemented."
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move W2, 2
	276 Move X0, X20
	277 Call 0x1C5D788
	278 Move W9, [X10]
	279 Add W9, W9, 2
	280 Add X8, X8, W9
	281 Add X0, X8, 312
	282 Move X8, [X0]
	283 Move X1, [X0+8]
	284 Move X0, X20
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move X8, [X23]
	287 Move X20, X0
	288 Move X0, X8
	289 Call 0x1C17F10
	290 Move X8, [X19]
	291 Move X1, X19
	292 Move X3, X31
	293 Move X21, X0
	294 Move X2, [X8+624]
	295 Call UnityAction`1<Object>..ctor, X0, X1, X2
	296 Compare X20, 0
	297 JumpIfEqual {628}
	298 Move X2, [X24]
	299 Move X0, X20
	300 Move X1, X21
	301 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	302 Move X20, [X19+144]
	303 Compare X20, 0
	304 JumpIfEqual {628}
	305 Move X8, [X20]
	306 Move X1, [X22]
	307 NotImplemented "Instruction LDRH not yet implemented."
	308 Compare X9, 0
	309 JumpIfEqual {316}
	310 Move X10, [X8+176]
	311 Add X10, X10, 8
	312 NotImplemented "Instruction LDUR not yet implemented."
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Subtract X9, X9, 1
	315 Add X10, X10, 16
	316 Move W2, 3
	317 Move X0, X20
	318 Call 0x1C5D788
	319 Move W9, [X10]
	320 Add W9, W9, 3
	321 Add X8, X8, W9
	322 Add X0, X8, 312
	323 Move X8, [X0]
	324 Move X1, [X0+8]
	325 Move X0, X20
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Move X8, [X25]
	328 Move X20, X0
	329 Move X0, X8
	330 Call 0x1C17F10
	331 Move X8, [X19]
	332 Move X1, X19
	333 Move X3, X31
	334 Move X21, X0
	335 Move X2, [X8+640]
	336 Call UnityAction`1<Object>..ctor, X0, X1, X2
	337 Compare X20, 0
	338 JumpIfEqual {628}
	339 Move X2, [X26]
	340 Move X0, X20
	341 Move X1, X21
	342 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	343 Move X20, [X19+152]
	344 Compare X20, 0
	345 JumpIfEqual {435}
	346 Move X22, 0x58B000
	347 Move X8, [X20]
	348 Call 0x3EB29BC
	349 Return 
	350 NotImplemented "Instruction LDRH not yet implemented."
	351 Move X1, [X22]
	352 Compare X9, 0
	353 JumpIfEqual {360}
	354 Move X10, [X8+176]
	355 Add X10, X10, 8
	356 NotImplemented "Instruction LDUR not yet implemented."
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Subtract X9, X9, 1
	359 Add X10, X10, 16
	360 Move X0, X20
	361 Move W2, W31
	362 Call 0x1C5D788
	363 NotImplemented "Instruction LDRSW not yet implemented."
	364 Add X8, X8, X9
	365 Add X0, X8, 312
	366 Move X8, [X0]
	367 Move X1, [X0+8]
	368 Move X0, X20
	369 NotImplemented "Instruction BLR not yet implemented."
	370 Move X8, 0x58A000
	371 Move X8, [X8+392]
	372 Move X20, X0
	373 Move X8, [X8]
	374 Move X0, X8
	375 Call 0x1C17F10
	376 Move X8, [X19]
	377 Move X1, X19
	378 Move X3, X31
	379 Move X21, X0
	380 Move X2, [X8+656]
	381 Call UnityAction`1<Object>..ctor, X0, X1, X2
	382 Compare X20, 0
	383 JumpIfEqual {628}
	384 Move X8, 0x58A000
	385 Move X8, [X8+496]
	386 Move X0, X20
	387 Move X1, X21
	388 Move X2, [X8]
	389 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	390 Move X20, [X19+152]
	391 Compare X20, 0
	392 JumpIfEqual {628}
	393 Move X8, [X20]
	394 Move X1, [X22]
	395 NotImplemented "Instruction LDRH not yet implemented."
	396 Compare X9, 0
	397 JumpIfEqual {404}
	398 Move X10, [X8+176]
	399 Add X10, X10, 8
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Subtract X9, X9, 1
	403 Add X10, X10, 16
	404 Move W2, 1
	405 Move X0, X20
	406 Call 0x1C5D788
	407 Move W9, [X10]
	408 Add W9, W9, 1
	409 Add X8, X8, W9
	410 Add X0, X8, 312
	411 Move X8, [X0]
	412 Move X1, [X0+8]
	413 Move X0, X20
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Move X8, 0x526000
	416 Move X8, [X8+1032]
	417 Move X20, X0
	418 Move X8, [X8]
	419 Move X0, X8
	420 Call 0x1C17F10
	421 Move X8, [X19]
	422 Move X1, X19
	423 Move X3, X31
	424 Move X21, X0
	425 Move X2, [X8+672]
	426 Call UnityAction`1<Object>..ctor, X0, X1, X2
	427 Compare X20, 0
	428 JumpIfEqual {628}
	429 Move X8, 0x58A000
	430 Move X8, [X8+512]
	431 Move X0, X20
	432 Move X1, X21
	433 Move X2, [X8]
	434 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	435 Move X20, [X19+160]
	436 Compare X20, 0
	437 JumpIfEqual {526}
	438 Move X22, 0x58A000
	439 Move X8, [X20]
	440 Move X22, [X22+304]
	441 NotImplemented "Instruction LDRH not yet implemented."
	442 Move X1, [X22]
	443 Compare X9, 0
	444 JumpIfEqual {451}
	445 Move X10, [X8+176]
	446 Add X10, X10, 8
	447 NotImplemented "Instruction LDUR not yet implemented."
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Subtract X9, X9, 1
	450 Add X10, X10, 16
	451 Move X0, X20
	452 Move W2, W31
	453 Call 0x1C5D788
	454 NotImplemented "Instruction LDRSW not yet implemented."
	455 Add X8, X8, X9
	456 Add X0, X8, 312
	457 Move X8, [X0]
	458 Move X1, [X0+8]
	459 Move X0, X20
	460 NotImplemented "Instruction BLR not yet implemented."
	461 Move X8, 0x58D000
	462 Move X8, [X8+2672]
	463 Move X20, X0
	464 Move X8, [X8]
	465 Move X0, X8
	466 Call 0x1C17F10
	467 Move X8, [X19]
	468 Move X1, X19
	469 Move X3, X31
	470 Move X21, X0
	471 Move X2, [X8+688]
	472 Call UnityAction`1<Object>..ctor, X0, X1, X2
	473 Compare X20, 0
	474 JumpIfEqual {628}
	475 Move X8, 0x58D000
	476 Move X8, [X8+2752]
	477 Move X0, X20
	478 Move X1, X21
	479 Move X2, [X8]
	480 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	481 Move X20, [X19+160]
	482 Compare X20, 0
	483 JumpIfEqual {628}
	484 Move X8, [X20]
	485 Move X1, [X22]
	486 NotImplemented "Instruction LDRH not yet implemented."
	487 Compare X9, 0
	488 JumpIfEqual {495}
	489 Move X10, [X8+176]
	490 Add X10, X10, 8
	491 NotImplemented "Instruction LDUR not yet implemented."
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Subtract X9, X9, 1
	494 Add X10, X10, 16
	495 Move W2, 1
	496 Move X0, X20
	497 Call 0x1C5D788
	498 Move W9, [X10]
	499 Add W9, W9, 1
	500 Add X8, X8, W9
	501 Add X0, X8, 312
	502 Move X8, [X0]
	503 Move X1, [X0+8]
	504 Move X0, X20
	505 NotImplemented "Instruction BLR not yet implemented."
	506 Move X8, 0x58D000
	507 Move X8, [X8+2680]
	508 Move X20, X0
	509 Move X8, [X8]
	510 Move X0, X8
	511 Call 0x1C17F10
	512 Move X8, [X19]
	513 Move X1, X19
	514 Move X3, X31
	515 Move X21, X0
	516 Move X2, [X8+704]
	517 Call UnityAction`1<Object>..ctor, X0, X1, X2
	518 Compare X20, 0
	519 JumpIfEqual {628}
	520 Move X8, 0x58D000
	521 Move X8, [X8+2728]
	522 Move X0, X20
	523 Move X1, X21
	524 Move X2, [X8]
	525 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	526 Move X20, [X19+168]
	527 Compare X20, 0
	528 JumpIfEqual {617}
	529 Move X22, 0x58A000
	530 Move X8, [X20]
	531 Move X22, [X22+2912]
	532 NotImplemented "Instruction LDRH not yet implemented."
	533 Move X1, [X22]
	534 Compare X9, 0
	535 JumpIfEqual {542}
	536 Move X10, [X8+176]
	537 Add X10, X10, 8
	538 NotImplemented "Instruction LDUR not yet implemented."
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Subtract X9, X9, 1
	541 Add X10, X10, 16
	542 Move X0, X20
	543 Move W2, W31
	544 Call 0x1C5D788
	545 NotImplemented "Instruction LDRSW not yet implemented."
	546 Add X8, X8, X9
	547 Add X0, X8, 312
	548 Move X8, [X0]
	549 Move X1, [X0+8]
	550 Move X0, X20
	551 NotImplemented "Instruction BLR not yet implemented."
	552 Move X8, 0x58D000
	553 Move X8, [X8+2688]
	554 Move X20, X0
	555 Move X8, [X8]
	556 Move X0, X8
	557 Call 0x1C17F10
	558 Move X8, [X19]
	559 Move X1, X19
	560 Move X3, X31
	561 Move X21, X0
	562 Move X2, [X8+720]
	563 Call UnityAction`1<Object>..ctor, X0, X1, X2
	564 Compare X20, 0
	565 JumpIfEqual {628}
	566 Move X8, 0x58D000
	567 Move X8, [X8+2736]
	568 Move X0, X20
	569 Move X1, X21
	570 Move X2, [X8]
	571 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	572 Move X20, [X19+168]
	573 Compare X20, 0
	574 JumpIfEqual {628}
	575 Move X8, [X20]
	576 Move X1, [X22]
	577 NotImplemented "Instruction LDRH not yet implemented."
	578 Compare X9, 0
	579 JumpIfEqual {586}
	580 Move X10, [X8+176]
	581 Add X10, X10, 8
	582 NotImplemented "Instruction LDUR not yet implemented."
	583 NotImplemented "Instruction CMP not yet implemented."
	584 Subtract X9, X9, 1
	585 Add X10, X10, 16
	586 Move W2, 1
	587 Move X0, X20
	588 Call 0x1C5D788
	589 Move W9, [X10]
	590 Add W9, W9, 1
	591 Add X8, X8, W9
	592 Add X0, X8, 312
	593 Move X8, [X0]
	594 Move X1, [X0+8]
	595 Move X0, X20
	596 NotImplemented "Instruction BLR not yet implemented."
	597 Move X8, 0x58D000
	598 Move X8, [X8+2664]
	599 Move X20, X0
	600 Move X8, [X8]
	601 Move X0, X8
	602 Call 0x1C17F10
	603 Move X8, [X19]
	604 Move X1, X19
	605 Move X3, X31
	606 Move X21, X0
	607 Move X2, [X8+736]
	608 Call UnityAction`1<Object>..ctor, X0, X1, X2
	609 Compare X20, 0
	610 JumpIfEqual {628}
	611 Move X8, 0x58D000
	612 Move X8, [X8+2744]
	613 Move X0, X20
	614 Move X1, X21
	615 Move X2, [X8]
	616 Call UnityEvent`1<Object>.RemoveListener, X0, X1
	617 Move [X19+208], W31
	618 Move X20, [X31+64]
	619 Move X19, [X31+72]
	620 Move X22, [X31+48]
	621 Move X21, [X31+56]
	622 Move X24, [X31+32]
	623 Move X23, [X31+40]
	624 Move X26, [X31+16]
	625 Move X25, [X31+24]
	626 Move X30, [X31+80]
	627 Return 
	628 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03BD143C LDR X1, [X23]
	0x03BD1440 LDRH W9, [X8 + 0x12E]
	0x03BD1444 CBZ X9, 0x3BD1468
	0x03BD1448 LDR X10, [X8 + 0xB0]
	0x03BD144C ADD X10, X10, 0x8
	0x03BD1450 LDUR X11, [X10 - 0x8]
	0x03BD1454 CMP X11, X1
	0x03BD1458 B.EQ 0x3BD1478
	0x03BD145C SUBS X9, X9, 0x1
	0x03BD1460 ADD X10, X10, 0x10
	0x03BD1464 B.NE 0x3BD1450
	0x03BD1468 MOVZ W2, 0x1
	0x03BD146C MOV X0, X20
	0x03BD1470 BL 0x1C5C788
	0x03BD1474 B 0x3BD1488
	0x03BD1478 LDR W9, [X10]
	0x03BD147C ADD W9, W9, 0x1
	0x03BD1480 ADD X8, X8, W9, 0x4, SXTW
	0x03BD1484 ADD X0, X8, 0x138
	0x03BD1488 LDP X8, X1, [X0]
	0x03BD148C MOV X0, X20
	0x03BD1490 BLR X8
	0x03BD1494 ADRP X8, 0x525000
	0x03BD1498 LDR X8, [X8 + 0x408]
	0x03BD149C MOV X20, X0
	0x03BD14A0 LDR X8, [X8]
	0x03BD14A4 MOV X0, X8
	0x03BD14A8 BL 0x1C16F10
	0x03BD14AC LDR X8, [X19]
	0x03BD14B0 MOV X1, X19
	0x03BD14B4 MOV X3, X31
	0x03BD14B8 MOV X21, X0
	0x03BD14BC LDR X2, [X8 + 0x2B0]
	0x03BD14C0 BL 0x2725C6C
	0x03BD14C4 CBZ X20, 0x3BD1704
	0x03BD14C8 ADRP X8, 0x525000
	0x03BD14CC LDR X8, [X8 + 0x410]
	0x03BD14D0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x812000
	006 Move X20, 0x54D000
	007 Move W8, [X21+3661]
	008 Move X20, [X20+1352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x54D000
	015 Move X0, [X0+1352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3661], W8
	019 Move W8, 257
	020 Move W9, 1
	021 Move W10, 0x3E800000
	022 Move S0, W31
	023 Move S1, W31
	024 Move S2, 1
	025 Move S3, 1
	026 Move X0, X31
	027 NotImplemented "Instruction STURH not yet implemented."
	028 Move [X19+112], W9
	029 Move [X19+120], W10
	030 Call AnimationCurve.EaseInOut, V0, V1, V2, V3
	031 Move X8, [X20]
	032 Move X20, X0
	033 Move X0, X8
	034 Call 0x1C17F10
	035 Move X1, X20
	036 Move X2, X31
	037 Move X21, X0
	038 Call AnimationCurveDatumProperty..ctor, X0, X1
	039 Move [X19+128], X21
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call BaseAffordanceStateProvider..ctor, X0
	046 Return 

Method: System.Void <SelectedClickBehavior>b__86_0()

Disassembly:
	0x03BD14D4 MOV X1, X21
	0x03BD14D8 LDR X2, [X8]

ISIL:
	001 Move [X0+184], X31
	002 Return 

Method: System.Void <ActivatedClickBehavior>b__87_0()

Disassembly:
	0x03BD14DC BL 0x2729B68
	0x03BD14E0 LDRB W8, [X19 + 0xB4]

ISIL:
	001 Move [X0+192], X31
	002 Return 

