Type: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.ColorTweenJob

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<UnityEngine.Color> get_jobData()

Disassembly:
	0x03BD81D4 LDR X0, [X0 + 0x90]
	0x03BD81D8 BL 0x1C16CF4
	0x03BD81DC ADRP X0, 0x584000
	0x03BD81E0 LDR X0, [X0 + 0x100]

ISIL:
	001 Move X1, X0
	002 Move W2, 120
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_jobData(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<UnityEngine.Color> value)

Disassembly:
	0x03BD81E4 BL 0x1C16CF4
	0x03BD81E8 ADRP X0, 0x584000
	0x03BD81EC LDR X0, [X0 + 0xA8]
	0x03BD81F0 BL 0x1C16CF4
	0x03BD81F4 ADRP X0, 0x584000

ISIL:
	001 Move [X31-16], X30
	002 Move W2, 120
	003 Call 0x3EB2B30
	004 Move X30, [X31+16]
	005 Return 

Method: System.Byte get_colorBlendMode()

Disassembly:
	0x03BD81F8 LDR X0, [X0 + 0xB0]
	0x03BD81FC BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_colorBlendMode(System.Byte value)

Disassembly:
	0x03BD8200 ADRP X0, 0x584000
	0x03BD8204 LDR X0, [X0 + 0x680]

ISIL:
	001 Move [X0+120], W1
	002 Return 

Method: System.Single get_colorBlendAmount()

Disassembly:
	0x03BD8208 BL 0x1C16CF4
	0x03BD820C ADRP X0, 0x584000

ISIL:
	001 Move V0, [X0+124]
	002 Return V0

Method: System.Void set_colorBlendAmount(System.Single value)

Disassembly:
	0x03BD8210 LDR X0, [X0 + 0x698]
	0x03BD8214 BL 0x1C16CF4

ISIL:
	001 Move [X0+124], S0
	002 Return 

Method: System.Void Execute()

Disassembly:
	0x03BD8218 ADRP X0, 0x584000
	0x03BD821C LDR X0, [X0 + 0x678]
	0x03BD8220 BL 0x1C16CF4
	0x03BD8224 ADRP X0, 0x584000
	0x03BD8228 LDR X0, [X0 + 0xF0]
	0x03BD822C BL 0x1C16CF4
	0x03BD8230 ADRP X0, 0x584000
	0x03BD8234 LDR X0, [X0 + 0xF8]
	0x03BD8238 BL 0x1C16CF4
	0x03BD823C ADRP X0, 0x585000
	0x03BD8240 LDR X0, [X0 + 0x3A8]
	0x03BD8244 BL 0x1C16CF4
	0x03BD8248 ADRP X0, 0x585000
	0x03BD824C LDR X0, [X0 + 0x398]
	0x03BD8250 BL 0x1C16CF4
	0x03BD8254 ADRP X0, 0x585000
	0x03BD8258 LDR X0, [X0 + 0x390]
	0x03BD825C BL 0x1C16CF4
	0x03BD8260 ADRP X0, 0x582000
	0x03BD8264 LDR X0, [X0 + 0x760]
	0x03BD8268 BL 0x1C16CF4
	0x03BD826C MOVZ W8, 0x1
	0x03BD8270 STRB W8, [X20 + 0xEA6]
	0x03BD8274 LDR X0, [X19]
	0x03BD8278 ADRP X20, 0x582000
	0x03BD827C LDR W8, [X0 + 0xE0]
	0x03BD8280 LDR X20, [X20 + 0x760]
	0x03BD8284 CBNZ W8, 0x3BD828C
	0x03BD8288 BL 0x1C16DFC
	0x03BD828C ADRP X19, 0x582000
	0x03BD8290 LDR X19, [X19 + 0xA18]
	0x03BD8294 MOV X0, X31
	0x03BD8298 BL 0x3B46084
	0x03BD829C LDR X0, [X20]
	0x03BD82A0 LDR W8, [X0 + 0xE0]
	0x03BD82A4 CBNZ W8, 0x3BD82AC
	0x03BD82A8 BL 0x1C16DFC
	0x03BD82AC ADRP X20, 0x582000
	0x03BD82B0 LDR X20, [X20 + 0xA28]
	0x03BD82B4 MOV X0, X31
	0x03BD82B8 BL 0x3B4659C
	0x03BD82BC LDR X0, [X19]
	0x03BD82C0 LDR W8, [X0 + 0xE0]
	0x03BD82C4 CBNZ W8, 0x3BD82CC
	0x03BD82C8 BL 0x1C16DFC
	0x03BD82CC ADRP X19, 0x582000
	0x03BD82D0 LDR X19, [X19 + 0xA68]
	0x03BD82D4 MOV X0, X31
	0x03BD82D8 BL 0x3B4CC60
	0x03BD82DC LDR X0, [X20]
	0x03BD82E0 LDR W8, [X0 + 0xE0]
	0x03BD82E4 CBNZ W8, 0x3BD82EC
	0x03BD82E8 BL 0x1C16DFC
	0x03BD82EC ADRP X20, 0x583000
	0x03BD82F0 LDR X20, [X20 + 0x530]
	0x03BD82F4 MOV X0, X31
	0x03BD82F8 BL 0x3B4D100
	0x03BD82FC LDR X0, [X19]
	0x03BD8300 LDR W8, [X0 + 0xE0]
	0x03BD8304 CBNZ W8, 0x3BD830C
	0x03BD8308 BL 0x1C16DFC
	0x03BD830C ADRP X19, 0x584000
	0x03BD8310 LDR X19, [X19 + 0x88]
	0x03BD8314 MOV X0, X31
	0x03BD8318 BL 0x3B4D540
	0x03BD831C LDR X0, [X20]
	0x03BD8320 LDR W8, [X0 + 0xE0]
	0x03BD8324 CBNZ W8, 0x3BD832C
	0x03BD8328 BL 0x1C16DFC
	0x03BD832C ADRP X20, 0x584000
	0x03BD8330 LDR X20, [X20 + 0x90]
	0x03BD8334 MOV X0, X31
	0x03BD8338 BL 0x3B6B540
	0x03BD833C LDR X0, [X19]
	0x03BD8340 LDR W8, [X0 + 0xE0]
	0x03BD8344 CBNZ W8, 0x3BD834C
	0x03BD8348 BL 0x1C16DFC
	0x03BD834C ADRP X19, 0x584000
	0x03BD8350 LDR X19, [X19 + 0x98]
	0x03BD8354 MOV X0, X31
	0x03BD8358 BL 0x3B88BA8
	0x03BD835C LDR X0, [X20]
	0x03BD8360 LDR W8, [X0 + 0xE0]
	0x03BD8364 CBNZ W8, 0x3BD836C
	0x03BD8368 BL 0x1C16DFC
	0x03BD836C ADRP X20, 0x584000
	0x03BD8370 LDR X20, [X20 + 0xA0]
	0x03BD8374 MOV X0, X31
	0x03BD8378 BL 0x3B88F54
	0x03BD837C LDR X0, [X19]
	0x03BD8380 LDR W8, [X0 + 0xE0]
	0x03BD8384 CBNZ W8, 0x3BD838C
	0x03BD8388 BL 0x1C16DFC
	0x03BD838C ADRP X19, 0x584000
	0x03BD8390 LDR X19, [X19 + 0xA8]
	0x03BD8394 MOV X0, X31
	0x03BD8398 BL 0x3B89314
	0x03BD839C LDR X0, [X20]
	0x03BD83A0 LDR W8, [X0 + 0xE0]
	0x03BD83A4 CBNZ W8, 0x3BD83AC
	0x03BD83A8 BL 0x1C16DFC
	0x03BD83AC ADRP X20, 0x584000
	0x03BD83B0 LDR X20, [X20 + 0xB0]
	0x03BD83B4 MOV X0, X31
	0x03BD83B8 BL 0x3B896D4
	0x03BD83BC LDR X0, [X19]
	0x03BD83C0 LDR W8, [X0 + 0xE0]
	0x03BD83C4 CBNZ W8, 0x3BD83CC
	0x03BD83C8 BL 0x1C16DFC
	0x03BD83CC ADRP X19, 0x584000
	0x03BD83D0 LDR X19, [X19 + 0xB8]
	0x03BD83D4 MOV X0, X31
	0x03BD83D8 BL 0x3B89A80
	0x03BD83DC LDR X0, [X20]
	0x03BD83E0 LDR W8, [X0 + 0xE0]
	0x03BD83E4 CBNZ W8, 0x3BD83EC
	0x03BD83E8 BL 0x1C16DFC
	0x03BD83EC ADRP X20, 0x584000
	0x03BD83F0 LDR X20, [X20 + 0xC0]
	0x03BD83F4 MOV X0, X31
	0x03BD83F8 BL 0x3B89E2C
	0x03BD83FC LDR X0, [X19]
	0x03BD8400 LDR W8, [X0 + 0xE0]
	0x03BD8404 CBNZ W8, 0x3BD840C
	0x03BD8408 BL 0x1C16DFC
	0x03BD840C ADRP X19, 0x584000
	0x03BD8410 LDR X19, [X19 + 0xC8]
	0x03BD8414 MOV X0, X31
	0x03BD8418 BL 0x3B8A1EC
	0x03BD841C LDR X0, [X20]
	0x03BD8420 LDR W8, [X0 + 0xE0]
	0x03BD8424 CBNZ W8, 0x3BD842C
	0x03BD8428 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+384], D15
	003 Move [X31+392], D14
	004 Move [X31+400], D13
	005 Move [X31+408], D12
	006 Move [X31+416], D11
	007 Move [X31+424], D10
	008 Move [X31+432], D9
	009 Move [X31+440], D8
	010 Move [X31+448], X29
	011 Move [X31+456], X30
	012 Move [X31+464], X22
	013 Move [X31+472], X21
	014 Move [X31+480], X20
	015 Move [X31+488], X19
	016 Move X22, 0x80B000
	017 Move X21, 0x586000
	018 Move W8, [X22+3745]
	019 Move X21, [X21+3352]
	020 Move X19, X0
	021 Add X20, X31, 128
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x586000
	027 Move X0, [X0+3352]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3745], W8
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Add X8, X31, 8
	033 Move X0, X19
	034 Move X1, X31
	035 Move [X31+368], X31
	036 Move [X31+240], X31
	037 Move [X20+208], V0
	038 Move [X20+216], V0
	039 Move [X20+176], V0
	040 Move [X20+184], V0
	041 Move [X20+144], V0
	042 Move [X20+152], V0
	043 Move [X20+8], V0
	044 Move [X20+80], V0
	045 Move [X20+88], V0
	046 Move [X20+48], V0
	047 Move [X20+56], V0
	048 Move [X20+16], V0
	049 Move [X20+24], V0
	050 Move [X31+8], V0
	051 Call 0x3BD9854
	052 Add X0, X31, 256
	053 Add X1, X31, 8
	054 Move W2, 120
	055 Add X20, X31, 256
	056 Call 0x3EB2AC0
	057 Add X8, X31, 8
	058 Move X0, X19
	059 Move X1, X31
	060 Add X20, X20, 56
	061 Call 0x3BD9854
	062 Add X0, X31, 128
	063 Add X1, X31, 8
	064 Move W2, 120
	065 Call 0x3EB2AC0
	066 Move X1, [X21]
	067 Add X0, X31, 128
	068 Call 0x27098C4, X0
	069 Move X0, X20
	070 Move X1, X31
	071 Call NativeCurve.Evaluate, X0, V0
	072 Add X8, X31, 8
	073 Move X0, X19
	074 Move X1, X31
	075 Move V8, V0
	076 Call 0x3BD9854
	077 Move S9, [X31+24]
	078 Move S10, [X31+28]
	079 Move S11, [X31+32]
	080 Move S12, [X31+36]
	081 Add X8, X31, 8
	082 Move X0, X19
	083 Move X1, X31
	084 Call 0x3BD9854
	085 Move S4, [X31+40]
	086 Move S5, [X31+44]
	087 Move S6, [X31+48]
	088 Move S7, [X31+52]
	089 Move X0, X19
	090 Move V0, V9
	091 Move V1, V10
	092 Move V2, V11
	093 Move V3, V12
	094 Move [X31], S8
	095 Call ColorTweenJob.Lerp, X0, X1, X2, V0
	096 Add X8, X31, 8
	097 Move X0, X19
	098 Move X1, X31
	099 Move V8, V0
	100 Move V9, V1
	101 Move V10, V2
	102 Move V11, V3
	103 Call 0x3BD9854
	104 Move S0, [X31+8]
	105 Move S1, [X31+12]
	106 Move S2, [X31+16]
	107 Move S3, [X31+20]
	108 Move X0, X19
	109 Move V4, V8
	110 Move V5, V9
	111 Move V6, V10
	112 Move V7, V11
	113 Call ColorTweenJob.ProcessTargetAffordanceValue, X0, X1, X2
	114 Add X8, X31, 8
	115 Move X0, X19
	116 Move X1, X31
	117 Move V8, V0
	118 Move V9, V1
	119 Move V10, V2
	120 Move V11, V3
	121 Call 0x3BD9854
	122 Move X20, [X31+112]
	123 Add X8, X31, 8
	124 Move X0, X19
	125 Move X1, X31
	126 Call 0x3BD9854
	127 Move S12, [X31+88]
	128 Move S13, [X31+92]
	129 Move S14, [X31+96]
	130 Move S15, [X31+100]
	131 Add X8, X31, 8
	132 Move X0, X19
	133 Move X1, X31
	134 Call 0x3BD9854
	135 Move V0, [X31+104]
	136 Move X0, X19
	137 Move V1, V13
	138 Move V2, V14
	139 Move [X31], S0
	140 Move V0, V12
	141 Move V3, V15
	142 Move V4, V8
	143 Move V5, V9
	144 Move V6, V10
	145 Move V7, V11
	146 Call ColorTweenJob.Lerp, X0, X1, X2, V0
	147 Move [X20], S0
	148 Move [X20+8], S1
	149 Move [X20+8], S2
	150 Move [X20+16], S3
	151 Move X20, [X31+480]
	152 Move X19, [X31+488]
	153 Move X22, [X31+464]
	154 Move X21, [X31+472]
	155 Move X29, [X31+448]
	156 Move X30, [X31+456]
	157 Move D9, [X31+432]
	158 Move D8, [X31+440]
	159 Move D11, [X31+416]
	160 Move D10, [X31+424]
	161 Move D13, [X31+400]
	162 Move D12, [X31+408]
	163 Move D15, [X31+384]
	164 Move D14, [X31+392]
	165 Add X31, X31, 496
	166 Return 

Method: UnityEngine.Color ProcessTargetAffordanceValue(UnityEngine.Color initialValue, UnityEngine.Color newValue)

Disassembly:
	0x03BD8520 LDR W8, [X0 + 0xE0]
	0x03BD8524 CBNZ W8, 0x3BD852C
	0x03BD8528 BL 0x1C16DFC
	0x03BD852C ADRP X20, 0x584000
	0x03BD8530 LDR X20, [X20 + 0x290]
	0x03BD8534 MOV X0, X31
	0x03BD8538 BL 0x3B8C3B8
	0x03BD853C LDR X0, [X19]
	0x03BD8540 LDR W8, [X0 + 0xE0]
	0x03BD8544 CBNZ W8, 0x3BD854C
	0x03BD8548 BL 0x1C16DFC
	0x03BD854C ADRP X19, 0x584000
	0x03BD8550 LDR X19, [X19 + 0x298]
	0x03BD8554 MOV X0, X31
	0x03BD8558 BL 0x3B8CF74
	0x03BD855C LDR X0, [X20]
	0x03BD8560 LDR W8, [X0 + 0xE0]
	0x03BD8564 CBNZ W8, 0x3BD856C
	0x03BD8568 BL 0x1C16DFC
	0x03BD856C ADRP X20, 0x584000
	0x03BD8570 LDR X20, [X20 + 0x5A0]
	0x03BD8574 MOV X0, X31
	0x03BD8578 BL 0x3B8D38C
	0x03BD857C LDR X0, [X19]
	0x03BD8580 LDR W8, [X0 + 0xE0]
	0x03BD8584 CBNZ W8, 0x3BD858C
	0x03BD8588 BL 0x1C16DFC
	0x03BD858C ADRP X19, 0x584000
	0x03BD8590 LDR X19, [X19 + 0x5F8]
	0x03BD8594 MOV X0, X31
	0x03BD8598 BL 0x3B8D76C
	0x03BD859C LDR X0, [X20]
	0x03BD85A0 LDR W8, [X0 + 0xE0]
	0x03BD85A4 CBNZ W8, 0x3BD85AC
	0x03BD85A8 BL 0x1C16DFC
	0x03BD85AC ADRP X20, 0x584000
	0x03BD85B0 LDR X20, [X20 + 0x5D0]
	0x03BD85B4 MOV X0, X31
	0x03BD85B8 BL 0x3B920F8
	0x03BD85BC LDR X0, [X19]
	0x03BD85C0 LDR W8, [X0 + 0xE0]
	0x03BD85C4 CBNZ W8, 0x3BD85CC
	0x03BD85C8 BL 0x1C16DFC
	0x03BD85CC ADRP X19, 0x584000
	0x03BD85D0 LDR X19, [X19 + 0x678]
	0x03BD85D4 MOV X0, X31
	0x03BD85D8 BL 0x3B92DA8
	0x03BD85DC LDR X0, [X20]
	0x03BD85E0 LDR W8, [X0 + 0xE0]
	0x03BD85E4 CBNZ W8, 0x3BD85EC
	0x03BD85E8 BL 0x1C16DFC
	0x03BD85EC ADRP X20, 0x584000
	0x03BD85F0 LDR X20, [X20 + 0x680]
	0x03BD85F4 MOV X0, X31
	0x03BD85F8 BL 0x3B931CC
	0x03BD85FC LDR X0, [X19]
	0x03BD8600 LDR W8, [X0 + 0xE0]
	0x03BD8604 CBNZ W8, 0x3BD860C
	0x03BD8608 BL 0x1C16DFC
	0x03BD860C ADRP X19, 0x584000
	0x03BD8610 LDR X19, [X19 + 0x688]
	0x03BD8614 MOV X0, X31
	0x03BD8618 BL 0x3B94B24

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X19
	012 Move X1, X31
	013 Move V8, V7
	014 Move V9, V6
	015 Move V10, V5
	016 Move V11, V4
	017 Move V12, V3
	018 Move V13, V2
	019 Move V14, V1
	020 Move V15, V0
	021 Move X19, X0
	022 Call 0x3BD9864
	023 And W8, W0, 255
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X19
	027 Move X1, X31
	028 Call 0x3BD986C
	029 Multiply S1, S11, S0
	030 Multiply S2, S10, S0
	031 Multiply S3, S9, S0
	032 Multiply S0, S8, S0
	033 Add S11, S15, S1
	034 Add S10, S14, S2
	035 Add S9, S13, S3
	036 Add S8, S12, S0
	037 Move X0, X19
	038 Move X1, X31
	039 Call 0x3BD986C
	040 Move [X31], S0
	041 Move X0, X19
	042 Move V0, V15
	043 Move V1, V14
	044 Move V2, V13
	045 Move V3, V12
	046 Move V4, V11
	047 Move V5, V10
	048 Move V6, V9
	049 Move V7, V8
	050 Call ColorTweenJob.Lerp, X0, X1, X2, V0
	051 Move V11, V0
	052 Move V10, V1
	053 Move V9, V2
	054 Move V8, V3
	055 Move V0, V11
	056 Move V1, V10
	057 Move V2, V9
	058 Move V3, V8
	059 Move X30, [X31+80]
	060 Move X19, [X31+88]
	061 Move D9, [X31+64]
	062 Move D8, [X31+72]
	063 Move D11, [X31+48]
	064 Move D10, [X31+56]
	065 Move D13, [X31+32]
	066 Move D12, [X31+40]
	067 Move D15, [X31+16]
	068 Move D14, [X31+24]
	069 Add X31, X31, 96
	070 Return X0

Method: UnityEngine.Color Lerp(UnityEngine.Color from, UnityEngine.Color to, System.Single t)

Disassembly:
	0x03BD842C ADRP X20, 0x584000
	0x03BD8430 LDR X20, [X20 + 0xD0]
	0x03BD8434 MOV X0, X31
	0x03BD8438 BL 0x3B8A5AC
	0x03BD843C LDR X0, [X19]
	0x03BD8440 LDR W8, [X0 + 0xE0]
	0x03BD8444 CBNZ W8, 0x3BD844C
	0x03BD8448 BL 0x1C16DFC
	0x03BD844C ADRP X19, 0x584000
	0x03BD8450 LDR X19, [X19 + 0xD8]
	0x03BD8454 MOV X0, X31
	0x03BD8458 BL 0x3B8A96C
	0x03BD845C LDR X0, [X20]
	0x03BD8460 LDR W8, [X0 + 0xE0]
	0x03BD8464 CBNZ W8, 0x3BD846C
	0x03BD8468 BL 0x1C16DFC
	0x03BD846C ADRP X20, 0x584000
	0x03BD8470 LDR X20, [X20 + 0xE0]
	0x03BD8474 MOV X0, X31
	0x03BD8478 BL 0x3B8AD48
	0x03BD847C LDR X0, [X19]
	0x03BD8480 LDR W8, [X0 + 0xE0]
	0x03BD8484 CBNZ W8, 0x3BD848C
	0x03BD8488 BL 0x1C16DFC
	0x03BD848C ADRP X19, 0x584000
	0x03BD8490 LDR X19, [X19 + 0xE8]
	0x03BD8494 MOV X0, X31
	0x03BD8498 BL 0x3B8B124
	0x03BD849C LDR X0, [X20]
	0x03BD84A0 LDR W8, [X0 + 0xE0]
	0x03BD84A4 CBNZ W8, 0x3BD84AC
	0x03BD84A8 BL 0x1C16DFC
	0x03BD84AC ADRP X20, 0x584000
	0x03BD84B0 LDR X20, [X20 + 0xF0]
	0x03BD84B4 MOV X0, X31
	0x03BD84B8 BL 0x3B8B4FC
	0x03BD84BC LDR X0, [X19]
	0x03BD84C0 LDR W8, [X0 + 0xE0]
	0x03BD84C4 CBNZ W8, 0x3BD84CC
	0x03BD84C8 BL 0x1C16DFC
	0x03BD84CC ADRP X19, 0x584000
	0x03BD84D0 LDR X19, [X19 + 0xF8]
	0x03BD84D4 MOV X0, X31
	0x03BD84D8 BL 0x3B8B8D4
	0x03BD84DC LDR X0, [X20]
	0x03BD84E0 LDR W8, [X0 + 0xE0]
	0x03BD84E4 CBNZ W8, 0x3BD84EC
	0x03BD84E8 BL 0x1C16DFC
	0x03BD84EC ADRP X20, 0x584000
	0x03BD84F0 LDR X20, [X20 + 0x100]
	0x03BD84F4 MOV X0, X31
	0x03BD84F8 BL 0x3B8BC80
	0x03BD84FC LDR X0, [X19]
	0x03BD8500 LDR W8, [X0 + 0xE0]
	0x03BD8504 CBNZ W8, 0x3BD850C
	0x03BD8508 BL 0x1C16DFC
	0x03BD850C ADRP X19, 0x584000
	0x03BD8510 LDR X19, [X19 + 0x288]
	0x03BD8514 MOV X0, X31
	0x03BD8518 BL 0x3B8C02C
	0x03BD851C LDR X0, [X20]

ISIL:
	001 Move [X31-80], D15
	002 Move [X31-72], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move V8, V7
	011 Move V9, V6
	012 Move V10, V5
	013 Move V11, V4
	014 Move V12, V3
	015 Move V13, V2
	016 Move V14, V1
	017 Move V15, V0
	018 Call ColorTweenJob.IsNearlyEqual, X0, X1, X2
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {59}
	023 Move [X31+76], S8
	024 Move V8, [X31+80]
	025 Move V0, V15
	026 Move V1, V14
	027 Move V2, V13
	028 Move V3, V12
	029 Move X0, X31
	030 Call float4.op_Implicit, X0
	031 Move V15, V3
	032 Move V3, [X31+76]
	033 Move V12, V0
	034 Move V13, V1
	035 Move V14, V2
	036 Move V0, V11
	037 Move V1, V10
	038 Move V2, V9
	039 Move X0, X31
	040 Call float4.op_Implicit, X0
	041 Subtract S0, S0, S12
	042 Subtract S1, S1, S13
	043 Subtract S2, S2, S14
	044 Subtract S3, S3, S15
	045 Multiply S0, S0, S8
	046 Multiply S1, S1, S8
	047 Multiply S2, S2, S8
	048 Multiply S3, S3, S8
	049 Add S0, S12, S0
	050 Add S1, S13, S1
	051 Add S2, S14, S2
	052 Add S3, S15, S3
	053 Move X0, X31
	054 Call float4.op_Implicit, X0
	055 Move V11, V0
	056 Move V10, V1
	057 Move V9, V2
	058 Move V8, V3
	059 Move V0, V11
	060 Move V1, V10
	061 Move V2, V9
	062 Move V3, V8
	063 Move X30, [X31+64]
	064 Move D9, [X31+48]
	065 Move D8, [X31+56]
	066 Move D11, [X31+32]
	067 Move D10, [X31+40]
	068 Move D13, [X31+16]
	069 Move D12, [X31+24]
	070 Move D15, [X31+80]
	071 Move D14, [X31+88]
	072 Return X0

Method: System.Boolean IsNearlyEqual(UnityEngine.Color from, UnityEngine.Color to)

Disassembly:
	0x03BD861C LDR X0, [X20]
	0x03BD8620 LDR W8, [X0 + 0xE0]
	0x03BD8624 CBNZ W8, 0x3BD862C
	0x03BD8628 BL 0x1C16DFC
	0x03BD862C ADRP X20, 0x584000
	0x03BD8630 LDR X20, [X20 + 0x690]
	0x03BD8634 MOV X0, X31
	0x03BD8638 BL 0x3B94F38
	0x03BD863C LDR X0, [X19]
	0x03BD8640 LDR W8, [X0 + 0xE0]
	0x03BD8644 CBNZ W8, 0x3BD864C
	0x03BD8648 BL 0x1C16DFC
	0x03BD864C ADRP X19, 0x584000
	0x03BD8650 LDR X19, [X19 + 0x698]
	0x03BD8654 MOV X0, X31
	0x03BD8658 BL 0x3B9534C
	0x03BD865C LDR X0, [X20]
	0x03BD8660 LDR W8, [X0 + 0xE0]
	0x03BD8664 CBNZ W8, 0x3BD866C
	0x03BD8668 BL 0x1C16DFC
	0x03BD866C ADRP X20, 0x584000
	0x03BD8670 LDR X20, [X20 + 0x6A0]
	0x03BD8674 MOV X0, X31
	0x03BD8678 BL 0x3B9577C
	0x03BD867C LDR X0, [X19]
	0x03BD8680 LDR W8, [X0 + 0xE0]
	0x03BD8684 CBNZ W8, 0x3BD868C
	0x03BD8688 BL 0x1C16DFC
	0x03BD868C ADRP X19, 0x584000
	0x03BD8690 LDR X19, [X19 + 0xDF8]
	0x03BD8694 MOV X0, X31
	0x03BD8698 BL 0x3B95B78
	0x03BD869C LDR X0, [X20]
	0x03BD86A0 LDR W8, [X0 + 0xE0]
	0x03BD86A4 CBNZ W8, 0x3BD86AC
	0x03BD86A8 BL 0x1C16DFC
	0x03BD86AC ADRP X20, 0x584000
	0x03BD86B0 LDR X20, [X20 + 0xE00]
	0x03BD86B4 MOV X0, X31
	0x03BD86B8 BL 0x3B95F54
	0x03BD86BC LDR X0, [X19]
	0x03BD86C0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], D15
	002 Move [X31-72], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move X0, X31
	011 Move V8, V7
	012 Move V9, V6
	013 Move V10, V5
	014 Move V11, V4
	015 Call float4.op_Implicit, X0
	016 Move V12, V0
	017 Move V13, V1
	018 Move V14, V2
	019 Move V15, V3
	020 Move V0, V11
	021 Move V1, V10
	022 Move V2, V9
	023 Move V3, V8
	024 Move X0, X31
	025 Call float4.op_Implicit, X0
	026 Subtract S0, S0, S12
	027 Subtract S1, S1, S13
	028 Move X8, -51302400
	029 Subtract S2, S2, S14
	030 Multiply S0, S0, S0
	031 Multiply S1, S1, S1
	032 Move V4, [X8+376]
	033 Subtract S3, S3, S15
	034 Multiply S2, S2, S2
	035 Add S0, S0, S1
	036 Add S0, S2, S0
	037 Multiply S1, S3, S3
	038 Move X30, [X31+64]
	039 Move D9, [X31+48]
	040 Move D8, [X31+56]
	041 Move D11, [X31+32]
	042 Move D10, [X31+40]
	043 Move D13, [X31+16]
	044 Move D12, [X31+24]
	045 Add S0, S1, S0
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move D15, [X31+80]
	049 Move D14, [X31+88]
	050 Return X0

