Type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual/CalculateLineCurveRenderPoints_0000037D$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B4D838 MOV X3, X31
	0x03B4D83C MOV X21, X0
	0x03B4D840 LDR X2, [X8]
	0x03B4D844 BL 0x2725C6C
	0x03B4D848 CBZ X20, 0x3B4D888
	0x03B4D84C ADRP X8, 0x60D000
	0x03B4D850 LDR X8, [X8 + 0x1B0]
	0x03B4D854 MOV X0, X20
	0x03B4D858 MOV X1, X21
	0x03B4D85C LDR X2, [X8]
	0x03B4D860 BL 0x2729B68
	0x03B4D864 MOV X0, X19
	0x03B4D868 BL 0x3B4D88C
	0x03B4D86C MOV X0, X19
	0x03B4D870 BL 0x3B4D568
	0x03B4D874 MOV X0, X19
	0x03B4D878 LDP X20, X19, [X31 + 0x10]
	0x03B4D87C MOV W1, W31
	0x03B4D880 LDP X30, X21, [X31], #0x20
	0x03B4D884 B 0x3B4D6D8
	0x03B4D888 BL 0x1C16F20
	0x03B4D88C STP X30, X21, [X31 - 0x20]!
	0x03B4D890 STP X20, X19, [X31 + 0x10]
	0x03B4D894 ADRP X20, 0x895000
	0x03B4D898 ADRP X21, 0x5A6000
	0x03B4D89C LDRB W8, [X20 + 0x8DB]
	0x03B4D8A0 LDR X21, [X21 + 0x598]
	0x03B4D8A4 MOV X19, X0
	0x03B4D8A8 TBNZ X8, 0x0, 0x3B4D8CC
	0x03B4D8AC ADRP X0, 0x60D000
	0x03B4D8B0 LDR X0, [X0 + 0x978]
	0x03B4D8B4 BL 0x1C16CF4
	0x03B4D8B8 ADRP X0, 0x5A6000
	0x03B4D8BC LDR X0, [X0 + 0x598]
	0x03B4D8C0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {23}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -32829440
	021 Add X8, X8, 2532
	022 Move [X19+24], X8
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X19+16]
	026 Move X9, [X19+32]
	027 Move [X19+24], X8
	028 Move [X19+64], X9
	029 Move X8, -32829440
	030 Add X8, X8, 2396
	031 Move [X19+56], X8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X1, -50532352
	038 Add X1, X1, 3811
	039 Move X0, X31
	040 Call 0x1C17F3C
	041 Move X1, X31
	042 Call 0x1C17DEC

Method: System.Void Invoke(System.Int32 numTargetPoints, System.Single curveRatio, in UnityEngine.Vector3 lineOrigin, in UnityEngine.Vector3 lineDirection, in UnityEngine.Vector3 endPoint, ref Unity.Collections.NativeArray`1<UnityEngine.Vector3> targetPoints)

Disassembly:
	0x03B4D8C4 MOVZ W8, 0x1
	0x03B4D8C8 STRB W8, [X20 + 0x8DB]
	0x03B4D8CC LDR X20, [X19 + 0x58]!
	0x03B4D8D0 LDR X0, [X21]
	0x03B4D8D4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X8, [X0+64]
	002 Move X7, [X0+24]
	003 Move X6, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X7

Method: System.IAsyncResult BeginInvoke(System.Int32 numTargetPoints, System.Single curveRatio, in UnityEngine.Vector3 lineOrigin, in UnityEngine.Vector3 lineDirection, in UnityEngine.Vector3 endPoint, ref Unity.Collections.NativeArray`1<UnityEngine.Vector3> targetPoints, System.AsyncCallback param_6, System.Object param_7)

Disassembly:
	0x03B4D8D8 CBNZ W8, 0x3B4D8E0
	0x03B4D8DC BL 0x1C16DFC
	0x03B4D8E0 MOV X0, X20
	0x03B4D8E4 MOV X1, X31
	0x03B4D8E8 MOV X2, X31
	0x03B4D8EC BL 0x3C3883C
	0x03B4D8F0 TBZ X0, 0x0, 0x3B4D910
	0x03B4D8F4 ADRP X8, 0x60D000
	0x03B4D8F8 LDR X8, [X8 + 0x978]
	0x03B4D8FC MOV X0, X19
	0x03B4D900 LDP X20, X19, [X31 + 0x10]
	0x03B4D904 LDR X1, [X8]
	0x03B4D908 LDP X30, X21, [X31], #0x20
	0x03B4D90C B 0x295FA30
	0x03B4D910 LDP X20, X19, [X31 + 0x10]
	0x03B4D914 LDP X30, X21, [X31], #0x20
	0x03B4D918 RET
	0x03B4D91C MOV W1, W31
	0x03B4D920 B 0x3B4D6D8
	0x03B4D924 STP X30, X21, [X31 - 0x20]!
	0x03B4D928 STP X20, X19, [X31 + 0x10]
	0x03B4D92C ADRP X21, 0x895000
	0x03B4D930 ADRP X20, 0x5A6000
	0x03B4D934 LDRB W8, [X21 + 0x8D9]
	0x03B4D938 LDR X20, [X20 + 0x598]
	0x03B4D93C MOV X19, X0
	0x03B4D940 TBNZ X8, 0x0, 0x3B4D958
	0x03B4D944 ADRP X0, 0x5A6000
	0x03B4D948 LDR X0, [X0 + 0x598]
	0x03B4D94C BL 0x1C16CF4
	0x03B4D950 MOVZ W8, 0x1
	0x03B4D954 STRB W8, [X21 + 0x8D9]
	0x03B4D958 LDR X0, [X20]
	0x03B4D95C LDR X20, [X19 + 0x68]
	0x03B4D960 LDR W8, [X0 + 0xE0]
	0x03B4D964 CBNZ W8, 0x3B4D96C
	0x03B4D968 BL 0x1C16DFC
	0x03B4D96C MOV X0, X20
	0x03B4D970 MOV X1, X31
	0x03B4D974 MOV X2, X31
	0x03B4D978 BL 0x3C354F8
	0x03B4D97C TBZ X0, 0x0, 0x3B4D99C
	0x03B4D980 MOV X0, X19
	0x03B4D984 BL 0x3B4D9B0
	0x03B4D988 TBZ X0, 0x0, 0x3B4D99C
	0x03B4D98C MOV X0, X19
	0x03B4D990 LDP X20, X19, [X31 + 0x10]
	0x03B4D994 LDP X30, X21, [X31], #0x20
	0x03B4D998 B 0x3B4DE3C
	0x03B4D99C MOV X0, X19
	0x03B4D9A0 LDP X20, X19, [X31 + 0x10]
	0x03B4D9A4 MOV W1, W31
	0x03B4D9A8 LDP X30, X21, [X31], #0x20
	0x03B4D9AC B 0x3B4D6D8
	0x03B4D9B0 STP D15, D14, [X31 - 0x80]!
	0x03B4D9B4 STP D13, D12, [X31 + 0x10]
	0x03B4D9B8 STP D11, D10, [X31 + 0x20]
	0x03B4D9BC STP D9, D8, [X31 + 0x30]
	0x03B4D9C0 STR X29, [X31 + 0x40]
	0x03B4D9C4 STP X30, X23, [X31 + 0x50]
	0x03B4D9C8 STP X22, X21, [X31 + 0x60]
	0x03B4D9CC STP X20, X19, [X31 + 0x70]
	0x03B4D9D0 SUB X31, X31, 0x1D0
	0x03B4D9D4 ADRP X20, 0x895000
	0x03B4D9D8 LDRB W8, [X20 + 0x8DD]
	0x03B4D9DC MOV X19, X0
	0x03B4D9E0 ADD X21, X31, 0x80
	0x03B4D9E4 TBNZ X8, 0x0, 0x3B4DA20
	0x03B4D9E8 ADRP X0, 0x60D000
	0x03B4D9EC LDR X0, [X0 + 0xA08]
	0x03B4D9F0 BL 0x1C16CF4
	0x03B4D9F4 ADRP X0, 0x60D000
	0x03B4D9F8 LDR X0, [X0 + 0xB00]
	0x03B4D9FC BL 0x1C16CF4
	0x03B4DA00 ADRP X0, 0x60D000
	0x03B4DA04 LDR X0, [X0 + 0xA10]
	0x03B4DA08 BL 0x1C16CF4
	0x03B4DA0C ADRP X0, 0x60D000
	0x03B4DA10 LDR X0, [X0 + 0x7C0]
	0x03B4DA14 BL 0x1C16CF4
	0x03B4DA18 MOVZ W8, 0x1
	0x03B4DA1C STRB W8, [X20 + 0x8DD]
	0x03B4DA20 MOVI V0.2D, 0x0
	0x03B4DA24 STR W31, [X31 + 0x1C8]
	0x03B4DA28 STR X31, [X31 + 0x1C0]
	0x03B4DA2C STR W31, [X31 + 0x1B8]
	0x03B4DA30 STR X31, [X31 + 0x1B0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31+60], W1
	015 Move [X31+56], S0
	016 Move X26, 0x896000
	017 Move X29, 0x5A7000
	018 Move X28, 0x5A7000
	019 Move X27, 0x5A7000
	020 Move W8, [X26+2248]
	021 Move X29, [X29+1880]
	022 Move X28, [X28+2704]
	023 Move X27, [X27+1440]
	024 Move X19, X7
	025 Move X20, X6
	026 Move X22, X5
	027 Move X23, X4
	028 Move X24, X3
	029 Move X25, X2
	030 Move X21, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {49}
	035 Move X0, 0x5A7000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0x60E000
	039 Move X0, [X0+2712]
	040 Call 0x1C17CF4
	041 Move X0, 0x5A7000
	042 Move X0, [X0+2704]
	043 Call 0x1C17CF4
	044 Move X0, 0x5A7000
	045 Move X0, [X0+1440]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+2248], W8
	049 Move X0, [X29]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Add X1, X31, 60
	052 Move [X31+48], X31
	053 Move [X31+16], V0
	054 Move [X31+24], V0
	055 Move [X31], V0
	056 Call 0x1C17E04
	057 Move X8, [X28]
	058 Move [X31], X0
	059 Add X1, X31, 56
	060 Move X0, X8
	061 Call 0x1C17E04
	062 Move X8, [X27]
	063 Move [X31+8], X0
	064 Move X1, X25
	065 Move X0, X8
	066 Call 0x1C17E04
	067 Move X8, [X27]
	068 Move [X31+16], X0
	069 Move X1, X24
	070 Move X0, X8
	071 Call 0x1C17E04
	072 Move X8, [X27]
	073 Move [X31+24], X0
	074 Move X1, X23
	075 Move X0, X8
	076 Call 0x1C17E04
	077 Move X8, 0x60E000
	078 Move X8, [X8+2712]
	079 Move [X31+32], X0
	080 Move X1, X22
	081 Move X8, [X8]
	082 Move X0, X8
	083 Call 0x1C17E04
	084 Move [X31+40], X0
	085 Add X1, X31, 0
	086 Move X0, X21
	087 Move X2, X20
	088 Move X3, X19
	089 Call 0x1C17CB0
	090 Move X20, [X31+144]
	091 Move X19, [X31+152]
	092 Move X22, [X31+128]
	093 Move X21, [X31+136]
	094 Move X24, [X31+112]
	095 Move X23, [X31+120]
	096 Move X26, [X31+96]
	097 Move X25, [X31+104]
	098 Move X28, [X31+80]
	099 Move X27, [X31+88]
	100 Move X29, [X31+64]
	101 Move X30, [X31+72]
	102 Add X31, X31, 160
	103 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B4DA34 STR X31, [X31 + 0x170]
	0x03B4DA38 STRB W31, [X31 + 0x11C]
	0x03B4DA3C STR W31, [X31 + 0x118]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

