Type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/StepSmoothingBurst_00000292$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B4737C MOV W1, W31
	0x03B47380 LDP X30, X19, [X31], #0x10
	0x03B47384 B 0x3B47388
	0x03B47388 STR X30, [X31 - 0x30]!
	0x03B4738C STP X22, X21, [X31 + 0x10]
	0x03B47390 STP X20, X19, [X31 + 0x20]
	0x03B47394 ADRP X22, 0x89B000
	0x03B47398 ADRP X21, 0x5AC000
	0x03B4739C LDRB W8, [X22 + 0x8A2]
	0x03B473A0 LDR X21, [X21 + 0x598]
	0x03B473A4 MOV W19, W1
	0x03B473A8 MOV X20, X0
	0x03B473AC TBNZ X8, 0x0, 0x3B473C4
	0x03B473B0 ADRP X0, 0x5AC000
	0x03B473B4 LDR X0, [X0 + 0x598]
	0x03B473B8 BL 0x1C16CF4
	0x03B473BC MOVZ W8, 0x1
	0x03B473C0 STRB W8, [X22 + 0x8A2]
	0x03B473C4 LDR X0, [X21]
	0x03B473C8 LDR X21, [X20 + 0x30]
	0x03B473CC LDR W8, [X0 + 0xE0]
	0x03B473D0 CBNZ W8, 0x3B473D8
	0x03B473D4 BL 0x1C16DFC
	0x03B473D8 MOV X0, X21
	0x03B473DC MOV X1, X31
	0x03B473E0 MOV X2, X31
	0x03B473E4 BL 0x3C354F8
	0x03B473E8 TBZ X0, 0x0, 0x3B4740C
	0x03B473EC LDR X0, [X20 + 0x30]
	0x03B473F0 CBZ X0, 0x3B4741C
	0x03B473F4 AND W1, W19, 0x1
	0x03B473F8 LDP X20, X19, [X31 + 0x20]
	0x03B473FC LDP X22, X21, [X31 + 0x10]
	0x03B47400 MOV X2, X31
	0x03B47404 LDR X30, [X31], #0x30
	0x03B47408 B 0x3C8F748
	0x03B4740C LDP X20, X19, [X31 + 0x20]
	0x03B47410 LDP X22, X21, [X31 + 0x10]
	0x03B47414 LDR X30, [X31], #0x30
	0x03B47418 RET
	0x03B4741C BL 0x1C16F20
	0x03B47420 STR X30, [X31 - 0x20]!
	0x03B47424 STP X20, X19, [X31 + 0x10]
	0x03B47428 ADRP X20, 0x89B000
	0x03B4742C LDRB W8, [X20 + 0x8A0]
	0x03B47430 MOV X19, X0
	0x03B47434 TBNZ X8, 0x0, 0x3B47470
	0x03B47438 ADRP X0, 0x613000
	0x03B4743C LDR X0, [X0 + 0x918]
	0x03B47440 BL 0x1C16CF4
	0x03B47444 ADRP X0, 0x5B2000
	0x03B47448 LDR X0, [X0 + 0xC0]
	0x03B4744C BL 0x1C16CF4
	0x03B47450 ADRP X0, 0x607000
	0x03B47454 LDR X0, [X0 + 0xEA0]
	0x03B47458 BL 0x1C16CF4
	0x03B4745C ADRP X0, 0x5B2000
	0x03B47460 LDR X0, [X0 + 0xC8]
	0x03B47464 BL 0x1C16CF4
	0x03B47468 MOVZ W8, 0x1
	0x03B4746C STRB W8, [X20 + 0x8A0]
	0x03B47470 CBZ X19, 0x3B4752C
	0x03B47474 ADRP X9, 0x613000
	0x03B47478 LDR X9, [X9 + 0x918]
	0x03B4747C LDR X8, [X19]
	0x03B47480 LDR X10, [X9]
	0x03B47484 LDRB W9, [X8 + 0x130]
	0x03B47488 LDRB W11, [X10 + 0x130]
	0x03B4748C CMP W9, W11
	0x03B47490 B.CC 0x3B474A8
	0x03B47494 LDR X12, [X8 + 0xC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x89C000
	008 Move X23, 0x614000
	009 Move W8, [X20+2193]
	010 Move X23, [X23+1888]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5D5000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x614000
	020 Move X0, [X0+1888]
	021 Call 0x1C17CF4
	022 Move X0, 0x614000
	023 Move X0, [X0+2240]
	024 Call 0x1C17CF4
	025 Move X0, 0x614000
	026 Move X0, [X0+2248]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2193], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x5D5000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x614000
	053 Move X8, [X8+2248]
	054 Move X21, [X8]
	055 Move X8, 0x614000
	056 Move X8, [X8+2240]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B47498 ADD X11, X12, X11, 0x3, LSL
	0x03B4749C LDUR X11, [X11 - 0x8]
	0x03B474A0 CMP X11, X10
	0x03B474A4 B.EQ 0x3B47534
	0x03B474A8 ADRP X10, 0x5B2000
	0x03B474AC LDR X10, [X10 + 0xC8]
	0x03B474B0 LDR X10, [X10]
	0x03B474B4 LDRB W11, [X10 + 0x130]
	0x03B474B8 CMP W9, W11
	0x03B474BC B.CC 0x3B474D4
	0x03B474C0 LDR X12, [X8 + 0xC8]
	0x03B474C4 ADD X11, X12, X11, 0x3, LSL
	0x03B474C8 LDUR X11, [X11 - 0x8]
	0x03B474CC CMP X11, X10
	0x03B474D0 B.EQ 0x3B47534
	0x03B474D4 ADRP X10, 0x5B2000
	0x03B474D8 LDR X10, [X10 + 0xC0]
	0x03B474DC LDR X10, [X10]
	0x03B474E0 LDRB W11, [X10 + 0x130]
	0x03B474E4 CMP W9, W11
	0x03B474E8 B.CC 0x3B47500
	0x03B474EC LDR X12, [X8 + 0xC8]
	0x03B474F0 ADD X11, X12, X11, 0x3, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x89C000
	005 Move X19, 0x614000
	006 Move W8, [X20+2194]
	007 Move X19, [X19+1888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x614000
	013 Move X0, [X0+1888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2194], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call StepSmoothingBurst_00000292$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B474F4 LDUR X11, [X11 - 0x8]
	0x03B474F8 CMP X11, X10
	0x03B474FC B.EQ 0x3B47534
	0x03B47500 ADRP X10, 0x607000
	0x03B47504 LDR X10, [X10 + 0xEA0]
	0x03B47508 LDR X10, [X10]
	0x03B4750C LDRB W11, [X10 + 0x130]
	0x03B47510 CMP W9, W11
	0x03B47514 B.CC 0x3B4752C
	0x03B47518 LDR X8, [X8 + 0xC8]
	0x03B4751C ADD X8, X8, X11, 0x3, LSL
	0x03B47520 LDUR X8, [X8 - 0x8]
	0x03B47524 CMP X8, X10
	0x03B47528 B.EQ 0x3B47544
	0x03B4752C MOV W0, W31
	0x03B47530 B 0x3B47538
	0x03B47534 MOVZ W0, 0x1
	0x03B47538 LDP X20, X19, [X31 + 0x10]
	0x03B4753C LDR X30, [X31], #0x20
	0x03B47540 RET
	0x03B47544 MOV X0, X19
	0x03B47548 LDP X20, X19, [X31 + 0x10]
	0x03B4754C MOV X1, X31
	0x03B47550 LDR X30, [X31], #0x20
	0x03B47554 B 0x3C8FC40
	0x03B47558 STR D10, [X31 - 0x40]!
	0x03B4755C STP D9, D8, [X31 + 0x10]
	0x03B47560 STP X30, X21, [X31 + 0x20]
	0x03B47564 STP X20, X19, [X31 + 0x30]
	0x03B47568 ADRP X20, 0x89B000
	0x03B4756C ADRP X21, 0x5AC000
	0x03B47570 LDRB W8, [X20 + 0x8A3]
	0x03B47574 LDR X21, [X21 + 0x598]
	0x03B47578 MOV V8.16B, V2.16B
	0x03B4757C MOV V9.16B, V1.16B
	0x03B47580 MOV V10.16B, V0.16B
	0x03B47584 MOV X19, X0
	0x03B47588 TBNZ X8, 0x0, 0x3B475AC
	0x03B4758C ADRP X0, 0x613000
	0x03B47590 LDR X0, [X0 + 0x8D8]
	0x03B47594 BL 0x1C16CF4
	0x03B47598 ADRP X0, 0x5AC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x89C000
	006 Move X19, 0x614000
	007 Move X20, 0x5D5000
	008 Move W8, [X21+2195]
	009 Move X19, [X19+2256]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x5D5000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x614000
	019 Move X0, [X0+1888]
	020 Call 0x1C17CF4
	021 Move X0, 0x614000
	022 Move X0, [X0+2256]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2195], W8
	026 Move X0, [X20]
	027 Move X20, 0x614000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1888]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B4759C LDR X0, [X0 + 0x598]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B475A0 BL 0x1C16CF4

ISIL:
	001 Call StepSmoothingBurst_00000292$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(ref UnityEngine.Pose targetPose, ref UnityEngine.Vector3 targetLocalScale, in UnityEngine.Pose rawTargetPose, in UnityEngine.Vector3 rawTargetLocalScale, System.Single deltaTime, System.Boolean smoothPos, System.Single smoothPosAmount, System.Single tightenPos, System.Boolean smoothRot, System.Single smoothRotAmount, System.Single tightenRot, System.Boolean smoothScale, System.Single smoothScaleAmount, System.Single tightenScale)

Disassembly:
	0x03B4412C LDR X8, [X19]
	0x03B44130 LDR X10, [X9]
	0x03B44134 LDRB W9, [X8 + 0x130]
	0x03B44138 LDRB W11, [X10 + 0x130]
	0x03B4413C CMP W9, W11
	0x03B44140 B.CC 0x3B44158
	0x03B44144 LDR X12, [X8 + 0xC8]
	0x03B44148 ADD X11, X12, X11, 0x3, LSL
	0x03B4414C LDUR X11, [X11 - 0x8]
	0x03B44150 CMP X11, X10
	0x03B44154 B.EQ 0x3B44194
	0x03B44158 ADRP X10, 0x616000
	0x03B4415C LDR X10, [X10 + 0x7C0]
	0x03B44160 LDR X10, [X10]
	0x03B44164 LDRB W11, [X10 + 0x130]
	0x03B44168 CMP W9, W11
	0x03B4416C B.CC 0x3B44184
	0x03B44170 LDR X8, [X8 + 0xC8]
	0x03B44174 ADD X8, X8, X11, 0x3, LSL
	0x03B44178 LDUR X8, [X8 - 0x8]
	0x03B4417C CMP X8, X10
	0x03B44180 B.EQ 0x3B4418C
	0x03B44184 MOVZ W0, 0x1
	0x03B44188 B 0x3B44198
	0x03B4418C LDRB W8, [X19 + 0x2FF]
	0x03B44190 CBZ W8, 0x3B44184
	0x03B44194 MOV W0, W31
	0x03B44198 LDP X20, X19, [X31 + 0x10]
	0x03B4419C LDP X30, X21, [X31], #0x20
	0x03B441A0 RET
	0x03B441A4 STP X30, X21, [X31 - 0x20]!
	0x03B441A8 STP X20, X19, [X31 + 0x10]
	0x03B441AC ADRP X21, 0x89E000
	0x03B441B0 LDRB W8, [X21 + 0x87C]
	0x03B441B4 MOV X19, X1
	0x03B441B8 MOV X20, X0
	0x03B441BC TBNZ X8, 0x0, 0x3B441D4
	0x03B441C0 ADRP X0, 0x616000
	0x03B441C4 LDR X0, [X0 + 0x7C8]
	0x03B441C8 BL 0x1C16CF4
	0x03B441CC MOVZ W8, 0x1
	0x03B441D0 STRB W8, [X21 + 0x87C]
	0x03B441D4 LDRB W8, [X20 + 0x1E2]
	0x03B441D8 CBZ W8, 0x3B44208
	0x03B441DC CBZ X19, 0x3B44200
	0x03B441E0 ADRP X8, 0x616000
	0x03B441E4 LDR X8, [X8 + 0x7C8]
	0x03B441E8 LDR X9, [X19]
	0x03B441EC LDR X8, [X8]
	0x03B441F0 LDRB W11, [X9 + 0x130]
	0x03B441F4 LDRB W10, [X8 + 0x130]
	0x03B441F8 CMP W11, W10
	0x03B441FC B.CS 0x3B44210
	0x03B44200 MOVZ W0, 0x1
	0x03B44204 B 0x3B44224
	0x03B44208 MOV W0, W31
	0x03B4420C B 0x3B44224
	0x03B44210 LDR X9, [X9 + 0xC8]
	0x03B44214 ADD X9, X9, X10, 0x3, LSL
	0x03B44218 LDUR X9, [X9 - 0x8]
	0x03B4421C CMP X9, X8
	0x03B44220 CSET W0, NE
	0x03B44224 LDP X20, X19, [X31 + 0x10]
	0x03B44228 LDP X30, X21, [X31], #0x20
	0x03B4422C RET
	0x03B44230 LDRB W0, [X0 + 0x1E3]
	0x03B44234 RET
	0x03B44238 SUB X31, X31, 0x90
	0x03B4423C STR D14, [X31 + 0x20]
	0x03B44240 STP D13, D12, [X31 + 0x28]
	0x03B44244 STP D11, D10, [X31 + 0x38]
	0x03B44248 STP D9, D8, [X31 + 0x48]
	0x03B4424C STR X30, [X31 + 0x58]
	0x03B44250 STP X24, X23, [X31 + 0x60]
	0x03B44254 STP X22, X21, [X31 + 0x70]
	0x03B44258 STP X20, X19, [X31 + 0x80]
	0x03B4425C ADRP X20, 0x89E000
	0x03B44260 LDRB W8, [X20 + 0x87D]
	0x03B44264 MOV X19, X2
	0x03B44268 MOV X23, X1
	0x03B4426C MOV X22, X0
	0x03B44270 TBNZ X8, 0x0, 0x3B44288
	0x03B44274 ADRP X0, 0x616000
	0x03B44278 LDR X0, [X0 + 0x2F8]
	0x03B4427C BL 0x1C16CF4
	0x03B44280 MOVZ W8, 0x1
	0x03B44284 STRB W8, [X20 + 0x87D]
	0x03B44288 STP X31, X31, [X31 + 0x8]
	0x03B4428C STR X31, [X31 + 0x18]
	0x03B44290 LDR X8, [X22]
	0x03B44294 MOV X0, X22
	0x03B44298 MOV X1, X23
	0x03B4429C LDR X9, [X8 + 0x878]
	0x03B442A0 LDR X2, [X8 + 0x880]
	0x03B442A4 BLR X9
	0x03B442A8 LDR X8, [X22]
	0x03B442AC MOV W20, W0
	0x03B442B0 MOV X0, X22
	0x03B442B4 MOV X1, X23
	0x03B442B8 LDR X9, [X8 + 0x888]
	0x03B442BC LDR X2, [X8 + 0x890]
	0x03B442C0 BLR X9
	0x03B442C4 MOV W21, W0
	0x03B442C8 TBNZ X20, 0x0, 0x3B442D0
	0x03B442CC TBZ X21, 0x0, 0x3B44428
	0x03B442D0 CBZ X23, 0x3B44450
	0x03B442D4 ADRP X10, 0x616000
	0x03B442D8 LDR X8, [X23]
	0x03B442DC LDR X10, [X10 + 0x2F8]
	0x03B442E0 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-144], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X26, 0x89F000
	019 Move X27, 0x5D8000
	020 Move W8, [X26+2196]
	021 Move X27, [X27+2120]
	022 Move V8, V6
	023 Move V9, V5
	024 Move W23, W6
	025 Move V10, V4
	026 Move V11, V3
	027 Move W24, W5
	028 Move V12, V2
	029 Move V13, V1
	030 Move W25, W4
	031 Move V14, V0
	032 Move X19, X3
	033 Move X20, X2
	034 Move X21, X1
	035 Move X22, X0
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {51}
	040 Move X0, 0x5D8000
	041 Move X0, [X0+2120]
	042 Call 0x1C17CF4
	043 Move X0, 0x617000
	044 Move X0, [X0+1888]
	045 Call 0x1C17CF4
	046 Move X0, 0x617000
	047 Move X0, [X0+1728]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X26+2196], W8
	051 Move X0, [X27]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call BurstCompiler.get_IsEnabled
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {105}
	062 Move X8, 0x617000
	063 Move X8, [X8+1888]
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Call StepSmoothingBurst_00000292$BurstDirectCall.GetFunctionPointer
	070 Compare X0, 0
	071 JumpIfEqual {105}
	072 Move X7, X0
	073 And W4, W25, 1
	074 And W5, W24, 1
	075 And W6, W23, 1
	076 Move V1, V13
	077 Move V2, V12
	078 Move V3, V11
	079 Move V4, V10
	080 Move V5, V9
	081 Move V6, V8
	082 Move X0, X22
	083 Move X1, X21
	084 Move X2, X20
	085 Move X3, X19
	086 Move X20, [X31+128]
	087 Move X19, [X31+136]
	088 Move X22, [X31+112]
	089 Move X21, [X31+120]
	090 Move X24, [X31+96]
	091 Move X23, [X31+104]
	092 Move X26, [X31+80]
	093 Move X25, [X31+88]
	094 Move X30, [X31+64]
	095 Move X27, [X31+72]
	096 Move D9, [X31+48]
	097 Move D8, [X31+56]
	098 Move D11, [X31+32]
	099 Move D10, [X31+40]
	100 Move D13, [X31+16]
	101 Move D12, [X31+24]
	102 Move V0, V14
	103 Move V14, [X31+144]
	104 CallNoReturn X7
	105 Move X8, 0x617000
	106 Move X8, [X8+1728]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 And W4, W25, 1
	113 And W5, W24, 1
	114 And W6, W23, 1
	115 Move V1, V13
	116 Move V2, V12
	117 Move V3, V11
	118 Move V4, V10
	119 Move V5, V9
	120 Move V6, V8
	121 Move X0, X22
	122 Move X1, X21
	123 Move X2, X20
	124 Move X3, X19
	125 Move X20, [X31+128]
	126 Move X19, [X31+136]
	127 Move X22, [X31+112]
	128 Move X21, [X31+120]
	129 Move X24, [X31+96]
	130 Move X23, [X31+104]
	131 Move X26, [X31+80]
	132 Move X25, [X31+88]
	133 Move X30, [X31+64]
	134 Move X27, [X31+72]
	135 Move D9, [X31+48]
	136 Move D8, [X31+56]
	137 Move D11, [X31+32]
	138 Move D10, [X31+40]
	139 Move D13, [X31+16]
	140 Move D12, [X31+24]
	141 Move V0, V14
	142 Move X7, X31
	143 Move V14, [X31+144]
	144 Call 0x3B48DF8
	145 Return 

