Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstPhysicsUtils/GetConecastOffset_00000939$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B8E54C MOV X1, X21
	0x03B8E550 MOV X2, X20
	0x03B8E554 MOV V0.16B, V8.16B
	0x03B8E558 BLR X8
	0x03B8E55C B 0x3B8E47C
	0x03B8E560 MOV X22, X31
	0x03B8E564 LDR X1, [X25]
	0x03B8E568 ADD X0, X31, 0x20
	0x03B8E56C BL 0x2BC434C
	0x03B8E570 CBNZ X22, 0x3B8E5C8
	0x03B8E574 MOV X21, X31
	0x03B8E578 CBNZ W24, 0x3B8E58C
	0x03B8E57C LDR X2, [X23]
	0x03B8E580 MOV X0, X19
	0x03B8E584 MOV W1, W31
	0x03B8E588 BL 0x25E89B0
	0x03B8E58C CBNZ X21, 0x3B8E5C0
	0x03B8E590 MOV V0.16B, V8.16B
	0x03B8E594 LDP X20, X19, [X31 + 0x90]
	0x03B8E598 LDP X22, X21, [X31 + 0x80]
	0x03B8E59C LDP X24, X23, [X31 + 0x70]
	0x03B8E5A0 LDP X26, X25, [X31 + 0x60]
	0x03B8E5A4 LDP X30, X27, [X31 + 0x50]
	0x03B8E5A8 LDR V8, [X31 + 0x40]
	0x03B8E5AC ADD X31, X31, 0xA0
	0x03B8E5B0 RET
	0x03B8E5B4 BL 0x1C16F20
	0x03B8E5B8 BL 0x1C16F20
	0x03B8E5BC BL 0x1C16F20
	0x03B8E5C0 MOV X0, X21
	0x03B8E5C4 BL 0x1C16F18
	0x03B8E5C8 MOV X0, X22
	0x03B8E5CC BL 0x1C16F18
	0x03B8E5D0 B 0x3B8E5DC
	0x03B8E5D4 B 0x3B8E5DC
	0x03B8E5D8 B 0x3B8E5F0
	0x03B8E5DC MOV X21, X1
	0x03B8E5E0 MOV X20, X0
	0x03B8E5E4 B 0x3B8E628
	0x03B8E5E8 B 0x3B8E5F0
	0x03B8E5EC B 0x3B8E5F0
	0x03B8E5F0 MOV X21, X1
	0x03B8E5F4 MOV X20, X0
	0x03B8E5F8 CMP W21, 0x1
	0x03B8E5FC B.NE 0x3B8E614
	0x03B8E600 MOV X0, X20
	0x03B8E604 BL 0x3EB1AD0
	0x03B8E608 LDR X22, [X0]
	0x03B8E60C BL 0x3EB1AE0
	0x03B8E610 B 0x3B8E564
	0x03B8E614 MOV X22, X31
	0x03B8E618 LDR X1, [X25]
	0x03B8E61C ADD X0, X31, 0x20
	0x03B8E620 BL 0x2BC434C
	0x03B8E624 CBNZ X22, 0x3B8E64C
	0x03B8E628 CMP W21, 0x1
	0x03B8E62C B.NE 0x3B8E644
	0x03B8E630 MOV X0, X20
	0x03B8E634 BL 0x3EB1AD0
	0x03B8E638 LDR X21, [X0]
	0x03B8E63C BL 0x3EB1AE0
	0x03B8E640 B 0x3B8E578
	0x03B8E644 MOV X21, X31
	0x03B8E648 B 0x3B8E664
	0x03B8E64C MOV X0, X22
	0x03B8E650 BL 0x1C16F18
	0x03B8E654 MOV X21, X1
	0x03B8E658 MOV X20, X0
	0x03B8E65C B 0x3B8E618
	0x03B8E660 MOV X20, X0
	0x03B8E664 CBNZ W24, 0x3B8E678

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x855000
	008 Move X23, 0x5CF000
	009 Move W8, [X20+2924]
	010 Move X23, [X23+664]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x58E000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5CF000
	020 Move X0, [X0+720]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CF000
	023 Move X0, [X0+664]
	024 Call 0x1C17CF4
	025 Move X0, 0x5CF000
	026 Move X0, [X0+728]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2924], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x58E000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5CF000
	053 Move X8, [X8+720]
	054 Move X21, [X8]
	055 Move X8, 0x5CF000
	056 Move X8, [X8+728]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B8E668 LDR X2, [X23]
	0x03B8E66C MOV X0, X19
	0x03B8E670 MOV W1, W31
	0x03B8E674 BL 0x25E89B0
	0x03B8E678 CBNZ X21, 0x3B8E684
	0x03B8E67C MOV X0, X20
	0x03B8E680 BL 0x1D2C690
	0x03B8E684 MOV X0, X21
	0x03B8E688 BL 0x1C16F18
	0x03B8E68C BL 0x1990590
	0x03B8E690 STR X30, [X31 - 0x20]!
	0x03B8E694 STP X20, X19, [X31 + 0x10]
	0x03B8E698 ADRP X19, 0x854000
	0x03B8E69C ADRP X20, 0x5CE000
	0x03B8E6A0 LDRB W8, [X19 + 0xB78]
	0x03B8E6A4 LDR X20, [X20 + 0x3D0]
	0x03B8E6A8 TBNZ X8, 0x0, 0x3B8E6C0
	0x03B8E6AC ADRP X0, 0x5CE000
	0x03B8E6B0 LDR X0, [X0 + 0x3D0]
	0x03B8E6B4 BL 0x1C16CF4
	0x03B8E6B8 MOVZ W8, 0x1
	0x03B8E6BC STRB W8, [X19 + 0xB78]
	0x03B8E6C0 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x855000
	005 Move X19, 0x5CF000
	006 Move W8, [X20+2925]
	007 Move X19, [X19+664]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5CF000
	013 Move X0, [X0+664]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2925], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call GetConecastOffset_00000939$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B8E6C4 LDP X20, X19, [X31 + 0x10]
	0x03B8E6C8 LDR X8, [X8 + 0xB8]
	0x03B8E6CC LDRB W0, [X8]
	0x03B8E6D0 LDR X30, [X31], #0x20
	0x03B8E6D4 RET
	0x03B8E6D8 STP X30, X21, [X31 - 0x20]!
	0x03B8E6DC STP X20, X19, [X31 + 0x10]
	0x03B8E6E0 ADRP X21, 0x854000
	0x03B8E6E4 ADRP X20, 0x5CE000
	0x03B8E6E8 LDRB W8, [X21 + 0xB79]
	0x03B8E6EC LDR X20, [X20 + 0x3D0]
	0x03B8E6F0 MOV W19, W0
	0x03B8E6F4 TBNZ X8, 0x0, 0x3B8E70C
	0x03B8E6F8 ADRP X0, 0x5CE000
	0x03B8E6FC LDR X0, [X0 + 0x3D0]
	0x03B8E700 BL 0x1C16CF4
	0x03B8E704 MOVZ W8, 0x1
	0x03B8E708 STRB W8, [X21 + 0xB79]
	0x03B8E70C LDR X8, [X20]
	0x03B8E710 AND W9, W19, 0x1
	0x03B8E714 LDP X20, X19, [X31 + 0x10]
	0x03B8E718 LDR X8, [X8 + 0xB8]
	0x03B8E71C STRB W9, [X8]
	0x03B8E720 LDP X30, X21, [X31], #0x20
	0x03B8E724 RET
	0x03B8E728 SUB X31, X31, 0xD0
	0x03B8E72C STR D14, [X31 + 0x40]
	0x03B8E730 STP D13, D12, [X31 + 0x48]
	0x03B8E734 STP D11, D10, [X31 + 0x58]
	0x03B8E738 STP D9, D8, [X31 + 0x68]
	0x03B8E73C STR X30, [X31 + 0x78]
	0x03B8E740 STP X28, X27, [X31 + 0x80]
	0x03B8E744 STP X26, X25, [X31 + 0x90]
	0x03B8E748 STP X24, X23, [X31 + 0xA0]
	0x03B8E74C STP X22, X21, [X31 + 0xB0]
	0x03B8E750 STP X20, X19, [X31 + 0xC0]
	0x03B8E754 ADRP X21, 0x854000
	0x03B8E758 LDRB W8, [X21 + 0xB7A]
	0x03B8E75C MOV X19, X1
	0x03B8E760 MOV V8.16B, V2.16B
	0x03B8E764 MOV V9.16B, V1.16B
	0x03B8E768 MOV V10.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x855000
	006 Move X19, 0x5CF000
	007 Move X20, 0x58E000
	008 Move W8, [X21+2926]
	009 Move X19, [X19+736]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x58E000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5CF000
	019 Move X0, [X0+736]
	020 Call 0x1C17CF4
	021 Move X0, 0x5CF000
	022 Move X0, [X0+664]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2926], W8
	026 Move X0, [X20]
	027 Move X20, 0x5CF000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+664]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B8E76C MOV X20, X0

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B8E770 TBNZ X8, 0x0, 0x3B8E7C4

ISIL:
	001 Call GetConecastOffset_00000939$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 origin, in Unity.Mathematics.float3 conePoint, in Unity.Mathematics.float3 direction, out System.Single coneOffset)

Disassembly:
	0x03B8D7A8 ADRP X0, 0x5CF000
	0x03B8D7AC LDR X0, [X0 + 0x2F0]
	0x03B8D7B0 BL 0x1C16CF4
	0x03B8D7B4 ADRP X0, 0x566000
	0x03B8D7B8 LDR X0, [X0 + 0xA58]
	0x03B8D7BC BL 0x1C16CF4
	0x03B8D7C0 ADRP X0, 0x566000
	0x03B8D7C4 LDR X0, [X0 + 0x598]
	0x03B8D7C8 BL 0x1C16CF4
	0x03B8D7CC ADRP X0, 0x5CF000
	0x03B8D7D0 LDR X0, [X0 + 0x2F8]
	0x03B8D7D4 BL 0x1C16CF4
	0x03B8D7D8 MOVZ W8, 0x1
	0x03B8D7DC STRB W8, [X19 + 0xB70]
	0x03B8D7E0 LDR X8, [X20]
	0x03B8D7E4 LDR X0, [X21]
	0x03B8D7E8 LDR X8, [X8 + 0xB8]
	0x03B8D7EC LDR W9, [X0 + 0xE0]
	0x03B8D7F0 LDR X19, [X8]
	0x03B8D7F4 CBNZ W9, 0x3B8D7FC
	0x03B8D7F8 BL 0x1C16DFC
	0x03B8D7FC MOV X0, X19
	0x03B8D800 MOV X1, X31
	0x03B8D804 MOV X2, X31
	0x03B8D808 BL 0x3C3883C
	0x03B8D80C TBZ X0, 0x0, 0x3B8D878
	0x03B8D810 ADRP X8, 0x566000
	0x03B8D814 LDR X8, [X8 + 0xA58]
	0x03B8D818 LDR X0, [X8]
	0x03B8D81C BL 0x1C16F10
	0x03B8D820 ADRP X8, 0x5CF000
	0x03B8D824 LDR X8, [X8 + 0x2F8]
	0x03B8D828 MOV X2, X31
	0x03B8D82C MOV X19, X0
	0x03B8D830 LDR X1, [X8]
	0x03B8D834 BL 0x3C35934
	0x03B8D838 LDR X0, [X21]
	0x03B8D83C LDR W8, [X0 + 0xE0]
	0x03B8D840 CBNZ W8, 0x3B8D848
	0x03B8D844 BL 0x1C16DFC
	0x03B8D848 MOV X0, X19
	0x03B8D84C MOV X1, X31
	0x03B8D850 BL 0x3C39674
	0x03B8D854 CBZ X19, 0x3B8D890
	0x03B8D858 ADRP X8, 0x5CF000
	0x03B8D85C LDR X8, [X8 + 0x2F0]
	0x03B8D860 MOV X0, X19
	0x03B8D864 LDR X1, [X8]
	0x03B8D868 BL 0x21E51FC
	0x03B8D86C LDR X8, [X20]
	0x03B8D870 LDR X8, [X8 + 0xB8]
	0x03B8D874 STR X0, [X8]
	0x03B8D878 LDR X8, [X20]
	0x03B8D87C LDP X20, X19, [X31 + 0x10]
	0x03B8D880 LDR X8, [X8 + 0xB8]
	0x03B8D884 LDR X0, [X8]
	0x03B8D888 LDP X30, X21, [X31], #0x20
	0x03B8D88C RET
	0x03B8D890 BL 0x1C16F20
	0x03B8D894 STR X30, [X31 - 0x30]!
	0x03B8D898 STP X22, X21, [X31 + 0x10]
	0x03B8D89C STP X20, X19, [X31 + 0x20]
	0x03B8D8A0 ADRP X20, 0x855000
	0x03B8D8A4 ADRP X21, 0x5CF000
	0x03B8D8A8 ADRP X22, 0x566000
	0x03B8D8AC LDRB W8, [X20 + 0xB71]
	0x03B8D8B0 LDR X21, [X21 + 0x2E8]
	0x03B8D8B4 LDR X22, [X22 + 0x598]
	0x03B8D8B8 MOV X19, X0
	0x03B8D8BC TBNZ X8, 0x0, 0x3B8D8E0
	0x03B8D8C0 ADRP X0, 0x5CF000
	0x03B8D8C4 LDR X0, [X0 + 0x2E8]
	0x03B8D8C8 BL 0x1C16CF4
	0x03B8D8CC ADRP X0, 0x566000
	0x03B8D8D0 LDR X0, [X0 + 0x598]
	0x03B8D8D4 BL 0x1C16CF4
	0x03B8D8D8 MOVZ W8, 0x1
	0x03B8D8DC STRB W8, [X20 + 0xB71]
	0x03B8D8E0 LDR X8, [X21]
	0x03B8D8E4 LDR X0, [X22]
	0x03B8D8E8 LDR X8, [X8 + 0xB8]
	0x03B8D8EC LDR W9, [X0 + 0xE0]
	0x03B8D8F0 LDR X20, [X8]
	0x03B8D8F4 CBNZ W9, 0x3B8D8FC
	0x03B8D8F8 BL 0x1C16DFC
	0x03B8D8FC MOV X0, X20
	0x03B8D900 MOV X1, X31
	0x03B8D904 MOV X2, X31
	0x03B8D908 BL 0x3C354F8
	0x03B8D90C TBZ X0, 0x0, 0x3B8D968
	0x03B8D910 LDR X8, [X21]
	0x03B8D914 LDR X0, [X22]
	0x03B8D918 LDR X8, [X8 + 0xB8]
	0x03B8D91C LDR W9, [X0 + 0xE0]
	0x03B8D920 LDR X20, [X8]
	0x03B8D924 CBNZ W9, 0x3B8D92C
	0x03B8D928 BL 0x1C16DFC
	0x03B8D92C MOV X0, X20
	0x03B8D930 MOV X1, X19
	0x03B8D934 MOV X2, X31
	0x03B8D938 BL 0x3C354F8

ISIL:
	001 Move [X31-112], D13
	002 Move [X31-104], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x856000
	015 Move X24, 0x58F000
	016 Move W8, [X23+2927]
	017 Move X24, [X24+2120]
	018 Move X19, X3
	019 Move X20, X2
	020 Move X22, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x58F000
	027 Move X0, [X0+2120]
	028 Call 0x1C17CF4
	029 Move X0, 0x5D0000
	030 Move X0, [X0+664]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2927], W8
	034 Move X0, [X24]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X31
	040 Call BurstCompiler.get_IsEnabled
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {74}
	045 Move X8, 0x5D0000
	046 Move X8, [X8+664]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call GetConecastOffset_00000939$BurstDirectCall.GetFunctionPointer
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X4, X0
	056 Move X0, X21
	057 Move X1, X22
	058 Move X2, X20
	059 Move X3, X19
	060 Move X20, [X31+96]
	061 Move X19, [X31+104]
	062 Move X22, [X31+80]
	063 Move X21, [X31+88]
	064 Move X24, [X31+64]
	065 Move X23, [X31+72]
	066 Move X30, [X31+48]
	067 Move D9, [X31+32]
	068 Move D8, [X31+40]
	069 Move D11, [X31+16]
	070 Move D10, [X31+24]
	071 Move D13, [X31+112]
	072 Move D12, [X31+120]
	073 CallNoReturn X4
	074 Move S0, [X22]
	075 Move S1, [X22+4]
	076 Move S3, [X21]
	077 Move S4, [X21+4]
	078 Move V2, [X22+8]
	079 Move V5, [X21+8]
	080 Move S6, [X20]
	081 Move S7, [X20+4]
	082 Subtract S8, S0, S3
	083 Move V0, [X20+8]
	084 Move X20, 0x855000
	085 Subtract S10, S1, S4
	086 Move W8, [X20+1413]
	087 Subtract S9, S2, S5
	088 Multiply S1, S8, S6
	089 Multiply S2, S10, S7
	090 Add S1, S1, S2
	091 Multiply S2, S9, S0
	092 Add S1, S2, S1
	093 Multiply S11, S6, S1
	094 Multiply S12, S7, S1
	095 Multiply S13, S0, S1
	096 Compare W8, 0
	097 JumpIfNotEqual {103}
	098 Move X0, 0x567000
	099 Move X0, [X0+1448]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X20+1413], W8
	103 Move X8, 0x567000
	104 Move X8, [X8+1448]
	105 Subtract S11, S8, S11
	106 Subtract S8, S10, S12
	107 Subtract S9, S9, S13
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Multiply S1, S11, S11
	114 Multiply S2, S8, S8
	115 Multiply S0, S9, S9
	116 Add S1, S1, S2
	117 Add S0, S0, S1
	118 NotImplemented "Instruction FSQRT not yet implemented."
	119 Move [X19], S0
	120 Move X20, [X31+96]
	121 Move X19, [X31+104]
	122 Move X22, [X31+80]
	123 Move X21, [X31+88]
	124 Move X24, [X31+64]
	125 Move X23, [X31+72]
	126 Move X30, [X31+48]
	127 Move D9, [X31+32]
	128 Move D8, [X31+40]
	129 Move D11, [X31+16]
	130 Move D10, [X31+24]
	131 Move D13, [X31+112]
	132 Move D12, [X31+120]
	133 Return 

