Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/LookRotationWithForwardProjectedOnPlane_0000092C$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B8AFCC BL 0x1C16DFC
	0x03B8AFD0 MOV X0, X20
	0x03B8AFD4 MOV X1, X21
	0x03B8AFD8 MOV X2, X22
	0x03B8AFDC MOV X3, X31
	0x03B8AFE0 BL 0x36FAD70
	0x03B8AFE4 LDR X8, [X23]
	0x03B8AFE8 LDR X9, [X8 + 0xB8]
	0x03B8AFEC STR X0, [X9]
	0x03B8AFF0 LDR W9, [X8 + 0xE0]
	0x03B8AFF4 CBNZ W9, 0x3B8B004
	0x03B8AFF8 MOV X0, X8
	0x03B8AFFC BL 0x1C16DFC
	0x03B8B000 LDR X8, [X23]
	0x03B8B004 LDR X8, [X8 + 0xB8]
	0x03B8B008 LDP X22, X21, [X31 + 0x10]
	0x03B8B00C LDR X8, [X8]
	0x03B8B010 STR X8, [X19]
	0x03B8B014 LDP X20, X19, [X31 + 0x20]
	0x03B8B018 LDP X30, X23, [X31], #0x30
	0x03B8B01C RET
	0x03B8B020 STR X30, [X31 - 0x20]!
	0x03B8B024 STP X20, X19, [X31 + 0x10]
	0x03B8B028 ADRP X20, 0x857000
	0x03B8B02C ADRP X19, 0x5D1000
	0x03B8B030 LDRB W8, [X20 + 0xB42]
	0x03B8B034 LDR X19, [X19 + 0xD8]
	0x03B8B038 TBNZ X8, 0x0, 0x3B8B050
	0x03B8B03C ADRP X0, 0x5D1000
	0x03B8B040 LDR X0, [X0 + 0xD8]
	0x03B8B044 BL 0x1C16CF4
	0x03B8B048 MOVZ W8, 0x1
	0x03B8B04C STRB W8, [X20 + 0xB42]
	0x03B8B050 LDR X0, [X19]
	0x03B8B054 STR X31, [X31 + 0x8]
	0x03B8B058 LDR W8, [X0 + 0xE0]
	0x03B8B05C CBNZ W8, 0x3B8B064
	0x03B8B060 BL 0x1C16DFC
	0x03B8B064 ADD X0, X31, 0x8
	0x03B8B068 BL 0x3B8AF04
	0x03B8B06C LDR X0, [X31 + 0x8]
	0x03B8B070 LDP X20, X19, [X31 + 0x10]
	0x03B8B074 LDR X30, [X31], #0x20
	0x03B8B078 RET
	0x03B8B07C STP X30, X21, [X31 - 0x20]!
	0x03B8B080 STP X20, X19, [X31 + 0x10]
	0x03B8B084 ADRP X21, 0x857000
	0x03B8B088 ADRP X19, 0x5D1000
	0x03B8B08C ADRP X20, 0x590000
	0x03B8B090 LDRB W8, [X21 + 0xB43]
	0x03B8B094 LDR X19, [X19 + 0x208]
	0x03B8B098 LDR X20, [X20 + 0x848]
	0x03B8B09C TBNZ X8, 0x0, 0x3B8B0CC
	0x03B8B0A0 ADRP X0, 0x590000
	0x03B8B0A4 LDR X0, [X0 + 0x848]
	0x03B8B0A8 BL 0x1C16CF4
	0x03B8B0AC ADRP X0, 0x5D1000
	0x03B8B0B0 LDR X0, [X0 + 0x208]
	0x03B8B0B4 BL 0x1C16CF4
	0x03B8B0B8 ADRP X0, 0x5D1000
	0x03B8B0BC LDR X0, [X0 + 0xD8]
	0x03B8B0C0 BL 0x1C16CF4
	0x03B8B0C4 MOVZ W8, 0x1
	0x03B8B0C8 STRB W8, [X21 + 0xB43]
	0x03B8B0CC LDR X0, [X20]
	0x03B8B0D0 ADRP X20, 0x5D1000
	0x03B8B0D4 LDR X19, [X19]
	0x03B8B0D8 LDR W8, [X0 + 0xE0]
	0x03B8B0DC LDR X20, [X20 + 0xD8]
	0x03B8B0E0 CBNZ W8, 0x3B8B0E8
	0x03B8B0E4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x859000
	008 Move X23, 0x5D3000
	009 Move W8, [X20+2861]
	010 Move X23, [X23+184]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x592000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D3000
	020 Move X0, [X0+408]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D2000
	023 Move X0, [X0+184]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D2000
	026 Move X0, [X0+416]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2861], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x591000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5D2000
	053 Move X8, [X8+408]
	054 Move X21, [X8]
	055 Move X8, 0x5D2000
	056 Move X8, [X8+416]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B8B0E8 MOV X0, X19
	0x03B8B0EC MOV X1, X31
	0x03B8B0F0 BL 0x36FA754
	0x03B8B0F4 LDR X8, [X20]
	0x03B8B0F8 MOV X19, X0
	0x03B8B0FC LDR W9, [X8 + 0xE0]
	0x03B8B100 CBNZ W9, 0x3B8B110
	0x03B8B104 MOV X0, X8
	0x03B8B108 BL 0x1C16DFC
	0x03B8B10C LDR X8, [X20]
	0x03B8B110 LDR X8, [X8 + 0xB8]
	0x03B8B114 STR X19, [X8 + 0x8]
	0x03B8B118 LDP X20, X19, [X31 + 0x10]
	0x03B8B11C LDP X30, X21, [X31], #0x20
	0x03B8B120 RET
	0x03B8B124 RET
	0x03B8B128 B 0x3B8B07C
	0x03B8B12C STP X30, X21, [X31 - 0x20]!
	0x03B8B130 STP X20, X19, [X31 + 0x10]
	0x03B8B134 LDR X8, [X2 + 0x8]
	0x03B8B138 STP X1, X2, [X0 + 0x20]
	0x03B8B13C MOV X19, X0
	0x03B8B140 MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x858000
	005 Move X19, 0x5D2000
	006 Move W8, [X20+2862]
	007 Move X19, [X19+184]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5D2000
	013 Move X0, [X0+184]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2862], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call LookRotationWithForwardProjectedOnPlane_0000092C$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B8B144 STR X8, [X0 + 0x10]
	0x03B8B148 LDRB W21, [X2 + 0x52]
	0x03B8B14C STR X0, [X0 + 0x40]
	0x03B8B150 MOV X0, X2
	0x03B8B154 BL 0x1C16D84
	0x03B8B158 TBZ X0, 0x0, 0x3B8B170
	0x03B8B15C CMP W21, 0x4
	0x03B8B160 B.NE 0x3B8B18C
	0x03B8B164 ADRP X8, 0xFFFFFFFFFE073000
	0x03B8B168 ADD X8, X8, 0x600
	0x03B8B16C B 0x3B8B180
	0x03B8B170 CMP W21, 0x3
	0x03B8B174 B.NE 0x3B8B188
	0x03B8B178 ADRP X8, 0xFFFFFFFFFE073000
	0x03B8B17C ADD X8, X8, 0x5E8
	0x03B8B180 STR X8, [X19 + 0x18]
	0x03B8B184 B 0x3B8B19C
	0x03B8B188 CBZ X20, 0x3B8B1B4
	0x03B8B18C LDR X8, [X19 + 0x10]
	0x03B8B190 LDR X9, [X19 + 0x20]
	0x03B8B194 STR X8, [X19 + 0x18]
	0x03B8B198 STR X9, [X19 + 0x40]
	0x03B8B19C ADRP X8, 0xFFFFFFFFFE073000
	0x03B8B1A0 ADD X8, X8, 0x578
	0x03B8B1A4 STR X8, [X19 + 0x38]
	0x03B8B1A8 LDP X20, X19, [X31 + 0x10]
	0x03B8B1AC LDP X30, X21, [X31], #0x20
	0x03B8B1B0 RET
	0x03B8B1B4 ADRP X1, 0xFFFFFFFFFCF90000
	0x03B8B1B8 ADD X1, X1, 0xEE3
	0x03B8B1BC MOV X0, X31
	0x03B8B1C0 BL 0x1C16F3C
	0x03B8B1C4 MOV X1, X31
	0x03B8B1C8 BL 0x1C16DEC
	0x03B8B1CC LDR X8, [X0 + 0x40]
	0x03B8B1D0 LDR X5, [X0 + 0x18]
	0x03B8B1D4 LDR X4, [X0 + 0x28]
	0x03B8B1D8 MOV X0, X8
	0x03B8B1DC BR X5
	0x03B8B1E0 SUB X31, X31, 0x80
	0x03B8B1E4 STP X30, X27, [X31 + 0x30]
	0x03B8B1E8 STP X26, X25, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x858000
	006 Move X19, 0x5D2000
	007 Move X20, 0x591000
	008 Move W8, [X21+2863]
	009 Move X19, [X19+424]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x591000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D2000
	019 Move X0, [X0+424]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D2000
	022 Move X0, [X0+184]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2863], W8
	026 Move X0, [X20]
	027 Move X20, 0x5D2000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+184]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B8B1EC STP X24, X23, [X31 + 0x50]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B8B1F0 STP X22, X21, [X31 + 0x60]

ISIL:
	001 Call LookRotationWithForwardProjectedOnPlane_0000092C$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 forward, in Unity.Mathematics.float3 planeNormal, out Unity.Mathematics.quaternion lookRotation)

Disassembly:
	0x03B88220 FMUL S2, S5, S3
	0x03B88224 FSUB S3, S6, S7
	0x03B88228 FSUB S1, S4, S1
	0x03B8822C FSUB S0, S0, S2
	0x03B88230 STP S1, S0, [X2]
	0x03B88234 STR S3, [X2 + 0x8]
	0x03B88238 RET
	0x03B8823C SUB X31, X31, 0x50
	0x03B88240 STP X31, X30, [X31 + 0x28]
	0x03B88244 STP X20, X19, [X31 + 0x40]
	0x03B88248 STR X31, [X31 + 0x20]
	0x03B8824C LDP S0, S1, [X0]
	0x03B88250 LDR V2, [X0 + 0x8]
	0x03B88254 MOV X0, X31
	0x03B88258 MOV X19, X2
	0x03B8825C MOV X20, X1
	0x03B88260 BL 0x3887BE4
	0x03B88264 STP S0, S1, [X31 + 0x10]
	0x03B88268 STR S2, [X31 + 0x18]
	0x03B8826C LDP S0, S1, [X20]
	0x03B88270 LDR V2, [X20 + 0x8]
	0x03B88274 MOV X0, X31
	0x03B88278 BL 0x3887BE4
	0x03B8827C ADD X0, X31, 0x10
	0x03B88280 ADD X1, X31, 0x0
	0x03B88284 ADD X2, X31, 0x20
	0x03B88288 STP S0, S1, [X31]
	0x03B8828C STR S2, [X31 + 0x8]
	0x03B88290 BL 0x3B86D20
	0x03B88294 LDP S0, S1, [X31 + 0x20]
	0x03B88298 LDP S2, S3, [X31 + 0x28]
	0x03B8829C MOV X0, X31
	0x03B882A0 BL 0x38BD214
	0x03B882A4 STP S0, S1, [X19]
	0x03B882A8 STP S2, S3, [X19 + 0x8]
	0x03B882AC LDP X20, X19, [X31 + 0x40]
	0x03B882B0 LDR X30, [X31 + 0x30]
	0x03B882B4 ADD X31, X31, 0x50
	0x03B882B8 RET
	0x03B882BC SUB X31, X31, 0x30
	0x03B882C0 STR X30, [X31 + 0x10]
	0x03B882C4 STP X20, X19, [X31 + 0x20]
	0x03B882C8 MOV X19, X2
	0x03B882CC ADD X2, X31, 0x0
	0x03B882D0 MOV X20, X0
	0x03B882D4 STR W31, [X31 + 0x8]
	0x03B882D8 STR X31, [X31]
	0x03B882DC BL 0x3B86A10
	0x03B882E0 LDP S0, S1, [X20]
	0x03B882E4 LDR V2, [X20 + 0x8]
	0x03B882E8 LDP S3, S4, [X31]
	0x03B882EC LDR V5, [X31 + 0x8]
	0x03B882F0 MOV X0, X31
	0x03B882F4 BL 0x3B993E8
	0x03B882F8 STP S0, S1, [X19]
	0x03B882FC STP S2, S3, [X19 + 0x8]
	0x03B88300 LDP X20, X19, [X31 + 0x20]
	0x03B88304 LDR X30, [X31 + 0x10]
	0x03B88308 ADD X31, X31, 0x30
	0x03B8830C RET
	0x03B88310 LDR V1, [X1]
	0x03B88314 LDR V0, [X1 + 0x8]
	0x03B88318 MOVZ W8, 0x34000000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x85B000
	009 Move X23, 0x594000
	010 Move W8, [X22+2864]
	011 Move X23, [X23+2120]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x594000
	020 Move X0, [X0+2120]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D5000
	023 Move X0, [X0+184]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2864], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call BurstCompiler.get_IsEnabled
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {60}
	038 Move X8, 0x5D5000
	039 Move X8, [X8+184]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Call LookRotationWithForwardProjectedOnPlane_0000092C$BurstDirectCall.GetFunctionPointer
	046 Compare X0, 0
	047 JumpIfEqual {60}
	048 Move X3, X0
	049 Move X0, X21
	050 Move X1, X20
	051 Move X2, X19
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Move X23, [X31+24]
	058 Add X31, X31, 64
	059 CallNoReturn X3
	060 Add X2, X31, 0
	061 Move X0, X21
	062 Move X1, X20
	063 Move [X31+8], W31
	064 Move [X31], X31
	065 Call BurstMathUtility.ProjectOnPlane, X0, X1, X2
	066 Move S0, [X31]
	067 Move S1, [X31+4]
	068 Move V2, [X31+8]
	069 Move S3, [X20]
	070 Move S4, [X20+4]
	071 Move V5, [X20+8]
	072 Move X0, X31
	073 Call 0x3B9A3E8
	074 Move [X19], S0
	075 Move [X19+8], S1
	076 Move [X19+8], S2
	077 Move [X19+16], S3
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X30, [X31+16]
	083 Move X23, [X31+24]
	084 Add X31, X31, 64
	085 Return 

