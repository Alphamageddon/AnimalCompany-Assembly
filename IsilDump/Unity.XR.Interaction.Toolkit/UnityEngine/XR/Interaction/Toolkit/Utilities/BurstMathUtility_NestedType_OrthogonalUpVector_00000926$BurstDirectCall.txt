Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/OrthogonalUpVector_00000926$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B89988 ADRP X19, 0x5D3000
	0x03B8998C LDRB W8, [X20 + 0xB24]
	0x03B89990 LDR X19, [X19 + 0xA8]
	0x03B89994 TBNZ X8, 0x0, 0x3B899AC
	0x03B89998 ADRP X0, 0x5D3000
	0x03B8999C LDR X0, [X0 + 0xA8]
	0x03B899A0 BL 0x1C16CF4
	0x03B899A4 MOVZ W8, 0x1
	0x03B899A8 STRB W8, [X20 + 0xB24]
	0x03B899AC LDR X0, [X19]
	0x03B899B0 STR X31, [X31 + 0x8]
	0x03B899B4 LDR W8, [X0 + 0xE0]
	0x03B899B8 CBNZ W8, 0x3B899C0
	0x03B899BC BL 0x1C16DFC
	0x03B899C0 ADD X0, X31, 0x8
	0x03B899C4 BL 0x3B89860
	0x03B899C8 LDR X0, [X31 + 0x8]
	0x03B899CC LDP X20, X19, [X31 + 0x10]
	0x03B899D0 LDR X30, [X31], #0x20
	0x03B899D4 RET
	0x03B899D8 STP X30, X21, [X31 - 0x20]!
	0x03B899DC STP X20, X19, [X31 + 0x10]
	0x03B899E0 ADRP X21, 0x859000
	0x03B899E4 ADRP X19, 0x5D3000
	0x03B899E8 ADRP X20, 0x592000
	0x03B899EC LDRB W8, [X21 + 0xB25]
	0x03B899F0 LDR X19, [X19 + 0x178]
	0x03B899F4 LDR X20, [X20 + 0x848]
	0x03B899F8 TBNZ X8, 0x0, 0x3B89A28
	0x03B899FC ADRP X0, 0x592000
	0x03B89A00 LDR X0, [X0 + 0x848]
	0x03B89A04 BL 0x1C16CF4
	0x03B89A08 ADRP X0, 0x5D3000
	0x03B89A0C LDR X0, [X0 + 0x178]
	0x03B89A10 BL 0x1C16CF4
	0x03B89A14 ADRP X0, 0x5D3000
	0x03B89A18 LDR X0, [X0 + 0xA8]
	0x03B89A1C BL 0x1C16CF4
	0x03B89A20 MOVZ W8, 0x1
	0x03B89A24 STRB W8, [X21 + 0xB25]
	0x03B89A28 LDR X0, [X20]
	0x03B89A2C ADRP X20, 0x5D3000
	0x03B89A30 LDR X19, [X19]
	0x03B89A34 LDR W8, [X0 + 0xE0]
	0x03B89A38 LDR X20, [X20 + 0xA8]
	0x03B89A3C CBNZ W8, 0x3B89A44
	0x03B89A40 BL 0x1C16DFC
	0x03B89A44 MOV X0, X19
	0x03B89A48 MOV X1, X31
	0x03B89A4C BL 0x36FA754
	0x03B89A50 LDR X8, [X20]
	0x03B89A54 MOV X19, X0
	0x03B89A58 LDR W9, [X8 + 0xE0]
	0x03B89A5C CBNZ W9, 0x3B89A6C
	0x03B89A60 MOV X0, X8
	0x03B89A64 BL 0x1C16DFC
	0x03B89A68 LDR X8, [X20]
	0x03B89A6C LDR X8, [X8 + 0xB8]
	0x03B89A70 STR X19, [X8 + 0x8]
	0x03B89A74 LDP X20, X19, [X31 + 0x10]
	0x03B89A78 LDP X30, X21, [X31], #0x20
	0x03B89A7C RET
	0x03B89A80 RET
	0x03B89A84 B 0x3B899D8
	0x03B89A88 STP X30, X21, [X31 - 0x20]!
	0x03B89A8C STP X20, X19, [X31 + 0x10]
	0x03B89A90 LDR X8, [X2 + 0x8]
	0x03B89A94 STP X1, X2, [X0 + 0x20]
	0x03B89A98 MOV X19, X0
	0x03B89A9C MOV X20, X1
	0x03B89AA0 STR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x85A000
	008 Move X23, 0x5D4000
	009 Move W8, [X20+2831]
	010 Move X23, [X23+136]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x593000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D4000
	020 Move X0, [X0+264]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D4000
	023 Move X0, [X0+136]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D4000
	026 Move X0, [X0+272]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2831], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x593000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5D4000
	053 Move X8, [X8+264]
	054 Move X21, [X8]
	055 Move X8, 0x5D4000
	056 Move X8, [X8+272]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B89AA4 LDRB W21, [X2 + 0x52]
	0x03B89AA8 STR X0, [X0 + 0x40]
	0x03B89AAC MOV X0, X2
	0x03B89AB0 BL 0x1C16D84
	0x03B89AB4 TBZ X0, 0x0, 0x3B89ACC
	0x03B89AB8 CMP W21, 0x3
	0x03B89ABC B.NE 0x3B89AE8
	0x03B89AC0 ADRP X8, 0xFFFFFFFFFE075000
	0x03B89AC4 ADD X8, X8, 0x1E0
	0x03B89AC8 B 0x3B89ADC
	0x03B89ACC CMP W21, 0x2
	0x03B89AD0 B.NE 0x3B89AE4
	0x03B89AD4 ADRP X8, 0xFFFFFFFFFE075000
	0x03B89AD8 ADD X8, X8, 0x1C8
	0x03B89ADC STR X8, [X19 + 0x18]
	0x03B89AE0 B 0x3B89AF8
	0x03B89AE4 CBZ X20, 0x3B89B10
	0x03B89AE8 LDR X8, [X19 + 0x10]
	0x03B89AEC LDR X9, [X19 + 0x20]
	0x03B89AF0 STR X8, [X19 + 0x18]
	0x03B89AF4 STR X9, [X19 + 0x40]
	0x03B89AF8 ADRP X8, 0xFFFFFFFFFE075000
	0x03B89AFC ADD X8, X8, 0x168

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x85A000
	005 Move X19, 0x5D4000
	006 Move W8, [X20+2832]
	007 Move X19, [X19+136]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5D4000
	013 Move X0, [X0+136]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2832], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call OrthogonalUpVector_00000926$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B89B00 STR X8, [X19 + 0x38]
	0x03B89B04 LDP X20, X19, [X31 + 0x10]
	0x03B89B08 LDP X30, X21, [X31], #0x20
	0x03B89B0C RET
	0x03B89B10 ADRP X1, 0xFFFFFFFFFCF92000
	0x03B89B14 ADD X1, X1, 0xEE3
	0x03B89B18 MOV X0, X31
	0x03B89B1C BL 0x1C16F3C
	0x03B89B20 MOV X1, X31
	0x03B89B24 BL 0x1C16DEC
	0x03B89B28 LDR X8, [X0 + 0x40]
	0x03B89B2C LDR X5, [X0 + 0x18]
	0x03B89B30 LDR X4, [X0 + 0x28]
	0x03B89B34 MOV X0, X8
	0x03B89B38 BR X5
	0x03B89B3C SUB X31, X31, 0x70
	0x03B89B40 STR X30, [X31 + 0x20]
	0x03B89B44 STP X26, X25, [X31 + 0x30]
	0x03B89B48 STP X24, X23, [X31 + 0x40]
	0x03B89B4C STP X22, X21, [X31 + 0x50]
	0x03B89B50 STP X20, X19, [X31 + 0x60]
	0x03B89B54 ADRP X26, 0x859000
	0x03B89B58 ADRP X25, 0x56A000
	0x03B89B5C LDRB W8, [X26 + 0xB27]
	0x03B89B60 LDR X25, [X25 + 0x5A0]
	0x03B89B64 MOV X19, X5
	0x03B89B68 MOV X20, X4
	0x03B89B6C MOV X22, X3
	0x03B89B70 MOV X23, X2
	0x03B89B74 MOV X24, X1
	0x03B89B78 MOV X21, X0
	0x03B89B7C TBNZ X8, 0x0, 0x3B89B94
	0x03B89B80 ADRP X0, 0x56A000
	0x03B89B84 LDR X0, [X0 + 0x5A0]
	0x03B89B88 BL 0x1C16CF4
	0x03B89B8C MOVZ W8, 0x1
	0x03B89B90 STRB W8, [X26 + 0xB27]
	0x03B89B94 LDR X0, [X25]
	0x03B89B98 MOV X1, X24
	0x03B89B9C STR X31, [X31 + 0x18]
	0x03B89BA0 BL 0x1C16E04
	0x03B89BA4 LDR X8, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x85A000
	006 Move X19, 0x5D4000
	007 Move X20, 0x593000
	008 Move W8, [X21+2833]
	009 Move X19, [X19+280]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x593000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D4000
	019 Move X0, [X0+280]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D4000
	022 Move X0, [X0+136]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2833], W8
	026 Move X0, [X20]
	027 Move X20, 0x5D4000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+136]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B89BA8 STR X0, [X31]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B89BAC MOV X1, X23

ISIL:
	001 Call OrthogonalUpVector_00000926$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in UnityEngine.Vector3 forward, in UnityEngine.Vector3 referenceUp, out UnityEngine.Vector3 orthogonalUp)

Disassembly:
	0x03B878EC BL 0x1C16DFC
	0x03B878F0 BL 0x3B8B020
	0x03B878F4 CBZ X0, 0x3B8791C
	0x03B878F8 MOV X2, X0
	0x03B878FC MOV X0, X20
	0x03B87900 MOV X1, X19
	0x03B87904 LDP X20, X19, [X31 + 0x20]
	0x03B87908 LDP X22, X21, [X31 + 0x10]
	0x03B8790C LDR X30, [X31 + 0x8]
	0x03B87910 MOV V0.16B, V8.16B
	0x03B87914 LDR V8, [X31], #0x30
	0x03B87918 BR X2
	0x03B8791C LDR V0, [X20]
	0x03B87920 LDR V1, [X19]
	0x03B87924 FABD S0, S0, S0
	0x03B87928 FCMP S0, S8
	0x03B8792C B.PL 0x3B8795C
	0x03B87930 LDR V0, [X20 + 0x4]
	0x03B87934 LDR V1, [X19 + 0x4]
	0x03B87938 FABD S0, S0, S0
	0x03B8793C FCMP S0, S8
	0x03B87940 B.PL 0x3B8795C
	0x03B87944 LDR V0, [X20 + 0x8]
	0x03B87948 LDR V1, [X19 + 0x8]
	0x03B8794C FABD S0, S0, S0
	0x03B87950 FCMP S0, S8
	0x03B87954 CSET W0, MI
	0x03B87958 B 0x3B87960
	0x03B8795C MOV W0, W31
	0x03B87960 LDP X20, X19, [X31 + 0x20]
	0x03B87964 LDP X22, X21, [X31 + 0x10]
	0x03B87968 LDR X30, [X31 + 0x8]
	0x03B8796C LDR V8, [X31], #0x30
	0x03B87970 RET
	0x03B87974 STR D8, [X31 - 0x40]!
	0x03B87978 STP X30, X23, [X31 + 0x10]
	0x03B8797C STP X22, X21, [X31 + 0x20]
	0x03B87980 STP X20, X19, [X31 + 0x30]
	0x03B87984 ADRP X22, 0x85B000
	0x03B87988 ADRP X23, 0x5D5000
	0x03B8798C LDRB W8, [X22 + 0xB09]
	0x03B87990 LDR X23, [X23 + 0xE0]
	0x03B87994 MOV V8.16B, V0.16B
	0x03B87998 MOV X19, X2
	0x03B8799C MOV X20, X1
	0x03B879A0 MOV X21, X0
	0x03B879A4 TBNZ X8, 0x0, 0x3B879BC
	0x03B879A8 ADRP X0, 0x5D5000
	0x03B879AC LDR X0, [X0 + 0xE0]
	0x03B879B0 BL 0x1C16CF4
	0x03B879B4 MOVZ W8, 0x1
	0x03B879B8 STRB W8, [X22 + 0xB09]
	0x03B879BC LDR X0, [X23]
	0x03B879C0 LDR W8, [X0 + 0xE0]
	0x03B879C4 CBNZ W8, 0x3B879CC
	0x03B879C8 BL 0x1C16DFC
	0x03B879CC MOV X0, X21
	0x03B879D0 MOV X1, X20
	0x03B879D4 MOV X2, X19
	0x03B879D8 LDP X20, X19, [X31 + 0x30]
	0x03B879DC LDP X22, X21, [X31 + 0x20]
	0x03B879E0 LDP X30, X23, [X31 + 0x10]
	0x03B879E4 MOV V0.16B, V8.16B
	0x03B879E8 LDR V8, [X31], #0x40
	0x03B879EC B 0x3B879F0
	0x03B879F0 SUB X31, X31, 0x70
	0x03B879F4 STR D8, [X31 + 0x30]
	0x03B879F8 STP X30, X23, [X31 + 0x40]
	0x03B879FC STP X22, X21, [X31 + 0x50]
	0x03B87A00 STP X20, X19, [X31 + 0x60]
	0x03B87A04 ADRP X22, 0x85B000
	0x03B87A08 ADRP X23, 0x594000
	0x03B87A0C LDRB W8, [X22 + 0xB49]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0x85C000
	009 Move X23, 0x595000
	010 Move W8, [X22+2834]
	011 Move X23, [X23+2120]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x595000
	020 Move X0, [X0+2120]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D6000
	023 Move X0, [X0+136]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2834], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call BurstCompiler.get_IsEnabled
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {60}
	038 Move X8, 0x5D6000
	039 Move X8, [X8+136]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Call OrthogonalUpVector_00000926$BurstDirectCall.GetFunctionPointer
	046 Compare X0, 0
	047 JumpIfEqual {60}
	048 Move X3, X0
	049 Move X0, X21
	050 Move X1, X20
	051 Move X2, X19
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Add X31, X31, 96
	059 CallNoReturn X3
	060 Move [X31+40], W31
	061 Move [X31+32], X31
	062 Move S0, [X21]
	063 Move S1, [X21+4]
	064 Move V2, [X21+8]
	065 Move X0, X31
	066 Call float3.op_Implicit, X0
	067 Move [X31+16], S0
	068 Move [X31+24], S1
	069 Move [X31+24], S2
	070 Move S0, [X20]
	071 Move S1, [X20+4]
	072 Move V2, [X20+8]
	073 Move X0, X31
	074 Call float3.op_Implicit, X0
	075 Add X0, X31, 16
	076 Add X1, X31, 0
	077 Add X2, X31, 32
	078 Move [X31], S0
	079 Move [X31+8], S1
	080 Move [X31+8], S2
	081 Call BurstMathUtility.OrthogonalUpVector, X0, X1, X2
	082 Move S0, [X31+32]
	083 Move S1, [X31+36]
	084 Move V2, [X31+40]
	085 Move X0, X31
	086 Call float3.op_Implicit, X0
	087 Move [X19], S0
	088 Move [X19+8], S1
	089 Move [X19+8], S2
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Add X31, X31, 96
	097 Return 

