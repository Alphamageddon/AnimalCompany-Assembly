Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/OrthogonalUpVector_00000927$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B89BB0 MOV X0, X8
	0x03B89BB4 BL 0x1C16E04
	0x03B89BB8 LDR X8, [X25]
	0x03B89BBC STR X0, [X31 + 0x8]
	0x03B89BC0 MOV X1, X22
	0x03B89BC4 MOV X0, X8
	0x03B89BC8 BL 0x1C16E04
	0x03B89BCC STR X0, [X31 + 0x10]
	0x03B89BD0 ADD X1, X31, 0x0
	0x03B89BD4 MOV X0, X21
	0x03B89BD8 MOV X2, X20
	0x03B89BDC MOV X3, X19
	0x03B89BE0 BL 0x1C16CB0
	0x03B89BE4 LDP X20, X19, [X31 + 0x60]
	0x03B89BE8 LDP X22, X21, [X31 + 0x50]
	0x03B89BEC LDP X24, X23, [X31 + 0x40]
	0x03B89BF0 LDP X26, X25, [X31 + 0x30]
	0x03B89BF4 LDR X30, [X31 + 0x20]
	0x03B89BF8 ADD X31, X31, 0x70
	0x03B89BFC RET
	0x03B89C00 MOV X0, X1
	0x03B89C04 MOV X1, X31
	0x03B89C08 B 0x1C16CB4
	0x03B89C0C STP X30, X23, [X31 - 0x30]!
	0x03B89C10 STP X22, X21, [X31 + 0x10]
	0x03B89C14 STP X20, X19, [X31 + 0x20]
	0x03B89C18 ADRP X20, 0x859000
	0x03B89C1C ADRP X23, 0x5D3000
	0x03B89C20 LDRB W8, [X20 + 0xB28]
	0x03B89C24 LDR X23, [X23 + 0xB0]
	0x03B89C28 MOV X19, X0
	0x03B89C2C TBNZ X8, 0x0, 0x3B89C68
	0x03B89C30 ADRP X0, 0x592000
	0x03B89C34 LDR X0, [X0 + 0x848]
	0x03B89C38 BL 0x1C16CF4
	0x03B89C3C ADRP X0, 0x5D3000
	0x03B89C40 LDR X0, [X0 + 0x180]
	0x03B89C44 BL 0x1C16CF4
	0x03B89C48 ADRP X0, 0x5D3000
	0x03B89C4C LDR X0, [X0 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33075200
	021 Add X8, X8, 3920
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33075200
	024 Add X8, X8, 3896
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33075200
	033 Add X8, X8, 3800
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50778112
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 forward, in Unity.Mathematics.float3 referenceUp, out Unity.Mathematics.float3 orthogonalUp)

Disassembly:
	0x03B89C50 BL 0x1C16CF4
	0x03B89C54 ADRP X0, 0x5D3000
	0x03B89C58 LDR X0, [X0 + 0x188]
	0x03B89C5C BL 0x1C16CF4
	0x03B89C60 MOVZ W8, 0x1

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 forward, in Unity.Mathematics.float3 referenceUp, out Unity.Mathematics.float3 orthogonalUp, System.AsyncCallback param_3, System.Object param_4)

Disassembly:
	0x03B89C64 STRB W8, [X20 + 0xB28]
	0x03B89C68 LDR X8, [X23]
	0x03B89C6C LDR W9, [X8 + 0xE0]
	0x03B89C70 CBNZ W9, 0x3B89C80
	0x03B89C74 MOV X0, X8
	0x03B89C78 BL 0x1C16DFC
	0x03B89C7C LDR X8, [X23]
	0x03B89C80 LDR X9, [X8 + 0xB8]
	0x03B89C84 LDR X10, [X9]
	0x03B89C88 CBNZ X10, 0x3B89CF8
	0x03B89C8C LDR W10, [X8 + 0xE0]
	0x03B89C90 CBNZ W10, 0x3B89CA4
	0x03B89C94 MOV X0, X8
	0x03B89C98 BL 0x1C16DFC
	0x03B89C9C LDR X8, [X23]
	0x03B89CA0 LDR X9, [X8 + 0xB8]
	0x03B89CA4 ADRP X8, 0x592000
	0x03B89CA8 LDR X20, [X9 + 0x8]
	0x03B89CAC LDR X8, [X8 + 0x848]
	0x03B89CB0 LDR X0, [X8]
	0x03B89CB4 ADRP X8, 0x5D3000
	0x03B89CB8 LDR X8, [X8 + 0x180]
	0x03B89CBC LDR X21, [X8]
	0x03B89CC0 ADRP X8, 0x5D3000
	0x03B89CC4 LDR X8, [X8 + 0x188]
	0x03B89CC8 LDR W9, [X0 + 0xE0]
	0x03B89CCC LDR X22, [X8]
	0x03B89CD0 CBNZ W9, 0x3B89CD8
	0x03B89CD4 BL 0x1C16DFC
	0x03B89CD8 MOV X0, X20
	0x03B89CDC MOV X1, X21
	0x03B89CE0 MOV X2, X22
	0x03B89CE4 MOV X3, X31
	0x03B89CE8 BL 0x36FAD70
	0x03B89CEC LDR X8, [X23]
	0x03B89CF0 LDR X9, [X8 + 0xB8]
	0x03B89CF4 STR X0, [X9]
	0x03B89CF8 LDR W9, [X8 + 0xE0]
	0x03B89CFC CBNZ W9, 0x3B89D0C
	0x03B89D00 MOV X0, X8
	0x03B89D04 BL 0x1C16DFC
	0x03B89D08 LDR X8, [X23]
	0x03B89D0C LDR X8, [X8 + 0xB8]
	0x03B89D10 LDP X22, X21, [X31 + 0x10]
	0x03B89D14 LDR X8, [X8]
	0x03B89D18 STR X8, [X19]
	0x03B89D1C LDP X20, X19, [X31 + 0x20]
	0x03B89D20 LDP X30, X23, [X31], #0x30
	0x03B89D24 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0x85A000
	012 Move X25, 0x596000
	013 Move W8, [X26+2835]
	014 Move X25, [X25+2104]
	015 Move X19, X5
	016 Move X20, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x596000
	026 Move X0, [X0+2104]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+2835], W8
	030 Move X0, [X25]
	031 Move X1, X24
	032 Move [X31+24], X31
	033 Call 0x1C17E04
	034 Move X8, [X25]
	035 Move [X31], X0
	036 Move X1, X23
	037 Move X0, X8
	038 Call 0x1C17E04
	039 Move X8, [X25]
	040 Move [X31+8], X0
	041 Move X1, X22
	042 Move X0, X8
	043 Call 0x1C17E04
	044 Move [X31+16], X0
	045 Add X1, X31, 0
	046 Move X0, X21
	047 Move X2, X20
	048 Move X3, X19
	049 Call 0x1C17CB0
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X24, [X31+64]
	055 Move X23, [X31+72]
	056 Move X26, [X31+48]
	057 Move X25, [X31+56]
	058 Move X30, [X31+32]
	059 Add X31, X31, 112
	060 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B89D28 STR X30, [X31 - 0x20]!
	0x03B89D2C STP X20, X19, [X31 + 0x10]
	0x03B89D30 ADRP X20, 0x859000

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

