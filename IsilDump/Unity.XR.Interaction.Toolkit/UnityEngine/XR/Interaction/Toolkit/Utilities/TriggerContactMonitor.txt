Type: UnityEngine.XR.Interaction.Toolkit.Utilities.TriggerContactMonitor

Method: System.Void add_contactAdded(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> value)

Disassembly:
	0x03B910F0 ADRP X0, 0x5C2000
	0x03B910F4 LDR X0, [X0 + 0x898]
	0x03B910F8 BL 0x1C16CF4
	0x03B910FC ADRP X0, 0x5CB000
	0x03B91100 LDR X0, [X0 + 0x570]
	0x03B91104 BL 0x1C16CF4
	0x03B91108 ADRP X0, 0x5C9000
	0x03B9110C LDR X0, [X0 + 0xE50]
	0x03B91110 BL 0x1C16CF4
	0x03B91114 MOVZ W8, 0x1
	0x03B91118 STRB W8, [X21 + 0xB92]
	0x03B9111C LDR X0, [X23]
	0x03B91120 STP X31, X31, [X31 + 0x30]
	0x03B91124 STR X31, [X31 + 0x40]
	0x03B91128 STP X31, X31, [X31 + 0x18]
	0x03B9112C STR X31, [X31 + 0x28]
	0x03B91130 LDR W8, [X0 + 0xE0]
	0x03B91134 CBNZ W8, 0x3B91140
	0x03B91138 BL 0x1C16DFC
	0x03B9113C LDR X0, [X23]
	0x03B91140 LDR X8, [X0 + 0xB8]
	0x03B91144 LDR X8, [X8 + 0x8]
	0x03B91148 CBZ X8, 0x3B91410
	0x03B9114C LDP W2, W9, [X8 + 0x18]
	0x03B91150 ADD W9, W9, 0x1
	0x03B91154 CMP W2, 0x1
	0x03B91158 STP W31, W9, [X8 + 0x18]
	0x03B9115C B.LT 0x3B91170
	0x03B91160 LDR X0, [X8 + 0x10]
	0x03B91164 MOV W1, W31
	0x03B91168 MOV X3, X31
	0x03B9116C BL 0x339FA34
	0x03B91170 LDR X0, [X19 + 0x28]
	0x03B91174 CBZ X0, 0x3B91410
	0x03B91178 ADRP X8, 0x5CB000
	0x03B9117C LDR X8, [X8 + 0x540]
	0x03B91180 LDR X1, [X8]
	0x03B91184 BL 0x2AA4E88
	0x03B91188 CMP W0, 0x1
	0x03B9118C B.LT 0x3B912B8
	0x03B91190 LDR X0, [X19 + 0x28]
	0x03B91194 CBZ X0, 0x3B91410
	0x03B91198 ADRP X8, 0x5CB000
	0x03B9119C LDR X8, [X8 + 0x548]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x852000
	009 Move W8, [X21+2953]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5CA000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2953], W8
	021 Move X24, 0x5CA000
	022 Add X20, X20, 16
	023 Move X21, [X20]
	024 Move X24, [X24+3560]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_contactAdded(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> value)

Disassembly:
	0x03B911A0 LDR X1, [X8]
	0x03B911A4 BL 0x2AA4E98
	0x03B911A8 CBZ X0, 0x3B91410
	0x03B911AC ADRP X8, 0x5CB000
	0x03B911B0 LDR X8, [X8 + 0x568]
	0x03B911B4 ADRP X24, 0x5CB000
	0x03B911B8 ADRP X25, 0x5CA000
	0x03B911BC LDR X24, [X24 + 0x558]
	0x03B911C0 LDR X25, [X25 + 0x350]
	0x03B911C4 LDR X1, [X8]
	0x03B911C8 ADRP X26, 0x5CB000
	0x03B911CC ADRP X27, 0x5CB000
	0x03B911D0 ADRP X22, 0x5CB000
	0x03B911D4 LDR X26, [X26 + 0x500]
	0x03B911D8 LDR X27, [X27 + 0x528]
	0x03B911DC LDR X22, [X22 + 0x550]
	0x03B911E0 ADD X8, X31, 0x0
	0x03B911E4 BL 0x2EC7020
	0x03B911E8 LDR V0, [X31]
	0x03B911EC LDR X8, [X31 + 0x10]
	0x03B911F0 STR V0, [X31 + 0x3]
	0x03B911F4 STR X8, [X31 + 0x40]
	0x03B911F8 LDR X1, [X24]
	0x03B911FC ADD X0, X31, 0x30
	0x03B91200 BL 0x2C0B090
	0x03B91204 TBZ X0, 0x0, 0x3B912AC
	0x03B91208 CBZ X20, 0x3B913F8
	0x03B9120C LDR X21, [X31 + 0x40]
	0x03B91210 LDR X2, [X25]
	0x03B91214 MOV X0, X20
	0x03B91218 MOV X1, X21
	0x03B9121C BL 0x2DBE4B0
	0x03B91220 TBZ X0, 0x0, 0x3B91238
	0x03B91224 LDR X2, [X26]
	0x03B91228 MOV X0, X20
	0x03B9122C MOV X1, X21
	0x03B91230 BL 0x2DBE67C
	0x03B91234 B 0x3B911F8
	0x03B91238 LDR X0, [X23]
	0x03B9123C LDR W8, [X0 + 0xE0]
	0x03B91240 CBNZ W8, 0x3B9124C
	0x03B91244 BL 0x1C16DFC
	0x03B91248 LDR X0, [X23]
	0x03B9124C LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x852000
	009 Move W8, [X21+2954]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5CA000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2954], W8
	021 Move X24, 0x5CA000
	022 Add X20, X20, 16
	023 Move X21, [X20]
	024 Move X24, [X24+3560]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_contactRemoved(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> value)

Disassembly:
	0x03B91250 LDR X0, [X8 + 0x8]
	0x03B91254 CBZ X0, 0x3B91408
	0x03B91258 LDR W10, [X0 + 0x1C]
	0x03B9125C LDR X8, [X0 + 0x10]
	0x03B91260 LDR X9, [X27]
	0x03B91264 ADD W10, W10, 0x1
	0x03B91268 STR W10, [X0 + 0x1C]
	0x03B9126C CBZ X8, 0x3B91400
	0x03B91270 LDRSW X10, [X0 + 0x18]
	0x03B91274 LDR W11, [X8 + 0x18]
	0x03B91278 CMP W10, W11
	0x03B9127C B.CS 0x3B91294
	0x03B91280 ADD W9, W10, 0x1
	0x03B91284 ADD X8, X8, X10, 0x3, LSL
	0x03B91288 STR W9, [X0 + 0x18]
	0x03B9128C STR X21, [X8 + 0x20]
	0x03B91290 B 0x3B911F8
	0x03B91294 LDR X8, [X9 + 0x20]
	0x03B91298 LDR X8, [X8 + 0xC0]
	0x03B9129C LDR X2, [X8 + 0x70]
	0x03B912A0 MOV X1, X21
	0x03B912A4 BL 0x301BF90
	0x03B912A8 B 0x3B911F8
	0x03B912AC LDR X1, [X22]
	0x03B912B0 ADD X0, X31, 0x30
	0x03B912B4 BL 0x2C0B08C
	0x03B912B8 CBZ X20, 0x3B91410
	0x03B912BC LDR W8, [X20 + 0x20]
	0x03B912C0 CMP W8, 0x1
	0x03B912C4 B.LT 0x3B9131C
	0x03B912C8 ADRP X8, 0x5C9000
	0x03B912CC LDR X8, [X8 + 0x678]
	0x03B912D0 ADRP X21, 0x5C9000
	0x03B912D4 ADRP X22, 0x5C9000
	0x03B912D8 MOV X0, X20
	0x03B912DC LDR X1, [X8]
	0x03B912E0 LDR X21, [X21 + 0x668]
	0x03B912E4 LDR X22, [X22 + 0x660]
	0x03B912E8 ADD X8, X31, 0x18
	0x03B912EC BL 0x2DBE924
	0x03B912F0 LDR X1, [X21]
	0x03B912F4 ADD X0, X31, 0x18
	0x03B912F8 BL 0x2BC3C64
	0x03B912FC TBZ X0, 0x0, 0x3B91310

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x852000
	009 Move W8, [X21+2955]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5CA000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2955], W8
	021 Move X24, 0x5CA000
	022 Add X20, X20, 24
	023 Move X21, [X20]
	024 Move X24, [X24+3560]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_contactRemoved(System.Action`1<UnityEngine.XR.Interaction.Toolkit.IXRInteractable> value)

Disassembly:
	0x03B91300 LDR X1, [X31 + 0x28]
	0x03B91304 MOV X0, X19
	0x03B91308 BL 0x3B903C0
	0x03B9130C B 0x3B912F0
	0x03B91310 LDR X1, [X22]
	0x03B91314 ADD X0, X31, 0x18
	0x03B91318 BL 0x2BC3C60
	0x03B9131C LDR X0, [X23]
	0x03B91320 LDR W8, [X0 + 0xE0]
	0x03B91324 CBNZ W8, 0x3B91330
	0x03B91328 BL 0x1C16DFC
	0x03B9132C LDR X0, [X23]
	0x03B91330 LDR X8, [X0 + 0xB8]
	0x03B91334 LDR X20, [X8 + 0x8]
	0x03B91338 CBZ X20, 0x3B91410
	0x03B9133C LDR W8, [X20 + 0x18]
	0x03B91340 CMP W8, 0x0
	0x03B91344 B.LE 0x3B913DC
	0x03B91348 ADRP X22, 0x564000
	0x03B9134C ADRP X21, 0x5CB000
	0x03B91350 LDR W8, [X0 + 0xE0]
	0x03B91354 LDR X22, [X22 + 0x6D0]
	0x03B91358 LDR X21, [X21 + 0x570]
	0x03B9135C CBNZ W8, 0x3B91370
	0x03B91360 BL 0x1C16DFC
	0x03B91364 LDR X8, [X23]
	0x03B91368 LDR X8, [X8 + 0xB8]
	0x03B9136C LDR X20, [X8 + 0x8]
	0x03B91370 LDR X0, [X22]
	0x03B91374 BL 0x1C16F10
	0x03B91378 LDR X2, [X21]
	0x03B9137C MOV X1, X19
	0x03B91380 MOV X3, X31
	0x03B91384 MOV X21, X0
	0x03B91388 BL 0x2A6B948
	0x03B9138C CBZ X20, 0x3B91410
	0x03B91390 ADRP X8, 0x5CB000
	0x03B91394 LDR X8, [X8 + 0x530]
	0x03B91398 MOV X0, X20
	0x03B9139C MOV X1, X21
	0x03B913A0 LDR X2, [X8]
	0x03B913A4 BL 0x301CAA0
	0x03B913A8 LDR X8, [X23]
	0x03B913AC LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x852000
	009 Move W8, [X21+2956]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5CA000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2956], W8
	021 Move X24, 0x5CA000
	022 Add X20, X20, 24
	023 Move X21, [X20]
	024 Move X24, [X24+3560]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager get_interactionManager()

Disassembly:
	0x03B913B0 LDR X8, [X8 + 0x8]
	0x03B913B4 CBZ X8, 0x3B91410

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_interactionManager(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager value)

Disassembly:
	0x03B913B8 LDP W2, W9, [X8 + 0x18]
	0x03B913BC ADD W9, W9, 0x1

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void AddCollider(UnityEngine.Collider collider)

Disassembly:
	0x03B913C0 CMP W2, 0x1
	0x03B913C4 STP W31, W9, [X8 + 0x18]
	0x03B913C8 B.LT 0x3B913DC
	0x03B913CC LDR X0, [X8 + 0x10]
	0x03B913D0 MOV W1, W31
	0x03B913D4 MOV X3, X31
	0x03B913D8 BL 0x339FA34
	0x03B913DC LDP X20, X19, [X31 + 0x90]
	0x03B913E0 LDP X22, X21, [X31 + 0x80]
	0x03B913E4 LDP X24, X23, [X31 + 0x70]
	0x03B913E8 LDP X26, X25, [X31 + 0x60]
	0x03B913EC LDP X30, X27, [X31 + 0x50]
	0x03B913F0 ADD X31, X31, 0xA0
	0x03B913F4 RET
	0x03B913F8 MOV X24, X22
	0x03B913FC BL 0x1C16F20
	0x03B91400 MOV X24, X22
	0x03B91404 BL 0x1C16F20
	0x03B91408 MOV X24, X22
	0x03B9140C BL 0x1C16F20
	0x03B91410 BL 0x1C16F20
	0x03B91414 B 0x3B91430
	0x03B91418 B 0x3B91430
	0x03B9141C B 0x3B91430
	0x03B91420 B 0x3B91434
	0x03B91424 B 0x3B91434
	0x03B91428 B 0x3B91430
	0x03B9142C B 0x3B9148C
	0x03B91430 MOV X24, X22
	0x03B91434 MOV X21, X0
	0x03B91438 CMP W1, 0x1
	0x03B9143C B.NE 0x3B91468
	0x03B91440 MOV X0, X21
	0x03B91444 BL 0x3EB1AD0
	0x03B91448 LDR X22, [X0]
	0x03B9144C BL 0x3EB1AE0
	0x03B91450 LDR X1, [X24]
	0x03B91454 ADD X0, X31, 0x30
	0x03B91458 BL 0x2C0B08C
	0x03B9145C CBZ X22, 0x3B912B8
	0x03B91460 MOV X0, X22
	0x03B91464 BL 0x1C16F18
	0x03B91468 MOV X22, X31
	0x03B9146C B 0x3B91474
	0x03B91470 MOV X21, X0
	0x03B91474 LDR X1, [X24]
	0x03B91478 ADD X0, X31, 0x30
	0x03B9147C BL 0x2C0B08C
	0x03B91480 CBZ X22, 0x3B914DC
	0x03B91484 MOV X0, X22
	0x03B91488 BL 0x1C16F18
	0x03B9148C MOV X21, X0
	0x03B91490 CMP W1, 0x1
	0x03B91494 B.NE 0x3B914C0
	0x03B91498 MOV X0, X21
	0x03B9149C BL 0x3EB1AD0
	0x03B914A0 LDR X20, [X0]
	0x03B914A4 BL 0x3EB1AE0
	0x03B914A8 LDR X1, [X22]
	0x03B914AC ADD X0, X31, 0x18
	0x03B914B0 BL 0x2BC3C60
	0x03B914B4 CBZ X20, 0x3B9131C
	0x03B914B8 MOV X0, X20
	0x03B914BC BL 0x1C16F18
	0x03B914C0 MOV X20, X31
	0x03B914C4 B 0x3B914CC
	0x03B914C8 MOV X21, X0
	0x03B914CC LDR X1, [X22]
	0x03B914D0 ADD X0, X31, 0x18
	0x03B914D4 BL 0x2BC3C60
	0x03B914D8 CBNZ X20, 0x3B914E4
	0x03B914DC MOV X0, X21
	0x03B914E0 BL 0x1D2C690
	0x03B914E4 MOV X0, X20
	0x03B914E8 BL 0x1C16F18
	0x03B914EC BL 0x1990590
	0x03B914F0 STP X30, X21, [X31 - 0x20]!
	0x03B914F4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x852000
	007 Move X21, 0x563000
	008 Move W8, [X22+2957]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x5CC000
	017 Move X0, [X0+1272]
	018 Call 0x1C17CF4
	019 Move X0, 0x5CA000
	020 Move X0, [X0+1920]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CB000
	023 Move X0, [X0+2088]
	024 Call 0x1C17CF4
	025 Move X0, 0x563000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2957], W8
	030 Move X0, [X21]
	031 Move [X31+8], X31
	032 Move X21, [X19+32]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {93}
	045 Move X0, [X19+32]
	046 Compare X0, 0
	047 JumpIfEqual {99}
	048 Add X2, X31, 8
	049 Move X1, X20
	050 Move X3, X31
	051 Call XRInteractionManager.TryGetInteractableForCollider, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {85}
	056 Move X0, [X19+40]
	057 Compare X0, 0
	058 JumpIfEqual {99}
	059 Move X8, 0x5CC000
	060 Move X2, [X31+8]
	061 Move X8, [X8+1272]
	062 Move X1, X20
	063 Move X3, [X8]
	064 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	065 Move X0, [X19+48]
	066 Compare X0, 0
	067 JumpIfEqual {99}
	068 Move X8, 0x5CB000
	069 Move X1, [X31+8]
	070 Move X8, [X8+2088]
	071 Move X2, [X8]
	072 Call HashSet`1<Object>.Add, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {93}
	077 Move X8, [X19+16]
	078 Compare X8, 0
	079 JumpIfEqual {93}
	080 Move X1, [X31+8]
	081 Move X9, [X8+24]
	082 Move X0, [X8+64]
	083 Move X2, [X8+40]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X0, [X19+56]
	086 Compare X0, 0
	087 JumpIfEqual {99}
	088 Move X8, 0x5CA000
	089 Move X8, [X8+1920]
	090 Move X1, X20
	091 Move X2, [X8]
	092 Call HashSet`1<Object>.Add, X0, X1
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Return 
	099 Call 0x1C17F20

Method: System.Void RemoveCollider(UnityEngine.Collider collider)

Disassembly:
	0x03B914F8 ADRP X21, 0x851000
	0x03B914FC LDRB W8, [X21 + 0xB93]
	0x03B91500 MOV X19, X1
	0x03B91504 MOV X20, X0
	0x03B91508 TBNZ X8, 0x0, 0x3B91520
	0x03B9150C ADRP X0, 0x5CA000
	0x03B91510 LDR X0, [X0 + 0x838]
	0x03B91514 BL 0x1C16CF4
	0x03B91518 MOVZ W8, 0x1
	0x03B9151C STRB W8, [X21 + 0xB93]
	0x03B91520 LDR X0, [X20 + 0x30]
	0x03B91524 CBZ X0, 0x3B91544
	0x03B91528 ADRP X8, 0x5CA000
	0x03B9152C LDR X8, [X8 + 0x838]
	0x03B91530 MOV X1, X19
	0x03B91534 LDP X20, X19, [X31 + 0x10]
	0x03B91538 LDR X2, [X8]
	0x03B9153C LDP X30, X21, [X31], #0x20
	0x03B91540 B 0x2DBE4B0
	0x03B91544 BL 0x1C16F20
	0x03B91548 STP X30, X21, [X31 - 0x20]!
	0x03B9154C STP X20, X19, [X31 + 0x10]
	0x03B91550 ADRP X20, 0x851000
	0x03B91554 ADRP X21, 0x562000
	0x03B91558 LDRB W8, [X20 + 0xB94]
	0x03B9155C LDR X21, [X21 + 0x598]
	0x03B91560 MOV X19, X0
	0x03B91564 TBNZ X8, 0x0, 0x3B9157C
	0x03B91568 ADRP X0, 0x562000
	0x03B9156C LDR X0, [X0 + 0x598]
	0x03B91570 BL 0x1C16CF4
	0x03B91574 MOVZ W8, 0x1
	0x03B91578 STRB W8, [X20 + 0xB94]
	0x03B9157C LDR X0, [X21]
	0x03B91580 LDR W8, [X0 + 0xE0]
	0x03B91584 CBNZ W8, 0x3B9158C
	0x03B91588 BL 0x1C16DFC
	0x03B9158C MOV X0, X19
	0x03B91590 LDP X20, X19, [X31 + 0x10]
	0x03B91594 MOV X1, X31
	0x03B91598 MOV X2, X31
	0x03B9159C LDP X30, X21, [X31], #0x20
	0x03B915A0 B 0x3C3883C
	0x03B915A4 STR X30, [X31 - 0x50]!
	0x03B915A8 STP X26, X25, [X31 + 0x10]
	0x03B915AC STP X24, X23, [X31 + 0x20]
	0x03B915B0 STP X22, X21, [X31 + 0x30]
	0x03B915B4 STP X20, X19, [X31 + 0x40]
	0x03B915B8 ADRP X25, 0x851000
	0x03B915BC ADRP X26, 0x5CA000
	0x03B915C0 ADRP X20, 0x5CA000
	0x03B915C4 ADRP X24, 0x5CA000
	0x03B915C8 ADRP X23, 0x5CA000
	0x03B915CC ADRP X22, 0x5C9000
	0x03B915D0 ADRP X21, 0x5C9000
	0x03B915D4 LDR X26, [X26 + 0x928]
	0x03B915D8 LDRB W8, [X25 + 0xB95]
	0x03B915DC LDR X20, [X20 + 0x910]
	0x03B915E0 LDR X24, [X24 + 0x9B8]
	0x03B915E4 LDR X23, [X23 + 0x9A0]
	0x03B915E8 LDR X22, [X22 + 0x830]
	0x03B915EC LDR X21, [X21 + 0x828]
	0x03B915F0 MOV X19, X0
	0x03B915F4 TBNZ X8, 0x0, 0x3B91648
	0x03B915F8 ADRP X0, 0x5CA000
	0x03B915FC LDR X0, [X0 + 0x910]
	0x03B91600 BL 0x1C16CF4
	0x03B91604 ADRP X0, 0x5CA000
	0x03B91608 LDR X0, [X0 + 0x928]
	0x03B9160C BL 0x1C16CF4
	0x03B91610 ADRP X0, 0x5CA000
	0x03B91614 LDR X0, [X0 + 0x9A0]
	0x03B91618 BL 0x1C16CF4
	0x03B9161C ADRP X0, 0x5C9000
	0x03B91620 LDR X0, [X0 + 0x828]
	0x03B91624 BL 0x1C16CF4
	0x03B91628 ADRP X0, 0x5C9000
	0x03B9162C LDR X0, [X0 + 0x830]
	0x03B91630 BL 0x1C16CF4
	0x03B91634 ADRP X0, 0x5CA000
	0x03B91638 LDR X0, [X0 + 0x9B8]
	0x03B9163C BL 0x1C16CF4
	0x03B91640 MOVZ W8, 0x1
	0x03B91644 STRB W8, [X25 + 0xB95]
	0x03B91648 LDR X0, [X26]
	0x03B9164C BL 0x1C16F10
	0x03B91650 LDR X1, [X20]
	0x03B91654 MOV X20, X0
	0x03B91658 BL 0x2AA4804
	0x03B9165C STR X20, [X19 + 0x28]
	0x03B91660 LDR X0, [X24]
	0x03B91664 BL 0x1C16F10
	0x03B91668 LDR X1, [X23]
	0x03B9166C MOV X20, X0
	0x03B91670 BL 0x2DBDE08
	0x03B91674 STR X20, [X19 + 0x30]
	0x03B91678 LDR X0, [X22]
	0x03B9167C BL 0x1C16F10
	0x03B91680 LDR X1, [X21]
	0x03B91684 MOV X20, X0
	0x03B91688 BL 0x2DBDE08
	0x03B9168C STR X20, [X19 + 0x38]
	0x03B91690 MOV X0, X19
	0x03B91694 LDP X20, X19, [X31 + 0x40]
	0x03B91698 LDP X22, X21, [X31 + 0x30]
	0x03B9169C LDP X24, X23, [X31 + 0x20]
	0x03B916A0 LDP X26, X25, [X31 + 0x10]
	0x03B916A4 MOV X1, X31
	0x03B916A8 LDR X30, [X31], #0x50
	0x03B916AC B 0x33BDD8C
	0x03B916B0 STR X30, [X31 - 0x30]!
	0x03B916B4 STP X22, X21, [X31 + 0x10]
	0x03B916B8 STP X20, X19, [X31 + 0x20]
	0x03B916BC ADRP X19, 0x851000
	0x03B916C0 ADRP X22, 0x58E000
	0x03B916C4 ADRP X21, 0x58E000
	0x03B916C8 ADRP X20, 0x5C9000
	0x03B916CC LDRB W8, [X19 + 0xB96]
	0x03B916D0 LDR X22, [X22 + 0xC48]
	0x03B916D4 LDR X21, [X21 + 0xC50]
	0x03B916D8 LDR X20, [X20 + 0xE50]
	0x03B916DC TBNZ X8, 0x0, 0x3B9170C
	0x03B916E0 ADRP X0, 0x58E000
	0x03B916E4 LDR X0, [X0 + 0xC50]
	0x03B916E8 BL 0x1C16CF4
	0x03B916EC ADRP X0, 0x58E000
	0x03B916F0 LDR X0, [X0 + 0xC48]
	0x03B916F4 BL 0x1C16CF4
	0x03B916F8 ADRP X0, 0x5C9000
	0x03B916FC LDR X0, [X0 + 0xE50]
	0x03B91700 BL 0x1C16CF4
	0x03B91704 MOVZ W8, 0x1
	0x03B91708 STRB W8, [X19 + 0xB96]
	0x03B9170C LDR X0, [X22]
	0x03B91710 BL 0x1C16F10
	0x03B91714 LDR X1, [X21]
	0x03B91718 MOV X19, X0
	0x03B9171C BL 0x301B7C4
	0x03B91720 LDR X8, [X20]
	0x03B91724 LDR X8, [X8 + 0xB8]
	0x03B91728 STR X19, [X8]
	0x03B9172C LDR X0, [X22]
	0x03B91730 BL 0x1C16F10
	0x03B91734 LDR X1, [X21]
	0x03B91738 MOV X19, X0
	0x03B9173C BL 0x301B7C4
	0x03B91740 LDR X8, [X20]
	0x03B91744 LDP X22, X21, [X31 + 0x10]
	0x03B91748 LDR X8, [X8 + 0xB8]
	0x03B9174C STR X19, [X8 + 0x8]
	0x03B91750 LDP X20, X19, [X31 + 0x20]
	0x03B91754 LDR X30, [X31], #0x30
	0x03B91758 RET
	0x03B9175C LDR V0, [X0 + 0x6C]
	0x03B91760 RET
	0x03B91764 STR S0, [X0 + 0x6C]
	0x03B91768 RET
	0x03B9176C LDR V0, [X0 + 0x70]
	0x03B91770 RET
	0x03B91774 STR S0, [X0 + 0x70]
	0x03B91778 RET
	0x03B9177C LDR V0, [X0 + 0x74]
	0x03B91780 RET
	0x03B91784 STR S0, [X0 + 0x74]
	0x03B91788 RET
	0x03B9178C STR D10, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X21, 0x852000
	008 Move W8, [X21+2958]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {50}
	015 Move X0, 0x5CB000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0x5CB000
	019 Move X0, [X0+1984]
	020 Call 0x1C17CF4
	021 Move X0, 0x5CB000
	022 Move X0, [X0+1904]
	023 Call 0x1C17CF4
	024 Move X0, 0x5CB000
	025 Move X0, [X0+2272]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CB000
	028 Move X0, [X0+2280]
	029 Call 0x1C17CF4
	030 Move X0, 0x5CB000
	031 Move X0, [X0+2288]
	032 Call 0x1C17CF4
	033 Move X0, 0x5CC000
	034 Move X0, [X0+1280]
	035 Call 0x1C17CF4
	036 Move X0, 0x5CC000
	037 Move X0, [X0+1288]
	038 Call 0x1C17CF4
	039 Move X0, 0x5CB000
	040 Move X0, [X0+2296]
	041 Call 0x1C17CF4
	042 Move X0, 0x5CB000
	043 Move X0, [X0+2304]
	044 Call 0x1C17CF4
	045 Move X0, 0x563000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+2958], W8
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+56], X31
	052 Move [X31+32], X31
	053 Move [X31], V0
	054 Move [X31+8], V0
	055 Move X0, [X19+56]
	056 Compare X0, 0
	057 JumpIfEqual {164}
	058 Move X8, 0x5CC000
	059 Move X8, [X8+1280]
	060 Move X1, X20
	061 Move X2, [X8]
	062 Call HashSet`1<Object>.Remove, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {157}
	067 Move X0, [X19+40]
	068 Compare X0, 0
	069 JumpIfEqual {164}
	070 Move X8, 0x5CB000
	071 Move X8, [X8+1904]
	072 Add X2, X31, 56
	073 Move X1, X20
	074 Move X3, [X8]
	075 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {157}
	080 Move X0, [X19+40]
	081 Compare X0, 0
	082 JumpIfEqual {164}
	083 Move X8, 0x5CB000
	084 Move X8, [X8+1984]
	085 Move X1, X20
	086 Move X2, [X8]
	087 Call Dictionary`2<Object, Object>.Remove, X0, X1
	088 Move X8, [X31+56]
	089 Compare X8, 0
	090 JumpIfEqual {157}
	091 Move X0, [X19+40]
	092 Compare X0, 0
	093 JumpIfEqual {164}
	094 Move X8, 0x5CB000
	095 Move X8, [X8+2264]
	096 Move X1, [X8]
	097 Add X8, X31, 0
	098 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	099 Move X21, 0x5CB000
	100 Move X22, 0x563000
	101 Move X21, [X21+2280]
	102 Move X22, [X22+1432]
	103 Move X1, [X21]
	104 Add X0, X31, 0
	105 Call Enumerator<Object, Object>.MoveNext, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {132}
	110 Move X8, [X31+24]
	111 Move X9, [X31+56]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, [X22]
	114 Move X20, [X31+16]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X20
	120 Move X1, X31
	121 Move X2, X31
	122 Call Object.op_Inequality, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {103}
	127 Move X8, 0x5CB000
	128 Move X8, [X8+2272]
	129 Add X0, X31, 0
	130 Move X1, [X8]
	131 Call Enumerator<Object, Object>.Dispose, X0
	132 Move X8, 0x5CB000
	133 Move X8, [X8+2272]
	134 Add X0, X31, 0
	135 Move X1, [X8]
	136 Call Enumerator<Object, Object>.Dispose, X0
	137 Move X0, [X19+48]
	138 Compare X0, 0
	139 JumpIfEqual {164}
	140 Move X8, 0x5CC000
	141 Move X1, [X31+56]
	142 Move X8, [X8+1288]
	143 Move X2, [X8]
	144 Call HashSet`1<Object>.Remove, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {157}
	149 Move X8, [X19+24]
	150 Compare X8, 0
	151 JumpIfEqual {157}
	152 Move X1, [X31+56]
	153 Move X9, [X8+24]
	154 Move X0, [X8+64]
	155 Move X2, [X8+40]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X20, [X31+80]
	158 Move X19, [X31+88]
	159 Move X22, [X31+64]
	160 Move X21, [X31+72]
	161 Move X30, [X31+48]
	162 Add X31, X31, 96
	163 Return 
	164 Call 0x1C17F20
	165 Move X20, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, X20
	168 Call 0x3EB2AD0
	169 Move X21, [X0]
	170 Call 0x3EB2AE0
	171 Move X8, 0x5CB000
	172 Move X8, [X8+2272]
	173 Add X0, X31, 0
	174 Move X1, [X8]
	175 Call Enumerator<Object, Object>.Dispose, X0
	176 Compare X21, 0
	177 JumpIfEqual {137}
	178 Move X0, X21
	179 Call 0x1C17F18
	180 Move X21, X31
	181 Move X20, X0
	182 Move X8, 0x5CB000
	183 Move X8, [X8+2272]
	184 Move X1, [X8]
	185 Add X0, X31, 0
	186 Call Enumerator<Object, Object>.Dispose, X0
	187 Compare X21, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X20
	190 Call 0x1D2D690
	191 Move X0, X21
	192 Call 0x1C17F18
	193 Call 0x1991590

Method: System.Void ResolveUnassociatedColliders()

Disassembly:
	0x03B91790 STP D9, D8, [X31 + 0x10]
	0x03B91794 STP X30, X19, [X31 + 0x20]
	0x03B91798 MOV V8.16B, V2.16B
	0x03B9179C MOV V9.16B, V1.16B
	0x03B917A0 MOV V10.16B, V0.16B
	0x03B917A4 MOV X19, X0
	0x03B917A8 BL 0x3B917C4
	0x03B917AC STP S10, S9, [X19 + 0x6C]
	0x03B917B0 STR S8, [X19 + 0x74]
	0x03B917B4 LDP X30, X19, [X31 + 0x20]
	0x03B917B8 LDP D9, D8, [X31 + 0x10]
	0x03B917BC LDR V10, [X31], #0x30
	0x03B917C0 RET
	0x03B917C4 STP X30, X21, [X31 - 0x20]!
	0x03B917C8 STP X20, X19, [X31 + 0x10]
	0x03B917CC ADRP X21, 0x851000
	0x03B917D0 ADRP X20, 0x5CB000
	0x03B917D4 LDRB W8, [X21 + 0xBB4]
	0x03B917D8 LDR X20, [X20 + 0x578]
	0x03B917DC MOV X19, X0
	0x03B917E0 TBNZ X8, 0x0, 0x3B917F8
	0x03B917E4 ADRP X0, 0x5CB000
	0x03B917E8 LDR X0, [X0 + 0x578]
	0x03B917EC BL 0x1C16CF4
	0x03B917F0 MOVZ W8, 0x1
	0x03B917F4 STRB W8, [X21 + 0xBB4]
	0x03B917F8 MOVZ W8, 0xD70A
	0x03B917FC MOVK W8, 0x3C230000
	0x03B91800 STR W8, [X19 + 0x68]
	0x03B91804 LDR X1, [X20]
	0x03B91808 MOV X0, X19
	0x03B9180C LDP X20, X19, [X31 + 0x10]
	0x03B91810 LDP X30, X21, [X31], #0x20
	0x03B91814 B 0x270DC28
	0x03B91818 STP D11, D10, [X31 - 0x40]!
	0x03B9181C STP D9, D8, [X31 + 0x10]
	0x03B91820 STR X30, [X31 + 0x20]
	0x03B91824 STP X20, X19, [X31 + 0x30]
	0x03B91828 ADRP X20, 0x851000
	0x03B9182C LDRB W8, [X20 + 0xB97]
	0x03B91830 MOV V8.16B, V3.16B
	0x03B91834 MOV V9.16B, V2.16B
	0x03B91838 MOV V10.16B, V1.16B
	0x03B9183C MOV V11.16B, V0.16B
	0x03B91840 MOV X19, X0
	0x03B91844 TBNZ X8, 0x0, 0x3B9185C
	0x03B91848 ADRP X0, 0x5CB000
	0x03B9184C LDR X0, [X0 + 0x580]
	0x03B91850 BL 0x1C16CF4
	0x03B91854 MOVZ W8, 0x1
	0x03B91858 STRB W8, [X20 + 0xB97]
	0x03B9185C LDP S0, S1, [X19 + 0x48]
	0x03B91860 LDP S2, S3, [X19 + 0x50]
	0x03B91864 ADRP X8, 0xFFFFFFFFFCF59000
	0x03B91868 LDR V4, [X8 + 0x1B4]
	0x03B9186C FMUL S0, S11, S0
	0x03B91870 FMUL S1, S10, S1
	0x03B91874 FMUL S2, S9, S2
	0x03B91878 FADD S0, S0, S1
	0x03B9187C FMUL S3, S8, S3
	0x03B91880 FADD S0, S2, S0
	0x03B91884 FADD S0, S3, S0
	0x03B91888 FMOV S11, 1
	0x03B9188C FABS S0, S0
	0x03B91890 FMINNM S0, S0, S11
	0x03B91894 FMOV S8, W31
	0x03B91898 FCMP S0, S4
	0x03B9189C FMOV S9, W31
	0x03B918A0 B.GT 0x3B918B8
	0x03B918A4 BL 0x3EB1BB0
	0x03B918A8 ADRP X8, 0xFFFFFFFFFCF59000
	0x03B918AC LDR V1, [X8 + 0x448]
	0x03B918B0 FADD S0, S0, S0
	0x03B918B4 FMUL S9, S0, S1
	0x03B918B8 MOV X0, X31
	0x03B918BC BL 0x3C3C764
	0x03B918C0 LDP S2, S1, [X19 + 0x74]
	0x03B918C4 LDR X30, [X31 + 0x20]
	0x03B918C8 FSUB S0, S0, S1
	0x03B918CC LDP S1, S3, [X19 + 0x6C]
	0x03B918D0 FDIV S0, S0, S2
	0x03B918D4 FMIN S2, S0, S11
	0x03B918D8 FCMP S0, 0x0
	0x03B918DC FCSEL S0, S2, S8, PL
	0x03B918E0 FMAX S0, S0, S8
	0x03B918E4 FSUB S2, S3, S1
	0x03B918E8 FMUL S0, S2, S0
	0x03B918EC FADD S0, S1, S0
	0x03B918F0 FCMP S9, S0
	0x03B918F4 LDP X20, X19, [X31 + 0x30]
	0x03B918F8 LDP D9, D8, [X31 + 0x10]
	0x03B918FC CSET W0, GT
	0x03B91900 LDP D11, D10, [X31], #0x40
	0x03B91904 RET
	0x03B91908 STP D11, D10, [X31 - 0x40]!
	0x03B9190C STP D9, D8, [X31 + 0x10]
	0x03B91910 STR X30, [X31 + 0x20]
	0x03B91914 STP X20, X19, [X31 + 0x30]
	0x03B91918 ADRP X20, 0x851000
	0x03B9191C LDRB W8, [X20 + 0xB98]
	0x03B91920 MOV V8.16B, V3.16B
	0x03B91924 MOV V9.16B, V2.16B
	0x03B91928 MOV V10.16B, V1.16B
	0x03B9192C MOV V11.16B, V0.16B
	0x03B91930 MOV X19, X0
	0x03B91934 TBNZ X8, 0x0, 0x3B9194C
	0x03B91938 ADRP X0, 0x5CB000
	0x03B9193C LDR X0, [X0 + 0x588]
	0x03B91940 BL 0x1C16CF4
	0x03B91944 MOVZ W8, 0x1
	0x03B91948 STRB W8, [X20 + 0xB98]
	0x03B9194C MOV X0, X19
	0x03B91950 MOV V0.16B, V11.16B
	0x03B91954 MOV V1.16B, V10.16B
	0x03B91958 MOV V2.16B, V9.16B
	0x03B9195C MOV V3.16B, V8.16B
	0x03B91960 BL 0x3B91818
	0x03B91964 MOV W20, W0
	0x03B91968 TBZ X0, 0x0, 0x3B91990
	0x03B9196C ADRP X8, 0x5CB000
	0x03B91970 LDR X8, [X8 + 0x588]
	0x03B91974 MOV X0, X19
	0x03B91978 MOV V0.16B, V11.16B
	0x03B9197C MOV V1.16B, V10.16B
	0x03B91980 LDR X1, [X8]
	0x03B91984 MOV V2.16B, V9.16B
	0x03B91988 MOV V3.16B, V8.16B
	0x03B9198C BL 0x270C34C
	0x03B91990 AND W0, W20, 0x1
	0x03B91994 LDP X20, X19, [X31 + 0x30]
	0x03B91998 LDR X30, [X31 + 0x20]
	0x03B9199C LDP D9, D8, [X31 + 0x10]
	0x03B919A0 LDP D11, D10, [X31], #0x40
	0x03B919A4 RET
	0x03B919A8 STP X30, X19, [X31 - 0x10]!
	0x03B919AC MOV X19, X0
	0x03B919B0 MOV X0, X31
	0x03B919B4 BL 0x3C3C764
	0x03B919B8 STR S0, [X19 + 0x78]
	0x03B919BC LDP X30, X19, [X31], #0x10
	0x03B919C0 RET
	0x03B919C4 SUB X31, X31, 0x40
	0x03B919C8 STR D10, [X31 + 0x10]
	0x03B919CC STP D9, D8, [X31 + 0x18]
	0x03B919D0 STR X30, [X31 + 0x28]
	0x03B919D4 STP X20, X19, [X31 + 0x30]
	0x03B919D8 ADRP X20, 0x851000
	0x03B919DC LDRB W8, [X20 + 0xB99]
	0x03B919E0 MOV V8.16B, V2.16B
	0x03B919E4 MOV V9.16B, V1.16B
	0x03B919E8 MOV V10.16B, V0.16B
	0x03B919EC MOV X19, X0
	0x03B919F0 TBNZ X8, 0x0, 0x3B91A20
	0x03B919F4 ADRP X0, 0x5CB000
	0x03B919F8 LDR X0, [X0 + 0x590]
	0x03B919FC BL 0x1C16CF4
	0x03B91A00 ADRP X0, 0x5CB000
	0x03B91A04 LDR X0, [X0 + 0x598]
	0x03B91A08 BL 0x1C16CF4
	0x03B91A0C ADRP X0, 0x5CB000
	0x03B91A10 LDR X0, [X0 + 0x580]
	0x03B91A14 BL 0x1C16CF4
	0x03B91A18 MOVZ W8, 0x1
	0x03B91A1C STRB W8, [X20 + 0xB99]
	0x03B91A20 ADRP X20, 0x5CB000
	0x03B91A24 LDR X20, [X20 + 0x598]
	0x03B91A28 STR W31, [X31 + 0xC]
	0x03B91A2C LDP D0, D3, [X19 + 0x18]
	0x03B91A30 LDP D1, D2, [X19 + 0x48]
	0x03B91A34 ADRP X8, 0xFFFFFFFFFCF59000
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B91A40 UNIMPLEMENTED
	0x03B91A44 FADD V0.2S, V0.2S, V3.2S
	0x03B91A48 LDR V1, [X8 + 0x1B4]
	0x03B91A4C UNIMPLEMENTED
	0x03B91A50 FADD V0.2S, V2.2S, V0.2S
	0x03B91A54 FADD V0.2S, V3.2S, V0.2S
	0x03B91A58 FABS S0, S0
	0x03B91A5C FMOV S2, 1
	0x03B91A60 FMINNM S0, S0, S2
	0x03B91A64 FCMP S0, S1
	0x03B91A68 FMOV S1, W31
	0x03B91A6C B.GT 0x3B91A84
	0x03B91A70 BL 0x3EB1BB0
	0x03B91A74 ADRP X8, 0xFFFFFFFFFCF59000
	0x03B91A78 LDR V1, [X8 + 0x448]
	0x03B91A7C FADD S0, S0, S0
	0x03B91A80 FMUL S1, S0, S1
	0x03B91A84 LDR V2, [X19 + 0x70]
	0x03B91A88 ADD X0, X31, 0xC
	0x03B91A8C MOV V0.16B, V10.16B
	0x03B91A90 MOV V3.16B, V9.16B
	0x03B91A94 MOV V4.16B, V8.16B
	0x03B91A98 BL 0x3B91AC4
	0x03B91A9C LDR V0, [X31 + 0xC]
	0x03B91AA0 LDR X1, [X20]
	0x03B91AA4 MOV X0, X19
	0x03B91AA8 BL 0x270C418
	0x03B91AAC LDP X20, X19, [X31 + 0x30]
	0x03B91AB0 LDR X30, [X31 + 0x28]
	0x03B91AB4 LDP D9, D8, [X31 + 0x18]
	0x03B91AB8 LDR V10, [X31 + 0x10]
	0x03B91ABC ADD X31, X31, 0x40
	0x03B91AC0 RET
	0x03B91AC4 STR D12, [X31 - 0x50]!
	0x03B91AC8 STP D11, D10, [X31 + 0x10]
	0x03B91ACC STP D9, D8, [X31 + 0x20]
	0x03B91AD0 STP X30, X21, [X31 + 0x30]
	0x03B91AD4 STP X20, X19, [X31 + 0x40]
	0x03B91AD8 ADRP X20, 0x851000
	0x03B91ADC ADRP X21, 0x5CB000
	0x03B91AE0 LDRB W8, [X20 + 0xB9A]
	0x03B91AE4 LDR X21, [X21 + 0x5A0]
	0x03B91AE8 MOV X19, X0
	0x03B91AEC MOV V8.16B, V4.16B
	0x03B91AF0 MOV V9.16B, V3.16B
	0x03B91AF4 MOV V10.16B, V2.16B
	0x03B91AF8 MOV V11.16B, V1.16B
	0x03B91AFC MOV V12.16B, V0.16B
	0x03B91B00 TBNZ X8, 0x0, 0x3B91B18
	0x03B91B04 ADRP X0, 0x5CB000
	0x03B91B08 LDR X0, [X0 + 0x5A0]
	0x03B91B0C BL 0x1C16CF4
	0x03B91B10 MOVZ W8, 0x1
	0x03B91B14 STRB W8, [X20 + 0xB9A]
	0x03B91B18 LDR X0, [X21]
	0x03B91B1C LDR W8, [X0 + 0xE0]
	0x03B91B20 CBNZ W8, 0x3B91B28
	0x03B91B24 BL 0x1C16DFC
	0x03B91B28 MOV V1.16B, V11.16B
	0x03B91B2C MOV V2.16B, V10.16B
	0x03B91B30 MOV V3.16B, V9.16B
	0x03B91B34 MOV V4.16B, V8.16B
	0x03B91B38 MOV X0, X19
	0x03B91B3C LDP X20, X19, [X31 + 0x40]
	0x03B91B40 LDP X30, X21, [X31 + 0x30]
	0x03B91B44 LDP D9, D8, [X31 + 0x20]
	0x03B91B48 LDP D11, D10, [X31 + 0x10]
	0x03B91B4C MOV V0.16B, V12.16B
	0x03B91B50 LDR V12, [X31], #0x50
	0x03B91B54 B 0x3B91B58
	0x03B91B58 STR D12, [X31 - 0x50]!
	0x03B91B5C STP D11, D10, [X31 + 0x10]
	0x03B91B60 STP D9, D8, [X31 + 0x20]
	0x03B91B64 STP X30, X21, [X31 + 0x30]
	0x03B91B68 STP X20, X19, [X31 + 0x40]
	0x03B91B6C ADRP X20, 0x851000
	0x03B91B70 ADRP X21, 0x58A000
	0x03B91B74 LDRB W8, [X20 + 0xB9F]
	0x03B91B78 LDR X21, [X21 + 0x848]
	0x03B91B7C MOV X19, X0
	0x03B91B80 MOV V9.16B, V4.16B
	0x03B91B84 MOV V8.16B, V3.16B
	0x03B91B88 MOV V11.16B, V2.16B
	0x03B91B8C MOV V12.16B, V1.16B
	0x03B91B90 MOV V10.16B, V0.16B
	0x03B91B94 TBNZ X8, 0x0, 0x3B91BB8
	0x03B91B98 ADRP X0, 0x58A000
	0x03B91B9C LDR X0, [X0 + 0x848]
	0x03B91BA0 BL 0x1C16CF4
	0x03B91BA4 ADRP X0, 0x5CB000
	0x03B91BA8 LDR X0, [X0 + 0x5A0]
	0x03B91BAC BL 0x1C16CF4
	0x03B91BB0 MOVZ W8, 0x1
	0x03B91BB4 STRB W8, [X20 + 0xB9F]
	0x03B91BB8 LDR X0, [X21]
	0x03B91BBC LDR W8, [X0 + 0xE0]
	0x03B91BC0 CBNZ W8, 0x3B91BC8
	0x03B91BC4 BL 0x1C16DFC
	0x03B91BC8 MOV X0, X31
	0x03B91BCC BL 0x36FA670
	0x03B91BD0 TBZ X0, 0x0, 0x3B91C28
	0x03B91BD4 ADRP X8, 0x5CB000
	0x03B91BD8 LDR X8, [X8 + 0x5A0]
	0x03B91BDC LDR X0, [X8]
	0x03B91BE0 LDR W8, [X0 + 0xE0]
	0x03B91BE4 CBNZ W8, 0x3B91BEC
	0x03B91BE8 BL 0x1C16DFC
	0x03B91BEC BL 0x3B91FF4
	0x03B91BF0 CBZ X0, 0x3B91C28
	0x03B91BF4 MOV X1, X0
	0x03B91BF8 MOV V0.16B, V10.16B
	0x03B91BFC MOV V2.16B, V11.16B
	0x03B91C00 MOV V3.16B, V8.16B
	0x03B91C04 MOV V4.16B, V9.16B
	0x03B91C08 MOV X0, X19
	0x03B91C0C LDP X20, X19, [X31 + 0x40]
	0x03B91C10 LDP X30, X21, [X31 + 0x30]
	0x03B91C14 LDP D9, D8, [X31 + 0x20]
	0x03B91C18 LDP D11, D10, [X31 + 0x10]
	0x03B91C1C MOV V1.16B, V12.16B

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x852000
	011 Move X22, 0x5CA000
	012 Move X21, 0x5CC000
	013 Move W8, [X20+2959]
	014 Move X22, [X22+712]
	015 Move X21, [X21+1296]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {74}
	021 Move X0, 0x565000
	022 Move X0, [X0+1744]
	023 Call 0x1C17CF4
	024 Move X0, 0x5CC000
	025 Move X0, [X0+1272]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CA000
	028 Move X0, [X0+1632]
	029 Call 0x1C17CF4
	030 Move X0, 0x5CA000
	031 Move X0, [X0+1640]
	032 Call 0x1C17CF4
	033 Move X0, 0x5CA000
	034 Move X0, [X0+1648]
	035 Call 0x1C17CF4
	036 Move X0, 0x5CB000
	037 Move X0, [X0+2088]
	038 Call 0x1C17CF4
	039 Move X0, 0x5CA000
	040 Move X0, [X0+1656]
	041 Call 0x1C17CF4
	042 Move X0, 0x5CC000
	043 Move X0, [X0+1304]
	044 Call 0x1C17CF4
	045 Move X0, 0x5CC000
	046 Move X0, [X0+1312]
	047 Call 0x1C17CF4
	048 Move X0, 0x5CC000
	049 Move X0, [X0+1320]
	050 Call 0x1C17CF4
	051 Move X0, 0x5C3000
	052 Move X0, [X0+2192]
	053 Call 0x1C17CF4
	054 Move X0, 0x5CC000
	055 Move X0, [X0+1328]
	056 Call 0x1C17CF4
	057 Move X0, 0x563000
	058 Move X0, [X0+1432]
	059 Call 0x1C17CF4
	060 Move X0, 0x5CA000
	061 Move X0, [X0+712]
	062 Call 0x1C17CF4
	063 Move X0, 0x5CC000
	064 Move X0, [X0+1296]
	065 Call 0x1C17CF4
	066 Move X0, 0x5CC000
	067 Move X0, [X0+1336]
	068 Call 0x1C17CF4
	069 Move X0, 0x5CA000
	070 Move X0, [X0+3664]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X20+2959], W8
	074 Move [X31+32], X31
	075 Move [X31+40], X31
	076 Move [X31+48], X31
	077 Move [X31+24], X31
	078 Move X0, [X22]
	079 Move X20, [X19+56]
	080 Call 0x1C17F10
	081 Move X2, [X21]
	082 Move X1, X31
	083 Move X3, X31
	084 Move X21, X0
	085 Call Predicate`1<Object>..ctor, X0, X1, X2
	086 Compare X20, 0
	087 JumpIfEqual {293}
	088 Move X8, 0x5CC000
	089 Move X8, [X8+1304]
	090 Move X0, X20
	091 Move X1, X21
	092 Move X2, [X8]
	093 Call HashSet`1<Object>.RemoveWhere, X0, X1
	094 Move X8, [X19+56]
	095 Compare X8, 0
	096 JumpIfEqual {293}
	097 Move W8, [X8+32]
	098 Compare W8, 0
	099 JumpIfEqual {278}
	100 Move X8, 0x563000
	101 Move X8, [X8+1432]
	102 Move X20, [X19+32]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X20
	109 Move X1, X31
	110 Move X2, X31
	111 Call Object.op_Equality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {278}
	116 Move X22, 0x5CA000
	117 Move X22, [X22+3664]
	118 Move X0, [X22]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X22]
	124 Move X8, [X0+184]
	125 Move X8, [X8]
	126 Compare X8, 0
	127 JumpIfEqual {293}
	128 Move W2, [X8+24]
	129 Move W9, [X8+28]
	130 Add W9, W9, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X8+24], W31
	133 Move [X8+28], W9
	134 Move X0, [X8+16]
	135 Move W1, W31
	136 Move X3, X31
	137 Call Array.Clear, X0, X1, X2
	138 Move X0, [X19+56]
	139 Compare X0, 0
	140 JumpIfEqual {293}
	141 Move X8, 0x5CA000
	142 Move X8, [X8+1656]
	143 Move X1, [X8]
	144 Add X8, X31, 0
	145 Call HashSet`1<Object>.GetEnumerator, X0
	146 Move V0, [X31]
	147 Move X8, [X31+16]
	148 Move X21, 0x5CA000
	149 Move X23, 0x5CC000
	150 Move X24, 0x5CC000
	151 Move X21, [X21+1640]
	152 Move X23, [X23+1320]
	153 Move X24, [X24+1272]
	154 Move [X31+2], V0
	155 Move [X31+48], X8
	156 Move X25, 0x5CB000
	157 Move X25, [X25+2088]
	158 Move X1, [X21]
	159 Add X0, X31, 32
	160 Call Enumerator<Object>.MoveNext, X0
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {231}
	165 Move X0, [X19+32]
	166 Compare X0, 0
	167 JumpIfEqual {288}
	168 Move X20, [X31+48]
	169 Add X2, X31, 24
	170 Move X1, X20
	171 Move X3, X31
	172 Call XRInteractionManager.TryGetInteractableForCollider, X0, X1, X2
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {158}
	177 Move X0, [X22]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {183}
	181 Call 0x1C17DFC
	182 Move X0, [X22]
	183 Move X8, [X0+184]
	184 Move X0, [X8]
	185 Compare X0, 0
	186 JumpIfEqual {290}
	187 Move W10, [X0+28]
	188 Move X8, [X0+16]
	189 Move X9, [X23]
	190 Add W10, W10, 1
	191 Move [X0+28], W10
	192 Compare X8, 0
	193 JumpIfEqual {291}
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Move W11, [X8+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add W9, W10, 1
	198 Add X8, X8, X10
	199 Move [X0+24], W9
	200 Move [X8+32], X20
	201 Move X8, [X9+32]
	202 Move X8, [X8+192]
	203 Move X2, [X8+112]
	204 Move X1, X20
	205 Call List`1<Object>.AddWithResize, X0, X1
	206 Move X0, [X19+40]
	207 Compare X0, 0
	208 JumpIfEqual {289}
	209 Move X2, [X31+24]
	210 Move X3, [X24]
	211 Move X1, X20
	212 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	213 Move X0, [X19+48]
	214 Compare X0, 0
	215 JumpIfEqual {292}
	216 Move X1, [X31+24]
	217 Move X2, [X25]
	218 Call HashSet`1<Object>.Add, X0, X1
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {158}
	223 Move X8, [X19+16]
	224 Compare X8, 0
	225 JumpIfEqual {158}
	226 Move X1, [X31+24]
	227 Move X0, [X8+64]
	228 Move X9, [X8+24]
	229 Move X2, [X8+40]
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X8, 0x5CA000
	232 Move X8, [X8+1632]
	233 Add X0, X31, 32
	234 Move X1, [X8]
	235 Call Enumerator<Object>.Dispose, X0
	236 Move X0, [X22]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {242}
	240 Call 0x1C17DFC
	241 Move X0, [X22]
	242 Move X9, 0x565000
	243 Move X8, [X0+184]
	244 Move X9, [X9+1744]
	245 Move X20, [X8]
	246 Move X0, [X9]
	247 Call 0x1C17F10
	248 Move X8, 0x5CC000
	249 Move X8, [X8+1336]
	250 Move X1, X19
	251 Move X3, X31
	252 Move X21, X0
	253 Move X2, [X8]
	254 Call Action`1<Object>..ctor, X0, X1, X2
	255 Compare X20, 0
	256 JumpIfEqual {293}
	257 Move X8, 0x5CC000
	258 Move X8, [X8+1328]
	259 Move X0, X20
	260 Move X1, X21
	261 Move X2, [X8]
	262 Call List`1<Object>.ForEach, X0, X1
	263 Move X8, [X22]
	264 Move X8, [X8+184]
	265 Move X8, [X8]
	266 Compare X8, 0
	267 JumpIfEqual {293}
	268 Move W2, [X8+24]
	269 Move W9, [X8+28]
	270 Add W9, W9, 1
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move [X8+24], W31
	273 Move [X8+28], W9
	274 Move X0, [X8+16]
	275 Move W1, W31
	276 Move X3, X31
	277 Call Array.Clear, X0, X1, X2
	278 Move X20, [X31+112]
	279 Move X19, [X31+120]
	280 Move X22, [X31+96]
	281 Move X21, [X31+104]
	282 Move X24, [X31+80]
	283 Move X23, [X31+88]
	284 Move X30, [X31+64]
	285 Move X25, [X31+72]
	286 Add X31, X31, 128
	287 Return 
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Move X20, X0
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X20
	297 Call 0x3EB2AD0
	298 Move X21, [X0]
	299 Call 0x3EB2AE0
	300 Move X8, 0x5CA000
	301 Move X8, [X8+1632]
	302 Add X0, X31, 32
	303 Move X1, [X8]
	304 Call Enumerator<Object>.Dispose, X0
	305 Compare X21, 0
	306 JumpIfEqual {236}
	307 Move X0, X21
	308 Call 0x1C17F18
	309 Move X21, X31
	310 Move X20, X0
	311 Move X8, 0x5CA000
	312 Move X8, [X8+1632]
	313 Move X1, [X8]
	314 Add X0, X31, 32
	315 Call Enumerator<Object>.Dispose, X0
	316 Compare X21, 0
	317 JumpIfNotEqual {320}
	318 Move X0, X20
	319 Call 0x1D2D690
	320 Move X0, X21
	321 Call 0x1C17F18
	322 Call 0x1991590

Method: System.Void RemoveFromUnassociatedColliders(UnityEngine.Collider col)

Disassembly:
	0x03B91C20 LDR V12, [X31], #0x50
	0x03B91C24 BR X1
	0x03B91C28 FDIV S0, S12, S11
	0x03B91C2C FMOV W9, S0
	0x03B91C30 MOVZ W8, 0x7F800000
	0x03B91C34 AND W9, W9, 0x7FFFFFFF
	0x03B91C38 FMOV S1, 1
	0x03B91C3C CMP W9, W8
	0x03B91C40 FCCMP S0, S1, 0x0, LS
	0x03B91C44 FCSEL S0, S1, S0, GT
	0x03B91C48 FMOV W9, S0
	0x03B91C4C AND W9, W9, 0x7FFFFFFF
	0x03B91C50 FMOV S2, W31
	0x03B91C54 CMP W9, W8
	0x03B91C58 FCCMP S0, S2, 0x8, LS
	0x03B91C5C FSUB S0, S1, S0
	0x03B91C60 FCSEL S0, S1, S0, MI
	0x03B91C64 FMUL S0, S0, S9
	0x03B91C68 FMOV W9, S0
	0x03B91C6C AND W9, W9, 0x7FFFFFFF
	0x03B91C70 CMP W9, W8
	0x03B91C74 FCCMP S0, S9, 0x0, LS

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x852000
	006 Move W8, [X21+2960]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5CC000
	014 Move X0, [X0+1280]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2960], W8
	018 Move X0, [X20+56]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x5CC000
	022 Move X8, [X8+1280]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call HashSet`1<Object>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void ResolveUnassociatedColliders(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B91C78 FCSEL S0, S9, S0, GT
	0x03B91C7C FMOV W9, S0
	0x03B91C80 AND W9, W9, 0x7FFFFFFF
	0x03B91C84 CMP W9, W8
	0x03B91C88 FCCMP S0, S8, 0x8, LS
	0x03B91C8C FCSEL S0, S8, S0, MI
	0x03B91C90 FMUL S0, S0, S10
	0x03B91C94 STR S0, [X19]
	0x03B91C98 LDP X20, X19, [X31 + 0x40]
	0x03B91C9C LDP X30, X21, [X31 + 0x30]
	0x03B91CA0 LDP D9, D8, [X31 + 0x20]
	0x03B91CA4 LDP D11, D10, [X31 + 0x10]
	0x03B91CA8 LDR V12, [X31], #0x50
	0x03B91CAC RET
	0x03B91CB0 FDIV S1, S1, S2
	0x03B91CB4 FMOV W9, S1
	0x03B91CB8 MOVZ W8, 0x7F800000
	0x03B91CBC AND W9, W9, 0x7FFFFFFF
	0x03B91CC0 FMOV S2, 1
	0x03B91CC4 CMP W9, W8
	0x03B91CC8 FCCMP S1, S2, 0x0, LS
	0x03B91CCC FCSEL S1, S2, S1, GT
	0x03B91CD0 FMOV W9, S1
	0x03B91CD4 AND W9, W9, 0x7FFFFFFF
	0x03B91CD8 FMOV S5, W31
	0x03B91CDC CMP W9, W8
	0x03B91CE0 FCCMP S1, S5, 0x8, LS
	0x03B91CE4 FSUB S1, S2, S1
	0x03B91CE8 FCSEL S1, S2, S1, MI
	0x03B91CEC FMUL S1, S1, S4
	0x03B91CF0 FMOV W9, S1
	0x03B91CF4 AND W9, W9, 0x7FFFFFFF
	0x03B91CF8 CMP W9, W8
	0x03B91CFC FCCMP S1, S4, 0x0, LS
	0x03B91D00 FCSEL S1, S4, S1, GT
	0x03B91D04 FMOV W9, S1
	0x03B91D08 AND W9, W9, 0x7FFFFFFF
	0x03B91D0C CMP W9, W8
	0x03B91D10 FCCMP S1, S3, 0x8, LS
	0x03B91D14 FCSEL S1, S3, S1, MI
	0x03B91D18 FMUL S0, S1, S0
	0x03B91D1C STR S0, [X0]
	0x03B91D20 RET
	0x03B91D24 STP X30, X21, [X31 - 0x20]!
	0x03B91D28 STP X20, X19, [X31 + 0x10]
	0x03B91D2C LDR X8, [X2 + 0x8]
	0x03B91D30 STP X1, X2, [X0 + 0x20]
	0x03B91D34 MOV X19, X0
	0x03B91D38 MOV X20, X1
	0x03B91D3C STR X8, [X0 + 0x10]
	0x03B91D40 LDRB W21, [X2 + 0x52]
	0x03B91D44 STR X0, [X0 + 0x40]
	0x03B91D48 MOV X0, X2
	0x03B91D4C BL 0x1C16D84
	0x03B91D50 TBZ X0, 0x0, 0x3B91D6C
	0x03B91D54 CMP W21, 0x6
	0x03B91D58 B.NE 0x3B91D70
	0x03B91D5C ADRP X8, 0xFFFFFFFFFE06D000
	0x03B91D60 ADD X8, X8, 0xBF0
	0x03B91D64 STR X8, [X19 + 0x18]
	0x03B91D68 B 0x3B91D80
	0x03B91D6C CBZ X20, 0x3B91D98
	0x03B91D70 LDR X8, [X19 + 0x10]
	0x03B91D74 LDR X9, [X19 + 0x20]
	0x03B91D78 STR X8, [X19 + 0x18]
	0x03B91D7C STR X9, [X19 + 0x40]
	0x03B91D80 ADRP X8, 0xFFFFFFFFFE06D000
	0x03B91D84 ADD X8, X8, 0xB68
	0x03B91D88 STR X8, [X19 + 0x38]
	0x03B91D8C LDP X20, X19, [X31 + 0x10]
	0x03B91D90 LDP X30, X21, [X31], #0x20
	0x03B91D94 RET
	0x03B91D98 ADRP X1, 0xFFFFFFFFFCF8A000
	0x03B91D9C ADD X1, X1, 0xEE3
	0x03B91DA0 MOV X0, X31
	0x03B91DA4 BL 0x1C16F3C
	0x03B91DA8 MOV X1, X31
	0x03B91DAC BL 0x1C16DEC
	0x03B91DB0 LDR X8, [X0 + 0x40]
	0x03B91DB4 LDR X3, [X0 + 0x18]
	0x03B91DB8 LDR X2, [X0 + 0x28]
	0x03B91DBC MOV X0, X8
	0x03B91DC0 BR X3
	0x03B91DC4 SUB X31, X31, 0x90
	0x03B91DC8 STR X30, [X31 + 0x50]
	0x03B91DCC STP X24, X23, [X31 + 0x60]
	0x03B91DD0 STP X22, X21, [X31 + 0x70]
	0x03B91DD4 STP X20, X19, [X31 + 0x80]
	0x03B91DD8 STP S1, S0, [X31 + 0x58]
	0x03B91DDC ADRP X24, 0x851000
	0x03B91DE0 STP S3, S2, [X31 + 0x48]
	0x03B91DE4 STR S4, [X31 + 0x44]
	0x03B91DE8 ADRP X23, 0x562000
	0x03B91DEC LDRB W8, [X24 + 0xB9B]
	0x03B91DF0 LDR X23, [X23 + 0xA90]
	0x03B91DF4 MOV X19, X3
	0x03B91DF8 MOV X20, X2
	0x03B91DFC MOV X22, X1
	0x03B91E00 MOV X21, X0
	0x03B91E04 TBNZ X8, 0x0, 0x3B91E1C
	0x03B91E08 ADRP X0, 0x562000
	0x03B91E0C LDR X0, [X0 + 0xA90]
	0x03B91E10 BL 0x1C16CF4
	0x03B91E14 MOVZ W8, 0x1
	0x03B91E18 STRB W8, [X24 + 0xB9B]
	0x03B91E1C LDR X0, [X23]
	0x03B91E20 MOVI V0.2D, 0x0
	0x03B91E24 ADD X1, X31, 0x5C
	0x03B91E28 STR X31, [X31 + 0x30]
	0x03B91E2C STP V0, V0, [X31 + 0x10]
	0x03B91E30 STR V0, [X31]
	0x03B91E34 BL 0x1C16E04
	0x03B91E38 LDR X8, [X23]
	0x03B91E3C STR X0, [X31]
	0x03B91E40 ADD X1, X31, 0x58
	0x03B91E44 MOV X0, X8
	0x03B91E48 BL 0x1C16E04
	0x03B91E4C LDR X8, [X23]
	0x03B91E50 STR X0, [X31 + 0x8]
	0x03B91E54 ADD X1, X31, 0x4C
	0x03B91E58 MOV X0, X8
	0x03B91E5C BL 0x1C16E04
	0x03B91E60 LDR X8, [X23]
	0x03B91E64 STR X0, [X31 + 0x10]
	0x03B91E68 ADD X1, X31, 0x48
	0x03B91E6C MOV X0, X8
	0x03B91E70 BL 0x1C16E04
	0x03B91E74 LDR X8, [X23]
	0x03B91E78 STR X0, [X31 + 0x18]
	0x03B91E7C ADD X1, X31, 0x44
	0x03B91E80 MOV X0, X8
	0x03B91E84 BL 0x1C16E04
	0x03B91E88 LDR X8, [X23]
	0x03B91E8C STR X0, [X31 + 0x20]
	0x03B91E90 MOV X1, X22
	0x03B91E94 MOV X0, X8
	0x03B91E98 BL 0x1C16E04
	0x03B91E9C STR X0, [X31 + 0x28]
	0x03B91EA0 ADD X1, X31, 0x0
	0x03B91EA4 MOV X0, X21
	0x03B91EA8 MOV X2, X20
	0x03B91EAC MOV X3, X19
	0x03B91EB0 BL 0x1C16CB0
	0x03B91EB4 LDP X20, X19, [X31 + 0x80]
	0x03B91EB8 LDP X22, X21, [X31 + 0x70]
	0x03B91EBC LDP X24, X23, [X31 + 0x60]
	0x03B91EC0 LDR X30, [X31 + 0x50]
	0x03B91EC4 ADD X31, X31, 0x90
	0x03B91EC8 RET
	0x03B91ECC MOV X0, X1
	0x03B91ED0 MOV X1, X31
	0x03B91ED4 B 0x1C16CB4
	0x03B91ED8 STP X30, X23, [X31 - 0x30]!
	0x03B91EDC STP X22, X21, [X31 + 0x10]
	0x03B91EE0 STP X20, X19, [X31 + 0x20]
	0x03B91EE4 ADRP X20, 0x851000
	0x03B91EE8 ADRP X23, 0x5CB000
	0x03B91EEC LDRB W8, [X20 + 0xB9C]
	0x03B91EF0 LDR X23, [X23 + 0x5A0]
	0x03B91EF4 MOV X19, X0
	0x03B91EF8 TBNZ X8, 0x0, 0x3B91F34
	0x03B91EFC ADRP X0, 0x58A000
	0x03B91F00 LDR X0, [X0 + 0x848]
	0x03B91F04 BL 0x1C16CF4
	0x03B91F08 ADRP X0, 0x5CB000
	0x03B91F0C LDR X0, [X0 + 0x5A0]
	0x03B91F10 BL 0x1C16CF4
	0x03B91F14 ADRP X0, 0x5CB000
	0x03B91F18 LDR X0, [X0 + 0x5A8]
	0x03B91F1C BL 0x1C16CF4
	0x03B91F20 ADRP X0, 0x5CB000
	0x03B91F24 LDR X0, [X0 + 0x5B0]
	0x03B91F28 BL 0x1C16CF4
	0x03B91F2C MOVZ W8, 0x1
	0x03B91F30 STRB W8, [X20 + 0xB9C]
	0x03B91F34 LDR X8, [X23]
	0x03B91F38 LDR W9, [X8 + 0xE0]
	0x03B91F3C CBNZ W9, 0x3B91F4C
	0x03B91F40 MOV X0, X8
	0x03B91F44 BL 0x1C16DFC
	0x03B91F48 LDR X8, [X23]
	0x03B91F4C LDR X9, [X8 + 0xB8]
	0x03B91F50 LDR X10, [X9]
	0x03B91F54 CBNZ X10, 0x3B91FC4
	0x03B91F58 LDR W10, [X8 + 0xE0]
	0x03B91F5C CBNZ W10, 0x3B91F70
	0x03B91F60 MOV X0, X8
	0x03B91F64 BL 0x1C16DFC
	0x03B91F68 LDR X8, [X23]
	0x03B91F6C LDR X9, [X8 + 0xB8]
	0x03B91F70 ADRP X8, 0x58A000
	0x03B91F74 LDR X20, [X9 + 0x8]
	0x03B91F78 LDR X8, [X8 + 0x848]
	0x03B91F7C LDR X0, [X8]
	0x03B91F80 ADRP X8, 0x5CB000
	0x03B91F84 LDR X8, [X8 + 0x5B0]
	0x03B91F88 LDR X21, [X8]
	0x03B91F8C ADRP X8, 0x5CB000
	0x03B91F90 LDR X8, [X8 + 0x5A8]
	0x03B91F94 LDR W9, [X0 + 0xE0]
	0x03B91F98 LDR X22, [X8]
	0x03B91F9C CBNZ W9, 0x3B91FA4
	0x03B91FA0 BL 0x1C16DFC
	0x03B91FA4 MOV X0, X20
	0x03B91FA8 MOV X1, X21
	0x03B91FAC MOV X2, X22
	0x03B91FB0 MOV X3, X31
	0x03B91FB4 BL 0x36FAD70
	0x03B91FB8 LDR X8, [X23]
	0x03B91FBC LDR X9, [X8 + 0xB8]
	0x03B91FC0 STR X0, [X9]
	0x03B91FC4 LDR W9, [X8 + 0xE0]
	0x03B91FC8 CBNZ W9, 0x3B91FD8
	0x03B91FCC MOV X0, X8
	0x03B91FD0 BL 0x1C16DFC
	0x03B91FD4 LDR X8, [X23]
	0x03B91FD8 LDR X8, [X8 + 0xB8]
	0x03B91FDC LDP X22, X21, [X31 + 0x10]
	0x03B91FE0 LDR X8, [X8]
	0x03B91FE4 STR X8, [X19]
	0x03B91FE8 LDP X20, X19, [X31 + 0x20]
	0x03B91FEC LDP X30, X23, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x852000
	015 Move X23, 0x5CA000
	016 Move X22, 0x5CC000
	017 Move W8, [X21+2961]
	018 Move X23, [X23+712]
	019 Move X22, [X22+1296]
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {64}
	026 Move X0, 0x5CC000
	027 Move X0, [X0+1272]
	028 Call 0x1C17CF4
	029 Move X0, 0x5CB000
	030 Move X0, [X0+2088]
	031 Call 0x1C17CF4
	032 Move X0, 0x5CB000
	033 Move X0, [X0+848]
	034 Call 0x1C17CF4
	035 Move X0, 0x5CC000
	036 Move X0, [X0+1304]
	037 Call 0x1C17CF4
	038 Move X0, 0x5CC000
	039 Move X0, [X0+1280]
	040 Call 0x1C17CF4
	041 Move X0, 0x5CC000
	042 Move X0, [X0+1312]
	043 Call 0x1C17CF4
	044 Move X0, 0x5CA000
	045 Move X0, [X0+2264]
	046 Call 0x1C17CF4
	047 Move X0, 0x5C3000
	048 Move X0, [X0+2200]
	049 Call 0x1C17CF4
	050 Move X0, 0x5C3000
	051 Move X0, [X0+2208]
	052 Call 0x1C17CF4
	053 Move X0, 0x563000
	054 Move X0, [X0+1432]
	055 Call 0x1C17CF4
	056 Move X0, 0x5CA000
	057 Move X0, [X0+712]
	058 Call 0x1C17CF4
	059 Move X0, 0x5CC000
	060 Move X0, [X0+1296]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+2961], W8
	064 Move [X31+8], X31
	065 Move X0, [X23]
	066 Move X21, [X20+56]
	067 Call 0x1C17F10
	068 Move X2, [X22]
	069 Move X1, X31
	070 Move X3, X31
	071 Move X22, X0
	072 Call Predicate`1<Object>..ctor, X0, X1, X2
	073 Compare X21, 0
	074 JumpIfEqual {262}
	075 Move X8, 0x5CC000
	076 Move X8, [X8+1304]
	077 Move X0, X21
	078 Move X1, X22
	079 Move X2, [X8]
	080 Call HashSet`1<Object>.RemoveWhere, X0, X1
	081 Move X8, [X20+56]
	082 Compare X8, 0
	083 JumpIfEqual {262}
	084 Move W8, [X8+32]
	085 Compare W8, 0
	086 JumpIfEqual {248}
	087 Move X23, 0x563000
	088 Move X23, [X23+1432]
	089 Move X21, [X20+32]
	090 Move X0, [X23]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Move X2, X31
	098 Call Object.op_Equality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {248}
	103 Compare X19, 0
	104 JumpIfEqual {262}
	105 Move X24, 0x5CA000
	106 Move X8, [X19]
	107 Move X24, [X24+2264]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Move X1, [X24]
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 5
	119 Move X0, X19
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 5
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X19
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Compare X0, 0
	130 JumpIfEqual {262}
	131 Move W25, [X0+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X26, 0x5C3000
	134 Move X27, 0x5CB000
	135 Move X28, 0x5CB000
	136 Move X26, [X26+2208]
	137 Move X27, [X27+848]
	138 Move X28, [X28+2088]
	139 Move W21, W31
	140 Move X29, X31
	141 Move X8, [X19]
	142 Move X1, [X24]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move W2, 5
	153 Move X0, X19
	154 Call 0x1C5D788
	155 Move W9, [X10]
	156 Add W9, W9, 5
	157 Add X8, X8, W9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X1, [X0+8]
	161 Move X0, X19
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Compare X0, 0
	164 JumpIfEqual {262}
	165 Move X2, [X26]
	166 Move W1, W21
	167 Call List`1<Object>.get_Item, X0, X1
	168 Move X8, [X23]
	169 Move X22, X0
	170 Move W9, [X8+224]
	171 Compare W9, 0
	172 JumpIfNotEqual {175}
	173 Move X0, X8
	174 Call 0x1C17DFC
	175 Move X0, X22
	176 Move X1, X31
	177 Move X2, X31
	178 Call Object.op_Equality, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfEqual {246}
	183 Move X0, [X20+56]
	184 Compare X0, 0
	185 JumpIfEqual {262}
	186 Move X2, [X27]
	187 Move X1, X22
	188 Call HashSet`1<Object>.Contains, X0, X1
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {246}
	193 Move X0, [X20+32]
	194 Compare X0, 0
	195 JumpIfEqual {262}
	196 Add X2, X31, 8
	197 Move X1, X22
	198 Move X3, X31
	199 Call XRInteractionManager.TryGetInteractableForCollider, X0, X1, X2
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {246}
	204 Move X8, [X31+8]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X0, [X20+56]
	207 Compare X0, 0
	208 JumpIfEqual {262}
	209 Move X8, 0x5CC000
	210 Move X8, [X8+1280]
	211 Move X1, X22
	212 Move X2, [X8]
	213 Call HashSet`1<Object>.Remove, X0, X1
	214 Move X0, [X20+40]
	215 Compare X0, 0
	216 JumpIfEqual {262}
	217 Move X8, 0x5CC000
	218 Move X8, [X8+1272]
	219 Move X1, X22
	220 Move X2, X19
	221 Move X3, [X8]
	222 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	223 Move X0, [X20+48]
	224 Compare X0, 0
	225 JumpIfEqual {262}
	226 Move X2, [X28]
	227 Move X1, X19
	228 Call HashSet`1<Object>.Add, X0, X1
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {246}
	233 Move X22, [X20+16]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 NotImplemented "Instruction CSEL not yet implemented."
	236 Compare X22, 0
	237 JumpIfEqual {246}
	238 Compare X8, 0
	239 JumpIfEqual {262}
	240 Move X9, [X8+24]
	241 Move X0, [X8+64]
	242 Move X2, [X8+40]
	243 Move X1, X19
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X29, X22
	246 Add W21, W21, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X20, [X31+96]
	249 Move X19, [X31+104]
	250 Move X22, [X31+80]
	251 Move X21, [X31+88]
	252 Move X24, [X31+64]
	253 Move X23, [X31+72]
	254 Move X26, [X31+48]
	255 Move X25, [X31+56]
	256 Move X28, [X31+32]
	257 Move X27, [X31+40]
	258 Move X29, [X31+16]
	259 Move X30, [X31+24]
	260 Add X31, X31, 112
	261 Return 
	262 Call 0x1C17F20

Method: System.Void UpdateStayedColliders(System.Collections.Generic.HashSet`1<UnityEngine.Collider> stayedColliders)

Disassembly:
	0x03B91FF0 RET
	0x03B91FF4 STR X30, [X31 - 0x20]!
	0x03B91FF8 STP X20, X19, [X31 + 0x10]
	0x03B91FFC ADRP X20, 0x851000
	0x03B92000 ADRP X19, 0x5CA000
	0x03B92004 LDRB W8, [X20 + 0xB9D]
	0x03B92008 B 0x3EB1734
	0x03B9200C TBNZ X8, 0x0, 0x3B92024
	0x03B92010 ADRP X0, 0x5CA000
	0x03B92014 LDR X0, [X0 + 0x5A0]
	0x03B92018 BL 0x1C16CF4
	0x03B9201C MOVZ W8, 0x1
	0x03B92020 STRB W8, [X20 + 0xB9D]
	0x03B92024 LDR X0, [X19]
	0x03B92028 STR X31, [X31 + 0x8]
	0x03B9202C LDR W8, [X0 + 0xE0]
	0x03B92030 CBNZ W8, 0x3B92038
	0x03B92034 BL 0x1C16DFC
	0x03B92038 ADD X0, X31, 0x8
	0x03B9203C BL 0x3B91ED8
	0x03B92040 LDR X0, [X31 + 0x8]
	0x03B92044 LDP X20, X19, [X31 + 0x10]
	0x03B92048 LDR X30, [X31], #0x20
	0x03B9204C RET
	0x03B92050 STP X30, X21, [X31 - 0x20]!
	0x03B92054 STP X20, X19, [X31 + 0x10]
	0x03B92058 ADRP X21, 0x850000
	0x03B9205C ADRP X19, 0x5CA000
	0x03B92060 ADRP X20, 0x589000
	0x03B92064 LDRB W8, [X21 + 0xB9E]
	0x03B92068 LDR X19, [X19 + 0x5B8]
	0x03B9206C LDR X20, [X20 + 0x848]
	0x03B92070 TBNZ X8, 0x0, 0x3B920A0
	0x03B92074 ADRP X0, 0x589000
	0x03B92078 LDR X0, [X0 + 0x848]
	0x03B9207C BL 0x1C16CF4
	0x03B92080 ADRP X0, 0x5CA000
	0x03B92084 LDR X0, [X0 + 0x5A0]
	0x03B92088 BL 0x1C16CF4
	0x03B9208C ADRP X0, 0x5CA000
	0x03B92090 LDR X0, [X0 + 0x5B8]
	0x03B92094 BL 0x1C16CF4
	0x03B92098 MOVZ W8, 0x1
	0x03B9209C STRB W8, [X21 + 0xB9E]
	0x03B920A0 LDR X0, [X20]
	0x03B920A4 ADRP X20, 0x5CA000
	0x03B920A8 LDR X19, [X19]
	0x03B920AC LDR W8, [X0 + 0xE0]
	0x03B920B0 LDR X20, [X20 + 0x5A0]
	0x03B920B4 CBNZ W8, 0x3B920BC
	0x03B920B8 BL 0x1C16DFC
	0x03B920BC MOV X0, X19
	0x03B920C0 MOV X1, X31
	0x03B920C4 BL 0x36FA754
	0x03B920C8 LDR X8, [X20]
	0x03B920CC MOV X19, X0
	0x03B920D0 LDR W9, [X8 + 0xE0]
	0x03B920D4 CBNZ W9, 0x3B920E4
	0x03B920D8 MOV X0, X8
	0x03B920DC BL 0x1C16DFC
	0x03B920E0 LDR X8, [X20]
	0x03B920E4 LDR X8, [X8 + 0xB8]
	0x03B920E8 STR X19, [X8 + 0x8]
	0x03B920EC LDP X20, X19, [X31 + 0x10]
	0x03B920F0 LDP X30, X21, [X31], #0x20
	0x03B920F4 RET
	0x03B920F8 RET
	0x03B920FC B 0x3B92050
	0x03B92100 LDR V0, [X0 + 0xA8]
	0x03B92104 RET
	0x03B92108 STR S0, [X0 + 0xA8]
	0x03B9210C RET
	0x03B92110 LDR V0, [X0 + 0xAC]
	0x03B92114 RET
	0x03B92118 STR S0, [X0 + 0xAC]
	0x03B9211C FMUL S0, S0, S0
	0x03B92120 STR S0, [X0 + 0xB4]
	0x03B92124 RET
	0x03B92128 LDR V0, [X0 + 0xB0]
	0x03B9212C RET
	0x03B92130 STR S0, [X0 + 0xB0]
	0x03B92134 RET
	0x03B92138 STR D10, [X31 - 0x30]!
	0x03B9213C STP D9, D8, [X31 + 0x10]
	0x03B92140 STP X30, X19, [X31 + 0x20]
	0x03B92144 MOV V8.16B, V2.16B
	0x03B92148 MOV V9.16B, V1.16B
	0x03B9214C MOV V10.16B, V0.16B
	0x03B92150 MOV X19, X0
	0x03B92154 BL 0x3B92174
	0x03B92158 FMUL S0, S9, S9
	0x03B9215C STP S10, S9, [X19 + 0xA8]
	0x03B92160 STP S8, S0, [X19 + 0xB0]
	0x03B92164 LDP X30, X19, [X31 + 0x20]
	0x03B92168 LDP D9, D8, [X31 + 0x10]
	0x03B9216C LDR V10, [X31], #0x30
	0x03B92170 RET
	0x03B92174 STP X30, X21, [X31 - 0x20]!
	0x03B92178 STP X20, X19, [X31 + 0x10]
	0x03B9217C ADRP X20, 0x850000
	0x03B92180 ADRP X21, 0x5CA000
	0x03B92184 LDRB W8, [X20 + 0xBB8]
	0x03B92188 LDR X21, [X21 + 0x5C0]
	0x03B9218C MOV X19, X0
	0x03B92190 TBNZ X8, 0x0, 0x3B921A8
	0x03B92194 ADRP X0, 0x5CA000
	0x03B92198 LDR X0, [X0 + 0x5C0]
	0x03B9219C BL 0x1C16CF4
	0x03B921A0 MOVZ W8, 0x1
	0x03B921A4 STRB W8, [X20 + 0xBB8]
	0x03B921A8 LDR X1, [X21]
	0x03B921AC MOV X0, X19
	0x03B921B0 LDP X20, X19, [X31 + 0x10]
	0x03B921B4 LDP X30, X21, [X31], #0x20
	0x03B921B8 B 0x270BA80
	0x03B921BC SUB X31, X31, 0x50
	0x03B921C0 STP D9, D8, [X31 + 0x20]
	0x03B921C4 STP X30, X21, [X31 + 0x30]
	0x03B921C8 STP X20, X19, [X31 + 0x40]
	0x03B921CC ADRP X20, 0x850000
	0x03B921D0 STP S0, S1, [X31 + 0x10]
	0x03B921D4 STR S2, [X31 + 0x18]
	0x03B921D8 ADRP X21, 0x5CA000
	0x03B921DC LDRB W8, [X20 + 0xBA0]
	0x03B921E0 LDR X21, [X21 + 0x5C8]
	0x03B921E4 MOV X19, X0
	0x03B921E8 TBNZ X8, 0x0, 0x3B92200
	0x03B921EC ADRP X0, 0x5CA000
	0x03B921F0 LDR X0, [X0 + 0x5C8]
	0x03B921F4 BL 0x1C16CF4
	0x03B921F8 MOVZ W8, 0x1
	0x03B921FC STRB W8, [X20 + 0xBA0]
	0x03B92200 LDR X1, [X21]
	0x03B92204 MOV X0, X19
	0x03B92208 BL 0x270B578
	0x03B9220C STP S0, S1, [X31]
	0x03B92210 STR S2, [X31 + 0x8]
	0x03B92214 LDP S8, S9, [X19 + 0xA8]
	0x03B92218 MOV X0, X31
	0x03B9221C BL 0x3C3C764
	0x03B92220 LDR V1, [X19 + 0xB8]
	0x03B92224 LDR V3, [X19 + 0xB0]
	0x03B92228 ADD X0, X31, 0x0
	0x03B9222C ADD X1, X31, 0x10
	0x03B92230 FSUB S2, S0, S1
	0x03B92234 MOV V0.16B, V8.16B
	0x03B92238 MOV V1.16B, V9.16B
	0x03B9223C BL 0x3B92258
	0x03B92240 LDP X20, X19, [X31 + 0x40]
	0x03B92244 LDP X30, X21, [X31 + 0x30]
	0x03B92248 LDP D9, D8, [X31 + 0x20]
	0x03B9224C AND W0, W0, 0x1
	0x03B92250 ADD X31, X31, 0x50
	0x03B92254 RET
	0x03B92258 STP D11, D10, [X31 - 0x50]!
	0x03B9225C STP D9, D8, [X31 + 0x10]
	0x03B92260 STR X30, [X31 + 0x20]
	0x03B92264 STP X22, X21, [X31 + 0x30]
	0x03B92268 STP X20, X19, [X31 + 0x40]
	0x03B9226C ADRP X21, 0x850000
	0x03B92270 ADRP X22, 0x5CA000
	0x03B92274 LDRB W8, [X21 + 0xBA5]
	0x03B92278 LDR X22, [X22 + 0x5D0]
	0x03B9227C MOV V8.16B, V3.16B
	0x03B92280 MOV V9.16B, V2.16B
	0x03B92284 MOV V10.16B, V1.16B
	0x03B92288 MOV V11.16B, V0.16B
	0x03B9228C MOV X19, X1
	0x03B92290 MOV X20, X0
	0x03B92294 TBNZ X8, 0x0, 0x3B922AC
	0x03B92298 ADRP X0, 0x5CA000
	0x03B9229C LDR X0, [X0 + 0x5D0]
	0x03B922A0 BL 0x1C16CF4
	0x03B922A4 MOVZ W8, 0x1
	0x03B922A8 STRB W8, [X21 + 0xBA5]
	0x03B922AC LDR X0, [X22]
	0x03B922B0 LDR W8, [X0 + 0xE0]
	0x03B922B4 CBNZ W8, 0x3B922BC
	0x03B922B8 BL 0x1C16DFC
	0x03B922BC MOV X0, X20
	0x03B922C0 MOV X1, X19
	0x03B922C4 MOV V2.16B, V9.16B
	0x03B922C8 MOV V3.16B, V8.16B
	0x03B922CC LDP X20, X19, [X31 + 0x40]
	0x03B922D0 LDP X22, X21, [X31 + 0x30]
	0x03B922D4 LDR X30, [X31 + 0x20]
	0x03B922D8 LDP D9, D8, [X31 + 0x10]
	0x03B922DC MOV V0.16B, V11.16B
	0x03B922E0 MOV V1.16B, V10.16B
	0x03B922E4 LDP D11, D10, [X31], #0x50
	0x03B922E8 B 0x3B9270C
	0x03B922EC STR D10, [X31 - 0x30]!
	0x03B922F0 STP D9, D8, [X31 + 0x8]
	0x03B922F4 STR X30, [X31 + 0x18]
	0x03B922F8 STP X20, X19, [X31 + 0x20]
	0x03B922FC ADRP X20, 0x850000
	0x03B92300 LDRB W8, [X20 + 0xBA1]
	0x03B92304 MOV V8.16B, V2.16B
	0x03B92308 MOV V9.16B, V1.16B
	0x03B9230C MOV V10.16B, V0.16B
	0x03B92310 MOV X19, X0
	0x03B92314 TBNZ X8, 0x0, 0x3B9232C
	0x03B92318 ADRP X0, 0x5CA000
	0x03B9231C LDR X0, [X0 + 0x5D8]
	0x03B92320 BL 0x1C16CF4
	0x03B92324 MOVZ W8, 0x1
	0x03B92328 STRB W8, [X20 + 0xBA1]
	0x03B9232C MOV X0, X19
	0x03B92330 MOV V0.16B, V10.16B
	0x03B92334 MOV V1.16B, V9.16B
	0x03B92338 MOV V2.16B, V8.16B
	0x03B9233C BL 0x3B921BC
	0x03B92340 MOV W20, W0
	0x03B92344 TBZ X0, 0x0, 0x3B92368
	0x03B92348 ADRP X8, 0x5CA000
	0x03B9234C LDR X8, [X8 + 0x5D8]
	0x03B92350 MOV X0, X19
	0x03B92354 MOV V0.16B, V10.16B
	0x03B92358 MOV V1.16B, V9.16B
	0x03B9235C LDR X1, [X8]
	0x03B92360 MOV V2.16B, V8.16B
	0x03B92364 BL 0x270D5B0
	0x03B92368 AND W0, W20, 0x1
	0x03B9236C LDP X20, X19, [X31 + 0x20]
	0x03B92370 LDR X30, [X31 + 0x18]
	0x03B92374 LDP D9, D8, [X31 + 0x8]
	0x03B92378 LDR V10, [X31], #0x30
	0x03B9237C RET
	0x03B92380 STR D10, [X31 - 0x40]!
	0x03B92384 STP D9, D8, [X31 + 0x10]
	0x03B92388 STP X30, X21, [X31 + 0x20]
	0x03B9238C STP X20, X19, [X31 + 0x30]
	0x03B92390 ADRP X20, 0x850000
	0x03B92394 ADRP X21, 0x5CA000
	0x03B92398 LDRB W8, [X20 + 0xBA2]
	0x03B9239C LDR X21, [X21 + 0x5E0]
	0x03B923A0 MOV V8.16B, V2.16B
	0x03B923A4 MOV V9.16B, V1.16B
	0x03B923A8 MOV V10.16B, V0.16B
	0x03B923AC MOV X19, X0
	0x03B923B0 TBNZ X8, 0x0, 0x3B923C8
	0x03B923B4 ADRP X0, 0x5CA000
	0x03B923B8 LDR X0, [X0 + 0x5E0]
	0x03B923BC BL 0x1C16CF4
	0x03B923C0 MOVZ W8, 0x1
	0x03B923C4 STRB W8, [X20 + 0xBA2]
	0x03B923C8 LDR X1, [X21]
	0x03B923CC MOV X0, X19
	0x03B923D0 MOV V0.16B, V10.16B
	0x03B923D4 MOV V1.16B, V9.16B
	0x03B923D8 MOV V2.16B, V8.16B
	0x03B923DC BL 0x270D7C8
	0x03B923E0 MOV X0, X31
	0x03B923E4 BL 0x3C3C764
	0x03B923E8 STR S0, [X19 + 0xB8]
	0x03B923EC LDP X20, X19, [X31 + 0x30]
	0x03B923F0 LDP X30, X21, [X31 + 0x20]
	0x03B923F4 LDP D9, D8, [X31 + 0x10]
	0x03B923F8 LDR V10, [X31], #0x40
	0x03B923FC RET
	0x03B92400 SUB X31, X31, 0x70
	0x03B92404 STR D10, [X31 + 0x30]
	0x03B92408 STP D9, D8, [X31 + 0x38]
	0x03B9240C STR X30, [X31 + 0x48]
	0x03B92410 STP X22, X21, [X31 + 0x50]
	0x03B92414 STP X20, X19, [X31 + 0x60]
	0x03B92418 ADRP X22, 0x850000
	0x03B9241C ADRP X21, 0x5CA000
	0x03B92420 ADRP X20, 0x5CA000
	0x03B92424 LDRB W8, [X22 + 0xBA3]
	0x03B92428 LDR X21, [X21 + 0x5C8]
	0x03B9242C LDR X20, [X20 + 0x5E8]
	0x03B92430 MOV V8.16B, V2.16B
	0x03B92434 MOV V9.16B, V1.16B
	0x03B92438 MOV V10.16B, V0.16B
	0x03B9243C MOV X19, X0
	0x03B92440 TBNZ X8, 0x0, 0x3B92470
	0x03B92444 ADRP X0, 0x5CA000
	0x03B92448 LDR X0, [X0 + 0x5C8]
	0x03B9244C BL 0x1C16CF4
	0x03B92450 ADRP X0, 0x5CA000
	0x03B92454 LDR X0, [X0 + 0x5E8]
	0x03B92458 BL 0x1C16CF4
	0x03B9245C ADRP X0, 0x5CA000
	0x03B92460 LDR X0, [X0 + 0x5F0]
	0x03B92464 BL 0x1C16CF4
	0x03B92468 MOVZ W8, 0x1
	0x03B9246C STRB W8, [X22 + 0xBA3]
	0x03B92470 LDR X1, [X21]
	0x03B92474 MOV X0, X19
	0x03B92478 STR W31, [X31 + 0xC]
	0x03B9247C BL 0x270B578
	0x03B92480 STP S0, S1, [X31 + 0x20]
	0x03B92484 STR S2, [X31 + 0x28]
	0x03B92488 LDR V0, [X19 + 0x40]
	0x03B9248C LDR V1, [X19 + 0x48]
	0x03B92490 ADD X0, X31, 0x20
	0x03B92494 ADD X1, X31, 0x10
	0x03B92498 STR D0, [X31 + 0x10]
	0x03B9249C STR S1, [X31 + 0x18]
	0x03B924A0 LDR V0, [X19 + 0xB4]
	0x03B924A4 ADD X2, X31, 0xC
	0x03B924A8 MOV V1.16B, V10.16B
	0x03B924AC MOV V2.16B, V9.16B
	0x03B924B0 MOV V3.16B, V8.16B
	0x03B924B4 BL 0x3B924E4
	0x03B924B8 LDR V0, [X31 + 0xC]
	0x03B924BC LDR X1, [X20]
	0x03B924C0 MOV X0, X19
	0x03B924C4 BL 0x270D608
	0x03B924C8 LDP X20, X19, [X31 + 0x60]
	0x03B924CC LDP X22, X21, [X31 + 0x50]
	0x03B924D0 LDR X30, [X31 + 0x48]
	0x03B924D4 LDP D9, D8, [X31 + 0x38]
	0x03B924D8 LDR V10, [X31 + 0x30]
	0x03B924DC ADD X31, X31, 0x70
	0x03B924E0 RET
	0x03B924E4 STP D11, D10, [X31 - 0x50]!
	0x03B924E8 STP D9, D8, [X31 + 0x10]
	0x03B924EC STP X30, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X27
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X21, 0x851000
	013 Move X23, 0x5C9000
	014 Move W8, [X21+2962]
	015 Move X23, [X23+3664]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {84}
	022 Move X0, 0x564000
	023 Move X0, [X0+1744]
	024 Call 0x1C17CF4
	025 Move X0, 0x5CB000
	026 Move X0, [X0+1344]
	027 Call 0x1C17CF4
	028 Move X0, 0x5CB000
	029 Move X0, [X0+1352]
	030 Call 0x1C17CF4
	031 Move X0, 0x5C9000
	032 Move X0, [X0+1632]
	033 Call 0x1C17CF4
	034 Move X0, 0x5CB000
	035 Move X0, [X0+1360]
	036 Call 0x1C17CF4
	037 Move X0, 0x5CB000
	038 Move X0, [X0+1368]
	039 Call 0x1C17CF4
	040 Move X0, 0x5C9000
	041 Move X0, [X0+1640]
	042 Call 0x1C17CF4
	043 Move X0, 0x5C9000
	044 Move X0, [X0+1648]
	045 Call 0x1C17CF4
	046 Move X0, 0x5CB000
	047 Move X0, [X0+1376]
	048 Call 0x1C17CF4
	049 Move X0, 0x5CA000
	050 Move X0, [X0+848]
	051 Call 0x1C17CF4
	052 Move X0, 0x5C9000
	053 Move X0, [X0+1656]
	054 Call 0x1C17CF4
	055 Move X0, 0x5CB000
	056 Move X0, [X0+1280]
	057 Call 0x1C17CF4
	058 Move X0, 0x5CB000
	059 Move X0, [X0+1312]
	060 Call 0x1C17CF4
	061 Move X0, 0x5CB000
	062 Move X0, [X0+1384]
	063 Call 0x1C17CF4
	064 Move X0, 0x5CB000
	065 Move X0, [X0+1320]
	066 Call 0x1C17CF4
	067 Move X0, 0x5C2000
	068 Move X0, [X0+2192]
	069 Call 0x1C17CF4
	070 Move X0, 0x5CB000
	071 Move X0, [X0+1328]
	072 Call 0x1C17CF4
	073 Move X0, 0x5C2000
	074 Move X0, [X0+2200]
	075 Call 0x1C17CF4
	076 Move X0, 0x5CB000
	077 Move X0, [X0+1392]
	078 Call 0x1C17CF4
	079 Move X0, 0x5C9000
	080 Move X0, [X0+3664]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X21+2962], W8
	084 Move X0, [X23]
	085 Move [X31+48], X31
	086 Move [X31+56], X31
	087 Move [X31+64], X31
	088 Move [X31+24], X31
	089 Move [X31+32], X31
	090 Move [X31+40], X31
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X23]
	096 Move X8, [X0+184]
	097 Move X8, [X8+8]
	098 Compare X8, 0
	099 JumpIfEqual {298}
	100 Move W2, [X8+24]
	101 Move W9, [X8+28]
	102 Add W9, W9, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X8+24], W31
	105 Move [X8+28], W9
	106 Move X0, [X8+16]
	107 Move W1, W31
	108 Move X3, X31
	109 Call Array.Clear, X0, X1, X2
	110 Move X0, [X19+40]
	111 Compare X0, 0
	112 JumpIfEqual {298}
	113 Move X8, 0x5CB000
	114 Move X8, [X8+1344]
	115 Move X1, [X8]
	116 Call Dictionary`2<Object, Object>.get_Count, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X19+40]
	119 Compare X0, 0
	120 JumpIfEqual {298}
	121 Move X8, 0x5CB000
	122 Move X8, [X8+1352]
	123 Move X1, [X8]
	124 Call Dictionary`2<Object, Object>.get_Keys, X0
	125 Compare X0, 0
	126 JumpIfEqual {298}
	127 Move X8, 0x5CB000
	128 Move X8, [X8+1384]
	129 Move X24, 0x5CB000
	130 Move X25, 0x5CA000
	131 Move X24, [X24+1368]
	132 Move X25, [X25+848]
	133 Move X1, [X8]
	134 Move X26, 0x5CB000
	135 Move X27, 0x5CB000
	136 Move X22, 0x5CB000
	137 Move X26, [X26+1280]
	138 Move X27, [X27+1320]
	139 Move X22, [X22+1360]
	140 Add X8, X31, 0
	141 Call KeyCollection<Object, Object>.GetEnumerator, X0
	142 Move V0, [X31]
	143 Move X8, [X31+16]
	144 Move [X31+3], V0
	145 Move [X31+64], X8
	146 Move X1, [X24]
	147 Add X0, X31, 48
	148 Call Enumerator<Object, Object>.MoveNext, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {197}
	153 Compare X20, 0
	154 JumpIfEqual {292}
	155 Move X21, [X31+64]
	156 Move X2, [X25]
	157 Move X0, X20
	158 Move X1, X21
	159 Call HashSet`1<Object>.Contains, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {168}
	164 Move X2, [X26]
	165 Move X0, X20
	166 Move X1, X21
	167 Call HashSet`1<Object>.Remove, X0, X1
	168 Move X0, [X23]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X23]
	174 Move X8, [X0+184]
	175 Move X0, [X8+8]
	176 Compare X0, 0
	177 JumpIfEqual {296}
	178 Move W10, [X0+28]
	179 Move X8, [X0+16]
	180 Move X9, [X27]
	181 Add W10, W10, 1
	182 Move [X0+28], W10
	183 Compare X8, 0
	184 JumpIfEqual {294}
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Move W11, [X8+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add W9, W10, 1
	189 Add X8, X8, X10
	190 Move [X0+24], W9
	191 Move [X8+32], X21
	192 Move X8, [X9+32]
	193 Move X8, [X8+192]
	194 Move X2, [X8+112]
	195 Move X1, X21
	196 Call List`1<Object>.AddWithResize, X0, X1
	197 Move X1, [X22]
	198 Add X0, X31, 48
	199 Call Enumerator<Object, Object>.Dispose, X0
	200 Compare X20, 0
	201 JumpIfEqual {298}
	202 Move W8, [X20+32]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X8, 0x5C9000
	205 Move X8, [X8+1656]
	206 Move X21, 0x5C9000
	207 Move X22, 0x5C9000
	208 Move X0, X20
	209 Move X1, [X8]
	210 Move X21, [X21+1640]
	211 Move X22, [X22+1632]
	212 Add X8, X31, 24
	213 Call HashSet`1<Object>.GetEnumerator, X0
	214 Move X1, [X21]
	215 Add X0, X31, 24
	216 Call Enumerator<Object>.MoveNext, X0
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {224}
	221 Move X1, [X31+40]
	222 Move X0, X19
	223 Call TriggerContactMonitor.AddCollider, X0, X1
	224 Move X1, [X22]
	225 Add X0, X31, 24
	226 Call Enumerator<Object>.Dispose, X0
	227 Move X0, [X23]
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {233}
	231 Call 0x1C17DFC
	232 Move X0, [X23]
	233 Move X8, [X0+184]
	234 Move X20, [X8+8]
	235 Compare X20, 0
	236 JumpIfEqual {298}
	237 Move W8, [X20+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X22, 0x564000
	240 Move X21, 0x5CB000
	241 Move W8, [X0+224]
	242 Move X22, [X22+1744]
	243 Move X21, [X21+1392]
	244 Compare W8, 0
	245 JumpIfNotEqual {250}
	246 Call 0x1C17DFC
	247 Move X8, [X23]
	248 Move X8, [X8+184]
	249 Move X20, [X8+8]
	250 Move X0, [X22]
	251 Call 0x1C17F10
	252 Move X2, [X21]
	253 Move X1, X19
	254 Move X3, X31
	255 Move X21, X0
	256 Call Action`1<Object>..ctor, X0, X1, X2
	257 Compare X20, 0
	258 JumpIfEqual {298}
	259 Move X8, 0x5CB000
	260 Move X8, [X8+1328]
	261 Move X0, X20
	262 Move X1, X21
	263 Move X2, [X8]
	264 Call List`1<Object>.ForEach, X0, X1
	265 Move X8, [X23]
	266 Move X8, [X8+184]
	267 Move X8, [X8+8]
	268 Compare X8, 0
	269 JumpIfEqual {298}
	270 Move W2, [X8+24]
	271 Move W9, [X8+28]
	272 Add W9, W9, 1
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move [X8+24], W31
	275 Move [X8+28], W9
	276 Move X0, [X8+16]
	277 Move W1, W31
	278 Move X3, X31
	279 Call Array.Clear, X0, X1, X2
	280 Move X20, [X31+144]
	281 Move X19, [X31+152]
	282 Move X22, [X31+128]
	283 Move X21, [X31+136]
	284 Move X24, [X31+112]
	285 Move X23, [X31+120]
	286 Move X26, [X31+96]
	287 Move X25, [X31+104]
	288 Move X30, [X31+80]
	289 Move X27, [X31+88]
	290 Add X31, X31, 160
	291 Return 
	292 Move X24, X22
	293 Call 0x1C17F20
	294 Move X24, X22
	295 Call 0x1C17F20
	296 Move X24, X22
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move X24, X22
	300 Move X21, X0
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X0, X21
	303 Call 0x3EB2AD0
	304 Move X22, [X0]
	305 Call 0x3EB2AE0
	306 Move X1, [X24]
	307 Add X0, X31, 48
	308 Call Enumerator<Object, Object>.Dispose, X0
	309 Compare X22, 0
	310 JumpIfEqual {200}
	311 Move X0, X22
	312 Call 0x1C17F18
	313 Move X22, X31
	314 Move X21, X0
	315 Move X1, [X24]
	316 Add X0, X31, 48
	317 Call Enumerator<Object, Object>.Dispose, X0
	318 Compare X22, 0
	319 JumpIfEqual {342}
	320 Move X0, X22
	321 Call 0x1C17F18
	322 Move X21, X0
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X0, X21
	325 Call 0x3EB2AD0
	326 Move X20, [X0]
	327 Call 0x3EB2AE0
	328 Move X1, [X22]
	329 Add X0, X31, 24
	330 Call Enumerator<Object>.Dispose, X0
	331 Compare X20, 0
	332 JumpIfEqual {227}
	333 Move X0, X20
	334 Call 0x1C17F18
	335 Move X20, X31
	336 Move X21, X0
	337 Move X1, [X22]
	338 Add X0, X31, 24
	339 Call Enumerator<Object>.Dispose, X0
	340 Compare X20, 0
	341 JumpIfNotEqual {344}
	342 Move X0, X21
	343 Call 0x1D2D690
	344 Move X0, X20
	345 Call 0x1C17F18
	346 Call 0x1991590

Method: System.Boolean IsContacting(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable)

Disassembly:
	0x03B924F0 STP X22, X21, [X31 + 0x30]
	0x03B924F4 STP X20, X19, [X31 + 0x40]
	0x03B924F8 ADRP X22, 0x850000
	0x03B924FC ADRP X23, 0x5CA000
	0x03B92500 LDRB W8, [X22 + 0xBA4]
	0x03B92504 LDR X23, [X23 + 0x5F8]
	0x03B92508 MOV X19, X2
	0x03B9250C MOV V8.16B, V3.16B
	0x03B92510 MOV V9.16B, V2.16B
	0x03B92514 MOV V10.16B, V1.16B
	0x03B92518 MOV V11.16B, V0.16B
	0x03B9251C MOV X20, X1
	0x03B92520 MOV X21, X0
	0x03B92524 TBNZ X8, 0x0, 0x3B9253C
	0x03B92528 ADRP X0, 0x5CA000
	0x03B9252C LDR X0, [X0 + 0x5F8]
	0x03B92530 BL 0x1C16CF4
	0x03B92534 MOVZ W8, 0x1
	0x03B92538 STRB W8, [X22 + 0xBA4]
	0x03B9253C LDR X0, [X23]
	0x03B92540 LDR W8, [X0 + 0xE0]
	0x03B92544 CBNZ W8, 0x3B9254C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x851000
	006 Move W8, [X21+2963]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5CA000
	014 Move X0, [X0+2104]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2963], W8
	018 Move X0, [X20+48]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x5CA000
	022 Move X8, [X8+2104]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call HashSet`1<Object>.Contains, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean IsDestroyed(UnityEngine.Collider col)

Disassembly:
	0x03B92548 BL 0x1C16DFC
	0x03B9254C MOV X0, X21
	0x03B92550 MOV X1, X20
	0x03B92554 MOV V2.16B, V9.16B
	0x03B92558 MOV V3.16B, V8.16B
	0x03B9255C MOV X2, X19
	0x03B92560 LDP X20, X19, [X31 + 0x40]
	0x03B92564 LDP X22, X21, [X31 + 0x30]
	0x03B92568 LDP X30, X23, [X31 + 0x20]
	0x03B9256C LDP D9, D8, [X31 + 0x10]
	0x03B92570 MOV V0.16B, V11.16B
	0x03B92574 MOV V1.16B, V10.16B
	0x03B92578 LDP D11, D10, [X31], #0x50
	0x03B9257C B 0x3B92580
	0x03B92580 STP D11, D10, [X31 - 0x50]!
	0x03B92584 STP D9, D8, [X31 + 0x10]
	0x03B92588 STP X30, X23, [X31 + 0x20]
	0x03B9258C STP X22, X21, [X31 + 0x30]
	0x03B92590 STP X20, X19, [X31 + 0x40]
	0x03B92594 ADRP X22, 0x850000
	0x03B92598 ADRP X23, 0x589000
	0x03B9259C LDRB W8, [X22 + 0xBAA]
	0x03B925A0 LDR X23, [X23 + 0x848]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x851000
	006 Move X21, 0x562000
	007 Move W8, [X20+2964]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x562000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2964], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Object.op_Equality, X0, X1
	032 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B925A4 MOV X19, X2
	0x03B925A8 MOV V10.16B, V3.16B
	0x03B925AC MOV V8.16B, V2.16B
	0x03B925B0 MOV V9.16B, V1.16B
	0x03B925B4 MOV V11.16B, V0.16B
	0x03B925B8 MOV X20, X1
	0x03B925BC MOV X21, X0
	0x03B925C0 TBNZ X8, 0x0, 0x3B925E4
	0x03B925C4 ADRP X0, 0x589000
	0x03B925C8 LDR X0, [X0 + 0x848]
	0x03B925CC BL 0x1C16CF4
	0x03B925D0 ADRP X0, 0x5CA000
	0x03B925D4 LDR X0, [X0 + 0x5F8]
	0x03B925D8 BL 0x1C16CF4
	0x03B925DC MOVZ W8, 0x1
	0x03B925E0 STRB W8, [X22 + 0xBAA]
	0x03B925E4 LDR X0, [X23]
	0x03B925E8 LDR W8, [X0 + 0xE0]
	0x03B925EC CBNZ W8, 0x3B925F4
	0x03B925F0 BL 0x1C16DFC
	0x03B925F4 MOV X0, X31
	0x03B925F8 BL 0x36FA670
	0x03B925FC TBZ X0, 0x0, 0x3B92658
	0x03B92600 ADRP X8, 0x5CA000
	0x03B92604 LDR X8, [X8 + 0x5F8]
	0x03B92608 LDR X0, [X8]
	0x03B9260C LDR W8, [X0 + 0xE0]
	0x03B92610 CBNZ W8, 0x3B92618
	0x03B92614 BL 0x1C16DFC
	0x03B92618 BL 0x3B92CA4
	0x03B9261C CBZ X0, 0x3B92658
	0x03B92620 MOV X3, X0
	0x03B92624 MOV X0, X21
	0x03B92628 MOV X1, X20
	0x03B9262C MOV V1.16B, V9.16B
	0x03B92630 MOV V2.16B, V8.16B
	0x03B92634 MOV X2, X19
	0x03B92638 LDP X20, X19, [X31 + 0x40]
	0x03B9263C LDP X22, X21, [X31 + 0x30]
	0x03B92640 LDP X30, X23, [X31 + 0x20]
	0x03B92644 LDP D9, D8, [X31 + 0x10]
	0x03B92648 MOV V0.16B, V11.16B
	0x03B9264C MOV V3.16B, V10.16B
	0x03B92650 LDP D11, D10, [X31], #0x50
	0x03B92654 BR X3
	0x03B92658 LDR V0, [X21]
	0x03B9265C LDUR V1, [X21 + 0x4]
	0x03B92660 LDR V2, [X20]
	0x03B92664 LDUR V3, [X20 + 0x4]
	0x03B92668 MOVZ W8, 0x7F800000
	0x03B9266C LDP X22, X21, [X31 + 0x30]
	0x03B92670 FSUB S0, S2, S0
	0x03B92674 FSUB V1.2S, V3.2S, V1.2S
	0x03B92678 FMUL S0, S0, S0
	0x00000000 INVALID
	0x03B92680 FADD S0, S0, S1
	0x03B92684 MOV S1, V1.S[1]
	0x03B92688 FADD S0, S1, S0
	0x03B9268C FDIV S0, S0, S11
	0x03B92690 FMOV W9, S0
	0x03B92694 AND W9, W9, 0x7FFFFFFF
	0x03B92698 FMOV S1, 1
	0x03B9269C CMP W9, W8
	0x03B926A0 FCCMP S0, S1, 0x0, LS
	0x03B926A4 FCSEL S0, S1, S0, GT
	0x03B926A8 FMOV W9, S0
	0x03B926AC AND W9, W9, 0x7FFFFFFF

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x851000
	011 Move X26, 0x5CA000
	012 Move X20, 0x5CA000
	013 Move X24, 0x5CA000
	014 Move X23, 0x5CA000
	015 Move X22, 0x5C9000
	016 Move X21, 0x5C9000
	017 Move X26, [X26+2344]
	018 Move W8, [X25+2965]
	019 Move X20, [X20+2320]
	020 Move X24, [X24+2488]
	021 Move X23, [X23+2464]
	022 Move X22, [X22+2096]
	023 Move X21, [X21+2088]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x5CA000
	030 Move X0, [X0+2320]
	031 Call 0x1C17CF4
	032 Move X0, 0x5CA000
	033 Move X0, [X0+2344]
	034 Call 0x1C17CF4
	035 Move X0, 0x5CA000
	036 Move X0, [X0+2464]
	037 Call 0x1C17CF4
	038 Move X0, 0x5C9000
	039 Move X0, [X0+2088]
	040 Call 0x1C17CF4
	041 Move X0, 0x5C9000
	042 Move X0, [X0+2096]
	043 Call 0x1C17CF4
	044 Move X0, 0x5CA000
	045 Move X0, [X0+2488]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+2965], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X1, [X20]
	052 Move X20, X0
	053 Call Dictionary`2<Object, Object>..ctor, X0
	054 Move [X19+40], X20
	055 Move X0, [X24]
	056 Call 0x1C17F10
	057 Move X1, [X23]
	058 Move X20, X0
	059 Call HashSet`1<Object>..ctor, X0
	060 Move [X19+48], X20
	061 Move X0, [X22]
	062 Call 0x1C17F10
	063 Move X1, [X21]
	064 Move X20, X0
	065 Call HashSet`1<Object>..ctor, X0
	066 Move [X19+56], X20
	067 Move X0, X19
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X24, [X31+32]
	073 Move X23, [X31+40]
	074 Move X26, [X31+16]
	075 Move X25, [X31+24]
	076 Move X1, X31
	077 Move X30, [X31+80]
	078 Call Object..ctor, X0
	079 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B926B0 FMOV S2, W31
	0x03B926B4 CMP W9, W8
	0x03B926B8 FSUB S3, S1, S0
	0x03B926BC FCCMP S0, S2, 0x8, LS
	0x03B926C0 FCSEL S0, S1, S3, MI
	0x03B926C4 FMUL S0, S0, S10
	0x03B926C8 FMOV W9, S0
	0x03B926CC AND W9, W9, 0x7FFFFFFF
	0x03B926D0 CMP W9, W8
	0x03B926D4 FCCMP S0, S10, 0x0, LS
	0x03B926D8 FCSEL S0, S10, S0, GT
	0x03B926DC FMOV W9, S0
	0x03B926E0 AND W9, W9, 0x7FFFFFFF
	0x03B926E4 CMP W9, W8
	0x03B926E8 FCCMP S0, S8, 0x8, LS
	0x03B926EC FCSEL S0, S8, S0, MI
	0x03B926F0 FMUL S0, S0, S9
	0x03B926F4 STR S0, [X19]
	0x03B926F8 LDP X20, X19, [X31 + 0x40]
	0x03B926FC LDP X30, X23, [X31 + 0x20]
	0x03B92700 LDP D9, D8, [X31 + 0x10]
	0x03B92704 LDP D11, D10, [X31], #0x50
	0x03B92708 RET
	0x03B9270C STP D11, D10, [X31 - 0x50]!
	0x03B92710 STP D9, D8, [X31 + 0x10]
	0x03B92714 STR X30, [X31 + 0x20]
	0x03B92718 STP X22, X21, [X31 + 0x30]
	0x03B9271C STP X20, X19, [X31 + 0x40]
	0x03B92720 ADRP X21, 0x850000
	0x03B92724 ADRP X22, 0x589000
	0x03B92728 LDRB W8, [X21 + 0xBAF]
	0x03B9272C LDR X22, [X22 + 0x848]
	0x03B92730 MOV V10.16B, V3.16B
	0x03B92734 MOV V11.16B, V2.16B
	0x03B92738 MOV V8.16B, V1.16B
	0x03B9273C MOV V9.16B, V0.16B
	0x03B92740 MOV X19, X1
	0x03B92744 MOV X20, X0
	0x03B92748 TBNZ X8, 0x0, 0x3B9276C
	0x03B9274C ADRP X0, 0x589000
	0x03B92750 LDR X0, [X0 + 0x848]
	0x03B92754 BL 0x1C16CF4
	0x03B92758 ADRP X0, 0x5CA000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x851000
	007 Move X22, 0x58E000
	008 Move X21, 0x58E000
	009 Move X20, 0x5C9000
	010 Move W8, [X19+2966]
	011 Move X22, [X22+3144]
	012 Move X21, [X21+3152]
	013 Move X20, [X20+3664]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x58E000
	019 Move X0, [X0+3152]
	020 Call 0x1C17CF4
	021 Move X0, 0x58E000
	022 Move X0, [X0+3144]
	023 Call 0x1C17CF4
	024 Move X0, 0x5C9000
	025 Move X0, [X0+3664]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+2966], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X21]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X8, [X8+184]
	036 Move [X8], X19
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X1, [X21]
	040 Move X19, X0
	041 Call List`1<Object>..ctor, X0
	042 Move X8, [X20]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+48]
	050 Return 

