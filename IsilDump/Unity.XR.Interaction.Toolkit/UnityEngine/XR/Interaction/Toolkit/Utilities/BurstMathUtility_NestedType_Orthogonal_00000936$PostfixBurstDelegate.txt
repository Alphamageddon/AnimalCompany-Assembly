Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/Orthogonal_00000936$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B8D034 STP X20, X19, [X31 + 0xA0]
	0x03B8D038 STP S1, S0, [X31 + 0x58]
	0x03B8D03C ADRP X28, 0x855000
	0x03B8D040 STR S2, [X31 + 0x4C]
	0x03B8D044 ADRP X26, 0x566000
	0x03B8D048 ADRP X27, 0x566000
	0x03B8D04C LDRB W8, [X28 + 0xB66]
	0x03B8D050 LDR X26, [X26 + 0xA90]
	0x03B8D054 LDR X27, [X27 + 0x5A0]
	0x03B8D058 MOV X19, X6
	0x03B8D05C MOV X20, X5
	0x03B8D060 MOV X22, X4
	0x03B8D064 MOV X23, X3
	0x03B8D068 MOV X24, X2
	0x03B8D06C MOV X25, X1
	0x03B8D070 MOV X21, X0
	0x03B8D074 TBNZ X8, 0x0, 0x3B8D098
	0x03B8D078 ADRP X0, 0x566000
	0x03B8D07C LDR X0, [X0 + 0xA90]
	0x03B8D080 BL 0x1C16CF4
	0x03B8D084 ADRP X0, 0x566000
	0x03B8D088 LDR X0, [X0 + 0x5A0]
	0x03B8D08C BL 0x1C16CF4
	0x03B8D090 MOVZ W8, 0x1
	0x03B8D094 STRB W8, [X28 + 0xB66]
	0x03B8D098 LDR X0, [X26]
	0x03B8D09C MOVI V0.2D, 0x0
	0x03B8D0A0 ADD X1, X31, 0x5C
	0x03B8D0A4 STP V0, V0, [X31 + 0x20]
	0x03B8D0A8 STP V0, V0, [X31]
	0x03B8D0AC BL 0x1C16E04
	0x03B8D0B0 LDR X8, [X26]
	0x03B8D0B4 STR X0, [X31]
	0x03B8D0B8 ADD X1, X31, 0x58
	0x03B8D0BC MOV X0, X8
	0x03B8D0C0 BL 0x1C16E04
	0x03B8D0C4 LDR X8, [X26]
	0x03B8D0C8 STR X0, [X31 + 0x8]
	0x03B8D0CC ADD X1, X31, 0x4C
	0x03B8D0D0 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33087488
	021 Add X8, X8, 2196
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33087488
	024 Add X8, X8, 2176
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33087488
	033 Add X8, X8, 2088
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50794496
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 input, out Unity.Mathematics.float3 result)

Disassembly:
	0x03B8D0D4 BL 0x1C16E04
	0x03B8D0D8 LDR X8, [X27]
	0x03B8D0DC STR X0, [X31 + 0x10]
	0x03B8D0E0 MOV X1, X25
	0x03B8D0E4 MOV X0, X8

ISIL:
	001 Move X8, [X0+64]
	002 Move X4, [X0+24]
	003 Move X3, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X4

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 input, out Unity.Mathematics.float3 result, System.AsyncCallback param_2, System.Object param_3)

Disassembly:
	0x03B8D0E8 BL 0x1C16E04
	0x03B8D0EC LDR X8, [X27]
	0x03B8D0F0 STR X0, [X31 + 0x18]
	0x03B8D0F4 MOV X1, X24
	0x03B8D0F8 MOV X0, X8
	0x03B8D0FC BL 0x1C16E04
	0x03B8D100 LDR X8, [X26]
	0x03B8D104 STR X0, [X31 + 0x20]
	0x03B8D108 MOV X1, X23
	0x03B8D10C MOV X0, X8
	0x03B8D110 BL 0x1C16E04
	0x03B8D114 LDR X8, [X26]
	0x03B8D118 STR X0, [X31 + 0x28]
	0x03B8D11C MOV X1, X22
	0x03B8D120 MOV X0, X8
	0x03B8D124 BL 0x1C16E04
	0x03B8D128 STR X0, [X31 + 0x30]
	0x03B8D12C ADD X1, X31, 0x0
	0x03B8D130 MOV X0, X21
	0x03B8D134 MOV X2, X20
	0x03B8D138 MOV X3, X19
	0x03B8D13C BL 0x1C16CB0
	0x03B8D140 LDP X20, X19, [X31 + 0xA0]
	0x03B8D144 LDP X22, X21, [X31 + 0x90]
	0x03B8D148 LDP X24, X23, [X31 + 0x80]
	0x03B8D14C LDP X26, X25, [X31 + 0x70]
	0x03B8D150 LDP X28, X27, [X31 + 0x60]
	0x03B8D154 LDR X30, [X31 + 0x50]
	0x03B8D158 ADD X31, X31, 0xB0
	0x03B8D15C RET
	0x03B8D160 MOV X0, X1
	0x03B8D164 MOV X1, X31
	0x03B8D168 B 0x1C16CB4
	0x03B8D16C STP X30, X23, [X31 - 0x30]!
	0x03B8D170 STP X22, X21, [X31 + 0x10]
	0x03B8D174 STP X20, X19, [X31 + 0x20]
	0x03B8D178 ADRP X20, 0x855000
	0x03B8D17C ADRP X23, 0x5CF000
	0x03B8D180 LDRB W8, [X20 + 0xB67]
	0x03B8D184 LDR X23, [X23 + 0x290]
	0x03B8D188 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X25, 0x856000
	011 Move X24, 0x592000
	012 Move W8, [X25+2905]
	013 Move X24, [X24+2104]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x592000
	024 Move X0, [X0+2104]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+2905], W8
	028 Move X0, [X24]
	029 Move X1, X23
	030 Move [X31+24], X31
	031 Call 0x1C17E04
	032 Move X8, [X24]
	033 Move [X31+8], X0
	034 Move X1, X22
	035 Move X0, X8
	036 Call 0x1C17E04
	037 Move [X31+16], X0
	038 Add X1, X31, 8
	039 Move X0, X21
	040 Move X2, X20
	041 Move X3, X19
	042 Call 0x1C17CB0
	043 Move X20, [X31+80]
	044 Move X19, [X31+88]
	045 Move X22, [X31+64]
	046 Move X21, [X31+72]
	047 Move X24, [X31+48]
	048 Move X23, [X31+56]
	049 Move X30, [X31+32]
	050 Move X25, [X31+40]
	051 Add X31, X31, 96
	052 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B8D18C TBNZ X8, 0x0, 0x3B8D1C8
	0x03B8D190 ADRP X0, 0x58E000
	0x03B8D194 LDR X0, [X0 + 0x848]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

