Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/OrthogonalUpVector_00000927$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B89D34 ADRP X19, 0x5D3000
	0x03B89D38 LDRB W8, [X20 + 0xB29]
	0x03B89D3C LDR X19, [X19 + 0xB0]
	0x03B89D40 TBNZ X8, 0x0, 0x3B89D58
	0x03B89D44 ADRP X0, 0x5D3000
	0x03B89D48 LDR X0, [X0 + 0xB0]
	0x03B89D4C BL 0x1C16CF4
	0x03B89D50 MOVZ W8, 0x1
	0x03B89D54 STRB W8, [X20 + 0xB29]
	0x03B89D58 LDR X0, [X19]
	0x03B89D5C STR X31, [X31 + 0x8]
	0x03B89D60 LDR W8, [X0 + 0xE0]
	0x03B89D64 CBNZ W8, 0x3B89D6C
	0x03B89D68 BL 0x1C16DFC
	0x03B89D6C ADD X0, X31, 0x8
	0x03B89D70 BL 0x3B89C0C
	0x03B89D74 LDR X0, [X31 + 0x8]
	0x03B89D78 LDP X20, X19, [X31 + 0x10]
	0x03B89D7C LDR X30, [X31], #0x20
	0x03B89D80 RET
	0x03B89D84 STP X30, X21, [X31 - 0x20]!
	0x03B89D88 STP X20, X19, [X31 + 0x10]
	0x03B89D8C ADRP X21, 0x859000
	0x03B89D90 ADRP X19, 0x5D3000
	0x03B89D94 ADRP X20, 0x592000
	0x03B89D98 LDRB W8, [X21 + 0xB2A]
	0x03B89D9C LDR X19, [X19 + 0x190]
	0x03B89DA0 LDR X20, [X20 + 0x848]
	0x03B89DA4 TBNZ X8, 0x0, 0x3B89DD4
	0x03B89DA8 ADRP X0, 0x592000
	0x03B89DAC LDR X0, [X0 + 0x848]
	0x03B89DB0 BL 0x1C16CF4
	0x03B89DB4 ADRP X0, 0x5D3000
	0x03B89DB8 LDR X0, [X0 + 0x190]
	0x03B89DBC BL 0x1C16CF4
	0x03B89DC0 ADRP X0, 0x5D3000
	0x03B89DC4 LDR X0, [X0 + 0xB0]
	0x03B89DC8 BL 0x1C16CF4
	0x03B89DCC MOVZ W8, 0x1
	0x03B89DD0 STRB W8, [X21 + 0xB2A]
	0x03B89DD4 LDR X0, [X20]
	0x03B89DD8 ADRP X20, 0x5D3000
	0x03B89DDC LDR X19, [X19]
	0x03B89DE0 LDR W8, [X0 + 0xE0]
	0x03B89DE4 LDR X20, [X20 + 0xB0]
	0x03B89DE8 CBNZ W8, 0x3B89DF0
	0x03B89DEC BL 0x1C16DFC
	0x03B89DF0 MOV X0, X19
	0x03B89DF4 MOV X1, X31
	0x03B89DF8 BL 0x36FA754
	0x03B89DFC LDR X8, [X20]
	0x03B89E00 MOV X19, X0
	0x03B89E04 LDR W9, [X8 + 0xE0]
	0x03B89E08 CBNZ W9, 0x3B89E18
	0x03B89E0C MOV X0, X8
	0x03B89E10 BL 0x1C16DFC
	0x03B89E14 LDR X8, [X20]
	0x03B89E18 LDR X8, [X8 + 0xB8]
	0x03B89E1C STR X19, [X8 + 0x8]
	0x03B89E20 LDP X20, X19, [X31 + 0x10]
	0x03B89E24 LDP X30, X21, [X31], #0x20
	0x03B89E28 RET
	0x03B89E2C RET
	0x03B89E30 B 0x3B89D84
	0x03B89E34 STP X30, X21, [X31 - 0x20]!
	0x03B89E38 STP X20, X19, [X31 + 0x10]
	0x03B89E3C LDR X8, [X2 + 0x8]
	0x03B89E40 STP X1, X2, [X0 + 0x20]
	0x03B89E44 MOV X19, X0
	0x03B89E48 MOV X20, X1
	0x03B89E4C STR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x85A000
	008 Move X23, 0x5D4000
	009 Move W8, [X20+2836]
	010 Move X23, [X23+144]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x593000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D4000
	020 Move X0, [X0+288]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D4000
	023 Move X0, [X0+144]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D4000
	026 Move X0, [X0+296]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2836], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x593000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5D4000
	053 Move X8, [X8+288]
	054 Move X21, [X8]
	055 Move X8, 0x5D4000
	056 Move X8, [X8+296]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B89E50 LDRB W21, [X2 + 0x52]
	0x03B89E54 STR X0, [X0 + 0x40]
	0x03B89E58 MOV X0, X2
	0x03B89E5C BL 0x1C16D84
	0x03B89E60 TBZ X0, 0x0, 0x3B89E78
	0x03B89E64 CMP W21, 0x3
	0x03B89E68 B.NE 0x3B89E94
	0x03B89E6C ADRP X8, 0xFFFFFFFFFE075000
	0x03B89E70 ADD X8, X8, 0x284
	0x03B89E74 B 0x3B89E88
	0x03B89E78 CMP W21, 0x2
	0x03B89E7C B.NE 0x3B89E90
	0x03B89E80 ADRP X8, 0xFFFFFFFFFE075000
	0x03B89E84 ADD X8, X8, 0x26C
	0x03B89E88 STR X8, [X19 + 0x18]
	0x03B89E8C B 0x3B89EA4
	0x03B89E90 CBZ X20, 0x3B89EBC
	0x03B89E94 LDR X8, [X19 + 0x10]
	0x03B89E98 LDR X9, [X19 + 0x20]
	0x03B89E9C STR X8, [X19 + 0x18]
	0x03B89EA0 STR X9, [X19 + 0x40]
	0x03B89EA4 ADRP X8, 0xFFFFFFFFFE075000
	0x03B89EA8 ADD X8, X8, 0x20C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x85A000
	005 Move X19, 0x5D4000
	006 Move W8, [X20+2837]
	007 Move X19, [X19+144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5D4000
	013 Move X0, [X0+144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2837], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call OrthogonalUpVector_00000927$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B89EAC STR X8, [X19 + 0x38]
	0x03B89EB0 LDP X20, X19, [X31 + 0x10]
	0x03B89EB4 LDP X30, X21, [X31], #0x20
	0x03B89EB8 RET
	0x03B89EBC ADRP X1, 0xFFFFFFFFFCF92000
	0x03B89EC0 ADD X1, X1, 0xEE3
	0x03B89EC4 MOV X0, X31
	0x03B89EC8 BL 0x1C16F3C
	0x03B89ECC MOV X1, X31
	0x03B89ED0 BL 0x1C16DEC
	0x03B89ED4 LDR X8, [X0 + 0x40]
	0x03B89ED8 LDR X5, [X0 + 0x18]
	0x03B89EDC LDR X4, [X0 + 0x28]
	0x03B89EE0 MOV X0, X8
	0x03B89EE4 BR X5
	0x03B89EE8 SUB X31, X31, 0x70
	0x03B89EEC STP X30, X27, [X31 + 0x20]
	0x03B89EF0 STP X26, X25, [X31 + 0x30]
	0x03B89EF4 STP X24, X23, [X31 + 0x40]
	0x03B89EF8 STP X22, X21, [X31 + 0x50]
	0x03B89EFC STP X20, X19, [X31 + 0x60]
	0x03B89F00 ADRP X27, 0x859000
	0x03B89F04 ADRP X26, 0x595000
	0x03B89F08 ADRP X25, 0x570000
	0x03B89F0C LDRB W8, [X27 + 0xB2C]
	0x03B89F10 LDR X26, [X26 + 0x838]
	0x03B89F14 LDR X25, [X25 + 0x7B8]
	0x03B89F18 MOV X19, X5
	0x03B89F1C MOV X20, X4
	0x03B89F20 MOV X22, X3
	0x03B89F24 MOV X23, X2
	0x03B89F28 MOV X24, X1
	0x03B89F2C MOV X21, X0
	0x03B89F30 TBNZ X8, 0x0, 0x3B89F54
	0x03B89F34 ADRP X0, 0x595000
	0x03B89F38 LDR X0, [X0 + 0x838]
	0x03B89F3C BL 0x1C16CF4
	0x03B89F40 ADRP X0, 0x570000
	0x03B89F44 LDR X0, [X0 + 0x7B8]
	0x03B89F48 BL 0x1C16CF4
	0x03B89F4C MOVZ W8, 0x1
	0x03B89F50 STRB W8, [X27 + 0xB2C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x85A000
	006 Move X19, 0x5D4000
	007 Move X20, 0x593000
	008 Move W8, [X21+2838]
	009 Move X19, [X19+304]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x593000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D4000
	019 Move X0, [X0+304]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D4000
	022 Move X0, [X0+144]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2838], W8
	026 Move X0, [X20]
	027 Move X20, 0x5D4000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+144]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B89F54 LDR X0, [X26]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B89F58 MOV X1, X24

ISIL:
	001 Call OrthogonalUpVector_00000927$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 forward, in Unity.Mathematics.float3 referenceUp, out Unity.Mathematics.float3 orthogonalUp)

Disassembly:
	0x03B87A7C BL 0x3B8B3F8
	0x03B87A80 CBZ X0, 0x3B87AB0
	0x03B87A84 MOV X3, X0
	0x03B87A88 MOV X0, X21
	0x03B87A8C MOV X1, X20
	0x03B87A90 MOV X2, X19
	0x03B87A94 MOV V0.16B, V8.16B
	0x03B87A98 LDP X20, X19, [X31 + 0x60]
	0x03B87A9C LDP X22, X21, [X31 + 0x50]
	0x03B87AA0 LDP X30, X23, [X31 + 0x40]
	0x03B87AA4 LDR V8, [X31 + 0x30]
	0x03B87AA8 ADD X31, X31, 0x70
	0x03B87AAC BR X3
	0x03B87AB0 STR W31, [X31 + 0x28]
	0x03B87AB4 STR X31, [X31 + 0x20]
	0x03B87AB8 LDP S0, S1, [X21]
	0x03B87ABC LDR V2, [X21 + 0x8]
	0x03B87AC0 MOV X0, X31
	0x03B87AC4 BL 0x3887BE4
	0x03B87AC8 STP S0, S1, [X31 + 0x10]
	0x03B87ACC STR S2, [X31 + 0x18]
	0x03B87AD0 LDP S0, S1, [X20]
	0x03B87AD4 LDR V2, [X20 + 0x8]
	0x03B87AD8 MOV X0, X31
	0x03B87ADC BL 0x3887BE4
	0x03B87AE0 STP S0, S1, [X31]
	0x03B87AE4 ADD X0, X31, 0x10
	0x03B87AE8 ADD X1, X31, 0x0
	0x03B87AEC ADD X2, X31, 0x20
	0x03B87AF0 MOV V0.16B, V8.16B
	0x03B87AF4 STR S2, [X31 + 0x8]
	0x03B87AF8 BL 0x3B87B2C
	0x03B87AFC LDP S0, S1, [X31 + 0x20]
	0x03B87B00 LDR V2, [X31 + 0x28]
	0x03B87B04 MOV X0, X31
	0x03B87B08 BL 0x3887BE0
	0x03B87B0C STP S0, S1, [X19]
	0x03B87B10 STR S2, [X19 + 0x8]
	0x03B87B14 LDP X20, X19, [X31 + 0x60]
	0x03B87B18 LDP X22, X21, [X31 + 0x50]
	0x03B87B1C LDP X30, X23, [X31 + 0x40]
	0x03B87B20 LDR V8, [X31 + 0x30]
	0x03B87B24 ADD X31, X31, 0x70
	0x03B87B28 RET
	0x03B87B2C STR D8, [X31 - 0x40]!
	0x03B87B30 STP X30, X23, [X31 + 0x10]
	0x03B87B34 STP X22, X21, [X31 + 0x20]
	0x03B87B38 STP X20, X19, [X31 + 0x30]
	0x03B87B3C ADRP X22, 0x85B000
	0x03B87B40 ADRP X23, 0x5D5000
	0x03B87B44 LDRB W8, [X22 + 0xB0A]
	0x03B87B48 LDR X23, [X23 + 0xE8]
	0x03B87B4C MOV V8.16B, V0.16B
	0x03B87B50 MOV X19, X2
	0x03B87B54 MOV X20, X1
	0x03B87B58 MOV X21, X0
	0x03B87B5C TBNZ X8, 0x0, 0x3B87B74
	0x03B87B60 ADRP X0, 0x5D5000
	0x03B87B64 LDR X0, [X0 + 0xE8]
	0x03B87B68 BL 0x1C16CF4
	0x03B87B6C MOVZ W8, 0x1
	0x03B87B70 STRB W8, [X22 + 0xB0A]
	0x03B87B74 LDR X0, [X23]
	0x03B87B78 LDR W8, [X0 + 0xE0]
	0x03B87B7C CBNZ W8, 0x3B87B84
	0x03B87B80 BL 0x1C16DFC
	0x03B87B84 MOV X0, X21
	0x03B87B88 MOV X1, X20
	0x03B87B8C MOV X2, X19
	0x03B87B90 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x85C000
	008 Move X23, 0x595000
	009 Move W8, [X22+2839]
	010 Move X23, [X23+2120]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x595000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D6000
	022 Move X0, [X0+144]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2839], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call BurstCompiler.get_IsEnabled
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {58}
	037 Move X8, 0x5D6000
	038 Move X8, [X8+144]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Call OrthogonalUpVector_00000927$BurstDirectCall.GetFunctionPointer
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move X3, X0
	048 Move X0, X21
	049 Move X1, X20
	050 Move X2, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 CallNoReturn X3
	058 Move S0, [X21]
	059 Move S1, [X21+4]
	060 Move S2, [X20]
	061 Move S3, [X20+4]
	062 Move V4, [X20+8]
	063 Move V5, [X21+8]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Multiply S6, S0, S3
	067 Multiply S7, S1, S4
	068 Multiply S16, S5, S2
	069 Multiply S2, S1, S2
	070 Multiply S3, S5, S3
	071 Multiply S4, S0, S4
	072 Subtract S2, S6, S2
	073 Subtract S3, S7, S3
	074 Subtract S4, S16, S4
	075 Multiply S6, S1, S3
	076 Multiply S7, S0, S4
	077 Multiply S4, S5, S4
	078 Multiply S1, S1, S2
	079 Multiply S0, S0, S2
	080 Multiply S2, S5, S3
	081 Subtract S3, S6, S7
	082 Subtract S1, S4, S1
	083 Subtract S0, S0, S2
	084 Move [X19], S1
	085 Move [X19+8], S0
	086 Move [X19+8], S3
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Return 

