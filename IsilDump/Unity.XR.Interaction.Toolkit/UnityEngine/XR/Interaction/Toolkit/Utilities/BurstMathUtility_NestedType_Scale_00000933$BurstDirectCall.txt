Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/Scale_00000933$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B8CA60 FCCMP S2, S1, 0x8, LS
	0x03B8CA64 FCSEL S2, S2, S1, MI
	0x03B8CA68 FMOV W8, S2
	0x03B8CA6C AND W8, W8, 0x7FFFFFFF
	0x03B8CA70 FMOV S3, 0.125
	0x03B8CA74 CMP W8, W9
	0x03B8CA78 FCCMP S2, S3, 0x8, LS
	0x03B8CA7C FCSEL S2, S3, S2, MI
	0x03B8CA80 STR S2, [X3]
	0x03B8CA84 FADD S2, S2, S1
	0x03B8CA88 FMUL S0, S2, S0
	0x03B8CA8C STR S0, [X2]
	0x03B8CA90 LDR V2, [X0]
	0x03B8CA94 LDR V3, [X0 + 0x8]
	0x03B8CA98 FSUB S0, S1, S0
	0x00000000 INVALID
	0x03B8CAA0 FMUL S0, S0, S3
	0x03B8CAA4 STR D1, [X1]
	0x03B8CAA8 STR S0, [X1 + 0x8]
	0x03B8CAAC RET
	0x03B8CAB0 STP D13, D12, [X31 - 0x50]!
	0x03B8CAB4 STP D11, D10, [X31 + 0x10]
	0x03B8CAB8 STP D9, D8, [X31 + 0x20]
	0x03B8CABC STR X30, [X31 + 0x30]
	0x03B8CAC0 STP X20, X19, [X31 + 0x40]
	0x03B8CAC4 LDP S0, S1, [X1]
	0x03B8CAC8 LDP S3, S4, [X0]
	0x03B8CACC LDR V2, [X1 + 0x8]
	0x03B8CAD0 LDR V5, [X0 + 0x8]
	0x03B8CAD4 LDP S6, S7, [X2]
	0x03B8CAD8 FSUB S8, S0, S3
	0x03B8CADC LDR V0, [X2 + 0x8]
	0x03B8CAE0 ADRP X20, 0x855000
	0x03B8CAE4 FSUB S10, S1, S4
	0x03B8CAE8 LDRB W8, [X20 + 0x585]
	0x03B8CAEC FSUB S9, S2, S5
	0x03B8CAF0 FMUL S1, S8, S6
	0x03B8CAF4 FMUL S2, S10, S7
	0x03B8CAF8 FADD S1, S1, S2
	0x03B8CAFC FMUL S2, S9, S0
	0x03B8CB00 FADD S1, S2, S1
	0x03B8CB04 MOV X19, X3
	0x03B8CB08 FMUL S11, S6, S1
	0x03B8CB0C FMUL S12, S7, S1
	0x03B8CB10 FMUL S13, S0, S1
	0x03B8CB14 CBNZ W8, 0x3B8CB2C
	0x03B8CB18 ADRP X0, 0x567000
	0x03B8CB1C LDR X0, [X0 + 0x5A8]
	0x03B8CB20 BL 0x1C16CF4
	0x03B8CB24 MOVZ W8, 0x1
	0x03B8CB28 STRB W8, [X20 + 0x585]
	0x03B8CB2C ADRP X8, 0x567000
	0x03B8CB30 LDR X8, [X8 + 0x5A8]
	0x03B8CB34 FSUB S11, S8, S11
	0x03B8CB38 FSUB S8, S10, S12
	0x03B8CB3C FSUB S9, S9, S13
	0x03B8CB40 LDR X0, [X8]
	0x03B8CB44 LDR W8, [X0 + 0xE0]
	0x03B8CB48 CBNZ W8, 0x3B8CB50
	0x03B8CB4C BL 0x1C16DFC
	0x03B8CB50 FMUL S1, S11, S11
	0x03B8CB54 FMUL S2, S8, S8
	0x03B8CB58 FMUL S0, S9, S9
	0x03B8CB5C FADD S1, S1, S2
	0x03B8CB60 FADD S0, S0, S1
	0x03B8CB64 FSQRT S0, S0
	0x03B8CB68 STR S0, [X19]
	0x03B8CB6C LDP X20, X19, [X31 + 0x40]
	0x03B8CB70 LDR X30, [X31 + 0x30]
	0x03B8CB74 LDP D9, D8, [X31 + 0x20]
	0x03B8CB78 LDP D11, D10, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x857000
	008 Move X23, 0x5D1000
	009 Move W8, [X20+2896]
	010 Move X23, [X23+240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x590000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D1000
	020 Move X0, [X0+576]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D1000
	023 Move X0, [X0+240]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D1000
	026 Move X0, [X0+584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2896], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x590000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5D1000
	053 Move X8, [X8+576]
	054 Move X21, [X8]
	055 Move X8, 0x5D1000
	056 Move X8, [X8+584]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B8CB7C LDP D13, D12, [X31], #0x50
	0x03B8CB80 RET
	0x03B8CB84 STP X30, X21, [X31 - 0x20]!
	0x03B8CB88 STP X20, X19, [X31 + 0x10]
	0x03B8CB8C LDR X8, [X2 + 0x8]
	0x03B8CB90 STP X1, X2, [X0 + 0x20]
	0x03B8CB94 MOV X19, X0
	0x03B8CB98 MOV X20, X1
	0x03B8CB9C STR X8, [X0 + 0x10]
	0x03B8CBA0 LDRB W21, [X2 + 0x52]
	0x03B8CBA4 STR X0, [X0 + 0x40]
	0x03B8CBA8 MOV X0, X2
	0x03B8CBAC BL 0x1C16D84
	0x03B8CBB0 TBZ X0, 0x0, 0x3B8CBC8
	0x03B8CBB4 CMP W21, 0x5
	0x03B8CBB8 B.NE 0x3B8CBE4
	0x03B8CBBC ADRP X8, 0xFFFFFFFFFE072000
	0x03B8CBC0 ADD X8, X8, 0x950
	0x03B8CBC4 B 0x3B8CBD8
	0x03B8CBC8 CMP W21, 0x4
	0x03B8CBCC B.NE 0x3B8CBE0
	0x03B8CBD0 ADRP X8, 0xFFFFFFFFFE072000
	0x03B8CBD4 ADD X8, X8, 0x930

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x857000
	005 Move X19, 0x5D1000
	006 Move W8, [X20+2897]
	007 Move X19, [X19+240]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5D1000
	013 Move X0, [X0+240]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2897], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call Scale_00000933$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B8CBD8 STR X8, [X19 + 0x18]
	0x03B8CBDC B 0x3B8CBF4
	0x03B8CBE0 CBZ X20, 0x3B8CC0C
	0x03B8CBE4 LDR X8, [X19 + 0x10]
	0x03B8CBE8 LDR X9, [X19 + 0x20]
	0x03B8CBEC STR X8, [X19 + 0x18]
	0x03B8CBF0 STR X9, [X19 + 0x40]
	0x03B8CBF4 ADRP X8, 0xFFFFFFFFFE072000
	0x03B8CBF8 ADD X8, X8, 0x8B8
	0x03B8CBFC STR X8, [X19 + 0x38]
	0x03B8CC00 LDP X20, X19, [X31 + 0x10]
	0x03B8CC04 LDP X30, X21, [X31], #0x20
	0x03B8CC08 RET
	0x03B8CC0C ADRP X1, 0xFFFFFFFFFCF8F000
	0x03B8CC10 ADD X1, X1, 0xEE3
	0x03B8CC14 MOV X0, X31
	0x03B8CC18 BL 0x1C16F3C
	0x03B8CC1C MOV X1, X31
	0x03B8CC20 BL 0x1C16DEC
	0x03B8CC24 LDR X8, [X0 + 0x40]
	0x03B8CC28 LDR X7, [X0 + 0x18]
	0x03B8CC2C LDR X6, [X0 + 0x28]
	0x03B8CC30 MOV X0, X8
	0x03B8CC34 BR X7
	0x03B8CC38 SUB X31, X31, 0x90
	0x03B8CC3C STP X29, X30, [X31 + 0x30]
	0x03B8CC40 STP X28, X27, [X31 + 0x40]
	0x03B8CC44 STP X26, X25, [X31 + 0x50]
	0x03B8CC48 STP X24, X23, [X31 + 0x60]
	0x03B8CC4C STP X22, X21, [X31 + 0x70]
	0x03B8CC50 STP X20, X19, [X31 + 0x80]
	0x03B8CC54 ADRP X29, 0x856000
	0x03B8CC58 ADRP X28, 0x567000
	0x03B8CC5C ADRP X27, 0x567000
	0x03B8CC60 LDRB W8, [X29 + 0xB61]
	0x03B8CC64 LDR X28, [X28 + 0x5A0]
	0x03B8CC68 LDR X27, [X27 + 0xA90]
	0x03B8CC6C MOV X19, X7
	0x03B8CC70 MOV X20, X6
	0x03B8CC74 MOV X22, X5
	0x03B8CC78 MOV X23, X4
	0x03B8CC7C MOV X24, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x857000
	006 Move X19, 0x5D1000
	007 Move X20, 0x590000
	008 Move W8, [X21+2898]
	009 Move X19, [X19+592]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x590000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D1000
	019 Move X0, [X0+592]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D1000
	022 Move X0, [X0+240]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2898], W8
	026 Move X0, [X20]
	027 Move X20, 0x5D1000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+240]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B8CC80 MOV X25, X2

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B8CC84 MOV X26, X1

ISIL:
	001 Call Scale_00000933$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 a, in Unity.Mathematics.float3 b, out Unity.Mathematics.float3 result)

Disassembly:
	0x03B88D3C STP X20, X19, [X31 + 0x20]
	0x03B88D40 ADRP X20, 0x85A000
	0x03B88D44 ADRP X23, 0x5D4000
	0x03B88D48 LDRB W8, [X20 + 0xB14]
	0x03B88D4C LDR X23, [X23 + 0x90]
	0x03B88D50 MOV X19, X0
	0x03B88D54 TBNZ X8, 0x0, 0x3B88D90
	0x03B88D58 ADRP X0, 0x593000
	0x03B88D5C LDR X0, [X0 + 0x848]
	0x03B88D60 BL 0x1C16CF4
	0x03B88D64 ADRP X0, 0x5D4000
	0x03B88D68 LDR X0, [X0 + 0x120]
	0x03B88D6C BL 0x1C16CF4
	0x03B88D70 ADRP X0, 0x5D4000
	0x03B88D74 LDR X0, [X0 + 0x90]
	0x03B88D78 BL 0x1C16CF4
	0x03B88D7C ADRP X0, 0x5D4000
	0x03B88D80 LDR X0, [X0 + 0x128]
	0x03B88D84 BL 0x1C16CF4
	0x03B88D88 MOVZ W8, 0x1
	0x03B88D8C STRB W8, [X20 + 0xB14]
	0x03B88D90 LDR X8, [X23]
	0x03B88D94 LDR W9, [X8 + 0xE0]
	0x03B88D98 CBNZ W9, 0x3B88DA8
	0x03B88D9C MOV X0, X8
	0x03B88DA0 BL 0x1C16DFC
	0x03B88DA4 LDR X8, [X23]
	0x03B88DA8 LDR X9, [X8 + 0xB8]
	0x03B88DAC LDR X10, [X9]
	0x03B88DB0 CBNZ X10, 0x3B88E20
	0x03B88DB4 LDR W10, [X8 + 0xE0]
	0x03B88DB8 CBNZ W10, 0x3B88DCC
	0x03B88DBC MOV X0, X8
	0x03B88DC0 BL 0x1C16DFC
	0x03B88DC4 LDR X8, [X23]
	0x03B88DC8 LDR X9, [X8 + 0xB8]
	0x03B88DCC ADRP X8, 0x593000
	0x03B88DD0 LDR X20, [X9 + 0x8]
	0x03B88DD4 LDR X8, [X8 + 0x848]
	0x03B88DD8 LDR X0, [X8]
	0x03B88DDC ADRP X8, 0x5D4000
	0x03B88DE0 LDR X8, [X8 + 0x120]
	0x03B88DE4 LDR X21, [X8]
	0x03B88DE8 ADRP X8, 0x5D4000
	0x03B88DEC LDR X8, [X8 + 0x128]
	0x03B88DF0 LDR W9, [X0 + 0xE0]
	0x03B88DF4 LDR X22, [X8]
	0x03B88DF8 CBNZ W9, 0x3B88E00
	0x03B88DFC BL 0x1C16DFC
	0x03B88E00 MOV X0, X20
	0x03B88E04 MOV X1, X21
	0x03B88E08 MOV X2, X22
	0x03B88E0C MOV X3, X31
	0x03B88E10 BL 0x36FAD70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x85B000
	008 Move X23, 0x594000
	009 Move W8, [X22+2899]
	010 Move X23, [X23+2120]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x594000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D5000
	022 Move X0, [X0+240]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2899], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call BurstCompiler.get_IsEnabled
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {58}
	037 Move X8, 0x5D5000
	038 Move X8, [X8+240]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Call Scale_00000933$BurstDirectCall.GetFunctionPointer
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move X3, X0
	048 Move X0, X21
	049 Move X1, X20
	050 Move X2, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 CallNoReturn X3
	058 Move V0, [X21]
	059 Move V1, [X20]
	060 Move V2, [X21+8]
	061 Move V3, [X20+8]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 NotImplemented "Instruction INVALID not yet implemented."
	065 Move [X19], D0
	066 Multiply S1, S2, S3
	067 Move [X19+8], S1
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 

