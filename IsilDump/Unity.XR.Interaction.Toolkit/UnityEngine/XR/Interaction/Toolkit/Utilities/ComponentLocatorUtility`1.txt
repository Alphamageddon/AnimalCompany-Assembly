Type: UnityEngine.XR.Interaction.Toolkit.Utilities.ComponentLocatorUtility`1

Method: T get_componentCache()

Disassembly:
	0x02960690 MOV X0, X8
	0x02960694 BL 0x1C5C684
	0x02960698 MOV X8, X0
	0x0296069C LDR X8, [X8 + 0xC0]
	0x029606A0 MOV X0, X20
	0x029606A4 LDR X1, [X8 + 0x40]
	0x029606A8 BLR X21
	0x029606AC LDR X0, [X19 + 0x20]
	0x029606B0 LDRB W8, [X0 + 0x135]
	0x029606B4 TBNZ X8, 0x0, 0x29606BC
	0x029606B8 BL 0x1C5C684
	0x029606BC LDR X8, [X0 + 0xC0]
	0x029606C0 LDR X0, [X8 + 0x18]
	0x029606C4 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Move W8, [X0+309]
	004 Move TEMP, X8
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {9}
	008 Call 0x1C5D684
	009 Move X8, [X0+192]
	010 Move X0, [X8+16]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+184]
	018 Move X0, [X8]
	019 Move X30, [X31+16]
	020 Return X0

Method: T FindOrCreateComponent()

Disassembly:
	0x029606C8 TBNZ X8, 0x0, 0x29606D0
	0x029606CC BL 0x1C5C684
	0x029606D0 LDR X8, [X0 + 0xB8]
	0x029606D4 STR X20, [X8]
	0x029606D8 LDR X0, [X19 + 0x20]
	0x029606DC LDRB W8, [X0 + 0x135]
	0x029606E0 TBNZ X8, 0x0, 0x29606E8
	0x029606E4 BL 0x1C5C684
	0x029606E8 LDR X8, [X0 + 0xC0]
	0x029606EC LDR X0, [X8 + 0x18]
	0x029606F0 LDRB W8, [X0 + 0x135]
	0x029606F4 TBNZ X8, 0x0, 0x2960704
	0x029606F8 LDP X20, X19, [X31 + 0x10]
	0x029606FC LDP X30, X21, [X31], #0x20
	0x02960700 B 0x1C5C684
	0x02960704 LDP X20, X19, [X31 + 0x10]
	0x02960708 LDP X30, X21, [X31], #0x20
	0x0296070C RET
	0x02960710 STR X30, [X31 - 0x20]!
	0x02960714 STP X20, X19, [X31 + 0x10]
	0x02960718 ADRP X20, 0x1A7A000
	0x0296071C LDRB W8, [X20 + 0xE51]
	0x02960720 MOV X19, X0
	0x02960724 TBNZ X8, 0x0, 0x296073C
	0x02960728 ADRP X0, 0x1793000
	0x0296072C LDR X0, [X0 + 0x6C0]
	0x02960730 BL 0x1C16CF4
	0x02960734 MOVZ W8, 0x1
	0x02960738 STRB W8, [X20 + 0xE51]
	0x0296073C LDR X0, [X19 + 0x20]
	0x02960740 ADRP X20, 0x1793000
	0x02960744 LDRB W8, [X0 + 0x135]
	0x02960748 LDR X20, [X20 + 0x6C0]
	0x0296074C TBNZ X8, 0x0, 0x2960754
	0x02960750 BL 0x1C5C684
	0x02960754 LDR X8, [X20]
	0x02960758 LDR X9, [X0 + 0xC0]
	0x0296075C LDR W10, [X8 + 0xE0]
	0x02960760 LDR X19, [X9]
	0x02960764 CBNZ W10, 0x2960770
	0x02960768 MOV X0, X8
	0x0296076C BL 0x1C16DFC
	0x02960770 MOV X0, X19
	0x02960774 MOV X1, X31
	0x02960778 BL 0x338C698
	0x0296077C CBZ X0, 0x2960800
	0x02960780 MOV X1, X31
	0x02960784 MOV X19, X0
	0x02960788 BL 0x33970C4
	0x0296078C TBZ X0, 0x0, 0x29607D0
	0x02960790 LDR X0, [X20]
	0x02960794 LDR W8, [X0 + 0xE0]
	0x02960798 CBNZ W8, 0x29607A0
	0x0296079C BL 0x1C16DFC
	0x029607A0 MOV X0, X19
	0x029607A4 MOV X1, X31
	0x029607A8 BL 0x3397AFC
	0x029607AC MOV W8, W0
	0x029607B0 CMP W0, 0xE
	0x029607B4 MOV W0, W31
	0x029607B8 B.HI 0x29607D4
	0x029607BC MOVZ W9, 0x1
	0x029607C0 LSLV W8, W9, W8
	0x029607C4 MOVZ W9, 0x27F8
	0x029607C8 ANDS W31, W8, W9, 0x0
	0x029607CC B.EQ 0x29607E0
	0x029607D0 MOVZ W0, 0x1
	0x029607D4 LDP X20, X19, [X31 + 0x10]
	0x029607D8 LDR X30, [X31], #0x20
	0x029607DC RET
	0x029607E0 MOVZ W9, 0x5800
	0x029607E4 ANDS W31, W8, W9, 0x0
	0x029607E8 B.EQ 0x29607D4
	0x029607EC MOV X0, X31
	0x029607F0 BL 0x33C67AC
	0x029607F4 CMP W0, 0x8
	0x029607F8 CSET W0, EQ
	0x029607FC B 0x29607D4
	0x02960800 BL 0x1C16F20
	0x02960804 STR X30, [X31 - 0x20]!
	0x02960808 STP X20, X19, [X31 + 0x10]
	0x0296080C LDR X8, [X1 + 0x20]
	0x02960810 MOV X20, X1
	0x02960814 MOV X19, X0
	0x02960818 LDR X8, [X8 + 0xC0]
	0x0296081C LDR X8, [X8 + 0x10]
	0x02960820 LDRB W9, [X8 + 0x135]
	0x02960824 TBNZ X9, 0x0, 0x2960834
	0x02960828 MOV X0, X8
	0x0296082C BL 0x1C5C684
	0x02960830 MOV X8, X0
	0x02960834 LDR W9, [X8 + 0xE0]
	0x02960838 CBNZ W9, 0x2960844
	0x0296083C MOV X0, X8
	0x02960840 BL 0x1C16DFC
	0x02960844 BL 0x2964348
	0x02960848 LDR X8, [X20 + 0x20]
	0x0296084C MOV W1, W0
	0x02960850 MOV X0, X19
	0x02960854 LDP X20, X19, [X31 + 0x10]
	0x02960858 LDR X8, [X8 + 0xC0]
	0x0296085C MOVZ W2, 0x1F
	0x02960860 MOVZ W3, 0x1
	0x02960864 MOV X4, X31
	0x02960868 LDR X5, [X8 + 0x18]
	0x0296086C LDR X30, [X31], #0x20
	0x02960870 B 0x2960D44
	0x02960874 STP X30, X21, [X31 - 0x20]!
	0x02960878 STP X20, X19, [X31 + 0x10]
	0x0296087C LDR X8, [X2 + 0x20]
	0x02960880 MOV X21, X2
	0x02960884 MOV X19, X1
	0x02960888 MOV X20, X0
	0x0296088C LDR X8, [X8 + 0xC0]
	0x02960890 LDR X8, [X8 + 0x10]
	0x02960894 LDRB W9, [X8 + 0x135]
	0x02960898 TBNZ X9, 0x0, 0x29608A8
	0x0296089C MOV X0, X8
	0x029608A0 BL 0x1C5C684
	0x029608A4 MOV X8, X0
	0x029608A8 LDR W9, [X8 + 0xE0]
	0x029608AC CBNZ W9, 0x29608B8
	0x029608B0 MOV X0, X8
	0x029608B4 BL 0x1C16DFC
	0x029608B8 BL 0x2964348
	0x029608BC LDR X8, [X21 + 0x20]
	0x029608C0 MOV W1, W0
	0x029608C4 MOV X0, X20
	0x029608C8 MOV X4, X19
	0x029608CC LDR X8, [X8 + 0xC0]
	0x029608D0 LDP X20, X19, [X31 + 0x10]
	0x029608D4 MOVZ W2, 0x1F
	0x029608D8 MOVZ W3, 0x1
	0x029608DC LDR X5, [X8 + 0x18]
	0x029608E0 LDP X30, X21, [X31], #0x20
	0x029608E4 B 0x2960D44
	0x029608E8 SUB X31, X31, 0x80
	0x029608EC STP X30, X27, [X31 + 0x30]
	0x029608F0 STP X26, X25, [X31 + 0x40]
	0x029608F4 STP X24, X23, [X31 + 0x50]
	0x029608F8 STP X22, X21, [X31 + 0x60]
	0x029608FC STP X20, X19, [X31 + 0x70]
	0x02960900 ADRP X22, 0x1A7A000
	0x02960904 LDRB W8, [X22 + 0xE52]
	0x02960908 MOV X21, X2
	0x0296090C MOV X20, X1
	0x02960910 MOV X19, X0
	0x02960914 TBNZ X8, 0x0, 0x2960938
	0x02960918 ADRP X0, 0x1793000
	0x0296091C LDR X0, [X0 + 0xE00]
	0x02960920 BL 0x1C16CF4
	0x02960924 ADRP X0, 0x1793000
	0x02960928 LDR X0, [X0 + 0xE18]
	0x0296092C BL 0x1C16CF4
	0x02960930 MOVZ W8, 0x1
	0x02960934 STRB W8, [X22 + 0xE52]
	0x02960938 STR X31, [X31 + 0x28]
	0x0296093C CBZ X20, 0x2960C78
	0x02960940 LDR X8, [X21 + 0x20]
	0x02960944 LDR X8, [X8 + 0xC0]
	0x02960948 LDR X1, [X8 + 0x28]
	0x0296094C LDRB W8, [X1 + 0x135]
	0x02960950 TBNZ X8, 0x0, 0x2960960
	0x02960954 MOV X0, X1
	0x02960958 BL 0x1C5C684
	0x0296095C MOV X1, X0
	0x02960960 LDR X8, [X20]
	0x02960964 LDRH W9, [X8 + 0x12E]
	0x02960968 CBZ X9, 0x296098C
	0x0296096C LDR X10, [X8 + 0xB0]
	0x02960970 ADD X10, X10, 0x8
	0x02960974 LDUR X11, [X10 - 0x8]
	0x02960978 CMP X11, X1
	0x0296097C B.EQ 0x296099C
	0x02960980 SUBS X9, X9, 0x1
	0x02960984 ADD X10, X10, 0x10
	0x02960988 B.NE 0x2960974
	0x0296098C MOV X0, X20
	0x02960990 MOV W2, W31
	0x02960994 BL 0x1C5C788
	0x02960998 B 0x29609A8
	0x0296099C LDRSW X9, [X10]
	0x029609A0 ADD X8, X8, X9, 0x4, LSL
	0x029609A4 ADD X0, X8, 0x138
	0x029609A8 LDP X8, X1, [X0]
	0x029609AC ADRP X26, 0x1793000
	0x029609B0 LDR X26, [X26 + 0xE00]
	0x029609B4 MOV X0, X20
	0x029609B8 BLR X8
	0x029609BC MOV X20, X0
	0x029609C0 CBZ X0, 0x2960C7C
	0x029609C4 ADRP X27, 0x1793000
	0x029609C8 LDR X27, [X27 + 0xE18]
	0x029609CC LDR X8, [X20]
	0x029609D0 LDR X1, [X27]
	0x029609D4 LDRH W9, [X8 + 0x12E]
	0x029609D8 CBZ X9, 0x29609FC
	0x029609DC LDR X10, [X8 + 0xB0]
	0x029609E0 ADD X10, X10, 0x8
	0x029609E4 LDUR X11, [X10 - 0x8]
	0x029609E8 CMP X11, X1
	0x029609EC B.EQ 0x2960A0C
	0x029609F0 SUBS X9, X9, 0x1
	0x029609F4 ADD X10, X10, 0x10
	0x029609F8 B.NE 0x29609E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1A7B000
	007 Move W8, [X20+3660]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x1794000
	014 Move X0, [X0+2648]
	015 Call 0x1C17CF4
	016 Move X0, 0x1794000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x179C000
	020 Move X0, [X0+3168]
	021 Call 0x1C17CF4
	022 Move X0, 0x1794000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3660], W8
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X21, 0x1794000
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move X21, [X21+1432]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X21]
	045 Move X9, [X0+184]
	046 Move W10, [X8+224]
	047 Move X20, [X9]
	048 Compare W10, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {255}
	060 Move X0, [X19+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move X0, [X8+24]
	069 Call 0x2960BD0
	070 Move X8, [X19+32]
	071 Move X20, X0
	072 Move W9, [X8+309]
	073 Move TEMP, X9
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X8
	078 Call 0x1C5D684
	079 Move X8, X0
	080 Move X8, [X8+192]
	081 Move X0, [X8+16]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X0+184]
	089 Move [X8], X20
	090 Move X0, [X19+32]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+192]
	098 Move X0, [X8+16]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Move X0, [X19+32]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move X8, [X0+192]
	113 Move X0, [X8+16]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move X8, [X21]
	121 Move X9, [X0+184]
	122 Move W10, [X8+224]
	123 Move X20, [X9]
	124 Compare W10, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X0, X20
	129 Move X1, X31
	130 Move X2, X31
	131 Call Object.op_Equality, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {255}
	136 Move X0, [X19+32]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move X8, 0x1794000
	144 Move X8, [X8+1728]
	145 Move X9, [X0+192]
	146 Move X8, [X8]
	147 Move X20, [X9+32]
	148 Move W10, [X8+224]
	149 Compare W10, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X0, X20
	154 Move X1, X31
	155 Call Type.GetTypeFromHandle, X0
	156 Compare X0, 0
	157 JumpIfEqual {278}
	158 Move X8, [X0]
	159 Move X9, [X8+424]
	160 Move X1, [X8+432]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, 0x179C000
	163 Move X8, [X8+3168]
	164 Move X20, X0
	165 Move W1, 1
	166 Move X8, [X8]
	167 Move X0, X8
	168 Call 0x1C17D6C
	169 Move X8, [X19+32]
	170 Move X21, X0
	171 Move W9, [X8+309]
	172 Move TEMP, X9
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {179}
	176 Move X0, X8
	177 Call 0x1C5D684
	178 Move X8, X0
	179 Move X8, [X8+192]
	180 Move X1, X31
	181 Move X0, [X8+32]
	182 Call Type.GetTypeFromHandle, X0
	183 Compare X21, 0
	184 JumpIfEqual {278}
	185 Move X22, X0
	186 Compare X0, 0
	187 JumpIfEqual {194}
	188 Move X8, [X21]
	189 Move X0, X22
	190 Move X1, [X8+64]
	191 Call 0x1C17E00
	192 Compare X0, 0
	193 JumpIfEqual {280}
	194 Move W8, [X21+24]
	195 Compare W8, 0
	196 JumpIfEqual {279}
	197 Move [X21+32], X22
	198 Move X8, 0x1794000
	199 Move X8, [X8+2648]
	200 Move X0, [X8]
	201 Call 0x1C17F10
	202 Move X1, X20
	203 Move X2, X21
	204 Move X3, X31
	205 Move X22, X0
	206 Call GameObject..ctor, X0, X1, X2
	207 Compare X22, 0
	208 JumpIfEqual {278}
	209 Move X0, [X19+32]
	210 Move W8, [X0+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {216}
	215 Call 0x1C5D684
	216 Move X8, [X0+192]
	217 Move X0, X22
	218 Move X1, [X8+40]
	219 Call 0x21E62E4, X0
	220 Move X8, [X19+32]
	221 Move X20, X0
	222 Move W9, [X8+309]
	223 Move TEMP, X9
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {230}
	227 Move X0, X8
	228 Call 0x1C5D684
	229 Move X8, X0
	230 Move X8, [X8+192]
	231 Move X0, [X8+16]
	232 Move W8, [X0+309]
	233 Move TEMP, X8
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {238}
	237 Call 0x1C5D684
	238 Move X8, [X0+184]
	239 Move [X8], X20
	240 Move X0, [X19+32]
	241 Move W8, [X0+309]
	242 Move TEMP, X8
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {247}
	246 Call 0x1C5D684
	247 Move X8, [X0+192]
	248 Move X0, [X8+16]
	249 Move W8, [X0+309]
	250 Move TEMP, X8
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfEqual {255}
	254 Call 0x1C5D684
	255 Move X0, [X19+32]
	256 Move W8, [X0+309]
	257 Move TEMP, X8
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {262}
	261 Call 0x1C5D684
	262 Move X8, [X0+192]
	263 Move X0, [X8+16]
	264 Move W8, [X0+309]
	265 Move TEMP, X8
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {270}
	269 Call 0x1C5D684
	270 Move X8, [X0+184]
	271 Move X20, [X31+32]
	272 Move X19, [X31+40]
	273 Move X22, [X31+16]
	274 Move X21, [X31+24]
	275 Move X0, [X8]
	276 Move X30, [X31+48]
	277 Return X0
	278 Call 0x1C17F20
	279 Call 0x1C17F28
	280 Call 0x1C17F44
	281 Move X1, X31
	282 Call 0x1C17DEC

Method: T FindComponent()

Disassembly:
	0x029609FC MOV X0, X20
	0x02960A00 MOV W2, W31
	0x02960A04 BL 0x1C5C788
	0x02960A08 B 0x2960A18
	0x02960A0C LDRSW X9, [X10]
	0x02960A10 ADD X8, X8, X9, 0x4, LSL
	0x02960A14 ADD X0, X8, 0x138
	0x02960A18 LDP X8, X1, [X0]
	0x02960A1C MOV X0, X20
	0x02960A20 BLR X8
	0x02960A24 TBZ X0, 0x0, 0x2960BA4
	0x02960A28 LDR X8, [X21 + 0x20]
	0x02960A2C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X0, [X0+32]
	004 Move W8, [X0+309]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {10}
	009 Call 0x1C5D684
	010 Move X8, [X0+192]
	011 Add X0, X31, 8
	012 Move X1, [X8+48]
	013 Call 0x2960A30, X0
	014 Move X0, [X31+8]
	015 Move X30, [X31+16]
	016 Return X0

Method: System.Boolean TryFindComponent(out T component)

Disassembly:
	0x02960A30 LDR X1, [X8 + 0x38]
	0x02960A34 LDRB W8, [X1 + 0x135]
	0x02960A38 TBNZ X8, 0x0, 0x2960A48
	0x02960A3C MOV X0, X1
	0x02960A40 BL 0x1C5C684
	0x02960A44 MOV X1, X0
	0x02960A48 LDR X8, [X20]
	0x02960A4C LDRH W9, [X8 + 0x12E]
	0x02960A50 CBZ X9, 0x2960A74
	0x02960A54 LDR X10, [X8 + 0xB0]
	0x02960A58 ADD X10, X10, 0x8
	0x02960A5C LDUR X11, [X10 - 0x8]
	0x02960A60 CMP X11, X1
	0x02960A64 B.EQ 0x2960A84
	0x02960A68 SUBS X9, X9, 0x1
	0x02960A6C ADD X10, X10, 0x10
	0x02960A70 B.NE 0x2960A5C
	0x02960A74 MOV X0, X20
	0x02960A78 MOV W2, W31
	0x02960A7C BL 0x1C5C788
	0x02960A80 B 0x2960A90
	0x02960A84 LDRSW X9, [X10]
	0x02960A88 ADD X8, X8, X9, 0x4, LSL
	0x02960A8C ADD X0, X8, 0x138
	0x02960A90 LDP X9, X1, [X0]
	0x02960A94 ADD X8, X31, 0x10
	0x02960A98 MOV X0, X20
	0x02960A9C BLR X9
	0x02960AA0 LDR X25, [X19 + 0x18]
	0x02960AA4 CBZ X25, 0x2960C74
	0x02960AA8 LDR X8, [X21 + 0x20]
	0x02960AAC LDP X23, X22, [X31 + 0x10]
	0x02960AB0 LDR X24, [X31 + 0x20]
	0x02960AB4 LDR X8, [X8 + 0xC0]
	0x02960AB8 LDR X1, [X8 + 0x20]
	0x02960ABC LDRB W8, [X1 + 0x135]
	0x02960AC0 TBNZ X8, 0x0, 0x2960AD0
	0x02960AC4 MOV X0, X1
	0x02960AC8 BL 0x1C5C684
	0x02960ACC MOV X1, X0
	0x02960AD0 LDR X8, [X25]
	0x02960AD4 LDRH W9, [X8 + 0x12E]
	0x02960AD8 CBZ X9, 0x2960AFC
	0x02960ADC LDR X10, [X8 + 0xB0]
	0x02960AE0 ADD X10, X10, 0x8
	0x02960AE4 LDUR X11, [X10 - 0x8]
	0x02960AE8 CMP X11, X1
	0x02960AEC B.EQ 0x2960B0C
	0x02960AF0 SUBS X9, X9, 0x1
	0x02960AF4 ADD X10, X10, 0x10
	0x02960AF8 B.NE 0x2960AE4
	0x02960AFC MOVZ W2, 0x1
	0x02960B00 MOV X0, X25
	0x02960B04 BL 0x1C5C788
	0x02960B08 B 0x2960B1C
	0x02960B0C LDR W9, [X10]
	0x02960B10 ADD W9, W9, 0x1
	0x02960B14 ADD X8, X8, W9, 0x4, SXTW
	0x02960B18 ADD X0, X8, 0x138
	0x02960B1C LDP X8, X3, [X0]
	0x02960B20 MOV X0, X25
	0x02960B24 MOV X1, X23
	0x02960B28 MOV X2, X22
	0x02960B2C BLR X8
	0x02960B30 LDR X8, [X21 + 0x20]
	0x02960B34 MOV W3, W0
	0x02960B38 LDR X8, [X8 + 0xC0]
	0x02960B3C LDR X8, [X8 + 0x90]
	0x02960B40 ADD X7, X31, 0x28
	0x02960B44 MOV X0, X19
	0x02960B48 MOV X1, X23
	0x02960B4C MOV X2, X22
	0x02960B50 MOV X4, X24
	0x02960B54 MOV W5, W31
	0x02960B58 MOV W6, W31
	0x02960B5C STR X8, [X31]
	0x02960B60 BL 0x2962214
	0x02960B64 TBNZ X0, 0x0, 0x29609CC
	0x02960B68 ADRP X0, 0x179B000
	0x02960B6C LDR X0, [X0 + 0x578]
	0x02960B70 BL 0x1C16D08
	0x02960B74 BL 0x1C16F10
	0x02960B78 MOV X22, X0
	0x02960B7C ADRP X0, 0x17BE000
	0x02960B80 LDR X0, [X0 + 0x248]
	0x02960B84 BL 0x1C16D08
	0x02960B88 MOV X1, X0
	0x02960B8C MOV X0, X22
	0x02960B90 MOV X2, X31
	0x02960B94 BL 0x3314A68
	0x02960B98 MOV X0, X22
	0x02960B9C MOV X1, X21
	0x02960BA0 BL 0x1C16DEC
	0x02960BA4 MOV X21, X31
	0x02960BA8 MOVZ W22, 0x7
	0x02960BAC CBZ X20, 0x2960C08
	0x02960BB0 LDR X8, [X20]
	0x02960BB4 LDR X1, [X26]
	0x02960BB8 LDRH W9, [X8 + 0x12E]
	0x02960BBC CBZ X9, 0x2960BE0
	0x02960BC0 LDR X10, [X8 + 0xB0]
	0x02960BC4 ADD X10, X10, 0x8
	0x02960BC8 LDUR X11, [X10 - 0x8]
	0x02960BCC CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1A7B000
	007 Move W8, [X21+3661]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1794000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3661], W8
	019 Move X0, [X20+32]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move X22, 0x1794000
	028 Move X0, [X8+16]
	029 Move W8, [X0+309]
	030 Move X22, [X22+1432]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X22]
	037 Move X9, [X0+184]
	038 Move W10, [X8+224]
	039 Move X21, [X9]
	040 Compare W10, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move X8, [X20+32]
	049 Move W21, W0
	050 Move W9, [X8+309]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {58}
	055 Move X0, X8
	056 Call 0x1C5D684
	057 Move X8, X0
	058 Move X8, [X8+192]
	059 Move TEMP, X21
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {80}
	063 Move X0, [X8+16]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move X8, [X0+184]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move W0, 1
	074 Move X8, [X8]
	075 Move [X19], X8
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+48]
	079 Return X0
	080 Move X0, [X8+24]
	081 Call 0x2960BD0
	082 Move X8, [X20+32]
	083 Move X21, X0
	084 Move W9, [X8+309]
	085 Move TEMP, X9
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {92}
	089 Move X0, X8
	090 Call 0x1C5D684
	091 Move X8, X0
	092 Move X8, [X8+192]
	093 Move X0, [X8+16]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Move X8, [X0+184]
	101 Move [X8], X21
	102 Move X0, [X20+32]
	103 Move W8, [X0+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {109}
	108 Call 0x1C5D684
	109 Move X8, [X0+192]
	110 Move X0, [X8+16]
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Move X0, [X20+32]
	118 Move W8, [X0+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {124}
	123 Call 0x1C5D684
	124 Move X8, [X0+192]
	125 Move X0, [X8+16]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move X8, [X0+184]
	133 Move X20, [X8]
	134 Move [X19], X20
	135 Move X0, [X22]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X20
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X1, X31
	146 Move X2, X31
	147 Move X30, [X31+48]
	148 Call Object.op_Inequality, X0, X1
	149 Return X0

Method: T Find()

Disassembly:
	0x02960BD0 B.EQ 0x2960BF0
	0x02960BD4 SUBS X9, X9, 0x1
	0x02960BD8 ADD X10, X10, 0x10
	0x02960BDC B.NE 0x2960BC8
	0x02960BE0 MOV X0, X20
	0x02960BE4 MOV W2, W31
	0x02960BE8 BL 0x1C5C788
	0x02960BEC B 0x2960BFC
	0x02960BF0 LDRSW X9, [X10]
	0x02960BF4 ADD X8, X8, X9, 0x4, LSL
	0x02960BF8 ADD X0, X8, 0x138
	0x02960BFC LDP X8, X1, [X0]
	0x02960C00 MOV X0, X20
	0x02960C04 BLR X8
	0x02960C08 CBNZ X21, 0x2960C80
	0x02960C0C CMP W22, 0x7
	0x02960C10 B.EQ 0x2960C18
	0x02960C14 CBNZ W22, 0x2960C58
	0x02960C18 LDR W8, [X19 + 0x24]
	0x02960C1C CBNZ W8, 0x2960C58
	0x02960C20 LDR X20, [X19 + 0x10]
	0x02960C24 BL 0x1C16D44
	0x02960C28 CBZ X20, 0x2960C78
	0x02960C2C LDR X20, [X20 + 0x10]
	0x02960C30 CBZ X20, 0x2960C78
	0x02960C34 LDR X21, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1A7B000
	006 Move X21, 0x1794000
	007 Move W8, [X20+3662]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1794000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3662], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X0, [X8+64]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call 0x222DF44
	038 Return X0

