Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/FastVectorEquals_00000930$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B8BD50 STP X20, X19, [X31 + 0x60]
	0x03B8BD54 ADRP X26, 0x857000
	0x03B8BD58 ADRP X25, 0x568000
	0x03B8BD5C LDRB W8, [X26 + 0xB54]
	0x03B8BD60 LDR X25, [X25 + 0x5A0]
	0x03B8BD64 MOV X19, X5
	0x03B8BD68 MOV X20, X4
	0x03B8BD6C MOV X22, X3
	0x03B8BD70 MOV X23, X2
	0x03B8BD74 MOV X24, X1
	0x03B8BD78 MOV X21, X0
	0x03B8BD7C TBNZ X8, 0x0, 0x3B8BD94
	0x03B8BD80 ADRP X0, 0x568000
	0x03B8BD84 LDR X0, [X0 + 0x5A0]
	0x03B8BD88 BL 0x1C16CF4
	0x03B8BD8C MOVZ W8, 0x1
	0x03B8BD90 STRB W8, [X26 + 0xB54]
	0x03B8BD94 LDR X0, [X25]
	0x03B8BD98 MOV X1, X24
	0x03B8BD9C STR X31, [X31 + 0x18]
	0x03B8BDA0 BL 0x1C16E04
	0x03B8BDA4 LDR X8, [X25]
	0x03B8BDA8 STR X0, [X31]
	0x03B8BDAC MOV X1, X23
	0x03B8BDB0 MOV X0, X8
	0x03B8BDB4 BL 0x1C16E04
	0x03B8BDB8 LDR X8, [X25]
	0x03B8BDBC STR X0, [X31 + 0x8]
	0x03B8BDC0 MOV X1, X22
	0x03B8BDC4 MOV X0, X8
	0x03B8BDC8 BL 0x1C16E04
	0x03B8BDCC STR X0, [X31 + 0x10]
	0x03B8BDD0 ADD X1, X31, 0x0
	0x03B8BDD4 MOV X0, X21
	0x03B8BDD8 MOV X2, X20
	0x03B8BDDC MOV X3, X19
	0x03B8BDE0 BL 0x1C16CB0
	0x03B8BDE4 LDP X20, X19, [X31 + 0x60]
	0x03B8BDE8 LDP X22, X21, [X31 + 0x50]
	0x03B8BDEC LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33079296
	021 Add X8, X8, 1344
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33079296
	024 Add X8, X8, 1324
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33079296
	033 Add X8, X8, 1208
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50786304
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Boolean Invoke(in UnityEngine.Vector3 a, in UnityEngine.Vector3 b, System.Single tolerance = 0.0001)

Disassembly:
	0x03B8BDF0 LDP X26, X25, [X31 + 0x30]
	0x03B8BDF4 LDR X30, [X31 + 0x20]
	0x03B8BDF8 ADD X31, X31, 0x70
	0x03B8BDFC RET
	0x03B8BE00 MOV X0, X1

ISIL:
	001 Move X8, [X0+64]
	002 Move X4, [X0+24]
	003 Move X3, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X4

Method: System.IAsyncResult BeginInvoke(in UnityEngine.Vector3 a, in UnityEngine.Vector3 b, System.Single tolerance = 0.0001, System.AsyncCallback param_3, System.Object param_4)

Disassembly:
	0x03B8BE04 MOV X1, X31
	0x03B8BE08 B 0x1C16CB4
	0x03B8BE0C STP X30, X23, [X31 - 0x30]!
	0x03B8BE10 STP X22, X21, [X31 + 0x10]
	0x03B8BE14 STP X20, X19, [X31 + 0x20]
	0x03B8BE18 ADRP X20, 0x857000
	0x03B8BE1C ADRP X23, 0x5D1000
	0x03B8BE20 LDRB W8, [X20 + 0xB55]
	0x03B8BE24 LDR X23, [X23 + 0xF8]
	0x03B8BE28 MOV X19, X0
	0x03B8BE2C TBNZ X8, 0x0, 0x3B8BE68
	0x03B8BE30 ADRP X0, 0x590000
	0x03B8BE34 LDR X0, [X0 + 0x848]
	0x03B8BE38 BL 0x1C16CF4
	0x03B8BE3C ADRP X0, 0x5D1000
	0x03B8BE40 LDR X0, [X0 + 0x258]
	0x03B8BE44 BL 0x1C16CF4
	0x03B8BE48 ADRP X0, 0x5D1000
	0x03B8BE4C LDR X0, [X0 + 0xF8]
	0x03B8BE50 BL 0x1C16CF4
	0x03B8BE54 ADRP X0, 0x5D1000
	0x03B8BE58 LDR X0, [X0 + 0x260]
	0x03B8BE5C BL 0x1C16CF4
	0x03B8BE60 MOVZ W8, 0x1
	0x03B8BE64 STRB W8, [X20 + 0xB55]
	0x03B8BE68 LDR X8, [X23]
	0x03B8BE6C LDR W9, [X8 + 0xE0]
	0x03B8BE70 CBNZ W9, 0x3B8BE80
	0x03B8BE74 MOV X0, X8
	0x03B8BE78 BL 0x1C16DFC
	0x03B8BE7C LDR X8, [X23]
	0x03B8BE80 LDR X9, [X8 + 0xB8]
	0x03B8BE84 LDR X10, [X9]
	0x03B8BE88 CBNZ X10, 0x3B8BEF8
	0x03B8BE8C LDR W10, [X8 + 0xE0]
	0x03B8BE90 CBNZ W10, 0x3B8BEA4
	0x03B8BE94 MOV X0, X8
	0x03B8BE98 BL 0x1C16DFC
	0x03B8BE9C LDR X8, [X23]
	0x03B8BEA0 LDR X9, [X8 + 0xB8]
	0x03B8BEA4 ADRP X8, 0x590000
	0x03B8BEA8 LDR X20, [X9 + 0x8]
	0x03B8BEAC LDR X8, [X8 + 0x848]
	0x03B8BEB0 LDR X0, [X8]
	0x03B8BEB4 ADRP X8, 0x5D1000
	0x03B8BEB8 LDR X8, [X8 + 0x258]
	0x03B8BEBC LDR X21, [X8]
	0x03B8BEC0 ADRP X8, 0x5D1000
	0x03B8BEC4 LDR X8, [X8 + 0x260]
	0x03B8BEC8 LDR W9, [X0 + 0xE0]
	0x03B8BECC LDR X22, [X8]
	0x03B8BED0 CBNZ W9, 0x3B8BED8
	0x03B8BED4 BL 0x1C16DFC
	0x03B8BED8 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0x858000
	012 Move [X31+44], S0
	013 Move X25, 0x569000
	014 Move X24, 0x569000
	015 Move W8, [X26+2880]
	016 Move X25, [X25+1440]
	017 Move X24, [X24+2704]
	018 Move X19, X4
	019 Move X20, X3
	020 Move X22, X2
	021 Move X23, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x569000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0x569000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+2880], W8
	035 Move X0, [X25]
	036 Move X1, X23
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Call 0x1C17E04
	040 Move X8, [X25]
	041 Move [X31], X0
	042 Move X1, X22
	043 Move X0, X8
	044 Call 0x1C17E04
	045 Move X8, [X24]
	046 Move [X31+8], X0
	047 Add X1, X31, 44
	048 Move X0, X8
	049 Call 0x1C17E04
	050 Move [X31+16], X0
	051 Add X1, X31, 0
	052 Move X0, X21
	053 Move X2, X20
	054 Move X3, X19
	055 Call 0x1C17CB0
	056 Move X20, [X31+96]
	057 Move X19, [X31+104]
	058 Move X22, [X31+80]
	059 Move X21, [X31+88]
	060 Move X24, [X31+64]
	061 Move X23, [X31+72]
	062 Move X26, [X31+48]
	063 Move X25, [X31+56]
	064 Move X30, [X31+32]
	065 Add X31, X31, 112
	066 Return X0

Method: System.Boolean EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B8BEDC MOV X1, X21
	0x03B8BEE0 MOV X2, X22
	0x03B8BEE4 MOV X3, X31
	0x03B8BEE8 BL 0x36FAD70
	0x03B8BEEC LDR X8, [X23]
	0x03B8BEF0 LDR X9, [X8 + 0xB8]
	0x03B8BEF4 STR X0, [X9]
	0x03B8BEF8 LDR W9, [X8 + 0xE0]
	0x03B8BEFC CBNZ W9, 0x3B8BF0C
	0x03B8BF00 MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move W0, [X0]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

