Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/FastSafeDivide_00000931$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B8C12C BL 0x1C16CF4
	0x03B8C130 MOVZ W8, 0x1
	0x03B8C134 STRB W8, [X25 + 0xB59]
	0x03B8C138 LDR X0, [X24]
	0x03B8C13C MOV X1, X23
	0x03B8C140 STR X31, [X31 + 0x18]
	0x03B8C144 BL 0x1C16E04
	0x03B8C148 LDR X8, [X24]
	0x03B8C14C STR X0, [X31 + 0x8]
	0x03B8C150 MOV X1, X22
	0x03B8C154 MOV X0, X8
	0x03B8C158 BL 0x1C16E04
	0x03B8C15C STR X0, [X31 + 0x10]
	0x03B8C160 ADD X1, X31, 0x8
	0x03B8C164 MOV X0, X21
	0x03B8C168 MOV X2, X20
	0x03B8C16C MOV X3, X19
	0x03B8C170 BL 0x1C16CB0
	0x03B8C174 LDP X20, X19, [X31 + 0x50]
	0x03B8C178 LDP X22, X21, [X31 + 0x40]
	0x03B8C17C LDP X24, X23, [X31 + 0x30]
	0x03B8C180 LDP X30, X25, [X31 + 0x20]
	0x03B8C184 ADD X31, X31, 0x60
	0x03B8C188 RET
	0x03B8C18C MOV X0, X1
	0x03B8C190 MOV X1, X31
	0x03B8C194 B 0x1C16CB4
	0x03B8C198 STP X30, X23, [X31 - 0x30]!
	0x03B8C19C STP X22, X21, [X31 + 0x10]
	0x03B8C1A0 STP X20, X19, [X31 + 0x20]
	0x03B8C1A4 ADRP X20, 0x856000
	0x03B8C1A8 ADRP X23, 0x5D0000
	0x03B8C1AC LDRB W8, [X20 + 0xB5A]
	0x03B8C1B0 LDR X23, [X23 + 0x100]
	0x03B8C1B4 MOV X19, X0
	0x03B8C1B8 TBNZ X8, 0x0, 0x3B8C1F4
	0x03B8C1BC ADRP X0, 0x58F000
	0x03B8C1C0 LDR X0, [X0 + 0x848]
	0x03B8C1C4 BL 0x1C16CF4
	0x03B8C1C8 ADRP X0, 0x5D0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33083392
	021 Add X8, X8, 1536
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33083392
	024 Add X8, X8, 1512
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33083392
	033 Add X8, X8, 1400
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50790400
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in UnityEngine.Vector3 a, in UnityEngine.Vector3 b, out UnityEngine.Vector3 result, System.Single tolerance = 1E-06)

Disassembly:
	0x03B8C1CC LDR X0, [X0 + 0x270]
	0x03B8C1D0 BL 0x1C16CF4
	0x03B8C1D4 ADRP X0, 0x5D0000
	0x03B8C1D8 LDR X0, [X0 + 0x100]
	0x03B8C1DC BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(in UnityEngine.Vector3 a, in UnityEngine.Vector3 b, out UnityEngine.Vector3 result, System.Single tolerance = 1E-06, System.AsyncCallback param_4, System.Object param_5)

Disassembly:
	0x03B8C1E0 ADRP X0, 0x5D0000
	0x03B8C1E4 LDR X0, [X0 + 0x278]
	0x03B8C1E8 BL 0x1C16CF4
	0x03B8C1EC MOVZ W8, 0x1
	0x03B8C1F0 STRB W8, [X20 + 0xB5A]
	0x03B8C1F4 LDR X8, [X23]
	0x03B8C1F8 LDR W9, [X8 + 0xE0]
	0x03B8C1FC CBNZ W9, 0x3B8C20C
	0x03B8C200 MOV X0, X8
	0x03B8C204 BL 0x1C16DFC
	0x03B8C208 LDR X8, [X23]
	0x03B8C20C LDR X9, [X8 + 0xB8]
	0x03B8C210 LDR X10, [X9]
	0x03B8C214 CBNZ X10, 0x3B8C284
	0x03B8C218 LDR W10, [X8 + 0xE0]
	0x03B8C21C CBNZ W10, 0x3B8C230
	0x03B8C220 MOV X0, X8
	0x03B8C224 BL 0x1C16DFC
	0x03B8C228 LDR X8, [X23]
	0x03B8C22C LDR X9, [X8 + 0xB8]
	0x03B8C230 ADRP X8, 0x58F000
	0x03B8C234 LDR X20, [X9 + 0x8]
	0x03B8C238 LDR X8, [X8 + 0x848]
	0x03B8C23C LDR X0, [X8]
	0x03B8C240 ADRP X8, 0x5D0000
	0x03B8C244 LDR X8, [X8 + 0x270]
	0x03B8C248 LDR X21, [X8]
	0x03B8C24C ADRP X8, 0x5D0000
	0x03B8C250 LDR X8, [X8 + 0x278]
	0x03B8C254 LDR W9, [X0 + 0xE0]
	0x03B8C258 LDR X22, [X8]
	0x03B8C25C CBNZ W9, 0x3B8C264
	0x03B8C260 BL 0x1C16DFC
	0x03B8C264 MOV X0, X20
	0x03B8C268 MOV X1, X21
	0x03B8C26C MOV X2, X22
	0x03B8C270 MOV X3, X31
	0x03B8C274 BL 0x36FAD70
	0x03B8C278 LDR X8, [X23]
	0x03B8C27C LDR X9, [X8 + 0xB8]
	0x03B8C280 STR X0, [X9]
	0x03B8C284 LDR W9, [X8 + 0xE0]
	0x03B8C288 CBNZ W9, 0x3B8C298
	0x03B8C28C MOV X0, X8
	0x03B8C290 BL 0x1C16DFC
	0x03B8C294 LDR X8, [X23]
	0x03B8C298 LDR X8, [X8 + 0xB8]
	0x03B8C29C LDP X22, X21, [X31 + 0x10]
	0x03B8C2A0 LDR X8, [X8]
	0x03B8C2A4 STR X8, [X19]
	0x03B8C2A8 LDP X20, X19, [X31 + 0x20]
	0x03B8C2AC LDP X30, X23, [X31], #0x30
	0x03B8C2B0 RET
	0x03B8C2B4 STR X30, [X31 - 0x20]!
	0x03B8C2B8 STP X20, X19, [X31 + 0x10]
	0x03B8C2BC ADRP X20, 0x856000
	0x03B8C2C0 ADRP X19, 0x5D0000
	0x03B8C2C4 LDRB W8, [X20 + 0xB5B]
	0x03B8C2C8 LDR X19, [X19 + 0x100]
	0x03B8C2CC TBNZ X8, 0x0, 0x3B8C2E4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X27, 0x857000
	013 Move [X31+44], S0
	014 Move X26, 0x568000
	015 Move X25, 0x568000
	016 Move W8, [X27+2885]
	017 Move X26, [X26+1440]
	018 Move X25, [X25+2704]
	019 Move X19, X5
	020 Move X20, X4
	021 Move X22, X3
	022 Move X23, X2
	023 Move X24, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x568000
	030 Move X0, [X0+2704]
	031 Call 0x1C17CF4
	032 Move X0, 0x568000
	033 Move X0, [X0+1440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X27+2885], W8
	037 Move X0, [X26]
	038 Move X1, X24
	039 Move [X31+24], X31
	040 Move [X31+32], X31
	041 Call 0x1C17E04
	042 Move X8, [X26]
	043 Move [X31], X0
	044 Move X1, X23
	045 Move X0, X8
	046 Call 0x1C17E04
	047 Move X8, [X26]
	048 Move [X31+8], X0
	049 Move X1, X22
	050 Move X0, X8
	051 Call 0x1C17E04
	052 Move X8, [X25]
	053 Move [X31+16], X0
	054 Add X1, X31, 44
	055 Move X0, X8
	056 Call 0x1C17E04
	057 Move [X31+24], X0
	058 Add X1, X31, 0
	059 Move X0, X21
	060 Move X2, X20
	061 Move X3, X19
	062 Call 0x1C17CB0
	063 Move X20, [X31+112]
	064 Move X19, [X31+120]
	065 Move X22, [X31+96]
	066 Move X21, [X31+104]
	067 Move X24, [X31+80]
	068 Move X23, [X31+88]
	069 Move X26, [X31+64]
	070 Move X25, [X31+72]
	071 Move X30, [X31+48]
	072 Move X27, [X31+56]
	073 Add X31, X31, 128
	074 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B8C2D0 ADRP X0, 0x5D0000
	0x03B8C2D4 LDR X0, [X0 + 0x100]
	0x03B8C2D8 BL 0x1C16CF4

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

