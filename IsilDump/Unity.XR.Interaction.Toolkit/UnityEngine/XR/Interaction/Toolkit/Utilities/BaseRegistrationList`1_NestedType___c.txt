Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BaseRegistrationList`1/<>c

Method: System.Void .cctor()

Disassembly:
	0x02367E8C TBNZ X8, 0x0, 0x2367E94
	0x02367E90 BL 0x1C5C684
	0x02367E94 LDR X8, [X0 + 0xC0]
	0x02367E98 LDR X0, [X8]
	0x02367E9C LDRB W8, [X0 + 0x135]
	0x02367EA0 TBNZ X8, 0x0, 0x2367EA8
	0x02367EA4 BL 0x1C5C684
	0x02367EA8 BL 0x1C16F10
	0x02367EAC LDR X8, [X19 + 0x20]
	0x02367EB0 MOV X20, X0
	0x02367EB4 LDRB W9, [X8 + 0x135]
	0x02367EB8 TBNZ X9, 0x0, 0x2367EC4
	0x02367EBC MOV X0, X8
	0x02367EC0 BL 0x1C5C684
	0x02367EC4 MOV X0, X20
	0x02367EC8 MOV X1, X31
	0x02367ECC BL 0x33BDD8C
	0x02367ED0 LDR X0, [X19 + 0x20]
	0x02367ED4 LDRB W8, [X0 + 0x135]
	0x02367ED8 TBNZ X8, 0x0, 0x2367EE0
	0x02367EDC BL 0x1C5C684
	0x02367EE0 LDR X8, [X0 + 0xC0]
	0x02367EE4 LDR X0, [X8 + 0x10]
	0x02367EE8 LDRB W8, [X0 + 0x135]
	0x02367EEC TBNZ X8, 0x0, 0x2367EF4
	0x02367EF0 BL 0x1C5C684
	0x02367EF4 LDR X8, [X0 + 0xB8]
	0x02367EF8 STR X20, [X8]
	0x02367EFC LDR X0, [X19 + 0x20]
	0x02367F00 LDRB W8, [X0 + 0x135]
	0x02367F04 TBNZ X8, 0x0, 0x2367F0C
	0x02367F08 BL 0x1C5C684
	0x02367F0C LDR X8, [X0 + 0xC0]
	0x02367F10 LDR X0, [X8 + 0x10]
	0x02367F14 LDRB W8, [X0 + 0x135]
	0x02367F18 TBNZ X8, 0x0, 0x2367F28
	0x02367F1C LDP X20, X19, [X31 + 0x10]
	0x02367F20 LDR X30, [X31], #0x20
	0x02367F24 B 0x1C5C684
	0x02367F28 LDP X20, X19, [X31 + 0x10]
	0x02367F2C LDR X30, [X31], #0x20
	0x02367F30 RET
	0x02367F34 MOV X1, X31
	0x02367F38 B 0x33BDD8C
	0x02367F3C STR X30, [X31 - 0x20]!
	0x02367F40 STP X20, X19, [X31 + 0x10]
	0x02367F44 ADRP X20, 0x2072000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x02367F48 LDRB W8, [X20 + 0x8A8]
	0x02367F4C MOV X19, X1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Collections.Generic.List`1<T> <.cctor>b__30_0()

Disassembly:
	0x02367F50 TBNZ X8, 0x0, 0x2367F68
	0x02367F54 ADRP X0, 0x1D8C000
	0x02367F58 LDR X0, [X0 + 0x598]
	0x02367F5C BL 0x1C16CF4
	0x02367F60 MOVZ W8, 0x1
	0x02367F64 STRB W8, [X20 + 0x8A8]
	0x02367F68 CBZ X19, 0x2367FA0
	0x02367F6C ADRP X8, 0x1D8C000
	0x02367F70 LDR X8, [X8 + 0x598]
	0x02367F74 LDR X19, [X19 + 0x30]
	0x02367F78 LDR X0, [X8]
	0x02367F7C LDR W8, [X0 + 0xE0]
	0x02367F80 CBNZ W8, 0x2367F88
	0x02367F84 BL 0x1C16DFC
	0x02367F88 MOV X0, X19
	0x02367F8C LDP X20, X19, [X31 + 0x10]
	0x02367F90 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X0, [X8+24]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Call 0x1C17F10
	014 Move X8, [X19+32]
	015 Move X19, X0
	016 Move X8, [X8+192]
	017 Move X1, [X8+32]
	018 Call List`1<Object>..ctor, X0
	019 Move X0, X19
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 Return X0

Method: System.Void <.cctor>b__30_1(System.Collections.Generic.List`1<T> list)

Disassembly:
	0x02367F94 MOV X2, X31
	0x02367F98 LDR X30, [X31], #0x20
	0x02367F9C B 0x3C354F8
	0x02367FA0 BL 0x1C16F20
	0x02367FA4 STP X30, X21, [X31 - 0x20]!
	0x02367FA8 STP X20, X19, [X31 + 0x10]
	0x02367FAC ADRP X20, 0x2072000
	0x02367FB0 LDRB W8, [X20 + 0x8A9]
	0x02367FB4 MOV X19, X1
	0x02367FB8 TBNZ X8, 0x0, 0x2367FDC
	0x02367FBC ADRP X0, 0x1D8C000
	0x02367FC0 LDR X0, [X0 + 0x6C0]
	0x02367FC4 BL 0x1C16CF4
	0x02367FC8 ADRP X0, 0x1DB5000
	0x02367FCC LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {18}
	004 Move W2, [X1+24]
	005 Move W8, [X1+28]
	006 Add W8, W8, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move [X1+24], W31
	009 Move [X1+28], W8
	010 Move X0, [X1+16]
	011 Move W1, W31
	012 Move X3, X31
	013 Move X30, [X31+16]
	014 Call Array.Clear, X0, X1, X2
	015 Return 
	016 Move X30, [X31+16]
	017 Return 
	018 Call 0x1C17F20

