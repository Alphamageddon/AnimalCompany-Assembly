Type: UnityEngine.XR.Interaction.Toolkit.Utilities.XRInteractableUtility

Method: System.Boolean get_allowTriggerColliders()

Disassembly:
	0x03B8F690 ADRP X0, 0x5CD000
	0x03B8F694 LDR X0, [X0 + 0x3F8]
	0x03B8F698 BL 0x1C16CF4
	0x03B8F69C ADRP X0, 0x564000
	0x03B8F6A0 LDR X0, [X0 + 0x598]
	0x03B8F6A4 BL 0x1C16CF4
	0x03B8F6A8 ADRP X0, 0x5CD000
	0x03B8F6AC LDR X0, [X0 + 0x400]
	0x03B8F6B0 BL 0x1C16CF4
	0x03B8F6B4 ADRP X0, 0x5CD000
	0x03B8F6B8 LDR X0, [X0 + 0x408]
	0x03B8F6BC BL 0x1C16CF4
	0x03B8F6C0 ADRP X0, 0x5CB000
	0x03B8F6C4 LDR X0, [X0 + 0x600]
	0x03B8F6C8 BL 0x1C16CF4
	0x03B8F6CC MOVZ W8, 0x1
	0x03B8F6D0 STRB W8, [X21 + 0xB7F]
	0x03B8F6D4 MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x854000
	005 Move X20, 0x5CE000
	006 Move W8, [X19+2936]
	007 Move X20, [X20+976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5CE000
	013 Move X0, [X0+976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2936], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_allowTriggerColliders(System.Boolean value)

Disassembly:
	0x03B8F6D8 STR X31, [X31 + 0x50]
	0x03B8F6DC STP V0, V0, [X31 + 0x30]
	0x03B8F6E0 CBZ X20, 0x3B8F8DC
	0x03B8F6E4 LDR X0, [X19 + 0x18]
	0x03B8F6E8 CBZ X0, 0x3B8F86C
	0x03B8F6EC ADRP X8, 0x5CD000
	0x03B8F6F0 LDR X8, [X8 + 0x428]
	0x03B8F6F4 ADRP X26, 0x5CD000
	0x03B8F6F8 ADRP X27, 0x5CD000
	0x03B8F6FC ADRP X28, 0x564000
	0x03B8F700 ADRP X29, 0x5CC000
	0x03B8F704 LDR X26, [X26 + 0x438]
	0x03B8F708 LDR X27, [X27 + 0x468]
	0x03B8F70C LDR X28, [X28 + 0x598]
	0x03B8F710 LDR X29, [X29 + 0xC78]
	0x03B8F714 LDR X1, [X8]
	0x03B8F718 ADRP X24, 0x5CD000
	0x03B8F71C LDR X24, [X24 + 0x408]
	0x03B8F720 ADD X8, X31, 0x8
	0x03B8F724 BL 0x2AA54BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x854000
	006 Move X20, 0x5CE000
	007 Move W8, [X21+2937]
	008 Move X20, [X20+976]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5CE000
	015 Move X0, [X0+976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2937], W8
	019 Move X8, [X20]
	020 And W9, W19, 1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8+184]
	024 Move [X8], W9
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Boolean TryGetClosestCollider(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable, UnityEngine.Vector3 position, out UnityEngine.XR.Interaction.Toolkit.DistanceInfo distanceInfo)

Disassembly:
	0x03B8F728 LDUR V0, [X31 + 0x8]
	0x03B8F72C LDUR V1, [X31 + 0x18]
	0x03B8F730 LDR X8, [X31 + 0x28]
	0x03B8F734 MOV W25, W31
	0x03B8F738 STP V0, V1, [X31 + 0x30]
	0x03B8F73C STR X8, [X31 + 0x50]
	0x03B8F740 LDR X1, [X26]
	0x03B8F744 ADD X0, X31, 0x30
	0x03B8F748 BL 0x2C0A728
	0x03B8F74C TBZ X0, 0x0, 0x3B8F80C
	0x03B8F750 LDR X21, [X31 + 0x48]
	0x03B8F754 CBZ X21, 0x3B8F8D4
	0x03B8F758 LDR X22, [X31 + 0x40]
	0x03B8F75C LDR X2, [X27]
	0x03B8F760 MOV X0, X21
	0x03B8F764 MOV X1, X20
	0x03B8F768 BL 0x301D7A8
	0x03B8F76C TBZ X0, 0x0, 0x3B8F800
	0x03B8F770 LDR W8, [X21 + 0x18]
	0x03B8F774 CBNZ W8, 0x3B8F800
	0x03B8F778 LDR X0, [X28]
	0x03B8F77C LDR W8, [X0 + 0xE0]
	0x03B8F780 CBNZ W8, 0x3B8F788
	0x03B8F784 BL 0x1C16DFC
	0x03B8F788 MOV X0, X22
	0x03B8F78C MOV X1, X31
	0x03B8F790 MOV X2, X31
	0x03B8F794 BL 0x3C354F8
	0x03B8F798 TBZ X0, 0x0, 0x3B8F800
	0x03B8F79C LDR X0, [X29]
	0x03B8F7A0 BL 0x1C16F10
	0x03B8F7A4 ADRP X8, 0x5CD000
	0x03B8F7A8 LDR X8, [X8 + 0x400]
	0x03B8F7AC MOV X23, X0
	0x03B8F7B0 LDR X2, [X8]
	0x03B8F7B4 MOV X1, X19
	0x03B8F7B8 MOV X3, X31
	0x03B8F7BC BL 0x2A6B948
	0x03B8F7C0 CBZ X22, 0x3B8F8D8
	0x03B8F7C4 MOV X0, X22
	0x03B8F7C8 MOV X1, X23
	0x03B8F7CC MOV X2, X31
	0x03B8F7D0 BL 0x3B7A224
	0x03B8F7D4 LDR X0, [X29]
	0x03B8F7D8 BL 0x1C16F10
	0x03B8F7DC LDR X2, [X24]
	0x03B8F7E0 MOV X23, X0
	0x03B8F7E4 MOV X1, X19
	0x03B8F7E8 MOV X3, X31
	0x03B8F7EC BL 0x2A6B948
	0x03B8F7F0 MOV X0, X22
	0x03B8F7F4 MOV X1, X23
	0x03B8F7F8 MOV X2, X31
	0x03B8F7FC BL 0x3B7A2D4
	0x03B8F800 LDR W8, [X21 + 0x18]
	0x03B8F804 ADD W25, W8, W25
	0x03B8F808 B 0x3B8F740
	0x03B8F80C ADRP X8, 0x5CD000
	0x03B8F810 LDR X8, [X8 + 0x430]
	0x03B8F814 ADD X0, X31, 0x30
	0x03B8F818 LDR X1, [X8]
	0x03B8F81C BL 0x2C0A83C
	0x03B8F820 CBNZ W25, 0x3B8F8B4
	0x03B8F824 LDR X8, [X19 + 0x18]
	0x03B8F828 CBZ X8, 0x3B8F86C
	0x03B8F82C ADRP X20, 0x5CB000
	0x03B8F830 LDR X20, [X20 + 0x600]
	0x03B8F834 LDR X0, [X20]
	0x03B8F838 LDR W8, [X0 + 0xE0]
	0x03B8F83C CBNZ W8, 0x3B8F848
	0x03B8F840 BL 0x1C16DFC
	0x03B8F844 LDR X0, [X20]
	0x03B8F848 LDR X8, [X0 + 0xB8]
	0x03B8F84C LDR X0, [X8]
	0x03B8F850 CBZ X0, 0x3B8F924
	0x03B8F854 ADRP X8, 0x5CD000
	0x03B8F858 LDR X1, [X19 + 0x18]
	0x03B8F85C LDR X8, [X8 + 0x460]
	0x03B8F860 LDR X2, [X8]
	0x03B8F864 BL 0x2EF10B8
	0x03B8F868 STR X31, [X19 + 0x18]
	0x03B8F86C LDR X8, [X19 + 0x20]
	0x03B8F870 CBZ X8, 0x3B8F8B4
	0x03B8F874 ADRP X20, 0x5CB000
	0x03B8F878 LDR X20, [X20 + 0x600]
	0x03B8F87C LDR X0, [X20]
	0x03B8F880 LDR W8, [X0 + 0xE0]
	0x03B8F884 CBNZ W8, 0x3B8F890
	0x03B8F888 BL 0x1C16DFC
	0x03B8F88C LDR X0, [X20]
	0x03B8F890 LDR X8, [X0 + 0xB8]
	0x03B8F894 LDR X0, [X8 + 0x8]
	0x03B8F898 CBZ X0, 0x3B8F924
	0x03B8F89C ADRP X8, 0x5CD000
	0x03B8F8A0 LDR X1, [X19 + 0x20]
	0x03B8F8A4 LDR X8, [X8 + 0x458]
	0x03B8F8A8 LDR X2, [X8]
	0x03B8F8AC BL 0x2EF10B8
	0x03B8F8B0 STR X31, [X19 + 0x20]
	0x03B8F8B4 LDP X20, X19, [X31 + 0xB0]
	0x03B8F8B8 LDP X22, X21, [X31 + 0xA0]
	0x03B8F8BC LDP X24, X23, [X31 + 0x90]
	0x03B8F8C0 LDP X26, X25, [X31 + 0x80]
	0x03B8F8C4 LDP X28, X27, [X31 + 0x70]
	0x03B8F8C8 LDP X29, X30, [X31 + 0x60]
	0x03B8F8CC ADD X31, X31, 0xC0
	0x03B8F8D0 RET
	0x03B8F8D4 BL 0x1C16F20
	0x03B8F8D8 BL 0x1C16F20
	0x03B8F8DC ADRP X0, 0x569000
	0x03B8F8E0 LDR X0, [X0 + 0x528]
	0x03B8F8E4 BL 0x1C16D08
	0x03B8F8E8 BL 0x1C16F10
	0x03B8F8EC MOV X19, X0
	0x03B8F8F0 ADRP X0, 0x5CD000
	0x03B8F8F4 LDR X0, [X0 + 0x410]
	0x03B8F8F8 BL 0x1C16D08
	0x03B8F8FC MOV X1, X0
	0x03B8F900 MOV X0, X19
	0x03B8F904 MOV X2, X31
	0x03B8F908 BL 0x330E100
	0x03B8F90C ADRP X0, 0x5CD000
	0x03B8F910 LDR X0, [X0 + 0x470]
	0x03B8F914 BL 0x1C16D08
	0x03B8F918 MOV X1, X0
	0x03B8F91C MOV X0, X19
	0x03B8F920 BL 0x1C16DEC
	0x03B8F924 BL 0x1C16F20
	0x03B8F928 B 0x3B8F944
	0x03B8F92C B 0x3B8F944
	0x03B8F930 B 0x3B8F944
	0x03B8F934 B 0x3B8F944
	0x03B8F938 B 0x3B8F944
	0x03B8F93C B 0x3B8F944
	0x03B8F940 B 0x3B8F944
	0x03B8F944 MOV X20, X0
	0x03B8F948 CMP W1, 0x1
	0x03B8F94C B.NE 0x3B8F980
	0x03B8F950 MOV X0, X20
	0x03B8F954 BL 0x3EB1AD0
	0x03B8F958 LDR X21, [X0]
	0x03B8F95C BL 0x3EB1AE0
	0x03B8F960 ADRP X8, 0x5CD000
	0x03B8F964 LDR X8, [X8 + 0x430]
	0x03B8F968 ADD X0, X31, 0x30
	0x03B8F96C LDR X1, [X8]
	0x03B8F970 BL 0x2C0A83C
	0x03B8F974 CBZ X21, 0x3B8F820
	0x03B8F978 MOV X0, X21
	0x03B8F97C BL 0x1C16F18
	0x03B8F980 MOV X21, X31
	0x03B8F984 B 0x3B8F98C
	0x03B8F988 MOV X20, X0
	0x03B8F98C ADRP X8, 0x5CD000
	0x03B8F990 LDR X8, [X8 + 0x430]
	0x03B8F994 LDR X1, [X8]
	0x03B8F998 ADD X0, X31, 0x30
	0x03B8F99C BL 0x2C0A83C
	0x03B8F9A0 CBNZ X21, 0x3B8F9AC
	0x03B8F9A4 MOV X0, X20
	0x03B8F9A8 BL 0x1D2C690
	0x03B8F9AC MOV X0, X21
	0x03B8F9B0 BL 0x1C16F18
	0x03B8F9B4 BL 0x1990590
	0x03B8F9B8 STR X30, [X31 - 0x30]!
	0x03B8F9BC STP X22, X21, [X31 + 0x10]
	0x03B8F9C0 STP X20, X19, [X31 + 0x20]
	0x03B8F9C4 ADRP X22, 0x853000
	0x03B8F9C8 ADRP X21, 0x564000
	0x03B8F9CC LDRB W8, [X22 + 0xB81]
	0x03B8F9D0 LDR X21, [X21 + 0x598]
	0x03B8F9D4 MOV X19, X1
	0x03B8F9D8 MOV X20, X0
	0x03B8F9DC TBNZ X8, 0x0, 0x3B8F9F4
	0x03B8F9E0 ADRP X0, 0x564000
	0x03B8F9E4 LDR X0, [X0 + 0x598]
	0x03B8F9E8 BL 0x1C16CF4
	0x03B8F9EC MOVZ W8, 0x1
	0x03B8F9F0 STRB W8, [X22 + 0xB81]
	0x03B8F9F4 LDR X0, [X21]
	0x03B8F9F8 LDR W8, [X0 + 0xE0]
	0x03B8F9FC CBNZ W8, 0x3B8FA04
	0x03B8FA00 BL 0x1C16DFC
	0x03B8FA04 MOV X0, X20
	0x03B8FA08 MOV X1, X31
	0x03B8FA0C MOV X2, X31
	0x03B8FA10 BL 0x3C354F8
	0x03B8FA14 TBZ X0, 0x0, 0x3B8FA88
	0x03B8FA18 CBZ X20, 0x3B8FAA8
	0x03B8FA1C LDR X0, [X21]
	0x03B8FA20 LDR X20, [X20 + 0x30]
	0x03B8FA24 LDR W8, [X0 + 0xE0]
	0x03B8FA28 CBNZ W8, 0x3B8FA30
	0x03B8FA2C BL 0x1C16DFC
	0x03B8FA30 MOV X0, X20
	0x03B8FA34 MOV X1, X31
	0x03B8FA38 MOV X2, X31
	0x03B8FA3C BL 0x3C354F8
	0x03B8FA40 TBZ X0, 0x0, 0x3B8FA88
	0x03B8FA44 CBZ X20, 0x3B8FAA8
	0x03B8FA48 LDR X0, [X21]
	0x03B8FA4C LDR X20, [X20 + 0x38]
	0x03B8FA50 LDR W8, [X0 + 0xE0]
	0x03B8FA54 CBNZ W8, 0x3B8FA5C
	0x03B8FA58 BL 0x1C16DFC
	0x03B8FA5C MOV X0, X20
	0x03B8FA60 MOV X1, X31
	0x03B8FA64 MOV X2, X31
	0x03B8FA68 BL 0x3C354F8
	0x03B8FA6C TBZ X0, 0x0, 0x3B8FA88
	0x03B8FA70 CBZ X20, 0x3B8FAA8
	0x03B8FA74 MOV X0, X20
	0x03B8FA78 MOV X1, X31
	0x03B8FA7C BL 0x3C356F8
	0x03B8FA80 MOVZ W8, 0x1
	0x03B8FA84 B 0x3B8FA90

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+64], D14
	003 Move [X31+72], D13
	004 Move [X31+80], D12
	005 Move [X31+88], D11
	006 Move [X31+96], D10
	007 Move [X31+104], D9
	008 Move [X31+112], D8
	009 Move [X31+120], X30
	010 Move [X31+128], X28
	011 Move [X31+136], X27
	012 Move [X31+144], X26
	013 Move [X31+152], X25
	014 Move [X31+160], X24
	015 Move [X31+168], X23
	016 Move [X31+176], X22
	017 Move [X31+184], X21
	018 Move [X31+192], X20
	019 Move [X31+200], X19
	020 Move X21, 0x854000
	021 Move W8, [X21+2938]
	022 Move X19, X1
	023 Move V8, V2
	024 Move V9, V1
	025 Move V10, V0
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0x5CD000
	032 Move X0, [X0+1912]
	033 Call 0x1C17CF4
	034 Move X0, 0x5CD000
	035 Move X0, [X0+1920]
	036 Call 0x1C17CF4
	037 Move X0, 0x5CD000
	038 Move X0, [X0+1928]
	039 Call 0x1C17CF4
	040 Move X0, 0x5CC000
	041 Move X0, [X0+2264]
	042 Call 0x1C17CF4
	043 Move X0, 0x5CD000
	044 Move X0, [X0+1944]
	045 Call 0x1C17CF4
	046 Move X0, 0x565000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+2938], W8
	051 Move [X31+32], X31
	052 Move [X31+40], X31
	053 Move [X31+48], X31
	054 Compare X20, 0
	055 JumpIfEqual {223}
	056 Move X10, 0x5CC000
	057 Move X8, [X20]
	058 Move X10, [X10+2264]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 5
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 5
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {223}
	082 Move X8, 0x5CD000
	083 Move X8, [X8+1944]
	084 Move X25, 0x5CD000
	085 Move X26, 0x565000
	086 Move X22, 0x5CD000
	087 Move X1, [X8]
	088 Move X25, [X25+1920]
	089 Move X26, [X26+1432]
	090 Move X22, [X22+1912]
	091 Add X8, X31, 8
	092 Call List`1<Object>.GetEnumerator, X0
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 Move X8, [X31+24]
	095 Move X20, 0x5CE000
	096 Move X20, [X20+976]
	097 Move TEMP, 0x80800000
	098 Not TEMP
	099 Move W9, TEMP
	100 Move W23, W31
	101 Move X24, X31
	102 Move S11, W31
	103 Move X27, 0x854000
	104 Move W28, 1
	105 Move S12, W31
	106 Move S13, W9
	107 Move [X31+2], V0
	108 Move [X31+48], X8
	109 Move S14, W31
	110 Move X1, [X25]
	111 Add X0, X31, 32
	112 Call Enumerator<Object>.MoveNext, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {191}
	117 Move X0, [X26]
	118 Move X21, [X31+48]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X21
	124 Move X1, X31
	125 Move X2, X31
	126 Call Object.op_Equality, X0, X1
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {110}
	131 Compare X21, 0
	132 JumpIfEqual {220}
	133 Move X0, X21
	134 Move X1, X31
	135 Call Component.get_gameObject, X0
	136 Compare X0, 0
	137 JumpIfEqual {221}
	138 Move X1, X31
	139 Call GameObject.get_activeInHierarchy, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {110}
	144 Move X0, X21
	145 Move X1, X31
	146 Call Collider.get_enabled, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {110}
	151 Move X0, X21
	152 Move X1, X31
	153 Call Collider.get_isTrigger, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {169}
	158 Move W8, [X27+3066]
	159 Compare W8, 0
	160 JumpIfNotEqual {164}
	161 Move X0, X20
	162 Call 0x1C17CF4
	163 Move [X27+3066], W28
	164 Move X8, [X20]
	165 Move X8, [X8+184]
	166 Move W8, [X8]
	167 Compare W8, 0
	168 JumpIfEqual {110}
	169 Move X0, X21
	170 Move X1, X31
	171 Call Component.get_transform, X0
	172 Compare X0, 0
	173 JumpIfEqual {222}
	174 Move X1, X31
	175 Call Transform.get_position, X0
	176 Subtract S3, S10, S0
	177 Subtract S4, S9, S1
	178 Subtract S5, S8, S2
	179 Multiply S3, S3, S3
	180 Multiply S4, S4, S4
	181 Add S3, S3, S4
	182 Multiply S4, S5, S5
	183 Add S3, S4, S3
	184 NotImplemented "Instruction FCMP not yet implemented."
	185 Move W23, 1
	186 Move V11, V2
	187 Move V12, V1
	188 Move V14, V0
	189 Move X24, X21
	190 Move V13, V3
	191 Move X1, [X22]
	192 Add X0, X31, 32
	193 Call Enumerator<Object>.Dispose, X0
	194 Move [X19], S14
	195 Move [X19+8], S12
	196 Move [X19+8], S11
	197 Move [X19+16], S13
	198 And W0, W23, 1
	199 Move [X19+16], X24
	200 Move X20, [X31+192]
	201 Move X19, [X31+200]
	202 Move X22, [X31+176]
	203 Move X21, [X31+184]
	204 Move X24, [X31+160]
	205 Move X23, [X31+168]
	206 Move X26, [X31+144]
	207 Move X25, [X31+152]
	208 Move X28, [X31+128]
	209 Move X27, [X31+136]
	210 Move X30, [X31+120]
	211 Move D9, [X31+104]
	212 Move D8, [X31+112]
	213 Move D11, [X31+88]
	214 Move D10, [X31+96]
	215 Move D13, [X31+72]
	216 Move D12, [X31+80]
	217 Move V14, [X31+64]
	218 Add X31, X31, 208
	219 Return X0
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Move X20, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X20
	227 Call 0x3EB2AD0
	228 Move X21, [X0]
	229 Call 0x3EB2AE0
	230 Move X1, [X22]
	231 Add X0, X31, 32
	232 Call Enumerator<Object>.Dispose, X0
	233 Compare X21, 0
	234 JumpIfEqual {194}
	235 Move X0, X21
	236 Call 0x1C17F18
	237 Move X21, X31
	238 Move X20, X0
	239 Move X1, [X22]
	240 Add X0, X31, 32
	241 Call Enumerator<Object>.Dispose, X0
	242 Compare X21, 0
	243 JumpIfNotEqual {246}
	244 Move X0, X20
	245 Call 0x1D2D690
	246 Move X0, X21
	247 Call 0x1C17F18
	248 Call 0x1991590

Method: System.Boolean TryGetClosestPointOnCollider(UnityEngine.XR.Interaction.Toolkit.IXRInteractable interactable, UnityEngine.Vector3 position, out UnityEngine.XR.Interaction.Toolkit.DistanceInfo distanceInfo)

Disassembly:
	0x03B8FA88 MOV X0, X31
	0x03B8FA8C MOV W8, W31
	0x03B8FA90 STR X0, [X19]
	0x03B8FA94 LDP X20, X19, [X31 + 0x20]
	0x03B8FA98 LDP X22, X21, [X31 + 0x10]
	0x03B8FA9C MOV W0, W8
	0x03B8FAA0 LDR X30, [X31], #0x30
	0x03B8FAA4 RET
	0x03B8FAA8 BL 0x1C16F20
	0x03B8FAAC SUB X31, X31, 0x70
	0x03B8FAB0 STR X30, [X31 + 0x40]
	0x03B8FAB4 STP X22, X21, [X31 + 0x50]
	0x03B8FAB8 STP X20, X19, [X31 + 0x60]
	0x03B8FABC ADRP X21, 0x853000
	0x03B8FAC0 ADRP X22, 0x5CB000
	0x03B8FAC4 LDRB W8, [X21 + 0xB83]
	0x03B8FAC8 LDR X22, [X22 + 0x600]
	0x03B8FACC MOV X19, X1
	0x03B8FAD0 MOV X20, X0
	0x03B8FAD4 TBNZ X8, 0x0, 0x3B8FB04
	0x03B8FAD8 ADRP X0, 0x5CD000
	0x03B8FADC LDR X0, [X0 + 0x478]
	0x03B8FAE0 BL 0x1C16CF4
	0x03B8FAE4 ADRP X0, 0x5CD000
	0x03B8FAE8 LDR X0, [X0 + 0x480]
	0x03B8FAEC BL 0x1C16CF4
	0x03B8FAF0 ADRP X0, 0x5CB000
	0x03B8FAF4 LDR X0, [X0 + 0x600]
	0x03B8FAF8 BL 0x1C16CF4
	0x03B8FAFC MOVZ W8, 0x1
	0x03B8FB00 STRB W8, [X21 + 0xB83]
	0x03B8FB04 LDR X0, [X22]
	0x03B8FB08 STR X31, [X31 + 0x48]
	0x03B8FB0C LDR W8, [X0 + 0xE0]
	0x03B8FB10 CBNZ W8, 0x3B8FB18
	0x03B8FB14 BL 0x1C16DFC
	0x03B8FB18 ADD X1, X31, 0x48
	0x03B8FB1C MOV X0, X19
	0x03B8FB20 BL 0x3B8F9B8
	0x03B8FB24 TBZ X0, 0x0, 0x3B8FBB8
	0x03B8FB28 LDR X21, [X20 + 0x20]
	0x03B8FB2C CBNZ X21, 0x3B8FB68
	0x03B8FB30 LDR X0, [X22]
	0x03B8FB34 LDR W8, [X0 + 0xE0]
	0x03B8FB38 CBNZ W8, 0x3B8FB44
	0x03B8FB3C BL 0x1C16DFC
	0x03B8FB40 LDR X0, [X22]
	0x03B8FB44 LDR X8, [X0 + 0xB8]
	0x03B8FB48 LDR X0, [X8 + 0x8]
	0x03B8FB4C CBZ X0, 0x3B8FBCC
	0x03B8FB50 ADRP X8, 0x5CD000
	0x03B8FB54 LDR X8, [X8 + 0x480]
	0x03B8FB58 LDR X1, [X8]
	0x03B8FB5C BL 0x2EF0FD0
	0x03B8FB60 MOV X21, X0
	0x03B8FB64 STR X0, [X20 + 0x20]
	0x03B8FB68 LDR X0, [X31 + 0x48]
	0x03B8FB6C ADD X8, X31, 0x20
	0x03B8FB70 MOV X1, X31
	0x03B8FB74 BL 0x3B24724
	0x03B8FB78 LDR V0, [X31 + 0x2]
	0x03B8FB7C LDUR V1, [X31 + 0x2C]
	0x03B8FB80 STR V0, [X31]
	0x03B8FB84 STUR V1, [X31 + 0xC]
	0x03B8FB88 CBZ X21, 0x3B8FBCC
	0x03B8FB8C ADRP X8, 0x5CD000
	0x03B8FB90 LDR X8, [X8 + 0x478]
	0x03B8FB94 LDR V0, [X31]
	0x03B8FB98 LDUR V1, [X31 + 0xC]
	0x03B8FB9C ADD X2, X31, 0x20
	0x03B8FBA0 LDR X3, [X8]
	0x03B8FBA4 MOV X0, X21
	0x03B8FBA8 MOV X1, X19
	0x03B8FBAC STR V0, [X31 + 0x2]
	0x03B8FBB0 STUR V1, [X31 + 0x2C]
	0x03B8FBB4 BL 0x2AA815C
	0x03B8FBB8 LDP X20, X19, [X31 + 0x60]
	0x03B8FBBC LDP X22, X21, [X31 + 0x50]
	0x03B8FBC0 LDR X30, [X31 + 0x40]
	0x03B8FBC4 ADD X31, X31, 0x70
	0x03B8FBC8 RET
	0x03B8FBCC BL 0x1C16F20
	0x03B8FBD0 SUB X31, X31, 0x100
	0x03B8FBD4 STP D15, D14, [X31 + 0x90]
	0x03B8FBD8 STP D13, D12, [X31 + 0xA0]
	0x03B8FBDC STP D11, D10, [X31 + 0xB0]
	0x03B8FBE0 STP D9, D8, [X31 + 0xC0]
	0x03B8FBE4 STR X30, [X31 + 0xD0]
	0x03B8FBE8 STP X22, X21, [X31 + 0xE0]
	0x03B8FBEC STP X20, X19, [X31 + 0xF0]
	0x03B8FBF0 ADRP X22, 0x853000
	0x03B8FBF4 ADRP X21, 0x5CB000
	0x03B8FBF8 LDRB W8, [X22 + 0xB84]
	0x03B8FBFC LDR X21, [X21 + 0x600]
	0x03B8FC00 MOV X20, X1
	0x03B8FC04 MOV X19, X0
	0x03B8FC08 TBNZ X8, 0x0, 0x3B8FC2C
	0x03B8FC0C ADRP X0, 0x5CD000
	0x03B8FC10 LDR X0, [X0 + 0x488]
	0x03B8FC14 BL 0x1C16CF4
	0x03B8FC18 ADRP X0, 0x5CB000
	0x03B8FC1C LDR X0, [X0 + 0x600]
	0x03B8FC20 BL 0x1C16CF4
	0x03B8FC24 MOVZ W8, 0x1
	0x03B8FC28 STRB W8, [X22 + 0xB84]
	0x03B8FC2C LDR X0, [X21]
	0x03B8FC30 STR X31, [X31 + 0xD8]
	0x03B8FC34 STP X31, X31, [X31 + 0x30]
	0x03B8FC38 STR W31, [X31 + 0x48]
	0x03B8FC3C STR X31, [X31 + 0x40]
	0x03B8FC40 LDR W8, [X0 + 0xE0]
	0x03B8FC44 CBNZ W8, 0x3B8FC4C
	0x03B8FC48 BL 0x1C16DFC
	0x03B8FC4C ADD X1, X31, 0xD8
	0x03B8FC50 MOV X0, X20
	0x03B8FC54 BL 0x3B8F9B8
	0x03B8FC58 TBZ X0, 0x0, 0x3B8FDAC
	0x03B8FC5C LDR X0, [X19 + 0x20]
	0x03B8FC60 CBZ X0, 0x3B8FDAC
	0x03B8FC64 ADRP X8, 0x5CD000
	0x03B8FC68 LDR X8, [X8 + 0x488]
	0x03B8FC6C ADD X2, X31, 0x30
	0x03B8FC70 MOV X1, X20
	0x03B8FC74 LDR X3, [X8]
	0x03B8FC78 BL 0x2AA9E10
	0x03B8FC7C TBZ X0, 0x0, 0x3B8FDAC
	0x03B8FC80 LDR X20, [X31 + 0xD8]
	0x03B8FC84 CBZ X20, 0x3B8FDD0
	0x03B8FC88 MOV X0, X20
	0x03B8FC8C MOV X1, X31
	0x03B8FC90 BL 0x3C3F58C
	0x03B8FC94 LDP S15, S8, [X31 + 0x30]
	0x03B8FC98 LDR V9, [X31 + 0x38]
	0x03B8FC9C MOV X0, X20
	0x03B8FCA0 MOV X1, X31
	0x03B8FCA4 STP S1, S0, [X31 + 0x8]
	0x03B8FCA8 MOV V10.16B, V2.16B
	0x03B8FCAC BL 0x3C3DEB4
	0x03B8FCB0 MOV V11.16B, V2.16B
	0x03B8FCB4 LDP S2, S4, [X31 + 0x44]
	0x03B8FCB8 MOV V12.16B, V0.16B
	0x03B8FCBC MOV V13.16B, V1.16B
	0x03B8FCC0 LDP S0, S1, [X31 + 0x3C]
	0x03B8FCC4 MOV V14.16B, V3.16B
	0x03B8FCC8 MOV V3.16B, V4.16B
	0x03B8FCCC MOV X0, X31
	0x03B8FCD0 BL 0x3C2A260
	0x03B8FCD4 LDR X19, [X19 + 0x10]
	0x03B8FCD8 CBZ X19, 0x3B8FDAC
	0x03B8FCDC FMUL S5, S12, S0
	0x03B8FCE0 FMUL S19, S13, S0
	0x03B8FCE4 FMUL S23, S11, S0
	0x03B8FCE8 FMUL S24, S14, S0
	0x03B8FCEC LDR V0, [X31 + 0x8]
	0x03B8FCF0 FMUL S6, S13, S1
	0x03B8FCF4 FMUL S16, S12, S1
	0x03B8FCF8 FMUL S25, S14, S1
	0x03B8FCFC FMUL S26, S11, S1
	0x03B8FD00 FSUB S1, S0, S8
	0x03B8FD04 LDR V0, [X31 + 0xC]
	0x03B8FD08 FMUL S4, S14, S3
	0x03B8FD0C FMUL S17, S14, S2
	0x03B8FD10 FMUL S18, S11, S3
	0x03B8FD14 FMUL S20, S13, S3
	0x03B8FD18 FMUL S3, S12, S3
	0x03B8FD1C FMUL S21, S13, S2
	0x03B8FD20 FSUB S4, S4, S5
	0x03B8FD24 FADD S5, S17, S18
	0x03B8FD28 FADD S17, S25, S20
	0x03B8FD2C FADD S3, S24, S3
	0x03B8FD30 FMUL S7, S11, S2
	0x03B8FD34 FMUL S22, S12, S2
	0x03B8FD38 FSUB S4, S4, S6
	0x03B8FD3C FADD S5, S16, S5
	0x03B8FD40 FADD S16, S23, S17
	0x03B8FD44 FADD S3, S21, S3
	0x03B8FD48 FSUB S2, S10, S9
	0x03B8FD4C FSUB S0, S0, S15
	0x03B8FD50 FSUB S6, S4, S7
	0x03B8FD54 FSUB S5, S5, S19
	0x03B8FD58 FSUB S4, S16, S22
	0x03B8FD5C FSUB S3, S3, S26
	0x03B8FD60 ADD X0, X31, 0x10
	0x03B8FD64 MOV X1, X31
	0x03B8FD68 STP X31, X31, [X31 + 0x10]
	0x03B8FD6C STR W31, [X31 + 0x28]
	0x03B8FD70 STR X31, [X31 + 0x20]
	0x03B8FD74 BL 0x3C3DB6C
	0x03B8FD78 LDUR V0, [X31 + 0x1C]
	0x03B8FD7C LDR V1, [X31 + 0x1]
	0x03B8FD80 ADD X1, X31, 0x70
	0x03B8FD84 STUR V0, [X31 + 0x5C]
	0x03B8FD88 STR V1, [X31 + 0x5]
	0x03B8FD8C LDR V0, [X31 + 0x5]
	0x03B8FD90 LDUR V1, [X31 + 0x5C]
	0x03B8FD94 LDR X8, [X19 + 0x18]
	0x03B8FD98 LDR X0, [X19 + 0x40]
	0x03B8FD9C STR V0, [X31 + 0x7]
	0x03B8FDA0 STUR V1, [X31 + 0x7C]
	0x03B8FDA4 LDR X2, [X19 + 0x28]
	0x03B8FDA8 BLR X8
	0x03B8FDAC LDP X20, X19, [X31 + 0xF0]
	0x03B8FDB0 LDP X22, X21, [X31 + 0xE0]
	0x03B8FDB4 LDR X30, [X31 + 0xD0]
	0x03B8FDB8 LDP D9, D8, [X31 + 0xC0]
	0x03B8FDBC LDP D11, D10, [X31 + 0xB0]
	0x03B8FDC0 LDP D13, D12, [X31 + 0xA0]
	0x03B8FDC4 LDP D15, D14, [X31 + 0x90]
	0x03B8FDC8 ADD X31, X31, 0x100
	0x03B8FDCC RET
	0x03B8FDD0 BL 0x1C16F20
	0x03B8FDD4 MOV X1, X31
	0x03B8FDD8 B 0x33BDD8C

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+64], D14
	003 Move [X31+72], D13
	004 Move [X31+80], D12
	005 Move [X31+88], D11
	006 Move [X31+96], D10
	007 Move [X31+104], D9
	008 Move [X31+112], D8
	009 Move [X31+120], X30
	010 Move [X31+128], X28
	011 Move [X31+136], X27
	012 Move [X31+144], X26
	013 Move [X31+152], X25
	014 Move [X31+160], X24
	015 Move [X31+168], X23
	016 Move [X31+176], X22
	017 Move [X31+184], X21
	018 Move [X31+192], X20
	019 Move [X31+200], X19
	020 Move X21, 0x854000
	021 Move W8, [X21+2939]
	022 Move X19, X1
	023 Move V8, V2
	024 Move V9, V1
	025 Move V10, V0
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0x5CD000
	032 Move X0, [X0+1912]
	033 Call 0x1C17CF4
	034 Move X0, 0x5CD000
	035 Move X0, [X0+1920]
	036 Call 0x1C17CF4
	037 Move X0, 0x5CD000
	038 Move X0, [X0+1928]
	039 Call 0x1C17CF4
	040 Move X0, 0x5CC000
	041 Move X0, [X0+2264]
	042 Call 0x1C17CF4
	043 Move X0, 0x5CD000
	044 Move X0, [X0+1944]
	045 Call 0x1C17CF4
	046 Move X0, 0x565000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+2939], W8
	051 Move [X31+32], X31
	052 Move [X31+40], X31
	053 Move [X31+48], X31
	054 Compare X20, 0
	055 JumpIfEqual {221}
	056 Move X10, 0x5CC000
	057 Move X8, [X20]
	058 Move X10, [X10+2264]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 5
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 5
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {221}
	082 Move X8, 0x5CD000
	083 Move X8, [X8+1944]
	084 Move X25, 0x5CD000
	085 Move X26, 0x565000
	086 Move X22, 0x5CD000
	087 Move X1, [X8]
	088 Move X25, [X25+1920]
	089 Move X26, [X26+1432]
	090 Move X22, [X22+1912]
	091 Add X8, X31, 8
	092 Call List`1<Object>.GetEnumerator, X0
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 Move X8, [X31+24]
	095 Move X20, 0x5CE000
	096 Move X20, [X20+976]
	097 Move TEMP, 0x80800000
	098 Not TEMP
	099 Move W9, TEMP
	100 Move W23, W31
	101 Move X24, X31
	102 Move S11, W31
	103 Move X27, 0x854000
	104 Move W28, 1
	105 Move S12, W31
	106 Move S13, W9
	107 Move [X31+2], V0
	108 Move [X31+48], X8
	109 Move S14, W31
	110 Move X1, [X25]
	111 Add X0, X31, 32
	112 Call Enumerator<Object>.MoveNext, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {190}
	117 Move X0, [X26]
	118 Move X21, [X31+48]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X21
	124 Move X1, X31
	125 Move X2, X31
	126 Call Object.op_Equality, X0, X1
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {110}
	131 Compare X21, 0
	132 JumpIfEqual {219}
	133 Move X0, X21
	134 Move X1, X31
	135 Call Component.get_gameObject, X0
	136 Compare X0, 0
	137 JumpIfEqual {220}
	138 Move X1, X31
	139 Call GameObject.get_activeInHierarchy, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {110}
	144 Move X0, X21
	145 Move X1, X31
	146 Call Collider.get_enabled, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {110}
	151 Move X0, X21
	152 Move X1, X31
	153 Call Collider.get_isTrigger, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {169}
	158 Move W8, [X27+3066]
	159 Compare W8, 0
	160 JumpIfNotEqual {164}
	161 Move X0, X20
	162 Call 0x1C17CF4
	163 Move [X27+3066], W28
	164 Move X8, [X20]
	165 Move X8, [X8+184]
	166 Move W8, [X8]
	167 Compare W8, 0
	168 JumpIfEqual {110}
	169 Move X0, X21
	170 Move V0, V10
	171 Move V1, V9
	172 Move V2, V8
	173 Move X1, X31
	174 Call Collider.ClosestPoint, X0, X1
	175 Subtract S3, S10, S0
	176 Subtract S4, S9, S1
	177 Subtract S5, S8, S2
	178 Multiply S3, S3, S3
	179 Multiply S4, S4, S4
	180 Add S3, S3, S4
	181 Multiply S4, S5, S5
	182 Add S3, S4, S3
	183 NotImplemented "Instruction FCMP not yet implemented."
	184 Move W23, 1
	185 Move V11, V2
	186 Move V12, V1
	187 Move V14, V0
	188 Move V13, V3
	189 Move X24, X21
	190 Move X1, [X22]
	191 Add X0, X31, 32
	192 Call Enumerator<Object>.Dispose, X0
	193 Move [X19], S14
	194 Move [X19+8], S12
	195 Move [X19+8], S11
	196 Move [X19+16], S13
	197 And W0, W23, 1
	198 Move [X19+16], X24
	199 Move X20, [X31+192]
	200 Move X19, [X31+200]
	201 Move X22, [X31+176]
	202 Move X21, [X31+184]
	203 Move X24, [X31+160]
	204 Move X23, [X31+168]
	205 Move X26, [X31+144]
	206 Move X25, [X31+152]
	207 Move X28, [X31+128]
	208 Move X27, [X31+136]
	209 Move X30, [X31+120]
	210 Move D9, [X31+104]
	211 Move D8, [X31+112]
	212 Move D11, [X31+88]
	213 Move D10, [X31+96]
	214 Move D13, [X31+72]
	215 Move D12, [X31+80]
	216 Move V14, [X31+64]
	217 Add X31, X31, 208
	218 Return X0
	219 Call 0x1C17F20
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Move X20, X0
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X0, X20
	225 Call 0x3EB2AD0
	226 Move X21, [X0]
	227 Call 0x3EB2AE0
	228 Move X1, [X22]
	229 Add X0, X31, 32
	230 Call Enumerator<Object>.Dispose, X0
	231 Compare X21, 0
	232 JumpIfEqual {193}
	233 Move X0, X21
	234 Call 0x1C17F18
	235 Move X21, X31
	236 Move X20, X0
	237 Move X1, [X22]
	238 Add X0, X31, 32
	239 Call Enumerator<Object>.Dispose, X0
	240 Compare X21, 0
	241 JumpIfNotEqual {244}
	242 Move X0, X20
	243 Call 0x1D2D690
	244 Move X0, X21
	245 Call 0x1C17F18
	246 Call 0x1991590

