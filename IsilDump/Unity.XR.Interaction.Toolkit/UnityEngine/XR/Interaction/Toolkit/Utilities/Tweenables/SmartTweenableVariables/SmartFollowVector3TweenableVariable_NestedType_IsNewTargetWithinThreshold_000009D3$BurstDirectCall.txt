Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.SmartTweenableVariables.SmartFollowVector3TweenableVariable/IsNewTargetWithinThreshold_000009D3$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B93FAC TBNZ X8, 0x0, 0x3B93FD0
	0x03B93FB0 ADRP X0, 0x588000
	0x03B93FB4 LDR X0, [X0 + 0x848]
	0x03B93FB8 BL 0x1C16CF4
	0x03B93FBC ADRP X0, 0x5C9000
	0x03B93FC0 LDR X0, [X0 + 0x698]
	0x03B93FC4 BL 0x1C16CF4
	0x03B93FC8 MOVZ W8, 0x1
	0x03B93FCC STRB W8, [X23 + 0xBD9]
	0x03B93FD0 LDR X0, [X24]
	0x03B93FD4 LDR W8, [X0 + 0xE0]
	0x03B93FD8 CBNZ W8, 0x3B93FE0
	0x03B93FDC BL 0x1C16DFC
	0x03B93FE0 MOV X0, X31
	0x03B93FE4 BL 0x36FA670
	0x03B93FE8 TBZ X0, 0x0, 0x3B9403C
	0x03B93FEC ADRP X8, 0x5C9000
	0x03B93FF0 LDR X8, [X8 + 0x698]
	0x03B93FF4 LDR X0, [X8]
	0x03B93FF8 LDR W8, [X0 + 0xE0]
	0x03B93FFC CBNZ W8, 0x3B94004
	0x03B94000 BL 0x1C16DFC
	0x03B94004 BL 0x3B95A74
	0x03B94008 CBZ X0, 0x3B9403C
	0x03B9400C MOV X4, X0
	0x03B94010 MOV X0, X20
	0x03B94014 MOV X1, X22
	0x03B94018 MOV X2, X21
	0x03B9401C MOV X3, X19
	0x03B94020 LDP X20, X19, [X31 + 0x40]
	0x03B94024 LDP X22, X21, [X31 + 0x30]
	0x03B94028 LDP X24, X23, [X31 + 0x20]
	0x03B9402C LDR X30, [X31 + 0x10]
	0x03B94030 LDR V0, [X31]
	0x03B94034 ADD X31, X31, 0x50
	0x03B94038 BR X4
	0x03B9403C LDR V6, [X31]
	0x03B94040 LDR V1, [X22]
	0x03B94044 LDR V2, [X22 + 0x8]
	0x03B94048 FMOV S5, 0.5
	0x03B9404C FMUL S5, S6, S5
	0x03B94050 LDR V0, [X20]
	0x03B94054 LDR V3, [X21]
	0x03B94058 LDR V4, [X21 + 0x8]
	0x03B9405C FMUL S5, S5, S6
	0x00000000 INVALID
	0x03B94064 FMUL S2, S2, S6
	0x03B94068 LDR V6, [X20 + 0x8]
	0x00000000 INVALID
	0x03B94070 FMUL S4, S5, S4
	0x03B94074 FADD V0.2S, V0.2S, V1.2S
	0x03B94078 FADD S1, S6, S2
	0x03B9407C FADD V0.2S, V0.2S, V3.2S
	0x03B94080 FADD S1, S1, S4
	0x03B94084 STR D0, [X19]
	0x03B94088 STR S1, [X19 + 0x8]
	0x03B9408C LDP X20, X19, [X31 + 0x40]
	0x03B94090 LDP X22, X21, [X31 + 0x30]
	0x03B94094 LDP X24, X23, [X31 + 0x20]
	0x03B94098 LDR X30, [X31 + 0x10]
	0x03B9409C ADD X31, X31, 0x50
	0x03B940A0 RET
	0x03B940A4 STR D12, [X31 - 0x50]!
	0x03B940A8 STP D11, D10, [X31 + 0x10]
	0x03B940AC STP D9, D8, [X31 + 0x20]
	0x03B940B0 STP X30, X21, [X31 + 0x30]
	0x03B940B4 STP X20, X19, [X31 + 0x40]
	0x03B940B8 ADRP X20, 0x84E000
	0x03B940BC ADRP X21, 0x5C8000
	0x03B940C0 LDRB W8, [X20 + 0xBC0]
	0x03B940C4 LDR X21, [X21 + 0x6A0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x850000
	008 Move X23, 0x5CA000
	009 Move W8, [X20+2988]
	010 Move X23, [X23+1488]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x589000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5CA000
	020 Move X0, [X0+1488]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CA000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0x5CA000
	026 Move X0, [X0+1568]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2988], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x588000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5C9000
	053 Move X8, [X8+1568]
	054 Move X21, [X8]
	055 Move X8, 0x5C9000
	056 Move X8, [X8+1560]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B940C8 MOV X19, X0
	0x03B940CC MOV V8.16B, V4.16B
	0x03B940D0 MOV V9.16B, V3.16B
	0x03B940D4 MOV V10.16B, V2.16B
	0x03B940D8 MOV V11.16B, V1.16B
	0x03B940DC MOV V12.16B, V0.16B
	0x03B940E0 TBNZ X8, 0x0, 0x3B940F8
	0x03B940E4 ADRP X0, 0x5C8000
	0x03B940E8 LDR X0, [X0 + 0x6A0]
	0x03B940EC BL 0x1C16CF4
	0x03B940F0 MOVZ W8, 0x1
	0x03B940F4 STRB W8, [X20 + 0xBC0]
	0x03B940F8 LDR X0, [X21]
	0x03B940FC LDR W8, [X0 + 0xE0]
	0x03B94100 CBNZ W8, 0x3B94108
	0x03B94104 BL 0x1C16DFC
	0x03B94108 MOV V1.16B, V11.16B
	0x03B9410C MOV V2.16B, V10.16B
	0x03B94110 MOV V3.16B, V9.16B
	0x03B94114 MOV V4.16B, V8.16B
	0x03B94118 MOV X0, X19
	0x03B9411C LDP X20, X19, [X31 + 0x40]
	0x03B94120 LDP X30, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x84F000
	005 Move X19, 0x5C9000
	006 Move W8, [X20+2989]
	007 Move X19, [X19+1488]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5C9000
	013 Move X0, [X0+1488]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2989], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call IsNewTargetWithinThreshold_000009D3$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B94124 LDP D9, D8, [X31 + 0x20]
	0x03B94128 LDP D11, D10, [X31 + 0x10]
	0x03B9412C MOV V0.16B, V12.16B
	0x03B94130 LDR V12, [X31], #0x50
	0x03B94134 B 0x3B94138
	0x03B94138 STP D13, D12, [X31 - 0x50]!
	0x03B9413C STP D11, D10, [X31 + 0x10]
	0x03B94140 STP D9, D8, [X31 + 0x20]
	0x03B94144 STP X30, X21, [X31 + 0x30]
	0x03B94148 STP X20, X19, [X31 + 0x40]
	0x03B9414C ADRP X20, 0x84E000
	0x03B94150 ADRP X21, 0x587000
	0x03B94154 LDRB W8, [X20 + 0xBDE]
	0x03B94158 LDR X21, [X21 + 0x848]
	0x03B9415C MOV X19, X0
	0x03B94160 MOV V8.16B, V4.16B
	0x03B94164 MOV V10.16B, V3.16B
	0x03B94168 MOV V11.16B, V2.16B
	0x03B9416C MOV V9.16B, V1.16B
	0x03B94170 MOV V12.16B, V0.16B
	0x03B94174 TBNZ X8, 0x0, 0x3B94198
	0x03B94178 ADRP X0, 0x587000
	0x03B9417C LDR X0, [X0 + 0x848]
	0x03B94180 BL 0x1C16CF4
	0x03B94184 ADRP X0, 0x5C8000
	0x03B94188 LDR X0, [X0 + 0x6A0]
	0x03B9418C BL 0x1C16CF4
	0x03B94190 MOVZ W8, 0x1
	0x03B94194 STRB W8, [X20 + 0xBDE]
	0x03B94198 LDR X0, [X21]
	0x03B9419C LDR W8, [X0 + 0xE0]
	0x03B941A0 CBNZ W8, 0x3B941A8
	0x03B941A4 BL 0x1C16DFC
	0x03B941A8 MOV X0, X31
	0x03B941AC BL 0x36FA670
	0x03B941B0 TBZ X0, 0x0, 0x3B94208
	0x03B941B4 ADRP X8, 0x5C8000
	0x03B941B8 LDR X8, [X8 + 0x6A0]
	0x03B941BC LDR X0, [X8]
	0x03B941C0 LDR W8, [X0 + 0xE0]
	0x03B941C4 CBNZ W8, 0x3B941CC
	0x03B941C8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x84F000
	006 Move X19, 0x5C9000
	007 Move X20, 0x588000
	008 Move W8, [X21+2990]
	009 Move X19, [X19+1576]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x588000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C9000
	019 Move X0, [X0+1488]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C9000
	022 Move X0, [X0+1576]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2990], W8
	026 Move X0, [X20]
	027 Move X20, 0x5C9000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1488]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B941CC BL 0x3B95E50

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B941D0 CBZ X0, 0x3B94208

ISIL:
	001 Call IsNewTargetWithinThreshold_000009D3$BurstDirectCall.Constructor
	002 Return 

Method: System.Boolean Invoke(in Unity.Mathematics.float3 currentValue, in Unity.Mathematics.float3 targetValue, System.Single minDistanceAllowed, System.Single maxDistanceAllowed, System.Single timeSinceLastUpdate, System.Single minToMaxDelaySeconds)

Disassembly:
	0x03B9370C BL 0x1C16CF4
	0x03B93710 MOVZ W8, 0x1
	0x03B93714 STRB W8, [X20 + 0xBBA]
	0x03B93718 LDR X1, [X21]
	0x03B9371C MOV X0, X19
	0x03B93720 LDP X20, X19, [X31 + 0x10]
	0x03B93724 LDP X30, X21, [X31], #0x20
	0x03B93728 B 0x270BFE0
	0x03B9372C LDR X0, [X0 + 0x18]
	0x03B93730 RET
	0x03B93734 STR X30, [X31 - 0x20]!
	0x03B93738 STP X20, X19, [X31 + 0x10]
	0x03B9373C MOV X19, X1
	0x03B93740 MOV X1, X31
	0x03B93744 MOV X20, X0
	0x03B93748 BL 0x3C303D4
	0x03B9374C STR X19, [X20 + 0x18]
	0x03B93750 LDP X20, X19, [X31 + 0x10]
	0x03B93754 LDR X30, [X31], #0x20
	0x03B93758 RET
	0x03B9375C STR D8, [X31 - 0x40]!
	0x03B93760 STR X30, [X31 + 0x8]
	0x03B93764 STP X24, X23, [X31 + 0x10]
	0x03B93768 STP X22, X21, [X31 + 0x20]
	0x03B9376C STP X20, X19, [X31 + 0x30]
	0x03B93770 ADRP X23, 0x84F000
	0x03B93774 ADRP X24, 0x5C9000
	0x03B93778 LDRB W8, [X23 + 0xBBB]
	0x03B9377C LDR X24, [X24 + 0x678]
	0x03B93780 MOV X19, X3
	0x03B93784 MOV V8.16B, V0.16B
	0x03B93788 MOV X20, X2
	0x03B9378C MOV X21, X1
	0x03B93790 MOV X22, X0
	0x03B93794 TBNZ X8, 0x0, 0x3B937AC
	0x03B93798 ADRP X0, 0x5C9000
	0x03B9379C LDR X0, [X0 + 0x678]
	0x03B937A0 BL 0x1C16CF4
	0x03B937A4 MOVZ W8, 0x1
	0x03B937A8 STRB W8, [X23 + 0xBBB]
	0x03B937AC LDR X0, [X24]
	0x03B937B0 LDR W8, [X0 + 0xE0]
	0x03B937B4 CBNZ W8, 0x3B937BC
	0x03B937B8 BL 0x1C16DFC
	0x03B937BC MOV X0, X22
	0x03B937C0 MOV X1, X21
	0x03B937C4 MOV X2, X20
	0x03B937C8 MOV X3, X19
	0x03B937CC LDP X20, X19, [X31 + 0x30]
	0x03B937D0 LDP X22, X21, [X31 + 0x20]
	0x03B937D4 LDP X24, X23, [X31 + 0x10]
	0x03B937D8 LDR X30, [X31 + 0x8]
	0x03B937DC MOV V0.16B, V8.16B
	0x03B937E0 LDR V8, [X31], #0x40
	0x03B937E4 B 0x3B937E8
	0x03B937E8 STR D8, [X31 - 0x40]!
	0x03B937EC STR X30, [X31 + 0x8]
	0x03B937F0 STP X24, X23, [X31 + 0x10]
	0x03B937F4 STP X22, X21, [X31 + 0x20]
	0x03B937F8 STP X20, X19, [X31 + 0x30]
	0x03B937FC ADRP X23, 0x84F000
	0x03B93800 ADRP X24, 0x588000
	0x03B93804 LDRB W8, [X23 + 0xBC5]
	0x03B93808 LDR X24, [X24 + 0x848]
	0x03B9380C MOV X19, X3
	0x03B93810 MOV V8.16B, V0.16B
	0x03B93814 MOV X20, X2
	0x03B93818 MOV X21, X1
	0x03B9381C MOV X22, X0
	0x03B93820 TBNZ X8, 0x0, 0x3B93844
	0x03B93824 ADRP X0, 0x588000
	0x03B93828 LDR X0, [X0 + 0x848]
	0x03B9382C BL 0x1C16CF4
	0x03B93830 ADRP X0, 0x5C9000
	0x03B93834 LDR X0, [X0 + 0x678]
	0x03B93838 BL 0x1C16CF4
	0x03B9383C MOVZ W8, 0x1
	0x03B93840 STRB W8, [X23 + 0xBC5]
	0x03B93844 LDR X0, [X24]
	0x03B93848 LDR W8, [X0 + 0xE0]
	0x03B9384C CBNZ W8, 0x3B93854
	0x03B93850 BL 0x1C16DFC
	0x03B93854 MOV X0, X31
	0x03B93858 BL 0x36FA670
	0x03B9385C TBZ X0, 0x0, 0x3B938B0
	0x03B93860 ADRP X8, 0x5C9000
	0x03B93864 LDR X8, [X8 + 0x678]
	0x03B93868 LDR X0, [X8]
	0x03B9386C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x850000
	011 Move X22, 0x589000
	012 Move W8, [X21+2991]
	013 Move X22, [X22+2120]
	014 Move V10, V3
	015 Move V11, V2
	016 Move V8, V1
	017 Move V9, V0
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x589000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CA000
	028 Move X0, [X0+1488]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2991], W8
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call BurstCompiler.get_IsEnabled
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {70}
	043 Move X8, 0x5CA000
	044 Move X8, [X8+1488]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Call IsNewTargetWithinThreshold_000009D3$BurstDirectCall.GetFunctionPointer
	051 Compare X0, 0
	052 JumpIfEqual {70}
	053 Move X2, X0
	054 Move X0, X20
	055 Move X1, X19
	056 Move V0, V9
	057 Move V1, V8
	058 Move X20, [X31+64]
	059 Move X19, [X31+72]
	060 Move X22, [X31+48]
	061 Move X21, [X31+56]
	062 Move X30, [X31+32]
	063 Move D9, [X31+16]
	064 Move D8, [X31+24]
	065 Move V2, V11
	066 Move V3, V10
	067 Move D11, [X31+80]
	068 Move D10, [X31+88]
	069 CallNoReturn X2
	070 NotImplemented "Instruction FDIV not yet implemented."
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move W9, S4
	074 Move W8, 0x7F800000
	075 And W9, W9, 0x7FFFFFFF
	076 Move V0, [X20]
	077 Move V2, [X19]
	078 Move S5, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction FCCMP not yet implemented."
	081 Subtract V1, V3, V1
	082 NotImplemented "Instruction FCSEL not yet implemented."
	083 Move W9, S3
	084 Subtract S0, S2, S0
	085 And W9, W9, 0x7FFFFFFF
	086 Move S2, W31
	087 Multiply S0, S0, S0
	088 NotImplemented "Instruction INVALID not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add S0, S0, S1
	091 Move S1, V1.S[1]
	092 NotImplemented "Instruction FCCMP not yet implemented."
	093 Add S0, S1, S0
	094 NotImplemented "Instruction FCSEL not yet implemented."
	095 Subtract S2, S8, S9
	096 Multiply S1, S2, S1
	097 Add S1, S1, S9
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X30, [X31+32]
	103 Move D9, [X31+16]
	104 Move D8, [X31+24]
	105 Multiply S1, S1, S1
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move D11, [X31+80]
	109 Move D10, [X31+88]
	110 Return X0

