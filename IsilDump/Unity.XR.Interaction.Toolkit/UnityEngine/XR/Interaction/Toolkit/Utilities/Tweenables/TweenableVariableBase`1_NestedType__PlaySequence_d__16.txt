Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.TweenableVariableBase`1/<PlaySequence>d__16

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0296C54C TBNZ X9, 0x0, 0x296C55C
	0x0296C550 MOV X0, X8
	0x0296C554 BL 0x1C5C684
	0x0296C558 MOV X8, X0
	0x0296C55C LDR X8, [X8 + 0xC0]
	0x0296C560 LDR X0, [X8 + 0x40]
	0x0296C564 LDRB W8, [X0 + 0x135]
	0x0296C568 TBNZ X8, 0x0, 0x296C570
	0x0296C56C BL 0x1C5C684
	0x0296C570 LDR W8, [X0 + 0xFC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0296C574 ADD X9, X31, 0x0

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0296C578 ADD W8, W8, 0x10
	0x0296C57C ADD X8, X8, 0xF
	0x0296C580 AND X8, X8, 0x1FFFFFFFF
	0x0296C584 SUB X28, X9, X8
	0x0296C588 ADD X31, X28, 0x0
	0x0296C58C LDR X0, [X26]
	0x0296C590 LDRB W8, [X0 + 0x135]
	0x0296C594 TBNZ X8, 0x0, 0x296C59C
	0x0296C598 BL 0x1C5C684
	0x0296C59C LDR X8, [X0 + 0xC0]
	0x0296C5A0 LDR X0, [X8 + 0x40]
	0x0296C5A4 LDRB W8, [X0 + 0x135]
	0x0296C5A8 TBNZ X8, 0x0, 0x296C5B0
	0x0296C5AC BL 0x1C5C684
	0x0296C5B0 LDR W8, [X0 + 0xFC]
	0x0296C5B4 ADD X9, X31, 0x0
	0x0296C5B8 ADD W8, W8, 0x10
	0x0296C5BC ADD X8, X8, 0xF
	0x0296C5C0 AND X8, X8, 0x1FFFFFFFF
	0x0296C5C4 SUB X27, X9, X8
	0x0296C5C8 ADD X31, X27, 0x0
	0x0296C5CC LDR X0, [X26]
	0x0296C5D0 LDRB W8, [X0 + 0x135]
	0x0296C5D4 TBNZ X8, 0x0, 0x296C5DC
	0x0296C5D8 BL 0x1C5C684
	0x0296C5DC LDR X8, [X0 + 0xC0]
	0x0296C5E0 LDR X0, [X8 + 0x40]
	0x0296C5E4 LDRB W8, [X0 + 0x135]
	0x0296C5E8 TBNZ X8, 0x0, 0x296C5F0
	0x0296C5EC BL 0x1C5C684
	0x0296C5F0 LDR W8, [X0 + 0xFC]
	0x0296C5F4 ADD X9, X31, 0x0
	0x0296C5F8 ADD W8, W8, 0x10
	0x0296C5FC ADD X8, X8, 0xF
	0x0296C600 AND X8, X8, 0x1FFFFFFFF
	0x0296C604 SUB X21, X9, X8
	0x0296C608 ADD X31, X21, 0x0
	0x0296C60C LDR X2, [X19 + 0x40]
	0x0296C610 ADD X8, X31, 0x0
	0x0296C614 ADD X9, X2, 0xF
	0x0296C618 AND X9, X9, 0x1FFFFFFFF
	0x0296C61C SUB X8, X8, X9
	0x0296C620 STR X8, [X19 + 0x38]
	0x0296C624 ADD X31, X8, 0x0
	0x0296C628 ADD X8, X31, 0x0
	0x0296C62C SUB X0, X8, X9
	0x0296C630 ADD X31, X0, 0x0
	0x0296C634 MOV W1, W31
	0x0296C638 STR X0, [X19 + 0x28]
	0x0296C63C BL 0x3EB1B10
	0x0296C640 STP X31, X31, [X29 - 0x70]
	0x0296C644 STP X31, X31, [X29 - 0x80]
	0x0296C648 STP X31, X31, [X29 - 0x90]
	0x0296C64C STUR W31, [X29 - 0x98]
	0x0296C650 LDR X0, [X26]
	0x0296C654 STR X21, [X19 + 0x8]
	0x0296C658 LDRB W8, [X0 + 0x135]
	0x0296C65C TBNZ X8, 0x0, 0x296C664
	0x0296C660 BL 0x1C5C684
	0x0296C664 LDR X8, [X0 + 0xC0]
	0x0296C668 LDR X0, [X19 + 0x48]
	0x0296C66C LDR X8, [X8]
	0x0296C670 LDR X1, [X8 + 0x80]
	0x0296C674 BL 0x1C16D18
	0x0296C678 MOV X8, X0
	0x0296C67C LDR X0, [X26]
	0x0296C680 LDR W22, [X8]
	0x0296C684 STR X20, [X19]
	0x0296C688 LDRB W9, [X0 + 0x135]
	0x0296C68C TBNZ X9, 0x0, 0x296C694
	0x0296C690 BL 0x1C5C684
	0x0296C694 LDR X8, [X0 + 0xC0]
	0x0296C698 LDR X0, [X19 + 0x48]
	0x0296C69C LDR X8, [X8]
	0x0296C6A0 LDR X8, [X8 + 0x80]
	0x0296C6A4 ADD X1, X8, 0x60
	0x0296C6A8 BL 0x1C16D18
	0x0296C6AC LDR X25, [X0]
	0x0296C6B0 CMP W22, 0x7
	0x0296C6B4 B.CC 0x296C8F0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W8, [X0+16]
	009 Move X20, [X0+32]
	010 Move X19, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Compare W8, 0
	013 JumpIfNotEqual {87}
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W8, TEMP
	017 Move [X19+88], W31
	018 Move [X19+16], W8
	019 Move S8, W31
	020 Move V8, [X19+88]
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W8, TEMP
	024 Move X0, X31
	025 Move [X19+16], W8
	026 Call Time.get_deltaTime
	027 Add S8, S8, S0
	028 Move [X19+88], S8
	029 Compare X20, 0
	030 JumpIfEqual {97}
	031 Move X8, [X20]
	032 Move V9, [X19+40]
	033 Move X0, X20
	034 Move X9, [X8+568]
	035 Move X1, [X8+576]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move V7, [X19+88]
	039 Move S17, [X19+40]
	040 Move S0, [X19+44]
	041 Move X8, [X20]
	042 Move S1, [X19+48]
	043 Move S2, [X19+52]
	044 Move S3, [X19+56]
	045 Move S4, [X19+60]
	046 Move S5, [X19+64]
	047 Move S6, [X19+68]
	048 NotImplemented "Instruction FDIV not yet implemented."
	049 Move V7, [X19+72]
	050 Move X9, [X8+520]
	051 Move X2, [X8+528]
	052 Move S16, 1
	053 NotImplemented "Instruction FMIN not yet implemented."
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Move S17, W31
	056 NotImplemented "Instruction FCSEL not yet implemented."
	057 Move W1, 1
	058 Move X0, X20
	059 Move [X31], S16
	060 Move W21, 1
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move [X19+24], X31
	063 Move [X19+16], W21
	064 Move X8, [X20]
	065 Move S0, [X19+44]
	066 Move S1, [X19+48]
	067 Move S2, [X19+52]
	068 Move S3, [X19+56]
	069 Move S4, [X19+60]
	070 Move S5, [X19+64]
	071 Move S6, [X19+68]
	072 Move S7, [X19+72]
	073 Move X9, [X8+520]
	074 Move X2, [X8+528]
	075 Move W8, 0x3F800000
	076 Move X0, X20
	077 Move W1, W31
	078 Move [X31], W8
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, [X19+80]
	081 Compare X8, 0
	082 JumpIfEqual {87}
	083 Move X9, [X8+24]
	084 Move X0, [X8+64]
	085 Move X1, [X8+40]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move W21, W31
	088 Move W0, W21
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Move D9, [X31+16]
	094 Move D8, [X31+24]
	095 Add X31, X31, 64
	096 Return X0
	097 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x0296C6B8 LDR X0, [X26]
	0x0296C6BC LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0296C6C0 TBNZ X8, 0x0, 0x296C6C8
	0x0296C6C4 BL 0x1C5C684
	0x0296C6C8 LDR X8, [X0 + 0xC0]
	0x0296C6CC LDR X0, [X8 + 0x10]
	0x0296C6D0 LDRB W8, [X0 + 0x135]
	0x0296C6D4 TBNZ X8, 0x0, 0x296C6DC
	0x0296C6D8 BL 0x1C5C684
	0x0296C6DC LDR W8, [X0 + 0xE0]
	0x0296C6E0 CBNZ W8, 0x296C6E8
	0x0296C6E4 BL 0x1C16DFC
	0x0296C6E8 LDR X0, [X26]
	0x0296C6EC LDRB W8, [X0 + 0x135]
	0x0296C6F0 TBNZ X8, 0x0, 0x296C6F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1788000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0296C6F4 BL 0x1C5C684
	0x0296C6F8 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

