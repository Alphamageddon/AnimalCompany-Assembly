Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.Primitives.Vector3TweenableVariable

Method: Unity.Jobs.JobHandle ScheduleTweenJob(ref UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<Unity.Mathematics.float3> jobData)

Disassembly:
	0x03B94588 STR X10, [X8]
	0x03B9458C B.LT 0x3B945F4
	0x03B94590 SUB W8, W22, 0x1
	0x03B94594 FMOV S0, 1
	0x03B94598 SCVTF S1, W8
	0x03B9459C MOV W20, W22
	0x03B945A0 MOVZ W21, 0x1
	0x03B945A4 FDIV S8, S0, S1
	0x03B945A8 MOVZ W22, 0xC
	0x03B945AC SCVTF S0, W21
	0x03B945B0 FMUL S0, S8, S0
	0x03B945B4 ADD X0, X31, 0x60
	0x03B945B8 ADD X1, X31, 0x50
	0x03B945BC ADD X2, X31, 0x40
	0x03B945C0 ADD X3, X31, 0x30
	0x03B945C4 ADD X4, X31, 0x20
	0x03B945C8 BL 0x3B93928
	0x03B945CC LDR X8, [X19]
	0x03B945D0 LDR X9, [X31 + 0x20]
	0x03B945D4 LDR W10, [X31 + 0x28]
	0x03B945D8 ADD X21, X21, 0x1
	0x03B945DC CMP X20, X21
	0x03B945E0 ADD X8, X8, X22
	0x03B945E4 ADD X22, X22, 0xC
	0x03B945E8 STR W10, [X8 + 0x8]
	0x03B945EC STR X9, [X8]
	0x03B945F0 B.NE 0x3B945AC
	0x03B945F4 LDP X20, X19, [X31 + 0xE0]
	0x03B945F8 LDP X22, X21, [X31 + 0xD0]
	0x03B945FC LDP X24, X23, [X31 + 0xC0]
	0x03B94600 LDR X30, [X31 + 0xB0]
	0x03B94604 LDP D9, D8, [X31 + 0xA0]
	0x03B94608 LDP D11, D10, [X31 + 0x90]
	0x03B9460C LDP D13, D12, [X31 + 0x80]
	0x03B94610 ADD X31, X31, 0xF0
	0x03B94614 RET
	0x03B94618 LDR V2, [X1]
	0x03B9461C LDR V3, [X1 + 0x8]
	0x03B94620 FMOV S6, 0.5
	0x03B94624 FMUL S6, S0, S6
	0x03B94628 LDR V1, [X0]
	0x03B9462C LDR V4, [X2]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+288], X29
	003 Move [X31+304], X30
	004 Move [X31+312], X21
	005 Move [X31+320], X20
	006 Move [X31+328], X19
	007 Move X21, 0x84F000
	008 Move X20, 0x5C9000
	009 Move W8, [X21+2999]
	010 Move X20, [X20+1632]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5C9000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2999], W8
	021 NotImplemented "Instruction MOVI not yet implemented."
	022 Add X0, X31, 0
	023 Move W2, 96
	024 Move X1, X19
	025 Move [X31+160], V0
	026 Move [X31+168], V0
	027 Move [X31+128], V0
	028 Move [X31+136], V0
	029 Move [X31+96], V0
	030 Move [X31+104], V0
	031 Call 0x3EB2AC0
	032 Add X0, X31, 96
	033 Add X1, X31, 0
	034 Move X2, X31
	035 Call 0x3B9A66C
	036 Move X19, [X20]
	037 Add X0, X31, 192
	038 Add X1, X31, 96
	039 Move W2, 96
	040 Call 0x3EB2AC0
	041 Add X0, X31, 192
	042 Move X1, X31
	043 Move X2, X31
	044 Move X3, X19
	045 Call IJobExtensions.Schedule, X0, X1
	046 Move X20, [X31+320]
	047 Move X19, [X31+328]
	048 Move X30, [X31+304]
	049 Move X21, [X31+312]
	050 Move X29, [X31+288]
	051 Add X31, X31, 336
	052 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B93174 LDR X0, [X20]
	0x03B93178 ADRP X20, 0x5C9000
	0x03B9317C LDR X19, [X19]
	0x03B93180 LDR W8, [X0 + 0xE0]
	0x03B93184 LDR X20, [X20 + 0x5D0]
	0x03B93188 CBNZ W8, 0x3B93190
	0x03B9318C BL 0x1C16DFC
	0x03B93190 MOV X0, X19
	0x03B93194 MOV X1, X31
	0x03B93198 BL 0x36FA754
	0x03B9319C LDR X8, [X20]
	0x03B931A0 MOV X19, X0
	0x03B931A4 LDR W9, [X8 + 0xE0]
	0x03B931A8 CBNZ W9, 0x3B931B8
	0x03B931AC MOV X0, X8
	0x03B931B0 BL 0x1C16DFC
	0x03B931B4 LDR X8, [X20]
	0x03B931B8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x850000
	006 Move X21, 0x5CA000
	007 Move W8, [X20+3000]
	008 Move X21, [X21+1472]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5CA000
	015 Move X0, [X0+1472]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3000], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call TweenableVariableAsyncBase`1<float3>..ctor, X0
	026 Return 

