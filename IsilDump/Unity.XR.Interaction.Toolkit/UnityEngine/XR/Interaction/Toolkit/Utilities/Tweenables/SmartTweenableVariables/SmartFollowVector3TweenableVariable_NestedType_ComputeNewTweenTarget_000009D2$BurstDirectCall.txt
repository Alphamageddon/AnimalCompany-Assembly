Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.SmartTweenableVariables.SmartFollowVector3TweenableVariable/ComputeNewTweenTarget_000009D2$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B93B88 LDR X0, [X27]
	0x03B93B8C LDR W8, [X0 + 0xE0]
	0x03B93B90 CBNZ W8, 0x3B93B98
	0x03B93B94 BL 0x1C16DFC
	0x03B93B98 MOV X0, X25
	0x03B93B9C MOV X1, X24
	0x03B93BA0 MOV X2, X23
	0x03B93BA4 MOV X3, X22
	0x03B93BA8 MOV X4, X21
	0x03B93BAC MOV X5, X20
	0x03B93BB0 MOV X6, X19
	0x03B93BB4 LDP X20, X19, [X31 + 0x40]
	0x03B93BB8 LDP X22, X21, [X31 + 0x30]
	0x03B93BBC LDP X24, X23, [X31 + 0x20]
	0x03B93BC0 LDP X26, X25, [X31 + 0x10]
	0x03B93BC4 LDP X30, X27, [X31], #0x50
	0x03B93BC8 B 0x3B93BCC
	0x03B93BCC STP X30, X27, [X31 - 0x50]!
	0x03B93BD0 STP X26, X25, [X31 + 0x10]
	0x03B93BD4 STP X24, X23, [X31 + 0x20]
	0x03B93BD8 STP X22, X21, [X31 + 0x30]
	0x03B93BDC STP X20, X19, [X31 + 0x40]
	0x03B93BE0 ADRP X26, 0x84F000
	0x03B93BE4 ADRP X27, 0x588000
	0x03B93BE8 LDRB W8, [X26 + 0xBCF]
	0x03B93BEC LDR X27, [X27 + 0x848]
	0x03B93BF0 MOV X19, X6
	0x03B93BF4 MOV X20, X5
	0x03B93BF8 MOV X22, X4
	0x03B93BFC MOV X24, X3
	0x03B93C00 MOV X21, X2
	0x03B93C04 MOV X23, X1
	0x03B93C08 MOV X25, X0
	0x03B93C0C TBNZ X8, 0x0, 0x3B93C30
	0x03B93C10 ADRP X0, 0x588000
	0x03B93C14 LDR X0, [X0 + 0x848]
	0x03B93C18 BL 0x1C16CF4
	0x03B93C1C ADRP X0, 0x5C9000
	0x03B93C20 LDR X0, [X0 + 0x688]
	0x03B93C24 BL 0x1C16CF4
	0x03B93C28 MOVZ W8, 0x1
	0x03B93C2C STRB W8, [X26 + 0xBCF]
	0x03B93C30 LDR X0, [X27]
	0x03B93C34 LDR W8, [X0 + 0xE0]
	0x03B93C38 CBNZ W8, 0x3B93C40
	0x03B93C3C BL 0x1C16DFC
	0x03B93C40 MOV X0, X31
	0x03B93C44 BL 0x36FA670
	0x03B93C48 TBZ X0, 0x0, 0x3B93CA4
	0x03B93C4C ADRP X8, 0x5C9000
	0x03B93C50 LDR X8, [X8 + 0x688]
	0x03B93C54 LDR X0, [X8]
	0x03B93C58 LDR W8, [X0 + 0xE0]
	0x03B93C5C CBNZ W8, 0x3B93C64
	0x03B93C60 BL 0x1C16DFC
	0x03B93C64 BL 0x3B95248
	0x03B93C68 CBZ X0, 0x3B93CA4
	0x03B93C6C MOV X7, X0
	0x03B93C70 MOV X0, X25
	0x03B93C74 MOV X1, X23
	0x03B93C78 MOV X2, X21
	0x03B93C7C MOV X3, X24
	0x03B93C80 MOV X4, X22
	0x03B93C84 MOV X5, X20
	0x03B93C88 MOV X6, X19
	0x03B93C8C LDP X20, X19, [X31 + 0x40]
	0x03B93C90 LDP X22, X21, [X31 + 0x30]
	0x03B93C94 LDP X24, X23, [X31 + 0x20]
	0x03B93C98 LDP X26, X25, [X31 + 0x10]
	0x03B93C9C LDP X30, X27, [X31], #0x50
	0x03B93CA0 BR X7

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x850000
	008 Move X23, 0x5CA000
	009 Move W8, [X20+2983]
	010 Move X23, [X23+1528]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x589000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5CA000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CA000
	023 Move X0, [X0+1536]
	024 Call 0x1C17CF4
	025 Move X0, 0x5CA000
	026 Move X0, [X0+1544]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2983], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x589000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5CA000
	053 Move X8, [X8+1544]
	054 Move X21, [X8]
	055 Move X8, 0x5CA000
	056 Move X8, [X8+1536]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B93CA4 LDR W8, [X25 + 0x8]
	0x03B93CA8 LDR X9, [X25]
	0x03B93CAC STR W8, [X24 + 0x8]
	0x03B93CB0 STR X9, [X24]
	0x03B93CB4 ADRP X9, 0xFFFFFFFFFCF56000
	0x03B93CB8 LDR V0, [X25]
	0x03B93CBC LDR V1, [X25 + 0x8]
	0x03B93CC0 LDR V2, [X23]
	0x03B93CC4 LDR V3, [X23 + 0x8]
	0x03B93CC8 LDR V5, [X9 + 0xFB4]
	0x03B93CCC MOVZ W8, 0xAAAB
	0x03B93CD0 MOVK W8, 0x3F2A0000
	0x03B93CD4 UNIMPLEMENTED
	0x03B93CD8 FSUB V2.2S, V2.2S, V0.2S
	0x03B93CDC FSUB S3, S3, S1
	0x00000000 INVALID
	0x03B93CE4 FMUL S3, S3, S5
	0x03B93CE8 FADD V0.2S, V0.2S, V2.2S
	0x03B93CEC FADD S1, S1, S3
	0x03B93CF0 STR D0, [X22]
	0x03B93CF4 STR S1, [X22 + 0x8]
	0x03B93CF8 LDR V0, [X21]
	0x03B93CFC LDR V1, [X21 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x850000
	005 Move X19, 0x5CA000
	006 Move W8, [X20+2984]
	007 Move X19, [X19+1528]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5CA000
	013 Move X0, [X0+1528]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2984], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call ComputeNewTweenTarget_000009D2$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B93D00 LDR V2, [X23]
	0x03B93D04 LDR V3, [X23 + 0x8]
	0x03B93D08 LDP X24, X23, [X31 + 0x20]
	0x03B93D0C LDP X26, X25, [X31 + 0x10]
	0x03B93D10 FSUB V2.2S, V2.2S, V0.2S
	0x03B93D14 FSUB S3, S3, S1
	0x00000000 INVALID
	0x03B93D1C FMUL S3, S3, S5
	0x03B93D20 FADD V0.2S, V0.2S, V2.2S
	0x03B93D24 FADD S1, S1, S3
	0x03B93D28 STR D0, [X20]
	0x03B93D2C STR S1, [X20 + 0x8]
	0x03B93D30 LDR W8, [X21 + 0x8]
	0x03B93D34 LDR X9, [X21]
	0x03B93D38 LDP X22, X21, [X31 + 0x30]
	0x03B93D3C STR W8, [X19 + 0x8]
	0x03B93D40 STR X9, [X19]
	0x03B93D44 LDP X20, X19, [X31 + 0x40]
	0x03B93D48 LDP X30, X27, [X31], #0x50
	0x03B93D4C RET
	0x03B93D50 STR D8, [X31 - 0x50]!
	0x03B93D54 STP X30, X25, [X31 + 0x10]
	0x03B93D58 STP X24, X23, [X31 + 0x20]
	0x03B93D5C STP X22, X21, [X31 + 0x30]
	0x03B93D60 STP X20, X19, [X31 + 0x40]
	0x03B93D64 ADRP X24, 0x84F000
	0x03B93D68 ADRP X25, 0x5C9000
	0x03B93D6C LDRB W8, [X24 + 0xBBE]
	0x03B93D70 LDR X25, [X25 + 0x690]
	0x03B93D74 MOV X19, X4
	0x03B93D78 MOV X20, X3
	0x03B93D7C MOV X21, X2
	0x03B93D80 MOV X22, X1
	0x03B93D84 MOV V8.16B, V0.16B
	0x03B93D88 MOV W23, W0
	0x03B93D8C TBNZ X8, 0x0, 0x3B93DA4
	0x03B93D90 ADRP X0, 0x5C9000
	0x03B93D94 LDR X0, [X0 + 0x690]
	0x03B93D98 BL 0x1C16CF4
	0x03B93D9C MOVZ W8, 0x1
	0x03B93DA0 STRB W8, [X24 + 0xBBE]
	0x03B93DA4 LDR X0, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x850000
	006 Move X19, 0x5CA000
	007 Move X20, 0x589000
	008 Move W8, [X21+2985]
	009 Move X19, [X19+1552]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x589000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5CA000
	019 Move X0, [X0+1528]
	020 Call 0x1C17CF4
	021 Move X0, 0x5CA000
	022 Move X0, [X0+1552]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2985], W8
	026 Move X0, [X20]
	027 Move X20, 0x5CA000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1528]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B93DA8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B93DAC CBNZ W8, 0x3B93DB4

ISIL:
	001 Call ComputeNewTweenTarget_000009D2$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 currentValue, in Unity.Mathematics.float3 targetValue, System.Single sqrMaxDistanceAllowed, System.Single deltaTime, System.Single lowerSpeed, System.Single upperSpeed, out System.Single newTweenTarget)

Disassembly:
	0x03B93580 LDP X30, X21, [X31], #0x20
	0x03B93584 B 0x270B560
	0x03B93588 SUB X31, X31, 0x150
	0x03B9358C STR X29, [X31 + 0x120]
	0x03B93590 STP X30, X21, [X31 + 0x130]
	0x03B93594 STP X20, X19, [X31 + 0x140]
	0x03B93598 ADRP X21, 0x84F000
	0x03B9359C ADRP X20, 0x5C9000
	0x03B935A0 LDRB W8, [X21 + 0xBB7]
	0x03B935A4 LDR X20, [X20 + 0x660]
	0x03B935A8 MOV X19, X1
	0x03B935AC TBNZ X8, 0x0, 0x3B935C4
	0x03B935B0 ADRP X0, 0x5C9000
	0x03B935B4 LDR X0, [X0 + 0x660]
	0x03B935B8 BL 0x1C16CF4
	0x03B935BC MOVZ W8, 0x1
	0x03B935C0 STRB W8, [X21 + 0xBB7]
	0x03B935C4 MOVI V0.2D, 0x0
	0x03B935C8 ADD X0, X31, 0x0
	0x03B935CC MOVZ W2, 0x60
	0x03B935D0 MOV X1, X19
	0x03B935D4 STP V0, V0, [X31 + 0xA0]
	0x03B935D8 STP V0, V0, [X31 + 0x80]
	0x03B935DC STP V0, V0, [X31 + 0x60]
	0x03B935E0 BL 0x3EB1AC0
	0x03B935E4 ADD X0, X31, 0x60
	0x03B935E8 ADD X1, X31, 0x0
	0x03B935EC MOV X2, X31
	0x03B935F0 BL 0x3B9966C
	0x03B935F4 LDR X19, [X20]
	0x03B935F8 ADD X0, X31, 0xC0
	0x03B935FC ADD X1, X31, 0x60
	0x03B93600 MOVZ W2, 0x60
	0x03B93604 BL 0x3EB1AC0
	0x03B93608 ADD X0, X31, 0xC0
	0x03B9360C MOV X1, X31
	0x03B93610 MOV X2, X31
	0x03B93614 MOV X3, X19
	0x03B93618 BL 0x21EE1B4
	0x03B9361C LDP X20, X19, [X31 + 0x140]
	0x03B93620 LDP X30, X21, [X31 + 0x130]
	0x03B93624 LDR X29, [X31 + 0x120]
	0x03B93628 ADD X31, X31, 0x150
	0x03B9362C RET
	0x03B93630 SUB X31, X31, 0x1A0
	0x03B93634 STP X29, X30, [X31 + 0x170]
	0x03B93638 STP X22, X21, [X31 + 0x180]
	0x03B9363C STP X20, X19, [X31 + 0x190]
	0x03B93640 ADRP X22, 0x84F000
	0x03B93644 ADRP X20, 0x5C9000
	0x03B93648 LDRB W8, [X22 + 0xBB9]
	0x03B9364C LDR X20, [X20 + 0x668]
	0x03B93650 MOV X19, X1
	0x03B93654 ADD X21, X31, 0x80
	0x03B93658 TBNZ X8, 0x0, 0x3B93670
	0x03B9365C ADRP X0, 0x5C9000
	0x03B93660 LDR X0, [X0 + 0x668]
	0x03B93664 BL 0x1C16CF4
	0x03B93668 MOVZ W8, 0x1
	0x03B9366C STRB W8, [X22 + 0xBB9]
	0x03B93670 MOVI V0.2D, 0x0
	0x03B93674 ADD X0, X31, 0x8
	0x03B93678 MOVZ W2, 0x78
	0x03B9367C MOV X1, X19
	0x03B93680 STR X31, [X31 + 0xF0]
	0x03B93684 STP V0, V0, [X21 + 0x50]
	0x03B93688 STP V0, V0, [X21 + 0x30]
	0x03B9368C STP V0, V0, [X21 + 0x10]
	0x03B93690 STR V0, [X31 + 0x8]
	0x03B93694 BL 0x3EB1AC0
	0x03B93698 ADD X0, X31, 0x80
	0x03B9369C ADD X1, X31, 0x8
	0x03B936A0 MOV X2, X31
	0x03B936A4 BL 0x3B99680
	0x03B936A8 LDR X19, [X20]
	0x03B936AC ADD X0, X31, 0xF8
	0x03B936B0 ADD X1, X31, 0x80
	0x03B936B4 MOVZ W2, 0x78
	0x03B936B8 BL 0x3EB1AC0
	0x03B936BC ADD X0, X31, 0xF8
	0x03B936C0 MOV X1, X31
	0x03B936C4 MOV X2, X31
	0x03B936C8 MOV X3, X19
	0x03B936CC BL 0x21EE23C
	0x03B936D0 LDP X20, X19, [X31 + 0x190]
	0x03B936D4 LDP X22, X21, [X31 + 0x180]
	0x03B936D8 LDP X29, X30, [X31 + 0x170]
	0x03B936DC ADD X31, X31, 0x1A0
	0x03B936E0 RET
	0x03B936E4 STP X30, X21, [X31 - 0x20]!
	0x03B936E8 STP X20, X19, [X31 + 0x10]
	0x03B936EC ADRP X20, 0x84F000
	0x03B936F0 ADRP X21, 0x5C9000
	0x03B936F4 LDRB W8, [X20 + 0xBBA]
	0x03B936F8 LDR X21, [X21 + 0x670]
	0x03B936FC MOV X19, X0
	0x03B93700 TBNZ X8, 0x0, 0x3B93718
	0x03B93704 ADRP X0, 0x5C9000
	0x03B93708 LDR X0, [X0 + 0x670]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x850000
	012 Move X23, 0x589000
	013 Move W8, [X22+2986]
	014 Move X23, [X23+2120]
	015 Move X19, X2
	016 Move V10, V3
	017 Move V8, V2
	018 Move V9, V1
	019 Move V11, V0
	020 Move X20, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x589000
	027 Move X0, [X0+2120]
	028 Call 0x1C17CF4
	029 Move X0, 0x5CA000
	030 Move X0, [X0+1528]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2986], W8
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X31
	040 Call BurstCompiler.get_IsEnabled
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {74}
	045 Move X8, 0x5CA000
	046 Move X8, [X8+1528]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call ComputeNewTweenTarget_000009D2$BurstDirectCall.GetFunctionPointer
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X3, X0
	056 Move X0, X21
	057 Move X1, X20
	058 Move V1, V9
	059 Move V2, V8
	060 Move X2, X19
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X30, [X31+32]
	066 Move X23, [X31+40]
	067 Move D9, [X31+16]
	068 Move D8, [X31+24]
	069 Move V0, V11
	070 Move V3, V10
	071 Move D11, [X31+80]
	072 Move D10, [X31+88]
	073 CallNoReturn X3
	074 Move V0, [X21]
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move V2, [X20]
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 Move W8, 0x7F800000
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Subtract S0, S2, S0
	082 Subtract V1, V3, V1
	083 Multiply S0, S0, S0
	084 NotImplemented "Instruction INVALID not yet implemented."
	085 Add S0, S0, S1
	086 Move S1, V1.S[1]
	087 Add S0, S1, S0
	088 NotImplemented "Instruction FDIV not yet implemented."
	089 Move W9, S0
	090 And W9, W9, 0x7FFFFFFF
	091 Move S1, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction FCCMP not yet implemented."
	094 NotImplemented "Instruction FCSEL not yet implemented."
	095 Move W9, S0
	096 And W9, W9, 0x7FFFFFFF
	097 Move S2, W31
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract S3, S1, S0
	100 NotImplemented "Instruction FCCMP not yet implemented."
	101 NotImplemented "Instruction FCSEL not yet implemented."
	102 Multiply S0, S0, S10
	103 Move W9, S0
	104 And W9, W9, 0x7FFFFFFF
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction FCCMP not yet implemented."
	107 NotImplemented "Instruction FCSEL not yet implemented."
	108 Move W9, S0
	109 And W9, W9, 0x7FFFFFFF
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction FCCMP not yet implemented."
	112 NotImplemented "Instruction FCSEL not yet implemented."
	113 Multiply S0, S0, S9
	114 Move [X19], S0
	115 Move X20, [X31+64]
	116 Move X19, [X31+72]
	117 Move X30, [X31+32]
	118 Move X23, [X31+40]
	119 Move D9, [X31+16]
	120 Move D8, [X31+24]
	121 Move D11, [X31+80]
	122 Move D10, [X31+88]
	123 Return 

