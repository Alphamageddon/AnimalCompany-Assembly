Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.TweenableVariableSynchronousBase`1

Method: System.Void ExecuteTween(T startValue, T targetValue, System.Single tweenAmount, System.Boolean useCurve = False)

Disassembly:
	0x0270EAF4 LDP X28, X27, [X31 + 0x30]
	0x0270EAF8 LDP X29, X30, [X31 + 0x20]
	0x0270EAFC LDP D9, D8, [X31 + 0x10]
	0x0270EB00 LDP D11, D10, [X31], #0x80
	0x0270EB04 RET
	0x0270EB08 BL 0x1C16F28
	0x0270EB0C BL 0x1C16F20
	0x0270EB10 BL 0x3EB1B20
	0x0270EB14 STP X30, X23, [X31 - 0x30]!
	0x0270EB18 STP X22, X21, [X31 + 0x10]
	0x0270EB1C STP X20, X19, [X31 + 0x20]
	0x0270EB20 ADRP X23, 0x1CCC000
	0x0270EB24 ADRP X22, 0x1A0F000
	0x0270EB28 ADRP X21, 0x1A0F000
	0x0270EB2C ADRP X20, 0x1A0F000
	0x0270EB30 LDRB W8, [X23 + 0x5E9]
	0x0270EB34 LDR X22, [X22 + 0x950]
	0x0270EB38 LDR X21, [X21 + 0x158]
	0x0270EB3C LDR X20, [X20 + 0x958]
	0x0270EB40 MOV X19, X1
	0x0270EB44 TBNZ X8, 0x0, 0x270EB74
	0x0270EB48 ADRP X0, 0x1A0F000
	0x0270EB4C LDR X0, [X0 + 0x958]
	0x0270EB50 BL 0x1C16CF4
	0x0270EB54 ADRP X0, 0x1A0F000
	0x0270EB58 LDR X0, [X0 + 0x158]
	0x0270EB5C BL 0x1C16CF4
	0x0270EB60 ADRP X0, 0x1A0F000
	0x0270EB64 LDR X0, [X0 + 0x950]
	0x0270EB68 BL 0x1C16CF4
	0x0270EB6C MOVZ W8, 0x1
	0x0270EB70 STRB W8, [X23 + 0x5E9]
	0x0270EB74 LDR X1, [X22]
	0x0270EB78 ADD X0, X19, 0x18
	0x0270EB7C BL 0x23E19F4
	0x0270EB80 LDR X1, [X21]
	0x0270EB84 ADD X0, X19, 0x38
	0x0270EB88 BL 0x23E53EC
	0x0270EB8C LDR X1, [X21]
	0x0270EB90 ADD X0, X19, 0x28
	0x0270EB94 BL 0x23E53EC
	0x0270EB98 LDR X1, [X20]
	0x0270EB9C ADD X0, X19, 0x48
	0x0270EBA0 LDP X20, X19, [X31 + 0x20]
	0x0270EBA4 LDP X22, X21, [X31 + 0x10]
	0x0270EBA8 LDP X30, X23, [X31], #0x30
	0x0270EBAC B 0x23DFC88
	0x0270EBB0 LDR X8, [X1 + 0x20]
	0x0270EBB4 LDR X8, [X8 + 0xC0]
	0x0270EBB8 LDR X1, [X8 + 0x38]
	0x0270EBBC LDR X2, [X1]
	0x0270EBC0 BR X2
	0x0270EBC4 STP X29, X30, [X31 - 0x60]!
	0x0270EBC8 STP X28, X27, [X31 + 0x10]
	0x0270EBCC STP X26, X25, [X31 + 0x20]
	0x0270EBD0 STP X24, X23, [X31 + 0x30]
	0x0270EBD4 STP X22, X21, [X31 + 0x40]
	0x0270EBD8 STP X20, X19, [X31 + 0x50]
	0x0270EBDC SUB X31, X31, 0x2E0
	0x0270EBE0 ADRP X24, 0x1CCC000
	0x0270EBE4 LDRB W9, [X24 + 0x5EA]
	0x0270EBE8 MOV X23, X4
	0x0270EBEC MOV X20, X3
	0x0270EBF0 MOV X22, X2
	0x0270EBF4 MOV X21, X1
	0x0270EBF8 MOV X19, X8
	0x0270EBFC TBNZ X9, 0x0, 0x270EC2C
	0x0270EC00 ADRP X0, 0x1A0F000
	0x0270EC04 LDR X0, [X0 + 0x128]
	0x0270EC08 BL 0x1C16CF4
	0x0270EC0C ADRP X0, 0x1A0F000
	0x0270EC10 LDR X0, [X0 + 0x940]
	0x0270EC14 BL 0x1C16CF4
	0x0270EC18 ADRP X0, 0x1A0F000
	0x0270EC1C LDR X0, [X0 + 0x960]
	0x0270EC20 BL 0x1C16CF4
	0x0270EC24 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, -29503488
	015 Move V15, V0
	016 Move V12, [X31+112]
	017 Move V0, [X8+200]
	018 Move X19, X2
	019 Move V8, V7
	020 Move V9, V6
	021 Move V10, V5
	022 Move V11, V4
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Move X20, X0
	025 Compare X20, 0
	026 JumpIfNotEqual {46}
	027 Call 0x1C17F20
	028 Move X8, [X20]
	029 Move W21, W1
	030 Move X0, X20
	031 Move V0, V15
	032 Move X9, [X8+600]
	033 Move X1, [X8+608]
	034 Move V4, V11
	035 Move V5, V10
	036 Move V6, V9
	037 Move V7, V8
	038 Move V13, V2
	039 Move V14, V1
	040 Move [X31+12], S3
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {53}
	046 Move X8, [X19+32]
	047 Move X0, X20
	048 Move V0, V11
	049 Move V1, V10
	050 Move X8, [X8+192]
	051 Move V2, V9
	052 Move V3, V8
	053 Move TEMP, X21
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {64}
	057 Move X0, [X20+64]
	058 Compare X0, 0
	059 JumpIfEqual {27}
	060 Move V0, V12
	061 Move X1, X31
	062 Call AnimationCurve.Evaluate, X0, V0
	063 Move V12, V0
	064 Move X8, [X20]
	065 Move V3, [X31+12]
	066 Move X0, X20
	067 Move V0, V15
	068 Move X9, [X8+584]
	069 Move X1, [X8+592]
	070 Move V1, V14
	071 Move V2, V13
	072 Move V4, V11
	073 Move V5, V10
	074 Move V6, V9
	075 Move V7, V8
	076 Move [X31], S12
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X19+32]
	079 Move X0, X20
	080 Move X8, [X8+192]
	081 Move X1, [X8+24]
	082 Move X20, [X31+96]
	083 Move X19, [X31+104]
	084 Move X30, [X31+80]
	085 Move X21, [X31+88]
	086 Move D9, [X31+64]
	087 Move D8, [X31+72]
	088 Move D11, [X31+48]
	089 Move D10, [X31+56]
	090 Move D13, [X31+32]
	091 Move D12, [X31+40]
	092 Move D15, [X31+16]
	093 Move D14, [X31+24]
	094 Add X31, X31, 112
	095 Call BindableVariableBase`1<Quaternion>.set_Value, X0, X1
	096 Return 

Method: T Lerp(T from, T to, System.Single t)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsNearlyEqual(T startValue, T targetValue)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x0270EC28 STRB W8, [X24 + 0x5EA]
	0x0270EC2C ADD X0, X31, 0x1C8
	0x0270EC30 MOVZ W2, 0x88
	0x0270EC34 MOV W1, W31

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+48]
	004 Call TweenableVariableBase`1<Quaternion>..ctor, X0
	005 Return 

