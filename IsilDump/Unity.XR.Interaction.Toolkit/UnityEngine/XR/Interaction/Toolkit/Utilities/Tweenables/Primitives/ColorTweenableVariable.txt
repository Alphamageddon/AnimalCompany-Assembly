Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.Primitives.ColorTweenableVariable

Method: UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Primitives.ColorBlendMode get_colorBlendMode()

Disassembly:
	0x03B941D4 MOV X1, X0
	0x03B941D8 MOV V1.16B, V9.16B

ISIL:
	001 Move W0, [X0+184]
	002 Return X0

Method: System.Void set_colorBlendMode(UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Theme.Primitives.ColorBlendMode value)

Disassembly:
	0x03B941DC MOV V2.16B, V11.16B
	0x03B941E0 MOV V3.16B, V10.16B

ISIL:
	001 Move [X0+184], W1
	002 Return 

Method: System.Single get_colorBlendAmount()

Disassembly:
	0x03B941E4 MOV V4.16B, V8.16B
	0x03B941E8 MOV X0, X19

ISIL:
	001 Move V0, [X0+188]
	002 Return V0

Method: System.Void set_colorBlendAmount(System.Single value)

Disassembly:
	0x03B941EC LDP X20, X19, [X31 + 0x40]
	0x03B941F0 LDP X30, X21, [X31 + 0x30]

ISIL:
	001 Move [X0+188], S0
	002 Return 

Method: Unity.Jobs.JobHandle ScheduleTweenJob(ref UnityEngine.XR.Interaction.Toolkit.AffordanceSystem.Jobs.TweenJobData`1<UnityEngine.Color> jobData)

Disassembly:
	0x03B941F4 LDP D9, D8, [X31 + 0x20]
	0x03B941F8 LDP D11, D10, [X31 + 0x10]
	0x03B941FC MOV V0.16B, V12.16B
	0x03B94200 LDP D13, D12, [X31], #0x50
	0x03B94204 BR X1
	0x03B94208 FMOV S13, W31
	0x03B9420C FCMP S10, 0x0
	0x03B94210 FMOV S0, W31
	0x03B94214 B.MI 0x3B9428C
	0x03B94218 MOVZ W8, 0x35800000
	0x03B9421C FABS S0, S10
	0x03B94220 FMOV S1, W8
	0x03B94224 FCMP S0, S1
	0x03B94228 FMUL S11, S12, S11
	0x03B9422C B.PL 0x3B94238
	0x03B94230 FADD S0, S11, S11
	0x03B94234 B 0x3B94288
	0x03B94238 ADRP X20, 0x84D000
	0x03B9423C LDRB W8, [X20 + 0x585]
	0x03B94240 FADD S0, S9, S9
	0x03B94244 FMUL S12, S11, S11
	0x03B94248 FMUL S10, S0, S10
	0x03B9424C CBNZ W8, 0x3B94264
	0x03B94250 ADRP X0, 0x55F000
	0x03B94254 LDR X0, [X0 + 0x5A8]
	0x03B94258 BL 0x1C16CF4
	0x03B9425C MOVZ W8, 0x1
	0x03B94260 STRB W8, [X20 + 0x585]
	0x03B94264 ADRP X8, 0x55F000
	0x03B94268 LDR X8, [X8 + 0x5A8]
	0x03B9426C FADD S10, S12, S10
	0x03B94270 LDR X0, [X8]
	0x03B94274 LDR W8, [X0 + 0xE0]
	0x03B94278 CBNZ W8, 0x3B94280
	0x03B9427C BL 0x1C16DFC
	0x03B94280 FSQRT S0, S10
	0x03B94284 FADD S0, S11, S0
	0x03B94288 FDIV S0, S0, S9
	0x03B9428C FADD S0, S0, S8
	0x03B94290 FMAXNM S0, S0, S13
	0x03B94294 STR S0, [X19]
	0x03B94298 LDP X20, X19, [X31 + 0x40]
	0x03B9429C LDP X30, X21, [X31 + 0x30]
	0x03B942A0 LDP D9, D8, [X31 + 0x20]
	0x03B942A4 LDP D11, D10, [X31 + 0x10]
	0x03B942A8 LDP D13, D12, [X31], #0x50
	0x03B942AC RET
	0x03B942B0 LDR V2, [X0]
	0x03B942B4 LDR V3, [X0 + 0x8]
	0x03B942B8 FMOV S1, 1
	0x03B942BC FSUB S1, S1, S0
	0x03B942C0 LDR V4, [X1]
	0x03B942C4 LDR V5, [X1 + 0x8]
	0x03B942C8 FMUL S7, S1, S1
	0x03B942CC LDR V6, [X2]
	0x00000000 INVALID

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+384], X29
	003 Move [X31+400], X30
	004 Move [X31+408], X23
	005 Move [X31+416], X22
	006 Move [X31+424], X21
	007 Move [X31+432], X20
	008 Move [X31+440], X19
	009 Move X23, 0x84F000
	010 Move X21, 0x5C9000
	011 Move W8, [X23+2992]
	012 Move X21, [X21+1584]
	013 Move X20, X1
	014 Move X19, X0
	015 Add X22, X31, 128
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x5C9000
	021 Move X0, [X0+1584]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+2992], W8
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Add X0, X31, 8
	027 Move W2, 120
	028 Move X1, X20
	029 Move [X22+96], V0
	030 Move [X22+104], V0
	031 Move [X22+64], V0
	032 Move [X22+72], V0
	033 Move [X22+32], V0
	034 Move [X22+40], V0
	035 Move [X22+1], V0
	036 Move [X31+8], V0
	037 Call 0x3EB2AC0
	038 Add X0, X31, 128
	039 Add X1, X31, 8
	040 Move X2, X31
	041 Call 0x3B9A620
	042 Move V0, [X19+188]
	043 Add X0, X31, 128
	044 Move X1, X31
	045 Call 0x3B9A634
	046 Move W1, [X19+184]
	047 Add X0, X31, 128
	048 Move X2, X31
	049 Call 0x3B9A63C
	050 Move X19, [X21]
	051 Add X0, X31, 256
	052 Add X1, X31, 128
	053 Move W2, 128
	054 Call 0x3EB2AC0
	055 Add X0, X31, 256
	056 Move X1, X31
	057 Move X2, X31
	058 Move X3, X19
	059 Call 0x21EF0A4, X0, X1
	060 Move X20, [X31+432]
	061 Move X19, [X31+440]
	062 Move X22, [X31+416]
	063 Move X21, [X31+424]
	064 Move X30, [X31+400]
	065 Move X23, [X31+408]
	066 Move X29, [X31+384]
	067 Add X31, X31, 448
	068 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B942D4 FMUL S3, S7, S3
	0x03B942D8 LDR V7, [X2 + 0x8]
	0x03B942DC FADD S1, S1, S1
	0x03B942E0 FMUL S1, S1, S0
	0x00000000 INVALID
	0x03B942E8 FMUL S1, S1, S5
	0x03B942EC FMUL S0, S0, S0
	0x00000000 INVALID
	0x03B942F4 FMUL S0, S0, S7
	0x03B942F8 FADD V2.2S, V2.2S, V4.2S
	0x03B942FC FADD S1, S3, S1
	0x03B94300 FADD V2.2S, V2.2S, V5.2S
	0x03B94304 FADD S0, S1, S0
	0x03B94308 STR D2, [X3]
	0x03B9430C STR S0, [X3 + 0x8]
	0x03B94310 RET
	0x03B94314 FMOV S1, 1
	0x03B94318 FSUB S1, S1, S0
	0x03B9431C FMOV S6, 3
	0x03B94320 FMUL S16, S1, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x84F000
	006 Move X20, 0x5C9000
	007 Move W8, [X21+2993]
	008 Move X20, [X20+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5C9000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2993], W8
	019 Move W8, 0x3F800000
	020 Move [X19+188], W8
	021 Move X1, [X20]
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call 0x270ADF8, X0
	028 Return 

