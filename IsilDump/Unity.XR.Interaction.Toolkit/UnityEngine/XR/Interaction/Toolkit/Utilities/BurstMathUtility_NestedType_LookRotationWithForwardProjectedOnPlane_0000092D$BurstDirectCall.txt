Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/LookRotationWithForwardProjectedOnPlane_0000092D$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B8B38C LDR X21, [X8]
	0x03B8B390 ADRP X8, 0x5D1000
	0x03B8B394 LDR X8, [X8 + 0x218]
	0x03B8B398 LDR W9, [X0 + 0xE0]
	0x03B8B39C LDR X22, [X8]
	0x03B8B3A0 CBNZ W9, 0x3B8B3A8
	0x03B8B3A4 BL 0x1C16DFC
	0x03B8B3A8 MOV X0, X20
	0x03B8B3AC MOV X1, X21
	0x03B8B3B0 MOV X2, X22
	0x03B8B3B4 MOV X3, X31
	0x03B8B3B8 BL 0x36FAD70
	0x03B8B3BC LDR X8, [X23]
	0x03B8B3C0 LDR X9, [X8 + 0xB8]
	0x03B8B3C4 STR X0, [X9]
	0x03B8B3C8 LDR W9, [X8 + 0xE0]
	0x03B8B3CC CBNZ W9, 0x3B8B3DC
	0x03B8B3D0 MOV X0, X8
	0x03B8B3D4 BL 0x1C16DFC
	0x03B8B3D8 LDR X8, [X23]
	0x03B8B3DC LDR X8, [X8 + 0xB8]
	0x03B8B3E0 LDP X22, X21, [X31 + 0x10]
	0x03B8B3E4 LDR X8, [X8]
	0x03B8B3E8 STR X8, [X19]
	0x03B8B3EC LDP X20, X19, [X31 + 0x20]
	0x03B8B3F0 LDP X30, X23, [X31], #0x30
	0x03B8B3F4 RET
	0x03B8B3F8 STR X30, [X31 - 0x20]!
	0x03B8B3FC STP X20, X19, [X31 + 0x10]
	0x03B8B400 ADRP X20, 0x857000
	0x03B8B404 ADRP X19, 0x5D1000
	0x03B8B408 LDRB W8, [X20 + 0xB47]
	0x03B8B40C LDR X19, [X19 + 0xE0]
	0x03B8B410 TBNZ X8, 0x0, 0x3B8B428
	0x03B8B414 ADRP X0, 0x5D1000
	0x03B8B418 LDR X0, [X0 + 0xE0]
	0x03B8B41C BL 0x1C16CF4
	0x03B8B420 MOVZ W8, 0x1
	0x03B8B424 STRB W8, [X20 + 0xB47]
	0x03B8B428 LDR X0, [X19]
	0x03B8B42C STR X31, [X31 + 0x8]
	0x03B8B430 LDR W8, [X0 + 0xE0]
	0x03B8B434 CBNZ W8, 0x3B8B43C
	0x03B8B438 BL 0x1C16DFC
	0x03B8B43C ADD X0, X31, 0x8
	0x03B8B440 BL 0x3B8B2DC
	0x03B8B444 LDR X0, [X31 + 0x8]
	0x03B8B448 LDP X20, X19, [X31 + 0x10]
	0x03B8B44C LDR X30, [X31], #0x20
	0x03B8B450 RET
	0x03B8B454 STP X30, X21, [X31 - 0x20]!
	0x03B8B458 STP X20, X19, [X31 + 0x10]
	0x03B8B45C ADRP X21, 0x857000
	0x03B8B460 ADRP X19, 0x5D1000
	0x03B8B464 ADRP X20, 0x590000
	0x03B8B468 LDRB W8, [X21 + 0xB48]
	0x03B8B46C LDR X19, [X19 + 0x220]
	0x03B8B470 LDR X20, [X20 + 0x848]
	0x03B8B474 TBNZ X8, 0x0, 0x3B8B4A4
	0x03B8B478 ADRP X0, 0x590000
	0x03B8B47C LDR X0, [X0 + 0x848]
	0x03B8B480 BL 0x1C16CF4
	0x03B8B484 ADRP X0, 0x5D1000
	0x03B8B488 LDR X0, [X0 + 0x220]
	0x03B8B48C BL 0x1C16CF4
	0x03B8B490 ADRP X0, 0x5D1000
	0x03B8B494 LDR X0, [X0 + 0xE0]
	0x03B8B498 BL 0x1C16CF4
	0x03B8B49C MOVZ W8, 0x1
	0x03B8B4A0 STRB W8, [X21 + 0xB48]
	0x03B8B4A4 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x858000
	008 Move X23, 0x5D2000
	009 Move W8, [X20+2866]
	010 Move X23, [X23+192]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x591000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D2000
	020 Move X0, [X0+432]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D2000
	023 Move X0, [X0+192]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D2000
	026 Move X0, [X0+440]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2866], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x591000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5D2000
	053 Move X8, [X8+432]
	054 Move X21, [X8]
	055 Move X8, 0x5D2000
	056 Move X8, [X8+440]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B8B4A8 ADRP X20, 0x5D1000
	0x03B8B4AC LDR X19, [X19]
	0x03B8B4B0 LDR W8, [X0 + 0xE0]
	0x03B8B4B4 LDR X20, [X20 + 0xE0]
	0x03B8B4B8 CBNZ W8, 0x3B8B4C0
	0x03B8B4BC BL 0x1C16DFC
	0x03B8B4C0 MOV X0, X19
	0x03B8B4C4 MOV X1, X31
	0x03B8B4C8 BL 0x36FA754
	0x03B8B4CC LDR X8, [X20]
	0x03B8B4D0 MOV X19, X0
	0x03B8B4D4 LDR W9, [X8 + 0xE0]
	0x03B8B4D8 CBNZ W9, 0x3B8B4E8
	0x03B8B4DC MOV X0, X8
	0x03B8B4E0 BL 0x1C16DFC
	0x03B8B4E4 LDR X8, [X20]
	0x03B8B4E8 LDR X8, [X8 + 0xB8]
	0x03B8B4EC STR X19, [X8 + 0x8]
	0x03B8B4F0 LDP X20, X19, [X31 + 0x10]
	0x03B8B4F4 LDP X30, X21, [X31], #0x20
	0x03B8B4F8 RET
	0x03B8B4FC RET
	0x03B8B500 B 0x3B8B454

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x858000
	005 Move X19, 0x5D2000
	006 Move W8, [X20+2867]
	007 Move X19, [X19+192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5D2000
	013 Move X0, [X0+192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2867], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call LookRotationWithForwardProjectedOnPlane_0000092D$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B8B504 STP X30, X21, [X31 - 0x20]!
	0x03B8B508 STP X20, X19, [X31 + 0x10]
	0x03B8B50C LDR X8, [X2 + 0x8]
	0x03B8B510 STP X1, X2, [X0 + 0x20]
	0x03B8B514 MOV X19, X0
	0x03B8B518 MOV X20, X1
	0x03B8B51C STR X8, [X0 + 0x10]
	0x03B8B520 LDRB W21, [X2 + 0x52]
	0x03B8B524 STR X0, [X0 + 0x40]
	0x03B8B528 MOV X0, X2
	0x03B8B52C BL 0x1C16D84
	0x03B8B530 TBZ X0, 0x0, 0x3B8B548
	0x03B8B534 CMP W21, 0x4
	0x03B8B538 B.NE 0x3B8B564
	0x03B8B53C ADRP X8, 0xFFFFFFFFFE073000
	0x03B8B540 ADD X8, X8, 0x6B4
	0x03B8B544 B 0x3B8B558
	0x03B8B548 CMP W21, 0x3
	0x03B8B54C B.NE 0x3B8B560
	0x03B8B550 ADRP X8, 0xFFFFFFFFFE073000
	0x03B8B554 ADD X8, X8, 0x69C
	0x03B8B558 STR X8, [X19 + 0x18]
	0x03B8B55C B 0x3B8B574
	0x03B8B560 CBZ X20, 0x3B8B58C
	0x03B8B564 LDR X8, [X19 + 0x10]
	0x03B8B568 LDR X9, [X19 + 0x20]
	0x03B8B56C STR X8, [X19 + 0x18]
	0x03B8B570 STR X9, [X19 + 0x40]
	0x03B8B574 ADRP X8, 0xFFFFFFFFFE073000
	0x03B8B578 ADD X8, X8, 0x62C
	0x03B8B57C STR X8, [X19 + 0x38]
	0x03B8B580 LDP X20, X19, [X31 + 0x10]
	0x03B8B584 LDP X30, X21, [X31], #0x20
	0x03B8B588 RET
	0x03B8B58C ADRP X1, 0xFFFFFFFFFCF90000
	0x03B8B590 ADD X1, X1, 0xEE3
	0x03B8B594 MOV X0, X31
	0x03B8B598 BL 0x1C16F3C
	0x03B8B59C MOV X1, X31
	0x03B8B5A0 BL 0x1C16DEC
	0x03B8B5A4 LDR X8, [X0 + 0x40]
	0x03B8B5A8 LDR X5, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x858000
	006 Move X19, 0x5D2000
	007 Move X20, 0x591000
	008 Move W8, [X21+2868]
	009 Move X19, [X19+448]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x591000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D2000
	019 Move X0, [X0+448]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D2000
	022 Move X0, [X0+192]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2868], W8
	026 Move X0, [X20]
	027 Move X20, 0x5D2000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+192]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B8B5AC LDR X4, [X0 + 0x28]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B8B5B0 MOV X0, X8

ISIL:
	001 Call LookRotationWithForwardProjectedOnPlane_0000092D$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in UnityEngine.Vector3 forward, in UnityEngine.Vector3 planeNormal, out UnityEngine.Quaternion lookRotation)

Disassembly:
	0x03B88388 RET
	0x03B8838C SUB X31, X31, 0x50
	0x03B88390 STR X30, [X31 + 0x30]
	0x03B88394 STP X20, X19, [X31 + 0x40]
	0x03B88398 STR W31, [X31 + 0x28]
	0x03B8839C STR X31, [X31 + 0x20]
	0x03B883A0 LDP S0, S1, [X0]
	0x03B883A4 LDR V2, [X0 + 0x8]
	0x03B883A8 MOV X0, X31
	0x03B883AC MOV X19, X2
	0x03B883B0 MOV X20, X1
	0x03B883B4 BL 0x3887BE4
	0x03B883B8 STP S0, S1, [X31 + 0x10]
	0x03B883BC STR S2, [X31 + 0x18]
	0x03B883C0 LDP S0, S1, [X20]
	0x03B883C4 LDR V2, [X20 + 0x8]
	0x03B883C8 MOV X0, X31
	0x03B883CC BL 0x3887BE4
	0x03B883D0 ADD X0, X31, 0x10
	0x03B883D4 ADD X1, X31, 0x0
	0x03B883D8 ADD X2, X31, 0x20
	0x03B883DC STP S0, S1, [X31]
	0x03B883E0 STR S2, [X31 + 0x8]
	0x03B883E4 BL 0x3B86E88
	0x03B883E8 LDP S0, S1, [X31 + 0x20]
	0x03B883EC LDR V2, [X31 + 0x28]
	0x03B883F0 MOV X0, X31
	0x03B883F4 BL 0x3887BE0
	0x03B883F8 STP S0, S1, [X19]
	0x03B883FC STR S2, [X19 + 0x8]
	0x03B88400 LDP X20, X19, [X31 + 0x40]
	0x03B88404 LDR X30, [X31 + 0x30]
	0x03B88408 ADD X31, X31, 0x50
	0x03B8840C RET
	0x03B88410 SUB X31, X31, 0x30
	0x03B88414 STR X30, [X31 + 0x10]
	0x03B88418 STP X20, X19, [X31 + 0x20]
	0x03B8841C MOV X19, X2
	0x03B88420 ADD X2, X31, 0x0
	0x03B88424 MOV X20, X1
	0x03B88428 STR W31, [X31 + 0x8]
	0x03B8842C STR X31, [X31]
	0x03B88430 BL 0x3B86E88
	0x03B88434 LDP S0, S1, [X31]
	0x03B88438 LDR V2, [X31 + 0x8]
	0x03B8843C LDP S3, S4, [X20]
	0x03B88440 LDR V5, [X20 + 0x8]
	0x03B88444 MOV X0, X31
	0x03B88448 BL 0x3B993E8
	0x03B8844C STP S0, S1, [X19]
	0x03B88450 STP S2, S3, [X19 + 0x8]
	0x03B88454 LDP X20, X19, [X31 + 0x20]
	0x03B88458 LDR X30, [X31 + 0x10]
	0x03B8845C ADD X31, X31, 0x30
	0x03B88460 RET
	0x03B88464 SUB X31, X31, 0x50
	0x03B88468 STP X31, X30, [X31 + 0x28]
	0x03B8846C STP X20, X19, [X31 + 0x40]
	0x03B88470 STR X31, [X31 + 0x20]
	0x03B88474 LDP S0, S1, [X0]
	0x03B88478 LDR V2, [X0 + 0x8]
	0x03B8847C MOV X0, X31
	0x03B88480 MOV X19, X2
	0x03B88484 MOV X20, X1
	0x03B88488 BL 0x3887BE4
	0x03B8848C STP S0, S1, [X31 + 0x10]
	0x03B88490 STR S2, [X31 + 0x18]
	0x03B88494 LDP S0, S1, [X20]
	0x03B88498 LDR V2, [X20 + 0x8]
	0x03B8849C MOV X0, X31
	0x03B884A0 BL 0x3887BE4
	0x03B884A4 ADD X0, X31, 0x10

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0x85B000
	009 Move X23, 0x594000
	010 Move W8, [X22+2869]
	011 Move X23, [X23+2120]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x594000
	020 Move X0, [X0+2120]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D5000
	023 Move X0, [X0+192]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2869], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call BurstCompiler.get_IsEnabled
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {60}
	038 Move X8, 0x5D5000
	039 Move X8, [X8+192]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Call LookRotationWithForwardProjectedOnPlane_0000092D$BurstDirectCall.GetFunctionPointer
	046 Compare X0, 0
	047 JumpIfEqual {60}
	048 Move X3, X0
	049 Move X0, X21
	050 Move X1, X20
	051 Move X2, X19
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Add X31, X31, 96
	059 CallNoReturn X3
	060 Move [X31+32], X31
	061 Move [X31+40], X31
	062 Move S0, [X21]
	063 Move S1, [X21+4]
	064 Move V2, [X21+8]
	065 Move X0, X31
	066 Call float3.op_Implicit, X0
	067 Move [X31+16], S0
	068 Move [X31+24], S1
	069 Move [X31+24], S2
	070 Move S0, [X20]
	071 Move S1, [X20+4]
	072 Move V2, [X20+8]
	073 Move X0, X31
	074 Call float3.op_Implicit, X0
	075 Add X0, X31, 16
	076 Add X1, X31, 0
	077 Add X2, X31, 32
	078 Move [X31], S0
	079 Move [X31+8], S1
	080 Move [X31+8], S2
	081 Call BurstMathUtility.LookRotationWithForwardProjectedOnPlane, X0, X1, X2
	082 Move S0, [X31+32]
	083 Move S1, [X31+36]
	084 Move S2, [X31+40]
	085 Move S3, [X31+44]
	086 Move X0, X31
	087 Call quaternion.op_Implicit, X0
	088 Move [X19], S0
	089 Move [X19+8], S1
	090 Move [X19+8], S2
	091 Move [X19+16], S3
	092 Move X20, [X31+80]
	093 Move X19, [X31+88]
	094 Move X22, [X31+64]
	095 Move X21, [X31+72]
	096 Move X30, [X31+48]
	097 Move X23, [X31+56]
	098 Add X31, X31, 96
	099 Return 

