Type: UnityEngine.XR.Interaction.Toolkit.Utilities.SmallRegistrationList`1

Method: System.Boolean get_bufferChanges()

Disassembly:
	0x025E99A8 CMP W8, 0x0
	0x025E99AC CSET W0, EQ

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_bufferChanges(System.Boolean value)

Disassembly:
	0x025E99B0 B 0x25E99B8
	0x025E99B4 MOVZ W0, 0x1
	0x025E99B8 LDR X8, [X24 + 0x28]
	0x025E99BC LDUR X9, [X29 - 0x8]
	0x025E99C0 CMP X8, X9
	0x025E99C4 B.NE 0x25E99E8
	0x025E99C8 ADD X31, X29, 0x0
	0x025E99CC LDP X20, X19, [X31 + 0x40]
	0x025E99D0 LDP X22, X21, [X31 + 0x30]
	0x025E99D4 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move W8, [X0+40]
	002 Compare W8, 0
	003 JumpIfEqual {13}
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move [X0+40], W31
	010 Move X2, [X8+440]
	011 Move X1, [X8+448]
	012 CallNoReturn X2
	013 And W8, W1, 1
	014 Move [X0+40], W8
	015 Return 

Method: System.Boolean IsRegistered(T item)

Disassembly:
	0x025E99D8 LDR X25, [X31 + 0x10]
	0x025E99DC LDP X29, X30, [X31], #0x50
	0x025E99E0 RET
	0x025E99E4 BL 0x1C16F20
	0x025E99E8 BL 0x3EB1B20
	0x025E99EC STP X29, X30, [X31 - 0x60]!
	0x025E99F0 STR X27, [X31 + 0x10]
	0x025E99F4 STP X26, X25, [X31 + 0x20]
	0x025E99F8 STP X24, X23, [X31 + 0x30]
	0x025E99FC STP X22, X21, [X31 + 0x40]
	0x025E9A00 STP X20, X19, [X31 + 0x50]
	0x025E9A04 ADD X29, X31, 0x0
	0x025E9A08 SUB X31, X31, 0x20
	0x025E9A0C MRS X25, 0xC000
	0x025E9A10 LDR X8, [X25 + 0x28]
	0x025E9A14 MOV X23, X2
	0x025E9A18 MOV X21, X1
	0x025E9A1C MOV X20, X0
	0x025E9A20 STUR X8, [X29 - 0x8]
	0x025E9A24 STUR X1, [X29 - 0x20]
	0x025E9A28 LDR X8, [X2 + 0x20]
	0x025E9A2C LDR X8, [X8 + 0xC0]
	0x025E9A30 LDR X9, [X8 + 0x28]
	0x025E9A34 LDR W22, [X9 + 0xFC]
	0x025E9A38 ADD X9, X31, 0x0
	0x025E9A3C ADD X10, X22, 0xF
	0x025E9A40 AND X10, X10, 0x1FFFFFFFF
	0x025E9A44 SUB X19, X9, X10
	0x025E9A48 ADD X31, X19, 0x0
	0x025E9A4C LDR X1, [X8 + 0x58]
	0x025E9A50 LDR X8, [X1]
	0x025E9A54 BLR X8
	0x025E9A58 CBZ X20, 0x25E9D74
	0x025E9A5C LDR X8, [X23 + 0x20]
	0x025E9A60 LDR X8, [X8 + 0xC0]
	0x025E9A64 TBZ X0, 0x0, 0x25E9C08
	0x025E9A68 LDR X1, [X8 + 0x18]
	0x025E9A6C MOV X0, X20
	0x025E9A70 LDR X8, [X1]
	0x025E9A74 BLR X8
	0x025E9A78 CMP W0, 0x0
	0x025E9A7C B.LE 0x25E9AEC
	0x025E9A80 LDR X26, [X23 + 0x20]
	0x025E9A84 LDR X24, [X20 + 0x18]
	0x025E9A88 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {58}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X21, X2
	010 Move X20, X0
	011 Move X8, [X8+192]
	012 Move X1, [X8+24]
	013 Call 0x28BA774, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, [X20+24]
	016 Compare X0, 0
	017 JumpIfEqual {58}
	018 Move X8, [X21+32]
	019 Move X1, X19
	020 Move X8, [X8+192]
	021 Move X2, [X8+48]
	022 Call List`1<Object>.Contains, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {28}
	027 Move W0, 1
	028 Move X0, [X20+16]
	029 Compare X0, 0
	030 JumpIfEqual {58}
	031 Move W8, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X21+32]
	034 Move X1, X19
	035 Move X8, [X8+192]
	036 Move X2, [X8+48]
	037 Call List`1<Object>.Contains, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {52}
	042 Move X8, [X20]
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X3, [X8+392]
	048 Move X2, [X8+400]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 CallNoReturn X3
	052 Move W0, W31
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Boolean IsStillRegistered(T item)

Disassembly:
	0x025E9A8C MOV X2, X22
	0x025E9A90 LDR X8, [X26 + 0xC0]
	0x025E9A94 LDR X8, [X8 + 0x28]
	0x025E9A98 LDR W8, [X8 + 0x28]
	0x025E9A9C CMP W8, 0x0
	0x025E9AA0 SUB X8, X29, 0x20
	0x025E9AA4 CSEL X1, X21, X8, LT
	0x025E9AA8 BL 0x3EB1AC0
	0x025E9AAC CBZ X24, 0x25E9D74
	0x025E9AB0 LDR X8, [X26 + 0xC0]
	0x025E9AB4 LDP X9, X1, [X8 + 0x28]
	0x025E9AB8 MOV X8, X19
	0x025E9ABC LDR W9, [X9 + 0x28]
	0x025E9AC0 LDR X0, [X1]
	0x025E9AC4 TBNZ X9, 0x1F, 0x25E9ACC
	0x025E9AC8 LDR X8, [X19]
	0x025E9ACC STUR X8, [X29 - 0x18]
	0x025E9AD0 LDR X8, [X1 + 0x10]
	0x025E9AD4 SUB X3, X29, 0x18
	0x025E9AD8 SUB X4, X29, 0xC
	0x025E9ADC MOV X2, X24
	0x025E9AE0 BLR X8
	0x025E9AE4 LDURB W8, [X29 - 0xC]
	0x025E9AE8 CBNZ W8, 0x25E9C84
	0x025E9AEC LDR X8, [X23 + 0x20]
	0x025E9AF0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {32}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X20, X2
	010 Move X21, X0
	011 Move X8, [X8+192]
	012 Move X1, [X8+80]
	013 Call 0x28BA78C, X0
	014 Compare W0, 0
	015 JumpIfEqual {25}
	016 Move X0, [X21+32]
	017 Compare X0, 0
	018 JumpIfEqual {32}
	019 Move X8, [X20+32]
	020 Move X1, X19
	021 Move X8, [X8+192]
	022 Move X2, [X8+48]
	023 Call List`1<Object>.Contains, X0, X1
	024 Xor W8, W0, 1
	025 Move W8, 1
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 And W0, W8, 1
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Boolean Register(T item)

Disassembly:
	0x025E9AF4 SUB X26, X29, 0x20
	0x025E9AF8 LDR X8, [X8 + 0xC0]
	0x025E9AFC LDR X1, [X8 + 0x38]
	0x025E9B00 LDR X8, [X1]
	0x025E9B04 BLR X8
	0x025E9B08 LDR X27, [X23 + 0x20]
	0x025E9B0C MOV X24, X0
	0x025E9B10 MOV X0, X19
	0x025E9B14 MOV X2, X22
	0x025E9B18 LDR X8, [X27 + 0xC0]
	0x025E9B1C LDR X8, [X8 + 0x28]
	0x025E9B20 LDR W8, [X8 + 0x28]
	0x025E9B24 CMP W8, 0x0
	0x025E9B28 CSEL X1, X21, X26, LT
	0x025E9B2C BL 0x3EB1AC0
	0x025E9B30 CBZ X24, 0x25E9D74
	0x025E9B34 LDR X8, [X27 + 0xC0]
	0x025E9B38 LDP X9, X1, [X8 + 0x28]
	0x025E9B3C MOV X8, X19
	0x025E9B40 LDR W9, [X9 + 0x28]
	0x025E9B44 LDR X0, [X1]
	0x025E9B48 TBNZ X9, 0x1F, 0x25E9B50
	0x025E9B4C LDR X8, [X19]
	0x025E9B50 STUR X8, [X29 - 0x18]
	0x025E9B54 LDR X8, [X1 + 0x10]
	0x025E9B58 SUB X3, X29, 0x18
	0x025E9B5C SUB X4, X29, 0xC
	0x025E9B60 MOV X2, X24
	0x025E9B64 BLR X8
	0x025E9B68 LDR X8, [X23 + 0x20]
	0x025E9B6C LDURB W24, [X29 - 0xC]
	0x025E9B70 MOV X0, X20
	0x025E9B74 LDR X8, [X8 + 0xC0]
	0x025E9B78 LDR X1, [X8 + 0x50]
	0x025E9B7C LDR X8, [X1]
	0x025E9B80 BLR X8
	0x025E9B84 CMP W0, 0x1
	0x025E9B88 B.LT 0x25E9CE4
	0x025E9B8C LDR X27, [X23 + 0x20]
	0x025E9B90 MOV X0, X19
	0x025E9B94 MOV X2, X22
	0x025E9B98 LDR X8, [X27 + 0xC0]
	0x025E9B9C LDR X8, [X8 + 0x28]
	0x025E9BA0 LDR W8, [X8 + 0x28]
	0x025E9BA4 CMP W8, 0x0
	0x025E9BA8 CSEL X1, X21, X26, LT
	0x025E9BAC BL 0x3EB1AC0
	0x025E9BB0 LDR X8, [X27 + 0xC0]
	0x025E9BB4 LDR X9, [X8 + 0x28]
	0x025E9BB8 LDR X1, [X8 + 0x68]
	0x025E9BBC MOV X8, X19
	0x025E9BC0 LDR W9, [X9 + 0x28]
	0x025E9BC4 LDR X0, [X1]
	0x025E9BC8 TBNZ X9, 0x1F, 0x25E9BD0
	0x025E9BCC LDR X8, [X19]
	0x025E9BD0 STUR X8, [X29 - 0x18]
	0x025E9BD4 LDR X8, [X1 + 0x10]
	0x025E9BD8 CMP W24, 0x0
	0x025E9BDC SUB X3, X29, 0x18
	0x025E9BE0 SUB X4, X29, 0xC
	0x025E9BE4 MOV X2, X20
	0x025E9BE8 CSET W27, EQ
	0x025E9BEC BLR X8
	0x025E9BF0 LDURB W8, [X29 - 0xC]
	0x025E9BF4 CMP W8, 0x0
	0x025E9BF8 CSET W8, NE
	0x025E9BFC CBZ W24, 0x25E9CE8
	0x025E9C00 ORR W0, W27, W8, 0x0
	0x025E9C04 B 0x25E9D44
	0x025E9C08 LDR X1, [X8 + 0x38]
	0x025E9C0C MOV X0, X20
	0x025E9C10 LDR X8, [X1]
	0x025E9C14 BLR X8
	0x025E9C18 LDR X26, [X23 + 0x20]
	0x025E9C1C MOV X24, X0
	0x025E9C20 MOV X0, X19
	0x025E9C24 MOV X2, X22
	0x025E9C28 LDR X8, [X26 + 0xC0]
	0x025E9C2C LDR X8, [X8 + 0x28]
	0x025E9C30 LDR W8, [X8 + 0x28]
	0x025E9C34 CMP W8, 0x0
	0x025E9C38 SUB X8, X29, 0x20
	0x025E9C3C CSEL X1, X21, X8, LT
	0x025E9C40 BL 0x3EB1AC0
	0x025E9C44 CBZ X24, 0x25E9D74
	0x025E9C48 LDR X8, [X26 + 0xC0]
	0x025E9C4C LDP X9, X1, [X8 + 0x28]
	0x025E9C50 MOV X8, X19
	0x025E9C54 LDR W9, [X9 + 0x28]
	0x025E9C58 LDR X0, [X1]
	0x025E9C5C TBNZ X9, 0x1F, 0x25E9C64
	0x025E9C60 LDR X8, [X19]
	0x025E9C64 STUR X8, [X29 - 0x18]
	0x025E9C68 LDR X8, [X1 + 0x10]
	0x025E9C6C SUB X3, X29, 0x18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move W9, [X0+40]
	008 Move X20, X2
	009 Move X21, X0
	010 Move X8, [X8+192]
	011 Move X19, X1
	012 Compare W9, 0
	013 JumpIfEqual {57}
	014 Move X1, [X8+24]
	015 Move X0, X21
	016 Call 0x28BA774, X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, [X21+24]
	019 Compare X0, 0
	020 JumpIfEqual {110}
	021 Move X8, [X20+32]
	022 Move X1, X19
	023 Move X8, [X8+192]
	024 Move X2, [X8+48]
	025 Call List`1<Object>.Contains, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {90}
	030 Move X0, [X21+16]
	031 Compare X0, 0
	032 JumpIfEqual {110}
	033 Move X8, [X20+32]
	034 Move X1, X19
	035 Move X8, [X8+192]
	036 Move X2, [X8+48]
	037 Call List`1<Object>.Contains, X0, X1
	038 Move X8, [X20+32]
	039 Move W22, W0
	040 Move X0, X21
	041 Move X8, [X8+192]
	042 Move X1, [X8+80]
	043 Call 0x28BA78C, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X20+32]
	046 Move X0, X21
	047 Move X1, X19
	048 Move X8, [X8+192]
	049 Move X2, [X8+104]
	050 Call 0x28BAA18, X0, X1
	051 Move TEMP, X22
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {91}
	055 Xor W8, W22, 1
	056 Or W8, W0, W8
	057 Move X0, [X21+16]
	058 Compare X0, 0
	059 JumpIfEqual {110}
	060 Move X2, [X8+48]
	061 Move X1, X19
	062 Call List`1<Object>.Contains, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {90}
	067 Move X0, [X21+16]
	068 Compare X0, 0
	069 JumpIfEqual {110}
	070 Move X8, [X20+32]
	071 Move W10, [X0+28]
	072 Move X9, [X8+192]
	073 Move X8, [X0+16]
	074 Add W10, W10, 1
	075 Move X9, [X9+96]
	076 Move [X0+28], W10
	077 Compare X8, 0
	078 JumpIfEqual {110}
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Move W11, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add W9, W10, 1
	083 Add X8, X8, X10
	084 Move [X0+24], W9
	085 Move [X8+32], X19
	086 Move TEMP, X22
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {91}
	090 Move W8, W31
	091 Move X8, [X20+32]
	092 Move X0, X21
	093 Move X1, X19
	094 Move X8, [X8+192]
	095 Move X2, [X8+112]
	096 Call 0x28BA7A4, X0, X1
	097 Move X8, [X9+32]
	098 Move X1, X19
	099 Move X8, [X8+192]
	100 Move X2, [X8+112]
	101 Call List`1<Object>.AddWithResize, X0, X1
	102 Move W8, 1
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 And W0, W8, 1
	108 Move X30, [X31+48]
	109 Return X0
	110 Call 0x1C17F20

Method: System.Boolean Unregister(T item)

Disassembly:
	0x025E9C70 SUB X4, X29, 0xC
	0x025E9C74 MOV X2, X24
	0x025E9C78 BLR X8
	0x025E9C7C LDURB W8, [X29 - 0xC]
	0x025E9C80 CBZ W8, 0x25E9C8C
	0x025E9C84 MOV W0, W31
	0x025E9C88 B 0x25E9D44
	0x025E9C8C LDR X8, [X23 + 0x20]
	0x025E9C90 MOV X0, X20
	0x025E9C94 LDR X8, [X8 + 0xC0]
	0x025E9C98 LDR X1, [X8 + 0x38]
	0x025E9C9C LDR X8, [X1]
	0x025E9CA0 BLR X8
	0x025E9CA4 LDR X23, [X23 + 0x20]
	0x025E9CA8 MOV X20, X0
	0x025E9CAC MOV X0, X19
	0x025E9CB0 MOV X2, X22
	0x025E9CB4 LDR X8, [X23 + 0xC0]
	0x025E9CB8 LDR X8, [X8 + 0x28]
	0x025E9CBC LDR W8, [X8 + 0x28]
	0x025E9CC0 CMP W8, 0x0
	0x025E9CC4 SUB X8, X29, 0x20
	0x025E9CC8 CSEL X1, X21, X8, LT
	0x025E9CCC BL 0x3EB1AC0
	0x025E9CD0 CBZ X20, 0x25E9D74
	0x025E9CD4 LDR X8, [X23 + 0xC0]
	0x025E9CD8 LDR X9, [X8 + 0x28]
	0x025E9CDC LDR X1, [X8 + 0x60]
	0x025E9CE0 B 0x25E9D18
	0x025E9CE4 CBNZ W24, 0x25E9C84
	0x025E9CE8 LDR X23, [X23 + 0x20]
	0x025E9CEC MOV X0, X19
	0x025E9CF0 MOV X2, X22
	0x025E9CF4 LDR X8, [X23 + 0xC0]
	0x025E9CF8 LDR X8, [X8 + 0x28]
	0x025E9CFC LDR W8, [X8 + 0x28]
	0x025E9D00 CMP W8, 0x0
	0x025E9D04 CSEL X1, X21, X26, LT
	0x025E9D08 BL 0x3EB1AC0
	0x025E9D0C LDR X8, [X23 + 0xC0]
	0x025E9D10 LDR X9, [X8 + 0x28]
	0x025E9D14 LDR X1, [X8 + 0x70]
	0x025E9D18 LDR W8, [X9 + 0x28]
	0x025E9D1C LDR X0, [X1]
	0x025E9D20 TBNZ X8, 0x1F, 0x25E9D28
	0x025E9D24 LDR X19, [X19]
	0x025E9D28 STUR X19, [X29 - 0x18]
	0x025E9D2C LDR X8, [X1 + 0x10]
	0x025E9D30 SUB X3, X29, 0x18
	0x025E9D34 MOV X2, X20
	0x025E9D38 MOV X4, X19
	0x025E9D3C BLR X8
	0x025E9D40 MOVZ W0, 0x1
	0x025E9D44 LDR X8, [X25 + 0x28]
	0x025E9D48 LDUR X9, [X29 - 0x8]
	0x025E9D4C CMP X8, X9
	0x025E9D50 B.NE 0x25E9D78
	0x025E9D54 ADD X31, X29, 0x0
	0x025E9D58 LDP X20, X19, [X31 + 0x50]
	0x025E9D5C LDP X22, X21, [X31 + 0x40]
	0x025E9D60 LDP X24, X23, [X31 + 0x30]
	0x025E9D64 LDP X26, X25, [X31 + 0x20]
	0x025E9D68 LDR X27, [X31 + 0x10]
	0x025E9D6C LDP X29, X30, [X31], #0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move W9, [X0+40]
	007 Move X20, X0
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Compare W9, 0
	011 JumpIfEqual {64}
	012 Move X1, [X8+80]
	013 Move X0, X20
	014 Move X21, X2
	015 Call 0x28BA78C, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, [X20+32]
	018 Compare X0, 0
	019 JumpIfEqual {81}
	020 Move X8, [X21+32]
	021 Move X1, X19
	022 Move X8, [X8+192]
	023 Move X2, [X8+48]
	024 Call List`1<Object>.Contains, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {75}
	029 Move X8, [X21+32]
	030 Move X0, X20
	031 Move X8, [X8+192]
	032 Move X1, [X8+24]
	033 Call 0x28BA774, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X21+32]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X8, [X8+192]
	039 Move X2, [X8+128]
	040 Call 0x28BA88C, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {63}
	045 Move X0, [X20+16]
	046 Compare X0, 0
	047 JumpIfEqual {81}
	048 Move X8, [X21+32]
	049 Move X1, X19
	050 Move X8, [X8+192]
	051 Move X2, [X8+48]
	052 Call List`1<Object>.Contains, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {75}
	057 Move X8, [X21+32]
	058 Move X0, X20
	059 Move X1, X19
	060 Move X8, [X8+192]
	061 Move X2, [X8+136]
	062 Call 0x28BA930, X0, X1
	063 Move W0, 1
	064 Move X0, [X20+16]
	065 Compare X0, 0
	066 JumpIfEqual {81}
	067 Move X2, [X8+120]
	068 Move X1, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call List`1<Object>.Remove, X0, X1
	074 Return X0
	075 Move W0, W31
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Return X0
	081 Call 0x1C17F20

Method: System.Void Flush()

Disassembly:
	0x025E9D70 RET
	0x025E9D74 BL 0x1C16F20
	0x025E9D78 BL 0x3EB1B20
	0x025E9D7C STP X29, X30, [X31 - 0x60]!
	0x025E9D80 STR X27, [X31 + 0x10]
	0x025E9D84 STP X26, X25, [X31 + 0x20]
	0x025E9D88 STP X24, X23, [X31 + 0x30]
	0x025E9D8C STP X22, X21, [X31 + 0x40]
	0x025E9D90 STP X20, X19, [X31 + 0x50]
	0x025E9D94 ADD X29, X31, 0x0
	0x025E9D98 SUB X31, X31, 0x20
	0x025E9D9C MRS X25, 0xC000
	0x025E9DA0 LDR X8, [X25 + 0x28]
	0x025E9DA4 MOV X23, X2
	0x025E9DA8 MOV X21, X1
	0x025E9DAC MOV X20, X0
	0x025E9DB0 STUR X8, [X29 - 0x8]
	0x025E9DB4 STUR X1, [X29 - 0x20]
	0x025E9DB8 LDR X8, [X2 + 0x20]
	0x025E9DBC LDR X8, [X8 + 0xC0]
	0x025E9DC0 LDR X9, [X8 + 0x28]
	0x025E9DC4 LDR W22, [X9 + 0xFC]
	0x025E9DC8 ADD X9, X31, 0x0
	0x025E9DCC ADD X10, X22, 0xF
	0x025E9DD0 AND X10, X10, 0x1FFFFFFFF
	0x025E9DD4 SUB X19, X9, X10
	0x025E9DD8 ADD X31, X19, 0x0
	0x025E9DDC LDR X1, [X8 + 0x58]
	0x025E9DE0 LDR X8, [X1]
	0x025E9DE4 BLR X8
	0x025E9DE8 CBZ X20, 0x25EA0A0
	0x025E9DEC LDR X8, [X23 + 0x20]
	0x025E9DF0 LDR X8, [X8 + 0xC0]
	0x025E9DF4 TBZ X0, 0x0, 0x25E9FE8
	0x025E9DF8 LDR X1, [X8 + 0x50]
	0x025E9DFC MOV X0, X20
	0x025E9E00 LDR X8, [X1]
	0x025E9E04 BLR X8
	0x025E9E08 CMP W0, 0x1
	0x025E9E0C B.LT 0x25E9E7C
	0x025E9E10 LDR X26, [X23 + 0x20]
	0x025E9E14 LDR X24, [X20 + 0x20]
	0x025E9E18 MOV X0, X19
	0x025E9E1C MOV X2, X22
	0x025E9E20 LDR X8, [X26 + 0xC0]
	0x025E9E24 LDR X8, [X8 + 0x28]
	0x025E9E28 LDR W8, [X8 + 0x28]
	0x025E9E2C CMP W8, 0x0
	0x025E9E30 SUB X8, X29, 0x20
	0x025E9E34 CSEL X1, X21, X8, LT
	0x025E9E38 BL 0x3EB1AC0
	0x025E9E3C CBZ X24, 0x25EA0A0
	0x025E9E40 LDR X8, [X26 + 0xC0]
	0x025E9E44 LDP X9, X1, [X8 + 0x28]
	0x025E9E48 MOV X8, X19
	0x025E9E4C LDR W9, [X9 + 0x28]
	0x025E9E50 LDR X0, [X1]
	0x025E9E54 TBNZ X9, 0x1F, 0x25E9E5C
	0x025E9E58 LDR X8, [X19]
	0x025E9E5C STUR X8, [X29 - 0x18]
	0x025E9E60 LDR X8, [X1 + 0x10]
	0x025E9E64 SUB X3, X29, 0x18
	0x025E9E68 SUB X4, X29, 0xC
	0x025E9E6C MOV X2, X24
	0x025E9E70 BLR X8
	0x025E9E74 LDURB W8, [X29 - 0xC]
	0x025E9E78 CBNZ W8, 0x25EA06C
	0x025E9E7C LDR X8, [X23 + 0x20]
	0x025E9E80 MOV X0, X20
	0x025E9E84 LDR X8, [X8 + 0xC0]
	0x025E9E88 LDR X1, [X8 + 0x18]
	0x025E9E8C LDR X8, [X1]
	0x025E9E90 BLR X8
	0x025E9E94 CMP W0, 0x0
	0x025E9E98 B.LE 0x25E9F04
	0x025E9E9C LDR X24, [X23 + 0x20]
	0x025E9EA0 MOV X0, X19
	0x025E9EA4 MOV X2, X22
	0x025E9EA8 LDR X8, [X24 + 0xC0]
	0x025E9EAC LDR X8, [X8 + 0x28]
	0x025E9EB0 LDR W8, [X8 + 0x28]
	0x025E9EB4 CMP W8, 0x0
	0x025E9EB8 SUB X8, X29, 0x20
	0x025E9EBC CSEL X1, X21, X8, LT
	0x025E9EC0 BL 0x3EB1AC0
	0x025E9EC4 LDR X8, [X24 + 0xC0]
	0x025E9EC8 LDR X9, [X8 + 0x28]
	0x025E9ECC LDR X1, [X8 + 0x80]
	0x025E9ED0 MOV X8, X19
	0x025E9ED4 LDR W9, [X9 + 0x28]
	0x025E9ED8 LDR X0, [X1]
	0x025E9EDC TBNZ X9, 0x1F, 0x25E9EE4
	0x025E9EE0 LDR X8, [X19]
	0x025E9EE4 STUR X8, [X29 - 0x18]
	0x025E9EE8 LDR X8, [X1 + 0x10]
	0x025E9EEC SUB X3, X29, 0x18
	0x025E9EF0 SUB X4, X29, 0xC
	0x025E9EF4 MOV X2, X20
	0x025E9EF8 BLR X8
	0x025E9EFC LDURB W8, [X29 - 0xC]
	0x025E9F00 CBNZ W8, 0x25E9FE0
	0x025E9F04 LDR X8, [X23 + 0x20]
	0x025E9F08 MOV X0, X20
	0x025E9F0C SUB X26, X29, 0x20
	0x025E9F10 LDR X8, [X8 + 0xC0]
	0x025E9F14 LDR X1, [X8 + 0x38]
	0x025E9F18 LDR X8, [X1]
	0x025E9F1C BLR X8
	0x025E9F20 LDR X27, [X23 + 0x20]
	0x025E9F24 MOV X24, X0
	0x025E9F28 MOV X0, X19
	0x025E9F2C MOV X2, X22
	0x025E9F30 LDR X8, [X27 + 0xC0]
	0x025E9F34 LDR X8, [X8 + 0x28]
	0x025E9F38 LDR W8, [X8 + 0x28]
	0x025E9F3C CMP W8, 0x0
	0x025E9F40 CSEL X1, X21, X26, LT
	0x025E9F44 BL 0x3EB1AC0
	0x025E9F48 CBZ X24, 0x25EA0A0
	0x025E9F4C LDR X8, [X27 + 0xC0]
	0x025E9F50 LDP X9, X1, [X8 + 0x28]
	0x025E9F54 MOV X8, X19
	0x025E9F58 LDR W9, [X9 + 0x28]
	0x025E9F5C LDR X0, [X1]
	0x025E9F60 TBNZ X9, 0x1F, 0x25E9F68
	0x025E9F64 LDR X8, [X19]
	0x025E9F68 STUR X8, [X29 - 0x18]
	0x025E9F6C LDR X8, [X1 + 0x10]
	0x025E9F70 SUB X3, X29, 0x18
	0x025E9F74 SUB X4, X29, 0xC
	0x025E9F78 MOV X2, X24
	0x025E9F7C BLR X8
	0x025E9F80 LDURB W8, [X29 - 0xC]
	0x025E9F84 CBZ W8, 0x25EA06C
	0x025E9F88 LDR X23, [X23 + 0x20]
	0x025E9F8C MOV X0, X19
	0x025E9F90 MOV X2, X22
	0x025E9F94 LDR X8, [X23 + 0xC0]
	0x025E9F98 LDR X8, [X8 + 0x28]
	0x025E9F9C LDR W8, [X8 + 0x28]
	0x025E9FA0 CMP W8, 0x0
	0x025E9FA4 CSEL X1, X21, X26, LT
	0x025E9FA8 BL 0x3EB1AC0
	0x025E9FAC LDR X8, [X23 + 0xC0]
	0x025E9FB0 LDR X9, [X8 + 0x28]
	0x025E9FB4 LDR X1, [X8 + 0x88]
	0x025E9FB8 LDR W8, [X9 + 0x28]
	0x025E9FBC LDR X0, [X1]
	0x025E9FC0 TBNZ X8, 0x1F, 0x25E9FC8
	0x025E9FC4 LDR X19, [X19]
	0x025E9FC8 STUR X19, [X29 - 0x18]
	0x025E9FCC LDR X8, [X1 + 0x10]
	0x025E9FD0 SUB X3, X29, 0x18
	0x025E9FD4 MOV X2, X20
	0x025E9FD8 MOV X4, X19
	0x025E9FDC BLR X8
	0x025E9FE0 MOVZ W0, 0x1
	0x025E9FE4 B 0x25EA070
	0x025E9FE8 LDR X1, [X8 + 0x38]
	0x025E9FEC MOV X0, X20
	0x025E9FF0 LDR X8, [X1]
	0x025E9FF4 BLR X8
	0x025E9FF8 LDR X23, [X23 + 0x20]
	0x025E9FFC MOV X20, X0
	0x025EA000 MOV X0, X19
	0x025EA004 MOV X2, X22
	0x025EA008 LDR X8, [X23 + 0xC0]
	0x025EA00C LDR X8, [X8 + 0x28]
	0x025EA010 LDR W8, [X8 + 0x28]
	0x025EA014 CMP W8, 0x0
	0x025EA018 SUB X8, X29, 0x20
	0x025EA01C CSEL X1, X21, X8, LT
	0x025EA020 BL 0x3EB1AC0
	0x025EA024 CBZ X20, 0x25EA0A0
	0x025EA028 LDR X8, [X23 + 0xC0]
	0x025EA02C LDR X9, [X8 + 0x28]
	0x025EA030 LDR X1, [X8 + 0x78]
	0x025EA034 LDR W8, [X9 + 0x28]
	0x025EA038 LDR X0, [X1]
	0x025EA03C TBNZ X8, 0x1F, 0x25EA044
	0x025EA040 LDR X19, [X19]
	0x025EA044 STUR X19, [X29 - 0x18]
	0x025EA048 LDR X8, [X1 + 0x10]
	0x025EA04C SUB X3, X29, 0x18
	0x025EA050 SUB X4, X29, 0xC
	0x025EA054 MOV X2, X20
	0x025EA058 BLR X8
	0x025EA05C LDURB W8, [X29 - 0xC]
	0x025EA060 CMP W8, 0x0
	0x025EA064 CSET W0, NE
	0x025EA068 B 0x25EA070

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move [X31+32], X31
	008 Move [X31+40], X31
	009 Move [X31+48], X31
	010 Compare X0, 0
	011 JumpIfEqual {157}
	012 Move X8, [X1+32]
	013 Move X19, X1
	014 Move X20, X0
	015 Move X8, [X8+192]
	016 Move X1, [X8+80]
	017 Call 0x28BA78C, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X20+32]
	020 Compare X0, 0
	021 JumpIfEqual {157}
	022 Move X8, [X19+32]
	023 Move X8, [X8+192]
	024 Move X1, [X8+144]
	025 Add X8, X31, 8
	026 Call List`1<Object>.GetEnumerator, X0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move X8, [X31+24]
	029 Move [X31+2], V0
	030 Move [X31+48], X8
	031 Move X8, [X19+32]
	032 Move X8, [X8+192]
	033 Move X1, [X8+176]
	034 Add X0, X31, 32
	035 Call Enumerator<Object>.MoveNext, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {48}
	040 Move X0, [X20+16]
	041 Compare X0, 0
	042 JumpIfEqual {153}
	043 Move X8, [X19+32]
	044 Move X1, [X31+48]
	045 Move X8, [X8+192]
	046 Move X2, [X8+120]
	047 Call List`1<Object>.Remove, X0, X1
	048 Move X22, X31
	049 Move W21, 5
	050 Move X8, [X19+32]
	051 Add X0, X31, 32
	052 Move X8, [X8+192]
	053 Move X1, [X8+184]
	054 Call Enumerator<Object>.Dispose, X0
	055 Compare X22, 0
	056 JumpIfNotEqual {158}
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Compare W21, 0
	059 JumpIfNotEqual {146}
	060 Move X8, [X19+32]
	061 Move X0, X20
	062 Move X8, [X8+192]
	063 Move X1, [X8+192]
	064 Call 0x28BAA34, X0
	065 Move X8, [X19+32]
	066 Move X0, X20
	067 Move X8, [X8+192]
	068 Move X1, [X8+24]
	069 Call 0x28BA774, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, [X20+24]
	072 Compare X0, 0
	073 JumpIfEqual {157}
	074 Move X8, [X19+32]
	075 Move X8, [X8+192]
	076 Move X1, [X8+144]
	077 Add X8, X31, 8
	078 Call List`1<Object>.GetEnumerator, X0
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X8, [X31+24]
	081 Move [X31+2], V0
	082 Move [X31+48], X8
	083 Move X8, [X19+32]
	084 Move X8, [X8+192]
	085 Move X1, [X8+176]
	086 Add X0, X31, 32
	087 Call Enumerator<Object>.MoveNext, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {129}
	092 Move X0, [X20+16]
	093 Compare X0, 0
	094 JumpIfEqual {154}
	095 Move X8, [X19+32]
	096 Move X21, [X31+48]
	097 Move X8, [X8+192]
	098 Move X2, [X8+48]
	099 Move X1, X21
	100 Call List`1<Object>.Contains, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {83}
	105 Move X0, [X20+16]
	106 Compare X0, 0
	107 JumpIfEqual {155}
	108 Move X8, [X19+32]
	109 Move W10, [X0+28]
	110 Move X9, [X8+192]
	111 Move X8, [X0+16]
	112 Add W10, W10, 1
	113 Move X9, [X9+96]
	114 Move [X0+28], W10
	115 Compare X8, 0
	116 JumpIfEqual {156}
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Move W11, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add W9, W10, 1
	121 Add X8, X8, X10
	122 Move [X0+24], W9
	123 Move [X8+32], X21
	124 Move X8, [X9+32]
	125 Move X8, [X8+192]
	126 Move X2, [X8+112]
	127 Move X1, X21
	128 Call List`1<Object>.AddWithResize, X0, X1
	129 Move X22, X31
	130 Move W21, 9
	131 Move X8, [X19+32]
	132 Add X0, X31, 32
	133 Move X8, [X8+192]
	134 Move X1, [X8+184]
	135 Call Enumerator<Object>.Dispose, X0
	136 Compare X22, 0
	137 JumpIfNotEqual {158}
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Compare W21, 0
	140 JumpIfNotEqual {146}
	141 Move X8, [X19+32]
	142 Move X0, X20
	143 Move X8, [X8+192]
	144 Move X1, [X8+200]
	145 Call 0x28BA8A8, X0
	146 Move X20, [X31+96]
	147 Move X19, [X31+104]
	148 Move X22, [X31+80]
	149 Move X21, [X31+88]
	150 Move X30, [X31+64]
	151 Add X31, X31, 112
	152 Return 
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Call 0x1C17F20
	156 Call 0x1C17F20
	157 Call 0x1C17F20
	158 Move X0, X22
	159 Call 0x1C17F18
	160 Move X21, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X21
	163 Call 0x3EB2AD0
	164 Move X22, [X0]
	165 Call 0x3EB2AE0
	166 Move W21, W31
	167 Move X22, X31
	168 Move X21, X0
	169 Move X8, [X19+32]
	170 Move X8, [X8+192]
	171 Move X1, [X8+184]
	172 Add X0, X31, 32
	173 Call Enumerator<Object>.Dispose, X0
	174 Compare X22, 0
	175 JumpIfEqual {194}
	176 Move X0, X22
	177 Call 0x1C17F18
	178 Move X21, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X21
	181 Call 0x3EB2AD0
	182 Move X22, [X0]
	183 Call 0x3EB2AE0
	184 Move W21, W31
	185 Move X22, X31
	186 Move X21, X0
	187 Move X8, [X19+32]
	188 Move X8, [X8+192]
	189 Move X1, [X8+184]
	190 Add X0, X31, 32
	191 Call Enumerator<Object>.Dispose, X0
	192 Compare X22, 0
	193 JumpIfNotEqual {196}
	194 Move X0, X21
	195 Call 0x1D2D690
	196 Move X0, X22
	197 Call 0x1C17F18
	198 Call 0x1991590

Method: System.Void GetRegisteredItems(System.Collections.Generic.List`1<T> results)

Disassembly:
	0x025EA06C MOV W0, W31
	0x025EA070 LDR X8, [X25 + 0x28]
	0x025EA074 LDUR X9, [X29 - 0x8]
	0x025EA078 CMP X8, X9
	0x025EA07C B.NE 0x25EA0A4
	0x025EA080 ADD X31, X29, 0x0
	0x025EA084 LDP X20, X19, [X31 + 0x50]
	0x025EA088 LDP X22, X21, [X31 + 0x40]
	0x025EA08C LDP X24, X23, [X31 + 0x30]
	0x025EA090 LDP X26, X25, [X31 + 0x20]
	0x025EA094 LDR X27, [X31 + 0x10]
	0x025EA098 LDP X29, X30, [X31], #0x60
	0x025EA09C RET
	0x025EA0A0 BL 0x1C16F20
	0x025EA0A4 BL 0x3EB1B20
	0x025EA0A8 STP X29, X30, [X31 - 0x60]!
	0x025EA0AC STP X28, X27, [X31 + 0x10]
	0x025EA0B0 STP X26, X25, [X31 + 0x20]
	0x025EA0B4 STP X24, X23, [X31 + 0x30]
	0x025EA0B8 STP X22, X21, [X31 + 0x40]
	0x025EA0BC STP X20, X19, [X31 + 0x50]
	0x025EA0C0 ADD X29, X31, 0x0
	0x025EA0C4 SUB X31, X31, 0x40
	0x025EA0C8 MRS X8, 0xC000
	0x025EA0CC STUR X8, [X29 - 0x28]
	0x025EA0D0 LDR X8, [X8 + 0x28]
	0x025EA0D4 MOV X19, X1
	0x025EA0D8 MOV X20, X0
	0x025EA0DC STUR X8, [X29 - 0x8]
	0x025EA0E0 LDR X8, [X19 + 0x20]!
	0x025EA0E4 LDR X9, [X8 + 0xC0]
	0x025EA0E8 LDR X8, [X9 + 0x98]
	0x025EA0EC LDR X10, [X9 + 0x28]
	0x025EA0F0 ADD X9, X8, 0x135
	0x025EA0F4 LDR W27, [X8 + 0xFC]
	0x025EA0F8 LDRH W9, [X9]
	0x025EA0FC LDR W23, [X10 + 0xFC]
	0x025EA100 TBNZ X9, 0x0, 0x25EA128
	0x025EA104 MOV X0, X8
	0x025EA108 BL 0x1C5C684
	0x025EA10C LDR X8, [X19]
	0x025EA110 LDR W10, [X0 + 0xFC]
	0x025EA114 LDR X8, [X8 + 0xC0]
	0x025EA118 LDR X8, [X8 + 0x98]
	0x025EA11C ADD X9, X8, 0x135
	0x025EA120 LDRH W9, [X9]
	0x025EA124 B 0x25EA12C
	0x025EA128 MOV W10, W27
	0x025EA12C ADD W10, W10, 0x10
	0x025EA130 ADD X10, X10, 0xF
	0x025EA134 ADD X11, X31, 0x0
	0x025EA138 AND X10, X10, 0x1FFFFFFFF
	0x025EA13C SUB X10, X11, X10
	0x025EA140 STUR X10, [X29 - 0x30]
	0x025EA144 ADD X31, X10, 0x0
	0x025EA148 TBNZ X9, 0x0, 0x25EA158
	0x025EA14C MOV X0, X8
	0x025EA150 BL 0x1C5C684
	0x025EA154 MOV X8, X0
	0x025EA158 LDR W8, [X8 + 0xFC]
	0x025EA15C ADD X9, X31, 0x0
	0x025EA160 ADD W8, W8, 0x10
	0x025EA164 ADD X8, X8, 0xF
	0x025EA168 AND X8, X8, 0x1FFFFFFFF
	0x025EA16C SUB X8, X9, X8
	0x025EA170 STUR X8, [X29 - 0x38]
	0x025EA174 ADD X31, X8, 0x0
	0x025EA178 ADD X9, X23, 0xF
	0x025EA17C ADD X8, X31, 0x0
	0x025EA180 AND X26, X9, 0x1FFFFFFFF
	0x025EA184 SUB X24, X8, X26
	0x025EA188 ADD X31, X24, 0x0
	0x025EA18C ADD X8, X31, 0x0
	0x025EA190 SUB X25, X8, X26
	0x025EA194 ADD X31, X25, 0x0
	0x025EA198 ADD X9, X27, 0xF
	0x025EA19C ADD X8, X31, 0x0
	0x025EA1A0 AND X9, X9, 0x1FFFFFFFF
	0x025EA1A4 SUB X22, X8, X9
	0x025EA1A8 ADD X31, X22, 0x0
	0x025EA1AC ADD X8, X31, 0x0
	0x025EA1B0 SUB X21, X8, X9
	0x025EA1B4 ADD X31, X21, 0x0
	0x025EA1B8 MOV X0, X21
	0x025EA1BC MOV W1, W31
	0x025EA1C0 MOV X2, X27
	0x025EA1C4 STUR X27, [X29 - 0x20]
	0x025EA1C8 BL 0x3EB1B10
	0x025EA1CC ADD X8, X31, 0x0
	0x025EA1D0 SUB X28, X8, X26
	0x025EA1D4 ADD X31, X28, 0x0
	0x025EA1D8 MOV X0, X28
	0x025EA1DC MOV W1, W31
	0x025EA1E0 MOV X2, X23
	0x025EA1E4 BL 0x3EB1B10
	0x025EA1E8 ADD X8, X31, 0x0
	0x025EA1EC SUB X26, X8, X26
	0x025EA1F0 ADD X31, X26, 0x0
	0x025EA1F4 MOV X0, X26
	0x025EA1F8 MOV W1, W31
	0x025EA1FC MOV X2, X23
	0x025EA200 BL 0x3EB1B10
	0x025EA204 CBZ X20, 0x25EA5C8
	0x025EA208 LDR X8, [X19]
	0x025EA20C MOV X0, X20
	0x025EA210 LDR X8, [X8 + 0xC0]
	0x025EA214 LDR X1, [X8 + 0x50]
	0x025EA218 LDR X8, [X1]
	0x025EA21C BLR X8
	0x025EA220 CMP W0, 0x1
	0x025EA224 B.LT 0x25EA390
	0x025EA228 LDR X2, [X20 + 0x20]
	0x025EA22C CBZ X2, 0x25EA5C8
	0x025EA230 LDR X8, [X19]
	0x025EA234 SUB X3, X29, 0x18
	0x025EA238 MOV X4, X22
	0x025EA23C LDR X8, [X8 + 0xC0]
	0x025EA240 LDR X1, [X8 + 0x90]
	0x025EA244 LDR X0, [X1]
	0x025EA248 STUR X22, [X29 - 0x18]
	0x025EA24C LDR X8, [X1 + 0x10]
	0x025EA250 BLR X8
	0x025EA254 LDUR X2, [X29 - 0x20]
	0x025EA258 MOV X0, X21
	0x025EA25C MOV X1, X22
	0x025EA260 BL 0x3EB1AC0
	0x025EA264 LDR X8, [X19]
	0x025EA268 LDR X8, [X8 + 0xC0]
	0x025EA26C LDR X1, [X8 + 0xB0]
	0x025EA270 LDR X8, [X1]
	0x025EA274 MOV X0, X21
	0x025EA278 BLR X8
	0x025EA27C TBZ X0, 0x0, 0x25EA328
	0x025EA280 LDR X8, [X19]
	0x025EA284 LDR X8, [X8 + 0xC0]
	0x025EA288 LDR X1, [X8 + 0xA0]
	0x025EA28C LDR X0, [X1]
	0x025EA290 STUR X24, [X29 - 0x18]
	0x025EA294 LDR X8, [X1 + 0x10]
	0x025EA298 SUB X3, X29, 0x18
	0x025EA29C MOV X2, X21
	0x025EA2A0 MOV X4, X24
	0x025EA2A4 BLR X8
	0x025EA2A8 MOV X0, X28
	0x025EA2AC MOV X1, X24
	0x025EA2B0 MOV X2, X23
	0x025EA2B4 BL 0x3EB1AC0
	0x025EA2B8 LDR X8, [X19]
	0x025EA2BC LDR X8, [X8 + 0xC0]
	0x025EA2C0 LDR X1, [X8 + 0x38]
	0x025EA2C4 LDR X8, [X1]
	0x025EA2C8 MOV X0, X20
	0x025EA2CC BLR X8
	0x025EA2D0 MOV X27, X0
	0x025EA2D4 MOV X0, X25
	0x025EA2D8 MOV X1, X28
	0x025EA2DC MOV X2, X23
	0x025EA2E0 BL 0x3EB1AC0
	0x025EA2E4 CBZ X27, 0x25EA5BC
	0x025EA2E8 LDR X8, [X19]
	0x025EA2EC LDR X8, [X8 + 0xC0]
	0x025EA2F0 LDR X9, [X8 + 0x28]
	0x025EA2F4 LDR W10, [X9 + 0x28]
	0x025EA2F8 MOV X9, X25
	0x025EA2FC TBNZ X10, 0x1F, 0x25EA304
	0x025EA300 LDR X9, [X25]
	0x025EA304 LDR X1, [X8 + 0x78]
	0x025EA308 LDR X0, [X1]
	0x025EA30C STUR X9, [X29 - 0x18]
	0x025EA310 LDR X8, [X1 + 0x10]
	0x025EA314 SUB X3, X29, 0x18
	0x025EA318 SUB X4, X29, 0xC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X19, X2
	008 Move [X31+32], X31
	009 Move [X31+40], X31
	010 Move [X31+48], X31
	011 Compare X1, 0
	012 JumpIfEqual {147}
	013 Move W2, [X1+24]
	014 Move W8, [X1+28]
	015 Move X20, X1
	016 Move X21, X0
	017 Add W8, W8, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move [X1+24], W31
	020 Move [X1+28], W8
	021 Move X0, [X20+16]
	022 Move W1, W31
	023 Move X3, X31
	024 Call Array.Clear, X0, X1, X2
	025 Compare X21, 0
	026 JumpIfEqual {146}
	027 Move X8, [X19+32]
	028 Move X0, X21
	029 Move X8, [X8+192]
	030 Move X1, [X8+216]
	031 Call 0x28BA738, X0
	032 Move X8, [X19+32]
	033 Move W22, W0
	034 Move X8, [X8+192]
	035 Move X8, [X8+232]
	036 Move W9, [X8+309]
	037 Move TEMP, X9
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X8
	042 Call 0x1C5D684
	043 Move X8, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X8, [X19+32]
	050 Move X0, X20
	051 Move W1, W22
	052 Move X8, [X8+192]
	053 Move X2, [X8+224]
	054 Call 0x28BAD6C, X0, X1
	055 Move X0, [X21+16]
	056 Compare X0, 0
	057 JumpIfEqual {146}
	058 Move X8, [X19+32]
	059 Move X8, [X8+192]
	060 Move X1, [X8+144]
	061 Add X8, X31, 8
	062 Call List`1<Object>.GetEnumerator, X0
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move X8, [X31+24]
	065 Move [X31+2], V0
	066 Move [X31+48], X8
	067 Move X8, [X19+32]
	068 Move X8, [X8+192]
	069 Move X1, [X8+176]
	070 Add X0, X31, 32
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {117}
	076 Move X8, [X19+32]
	077 Move X22, [X31+48]
	078 Move X8, [X8+192]
	079 Move X1, [X8+80]
	080 Move X0, X21
	081 Call 0x28BA78C, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X21+32]
	084 Compare X0, 0
	085 JumpIfEqual {145}
	086 Move X8, [X19+32]
	087 Move X8, [X8+192]
	088 Move X2, [X8+48]
	089 Move X1, X22
	090 Call List`1<Object>.Contains, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {67}
	095 Move X8, [X19+32]
	096 Move W10, [X20+28]
	097 Move X9, [X8+192]
	098 Move X8, [X20+16]
	099 Add W10, W10, 1
	100 Move X9, [X9+96]
	101 Move [X20+28], W10
	102 Compare X8, 0
	103 JumpIfEqual {144}
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Move W11, [X8+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add W9, W10, 1
	108 Add X8, X8, X10
	109 Move [X20+24], W9
	110 Move [X8+32], X22
	111 Move X8, [X9+32]
	112 Move X8, [X8+192]
	113 Move X2, [X8+112]
	114 Move X0, X20
	115 Move X1, X22
	116 Call List`1<Object>.AddWithResize, X0, X1
	117 Move X22, X31
	118 Move X8, [X19+32]
	119 Add X0, X31, 32
	120 Move X8, [X8+192]
	121 Move X1, [X8+184]
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X22, 0
	124 JumpIfNotEqual {162}
	125 Move X8, [X19+32]
	126 Move X0, X21
	127 Move X8, [X8+192]
	128 Move X1, [X8+24]
	129 Call 0x28BA774, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, [X19+32]
	132 Move X1, [X21+24]
	133 Move X0, X20
	134 Move X8, [X8+192]
	135 Move X2, [X8+240]
	136 Call List`1<Object>.AddRange, X0, X1
	137 Move X20, [X31+96]
	138 Move X19, [X31+104]
	139 Move X22, [X31+80]
	140 Move X21, [X31+88]
	141 Move X30, [X31+64]
	142 Add X31, X31, 112
	143 Return 
	144 Call 0x1C17F20
	145 Call 0x1C17F20
	146 Call 0x1C17F20
	147 Move X0, 0x1B0F000
	148 Move X0, [X0+1320]
	149 Call 0x1C17D08
	150 Call 0x1C17F10
	151 Move X20, X0
	152 Move X0, 0x1B32000
	153 Move X0, [X0+2648]
	154 Call 0x1C17D08
	155 Move X1, X0
	156 Move X0, X20
	157 Move X2, X31
	158 Call ArgumentNullException..ctor, X0, X1
	159 Move X0, X20
	160 Move X1, X19
	161 Call 0x1C17DEC
	162 Move X0, X22
	163 Call 0x1C17F18
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Call 0x3EB2AD0
	166 Move X22, [X0]
	167 Call 0x3EB2AE0
	168 Move X20, X0
	169 Move X22, X31
	170 Move X20, X0
	171 Move X8, [X19+32]
	172 Move X8, [X8+192]
	173 Move X1, [X8+184]
	174 Add X0, X31, 32
	175 Call Enumerator<Object>.Dispose, X0
	176 Compare X22, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X20
	179 Call 0x1D2D690
	180 Move X0, X22
	181 Call 0x1C17F18
	182 Call 0x1991590

Method: T GetRegisteredItemAt(System.Int32 index)

Disassembly:
	0x025EA31C MOV X2, X27
	0x025EA320 BLR X8
	0x025EA324 B 0x25EA264
	0x025EA328 MOV X28, X31
	0x025EA32C MOVZ W27, 0x5
	0x025EA330 LDR X8, [X19]
	0x025EA334 LDR X8, [X8 + 0xC0]
	0x025EA338 LDR X0, [X8 + 0x98]
	0x025EA33C LDRB W9, [X0 + 0x135]
	0x025EA340 TBNZ X9, 0x0, 0x25EA350
	0x025EA344 BL 0x1C5C684
	0x025EA348 LDR X8, [X19]
	0x025EA34C LDR X8, [X8 + 0xC0]
	0x025EA350 LDR X1, [X8 + 0xB8]
	0x025EA354 LDUR X2, [X29 - 0x30]
	0x025EA358 MOV X3, X21
	0x025EA35C MOV X4, X31
	0x025EA360 MOV X5, X31
	0x025EA364 BL 0x1C17728
	0x025EA368 CBNZ X28, 0x25EA5CC
	0x025EA36C CMP W27, 0x5
	0x025EA370 B.EQ 0x25EA378
	0x025EA374 CBNZ W27, 0x25EA588
	0x025EA378 LDR X8, [X19]
	0x025EA37C MOV X0, X20
	0x025EA380 LDR X8, [X8 + 0xC0]
	0x025EA384 LDR X1, [X8 + 0xC0]
	0x025EA388 LDR X8, [X1]
	0x025EA38C BLR X8
	0x025EA390 LDR X8, [X19]
	0x025EA394 MOV X0, X20
	0x025EA398 LDR X8, [X8 + 0xC0]
	0x025EA39C LDR X1, [X8 + 0x18]
	0x025EA3A0 LDR X8, [X1]
	0x025EA3A4 BLR X8
	0x025EA3A8 CMP W0, 0x0
	0x025EA3AC B.LE 0x25EA588
	0x025EA3B0 LDR X2, [X20 + 0x18]
	0x025EA3B4 CBZ X2, 0x25EA5C8
	0x025EA3B8 LDR X8, [X19]
	0x025EA3BC SUB X3, X29, 0x18
	0x025EA3C0 MOV X4, X22
	0x025EA3C4 LDR X8, [X8 + 0xC0]
	0x025EA3C8 LDR X1, [X8 + 0x90]
	0x025EA3CC LDR X0, [X1]
	0x025EA3D0 STUR X22, [X29 - 0x18]
	0x025EA3D4 LDR X8, [X1 + 0x10]
	0x025EA3D8 BLR X8
	0x025EA3DC LDUR X2, [X29 - 0x20]
	0x025EA3E0 MOV X0, X21
	0x025EA3E4 MOV X1, X22
	0x025EA3E8 BL 0x3EB1AC0
	0x025EA3EC LDR X8, [X19]
	0x025EA3F0 LDR X8, [X8 + 0xC0]
	0x025EA3F4 LDR X1, [X8 + 0xB0]
	0x025EA3F8 LDR X8, [X1]
	0x025EA3FC MOV X0, X21
	0x025EA400 BLR X8
	0x025EA404 TBZ X0, 0x0, 0x25EA520
	0x025EA408 LDR X8, [X19]
	0x025EA40C LDR X8, [X8 + 0xC0]
	0x025EA410 LDR X1, [X8 + 0xA0]
	0x025EA414 LDR X0, [X1]
	0x025EA418 STUR X24, [X29 - 0x18]
	0x025EA41C LDR X8, [X1 + 0x10]
	0x025EA420 SUB X3, X29, 0x18
	0x025EA424 MOV X2, X21
	0x025EA428 MOV X4, X24
	0x025EA42C BLR X8
	0x025EA430 MOV X0, X26
	0x025EA434 MOV X1, X24
	0x025EA438 MOV X2, X23
	0x025EA43C BL 0x3EB1AC0
	0x025EA440 LDR X8, [X19]
	0x025EA444 LDR X8, [X8 + 0xC0]
	0x025EA448 LDR X1, [X8 + 0x38]
	0x025EA44C LDR X8, [X1]
	0x025EA450 MOV X0, X20
	0x025EA454 BLR X8
	0x025EA458 MOV X22, X0
	0x025EA45C MOV X0, X25
	0x025EA460 MOV X1, X26
	0x025EA464 MOV X2, X23
	0x025EA468 BL 0x3EB1AC0
	0x025EA46C CBZ X22, 0x25EA5C0
	0x025EA470 LDR X8, [X19]
	0x025EA474 LDR X8, [X8 + 0xC0]
	0x025EA478 LDR X9, [X8 + 0x28]
	0x025EA47C LDR W10, [X9 + 0x28]
	0x025EA480 MOV X9, X25
	0x025EA484 TBNZ X10, 0x1F, 0x25EA48C
	0x025EA488 LDR X9, [X25]
	0x025EA48C LDR X1, [X8 + 0x30]
	0x025EA490 LDR X0, [X1]
	0x025EA494 STUR X9, [X29 - 0x18]
	0x025EA498 LDR X8, [X1 + 0x10]
	0x025EA49C SUB X3, X29, 0x18
	0x025EA4A0 SUB X4, X29, 0x10
	0x025EA4A4 MOV X2, X22
	0x025EA4A8 BLR X8
	0x025EA4AC LDURB W8, [X29 - 0x10]
	0x025EA4B0 CBNZ W8, 0x25EA3EC
	0x025EA4B4 LDR X8, [X19]
	0x025EA4B8 LDR X8, [X8 + 0xC0]
	0x025EA4BC LDR X1, [X8 + 0x38]
	0x025EA4C0 LDR X8, [X1]
	0x025EA4C4 MOV X0, X20
	0x025EA4C8 BLR X8
	0x025EA4CC MOV X22, X0
	0x025EA4D0 MOV X0, X24
	0x025EA4D4 MOV X1, X26
	0x025EA4D8 MOV X2, X23
	0x025EA4DC BL 0x3EB1AC0
	0x025EA4E0 CBZ X22, 0x25EA5C4
	0x025EA4E4 LDR X8, [X19]
	0x025EA4E8 MOV X4, X24
	0x025EA4EC LDR X8, [X8 + 0xC0]
	0x025EA4F0 LDR X9, [X8 + 0x28]
	0x025EA4F4 LDR W9, [X9 + 0x28]
	0x025EA4F8 TBNZ X9, 0x1F, 0x25EA500
	0x025EA4FC LDR X4, [X24]
	0x025EA500 LDR X1, [X8 + 0x60]
	0x025EA504 LDR X0, [X1]
	0x025EA508 STUR X4, [X29 - 0x18]
	0x025EA50C LDR X8, [X1 + 0x10]
	0x025EA510 SUB X3, X29, 0x18
	0x025EA514 MOV X2, X22
	0x025EA518 BLR X8
	0x025EA51C B 0x25EA3EC
	0x025EA520 MOV X22, X31
	0x025EA524 MOVZ W23, 0x9
	0x025EA528 LDR X8, [X19]
	0x025EA52C LDR X8, [X8 + 0xC0]
	0x025EA530 LDR X0, [X8 + 0x98]
	0x025EA534 LDRB W9, [X0 + 0x135]
	0x025EA538 TBNZ X9, 0x0, 0x25EA548
	0x025EA53C BL 0x1C5C684
	0x025EA540 LDR X8, [X19]
	0x025EA544 LDR X8, [X8 + 0xC0]
	0x025EA548 LDR X1, [X8 + 0xB8]
	0x025EA54C LDUR X2, [X29 - 0x38]
	0x025EA550 MOV X3, X21
	0x025EA554 MOV X4, X31
	0x025EA558 MOV X5, X31
	0x025EA55C BL 0x1C17728
	0x025EA560 CBNZ X22, 0x25EA5D4
	0x025EA564 CMP W23, 0x9
	0x025EA568 B.EQ 0x25EA570
	0x025EA56C CBNZ W23, 0x25EA588
	0x025EA570 LDR X8, [X19]
	0x025EA574 MOV X0, X20
	0x025EA578 LDR X8, [X8 + 0xC0]
	0x025EA57C LDR X1, [X8 + 0xC8]
	0x025EA580 LDR X8, [X1]
	0x025EA584 BLR X8
	0x025EA588 LDUR X8, [X29 - 0x28]
	0x025EA58C LDR X8, [X8 + 0x28]
	0x025EA590 LDUR X9, [X29 - 0x8]
	0x025EA594 CMP X8, X9
	0x025EA598 B.NE 0x25EA5DC
	0x025EA59C ADD X31, X29, 0x0
	0x025EA5A0 LDP X20, X19, [X31 + 0x50]
	0x025EA5A4 LDP X22, X21, [X31 + 0x40]
	0x025EA5A8 LDP X24, X23, [X31 + 0x30]
	0x025EA5AC LDP X26, X25, [X31 + 0x20]
	0x025EA5B0 LDP X28, X27, [X31 + 0x10]
	0x025EA5B4 LDP X29, X30, [X31], #0x60
	0x025EA5B8 RET
	0x025EA5BC BL 0x1C16F20
	0x025EA5C0 BL 0x1C16F20
	0x025EA5C4 BL 0x1C16F20
	0x025EA5C8 BL 0x1C16F20
	0x025EA5CC MOV X0, X28
	0x025EA5D0 BL 0x1C16F18
	0x025EA5D4 MOV X0, X22
	0x025EA5D8 BL 0x1C16F18
	0x025EA5DC BL 0x3EB1B20
	0x025EA5E0 B 0x25EA5F8
	0x025EA5E4 B 0x25EA5F8
	0x025EA5E8 B 0x25EA5F8
	0x025EA5EC B 0x25EA5F8
	0x025EA5F0 B 0x25EA5F8
	0x025EA5F4 B 0x25EA5F8
	0x025EA5F8 MOV X27, X0
	0x025EA5FC CMP W1, 0x1
	0x025EA600 B.NE 0x25EA61C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X19, X2
	009 Move [X31+32], X31
	010 Move [X31+40], X31
	011 Move [X31+48], X31
	012 Move TEMP, X1
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {136}
	016 Move X21, X0
	017 Compare X0, 0
	018 JumpIfEqual {175}
	019 Move X8, [X19+32]
	020 Move W20, W1
	021 Move X0, X21
	022 Move X8, [X8+192]
	023 Move X1, [X8+216]
	024 Call 0x28BA738, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+32]
	027 Move X0, X21
	028 Move X8, [X8+192]
	029 Move X1, [X8+80]
	030 Call 0x28BA78C, X0
	031 Compare W0, 0
	032 JumpIfNotEqual {40}
	033 Move X8, [X19+32]
	034 Move X0, X21
	035 Move X8, [X8+192]
	036 Move X1, [X8+24]
	037 Call 0x28BA774, X0
	038 Compare W0, 0
	039 JumpIfEqual {156}
	040 Move X8, [X21+16]
	041 Compare X8, 0
	042 JumpIfEqual {175}
	043 Move X9, [X19+32]
	044 Move W22, [X8+24]
	045 Move X0, X21
	046 Move X9, [X9+192]
	047 Move X1, [X9+80]
	048 Call 0x28BA78C, X0
	049 Subtract W8, W22, W0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X21+16]
	052 Compare X0, 0
	053 JumpIfEqual {175}
	054 Move X8, [X19+32]
	055 Move X8, [X8+192]
	056 Move X1, [X8+144]
	057 Add X8, X31, 8
	058 Call List`1<Object>.GetEnumerator, X0
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X8, [X31+24]
	061 Move W23, W31
	062 Move [X31+2], V0
	063 Move [X31+48], X8
	064 Move X8, [X19+32]
	065 Move X8, [X8+192]
	066 Move X1, [X8+176]
	067 Add X0, X31, 32
	068 Call Enumerator<Object>.MoveNext, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {123}
	073 Move X8, [X19+32]
	074 Move X22, [X31+48]
	075 Move X8, [X8+192]
	076 Move X1, [X8+80]
	077 Move X0, X21
	078 Call 0x28BA78C, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X21+32]
	081 Compare X0, 0
	082 JumpIfEqual {174}
	083 Move X8, [X19+32]
	084 Move X8, [X8+192]
	085 Move X2, [X8+48]
	086 Move X1, X22
	087 Call List`1<Object>.Contains, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {64}
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add W23, W23, 1
	094 Move X0, [X21+16]
	095 Compare X0, 0
	096 JumpIfEqual {178}
	097 Move X8, [X19+32]
	098 Move X8, [X8+192]
	099 Move X2, [X8+256]
	100 Move W1, W20
	101 Call List`1<Object>.get_Item, X0, X1
	102 Move X21, X0
	103 Move X20, X31
	104 Move W22, 12
	105 Move X8, [X21+16]
	106 Compare X8, 0
	107 JumpIfEqual {175}
	108 Move X9, [X19+32]
	109 Move X22, [X21+24]
	110 Move W23, [X8+24]
	111 Move X0, X21
	112 Move X9, [X9+192]
	113 Move X1, [X9+80]
	114 Call 0x28BA78C, X0
	115 Compare X22, 0
	116 JumpIfEqual {175}
	117 Move X8, [X19+32]
	118 Move X8, [X8+192]
	119 Move X2, [X8+256]
	120 Subtract W8, W20, W23
	121 Add W1, W8, W0
	122 Move X0, X22
	123 Move X20, X31
	124 Move X21, X31
	125 Move W22, 13
	126 Move X8, [X19+32]
	127 Add X0, X31, 32
	128 Move X8, [X8+192]
	129 Move X1, [X8+184]
	130 Call Enumerator<Object>.Dispose, X0
	131 Compare X20, 0
	132 JumpIfNotEqual {176}
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Compare W22, 0
	135 JumpIfNotEqual {165}
	136 Move X0, 0x1B12000
	137 Move X0, [X0+1888]
	138 Call 0x1C17D08
	139 Call 0x1C17F10
	140 Move X20, X0
	141 Move X0, 0x1B15000
	142 Move X0, [X0+304]
	143 Call 0x1C17D08
	144 Move X21, X0
	145 Move X0, 0x1B34000
	146 Move X0, [X0+208]
	147 Call 0x1C17D08
	148 Move X2, X0
	149 Move X0, X20
	150 Move X1, X21
	151 Move X3, X31
	152 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	153 Move X0, X20
	154 Move X1, X19
	155 Call 0x1C17DEC
	156 Move X0, [X21+16]
	157 Compare X0, 0
	158 JumpIfEqual {175}
	159 Move X8, [X19+32]
	160 Move W1, W20
	161 Move X8, [X8+192]
	162 Move X2, [X8+256]
	163 Call List`1<Object>.get_Item, X0, X1
	164 Move X21, X0
	165 Move X0, X21
	166 Move X20, [X31+96]
	167 Move X19, [X31+104]
	168 Move X22, [X31+80]
	169 Move X21, [X31+88]
	170 Move X30, [X31+64]
	171 Move X23, [X31+72]
	172 Add X31, X31, 112
	173 Return X0
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Move X0, X20
	177 Call 0x1C17F18
	178 Call 0x1C17F20
	179 Move X21, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X21
	182 Call 0x3EB2AD0
	183 Move X20, [X0]
	184 Call 0x3EB2AE0
	185 Move W22, W31
	186 Move X21, X31
	187 Move X20, X31
	188 Move X21, X0
	189 Move X8, [X19+32]
	190 Move X8, [X8+192]
	191 Move X1, [X8+184]
	192 Add X0, X31, 32
	193 Call Enumerator<Object>.Dispose, X0
	194 Compare X20, 0
	195 JumpIfNotEqual {198}
	196 Move X0, X21
	197 Call 0x1D2D690
	198 Move X0, X20
	199 Call 0x1C17F18
	200 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x025EA604 MOV X0, X27
	0x025EA608 BL 0x3EB1AD0
	0x025EA60C LDR X22, [X0]
	0x025EA610 BL 0x3EB1AE0
	0x025EA614 MOV W23, W31
	0x025EA618 B 0x25EA528
	0x025EA61C MOV X22, X31
	0x025EA620 B 0x25EA628
	0x025EA624 MOV X27, X0
	0x025EA628 LDR X8, [X19]
	0x025EA62C LDR X8, [X8 + 0xC0]
	0x025EA630 LDR X0, [X8 + 0x98]
	0x025EA634 LDRB W9, [X0 + 0x135]
	0x025EA638 TBNZ X9, 0x0, 0x25EA648
	0x025EA63C BL 0x1C5C684
	0x025EA640 LDR X8, [X19]
	0x025EA644 LDR X8, [X8 + 0xC0]
	0x025EA648 LDR X1, [X8 + 0xB8]
	0x025EA64C LDUR X2, [X29 - 0x38]
	0x025EA650 MOV X3, X21
	0x025EA654 MOV X4, X31
	0x025EA658 MOV X5, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, 1
	005 Move [X0+40], W8
	006 Move X8, [X1+32]
	007 Move X19, X0
	008 Move X20, X1
	009 Move X8, [X8+192]
	010 Move X0, [X8+232]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 Move X8, [X20+32]
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X8, [X8+192]
	026 Move X1, [X8+264]
	027 Move X30, [X31+32]
	028 Call 0x28BADE8, X0
	029 Return 

