Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/OrthogonalLookRotation_00000928$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B89F5C STR X31, [X31 + 0x18]
	0x03B89F60 BL 0x1C16E04
	0x03B89F64 LDR X8, [X26]
	0x03B89F68 STR X0, [X31]
	0x03B89F6C MOV X1, X23
	0x03B89F70 MOV X0, X8
	0x03B89F74 BL 0x1C16E04
	0x03B89F78 LDR X8, [X25]
	0x03B89F7C STR X0, [X31 + 0x8]
	0x03B89F80 MOV X1, X22
	0x03B89F84 MOV X0, X8
	0x03B89F88 BL 0x1C16E04
	0x03B89F8C STR X0, [X31 + 0x10]
	0x03B89F90 ADD X1, X31, 0x0
	0x03B89F94 MOV X0, X21
	0x03B89F98 MOV X2, X20
	0x03B89F9C MOV X3, X19
	0x03B89FA0 BL 0x1C16CB0
	0x03B89FA4 LDP X20, X19, [X31 + 0x60]
	0x03B89FA8 LDP X22, X21, [X31 + 0x50]
	0x03B89FAC LDP X24, X23, [X31 + 0x40]
	0x03B89FB0 LDP X26, X25, [X31 + 0x30]
	0x03B89FB4 LDP X30, X27, [X31 + 0x20]
	0x03B89FB8 ADD X31, X31, 0x70
	0x03B89FBC RET
	0x03B89FC0 MOV X0, X1
	0x03B89FC4 MOV X1, X31
	0x03B89FC8 B 0x1C16CB4
	0x03B89FCC STP X30, X23, [X31 - 0x30]!
	0x03B89FD0 STP X22, X21, [X31 + 0x10]
	0x03B89FD4 STP X20, X19, [X31 + 0x20]
	0x03B89FD8 ADRP X20, 0x859000
	0x03B89FDC ADRP X23, 0x5D3000
	0x03B89FE0 LDRB W8, [X20 + 0xB2D]
	0x03B89FE4 LDR X23, [X23 + 0xB8]
	0x03B89FE8 MOV X19, X0
	0x03B89FEC TBNZ X8, 0x0, 0x3B8A028
	0x03B89FF0 ADRP X0, 0x592000
	0x03B89FF4 LDR X0, [X0 + 0x848]
	0x03B89FF8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33075200
	021 Add X8, X8, 4084
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33075200
	024 Add X8, X8, 4060
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33075200
	033 Add X8, X8, 3964
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50778112
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in UnityEngine.Vector3 forward, in UnityEngine.Vector3 referenceUp, out UnityEngine.Quaternion lookRotation)

Disassembly:
	0x03B89FFC ADRP X0, 0x5D3000
	0x03B8A000 LDR X0, [X0 + 0x198]
	0x03B8A004 BL 0x1C16CF4
	0x03B8A008 ADRP X0, 0x5D2000
	0x03B8A00C LDR X0, [X0 + 0xB8]

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(in UnityEngine.Vector3 forward, in UnityEngine.Vector3 referenceUp, out UnityEngine.Quaternion lookRotation, System.AsyncCallback param_3, System.Object param_4)

Disassembly:
	0x03B8A010 BL 0x1C16CF4
	0x03B8A014 ADRP X0, 0x5D2000
	0x03B8A018 LDR X0, [X0 + 0x1A0]
	0x03B8A01C BL 0x1C16CF4
	0x03B8A020 MOVZ W8, 0x1
	0x03B8A024 STRB W8, [X20 + 0xB2D]
	0x03B8A028 LDR X8, [X23]
	0x03B8A02C LDR W9, [X8 + 0xE0]
	0x03B8A030 CBNZ W9, 0x3B8A040
	0x03B8A034 MOV X0, X8
	0x03B8A038 BL 0x1C16DFC
	0x03B8A03C LDR X8, [X23]
	0x03B8A040 LDR X9, [X8 + 0xB8]
	0x03B8A044 LDR X10, [X9]
	0x03B8A048 CBNZ X10, 0x3B8A0B8
	0x03B8A04C LDR W10, [X8 + 0xE0]
	0x03B8A050 CBNZ W10, 0x3B8A064
	0x03B8A054 MOV X0, X8
	0x03B8A058 BL 0x1C16DFC
	0x03B8A05C LDR X8, [X23]
	0x03B8A060 LDR X9, [X8 + 0xB8]
	0x03B8A064 ADRP X8, 0x591000
	0x03B8A068 LDR X20, [X9 + 0x8]
	0x03B8A06C LDR X8, [X8 + 0x848]
	0x03B8A070 LDR X0, [X8]
	0x03B8A074 ADRP X8, 0x5D2000
	0x03B8A078 LDR X8, [X8 + 0x198]
	0x03B8A07C LDR X21, [X8]
	0x03B8A080 ADRP X8, 0x5D2000
	0x03B8A084 LDR X8, [X8 + 0x1A0]
	0x03B8A088 LDR W9, [X0 + 0xE0]
	0x03B8A08C LDR X22, [X8]
	0x03B8A090 CBNZ W9, 0x3B8A098
	0x03B8A094 BL 0x1C16DFC
	0x03B8A098 MOV X0, X20
	0x03B8A09C MOV X1, X21
	0x03B8A0A0 MOV X2, X22
	0x03B8A0A4 MOV X3, X31
	0x03B8A0A8 BL 0x36FAD70
	0x03B8A0AC LDR X8, [X23]
	0x03B8A0B0 LDR X9, [X8 + 0xB8]
	0x03B8A0B4 STR X0, [X9]
	0x03B8A0B8 LDR W9, [X8 + 0xE0]
	0x03B8A0BC CBNZ W9, 0x3B8A0CC
	0x03B8A0C0 MOV X0, X8
	0x03B8A0C4 BL 0x1C16DFC
	0x03B8A0C8 LDR X8, [X23]
	0x03B8A0CC LDR X8, [X8 + 0xB8]
	0x03B8A0D0 LDP X22, X21, [X31 + 0x10]
	0x03B8A0D4 LDR X8, [X8]
	0x03B8A0D8 STR X8, [X19]
	0x03B8A0DC LDP X20, X19, [X31 + 0x20]
	0x03B8A0E0 LDP X30, X23, [X31], #0x30
	0x03B8A0E4 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X27, 0x859000
	013 Move X26, 0x56A000
	014 Move X25, 0x56B000
	015 Move W8, [X27+2840]
	016 Move X26, [X26+1440]
	017 Move X25, [X25+1448]
	018 Move X19, X5
	019 Move X20, X4
	020 Move X22, X3
	021 Move X23, X2
	022 Move X24, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x56B000
	029 Move X0, [X0+1448]
	030 Call 0x1C17CF4
	031 Move X0, 0x56A000
	032 Move X0, [X0+1440]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X27+2840], W8
	036 Move X0, [X26]
	037 Move X1, X24
	038 Move [X31+24], X31
	039 Call 0x1C17E04
	040 Move X8, [X26]
	041 Move [X31], X0
	042 Move X1, X23
	043 Move X0, X8
	044 Call 0x1C17E04
	045 Move X8, [X25]
	046 Move [X31+8], X0
	047 Move X1, X22
	048 Move X0, X8
	049 Call 0x1C17E04
	050 Move [X31+16], X0
	051 Add X1, X31, 0
	052 Move X0, X21
	053 Move X2, X20
	054 Move X3, X19
	055 Call 0x1C17CB0
	056 Move X20, [X31+96]
	057 Move X19, [X31+104]
	058 Move X22, [X31+80]
	059 Move X21, [X31+88]
	060 Move X24, [X31+64]
	061 Move X23, [X31+72]
	062 Move X26, [X31+48]
	063 Move X25, [X31+56]
	064 Move X30, [X31+32]
	065 Move X27, [X31+40]
	066 Add X31, X31, 112
	067 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B8A0E8 STR X30, [X31 - 0x20]!
	0x03B8A0EC STP X20, X19, [X31 + 0x10]
	0x03B8A0F0 ADRP X20, 0x858000

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

