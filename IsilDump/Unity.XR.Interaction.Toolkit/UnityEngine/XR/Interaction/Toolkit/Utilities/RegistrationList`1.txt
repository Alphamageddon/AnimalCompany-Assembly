Type: UnityEngine.XR.Interaction.Toolkit.Utilities.RegistrationList`1

Method: System.Boolean IsRegistered(T item)

Disassembly:
	0x025C5D04 LDR X28, [X21 + 0x20]
	0x025C5D08 LDR X25, [X23 + 0x38]
	0x025C5D0C SUB X27, X29, 0x20
	0x025C5D10 MOV X0, X24
	0x025C5D14 LDR X8, [X28 + 0xC0]
	0x025C5D18 MOV X2, X22
	0x025C5D1C STUR X26, [X29 - 0x28]
	0x025C5D20 LDR X8, [X8 + 0x10]
	0x025C5D24 LDR W8, [X8 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+24]
	008 Move X30, [X31+16]
	009 Call HashSet`1<Object>.Contains, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean IsStillRegistered(T item)

Disassembly:
	0x025C5D28 CMP W8, 0x0
	0x025C5D2C CSEL X1, X20, X27, LT
	0x025C5D30 BL 0x3EB1AC0
	0x025C5D34 CBZ X25, 0x25C5FD0
	0x025C5D38 LDR X8, [X28 + 0xC0]
	0x025C5D3C LDP X9, X1, [X8 + 0x10]
	0x025C5D40 MOV X8, X24
	0x025C5D44 LDR W9, [X9 + 0x28]
	0x025C5D48 LDR X0, [X1]
	0x025C5D4C TBNZ X9, 0x1F, 0x25C5D54
	0x025C5D50 LDR X8, [X24]
	0x025C5D54 STUR X8, [X29 - 0x18]
	0x025C5D58 LDR X8, [X1 + 0x10]
	0x025C5D5C SUB X3, X29, 0x18
	0x025C5D60 SUB X4, X29, 0xC
	0x025C5D64 MOV X2, X25

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {17}
	005 Move W8, [X0+32]
	006 Compare W8, 0
	007 JumpIfEqual {13}
	008 Move X8, [X2+32]
	009 Move X8, [X8+192]
	010 Move X2, [X8+24]
	011 Call HashSet`1<Object>.Contains, X0, X1
	012 Xor W8, W0, 1
	013 Move W8, 1
	014 And W0, W8, 1
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Boolean Register(T item)

Disassembly:
	0x025C5D68 BLR X8
	0x025C5D6C LDR X0, [X23 + 0x30]
	0x025C5D70 CBZ X0, 0x25C5FD0
	0x025C5D74 LDR X8, [X21 + 0x20]
	0x025C5D78 LDURB W28, [X29 - 0xC]
	0x025C5D7C LDR X8, [X8 + 0xC0]
	0x025C5D80 LDR X1, [X8 + 0x20]
	0x025C5D84 LDR X8, [X1]
	0x025C5D88 BLR X8
	0x025C5D8C CMP W0, 0x1
	0x025C5D90 B.LT 0x25C5E10
	0x025C5D94 LDR X26, [X21 + 0x20]
	0x025C5D98 LDR X25, [X23 + 0x30]
	0x025C5D9C MOV X0, X24
	0x025C5DA0 MOV X2, X22
	0x025C5DA4 LDR X8, [X26 + 0xC0]
	0x025C5DA8 LDR X8, [X8 + 0x10]
	0x025C5DAC LDR W8, [X8 + 0x28]
	0x025C5DB0 CMP W8, 0x0
	0x025C5DB4 CSEL X1, X20, X27, LT
	0x025C5DB8 BL 0x3EB1AC0
	0x025C5DBC CBZ X25, 0x25C5FD0
	0x025C5DC0 LDR X8, [X26 + 0xC0]
	0x025C5DC4 LDR X9, [X8 + 0x10]
	0x025C5DC8 LDR X1, [X8 + 0x28]
	0x025C5DCC MOV X8, X24
	0x025C5DD0 LDR W9, [X9 + 0x28]
	0x025C5DD4 LDR X0, [X1]
	0x025C5DD8 TBNZ X9, 0x1F, 0x25C5DE0
	0x025C5DDC LDR X8, [X24]
	0x025C5DE0 STUR X8, [X29 - 0x18]
	0x025C5DE4 LDR X8, [X1 + 0x10]
	0x025C5DE8 SUB X3, X29, 0x18
	0x025C5DEC SUB X4, X29, 0xC
	0x025C5DF0 MOV X2, X25
	0x025C5DF4 BLR X8
	0x025C5DF8 CBZ W28, 0x25C5E14
	0x025C5DFC LDURB W8, [X29 - 0xC]
	0x025C5E00 CBNZ W8, 0x25C5E14
	0x025C5E04 LDUR X26, [X29 - 0x28]
	0x025C5E08 MOV W0, W31
	0x025C5E0C B 0x25C5FA0
	0x025C5E10 CBNZ W28, 0x25C5E04
	0x025C5E14 LDR X25, [X21 + 0x20]
	0x025C5E18 MOV X0, X24
	0x025C5E1C MOV X2, X22
	0x025C5E20 LDR X8, [X25 + 0xC0]
	0x025C5E24 LDR X8, [X8 + 0x10]
	0x025C5E28 LDR W8, [X8 + 0x28]
	0x025C5E2C CMP W8, 0x0
	0x025C5E30 CSEL X1, X20, X27, LT
	0x025C5E34 BL 0x3EB1AC0
	0x025C5E38 LDR X8, [X25 + 0xC0]
	0x025C5E3C LDR X9, [X8 + 0x10]
	0x025C5E40 LDR X1, [X8 + 0x30]
	0x025C5E44 MOV X8, X24
	0x025C5E48 LDR W9, [X9 + 0x28]
	0x025C5E4C LDR X0, [X1]
	0x025C5E50 TBNZ X9, 0x1F, 0x25C5E58
	0x025C5E54 LDR X8, [X24]
	0x025C5E58 STUR X8, [X29 - 0x18]
	0x025C5E5C LDR X8, [X1 + 0x10]
	0x025C5E60 SUB X3, X29, 0x18
	0x025C5E64 SUB X4, X29, 0xC
	0x025C5E68 MOV X2, X23
	0x025C5E6C BLR X8
	0x025C5E70 LDR X26, [X21 + 0x20]
	0x025C5E74 LDR X25, [X23 + 0x40]
	0x025C5E78 MOV X0, X19
	0x025C5E7C MOV X2, X22
	0x025C5E80 LDR X8, [X26 + 0xC0]
	0x025C5E84 LDR X8, [X8 + 0x10]
	0x025C5E88 LDR W8, [X8 + 0x28]
	0x025C5E8C CMP W8, 0x0
	0x025C5E90 CSEL X1, X20, X27, LT

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Move X0, [X0+40]
	008 Compare X0, 0
	009 JumpIfEqual {96}
	010 Move W8, [X0+32]
	011 Move X20, X2
	012 Move X19, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X8, [X20+32]
	015 Move X1, X19
	016 Move X8, [X8+192]
	017 Move X2, [X8+24]
	018 Call HashSet`1<Object>.Contains, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, [X21+56]
	024 Compare X0, 0
	025 JumpIfEqual {96}
	026 Move X8, [X20+32]
	027 Move X1, X19
	028 Move X8, [X8+192]
	029 Move X2, [X8+24]
	030 Call HashSet`1<Object>.Contains, X0, X1
	031 Move X8, [X21+48]
	032 Compare X8, 0
	033 JumpIfEqual {96}
	034 Move W9, [X8+32]
	035 Move W22, W0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X20+32]
	038 Move X0, X8
	039 Move X1, X19
	040 Move X9, [X9+192]
	041 Move X2, [X9+40]
	042 Call HashSet`1<Object>.Remove, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {57}
	047 Xor W8, W22, 1
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {57}
	052 Move W0, W31
	053 Move TEMP, X22
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {52}
	057 Move X8, [X20+32]
	058 Move X0, X21
	059 Move X1, X19
	060 Move X8, [X8+192]
	061 Move X2, [X8+48]
	062 Call 0x28BAA18, X0, X1
	063 Move X0, [X21+64]
	064 Compare X0, 0
	065 JumpIfEqual {96}
	066 Move X8, [X20+32]
	067 Move X1, X19
	068 Move X8, [X8+192]
	069 Move X2, [X8+56]
	070 Call HashSet`1<Object>.Add, X0, X1
	071 Move TEMP, X22
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {89}
	075 Move X8, [X20+32]
	076 Move X0, X21
	077 Move X1, X19
	078 Move X8, [X8+192]
	079 Move X2, [X8+64]
	080 Call 0x28BA7A4, X0, X1
	081 Move X0, [X21+40]
	082 Compare X0, 0
	083 JumpIfEqual {96}
	084 Move X8, [X20+32]
	085 Move X1, X19
	086 Move X8, [X8+192]
	087 Move X2, [X8+56]
	088 Call HashSet`1<Object>.Add, X0, X1
	089 Move W0, 1
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Boolean Unregister(T item)

Disassembly:
	0x025C5E94 BL 0x3EB1AC0
	0x025C5E98 CBZ X25, 0x25C5FD0
	0x025C5E9C LDR X8, [X26 + 0xC0]
	0x025C5EA0 LDR X9, [X8 + 0x10]
	0x025C5EA4 LDR X1, [X8 + 0x38]
	0x025C5EA8 MOV X8, X19
	0x025C5EAC LDR W9, [X9 + 0x28]
	0x025C5EB0 LDR X0, [X1]
	0x025C5EB4 TBNZ X9, 0x1F, 0x25C5EBC
	0x025C5EB8 LDR X8, [X19]
	0x025C5EBC STUR X8, [X29 - 0x18]
	0x025C5EC0 LDR X8, [X1 + 0x10]
	0x025C5EC4 SUB X3, X29, 0x18
	0x025C5EC8 SUB X4, X29, 0xC
	0x025C5ECC MOV X2, X25
	0x025C5ED0 BLR X8
	0x025C5ED4 CBZ W28, 0x25C5EE0
	0x025C5ED8 LDUR X26, [X29 - 0x28]
	0x025C5EDC B 0x25C5F9C
	0x025C5EE0 LDR X25, [X21 + 0x20]
	0x025C5EE4 MOV X0, X24
	0x025C5EE8 MOV X2, X22
	0x025C5EEC LDR X8, [X25 + 0xC0]
	0x025C5EF0 LDR X8, [X8 + 0x10]
	0x025C5EF4 LDR W8, [X8 + 0x28]
	0x025C5EF8 CMP W8, 0x0
	0x025C5EFC CSEL X1, X20, X27, LT
	0x025C5F00 BL 0x3EB1AC0
	0x025C5F04 LDR X8, [X25 + 0xC0]
	0x025C5F08 LDR X9, [X8 + 0x10]
	0x025C5F0C LDR X1, [X8 + 0x40]
	0x025C5F10 LDR W8, [X9 + 0x28]
	0x025C5F14 LDR X0, [X1]
	0x025C5F18 TBNZ X8, 0x1F, 0x25C5F20
	0x025C5F1C LDR X24, [X24]
	0x025C5F20 STUR X24, [X29 - 0x18]
	0x025C5F24 LDR X8, [X1 + 0x10]
	0x025C5F28 SUB X3, X29, 0x18
	0x025C5F2C MOV X2, X23
	0x025C5F30 MOV X4, X24
	0x025C5F34 BLR X8
	0x025C5F38 LDR X24, [X21 + 0x20]
	0x025C5F3C LDR X21, [X23 + 0x28]
	0x025C5F40 MOV X0, X19
	0x025C5F44 MOV X2, X22
	0x025C5F48 LDR X8, [X24 + 0xC0]
	0x025C5F4C LDR X8, [X8 + 0x10]
	0x025C5F50 LDR W8, [X8 + 0x28]
	0x025C5F54 CMP W8, 0x0
	0x025C5F58 CSEL X1, X20, X27, LT
	0x025C5F5C BL 0x3EB1AC0
	0x025C5F60 CBZ X21, 0x25C5FD0
	0x025C5F64 LDR X8, [X24 + 0xC0]
	0x025C5F68 LDUR X26, [X29 - 0x28]
	0x025C5F6C LDR X9, [X8 + 0x10]
	0x025C5F70 LDR X1, [X8 + 0x38]
	0x025C5F74 LDR W8, [X9 + 0x28]
	0x025C5F78 LDR X0, [X1]
	0x025C5F7C TBNZ X8, 0x1F, 0x25C5F84
	0x025C5F80 LDR X19, [X19]
	0x025C5F84 STUR X19, [X29 - 0x18]
	0x025C5F88 LDR X8, [X1 + 0x10]
	0x025C5F8C SUB X3, X29, 0x18
	0x025C5F90 SUB X4, X29, 0xC
	0x025C5F94 MOV X2, X21
	0x025C5F98 BLR X8
	0x025C5F9C MOVZ W0, 0x1
	0x025C5FA0 LDR X8, [X26 + 0x28]
	0x025C5FA4 LDUR X9, [X29 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, [X0+48]
	007 Compare X0, 0
	008 JumpIfEqual {83}
	009 Move W8, [X0+32]
	010 Move X20, X2
	011 Move X19, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X20+32]
	014 Move X1, X19
	015 Move X8, [X8+192]
	016 Move X2, [X8+24]
	017 Call HashSet`1<Object>.Contains, X0, X1
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {77}
	022 Move X0, [X21+40]
	023 Compare X0, 0
	024 JumpIfEqual {83}
	025 Move W8, [X0+32]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X20+32]
	028 Move X1, X19
	029 Move X8, [X8+192]
	030 Move X2, [X8+40]
	031 Call HashSet`1<Object>.Remove, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, [X20+32]
	037 Move X0, X21
	038 Move X1, X19
	039 Move X8, [X8+192]
	040 Move X2, [X8+72]
	041 Call 0x28BA88C, X0, X1
	042 Move X0, [X21+56]
	043 Compare X0, 0
	044 JumpIfEqual {83}
	045 Move X8, [X20+32]
	046 Move X1, X19
	047 Move X8, [X8+192]
	048 Move X2, [X8+24]
	049 Call HashSet`1<Object>.Contains, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {77}
	054 Move X8, [X20+32]
	055 Move X0, X21
	056 Move X1, X19
	057 Move X8, [X8+192]
	058 Move X2, [X8+80]
	059 Call 0x28BA930, X0, X1
	060 Move X0, [X21+48]
	061 Compare X0, 0
	062 JumpIfEqual {83}
	063 Move X8, [X20+32]
	064 Move X1, X19
	065 Move X8, [X8+192]
	066 Move X2, [X8+56]
	067 Call HashSet`1<Object>.Add, X0, X1
	068 Move X0, [X21+64]
	069 Compare X0, 0
	070 JumpIfEqual {83}
	071 Move X8, [X20+32]
	072 Move X1, X19
	073 Move X8, [X8+192]
	074 Move X2, [X8+40]
	075 Call HashSet`1<Object>.Remove, X0, X1
	076 Move W0, 1
	077 Move W0, W31
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return X0
	083 Call 0x1C17F20

Method: System.Void Flush()

Disassembly:
	0x025C5FA8 CMP X8, X9
	0x025C5FAC B.NE 0x25C5FD4
	0x025C5FB0 ADD X31, X29, 0x0
	0x025C5FB4 LDP X20, X19, [X31 + 0x50]
	0x025C5FB8 LDP X22, X21, [X31 + 0x40]
	0x025C5FBC LDP X24, X23, [X31 + 0x30]
	0x025C5FC0 LDP X26, X25, [X31 + 0x20]
	0x025C5FC4 LDP X28, X27, [X31 + 0x10]
	0x025C5FC8 LDP X29, X30, [X31], #0x60
	0x025C5FCC RET
	0x025C5FD0 BL 0x1C16F20
	0x025C5FD4 BL 0x3EB1B20
	0x025C5FD8 STP X29, X30, [X31 - 0x60]!
	0x025C5FDC STP X28, X27, [X31 + 0x10]
	0x025C5FE0 STP X26, X25, [X31 + 0x20]
	0x025C5FE4 STP X24, X23, [X31 + 0x30]
	0x025C5FE8 STP X22, X21, [X31 + 0x40]
	0x025C5FEC STP X20, X19, [X31 + 0x50]
	0x025C5FF0 ADD X29, X31, 0x0
	0x025C5FF4 SUB X31, X31, 0x30
	0x025C5FF8 MRS X27, 0xC000
	0x025C5FFC LDR X8, [X27 + 0x28]
	0x025C6000 MOV X23, X0
	0x025C6004 STUR X8, [X29 - 0x8]
	0x025C6008 STUR X1, [X29 - 0x20]
	0x025C600C LDR X8, [X2 + 0x20]
	0x025C6010 LDR X8, [X8 + 0xC0]
	0x025C6014 LDR X9, [X8 + 0x10]
	0x025C6018 LDR W20, [X9 + 0xFC]
	0x025C601C ADD X9, X31, 0x0
	0x025C6020 ADD X10, X20, 0xF
	0x025C6024 AND X10, X10, 0x1FFFFFFFF
	0x025C6028 SUB X25, X9, X10
	0x025C602C ADD X31, X25, 0x0
	0x025C6030 ADD X9, X31, 0x0
	0x025C6034 SUB X21, X9, X10
	0x025C6038 ADD X31, X21, 0x0
	0x025C603C ADD X9, X31, 0x0
	0x025C6040 SUB X24, X9, X10
	0x025C6044 ADD X31, X24, 0x0
	0x025C6048 LDR X0, [X0 + 0x30]
	0x025C604C CBZ X0, 0x25C6408
	0x025C6050 MOV X19, X1
	0x025C6054 LDR X1, [X8 + 0x20]
	0x025C6058 MOV X22, X2
	0x025C605C LDR X8, [X1]
	0x025C6060 BLR X8
	0x025C6064 CMP W0, 0x1
	0x025C6068 B.LT 0x25C60D8
	0x025C606C LDR X28, [X22 + 0x20]
	0x025C6070 LDR X26, [X23 + 0x30]
	0x025C6074 MOV X0, X25
	0x025C6078 MOV X2, X20
	0x025C607C LDR X8, [X28 + 0xC0]
	0x025C6080 LDR X8, [X8 + 0x10]
	0x025C6084 LDR W8, [X8 + 0x28]
	0x025C6088 CMP W8, 0x0
	0x025C608C SUB X8, X29, 0x20
	0x025C6090 CSEL X1, X19, X8, LT
	0x025C6094 BL 0x3EB1AC0
	0x025C6098 CBZ X26, 0x25C6408
	0x025C609C LDR X8, [X28 + 0xC0]
	0x025C60A0 LDP X9, X1, [X8 + 0x10]
	0x025C60A4 MOV X8, X25
	0x025C60A8 LDR W9, [X9 + 0x28]
	0x025C60AC LDR X0, [X1]
	0x025C60B0 TBNZ X9, 0x1F, 0x25C60B8
	0x025C60B4 LDR X8, [X25]
	0x025C60B8 STUR X8, [X29 - 0x18]
	0x025C60BC LDR X8, [X1 + 0x10]
	0x025C60C0 SUB X3, X29, 0x18
	0x025C60C4 SUB X4, X29, 0xC
	0x025C60C8 MOV X2, X26
	0x025C60CC BLR X8
	0x025C60D0 LDURB W8, [X29 - 0xC]
	0x025C60D4 CBNZ W8, 0x25C63D4
	0x025C60D8 LDR X0, [X23 + 0x28]
	0x025C60DC CBZ X0, 0x25C6408
	0x025C60E0 LDR X8, [X22 + 0x20]
	0x025C60E4 LDR X8, [X8 + 0xC0]
	0x025C60E8 LDR X1, [X8 + 0x20]
	0x025C60EC LDR X8, [X1]
	0x025C60F0 BLR X8
	0x025C60F4 CMP W0, 0x0
	0x025C60F8 B.LE 0x25C622C
	0x025C60FC LDR X28, [X22 + 0x20]
	0x025C6100 LDR X26, [X23 + 0x28]
	0x025C6104 MOV X0, X25
	0x025C6108 MOV X2, X20
	0x025C610C LDR X8, [X28 + 0xC0]
	0x025C6110 LDR X8, [X8 + 0x10]
	0x025C6114 LDR W8, [X8 + 0x28]
	0x025C6118 CMP W8, 0x0
	0x025C611C SUB X8, X29, 0x20
	0x025C6120 CSEL X1, X19, X8, LT
	0x025C6124 BL 0x3EB1AC0
	0x025C6128 CBZ X26, 0x25C6408
	0x025C612C LDR X8, [X28 + 0xC0]
	0x025C6130 LDR X9, [X8 + 0x10]
	0x025C6134 LDR X1, [X8 + 0x28]
	0x025C6138 MOV X8, X25
	0x025C613C LDR W9, [X9 + 0x28]
	0x025C6140 LDR X0, [X1]
	0x025C6144 TBNZ X9, 0x1F, 0x25C614C
	0x025C6148 LDR X8, [X25]
	0x025C614C STUR X8, [X29 - 0x18]
	0x025C6150 LDR X8, [X1 + 0x10]
	0x025C6154 SUB X3, X29, 0x18
	0x025C6158 SUB X4, X29, 0xC
	0x025C615C MOV X2, X26
	0x025C6160 SUB X28, X29, 0x20
	0x025C6164 BLR X8
	0x025C6168 LDURB W8, [X29 - 0xC]
	0x025C616C CBZ W8, 0x25C623C
	0x025C6170 LDR X24, [X22 + 0x20]
	0x025C6174 MOV X0, X25
	0x025C6178 MOV X2, X20
	0x025C617C LDR X8, [X24 + 0xC0]
	0x025C6180 LDR X8, [X8 + 0x10]
	0x025C6184 LDR W8, [X8 + 0x28]
	0x025C6188 CMP W8, 0x0
	0x025C618C CSEL X1, X19, X28, LT
	0x025C6190 BL 0x3EB1AC0
	0x025C6194 LDR X8, [X24 + 0xC0]
	0x025C6198 LDR X9, [X8 + 0x10]
	0x025C619C LDR X1, [X8 + 0x48]
	0x025C61A0 LDR W8, [X9 + 0x28]
	0x025C61A4 LDR X0, [X1]
	0x025C61A8 TBNZ X8, 0x1F, 0x25C61B0
	0x025C61AC LDR X25, [X25]
	0x025C61B0 STUR X25, [X29 - 0x18]
	0x025C61B4 LDR X8, [X1 + 0x10]
	0x025C61B8 SUB X3, X29, 0x18
	0x025C61BC SUB X4, X29, 0xC
	0x025C61C0 MOV X2, X23
	0x025C61C4 BLR X8
	0x025C61C8 LDR X24, [X22 + 0x20]
	0x025C61CC LDR X22, [X23 + 0x40]
	0x025C61D0 MOV X0, X21
	0x025C61D4 MOV X2, X20
	0x025C61D8 LDR X8, [X24 + 0xC0]
	0x025C61DC LDR X8, [X8 + 0x10]
	0x025C61E0 LDR W8, [X8 + 0x28]
	0x025C61E4 CMP W8, 0x0
	0x025C61E8 SUB X8, X29, 0x20
	0x025C61EC CSEL X1, X19, X8, LT
	0x025C61F0 BL 0x3EB1AC0
	0x025C61F4 CBZ X22, 0x25C6408
	0x025C61F8 LDR X8, [X24 + 0xC0]
	0x025C61FC LDR X9, [X8 + 0x10]
	0x025C6200 LDR X1, [X8 + 0x28]
	0x025C6204 LDR W8, [X9 + 0x28]
	0x025C6208 LDR X0, [X1]
	0x025C620C TBNZ X8, 0x1F, 0x25C6214
	0x025C6210 LDR X21, [X21]
	0x025C6214 STUR X21, [X29 - 0x18]
	0x025C6218 LDR X8, [X1 + 0x10]
	0x025C621C SUB X3, X29, 0x18
	0x025C6220 SUB X4, X29, 0xC
	0x025C6224 MOV X2, X22
	0x025C6228 B 0x25C63C8
	0x025C622C STUR X24, [X29 - 0x28]
	0x025C6230 MOV X24, X27
	0x025C6234 SUB X28, X29, 0x20
	0x025C6238 B 0x25C6244
	0x025C623C STUR X24, [X29 - 0x28]
	0x025C6240 MOV X24, X27
	0x025C6244 LDR X27, [X22 + 0x20]
	0x025C6248 LDR X26, [X23 + 0x38]
	0x025C624C MOV X0, X25
	0x025C6250 MOV X2, X20
	0x025C6254 LDR X8, [X27 + 0xC0]
	0x025C6258 LDR X8, [X8 + 0x10]
	0x025C625C LDR W8, [X8 + 0x28]
	0x025C6260 CMP W8, 0x0
	0x025C6264 CSEL X1, X19, X28, LT
	0x025C6268 BL 0x3EB1AC0
	0x025C626C CBZ X26, 0x25C6408
	0x025C6270 LDR X8, [X27 + 0xC0]
	0x025C6274 LDP X9, X1, [X8 + 0x10]
	0x025C6278 MOV X8, X25
	0x025C627C LDR W9, [X9 + 0x28]
	0x025C6280 LDR X0, [X1]
	0x025C6284 TBNZ X9, 0x1F, 0x25C628C
	0x025C6288 LDR X8, [X25]
	0x025C628C STUR X8, [X29 - 0x18]
	0x025C6290 LDR X8, [X1 + 0x10]
	0x025C6294 SUB X3, X29, 0x18
	0x025C6298 SUB X4, X29, 0xC
	0x025C629C MOV X2, X26
	0x025C62A0 BLR X8
	0x025C62A4 LDURB W8, [X29 - 0xC]
	0x025C62A8 MOV X27, X24
	0x025C62AC CBZ W8, 0x25C63D4
	0x025C62B0 LDR X26, [X22 + 0x20]
	0x025C62B4 MOV X0, X25
	0x025C62B8 MOV X2, X20
	0x025C62BC LDR X8, [X26 + 0xC0]
	0x025C62C0 LDR X8, [X8 + 0x10]
	0x025C62C4 LDR W8, [X8 + 0x28]
	0x025C62C8 CMP W8, 0x0
	0x025C62CC CSEL X1, X19, X28, LT
	0x025C62D0 BL 0x3EB1AC0
	0x025C62D4 LDR X8, [X26 + 0xC0]
	0x025C62D8 LDR X9, [X8 + 0x10]
	0x025C62DC LDR X1, [X8 + 0x50]
	0x025C62E0 LDR W8, [X9 + 0x28]
	0x025C62E4 LDR X0, [X1]
	0x025C62E8 TBNZ X8, 0x1F, 0x25C62F0
	0x025C62EC LDR X25, [X25]
	0x025C62F0 STUR X25, [X29 - 0x18]
	0x025C62F4 LDR X8, [X1 + 0x10]
	0x025C62F8 LDUR X24, [X29 - 0x28]
	0x025C62FC SUB X3, X29, 0x18
	0x025C6300 MOV X2, X23
	0x025C6304 MOV X4, X25
	0x025C6308 BLR X8
	0x025C630C LDR X26, [X22 + 0x20]
	0x025C6310 LDR X25, [X23 + 0x30]
	0x025C6314 MOV X0, X21
	0x025C6318 MOV X2, X20
	0x025C631C LDR X8, [X26 + 0xC0]
	0x025C6320 LDR X8, [X8 + 0x10]
	0x025C6324 LDR W8, [X8 + 0x28]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move [X31+32], X31
	008 Move [X31+40], X31
	009 Move [X31+48], X31
	010 Compare X0, 0
	011 JumpIfEqual {190}
	012 Move X8, [X1+32]
	013 Move X19, X1
	014 Move X20, X0
	015 Move X8, [X8+192]
	016 Move X1, [X8+88]
	017 Call 0x28BA78C, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X20+32]
	020 Compare X0, 0
	021 JumpIfEqual {190}
	022 Move X8, [X19+32]
	023 Move X8, [X8+192]
	024 Move X1, [X8+112]
	025 Add X8, X31, 8
	026 Call List`1<Object>.GetEnumerator, X0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move X8, [X31+24]
	029 Move [X31+2], V0
	030 Move [X31+48], X8
	031 Move X8, [X19+32]
	032 Move X8, [X8+192]
	033 Move X1, [X8+160]
	034 Add X0, X31, 32
	035 Call Enumerator<Object>.MoveNext, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {57}
	040 Move X0, [X20+16]
	041 Compare X0, 0
	042 JumpIfEqual {184}
	043 Move X8, [X19+32]
	044 Move X21, [X31+48]
	045 Move X8, [X8+192]
	046 Move X2, [X8+152]
	047 Move X1, X21
	048 Call List`1<Object>.Remove, X0, X1
	049 Move X0, [X20+56]
	050 Compare X0, 0
	051 JumpIfEqual {185}
	052 Move X8, [X19+32]
	053 Move X8, [X8+192]
	054 Move X2, [X8+40]
	055 Move X1, X21
	056 Call HashSet`1<Object>.Remove, X0, X1
	057 Move X22, X31
	058 Move W21, 5
	059 Move X8, [X19+32]
	060 Add X0, X31, 32
	061 Move X8, [X8+192]
	062 Move X1, [X8+168]
	063 Call Enumerator<Object>.Dispose, X0
	064 Compare X22, 0
	065 JumpIfNotEqual {191}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare W21, 0
	068 JumpIfNotEqual {177}
	069 Move X8, [X19+32]
	070 Move X0, X20
	071 Move X8, [X8+192]
	072 Move X1, [X8+176]
	073 Call 0x28BAA34, X0
	074 Move X0, [X20+48]
	075 Compare X0, 0
	076 JumpIfEqual {190}
	077 Move X8, [X19+32]
	078 Move X8, [X8+192]
	079 Move X1, [X8+184]
	080 Call HashSet`1<Object>.Clear, X0
	081 Move X8, [X19+32]
	082 Move X0, X20
	083 Move X8, [X8+192]
	084 Move X1, [X8+192]
	085 Call 0x28BA774, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, [X20+24]
	088 Compare X0, 0
	089 JumpIfEqual {190}
	090 Move X8, [X19+32]
	091 Move X8, [X8+192]
	092 Move X1, [X8+112]
	093 Add X8, X31, 8
	094 Call List`1<Object>.GetEnumerator, X0
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move X8, [X31+24]
	097 Move [X31+2], V0
	098 Move [X31+48], X8
	099 Move X8, [X19+32]
	100 Move X8, [X8+192]
	101 Move X1, [X8+160]
	102 Add X0, X31, 32
	103 Call Enumerator<Object>.MoveNext, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {153}
	108 Move X0, [X20+56]
	109 Compare X0, 0
	110 JumpIfEqual {186}
	111 Move X8, [X19+32]
	112 Move X21, [X31+48]
	113 Move X8, [X8+192]
	114 Move X2, [X8+24]
	115 Move X1, X21
	116 Call HashSet`1<Object>.Contains, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {99}
	121 Move X0, [X20+16]
	122 Compare X0, 0
	123 JumpIfEqual {188}
	124 Move X8, [X19+32]
	125 Move W10, [X0+28]
	126 Move X9, [X8+192]
	127 Move X8, [X0+16]
	128 Add W10, W10, 1
	129 Move X9, [X9+200]
	130 Move [X0+28], W10
	131 Compare X8, 0
	132 JumpIfEqual {189}
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W11, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add W9, W10, 1
	137 Add X8, X8, X10
	138 Move [X0+24], W9
	139 Move [X8+32], X21
	140 Move X8, [X9+32]
	141 Move X8, [X8+192]
	142 Move X2, [X8+112]
	143 Move X1, X21
	144 Call List`1<Object>.AddWithResize, X0, X1
	145 Move X0, [X20+56]
	146 Compare X0, 0
	147 JumpIfEqual {187}
	148 Move X8, [X19+32]
	149 Move X8, [X8+192]
	150 Move X2, [X8+56]
	151 Move X1, X21
	152 Call HashSet`1<Object>.Add, X0, X1
	153 Move X22, X31
	154 Move W21, 9
	155 Move X8, [X19+32]
	156 Add X0, X31, 32
	157 Move X8, [X8+192]
	158 Move X1, [X8+168]
	159 Call Enumerator<Object>.Dispose, X0
	160 Compare X22, 0
	161 JumpIfNotEqual {191}
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Compare W21, 0
	164 JumpIfNotEqual {177}
	165 Move X8, [X19+32]
	166 Move X0, X20
	167 Move X8, [X8+192]
	168 Move X1, [X8+208]
	169 Call 0x28BA8A8, X0
	170 Move X0, [X20+40]
	171 Compare X0, 0
	172 JumpIfEqual {190}
	173 Move X8, [X19+32]
	174 Move X8, [X8+192]
	175 Move X1, [X8+184]
	176 Call HashSet`1<Object>.Clear, X0
	177 Move X20, [X31+96]
	178 Move X19, [X31+104]
	179 Move X22, [X31+80]
	180 Move X21, [X31+88]
	181 Move X30, [X31+64]
	182 Add X31, X31, 112
	183 Return 
	184 Call 0x1C17F20
	185 Call 0x1C17F20
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Call 0x1C17F20
	191 Move X0, X22
	192 Call 0x1C17F18
	193 Move X21, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X21
	196 Call 0x3EB2AD0
	197 Move X22, [X0]
	198 Call 0x3EB2AE0
	199 Move W21, W31
	200 Move X22, X31
	201 Move X21, X0
	202 Move X8, [X19+32]
	203 Move X8, [X8+192]
	204 Move X1, [X8+168]
	205 Add X0, X31, 32
	206 Call Enumerator<Object>.Dispose, X0
	207 Compare X22, 0
	208 JumpIfEqual {227}
	209 Move X0, X22
	210 Call 0x1C17F18
	211 Move X21, X0
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X0, X21
	214 Call 0x3EB2AD0
	215 Move X22, [X0]
	216 Call 0x3EB2AE0
	217 Move W21, W31
	218 Move X22, X31
	219 Move X21, X0
	220 Move X8, [X19+32]
	221 Move X8, [X8+192]
	222 Move X1, [X8+168]
	223 Add X0, X31, 32
	224 Call Enumerator<Object>.Dispose, X0
	225 Compare X22, 0
	226 JumpIfNotEqual {229}
	227 Move X0, X21
	228 Call 0x1D2D690
	229 Move X0, X22
	230 Call 0x1C17F18
	231 Call 0x1991590

Method: System.Void GetRegisteredItems(System.Collections.Generic.List`1<T> results)

Disassembly:
	0x025C6328 CMP W8, 0x0
	0x025C632C CSEL X1, X19, X28, LT
	0x025C6330 BL 0x3EB1AC0
	0x025C6334 CBZ X25, 0x25C6408
	0x025C6338 LDR X8, [X26 + 0xC0]
	0x025C633C LDR X9, [X8 + 0x10]
	0x025C6340 LDR X1, [X8 + 0x38]
	0x025C6344 LDR W8, [X9 + 0x28]
	0x025C6348 LDR X0, [X1]
	0x025C634C TBNZ X8, 0x1F, 0x25C6354
	0x025C6350 LDR X21, [X21]
	0x025C6354 STUR X21, [X29 - 0x18]
	0x025C6358 LDR X8, [X1 + 0x10]
	0x025C635C SUB X3, X29, 0x18
	0x025C6360 SUB X4, X29, 0xC
	0x025C6364 MOV X2, X25
	0x025C6368 BLR X8
	0x025C636C LDR X22, [X22 + 0x20]
	0x025C6370 LDR X21, [X23 + 0x40]
	0x025C6374 MOV X0, X24
	0x025C6378 MOV X2, X20
	0x025C637C LDR X8, [X22 + 0xC0]
	0x025C6380 LDR X8, [X8 + 0x10]
	0x025C6384 LDR W8, [X8 + 0x28]
	0x025C6388 CMP W8, 0x0
	0x025C638C CSEL X1, X19, X28, LT
	0x025C6390 BL 0x3EB1AC0
	0x025C6394 CBZ X21, 0x25C6408
	0x025C6398 LDR X8, [X22 + 0xC0]
	0x025C639C LDR X9, [X8 + 0x10]
	0x025C63A0 LDR X1, [X8 + 0x28]
	0x025C63A4 LDR W8, [X9 + 0x28]
	0x025C63A8 LDR X0, [X1]
	0x025C63AC TBNZ X8, 0x1F, 0x25C63B4
	0x025C63B0 LDR X24, [X24]
	0x025C63B4 STUR X24, [X29 - 0x18]
	0x025C63B8 LDR X8, [X1 + 0x10]
	0x025C63BC SUB X3, X29, 0x18
	0x025C63C0 SUB X4, X29, 0xC
	0x025C63C4 MOV X2, X21
	0x025C63C8 BLR X8
	0x025C63CC MOVZ W0, 0x1
	0x025C63D0 B 0x25C63D8
	0x025C63D4 MOV W0, W31
	0x025C63D8 LDR X8, [X27 + 0x28]
	0x025C63DC LDUR X9, [X29 - 0x8]
	0x025C63E0 CMP X8, X9
	0x025C63E4 B.NE 0x25C640C
	0x025C63E8 ADD X31, X29, 0x0
	0x025C63EC LDP X20, X19, [X31 + 0x50]
	0x025C63F0 LDP X22, X21, [X31 + 0x40]
	0x025C63F4 LDP X24, X23, [X31 + 0x30]
	0x025C63F8 LDP X26, X25, [X31 + 0x20]
	0x025C63FC LDP X28, X27, [X31 + 0x10]
	0x025C6400 LDP X29, X30, [X31], #0x60
	0x025C6404 RET
	0x025C6408 BL 0x1C16F20
	0x025C640C BL 0x3EB1B20
	0x025C6410 STP X29, X30, [X31 - 0x60]!
	0x025C6414 STP X28, X27, [X31 + 0x10]
	0x025C6418 STP X26, X25, [X31 + 0x20]
	0x025C641C STP X24, X23, [X31 + 0x30]
	0x025C6420 STP X22, X21, [X31 + 0x40]
	0x025C6424 STP X20, X19, [X31 + 0x50]
	0x025C6428 ADD X29, X31, 0x0
	0x025C642C SUB X31, X31, 0x40
	0x025C6430 MRS X8, 0xC000
	0x025C6434 STUR X8, [X29 - 0x30]
	0x025C6438 LDR X8, [X8 + 0x28]
	0x025C643C MOV X19, X1
	0x025C6440 MOV X20, X0
	0x025C6444 STUR X8, [X29 - 0x8]
	0x025C6448 LDR X8, [X19 + 0x20]!
	0x025C644C LDR X9, [X8 + 0xC0]
	0x025C6450 LDR X8, [X9 + 0x78]
	0x025C6454 LDR X10, [X9 + 0x10]
	0x025C6458 ADD X9, X8, 0x135
	0x025C645C LDR W26, [X8 + 0xFC]
	0x025C6460 LDRH W9, [X9]
	0x025C6464 LDR W23, [X10 + 0xFC]
	0x025C6468 TBNZ X9, 0x0, 0x25C6490
	0x025C646C MOV X0, X8
	0x025C6470 BL 0x1C5C684
	0x025C6474 LDR X8, [X19]
	0x025C6478 LDR W10, [X0 + 0xFC]
	0x025C647C LDR X8, [X8 + 0xC0]
	0x025C6480 LDR X8, [X8 + 0x78]
	0x025C6484 ADD X9, X8, 0x135
	0x025C6488 LDRH W9, [X9]
	0x025C648C B 0x25C6494
	0x025C6490 MOV W10, W26
	0x025C6494 ADD W10, W10, 0x10
	0x025C6498 ADD X10, X10, 0xF
	0x025C649C ADD X11, X31, 0x0
	0x025C64A0 AND X10, X10, 0x1FFFFFFFF
	0x025C64A4 SUB X10, X11, X10
	0x025C64A8 ADD X31, X10, 0x0
	0x025C64AC STUR X10, [X29 - 0x38]
	0x025C64B0 TBNZ X9, 0x0, 0x25C64C0
	0x025C64B4 MOV X0, X8
	0x025C64B8 BL 0x1C5C684
	0x025C64BC MOV X8, X0
	0x025C64C0 LDR W8, [X8 + 0xFC]
	0x025C64C4 ADD X9, X31, 0x0
	0x025C64C8 ADD W8, W8, 0x10
	0x025C64CC ADD X8, X8, 0xF
	0x025C64D0 AND X8, X8, 0x1FFFFFFFF
	0x025C64D4 SUB X8, X9, X8
	0x025C64D8 STUR X8, [X29 - 0x40]
	0x025C64DC ADD X31, X8, 0x0
	0x025C64E0 ADD X9, X23, 0xF
	0x025C64E4 ADD X8, X31, 0x0
	0x025C64E8 AND X22, X9, 0x1FFFFFFFF
	0x025C64EC SUB X24, X8, X22
	0x025C64F0 ADD X31, X24, 0x0
	0x025C64F4 ADD X8, X31, 0x0
	0x025C64F8 SUB X25, X8, X22
	0x025C64FC ADD X31, X25, 0x0
	0x025C6500 ADD X8, X31, 0x0
	0x025C6504 SUB X28, X8, X22
	0x025C6508 ADD X31, X28, 0x0
	0x025C650C ADD X9, X26, 0xF
	0x025C6510 ADD X8, X31, 0x0
	0x025C6514 AND X9, X9, 0x1FFFFFFFF
	0x025C6518 SUB X8, X8, X9
	0x025C651C STP X8, X26, [X29 - 0x28]
	0x025C6520 ADD X31, X8, 0x0
	0x025C6524 ADD X8, X31, 0x0
	0x025C6528 SUB X21, X8, X9
	0x025C652C ADD X31, X21, 0x0
	0x025C6530 MOV X0, X21
	0x025C6534 MOV W1, W31
	0x025C6538 MOV X2, X26
	0x025C653C BL 0x3EB1B10
	0x025C6540 ADD X8, X31, 0x0
	0x025C6544 SUB X27, X8, X22
	0x025C6548 ADD X31, X27, 0x0
	0x025C654C MOV X0, X27
	0x025C6550 MOV W1, W31
	0x025C6554 MOV X2, X23
	0x025C6558 BL 0x3EB1B10
	0x025C655C ADD X8, X31, 0x0
	0x025C6560 SUB X26, X8, X22
	0x025C6564 ADD X31, X26, 0x0
	0x025C6568 MOV X0, X26
	0x025C656C MOV W1, W31
	0x025C6570 MOV X2, X23
	0x025C6574 BL 0x3EB1B10
	0x025C6578 CBZ X20, 0x25C6A14
	0x025C657C LDR X8, [X19]
	0x025C6580 MOV X0, X20
	0x025C6584 LDR X8, [X8 + 0xC0]
	0x025C6588 LDR X1, [X8 + 0x58]
	0x025C658C LDR X8, [X1]
	0x025C6590 BLR X8
	0x025C6594 CMP W0, 0x1
	0x025C6598 B.LT 0x25C6778
	0x025C659C LDR X2, [X20 + 0x20]
	0x025C65A0 CBZ X2, 0x25C6A14
	0x025C65A4 LDR X8, [X19]
	0x025C65A8 LDUR X22, [X29 - 0x28]
	0x025C65AC SUB X3, X29, 0x18
	0x025C65B0 LDR X8, [X8 + 0xC0]
	0x025C65B4 MOV X4, X22
	0x025C65B8 LDR X1, [X8 + 0x70]
	0x025C65BC LDR X0, [X1]
	0x025C65C0 STUR X22, [X29 - 0x18]
	0x025C65C4 LDR X8, [X1 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X19, X2
	009 Move [X31+32], X31
	010 Move [X31+40], X31
	011 Move [X31+48], X31
	012 Compare X1, 0
	013 JumpIfEqual {145}
	014 Move W2, [X1+24]
	015 Move W8, [X1+28]
	016 Move X20, X1
	017 Move X21, X0
	018 Add W8, W8, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move [X1+24], W31
	021 Move [X1+28], W8
	022 Move X0, [X20+16]
	023 Move W1, W31
	024 Move X3, X31
	025 Call Array.Clear, X0, X1, X2
	026 Compare X21, 0
	027 JumpIfEqual {144}
	028 Move X8, [X19+32]
	029 Move X0, X21
	030 Move X8, [X8+192]
	031 Move X1, [X8+224]
	032 Call 0x28BA738, X0
	033 Move X8, [X19+32]
	034 Move W22, W0
	035 Move X8, [X8+192]
	036 Move X8, [X8+240]
	037 Move W9, [X8+309]
	038 Move TEMP, X9
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X8
	043 Call 0x1C5D684
	044 Move X8, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X8, [X19+32]
	051 Move X0, X20
	052 Move W1, W22
	053 Move X8, [X8+192]
	054 Move X2, [X8+232]
	055 Call 0x28BAD6C, X0, X1
	056 Move X0, [X21+16]
	057 Compare X0, 0
	058 JumpIfEqual {144}
	059 Move X8, [X19+32]
	060 Move X8, [X8+192]
	061 Move X1, [X8+112]
	062 Add X8, X31, 8
	063 Call List`1<Object>.GetEnumerator, X0
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X8, [X31+24]
	066 Move [X31+2], V0
	067 Move [X31+48], X8
	068 Move X8, [X19+32]
	069 Move X8, [X8+192]
	070 Move X1, [X8+160]
	071 Add X0, X31, 32
	072 Call Enumerator<Object>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {114}
	077 Move X0, [X21+48]
	078 Compare X0, 0
	079 JumpIfEqual {142}
	080 Move X8, [X19+32]
	081 Move W9, [X0+32]
	082 Move X22, [X31+48]
	083 Move X8, [X8+192]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X2, [X8+24]
	086 Move X1, X22
	087 Call HashSet`1<Object>.Contains, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {68}
	092 Move X8, [X19+32]
	093 Move X8, [X8+192]
	094 Move W10, [X20+28]
	095 Move X9, [X20+16]
	096 Move X8, [X8+200]
	097 Add W10, W10, 1
	098 Move [X20+28], W10
	099 Compare X9, 0
	100 JumpIfEqual {143}
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Move W11, [X9+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add W8, W10, 1
	105 Add X9, X9, X10
	106 Move [X20+24], W8
	107 Move [X9+32], X22
	108 Move X8, [X8+32]
	109 Move X8, [X8+192]
	110 Move X2, [X8+112]
	111 Move X0, X20
	112 Move X1, X22
	113 Call List`1<Object>.AddWithResize, X0, X1
	114 Move X23, X31
	115 Move X8, [X19+32]
	116 Add X0, X31, 32
	117 Move X8, [X8+192]
	118 Move X1, [X8+168]
	119 Call Enumerator<Object>.Dispose, X0
	120 Compare X23, 0
	121 JumpIfNotEqual {160}
	122 Move X8, [X19+32]
	123 Move X0, X21
	124 Move X8, [X8+192]
	125 Move X1, [X8+192]
	126 Call 0x28BA774, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X8, [X19+32]
	129 Move X1, [X21+24]
	130 Move X0, X20
	131 Move X8, [X8+192]
	132 Move X2, [X8+248]
	133 Call List`1<Object>.AddRange, X0, X1
	134 Move X20, [X31+96]
	135 Move X19, [X31+104]
	136 Move X22, [X31+80]
	137 Move X21, [X31+88]
	138 Move X30, [X31+64]
	139 Move X23, [X31+72]
	140 Add X31, X31, 112
	141 Return 
	142 Call 0x1C17F20
	143 Call 0x1C17F20
	144 Call 0x1C17F20
	145 Move X0, 0x1B33000
	146 Move X0, [X0+1320]
	147 Call 0x1C17D08
	148 Call 0x1C17F10
	149 Move X20, X0
	150 Move X0, 0x1B56000
	151 Move X0, [X0+2648]
	152 Call 0x1C17D08
	153 Move X1, X0
	154 Move X0, X20
	155 Move X2, X31
	156 Call ArgumentNullException..ctor, X0, X1
	157 Move X0, X20
	158 Move X1, X19
	159 Call 0x1C17DEC
	160 Move X0, X23
	161 Call 0x1C17F18
	162 Move X22, X0
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, X22
	165 Call 0x3EB2AD0
	166 Move X23, [X0]
	167 Call 0x3EB2AE0
	168 Move X23, X31
	169 Move X22, X0
	170 Move X8, [X19+32]
	171 Move X8, [X8+192]
	172 Move X1, [X8+168]
	173 Add X0, X31, 32
	174 Call Enumerator<Object>.Dispose, X0
	175 Compare X23, 0
	176 JumpIfNotEqual {179}
	177 Move X0, X22
	178 Call 0x1D2D690
	179 Move X0, X23
	180 Call 0x1C17F18
	181 Call 0x1991590

Method: T GetRegisteredItemAt(System.Int32 index)

Disassembly:
	0x025C65C8 BLR X8
	0x025C65CC LDUR X2, [X29 - 0x20]
	0x025C65D0 MOV X0, X21
	0x025C65D4 MOV X1, X22
	0x025C65D8 BL 0x3EB1AC0
	0x025C65DC LDR X8, [X19]
	0x025C65E0 LDR X8, [X8 + 0xC0]
	0x025C65E4 LDR X1, [X8 + 0xA0]
	0x025C65E8 LDR X8, [X1]
	0x025C65EC MOV X0, X21
	0x025C65F0 BLR X8
	0x025C65F4 TBZ X0, 0x0, 0x25C66F4
	0x025C65F8 LDR X8, [X19]
	0x025C65FC LDR X8, [X8 + 0xC0]
	0x025C6600 LDR X1, [X8 + 0x80]
	0x025C6604 LDR X0, [X1]
	0x025C6608 STUR X24, [X29 - 0x18]
	0x025C660C LDR X8, [X1 + 0x10]
	0x025C6610 SUB X3, X29, 0x18
	0x025C6614 MOV X2, X21
	0x025C6618 MOV X4, X24
	0x025C661C BLR X8
	0x025C6620 MOV X0, X27
	0x025C6624 MOV X1, X24
	0x025C6628 MOV X2, X23
	0x025C662C BL 0x3EB1AC0
	0x025C6630 LDR X8, [X19]
	0x025C6634 LDR X8, [X8 + 0xC0]
	0x025C6638 LDR X1, [X8 + 0x90]
	0x025C663C LDR X8, [X1]
	0x025C6640 MOV X0, X20
	0x025C6644 BLR X8
	0x025C6648 MOV X22, X0
	0x025C664C MOV X0, X25
	0x025C6650 MOV X1, X27
	0x025C6654 MOV X2, X23
	0x025C6658 BL 0x3EB1AC0
	0x025C665C CBZ X22, 0x25C6A00
	0x025C6660 LDR X8, [X19]
	0x025C6664 LDR X8, [X8 + 0xC0]
	0x025C6668 LDR X9, [X8 + 0x10]
	0x025C666C LDR W10, [X9 + 0x28]
	0x025C6670 MOV X9, X25
	0x025C6674 TBNZ X10, 0x1F, 0x25C667C
	0x025C6678 LDR X9, [X25]
	0x025C667C LDR X1, [X8 + 0x98]
	0x025C6680 LDR X0, [X1]
	0x025C6684 STUR X9, [X29 - 0x18]
	0x025C6688 LDR X8, [X1 + 0x10]
	0x025C668C SUB X3, X29, 0x18
	0x025C6690 SUB X4, X29, 0xC
	0x025C6694 MOV X2, X22
	0x025C6698 BLR X8
	0x025C669C LDR X22, [X20 + 0x38]
	0x025C66A0 MOV X0, X28
	0x025C66A4 MOV X1, X27
	0x025C66A8 MOV X2, X23
	0x025C66AC BL 0x3EB1AC0
	0x025C66B0 CBZ X22, 0x25C6A04
	0x025C66B4 LDR X8, [X19]
	0x025C66B8 LDR X8, [X8 + 0xC0]
	0x025C66BC LDR X9, [X8 + 0x10]
	0x025C66C0 LDR W10, [X9 + 0x28]
	0x025C66C4 MOV X9, X28
	0x025C66C8 TBNZ X10, 0x1F, 0x25C66D0
	0x025C66CC LDR X9, [X28]
	0x025C66D0 LDR X1, [X8 + 0x28]
	0x025C66D4 LDR X0, [X1]
	0x025C66D8 STUR X9, [X29 - 0x18]
	0x025C66DC LDR X8, [X1 + 0x10]
	0x025C66E0 SUB X3, X29, 0x18
	0x025C66E4 SUB X4, X29, 0xC
	0x025C66E8 MOV X2, X22
	0x025C66EC BLR X8
	0x025C66F0 B 0x25C65DC
	0x025C66F4 MOV X27, X31
	0x025C66F8 MOVZ W22, 0x5
	0x025C66FC LDR X8, [X19]
	0x025C6700 LDR X8, [X8 + 0xC0]
	0x025C6704 LDR X0, [X8 + 0x78]
	0x025C6708 LDRB W9, [X0 + 0x135]
	0x025C670C TBNZ X9, 0x0, 0x25C671C
	0x025C6710 BL 0x1C5C684
	0x025C6714 LDR X8, [X19]
	0x025C6718 LDR X8, [X8 + 0xC0]
	0x025C671C LDUR X2, [X29 - 0x38]
	0x025C6720 LDR X1, [X8 + 0xA8]
	0x025C6724 MOV X3, X21
	0x025C6728 MOV X4, X31
	0x025C672C MOV X5, X31
	0x025C6730 BL 0x1C17728
	0x025C6734 CBNZ X27, 0x25C6A18
	0x025C6738 CMP W22, 0x5
	0x025C673C B.EQ 0x25C6744
	0x025C6740 CBNZ W22, 0x25C69CC
	0x025C6744 LDR X8, [X19]
	0x025C6748 MOV X0, X20
	0x025C674C LDR X8, [X8 + 0xC0]
	0x025C6750 LDR X1, [X8 + 0xB0]
	0x025C6754 LDR X8, [X1]
	0x025C6758 BLR X8
	0x025C675C LDR X0, [X20 + 0x30]
	0x025C6760 CBZ X0, 0x25C6A14
	0x025C6764 LDR X8, [X19]
	0x025C6768 LDR X8, [X8 + 0xC0]
	0x025C676C LDR X1, [X8 + 0xB8]
	0x025C6770 LDR X8, [X1]
	0x025C6774 BLR X8
	0x025C6778 LDR X8, [X19]
	0x025C677C MOV X0, X20
	0x025C6780 LDR X8, [X8 + 0xC0]
	0x025C6784 LDR X1, [X8 + 0xC0]
	0x025C6788 LDR X8, [X1]
	0x025C678C BLR X8
	0x025C6790 CMP W0, 0x0
	0x025C6794 B.LE 0x25C69CC
	0x025C6798 LDR X2, [X20 + 0x18]
	0x025C679C CBZ X2, 0x25C6A14
	0x025C67A0 LDR X8, [X19]
	0x025C67A4 LDUR X22, [X29 - 0x28]
	0x025C67A8 SUB X3, X29, 0x18
	0x025C67AC LDR X8, [X8 + 0xC0]
	0x025C67B0 MOV X4, X22
	0x025C67B4 LDR X1, [X8 + 0x70]
	0x025C67B8 LDR X0, [X1]
	0x025C67BC STUR X22, [X29 - 0x18]
	0x025C67C0 LDR X8, [X1 + 0x10]
	0x025C67C4 BLR X8
	0x025C67C8 LDUR X2, [X29 - 0x20]
	0x025C67CC MOV X0, X21
	0x025C67D0 MOV X1, X22
	0x025C67D4 BL 0x3EB1AC0
	0x025C67D8 LDR X8, [X19]
	0x025C67DC LDR X8, [X8 + 0xC0]
	0x025C67E0 LDR X1, [X8 + 0xA0]
	0x025C67E4 LDR X8, [X1]
	0x025C67E8 MOV X0, X21
	0x025C67EC BLR X8
	0x025C67F0 TBZ X0, 0x0, 0x25C6948
	0x025C67F4 LDR X8, [X19]
	0x025C67F8 LDR X8, [X8 + 0xC0]
	0x025C67FC LDR X1, [X8 + 0x80]
	0x025C6800 LDR X0, [X1]
	0x025C6804 STUR X24, [X29 - 0x18]
	0x025C6808 LDR X8, [X1 + 0x10]
	0x025C680C SUB X3, X29, 0x18
	0x025C6810 MOV X2, X21
	0x025C6814 MOV X4, X24
	0x025C6818 BLR X8
	0x025C681C MOV X0, X26
	0x025C6820 MOV X1, X24
	0x025C6824 MOV X2, X23
	0x025C6828 BL 0x3EB1AC0
	0x025C682C LDR X22, [X20 + 0x38]
	0x025C6830 MOV X0, X25
	0x025C6834 MOV X1, X26
	0x025C6838 MOV X2, X23
	0x025C683C BL 0x3EB1AC0
	0x025C6840 CBZ X22, 0x25C6A08
	0x025C6844 LDR X8, [X19]
	0x025C6848 LDR X8, [X8 + 0xC0]
	0x025C684C LDR X9, [X8 + 0x10]
	0x025C6850 LDR W10, [X9 + 0x28]
	0x025C6854 MOV X9, X25
	0x025C6858 TBNZ X10, 0x1F, 0x25C6860
	0x025C685C LDR X9, [X25]
	0x025C6860 LDR X1, [X8 + 0x18]
	0x025C6864 LDR X0, [X1]
	0x025C6868 STUR X9, [X29 - 0x18]
	0x025C686C LDR X8, [X1 + 0x10]
	0x025C6870 SUB X3, X29, 0x18
	0x025C6874 SUB X4, X29, 0x10
	0x025C6878 MOV X2, X22
	0x025C687C BLR X8
	0x025C6880 LDURB W8, [X29 - 0x10]
	0x025C6884 CBNZ W8, 0x25C67D8
	0x025C6888 LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X19, X2
	009 Move [X31+32], X31
	010 Move [X31+40], X31
	011 Move [X31+48], X31
	012 Move TEMP, X1
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {129}
	016 Move X21, X0
	017 Compare X0, 0
	018 JumpIfEqual {168}
	019 Move X8, [X19+32]
	020 Move W20, W1
	021 Move X0, X21
	022 Move X8, [X8+192]
	023 Move X1, [X8+224]
	024 Call 0x28BA738, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+32]
	027 Move X0, X21
	028 Move X8, [X8+192]
	029 Move X1, [X8+88]
	030 Call 0x28BA78C, X0
	031 Compare W0, 0
	032 JumpIfNotEqual {40}
	033 Move X8, [X19+32]
	034 Move X0, X21
	035 Move X8, [X8+192]
	036 Move X1, [X8+192]
	037 Call 0x28BA774, X0
	038 Compare W0, 0
	039 JumpIfEqual {149}
	040 Move X8, [X21+16]
	041 Compare X8, 0
	042 JumpIfEqual {168}
	043 Move X9, [X19+32]
	044 Move W22, [X8+24]
	045 Move X0, X21
	046 Move X9, [X9+192]
	047 Move X1, [X9+88]
	048 Call 0x28BA78C, X0
	049 Subtract W8, W22, W0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X21+16]
	052 Compare X0, 0
	053 JumpIfEqual {168}
	054 Move X8, [X19+32]
	055 Move X8, [X8+192]
	056 Move X1, [X8+112]
	057 Add X8, X31, 8
	058 Call List`1<Object>.GetEnumerator, X0
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X8, [X31+24]
	061 Move W22, W31
	062 Move [X31+2], V0
	063 Move [X31+48], X8
	064 Move X8, [X19+32]
	065 Move X8, [X8+192]
	066 Move X1, [X8+160]
	067 Add X0, X31, 32
	068 Call Enumerator<Object>.MoveNext, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {116}
	073 Move X0, [X21+48]
	074 Compare X0, 0
	075 JumpIfEqual {167}
	076 Move X8, [X19+32]
	077 Move X1, [X31+48]
	078 Move X8, [X8+192]
	079 Move X2, [X8+24]
	080 Call HashSet`1<Object>.Contains, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {64}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W22, W22, 1
	087 Move X0, [X21+16]
	088 Compare X0, 0
	089 JumpIfEqual {171}
	090 Move X8, [X19+32]
	091 Move X8, [X8+192]
	092 Move X2, [X8+264]
	093 Move W1, W20
	094 Call List`1<Object>.get_Item, X0, X1
	095 Move X21, X0
	096 Move X20, X31
	097 Move W22, 11
	098 Move X8, [X21+16]
	099 Compare X8, 0
	100 JumpIfEqual {168}
	101 Move X9, [X19+32]
	102 Move X22, [X21+24]
	103 Move W23, [X8+24]
	104 Move X0, X21
	105 Move X9, [X9+192]
	106 Move X1, [X9+88]
	107 Call 0x28BA78C, X0
	108 Compare X22, 0
	109 JumpIfEqual {168}
	110 Move X8, [X19+32]
	111 Move X8, [X8+192]
	112 Move X2, [X8+264]
	113 Subtract W8, W20, W23
	114 Add W1, W8, W0
	115 Move X0, X22
	116 Move X20, X31
	117 Move X21, X31
	118 Move W22, 12
	119 Move X8, [X19+32]
	120 Add X0, X31, 32
	121 Move X8, [X8+192]
	122 Move X1, [X8+168]
	123 Call Enumerator<Object>.Dispose, X0
	124 Compare X20, 0
	125 JumpIfNotEqual {169}
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Compare W22, 0
	128 JumpIfNotEqual {158}
	129 Move X0, 0x1B36000
	130 Move X0, [X0+1888]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X20, X0
	134 Move X0, 0x1B39000
	135 Move X0, [X0+304]
	136 Call 0x1C17D08
	137 Move X21, X0
	138 Move X0, 0x1B58000
	139 Move X0, [X0+208]
	140 Call 0x1C17D08
	141 Move X2, X0
	142 Move X0, X20
	143 Move X1, X21
	144 Move X3, X31
	145 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	146 Move X0, X20
	147 Move X1, X19
	148 Call 0x1C17DEC
	149 Move X0, [X21+16]
	150 Compare X0, 0
	151 JumpIfEqual {168}
	152 Move X8, [X19+32]
	153 Move W1, W20
	154 Move X8, [X8+192]
	155 Move X2, [X8+264]
	156 Call List`1<Object>.get_Item, X0, X1
	157 Move X21, X0
	158 Move X0, X21
	159 Move X20, [X31+96]
	160 Move X19, [X31+104]
	161 Move X22, [X31+80]
	162 Move X21, [X31+88]
	163 Move X30, [X31+64]
	164 Move X23, [X31+72]
	165 Add X31, X31, 112
	166 Return X0
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Move X0, X20
	170 Call 0x1C17F18
	171 Call 0x1C17F20
	172 Move X21, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X21
	175 Call 0x3EB2AD0
	176 Move X20, [X0]
	177 Call 0x3EB2AE0
	178 Move W22, W31
	179 Move X21, X31
	180 Move X20, X31
	181 Move X21, X0
	182 Move X8, [X19+32]
	183 Move X8, [X8+192]
	184 Move X1, [X8+168]
	185 Add X0, X31, 32
	186 Call Enumerator<Object>.Dispose, X0
	187 Compare X20, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X21
	190 Call 0x1D2D690
	191 Move X0, X20
	192 Call 0x1C17F18
	193 Call 0x1991590

Method: System.Void OnItemMovedImmediately(T item, System.Int32 newIndex)

Disassembly:
	0x025C688C LDR X8, [X8 + 0xC0]
	0x025C6890 LDR X1, [X8 + 0x90]
	0x025C6894 LDR X8, [X1]
	0x025C6898 MOV X0, X20
	0x025C689C BLR X8
	0x025C68A0 MOV X22, X0
	0x025C68A4 MOV X0, X24
	0x025C68A8 MOV X1, X26
	0x025C68AC MOV X2, X23
	0x025C68B0 BL 0x3EB1AC0
	0x025C68B4 CBZ X22, 0x25C6A0C
	0x025C68B8 LDR X8, [X19]
	0x025C68BC MOV X4, X24
	0x025C68C0 LDR X8, [X8 + 0xC0]
	0x025C68C4 LDR X9, [X8 + 0x10]
	0x025C68C8 LDR W9, [X9 + 0x28]
	0x025C68CC TBNZ X9, 0x1F, 0x25C68D4
	0x025C68D0 LDR X4, [X24]
	0x025C68D4 LDR X1, [X8 + 0xC8]
	0x025C68D8 LDR X0, [X1]
	0x025C68DC STUR X4, [X29 - 0x18]
	0x025C68E0 LDR X8, [X1 + 0x10]
	0x025C68E4 SUB X3, X29, 0x18
	0x025C68E8 MOV X2, X22
	0x025C68EC BLR X8
	0x025C68F0 LDR X22, [X20 + 0x38]
	0x025C68F4 MOV X0, X25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {35}
	007 Move X8, [X3+32]
	008 Move X20, X3
	009 Move X19, X1
	010 Move X21, X0
	011 Move X8, [X8+192]
	012 Move X3, [X8+280]
	013 Call 0x28BABD8, X0, X1, X2
	014 Move X0, [X21+64]
	015 Compare X0, 0
	016 JumpIfEqual {35}
	017 Move X8, [X20+32]
	018 Move X1, X19
	019 Move X8, [X8+192]
	020 Move X2, [X8+56]
	021 Call HashSet`1<Object>.Add, X0, X1
	022 Move X0, [X21+56]
	023 Compare X0, 0
	024 JumpIfEqual {35}
	025 Move X8, [X20+32]
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+192]
	030 Move X2, [X8+56]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call HashSet`1<Object>.Add, X0, X1
	034 Return 
	035 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x025C68F8 MOV X1, X26
	0x025C68FC MOV X2, X23
	0x025C6900 BL 0x3EB1AC0
	0x025C6904 CBZ X22, 0x25C6A10
	0x025C6908 LDR X8, [X19]
	0x025C690C LDR X8, [X8 + 0xC0]
	0x025C6910 LDR X9, [X8 + 0x10]
	0x025C6914 LDR W10, [X9 + 0x28]
	0x025C6918 MOV X9, X25
	0x025C691C TBNZ X10, 0x1F, 0x25C6924
	0x025C6920 LDR X9, [X25]
	0x025C6924 LDR X1, [X8 + 0x38]
	0x025C6928 LDR X0, [X1]
	0x025C692C STUR X9, [X29 - 0x18]
	0x025C6930 LDR X8, [X1 + 0x10]
	0x025C6934 SUB X3, X29, 0x18
	0x025C6938 SUB X4, X29, 0x10
	0x025C693C MOV X2, X22
	0x025C6940 BLR X8
	0x025C6944 B 0x25C67D8
	0x025C6948 MOV X22, X31
	0x025C694C MOVZ W23, 0x9
	0x025C6950 LDR X8, [X19]
	0x025C6954 LDR X8, [X8 + 0xC0]
	0x025C6958 LDR X0, [X8 + 0x78]
	0x025C695C LDRB W9, [X0 + 0x135]
	0x025C6960 TBNZ X9, 0x0, 0x25C6970
	0x025C6964 BL 0x1C5C684
	0x025C6968 LDR X8, [X19]
	0x025C696C LDR X8, [X8 + 0xC0]
	0x025C6970 LDUR X2, [X29 - 0x40]
	0x025C6974 LDR X1, [X8 + 0xA8]
	0x025C6978 MOV X3, X21
	0x025C697C MOV X4, X31
	0x025C6980 MOV X5, X31
	0x025C6984 BL 0x1C17728
	0x025C6988 CBNZ X22, 0x25C6A20
	0x025C698C CMP W23, 0x9
	0x025C6990 B.EQ 0x25C6998
	0x025C6994 CBNZ W23, 0x25C69CC
	0x025C6998 LDR X8, [X19]
	0x025C699C MOV X0, X20
	0x025C69A0 LDR X8, [X8 + 0xC0]
	0x025C69A4 LDR X1, [X8 + 0xD0]
	0x025C69A8 LDR X8, [X1]
	0x025C69AC BLR X8
	0x025C69B0 LDR X0, [X20 + 0x28]
	0x025C69B4 CBZ X0, 0x25C6A14
	0x025C69B8 LDR X8, [X19]
	0x025C69BC LDR X8, [X8 + 0xC0]
	0x025C69C0 LDR X1, [X8 + 0xB8]
	0x025C69C4 LDR X8, [X1]
	0x025C69C8 BLR X8
	0x025C69CC LDUR X8, [X29 - 0x30]
	0x025C69D0 LDR X8, [X8 + 0x28]
	0x025C69D4 LDUR X9, [X29 - 0x8]
	0x025C69D8 CMP X8, X9
	0x025C69DC B.NE 0x25C6A28
	0x025C69E0 ADD X31, X29, 0x0
	0x025C69E4 LDP X20, X19, [X31 + 0x50]
	0x025C69E8 LDP X22, X21, [X31 + 0x40]
	0x025C69EC LDP X24, X23, [X31 + 0x30]
	0x025C69F0 LDP X26, X25, [X31 + 0x20]
	0x025C69F4 LDP X28, X27, [X31 + 0x10]
	0x025C69F8 LDP X29, X30, [X31], #0x60
	0x025C69FC RET
	0x025C6A00 BL 0x1C16F20
	0x025C6A04 BL 0x1C16F20
	0x025C6A08 BL 0x1C16F20
	0x025C6A0C BL 0x1C16F20
	0x025C6A10 BL 0x1C16F20
	0x025C6A14 BL 0x1C16F20
	0x025C6A18 MOV X0, X27
	0x025C6A1C BL 0x1C16F18
	0x025C6A20 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move X8, [X8+192]
	009 Move X8, [X8+8]
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X0, X8
	019 Call 0x1C17F10
	020 Move X8, [X19+32]
	021 Move X21, X0
	022 Move X8, [X8+192]
	023 Move X1, [X8+288]
	024 Call HashSet`1<Object>..ctor, X0
	025 Move [X20+40], X21
	026 Move X8, [X19+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8+8]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Call 0x1C17F10
	036 Move X8, [X19+32]
	037 Move X21, X0
	038 Move X8, [X8+192]
	039 Move X1, [X8+288]
	040 Call HashSet`1<Object>..ctor, X0
	041 Move [X20+48], X21
	042 Move X8, [X19+32]
	043 Move X8, [X8+192]
	044 Move X0, [X8+8]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Call 0x1C17F10
	052 Move X8, [X19+32]
	053 Move X21, X0
	054 Move X8, [X8+192]
	055 Move X1, [X8+288]
	056 Call HashSet`1<Object>..ctor, X0
	057 Move [X20+56], X21
	058 Move X8, [X19+32]
	059 Move X8, [X8+192]
	060 Move X0, [X8+8]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Call 0x1C17F10
	068 Move X8, [X19+32]
	069 Move X21, X0
	070 Move X8, [X8+192]
	071 Move X1, [X8+288]
	072 Call HashSet`1<Object>..ctor, X0
	073 Move [X20+64], X21
	074 Move X8, [X19+32]
	075 Move X8, [X8+192]
	076 Move X0, [X8+240]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X8, [X19+32]
	088 Move X0, X20
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X8, [X8+192]
	092 Move X1, [X8+296]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Call 0x28BADE8, X0
	096 Return 

