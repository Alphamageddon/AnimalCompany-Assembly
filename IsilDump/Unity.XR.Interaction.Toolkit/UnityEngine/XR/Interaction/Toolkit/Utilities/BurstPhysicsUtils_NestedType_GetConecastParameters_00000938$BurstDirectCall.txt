Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstPhysicsUtils/GetConecastParameters_00000938$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B8E16C ADD X8, X8, X9, 0x4, LSL
	0x03B8E170 ADD X0, X8, 0x138
	0x03B8E174 LDP X8, X1, [X0]
	0x03B8E178 MOV X0, X23
	0x03B8E17C BLR X8
	0x03B8E180 TBZ X0, 0x0, 0x3B8E10C
	0x03B8E184 LDR X8, [X23]
	0x03B8E188 LDR X1, [X28]
	0x03B8E18C LDRH W9, [X8 + 0x12E]
	0x03B8E190 CBZ X9, 0x3B8E1B4
	0x03B8E194 LDR X10, [X8 + 0xB0]
	0x03B8E198 ADD X10, X10, 0x8
	0x03B8E19C LDUR X11, [X10 - 0x8]
	0x03B8E1A0 CMP X11, X1
	0x03B8E1A4 B.EQ 0x3B8E1C4
	0x03B8E1A8 SUBS X9, X9, 0x1
	0x03B8E1AC ADD X10, X10, 0x10
	0x03B8E1B0 B.NE 0x3B8E19C
	0x03B8E1B4 MOVZ W2, 0x1
	0x03B8E1B8 MOV X0, X23
	0x03B8E1BC BL 0x1C5C788
	0x03B8E1C0 B 0x3B8E1D4
	0x03B8E1C4 LDR W9, [X10]
	0x03B8E1C8 ADD W9, W9, 0x1
	0x03B8E1CC ADD X8, X8, W9, 0x4, SXTW
	0x03B8E1D0 ADD X0, X8, 0x138
	0x03B8E1D4 LDP X8, X3, [X0]
	0x03B8E1D8 MOV X0, X23
	0x03B8E1DC MOV X1, X21
	0x03B8E1E0 MOV X2, X20
	0x03B8E1E4 BLR X8
	0x03B8E1E8 TBNZ X0, 0x0, 0x3B8E10C
	0x03B8E1EC MOV W27, W31
	0x03B8E1F0 B 0x3B8E1F8
	0x03B8E1F4 MOVZ W27, 0x1
	0x03B8E1F8 MOV X23, X31
	0x03B8E1FC EOR W22, W22, 0x1
	0x03B8E200 LDR X1, [X26]
	0x03B8E204 ADD X0, X31, 0x20
	0x03B8E208 BL 0x2BC434C
	0x03B8E20C CBNZ X23, 0x3B8E268
	0x03B8E210 MOV X21, X31
	0x03B8E214 CBNZ W25, 0x3B8E228
	0x03B8E218 LDR X2, [X24]
	0x03B8E21C MOV X0, X19
	0x03B8E220 MOV W1, W31
	0x03B8E224 BL 0x25E89B0
	0x03B8E228 CBZ X21, 0x3B8E238
	0x03B8E22C MOV X0, X21
	0x03B8E230 BL 0x1C16F18
	0x03B8E234 MOVZ W22, 0x1
	0x03B8E238 AND W0, W22, 0x1
	0x03B8E23C LDP X20, X19, [X31 + 0x90]
	0x03B8E240 LDP X22, X21, [X31 + 0x80]
	0x03B8E244 LDP X24, X23, [X31 + 0x70]
	0x03B8E248 LDP X26, X25, [X31 + 0x60]
	0x03B8E24C LDP X28, X27, [X31 + 0x50]
	0x03B8E250 LDR X30, [X31 + 0x40]
	0x03B8E254 ADD X31, X31, 0xA0
	0x03B8E258 RET
	0x03B8E25C BL 0x1C16F20
	0x03B8E260 BL 0x1C16F20
	0x03B8E264 BL 0x1C16F20
	0x03B8E268 MOV X0, X23
	0x03B8E26C BL 0x1C16F18
	0x03B8E270 B 0x3B8E274
	0x03B8E274 MOV X21, X1
	0x03B8E278 MOV X20, X0
	0x03B8E27C MOVZ W22, 0x1
	0x03B8E280 B 0x3B8E2E8
	0x03B8E284 MOV X21, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x855000
	008 Move X23, 0x5CF000
	009 Move W8, [X20+2919]
	010 Move X23, [X23+656]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x58E000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5CF000
	020 Move X0, [X0+696]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CF000
	023 Move X0, [X0+656]
	024 Call 0x1C17CF4
	025 Move X0, 0x5CF000
	026 Move X0, [X0+704]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2919], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x58E000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5CF000
	053 Move X8, [X8+696]
	054 Move X21, [X8]
	055 Move X8, 0x5CF000
	056 Move X8, [X8+704]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B8E288 MOV X20, X0
	0x03B8E28C B 0x3B8E2E0
	0x03B8E290 B 0x3B8E29C
	0x03B8E294 B 0x3B8E29C
	0x03B8E298 B 0x3B8E29C
	0x03B8E29C MOV X21, X1
	0x03B8E2A0 MOV X20, X0
	0x03B8E2A4 CMP W21, 0x1
	0x03B8E2A8 B.NE 0x3B8E2C8
	0x03B8E2AC MOV X0, X20
	0x03B8E2B0 BL 0x3EB1AD0
	0x03B8E2B4 LDR X23, [X0]
	0x03B8E2B8 BL 0x3EB1AE0
	0x03B8E2BC MOVZ W22, 0x1
	0x03B8E2C0 MOVZ W27, 0x1
	0x03B8E2C4 B 0x3B8E200
	0x03B8E2C8 MOV X23, X31
	0x03B8E2CC LDR X1, [X26]
	0x03B8E2D0 ADD X0, X31, 0x20
	0x03B8E2D4 BL 0x2BC434C
	0x03B8E2D8 CBNZ X23, 0x3B8E30C
	0x03B8E2DC MOVZ W27, 0x1
	0x03B8E2E0 CMP W27, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x855000
	005 Move X19, 0x5CF000
	006 Move W8, [X20+2920]
	007 Move X19, [X19+656]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5CF000
	013 Move X0, [X0+656]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2920], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call GetConecastParameters_00000938$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B8E2E4 CSET W22, NE
	0x03B8E2E8 CMP W21, 0x1
	0x03B8E2EC B.NE 0x3B8E304
	0x03B8E2F0 MOV X0, X20
	0x03B8E2F4 BL 0x3EB1AD0
	0x03B8E2F8 LDR X21, [X0]
	0x03B8E2FC BL 0x3EB1AE0
	0x03B8E300 B 0x3B8E214
	0x03B8E304 MOV X21, X31
	0x03B8E308 B 0x3B8E324
	0x03B8E30C MOV X0, X23
	0x03B8E310 BL 0x1C16F18
	0x03B8E314 MOV X21, X1
	0x03B8E318 MOV X20, X0
	0x03B8E31C B 0x3B8E2CC
	0x03B8E320 MOV X20, X0
	0x03B8E324 CBNZ W25, 0x3B8E338
	0x03B8E328 LDR X2, [X24]
	0x03B8E32C MOV X0, X19
	0x03B8E330 MOV W1, W31
	0x03B8E334 BL 0x25E89B0
	0x03B8E338 CBNZ X21, 0x3B8E344
	0x03B8E33C MOV X0, X20
	0x03B8E340 BL 0x1D2C690
	0x03B8E344 MOV X0, X21
	0x03B8E348 BL 0x1C16F18
	0x03B8E34C BL 0x1990590
	0x03B8E350 SUB X31, X31, 0xA0
	0x03B8E354 STR D8, [X31 + 0x40]
	0x03B8E358 STP X30, X27, [X31 + 0x50]
	0x03B8E35C STP X26, X25, [X31 + 0x60]
	0x03B8E360 STP X24, X23, [X31 + 0x70]
	0x03B8E364 STP X22, X21, [X31 + 0x80]
	0x03B8E368 STP X20, X19, [X31 + 0x90]
	0x03B8E36C ADRP X22, 0x854000
	0x03B8E370 LDRB W8, [X22 + 0xB77]
	0x03B8E374 MOV V8.16B, V0.16B
	0x03B8E378 MOV X20, X2
	0x03B8E37C MOV X21, X1
	0x03B8E380 MOV X19, X0
	0x03B8E384 TBNZ X8, 0x0, 0x3B8E3FC
	0x03B8E388 ADRP X0, 0x5CE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x855000
	006 Move X19, 0x5CF000
	007 Move X20, 0x58E000
	008 Move W8, [X21+2921]
	009 Move X19, [X19+712]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x58E000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5CF000
	019 Move X0, [X0+712]
	020 Call 0x1C17CF4
	021 Move X0, 0x5CF000
	022 Move X0, [X0+656]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2921], W8
	026 Move X0, [X20]
	027 Move X20, 0x5CF000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+656]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B8E38C LDR X0, [X0 + 0x390]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B8E390 BL 0x1C16CF4

ISIL:
	001 Call GetConecastParameters_00000938$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(System.Single angleRadius, System.Single offset, System.Single maxOffset, in UnityEngine.Vector3 direction, out UnityEngine.Vector3 originOffset, out System.Single radius, out System.Single castMax)

Disassembly:
	0x03B8D5D4 MOV X0, X8
	0x03B8D5D8 BL 0x1C16DFC
	0x03B8D5DC LDR X8, [X23]
	0x03B8D5E0 LDR X9, [X8 + 0xB8]
	0x03B8D5E4 ADRP X8, 0x58E000
	0x03B8D5E8 LDR X20, [X9 + 0x8]
	0x03B8D5EC LDR X8, [X8 + 0x848]
	0x03B8D5F0 LDR X0, [X8]
	0x03B8D5F4 ADRP X8, 0x5CF000
	0x03B8D5F8 LDR X8, [X8 + 0x2D0]
	0x03B8D5FC LDR X21, [X8]
	0x03B8D600 ADRP X8, 0x5CF000
	0x03B8D604 LDR X8, [X8 + 0x2D8]
	0x03B8D608 LDR W9, [X0 + 0xE0]
	0x03B8D60C LDR X22, [X8]
	0x03B8D610 CBNZ W9, 0x3B8D618
	0x03B8D614 BL 0x1C16DFC
	0x03B8D618 MOV X0, X20
	0x03B8D61C MOV X1, X21
	0x03B8D620 MOV X2, X22
	0x03B8D624 MOV X3, X31
	0x03B8D628 BL 0x36FAD70
	0x03B8D62C LDR X8, [X23]
	0x03B8D630 LDR X9, [X8 + 0xB8]
	0x03B8D634 STR X0, [X9]
	0x03B8D638 LDR W9, [X8 + 0xE0]
	0x03B8D63C CBNZ W9, 0x3B8D64C
	0x03B8D640 MOV X0, X8
	0x03B8D644 BL 0x1C16DFC
	0x03B8D648 LDR X8, [X23]
	0x03B8D64C LDR X8, [X8 + 0xB8]
	0x03B8D650 LDP X22, X21, [X31 + 0x10]
	0x03B8D654 LDR X8, [X8]
	0x03B8D658 STR X8, [X19]
	0x03B8D65C LDP X20, X19, [X31 + 0x20]
	0x03B8D660 LDP X30, X23, [X31], #0x30
	0x03B8D664 RET
	0x03B8D668 STR X30, [X31 - 0x20]!
	0x03B8D66C STP X20, X19, [X31 + 0x10]
	0x03B8D670 ADRP X20, 0x855000
	0x03B8D674 ADRP X19, 0x5CF000
	0x03B8D678 LDRB W8, [X20 + 0xB6D]
	0x03B8D67C LDR X19, [X19 + 0x298]
	0x03B8D680 TBNZ X8, 0x0, 0x3B8D698
	0x03B8D684 ADRP X0, 0x5CF000
	0x03B8D688 LDR X0, [X0 + 0x298]
	0x03B8D68C BL 0x1C16CF4
	0x03B8D690 MOVZ W8, 0x1
	0x03B8D694 STRB W8, [X20 + 0xB6D]
	0x03B8D698 LDR X0, [X19]
	0x03B8D69C STR X31, [X31 + 0x8]
	0x03B8D6A0 LDR W8, [X0 + 0xE0]
	0x03B8D6A4 CBNZ W8, 0x3B8D6AC
	0x03B8D6A8 BL 0x1C16DFC
	0x03B8D6AC ADD X0, X31, 0x8
	0x03B8D6B0 BL 0x3B8D54C
	0x03B8D6B4 LDR X0, [X31 + 0x8]
	0x03B8D6B8 LDP X20, X19, [X31 + 0x10]
	0x03B8D6BC LDR X30, [X31], #0x20
	0x03B8D6C0 RET
	0x03B8D6C4 STP X30, X21, [X31 - 0x20]!
	0x03B8D6C8 STP X20, X19, [X31 + 0x10]
	0x03B8D6CC ADRP X21, 0x855000
	0x03B8D6D0 ADRP X19, 0x5CF000
	0x03B8D6D4 ADRP X20, 0x58E000
	0x03B8D6D8 LDRB W8, [X21 + 0xB6E]
	0x03B8D6DC LDR X19, [X19 + 0x2E0]
	0x03B8D6E0 LDR X20, [X20 + 0x848]
	0x03B8D6E4 TBNZ X8, 0x0, 0x3B8D714
	0x03B8D6E8 ADRP X0, 0x58E000
	0x03B8D6EC LDR X0, [X0 + 0x848]
	0x03B8D6F0 BL 0x1C16CF4
	0x03B8D6F4 ADRP X0, 0x5CF000
	0x03B8D6F8 LDR X0, [X0 + 0x2E0]
	0x03B8D6FC BL 0x1C16CF4
	0x03B8D700 ADRP X0, 0x5CF000
	0x03B8D704 LDR X0, [X0 + 0x298]
	0x03B8D708 BL 0x1C16CF4
	0x03B8D70C MOVZ W8, 0x1
	0x03B8D710 STRB W8, [X21 + 0xB6E]
	0x03B8D714 LDR X0, [X20]
	0x03B8D718 ADRP X20, 0x5CF000
	0x03B8D71C LDR X19, [X19]
	0x03B8D720 LDR W8, [X0 + 0xE0]
	0x03B8D724 LDR X20, [X20 + 0x298]
	0x03B8D728 CBNZ W8, 0x3B8D730

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x856000
	012 Move X24, 0x58F000
	013 Move W8, [X23+2922]
	014 Move X24, [X24+2120]
	015 Move X21, X3
	016 Move X20, X2
	017 Move X19, X1
	018 Move X22, X0
	019 Move V10, V2
	020 Move V8, V1
	021 Move V9, V0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x58F000
	027 Move X0, [X0+2120]
	028 Call 0x1C17CF4
	029 Move X0, 0x5D0000
	030 Move X0, [X0+656]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2922], W8
	034 Move X0, [X24]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X31
	040 Call BurstCompiler.get_IsEnabled
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {74}
	045 Move X8, 0x5D0000
	046 Move X8, [X8+656]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call GetConecastParameters_00000938$BurstDirectCall.GetFunctionPointer
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X4, X0
	056 Move V0, V9
	057 Move V1, V8
	058 Move X0, X22
	059 Move X1, X19
	060 Move X2, X20
	061 Move X3, X21
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X22, [X31+48]
	065 Move X21, [X31+56]
	066 Move X24, [X31+32]
	067 Move X23, [X31+40]
	068 Move X30, [X31+24]
	069 Move D9, [X31+8]
	070 Move D8, [X31+16]
	071 Move V2, V10
	072 Move V10, [X31+80]
	073 CallNoReturn X4
	074 Move W8, S8
	075 And W8, W8, 0x7FFFFFFF
	076 Move W9, 0x7F800000
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction FCCMP not yet implemented."
	079 NotImplemented "Instruction FCSEL not yet implemented."
	080 Move W8, S0
	081 And W8, W8, 0x7FFFFFFF
	082 Move S1, 0.125
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction FCCMP not yet implemented."
	085 NotImplemented "Instruction FCSEL not yet implemented."
	086 Move [X21], S0
	087 Add S0, S0, S8
	088 Multiply S0, S0, S9
	089 Move [X20], S0
	090 Move V1, [X22]
	091 Move V2, [X22+8]
	092 Subtract S0, S8, S0
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 NotImplemented "Instruction INVALID not yet implemented."
	096 Multiply S0, S0, S2
	097 Move [X19], D1
	098 Move [X19+8], S0
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X24, [X31+32]
	102 Move X23, [X31+40]
	103 Move X30, [X31+24]
	104 Move D9, [X31+8]
	105 Move D8, [X31+16]
	106 Move V10, [X31+80]
	107 Return 

