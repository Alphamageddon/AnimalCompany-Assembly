Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/ProjectOnPlane_0000092A$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B8A860 LDP X30, X23, [X31], #0x30
	0x03B8A864 RET
	0x03B8A868 STR X30, [X31 - 0x20]!
	0x03B8A86C STP X20, X19, [X31 + 0x10]
	0x03B8A870 ADRP X20, 0x858000
	0x03B8A874 ADRP X19, 0x5D2000
	0x03B8A878 LDRB W8, [X20 + 0xB38]
	0x03B8A87C LDR X19, [X19 + 0xC8]
	0x03B8A880 TBNZ X8, 0x0, 0x3B8A898
	0x03B8A884 ADRP X0, 0x5D2000
	0x03B8A888 LDR X0, [X0 + 0xC8]
	0x03B8A88C BL 0x1C16CF4
	0x03B8A890 MOVZ W8, 0x1
	0x03B8A894 STRB W8, [X20 + 0xB38]
	0x03B8A898 LDR X0, [X19]
	0x03B8A89C STR X31, [X31 + 0x8]
	0x03B8A8A0 LDR W8, [X0 + 0xE0]
	0x03B8A8A4 CBNZ W8, 0x3B8A8AC
	0x03B8A8A8 BL 0x1C16DFC
	0x03B8A8AC ADD X0, X31, 0x8
	0x03B8A8B0 BL 0x3B8A74C
	0x03B8A8B4 LDR X0, [X31 + 0x8]
	0x03B8A8B8 LDP X20, X19, [X31 + 0x10]
	0x03B8A8BC LDR X30, [X31], #0x20
	0x03B8A8C0 RET
	0x03B8A8C4 STP X30, X21, [X31 - 0x20]!
	0x03B8A8C8 STP X20, X19, [X31 + 0x10]
	0x03B8A8CC ADRP X21, 0x858000
	0x03B8A8D0 ADRP X19, 0x5D2000
	0x03B8A8D4 ADRP X20, 0x591000
	0x03B8A8D8 LDRB W8, [X21 + 0xB39]
	0x03B8A8DC LDR X19, [X19 + 0x1D8]
	0x03B8A8E0 LDR X20, [X20 + 0x848]
	0x03B8A8E4 TBNZ X8, 0x0, 0x3B8A914
	0x03B8A8E8 ADRP X0, 0x5D2000
	0x03B8A8EC LDR X0, [X0 + 0xC8]
	0x03B8A8F0 BL 0x1C16CF4
	0x03B8A8F4 ADRP X0, 0x591000
	0x03B8A8F8 LDR X0, [X0 + 0x848]
	0x03B8A8FC BL 0x1C16CF4
	0x03B8A900 ADRP X0, 0x5D2000
	0x03B8A904 LDR X0, [X0 + 0x1D8]
	0x03B8A908 BL 0x1C16CF4
	0x03B8A90C MOVZ W8, 0x1
	0x03B8A910 STRB W8, [X21 + 0xB39]
	0x03B8A914 LDR X0, [X20]
	0x03B8A918 ADRP X20, 0x5D2000
	0x03B8A91C LDR X19, [X19]
	0x03B8A920 LDR W8, [X0 + 0xE0]
	0x03B8A924 LDR X20, [X20 + 0xC8]
	0x03B8A928 CBNZ W8, 0x3B8A930
	0x03B8A92C BL 0x1C16DFC
	0x03B8A930 MOV X0, X19
	0x03B8A934 MOV X1, X31
	0x03B8A938 BL 0x36FA754
	0x03B8A93C LDR X8, [X20]
	0x03B8A940 MOV X19, X0
	0x03B8A944 LDR W9, [X8 + 0xE0]
	0x03B8A948 CBNZ W9, 0x3B8A958
	0x03B8A94C MOV X0, X8
	0x03B8A950 BL 0x1C16DFC
	0x03B8A954 LDR X8, [X20]
	0x03B8A958 LDR X8, [X8 + 0xB8]
	0x03B8A95C STR X19, [X8 + 0x8]
	0x03B8A960 LDP X20, X19, [X31 + 0x10]
	0x03B8A964 LDP X30, X21, [X31], #0x20
	0x03B8A968 RET
	0x03B8A96C RET
	0x03B8A970 B 0x3B8A8C4
	0x03B8A974 STP X30, X21, [X31 - 0x20]!
	0x03B8A978 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x859000
	008 Move X23, 0x5D3000
	009 Move W8, [X20+2851]
	010 Move X23, [X23+168]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x592000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D3000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D3000
	023 Move X0, [X0+168]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D3000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2851], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x592000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5D3000
	053 Move X8, [X8+360]
	054 Move X21, [X8]
	055 Move X8, 0x5D3000
	056 Move X8, [X8+368]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B8A97C LDR X8, [X2 + 0x8]
	0x03B8A980 STP X1, X2, [X0 + 0x20]
	0x03B8A984 MOV X19, X0
	0x03B8A988 MOV X20, X1
	0x03B8A98C STR X8, [X0 + 0x10]
	0x03B8A990 LDRB W21, [X2 + 0x52]
	0x03B8A994 STR X0, [X0 + 0x40]
	0x03B8A998 MOV X0, X2
	0x03B8A99C BL 0x1C16D84
	0x03B8A9A0 TBZ X0, 0x0, 0x3B8A9B8
	0x03B8A9A4 CMP W21, 0x3
	0x03B8A9A8 B.NE 0x3B8A9D4
	0x03B8A9AC ADRP X8, 0xFFFFFFFFFE074000
	0x03B8A9B0 ADD X8, X8, 0x480
	0x03B8A9B4 B 0x3B8A9C8
	0x03B8A9B8 CMP W21, 0x2
	0x03B8A9BC B.NE 0x3B8A9D0
	0x03B8A9C0 ADRP X8, 0xFFFFFFFFFE074000
	0x03B8A9C4 ADD X8, X8, 0x46C
	0x03B8A9C8 STR X8, [X19 + 0x18]
	0x03B8A9CC B 0x3B8A9E4
	0x03B8A9D0 CBZ X20, 0x3B8A9FC
	0x03B8A9D4 LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x859000
	005 Move X19, 0x5D3000
	006 Move W8, [X20+2852]
	007 Move X19, [X19+168]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5D3000
	013 Move X0, [X0+168]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2852], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call ProjectOnPlane_0000092A$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B8A9D8 LDR X9, [X19 + 0x20]
	0x03B8A9DC STR X8, [X19 + 0x18]
	0x03B8A9E0 STR X9, [X19 + 0x40]
	0x03B8A9E4 ADRP X8, 0xFFFFFFFFFE074000
	0x03B8A9E8 ADD X8, X8, 0x3F8
	0x03B8A9EC STR X8, [X19 + 0x38]
	0x03B8A9F0 LDP X20, X19, [X31 + 0x10]
	0x03B8A9F4 LDP X30, X21, [X31], #0x20
	0x03B8A9F8 RET
	0x03B8A9FC ADRP X1, 0xFFFFFFFFFCF91000
	0x03B8AA00 ADD X1, X1, 0xEE3
	0x03B8AA04 MOV X0, X31
	0x03B8AA08 BL 0x1C16F3C
	0x03B8AA0C MOV X1, X31
	0x03B8AA10 BL 0x1C16DEC
	0x03B8AA14 LDR X8, [X0 + 0x40]
	0x03B8AA18 LDR X4, [X0 + 0x18]
	0x03B8AA1C LDR X3, [X0 + 0x28]
	0x03B8AA20 MOV X0, X8
	0x03B8AA24 BR X4
	0x03B8AA28 SUB X31, X31, 0x70
	0x03B8AA2C STR X30, [X31 + 0x20]
	0x03B8AA30 STP X26, X25, [X31 + 0x30]
	0x03B8AA34 STP X24, X23, [X31 + 0x40]
	0x03B8AA38 STP X22, X21, [X31 + 0x50]
	0x03B8AA3C STP X20, X19, [X31 + 0x60]
	0x03B8AA40 ADRP X26, 0x858000
	0x03B8AA44 STR S0, [X31 + 0x2C]
	0x03B8AA48 ADRP X25, 0x594000
	0x03B8AA4C ADRP X24, 0x569000
	0x03B8AA50 LDRB W8, [X26 + 0xB3B]
	0x03B8AA54 LDR X25, [X25 + 0x838]
	0x03B8AA58 LDR X24, [X24 + 0xA90]
	0x03B8AA5C MOV X19, X4
	0x03B8AA60 MOV X20, X3
	0x03B8AA64 MOV X22, X2
	0x03B8AA68 MOV X23, X1
	0x03B8AA6C MOV X21, X0
	0x03B8AA70 TBNZ X8, 0x0, 0x3B8AA94
	0x03B8AA74 ADRP X0, 0x569000
	0x03B8AA78 LDR X0, [X0 + 0xA90]
	0x03B8AA7C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x859000
	006 Move X19, 0x5D3000
	007 Move X20, 0x592000
	008 Move W8, [X21+2853]
	009 Move X19, [X19+376]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x592000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D3000
	019 Move X0, [X0+376]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D3000
	022 Move X0, [X0+168]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2853], W8
	026 Move X0, [X20]
	027 Move X20, 0x5D3000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+168]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B8AA80 ADRP X0, 0x594000

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B8AA84 LDR X0, [X0 + 0x838]

ISIL:
	001 Call ProjectOnPlane_0000092A$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 vector, in Unity.Mathematics.float3 planeNormal, out Unity.Mathematics.float3 projectedVector)

Disassembly:
	0x03B87EF4 LDR W8, [X0 + 0xE0]
	0x03B87EF8 CBNZ W8, 0x3B87F00
	0x03B87EFC BL 0x1C16DFC
	0x03B87F00 BL 0x3B8BF28
	0x03B87F04 CBZ X0, 0x3B87F28
	0x03B87F08 MOV X3, X0
	0x03B87F0C MOV X0, X21
	0x03B87F10 MOV X1, X20
	0x03B87F14 MOV X2, X19
	0x03B87F18 LDP X20, X19, [X31 + 0x20]
	0x03B87F1C LDP X22, X21, [X31 + 0x10]
	0x03B87F20 LDP X30, X23, [X31], #0x30
	0x03B87F24 BR X3
	0x03B87F28 LDR V0, [X21]
	0x03B87F2C LDR V1, [X20]
	0x03B87F30 LDR V2, [X21 + 0x8]
	0x03B87F34 LDR V3, [X20 + 0x8]
	0x03B87F38 LDP X22, X21, [X31 + 0x10]
	0x00000000 INVALID
	0x03B87F40 STR D0, [X19]
	0x03B87F44 FMUL S1, S2, S3
	0x03B87F48 STR S1, [X19 + 0x8]
	0x03B87F4C LDP X20, X19, [X31 + 0x20]
	0x03B87F50 LDP X30, X23, [X31], #0x30
	0x03B87F54 RET
	0x03B87F58 SUB X31, X31, 0x30
	0x03B87F5C STR X30, [X31 + 0x20]
	0x03B87F60 MOV X0, X31
	0x03B87F64 STR W31, [X31 + 0x18]
	0x03B87F68 STR X31, [X31 + 0x10]
	0x03B87F6C BL 0x3887BE4
	0x03B87F70 ADD X0, X31, 0x0
	0x03B87F74 ADD X1, X31, 0x10
	0x03B87F78 STP S0, S1, [X31]
	0x03B87F7C STR S2, [X31 + 0x8]
	0x03B87F80 BL 0x3B87FA0
	0x03B87F84 LDP S0, S1, [X31 + 0x10]
	0x03B87F88 LDR V2, [X31 + 0x18]
	0x03B87F8C MOV X0, X31
	0x03B87F90 BL 0x3887BE0
	0x03B87F94 LDR X30, [X31 + 0x20]
	0x03B87F98 ADD X31, X31, 0x30
	0x03B87F9C RET
	0x03B87FA0 STR X30, [X31 - 0x30]!
	0x03B87FA4 STP X22, X21, [X31 + 0x10]
	0x03B87FA8 STP X20, X19, [X31 + 0x20]
	0x03B87FAC ADRP X21, 0x85B000
	0x03B87FB0 ADRP X22, 0x5D5000
	0x03B87FB4 LDRB W8, [X21 + 0xB0D]
	0x03B87FB8 LDR X22, [X22 + 0x100]
	0x03B87FBC MOV X19, X1
	0x03B87FC0 MOV X20, X0
	0x03B87FC4 TBNZ X8, 0x0, 0x3B87FDC
	0x03B87FC8 ADRP X0, 0x5D5000
	0x03B87FCC LDR X0, [X0 + 0x100]
	0x03B87FD0 BL 0x1C16CF4
	0x03B87FD4 MOVZ W8, 0x1
	0x03B87FD8 STRB W8, [X21 + 0xB0D]
	0x03B87FDC LDR X0, [X22]
	0x03B87FE0 LDR W8, [X0 + 0xE0]
	0x03B87FE4 CBNZ W8, 0x3B87FEC
	0x03B87FE8 BL 0x1C16DFC
	0x03B87FEC MOV X0, X20
	0x03B87FF0 MOV X1, X19
	0x03B87FF4 LDP X20, X19, [X31 + 0x20]
	0x03B87FF8 LDP X22, X21, [X31 + 0x10]
	0x03B87FFC LDR X30, [X31], #0x30
	0x03B88000 B 0x3B88004
	0x03B88004 STR X30, [X31 - 0x30]!
	0x03B88008 STP X22, X21, [X31 + 0x10]
	0x03B8800C STP X20, X19, [X31 + 0x20]
	0x03B88010 ADRP X21, 0x85A000
	0x03B88014 ADRP X22, 0x593000
	0x03B88018 LDRB W8, [X21 + 0xB5D]
	0x03B8801C LDR X22, [X22 + 0x848]
	0x03B88020 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x85C000
	008 Move X23, 0x595000
	009 Move W8, [X22+2854]
	010 Move X23, [X23+2120]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x595000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0x5D6000
	022 Move X0, [X0+168]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2854], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call BurstCompiler.get_IsEnabled
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {58}
	037 Move X8, 0x5D6000
	038 Move X8, [X8+168]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Call ProjectOnPlane_0000092A$BurstDirectCall.GetFunctionPointer
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move X3, X0
	048 Move X0, X20
	049 Move X1, X21
	050 Move X2, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 CallNoReturn X3
	058 Move V1, [X21]
	059 Move V0, [X21+8]
	060 Move W8, 0x34000000
	061 NotImplemented "Instruction INVALID not yet implemented."
	062 Multiply S3, S0, S0
	063 NotImplemented "Instruction FADDP not yet implemented."
	064 Add S2, S3, S2
	065 Move S3, W8
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move W8, [X20+8]
	068 Move X9, [X20]
	069 Move [X19+8], W8
	070 Move [X19], X9
	071 Move V3, [X20]
	072 Move V4, [X20+8]
	073 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	074 NotImplemented "Instruction INVALID not yet implemented."
	075 Multiply S7, S0, S4
	076 NotImplemented "Instruction FADDP not yet implemented."
	077 Add S6, S7, S6
	078 NotImplemented "Instruction INVALID not yet implemented."
	079 Multiply S0, S0, S6
	080 NotImplemented "Instruction INVALID not yet implemented."
	081 NotImplemented "Instruction FDIV not yet implemented."
	082 Subtract V1, V3, V1
	083 Subtract S0, S4, S0
	084 Move [X19], D1
	085 Move [X19+8], S0
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X30, [X31+48]
	091 Move X23, [X31+56]
	092 Return 

