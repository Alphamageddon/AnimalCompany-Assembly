Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/Scale_00000933$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B8C8DC ADRP X8, 0x567000
	0x03B8C8E0 LDR X8, [X8 + 0x5A8]
	0x03B8C8E4 FSUB S11, S8, S11
	0x03B8C8E8 FSUB S8, S10, S12
	0x03B8C8EC FSUB S9, S9, S13
	0x03B8C8F0 LDR X0, [X8]
	0x03B8C8F4 LDR W8, [X0 + 0xE0]
	0x03B8C8F8 CBNZ W8, 0x3B8C900
	0x03B8C8FC BL 0x1C16DFC
	0x03B8C900 FMUL S1, S11, S11
	0x03B8C904 FMUL S2, S8, S8
	0x03B8C908 FMUL S0, S9, S9
	0x03B8C90C FADD S1, S1, S2
	0x03B8C910 FADD S0, S0, S1
	0x03B8C914 FSQRT S0, S0
	0x03B8C918 STR S0, [X19]
	0x03B8C91C LDP X20, X19, [X31 + 0x60]
	0x03B8C920 LDP X22, X21, [X31 + 0x50]
	0x03B8C924 LDP X24, X23, [X31 + 0x40]
	0x03B8C928 LDR X30, [X31 + 0x30]
	0x03B8C92C LDP D9, D8, [X31 + 0x20]
	0x03B8C930 LDP D11, D10, [X31 + 0x10]
	0x03B8C934 LDP D13, D12, [X31], #0x70
	0x03B8C938 RET
	0x03B8C93C SUB X31, X31, 0x70
	0x03B8C940 STP D13, D12, [X31 + 0x10]
	0x03B8C944 STP D11, D10, [X31 + 0x20]
	0x03B8C948 STP D9, D8, [X31 + 0x30]
	0x03B8C94C STR X30, [X31 + 0x40]
	0x03B8C950 STP X22, X21, [X31 + 0x50]
	0x03B8C954 STP X20, X19, [X31 + 0x60]
	0x03B8C958 LDR V0, [X0]
	0x03B8C95C LDR V8, [X0 + 0x8]
	0x03B8C960 LDR V12, [X1]
	0x03B8C964 LDR V13, [X1 + 0x8]
	0x03B8C968 MOV S1, V0.S[1]
	0x03B8C96C MOV V2.16B, V8.16B
	0x03B8C970 MOV X0, X31
	0x03B8C974 MOV X20, X4
	0x03B8C978 MOV X21, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33083392
	021 Add X8, X8, 1880
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33083392
	024 Add X8, X8, 1856
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33083392
	033 Add X8, X8, 1760
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50790400
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 a, in Unity.Mathematics.float3 b, out Unity.Mathematics.float3 result)

Disassembly:
	0x03B8C97C MOV X19, X2
	0x03B8C980 MOV X22, X1
	0x03B8C984 STR V0, [X31]
	0x03B8C988 BL 0x3887BE4
	0x03B8C98C LDR V3, [X22 + 0x8]

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 a, in Unity.Mathematics.float3 b, out Unity.Mathematics.float3 result, System.AsyncCallback param_3, System.Object param_4)

Disassembly:
	0x03B8C990 MOV V9.16B, V0.16B
	0x03B8C994 MOV V10.16B, V1.16B
	0x03B8C998 LDP S0, S1, [X22]
	0x03B8C99C MOV V11.16B, V2.16B
	0x03B8C9A0 MOV V2.16B, V3.16B
	0x03B8C9A4 MOV X0, X31
	0x03B8C9A8 BL 0x3887BE4
	0x03B8C9AC FSUB S0, S0, S9
	0x03B8C9B0 FSUB S1, S1, S10
	0x03B8C9B4 FSUB S2, S2, S11
	0x03B8C9B8 FMUL S0, S0, S0
	0x03B8C9BC FMUL S1, S1, S1
	0x03B8C9C0 FMUL S2, S2, S2
	0x03B8C9C4 FADD S0, S0, S1
	0x03B8C9C8 FADD S9, S2, S0
	0x03B8C9CC STR S9, [X21]
	0x03B8C9D0 ADRP X21, 0x855000
	0x03B8C9D4 LDRB W8, [X21 + 0x585]
	0x03B8C9D8 CBNZ W8, 0x3B8C9F0
	0x03B8C9DC ADRP X0, 0x567000
	0x03B8C9E0 LDR X0, [X0 + 0x5A8]
	0x03B8C9E4 BL 0x1C16CF4
	0x03B8C9E8 MOVZ W8, 0x1
	0x03B8C9EC STRB W8, [X21 + 0x585]
	0x03B8C9F0 ADRP X8, 0x567000
	0x03B8C9F4 LDR X8, [X8 + 0x5A8]
	0x03B8C9F8 LDR X0, [X8]
	0x03B8C9FC LDR W8, [X0 + 0xE0]
	0x03B8CA00 CBNZ W8, 0x3B8CA08
	0x03B8CA04 BL 0x1C16DFC
	0x03B8CA08 LDR V1, [X31]
	0x03B8CA0C FSQRT S2, S9
	0x03B8CA10 FSUB S0, S13, S8
	0x03B8CA14 UNIMPLEMENTED
	0x03B8CA18 FSUB V1.2S, V12.2S, V1.2S
	0x03B8CA1C FDIV S0, S0, S2
	0x00000000 INVALID
	0x03B8CA24 STR S2, [X20]
	0x03B8CA28 STR D1, [X19]
	0x03B8CA2C STR S0, [X19 + 0x8]
	0x03B8CA30 LDP X20, X19, [X31 + 0x60]
	0x03B8CA34 LDP X22, X21, [X31 + 0x50]
	0x03B8CA38 LDR X30, [X31 + 0x40]
	0x03B8CA3C LDP D9, D8, [X31 + 0x30]
	0x03B8CA40 LDP D11, D10, [X31 + 0x20]
	0x03B8CA44 LDP D13, D12, [X31 + 0x10]
	0x03B8CA48 ADD X31, X31, 0x70
	0x03B8CA4C RET
	0x03B8CA50 FMOV W8, S1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0x857000
	012 Move X25, 0x593000
	013 Move W8, [X26+2895]
	014 Move X25, [X25+2104]
	015 Move X19, X5
	016 Move X20, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x593000
	026 Move X0, [X0+2104]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+2895], W8
	030 Move X0, [X25]
	031 Move X1, X24
	032 Move [X31+24], X31
	033 Call 0x1C17E04
	034 Move X8, [X25]
	035 Move [X31], X0
	036 Move X1, X23
	037 Move X0, X8
	038 Call 0x1C17E04
	039 Move X8, [X25]
	040 Move [X31+8], X0
	041 Move X1, X22
	042 Move X0, X8
	043 Call 0x1C17E04
	044 Move [X31+16], X0
	045 Add X1, X31, 0
	046 Move X0, X21
	047 Move X2, X20
	048 Move X3, X19
	049 Call 0x1C17CB0
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X24, [X31+64]
	055 Move X23, [X31+72]
	056 Move X26, [X31+48]
	057 Move X25, [X31+56]
	058 Move X30, [X31+32]
	059 Add X31, X31, 112
	060 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B8CA54 AND W8, W8, 0x7FFFFFFF
	0x03B8CA58 MOVZ W9, 0x7F800000
	0x03B8CA5C CMP W8, W9

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

