Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/SampleCubicBezierPoint_000009F4$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B95B2C LDR W8, [X0 + 0xE0]
	0x03B95B30 LDR X20, [X20 + 0x698]
	0x03B95B34 CBNZ W8, 0x3B95B3C
	0x03B95B38 BL 0x1C16DFC
	0x03B95B3C MOV X0, X19
	0x03B95B40 MOV X1, X31
	0x03B95B44 BL 0x36FA754
	0x03B95B48 LDR X8, [X20]
	0x03B95B4C MOV X19, X0
	0x03B95B50 LDR W9, [X8 + 0xE0]
	0x03B95B54 CBNZ W9, 0x3B95B64
	0x03B95B58 MOV X0, X8
	0x03B95B5C BL 0x1C16DFC
	0x03B95B60 LDR X8, [X20]
	0x03B95B64 LDR X8, [X8 + 0xB8]
	0x03B95B68 STR X19, [X8 + 0x8]
	0x03B95B6C LDP X20, X19, [X31 + 0x10]
	0x03B95B70 LDP X30, X21, [X31], #0x20
	0x03B95B74 RET
	0x03B95B78 RET
	0x03B95B7C B 0x3B95AD0
	0x03B95B80 STP X30, X21, [X31 - 0x20]!
	0x03B95B84 STP X20, X19, [X31 + 0x10]
	0x03B95B88 LDR X8, [X2 + 0x8]
	0x03B95B8C STP X1, X2, [X0 + 0x20]
	0x03B95B90 MOV X19, X0
	0x03B95B94 MOV X20, X1
	0x03B95B98 STR X8, [X0 + 0x10]
	0x03B95B9C LDRB W21, [X2 + 0x52]
	0x03B95BA0 STR X0, [X0 + 0x40]
	0x03B95BA4 MOV X0, X2
	0x03B95BA8 BL 0x1C16D84
	0x03B95BAC TBZ X0, 0x0, 0x3B95BC8
	0x03B95BB0 CMP W21, 0x6
	0x03B95BB4 B.NE 0x3B95BCC
	0x03B95BB8 ADRP X8, 0xFFFFFFFFFE06A000
	0x03B95BBC ADD X8, X8, 0x2A8
	0x03B95BC0 STR X8, [X19 + 0x18]
	0x03B95BC4 B 0x3B95BDC
	0x03B95BC8 CBZ X20, 0x3B95BF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33120256
	021 Add X8, X8, 3896
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33120256
	024 Add X8, X8, 3864
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33120256
	033 Add X8, X8, 3728
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50827264
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 p0, in Unity.Mathematics.float3 p1, in Unity.Mathematics.float3 p2, in Unity.Mathematics.float3 p3, System.Single t, out Unity.Mathematics.float3 point)

Disassembly:
	0x03B95BCC LDR X8, [X19 + 0x10]
	0x03B95BD0 LDR X9, [X19 + 0x20]
	0x03B95BD4 STR X8, [X19 + 0x18]
	0x03B95BD8 STR X9, [X19 + 0x40]
	0x03B95BDC ADRP X8, 0xFFFFFFFFFE06A000

ISIL:
	001 Move X8, [X0+64]
	002 Move X7, [X0+24]
	003 Move X6, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X7

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 p0, in Unity.Mathematics.float3 p1, in Unity.Mathematics.float3 p2, in Unity.Mathematics.float3 p3, System.Single t, out Unity.Mathematics.float3 point, System.AsyncCallback param_6, System.Object param_7)

Disassembly:
	0x03B95BE0 ADD X8, X8, 0x220
	0x03B95BE4 STR X8, [X19 + 0x38]
	0x03B95BE8 LDP X20, X19, [X31 + 0x10]
	0x03B95BEC LDP X30, X21, [X31], #0x20
	0x03B95BF0 RET
	0x03B95BF4 ADRP X1, 0xFFFFFFFFFCF86000
	0x03B95BF8 ADD X1, X1, 0xEE3
	0x03B95BFC MOV X0, X31
	0x03B95C00 BL 0x1C16F3C
	0x03B95C04 MOV X1, X31
	0x03B95C08 BL 0x1C16DEC
	0x03B95C0C LDR X8, [X0 + 0x40]
	0x03B95C10 LDR X3, [X0 + 0x18]
	0x03B95C14 LDR X2, [X0 + 0x28]
	0x03B95C18 MOV X0, X8
	0x03B95C1C BR X3
	0x03B95C20 SUB X31, X31, 0x90
	0x03B95C24 STR X30, [X31 + 0x50]
	0x03B95C28 STP X24, X23, [X31 + 0x60]
	0x03B95C2C STP X22, X21, [X31 + 0x70]
	0x03B95C30 STP X20, X19, [X31 + 0x80]
	0x03B95C34 STP S1, S0, [X31 + 0x58]
	0x03B95C38 ADRP X24, 0x84D000
	0x03B95C3C STP S3, S2, [X31 + 0x48]
	0x03B95C40 STR S4, [X31 + 0x44]
	0x03B95C44 ADRP X23, 0x55E000
	0x03B95C48 LDRB W8, [X24 + 0xBDA]
	0x03B95C4C LDR X23, [X23 + 0xA90]
	0x03B95C50 MOV X19, X3
	0x03B95C54 MOV X20, X2
	0x03B95C58 MOV X22, X1
	0x03B95C5C MOV X21, X0
	0x03B95C60 TBNZ X8, 0x0, 0x3B95C78
	0x03B95C64 ADRP X0, 0x55E000
	0x03B95C68 LDR X0, [X0 + 0xA90]
	0x03B95C6C BL 0x1C16CF4
	0x03B95C70 MOVZ W8, 0x1
	0x03B95C74 STRB W8, [X24 + 0xBDA]
	0x03B95C78 LDR X0, [X23]
	0x03B95C7C MOVI V0.2D, 0x0
	0x03B95C80 ADD X1, X31, 0x5C
	0x03B95C84 STR X31, [X31 + 0x30]
	0x03B95C88 STP V0, V0, [X31 + 0x10]
	0x03B95C8C STR V0, [X31]
	0x03B95C90 BL 0x1C16E04
	0x03B95C94 LDR X8, [X23]
	0x03B95C98 STR X0, [X31]
	0x03B95C9C ADD X1, X31, 0x58
	0x03B95CA0 MOV X0, X8
	0x03B95CA4 BL 0x1C16E04
	0x03B95CA8 LDR X8, [X23]
	0x03B95CAC STR X0, [X31 + 0x8]
	0x03B95CB0 ADD X1, X31, 0x4C
	0x03B95CB4 MOV X0, X8
	0x03B95CB8 BL 0x1C16E04
	0x03B95CBC LDR X8, [X23]
	0x03B95CC0 STR X0, [X31 + 0x10]
	0x03B95CC4 ADD X1, X31, 0x48
	0x03B95CC8 MOV X0, X8
	0x03B95CCC BL 0x1C16E04
	0x03B95CD0 LDR X8, [X23]
	0x03B95CD4 STR X0, [X31 + 0x18]
	0x03B95CD8 ADD X1, X31, 0x44
	0x03B95CDC MOV X0, X8
	0x03B95CE0 BL 0x1C16E04
	0x03B95CE4 LDR X8, [X23]
	0x03B95CE8 STR X0, [X31 + 0x20]
	0x03B95CEC MOV X1, X22
	0x03B95CF0 MOV X0, X8
	0x03B95CF4 BL 0x1C16E04
	0x03B95CF8 STR X0, [X31 + 0x28]
	0x03B95CFC ADD X1, X31, 0x0
	0x03B95D00 MOV X0, X21
	0x03B95D04 MOV X2, X20
	0x03B95D08 MOV X3, X19

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X29, 0x84E000
	015 Move [X31+60], S0
	016 Move X27, 0x58A000
	017 Move X28, 0x55F000
	018 Move W8, [X29+3014]
	019 Move X27, [X27+2104]
	020 Move X28, [X28+2704]
	021 Move X19, X7
	022 Move X20, X6
	023 Move X22, X5
	024 Move X23, X4
	025 Move X24, X3
	026 Move X25, X2
	027 Move X26, X1
	028 Move X21, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {41}
	033 Move X0, 0x55F000
	034 Move X0, [X0+2704]
	035 Call 0x1C17CF4
	036 Move X0, 0x58A000
	037 Move X0, [X0+2104]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X29+3014], W8
	041 Move X0, [X27]
	042 Move X1, X26
	043 Move [X31+32], X31
	044 Move [X31+40], X31
	045 Move [X31+48], X31
	046 Call 0x1C17E04
	047 Move X8, [X27]
	048 Move [X31], X0
	049 Move X1, X25
	050 Move X0, X8
	051 Call 0x1C17E04
	052 Move X8, [X27]
	053 Move [X31+8], X0
	054 Move X1, X24
	055 Move X0, X8
	056 Call 0x1C17E04
	057 Move X8, [X27]
	058 Move [X31+16], X0
	059 Move X1, X23
	060 Move X0, X8
	061 Call 0x1C17E04
	062 Move X8, [X28]
	063 Move [X31+24], X0
	064 Add X1, X31, 60
	065 Move X0, X8
	066 Call 0x1C17E04
	067 Move X8, [X27]
	068 Move [X31+32], X0
	069 Move X1, X22
	070 Move X0, X8
	071 Call 0x1C17E04
	072 Move [X31+40], X0
	073 Add X1, X31, 0
	074 Move X0, X21
	075 Move X2, X20
	076 Move X3, X19
	077 Call 0x1C17CB0
	078 Move X20, [X31+144]
	079 Move X19, [X31+152]
	080 Move X22, [X31+128]
	081 Move X21, [X31+136]
	082 Move X24, [X31+112]
	083 Move X23, [X31+120]
	084 Move X26, [X31+96]
	085 Move X25, [X31+104]
	086 Move X28, [X31+80]
	087 Move X27, [X31+88]
	088 Move X29, [X31+64]
	089 Move X30, [X31+72]
	090 Add X31, X31, 160
	091 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B95D0C BL 0x1C16CB0
	0x03B95D10 LDP X20, X19, [X31 + 0x80]
	0x03B95D14 LDP X22, X21, [X31 + 0x70]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

