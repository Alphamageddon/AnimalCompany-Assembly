Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/SampleQuadraticBezierPoint_000009F3$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B95730 LDR W8, [X0 + 0xE0]
	0x03B95734 LDR X20, [X20 + 0x690]
	0x03B95738 CBNZ W8, 0x3B95740
	0x03B9573C BL 0x1C16DFC
	0x03B95740 MOV X0, X19
	0x03B95744 MOV X1, X31
	0x03B95748 BL 0x36FA754
	0x03B9574C LDR X8, [X20]
	0x03B95750 MOV X19, X0
	0x03B95754 LDR W9, [X8 + 0xE0]
	0x03B95758 CBNZ W9, 0x3B95768
	0x03B9575C MOV X0, X8
	0x03B95760 BL 0x1C16DFC
	0x03B95764 LDR X8, [X20]
	0x03B95768 LDR X8, [X8 + 0xB8]
	0x03B9576C STR X19, [X8 + 0x8]
	0x03B95770 LDP X20, X19, [X31 + 0x10]
	0x03B95774 LDP X30, X21, [X31], #0x20
	0x03B95778 RET
	0x03B9577C RET
	0x03B95780 B 0x3B956D4
	0x03B95784 STP X30, X21, [X31 - 0x20]!
	0x03B95788 STP X20, X19, [X31 + 0x10]
	0x03B9578C LDR X8, [X2 + 0x8]
	0x03B95790 STP X1, X2, [X0 + 0x20]
	0x03B95794 MOV X19, X0
	0x03B95798 MOV X20, X1
	0x03B9579C STR X8, [X0 + 0x10]
	0x03B957A0 LDRB W21, [X2 + 0x52]
	0x03B957A4 STR X0, [X0 + 0x40]
	0x03B957A8 MOV X0, X2
	0x03B957AC BL 0x1C16D84
	0x03B957B0 TBZ X0, 0x0, 0x3B957C8
	0x03B957B4 CMP W21, 0x5
	0x03B957B8 B.NE 0x3B957E4
	0x03B957BC ADRP X8, 0xFFFFFFFFFE06A000
	0x03B957C0 ADD X8, X8, 0x1EC
	0x03B957C4 B 0x3B957D8
	0x03B957C8 CMP W21, 0x4
	0x03B957CC B.NE 0x3B957E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33120256
	021 Add X8, X8, 3676
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33120256
	024 Add X8, X8, 3648
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33120256
	033 Add X8, X8, 3520
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50827264
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 p0, in Unity.Mathematics.float3 p1, in Unity.Mathematics.float3 p2, System.Single t, out Unity.Mathematics.float3 point)

Disassembly:
	0x03B957D0 ADRP X8, 0xFFFFFFFFFE06A000
	0x03B957D4 ADD X8, X8, 0x1D0
	0x03B957D8 STR X8, [X19 + 0x18]
	0x03B957DC B 0x3B957F4
	0x03B957E0 CBZ X20, 0x3B9580C

ISIL:
	001 Move X8, [X0+64]
	002 Move X6, [X0+24]
	003 Move X5, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X6

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 p0, in Unity.Mathematics.float3 p1, in Unity.Mathematics.float3 p2, System.Single t, out Unity.Mathematics.float3 point, System.AsyncCallback param_5, System.Object param_6)

Disassembly:
	0x03B957E4 LDR X8, [X19 + 0x10]
	0x03B957E8 LDR X9, [X19 + 0x20]
	0x03B957EC STR X8, [X19 + 0x18]
	0x03B957F0 STR X9, [X19 + 0x40]
	0x03B957F4 ADRP X8, 0xFFFFFFFFFE06A000
	0x03B957F8 ADD X8, X8, 0x150
	0x03B957FC STR X8, [X19 + 0x38]
	0x03B95800 LDP X20, X19, [X31 + 0x10]
	0x03B95804 LDP X30, X21, [X31], #0x20
	0x03B95808 RET
	0x03B9580C ADRP X1, 0xFFFFFFFFFCF86000
	0x03B95810 ADD X1, X1, 0xEE3
	0x03B95814 MOV X0, X31
	0x03B95818 BL 0x1C16F3C
	0x03B9581C MOV X1, X31
	0x03B95820 BL 0x1C16DEC
	0x03B95824 LDR X8, [X0 + 0x40]
	0x03B95828 LDR X6, [X0 + 0x18]
	0x03B9582C LDR X5, [X0 + 0x28]
	0x03B95830 MOV X0, X8
	0x03B95834 BR X6
	0x03B95838 SUB X31, X31, 0x90
	0x03B9583C STR X30, [X31 + 0x30]
	0x03B95840 STP X28, X27, [X31 + 0x40]
	0x03B95844 STP X26, X25, [X31 + 0x50]
	0x03B95848 STP X24, X23, [X31 + 0x60]
	0x03B9584C STP X22, X21, [X31 + 0x70]
	0x03B95850 STP X20, X19, [X31 + 0x80]
	0x03B95854 ADRP X28, 0x84D000
	0x03B95858 STR S0, [X31 + 0x3C]
	0x03B9585C ADRP X26, 0x589000
	0x03B95860 ADRP X27, 0x55E000
	0x03B95864 LDRB W8, [X28 + 0xBD5]
	0x03B95868 LDR X26, [X26 + 0x838]
	0x03B9586C LDR X27, [X27 + 0xA90]
	0x03B95870 MOV X19, X6
	0x03B95874 MOV X20, X5
	0x03B95878 MOV X22, X4
	0x03B9587C MOV X23, X3
	0x03B95880 MOV X24, X2
	0x03B95884 MOV X25, X1
	0x03B95888 MOV X21, X0
	0x03B9588C TBNZ X8, 0x0, 0x3B958B0
	0x03B95890 ADRP X0, 0x55E000
	0x03B95894 LDR X0, [X0 + 0xA90]
	0x03B95898 BL 0x1C16CF4
	0x03B9589C ADRP X0, 0x589000
	0x03B958A0 LDR X0, [X0 + 0x838]
	0x03B958A4 BL 0x1C16CF4
	0x03B958A8 MOVZ W8, 0x1
	0x03B958AC STRB W8, [X28 + 0xBD5]
	0x03B958B0 LDR X0, [X26]
	0x03B958B4 MOV X1, X25
	0x03B958B8 STP X31, X31, [X31 + 0x18]
	0x03B958BC STR X31, [X31 + 0x28]
	0x03B958C0 BL 0x1C16E04
	0x03B958C4 LDR X8, [X26]
	0x03B958C8 STR X0, [X31]
	0x03B958CC MOV X1, X24
	0x03B958D0 MOV X0, X8
	0x03B958D4 BL 0x1C16E04
	0x03B958D8 LDR X8, [X26]
	0x03B958DC STR X0, [X31 + 0x8]
	0x03B958E0 MOV X1, X23
	0x03B958E4 MOV X0, X8
	0x03B958E8 BL 0x1C16E04
	0x03B958EC LDR X8, [X27]
	0x03B958F0 STR X0, [X31 + 0x10]
	0x03B958F4 ADD X1, X31, 0x3C

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X28, 0x84E000
	014 Move [X31+60], S0
	015 Move X26, 0x58A000
	016 Move X27, 0x55F000
	017 Move W8, [X28+3009]
	018 Move X26, [X26+2104]
	019 Move X27, [X27+2704]
	020 Move X19, X6
	021 Move X20, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move X21, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {39}
	031 Move X0, 0x55F000
	032 Move X0, [X0+2704]
	033 Call 0x1C17CF4
	034 Move X0, 0x58A000
	035 Move X0, [X0+2104]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X28+3009], W8
	039 Move X0, [X26]
	040 Move X1, X25
	041 Move [X31+24], X31
	042 Move [X31+32], X31
	043 Move [X31+40], X31
	044 Call 0x1C17E04
	045 Move X8, [X26]
	046 Move [X31], X0
	047 Move X1, X24
	048 Move X0, X8
	049 Call 0x1C17E04
	050 Move X8, [X26]
	051 Move [X31+8], X0
	052 Move X1, X23
	053 Move X0, X8
	054 Call 0x1C17E04
	055 Move X8, [X27]
	056 Move [X31+16], X0
	057 Add X1, X31, 60
	058 Move X0, X8
	059 Call 0x1C17E04
	060 Move X8, [X26]
	061 Move [X31+24], X0
	062 Move X1, X22
	063 Move X0, X8
	064 Call 0x1C17E04
	065 Move [X31+32], X0
	066 Add X1, X31, 0
	067 Move X0, X21
	068 Move X2, X20
	069 Move X3, X19
	070 Call 0x1C17CB0
	071 Move X20, [X31+128]
	072 Move X19, [X31+136]
	073 Move X22, [X31+112]
	074 Move X21, [X31+120]
	075 Move X24, [X31+96]
	076 Move X23, [X31+104]
	077 Move X26, [X31+80]
	078 Move X25, [X31+88]
	079 Move X28, [X31+64]
	080 Move X27, [X31+72]
	081 Move X30, [X31+48]
	082 Add X31, X31, 144
	083 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B958F8 MOV X0, X8
	0x03B958FC BL 0x1C16E04
	0x03B95900 LDR X8, [X26]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

