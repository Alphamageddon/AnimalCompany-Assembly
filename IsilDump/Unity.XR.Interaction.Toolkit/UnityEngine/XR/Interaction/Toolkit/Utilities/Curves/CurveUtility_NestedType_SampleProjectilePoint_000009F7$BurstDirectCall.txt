Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/SampleProjectilePoint_000009F7$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B96958 MOV X0, X20
	0x03B9695C BL 0x1C16F18
	0x03B96960 BL 0x1990590
	0x03B96964 SUB X31, X31, 0x40
	0x03B96968 STP X30, X21, [X31 + 0x20]
	0x03B9696C STP X20, X19, [X31 + 0x30]
	0x03B96970 ADRP X20, 0x84C000
	0x03B96974 ADRP X21, 0x55D000
	0x03B96978 LDRB W8, [X20 + 0xBE8]
	0x03B9697C LDR X21, [X21 + 0x598]
	0x03B96980 MOV X19, X0
	0x03B96984 TBNZ X8, 0x0, 0x3B969D8
	0x03B96988 ADRP X0, 0x5C6000
	0x03B9698C LDR X0, [X0 + 0x770]
	0x03B96990 BL 0x1C16CF4
	0x03B96994 ADRP X0, 0x5C6000
	0x03B96998 LDR X0, [X0 + 0x778]
	0x03B9699C BL 0x1C16CF4
	0x03B969A0 ADRP X0, 0x5C6000
	0x03B969A4 LDR X0, [X0 + 0x780]
	0x03B969A8 BL 0x1C16CF4
	0x03B969AC ADRP X0, 0x5C6000
	0x03B969B0 LDR X0, [X0 + 0x788]
	0x03B969B4 BL 0x1C16CF4
	0x03B969B8 ADRP X0, 0x55D000
	0x03B969BC LDR X0, [X0 + 0x598]
	0x03B969C0 BL 0x1C16CF4
	0x03B969C4 ADRP X0, 0x5C6000
	0x03B969C8 LDR X0, [X0 + 0x790]
	0x03B969CC BL 0x1C16CF4
	0x03B969D0 MOVZ W8, 0x1
	0x03B969D4 STRB W8, [X20 + 0xBE8]
	0x03B969D8 LDR X0, [X21]
	0x03B969DC STP X31, X31, [X31 + 0x8]
	0x03B969E0 STR X31, [X31 + 0x18]
	0x03B969E4 LDR X20, [X19 + 0x30]
	0x03B969E8 LDR W8, [X0 + 0xE0]
	0x03B969EC CBNZ W8, 0x3B969F4
	0x03B969F0 BL 0x1C16DFC
	0x03B969F4 MOV X0, X20
	0x03B969F8 MOV X1, X31
	0x03B969FC MOV X2, X31
	0x03B96A00 BL 0x3C3883C
	0x03B96A04 TBNZ X0, 0x0, 0x3B96A1C
	0x03B96A08 LDR X0, [X19 + 0x30]
	0x03B96A0C CBZ X0, 0x3B96AD8
	0x03B96A10 MOV X1, X31
	0x03B96A14 BL 0x3C323D4
	0x03B96A18 TBNZ X0, 0x0, 0x3B96A4C
	0x03B96A1C MOV X0, X19
	0x03B96A20 BL 0x3B96674
	0x03B96A24 LDR X0, [X21]
	0x03B96A28 LDR X20, [X19 + 0x38]
	0x03B96A2C LDR W8, [X0 + 0xE0]
	0x03B96A30 CBNZ W8, 0x3B96A38
	0x03B96A34 BL 0x1C16DFC
	0x03B96A38 MOV X0, X20
	0x03B96A3C MOV X1, X31
	0x03B96A40 MOV X2, X31
	0x03B96A44 BL 0x3C3883C
	0x03B96A48 TBNZ X0, 0x0, 0x3B96AC4
	0x03B96A4C LDR X0, [X19 + 0x40]
	0x03B96A50 CBZ X0, 0x3B96AD8
	0x03B96A54 ADRP X8, 0x5C6000
	0x03B96A58 LDR X8, [X8 + 0x770]
	0x03B96A5C LDR X1, [X8]
	0x03B96A60 BL 0x2AA4F58
	0x03B96A64 CBZ X0, 0x3B96AD8
	0x03B96A68 ADRP X8, 0x5C6000
	0x03B96A6C LDR X8, [X8 + 0x790]
	0x03B96A70 ADRP X20, 0x5C6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x84D000
	008 Move X23, 0x5C7000
	009 Move W8, [X20+3030]
	010 Move X23, [X23+1688]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x586000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C7000
	020 Move X0, [X0+1800]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C7000
	023 Move X0, [X0+1688]
	024 Call 0x1C17CF4
	025 Move X0, 0x5C7000
	026 Move X0, [X0+1808]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3030], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x586000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5C7000
	053 Move X8, [X8+1800]
	054 Move X21, [X8]
	055 Move X8, 0x5C7000
	056 Move X8, [X8+1808]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B96A74 ADRP X21, 0x5C6000
	0x03B96A78 LDR X1, [X8]
	0x03B96A7C LDR X20, [X20 + 0x780]
	0x03B96A80 LDR X21, [X21 + 0x778]
	0x03B96A84 ADD X8, X31, 0x8
	0x03B96A88 BL 0x275A7AC
	0x03B96A8C LDR X1, [X20]
	0x03B96A90 ADD X0, X31, 0x8
	0x03B96A94 BL 0x2C0B1F0
	0x03B96A98 TBZ X0, 0x0, 0x3B96AB8
	0x03B96A9C LDR X0, [X31 + 0x18]
	0x03B96AA0 CBZ X0, 0x3B96AD4
	0x03B96AA4 LDR X1, [X19 + 0x38]
	0x03B96AA8 LDP S1, S2, [X19 + 0x24]
	0x03B96AAC LDR V0, [X19 + 0x20]
	0x03B96AB0 BL 0x3B972C4
	0x03B96AB4 B 0x3B96A8C
	0x03B96AB8 LDR X1, [X21]
	0x03B96ABC ADD X0, X31, 0x8
	0x03B96AC0 BL 0x2C0B1EC
	0x03B96AC4 LDP X20, X19, [X31 + 0x30]
	0x03B96AC8 LDP X30, X21, [X31 + 0x20]
	0x03B96ACC ADD X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x84D000
	005 Move X19, 0x5C7000
	006 Move W8, [X20+3031]
	007 Move X19, [X19+1688]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5C7000
	013 Move X0, [X0+1688]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3031], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call SampleProjectilePoint_000009F7$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B96AD0 RET
	0x03B96AD4 BL 0x1C16F20
	0x03B96AD8 BL 0x1C16F20
	0x03B96ADC B 0x3B96AE4
	0x03B96AE0 B 0x3B96AE4
	0x03B96AE4 MOV X19, X0
	0x03B96AE8 CMP W1, 0x1
	0x03B96AEC B.NE 0x3B96B18
	0x03B96AF0 MOV X0, X19
	0x03B96AF4 BL 0x3EB1AD0
	0x03B96AF8 LDR X20, [X0]
	0x03B96AFC BL 0x3EB1AE0
	0x03B96B00 LDR X1, [X21]
	0x03B96B04 ADD X0, X31, 0x8
	0x03B96B08 BL 0x2C0B1EC
	0x03B96B0C CBZ X20, 0x3B96AC4
	0x03B96B10 MOV X0, X20
	0x03B96B14 BL 0x1C16F18
	0x03B96B18 MOV X20, X31
	0x03B96B1C B 0x3B96B24
	0x03B96B20 MOV X19, X0
	0x03B96B24 LDR X1, [X21]
	0x03B96B28 ADD X0, X31, 0x8
	0x03B96B2C BL 0x2C0B1EC
	0x03B96B30 CBNZ X20, 0x3B96B3C
	0x03B96B34 MOV X0, X19
	0x03B96B38 BL 0x1D2C690
	0x03B96B3C MOV X0, X20
	0x03B96B40 BL 0x1C16F18
	0x03B96B44 BL 0x1990590
	0x03B96B48 STR X30, [X31 - 0x20]!
	0x03B96B4C STP X20, X19, [X31 + 0x10]
	0x03B96B50 ADRP X20, 0x84C000
	0x03B96B54 LDRB W8, [X20 + 0xBE6]
	0x03B96B58 MOV X19, X0
	0x03B96B5C TBNZ X8, 0x0, 0x3B96B80
	0x03B96B60 ADRP X0, 0x5C6000
	0x03B96B64 LDR X0, [X0 + 0x798]
	0x03B96B68 BL 0x1C16CF4
	0x03B96B6C ADRP X0, 0x5C6000
	0x03B96B70 LDR X0, [X0 + 0x7A0]
	0x03B96B74 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x84D000
	006 Move X19, 0x5C7000
	007 Move X20, 0x586000
	008 Move W8, [X21+3032]
	009 Move X19, [X19+1816]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x586000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C7000
	019 Move X0, [X0+1816]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C7000
	022 Move X0, [X0+1688]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3032], W8
	026 Move X0, [X20]
	027 Move X20, 0x5C7000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1688]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B96B78 MOVZ W8, 0x1

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B96B7C STRB W8, [X20 + 0xBE6]

ISIL:
	001 Call SampleProjectilePoint_000009F7$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 initialPosition, in Unity.Mathematics.float3 initialVelocity, in Unity.Mathematics.float3 constantAcceleration, System.Single time, out Unity.Mathematics.float3 point)

Disassembly:
	0x03B94F74 B.NE 0x3B94FA0
	0x03B94F78 ADRP X8, 0xFFFFFFFFFE06B000
	0x03B94F7C ADD X8, X8, 0x3C
	0x03B94F80 B 0x3B94F94
	0x03B94F84 CMP W21, 0x6
	0x03B94F88 B.NE 0x3B94F9C
	0x03B94F8C ADRP X8, 0xFFFFFFFFFE06B000
	0x03B94F90 ADD X8, X8, 0x10
	0x03B94F94 STR X8, [X19 + 0x18]
	0x03B94F98 B 0x3B94FB0
	0x03B94F9C CBZ X20, 0x3B94FC8
	0x03B94FA0 LDR X8, [X19 + 0x10]
	0x03B94FA4 LDR X9, [X19 + 0x20]
	0x03B94FA8 STR X8, [X19 + 0x18]
	0x03B94FAC STR X9, [X19 + 0x40]
	0x03B94FB0 ADRP X8, 0xFFFFFFFFFE06A000
	0x03B94FB4 ADD X8, X8, 0xF74
	0x03B94FB8 STR X8, [X19 + 0x38]
	0x03B94FBC LDP X20, X19, [X31 + 0x10]
	0x03B94FC0 LDP X30, X21, [X31], #0x20
	0x03B94FC4 RET
	0x03B94FC8 ADRP X1, 0xFFFFFFFFFCF87000
	0x03B94FCC ADD X1, X1, 0xEE3
	0x03B94FD0 MOV X0, X31
	0x03B94FD4 BL 0x1C16F3C
	0x03B94FD8 MOV X1, X31
	0x03B94FDC BL 0x1C16DEC
	0x03B94FE0 LDR X8, [X0 + 0x40]
	0x03B94FE4 LDR X9, [X0 + 0x18]
	0x03B94FE8 LDR X10, [X0 + 0x28]
	0x03B94FEC MOV X0, X8
	0x03B94FF0 STR X10, [X31]
	0x03B94FF4 BR X9
	0x03B94FF8 SUB X31, X31, 0xB0
	0x03B94FFC STP X29, X30, [X31 + 0x50]
	0x03B95000 STP X28, X27, [X31 + 0x60]
	0x03B95004 STP X26, X25, [X31 + 0x70]
	0x03B95008 STP X24, X23, [X31 + 0x80]
	0x03B9500C STP X22, X21, [X31 + 0x90]
	0x03B95010 STP X20, X19, [X31 + 0xA0]
	0x03B95014 STR X0, [X31 + 0x8]
	0x03B95018 ADRP X19, 0x84D000
	0x03B9501C ADRP X29, 0x589000
	0x03B95020 LDRB W8, [X19 + 0xBCB]
	0x03B95024 LDP X22, X21, [X31 + 0xB0]
	0x03B95028 LDR X29, [X29 + 0x838]
	0x03B9502C MOV X20, X7
	0x03B95030 MOV X23, X6
	0x03B95034 MOV X24, X5
	0x03B95038 MOV X25, X4
	0x03B9503C MOV X26, X3
	0x03B95040 MOV X27, X2
	0x03B95044 MOV X28, X1
	0x03B95048 TBNZ X8, 0x0, 0x3B95060
	0x03B9504C ADRP X0, 0x589000
	0x03B95050 LDR X0, [X0 + 0x838]
	0x03B95054 BL 0x1C16CF4
	0x03B95058 MOVZ W8, 0x1
	0x03B9505C STRB W8, [X19 + 0xBCB]
	0x03B95060 LDR X0, [X29]
	0x03B95064 MOV X1, X28
	0x03B95068 STR X31, [X31 + 0x48]
	0x03B9506C BL 0x1C16E04
	0x03B95070 LDR X8, [X29]
	0x03B95074 STR X0, [X31 + 0x10]
	0x03B95078 MOV X1, X27
	0x03B9507C MOV X0, X8
	0x03B95080 BL 0x1C16E04
	0x03B95084 LDR X8, [X29]
	0x03B95088 STR X0, [X31 + 0x18]
	0x03B9508C MOV X1, X26
	0x03B95090 MOV X0, X8
	0x03B95094 BL 0x1C16E04
	0x03B95098 LDR X8, [X29]
	0x03B9509C STR X0, [X31 + 0x20]
	0x03B950A0 MOV X1, X25

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move [X31], D0
	010 Move X23, 0x84F000
	011 Move X24, 0x588000
	012 Move W8, [X23+3033]
	013 Move X24, [X24+2120]
	014 Move X19, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x588000
	023 Move X0, [X0+2120]
	024 Call 0x1C17CF4
	025 Move X0, 0x5C9000
	026 Move X0, [X0+1688]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+3033], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call BurstCompiler.get_IsEnabled
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {66}
	041 Move X8, 0x5C9000
	042 Move X8, [X8+1688]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Call SampleProjectilePoint_000009F7$BurstDirectCall.GetFunctionPointer
	049 Compare X0, 0
	050 JumpIfEqual {66}
	051 Move X4, X0
	052 Move X0, X20
	053 Move X1, X22
	054 Move X2, X21
	055 Move X3, X19
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Move V0, [X31]
	064 Add X31, X31, 80
	065 CallNoReturn X4
	066 Move V6, [X31]
	067 Move V1, [X22]
	068 Move V2, [X22+8]
	069 Move S5, 0.5
	070 Multiply S5, S6, S5
	071 Move V0, [X20]
	072 Move V3, [X21]
	073 Move V4, [X21+8]
	074 Multiply S5, S5, S6
	075 NotImplemented "Instruction INVALID not yet implemented."
	076 Multiply S2, S2, S6
	077 Move V6, [X20+8]
	078 NotImplemented "Instruction INVALID not yet implemented."
	079 Multiply S4, S5, S4
	080 Add V0, V0, V1
	081 Add S1, S6, S2
	082 Add V0, V0, V3
	083 Add S1, S1, S4
	084 Move [X19], D0
	085 Move [X19+8], S1
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X30, [X31+16]
	093 Add X31, X31, 80
	094 Return 

