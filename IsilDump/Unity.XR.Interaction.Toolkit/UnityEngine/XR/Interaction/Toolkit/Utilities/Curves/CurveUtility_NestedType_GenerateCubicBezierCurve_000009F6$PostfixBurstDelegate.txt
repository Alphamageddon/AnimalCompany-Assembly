Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/GenerateCubicBezierCurve_000009F6$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B96354 STRB W8, [X19 + 0x570]
	0x03B96358 ADRP X8, 0x55D000
	0x03B9635C LDR X8, [X8 + 0x5A8]
	0x03B96360 LDR X0, [X8]
	0x03B96364 LDR W8, [X0 + 0xE0]
	0x03B96368 CBNZ W8, 0x3B96370
	0x03B9636C BL 0x1C16DFC
	0x03B96370 FDIV S0, S9, S8
	0x03B96374 FRINTM S0, S0
	0x03B96378 FMUL S0, S0, S8
	0x03B9637C FSUB S0, S9, S0
	0x03B96380 FMOV W9, S0
	0x03B96384 MOVZ W8, 0x7F800000
	0x03B96388 AND W9, W9, 0x7FFFFFFF
	0x03B9638C CMP W9, W8
	0x03B96390 FCCMP S0, S8, 0x0, LS
	0x03B96394 FCSEL S0, S8, S0, GT
	0x03B96398 FMOV W9, S0
	0x03B9639C AND W9, W9, 0x7FFFFFFF
	0x03B963A0 LDP X30, X19, [X31 + 0x10]
	0x03B963A4 CMP W9, W8
	0x03B963A8 FMOV S1, W31
	0x03B963AC FCCMP S0, S1, 0x8, LS
	0x03B963B0 FCSEL S0, S1, S0, MI
	0x03B963B4 LDP D9, D8, [X31], #0x20
	0x03B963B8 RET
	0x03B963BC STR D10, [X31 - 0x30]!
	0x03B963C0 STP D9, D8, [X31 + 0x10]
	0x03B963C4 STP X30, X19, [X31 + 0x20]
	0x03B963C8 ADRP X19, 0x84B000
	0x03B963CC LDRB W8, [X19 + 0x570]
	0x03B963D0 MOV V8.16B, V1.16B
	0x03B963D4 MOV V9.16B, V0.16B
	0x03B963D8 CBNZ W8, 0x3B963F0
	0x03B963DC ADRP X0, 0x55D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {23}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33120256
	021 Add X8, X8, 276
	022 Move [X19+24], X8
	023 Compare X20, 0
	024 JumpIfEqual {37}
	025 Move X8, [X19+16]
	026 Move X9, [X19+32]
	027 Move [X19+24], X8
	028 Move [X19+64], X9
	029 Move X8, -33120256
	030 Add X8, X8, 140
	031 Move [X19+56], X8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Move X1, -50831360
	038 Add X1, X1, 3811
	039 Move X0, X31
	040 Call 0x1C17F3C
	041 Move X1, X31
	042 Call 0x1C17DEC

Method: System.Void Invoke(System.Int32 numTargetPoints, System.Single curveRatio, in Unity.Mathematics.float3 lineOrigin, in Unity.Mathematics.float3 lineDirection, in Unity.Mathematics.float3 endPoint, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> targetPoints)

Disassembly:
	0x03B963E0 LDR X0, [X0 + 0x5A8]
	0x03B963E4 BL 0x1C16CF4
	0x03B963E8 MOVZ W8, 0x1
	0x03B963EC STRB W8, [X19 + 0x570]
	0x03B963F0 ADRP X8, 0x55D000

ISIL:
	001 Move X8, [X0+64]
	002 Move X7, [X0+24]
	003 Move X6, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X7

Method: System.IAsyncResult BeginInvoke(System.Int32 numTargetPoints, System.Single curveRatio, in Unity.Mathematics.float3 lineOrigin, in Unity.Mathematics.float3 lineDirection, in Unity.Mathematics.float3 endPoint, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> targetPoints, System.AsyncCallback param_6, System.Object param_7)

Disassembly:
	0x03B963F4 LDR X8, [X8 + 0x5A8]
	0x03B963F8 FADD S10, S8, S8
	0x03B963FC LDR X0, [X8]
	0x03B96400 LDR W8, [X0 + 0xE0]
	0x03B96404 CBNZ W8, 0x3B9640C
	0x03B96408 BL 0x1C16DFC
	0x03B9640C FDIV S0, S9, S10
	0x03B96410 FRINTM S0, S0
	0x03B96414 FMUL S0, S10, S0
	0x03B96418 FSUB S0, S9, S0
	0x03B9641C FMOV W9, S0
	0x03B96420 MOVZ W8, 0x7F800000
	0x03B96424 AND W9, W9, 0x7FFFFFFF
	0x03B96428 CMP W9, W8
	0x03B9642C FCCMP S0, S10, 0x0, LS
	0x03B96430 FCSEL S0, S10, S0, GT
	0x03B96434 FMOV W9, S0
	0x03B96438 AND W9, W9, 0x7FFFFFFF
	0x03B9643C CMP W9, W8
	0x03B96440 FMOV S1, W31
	0x03B96444 FCCMP S0, S1, 0x8, LS
	0x03B96448 FCSEL S0, S1, S0, MI
	0x03B9644C FABD S0, S0, S0
	0x03B96450 FSUB S0, S8, S0
	0x03B96454 LDP X30, X19, [X31 + 0x20]
	0x03B96458 LDP D9, D8, [X31 + 0x10]
	0x03B9645C LDR V10, [X31], #0x30
	0x03B96460 RET
	0x03B96464 LDR V0, [X0 + 0x20]
	0x03B96468 RET
	0x03B9646C STR S0, [X0 + 0x20]
	0x03B96470 RET
	0x03B96474 LDR V0, [X0 + 0x24]
	0x03B96478 RET
	0x03B9647C STR S0, [X0 + 0x24]
	0x03B96480 RET
	0x03B96484 LDR V0, [X0 + 0x28]
	0x03B96488 RET
	0x03B9648C STR S0, [X0 + 0x28]
	0x03B96490 RET
	0x03B96494 STR X30, [X31 - 0x30]!
	0x03B96498 STP X22, X21, [X31 + 0x10]
	0x03B9649C STP X20, X19, [X31 + 0x20]
	0x03B964A0 ADRP X20, 0x84C000
	0x03B964A4 ADRP X22, 0x5C6000
	0x03B964A8 ADRP X21, 0x55D000
	0x03B964AC LDRB W8, [X20 + 0xBE3]
	0x03B964B0 LDR X22, [X22 + 0x738]
	0x03B964B4 LDR X21, [X21 + 0x598]
	0x03B964B8 MOV X19, X0
	0x03B964BC TBNZ X8, 0x0, 0x3B96510
	0x03B964C0 ADRP X0, 0x5C6000
	0x03B964C4 LDR X0, [X0 + 0x738]
	0x03B964C8 BL 0x1C16CF4
	0x03B964CC ADRP X0, 0x55D000
	0x03B964D0 LDR X0, [X0 + 0xA28]
	0x03B964D4 BL 0x1C16CF4
	0x03B964D8 ADRP X0, 0x5C6000
	0x03B964DC LDR X0, [X0 + 0x740]
	0x03B964E0 BL 0x1C16CF4
	0x03B964E4 ADRP X0, 0x55D000
	0x03B964E8 LDR X0, [X0 + 0x598]
	0x03B964EC BL 0x1C16CF4
	0x03B964F0 ADRP X0, 0x5C6000
	0x03B964F4 LDR X0, [X0 + 0x748]
	0x03B964F8 BL 0x1C16CF4
	0x03B964FC ADRP X0, 0x5C6000
	0x03B96500 LDR X0, [X0 + 0x750]
	0x03B96504 BL 0x1C16CF4
	0x03B96508 MOVZ W8, 0x1
	0x03B9650C STRB W8, [X20 + 0xBE3]
	0x03B96510 LDR X0, [X22]
	0x03B96514 BL 0x295F9FC
	0x03B96518 LDR X8, [X21]
	0x03B9651C MOV X20, X0
	0x03B96520 LDR W9, [X8 + 0xE0]
	0x03B96524 CBNZ W9, 0x3B96530
	0x03B96528 MOV X0, X8
	0x03B9652C BL 0x1C16DFC
	0x03B96530 MOV X0, X20
	0x03B96534 MOV X1, X19
	0x03B96538 MOV X2, X31
	0x03B9653C BL 0x3C354F8
	0x03B96540 TBZ X0, 0x0, 0x3B965EC
	0x03B96544 MOV X0, X19
	0x03B96548 MOV X1, X31
	0x03B9654C BL 0x3C32ECC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31+60], W1
	015 Move [X31+56], S0
	016 Move X26, 0x84D000
	017 Move X29, 0x55E000
	018 Move X28, 0x55E000
	019 Move X27, 0x589000
	020 Move W8, [X26+3024]
	021 Move X29, [X29+1880]
	022 Move X28, [X28+2704]
	023 Move X27, [X27+2104]
	024 Move X19, X7
	025 Move X20, X6
	026 Move X22, X5
	027 Move X23, X4
	028 Move X24, X3
	029 Move X25, X2
	030 Move X21, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {49}
	035 Move X0, 0x55E000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0x5C5000
	039 Move X0, [X0+2744]
	040 Call 0x1C17CF4
	041 Move X0, 0x55E000
	042 Move X0, [X0+2704]
	043 Call 0x1C17CF4
	044 Move X0, 0x589000
	045 Move X0, [X0+2104]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+3024], W8
	049 Move X0, [X29]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Add X1, X31, 60
	052 Move [X31+48], X31
	053 Move [X31+16], V0
	054 Move [X31+24], V0
	055 Move [X31], V0
	056 Call 0x1C17E04
	057 Move X8, [X28]
	058 Move [X31], X0
	059 Add X1, X31, 56
	060 Move X0, X8
	061 Call 0x1C17E04
	062 Move X8, [X27]
	063 Move [X31+8], X0
	064 Move X1, X25
	065 Move X0, X8
	066 Call 0x1C17E04
	067 Move X8, [X27]
	068 Move [X31+16], X0
	069 Move X1, X24
	070 Move X0, X8
	071 Call 0x1C17E04
	072 Move X8, [X27]
	073 Move [X31+24], X0
	074 Move X1, X23
	075 Move X0, X8
	076 Call 0x1C17E04
	077 Move X8, 0x5C5000
	078 Move X8, [X8+2744]
	079 Move [X31+32], X0
	080 Move X1, X22
	081 Move X8, [X8]
	082 Move X0, X8
	083 Call 0x1C17E04
	084 Move [X31+40], X0
	085 Add X1, X31, 0
	086 Move X0, X21
	087 Move X2, X20
	088 Move X3, X19
	089 Call 0x1C17CB0
	090 Move X20, [X31+144]
	091 Move X19, [X31+152]
	092 Move X22, [X31+128]
	093 Move X21, [X31+136]
	094 Move X24, [X31+112]
	095 Move X23, [X31+120]
	096 Move X26, [X31+96]
	097 Move X25, [X31+104]
	098 Move X28, [X31+80]
	099 Move X27, [X31+88]
	100 Move X29, [X31+64]
	101 Move X30, [X31+72]
	102 Add X31, X31, 160
	103 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B96550 CBZ X0, 0x3B96670
	0x03B96554 MOV X1, X31
	0x03B96558 BL 0x3C389D4

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

