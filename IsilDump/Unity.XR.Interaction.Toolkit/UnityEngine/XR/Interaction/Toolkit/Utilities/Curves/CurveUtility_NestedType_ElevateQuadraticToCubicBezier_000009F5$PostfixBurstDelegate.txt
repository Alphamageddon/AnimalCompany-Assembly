Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/ElevateQuadraticToCubicBezier_000009F5$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B95F40 LDR X8, [X8 + 0xB8]
	0x03B95F44 STR X19, [X8 + 0x8]
	0x03B95F48 LDP X20, X19, [X31 + 0x10]
	0x03B95F4C LDP X30, X21, [X31], #0x20
	0x03B95F50 RET
	0x03B95F54 RET
	0x03B95F58 B 0x3B95EAC
	0x03B95F5C STR X30, [X31 - 0x20]!
	0x03B95F60 STP X20, X19, [X31 + 0x10]
	0x03B95F64 ADRP X20, 0x84D000
	0x03B95F68 LDRB W8, [X20 + 0xBDF]
	0x03B95F6C MOV X19, X0
	0x03B95F70 TBNZ X8, 0x0, 0x3B95F88
	0x03B95F74 ADRP X0, 0x588000
	0x03B95F78 LDR X0, [X0 + 0x160]
	0x03B95F7C BL 0x1C16CF4
	0x03B95F80 MOVZ W8, 0x1
	0x03B95F84 STRB W8, [X20 + 0xBDF]
	0x03B95F88 LDR X8, [X19]
	0x03B95F8C LDP X20, X19, [X31 + 0x10]
	0x03B95F90 CMP X8, 0x0
	0x03B95F94 CSET W0, NE
	0x03B95F98 LDR X30, [X31], #0x20
	0x03B95F9C RET
	0x03B95FA0 SUB X31, X31, 0x40
	0x03B95FA4 STR X30, [X31 + 0x10]
	0x03B95FA8 STP X22, X21, [X31 + 0x20]
	0x03B95FAC STP X20, X19, [X31 + 0x30]
	0x03B95FB0 ADRP X22, 0x84D000
	0x03B95FB4 LDRB W8, [X22 + 0xBE0]
	0x03B95FB8 MOV W20, W2
	0x03B95FBC MOV W21, W1
	0x03B95FC0 MOV X19, X0
	0x03B95FC4 TBNZ X8, 0x0, 0x3B95FF4
	0x03B95FC8 ADRP X0, 0x588000
	0x03B95FCC LDR X0, [X0 + 0x158]
	0x03B95FD0 BL 0x1C16CF4
	0x03B95FD4 ADRP X0, 0x588000
	0x03B95FD8 LDR X0, [X0 + 0x128]
	0x03B95FDC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33116160
	021 Add X8, X8, 60
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33116160
	024 Add X8, X8, 16
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33120256
	033 Add X8, X8, 3956
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50827264
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 p0, in Unity.Mathematics.float3 p1, in Unity.Mathematics.float3 p2, out Unity.Mathematics.float3 c0, out Unity.Mathematics.float3 c1, out Unity.Mathematics.float3 c2, out Unity.Mathematics.float3 c3)

Disassembly:
	0x03B95FE0 ADRP X0, 0x588000
	0x03B95FE4 LDR X0, [X0 + 0x160]
	0x03B95FE8 BL 0x1C16CF4
	0x03B95FEC MOVZ W8, 0x1
	0x03B95FF0 STRB W8, [X22 + 0xBE0]
	0x03B95FF4 ADRP X22, 0x588000

ISIL:
	001 Move X8, [X0+64]
	002 Move X9, [X0+24]
	003 Move X10, [X0+40]
	004 Move X0, X8
	005 Move [X31], X10
	006 CallNoReturn X9

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 p0, in Unity.Mathematics.float3 p1, in Unity.Mathematics.float3 p2, out Unity.Mathematics.float3 c0, out Unity.Mathematics.float3 c1, out Unity.Mathematics.float3 c2, out Unity.Mathematics.float3 c3, System.AsyncCallback param_7, System.Object param_8)

Disassembly:
	0x03B95FF8 LDR X8, [X19]
	0x03B95FFC LDR X22, [X22 + 0x128]
	0x03B96000 CBZ X8, 0x3B96018
	0x03B96004 ADRP X8, 0x587000
	0x03B96008 LDR X8, [X8 + 0x158]
	0x03B9600C MOV X0, X19
	0x03B96010 LDR X1, [X8]
	0x03B96014 BL 0x23E53EC
	0x03B96018 LDR X4, [X22]
	0x03B9601C ADD X0, X31, 0x0
	0x03B96020 MOV W1, W21
	0x03B96024 MOV W2, W20
	0x03B96028 MOV W3, W31
	0x03B9602C STP X31, X31, [X31]
	0x03B96030 BL 0x23E51BC
	0x03B96034 LDR V0, [X31]
	0x03B96038 LDP X22, X21, [X31 + 0x20]
	0x03B9603C LDR X30, [X31 + 0x10]
	0x03B96040 STR V0, [X19]
	0x03B96044 LDP X20, X19, [X31 + 0x30]
	0x03B96048 ADD X31, X31, 0x40
	0x03B9604C RET
	0x03B96050 STR D8, [X31 - 0x30]!
	0x03B96054 STR X30, [X31 + 0x8]
	0x03B96058 STP X22, X21, [X31 + 0x10]
	0x03B9605C STP X20, X19, [X31 + 0x20]
	0x03B96060 ADRP X22, 0x84C000
	0x03B96064 LDRB W8, [X22 + 0xBE1]
	0x03B96068 MOV W21, W2
	0x03B9606C MOV X19, X1
	0x03B96070 MOV X20, X0
	0x03B96074 TBNZ X8, 0x0, 0x3B9608C
	0x03B96078 ADRP X0, 0x587000
	0x03B9607C LDR X0, [X0 + 0x160]
	0x03B96080 BL 0x1C16CF4
	0x03B96084 MOVZ W8, 0x1
	0x03B96088 STRB W8, [X22 + 0xBE1]
	0x03B9608C CBZ X19, 0x3B96110
	0x03B96090 MOV X0, X19
	0x03B96094 MOV X1, X31
	0x03B96098 BL 0x3C01554
	0x03B9609C STR W0, [X20 + 0x10]
	0x03B960A0 MOV X0, X19
	0x03B960A4 MOV X1, X31
	0x03B960A8 BL 0x3C01590
	0x03B960AC LDR X8, [X20]
	0x03B960B0 STR W0, [X20 + 0x14]
	0x03B960B4 CBZ X8, 0x3B960C4
	0x03B960B8 LDR W8, [X20 + 0x8]
	0x03B960BC CMP W8, W21
	0x03B960C0 B.EQ 0x3B960D4
	0x03B960C4 MOVZ W2, 0x4
	0x03B960C8 MOV X0, X20
	0x03B960CC MOV W1, W21
	0x03B960D0 BL 0x3B95FA0
	0x03B960D4 CMP W21, 0x1
	0x03B960D8 B.LT 0x3B96110
	0x03B960DC MOV X22, X31
	0x03B960E0 SCVTF S8, W21
	0x03B960E4 MOV W21, W21
	0x03B960E8 SCVTF S0, W22
	0x03B960EC FDIV S0, S0, S8
	0x03B960F0 MOV X0, X19
	0x03B960F4 MOV X1, X31
	0x03B960F8 BL 0x3C00CC4
	0x03B960FC LDR X8, [X20]
	0x03B96100 STR S0, [X8, X22, LSL #2]
	0x03B96104 ADD X22, X22, 0x1
	0x03B96108 CMP X21, X22
	0x03B9610C B.NE 0x3B960E8
	0x03B96110 LDP X20, X19, [X31 + 0x20]
	0x03B96114 LDP X22, X21, [X31 + 0x10]
	0x03B96118 LDR X30, [X31 + 0x8]
	0x03B9611C LDR V8, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move [X31+8], X0
	015 Move X19, 0x84D000
	016 Move X29, 0x589000
	017 Move W8, [X19+3019]
	018 Move X22, [X31+176]
	019 Move X21, [X31+184]
	020 Move X29, [X29+2104]
	021 Move X20, X7
	022 Move X23, X6
	023 Move X24, X5
	024 Move X25, X4
	025 Move X26, X3
	026 Move X27, X2
	027 Move X28, X1
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x589000
	033 Move X0, [X0+2104]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+3019], W8
	037 Move X0, [X29]
	038 Move X1, X28
	039 Move [X31+72], X31
	040 Call 0x1C17E04
	041 Move X8, [X29]
	042 Move [X31+16], X0
	043 Move X1, X27
	044 Move X0, X8
	045 Call 0x1C17E04
	046 Move X8, [X29]
	047 Move [X31+24], X0
	048 Move X1, X26
	049 Move X0, X8
	050 Call 0x1C17E04
	051 Move X8, [X29]
	052 Move [X31+32], X0
	053 Move X1, X25
	054 Move X0, X8
	055 Call 0x1C17E04
	056 Move X8, [X29]
	057 Move [X31+40], X0
	058 Move X1, X24
	059 Move X0, X8
	060 Call 0x1C17E04
	061 Move X8, [X29]
	062 Move [X31+48], X0
	063 Move X1, X23
	064 Move X0, X8
	065 Call 0x1C17E04
	066 Move X8, [X29]
	067 Move [X31+56], X0
	068 Move X1, X20
	069 Move X0, X8
	070 Call 0x1C17E04
	071 Move [X31+64], X0
	072 Move X0, [X31+8]
	073 Add X1, X31, 16
	074 Move X2, X22
	075 Move X3, X21
	076 Call 0x1C17CB0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X28, [X31+96]
	086 Move X27, [X31+104]
	087 Move X29, [X31+80]
	088 Move X30, [X31+88]
	089 Add X31, X31, 176
	090 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B96120 RET
	0x03B96124 STR D8, [X31 - 0x30]!
	0x03B96128 STR X30, [X31 + 0x8]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

