Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/CalculateProjectileFlightTime_000009F8$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B96D34 MOV X0, X20
	0x03B96D38 BL 0x21E6600
	0x03B96D3C MOV X0, X19
	0x03B96D40 LDP X20, X19, [X31 + 0x10]
	0x03B96D44 MOVZ W1, 0x1
	0x03B96D48 LDP X30, X21, [X31], #0x20
	0x03B96D4C B 0x3B96DE8
	0x03B96D50 BL 0x1C16F20
	0x03B96D54 SUB X31, X31, 0x30
	0x03B96D58 STP X30, X21, [X31 + 0x10]
	0x03B96D5C STP X20, X19, [X31 + 0x20]
	0x03B96D60 ADRP X21, 0x84C000
	0x03B96D64 LDRB W8, [X21 + 0xBE5]
	0x03B96D68 MOV X20, X1
	0x03B96D6C MOV X19, X0
	0x03B96D70 TBNZ X8, 0x0, 0x3B96D94
	0x03B96D74 ADRP X0, 0x5C6000
	0x03B96D78 LDR X0, [X0 + 0x7D0]
	0x03B96D7C BL 0x1C16CF4
	0x03B96D80 ADRP X0, 0x5C6000
	0x03B96D84 LDR X0, [X0 + 0x7D8]
	0x03B96D88 BL 0x1C16CF4
	0x03B96D8C MOVZ W8, 0x1
	0x03B96D90 STRB W8, [X21 + 0xBE5]
	0x03B96D94 STR X31, [X31 + 0x8]
	0x03B96D98 CBZ X20, 0x3B96DE4
	0x03B96D9C ADRP X8, 0x5C6000
	0x03B96DA0 LDR X8, [X8 + 0x7D0]
	0x03B96DA4 ADD X1, X31, 0x8
	0x03B96DA8 MOV X0, X20
	0x03B96DAC LDR X2, [X8]
	0x03B96DB0 BL 0x21A4990
	0x03B96DB4 TBZ X0, 0x0, 0x3B96DD4
	0x03B96DB8 LDR X0, [X19 + 0x40]
	0x03B96DBC CBZ X0, 0x3B96DE4
	0x03B96DC0 ADRP X8, 0x5C6000
	0x03B96DC4 LDR X1, [X31 + 0x8]
	0x03B96DC8 LDR X8, [X8 + 0x7D8]
	0x03B96DCC LDR X2, [X8]
	0x03B96DD0 BL 0x2AA64F8
	0x03B96DD4 LDP X20, X19, [X31 + 0x20]
	0x03B96DD8 LDP X30, X21, [X31 + 0x10]
	0x03B96DDC ADD X31, X31, 0x30
	0x03B96DE0 RET
	0x03B96DE4 BL 0x1C16F20
	0x03B96DE8 SUB X31, X31, 0x70
	0x03B96DEC STR X30, [X31 + 0x20]
	0x03B96DF0 STP X26, X25, [X31 + 0x30]
	0x03B96DF4 STP X24, X23, [X31 + 0x40]
	0x03B96DF8 STP X22, X21, [X31 + 0x50]
	0x03B96DFC STP X20, X19, [X31 + 0x60]
	0x03B96E00 ADRP X20, 0x84C000
	0x03B96E04 LDRB W8, [X20 + 0xBEC]
	0x03B96E08 MOV W23, W1
	0x03B96E0C MOV X19, X0
	0x03B96E10 TBNZ X8, 0x0, 0x3B96EAC
	0x03B96E14 ADRP X0, 0x5B3000
	0x03B96E18 LDR X0, [X0 + 0x5D8]
	0x03B96E1C BL 0x1C16CF4
	0x03B96E20 ADRP X0, 0x5C6000
	0x03B96E24 LDR X0, [X0 + 0x7E0]
	0x03B96E28 BL 0x1C16CF4
	0x03B96E2C ADRP X0, 0x5C6000
	0x03B96E30 LDR X0, [X0 + 0x7E8]
	0x03B96E34 BL 0x1C16CF4
	0x03B96E38 ADRP X0, 0x5C6000
	0x03B96E3C LDR X0, [X0 + 0x7F0]
	0x03B96E40 BL 0x1C16CF4
	0x03B96E44 ADRP X0, 0x5C6000
	0x03B96E48 LDR X0, [X0 + 0x7F8]
	0x03B96E4C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x84D000
	008 Move X23, 0x5C7000
	009 Move W8, [X20+3035]
	010 Move X23, [X23+1696]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x586000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C7000
	020 Move X0, [X0+1696]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C7000
	023 Move X0, [X0+1824]
	024 Call 0x1C17CF4
	025 Move X0, 0x5C7000
	026 Move X0, [X0+1832]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3035], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x586000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5C7000
	053 Move X8, [X8+1832]
	054 Move X21, [X8]
	055 Move X8, 0x5C7000
	056 Move X8, [X8+1824]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B96E50 ADRP X0, 0x55D000
	0x03B96E54 LDR X0, [X0 + 0xA28]
	0x03B96E58 BL 0x1C16CF4
	0x03B96E5C ADRP X0, 0x5C6000
	0x03B96E60 LDR X0, [X0 + 0x800]
	0x03B96E64 BL 0x1C16CF4
	0x03B96E68 ADRP X0, 0x5C2000
	0x03B96E6C LDR X0, [X0 + 0xB78]
	0x03B96E70 BL 0x1C16CF4
	0x03B96E74 ADRP X0, 0x5C6000
	0x03B96E78 LDR X0, [X0 + 0x808]
	0x03B96E7C BL 0x1C16CF4
	0x03B96E80 ADRP X0, 0x55D000
	0x03B96E84 LDR X0, [X0 + 0x598]
	0x03B96E88 BL 0x1C16CF4
	0x03B96E8C ADRP X0, 0x5C6000
	0x03B96E90 LDR X0, [X0 + 0x810]
	0x03B96E94 BL 0x1C16CF4
	0x03B96E98 ADRP X0, 0x5C6000
	0x03B96E9C LDR X0, [X0 + 0x818]
	0x03B96EA0 BL 0x1C16CF4
	0x03B96EA4 MOVZ W8, 0x1
	0x03B96EA8 STRB W8, [X20 + 0xBEC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x84D000
	005 Move X19, 0x5C7000
	006 Move W8, [X20+3036]
	007 Move X19, [X19+1696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5C7000
	013 Move X0, [X0+1696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3036], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call CalculateProjectileFlightTime_000009F8$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B96EAC STR X31, [X31 + 0x28]
	0x03B96EB0 STP X31, X31, [X31 + 0x10]
	0x03B96EB4 STR X31, [X31 + 0x8]
	0x03B96EB8 LDR X0, [X19 + 0x10]
	0x03B96EBC CBZ X0, 0x3B972C0
	0x03B96EC0 LDRB W8, [X0 + 0x20]
	0x03B96EC4 CBNZ W8, 0x3B96ECC
	0x03B96EC8 TBZ X23, 0x0, 0x3B972A4
	0x03B96ECC MOV X1, X31
	0x03B96ED0 STRB W31, [X0 + 0x20]
	0x03B96ED4 BL 0x3C32E90
	0x03B96ED8 CBZ X0, 0x3B972C0
	0x03B96EDC MOV X1, X31
	0x03B96EE0 MOV X20, X0
	0x03B96EE4 BL 0x3C3F49C
	0x03B96EE8 ADRP X24, 0x55D000
	0x03B96EEC LDR X24, [X24 + 0x598]
	0x03B96EF0 MOV X21, X0
	0x03B96EF4 LDR X8, [X24]
	0x03B96EF8 LDR W9, [X8 + 0xE0]
	0x03B96EFC CBNZ W9, 0x3B96F08
	0x03B96F00 MOV X0, X8
	0x03B96F04 BL 0x1C16DFC
	0x03B96F08 MOV X0, X21
	0x03B96F0C MOV X1, X31
	0x03B96F10 MOV X2, X31
	0x03B96F14 BL 0x3C354F8
	0x03B96F18 MOV X22, X31
	0x03B96F1C TBZ X0, 0x0, 0x3B96F3C
	0x03B96F20 CBZ X21, 0x3B972C0
	0x03B96F24 ADRP X8, 0x5B3000
	0x03B96F28 LDR X8, [X8 + 0x5D8]
	0x03B96F2C MOV X0, X21
	0x03B96F30 LDR X1, [X8]
	0x03B96F34 BL 0x21A3F50
	0x03B96F38 MOV X22, X0
	0x03B96F3C LDR X0, [X24]
	0x03B96F40 LDR W8, [X0 + 0xE0]
	0x03B96F44 CBNZ W8, 0x3B96F4C
	0x03B96F48 BL 0x1C16DFC
	0x03B96F4C MOV X0, X22
	0x03B96F50 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x84D000
	006 Move X19, 0x5C7000
	007 Move X20, 0x586000
	008 Move W8, [X21+3037]
	009 Move X19, [X19+1840]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x586000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C7000
	019 Move X0, [X0+1696]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C7000
	022 Move X0, [X0+1840]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3037], W8
	026 Move X0, [X20]
	027 Move X20, 0x5C7000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1696]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B96F54 MOV X2, X31

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B96F58 BL 0x3C354F8

ISIL:
	001 Call CalculateProjectileFlightTime_000009F8$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(System.Single velocityMagnitude, System.Single gravityAcceleration, System.Single angleRad, System.Single height, System.Single extraFlightTime, out System.Single flightTime)

Disassembly:
	0x03B95138 ADRP X20, 0x84D000
	0x03B9513C ADRP X23, 0x5C7000
	0x03B95140 LDRB W8, [X20 + 0xBCC]
	0x03B95144 LDR X23, [X23 + 0x688]
	0x03B95148 MOV X19, X0
	0x03B9514C TBNZ X8, 0x0, 0x3B95188
	0x03B95150 ADRP X0, 0x586000
	0x03B95154 LDR X0, [X0 + 0x848]
	0x03B95158 BL 0x1C16CF4
	0x03B9515C ADRP X0, 0x5C7000
	0x03B95160 LDR X0, [X0 + 0x6D8]
	0x03B95164 BL 0x1C16CF4
	0x03B95168 ADRP X0, 0x5C7000
	0x03B9516C LDR X0, [X0 + 0x688]
	0x03B95170 BL 0x1C16CF4
	0x03B95174 ADRP X0, 0x5C7000
	0x03B95178 LDR X0, [X0 + 0x6E0]
	0x03B9517C BL 0x1C16CF4
	0x03B95180 MOVZ W8, 0x1
	0x03B95184 STRB W8, [X20 + 0xBCC]
	0x03B95188 LDR X8, [X23]
	0x03B9518C LDR W9, [X8 + 0xE0]
	0x03B95190 CBNZ W9, 0x3B951A0
	0x03B95194 MOV X0, X8
	0x03B95198 BL 0x1C16DFC
	0x03B9519C LDR X8, [X23]
	0x03B951A0 LDR X9, [X8 + 0xB8]
	0x03B951A4 LDR X10, [X9]
	0x03B951A8 CBNZ X10, 0x3B95218
	0x03B951AC LDR W10, [X8 + 0xE0]
	0x03B951B0 CBNZ W10, 0x3B951C4
	0x03B951B4 MOV X0, X8
	0x03B951B8 BL 0x1C16DFC
	0x03B951BC LDR X8, [X23]
	0x03B951C0 LDR X9, [X8 + 0xB8]
	0x03B951C4 ADRP X8, 0x586000
	0x03B951C8 LDR X20, [X9 + 0x8]
	0x03B951CC LDR X8, [X8 + 0x848]
	0x03B951D0 LDR X0, [X8]
	0x03B951D4 ADRP X8, 0x5C7000
	0x03B951D8 LDR X8, [X8 + 0x6D8]
	0x03B951DC LDR X21, [X8]
	0x03B951E0 ADRP X8, 0x5C7000
	0x03B951E4 LDR X8, [X8 + 0x6E0]
	0x03B951E8 LDR W9, [X0 + 0xE0]
	0x03B951EC LDR X22, [X8]
	0x03B951F0 CBNZ W9, 0x3B951F8
	0x03B951F4 BL 0x1C16DFC
	0x03B951F8 MOV X0, X20
	0x03B951FC MOV X1, X21
	0x03B95200 MOV X2, X22
	0x03B95204 MOV X3, X31
	0x03B95208 BL 0x36FAD70
	0x03B9520C LDR X8, [X23]
	0x03B95210 LDR X9, [X8 + 0xB8]
	0x03B95214 STR X0, [X9]
	0x03B95218 LDR W9, [X8 + 0xE0]
	0x03B9521C CBNZ W9, 0x3B9522C
	0x03B95220 MOV X0, X8
	0x03B95224 BL 0x1C16DFC
	0x03B95228 LDR X8, [X23]
	0x03B9522C LDR X8, [X8 + 0xB8]
	0x03B95230 LDP X22, X21, [X31 + 0x10]
	0x03B95234 LDR X8, [X8]
	0x03B95238 STR X8, [X19]
	0x03B9523C LDP X20, X19, [X31 + 0x20]
	0x03B95240 LDP X30, X23, [X31], #0x30
	0x03B95244 RET
	0x03B95248 STR X30, [X31 - 0x20]!
	0x03B9524C STP X20, X19, [X31 + 0x10]
	0x03B95250 ADRP X20, 0x84D000
	0x03B95254 ADRP X19, 0x5C7000
	0x03B95258 LDRB W8, [X20 + 0xBCD]
	0x03B9525C LDR X19, [X19 + 0x688]
	0x03B95260 TBNZ X8, 0x0, 0x3B95278
	0x03B95264 ADRP X0, 0x5C7000
	0x03B95268 LDR X0, [X0 + 0x688]
	0x03B9526C BL 0x1C16CF4
	0x03B95270 MOVZ W8, 0x1
	0x03B95274 STRB W8, [X20 + 0xBCD]
	0x03B95278 LDR X0, [X19]
	0x03B9527C STR X31, [X31 + 0x8]
	0x03B95280 LDR W8, [X0 + 0xE0]
	0x03B95284 CBNZ W8, 0x3B9528C
	0x03B95288 BL 0x1C16DFC
	0x03B9528C ADD X0, X31, 0x8
	0x03B95290 BL 0x3B9512C
	0x03B95294 LDR X0, [X31 + 0x8]
	0x03B95298 LDP X20, X19, [X31 + 0x10]
	0x03B9529C LDR X30, [X31], #0x20
	0x03B952A0 RET
	0x03B952A4 STP X30, X21, [X31 - 0x20]!
	0x03B952A8 STP X20, X19, [X31 + 0x10]
	0x03B952AC ADRP X21, 0x84D000

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x84E000
	012 Move X21, 0x587000
	013 Move W8, [X20+3038]
	014 Move X21, [X21+2120]
	015 Move X19, X0
	016 Move V8, V4
	017 Move V10, V3
	018 Move V11, V2
	019 Move V9, V1
	020 Move V12, V0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x587000
	026 Move X0, [X0+2120]
	027 Call 0x1C17CF4
	028 Move X0, 0x5C8000
	029 Move X0, [X0+1696]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3038], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X31
	039 Call BurstCompiler.get_IsEnabled
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {72}
	044 Move X8, 0x5C8000
	045 Move X8, [X8+1696]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Call CalculateProjectileFlightTime_000009F8$BurstDirectCall.GetFunctionPointer
	052 Compare X0, 0
	053 JumpIfEqual {72}
	054 Move X1, X0
	055 Move V1, V9
	056 Move V2, V11
	057 Move V3, V10
	058 Move V4, V8
	059 Move X0, X19
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X30, [X31+48]
	063 Move X21, [X31+56]
	064 Move D9, [X31+32]
	065 Move D8, [X31+40]
	066 Move D11, [X31+16]
	067 Move D10, [X31+24]
	068 Move V0, V12
	069 Move D13, [X31+80]
	070 Move D12, [X31+88]
	071 CallNoReturn X1
	072 Move S13, W31
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Move S0, W31
	075 Move W8, 0x35800000
	076 NotImplemented "Instruction FABS not yet implemented."
	077 Move S1, W8
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Multiply S11, S12, S11
	080 Add S0, S11, S11
	081 Move X20, 0x84D000
	082 Move W8, [X20+1413]
	083 Add S0, S9, S9
	084 Multiply S12, S11, S11
	085 Multiply S10, S0, S10
	086 Compare W8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, 0x55F000
	089 Move X0, [X0+1448]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X20+1413], W8
	093 Move X8, 0x55F000
	094 Move X8, [X8+1448]
	095 Add S10, S12, S10
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 NotImplemented "Instruction FSQRT not yet implemented."
	102 Add S0, S11, S0
	103 NotImplemented "Instruction FDIV not yet implemented."
	104 Add S0, S0, S8
	105 NotImplemented "Instruction FMAXNM not yet implemented."
	106 Move [X19], S0
	107 Move X20, [X31+64]
	108 Move X19, [X31+72]
	109 Move X30, [X31+48]
	110 Move X21, [X31+56]
	111 Move D9, [X31+32]
	112 Move D8, [X31+40]
	113 Move D11, [X31+16]
	114 Move D10, [X31+24]
	115 Move D13, [X31+80]
	116 Move D12, [X31+88]
	117 Return 

