Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/GenerateCubicBezierCurve_000009F6$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B9655C ADRP X8, 0x5C6000
	0x03B96560 LDR X8, [X8 + 0x748]
	0x03B96564 ADRP X9, 0x5C6000
	0x03B96568 LDR X9, [X9 + 0x750]
	0x03B9656C MOV X1, X0
	0x03B96570 LDR X8, [X8]
	0x03B96574 MOV X3, X31
	0x03B96578 LDR X2, [X9]
	0x03B9657C MOV X0, X8
	0x03B96580 BL 0x32274B8
	0x03B96584 ADRP X8, 0x55D000
	0x03B96588 LDR X8, [X8 + 0xA28]
	0x03B9658C MOV X20, X0
	0x03B96590 LDR X8, [X8]
	0x03B96594 LDR W9, [X8 + 0xE0]
	0x03B96598 CBNZ W9, 0x3B965A4
	0x03B9659C MOV X0, X8
	0x03B965A0 BL 0x1C16DFC
	0x03B965A4 MOV X0, X20
	0x03B965A8 MOV X1, X19
	0x03B965AC MOV X2, X31
	0x03B965B0 BL 0x3C06B0C
	0x03B965B4 LDR X0, [X21]
	0x03B965B8 LDR W8, [X0 + 0xE0]
	0x03B965BC CBNZ W8, 0x3B965C4
	0x03B965C0 BL 0x1C16DFC
	0x03B965C4 MOV X0, X19
	0x03B965C8 MOV X1, X31
	0x03B965CC BL 0x3C394A8
	0x03B965D0 MOV X0, X19
	0x03B965D4 LDP X20, X19, [X31 + 0x20]
	0x03B965D8 LDP X22, X21, [X31 + 0x10]
	0x03B965DC MOV W1, W31
	0x03B965E0 MOV X2, X31
	0x03B965E4 LDR X30, [X31], #0x30
	0x03B965E8 B 0x3C32410
	0x03B965EC MOV X0, X19
	0x03B965F0 BL 0x3B96674
	0x03B965F4 LDR X0, [X21]
	0x03B965F8 LDR W8, [X0 + 0xE0]
	0x03B965FC CBNZ W8, 0x3B96604
	0x03B96600 BL 0x1C16DFC
	0x03B96604 ADRP X8, 0x5C6000
	0x03B96608 LDR X8, [X8 + 0x740]
	0x03B9660C MOVZ W0, 0x1
	0x03B96610 LDR X1, [X8]
	0x03B96614 BL 0x222D2AC
	0x03B96618 CBZ X0, 0x3B96670
	0x03B9661C LDR X8, [X0 + 0x18]
	0x03B96620 MOV X20, X0
	0x03B96624 CMP W8, 0x1
	0x03B96628 B.LT 0x3B9665C
	0x03B9662C MOV X21, X31
	0x03B96630 AND X8, X8, 0x0
	0x03B96634 ADD X22, X20, 0x20
	0x03B96638 CMP X21, W8, UXTW
	0x03B9663C B.CS 0x3B9666C
	0x03B96640 LDR X1, [X22, X21, LSL #3]
	0x03B96644 MOV X0, X19
	0x03B96648 BL 0x3B96708
	0x03B9664C LDR W8, [X20 + 0x18]
	0x03B96650 ADD X21, X21, 0x1
	0x03B96654 CMP X21, W8, SXTW
	0x03B96658 B.LT 0x3B96638
	0x03B9665C LDP X20, X19, [X31 + 0x20]
	0x03B96660 LDP X22, X21, [X31 + 0x10]
	0x03B96664 LDR X30, [X31], #0x30
	0x03B96668 RET
	0x03B9666C BL 0x1C16F28
	0x03B96670 BL 0x1C16F20
	0x03B96674 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x84D000
	008 Move X23, 0x5C7000
	009 Move W8, [X20+3025]
	010 Move X23, [X23+1680]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x586000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C7000
	020 Move X0, [X0+1776]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C7000
	023 Move X0, [X0+1680]
	024 Call 0x1C17CF4
	025 Move X0, 0x5C7000
	026 Move X0, [X0+1784]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3025], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x586000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5C7000
	053 Move X8, [X8+1776]
	054 Move X21, [X8]
	055 Move X8, 0x5C7000
	056 Move X8, [X8+1784]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B96678 STP X20, X19, [X31 + 0x10]
	0x03B9667C ADRP X20, 0x84C000
	0x03B96680 ADRP X21, 0x55D000
	0x03B96684 LDRB W8, [X20 + 0xBE9]
	0x03B96688 LDR X21, [X21 + 0x598]
	0x03B9668C MOV X19, X0
	0x03B96690 TBNZ X8, 0x0, 0x3B966A8
	0x03B96694 ADRP X0, 0x55D000
	0x03B96698 LDR X0, [X0 + 0x598]
	0x03B9669C BL 0x1C16CF4
	0x03B966A0 MOVZ W8, 0x1
	0x03B966A4 STRB W8, [X20 + 0xBE9]
	0x03B966A8 MOV X0, X31
	0x03B966AC BL 0x3C047F8
	0x03B966B0 STR X0, [X19 + 0x30]
	0x03B966B4 MOV X20, X0
	0x03B966B8 LDR X0, [X21]
	0x03B966BC LDR W8, [X0 + 0xE0]
	0x03B966C0 CBNZ W8, 0x3B966C8
	0x03B966C4 BL 0x1C16DFC
	0x03B966C8 MOV X0, X20
	0x03B966CC MOV X1, X31
	0x03B966D0 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x84D000
	005 Move X19, 0x5C7000
	006 Move W8, [X20+3026]
	007 Move X19, [X19+1680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5C7000
	013 Move X0, [X0+1680]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3026], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call GenerateCubicBezierCurve_000009F6$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B966D4 BL 0x3C354F8
	0x03B966D8 MOV W8, W0
	0x03B966DC MOV X0, X31
	0x03B966E0 TBZ X8, 0x0, 0x3B966F4
	0x03B966E4 LDR X0, [X19 + 0x30]
	0x03B966E8 CBZ X0, 0x3B96704
	0x03B966EC MOV X1, X31
	0x03B966F0 BL 0x3C32E90
	0x03B966F4 STR X0, [X19 + 0x38]
	0x03B966F8 LDP X20, X19, [X31 + 0x10]
	0x03B966FC LDP X30, X21, [X31], #0x20
	0x03B96700 RET
	0x03B96704 BL 0x1C16F20
	0x03B96708 STP X30, X21, [X31 - 0x20]!
	0x03B9670C STP X20, X19, [X31 + 0x10]
	0x03B96710 ADRP X21, 0x84C000
	0x03B96714 LDRB W8, [X21 + 0xBE4]
	0x03B96718 MOV X20, X1
	0x03B9671C MOV X19, X0
	0x03B96720 TBNZ X8, 0x0, 0x3B96750
	0x03B96724 ADRP X0, 0x5C6000
	0x03B96728 LDR X0, [X0 + 0x758]
	0x03B9672C BL 0x1C16CF4
	0x03B96730 ADRP X0, 0x5C6000
	0x03B96734 LDR X0, [X0 + 0x760]
	0x03B96738 BL 0x1C16CF4
	0x03B9673C ADRP X0, 0x5C6000
	0x03B96740 LDR X0, [X0 + 0x768]
	0x03B96744 BL 0x1C16CF4
	0x03B96748 MOVZ W8, 0x1
	0x03B9674C STRB W8, [X21 + 0xBE4]
	0x03B96750 MOV X0, X20
	0x03B96754 BL 0x3B96B48
	0x03B96758 LDR X8, [X19 + 0x40]
	0x03B9675C CBZ X8, 0x3B967DC
	0x03B96760 ADRP X9, 0x5C6000
	0x03B96764 LDR X9, [X9 + 0x768]
	0x03B96768 MOV X20, X0
	0x03B9676C MOV X0, X8
	0x03B96770 MOV X1, X20
	0x03B96774 LDR X2, [X9]
	0x03B96778 BL 0x2AA528C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x84D000
	006 Move X19, 0x5C7000
	007 Move X20, 0x586000
	008 Move W8, [X21+3027]
	009 Move X19, [X19+1792]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x586000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C7000
	019 Move X0, [X0+1792]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C7000
	022 Move X0, [X0+1680]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3027], W8
	026 Move X0, [X20]
	027 Move X20, 0x5C7000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1680]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B9677C TBZ X0, 0x0, 0x3B9678C

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B96780 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Call GenerateCubicBezierCurve_000009F6$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(System.Int32 numTargetPoints, System.Single curveRatio, in Unity.Mathematics.float3 lineOrigin, in Unity.Mathematics.float3 lineDirection, in Unity.Mathematics.float3 endPoint, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float3> targetPoints)

Disassembly:
	0x03B94DE4 MOV X0, X20
	0x03B94DE8 MOV X1, X21
	0x03B94DEC MOV X2, X22
	0x03B94DF0 MOV X3, X31
	0x03B94DF4 BL 0x36FAD70
	0x03B94DF8 LDR X8, [X23]
	0x03B94DFC LDR X9, [X8 + 0xB8]
	0x03B94E00 STR X0, [X9]
	0x03B94E04 LDR W9, [X8 + 0xE0]
	0x03B94E08 CBNZ W9, 0x3B94E18
	0x03B94E0C MOV X0, X8
	0x03B94E10 BL 0x1C16DFC
	0x03B94E14 LDR X8, [X23]
	0x03B94E18 LDR X8, [X8 + 0xB8]
	0x03B94E1C LDP X22, X21, [X31 + 0x10]
	0x03B94E20 LDR X8, [X8]
	0x03B94E24 STR X8, [X19]
	0x03B94E28 LDP X20, X19, [X31 + 0x20]
	0x03B94E2C LDP X30, X23, [X31], #0x30
	0x03B94E30 RET
	0x03B94E34 STR X30, [X31 - 0x20]!
	0x03B94E38 STP X20, X19, [X31 + 0x10]
	0x03B94E3C ADRP X20, 0x84E000
	0x03B94E40 ADRP X19, 0x5C8000
	0x03B94E44 LDRB W8, [X20 + 0xBC8]
	0x03B94E48 LDR X19, [X19 + 0x680]
	0x03B94E4C TBNZ X8, 0x0, 0x3B94E64
	0x03B94E50 ADRP X0, 0x5C8000
	0x03B94E54 LDR X0, [X0 + 0x680]
	0x03B94E58 BL 0x1C16CF4
	0x03B94E5C MOVZ W8, 0x1
	0x03B94E60 STRB W8, [X20 + 0xBC8]
	0x03B94E64 LDR X0, [X19]
	0x03B94E68 STR X31, [X31 + 0x8]
	0x03B94E6C LDR W8, [X0 + 0xE0]
	0x03B94E70 CBNZ W8, 0x3B94E78
	0x03B94E74 BL 0x1C16DFC
	0x03B94E78 ADD X0, X31, 0x8
	0x03B94E7C BL 0x3B94D18
	0x03B94E80 LDR X0, [X31 + 0x8]
	0x03B94E84 LDP X20, X19, [X31 + 0x10]
	0x03B94E88 LDR X30, [X31], #0x20
	0x03B94E8C RET
	0x03B94E90 STP X30, X21, [X31 - 0x20]!
	0x03B94E94 STP X20, X19, [X31 + 0x10]
	0x03B94E98 ADRP X21, 0x84E000
	0x03B94E9C ADRP X19, 0x5C8000
	0x03B94EA0 ADRP X20, 0x587000
	0x03B94EA4 LDRB W8, [X21 + 0xBC9]
	0x03B94EA8 LDR X19, [X19 + 0x6D0]
	0x03B94EAC LDR X20, [X20 + 0x848]
	0x03B94EB0 TBNZ X8, 0x0, 0x3B94EE0
	0x03B94EB4 ADRP X0, 0x587000
	0x03B94EB8 LDR X0, [X0 + 0x848]
	0x03B94EBC BL 0x1C16CF4
	0x03B94EC0 ADRP X0, 0x5C8000
	0x03B94EC4 LDR X0, [X0 + 0x6D0]
	0x03B94EC8 BL 0x1C16CF4
	0x03B94ECC ADRP X0, 0x5C8000
	0x03B94ED0 LDR X0, [X0 + 0x680]
	0x03B94ED4 BL 0x1C16CF4
	0x03B94ED8 MOVZ W8, 0x1
	0x03B94EDC STRB W8, [X21 + 0xBC9]
	0x03B94EE0 LDR X0, [X20]
	0x03B94EE4 ADRP X20, 0x5C8000

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x84F000
	011 Move X25, 0x588000
	012 Move W8, [X24+3028]
	013 Move X25, [X25+2120]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move V8, V0
	019 Move W23, W0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x588000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move X0, 0x5C9000
	028 Move X0, [X0+1680]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+3028], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call BurstCompiler.get_IsEnabled
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {70}
	043 Move X8, 0x5C9000
	044 Move X8, [X8+1680]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Call GenerateCubicBezierCurve_000009F6$BurstDirectCall.GetFunctionPointer
	051 Compare X0, 0
	052 JumpIfEqual {70}
	053 Move X5, X0
	054 Move W0, W23
	055 Move X1, X22
	056 Move X2, X21
	057 Move X3, X20
	058 Move X4, X19
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X30, [X31+16]
	066 Move X25, [X31+24]
	067 Move V0, V8
	068 Move V8, [X31+80]
	069 CallNoReturn X5
	070 Move W0, W23
	071 Move X1, X22
	072 Move X2, X21
	073 Move X3, X20
	074 Move X4, X19
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X30, [X31+16]
	082 Move X25, [X31+24]
	083 Move V0, V8
	084 Move X5, X31
	085 Move V8, [X31+80]
	086 Call 0x3B9A694
	087 Return 

