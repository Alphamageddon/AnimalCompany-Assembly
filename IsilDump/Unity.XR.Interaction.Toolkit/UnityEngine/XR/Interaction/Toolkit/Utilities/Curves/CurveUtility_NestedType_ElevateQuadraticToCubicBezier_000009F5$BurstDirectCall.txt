Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/ElevateQuadraticToCubicBezier_000009F5$BurstDirectCall

Method: System.Void GetFunctionPointerDiscard(ref System.IntPtr param_0)

Disassembly:
	0x03B9612C STP X22, X21, [X31 + 0x10]
	0x03B96130 STP X20, X19, [X31 + 0x20]
	0x03B96134 LDR W21, [X0 + 0x8]
	0x03B96138 MOV X19, X0
	0x03B9613C SUBS W20, W21, 0x1
	0x03B96140 B.NE 0x3B96150
	0x03B96144 LDR X8, [X19]
	0x03B96148 LDR V0, [X8]
	0x03B9614C B 0x3B962A0
	0x03B96150 MOV V8.16B, V0.16B
	0x03B96154 FCMP S0, 0x0
	0x03B96158 B.PL 0x3B96174
	0x03B9615C LDR W8, [X19 + 0x10]
	0x03B96160 CMP W8, 0x2
	0x03B96164 B.EQ 0x3B9622C
	0x03B96168 CMP W8, 0x4
	0x03B9616C B.EQ 0x3B96194
	0x03B96170 B 0x3B96144
	0x03B96174 FMOV S0, 1
	0x03B96178 FCMP S8, S0
	0x03B9617C B.LE 0x3B96254
	0x03B96180 LDR W8, [X19 + 0x14]
	0x03B96184 CMP W8, 0x2
	0x03B96188 B.EQ 0x3B96244
	0x03B9618C CMP W8, 0x4
	0x03B96190 B.NE 0x3B962B4
	0x03B96194 ADRP X22, 0x84B000
	0x03B96198 LDRB W8, [X22 + 0x570]
	0x03B9619C CBNZ W8, 0x3B961B4
	0x03B961A0 ADRP X0, 0x55D000
	0x03B961A4 LDR X0, [X0 + 0x5A8]
	0x03B961A8 BL 0x1C16CF4
	0x03B961AC MOVZ W8, 0x1
	0x03B961B0 STRB W8, [X22 + 0x570]
	0x03B961B4 ADRP X8, 0x55D000
	0x03B961B8 LDR X8, [X8 + 0x5A8]
	0x03B961BC LDR X0, [X8]
	0x03B961C0 LDR W8, [X0 + 0xE0]
	0x03B961C4 CBNZ W8, 0x3B961CC
	0x03B961C8 BL 0x1C16DFC
	0x03B961CC FMOV S0, 0.5
	0x03B961D0 FMUL S0, S8, S0
	0x03B961D4 FRINTM S0, S0
	0x03B961D8 FADD S0, S0, S0
	0x03B961DC FSUB S0, S8, S0
	0x03B961E0 FMOV W9, S0
	0x03B961E4 MOVZ W8, 0x7F800000
	0x03B961E8 AND W9, W9, 0x7FFFFFFF
	0x03B961EC FMOV S1, 2
	0x03B961F0 CMP W9, W8
	0x03B961F4 FCCMP S0, S1, 0x0, LS
	0x03B961F8 FCSEL S0, S1, S0, GT
	0x03B961FC FMOV W9, S0
	0x03B96200 FMOV S1, -1
	0x03B96204 AND W9, W9, 0x7FFFFFFF
	0x03B96208 FMOV S2, W31
	0x03B9620C FADD S1, S0, S1
	0x03B96210 CMP W9, W8
	0x03B96214 FCCMP S0, S2, 0x8, LS
	0x03B96218 FMOV S0, 1
	0x03B9621C FABS S1, S1
	0x03B96220 FSUB S0, S0, S1
	0x03B96224 FCSEL S8, S2, S0, MI
	0x03B96228 B 0x3B96254
	0x03B9622C FABS S0, S8
	0x03B96230 FMOV S1, 1
	0x03B96234 FMOV S8, 1
	0x03B96238 BL 0x3EB1BA0
	0x03B9623C FSUB S8, S8, S0
	0x03B96240 B 0x3B96254
	0x03B96244 FMOV S1, 1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x84D000
	008 Move X23, 0x5C7000
	009 Move W8, [X20+3020]
	010 Move X23, [X23+1672]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x586000
	017 Move X0, [X0+2120]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C7000
	020 Move X0, [X0+1752]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C7000
	023 Move X0, [X0+1672]
	024 Call 0x1C17CF4
	025 Move X0, 0x5C7000
	026 Move X0, [X0+1760]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3020], W8
	030 Move X8, [X23]
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X23]
	037 Move X9, [X8+184]
	038 Move X10, [X9]
	039 Compare X10, 0
	040 JumpIfNotEqual {70}
	041 Move W10, [X8+224]
	042 Compare W10, 0
	043 JumpIfNotEqual {48}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X23]
	047 Move X9, [X8+184]
	048 Move X8, 0x586000
	049 Move X20, [X9+8]
	050 Move X8, [X8+2120]
	051 Move X0, [X8]
	052 Move X8, 0x5C7000
	053 Move X8, [X8+1752]
	054 Move X21, [X8]
	055 Move X8, 0x5C7000
	056 Move X8, [X8+1760]
	057 Move W9, [X0+224]
	058 Move X22, [X8]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X22
	065 Move X3, X31
	066 Call BurstCompiler.GetILPPMethodFunctionPointer2, X0, X1, X2
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move [X9], X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8]
	080 Move [X19], X8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+48]
	084 Move X23, [X31+56]
	085 Return 

Method: System.IntPtr GetFunctionPointer()

Disassembly:
	0x03B96248 MOV V0.16B, V8.16B
	0x03B9624C BL 0x3EB1BA0
	0x03B96250 MOV V8.16B, V0.16B
	0x03B96254 SCVTF S0, W20
	0x03B96258 MOVZ W8, 0x7F800000
	0x03B9625C FMUL S0, S8, S0
	0x03B96260 FMOV S1, W8
	0x03B96264 MOVZ W9, 0x80000000
	0x03B96268 FCVTZS W8, S0
	0x03B9626C FCMP S0, S1
	0x03B96270 LDR X10, [X19]
	0x03B96274 CSEL W8, W9, W8, EQ
	0x03B96278 ADD W9, W8, 0x1
	0x03B9627C CMP W9, W21
	0x03B96280 CSINC W9, W20, W8, GE
	0x03B96284 LDR V1, [X10, W8, SXTW]
	0x03B96288 LDR V2, [X10, W9, SXTW]
	0x03B9628C SCVTF S3, W8
	0x03B96290 FSUB S0, S0, S3
	0x03B96294 FSUB S2, S2, S1
	0x03B96298 FMUL S0, S2, S0
	0x03B9629C FADD S0, S1, S0
	0x03B962A0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x84D000
	005 Move X19, 0x5C7000
	006 Move W8, [X20+3021]
	007 Move X19, [X19+1672]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x5C7000
	013 Move X0, [X0+1672]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3021], W8
	017 Move X0, [X19]
	018 Move [X31+8], X31
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 8
	024 Call ElevateQuadraticToCubicBezier_000009F5$BurstDirectCall.GetFunctionPointerDiscard, X0
	025 Move X0, [X31+8]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void Constructor()

Disassembly:
	0x03B962A4 LDP X22, X21, [X31 + 0x10]
	0x03B962A8 LDR X30, [X31 + 0x8]
	0x03B962AC LDR V8, [X31], #0x30
	0x03B962B0 RET
	0x03B962B4 LDR X8, [X19]
	0x03B962B8 LDR V0, [X8, W20, SXTW]
	0x03B962BC B 0x3B962A0
	0x03B962C0 STR X30, [X31 - 0x20]!
	0x03B962C4 STP X20, X19, [X31 + 0x10]
	0x03B962C8 ADRP X20, 0x84C000
	0x03B962CC LDRB W8, [X20 + 0xBE2]
	0x03B962D0 MOV X19, X0
	0x03B962D4 TBNZ X8, 0x0, 0x3B962F8
	0x03B962D8 ADRP X0, 0x587000
	0x03B962DC LDR X0, [X0 + 0x158]
	0x03B962E0 BL 0x1C16CF4
	0x03B962E4 ADRP X0, 0x587000
	0x03B962E8 LDR X0, [X0 + 0x160]
	0x03B962EC BL 0x1C16CF4
	0x03B962F0 MOVZ W8, 0x1
	0x03B962F4 STRB W8, [X20 + 0xBE2]
	0x03B962F8 LDR X8, [X19]
	0x03B962FC CBZ X8, 0x3B9631C
	0x03B96300 ADRP X8, 0x587000
	0x03B96304 LDR X8, [X8 + 0x158]
	0x03B96308 MOV X0, X19
	0x03B9630C LDP X20, X19, [X31 + 0x10]
	0x03B96310 LDR X1, [X8]
	0x03B96314 LDR X30, [X31], #0x20
	0x03B96318 B 0x23E53EC
	0x03B9631C LDP X20, X19, [X31 + 0x10]
	0x03B96320 LDR X30, [X31], #0x20
	0x03B96324 RET
	0x03B96328 STP D9, D8, [X31 - 0x20]!
	0x03B9632C STP X30, X19, [X31 + 0x10]
	0x03B96330 ADRP X19, 0x84B000
	0x03B96334 LDRB W8, [X19 + 0x570]
	0x03B96338 MOV V8.16B, V1.16B
	0x03B9633C MOV V9.16B, V0.16B
	0x03B96340 CBNZ W8, 0x3B96358
	0x03B96344 ADRP X0, 0x55D000
	0x03B96348 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x84D000
	006 Move X19, 0x5C7000
	007 Move X20, 0x586000
	008 Move W8, [X21+3022]
	009 Move X19, [X19+1768]
	010 Move X20, [X20+2120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x586000
	016 Move X0, [X0+2120]
	017 Call 0x1C17CF4
	018 Move X0, 0x5C7000
	019 Move X0, [X0+1768]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C7000
	022 Move X0, [X0+1672]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3022], W8
	026 Move X0, [X20]
	027 Move X20, 0x5C7000
	028 Move X19, [X19]
	029 Move W8, [X0+224]
	030 Move X20, [X20+1672]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call BurstCompiler.CompileILPPMethod2, X0
	037 Move X8, [X20]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8+8], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void Initialize()

Disassembly:
	0x03B9634C BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03B96350 MOVZ W8, 0x1

ISIL:
	001 Call ElevateQuadraticToCubicBezier_000009F5$BurstDirectCall.Constructor
	002 Return 

Method: System.Void Invoke(in Unity.Mathematics.float3 p0, in Unity.Mathematics.float3 p1, in Unity.Mathematics.float3 p2, out Unity.Mathematics.float3 c0, out Unity.Mathematics.float3 c1, out Unity.Mathematics.float3 c2, out Unity.Mathematics.float3 c3)

Disassembly:
	0x03B94BCC LDR X8, [X0 + 0x40]
	0x03B94BD0 LDR X7, [X0 + 0x18]
	0x03B94BD4 LDR X6, [X0 + 0x28]
	0x03B94BD8 MOV X0, X8
	0x03B94BDC BR X7
	0x03B94BE0 SUB X31, X31, 0xA0
	0x03B94BE4 STP X29, X30, [X31 + 0x40]
	0x03B94BE8 STP X28, X27, [X31 + 0x50]
	0x03B94BEC STP X26, X25, [X31 + 0x60]
	0x03B94BF0 STP X24, X23, [X31 + 0x70]
	0x03B94BF4 STP X22, X21, [X31 + 0x80]
	0x03B94BF8 STP X20, X19, [X31 + 0x90]
	0x03B94BFC ADRP X29, 0x84E000
	0x03B94C00 STR S0, [X31 + 0x3C]
	0x03B94C04 ADRP X27, 0x58A000
	0x03B94C08 ADRP X28, 0x55F000
	0x03B94C0C LDRB W8, [X29 + 0xBC6]
	0x03B94C10 LDR X27, [X27 + 0x838]
	0x03B94C14 LDR X28, [X28 + 0xA90]
	0x03B94C18 MOV X19, X7
	0x03B94C1C MOV X20, X6
	0x03B94C20 MOV X22, X5
	0x03B94C24 MOV X23, X4
	0x03B94C28 MOV X24, X3
	0x03B94C2C MOV X25, X2
	0x03B94C30 MOV X26, X1
	0x03B94C34 MOV X21, X0
	0x03B94C38 TBNZ X8, 0x0, 0x3B94C5C
	0x03B94C3C ADRP X0, 0x55F000
	0x03B94C40 LDR X0, [X0 + 0xA90]
	0x03B94C44 BL 0x1C16CF4
	0x03B94C48 ADRP X0, 0x58A000
	0x03B94C4C LDR X0, [X0 + 0x838]
	0x03B94C50 BL 0x1C16CF4
	0x03B94C54 MOVZ W8, 0x1
	0x03B94C58 STRB W8, [X29 + 0xBC6]
	0x03B94C5C LDR X0, [X27]
	0x03B94C60 MOV X1, X26
	0x03B94C64 STP X31, X31, [X31 + 0x20]
	0x03B94C68 STR X31, [X31 + 0x30]
	0x03B94C6C BL 0x1C16E04
	0x03B94C70 LDR X8, [X27]
	0x03B94C74 STR X0, [X31]
	0x03B94C78 MOV X1, X25
	0x03B94C7C MOV X0, X8
	0x03B94C80 BL 0x1C16E04
	0x03B94C84 LDR X8, [X27]
	0x03B94C88 STR X0, [X31 + 0x8]
	0x03B94C8C MOV X1, X24
	0x03B94C90 MOV X0, X8
	0x03B94C94 BL 0x1C16E04
	0x03B94C98 LDR X8, [X27]
	0x03B94C9C STR X0, [X31 + 0x10]
	0x03B94CA0 MOV X1, X23
	0x03B94CA4 MOV X0, X8
	0x03B94CA8 BL 0x1C16E04
	0x03B94CAC LDR X8, [X28]
	0x03B94CB0 STR X0, [X31 + 0x18]
	0x03B94CB4 ADD X1, X31, 0x3C
	0x03B94CB8 MOV X0, X8
	0x03B94CBC BL 0x1C16E04
	0x03B94CC0 LDR X8, [X27]
	0x03B94CC4 STR X0, [X31 + 0x20]
	0x03B94CC8 MOV X1, X22
	0x03B94CCC MOV X0, X8
	0x03B94CD0 BL 0x1C16E04
	0x03B94CD4 STR X0, [X31 + 0x28]
	0x03B94CD8 ADD X1, X31, 0x0
	0x03B94CDC MOV X0, X21
	0x03B94CE0 MOV X2, X20
	0x03B94CE4 MOV X3, X19
	0x03B94CE8 BL 0x1C16CB0
	0x03B94CEC LDP X20, X19, [X31 + 0x90]
	0x03B94CF0 LDP X22, X21, [X31 + 0x80]
	0x03B94CF4 LDP X24, X23, [X31 + 0x70]
	0x03B94CF8 LDP X26, X25, [X31 + 0x60]
	0x03B94CFC LDP X28, X27, [X31 + 0x50]
	0x03B94D00 LDP X29, X30, [X31 + 0x40]
	0x03B94D04 ADD X31, X31, 0xA0
	0x03B94D08 RET
	0x03B94D0C MOV X0, X1
	0x03B94D10 MOV X1, X31
	0x03B94D14 B 0x1C16CB4
	0x03B94D18 STP X30, X23, [X31 - 0x30]!
	0x03B94D1C STP X22, X21, [X31 + 0x10]
	0x03B94D20 STP X20, X19, [X31 + 0x20]
	0x03B94D24 ADRP X20, 0x84E000
	0x03B94D28 ADRP X23, 0x5C8000
	0x03B94D2C LDRB W8, [X20 + 0xBC7]
	0x03B94D30 LDR X23, [X23 + 0x680]
	0x03B94D34 MOV X19, X0
	0x03B94D38 TBNZ X8, 0x0, 0x3B94D74
	0x03B94D3C ADRP X0, 0x587000
	0x03B94D40 LDR X0, [X0 + 0x848]
	0x03B94D44 BL 0x1C16CF4
	0x03B94D48 ADRP X0, 0x5C8000
	0x03B94D4C LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x84F000
	012 Move X27, 0x588000
	013 Move W8, [X26+3023]
	014 Move X27, [X27+2120]
	015 Move X19, X6
	016 Move X20, X5
	017 Move X22, X4
	018 Move X24, X3
	019 Move X21, X2
	020 Move X23, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x588000
	027 Move X0, [X0+2120]
	028 Call 0x1C17CF4
	029 Move X0, 0x5C9000
	030 Move X0, [X0+1672]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X26+3023], W8
	034 Move X0, [X27]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X31
	040 Call BurstCompiler.get_IsEnabled
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {74}
	045 Move X8, 0x5C9000
	046 Move X8, [X8+1672]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call ElevateQuadraticToCubicBezier_000009F5$BurstDirectCall.GetFunctionPointer
	053 Compare X0, 0
	054 JumpIfEqual {74}
	055 Move X7, X0
	056 Move X0, X25
	057 Move X1, X23
	058 Move X2, X21
	059 Move X3, X24
	060 Move X4, X22
	061 Move X5, X20
	062 Move X6, X19
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Move X27, [X31+88]
	073 CallNoReturn X7
	074 Move W8, [X25+8]
	075 Move X9, [X25]
	076 Move [X24+8], W8
	077 Move [X24], X9
	078 Move X9, -51027968
	079 Move V0, [X25]
	080 Move V1, [X25+8]
	081 Move V2, [X23]
	082 Move V3, [X23+8]
	083 Move V5, [X9+4020]
	084 Move W8, 0xAAAB
	085 NotImplemented "Instruction MOVK not yet implemented."
	086 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	087 Subtract V2, V2, V0
	088 Subtract S3, S3, S1
	089 NotImplemented "Instruction INVALID not yet implemented."
	090 Multiply S3, S3, S5
	091 Add V0, V0, V2
	092 Add S1, S1, S3
	093 Move [X22], D0
	094 Move [X22+8], S1
	095 Move V0, [X21]
	096 Move V1, [X21+8]
	097 Move V2, [X23]
	098 Move V3, [X23+8]
	099 Move X24, [X31+32]
	100 Move X23, [X31+40]
	101 Move X26, [X31+16]
	102 Move X25, [X31+24]
	103 Subtract V2, V2, V0
	104 Subtract S3, S3, S1
	105 NotImplemented "Instruction INVALID not yet implemented."
	106 Multiply S3, S3, S5
	107 Add V0, V0, V2
	108 Add S1, S1, S3
	109 Move [X20], D0
	110 Move [X20+8], S1
	111 Move W8, [X21+8]
	112 Move X9, [X21]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move [X19+8], W8
	116 Move [X19], X9
	117 Move X20, [X31+64]
	118 Move X19, [X31+72]
	119 Move X30, [X31+80]
	120 Move X27, [X31+88]
	121 Return 

