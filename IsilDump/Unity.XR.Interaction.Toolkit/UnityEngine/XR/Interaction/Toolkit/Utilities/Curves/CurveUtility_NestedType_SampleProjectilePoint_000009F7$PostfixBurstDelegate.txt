Type: UnityEngine.XR.Interaction.Toolkit.Utilities.Curves.CurveUtility/SampleProjectilePoint_000009F7$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B96784 LDP X30, X21, [X31], #0x20
	0x03B96788 RET
	0x03B9678C ADRP X8, 0x5C6000
	0x03B96790 LDR X8, [X8 + 0x758]
	0x03B96794 LDR X0, [X8]
	0x03B96798 BL 0x1C16F10
	0x03B9679C MOV X21, X0
	0x03B967A0 BL 0x3B96BF8
	0x03B967A4 CBZ X21, 0x3B967DC
	0x03B967A8 MOV X0, X21
	0x03B967AC MOV X1, X20
	0x03B967B0 BL 0x3B96CB8
	0x03B967B4 LDR X0, [X19 + 0x40]
	0x03B967B8 CBZ X0, 0x3B967DC
	0x03B967BC ADRP X8, 0x5C6000
	0x03B967C0 LDR X8, [X8 + 0x760]
	0x03B967C4 MOV X1, X20
	0x03B967C8 LDP X20, X19, [X31 + 0x10]
	0x03B967CC MOV X2, X21
	0x03B967D0 LDR X3, [X8]
	0x03B967D4 LDP X30, X21, [X31], #0x20
	0x03B967D8 B 0x2AA5098
	0x03B967DC BL 0x1C16F20
	0x03B967E0 STP X30, X19, [X31 - 0x10]!
	0x03B967E4 MOV X19, X0
	0x03B967E8 BL 0x3B967F8
	0x03B967EC MOV X0, X19
	0x03B967F0 LDP X30, X19, [X31], #0x10
	0x03B967F4 B 0x3B96964
	0x03B967F8 SUB X31, X31, 0x40
	0x03B967FC STR X30, [X31 + 0x20]
	0x03B96800 STP X20, X19, [X31 + 0x30]
	0x03B96804 ADRP X20, 0x84C000
	0x03B96808 LDRB W8, [X20 + 0xBE7]
	0x03B9680C MOV X19, X0
	0x03B96810 TBNZ X8, 0x0, 0x3B96858
	0x03B96814 ADRP X0, 0x5C6000
	0x03B96818 LDR X0, [X0 + 0x770]
	0x03B9681C BL 0x1C16CF4
	0x03B96820 ADRP X0, 0x5C6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33120256
	021 Add X8, X8, 492
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33120256
	024 Add X8, X8, 464
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33120256
	033 Add X8, X8, 336
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50831360
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 initialPosition, in Unity.Mathematics.float3 initialVelocity, in Unity.Mathematics.float3 constantAcceleration, System.Single time, out Unity.Mathematics.float3 point)

Disassembly:
	0x03B96824 LDR X0, [X0 + 0x778]
	0x03B96828 BL 0x1C16CF4
	0x03B9682C ADRP X0, 0x5C6000
	0x03B96830 LDR X0, [X0 + 0x780]
	0x03B96834 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+64]
	002 Move X6, [X0+24]
	003 Move X5, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X6

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 initialPosition, in Unity.Mathematics.float3 initialVelocity, in Unity.Mathematics.float3 constantAcceleration, System.Single time, out Unity.Mathematics.float3 point, System.AsyncCallback param_5, System.Object param_6)

Disassembly:
	0x03B96838 ADRP X0, 0x5C6000
	0x03B9683C LDR X0, [X0 + 0x788]
	0x03B96840 BL 0x1C16CF4
	0x03B96844 ADRP X0, 0x5C6000
	0x03B96848 LDR X0, [X0 + 0x790]
	0x03B9684C BL 0x1C16CF4
	0x03B96850 MOVZ W8, 0x1
	0x03B96854 STRB W8, [X20 + 0xBE7]
	0x03B96858 STP X31, X31, [X31 + 0x8]
	0x03B9685C STR X31, [X31 + 0x18]
	0x03B96860 LDR X0, [X19 + 0x40]
	0x03B96864 CBZ X0, 0x3B968E4
	0x03B96868 ADRP X8, 0x5C6000
	0x03B9686C LDR X8, [X8 + 0x770]
	0x03B96870 LDR X1, [X8]
	0x03B96874 BL 0x2AA4F58
	0x03B96878 CBZ X0, 0x3B968E4
	0x03B9687C ADRP X8, 0x5C6000
	0x03B96880 LDR X8, [X8 + 0x790]
	0x03B96884 ADRP X20, 0x5C6000
	0x03B96888 ADRP X19, 0x5C6000
	0x03B9688C LDR X1, [X8]
	0x03B96890 LDR X20, [X20 + 0x780]
	0x03B96894 LDR X19, [X19 + 0x778]
	0x03B96898 ADD X8, X31, 0x8
	0x03B9689C BL 0x275A7AC
	0x03B968A0 LDR X1, [X20]
	0x03B968A4 ADD X0, X31, 0x8
	0x03B968A8 BL 0x2C0B1F0
	0x03B968AC TBZ X0, 0x0, 0x3B968C4
	0x03B968B0 LDR X0, [X31 + 0x18]
	0x03B968B4 CBZ X0, 0x3B968E0
	0x03B968B8 MOV W1, W31
	0x03B968BC BL 0x3B96DE8
	0x03B968C0 B 0x3B968A0
	0x03B968C4 LDR X1, [X19]
	0x03B968C8 ADD X0, X31, 0x8
	0x03B968CC BL 0x2C0B1EC
	0x03B968D0 LDP X20, X19, [X31 + 0x30]
	0x03B968D4 LDR X30, [X31 + 0x20]
	0x03B968D8 ADD X31, X31, 0x40
	0x03B968DC RET
	0x03B968E0 BL 0x1C16F20
	0x03B968E4 BL 0x1C16F20
	0x03B968E8 B 0x3B968F0
	0x03B968EC B 0x3B968F0
	0x03B968F0 MOV X19, X0
	0x03B968F4 CMP W1, 0x1
	0x03B968F8 B.NE 0x3B9692C
	0x03B968FC MOV X0, X19
	0x03B96900 BL 0x3EB1AD0
	0x03B96904 LDR X20, [X0]
	0x03B96908 BL 0x3EB1AE0
	0x03B9690C ADRP X8, 0x5C6000
	0x03B96910 LDR X8, [X8 + 0x778]
	0x03B96914 ADD X0, X31, 0x8
	0x03B96918 LDR X1, [X8]
	0x03B9691C BL 0x2C0B1EC
	0x03B96920 CBZ X20, 0x3B968D0
	0x03B96924 MOV X0, X20
	0x03B96928 BL 0x1C16F18
	0x03B9692C MOV X20, X31
	0x03B96930 B 0x3B96938
	0x03B96934 MOV X19, X0
	0x03B96938 ADRP X8, 0x5C6000
	0x03B9693C LDR X8, [X8 + 0x778]
	0x03B96940 LDR X1, [X8]
	0x03B96944 ADD X0, X31, 0x8
	0x03B96948 BL 0x2C0B1EC

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X28, 0x84D000
	014 Move [X31+60], S0
	015 Move X26, 0x589000
	016 Move X27, 0x55E000
	017 Move W8, [X28+3029]
	018 Move X26, [X26+2104]
	019 Move X27, [X27+2704]
	020 Move X19, X6
	021 Move X20, X5
	022 Move X22, X4
	023 Move X23, X3
	024 Move X24, X2
	025 Move X25, X1
	026 Move X21, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {39}
	031 Move X0, 0x55E000
	032 Move X0, [X0+2704]
	033 Call 0x1C17CF4
	034 Move X0, 0x589000
	035 Move X0, [X0+2104]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X28+3029], W8
	039 Move X0, [X26]
	040 Move X1, X25
	041 Move [X31+24], X31
	042 Move [X31+32], X31
	043 Move [X31+40], X31
	044 Call 0x1C17E04
	045 Move X8, [X26]
	046 Move [X31], X0
	047 Move X1, X24
	048 Move X0, X8
	049 Call 0x1C17E04
	050 Move X8, [X26]
	051 Move [X31+8], X0
	052 Move X1, X23
	053 Move X0, X8
	054 Call 0x1C17E04
	055 Move X8, [X27]
	056 Move [X31+16], X0
	057 Add X1, X31, 60
	058 Move X0, X8
	059 Call 0x1C17E04
	060 Move X8, [X26]
	061 Move [X31+24], X0
	062 Move X1, X22
	063 Move X0, X8
	064 Call 0x1C17E04
	065 Move [X31+32], X0
	066 Add X1, X31, 0
	067 Move X0, X21
	068 Move X2, X20
	069 Move X3, X19
	070 Call 0x1C17CB0
	071 Move X20, [X31+128]
	072 Move X19, [X31+136]
	073 Move X22, [X31+112]
	074 Move X21, [X31+120]
	075 Move X24, [X31+96]
	076 Move X23, [X31+104]
	077 Move X26, [X31+80]
	078 Move X25, [X31+88]
	079 Move X28, [X31+64]
	080 Move X27, [X31+72]
	081 Move X30, [X31+48]
	082 Add X31, X31, 144
	083 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B9694C CBNZ X20, 0x3B96958
	0x03B96950 MOV X0, X19
	0x03B96954 BL 0x1D2C690

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

