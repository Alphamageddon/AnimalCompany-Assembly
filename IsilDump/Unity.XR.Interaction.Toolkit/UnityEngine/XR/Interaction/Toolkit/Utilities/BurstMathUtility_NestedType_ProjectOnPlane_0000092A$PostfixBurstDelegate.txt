Type: UnityEngine.XR.Interaction.Toolkit.Utilities.BurstMathUtility/ProjectOnPlane_0000092A$PostfixBurstDelegate

Method: System.Void .ctor(System.Object param_0, System.IntPtr param_1)

Disassembly:
	0x03B8A6DC STR X31, [X31 + 0x18]
	0x03B8A6E0 BL 0x1C16E04
	0x03B8A6E4 LDR X8, [X26]
	0x03B8A6E8 STR X0, [X31]
	0x03B8A6EC MOV X1, X23
	0x03B8A6F0 MOV X0, X8
	0x03B8A6F4 BL 0x1C16E04
	0x03B8A6F8 LDR X8, [X25]
	0x03B8A6FC STR X0, [X31 + 0x8]
	0x03B8A700 MOV X1, X22
	0x03B8A704 MOV X0, X8
	0x03B8A708 BL 0x1C16E04
	0x03B8A70C STR X0, [X31 + 0x10]
	0x03B8A710 ADD X1, X31, 0x0
	0x03B8A714 MOV X0, X21
	0x03B8A718 MOV X2, X20
	0x03B8A71C MOV X3, X19
	0x03B8A720 BL 0x1C16CB0
	0x03B8A724 LDP X20, X19, [X31 + 0x60]
	0x03B8A728 LDP X22, X21, [X31 + 0x50]
	0x03B8A72C LDP X24, X23, [X31 + 0x40]
	0x03B8A730 LDP X26, X25, [X31 + 0x30]
	0x03B8A734 LDP X30, X27, [X31 + 0x20]
	0x03B8A738 ADD X31, X31, 0x70
	0x03B8A73C RET
	0x03B8A740 MOV X0, X1
	0x03B8A744 MOV X1, X31
	0x03B8A748 B 0x1C16CB4
	0x03B8A74C STP X30, X23, [X31 - 0x30]!
	0x03B8A750 STP X22, X21, [X31 + 0x10]
	0x03B8A754 STP X20, X19, [X31 + 0x20]
	0x03B8A758 ADRP X20, 0x858000
	0x03B8A75C ADRP X23, 0x5D2000
	0x03B8A760 LDRB W8, [X20 + 0xB37]
	0x03B8A764 LDR X23, [X23 + 0xC8]
	0x03B8A768 MOV X19, X0
	0x03B8A76C TBNZ X8, 0x0, 0x3B8A7A8
	0x03B8A770 ADRP X0, 0x5D2000
	0x03B8A774 LDR X0, [X0 + 0xC8]
	0x03B8A778 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+8]
	006 Move [X0+32], X1
	007 Move [X0+40], X2
	008 Move X19, X0
	009 Move X20, X1
	010 Move [X0+16], X8
	011 Move W21, [X2+82]
	012 Move [X0+64], X0
	013 Move X0, X2
	014 Call 0x1C17D84
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {22}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, -33075200
	021 Add X8, X8, 316
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, -33075200
	024 Add X8, X8, 292
	025 Move [X19+24], X8
	026 Compare X20, 0
	027 JumpIfEqual {40}
	028 Move X8, [X19+16]
	029 Move X9, [X19+32]
	030 Move [X19+24], X8
	031 Move [X19+64], X9
	032 Move X8, -33075200
	033 Add X8, X8, 196
	034 Move [X19+56], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X1, -50782208
	041 Add X1, X1, 3811
	042 Move X0, X31
	043 Call 0x1C17F3C
	044 Move X1, X31
	045 Call 0x1C17DEC

Method: System.Void Invoke(in Unity.Mathematics.float3 vector, in Unity.Mathematics.float3 planeNormal, out Unity.Mathematics.float3 projectedVector)

Disassembly:
	0x03B8A77C ADRP X0, 0x5D2000
	0x03B8A780 LDR X0, [X0 + 0x1C8]
	0x03B8A784 BL 0x1C16CF4
	0x03B8A788 ADRP X0, 0x591000
	0x03B8A78C LDR X0, [X0 + 0x848]

ISIL:
	001 Move X8, [X0+64]
	002 Move X5, [X0+24]
	003 Move X4, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X5

Method: System.IAsyncResult BeginInvoke(in Unity.Mathematics.float3 vector, in Unity.Mathematics.float3 planeNormal, out Unity.Mathematics.float3 projectedVector, System.AsyncCallback param_3, System.Object param_4)

Disassembly:
	0x03B8A790 BL 0x1C16CF4
	0x03B8A794 ADRP X0, 0x5D2000
	0x03B8A798 LDR X0, [X0 + 0x1D0]
	0x03B8A79C BL 0x1C16CF4
	0x03B8A7A0 MOVZ W8, 0x1
	0x03B8A7A4 STRB W8, [X20 + 0xB37]
	0x03B8A7A8 LDR X8, [X23]
	0x03B8A7AC LDR W9, [X8 + 0xE0]
	0x03B8A7B0 CBNZ W9, 0x3B8A7C0
	0x03B8A7B4 MOV X0, X8
	0x03B8A7B8 BL 0x1C16DFC
	0x03B8A7BC LDR X8, [X23]
	0x03B8A7C0 LDR X9, [X8 + 0xB8]
	0x03B8A7C4 LDR X10, [X9]
	0x03B8A7C8 CBNZ X10, 0x3B8A838
	0x03B8A7CC LDR W10, [X8 + 0xE0]
	0x03B8A7D0 CBNZ W10, 0x3B8A7E4
	0x03B8A7D4 MOV X0, X8
	0x03B8A7D8 BL 0x1C16DFC
	0x03B8A7DC LDR X8, [X23]
	0x03B8A7E0 LDR X9, [X8 + 0xB8]
	0x03B8A7E4 ADRP X8, 0x591000
	0x03B8A7E8 LDR X20, [X9 + 0x8]
	0x03B8A7EC LDR X8, [X8 + 0x848]
	0x03B8A7F0 LDR X0, [X8]
	0x03B8A7F4 ADRP X8, 0x5D2000
	0x03B8A7F8 LDR X8, [X8 + 0x1D0]
	0x03B8A7FC LDR X21, [X8]
	0x03B8A800 ADRP X8, 0x5D2000
	0x03B8A804 LDR X8, [X8 + 0x1C8]
	0x03B8A808 LDR W9, [X0 + 0xE0]
	0x03B8A80C LDR X22, [X8]
	0x03B8A810 CBNZ W9, 0x3B8A818
	0x03B8A814 BL 0x1C16DFC
	0x03B8A818 MOV X0, X20
	0x03B8A81C MOV X1, X21
	0x03B8A820 MOV X2, X22
	0x03B8A824 MOV X3, X31
	0x03B8A828 BL 0x36FAD70
	0x03B8A82C LDR X8, [X23]
	0x03B8A830 LDR X9, [X8 + 0xB8]
	0x03B8A834 STR X0, [X9]
	0x03B8A838 LDR W9, [X8 + 0xE0]
	0x03B8A83C CBNZ W9, 0x3B8A84C
	0x03B8A840 MOV X0, X8
	0x03B8A844 BL 0x1C16DFC
	0x03B8A848 LDR X8, [X23]
	0x03B8A84C LDR X8, [X8 + 0xB8]
	0x03B8A850 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X26, 0x859000
	012 Move X25, 0x595000
	013 Move W8, [X26+2850]
	014 Move X25, [X25+2104]
	015 Move X19, X5
	016 Move X20, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x595000
	026 Move X0, [X0+2104]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+2850], W8
	030 Move X0, [X25]
	031 Move X1, X24
	032 Move [X31+24], X31
	033 Call 0x1C17E04
	034 Move X8, [X25]
	035 Move [X31], X0
	036 Move X1, X23
	037 Move X0, X8
	038 Call 0x1C17E04
	039 Move X8, [X25]
	040 Move [X31+8], X0
	041 Move X1, X22
	042 Move X0, X8
	043 Call 0x1C17E04
	044 Move [X31+16], X0
	045 Add X1, X31, 0
	046 Move X0, X21
	047 Move X2, X20
	048 Move X3, X19
	049 Call 0x1C17CB0
	050 Move X20, [X31+96]
	051 Move X19, [X31+104]
	052 Move X22, [X31+80]
	053 Move X21, [X31+88]
	054 Move X24, [X31+64]
	055 Move X23, [X31+72]
	056 Move X26, [X31+48]
	057 Move X25, [X31+56]
	058 Move X30, [X31+32]
	059 Add X31, X31, 112
	060 Return X0

Method: System.Void EndInvoke(System.IAsyncResult param_0)

Disassembly:
	0x03B8A854 LDR X8, [X8]
	0x03B8A858 STR X8, [X19]
	0x03B8A85C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, X1
	002 Move X1, X31
	003 Call 0x1C17CB4
	004 Return 

